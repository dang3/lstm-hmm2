xchg
jl
pop
pushf
mov
popf
das
pop
or
sub
movsb
lret
lock
add
loopne
add
mov
push
stc
cltd
cmpl
test
sti
or
dec
mov
int
sti
mov
fucomp
lret
fidivrs
aad
loop
mov
sbb
pop
call
mov
xchg
or
lcall
xchg
mov
out
lea
int
sbb
push
jnp
lods
xchg
repnz
pop
xchg
xchg
jb
dec
loope
movsb
mov
xor
mov
mov
sub
xor
mov
adc
popf
addr16
pop
adc
shr
cmp
sub
dec
jae
inc
lods
lock
cmp
imul
or
int
stc
push
jns
call
fneni(8087
addl
jno
sub
lahf
xor
jno
test
test
cmp
out
sub
int
dec
stos
movsl
cmp
int3
sbb
loope
leave
jp
jnp
inc
and
lret
daa
popa
pop
jmp
addr16
push
cmovns
pop
andl
xchg
rolb
inc
lret
xor
aam
push
pop
inc
movsb
enter
loopne
mov
lods
pusha
clc
pushf
stc
neg
movb
inc
mov
bt
pushl
rol
pushf
dec
cmp
clc
cmc
neg
pushf
lea
call
jmp
sbb
pusha
xor
push
mov
bt
mov
cmc
cmp
pusha
jmp
rol
pop
xor
sub
ret
outsb
ret
pop
notl
or
jg
mov
in
fisubrl
dec
mov
sbb
sub
cmpsl
xchg
sbb
js
inc
dec
adc
call
ficoms
mov
and
xchg
inc
mov
stc
incl
add
add
add
and
call
add
dec
gs
popa
addr16
outsl
js
add
inc
clc
cmp
not
mov
call
pusha
stc
add
mov
pushl
lea
jmp
push
movl
call
pop
shrb
rolb
xor
add
movsl
cli
cwtl
insb
test
inc
daa
mov
test
jmp
mov
ret
xchg
xchg
lea
mov
into
sub
sar
and
or
ljmp
push
add
add
lahf
orl
stc
xchg
into
int
and
mov
xchg
xor
push
into
in
mov
or
push
int
add
inc
movsl
adc
add
loopne
inc
xchg
mov
mov
inc
mov
fs
jp
je
shrd
shl
sbb
add
bswap
mov
push
jmp
movb
pushf
movl
call
pushl
jmp
shr
stc
clc
clc
cmp
pusha
call
mov
cmp
add
bswap
or
sbb
movl
movzbw
mov
test
clc
push
cmc
cmp
push
pusha
pushl
lea
jbe
xadd
inc
bsf
sub
add
sar
mov
test
mov
add
add
rcr
ror
shrd
shr
shrd
btr
mov
shld
cmc
add
lea
pusha
push
mov
jmp
movl
pusha
pushf
lea
jmp
pushf
pushl
lea
call
call
incl
fld
jo
icebp
mov
lods
dec
loop
shll
sbb
xchg
sub
add
xor
outsb
xchg
inc
outsl
inc
xlat
fwait
dec
not
mov
jae
pop
lret
lock
lret
aam
mov
cmp
rcll
roll
jnp
xchg
lcall
scas
jp
xchg
xor
push
cli
or
xchg
jge
sbb
pop
cmp
or
xor
push
inc
into
sbb
jns
pop
scas
dec
sbb
jecxz
xchg
or
aas
cmc
das
arpl
adc
pop
inc
mov
shr
sub
add
and
jae
stc
cmp
pusha
lea
ja
call
test
add
add
call
in
lock
outsb
lds
imul
lret
mov
sarl
inc
pop
movsb
nop
mov
mov
xor
or
inc
out
cwtl
mov
sub
sub
ds
sahf
mov
fbld
cli
fld
mov
and
push
mov
cld
add
jmp
iret
subl
or
or
fldenv
mov
ljmp
pop
inc
mov
adc
and
adc
add
dec
sahf
mov
add
pop
sarl
xchg
aas
dec
test
stc
cmp
inc
ds
lret
add
dec
sub
mov
lcall
jnp
enter
ds
pushl
add
cwtl
pop
pop
icebp
mov
sbb
jb
imull
fmuls
out
xlat
iret
test
cmc
push
mov
nop
aad
jg
adc
lods
adc
mov
andb
inc
lahf
fwait
sahf
mov
push
movl
pushl
lea
jmp
add
pusha
mov
pushf
push
lea
jmp
pushf
adc
mov
pushf
call
or
mov
pop
mov
jmp
arpl
jg
dec
push
stos
lahf
idivb
add
mov
lahf
dec
and
int
cmp
data16
push
mov
bound
out
pushf
imul
sub
push
pop
fidivrl
mov
loope
mov
jle
clc
cli
shl
rclb
aam
xor
push
fidivl
inc
push
adc
ds
xchg
jno
adc
dec
cld
enter
fidivl
fdivl
xchg
xchg
stos
fidivs
jno
add
push
ret
imul
and
fists
pop
subl
inc
inc
fbstp
xchg
scas
mov
adc
cmp
add
mov
mov
jne
sarl
or
fnstsw
xchg
push
pop
movsb
mov
aaa
icebp
sbb
xabort
stos
outsb
xchg
rcll
push
mov
ljmp
decl
xor
dec
lock
pop
scas
dec
out
jg
incl
adc
jo
pusha
shl
sti
cmp
inc
and
adc
inc
fcomip
lds
shl
mov
int3
push
mov
incl
testb
jl
sbb
ret
mov
sub
or
jge
sub
pop
mov
push
mov
fsubrl
sbb
movsl
cld
xchg
sub
and
rclb
xchg
mov
mov
int
inc
lahf
in
jl
or
xchg
pusha
lcall
pop
nop
or
cmp
pop
pop
inc
sahf
adc
add
es
xor
and
cmp
mov
pop
push
dec
decl
push
cld
cld
ljmp
cmp
push
or
mov
gs
adc
dec
add
int3
test
inc
popf
cltd
mov
or
call
lea
call
push
pushf
lea
jae
call
str
jmp
divl
lds
ret
sbb
jecxz
shrl
dec
cld
popa
mov
std
js
mov
lcall
test
icebp
rolb
jnp
and
aad
jnp
daa
leave
inc
push
das
shrl
jle
in
movsl
aad
daa
dec
mov
cmp
fwait
cs
mov
push
cmc
fiaddl
mov
xor
iret
add
xlat
push
les
mov
lret
repz
std
jae
icebp
loopne
lds
fisttpll
inc
inc
imulb
pop
xchg
push
lret
popf
pop
inc
pushf
nop
test
inc
and
pushf
push
mov
call
cmc
pusha
repnz
mov
pusha
lea
jne
sbb
shl
mov
or
cmc
sub
test
rol
mov
clc
sub
pusha
clc
jmp
pop
and
ret
lock
and
mov
dec
push
loopne
aad
add
loop
mov
xchg
mov
push
mov
into
push
cmpsl
scas
push
dec
test
fsubrs
add
clc
mov
and
xor
pop
inc
pushf
outsl
lret
ret
fst
and
scas
jge
and
stos
rcll
lret
and
jmp
test
cmp
jp
cmp
fbld
mov
fildll
xchg
ret
xor
add
cs
mulps
xchg
sbb
ds
lods
sub
into
and
sbb
push
and
xor
pop
cmp
xchg
xor
pusha
cmp
xchg
enter
int
jg
mov
or
cmpsb
dec
sub
out
je
mov
fistpl
xchg
mov
shrb
nop
aaa
sbb
jmp
add
stos
adc
push
aas
jl
pop
mov
or
arpl
mov
lock
sbb
mov
test
cmp
imul
int
jbe
xor
add
fs
iret
sti
adc
jp
mov
xlat
insb
mov
push
mov
test
or
sarb
dec
fst
cmc
inc
dec
pusha
sbb
repz
jecxz
adc
xlat
pop
jmp
mov
lcall
or
inc
popa
iret
inc
and
inc
pushf
and
pushl
lea
je
movsbl
rol
add
call
call
ror
clc
pushf
lea
je
neg
jmp
add
not
push
and
rcl
push
rcl
shl
push
bsf
pushf
call
lea
je
lea
bswap
xchg
jmp
jne
gs
xor
fs
insb
add
in
xor
mov
mov
sbb
mov
xor
fwait
push
dec
pop
mov
mov
sar
lcall
or
xor
movsl
xorl
mov
add
adc
ficoml
xchg
leave
sub
dec
or
div
push
lods
mov
or
push
cs
sahf
add
add
xor
das
xorl
add
in
jge
lcall
ss
inc
lcall
push
and
add
rclb
adc
add
adc
add
add
add
add
add
adc
add
pop
adc
add
add
pop
adc
std
outsb
push
leave
loopne
mov
sub
adc
imul
jo
fstpl
sbb
movsb
mov
and
or
notl
jnp
stos
mov
cltd
jae
les
lea
inc
adc
add
pop
insl
aas
adc
or
mov
jl
and
sub
fstpt
es
test
fdivs
subl
jno
loope
int3
cmp
in
jo
sub
or
sarl
xchg
push
xchg
mov
mov
or
fbld
incb
lds
mov
mov
ljmp
jne
push
mov
pop
jns,pt
cltd
adc
lret
inc
cmp
stos
ficoml
sbb
popa
ds
ss
loopne
sti
popf
int
out
shlb
add
ret
lcall
xor
xchg
pusha
sbb
adc
fistl
in
lret
data16
push
cmp
in
sbb
inc
nop
push
ljmp
jnp
xchg
ficoml
subb
es
sbb
cltd
sarb
pusha
ss
cs
mov
movsb
jp
add
add
mov
es
jne
insl
lock
popa
xchg
mov
xor
mov
testl
aad
and
sahf
dec
mov
lret
popf
dec
adc
inc
outsb
mov
and
inc
sahf
inc
mov
pop
jbe
jl
jae
xor
js
rcl
movsl
xchg
in
pusha
adc
xlat
leave
mov
jae
mov
cmc
ficomps
iret
out
push
sub
pop
pop
push
jp
andl
in
call
pop
sbb
mov
sahf
lods
mov
xchg
jmp
or
mov
aad
mov
sub
es
sub
movsl
jp
cmp
mov
movsb
xor
fstps
pop
mov
enter
out
lret
mov
imul
jle
les
dec
mov
inc
xchg
stc
test
mov
cmp
and
xchg
dec
jmp
stos
inc
call
mov
mov
mov
xor
cwtl
insb
dec
or
into
fadd
int
push
fwait
shll
mov
lret
and
sbb
out
xchg
hlt
stos
into
sub
movsl
mov
sbb
lods
out
das
shrl
pushf
adc
sahf
mov
jo
popa
cld
jle
jne
mov
std
aaa
cmp
insb
movsl
xchg
daa
sub
imul
ja
loope
jno
mov
adc
mov
popf
adcl
jnp
and
pop
insb
das
mov
cmc
ds
rolb
test
pop
cmp
loopne
or
nop
push
pop
jle
or
movsb
call
sub
jns
and
psadbw
dec
les
orb
xchg
js
nop
mov
lock
cli
loope
xorb
sbb
mov
popa
sub
je
lea
mov
xlat
es
mov
push
icebp
sbb
and
push
fs
repnz
jo
lock
mov
xchg
sbb
mov
and
sar
notb
mov
adc
test
cmp
push
scas
nop
stc
stos
inc
out
jmp
movsb
int
cli
inc
fadd
repz
add
cs
mov
lods
std
arpl
into
push
mov
subb
mov
je
mov
xlat
dec
push
shlb
jo
mov
or
xor
jg
std
sarb
jnp
clc
loopne
daa
lret
push
dec
repnz
or
aas
fs
or
dec
jecxz
xchg
push
sbb
jbe
xor
stc
loope
xlat
fiadds
mov
add
decb
aaa
loop
loopne
icebp
adc
test
jbe
cmovo
sub
call
dec
cwtl
fucomip
dec
das
lret
fdivs
insb
loop
sbb
jg
frstor
dec
sub
inc
add
rcrl
push
movsl
xchg
mov
pop
and
pop
movsl
popf
add
add
dec
pop
outsl
pop
inc
xor
sbb
lret
push
and
jecxz
push
and
into
push
xchg
ret
mov
and
or
mov
mov
mov
push
imul
cmp
gs
das
cld
push
stc
push
xor
cli
cs
jl
cmp
divl
jb
mov
les
mov
mov
xlat
fcmovne
pop
test
mov
pop
sbb
nop
pop
push
popa
repnz
xchg
std
lret
jge
sub
jge
dec
int
cmc
sub
std
mov
pop
shrb
inc
cmpsb
mov
mov
leave
repnz
pop
aam
stc
les
in
imul
xchg
mov
push
xchg
shrl
xor
cmp
fcomip
movsl
cmp
pop
in
mov
pop
dec
and
dec
jmp
adc
call
mov
lods
mov
jl
inc
and
test
mov
out
push
mov
in
add
mov
mov
rcrl
adc
cmp
call
addr16
movsl
aas
cmpsl
lock
shrb
jle
outsb
pop
pop
fcompl
sub
cs
mov
stc
dec
neg
mov
cmp
or
mov
in
leave
aam
push
std
pushf
or
testb
mov
rorl
and
clc
jl
jo
fnstenv
cmc
or
and
fisttpl
mov
fdivrs
stc
das
or
jno
nop
mov
sub
not
adc
mov
sub
mov
mov
mov
movsl
int3
mov
nop
jg
out
and
in
inc
popa
adc
loopne
pop
xchg
inc
or
dec
jge
leave
add
push
fnstsw
jg
mov
and
or
insb
inc
cmp
mov
test
in
xor
dec
sbb
cltd
scas
cltd
mov
jnp
imul
fisubrl
fdiv
jmp
fists
ret
loop
mov
push
call
inc
xchg
dec
incb
mov
push
add
pop
sub
dec
mov
lret
jp
push
and
pop
cmp
xor
jge
xor
push
mov
dec
dec
jno
inc
jne
push
pusha
sar
adc
mov
shlb
inc
int
pop
ror
pop
xchg
mov
gs
push
xor
andl
push
pushl
mov
subb
push
xchg
inc
fwait
mov
mull
mov
hlt
shlb
je
or
sub
inc
and
add
leave
in
sbb
iret
jecxz
dec
or
idiv
add
insb
and
mov
addr16
in
out
mov
xchg
xchg
cmp
inc
stos
mov
cmp
aad
in
sti
mov
mov
loope
clc
shrl
or
xor
push
push
xchg
cltd
fiaddl
daa
adc
pop
push
add
sarb
scas
test
add
fcoms
icebp
test
lods
push
dec
lahf
mov
fs
repnz
out
outsl
inc
adcl
mov
jae
pusha
mov
negl
mov
push
mov
push
aas
loop
and
aam
push
lret
popf
xchg
jl
es
or
or
or
fists
rcrl
fidivl
mov
push
cmp
mov
xor
repnz
int
test
push
pop
leave
jmp
int
cmp
es
and
stos
mov
inc
ds
hlt
cmc
jns
insb
push
dec
outsl
in
push
push
adc
sbb
and
into
ret
inc
mov
shll
cmp
cli
jp
pushf
js
mov
cmp
out
sahf
movsb
inc
xchg
rcl
enter
sub
shrl
hlt
das
sbb
cmpsb
jmp
jmp
lret
shll
mov
movsb
call
hlt
fadds
and
mov
repnz
adcl
xor
push
xchg
sbbb
in
testl
ja
xlat
mov
fildl
ss
cltd
nop
xchg
or
bound
cltd
sub
mov
fdivr
ffree
movsl
es
pop
mov
shl
xchg
mov
xchg
mov
lea
add
movsl
repz
mov
ss
jle
test
pushf
in
inc
add
mov
dec
fucom
or
sbb
fisttpll
push
icebp
cmp
dec
jno
cld
jae
pushf
mov
aas
sub
sbb
dec
daa
jp
icebp
mov
jl
icebp
ds
lahf
aam
cs
cmc
out
lods
inc
loope
mov
sub
sub
push
pop
popa
loopne
dec
std
int
loop
fmul
inc
fs
movsl
test
mov
push
jae
and
shlb
ret
xchg
xlat
xor
cli
adc
xchg
jmp
into
bound
test
sbb
ret
mov
xor
aaa
test
mov
arpl
lea
mov
mov
popf
jno
into
mov
or
imul
js
insb
addr16
outsl
sbb
mov
mov
loopne
mov
mov
sub
insl
mov
fstps
cmpsb
push
xchg
pop
rcrb
add
js
sbb
push
outsb
sti
sub
pop
movsb
mov
jg
arpl
in
into
subl
iret
push
adc
sub
mov
enter
adc
test
inc
mov
inc
mov
sbb
out
sbbb
fdivrp
in
out
mov
int3
test
iret
fldl
mov
arpl
cmpb
repnz
in
xchg
sub
inc
add
xchg
ljmp
sub
and
sub
and
jno
out
call
ds
mov
inc
aaa
adc
clc
adc
std
into
push
push
cmc
call
jmp
pop
mov
gs
mov
fidivs
sbb
xchg
mov
mov
nop
or
sub
adcl
or
shrl
adc
inc
enter
and
or
mov
jno
mov
in
mov
lret
scas
dec
arpl
divb
xchg
add
mov
adc
mov
mov
out
shrb
setnp
add
test
sbb
nop
loop
inc
sub
inc
and
jle
cmp
xchg
mov
xor
add
sbb
scas
scas
aaa
stos
jb
mov
lea
stos
sti
jae
sbb
sbb
dec
addb
fistl
data16
dec
xor
and
sbb
or
dec
test
jns
add
and
push
xor
lds
xlat
ss
dec
clc
jno
add
jb
sbb
cwtl
push
sbb
sbb
movsb
enter
mov
fldl
inc
mov
das
jecxz
mov
add
add
adc
sub
mov
mov
cli
shrb
sbbb
push
jecxz
int
fs
mov
jp
xor
add
stos
rol
push
leave
adc
ja,pt
or
pop
fdivrl
mov
adc
fs
jno
xchg
cmpsb
into
or
dec
clc
rorb
adc
popa
add
pushf
loop
mov
mov
xchg
inc
mov
push
mov
add
lods
mov
dec
add
pop
jns
sbb
out
cmpsb
xor
cld
jno
cmp
dec
movsl
pop
inc
lea
repnz
inc
pop
clc
btr
mov
pusha
push
test
sub
clc
pushl
popl
test
push
cmc
cmp
movb
pushf
lea
ja
and
sub
shr
and
xor
cmp
add
not
movzbw
stc
neg
mov
add
cmp
not
dec
mov
pusha
movb
bt
repnz
call
movl
jmp
pushf
lea
call
push
lea
jae
bt
bt
call
test
add
mov
pushl
lea
jmp
bswap
movzbw
mov
shld
mov
bts
shr
shld
mov
pushf
jmp
push
jmp
sbb
mov
xor
bts
mov
rcr
movzbw
inc
movsbl
mov
push
or
pushl
lea
je
cmc
or
push
pushl
lea
je
lea
xor
daa
jmp
cmp
not
lea
call
mov
cmp
call
daa
sub
ss
jb
mov
push
sub
pop
repz
in
xlat
xor
adc
mov
inc
cmpsb
les
inc
fs
pop
loopne
mov
cmp
sub
mov
sub
sub
pop
cmpb
pusha
and
xchg
decb
lods
mov
rolb
sbb
int3
adc
in
adc
push
jne
and
scas
adc
enter
leave
push
mov
xchg
in
add
adc
ficoml
fcmovu
ss
leave
mov
push
stos
roll
dec
xor
jecxz
scas
mov
xor
js
cltd
addr16
inc
decl
pop
icebp
xor
dec
mov
pop
xor
sahf
mov
mov
insl
push
ret
dec
pop
mov
cmpsb
or
sub
out
ds
subl
xor
sub
and
xlat
dec
std
push
or
into
jne
xchg
cmp
loopne
pop
mov
pop
fucomip
push
jno
lret
out
rol
arpl
rcl
sub
xchg
xor
arpl
nopl
mov
stc
sti
lock
testb
mov
and
popa
dec
data16
dec
lcall
and
sbb
adc
or
add
push
sbb
mov
sub
sbb
and
addb
lcall
lea
ja
stc
sub
insl
test
push
cmp
in
addr16
sub
neg
inc
fsubp
push
lret
fmul
sbb
js
and
and
mov
xlat
pop
inc
mov
cld
movb
lea
je
pushf
call
cmp
pusha
lea
jb
jmp
pusha
call
pushf
pusha
movb
lea
ja
shl
sub
movsbl
bts
btr
add
rcl
adc
mov
call
bt
push
neg
call
push
pusha
mov
mov
mov
movw
pushl
ret
movzbl
mov
bswap
mov
lea
jg
pusha
pusha
mov
lea
pushf
lea
mov
mov
pushf
pushf
pushl
ret
inc
mov
sub
out
ret
jl
das
dec
cmpl
inc
add
insl
inc
and
adc
out
dec
adc
dec
ret
jmp
dec
mov
decl
push
adc
scas
jb
xor
mov
mov
pop
xchg
xchg
jge
dec
jno
inc
cmpsb
rcrl
lret
xchg
mov
pushf
shll
mov
xchg
mov
js
daa
mov
cli
je
daa
sbb
pop
inc
mov
je
add
addr16
or
mov
test
stc
lret
nop
mov
mov
fdivl
push
enter
fistpll
jmp
dec
fmul
sub
jnp
xchg
ret
sbb
hlt
jbe
sub
sarb
sub
sbb
dec
test
mov
mov
jmp
addb
icebp
stos
and
fs
adc
sub
lea
sahf
push
andb
jnp
stos
or
mov
loopne
scas
addr16
jecxz
pop
scas
pop
pop
pop
pop
adc
push
addr16
adc
sbb
int3
stos
fsubrs
shll
sbb
stos
xchg
test
and
fs
divl
das
adc
xchg
cld
push
iret
xchg
pushf
cmp
mov
inc
jno
test
imul
ret
es
and
ficoml
mov
repz
roll
cmc
leave
or
pushf
xchg
pop
mov
cmp
in
dec
xchg
xor
xor
out
lds
punpckhbw
push
xchg
lret
ds
xchg
mov
sbb
mov
in
les
sbbb
out
cwtl
or
fcoms
inc
xchg
lock
div
dec
pop
aas
cmp
xchg
cmp
pop
mov
jecxz
sbb
or
mov
cmc
inc
cmp
repnz
aas
dec
xor
pop
jno
dec
pop
in
xor
sbb
xorb
mov
das
fimull
fmuls
dec
push
in
xchg
sub
add
dec
xchg
or
cwtl
xchg
pop
inc
mov
enter
push
lds
mov
mov
dec
out
fwait
adc
iret
cmc
pop
push
mov
cmp
pop
inc
xchg
mov
rcr
shr
push
aam
mov
push
sub
bsr
inc
shl
movzbw
push
movzbw
shld
push
mov
aas
push
shl
stc
neg
push
cmp
neg
sar
bsr
mov
jmp
setae
lea
mov
mov
movl
lea
ja
pusha
lea
jb
bt
cmp
cmpb
jmp
cmp
test
xor
pushf
movl
repnz
pushf
jmp
jmp
cmp
cmc
stc
cmpb
push
mov
pusha
lea
jne
bts
mov
xor
ror
seta
cmp
rol
mov
bt
add
pushf
pusha
pusha
lea
jmp
lea
ja
push
lea
jb
cmc
clc
cmpb
pusha
lea
jne
neg
mov
stc
test
call
pushf
cmp
push
pusha
lea
jae
sub
xadd
bts
clc
mov
bt
mov
bt
mov
cmc
test
bt
xor
pushf
call
push
jmp
call
cmp
mov
stc
clc
test
mov
push
lea
je
jmp
stc
jmp
mov
into
pop
loope
xchg
sub
and
shrl
ja
ljmp
xor
mov
cld
add
xor
mov
or
int3
shlb
adc
xor
addr16
xchg
push
inc
adc
aas
gs
xchg
inc
int
mov
pop
xor
testb
ljmp
jp
push
sbb
int3
js
add
test
outsl
pop
inc
out
shrb
popa
push
and
sti
loopne
ror
add
cmp
add
inc
test
mov
mov
sar
mov
nop
push
ja
mov
push
lods
mov
fistl
sbb
mov
sbb
inc
test
mov
and
sarl
mov
dec
pop
mov
dec
or
ret
hlt
idivl
sbb
sub
icebp
cli
adc
cmp
idivb
lahf
dec
loope
cli
jbe
icebp
test
lret
cli
mov
sub
pusha
mov
imull
jb,pt
pop
icebp
sub
gs
aaa
jae
fcmovbe
mov
pusha
xchg
stc
cmpsb
adc
pop
mov
add
shrb
scas
ja
lods
and
repnz
scas
not
jb
test
cs
add
pushf
iret
sahf
fcomps
pop
inc
add
and
ja
cli
fsubrl
add
xlat
cld
popa
pop
xor
scas
not
cmp
repnz
dec
sub
and
stos
sbb
into
gs
mov
mov
loopne
ret
scas
push
rorb
and
mov
scas
not
in
adc
mov
and
add
cmp
dec
pop
inc
xor
or
je
or
pop
pop
or
rcr
mov
push
mov
pusha
and
lea
jo
pusha
push
clc
add
push
movb
pushf
push
lea
jmp
arpl
aaa
push
movsl
jno
inc
inc
out
or
bound
psubsb
mov
and
mov
hlt
scas
aaa
fiadds
jmp
or
loop
shll
les
jmp
xchg
pop
ja
add
je
gs
and
or
push
push
fidivl
in
mov
stc
outsb
sub
push
nop
or
pop
inc
sbbl
pusha
jmp
call
call
push
fidivl
ljmp
or
adc
jg
xor
mov
hlt
inc
outsb
fcoml
cmc
mov
or
test
das
test
fists
xchg
out
sub
pusha
xchg
mov
push
dec
stos
push
cli
out
mov
jns
adc
inc
subl
mov
jne
push
bsf
aad
sub
cmc
mov
stc
add
pushf
mov
pusha
lea
jmp
lea
jns
jae
push
pusha
movl
lea
jmp
add
add
call
or
pushl
push
pushf
call
call
es
mov
xchg
inc
mov
or
mov
aaa
pushf
shll
jg
fwait
andb
ret
bound
arpl
jo
adc
int3
mov
jl
cmp
jle
jmp
sbb
pusha
les
daa
popa
ficoms
sub
fdiv
inc
xchg
dec
in
ret
pop
jge
aaa
and
ds
das
sub
fmull
lds
jge
inc
sbbl
bswap
mov
pushf
not
jmp
std
jle
push
xor
cmp
xor
cld
adc
xor
out
jb
jmp
or
push
mov
pop
arpl
lret
aad
scas
xchg
adc
adc
xor
rolb
into
pop
mov
push
fmulp
fwait
mov
jo
mov
sub
movl
add
xor
fidivs
mov
mov
adc
mov
push
stc
pop
inc
orl
fdivr
lcall
mov
add
mov
push
pushl
ret
mov
movw
not
mov
call
mov
add
call
lea
ja
push
push
lea
jb
pusha
cmp
cmpb
movb
lea
jne
inc
mov
mov
call
xor
sub
mov
pusha
clc
cmc
and
cmc
test
push
jmp
pusha
lea
je
jmp
push
clc
shr
or
push
movsbw
shl
push
or
or
aad
push
and
call
add
xchg
outsl
dec
movsl
jnp
sub
into
inc
add
test
and
mov
inc
xor
pop
cmpsb
popf
aaa
popa
shr
jb
adc
xchg
mov
divb
inc
adc
test
pop
imul
push
xor
mov
std
lret
add
and
adc
push
jle
lods
mov
inc
jg
sub
fs
jae
cmc
cmp
call
pushf
lea
jne
jmp
push
pushf
mov
lea
pusha
sets
mov
lea
dec
mov
push
pusha
pusha
push
mov
call
stc
mov
fwait
sub
sub
push
addr16
pop
mov
movsl
cld
xchg
outsb
ret
std
xor
loope
xchg
mov
push
pop
xlat
inc
push
in
sar
insl
arpl
and
sbb
push
out
test
fwait
clc
fnstsw
xsha256
cmpsb
push
jmp
or
repz
mov
lods
dec
jle
and
lret
lret
add
fwait
repnz
ljmp
and
adc
push
dec
xchg
popf
pop
je
outsl
pop
sbb
add
imulb
xchg
inc
sub
mov
push
fwait
push
aaa
in
dec
push
ljmp
int
rol
pop
fwait
inc
out
and
dec
negb
jl
ret
adc
mov
rcrb
xchg
mov
inc
ja,pt
aad
jmp
pop
adc
push
xor
rcrl
jne
push
in
pop
ret
jne
movsb
sbb
or
mov
pop
inc
jle
dec
cmp
loop
fsubrl
std
mov
dec
and
xchg
dec
sub
mov
jne
push
in
add
push
lret
fs
xor
or
push
pop
mov
fistl
sub
pop
push
cli
pushf
ljmp
movsbl
gs
sbb
sub
and
in
and
push
clc
call
add
add
aas
add
clc
push
cmc
adc
bswap
mov
sbb
sub
shr
bt
and
cwtl
push
mov
bsr
push
bsf
movsbw
jmp
push
pusha
call
movl
pushf
push
movl
push
push
lea
jmp
jmp
test
test
pusha
lea
je
dec
mov
setg
adc
call
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
arpl
or
add
push
jmp
pop
std
cmpsb
test
jl
mov
stos
into
dec
add
outsl
test
xchg
cmp
pop
ds
rolb
mov
data16
mov
pop
sub
das
jmp
fdivrl
daa
out
xor
das
xlat
punpckhdq
in
daa
jmp
int3
dec
and
mov
popf
adc
dec
or
xor
add
adc
sub
jp
ds
sbb
sub
mov
xor
push
jnp
popa
pop
xor
dec
mov
pop
iret
cwtl
sbb
test
mov
int
dec
cmpl
mov
lahf
ror
enter
mov
inc
jl
daa
pushf
movl
pushl
pushf
lea
jmp
jae
cmp
push
pushf
lea
jae
not
bt
cmp
or
mov
btc
mov
and
shld
not
not
mov
clc
jmp
lea
jne
call
popa
imul
or
pop
mov
in
out
leave
and
xchg
sub
pusha
mov
mov
pop
sub
mov
pop
loopne
sub
and
pusha
lcall
leave
decb
out
push
inc
push
outsl
iret
ffreep
jp
insb
movsb
fists
adc
jge
scas
push
pop
inc
jnp
mov
add
pushf
mov
movsbw
pop
pusha
pushf
pusha
pushl
pushl
ret
pushf
jmp
clc
test
or
pusha
jmp
mov
lea
jne
stc
sub
push
rcl
aam
cmp
mov
bt
test
pusha
pushf
add
movw
pushl
push
lea
jmp
mov
clc
stc
add
pushl
pushf
lea
jmp
setbe
jmp
dec
jmp
imul
dec
mov
out
test
sbb
movsl
sbb
add
fwait
mov
pop
pop
pop
adc
pop
sahf
jmp
nop
aad
jmp
jb
mov
in
enter
fdivrs
xchg
adc
mov
pop
fsubl
add
fwait
imul
dec
mov
lcall
mov
out
int3
pop
scas
pop
xchg
inc
add
fstpt
adcb
popl
fisttps
mov
and
fcompl
push
xchg
dec
cld
je
mov
inc
jp
mov
mov
test
add
jmp
movb
lea
je
call
pushl
mov
push
pushl
popl
pushf
movw
mov
movw
pushl
ret
xchg
sbb
inc
cmp
adc
lods
lds
sbb
dec
cmc
mov
mov
jo
in
insb
fiaddl
xchg
mov
stos
or
fsubr
xchg
stos
push
cmp
addr16
dec
push
ficoml
sbb
fcoms
push
push
sar
lods
cmpsl
das
and
mov
jl
xchg
sahf
add
and
mov
push
cmp
sbb
icebp
sub
lahf
xlat
rorl
jp
mov
pusha
push
lods
bt
xor
pushf
ror
stc
bt
mov
neg
call
jmp
push
pushf
lea
jne
not
setl
dec
inc
xor
call
lea
jne
bsr
movzbw
btr
mov
sub
shld
sub
btr
sar
btr
rcr
mov
cmp
sub
pusha
test
movb
cmc
pushl
popl
pusha
clc
bt
bt
cmp
call
pushl
pushf
push
stos
movb
push
push
lea
jmp
lea
jne
mov
sar
sar
neg
mov
call
pushl
inc
cmc
call
sbb
lret
subb
insl
mov
xchg
lods
in
ret
insb
es
cmc
mov
lock
xor
lcall
cld
dec
pop
fidivrl
xchg
xor
xchg
aaa
insb
ja
adc
pusha
adc
add
or
jo
sahf
shrb
jb
xor
or
fsubrs
mov
cmp
jmp
mov
cmc
scas
movsb
push
xchg
ret
pop
inc
js
pop
dec
xchg
sbb
cld
jo
or
pop
je
and
into
cmc
sub
or
pop
jl
loop
mov
pop
sub
xchg
jo
flds
hlt
out
enter
in
sbb
xor
dec
ret
pop
inc
ja
jno
lea
jbe
bswap
mov
sbb
add
clc
add
add
call
jmp
ficomps
xor
dec
orl
cmp
test
sbb
or
int3
lods
test
pushf
int3
cltd
push
add
mov
or
sub
aas
mov
call
test
cmp
movsb
sub
xchg
lods
jl
sbb
sbb
fistps
jnp
push
add
ss
inc
mov
test
mov
in
xchg
test
mov
mov
ret
adc
cmp
sbb
xor
movsl
push
lods
mov
push
push
xchg
aaa
lret
ja
in
out
push
int
and
inc
js
mov
add
jmp
mov
sbb
scas
std
xchg
mov
insl
mov
insl
inc
pop
ss
sub
clc
jo
js
pusha
into
popa
xlat
xchg
and
loopnew
out
dec
addr16
ficoml
mov
or
js
test
add
xor
lea
inc
jbe
test
call
movzwl
add
bswap
lea
mov
stc
bt
stc
pusha
add
bt
call
test
call
pushf
push
pushf
movl
call
mov
scas
sahf
cli
xchg
ljmp
out
iret
add
xchg
push
push
ficoms
lcall
add
mov
push
stc
add
jg
xchg
lret
mov
addr16
pop
lret
add
sub
lcall
pop
stc
jmp
hlt
xchg
repz
inc
dec
mov
das
out
stc
outsl
jmp
js
loopne
ljmp
jmp
and
popa
sbb
jb,pt
movsl
pop
mov
push
jle
pusha
mov
xchg
pushf
jmp
jbe
push
outsb
mov
pop
cmpsb
mov
cmp
lods
ret
sbb
or
dec
cld
imul
test
fwait
aad
mov
and
popf
aad
lds
cwtl
into
or
mov
pop
popa
insb
movsl
repz
push
sub
stc
pop
inc
mov
inc
or
sahf
xchg
paddsb
inc
jbe
xchg
push
pushf
jmp
lods
xor
std
push
mov
je
sbb
dec
and
adc
add
imul
lods
xlat
push
data16
loope
add
mov
ret
jmp
jno
lods
pop
shrb
out
iret
mov
xchg
jp
mov
test
es
inc
sbb
loopne
scas
xchg
fwait
mov
xchg
aaa
fimull
pop
loop
dec
pop
loop
icebp
ret
xor
or
push
ljmp
shrl
inc
sti
mov
pusha
pop
pop
dec
movl
mov
outsl
arpl
inc
insb
insb
outsl
arpl
pop
fdivrl
push
pop
cld
popf
sti
pop
shll
cmp
jle
pop
rcrl
jl
pop
mov
pop
sar
popf
rcrl
jl
pop
popf
sti
jge
cmp
pop
cld
popf
cmp
push
sti
push
shll
pushf
pusha
mov
pusha
lea
jmp
mov
stc
jmp
movzbl
setp
mov
movzbl
xchg
pushf
pop
mov
pushf
call
pusha
movl
pushf
jmp
push
add
addb
add
xor
add
add
add
out
sbb
add
adcl
add
mov
add
pusha
lea
jae
pusha
pusha
push
mov
lea
jne
pusha
mov
jmp
lea
jb
clc
call
dec
int3
and
addr16
out
xor
sbb
pop
sbb
shrd
cmc
or
faddl
jmp
jecxz
dec
jl
cld
in
add
leave
add
pushf
xchg
rcrl
jns
in
jae
and
lock
add
pop
sub
repz
mov
pop
fcmovu
jmp
pop
repnz
sbb
imul
push
inc
ret
cmp
sbb
push
gs
dec
idiv
sub
xchg
aam
rcll
cmp
pop
inc
je
daa
adc
aam
shlb
fmuls
shl
call
stc
call
push
pushf
mov
movl
pushf
push
pushf
lea
jmp
lea
jne
lahf
movb
pushf
mov
bswap
pusha
mov
lea
movb
pushf
movl
jmp
jmp
stc
cmpb
jmp
stc
test
push
cmc
cmp
push
pushf
mov
lea
jae
push
add
movw
jmp
movb
pushf
mov
cwtl
lea
call
int3
pop
lods
gs
int
adc
jp
popf
mov
das
int3
bound
dec
rolb
insl
mov
leave
aaa
lret
out
data16
jo
or
sub
mov
xor
xchg
out
mov
and
cwtl
dec
fwait
das
ret
mov
test
push
push
stos
popf
mov
ljmp
cmpsl
aaa
adc
jg
lret
enter
xor
pop
xchg
jge
or
adc
fbld
pop
adc
add
mov
and
push
or
jb
jb
in
scas
or
popf
jo
aaa
cmp
sub
jne
and
pop
add
dec
push
push
cmp
es
ret
mov
mov
psadbw
pop
jbe
sub
aam
inc
aam
jle
ljmp
jne
imul
inc
jb
iret
ss
pop
jbe
int
sub
sub
shrb
inc
aad
mov
out
ret
dec
scas
adc
jecxz
pusha
dec
cmc
test
jp
jo
push
enter
sub
xlat
cmpsb
jmp
or
jnp
jns
fidivs
rorl
out
adc
pushf
xchg
or
jns
or
test
sar
mov
rcr
bt
adc
sub
lea
jae
pusha
ror
lea
test
clc
clc
cmc
sub
stc
pushl
popl
pushf
stc
cmp
pushf
lea
ja
rol
rcr
sub
not
sar
add
lea
btc
mov
sbb
mov
cmc
stc
jmp
repnz
jmp
lea
pushl
push
push
mov
mov
movl
movzbl
push
lea
call
bt
cmc
push
add
movb
clc
push
movzwl
shl
mov
pushl
pusha
add
mov
clc
call
adc
lea
pusha
pushl
ret
jmp
pop
pushf
pushf
pusha
pushf
mov
movl
pusha
call
push
cmp
push
lea
ja
bt
cmc
pushf
add
stc
or
jmp
pusha
mov
movb
movb
pushl
ret
adc
pusha
lea
jns
pusha
lea
jae
pushf
mov
jmp
jmp
and
shr
adc
xadd
adc
ror
mov
add
rcr
sub
add
rol
shl
rcl
rcl
add
lea
push
rol
rcr
shrd
mov
test
jmp
cmpb
call
or
or
not
mov
sbb
push
add
or
rcl
stc
mov
bt
pusha
cmc
test
jmp
movl
pushl
pusha
mov
jmp
lret
fidivs
mov
loopne
ret
jg
cmp
fwait
shll
sub
mov
clc
mov
jne
xor
jo
outsl
mov
adc
dec
mov
daa
push
ror
popa
sar
int3
cli
int
jno
jle
push
lret
cld
icebp
in
and
pop
inc
outsl
mov
outsl
jnp
cmp
call
clc
cmp
imul
scas
ret
dec
and
loopne
icebp
insl
xchg
sub
push
stos
mov
mov
pop
fdivp
imul
fs
mov
pop
xor
jmp
int3
cmp
pop
js
xor
mov
popf
adc
fdivl
into
and
aad
out
sub
pop
jmp
loopne
arpl
out
jle
dec
cmp
push
jg
bnd
xchg
pusha
push
stc
pop
or
or
jmp
cmp
cmp
or
hlt
popf
iret
inc
out
sub
addl
push
std
data16
xchg
mov
andb
or
faddl
addr16
sbb
pop
or
dec
and
loope
inc
push
jg
push
cmpl
neg
scas
hlt
rorl
outsl
icebp
loope
ss
popa
dec
cmp
cmpsl
loop
adc
insb
dec
pop
mov
pop
inc
xor
push
xor
nop
leave
add
and
xchg
or
cmp
repz
pop
inc
insl
jnp
xchg
test
scas
add
cmc
clc
cmp
call
lea
je
pushf
test
cmp
pusha
jmp
sub
movsbw
movzbw
push
lea
stc
btc
jmp
test
lea
jg
pushf
lea
je
bt
pushf
stc
push
add
clc
pushf
bt
cmp
pushf
pushl
movb
pusha
lea
jb
jns
stc
cmp
call
ficompl
sbb
or
scas
lds
xchg
test
sbb
out
xchg
je
xchg
std
pop
lds
jae
add
mov
out
dec
mov
jb
movsl
pop
push
mov
ficoml
imul
mov
cltd
jnp
inc
xchg
cmp
mov
inc
outsl
test
rolb
lods
mov
imul
mov
out
pop
xchg
lret
inc
insl
or
pushf
lea
call
pushf
call
mov
fcmovnu
jb
lret
dec
fdivrp
dec
call
test
dec
lea
lock
imul
mov
inc
and
repnz
jmp
push
scas
aam
jns
decl
adc
jmp
insb
les
andl
loop
clc
icebp
and
aad
inc
lcall
mov
cmpsb
loopne
xchg
lret
out
sub
cltd
adc
out
sub
fldt
and
lods
bound
or
jnp
jb
cmp
jns
stos
jl
inc
insb
mov
push
out
ds
fsubrl
jmp
das
push
xchg
add
fldt
adc
cwtl
jns
or
dec
fildl
xlat
into
ljmp
mov
loop
xchg
popf
push
pop
outsl
ret
add
mov
mov
adc
jo
push
int3
inc
es
scas
fldt
addl
xchg
or
hlt
xor
cmp
das
or
inc
insb
xor
cmp
jmp
call
lea
je
movsbw
mov
bswap
push
lea
pusha
pusha
push
pushf
mov
not
cwtl
pushl
popl
movzbl
lea
setns
call
pushl
mov
mov
pushf
push
push
lea
jmp
call
repnz
movb
pushl
lea
jne
pushf
lahf
movb
bswap
lahf
lea
setg
mov
push
jmp
lea
cwtl
lea
pusha
call
outsb
dec
imul
cld
lock
arpl
loop
movsb
enter
in
push
jle
pop
test
add
repz
stc
je
std
mov
fs
inc
imul
pushl
movl
pushl
jmp
lods
cmp
clc
jmp
jmp
xor
mov
xor
mov
pop
jne
addr16
fdivs
gs
adc
inc
lock
mov
test
sbb
in
pop
mov
push
cmp
and
jnp
lock
scas
ds
pop
inc
cmp
sub
sbb
jns
mov
rorb
xchg
sbb
mov
mov
add
test
jae
jnp
shrb
mov
movsb
sahf
pop
or
or
mov
sbb
cmc
sbb
dec
test
imul
pop
inc
imul
pop
lea
pusha
adc
setne
mov
jmp
call
lea
jne
or
not
xor
sar
mov
pushf
test
pushf
add
pusha
lea
jmp
movb
pushf
jmp
cwtl
pop
mov
mov
push
pusha
pushf
pushf
lea
jmp
inc
pushf
cmp
pushf
mov
mov
lea
call
xchg
pushf
movl
call
push
xchg
jmp
decl
dec
fmull
testb
mov
sti
xchg
mov
std
jmp
xor
fistps
dec
pop
repnz
dec
ds
and
repz
jg
dec
mov
pop
std
jnp
pop
inc
cmp
mov
dec
les
in
clc
jae
cltd
imul
jge
lods
nop
clc
xor
pop
insl
adc
fmuls
outsl
fldl
in
test
fcoml
aam
lock
jge
fsubrl
call
nop
stos
sbbl
pop
pop
add
xor
add
int
aaa
dec
inc
pop
mov
jmp
cmp
jecxz
push
lods
push
mov
movsb
sbb
jp
pop
push
filds
pop
xor
add
dec
push
cmp
push
push
push
pusha
int3
pushf
movl
call
lea
jae
ror
sub
mov
shl
mov
cmp
btc
mov
cmc
stc
mov
clc
call
mov
pusha
movl
call
lea
mov
call
jmp
jmp
mov
out
jns
xor
push
or
pop
notb
stos
loope
mov
fiaddl
into
or
pop
mov
sub
mov
lret
subb
in
or
aam
bnd
repnz
add
movb
lods
loopne
ror
xchg
add
jo
xor
fwait
shll
mov
cltd
hlt
pop
inc
push
mov
xor
stc
call
jmp
mov
jmp
lea
jb
cmp
jmp
lea
jne
pushf
movzbl
jmp
add
mov
cs
lret
sbb
and
mov
xchg
push
dec
sub
and
pop
push
mov
push
jne
push
cmp
in
or
sbb
dec
inc
clc
xor
mov
pusha
call
push
pusha
lea
jae
pushf
pusha
lea
jmp
popf
cpuid
nop
pushf
movl
pusha
movl
push
mov
pushf
lea
jmp
pusha
setp
mov
pushf
lea
jge
cwtl
lea
call
call
pushf
lea
jne
call
stc
pusha
shr
jmp
data16
jbe
lods
lock
xor
inc
fbstp
repz
inc
pop
insb
mov
xchg
fld
mov
jg
cvtps2pi
pop
ljmp
inc
push
cmpsl
loopne
aam
test
inc
cmp
pop
xchg
mov
shlb
pushf
cmp
movl
jmp
lods
bt
neg
jmp
cmp
pusha
mov
or
pushf
pusha
movl
lea
jne
setno
mov
bt
call
movl
jmp
jmp
test
jmp
clc
or
jmp
test
push
test
cmp
lea
jno
pusha
pusha
lea
jae
pushf
pushf
lea
jmp
loope
inc
inc
jne
cs
aam
xor
and
fistpll
mov
sub
and
xor
inc
push
pop
lods
mov
insb
xlat
adc
xchg
idivl
cmp
cs
adc
lds
jmp
aas
rorb
call
movzbw
clc
shrd
sub
and
rcl
bt
neg
shr
cmp
xadd
mov
movsbw
setno
xor
add
movzbw
bsr
rol
add
cmc
mov
pushf
jmp
stos
pusha
movb
lea
jmp
add
push
pushl
pusha
lea
jmp
in
sar
dec
dec
cwtl
push
mov
dec
jmp
sbb
mov
ds
jo
ds
jo
mov
aaa
push
adc
sahf
xchg
stos
arpl
ret
test
xchg
xchg
iret
jp
cwtd
out
leave
sbb
jnp
mov
push
adc
ret
lahf
inc
jecxz
and
lods
mov
lahf
inc
xor
shlb
aas
xchg
das
inc
lods
cmc
jmp
jae
insb
pop
movsl
popa
sbb
add
stc
outsl
sub
xlat
pop
inc
gs
xchg
mov
loope
jmp
movl
pusha
jmp
mov
mov
lea
pushf
pop
lea
pop
setle
not
push
movsbw
mov
call
call
dec
outsb
xchg
sbb
dec
loope
cs
jecxz
aam
jmp
jbe
int3
jmp
pop
adc
sbb
in
jnp
jg
lods
mov
or
push
dec
lods
gs
fcmovnbe
dec
add
inc
arpl
xor
pushf
pop
or
loop
inc
cmp
inc
xor
rorb
insl
xchg
sbb
cmp
mov
test
decl
testb
icebp
mov
fcompp
jbe
and
mov
mov
sti
loope
jg
or
push
ret
ss
xlat
mov
pop
clc
jb
pop
pop
add
xlat
push
push
lahf
mov
rorb
inc
sub
imul
cs
pop
bnd
xor
inc
arpl
jecxz
out
inc
jnp
jmp
cmp
add
aaa
dec
mov
sbb
push
xchg
test
outsl
pushf
mov
movsb
and
enter
dec
add
fidivrs
outsl
xor
add
incb
jno
mov
gs
cmp
ret
scas
test
xor
sbb
ror
or
daa
es
mov
jle
xchg
mov
ljmp
mov
mov
pop
arpl
jae
daa
popa
xchg
push
or
cmp
pop
inc
arpl
sbb
dec
pop
or
cmc
call
inc
ret
pushf
adc
ljmp
push
in
pop
and
lea
ss
add
xchg
fimuls
cltd
lock
movsl
mov
pusha
xchg
sti
in
and
mov
jnp
xchg
mov
or
popf
sub
das
xor
xchg
sbb
jge
dec
repnz
push
jmp
pop
inc
or
inc
into
mov
mov
push
adc
xchg
icebp
loope
lea
jbe
sub
cli
ss
pop
inc
bound
jno
inc
lock
movl
mov
call
push
pushf
movl
pusha
mov
lea
jmp
xlat
push
jo
add
push
bound
inc
pushf
clc
shlb
xchg
mov
jge
push
test
push
jp
shll
mov
ftst
and
xchg
or
xchg
mov
jl
sub
sahf
pop
push
or
ja
test
bound
popf
ret
pusha
movb
mov
jmp
lds
ds
std
rcr
xor
adcl
add
mov
xchg
stos
add
gs
mul
lea
pop
xchg
cmpsb
sub
loopne
jg
fcmovnb
mov
in
sub
fistpl
mov
xchg
pop
mov
lcall
or
mov
ja
ljmp
mov
push
lret
stos
pop
sarl
dec
push
jecxz
mov
inc
jno
jbe
ds
xchg
ficoms
xlat
or
or
jg
and
mov
aas
and
add
or
ret
popa
jb
test
test
into
xchg
sti
inc
push
pop
lods
clc
pop
jge
add
mulb
leave
xor
push
push
roll
sub
jg
das
add
mov
sbb
lea
inc
popa
aaa
movsl
int3
pushl
lea
jne
shrd
mov
shl
sub
cmc
mov
bt
push
sub
jmp
call
push
call
dec
xor
bt
or
neg
setne
setno
stos
call
bt
pushl
popl
cmp
cmp
call
movl
pushf
pusha
pushf
lea
jmp
pusha
lea
jae
pushf
jmp
clc
bswap
movzbw
mov
pushf
cmp
cmpb
lea
jg
pusha
pusha
lea
jne
cwtl
not
sub
bsf
cmc
bswap
pusha
mov
sub
sar
add
and
shl
rcr
mov
pushf
test
movb
lea
je
je
cmp
stc
jmp
cmp
or
pusha
pushf
lea
je
jmp
movl
jmp
lea
je
bt
test
cmp
call
pushf
inc
pusha
pushl
lea
jmp
and
mov
dec
and
inc
fidivs
in
push
stos
lds
aaa
lods
sub
jo
xchg
adc
or
push
hlt
pushf
add
das
push
push
inc
cmp
stos
pop
push
divb
pop
sti
add
fisttpl
mov
bound
into
in
push
xor
call
ss
mov
pop
fcoms
push
and
fwait
les
movl
and
jmp
in
enter
cs
pop
adc
stc
adc
in
adc
xchg
clc
or
push
test
ret
dec
ret
sub
sbb
flds
xorl
xchg
ljmp
ror
inc
jns
xor
push
cmovnp
sub
movl
pusha
pushf
lea
jp
pusha
movl
pusha
mov
pushl
pushf
lea
jmp
pusha
lea
je
push
cmp
cmp
add
clc
cmp
call
cmp
pusha
pusha
pushf
lea
ja
bswap
sete
jmp
addr16
add
dec
jle
aaa
mov
ds
sub
lret
cmp
mov
nop
fwait
cmpb
inc
lcall
jbe
or
out
pop
les
xor
xchg
inc
test
add
fidivs
cwtl
lods
test
dec
mov
repz
or
inc
pop
leave
jo
sub
jmp
call
movl
movb
mov
lea
jmp
cmp
bt
cmc
clc
add
push
call
pop
call
pop
jmp
ror
and
add
xadd
neg
pushf
bsf
shr
pusha
movsbw
bsf
mov
rcl
not
add
movsbw
mov
lea
push
mov
jmp
jmp
push
std
aad
inc
arpl
aad
jmp
pop
call
sbb
push
mov
mov
imul
dec
es
out
jae
leave
popa
cwtl
mov
insl
jecxz
xchg
roll
sahf
ffree
jbe
jecxz
cmp
fdivl
pop
inc
pop
mov
sarb
pop
jp
pusha
lret
xlat
xor
mov
cmp
loopne
sbb
sar
xchg
aaa
in
dec
push
insl
movsb
rclb
aaa
mov
mov
push
cld
ret
mov
adc
or
repnz
pop
inc
pop
jmp
pop
sub
cmp
repz
sbb
pop
mov
and
push
cmp
faddp
pop
lds
hlt
cs
movsl
xor
push
push
cmp
les
out
arpl
dec
sbb
push
mov
mov
mov
inc
dec
sub
sbb
or
jp
add
fidivs
xchg
add
sub
xlat
icebp
cmpsl
movsl
pop
xchg
lret
xlat
pop
inc
pop
push
fdivs
enter
cmp
jno
pop
cmp
and
jle
adc
popa
sub
mov
jne
cmpsb
aam
mov
in
repz
sub
les
repz
xor
rorl
jnp
push
enter
in
pop
cmp
adc
fiadds
mov
mov
pop
inc
pop
inc
lcall
repnz
push
pusha
lea
jmp
je
mov
pusha
jo
sbb
fldln2
testl
and
jp
xchg
fdivl
pop
sbb
addr16
add
xor
daa
sbb
jp
pop
pop
roll
push
clc
scas
xchg
and
sarb
sbb
jle
hlt
in
push
push
enter
scas
addr16
inc
adc
ret
sbb
lahf
adc
jle
pop
fldl
bound
lds
inc
ljmp
fists
clc
add
mov
aaa
cwtl
pusha
cwtl
fldl
sub
popa
pop
inc
pop
mov
push
mov
dec
loop
in
sahf
sti
adc
or
inc
test
add
or
rcrl
shrb
sub
cld
rclb
pop
xor
pushf
inc
inc
mov
mov
movsl
lahf
sbb
inc
std
dec
pop
inc
pop
loope
call
cmpsl
or
pushf
xor
sti
push
dec
pushf
fisttps
int
iret
out
jmp
mov
jle
hlt
stos
and
mov
pop
mov
fcoms
inc
es
es
sub
mov
inc
pop
nop
test
data16
lock
and
xchg
jo
cmp
or
pop
cwtl
inc
sar
jo
mov
jmp
push
add
mov
mov
aad
subb
mov
iret
ja
rorb
aaa
xor
lret
dec
jg
das
or
inc
pop
aaa
add
fs
call
push
lea
jae
jb
push
pushl
ret
or
pushf
pushl
jmp
sbb
je
aas
cmp
mov
in
cmp
scas
movsl
sbb
hlt
sbb
lcall
cli
aas
xchg
movsl
add
stos
dec
je
ds
pop
sbbl
pop
and
and
and
pop
iret
ret
mov
cmp
out
mov
pushf
dec
hlt
out
ret
mov
test
insb
add
sti
xchg
dec
je
ds
push
pop
sbb
hlt
push
cmp
mov
xchg
dec
hlt
fstpt
and
ret
je
cmp
adc
sbb
je
cmp
out
sbb
hlt
jae
pop
add
sub
hlt
loop
cld
and
stos
dec
je
cmp
push
xchg
dec
hlt
adc
sbb
cld
repnz
dec
hlt
pop
cmp
rorl
sbb
hlt
lds
and
mov
dec
hlt
xchg
fwait
sub
mov
dec
hlt
out
cmp
and
mov
jmp
jns
dec
hlt
xchg
cmp
bsf
sbb
hlt
cmp
pop
mov
xchg
dec
hlt
dec
cmp
test
dec
hlt
sti
cmp
and
or
sub
push
sbb
hlt
mov
fsubrs
shrl
and
pop
mov
dec
je
fldt
jne
xchg
dec
je
cmp
add
xchg
dec
je
xor
call
dec
hlt
cmp
std
es
hlt
lods
ds
outsb
lret
mov
cmpsb
mov
cmp
clc
jl
test
cmp
outsb
scas
sbb
hlt
or
xchg
ljmp
jb
sbb
hlt
in
notb
fcomp
sbb
je
cmp
lcall
dec
hlt
loopne
mov
int3
push
pusha
pusha
add
lea
setns
mov
cmc
pusha
cmp
pushl
pusha
push
lea
jb
jle
cmp
pusha
cmp
pushf
lea
ja
cmc
test
add
jb
clc
stc
or
push
pushf
call
lret
dec
mov
xor
cltd
mov
movsl
aas
xchg
scas
push
fs
sub
fdivrs
pop
sub
or
inc
mov
enter
jo
push
mov
pop
xchg
movsb
cmp
or
arpl
cmc
mov
icebp
dec
mov
jge
rcrl
out
and
pop
dec
iret
mov
orb
fists
cmp
dec
aas
mov
pop
xchg
dec
dec
mov
mov
insb
mov
rcl
push
inc
jae
fcoml
rcrl
cmove
pushf
pop
inc
push
and
arpl
cs
or
sub
and
pop
mov
mov
or
rcl
jbe
in
dec
adc
in
jae
fistpll
test
shrl
cmp
jl
ljmp
inc
stc
cmc
jmp
push
sbb
mov
dec
sti
rcl
sbb
or
add
sub
add
inc
push
inc
fwait
orb
xor
pushf
pushf
pushl
ret
out
lock
lock
cmc
cmp
ja
es
out
dec
cmp
or
test
cmp
pop
movsl
jae
mov
mov
ss
mov
les
cli
push
mov
mov
mov
cmp
pop
inc
push
mov
fs
mov
pop
jp
fprem1
cmp
jo
fistpll
das
out
in
popf
inc
mov
divl
es
add
jle
aad
cwtl
insl
je
xchg
mov
out
xchg
rolb
fs
shlb
push
cmp
fisubrl
lods
push
xchg
mov
cmp
mov
div
sub
xlat
popf
sbbb
cld
shlb
cs
hlt
sub
ret
mov
lds
push
pop
and
pushf
or
in
repz
stos
test
pop
insb
jnp
repz
mov
iret
iret
jmp
mov
mov
mov
fnsave
in
in
inc
shrb
inc
mov
rcrb
pop
inc
push
add
shrb
outsl
sub
test
cmp
push
pushf
lea
ja
clc
pushf
call
test
repnz
pusha
call
pushl
popl
movl
pusha
mov
pushl
ret
movzwl
lea
jmp
clc
mov
push
test
pusha
call
clc
mov
mov
cmp
pushf
call
ret
test
aad
addps
jmp
pop
arpl
mov
xor
outsb
pop
inc
push
mov
ljmp
nop
int3
lcall
imul
xchg
cltd
in
ffreep
lods
xor
xchg
jne
pop
js
dec
out
out
xchg
xor
or
in
push
xchg
cwtl
push
fwait
pop
xor
notl
pop
repnz
pushaw
mov
cmp
scas
lahf
pop
stos
ret
jge
cmp
sbb
inc
mov
lods
pop
ficoml
jae
loope
les
stos
pop
adc
negb
lds
pop
inc
push
jg
out
add
imul
jae
inc
pushf
pusha
inc
movb
pushf
pushf
lea
jmp
adc
stos
out
frstor
and
aam
add
xor
and
xchg
iret
mov
out
cmp
mov
inc
test
arpl
lea
cmp
push
mov
xchg
jno
es
mov
fldcw
jnp
sub
ss
cmp
out
mov
sbb
scas
jmp
or
sti
mov
arpl
enter
sub
xchg
pop
pop
stos
mov
in
mov
or
es
xchg
jmp
aad
repnz
and
push
adc
add
jb
in
lcall
cmp
dec
shlb
push
in
mov
pop
lods
mov
cmpsb
hlt
out
adc
int3
mov
pop
inc
push
aaa
add
mov
push
jecxz
add
adc
cld
sbb
test
clc
adc
inc
jo
testl
int3
and
and
pop
aas
out
adc
fwait
xchg
lret
popa
mov
cmpsl
lret
jo
nop
cmp
sub
sbb
push
dec
movsl
xchg
aad
mov
popa
fadds
mov
jg
adc
ja
mov
dec
cmp
add
add
sbb
dec
jg
xor
inc
mov
mov
sub
int
out
outsb
sbb
int3
inc
inc
jg
jno
pop
inc
push
repnz
jmp
pushl
movl
mov
jmp
movl
movb
lea
jmp
sub
cmp
push
outsl
sbb
inc
fdivs
out
les
adc
sahf
cmpsb
xchg
pop
std
or
xchg
push
mov
push
pop
push
jae
in
push
lcall
mov
and
adcl
movsb
fsubs
add
and
inc
in
lods
cld
adc
xorl
push
jmp
aas
xchg
or
sub
test
leave
imul
nop
add
adc
cwtl
jbe
push
insb
iret
push
ja,pt
inc
lock
cmpsl
dec
test
mov
out
pop
sbb
int3
das
cmc
dec
or
out
xchg
popa
mov
and
push
pop
cmpsb
sbb
and
repz
pusha
inc
push
je
inc
frstor
xor
popa
jl
dec
sbbl
pop
mov
dec
in
popf
jno
mov
insl
out
movl
fs
cs
ret
jno
adc
dec
push
imul
scas
je
sub
movb
test
fidivl
test
xor
ror
mov
mov
pop
inc
popf
pushf
push
lahf
inc
sub
inc
jb
dec
notb
aaa
lcall
mov
xlat
outsb
fs
dec
inc
out
jo
lcall
iret
cmc
scas
adc
jmp
nop
fcoml
mov
arpl
jnp
scas
jnp
mov
insl
xchg
lea
cmp
push
inc
add
mov
inc
and
ss
adc
push
xchg
mov
pop
inc
push
cltd
inc
in
lea
jbe
lea
rcr
sub
shr
shl
movsbl
shld
mov
shrd
mov
cmp
sub
add
shrd
shr
clc
rcl
mov
lea
mov
neg
inc
add
call
xchg
call
and
jb
arpl
iret
or
ss
push
fisubrl
or
sub
lock
rol
adc
fildl
aas
jp
cmp
sbb
adc
pusha
or
mov
mov
clc
test
sbb
cmp
jne
and
movsl
and
xchg
mov
add
mov
enter
scas
ljmp
inc
push
cltd
jb
lock
lods
mov
jae
xchg
lret
ret
insb
and
vpmacsdd
dec
mov
insb
aam
ljmp
cltd
shrb
fs
ja
rcl
stc
add
sub
dec
or
bts
pushf
add
add
xor
lea
sub
shl
mov
shl
mov
clc
bt
repnz
pushf
movb
pusha
movl
lea
jne
jmp
add
add
inc
push
add
push
add
inc
push
add
cmpsb
push
add
push
add
add
add
add
fs
imul
add
xorl
add
xor
lea
je
not
shl
rcl
rcl
add
cmp
bt
inc
seto
mov
test
add
stc
mov
sar
sub
mov
push
mov
bt
cmp
mov
lea
jbe
sar
xadd
test
mov
shld
rcl
cmp
movzbl
add
xadd
shr
mov
dec
add
shr
shl
inc
movl
jmp
call
jle
cltd
push
sbb
inc
cmp
sbb
pop
cmp
mov
sub
dec
test
mov
fists
pop
lds
dec
mov
adc
mov
mov
fidivrs
add
fildll
lcall
movsl
adc
xchg
int3
pop
sbb
xor
sbb
lods
fcoml
and
inc
dec
or
js
call
cmp
jp
jl
pop
pop
stc
adc
fnstenv
and
xchg
ljmp
push
aam
rcrl
nop
in
dec
add
aaa
lcall
cmpsl
jle
cli
rorb
ss
loope
cmp
les
push
shl
xorb
mov
ja
faddl
hlt
dec
push
cli
jne
loop
sbb
inc
jg
jno
and
push
sti
mov
lock
dec
imul
xor
stos
inc
sbb
add
mov
xlat
xchg
sti
flds
lds
test
mov
or
repnz
fnstsw
jns
out
repz
popf
rorl
std
repnz
stc
aam
inc
dec
insl
outsl
aad
pop
or
test
push
or
pushf
jmp
call
mov
push
call
jb
call
pushl
pushl
popl
mov
pushl
pushl
ret
push
mov
mov
movb
cmpb
pushl
push
lea
jne
bt
pushf
cmp
xor
call
and
jle
shl
adc
insb
add
test
inc
mov
outsl
jns
xor
push
mov
jp
cltd
adc
repnz
mov
xchg
jne
icebp
sbb
mov
sbb
pop
pop
shlb
or
enter
test
stos
cwtl
lret
xor
xchg
leave
mov
ficoml
add
jns
push
inc
cmc
outsb
and
inc
fcomps
js
mov
gs
pop
inc
dec
or
frstor
inc
and
gs
lea
jne
shr
mov
sbb
xadd
mov
clc
sub
test
bsf
mov
cmc
sub
bt
call
call
pop
sbb
pushf
notl
cmpsl
std
fwait
mov
add
mov
inc
je
jmp
lret
inc
and
adc
mov
fs
aaa
xchg
pop
inc
dec
scas
sub
cs
and
mov
mov
mov
insb
les
xchg
xor
jb
add
inc
cmpsl
mov
les
and
add
push
loope
pop
sti
adc
mov
loope
insb
inc
push
xor
int
hlt
scas
push
repnz
shlb
inc
leave
xor
push
mov
dec
inc
fiadds
adc
rol
cmp
sbb
inc
cmp
dec
pop
adc
rolb
mov
testb
sbb
mov
mov
jo
mov
loop
icebp
jbe
sbb
and
and
hlt
sub
xchg
pop
add
and
inc
inc
std
mov
fbstp
out
and
inc
mov
shr
jae
aaa
mov
mov
cmp
faddl
data16
faddl
sbbl
cmp
int
dec
in
cld
push
push
sbb
ret
fnstsw
pop
dec
adc
notb
icebp
rcrb
add
adc
mov
cld
xor
push
pop
push
fldt
loop
iret
pop
jbe
das
add
pop
shrl
mov
jnp
mov
adc
popa
int3
clc
push
inc
cmp
inc
pop
and
enter
mov
rcll
cmpsl
rclb
pop
pop
xchg
push
call
jo
lods
push
loope
dec
test
cwtl
add
test
fs
in
push
arpl
add
push
sar
ret
dec
dec
aam
leave
mov
push
nop
push
mov
into
xor
out
or
roll
inc
test
dec
loop
sub
dec
add
dec
sbb
fsubp
enter
ret
shl
in
loop
add
mov
icebp
sub
lock
outsb
push
pop
shll
jbe
hlt
fnclex
fmull
lret
pop
jmp
loop
xor
mov
adc
xlat
rcl
mov
enter
loop
add
repz
pop
pusha
lods
mov
jge
sub
xchg
in
xor
add
or
je
and
dec
sahf
test
push
add
mov
xor
or
mov
rcr
cmp
push
add
jecxz
mov
lret
int
lods
vcmpps
adc
and
loop
test
out
add
or
mov
call
inc
inc
bound
push
push
inc
fwait
lret
push
fisubl
pop
dec
sub
sub
shl
imul
push
xchg
gs
outsb
push
add
xcrypt-ofb
cmpsl
cs
sbb
push
push
or
adc
into
inc
leave
and
shll
in
xlat
inc
shl
iret
fs
jecxz
inc
inc
dec
push
lds
pop
ret
inc
int3
cmpsl
ret
xchg
ret
in
jecxz
and
sub
shl
push
push
in
dec
fcomp
fdiv
pop
hlt
ret
dec
pop
pop
call
dec
icebp
sbb
jecxz
loop
xor
fimuls
dec
repz
inc
push
aam
shll
lcall
fnclex
sbb
in
loop
add
xchg
push
pop
jecxz
sub
lds
clc
ret
inc
jae
inc
mov
repz
push
lret
addl
repz
pop
dec
pop
pop
repnz
ret
test
ret
push
dec
addl
push
in
repz
push
pop
jmp
shrl
dec
xlat
mov
rol
frstor
inc
dec
mov
rorb
ret
ljmp
lds
or
stos
out
mov
imul
addr16
in
dec
or
movb
ljmp
dec
push
inc
int3
enter
xchg
fstpt
lret
pop
enter
push
ret
insl
mull
sub
push
lds
pushf
shl
jmp
mov
jecxz
xchg
loop
dec
mov
stos
orb
inc
dec
into
push
mov
lret
inc
scas
push
adc
xchg
jle
and
adcb
and
inc
int
add
add
testl
test
leave
and
dec
outsb
lods
int3
loopne
dec
arpl
sub
inc
push
and
rcl
jns
in
sarl
lret
inc
xlat
lret
outsb
or
xlat
pop
test
int3
ds
out
push
ret
mov
ret
pop
dec
dec
jecxz
dec
ret
into
in
xlat
hlt
push
lock
mov
pop
xchg
iret
dec
xchg
call
push
dec
jecxz
test
loop
repnz
fldln2
lret
fldenv
or
pop
loop
daa
push
leave
add
add
or
push
dec
or
iret
push
inc
loop
repnz
jecxz
sub
inc
inc
enter
push
leave
push
cmp
xchg
jmp
lret
push
push
push
mov
loop
pop
inc
pop
in
loop
xchg
outsb
int
ret
shl
rcr
loop
repz
sbb
push
add
adc
push
mov
in
push
loop
lret
pop
push
fldt
stc
mov
add
dec
inc
dec
lret
fadd
inc
test
fcomi
mov
add
pop
lret
enter
push
negb
je
adcl
jecxz
inc
fisttpll
loop
dec
or
loop
pop
out
loop
pop
in
loop
ss
test
push
push
or
aad
pop
inc
fimuls
sub
dec
repz
pop
ret
xlat
jmp
lds
lds
kunpckbw
pop
lds
lds
lds
ret
icebp
shll
dec
dec
lds
push
into
out
or
fisttps
iret
loop
xlat
repnz
out
sub
dec
or
movb
and
inc
lds
aam
push
inc
push
les
or
or
loopne
in
dec
push
rol
dec
sti
out
mov
out
shl
movsb
inc
pop
repnz
adc
adc
rol
fcmovnbe
es
repz
add
and
aad
add
data16
dec
pop
and
mov
out
aad
stos
aad
inc
pop
push
adc
adc
adc
test
push
xchg
mov
out
in
ret
dec
es
ffree
fcmovnb
es
roll
and
pop
imul
xlat
call
inc
adc
into
jecxz
fisubl
sbb
mov
orl
data16
jmp
clc
fistps
and
jmp
dec
lret
fsts
xchg
ficompl
ret
dec
rcll
shrb
fldl
call
rorb
pop
enter
fistl
test
nop
repnz
pop
xchg
sub
inc
push
lret
adc
call
repz
es
repz
fisubl
pop
inc
int3
repnz
cltd
lret
in
add
pop
inc
out
ficoms
fcmovnb
es
jns
fcmovbe
jle
mov
inc
dec
movsl
jmp
mov
jmp
loopne
xchg
hlt
xchg
es
pop
add
push
dec
cmp
mov
daa
jecxz
push
cmpsl
dec
sub
xor
mov
cmp
mov
and
movsl
add
inc
stos
ljmp
in
jecxz
or
loop
push
les
jp
daa
push
pop
mov
loopne
inc
mov
sub
pop
daa
sbb
ss
lret
dec
rorl
scas
inc
cld
movsb
inc
call
mov
push
jns
movsb
add
mov
inc
test
and
daa
inc
gs
jecxz
rcr
xchg
mov
cmp
push
loopne
daa
jb
ljmp
nop
or
pop
mov
fidivl
nop
sub
xchg
push
dec
mov
cld
push
stos
int
push
mov
fists
push
popa
pop
mov
shlb
int
popa
movsl
rcll
pop
inc
movsl
xchg
dec
xchg
rorb
std
or
popa
push
jb
add
daa
dec
push
cld
inc
lods
push
call
test
fcomp
push
inc
mov
fstps
clc
xchg
in
mov
sub
movb
fcmovu
lret
lds
rcrl
pop
or
dec
test
lret
or
push
lret
inc
adc
shlb
enter
jb
les
rol
mov
cmc
pusha
jmp
dec
dec
in
pop
add
push
sub
roll
ficompl
or
aam
fisttps
in
push
movb
push
push
inc
sub
rcrb
jl
sar
rorb
inc
rcr
test
or
push
loope
or
add
xchg
pushf
push
cmp
fldl
testb
call
fiadds
dec
push
add
inc
push
leave
dec
out
inc
into
ret
repz
out
enter
add
insb
inc
jge
lret
mov
rclb
cli
into
inc
push
ret
stos
xor
add
jo
outsb
out
mov
adc
loopne
orb
movsb
dec
aad
mov
dec
enter
stc
adc
mov
stos
xchg
sbbl
orl
mov
in
orl
cs
dec
lea
ret
iret
xor
xor
adc
xchg
pusha
inc
outsl
inc
popl
adc
xor
test
jo
bound
lock
adc
ret
enter
sub
pushw
call
sub
ret
inc
inc
sbb
adc
arpl
or
in
or
sub
test
xchg
pop
add
adc
jmp
dec
and
add
and
shr
ret
in
test
pop
shll
xor
push
or
orb
sub
in
ror
repz
stos
push
fiaddl
mov
xor
push
fs
inc
outsb
push
jnp,pn
mov
mov
outsl
and
xchg
imul
pop
int
dec
dec
dec
enter
in
repz
cmp
mov
mov
movsb
ljmp
inc
cmpsl
jecxz
push
int3
inc
es
cmpsl
pop
loop
dec
mov
add
in
push
push
in
rclb
dec
out
push
movsl
leave
dec
sub
scas
or
lds
into
jae
iret
push
fmull
out
nop
nop
in
decl
mov
leave
sub
test
ret
mov
es
dec
push
enter
shlb
xchg
mov
dec
dec
pop
ror
shlb
in
scas
outsl
jnp
leavew
pop
jne
lret
mov
mov
sbb
xor
push
outsb
fdiv
pop
or
dec
sub
and
push
bound
enter
pushw
dec
outsb
xor
loop
mov
sub
dec
inc
xor
dec
shlb
or
pop
add
inc
mov
stc
dec
sub
mov
xchg
xchg
inc
add
pmuludq
and
xchg
push
call
push
mov
pop
add
loop
mov
xor
pop
push
lahf
dec
movl
jmp
dec
sub
push
add
loope
inc
popa
and
into
ret
mov
enter
sub
js
cwtl
ret
icebp
lret
dec
int3
loope
lock
ja
hlt
inc
mov
data16
dec
dec
imul
push
push
xchg
bound
xchg
inc
outsl
jp
mov
ss
out
fldt
hlt
imul
mov
dec
nop
push
mov
push
mov
and
fsubs
dec
fnstcw
ficoms
mov
dec
xorb
jmp
shrb
je
mov
cld
jl
insl
mov
loope
cmp
dec
sub
repnz
mov
faddl
inc
push
push
ret
mov
loopne
xchg
fildll
or
cmpsb
xor
xor
pop
jge,pn
pop
call
mov
jo
dec
jns
test
dec
leave
imul
enter
test
and
inc
xchg
dec
pop
loop
mov
inc
lea
je
popa
dec
aam
mov
fs
inc
fmuls
loope
out
mov
dec
push
lods
ljmp
call
inc
outsl
xor
mov
in
or
ljmp
mov
xchg
loop
aad
pop
sbb
dec
in
push
outsb
dec
out
adc
ret
or
add
push
add
or
sub
jb
sbb
int3
lret
shrl
cmc
inc
adc
scas
iret
xchg
inc
sub
fisubrl
lock
dec
lret
push
push
dec
dec
out
add
daa
in
adc
push
out
pop
mov
test
and
push
aad
push
sub
sub
roll
inc
enter
sub
xchg
jo
fwait
dec
clc
filds
adc
fwait
lahf
adc
repz
push
leave
dec
lret
lret
add
inc
int3
lret
int
dec
dec
into
dec
repnz
add
cmpsb
rolb
mov
push
pop
cli
inc
in
rorb
dec
hlt
push
mov
dec
xchg
jp
mov
push
mov
js
loope
iret
dec
iret
push
test
adc
lret
notl
lret
pusha
out
les
negb
stos
inc
or
inc
xor
dec
outsb
sub
fimuls
mov
dec
adc
int
or
inc
mov
inc
mov
dec
enter
dec
or
shrb
in
testl
loope
leave
push
lods
push
nop
or
sub
and
jo
and
cmpsl
adc
lahf
je
ret
dec
mov
cmc
add
cmp
movsb
adc
popa
and
int3
push
jnp
arpl
xchg
dec
subl
jmp
xor
mov
or
test
fcmovnbe
adc
filds
fstp
sub
imul
in
add
pop
das
xchg
add
mov
rcl
xchg
push
sub
mov
notb
pop
lret
mov
loop
scas
aaa
inc
mov
out
nop
push
dec
mov
mov
dec
push
sbb
and
loope
fstl
iret
cmpsb
inc
cmpsl
orl
push
pop
jns
int3
sti
ret
repz
das
pop
mov
push
inc
adc
adc
mov
fiaddl
call
ds
out
cmp
iret
push
jns
push
jae
in
in
enter
pop
xchg
sub
hlt
dec
shl
xchg
rorl
outsb
mov
int
stos
out
mov
daa
push
and
fdivl
inc
mov
and
inc
inc
aad
roll
shll
leave
xlat
in
mov
insb
in
xchg
rcrl
xchg
mov
mov
and
orl
and
sbb
sbb
fsubr
xor
cmc
fiadds
inc
ret
mov
push
xlat
jmp
and
clc
sub
arpl
loop
push
fdivs
adc
addl
icebp
repnz
js
adc
movl
xlat
addb
into
mov
and
ljmp
cmp
imul
dec
orl
pop
adc
pusha
int
mov
inc
xor
lret
add
push
push
mov
inc
dec
push
pusha
and
sub
int
cs
pusha
push
out
cmc
xchg
in
lds
mov
sub
mov
ja
out
mov
sub
in
jecxz
jmp
cld
hlt
pop
adc
fwait
iret
xlat
xchg
add
add
loope
ret
daa
dec
push
xchg
and
shrb
ljmp
sub
or
dec
inc
stc
adc
icebp
or
push
clc
iret
inc
jmp
inc
inc
push
sbb
gs
in
int3
cmp
or
mov
aam
sbb
cmp
fisubs
jbe
cs
sbbb
or
pop
pop
shll
hlt
fisubrs
lret
xchg
int3
sti
add
test
adc
lds
fimull
fwait
dec
aam
sub
dec
jl
dec
lcall
loop
mov
mov
add
fsubr
cltd
ljmp
inc
cmp
movsl
jo
out
or
ret
loopne
sbb
out
pop
lret
or
xchg
dec
and
incb
ret
jno
sub
adc
push
inc
ret
into
repz
test
cmp
push
and
bound
pop
push
push
push
inc
dec
hlt
mov
or
xlat
inc
data16
in
cmpsb
sbb
push
add
mov
in
pop
mov
sub
xor
xlat
or
js
fmulp
sub
adc
aad
adc
int
jl
push
pop
sub
test
xchg
xchg
adc
rclb
fisttpll
imul
pop
icebp
ret
test
scas
inc
lock
adc
sbb
sub
inc
outsl
and
aam
or
or
shll
or
movb
xchg
push
jne
loop
push
bound
pop
xchg
data16
rcr
fwait
mov
jle
lds
shufps
shlb
fisubl
out
and
fcmovne
xchg
xchg
ret
les
int3
nop
sub
mov
dec
cld
push
in
addr16
cld
adc
ljmp
dec
inc
push
jo
adc
mov
adc
roll
icebp
push
out
mov
lret
mov
jbe
mov
leave
adc
dec
dec
push
jg
adc
and
cmp
inc
push
mov
push
dec
or
add
addb
gs
enter
sub
scas
xor
lods
dec
xchg
outsb
into
cmp
push
clc
dec
or
jecxz
lahf
or
push
dec
add
pop
ficoml
inc
push
and
push
push
push
sub
pop
popw
iret
mov
jns
xor
lret
adc
repz
jmp
adc
call
pop
xchg
ror
loop
decb
roll
pushf
dec
ror
jb
test
sahf
addl
sbb
dec
xor
jae
push
fcoml
clc
fistl
rclb
fldl
jae
mov
dec
or
dec
sbb
inc
adc
jle
in
pop
leave
vshufpd
dec
aad
xor
mov
push
sbb
in
lds
mov
push
dec
jns
inc
cltd
jo
lds
push
or
scas
push
mov
nop
ja
adc
loop
add
add
sub
aas
jmp
out
rol
je
and
cwtl
loopne
arpl
add
lea
dec
ret
data16
call
push
ret
dec
std
shrb
xchg
iret
sub
ret
into
bound
mov
push
xchg
imul
fs
or
jmp
rol
rol
ret
inc
cmpsl
lahf
jmp
outsl
pop
push
lret
lret
mov
push
dec
movsb
pop
mov
pop
out
mov
xor
ret
out
inc
icebp
ret
incb
cltd
insl
dec
push
insl
ds
les
inc
into
inc
sub
enter
inc
fwait
or
pop
cmpsl
xor
ret
fmul
mov
enter
ret
fldl
sub
iret
mov
cli
sahf
out
enter
xchg
inc
pop
out
leave
push
call
cltd
icebp
mov
pop
in
fsubr
les
mov
ret
outsl
pop
in
ret
lds
fst
ds
into
shlb
ret
in
fnsave
aam
pop
repz
ret
pop
repnz
ret
mov
out
out
push
xor
int
test
out
adc
cmc
pop
push
pop
pop
iret
enter
sbb
fstpl
fucomi
mov
or
fcmovbe
xlat
pop
lret
aad
pop
in
inc
lret
push
pop
aaa
push
sahf
in
fwait
xlat
inc
pop
icebp
fnsave
fcmovne
lds
fwait
les
int3
push
mov
in
pop
rorb
pop
lcall
insb
fistpl
lret
fiadds
dec
imul
inc
jae
push
fstl
pop
lcall
or
pop
pextrw
push
dec
cmp
push
repz
fmull
fsts
fsubp
mov
cld
sub
stc
pop
out
push
lock
dec
bswap
ret
inc
in
xlat
out
add
sbb
pushf
mov
pop
ret
enter
movl
push
mov
hlt
ret
cmp
leave
add
test
push
movl
pop
not
inc
sbb
loopne
leave
mov
lds
std
push
lds
pop
mov
lret
les
enter
lea
hlt
repnz
lret
xchg
aam
insb
sarl
mov
popf
in
out
nop
fwait
int3
mov
hlt
inc
pop
cld
fwait
push
fwait
ret
popf
out
not
pop
sub
push
or
fldcw
sbb
pop
data16
mov
inc
popf
ja
ret
push
sbb
pushf
push
xor
into
push
enter
arpl
lcall
xchg
std
lods
push
adc
enter
int
mov
sbb
jmp
inc
int
cmp
xchg
xchg
ret
cmc
inc
pop
je
scas
int
gs
mov
ret
mov
pop
sti
insb
fcoml
fstpl
inc
and
fisttpl
or
ret
pop
push
add
flds
pushf
aaa
pusha
enter
sahf
aam
mov
fcmovbe
push
aad
push
aam
enter
pop
adc
fwait
dec
iret
pushf
out
sbb
lcall
fwait
les
enter
jecxz
popa
ljmp
cmpsb
add
shrl
ret
sarl
les
divl
add
test
sbb
mov
stos
mov
mov
sbb
xor
and
push
mov
add
addr16
add
les
daa
arpl
inc
add
add
roll
lret
cs
loope
jecxz
mov
loop
push
rorb
fcmovnb
add
xchg
subb
shll
add
fisubs
std
and
mov
jecxz
bound
add
jno
inc
adc
aad
bound
and
adc
cwtl
andl
inc
bound
repnz
scas
rcr
gs
bound
rcll
xchg
adc
mov
shll
ja
mov
shll
shl
jecxz
xchg
iret
cltd
inc
and
sbb
cmp
fnsave
jmp
sbb
mov
lss
psrlw
xchg
pop
pushf
push
bound
xor
mov
add
mov
adc
enter
add
aaa
add
and
inc
test
jo
push
push
lods
inc
xor
xor
push
mov
inc
loopne
mov
shlb
in
gs
rol
xchg
cmc
adc
xor
jb
jecxz
ret
dec
inc
in
sar
push
sbb
ss
roll
shlb
fdivrl
xchg
loop
repnz
mov
fmull
and
push
lods
cmc
aam
repnz
in
in
aad
inc
or
mov
mov
bound
fs
dec
push
fstpl
sahf
fldcw
dec
push
push
jl
cltd
mov
push
xchg
or
inc
push
pop
mov
mov
nop
lret
inc
add
loop
xchg
add
or
movsb
xor
in
in
inc
out
xor
ss
xchg
pop
xchg
andl
arpl
inc
loop
repnz
jg
lods
dec
lret
xor
inc
add
aad
jo
mov
jo
subl
jecxz
mov
jae
shl
mov
fiadds
xor
iret
je
popa
jmp
in
jae,pn
rclb
inc
xor
inc
lods
xor
inc
mov
adc
data16
das
call
fs
and
imul
repnz
test
lods
add
and
push
sti
lret
xor
es
sbbl
xchg
xchg
lock
jo
rcll
add
rcrl
out
mov
inc
dec
es
adc
adc
mov
ret
in
xor
add
dec
outsl
xchg
cmpsl
and
lock
es
sbb
sub
icebp
mov
daa
inc
cmc
inc
frstor
mov
jno
movsl
lret
jmp
out
fxch
popf
sub
rcr
sahf
xchg
and
mov
int3
xchg
loop
inc
add
xchg
andl
and
fldl
stc
or
push
push
ret
in
lods
mov
jecxz
jne
jnp
shll
rolb
mov
jo
mov
sbb
test
mov
mov
and
in
pusha
and
add
ja
dec
add
pop
test
xor
mov
cmc
mov
in
pop
sbb
out
lret
mov
int
xor
mov
push
inc
fadds
xchg
sbb
js
popf
add
loop
lods
mov
or
cmpsl
jo
push
jecxz
cmp
push
enter
mov
push
push
push
les
jecxz
stc
lock
les
and
mov
test
xor
lds
xchg
and
mov
sbb
roll
decl
out
repnz
nop
loopne
mov
dec
and
shll
arpl
jo
xchg
sub
adc
xor
imul
mov
xchg
push
xor
repnz
popf
in
and
icebp
push
aaa
add
push
mov
jmp
lret
pop
mov
cmpsb
add
dec
sbb
add
subl
sub
test
mov
add
add
in
fmul
xor
std
js
mov
or
xchg
fwait
push
notl
aaa
stos
popa
and
cli
adc
fsubp
or
mov
je
pop
fldl
cltd
sub
notb
xor
and
mov
loop
jle
pop
les
inc
add
inc
sbb
pop
addr16
sbb
jnp
xor
int
jo
sahf
loop
push
stos
insl
cmpsb
ret
rcl
and
adc
pop
add
in
fs
stc
and
into
jp
das
mov
mov
lret
fiadds
xchg
inc
ss
jo
fs
in
es
push
mov
lahf
iret
add
sub
inc
jp
jp
pushf
shlb
push
add
mov
and
inc
aam
cli
dec
popa
sbb
int
fld
frstor
je
fists
rolb
pop
daa
and
iret
xchg
repnz
rcr
mov
cmpl
out
jecxz
push
sahf
dec
dec
add
out
mov
lds
bound
mov
insb
add
and
xor
mov
cli
popf
lret
jb
xor
lock
in
insb
data16
loop
add
pop
das
sub
mov
xor
sub
bound
adc
xor
sub
xchg
add
mov
mov
sti
imul
ja
fbstp
xor
dec
xor
loope
xchg
mov
add
mov
mov
int3
shll
sti
fbstp
mov
inc
pop
or
dec
inc
adc
fstl
daa
xor
or
mov
daa
pop
shll
push
mov
sbb
outsb
xchg
xor
mov
add
in
addb
mov
int3
bound
push
xchg
je
or
ja
push
dec
add
mov
xchg
cmpsb
bound
jbe
inc
cmpsb
mov
mov
aad
mov
mov
add
jle
filds
cmpsl
push
push
in
fdiv
dec
xchg
pop
out
rcl
xor
mov
repnz
ja
sub
pushf
adc
mov
andl
adc
push
out
add
popa
jmp
test
jne
mov
dec
fdivrl
add
mov
out
int3
pop
mov
jg
es
and
outsb
inc
iret
jecxz
leave
mov
jp
stc
jae
xchg
inc
mov
ja
mov
sti
add
cmp
pop
xor
mov
jo
inc
daa
or
pop
jp
push
in
fst
in
push
or
or
outsb
and
add
xor
dec
inc
aaa
inc
in
out
loop
mov
lods
xor
xchg
cmpsl
scas
outsl
add
shr
jecxz
mov
jae
xor
sbb
icebp
adc
sbb
inc
or
test
push
sar
dec
sbbl
inc
inc
xor
or
or
push
mov
add
jecxz
add
xchg
pop
ret
xor
sti
call
sti
sub
mov
rcl
push
mov
add
shll
call
fs
lods
arpl
and
xchg
in
out
fnstcw
pop
pop
dec
dec
cmpsl
je
fbstp
mov
jne
loop
loop
movsl
iret
push
ficomps
xchg
inc
es
inc
xchg
pop
enter
mov
jle
gs
movsb
mov
lea
pop
dec
mov
loope
xchg
and
pop
xchg
cmpsl
or
push
mov
es
push
aam
je
jbe
xor
add
arpl
ds
pop
adc
mov
cwtl
inc
int
or
das
inc
iret
mov
ja
loope
ror
jecxz
out
inc
testb
rorl
fidivl
fcomps
sbb
xor
in
or
adc
and
insl
mov
jg
push
je
or
addr16
adc
xlat
ret
or
lock
push
xchg
xchg
cmp
or
popf
js
addb
daa
and
mov
jp
dec
fbld
pop
inc
sbb
xchg
rclb
pop
xchg
loop
inc
mov
add
push
in
sub
pushf
add
lods
stos
imul
inc
lods
pop
rcll
cmpsl
or
mov
incl
cmp
mov
ret
add
imul
mov
mov
jmp
mov
jg
das
mov
xchg
les
stos
test
xor
test
add
mov
or
in
loope
mov
inc
mov
bound
add
add
adc
testb
and
cmp
mov
mov
and
cltd
cmp
dec
in
sbb
mov
jecxz
cli
ror
mov
repnz
or
insl
imul
add
mov
repnz
sbb
mov
pop
xor
sbb
push
mov
shrl
dec
sub
rcl
xorb
mov
or
xorb
add
testl
popf
inc
inc
lds
pop
inc
xchg
xchg
cmp
xchg
arpl
bound
xchg
mov
lret
jb
push
mov
mov
pop
xchg
jae
sub
cmp
or
lahf
fcmovnbe
push
push
in
xchg
inc
adc
fwait
adc
xchg
add
xchg
jecxz
jne
inc
push
push
ss
xor
addr16
push
xchg
ss
pop
jb
sbb
inc
sub
repnz
in
cmc
sub
jb
jae
arpl
shll
mov
sub
lea
adc
flds
arpl
adc
jns
add
and
adc
clc
sbb
bound
mov
jne
enter
jmp
mov
aas
pop
xchg
jns
iret
cmpl
push
aad
inc
or
mov
notl
ret
sbb
sti
dec
jecxz
and
pop
imul
and
dec
test
mov
ja
xorb
daa
ret
xchg
push
inc
lock
dec
in
add
mov
and
test
pop
xchg
inc
mov
jecxz
push
sub
fwait
mov
aas
nop
shll
shl
mov
icebp
jbe
pop
inc
pop
add
cmpsb
push
movlps
je
pushf
dec
push
ljmp
dec
roll
add
inc
ss
jb
in
add
mov
outsb
dec
cmpsb
inc
jp
jb
mov
das
rcrl
or
inc
test
cmpsl
daa
js
cld
aam
xor
and
pusha
mov
sbb
xor
add
popf
mov
aas
add
xor
push
mov
push
clc
mov
xchg
shl
repz
dec
lods
add
sub
repnz
roll
lods
mov
fnstenv
popf
ffree
aam
mov
mov
cmpsl
shrl
pushl
shl
jb
push
inc
xorb
and
fadd
jb
mov
jp
xor
es
mov
es
xor
push
sbb
cmp
sbb
std
dec
mov
in
pop
xor
lock
mov
stos
add
jmp
and
adc
adc
add
out
ret
or
mov
stos
mov
mov
stc
mov
loop
movsl
stos
movl
push
frstor
mov
xor
ret
mov
ds
push
call
mov
xlat
ret
popa
repz
stos
loopne
add
mov
mov
xchg
xchg
call
test
mov
and
stc
dec
loop
movsl
ret
enter
sbb
inc
mov
movsl
jbe
dec
in
push
out
inc
loopne
jle
or
and
repnz
mov
sbb
ret
and
adc
push
mov
ljmp
push
or
mov
pop
ret
ret
in
adc
mov
lods
mov
inc
push
xchg
loope
lds
test
push
push
fbstp
fsubs
xchg
in
or
ret
fnstenv
add
mov
or
shll
dec
cmp
mov
ret
xchg
push
jecxz
popa
lcall
add
mov
push
repnz
mov
sbb
mov
loop
mov
addr16
stc
mov
ret
pop
cmp
test
das
inc
mov
xchg
in
ret
fstl
incl
pop
push
mov
in
push
push
std
icebp
leave
shrl
push
stc
push
mov
pop
test
roll
in
mov
test
ret
loopne
dec
adc
movsl
mov
out
lds
enter
or
icebp
inc
lds
and
ret
aas
mov
pop
cmpsb
ret
aad
popa
add
fnsave
mov
cli
mov
xchg
mov
mov
icebp
jg
mov
ret
in
jg
stos
rolb
shll
cmp
inc
in
les
xor
mov
dec
and
inc
pop
mov
jle
pop
and
mov
push
int3
movsl
daa
pop
push
push
push
ret
fldl
xchg
fbld
dec
enter
xchg
test
frstor
xchg
xlat
mov
gs
push
push
ret
mov
arpl
insb
pop
xchg
mov
ret
push
and
mov
sbb
xchg
stc
mov
push
leave
adc
mov
or
mov
mov
std
movsl
and
and
add
add
push
add
adc
rcll
movb
cmp
loop
ret
fisubl
ret
fwait
les
enter
push
ret
lcall
sbb
addr16
call
mov
int3
out
movsl
iret
jl
fs
leave
sub
mov
mov
jno
into
lds
jecxz
push
ret
test
inc
stc
cmpsl
push
leave
and
push
cmpsl
xor
or
dec
xor
push
cld
xor
xchg
shr
and
scas
rol
inc
gs
cmpsl
push
pop
add
inc
or
shrb
xchg
pop
cmp
ret
and
jl
jae
push
leave
inc
into
push
out
mov
std
jnp
pop
push
sbb
cmp
je
scas
ret
add
dec
push
cld
test
push
pusha
pop
neg
icebp
cmp
call
leave
ficomps
bnd
or
fdivl
pop
enter
pushf
fcomps
sbbl
push
les
enter
aam
enter
ret
data16
jl
mov
cmp
out
dec
jp
aad
fucomp
stos
icebp
sub
xor
cld
outsb
jl
fmull
adc
xlat
in
cli
sti
mov
out
arpl
js
lret
in
enter
in
fcmove
out
pushf
sub
fcoml
cld
repz
test
pop
loop
cli
loop
inc
mov
loop
push
push
or
pop
jmp
dec
imul
repz
pop
xor
dec
xchg
lds
inc
sbb
test
outsl
sti
add
jmp
sub
push
inc
mov
leave
inc
out
dec
push
or
movsl
repz
pop
stos
loop
xchg
push
mov
xor
dec
sub
adc
push
push
loop
vcmpsd
testb
sub
inc
fdivrl
push
jnp
leave
and
fmul
lret
pusha
lret
es
and
pop
mov
pop
hlt
ret
add
aam
push
push
inc
push
cmp
test
repnz
fdivl
imul
lret
sti
adc
dec
rcr
ljmp
mov
or
repz
inc
inc
jno
ds
es
scas
mov
jmp
fstpl
rcll
lods
cli
xlat
adc
stc
adc
sahf
xchg
call
push
dec
dec
mov
in
fld1
lcall
push
das
lds
fidivrl
loop
jg
out
dec
lds
ret
and
loopne
jecxz
scas
iret
fiadds
movsb
loop
mov
add
mov
shr
lret
mov
adc
mov
loope
dec
outsb
mov
arpl
leave
out
test
dec
insl
lea
popf
pop
ss
mov
in
ja
add
sub
loop
mov
lret
jmp
fistps
jb
daa
test
jmp
jbe
inc
stos
jne
ret
xor
push
imul
stos
or
xchg
inc
lret
stos
add
jecxz
and
cmpsb
or
ret
mov
push
cmp
out
int
inc
xchg
push
sbb
out
leave
test
dec
fstps
dec
push
call
lea
dec
and
imul
insb
xchg
inc
hlt
sbb
test
aam
pop
adc
adc
pop
loopne
loop
jecxz
bound
es
data16
jno
add
movsb
in
sub
pop
add
or
arpl
andl
inc
fs
movsb
xor
inc
add
push
and
dec
bound
cmpsl
scas
cli
mov
mov
and
loop
mov
mov
xor
fistps
stos
popa
in
push
loopne
mov
insl
les
sahf
mov
mov
fildl
jne
xor
scas
fwait
or
mov
mov
test
lcall
jp
dec
inc
sahf
retw
sbb
xchg
leave
cs
lret
ret
cli
dec
jecxz
or
stos
pop
inc
dec
mull
pop
xchg
fs
enter
sub
ficomps
dec
sub
lret
les
jmp
push
inc
scas
daa
dec
aaa
dec
hlt
inc
es
out
cmp
jecxz
clc
sti
sar
push
dec
sub
nop
adc
in
mov
cmp
mov
add
ret
icebp
scas
add
mov
loop
pusha
into
pop
dec
daa
push
dec
stos
addr16
push
bswap
sub
fwait
push
push
cld
dec
outsb
shl
or
or
rorb
dec
loop
add
dec
add
in
ds
or
call
xlat
in
es
cli
fistps
outsb
mov
inc
adc
dec
dec
and
dec
int3
shll
xor
sub
dec
adcl
ret
dec
push
jecxz
sbb
jle
adc
push
fs
dec
test
adc
scas
adc
inc
inc
rclb
cmovge
push
xlat
mov
adc
mov
movsb
dec
es
aad
sub
dec
inc
mov
fsubr
pop
cli
mov
mov
sub
inc
jecxz
les
in
dec
or
ret
cmp
fs
fdivr
and
inc
lahf
gs
in
dec
dec
rclb
ret
adc
sbb
push
dec
inc
and
lock
dec
fadds
inc
repz
fisubl
adc
xlat
insl
jbe
and
rep
jecxz
bound
test
dec
add
adc
call
dec
pop
shll
inc
sbb
inc
jecxz
mov
loop
push
mov
movsl
sbb
lcall
repnz
inc
daa
stc
xchg
mov
and
das
inc
xchg
inc
arpl
fiadds
xor
add
bound
stc
pop
pop
xchg
push
mov
jecxz
test
rolb
mov
call
inc
inc
mov
popa
out
or
dec
cmpsl
testl
mov
aam
out
ljmp
out
daa
mov
ss
add
jo
movsb
jp
shlb
xchg
dec
mov
ret
and
mov
jl
rol
dec
ds
fldenv
push
sub
push
fstl
cmpsl
pop
repnz
or
and
jno
pop
fldenv
ffree
and
fsubl
adc
mov
pop
and
push
popf
je
jle
dec
or
inc
xor
aam
sti
mov
adc
mov
mov
adc
movsl
outsb
mov
cmp
xchg
add
adc
mov
rol
fnstenv
sti
sub
es
inc
rcrb
test
or
mov
popf
push
roll
fwait
mov
cld
insb
repz
inc
or
or
sbb
shrl
cmp
lret
and
shll
adc
inc
outsb
xchg
fwait
add
pop
leave
mov
pop
decb
jmp
insb
inc
repnz
aad
pop
out
test
pop
push
push
flds
push
sbb
push
fistpl
aad
fildll
cmp
mov
inc
es
or
mov
add
sarl
sbb
push
fadds
sub
out
imul
jmp
cmp
dec
fiaddl
jp
cld
add
sarb
jp
xor
mov
out
fisttps
stc
lret
cmp
sti
sbb
cmpsl
fmull
push
cli
test
lret
fstps
sbb
mov
movsb
inc
cmp
sub
adc
out
adc
jecxz
add
fst
add
stos
js
pop
aad
xchg
pop
stos
add
into
incb
jl
xchg
inc
pop
shlb
aad
jo
out
loop
push
fsubr
push
sub
aas
lret
jnp
lds
aad
cli
and
jl
pop
inc
ret
push
fcom
enter
mov
mov
sbb
inc
testb
xlat
pop
inc
pop
inc
and
outsb
mov
loop
lret
dec
lods
shl
mov
leave
or
mov
cli
loopne
stos
cmp
push
ret
enter
pop
sbb
cmp
pop
shll
pop
dec
xor
enter
or
les
int3
sarb
pop
xor
dec
aas
lret
aad
cmp
pop
sub
pop
push
sbb
jmp
mov
mov
aam
pop
mov
add
inc
dec
lcall
or
aam
dec
cld
testl
dec
hlt
add
loop
jmp
sti
or
or
and
dec
fists
fstp
mov
les
movsb
cmovp
pop
cltd
or
call
add
or
adc
mov
pop
mov
cmp
or
inc
lds
js
mov
mov
cmpsl
push
xor
xchg
iret
aaa
out
int3
iret
cli
out
push
xchg
bound
cmp
imul
fdivr
rcl
lret
jmp
or
les
pop
sub
scas
push
push
inc
mov
mov
push
aad
push
push
adc
pop
insb
leave
pop
jl
rorl
sti
pop
test
rcl
fwait
xlat
in
test
rol
out
or
jge
push
xchg
inc
sbb
mov
les
cltd
lret
sbb
int
xor
addr16
pop
cmp
xor
and
cld
lcall
fdivrl
int3
push
ja
cmp
dec
out
mov
sahf
popa
push
xchg
lock
popf
lret
inc
xchg
stos
adc
adc
rcrl
je
dec
lret
insb
popa
aad
mov
xlat
fildl
pushf
out
shll
fcmovnb
orb
lods
jge
loope
ljmp
cmp
sbb
jp
fmul
cld
add
inc
iret
pop
adc
pop
int
add
movsb
bound
int3
ljmp
dec
jl
int
mov
enter
ja
sub
adc
jmp
or
cmp
push
aam
mov
data16
and
pop
popf
add
xlat
lret
jl
sbb
lret
fs
pop
dec
pop
lds
jl
fmuls
pop
fst
popf
inc
mov
sbb
ret
outsb
movsl
and
rcrl
daa
pushf
insl
repz
inc
lcall
fldt
mov
pop
in
fsubl
inc
lds
out
fcomps
movsb
add
pop
ds
dec
mov
fsubrl
pop
mov
pop
dec
dec
push
jp
insb
push
orl
repz
and
cs
dec
enter
fidivrl
mov
popa
sub
and
xchg
loop
bound
pop
fmulp
pop
rcr
inc
int
out
rep
fisubs
push
jl
jg
sub
js
pop
sbb
adc
mov
out
pop
sbb
les
loop
popa
inc
rclb
enter
inc
mov
inc
inc
mul
inc
dec
push
push
cmp
outsl
dec
fimull
pop
ljmp
jecxz
loop
push
pop
pop
inc
sub
jne
dec
add
fistpl
cmp
inc
mov
fucomi
dec
out
out
mov
jge
push
ljmp
adc
jge
adc
insl
pop
xchg
and
sub
roll
fdivl
int3
sbb
aad
cmp
aam
addr16
or
push
adc
ds
push
test
adc
dec
aaa
neg
into
mov
ljmp
inc
xor
je
cmp
ret
lret
incb
xchg
loop
cmp
lret
nop
enter
in
add
pop
adc
flds
into
orb
loop
and
push
int
cld
push
fiaddl
adc
inc
loopne
movb
and
jne
adc
xchg
or
test
pop
cmp
inc
jb
pop
iret
hlt
aad
mov
adc
popa
shlb
mov
jecxz
pushf
or
fucomip
les
enter
sbb
cmpsb
xchg
push
addl
lds
aam
pop
dec
stc
loop
popa
int3
aam
fiaddl
mov
lret
pusha
and
push
mov
rcrl
pop
loopne
arpl
in
clc
dec
xlat
dec
push
or
xchg
inc
inc
loop
inc
rcl
dec
scas
jecxz
adc
inc
add
aad
into
out
or
pop
dec
aam
jns
aam
les
dec
fidivl
loop
stc
in
push
addb
push
push
dec
push
mov
shl
add
lret
aad
and
sbb
or
xor
stos
shll
stc
fildll
push
popf
out
mov
in
ret
fucomi
mov
rcrl
and
lcall
push
ljmp
test
adc
int3
push
sti
xchg
fidivl
push
rolb
pop
push
fldl
sti
inc
cld
rcrl
sub
jecxz
add
mov
pop
das
fstpl
dec
or
js
daa
arpl
dec
pop
push
js
out
cltd
enter
pop
add
ljmp
and
xchg
push
sbb
repnz
or
int3
inc
mov
pop
cmp
ds
push
ljmp
cmp
adc
jp
rol
pop
icebp
fcomps
aam
or
jnp
in
sub
cld
push
adc
ja
inc
and
pop
adc
call
enter
sub
dec
xor
mov
or
js
or
jle
xchg
dec
add
pop
addr16
rcrl
mov
into
add
mov
sbb
shll
cmp
mov
pop
fsts
sbbl
shll
popa
sub
roll
je
jle
sbb
pop
mov
inc
inc
outsl
ja
sbb
add
pop
jne
imul
ja
sub
fldcw
add
add
sub
add
lods
iret
inc
pop
adc
sbb
push
lahf
pop
push
sbb
int3
xchg
into
add
adc
pop
scas
xor
sub
sarb
loopne
aas
icebp
push
sahf
dec
enter
push
rcrb
repnz
fmul
push
enter
add
jecxz
add
jbe
inc
adc
dec
add
inc
push
dec
pop
inc
ret
push
add
pop
xor
ljmp
loop
leave
push
cli
add
sbb
dec
xchg
inc
fwait
xor
pushf
sub
mov
lcall
mov
sbb
push
ljmp
fstpl
lret
push
lret
enter
call
hlt
sbb
cmp
inc
and
sbb
sbb
enter
stos
inc
mov
rcrb
xor
pop
cs
iret
sti
jmp
lock
int3
dec
out
out
xlat
dec
enter
iret
ja
flds
pop
in
in
mov
pop
pop
std
xchg
dec
dec
jg
repnz
mov
ds
outsl
leave
out
enter
adc
cmp
fistps
ror
pop
xlat
fcmovnu
rorl
adc
sub
fbld
push
fs
cmpsl
mov
adc
sbb
aad
mov
sbb
inc
out
xchg
inc
and
dec
push
data16
dec
fmul
lea
lret
xor
mov
push
cli
shlb
fwait
insl
filds
xlat
push
mov
dec
or
lret
pop
push
sbb
jge
xchg
data16
sbb
mov
leave
lock
notb
jmp
mov
int3
pop
rcll
loopne
push
fstpt
push
xor
xor
xor
jge
nop
ret
test
dec
dec
lock
inc
in
sbb
in
cmp
data16
and
add
imul
dec
in
xchg
fiaddl
ds
inc
ja
into
out
aam
and
mov
mov
inc
ljmp
in
push
push
aad
les
fldl2e
xchg
push
cmpsl
loop
fistpll
dec
xchg
mov
ret
xor
fimull
clc
inc
ljmp
fcomps
int3
mov
sub
push
mov
je
add
pop
bnd
std
icebp
dec
cmp
loopne
pushf
and
push
shlb
inc
lcall
and
jp
adc
push
sub
iret
fs
ljmp
sti
lods
mov
dec
test
mov
mov
out
adc
fiaddl
fbld
cmp
jecxz
push
test
mov
pop
nop
lret
dec
test
dec
add
xchg
sub
mov
mov
bnd
add
incl
adc
stos
pop
dec
call
imul
add
mov
fldl2e
push
loopne
ret
cwtl
pop
or
sbb
sbb
imul
iret
dec
xchg
mov
sbb
faddp
frstpm(287
adc
add
test
aad
out
sti
push
ja
dec
fimuls
bound
pop
inc
dec
mov
fsubr
dec
flds
mov
fsubr
out
inc
dec
inc
loop
dec
mov
fisttpl
pop
lods
out
fiaddl
or
leave
ljmp
int3
or
mov
stos
dec
dec
mov
pop
sbb
cld
pop
push
push
cmpsl
adc
das
jl
les
es
inc
loop
push
leave
aam
int3
mov
ror
hlt
fmull
stc
and
fists
sbb
push
les
push
pop
and
out
or
inc
mov
push
inc
push
ds
popa
jo
sbb
mov
stos
pop
sbb
push
test
pushf
xlat
jecxz
jno
push
ret
clc
adcb
and
ret
lret
add
sub
fdivr
adc
sub
shlb
ljmp
dec
js
xchg
push
rclb
adc
add
jbe
into
sti
and
pushf
sub
faddl
ret
fsubrl
push
js
dec
push
dec
leave
pop
fmull
clc
push
outsb
hlt
aas
fists
jbe
push
fucomip
cli
pop
jbe
jbe
cmp
push
xlat
push
aam
je
dec
imul
roll
add
inc
pop
fimuls
jl
lret
or
iret
fcoml
pop
inc
and
arpl
repnz
addr16
mov
xchg
inc
jmp
mov
add
cmp
dec
out
push
jbe
enter
jl
pop
mov
pop
add
stos
sahf
les
pop
mov
push
push
sti
mov
jnp
lea
push
jo
sar
ret
and
pop
push
notl
in
sub
test
out
movb
add
iret
repnz
dec
pop
les
dec
std
aaa
push
fcoms
inc
inc
sti
inc
inc
adc
insl
pop
xchg
jecxz
mov
lds
adc
stos
lock
aas
adc
neg
loopne
pop
sbb
mov
cmp
jbe
adc
and
rolb
mov
enter
cs
dec
pop
add
pop
jo
pop
cmpsl
lcall
add
divl
sti
push
ffreep
pop
pop
pushf
cmp
lret
lcall
inc
mov
adc
push
ss
and
push
dec
lret
mov
push
pop
pop
int
inc
dec
pop
pop
jnp
orb
popf
xor
inc
into
dec
jmp
pushf
mov
push
pop
ljmp
sub
inc
mov
and
icebp
pop
sbb
leave
bound
push
dec
dec
lock
pusha
mov
int3
fdivr
pop
roll
jl
insl
int3
jge
sbb
aad
cmp
mov
push
fcmovb
fldt
les
jmp
inc
add
and
mov
cwtl
pop
lret
bound
dec
dec
movl
leave
rol
fisttps
push
push
and
jmp
pop
pop
fstps
sbb
cs
and
dec
mov
push
sahf
add
ljmp
out
repnz
push
sbb
jnp
push
jne
into
pop
mov
cmp
ror
add
push
inc
js
inc
dec
stos
xor
jle
pop
jle
out
mov
jne
aam
loopne
add
mov
lret
dec
dec
stos
lcall
enter
dec
int3
fstpl
aad
fcmovnb
sarl
sbb
dec
or
mov
stos
fsubs
mov
ds
testb
push
pop
aad
xchg
or
xor
data16
out
inc
cmp
leave
mov
mov
adc
loop
sbb
mov
ds
les
mov
push
mov
adc
dec
fldenv
bound
rclb
out
lcall
int
jb
xor
cli
fmull
cwtl
inc
mov
fcmovne
ficomps
je
dec
lods
fcmovnu
ja
ror
add
ljmp
ret
xlat
ret
test
sub
and
mov
pop
dec
dec
xchg
fmul
sub
dec
orl
cmp
sub
jbe
enter
je
repnz
lret
lret
fistl
jg
pop
in
enter
add
dec
gs
xchg
adc
add
fcmove
lods
inc
cmp
mov
leave
dec
loopne
pop
testl
push
aam
lods
pop
inc
dec
movsb
fldenv
loopne
cmp
inc
das
and
add
loopne
loopne
movsb
sub
out
loopne
fsubl
add
dec
sbb
incb
jp
popl
dec
enter
imul
popa
cmpsb
sbb
int3
loop
std
ret
jge
inc
cltd
jne
shr
dec
add
loope
cmpsl
add
inc
ds
add
fmuls
adc
jge
pop
cmpsl
dec
cld
out
jl
sbb
xchg
pop
push
pop
mov
pop
data16
jl
pop
push
lret
fnstcw
cmp
cmp
ret
sub
outsb
push
pop
std
push
or
dec
ret
repz
fisubl
pop
test
sbb
ret
les
fiaddl
dec
add
adc
test
pusha
sarb
loopne
or
cmp
ret
fildll
mov
mov
mov
dec
popa
mov
jmp
push
add
jmp
test
movsl
mov
dec
cmpsl
rcrl
cld
inc
jecxz
aas
sbb
cmpsb
mov
inc
pop
fistps
loopne
xchg
test
mov
adc
add
mov
test
mov
aad
inc
mov
mov
loope
loopne
mov
mov
decl
push
dec
sar
xchg
test
sarl
cmp
pop
ret
xor
into
into
or
pop
loop
xchg
or
pop
rorb
pushf
dec
jl
mov
pop
popa
loopne
loop
shll
repnz
rclb
push
pusha
or
add
jge
mov
fstpt
ret
insl
push
mov
fstl
add
push
mov
dec
das
xchg
inc
mov
ret
inc
or
fadds
inc
add
out
lret
push
ret
in
aam
push
fldenv
in
dec
je
sarl
jmp
jns
aad
ret
inc
movb
stos
push
enter
sbb
push
into
dec
data16
pop
into
repnz
push
pop
add
fldenv
push
lods
add
das
ds
pop
mov
hlt
jl
ror
adc
push
mov
push
loope
add
loope
ja
cmpsb
fistl
scas
inc
sbb
fmul
test
loopne
sub
pop
dec
shlb
cmp
nop
je
pop
ret
test
push
inc
sbb
xor
aad
cmpsl
pusha
int
ds
pop
in
fisubrs
jbe
add
pop
inc
cmpsl
and
pop
in
dec
fcmovne
or
cmpsb
pop
dec
mov
cld
lea
xor
cmpsl
in
dec
cmp
sti
sbb
iret
leave
stos
add
lds
cmc
adc
or
pushf
loopne
push
jmp
push
jns
fcompl
fadds
test
imul
addr16
pop
insl
filds
pop
push
inc
cld
fcoml
fst
sbb
int3
cltd
push
fimuls
cltd
dec
movsb
cmc
sbb
pop
fisubl
ret
enter
ds
enter
add
rclb
outsl
lds
fistpl
inc
cmp
xor
pop
add
and
dec
shr
fists
dec
dec
dec
inc
stos
ljmp
xlat
ficoms
add
or
or
cmc
push
mov
bound
fisttps
xchg
fdivrp
pop
stc
int3
jl
bnd
push
push
xor
pushf
stos
sub
roll
push
ret
data16
fdiv
dec
mov
push
pop
adc
push
stc
insb
pop
pop
inc
mov
rorl
push
in
cmp
out
pop
pop
es
je
fwait
adc
push
inc
fldl
or
and
push
shrl
push
pop
push
and
decl
iret
ljmp
lret
not
jmp
fisttps
test
push
and
jmp
xlat
sbb
mov
icebp
data16
std
shl
inc
pop
insb
cli
int
not
and
iret
push
out
adc
sti
xor
lods
mov
dec
inc
inc
ret
scas
dec
aad
rol
data16
or
adc
push
dec
pop
sbb
dec
cmp
int
push
dec
shll
add
shr
ret
faddl
fcompl
fcmovbe
ffreep
or
adc
lcall
out
adc
arpl
dec
inc
mov
bound
enter
ficoml
repnz
fstpl
fnstcw
loop
bnd
fsubrl
movsb
cld
in
sbb
lea
fsts
xorb
icebp
xlat
adc
dec
inc
shl
push
sub
je
aam
dec
leave
cmp
xor
and
shlb
and
mov
sub
stos
dec
dec
movsb
adc
pop
mov
inc
nop
pop
ljmp
sub
pop
push
dec
sbb
xchg
ret
into
jmp
inc
mov
cmp
xchg
pop
js
stos
rcrl
adc
aam
test
mov
iret
sbb
scas
ret
jbe
push
fmul
sub
enter
sbb
push
sar
dec
loope
push
shll
or
rolb
outsb
test
push
loope
dec
mov
lds
dec
or
mov
jbe
pusha
int3
scas
inc
inc
cld
arpl
lret
push
sti
add
enter
iret
mov
xchg
fsubr
or
lret
pop
loopne
rolb
enter
leave
jbe
push
ret
push
popa
and
fldl
inc
mov
jbe
mov
rolb
mov
cmp
ret
inc
push
and
dec
or
dec
pushf
popa
ja
dec
cs
push
aad
pusha
outsb
add
push
inc
cli
inc
pop
loopne
hlt
add
cmpsl
lcall
notb
ficoms
xchg
loope
les
push
or
dec
mov
lret
push
xchg
inc
lds
inc
iret
pop
add
rorl
cld
add
pop
dec
fcompl
loopne
cmpsl
std
fisttpll
ljmp
lret
enter
push
push
xor
pop
add
enter
dec
loopne
pop
loop
add
xlat
adc
mov
push
cmp
call
fadd
pushf
cmpb
out
dec
pop
jmp
push
arpl
dec
push
mov
loopne
leave
mov
or
leave
pop
in
jge
add
test
jg
push
push
and
pop
jae
lcall
out
xor
test
add
jmp
iret
into
mov
call
addl
push
into
xchg
xchg
popf
xchg
mov
dec
gs
pop
push
mov
mov
lret
mov
inc
cmc
sbb
push
out
sarb
insb
inc
dec
mov
inc
ss
pop
lds
roll
fwait
or
jne
mov
fisubl
fldt
jecxz,pn
and
push
fs
lds
dec
push
adc
sbb
xchg
and
pop
loop
inc
leave
xlat
sti
repz
add
xor
and
jl
lods
lret
adc
fidivs
dec
les
stc
scas
loop
mov
jl
dec
in
push
loop
rorl
inc
sar
cmp
cmp
fcom
inc
pop
jecxz
into
sub
and
lret
sbb
popa
xchg
fcompl
dec
jmp
and
out
and
into
inc
in
add
ljmp
or
imul
ret
pop
dec
outsb
push
loope
jo
lcall
mov
dec
inc
dec
les
loop
daa
add
fstl
hlt
pop
or
add
inc
pop
hlt
jl
jb
jmp
cmp
fmull
jmp
rorl
rclb
or
ret
dec
in
dec
leave
inc
dec
sbb
lret
ficompl
fistps
add
pop
insb
add
inc
pop
adc
pop
aad
rcll
sbb
rcll
lret
pushf
pop
imul
iret
add
dec
pop
dec
mov
mov
les
mov
push
push
xlat
mov
xlat
cli
inc
cld
sbb
jo
inc
dec
cmpsl
sbb
and
sbb
ljmp
mov
inc
adc
and
lret
adc
loopne
or
aad
rcl
sti
into
push
and
sub
ja
fisttps
dec
push
dec
adc
aaa
or
lds
repnz
sti
pop
cmpsb
repnz
adc
mov
xchg
fidivrl
push
sbb
cli
dec
dec
leave
cs
in
movsb
inc
or
jne
test
push
lret
xlat
dec
xlat
inc
cld
and
mov
push
inc
ljmp
leave
or
and
pop
jns
fstpt
inc
sbb
inc
sti
std
dec
or
aam
sarl
out
xor
or
loop
cmc
dec
mov
fcmovnb
pop
leave
jne
inc
xchg
sbb
or
insb
inc
les
cli
pop
cmp
inc
decb
rorb
xchg
inc
subl
popf
and
pop
sbb
int
lcall
test
push
ret
inc
push
push
enter
push
dec
jmp
or
cmpsl
pop
dec
and
not
enter
fwait
rcrl
fwait
repnz
inc
xchg
ret
aad
ljmp
jl
lret
pusha
mov
push
adc
push
faddl
inc
pop
mov
push
xchg
jae
bound
ja
jmp
dec
dec
inc
sub
scas
outsb
fisttpll
cli
fdivl
pop
mov
pusha
ret
pop
pop
dec
xor
dec
jp
jae
jo
xchg
inc
fs
cmp
mov
inc
outsb
jae
iret
mov
pop
psrlq
fisttpl
inc
adc
push
rorb
inc
hlt
loop
inc
inc
mov
rcl
dec
lret
adc
into
ljmp
scas
add
adc
sarl
les
inc
cld
dec
fsubrl
inc
and
popa
lods
xchg
or
push
xor
adcl
sahf
inc
ja
popa
test
inc
lods
gs
pop
loop
add
xchg
mov
xchg
fdivl
in
pop
xchg
push
ljmp
pop
push
mov
and
jae
test
lea
ljmp
fiaddl
dec
int3
push
cmpsl
jl
dec
mov
mov
inc
fbld
icebp
in
push
leave
sbb
jne
sbb
enter
sbb
jecxz
fbld
or
pop
test
and
aad
pop
mov
pop
and
fwait
pop
dec
dec
faddl
sbb
dec
js
into
int3
inc
leave
inc
jl
dec
xlat
mov
xor
dec
bnd
sbb
jbe
xchg
fiadds
stos
loopne
or
adc
sti
pop
dec
fimull
push
dec
add
mov
icebp
ret
sbb
push
inc
leave
jle
mov
cli
dec
enter
or
fldt
loop
jp
fsubl
add
in
sbb
cmpsb
jno
shl
adc
mov
add
inc
adc
repnz
or
lret
mov
lret
aam
lcall
addb
sarl
and
std
xchg
cwtl
enter
call
fisubl
or
inc
adc
xchg
fldl
icebp
adc
divl
fdivrl
and
inc
roll
push
or
test
cmp
cmp
dec
out
fmul
sti
cmp
ljmp
and
es
int3
repnz
adc
insb
bound
test
enter
push
std
hlt
in
idivb
pop
adc
lods
clc
push
mov
rcll
adc
jge
popa
repnz
push
push
lods
inc
int
sbb
aaa
ljmp
pop
adc
data16
sub
dec
dec
jl
mov
lret
outsb
loop
dec
pusha
scas
fidivrl
pop
je
push
pop
cmpsb
insl
faddl
mov
shll
leave
lret
mov
pop
shrb
dec
es
push
int
xchg
ficompl
loop
insl
pop
push
pop
cmc
jbe
enter
pop
dec
xchg
ret
lret
adc
loope
inc
shll
mov
adc
dec
gs
cltd
fincstp
sarl
je
movsl
fisubrl
loop
fcomi
pop
push
cltd
shr
test
out
enter
adc
pop
inc
aam
push
icebp
and
push
es
leave
dec
dec
push
mov
data16
sbb
popf
push
mov
int3
pop
call
icebp
add
dec
mov
cmpl
jnp
test
jbe
mov
test
movsl
mov
rcll
jne
push
in
inc
mov
shll
add
jnp
stc
add
arpl
add
call
add
andb
or
mov
and
aas
add
push
adcl
inc
cmpsb
inc
xorb
add
stc
fwait
cmpl
jp
pop
add
sub
fucom
add
fadds
shll
shrl
ret
add
or
pop
add
sub
ret
sub
int3
pop
inc
xchg
lcall
lds
add
and
inc
lods
lret
push
cs
jecxz
fcoml
ljmp
xchg
cmp
sar
mov
jne
fildl
push
shll
bound
addb
jl
inc
mov
dec
add
and
inc
inc
ret
jae
out
mov
xchg
sahf
push
loop
jae
pop
loop
ret
inc
dec
scas
ret
lret
into
scas
push
xchg
xor
adc
mov
sub
shll
out
or
call
xor
enter
aad
shr
and
push
add
int
jmp
insl
inc
mov
and
mov
mov
test
subl
hlt
lret
lret
fs
mul
sarl
inc
pop
lods
test
imul
orl
rorl
aam
mov
ret
loop
mov
add
cmc
mov
les
mov
and
mov
subl
mov
cmpsb
sub
jmp
loop
ret
jno
add
ss
mov
jge
aas
ret
ljmp
add
and
inc
pop
notl
int3
loop
ja
gs
dec
and
ret
test
shl
cmp
inc
sub
sub
dec
in
jno
loope
jmp
and
out
icebp
or
addb
or
inc
loope
or
push
sub
adc
sti
sub
std
loope
xor
push
sbb
loope
dec
xor
dec
push
ss
mov
loope
push
cmp
ds
mov
cmpsb
push
push
jb
je
pop
loope
pusha
jbe
jp
jle
loope
mov
lcall
lods
scas
mov
mov
mov
mov
jecxz
push
xor
in
pop
add
adc
out
push
and
or
repz
push
loope
or
fildll
inc
push
std
cmc
xor
adc
dec
jmp
lret
add
adc
movsb
mov
insb
mov
push
sub
mov
push
cmpsb
push
xor
sbb
jmp
dec
adc
dec
loope
ljmp
add
mov
mov
popf
mov
nop
push
jle
push
loope
mov
cmp
jno
movsl
pop
adc
pushf
pop
std
cmpsb
loope
mov
outsl
or
xor
andl
int
shrb
push
and
mov
loope
inc
sub
loope
sbb
sbb
jl
loope
pushf
in
push
mov
mov
jp
push
test
cwtl
loope
scas
mov
xchg
pop
ja
les
lea
add
jg
popa
xchg
or
mov
loope
inc
adc
add
roll
add
ror
cmp
popa
lcall
ja
test
pop
subl
jne
into
mov
loope
insl
mov
jns
pop
add
divl
jp
sbb
sti
sbb
dec
fdivr
insb
xor
leave
add
add
mov
out
lret
fnsave
std
and
loope
lods
imul
sahf
cmp
sbb
adc
xchg
pop
cmp
xor
jnp
dec
int
hlt
test
ss
mov
orb
aaa
sub
andl
mov
and
dec
out
fimull
fwait
xchg
mov
andl
call
cmp
imul
xchg
pushf
clc
push
pusha
xchg
mov
sti
xchg
mov
adc
fstpt
push
loope
sub
mov
movsb
mov
mov
jle
fisubrs
lock
pop
sar
loope
fsubrs
lcall
cmpsl
cmp
push
sub
xchg
adc
pop
pusha
ja
cli
loope,pn
and
loope
decl
cltd
xchg
mov
adc
inc
faddl
cmpb
inc
sub
leave
sti
add
jle
repnz
or
and
mov
loope
dec
push
mov
ljmp
dec
loope
into
xor
dec
push
loope
mov
push
arpl
pop
xor
sbb
loope
cmp
mov
gs
jg
call
pop
lods
pop
xchg
and
mov
mov
add
cmp
add
xchg
push
pop
scas
das
loope
ret
mov
dec
clc
mov
aad
popf
cltd
shl
cs
movsl
or
sbb
pop
stos
jns
sarl
mov
add
jge
mov
pop
lahf
stc
loope
repz
mov
scas
xchg
mov
js
insl
add
or
pop
std
xchg
lret
addl
daa
clc
rcrl
icebp
xor
xchg
and
adc
test
mov
mov
jne
pop
sbb
push
jg
xchg
sbb
adc
ja
mov
xor
fstps
mov
jb
das
pop
jge
fsubrl
add
lcall
pusha
int3
loope
imul
xor
aad
cmp
inc
pop
mov
jno
xor
and
push
jecxz
les
mov
cmp
adc
dec
fwait
test
xchg
inc
sbb
cmpsl
xchg
jb,pt
mov
pushf
insl
stos
fidivs
divl
add
stos
xchg
fimuls
notl
call
add
inc
loope
sbb
stos
mov
and
adc
inc
lea
leave
sbb
daa
inc
jp
into
leave
mov
or
mov
push
addb
mul
mov
call
outsl
push
arpl
das
int3
sahf
lods
inc
xor
adc
adc
lods
push
loope
fidivrl
lea
loope
push
xchg
mov
test
aas
loope
adc
pop
rclb
popf
loopne,pt
push
lahf
pop
loope
pushf
mov
pop
mov
mov
insb
outsb
cs
loope
mov
in
and
std
repz
jl
cmp
or
fbld
xlat
shll
mov
jmp
pop
mov
add
mov
out
sbb
loope
lcall
loope
mov
subl
test
sbb
xor
jge
out
pop
jg
cmpsb
gs
loope
movsl
dec
mov
loope
cmp
mov
lods
outsl
and
mov
inc
pushf
jl
fsubs
jg
mov
sbb
ja
popa
loope
jno
cmp
jo
mov
lahf
std
stc
jg
or
sbb
fldlg2
test
test
lcall
mov
push
aas
xchg
mov
sub
xchg
pop
fxch
das
xor
and
xchg
fmuls
das
xchg
pop
dec
shl
repnz
pop
lcall
adc
test
cs
shll
sub
loope
pop
call
add
dec
test
pop
lcall
fiadds
push
xchg
push
movl
sub
pop
jge
mov
xlat
xchg
mov
pop
inc
int
sub
mov
loope
scas
fcoms
loope
xchg
js
xor
loop
jl
mov
and
cs
xor
jae
ret
es
push
lds
shl
fstps
mov
and
or
loope,pn
mov
stc
add
xlat
inc
jno
pushf
lahf
loopne
add
ret
out
das
push
cs
lods
dec
push
fadds
decl
orb
loope
and
cmp
gs
pop
cmp
xor
int3
test
mov
loope
stos
sbb
popa
paddb
loope
push
adc
pop
loope
xchg
imul
cmp
aaa
sbbl
rcrl
mov
push
push
mov
add
push
mov
mov
push
ret
and
mov
adc
test
and
fdivrl
movsb
dec
push
xor
jae
aam
mov
test
adc
test
mov
stos
xor
cmpsb
mov
fcompl
das
iret
stos
loope
add
mov
loope
hlt
sbb
mov
aad
dec
mov
test
aas
call
xchg
rcll
pop
lods
andb
inc
fdivrs
loope
aas
dec
jo
and
mov
mov
mov
popa
loope
adc
pusha
xchg
sahf
sbb
mov
mov
inc
movsl
cmp
test
and
xorb
fisubl
xor
mov
adcl
fldl
jno
stos
jne
sahf
xchg
shll
mov
lds
pop
iret
addl
adc
stos
ret
mov
jmp
pop
test
adc
movsl
mov
inc
subl
mov
mov
pop
gs
les
add
jbe
repz
call
cli
mov
dec
stc
push
loop
mov
fdivs
cmpsl
and
das
push
and
ljmp
add
or
es
fstl
loopne
popa
inc
pop
arpl
loope
clc
divb
and
test
pusha
adc
addr16
loope
jns
mov
push
adc
pop
iret
subb
xchg
and
outsl
aad
cmp
sahf
rcll
test
dec
cmp
subl
loope
or
imul
jp
lock
inc
and
cmp
fs
repz
cmp
ror
mov
arpl
repz
and
loop
enter
out
arpl
orl
push
push
and
cmpsl
mov
hlt
push
mov
add
in
adc
or
fisubl
inc
dec
loopne
iret
mov
shll
gs
adc
pusha
ret
sti
fiadds
inc
roll
test
cmpsb
and
adc
inc
dec
mov
divl
pop
cmp
fildl
xchg
in
sti
and
dec
jno
xchg
mov
decb
stc
subb
inc
push
out
push
dec
out
insl
dec
fisttpl
dec
outsb
mov
out
or
outsl
or
mov
dec
int3
lds
xorb
iret
pop
outsb
pop
mov
inc
dec
int
into
bound
inc
or
loop
push
arpl
dec
xchg
dec
lock
mov
xchg
cmpb
outsb
sbb
outsl
gs
push
or
push
inc
in
in
jo
adc
mov
iret
pusha
fiaddl
fiaddl
scas
lds
shlb
jo
adc
push
pop
jno
dec
add
imul
outsb
faddl
push
sub
inc
sbb
rclb
xor
mov
ret
dec
loopw
and
adc
jmp
jmp
lret
jp
mov
into
sbb
add
test
out
in
mov
cmpsl
cmpsl
int3
and
mov
insl
repz
or
mov
push
ret
es
stos
lds
mov
adc
ljmp
jmp
les
and
ds
lea
enter
test
jecxz
insl
add
sub
in
loop
jbe
push
jns
not
ret
daa
push
add
mov
lods
lods
adc
sbb
in
sub
pop
cli
add
popf
push
mov
test
lret
sub
in
pop
loop
add
push
mov
sub
or
rclb
and
std
les
push
ror
or
xchg
mov
scas
cs
outsl
mov
mov
xchg
and
pop
lods
inc
mov
dec
pop
xchg
add
mov
xchg
dec
add
lods
push
sub
pusha
lret
adc
test
fld1
dec
cmpsb
test
rorb
xchg
outsl
iret
int3
dec
in
lds
dec
pop
pop
inc
int
insl
push
in
movsb
cmpsl
shlb
int3
imul
lea
mov
and
enter
adc
mov
das
pop
xchg
arpl
mov
or
mov
fdiv
mov
xchg
iret
int3
scas
arpl
call
cmp
xor
pop
sarb
enter
mov
imul
lahf
fdivrs
lds
mov
and
add
in
sub
lahf
sar
pushf
mov
xor
out
imulb
cmp
addr16
out
pop
mov
mov
outsb
xchg
mov
push
or
sub
rcrb
fcmovnbe
xor
outsb
fbstp
jo
add
leave
mov
sub
adc
mov
call
sbb
dec
cmpsl
pop
inc
xchg
push
lret
jg
dec
int3
adc
addr16
cwtl
push
arpl
add
inc
dec
dec
enter
dec
and
jo
iret
dec
stos
movsl
jg
or
sub
outsb
fidivs
cmp
inc
mov
lret
inc
adc
lock
jb
lret
pop
xchg
mov
ljmp
mov
outsb
sub
out
mov
ss
int3
or
inc
shlb
and
sub
in
xchg
sub
push
movb
clc
mov
cmc
int3
movsb
adc
and
mov
in
sub
data16
nop
dec
adc
mov
lds
add
pop
test
sti
add
outsl
pop
les
scas
dec
pop
or
imul
addr16
gs
imulb
cmp
iret
mov
sahf
push
cwtl
adc
push
imul
sbbb
movsb
scas
jo,pn
ja
ljmp
cs
hlt
cli
sbb
outsb
lock
mov
jae
push
out
jg,pn
xor
mov
stc
xor
pop
mov
xor
aaa
lahf
testl
movsl
rcl
out
add
iret
sub
push
add
testl
ss
xorl
push
mov
xlat
lods
push
push
or
sbb
add
addl
bound
sti
add
sbbb
pop
mov
aad
adcb
je
push
xor
loop
outsl
arpl
cmc
mov
pop
inc
and
pop
push
xchg
es
ret
lret
data16
cmc
cmc
xorb
push
push
push
je
push
scas
mov
sbb
xor
bound
mov
and
lds
cmc
data16
std
sub
adc
data16
adc
push
sbb
xor
push
cmp
and
sbb
ret
loope
in
push
push
push
loope
mov
movb
dec
outsb
add
jb
fmulp
sbb
loopne
loope
int3
into
rcl
aam
fsub
fcmovu
fsubp
out
ljmp
idiv
cli
cld
loope
add
or
or
adc
pop
and
stos
subb
jns
nop
je
jmp
adc
repz
neg
inc
stc
loope
or
loope
ljmp
inc
dec
sub
test
adc
pushw
sbb
mov
push
dec
xor
divl
shll
xchg
pop
add
lcall
mov
lds
mov
add
pop
inc
pop
das
pop
mov
pusha
sbb
inc
loope
adc
fs
pop
pop
insb
loope
aaa
imull
mov
push
pop
lret
shrb
enter
mov
test
xor
mov
jmp
or
xor
popf
jge
sahf
into
loope
mov
loope
sub
scas
inc
aaa
lcall
fs
jge
loope
and
add
sbb
mov
enter
icebp
mov
fiadds
ds
loope
cs
mov
in
lds
push
lock
test
mov
popf
aas
repz
and
mov
mov
sti
scas
xchg
outsl
xchg
push
loope
sub
fidivrl
xorb
test
cld
and
loope
mov
or
cmpsl
out
sbb
lcall
xchg
mov
sub
mov
lahf
loope
add
and
int3
popa
pop
leave
pop
mov
cmp
repnz
aaa
lock
insl
fwait
loope
adc
stos
adc
xchg
stos
repnz
shll
mov
add
sti
cmp
ss
enter
ja
jg
mov
xchg
loope
jno
mov
sub
ffree
push
add
fcompl
movsl
stos
mov
lods
jnp
imul
js
movsb
sbb
mov
repnz
ds
loope
sub
xor
jbe
mov
aad
movsb
jmp
mov
pop
jmp
test
loope
jno
rcrb
outsb
inc
loope
sub
mov
xchg
movhps
jmp
movb
popa
insl
and
imul
pop
mov
insl
lcall
push
jbe
mov
jl
loop
mov
ret
or
sub
mov
fdiv
shr
xor
popf
loope
push
jae
pop
cli
xor
cwtl
mov
xchg
adc
cs
shl
rcr
jne
std
mov
pushf
dec
cld
mov
ds
mov
mov
xor
loope
inc
lods
adc
mov
or
or
dec
add
cmp
in
loope
sub
pop
out
mov
jno
add
xchg
jecxz
stos
inc
push
fiaddl
and
scas
add
jp
inc
int
jns
loope
ljmp
add
mov
aas
pop
mov
mov
insl
sbb
adc
xor
addr16
js
imulb
xor
clc
cmp
lret
popa
push
loope
test
cmpl
pop
stc
fld
loop
pop
fsub
cmp
stos
imul
cmp
aas
loope
xor
lret
or
sub
fldl
rclb
xchg
lret
shr
sahf
mov
cmpsl
push
inc
jg
and
pop
out
test
iret
fiadds
mov
adc
test
mov
fwait
adc
pop
fstp
loope
cld
sub
push
mov
rcll
pusha
loope
pop
scas
cli
jbe
jne
push
or
fmuls
mov
xchg
lods
jmp
dec
pop
inc
dec
cmp
mov
ret
mov
jne
lock
sub
mov
cwtl
pop
jnp
cmp
sti
cmpsl
fs
loope
mov
lods
xlat
jns
xor
jmp
rolb
ds
add
gs
mov
mov
dec
hlt
sub
inc
cs
jno
outsb
xor
movsb
cmp
sahf
lret
pop
xchg
adc
jnp
xchg
mov
loope
inc
stos
xor
cmp
mov
leave
xchg
xchg
adc
inc
loope
popa
or
loope
or
loopne
movsl
adc
adc
loope
mov
xor
fidivrs
loope
cmp
inc
cmpsl
jecxz
cmc
fidivrs
xlat
add
lods
mov
mov
in
cmpsl
loope
pop
mov
push
adcl
in
xchg
pop
leavew
xchg
fisubl
jne
ljmp
aas
sub
loope
xor
fsts
mov
test
cmp
subl
lods
xor
mov
fsubs
loope
mov
mov
fwait
xlat
inc
mov
xor
inc
lods
mov
imul
ja
cli
jecxz
mov
lds
or
adc
loope
aas
in
fildll
sbb
inc
sub
inc
std
cmp
int
mov
fsubrl
lea
fwait
sbb
sti
inc
test
imul
jnp
sbb
dec
xor
pop
fcmovbe
push
push
shl
ret
iret
adc
xlat
sbb
loope
push
imul
push
push
lret
mov
mov
mov
pop
push
fsubp
xchg
cltd
inc
popfw
je
enter
sub
mov
insl
js
ds
ret
mov
push
out
mov
pop
mov
call
pop
loope
adcl
in
xchg
loope
push
xchg
xchg
pop
push
fcomps
loope
loop
add
pop
outsl
and
movsl
sahf
pushf
push
pop
and
lods
inc
mov
add
mov
mov
xchg
lea
and
fs
cmp
jmp
loope
adc
sar
in
cmc
loope
mov
push
mov
xor
xchg
cmpsb
push
xor
push
lock
pop
loope
dec
mov
loope
divl
add
mov
push
dec
pop
cmpsl
pusha
loope
jae
xor
xor
out
push
shl
dec
sub
pop
pop
mov
call
pop
or
decl
in
mov
nop
push
shlb
out
dec
jge
xor
inc
call
loope
lds
dec
inc
mov
test
ret
push
cmp
xchg
outsb
pop
cmp
ds
xor
xor
popf
scas
pop
fcmovne
imul
dec
shlb
lock
jb
mov
cmp
ror
and
dec
test
loope
xlat
outsb
pop
mov
sub
xor
fidivrs
dec
cmp
push
stos
mov
scas
rorl
fs
lahf
dec
sub
add
jle
cwtl
pop
fisttpll
mov
add
jae
loope
insl
jmp
pusha
push
add
or
xlat
psllq
loope
xchg
inc
sbb
test
movsb
sbb
mov
mov
pop
jnp
jo
xor
in
loope
in
ss
int3
xchg
xor
inc
jns
std
leave
clc
jecxz
jge
mov
mov
enter
popf
inc
and
lods
adc
aad
dec
mov
push
pop
ljmp
mov
aad
xchg
enter
shlb
push
int
mov
sbbl
sbb
fcomp
add
loop
mov
popa
cmp
push
loop
mov
add
pop
push
cld
fdivrs
mov
cmp
mov
testb
adc
arpl
imul
stos
mov
jno
cmpsl
cld
aad
adc
movsl
in
test
icebp
inc
xor
pop
or
stos
lcall
dec
mov
mov
loope
and
fidivl
push
loope
xor
adc
pusha
inc
jae
dec
loope
xor
jo
xchg
sbb
xchg
jecxz
inc
mov
xor
mov
mov
loopne
xchg
cmp
daa
test
and
xor
cmp
loopne
cvtps2pd
sub
lahf
ljmp
and
loope
mov
jl
popa
gs
inc
fs
daa
dec
mov
out
cmp
lahf
test
cmpsb
cmp
icebp
loope
sbb
std
test
lds
add
xor
sbb
dec
int3
popa
enter
pop
mov
out
rolb
lds
mov
jb
lods
popa
pop
push
cmp
inc
mov
xchg
popf
rcr
or
and
xchg
stos
movsb
adc
and
pop
out
push
mov
or
inc
jmp
in
orb
fucomip
ds
loope
sub
push
outsb
loop
int3
mov
mov
mov
addb
jne
jae
and
popa
mov
add
cmc
das
xchg
loop
inc
adc
xor
jae
inc
iret
cmp
loope
push
icebp
out
lret
loope
mov
stc
cmc
loope
lods
sub
dec
outsb
inc
enter
rolb
gs
dec
shl
jle
adc
mov
dec
popa
inc
mov
fnstenv
inc
xchg
adc
cltd
into
sbb
mov
push
push
cwtl
rclb
sub
xchg
push
int
push
mov
adc
mov
pop
adc
loope
psubb
inc
xor
pop
loope
inc
in
in
outsb
and
shr
lret
and
xchg
xor
and
push
cmp
sbb
int
jno
and
adc
jle
fdivrl
loope
mov
int3
add
loop
out
cmp
or
loope
test
leave
inc
cmp
das
js
adc
push
push
sbb
icebp
fucomp
push
xchg
mov
adcl
lret
loope
inc
mov
sbb
rcl
pop
dec
cmp
jl
lcall
push
sahf
mov
add
push
push
enter
ret
inc
cld
xor
loope
lret
adc
add
inc
cmpsl
mov
cmp
cmp
and
addr16
out
loope
add
test
fsubrs
jp
cmpxchg
fs
pop
sbb
ja
jne
outsb
loope
jmp
stos
inc
adc
and
icebp
mov
jno
fsubl
push
outsb
add
jbe
jne
pushf
shll
cmp
mov
mov
push
in
add
and
ljmp
inc
mov
lods
adc
ffreep
fsubs
loope
dec
inc
sub
loope
stos
mov
ljmp
mov
scas
mov
stos
loope
popa
cmc
inc
mov
test
cmp
mov
mov
lods
add
int
push
mov
movsl
jl
mov
pop
fisttpl
call
mov
sti
ret
pop
mull
out
inc
stos
cmpl
and
xlat
pop
shrb
call
test
inc
add
adc
loope
dec
mov
lret
movsl
fwait
mov
jnp
std
subb
push
movaps
inc
ss
movsl
lea
sar
mov
arpl
sbb
rclb
push
push
test
aam
loope
xor
or
je
mov
pop
mov
jecxz
xchg
pop
cmp
mov
loope
aam
sub
cwtl
loope
les
shlb
jb
scas
into
push
fldl
fldcw
cli
mov
fldcw
scas
add
mov
test
jno
inc
mov
popa
jo
dec
mov
sbb
es
mov
sub
adcl
cmp
cmpsl
rclb
loope
lock
or
add
decl
jp
pop
gs
mov
mov
popa
outsl
cmp
mov
imul
pop
xchg
mov
mov
mov
test
lods
cmp
xchg
lret
sub
xchg
test
jbe
xor
test
sahf
inc
xor
js
xchg
lock
jg
xchg
sub
add
mov
dec
mov
int
push
add
jmp
pop
inc
add
loopne
sbb
sbb
sarl
add
inc
es
icebp
pop
faddl
pop
xchg
push
out
aas
call
ljmp
inc
rcr
or
mov
mov
and
rolb
mov
mov
test
push
lock
cmp
or
mov
loope
popf
jb
aas
adcb
and
lcall
es
loope
pop
ret
mov
mov
fcomps
iret
fistps
loope
out
push
inc
jge
mov
call
loopne
into
jo
jecxz
loope
stos
inc
int3
negl
scas
loope
out
loop
aam
cs
loop
leave
pusha
cmp
aam
mov
imul
test
int
adc
imul
and
fldt
imul
jle
movsb
mov
fs
jae
add
loopew
inc
test
mov
and
xor
adc
pop
loope
push
pop
mov
inc
stos
mov
flds
dec
shrl
inc
mov
pop
repnz
sbb
pop
movsl
add
cmc
jle
cmp
add
fidivl
loope
adc
cwtl
mov
xchg
mov
cli
rcl
jns
loope
dec
jb
push
in
mov
loope
adc
sbb
fistpll
push
out
xchg
and
dec
mov
sbb
scas
stos
sbb
adc
pop
rcl
cmp
clc
icebp
daa
pop
inc
mov
xlat
sbb
mov
test
stos
fs
push
pushf
cmp
lock
xlat
clc
sub
aam
mov
sbb
ror
pop
ret
ljmp
lds
mov
paddusw
pop
insl
add
inc
jmp
and
mov
mov
out
fld
stos
rorb
or
mov
dec
sbb
jbe
add
dec
or
mov
mov
adc
or
int
cmp
jno
mov
pop
out
test
mov
imulb
push
xchg
loope
pop
pop
jb
imul
js
pop
in
stc
orl
fsubp
test
xor
jg
call
es
les
loope
orb
and
imul
sbb
loop
mov
out
mov
mov
dec
stc
pop
mov
loope
testb
mov
pop
and
flds
cmpsb
dec
cmp
repz
xor
and
dec
or
adc
mov
push
enter
lds
gs
push
les
mov
jmp
add
out
inc
fisubs
cmc
sarl
lahf
lret
add
inc
cmp
aad
clc
inc
loope
or
xchg
jle
jnp
icebp
pop
mov
hlt
dec
lods
aam
nop
xor
mov
xchg
mov
ljmp
inc
xchg
mov
loope
xor
lcall
mov
jno
cld
cmp
loope
out
hlt
mov
push
dec
outsb
loope
sti
xchg
imul
xchg
mov
lods
ror
mov
adc
push
mov
gs
pop
mov
cmp
fbstp
subb
data16
mov
xchg
and
gs
xor
rcl
mov
popf
sti
cmp
ds
loope
sub
or
or
loop
test
xor
call
bnd
bound
cmp
jae
fwait
je,pt
xor
mov
sbb
scas
cmp
mov
stos
mov
ficoml
icebp
mov
jnp
psraw
repnz
push
mov
mov
enter
dec
add
fbld
adc
xchg
pop
ret
in
mov
movsl
scas
push
sbb
ds
repz
out
gs
xor
xorb
sbb
rorb
xor
cmpsb
ljmp
pop
jp
insl
mov
loope
jae
mov
loope
test
cli
mov
cmp
sbb
lcall
scas
loopne
das
loope
dec
int3
fstps
or
loope
andb
scas
pushf
lods
inc
loope
mov
test
add
sbb
mov
dec
cmp
loope
mov
leave
pop
loope
inc
stos
aaa
repz
bound
test
inc
fildll
ds
iret
xor
mov
xor
adc
test
xor
iret
loope
jg
lock
and
loope
sub
popf
pushf
cmp
and
mov
stc
sub
sbb
stos
add
movsl
mov
movsb
mov
loope
add
subl
pushf
mov
jbe
mov
cmc
imul
icebp
fimull
leave
test
inc
loope
mov
out
imul
mov
cmc
or
leave
pop
xchg
mov
cmp
mov
push
mov
aam
mov
das
mov
jl
incl
ret
inc
insl
repz
sub
mov
sub
cld
push
inc
dec
pop
and
jno
fnstsw
fwait
mov
and
adc
les
sub
mov
add
and
out
imul
sbb
imul
jno
push
jns
jmp
test
scas
rcll
dec
mov
ror
mov
loope
push
inc
and
lock
add
sahf
ret
lock
fimuls
jns
inc
repz
stc
in
mov
ljmp
cmp
add
imul
loop
out
jecxz
adc
rcll
add
sub
xchg
dec
dec
mov
adc
aam
loope
scas
bound
inc
or
stos
or
adc
fcmovnbe
in
jle
lea
aaa
daa
lahf
loope
imul
pop
fldl
jge
dec
adc
mov
mov
pusha
fists
add
push
dec
scas
sbb
sub
mov
mov
loope
rcrl
fimuls
imul
iret
repz
cmp
jbe
loope
or
dec
sub
invd
mov
push
out
sahf
arpl
cmp
mov
stos
inc
push
add
rorb
mov
jp
mov
mov
in
pop
jae
jo
and
dec
or
xchg
dec
daa
mov
xchg
sub
cmp
loope
mov
pop
loope
push
adc
add
mov
sbb
jmp
mov
inc
das
inc
cmovns
add
lret
cmp
or
xchg
lock
dec
popa
sti
enter
leave
nop
sar
rcr
push
and
mov
and
add
xchg
test
roll
mov
lcall
xor
jae
sub
lea
ret
ret
movl
push
xor
mov
push
shll
ret
mov
sbb
add
and
add
cmpsl
into
jmp
mov
outsb
ss
sub
shll
mov
dec
or
jo
out
cwtl
inc
mov
es
fildl
or
mov
shll
inc
loopne
test
movsl
dec
fstp
xchg
push
push
lret
push
add
mov
pop
xchg
ficoms
je
jmp
push
mov
stos
and
or
arpl
gs
mov
push
xor
xchg
aas
pop
sub
ret
cmp
daa
dec
loope
mov
inc
jo
rorl
call
pop
inc
std
xor
add
jb
movsl
add
sub
cs
addl
leave
add
rol
and
or
add
in
dec
sub
push
and
inc
xchg
addb
test
loope
ds
sbbl
pop
and
xchg
xchg
add
dec
inc
jae
dec
and
lret
or
les
push
push
cmpsl
insb
mov
inc
lea
mov
mov
dec
out
arpl
in
and
ret
rorl
xlat
mov
fcom
pushf
and
out
and
push
lods
sbb
into
inc
push
or
inc
add
icebp
sub
jecxz
flds
mov
loop
jnp
add
dec
in
mov
xchg
test
xor
loop
fstp
pop
ja
mov
into
test
insb
ss
push
clc
lret
xor
fiadds
mov
jle
mov
dec
jl
sbb
xorl
je
into
mov
in
push
xor
or
fs
cli
fsubrs
fdivrs
repz
movsl
pusha
adc
fcomps
pop
mov
insb
add
push
out
iret
dec
xchg
sub
mov
lahf
in
xchg
mov
push
in
push
fsubs
lods
push
jne
pop
popa
mov
lret
js
mov
jbe
xchg
push
cmpsl
enter
mov
imul
insl
ljmp
scas
xchg
into
into
sbbb
into
rcr
xchg
adc
fcompl
popa
xor
cwtl
xor
mov
das
push
adc
ja
xlat
cltd
or
test
fisttpll
add
js
cmp
fisubl
pop
loope
or
adc
inc
xor
add
roll
lahf
xchg
icebp
rcr
push
inc
sbb
cmp
pop
jle
lahf
mov
fidivl
add
mov
pop
andb
dec
leave
in
fs
mov
push
es
bound
inc
in
and
stos
test
insl
dec
adc
add
or
sbb
retw
add
test
mov
xchg
push
scas
sub
mov
inc
outsb
rcrb
ja
push
les
xchg
repnz
incb
sub
addr16
mov
rorb
insb
and
dec
add
jecxz
jg
inc
data16
dec
addr16
subb
lret
in
shll
pusha
dec
repnz
out
mov
pushf
jb
add
or
xchg
or
mov
test
in
fwait
or
sbb
fs
inc
jmp
and
sub
cwtl
in
rol
leave
adc
dec
cmpsb
and
cmp
and
out
ja
mov
fs
add
test
mov
push
sub
add
loopne
mov
adc
leave
addb
push
ret
movsb
fmulp
jecxz
shll
mov
fwait
add
inc
xchg
ljmp
dec
vpmaddwd
ret
lods
shll
in
inc
and
in
test
arpl
adc
jle
pop
imul
pop
and
dec
data16
dec
push
ret
push
inc
xlat
pop
test
add
mov
aas
sub
lds
inc
jne
lahf
ret
mov
andb
or
mov
inc
addb
lret
dec
mov
lret
stos
movb
cld
mov
dec
lret
push
jb
mov
dec
in
mov
mov
inc
push
fisttpll
scas
lret
sub
inc
or
mov
inc
xchg
testb
add
into
inc
ret
adc
lret
fldt
out
dec
loop
xor
leave
lret
dec
ret
loopne
in
aad
outsb
shl
push
or
inc
xlat
mov
repz
pop
int
ret
ror
pop
repnz
int3
inc
cmp
ret
aas
push
cmp
mov
ja
xchg
in
aas
clc
and
sub
add
int
mov
into
sbb
inc
dec
fmull
dec
loop
mov
enter
jo
mov
nop
cmc
xchg
lret
enter
bound
sub
out
dec
xor
inc
and
hlt
aas
pop
sub
inc
add
arpl
and
and
sahf
inc
mov
shl
into
cmp
push
add
jo
arpl
ret
daa
mov
cld
jns
je
fs
rcll
repz
dec
push
rol
and
mov
popa
mov
dec
sahf
push
xlat
add
dec
mov
andb
scas
jb
movl
cmp
lds
inc
mov
mov
sahf
or
mov
mov
push
xchg
test
nop
jae
inc
or
and
dec
push
push
xchg
dec
mov
push
cltd
xchg
sub
push
jb
dec
mov
xor
cmpsl
es
add
add
movsl
fcmovbe
insb
loopne
nop
xchg
jb
frstor
leave
inc
jl
mov
stc
call
aam
lds
adc
or
jae
test
mov
dec
pusha
into
test
adc
lcall
dec
adc
jnp
fldt
inc
int
xchg
and
test
jnp
ret
stc
jns
testl
dec
inc
lret
leave
push
dec
xorl
inc
add
inc
ret
repz
dec
push
ret
jbe
out
cmp
dec
mov
fwait
leave
popa
cmp
ret
dec
out
lcall
pop
cmp
push
push
add
cli
push
push
xchg
insl
inc
ja
into
add
int
pop
dec
push
loop
dec
dec
lret
repnz
add
adc
rorl
add
pop
lret
inc
roll
dec
cmp
movsb
fists
pop
faddl
or
sbb
mov
pop
or
pop
outsb
adc
lret
ret
xchg
inc
gs
jecxz
dec
inc
in
lret
cmp
add
ror
jle
push
jecxz
out
dec
inc
in
push
ljmp
fs
pop
sbb
inc
loope
je
adc
subb
into
pop
mov
int
and
jmp
pmuludq
lods
cmp
mov
mov
sub
xor
arpl
sahf
aaa
jle
xchg
add
inc
mov
imul
mov
aaa
fiadds
pop
inc
add
fiadds
ret
aaa
stc
leave
jecxz
iret
xchg
fcompl
in
test
out
push
pop
fisttpll
mov
repnz
fistps
inc
inc
inc
jb
fisttpll
mov
inc
jo
or
xchg
cmpsb
call
pusha
ficoml
sbbb
fs
loop
call
aad
add
loopne
imul
pop
rclw
jo
inc
push
les
pop
and
insb
push
movsl
add
test
lret
dec
repnz
push
or
inc
iret
xor
es
jecxz
dec
stos
pusha
fidivl
sahf
arpl
mov
and
out
into
stc
fmull
cmp
ret
scas
shlb
add
dec
pop
sbb
lret
mov
jecxz
xor
dec
add
incl
mov
fisubrl
addl
xor
sub
gs
addr16
test
sub
inc
mov
xchg
dec
lret
push
and
out
inc
loope
scas
cmpsb
push
mull
repz
adcb
hlt
and
ret
addr16
outsl
shrb
dec
sbb
add
sub
rorb
push
xchg
test
daa
inc
fcmove
dec
and
dec
inc
lret
xrelease
inc
sub
hlt
inc
and
add
dec
fwait
cwtl
sti
xchg
into
fsubs
inc
sahf
leave
outsb
dec
inc
fwait
sbb
inc
bnd
dec
mov
mov
inc
rcll
xchg
lret
faddl
movl
mov
leave
jne
pusha
adc
mov
nop
and
es
test
or
les
inc
sgdtl
sub
dec
and
ret
mov
lret
leave
pop
cmpsl
sub
jmp
sub
lock
repz
insl
xor
lret
lds
popa
lods
fiaddl
mov
sti
mov
testb
lock
and
lea
roll
dec
sti
popa
adc
push
outsl
iret
xor
inc
scas
add
pusha
push
das
inc
test
sub
leave
push
or
pop
in
mov
pop
mov
faddl
or
orl
dec
jno
add
xorl
push
int3
mov
xchg
les
rcr
add
xor
call
ret
and
dec
lcall
mov
or
dec
dec
fnclex
add
inc
fcmovne
pop
dec
lea
out
sbb
cmpsb
int3
enter
cwtl
dec
rcl
out
dec
sbb
cmpsl
inc
mov
inc
xchg
rolb
sbb
push
das
out
adc
pusha
aad
ret
leave
inc
lea
lcall
xchg
and
jecxz
int3
jmp
movsb
push
mulb
adc
cmpsl
mov
ret
push
ljmp
jmp
imul
imul
sbb
or
mov
pop
iret
lea
jne
ja
lock
add
ja
lret
pop
jno
imul
out
and
add
and
out
shl
shl
mov
dec
mov
mov
ss
popa
fldenv
dec
inc
shl
dec
mov
lret
jecxz
mov
lds
repz
and
or
jl
in
mov
sub
pop
mull
pop
dec
lahf
ret
sub
andl
and
adc
into
gs
mov
test
dec
or
push
rolb
xor
inc
pop
cmpsb
out
int3
out
repnz
pop
pop
push
inc
lret
cmp
fisttpll
rclb
lret
lods
faddl
cwtl
dec
ret
lret
jno
push
inc
fisubrs
les
cli
mov
ds
sub
sbb
mov
pop
bound
adc
or
sbb
loopne
ret
cmpsb
xchg
shrl
cwtl
mov
add
jecxz
add
test
and
test
js
push
or
int
mov
mov
ds
outsl
lea
inc
jo
xor
pop
sub
inc
jl
subb
mov
add
rolb
xchg
dec
add
orl
xchg
subb
mov
sub
xor
icebp
and
orb
test
lds
nop
icebp
in
iret
outsl
inc
enter
sahf
xlat
adc
cwtl
das
test
inc
fldt
ljmp
mov
add
test
dec
jbe
cmpsb
and
or
test
leave
or
mov
adc
test
push
add
addb
sbb
or
add
lcall
pop
push
lret
loop
dec
lcall
push
and
stos
sahf
ljmp
push
push
pop
jne
lds
push
mov
cmp
in
inc
jno
push
enter
out
aad
gs
jg
out
mov
add
movsl
or
push
lds
loop
lds
and
ret
and
sub
lahf
int3
lret
adc
pop
mov
imul
mov
jecxz
int
mov
xchg
add
int
lcall
pop
push
ficoms
subl
pop
cli
ds
repnz
pop
adc
shll
lret
mov
mov
inc
gs
leave
xchg
rorl
inc
inc
fildll
aas
sbbl
inc
xchg
cld
imul
mov
in
ljmp
and
ret
sbb
arpl
test
lds
ret
mov
pop
enter
aam
jmp
mov
call
inc
orb
std
test
out
sub
inc
movsb
mov
adc
and
mov
dec
and
add
scas
xor
test
push
aam
xchg
int
cld
mov
fcomps
pop
das
popa
int
dec
adc
iret
cld
push
inc
adc
adc
jecxz
fildl
and
dec
add
pop
push
ret
out
dec
imul
fst
add
stos
lods
cltd
and
loopew
rcr
inc
dec
inc
mov
mov
test
shlb
pop
ret
mov
jbe
or
int3
dec
cwtl
ljmp
add
fsts
stos
mov
ret
sbb
xchg
cmpsb
imul
adc
mov
mov
inc
dec
push
dec
mov
mov
into
ret
xor
lea
push
faddl
and
mov
adc
data16
int3
fmuls
out
mov
or
mov
add
push
mov
add
mov
or
aaa
shll
and
adc
cmpsb
sbb
sarb
imul
xchg
mov
jb
adc
mov
cmpsb
jmp
negl
and
xor
mov
imul
pop
into
mov
or
xchg
jmp
xor
or
jecxz
mov
pop
dec
adc
fldl
inc
pop
inc
popa
add
dec
xchg
or
fildll
rclb
inc
test
cs
outsb
fisubs
movsl
push
sbb
outsl
push
jecxz
push
inc
xor
ret
fadd
xchg
pop
cmp
inc
insl
xchg
inc
ret
inc
int
loop
decl
or
das
orb
jecxz
dec
fcmovb
pop
dec
push
lret
dec
mov
daa
or
enter
out
lret
ret
jbe
push
or
pop
inc
or
cmpsb
loopne
inc
std
mov
adc
sbb
cltd
push
push
adc
ret
lds
out
inc
add
jb
adc
bound
gs
inc
pop
into
inc
xchg
dec
lods
dec
outsb
fisubrl
mov
dec
shlb
mov
push
fimuls
fisubrl
push
enter
daa
in
in
or
and
subb
dec
lea
rorb
rorl
popa
ja
sub
dec
andb
and
test
dec
int
in
test
dec
leave
push
leave
rorb
shr
rclb
int
or
xlat
add
mov
lds
leave
dec
into
repnz
icebp
dec
add
out
add
inc
enter
shlb
test
test
inc
cmpsb
nop
fnstenv
orb
iret
inc
jmp
jg
inc
sbbb
mov
jmp
add
std
and
fs
xchg
mov
pop
ret
and
addr16
inc
mov
iret
dec
inc
lret
leave
xor
push
sub
xchg
dec
stos
push
leave
dec
js
lret
push
dec
je
addw
push
push
mov
push
jecxz
das
mov
dec
fstp
rolb
js
push
pop
inc
vpunpckldq
call
inc
test
lock
sti
addr16
jae
pusha
xlat
mov
xor
mov
popa
mov
push
push
adc
aad
mov
or
ds
inc
dec
sub
lcall
int3
cmp
mov
xchg
into
out
sub
lods
xchg
aad
lcall
or
jl
mov
fcoms
ret
scas
hlt
in
stc
sbb
or
sub
push
jp
daa
fisttps
addr16
and
dec
push
nop
push
decb
dec
int3
cmp
dec
enter
repnz
push
xchg
mov
pop
mov
cmp
dec
mov
sbb
push
inc
movsb
dec
notb
dec
xlat
mov
add
or
rorl
add
inc
or
js
fcoms
rolb
pop
stos
inc
sbbl
adc
xorl
mov
out
test
cmp
inc
jmp
pop
aam
xchg
cmp
iret
adc
pushf
jbe
hlt
scas
lds
pop
cmp
inc
push
leave
orb
loopne
ret
and
leave
imul
stos
push
stos
inc
dec
clc
pop
mov
jecxz
or
xchg
scas
mov
mov
daa
out
les
leave
lea
iret
jne
xchg
movb
int3
and
lcall
inc
jb
ret
pusha
cmp
test
bound
push
bound
inc
and
cmp
push
in
add
mov
cltd
sbb
and
pop
pop
iret
add
lods
sbbb
sub
push
pop
add
jmp
pcmpgtw
data16
enter
add
data16
push
inc
push
lret
dec
push
inc
std
mov
pop
mov
imul
pop
mov
movl
jb
push
loopne
jb
leave
push
loopne
adcl
mov
or
mov
mov
iret
adc
mov
add
repnz
fs
aad
ret
clc
push
inc
clc
dec
inc
inc
outsb
xchg
leave
ret
xchg
xchg
add
pop
inc
mov
dec
mov
and
outsl
mov
inc
mov
jle
aad
mov
mov
xchg
js
lret
dec
dec
in
push
test
in
jecxz
popf
lds
adc
in
or
lret
lret
push
pop
mov
movsb
mov
xchg
adc
and
notb
pop
leave
insb
jne
jo
lret
fwait
outsb
jb
xchg
imul
test
test
int3
sub
popf
push
cmpsb
int3
jae
mov
or
push
mov
ret
and
test
test
dec
cwtl
mov
movsl
adc
rcrl
shrl
mov
movsb
sbb
popa
int
ds
cmpsb
mov
mov
bound
iret
enter
adc
cli
cmp
mov
or
mov
inc
insb
ffree
mov
dec
jp
iret
dec
xchg
sub
loop
das
cmp
push
call
pusha
ffree
aaa
mov
shrb
push
cmc
pop
rcr
in
std
cmpsb
loope
dec
ja
sbb
hlt
outsl
pop
mov
popa
mov
dec
cli
fisttpll
inc
ficompl
sub
mov
and
or
test
lret
inc
das
and
daa
and
sub
jb
lcall
aad
inc
jl
adc
and
push
insb
in
xor
iret
ret
ds
add
ss
inc
mov
lret
out
and
lret
add
test
aad
xchg
ret
mov
lea
repnz
push
dec
push
mov
mov
scas
xchg
inc
mov
sub
fiaddl
andb
adc
or
lea
iret
loop
sti
jecxz
and
dec
inc
jp
cmp
and
mov
jmp
xor
mov
sub
sub
out
sub
mov
stos
or
pop
mov
shlb
mov
sbb
rol
or
mov
mov
into
add
pop
sub
fstpt
pusha
into
xlat
mov
shlb
and
hlt
lret
es
push
add
jmp
icebp
lds
cmp
and
enter
jge
fs
jne
push
stc
dec
inc
push
outsb
leave
mov
inc
dec
std
test
int3
push
sub
cmpsl
rol
push
or
inc
push
cmp
bndldx
add
sub
in
add
mov
pop
xchg
xchg
push
fldt
hlt
es
enter
lret
in
and
and
and
and
in
inc
mov
xor
xor
lock
push
fwait
icebp
loop
std
cwtl
outsb
jbe
xor
fwait
pop
nop
push
adc
scas
test
sbb
and
int
fs
imul
and
sub
iret
lock
xchg
jp
test
pop
stos
in
icebp
int3
out
dec
fisttpl
mov
cmc
mov
or
mov
jle
cwtl
adc
inc
push
fistpl
mov
jg
dec
sti
adc
insl
jns
push
lds
aad
pop
arpl
inc
xchg
and
jne
inc
xchg
inc
adc
je
push
xchg
das
ret
push
mov
pop
dec
push
int
pop
mov
push
aad
ss
pop
loop
sub
movl
neg
jno
pop
call
arpl
inc
inc
movsb
add
xchg
movsl
int
dec
movsl
push
jg
mov
pop
inc
inc
xor
pop
and
and
inc
dec
dec
repnz
sub
or
jecxz
xchg
int3
and
push
inc
pop
lret
or
push
bound
jecxz
dec
lret
test
add
or
jae
or
inc
mov
adc
adc
jbe
les
cs
lret
mov
test
mov
and
and
mov
mov
add
cmp
hlt
inc
or
sub
inc
inc
inc
inc
insb
pop
orb
gs
push
decl
into
icebp
andb
and
ret
into
lods
jmp
and
pusha
in
sti
in
rclb
mov
push
push
gs
es
addr16
mov
rolb
orb
mov
ret
pop
fs
insl
loop
rclb
movsl
or
lea
xchg
test
pop
leave
xor
dec
add
and
cmp
movsb
dec
popa
sub
adc
test
loop
in
dec
or
test
and
inc
insb
mov
cmp
cmp
mov
js
or
inc
mov
jle
and
dec
cmp
dec
push
out
cltd
test
sub
movsb
xchg
jecxz
imul
nop
pushf
push
ficoml
sub
inc
scas
push
aam
mov
nop
mov
ljmp
jg
jge
add
inc
testb
inc
test
fisubrs
pushf
je
ret
pop
movlhps
push
leave
or
aas
ret
jg
and
mov
ret
push
cmpsb
enter
hlt
or
cld
lds
sarb
adc
inc
mov
fiaddl
movsl
mov
rclb
dec
out
icebp
lret
enter
loop
movsl
ret
sub
cwtl
fidivs
add
add
xchg
leave
fcom
loopne
repnz
mov
lds
sub
cwtl
rcll
push
cmp
adc
mov
push
loop
test
sti
sbb
sbb
outsl
or
sbb
cmp
sub
jne
cmpsb
jge
push
les
xor
jmp
int3
adc
push
popa
movsl
stos
jp
sbb
push
sub
xor
inc
mov
imul
pop
mov
pop
dec
cvtps2pd
and
hlt
fimull
dec
add
mov
mov
fiaddl
insb
jp
pavgb
pop
movsb
xor
loop
hlt
pop
test
testb
sbb
insb
dec
test
cwtl
mov
mov
and
mov
fld
inc
mov
ffree
inc
stos
adc
mov
js
outsb
or
adc
and
rclb
test
iret
xchg
xchg
and
sub
scas
sbb
push
and
imul
jbe
movsl
dec
test
pop
in
dec
xchg
mov
fcmove
or
inc
stos
xchg
movl
cmpsb
ss
fwait
xorb
adc
inc
and
faddl
daa
outsl
inc
add
andl
jmp
add
repz
rcrl
outsl
xchg
adc
adc
dec
fcmovne
adc
adc
movsl
xchg
in
pop
jg
push
lds
sti
loopne
mov
in
push
in
pop
in
in
pop
or
loopne
mov
push
movsl
rorb
adc
ret
subl
rorl
mov
fcomps
or
sarl
adc
pushf
and
xchg
dec
push
sub
je
aam
test
jecxz
push
sub
sahf
insb
dec
mov
push
ret
lret
mov
inc
pop
cmpsl
mov
dec
stos
dec
fimull
or
fs
dec
push
push
dec
or
loopne
jb
int3
movsl
in
dec
test
cld
movsl
test
lret
rolb
jb
push
add
dec
inc
adc
mov
sbb
mov
jecxz
test
or
inc
mov
rorb
mov
dec
into
sub
push
in
and
ret
enter
cld
cmpsb
adc
mov
and
inc
lret
xor
call
fildl
pop
cmc
mov
shr
pop
in
cmp
and
scas
mov
scas
or
inc
mov
dec
jae
sub
sub
int3
sbb
pop
add
adc
nop
mov
add
adc
mov
push
fsubp
sub
inc
and
pop
add
out
dec
sbb
mov
scas
shrl
inc
dec
dec
dec
pop
lret
rcl
mov
and
addb
push
sub
fwait
xchg
dec
lret
fnstcw
imul
in
roll
leave
mov
or
fisttpl
in
jmp
movsl
in
shlb
xor
inc
gs
sbb
sahf
push
lds
out
addb
cmc
dec
outsb
out
mov
sub
test
lcall
scas
outsb
insb
mov
sub
imul
pop
pop
cli
mov
and
ljmp
push
push
push
xchg
lods
das
jp
inc
pushf
cmc
and
mov
in
cmpsl
push
std
inc
pusha
out
dec
pop
int
das
movsb
je
mov
xor
ds
aam
inc
cmp
or
int3
out
out
hlt
lcall
cmpsl
dec
pop
filds
cmp
int
cmp
test
lret
das
int3
lahf
cmp
jb
mov
call
fwait
pop
inc
push
xlat
and
sbb
iret
sbbl
inc
mov
xchg
adc
add
inc
mov
outsl
icebp
cmc
cmp
or
xchg
popa
dec
jne
cs
mov
pop
jge
push
das
jmp
int3
data16
cld
enter
push
adc
adc
lods
in
push
sub
adc
cmp
pop
sub
inc
mov
fstl
dec
loope
dec
pop
push
inc
push
daa
mov
pop
dec
aas
outsb
sar
movl
adc
mov
pop
pop
cwtl
dec
sub
movl
inc
repnz
aad
cltd
mov
pop
fmull
jne
dec
rcl
repnz
add
inc
les
ret
fdiv
aam
rorb
enter
add
inc
mov
bound
cwtl
or
imul
xchg
mov
int
ds
jecxz
xchg
fidivrs
dec
sbb
jmp
dec
or
sub
mov
ret
dec
rolb
jecxz
inc
repz
sub
loop
push
in
jmp
ret
mov
int
jnp
out
lret
or
ja
dec
sahf
push
out
jecxz
push
int
dec
inc
inc
push
pop
push
sbb
fsubrp
adc
add
mov
push
fmulp
mov
mov
mov
sbb
jae
fs
lret
sbb
and
pop
push
int
dec
fadd
xlat
lret
enter
fisubrl
fistl
inc
loopne
cmp
loope
mov
dec
in
sbb
and
adcb
repnz
push
adc
stc
outsb
decb
rorl
fisubs
sub
cs
mov
push
inc
cmp
out
inc
pusha
pop
xor
pop
mov
roll
loope
lea
jne
shld
mov
call
pushf
cmp
mov
pusha
movb
lea
ja
clc
stc
jmp
pop
pushf
mov
add
stc
ljmp
adc
sbb
jbe
insb
popf
inc
cmp
add
or
lret
in
lret
jb
cmpb
movd
add
cltd
or
cmp
xchg
lds
cmc
pop
and
out
and
test
aas
divl
push
sbb
sub
call
inc
mov
fs
jp
pusha
push
movl
pusha
movb
lea
jmp
shl
btr
xor
call
mov
pushf
call
movb
pushf
call
call
push
movl
call
bt
btc
mov
call
addl
dec
test
sub
rclb
dec
sbb
sti
popf
cwtl
adc
js
paddusw
push
jne
enter
jecxz
mov
imul
inc
lods
dec
and
jno
mov
stos
add
xor
cmp
mov
cmc
jecxz
and
cwtl
aad
adc
mov
mov
push
add
sbb
dec
inc
cmc
shr
sbb
imul
mov
push
add
mov
out
lret
repnz
pop
xchg
dec
or
inc
out
jmp
mov
mov
test
clc
jmp
call
pushl
popl
pusha
bt
cmp
pusha
call
imul
ror
and
shl
sbb
add
sbb
mov
add
jnp
pusha
add
add
xor
or
scas
scas
scas
in
outsl
mov
stos
movsl
stos
push
mov
jo
aam
orb
sub
outsl
scas
dec
outsb
xchg
add
dec
mov
adc
cmp
int3
inc
lret
hlt
sbb
push
pusha
xchg
xchg
rolb
sub
into
jecxz
push
push
lret
push
dec
add
sbb
mov
test
lds
and
loop
mov
sbb
lret
add
inc
jmp
les
arpl
mov
dec
mov
daa
xchg
sub
xlat
ret
popa
lods
add
or
add
lret
xchg
outsb
rcrb
lods
movsl
repz
and
int
dec
in
adc
popa
loop
popa
jbe
cmc
add
cmp
flds
pop
daa
adcb
orl
mov
xchg
mov
xchg
sbb
xchg
xor
adc
loop
ret
push
and
in
std
xor
les
sbb
sub
lods
lds
mov
jmp
or
sub
push
lds
dec
out
jae
lret
shl
jne
ret
arpl
rol
lahf
push
ret
inc
jno
push
cs
leave
leave
insl
andl
push
out
fwait
ret
je
jb
and
add
push
repnz
push
daa
lcall
imul
call
dec
leave
add
cs
in
add
push
push
into
push
ja
vunpcklpd
cs
jmp
testl
jge
pop
das
icebp
mov
fmull
or
add
mov
jecxz
mov
jecxz
out
jb
dec
xchg
or
inc
out
inc
adc
out
sub
ret
ret
insb
push
and
sbb
push
adc
dec
in
inc
pop
xchg
sub
fcmovbe
int3
ficompl
fmuls
aam
push
inc
push
xchg
sub
in
rcrl
in
pusha
ficoml
dec
or
in
inc
pop
xchg
sub
xchg
sub
in
rcl
fcmovbe
dec
dec
or
inc
les
ror
fcmove
dec
dec
or
lds
xchg
sub
dec
shll
or
in
inc
xchg
sub
in
rcr
fiaddl
push
in
inc
lret
push
in
rcl
fcmovu
xchg
into
dec
inc
add
sar
adc
ljmp
add
loope
mov
scas
jo
adc
push
inc
sbb
push
call
dec
cltd
mov
jg
scas
sub
leave
loope
ds
jecxz
xchg
shll
nop
fldt
sub
xor
sub
and
mov
pop
ror
cmp
div
push
dec
lock
dec
inc
bound
mov
arpl
loope
fsubs
sbb
pop
idivl
jb
and
xchg
cmpsb
icebp
push
mov
lret
add
test
out
pop
nop
sub
dec
mov
mov
lcall
rolb
inc
sti
add
mov
andl
icebp
xorb
mov
push
add
sarl
mov
jle
out
and
aam
loope
or
fbld
cs
xor
pop
jae
push
stos
inc
xchg
dec
fldl
notb
loop
adc
cs
negl
sub
shl
xchg
push
loop
or
rolb
dec
mov
aam
lds
test
add
iret
out
push
vpcmpgtb
add
pop
enter
ret
dec
pop
push
into
inc
add
mov
add
iret
inc
push
pop
in
or
lds
adc
ret
icebp
pusha
loop
inc
movsl
out
in
add
ficompl
sub
les
add
add
testl
aad
hlt
fxam
jnp
loop
iret
xchg
shrb
inc
ljmp
movsl
add
out
push
sub
push
insb
int
dec
inc
inc
repz
aaa
mov
dec
popf
ret
jecxz
cmovp
add
lret
mov
in
mov
pop
out
jecxz
push
dec
jmp
jecxz
enter
aaa
scas
mov
or
lret
add
xlat
les
mov
lret
inc
arpl
stc
xor
pop
icebp
aaa
scas
xchg
inc
xor
mov
in
adcb
fwait
dec
nop
loop
repnz
into
add
inc
leave
xlat
ds
and
xchg
or
mov
add
cli
xchg
inc
push
loop
inc
fdivr
pop
shl
loop
inc
pop
or
dec
rolb
or
pop
inc
push
fsubrs
ret
xor
add
shl
fisttps
ffree
loop
and
add
push
inc
push
sub
loope
push
into
or
and
sbb
jnp
lahf
test
gs
js
dec
bound
mov
rolb
and
into
ret
mov
aad
daa
sub
out
js
or
pusha
pop
xor
popa
xor
std
jo
dec
jge
aas
cmp
scas
dec
loopne
call
xchg
je
stos
pop
push
orb
pop
in
loop
sub
pop
ror
cmpb
adc
mov
movsl
das
outsb
adc
jb
sub
lds
dec
sub
shlb
hlt
mov
cmc
pop
and
add
pop
pop
fsubr
filds
call
gs
push
scas
inc
fwait
inc
loop
sub
hlt
enter
inc
sbb
ret
sbb
pop
mov
ljmp
loop
xacquire
outsl
cmp
dec
xchg
push
loop
test
icebp
pop
cmpsl
stc
xor
push
inc
outsb
neg
sbb
inc
dec
popl
mov
rolb
lea
rcll
fildl
or
out
aad
and
in
data16
roll
ret
add
popa
jle
shr
mov
fcomps
in
fsubrl
or
insb
lods
adc
insb
test
ror
lock
ret
push
mov
and
mov
mov
inc
shr
imul
cs
inc
mov
inc
paddsb
dec
repnz
mov
dec
in
in
dec
inc
mov
or
outsb
stos
inc
mov
sub
add
jo
dec
inc
iret
stos
iret
push
cmc
sub
mov
fsubrl
mov
cmc
push
jg
mov
shll
dec
push
sub
inc
pop
xchg
xchg
dec
aas
sbb
outsb
mov
outsl
push
mov
int
iret
mov
jmp
mov
ret
arpl
ljmp
xor
test
inc
pop
gs
aad
add
stos
addb
fs
gs
push
test
push
sub
into
add
popa
push
inc
dec
rcr
cmp
pop
out
leave
sub
les
lret
jecxz
mov
iret
dec
xor
pop
mov
xor
inc
into
adc
dec
cmc
out
lret
bnd
dec
sub
lods
and
ja
push
loopne
imul
push
xor
ret
test
jmp
dec
insb
inc
test
fiaddl
fsubs
mov
cltd
add
bnd
call
add
and
ret
jmp
in
popa
arpl
ret
mov
jb
lock
pop
icebp
jae
fcmove
or
test
push
xgetbv
in
lret
jmp
fisubrs
xor
pop
xchg
test
mulb
cwtl
les
or
and
dec
inc
xor
add
into
xchg
xlat
dec
aas
add
push
loop
xchg
test
cmp
fisttpll
add
imul
shll
mov
mov
decb
adc
dec
inc
cmpsl
inc
icebp
pop
jo
test
ret
push
xor
cmp
lahf
pusha
mov
lret
add
and
pop
push
jmp
icebp
fistl
pop
sub
lret
mov
adc
rolb
js
popaw
roll
fcmove
jns
ficoms
movsb
or
call
jo
into
mov
xlat
shlb
imul
lret
loope
rorl
push
sub
cltd
insl
addr16
lret
or
clc
or
push
ret
sub
inc
jmp
test
mov
repz
dec
lock
xchg
imul
inc
pop
jb
into
dec
and
test
pop
or
inc
lret
repnz
ftst
hlt
test
popa
ret
xor
inc
or
push
cmp
dec
bnd
jb
cmp
popf
in
lds
adc
lret
mov
fcmovb
push
push
data16
jmp
sub
loop
pop
popf
push
sub
xchg
or
rcll
xor
adc
pop
stos
xor
lret
inc
in
inc
or
shl
aad
dec
dec
cmc
repz
sbb
inc
jb
lock
xor
push
cmpsl
sub
dec
shlb
adc
je
add
call
push
int
insb
xchg
jb
jae
gs
adc
dec
xor
fmull
dec
rcll
std
sub
mov
data16
lods
scas
sahf
insb
adc
inc
test
inc
dec
stos
inc
push
inc
test
push
fadds
fistl
xchg
gs
dec
jmp
sbb
sub
mov
fidivl
adc
pop
in
pop
enter
fldcw
jmp
jp
jb
js
dec
repz
sbb
inc
lds
dec
xor
pop
lret
or
add
jmp
das
sub
lods
fidivl
adc
push
les
jp
das
mov
adc
push
push
jge
jb
pop
jae
ljmp
in
jne
lret
lock
mov
in
add
bound
and
jbe
pop
in
pusha
cmp
dec
pop
mov
inc
ret
or
out
lods
or
adc
mov
into
pop
pop
or
inc
imul
rcr
lods
ret
fcomps
pop
push
imul
shl
in
pop
lcall
fsub
pop
jmp
pop
cmp
add
push
addr16
es
sbb
icebp
pop
rolb
sarb
adc
ret
jns
adc
adcb
aam
push
dec
dec
iret
push
xor
or
cmp
mov
mov
dec
aam
xor
into
je
rclb
or
stos
std
rolb
and
xor
cltd
sub
repnz
in
js
xor
xchg
ficoml
xor
cmp
push
inc
dec
ret
mov
loop
lods
imul
mov
xor
loop
cmp
pop
pop
les
clc
loopne
das
popf
inc
lods
pusha
and
lods
repz
or
shlw
outsl
lret
fadd
jb
lret
jo
lcall
mov
and
cltd
inc
sub
or
sbbb
pop
fcmovu
shlb
imul
fstpl
fwait
mov
jmp
or
dec
lret
push
das
aad
sub
repnz
pop
and
leave
pop
in
repz
loop
fisubs
in
mov
inc
loop
jmp
movsb
fsub
push
sar
pop
mov
pop
push
iret
ljmp
xor
mov
stos
es
popa
rcr
inc
daa
adc
or
lds
jae
adc
je
je
sbb
xchg
ljmp
pop
roll
adc
call
cwtl
add
inc
fmul
pop
repz
ret
inc
dec
mov
dec
add
inc
adc
adc
adc
dec
or
repnz
sbb
lahf
movsb
addb
push
xchg
repz
sub
loop
push
in
push
and
push
loop
dec
push
int
out
repz
sbb
fsubp
rolb
fcmovb
test
movb
dec
dec
repnz
xorb
push
in
mov
jecxz
loop
push
das
push
repz
push
fmuls
loop
or
loope
sub
cs
xor
add
dec
xchg
pcmpgtw
push
inc
pusha
ja
pusha
fcomps
add
cmpsl
adc
push
xchg
out
pop
out
nop
and
mov
cmp
sbb
sbb
rcll
jnp
enter
adc
iret
pusha
pop
inc
pop
enter
or
int
loopne,pt
cmc
out
sbb
and
lret
es
mov
sti
iret
xor
push
icebp
mov
ljmp
or
outsb
mov
dec
sub
out
scas
pushf
jae
les
or
in
sti
notl
sbb
adc
lds
jo
adc
pop
in
inc
mov
cs
push
pop
pop
sub
adc
dec
and
mov
pop
adc
enter
iret
aad
mov
mov
mov
or
cmpsb
cld
add
test
mov
or
add
jo
adc
outsb
add
inc
outsb
rorb
push
ja
iret
or
pop
pop
pop
pop
cmp
and
cs
adc
push
jecxz
dec
ret
adc
iret
add
shll
rcl
ja
push
out
inc
fstpl
or
sub
je
mov
inc
or
aam
add
push
sub
and
movsl
repz
out
jecxz
inc
lret
leave
sub
std
or
push
iret
in
add
aam
add
add
shrl
add
testl
fs
mov
rol
jns
pop
mov
pop
jecxz
lret
add
or
pusha
adc
repz
jo
mov
mov
add
sub
xor
push
jmp
dec
testb
inc
lret
add
mov
dec
dec
out
scas
jbe
outsb
inc
dec
inc
orl
loop
in
cmc
inc
int
sub
dec
lock
adc
dec
enter
lret
jns
dec
std
lds
fistpl
inc
or
inc
add
shr
mov
loop
xor
movl
add
test
sub
repz
pop
adc
pop
outsb
jg
imul
push
inc
lret
fwait
scas
gs
cmc
aam
pop
dec
ja
mov
lds
add
popa
push
add
inc
pop
inc
ret
repnz
sub
lret
inc
ljmp
dec
or
xchg
inc
xor
test
das
adc
or
jmp
out
fprem1
mov
insb
and
outsl
or
add
jmp
cmpb
arpl
jecxz
iret
jae
jne
les
fnsave
loop
lahf
xor
jg
dec
cwtl
push
xchg
inc
leave
mov
leave
and
dec
add
mov
mov
call
pop
roll
scas
pop
xchg
fbstp
adc
mov
ret
or
jecxz
arpl
lds
iret
std
and
cmovne
sbb
sbbl
mov
popa
mov
mov
enter
mov
adc
cmp
push
ret
ret
out
roll
test
movsl
inc
aaa
add
fsubrp
sub
xlat
pop
dec
icebp
cmp
cld
ret
loop
and
lds
in
cmp
loopne
test
pop
fnstenv
std
lea
aas
jg
mov
sbb
mov
stc
popa
adc
cli
dec
sub
mov
add
and
bound
psrld
shr
add
ret
xchg
out
int3
mov
inc
in
fs
sahf
fidivrl
iret
jae
aad
andb
arpl
lret
and
sub
dec
int3
add
inc
push
aam
xchg
lret
inc
repz
pusha
jp
push
orb
mov
sbb
mov
pop
jl
ficoml
xor
fistpl
ljmp
scas
fcmovu
inc
dec
inc
pop
sbb
mov
dec
scas
lds
fst
xchg
ret
movsb
or
sub
shll
adc
loop
dec
pop
pop
repnz
rolb
dec
dec
mov
loop
add
inc
inc
lret
popa
cmp
pop
push
sbb
pop
add
inc
xchg
lret
mov
mov
add
push
loopne
inc
sahf
lret
fiaddl
cwtl
dec
aam
xchg
add
inc
push
lret
dec
push
mov
movsb
ret
clc
jecxz
push
pop
dec
lcall
push
lret
into
push
int3
dec
lret
push
add
push
loopne
inc
sahf
lret
pop
push
push
dec
aad
repnz
inc
lret
or
xchg
ret
shlb
mov
add
inc
xlat
lret
mov
inc
shl
fcomps
push
cmp
out
mov
jecxz
loop
lret
adc
movb
nop
jp
xchg
adc
dec
fwait
pslld
mov
ret
lret
pop
push
or
or
inc
xchg
lret
push
pop
dec
fcmovnu
repnz
jecxz
mov
lret
dec
push
mov
inc
pop
stc
push
jecxz
xchg
repz
push
pop
mov
out
loop
notb
loop
repnz
add
inc
int
iret
repz
adc
stc
fcomip
pop
add
inc
sbb
sbb
push
push
xchg
dec
adc
sbb
in
loop
inc
pop
lret
cwtl
push
pop
dec
push
adc
adc
je
push
out
loop
pop
add
dec
pop
adc
inc
mov
mov
mov
xchg
or
fcomip
ret
pop
jecxz
repz
push
xchg
dec
push
repz
or
xchg
add
jecxz
push
nop
dec
mov
mov
dec
push
xchg
inc
shlb
fyl2x
pop
add
inc
pop
lret
push
push
push
dec
push
xchg
repnz
add
inc
or
or
movl
leave
mov
loopne
pop
push
push
dec
adc
repnz
inc
or
push
dec
dec
movb
add
inc
sbb
fpatan
xlat
push
push
dec
rcl
repnz
add
inc
or
dec
repz
test
inc
jecxz
jns
pop
inc
pop
lret
xlat
push
push
dec
rcll
push
add
push
fnstsw
inc
add
cli
inc
sbb
push
inc
lret
lret
inc
push
add
and
dec
repnz
inc
inc
add
or
sbb
inc
repz
sub
out
push
loop
dec
ficompl
repnz
inc
add
add
add
lret
inc
push
and
movsb
repnz
push
add
cmc
xchg
ss
cli
push
push
dec
cmc
xor
je
xchg
xchg
in
dec
inc
add
jbe
in
or
jecxz
xchg
repnz
add
lret
shll
sbb
aam
fwait
hlt
ret
dec
loop
jecxz
mov
lret
pusha
out
repz
push
fimull
repnz
add
inc
rorb
repz
push
repz
push
dec
cltd
sbb
pop
add
push
add
inc
lret
mov
lret
dec
repnz
inc
xchg
lret
flds
sbb
pusha
xor
pop
inc
push
lret
dec
push
dec
dec
int3
dec
repnz
add
inc
xchg
lret
sbb
cltd
dec
sbb
push
inc
jnp
lret
enter
or
adc
xchg
lret
fiaddl
pop
dec
fbld
inc
sub
inc
push
loop
dec
enter
inc
movsb
add
pop
loope
jae
popa
lret
shll
add
inc
add
in
mov
mov
mov
cmpsl
fistps
mov
sbb
or
mov
test
xor
sub
and
mov
lock
or
sub
inc
ret
fs
xchg
add
les
enter
ret
lret
add
adc
pop
popa
push
and
movl
loop
inc
ret
dec
addr16
nop
cmp
mov
jne
mov
lods
sbb
sahf
adcl
dec
mov
aam
add
icebp
inc
jecxz
push
jmp
sub
roll
cmp
pop
repz
ret
add
fsubl
les
les
xchg
stos
or
mov
movsl
fiadds
xor
arpl
aaa
pushf
int3
xor
fstpt
xchg
inc
mov
imul
sub
cmp
add
xor
and
add
pop
shll
add
dec
push
inc
adc
cmpl
jle
push
mov
shl
push
and
jnp
mov
fiaddl
pop
fisubrs
sub
sub
rclb
jmp
sahf
inc
bound
test
inc
fcom
and
adc
leave
clc
fiadds
outsb
stos
inc
into
mov
inc
and
push
cmovle
inc
mov
and
aas
iret
jmp
and
call
sub
push
rcrl
jmp
pop
add
repnz
inc
cmp
push
jnp
leave
aaa
int3
or
and
bound
movsb
push
inc
lods
outsb
mov
mov
mov
leave
inc
repnz
inc
pop
aas
fiadds
mov
xor
add
stos
xchg
pushf
add
push
or
jecxz
sub
push
out
inc
aaa
xor
in
popf
out
mov
outsb
aas
mov
mov
fstl
aaa
out
cmc
dec
enter
adc
ret
movsl
jb
push
sar
push
adc
fimull
mov
cmp
jae
ret
xor
decb
lret
movsl
outsl
inc
fisttps
or
jmp
mov
outsb
and
pop
dec
rcl
addr16
out
hlt
push
cmp
push
leave
mov
loopne
push
push
leave
lods
ficomps
lock
sbb
scas
inc
inc
xor
inc
xchg
les
andl
push
jg
in
iret
inc
add
inc
cwtl
xchg
lcall
sub
and
sub
xlat
cmpsb
inc
mov
sahf
adc
imul
mull
in
outsb
add
inc
push
lret
inc
add
mov
sbb
insl
pop
rorb
movsl
or
jne
push
dec
imul
pop
out
loop
leave
and
sahf
jecxz
loop
lods
outsb
repnz
add
xchg
in
push
pop
loope
xchg
jecxz
mov
pop
int
xor
mov
ret
ficompl
loopne
fwait
add
xchg
jb
jecxz
lds
flds
mov
sbb
stos
push
push
enter
and
mov
imul
jmp
sbb
dec
es
add
adc
bound
ja
icebp
push
outsb
inc
test
daa
je
dec
xchg
push
mov
repz
fistps
xor
mov
mov
aas
movsl
es
cmc
scas
enter
ficoml
add
movsl
es
pop
pop
push
bound
lock
es
fstpl
jmp
and
fadds
ljmp
or
push
dec
mov
mov
lret
mov
insb
movsl
add
mov
inc
repz
pusha
push
xchg
push
adc
sub
repz
shl
fidivl
icebp
int
jne
push
mov
push
outsb
mov
mov
ljmp
ja
push
jge
stos
rol
stos
mov
xor
lret
mov
iret
add
push
lock
imul
test
jo
popl
movsl
or
repz
scas
cmc
inc
dec
and
enter
cwtl
pop
mov
subb
dec
cltd
test
or
fcmovnb
fisttpl
push
dec
pop
lock
jo
ja
lret
inc
dec
push
sti
mov
or
sbb
dec
scas
int3
push
mov
inc
dec
mov
inc
sub
push
sbb
int3
sub
rorl
lods
dec
pusha
dec
mov
mov
and
add
popf
mov
pop
cmp
cmp
jb
dec
pop
push
dec
sti
in
imul
inc
dec
out
data16
arpl
popa
cs
inc
sbb
adc
push
into
xchg
lea
test
ret
push
paddusb
sbb
jns
add
sub
leave
or
cmp
sub
inc
int3
outsb
xor
call
out
add
fistl
mov
adc
ret
jg
or
call
push
sbb
mov
inc
sbb
ret
pop
mov
sub
test
inc
or
sub
lret
adc
ja
movl
sbb
push
sbb
into
pusha
xchg
sti
imul
push
mov
xchg
in
adc
xor
insl
into
pop
das
xor
dec
les
adc
dec
mov
cmpsl
into
dec
out
fwait
bound
dec
pop
cmp
sbb
pop
lea
sub
mov
fbld
aas
shrb
aad
stc
imul
inc
lods
lea
mov
cmc
test
push
xlat
and
xchg
jo
sub
ret
movsb
jae
add
push
inc
test
loopne
loopne
lret
int
lds
jae
fidivrs
xchg
in
ror
mov
push
jnp
mov
ret
and
lods
aas
pop
insb
mov
mov
lret
adc
cmp
popa
and
cmp
pop
ret
mov
fsubrp
mov
dec
mov
aam
mov
dec
pop
dec
ret
cmp
fsubr
dec
sahf
ljmp
jle
pop
jno
fisubs
mov
orb
push
dec
sub
dec
jno
xadd
in
lcall
xchg
int3
mov
mov
add
mov
xor
enter
icebp
lret
lret
pop
out
leave
arpl
in
inc
in
mov
xchg
out
mov
int
jae
in
jmp
adcb
xchg
popf
and
dec
or
or
scas
jo
pop
scas
cmp
push
cmpsb
mov
cltd
aad
decb
outsb
repz
popa
lds
dec
stos
or
jmp
add
divl
insl
ret
fidivrs
push
lret
icebp
dec
enter
add
add
sub
add
push
test
adcl
into
or
xor
in
pcmpeqd
push
xor
push
aam
cmp
mov
add
mov
data16
ljmp
push
movsl
flds
jb
sbb
test
add
ret
fisubs
inc
mov
mov
or
xor
cld
call
cli
ljmp
xchg
xchg
loope
xor
inc
inc
repnz
popa
or
nop
mov
ficoml
mov
or
in
in
mov
sti
sub
frstor
stos
fwait
dec
jne
mov
sahf
lds
pop
enter
and
add
xor
outsb
imul
pop
psrlq
add
xor
sub
sub
pop
out
add
iret
movsl
imull
push
cmpsl
stos
mul
cli
cmp
mov
lds
lahf
cmc
and
stc
jmp
iret
repnz
add
push
call
movsl
loope
ret
inc
inc
xchg
ret
dec
lods
test
dec
cwtl
pop
push
xor
lret
inc
ljmp
or
inc
rcll
jae
push
repz
xchg
inc
and
gs
or
jecxz
xor
aad
adc
data16
jo
inc
add
icebp
lcall
leave
enter
decb
imul
repnz
inc
fmulp
jo
cmp
es
outsb
dec
fldt
add
add
push
or
stc
in
je
decl
stos
jbe
fsubs
xor
cli
loopne
inc
xchg
loopne
clc
loop
add
jne
ret
mov
int3
xchg
sub
mov
outsb
loop
dec
dec
dec
fs
aaa
inc
enter
gs
push
leave
scas
dec
cmp
in
jmp
push
mov
xchg
xchg
outsb
lretw
jl
xchg
mov
ror
repz
adc
bound
cmpsl
mov
jno
imul
add
out
xor
jb
jg
imul
xchg
add
and
dec
inc
adc
addl
sub
xor
lds
int
or
cli
jo
scas
call
pop
repnz
jns
xchg
sahf
ljmp
addl
push
ret
xor
or
inc
repnz
ficoml
push
les
cmp
jo
incl
repnz
jae
jmp
xor
int3
arpl
push
lret
fs
jecxz
scas
sahf
xchg
sbb
test
sarl
loopne
lret
sub
aaa
repz
cltd
mov
sub
mov
cmp
popa
mov
and
push
or
adc
aaa
push
lods
xchg
repz
mov
lods
dec
les
xchg
test
push
push
ret
add
movsb
lods
sub
cmp
por
and
sub
dec
jo
dec
push
in
sub
adc
lret
scas
aam
jl
repnz
adc
jo
mov
xor
xchg
mov
lcall
xor
sub
or
xchg
out
push
sub
mov
cmc
idivb
inc
lods
adc
mov
or
mov
std
mov
ret
pushf
xor
pop
movb
int3
fs
inc
je
and
bound
fs
jae
mov
sub
cmpl
inc
push
inc
inc
mov
xchg
inc
icebp
xchg
mov
jne
ret
inc
add
int
icebp
icebp
ret
in
inc
xchg
inc
inc
loop
sahf
cli
inc
xor
aas
push
dec
lods
or
sub
sub
lret
sub
cmp
out
lds
add
faddl
add
inc
shll
rcpps
xor
rolb
dec
imul
inc
sub
sbb
cli
jb
mov
aas
sbb
lods
push
cmc
loope
stos
fsubrl
jecxz
push
fsubr
xor
lret
sbb
loope
fnstcw
xchg
fisttps
jns
add
mov
inc
lock
mov
pop
ffreep
int3
out
jecxz
frstor
ss
mov
jle
aas
mov
or
add
xchg
jmp
or
mov
in
fistpll
sahf
loope
outsl
xor
cmp
push
cmp
mov
add
mov
push
rcrl
lds
or
fwait
roll
sbb
inc
test
inc
flds
lcall
xchg
shl
cli
gs
int
mov
cmc
int3
aas
movd
and
pushl
rcll
js
inc
pop
je
add
mov
mov
sub
fistps
js
rclb
jmp
lea
iret
dec
fwait
rolb
movsl
add
scas
call
mov
xchg
movsl
mov
daa
push
in
in
xor
andl
inc
add
inc
sub
push
es
iret
faddp
inc
cmpsb
nop
xchg
jl
and
lret
roll
and
aas
pop
mov
ret
mov
popa
mov
dec
and
add
lea
add
ja
jmp
xchg
lret
sub
movsb
cmpsb
adc
and
iret
mov
nop
or
add
and
mov
xor
testb
movsl
and
jo
and
push
out
xchg
rol
push
jmp
sbb
aaa
sbb
int3
xor
ficomps
inc
fisubrs
aad
mov
xchg
icebp
sub
fisubl
pop
pop
dec
ret
push
pop
enter
jae
pop
jb
fimuls
push
arpl
shlb
add
stos
push
inc
out
mov
fcmovb
jae
icebp
loopne
cmc
fidivrs
sub
xchg
aas
pop
pop
or
movsb
mov
leave
imul
test
inc
lds
pop
dec
jb
out
add
mov
or
sbb
cmp
or
fisttpl
add
dec
leave
lea
add
jp
cltd
stc
repz
loop
sbb
cmp
dec
inc
inc
cmc
jnp
aam
jo
inc
ret
lcall
loop
test
mov
lret
stos
adc
std
data16
fnsave
aad
into
add
dec
jl
cmpsb
repz
inc
rcl
repnz
inc
lds
dec
push
insl
in
mov
jo
pop
and
std
sbb
bound
xchg
add
mov
pop
int
iret
mov
in
push
push
ret
mov
outsl
jo
push
lds
lahf
into
or
mov
lcall
cmpsb
das
sti
mov
insl
lret
mov
sub
jecxz
inc
imul
add
add
mov
add
jno
adc
dec
inc
mov
jecxz
mov
pop
fs
les
arpl
lret
bound
lds
mov
inc
rcll
or
xchg
test
adc
xchg
into
add
in
shl
inc
xchg
inc
or
or
sbb
mov
iret
dec
dec
inc
adc
sub
cmp
popf
arpl
cmp
rclb
out
fnstsw
and
cmp
xor
lock
add
pop
mov
mov
lock
ret
rcrl
roll
les
xor
decl
xor
pop
and
jbe
clc
cmp
inc
adc
add
sub
arpl
dec
push
test
scas
add
lret
fs
or
cld
outsl
xor
mov
dec
inc
xchg
into
ret
or
pop
aam
int
enter
adc
pop
decb
repnz
nop
push
pop
and
jmp
pop
xor
xlat
sub
popf
sub
and
imul
inc
jo
mov
and
fdivrl
sub
xchg
iret
ret
xchg
inc
outsb
movsb
mov
std
add
repz
push
jl
cmpsb
stc
dec
jle
inc
lds
cltd
sahf
cmp
add
ja
xchg
inc
sub
xchg
pop
movl
int3
ret
flds
daa
fimull
xor
push
add
jo
xor
pop
xchg
stc
lret
add
add
out
das
add
ret
sub
jo
rolb
or
add
and
aad
in
lret
insb
jo
dec
inc
js
dec
test
inc
in
nop
stos
ret
mov
jnp
in
fistl
pop
les
fs
fildll
in
mov
addr16
inc
add
jo
push
insl
aas
fdiv
orb
inc
ds
mov
lret
cmpsb
mov
repz
scas
jns
cmp
mov
cmc
imul
in
scas
and
or
xchg
dec
dec
push
jns
out
decb
inc
jmp
nop
jae
ss
sbb
mov
ret
add
movsl
or
push
xchg
in
add
mov
fs
cmc
inc
and
mov
out
sbb
or
daa
aas
sbb
shll
jl
orl
daa
hlt
out
nop
inc
psadbw
and
sbb
push
cli
lret
add
xchg
inc
mov
jmp
add
add
push
insb
xor
mov
in
incb
testb
add
cmpsl
xor
test
cmp
in
push
dec
push
or
sahf
lods
dec
in
outsl
pop
out
sbb
sub
inc
loope
xor
loop
mov
mov
bound
xchg
iret
ret
cmpsl
loop
and
mov
push
and
mov
inc
mov
arpl
add
loopne
pop
xchg
outsb
test
add
aas
cmc
test
cld
out
mov
add
sahf
loope
xor
xchg
sbb
sub
sub
push
inc
adc
push
les
lcall
pop
xor
sti
mov
cmpsl
adc
sarb
push
add
sub
push
enter
sbb
xlat
pop
rcl
pop
and
daa
sbb
xor
test
push
dec
lods
loope
xor
or
adc
push
aas
inc
ficomps
sub
int3
add
xchg
test
incb
enter
lods
je
lret
pop
or
mov
cmp
fsubrl
xchg
in
dec
les
or
dec
les
lods
cmp
out
loop
test
addl
lret
adc
jno
mov
mov
inc
push
jne
push
dec
insb
inc
mov
outsb
js
ret
add
cmpsb
stc
add
leave
mov
shll
cmpsl
sbbl
dec
addl
movsl
and
xor
inc
jo
sub
iret
stos
nop
leave
ret
roll
mov
faddl
loop
loope
pop
rol
cltd
cld
in
or
imul
xor
add
dec
je
inc
push
aam
lds
push
xchg
add
daa
stc
add
ret
pop
je
cld
orl
outsl
adc
mov
arpl
mov
daa
push
adc
cmp
cmpsb
rolb
add
push
xorb
icebp
mov
jb
cmc
test
push
add
decb
imul
repz
ret
pusha
dec
inc
loop
bound
dec
cmp
leave
push
push
insl
std
in
and
pop
test
push
pop
jecxz
loop
bnd
icebp
in
jmp
in
loop
repnz
push
jno
cmpb
xor
dec
sub
and
loop
dec
test
ljmp
xor
std
pop
xchg
cwtl
dec
inc
cwtl
insb
loop
mov
repz
cwtl
jmp
test
push
leave
mov
and
add
jmp
lock
stc
inc
jo
inc
dec
add
call
aas
inc
jmp
and
mov
repnz
lahf
test
std
lods
sahf
dec
mov
cltd
lret
fxch
imul
and
enter
in
jmp
xchg
lea
es
stos
add
cmp
fs
jp
out
enter
push
add
xchg
outsl
ljmp
and
adc
ja
sahf
or
lret
inc
xchg
inc
lods
adc
inc
jae
mov
xlat
mov
xor
les
mov
fs
test
lcall
inc
les
nop
push
adc
sub
repz
sbb
call
daa
cmp
mov
inc
iret
pop
push
xchg
cmp
xor
enter
ljmp
lcall
test
sarb
push
push
push
repnz
inc
ret
repnz
push
test
popa
jmp
incl
ret
mov
jae
mov
push
lds
xor
push
insb
inc
mov
outsl
sub
sbb
jl
push
rcll
neg
les
fidivl
js
mov
lds
pushf
cld
add
xchg
mov
in
ss
rclb
mov
add
sbb
leave
add
test
loope
movsl
xor
sbb
test
loopne
imul
pop
dec
cld
repnz
push
mov
mul
rclb
adcb
cli
cmp
dec
mov
loop
and
sub
mov
sarb
xchg
jae
insb
pop
std
mov
and
inc
inc
repnz
cwtl
js
adc
adc
push
inc
pop
clc
cwtl
negb
pop
insl
xlat
fimull
push
ja
cli
inc
xor
mov
fstps
sub
lds
push
inc
inc
lret
mov
daa
jae
gs
inc
mov
repnz
xor
mov
add
sbb
repnz
inc
int3
adc
or
ljmp
into
data16
push
mov
sbb
dec
lret
ja
jno
rclb
add
jl
inc
and
ret
dec
inc
test
adcb
jmp
adc
enter
jmp
cmp
mov
mov
pop
adc
cmp
bound
inc
stos
or
ss
cmp
incl
inc
fs
arpl
xor
je
push
out
jecxz
pop
or
fxch
inc
sub
sarb
mov
sub
push
dec
fiadds
push
out
insb
add
jecxz
dec
aam
mov
xchg
jbe
out
stos
test
aam
call
mov
ja
sub
addr16
cmpsl
push
or
stos
mull
fdivs
add
ret
cmpsl
lds
inc
insb
cwtl
shl
cmp
aad
add
add
clc
dec
mov
stos
ret
stc
nop
icebp
xor
pusha
mov
xor
es
adc
and
scas
xchg
lret
jbe
out
xchg
push
pushf
adc
push
mov
xchg
test
jo
xor
loope
xor
dec
push
pop
sub
std
push
test
fwait
cmpsl
xchg
out
xchg
clc
pop
lds
roll
sub
cli
pop
stc
and
or
sbb
xchg
push
push
dec
add
pop
mov
pop
leave
lret
dec
lds
sbb
inc
or
aam
jmp
stc
aas
xchg
loope
mov
sub
mov
jne
movb
push
lahf
lods
fs
fstpt
inc
sub
dec
jo
repnz
iret
push
inc
lret
addr16
stos
add
push
stc
cmp
mov
mov
pop
fs
addb
les
xor
in
sub
movsb
push
int
sar
jne
dec
xor
js
fmul
enter
mov
aam
cmp
xorl
jmp
mov
jnp
or
fcompl
imul
or
lea
pop
pusha
dec
pop
jns
mov
mov
leave
jl
mov
sub
orb
cltd
xchg
pusha
fiadds
jb
xor
or
fsubr
mov
sub
mov
test
push
mov
inc
aam
jnp
jecxz
fstl
ds
inc
in
and
pusha
mov
repz
cmp
ret
in
jae
fldl
push
add
pop
ret
xor
cltd
int
cld
out
incb
imul
and
cld
fldenv
mov
lds
ficompl
mov
iret
stos
jmp
jo
or
cmp
aas
adc
or
int3
mov
loop
sti
scas
mov
les
sub
lcall
inc
mov
lea
lea
sub
sub
push
call
mov
repnz
mov
mov
lret
inc
adc
loopne
repz
inc
ja
fcompl
push
popa
test
movsb
or
xor
stos
outsl
dec
or
sbb
outsb
popa
std
test
jmp
ljmp
imul
sub
test
push
lea
sbb
adc
xor
mov
cmp
adc
mov
pop
aaa
sub
push
mov
bound
or
gs
add
sbb
in
cmp
mov
jecxz
mov
jo
push
push
inc
ss
sub
decl
xchg
hlt
scas
mov
xchg
xchg
adc
in
push
rorl
add
sub
lods
or
hlt
mov
or
inc
fldl
cmp
stc
gs
jecxz
and
sarl
or
outsb
pop
in
push
shrl
cmpsb
add
xor
mov
push
orb
movsb
jns
sub
sub
or
aas
aad
sub
sarl
jo
pusha
pop
mov
call
cs
push
repnz
jg
sub
jge
leave
cs
ficomps
aad
cmp
ret
or
and
inc
xchg
js
call
dec
push
push
cmpsl
es
test
mov
pushf
sbb
packsswb
into
enter
pop
imul
std
pop
iret
cmp
dec
push
fcmove
jb
jb
rcl
outsb
loopne
insl
pop
xlat
pop
repz
lret
lea
lahf
pop
dec
aam
faddp
mov
les
lahf
dec
jecxz
add
push
push
dec
rep
loop
dec
push
adc
and
cli
push
dec
je
jmp
inc
jmp
movsb
xchg
stos
mov
int
fiadds
add
xor
inc
or
iret
sub
shl
aam
std
test
dec
fisubs
xchg
mov
pop
cmc
arpl
xacquire
les
add
push
movsb
mov
push
dec
jecxz
push
or
in
cmp
shll
cwtl
push
aad
fs
negb
mov
rorl
and
push
or
jo
paddd
mov
push
push
bound
xor
mov
pushf
bound
mov
sub
leave
lret
lret
mov
outsl
ljmp
xchg
pop
or
out
push
into
mov
gs
push
push
cmc
mov
sbb
aas
stos
mov
and
mov
add
dec
push
repnz
in
test
gs
pop
nop
std
dec
leave
jo
and
dec
sub
loop
rol
arpl
call
cmp
in
repz
enter
dec
mov
xor
repz
mov
push
lret
stos
jae
out
fsubs
loop
jecxz
xor
xchg
push
cli
sub
sub
movsb
jo
mov
mov
sarb
and
sbb
rcrb
or
scas
fldcw
repz
xchg
mov
movl
in
mov
mov
sbb
imul
jge
test
xchg
call
out
int
mov
test
inc
and
push
movb
and
jbe
js
mov
fimull
jmp
fisubrl
lock
cmp
sbb
xchg
cli
push
push
jmp
aas
mov
and
jnp
dec
data16
push
mov
push
adc
and
clc
xor
cmpsl
jecxz
scas
outsl
leave
lret
sub
hlt
ret
and
popa
mov
into
pushaw
pop
and
loopne
inc
jbe
test
and
adc
lret
mov
mov
inc
lcall
fsub
xchg
pop
mov
repnz
adc
int3
cld
push
icebp
inc
pushf
or
pop
sub
ret
lock
fldenv
mov
add
fld
inc
or
dec
mov
fwait
cld
mov
pop
movsb
lds
mov
cmpsl
or
xor
call
ss
add
push
add
or
ret
in
in
leave
push
in
movsl
aas
mov
mov
mov
xor
fnsave
movsb
insl
loop
repnz
sub
inc
mov
mov
clc
push
ljmp
pextrw
mov
xchg
faddl
or
lret
inc
pop
mov
push
faddl
in
rorl
cmp
vpsubusb
mov
inc
jo
push
add
mov
or
and
lods
inc
in
int
pop
jmp
ret
repnz
inc
add
push
loopne
fmuls
repnz
into
fldl
js
in
and
jno
clc
sub
iret
cmovs
adc
je
and
sbb
imul
fsubl
adc
ret
test
push
sub
rcr
and
add
jl
cld
and
andl
mov
push
dec
lods
mov
ror
jle
sub
xchg
mov
xlat
xor
xor
repz
mov
xchg
push
lods
xlat
xlat
loop
or
out
gs
mov
xchg
dec
jge
fs
sbb
shl
pop
outsb
test
lcall
push
fidivrl
or
fwait
les
shl
loop
xor
mov
icebp
cwtl
ret
repz
pop
xchg
repz
rcrl
jae
push
ret
lods
sub
cmp
insl
mov
and
leave
fstp
sbb
cmpsl
ljmp
mov
or
jmp
xchg
test
push
jo
jae
jno
aaa
sub
imul
jmp
inc
lahf
sarb
lret
inc
shll
sbb
mov
cmp
pop
ret
ja
mov
jge
dec
mov
ret
jae
fisubrs
adc
stc
cld
jne
fisubrl
fcmovnbe
xor
dec
push
push
lret
adc
andb
stos
loop
dec
ret
repz
ret
scas
jae
cltd
mov
or
xchg
pop
inc
adc
lods
dec
icebp
cmp
imul
add
mov
mov
out
imull
mov
add
aam
loop
and
inc
cwtl
inc
adc
sarl
inc
xor
jmp
loopne
or
fsubrl
inc
mov
pop
push
iret
cmc
je
xchg
add
or
cli
lret
pop
adc
cmp
jmp
mov
loop
lea
leave
xchg
push
in
xor
mov
and
lret
add
std
in
mov
pop
inc
inc
and
bnd
push
cmc
mov
fnstsw
pop
add
out
imul
sbb
pop
adc
mov
je
or
and
cmpb
pushf
inc
test
andb
cs
mov
add
jb
int
or
sbb
loopne
dec
pop
xchg
aad
mov
dec
repnz
mov
mov
jae
subb
mov
mov
fisttpll
xchg
jae
sahf
and
jo
dec
jae
int3
push
xchg
jecxz
lret
sbb
inc
lret
jb
xor
ret
lret
movb
fnstenv
es
push
cmpsl
test
les
and
cmpsl
push
xchg
inc
mov
test
add
test
sub
inc
call
or
lods
push
add
xor
shlb
mov
ja
fimull
pop
aam
shlb
cmc
mov
sub
push
inc
xchg
push
addr16
push
xor
pop
pop
mov
loop
fildll
stos
jge,pt
cltd
push
aaa
dec
sbb
push
pop
nop
dec
outsb
sub
cmpsl
adc
flds
ret
repnz
mov
jge
cmp
mov
fisubrs
xchg
xor
pop
sbb
loop
rorl
fisubl
push
in
popa
or
lcall
dec
adc
aas
cltd
scas
ffree
jo
inc
fdivp
pop
inc
shrb
fcmovu
or
inc
ljmp
leave
mov
movsb
dec
and
add
add
xor
out
shrb
repz
nop
pop
inc
inc
mov
aas
repnz
iret
ja
inc
push
inc
dec
mov
dec
pushf
cmpsb
fsub
scas
enter
shll
out
cmpsl
aam
cmp
mov
cmpsb
lods
pop
sub
iret
mov
dec
xor
xorb
sbbl
popa
pop
rolb
data16
movsb
loop
int3
ret
ljmp
dec
movsb
call
movsb
lea
iretw
add
lcall
les
and
arpl
mov
icebp
loop
xor
out
in
ret
cmpsl
and
fisubrs
xchg
test
sbb
xchg
rorl
sbb
push
popa
push
push
dec
sbb
sti
es
sub
mov
aaa
icebp
pop
lret
jae
dec
mov
hlt
test
pop
push
and
xor
lret
jge
gs
jmp
pop
pusha
push
push
in
in
stc
or
push
mov
insl
cli
sub
sahf
sub
mov
sarb
jb
leave
lret
dec
aam
or
xor
leave
test
incb
jbe
flds
inc
mov
ret
or
stos
inc
leave
das
flds
lds
sarb
jbe
in
inc
test
sub
stos
rcrl
and
xor
sbb
inc
dec
and
mov
inc
mov
dec
call
mov
mov
cs
test
inc
ret
leave
push
mov
push
test
insb
pop
cmp
in
pop
xor
xor
in
out
inc
mov
leave
aam
mov
pop
sub
dec
pusha
subb
les
mov
daa
sbb
cmpsb
jae
inc
dec
inc
mov
sub
inc
mov
add
mov
cpuid
out
xchg
jl
scas
das
fsubs
mov
in
push
or
pop
stos
divb
pop
jne
adc
mov
xor
sub
sub
sti
push
adc
repnz
data16
and
push
movl
jb
call
or
les
mov
cmp
lds
test
imul
int
test
stc
add
xor
repnz
jo
pop
xchg
jnp
xor
jae
mov
and
orb
push
into
sub
fwait
adc
mov
mov
mov
aas
sti
xor
push
dec
mov
sub
ret
into
mov
orb
std
in
aas
jge
add
aaa
in
inc
xor
xor
in
mov
adc
dec
jge
add
and
mov
leave
dec
icebp
dec
add
adc
inc
into
push
mov
pop
and
cmp
sbb
mov
jmp
popa
mov
aad
pextrw
xchg
ficomps
addr16
rorb
lods
rolb
ficoms
in
mov
cmp
lahf
popa
mov
and
xchg
sub
shl
inc
arpl
test
add
xchg
leave
and
xchg
outsb
or
loop
ret
jb
les
test
outsb
in
push
sub
nop
cmpsb
stos
pop
stos
shlb
popa
clc
sub
mov
mov
mov
subl
repnz
jmp
xchg
cwtl
inc
dec
pinsrw
sahf
test
rcrl
lret
push
pop
mov
into
add
cmpsb
sub
add
cmp
push
fwait
cmp
push
xchg
fidivl
out
or
push
or
jne
push
mov
inc
ret
sbb
mov
lock
add
add
lret
ret
jp
inc
dec
add
enter
pop
xchg
or
outsb
les
mov
xchg
jmp
addr16
gs
aas
jne
jb
in
cmp
mov
lock
or
xchg
sbb
xchg
dec
mov
in
mov
pop
stc
xor
lea
popa
adc
dec
leave
sub
push
sub
in
dec
es
push
or
jae
add
shrb
add
push
and
test
in
pop
test
jmp
rcr
and
clc
dec
inc
ficomps
mov
stos
cmp
lret
or
movl
inc
xor
addr16
jae
or
sbb
into
adc
icebp
xchg
add
push
outsb
call
cmpsb
popf
pop
ffreep
jbe
push
rclb
inc
add
ret
mov
fdivr
jle
cmp
in
rcll
mov
jo
stos
push
adc
test
xchg
jbe
lret
sbb
and
lods
mov
out
ret
sub
adc
mov
mov
jmp
insb
popf
frstor
fsubp
sahf
inc
mov
push
test
std
into
aam
ljmp
lea
push
or
nop
ficoms
loop
add
in
xor
loopne
xchg
xchg
push
push
adc
cwtl
push
add
ret
jge
cmp
jp
bound
sub
lods
faddp
pop
and
js
loop
sub
mov
sbbb
into
or
movups
cmp
loop
dec
ss
mov
sub
dec
cmp
sbb
dec
jl
lods
aas
addl
repnz
pop
adc
shll
enter
adc
outsb
repz
jge
ds
rorl
js
sbb
roll
dec
repnz
aas
or
mov
mov
adcl
cmpb
and
add
mov
jb
mov
mov
adcl
mov
imul
fisubrs
ret
cs
xor
pushf
xchg
sub
jp
insb
jmp
sbb
mov
pushf
cltd
in
fimull
sub
inc
xor
push
mov
aas
add
dec
leave
aaa
cmp
mov
fmull
iret
push
dec
xchg
lret
insl
lret
xchg
stos
and
jae
add
jmp
in
jle
or
sti
push
bound
imul
lock
fistpl
jmp
fs
loop
sbb
add
imul
xor
mov
mov
mov
xchg
fnstenv
dec
dec
shll
inc
sub
cmpsb
imul
fcmovne
test
les
test
in
xor
aas
jg
sti
and
popf
inc
outsl
inc
fcmovb
add
fists
psrad
adc
pushf
add
lret
jg
aas
insb
pop
inc
int
aaa
pop
xor
das
pop
sub
xchg
testb
xchg
imul
in
pop
cli
xchg
lret
icebp
sub
mov
stos
and
fwait
and
cmpsl
push
dec
inc
in
sub
movsl
das
push
mov
ljmp
add
jl
lret
sarb
or
inc
dec
shl
test
mov
push
or
incb
lods
jl
add
cmp
adc
test
inc
icebp
lock
or
ljmp
push
std
imul
push
mov
and
xor
movl
dec
aam
mov
repnz
pop
das
xor
mov
push
push
adc
add
fidivs
jp
fs
in
dec
repnz
hlt
or
out
out
cmpsl
mov
push
mov
push
pop
xor
cmc
xor
aas
pop
pop
adc
stos
push
inc
or
jnp
pop
add
push
lret
xor
sub
orl
push
lods
cld
ret
jle
mov
loopne
popa
and
adc
shlb
hlt
push
fsubrs
inc
jo
mov
mov
push
and
arpl
xlat
push
add
ljmp
pop
mov
outsl
push
dec
nop
outsl
or
or
addr16
iret
adc
jae
pop
xchg
sub
lahf
leave
mov
popf
or
push
xchg
add
adc
cmp
cli
xchg
mov
ja
mov
add
inc
sub
outsl
push
adc
or
jnp
sub
stc
pop
test
add
mov
jae
or
in
lods
add
rcr
repnz
mov
fiaddl
lods
test
fsubs
inc
icebp
sub
xor
pop
inc
aad
ficoms
aas
or
lods
lods
rcrl
into
cmpb
pusha
xor
call
test
push
cwtl
inc
xor
adc
xchg
lahf
pop
pop
shl
leave
les
leave
inc
rcll
fsubrs
in
sub
cmc
pop
add
adc
jbe
push
gs
cmpb
sub
inc
lret
mov
push
dec
leave
aad
dec
sub
ret
lret
dec
lret
fbld
push
in
fcmovbe
int3
fmuls
dec
int
xchg
in
rclb
in
out
je
add
pop
sub
push
pop
dec
lds
cmp
cwtl
inc
fists
int3
mov
outsl
stc
push
sub
mov
and
inc
into
add
jge
in
orl
into
xchg
cmpsb
xor
and
in
push
xchg
test
ja
add
mov
sub
push
xchg
push
xlat
push
sbb
in
addr16
lock
and
xlat
enter
xlat
out
aas
roll
and
inc
pop
bnd
push
fdivrp
dec
add
inc
orl
enter
dec
fmull
lret
dec
into
or
fs
iret
andl
xor
enter
pop
int
test
loopne
loop
lea
or
cmpsl
fstps
ret
pop
inc
lret
enter
dec
fcmovb
leave
aam
in
iret
ror
push
dec
ret
add
mov
sub
ret
dec
aad
int
out
iret
inc
into
roll
jle
sbb
adcb
mov
loop
xchg
adc
dec
add
or
data16
jle
lret
rcll
pop
dec
rorl
in
inc
push
shlb
ret
hlt
fcmovnb
hlt
std
movsl
in
lods
or
add
ret
iret
inc
cltd
jge
mov
rcr
enter
add
outsb
inc
ret
aas
add
xor
mov
ret
inc
lcall
mov
inc
jb
pop
fimuls
inc
add
jo
add
jno
or
cmp
pusha
js
or
sti
sahf
pop
jo
les
mov
or
leave
lds
xchg
inc
daa
rolb
stc
sahf
ret
mov
inc
lods
repnz
enter
int3
mov
out
inc
fiaddl
inc
leave
enter
dec
mov
jmp
jge
dec
into
dec
sub
cld
mov
and
xchg
add
stos
mov
adc
ret
shr
or
jne
sub
int
xchg
jmp
repz
mov
adc
inc
loop
xor
mov
aad
pop
jae
mov
inc
inc
jo
out
mov
push
cmpsb
aas
dec
push
stos
dec
inc
xorl
jp
inc
enter
mov
stos
inc
mov
mov
jo
push
jmp
pop
jae
sub
or
fadd
mov
mov
xor
inc
inc
je
mov
pop
sahf
jmp
cmp
addl
xlat
dec
push
ret
iret
ss
xor
aad
mov
shl
loopne
rorl
or
inc
or
cmc
dec
fdivr
dec
mov
and
dec
in
inc
aam
jae
sub
inc
fiaddl
mov
ficoms
inc
inc
iret
xchg
leave
lcall
pop
test
pusha
sub
repz
rcl
pop
rcr
and
test
call
add
mov
mov
push
pop
lea
mov
jl
push
push
jae
int3
roll
fcmovu
pop
push
enter
inc
subb
jb
lods
adc
in
and
test
iret
sar
fiadds
and
add
loop
cmpsl
mov
cmpsb
aas
cmp
jne
sbb
call
mov
mov
dec
push
pushf
or
jbe
aaa
sbbl
arpl
neg
xchg
xor
shll
push
lds
jmp
cmpsb
rorl
int3
lahf
jb
repz
and
cmp
mov
fisubrl
mov
shrd
cmpsl
jns
in
and
test
jle
test
push
leave
inc
test
jmp
sub
mov
lods
sarl
daa
xchg
dec
dec
push
loop
clc
sub
cmp
lods
lock
inc
add
popf
inc
or
repnz
xor
dec
aad
scas
leave
jp
pop
leave
iret
jg
outsb
bound
sub
loop
int
test
imul
mov
std
sbb
stos
push
push
xchg
xchg
lret
xchg
jae
aaa
inc
mov
sub
mov
cld
mov
jmp
insb
ret
popf
lcall
psadbw
fnstsw
mull
push
jne
sbb
or
ds
push
pop
addr16
jmp
add
es
lock
mov
leave
push
aas
lds
outsl
ret
sub
pop
inc
mov
and
repnz
mov
mov
mov
mov
out
lret
in
ficomps
imul
mov
and
rcrb
and
fs
rcr
jbe
ss
pop
loop
mov
lret
mov
iret
xlat
popf
cmp
notl
jle
es
sub
xor
bound
mov
ret
ret
arpl
bound
dec
pusha
inc
aas
cmp
leave
lret
int3
lods
lods
push
daa
loop
mov
jle
dec
xchg
dec
pop
jmp
decl
mov
fiadds
lods
jo
inc
xchg
mov
xlat
dec
sbb
push
fcmovb
inc
adc
ja
mov
shl
push
in
mov
jo
imul
aas
std
lahf
adc
cmp
mov
push
sub
pop
outsb
cmc
les
lsl
cmp
fsubl
ret
in
cmpsl
sar
jo
mov
stos
push
repnz
shrl
dec
sub
notb
pop
mov
mov
add
sbb
insb
mov
dec
loop
xchg
mov
and
sub
rcrb
mov
push
sbb
mov
mov
mov
iret
add
and
call
ficomps
xor
or
je
add
mov
cmp
adc
or
xchg
mov
arpl
pop
cmc
jae
es
lret
or
xor
pusha
adc
and
lcall
repnz
fisubrs
jmp
ja
leave
aam
mov
leave
push
push
or
andb
jecxz
int3
lret
mov
in
leave
push
dec
shl
lret
dec
lds
push
dec
int3
flds
sub
ret
int
pop
dec
shl
into
iret
ret
inc
je
add
pop
or
mov
or
leave
jl
into
gs
pop
jg
gs
fisubrs
xlat
mov
add
pop
in
mov
out
pop
lret
and
push
mov
xorb
dec
dec
sbb
arpl
fwait
icebp
push
jecxz
leave
sub
bound
pop
mov
mov
iret
push
es
mov
add
and
jae
add
pavgw
out
push
mov
pop
aad
and
push
loopne
pop
sub
mov
int3
jecxz
lret
int3
inc
test
or
pop
fcoml
incb
lods
sub
mov
rcr
sbb
inc
or
adc
cwtl
pop
aaa
addr16
pop
call
jae
out
inc
out
fnstcw
mov
movsl
into
scas
insl
mov
adcb
insl
fwait
ret
sub
pop
jmp
xlat
mov
mov
imul
outsb
push
sbb
adc
add
xor
dec
cs
dec
adc
mov
pop
pop
cwtl
cld
ret
jbe
push
mov
ljmp
pop
push
dec
repnz
xchg
insb
mov
add
out
pop
popf
cmp
popl
mov
and
les
fs
and
nop
xchg
stos
pop
dec
xchg
dec
test
int
cli
mov
xchg
testl
cwtl
push
int3
lret
mov
jns
mull
daa
mov
mov
shrb
or
stos
ret
xchg
and
xchg
mov
and
xor
mov
mov
dec
insl
xor
jbe
cmp
in
mov
pop
in
mov
lds
inc
add
pop
push
inc
add
inc
loopne
adc
jmp
jo
sub
or
lret
cmpsl
jmp
and
frstor
pop
fiaddl
adc
mov
add
add
aas
cmp
jo
out
scas
jle
inc
jno
pop
jp
imul
jle
ficomps
xchg
bound
sbb
insl
test
cltd
in
fstpl
sbbb
lret
ret
in
dec
loop
nop
jb
fiadds
ficomps
popa
popa
jbe
mov
shlb
aas
and
mov
in
gs
sbb
xor
popf
stos
iret
test
movsl
fmull
lock
pusha
jae
sbb
adc
inc
sub
jns
icebp
gs
xchg
insb
adc
ret
mov
push
and
into
int3
inc
daa
mov
sub
push
lock
xchg
push
int
loope
pushf
sub
sarb
fs
fs
jne
jecxz
inc
pop
idivl
repnz
sub
rcl
push
fcmovbe
dec
push
push
addr16
mov
aas
sub
rorl
cmp
add
xor
enter
lret
jnp
call
fsubs
mov
addr16
pop
mov
jbe
movsb
dec
pop
xchg
xor
mov
dec
pop
sub
lret
push
mov
sub
ja
dec
filds
mul
pop
in
inc
inc
arpl
mov
mov
scas
loopne
jno
push
daa
xor
lea
or
test
icebp
outsb
and
xchg
shrl
add
inc
and
dec
adc
cmpsl
dec
in
xchg
inc
add
shlb
cmp
jae
sub
cld
and
mov
mov
xchg
hlt
and
xrelease
out
rcr
pop
or
es
xchg
jb
inc
loope
inc
cmovb
lretw
jmp
adc
or
cmc
push
out
fiaddl
bound
mov
and
push
jecxz,pn
enter
inc
les
dec
ret
ss
test
and
loop
adcl
sbb
les
arpl
sbb
leave
out
rorl
add
out
jp
std
or
lds
daa
pop
out
fs
loop
les
fs
fcomi
mov
in
xor
or
mov
push
dec
pusha
inc
mov
and
popa
fisubl
bound
cmpsl
jmp
and
lret
add
ret
pop
loopne
dec
add
jle
ds
mov
and
stc
call
lds
aas
cltd
mov
rcll
cmpsb
xor
pop
push
lahf
int
push
jecxz
sub
xor
imul
bound
sahf
add
out
push
les
faddl
popa
sti
xor
jns
adc
jecxz
push
mov
test
test
push
jle
outsb
imul
xor
jmp
mov
inc
fcmovu
ljmp
inc
loopne
fcoms
test
inc
add
inc
mov
fidivs
mov
lret
mov
sbb
pop
xchg
pop
and
fwait
sbb
movsl
pusha
rorb
cld
mov
or
pop
push
jge
dec
jnp
rorb
dec
gs
push
daa
stc
lret
pop
cs
jmp
or
xchg
inc
setl
mov
lods
push
xlat
or
sbb
and
fcomps
jo
lahf
fidivrl
clc
inc
pop
cltd
jp
pop
shrl
push
pop
int3
xchg
xchg
mov
mov
xchg
add
inc
sbb
call
xor
xor
lret
in
jle
and
xor
stos
and
and
stc
cmp
pop
repnz
fistps
ficompl
stc
or
addr16
cld
in
add
pop
out
mov
in
pop
je
stc
xchg
aas
jp
loope
xchg
inc
jne
xor
push
pushw
add
xchg
cs
fisubl
rorb
add
jecxz
in
rcr
jno
es
mov
jecxz
cli
or
add
sub
dec
jae
jno
repnz
roll
test
outsl
xchg
out
and
mov
dec
fdivl
xor
fiaddl
pop
cmp
cmpsl
dec
int3
out
mov
loopne
outsb
xchg
fiadds
mov
mov
dec
dec
pop
movsb
out
ret
sub
or
sub
jecxz
and
aad
aad
pop
pop
mov
pop
add
loopne
pop
pop
or
lret
adc
pop
sbb
push
les
addb
add
sbb
lods
lds
jp
jecxz
sub
cld
out
ret
pop
sbb
cmpsl
fsubr
push
push
jno
mov
addr16
mov
sub
mov
pop
pop
mov
test
aam
or
add
bnd
add
adc
lods
pop
sbb
dec
jecxz
fs
mov
xchg
add
xchg
pusha
inc
adc
mov
sub
jmp
and
xchg
dec
and
add
call
inc
pushf
push
js
lahf
nop
jle
mov
dec
sub
dec
ret
xchg
ja
mov
add
pop
xor
add
std
popa
fbld
aas
inc
pop
cltd
or
or
push
pcmpgtw
cld
cmp
call
or
in
rcll
and
pop
leave
hlt
int3
and
loopne
or
mov
lock
dec
sub
cltd
jns
adc
test
testb
jg
lds
mov
into
fcmove
loopne
add
das
pop
cmp
cli
aas
mov
test
repnz
push
test
xor
mov
in
mov
and
inc
sub
push
add
lret
in
sub
sub
jp
dec
mov
sbbl
nop
and
aad
jo
aas
lret
orl
je
frstor
call
ret
ss
les
inc
lds
in
js
idivb
ficoml
xor
mov
imulb
jl
test
cmp
mov
push
xor
lods
pusha
fistps
xchg
loope
aas
mov
and
pop
shl
shll
jl
sbb
in
add
jle
dec
test
pop
dec
call
xchg
mov
mov
and
pop
sbb
in
add
aas
cmp
jo
jge
jle
push
in
mov
sti
jmp
hlt
mov
push
pop
xor
dec
imul
stc
or
aas
cwtl
leave
adc
sti
sbbl
sbb
or
and
xchg
loop
lods
fcmovnbe
out
shll
sbb
inc
js
lds
sub
mov
out
outsl
in
mov
inc
jns
and
mul
xchg
dec
roll
push
test
or
cltd
sub
lar
fs
js
and
aaa
dec
cmpsb
mov
repnz
pop
iret
push
cmc
enter
dec
inc
stos
aas
mov
adc
sbb
cmp
add
in
inc
pop
roll
xor
xchg
out
dec
popa
leave
into
rcrl
shll
push
xor
dec
and
jae
rcl
push
xchg
pop
mul
fsubrl
sti
mov
test
sub
in
popf
lods
push
adc
pop
popa
icebp
dec
and
mov
test
call
bound
dec
adc
rcrb
ret
sbb
inc
roll
cld
mov
arpl
sbb
sub
call
adc
fildl
inc
xor
flds
jmp
sbb
sbb
stos
loop
pop
iret
adc
jne
das
imul
popa
mov
push
int
push
mov
add
call
lcall
dec
loop
dec
push
adc
adc
push
lret
push
je
imul
mov
xchg
jmp
dec
jae
adc
push
repz
icebp
stc
dec
lcall
sub
mov
out
sti
stc
inc
aas
jg
push
aas
pusha
xor
sub
nop
lret
les
pop
sbb
sbb
and
decb
sti
cmp
mov
inc
jb
xchg
in
movsb
pcmpgtw
dec
js
push
and
adc
pop
aas
sub
inc
jecxz
testb
sub
test
push
orl
lods
and
lret
mov
fldt
sarb
xchg
dec
inc
inc
mov
add
lahf
add
mov
cs
and
mov
jae
jmp
sbb
repz
jecxz
dec
and
leave
sbb
nop
rorb
imul
fnstenv
bswap
jp
cmp
addr16
add
xchg
and
mov
stc
jmp
sub
inc
lahf
cmpsb
rorb
fdivrp
flds
ret
fwait
out
push
cmpb
das
pop
faddl
bnd
loope
pop
fcmovbe
xchg
lret
aad
lcall
xchg
inc
aam
outsb
push
jg
mov
mov
arpl
and
fdivrl
cwtl
dec
repnz
mov
jnp
add
xchg
mov
leave
lahf
adc
mov
and
add
mov
ret
hlt
jnp
aam
xor
push
push
pop
fldenv
jne
jmp
into
fs
fcmovnu
pusha
jmp
fadds
xchg
dec
push
lods
mul
lret
jmp
dec
scas
negl
mov
aaa
arpl
xchg
xchg
imul
and
dec
or
pop
fsubrl
push
dec
adc
pop
xlat
pop
pusha
jnp
outsl
adc
stc
jb
movsb
pop
mov
add
push
mov
mov
cmp
shl
shrl
pop
ret
and
test
add
jmp
repnz
ret
loop
mov
jmp
mov
inc
sbb
in
xor
stc
adc
pop
or
push
cs
lahf
dec
cmc
loopne
lea
cs
jmp
pop
decb
and
repnz
gs
out
movsb
add
loop
mov
inc
xchg
inc
cli
mov
fcmovnbe
stc
lahf
inc
pop
sub
pop
aam
sbb
out
test
mov
mov
sarl
gs
iret
or
sub
rcrb
or
add
ljmp
in
int
sbb
xor
data16
lret
les
sub
jp
les
in
pop
movsl
ret
fisubrs
jmp
and
test
add
subl
in
mov
push
orl
hlt
loop
inc
push
ret
icebp
in
pop
xchg
movsl
push
in
mov
test
inc
cld
mov
mov
cmpsb
sub
iret
pop
push
in
popa
add
mov
mov
ret
jo
mov
mov
pusha
cmpsl
aad
mov
fistl
call
icebp
mov
mov
add
inc
arpl
arpl
jp
cld
dec
popa
fisubs
xlat
sub
mov
aas
sti
mov
call
cmp
and
call
add
cmp
xorl
jmp
jmp
incb
ret
mov
in
sub
xor
mov
mov
sub
ficompl
into
dec
push
dec
js
inc
add
data16
imull
mov
or
rcl
xchg
leave
in
cmp
in
inc
movsl
int3
xor
es
pcmpgtw
mov
or
fnstcw
js
mov
xor
pop
lods
mov
or
ds
pusha
pop
ficoml
lret
fwait
mov
das
loop
paddsw
lods
jl
in
nop
cmp
fcmovu
iret
into
insl
repnz
inc
mov
es
mov
jmp
aaa
and
imul
fimuls
pop
xchg
or
and
test
sti
sbb
pushf
cmc
push
dec
mov
pop
out
ret
xchg
jp
frstor
mov
int3
inc
dec
sub
jno
ret
sbb
loopne
ret
dec
fstl
pop
adcb
jb
aad
push
fisubrl
rolb
pop
or
or
fs
add
pop
push
sbb
dec
sti
or
loope
cmp
inc
pop
push
shl
pop
ret
xor
repnz
dec
mov
in
inc
inc
xchg
sub
in
repz
xchg
add
lods
mov
loop
loopne
gs
xor
sti
enter
sbb
repz
test
or
add
test
push
lret
shlb
arpl
shlb
fisttpl
repnz
adc
pop
jae
sbb
mov
dec
sub
jecxz
xlat
sub
sbb
les
mov
outsb
inc
aam
sub
xchg
inc
popf
adc
or
mov
mov
loop
lods
divl
add
sub
into
adc
int3
and
inc
adcl
mov
les
inc
jo
inc
clc
sti
pop
mov
cmp
fwait
xor
xor
adc
pop
adc
and
or
pop
arpl
test
jmp
jmp
psrad
and
shll
fs
or
std
mov
stos
icebp
mov
data16
jne
cmp
inc
insl
pop
sub
fdivrs
shr
loopne
jge
push
xchg
mov
and
pop
into
aam
jg
sbb
arpl
inc
and
repnz
jb
mov
outsl
arpl
push
inc
add
aad
cwtl
push
and
popa
sub
sahf
inc
or
mov
faddl
mov
cmp
mov
in
stc
inc
mov
aaa
pop
xor
pop
filds
dec
pop
movsl
cmp
push
cmp
and
stos
in
cmp
push
dec
fsub
push
mov
imul
dec
xchg
xor
movsl
mov
loop
jne
and
pop
stos
clc
pop
inc
int3
cmpsb
lret
sbb
test
icebp
dec
mov
xchg
sbb
adc
inc
jl
jecxz
test
xlat
jle
dec
inc
mov
cmp
sbb
std
ret
and
jmp
repnz
in
push
dec
es
mov
pop
mov
movsl
shlb
cmpb
push
inc
outsb
or
mov
lock
mov
jbe
andb
sbb
inc
adc
out
imul
lock
loope
sub
or
leave
aas
movsl
rol
imul
mov
ja
push
push
inc
adc
and
addr16
lea
xchg
stc
fnsave
nop
leave
fsubp
or
push
cmp
aad
mov
icebp
jmp
stos
xchg
and
sub
inc
mov
repz
mov
test
and
dec
pop
fsubp
or
cmp
xor
fadds
jg
pop
test
pop
ret
movsl
sub
xchg
int3
jno
lods
fcompl
lret
das
jno
mov
cli
or
jb
mov
push
int3
in
int
cli
or
sbb
sbb
mov
popf
cmpsb
sar
xchg
pop
lret
adc
shll
fidivrs
sbb
mov
clc
xlat
in
xor
jbe
mov
mov
scas
sbbl
aad
out
xor
call
nop
mov
dec
int
ficoms
ret
push
dec
dec
lock
sbbb
int
cli
ret
outsb
sub
ficoml
fisubrs
and
ficoml
fstps
and
lods
dec
push
inc
push
and
aas
stc
xor
mov
adc
add
push
add
mov
ret
push
mov
push
lock
fistl
mov
sarl
add
stos
testb
ljmp
out
sti
dec
pop
enter
and
and
testb
push
andb
lahf
fisubl
add
jnp
lret
lcall
cwtl
sbb
cmpsl
ret
fsubrl
fwait
mov
inc
enter
fsubl
xor
add
loopne
mov
cmpb
sbb
pusha
rorl
sbb
adc
pop
rorl
jae
jmp
push
add
sti
dec
push
loopne
cmp
sti
lea
xchg
sbbb
jbe
lods
sub
adc
push
lret
xchg
lret
xlat
enter
sti
jb
inc
inc
insl
sub
jecxz
cmp
lret
insb
sbb
cmc
int3
push
add
mov
aad
or
std
xchg
movsl
fwait
sbb
mov
loopne
inc
jecxz
sub
pop
push
xchg
bound
shll
and
shll
out
imul
inc
outsl
enter
push
pusha
xor
out
push
push
mov
xchg
sub
insb
push
je
mov
daa
jecxz
lret
mov
add
add
out
ds
rolb
dec
out
mov
push
imul
jecxz
or
notrack
and
sarb
cwtl
in
andl
mov
inc
inc
xchg
pusha
fisubs
lds
mov
lds
mov
fimuls
mov
jmp
adc
mov
adc
or
push
arpl
lds
ret
dec
aad
leave
iret
out
lret
ret
in
or
lret
dec
aam
int3
rclb
int
rorb
into
mov
les
addb
push
fdiv
add
fcmovb
outsl
cmp
pop
dec
mov
dec
pop
pop
push
adcb
push
fsub
or
es
inc
inc
mov
mov
add
repnz
rolb
add
fcmovbe
lret
fimuls
adc
outsl
adc
push
xchg
dec
or
push
push
lcall
adc
jp
xor
sti
adc
aam
stos
int
scas
lret
fisubrs
xor
stos
xlat
roll
rcl
mov
inc
inc
xchg
add
add
orl
addb
ljmp
mov
pop
xchg
pop
or
add
in
or
and
mov
lods
dec
cmp
mov
sub
lds
rcrb
or
jno
int3
pop
xchg
lret
cwtl
je
test
jo
rorl
mulb
and
loop
ret
push
ret
test
jb
xchg
dec
inc
rcrb
inc
push
mov
repz
push
jecxz
mov
pop
sbb
lods
mov
push
mov
pusha
dec
sub
push
arpl
fsubl
lds
ret
into
cmp
or
repz
popl
addr16
dec
fcomp
insb
pop
psrad
iret
inc
arpl
pop
mov
xchg
dec
ja
popf
jns
insl
mov
out
push
scas
pushf
and
sbb
out
inc
lahf
movsbl
addr16
cwtl
dec
cmp
ror
add
leave
ret
iret
int
rcl
or
or
inc
subl
lods
jnp
mov
mov
jnp
mov
ljmp
int3
lock
roll
or
out
sbb
pop
mov
inc
roll
xchg
pop
inc
sub
mov
ret
pop
mov
into
pusha
in
sahf
sub
sti
in
inc
adc
mov
xchg
sub
fcmove
gs
iret
xor
aaa
dec
inc
xchg
and
and
adc
mov
adc
mov
cli
cmp
lock
pop
rcrl
sub
cltd
ffree
scas
or
in
inc
cmpsl
mov
ss
fiadds
pop
mov
cmpsb
mov
ficompl
int
and
or
dec
int
add
faddp
faddp
xor
mov
call
addb
push
push
dec
test
and
pop
jge
xchg
mov
mov
popa
out
les
fsubl
test
xchg
push
add
sbb
mov
sub
and
out
xor
leave
sbb
push
into
enter
jo
mov
pop
cmpsl
xor
lret
jle
adc
faddl
adcb
fcom
push
xchg
pusha
adc
pop
cmc
dec
push
adc
les
mov
iret
lds
popf
push
push
inc
cmc
inc
das
inc
push
sbb
ret
dec
or
adc
pop
inc
rorl
dec
shll
dec
sbb
inc
dec
mov
int
mov
ret
lock
xor
xchg
dec
dec
push
imul
into
popa
push
inc
ljmp
stos
cmovb
fidivrs
loopne
dec
add
or
loope
cmp
popf
push
ret
push
lcall
or
jns
and
lret
rcrl
pop
roll
ret
xchg
sbb
jbe
sub
mov
ljmp
pop
dec
dec
pop
xchg
aam
mov
bts
mov
xchg
std
and
es
sub
lods
cmpsl
arpl
sub
fistpl
push
fisttps
lcall
idiv
jbe
mov
cmpsl
loopne
mov
sahf
jge
ret
into
cmc
dec
outsl
cli
pusha
inc
fidivrl
arpl
xchg
dec
or
mov
push
sub
push
pop
hlt
popf
pop
cmc
sbb
push
or
xor
adc
movsb
jae
xchg
add
mov
push
mov
sarb
loope
push
add
fistl
sub
add
aam
rcll
out
cwtl
jmp
push
stos
fcoml
adc
add
hlt
jecxz
lret
daa
lcall
cmp
incl
scas
add
mov
mov
cmp
cmp
sbbb
or
data16
pop
pop
pop
out
push
jne
icebp
loop
and
mov
mov
cmpsb
hlt
inc
push
leave
in
enter
mov
jae
fucomip
repnz
and
test
enter
adc
outsb
jl
sub
loop
mov
js
cld
roll
mov
xchg
enter
mov
cli
mov
loopne
sbb
mov
inc
sub
adc
jmp
xchg
imul
inc
mov
inc
aam
or
fbstp
movsb
outsb
jne
jmp
inc
mov
cmc
sub
xor
xchg
inc
pop
out
inc
les
mov
popf
mov
ret
add
addr16
adc
stc
out
add
jmp
jmp
pop
or
inc
or
cltd
inc
push
cli
mul
add
adc
es
loop
add
and
dec
fs
fcmovb
movsb
xchg
sbbl
les
inc
add
sub
pop
mov
push
cmp
and
jmp
cmp
fisubs
jle
into
ljmp
lds
shrb
inc
inc
test
mov
xchg
cltd
cmp
into
mov
mov
and
ljmp
stc
mov
xchg
inc
jbe
push
lret
testb
mov
add
pop
lods
testb
popa
jp
or
inc
or
push
xchg
addr16
aas
loop
sub
mov
push
ret
inc
test
xchg
or
lcall
mov
bound
fistpll
mov
cmpsb
gs
ret
imul
mov
or
push
ret
pop
ja
push
lea
jmp
out
pop
fldcw
add
ffreep
push
ret
adc
and
nop
bound
popa
add
dec
inc
adc
rorb
add
aam
into
xchg
or
inc
mov
aas
cs
insl
cltd
loopne
dec
jnp
add
pop
shl
inc
adc
mov
aam
and
xchg
xchg
jae
pop
hlt
test
ljmp
push
push
lret
insl
cmpsb
adc
push
inc
dec
and
mov
wbinvd
jbe
xor
push
pop
inc
jge
mov
push
insb
add
popa
xor
out
lds
stos
cli
pop
pusha
mov
stos
popf
gs
push
inc
stos
sbb
mov
sbb
popf
dec
xchg
sub
xor
xchg
fs
cmp
xchg
pop
mov
cmc
xadd
jg
leave
and
mov
mov
int
lods
push
mov
push
xchg
xor
pop
cmp
lods
incl
les
ret
inc
add
fisubs
mov
ret
sbb
sbb
insl
mov
mov
push
push
push
push
cmp
sbb
cmp
insb
sbb
hlt
sbb
mov
jmp
fs
loop
push
sbb
mov
sub
sub
fmulp
dec
cmp
and
punpckldq
xchg
faddl
popf
add
lret
addr16
adc
repnz
mov
int3
aam
lods
fs
add
cltd
lock
cmpsb
push
clc
test
dec
out
frstor
scas
and
dec
loop
imul
inc
jp
rorl
fucomp
mov
xchg
dec
repnz
push
scas
popa
push
ficompl
adc
ss
je
xchg
sub
jecxz
add
or
divl
lds
or
gs
fdivrs
sbb
sbb
push
push
imul
and
xchg
lods
mov
or
inc
stos
sarb
fldt
mov
popa
cli
mov
enter
mov
ror
dec
icebp
insl
ret
mov
callw
push
leave
xlat
pushf
push
rolb
jl
cmp
add
cmpsl
push
sbb
test
pop
ret
mov
dec
pop
mov
pusha
inc
jns
add
xor
mov
in
push
cmovb
xlat
das
push
int
sub
fldenv
inc
jo
and
mov
and
add
mov
inc
mov
cmpsb
test
push
bt
sahf
leave
in
fmuls
mov
fldl
cmpsl
inc
aaa
jmp
daa
push
xchg
inc
je
inc
mov
push
stc
push
ret
cmc
inc
call
out
adc
aas
mov
lea
dec
repnz
and
push
out
pushf
xchg
lahf
popl
sti
nop
enter
adc
inc
adc
cmp
int3
clc
js
icebp
fsubr
lds
js
xor
fists
inc
adc
inc
test
sbb
lds
mov
repnz
mov
sub
inc
testb
jmp
dec
in
lods
pop
mov
in
pop
or
les
mov
add
jbe
or
mov
movsb
aas
insb
pop
sti
out
push
adc
aas
hlt
jno
inc
addr16
lds
je
sti
mov
xchg
xchg
shll
mov
inc
roll
xchg
ret
hlt
shrb
test
lcall
lcall
call
adc
mov
pushw
popf
out
mov
jge
inc
pushfw
and
push
out
push
jbe
fidivs
mov
adc
cmpsb
sahf
jb
movb
inc
inc
fs
xor
add
mov
lahf
pop
insb
inc
movb
mov
out
push
call
cmpsb
dec
filds
push
xor
in
mov
stos
aas
mov
xor
mov
icebp
jge
aas
js
in
and
mov
xchg
add
int3
push
in
sub
add
and
popa
add
sarb
iret
icebp
push
pushf
inc
leave
loopne
adc
insl
push
ret
leave
popa
xor
add
sub
add
add
pop
into
add
cmp
rorl
add
ret
cmp
and
lods
ret
cmpsb
and
mov
leave
lret
inc
pop
adc
mov
iret
sti
imul
icebp
pop
movsb
or
enter
out
fmulp
jb
and
sub
fbld
icebp
pusha
push
add
mov
test
lcall
adc
push
or
jb
xchg
pop
movsb
or
mov
ret
push
jmp
push
mov
inc
and
sub
mov
inc
addr16
rolb
inc
pop
push
sbbb
out
adc
mov
adc
sbb
fiadds
inc
cmpsb
clc
icebp
xor
cmp
sub
inc
repnz
repz
call
jb
imul
push
hlt
mov
jno
hlt
add
fs
mov
push
shlb
into
adc
out
mov
xchg
push
popl
icebp
sbb
pop
inc
into
or
push
test
or
adc
mov
xlat
repnz
sbb
ljmp
cmc
lock
xor
lret
fimuls
roll
fimuls
mov
inc
dec
or
xlat
mov
mov
cmc
mov
fidivs
push
dec
xchg
sbb
dec
in
xchg
mov
fidivl
idivb
xor
int
test
iret
sbb
pusha
push
dec
out
test
jno
inc
xchg
je
mov
sub
push
adc
nop
inc
jae
add
sbb
in
and
push
and
andb
mov
ret
daa
cmpsb
inc
dec
cmc
aas
cmovs
pop
push
fsubl
jmp
lock
push
jge
movsb
dec
inc
lret
xchg
add
pusha
pop
xor
sub
lcall
iret
lret
test
es
iret
sbbb
inc
fiadds
mov
and
add
lods
pop
lea
sbb
dec
in
push
test
scas
sti
mov
cmp
aam
in
rol
mov
or
push
mov
loopne
cwtl
pusha
stos
loop
cmp
sub
shl
and
push
sbbl
cmc
mov
in
jle
into
push
out
pop
push
je
xor
dec
pop
sbb
mov
inc
inc
sar
in
mov
push
inc
push
push
sub
jne
push
mov
dec
and
rclb
push
cmpsb
jp
or
les
push
je
sti
std
incb
mov
xlat
jne
inc
sub
mov
sbb
mov
dec
xor
add
jno
push
adc
mov
dec
sub
adc
pop
fs
push
pop
inc
mov
adc
and
jb
lret
es
out
jne
orl
xlat
and
dec
push
arpl
hlt
shll
arpl
pop
mov
jne
sahf
mov
cs
std
mov
aad
add
fbstp
and
dec
shll
jl
sbb
inc
mov
cmp
inc
lret
cltd
xor
outsl
mov
xchg
popa
and
push
shl
xor
inc
daa
xor
dec
imul
fmul
xchg
sbb
aas
sbb
add
fwait
mov
jnp
or
dec
fs
shll
into
cmpsb
mov
push
mov
mov
ret
loopne
ss
clc
pusha
in
jbe
lret
lds
and
test
aas
neg
or
xchg
ss
rorb
xchg
lret
cmpsl
int
mov
aad
arpl
out
loop
ret
mov
dec
inc
jecxz
mov
lret
jge
cltd
cmp
xor
inc
loop
mov
add
push
lods
das
lret
dec
or
clc
and
mov
add
sbbb
push
les
bound
mov
mov
pop
stc
inc
sub
add
mov
or
aas
jge
xlat
sbbl
out
out
lahf
out
cmpsl
hlt
jle
jne
pop
push
mov
sbb
das
fstpt
repnz
enter
sahf
fbld
data16
clc
loop
imul
fisubs
inc
xchg
inc
sbb
mov
add
pop
mov
xor
in
mov
lods
movsb
cli
push
aad
aas
jne
xor
adc
out
mov
aam
sahf
push
stos
inc
cmp
test
clc
dec
stos
lret
std
insl
cmp
sahf
push
inc
lods
std
stos
hlt
lret
call
jecxz
sub
push
imul
and
mov
mov
xlat
push
xchg
stos
jne
insb
mov
push
dec
test
shrb
rclb
lods
jo
dec
loop
sub
insb
pop
lods
sub
add
mov
xor
add
push
fs
cmp
loop
iret
popf
insl
in
fbstp
aam
gs
xchg
pop
rolb
sub
lcall
aam
or
pop
mov
inc
xor
inc
ret
xchg
inc
in
sub
pop
lds
stos
pop
popa
mov
pop
sbb
add
popl
push
sub
popa
arpl
pushf
mov
pop
inc
iret
test
into
or
add
adc
ja
xchg
mov
out
dec
out
mov
jbe
lods
aaa
sbb
mov
es
dec
shlb
in
sbb
cmp
push
rol
push
jecxz
xlat
lret
jl
adc
push
add
inc
stc
push
adc
nop
in
dec
pusha
mov
insl
cmp
and
push
lea
pop
or
cmc
sub
mov
jmp
testl
movsb
aas
sbb
sbb
jno
pop
inc
test
push
ds
and
lahf
in
mov
bound
mov
imul
clts
mov
fbld
into
or
push
ret
addr16
out
das
lds
dec
jne
mov
add
pusha
xchg
sub
lahf
jnp
sub
push
cltd
andl
sub
cmp
pop
sbb
dec
inc
pop
pusha
iret
pusha
sub
out
sub
repz
pusha
out
inc
imul
and
push
sub
inc
cmp
push
or
push
repnz
fimuls
jl
push
ja
rcll
movsl
test
rcrl
xchg
addr16
push
les
in
jge
lea
or
pop
push
and
push
in
decb
push
cmp
cmp
icebp
enter
push
lcall
ja
pushf
lahf
mov
cmp
outsb
jns
mov
mov
jo
insl
in
shll
and
sbb
int
fimuls
into
imul
mov
jae
iret
xlat
lock
add
dec
mov
ljmp
ja
outsl
xchg
xchg
mov
lods
xor
fldl
sub
in
dec
lret
ret
pop
mov
add
cmp
sbb
fs
inc
icebp
mov
sbb
jb
or
dec
push
pop
fwait
lock
jo
scas
push
cld
cpuid
pop
data16
mov
inc
jbe
and
ret
mov
push
imulb
jo
mov
in
dec
icebp
mov
test
jae
rolb
mov
loopne
add
cmp
jp
mov
xor
inc
cld
inc
inc
arpl
adc
scas
rcrb
xlat
shl
jle
shll
mov
outsb
jo
int
ficomps
out
push
push
mov
xchg
push
inc
mov
adc
aad
xchg
add
cmpsb
nop
shl
rcl
push
int
sbb
xor
jnp
pusha
pop
lds
add
adc
mov
xchg
inc
mov
repnz
dec
movsl
pop
jmpw
adc
fcmovnu
sbb
sbb
mov
aad
and
mov
sub
lret
aaa
divl
mov
push
lahf
xchg
shll
pop
and
shll
or
dec
scas
xchg
inc
cmp
jne
shll
aas
adc
mov
mov
lret
inc
xchg
mov
and
mov
mov
sbb
fiadds
mov
icebp
pusha
out
fidivl
dec
repnz
aaa
push
jp
inc
inc
cmp
add
sbb
sar
sbb
call
lea
mov
sbb
adc
jae
mov
cmpb
lret
lds
pop
cmp
repnz
xor
push
push
sbb
jae
mov
rolb
pop
mov
repnz
add
inc
xor
les
clc
mov
inc
cmpsb
or
dec
std
and
pop
push
jne
jnp
xor
jge
sbb
fidivl
outsb
inc
xchg
dec
dec
in
mov
sbb
pop
inc
inc
cmpsl
insw
nop
inc
or
popf
jl
insl
aaa
xchg
cwtl
repnz
aad
fbld
push
neg
jns
lea
inc
fsubrl
jl
cmpsb
mov
shl
outsb
iret
inc
inc
push
push
sbb
iret
fs
xchg
es
mov
stc
sahf
testl
ficoms
pop
testb
stos
xor
ds
sbb
mov
xor
dec
adc
movsl
fmulp
xor
aaa
lds
insl
pusha
mov
lods
popf
fdivrs
gs
xlat
mov
mov
test
sub
cmp
pinsrw
adc
rcl
pop
push
aaa
pop
sub
pusha
bnd
xchg
nop
xor
inc
adc
mov
cltd
pop
bound
inc
push
in
loopne
ret
cwtl
xorl
add
xchg
mov
orl
mov
lds
aam
xchg
pushf
lret
loop
inc
repnz
mov
fs
mov
loop
pushf
inc
xor
les
push
fmuls
add
ficoms
idivl
cli
xchg
mov
je
sub
add
xchg
gs
cmc
xor
sub
mov
push
or
push
test
and
jo
pop
lcall
push
sub
or
lcall
mov
mov
inc
pop
sub
daa
enter
mov
icebp
mov
xchg
out
xchg
cld
divl
jecxz
xchg
mov
hlt
rclb
data16
push
sahf
mov
sub
cltd
pop
add
mov
pusha
add
mov
adc
add
pcmpgtw
jbe
mov
cmp
xchg
push
shlb
aas
jnp
pop
lods
stc
fisubrs
xchg
repnz
lahf
popa
lret
or
out
inc
loop
add
leave
out
or
cmp
cmp
lcall
add
sarb
adc
stos
cmp
mov
cltd
jns
bound
mov
out
repnz
test
lock
lock
add
repz
test
ror
out
mov
mov
sti
push
scas
xorl
sub
ficoml
adc
jmp
bnd
rorl
xor
movsb
fsubrl
shll
imul
dec
sbb
aas
mov
cmpsb
jmp
fidivl
xchg
push
hlt
add
out
daa
iret
push
push
lahf
inc
adc
mov
shlb
xchg
mov
pushf
inc
xchg
cmpsb
aas
fadds
push
fwait
jge
jecxz
inc
pop
scas
mov
mov
lock
mov
xchg
addl
hlt
add
lcall
daa
push
and
pop
in
loop
sti
leave
sbb
fs
test
dec
les
jb
hlt
inc
mov
pop
jp
je
push
jns
lds
call
lahf
lods
xor
fwait
cmp
and
iret
into
push
rolb
or
push
pop
lods
aas
fistps
or
push
cs
fdivl
ljmp
call
repnz
das
loop,pt
in
push
cltd
inc
dec
inc
gs
mov
movsb
into
or
mov
push
push
out
out
into
in
mov
iret
ss
ret
cmpsl
dec
mov
in
popf
push
push
or
inc
mov
sbb
pop
ret
cld
mov
push
push
add
adc
js
mov
jg
and
jmp
ret
in
and
sub
imul
dec
test
dec
fildll
push
adc
and
movlps
cmc
popa
ret
into
repnz
and
rcll
in
push
inc
xchg
clc
fmull
fidivrs
push
scas
push
sbb
or
push
xchg
xlat
js
fcoms
aad
xchg
fwait
xchg
je
xchg
jb
fidivrs
pushf
sbb
mov
dec
inc
out
xchg
in
jmp
inc
push
nop
or
mov
cmp
fcmovnbe
xchg
sub
ja
push
push
ret
mov
xchg
sub
adc
xor
test
sbb
or
add
jl
out
repnz
leavew
dec
andb
call
jns
and
mov
sub
xchg
loopne
icebp
lcall
pop
imul
out
popf
insl
jl
out
sbb
push
xorl
jmp
sub
cmpsl
loop
pop
movd
ret
jmp
push
xchg
xchg
int3
out
ljmp
in
xor
sbb
cmpsl
enter
cmpl
ja
jecxz
dec
add
les
jnp
push
inc
add
imul
xchg
rorl
mov
movsl
mov
push
sahf
stos
fsub
adc
fmul
mov
inc
jno
mov
inc
push
adc
push
nop
dec
adc
je
inc
push
adc
sub
pop
cmp
imul
stos
inc
loop
aaa
addr16
and
mov
cmp
loope
cld
inc
addr16
inc
or
and
and
mov
sub
cmp
sub
adc
popf
icebp
insb
sarb
es
mov
jo
xchg
push
or
push
dec
mov
jmp
aas
aaa
sti
nop
fmull
hlt
fistpl
pop
leave
cli
insl
mov
dec
and
lret
enter
lods
dec
jb
mov
and
roll
movsl
gs
xchg
mov
cmp
or
pop
jo
mov
movsb
stos
daa
lret
sub
jns
or
xchg
fisubrs
lret
cld
cltd
push
xlat
jge
fwait
inc
lods
lods
pop
mov
cli
mov
movsl
mov
inc
lods
xor
push
lea
mov
mov
pushf
lods
outsl
test
loopne
dec
xor
dec
pop
xor
adc
popa
jo
int3
adc
cltd
cwtl
add
and
cli
mov
jo
lcall
cmp
leavew
les
jae
and
ror
xor
mov
dec
lret
ret
xor
and
mov
cmc
mov
or
mov
push
xor
mov
nop
ret
lods
mov
imul
sarb
nop
sub
jl
sub
dec
cmp
arpl
mov
cltd
ljmp
add
or
push
fcomps
push
push
push
movsb
cli
jbe
push
mov
ret
imull
xchg
adc
xlat
lahf
cmpsb
sub
fs
cld
addr16
jbe
ret
inc
or
xchg
out
mov
jge
jmp
sub
leave
mov
add
ret
clc
test
imul
jp
popf
or
mov
clc
pop
pop
cwtl
ret
fisubs
sub
inc
call
lea
mov
xor
xchg
mov
fistl
mov
in
pop
int
mov
in
lock
lcall
lret
push
es
mov
or
jns
xchg
lea
mov
ret
xchg
inc
mov
mov
and
inc
dec
pop
xlat
data16
lret
xchg
cmpsb
mov
xorb
push
dec
ja
jge
inc
popa
je
pop
ret
loop
stos
inc
cwtl
push
inc
icebp
fildl
repnz
dec
sbb
fcomip
mov
or
rorl
add
js
mov
ret
cmp
inc
fildl
push
orb
ret
ljmp
pop
jbe
sbb
sbb
lods
fdivr
jge
test
popa
pop
test
arpl
fidivs
adc
push
xchg
mov
test
sarl
movsb
icebp
ret
jg
daa
sub
push
imul
daa
js
enter
mov
xchg
std
repnz
mov
hlt
sub
or
inc
push
insb
inc
mov
shl
stos
xor
pop
sub
mov
iret
cmp
int3
jnp
sbb
sbb
dec
test
jb
inc
inc
push
pop
push
out
inc
test
and
in
call
js
outsl
adc
adc
loopne
mov
jecxz
adc
xchg
pop
xor
push
mov
icebp
adc
cmp
xchg
mov
mov
or
pop
out
mull
add
loopne
inc
xchg
pop
pop
push
xchg
xchg
sub
push
xchg
lods
lods
fsubrs
orl
int
jo
adc
lret
aad
std
loop
icebp
cli
add
add
lock
das
fimuls
dec
add
popa
loop
lcall
lods
add
adc
xchg
clc
std
ret
or
xor
adc
rolb
in
cmc
and
ret
add
xor
aas
push
jmp
sahf
int
orb
jbe
insb
repz
cmp
adc
ja
clc
adc
mov
xchg
notl
inc
subb
pop
push
add
into
jle
push
add
das
jno
pusha
cltd
inc
inc
call
ljmp
clc
out
sarl
add
scas
sar
pushf
cmpl
pusha
or
ja
mov
pop
pushf
popa
push
sub
jecxz
mov
add
mov
loop
xor
add
shr
lret
pop
pop
sbb
jge
push
pop
loop
cld
or
iret
cmp
adc
ret
js
repnz
je
dec
add
rorb
push
mov
inc
loop
mov
jbe
lret
fsubl
imul
sub
cmp
sbb
cmp
dec
in
inc
dec
fdiv
stos
aad
call
stos
andb
lds
shrl
push
lods
mov
push
repnz
adcl
lahf
cmp
and
add
push
and
xor
xor
dec
fists
fimuls
mov
jp
lsl
daa
jo
sahf
jno
andl
subl
outsl
pop
inc
mov
mov
jae
das
sub
jecxz
icebp
movsb
lods
rclb
sbb
jmp
inc
push
xlat
sub
sub
das
maskmovq
idiv
jae
or
push
inc
lds
xchg
lods
faddp
adc
cld
mov
in
scas
cmp
decb
cld
dec
bound
cmp
sub
in
or
jge
gs
cmpsl
pop
mov
icebp
and
dec
xchg
add
or
adc
mov
loop
dec
loop
icebp
jno
xor
pop
clts
aaa
fisubl
and
add
out
adc
ret
add
les
aas
xorb
fld
jo
xlat
push
jns
mov
cmp
inc
in
loopne
aas
cmp
mov
or
test
or
aas
push
xor
outsb
dec
jne
dec
push
or
jae
sbb
arpl
icebp
mov
fcmovnbe
jmp
mov
lds
inc
dec
inc
inc
loopne
mov
inc
inc
mov
adc
mov
push
add
enter
cmc
push
pop
pop
leave
inc
mov
shll
push
jne
mov
push
subl
scas
leave
sub
mov
xchg
push
aaa
inc
ficoms
ljmp
and
adc
out
cmpsb
out
les
pop
add
ja
repnz
aad
mov
adc
nop
ss
or
shld
mov
push
cmp
add
cmovnp
repz
cwtl
mov
jmp
dec
fs
cmp
inc
pop
dec
jmp
imul
popa
lods
push
pop
sbb
int3
in
enter
push
jns
test
movsb
insb
test
jp,pt
in
mov
mov
xor
add
iret
or
lds
and
addr16
inc
xor
std
lret
xor
push
test
test
mov
xchg
push
mov
mov
cwtl
out
and
inc
arpl
ret
pop
inc
pop
call
fnstenv
inc
xor
int3
or
rorb
mov
sti
sub
ficomps
aas
fs
cmp
inc
sti
pop
add
ret
cmp
cmp
loopne
out
lea
arpl
inc
inc
lds
sti
aas
es
int
lcall
dec
hlt
popa
loop
ror
push
subb
pop
push
pop
scas
movsl
dec
and
bound
mov
lcall
sub
ret
nop
aaa
mov
pop
sbb
aaa
push
mov
aas
rol
les
pop
cmpsl
fisttps
xor
xor
mov
out
jo
fadds
jl
mov
sbb
loopne
dec
lea
js
push
inc
rcrl
add
shrl
and
in
jecxz
jle
jae
loopne
xchg
and
je
bound
jbe
xchg
repz
inc
scas
dec
push
decb
jno
imul
mov
daa
add
dec
push
bound
dec
or
cli
rorl
add
rclb
loop
lret
mov
xchg
push
jecxz
dec
in
imul
ja
cmp
sub
lock
push
fstps
psllw
mov
leave
addb
add
ja
sub
fnstsw
and
aad
inc
js
gs
shll
mov
jb
pop
cmp
push
push
mov
or
lcall
dec
out
cmp
aaa
lods
push
inc
ficompl
mov
je
js
shlb
cmp
shl
adc
pusha
cmp
jae
pop
or
jbe
cmpsb
inc
inc
dec
mov
stc
cmpsb
inc
mov
pop
mov
sub
dec
push
jbe
rclb
push
or
outsb
xchg
int
loopne
jne
ret
popf
pop
fadd
inc
fiadds
add
push
ljmp
lods
sbbb
or
lods
cli
stc
adc
in
arpl
push
je
popw
or
push
test
dec
jge
xchg
fwait
jmp
out
stos
adc
ss
xor
or
inc
pop
out
adc
or
ljmp
adcb
mov
sub
adc
fisttps
xchg
mov
insb
sub
mov
ret
cmovl
sub
call
jmp
sbb
mov
pushf
mov
xchg
inc
and
testl
cmp
sub
pop
push
insb
jne
mov
dec
roll
pop
movsb
stos
ss
jp
adc
push
xchg
stos
mov
insl
sbb
mulb
push
insl
jns
xchg
cmp
or
movsb
cmp
jb
xchg
lea
push
cltd
lret
inc
incl
sub
cld
push
test
xlat
repnz
mov
lcall
adc
aas
jge
or
test
pop
xchg
or
lret
add
adc
les
aad
push
daa
adc
filds
jg
dec
xor
shlb
and
ret
repnz
out
inc
leave
xchg
push
fnstenv
sbb
adc
nop
fistpll
int3
data16
jl
aad
insb
push
andb
inc
xor
add
or
insl
and
call
incl
pop
shr
sub
insb
mov
flds
in
lret
lahf
mov
mov
les
mov
dec
jecxz
mov
popa
hlt
adc
or
pop
stc
repz
cs
sub
inc
ret
xchg
jle
cli
insb
nop
icebp
or
inc
imul
stos
cmc
pop
ficoml
in
lret
pop
shrl
push
xchg
leave
daa
fiaddl
out
repnz
inc
repz
aaa
xchg
ja
push
sub
scas
push
scas
mov
xor
inc
and
repnz
inc
jo
sub
push
sub
outsb
sbb
fisttps
fbld
adcb
xchg
and
pushf
fidivl
jo
fistps
jecxz
push
insb
call
and
aaa
pop
lret
jo
push
leave
pop
aas
xchg
cmp
and
fs
nop
mov
repz
xor
sahf
loop
fcoms
mov
loope
sub
mov
jge
dec
incb
xorl
fcoms
sub
add
jne
and
mov
outsl
mov
push
xor
les
jecxz
push
push
add
mov
mov
xor
push
mov
repnz
inc
outsb
and
inc
adc
nop
cmp
outsl
scas
shlb
aaa
mov
xchg
scas
add
sbb
and
jecxz
mov
cmpb
mov
xchg
in
repz
mov
aad
in
pop
xor
rcrb
pusha
out
lcall
sbb
mov
xor
rcll
adc
and
cmc
pop
imul
data16
ret
inc
stc
andb
bndldx
push
add
in
push
push
xchg
mov
jae
xchg
mov
jge
jae
bound
sbb
push
pop
xor
inc
stos
pop
not
jbe
push
jae
mov
fcoms
add
ja
call
fmull
call
mov
out
or
adc
rorb
xchg
in
jp
out
xchg
addr16
ret
cmp
fldt
loope
mov
repnz
pop
adc
cli
pop
cli
and
adc
dec
jecxz
jae
mov
mov
in
dec
mov
out
xor
add
stos
int
lret
lret
add
repz
fs
push
mov
inc
bnd
sub
sbb
test
mov
out
jbe
lcall
pinsrw
in
cmp
xchg
cmp
sbb
mov
add
xchg
ret
pop
mov
ror
push
jmp
xchg
and
out
inc
mov
iret
push
jp
mov
orl
cli
lods
mov
lahf
or
dec
pusha
pop
les
cmp
decl
loopne
inc
inc
cmpsb
sub
cmp
mov
loop
int
push
call
inc
ds
pop
movsl
je
mov
testl
cmpsl
fiadds
inc
insl
jle
je
mov
dec
pop
repnz
add
sub
addb
ljmp
loopne
mov
or
gs
leave
mov
xor
mov
inc
adc
shrl
sti
nop
mov
push
leave
imul
xor
pop
xchg
cli
fidivl
and
pop
mov
loop
inc
pusha
icebp
ja
loope
adc
cmc
sbb
add
or
dec
xchg
dec
jne
xchg
fs
ret
ret
bound
gs
lret
mov
add
test
adc
fiadds
popf
outsb
pop
dec
sub
push
push
sahf
inc
lret
xchg
lds
pop
xchg
in
lds
aam
jbe
adc
rol
dec
fdivl
ficoms
shlb
sbb
shl
mov
and
cmc
les
add
insb
mov
push
lods
cmc
pop
popf
push
cmpsl
jns
xor
imul
jmp
leave
lret
sub
cmpsb
dec
test
cmp
mov
push
and
subl
lret
push
arpl
inc
repz
dec
inc
jmp
and
inc
shll
sbb
ret
aad
mov
sbb
add
mov
xor
es
rcrl
mov
ss
dec
ds
xor
ljmp
or
xor
sub
xor
clc
xchg
xor
shll
xchg
test
sbb
insb
xor
icebp
out
pop
sub
sbb
inc
and
mov
bound
ret
leave
popa
ss
add
dec
inc
ficoms
mov
jb
pop
add
jmp
sbb
cmc
dec
in
ljmp
jns
mov
xor
lret
repnz
or
push
dec
and
dec
push
pushf
hlt
arpl
jmp
and
dec
rorl
add
in
mov
ret
inc
loop
lods
mov
in
xchg
call
in
fbstp
or
mov
mov
arpl
gs
and
fisttpll
add
outsb
sarl
sub
mov
clc
push
mov
hlt
les
addb
movl
dec
cmc
in
sub
push
in
hlt
sbb
cmpsb
insl
mov
mov
bound
inc
xor
sub
cwtl
addr16
repz
mov
gs
shrb
out
xlat
add
sub
mov
mov
add
enter
loop
lahf
daa
lcall
add
fimuls
hlt
cmp
shl
mov
mov
push
fsub
sbb
cmpsb
add
push
push
xor
test
push
movsl
add
loop
lods
into
rcll
dec
ficoms
repnz
rolb
iret
or
repnz
sub
insb
pop
mov
add
es
rorb
xchg
arpl
icebp
stc
shrl
call
jge
jae
les
push
shll
mov
in
aaa
xor
shll
sub
fsubs
adc
leave
rolb
push
addl
dec
jg
popa
dec
icebp
push
decb
ljmp
sbb
movsb
or
cli
push
xchg
push
lea
stc
push
mov
sbb
mov
xor
stos
in
scas
add
jo
leave
cs
aam
in
bound
js
sub
lret
and
ret
inc
push
xchg
in
add
loopne
jae
lds
jne
test
mov
repnz
dec
sbb
lahf
in
adc
ficomps
call
xchg
and
or
adcb
jg
mov
or
insb
ficoms
popa
lcall
pop
cld
add
and
pop
xor
lret
push
jmp
popl
aad
xor
jmp
ret
cld
pop
or
fbld
ficomps
jl
mov
push
cmp
hlt
xchg
bound
sbb
and
cmp
ljmp
and
rolb
jb
data16
mov
int3
xchg
test
inc
lods
mov
push
mov
pop
pushf
orl
out
cli
ret
movsl
mov
or
je
aam
pop
incl
add
adc
fisubrs
cs
test
inc
and
adc
pop
inc
or
test
push
ficomps
lret
popa
ret
lods
ss
arpl
ret
xor
dec
sub
xchg
fnstcw
mov
mov
leave
or
add
cmp
rorl
and
lds
ror
push
mov
scas
xchg
ret
pop
pop
unpckhps
jb
push
shrl
cld
adc
cmc
inc
shl
roll
lds
into
out
xor
loop
add
movsb
or
fcmove
rolb
orl
in
movsl
jo
das
pop
rcll
sti
jne
leave
mov
sub
int3
lock
jmp
in
aas
pusha
mov
jb
push
add
pop
dec
push
iret
mov
test
xchg
push
sbb
sub
aas
pop
dec
jmp
mov
movsl
sub
repnz
fisttps
aas
inc
lahf
icebp
std
push
xchg
mov
pop
fnstenv
les
sub
clc
jns
mov
push
xor
push
ljmp
mov
pop
or
pop
inc
pop
movsb
dec
cmp
pop
fs
mov
xor
dec
ret
xor
mov
repnz
aas
push
sar
mov
jmp
sbb
xchg
cmp
aas
repnz
in
sub
int
fisubl
insl
xor
or
push
adc
mov
push
sbb
inc
or
imul
push
fldcw
js
out
dec
in
in
repnz
mov
mov
lods
mov
xor
jge
imul
or
xchg
bound
cmp
dec
in
push
cmpsl
and
cltd
loope
and
adc
add
push
xor
imul
mov
insb
gs
adc
out
icebp
inc
sub
and
or
sub
mov
out
insl
outsl
inc
dec
cmpsb
repnz
mov
add
and
jp
and
sbb
push
repnz
sbb
cmc
insb
sbb
or
and
sub
ret
push
add
push
cltd
cmp
or
inc
inc
mov
sub
push
loop
cli
sub
fimuls
ljmp
and
int
icebp
repnz
ret
xor
stc
lds
fsubs
test
cmc
data16
fiadds
and
mov
jmp
in
aad
stc
push
mov
movsl
dec
dec
js
dec
test
clc
ja
and
push
xlat
jo
mov
add
lea
sbb
mov
sti
xlat
std
repz
pop
dec
ficoms
sbb
scas
fdivrs
negb
xchg
lcall
imul
fisubrs
sti
cmpsl
xchg
xor
jb
pop
test
pop
out
sub
pusha
stos
fistpl
xor
scas
sub
dec
fstpl
loop
fmulp
xchg
pusha
ss
nop
dec
shrb
out
pop
jns
imul
lea
xor
ret
lea
xchg
mov
dec
inc
add
pop
andl
mov
or
jo
iret
repz
loop
adc
loope
into
fxch
gs
insb
in
bound
imul
push
xor
add
les
ud2
add
scas
adc
dec
pop
ss
or
arpl
in
add
frstor
mov
xchg
jae
daa
bound
jnp
loopne
je
or
mov
dec
std
aaa
dec
add
add
jmp
pop
push
push
fcompl
loop
jnp
repz
ret
das
jnp
add
push
or
shl
ret
clc
mov
add
cmp
int3
add
imul
jae
mov
mov
cld
lea
pop
pop
adc
movsl
movq
out
pusha
jb
and
loopne
jb
js
imul
sub
and
push
in
sahf
jecxz
pop
push
nop
inc
loope
fimuls
insl
adc
dec
jno
jns
xchg
fdivrp
daa
notb
push
rcrl
and
sbb
call
daa
adc
mov
call
push
push
jne
test
pusha
rorb
dec
jne
jle
fldt
ret
dec
clc
push
loopne
lret
sbb
add
jmp
movsl
or
ljmp
out
jl
roll
in
jge
setl
jecxz
faddp
dec
in
subl
fisttpl
sub
pop
add
dec
push
xor
mov
mov
cmpsl
jmp
bound
in
dec
xor
ljmp
mov
insb
fs
lock
adc
fs
mov
mov
pop
hlt
cmpsl
ret
bound
fadds
cmp
dec
or
sub
add
shlb
movsl
enter
pushf
movsl
pop
or
add
stos
inc
sub
loope
adc
movl
cmp
jmp
testl
fwait
xor
adc
sahf
lsl
sbb
sar
add
sub
mov
adc
addl
popf
and
inc
add
add
mov
jle
inc
add
push
cmp
into
aam
sarl
call
dec
xor
pop
jecxz
dec
rcrb
dec
ds
shrb
ret
dec
cmp
push
gs
xchg
sbb
xor
lahf
inc
lods
adcb
cmp
ret
sub
jae
cmpsb
xchg
jmp
and
sti
mov
jmp
cltd
aam
jge
ss
push
loopne
add
lods
loop
lret
nop
sub
ret
fldt
push
add
mov
push
lret
outsb
xchg
int
adc
test
bt
int3
test
pop
pop
lods
add
call
sbb
sub
fstpl
shll
mov
push
movsb
mov
fmulp
data16
js
mov
popa
add
ret
push
filds
sahf
jg
or
pop
loop
xor
adc
pop
jp
xor
or
repz
push
arpl
daa
js
inc
xlat
and
lea
push
mov
mov
imul
mov
dec
jo
lcall
push
jecxz
add
rcrb
dec
inc
data16
push
adc
mov
jmp
cmp
fucomip
mov
shrb
push
adc
addb
call
lds
jno
iret
sub
popa
cmp
mov
push
fucomp
dec
cmpsl
out
data16
and
lea
sar
push
cltd
xchg
js
jl
into
test
mov
ss
fstp
jae
cmc
andl
xchg
lcall
sub
or
out
push
repz
cwtl
jecxz
push
xor
dec
ss
and
inc
lods
repnz
and
or
shll
or
mov
sbb
lock
push
arpl
mov
pushf
mov
shll
vpcmpeqb
ljmp
ljmp
es
lock
mov
mov
pop
mov
pushf
lret
lods
push
imul
in
adc
pop
fisubl
pushf
outsl
ret
mov
repz
adc
dec
les
enter
lahf
jge
das
inc
add
ret
fiadds
fildl
fwait
push
dec
rcrb
in
cmp
shll
mov
in
fs
bound
push
imul
movl
xor
jmp
xor
mov
push
outsl
addr16
push
inc
test
cmp
shrb
lret
hlt
jmp
push
jmp
call
add
test
or
jge
pop
add
sub
call
lds
into
out
xchg
inc
dec
fstpt
insb
mov
dec
or
push
push
cmp
fildll
sub
notl
outsb
mov
out
mov
testb
adc
xchg
sarl
cmp
cmp
mov
out
inc
pop
rclb
add
ret
or
dec
in
into
popa
cmp
paddusb
mov
add
inc
ss
inc
decl
inc
xchg
dec
jecxz
loop
push
int3
jecxz
fs
movsl
mov
lds
testb
setbe
adc
xlat
pop
adc
popa
in
add
pop
xor
xchg
aam
dec
sahf
cmp
xchg
sub
notl
add
lods
sbb
dec
push
rolb
loop
addr16
add
fidivrs
xacquire
enter
inc
loopne
push
or
std
nop
adc
mov
mov
out
stc
push
or
jae
cli
call
sub
push
lret
jecxz
inc
in
fs
push
dec
lret
fmuls
mov
jmp
add
bnd
push
cmp
push
stc
jecxz
inc
ss
sbb
push
jg
sbb
xor
push
or
dec
adc
pop
fs
sbb
jecxz
in
jge
rol
jecxz
in
add
popa
mov
dec
ret
push
cwtl
stc
push
jb
out
call
lods
or
adc
dec
mov
dec
lea
or
jae
dec
sbb
mov
stos
sbb
xchg
jne
xor
inc
stos
fmuls
aad
repnz
push
cld
xor
push
popa
jns
in
mov
sub
test
lods
push
or
fmulp
jp
xchg
lods
addr16
add
ficomps
js
inc
mov
insb
and
pinsrw
pop
xor
fldl
xchg
sub
add
xchg
std
sahf
mov
test
imul
jmp
push
or
jbe
cmp
lods
sti
pop
andb
fstl
ljmp
popf
out
aad
icebp
rclb
inc
fstpt
sbb
lods
icebp
or
push
or
jle
das
jecxz
push
dec
jecxz
ficoml
mov
in
out
lret
pop
test
and
rcr
rorb
andl
fidivrl
sub
or
in
mov
inc
pusha
mov
negb
and
add
dec
xchg
mov
inc
fucom
mov
mov
popf
add
lock
popa
xor
or
pop
cmp
pop
imul
clc
notl
inc
mov
pop
sub
adc
sub
add
push
pop
adc
sbb
mov
mov
gs
and
adc
nop
iret
insl
lock
mov
out
ret
push
out
stos
jns
jmp
lcall
addb
add
push
or
xor
fcmovb
pusha
or
call
dec
repnz
sub
jb
push
push
call
ret
mov
cld
jmp
lea
mov
jo
fs
or
xor
sub
adc
lret
fwait
xchg
cmp
jecxz
xor
aam
jne
mov
jge
or
sub
scas
inc
push
sbb
sbb
insb
ja
or
pop
push
xor
sbb
ror
call
mov
lods
jp
inc
imul
fisttpl
sbb
and
pop
mov
repz
dec
add
loop
inc
fmull
cmpsl
inc
inc
or
in
sub
filds
add
shl
sbbb
and
mull
call
mov
sti
fdivr
push
in
mov
jbe
lds
arpl
push
mov
xchg
lahf
addb
mov
fsubl
repnz
ret
int
xchg
xor
mov
dec
lods
adc
jne
jns
dec
jge
jp
xchg
inc
arpl
add
push
fisubrs
inc
pop
and
testb
and
pop
jb
aam
cmpsb
cmpsb
adc
iret
jbe
push
lret
stc
mov
mov
adcb
leave
inc
repnz
pop
xor
xlat
dec
inc
leave
daa
lret
jecxz
dec
add
rcll
push
inc
loop
pop
xor
sub
jmp
adc
cwtl
and
das
repnz
loopne
adc
and
add
add
xor
add
loop
out
adc
mov
push
test
bound
sbb
mov
sbb
push
imul
inc
jae
fs
jmp
call
loop
xorb
mov
into
mov
sbbb
inc
cmc
daa
shrl
pop
mov
out
adc
test
mov
fmull
inc
and
or
lds
mov
out
push
mov
cs
leave
inc
ret
sub
dec
or
xchg
push
xor
shlb
imul
insl
push
test
loopne
cmc
inc
leave
call
test
inc
rcll
stgi
lahf
leave
leave
inc
aas
inc
scas
or
add
xrelease
or
lret
push
stos
jne
and
adc
pop
mov
rol
nop
int3
aas
dec
push
and
sbb
pop
xchg
cmp
push
add
or
enter
je
lods
stc
ror
ja
jae
scas
ja
sahf
popf
sub
fbld
xor
movsb
inc
inc
or
sub
sarl
sub
rolb
decb
inc
jb
lret
xchg
mov
mov
jmp
jno
jo
imul
add
ror
jmp
pop
loope
es
mov
pop
or
push
xchg
xorb
inc
mov
sub
sub
test
add
ficoms
imul
pop
in
mov
ficoml
repnz
rcrl
ret
into
add
lds
sub
add
out
jge
les
sub
les
adc
cmp
adc
mov
mov
dec
xchg
cmp
repz
idiv
or
aas
sbb
push
xor
mov
mov
aad
inc
mov
sub
pop
icebp
mov
pop
mov
jo
shrl
push
or
shrb
pop
and
inc
lods
and
adc
popf
push
lods
or
gs
jbe
cmp
mov
js
into
add
ret
dec
dec
test
sti
loop
fidivrl
mov
cmp
fcmovbe
mov
lods
add
add
xorl
arpl
aaa
dec
sbb
cmpsl
mov
cwtl
jbe
pusha
cmpsb
clc
sbb
aad
es
std
fsubrl
dec
sbb
pop
and
fld
or
stc
ffree
push
and
out
enter
imull
bound
shrb
pop
out
mov
mov
or
xchg
push
ret
mov
push
adc
jmp
insb
decb
inc
in
push
aas
mov
in
ss
jmp
movsl
scas
not
or
push
callw
adc
sbb
xchg
and
mov
jb
ret
inc
nop
sbb
jae
or
mov
fldcw
jo
pop
rcll
aad
rcr
pushf
add
addb
ret
sbb
dec
outsb
aas
jae
loopne
xchg
cmp
mov
cmp
adc
aaa
aam
mov
xchg
pop
push
add
fnstcw
lods
pop
push
mov
stos
fcoms
rol
les
mov
jmp
dec
dec
sti
or
jb
call
hlt
cs
aas
add
mov
add
clc
jle
dec
mov
inc
leave
loopne
aad
and
push
push
std
add
loope
sub
cld
xchg
or
adc
das
jg
adc
jecxz
xchg
push
jo
or
adc
test
push
push
inc
jle
jae
mov
inc
fisubrs
jae
sbb
mov
pop
lret
loopne
cmc
aas
clc
repz
sub
and
aas
ret
jb
push
insb
xchg
xchg
pusha
std
jecxz
adc
pop
adc
mov
mov
xchg
lgs
mov
enter
iret
out
dec
ret
lret
outsb
inc
lea
sub
sub
mov
mov
cmp
mov
loop
repz
aaa
dec
clc
std
and
pop
mov
or
inc
mov
lret
leave
and
pop
loop
mov
pop
out
loop
sbb
xchg
jecxz
hlt
lock
outsb
and
push
in
mov
or
mov
pusha
loop
call
out
mov
jecxz
fcmovnu
rcl
je
xchg
ret
cmp
jmp
repz
or
pop
addr16
shr
hlt
out
loop
add
inc
jp
insb
aas
pop
lock
pop
loop
out
xchg
dec
insb
sub
ja
or
jne
lahf
inc
jnp
ss
mov
cmp
inc
fisubs
das
lcall
mov
xlat
xorl
xchg
fidivrl
mov
ret
xchg
xor
int3
lahf
into
aad
lods
jecxz
sub
inc
in
adc
push
lds
push
and
outsl
xchg
pop
sbb
ret
mov
jo
jge
mov
push
mov
aas
cmp
mov
fmuls
imul
pop
mov
inc
in
inc
imul
push
ret
jl
ret
adc
imul
or
mov
imul
jae
mov
int
inc
repnz
iret
daa
xor
dec
jae
mov
shr
pop
push
add
adc
jne
shll
insl
mov
arpl
rol
sub
adc
inc
jae
push
das
mov
leave
sbb
addb
push
jno
adc
pop
pop
cmpsl
shll
pushf
cmpsl
mov
inc
std
in
roll
jb
rcrl
hlt
call
push
jno
mov
lret
sub
ljmp
inc
addr16
shll
xchg
cltd
xchg
push
inc
push
stos
lret
ret
ret
adc
mov
inc
inc
xchg
jmp
push
inc
imul
jmp
dec
mov
iret
pop
ss
jb
mov
sbb
xchg
jl
jecxz
mov
repz
push
sub
inc
dec
inc
inc
lahf
add
je
test
push
cmpsl
int
jg
mov
lret
lret
inc
sbb
fcmove
in
out
inc
dec
xchg
jg
aam
xchg
push
rorl
xor
into
clc
mov
loop
subb
mov
roll
rol
inc
repnz
daa
ret
cmp
and
sti
lea
pop
imul
mov
mov
mov
ret
sub
std
outsb
jl
jl
mov
dec
cwtl
paddsw
add
push
aaa
fadd
push
xchg
mov
jae
roll
movsb
shll
ret
scas
mov
mov
lods
lock
push
add
cwtl
shrl
add
ror
jae
lret
mov
push
out
cld
data16
data16
icebp
pop
dec
mov
cmpsl
pop
add
lret
add
lods
lods
and
push
loop
cs
out
dec
ret
jnp
ret
xor
lret
inc
adc
ret
movsb
insl
icebp
popa
ficompl
mov
and
lods
in
and
jb
inc
mov
int3
inc
call
popa
mov
fwait
jecxz
cmp
ror
push
jle
ret
adc
test
enter
jg
aaa
daa
xchg
ficomps
push
int
xchg
cli
loop
lret
lods
jg
push
jne
push
mov
xchg
mov
arpl
dec
ret
push
inc
insw
cmpsb
daa
loop
lret
loopne
aad
rol
dec
into
in
jp
in
sub
add
xchg
and
loopne
mov
iret
flds
pop
inc
xor
xlat
push
ret
ljmp
mov
andl
stc
fcmove
stos
scas
and
xor
dec
aas
stos
mov
shll
mov
pop
scas
out
mov
lea
aas
sahf
sub
sub
cld
fmuls
shl
push
stos
sub
jno
lcall
xchg
mov
ret
aaa
dec
xor
lds
fisubs
and
or
stc
push
or
ret
repz
mov
inc
outsb
mov
gs
adc
push
lea
inc
icebp
and
xchg
leave
sub
sub
inc
int3
jbe
in
subl
pop
push
jl
rcrl
dec
movl
ret
dec
or
out
push
scas
fldlg2
aas
stos
mov
out
mov
or
or
inc
cli
dec
addl
divb
dec
xor
dec
int
loop
sarb
jnp
mov
es
in
dec
pop
rcrb
aam
pop
call
lock
push
fcomi
mov
mov
dec
test
hlt
call
or
sbb
lahf
rorb
mov
in
cmp
shlw
idivl
dec
lret
lahf
jnp
pop
add
sub
int3
aas
pop
jae
push
sub
aad
mov
cmp
loopne
rcrb
inc
xchg
leave
ljmp
push
pop
mov
popf
lret
or
repnz
movsb
rcll
push
adc
test
les
jmp
cmpsl
sub
push
cs
sti
xor
dec
inc
test
sbb
cmp
lret
add
dec
nop
xor
adc
jecxz
and
xchg
dec
or
ret
sub
xchg
lods
xchg
sbb
test
decl
mov
cmp
aam
ror
inc
test
sub
mov
sbb
rcrl
fldl
jb
mov
fdiv
and
mov
addr16
push
loop
xorb
sbb
andl
aas
mov
jmp
xor
inc
mov
fcmovbe
sub
and
jno
inc
mov
mov
shrb
sbb
or
divb
sbb
in
inc
jae
and
repnz
jno
xchg
test
pop
sub
hlt
jo
sub
sarl
jmp
jae
sub
xor
repnz
jge
sub
je
lret
int3
stos
mov
bound
hlt
xor
dec
and
jl
movsb
adc
or
jns
pushf
cmp
fwait
adc
and
cltd
and
pusha
mov
ljmp
xchg
sub
les
or
or
lea
pusha
xchg
mov
out
ret
repnz
cmpsl
adc
or
inc
xchg
fimuls
leave
mov
ss
push
ljmp
mov
in
and
testb
or
add
fildl
mov
pop
pop
pop
shll
push
imul
in
aas
aam
mov
mov
mov
adc
insb
push
mov
xchg
push
pop
in
mov
mov
mov
test
pop
mov
dec
pop
or
mov
pop
addr16
lds
stc
mov
mov
pop
popa
cmp
and
and
xchg
leave
les
xor
bound
enter
sahf
out
repz
rcrb
lds
into
pop
jp
xor
add
ss
and
xchg
call
jo
into
or
add
shl
repnz
repz
test
sub
imul
ret
jo
pushf
cli
mov
mov
and
std
mov
ds
xlat
stos
jp
adcb
mov
aam
ret
arpl
ret
aad
ljmp
mov
adc
pop
inc
testl
test
fiadds
and
loop
lds
pop
loop
popf
push
ds
sbb
push
in
cwtl
loop
dec
and
pop
loop
mov
pop
hlt
in
loop
jecxz
ret
or
adc
push
push
jb
orb
dec
loop
mov
push
int
shl
cli
jmp
cld
loop
loop
mov
es
pop
or
dec
loop
xchg
jb,pn
mov
sbb
out
in
js
jmp
or
out
inc
in
aad
add
pop
loopne
add
mov
fs
and
ret
cmp
lret
or
sbb
inc
inc
icebp
mov
inc
push
lret
leave
push
fisttpl
pop
pop
loop
out
add
jecxz
pop
or
lcall
dec
lcall
leave
or
xor
cmp
jge
inc
int3
push
push
dec
xchg
repnz
dec
into
jp
enter
ret
repz
adc
add
fwait
or
or
mov
cmp
pop
icebp
in
pop
outsb
enter
ror
jle
pop
les
loop
push
arpl
push
jo
dec
or
lods
loop
inc
repz
fisubs
adc
shll
or
mov
fcomp
adc
in
icebp
stc
add
fidivs
out
xchg
hlt
stc
ret
push
ljmp
das
repnz
push
pushf
mov
xchg
ret
mov
dec
ret
jecxz
mov
jo
sar
mov
ret
inc
mov
cld
loop
jecxz
lods
push
nop
sbb
pop
leave
or
mov
ret
sub
in
mov
push
pop
lock
test
jmp
aad
cmp
repz
out
gs
ret
lret
pop
push
xor
inc
ret
insl
add
lahf
push
sub
xor
jb
add
push
inc
lret
or
sub
sub
fidivrl
fiadds
lret
mov
and
lret
rcll
popf
loop
dec
push
sbb
fistpll
lcall
stos
pop
sbb
or
js
dec
loope
push
sub
cmpsb
loop
mov
sub
fistl
or
iret
mov
loope
andl
sahf
inc
and
lahf
rcl
dec
inc
out
das
les
dec
outsb
or
push
fwait
aaa
xor
shrl
inc
inc
ret
fisubs
push
mov
mov
loopne
js
std
sub
loope
je
sub
jne
fisubl
inc
call
stos
pushf
aaa
lds
shrl
fs
into
inc
divb
inc
mov
mov
mov
add
inc
dec
shl
xlat
adc
adc
je
inc
jo
dec
mov
fidivs
aas
je
mov
sub
inc
fnsave
and
mov
add
sbb
mov
ljmp
lret
hlt
xchg
or
les
mov
jo
xchg
add
inc
mov
add
mov
xchg
mov
movsb
mov
xor
sbb
lods
roll
adc
fldcw
push
jno
aaa
push
mov
add
les
xor
js
sub
jge
cmpsl
loop
jge
mov
dec
loop
enter
out
inc
and
stos
inc
iret
loopne
addr16
lea
cmpsb
cmp
scas
lods
push
in
es
jmp
push
js
lds
xchg
lock
jne
out
jg
sub
std
xor
das
testb
inc
aam
cmc
orb
push
orl
movsb
cmp
decl
arpl
popa
or
addl
mov
sbb
cmp
outsb
push
add
cmp
lock
loop
dec
adc
fstpl
dec
mov
out
loop
outsb
lds
sahf
push
xlat
or
in
sub
std
push
adc
or
add
dec
or
lret
adc
and
push
mov
add
jno
fldenv
popf
insl
pop
and
js
sti
mov
sti
loop
out
fldenv
call
sbb
mov
and
loop
inc
add
lods
adc
iret
fcomip
pop
inc
and
mov
jbe
scas
xor
out
popa
mov
lods
lret
inc
or
adc
dec
or
fiadds
test
adc
push
mov
pop
push
shrl
test
cld
lods
xchg
cmp
ficomps
scas
push
aam
fistl
pop
out
xchg
mov
jle
mov
std
and
js
lods
test
ret
stos
inc
aas
lods
ds
add
sbb
lret
push
fiadds
jnp
daa
cli
push
ffreep
mov
cmp
shrl
daa
jnp
dec
aas
sub
dec
in
test
xor
cmpl
dec
sub
add
push
aaa
popa
in
dec
sub
cwtl
or
push
and
sub
add
mov
jo
lock
or
push
int3
mov
cli
jbe
and
ja
adc
and
pop
mov
mov
ffree
enter
push
or
push
jne
mov
jb
inc
xchg
cmp
dec
repnz
jns
fbld
push
orb
aas
inc
push
sbb
push
mov
sbb
dec
sbb
sub
test
pop
sub
insb
sbb
cmc
sbb
call
xor
push
or
stc
sbb
rol
mov
sbb
dec
and
mov
adc
gs
and
inc
pop
sub
fdivs
add
fisubrs
mov
push
pop
jle
cmpsb
fs
aas
dec
movsb
aam
in
sahf
in
mov
sarl
gs
or
movsl
mov
cld
dec
mov
and
push
popa
ljmp
dec
fwait
sbb
dec
subb
xor
jno
adc
inc
test
push
push
dec
jae
pushf
add
pop
stos
out
popa
sub
cmp
idivl
pop
mov
loop
aaa
div
dec
pusha
out
sub
lock
add
and
mov
je
call
in
dec
pop
push
inc
fidivrs
shl
ljmp
js
sub
inc
pushf
mov
jae
jo
into
ret
pop
xchg
aam
insb
mov
fdivs
movsb
jo
mov
ret
sahf
jge
pop
push
sti
loop
loop
cmp
xchg
fcmovbe
aaa
ja
int3
adc
sub
mov
add
sbb
decb
and
cmp
sar
cmp
and
push
stc
mov
mov
add
into
mov
push
cmp
add
add
sub
push
inc
imul
imulb
shlb
add
jl
xchg
mov
mov
fwait
ror
fdivp
dec
je
push
xor
mov
dec
sub
adc
cmp
in
ja
xchg
das
inc
lods
stos
popf
clc
mov
cmp
xchg
movsl
xorb
cmp
mov
sub
push
ror
add
jecxz
xorb
lcall
mov
fld
pop
fidivs
in
cli
and
jg
xchg
loop
fcomp
outsl
mov
push
push
fcomps
mov
jae
rcrb
push
clc
pushf
movsl
loopne
in
fs
int
mov
jmp
dec
xor
iret
scas
mov
ficomps
xchg
push
push
pop
mov
fidivs
cmp
inc
mov
push
push
inc
mov
mov
mov
inc
ret
testb
inc
xchg
sub
mov
out
ljmp
push
sub
bound
stc
dec
add
push
movsb
call
mov
pop
jge
mov
jo
aas
in
sub
lahf
cmp
xor
stos
add
jecxz
inc
mov
fs
sbb
leave
and
subl
dec
lret
mov
bound
pop
nop
bound
out
mov
addb
fiadds
pusha
push
pop
sub
call
push
int
cmp
lret
test
in
adc
cmpsb
insb
sub
out
jne
mov
lcall
add
out
jp
adc
inc
xchg
ljmp
pusha
inc
es
add
xchg
sahf
inc
fiadds
fucom
push
dec
incb
mov
incl
ret
xor
mov
jo
xchg
push
mov
insb
push
and
push
gs
stos
leave
pop
insb
cmp
inc
mov
jecxz
inc
dec
jns
mov
jecxz
jb
lods
pop
cmp
or
test
rcr
int
push
lock
scas
bound
push
pop
mov
adc
leave
out
sub
inc
lret
pop
je
clc
jmp
leave
fidivrs
or
out
sbb
inc
jb
out
mov
les
jo
xchg
int
data16
aaa
data16
push
mov
cmp
mov
ret
push
push
scas
outsl
lret
in
xchg
dec
out
and
imul
mov
lcall
out
out
xchg
ja
ljmp
sub
in
notl
pop
fwait
mov
test
gs
sub
sub
imul
jns
mov
ret
add
dec
and
mov
xchg
xchg
out
mov
ja
and
aaa
jnp
les
ret
push
ficompl
sub
push
out
hlt
or
and
pop
out
repz
cmp
xchg
jge
incb
faddl
icebp
mov
call
aas
cmp
lock
daa
addb
ret
or
fmuls
inc
cmp
int
loopne
jp
arpl
in
pop
loop
jecxz
push
and
stc
sub
pop
ret
inc
sbb
hlt
test
popa
jmp
add
repz
add
mov
out
xor
lds
dec
stos
sbb
fdivl
dec
push
repz
mov
xor
js
dec
leave
shlb
lcall
sbb
icebp
loop
xchg
sub
into
xlat
cwtl
and
cmove
iret
out
jecxz
jb
aad
ret
sti
xchg
out
loop
inc
fmul
inc
ret
or
add
iret
dec
and
popa
jnp
and
dec
iret
pop
in
fidivs
iret
sahf
sbb
out
fwait
ret
cmp
iret
sub
fwait
inc
ret
inc
inc
dec
jnp
jmp
roll
iret
fsub
bound
cwtl
ret
jmp
jmp
aam
push
push
jbe
iret
sahf
xchg
jmp
sub
ret
ss
ret
in
iret
jecxz
jnp
clc
iret
cmc
adc
les
add
les
adc
in
test
and
adc
in
push
rep
ret
es
hlt
bnd
xor
jb
int
fistl
mov
and
and
std
int3
push
into
ret
dec
jb
ret
xchg
mov
xlat
xchg
int3
pop
mov
test
loopne
loop
ret
mov
xchg
xchg
je
cmpsl
fimull
jp
inc
stc
fmul
mov
out
loop
repnz
loopne
mov
int3
cli
xor
inc
pop
push
shlb
ljmp
rcrl
je
push
ljmp
in
sbb
dec
sti
xor
aad
hlt
je
dec
xchg
jmp
cmp
jecxz
jnp
sbb
mov
ret
xchg
jle
fiaddl
dec
out
loop
repz
repz
mov
dec
repnz
outsb
cli
out
dec
fsubrp
cmp
or
fsub
jl
loopne
or
fcoms
mov
jmp
mov
movsb
ffree
push
cmpl
adc
push
xor
ret
sub
pop
iret
add
xlat
jecxz
pop
nop
scas
sar
outsb
sbb
push
lds
pop
and
push
call
aas
xor
mov
mov
lahf
and
stos
cltd
pop
mov
pop
push
mov
jae,pn
lods
call
xor
adc
sub
sbb
jb
stos
sub
pop
or
pop
aas
push
xor
stos
in
idivb
js
mov
rcrb
xchg
pop
shrb
std
jecxz
cld
lods
cs
pop
aaa
in
popf
and
push
sahf
push
insl
sbb
scas
mov
movsl
add
xchg
movsb
es
dec
popf
jnp
into
test
pop
lea
xchg
xor
xchg
mov
push
add
sub
and
stc
arpl
sub
sbb
clc
add
fs
ret
add
cmp
cld
jmp
icebp
mov
add
sub
lock
push
mov
xor
les
je
call
sar
xor
add
pushf
repnz
add
xor
aas
dec
fimull
xor
inc
ss
sub
add
mov
sbb
cmpsl
stc
fisttpll
pop
in
pop
loop
push
inc
not
icebp
ret
jae
lods
dec
ret
hlt
les
call
sub
sbb
inc
push
dec
loop
pop
in
loop
push
cwtl
or
fidivl
hlt
fcmovb
je
mov
mov
ret
xchg
xchg
push
sub
sbb
out
mov
dec
enter
ret
call
movsb
lds
and
les
loop
or
aad
pop
out
loop
repnz
xor
cmpl
inc
hlt
hlt
cld
loop
inc
pop
aad
pop
jmp
sub
out
xchg
hlt
out
loop
inc
pop
aad
jp
into
dec
adc
xor
aad
mov
iret
push
loop
xchg
aad
lret
or
dec
inc
pop
aad
pop
jecxz
loop
adc
test
push
addr16
add
pop
pop
push
aad
daa
mov
mov
jp
dec
fidivrs
push
ds
sub
ds
ret
jmp
mov
sbb
mov
lcall
pop
xchg
jne
cmpsb
mov
roll
xchg
les
repnz
sbb
aad
sar
sub
push
and
mov
je
or
push
sub
xchg
leave
scas
lret
ret
shl
xchg
push
push
jle
lret
int3
das
push
ret
cld
ret
xorl
test
xchg
cs
or
loop
xchg
in
in
adc
rcll
ret
in
cs
cltd
popf
dec
dec
dec
mov
int
aam
sbb
popa
xchg
sub
mov
lret
hlt
ret
out
dec
rcrl
ss
xor
adc
ljmp
or
fsubrp
es
mov
dec
inc
sysret
rolb
xchg
inc
adc
dec
sub
xlat
xlat
xor
jmp
fwait
ret
gs
mov
out
jae
inc
ret
add
mov
and
leave
inc
data16
icebp
adc
imul
jge
mov
mov
out
aaa
jle
daa
sbb
lods
lcall
mov
std
pop
repz
test
std
pop
repnz
pop
shr
repnz
dec
lods
dec
adc
and
stos
and
jnp
aad
std
lods
daa
push
add
mov
aam
ret
lea
aad
xchg
daa
lods
aad
add
lods
faddp
repnz
imul
cmc
sub
stc
mov
mov
mov
mov
push
lock
arpl
or
bound
and
nop
popa
iret
data16
jecxz
xorb
adc
dec
cmpsb
push
fidivrs
out
arpl
test
repnz
sub
fadds
inc
ret
push
and
rcr
and
call
adc
out
inc
fcmovnb
jp
add
sbb
pop
mov
mov
fldcw
lret
adc
nop
dec
cltd
dec
adcl
aaa
fs
test
or
push
enter
es
mov
lahf
outsb
sub
mov
push
and
sub
jmp
dec
cmp
sbb
lret
mov
cmpb
sub
mov
ljmp
rorl
mov
cmp
cmpsl
xchg
popa
push
dec
sbb
loopne
lods
enter
hlt
in
sub
lea
out
out
push
les
aam
out
lds
push
movsb
sub
or
pop
repnz
repz
inc
cmc
push
and
sub
jmp
out
imul
enter
pop
in
rcrl
push
and
fwait
add
rclb
js
jb
xchg
sbb
movsl
sub
lret
or
dec
les
daa
push
fidivrl
lea
int
sti
inc
inc
enter
repnz
adc
lret
nop
mov
in
xor
ret
sbb
icebp
pop
xchg
jecxz
dec
dec
and
sub
in
loop
adc
or
fstps
adc
jns
flds
and
xor
pop
loop
pusha
inc
sbb
repz
pop
pop
bnd
lock
pop
loop
pushf
scas
cmpsl
ffree
out
dec
in
int3
xor
inc
and
mov
enter
mov
ljmp
shll
scas
jmp
shll
mov
adc
fwait
and
xchg
add
mov
repnz
push
in
mov
cmp
push
pop
fimuls
fxam
jl
lods
or
fbld
push
inc
push
inc
loop
pop
jmp
or
loop
or
out
loop
and
movsb
fnstenv
out
jecxz
mov
dec
xchg
psllq
enter
lods
out
push
xor
aam
mov
leave
call
adc
dec
cs
sub
add
scas
push
in
jp
pop
jg
fsub
aam
pop
sub
and
fcom
ffree
hlt
jno
and
loop
push
lret
sub
push
cmp
es
mov
adcl
in
enter
loop
sarb
in
inc
loop,pn
repnz
lds
lret
mov
and
cmp
push
pop
int3
outsl
jmp
icebp
jecxz
sti
inc
aam
ret
adc
ds
mov
dec
clc
loop
lret
push
sti
in
leave
in
xor
out
loop
hlt
in
jecxz
repz
push
pusha
je
leave
or
jnp
or
push
fucom
sahf
fwait
or
add
cwtl
leave
int3
stc
and
fsubl
lret
jo
adc
lds
push
cld
mov
adc
sbb
cmpsb
push
inc
mov
xchg
jne
push
insl
rolb
cld
inc
sarb
mov
xchg
pop
xor
popa
cltd
sub
push
xchg
arpl
out
and
xchg
shlb
mov
xchg
pop
scas
mov
fimuls
pop
jae
gs
pop
repnz
fcom
xorb
nop
jmp
push
inc
insl
lods
negb
dec
out
mov
iret
pop
mov
int3
sub
pusha
inc
movsb
pop
cmp
lahf
fstl
inc
push
sti
mov
sub
jecxz
arpl
sub
inc
frstor
and
faddl
inc
jecxz
ret
jl
daa
mov
lret
jmp
cltd
cmpsb
lods
in
xor
xchg
mov
mov
fs
fidivrs
ss
dec
or
loopne
mov
outsb
pop
out
xor
call
in
cmp
dec
adc
xchg
add
lds
adc
and
push
pop
adc
repnz
icebp
lods
mov
adc
sub
js
loopne
daa
cmp
vlddqu
lret
jae
sub
std
add
add
add
or
popf
out
ds
adc
adc
addr16
subps
test
push
out
pop
mov
add
add
inc
repz
jno
movsb
mov
hlt
outsl
movsl
lar
adc
data16
in
lcall
xchg
push
jecxz
xchg
outsb
notl
fistpl
add
push
sub
imul
xchg
pop
cmpsl
int3
sarl
fistl
inc
cltd
sbb
ret
or
icebp
xchg
sbb
aaa
xor
mov
mov
jae
push
sbb
adc
adc
icebp
loopne
insb
dec
sbb
lock
push
aad
jo
xlat
mov
xor
ret
frstor
adc
je
sbb
loop
or
daa
aas
decb
cli
dec
mov
dec
xchg
dec
inc
cmp
sti
lahf
aas
aaa
pop
fbstp
mov
into
in
fbld
jnp
mov
bound
jmp
cmp
repnz
jo
push
rcrb
sub
das
fldenv
int
hlt
in
imul
test
sub
fcomip
xchg
add
mov
sbb
xor
stos
mov
jne
testb
xor
jno
gs
pop
sarb
and
aas
lods
dec
out
lret
jns
daa
pushf
cmp
add
iret
xchg
jno
xchg
dec
pop
stos
cmp
inc
dec
inc
mov
shrd
inc
lret
jmp
cs
addb
int3
ret
lret
out
lret
fs
push
dec
lds
data16
adc
cs
and
or
push
cmp
mov
fs
and
ss
jle
imul
outsl
popa
add
lret
push
fidivrs
jl
mov
jns
cmp
cmpsb
movsb
or
push
add
dec
repz
test
fwait
jnp
dec
cmpsb
mov
ljmp
int
and
stc
dec
dec
mov
add
mov
pop
movsb
mov
xchg
aas
ds
call
adc
jns
int
iret
inc
cmpsl
or
lods
scas
cmpsb
hlt
insl
fstpt
test
jg
mov
sbb
and
imul
stos
inc
testb
inc
jae
fs
gs
mov
push
add
rcr
mov
mov
out
aas
xchg
out
scas
rol
iret
xchg
dec
imul
xbegin
rolb
sub
vpsrld
mov
dec
jae
loop
repnz
push
pop
xor
cmp
jl
hlt
xchg
mov
inc
loop
cmp
leave
xchg
clc
rclb
rorl
call
dec
scas
loop
lret
std
mov
aam
loop
in
pop
loop
out
leave
test
les
mov
add
sbb
in
ret
cmpsl
shl
sahf
outsl
ret
ret
in
in
shl
mov
jecxz
push
pop
push
xor
pop
dec
cmp
xchg
out
jle
clc
leave
push
icebp
add
xorb
out
pop
clc
or
cmp
and
iret
and
xchg
es
jl
ret
sbb
nop
fbld
insb
dec
shll
mov
sub
ret
sub
jecxz
xchg
xchg
fcomi
in
push
sub
jle
and
add
inc
mov
fwait
repz
dec
ljmp
or
loop
mov
add
and
adc
incl
fcoms
lcall
loop
sub
fcmovb
icebp
mov
pop
or
lcall
sbb
cltd
mov
aad
stos
xor
xchg
push
loop
jne
fimull
push
sub
int3
jecxz
dec
mov
fimull
hlt
jecxz
loop
inc
jg
jns
inc
jmp
sbb
fimull
lret
or
jbe
ret
mov
sub
mov
pop
jmp
popa
cmpsb
jnp
cld
push
push
icebp
in
aam
cmp
mov
jmp
mov
insl
aam
in
cmpsl
icebp
jg
ret
fldt
call
ficompl
sub
mov
hlt
and
push
shrb
inc
mov
repnz
push
hlt
fiaddl
mov
add
lds
ret
jg
add
xor
les
dec
rcrb
and
mov
int3
sub
mov
push
repz
and
out
pop
cmc
pop
fisttps
mov
jecxz
in
mov
lret
not
ret
xchg
out
sar
pop
adc
ret
clc
idiv
bound
repnz
lret
mov
shlb
rcr
ret
in
mov
loop
jmp
loop
or
shrl
aad
rcrb
pop
lret
sbb
pop
rol
push
pop
cmp
add
pop
cmp
shrl
inc
sub
push
xchg
pop
cmpsl
dec
cmp
add
pop
fdivrs
and
les
push
jmp
xlat
sbb
mov
or
ret
aad
in
xor
mov
nop
int
jne
dec
mov
xor
mov
int3
and
enter
jecxz
mov
arpl
aaa
pop
ss
cmp
arpl
outsb
roll
aam
xchg
fcmovbe
fadd
xchg
movsb
sub
xor
repnz
dec
adcl
shl
dec
aad
mov
jmp
xor
mov
adc
pop
testb
sbb
pop
inc
aad
mov
add
push
icebp
rcrl
icebp
ss
mov
enter
xchg
icebp
sar
sub
ret
sbb
in
fnop
dec
in
mov
pop
stos
fwait
aam
jge
mov
mov
ret
js
push
and
jne
in
fsub
fstps
iret
push
pop
loop
nop
lds
out
push
rol
or
fsubr
les
add
into
ret
out
clc
dec
shlb
push
ret
imul
test
mov
or
ret
repnz
out
push
push
cmp
mov
sub
ss
es
ja
or
lcall
filds
dec
add
aaa
dec
pop
scas
outsb
dec
ret
push
ret
out
jb
sbb
push
mov
out
loop
jb
jo
pop
mov
rol
inc
jb
mov
jo
jmp
sub
movsl
jno
imul
rcll
xor
add
pop
out
fdivr
xchg
or
xor
fimull
notl
push
push
lods
xor
push
mov
pop
cmpsb
ljmp
jecxz
test
js
xchg
hlt
jecxz
arpl
or
push
pop
cmc
or
flds
dec
aas
ja
cli
lock
je
and
jecxz
sbb
ss
push
jo
out
and
jnp
loope
push
test
mov
jb
stos
into
pop
stos
pop
test
ds
mov
sub
stc
adc
pop
push
fs
push
int3
fmul
stc
ffree
and
pop
jno
outsb
pop
and
lods
adc
xchg
push
pop
mov
adc
fisubl
adcb
push
ret
or
jne
adcb
cmc
adcl
dec
leave
ss
push
popa
dec
sti
out
and
es
inc
fisttpll
movsl
ljmp
fidivrs
lea
mov
and
in
cmpsl
inc
outsb
sub
pop
lds
jns
out
cs
jecxz
and
je
outsb
sub
fisttps
mov
jle
loope
jecxz
jns
int
imul
sarb
dec
in
in
jg
ds
bound
rorb
hlt
sub
xor
jmp
lds
lock
int3
cmp
daa
test
xor
fwait
sahf
inc
icebp
fildll
andl
test
call
sub
adc
mov
sbb
test
jne
mov
sub
push
jl
xor
mov
rcll
pop
shlb
jmp
shl
pop
test
add
test
and
loopne
bound
loope
push
xor
xor
test
and
daa
mov
pop
inc
test
xor
loop
ret
sbb
mov
pushf
test
sub
lahf
pop
or
adc
mov
cmc
mov
pushf
xor
and
xlat
mov
pop
mov
mov
ret
sbb
ffreep
cs
and
push
das
ds
insb
mov
cmc
push
lret
aaa
xor
addr16
frstor
cmp
pop
in
mov
gs
pop
inc
jno
test
fs
dec
test
iret
sub
lret
cld
cmpsb
jmp
inc
inc
cmp
sub
pushf
cltd
dec
lret
mov
repz
or
dec
jmp
or
ficomps
inc
sub
inc
lea
or
mov
cmp
jmp
outsl
sub
inc
fdivrs
lret
imul
mov
loop
sti
icebp
push
jo
mov
and
push
adc
ret
add
aam
iret
data16
icebp
gs
add
add
inc
test
sub
or
out
sub
adc
lcall
ficompl
inc
add
fstpt
mov
iret
daa
mov
lods
jmp
fldcw
cli
lgdtl
sub
in
clc
fdivp
xchg
in
inc
push
inc
cs
inc
fnstenv
dec
jle
cmc
push
add
jmp
jae
jmp
into
adc
mov
rcll
sub
cmc
or
jecxz
sbb
shll
and
sysret
shrl
xlat
and
add
lret
dec
ret
ficoms
sbb
push
sbb
xor
mov
inc
push
into
das
add
and
insb
ret
adc
aad
push
sahf
fs
cmp
or
in
jo
jno
or
lret
ja
cmp
bound
imul
jecxz
outsb
adc
xchg
inc
mov
roll
jae
shlb
inc
leave
mov
lret
dec
ret
cmc
shl
xor
in
dec
in
roll
mov
cwtl
adc
les
push
mov
lret
fisubrl
ror
pop
mov
jnp
inc
les
nop
int
dec
sar
lods
aas
xlat
or
loope
inc
mov
in
or
cs
shl
pop
aaa
addr16
add
push
inc
call
sbb
repz
xlat
insl
aas
ficoms
stos
jp
cmp
aas
js
mov
adc
mov
mov
add
mov
jg
loopne
sub
stc
lds
sub
std
and
mov
inc
ret
sub
adc
aas
nop
int
test
scas
mov
call
aad
inc
jecxz
iret
iret
xor
mov
mov
pushf
es
clc
cmpsl
in
sub
pop
add
loop
push
sub
inc
test
dec
jo
sub
or
shlb
xor
sti
jno
xor
mov
popa
insl
fwait
pop
push
mov
stc
and
xor
mov
adc
or
mov
enter
dec
cmpsb
jb
cmp
lods
daa
insb
js,pn
and
xchg
jo
mov
mov
pop
mov
nop
xchg
andb
push
mov
cmp
xor
hlt
or
imulb
cmp
jns
icebp
xor
rolb
js
arpl
push
add
or
add
inc
fnstcw
pop
mov
sub
pop
into
and
sbb
or
iret
pusha
in
je
and
dec
pop
lods
leave
rcrl
in
mov
cld
das
ret
dec
cli
inc
lods
xorb
add
jp
aam
push
mov
lods
dec
or
enter
pop
lcall
pop
cltd
inc
shll
sbb
bndldx
leave
jecxz
mov
loopne
aam
xor
lods
lea
mov
sti
mov
push
mov
add
icebp
mov
and
fwait
movsb
xchg
rcl
mov
test
call
lods
or
enter
lret
xchg
in
lds
loopne
in
fadds
sub
ret
lret
iret
pop
dec
lret
enter
mov
ret
sbb
insl
ret
into
ficoms
icebp
or
add
pop
in
repz
aad
pop
in
mov
inc
loopne
aaa
test
ficoms
push
into
stos
bound
sbb
enter
dec
fistl
mov
rclb
dec
in
lret
fbld
ret
fcmovb
int3
fcomps
out
roll
sub
enter
xchg
jo
out
addr16
fimull
inc
xorb
adc
xchg
lods
sbb
jmp
or
or
pop
dec
mov
aaa
mov
pop
icebp
ficomps
rcrl
xchg
repz
dec
pop
data16
sbb
stc
mov
lret
jl
test
loop
fisubrs
mov
sbb
and
or
in
rol
rolb
dec
inc
push
popa
in
loop
inc
lods
cli
int
xor
dec
xchg
iret
inc
mulb
mov
cltd
out
adc
lods
lds
inc
mov
pusha
xchg
sub
rclb
rolb
sub
es
rcrl
or
fiadds
xchg
or
fwait
mov
repnz
xor
mov
aad
pop
lds
out
inc
rolb
mov
jno
imul
enter
mov
in
in
mov
sbb
or
mov
repnz
loopne
and
lcall
jne
adc
sti
sbb
dec
dec
es
movsb
int3
inc
add
pop
das
jbe
or
in
test
pop
xchg
add
mov
mov
push
inc
bnd
adc
add
rorl
or
or
test
push
sahf
rorb
cmpsl
mov
and
bound
mov
push
push
dec
fwait
sub
jo
xor
aas
push
jl
popf
push
add
bnd
mov
mov
mov
repz
push
lods
pop
cmp
fs
and
shr
push
inc
pusha
or
jo
sub
mov
push
fsubp
je
sbb
aam
jns
add
cmp
add
jnp
imul
add
xor
lods
lcall
or
in
roll
inc
xchg
jmp
arpl
pusha
stc
push
movsl
xor
lock
rolb
xor
aas
outsb
mov
add
jbe
and
adc
aas
out
sub
fnstenv
sub
inc
dec
lods
repnz
popa
jne
movsb
sbb
add
cmp
sub
fprem
lea
push
pop
lret
dec
or
mov
cmp
sbb
inc
or
sub
dec
test
std
jnp
add
out
aad
repz
in
lds
cmpsl
xchg
in
fisubs
mov
addb
inc
jge
mov
mov
adc
arpl
mov
fisubs
mov
lcall
out
fidivrs
idivl
popa
sarb
bnd
cmp
lds
dec
pop
data16
leave
out
lcall
mov
push
gs
test
fbld
sbbb
popa
xor
xor
push
jl
xor
inc
in
sub
shll
push
data16
cmp
cmp
push
fisubs
and
push
bound
push
pop
shlb
xchg
mov
out
push
sub
jmp
cmp
cs
sub
and
insl
outsl
push
or
mov
mov
push
adcb
inc
ret
sbb
in
jns
loopne
or
data16
mov
or
dec
daa
sbb
inc
jb
mov
lret
orl
js
sbb
push
dec
stc
cld
cmp
ret
dec
int3
rorb
mov
les
mov
pop
sti
xchg
adc
push
dec
stc
mov
jg
inc
inc
test
jmp
arpl
jns
and
aaa
cmp
mov
sub
jne
lea
add
mov
inc
mov
loopne
inc
into
addl
mov
dec
jge
mov
xor
ret
xor
lods
sbb
sahf
ficoms
push
and
mov
xor
xchg
or
leave
and
test
xor
sub
dec
mov
dec
dec
mov
int
mov
shl
cltd
mov
xchg
lds
inc
cwtl
in
mov
inc
push
in
jmp
bound
roll
mov
popa
mov
out
xor
xchg
icebp
push
push
jb
sub
push
loopne
dec
mov
fwait
and
jnp
jno
popa
fdivrp
mov
mov
in
push
and
leave
add
fidivrs
mov
rclb
frstor
mov
je
call
loopne
jge
cmp
inc
movsl
insb
inc
outsb
mov
mov
jb
fnstenv
ret
dec
sub
addr16
mov
mov
ret
jp
fisubl
jb
dec
roll
into
pop
int
or
add
rorl
and
mov
arpl
jo
cmc
mov
adc
ret
mov
dec
mov
ret
dec
push
xor
and
test
out
das
dec
shll
fisubs
and
mov
cmpsl
dec
decb
lds
jo
inc
loop
mov
push
adc
inc
xchg
mov
imul
lods
pop
aas
push
sti
notl
or
xor
aad
vunpckhps
ret
xchg
int
inc
repz
pushf
and
mov
push
out
ret
daa
stc
jae
and
cmp
aam
nop
fs
daa
je
push
and
cmc
jns
xchg
or
mov
aad
into
setbe
imul
xor
rcrl
pop
stos
in
out
mov
in
add
in
mov
mov
xchg
call
lds
jo
hlt
or
lret
aam
into
scas
inc
btc
leave
ret
xchg
fisubrs
mov
push
fwait
sbb
sbb
in
js
jge
mov
pop
shll
popa
jmp
lret
cmp
sub
cmp
push
in
or
inc
inc
mov
scas
lcall
daa
add
pop
imul
std
xor
mov
add
cmpl
push
fs
mov
lea
cs
adc
lods
inc
jl
into
dec
std
push
push
inc
jb
shrb
roll
sub
add
loop
add
rcl
jae
xchg
lret
cli
fsub
pop
aas
cmp
fiadds
jmp
out
and
push
pop
out
fidivrs
call
repnz
inc
mov
xchg
aam
mov
test
push
dec
xchg
test
adc
and
inc
pop
cmp
xchg
rclb
pushl
inc
push
outsl
test
stos
stc
mov
es
inc
push
mov
sbb
dec
xchg
cltd
jne
movb
ficomps
test
add
xor
fisubrs
mov
or
jl
loop
jo
jo
mov
add
push
adc
pop
mov
or
out
xchg
in
xor
outsb
sbb
xchg
or
mov
imul
inc
xadd
cmp
pop
leave
out
ret
cmpsb
pop
push
jno
jae
push
adc
inc
fwait
imul
mov
cmpsl
in
inc
dec
dec
push
mov
lea
outsl
gs
mov
pop
rclb
sub
leave
repz
push
lretw
inc
pop
or
cmp
fsubs
test
mov
sub
repz
mov
pop
sub
pop
into
out
jge
lcall
cmpsl
lods
ret
xor
jmp
mov
inc
loopw
pushf
mov
out
fists
addb
adc
jmp
adc
adc
mov
jle
inc
xbegin
or
lcall
scas
lods
inc
arpl
popa
cld
mov
sbb
dec
and
fistl
push
int
sub
pop
sub
pusha
sub
pusha
sub
loop
decb
aas
in
inc
sbb
and
in
test
stos
inc
or
jmp
push
test
xor
mov
lods
lock
add
pop
inc
pop
push
inc
test
inc
mov
push
jns
and
dec
pusha
and
mov
or
jns
and
arpl
dec
ror
dec
xchg
sub
mov
lret
cld
jmp
dec
stc
jns
jp
dec
stos
pop
pop
lret
push
and
jmp
add
and
shl
imul
add
shlb
add
and
sub
sub
dec
pop
or
nop
jg
push
dec
loop
movsl
pop
dec
xchg
fistl
xor
or
sbb
lods
mov
jae
test
cmpsb
mov
xlat
and
push
or
jge
jbe
pop
push
jb
insb
and
jl
adc
std
mov
dec
mov
jge
dec
or
or
sub
or
xchg
add
jg
aas
call
mov
and
or
ret
gs
dec
jmp
inc
xor
cwtl
fidivs
adcl
or
push
cli
xor
in
mov
mov
movsl
mov
imul
cli
loop
cmpb
pop
mov
or
pop
mov
faddp
jne
sub
inc
push
push
xchg
fimull
or
cli
cmp
insb
add
xchg
push
dec
jmp
lret
rclb
mov
addr16
xchg
inc
ljmp
nop
pop
addb
inc
mov
mov
inc
enter
in
les
pop
cmp
jg
test
xlat
jo
test
inc
fadds
lods
es
xchg
push
add
inc
jnp
test
mov
mov
inc
add
in
lds
popfw
gs
and
adc
sub
icebp
call
push
stos
inc
cmp
jbe
dec
mov
pop
loop
lret
les
sub
stos
inc
lods
mov
add
pop
iret
mov
lods
iret
aad
mov
fucomi
jo
cmp
sub
mov
ret
add
inc
inc
ret
inc
inc
pop
icebp
movl
movsb
jno
pop
cmpsb
jo
push
push
add
pop
loop
pop
js
mov
fninit
test
sub
and
clc
mov
sub
arpl
dec
xor
mov
cwtl
loopne
popf
mov
xor
xor
dec
add
sti
pop
js
lock
in
call
dec
sub
testb
jo
arpl
imul
leave
call
or
or
rcl
mov
xchg
lods
mull
pop
dec
test
aad
cmp
jae
mov
int3
mov
call
cmp
sbb
incl
mov
pop
insb
xchg
mov
jnp
fcomps
push
ret
lock
les
bound
ret
popa
mov
out
popf
mov
dec
movb
and
jne
lret
leave
jmp
decb
jecxz
ret
repnz
scas
fidivrs
shl
adc
jae
shll
in
mov
cmpsl
shrl
filds
jns
aad
les
jmp
incb
popa
sbb
icebp
int
xlat
xor
rcr
lock
jnp
jnp
bound
push
dec
mov
mov
or
je
sub
or
mov
and
cld
or
pop
repz
adc
jbe
pop
jno
icebp
pop
das
repnz
int
xor
ret
pop
sub
and
into
bound
and
inc
fimull
sub
jmp
cwtl
call
fbld
xchg
fsub
stos
mov
mov
inc
out
test
or
aas
inc
mov
xchg
jo
adc
push
daa
inc
out
sbb
lock
sub
mov
imul
sbb
call
or
mov
xor
ss
push
cs
xchg
pop
rorl
pop
popa
loopne
mov
test
mov
mov
iret
pop
enter
loopne
mov
add
cmpsb
or
add
sub
mov
push
imul
push
xchg
cld
insl
dec
ret
mov
lds
sub
nop
and
xchg
xor
lcall
adc
bound
repz
sub
insb
mov
out
inc
shrl
insb
adc
movsb
xchg
loop
in
pop
xchg
xlat
sub
push
mov
xchg
ss
int
xchg
mov
lds
add
dec
jg
add
adc
inc
dec
jecxz
jns
push
rcll
pop
push
push
loopne
and
pop
pop
sar
jo
cld
mov
sub
and
add
inc
and
fisubrs
sbb
test
add
sbb
repnz
push
addr16
in
jecxz,pn
lea
mov
mov
sbb
pop
pop
add
mov
xor
jecxz
xor
aam
out
rcr
xor
adc
mov
sub
mov
lret
mov
stos
add
lds
ds
in
add
pop
inc
insb
jl
inc
and
push
aas
adc
pop
fsubs
fbstp
rcrl
jge
fiaddl
scas
mov
insb
and
pop
fcmovnbe
fsts
mov
clc
aas
mov
add
mov
leave
rcl
ljmp
daa
dec
scas
jge
or
sbb
lahf
out
daa
insl
pop
and
std
daa
shll
sbb
pop
cmc
enter
bnd
cmc
loop
sub
frstor
and
sub
arpl
add
xor
pop
ja
cltd
loop
leave
ret
inc
stos
cmpsb
loopne
inc
and
std
and
add
push
jo
cmpsb
sub
inc
cmpsb
sub
xchg
push
xor
shll
push
mov
add
lods
add
mov
test
ret
rolb
sbb
int
mov
out
int3
pop
mov
test
imul
pusha
mov
mov
ljmp
push
mov
leave
rcr
jo
xchg
lret
in
push
mov
test
mov
push
mov
jae,pt
mov
cwtl
xchg
sbb
inc
psrad
xchg
aad
inc
repnz
addr16
xchg
adc
insl
xor
mov
pop
add
in
dec
ret
inc
fucomp
lret
adc
es
add
and
mov
push
jb
inc
xor
add
std
stos
sub
inc
sbb
jg
jbe
cmp
inc
in
orb
adc
ret
imul
fimull
mov
sbb
pop
and
insl
push
test
sbb
aad
pop
mov
aad
inc
mov
jg
mov
pushf
xchg
sub
inc
sub
ret
loopne
sub
sub
and
jmp
in
inc
fmull
inc
leave
sbb
and
fmull
jno
jmp
pop
fiadds
lahf
es
adc
int3
jbe
gs
inc
fsubrs
ret
divb
or
mov
xor
and
mov
pop
cmovle
cmpsb
adc
loop
in
xor
lret
add
rclb
shl
lods
sub
sarl
std
dec
inc
mov
popf
push
push
mov
bound
imul
data16
out
lret
adc
fwait
or
orl
add
fucomp
std
pop
movsl
shr
out
mov
popf
mov
and
xchg
test
shll
push
loop
lds
in
or
xor
fcmovbe
sub
or
xchg
cli
test
xrelease
gs
inc
and
lret
xchg
in
mov
add
in
lods
dec
sbb
leave
sbb
or
popf
xor
and
enter
inc
pop
xlat
xchg
int3
insl
bound
and
push
insl
popf
and
pop
or
lret
adc
inc
test
popf
push
xchg
pop
sub
lret
jo
aaa
clc
jge
daa
sti
mov
pop
adc
adcl
mov
int3
repnz
inc
flds
sub
dec
daa
imul
lea
std
lahf
push
inc
addb
fisttpll
push
hlt
mov
pop
adcb
jg
mov
pop
pop
and
repnz
mov
push
pop
rolb
push
pop
into
dec
jmp
push
inc
sarl
push
test
mov
cld
test
adc
mov
pop
inc
lods
mov
in
iret
lds
and
nop
push
sbb
bnd
loope
and
cmpsb
aas
pop
dec
or
jecxz
shl
pop
add
mov
subb
repnz
out
jbe
sub
dec
lret
pop
test
xchg
jle
sbb
fidivs
cmp
into
push
scas
cld
pop
add
add
int3
jae
subb
mov
cld
cmpsl
pop
xchg
and
adc
lds
add
fldl
fchs
add
sub
ds
rclb
mov
insl
or
add
arpl
test
imul
mov
pushl
lods
stos
aas
jp
cmp
push
push
add
xchg
cli
mov
push
or
inc
inc
add
stos
jns
pushf
lds
mov
fisubrs
sub
int
fnstenv
jbe
les
pop
fstp
xor
dec
out
popf
repz
adc
and
sub
mov
lea
scas
jge
mov
mov
add
es
inc
mov
mov
in
lds
std
in
sbb
cmc
lcall
pop
pop
andb
repnz
cmp
fimull
loop
jmp
imul
aaa
inc
and
inc
nop
scas
sti
fcmovnb
arpl
fidivrl
jb
fbld
icebp
sub
test
mov
dec
test
xor
or
sbb
cmp
push
push
add
in
jecxz
dec
aad
enter
aas
std
ret
icebp
fldcw
lahf
cmc
lret
push
and
ret
xlat
xor
movsb
jb
fiadds
mov
push
fsubl
cltd
mov
mov
push
cwtl
xor
test
notb
jmp
aam
jmp
fimull
xchg
xchg
ficomps
aad
jnp
push
shlb
add
inc
pop
xor
mov
inc
cmc
pop
loop
arpl
xor
add
or
lret
outsb
or
sti
pop
imul
mov
mov
dec
sub
cmp
or
push
into
fcmovu
push
push
add
push
add
fs
push
shlb
test
inc
cmc
mov
sbb
push
jecxz
ret
cmpsb
mov
xchg
into
lea
in
inc
xor
notb
xor
and
and
dec
les
bound
std
insb
out
jp
shlb
stos
jne
mov
arpl
or
insb
into
inc
push
and
dec
daa
jg
jno
inc
add
push
mov
inc
arpl
mov
packsswb
dec
cmp
and
aaa
lret
aad
push
sbb
or
arpl
jg
adc
daa
jg
jmp
arpl
xchg
add
cmp
mov
xlat
jecxz
in
push
mov
add
sub
mov
mov
add
shl
bnd
add
cmpl
jbe
dec
les
int3
hlt
pop
ja
xchg
push
test
push
and
inc
push
pop
in
push
sub
cmp
adc
inc
loopne
divl
push
pop
push
xchg
mov
jbe
pop
fisttpl
xor
outsb
sbb
or
aas
adc
inc
mov
stos
flds
adc
sbb
cmp
fistpl
call
jnp
jbe
filds
mov
in
push
mov
sub
xchg
repnz
add
jo
test
repz
lods
out
mov
subb
in
or
iret
mov
mov
push
pusha
push
psllw
repz
sub
addr16
push
fs
and
sub
int
cmp
icebp
inc
push
xchg
cmpsb
add
pop
xor
mov
aam
stos
popa
mov
and
mov
add
call
xor
out
ret
hlt
and
mov
cltd
sub
repnz
adc
mov
and
pushf
inc
es
mov
sub
cmpsb
jecxz
fldenv
or
mov
out
dec
add
gs
ret
dec
ret
dec
ret
dec
ret
cmpsl
push
test
aas
mov
clc
cmp
mov
sbb
lret
stc
add
inc
ret
add
jecxz
and
lcall
inc
call
jns
xor
fcoms
mul
into
ret
sub
ljmp
sbb
mov
add
jo
xchg
popa
pop
pushf
and
sub
jl
mov
sbb
sub
and
enter
enter
enter
enter
out
xor
iret
scas
push
xor
and
push
cmp
out
dec
add
mov
dec
dec
sarl
adc
pop
xchg
mov
mov
dec
cwtl
cmpsb
jbe
mov
arpl
adc
pop
add
mov
out
pop
test
pop
push
fcom
pop
mov
pop
adc
mov
rorb
mov
jae
mov
lret
cmpsl
inc
sbb
aas
fwait
mov
mov
fiadds
lret
and
fidivrs
mov
filds
leave
inc
dec
repnz
adc
divl
call
stc
jns
stos
bound
mov
push
cmp
mov
in
popl
adc
inc
call
cwtl
and
sub
mov
andb
inc
popa
mov
aas
lahf
mov
jl
inc
or
das
sar
or
out
mov
push
cmp
or
add
ficoms
lret
xor
data16
cmp
repz
es
add
lret
nop
add
inc
cmp
cmp
mov
or
xchg
dec
cld
rol
add
shr
scas
testb
inc
jl
push
das
fisttps
mov
inc
xchg
ss
stos
jae
pop
ja
push
in
fs
lods
inc
cmpsb
lret
leave
mov
stc
adc
sub
sbb
es
jae
pop
fnstcw
jmp
aam
inc
and
loopne
loopnew
dec
in
add
imul
inc
dec
stc
mov
fucomp
pop
dec
mov
fimull
lds
popa
bound
dec
cli
movsl
mov
shl
ret
sbb
sbb
daa
mov
inc
push
scas
cltd
fadd
xor
lods
dec
repz
fists
or
sbbb
in
add
lds
mov
sub
pushf
arpl
cmc
lds
lds
push
inc
adc
pop
xchg
rep
xchg
jae
stos
in
xchg
shlb
lret
ficoml
dec
lea
push
es
inc
gs
sub
fs
enter
call
and
enter
jecxz
xchg
or
add
movl
dec
scas
add
pop
push
test
push
arpl
stos
dec
mov
cmp
lods
mov
jb
inc
fstps
fstl
cmp
shll
mov
push
jecxz
cmp
jp
cmpsl
rcr
lock
push
notl
sete
or
repnz
pop
lahf
cmp
inc
jbe
jne
daa
jmp
xchg
cmpsl
leave
call
inc
ret
add
or
lret
xchg
orl
arpl
mov
movsl
sbb
pop
data16
jle
bound
sbb
in
insb
dec
adc
xorl
rcrl
mov
and
fstpt
dec
sub
scas
out
lret
repnz
fstpt
jmp
aaa
sbb
adc
je
mov
jbe
dec
imul
sbb
dec
jo
jmp
push
cmpsl
repz
enter
cld
cmp
add
inc
cmp
jbe
std
test
repnz
mov
mov
ja
or
aas
xchg
or
test
push
lret
sub
out
arpl
aas
loop
xor
jge
sub
push
mov
ret
pop
arpl
lret
or
iret
addr16
fdivs
inc
xor
dec
mov
loope
push
xor
jo
pop
mov
inc
jmp
imul
sub
sub
mov
push
pop
cmp
dec
fcomip
les
inc
mov
and
sub
inc
repnz
aas
aad
fsts
sbb
inc
mov
cli
movlhps
mov
aas
xchg
dec
addr16
rcrb
cmp
pop
nop
movsl
or
mov
cmp
add
in
cmp
enter
add
lds
pop
out
jmp
sbb
inc
dec
push
jb
cwtl
sbb
aas
xor
and
xor
mov
test
xchg
and
mov
jmp
push
sahf
jo
push
xchg
dec
aad
sub
aas
fstpl
aam
lods
pop
add
xor
and
jo
push
scas
nop
cmc
ss
inc
mov
push
add
adc
mov
mov
push
lds
jns
addr16
mov
add
movsb
mov
inc
iret
lahf
adc
fisubs
mov
aas
pop
or
ja
les
jne
and
push
xor
dec
cmpsb
xchg
mov
fdivl
sub
or
push
jp
fildl
inc
push
xchg
es
jge
lret
pushf
in
bound
psllq
ret
pop
adcb
lods
sbb
inc
cmc
jecxz
jae
add
jecxz
add
xchg
movsl
xor
ret
leave
adc
pop
jp
fsubrp
sar
sub
add
bound
ret
ss
in
xor
and
inc
or
pop
inc
aad
and
inc
add
les
cmp
jne
test
push
popa
mov
aad
mov
loopne
push
icebp
adcl
sub
pop
lcall
add
push
mov
into
loop
lock
or
adc
sub
or
xchg
xchg
enter
pop
in
xchg
xchg
sbb
enter
sbb
test
ret
xchg
lea
adc
fisttpll
ret
pop
cmp
push
and
dec
pop
cmp
xor
pop
cmp
dec
dec
call
push
add
or
test
in
push
inc
mov
les
mov
pop
cmp
mov
xchg
push
xor
lcall
bound
lods
jmp
mov
mov
pop
daa
inc
aaa
js
mov
inc
lret
shll
insb
pop
mov
xlat
jbe
lcall
in
sub
pushf
lahf
xchg
addr16
mov
in
jmp
das
jle
out
in
out
in
enter
add
int3
lods
dec
je
jecxz
cld
lods
cmp
jae
fbstp
jbe
mov
sbb
rolb
and
and
js
aas
or
or
inc
imul
cmpsb
jo
adcb
xchg
mov
loop
dec
dec
rclb
mov
add
mov
inc
add
and
adc
mov
sbbl
data16
xchg
inc
inc
repnz
popf
push
mov
pusha
andb
mov
mov
lods
dec
cmpsl
adc
imul
push
fsubrs
push
jecxz
les
jmp
movsb
xchg
sub
ret
lods
mov
fwait
pushf
mov
aad
lar
int3
mov
sub
jge
inc
push
sar
hlt
add
push
mov
mov
jp
push
out
and
scas
or
arpl
xchg
cmpsl
sub
add
scas
pusha
sbb
jns
idiv
push
rcrb
or
add
ret
ret
jns
cmpsl
stos
and
jecxz
push
sbb
or
arpl
call
jle
xchg
cs
add
mov
enter
sbb
adcl
loop
jo
aas
lcall
roll
popl
ret
in
xor
fisubrs
fcmovbe
push
lds
icebp
inc
fisttpl
loopne
mov
lret
cltd
inc
fsubrp
cmpsl
daa
jl
xchg
ja
pusha
cld
or
xchg
movsb
pop
fdivs
ret
mov
sub
inc
add
lods
mov
in
int3
sarl
dec
dec
test
and
jmp
push
pop
test
add
gs
mov
cmp
push
mov
lret
fisubl
inc
imul
ret
lds
sub
jae
fldl
psrad
mov
popf
lret
mov
push
jno
push
xor
addr16
sbb
inc
into
add
ret
ret
test
inc
jbe
in
out
repz
or
and
push
mov
lds
inc
sub
in
pop
add
lods
inc
xor
push
adc
xchg
ret
lock
add
sub
shll
dec
push
into
lock
out
sub
jp
xchg
popa
sbb
leave
or
gs
ficoms
movb
lods
adc
add
mov
mov
iret
sbb
push
pusha
addr16
test
fcmovne
js
jnp
add
push
xchg
push
xchg
adc
push
int
fldl
outsb
enter
lret
xor
negl
stos
test
inc
add
xchg
push
push
and
dec
dec
aas
lea
aas
pop
and
out
aas
adc
push
add
sub
test
dec
out
jge
movsb
fisubrl
insl
jge
bnd
dec
mov
mov
or
sti
ss
lret
push
int
aas
clc
jo
cwtl
xchg
ja
mov
lcall
cltd
in
sbb
mov
inc
push
dec
mov
cltd
enter
cmpsl
push
not
mov
push
push
repnz
push
sub
call
scas
mov
pop
or
pop
cli
sub
xchg
mov
in
dec
sbb
sub
cmpl
mov
add
xor
xchg
movsl
push
mov
pushf
cwtl
cmpsl
pop
sub
jo
push
and
out
dec
inc
movsb
or
sbb
aam
dec
mov
aas
js
fcompl
push
or
fdivs
mov
ret
out
inc
add
leave
pop
mov
gs
loopne
addr16
cmpsb
out
lods
loope
repnz
fadd
mov
add
aas
jge
mov
fdivr
test
call
fucomip
test
or
jno
sete
dec
ret
bound
mov
aam
cmp
jnp
lret
in
ret
outsl
dec
loopne
mov
shlb
mov
inc
nop
call
sub
adc
mov
bound
flds
daa
aaa
data16
adc
cmpsb
sub
push
movlps
decl
add
pop
lods
lea
int
sub
jno
loop
ljmp
add
dec
mov
add
into
enter
dec
scas
mov
out
mov
mov
ret
je
int
les
mov
aas
inc
xchg
or
sbb
int3
or
mov
dec
movsb
repnz
dec
ret
jmp
je
leave
push
dec
test
pop
dec
test
fnstsw
loopne
mov
sbb
adc
rcrb
js
movsl
mov
dec
pop
push
sbb
inc
inc
pop
imul
shl
mov
jno
out
sbb
and
aas
push
jne
rcrl
add
inc
mov
pop
clc
xchg
push
add
in
or
iret
push
or
sbb
push
or
arpl
lahf
push
in
push
lret
fs
push
rorb
jecxz
cmp
cwtl
jecxz
sbb
lock
mov
push
sbb
and
push
jg
icebp
stc
pop
pop
scas
fsubrp
xchg
jecxz
add
xor
in
mov
in
push
inc
in
ss
loopne,pn
syscall
push
insb
lds
jae
aam
push
mov
imulb
and
dec
lock
jmp
cmp
mov
outsl
sub
arpl
fidivs
cmpb
addr16
push
add
adc
call
pusha
pop
psubusb
rcrb
and
mov
push
ss
into
push
dec
lods
in
xchg
call
dec
jmp
pop
push
add
push
dec
xlat
imull
mov
mov
add
pop
cmpsb
cmpsl
pop
lods
sbb
dec
add
and
ss
xor
out
ss
sbb
in
xor
repnz
xor
rcrb
inc
or
bt
and
sub
cld
in
sbb
xchg
mov
sub
adc
adc
jno
add
loop
emms
mov
inc
jae
mov
ja
and
and
insb
mov
lods
cmpl
mov
roll
stc
xchg
fldt
pop
push
fsubl
and
outsb
in
shrl
fucom
sub
shrb
sarl
fs
mov
jns
sub
adcl
push
das
loopne
data16
insl
pop
xchg
imul
pop
fidivs
stos
fisubrl
pop
lret
rcr
cmpsb
push
add
pop
bnd
imul
into
addb
add
outsb
mov
pop
lods
sub
ja
icebp
xor
cmpsl
repz
test
jns
mov
ds
xor
fcomps
loopne
xchg
mov
fimuls
push
push
call
ret
jbe
dec
gs
dec
mov
push
incb
inc
sbb
mov
test
push
cs
cmp
push
cmp
cmp
and
dec
call
cmpsl
aaa
clc
push
adc
sub
daa
pop
sbb
adc
inc
xor
mov
inc
cmpsl
mov
add
testl
rcrl
shll
enter
iret
sbb
and
aas
je
imul
mov
inc
pop
test
push
mov
pop
inc
ljmp
pop
stos
jmp
ds
or
push
add
jns
inc
enter
mov
sbb
pop
addr16
add
cmp
stc
cmp
aas
cmc
stos
or
push
or
mov
notb
lods
and
in
pop
mov
ret
pusha
or
pop
xchg
testb
jo
xor
add
sub
fmuls
negb
add
lods
nop
add
loopne
add
mov
sbb
sub
cwtl
pusha
add
push
pop
sbb
bound
shrb
adc
movsb
xor
push
mov
or
sub
jo
call
dec
inc
inc
adc
les
or
cmc
les
mov
into
bound
jp
adc
mov
pop
pop
inc
call
lods
rol
add
jmp
jae
mov
and
repnz
aas
lea
add
das
and
loopne
sub
or
filds
ja
data16
add
notl
adc
into
pop
inc
sahf
push
in
or
xor
test
jmp
adc
dec
mov
sub
add
inc
lods
mov
inc
pop
loopne
jnp
sub
sti
rcl
lret
xlat
insl
xchg
nop
faddl
pushf
stos
call
ret
dec
jmp
and
pop
mov
jmp
das
stc
fildll
jno
test
add
popa
fwait
cli
fcmovnu
setno
jae
insb
stos
sub
cmp
popa
inc
out
arpl
lret
adc
or
jecxz
mov
jnp
lretw
adc
mov
xchg
inc
push
and
pop
or
mov
sti
notb
les
pop
repnz
ret
pushf
or
fwait
mov
mov
add
lret
int3
push
das
adc
and
pop
mov
outsl
outsb
push
mov
mov
loopnew
push
and
pop
dec
pusha
push
adc
mov
movsb
ljmp
mov
mov
push
jecxz
test
xchg
fcoms
cmc
cmp
lock
dec
mov
sbb
cmc
idiv
xchg
sub
xor
loopne
and
testl
sti
push
xor
and
dec
inc
mov
out
lods
pop
ret
xorb
bnd
xor
imul
test
scas
pop
gs
sub
out
icebp
inc
orb
inc
ret
les
in
fadds
mov
fiaddl
or
test
rcrb
mov
bound
sbb
lods
adc
mov
shrb
negl
adc
pop
pop
pushf
xchg
push
push
jae
cltd
subb
cmp
rcrb
and
mov
in
nop
inc
cmp
xor
mov
adc
dec
inc
in
mov
push
repnz
push
cmp
icebp
out
add
jae
enter
ret
or
pop
push
push
adc
stos
arpl
rorb
adc
into
dec
push
in
subl
sti
xchg
inc
leave
andb
js
fwait
jb
shlb
call
pusha
push
iret
fnstcw
mov
dec
mov
jge
or
mov
xor
push
es
cmpsb
mov
loopne
shlb
xor
and
cmp
xor
inc
lods
popa
cmpl
add
xchg
and
lods
stc
xchg
and
aam
pop
rorl
ds
sahf
loopne
add
scas
mov
bound
inc
stos
pop
leave
mov
mov
fists
add
lahf
mov
call
sbb
mov
xlat
repz
fcmovb
push
repz
popa
outsb
push
cmp
pop
push
jl
arpl
add
stos
aam
outsb
xlat
stos
popa
inc
mov
pop
sub
add
add
and
xlat
dec
push
fistpll
mov
inc
and
mov
pop
mov
enter
adc
cmpsb
adc
jecxz
in
aas
iret
shrl
cmpsl
aaa
in
push
dec
pop
adcl
shll
jbe
movsl
adc
imul
xor
aaa
and
int3
inc
lock
faddp
scas
sbb
repz
jecxz
ljmp
jns
into
jmp
add
cli
and
pop
jnp
pandn
hlt
cmpsl
inc
daa
lcall
mov
pop
lcall
inc
push
test
dec
lods
pop
xorl
sub
cmp
shll
jmp
aad
push
insl
xchg
loop
push
loop
sbb
sbb
fs
into
movsb
and
loop
sbb
shlb
mov
imul
push
xchg
adc
ljmp
out
icebp
std
or
cli
movsb
repz
add
js
jae
fidivrs
ss
pop
repz
xor
xchg
rcr
cmp
inc
nop
je
dec
pop
sub
cwtl
into
bound
jnp
jnp
jmp
xor
aas
pop
jp
lret
cmp
mov
insb
mov
mov
jg
dec
popa
adc
sbb
out
xchg
cltd
or
shlb
in
inc
push
sbb
lret
ss
leave
mov
ret
add
lret
enter
jmp
popa
fisubs
push
test
push
cmp
fists
pop
loop
mov
orb
cmp
jbe
je
pop
push
push
scas
enter
out
pop
sbb
fmul
and
stos
mov
and
push
and
cli
insb
mul
mov
sub
imul
js
mov
xor
loop
cli
movsl
cmpsb
test
addr16
les
rdmsr
frstor
rolb
inc
iret
sahf
imul
lods
testb
data16
fstl
adc
fldl
aas
sbb
push
idiv
shrb
sbb
add
enter
dec
mov
cmpsl
xor
imul
dec
mov
and
pop
adc
cli
cltd
inc
shll
nop
clc
mov
call
les
test
mov
lret
lcall
xchg
or
push
lods
fs
inc
stc
pop
mov
push
fldl
sahf
pop
mov
xor
sub
jecxz
repnz
dec
cmp
fsubr
mov
outsb
das
inc
dec
add
inc
mov
lret
fbld
out
push
and
dec
loope
sub
push
sub
push
lret
inc
mov
bound
sarl
jo
lds
sbbb
push
lods
shll
cmpsb
ja
inc
lods
into
int3
push
cli
insb
xor
mov
adc
pop
inc
int
push
je
push
jbe
add
iret
inc
iret
aaa
xor
sahf
or
fsubrl
sbb
dec
mov
xor
std
test
jmp
dec
or
cli
mov
sub
cmp
mov
ret
push
xchg
inc
nopl
sub
cli
mov
adc
jge
imul
push
dec
push
fildll
data16
mov
cmpsl
std
pusha
mov
jno
mov
dec
ret
and
fistpll
outsb
and
roll
in
rorl
shrl
data16
sbb
sub
xchg
or
ret
and
daa
lds
push
xor
xchg
or
mov
mov
pop
ss
inc
insb
aam
xchg
mov
sti
bound
adc
lods
fdivp
je
xor
fs
iret
imulb
push
hlt
sub
ret
cmp
es
jecxz
fidivl
shr
fimuls
imul
lahf
jmp
push
clc
mov
aaa
in
aas
sbb
add
divl
decb
push
cmp
or
xor
and
or
imul
jns
inc
pop
adc
aaa
add
mov
push
imul
add
mov
aas
ret
mov
dec
movsb
and
out
push
sbbb
out
in
ret
idivl
jge
add
roll
in
or
mov
mov
jle
daa
aas
push
popa
mov
add
nop
dec
push
add
addb
in
xor
fcoms
aam
sub
and
ret
add
xchg
inc
mov
push
push
push
or
or
xchg
jge
xchg
and
mov
inc
aad
push
ficomps
add
xor
or
out
mov
rolb
sbb
pop
jb
xor
and
bound
sub
sbb
insb
cmp
mov
mov
je
and
mov
in
loopne
lea
cmp
mov
sub
mov
lret
test
jmp
lea
jnp
loop,pt
mov
jmp
jge
into
mov
and
mov
call
icebp
xchg
and
popa
xchg
daa
stc
test
adc
xchg
std
cmpsl
ja
mov
fimull
in
repnz
decb
lret
and
jp
and
pop
push
cmp
or
data16
pop
and
inc
sub
xchg
push
lret
stos
push
rol
imull
ja
out
fcompl
cmp
leave
and
sub
addr16
scas
xor
stos
mov
jo
out
lret
es
lods
push
or
mov
mov
lret
sub
mov
int
faddp
into
insl
push
sbb
jnp
xchg
pop
fld
fisubs
movsb
adc
jge
lret
adc
xchg
jb
push
mov
inc
bound
mov
cmpsb
xchg
rorb
out
inc
or
daa
rcrb
push
add
mov
sbb
vrndscalesd
dec
sarb
inc
div
add
jle
cli
fistpl
push
insl
cmp
leave
cld
repnz
ljmp
popa
movsb
arpl
fadds
jb
aas
int3
push
das
cmp
mov
inc
repnz
dec
in
aas
int3
add
pusha
icebp
mov
pushl
sub
jge
out
sub
movsb
cmpsl
push
ret
xchg
adc
test
cmc
test
iret
int3
out
je
loop
xor
xchg
mov
aas
nop
push
mov
push
iret
jno
cmp
repz
rcrb
adc
jmp
int3
xor
sub
mov
dec
add
mov
fcomps
out
pop
and
imul
xor
xor
stos
aaa
sbb
mov
pushf
mov
xor
test
cli
and
mov
into
sahf
or
add
jne
push
ja
mov
lahf
mov
lods
divb
fisubs
cwtl
push
add
adc
jo
lret
lret
adc
xchg
xor
andb
stc
push
mov
mov
sahf
ss
iret
push
add
bound
or
dec
lds
leave
inc
iret
mov
testb
xor
repz
mov
push
scas
mov
sub
ret
stos
lods
mov
inc
ret
push
je
lods
dec
imul
inc
or
hlt
hlt
pop
ret
scas
inc
ss
fidivl
mov
imul
sub
cmp
popa
outsl
xor
and
in
push
int3
stos
hlt
jne
mov
push
sub
mov
jb
dec
mov
dec
repnz
and
push
movsl
push
mov
pop
loopne
sub
sub
mov
inc
andb
xchg
sbb
mov
mov
dec
dec
sub
sub
push
popf
jo
adc
fldenv
sarl
push
xchg
cmp
mov
adc
mov
vfnmsub132sd
mov
arpl
mov
mov
mov
dec
push
push
xor
and
aas
mov
jnp
lods
inc
push
adc
xor
sbb
in
inc
ja
mov
iret
fsts
xor
xchg
inc
fiadds
incl
outsb
adc
or
hlt
add
sbb
js
dec
or
stos
mov
popa
mov
push
mov
jecxz
cs
cld
add
mov
fisttps
popf
dec
das
daa
psrad
or
mov
daa
mov
mov
testb
js
jecxz
subb
dec
aad
and
sbb
bnd
sarb
xor
fs
inc
lret
repnz
pop
lods
cmp
movsb
jno
rol
jae
dec
sahf
mov
dec
loope
aas
arpl
add
sub
inc
lods
push
data16
pop
xor
mov
mov
lods
cld
add
popa
pop
je
and
cmp
cmp
jl
cs
mov
pop
xlat
sbb
clc
and
push
mov
pop
test
in
push
sub
inc
inc
bound
xchg
mov
call
insl
fnstenv
bound
inc
sub
lods
int
out
and
jo
lahf
outsb
add
or
aaa
and
imul
dec
xor
daa
cmp
mov
fbstp
add
mov
xor
mov
push
jae
or
mov
sbb
sub
pop
cmp
add
roll
mov
popa
fscale
repnz
jo
popf
jnp
lea
xchg
mov
sub
fcom
mov
stos
fstpt
les
cli
loop
in
lcall
pslld
popa
xchg
adc
cmc
bound
imul
xchg
push
test
and
cmp
data16
mov
repnz
add
cmpsl
add
lcall
cmp
int
lods
test
leave
mov
dec
mov
pushf
inc
gs
sub
mov
test
int3
add
aas
pop
icebp
mov
sub
mov
sbb
push
call
shr
cmpsb
adc
jo
xor
xchg
pop
incb
sti
test
sub
jg
xchg
mov
or
or
or
add
repnz
aas
dec
push
vpshufhw
sbb
jp
lods
lods
push
push
push
daa
xchg
fisttps
scas
inc
fs
stos
rorb
pusha
jecxz
repz
mov
test
daa
add
in
xor
in
lds
shrl
pop
push
lds
out
scas
lds
ret
lcall
jo
jmp
fists
call
jp
push
jo
inc
mov
daa
pop
ss
out
loop
sub
cld
xchg
ret
jae
in
mov
xchg
and
mov
adc
mov
enter
jp
sbb
mov
jno
aas
sub
loopne
loop
enter
xchg
push
loop
mov
fucomp
xor
out
loop
fs
jecxz
aam
aaa
scas
mov
insb
lods
ja
enter
in
loop
fs
jecxz
loop
daa
mov
enter
inc
loop
sub
mov
pop
mov
pop
mov
mov
mov
jge
pop
shlb
shll
sub
sub
mov
hlt
icebp
mov
xor
cs
jne
outsl
sub
std
inc
jae
in
cwtl
repz
dec
pop
stos
ljmp
js
push
xor
pusha
push
xchg
push
jecxz
sub
ficoms
and
add
fdivs
shrb
mov
leave
adc
ret
and
mov
pop
push
xchg
pop
and
out
sahf
je
sbb
dec
pop
les
aam
movsl
in
jle
ret
mov
dec
mov
clc
lret
popf
int
rolb
jle
pushf
xchg
sub
sub
icebp
rorb
decl
loop
push
rorb
in
ljmp
cmp
fdiv
loop
in
aad
loop
sub
ret
jmp
rol
mov
xchg
add
cs
sti
loop
jmp
ljmp
shr
popf
pop
sub
lock
loope
repz
xchg
mov
or
shl
cmp
mov
mov
loop
lock
lcall
out
mov
call
loop
push
bound
pop
leave
out
gs
jno
leave
xor
pop
loop
outsl
inc
js
cld
pop
loop
jmp
notl
xor
adc
aam
sub
imul
ror
addr16
mov
out
data16
mov
fadd
add
in
hlt
in
sbb
push
repz
je
mov
ret
mov
mov
fldcw
push
stos
dec
sahf
cmpsb
aam
lds
mov
out
test
mov
dec
movl
sbb
fdivrs
in
in
loop
lds
les
loop
mov
push
push
out
jp
xchg
inc
ret
cmp
mov
jmp
jb
or
or
and
xor
insl
mov
dec
lret
test
and
es
punpckldq
inc
lods
jl
adc
int3
fmuls
imul
je
push
ret
je
dec
icebp
mov
xchg
dec
add
xchg
pop
ror
sub
pop
int3
mov
push
dec
fsub
leave
inc
dec
sub
test
lds
lret
loopne
ret
dec
fistl
dec
xlat
push
int
les
xchg
in
iret
cmpsb
popf
out
scas
lret
mov
loope
and
jne
decl
fimuls
loopne
xor
int
cmp
imul
add
jnp
xchg
xchg
jne
fwait
popa
das
jae
inc
cmp
mov
inc
arpl
mov
add
fidivs
ja
ja
fsubr
adc
cmp
out
sbb
adc
arpl
mov
sbb
pop
insb
lock
push
ja
jecxz
mov
mov
sub
aad
rol
rorl
dec
int
mov
sbb
mov
lret
inc
or
jp
push
das
mov
mov
sub
sub
outsl
jbe
lods
insb
adc
in
lret
fucomp
insb
lods
lods
sbb
mov
and
cmp
nop
sarl
movsl
dec
mov
inc
enter
outsl
push
push
mov
sub
je
popf
sbb
bound
push
inc
push
xorl
push
ja
jno
lea
lods
popf
call
je
enter
xchg
ret
xor
lods
mull
push
scas
ret
and
loopne
dec
sub
push
sub
or
iret
xor
loopne
lret
ficoms
ljmp
imul
or
xor
ret
sub
repz
aad
in
arpl
jl
pop
xor
cld
or
frstor
cmp
jmp
pusha
mov
sub
in
jbe
sahf
mov
cmpb
iret
jno
mov
cmp
push
int3
stos
adc
mov
add
sub
and
pop
je
je
les
rol
rcr
sub
sbb
insl
sub
adc
and
jno
jb
sbb
mov
push
mov
int
push
in
fidivrs
cmp
enter
dec
leave
jne
and
aad
lods
aaa
fsubs
push
jmp
sbb
cmpsb
cmp
int
cmpl
adcb
dec
push
push
shl
jae
fwait
dec
dec
repnz
cmc
lret
addr16
mov
sub
mov
stc
mov
fadd
add
testb
loop
int3
jmp
and
pop
add
jo
mov
mov
or
stos
mov
mov
mov
nop
call
daa
jo
jmp
xor
shrl
in
daa
mov
lods
mov
ret
inc
int3
adc
xor
aad
pop
mov
insb
xor
jge
in
imul
loope
iret
inc
mov
stos
add
and
jg
cmpsl
mov
icebp
loop
xchg
imul
pop
popa
stc
scas
es
repnz
dec
adc
insb
test
push
sbb
xlat
inc
aam
fcmovnbe
dec
xor
std
sbb
push
je
pop
aad
stos
add
inc
mov
stc
arpl
xor
add
xchg
sarl
lock
lods
sub
dec
sbb
jb
or
ss
xor
stos
les
fwait
andl
push
shll
mov
xchg
add
push
push
jp
adc
loop
inc
lods
repnz
ljmp
scas
sahf
lock
add
cmp
fs
div
mov
in
enter
hlt
add
popf
inc
push
add
mov
lret
loope
fildll
jecxz
push
add
add
cltd
mov
push
inc
shrl
leave
adc
push
inc
mov
ret
fdivrl
push
or
out
int3
mov
jg
adc
mov
add
popf
test
jns
movsb
popa
or
push
fcoms
aaa
repz
add
cli
cmp
into
pop
sti
mov
rcr
cmp
push
outsb
leave
xchg
mov
and
xchg
cmp
xchg
push
jns
sbb
leave
pop
inc
push
add
xchg
dec
sub
xchg
fld
add
mov
and
mov
add
pop
outsb
loopne
popa
mov
cli
loopne
dec
push
mov
ja
lods
in
xor
adc
and
dec
addr16
stos
and
inc
out
and
or
inc
dec
sti
cmp
jo
aas
cmp
pop
lcall
mov
pushf
sub
repnz
enter
ja
mov
dec
mov
lods
lds
inc
sbb
insl
test
jecxz
sub
inc
push
xor
loopne
push
xor
adc
popf
adc
into
inc
daa
pop
outsl
lea
test
mov
call
or
loopne
cld
insl
sbb
inc
cmp
stos
xor
loope
jo
into
test
mov
add
ljmp
data16
out
fsubr
mov
loop
mov
sub
call
add
mov
lahf
fdivrs
pushf
add
aad
cmp
aas
pop
aas
jg
pop
pop
push
inc
mov
push
test
dec
stc
inc
mov
stos
cmp
mov
add
add
inc
push
xchg
jmp
sbb
sub
rcrl
call
mov
add
and
test
jp
sbb
ret
jo
dec
sar
aad
or
je
icebp
dec
xchg
rorl
enter
sbb
movsl
cs
dec
decb
sbbl
and
movsl
jbe
aas
rclb
sti
outsl
pop
orb
fwait
scas
and
add
mov
add
inc
movsb
xchg
push
add
mov
sbb
ss
mov
or
mov
pop
push
inc
ret
and
and
push
xchg
popf
mov
out
test
inc
lods
and
andl
jno
mov
cwtl
mov
push
jl
hlt
jno
les
ret
mov
mov
sbb
push
pop
fbstp
jge
out
inc
inc
lea
mov
int3
pop
call
inc
and
je
push
clc
mov
mov
xchg
js
call
add
shll
jae
popl
inc
mov
push
inc
sub
fsubrl
les
pop
sub
repnz
mov
addr16
lcall
pop
dec
inc
push
icebp
stc
mov
ljmp
dec
pop
sub
mov
ljmp
std
dec
daa
bound
out
pop
xor
scas
pop
push
adc
inc
jae
and
lods
xor
xor
and
repnz
movb
fistpl
push
jmp
mov
xchg
ret
fidivrl
lock
ret
push
fimuls
push
js
cmc
mov
bound
dec
lods
pop
or
lock
fs
xor
mov
gs
push
lcall
pop
sub
push
aad
mov
js
ja
imul
mov
fsubp
sub
push
lret
lods
dec
je
or
and
fidivs
cltd
pusha
jno
adc
paddsb
xor
inc
rol
push
arpl
stc
addr16
test
test
sbb
push
popf
rorl
lret
dec
sbb
push
mov
adc
test
je
push
jne
add
pop
push
cwtl
xor
loope
sbb
ficoml
jl
inc
xchg
push
into
pop
push
cmc
jp
push
adc
cmpb
dec
roll
xchg
sub
jmp
repz
sbb
test
mov
inc
je
pcmpgtb
push
aaa
loopne
xchg
outsl
lock
and
into
push
jecxz
jae
mov
mov
lret
dec
sub
mov
lahf
push
inc
push
ret
jl
cmp
ret
push
roll
rolb
lret
pop
lods
cltd
cli
in
aad
shll
adc
sbb
push
cltd
push
out
mov
adc
or
adc
js
pop
pop
dec
imul
fsubr
pop
pop
or
mov
and
cli
insb
out
xor
push
push
lock
cmpsb
neg
add
stos
mov
pushw
pusha
in
daa
cmc
and
lcall
xor
inc
mov
xchg
xlat
mov
outsb
inc
mov
lea
call
addr16
into
addb
sbb
hlt
cli
inc
push
mov
jmp
mov
cmp
pop
xor
cmp
dec
dec
jecxz
andb
mov
pop
or
in
inc
inc
pop
je
xrelease
daa
push
mov
jmp
shlb
adc
xchg
dec
mov
aad
mov
stos
lds
ds
adcl
int
sahf
cwtl
out
js
mov
xchg
dec
fsubr
jb
jne
xlat
rcl
inc
adc
dec
loop
dec
pushf
imul
sub
push
mov
sub
mov
xchg
pop
cmp
addl
mov
mov
fldenv
mov
pusha
xor
pop
jmp
movl
lcall
stc
repnz
inc
cltd
cmp
xor
xchg
lret
jae
mov
mov
addr16
jg
pop
les
dec
jne
ret
mov
adc
push
clc
lods
and
lahf
sbb
rolb
cmp
inc
sub
sbb
fisttpll
sub
inc
pop
or
aaa
jecxz
add
call
sbb
fpatan
fisubrl
cmp
mov
jmp
paddw
out
vcvttsd2si
add
adc
das
sbb
jno
ljmp
and
aad
leave
and
ficomps
pop
in
push
lahf
imul
xor
adc
pop
outsb
idivl
adc
les
xor
clc
enter
lahf
sub
test
mov
cmp
mov
add
inc
mov
add
inc
daa
pop
lods
movl
mov
enter
cmp
data16
lea
push
xchg
xlat
xchg
fs
fistpll
ss
aas
mov
jge
pop
xor
inc
loop
xchg
arpl
les
out
mov
cmp
ret
dec
mov
push
jl
mov
xchg
jno
ret
das
shll
mov
jns
inc
sub
push
push
movsb
cmp
imul
ficomps
shr
js
cld
or
fisubl
lret
mov
int3
push
jne
sbb
icebp
negb
push
xchg
arpl
daa
adc
lods
mov
inc
xlat
pop
sbb
lea
sti
dec
loopne
push
push
sbb
mov
ret
cmpb
xchg
add
fnsave
pop
pop
les
lods
faddl
movntps
xor
xor
mov
xchg
mov
pop
sbb
push
call
cli
push
mov
xchg
in
fsub
mov
mov
push
xlat
or
ss
pop
push
mov
pop
jb,pn
fcomps
test
aas
xchg
cmp
sahf
pop
cmc
repnz
jmp
or
pop
arpl
daa
leave
dec
mov
pop
jbe
mov
lret
fwait
mov
push
shll
stos
and
js
imul
rcrb
pop
leave
mov
sbb
stc
cmp
dec
fdivp
mov
stos
fildll
mov
inc
mov
gs
pop
inc
into
xchg
decb
xchg
push
push
faddl
mov
mov
out
popa
aas
pop
cwtl
jmp
lahf
add
repz
push
fs
push
enter
fstpt
add
ja
xor
icebp
sub
or
fstpl
jge
inc
insb
lea
sub
inc
mov
or
add
fdivl
inc
jecxz
in
hlt
inc
out
pop
xchg
jb
mov
xchg
dec
std
dec
or
mov
mov
test
popa
sub
ss
int
or
push
fdiv
sub
pop
sub
pusha
sub
pusha
or
mulb
and
jle
pusha
and
lret
addb
sbb
cld
mov
aaa
stc
lods
mov
ja
xchg
imull
bound
mov
or
inc
dec
add
fisubrs
pop
mov
mov
outsl
inc
ja
addb
lret
outsb
fimuls
inc
fsub
push
mov
dec
ret
inc
iret
int
mov
sub
push
push
jne
push
mov
imul
push
jp
add
inc
shll
xor
lds
lret
cltd
sub
inc
in
shl
dec
jb
into
sarl
div
dec
lcall
mov
xor
fcmovu
jae
push
or
cmc
dec
inc
sbb
lea
icebp
into
shll
icebp
dec
rorb
aaa
add
mov
loope
icebp
push
in
add
lods
and
and
fisubrs
inc
pop
lock
inc
xchg
ss
push
call
jmp
mov
cld
mov
dec
lds
xchg
sahf
lock
mov
cld
vunpckhps
pop
xchg
orb
ja
lock
loopne
mov
cmp
add
xlat
iret
cld
adc
and
mov
xor
sbb
sbb
test
fcmovb
shr
test
push
mov
xor
jge
jns
iret
adc
rcl
sarl
inc
addr16
adc
aas
into
adc
inc
inc
jo
cmpsb
mov
ret
out
aas
xchg
repnz
xchg
ljmp
popf
stc
push
roll
popa
out
jg
loop
xorl
pop
cwtl
movsb
inc
fisubs
ljmp
jae
dec
js
dec
sbb
mov
aaa
data16
insl
pop
xchg
inc
push
test
into
and
outsl
xlat
pop
in
loopw
mov
add
sbbb
or
push
shll
jo
xor
xchg
lcall
insb
cmpsb
lea
inc
lret
pushf
xor
push
mov
sahf
andl
adc
mov
ds
shll
mov
dec
into
fistps
test
add
cmp
push
call
sub
out
fmul
xchg
fsubrs
adc
jmp
add
jecxz
jb
dec
or
mov
sub
push
test
shll
pop
or
and
jo
cmp
aas
mov
data16
and
cmp
ret
addr16
insb
pop
jb
fadd
sbb
lret
dec
pop
pop
pmullw
jae
rcll
jecxz
dec
leave
and
cmpsl
cmp
mov
stos
inc
stos
in
or
jo
sub
pop
or
aam
orl
pop
xchg
out
loope
out
imul
or
jmp
or
lods
ds
pop
das
jnp
popf
inc
push
mov
int
inc
lahf
repnz
lret
shll
xchg
mov
pop
into
inc
mov
loop
lds
inc
daa
test
das
inc
andb
out
in
mov
insb
clc
aam
or
je
and
and
jge
test
mov
inc
push
mov
adc
xchg
or
cmp
stc
out
xchg
out
mov
movsl
mov
sarb
les
fsts
ficomps
mov
or
jbe
stc
add
hlt
addr16
add
repz
test
loopne
loopne
clc
sahf
stos
pusha
cltd
notb
xchg
pop
cltd
notb
adc
ds
push
lcall
jno
jb
cmp
jmp
pop
in
cli
shrl
iret
icebp
xor
mov
pushf
rclb
add
ja
repz
fsubl
clc
andb
je
jecxz
lret
lahf
inc
and
pop
es
jb
in
ret
sbb
add
shlb
lods
bound
pop
in
and
and
xchg
lds
icebp
imul
movsb
pop
or
jmp
jb
jo
jnp
xchg
clc
adc
add
fwait
lret
rorl
lock
jmp
xchg
add
dec
and
les
aam
inc
push
add
aas
rorb
icebp
jge
in
cmpsb
test
das
in
fdivp
push
or
aas
adc
pushw
scas
sub
shr
das
cmp
or
out
subl
push
and
fdivrp
push
inc
and
mov
push
insb
sub
dec
lods
and
xchg
movsl
push
xlat
inc
push
jb
ret
jae
push
cmp
test
xchg
in
mov
xor
outsb
insl
cmp
and
ret
sub
rclb
push
mov
add
jp
mul
jno
xchg
fdivs
cmc
arpl
rol
mov
dec
inc
sub
pop
in
lret
mov
leave
pop
jae
xor
mov
stc
jbe
sahf
enter
jb
mov
jo
shll
out
cwtl
mov
jbe
in
arpl
mov
push
push
outsb
mov
lods
dec
cmpsb
ss
add
jb
in
clc
ja
or
mov
dec
pop
or
inc
dec
dec
push
leave
movsb
nop
dec
mov
out
aas
in
mov
mov
aam
in
mov
lds
scas
mov
push
cmp
je
inc
and
jg
push
jecxz
pop
aaa
leave
into
aam
push
push
popf
push
xchg
leave
jns
dec
js
mov
movaps
mov
mov
mov
paddq
aas
push
pop
cs
fiaddl
push
aas
sub
xchg
adc
ret
jo
mov
xchg
fsub
xchg
jle
push
ljmp
push
adc
out
push
mov
sub
push
movsl
sub
das
push
push
prefetch
sti
in
jg
sahf
xchg
sub
je
xor
jge
sub
or
test
cmp
ss
test
ret
sbb
mov
jnp
test
jns
out
jb
cmp
xchg
mov
jecxz
xor
stos
jno
xchg
jecxz
push
xlat
adc
mov
repz
test
push
shll
xchg
loopne
cwtl
lods
mov
sub
adc
aas
or
mov
jo
or
push
mov
jmp
in
push
jecxz
inc
ss
xor
cltd
push
in
mov
dec
sub
inc
xchg
mov
sbb
or
cmc
push
add
testl
jne
mov
push
sub
jecxz
dec
fmull
or
pop
inc
adc
push
pop
jbe
jbe
outsb
lods
mov
out
mov
and
je
test
push
andl
pop
rcr
fsubrs
mov
sub
test
cmpsb
or
out
mov
mov
int
lea
aad
inc
mov
idivl
jo
ljmp
lret
dec
sub
imul
xor
xor
dec
mov
cmp
mov
loopne
sub
sub
fisttpll
inc
cmp
inc
mov
xchg
mov
inc
inc
lret
jno
fisttpll
push
cltd
pop
xchg
and
lahf
fadd
sbb
jno
cmp
fsubrs
adc
les
and
ret
repz
sarl
push
rol
xchg
fs
orb
test
and
sbb
lea
daa
and
mov
adc
sub
inc
aad
add
mov
cmp
jmp
dec
andb
sub
pop
gs
lods
mov
dec
mov
and
cmp
cld
lods
cmp
ja
and
lret
mov
ja
loopne
and
dec
xor
dec
mov
inc
fisubs
notl
insl
test
movsb
add
aaa
mov
outsb
and
sub
insb
cmp
push
inc
xchg
push
stc
and
das
xor
daa
cmp
ds
loop
aas
adc
arpl
add
adc
cmovl
mov
push
pop
sbbb
lods
inc
xor
retw
add
and
add
lret
mov
dec
and
ret
ret
or
ss
and
lcall
dec
cmp
pop
popf
or
loop
jae
cmp
push
notb
xchg
je
loopne
mov
dec
mov
jns
std
ja
pushf
rcll
xor
mov
xchg
enter
in
pop
xor
jno
push
ljmp
add
insl
bound
sub
xor
add
jne
fdivrs
outsl
push
jo
jmp
popa
outsb
jne
cmc
pop
dec
push
inc
shrb
xchg
movsl
xor
adc
xchg
add
lods
int
leave
inc
and
shlb
inc
inc
fisttps
loop
lea
push
fistl
adc
fdivr
ret
repnz
or
inc
je
mov
or
dec
sub
xchg
imul
stos
test
jp
pop
adc
movsl
jge
rclb
lods
subb
inc
inc
shlb
xchg
inc
sub
js
call
sub
and
lods
fidivrl
push
adc
imul
js
jno
fisubl
pusha
int3
repnz
inc
les
push
les
add
mov
adc
jne
fisubs
add
data16
dec
dec
jno
cmpb
incb
test
movsb
repnz
push
stos
pop
xchg
sbb
mov
and
push
aaa
jmp
enter
imul
sub
ljmp
or
pop
jns
push
notb
push
jne
inc
pop
imul
into
int3
movsb
dec
and
inc
out
stc
shufps
jno
xor
xchg
repnz
lods
clc
repnz
xchg
lret
jb
decb
daa
mov
cmc
cltd
jbe
shlb
faddl
gs
jno
dec
push
loopne
mov
cmp
sbb
sub
add
movsl
mov
sub
fdiv
dec
mov
xchg
jbe
fldenv
mull
mov
fldenv
icebp
push
push
push
adc
xor
xchg
aaa
movsb
divl
int3
sti
std
jae
sbb
xor
es
les
movsl
shll
adc
lea
add
jg
enter
repnz
xchg
stos
xorl
movsl
out
sti
jbe
push
cmp
mov
inc
iret
pop
jge
cmp
leave
mov
xchg
inc
leave
and
jbe
add
shl
pop
inc
loopne
ss
lret
sbb
adc
push
roll
dec
lcall
dec
pop
pop
sub
add
sub
push
push
and
bound
fildl
pop
add
sbb
sub
adc
ljmp
sub
dec
outsb
icebp
pop
and
xchg
popa
lret
sub
fisubs
inc
popw
fcmovnu
inc
sub
pop
xor
outsb
aas
sahf
insl
add
mov
dec
test
sub
cwtl
dec
add
inc
push
pop
inc
pop
adc
lock
mov
in
mov
push
je
push
std
pusha
sub
push
int3
jno
rcll
ret
dec
push
sbb
cmpsb
push
xor
dec
xchg
call
cltd
adc
push
fiaddl
mov
mov
insl
hlt
dec
lds
ficoms
rclb
sub
mov
movsb
xor
test
mov
cwtl
daa
stc
push
push
aad
push
mov
jns
cmp
stos
enter
dec
mov
xchg
adc
dec
arpl
repz
push
or
xor
mov
sti
lods
cmp
fldt
cmpsb
jg
add
into
inc
add
outsl
stos
or
out
mov
stc
fiadds
and
rorl
dec
xor
fldenv
adc
pusha
insb
popl
push
ret
int3
cmp
jb
or
inc
repnz
inc
sbb
fwait
in
sub
fsubl
add
pop
pop
inc
aas
fsubrl
or
dec
mov
push
loop
dec
add
mov
jge
lret
cmpsb
pushf
mov
cmp
cmp
rolb
add
xchg
inc
pop
cmp
addr16
xchg
pop
jge
fidivrl
dec
mov
sub
sbb
push
ret
daa
inc
jae
addb
cltd
jbe
sub
data16
je
or
addr16
adc
enter
stos
cs
xor
jne
add
sbb
mov
and
or
jns
popa
mov
pop
lahf
push
cmpsl
sbb
lret
je
push
jnp,pt
xor
ret
loop
aam
jmp
cmp
jmp
cmp
inc
push
ret
and
fdivl
inc
push
cmpsl
xor
xchg
insl
adc
ret
movsl
lea
lds
and
insl
push
xor
push
push
movsb
inc
roll
xor
inc
cmc
mov
dec
sbb
and
or
ljmp
lods
xchg
call
push
movsl
pop
mov
int
jecxz
jmp
cltd
inc
jae
sub
jecxz
in
imull
sar
sbb
sub
inc
enter
mov
mov
or
sub
dec
int
cmc
sbb
and
out
push
mov
jmp
lret
dec
mov
jb
fdivrs
pop
and
inc
dec
inc
cmp
insb
sahf
out
das
sub
lods
adc
inc
jno
outsb
xchg
dec
test
mov
ficoms
fwait
adc
xchg
inc
pop
ret
and
mov
sarb
adc
cmp
leave
mov
push
out
xchg
and
pop
inc
aas
cmp
pop
add
insl
repz
addr16
jbe
lea
sub
xchg
shrl
or
sbb
icebp
cmpsb
sub
lds
les
inc
fcoms
xlat
pop
inc
cmpsl
add
mov
sti
fldenv
cmpsb
pop
push
lret
cmp
call
jnp
roll
dec
push
sti
icebp
stos
fisubrs
inc
adcl
push
xchg
add
mov
test
ret
sbb
cmpsb
add
fistl
add
test
mov
and
push
fimuls
inc
jo
inc
dec
and
cmp
pop
adc
jnp
lods
xchg
cld
adc
push
arpl
adc
add
fcomi
mov
das
xchg
push
in
xor
aas
jbe
arpl
repz
leave
and
xor
mov
test
dec
ljmp
cld
in
inc
mov
cli
mov
dec
mov
and
add
adc
and
repnz
pop
mov
inc
mov
xor
sbb
rolb
sub
loopne
stc
push
scas
ret
mov
loop
fisttps
lret
inc
push
iret
ss
fidivs
in
mov
ret
lods
inc
mov
mov
pop
repnz
faddl
into
or
push
jg
mov
repz
mov
movsb
xchg
lret
out
pop
sub
enter
push
sub
and
pusha
fistpll
or
and
fadds
into
mov
jmp
push
sub
fmul
fistl
hlt
xchg
repnz
xchg
jle
push
testb
inc
or
fidivs
data16
pop
jmp
mov
jae
pushf
lods
addr16
mov
inc
pop
ljmp
cltd
cmc
lret
popa
dec
jnp
imulb
fldl
jb
xchg
out
mov
mov
or
adc
adc
or
sub
lea
popa
add
subb
mov
mov
rol
mov
inc
and
inc
mov
shlb
inc
ljmp
andnps
push
or
pushf
xor
imul
int
nop
and
xchg
sbb
fidivrs
mov
cmpsb
aas
sub
ret
fidivrs
xlat
shlb
leave
mov
mov
les
stos
sub
adc
pop
sti
jg
jle
and
fsubrl
mov
mov
inc
je
sub
dec
xor
mov
sbb
push
dec
sbb
mov
xlat
loope
push
rcll
sar
ljmp
mov
je
sbb
mov
lret
sub
fadds
aas
pop
adc
xchg
arpl
lret
pop
sahf
xchg
cmpsb
les
fucomi
mov
xor
sbb
dec
addr16
shl
lret
sub
lds
aad
mov
inc
cmpsl
push
or
jne
insl
cli
add
jl
inc
scas
rolb
and
pop
cmpsl
adc
push
mov
xchg
roll
and
push
in
mov
add
stc
xor
test
xor
pop
in
jne
test
push
sub
sbb
cli
lds
mov
and
icebp
and
push
dec
lods
mov
xchg
in
inc
dec
or
sbb
dec
inc
test
inc
adc
sbb
int
nop
inc
cltd
pop
sbb
inc
sbb
data16
lret
or
cvttps2pi
dec
decb
sub
ja
cmp
jmp
adc
adc
inc
inc
mov
cmp
loopne
mov
jns
inc
repnz
push
pop
in
jnp
repnz
inc
mov
inc
add
adc
pop
shll
push
push
lretw
xchg
cld
test
lods
jmp
push
movsl
mov
or
sbb
aad
call
fidivrl
cli
pop
dec
and
outsb
dec
adc
sub
sbb
mov
mov
jo
jne
add
aaa
into
inc
sbb
rcll
popl
xchg
add
imul
jb
into
test
jge
gs
sub
mov
sbb
daa
lret
xchg
iret
rcll
jge
sub
subb
dec
cli
jo
out
roll
ja
jge
out
ret
jnp
or
repnz
loop
push
aad
pop
lds
sbb
ret
shlb
and
cmp
inc
fdiv
fsubr
stos
jge
pop
std
aam
loop
push
daa
movsl
mov
dec
mov
xchg
cmp
mov
loop
inc
rol
sahf
fcmovnb
ret
jecxz
hlt
jne
rorl
inc
dec
cmp
jmp
loop
dec
les
ret
mov
sub
sub
dec
data16
inc
dec
ret
sub
push
push
jle
out
push
inc
xchg
addb
dec
mov
leave
imul
aaa
mov
inc
mov
loop
sub
and
jecxz
in
ret
loop
ja
xor
xchg
inc
aam
inc
mov
into
xor
adc
jecxz
fcmove
inc
inc
jmp
jl
jecxz
fmuls
fsub
jp
xchg
dec
fidivl
push
push
negb
xchg
push
jmp
or
out
fimull
iret
push
loop
je
fisubrl
aam
or
or
lret
out
test
mov
in
loop
dec
pop
pop
fiaddl
pop
jecxz
loop
adc
pop
sub
lahf
push
loop
je
sbb
pop
inc
jbe
or
fidivrl
imul
mov
loopne
fcmovne
adc
dec
jp
pop
jbe
lcall
je
ficoml
sti
add
ficompl
cltd
leave
fcmovnu
incb
and
pop
sbb
sbb
xor
add
and
ss
pop
repz
xor
jno
xchg
mov
dec
xor
adc
ljmp
lahf
roll
cmp
and
ret
inc
inc
lret
cmc
in
cld
jmp
aam
pop
inc
fcmovb
dec
mov
cmc
push
jae
xchg
lcall
pop
jns
fists
inc
ss
xchg
aam
in
jg
mov
hlt
leave
lods
mov
sbb
sub
dec
or
mov
int3
inc
rorl
cmpsl
ficompl
pop
enter
out
icebp
xchg
out
loop
jecxz
imul
cli
in
movb
cmp
orb
mov
xchg
adc
xchg
fwait
lcall
out
js
fmuls
jecxz
or
lds
lods
and
add
outsl
lahf
jmp
fisubs
movsl
aam
in
cmp
inc
aas
sbb
cmc
push
sub
mov
mov
xor
pop
into
ja
sti
enter
out
loop
in
leave
jno
loopne
je
sbb
jbe
loop
sub
adc
push
jmp
fwait
hlt
jmp
in
adc
test
in
pop
stc
faddl
push
pop
push
inc
push
dec
enter
aaa
cmp
sub
lret
mov
or
ret
sbb
in
je
and
pop
loop
adc
push
shrl
andb
push
push
add
addr16
xchg
xchg
test
addr16
and
sbb
or
lret
sbb
add
dec
iret
out
cmpsl
or
stc
inc
je
repz
add
xlat
shl
ret
pop
ficompl
out
mov
inc
rcr
and
out
lret
add
push
push
insl
cmpsb
pop
cli
loope
dec
xor
loop
bnd
in
push
andl
dec
mov
loop
repnz
loop
inc
ljmp
cmc
loop
in
adc
ret
in
loope
and
andb
inc
and
andl
inc
test
dec
aas
loopne
je
fmull
xor
xchg
push
mov
inc
imul
mov
sub
leave
inc
cmp
push
push
cmpsb
enter
pop
fisubrs
stos
loop
enter
cmp
adc
push
je
imul
pop
xor
cmp
mov
pop
fidivrs
or
lods
mov
sbb
jb
dec
push
rcr
fdivp
push
cmp
xchg
inc
jae
xorb
dec
std
scas
rcrb
scas
sarb
mov
mov
and
fidivrs
pop
inc
popf
jb
or
fisubrs
mov
mov
dec
rorb
in
popf
in
and
fsubs
in
jmp
lret
lods
jl
xorb
insl
roll
mov
inc
pop
push
idivb
pop
xchg
into
iret
cmpl
ret
fidivs
adc
out
bndldx
push
lcall
adc
and
xor
jecxz
das
popf
inc
stc
ljmp
sbbl
adc
iret
repnz
insb
or
pop
lods
and
lds
and
aaa
sahf
jo
loop
movsl
std
mov
mov
or
orb
orl
pop
cmp
fldcw
cwtl
dec
sub
lret
fidivs
dec
mov
sub
sbb
and
jge
jl
inc
outsl
sti
xchg
out
pop
mov
pushf
mov
and
pushl
cwtl
xchg
sti
push
imul
sbb
mov
adc
cs
push
lret
pop
mov
inc
ficompl
lea
mov
orl
push
daa
jp
rcll
or
data16
cmpsb
pushf
jecxz
das
jno
sti
push
outsl
xchg
xchg
push
mov
jnp
xchg
fisubs
shrb
outsb
jae
pop
js
cmp
inc
sbb
inc
loopne
fcomps
mov
mov
pop
xor
add
repnz
fdivs
lret
add
jns
cmp
push
mov
mov
and
in
bound
shrb
ret
es
clc
outsb
test
repnz
lret
inc
xchg
popa
cmpsl
in
xchg
hlt
out
or
orb
xchg
add
cmpsb
cmp
out
loopne
movl
retw
jne
mov
in
xchg
mov
in
jmp
sbb
popa
adc
cmp
mov
mov
inc
ret
movsl
enter
rcrb
mov
mov
add
cltd
in
pop
inc
and
rorl
ret
mov
add
fwait
sub
aas
add
mov
jb
dec
jno
xchg
stos
add
scas
inc
pop
mov
int
in
ss
ja
inc
pop
gs
xor
xchg
pop
adc
jecxz
les
fisubs
lret
mov
repnz
divb
xorb
outsl
das
cwtl
jecxz
scas
dec
cmp
ret
sbb
stos
fs
fisttps
push
push
bound
jle
ljmp
les
lods
dec
mov
rorl
mov
shrl
and
nop
in
cmp
stc
pop
pop
cli
sbb
dec
inc
sub
test
in
dec
int
lahf
dec
test
adc
ret
push
and
popl
aaa
insl
jns
in
cmp
mov
cwtl
fcmove
push
mov
mov
aas
cwtl
in
push
jae
nop
hlt
xchg
pop
and
scas
push
jae
jbe
xor
jae
ret
mov
nop
iret
int
bound
popf
xchg
and
add
add
mov
and
into
cs
bts
out
loopne
cli
xchg
push
popa
push
stos
inc
sub
dec
inc
pop
data16
xor
lods
jae
data16
pushl
push
xchg
dec
add
jecxz
dec
je
push
inc
dec
adc
and
sub
inc
repnz
out
sahf
pop
lds
or
push
adc
xlat
or
adc
lods
popf
sub
jo
mov
cmp
stc
sbb
mov
inc
rcl
mov
or
xchg
and
or
and
push
ret
mov
aaa
cld
push
fbld
ret
outsl
repnz
cwtl
dec
jecxz
add
ja
adc
sub
push
jecxz
hlt
lret
mov
test
pop
adcb
mov
xchg
mov
fimull
sub
sbb
loopne
add
aas
pusha
ret
mov
dec
dec
xor
dec
sub
pop
cmp
mov
adc
sar
and
xchg
enter
into
dec
je
push
sub
dec
lret
or
out
lds
pop
insb
xchg
sbb
sub
and
pop
mov
rcrb
mov
movsb
xchg
inc
stc
es
ret
rcr
mov
and
mov
fidivrl
aas
inc
lret
repz
cmpsb
xor
stos
aaa
xchg
lret
cltd
dec
push
add
dec
mul
inc
fs
xor
jl
inc
mov
cmp
daa
mov
into
pusha
jo
sbb
adc
cmpsl
cmc
or
fsubl
add
data16
push
jecxz
and
add
int3
into
shl
call
mov
add
xor
pop
jo
je
jb
popa
aas
mov
push
ret
push
fwait
xor
rclb
dec
jl
push
fsubrs
xor
test
out
mov
sub
bound
push
xchg
dec
inc
push
or
jae
in
movsb
and
bound
sbb
mov
jecxz
popf
es
push
lds
repnz
ret
inc
jmp
in
shrb
push
adc
lock
mov
int3
das
sbb
fimull
int3
hlt
or
ret
and
shll
push
or
scas
or
repnz
icebp
add
sbb
dec
mov
jo
sbb
aas
pop
lret
ljmp
nop
dec
movsb
ret
jecxz
fadd
aas
sti
outsb
adc
sbb
aas
sbb
iret
jg
xor
jns
or
jo
xchg
in
cmp
jp
lret
mov
and
xchg
inc
jno
jno
rcll
mov
adc
mov
stos
xchg
push
ret
addr16
lock
dec
ffreep
mov
xchg
add
inc
mov
out
add
push
add
sub
push
xchg
test
fsubr
test
add
cmp
ret
lcall
lods
mov
daa
mov
subl
test
call
and
xor
data16
fisttps
xchg
out
jle
test
xor
sub
mov
imul
xchg
es
ficoms
les
movsb
arpl
icebp
icebp
les
inc
mov
ret
arpl
lods
fstpt
test
cmpsb
xor
call
clc
in
or
inc
mov
sahf
push
and
pushf
sub
xorb
dec
xchg
test
rcr
jmp
or
test
inc
or
xchg
xor
jno
sub
fistpl
and
fdivr
add
aas
push
xchg
mov
jo
xchg
sub
cli
xchg
je
or
nop
xchg
jbe
stos
les
push
cmpsl
inc
lret
mov
test
adc
add
shl
dec
add
pop
movsb
pop
inc
es
pop
jb
dec
xlat
stc
mov
cmp
int3
aam
and
adc
push
movsb
icebp
repnz
je
cltd
pop
sar
ljmp
cmpsb
mov
lods
lods
pop
shll
sub
jo
xchg
out
je
xor
stos
pusha
cli
mov
and
and
adc
repz
cmc
aas
jmp
jae
pusha
mov
mov
mov
in
hlt
lret
pop
loopne
dec
jecxz
lods
and
arpl
loop
jge
je
mov
stc
repnz
les
pop
rol
dec
adc
xchg
xlat
inc
insb
adc
int
adc
ret
or
jecxz
mov
sub
sti
int
push
cmp
xor
cmp
lods
xorb
add
cmp
xchg
and
or
sub
sub
pushf
loopne
mov
xor
mov
je
repnz
sub
xor
push
mov
xor
mov
lahf
or
sub
dec
inc
push
lret
cmpsb
dec
and
aaa
xchg
bound
push
bound
add
dec
adc
lods
push
mov
inc
jae
mov
dec
mov
pop
push
xor
call
jno
add
mov
inc
or
inc
inc
fisubrl
fsubrs
sbb
mov
pop
pushl
rclb
mov
or
jo
test
dec
add
xor
aas
lcall
mov
adc
bound
adc
in
faddp
push
loope
push
movsb
sbb
cli
push
push
incb
rorb
and
ret
fists
insb
ret
and
mov
repnz
or
push
in
test
in
push
jo
add
xor
cs
cmp
out
int3
test
xchg
unpckhps
in
dec
mov
arpl
test
sub
daa
fwait
adc
xchg
pushf
xchg
cmp
pop
jecxz
sub
and
add
scas
or
leave
add
lea
das
jne
clc
icebp
and
fs
out
push
mov
pandn
pop
add
ja
push
fdivp
scas
xchg
add
add
cli
sub
xchg
and
dec
hlt
andb
xor
outsl
xor
icebp
or
pop
and
push
dec
mov
xchg
jae
add
stc
test
mov
cld
inc
cmp
loopne
leave
dec
ficompl
xor
pusha
fnsave
jo
addl
mull
inc
mov
ret
push
push
stos
lods
sbb
into
negb
adc
ret
jo
loop
ret
insb
in
out
pop
cmc
aam
dec
inc
addr16
and
movsl
jmp
adc
out
and
daa
pop
inc
jmp
ret
mov
bnd
sub
repnz
hlt
test
or
aas
sub
popa
sahf
push
add
cli
pop
xorb
inc
into
imulb
lock
inc
sub
xor
jno
dec
mov
mov
xchg
dec
lret
inc
or
in
movsl
ficompl
jb
and
aad
int3
fiadds
mov
sub
fidivs
pop
pop
sub
jo
movsb
neg
cmp
aas
mov
cltd
jno
ljmp
negb
cmp
inc
aas
mov
lret
lret
inc
xchg
iret
leave
pusha
pop
sub
inc
sti
dec
daa
pop
lret
lret
imul
cmpsb
and
xchg
rorb
jnp
das
sahf
cwtl
insb
arpl
pop
fisubrl
jg
pop
imul
or
mov
call
out
and
test
or
iret
push
push
xchg
aam
mov
and
ficomps
pop
jns
mov
mov
fcmovnb
leave
sti
push
and
or
dec
and
shr
jmp
movntq
mov
fisttps
xor
push
enter
scas
loop
jno
gs
lock
jg
jo
out
lcall
leave
xlat
lahf
cmp
js
lahf
imul
movsl
lds
inc
daa
ds
test
xchg
cmpsl
push
xchg
idivb
lret
inc
aas
lds
in
add
pop
data16
inc
insb
pop
add
out
lds
sbb
push
adc
sbb
cltd
adc
push
ficoml
jl
inc
jge
std
aad
jecxz
cmpsb
hlt
adc
mov
pushf
lea
mov
mov
lods
fidivs
xchg
pop
ret
test
popa
xchg
sub
dec
push
and
cmp
xor
push
mov
mov
push
fnstenv
repz
and
xor
inc
pop
hlt
and
inc
test
push
pop
lods
lock
data16
ret
lds
gs
add
pop
jbe
sub
cs
mov
dec
mov
xor
in
mov
add
inc
decb
out
pusha
mov
rcr
addr16
mov
in
mov
mov
imul
mov
ficompl
hlt
pop
xchg
std
ds
ret
jo
or
aas
sub
sub
call
scas
sbb
faddp
int
fnstenv
outsb
pop
ss
cmpsb
push
fsubrl
sbb
testb
jno
fucomip
xor
push
sub
es
push
jno
nop
pop
pop
scas
bnd
out
xor
mov
push
aad
ret
inc
lea
js
and
sub
push
add
pop
inc
and
add
test
outsb
and
out
push
cmpsb
sbb
orb
iret
in
xor
das
addl
push
cld
add
mov
mov
jl
inc
push
dec
adc
icebp
shrb
test
mov
dec
inc
pop
rcl
sbb
mov
outsl
xor
das
fdivl
dec
shll
outsb
adcb
push
in
adc
test
xchg
add
cli
push
insl
std
push
xor
movsb
pop
ret
sbb
mov
ficoml
push
and
inc
pushf
jbe
aaa
ret
jo
cmp
ljmp
dec
leave
mov
adc
in
add
pop
xchg
ret
add
jg
sbb
ret
mov
pusha
rcll
jae
sub
lret
push
xorl
sub
add
cmp
or
sbb
adc
mov
out
mov
inc
cwtl
pop
clc
loopne
or
andb
add
xchg
iret
jb
jo
scas
push
mov
mov
test
aas
sbb
xchg
rorb
out
dec
mov
loopne
mov
in
cmc
stos
mov
and
aam
mov
fsubrp
and
jno
xor
and
stos
test
inc
out
popa
fildll
and
inc
les
stc
dec
push
data16
mov
inc
cli
insb
loopne
sti
add
pop
pop
ds
adc
jmp
mov
les
fiadds
push
dec
or
adc
add
mov
xchg
jne
pushf
jne
lods
or
daa
test
xor
push
mov
ret
jne
insl
nop
and
pushf
test
in
outsl
sub
add
cld
push
cli
pop
pop
mov
and
negb
push
andb
add
enter
rol
add
pop
and
mov
test
enter
and
jno
jae
sbb
push
push
test
shll
daa
mov
ret
aaa
insb
in
xor
mov
sbb
rol
mov
adc
add
or
sub
adc
daa
mov
decl
incb
pop
rcl
fisttps
out
mov
sub
add
enter
push
pusha
sarb
inc
fadds
out
ret
cld
inc
sub
sub
in
out
xor
dec
push
icebp
jae
sbb
and
jns
lock
dec
rep
and
loope
loopne
pmulhuw
pop
add
and
and
pop
lea
push
jmp
jge
mov
or
and
xchg
xor
syscall
out
jle
adc
jb
pop
out
test
jmp
rcr
sbb
pop
mov
mov
mov
xor
aas
loopne
cmovne
mov
mov
test
test
pop
pop
mov
mov
movsb
add
inc
or
loop
out
mov
call
rol
imul
leave
add
mov
icebp
adc
int3
das
out
test
ret
loop
inc
inc
push
mov
arpl
pop
repz
leave
jnp
enter
and
enter
jne
pop
mov
int3
shlb
jecxz
and
pop
jecxz
insl
mov
popa
outsb
and
dec
fisubrl
fs
xchg
loop
adc
ret
out
loop
jbe
mov
sub
out
push
loop
jne
leave
imul
inc
lahf
out
leave
jecxz
subl
out
push
loop
jne
leave
fs
jecxz
arpl
push
xorl
fs
add
and
dec
leave
cld
pop
out
loop
adc
dec
jp
mov
jne
mov
loop
jne
leave
sahf
xor
ljmp
leave
notl
push
bnd
lret
sbbb
sub
lret
jae
jmp
add
mov
leave
mov
dec
or
leave
or
jmp
out
pop
sbb
mov
mov
in
vpunpcklbw
andb
scas
pushf
repz
call
leave
faddl
or
cmp
sbb
lds
push
jmp
je
sarb
and
dec
inc
inc
jecxz
sbb
out
repnz
leave
rolb
cmpsl
sbb
add
leave
jb
ret
or
into
mov
insl
or
or
loopne
in
inc
and
sub
sub
leave
into
loop
shl
daa
adc
and
inc
pop
loop
out
mov
sbb
ds
or
loop
push
loop
repnz
and
or
xchg
loop
inc
jp
push
hlt
sbb
loop
repz
mov
loop
fnsetpm(287
std
loop
mov
xlat
xchg
push
jbe
gs
xchg
shl
or
int
pop
enter
dec
ffree
push
in
xlat
rorb
scas
lret
dec
in
sbb
dec
fmull
mov
dec
fsub
int
inc
dec
sub
ret
into
rclb
fs
lea
xchg
lret
imul
test
add
leave
cmpb
sbb
cmp
bnd
jl
es
cmpsl
mov
cmp
out
inc
sbb
andb
out
mov
test
idivb
push
dec
xchg
mov
adc
add
xchg
mov
push
lods
fs
mov
adc
adc
pushf
test
loopne
mov
enter
pop
lds
cltd
out
jbe
dec
mov
inc
es
test
leave
fiadds
push
or
insl
adc
rcrl
xchg
lods
xor
adc
outsb
into
inc
shlb
ljmp
fisubs
inc
adc
xchg
inc
lock
inc
nop
jbe
or
aam
movsb
repz
push
hlt
and
add
clc
jmp
popf
lods
stos
flds
aad
push
mov
aas
xchg
sub
pop
enter
add
fdiv
xor
imul
mov
mov
addr16
testb
insb
xor
mov
or
xor
xor
jae
loopne
jge
fnstcw
jbe
lea
mov
gs
add
push
movb
jns
inc
sub
adc
rcl
shll
gs
pop
xchg
ficoms
add
lods
scas
lea
psllq
fsub
or
xlat
loopne
dec
test
pop
or
add
pusha
xbegin
pop
or
test
jo
icebp
fwait
aas
sbb
and
negb
xor
into
push
insl
cwtl
sub
mov
xchg
rcl
push
dec
in
add
xchg
push
ljmp
add
inc
inc
dec
andb
iret
subb
xchg
clc
test
jge
lar
push
pop
rol
inc
ds
repnz
cltd
push
mov
scas
inc
adc
dec
jp
lret
bound
into
clc
mov
testl
pmullw
adc
or
cmp
fsubl
sub
into
dec
jbe
lcall
out
scas
sub
adc
add
in
out
sub
cmp
insb
mov
cmpsl
jge
pop
iret
push
mov
sub
sub
mov
add
inc
xor
add
out
or
jbe
inc
mov
and
movb
push
push
cmc
or
sbb
cmpsb
adcb
cli
cmp
pop
xchg
jg
ret
cltd
shrb
pop
mov
movsl
sub
pop
push
cmp
daa
fiaddl
inc
repnz
aas
fcoml
jecxz
adc
dec
jmp
inc
mov
lock
mov
fimull
xor
inc
jae
in
pop
sub
enter
xor
sub
mov
rcrl
jne
test
icebp
jmp
leave
pushf
pop
sub
cmova
sub
or
sub
loopne
shrb
iret
insl
std
sbb
faddl
and
into
dec
leave
inc
popf
and
rcll
imul
push
and
cltd
sbb
push
jmp
adc
jecxz
sbb
daa
jno
add
lods
mov
aam
pop
rclb
lods
add
mov
jecxz
mov
addb
fs
adc
gs
daa
xchg
clc
repnz
into
loop
aaa
mov
mov
pop
shlb
inc
cwtl
sbb
mov
mov
movsb
nop
nop
lcall
mov
inc
dec
mov
aaa
xchg
in
cmpsl
cmp
mov
aas
orl
jb
xchg
out
ficoml
add
sti
jns
pop
mov
jb
frstpm(287
lret
xchg
std
movsb
sti
je
inc
and
arpl
xchg
loop
ret
xchg
push
push
or
xchg
stos
shll
popf
cs
dec
es
sbb
and
ret
jg
negb
pop
addb
fadds
repz
insl
push
movsl
cli
popa
push
push
cld
mov
inc
movsl
fiaddl
push
mov
sahf
addr16
sbb
test
inc
pop
add
xchg
mov
fsubp
xlat
addr16
xor
out
iret
jo
inc
daa
push
sbb
sbb
inc
pushf
fs
inc
add
and
repz
dec
xor
aas
push
add
push
nop
fisubs
ret
cmovg
sub
mov
and
dec
push
les
mov
in
pop
rcr
inc
ja
jo
scas
loopne
mov
rcrl
les
sbb
clc
es
test
aas
shlb
and
mov
inc
fadd
call
sysret
ds
adc
lds
sarl
aad
iret
fiadds
add
push
mov
clc
insb
int
ret
lahf
xorl
ret
loopne
sub
and
mov
mov
xor
ja
sbb
dec
xor
jb
or
leave
in
mov
enter
push
pop
push
in
in
xor
cmp
ss
jbe
rolb
lock
into
xchg
push
ret
jmp
test
lock
mov
rcrb
push
aas
jno
pop
repnz
inc
jge
xchg
lods
xor
aas
fcoml
mul
lds
loopne
stos
add
in
inc
push
icebp
out
jecxz
adc
xchg
jno
mov
stos
aad
je
add
xchg
fs
movsl
fdiv
out
fs
and
jecxz
sar
movsl
data16
sub
arpl
or
es
movsl
sbb
mov
sahf
dec
jbe
xchg
cmc
jae
fs
pop
test
jno
xchg
imul
fs
cmpsl
out
push
add
inc
dec
push
lea
imul
int
repnz
fimuls
push
cmpl
pop
pop
popf
sub
in
push
mov
mov
out
fisubl
adc
adc
lahf
pop
les
push
or
cmpsb
mov
adc
shrd
jmp
push
add
fwait
add
adc
and
or
call
dec
gs
data16
sub
outsb
pop
psrlw
fidivrl
and
inc
cmpsl
fprem
push
fadds
push
push
sahf
xchg
aad
xchg
orl
inc
add
fbld
sub
scas
inc
add
int
lret
add
scas
stc
rcr
iret
test
into
stos
outsb
sti
pop
sarb
jecxz
and
push
out
and
sub
sub
add
jne
pop
push
sbb
inc
sti
cmpsb
sahf
push
inc
imul
lods
bound
inc
incb
aas
lahf
xlat
dec
jb
mov
cwtl
cmp
dec
insb
jo
xchg
clc
push
jno
xchg
and
mov
pop
aaa
push
jp
mov
pop
ds
lcall
sub
scas
sbb
mov
lods
push
dec
mov
ss
and
loop
xchg
inc
incl
pop
test
clc
cmp
jmp
dec
or
lea
cltd
nop
mov
pop
je
dec
sbb
pop
es
xchg
push
mulps
imul
stos
daa
loopne
sbb
imul
inc
mov
push
imul
add
lcall
into
cmp
shrl
into
xchg
or
adc
cli
add
bound
hlt
cs
add
pop
lret
xor
dec
ljmp
cwtl
xchg
enter
cmp
dec
rcl
mov
pop
jne
cmpsl
shlb
adc
jae
test
xor
or
hlt
arpl
aas
movsb
rorl
lods
xchg
aaa
push
xor
jecxz
imul
xor
pop
cmc
adc
pop
outsb
mov
xchg
ret
jecxz
test
lods
jne
add
aas
mov
xor
inc
xor
mov
pop
icebp
push
test
or
sbb
inc
add
push
sbb
push
addb
popa
inc
int3
stos
add
inc
clc
and
jecxz
lret
cmpsb
adcl
jecxz
insl
dec
rcl
jp
push
mov
jecxz
out
add
test
jge
mov
inc
stc
jnp
scas
inc
movsl
xor
dec
daa
dec
inc
imul
add
or
mov
movb
cs
sub
insl
mov
icebp
lcall
jnp
das
les
popa
loop
pusha
loopne
rorl
push
jmp
xchg
out
jecxz
sub
fildl
std
mov
mov
adc
xchg
sub
adc
jnp
push
loop
aad
out
movsl
xchg
orb
or
in
and
jp
in
push
loop
daa
push
push
jno
ljmp
mov
divb
icebp
jbe
js
lea
xor
mov
mov
sub
in
roll
add
aam
and
sbb
fcoms
sbb
lret
stc
sub
data16
jle
and
mov
sub
fucomi
mov
dec
jmp
add
rorl
repz
shr
gs
imul
sbb
pop
inc
dec
xchg
sub
xlat
je
push
nop
push
jge
lds
addb
xor
add
add
pop
add
mov
jbe
jge
jb
dec
ficomps
add
push
je
std
shl
and
outsb
xor
rcrb
jge
pop
das
leave
pusha
popa
dec
ficoms
lahf
ficoml
sub
push
je
call
mov
or
pop
mov
xchg
fadds
insl
mov
sub
dec
mov
daa
add
loopne
inc
push
sub
add
in
push
popa
repz
or
hlt
or
push
aas
testl
pop
mov
fwait
int3
add
aas
pop
jne
loopne
jne
movsl
orl
mull
test
mov
pop
push
mov
add
lea
mov
lock
test
sti
in
maxps
jp
and
ljmp
sbb
popa
mov
lahf
jnp
jg
pop
inc
or
pusha
inc
push
push
cltd
jbe
add
push
mov
xchg
addl
sub
lods
jmp
or
insb
pop
test
sub
xchg
cli
cltd
jecxz
mov
add
xchg
and
mov
and
mov
pusha
or
inc
out
cmp
enter
jns
sub
mov
sbb
inc
sub
nop
or
lods
jg
daa
sbbb
jp
cmp
loope
jae
add
enter
sbb
or
add
or
and
int
add
and
sub
jg
enter
xchg
sbb
mov
iret
pusha
pop
out
inc
pop
push
dec
cmp
inc
leave
aas
xor
add
pushf
pop
fidivl
fidivrs
xlat
add
fcom
test
bound
loop
xchg
sbb
push
test
cmp
scas
jb
orl
dec
ss
leave
test
inc
sbb
ret
pop
or
sub
je
inc
pushf
xchg
iret
pop
repnz
sahf
pop
popa
sbb
jo
jo
pop
insw
pop
jno
fildll
cld
xchg
inc
insl
rorl
ljmp
xor
jmp
outsb
lret
mov
xor
adc
inc
ds
sub
mov
push
dec
add
repz
mov
test
pop
or
dec
ljmp
mov
pop
loop
mov
lods
xorl
aas
lahf
enter
lahf
pop
mov
jne
hlt
mov
inc
sarb
mov
popa
rorl
fists
adc
jb
push
adc
jnp
mov
sbb
sub
pop
pop
sbb
or
repz
pusha
xor
xor
push
fnstcw
push
lret
insl
mov
sbb
inc
in
cltd
bound
inc
xor
les
inc
mov
push
mov
xor
lock
ret
notl
or
xor
and
push
loop
loop
xor
es
shlb
es
movntps
xchg
dec
add
int3
sub
or
dec
pop
adc
add
lea
xchg
outsb
mov
cmp
insb
adc
jmp
out
dec
movsb
dec
ret
fiaddl
stos
jno
das
sub
pushf
jecxz
xlat
inc
xchg
lret
out
add
push
bound
push
insl
mov
push
add
lods
adc
mov
push
add
dec
inc
or
jmp
cmpsb
fstl
add
mov
pop
movsb
ficompl
push
push
in
jb
mov
jns
inc
dec
aam
repnz
inc
scas
stos
in
lock
in
sbbb
ret
lea
fbld
cmp
lea
cmp
jae
jbe
push
sub
push
add
mov
movsb
add
mov
cwtl
mov
xor
inc
cmpl
cli
cmp
push
inc
push
movl
test
add
stos
jmp
inc
arpl
jnp
sub
cmpsb
pop
rcll
inc
push
leave
xchg
sbb
cltd
push
adc
xchg
push
xor
xchg
xchg
inc
jmp
clc
inc
adc
jb
rclb
dec
je
adc
in
xchg
rclb
aas
pop
jecxz
sbbb
imul
sub
ljmp
jne
repnz
movsl
rolb
call
mov
adc
lods
fcomip
fsubs
jbe
outsb
lret
inc
inc
jge
mov
or
jo
enter
repz
pop
fisttpll
and
mov
and
ret
push
test
cmpsb
pop
push
xlat
lret
jo
ljmp
hlt
push
data16
jmp
push
dec
xor
or
push
cli
iret
ret
inc
in
inc
sbb
add
icebp
loop
fwait
lods
mov
mov
shrb
sub
mov
xchg
bound
mov
push
cmp
sub
mov
sahf
adc
xor
lds
inc
or
xchg
xlat
jo
sub
push
imul
xchg
push
stos
jb
add
inc
xchg
repnz
and
lret
sub
add
cmp
inc
jnp
xchg
push
xlat
sub
arpl
cmc
out
testb
es
loopne
sub
push
jb
mov
lahf
push
push
mov
dec
idivb
adc
les
lahf
pusha
sbb
inc
xchg
add
sbb
test
aad
inc
push
jo
call
int
jb
stos
popa
jb
jmp
mov
test
gs
mov
pop
lahf
mov
test
inc
jb
daa
sarb
mov
pop
cmp
das
and
jns
rcll
pop
sbb
addr16
mov
cmpsl
add
jecxz
push
into
sbb
inc
js
int3
cmc
xor
in
scas
shl
adc
mov
jmp
sub
ds
xchg
lret
push
dec
inc
imull
and
sbb
clc
mov
sti
add
ja
cmc
or
xor
cli
xchg
adc
fiaddl
dec
xor
mov
cmp
pop
cli
pop
inc
adcb
push
push
adc
fs
adc
and
cmc
cmpsl
pop
xor
jbe
bound
bound
shrl
ss
jo
dec
lret
stc
fldl
xchg
push
add
mov
popf
sub
repnz
lds
mov
popf
dec
out
jb
jae
jmp
ret
sbb
push
aam
lret
adc
adc
repz
les
inc
pcmpgtw
and
clc
into
out
jnp
mov
decb
mov
add
jo
outsb
inc
inc
add
shll
cmp
jo
loop
fs
in
sti
xchg
loope
pop
mov
push
jns
fisttps
bound
add
out
and
add
pop
mov
pop
and
fsubp
mov
inc
mov
insl
lea
imul
rcrl
cmp
out
add
loop
add
in
aas
into
or
or
adc
sti
mov
icebp
cltd
popl
adc
or
popa
loop
add
inc
pop
test
popa
repz
adc
adc
mov
push
test
mov
and
mov
shrl
inc
into
dec
pop
xchg
shll
ror
inc
add
dec
or
sub
push
out
cmp
adc
jnp
faddp
cmpsb
xchg
iret
mov
mov
lahf
mov
pop
pop
or
adc
stos
dec
sbb
fwait
repnz
lods
mov
clc
mov
add
shll
add
punpckldq
cmp
mov
roll
mov
ret
dec
add
pop
inc
lret
repz
xlat
add
inc
loop
cmp
lds
xor
aaa
cmp
jae
int
xchg
inc
ljmpw
repz
adcb
leave
jno
movsl
data16
xor
add
mov
inc
bnd
fildll
testl
dec
lds
push
dec
lock
out
push
push
js
bound
pop
call
ret
imul
jo
adcl
jno
rorb
aad
int
imull
cltd
movb
movsb
jmp
movsb
loope
xor
lret
mulb
pop
sub
mov
lahf
lcall
movsl
leave
jo
adc
dec
dec
mov
push
xchg
inc
and
xchg
ret
mov
jmp
inc
or
inc
and
aas
insb
fidivrl
sbb
aam
dec
push
out
mov
cld
sbb
daa
in
mov
popa
loopne
insb
or
inc
repz
add
mov
push
mov
push
daa
xchg
and
movsl
sub
add
lea
xchg
fmuls
xor
daa
sbb
xchg
pop
arpl
mov
ret
shll
sti
cmp
mov
mov
cmpsl
xchg
dec
or
enter
mov
lret
hlt
mov
pop
aam
push
adcb
sti
push
push
ja
cld
pop
ja
in
bnd
jecxz
loopne
inc
mov
in
and
ret
dec
out
icebp
in
aam
adc
xor
push
jl
add
lods
xchg
shll
les
aam
inc
mov
and
cs
push
sbb
pop
ret
sbb
add
xchg
pusha
imul
and
stos
mov
mov
xchg
popf
testb
adc
ret
cmp
jbe
and
lods
jmp
cmpsw
leave
jae
xchg
add
fidivs
leave
push
outsb
jae
push
push
or
mov
lret
mov
inc
inc
mov
insb
loopne
or
sbb
mov
pop
stos
dec
test
stos
bound
in
mov
xchg
cmp
lods
icebp
inc
push
and
clc
fwait
push
push
fidivs
pop
out
or
or
xlat
mov
xor
sub
add
lret
xchg
adc
dec
notl
jmp
movsb
jo
mov
mov
imul
xor
add
add
lods
fidivrs
xchg
jmp
push
xor
add
sub
movsb
hlt
pop
xchg
faddl
push
jo
fidivs
xchg
inc
lods
mov
mov
cwtl
pop
inc
inc
aas
cs
cltd
sub
push
add
jo
test
loop
jecxz
ret
pop
push
fdivrs
xorl
or
and
xchg
jbe
jmp
test
lahf
mov
ja
ljmp
or
lret
pop
int
xor
inc
stos
movsb
popa
and
add
add
data16
aam
fisubrs
sub
lret
push
mov
inc
inc
movsb
out
sub
movntq
push
mov
cld
imull
xor
stos
mov
add
icebp
adc
sbb
incb
out
movb
add
mov
xor
mov
pop
pop
xlat
jle
test
shlb
mov
aad
push
xchg
in
iret
lahf
inc
ret
jnp
xchg
icebp
inc
jb
es
or
sti
lods
mov
fmul
into
push
test
filds
fidivrs
adcl
cmc
mov
mov
cmp
sarl
xorb
and
ret
mov
xor
icebp
paddq
out
das
sub
push
sti
push
and
movsb
jae
loope
jge
xchg
dec
fxch
jo
pmuludq
fs
and
mov
dec
aam
enter
out
sbb
jle
jp
vpbroadcastw
jge
call
jo
jg
fmull
into
repnz
aaa
bsr
add
push
or
fcmove
pop
incl
bound
jl
and
or
mov
lds
rclb
sbb
fimull
jns
fdivr
bound
test
lret
test
iret
pop
andb
mov
cmpsl
movsb
and
jb
xchg
inc
mov
aam
sbb
fwait
iret
add
test
out
inc
jo
fsub
repnz
lods
add
add
adc
aas
jle
jnp
bndldx
imul
lea
push
dec
fisttpll
or
push
add
mov
add
fidivs
js
sub
adc
sub
sahf
scas
test
cmp
push
add
cmpsl
xor
push
rorb
xor
inc
adc
jne
insl
lock
cmpsl
sti
mov
push
adcb
bound
call
fidivl
mov
repz
inc
adc
xchg
dec
inc
mov
cmpsb
loop
push
ret
xchg
rorl
dec
mov
leave
mov
adc
jp
in
loop
add
inc
dec
sub
out
sub
sub
leave
pop
imul
push
pop
sub
cs
les
loop
dec
leave
test
es
mov
leave
shrb
iret
loopne
cld
in
inc
sbb
in
lahf
push
in
mov
push
or
sbb
add
sahf
sbb
dec
pop
loop
sub
leave
sub
push
loop
mov
leave
sub
scas
inc
shrl
dec
jmp
push
lret
mov
adc
iret
movsl
inc
lds
and
lret
inc
movsb
ret
out
leave
or
xchg
leave
pop
mov
nop
in
movsl
push
pop
jmp
leave
inc
incb
daa
leave
pop
push
in
negb
mov
add
jmp
sub
fisttpl
cmp
shrl
in
and
mov
in
mov
xchg
out
inc
popf
add
leave
jp
scas
loop
add
mov
mov
inc
aad
sbb
ss
ret
xchg
or
ror
adc
add
xchg
xor
mov
mov
fimuls
incl
pop
imul
or
loop
push
fcompl
loop
std
cmpsl
ficomps
cmpsl
rolb
ss
repnz
ret
cmp
out
icebp
and
ret
in
mov
lds
mul
or
or
in
stos
push
dec
sub
aas
out
xor
inc
hlt
repz
out
hlt
mov
adc
fiaddl
xchg
ljmp
loop
fdivrl
or
out
enter
ret
enter
repnz
add
ficompl
xor
inc
repnz
insb
pushf
inc
lea
add
jmp
lods
inc
push
insl
and
enter
sbb
in
incb
fcmovb
hlt
repz
rcll
mov
int3
mov
roll
testb
repz
lock
pop
adc
imul
hlt
gs
jne
out
loop
mov
enter
loop
out
into
push
jo
ret
or
cld
jmp
lds
loop
bnd
xor
cmp
cltd
xor
adc
hlt
sahf
repnz
hlt
loop
cli
sub
loop
fdivl
or
cmp
push
insb
ret
jecxz
add
arpl
dec
in
mov
std
lock
mov
loop
aas
xor
push
hlt
in
int
mov
loop
incl
ds
adc
ret
lods
test
repnz
in
loop
jecxz
push
int3
fistpl
cs
jbe
jbe
fcmovnb
test
ds
adc
jmp
adc
test
push
lock
ret
jne
in
es
inc
leave
in
daa
add
in
loop
out
lock
loop
repnz
ret
testl
sarl
lock
inc
out
fstps
and
fiadds
cmpsb
mov
fcomp
shll
jno
lret
in
jne
fcom
roll
add
pop
fdiv
inc
mov
int
lret
test
push
rcrl
in
lret
ret
gs
jne
hlt
enter
lret
incl
les
and
inc
lds
call
add
repz
xchg
out
f2xm1
fsubl
mov
inc
ljmp
xor
loop
and
dec
lret
enter
imul
leave
lods
pop
dec
gs
in
and
inc
out
rolb
loop
js
dec
repnz
repnz
shl
add
les
xchg
popa
mov
nop
in
loop
dec
sbb
cwtl
vpsrad
out
lret
add
dec
repz
push
mov
shrl
test
cmpsl
loop
sub
pop
loop
in
ret
mov
in
dec
push
stc
repnz
repz
out
jmp
mov
sahf
out
loop
pusha
jl
gs
out
ljmp
hlt
jecxz
loop
hlt
in
out
hlt
jecxz
ljmp
sahf
hlt
loop
out
repz
push
mov
enter
repz
inc
bound
clc
in
jmp
in
inc
jmp
inc
pop
mov
icebp
notb
push
loop
movsl
lds
xchg
data16
sarl
sbb
push
test
xor
xor
dec
addr16
mov
pop
cmc
and
inc
les
pushf
repnz
out
xchg
sahf
and
push
aaa
fucom
and
inc
ror
mov
ret
pop
xor
dec
jmp
fdivr
inc
push
ret
addr16
sahf
das
in
add
jno
bound
andl
lret
mov
movsb
mov
jp
xchg
test
les
mov
xor
sarb
or
mov
mov
gs
mov
inc
push
dec
sbb
sahf
push
out
stc
daa
nop
pop
cmp
in
mov
xor
mov
icebp
mov
aad
fisttpl
pushf
mov
xchg
push
mov
ds
adc
jmp
push
or
xchg
xor
dec
push
stos
icebp
lcall
int3
sbb
into
mov
lds
rcll
or
sbb
inc
xor
or
inc
jmp
pop
xorl
and
movsl
sbb
mov
ret
les
adc
mov
enter
sub
jno
fildll
dec
fimull
lret
dec
into
xchg
in
leave
rorb
int3
ret
loopne
dec
ret
int
pop
dec
into
fsub
dec
or
inc
rolb
mov
lods
notb
aam
lret
fisubl
fcmovne
les
and
sahf
imul
subl
inc
in
mov
ret
enter
mov
std
pusha
out
call
les
ret
into
call
fstpt
ret
dec
aam
mov
jecxz
cmp
ret
lods
ja
sti
pop
into
rcll
jg,pt
mov
adcl
mov
popf
push
push
and
aaa
subl
addr16
push
int
test
pushf
mov
mov
inc
lods
or
ljmp
mov
lods
dec
dec
jno
scas
lcall
jnp
fildll
and
mov
jno
pop
les
and
cmp
daa
pop
lods
les
pop
popa
mov
push
movsb
insl
dec
xor
fsubrl
jns
out
mul
repnz
repnz
dec
and
fiadds
cmpsb
and
xor
add
xor
xchg
dec
out
shl
into
mov
jne
jecxz
push
xchg
rorb
sub
cmp
jmp
arpl
into
in
or
pop
adc
jae
dec
push
ss
dec
push
inc
in
inc
mov
xor
adc
rolb
or
pop
or
xchg
sub
loopne
nop
ret
mov
out
out
clc
adc
into
lds
shrb
xchg
mov
stc
xchg
lcall
je
add
push
dec
sbb
imul
and
ret
lock
ljmp
ret
push
mov
jecxz
sub
cmp
cmc
xchg
cmp
dec
sub
dec
movsb
inc
adc
leave
and
clc
stc
sbb
or
and
jecxz
cmp
stos
pop
arpl
stc
les
jb
dec
inc
and
inc
add
sub
loop
xor
leave
rcl
sarb
mov
or
sti
mov
push
arpl
add
sbbl
dec
sbb
or
push
mov
xor
mov
mov
aas
fistps
add
mov
pop
lods
icebp
inc
aaa
mov
jo
mov
jb
jmp
pop
test
jbe
dec
stos
dec
or
sub
out
xchg
scas
pop
xchg
push
fs
jecxz
syscall
pop
jle
lods
arpl
adc
jg
scas
fisubrs
mov
jno
das
xchg
pop
or
jl
shrl
test
int
in
out
les
add
incb
rolb
or
cmp
stc
cmp
lahf
sbb
sahf
jo
pop
outsb
jecxz
repnz
ret
lret
inc
movsb
fimuls
xor
fisubl
and
insb
and
sub
iret
ret
stc
add
ds
jb
shlb
add
jl
mov
sub
mov
add
andl
lea
inc
outsl
inc
lea
mov
mov
mov
sub
add
icebp
sahf
shll
stos
inc
ret
roll
in
jecxz
push
les
and
mov
inc
jmp
ret
ret
test
mov
lds
cmpsb
fdivr
push
add
dec
mov
mov
or
push
inc
mov
in
mov
movsb
xor
and
inc
xor
mov
push
fwait
or
insl
loop
lret
test
adc
shll
mov
or
nop
dec
lods
notl
ss
ja
fucomi
lahf
fistpll
cltd
scas
xor
dec
lods
add
shr
cmpsl
inc
repnz
lret
pusha
lea
addb
inc
mov
fmull
into
mov
or
pop
sbb
ja
das
jb
das
in
or
and
or
dec
mov
mov
sub
arpl
or
add
into
sub
nop
imul
aas
mov
jno
dec
xchg
mov
das
mov
shlb
inc
loop
psrlw
inc
adc
jns
or
push
fs
pop
loop
hlt
inc
js
fbstp
sub
leave
push
or
mov
jo
call
mov
data16
and
mov
jecxz
add
rolb
xor
inc
jb
push
test
add
popa
in
push
dec
and
xor
xchg
xlat
dec
aas
sbb
repnz
mov
fiadds
or
push
repnz
inc
push
nop
add
inc
gs
xchg
push
nop
cmc
inc
iret
bound
cltd
and
aas
push
xor
movsb
rep
dec
inc
repnz
inc
dec
jno
lods
lret
cmp
push
dec
into
sub
push
mov
jecxz
sub
lret
orl
pop
mov
ret
add
pop
scas
subl
iret
ja
div
jae
imul
push
pop
les
sbb
or
fcoms
push
inc
pop
xlat
dec
or
or
shrl
push
enter
add
xchg
mov
jmp
in
out
sbb
lods
mov
into
scas
rcll
enter
dec
nop
push
pop
insl
push
imul
sbb
lret
sarl
cmpsl
sbb
add
andl
insl
loopne
outsb
movsb
inc
cli
adc
sub
aad
inc
xorl
repnz
cmpsl
packuswb
mov
push
sbbb
lods
inc
push
popa
lret
stos
mov
lret
int3
out
inc
lret
xlat
addb
jne
pop
push
ljmp
xor
xchg
jp
data16
fisubs
push
add
shl
and
and
insl
add
jo
adc
pop
sub
inc
dec
xor
mov
loop
xor
jge
testb
mov
dec
or
pushf
enter
mov
aad
or
dec
dec
inc
loopne
lret
loop
shr
inc
imul
sub
int3
sub
pop
fisubs
mov
pop
movb
mov
sub
xchg
loop
inc
lds
sub
repz
aaa
add
jae
xchg
aaa
inc
stos
mov
mov
sub
cld
jb
and
sub
mov
adc
mov
xchg
pop
mov
add
add
addb
repz
lods
clc
push
stos
or
popa
add
lods
cli
cmp
sarl
lahf
test
push
orl
movsl
dec
adc
ds
ret
mov
aas
mov
dec
or
cmp
pusha
pop
jns
imulb
cvtps2pi
jp
sub
jl
mov
mov
inc
and
sub
scas
fisubs
jmp
test
push
in
arpl
lods
rol
rorb
call
out
inc
rol
movsl
or
mov
cmpsb
add
enter
sbb
jae
mov
cwtl
dec
addr16
and
jae
xchg
lds
push
dec
push
sub
xchg
jae
fldz
popa
fidivs
jmp
in
testl
sub
bound
in
ret
stos
ror
out
rcrl
pop
imul
add
imul
push
test
shr
and
dec
mov
mov
add
adc
pop
adc
nop
mov
hlt
sub
xor
cs
in
ss
pop
outsl
stos
mov
gs
imul
insl
inc
cmp
mov
out
sub
addb
or
in
arpl
inc
mov
dec
iret
andb
push
add
ret
or
push
test
mov
sub
imul
popa
jg
inc
adc
std
mov
mov
mov
mov
sub
push
lcall
in
mov
jmp
xor
add
and
clc
push
push
popa
bound
test
ret
or
ss
int3
lods
ljmp
insl
test
outsb
cltd
ja
fildll
scas
dec
xchg
jo
popw
out
inc
sahf
xchg
adc
lea
inc
mov
pushf
lea
fucomip
jo
cld
dec
inc
and
movsb
inc
push
loop
fcmove
fcomp
sub
iret
sub
sub
loopne
fcomp
mov
fstpt
fstpt
fistpl
insl
sub
pop
fiaddl
mov
lret
rcrb
dec
add
dec
and
arpl
cwtl
out
jmp
addr16
cld
lahf
xor
in
out
or
add
xor
addb
pushf
and
iret
mov
repnz
or
fnstenv
jbe
cmpsl
fcoms
sti
fadd
jecxz
bound
sbb
dec
cmp
adc
lods
dec
loope
cmpsl
jns
add
ficoms
bound
jo
push
fwait
jmp
movsb
stc
xor
icebp
sbb
lea
stos
jb
and
leave
lret
mov
add
leave
mov
add
lcall
dec
sub
mov
xor
xlat
mov
lock
jmp
and
or
sti
adc
mov
mov
pop
cmpb
lods
fsts
ljmp
pushf
fisubrs
lods
xor
push
xchg
dec
call
mov
push
movsb
pop
sbb
and
ja
daa
in
into
repnz
jno
mov
sbb
mov
lds
cmp
cmp
add
jmp
aas
xchg
mov
dec
add
aam
add
ds
mov
out
es
jecxz
dec
inc
lods
and
dec
lea
mov
fdivp
cmpl
pop
cmp
cvtps2pd
pop
pop
pop
mull
fwait
xor
xor
inc
sub
push
arpl
push
lret
fisubs
aaa
loopne
cwtl
sbb
cmp
add
cmp
pop
aas
js
pop
cli
ret
xchg
inc
adc
mov
xchg
and
jo
pop
xchg
loopne
mov
jl
pop
inc
ss
mov
push
out
mov
sbb
repnz
lods
insb
pop
dec
push
fistpll
gs
xor
sub
mov
data16
lods
sarb
cmp
incb
dec
ljmp
movsb
mov
xchg
xorb
and
cmp
inc
cmp
cmc
clc
add
icebp
mov
push
dec
sahf
jae
sarb
mov
jae
outsb
stos
or
stc
pop
mov
movsl
ret
test
cmp
inc
mov
out
sub
repnz
inc
and
xchg
pop
cmp
call
xor
cmovbe
dec
ljmp
sub
dec
xchg
jne
inc
dec
std
jb
jl
test
sub
or
test
stos
inc
jae
std
inc
mov
cltd
and
jb
into
inc
fstp
mov
je
int
sub
ljmp
mov
mov
fdivr
int3
pusha
mov
cmpsb
inc
aam
dec
loop
dec
dec
sti
inc
mov
ret
ret
jo
dec
mov
fs
jg
popa
and
ret
clc
into
mov
jge
leave
sbb
jp
lret
fisubs
hlt
rolb
stos
mov
leave
cmp
xchg
pop
stos
jne
rol
pop
arpl
rcll
cld
dec
shl
fadd
popf
add
mov
jmp
das
and
or
leave
gs
cmp
dec
mov
enter
fisttpll
inc
in
addr16
adc
ja
addr16
mov
jne,pt
push
xor
pop
mov
mov
add
test
sub
fiaddl
test
xchg
popa
sub
dec
sbb
push
subl
in
cmp
test
je
hlt
mov
add
out
add
lods
pop
nop
cmp
gs
cmc
push
dec
fcoms
data16
std
adc
xchg
jge
sbb
mov
inc
ret
xchg
adc
xchg
lods
add
andb
sbb
pop
mov
fsubrl
add
mov
fs
inc
push
dec
push
cs
pop
cmc
xchg
fdivl
pop
sti
sub
and
fwait
jl
nop
xor
sub
in
or
ret
xchg
arpl
aaa
or
ret
repz
shr
imul
push
push
inc
insb
pop
stos
mov
mov
mov
cmp
xchg
mov
mov
jno
sbb
call
inc
jno
mov
out
pop
lds
jns
insb
push
push
pop
cmpsl
lret
push
in
or
icebp
imul
sbb
repz
xchg
rcr
aad
push
cmc
push
aas
mov
mov
sbbb
fiaddl
xchg
pop
ss
mov
jne
lds
loop
dec
cmp
mov
push
pushf
mov
lods
out
dec
pop
fwait
inc
jg
dec
repnz
or
ds
lea
add
mov
aam
pop
mov
ljmp
leave
aas
push
pop
loop
in
jge
push
dec
adc
out
cmp
mov
out
repz
stos
iret
inc
inc
or
call
hlt
movsl
mov
mov
jg
incl
loop
jne
jge
jecxz
mov
cli
lods
mov
cli
push
loop
jne
hlt
cmc
in
repz
mov
xor
jae
mov
mov
outsb
jecxz
scas
loop
inc
mov
jmp
mov
ret
sar
std
add
in
je
dec
aad
lret
dec
or
mov
stos
ret
jmp
stos
xchg
pop
out
icebp
sub
imul
movsl
jmp
es
cmp
fs
lds
jmp
sti
test
repz
pop
dec
stos
xchg
movl
insb
inc
cmp
push
faddl
jecxz
lahf
mov
push
std
sti
add
dec
fildl
cwtl
lods
fstps
inc
adc
fsubrs
and
mov
jb
lods
movsb
lret
mov
mov
imul
int3
push
in
bnd
rolb
jno
pop
lret
push
add
dec
jge
dec
les
mov
cmpsb
loopne
push
popa
les
mov
jge
cmpsl
adc
pop
enter
inc
outsl
add
arpl
push
bnd
mov
test
leave
dec
push
and
cmc
out
or
inc
sub
dec
shlb
cmp
push
fcompl
imul
fld
and
into
fnsave
push
jp
push
jmp
loopne
fldl
push
fistps
imul
xchg
pusha
ret
mov
pop
inc
ss
xor
movb
push
fmul
clc
loop
fs
mov
jg
dec
pop
inc
jno
push
ror
hlt
cmp
iret
push
and
fnsave
std
xor
leave
jbe
outsb
in
ret
push
pop
movsb
ret
dec
pop
call
in
fildl
pop
add
adc
mov
movb
pusha
cmc
das
inc
mov
imul
lahf
push
inc
pusha
or
inc
ret
lahf
dec
dec
in
mov
pop
mov
scas
add
lock
adc
add
inc
ret
std
jl
ret
imul
ret
pop
repnz
ret
add
lret
jbe
lock
shrb
popf
out
dec
outsb
stos
jne
add
dec
or
inc
mov
pop
and
movsl
ficoms
adc
das
leave
dec
adc
test
add
pop
lods
or
fisubrl
sbb
sbbb
sub
ret
inc
xchg
and
pop
mov
shl
or
ret
into
add
jae
pop
outsb
xchg
cmp
data16
jp
mov
sbb
push
repz
out
mov
xchg
push
cmp
je
repnz
insb
dec
cmova
jbe
imul
xchg
dec
imul
add
xchg
mov
xchg
mov
pop
sbb
psllw
ds
jp
inc
jo
adc
and
in
adc
mov
add
and
xor
inc
jecxz
addr16
iret
pop
rcrb
addr16
mov
int3
push
jecxz
std
pop
jmp
das
test
sub
in
sbb
mov
rcr
add
sbb
jo
xorl
popa
mov
push
or
sbb
loop
rcr
in
ficomps
fisubs
inc
xchg
jo
fbstp
cmp
fsubr
or
jo
pop
enter
cmpsl
xor
in
inc
daa
or
pop
nop
mov
xor
movsb
mov
cmp
daa
cmp
loopne
es
lods
xchg
stc
repz
pop
sub
ficomps
and
aam
jo
arpl
mov
adc
mov
fcomip
mov
add
adc
repnz
sar
popa
loope
xor
stc
mov
lds
dec
and
pop
pop
test
inc
jno
lods
jo
dec
or
fsubl
add
or
pop
daa
iret
sub
fiaddl
imul
sbb
fnstsw
inc
les
dec
dec
jb
pushf
cmp
stos
out
out
xor
cmpsb
dec
add
es
or
mov
or
out
out
scas
fisubl
shl
loopne
js
fcmovne
ret
movsl
cmpsb
jecxz
pop
push
push
sub
roll
pop
loope
outsb
loope
shrl
inc
dec
loopne
or
les
fcomip
leave
xchg
out
ficompl
pop
cld
inc
scas
stc
dec
xchg
ficoms
mov
xchg
mov
jecxz
add
int3
adc
ljmp
subb
or
xchg
jp
aaa
xchg
push
push
xor
ret
ret
loopne
mov
jae
aas
andl
in
or
jne
xor
roll
cmp
stos
push
imul
popf
mov
outsl
jg
dec
and
lret
loopne
add
icebp
sahf
add
sub
mov
inc
pop
cmc
fnstcw
sahf
insb
out
orb
ret
pop
push
cmpsl
bound
addb
or
push
inc
inc
data16
mov
ret
dec
dec
rorl
adc
pop
mov
jns
sub
dec
or
mov
add
lea
adc
cmp
orl
mov
pmullw
enter
sub
lods
jo
cmpsl
cmpsb
sub
shrl
add
jne
outsl
mov
push
sbb
jno
jnp
and
adc
bound
stos
aas
fld1
insl
inc
sub
addb
mov
jne
push
aam
xor
ljmp
xchg
andl
or
in
repz
imul
fs
test
or
pop
and
or
cltd
pop
push
push
ficomps
outsb
mov
inc
ret
icebp
xor
popl
xor
loop
mov
adc
stos
dec
push
mov
mov
push
add
icebp
int
inc
mov
aam
sub
pop
loop
inc
jecxz
loopne
xchg
inc
or
sbb
push
xorl
push
mov
lds
add
les
sbb
ljmp
es
out
outsb
fs
dec
mov
icebp
jo
or
push
shll
inc
test
subb
bound
xorb
xor
loop
shll
add
ficoms
sti
sub
shl
shll
repnz
and
icebp
xchg
or
xchg
add
mov
and
adc
pop
daa
leave
ja
fsubl
lock
inc
inc
pop
popa
mov
cmp
fisubrl
movl
popa
pop
or
cmp
xor
lds
stos
loopne
sub
add
and
dec
add
jl
adc
in
fsubs
pop
sti
or
stos
aas
loop
jno
sbb
dec
call
jo
mov
inc
xor
sub
loop
dec
fs
add
jecxz
dec
insb
xor
pop
jno
cs
daa
and
ret
inc
push
adc
xchg
dec
lret
mov
mov
jno
mov
inc
add
xchg
fdivrp
dec
test
sbb
cmp
inc
jae
arpl
or
nop
dec
inc
add
inc
roll
xor
and
inc
iret
sub
mov
lea
stos
js
adc
or
fisubs
insl
push
int
or
xorl
dec
or
push
in
xor
push
mov
add
ds
mov
xor
mov
and
mov
xchg
add
bound
push
inc
pop
ljmp
outsb
lret
adc
lods
adc
imul
sub
leave
jecxz
adc
cmpsl
icebp
and
rolb
fwait
mov
push
xchg
push
test
cmc
cmp
call
fdivrl
and
xchg
push
sbb
cmp
lcall
or
loop
movsl
test
cmc
cmpsl
add
pop
dec
fnsave
jae
push
call
sub
out
xlat
aas
ss
int3
movsbl
cmp
xor
mov
jae
in
add
aam
dec
loope
mov
fisubs
hlt
push
aam
in
mov
shlb
mov
adc
ret
pushf
es
push
inc
inc
jecxz
mov
xlat
rcll
movsl
pop
dec
andb
jns
mov
jp
and
rclb
xlat
sub
jp
dec
xor
inc
cmp
mov
pop
ret
cmp
imul
pop
xor
aam
sub
outsb
inc
mov
push
andb
or
adc
loop
lods
sahf
bound
pop
add
push
push
or
fiadds
stc
in
adc
inc
push
data16
adc
sub
or
loopne
jb
in
pop
add
pusha
dec
pop
daa
and
loop
mov
ljmp
sbb
pop
xchg
and
pop
mov
rorl
sub
ret
push
push
mov
negb
inc
stos
dec
inc
mov
xor
push
int3
das
push
test
adc
arpl
les
leave
les
loop
popa
jnp
xor
push
repnz
insl
jg
inc
pop
push
or
mov
icebp
xor
inc
mov
push
pop
mov
repz
cmpsb
es
loop
vmulsd
test
dec
dec
push
movsb
loope
outsl
in
scas
outsb
dec
je
xchg
sub
scas
xchg
fs
inc
mov
sub
push
xor
insb
and
call
inc
sarl
icebp
mov
push
dec
pop
mov
sbbl
mov
sbb
or
pop
mov
in
ljmp
push
jne
xor
jno
mov
xor
add
gs
cmp
popf
xchg
push
insb
dec
inc
stos
sub
and
repnz
sub
pushl
js
ss
test
ret
dec
add
in
mov
dec
les
imul
test
jb
inc
jge
jno
sbb
aas
sti
or
cmp
mov
enter
sbb
adc
les
cwtl
xlat
mov
addl
mov
ret
push
out
and
ret
xor
aas
jbe
lahf
jge
jne
xor
loop
jge
pushf
adc
iret
mov
rorl
jo
ljmp
fs
jle
std
mov
mov
lret
push
xchg
aas
jl
mov
imul
mov
inc
stc
mov
push
cmpsb
insl
mov
or
arpl
insb
cld
stc
in
push
lock
push
daa
push
add
xchg
stos
mov
aaa
cli
fmuls
lods
mov
dec
das
xor
adc
pop
sbb
or
xor
and
inc
mov
testl
xorb
cmp
cmpsl
into
push
cwtl
inc
subl
call
xor
test
mov
int
jne
out
xchg
sub
fists
in
xor
lahf
and
inc
mov
pop
push
push
outsb
mov
add
push
sub
dec
dec
push
ja
ss
lock
add
inc
xor
lds
lret
ss
std
sbb
bound
sti
dec
in
out
lcall
jmp
pop
aam
test
pop
mov
jle
js
pop
ja
jne
push
add
add
test
pop
pop
pop
mov
inc
cmpsl
fldenv
or
push
add
jmp
and
jo
fcmovb
repnz
xor
div
sarb
jnp
jne
add
dec
inc
test
inc
add
fists
xor
je
call
pop
out
or
leave
and
and
inc
jl
mov
dec
lock
mov
flds
lods
pop
pop
lret
xlat
xorb
int3
cwtl
jmp
xchg
sbb
add
divl
addb
pushf
push
je
and
imul
pop
cmp
or
les
test
and
in
shll
stos
cmc
fcomi
jne
addr16
or
xor
mov
icebp
imul
daa
fisubl
jmp
add
inc
push
mov
je
fldt
loop
ficomps
shrl
orl
mov
in
and
rcr
push
push
cmc
xor
dec
push
test
add
pop
add
fidivl
daa
stc
pushf
fdivrs
jnp
mov
rcrb
push
mov
fsubl
ret
jb
lret
mov
cmpsb
nop
dec
jno
sub
pop
sahf
lock
lds
push
addr16
repz
popa
test
add
dec
inc
shr
ret
ret
js
mov
ss
inc
mov
cltd
ljmp
leave
inc
daa
mov
pop
lds
sub
add
mov
rcl
ret
cmp
in
pop
call
int
arpl
movsl
and
inc
jle
or
mov
jno
or
enter
leave
loop
pop
jae
leave
sub
out
sahf
or
into
xor
sub
fiaddl
out
mov
mov
in
cmp
inc
or
push
or
mov
aad
mov
jo
sub
fs
clc
movsb
xchg
push
jp
pushl
gs
ret
invlpg
lcall
add
jne
test
daa
jns
cmp
dec
mov
push
and
movhps
sub
js
test
ret
dec
enter
ret
aas
in
cpuid
or
add
cmc
or
test
adc
adc
cmp
ret
int3
stc
leave
ffree
dec
xor
addl
add
cmc
dec
test
into
xchg
pop
iret
inc
mov
dec
mov
jno
xor
xchg
test
loopne
dec
xchg
aas
inc
sub
add
in
xchg
shrb
les
lret
add
push
sub
hlt
cld
nop
es
jge
or
pop
inc
fs
sbb
enter
fisttpll
inc
jle
xchg
ret
int3
pop
pusha
xchg
mov
ror
adcb
pusha
cwtl
js
inc
fwait
add
mov
and
into
mov
or
cmp
xor
mov
cmp
test
mov
out
inc
mov
lock
add
cmpsl
popf
jecxz
loopne
mov
adc
ljmp
push
and
sub
mov
push
lods
int3
xor
in
push
and
push
arpl
or
xor
loop
xchg
ljmp
shrb
adc
mov
sbb
inc
aam
sub
push
inc
mov
paddb
mov
sarl
mov
xlat
push
outsl
jo
or
in
dec
roll
ret
ror
cld
scas
add
fdivr
aam
mov
data16
in
add
roll
push
pop
rorb
not
dec
sub
xor
hlt
inc
jecxz
pop
sbb
inc
fmuls
push
repz
push
adc
outsl
fistpll
push
push
mov
jl
pop
in
scas
les
cwtl
js
insb
clc
inc
mov
repnz
jb
xchg
shlb
or
xchg
test
mov
lds
xor
leave
es
mov
rep
loop
jbe
aas
inc
xor
pop
int3
push
repnz
addr16
cmp
pop
add
adcl
imul
repnz
loopne
and
jbe
pop
mov
int
and
movsb
dec
xor
jg
repnz
les
pop
dec
xchg
mov
mov
fisttps
addr16
test
aaa
ret
or
rorb
or
fidivrs
jecxz
push
adc
xchg
stc
lea
pop
mov
pop
jecxz
jbe
rorb
and
lock
lret
into
fstpl
jmp
jmp
and
add
jmp
fstps
add
icebp
lcall
test
dec
mov
ret
lods
roll
ficoms
jns
mov
std
mov
add
loopne
stos
and
inc
cmp
enter
xchg
inc
jns
push
dec
out
dec
xor
inc
xchg
ret
dec
dec
test
popl
inc
iret
jg
xchg
dec
push
inc
inc
loop
repnz
add
sub
mov
push
fwait
ret
ret
cli
mov
in
inc
scas
ret
pop
inc
shl
test
xchg
adc
cld
jge
repnz
cld
lahf
xchg
dec
insl
popa
pop
pop
mov
filds
cs
xor
push
add
inc
xor
sub
dec
scas
fs
dec
lods
inc
lock
add
jo
shll
dec
cmp
mov
test
jae
pop
gs
fldenv
mov
lock
ljmp
test
inc
es
or
cmp
sbb
jae
lcall
loop
inc
jo
push
shlb
fs
and
cld
inc
in
ret
add
push
mov
fistps
mov
inc
insl
add
arpl
dec
or
mov
fs
pop
ficomps
aam
rolb
cwtl
add
insb
cld
aam
xchg
jle
mov
ja
sub
adc
sub
rcrl
mov
cmpsb
leave
mov
xchg
ret
sar
adc
add
outsl
das
dec
dec
mov
sub
lods
jp,pt
rorb
mov
insl
mov
jne
push
mov
sahf
adc
jns
in
in
lock
cmp
aaa
shrb
js
addb
je
inc
inc
in
adc
inc
mov
and
ss
sub
mov
je
inc
jge
xlat
ret
push
cltd
aad
rcll
shrl
jecxz
add
push
and
push
cmc
cmc
sbb
push
push
pusha
add
xchg
clc
ss
sub
lds
loope
mull
inc
jno
and
inc
mov
sti
in
adc
inc
adc
dec
jo
xchg
out
in
imul
or
fbld
push
lods
pop
mov
xchg
pop
shll
and
je
xor
dec
mov
mov
sub
pop
inc
ret
cmp
lods
push
jecxz
daa
int
mov
gs
or
push
idiv
jo
pop
push
ret
aas
add
push
jno
insb
add
adc
inc
sub
fildll
adc
stos
dec
cmpsl
dec
mov
or
ror
jmp
mov
dec
pop
ret
pop
fsubrp
inc
jmp
das
jb
lods
mov
subl
mov
jmp
imul
jg
pmuludq
in
dec
movsl
shrl
sbb
out
clc
pop
lar
cs
pop
inc
xchg
xor
jmp
dec
pushf
jg
mov
lret
sub
xorl
out
add
push
test
dec
in
into
or
mov
sub
mov
mov
push
inc
xor
dec
lcall
mov
loopne
inc
fwait
adc
ret
xor
in
jg
fdivp
repnz
scas
ljmp
mov
repnz
push
movsb
aaa
rcl
add
test
les
push
fildll
jo
ljmp
aaa
pushf
push
cmpsl
adc
xchg
std
jp
add
lods
dec
adc
test
or
std
mov
sbb
push
arpl
cmp
xchg
out
sbb
addr16
popa
loope
aas
cmovb
and
xor
ror
repnz
int
add
sbb
lods
or
imul
in
sahf
pushf
push
mov
adc
ljmp
mov
xor
sub
mov
adc
push
aas
inc
ja
sub
jg
adc
inc
insl
in
pusha
xchg
fidivrs
sub
lds
orl
add
push
xchg
xor
xchg
inc
xlat
adc
sbb
add
frstor
inc
inc
inc
aad
lret
les
cltd
out
adc
cli
outsb
jecxz
adc
stc
xor
gs
push
add
inc
sub
stos
xor
addr16
movsl
mov
clc
lods
jmp
adc
jbe
sbb
aad
add
lret
mull
fs
mull
mov
push
cmpl
dec
xchg
inc
cmc
add
addr16
cltd
aam
xor
mov
lahf
into
fsubrp
sub
movb
adc
inc
push
pop
mov
sbb
std
rorb
bound
loop
icebp
jl
mov
arpl
mov
mov
loop
rcll
mov
mov
outsl
divb
mov
psrld
in
fldt
aas
fs
loopne
cltd
ljmp
loop
sub
and
and
dec
movsl
add
mov
and
das
adcl
fisubs
dec
cwtl
add
lods
sub
mov
loop
jg
mov
es
mov
xlat
adc
vmovapd
scas
popa
mov
jmp
pop
aas
sbb
or
mov
inc
and
inc
icebp
lret
xor
jb
adc
inc
add
inc
ror
adc
pushf
ret
mov
mov
sbb
bound
push
mov
cld
and
test
fadd
adc
jae
jnp
cmpsb
dec
hlt
push
ret
call
mov
adc
pop
psubd
loop
jno
loop
mov
mov
shll
cmp
push
ss
sub
adc
jmp
and
ja
lods
dec
xchg
add
sbb
ret
jle
arpl
shlb
inc
push
into
fldl
xor
lret
mov
fimuls
insl
add
fistpll
dec
add
xchg
jo
mov
pop
loop
bound
jmp
mov
js
inc
sub
icebp
push
cmp
cmp
insb
adc
outsb
ljmp
inc
ja
sbb
and
sti
cmc
pop
xchg
das
fdiv
popf
push
cmp
and
sbb
das
subl
into
mov
mov
stos
cltd
ret
or
and
pop
jl
xchg
xlat
sub
ffree
push
mov
pushf
insb
leave
mov
mov
enter
lret
sbb
pushf
aad
movsl
mov
loop
out
leave
and
mov
imul
lods
pop
push
lds
arpl
dec
lret
pop
sub
rcrb
je
mov
add
or
or
and
leave
js
push
push
jno
insl
cmp
in
fidivs
test
lcall
add
cld
lahf
ja
inc
mov
and
sti
loopne
or
sub
sub
adc
jne
or
es
xorl
movsb
pop
xchg
xchg
imul
cmp
mov
int3
ss
push
stos
mov
fcoml
inc
shll
dec
nop
movsl
and
push
lea
pop
adc
jne
ret
add
push
stos
jl
adc
jmp
cmp
scas
hlt
and
mov
xchg
leave
wrmsr
dec
lock
repnz
mov
sub
mov
add
pop
xor
xchg
dec
adcb
inc
data16
ljmp
inc
xchg
or
fmuls
xor
and
sub
mov
pop
mov
mov
or
rorl
inc
out
ret
mov
rcrl
int
aas
pop
mov
loopne
les
pop
sub
jo
data16
fmuls
push
stos
cmp
sub
mov
jnp
inc
lds
or
inc
jae
cmpsl
shll
add
hlt
rolb
mov
lret
inc
insb
mov
into
lds
insl
cwtl
xchg
std
leave
inc
int3
arpl
push
into
sbb
sub
xchg
xchg
push
sub
push
push
jo
movsb
xor
mov
and
insl
ret
mov
cmp
mov
sub
xor
jnp
gs
ret
xchg
cld
add
shlb
std
sbb
cld
pop
mov
rcll
mov
ss
shll
and
loop
dec
push
aam
sub
inc
push
inc
and
sbb
and
or
movsb
lods
sub
jmp
cmc
xchg
pop
mov
xor
add
movzbl
fstpl
loopne
mov
jl
repnz
jecxz
aam
dec
lret
mov
mov
aas
inc
ljmp
inc
dec
lret
sub
push
jbe
in
jmp
push
jbe
into
adc
fsubl
xor
dec
mov
mov
push
das
cmp
mov
test
cmpsl
mov
and
adc
xor
sub
sti
jne
clc
andl
adc
shrb
push
arpl
imul
mov
pop
push
ret
aaa
pop
stos
rorb
mov
and
sub
jo
fcomip
popa
push
inc
rcll
jecxz
jp
shlb
aas
mov
sub
inc
cmpsb
or
mov
flds
sub
pusha
push
pop
sbb
push
xchg
sub
inc
jno
xchg
push
out
dec
outsl
sub
call
cmp
xchg
ficomps
jbe
insb
stos
push
mov
jo
or
call
xchg
sets
in
and
movsl
fsubrp
das
mov
lods
cmc
mov
add
data16
fadd
bound
push
add
adc
xchg
arpl
je
int
out
out
arpl
insb
lcall
and
shlb
lcall
mov
sbb
inc
loopne
mov
add
pop
sahf
cltd
sub
cmp
flds
fcmove
movsb
inc
pop
add
jbe
or
cltd
pusha
test
imul
push
cmpsl
cli
out
inc
loopne
sbb
sub
fcomps
or
aas
pop
mov
mov
repnz
punpcklbw
jmp
rol
jge
repnz
push
push
jecxz
xchg
sti
inc
mov
and
mov
lret
xchg
rol
push
sub
cmc
pusha
mov
lods
into
sarb
sti
mov
inc
jb
xor
aaa
sbb
jno
sbb
das
mov
pextrw
jb
inc
shrl
mov
rol
aas
je
mov
in
addr16
mov
push
and
insb
cmp
sub
loopne
or
push
add
repnz
in
dec
movsl
jo
adc
cmpsb
or
adc
into
in
cmp
jo
roll
add
in
arpl
iret
jmp
pop
and
in
push
jns
lea
jecxz
pop
jl
push
add
testb
pop
xchg
arpl
xchg
repnz
dec
adc
cli
xchg
stos
js
fcoms
test
inc
cltd
inc
sub
cmpsb
daa
push
sbb
or
mov
jns
sbb
xlat
or
data16
ja
loop
xor
call
xchg
ret
or
adc
inc
leave
xchg
dec
stc
sub
movsb
fists
gs
or
mov
inc
jne
enter
push
add
fimuls
mov
insb
insb
push
aam
imul
inc
ss
inc
arpl
xchg
inc
xor
insl
repnz
into
push
imul
test
rorl
push
aam
sub
adc
lods
sarl
or
sets
lds
dec
and
jg
or
sub
ret
mov
xchg
out
in
orb
mov
rol
pop
sbb
popa
mov
lods
inc
adc
shl
or
sbb
mov
aas
repz
arpl
stc
sahf
and
les
aam
ret
mov
stos
xor
inc
jno
aas
push
aad
fadds
xchg
aas
xorb
xchg
mov
push
mov
jae
push
xchg
jne
inc
xor
orl
xchg
ret
push
shlb
inc
dec
stc
or
add
push
icebp
leave
ss
shlb
xor
movsb
sub
cmpsb
jo
jmp
xchg
and
jo
adc
lods
mov
sub
repnz
lods
int
or
jmp
dec
lret
push
pop
jns
out
cmp
test
subl
jne
and
sqrtps
adc
or
xor
xor
or
cld
jae
jnp
je
arpl
fbstp
add
test
xor
pop
add
loop
fsubrp
mov
scas
sub
adc
dec
mov
repnz
les
cmc
inc
stos
push
inc
cli
xchg
inc
test
ret
je
mov
out
out
inc
or
jb
xlat
mov
mov
ret
rorb
popa
loop
movsl
cmpsb
push
cmpsl
fldl2t
inc
jmp
cwtl
rcll
pop
fimuls
add
mov
stc
mov
xor
iret
fisttpl
jo
cmp
sub
sbb
xchg
cli
aad
fisubrs
pop
nop
in
mov
int3
inc
rolb
and
mov
aad
je
loop
pop
pop
in
aam
mov
mov
sti
lret
xor
sub
hlt
push
lea
out
and
lds
pop
or
lcall
gs
cmpsl
inc
orw
adc
push
call
mov
add
cwtl
nop
adc
je
test
jns
push
adc
repz
sub
cltd
push
addr16
fsubr
das
mov
push
faddp
sub
xor
das
jge
test
and
les
aam
xchg
push
add
inc
decb
aam
in
ret
loopne
mov
xchg
rorb
mov
sbb
data16
push
mov
jp
cmp
inc
xor
call
dec
sar
xchg
outsb
addl
pop
lods
cld
mov
loop
lods
not
sar
pop
xchg
and
dec
mov
je
push
int
inc
fldl
icebp
pop
add
sbb
add
mov
adc
xor
pop
lret
fdiv
jne
push
lsl
and
aad
outsb
lds
aam
mov
pop
and
aaa
cli
aaa
pop
pop
push
mov
fcom
bound
das
pop
mov
pop
fisubrl
test
add
inc
cwtl
gs
mov
push
xchg
repnz
pop
dec
ficoms
inc
je
sbb
testb
lods
xchg
addl
aad
sub
movsl
lds
push
sub
adc
cmc
das
fwait
in
push
bound
dec
mov
je
push
mov
sbb
out
scas
ret
jge
xchg
outsl
mov
jae
sub
add
adc
inc
loopne
aam
rol
flds
repnz
les
cmpsl
or
push
out
inc
add
nop
dec
or
mov
cmpsl
jns
sub
outsl
jecxz
fcmove
xchg
xor
mov
aam
data16
and
insb
dec
cmp
and
lods
jne
jecxz
push
bnd
cmp
stc
add
mov
lret
dec
mov
cmp
ret
scas
insl
add
cmp
or
daa
shlb
add
mov
cltd
ds
mov
loope,pn
call
mov
inc
in
pushf
test
ss
lret
sbb
pop
mov
je
shll
test
scas
add
into
push
pop
loope
pop
aas
pop
mov
push
ljmp
dec
mov
sbb
leave
inc
dec
jmp
ljmp
push
flds
sahf
pop
sub
adc
or
jmp
jp
sub
stos
push
lds
jo
xor
push
ficomps
pop
add
jo
negb
lahf
inc
sub
dec
test
mov
xchg
or
xchg
mov
in
push
lods
iret
inc
pushf
les
fs
sub
mov
in
andb
insl
loopne
and
mov
int
push
and
and
mov
xchg
pop
shll
cmc
mov
shl
xchg
jl
mov
mov
inc
sub
or
repnz
lods
sub
cmp
nop
sub
arpl
fstpl
aas
popa
jp
xchg
pushf
push
scas
lds
cmpsb
jno
lea
int
bound
sbb
in
sar
movsb
aas
js
cmpsl
dec
adc
or
into
aam
jno
insb
jbe
mov
dec
adc
mov
dec
and
mov
push
add
xor
clc
test
into
arpl
mov
xchg
sub
push
sub
sbb
mov
loop
clc
inc
add
mov
ds
data16
je
mov
and
xchg
push
fdivrl
inc
pop
in
jae
fdivrs
enter
push
les
pop
pop
mov
jo
xchg
jns
jo
add
pop
ficomps
call
xor
cmp
fisubrs
jmp
pop
inc
sub
and
bound
adc
adc
adc
outsl
lods
jecxz
pop
push
add
xor
jo
das
fisubrs
jae
jnp
fdivrs
cmc
inc
cmp
test
inc
xchg
sbb
sbb
loope
cmc
pmovmskb
mov
shll
jne
insl
cmc
xor
or
jo
sbb
aam
into
sub
push
adc
push
mov
outsb
mov
dec
jl
dec
stos
lods
mov
shrl
sbb
inc
cs
and
sub
pop
sub
imul
in
xor
push
into
testb
push
pop
movlps
push
fs
dec
arpl
test
push
add
lea
mov
gs
mov
xchg
pop
rcll
add
push
xchg
cmp
movsb
imul
lret
xchg
add
decb
les
lock
dec
jae
and
jge
add
adc
inc
inc
stos
add
sub
or
lods
ret
xchg
test
loopne
stos
rcl
mov
sbb
imul
scas
lret
lds
lret
inc
and
mov
adc
sub
hlt
mov
jb
lods
stc
and
mov
push
js
rclb
movb
mov
sbb
push
mov
movsb
icebp
std
jbe
movzwl
pop
xchg
fisubrl
mov
push
or
ds
inc
scas
cmpsb
aas
aaa
pushl
add
leave
ror
push
add
rcrl
push
cmc
stos
fwait
add
adcb
lds
les
add
outsb
lock
aas
xchg
popa
icebp
push
cwtl
mov
cmpsb
mov
jecxz
gs
mov
jne
call
xor
sbb
rcrl
cmp
sbb
mov
iret
lret
hlt
push
je
mov
sub
mov
jb
inc
int
das
mov
jmp
mov
das
and
fistps
call
nop
inc
lcall
inc
push
fiadds
icebp
stos
mov
bound
pop
dec
push
ja
inc
outsb
mov
pop
pop
push
sub
inc
lods
shll
or
mov
pop
nop
popa
loopne
mov
repnz
nop
enter
xchg
add
cmp
fwait
mov
inc
pusha
invd
sub
dec
lcall
into
ret
jne
pop
mov
lds
aam
adc
dec
push
ljmp
mov
or
les
inc
or
or
mov
jmp
cmpsl
in
out
fimuls
jmp
pop
xchg
pusha
sub
jo,pt
push
pusha
push
ret
mov
sbb
fistps
repnz
mov
ficoms
imul
cwtl
jb
pusha
mov
xchg
sahf
sub
loopne
popa
incl
ret
sbb
add
push
jle
clc
js
sbb
aas
ja
pushf
rorb
inc
inc
andl
cmp
ret
jmp
mov
mov
les
xchg
sub
testb
ljmp
jmp
mov
add
inc
lret
addr16
loop
mov
outsl
ljmp
das
pop
mov
push
mov
sub
mov
popa
shl
or
stc
repz
xor
nop
sti
loop
jecxz
pop
push
inc
pop
pusha
or
pop
shlb
cmp
aaa
push
mov
jo
push
mov
pop
cmpsb
scas
push
or
xchg
mov
mov
and
sbb
cmp
or
and
out
push
sbb
fisubl
out
fs
fildll
pop
dec
xchg
mov
cmp
fcoml
mov
lods
hlt
mov
jmp
dec
scas
int3
movsl
dec
icebp
fiadds
or
insb
and
or
imul
lahf
mov
xchg
je
xor
lds
je
cmp
xor
aas
push
push
sub
fisubs
cmp
pop
mov
push
mov
and
push
xor
pop
pop
sub
inc
xchg
out
pop
in
sub
ds
data16
into
in
pop
and
dec
xor
cli
push
es
xchg
sub
shrl
xor
cmpsb
test
mov
fwait
sbb
mov
cltd
inc
or
das
or
add
rorl
dec
jecxz
push
in
pop
add
in
mov
cmp
icebp
stc
lcall
add
xchg
stc
test
jo
or
jb
cmp
lea
ret
lret
dec
inc
push
aas
out
adc
jmp
jmp
dec
shll
repnz
lea
and
bound
jmp
mov
dec
imul
sub
cli
xor
inc
shll
das
add
sub
xor
ror
repnz
inc
sbb
les
and
xorl
mov
cltd
sub
sar
dec
sub
mov
or
dec
dec
or
pop
negb
mov
jle
in
and
push
inc
dec
or
jge
mov
sub
or
ret
add
test
push
push
adc
add
jbe
sub
dec
andl
cmpsl
fiadds
fs
out
lods
pop
ja
dec
add
pop
bound
pop
shlb
push
mov
shlb
test
lods
inc
cmp
jge
pusha
xchg
and
mov
in
fidivrl
scas
push
xchg
xchg
add
daa
jb
push
mov
ds
push
lcall
gs
or
mov
test
sbb
das
cli
pushf
or
loop
out
add
sub
jns
push
sub
std
rcr
xor
aaa
cmp
sti
dec
int3
out
adc
les
leave
cmpsl
movsb
repz
pushf
leave
sub
aam
jecxz
aas
mov
fucomi
repnz
xor
jl
subb
mov
pop
dec
inc
and
inc
fcmovb
dec
rcr
jbe
cmpsb
push
outsb
dec
fsubl
pop
stc
sub
lret
push
push
or
add
repnz
add
shrl
adc
fcoml
xchg
cli
out
xor
shrb
pop
out
push
adc
rol
cmp
lcall
in
mov
lret
cmp
push
or
fldcw
fisubrs
mov
fcmovb
push
stos
les
push
xor
mov
mov
pop
lret
ret
pop
pop
fsubr
or
fistps
push
cmpsb
inc
jb
push
sbb
stos
or
add
nop
push
loop
in
test
pop
shlb
sub
stc
imul
and
shr
lds
cmc
inc
int3
pusha
shrb
mov
push
dec
mov
jo
or
add
loopne
xchg
fimuls
jb
or
ret
jmp
jbe
ljmp
sub
dec
push
cmp
lret
add
push
xchg
mov
sbbb
jo
scas
xchg
push
mov
pop
js
shrb
fcmovb
jo
repz
cmpsl
push
or
push
fildll
pop
leave
add
adc
je
movsl
jp
inc
loop
sbb
cmpsb
popa
push
lret
fimuls
fiadds
je
dec
and
repz
pop
add
mov
xchg
outsl
adc
sub
fnstenv
repnz
roll
push
in
loopne
subb
pop
fsubrp
sbb
or
adc
xchg
mov
addr16
inc
add
mov
xor
sub
push
test
adc
mov
or
sti
dec
inc
imul
and
aad
jbe
lcall
pop
pop
fwait
rcr
mov
mov
stos
inc
jbe
punpckldq
dec
sbb
mov
loop
out
aas
adcb
add
mov
test
js
leave
rcrl
repnz
ds
sub
adc
add
loopne
add
and
xor
sub
inc
jmp
or
out
jmp
mov
testb
lds
xchg
push
ja
rcl
jae
stos
pop
pop
adc
jne
hlt
popf
dec
xor
movsb
cltd
cli
insb
jl
lods
popf
push
cmp
bound
sub
rorb
lret
jmp
out
bound
jmp
jne
jbe
outsb
mov
es
mull
mov
or
pop
pop
jns
pop
pop
jns
rcrl
mov
fdivrl
es
pop
pop
pop
jns
mov
mulb
data16
lcall
sbb
push
or
icebp
xchg
jmp
dec
xchg
adc
inc
push
jo
sub
mov
mov
insl
test
add
dec
inc
pop
movsl
and
shrw
dec
dec
pop
sahf
mov
or
push
loopne
jmp
je
test
fcomps
ret
sub
test
mov
push
dec
in
loopne
out
cwtl
mov
and
fdivl
dec
dec
or
inc
dec
imul
in
mov
ficoml
add
cmp
mov
pop
or
sti
jae
add
sub
sbb
shrb
sti
mov
dec
roll
out
repz
ret
in
ret
xor
fcmovbe
cli
jno
stos
jnp
dec
add
push
int
lods
push
hlt
or
shrb
test
add
imul
movsl
push
aam
and
xor
inc
aad
mov
int3
mov
out
jns
fiadds
rorb
in
add
aas
cmp
sub
xlat
faddp
aam
les
fmull
int
xor
add
sbb
ret
add
inc
add
push
mov
dec
adc
xchg
arpl
pop
jmp
popf
pop
sub
sub
mov
xchg
push
dec
lds
int3
cmp
in
inc
mov
fisttps
out
ljmp
xchg
std
outsl
clc
movsb
repnz
jg
loopne
cmp
mov
mov
mov
ffree
bound
push
movsb
sahf
sbb
repz
cmp
and
jle
mov
test
ficoms
cmpsb
xor
mov
arpl
adc
dec
jbe
xor
popf
cmpsb
add
fists
xor
pusha
andl
mov
rcr
repnz
shl
andb
mov
pusha
pop
or
adc
lods
out
fiaddl
xchg
adc
sbb
inc
out
hlt
xor
mov
out
inc
mov
fadds
add
pop
jne
mov
pusha
mov
fdivs
loop
fisubl
xchg
push
in
sub
cmp
es
and
inc
xor
ret
and
cmpsl
arpl
call
push
cmpsb
loopne
add
mov
icebp
inc
jecxz
jge
cwtl
dec
aas
add
leave
fldenv
bnd
jae
sbb
jb
loop
sbb
int3
daa
pop
data16
mov
mov
into
adc
add
fdiv
jno
int
sub
pop
add
add
aas
pop
jg
sub
dec
repz
das
jae
icebp
orb
xor
jb
ret
rcrl
xor
dec
add
inc
mov
xchg
inc
sti
addr16
popf
cmp
push
mov
lods
arpl
push
pop
add
xor
adc
dec
es
arpl
mov
xchg
fwait
aam
push
add
xchg
xchg
mov
stos
icebp
leave
ljmp
mov
xchg
in
or
ficoml
and
stos
shll
push
popf
or
jne
dec
je
pop
lcall
xchg
leave
sbb
jmp
ret
rorl
xor
xchg
insl
fxtract
repz
xchg
ret
cld
mov
clc
shl
imul
adcl
lahf
enter
push
divl
xor
aam
aas
dec
xor
inc
inc
and
loop
push
lahf
pop
jns
outsb
fidivs
xor
jmp
test
outsb
into
add
pop
fldl
sub
sarb
sub
ds
adc
jge
or
push
dec
mov
movsl
cld
lds
adc
cs
sbb
inc
jno
imul
mov
mov
fnstsw
mov
dec
mov
imul
mov
xchg
xor
test
jge
rorl
sbb
jge
push
xchg
stos
sub
jmp
dec
out
add
pop
xor
xorl
ljmp
inc
xchg
and
data16
pop
add
enter
jae
add
cmp
add
push
jno
pushf
cmpsb
test
lret
add
inc
lock
lcall
cmp
leave
aas
cld
mov
jns
rol
mov
insw
cmp
xor
enter
pushf
ljmpw
inc
cmpsb
lods
inc
jno
or
rorb
inc
jno
imul
inc
testl
push
mov
bound
nop
xorb
xlat
and
mov
int3
sbb
in
adc
push
out
sbb
js
lret
add
call
repz
push
mov
daa
lea
xor
popa
shl
mov
orb
cmp
outsl
mov
insb
clc
mov
mov
push
cmp
jno
push
out
inc
jb
and
in
shlb
push
subb
ds
push
adc
sbb
push
cmp
negl
xchg
push
into
int
xor
push
ss
sarb
push
dec
push
jmp
jns
data16
add
pop
sub
mov
movsl
cmc
enter
inc
push
cmp
sbb
sub
adc
jle
aas
ja
sbb
arpl
iret
gs
adc
unpcklps
inc
jge
push
mov
jmp
mov
dec
outsb
mov
cmpsl
mov
push
add
into
cli
dec
mov
or
popf
push
sub
lods
pop
insl
jne
adc
jno
push
mov
fldcw
adc
adc
jae
lahf
mov
insb
movsl
sbb
ret
push
add
dec
xor
xchg
ljmp
ret
out
or
add
inc
imul
sub
sub
or
cli
outsb
stos
pop
jo
mov
mov
mov
sbb
xchg
repnz
call
ljmp
sub
cmp
cmpsb
repnz
nop
test
adc
sahf
popa
sub
jne
fimull
loop
fdivl
leave
mov
xchg
addr16
pusha
imul
mov
out
cmpsb
cmp
inc
roll
and
daa
ds
fdivrl
cmp
ret
and
stc
xlat
mov
nop
inc
fisubrs
push
pop
dec
aad
sub
icebp
je
xchg
xchg
pop
inc
daa
cmp
dec
stc
lret
sti
addb
iret
mov
sub
in
jp
aas
hlt
cmc
adc
fs
xorb
jmp
loop
add
xchg
loope
jb
fadd
mov
push
fisttpll
or
jmp
cmp
lods
mov
lahf
pop
cli
scas
xchg
ficomps
mov
sahf
sub
ja
add
inc
push
mov
fisubs
jle
pushf
in
xchg
mov
daa
push
push
pop
adc
sub
mull
fcmovb
and
inc
movsl
pop
ret
out
imul
mov
lret
push
jge
stos
ret
inc
and
pusha
and
mov
das
repnz
lods
int3
cmpsl
rorl
and
add
fsubs
inc
divb
cmp
push
pusha
ffreep
pusha
jae
test
neg
pop
testb
or
mov
out
pop
int3
mov
movsb
std
or
and
mov
insb
dec
int
or
iret
add
add
ljmp
dec
lret
into
stc
mov
add
dec
enter
mov
xchg
imul
mov
sub
inc
lea
xor
cmpl
pop
xchg
push
mov
rcl
xchg
sti
mov
adc
jae
cmp
lcall
adc
sub
add
mov
repnz
sarb
hlt
push
lods
dec
push
add
rorb
sbb
jae
aaa
mov
dec
sbb
pop
int3
pop
jp
cmp
inc
arpl
je
pop
rol
lret
or
ds
out
xchg
add
add
and
jnp
sbb
xor
jo
cli
shrl
fs
cli
aam
test
and
stc
std
add
aaa
pop
sti
inc
repz
adc
cmp
shr
mov
add
xchg
jo
dec
adcl
lea
mov
aam
and
push
push
push
add
mov
into
ret
aam
lods
inc
push
je
pop
aad
test
popa
mov
fptan
mov
sbb
jo
fmul
cwtd
cld
not
or
inc
push
adc
outsb
fcomps
and
leave
lods
sub
push
push
fadds
or
test
pop
movsb
bound
popf
into
jns
mov
fiadds
or
fisubs
pop
push
insb
mov
xor
jmp
adc
stos
bnd
xchg
mov
stos
cmp
sub
jge
lods
adc
ja
outsb
jns
cmpsl
inc
das
xchg
inc
popa
mov
cmpsl
fsubl
int
fs
add
dec
cmpsb
rclb
hlt
aad
xchg
insl
fiaddl
jecxz
cli
xor
bound
fiadds
loop
or
mov
cmp
sub
jae
adc
out
test
leave
dec
test
add
dec
dec
mov
and
lods
aas
mov
cmpsb
imul
sub
push
clc
mov
shlb
int
push
pop
dec
sbb
push
add
or
mov
fwait
call
flds
fisubl
icebp
lcall
jl
add
xchg
add
adc
mov
dec
and
ja
inc
fsubrp
mov
ss
pop
jmp
jae
je
mov
and
sbb
lods
fs
test
imul
lret
mov
dec
inc
xlat
dec
mov
rol
and
es
dec
xlat
cmp
pop
push
jp
negl
fwait
cld
lahf
push
lea
into
fiadds
or
sarb
test
pop
lret
lahf
or
mov
aad
push
iret
and
int
in
and
leave
mov
out
mov
lods
mov
std
repz
push
mov
mov
clc
insb
sbb
rcll
dec
xchg
sub
push
popa
dec
js
cmp
fidivrs
aas
sbb
movsl
inc
loop
repz
aam
sub
inc
leave
mov
dec
ret
or
inc
and
andb
sahf
inc
cmp
cmpsb
mov
inc
lods
xor
inc
aam
adc
enter
inc
fisubrs
sbbb
sbb
mov
imul
test
pop
lods
rcr
loopne
push
xor
jae
fistpl
jno
mov
mov
mov
dec
dec
jae
jl
repnz
mov
lods
loopne
fnstcw
mov
je
jle
mov
cmp
and
push
das
xchg
jno
xchg
into
data16
xlat
rclb
push
mov
xchg
fs
adc
repz
inc
stc
or
mov
jo
int3
fisttpll
mov
inc
mov
lods
xchg
sbb
dec
jl
hlt
lret
mov
adc
inc
pop
push
push
cmovb
mov
lock
inc
push
inc
mov
aaa
fidivs
lcall
add
mov
push
inc
mov
add
jo
repnz
lods
lahf
sbb
push
push
push
shlb
icebp
loopne
repnz
pop
inc
inc
inc
and
push
xchg
cmpsl
jno
dec
or
and
mov
add
mov
lret
or
adc
jecxz
movsb
mov
inc
push
mov
xchg
sahf
inc
imul
jno
les
or
cmc
inc
lret
add
call
insb
outsl
adc
es
ds
lods
add
sub
pop
lahf
arpl
and
or
cmp
sbb
into
rorl
mov
les
cmp
push
inc
mov
loopne
mov
sahf
sbb
je
xchg
xchg
add
faddl
lcall
cmp
push
std
test
les
jmp
adc
popa
or
inc
out
adc
shll
inc
pop
pop
roll
iret
bts
dec
rcll
jecxz
ret
arpl
add
lret
pop
cld
mov
lret
add
dec
pop
mov
mov
dec
ljmp
aam
xor
and
dec
lds
mov
test
jmp
add
nop
and
leave
or
add
fs
push
dec
movl
or
jae
xchg
push
cmpsl
rclb
push
or
into
stos
cmpsb
jae
inc
sub
xor
and
js
rcrb
subl
in
mov
repz
sub
sub
fs
pop
and
int3
jecxz
sub
inc
mov
imul
pop
sub
cltd
outsb
pop
push
cld
in
xlat
cmc
mov
pop
rcrl
adc
sub
jo
shlb
push
push
jne
inc
inc
stc
pop
mov
or
cmp
loop
xchg
unpckhps
jns
and
sarb
mov
cmpsl
imul
xchg
movsb
js
lock
mov
pop
and
cld
gs
jle
jecxz
rclb
push
or
inc
nop
xchg
test
mov
jmp
ficoms
test
lock
push
int
nop
adc
jge
repnz
cltd
push
xor
xor
rcrb
jg
sbb
add
cmpsl
push
orb
inc
test
cmp
or
sub
or
sub
das
cmp
fisubrl
push
jecxz
mov
aad
sub
push
call
and
mov
push
jnp
inc
lock
rcl
mov
dec
adc
icebp
ficomps
jmp
sbbb
xlat
add
sub
sub
mov
pusha
shlb
cmpsl
popa
adcl
out
xor
sbb
push
mov
stos
fiadds
mov
std
bound
push
mov
inc
cmpsl
pop
mov
jns
or
mov
mov
fiaddl
icebp
mov
popf
lods
adc
jge
and
data16
lock
sbb
fdivrl
jmp
shlb
xor
pop
mov
push
xlat
jbe
leave
sbb
aad
mov
repz
jo
icebp
addr16
into
enter
mov
jge
incb
in
cmpsb
leave
ret
aas
xor
out
mov
and
add
or
mov
fisubs
xor
sbb
sbb
imul
inc
or
movsb
adc
sub
mov
sbb
aas
cmp
std
pop
pop
cld
pop
addr16
xor
lea
inc
mov
out
rcrb
test
in
jne
cld
xor
mov
insb
cmpb
push
xchg
add
and
out
mov
out
inc
movsb
stos
test
or
fisubrs
pop
lahf
faddl
js
cmpsb
xchg
mov
pop
mov
mov
adc
dec
lret
imul
out
pop
sub
lahf
xlat
push
pop
xor
clc
loope
loop
call
mov
inc
sub
inc
lret
inc
inc
push
push
sub
sbb
fwait
movb
pusha
or
cmpl
inc
mov
int
es
into
subb
cmc
ret
mov
call
xchg
inc
add
mov
sub
or
xchg
jbe
inc
subb
inc
fisubs
and
stc
es
push
pop
pop
dec
push
mov
out
push
mov
lret
add
ret
push
and
push
stc
in
add
call
rolb
call
xchg
jnp
pop
dec
repz
stos
push
cmp
pop
int3
mov
rcrl
adc
and
push
mov
stos
dec
test
and
hlt
jge
daa
jb
cmc
in
mov
adc
inc
inc
mov
imul
or
shll
pop
push
loopne
stos
lret
rcrl
and
cmp
adc
movsl
stos
dec
push
scas
das
aam
sbb
lret
push
sbb
dec
out
ret
out
push
inc
jmp
scas
invd
popa
sub
inc
inc
push
or
pop
jne
insb
lds
test
sti
push
int
lret
adc
mov
mov
je
mov
sub
rcr
out
push
insb
popa
lock
rcrl
sti
lods
mov
jp
lret
ljmp
repnz
mov
testl
insb
and
cmp
add
gs
add
movsl
dec
ja
and
xchg
mov
punpcklwd
test
cmp
ret
dec
inc
cmp
jle
fucomip
and
icebp
ljmp
imul
mov
je
mov
out
dec
stos
adc
push
daa
inc
push
out
sbb
mov
inc
ret
sahf
movsl
jmp
test
rcr
inc
lods
xor
mov
mov
pop
jecxz
add
cmp
out
xchg
mov
sub
push
sbb
pop
int
into
and
cmp
dec
pop
add
xchg
shr
stos
cltd
dec
inc
out
out
and
adc
test
push
pop
mov
mov
xchg
fisubs
mov
data16
inc
pop
js
shll
push
inc
inc
incl
mov
roll
inc
mov
aam
jg
pop
sub
in
inc
xchg
xorl
push
ja,pt
cmp
test
mov
adc
cs
fucomi
add
cmpsb
mov
adc
add
add
in
adc
cli
cmc
mov
jmp
clc
shlb
push
dec
and
xor
mov
fisubl
je
inc
push
sub
mov
push
and
lds
jo
dec
mov
dec
insl
mov
fstpt
aam
jecxz
sahf
lods
loop
inc
popf
cmp
pop
xor
aad
mov
jo
cld
jg
pop
stos
stos
jnp
jno
pop
ss
push
or
jnp
or
add
les
lds
xchg
mov
xchg
inc
jo
imul
xchg
ds
ds
insb
sub
fscale
mov
add
sbb
jnp
xlat
lcall
repnz
jecxz
or
sub
or
dec
dec
fcoms
pop
inc
ret
cmpsb
je
test
lahf
pop
xor
lea
out
es
xor
mov
jo
mov
pop
loop
and
dec
insl
adc
lret
and
fistpll
jo
sub
mov
jecxz
bound
jns
jmp
xchg
jo
mov
ljmp
aas
jg
inc
push
sub
fdivrl
pop
jo
das
jbe
lcall
outsl
xchg
dec
les
rol
dec
inc
popa
out
xor
xchg
lret
mov
sub
leave
pop
lds
push
scas
pop
jno
push
xlat
movsl
mov
addb
rcll
call
adc
icebp
mov
pusha
orb
xchg
mov
cli
adc
xor
dec
sbb
dec
jnp
dec
mov
sub
push
fs
pop
sbb
sub
jae
inc
jne
sub
roll
push
and
ret
jo
adc
daa
jmp
push
lea
loop
push
fcomps
pop
mov
pop
stc
push
rclb
popf
into
sub
pop
xchg
jge
out
sub
pushf
adc
pop
fwait
add
sahf
insb
or
adc
aas
mov
les
add
jle
lds
push
daa
aaa
out
fadds
mov
mov
and
mov
decb
or
push
inc
jmp
adc
and
push
cmpsl
hlt
jmp
mov
sti
cmpsl
cltd
mov
dec
inc
loope
ret
test
icebp
repnz
sub
add
aaa
inc
jae
xor
clc
aam
inc
les
lea
push
bound
fisubrs
or
jnp
push
ret
push
sti
into
lret
xchg
mov
shl
add
jne
mov
or
out
shlb
push
out
or
fistpl
rorb
in
aad
add
lds
imul
in
inc
pop
je
shl
xchg
and
sbbl
lret
sub
es
mov
hlt
inc
dec
fs
and
xchg
sahf
jae
jnp
testb
mov
mov
dec
je
fdivs
or
jno
pop
mov
dec
subl
xchg
xor
jne
or
fsubrp
mov
xchg
xlat
push
inc
fmulp
jb
add
scas
dec
dec
dec
scas
cmpl
or
or
mov
sub
sahf
fbstp
ja
pop
jnp
jns
fsubrs
cmpps
adc
enter
mov
mov
jae
and
adc
stc
xchg
push
lods
ficomps
dec
mov
jmp
dec
add
mov
xchg
rcll
int3
inc
inc
test
inc
cmc
dec
in
and
pop
pop
inc
push
cmp
ret
sbb
mov
dec
das
mov
xchg
sti
xlat
test
xor
push
mov
add
lods
mov
iret
loopne
add
mov
lsl
push
loopne
ret
jno
mov
orb
jb
mov
es
pop
ds
or
add
jne
popa
sbb
ror
rorl
fbstp
jg
mov
stc
fidivrs
aas
dec
sbb
stos
jnp
jg
xor
lea
lea
rcrb
fbld
fstp
negl
mov
test
in
jae
lret
lahf
lret
xchg
mov
or
test
xchg
xchg
aad
and
jne
push
or
into
inc
fbstp
inc
push
cmpsl
not
pop
loop
sub
and
mulb
cmc
aam
xor
sub
pop
pop
aaa
ret
xor
or
into
inc
mov
inc
jbe
push
nop
nop
pop
hlt
test
outsb
push
insl
dec
js
int
out
stos
fwait
xchg
push
sbb
and
into
push
bound
mov
jno
je
aad
rorb
inc
push
jecxz
repnz
mov
stos
ret
push
inc
add
fldz
mov
test
rcll
jne
adc
add
push
cltd
movsb
push
repz
sub
mov
mov
stos
sti
lret
adc
push
push
and
ret
add
jmp
pop
push
mov
loop
jae
jno
xor
fdivrs
jno
mov
mov
leave
jno
fisubs
pop
xchg
rorl
sbb
xchg
cmpsl
rcrl
pop
pop
es
arpl
dec
popa
and
cmp
pusha
xchg
inc
push
push
or
popf
cmp
les
jmp
pop
mov
xor
inc
mov
cmp
jecxz
or
xchg
jb
push
bound
lds
adc
in
popf
stos
pop
ja
jmp
rolb
test
icebp
imul
outsb
adc
call
mov
stc
mov
fdivp
adc
add
dec
gs
adc
sub
imul
jne
fldcw
ret
pop
int
inc
pop
mov
xor
imul
arpl
inc
xchg
fwait
xor
movsb
lods
cltd
jnp
mov
mov
jl
xchg
cmp
rcrl
xor
movsb
out
imul
jb
dec
xchg
jbe
xchg
inc
jae
add
mov
add
mov
jo
shrl
sub
or
xchg
clc
jge
cli
in
cmpsb
and
icebp
sbb
push
sbb
sub
mov
movsl
xor
mov
lods
dec
pushf
ds
mov
sub
mov
ja
push
cld
cmp
push
lea
jnp
pushf
cmpsl
or
fs
shr
push
mov
ret
push
lds
jns
aam
or
dec
and
jp
jmp
dec
fwait
jae
jl
cltd
sub
jg
insl
cltd
or
inc
ret
jmp
mov
lods
or
lcall
arpl
in
add
gs
rorb
scas
mov
lock
adc
fcmovb
add
decl
inc
inc
daa
or
mov
fisubrs
push
lds
addb
mov
addr16
movl
add
mov
inc
in
sahf
ljmp
sti
repnz
cltd
insb
lcall
lds
lret
cld
xor
scas
push
bound
cmpsb
insl
fnstsw
mov
aas
imul
test
movsb
push
jge
into
jle
push
xor
xor
and
jp
xor
pop
cmp
int
loopne
data16
push
jp
out
pusha
push
sbb
pop
inc
loope
inc
sub
xchg
sub
aad
mov
cmp
movsl
xor
xlat
call
dec
shlb
pop
ss
fidivs
aad
call
mov
or
inc
loopne
sti
dec
push
das
sub
iret
inc
push
jl
push
add
push
dec
jmp
sahf
sbb
or
dec
add
cmp
sub
int
xchg
push
jmp
lods
xor
fildl
aas
iret
add
aas
push
pop
cmp
out
scas
jg
or
or
lret
push
pop
addl
cmp
data16
dec
lret
mov
push
hlt
test
inc
arpl
mov
repnz
movsb
ret
lock
xchg
inc
sub
push
and
aam
repnz
or
lea
shlb
push
xor
push
pop
mov
fcoml
and
jb
test
aaa
dec
add
or
or
add
mov
mov
test
push
js
bound
mov
sub
fwait
add
iret
inc
in
rcrl
pop
xchg
outsb
sub
jno
push
pusha
sub
data16
xchg
repnz
dec
xchg
push
imul
out
mov
and
ret
xor
inc
xor
int3
mov
pop
imul
pop
xor
add
and
decl
fisubrs
rorb
jbe
add
cmc
data16
fldl
int
insl
jecxz
add
flds
andl
outsl
xor
iret
adc
loop
xchg
adc
sub
mov
jae
lret
xchg
lock
lods
add
ret
in
pusha
sub
push
lahf
mov
pop
adc
push
pushf
push
mov
addr16
sbb
inc
xchg
ror
scas
sub
lret
pushf
cmp
pop
dec
dec
hlt
xor
adc
dec
ds
dec
push
mov
sbb
repnz
sbb
mov
add
jae
fistps
in
jbe
out
popa
xor
sub
add
call
in
arpl
stos
adc
add
fistpll
out
sbb
sub
jne
jmp
cmc
mov
pop
sahf
ljmp
mov
dec
pop
cltd
pop
mov
xchg
imul
in
xchg
enter
rcll
int3
jecxz
iret
dec
stos
cli
sub
xchg
push
sub
rorl
pop
pop
dec
mov
sbb
xor
xor
adcb
xchg
iret
mov
pop
in
in
push
mov
push
jnp
lahf
jo
lret
xor
nop
movsb
mov
jg
sub
idiv
mov
sarb
pop
xchg
mov
and
fstl
mov
push
sub
pop
sub
ret
jp
push
into
add
cmc
pop
clc
xchg
xor
push
pop
and
xor
fs
push
repnz
xchg
xchg
push
inc
inc
fimuls
test
xchg
push
sbb
sub
repz
in
sbbl
arpl
mov
in
add
imul
dec
inc
inc
fcom
mov
adc
mov
sarb
jle
jns
xchg
mov
xchg
lea
jmp
out
xor
not
sub
je
and
jns
sbb
push
mov
mov
mov
mov
pushf
mov
in
imul
cmp
sbb
rcr
cmpsb
jbe
nop
leave
loop
pop
dec
or
fsubl
repnz
xchg
sti
movb
mov
jne
fldl
in
dec
ja
mov
fisubrs
sub
shrd
lcall
cld
fcomps
inc
or
push
bound
pop
rorl
and
push
out
mov
aas
jae
mov
out
inc
mov
fwait
rcl
and
jge
sub
mov
dec
ret
insl
dec
clc
push
pop
mov
je
xchg
lea
lahf
pop
hlt
mov
mov
push
shrl
add
jmp
ljmp
pop
mov
mov
jmp
sbb
clc
ljmp
add
cltd
pop
rclb
out
cmp
push
arpl
push
divl
enter
hlt
jnp
mov
es
leave
or
adc
jb
or
mov
enter
movsb
mov
sbb
gs
lock
insb
fs
adc
dec
add
pop
cmp
cltd
pop
jl
jb
or
iret
ja
and
mov
insb
cmp
push
mov
mov
sbb
fwait
out
mov
push
add
or
sbb
dec
pop
mov
xor
jae
xor
sbb
mov
es
ljmp
push
faddl
idivb
outsb
sub
stc
pop
jno
dec
mov
fs
pop
cmpsb
adc
fbld
cmc
push
jle
add
sub
inc
push
mov
shlb
inc
ss
cmp
jno
icebp
loope
out
cmp
mov
icebp
lret
sub
or
aam
mov
std
mov
sub
lods
add
and
loop
cmpsl
jno
xchg
cmpsl
sahf
push
scas
mov
push
stos
jmp
lret
rcrb
inc
rcl
xor
imulb
nop
adc
aas
ds
pop
stc
cmpsb
loopne
insl
or
rorl
inc
scas
out
sub
push
repz
dec
loop
inc
xlat
and
stos
mov
adc
push
dec
inc
movsb
mov
inc
movups
or
jo
jl
outsl
mov
cld
sar
push
rcrl
sahf
fwait
data16
lcall
stos
dec
stc
mov
filds
js
data16
push
sbbl
xchg
inc
xchg
pop
sbb
js
outsl
and
fisubrl
roll
fsubrp
sbb
imulb
fistps
imul
popf
sub
or
inc
cld
into
add
jge
imul
rcrl
sbb
outsl
insl
cmpsb
cmpsl
jns
out
gs
push
test
addl
test
jbe
lcall
loope
jecxz
and
repz
add
aas
popa
icebp
stc
cltd
aad
call
out
lret
test
xor
xchg
dec
loop
mov
inc
push
jge
push
ret
mov
stos
inc
lret
mov
jmp
test
divl
jo
adcb
and
daa
into
and
lret
or
and
scas
pop
out
fdivp
les
jl
push
or
ljmp
mov
mov
test
or
loopne
in
dec
fadds
movsb
fsincos
and
jo
stos
fiadds
mov
pop
mov
jae
xlat
adc
out
pop
stc
push
lods
cwtl
icebp
push
sub
sbb
shlb
push
lret
nop
dec
bound
mov
imul
les
pop
ja
and
les
int3
rol
dec
or
test
sub
fsubl
shrb
js
fistpl
mov
inc
jg
stos
sti
cmpsb
add
ljmp
or
or
sbb
test
out
mov
push
jle
fildll
shlb
data16
imul
pop
fsubl
xor
inc
sub
sbb
jp
je
adc
fs
cld
lcall
lret
inc
pushf
adc
mov
sub
pop
and
ljmp
or
movsb
xor
sub
push
push
and
sbb
popf
sbb
cld
rcr
sti
insl
cmpsl
add
enter
repz
xchg
pushf
or
movsb
xor
rcll
out
cmp
or
jne
pop
movsb
inc
push
cmpsl
mov
aaa
push
jno
loop
push
mov
mov
adc
add
or
inc
push
lcall
adcl
loopne
repnz
bnd
and
jle
insl
xor
jne
stc
xchg
aad
test
cld
scas
jne
stos
inc
xchg
fsubl
aas
lods
sbbb
add
dec
cmp
mov
pusha
outsl
push
hlt
std
xor
sbb
mov
out
sub
adcb
aam
bnd
push
les
mov
outsb
dec
jb
mov
sbb
insl
push
add
fisttpll
mov
push
cmp
xor
shl
sub
pop
pop
ret
mov
arpl
inc
rclb
jl
cmc
add
add
das
clc
cmc
jne
pop
inc
push
mov
inc
sub
cmp
push
inc
nop
lret
dec
xor
lods
imul
cmc
pusha
pop
push
pop
fadd
das
mov
aaa
push
fwait
jmp
popf
dec
mov
or
loopne
lret
leave
push
ret
jne
ret
adc
push
nop
adc
js
dec
int3
mov
xchg
mov
sub
jecxz
mov
in
roll
push
or
mov
pop
mov
xchg
sub
inc
inc
sbb
push
or
mov
cmp
test
pusha
repz
fidivl
int
cli
aad
mov
loopne
jo
shr
fiaddl
ficoms
lahf
int3
sarb
lret
adc
xor
cltd
ds
repnz
push
add
dec
je
pop
jae
pop
mov
push
pop
pop
add
inc
filds
and
addr16
das
shll
add
in
jecxz
fsubrl
inc
aam
les
add
pop
lret
jnp
jle
xor
test
lahf
xorl
lret
dec
data16
pop
bound
lods
sarl
lods
icebp
lcall
push
adc
sub
ret
out
lds
aam
xlat
cmpsl
and
cmp
mov
in
xlat
mov
xor
addr16
push
and
pop
mov
pusha
mov
fisubrs
add
sub
lea
fs
addb
ret
mov
cli
sbb
and
add
jo
ljmp
inc
mov
add
push
clc
fiaddl
fmull
movsb
xchg
push
dec
mov
popa
or
fidivrs
clc
jae
leave
push
aas
cmp
insl
add
jmp
jns
adc
or
lods
jb
repnz
data16
sub
pop
out
mov
or
mov
std
mov
xor
addr16
mov
inc
int
inc
inc
sbb
dec
jo
insb
inc
dec
add
ret
sbb
iret
repz
shll
loope
pop
mov
mov
fwait
leave
sbb
sub
loop
mov
xchg
pushf
test
sub
enter
into
cmp
ror
and
jmp
add
cmp
movb
popa
shr
xlat
nop
cmpb
les
jbe
adc
leave
addb
fsub
dec
inc
int
aas
jnp
scas
sub
movsl
xor
push
or
push
icebp
mov
dec
popf
xchg
jmp
mov
jb
ret
sbb
mov
leave
sbb
loop
jb
dec
rorb
repnz
push
xchg
mov
fcmovu
filds
pop
addr16
dec
sub
mov
notl
pusha
adc
jo
insb
cmp
push
or
leave
data16
adc
add
mov
testl
pop
pusha
in
cmp
push
dec
mov
fsubrs
sub
shll
mov
add
shll
decb
lods
and
in
add
mov
icebp
repnz
pop
sbb
jo
stc
push
cmp
lret
das
dec
fsubs
push
lret
xchg
add
insl
jmp
addr16
bound
mov
or
inc
scas
mov
push
or
xor
les
data16
jne
decl
pop
jecxz
inc
pop
sti
shll
out
test
push
call
fldenv
dec
mov
cmp
out
enter
inc
adc
arpl
fcomi
dec
stos
in
jo
test
sbb
out
js
dec
or
mov
inc
fstl
adc
out
mov
cli
mov
mov
mov
lds
push
xchg
or
or
rcll
fimuls
dec
cmp
inc
lods
outsb
in
dec
push
xor
aas
dec
pop
push
lret
js
or
lea
dec
inc
aas
mov
fcos
mov
imul
push
cmp
mov
xchg
out
mov
jge
push
leave
xchg
pop
fisubrl
cmpsb
stc
lods
mov
adc
cmpsb
fistpll
xchg
rol
lds
test
insb
inc
add
jb
inc
mov
bound
jo
jno
fcmovnbe
out
data16
loop
add
jo
mov
inc
pop
or
push
dec
mov
in
or
inc
mov
inc
gs
and
inc
out
inc
jmp
push
inc
jp
shrb
aas
jbe
push
sbb
xchg
lret
sbb
dec
aam
loop
add
sahf
ret
leave
mov
adc
das
arpl
sar
jmp
push
sbb
data16
rclb
insl
dec
pop
leave
ficomps
mov
pushf
mov
add
sub
xlat
in
icebp
xor
mov
xlat
adc
loop
cmc
dec
jge
fisubs
pop
or
jmp
jl
push
cmp
jae
cmp
sbb
lds
outsl
jno
or
out
jmp
push
pop
lea
jno
xchg
push
xor
jmp
dec
sub
repnz
xchg
xchg
push
mov
mov
inc
jo
fcomps
sbb
sbb
push
popa
and
xor
jecxz
add
jnp
mov
fnstenv
test
pop
or
mov
dec
vdivsd
lds
cmp
insb
and
inc
fisubs
push
jb
dec
jne
in
das
andb
leave
shlb
dec
mov
imul
cmp
and
inc
sbb
cmpsb
fimuls
push
inc
push
adc
scas
frstor
aam
pop
std
pop
aas
xchg
mov
jl
adc
std
push
imul
pop
das
divb
dec
pop
je
das
ret
rclb
mov
sub
in
les
insl
pushf
int
lods
sbb
lret
mov
and
vmovntps
rcl
ret
xchg
push
xor
lds
lahf
cli
xchg
pop
insl
sahf
nop
push
and
clc
jecxz
loop
add
jp
mov
loop
mov
or
push
ret
inc
sbb
hlt
js
jecxz
or
and
add
xchg
ljmp
int
mov
sahf
and
xor
xchg
xlat
insl
dec
jae
and
add
cmp
movsl
jae
xchg
or
mov
cmp
std
sub
jb
mov
shlb
sub
dec
jns
dec
or
in
pop
sbb
adc
ds
imul
mov
mov
aaa
shlb
jno
and
push
cs
popa
icebp
mov
push
dec
add
mov
out
xchg
xchg
pop
or
jns
enter
ss
and
loop
add
sti
inc
subl
mov
lahf
ret
sbb
test
data16
icebp
aam
icebp
mov
stc
mov
test
sub
push
add
push
mov
cmp
fisubrl
mov
mov
and
js
std
xchg
out
or
jecxz
lret
outsl
xchg
sbb
pop
and
daa
sbb
lcall
loop
pop
xor
sub
rorl
sbb
subb
clc
aaa
loope
jo
jb
inc
pop
sbb
jo
bound
pop
xchg
out
pop
jge
xchg
sbb
and
lretw
pop
add
push
cmp
jo
inc
sub
orb
imul
jg
cmp
fiadds
dec
xor
dec
sub
push
inc
push
mov
icebp
arpl
enter
mov
dec
cs
loop
sub
pop
lods
push
cli
push
sbb
clc
fcoml
iret
mov
fdivrl
lret
mov
andb
movsl
cmpsb
xchg
call
and
ror
aaa
xchg
dec
jnp
out
jbe
pop
ret
sbb
bound
stos
fildll
mov
adc
push
push
pop
ret
popa
and
inc
or
adc
xchg
addr16
sub
addr16
sbb
aaa
push
mov
mov
popa
jb
dec
cmpsl
mov
pop
cwtl
jmp
dec
pop
sahf
stc
inc
hlt
rcrb
insb
adc
jmp
movsl
xchg
ret
push
sub
push
inc
fmuls
aam
xlat
mov
adc
jb
ficoml
faddl
push
mov
push
xchg
ret
inc
xor
insb
nop
pop
mov
cmpsl
fcoml
mov
leave
in
sub
insb
frstor
repz
sbb
lret
lods
jmp
into
inc
mov
pop
mov
in
jae
repz
fcmovnbe
fbstp
jmp
fs
sub
daa
popa
xorl
mov
adc
dec
cmpsb
add
aam
add
mov
aaa
xchg
flds
jbe
lahf
mov
add
inc
fs
insb
mov
repnz
inc
ljmp
jb
icebp
or
in
or
inc
sub
inc
or
push
push
xchg
fwait
popf
push
sub
mov
rol
in
shrl
je
jecxz
loopne
add
add
scas
enter
add
sarb
mov
jmp
arpl
sarl
pop
add
pop
ja
fiadds
enter
lods
or
adcl
inc
cmovle
cmp
mov
dec
inc
lret
mov
inc
lret
sahf
push
lds
sub
nop
mov
aad
mov
incb
xchg
push
push
aas
cmp
sbb
sub
xchg
push
jecxz
push
mov
jns
jbe
insl
fisubrs
or
adc
xchg
aas
or
inc
imul
movsl
ja
or
inc
pop
test
push
test
push
inc
jecxz
jge
pcmpeqw
add
aas
add
jno
add
cmc
add
sbb
mov
mov
pop
jnp
mov
and
int3
add
scas
test
xchg
gs
aam
je
pop
xor
movsl
push
mov
adc
imul
cmp
es
stos
jecxz
sbb
mov
into
jnp
push
mov
scas
or
rorb
push
and
pop
push
roll
add
sbbb
fdivl
mov
out
xor
lret
xor
loope
jnp
aas
scas
inc
inc
inc
shrl
push
lock
pop
enter
mov
bound
testb
push
inc
mov
popf
shlb
or
cltd
push
int3
xor
repnz
or
bound
push
pusha
mov
jns
outsb
les
push
lret
push
cmp
and
and
repnz
pop
pusha
mov
daa
sti
rcrb
int
sub
add
jae
cmp
clc
mov
rcrl
pop
ss
out
out
or
sbb
or
jl
push
mov
push
dec
hlt
pop
cwtl
push
or
add
dec
xchg
jmp
fidivs
mov
pop
mov
lret
fbld
out
pop
dec
xor
xchg
call
sbb
mov
lcall
ret
inc
leave
cli
mov
int3
ret
test
ret
inc
and
ficomps
and
inc
ret
sub
inc
imul
jge
jmp
int
push
fisubrs
fstpt
pop
cmp
push
fcmove
jmp
into
mov
push
fistpl
fcmove
mov
loopne
push
mov
cwtl
sub
out
jbe
mov
popa
subb
dec
jl
push
loop
cltd
rcrb
push
and
xchg
inc
or
jecxz
xchg
push
in
pop
lods
adc
insb
lea
into
sub
xchg
movsb
aad
jb
jbe
inc
out
insl
xor
loopne
dec
es
add
sbb
push
jo
shll
xor
mov
in
addr16
sbb
dec
xchg
lods
ficoml
out
cmp
and
insl
repz
adc
cmp
imul
lea
pop
push
dec
pop
lods
sub
movsl
fstpt
jae
daa
clc
out
movsb
nop
inc
ja
repnz
lods
scas
inc
xchg
dec
inc
repnz
add
push
cltd
out
into
mov
mov
pop
aaa
sbb
cmp
mov
or
mov
lcall
lret
jle
clc
movsl
sbb
xchg
xchg
inc
loop
push
pop
cmp
enter
mov
int3
xchg
xor
mov
push
mov
dec
push
push
mov
pop
movsl
adc
iret
fwait
cmp
or
loopne
push
icebp
lods
lods
sti
mov
les
in
mov
pop
shll
shr
mov
popa
jb
cmpsl
xchg
das
pop
ja
outsl
adc
cltd
pusha
cltd
icebp
fwait
xchg
dec
movsb
push
mov
dec
cmp
test
jo
data16
fnstcw
out
pop
repnz
sub
sti
ja
pop
in
sbbb
inc
push
je
or
test
cmovp
cmp
push
dec
inc
push
push
imul
rcrb
mov
push
or
cmp
jno
sbb
mov
mov
add
dec
sbb
std
loope
push
add
inc
movsl
lret
pop
add
shr
sub
and
push
test
ja
xchg
and
pminsw
xorl
cmp
shll
in
insb
sub
outsb
bound
mov
push
jmp
push
and
mov
aas
adc
addr16
jno
cmp
fldl
int3
and
xor
repnz
dec
es
push
add
mov
stos
adc
sarl
stc
pop
mov
xor
mov
pop
arpl
sub
subl
xlat
inc
or
les
icebp
cld
icebp
add
shrb
xchg
nop
mov
mov
mov
pushf
test
fsubrs
xchg
lret
jmp
dec
mov
js
lock
movsb
ficomps
loopne
or
jne
cmp
sub
xor
mov
int3
and
xor
jo
rcr
popa
mov
add
repz
fisubrl
rorb
mov
pop
jb
push
testl
dec
lret
xor
push
mov
push
lret
mov
insb
pop
mov
outsl
inc
adc
and
push
inc
mov
aam
aad
push
out
mov
sbb
sub
jecxz
aas
nop
push
test
cmp
mov
mov
ret
cmc
in
jae
movsb
icebp
or
lret
insb
fadds
sbb
mov
pusha
je
into
dec
fistl
inc
adc
sub
fists
xchg
push
stos
jae
lret
lds
ret
scas
inc
jg
pop
in
ret
add
and
push
das
add
jmp
jbe
dec
mov
mov
dec
call
imul
or
loop
jae
popa
insb
out
stos
sbb
leave
mov
cli
adc
inc
pop
push
rcrl
pushw
mov
adc
das
mov
mov
jle
jno
pushf
adc
ds
loop
test
movsb
pop
xor
push
adc
mov
pop
sub
add
and
ret
xor
leave
dec
mov
into
mov
arpl
sub
fwait
in
pop
lods
pop
sbb
or
and
inc
adc
test
ret
decl
mov
xor
and
addr16
arpl
xor
adc
push
cmpsb
adc
sbb
pop
push
adc
xlat
pushf
daa
test
out
mov
enter
or
jmp
ja
out
insl
xor
pop
push
sub
mov
push
add
jmp
iretw
dec
jo
fs
and
add
push
fs
out
lcall
or
and
xor
push
push
mov
insl
shlb
into
in
shl
mov
push
mov
dec
jp
push
xor
lds
push
fbld
sub
loopne
mov
fisubs
aas
push
iret
outsb
mov
mov
xchg
xchg
repz
push
cmovns
lret
xor
xchg
cwtl
jmp
adc
nop
or
xchg
outsb
jno
inc
inc
pop
dec
enter
jecxz
ja
push
dec
repz
adc
jae
add
adc
xchg
lds
std
ret
push
jg
mov
inc
in
out
pop
add
pop
xchg
mov
insl
mov
and
sub
push
lret
dec
add
out
add
xor
sub
pop
leave
push
dec
mov
pushf
call
cmpsl
and
jl
sub
lret
not
xorps
pop
subl
mov
lods
pop
dec
sbb
orl
add
loop
rcr
push
out
and
jne
mov
fiadds
jae
jecxz
push
fcompl
fdivr
ds
xchg
sarl
add
enter
sub
lret
into
ret
lock
adc
mov
cld
dec
push
jmp
inc
inc
cwtl
insb
int
mov
lds
or
enter
outsb
sub
push
in
fadds
fisubrs
cmp
shl
arpl
xor
or
imull
push
in
xor
fmul
push
sub
fisubs
adc
and
mov
sub
inc
xor
test
dec
mov
int
mov
mov
pop
test
scas
mov
into
aaa
jl
inc
mov
cltd
push
in
jbe
dec
iret
sub
jo
or
mov
sub
pop
loop
adcl
mov
xchg
mov
movsl
stos
mov
adc
jb
mov
jne
jp
aas
sbb
lods
cmp
insl
xchg
lahf
pop
stc
je
dec
adc
icebp
pusha
nop
jbe
mov
insl
loopne
cmpsl
dec
mov
add
xchg
xchg
scas
inc
sbb
mov
rcrb
mov
iret
push
fisubrl
lods
mov
imul
pop
push
jmp
int3
andb
push
ficoms
roll
ljmp
sahf
xchg
dec
dec
sarl
clc
inc
xor
cld
icebp
mov
push
insl
popf
add
xchg
inc
push
bound
push
ret
aas
ljmp
pop
mov
mov
mov
pushf
gs
addb
pop
jbe
fsubl
jecxz
or
jne
outsl
cltd
add
imul
enter
dec
mov
lahf
filds
lcall
imulb
aam
push
ljmp
sub
lods
pop
loop
stos
iret
mov
dec
ja
lea
add
sub
shrb
pop
and
xor
or
inc
mov
xchg
jne
xchg
dec
sub
add
mov
push
test
cmp
xchg
dec
shll
xchg
mov
jb
cmpsl
jle
cmp
fnstcw
sub
mov
or
mov
loopne
push
xor
test
movsb
or
out
jae
lods
loop
push
cli
jbe
lret
push
adc
mov
inc
or
aad
pusha
call
fistpll
divb
les
dec
out
jo
dec
adc
inc
fs
fldenv
add
mov
push
adcb
int3
and
pop
or
lret
pop
jmp
push
or
les
ret
jmp
sub
add
cwtl
les
aaa
rclb
sub
les
mov
xor
mov
scas
adc
repnz
sub
dec
pop
xchg
inc
pop
gs
test
cmp
sbb
sbb
lea
outsb
jp
fiaddl
pop
ret
dec
mov
or
iret
stc
nop
inc
fisubs
lds
or
popa
push
fsubl
mov
inc
mov
in
repnz
leave
jo
dec
sub
gs
andl
cltd
inc
and
ss
sub
jno
cwtl
mov
in
add
aas
repz
add
xchg
mov
mov
movsb
lret
cmp
jae
or
jmp
add
in
push
xchg
popa
shrb
lods
cmpsl
fcoml
ja
sbb
pop
lds
pop
cmc
cpuid
cmpsl
jb
xchg
js
mov
int
int3
lea
dec
je
pop
lea
in
repz
divl
lahf
test
adc
repz
jg
test
xor
pop
push
lods
and
shll
mov
push
push
in
pop
fadd
rcll
sub
insl
mov
icebp
inc
call
dec
inc
mov
adc
xchg
xchg
dec
pop
mov
enter
mov
pop
aaa
pop
divb
mov
inc
into
sbb
jmp
push
ret
movsl
xchg
sub
in
xor
fs
aaa
ljmp
loopne
sbb
cmp
cmc
cmp
movsb
mov
js
ret
fisubs
mov
lods
jp
data16
mov
xor
in
xchg
push
loopne
or
and
cmp
loop
dec
dec
jmp
or
loop
imul
sbb
test
inc
push
mov
int3
xlat
rcrl
pusha
int
pop
push
pop
std
nop
xchg
ds
fcmovnu
rcr
stc
data16
aas
push
add
xchg
les
leave
xor
push
movl
mov
mov
lret
ds
lods
mov
fcmove
loopne
mov
xor
push
mov
adc
loop
dec
push
leave
lock
into
pop
jns
shr
add
add
mov
inc
andb
int
fisubl
sbb
add
add
out
add
shll
repz
shll
into
cmp
jp
fldcw
push
adc
std
adc
repz
cli
shr
in
jnp
sub
js
clc
int3
mov
daa
add
enter
fdivl
mov
ljmp
fimuls
pop
call
ljmp
cmc
pop
sub
inc
in
sub
in
mov
fiaddl
xchg
push
fisttpl
push
pop
orb
aam
add
inc
fldenv
mov
mov
je
out
cmp
pop
dec
sub
aas
insb
add
fidivrs
mov
sahf
push
mov
add
inc
fwait
stos
push
adc
xor
movsb
divb
sbb
aas
mov
xchg
pop
dec
fists
jmp
outsb
inc
inc
les
stos
ret
mul
aaa
fs
push
andl
sub
add
cmp
outsl
pusha
xchg
xor
ficoms
roll
mov
call
adc
dec
les
inc
jg
dec
jne
repz
std
jb
insb
pop
mov
psubb
out
jno
shlb
push
popa
in
add
inc
dec
imul
ljmp
leave
xchg
arpl
mov
mov
int3
jmp
jnp
fisubrs
shll
test
pop
pusha
push
cli
mov
shrl
fwait
and
and
xor
pop
orl
or
dec
shll
popf
int3
mov
xchg
push
aas
rorb
pop
addr16
jmp
pusha
adc
pop
pop
sub
add
enter
pop
hlt
xor
jns
and
sbb
mov
inc
sub
pop
xchg
xchg
data16
nop
cmpsl
xchg
ljmp
inc
ret
insl
inc
loope
jecxz
mov
dec
aad
ds
lret
addr16
mov
or
mov
mov
cwtl
or
mov
inc
mull
lds
ret
movsb
xorb
pop
xor
inc
jno
insb
pop
mov
add
popa
add
push
clc
inc
ret
andl
jbe
push
mov
and
in
rcrb
push
outsl
mov
ljmp
mov
das
push
icebp
xchg
daa
das
push
sub
lods
out
xor
popa
in
xchg
es
leave
and
pop
jns
adc
xor
mov
ja
push
pop
sub
iret
or
das
jp
pop
pushf
es
and
or
fs
or
daa
lcall
movsb
add
insb
push
mov
xor
or
insb
addr16
inc
mov
inc
lods
lea
push
pop
movsl
les
sub
ret
lock
stos
and
jae
cwtl
fistpll
sahf
dec
mov
addr16
dec
cltd
push
insl
arpl
jle
test
inc
ret
xchg
push
push
mov
inc
jmp
push
or
sarl
popf
add
and
popa
data16
test
mov
cltd
scas
push
ffreep
add
adc
je
jg
ljmp
push
mov
pop
dec
das
cmp
mov
cmp
inc
and
dec
mov
pop
sub
cmp
lret
test
and
inc
sbb
jbe
adc
mov
adc
lods
dec
adc
adc
cwtl
sahf
pop
or
jge
es
cwtl
test
inc
cltd
fldcw
pop
out
xorl
add
inc
and
mov
incl
je
out
cli
mov
cmp
jmp
repz
xchg
and
adc
mov
jbe
jecxz
sub
xorl
popf
aas
inc
xchg
jmp
mov
pop
mov
and
xchg
sbb
adc
js
cmp
mov
rolb
mov
inc
jp
mov
sub
lret
inc
push
or
jmp
sbb
mov
xlat
aaa
aas
sbb
je
cmp
out
sbb
inc
xchg
clc
push
pop
or
sbb
ficoms
js
cli
adc
lods
into
xor
add
aam
js
jg
popa
shrl
aad
je
xchg
push
add
daa
and
xchg
pop
call
shlb
stos
test
push
lret
adc
mov
fldt
jae
iret
mov
into
or
data16
js
popa
and
or
js
mov
bound
sub
cmc
or
mov
mov
in
mov
push
idivb
jo
jp
inc
dec
lret
clc
jg
sbbb
jecxz
fisttpl
sub
and
sub
lods
sti
jmp
lods
adc
aas
mov
cmp
dec
lcall
aad
xchg
hlt
lds
rcr
mov
std
ret
pushf
xchg
xor
into
loop
push
insb
sti
or
xchg
pop
popf
vpxor
call
pop
sub
mov
aad
inc
jne
jge
mov
clc
shrl
adc
and
xchg
mov
daa
ret
xchg
stos
dec
in
or
mov
push
ds
ret
push
push
or
out
xor
mov
xchg
inc
push
popf
aad
mov
faddl
or
mov
cmp
repz
aas
cmp
sbb
sahf
data16
cwtl
leave
jmp
leave
and
fwait
mov
xchg
jp
pop
into
adc
push
shlb
push
imul
mov
mov
push
inc
in
jo
arpl
cld
jmp
cmpsl
mov
sub
pop
lods
xor
pop
popa
rol
jo
dec
sub
adcb
lods
push
xchg
lds
clc
clc
xchg
rcl
les
ret
ret
jae
cs
mov
mov
xor
incb
add
in
jne
aam
ret
sub
insl
pop
or
insl
test
dec
mov
add
jb
fisubrs
shll
push
pusha
ljmp
cmpb
aam
int3
call
sub
fmul
fmulp
je
mov
icebp
mov
scas
or
into
fildll
jne
lret
lods
repz
adc
xor
fildll
jae
inc
cld
inc
push
aaa
or
jno
lods
rcll
repnz
cmp
clc
test
and
push
dec
mov
mov
inc
cmc
lds
bnd
xchg
js
scas
dec
arpl
leave
in
xchg
jbe
das
jo
mov
int3
xor
cmpsb
test
aaa
ret
fnsave
push
xor
pop
jg
ror
dec
and
rcrl
push
test
jo
ret
mov
jb
add
push
push
xchg
push
mov
mov
outsl
lret
inc
xchg
xchg
subl
cmp
add
push
stc
cwtl
pop
jmp
inc
lods
lds
push
mov
push
and
stos
imul
add
mov
lds
dec
add
inc
int3
std
rol
imul
arpl
in
push
mov
shl
push
paddsw
adc
push
movsb
inc
push
sbbl
lds
mov
int3
sub
leave
jp
fbstp
mov
rcl
adc
push
xor
mov
sbb
repz
iret
dec
mov
mov
xchg
sbb
out
fisttpl
movsb
imul
adc
fidivs
adc
mov
test
inc
add
jecxz
ljmp
xor
insb
push
roll
mov
or
mov
add
loopne
pop
mov
out
inc
addb
pop
loopne
popa
xor
icebp
add
pop
es
call
lret
and
xchg
dec
lret
push
mov
inc
cli
mov
mov
push
sbb
adc
or
push
lret
sub
test
loopne
pop
call
loop
popf
hlt
cmc
pop
aad
inc
cmp
aaa
push
push
inc
cld
cmpsb
cltd
and
and
or
lods
cs
popa
enter
sub
and
mov
ljmp
adc
or
dec
adc
popf
push
dec
aad
jns
sarl
repnz
mov
or
mov
loopne
cli
xchg
xchg
je
bound
lds
cmp
in
sbb
aam
adc
dec
and
dec
outsl
imul
outsb
sub
lds
push
jecxz
iret
pop
insb
pop
or
pushf
andl
repz
jmp
fdivrp
dec
int3
jae
xor
into
lds
dec
lea
mov
jb
lds
inc
decb
adc
jns
xchg
scas
xchg
and
inc
jmp
jbe
push
cmp
or
pop
jecxz
daa
in
pop
inc
sarl
cld
pop
mov
xor
loopne
call
lock
lods
push
push
orl
xchg
andl
fldl
lea
pop
cwtl
clc
jo
adc
call
es
pop
sub
movsl
jecxz
and
xchg
xor
jne
mov
std
loopne
mov
sub
xchg
or
shr
xor
nop
testb
add
daa
xchg
lret
add
std
ljmp
and
xchg
push
pop
loop
dec
cmpsb
jge
testb
push
ss
mov
pushf
dec
fdivs
xlat
cltd
and
mov
mov
inc
sub
loopne
and
jbe
cltd
imul
xchg
call
push
insb
push
aad
fbld
fimull
add
out
lea
jne
rorb
add
test
lret
xchg
testb
push
in
push
push
jbe
outsb
dec
loop
cltd
xchg
or
cmp
fldcw
lcall
add
push
add
cli
repnz
xor
scas
pusha
and
stos
xchg
and
add
adc
fsts
das
rcll
inc
push
sbb
pop
pop
jl
cmp
roll
lret
and
push
cmp
pushf
loope
rcl
ret
lods
adc
lods
aaa
test
add
sti
cmp
fndisi(8087
adc
and
insl
test
cwtl
mov
repz
into
dec
out
pushf
and
and
shlb
imul
cmc
fwait
add
and
jmp
test
jno
lret
lret
mov
rol
and
sbb
cld
enter
loopne
sub
xor
leave
mov
lret
int
mov
adc
jo
mov
jo
cmpsb
pop
or
sub
ret
cld
or
xor
push
aam
mul
sub
xchg
ret
out
roll
stos
ret
aam
ljmp
cs
popa
dec
ret
int3
jle
inc
push
stos
ret
push
cli
jecxz
mov
nop
push
loop
ds
gs
in
and
add
pusha
pop
jmp
loop
or
enter
sub
loop
pop
mov
insb
movsl
fs
cmovne
fsubr
enter
addb
loop
out
push
les
dec
aam
not
shl
loop
lahf
jmp
vpavgb
iret
inc
out
mov
out
addr16
mov
insb
jp
lahf
mov
and
hlt
je
loopne
lret
loop
push
call
or
or
or
out
dec
inc
push
leave
jmp
pop
out
loop
mov
enter
vcvtsi2ssl
ret
mov
cld
xchg
aam
fcmovb
dec
hlt
lcall
mov
fcompl
loop
out
adc
jns
int3
sbb
cmp
out
repnz
mov
xlat
sbb
out
loop
fs
ret
ret
fdivr
test
in
ret
data16
and
mov
xchg
xchg
shlb
notb
repz
push
jne
pushf
lock
fstpl
rorb
mov
jecxz
mov
test
out
hlt
cmc
fdivp
push
mov
xor
push
inc
test
neg
pusha
hlt
stc
mov
jp
push
mov
movl
dec
sub
jp
popf
cmp
push
inc
pop
adc
out
mov
iret
out
imul
add
cmp
pop
push
dec
inc
or
ret
dec
ret
lea
dec
loop
inc
jb
xor
lret
lcall
in
and
dec
call
xor
pop
mov
pop
push
push
loop
and
inc
outsl
test
ret
enter
inc
loopne
jmp
out
mov
in
loop
and
or
movsb
loop
inc
daa
dec
fadds
add
xchg
les
test
pusha
jp
lahf
jne
insb
or
sbb
pop
pop
ljmp
dec
in
inc
ds
ret
in
stos
loop
xor
cmp
ret
dec
hlt
out
loop
jecxz
add
out
and
mov
cld
sbb
pop
cmp
push
ret
cwtl
xchg
ret
push
sbb
pop
loop
adc
sub
es
rorb
cld
or
je
xchg
adc
push
dec
inc
sub
pop
xlat
push
enter
sbb
rorl
ret
jb
mov
jb
pushl
sub
fildll
jb
jo
shlb
es
je
into
addr16
jae
stc
fisubrs
std
xchg
mov
leave
pop
jl
jno
jo
insl
mov
pop
add
rcrl
insb
repnz
add
xlat
iret
mov
xor
loopne
stc
ret
jne
jno
imul
punpckldq
jnp
addl
mov
jne
gs
push
out
cltd
into
fsts
rcrl
inc
repnz
hlt
je
test
aas
or
mov
test
or
lret
scas
lahf
mov
test
cmpl
cmc
inc
jae
into
push
adc
fimuls
enter
mov
mov
inc
jnp
dec
adc
mov
ret
shl
movsl
mov
arpl
mov
jae
mov
sbb
out
sub
and
xor
push
jp
in
icebp
xor
jae
test
mov
jp
int
in
and
xor
mov
fcmovu
adc
mov
sbb
mov
or
aam
or
mov
cwtl
jge
mov
mov
aas
jne
in
mov
aas
jp
and
fadds
dec
fwait
aas
lods
sbb
lahf
cmp
popa
xchg
push
mov
pop
push
cs
je
inc
or
xchg
test
imul
and
xor
jbe
mov
push
out
shrl
sub
incb
inc
mov
mov
idivb
inc
dec
jecxz
leave
js
jne
lods
dec
lds
loopne
xchg
pop
movsl
mov
lock
pop
lret
jmp
lea
lds
gs
pop
jo
daa
mov
push
popf
xchg
aas
push
popa
out
ficoml
or
sub
jno
mov
cmp
add
add
je
cltd
fs
jle
cmp
mov
int3
aas
cld
outsb
push
push
mov
ret
xor
pop
sbb
jmp
mov
mov
pop
jle
dec
arpl
mov
jne
xorl
jmp
add
inc
inc
mov
js
cmpsl
or
lahf
inc
mov
mov
mov
add
lock
mov
shl
jo
sub
xchg
cs
in
ljmp
cmpsl
push
shrb
dec
ret
cmp
or
mov
add
stos
lock
call
lock
cltd
cld
lods
push
cmp
xchg
mov
push
xor
lret
or
add
shl
xchg
dec
pop
orb
and
data16
das
pusha
movsl
inc
mov
fisttps
les
xor
mov
sti
jmp
sub
movsb
iret
jns
ret
inc
loopnew
je
xor
inc
js
std
inc
or
mov
fdivs
cwtl
adc
xchg
push
dec
xchg
cmpsl
inc
pop
push
jmp
sub
add
test
sub
dec
mov
aaa
or
leave
dec
fiadds
xor
loop
inc
pusha
sbb
insl
jmp
add
mov
xor
sar
inc
cmp
adc
lea
add
sti
movsb
jno
loopne
sbb
ljmp
sub
or
iret
shrl
lds
add
push
stc
adc
sub
subb
loop
clc
pop
and
or
inc
or
fisubrl
sbb
pop
loope
push
xor
dec
mov
pop
jo
aaa
xor
imulb
pop
outsb
leave
pop
pop
xor
xchg
je
xor
mov
mov
push
push
push
jl
push
fwait
cmp
push
mov
into
fldt
xchg
dec
test
jno
int3
popa
or
jne
fisubrl
dec
stos
mov
xlat
sub
out
lsl
cmpsl
and
inc
inc
aaa
in
add
adc
fidivrl
pop
test
test
lods
test
aaa
sub
push
call
mov
lcall
insl
insl
in
jp
push
insl
aas
addb
lcall
arpl
xor
aas
clc
dec
call
sbb
or
clc
push
nop
sub
es
lahf
scas
iret
inc
mov
xor
jl
mov
xor
adc
lret
insl
xor
xor
leave
jo
lea
loopne
hlt
mov
lret
mov
push
popa
fsubs
std
fdivrp
js
mov
in
cmp
gs
lea
sub
jmp
out
das
leave
call
aas
xchg
cli
lods
lock
pusha
mov
pushf
mov
inc
pop
lods
adc
cmp
lds
inc
inc
xlat
xchg
das
stos
ds
push
rorb
mov
mov
add
mov
adc
add
xchg
add
arpl
in
adc
adc
lret
mov
int3
rcl
fdivr
aas
add
inc
mov
stc
jo
inc
leave
iret
mov
add
mov
pop
jecxz
aas
cmpsb
sbb
add
mov
aas
pushf
lods
add
stos
dec
je
mov
outsb
cmpsl
idivb
mov
pop
pop
clc
and
push
pop
in
shll
pop
stc
loop
addr16
pop
loop
lock
mov
icebp
lret
stc
iret
lret
push
xor
dec
jecxz
adc
add
pop
ja
cmp
data16
icebp
adc
pop
stos
daa
inc
jo
push
dec
enter
js
gs
sub
push
in
sub
mov
mulb
cmp
jae
repnz
repz
pop
loope
jo
xor
das
in
push
in
aas
pop
jne
inc
fidivrl
rcll
and
insb
lock
ljmp
xlat
cmp
dec
into
mov
xorl
xchg
push
daa
cmpsl
jns
dec
adc
mov
loop
add
mov
inc
mov
jns
outsb
inc
lret
xchg
ljmp
fisubrs
ljmp
jo,pn
sbb
es
mov
das
lods
in
imul
es
adc
cmc
inc
cmp
mov
dec
cmp
cmp
adc
mov
sub
mov
cmc
imul
stos
pop
jmp
xor
fs
adc
punpckldq
lret
aas
pop
mov
test
outsb
fildll
ss
push
aas
cmp
and
mov
loopne
jbe
sub
hlt
and
add
adc
push
inc
and
sub
jecxz
add
daa
sub
mov
sbb
mov
std
inc
leave
xchg
xor
add
shlb
fisubs
bswap
mov
ret
pusha
xor
bound
jae
push
popa
mov
inc
dec
sub
inc
ret
les
ficompl
inc
setbe
leave
stos
mov
xor
pop
scas
sti
imul
daa
mov
addr16
fiadds
pusha
loop
pop
test
pop
jp
les
mov
jae
or
call
add
je
adc
cltd
stc
jns
xorl
inc
jo
shl
dec
push
mov
andl
sti
lret
sub
xor
mov
into
sub
jp
mov
insl
fidivrl
xorl
popf
jmp
mov
addr16
sbb
push
or
add
sbb
jl
arpl
jb
adc
insl
in
pop
push
fs
pop
add
aaa
fidivl
dec
adc
cltd
xchg
lcall
mov
ret
in
dec
sahf
mov
sbb
xlat
insl
push
fisttpl
nop
adc
inc
inc
xor
mov
dec
cli
inc
mov
sbb
add
nop
sbb
jge
push
inc
cmp
aas
cs
add
mov
push
dec
adc
cmp
inc
repnz
jle
lods
mov
push
ljmp
sbb
or
outsl
iret
icebp
sbb
pop
add
add
or
jbe
ret
mov
add
sbb
lret
test
mov
add
and
or
lret
jb
je
or
frstor
enter
cli
sbb
jno
adc
sub
arpl
shl
ret
fidivl
xchg
ret
adc
into
add
js
insl
outsb
lock
andl
ds
fisttps
call
adc
movsb
inc
out
jae
cltd
adc
shl
mov
xchg
je
dec
mov
pop
repz
into
adc
das
fadd
sub
aad
jmp
addb
fiadds
jbe
xchg
scas
mov
ret
out
push
or
mov
repnz
xor
fadds
mov
sub
les
and
add
jp
inc
shll
mov
jb
jne
lock
mov
mov
xor
mov
lret
mov
fdivl
adc
xchg
inc
push
jg
push
xchg
mov
dec
push
mov
sbb
daa
test
pop
dec
mov
sbb
stos
pop
mov
inc
fistl
adc
movsb
add
insb
mov
mov
daa
sbb
push
int
cmovbe
fimull
lea
push
ds
loopne
mov
fimuls
in
push
xor
push
leave
es
cmp
sub
xchg
pop
inc
push
ror
inc
js
in
mov
repnz
mov
xchg
dec
fisttps
pop
test
dec
js,pn
xor
int
lods
roll
test
jp
add
leave
cltd
pop
xchg
fcmovnb
lods
fdivp
enter
add
mov
push
and
mov
in
rolb
icebp
data16
mov
pop
decl
loop
int
mov
mov
add
sub
loop
inc
pop
outsb
fmulp
rolb
sub
sbb
lods
push
sbb
jl
rclb
push
mov
sub
imul
fsubl
fnsave
push
pushf
xor
xor
push
push
movsl
and
lret
fidivrl
jae
mov
dec
test
pop
cmp
mov
xor
xchg
push
fs
sbb
cmp
mov
add
or
cmp
sub
pop
jne
daa
icebp
rorl
les
xchg
test
push
rolb
cld
adc
sbb
lea
scas
cmpsl
call
stos
sbb
je
jp
add
mov
hlt
inc
data16
mov
xlat
xor
sahf
pusha
adc
dec
jae
inc
sub
sbb
push
out
pop
sub
push
movsb
mov
in
adc
js
shr
fidivs
aaa
sub
lret
dec
cltd
les
into
fcomps
pop
inc
lods
fdivrp
lret
lret
ret
push
mov
dec
aas
inc
cltd
mov
lods
jp
mov
and
insb
aad
stc
mov
sbb
lods
push
or
add
repz
xor
mov
cmp
iret
add
loopne
inc
subb
xchg
rcrb
movsl
jns
push
jge
mov
or
pop
icebp
fisubrs
sub
jne
push
arpl
mov
shlb
add
jo
xor
mov
insb
sbb
out
pusha
icebp
or
lods
jbe
cmpsl
xchg
mov
push
fnstcw
rol
add
add
in
sbb
and
mov
ret
cmp
jbe
push
jbe
xchg
movsb
in
add
xchg
pop
aad
jns
jne
pop
mov
xchg
ficoms
ret
dec
adc
scas
cmovb
lahf
add
pop
push
lds
mov
int
int
cmc
pop
push
and
xchg
mov
js
adc
xchg
cld
lods
lods
sbb
and
daa
cmpsl
popa
test
or
xor
mov
dec
lods
xchg
dec
jbe
push
xchg
inc
add
ficoms
repnz
popa
dec
inc
aas
add
aas
or
mov
movsb
je
cmpsb
and
or
add
stos
aam
pop
push
loopne
mov
sahf
popa
sbb
inc
les
dec
push
mov
and
ljmp
aam
inc
movsb
mov
jmp
mov
imul
fmuls
xchg
insl
pop
ljmp
mov
inc
int3
mov
cmpsl
mov
gs
jl
sub
mov
inc
push
mov
push
dec
and
pop
sbb
les
jecxz
mov
jle
fs
rclb
sub
jb
mov
xchg
mov
xchg
xchg
push
add
and
pop
push
xor
inc
push
repnz
arpl
roll
cmc
jns
fiaddl
stc
pop
das
je
mov
repnz
out
xor
sbb
dec
outsb
pusha
jbe
repz
jmp
and
popa
into
sub
add
jmp
lret
mov
cld
out
ja
xor
push
out
pop
stos
mov
and
lcall
lcall
loop
gs
aas
std
lods
dec
shlb
sub
loop
cwtl
mov
push
jns
mov
or
ret
xor
sti
add
pop
add
adc
cmc
nop
and
call
cltd
or
or
add
loope
icebp
pop
cmpsb
lret
jmp
data16
fisttps
imul
test
pop
inc
test
jnp
lods
imul
insl
lock
cmp
nop
dec
xchg
loop
repnz
inc
inc
repnz
add
dec
shrl
jb
and
sub
movsl
sub
or
test
pop
adc
cmp
mov
push
pop
lods
push
subl
cmc
pusha
inc
imul
in
xor
adc
add
pop
xchg
xchg
adc
lret
sbb
or
pop
stos
test
add
xor
sub
jbe
inc
xchg
js
jbe
aas
movsb
lods
imulb
loopne
es
js
cld
stos
add
fcoml
inc
insl
leave
dec
lock
sbb
fstpl
inc
sub
inc
ret
rolb
adc
lcall
cmp
xchg
cmp
jecxz
push
sbb
leave
or
and
xor
clc
out
lods
pop
and
push
xchg
jo
lret
lret
es
mov
lret
push
push
mov
xchg
pushf
jge
push
call
out
iret
ret
imul
data16
shll
into
fs
jne
jmp
jl
adc
leave
fcoml
and
fistps
insl
jmp
push
push
pop
sarb
icebp
pop
stos
lret
sbb
int3
lods
imul
sub
dec
xor
dec
mov
add
popf
jmp
mov
divb
mov
jmp
in
mov
dec
das
mov
imul
jl
shrl
dec
dec
mov
outsb
fldpi
add
insl
or
bound
xor
xchg
data16
shll
and
cmp
popa
sahf
cli
fs
and
pop
cltd
push
testl
movsb
test
out
add
loop
jp
fisubrs
add
cltd
push
adc
mov
stos
shlb
fiadds
call
lds
jecxz
and
in
mov
or
or
lods
ret
movsb
adc
jp
pushf
stos
mov
repz
das
enter
xlat
or
andb
pop
in
getsec
das
pop
lods
push
jne
jecxz
xorl
adc
push
pop
mov
sub
cmp
xchg
add
popa
dec
push
ja
pop
push
mov
jnp
pop
fsubs
xor
outsb
mov
sub
push
je
loop
inc
push
add
inc
hlt
sub
ja
faddl
loope
imul
mov
aam
jne
test
rcll
dec
add
push
fistps
lret
jae
inc
mov
ja
sub
add
lret
or
enter
lea
leave
ljmp
mov
push
xchg
out
xchg
and
pop
cmpsl
in
aas
lods
test
inc
notb
mov
jb
and
addr16
xor
loope
repz
jae
in
data16
xor
pop
js
data16
cmp
mov
push
pop
mov
jge
or
cwtl
or
imul
adc
rcrb
push
lods
lods
push
pop
jmp
int3
jne
cmp
sbb
psrlw
adc
sbb
repz
mov
imul
add
pusha
gs
push
dec
addl
and
cmpsl
outsl
into
and
mov
push
icebp
aaa
adc
xor
nop
pop
iret
or
lahf
lea
push
in
test
in
insb
jmp
movsb
mov
out
loop
sahf
inc
pop
in
dec
stos
xor
or
test
mov
inc
test
lret
jmp
stos
adc
cmpsb
pop
hlt
adc
dec
cmc
or
inc
mov
xchg
aam
and
cmp
mov
mov
popa
out
jmp
scas
or
add
pop
in
xchg
jo
push
movsb
leave
mov
xor
mul
jecxz
subl
or
push
lea
pop
adc
sub
cmpl
xlat
rolb
pop
mov
xchg
lds
jmp
jo
or
popf
divb
jmp
arpl
mov
imul
ret
sub
and
xor
inc
push
inc
test
sub
aas
jne
sarl
mov
dec
push
mov
into
data16
pop
pop
mov
push
daa
rol
sub
test
std
loop
subb
daa
lret
lods
cmpsl
dec
jp
cmp
xor
or
stc
shr
mov
idivl
ljmp
sti
mov
ret
sarl
jae
fsubs
hlt
cwtl
sbb
in
scas
icebp
add
fs
and
movsl
pop
cmc
mov
sub
rolb
rcll
pop
lea
add
sub
xchg
push
or
iret
out
push
push
int3
mov
push
xor
mov
iret
cmpsb
dec
push
sub
repnz
in
sti
xchg
push
out
pop
in
wbinvd
mov
mov
mov
ret
xor
push
pop
pushf
je
inc
in
inc
xor
pop
icebp
adc
adc
pop
cmpsb
inc
insb
repz
imul
fstps
fidivrs
dec
mov
mov
or
mov
call
pusha
out
repz
ret
fiadds
pop
jmp
out
scas
in
ret
mov
sbb
cmp
pop
pop
out
aaa
addr16
sbb
xchg
call
pop
sub
lahf
dec
popf
shll
jecxz
jne
mov
and
and
dec
pop
flds
jge
pusha
popl
aaa
push
push
repz
push
fwait
ljmp
sti
sbb
fdivrp
lret
xchg
rorl
sub
sbb
iret
xchg
xlat
xor
xor
sbb
pusha
inc
cli
jge
cmp
and
push
cltd
das
xor
pop
aam
adcl
push
sub
inc
xchg
or
adc
shll
fidivs
fcmovnbe
jne
inc
orb
push
lahf
sbb
or
loopne
scas
dec
rcr
int3
jne
clc
fnsave
adc
cltd
loop
es
mov
imul
lret
rcll
jmp
jb
cld
mov
test
lds
push
imul
adc
int3
inc
repnz
rcrl
inc
sbb
xchg
lret
stos
roll
add
cmp
push
cmp
jle
sbb
sub
mov
in
ds
jle
inc
fistpl
rcl
cmpsb
daa
cli
lods
lahf
lret
push
lahf
cmp
xor
ret
dec
and
in
inc
mov
call
addr16
xchg
mov
out
dec
mov
push
iret
and
cmp
jno
addr16
scas
cwtl
in
fdivrl
cmpsl
cld
pop
cltd
out
or
push
cmpsb
nop
enter
movsl
or
xchg
imul
xchg
inc
popa
pushf
je
rol
lea
rorl
jne
enter
lea
int3
adc
test
pop
cli
lret
mov
adc
lahf
adc
sub
xor
sbb
jge
rcrl
repnz
or
pop
inc
mov
loopne
jno
mov
push
mov
aaa
mov
jmp
mov
jmp
lret
cltd
mov
or
loopne
ja
pushf
cltd
jo
cmp
jne
add
test
rclb
ljmp
xor
aas
xor
lods
jne
daa
repnz
jae
lret
sahf
shr
test
and
sbb
adc
push
and
fistps
andb
lret
jmp
push
movsb
and
and
int
mov
jae
inc
mov
pusha
arpl
cmp
jmp
lds
sbb
mov
mov
mov
mov
pop
xor
mov
ret
shlb
sbb
add
pop
or
push
jb
add
add
pop
inc
in
dec
dec
xlat
adc
xchg
dec
mov
loop
cmp
push
mov
lods
pop
loop
dec
fildl
xchg
cli
test
cmp
faddp
subl
outsb
stos
test
push
inc
cs
xchg
jg
fcomip
aad
mov
lret
xchg
dec
lds
arpl
and
iret
imull
or
repnz
hlt
cltd
inc
inc
fidivrs
ret
or
sub
push
or
xchg
mov
cld
mov
pop
and
ja
mov
lods
jne
lret
addr16
lahf
mov
cmpsb
lods
jle
repnz
sahf
subb
jecxz
pop
push
add
fsubrl
or
add
cli
popa
add
int3
loopne
mov
push
leave
jge
test
mov
cltd
mov
add
or
dec
pop
mov
jg
inc
sub
cltd
sbb
repnz
lods
cmpsl
cmpsb
ret
pop
inc
sub
jbe,pt
xor
xchg
outsb
test
imul
fnsave
cld
or
xor
leave
test
and
mov
out
dec
inc
fsubr
add
jae
testb
sub
das
push
out
insb
dec
shll
adcl
mov
xchg
int
daa
mov
cmp
xchg
and
insb
loopne
dec
pop
mov
jmp
add
bound
sbb
sub
cvtdq2ps
pop
push
outsl
push
xchg
dec
add
sub
dec
push
jle
add
lods
in
pop
test
sub
icebp
inc
xlat
mov
outsb
mov
repnz
mov
push
dec
mov
pop
cmpsb
and
fiadds
lds
push
xchg
add
pop
and
and
adc
pop
inc
push
cmp
add
inc
sahf
mov
add
or
sarb
outsl
fildl
scas
add
in
int3
popa
xchg
sub
sub
sbb
cltd
sub
rorb
aaa
jmp
jne
pushf
inc
mov
add
push
and
adc
in
inc
xchg
ret
ja
arpl
pusha
mov
in
insl
test
cmpb
sbb
push
mov
shr
mov
addb
pop
sub
jae
fldl
je
pop
movsb
loopne
les
mov
jns
jb
cli
or
or
pop
pop
inc
test
repnz
pop
aaa
aad
loopne
add
dec
sbb
jnp
or
lods
aam
sub
pop
pop
pop
dec
sbb
push
pop
sub
and
rcr
fst
pop
lret
or
inc
sbb
xchg
and
ficomps
xchg
insb
push
pop
ret
sarl
and
cld
fdivs
ds
xor
test
jge
imull
aam
clc
xchg
and
cmp
fs
xchg
sub
cltd
push
lcall
dec
aad
call
ret
mov
and
shr
push
ret
xchg
ficompl
fdiv
lea
and
adc
sbb
dec
je
mov
sbb
cs
and
push
jb
add
pop
loopne
jle
iret
rcll
add
in
sub
mov
test
cmpsl
lcall
jge
leave
mov
cmp
cmp
cmp
xor
je
dec
and
and
test
sub
xchg
pushf
in
jno
and
xchg
fstpl
and
mov
sub
adc
ss
or
pusha
daa
jmp
aad
clc
js
jns
adc
push
test
daa
popa
and
gs
movsl
mov
xor
in
ret
dec
inc
push
xchg
cli
mov
push
clc
aaa
lret
lcall
negl
mov
and
pop
icebp
repz
and
int3
ret
jmp
inc
mov
xchg
sbb
xor
ret
dec
xlat
and
and
insb
sarl
sub
push
mov
in
aas
add
jmp
shll
loop
aas
sbb
pop
cmpsb
push
mov
jmp
lods
mov
frstor
insb
add
pop
stos
add
or
mov
jge
adc
test
dec
and
mov
repnz
or
or
inc
sub
jnp
pop
dec
lret
stos
fld1
ficoml
xchg
ret
icebp
mov
jae
aas
test
mov
enter
push
pop
repz
jae
jns
int
pop
jno
pushf
outsb
xchg
shll
mov
jno
cmpsl
jecxz
or
mov
and
push
loop
inc
cmp
and
fistpll
repnz
mov
ficoms
push
out
sbb
loopne
add
into
fisubs
jge
push
loopne
lea
stos
aas
mov
jmp
sbb
lea
push
xchg
pop
ret
mov
mov
fwait
or
mov
add
lret
push
ret
sub
test
lret
scas
inc
negl
adc
and
int3
sub
loopne
lods
lea
push
enter
inc
push
cmpsl
sub
jno
mov
jnp
cld
test
push
sub
clc
mov
adc
mov
enter
and
maxps
add
aaa
adc
sbb
mov
dec
ja
out
jno
je
outsb
cmpsl
lret
sbb
xor
pop
popa
push
jmp
ret
inc
scas
cmp
loop
inc
xchg
or
push
cmp
and
cmp
jne
mov
pop
loopne
lcall
popa
sub
push
scas
mov
sub
jmp
ljmp
sbb
mov
int3
test
mov
lcall
mov
inc
xchg
repz
scas
cmp
ret
add
lret
jae
push
ffree
fdivr
fimuls
xchg
mov
addr16
dec
jns
in
sub
ret
out
push
pop
movl
pop
and
sbb
dec
and
jns
lea
jo
mov
ret
inc
mov
mov
scas
xchg
inc
stos
xchg
insl
add
adc
push
pop
repz
jae
addr16
mov
sub
push
sbb
arpl
push
sub
lret
dec
jle
sub
aas
imul
pop
js
inc
pop
nop
jl
in
and
dec
fiaddl
pusha
jo
cmp
jae
inc
lret
adc
add
das
mov
mov
cmp
ret
je
aam
aas
cmp
sarl
lods
jge
ret
icebp
lds
xchg
pop
or
ret
pop
jmp
outsl
out
sbb
xor
lret
test
push
lret
insb
push
movsb
dec
arpl
fisttpl
jecxz
scas
mov
and
mov
lods
out
and
jmp
leave
or
sbb
outsl
ja
fdivs
xlat
mov
xchg
adc
jp
mov
push
and
enter
push
push
jl
aas
popf
hlt
mov
je
cmpsl
mov
add
inc
repnz
push
mov
shrb
or
mov
movsl
inc
js
mov
test
xor
mov
inc
adc
stos
jl
jecxz
or
bound
push
pop
jae
mov
fwait
adc
pop
adc
xchg
lds
js
rorl
mov
dec
or
inc
pop
daa
fwait
push
lods
pop
adc
loopne
sub
shl
sub
in
mov
clc
inc
sub
lret
adc
xchg
xlat
pushf
sub
push
lds
mov
rcrb
sbb
popfw
aas
and
mov
sbbl
jae
mov
int3
pop
dec
fbstp
movsl
outsl
loopne
fidivl
sub
jo
hlt
push
cltd
xchg
jo
push
or
add
sarb
bound
pop
fiadds
repnz
insl
ret
pop
push
out
ret
or
pop
movsb
xor
or
leave
mov
fbstp
popa
add
dec
aad
mov
insb
ret
add
jns
or
jbe
daa
and
jl
pop
xor
xor
jo
mov
cmp
cmpsb
push
pop
adcb
push
push
inc
int3
mov
adcb
lret
xor
jo
test
sbb
mov
and
fistpll
fiadds
aaa
jb
lahf
rcll
sbb
ljmp
repnz
cmp
daa
out
test
hlt
and
leave
pop
cmc
inc
loop
pusha
add
mov
jmp
in
inc
add
pop
add
sbb
fiaddl
or
hlt
pop
mov
jmp
das
or
shl
inc
aad
mov
xor
mov
xchg
xchg
aam
add
jno
lret
dec
and
adc
jl
dec
sbb
inc
shl
mov
mov
cmp
mov
mov
dec
outsl
imul
sbb
es
push
inc
or
add
subb
sub
pusha
xor
stc
pop
add
mov
fsubrp
add
mov
iret
add
in
add
addb
ror
pop
or
jb
add
loop
inc
inc
add
test
and
les
jb
add
inc
xorl
fisubl
jb
cmp
jecxz
inc
or
sub
xor
loope
and
in
mov
imul
xchg
call
or
and
test
es
or
pop
loopne
xor
add
adc
fbld
icebp
dec
loopne
leave
adc
out
dec
mov
mov
nop
pusha
shl
fnsave
rorl
dec
dec
sub
dec
jo
fmul
lds
lcall
stc
mov
sub
bound
pop
pop
mov
jnp
mov
pop
xchg
inc
pop
cmp
and
or
ja
fstps
fiadds
sti
icebp
cmp
push
pop
xchg
xchg
cmp
pop
arpl
push
cltd
enter
je
stc
pop
sub
out
movntq
or
mov
xchg
and
mov
xchg
mov
xchg
lock
xor
mov
push
iret
ret
cld
lods
sub
int3
adc
xchg
mov
outsl
push
lods
iret
cltd
inc
xor
dec
outsl
shrl
push
in
pop
jecxz
rorb
call
or
stos
or
lods
jae
cmpb
call
fidivrs
xchg
lock
xor
sarl
sub
pushf
in
adc
call
popa
and
ret
dec
sub
aad
iret
inc
cmpsb
fwait
jle
inc
add
xchg
and
mov
push
fsubr
add
jno
jecxz
lods
or
movups
jae
pop
shll
mov
jmp
lods
add
andl
mov
xorb
cmp
imulb
fiadds
add
inc
xor
add
mov
fidivrs
pushf
test
adc
xor
pushf
lret
pop
or
lret
out
cmpsl
lahf
pop
in
jge
jmp
mov
sbb
icebp
jno
dec
inc
cmc
in
mov
or
sub
lds
in
popl
mov
mov
cmp
je
arpl
call
mov
icebp
sbb
jno
adc
cmp
aad
xchg
in
clc
push
jbe
or
addr16
insb
cli
dec
lock
popa
lods
shll
mov
jmp
dec
and
hlt
add
lret
mov
jecxz
inc
push
addr16
fcoml
test
xchg
shlb
xor
sahf
roll
aad
dec
pop
xchg
sub
movsl
subb
nop
test
data16
and
xchg
cld
dec
cmp
mov
jmp
cs
pop
stos
or
ds
jle
loopne
xchg
out
insl
cmpsl
lods
dec
inc
cmp
cli
push
mov
inc
push
test
cmp
xchg
lcall
xchg
jae
fisttpll
fwait
mov
seta
movsb
test
sub
inc
push
push
sarb
cli
cli
jmp
or
sbb
mov
xchg
popl
mov
jmp
out
mov
cmpsl
aam
fcmovnbe
mov
or
call
push
jmp
mov
dec
cmp
ljmp
jecxz
mov
xlat
xor
mov
lret
sbb
mov
icebp
xlat
sub
add
lahf
and
sahf
inc
mov
dec
icebp
aas
test
push
xchg
pop
decl
sub
mov
mov
icebp
stos
shr
cmpsb
jne
mov
test
mov
stos
pop
in
or
mov
xor
adc
or
gs
call
aaa
sub
mov
fisubrl
imul
inc
ss
dec
and
mov
ss
fiaddl
das
inc
push
ja
das
lods
jle
fsubrl
xchg
or
mov
popa
add
add
add
clc
popa
mov
rol
daa
int3
sub
pop
lahf
sti
notb
or
sub
mov
ret
mov
cmp
dec
rol
leave
adc
and
or
mov
or
sbb
popa
mov
loopne
mov
pop
pop
sub
xchg
in
or
stos
int3
jae
xchg
enter
jg
adc
adc
adc
dec
xchg
mov
test
xor
jno
push
cli
sub
and
gs
cmp
cld
movsl
loop
test
lds
push
in
or
stos
ljmp
loop
ret
loopne
ret
aas
cmp
ja
add
movsb
inc
adc
test
gs
xor
adc
sub
out
adc
inc
sbb
repnz
iret
addr16
push
sub
test
popf
adc
ficoms
insl
test
mov
sub
dec
pop
dec
lret
movsb
mov
jo
shll
rorb
xor
inc
sbb
andb
add
in
loop
and
jmp
mov
cmpb
push
lret
push
add
mov
repz
push
aad
sbb
push
jns
arpl
cli
out
arpl
mov
inc
imulb
pop
jo
pop
push
add
test
jp
cmp
loopne
aaa
repnz
adc
imul
mov
push
lea
orl
sub
sub
push
push
stos
add
shl
and
sub
call
mov
std
xor
jecxz
jge
xor
ffree
lcall
call
enter
aaa
sub
pop
fwait
push
addr16
jns
test
and
xchg
pusha
mov
xchg
sbb
mov
push
cwtl
push
xchg
loopne
test
inc
aaa
fistl
mov
inc
and
mov
cmpsl
and
ljmp
popa
pop
ret
popa
or
inc
std
addr16
insl
dec
mov
push
mov
sbb
lret
push
push
jae
fdivs
bound
inc
push
xor
lret
sti
mov
outsb
pop
lds
mov
xchg
add
cmp
mov
nop
dec
jns
fs
cmp
cmpsb
dec
and
jg
mov
dec
mull
cmp
pop
negb
dec
ret
mov
push
clc
cmp
call
das
mov
imul
mov
jbe
test
pop
call
rcll
cmp
cmpsb
cmpsb
sub
inc
rcrl
mov
shll
lret
rcrb
daa
adc
cmpsl
mov
ret
add
repz
sbb
add
sub
xchg
popa
sub
mov
mov
sbb
in
and
loopne
mov
mov
add
pop
inc
nop
cmpsl
pusha
pop
out
xchg
aam
icebp
add
mov
out
xor
cmp
adc
lods
rep
pop
dec
loop
add
push
sbb
jnp
sbb
cmp
movsl
sbb
and
add
inc
cmp
push
inc
dec
and
popa
nop
mov
pop
cmc
mov
stc
stos
jae
push
jno
shll
insb
cmc
arpl
cmpsb
outsb
mov
and
shrb
mov
mov
push
or
mov
inc
fiadds
sti
dec
test
jns
in
int
inc
cli
adc
sbb
cmp
aaa
adc
loop
popf
das
pop
and
scas
push
adc
inc
rcrl
adc
mov
incb
xchg
mov
dec
nop
cmpsb
jl
add
ret
add
repnz
sti
fiadds
punpckldq
incb
sbb
int
repz
dec
sub
push
aaa
sti
adc
shl
mov
imul
sahf
add
sahf
mov
sub
mov
insl
dec
mov
cli
es
xchg
sbb
es
dec
add
mov
arpl
xor
andl
insb
dec
repz
inc
repz
div
xchg
data16
push
push
mov
sti
pop
in
push
sub
xor
orl
mov
push
fcomip
lods
repnz
inc
jg
jne
out
rcll
cli
sub
xchg
int
jo
bswap
adc
ror
mov
inc
cmp
or
lcall
cmpsb
aaa
pop
jg
cltd
into
cmp
push
test
rclb
mov
mov
leave
addr16
dec
add
loope
bnd
js
jo
dec
cltd
hlt
out
repnz
jp
out
test
or
mov
add
push
mov
addr16
mov
jnp
les
in
xor
or
add
or
sub
xchg
sbb
pop
mov
adc
lret
ret
pop
dec
inc
leave
dec
mov
add
dec
icebp
std
pop
sub
sbb
dec
push
psrlq
in
cltd
test
mov
stc
fimuls
das
fdivrp
aad
mov
in
or
sbb
sti
stc
scas
pop
mov
test
adc
std
mov
sbb
test
fimuls
push
push
sub
aad
lcall
mov
and
dec
lahf
xchg
jns
add
adc
test
jecxz
xor
push
or
ret
push
mov
leave
ret
sti
push
sub
stc
xor
and
addr16
push
inc
or
inc
leave
fcmovb
aas
inc
je
jge
xchg
mov
mov
movsb
shlb
shll
ds
mov
push
sets
mov
mov
or
repz
ret
fwait
repnz
add
pop
mov
mov
test
shl
mov
aas
jge
mov
shll
push
sbbl
call
mov
lods
fiadds
lret
cmc
and
lds
cmpsb
mov
mov
adc
cmp
icebp
add
mov
in
pop
sahf
mov
sbb
push
sbb
push
sub
and
fwait
imul
mov
stos
sub
test
or
scas
cmpsb
aas
mov
out
imul
in
and
je
push
out
adc
sarl
loopne
inc
mov
inc
leave
mov
add
out
mov
jb
repz
jecxz
push
mov
adc
leave
add
gs
jno
cmpsb
retw
call
fidivrl
or
ret
sbb
push
mov
and
cli
and
subb
nop
leave
shll
sarb
push
mov
repnz
lods
bound
pop
dec
popa
inc
pop
inc
and
repz
pop
inc
lret
jae
push
rorl
dec
jo
loopne
push
add
add
ret
scas
push
cmp
adc
inc
xchg
in
pop
cli
dec
jno
cmp
cmp
addr16
push
lds
adc
mov
cmpsb
jae
jmp
mov
fs
stos
jmp
inc
mov
test
dec
inc
test
repnz
cmp
dec
lods
push
inc
add
cld
shrl
out
insl
pusha
adc
ja
popa
sub
fs
lods
and
addr16
adc
jae
mov
ljmp
push
push
jmp
mov
mov
mov
sub
mov
push
jb
out
ret
push
je
dec
mov
dec
test
in
pop
ds
mov
out
jo
loop
or
sti
notb
daa
cmpsb
lret
sub
mov
aas
loop
mov
xor
out
adc
mov
inc
data16
mov
xchg
repnz
inc
dec
stos
divb
pop
jbe
ljmp
cmp
add
les
inc
sbb
in
jecxz
pop
dec
push
out
test
sub
or
cmpsb
push
pop
mov
ret
push
or
ljmp
xor
cmc
mov
sahf
lahf
sub
in
xchg
pop
ret
divl
mov
cli
mov
inc
bound
add
icebp
xchg
lds
or
sub
pop
push
xchg
adc
cmp
xor
dec
sub
or
sub
repnz
daa
adc
mov
mov
arpl
fsubs
in
div
sub
add
pushw
out
jb
aaa
mov
inc
add
daa
inc
in
orl
mov
add
or
addr16
pop
jl
arpl
aam
or
cmpsb
dec
lods
stos
lret
sbb
fxch
pop
pop
shll
mov
pop
enter
ljmp
push
sub
repnz
test
pop
rorb
and
sbb
and
adc
sahf
lods
stos
mov
fstl
mov
fidivrs
push
cmp
fsubrs
shlb
adc
mov
popa
jl
adc
fistpl
stos
sub
push
cmp
xchg
dec
cltd
daa
push
ret
iret
mov
add
jecxz
xchg
mov
stos
mov
jne
pop
shll
xor
mov
icebp
icebp
pop
rcrb
pop
add
lds
sbb
mov
pop
and
dec
push
in
insl
sbb
cmpsl
sbb
jb
jno
mov
mov
dec
inc
les
lods
lret
pop
outsl
mov
mov
cmp
push
leave
loopne
inc
push
in
divb
lods
test
cmp
roll
addb
mov
xlat
int
mov
and
data16
xchg
mov
jno
imul
jp
or
xor
lock
jno
or
add
mov
jnp
jns
je
enter
adc
dec
repz
push
mov
ja
dec
add
and
sub
jbe
or
dec
outsl
or
shlb
es
sbb
pop
jae
pop
mov
adcb
fcmovnbe
xchg
std
sahf
out
pop
add
iret
inc
xor
jbe
packssdw
pop
inc
jmp
mov
shrl
mov
mov
stos
ret
and
stc
or
push
je
push
push
jne
xor
sbb
outsl
and
shlb
sarl
fmul
lret
mov
inc
popf
xor
or
cmpsb
cmp
inc
and
cli
dec
jmp
cld
xor
dec
inc
push
mov
mov
imul
jae
dec
stos
stc
dec
shlb
jle
push
xchg
stc
loop
mov
xor
and
sub
xchg
add
scas
mov
push
dec
mov
sahf
int3
andl
jo
jmp
testb
adc
inc
jle
inc
mov
jno
push
repnz
movsb
pop
sub
outsb
out
jmp
push
push
fs
jbe
std
loopne
sub
inc
adc
adc
add
pop
std
sub
loop
lods
addb
add
mov
imul
rolb
jo
or
addr16
or
jecxz
jo
int
sub
filds
inc
mov
inc
rclb
sbb
pop
pop
add
dec
sub
sbb
jo
fwait
dec
sbb
leave
push
loopne
insl
and
mov
fidivrs
xor
push
adc
cli
movsb
cwtl
fistpll
aam
add
lea
fwait
mov
mov
loopne
icebp
movsb
pusha
xlat
daa
es
push
inc
or
push
lret
sbb
mov
rol
repz
loopne
rol
sti
std
push
add
test
mov
inc
sub
fs
movnti
jmp
push
xor
repz
mov
cmpb
aaa
push
addl
in
dec
sub
adc
cmp
dec
dec
inc
xchg
sti
subb
mov
jmp
pop
push
dec
and
pop
mov
out
ret
imul
push
bound
push
push
pop
and
fs
push
push
cmpps
loop
jge
jno
inc
adc
inc
sub
sub
push
es
shll
aam
sub
xor
loopne
in
pop
int
xchg
sub
pushf
inc
scas
lods
and
out
push
lret
roll
leave
push
sahf
leave
xchg
shll
lcall
or
xor
rolb
push
fstpl
aad
mov
adc
sub
sbbl
das
test
add
sub
and
xchg
xchg
dec
adc
mov
fcomip
adc
jp
test
push
daa
sbb
jge
cltd
pop
iret
jnp
leave
test
popa
int3
xor
shrl
ja
data16
pushf
mov
aam
pop
shlb
mov
repnz
sbbb
cmc
sbb
jle
fsin
pop
lret
mov
inc
mov
fadds
mov
jbe
arpl
sub
les
lret
jl
jmp
and
divb
lods
and
mov
pop
jbe
icebp
mov
push
or
lods
xchg
pop
stos
out
xor
pop
inc
push
in
insl
or
jge
aaa
jae
arpl
jnp
or
dec
stc
jo
lods
inc
add
cmp
dec
cmp
jp
push
fisttpll
cmp
dec
xchg
inc
mov
pop
mov
ss
adc
push
aaa
mov
pop
dec
mov
mov
mov
lahf
insl
outsl
pop
les
mov
adc
inc
add
js
js
dec
xorb
loopne
and
inc
lcall
popa
xor
stc
push
fnsave
mov
test
lcall
pusha
call
addr16
js
xchg
mov
push
cmpl
or
jae
sarl
dec
inc
cmp
xchg
mov
lret
in
xor
ret
push
mov
les
iret
fsub
jne
or
push
push
and
push
add
inc
mov
fisttps
movsb
adc
fcmovnu
repz
mov
push
lret
in
xchg
jp
mov
mov
pop
ret
add
xchg
lret
mov
out
lret
dec
repz
in
inc
and
inc
mov
mov
push
repnz
insl
xor
xor
adc
jmp
cmp
xchg
es
mov
je
pop
fstl
incl
cmp
mov
nop
cltd
push
xchg
lret
shll
xchg
push
rol
fimuls
mov
in
mov
pop
xor
pop
lods
sbb
shrl
fiadds
and
into
mov
movsb
rorl
in
or
sub
cmp
ffreep
jne
mov
mov
jp
sbb
daa
lcall
inc
fsubrl
shlb
cmp
mov
leave
mov
fdivrp
enter
shl
dec
je
lret
mov
sbb
inc
jmp
into
imul
enter
add
fwait
and
cltd
aam
add
inc
sbb
cmpsb
xchg
pop
insl
mov
and
cli
sub
aad
mov
fs
shl
into
insl
leave
int3
stos
jns
lret
lods
ja
dec
cld
fcmovnb
test
dec
ficomps
mov
iret
sti
adc
push
pop
enter
dec
rcl
leave
lret
lds
dec
sub
ret
lret
aam
dec
iret
out
int
dec
sub
jno
enter
pop
into
ret
inc
aas
pop
mov
pop
repnz
xor
pop
inc
xlat
dec
es
xlat
std
outsl
les
fidivrs
enter
orb
and
pop
mov
clc
inc
xchg
sbb
dec
jge
push
jns
popa
dec
fstps
roll
shlb
leave
push
inc
dec
mov
loopne
orl
pop
cmpl
cltd
pop
lret
sarl
leave
add
ds
out
adc
scas
sbb
out
jae
sbbb
in
enter
hlt
sub
pop
add
rcl
add
or
in
inc
rclb
adc
sbb
icebp
mov
cmp
mov
mov
push
jp
in
sub
xchg
fcomp
and
andl
lods
pushl
mov
or
cmp
test
lods
sub
push
and
fldcw
pop
mov
add
or
push
inc
fiaddl
inc
mov
pop
les
repnz
and
inc
ret
dec
ret
mov
ret
in
cmp
testb
ret
jae
inc
adc
and
pushf
or
pop
sti
inc
fidivrl
inc
xor
aas
pop
mov
aam
mov
sub
adc
dec
dec
cli
sbb
leave
nop
pop
push
stos
sbbl
rclb
lods
aaa
hlt
andl
push
clc
lods
movsb
xor
jns
pop
push
imul
lret
loope
inc
cmpsb
sub
ficomps
ds
addr16
sbb
mov
imull
es
mov
adc
add
into
pop
mov
repz
cmpsl
adc
xor
icebp
movsl
inc
cld
mov
scas
push
fcomi
lods
xchg
xchg
dec
pop
aaa
orl
std
and
out
mov
add
icebp
fcoml
loop
mov
addr16
scas
sub
inc
sbb
out
lock
xor
frstor
adc
popf
or
sbb
into
in
xchg
add
popa
xorl
mov
cmp
leave
cmp
push
fldenv
aas
inc
pop
or
adc
or
or
add
add
xchg
out
push
pop
sub
cmpsl
cld
lods
lods
inc
mov
or
xor
in
sbb
sbb
push
insl
add
mov
pushf
popa
in
icebp
sbb
pop
jo
and
add
icebp
testb
fisubrl
xor
push
add
add
arpl
fcmovb
or
sub
dec
xor
leave
jae
ror
scas
in
mov
mov
cmp
in
jnp
and
imulb
push
pop
insb
xchg
ret
stc
mov
loope
xor
push
add
add
xchg
mov
imul
or
clc
xchg
inc
je
rcrl
mov
xor
jb
fsubs
jp
push
lock
rol
push
pop
push
or
adc
xor
pop
and
adc
rclb
andl
dec
inc
xor
pop
js
dec
cli
inc
xchg
xor
sbb
loopne
movsb
dec
inc
xor
xchg
push
pusha
inc
cli
lds
fwait
sbb
cs
push
ja
cmc
mov
outsl
pop
lret
gs
jne
inc
into
andb
sub
jns
stc
fsubrp
xchg
push
sbb
ljmp
pop
xchg
dec
pop
daa
mov
fmul
bnd
cld
mov
jg
mov
jne
movsl
fs
ffree
dec
jecxz
jb
dec
push
lret
cmpsb
clc
out
bound
and
lsl
mov
xor
push
pushf
push
fs
adc
daa
jo
stc
inc
iret
cmpsb
pop
fiaddl
sarl
imul
push
or
jae
inc
mov
faddp
dec
clc
cmp
add
pmulhuw
incb
and
sar
adc
inc
int3
in
or
sbb
pop
xor
add
fldcw
add
sub
movsl
xor
pop
inc
inc
mov
into
out
inc
and
sub
adcl
stc
into
sub
test
push
das
pop
addr16
adc
jge,pt
loop
mov
pop
clc
and
add
xor
mov
add
roll
add
add
adc
adc
cs
shlb
int3
repz
and
roll
or
or
push
fadds
push
mov
rorl
gs
mov
jb
testb
sbb
add
push
decb
jecxz
les
mov
ss
lds
ljmp
les
xchg
push
and
or
xchg
mov
add
fsubl
xor
in
push
test
inc
inc
lcall
add
repnz
mov
jp
push
push
stos
ret
mov
jge
dec
jns
stos
imul
push
subb
dec
add
add
lea
push
daa
adc
mov
sbb
adc
enter
and
inc
sbb
into
das
gs
aaa
not
fisubrs
clc
xchg
inc
shll
cwtl
mov
mov
jecxz
push
jnp
sbb
and
data16
leave
push
roll
repnz
pop
ret
fists
sub
mov
and
mov
dec
jb
inc
scas
pop
stos
jecxz
es
jb
cltd
mov
inc
jmp
lods
xor
push
mov
je
jmp
jb
rcl
shrl
and
jae
xor
cmp
movsb
jne
daa
jbe
cmpsl
sbbb
mov
push
sub
or
test
xorb
cmp
and
insl
int3
scas
mov
les
clc
fldt
fcmovbe
xor
bnd
jecxz
fs
or
aas
mov
jl
push
inc
push
sub
push
and
lret
in
shll
inc
add
notl
pop
aam
xor
sub
loopne
mov
cli
push
inc
cli
mov
ficompl
sub
sbb
jl
adc
daa
mov
cltd
nop
lock
adc
mov
stc
xchg
sub
cmc
lds
add
xor
inc
arpl
mov
test
sbbb
adc
lret
into
ljmp
and
stos
fisubl
lods
insb
into
sbb
imul
adc
cwtl
rol
lds
mov
inc
add
fdivrp
adc
mov
div
ret
adc
xchg
sbb
ret
shl
mov
mov
and
push
repz
inc
ret
stos
mov
mov
xchg
imulb
inc
add
pop
mov
dec
loopne
orb
pusha
and
mov
xchg
xchg
loope
sub
push
pop
repnz
popa
bound
aad
lock
pop
int
push
repz
mov
daa
sub
mov
inc
cmpsb
mov
inc
inc
dec
inc
js
adc
xor
inc
icebp
movsl
jb
push
and
leave
cmp
jb
push
bound
push
inc
bnd
and
mov
and
mov
ficoms
aas
fiadds
scas
out
in
dec
hlt
ret
push
ret
jmp
fs
xor
push
xor
mov
push
dec
out
sahf
xchg
gs
xor
inc
push
lds
lcall
scas
fcmovb
stos
jb
or
leave
dec
cmp
or
scas
mov
lret
std
fmull
jp
punpckldq
cli
lods
xlat
or
adc
ljmp
mov
dec
lods
dec
cltd
inc
inc
shlb
dec
testl
push
mov
adc
sti
insl
sbb
or
add
jmp
inc
sbb
arpl
jne
dec
add
mov
add
outsb
sbbl
repnz
pop
cmpsb
ljmp
xor
mov
out
or
js
sub
xchg
add
lret
cmp
mov
xchg
jmp
dec
das
push
jno
rolb
nop
push
fisttpll
xchg
mov
mov
inc
add
lar
daa
in
stc
xchg
inc
cmp
add
mov
pop
and
mov
retw
loop
sbbl
je
sbb
rcr
mov
int3
arpl
fdivr
cwtl
movsb
xor
mov
sahf
in
sub
adc
xorl
inc
add
in
je
push
loop
sub
and
jo
mov
clc
inc
and
add
xchg
aad
push
dec
mov
inc
pop
daa
stos
test
fimull
sub
sbb
ret
sbb
mov
cmpsl
mov
ret
fnstsw
dec
es
inc
push
sbb
mov
push
fwait
sahf
pushf
shl
jno
stos
push
xlat
or
out
lods
xchg
pop
or
aad
imul
daa
cmp
push
mov
out
out
pop
leave
insl
negb
loop
push
adc
pop
and
fidivrs
mov
leave
or
mov
cltd
or
mov
add
mov
cmp
addl
adc
sub
inc
sbb
test
aas
cld
xlat
push
aaa
push
call
cmp
fidivrs
movsl
sahf
xchg
fldcw
xor
imul
xchg
jecxz
and
daa
idiv
imul
int3
adc
jg
adc
scas
insb
test
daa
arpl
jmp
or
mov
mov
inc
lret
sti
push
sub
leave
dec
push
add
mov
mov
mov
sbb
hlt
or
data16
xor
xchg
aam
inc
iret
les
mov
enter
lods
xor
inc
iret
xchg
inc
pushf
dec
or
xchg
or
fildll
fimull
cmp
mov
paddsb
inc
ret
pop
add
cmp
ja
push
mov
xor
sub
repnz
ljmp
addr16
mov
cmpsb
repnz
stos
int3
fwait
push
int3
inc
add
sarb
push
push
pusha
mov
adc
push
dec
dec
cmpsb
aad
lods
mov
mov
sbb
fldl2t
imul
das
sub
je
adcl
divl
daa
inc
outsb
jl
sti
cmp
adc
je
sub
jmp
jno
test
rcll
mov
cli
pop
divb
or
out
ficoms
sub
sbb
dec
cmp
daa
push
mov
sub
lods
xchg
jnp
sbb
stos
or
rcrb
and
cmp
insb
sbb
data16
and
fxch
stos
cltd
dec
or
mov
test
sbbl
cmpsl
adc
inc
ret
jno
push
lods
jecxz
fistpll
mov
mov
push
inc
leave
xchg
repnz
pushl
andl
dec
jno
or
ret
fldenv
fisubs
xchg
imul
lcall
and
shlb
adc
rcrl
hlt
pusha
dec
aad
add
dec
dec
outsb
jns
mov
lods
popa
sub
lret
stos
jp
andl
xor
out
xchg
sub
add
cli
sub
xor
push
loopne
sub
push
adc
mov
in
cmpsl
mov
mov
fldt
arpl
ror
mov
rcrl
arpl
inc
bound
in
inc
sbb
jns
adc
adc
xchg
les
pop
jg
mov
inc
ret
in
cli
lret
cmp
jo
cmp
enter
push
xchg
and
jo
mov
repz
aad
mov
aas
sub
xchg
out
cmpsl
add
push
mov
pop
jle
and
push
mov
sub
fnsave
roll
aad
enter
push
lcall
mov
inc
in
aad
fs
xchg
out
call
dec
iret
mov
xor
jb
jg
jno
das
mul
jl
out
mov
sub
jbe
mov
xlat
andb
sub
or
fcompl
mov
push
add
arpl
ficompl
rcrb
in
xor
xor
adc
push
or
mov
cmpsl
jl
push
jb
repnz
repnz
cmp
pop
cltd
out
xchg
test
pop
inc
sub
adc
orl
cmpsl
js
mov
lret
xor
add
repnz
fiadds
test
fcompl
xor
mov
sub
sub
les
lcall
insb
xchg
jg
lock
pop
add
aad
popl
movsl
inc
inc
and
fisubs
cld
rorl
jbe
or
adc
iret
repz
fbstp
aam
lock
and
mov
mov
dec
push
gs
jg
cmp
add
lret
icebp
lcall
mov
mov
fcomps
arpl
fdivl
add
inc
push
shlb
mov
jae
mov
mov
loop
out
es
adc
or
jne
mov
fidivs
daa
dec
jbe
ficompl
xchg
sti
lods
sub
xchg
mov
inc
dec
or
xchg
jg
add
fstpt
popa
xchg
inc
pop
mov
ret
inc
shll
mov
push
push
scas
gs
mov
xor
stos
shr
adc
icebp
xor
inc
adc
lea
jecxz
xchg
inc
add
mov
cs
int3
lds
inc
mov
push
aad
cltd
and
pop
adc
pusha
mov
clc
sub
cmp
imul
pop
jmp
in
fs
add
push
iret
scas
pop
mov
add
xor
scas
inc
jo
bound
or
and
mov
push
jecxz
mov
cld
add
cmp
mov
xchg
pusha
or
fcoml
mov
fwait
jmp
push
inc
js
cs
or
add
mov
pop
adc
lds
sbb
push
decb
mov
xchg
xchg
lret
cmp
mov
sub
push
movsl
fisttpll
ret
fiadds
sub
push
inc
aam
jp
mov
cmp
mov
imul
inc
jae
lret
repz
or
jnp
scas
negb
stos
push
pop
pop
pop
es
or
roll
lahf
mov
dec
pop
jp
pop
loopne
add
rolb
mov
cmpsb
xchg
push
lret
test
jecxz
mov
daa
pop
push
out
sub
dec
or
lds
mov
popa
mov
dec
addl
loop
insb
fmull
sti
cmpsb
daa
out
js
add
cmp
inc
imul
fistpl
pop
or
pop
or
imul
inc
or
mov
insl
add
mov
sti
loopne
adc
add
das
or
fldcw
movsl
in
xchg
cmp
fstpt
lods
mov
mov
jmp
jle
xchg
and
sub
mov
jbe
inc
testb
ss
add
and
popf
insb
mov
mov
pop
jns
xchg
push
mov
or
mov
repz
add
pop
cmpsb
pop
sbb
push
mov
cmpsb
pop
mov
inc
call
push
and
inc
fstl
aam
shl
mov
adc
cmp
pop
mov
fwait
inc
ficoms
inc
mov
mov
pop
jg
pusha
fisubs
mov
test
fildl
stos
adc
in
roll
and
mov
je
push
jl
jp
out
dec
in
mov
dec
sti
cmpsb
into
add
out
imul
sbb
mov
test
loopne
bnd
fistpll
dec
xor
adc
adc
cmp
sub
rorb
sub
icebp
jo
jmp
ss
repnz
push
sub
lret
shl
jmp
cmp
adc
mov
mov
pop
shrb
jae
movsb
repnz
xchg
mov
xchg
xlat
cmpsb
sub
inc
pop
out
pusha
mov
aam
jecxz
adc
sbb
mov
cmpsb
pop
adc
xchg
repz
test
or
or
jnp
dec
dec
or
fisttps
push
sub
sbb
xchg
lock
push
loop
sbb
push
mov
push
subl
mov
arpl
test
jg
mov
adc
sbb
cmp
and
or
lods
out
lcall
aam
mov
add
mov
cwtl
in
icebp
adc
nop
add
or
or
fcmove
pop
sbb
add
push
mov
nop
and
ret
mov
repnz
xor
lods
orl
cmpsb
daa
stc
daa
add
es
cmp
inc
icebp
adcb
pop
cltd
mov
dec
ss
cmpsb
mov
mov
ljmp
sub
mov
int
mov
jge
test
mov
add
leave
jne
imul
roll
or
dec
repnz
inc
mov
jns
iret
jno
pop
mov
push
mov
es
push
fldcw
and
sbb
enter
fs
gs
and
sub
pop
jg
popa
sbb
lea
cmp
jnp
insl
pop
or
iret
bound
jle
fldcw
dec
mov
ret
lcall
test
add
xchg
imul
daa
mov
inc
lods
push
jmp
mov
adc
cmpsb
cmpsb
fs
lcall
push
or
xchg
incl
push
sub
xor
xchg
and
in
stos
addl
leave
pushf
insb
nop
adc
pop
and
insb
repz
into
cli
adc
ret
push
lods
xchg
pop
jl,pn
or
push
jg
cmp
push
jno
jp
aas
mov
jbe
pushf
xorb
add
add
cmpsb
psrld
aam
sub
imul
xor
out
cmovb
cli
dec
lds
jmp
inc
shrl
out
pop
pop
mov
fdivs
jmp
xor
ret
jmp
mov
mov
adc
sub
movsl
xor
mov
daa
inc
ret
mov
and
out
adc
mov
ds
mov
pop
xchg
repz
popa
movsl
ret
jo
or
dec
aaa
sbb
ja
mov
nop
pop
push
ficoml
aad
mov
jbe
dec
xchg
loopne
mov
and
test
dec
dec
inc
cld
imul
mov
lret
loopne
fisubs
pop
loope
mov
adc
into
dec
lcall
fbld
ss
daa
mov
flds
xchg
add
sub
inc
cltd
pop
and
xchg
sbb
pop
add
sub
mov
fsubrl
loopne
adc
sbb
xchg
or
lcall
pop
push
movw
or
add
adc
push
sub
lret
cmpsl
fisubrs
mov
fs
or
ffree
or
or
push
pushf
ret
adc
pushf
jne
lods
sub
cmp
ss
add
inc
enter
or
lea
dec
out
push
lret
or
mov
loop
push
test
push
aad
mov
jmp
leave
mov
or
mov
cmpsb
sbb
in
ja
dec
pop
inc
pop
aaa
jo
add
aam
jecxz
inc
vpmaxub
add
inc
push
in
arpl
xchg
jae
fdivrs
add
add
fs
rcll
mov
jae
mov
lret
stos
scas
push
pop
rol
cmc
xchg
cmp
hlt
inc
mov
jp
fidivrl
cmpb
fistpll
cld
movsl
adc
decb
jle
gs
dec
test
push
push
in
repz
pop
daa
jo
inc
xor
jnp
mov
xchg
push
into
lds
pop
adc
cltd
mov
into
into
gs
inc
mov
inc
rorb
mov
xchg
aaa
fiaddl
cmp
xchg
into
andl
and
and
inc
xchg
sub
xchg
mov
filds
insb
lods
movsb
sub
or
pinsrw
add
push
ret
lahf
or
outsl
jno
inc
inc
inc
into
or
mov
cmc
fs
das
and
sub
pop
jb
mov
jbe
ret
xor
xchg
sub
insb
jle
cli
lcall
fbstp
push
add
dec
and
cmpsl
add
and
add
lds
pop
add
stos
ret
aas
pushf
sbb
flds
cmp
inc
and
sbb
mov
cwtl
sub
ret
movsb
dec
es
loop
sub
fmull
mov
pop
inc
xchg
loop
out
test
ret
aas
lcall
insl
aaa
movsl
or
cltd
out
sub
imul
push
lret
dec
xchg
push
inc
out
pop
jo
insl
hlt
addr16
bound
test
mov
inc
lds
fnsave
pop
popa
jo
test
arpl
lock
push
pushf
cli
lods
shr
sub
inc
sub
mov
inc
adc
mov
dec
jo
popa
popf
out
jmp
pop
loop
subb
and
sbb
movhlps
mov
sbb
shll
push
dec
movl
popa
insb
jo
xor
jg
lret
lahf
popa
int3
dec
aad
aaa
or
sarb
stc
xor
js
testb
cmpb
daa
pusha
into
or
mov
xchg
cli
push
and
pop
lahf
call
inc
mov
shlb
push
push
jns
hlt
inc
ret
sub
adc
sub
mov
or
lods
lret
roll
pop
out
cwtl
pop
pop
xchg
stos
pop
lret
dec
loopne
insb
add
lods
cmp
cld
fsubl
cld
adc
push
dec
shl
push
lret
out
loopne
je
adc
insb
ror
inc
sub
data16
cmpsl
pop
enter
es
sub
or
stos
in
inc
add
test
adcb
orl
icebp
stc
pop
mov
add
cwtl
jg
and
mov
mov
mov
push
xchg
outsb
pop
sub
mov
jecxz
xchg
scas
daa
cmp
imul
leave
mov
aaa
lods
cltd
dec
ret
sbb
mov
xchg
xchg
les
aam
push
nop
int3
sbb
lods
jbe
inc
clc
push
adc
icebp
insb
daa
inc
jno
inc
add
loopw
fstpl
pop
fsubrl
scas
jb
xorb
movb
mov
dec
pop
cmp
lret
int
fidivrs
bt
dec
mov
shl
ljmp
mov
push
cpuid
bound
cs
jne
nop
inc
mov
lret
ret
loopne
lret
jns
inc
decb
mov
adc
xchg
adc
push
mov
and
in
loope
jmp
jne
adc
pop
jo
je
or
adc
fdivrp
cmp
mov
cwtl
leave
mov
pop
xor
xchg
inc
push
data16
adc
movsb
mov
xor
sbb
movsb
out
sub
mov
xchg
xor
and
repz
xorb
inc
xchg
in
xor
andl
add
xor
jge
xchg
out
mov
ret
and
inc
lret
test
sbb
xchg
mov
mov
adc
add
pop
lret
fwait
adc
jp
dec
ret
and
aas
fdiv
inc
add
and
sbb
ret
hlt
shlb
aas
mov
cmp
into
pushf
cmp
mov
dec
inc
sbb
sbb
dec
mov
lea
jns
push
call
stos
push
lods
jp
push
sub
or
sub
mov
xchg
jno
push
scas
push
jo
hlt
ret
or
pop
or
mov
in
lahf
fsubrl
fisubs
ljmp
push
add
loopne
pop
rcrl
lea
cmp
and
jb
and
popa
ljmp
lcall
adcb
add
imul
push
cmpsl
pop
inc
mov
lea
shll
mov
inc
fnstsw
scas
xlat
in
in
mov
ljmp
adc
jno
mov
mov
mov
hlt
sbb
jbe
jl
or
xchg
mov
repz
shrl
lahf
add
andb
push
lret
lods
negl
mov
movsb
xor
sbb
jle
inc
shr
jns
dec
cwtl
dec
push
fmull
mov
cli
push
pop
dec
out
out
jmp
or
sbb
enter
faddl
adc
es
xchg
cli
movsb
in
mov
lret
mov
cmp
sub
push
aas
shr
int
clc
sbb
stos
or
cli
push
gs
int
fcoml
jo
mov
pop
imul
jne
fdivs
mov
enter
push
push
sbb
into
mov
repz
fdivr
xchg
push
adc
xchg
pop
mov
lret
sub
pop
jo
sbb
and
push
cld
popa
and
into
pop
inc
or
mov
in
push
sbb
inc
mov
push
add
push
xor
daa
jg
cmp
incb
jb
lods
jbe
sub
fmulp
mov
jmp
jns
mov
push
mov
fucomi
jmp
fists
jae
pop
xchg
pop
xchg
pusha
jb
and
cli
ret
dec
repnz
sub
rcrl
or
in
gs
fisttpll
lods
mov
pop
fmul
int
jae
pop
jns
sbb
cmp
dec
add
int3
add
loopne
mov
pop
test
and
in
xor
pusha
push
mov
subb
push
test
cs
and
or
mov
inc
lret
inc
xorl
aam
in
dec
and
mov
inc
cmp
push
fdivrl
in
lret
add
mov
sub
pop
sbb
aaa
add
jnp
in
push
je
call
push
es
sbb
dec
andb
data16
flds
inc
aad
adc
push
fstp
jge
xor
or
rol
pop
jae
cltd
pop
push
lahf
sbb
and
gs
movsl
fisubrl
scas
out
jmp
push
loopne
xor
loopne
int3
or
dec
jmp
pop
inc
add
lret
fdiv
cmp
mov
inc
cmpsb
push
jo
ljmp
push
sbb
cmovb
stos
fcoml
in
addl
sub
cli
push
bound
ret
aas
lds
cmpsl
sub
rolb
fldenv
mov
push
push
xchg
pop
inc
push
cltd
push
xlat
lret
or
mov
call
lahf
pop
sti
sbb
inc
loop
pop
es
frstor
inc
jl
jnp
push
insb
and
pop
sub
add
arpl
xlat
fcomi
sub
xchg
mov
repnz
mov
add
in
mov
adc
jb
cmpl
js
pop
pop
add
push
nop
pop
inc
cmp
cltd
stos
mov
movl
jecxz
jae
subb
xchg
push
cmpsl
repnz
cld
dec
or
mov
jno
mov
sbb
mov
outsl
jne
xchg
and
xchg
cmp
mov
movsb
cmpb
ret
add
jmp
movsl
sarl
movsl
ret
mov
push
inc
adc
mov
mov
in
or
fs
loop
inc
sub
imul
dec
jmp
das
insl
pusha
mov
outsb
mov
insl
xor
notl
mov
sahf
jge
jo
and
pop
mov
inc
mov
inc
xchg
push
mov
das
out
adc
pushf
dec
dec
fimull
mov
xchg
cmpsb
xchg
mov
mov
dec
mov
jmp
incb
lahf
push
addr16
inc
aas
xor
stos
inc
cmp
mov
add
pop
jnp
imul
into
jae
lds
fisubl
adc
and
ret
test
ret
pop
inc
mov
dec
mov
lahf
pop
shr
daa
mov
pushf
or
xchg
adc
sahf
jbe
rol
mov
push
sbb
aaa
or
jbe
mov
dec
add
and
adc
jae
sbb
push
fldenv
jmp
lret
mov
jno
decb
xor
pop
aaa
insw
jle
in
xchg
js
lea
loop
shrb
les
xchg
and
ret
cmc
mov
in
loop
cmp
out
and
sbb
mov
test
loop
out
shl
dec
in
loop
add
inc
push
dec
mov
shll
les
xor
imul
arpl
into
outsb
ret
mov
dec
hlt
loop
jmp
repnz
out
loopne
shl
add
or
addl
mov
aam
loopne
inc
add
xorl
add
cs
push
jns
gs
push
pop
dec
test
rorb
icebp
js
loop
mov
or
ret
gs
stc
add
xchg
int3
or
cmp
or
and
ret
loop
cmpsb
cmp
jge
iret
dec
out
xor
jmp
int3
sbb
in
loop
ret
inc
inc
int
lret
xor
cmp
push
or
xchg
loop
es
jecxz
push
push
shlb
cltd
xlat
cmp
imul
push
loop
mov
xor
jecxz
ret
leave
jecxz
repz
and
jecxz
loop
push
lock
inc
rorl
jmp
pop
loop
loop
mov
fadds
outsb
cltd
fdivp
dec
pop
push
mov
mov
js
loopne
add
lret
dec
or
add
in
bound
xchg
push
lds
sbbb
shl
mov
and
ret
dec
cmp
pop
lret
or
sbb
inc
inc
jecxz
push
scas
push
add
and
add
cmc
pop
clc
pop
std
hlt
out
add
cmpsl
mov
or
mov
or
lds
fucomip
js
cmpb
int
leave
or
add
ret
lcall
loop
inc
repz
sahf
jecxz
push
and
inc
loop
dec
aam
loop
repnz
sbb
pop
call
cmc
add
fwait
or
inc
pop
mov
loopne
inc
out
in
outsb
xchg
enter
fiaddl
jle
les
lcall
jo
pop
or
lods
loop
inc
repz
xchg
fadds
xor
lods
push
ret
mov
cmp
xchg
push
loop
in
or
sarb
xchg
in
jecxz
repnz
icebp
jl
iret
test
fld
xor
mov
in
int
sub
mov
outsb
daa
in
dec
pop
stc
ret
pop
lret
dec
ret
ljmp
push
ret
mov
mov
ret
jecxz
mov
lds
cli
dec
mov
inc
mov
ror
lods
lcall
or
cmpsl
mov
pop
mov
ret
in
in
adc
sahf
dec
fcomps
ja
push
in
lahf
jecxz
jl
push
jp
call
push
sub
and
or
adc
xchg
loop
scas
leave
popf
jne
push
mov
ficoms
dec
xchg
aam
sub
inc
stos
sub
in
push
cli
push
addl
imulb
xor
enter
sub
xchg
pop
les
mov
jne
or
aad
jmp
out
jmp
iret
loop
push
in
or
imul
insl
out
jnp
lds
mov
rol
rcrb
adc
lret
inc
cmpsl
add
jecxz
lods
nop
fmul
icebp
pop
sub
lds
and
fisttpl
rcrb
scas
popa
inc
data16
rcrb
fmuls
jne
inc
lahf
push
push
ret
je
lret
mov
insl
in
out
ret
rcll
int3
repz
or
xchg
dec
or
in
loop
repnz
inc
push
aam
mov
jb
xor
ret
push
dec
out
push
in
or
fstps
pop
xchg
stc
loop
or
les
imul
mov
jge
mov
ds
pop
xlat
dec
outsl
int3
adc
dec
iret
stc
loop
shr
lds
adc
mov
popa
xor
lds
out
push
loope
and
and
inc
xchg
push
sbb
loop
inc
cld
cmpsl
loop
insl
stos
dec
inc
out
sub
jl
in
pop
loop
hlt
in
pop
loop
dec
push
test
cs
stc
mov
cmpsb
sub
lods
jecxz
xor
jecxz
loop
add
xchg
xchg
aas
aad
loop
in
movsl
jecxz
cmp
jge
rclb
or
ret
inc
outsl
popa
or
sbb
leave
ret
pop
into
mov
jns
cmp
arpl
gs
in
and
xor
cmpb
out
inc
fmull
xor
jo
cmpsb
cwtl
push
sbb
rolb
mov
pop
mov
mov
add
mov
mov
or
pop
mov
push
or
lea
mov
cld
fwait
mov
data16
fiadds
add
cmp
xor
lret
into
push
punpcklwd
sbb
dec
stos
and
cmc
fmul
lods
or
test
inc
or
xchg
add
mov
aas
and
push
nop
pop
push
sbb
popa
mov
push
jne
sub
inc
sub
xchg
push
in
add
jle
and
xchg
mov
sbb
add
loope
inc
outsl
or
jo
dec
das
in
add
pop
imul
fmul
adc
mov
dec
fisubl
fnstcw
and
mov
in
or
imul
dec
cmp
jecxz
in
and
push
lret
insb
inc
and
repnz
sbbb
push
je
push
mov
push
aad
loope
and
xor
inc
push
repz
daa
and
jo
mov
in
rorb
cmpsb
jbe
fwait
jge
nop
mov
sbb
aaa
mov
push
add
jnp
addb
xchg
pop
aas
sbb
cmp
pop
notl
mov
sub
add
out
adc
insb
pop
jne
and
les
mov
lods
mov
pcmpeqw
jno
sub
push
jecxz
hlt
add
jo
mov
mov
stc
jo
lods
or
daa
in
pusha
sahf
out
push
cmp
icebp
test
add
mov
imul
push
int
sub
ja
xor
pop
cmovae
sub
popa
push
push
mov
daa
out
js
ret
jo
fdiv
or
ffreep
cli
repnz
pop
ljmp
pop
add
mov
leave
mov
addr16
cmp
fstl
test
imul
add
push
mov
xchg
inc
getsec
in
lret
sub
pop
inc
sbb
push
int3
outsl
push
mov
outsb
fdivp
pop
mov
jne
int3
lret
jge
sub
inc
push
sbb
mov
ret
pop
add
fst
mov
adc
addr16
dec
mov
inc
mov
jno
xchg
pop
in
loopne
test
or
mov
push
push
lret
inc
mov
leave
mov
cmp
ret
popl
call
inc
xchg
lods
ljmp
push
adc
xchg
movsb
aaa
pop
test
lret
push
sbb
dec
jo
pop
sub
int3
in
push
aas
es
leave
lret
hlt
add
and
add
jmp
adc
cmp
les
lea
sub
mov
pop
aam
vmread
lcall
es
sub
int
add
lods
fimuls
push
lret
test
and
sbb
jmp
dec
in
push
test
cmpl
inc
dec
addb
xchg
and
cltd
sbb
imull
inc
cmpsl
dec
and
or
inc
test
xchg
mov
push
pop
hlt
and
xor
int
sbb
in
pop
jne
lret
push
jae
dec
leave
int3
or
xchg
inc
jo
test
andl
and
push
scas
sub
lods
cmovnp
add
aam
movsb
mov
mov
jl
push
les
ret
rcr
mov
lods
mov
js
mov
stc
lret
push
dec
or
cli
add
and
push
and
rcrb
ds
test
xchg
mov
mov
mov
add
xor
push
push
lret
cld
in
pop
in
jo
enter
pop
mov
repnz
jae
mov
adc
mov
ret
xchg
int3
mov
push
mov
fisubs
popa
les
fisubrs
adc
fcmovb
mov
sarb
cmp
pop
ja
jl
mov
mov
mov
inc
pop
clc
xchg
adc
xor
add
mov
nop
movsl
fcmovu
fcomip
sbb
scas
hlt
rorb
cmpb
dec
cmc
std
mov
cli
push
lret
cli
lret
jbe
sbb
mov
jg
ljmp
out
or
rol
cmp
and
nop
scas
push
mov
pop
jge
pop
and
adc
lret
jecxz
cld
mov
adc
das
adc
inc
mov
fimull
ja
adc
neg
mov
enter
jno
pop
jmp
lock
lods
adc
test
or
out
cmp
push
out
aaa
sub
push
lret
mov
lret
push
sub
imul
jecxz
call
xor
pop
pusha
mov
imul
call
jae
xchg
repnz
push
iret
jle
dec
xchg
fdivr
xchg
popf
sbb
dec
pushf
pushf
push
mov
test
jo
push
xor
push
add
enter
jg
cmovae
hlt
in
rolb
xchg
inc
sub
fldt
stos
push
sbb
pop
cmp
scas
out
xor
test
cli
add
lods
out
bound
xchg
ds
push
cld
incb
aas
mov
xor
dec
mov
popa
xor
push
les
mov
aam
jl
dec
xchg
push
test
dec
xchg
inc
inc
xchg
dec
sub
xor
jmp
mov
divl
xchg
mov
sbb
sbb
cmp
icebp
jno
push
inc
jne
ja
xchg
sahf
fildl
nop
fildll
pop
fisttpll
jnp
rol
dec
mov
idivb
jle
pop
sbb
sbb
mov
repnz
push
gs
xchg
test
incb
and
int
pextrw
push
into
scas
inc
cmc
cwtl
push
imul
sbb
cld
testb
push
mov
inc
shr
mov
add
pop
jnp,pt
push
add
popa
xor
loop
cli
loope
call
xchg
pop
xor
add
fsubp
push
dec
mov
and
add
loopne
and
cmp
data16
aad
mov
popa
mov
and
dec
pop
std
inc
mov
pop
in
stos
fadds
inc
rep
repnz
adc
push
mov
fsubl
mov
sub
mov
inc
push
jmp
cmc
pop
fisubs
jecxz
adc
xchg
in
push
ret
dec
sub
out
stc
cmp
sub
into
mov
fwait
outsb
and
in
call
je
inc
adc
data16
and
rcrw
sub
and
in
push
int3
scas
or
sti
xchg
pop
jp
cltd
popf
mov
cmp
lea
dec
ret
rcll
imul
fidivrl
or
daa
mov
jo
sub
jmp
xchg
mov
push
hlt
or
push
int
inc
rorl
scas
out
pop
adc
adc
push
mov
jbe
jmp
data16
mov
sub
ret
push
cmpsb
ret
loopne
popa
lock
adc
std
dec
inc
and
adc
inc
add
stc
mov
loope
dec
lods
into
jmp
cmpsl
shl
cmpb
rolb
dec
pop
in
movsb
mov
daa
sub
in
lods
enter
ret
lret
repnz
fiadds
push
xor
in
mov
je
mov
inc
sbb
sub
xor
fldz
mov
push
rol
cmpsb
inc
mov
add
icebp
lods
jecxz
je
std
movsb
sub
lret
sub
jne
test
xchg
imul
sti
sub
xchg
xor
pop
and
sub
pop
push
lret
adc
cs
incb
push
jno
add
aas
inc
xchg
in
add
rcrl
sahf
call
sub
into
shl
cmp
and
adcb
sub
sahf
into
lea
incb
or
clc
int
sbb
cmp
cmp
out
outsl
mov
and
and
shll
cmp
mov
iret
bound
pop
mov
fldt
mov
daa
inc
into
pop
stos
dec
or
shrb
inc
cli
fstl
movsb
add
into
fwait
hlt
and
jle
in
pop
or
cmp
shrl
out
mov
scas
rcll
sbb
in
shll
imul
lret
lock
cmc
arpl
ficomps
jae
ret
ficompl
push
mov
xchg
in
lret
insb
dec
add
inc
or
xchg
sbb
loop
ret
and
sub
lods
lcall
ficomps
adc
rcrb
and
inc
add
add
lods
mov
cmpsl
jo
mov
es
movsb
mov
popa
or
add
pop
push
cmp
jae
sbb
sti
push
pop
xor
int
repnz
jp
or
sbb
inc
lret
wbinvd
push
out
mov
iret
ret
lods
mov
pop
and
push
das
lea
and
outsb
xchg
pop
push
mov
jbe
pushf
call
pop
fwait
shrb
inc
and
int3
dec
loop
adc
ror
xchg
push
dec
into
bound
dec
insl
fcomp
cmpsl
mov
movsl
cmp
mov
mov
and
jecxz
cmpsb
xor
xchg
mov
jmp
imul
pushf
sub
sub
into
adc
xor
inc
stos
jp
sub
sbb
push
je
inc
sub
aad
or
lahf
sbb
or
push
inc
lds
lcall
push
or
out
test
inc
fists
lret
add
mov
insl
fisttpll
push
iret
and
int3
cli
push
push
es
inc
mov
mov
cmp
jge
xor
push
cmpsl
add
mov
cs
or
push
inc
insb
fdiv
popf
fidivrs
je
jl
mov
inc
pop
ss
pop
ficoms
fiaddl
neg
jp
cmpsl
mov
push
das
call
adc
sbb
and
shlb
adc
mov
pop
insl
xabort
lret
inc
fidivrs
sbb
inc
inc
push
bound
mov
add
fldt
adc
xchg
imul
popa
stc
sbb
aaa
sbb
lds
pop
xlat
xchg
outsw
call
or
inc
adc
rclb
mov
sahf
int3
imul
stos
cmpl
js
inc
xor
mulb
push
and
dec
jecxz
push
mov
sbb
mov
jl
xchg
fldl
mov
mov
inc
add
or
popf
andl
int3
adc
dec
mov
cmp
out
xchg
popaw
inc
das
add
in
sub
mov
jp
lahf
jnp
dec
add
push
or
pop
sahf
inc
push
std
insl
bound
xchg
xchg
loope
dec
inc
inc
fucom
ret
lock
test
fmul
sbb
or
shll
out
jl
sbb
jp
dec
sbb
dec
cmp
movsb
xchg
shll
les
or
aam
jmp
data16
add
adc
aam
insl
dec
push
pop
cmp
fisubrl
mov
out
lcall
inc
mov
mov
sub
and
insb
pop
cwtl
jmp
aaa
cmp
or
arpl
dec
inc
xor
dec
pushf
stc
or
ret
xor
out
push
mov
test
fs
lret
sub
ja
inc
inc
lods
jb
lods
or
cmpsl
and
aaa
push
sbb
mov
dec
fmull
jp
test
sub
hlt
fiadds
loopne
push
dec
inc
pop
js
ret
pop
sub
xorb
add
ficoml
push
ficoms
stc
js
loope
push
sbb
cmc
and
jbe
mov
mov
aas
icebp
xchg
jge
jbe
mov
test
inc
test
add
ret
gs
inc
inc
ret
pusha
outsl
xor
shrl
jb
cmp
lcall
jne
cmpsb
pop
lahf
dec
mov
mov
es
push
sbb
icebp
test
jb
jle
xchg
es
bound
add
dec
shlb
in
ret
out
aaa
and
movsl
cmpsl
in
gs
mull
je
arpl
or
pop
pop
mov
mov
in
addb
mov
cmpsl
insb
movsb
jns
shlb
or
lcall
mov
test
push
push
ret
ror
mov
jno
movsl
adc
test
mov
jns
outsb
push
pop
addr16
inc
push
pop
push
jbe
ret
fnop
pusha
jo
js
stos
xor
jno
cmp
pop
sub
popa
cmp
push
fistpl
inc
pop
test
xchg
repz
dec
data16
inc
sbb
inc
mov
lods
icebp
mov
pop
daa
vpunpckhbw
adc
jae
leave
inc
aas
pop
lret
mov
and
jl
mov
insl
cmp
xor
push
lods
push
lret
cltd
sahf
cmpsl
sub
daa
shl
add
cmpps
push
sub
test
cmpsb
and
push
sub
into
aam
sub
inc
insl
aas
xchg
ja
pushf
inc
adc
push
inc
xchg
and
jo
dec
xchg
push
cli
popf
addr16
mov
outsb
imul
enter
lods
mov
loopne
stc
and
jbe
js
fistpll
and
aas
pop
jo
inc
add
ljmp
inc
push
jge
dec
sbb
mov
cmp
lds
stos
fistps
fsubs
icebp
in
mov
sbb
inc
subb
aad
cmovl
pushf
push
popa
jo
push
fstps
and
dec
lods
dec
aad
scas
dec
imul
mov
es
fidivrs
ret
adc
jp
insb
pop
jle
and
ljmp
mov
test
mov
dec
in
je
fcmove
ljmp
xor
in
mov
fidivrl
pop
in
pop
push
and
mov
mov
data16
cltd
add
xchg
cmp
in
fcompl
shld
in
jbe
imul
aam
push
dec
dec
fstl
jge
or
enter
leave
leave
adc
jns
and
stc
ret
fsubl
add
jbe
ds
mov
in
push
adc
mov
mov
mov
mov
lds
mov
outsb
arpl
push
mov
cmp
in
cld
fldcw
add
jge
aas
push
push
jbe
jmp
test
mov
fidivrs
sub
cmp
stos
lcall
in
xor
push
xchg
call
fldenv
in
fstl
pop
fiadds
adc
xchg
mov
add
fisubs
fwait
data16
rorl
scas
mov
push
sub
ficomps
mov
push
iret
xchg
inc
jb
push
add
add
xchg
out
and
pop
es
sbb
stos
add
and
mov
lret
jg
sub
mov
and
push
addr16
add
popf
xchg
lret
push
sub
add
jo
jns
lea
pop
xorb
cld
inc
inc
loopne
jbe
pop
xchg
sub
inc
adc
cmp
fisubrs
dec
mov
or
lcall
shll
ss
add
fs
sti
fmull
push
sub
inc
sbb
dec
and
adc
out
inc
jecxz
push
jmp
add
in
repnz
or
and
aas
leave
fimuls
mov
enter
and
xor
mov
out
out
mov
ljmp
repnz
cli
sub
jp
sar
lret
repz
dec
and
push
pop
add
jo
pop
in
lret
ds
pushl
or
leave
fidivrl
cmp
fistps
dec
push
fldl
lds
inc
mov
or
adc
jns
mov
xchg
adc
cmpsb
sub
or
add
in
push
mov
pop
fisubs
daa
enter
cmpsb
subb
adc
add
sbb
jl
cmc
jbe
dec
test
inc
daa
fisttpl
call
aaa
jmp
sub
add
lret
or
pop
stos
repnz
push
dec
mov
mov
inc
cwtl
shlb
daa
push
sub
imul
repz
ret
and
mov
pop
mov
fidivs
fcomps
push
push
mov
stos
push
pop
stos
clc
shr
pop
sbb
lock
or
push
aas
fisubrs
cmp
cli
jmp
mov
or
sub
jg
test
mov
lret
movsl
mov
fnstenv
mov
mov
and
bound
inc
in
ss
dec
mov
add
adc
aad
js
test
cmp
dec
mov
jne
mov
popa
std
aas
jle
pop
push
je
mov
push
push
sbb
push
daa
xchg
inc
jmp
pop
cli
fucom
jne
arpl
pop
xorl
ret
clc
pop
sub
dec
test
jg
and
mov
sbb
jl
mov
stos
or
fiaddl
pop
out
inc
sub
mov
shlb
xchg
push
adc
pop
mov
inc
sbbb
add
mov
or
lds
jne
dec
mov
ds
fnstenv
popa
mov
pop
jns
sahf
lret
mov
inc
jo
mov
lret
sub
test
mov
cmpsl
push
push
jne
mov
popa
xor
data16
jl
push
fsub
imul
push
and
pusha
or
xchg
fiaddl
dec
testl
or
lahf
int3
sub
push
loopne
popa
out
lock
ret
dec
shrb
test
inc
push
dec
dec
into
cmpsb
adc
and
andb
out
xchg
mov
mov
mov
ret
clc
cmp
mov
fidivrl
fbstp
mov
mov
loop
mov
loope
mov
enter
movsb
fidivs
pop
mov
mov
mov
clc
jecxz
lret
dec
push
jb
dec
out
jg
jmp
mov
push
push
repz
bound
and
adc
dec
ret
fiaddl
ljmp
bnd
bound
dec
jo
outsb
and
imul
push
andb
pusha
inc
scas
es
lret
out
sbb
and
push
push
inc
sub
cs
cwtl
ret
sar
pushf
xchg
lds
mov
mov
shlb
int3
rcll
loopne
ret
mov
mov
jecxz
jno
add
push
inc
jb
add
inc
mov
dec
sti
fs
insb
or
inc
xor
sub
sbb
insl
mov
ret
popa
into
sahf
xchg
ret
lahf
sti
push
mov
push
lods
sub
lods
pop
test
mov
mov
aas
dec
lahf
daa
stos
lock
test
shlb
fs
or
add
inc
je
fdivrp
xchg
and
addr16
cmp
xlat
dec
xchg
push
in
xor
adc
sahf
inc
das
add
rcrb
test
jbe
cwtl
fcmovnb
add
popa
xchg
cmp
jp
or
mov
dec
movsb
push
xor
jnp
jnp
pop
and
repz
mov
pop
push
sbb
adc
push
stos
sub
dec
xor
mov
das
jmp
jecxz
inc
ret
cmc
jecxz
or
ss
cmc
aam
inc
es
in
jae
loop
push
hlt
mov
shrb
clc
js
mov
sub
push
out
lds
inc
les
rcll
and
loop
xor
lods
pop
or
dec
jg
xchg
cmpsb
shll
add
push
mov
cli
out
ljmp
inc
sti
hlt
inc
mov
jp
mov
xchg
jno
enter
xchg
je
sbb
sbb
inc
or
inc
inc
dec
mov
adc
ret
mov
jge
jno
or
lea
inc
adc
scas
xor
adc
stos
dec
mov
clc
sbb
lds
aam
out
inc
arpl
fnclex
or
xchg
mov
notb
inc
push
fisttps
push
in
sub
lds
pop
sbb
inc
cwtl
mov
pushf
jns
lret
flds
adc
mov
push
pop
popa
ret
mov
sbb
lret
xor
xchg
push
aam
rcrb
xchg
push
rcl
inc
or
xchg
inc
jl
xlat
mov
leave
out
xchg
add
pop
pop
loope
lds
sub
stos
ret
pop
mov
addr16
rol
fldenv
sub
bndldx
inc
push
test
mov
lock
test
jae
popf
pop
ret
test
jecxz
and
pop
adcl
daa
mov
dec
push
fwait
push
or
pusha
xchg
out
lret
add
insl
shrb
nop
push
inc
rolb
mov
push
sub
stos
clc
jle
jb
in
lods
add
shlb
add
inc
jbe
cmp
inc
xlat
fisttpl
pushl
and
imul
stos
adc
cmp
movb
xor
adc
push
fsubrl
negb
xor
fcmovu
xor
mov
aaa
icebp
xor
pop
xchg
out
orl
xor
cmc
push
rcr
xchg
lahf
and
push
icebp
outsl
fs
add
cs
in
roll
les
stc
sbb
in
pop
mov
add
mov
cmp
faddl
int3
repnz
sbb
dec
push
mov
sbb
inc
and
dec
inc
scas
adc
sub
and
pop
hlt
movsb
sti
lods
adc
hlt
xor
filds
cmp
jle
movsb
dec
push
jge
jae
inc
mov
cmpsb
sub
xor
mov
inc
dec
rorb
sub
lahf
pusha
inc
push
cmp
push
cmp
add
sbb
mov
nop
push
es
out
insl
idivl
inc
or
pop
or
jecxz
xchg
dec
sbb
icebp
xchg
stos
filds
shll
mov
pushf
lea
jbe
push
clc
out
daa
cmp
lcall
or
pusha
faddl
sub
dec
cmc
ja
mov
mov
fmul
pushf
ljmp
cmp
jae
lahf
xor
adc
or
mov
loope
add
sbb
data16
jno
or
pop
push
mov
mov
cld
cmpsl
in
push
testl
inc
out
add
sub
inc
arpl
xlat
dec
in
stc
scas
pop
bound
inc
xchg
push
jecxz
data16
push
rclb
loope
fidivrs
sub
mov
inc
jne
cmpsl
xchg
out
xchg
push
mov
and
cmpsl
xor
sbb
icebp
ret
shll
shlb
leave
flds
insb
xchg
push
dec
js
dec
jmp
jb
mov
jecxz
mov
push
out
es
jo
or
add
inc
jbe
aas
into
loopne
fs
xchg
lret
cmp
push
pop
pop
sbb
into
add
insb
call
jns
loop
insl
popf
roll
aas
enter
adcb
jne
test
dec
fisttps
repnz
pop
fistl
insl
mov
movb
add
sbb
das
fistpl
lret
xchg
sbbb
out
int
insb
call
xor
xchg
fisttps
push
ds
push
mov
addl
inc
push
mov
mov
push
les
fsub
mov
inc
inc
pop
cmovle
popa
call
sub
push
lcall
push
and
lret
inc
lds
lods
repnz
mov
shl
int3
lret
aas
mov
out
adc
jmp
jae
sub
jb
adc
mov
fcoml
roll
xor
ret
loopne
mov
loop
xchg
test
daa
scas
or
fistps
in
inc
xor
stos
and
ss
or
add
or
ret
popa
mov
lods
push
pusha
or
in
cld
andb
adc
xor
add
dec
cs
fsubs
hlt
xchg
push
mov
ja
insb
aam
je
pop
cmpb
ss
xchg
xor
pop
pop
push
ret
das
in
sbb
adc
pop
test
addr16
je
aas
mov
sbb
ret
lock
dec
ret
frstor
pop
pushf
std
in
add
pop
lods
int3
rcr
or
shrb
ret
mov
sbb
outsb
stos
iret
xchg
pop
jecxz
pop
push
push
call
or
mov
adc
pop
fdivs
fildl
arpl
sub
iret
jb
test
push
and
sahf
xor
xlat
sbbb
sbb
pop
dec
insb
cld
push
push
ret
ror
adc
popaw
add
inc
and
mov
lret
out
add
iret
push
push
arpl
inc
es
orb
inc
inc
inc
loopne
ret
in
inc
rol
ret
popa
lds
les
adc
pop
mov
stc
bound
lret
rolb
pop
dec
mov
data16
orl
mov
jo
ficomps
lret
test
or
dec
inc
lods
div
push
punpckldq
in
dec
loop
rcl
and
inc
pop
in
push
in
inc
jbe
inc
mov
sub
sub
cmp
mov
insb
cmc
dec
pop
pextrw
das
hlt
cmpsl
adc
xorb
movsl
pop
repnz
push
mov
add
lods
push
jge
fimuls
pop
xchg
mov
or
xchg
pusha
xorl
xor
lods
lods
or
jmp
inc
popa
mov
adc
dec
imul
dec
stos
jmp
inc
data16
lret
rcll
mov
or
imul
arpl
pop
inc
pop
push
add
and
mov
dec
sbb
sbb
mov
sub
rcr
jnp
jmp
push
repnz
push
scas
popa
stos
sub
add
cmp
repnz
and
inc
lods
push
loope
pop
inc
hlt
xchg
inc
or
pop
inc
pop
lret
push
movsb
adc
or
xchg
in
cmp
shl
imul
fisttps
bound
push
movsb
fidivrs
jl
pop
pop
pushf
and
ja
push
icebp
pop
add
sub
jae
into
cmp
pop
test
fsubl
push
and
push
mov
icebp
and
inc
pop
adc
xor
or
ret
xchg
pop
xchg
std
pop
inc
mov
insb
adc
orl
mov
les
mov
shl
cli
int3
aad
ret
mov
stos
jae
add
pop
out
add
or
scas
cmove
push
push
lock
addb
data16
sbb
cld
mov
inc
inc
cwtl
iret
pop
xchg
je
pop
mov
lcall
pop
test
repz
pop
ja
dec
fbld
loopne
out
dec
fmulp
inc
xor
xor
out
scas
mov
mov
addr16
jmp
adc
loop
mov
je
mov
add
out
sbb
sbb
fdivp
push
cmp
fcompl
lods
nop
sbb
dec
pop
loope
xchg
pop
add
mov
enter
mov
add
jge
aad
xor
inc
xor
pinsrw
lods
popa
xchg
clc
mov
sbb
out
adc
xchg
movsb
push
repz
add
cli
cltd
inc
clc
pop
sub
adc
and
mov
test
dec
fdivrs
or
dec
cmp
inc
mov
xchg
pop
test
xor
push
mov
mov
mov
cli
orl
mov
jne
mov
xchg
or
jae
les
stos
dec
je
sbb
insl
jno
dec
mov
mov
mov
pop
inc
addb
sahf
es
sbb
jmp
jecxz
push
les
pop
scas
in
jecxz
mov
stos
fcmovb
sti
les
push
int
lret
push
fdivrl
into
out
fsubl
xor
fmuls
pusha
fldcw
inc
jge
jo
jae
jg
lods
call
inc
jp
xor
rorl
push
xchg
sub
push
es
inc
sub
dec
mov
daa
jo
lret
mov
pop
sbb
insb
fdivrs
inc
repnz
insl
jns
imul
lods
bound
and
stos
jl
inc
out
and
inc
fstpt
xchg
jbe
lods
js
inc
jg
dec
dec
out
cmp
push
add
and
add
ret
mov
lods
pop
fiadds
sub
fwait
aaa
dec
add
adc
xchg
inc
inc
or
enter
or
lods
mov
push
mov
rol
fistps
movsb
dec
ret
movb
in
lcall
nop
jae
cltd
in
ret
sarl
push
jne
cmpsb
aaa
sbb
dec
call
outsb
ss
dec
or
fdivl
insb
or
add
inc
add
and
xchg
stos
pop
hlt
mov
adc
fbstp
cmp
jb
jecxz
fiaddl
inc
cmpl
pop
add
loop
jle
dec
in
sbbl
or
dec
xor
aad
dec
jbe
xlat
or
adc
xor
lods
sub
xchg
std
int3
daa
add
pop
fsubl
out
cmpsb
sbb
fisttpl
cmc
enter
call
aad
hlt
sub
ret
xchg
push
clc
xor
ds
sti
sbb
inc
call
push
mov
call
jnp
add
cmp
popa
and
sub
mov
repnz
pop
or
or
xor
cmp
cmp
out
inc
push
xchg
hlt
pop
cmpsl
inc
push
lret
pop
mov
jae
inc
sbb
cmc
and
sar
dec
sub
sub
imul
aad
adc
cmp
insb
ds
lahf
ret
shlb
lcall
inc
mov
pop
icebp
xchg
inc
mov
repnz
fs
inc
adc
es
xchg
cmp
mov
mov
dec
test
cmp
imul
add
mov
push
ds
add
push
mov
mov
lods
test
inc
mov
push
push
lds
xchg
mulb
dec
shrl
pop
pusha
sbb
daa
sbb
ljmp
jo
popa
leave
addb
dec
mov
aas
pop
mov
push
xor
pop
xor
inc
ret
xor
add
jb
and
push
cwtl
loop
cltd
pop
ret
adc
xor
adcl
fisubrs
sub
inc
sub
mov
loopne
pop
or
cld
jle
pop
sti
xchg
aad
adc
fidivrl
scas
jmp
mov
add
sahf
out
inc
jmp
and
push
xor
inc
cmp
cmpsl
fistps
in
mov
mov
pop
mov
add
mov
cmpsl
xchg
in
xchg
inc
jecxz
addr16
jae
add
rclb
rol
lds
mov
mov
or
movsb
or
andb
add
dec
loop
test
dec
push
les
mov
mov
cmpl
popf
cs
or
stc
and
and
sarb
movsb
and
xor
dec
pop
shl
out
mov
rcr
pop
rcll
pop
lods
mov
pusha
mov
rclb
fisubrs
mov
test
adc
push
xor
xlat
bound
loop
repnz
lcall
or
inc
or
jno
pop
push
adc
inc
fisubrl
pcmpeqd
arpl
xchg
test
ret
ljmp
and
lret
sub
popa
pop
push
adc
and
jg
add
push
out
subb
in
jne
leave
scas
adcb
xor
push
ud2
adc
movsb
dec
xchg
arpl
add
lds
lods
jmp
xor
jp
cmpsb
dec
lds
sub
pop
out
dec
pop
adc
adc
ret
push
les
les
fmull
add
daa
cltd
ret
sbb
mov
xchg
adc
cli
ret
insl
stos
les
cmpsb
stos
sti
mov
dec
loopne
push
or
es
xor
popa
shll
imul
xlat
ror
mov
std
and
pop
fbstp
sub
aaa
sbb
insl
cmp
sub
inc
pop
push
pop
jge
sti
loope
xchg
daa
dec
add
cmp
jns
lret
fisubs
dec
and
inc
fyl2x
fiaddl
push
in
inc
sub
sbb
popa
lods
scas
add
cmc
sti
popa
loop
test
inc
sbb
shl
cltd
and
mov
inc
ror
loopne
fisubrl
cmp
es
aam
jno
aaa
push
pop
std
mov
das
push
scas
fdivs
lds
sbb
pop
shrl
pop
dec
jo
xchg
adc
inc
dec
and
pop
pop
cs
sbb
sbb
jo
mov
arpl
pop
loope
subb
add
cs
inc
imul
inc
fwait
sub
and
int3
mull
dec
mov
jbe
push
and
sbb
mov
fmuls
stos
xor
add
pop
fcomp
xor
mov
and
gs
bound
lds
add
pop
ret
repz
inc
pusha
or
pop
mov
pop
cmp
sbb
push
loopne
cmp
push
insl
ret
xchg
mov
mov
movsl
jae
pop
test
pop
add
ret
pop
pop
mov
leave
jecxz
inc
sbb
fsubs
jg
gs
inc
sub
pop
ja
jns
inc
out
std
cmpsb
les
inc
xchg
add
rorb
dec
fwait
int3
mov
xor
lahf
push
push
popa
bound
xchg
mov
popa
push
mov
daa
ret
out
push
mov
fcom
mov
aam
lods
push
jbe
ja
rcrb
jbe
lods
ja
pop
jne
jmp
mov
sub
lahf
clc
ret
lea
mov
jp
sbb
pusha
lods
in
mov
lret
aaa
fisubs
inc
rorb
cwtl
lds
dec
js
into
fwait
jb
ds
cmpsb
leave
mov
ss
inc
jbe
rcrl
leave
mov
jmp
ja
ret
cmp
adc
adc
lods
jns
mov
fisubrs
movsl
xor
mov
lret
jecxz
adc
fisttpll
js
into
push
and
and
test
pusha
xor
test
mov
jae
or
mov
mov
testb
addr16
gs
int
aas
or
pushf
nop
xor
jmp
imul
shlb
pop
adc
leave
lods
mov
pop
fiadds
loop
fiaddl
test
and
fidivs
movsb
lahf
mov
push
add
call
mov
sub
xor
inc
cli
jae
adc
call
inc
cmc
lret
mov
xor
cli
call
movsl
ret
pushf
mov
aas
pop
lret
mov
push
shlb
mov
loop
lock
daa
xchg
pusha
jno
pop
pop
shr
sub
jae
add
push
icebp
add
aaa
ds
pusha
ss
cmp
pop
pop
ret
lods
xchg
mov
mov
mov
fdivrs
fsubrl
pop
add
sbb
dec
mov
stos
pushf
dec
and
xchg
jb
mov
xchg
jbe
push
pusha
stc
jno
and
imul
xchg
call
leave
mov
pop
inc
mov
fistl
jne
fdivrl
cmp
mov
and
frstor
stc
iret
daa
test
int3
cmp
jns
inc
add
iret
cwtl
adc
adc
jo
call
xlat
rcr
mov
xor
aas
jbe
add
mov
dec
fucomip
xchg
out
les
out
mov
bound
xrelease
fcompl
add
aas
adc
int
dec
fisttpl
jmp
or
push
inc
pop
out
out
fiaddl
sub
or
int3
subb
dec
or
push
jmp
xchg
push
add
popa
push
push
and
sub
ds
jmp
pop
jno
xor
sbb
addl
lret
or
es
jg
cmpl
mov
fldl
push
cld
xorb
aas
sbb
mov
mov
fidivl
lods
je
ret
ja
pop
je
inc
push
cli
fisubrs
pop
das
sarl
mov
cmp
popf
sub
scas
mov
mov
pop
lret
fucom
test
push
push
dec
repnz
cmpsl
mov
ret
sub
ret
ja
add
pop
scas
or
adc
push
xlat
std
mov
xor
or
stos
jl
inc
pop
sub
push
cld
xor
int3
adc
sbb
rorl
mov
xor
inc
enter
loopne
xor
cltd
lret
adcl
test
aas
fidivs
mov
xchg
push
adc
sub
cmp
pop
cmp
cmp
mov
popa
inc
enter
imull
and
stos
adc
iret
popa
pop
ds
push
loop
mov
jecxz
sub
add
fcoms
or
sub
test
mov
push
sub
cmpsb
je
add
push
sti
jecxz
inc
pop
fisubs
dec
cmpsb
mov
dec
lcall
pushl
lds
scas
adc
lret
jge
sub
outsb
xchg
or
icebp
in
and
dec
jno
and
fcompl
ret
popa
mov
test
dec
stos
les
xchg
cmpsl
push
mov
arpl
mov
adc
cmp
jae
jnp
mov
inc
and
cmpsb
jae
call
xor
dec
push
bound
ror
and
popa
cltd
mov
lahf
adcb
sub
xchg
and
das
movsb
xor
lret
ret
inc
add
sbb
pop
lret
stos
and
xchg
sbb
lods
ret
lcall
dec
clc
aaa
push
lock
jecxz
mov
cmpsb
scas
shll
cltd
inc
add
xchg
dec
sbb
scas
loop
lcall
lcall
or
or
mov
push
inc
dec
cld
data16
or
inc
ljmp
shlb
dec
pop
movsb
xchg
loop
pusha
jl
dec
pop
rcll
cmpsb
insb
push
outsl
pop
pop
mov
xor
nop
sub
pop
fcmove
in
in
mov
inc
dec
bnd
inc
aaa
aam
loopne
cmc
xlat
shll
mov
add
sub
jge
adc
mov
pusha
fs
lret
rcrb
pop
movsl
fadds
es
jmp
mov
test
mov
lahf
mov
mov
or
pusha
pop
pushf
mov
dec
inc
pop
das
cmp
mov
and
pop
cmp
mov
mov
xor
add
sbb
lret
mov
faddp
loopne
adc
jo
sar
popa
mov
insl
jnp
mov
cmp
add
fisttps
sbb
jecxz
push
jo
add
sbbl
inc
mov
mov
xchg
jle
stc
mov
pop
xor
loop
push
aaa
repz
push
cmp
xchg
or
arpl
test
add
mov
iret
std
push
xor
inc
leave
into
fcoms
xchg
repz
in
mov
pop
dec
or
sub
je
xchg
icebp
dec
jbe
das
and
lds
jecxz
enter
int3
mov
mov
pusha
mov
cwtl
xchg
or
lods
sub
sahf
insb
push
cmp
jo
cld
pop
xor
mov
aas
mov
ret
filds
pop
xchg
mov
inc
mov
rorb
ret
dec
in
add
add
mov
or
inc
cli
rol
ret
lret
mov
inc
neg
into
in
inc
lret
dec
add
lock
out
enter
or
loop
rcr
lods
mov
shlb
jb
das
lea
pop
adc
lods
adc
enter
das
aad
les
mov
int3
pop
inc
pop
jl
testl
sbb
and
xchg
mov
test
cmpsl
push
pop
dec
pop
aaa
or
adc
jno
xchg
or
inc
xchg
mov
sub
xchg
pushf
fistps
cmp
mov
dec
aaa
movsl
imul
dec
divps
jb
push
inc
out
add
or
add
ds
push
jg
sub
jl
adc
sub
adc
aas
aaa
push
addr16
ljmp
lock
imulb
pop
cmpsb
bound
into
add
ret
xchg
push
push
test
push
repnz
xchg
insb
dec
mull
jb
ret
ja
popf
and
mov
xchg
push
xor
int3
mov
ja
fisubl
and
push
lret
test
inc
jne
leave
movsb
into
cmpsb
jo
add
xchg
inc
xor
mov
shlb
pushf
mov
ljmp
dec
cmpsb
roll
dec
ret
dec
xor
mov
mov
sbb
adc
test
cwtl
push
push
adc
ja
int
les
popa
add
cwtl
sub
mov
add
mov
rclb
mov
sahf
rcl
js
mov
in
call
inc
andb
mov
roll
imul
pop
nop
repnz
scas
or
xchg
cmc
out
sahf
mov
xor
ja
shlb
popa
in
mov
push
push
sbbl
pusha
push
jo
jns
icebp
into
iret
jge
dec
hlt
xchg
or
subb
sbb
insl
pop
jno
lret
icebp
subl
lahf
dec
lahf
popa
xlat
and
mov
ret
or
add
cmpsl
inc
jbe
ds
push
scas
xchg
shll
call
and
cmpsl
push
cmp
inc
mov
fisubrs
jns
pop
icebp
xchg
pop
fsub
mov
divl
rcll
push
jnp
jo
add
icebp
xor
mov
imul
inc
fcmovu
cmpsb
pop
sub
hlt
xchg
cmp
fcoms
fiadds
inc
aas
movsb
das
jns
into
jo
ret
pop
push
mov
dec
push
xor
data16
push
loope
or
xchg
jmp
xchg
fs
push
cmp
push
and
push
jo
pop
out
rcrl
dec
out
pop
mov
pop
and
adc
icebp
mov
mov
fistl
aas
pop
xor
xor
inc
in
push
xchg
inc
sbb
rclb
dec
imul
jg
fsubs
shufps
mov
xchg
pop
push
sbb
lods
push
lds
jnp
or
jns
cmp
adc
and
and
mov
sub
call
inc
or
adcb
repnz
dec
pop
jg
repnz
stc
and
add
lods
loop
xchg
or
adc
lods
in
ret
inc
sub
shll
int3
and
ret
into
test
ljmp
sub
jmp
fiadds
add
lds
cmp
jno
ret
in
mov
test
mov
ret
lds
and
icebp
add
aas
pop
or
in
enter
sub
jecxz
xor
pop
jle
ret
push
repz
xor
scas
xchg
ss
aas
mov
fdivrl
aas
bnd
lods
cld
daa
cmpsb
fists
iret
mov
sub
xor
push
or
inc
jb
loop
outsb
mov
dec
add
sub
jg
lret
push
jl
pop
or
std
jb
and
lahf
sub
fldl
xor
lods
add
fcmovnb
inc
mov
add
out
pop
mov
leave
insl
test
jo
test
mov
mov
cmovae
sub
or
fsubp
push
pop
idivb
adc
in
xchg
push
cmpsb
test
jg
cmpsl
xor
inc
dec
lods
jbe
mov
je
aam
fisubrl
ret
dec
jmp
mov
test
xor
dec
xchg
push
pop
repz
mov
sub
pop
stos
enter
mov
sbb
mov
mov
mov
xchg
out
roll
mov
cmc
jle
repz
pop
cwtl
or
mov
loopne
cmpsl
fisttps
inc
fnstsw
push
mov
mov
mull
fldenv
pop
pop
adc
in
popa
xchg
cmp
jo
and
in
push
enter
cmpsb
fsts
mov
add
pop
mov
jbe
push
jp
adc
sbb
or
fldl
jl
mov
mov
lods
pop
cmp
ret
mov
push
out
or
xor
lds
mov
stc
aas
sbb
repz
sub
clc
xor
pop
outsb
icebp
outsl
xor
pop
mov
jp
ljmp
and
pushf
and
lods
add
shlb
fnstenv
push
xchg
shll
mov
cmpsb
popa
in
jno
daa
cwtl
add
popa
int
mov
jecxz
add
or
out
out
sub
push
pusha
mov
jb
inc
xchg
mov
add
leave
inc
jo
cmovle
into
in
jnp
xchg
hlt
push
inc
std
sub
jns
add
lods
cmp
pop
mov
and
xor
bound
push
push
sbb
adc
mov
jle
jns
pop
daa
or
scas
fimuls
mov
xchg
aaa
cwtl
push
xor
fdivs
push
add
mov
mov
and
pop
add
xchg
test
and
pop
rol
shll
loopne
jbe
pop
inc
lds
mov
inc
add
jns
rcrl
push
aas
cli
add
lods
push
loopne
sbb
orl
aas
cmp
push
pop
repz
daa
mov
stos
loop
pop
insl
enter
adc
push
jg
popa
jl
test
ret
xchg
out
inc
jae
frstor
les
jecxz
push
xor
mov
in
test
fsubrp
outsb
and
and
push
in
dec
enter
dec
cmp
xchg
inc
mov
nop
mov
stos
addl
inc
mov
jb
jno
inc
push
sub
sbb
xchg
push
mov
lcall
cmpb
sarl
jns,pn
jge
xchg
mov
ret
mov
xchg
or
push
mov
lds
mov
inc
test
jno
fdivrl
stos
mulb
push
popa
into
or
cltd
cmpsl
jno
jp
loopne
push
subl
or
or
pop
inc
sbb
shll
xor
xor
add
push
cmpsl
ss
mov
adc
fwait
add
fimuls
insb
add
out
mov
mov
mov
xchg
push
arpl
push
push
daa
adc
lock
loop
fsts
push
out
sub
lea
ds
mov
rol
fcomip
dec
rorb
out
add
repnz
add
je
add
imul
int3
stos
bnd
rolb
inc
lds
dec
and
leave
rolb
testl
lret
add
and
inc
aas
lret
out
fists
ret
sbb
movsl
imull
inc
mov
mov
or
jbe
inc
jecxz
pop
xor
jg
push
je
rcrw
lods
pop
in
sbb
add
mov
dec
add
push
inc
jb
loop
ljmp
xchg
out
jecxz
mov
lods
sbb
jae
fidivs
imul
or
push
push
and
push
jne
lods
sub
xchg
jle
sbb
fwait
sub
mov
and
mov
or
dec
roll
dec
gs
inc
insl
cmpsb
xchg
sub
repz
jae
bound
push
decl
and
sub
loopne
cmp
imul
add
xchg
leave
lds
std
int3
sti
xor
mov
repnz
mov
stos
dec
xchg
roll
pop
adcl
add
loop
out
data16
push
insl
mov
scas
adc
jne
cmp
ffree
inc
push
pop
jne
pushf
xchg
insb
mov
pop
jne
sub
lahf
mov
add
lods
fdivrp
rcl
sbb
int
jmp
dec
scas
mov
dec
and
cmpsb
ret
inc
pop
jae
xorps
aaa
repnz
pop
sbb
jo
push
das
insb
or
jne
push
dec
cmp
inc
lods
mov
testl
lret
xchg
nop
push
into
out
loop
xor
fld
dec
ret
push
mov
jb
push
repnz
cmpsl
ret
cmpsb
mov
pushf
and
add
pop
std
sub
push
xchg
xor
dec
pop
and
mov
xor
lret
stc
ds
jb
inc
shll
out
dec
je
mov
jp
xor
pushf
out
outsl
dec
xor
push
pushf
aaa
push
or
mov
ret
imul
sub
dec
push
lds
jne
in
test
emms
and
push
fs
ds
fisttps
xor
lret
call
adc
aas
mov
cmpsb
loopne
adc
orl
fwait
xor
push
mov
lahf
mov
jb
repz
fs
pop
push
call
cmpl
or
fidivrs
add
push
cld
inc
jnp
jecxz
jl
fld
cmp
repnz
ret
inc
xor
loopw
pushf
fidivrs
pop
cmp
scas
cmpsl
mov
cmp
or
lsl
cld
lahf
fwait
ret
fbstp
jmp
iret
or
push
mov
lods
dec
imul
push
sub
outsb
push
pushw
adc
dec
xchg
loop
stos
sbb
out
fucomi
xchg
push
sti
push
push
je
dec
dec
ret
sub
dec
bound
aad
js
daa
mov
mov
and
cltd
add
repnz
lods
pop
mov
mov
xchg
stc
cmp
cmp
fadds
call
ret
fldl
dec
jl
aam
cmp
decb
sbb
sbb
out
imul
repnz
inc
jae
sub
scas
in
pusha
test
sub
sub
lret
aas
fimuls
adcb
mov
scas
pop
addl
push
dec
inc
xor
dec
mov
xor
aas
sti
xchg
clc
mov
mov
test
dec
not
dec
out
pop
pop
xchg
mov
out
in
xor
fistps
xchg
in
mov
mov
push
jmp
pslld
adc
movsl
add
pop
hlt
aas
outsb
ljmp
lds
mov
pop
push
jns
stos
lods
mov
push
xchg
loop
out
mov
mov
pusha
or
cld
push
mov
mov
pusha
fsubp
fiaddl
imull
pop
mov
ljmp
lret
lods
imul
jae
gs
xor
aad
pop
pop
push
push
test
pop
mov
mov
lods
mov
pop
mov
mov
mov
cmpsl
push
outsb
pop
inc
mov
rol
in
adc
xchg
jl
lods
stos
ret
pop
xlat
popa
les
xchg
mov
lods
out
jno
pusha
lds
in
scas
and
hlt
ficoms
cld
and
jb
or
sbb
and
sbb
sti
fidivs
cld
inc
inc
inc
mov
stos
or
out
sub
cmp
mov
fidivrl
cmc
or
lret
fnsave
das
in
sbb
mov
rcrl
lret
insl
repz
aad
icebp
leave
nop
mov
je
dec
stc
mov
and
jno
sbb
xchg
test
jns
aam
into
mov
sbb
mov
mov
pop
jle
xor
std
inc
cmp
lea
push
pop
add
loop
add
cmp
test
in
mov
mov
push
cld
fcmove
imul
mov
inc
sbb
xchg
out
mov
cmp
lods
mov
ficoms
test
mov
ret
sub
rclb
je
jecxz
cli
push
sarb
ret
sub
inc
cmp
sub
lret
pusha
push
fbstp
xor
push
and
mov
insb
fldt
cmpsl
inc
movsb
into
lea
divb
mov
lret
xor
jae
cmovs
mov
repnz
addr16
sub
sbb
ret
xchg
inc
add
inc
sti
xchg
cmpsl
rorl
xchg
add
sub
lret
pusha
lea
mov
pop
js
shr
pop
inc
inc
mov
and
or
nop
inc
jmp
push
imul
sub
les
mov
dec
repnz
cmpsb
ret
jo
fxam
hlt
inc
jno
add
xchg
fdivrl
divb
cli
stos
inc
adc
js
arpl
aam
mov
cmpsb
jno
sbb
lods
popa
inc
or
loopne
mov
in
daa
sbb
repnz
jge
jnp
inc
sub
inc
fmulp
addl
xor
shlb
rcrl
sub
negb
repnz
popa
adc
adc
sub
call
bound
movsb
popa
cwtl
push
xchg
int3
popa
cmpsl
cvtps2pi
mov
into
pop
out
pop
jp
sub
dec
or
or
stos
mov
mov
scas
lret
negl
xchg
fdivl
or
bnd
add
jnp
jmp
mov
fiaddl
movsl
jmp
mov
or
lret
xchg
cmp
inc
fiaddl
push
cmp
cmp
jg
aas
pop
scas
out
push
dec
and
insl
aad
ds
jne
push
ret
lock
ss
fs
cmp
fisubs
add
jb
lock
daa
enter
xchg
jns
pop
add
jo
aad
xchg
enter
add
and
adc
xor
in
xchg
clc
mov
add
cmp
sub
loopne
mov
repnz
ret
jmp
jbe
xchg
adc
pop
les
xchg
mov
push
leave
mov
rorl
pop
dec
in
ljmp
push
adc
push
shrl
push
jo
loopne
or
aam
lods
pushl
mov
xchg
mov
in
je
out
xlat
ss
addr16
lods
popa
aaa
stos
sub
shlb
test
mov
loopne
xor
aas
es
pop
daa
adc
push
stos
sub
sub
cmpsb
mov
sti
lret
test
imul
inc
mov
paddb
rcrb
xor
sbb
iret
add
les
jbe
adc
add
inc
add
xor
pop
dec
push
popa
or
pushf
shr
ret
dec
out
stos
rcl
imul
push
push
outsb
pop
pop
fcmovu
xor
sub
cmc
adc
int3
mov
push
push
insl
repnz
push
cltd
pushf
mov
mov
jecxz
add
and
sti
icebp
iret
push
aad
jb
or
push
add
stc
imul
or
and
test
subb
ljmp
mov
cld
jbe
insl
mov
pushf
jne
test
pop
gs
test
add
outsl
ret
and
lar
test
sarb
stc
adc
icebp
idivl
inc
repz
cmp
or
cmpsl
rcll
jns
push
mov
add
mov
daa
adc
inc
inc
sbb
pop
lods
cmp
movsl
pop
icebp
rorb
mov
cmpsl
pop
mov
out
fimuls
inc
lock
popa
sbb
pop
cmp
clc
sbb
or
sbb
xlat
xchg
fstpt
xchg
mov
dec
mov
aas
pop
sub
or
and
decb
sbb
mov
fmull
sub
pushl
in
arpl
rol
push
fimuls
std
ficoml
adc
dec
pushf
and
add
pop
mov
insl
sbb
mov
inc
add
ficompl
call
jle
jae
lds
mov
pop
pop
add
pushf
pop
or
lret
mov
outsl
sbb
cltd
mov
data16
inc
pop
mov
mov
adc
mov
push
xor
xor
xchg
jmp
icebp
mov
ficompl
das
mov
hlt
fcomps
popl
lock
jb
mov
push
mov
add
movsb
aas
sbb
cmpsl
add
lret
movsb
lea
pushf
pop
add
lods
sti
ss
inc
jb
pop
test
popa
cmpsb
cwtl
andb
aad
or
inc
mull
inc
inc
or
ret
ret
jp
lret
jecxz
cs
adc
into
in
fwait
repnz
lret
jp
push
xor
notl
data16
adc
pop
out
jnp
dec
inc
and
daa
stc
adc
pop
sti
sbb
add
pop
cmp
mov
add
leave
dec
pusha
lret
mov
test
pusha
loopne
ret
lahf
ss
lret
pop
stc
mov
imul
pushf
cltd
adc
inc
xor
mov
cmpsl
jbe
xor
jmp
push
jns
dec
stos
jge
jno
sub
push
hlt
mov
mov
mov
jo
or
in
dec
rep
out
jo
xor
ret
and
and
sbb
pusha
mov
pop
mov
das
fiadds
mov
aaa
mov
and
rcrl
sub
push
fistpll
mov
pusha
rorl
ret
xchg
fcmovne
xor
mov
cmpsl
shl
inc
lea
mov
jg
inc
add
cmpps
popf
jecxz
inc
subl
es
in
in
mov
loopne
lahf
sbb
shll
fmull
repz
cmpsb
fmull
or
jne
lahf
push
repnz
lahf
cld
adc
xchg
or
aam
push
adc
or
xor
rorb
add
xlat
movsl
popfw
jle
fiadds
xchg
xor
xchg
push
or
add
in
rclb
movsb
test
sahf
int
xlat
dec
pop
jae
fildl
ret
mov
sti
jecxz
arpl
inc
fcmovu
ret
aam
fs
aad
pop
or
lock
popf
fnstenv
ror
mov
lret
dec
je
and
mov
inc
mov
js
jnp
add
orl
xchg
dec
mov
dec
mov
sbb
push
adc
or
inc
mov
sbb
ret
test
xchg
cltd
push
sub
data16
int
xchg
imul
add
mov
adc
arpl
sbb
mov
or
cltd
pop
xchg
in
mov
loop
ja
and
sub
mov
imul
push
xchg
and
rol
in
xchg
popa
jb
pop
bnd
sbb
addl
repnz
sbb
pop
je
mov
dec
out
sbb
dec
inc
add
mov
mov
int3
dec
sti
js
mov
mov
push
mov
bound
xor
mov
cld
push
add
inc
jecxz
ret
mov
cmp
sub
sarb
cmp
daa
add
adc
lcall
xor
rcrb
fiadds
add
and
cs
mov
ret
push
mov
xor
ret
xchg
dec
test
out
aad
out
xchg
dec
ret
test
dec
jmp
inc
ror
inc
cmp
or
faddp
fiaddl
inc
dec
mov
mov
in
fisttpll
fnsave
cmp
sbb
xchg
rorl
mov
lds
add
inc
ret
pop
push
cmpsl
pop
test
cli
jae
xor
push
mov
jno
cli
ljmp
pushf
and
jb
cwtl
inc
ret
sub
xchg
sbb
lahf
xchg
ret
aas
inc
outsb
rorb
jle
xor
and
or
out
sahf
pop
loop
into
add
cmpb
cmp
mov
call
cmpb
rolb
es
stos
pop
out
stc
mov
fisubl
sbb
add
ljmp
mov
pop
push
dec
stos
push
sbb
mov
xchg
adc
leave
inc
xchg
mov
setb
lds
daa
add
jmp
pop
jp
sbb
xchg
dec
fdivrl
flds
jo
dec
jp
iret
mov
stos
or
fwait
mov
fucomip
mov
sbb
mov
sub
add
lar
and
aas
lcall
icebp
xchg
addb
mov
mov
or
inc
jecxz
sub
mov
rcl
push
scas
sub
xchg
pop
cmp
dec
inc
imul
pop
push
outsl
sti
jo
sub
roll
sahf
and
shlb
mov
inc
mov
sbb
in
pop
fisttpl
popa
ds
out
jmp
testl
imul
repz
cmpsl
inc
std
pop
filds
test
mov
sarl
addl
ret
ficoms
std
ds
cmpsb
lea
cmpsb
mov
adc
jbe
or
add
jb
shlb
push
cmp
add
adc
movl
mov
jb
xchg
cmc
pop
xchg
jecxz
rolb
sbb
sub
xor
dec
leave
loop
aaa
jge
loope
pop
jo
clc
cli
in
lahf
jmp
jne
and
push
leave
xor
repz
and
sbb
cmp
mov
inc
gs
cld
inc
mov
push
repz
and
adc
cmp
push
int
ret
decb
pop
out
lahf
imul
daa
or
test
dec
jo
push
insl
pop
sub
mov
sub
lods
arpl
je
repnz
push
lods
lock
popf
push
or
enter
std
push
pop
rcll
inc
jmp
inc
or
pusha
inc
add
ss
push
in
xchg
jb
push
inc
dec
cmp
inc
push
fwait
or
and
pmaxsw
loop
mov
pop
or
movsl
rcll
mov
sti
shr
mov
js
or
mov
adc
sbb
and
lcall
call
xchg
sahf
push
mov
pusha
fists
sbb
divl
add
xor
add
loop
and
stc
sarl
push
push
ret
or
pop
jbe
jno
sbb
mov
imul
arpl
ljmp
ret
mov
push
mov
add
std
mov
fsubl
or
test
in
mov
xchg
push
scas
cwtl
jecxz
lcall
movsl
dec
lock
in
ds
fisubrs
lahf
dec
mov
gs
dec
cmpsb
push
pop
addl
cli
addr16
lea
ret
xor
in
pop
cmp
rcrb
jle
loop
mov
outsl
aaa
lock
loop
mov
adcl
cmp
mov
push
inc
mov
lret
dec
ja
mov
dec
jmp
dec
and
daa
in
bound
cmp
je
test
rclb
adc
xchg
cmpsl
push
pop
mov
mov
ljmp
add
or
mov
mov
mov
push
pushf
js
inc
movsb
cwtl
aaa
subb
lods
stos
add
mov
pop
cmp
sub
pop
jae
cwtl
sub
aam
inc
mov
mov
inc
pop
movsl
cmpsb
movsb
dec
jl
mov
hlt
mov
and
gs
xchg
jecxz
mov
jo
mov
aas
jbe
pushf
mov
jecxz
push
inc
loopne
hlt
mov
xchg
lret
push
lods
mov
cmp
mov
mov
es
mov
cli
call
dec
fnsave
in
decl
cvtps2pd
sub
ret
inc
jo
xor
inc
stos
je
pop
iret
add
fidivs
lea
repnz
test
in
sub
pop
mov
add
cmp
pop
adc
pop
insl
ljmp
sti
xchg
nop
in
jne
and
std
inc
ret
aas
insb
fdivl
pop
pop
fildl
xor
pop
fsubs
or
mov
push
jb
push
sarb
shll
lret
imul
mov
xlat
pop
loopne
adc
mov
jge
jnp
imul
cmp
xlat
bound
dec
pextrw
inc
into
pop
shufps
bound
daa
pop
inc
shll
adc
lcall
imul
mov
out
clc
jmp
or
push
sbb
mov
adc
mov
lahf
fildll
lock
lods
mov
bnd
dec
inc
push
mov
les
and
shl
push
ret
icebp
lcall
aam
xor
lea
add
inc
repnz
lret
mov
sub
int3
rcrb
jo
popf
out
add
jae
call
mov
into
jbe
shll
mov
push
mov
lock
leave
add
add
in
sub
call
xchg
test
fcomi
daa
adc
lret
cmpsb
int
lahf
xchg
das
mov
inc
fiaddl
jp
xchg
cmpsl
rcrb
ret
push
mov
andb
push
mov
testb
scas
mov
repz
fs
loopne
pop
sbb
ret
das
ret
jmp
pop
xchg
ret
daa
mov
test
push
andl
xchg
icebp
add
and
gs
fcompl
add
fbstp
dec
jp
jb
inc
push
push
cmc
adc
mov
adc
popa
jge
push
inc
mov
mov
aam
out
addb
add
shlb
cs
ret
xor
enter
jb
and
inc
mov
daa
sbb
mov
pushf
sub
cmp
jae
fnstcw
push
call
adc
pop
or
inc
inc
fisttps
jbe
mov
stc
add
repnz
stc
push
pop
inc
lods
dec
cmp
push
cld
rorb
push
add
repz
xchg
das
ljmp
xor
dec
out
test
test
push
popa
xchg
jbe
sub
push
xchg
add
push
adc
adc
sub
mov
pop
pop
mov
dec
shrl
stos
xor
mov
loop
pop
push
jae
jns
mov
mov
addl
incb
or
push
into
mov
inc
jg
aam
cli
fs
pop
bound
imul
incb
cli
andb
adc
xchg
jmp
cmc
xchg
and
and
pop
sbb
inc
lods
ret
mov
or
cwtl
mov
xor
stos
daa
fwait
sbb
faddp
das
rcl
out
jmp
mov
pop
xchg
or
dec
jmp
ljmp
lret
aas
clc
shrl
pushfw
dec
inc
test
sub
adc
mov
hlt
xchg
notb
sbb
mov
or
dec
mov
sbb
inc
xor
sbb
adc
fwait
mov
push
movsl
dec
adc
dec
shlb
push
inc
not
push
aad
add
dec
mov
daa
incl
aam
xor
aas
dec
testl
push
stc
jmp
mov
xchg
sub
push
test
push
insl
loopne
xor
inc
call
aaa
add
push
in
inc
sub
repz
call
ja
mov
push
rol
lods
js
idivb
push
pushw
mov
test
mov
mov
and
test
out
test
sub
and
in
test
mov
push
lcall
and
cmpsl
orb
and
mov
adc
add
test
cmpsl
mov
and
lcall
lahf
cmp
loop
adc
dec
add
mov
mov
cmp
loopne
sbb
jbe
movsb
stos
test
fcmovne
enter
mov
in
movl
sub
pop
fimuls
je
addr16
cmpsl
jnp
outsb
orl
mov
dec
and
push
mov
sub
inc
ret
sarl
in
outsb
enter
fmull
test
inc
xchg
rclb
daa
push
push
jo
in
rolb
sub
or
loop
insl
nop
inc
sub
aas
cmc
shl
in
xchg
push
xor
not
mov
xchg
or
lods
xlat
lahf
push
cmp
aas
push
sbb
testb
rcrb
mov
repz
cmp
jb
lahf
shlb
add
ja
inc
mov
lret
stos
lcall
inc
add
enter
out
out
jns
inc
add
test
mov
push
mov
fcmovbe
mov
sbb
lea
and
push
ss
sti
sbb
xchg
add
or
sbb
dec
fisubrs
xlat
mov
xchg
sbb
xchg
sbb
scas
mov
mov
cld
jo
adc
mov
lret
into
add
sub
jno
pop
lds
je
arpl
push
in
sbb
cmpsb
movsb
rclb
push
xchg
jae
pop
xchg
cmpsb
repz
aas
aad
inc
jle,pn
push
add
add
daa
aas
sub
cmpsb
xor
and
cli
or
outsb
lea
repz
mov
in
and
ret
out
push
std
xchg
fbstp
cli
std
inc
xchg
inc
fnsave
fsubr
jns
adc
xchg
push
lea
pop
xchg
mov
adc
pop
mov
dec
adc
mov
sub
inc
jecxz
dec
test
push
adc
push
lret
lea
add
rcrb
pop
xchg
adc
or
push
mov
test
sbb
ficoms
dec
into
mov
test
imul
pop
out
fidivs
jmp
fdivl
cld
inc
hlt
inc
pusha
and
mov
or
push
mov
mov
aad
xor
lods
mov
mov
out
xchg
loopne
push
and
pop
dec
or
andl
repnz
jo
je
pop
aaa
ja
inc
sub
xlat
sub
daa
loop
jae
enter
mov
adc
sbb
in
test
sahf
push
sub
push
in
or
dec
xchg
cmpsl
push
and
cmpl
sub
xor
aas
mov
movsb
cmp
icebp
repz
pmaddwd
jo
fistps
aas
out
pop
push
rcrl
adc
mov
rol
xor
push
imul
adc
sbb
sub
mov
movsb
fstpt
sub
pop
stos
jae
andb
and
lret
sti
dec
scas
sub
mov
into
pop
clc
dec
ret
mov
mov
fcoms
inc
repz
jnp
add
aad
sub
push
mov
daa
push
or
xchg
ss
xor
inc
lds
cmpsl
into
fidivl
dec
shr
dec
lea
bound
aad
movsl
mov
xchg
dec
cmpb
cmc
or
lret
sub
sbb
pusha
into
scas
repz
cwtl
subb
cmp
les
sbb
cld
test
sti
jae
in
sub
cwtl
daa
or
outsl
add
enter
cli
mov
push
repz
sbb
xchg
and
xchg
pusha
inc
fiaddl
sub
xchg
subl
les
and
and
bound
rclb
inc
mov
pusha
mov
leave
lret
out
mov
inc
lcall
out
ret
mov
aam
sbb
cmp
cmpl
push
mov
xor
and
xchg
cwtl
xor
fdivr
sbb
cmp
xchg
inc
inc
jo
orb
push
mov
in
mov
repnz
into
fstp
adc
mov
inc
lcall
ss
inc
je
pop
inc
xchg
sub
sub
inc
inc
mov
dec
lods
dec
sti
ret
inc
cmp
add
jae
cmpsb
and
sahf
pop
pop
mov
inc
xor
adc
dec
daa
xchg
mov
scas
outsb
stos
leave
movsl
lds
enter
sti
cmpsb
mov
jg
sub
test
mov
push
inc
aad
loopne
shrl
adc
daa
adc
ljmp
loopne
xor
aaa
aad
fiadds
add
xor
dec
aad
pop
jp
outsb
pushw
loopne
fnstcw
mov
inc
aaa
aad
ret
jmp
adc
mov
fstpl
rclb
push
test
sbb
ljmp
or
jnp
test
mov
xchg
movsb
mov
xor
add
nop
das
add
sbbl
insl
push
into
push
rclb
cld
jne
inc
gs
repz
mov
pop
mov
dec
lods
adc
js
cmp
stc
cli
sbb
inc
call
mov
dec
cld
ret
inc
out
inc
jo
js
lods
inc
in
xor
sbb
shl
or
test
dec
adc
mov
push
pop
sbb
popa
xor
add
jecxz
loopne
adc
mov
ret
outsb
adc
mov
les
sbb
cmpb
fs
fdivs
inc
or
pop
ljmp
aad
jmp
pushf
out
das
pop
data16
loop
adc
sbb
sbb
leave
dec
lret
jo
popf
ss
ret
rcrl
push
jecxz
lret
and
orl
sbb
pop
lods
fstps
bound
fadds
outsl
dec
ljmp
cmpsb
xchg
insb
xchg
out
or
leave
ljmp
out
repnz
inc
stc
cs
pop
aas
jmp
aam
fwait
int
repnz
mov
push
push
out
jae
fmuls
dec
inc
push
jle
mov
add
or
xor
rcll
inc
fisubs
enter
xor
sub
ja
fcmovu
call
xor
repnz
pop
std
xchg
nop
inc
push
sub
jns
push
shr
jbe
inc
lods
cli
pusha
call
mov
inc
and
sbb
lret
shrl
mov
hlt
enter
jl
addb
shl
mov
test
pop
stos
movsl
xor
xchg
cmpsl
push
lahf
mov
cli
mov
test
pop
push
les
sub
dec
not
jns
push
into
mov
shlb
inc
pop
jge
and
out
push
rclb
mov
ror
aaa
cmp
cmp
or
jp
dec
inc
addr16
and
fisubrl
aas
inc
push
cld
rol
cmpb
mov
add
frstor
push
in
iret
pop
mov
push
scas
push
jmp
movl
out
call
aas
inc
cmpsb
jno
mov
sub
dec
arpl
cmp
xlat
mov
sub
mov
mov
sarb
mov
nop
xchg
push
sub
out
cmp
pop
test
mov
dec
fs
fwait
jl
je
cltd
xchg
push
sub
mov
inc
mull
mov
cwtl
push
dec
test
rolb
sti
add
andb
stos
lea
add
ljmp
in
xor
jb
lods
sub
je
pop
jbe
add
aas
sub
inc
jl
sbb
push
ror
adc
jmp
gs
or
jo
inc
addr16
lds
into
shlb
cmpsb
jo
xor
ret
jbe
mov
pushf
jmp
outsb
popa
je
inc
lods
mov
and
lea
mov
pop
ret
fists
ja
push
jmp
mov
repz
lods
hlt
add
mov
cmp
dec
xchg
loop
je
mov
into
fisubs
aad
pop
shll
outsl
xorl
shll
testb
jo
fstpl
mov
clc
je
mov
or
mov
movl
push
mov
popa
or
sub
xchg
mov
mov
lock
and
xchg
jno
leave
or
lahf
mov
pusha
pop
xor
cmpsl
ret
popa
dec
xchg
mov
xchg
div
inc
sub
add
cmp
cmp
adc
mov
mov
mov
or
dec
pop
add
and
dec
and
mov
iret
lcall
push
sub
aad
popf
mov
add
xor
mov
jo
dec
call
aaa
sbb
mov
fsubl
out
test
jle
mov
inc
cld
add
or
lret
sub
inc
mov
jl
bound
pop
xchg
mov
sub
sbb
xchg
ljmp
cli
rol
std
add
inc
dec
jne
cli
lods
stc
cmp
dec
and
cmc
movsb
mov
pop
add
ffree
xchg
mov
adc
sbb
inc
add
test
mov
fidivrl
xor
jne
sbb
dec
jns
lds
cli
or
cmp
fistpl
int3
xor
test
jae
pop
and
test
fsts
inc
cltd
sub
cmp
loope
xor
add
and
aam
cvtps2pd
fisttpl
ljmp
ret
inc
mov
or
int3
mov
out
adc
push
pop
pop
dec
fdivrs
pop
dec
hlt
add
dec
xchg
rep
or
pop
dec
lods
xchg
popf
ja
inc
cmpsl
les
or
lods
divl
mov
lret
pop
cwtl
mov
lea
shrb
cmp
inc
in
divb
pop
scas
insb
xchg
xchg
push
add
fdivs
sub
push
adc
dec
push
cwtl
mov
mov
pop
jne
popf
pushf
out
out
jb
or
push
call
sub
push
jle
sbb
test
repnz
leave
xchg
pushf
or
cmpsb
xor
jo
fwait
je
imul
loopne
sub
ffree
shr
filds
faddl
add
jno
mov
cld
dec
jmp
push
and
cltd
dec
jmp
insl
pop
pop
int3
pop
clc
test
lea
add
cmpsb
bnd
jl
and
mov
inc
sbb
mov
mov
cmp
mov
inc
adc
xchg
push
pop
mov
ret
jl
addr16
jne
dec
mov
cmp
and
sub
mov
mov
imul
mov
cmp
pop
cld
cmpb
cmp
ftst
and
push
pop
lods
mov
mov
std
pop
loope
loopne
addr16
push
mov
mov
add
stc
add
and
jae
je
inc
les
ja
loopne
out
in
mov
mov
mov
fs
mov
aas
fstpt
sub
jmp
fidivs
jo
pop
aam
sbb
cmp
popa
pop
decl
fmulp
ja
loopne
test
or
mov
mov
pop
lea
mov
and
and
xor
data16
dec
jmp
xchg
js
cld
jmp
sbb
aas
fstp
pusha
repz
jecxz
roll
jp
push
mov
jo
fsubs
test
sub
scas
cmp
dec
fwait
test
aas
and
inc
ficoms
lret
sub
pop
sarb
adc
or
adc
and
roll
in
jno
add
insl
adc
popa
rcl
sub
lea
ljmp
and
leave
lea
ljmp
mov
lods
dec
fcoms
pop
repz
mov
jge
push
ljmp
and
push
or
lods
sbb
test
jno
mov
iret
mov
jmp
out
aad
aaa
jb
lret
cmp
repz
jae
cltd
and
negl
ret
fisubs
ljmp
pop
xchg
xor
pop
cld
adc
imul
aam
data16
ljmp
ds
pop
test
jecxz
stos
adc
mov
cmp
add
sbb
push
popa
dec
movsl
int
adc
jo
xor
subl
icebp
cmpsl
mov
in
cmp
push
push
movsl
or
push
push
inc
lods
pusha
repz
inc
sub
hlt
inc
xor
xchg
or
aaa
dec
mov
sub
dec
xchg
stos
popa
lods
sub
dec
inc
lods
jns
cmp
into
cltd
rcr
jmp
inc
cmpsl
fs
sub
fisubs
sbb
sub
dec
mov
sub
ja
mov
cmp
lahf
push
cmp
mov
xlat
mov
arpl
xchg
inc
loop
movq
ljmp
ret
add
pop
repnz
into
push
sbb
rolb
je
xor
das
dec
xchg
pop
jne
out
add
mov
mov
adc
mov
out
pop
ret
mov
adc
arpl
in
das
add
ret
dec
test
call
sbb
repz
stc
dec
into
dec
test
xlat
mov
faddp
movsb
cmp
outsb
shl
icebp
jecxz
lds
inc
lcall
or
mov
mov
inc
xchg
enter
push
push
push
mov
mov
lds
sub
sbb
fs
out
sub
adc
lcall
pushf
dec
insl
dec
jp
or
fstl
pop
or
jecxz
sub
aaa
xor
cltd
push
push
mov
mov
decb
jo
mov
out
or
cmp
ret
cmp
jg
or
mov
cld
pop
push
cmp
sub
enter
mov
pop
pop
push
cmp
mov
ret
fiaddl
or
cld
lret
out
fimull
mov
test
fmulp
repz
or
mov
jae
scas
sbb
cld
or
sub
rolb
dec
fsubp
fildll
ret
fisubs
loopne
in
cld
mov
pop
cmp
ficompl
test
inc
cmp
repnz
out
add
jp
xchg
das
insl
push
lds
or
sub
mov
mov
mov
es
jae
cmpb
fbld
aas
pop
pop
add
dec
int3
rorl
or
rolb
push
dec
sub
arpl
mov
inc
mov
fimull
mov
pop
and
subl
mov
lds
or
les
test
andb
ret
dec
ret
cmp
test
adc
repz
addr16
loopne
mov
gs
shll
mov
xchg
inc
je
push
jmp
sub
inc
popf
rcl
loopne
xor
mov
sbb
sub
jmp
sub
imul
lds
loop
jmp
int
and
lret
or
lret
fdivrs
or
pop
es
sti
push
push
loopne
push
inc
cmp
mov
cmp
shlb
sbb
pshufw
dec
stc
inc
sbb
fmull
cmc
push
je
xor
lods
jmp
inc
cmp
and
inc
inc
jae
stos
mov
mov
leave
lcall
nop
adc
bound
pop
jae
test
jb
or
xchg
mov
lock
mov
jmp
rcll
push
ja
shl
filds
pusha
mov
je
lcall
push
popf
ss
xor
ret
aad
loopne
dec
fimull
popa
jecxz
xchg
ss
or
popa
or
movsb
call
movsb
leave
push
inc
mov
sub
std
mov
mov
jmp
andb
dec
cmpsl
mov
jmp
gs
ret
jne
movsl
jb
mov
mov
cli
pop
mov
dec
xor
or
adc
loopne
pop
inc
insb
outsb
movsl
aad
lar
xorb
cs
push
jae
sbb
movsb
cli
xchg
popl
xchg
das
fs
xor
inc
iret
add
lret
rolb
adc
test
lock
and
gs
in
cli
icebp
test
cmpsb
xor
scas
ficomps
aaa
add
xchg
inc
or
pop
jmp
sbb
dec
mul
hlt
pop
lahf
or
sub
mov
fcomi
push
fcoms
mov
cmp
add
insl
scas
and
push
inc
cmp
sbb
repz
movsb
push
pusha
and
loopne
outsl
roll
and
mov
dec
jg
add
sub
inc
dec
and
in
pushf
mov
sub
scas
cmp
mov
lea
lods
jns
sub
push
stos
jns
into
mov
je
loop
add
jbe
insb
and
pop
sub
or
ret
jle
call
push
mov
lds
repnz
add
or
adc
lds
mov
or
or
cli
pop
cmp
ret
mov
dec
mov
mov
mov
add
ficomps
in
mov
push
out
into
out
xchg
push
std
or
rcl
fs
or
inc
push
jbe
roll
add
icebp
push
inc
pop
inc
jle
inc
pop
inc
jle
inc
ficomps
pop
push
loop
fisttps
inc
and
lods
xor
jns
enter
inc
push
insl
ficoml
xchg
mov
or
dec
stos
std
sti
mov
dec
repnz
add
xchg
jno
dec
dec
lret
inc
mov
xchg
inc
add
dec
sbb
repnz
xor
jl
push
jno
aaa
ds
mov
aas
add
inc
lret
push
xchg
dec
sbb
ds
inc
xor
fwait
shrd
sub
sub
lock
popa
add
pusha
xchg
mov
fisubrs
cmp
mov
test
roll
jne
jecxz
gs
xchg
inc
or
in
ret
push
aad
mov
dec
mov
ss
mov
rolb
jmp
lcall
jne
into
cmpsl
cli
lods
mov
outsb
jle
jmp
subl
outsb
fiadds
adcl
repnz
lret
sahf
push
sub
shrb
or
jp
fyl2x
mov
mov
push
jns
ret
xor
sub
cmp
sbbb
inc
es
pop
stos
xor
ja
dec
enter
daa
push
sbb
jnp
popf
xor
mov
pop
push
call
hlt
divl
xor
and
ret
or
push
adc
push
std
push
pop
xor
xor
rorb
pop
jno
mov
mov
sbb
or
insl
sub
inc
aas
cmp
ja
dec
fildll
mov
popa
jb
dec
lds
ss
ret
add
dec
fs
ret
jecxz
les
out
int
or
mov
mov
push
xchg
add
popf
data16
icebp
or
ret
xor
lods
or
jno
push
inc
imul
pushf
xor
pop
push
sub
push
lret
loopne
into
or
popa
mov
jmp
mov
ret
jmp
insb
lret
aad
pop
push
mov
sub
aas
aad
xchg
lea
or
xchg
sub
cmp
je
roll
or
ret
cmpsl
jg
and
enter
lods
es
push
lahf
add
xor
inc
push
lret
sub
pop
movntq
out
xor
mov
inc
xor
iret
test
bound
int3
jmp
adc
push
push
mov
cmp
add
mov
cmpsl
sub
addr16
mov
repnz
add
ret
add
in
scas
ljmp
test
or
or
ljmp
stc
jge
cmp
or
xchg
pop
fwait
pop
pop
dec
xchg
fimull
es
les
fs
sub
orb
and
mov
lods
out
jmp
test
daa
xchg
xchg
pop
repnz
je
stos
loop
mov
push
mov
stc
pop
push
insl
pop
das
mov
les
add
or
push
sub
notb
dec
dec
or
ds
shll
push
sub
push
add
dec
icebp
rolb
out
data16
lcall
cmp
ret
dec
data16
and
popf
shrb
xchg
imul
clc
ja
lods
xchg
and
imul
sahf
fisubrl
shrl
or
push
push
pop
mov
jmp
mov
stos
pop
fisubrs
pop
std
mov
cmp
cmpsl
jbe
in
cmp
js
push
sub
pop
sub
cmpsl
mov
imul
xchg
pop
sbb
cmp
mov
icebp
pop
call
or
push
sbb
sub
cwtl
xchg
cmp
jnp
mov
inc
shll
inc
inc
sub
jno
jp
mov
mov
or
fistpl
scas
mov
sub
and
fisubl
or
imul
hlt
xor
bound
fisttpll
pop
std
push
xchg
data16
jp
sub
xor
pop
add
fstpl
ds
fisubs
xchg
pop
sub
sbb
mov
or
push
dec
mov
leave
inc
add
jecxz
inc
xor
adc
add
mov
jmp
jmp
mov
sbbb
mov
int
xchg
inc
pop
ss
push
arpl
xchg
sahf
adc
adcl
iret
jnp
push
in
call
cmp
loop
aam
mov
clc
gs
push
imul
and
imul
inc
stc
mov
shrb
mov
fwait
rcll
inc
leave
adc
cmpsb
push
movb
mov
and
pop
addb
dec
adc
clc
leave
cmp
inc
sub
xor
jno
in
jae
je
cmp
push
ret
or
add
les
fimull
dec
mov
mov
mov
push
cmpsl
dec
mov
gs
lods
lcall
or
sbbb
dec
mov
pop
mov
or
inc
add
divb
pop
int
mov
jmp
dec
leave
ret
movsb
push
pop
jb
out
ret
pop
popa
mov
sbb
or
shl
movsb
dec
loop
cmpsb
mov
mov
push
pop
and
cli
cmp
xorl
pop
and
ss
pop
jns
scas
xchg
xor
insb
pusha
push
imul
xlat
dec
lret
jmp
jns
popa
nop
fimuls
mov
and
aad
movb
and
stc
inc
lret
adc
addb
push
movsl
addr16
cmc
push
pusha
sub
repz
push
xchg
and
dec
jb
pop
lahf
pusha
inc
popa
xchg
sbb
sbb
xchg
mov
xor
inc
lods
xchg
movsb
cwtl
inc
mov
test
xor
mov
lcall
in
mov
or
sbb
pop
or
ljmp
dec
lret
stos
push
fiaddl
outsb
pop
or
lods
inc
xor
cmc
adc
ljmp
dec
mov
and
mov
stos
ds
sub
jns
mov
sbb
lret
cmp
mov
inc
mov
jno
mov
int
mov
leave
flds
ds
jmp
push
daa
aas
jp
bound
scas
repnz
stos
sbb
fsubp
adc
adc
inc
test
push
dec
inc
data16
xor
nop
add
aas
and
nop
xor
xchg
sbb
ret
add
and
aad
clc
mov
sahf
jmp
push
jb
cmp
mov
dec
stos
mov
stos
les
movsl
mov
test
add
iret
inc
ficoms
xchg
fs
mov
push
inc
adc
xlat
sbb
and
add
cltd
aad
sti
push
test
in
cltd
leave
sar
imul
add
push
sbb
int
adc
inc
pop
hlt
mov
psubd
push
add
sbb
fdivl
out
inc
or
cmc
add
cmp
xor
aas
popf
aas
cmp
fisttpll
xor
lea
push
roll
loop
inc
popf
add
enter
enter
mov
dec
rclb
insl
pop
inc
push
mov
dec
push
and
mov
pop
pusha
xor
dec
jmp
loopne
ss
outsl
adc
inc
mov
and
cmp
imul
test
inc
inc
icebp
incb
bound
jb
les
xor
fidivl
pop
push
add
sub
lret
cmp
mov
addb
loope
dec
sub
dec
dec
xor
fimuls
out
enter
mov
out
mov
out
sub
add
sub
jns,pt
imul
dec
ljmp
outsb
aaa
nop
subb
leave
inc
addr16
inc
andb
mov
lds
lcall
imul
test
fcmove
jae
je
aaa
fcmovb
leave
dec
and
jge
and
in
push
lods
sbb
dec
cs
lods
and
xorb
mov
out
add
inc
addr16
dec
mov
mov
into
jle
movsl
mov
shlb
into
dec
loopne
push
jb
cmp
lret
jnp
dec
cltd
lea
inc
out
fcomp
push
es
repnz
mov
sub
icebp
ret
mov
aaa
and
xor
push
les
into
sbb
arpl
popa
lret
mov
jns
push
inc
push
test
outsl
movsb
push
scas
push
sub
add
inc
lock
mov
mov
or
cltd
shll
inc
push
add
push
out
rolb
xor
jmp
push
inc
popa
rcll
lret
lock
or
dec
add
mov
dec
jecxz
fdivl
or
pop
adc
sbb
leave
mov
ror
xor
jae
es
xchg
dec
cmp
or
cli
cmc
stc
xchg
jmp
in
sbb
add
sbb
pop
jb
xlat
ret
xlat
pop
bound
int3
and
adc
cmp
sbb
ja
cmpsl
mov
fwait
add
mov
dec
ret
cld
cmpsl
lret
fadds
sbb
enter
js
cltd
and
push
mov
ja
ret
aas
pop
push
push
mov
dec
dec
xchg
fidivl
ficoms
orps
outsb
dec
or
insb
inc
cmpsb
repnz
mov
in
dec
xchg
out
and
add
es
mov
or
mov
cs
out
xchg
mov
shl
scas
mov
sbb
pushf
mov
xor
mov
inc
out
mov
and
and
xchg
inc
fildll
inc
rorl
std
lret
jne
fimuls
mov
shlb
mov
xchg
pop
or
into
cmp
or
movsb
mov
decb
loopne
sub
add
sbb
in
or
fsubrl
add
mov
in
into
xchg
out
dec
add
jecxz
test
mov
sub
cmc
pop
hlt
push
mov
or
cmpsl
jnp
cli
sub
pushl
push
out
icebp
out
call
js
fnstsw
pop
jae
lret
jecxz
and
sbb
lret
add
mov
lds
repnz
push
cwtd
push
pop
jmp
and
cwtl
stos
pop
cpuid
inc
into
daa
ss
inc
imul
push
and
mov
shrb
arpl
fidivrs
cmpsb
mov
jae
xchg
orl
mov
jecxz
mov
pop
add
push
fmul
andl
lds
mov
insb
lret
and
adc
out
aaa
mov
popa
inc
or
jmp
rol
adc
sbb
and
jbe
jb
dec
mov
out
out
lods
fsubp
mov
out
add
push
js
cmpsl
insl
xlat
pop
sbb
out
mov
in
cwtl
sub
cli
adc
out
push
ret
loopne
inc
sub
int3
inc
stos
insb
popf
inc
sub
dec
and
or
loope
xor
xor
dec
decb
or
xor
pop
pop
mov
lods
adc
leave
lea
imul
into
lret
ss
or
cmc
and
pop
adc
repz
and
push
add
in
push
ret
mov
and
leave
insl
popa
jae
aas
jg
mov
mov
movsl
arpl
push
inc
popf
int
add
pushf
arpl
and
insb
cmp
sub
sbb
out
cld
sgdtl
pop
jo
add
add
inc
xor
and
inc
enter
cmc
adc
adc
jae
fs
jne
ret
pop
lret
sbb
loopne
add
and
cmc
rcr
pop
push
mov
lahf
mov
or
pop
xchg
add
inc
stos
lods
fistpll
jecxz
or
mov
add
adc
pop
push
dec
rcr
jns
dec
or
push
adc
push
mov
out
enter
adc
cmp
inc
jecxz
into
fs
test
icebp
stc
notb
jecxz
fs
mov
push
popa
scas
inc
lock
mov
jb
bound
fisubl
mov
test
test
mov
pop
pop
or
rclb
repz
iret
adc
incb
xchg
ret
mov
faddl
repnz
or
ret
fsubl
loopne
mov
ret
in
cmp
and
mov
pop
es
movsb
in
cmp
insl
je
xchg
sbb
adc
pusha
into
hlt
mov
dec
les
mov
xor
adc
xchg
push
arpl
jae
inc
xor
lea
roll
ret
sbb
roll
sub
sbb
nop
push
add
mov
pop
movsb
iret
clc
dec
loop
add
repnz
cmp
inc
push
or
insb
push
sub
cmpsb
mov
xor
jne
pop
lea
imul
mov
or
jmp
mov
mov
jmp
mov
out
testl
xor
push
cmpsb
xor
pop
push
icebp
xchg
gs
and
mov
fiadds
movb
inc
nop
inc
jmp
inc
adc
jge
data16
inc
inc
xchg
cmp
andl
ja
out
test
pop
inc
mov
fcmovu
out
data16
sbb
lret
sub
mov
and
inc
aad
lret
outsl
scas
jne
ret
syscall
dec
pop
dec
das
jmp
inc
inc
jae
cmp
mov
inc
cmp
jmp
imull
das
out
fisubl
nop
repnz
xor
add
inc
test
sub
mov
cmc
cmp
lods
inc
bound
dec
cltd
fimull
lret
stos
dec
xchg
jnp
daa
push
leave
mov
mov
or
fwait
pop
cmp
xlat
insl
jb
bound
incb
sbb
mov
fadds
mov
test
sbb
adc
sub
ret
add
mov
sub
les
sub
into
fcmovnb
adc
js
inc
test
bnd
push
cmpsl
jb
mov
das
lods
test
xorl
cmp
lea
incb
divl
pop
push
sbb
jecxz
clc
mov
popf
lahf
or
js
sub
and
call
dec
pop
mov
push
inc
pop
sub
repnz
mov
sar
ret
mov
xchg
mov
push
mov
sub
add
dec
mov
call
in
push
lods
arpl
cmp
rol
leave
jae
pop
dec
xchg
popa
fsubs
sbbb
cmc
and
ret
js
mov
sbb
push
sbb
nop
je
rcll
lahf
out
cs
cmpsb
repz
push
cmpsb
rorb
fidivrs
or
shll
mov
jmp
push
cmc
xchg
repnz
call
xorb
xchg
cmp
ljmp
jl
shll
sub
mov
mov
lea
test
mov
shrb
push
xor
mov
cltd
push
add
dec
pop
adc
or
insb
pop
adc
xchg
test
mov
outsb
mov
in
jo
in
rep
pop
leave
sbb
aaa
push
cmp
mov
out
test
outsb
ret
lahf
jbe
xchg
fiadds
xchg
and
in
inc
add
nop
fimuls
sub
imul
xor
xlat
loopne
pop
jae
out
shrl
into
ret
cmp
adc
cli
shl
sub
adc
lret
xchg
leave
mov
jnp
inc
ret
mov
loopne
jo
push
and
xlat
fildl
mov
inc
dec
bnd
and
mov
xor
es
enter
fs
call
lcall
cmp
jae
xor
sarl
xor
sbb
lahf
pop
rol
push
test
jo
mov
rcll
mov
mov
clc
inc
ja
cmp
lcall
mov
cmp
dec
sarb
pop
mov
outsb
pop
ftst
add
sbb
and
fstpl
dec
ret
and
hlt
add
cmpl
in
dec
inc
lods
ficomps
aaa
movsw
aas
es
data16
lea
push
in
sub
xchg
lds
sbb
nop
push
sbb
aad
cmp
ds
hlt
adc
in
cmpsl
fsubrl
add
mov
and
sub
mov
pop
in
js
xchg
jbe
and
mov
mov
stos
ret
adc
adc
xor
mulb
mov
jle
imul
mov
fisubrl
pop
sub
stos
dec
xchg
xor
aaa
mov
das
cmc
dec
shll
xor
xchg
test
rorl
jl
pushf
fsub
jmp
sub
xchg
adc
gs
add
mov
loop
and
fmuls
sbb
xchg
inc
lock
je
sbb
push
add
stos
icebp
dec
fidivl
repnz
mov
pop
sbb
lock
mov
sbb
add
adc
insl
popa
xchg
in
faddp
mov
push
call
jb
xlat
inc
insb
div
inc
jae
fcoml
jb
aam
leave
stc
gs
jae
out
and
imul
cmc
or
lds
push
addr16
add
int3
push
inc
data16
dec
push
sbb
mov
pop
leave
jg
sbb
pop
cli
fimull
icebp
mov
mov
test
in
lret
pop
dec
int
fimuls
mov
mov
test
popa
rol
and
adc
nop
lods
paddd
mov
call
andl
push
repnz
and
pop
lahf
push
inc
into
dec
add
popa
mov
push
mov
lahf
iret
aaa
xchg
into
pop
fldcw
dec
and
cmc
inc
sub
leave
ret
adcb
adc
xor
jae
bound
xor
jno
imul
je
ret
or
lock
dec
pushf
push
and
mov
mov
push
pushf
add
adc
push
push
sub
cli
jae
test
cmp
mov
sub
loop
ffreep
pop
loop
jo
sub
ficoml
iret
inc
inc
adc
dec
popa
pushf
ja
ret
xchg
sti
daa
mov
push
push
cmpsl
push
sbb
cmp
mov
mov
loope
decb
lods
lds
xchg
mov
mov
int3
pop
loop
in
mov
ds
jp
xchg
push
cmp
mov
aam
xchg
rcll
and
push
ret
add
inc
inc
lea
cli
xchg
out
sub
and
sbb
and
clc
fucompp
dec
add
cmpsb
pop
fsubrp
pop
addr16
movsb
in
cmp
cld
push
xchg
nop
pop
leave
push
stos
jb
jl
loopne
or
outsb
or
sarb
iret
push
fildl
or
rclb
shl
cmp
jae
xlat
fidivs
jl
xor
push
lds
xchg
add
dec
add
pusha
mov
add
ret
mov
sbb
aad
call
sbb
loop
lea
push
iret
arpl
aaa
adc
ret
jo
scas
jno
loope
mov
jb
inc
cmpsl
lds
dec
and
loop
movsb
mov
xor
les
jo
pop
push
lds
cld
fnstsw
mov
sbb
pop
mov
pusha
add
aaa
bound
or
fldl
ret
xchg
dec
ret
loop
jecxz
ret
ret
cmpsl
jo
test
dec
outsb
pusha
stos
sub
mov
repz
lock
and
and
fwait
mov
pop
sbb
cltd
mov
sbb
movsb
ja
push
loopne
pop
lock
pop
clc
ss
out
sub
xor
dec
dec
ljmp
int3
or
test
inc
lods
or
pop
lods
jno
fisubrs
xor
ret
jnp
loop
cltd
inc
popf
fimull
pop
pop
mov
push
push
clc
mov
ja
int3
out
pushf
clc
xchg
das
leave
vmulss
test
push
out
or
or
int
mov
lock
iret
mov
outsl
pop
or
cltd
mov
shll
loop
insl
outsb
inc
and
mov
cmpsb
lcall
mov
or
sub
jle
es
pop
push
jle
cmpsl
pop
addr16
mov
pop
popa
out
jl
in
mov
shll
addb
and
sub
sub
xor
push
loop
mov
jg
cmpsb
xor
add
cmp
in
popf
popa
dec
xor
test
in
icebp
dec
fnstenv
fiaddl
sbb
repnz
and
mov
in
push
cmp
dec
jns
andb
pop
aaa
mov
in
mov
ret
lret
fcoms
cltd
sub
push
pop
lods
pusha
imul
sub
pop
cmp
and
iret
inc
and
xor
jns
imul
sbbb
ja
pusha
pop
hlt
sub
mov
fsubs
pop
ret
enter
ficomps
add
pop
xchg
adc
xchg
sbb
push
dec
and
xchg
scas
adc
into
xor
int3
data16
cli
and
repnz
dec
and
jo
xor
addb
ret
inc
dec
sbb
das
sub
call
ret
fwait
jne
dec
or
xchg
rcl
sbb
fistl
lea
xor
or
pop
sub
cmc
adcb
rcr
mov
rcr
push
mov
xlat
jg
sbb
cmp
and
dec
pop
loopne
mov
pop
in
xchg
xchg
fldl
popa
pop
mov
pushf
push
mov
scas
es
popf
enter
pop
push
pop
sub
fldt
ja
sub
gs
mov
cmp
enter
xor
mov
cmp
and
aas
sbb
push
in
inc
push
popa
jno
mov
add
data16
test
stos
adc
popf
subb
loopne,pn
cmp
pop
aam
stos
mov
xor
dec
ljmp
sbb
daa
aad
add
minps
cli
inc
lds
cmp
sbb
push
divl
int
xchg
dec
movsb
test
or
aas
pop
push
lret
sub
int
mov
into
scas
hlt
lds
mov
add
add
rcrb
into
stc
mov
push
xchg
xchg
lret
incb
xchg
subl
mov
fcmovne
or
xchg
subl
int3
imul
sub
sbb
inc
mov
push
roll
ss
dec
daa
test
mov
mov
sbb
divl
repnz
xlat
decb
test
mov
movsb
pop
adc
loopne
jae
and
add
js
insb
inc
movsb
fists
sbb
lcall
dec
fsubl
jno
dec
sbb
mov
sub
imul
out
pop
dec
xchg
mov
adc
into
les
mov
xchg
push
xchg
sub
mov
jecxz
xchg
out
roll
stc
lahf
bound
fidivl
add
or
rep
sub
sub
push
mov
repnz
fdivp
push
iret
or
repnz
pushf
test
fsubl
jecxz
sub
loopne
inc
dec
inc
movsl
cmc
lds
aam
inc
xlat
in
cwtl
iret
shl
jae
mov
xor
lret
lods
jle
mov
cmp
aas
sahf
fcmovb
inc
sbb
cmpsl
mov
lods
mov
fistps
dec
fisttpll
pop
jne
loop
or
mov
ret
ret
rcr
cld
ret
xchg
call
insb
test
and
dec
xchg
stos
lcall
pop
jae
sub
and
mov
mov
pop
cmpsl
adc
std
cmp
xchg
cmp
js
inc
gs
xor
fs
pop
jbe
add
push
addr16
adc
sbb
cmpsl
fdivl
stos
or
ret
add
into
mov
jae
divb
and
push
cmp
inc
into
jmp
pop
jae
and
pusha
sti
fnstsw
inc
pop
mov
int3
push
adc
sbb
sti
pop
jne
and
pop
repnz
insb
pop
adc
pop
mov
bound
decb
mov
inc
int3
rcrl
dec
inc
jns
adc
movsb
rorb
jne
in
rcl
std
sbb
in
dec
mov
pop
mov
ja
jmp
add
cmc
int
xchg
lahf
xor
icebp
mov
loopne
fbld
es
mov
mov
jmp
push
inc
loopne
and
lcall
and
loop
nop
popa
add
in
or
in
dec
sub
sbb
lods
and
leave
loope
fiadds
imul
mov
push
mov
shll
push
inc
push
loop
mov
dec
loop
push
mov
popa
add
mov
je
decb
and
call
hlt
cli
add
pop
inc
pushf
aam
cmp
cmp
lahf
mov
mov
outsb
ret
jo
imul
push
arpl
loop
xchg
push
push
dec
jno
mov
ficoms
popa
repnz
dec
fmuls
cltd
data16
mov
pusha
es
sarb
fucomp
sub
push
cmp
out
push
jp
push
pop
cwtl
fcomip
pop
repnz
aas
push
fsubrl
push
and
stos
sub
jmp
mov
rol
xor
ja
sub
xchg
jbe
sbb
in
call
scas
push
fidivl
stos
ljmpw
stos
xor
lea
dec
inc
out
inc
lret
push
out
xor
inc
lods
mov
and
xchg
notb
les
gs
sbb
inc
fistpll
jp
cmpsb
xor
dec
add
and
sbb
jecxz
bound
int3
push
xor
leave
dec
mov
je
dec
push
cltd
cwtl
mov
es
push
push
fwait
mov
mov
popa
lds
lock
sahf
cmp
fs
fdivrs
pop
sub
push
cld
leave
call
stc
xchg
cmp
jae
ret
mov
testl
in
inc
hlt
lock
lret
je
xchg
sub
xor
push
push
mov
ret
lock
sbb
jle
mov
enter
lods
add
out
test
jge
insb
xlat
fiadds
xor
mov
or
jecxz
insl
mov
aas
sarb
fs
and
xor
mov
pop
and
xlat
add
ljmp
aad
repnz
push
sarb
in
pop
adc
mov
ficomps
inc
sbb
sub
cmovb
mov
adc
or
leave
test
iret
js
sahf
js
pop
add
inc
cmpsl
jmp
inc
fnsave
and
popa
push
out
loopne
dec
fisttps
mov
int3
xchg
dec
ds
push
push
ffreep
push
xchg
sub
add
adc
arpl
inc
sbb
mov
jb
pop
mov
mov
xchg
repnz
mov
jne
push
ret
and
adc
sub
orl
lock
enter
test
es
imul
ret
fsubl
sbb
sbbl
cmpsl
cli
jno
push
pop
subl
out
out
xchg
push
cltd
mov
xor
repnz
mov
push
dec
subb
cmc
mov
mov
push
dec
ja
xor
ficoms
xchg
cld
aam
cmp
push
arpl
pop
movsb
vsubps
insb
mov
sbb
fidivs
ljmp
fisubs
mov
ss
inc
lcall
cld
xor
std
add
or
or
cmpsl
mov
xchg
arpl
aas
cmp
sub
pop
js
outsb
inc
jmp
sbb
rcl
dec
ret
add
repz
adc
out
mov
and
push
data16
mov
xchg
push
subb
cmp
inc
cli
add
push
test
adc
in
movsl
stos
cmp
xchg
add
pop
in
loop
repz
and
sub
repnz
and
push
lods
jb
aas
xchg
aaa
push
imul
mov
add
aam
jno
xchg
sbb
outsl
add
xchg
jb
dec
mov
add
scas
arpl
addr16
push
jae
in
adc
mov
or
xor
je
shlb
fs
ret
rolb
jecxz
ret
dec
bound
lods
sbb
aas
push
call
mov
xchg
pop
pop
mov
popa
mov
in
iret
int3
outsb
rcll
ss
cmpsb
xchg
pop
xchg
lds
clc
jbe
pop
sub
inc
aas
add
xor
enter
cltd
adc
ret
xlat
and
mov
push
fadd
push
mov
ret
insb
sbb
sbb
ja
push
sub
mov
aaa
mov
mov
jns
mov
mov
je
es
or
pop
sbb
es
je
xor
cmp
jmp
and
jge
lret
pandn
fiadds
incb
jl
sti
pop
mov
lds
lret
jne
lods
inc
cli
jl
jo
js
lds
dec
psadbw
dec
dec
sbb
push
iret
dec
add
pop
push
jns
push
addr16
adc
push
add
test
pop
insl
call
jno
fsubs
imul
or
sbb
xor
lahf
pop
repnz
adc
cmpsb
cmp
adc
lret
pop
daa
ds
imul
ficoms
ljmp
push
add
inc
cltd
push
lea
adc
mov
test
popa
and
cmp
push
sahf
inc
ret
jne
aaa
lods
jmp
neg
add
sub
shl
sbb
add
fimull
push
cmc
adc
rcll
push
mov
lret
mov
jo
cmp
mov
inc
cmp
repnz
gs
fs
mov
jo
cmovb
repz
pop
scas
imul
xor
jecxz
fsubrs
inc
mov
push
dec
adc
lea
dec
lods
pop
dec
sub
inc
pop
xchg
or
aas
dec
cld
mov
pop
aad
push
mov
jl
sub
test
inc
dec
xchg
loopne
xor
hlt
imul
jne
mov
xlat
push
jae
pop
jae
add
inc
inc
pop
pop
fstp
mov
sbb
fdivrs
inc
lods
sub
cmp
mov
arpl
fdivs
insb
dec
dec
xchg
mov
push
int3
aad
daa
cmp
and
stc
out
or
repz
pop
outsl
adc
lcall
cmpl
in
pushf
mov
sbb
pop
test
adc
clc
pusha
jmp
inc
or
std
add
cmp
mov
lret
or
ret
push
in
ret
add
add
push
cmp
cmp
rcrb
mov
sub
es
testl
or
scas
jbe
rcrb
in
rorl
lret
xorl
roll
xchg
add
push
inc
in
cwtl
mov
jns
test
in
movsb
aas
mov
stc
pop
imul
and
dec
push
mov
xchg
lret
mov
dec
xchg
push
jge
add
jb
popa
in
ja
nop
sub
in
pop
lds
lea
cld
sbb
xchg
dec
outsl
sarb
adc
jb
mov
lret
sub
jmp
xlat
jp
push
mov
subl
popf
lret
adc
add
push
iret
imul
sub
iret
dec
push
sub
fildl
jnp
sub
pusha
jecxz
aam
out
movsb
jo
rorl
subb
add
or
and
sub
and
jae
rolb
daa
pop
pop
out
cmp
jmp
mov
cmpsl
out
repz
push
arpl
cmpsl
inc
xchg
ret
retw
pusha
xchg
xchg
add
fcmovnbe
sub
shrb
out
dec
outsl
or
decb
movsb
jl
pop
iret
pop
rcr
pmaxsw
fimull
push
add
push
popf
loope
stos
int
insl
inc
cwtl
pop
pop
jbe
lods
mov
sub
divb
mov
dec
pop
mov
sahf
sbb
enter
addb
and
and
rcrl
push
nop
sbb
cmpsl
mov
mov
or
fists
and
push
ret
xor
jo
pop
adc
mov
out
rclb
or
push
dec
mov
mov
test
fmulp
out
movsl
xchg
iret
or
lcall
std
dec
push
push
sub
xchg
sar
ljmp
in
mov
popa
inc
insl
ret
sub
push
push
inc
nop
sbb
int3
lret
adc
xor
xchg
into
mov
xchg
jmp
andl
daa
mov
aad
xchg
int
or
sbb
push
mov
enter
test
mov
or
jbe
mov
ds
sub
leave
outsl
ja
mov
xlat
xor
inc
dec
lret
notb
mov
rcrb
mov
or
in
das
push
jbe
std
loopne
dec
jle
xchg
mov
sub
push
jo
sbb
sti
dec
mov
out
lods
inc
xchg
lret
push
and
or
mov
ret
jmp
add
mov
mov
cmc
dec
sarl
inc
push
jecxz
fs
ret
ljmp
scas
inc
push
mov
xchg
popa
js
jg
add
arpl
icebp
repz
popl
xchg
xor
mov
pop
jmp
int3
mov
sub
adc
ret
mov
sbb
sbb
fildl
mov
stos
pop
push
inc
sub
mov
stos
outsb
lcall
js
mov
sub
adc
loope
in
xor
and
das
sbb
fcmovb
repz
std
or
ret
mov
xchg
clc
mov
lret
out
add
lods
rcl
lcall
subb
call
jae
or
sub
mov
mov
imul
popa
xor
imul
mov
movsl
mov
leave
add
push
popa
in
mov
ja
in
jae
imul
inc
adc
add
jo
and
cmp
popa
ja
repnz
add
pop
sbb
mov
imul
cmp
pushf
push
fiaddl
out
push
jecxz
cmc
push
aaa
bound
scas
popa
xchg
iret
cmp
mov
push
xchg
adc
mov
mov
mov
inc
adc
add
shlb
addr16
fdivs
stos
js
ljmp
or
out
inc
lea
pop
cli
aam
sti
mov
pop
push
pop
inc
mov
cltd
dec
lret
and
lds
imul
loop
cmp
dec
es
jnp
data16
xchg
test
cmp
and
dec
lret
dec
and
lret
std
lea
mov
inc
push
pop
inc
decl
mov
and
push
sbb
fisttpll
sti
pop
cltd
stos
dec
fimull
xchg
mov
pop
lar
lock
repnz
jnp
xchg
xchg
sbb
pop
neg
add
adc
lea
std
mov
add
mov
ret
inc
jae
ljmp
sub
sbb
mov
mov
enter
movsl
sub
push
aam
rorb
adc
jmp
push
jmp
cld
xor
sub
repz
sub
insb
or
and
outsb
mov
pop
cmpsl
cmp
rcrb
jae
gs
lcall
out
pusha
loop
mov
sbb
jge
daa
mov
pop
mov
xchg
xor
ret
addr16
sarb
adc
repnz
or
cmp
sbb
sbb
fimuls
pop
mov
fcoml
js
inc
insb
fbstp
pop
cmp
in
or
loopne
test
push
mov
mov
test
outsb
in
mov
andb
in
xlat
jns
add
push
and
mov
mov
idivl
test
xchg
mov
ret
add
scas
pop
pushf
and
pusha
pusha
fisubrl
fmul
cmc
inc
adc
scas
mov
jmp
mov
shrb
dec
nop
xchg
jmp
mov
lods
int3
jo
xchg
jge
aas
test
in
aad
xchg
inc
push
xchg
inc
stos
enter
loop
fbld
sbb
jmp
pop
inc
in
stos
cmpsb
pop
in
jno
mov
loopne
mov
ds
jg
jle
xchg
cld
movsl
shll
and
add
mov
dec
data16
aam
into
scas
jp
pop
push
repz
sub
add
leave
iret
and
into
loopne
lea
ss
cmp
and
cmp
jbe
xchg
lods
in
cld
xlat
fwait
push
or
cmp
dec
sub
push
lret
mov
jae
add
dec
inc
or
sbb
loop
xchg
aas
mov
cmpsl
xor
rcrb
sahf
rcl
arpl
dec
incb
mov
mov
movsl
cltd
mov
adc
jbe
dec
nop
cmp
popf
imul
sbb
or
and
popa
sbb
lahf
leave
nop
aas
cmp
pop
lret
out
icebp
rol
dec
fdivl
stos
adc
mov
adc
inc
nop
inc
les
cli
jl
filds
mov
ffreep
fcmovb
mov
xor
shll
mov
leave
xchg
mov
jo
xor
ret
lcall
mov
mov
cmpsb
ret
xchg
xor
call
add
in
pop
icebp
inc
add
and
mov
add
pop
and
out
loop
lret
mov
dec
push
push
push
adc
aad
sbb
mov
ret
test
pop
fisttps
cmpl
push
inc
rclb
vpsllw
decb
aas
call
ret
decb
sub
scas
loop
jecxz
or
mov
ret
push
hlt
xchg
add
lret
ret
ja
dec
scas
enter
rol
test
std
call
xor
lods
dec
test
mov
push
push
loop
ret
icebp
xor
pop
lret
xlat
pop
xor
or
roll
mov
push
arpl
shl
push
cmpsl
stc
cmpsb
aas
lahf
xor
cmpsb
jne
cmp
and
mov
cmp
inc
insl
add
push
daa
cltd
nop
xchg
xchg
jmp
stos
inc
and
jae
ret
jmp
adc
aad
rorl
ret
xchg
subb
sub
repz
in
inc
push
test
imul
cmp
xor
movsb
sbb
testl
mov
inc
inc
jp
inc
pop
push
inc
adc
cwtl
ljmp
sbb
mov
les
push
adc
push
mov
ret
sbb
ret
pop
jbe
or
stos
or
out
push
mov
inc
dec
lcall
xchg
and
inc
mov
jecxz
pop
and
add
aam
mov
mov
cltd
mov
lcall
mov
add
mov
xor
and
push
or
ljmp
inc
push
sub
xor
xor
in
mov
iret
das
pop
pop
sub
inc
insl
adc
lea
cmp
push
lahf
dec
pop
xor
aad
repnz
pop
add
ret
popa
lea
pop
cmpsb
and
out
mov
add
aad
xchg
push
inc
adc
int3
decb
mov
mov
aaa
fadd
ror
ffree
imul
cs
adc
outsb
sub
sbb
pushf
mov
popa
inc
mov
cmpsb
sti
les
in
ret
repz
cmp
arpl
adc
xlat
mov
shrb
clc
lock
mov
or
inc
inc
ret
into
out
mov
lcall
in
nop
mov
cmp
cmpsl
sti
pop
lods
repz
outsb
adc
mov
repnz
mov
ficompl
xor
or
xchg
out
lcall
subb
and
cmp
fiaddl
repnz
jbe
decw
adc
dec
push
fisttps
mov
inc
dec
xor
jo
and
mov
lods
jb
test
mov
sahf
or
push
pop
pop
mov
push
jle
adc
lahf
jne
sub
push
or
push
mov
test
ret
lea
sar
roll
xor
sbb
pop
jp
ja
ja
cmp
xchg
sbb
mov
sbb
xor
sarl
rorb
sbb
xchg
push
rcll
adc
mov
inc
ret
cmpsb
lods
jle
add
daa
mov
pop
mov
adc
push
rclb
sti
clc
jb
adcb
fisubrs
xor
scas
mov
add
lret
sub
cmpsb
jo
hlt
ficompl
sub
jmp
movsb
push
xor
mov
je
arpl
repz
loop
icebp
xchg
pop
out
and
enter
dec
xchg
jecxz
dec
les
ret
lcall
cmp
test
nop
push
adc
mov
cld
adc
lret
or
pop
sbb
hlt
and
sub
loop
jmp
xor
lret
sbb
or
jmp
or
popa
or
lret
imulb
es
outsb
push
sbb
xchg
adc
mov
lods
fisubs
mov
pop
addr16
cmpsb
mov
jb
repnz
popa
sub
aas
adc
or
stos
xchg
sub
push
jg
dec
rcrl
add
inc
mov
ret
and
idiv
fisttps
pop
in
nop
or
xchg
iret
cli
sbb
push
bound
pop
adc
popa
out
subb
xor
add
js
add
add
jmp
adc
pop
and
fidivrl
inc
out
cmpsb
mov
cmp
movsb
sbb
hlt
inc
push
xor
push
mov
cmp
mov
into
sub
outsl
fwait
push
fimuls
cmp
in
mov
gs
sti
rcrb
sbb
and
ficoms
lods
inc
sub
sarb
and
movsb
inc
jb
repnz
sub
and
subb
adc
in
mov
pop
mov
mov
fs
xor
fdivs
xchg
mov
adc
inc
lds
iret
or
sbbl
loop
jge
scas
arpl
in
movsl
sub
jae
repz
pusha
inc
int3
repnz
push
mov
scas
push
stos
xchg
aam
sub
mov
push
push
sub
mov
inc
push
pop
aas
fwait
sub
inc
add
push
inc
notb
shrl
or
add
out
outsb
xor
mov
andb
repnz
mov
jmp
and
jno
pop
sbb
push
rcll
pusha
inc
lret
pusha
outsl
add
gs
and
fadd
pusha
andb
push
push
mov
or
xlat
cli
cmpsl
xchg
imul
mov
lods
dec
pop
jecxz
inc
inc
repnz
cmp
push
cmp
inc
std
sti
and
pop
insl
jae
les
scas
xchg
ficoml
mov
push
popa
inc
fisttpll
push
in
in
lcall
fbstp
icebp
mov
in
jno
js
and
filds
pop
movsb
fs
inc
cmpsb
pop
push
add
pop
dec
out
mov
mov
sub
popa
push
push
scas
ret
ljmp
and
mov
in
add
cmpsl
pop
pop
inc
cmpsl
sub
daa
xchg
cmpsb
xchg
pop
mov
push
xor
jo
sbb
inc
andl
add
dec
jnp
mov
push
mov
lea
repnz
add
aam
adc
mov
push
pop
inc
dec
in
or
jno
push
xlat
int3
or
sub
mov
push
dec
push
lcall
jmp
shrb
imul
mov
addr16
mov
pop
popa
cmpsb
mov
xor
clc
xchg
sbb
outsl
popf
jecxz
add
lret
repnz
jne
xor
sbb
repz
cmpsl
clc
add
sub
inc
sub
mov
dec
mov
cmp
fucomip
jne
mov
imulb
popa
fistpll
inc
in
push
adc
xchg
pop
in
inc
cmc
or
mov
adc
inc
jb
xchg
cmp
mov
pop
scas
mov
imul
ja
push
popa
enter
inc
push
jnp
push
insb
mov
test
test
sahf
jne
cld
andb
outsl
lods
xchg
pop
push
scas
sbb
push
push
push
ret
xorl
inc
pop
xchg
orb
test
pop
movsb
sub
fildl
repnz
jl
pushf
jns
lahf
popaw
and
xor
jmp
lock
adc
pop
jecxz
nop
loopne
icebp
inc
inc
adc
ss
cs
push
lcall
inc
lcall
decb
scas
mov
jno
jne
int
sub
out
mov
jecxz
inc
loopne
ret
mov
out
outsb
pop
lret
dec
or
in
aad
pop
dec
mov
inc
jp
pop
cmp
pop
in
inc
and
jmp
sbb
dec
add
ret
adc
cmpsl
lods
movl
out
lock
or
adc
in
add
stc
cmpsl
jl
push
sub
mov
vpsllq
cmp
test
add
in
sub
pop
push
fdivrl
popa
aaa
les
inc
cmp
xchg
adc
inc
out
or
lods
out
mov
inc
lods
fwait
cwtl
cmpsb
xchg
popa
add
leave
gs
int3
adcb
out
sbb
addr16
jo
mov
cs
dec
mov
pop
cmpsb
add
mov
sub
sub
or
adc
cltd
inc
repz
sub
orl
push
dec
gs
or
mov
pop
sahf
adc
mov
xor
xor
mov
xchg
cli
jp
out
fs
or
mov
mov
xorl
adc
cltd
insl
mov
loopne
pop
lods
outsl
stos
mov
sbb
mov
xlat
jle
push
call
shlb
xor
aaa
inc
inc
fcoms
mov
cs
lar
daa
add
iret
repnz
cmpsl
ret
and
imul
sub
jo
lods
out
enter
mov
dec
bound
in
xchg
test
mov
xor
push
pusha
div
adcb
cltd
mov
cmp
cmc
jg
jp
aam
mov
movl
sbb
adc
sbb
pop
jo
out
insl
pop
mov
add
push
inc
xchg
dec
sti
mov
shll
sub
add
dec
pushf
mov
leave
sub
ja
aam
inc
mov
push
push
push
bt
leave
aas
jge
adc
ja
sbb
addb
into
mov
aas
lock
into
lret
jns
xchg
lret
mov
daa
and
push
jae
xor
adc
int
jg
push
and
stc
push
push
pusha
jecxz
gs
xor
pusha
or
xorl
pushl
dec
or
subl
iret
jb
stos
xor
andl
add
shll
nop
scas
xor
into
das
and
jecxz
push
xor
xchg
sbb
icebp
repnz
push
addb
mov
dec
stc
imul
and
repz
stos
insl
ret
jp
pop
jecxz
push
insl
lods
cmpb
xchg
enter
mov
fisttpl
push
in
sub
xadd
out
rclb
inc
fmulp
test
push
sbb
decb
movb
and
or
inc
nop
or
scas
fadd
inc
js
mov
inc
inc
ret
pusha
mov
pop
addr16
add
inc
push
inc
dec
push
or
xchg
test
jo
add
mov
jecxz
rolb
dec
ss
shl
out
mov
loop
mov
sub
repz
mov
inc
pop
push
push
lret
movsb
aas
jle
adc
inc
xchg
pusha
adc
mov
ret
popa
sbb
cmp
je
lret
ret
nop
popf
adc
pop
jge
pop
bound
loop
aas
sbb
mov
jo
in
das
jl
xchg
jge
xlat
cmp
push
jbe
rolb
std
jae
out
int
or
add
adc
and
xchg
push
cmpl
push
xchg
cmpsl
sub
or
call
das
push
test
push
mov
inc
and
push
add
mov
popa
js
push
pop
push
inc
dec
les
pop
aam
int
adc
imul
inc
mov
pop
aaa
dec
dec
and
add
ret
mov
sub
push
rorb
sbbb
fnstsw
lret
pop
aam
push
xchg
jae
orl
mov
adc
insl
pushf
push
insb
frstor
lret
lock
xchg
test
add
jno
cmpsl
fdivr
add
mov
cmpsl
into
push
mov
andl
pusha
call
je
mov
push
inc
rcrl
pushf
insl
fwait
and
pop
sbb
dec
movsl
dec
push
test
inc
push
pop
pop
inc
pop
and
dec
loope
pop
inc
pop
or
ret
icebp
dec
inc
mov
jb
mov
lods
clc
cmp
dec
or
out
mov
loopne
iret
dec
jno
jns
leave
out
dec
push
and
leave
mov
ret
andl
ror
loop
cmp
mov
popa
sbb
out
sbb
jecxz
cmp
into
psubusw
jecxz
dec
lret
pop
call
cmp
and
mov
xor
call
cmc
sub
mov
into
leave
add
int
push
xchg
xor
dec
jnp
test
dec
notl
xor
shlb
loopne
cwtl
addb
xchg
data16
pop
insb
push
movsl
or
or
fdiv
enter
pop
into
push
push
pop
clc
or
mov
push
test
lds
sub
xor
add
test
incb
or
fists
adc
nop
call
pop
ficompl
cmp
repz
sub
mov
into
fisubrl
or
dec
mov
shll
loop
fcmovnu
in
mov
das
aaa
daa
lret
arpl
mov
push
sub
pusha
lret
out
cmp
into
and
sub
call
rol
loop
pop
push
jp
inc
mov
subl
jecxz
or
ds
and
push
inc
ret
add
jp
jecxz
inc
call
nopl
int
jmp
orl
nop
mov
push
cs
jb
icebp
add
xchg
push
repz
jbe
sbb
hlt
lret
nop
push
sbb
out
xor
cld
jmp
and
xor
mov
sbb
xor
pop
xor
out
cmc
stos
cmpsb
or
leave
lcall
aas
stos
sbb
scas
sbb
nop
push
clc
mov
push
pop
or
movsl
jl
fwait
mov
push
decl
lret
test
pushf
lods
cltd
inc
push
xchg
or
adc
cmpsb
dec
insl
aas
test
push
mov
mov
cli
xchg
jge
cmpsb
pop
leave
int
fidivs
jg
and
sub
mov
cs
and
xchg
sar
fildl
or
addr16
mov
fcoml
idivl
inc
or
and
cs
sbb
ds
mov
jne
pop
ret
cli
lods
sbb
fwait
sbb
in
add
pop
pop
xor
dec
mov
pop
and
mulb
stos
pop
arpl
sbb
fidivs
arpl
dec
outsb
mov
and
fsubrl
arpl
sub
out
pusha
mov
mov
test
imulb
repnz
fs
cld
lods
mov
jns
gs
and
test
xchg
push
icebp
push
leave
push
decb
add
pop
mov
ljmp
sub
mov
imul
dec
lods
repz
push
sahf
xor
add
cmp
call
and
inc
inc
daa
jae
in
ficoms
sub
sbb
lea
subb
cmp
loopne
scas
pop
xor
jmp
out
push
jp
lea
dec
loopne
outsb
xchg
push
scas
push
push
frstpm(287
ds
stos
enter
xor
shll
cmpb
cmp
xchg
sbb
daa
jle
or
test
jl
divb
push
fldenv
mov
call
jbe
and
xchg
cmpsl
les
cli
mov
cld
push
fcoml
enter
pop
and
ret
mov
xor
push
push
movsb
and
jnp
add
lahf
add
cmc
pop
add
daa
push
sub
ficomps
ss
and
or
inc
push
scas
in
adc
popf
mov
andl
lret
mov
leave
mov
mov
rorb
xlat
cmp
test
iret
cltd
pop
sub
or
nop
cmp
lret
mov
mov
fcmovbe
imul
pop
out
add
outsl
push
jecxz
repnz
jno
insb
sti
jne
jno
in
cmp
arpl
repz
pop
leave
sub
add
mov
sti
dec
orb
insl
xchg
insb
adc
popf
pushf
dec
ret
inc
cmc
inc
add
mov
subb
sbb
xor
add
imul
mov
inc
jb
aas
sbbl
lods
and
cmp
push
xor
dec
sahf
xlat
mov
and
push
cmp
sbb
sti
outsl
adc
addr16
shlb
movsb
ds
fs
jecxz
rolb
fidivrs
je
inc
loopne
sahf
in
or
shrb
and
xchg
enter
int3
push
pop
test
lcall
clc
mov
js
mov
fsubp
fbstp
jno
sbb
icebp
bswap
fidivs
in
mov
mov
jmp
xlat
sbb
and
data16
pushf
push
in
add
fnstsw
jae
mov
insl
scas
or
out
dec
bound
lahf
inc
lahf
and
cmp
and
cli
sti
popa
aaa
jnp
daa
sub
hlt
pop
cwtl
repnz
cmp
push
stos
sub
fidivl
lret
xor
incl
test
xchg
xor
ret
popa
rcr
rol
mov
adc
pushf
add
pop
inc
leave
rorb
addr16
out
es
adc
testb
dec
cmpsl
sub
cwtl
push
adc
xchg
lds
inc
lret
ret
jmp
xchg
into
fsubp
addr16
out
inc
lahf
repnz
lea
adc
pop
push
or
mov
inc
sub
fwait
push
jecxz
pop
push
inc
inc
and
orl
jp
ds
test
inc
push
lods
inc
adc
add
and
popa
lea
lahf
mov
push
jnp
add
mov
mov
push
test
idivl
call
popf
or
mov
inc
pop
cmc
jmp
int
push
mov
inc
scas
jbe
push
xchg
sub
into
push
dec
pop
aam
add
popf
out
in
loopne
enter
xchg
in
adc
add
je
gs
add
pop
adc
jo
or
sti
leave
sub
push
es
push
push
inc
or
dec
jmp
mov
sti
xchg
fcmovnu
cmp
insl
add
faddl
adc
push
xchg
or
repnz
push
ret
movsl
call
inc
push
aas
mov
inc
rcrb
cs
jg
out
mov
push
jnp
insb
mov
sub
mov
adc
insl
sub
xor
pop
lret
cmp
in
mov
outsb
jno
jo
fistpll
sub
fsubs
add
lds
hlt
fisubl
ret
pop
fs
js
and
xorl
pop
adcb
cltd
dec
std
andl
insb
movsl
push
std
in
cmp
sbb
inc
mov
push
outsl
inc
jmp
inc
mov
orb
repz
and
jecxz
ret
jmp
jb
cltd
sbb
lods
fs
test
and
pop
push
push
in
xchg
sbb
xor
lds
adc
ret
dec
dec
and
imul
or
ret
bound
push
dec
loopne
inc
rol
jae
stc
inc
lret
inc
decb
adc
and
testl
icebp
jne
and
and
cld
ja
sbb
popf
or
add
hlt
bound
push
stos
lods
pop
imul
sbb
push
dec
jae
sub
or
cmp
pushf
lret
aas
in
bound
xlat
mov
shll
xlat
test
out
jge
arpl
xor
mov
out
jl
sbb
mov
loopne
push
push
pop
ljmp
push
daa
cld
and
insb
inc
jecxz
neg
lds
aas
jle
roll
in
and
popf
inc
int
push
sub
shrl
lods
push
aas
xchg
outsl
shll
ret
lods
fs
pop
sub
adc
lret
mov
jae
pop
pop
and
xchg
inc
data16
les
lods
cmp
repnz
mov
test
jo
aas
cmp
sub
lds
ret
adc
je
sub
push
out
jle
popa
xchg
sub
xchg
adc
data16
jp
pushf
xchg
inc
pusha
add
repz
leave
fbstp
ja
adc
jmp
into
test
mov
scas
cmp
push
es
sub
push
jle
pop
push
aas
lods
or
cli
jg
nop
orb
sti
jne
push
pop
sbbl
mov
mov
adc
ret
sbb
std
mov
pop
aad
iret
std
ret
sbb
adc
push
jmp
sub
mov
push
push
shll
lea
xchg
push
addl
jnp
movsb
in
adcb
push
pop
pop
cmp
sbb
dec
push
gs
movsb
dec
outsl
movsl
lahf
xlat
xchg
lret
dec
push
lret
les
mov
push
and
sbb
sub
jmp
dec
subb
shrb
lret
inc
adc
sahf
sub
popa
mov
lahf
daa
lds
fmul
push
repz
jecxz
es
daa
sbb
and
movsb
xor
sub
pop
inc
imul
cmp
test
mov
xchg
jmp
shrl
imul
inc
sbb
dec
jae
dec
mov
pop
ficoms
push
pop
in
dec
gs
in
pop
inc
ja
in
and
repnz
aas
push
mov
xchg
test
inc
adc
test
push
fisubl
mov
fcoml
inc
movsb
imul
dec
in
lret
ds
out
add
xor
out
subl
scas
add
enter
in
in
and
push
add
xor
mov
icebp
xchg
pop
fstp
out
xchg
cmc
xchg
inc
outsb
push
inc
addl
mov
adc
test
sti
add
addl
fbld
inc
lea
push
arpl
inc
out
es
bound
lret
mov
add
movl
rcll
sbb
loopne
fisubl
daa
xor
gs
loop
dec
jne
sub
jecxz
sub
fs
loopne
jbe
into
sub
inc
lock
loopne
add
xchg
mov
mov
jge
push
cmp
mov
sbb
mov
push
adc
cmp
sub
xchg
pop
inc
in
rol
mov
mov
dec
sub
inc
ret
cmp
fisubs
and
pusha
scas
fwait
jne
and
lahf
push
insl
sar
gs
fwait
push
repnz
int
xor
dec
fwait
push
repnz
fwait
jbe
dec
sub
sbb
jmp
lcall
xor
cwtl
fwait
stos
lret
jbe
movsl
xorb
adc
adc
mov
cmpsb
xchg
fisttps
pop
imul
faddl
cmc
insl
or
scas
mov
fdivs
or
dec
xchg
lcall
fidivrs
and
pop
jmp
lea
jecxz
xchg
popa
push
addr16
cltd
rolb
ret
or
xlat
xchg
pushf
fucomp
neg
mov
jo
sbb
fbld
ret
cs
das
movsl
add
push
jb
psrlw
aas
adc
dec
ret
icebp
sbb
fdivrl
jg
mull
pop
jl
push
loop
dec
ret
lret
adc
jbe
and
loop
pop
mov
push
push
fiadds
or
je
mov
mov
bound
lahf
jno
bound
add
cli
cmp
mov
sbb
mov
rcrb
mov
inc
xor
jae
inc
xchg
xor
movsl
leave
push
cmp
lret
xchg
adc
js
add
push
clc
dec
cmpsl
jbe
mov
sahf
test
mov
ret
sbb
sub
imul
jmp
stc
adc
or
mov
push
inc
call
pop
sub
xchg
addb
fnstsw
je
fisubrl
add
and
inc
std
leave
movsl
push
mov
jb
sbb
test
test
push
xchg
dec
icebp
in
dec
cmc
in
xchg
outsl
ret
jp
sbb
xor
clc
aaa
push
insb
fimuls
and
xor
inc
jle
mov
sub
imul
mov
arpl
std
add
cwtl
and
dec
repnz
mov
xchg
push
int3
mov
aas
push
cltd
pop
dec
cmpsb
xor
add
lret
or
lahf
les
push
popa
fildl
cmp
mov
and
or
shrd
xor
addl
mov
test
aas
or
leave
popa
push
nop
jne
out
imul
pop
xor
lret
scas
cmp
sahf
aaa
mov
xor
into
dec
xor
scas
aas
sub
mov
stos
add
pop
dec
adc
adc
bound
push
stc
pop
or
popf
mov
xchg
or
jae
rorl
push
push
es
mov
ret
je
popa
sbb
or
ss
mov
popa
jmp
pushf
add
iret
pop
push
mov
add
mov
sbb
repnz
cld
mov
mov
lret
xchg
sub
out
cmp
push
cld
insb
xchg
mov
aad
xchg
mov
pop
out
nop
cld
push
mov
sub
mov
mov
out
xor
adc
fwait
push
jae
jb
cltd
dec
cmpsl
xor
movsl
push
daa
xor
push
sub
jne
add
jge
adc
mov
mov
xor
out
in
add
clc
mov
pop
decb
dec
popa
data16
pop
jo
sub
inc
std
dec
mov
fbstp
stc
aas
pop
sbb
iret
mov
lahf
lock
popa
cwtl
stos
scas
fdivr
mov
sbbl
cmpl
pop
push
enter
mov
sbbb
stc
push
fisubs
adc
fdivr
xor
sbbl
scas
ret
or
test
test
and
inc
pop
dec
mov
xchg
ret
arpl
jecxz
dec
je
adc
imul
xor
cld
pusha
scas
xorb
in
int
aad
cmpsb
ret
into
and
cs
xchg
cmp
gs
outsl
cmp
mov
mov
xchg
push
cmpl
mov
mov
fistps
add
inc
jg
pop
into
mov
mov
jo
xor
popf
or
jno
sbbb
mov
pop
jbe
repz
jno
popa
cld
stos
cmpsb
iret
mov
repnz
test
cmpsb
fisubrl
push
mov
test
push
mov
cmp
stc
mov
lahf
inc
aaa
cmp
lea
dec
aaa
rcll
push
cmp
shl
lock
xchg
out
mov
in
jne
inc
push
je
mov
fidivrl
scas
ror
sbb
lods
mov
and
push
and
clc
adc
and
ret
mov
arpl
push
rclb
and
add
jecxz
daa
xchg
xor
mov
mov
cmpsb
push
pop
mov
mov
inc
fimuls
gs
pop
repz
sub
in
fs
mov
icebp
in
dec
xchg
dec
out
push
les
pop
shlb
and
lods
dec
and
xorb
in
push
lods
cmp
call
mov
jmp
sbb
in
addb
lods
aad
in
push
jmp
add
push
pop
lods
sti
sbb
jecxz
push
pop
jb
push
add
pop
cmpsl
or
stos
jge
jb
and
ret
in
bound
out
sbb
jge
push
insb
loopne
mov
pop
aam
sub
scas
cltd
xor
sahf
mov
roll
jb
xchg
jmp
xchg
das
shlb
fimull
inc
shrb
jecxz
insb
or
mov
enter
outsb
push
inc
aaa
or
mov
dec
jl
ss
xor
adc
and
push
or
sbb
jmp
mov
xor
pop
mov
push
sub
call
outsb
iret
pusha
and
jge
xor
cli
popf
fistps
lods
fdivp
es
jae
out
out
repz
xor
mov
iret
inc
add
pop
sub
or
sbb
test
adc
movsl
xor
mov
mov
imul
sub
lds
clc
jnp
mov
inc
add
push
outsl
lret
sub
pop
testl
jle
out
inc
jmp
or
movsl
scas
xchg
into
inc
inc
pop
xor
scas
lods
xchg
std
add
pop
les
loopne
jg
out
fldcw
inc
stos
lret
mov
sahf
lret
insb
pop
mov
inc
cmc
push
mov
pop
xor
add
mov
call
xchg
outsl
mov
xor
subb
addl
mov
push
insb
lds
inc
lahf
fidivrl
fdivrl
mov
push
addr16
stos
sub
sbb
adcl
pop
xor
icebp
jle
cmp
mov
jno
dec
loopne
push
leave
int3
xlat
into
cli
and
les
jnp
stos
fsts
stos
std
or
ret
and
mov
mov
inc
cmpsb
pop
inc
fs
andl
out
lods
inc
repnz
or
push
dec
stos
in
jg
cli
fidivrs
jno
or
pop
ret
or
das
jle
and
push
cld
divb
gs
ficompl
bound
sbb
cmpsl
pop
orl
sub
int3
pop
pop
adc
imul
clc
adc
cmpsb
movsl
test
and
mov
push
jl
pop
mov
pop
push
xor
ret
mov
lock
cltd
push
nop
jmp
inc
pop
inc
movsl
add
sub
les
aas
fildl
mov
dec
add
cmpsl
mov
jp
mov
fidivrs
rcrl
mov
call
add
test
push
imull
cli
add
negb
movsb
jmp
stos
repnz
cmp
push
jnp
sarl
test
or
jne
pop
jne
sub
xchg
scas
fsub
ja
jb
pop
into
jo
pop
add
enter
xor
pop
lret
push
sbb
cmc
push
mov
mov
dec
pop
in
sbb
call
xor
ret
jo
cwtl
mov
sbb
in
jne
leave
enter
ret
in
jmp
push
mov
mov
add
and
into
cli
pop
fwait
lret
lahf
pop
pop
cmp
mov
inc
ss
pop
imul
fcmovbe
fchs
fiadds
stos
jle
sarb
jge
xor
pop
repz
pop
icebp
ret
pushl
or
jl
sub
or
shll
and
add
inc
nop
pushf
outsb
mov
les
aas
sahf
cmp
bound
dec
insl
jecxz
shll
popf
pop
dec
xchg
test
loope
add
mov
inc
cmp
and
xor
dec
mov
inc
lds
or
movsb
daa
mov
sarl
stos
fistps
pop
xor
jle
call
or
inc
inc
or
in
add
jo
cmp
xchg
fsts
fidivl
pop
fildl
mov
pop
movsl
mov
adc
roll
sbb
aaa
inc
nop
xor
xchg
enter
jb
pop
add
mov
ficomps
stos
mov
mov
add
jae
push
popa
sbb
test
mov
mov
sbb
dec
das
dec
decb
scas
leave
mov
mov
aad
incb
data16
pusha
or
es
decb
push
insb
repnz
testl
cmc
mov
mov
cmp
cmpsl
adc
cmpsb
and
insb
xlat
addr16
dec
mov
pop
aam
sbb
dec
push
fisttpll
or
int3
xchg
cmpsl
repnz
jno
or
push
pop
call
aam
shll
push
aas
mov
and
pop
nop
sub
push
xchg
rcll
dec
enter
call
adc
lret
and
add
imul
icebp
mov
test
in
fs
out
insb
pop
xchg
cmp
mov
cmp
cld
mov
fcompl
fildll
in
mov
les
xchg
push
pop
pop
sub
dec
mov
mov
int
pop
sti
pop
scas
push
xlat
jns
xor
lock
pusha
jg
aam
jg
xor
push
stos
pop
and
xchg
pop
pop
sbb
repz
js
mov
mov
addb
aaa
mull
jae
mov
dec
fisubl
sub
xchg
into
data16
repnz
aas
andl
add
into
imulb
pusha
xor
ja
loopne
fildll
inc
add
lret
pop
and
repz
decb
hlt
ljmp
and
into
out
xchg
inc
lds
lods
add
icebp
stc
inc
nop
sub
xlat
out
dec
shll
mov
fisttps
out
xchg
dec
aam
jns
push
add
xor
xchg
shlb
xchg
aad
pop
pop
adc
jo
xor
es
repnz
out
les
popl
mov
fdivr
leave
mov
sub
xor
imul
push
scas
call
push
ret
roll
jp
js
push
daa
add
inc
ret
pop
popa
rolb
pop
add
jae
adc
mov
add
dec
loop
aaa
into
inc
dec
cs
insb
rolb
mov
iret
insl
repz
lds
sbb
jmp
add
mov
and
inc
and
pop
inc
ret
bound
pop
stos
dec
adc
sbb
jmp
fists
fiaddl
ja
xor
sbb
in
jne
das
inc
pop
mov
push
jl
movsl
cmpsb
lret
popf
inc
in
fmulp
aam
pusha
test
sub
loopne
mov
fidivl
cltd
subb
and
sub
pusha
out
cmc
add
inc
jae
inc
ffree
mov
jnp
mov
sbb
mov
push
imul
out
roll
ljmp
pop
jb
push
mov
insb
lock
insl
jecxz
mov
xchg
lea
inc
es
cld
ret
jecxz
movsb
aas
lahf
icebp
jmp
pop
movsb
insb
repz
sbb
loop
fidivs
ja
insl
ret
stos
shl
add
push
cmp
rolb
pop
fwait
movsl
int3
fmull
cli
pop
inc
pop
pop
mov
cmc
add
jns
vcvtdq2ps
add
roll
fcmovu
xor
xor
pushf
dec
nop
xchg
loopne
out
dec
out
mov
adc
push
cmpsl
add
jmp
fistps
sahf
jno
cmp
aad
addr16
aad
inc
xchg
out
mov
fistpll
adc
test
mov
xor
inc
cmpsl
outsb
out
dec
loopne
push
jae
fdivp
pop
mov
xor
sarb
sti
out
dec
loopne
jne
mov
sbb
outsl
into
xchg
lahf
xchg
sub
dec
xchg
outsb
jge
jne
xchg
add
adc
pop
roll
lods
jmp
ljmp
and
xor
je
sbb
dec
notl
loop
fisubrs
lock
adc
xchg
and
enter
mov
nopl
xlat
inc
ljmp
pop
into
mov
jno
popa
add
leave
rorl
xchg
sub
ret
scas
pop
shlb
lds
cmp
lret
fstps
cmp
adc
aad
sbb
out
stos
mov
mov
push
adc
mov
in
push
pop
adc
popa
adc
xor
loope
iret
lret
lret
sbb
fisubrs
mov
or
inc
shl
test
into
lods
dec
cwtl
sbb
nop
rcrl
aas
cmp
fcom
xchg
call
jo
pcmpgtw
fidivrs
outsb
push
aas
mov
push
xchg
loop
fmul
ret
repnz
lods
inc
and
xlat
fbld
mov
xor
push
mov
and
and
test
addr16
mov
add
inc
sub
cmp
subl
jecxz
xor
or
dec
mov
and
xchg
mov
inc
mov
lret
cmc
and
cld
sbb
pushf
add
jb
outsb
or
lret
add
sub
fucomp
push
lahf
dec
rolb
pop
fs
ja
cwtl
mov
out
data16
lret
and
adc
push
push
aas
mov
adc
mov
addr16
stc
xchg
pop
dec
inc
testb
ss
sbb
sub
mov
xchg
jb
sti
jns
add
pop
lret
dec
xchg
sti
out
rcrb
in
and
xchg
ja
mov
dec
push
mov
dec
lods
xchg
mov
push
add
in
mov
inc
sub
xor
lds
int
ret
adc
mov
nop
xchg
incb
add
in
fists
adc
pop
ljmp
mov
inc
and
mov
mov
sahf
push
test
lea
mov
sub
push
in
add
int3
inc
cmp
popa
pop
adc
xorl
mov
add
xchg
add
mov
mov
fcoms
rcr
mov
shrl
mov
cmc
mov
inc
xchg
push
das
lods
add
aam
or
fstpl
lds
sub
xlat
xchg
imul
inc
aas
sbb
rolb
jle
aad
pusha
push
pop
aaa
aaa
sub
or
push
lods
dec
jns
jp
mov
int
iret
fbstp
and
addr16
rorb
cld
dec
add
and
mov
mov
les
mov
repnz
lret
popa
pop
jmp
and
imul
in
add
sub
push
cmpsb
and
fmul
ss
bound
ljmp
test
push
sub
ljmp
jl
adc
data16
outsb
xchg
flds
popa
mov
gs
add
and
and
in
lret
int3
out
into
int
cs
inc
ret
xchg
cmpsb
in
sbb
add
dec
fsubp
lods
push
and
fmuls
jecxz
inc
add
idiv
lret
les
xor
inc
std
jmp
aas
lahf
outsb
sbb
in
add
or
and
inc
mov
mov
arpl
ret
icebp
sub
in
lea
push
pop
gs
shrl
in
cmpsb
test
add
faddp
xor
xor
dec
call
inc
push
inc
mov
push
mov
andl
sub
mov
dec
mov
adc
jb
les
sub
or
jle
jmp
and
sti
add
icebp
and
push
push
inc
adc
jg
jmp
add
or
dec
cld
xor
addr16
jmp
dec
into
inc
std
in
ficoms
jge
mov
inc
bound
nop
jmp
xorl
repz
or
or
test
jnp
inc
sbb
aam
sub
insb
jg
jmp
fidivl
in
fadd
xor
xchg
add
jo
push
loope
imul
cmovge
push
daa
push
or
es
push
test
movsl
fnstsw
xor
sbb
pushf
outsb
sub
sti
add
mov
icebp
lret
scas
add
jo
xchg
arpl
cld
in
push
mov
aas
jg
add
jl
lret
sbb
mov
xchg
pop
stos
mov
lret
xchg
mov
pop
sub
or
loopne
aas
insl
and
aas
mov
fucomip
fcmovu
pop
jb
push
mov
fiaddl
jne
inc
loopne
push
pop
sti
dec
cltd
scas
repnz
in
jmp
pop
fmulp
and
pop
popa
es
out
xor
sub
pop
test
stc
or
inc
push
push
jae
js
adc
mov
popa
andl
test
jo
pop
and
test
and
cmp
fisubrl
test
jbe
push
je
int3
mov
jb
ljmp
dec
movsb
cmpsb
hlt
scas
mov
add
sub
jg
subl
arpl
shl
filds
sub
ret
push
mov
mov
out
pushf
in
fwait
out
inc
lcall
cwtl
jecxz
rorl
mulb
data16
push
ret
jmp
mov
lds
push
sub
repnz
mov
test
rolb
cmc
lods
jmp
gs
test
push
sub
pop
int3
bound
sub
inc
bound
add
aad
ret
aas
jg
or
sub
int3
cmp
mulb
inc
js
popa
mov
jmp
push
and
sub
dec
icebp
mov
mov
inc
adc
xor
popa
xchg
and
add
dec
push
push
aam
nop
iret
mov
mov
repnz
lods
sbb
mov
sub
pop
imul
ret
lret
jmp
jae
call
mov
mov
or
sbb
lcall
push
repnz
les
jecxz
xchg
aam
jo
fisubrs
dec
adc
enter
mov
imul
popf
mov
dec
and
push
push
xchg
fs
insb
xor
adc
pop
sbb
push
in
js
xor
mov
dec
lds
leave
sub
loopne
addr16
imul
xor
sub
daa
call
stos
cmp
sub
or
mov
leave
dec
loopne
cmpsb
and
mov
flds
sbb
adc
inc
jo
jae
ficompl
imul
mov
mov
xchg
mov
pop
into
ljmp
cmp
xor
cli
and
sti
loopne
push
and
pop
push
pop
pop
pusha
icebp
lods
pop
ds
movsb
jns
loopne
cs
jb
fsubs
pushf
xchg
stos
pop
or
adc
outsl
dec
xor
push
test
xor
jmp
add
sbbl
loop
inc
cld
dec
add
jmp
testb
sarb
sub
into
lret
jmp
ljmp
es
inc
inc
rorl
gs
cmc
jns
push
fs
inc
inc
loop
mov
xchg
push
shl
and
es
sbb
push
dec
jae
mov
mov
rcrl
stos
mov
push
orl
lea
in
aas
pop
adc
push
fdivrp
fstpt
sbb
dec
cmpsb
dec
push
fnsave
daa
sbb
xchg
sahf
cmpsb
jno
gs
xchg
xor
dec
sti
add
pop
jno
repz
cmpsl
sahf
xor
leave
jae
xor
adc
push
add
int3
jae
lods
and
adc
fisubs
pop
test
rep
test
cmc
nop
push
cmpl
dec
shlb
subl
lret
ffree
adc
push
ja
dec
incb
jb
inc
push
jo
fbstp
imul
sub
fs
idivb
lds
ret
test
cmp
inc
daa
pop
dec
mov
xchg
lahf
mov
icebp
add
mov
das
sbb
lret
xor
inc
push
cmp
push
and
dec
mov
notb
adc
sub
pusha
xor
loopne
cmpsb
aam
adc
sahf
mov
hlt
or
mov
popa
data16
pushf
pop
pop
pusha
lret
pop
lods
jmp
test
lods
adc
push
fwait
cmp
add
lds
xchg
dec
out
jns
mov
or
mov
and
jnp
fdiv
repnz
xor
dec
sbb
xchg
mov
movsl
jmp
dec
shll
adc
sub
jmp
mov
push
push
rcrl
add
mov
fs
push
xor
lods
pop
enter
int3
mov
cmpsl
in
mov
mov
imul
xchg
test
cmp
sahf
mov
pop
enter
pop
xor
inc
dec
add
icebp
add
addr16
in
inc
dec
mov
pop
negb
cmp
xor
add
mov
cmp
loope
sbb
in
pusha
ret
insl
int3
addr16
idivb
in
in
xorl
inc
pop
fisubrs
or
xchg
cmpsb
mov
addr16
out
lret
dec
fimuls
out
cmp
sub
cmpl
data16
sub
and
daa
push
sub
mov
je
adc
loopne
mov
push
or
xchg
idivl
arpl
pop
xchg
add
dec
leave
xor
in
mov
orb
jne
into
cmpsb
outsb
nop
inc
mov
loop
fcomps
out
sbb
imulb
dec
mov
add
cmp
or
notb
rcrb
out
in
lahf
rolb
test
inc
push
add
inc
shlb
lret
and
fidivs
pop
sti
mov
dec
testl
lds
cmpsl
push
out
push
out
dec
xchg
movsb
mov
inc
clc
push
ret
jecxz
cmp
insl
test
dec
jecxz
pop
pop
xor
mov
xor
jnp
xchg
lock
leave
decl
lret
scas
ffreep
inc
insb
and
ja
lods
or
fs
add
cli
jecxz
call
scas
scas
jo
roll
jg
sbb
dec
adc
outsl
sub
cmpsb
ret
xchg
pop
hlt
int
movsl
xor
mov
xor
lea
xchg
dec
and
leave
or
jo
sbb
lea
add
aad
scas
push
lcall
in
lods
jmp
aaa
int3
stos
pop
mov
fdivs
mov
lock
cmp
fisttpl
add
jmp
fsub
aad
popa
xor
cmp
dec
push
dec
pop
cmp
mov
adc
xchg
sub
mov
insl
stos
add
cmp
push
cmp
inc
enter
pop
ret
pusha
jno
xor
in
xchg
mulb
repz
mov
arpl
or
mov
mov
scas
xchg
shll
pop
and
inc
sub
ss
mov
fidivrl
pusha
popf
ljmp
outsl
inc
jne
inc
aam
dec
hlt
inc
sub
mov
cmpsb
xor
ret
sbbl
mov
lret
mov
out
inc
aas
stos
repnz
into
inc
inc
aaa
dec
aas
mov
ficoml
lahf
ds
dec
leave
xor
incb
mov
xor
mov
mov
and
sub
iret
scas
inc
sbb
loop
repnz
rol
shll
inc
fistps
es
sub
bound
jne
dec
push
jae
pop
inc
test
mov
movl
push
stc
adc
test
sbb
cmp
cmpsl
les
push
ret
movb
inc
inc
jg
mov
inc
sahf
mov
xor
cld
lea
mov
jno
lcall
lea
push
push
addr16
mov
movsb
mov
insb
push
and
mov
dec
fisubrs
and
mov
inc
rcll
lock
push
lret
cltd
sahf
test
push
jae
addr16
sub
jmp
push
xchg
xor
xchg
adcl
mov
mov
push
inc
sub
fdivs
popa
sbb
xor
jg
or
push
and
inc
mov
xlat
sub
ja
out
sbb
adc
xchg
andb
inc
rcr
and
fcmovnbe
jecxz
inc
lods
repnz
cmp
or
add
lds
aam
sub
std
push
cmpsl
cmpl
les
lds
jns
sbb
cmp
fnstcw
push
push
xchg
cli
and
jae
lds
insl
mov
xchg
setno
jb
mov
in
or
mov
jae
adc
jae
addr16
adc
xor
xor
mov
lds
push
mov
mov
mov
je
pop
andl
int3
mov
shlb
scas
dec
neg
mov
push
call
lock
mov
jecxz
shl
jbe
jb
jecxz
dec
rcl
adc
scas
ret
jno
jle
lcall
shll
cmp
xor
xchg
jecxz
cmp
xor
mov
and
incb
stc
daa
les
repz
loop
jno
pop
mov
and
inc
mov
dec
xor
out
mov
ret
or
les
lods
pop
sbb
pop
sub
lods
lahf
cwtl
decb
jo
xor
push
orb
imul
push
push
inc
sbb
arpl
sbb
dec
daa
mov
insb
ljmp
rcr
popa
xor
pop
addr16
call
inc
cmp
nop
pop
rclb
and
nop
xchg
pop
mov
in
dec
repz
cmp
lret
mov
mov
adc
out
stos
mov
into
testb
adc
mov
xor
fs
inc
in
rep
dec
jp
xchg
shr
jae
in
icebp
std
shll
in
fnstenv
loopne
cli
inc
xlat
xchg
out
jg
fwait
orl
inc
andl
std
add
jmp
push
fwait
popa
push
repnz
xor
xor
pop
ret
mov
inc
lea
enter
push
out
and
jecxz
and
mov
inc
movsl
mov
imul
jo
jl
xor
andl
jb
xchg
or
mov
loopne
adc
ret
ja
add
dec
dec
fucomip
mov
jno
push
dec
xchg
ficoml
adc
push
adc
fisubs
add
and
out
outsl
push
shl
or
dec
dec
and
pop
mov
or
imul
sub
cli
adc
imul
pop
sbb
dec
push
out
mov
shrl
push
add
push
popf
movsl
mov
push
rcl
mov
mov
pop
pop
mov
fst
push
inc
cmp
jae
daa
xchg
add
aam
adc
in
bound
add
mov
ss
test
fisubs
push
jecxz
sub
and
cmovb
add
mov
and
push
and
push
add
dec
mov
mov
jne
je,pn
dec
mov
shr
or
repz
and
call
push
rsqrtps
push
addr16
jecxz
fildl
fcmovb
push
in
inc
push
repz
and
lods
imul
repz
dec
mov
xlat
jae
mov
ljmp
jno
mov
mov
sub
test
mov
push
cmpsb
mov
aam
das
call
dec
sbb
cmp
push
cmpsl
fsubrs
dec
cwtl
mov
fcmovu
xchg
push
dec
sub
popa
lcall
and
jp
jmp
mov
add
insl
movsl
dec
ja
mov
push
inc
in
sbb
adc
and
inc
mov
mov
out
fnstsw
jo
dec
lea
pop
mov
lahf
sahf
in
out
xchg
push
cmpsl
xorl
mov
icebp
repnz
arpl
sub
adc
sbb
pushf
leave
inc
stc
cmc
inc
leave
push
jp
ret
add
add
cltd
sahf
out
mov
push
jmp
aaa
neg
dec
dec
jo
ljmp
mov
shrb
jbe
test
sbb
jne
jb
roll
ret
enter
andb
xor
push
out
scas
mov
xchg
jo
sub
cld
push
test
and
jne
pop
cmp
stos
jnp
mov
pop
or
popa
test
arpl
sub
dec
jp
lret
pop
sub
cmp
inc
repnz
pop
dec
mov
xor
mull
ljmp
pushf
and
insb
push
test
mov
pop
pop
push
jo
out
jmp
mov
jae
incb
push
int
stos
pop
cmp
jb
dec
inc
dec
pop
jb
inc
jbe
push
push
fsubrl
or
cmp
or
dec
movsb
data16
ret
repnz
les
xor
adc
jge
cld
addr16
sbb
imul
movsb
dec
mov
out
push
lea
inc
mov
jbe
out
out
sub
imul
sub
js
pop
out
in
dec
jbe
mov
inc
add
bound
in
push
int3
dec
leave
jb
add
pop
push
or
pop
xor
ret
adc
xchg
mov
sub
xchg
or
adc
mov
cmc
insb
popa
push
and
popf
add
xlat
mov
dec
mov
mov
sbb
jmp
add
mov
xor
in
adcl
imul
dec
bound
jo
test
popa
xchg
dec
jmp
fdiv
fimull
mov
enter
ret
dec
inc
inc
xchg
and
adc
mov
pop
inc
mov
testl
add
inc
nop
popa
jge
fs
and
mov
les
leave
test
icebp
or
sub
das
icebp
sub
xlat
mov
out
arpl
adc
les
shrl
cmp
fdivrl
mov
leave
mov
fidivs
loope,pt
data16
mov
push
push
test
mov
xchg
nop
mov
xor
jb
add
dec
dec
xlat
insl
stos
cmp
stc
dec
ret
call
lret
data16
test
lret
out
and
adc
push
shlb
test
arpl
andb
mov
in
insb
cmpsb
lcall
dec
scas
ret
cmp
and
jns
jae
and
mov
sbb
mov
bound
in
cltd
fbld
xor
pop
xchg
xor
adc
add
bound
addl
dec
int3
inc
pusha
lea
jmp
pop
and
cld
das
push
cmp
add
fcom
mov
push
cmp
fiaddl
jecxz
add
and
rorl
decb
lods
and
imul
ret
and
pop
sbb
mov
test
push
and
push
ficoms
push
adc
fadds
ficompl
imul
jnp
cmc
popa
and
bound
int
mov
mov
or
lods
xchg
out
mov
and
push
jg
jg
push
shrb
or
nop
xchg
jb
sub
and
pop
mov
lods
jge
imul
or
adc
mov
insl
ret
sti
mov
add
lret
mov
fstpt
push
cmp
and
xchg
inc
and
addl
inc
sub
popa
inc
or
in
dec
inc
push
mov
in
or
aas
dec
inc
mov
push
andl
jg
orl
dec
lret
mov
fstps
mov
fsts
xor
push
jecxz
sub
enter
push
sahf
mov
push
cmpsl
dec
icebp
inc
jnp
addl
dec
push
mov
dec
inc
inc
aaa
push
out
cli
imulb
xor
leave
inc
aam
mov
dec
repnz
xchg
jb
mov
nop
les
daa
sti
mov
pop
addb
jmp
arpl
js
jbe
dec
andl
arpl
mov
mov
dec
jne
fiadds
and
fidivs
push
inc
add
bound
out
shrb
mov
outsl
or
mov
xchg
add
pusha
mov
dec
les
mov
ret
popa
mov
dec
imul
popa
pushf
jae
fs
jecxz
push
mov
push
mov
cs
adc
mov
xchg
push
aad
cmpsl
gs
add
pop
into
sahf
addr16
ds
adc
loopne
push
aaa
cmp
push
fcomp
in
jne
in
stc
dec
cmpsl
jmp
int
ss
stos
push
and
pop
push
dec
in
test
addr16
inc
loopne
data16
sub
ret
test
bound
push
rcr
push
js
fdiv
icebp
inc
inc
pop
mulb
dec
add
popa
pop
loop
in
mov
mov
mov
adc
test
cmpsb
fimuls
pop
mov
subl
ret
loopne
push
fsubs
mov
roll
lahf
inc
bound
jmp
xorb
mov
lds
add
push
pop
outsb
inc
cmp
sbb
fdivrp
leave
xlat
push
popa
xchg
hlt
mov
and
addl
add
std
add
mov
leave
dec
jecxz
jmp
fwait
pop
bound
sarl
jae
cmp
add
fimuls
mov
pop
shrb
xor
repnz
shl
sub
leave
add
test
int3
lret
or
movsl
adc
std
cmc
xor
xchg
in
push
mov
sarl
notl
repnz
sarl
js
jl
ret
and
popf
push
push
test
xlat
push
lcall
movsl
jae
roll
cs
repnz
lret
adc
mov
iret
les
mov
mov
idivb
push
xchg
adc
and
decb
mov
mov
lds
inc
loop
mov
jmp
ficoml
ret
push
test
sub
movsl
loope
lret
roll
push
push
gs
dec
cmp
jmp
or
gs
ret
rolb
ret
rolb
movsb
inc
lcall
push
jo
mov
ret
xchg
dec
sub
sub
movb
lds
xchg
xor
mov
jle
movsl
xchg
and
packuswb
fisubs
push
jbe
popf
mov
inc
cmp
lret
inc
test
dec
mov
enter
or
aam
leave
sarl
inc
shl
loop
push
nop
pop
mov
rcrl
jnp
adcl
test
repnz
mov
jmp
frstor
call
push
xchg
into
push
push
inc
es
cmpsb
lret
dec
push
fs
leave
ja
mov
or
inc
aaa
pop
dec
sar
mov
push
loopne
fwait
adc
fcmovb
mov
lret
in
subb
xlat
mov
mov
ret
stc
add
loop
add
dec
stc
dec
fstpt
adc
out
lret
testl
sub
fcomip
arpl
adc
jecxz
xor
repnz
movsl
iret
push
rcrl
add
fildll
jp
out
inc
sahf
fdivl
push
int
popa
xorb
pop
or
jb
and
and
pop
lods
push
les
insl
adc
cmpsb
mov
clc
in
xchg
push
add
std
dec
adc
cmp
repz
fs
cmc
ss
les
xlat
add
pushf
rclb
ret
sbb
and
cmp
ret
hlt
imul
jo
inc
fildll
pusha
or
fs
fnstenv
jg
subl
rcll
out
mov
stc
cld
adcl
popa
aaa
into
push
test
cmc
shlb
pop
add
fidivs
mov
addb
pop
pop
insl
lods
cmp
ret
and
and
mov
out
dec
into
aad
pop
pop
lahf
dec
lret
pop
es
inc
shlb
dec
dec
outsl
cmpb
jge
jbe
pusha
sbb
mov
mov
out
into
lds
mov
mov
push
dec
add
mov
adc
insl
mov
ret
roll
push
daa
test
in
inc
jmp
inc
xlat
rcl
repnz
jmp
loop
insb
loope
es
jmp
jecxz
vshufps
addr16
push
xchg
mov
insb
xor
fucomip
lds
loop
mov
inc
ficomps
ficompl
movsl
sbb
lods
sbb
nop
lahf
inc
and
ret
fbstp
xor
fcmovnu
loope
push
movsl
call
stos
sub
pop
push
push
xor
rclb
arpl
mov
int
in
adc
cltd
loop
cmc
dec
and
cmp
jns
hlt
in
push
inc
ret
push
mov
xor
jb
not
ficomps
mov
imul
add
ret
push
in
ss
repnz
inc
icebp
ds
pusha
pop
xorb
les
xchg
add
add
cmp
incb
ret
sbb
loopne
out
dec
dec
addl
shll
mov
jge
sti
mov
mov
xchg
mov
fincstp
mov
push
fistps
punpckldq
fldl
inc
fwait
add
xchg
int
data16
or
and
adc
and
add
xchg
or
sbb
adc
popa
lcall
add
pop
jmp
dec
xor
ret
jo
mov
jae
sbb
in
addr16
inc
xor
fs
ret
mov
in
bound
lods
jb
inc
and
add
cmp
mov
outsl
movsl
inc
add
mov
imul
push
std
add
add
test
fmull
xor
add
adcb
cmc
push
rcll
clc
scas
add
leave
jmp
and
xor
sbb
inc
leave
cwtl
jo
and
fidivrs
inc
mov
ficoms
jns
scas
adc
icebp
sbb
aaa
inc
add
iret
cs
in
mov
fnsave
iret
daa
nop
cld
inc
sbb
fmuls
sbb
in
sbb
in
mov
mov
add
aas
jge
push
sbb
xchg
mov
cmp
inc
daa
sbb
insb
mov
rolb
dec
rcrl
ret
add
sbb
cltd
push
stos
arpl
lods
fnstcw
jge
leave
mov
loop
aas
cltd
cmp
aam
lret
xchg
fcmovbe
fs
aad
pop
cmp
and
mov
push
xchg
inc
mov
add
inc
cmc
dec
inc
xchg
stc
out
lret
ficomps
dec
fwait
cmp
scas
repnz
iret
subb
arpl
ja
cmpsb
testl
mov
xlat
jmp
sub
sub
jge
lret
dec
jl
dec
aad
sarl
mov
push
or
arpl
jmp
daa
cmpsl
fisttpl
xchg
std
movsb
cli
testl
push
mov
jo
and
sub
sbb
je
cmp
cmp
lds
cmp
shll
into
es
mov
add
enter
stc
in
fdivrp
add
scas
jp
sbb
push
into
leave
pop
push
cmpsl
ror
pop
or
adcl
sti
and
dec
or
sub
cwtl
sbb
adc
cmc
ret
roll
push
mov
sbb
lds
into
aam
jecxz
inc
ret
push
in
ret
ret
into
pop
dec
inc
fdivl
les
test
pusha
test
inc
inc
xchg
ret
push
fs
inc
sbb
cld
ret
bound
lretw
mov
in
ficomps
ss
stc
and
push
daa
pop
call
or
call
rcll
cmpb
daa
or
ficoml
push
dec
test
push
in
ret
rcrl
aam
inc
adc
xchg
xchg
mov
or
stos
les
cmp
xor
aad
out
aad
inc
cmpsl
jnp
pop
scas
es
movsl
leave
lcall
inc
jne
stos
sub
add
or
or
dec
dec
ret
data16
dec
mov
inc
loopne
push
add
sbb
mov
xorb
push
mov
dec
ret
mov
mov
mov
jb
in
repz
mov
pop
ret
mov
movsb
dec
fsubl
push
pop
mov
popf
cmp
js
and
rcr
ficompl
mov
retw
enter
test
dec
popa
mov
test
mov
inc
and
cmpsb
sub
bnd
loop
movb
sbb
clc
dec
inc
adc
lds
sbb
test
repz
push
test
lods
add
rol
xrelease
add
jo
pop
xor
in
addr16
jae
mov
lret
mov
fs
fsubrl
jnp
leave
movsb
leave
xchg
enter
and
cld
call
lret
xchg
or
xchg
inc
mov
stc
pop
or
roll
repnz
mov
sub
push
popf
lahf
cmc
ret
loop
or
push
popf
mov
out
pop
ret
pop
ror
dec
pop
mov
jo
dec
mov
jae
mov
loop
movsb
stos
cmp
lds
aaa
and
adc
mov
cmp
mov
lods
jb
mov
dec
fs
in
and
test
imul
add
sbbb
lcall
sbb
fists
rcr
mov
nop
mov
push
adc
fdivs
or
das
jecxz
shrb
push
add
push
mov
ss
mov
cmpsb
loop
fnstsw
dec
inc
cld
testb
dec
dec
or
and
movl
xchg
inc
inc
addb
mov
sbb
pop
lret
mov
popa
jecxz
mov
and
fsubs
mov
aaa
pop
call
andb
leave
repnz
pop
addr16
dec
sub
in
dec
cmpsl
repz
movsb
inc
repz
add
lret
cmp
push
jmp
xchg
push
jb
fidivrs
push
aad
push
xchg
xor
setl
mov
push
dec
aaa
lret
mov
adc
stos
mov
mov
adc
push
push
aas
push
xlat
jnp
lea
jae
std
movsb
sub
cmp
inc
jbe
xchg
mov
lea
das
cmp
test
sub
shrb
sub
icebp
cld
mov
jmp
lods
adc
xor
sarl
out
inc
lret
push
out
inc
imull
pop
dec
adc
out
dec
ret
fcoml
push
ret
sbb
inc
sub
mov
mov
shl
outsl
lods
gs
mov
jmp
jmp
testl
fistps
rcr
call
inc
jo
mov
nop
add
sub
mov
mov
dec
iret
fs
add
pop
pop
adc
fcoml
jecxz
cmc
add
nop
dec
addl
insb
inc
and
mov
adc
enter
int
jno
icebp
jmp
mov
out
push
dec
mov
xchg
jns
add
sub
add
dec
test
mov
sbb
sub
and
cmp
mov
cmpsl
test
gs
icebp
fldt
std
xor
mov
sbb
int
mov
in
pop
fldenv
mov
repnz
loop
in
sbb
in
jo
mov
pop
pop
inc
add
leave
mov
loopne
adc
in
decl
xor
adcb
dec
popa
pop
out
and
and
lret
inc
je
add
ret
jo
push
mov
pop
dec
jo
dec
lret
loopne
jmp
fnstsw
imul
popa
push
repnz
inc
push
add
pop
push
fwait
mov
fnstcw
push
into
sub
xchg
imul
mov
mov
pop
and
iret
enter
jmp
je
push
std
push
jle
into
adc
jl
stc
pop
out
outsl
xchg
rclb
mov
xchg
aas
xor
lret
lock
xchg
hlt
insb
call
repz
cmp
jg
sbb
pop
add
lods
test
push
xchg
mov
sub
hlt
sub
insb
or
xchg
mov
sub
inc
jl
lcall
popa
lods
cmpsl
inc
into
xchg
inc
lahf
push
push
aaa
leave
leave
xor
and
ret
hlt
and
mov
inc
out
movsl
jle
adc
and
add
dec
jmp
push
push
out
dec
pop
sbb
push
sub
sti
sahf
fdivrl
or
add
pop
fcmovu
imull
dec
inc
jp
adc
popf
dec
std
lock
rcr
cmpsl
push
sub
inc
popa
push
sbb
mov
and
xchg
or
movsl
std
sub
mov
jmp
or
xlat
lea
ljmp
sahf
xor
out
inc
lahf
iret
mov
pop
int3
inc
imul
test
stos
pop
push
or
mov
fcomp
xchg
stc
push
add
les
int3
loopne
andb
push
mov
pop
and
and
loopne
mov
jo
jmp
mov
ficoms
adc
push
add
inc
mov
sub
sub
sub
minps
test
div
and
psubb
scas
dec
mov
in
movsb
repz
int3
outsb
test
aas
lret
icebp
ret
leave
pusha
scas
sbb
or
or
loopne
out
aas
fucomi
adc
and
xor
inc
je
jecxz
or
mov
lds
shll
movsl
cmc
adc
push
mov
aas
fsubl
and
lret
pop
iret
mov
pusha
dec
lret
hlt
sub
dec
adc
into
sbb
fucomip
addr16
insl
loop
fdivrp
mov
adc
or
jae
fdivl
mov
fwait
adc
shll
fiadds
inc
xchg
or
mov
mov
mov
lret
aad
adc
xor
mov
jge
dec
mov
jge
inc
lret
iret
add
ffree
mov
mov
repnz
mov
add
icebp
outsb
mov
xor
stos
sbb
and
icebp
in
test
sub
sbb
sbb
jbe
xlat
inc
lret
lods
xchg
jo
movsl
xor
sbbl
in
mov
dec
enter
xchg
lcall
iret
jnp
int3
and
add
cltd
out
in
arpl
inc
int
jae
mov
stos
in
outsl
dec
leave
pop
mov
and
repz
rol
js
mov
dec
pop
lods
mov
lcall
cmp
jp
jne
insb
mov
arpl
and
aad
test
test
jecxz
repnz
cmp
xchg
ret
jmp
push
and
loop
mov
aaa
mov
test
divb
aad
pop
add
daa
dec
in
loop
fistl
hlt
xchg
imul
mov
fsubrp
inc
psrad
inc
in
adc
push
lds
add
pop
pushf
cwtl
loopne
mov
pop
push
iret
pop
cmpb
rcrl
mov
cld
xchg
insl
inc
jbe
cmpsb
jnp
lret
rcrl
ret
sbb
aas
mov
add
add
ret
roll
filds
pusha
add
pop
loop
jge
mov
icebp
int3
addb
pop
jmp
mov
das
push
mov
mov
xchg
and
enter
add
icebp
ret
inc
xor
jg
jp
add
in
ret
test
mov
sub
mov
insb
add
mov
jle
lock
dec
bound
notl
mov
jb
jmp
xchg
and
inc
btr
cmp
pop
mov
out
ljmp
aad
mov
faddp
or
hlt
inc
testl
pusha
push
and
lods
ret
push
inc
testl
mov
mov
and
mov
aas
mov
xchg
int
and
mov
and
lcall
popf
sbb
and
out
add
jge
stos
fisttps
cmpsl
cltd
ljmp
sbb
push
in
adc
pop
test
mov
and
outsl
fidivrs
inc
xchg
xchg
in
fimuls
inc
push
lods
shl
and
fsubl
sbb
push
push
xchg
movsb
outsb
out
mov
jp
repnz
dec
insw
push
push
movsb
ret
jns
push
leave
push
rorb
jb
imul
daa
mov
cltd
outsl
sbb
outsb
mov
rcl
dec
cmp
inc
fbstp
xchg
sbb
stc
fldl
je
or
cmpsb
xor
or
cmp
test
movsb
repnz
inc
mov
into
scas
arpl
ret
adc
mov
mov
daa
sbb
push
push
jno
hlt
rcrb
test
out
jno
mov
mov
sbb
stc
cli
mov
mov
sub
pop
push
ret
enter
es
pop
inc
inc
jo
add
stos
es
shrb
pusha
inc
cmp
insb
out
fcmovbe
sub
int
pop
add
jl
loop
jecxz
or
pop
fmul
sbb
sahf
push
mov
jnp,pn
les
push
push
lret
in
add
mov
sub
pop
ss
in
lret
in
mov
addr16
add
mov
dec
push
gs
jae
test
data16
ret
gs
cmpsb
and
add
test
bound
test
cmp
int3
cmp
mov
dec
dec
mov
lret
xchg
xor
cmp
leave
vunpckhps
jno
lcall
int3
lds
std
adc
stos
mul
dec
out
or
orl
aas
adc
add
in
or
pop
and
sub
fsubrs
shll
and
cld
or
repnz
mov
inc
mov
loop
xchg
js
orl
jmp
lock
mov
xor
ret
cmp
pop
hlt
cmp
inc
lea
pandn
loop
or
cmp
std
jbe
sub
jmp
cmp
pop
xchg
fadds
inc
inc
incb
arpl
pop
adc
add
xor
sub
sbb
and
shr
in
adc
fwait
jo
lret
jbe
bound
mov
inc
cwtl
or
xor
cmpsl
int3
add
sbb
adc
movsl
cmp
lahf
pop
sbb
je
inc
adc
fidivs
ss
fidivl
inc
pop
fdivrl
sti
cmc
mov
pop
call
or
push
test
sub
adc
add
mov
int3
lods
psubw
sub
xchg
xchg
popf
sbb
xchg
lcall
sbb
ret
dec
and
popa
ljmp
cli
aam
int
rcl
jne
push
push
sub
push
bound
add
or
scas
sbb
jno
push
xchg
in
arpl
jecxz
jbe
push
popf
cltd
arpl
data16
push
inc
dec
rol
xchg
xor
mov
fisubs
rol
sarb
lret
and
lods
push
shll
cmp
std
sbb
gs
fsubrs
into
movsb
test
cli
js
testl
xchg
test
lret
jmp
or
or
into
dec
stos
jmp
or
es
jecxz
jecxz
xor
sti
repnz
dec
dec
push
aad
aas
sbb
mov
lret
cmpsb
pop
mov
mov
mov
mov
push
add
dec
mov
pusha
mov
pop
and
jns
cmpsb
into
fidivrs
sub
xchg
addl
adc
repz
cmpsb
test
pop
clc
test
jle
gs
leave
mov
jp
and
ret
inc
sti
in
xor
xchg
pusha
mov
in
jge
js
addr16
cmpsl
inc
fmull
add
sub
arpl
mov
in
xchg
mov
pop
mov
add
ficompl
dec
out
xchg
cltd
xchg
mov
dec
and
xchg
cmp
cltd
in
pop
add
dec
cwtl
sbb
ja
pop
mov
adc
jne
xor
je
loop
push
mov
mov
and
popa
je
call
int
mov
int3
pop
adc
leave
mov
lret
fwait
dec
inc
xchg
icebp
js
mov
inc
jmp
xchg
cmpsl
push
lods
cmp
leave
cli
lret
mov
sub
in
cmp
sbb
frstor
and
mov
rcrl
scas
mov
pop
or
sub
out
inc
cli
jno
ret
dec
add
call
stos
push
call
jae
adc
and
daa
add
sbbl
mov
sub
fs
push
or
pop
lods
sub
xchg
stc
jo
setae
into
testl
inc
push
fs
xchg
ret
shll
outsl
add
fs
decb
jno
ret
push
fimull
das
enter
jecxz
mov
loop
mov
adc
aad
mov
jge
out
dec
add
add
xor
stos
lret
aam
and
arpl
and
out
xchg
jle
leave
push
add
add
test
lret
sbb
adc
insl
push
stc
lods
xor
sbb
nop
pop
jge
sub
test
push
cmp
int
icebp
xor
leave
int3
xchg
pop
mov
addr16
ljmp
xchg
adc
inc
andb
mov
add
jne
pop
mov
lahf
mov
out
mov
sub
imul
sbb
or
jle
stos
add
mov
aad
xchg
inc
fildll
pop
or
dec
jno
es
add
mov
xchg
fildll
and
lcall
jno
mov
xor
adc
add
lar
movsl
rorw
lock
in
inc
mov
arpl
into
test
stos
in
stc
mov
inc
shrl
push
jae
mov
popf
or
cmp
jo
pop
sahf
lret
xor
insb
mov
mov
cmp
leave
imul
shl
lock
and
movsb
lcall
outsl
add
jg
sub
orb
lret
out
addl
pop
enter
xorl
mov
pop
add
cmp
lret
inc
jg
aas
cmp
cmp
imul
dec
pop
insl
push
adc
dec
call
in
xchg
les
in
xchg
cmc
sbb
inc
jae
sub
xchg
push
out
shll
mov
shlb
xor
pop
inc
add
mov
je
mov
cmp
bnd
cmp
fsubrp
icebp
mov
and
jnp
adc
test
or
imul
popf
js
sbb
stos
inc
imul
addl
cmp
or
mov
fisubrl
lcall
jg
pop
ret
stc
ja
cmp
push
fcompl
std
imul
push
fiaddl
xor
orb
mov
sub
sub
jl
jb
fs
enter
jge
repnz
jb
inc
push
lret
inc
inc
test
xor
ljmp
pop
pop
es
stc
mov
jecxz
into
pop
ficomps
sub
inc
inc
cli
xchg
sbb
stos
or
test
xchg
jne
aad
sarb
cmovp
inc
sbb
mov
js
inc
sub
xor
push
add
push
jl
ret
int3
sti
jp
jmp
jae
roll
mov
shlb
fsubl
mov
loop
iret
clc
push
hlt
cs
clc
pusha
mov
push
nop
xchg
xor
cli
fmul
dec
or
ja
or
jl
fdivrs
or
jbe
and
fs
dec
mov
shld
xchg
xor
push
adc
xchg
push
pop
es
shl
aam
lret
fldl
lock
push
inc
mov
out
lock
aam
push
mov
cmc
dec
mov
and
sub
push
mov
hlt
in
rolb
gs
mov
push
cmp
loop
pop
jb
ja
xchg
add
adc
sub
in
out
repnz
rcll
insb
out
jne
test
and
xor
int3
movsb
rorl
popf
and
cmp
push
lock
fstl
add
nop/reserved
shlb
sub
push
or
pop
sbb
ror
sbb
daa
jg
mov
mov
and
sbb
loope
sub
add
inc
std
adc
adc
mov
push
rclb
fs
andl
in
inc
into
loop
jae
xlat
lcall
lods
mov
cmp
mov
pushw
dec
scas
xor
dec
sbb
xchg
ret
les
lret
xor
cmpl
daa
sub
and
sub
into
jno
mov
aad
sbb
shl
push
mov
xchg
lods
xor
pop
jno
shlb
iret
popf
into
in
dec
into
pop
andl
xchg
insl
imul
inc
sub
sub
cmp
aad
jmp
inc
adc
mov
out
adc
and
data16
pop
enter
into
scas
repnz
sub
sahf
mov
out
aas
pop
daa
add
jno
js
lods
and
mov
jne
push
push
cltd
es
xor
mov
jno
repnz
cmp
mov
adc
repnz
mov
sbb
pop
fsubr
movb
sbb
add
jmp
add
add
subl
ffree
mov
inc
popf
loopne
cmp
inc
jno
push
popf
jle
push
jge
sub
or
jge
jb
mov
inc
punpckldq
adc
in
mov
jo
xor
jae
lret
jbe
shll
xchg
das
int
fmulp
and
add
stos
push
jg
lahf
xor
dec
adc
lea
push
push
adc
push
pop
push
cmpsl
and
cmp
daa
pop
cmpsb
fnstcw
hlt
sub
sbb
imul
fidivrl
in
fwait
xor
out
pop
jge
xor
adc
rcrb
mov
mov
rcr
repnz
loop
or
movnti
push
insl
push
pop
repnz
inc
test
fstpl
cltd
addr16
das
orb
and
rcr
mov
fildll
dec
mov
sbb
or
push
jno
test
jb
pop
loop
adc
mov
loop
sbb
add
imulb
inc
mov
adc
xor
gs
xchg
ljmp
ret
inc
ret
xor
push
dec
push
xchg
aas
andb
pop
push
push
sub
adc
push
rorl
xchg
test
pop
cmp
cmp
jecxz
cli
fdivrl
adc
xor
mov
daa
mov
adc
pop
loopw
orb
cmc
rol
jecxz
faddl
push
nop
jmp
cmp
jb
icebp
cmp
cltd
ss
dec
adc
pushf
or
sub
sbb
loope
adc
mov
pop
push
and
lret
mov
dec
cwtl
mov
mov
dec
pop
add
sub
rolb
lds
pop
dec
fnstenv
xor
push
mov
xchg
or
push
add
xor
loopne
add
add
pop
mov
sahf
imul
cmp
mov
int3
sub
sub
out
mov
loop
and
imul
sahf
mov
add
rcll
out
xor
pop
aas
idiv
mov
pop
dec
rol
repnz
sbb
push
fptan
jo
jmp
sub
dec
xor
pop
inc
pusha
lahf
jecxz
push
xchg
jecxz
fs
pop
or
jo
or
sbb
dec
jecxz
test
dec
ret
sub
jno
scas
outsl
add
leave
lahf
repnz
fists
fcmovne
ret
test
mov
dec
sahf
mov
shr
mov
cmp
out
inc
cmp
lret
dec
into
dec
clc
jecxz
fcomi
mov
mov
mov
sub
sahf
hlt
addl
adc
pop
mov
std
rcr
sub
cmpsb
in
std
aas
inc
out
cmpsl
jecxz
xchg
ret
fs
dec
rol
dec
xchg
or
int3
jp
cmp
mov
sbb
push
daa
stc
aaa
bound
dec
pop
fimull
lds
jge
jo
xor
enter
dec
mov
xor
test
mov
mov
pop
je
mov
dec
ss
push
orb
dec
jmp
lahf
cwtl
adc
mov
mov
cld
fbld
mov
mov
int
sar
inc
add
stos
inc
jmp
jae
pop
mov
inc
daa
xchg
or
mov
movb
repnz
add
leave
shrb
mov
jmp
ret
loope
popa
lds
je
and
loop
fsubrl
or
sbb
mov
fisttpl
mov
mov
insl
and
daa
ljmp
mov
adc
cmpsl
sub
mov
les
jecxz
dec
cmp
ret
out
mov
shl
add
lret
sub
test
stc
outsb
repz
inc
pop
xor
stos
mov
cltd
xchg
jbe
and
cmp
lods
ret
and
out
mov
jecxz
jl
jae
mov
mov
dec
icebp
add
pop
adc
inc
or
mov
and
pop
aas
xor
and
lds
sub
mov
jp
mov
data16
test
pop
lock
gs
add
hlt
lods
jmp
pop
and
nop
cmc
mov
push
lock
arpl
outsb
dec
lcall
or
dec
int
sub
xchg
push
test
lret
or
fsts
jo
mov
add
add
ret
idiv
push
aam
inc
mov
pop
lcallw
ret
jbe
adc
fs
adc
ret
inc
cmpsb
lds
repnz
in
xchg
or
jne
ror
dec
cwtl
sub
xchg
pop
rcll
jb
xor
lret
lock
imul
movsl
dec
in
insl
or
push
shlb
in
in
xchg
std
jne
pop
std
daa
or
push
add
jecxz
fwait
mov
xor
mulb
inc
xchg
cmp
inc
mov
and
cmp
movsb
testl
pop
out
xchg
outsb
xchg
fidivs
mov
and
hlt
pop
push
adc
stos
dec
pop
enter
and
imul
out
dec
xchg
shl
les
add
test
out
pop
or
sahf
imull
dec
xor
jmp
lds
repz
push
mov
pusha
jecxz
adc
enter
inc
mov
push
popa
mov
lods
jne
shlb
outsb
mov
ret
insb
jecxz
test
jecxz
fadds
or
mov
jne
cmp
loop
addl
inc
mov
cltd
orb
ljmp
xor
aas
sub
and
mov
jmp
into
imul
jne
in
push
cmpsb
fistl
or
repnz
pushf
inc
rolb
push
inc
inc
ljmp
lods
stc
ds
inc
push
add
mov
movsb
or
cmp
je
aaa
and
mov
mov
icebp
adc
mov
repnz
leave
mov
daa
sbb
cmp
leave
arpl
arpl
popf
inc
sti
arpl
xchg
pusha
movsl
pop
jno
xor
das
inc
inc
nop
gs
cltd
or
mov
inc
fs
cli
inc
loop
adc
xchg
mov
mov
orb
cltd
xchg
out
stos
fistl
insb
mov
lods
push
sarl
sub
fstpl
mov
cmpsl
cmp
lea
and
fistl
stos
stos
and
jmp
test
dec
ret
sub
int3
add
xchg
xorl
jmp
add
fxch
loopne
cmp
xor
dec
and
sbb
fldt
pop
mov
cmp
inc
add
push
outsb
inc
and
fsubs
leave
push
or
call
mov
jo
cmp
push
inc
push
stc
test
add
dec
cmpsl
mov
xor
sub
call
mov
mov
mov
cmp
lret
jae
rol
fistps
stos
ret
dec
mov
lds
adc
ret
push
adc
push
mov
inc
push
inc
jbe
xchg
and
divb
xor
inc
add
shr
dec
rcll
pusha
sbbb
rolb
sub
enter
das
fucomp
xor
lret
mov
push
mov
xchg
add
cwtl
loopne
or
jmp
xchg
mov
pushf
in
lret
inc
imul
repz
mov
sbb
rcl
and
add
push
idivl
cmpsb
push
cmp
ret
push
addr16
pop
mov
ret
scas
mov
leave
repnz
stc
mov
aas
outsl
push
lea
lcall
mov
icebp
add
lods
fimuls
push
aas
sub
in
push
je
jl
test
fimull
or
ret
outsb
cvtps2pi
addr16
ss
lods
or
movsb
imul
inc
mov
stos
cmp
test
mov
and
dec
and
test
in
push
and
popf
mov
cli
ljmp
shlb
gs
sub
mov
repnz
mov
jo
or
pop
je
mov
les
inc
fildll
pop
mov
in
xor
out
in
movsl
fidivrl
push
pop
xor
ret
push
mov
push
xlat
stos
fldt
rolb
cli
js
adc
je
adc
push
mov
or
push
push
leave
push
pushf
les
incb
xchg
cmpsl
sub
mov
out
addr16
inc
das
loopne
dec
sub
call
inc
sar
sub
mov
cmp
es
aam
push
subb
cltd
stos
pop
test
movsl
sub
fwait
ljmp
jmp
mov
jns
out
movsb
punpckldq
mov
shll
lret
or
add
cmpsl
gs
or
and
andb
and
jns
xchg
mov
in
push
sti
add
lods
dec
in
xlat
negl
sbb
jmp
jmp
pop
adc
shrb
das
mov
out
or
jae
ja
out
mov
sbb
xchg
fisttpl
ret
mov
movsl
cmp
loop
mov
and
sub
fcmovne
add
jp
xor
mov
cmp
test
pop
push
mov
jo
pop
inc
mov
test
movsl
push
lods
les
aad
jp
inc
dec
xor
andb
outsl
or
lods
dec
jle
or
mov
scas
negl
pushf
jnp
sub
daa
gs
loopne
inc
icebp
fsubp
adc
sbb
lea
mov
cmp
loop
pop
loop
fidivs
sbb
popf
xchg
pop
mov
lret
cld
sub
push
std
loop
jecxz
add
xlat
fldenv
ljmp
mov
out
pop
or
mov
gs
icebp
sbb
push
pusha
cmc
mov
sbb
mov
lcall
xchg
add
lret
xor
jo
cltd
push
ret
sti
pusha
sahf
iretw
add
xchg
fmull
mov
repnz
mov
and
addr16
push
enter
push
and
ljmp
lcall
into
jp
fs
test
dec
push
movsb
pushf
out
add
jne
push
shrb
mov
ds
sub
dec
sub
lahf
lret
sahf
dec
out
icebp
cmpsl
inc
ss
icebp
mov
xorl
ljmp
push
sub
fiaddl
movsb
xchg
movl
xchg
mov
fadd
iret
lret
cmp
cltd
push
push
das
adc
fwait
in
xor
sbb
fisubl
jbe
sbb
ret
fcoml
fidivl
ljmp
and
dec
sub
xchg
in
add
xchg
in
rcr
rolb
xchg
test
add
int
imul
add
mov
push
lahf
sub
push
xor
neg
push
inc
xchg
add
xchg
xor
xlat
sub
test
in
stc
push
test
or
xchg
je,pt
inc
jecxz
jp
je
iret
hlt
inc
testl
jecxz
inc
jecxz
and
repnz
lock
cltd
inc
outsb
mov
pop
cli
mov
popa
or
cltd
push
je
xchg
iret
rcrl
enter
mov
setns
fisubrs
loope
cwtl
mov
shrl
jne
xchg
push
cld
jecxz
inc
push
inc
mov
xchg
jb
xchg
les
jo
push
shrl
mov
inc
cmp
push
xchg
aaa
or
xchg
and
test
sahf
mov
lcall
insb
inc
mov
popa
dec
inc
sbb
stos
hlt
inc
jno
mov
push
nop
jmp
add
je
out
or
mov
cmp
adc
repnz
and
je
loop
dec
ds
daa
int
ss
jge
sti
aas
adc
insb
adc
push
mov
add
push
shll
std
push
out
or
add
lods
pop
cld
movsb
unpcklps
dec
fmul
pop
aam
jno
int
xor
or
push
lahf
push
pop
movsb
mov
and
lret
sbb
inc
out
sbb
xchg
ja
idivl
insb
jno
insl
mov
mul
add
inc
inc
push
dec
loop
ds
sbb
rcrb
push
out
in
fsubl
mov
xorb
ret
adc
xor
add
xchg
lea
mov
inc
bound
stc
inc
adc
inc
add
pop
jb
lds
or
sub
push
loopne
add
cmpsb
rolb
cmpsl
or
mov
mov
inc
popf
xchg
mov
jb
inc
mov
add
add
sbb
adc
jbe
mov
inc
insl
jg
and
push
and
mov
out
dec
mov
sub
push
sbb
add
jb
xlat
push
cmp
pop
inc
add
cmp
and
sub
sbbl
cmp
pop
xchg
xor
dec
fimuls
add
push
mov
pushf
cli
mov
sbb
fadd
cmpsb
push
iret
sbb
mov
mov
push
aam
mov
dec
or
fdivrp
or
and
mov
fsubrl
pop
push
or
xchg
push
movsb
fidivrs
push
xor
push
mov
mov
push
mov
aas
xchg
xlat
add
inc
pop
rcl
cld
cmp
stos
into
adc
in
xchg
outsl
fidivl
sbb
clc
fcoms
inc
iret
and
data16
xor
push
call
mov
sub
mov
sub
cltd
fisubrl
fiaddl
mov
test
push
das
sub
int
popf
pop
fdiv
dec
xor
xlat
cmp
leave
imul
jecxz
ss
sbb
mov
mov
fidivrs
ss
loopne
clc
push
es
pop
fcomi
inc
fcompl
int3
out
push
mov
push
mov
add
push
sub
and
inc
sub
cli
insl
jbe
sub
xchg
mov
pusha
sub
sbb
lods
sbb
pop
sbb
js
shlb
imul
fs
insl
fidivs
decb
insl
in
dec
inc
cmpsl
sarb
push
cwtl
mov
or
lock
stc
adcl
push
les
push
add
addb
inc
cmpl
jnp
test
addb
xor
pop
mov
mov
shll
adc
or
rcr
mov
sbb
ljmp
or
sub
mov
jno
dec
dec
push
mov
sub
stos
xor
mov
inc
inc
fiadds
or
arpl
inc
dec
push
pop
inc
icebp
in
cmovns
inc
lret
mov
adc
movl
inc
fwait
roll
push
and
adc
xchg
leave
orl
mov
jae
and
push
pop
pop
enter
pop
mov
xor
icebp
imulb
cmc
notb
pop
sarl
mov
jns
lea
iret
xchg
mov
mov
mov
push
test
add
push
ja
in
jns
push
mov
sbb
push
arpl
sbb
add
loop
inc
adc
and
mov
lret
incb
sbb
dec
mov
inc
cwtl
imul
mov
lret
stos
mov
les
push
sbb
sbb
scas
mov
cs
flds
cmp
sbb
loopne
cmp
loop
sub
lret
mov
adc
inc
mov
loopne
stos
jmp
or
insl
js
mov
cmp
sub
rorl
mov
mov
xor
dec
rorb
jb
sub
fmuls
mov
ret
mov
lock
in
pop
fldl2t
xor
in
add
add
cmovb
std
mov
xchg
std
xchg
ret
sub
les
sbb
aas
pushf
xor
jns
cmpsl
sub
inc
adc
mov
cmp
rorl
imul
xor
in
cmpsl
lds
fadds
fwait
mov
pop
sbb
dec
aas
jge
fisttpl
inc
jno
inc
sub
leave
test
pop
or
addr16
test
fldl
add
pop
lds
mov
std
lods
inc
and
pop
and
jecxz
cmp
add
jecxz
shlb
push
push
mov
inc
popa
ret
cmpb
shrl
cmp
loop
inc
jmp
xchg
jns
add
adc
or
add
fdivrl
push
add
push
leave
inc
sub
andb
jge
sub
popa
sub
pop
dec
fisubrs
mov
aas
jp
mov
dec
mov
jmp
addl
jmp
notl
les
fimuls
daa
cs
sub
in
ss
movntq
pop
scas
sub
shr
decb
sbb
or
or
popf
sbb
sub
xchg
adc
ss
adc
jne
or
incb
jb
hlt
aam
jbe
jns
jb
js
stos
je
jecxz
sbb
jmp
mov
jb
lods
jae
lods
aas
adc
push
dec
sti
cmp
stos
dec
push
imul
subb
mov
pop
outsb
loop
dec
push
scas
lret
mov
cmp
cltd
jnp
pop
lea
pop
pop
ret
sub
testl
adc
cltd
imul
inc
mov
sub
adc
inc
adcl
inc
jbe
addr16
das
sub
sbb
mov
xor
dec
push
cmp
or
test
jmp
push
adc
adc
lret
clc
bound
lds
lahf
imul
sub
incl
pop
xor
dec
pop
ljmp
or
inc
les
ret
ss
dec
sbb
int
sub
push
and
aam
lret
movsb
dec
sub
test
or
add
and
stos
aaa
push
stos
test
aad
xor
dec
mov
or
xchg
repnz
or
dec
fsubrl
pop
into
clc
testl
jmp
les
pop
dec
inc
es
into
faddl
fidivs
lret
push
jb
xor
rcrb
arpl
xchg
es
add
aas
xor
inc
mov
aam
iret
stc
mov
push
orl
adcl
xor
pop
jno
fcomps
inc
jae
adc
add
xor
dec
call
loopne
xchg
adc
bound
ret
add
fistpl
jb
ret
push
jle
inc
sub
push
sub
xchg
cmp
mov
in
rorb
jp
push
mov
ja
pop
nop
daa
xor
pop
pop
mov
outsl
pop
sub
push
and
cmpsl
mov
mov
inc
pusha
xor
pop
cld
icebp
leave
and
pop
xor
mov
adc
sub
mov
fadds
or
lret
push
push
sbb
mov
and
test
mov
and
ret
inc
mov
adc
cmp
adc
fmull
sub
mov
lcall
adc
ficoml
mov
leave
adc
add
mov
cmp
inc
sti
inc
sbb
xor
repnz
outsb
jmp
add
in
movsl
in
jne
jmp
and
dec
jae
add
out
and
lret
mov
test
add
sub
push
add
bound
je
pop
cwtl
push
jecxz
and
aas
call
push
and
jb
into
imul
xchg
mov
pop
inc
gs
into
xor
lret
pop
jle
je
fstpl
push
pop
add
in
sub
push
mov
xchg
insl
push
sbb
imul
sbbb
ret
arpl
test
xchg
mov
push
xchg
add
imul
lea
ljmp
fdivl
vsqrtss
cmp
lods
sbbl
push
js
mov
inc
aam
stc
ljmp
ja
out
and
mov
xchg
shll
lret
xchg
push
jmp
mov
movsl
test
test
sub
out
bound
xlat
lods
pop
in
sub
jo
jb
mov
je
addr16
mov
inc
ljmp
inc
sbbl
daa
xchg
or
add
xor
inc
inc
dec
ret
inc
mov
shlb
pop
jge
or
inc
pop
xchg
psubq
fs
enter
ss
mov
add
ret
and
test
popf
fs
jae
outsb
loop
aad
mov
mov
int
mov
pop
push
addl
push
cmpb
sub
loopne
das
dec
adcb
xorb
daa
enter
push
push
inc
jns
popf
dec
fdivrs
dec
std
enter
mov
inc
shll
sti
and
flds
xor
lret
mov
adcl
loopne
mov
pusha
enter
sub
fmuls
ret
leave
fildll
inc
mov
jns
xor
scas
fstpl
xchg
push
stc
imul
or
out
dec
push
ljmp
push
add
sbb
or
leave
incl
lea
loope
ret
bt
addr16
adc
daa
insw
ret
insb
fsub
mov
loop
test
sbb
lahf
jb
rcrl
xchg
adc
out
repnz
jl
adc
imul
inc
push
jge
rcrl
jmp
mov
mov
lahf
sbb
jge
mov
cwtl
jmp
nop
jmp
in
mov
mov
daa
dec
push
out
fbstp
outsb
out
mov
or
repz
test
mov
fs
fmulp
xchg
sub
mov
xor
testb
jecxz
jne
sbb
andb
push
cwtl
sysenter
xchg
pusha
pop
subb
decl
xchg
and
sub
jl
and
out
sbb
out
daa
ljmp
in
stos
cmpsb
push
and
insb
xor
sbb
imull
or
mov
sub
push
jmp
sbb
int
sub
stc
cwtl
ret
imul
lods
and
push
movsl
mov
sub
xlat
popa
mov
les
aas
mov
push
in
into
jns
test
lods
add
imulb
sub
popf
jge
ljmp
faddl
pop
push
les
xchg
and
mov
je
and
inc
jge
push
fwait
aad
int3
imul
arpl
sub
into
hlt
lea
ret
pop
idivl
daa
add
cmp
lea
pop
inc
pop
rcrl
mov
mov
xor
lret
ljmp
pop
cli
mov
inc
and
ret
dec
cmp
ja
rcr
stos
mov
push
icebp
cli
rcr
pop
mov
mov
addr16
sbb
lret
ja
in
mov
add
gs
movsl
les
out
cmpsb
inc
lods
sub
mov
data16
mov
in
rorl
sub
addr16
adc
lea
pop
adc
inc
or
jne
and
cmpsb
cmp
ret
xchg
jle
aas
mov
xchg
loopne
push
popf
xor
inc
add
test
mov
adc
in
dec
ret
inc
incl
xor
fdiv
in
lcall
lea
jecxz
movsl
adc
ficoms
lret
pop
call
mov
cmpsl
lret
and
insb
arpl
rorb
and
mov
loopne
dec
dec
daa
sbb
mov
add
call
lret
lods
mov
aas
movsl
cmpsb
sti
jecxz
jae
addb
fstpt
fs
insb
pusha
das
add
or
stc
mov
daa
inc
adcl
mov
pushf
inc
scas
sub
out
data16
cli
mov
in
outsb
and
out
and
add
cmp
ret
loop
inc
sbb
xchg
inc
insl
cmc
fs
push
jle
arpl
pop
imul
les
fiaddl
out
mov
mov
push
mov
xor
jmpw
mov
mov
imul
pop
dec
xor
icebp
jmp
jmp
mov
jecxz
stos
pop
jmp
jle
mov
push
add
inc
adc
test
jnp
repnz
jnp
adc
dec
lret
fstps
jne
pop
loope
push
xor
jle,pt
push
popf
test
mov
mov
xchg
dec
stc
pop
sub
out
in
jb
inc
les
adc
and
sbb
test
lock
adcb
out
sarl
inc
adc
daa
test
and
inc
lret
cmc
inc
std
add
xlat
andl
lods
xchg
dec
in
adc
jecxz
sar
adc
pop
in
decb
mov
mov
int3
mov
lret
dec
lock
decb
dec
mov
mov
lods
shlb
inc
xchg
fs
or
lret
aaa
jle
pop
mov
rorl
scas
lock
nop
xchg
or
loope
sub
call
loope
je
sti
mov
sub
push
in
cli
add
or
jl
xor
pushf
je
fadds
aad
std
cmpl
cli
cli
notl
subl
mov
rorb
sbb
ret
daa
pop
and
cs
in
orb
jecxz
rclb
roll
ficoms
fwait
js
pop
std
lret
into
scas
xchg
es
sarb
dec
jo
xor
ret
add
lret
pop
loopne
sub
pop
dec
or
mov
rolb
leave
or
inc
testl
jmp
sbb
adc
imul
enter
pop
adc
dec
gs
ret
xchg
int3
dec
pop
adc
in
cmc
fisttpl
lcall
mov
outsb
dec
cmpl
pop
fnstcw
mov
lret
aas
inc
pusha
sub
inc
cmpl
sahf
cmp
lret
add
lea
sti
sub
xlat
data16
aas
adc
or
gs
jne
fildll
icebp
in
roll
mov
repnz
sbb
arpl
iret
add
scas
addb
shll
in
cmp
sub
in
repz
leave
pop
pandn
pop
mov
adc
addr16
jecxz
mov
divb
jge
push
icebp
xchg
shrb
dec
dec
pop
jnp
leave
ret
xchg
dec
rolb
push
dec
pop
fdivrs
mov
mov
mov
and
test
std
adcb
imul
imul
outsb
add
mov
jo
shrb
out
stos
jecxz
push
pop
mov
in
ret
lret
jecxz
sar
subl
cmpsb
stos
lds
std
ret
sub
jo
ret
out
rcll
or
cld
movsb
or
sar
test
xor
hlt
sbb
shrl
stc
inc
rorl
inc
jecxz
test
icebp
xor
mov
adc
icebp
in
or
or
lods
or
cmpsl
ficomps
outsl
push
inc
rclb
aam
and
cwtl
lods
repz
jmp
pop
inc
adc
frstor
adc
fsubs
jle
mov
testb
pop
test
xor
pop
add
lret
loopne
in
xor
push
adc
outsl
out
jg
icebp
movsb
push
insl
pop
push
andb
ffreep
mov
dec
daa
jne
mov
stos
or
insl
stc
sbb
push
vpcomq
bound
les
pop
mov
mov
and
inc
imul
or
mov
sub
sub
into
inc
cmp
repz
dec
pop
test
sbb
jb
xchg
add
loopne
xchg
adc
sbbb
xlat
arpl
ljmp
scas
hlt
push
xor
sub
popa
mov
cmp
fcomip
test
inc
ds
movsl
xor
inc
jo
fidivs
sahf
mov
inc
xchg
inc
pop
inc
cmp
xchg
sub
ret
add
call
popa
lret
pusha
add
sbb
and
ds
or
jl
mov
dec
popa
jecxz
sub
push
xor
je
inc
cwtl
and
pusha
incb
inc
and
xor
xchg
mov
push
test
cmp
inc
cmpl
inc
push
cmp
outsl
aas
data16
in
inc
int
popa
jmp
lods
cltd
mov
pushf
hlt
andb
inc
and
jmp
loope
mov
jecxz
add
dec
in
add
test
inc
jb
movb
inc
xchg
push
add
lds
call
dec
movb
jp
or
jmp
inc
ret
mov
insb
inc
add
loop
inc
mov
insb
repnz
jae
repnz
lods
in
stc
pop
jns
movsb
jae
out
sbb
lret
aam
iret
jmp
aaa
and
in
push
cmpsb
sub
inc
jbe
and
xchg
dec
dec
add
or
in
push
iret
or
pop
icebp
xchg
into
jl
dec
inc
xchg
ret
lahf
movsb
mov
push
adc
and
lret
cmp
and
xchg
aad
mov
js
sub
sbb
daa
int3
push
pop
pop
xchg
add
xlat
je
jp
lret
mov
xchg
and
mov
cmc
mov
das
fistpll
scas
lcall
add
mov
xlat
mov
adc
aas
pop
sbb
cmpsb
fldt
loopne
mov
jl
sti
imul
jecxz
mov
xor
adc
mov
push
in
sub
adc
sub
icebp
and
and
idivl
out
and
out
push
jo
in
scas
pop
or
hlt
shrl
shlb
push
add
cltd
or
ja
in
fbld
sub
pop
add
jo
loop
notb
imul
daa
in
rorl
or
sub
pop
inc
fs
push
iret
dec
dec
lahf
xor
and
mov
in
mov
in
or
cmp
sub
sub
push
xchg
jo
frstpm(287
leave
ret
mov
jmp
mov
add
fdivrs
inc
and
jae
pop
pushf
xchg
add
sbb
aas
sub
inc
mov
andb
cmp
jmp
repnz
cli
and
imul
je
and
inc
loop
cli
adc
movsb
fistpl
jns
adc
inc
adc
mov
xor
xchg
stc
mov
inc
adc
cmp
out
out
xor
xchg
cmp
nop
dec
add
mov
cli
pop
gs
cs
enter
xor
lods
mov
loopne
addb
xor
filds
into
dec
aaa
adc
dec
cmp
push
leave
inc
and
or
mov
imul
mov
bound
adc
fwait
add
bound
mov
das
and
cmpsl
test
cmp
push
xchg
jnp
mov
arpl
repz
jns
xor
call
rol
adc
fstpl
xor
rclb
mov
rcrl
jno
test
stos
cmc
sub
xchg
add
xor
lcall
sub
lea
add
or
fldl
add
dec
inc
pusha
pop
dec
or
or
out
mov
enter
ret
rorl
mov
out
hlt
mov
sub
test
les
jl
and
es
fisttpll
aas
imul
jo
sbb
mov
mov
and
daa
test
add
stc
inc
mov
dec
xor
inc
ret
xchg
jno
and
inc
xchg
mov
adcb
jo
repz
sbb
shl
lcall
out
add
pop
les
shll
dec
test
xchg
add
out
stos
inc
mov
jmp
shll
add
repz
xor
sub
mov
dec
and
fcoms
push
mov
loopne,pn
cmpsl
xchg
sahf
lret
adc
lcall
popf
pop
sbb
lods
or
jl
movsl
jmp
mov
fidivs
jo
in
test
dec
fsubr
mov
fucom
inc
cmp
lds
pop
fldenv
cmpsl
jmp
mov
insl
vcmpsd
mov
push
sbb
xor
movl
xchg
jl
rclb
call
push
rcll
xorb
mov
fisttpll
xchg
add
or
aas
cmp
push
jg
pop
sahf
shlb
mov
popa
jo
pushf
ror
fcoms
xlat
lods
sub
clc
push
dec
push
call
cs
inc
call
add
js
sbb
cli
and
fs
ficompl
xchg
dec
sbb
pop
mov
sbb
mov
xchg
idivb
lret
icebp
dec
inc
inc
inc
cmp
xchg
cs
insl
test
insb
jmp
cmpsl
adc
pop
push
icebp
or
add
pop
jbe
mov
in
xor
out
mov
cmc
in
mov
pop
xchg
icebp
xchg
ret
push
rcrl
mov
pop
aaa
adc
push
pop
test
lcall
cmc
xor
add
outsb
jns
dec
inc
pop
xchg
sub
fcomps
hlt
lret
ret
icebp
mov
push
adc
out
mov
jnp
in
ljmp
xchg
leave
sub
xorl
mov
and
jb
clc
lret
jae
or
out
lea
pop
daa
adc
inc
adcl
out
pop
outsb
out
out
pusha
cli
push
sbb
test
jno
rorb
fistps
mov
xchg
movsl
pop
pop
mov
movzwl
aad
pop
lret
repnz
inc
imul
mov
shrl
lock
ja,pn
xor
adc
rcr
pop
rcr
push
cmp
sahf
popf
xchg
push
jmp
push
xor
mov
jne
pop
jl
pop
ret
cli
pop
leave
mov
inc
call
iret
jg
hlt
xchg
jae
into
add
fs
sub
in
jne
movb
rcr
addl
test
jbe
inc
incl
jge
rcrb
or
inc
jne
inc
repz
add
dec
test
xchg
mov
xor
fiadds
popa
cmpb
lods
mov
shl
pcmpgtd
hlt
mov
rol
pop
push
mov
dec
cld
in
lea
bound
fcom
mov
push
inc
movsl
rorl
pop
fisttps
xchg
or
fmulp
shlb
loop
nop
dec
pop
mov
repnz
ficompl
sub
test
add
lock
sbb
inc
outsl
cmp
aaa
add
mov
jae
hlt
dec
pusha
ret
daa
inc
xchg
mov
push
fsubrl
inc
faddl
xor
icebp
pop
daa
inc
adc
mov
push
aad
jle
fstl
or
lret
add
loope
sub
popa
loopne
sub
dec
and
adc
push
loop
cli
push
ret
outsb
mov
rorl
scas
aas
test
in
int3
stos
xor
inc
sarb
and
dec
lcall
cmp
shll
jge
jns
pop
ficoml
inc
dec
add
pop
fidivs
or
inc
xlat
ja
repz
pop
jb
in
cwtl
jecxz
fisubrs
and
inc
push
and
lds
lods
lcall
cmp
push
add
mov
pusha
cli
mov
push
xor
sbb
xor
sbb
rolb
into
rorb
loop
mov
mov
inc
fsubs
pop
inc
jno
and
scas
lds
cmp
mov
fisttpl
jbe
add
add
ficomps
scas
sub
rolb
jb
mov
or
fisubrs
mov
jecxz
repnz
vpminsw
sub
into
adc
and
or
jecxz
and
xchg
stos
movsl
sub
add
movsb
mov
stos
icebp
imul
lsl
xchg
dec
ret
sub
inc
test
ljmp
mov
adc
fucomp
lods
les
lcall
ret
sbb
and
fisubrs
xchg
rolb
push
mov
lahf
cwtl
in
mov
ja
jecxz
ret
pop
outsb
pop
jne
aad
aad
jno
lret
paddsw
lahf
push
rorb
pop
or
push
icebp
inc
dec
in
push
test
cltd
iret
adc
xchg
addb
pop
sub
ret
or
sub
push
sbb
lds
ret
sub
push
adc
sbbb
and
mov
sub
pop
outsb
jo
in
fucom
imul
js
loopne
push
sub
lret
and
stos
mov
loop
imul
je
mov
out
movl
jb
repnz
push
in
inc
mov
mov
rcrl
sub
stc
movl
test
or
sub
rclb
or
jne,pt
fnsave
pop
inc
jb
or
aaa
lret
xchg
xor
test
push
push
lds
jb
repnz
push
add
push
ffree
pop
inc
jb
mov
leave
fwait
and
push
push
lds
push
mov
ret
jo
pop
sub
lods
add
mov
push
push
cs
mov
daa
sub
enter
mov
pop
jae
imul
pop
popa
lea
call
xor
aad
push
xor
int3
mov
pop
sub
loop
fucom
sti
pop
mov
hlt
decl
jl
or
inc
rclb
lret
xchg
cs
mov
pop
fisubs
imul
mov
shl
les
je
dec
add
ret
test
xor
inc
data16
cmp
cmc
xlat
in
xor
repz
xor
fcomp
rol
lods
notb
push
and
lea
lods
lcall
popf
cltd
cmp
test
and
lret
inc
pop
repz
jp
push
add
loop
repz
mov
leave
fiadds
xor
mov
mov
xchg
push
addb
imull
add
test
aas
movsb
dec
faddp
xchg
fisubs
jno
loop
call
jo
ret
dec
push
sahf
jp
mov
push
ds
mov
sbb
jecxz
pop
mov
popa
sub
ret
inc
inc
gs
jo
cmc
inc
insb
mov
out
jo
pop
dec
test
or
mov
icebp
or
in
sahf
jmp
mov
int3
jecxz
or
push
adc
push
hlt
inc
jae
lea
inc
ss
out
out
in
xor
jns
ret
and
test
imul
or
loop
cmc
hlt
fildll
sub
fucom
mov
mov
cmc
shrl
sar
dec
sub
rcll
test
dec
and
sub
gs
orb
mov
sub
negb
ljmp
ret
fsubrs
notl
aam
in
mov
outsb
xchg
in
pop
call
push
sub
leave
adcl
enter
scas
je
sub
dec
test
pop
pushf
lods
push
jmp
inc
out
jbe
lods
jb
lret
pop
shlb
cmp
aam
stos
dec
in
push
test
dec
jmp
incb
sub
cmpsb
sti
shll
fwait
cli
jno
mov
and
cmp
je
xchg
leave
in
sbb
andl
ret
mov
jecxz
ret
push
mov
subl
cmc
pop
icebp
dec
xchg
sbb
pop
lret
aaa
cmp
iret
ret
je
inc
movsl
jecxz
and
test
ret
ret
push
push
inc
stos
mul
in
clc
mov
data16
xorl
adc
push
push
outsb
xor
std
std
ja,pn
mov
out
iret
jecxz
cs
sahf
mov
iret
and
aad
rolb
cs
rcl
loopne
mov
test
push
in
mov
ja
and
push
push
in
repnz
loop
jbe
insl
xorb
outsb
jnp
mov
xchg
scas
push
push
gs
test
aas
in
add
icebp
out
aas
fisttpll
out
xor
pop
and
rolb
mov
mov
fwait
sub
inc
out
jne
sbb
or
push
sub
je
inc
push
pop
jecxz
xor
inc
lcall
outsb
lds
in
lcall
mov
clc
add
test
and
stos
nop
mov
sbb
add
xor
inc
push
dec
and
ja
cmp
or
loope
cmp
add
test
push
jge
mov
dec
pop
add
xchg
xor
xchg
add
bound
loopne
in
pop
inc
fists
ret
pop
dec
jecxz
cmp
xchg
xchg
add
loop
aas
add
jp
cwtl
pop
mov
or
loop
add
in
hlt
into
pop
push
xchg
cmpsb
loopne
mov
fldl
fildll
push
mov
addb
mov
jo
jmp
inc
subl
adc
push
cltd
sbb
inc
push
gs
cmp
int
jae
repz
or
mov
outsb
push
ss
inc
sub
fcmovbe
xchg
out
or
push
sbb
sub
sbb
ss
push
lahf
int
and
jecxz
inc
cwtl
push
sbb
inc
push
addl
fsubs
xlat
int
cmp
push
sub
dec
xchg
xchg
cmp
popa
pop
or
fisubl
dec
pop
lahf
jae
mov
jecxz
call
xchg
cltd
adc
adc
loope
fs
push
and
push
fcoms
in
in
lea
ljmp
jno
dec
pop
inc
pop
andb
nop
adc
fisubrs
lret
nop
lret
fsubl
cmp
mov
add
jg
cmp
jo
cmp
sarb
shlb
mov
out
inc
and
pop
vmread
je
xor
pop
dec
sar
inc
jp
xor
sbb
dec
inc
pop
pop
mov
mov
cmc
cltd
out
popa
inc
fidivs
cmp
movsl
xchg
jge
ja
movb
jg
data16
push
ds
fsubs
shll
daa
and
dec
adc
pop
lods
lods
sub
lods
cltd
xchg
stos
push
jecxz
mov
enterw
aam
ficomps
lret
js
sub
add
and
fdivrp
es
push
int3
mov
push
subb
imul
dec
rol
fst
test
repz
cltd
out
arpl
sahf
and
sub
cmp
decb
es
push
xchg
in
es
rolb
ret
js
push
or
je
jns
mov
popf
or
jbe
add
or
popa
jg
adc
fldl
push
sbb
or
mov
mov
in
sar
insl
mov
xor
ror
cmpsl
testb
adc
mov
imul
sbb
es
jbe
jmp
push
scas
add
cwtl
add
push
loope
movsl
inc
ret
scas
dec
jl
xor
xchg
dec
sarl
std
adc
jae
lods
iret
popa
std
and
arpl
xchg
int3
add
xchg
repz
pushf
add
dec
xor
jmp
pop
rol
outsl
decb
popl
inc
add
dec
bound
add
into
sbb
xor
lret
in
jp
fldt
mov
jle
and
out
sbb
push
mov
lods
push
inc
imulb
imul
pop
aad
mov
pop
cmp
pop
insl
mov
fdiv
jmp
pop
push
dec
mov
daa
xor
dec
add
test
js
push
stos
and
addb
mov
fmulp
dec
dec
notw
mov
lods
push
push
push
lahf
int
in
xchg
ret
cmpsb
mov
stos
mov
insb
je
ret
data16
jns
xchg
dec
xchg
jl
movsl
testl
std
sub
and
out
add
daa
repz
inc
leave
adc
xchg
jmp
loop
xorl
enter
test
stos
icebp
push
jmp
add
sahf
shl
push
add
ss
mov
sub
mov
dec
out
jae
push
mov
cltd
lds
xchg
mov
pop
rcl
lock
dec
cmp
add
push
pop
or
aas
pop
xchg
pop
mov
push
mov
leave
xchg
stc
xchg
mov
loope
push
adc
mov
in
jo
inc
pop
jmp
xchg
xor
inc
insl
stc
push
mov
dec
adc
gs
loop
jmp
je
and
test
push
push
or
icebp
lods
cmpsb
ja
lea
les
mov
push
mov
out
add
add
sub
arpl
scas
repz
fwait
push
push
cmp
popa
push
push
push
xorl
arpl
jecxz
or
leave
and
fldcw
fisubs
out
sub
xor
dec
push
cltd
imul
movsb
pminub
mov
sbb
push
insl
xlat
jb
dec
aad
add
dec
test
sarb
mov
ret
jb
xor
xchg
data16
xor
inc
jge
stc
fs
mov
loopne
add
and
inc
and
cmp
inc
xchg
mov
mov
pause
dec
and
pop
rolb
jae
cli
and
jecxz
or
sbb
imul
push
mov
pop
adc
test
call
jae
and
jne
pop
push
pop
sbb
or
scas
jo
jae
mov
fs
int3
ss
scas
mov
push
fbld
repnz
ja
iret
outsl
out
cmpb
test
movsl
dec
sub
fs
dec
add
adc
inc
xor
aad
jae
push
mov
sbb
shll
int3
sub
cli
fs
jb
lret
lret
add
add
lcall
xchg
mov
add
cmpsb
push
push
hlt
dec
std
fucomp
cli
fidivs
dec
jnp
or
sub
and
sbb
xor
push
xchg
or
dec
dec
push
mov
in
popf
addr16
pop
push
mov
sub
mov
out
subb
iret
push
lea
fisttpl
pop
nop
xor
sbbb
nop
andl
scas
sti
int3
scas
in
adc
xchg
dec
add
repnz
mov
dec
and
fwait
rorb
mov
sub
dec
and
clc
lods
aam
hlt
xlat
repnz
mov
or
push
adc
insl
push
cmpsl
add
or
jno
inc
lret
dec
std
cltd
scas
out
mov
sub
jno
ds
jge
shll
addb
sti
xchg
push
jne
xor
fs
int3
push
mov
lret
mov
pop
adc
push
aam
and
test
into
repnz
movsb
pop
add
sbb
jecxz
push
rcll
ror
clc
cmp
or
fistpl
movsb
xchg
cmc
xor
repnz
push
ret
test
add
pop
mov
dec
cmp
push
dec
nopl
and
sub
or
insl
cmp
jp
inc
call
test
cwtl
sbb
cmp
pop
xchg
push
dec
adc
inc
sub
xchg
xor
ljmp
cmc
arpl
push
xor
and
jecxz
lret
push
push
stos
cmp
mov
dec
jo
dec
mov
test
sub
dec
in
push
xchg
out
cs
jp
pop
es
stos
lret
pop
into
outsb
dec
shlb
cwtl
adc
add
xor
sub
mov
xlat
jo
decl
adc
sub
dec
je
test
sub
shr
fimull
clc
testl
daa
ret
fnsave
scas
pop
and
loop
loopne
mov
or
mov
and
xor
jge
sub
loop
daa
hlt
push
sbb
scas
and
xchg
dec
xor
add
leave
daa
lods
mov
and
push
in
jno
movb
push
lret
ret
inc
xor
xchg
xor
jge
pushf
icebp
mov
push
test
dec
sarl
push
cmp
mov
sar
inc
push
mov
pushf
inc
ss
int3
imul
shrl
mov
int
dec
out
or
jmp
ret
xchg
cltd
adcl
lods
out
inc
out
dec
or
inc
stos
aad
ljmp
xchg
dec
add
int3
and
dec
push
scas
inc
inc
loopne
mov
push
aam
test
dec
gs
or
mov
sar
mov
sti
shlb
imul
testb
cs
iret
cmp
inc
mov
out
push
test
xor
sbb
in
rcrb
dec
test
gs
pusha
fisubl
jl
lcall
orb
push
das
bound
pop
icebp
cmc
lret
out
in
test
adc
xchg
or
xor
or
andb
xor
iret
xor
les
icebp
aam
and
jae
es
in
clc
jo
inc
icebp
inc
jbe
rolb
xchg
sub
loop
mov
aam
mov
push
test
ret
sbb
stos
mov
push
push
jnp
fs
lret
leavew
mov
les
mov
and
inc
repz
outsb
add
sbb
inc
jo
addr16
xlat
or
std
pushf
inc
rclb
sbb
mov
outsb
push
and
dec
ja
and
lret
lahf
movsb
xor
out
es
loopne
popa
aam
shrb
push
loopne
xchg
imul
shll
addr16
mov
push
xor
push
cltd
xchg
test
stos
xchg
push
pop
aaa
dec
imul
les
movsl
repnz
and
inc
xchg
xchg
push
push
ret
das
loop
fwait
test
and
shl
push
cmp
mov
pop
xchg
popa
adc
inc
adc
push
ja
in
inc
fbld
or
popf
pusha
repnz
and
push
mulb
mov
push
fisubs
mov
and
mov
dec
repnz
shr
push
leave
jecxz
ds
lahf
add
popf
shll
sbb
or
enter
aas
pop
pushf
es
pop
roll
hlt
dec
push
xlat
jecxz
int
and
cmp
loopne
cmpsb
stc
outsl
jmp
sub
jge
add
ficomps
push
jae
repnz
rolb
les
pop
adc
es
xchg
add
repnz
dec
lods
in
pop
pop
lods
orb
in
fsubs
rclb
add
dec
lods
inc
ror
mov
stc
xlat
fiadds
adc
lock
adc
int3
test
and
mov
push
inc
push
sub
inc
push
rorl
push
and
data16
add
jg
add
aaa
shrb
add
adc
mov
inc
sbb
test
inc
popl
mov
xlat
sub
mov
pop
movsl
test
mulb
add
pusha
xlat
mov
or
sbb
mov
in
imull
fiadds
ficompl
push
stos
ret
scas
fadd
and
popa
incb
inc
add
push
pop
lret
add
sbb
sahf
test
lahf
stos
cmp
dec
aad
sbbl
es
fldl
bnd
dec
bound
push
jae
mov
fistpl
inc
js
insl
mov
cmp
in
jmp
shlw
shlb
gs
dec
pusha
lret
add
sbb
jo
mov
mov
or
test
std
jl
mov
push
sbb
dec
sub
out
cltd
cmpsl
push
push
and
subb
addr16
scas
sbb
data16
xchg
out
cmp
mov
inc
sub
gs
and
ret
cmp
cmp
lods
pop
cmp
add
out
add
mov
in
add
inc
mov
push
ret
pop
adc
pop
data16
push
dec
dec
mov
call
fs
repnz
inc
inc
sub
sub
daa
mov
aam
lds
cmp
pop
outsb
push
add
push
pop
mov
xchg
das
push
jge
adc
fs
xchg
jp
add
fcompl
je
xchg
dec
push
adc
lret
icebp
lcall
inc
sub
xor
stos
cmp
xchg
push
cmpsl
lea
int3
ret
mov
test
ret
cmp
push
fldl
loopne
cmc
pop
dec
pop
hlt
lods
mov
out
int
push
cmpsl
sbb
movsl
dec
jno
movb
insl
ljmp
xor
inc
push
and
add
insl
cmp
arpl
ljmp
xchg
int
pop
and
daa
aaa
ret
xor
sub
or
js
and
fiadds
ljmp
dec
mov
call
or
fdivs
dec
lods
int
or
fwait
out
out
ss
jno
nop
ljmp
xor
fwait
mov
jbe
int3
lret
outsb
mov
xchg
jb
lret
jns
sbb
jo
xor
in
movsb
in
ret
xchg
fcmovnu
dec
pushf
insl
pop
lret
dec
inc
ds
leave
push
pop
push
cmp
repz
aaa
sbb
icebp
mov
mov
ss
inc
int3
popa
loop
sub
icebp
adc
adc
es
push
rcrl
inc
mov
aaa
into
push
cmp
out
fisubs
fildll
cld
test
daa
mov
movb
and
notl
inc
subb
mov
lret
push
aaa
or
pusha
mov
push
gs
mov
mov
cmpsl
sub
adcl
add
mov
and
iret
lcall
sbb
pop
push
gs
dec
pop
inc
lret
mull
add
pop
dec
or
xchg
mov
popf
daa
cli
fs
clc
dec
dec
jae
push
out
or
ds
pop
or
pop
mov
push
sub
test
xlat
fs
popf
push
filds
es
mov
arpl
sbb
cmpsb
lahf
jmp
sub
push
mov
xchg
stc
aam
ret
insb
sub
hlt
xchg
or
xchg
jl
add
sbb
xchg
movsb
and
aam
call
into
andb
dec
sti
scas
inc
jl
adc
rclb
push
lret
test
cmpsl
pop
test
pop
mov
lret
stc
fwait
lret
shl
jae
je
or
lods
rorb
paddd
jo
outsl
push
orb
jl
pushf
imulb
mov
js
sbbb
lock
adc
add
test
pop
das
shl
inc
and
mov
ret
gs
cmp
jmp
test
out
into
test
fbld
popa
incb
and
std
add
inc
inc
lcall
push
pop
push
xlat
aas
enter
sbb
int3
pop
jne
mov
fxch
hlt
aam
sbbb
sub
fistps
lea
in
xor
pop
cmp
mov
lret
fisubrs
xchg
inc
or
mov
add
lcall
cmp
ja
xchg
lretw
ret
xchg
inc
jns
mov
stos
inc
sti
mov
push
dec
mov
out
push
into
fisttps
add
mov
push
gs
dec
sub
lret
push
add
xchg
inc
into
adc
pop
inc
popa
out
add
les
fisubrs
mov
push
inc
push
sub
andb
jae
test
xor
arpl
loop
mov
push
clc
push
rcll
adcw
test
mov
push
ljmp
aad
dec
int3
loopne
call
test
jecxz
add
sbb
cld
jbe
push
test
bnd
mov
xor
xlat
stc
cld
mov
and
adc
out
jmp
mov
xchg
mov
jae
mov
fsts
lret
push
mov
mov
int3
and
hlt
hlt
adc
jae
shrb
ljmp
add
sub
lret
movsb
lods
repnz
dec
or
in
push
out
mov
mov
or
jecxz
frstor
sbb
lods
cmc
mov
lods
popa
and
and
ljmp
rorl
addr16
stos
imul
imul
xchg
adc
inc
jecxz
push
mov
movsb
sub
jmp
jae
adc
add
movb
xchg
aad
push
inc
adc
jmp
nop
xchg
xor
leave
sub
insb
imul
and
xor
mov
int
gs
dec
es
adc
push
cs
out
push
aas
push
outsb
mov
ficoml
repz
mov
jb
mov
pop
lea
enter
and
pop
repnz
addr16
xchg
sbb
adc
ret
in
pop
mov
pop
stc
idiv
fbld
pusha
jmp
mov
jne
push
adc
jo
jne
repz
jmp
cmc
stc
jno
mov
std
mov
xchg
xchg
jne
packsswb
test
jae
mov
sbbl
jae
add
fucomi
shlb
add
fsubrs
xchg
test
daa
add
popa
mov
stos
mov
or
and
sub
addr16
push
mov
or
mov
dec
insb
inc
or
xchg
in
xchg
fcompl
out
lds
push
loopne
inc
pusha
sub
xchg
outsl
fldt
lret
notl
xor
jo
pushf
test
movsb
stc
xchg
cmp
mov
popf
mov
lock
mov
loop
lret
jbe
insl
movsl
cmp
in
movsl
cmpsb
les
xchg
enter
jecxz
mov
gs
dec
inc
push
cmpsl
add
jne
es
dec
xor
mov
xor
stc
mov
pop
loope
call
loop
push
shlb
pop
jmp
fstl
lcall
fsubr
xor
test
fistpl
inc
sub
mov
jge
or
fisubs
in
sbb
insb
ret
neg
inc
jnp
std
cmc
cwtl
clc
xchg
mov
insb
shll
sub
fadd
dec
movsb
add
ret
iret
in
dec
pusha
repz
mov
push
push
repz
or
add
cmp
loop
xchg
aam
pop
mov
jg
adc
push
xchg
cmpsb
jl
mov
pushf
movsb
fnstsw
pop
addl
popa
loop
in
mov
cmp
jle
movsl
pop
xchg
mov
or
inc
sub
mov
out
and
aas
adc
pop
jo
xor
lods
test
testb
insb
adc
daa
es
cmp
movsb
filds
stc
and
add
pop
push
add
roll
mov
xor
push
sub
loop
and
xchg
pop
pop
jno
mov
push
sbb
adc
xchg
test
scas
mov
aas
mov
lret
arpl
lcall
push
mov
fstpt
inc
and
pop
int
daa
pushf
jg
inc
mov
subl
cmp
les
mov
aas
cwtl
and
rorl
and
fiaddl
into
sarl
out
and
jo
icebp
cmp
in
or
lods
fwait
and
adc
dec
cmp
and
lcall
rorl
adc
mov
push
mov
add
lret
aad
jge
push
push
das
inc
popa
adc
mov
lds
icebp
dec
fidivl
jecxz
lcall
mov
fadd
dec
lcall
or
loop
push
xor
xor
push
fsubs
mov
inc
push
movsl
fldl
shlb
fdivp
int
adc
xor
pop
fs
testl
aas
sbb
pop
rcl
pop
push
stc
fiadds
rcrl
push
popf
mov
mov
adc
mov
leave
add
repnz
jnp
and
mov
outsb
sbb
inc
cld
movsl
imul
xor
repz
int
adc
rclb
js
dec
lds
add
sub
in
out
push
sbb
jae
jne
mov
out
dec
imul
shll
lret
inc
aam
adc
mov
jb
pushf
cmp
aas
cmp
dec
adc
cmp
or
adc
into
pop
xchg
push
cmpsb
and
mov
je
ljmp
out
xchg
add
scas
js
nop
xor
push
mov
cld
and
fists
call
pop
iret
fsub
push
arpl
ljmp
stos
rclb
jb
ret
inc
add
jl
push
jbe
mov
adc
aas
push
popf
les
pushf
mov
jne
dec
pop
je
fs
mov
testl
sbb
fnstenv
and
fdivs
jmp
ret
jle
adcl
dec
insl
and
and
push
ljmp
ja
dec
loopne
push
mov
mov
fisubrs
pop
adc
push
or
mov
mov
jno
mov
insl
inc
mov
inc
jo
jb
imul
inc
sub
jne
jmp
leave
icebp
sbb
xor
push
add
js
jmp
jge
pop
out
add
mov
loopne
cli
aaa
adc
popa
iret
mov
arpl
xchg
jmp
scas
and
push
fstl
pop
inc
inc
clc
mov
stos
mov
in
movsl
bnd
and
les
imul
les
push
roll
les
shrb
popa
add
stos
mov
jmp
mov
scas
xor
stos
outsb
xor
lds
lret
testl
lret
sbb
testb
mov
inc
test
testl
push
push
or
popf
es
aaa
mov
sub
and
push
clc
add
xchg
mov
push
and
add
add
mov
sub
ficoms
pop
pop
jne
sub
and
add
xchg
add
and
and
jmp
or
cwtl
or
pop
sti
fimuls
test
mov
mov
rclb
mov
out
in
and
bound
dec
and
xor
inc
dec
imul
imul
rclb
inc
stc
jo
mov
and
and
add
push
ss
inc
roll
mov
fsubrs
ss
icebp
std
adc
popf
psrlw
cli
mov
dec
xor
pop
inc
faddl
lea
push
adc
add
dec
jno
iret
jbe
in
iret
popa
push
rorb
test
jmp
sahf
jl
repz
leave
pop
fisubrs
jg
jns
jno
or
fisubrl
or
inc
pop
jecxz
mov
lds
cld
test
sbb
repnz
mov
xor
xchg
mov
rorl
sub
cli
cltd
das
pop
lret
shll
lret
ret
lock
loop
sarb
int3
cmc
movsb
jl
xor
jno
popa
pusha
dec
adc
popf
and
pop
push
insl
jge
imul
push
ljmp
icebp
in
bound
mov
jle
gs
out
xchg
push
lods
rol
repz
xor
xchg
out
inc
rorl
jo
rcr
mov
std
in
sbb
fmulp
sub
in
addr16
jmp
fimuls
lret
dec
and
lret
decb
sub
add
lds
mov
ret
lret
arpl
dec
les
decb
insl
pop
mov
insl
leave
es
xchg
dec
inc
xor
call
xchg
gs
out
sub
push
daa
aam
push
movsb
mov
lods
adc
inc
mov
mov
pop
incb
and
fsub
mov
push
out
repz
or
in
lret
lds
std
mov
fisttpl
les
dec
inc
or
push
into
popaw
mov
rorl
or
les
adc
in
add
xor
xchg
and
or
rclb
xchg
sbb
and
in
pop
jno
or
add
fsubrl
xor
loopne
fimull
mov
xchg
pop
add
sub
jl
aaa
fidivs
movhps
orl
icebp
mov
and
cmp
mov
cmp
inc
mov
adc
shrb
cmpsb
outsb
jge
sub
mov
mov
shlb
jno
fnop
cmp
lsl
add
lods
stc
insl
fimull
aaa
loopne
mov
notb
or
add
dec
push
jg
cmp
or
jp
mov
xchg
fcomps
xlat
fwait
inc
xor
jno
add
xor
mov
inc
or
ret
sti
inc
in
jnp
xor
loop
movsb
out
int
dec
jecxz
push
jns
add
adc
mov
ds
jns
movsb
and
pop
out
mov
leave
lock
loop
jl
add
pop
jecxz
out
icebp
mov
pusha
add
mov
cmp
xor
xchg
aaa
fmuls
leave
pop
mov
lcall
stos
sub
or
jae
sub
jge
out
adc
inc
fmuls
jmp
mov
xchg
dec
or
aas
mov
jmp
ss
lret
ret
inc
or
clc
add
adcb
out
fidivl
ljmp
js
adc
xchg
mov
cwtl
cmp
jl
push
addl
in
cmpsb
lods
testb
dec
out
cli
jbe
mov
cltd
xchg
das
adc
xlat
mov
mov
insl
mull
rcll
cli
shl
jo
push
mov
xchg
push
xor
cmp
cmpsl
pcmpgtb
popf
ret
sbb
shl
ret
ret
pop
notl
enter
or
xlat
faddl
jmp
dec
push
call
xchg
xor
push
int
or
pop
jne
mov
mov
fcoml
mov
cmp
jmp
lods
mov
or
into
fildl
mov
insl
push
xchg
mov
icebp
mov
mov
cmpsb
insb
dec
and
adc
push
dec
push
or
lds
lods
mov
mov
sub
lcall
mov
add
fs
inc
cmp
inc
or
aas
jg
and
add
hlt
lret
dec
inc
icebp
pop
adc
mov
mov
xor
mov
in
push
roll
ficomps
dec
xchg
or
aas
stos
pop
test
xor
mov
xor
cmp
aas
cld
test
sub
xor
test
xor
cmpsb
cmp
aaa
add
fldl
pop
lret
repz
inc
pop
push
mov
roll
aad
movsb
mov
rcr
repnz
sti
xchg
add
push
stc
mov
popf
jge
scas
incw
push
dec
loopne
xchg
mov
aam
mov
push
stc
aas
ret
fldl
iret
les
xor
dec
out
in
rclb
cld
inc
push
add
sub
mov
ljmp
fists
mov
repnz
xor
lahf
stos
ret
inc
and
fiadds
sbb
arpl
hlt
rolb
dec
push
or
mov
aaa
xor
sbb
inc
pop
int
mov
mov
int3
and
inc
cld
nop
test
inc
sbbl
dec
lcall
lods
in
cmp
and
jbe
mov
inc
pop
stc
dec
pop
pop
notb
sub
xor
daa
pop
push
dec
out
fucom
lods
lcall
fidivrs
popa
in
fbld
pop
dec
jmp
or
dec
call
push
inc
and
shl
mov
pop
dec
popf
adc
xor
xchg
jmp
or
fwait
dec
xor
jecxz
or
stos
lods
push
fisubl
xor
mov
iret
sbb
add
jmp
xor
mov
loope
mov
sub
loopne
pop
adc
lcall
inc
cmp
inc
xchg
shrb
in
xor
repnz
out
mov
dec
xor
xlat
push
out
pop
in
rolb
aas
push
fisubs
dec
push
inc
dec
lods
jmp
jne
lret
adc
sbb
cmp
mov
addr16
stc
aas
rorb
les
subb
push
loope
mov
inc
sub
sbb
or
inc
test
and
cmp
lods
xor
enter
call
mov
lret
dec
cmc
jecxz
fldenv
fadd
push
xor
inc
insb
mov
dec
and
pop
sahf
fmul
sti
leave
daa
sub
mov
stc
cmc
movsb
fs
or
fistps
subl
stos
add
or
leave
and
inc
inc
in
call
add
xchg
loop
ret
jae
jge
xchg
and
lods
mov
pop
dec
mov
pop
mov
cmp
hlt
stos
inc
repz
adc
xchg
lcall
test
lret
sub
jne
mov
shrb
aad
inc
lcall
jb
mov
adc
pop
pushf
pop
jae
repz
mov
lret
addb
pushf
xchg
mov
daa
lea
jmp
ja
test
pop
lcall
push
jnp
dec
aas
das
add
adc
add
rcl
xchg
push
pop
pop
fldl
inc
enter
ret
jmp
in
and
aas
sti
ss
std
loop
enter
jae
pop
imul
jno
ss
out
lret
mov
lea
add
adc
ljmp
or
test
adc
fisubs
sbb
outsb
in
ss
sti
out
xor
inc
pop
int3
xchg
in
jecxz
cmc
sub
mov
inc
inc
and
imul
fistpll
xlat
jmp
xchg
push
and
sbbl
loopne
clc
mov
jmp
stc
pop
add
pop
out
inc
jmp
mov
jmp
popf
aad
test
mov
and
or
ret
loop
and
das
adc
mov
sbb
stos
cmpsb
lds
test
addr16
pop
jno
mov
jecxz
repz
sub
jb
jae
roll
mov
movb
jle
and
sbb
lret
fildl
imul
je
add
or
stos
sub
fsubrs
fimuls
adc
push
rol
add
mov
leave
in
popf
and
je
jnp
inc
jne
jae
lret
ficomps
push
jmp
sub
xchg
in
push
pop
fdivl
movsb
shl
adc
lea
scas
pushf
dec
mov
jno
jle
xor
sbb
iret
mov
orl
add
or
cmpsl
dec
les
push
enter
pusha
stos
add
and
aad
hlt
leave
xchg
in
mov
push
jmp
xor
popf
mov
aas
or
fadd
mov
leave
xor
add
inc
inc
xor
push
or
test
dec
mov
lods
fiadds
fwait
cmpsl
add
aas
push
mov
mov
mov
in
lods
repz
lods
call
ljmp
nop
sbb
fcmovnbe
push
stc
xchg
fdivp
add
bound
arpl
in
xchg
jns
lret
mov
mov
xor
dec
data16
lret
sub
cli
jecxz
and
or
add
lret
dec
or
xchg
and
and
cmp
stc
sub
jle
or
sti
ja
cltd
fcom
decb
mov
pop
insl
inc
add
mov
adc
xchg
out
stos
jne
and
inc
xor
adc
jb,pt
push
and
lret
out
xor
and
mov
into
lods
push
cmp
lret
rclb
sbb
and
or
and
jmp
fcmovnbe
les
sub
cmc
and
jmp
xchg
lret
decb
adc
out
or
incb
fwait
inc
pusha
mov
test
dec
adc
xchg
movsb
je
sbb
cmp
dec
inc
insb
pop
mov
mov
or
fsub
punpcklwd
add
sar
test
dec
inc
pop
sub
out
jno
scas
pop
and
cmpsl
mov
mov
imulb
xchg
mov
incb
rorl
or
mov
xchg
add
rcr
cmc
shlb
lods
ret
insl
stc
mov
add
imul
jp
cmpsb
add
dec
inc
shld
push
scas
mov
into
pusha
enter
adc
pop
jp
mov
data16
add
push
inc
je
std
xchg
std
jns
mov
in
jle
into
daa
nop
popf
inc
xor
pop
out
mov
mov
inc
xor
in
xchg
orb
fistl
mov
pop
scas
sub
in
addr16
sti
sub
movsb
xchg
sub
cmp
repnz
lret
add
call
jo
out
push
and
int3
inc
js
into
cmpsl
dec
aaa
sti
imul
jmp
ljmp
scas
xor
insb
movsb
out
ret
je
mov
adc
lods
iret
fadds
cmp
push
icebp
cmpsl
add
mov
mulb
xchg
xchg
xor
out
jns
in
lcall
mov
rcrb
and
push
dec
dec
inc
dec
ljmp
ljmp
in
fbld
jns
add
and
jmp
movsl
and
dec
cmp
lods
or
jl
and
xchg
push
sub
or
add
cmpsl
and
incb
aas
and
push
dec
push
add
jmp
insl
shlb
add
inc
in
add
test
push
add
lret
jmp
and
ja
push
idivl
sti
imul
repnz
push
jg
hlt
int3
dec
cli
sub
das
fildl
add
dec
emms
insb
dec
or
or
addr16
testl
repz
btr
lahf
sub
iret
xchg
dec
push
outsb
jne
inc
scas
or
cmp
pop
imul
insb
jmp
xor
adc
or
pop
pop
or
add
mov
psubsb
sahf
push
mov
call
aas
movl
push
dec
arpl
inc
std
std
mov
push
fs
data16
push
push
jmp
jl
mov
lahf
sbb
je
test
ss
push
xchg
cmpsl
cmpsb
test
lret
mov
lcall
repnz
sti
incl
daa
shlb
pop
shlb
adc
addr16
jl
xchg
test
repnz
arpl
push
mov
sub
dec
mov
lret
fisttpll
call
add
subb
sti
pop
fcmovb
pop
ret
sub
pop
and
cld
ljmp
cmp
push
push
daa
add
les
xlat
jne
sbb
psadbw
inc
movq
sbb
add
dec
push
int
add
test
addr16
frstor
outsl
dec
mov
dec
aaa
out
dec
ja
push
cmpsl
flds
inc
out
sub
mov
sbb
aam
cmc
sahf
stc
push
add
push
and
inc
jle
fnstenv
lea
pusha
pushf
dec
mov
mov
mov
add
mov
and
mov
cltd
dec
inc
xor
inc
in
push
or
arpl
dec
fimuls
pop
test
rolb
ret
inc
mov
xlat
dec
push
sub
cltd
inc
lds
ret
and
and
xor
jo
and
insl
and
loop
icebp
testb
cmpsl
ss
les
mov
ficomps
inc
lret
add
mov
sbb
lret
js
push
shl
pop
sahf
pop
int
lcall
ja
stc
loop
xchg
and
or
xor
xlat
push
cmpsl
mov
imul
lds
lret
sub
inc
xchg
jo
xor
xchg
xor
push
fnclex
cld
adc
pop
lret
das
and
and
neg
fyl2x
popf
xor
mov
and
and
push
out
test
cli
or
pushf
imul
sub
rclb
test
mov
ljmp
jecxz
push
lahf
paddw
cmp
lsl
mov
rclb
test
iret
test
xchg
pop
icebp
fstpt
sbb
dec
inc
xlat
dec
lret
nop
pop
das
push
pop
loope
shlb
jbe
cli
and
push
sbb
pop
insb
xchg
pop
mov
mov
mov
jmp
push
nop
adc
pop
mov
leave
mov
call
repz
add
mov
pop
into
call
mov
cmpsb
jo
lret
divl
add
fs
add
mov
roll
push
lahf
lods
call
push
mov
lods
in
in
rolb
adcl
pop
nop
push
pusha
or
in
dec
pop
inc
adc
fs
in
imul
ret
mov
stos
dec
repnz
das
inc
mov
jbe
mov
ret
cmc
movsb
mov
ffree
test
outsb
loop
fisubs
dec
movl
pop
adcl
add
test
or
cmp
lods
or
mov
loopne
out
inc
idiv
out
push
sub
adc
stc
and
mov
out
icebp
jb
or
push
xchg
icebp
lcall
in
sar
inc
push
jne
shrb
add
jb
mov
sub
xchg
lahf
mov
pop
push
add
decb
mov
mov
push
xor
mov
inc
push
cs
and
xchg
pop
and
adc
daa
movsb
mov
in
add
fldcw
xor
xchg
pop
add
mov
adc
fdivr
subb
dec
dec
fsubs
mov
ret
test
push
orl
pop
dec
jecxz
mov
sbb
mov
push
lock
mov
fcomip
and
insb
inc
imul
leave
adc
leave
xor
pop
xchg
fs
add
jo
jbe
inc
ret
mov
scas
mov
loop
out
jnp
and
fstpl
mov
sti
sub
sbb
add
push
rorl
enter
xchg
rorb
push
shlb
nop
and
mov
loope
shrb
mov
shl
jge
push
jmp
aam
lea
lock
lea
push
cmpsb
sub
mov
inc
pop
xchg
enter
add
mov
into
inc
push
aas
ja
inc
or
mov
stc
in
or
scas
loop
push
repz
mov
jmp
add
icebp
pushl
sub
and
mov
fisttps
out
cltd
stos
mov
nop
dec
inc
pushf
les
insb
add
jmp
lret
ds
mov
dec
jb
ret
inc
int3
clc
or
inc
add
fsubrs
inc
jo
stos
pop
add
pop
push
mov
out
or
cmpsl
into
xor
adc
push
jp
inc
jne
dec
addr16
data16
sub
inc
add
push
cmp
cmp
out
lret
scas
jmp
inc
mov
adc
decb
decb
push
mov
mov
inc
and
cli
add
mov
adc
jae
jl
cmc
ret
aad
and
bound
jae
push
sti
cmpsb
daa
pusha
out
filds
jae
and
inc
push
push
loop
inc
loopne
push
lods
fcom
cwtl
cmc
sbb
in
inc
leave
lret
inc
and
add
ja
xor
cmp
lahf
pop
add
popa
fisubrs
jp
aas
fs
fs
push
data16
sti
push
inc
call
pop
jnp
movsl
or
js
addr16
mov
mov
sub
or
jle
sub
xchg
shrl
mov
arpl
dec
pop
ja
nop
icebp
and
aad
mov
fidivl
pop
shll
pusha
lods
add
jo
stc
sub
cmp
fcomip
rcl
xorl
push
adc
je
xchg
addl
cmp
mov
clc
jle
mov
cmp
xchg
js
inc
mov
mov
scas
push
test
mov
outsl
je
cmp
ret
sbb
push
cmc
ret
mov
lret
pop
ret
dec
push
xor
add
push
inc
cmc
push
ret
aas
jnp
or
lods
and
add
push
jae
and
inc
mov
adc
mov
lods
in
loop
push
rclb
out
inc
lds
inc
lds
sub
adc
mov
xlat
sub
fisubs
ror
mov
inc
pop
jg
rcr
add
bound
pop
movsl
ret
push
mov
mov
enter
orb
pusha
pop
clc
test
sub
or
fcomip
dec
sub
add
pop
mov
adc
data16
mov
mov
sbb
push
testb
or
popa
lcall
or
lret
pop
aad
pop
ret
sub
mov
fisubl
push
cld
pop
jle
cmpsl
inc
mov
fsubl
jecxz
fistpl
fidivrl
in
xchg
mov
test
jne
xlat
inc
and
jbe
lds
sarb
or
and
fwait
fwait
sub
sbb
lods
mov
xor
inc
cwtl
push
popa
sub
adc
insl
sub
xchg
ficoms
adc
jbe
es
add
ret
and
xor
roll
sub
mov
xchg
and
out
sub
insb
cli
daa
jb
jmp
test
out
sub
push
stos
psubusw
mov
mov
das
arpl
stc
sub
cmp
stos
mov
leave
and
ds
xchg
add
inc
popa
leave
cmp
aas
xchg
cmp
xchg
and
mov
adc
mov
sbb
stc
lds
xchg
mov
shrb
aas
addb
push
dec
jp
push
fs
nop
cmpb
add
daa
mov
cmp
pusha
sub
lds
jb
adcb
mov
jecxz
adcb
in
jmp
ja
rcrb
xlat
lea
pop
loopne
movsb
add
add
inc
jae
add
aaa
or
mov
xchg
inc
mov
stos
pop
clc
inc
test
out
jecxz
jmp
mov
iret
xchg
xchg
xchg
and
dec
inc
addr16
stos
xor
add
es
jecxz
sub
test
sti
fs
mov
ljmp
push
addr16
sub
les
dec
je
cltd
mov
insl
push
pop
adc
rcrl
mov
in
cmp
dec
stos
mov
sub
daa
mov
in
mov
rcrb
jae
repz
in
xchg
and
add
enter
inc
add
and
inc
roll
fs
mov
mov
or
sub
pushf
repz
cmpsl
push
outsb
aas
pop
dec
rolb
out
dec
cmp
sub
mov
cmp
or
push
loope
addr16
shll
dec
test
ja
fldcw
sub
jle
enter
mov
insl
clc
mov
pop
out
decb
xor
inc
lret
dec
and
pop
shl
inc
in
lret
jo
fwait
xchg
mov
add
dec
cmpsb
popf
outsl
push
mov
xor
xchg
ret
inc
js
xor
in
cli
mov
sub
xchg
jg
add
inc
mov
mov
jmp
sub
call
xor
pop
xor
dec
inc
and
cmp
sub
cmc
mov
fldt
inc
pop
int3
imul
push
call
pop
mov
or
popf
mov
cmp
mov
loopne
xor
ljmp
mov
push
in
ret
data16
and
push
inc
and
fisubs
adcl
ret
repnz
addr16
xor
mov
sbb
movsl
aaa
jmp
xchg
push
push
xchg
cmpsb
mov
int3
frstor
sub
andl
inc
mov
lcall
test
fidivl
jmp
dec
dec
jg
pop
sbb
xor
in
popa
lahf
push
imul
and
xor
jb
lret
cmp
jae
imul
dec
sarl
jmp
sahf
out
jecxz
out
sbb
fnsave
add
lahf
fcmovne
nop
pusha
adc
lds
push
faddl
clc
mov
dec
call
cmp
mov
repnz
in
sub
push
inc
push
dec
mov
ret
adc
clc
inc
mov
insb
arpl
xor
dec
ljmp
out
fsub
iret
lret
mov
push
outsb
sti
dec
jecxz
stos
leave
repnz
xor
es
out
or
fdivs
dec
pop
dec
and
out
jmp
mov
pop
jmp
jnp
dec
icebp
xchg
shlb
clc
incl
test
fidivrs
add
and
and
inc
repnz
hlt
and
ljmp
inc
mov
in
sbb
jb
or
dec
mov
dec
push
gs
sti
or
aas
mov
lds
inc
add
roll
cmp
add
and
cmpsl
test
jbe
sbb
loop
inc
fimull
mov
cmp
pop
lods
and
gs
mov
pop
pop
sbb
pop
lock
inc
cmpsl
xor
mov
aad
cmp
lods
cmpsb
inc
jle
inc
ret
cwtl
mov
rcrb
sub
fscale
fdivrp
and
repz
xor
scas
push
sbb
jecxz
bound
push
mov
rcrb
dec
in
mov
cld
inc
icebp
aad
decb
decb
sbb
iret
add
pop
mov
jmp
dec
sbb
inc
mov
fidivrs
std
fisubs
fcoml
mov
inc
leave
sub
add
dec
inc
or
mov
test
mov
icebp
and
aaa
dec
in
insl
xor
iret
test
push
and
and
or
adc
leave
ds
in
mov
out
mov
sub
fnsave
icebp
or
xchg
fisubrl
xchg
dec
pop
in
rolb
jmp
je
xor
popf
dec
dec
movsb
jae
xor
nop
ret
or
int
jb
dec
shll
add
or
push
mov
repnz
xor
stos
leave
popa
ror
insb
jo
mov
fstl
test
pushf
inc
mov
in
jp
add
xor
aas
mov
loop
lods
and
mov
popf
faddp
pusha
nop
sbb
aas
adc
add
cmp
imul
inc
dec
dec
popf
jns
gs
push
mov
xchg
inc
and
lods
bound
sub
lret
and
pop
xlat
cmpsl
clc
cmc
test
push
and
pop
push
call
scas
out
sub
shl
sub
shlb
or
cmpsb
lret
into
addl
ret
push
sub
outsb
decb
cmp
mov
sub
adc
outsb
or
sbb
aaa
mov
or
cld
adc
stos
daa
stc
push
bound
mov
mov
mov
inc
ljmp
ss
out
ljmp
in
inc
lret
inc
inc
xchg
pop
inc
stos
sub
push
xchg
imul
sub
xlat
lahf
push
xor
push
cmp
adc
and
jmp
mov
jge
xchg
repz
nop
push
incl
push
pop
mov
lea
in
inc
js
pop
push
fistpl
push
xchg
xchg
jmp
sub
pop
loop
push
or
int
sub
icebp
mov
movl
loop
or
mov
movb
jbe
dec
bound
popa
xchg
mov
out
lds
test
sbb
inc
bound
jecxz
iret
repnz
insb
pop
mov
aas
ljmp
jge
pop
mov
repnz
es
insl
in
pop
push
es
adc
jnp
loopne
loop
inc
aaa
add
inc
push
in
or
repnz
int3
cmp
hlt
test
fadds
jo
aam
loopne
sbb
add
aas
addl
fisttpl
dec
shlb
jae
inc
jbe
int
xor
adc
xchg
bound
loopne
dec
cmpsb
pop
mov
cmpsb
adcb
inc
or
icebp
or
mov
int3
push
lret
push
dec
and
cmpsb
fmull
jo
lods
push
and
rcrb
xor
push
sti
jp
mov
fistps
cltd
mov
inc
add
into
sub
out
inc
fstps
push
sbb
adc
inc
pop
add
push
pop
jno
mov
lds
fisttpl
popa
jbe
push
sbb
lret
shlb
decb
ret
icebp
or
jbe
ret
adc
push
into
push
gs
add
mov
push
dec
in
rcll
ss
movsb
jbe
inc
xchg
inc
loop
out
enter
repnz
ret
add
lret
cmpsl
pop
cli
es
sbb
hlt
test
roll
inc
push
add
pusha
int3
pop
push
repz
push
fwait
push
lock
push
fcmove
adc
ret
cmpsb
lahf
inc
xor
mov
in
push
xor
and
outsl
repnz
or
mov
jns
ljmp
add
fidivrl
outsl
rorl
test
cld
mov
inc
mov
out
das
bnd
sbb
cmp
and
add
fidivrs
pop
cmc
fnstcw
je
cli
fildll
sub
insb
xchg
movsb
icebp
adc
dec
mov
cmove
push
aam
imul
bound
int
mov
adc
pop
or
push
xchg
repnz
jl
sbb
cwtl
push
icebp
push
cmp
outsl
sub
xchg
or
arpl
scas
lret
xchg
jbe
test
or
out
jne
pop
gs
lret
repz
xor
cmpsb
pop
pop
ret
push
adcb
das
sub
popf
adc
stc
xor
xchg
pop
popa
adc
inc
xchg
ljmp
sbb
out
cmp
sbb
inc
mul
jecxz
pop
or
cmpsb
loop
and
fwait
jle
lds
lods
push
testb
and
out
ret
stc
add
inc
std
add
sub
enter
and
sub
imul
test
shrb
add
gs
call
and
das
fsubrs
std
adc
dec
popf
and
push
or
dec
mov
hlt
outsl
call
shlb
mov
push
add
sub
orl
dec
movsl
repnz
je
shl
mov
mov
xor
fsubl
test
sahf
stos
sub
nop
lahf
inc
inc
or
shrb
shlb
jecxz
and
mull
mov
or
jmp
inc
jmp
mov
push
out
add
in
mov
pop
add
scas
icebp
out
push
rcrl
cmp
push
daa
push
push
mov
std
dec
inc
mov
pop
adc
hlt
fisttpll
mov
jecxz
sub
popf
jnp
push
dec
prefetch
flds
xor
rorb
push
jbe
subl
sbb
fisttpll
repnz
loope
int3
mov
call
mov
and
test
fucomp
les
xlat
mov
mov
out
push
jae
lret
lods
ret
and
out
or
incb
scas
mov
les
add
push
icebp
xor
add
pop
mov
mov
xlat
or
repnz
or
pop
daa
or
push
push
add
dec
jl
jno
ret
inc
ljmp
push
xor
or
push
dec
xor
xchg
in
lock
sbb
int
pop
mov
out
ret
inc
int3
sub
test
and
dec
jo
and
and
and
std
ficoml
sbb
cmp
imul
movsb
daa
mov
fldenv
fmull
add
movsb
or
adc
add
and
arpl
pop
and
dec
pop
push
mov
cmp
mov
jb
aas
pop
push
and
inc
pop
lahf
das
popf
addr16
repnz
cmpsl
xchg
lds
inc
mov
rcl
in
cmpb
filds
mov
clc
mov
fstpt
inc
jecxz
jo
dec
jecxz
cvtpi2ps
jmp
jmp
dec
movsb
dec
pop
iret
adc
jecxz
jmp
fdivs
gs
cmpsl
and
mov
lret
jmp
mov
mov
inc
popa
mov
cmpsl
pop
sbb
pushf
dec
sahf
and
ss
push
cmpsb
mov
pop
jno
mov
movsl
mov
cmp
jecxz
push
and
xor
fcomi
inc
jo
mov
sbb
and
aad
nop
rol
ljmp
pop
cltd
xchg
movsl
mov
mov
test
and
mov
xchg
cwtl
andb
sub
icebp
inc
mov
or
mov
fists
divb
inc
sti
cmp
jbe
push
lds
pop
je
fnsave
jecxz
jne
lret
lcall
pop
or
inc
les
sbb
cmovle
ret
xchg
inc
push
jo
sbb
shll
add
or
push
sbb
fidivrs
fwait
add
dec
stos
popf
cmc
stc
pusha
out
movsb
xchg
test
popa
or
pop
or
clc
adc
fstl
rcll
add
push
mov
cltd
or
in
xor
outsb
mov
ror
jmp
fisubrl
jno
daa
call
push
mov
sub
fists
add
in
sbb
cmc
pop
jbe
mov
cld
gs
popl
push
daa
fs
daa
inc
leave
inc
add
or
mov
push
aas
sahf
or
add
jge
into
sbb
cmp
cli
pop
in
cmp
imul
pop
es
cwtl
push
in
push
stc
pop
lds
mov
in
cmpl
xor
cmpsl
jnp
or
dec
ret
ficomps
mov
push
mov
pop
jmp
xchg
jno
ret
lret
add
cmp
adc
rorl
mov
cmc
decb
xlat
repnz
cmp
imul
mov
mov
popf
fnstenv
out
sbbl
xor
ret
out
movsb
repnz
jge
popf
push
iret
jmp
adc
out
loop
daa
jb
and
iret
fcompl
test
jmp
cmp
xchg
ret
push
push
lods
in
inc
adc
les
jg
cmp
lea
mov
or
popa
adc
adc
xor
mov
adc
adc
mov
enter
daa
fimuls
inc
ja
adc
in
xlat
aad
mov
clc
addr16
les
jno
enter
dec
pop
mov
lret
test
sbb
dec
jge
out
add
lock
xor
lds
cli
push
sti
inc
mov
mov
jmp
stos
mov
nop
inc
aam
jecxz
pop
scas
repz
adc
orl
fildll
add
cs
push
and
and
inc
aam
inc
or
repnz
cmp
ret
out
bound
fisttpl
lock
mov
dec
sub
enter
test
push
fistpll
inc
dec
cmpsb
stos
gs
imul
mov
dec
fstpl
je
rcl
mov
js
jp
mov
push
int
inc
adc
adc
cmp
push
call
or
ret
aad
inc
ret
mov
int3
sub
and
xchg
push
mov
mov
aad
sub
push
add
sbb
add
pusha
icebp
inc
jns
mov
pusha
shll
adc
xor
test
add
jge
and
insl
flds
and
inc
add
xor
mov
cli
add
xor
and
leave
pushf
stos
and
les
xor
push
inc
sbb
push
push
xchg
push
jb
pop
stc
jae
es
mov
and
out
ret
dec
fcmovnu
push
outsb
test
xor
repnz
xchg
pop
xchg
scas
xchg
xor
pop
mov
ficoms
cmp
jp
stos
repz
cwtl
je
dec
xlat
sub
gs
rcll
lods
cmp
data16
jge
xor
addr16
popa
mov
fimull
add
lds
lret
leave
lahf
mov
bnd
cltd
push
sub
inc
fiaddl
add
add
test
cmp
pop
imul
mov
jmp
pushf
or
das
ss
or
push
lret
fnstsw
xchg
dec
bound
sub
inc
xor
push
inc
pop
cmp
jae
sar
scas
xchg
clc
shll
and
aas
mov
push
mov
cmc
in
shlb
mov
ret
jb
mov
call
and
movsb
push
push
lret
jae
or
daa
and
insl
inc
in
pusha
add
fstpl
sub
in
sbb
ret
loope
push
stc
mov
push
cmpsw
mov
data16
cli
cwtl
fidivrs
into
call
sub
lods
loope
sbb
out
cli
fsubl
daa
add
mov
call
lods
fdivs
stc
and
sbb
xor
decb
xlat
std
push
inc
and
or
js
sbb
inc
mov
std
and
orl
pop
push
pusha
dec
jae
cmp
xor
dec
add
ret
push
dec
sub
xchg
and
push
mov
sub
lea
sarb
pop
cli
jnp
cld
pop
mov
outsb
in
scas
xlat
gs
stos
insb
jecxz
pusha
inc
mov
data16
in
dec
lds
pop
fidivrs
mov
adcb
lods
xchg
mov
adc
stos
xchg
loope
xor
sti
push
daa
and
sbb
pop
ljmp
cld
xchg
loop
les
add
enter
xor
or
jecxz
es
push
inc
jo
mov
clc
jmp
lret
test
in
arpl
or
icebp
std
int3
pop
rorl
lods
cmpsb
fldl
and
aam
loop
and
cli
inc
dec
pop
test
pop
and
sti
push
mov
jl
fbstp
and
dec
xchg
lret
hlt
in
jecxz
ficompl
jmp
push
push
popf
ljmp
repz
push
data16
lock
in
bnd
rorb
or
call
mov
data16
mov
fmulp
mov
je
add
dec
push
hlt
in
leave
add
push
add
gs
test
call
inc
inc
icebp
test
pop
fiaddl
pop
sub
or
add
daa
jmp
stc
in
sbbl
sbb
jmp
push
xor
leave
imul
jns
sub
jmp
pop
mov
mov
cli
dec
add
mov
aam
dec
sar
sbb
push
jb
sarl
push
je
sub
push
test
pop
andnps
jmp
mov
loopne
sub
jl
test
or
cwtl
dec
adc
mov
sub
and
jmp
adc
stos
imul
and
stos
sbb
pop
je
mov
cmp
sub
dec
push
or
inc
sub
pop
sub
test
imul
mov
dec
movl
stc
inc
add
inc
and
xor
rolb
test
dec
xor
cmp
ficompl
imul
out
test
fs
je
enter
out
sbb
testl
mov
xchg
test
sub
loop
or
jne
call
and
mov
shl
mov
and
es
rclb
dec
vcomiss
lret
lcall
arpl
movsb
push
daa
mov
out
pop
xchg
jge
smsw
popa
rorl
pop
add
mov
xchg
fstl
sbbl
test
inc
aaa
xchg
fisubrs
xor
dec
shrb
aad
xchg
sbb
popa
jle
add
lahf
jl
or
jae
shll
push
push
dec
xchg
and
mov
pop
out
mov
fcmovu
aam
mov
loop
outsb
xchg
mov
imul
inc
std
fwait
mov
cli
popf
pop
cltd
jecxz
scas
mov
jae
fmull
leave
jae
xorb
test
and
or
xor
dec
inc
sub
es
stos
imul
push
popf
mov
inc
mov
inc
xlat
adc
mov
dec
mov
add
lds
popf
aaa
push
push
and
lock
iret
mov
cmp
insb
aad
fcmovb
jne
xor
cmp
or
mov
in
ljmp
add
lods
fildll
test
std
call
adc
mov
cmp
xchg
pushf
dec
loopne
sub
andl
mov
adc
cmp
cmpsl
mov
test
or
int3
in
sahf
inc
popf
inc
dec
xchg
jmp
aas
pushf
xor
pusha
add
xorl
rolb
decb
push
add
pop
int3
fldcw
in
and
in
mov
and
mov
sub
mov
adc
test
lret
mov
cmp
dec
jbe
repnz
loop
mov
cmc
cmpsb
or
push
jae
push
out
jae
mov
std
mov
pop
mov
adc
repnz
lea
inc
and
push
out
add
inc
sub
clc
xchg
mov
roll
dec
cltd
push
inc
or
xor
stc
imul
pusha
aaa
clc
mov
jmp
outsb
cmp
jle
into
cmpsl
mov
xor
loop
xchg
mov
imul
pop
push
push
cmp
mov
or
pop
jle
repnz
mov
push
xor
mov
outsl
ret
loope
ret
jo
fsubs
mov
or
push
xorb
je
dec
pop
test
push
sub
aas
andb
lods
mov
jecxz
jno
and
into
sub
add
es
add
in
sub
mov
lret
xchg
ret
aaa
inc
pop
mov
scas
lds
lock
pusha
icebp
sar
add
loop
add
push
stc
inc
jb
daa
push
lahf
fcoms
pop
jmp
ret
and
sbb
xchg
ficoms
dec
fcoms
sbb
jae
in
lret
cmpsl
push
cvttps2pi
pop
jbe
loope
test
and
push
push
arpl
or
pop
aad
dec
mov
dec
or
pop
inc
insb
in
stc
adc
gs
mov
pop
pop
push
loop
imul
arpl
ds
loop
shrl
xchg
ja
and
bound
sbb
and
nop
movb
daa
aam
pop
stos
imul
sti
sub
xor
leave
dec
lahf
icebp
movsl
mov
or
mov
mov
fwait
mov
mov
call
sub
out
add
xchg
aas
add
cmp
adc
push
add
inc
fxch
pop
out
jg
cmc
in
pop
inc
sbb
mov
cltd
jge
lahf
xorb
ljmp
test
add
gs
fcmovbe
pop
je
cmp
sub
cmp
sub
adc
lds
stos
hlt
ret
ljmp
pop
dec
adc
fidivrs
rep
aad
cmp
sub
std
mov
out
sub
daa
filds
jmp
sbb
insl
sbb
mov
inc
inc
adc
rclb
and
mov
dec
pop
inc
inc
push
mov
sbb
pop
and
sbb
inc
aam
rcr
pop
jne
scas
add
or
xor
xchg
cmpsl
in
cltd
repnz
push
pop
mov
pushf
or
mov
add
lds
pop
dec
cmc
fnstsw
fidivl
push
lcall
xor
cltd
dec
arpl
mov
add
jo
jb
push
inc
add
loope
push
and
mov
jnp
lds
push
test
outsl
sbb
sbb
ljmp
mov
ds
inc
icebp
outsb
mov
mov
andl
cmpsb
ret
adc
shl
mov
sbb
movsl
xor
add
jno
call
rcll
push
sub
pop
inc
inc
add
imul
hlt
dec
pop
ret
pop
repz
repz
fimull
lods
push
out
shl
xchg
pusha
sub
xor
pusha
rorl
xchg
imul
adc
cmp
fsubrs
push
dec
js
shlb
sbb
inc
add
loop
addr16
adc
rcll
jo
and
ret
sub
and
inc
cmp
orl
rcll
rorl
xchg
push
in
inc
adc
ret
mov
or
add
insl
cmp
xlat
xor
fistpll
arpl
pop
call
jnp
orl
loop
mov
dec
int3
inc
daa
enter
fdivrs
test
push
adc
sub
out
jmp
cltd
fdivrl
dec
pop
rorb
push
pop
call
fs
mov
inc
lret
push
inc
sub
mov
pop
push
daa
out
jo
push
add
rolb
dec
dec
ret
xchg
push
mov
dec
insl
icebp
xor
push
test
shrb
shrl
pop
mov
xor
shrl
out
xor
sbb
xchg
data16
cwtl
pusha
fmulp
repnz
jle
pop
aad
adc
jae
popa
icebp
aam
xor
sub
lcall
dec
fwait
and
push
jae
push
push
dec
test
mov
cmpsl
pop
cli
in
jl
js
inc
in
xchg
sub
fninit
xchg
jmp
add
mov
fdivp
testl
mov
gs
pop
or
bnd
sbb
test
add
xchg
loop
xor
add
push
gs
sub
jl
mov
bound
testb
push
xor
pop
loop
lcall
sbb
outsb
les
fistl
inc
fnclex
add
leave
add
jbe
and
movsb
sub
cld
rcr
clc
repnz
jle
adc
or
imul
ret
xor
push
inc
jo
mov
push
bnd
cld
and
dec
mov
testb
movsb
sub
push
inc
add
les
sub
add
loop
xor
xchg
mov
aas
incb
dec
lods
dec
ffree
cs
cmpsb
xor
mov
pusha
cmpsb
ljmp
xor
into
rcr
lock
or
lods
in
movsl
ficoms
adc
pushf
loop
mov
sahf
sub
inc
or
xchg
mov
dec
iret
shll
imul
lret
jb
les
scas
aas
enter
pop
addr16
mov
pushf
movsb
ret
jns
in
cmp
arpl
imul
xchg
jo
ret
push
dec
popa
dec
aad
and
fimuls
or
mov
mov
add
fdivrp
repnz
sahf
xchg
ja
inc
leave
movsb
fistps
das
cmp
mov
dec
arpl
loop
sbb
jo
cmp
jmp
and
adc
lods
mov
or
std
pop
sbb
jae
shll
add
loope
xchg
iret
push
pop
sbb
mov
movsb
adc
jb
shl
mov
in
lods
push
or
inc
pop
dec
adc
divl
dec
push
cmp
and
sti
pop
or
sbb
add
rcll
in
sub
mov
out
fsubr
aas
mov
or
sahf
jno
cltd
fldcw
lods
pop
jne
sub
add
mov
inc
sti
loopne
jae
and
inc
push
mov
cmp
dec
xchg
imul
xchg
push
dec
add
pusha
data16
aaa
decl
push
adc
pop
mov
pop
push
addr16
lock
imul
push
push
lretw
mov
int3
fnstenv
jecxz
xor
xchg
out
mov
in
leave
jnp
fldcw
pop
jno
pop
sub
jmp
inc
cmp
loope
fcmovu
cltd
out
adc
xor
insl
xchg
pop
push
or
mov
pop
jecxz
adcl
or
sub
int
xor
mov
mov
jmp
jne
pop
sub
int3
sub
ds
mov
fiadds
test
jmp
movsb
lods
sbb
inc
in
out
jle
aaa
mov
mov
popa
add
loope
lret
fiadds
dec
in
jo
jb
mov
jne
repnz
xchg
mov
lahf
push
lea
loop
lods
ljmp
sbb
sub
rolb
xor
fnstenv
aas
push
nop
mov
sbbb
cmpsb
lods
mull
push
test
pop
pop
mov
and
push
xor
add
sbb
out
xor
es
jl
add
sub
outsb
push
pop
fdiv
pop
scas
jge
xor
xchg
cmpsl
push
out
adc
mov
loopne
sub
add
orb
lods
dec
fidivs
sbb
and
bound
mov
push
lods
insb
icebp
jo
xor
xchg
mov
test
mov
bound
pusha
lods
mov
add
loop
stos
mov
js
push
jge
mov
adc
and
jb
xor
xchg
cmpsb
push
pop
or
inc
inc
inc
sub
add
xchg
out
cmp
mov
out
push
jb
and
mov
arpl
orl
push
aaa
pop
cmpsl
rorl
sub
popa
jne
xor
add
mov
mov
je
and
fsubr
push
sub
cwtl
xlat
push
retw
dec
and
aaa
xlat
xchg
xor
or
or
sub
cld
lds
icebp
ret
mov
xor
jle
call
data16
aaa
xchg
inc
sti
jae
cli
mov
cmp
inc
push
jecxz
dec
sbb
cltd
icebp
movl
cwtl
bound
add
out
in
cli
cld
cmp
in
inc
mov
jnp
aas
jb
sub
cltd
and
vminsd
pop
into
outsb
lret
add
push
lea
test
jp
push
lret
mov
jg
or
and
sarb
cmp
pop
xchg
or
adc
out
inc
daa
cltd
mov
mov
aaa
mov
push
inc
data16
das
rol
mov
addr16
xchg
xchg
sti
push
out
fdivs
add
add
pusha
rcr
in
add
sbb
enter
inc
push
lret
mov
dec
mov
ret
mov
movsl
mov
fldcw
dec
sahf
jbe
xor
pop
rolb
dec
adc
adc
bound
scas
cmpsb
test
sub
push
mov
ljmp
push
cwtl
push
and
dec
mov
add
cmpsb
push
daa
jnp
in
rorl
or
xchg
or
cmp
popa
lret
cmpl
and
inc
cltd
jg
adc
stos
push
subl
dec
mov
loopne
add
repnz
and
data16
xor
xchg
lret
ret
test
xchg
jo
movsb
mov
es
sub
and
jp
xor
mov
movsb
sub
push
mov
dec
or
lret
add
addb
push
inc
loop
inc
daa
xor
mov
andl
pop
push
and
repnz
test
dec
sub
rcl
addr16
mov
jno
push
jmp
sbb
negl
in
inc
test
sbb
and
jno
add
xchg
push
jp
xchg
push
push
inc
lods
push
in
pop
mov
fisubrs
inc
addr16
aad
rcrl
decb
mov
imul
ret
push
imul
pop
mov
or
dec
xchg
lods
shlb
dec
not
jecxz
lea
or
xchg
cmpsb
lods
sub
xchg
stc
push
jo
enter
xor
int3
inc
cmpsl
sarb
xchg
lods
sub
into
jno
test
out
dec
cs
add
aas
jg
jge
out
subl
xchg
mov
mov
lcall
inc
xchg
test
or
xor
jno
pop
dec
pop
inc
xor
inc
ror
lods
adc
push
ljmp
cwtl
jb
xor
out
push
pop
clc
fs
mov
and
mov
mov
mov
inc
pop
sbb
pop
jbe
xor
and
daa
xor
popa
loop
mov
frstor
mov
mov
jle
push
jne
inc
loop
dec
daa
xchg
inc
mov
into
and
sub
int3
or
push
iret
inc
or
xchg
dec
dec
jbe
xor
shlb
sub
sbb
add
mov
ret
and
jb
test
jns
mov
insl
xor
es
sbb
loop
sbb
adc
ss
clc
das
adc
rorb
cmpsb
jmp
movsb
scas
test
adc
xchg
cmpsl
xor
adc
out
icebp
loop
dec
incl
inc
ljmp
leave
jo
sbb
push
rcl
lar
adc
shl
das
pop
mov
scas
das
in
fs
aaa
adc
pop
pop
add
inc
lods
inc
jle
adc
dec
adc
aas
push
sub
jns
and
inc
std
enter
cmpsl
sub
scas
pop
imul
add
jecxz
jb
test
adc
add
jecxz
out
in
mov
push
cmc
into
inc
push
mov
xchg
arpl
cmp
inc
pushf
daa
push
mov
cmp
xor
addr16
add
jl
add
insb
xchg
adc
test
inc
shll
icebp
loopne
jg
or
mov
ret
push
dec
or
popf
cmpsb
pop
mov
pop
jbe
push
ffreep
inc
xlat
aas
adc
xchg
repnz
ljmp
jnp
mov
out
stos
xor
mov
int
and
inc
into
lea
mov
imul
add
and
sub
cld
sbb
leave
mov
pop
in
into
push
xchg
movl
push
ss
into
bound
incb
pop
xchg
rorl
xchg
ret
jo
imul
jge
aad
adc
inc
xor
kmovb
test
cmp
stos
sbb
cmp
xor
cmp
mov
popa
psrad
push
add
rorl
push
inc
test
lods
fcoml
nop
icebp
test
xor
fldcw
in
dec
ret
mov
ja
pop
lds
aam
icebp
ljmp
lods
push
jns
mov
push
mov
push
sbb
mov
xchg
test
lea
sbb
lods
and
cmc
out
jae
or
adc
lcall
sahf
jbe
subb
ficoms
add
fbstp
roll
rclb
fcoml
add
mov
xchg
ficoms
inc
lret
ljmp
dec
push
jle
into
lret
rcll
ss
sub
jno
fldenv
stc
sahf
clc
push
imul
push
sub
aam
inc
clc
aas
mov
pushf
fiadds
ret
and
int3
das
bound
jns
stos
xlat
bound
pop
jae
pop
ret
lea
push
or
out
cmpsl
mov
lret
stos
lcall
and
adc
sub
repz
loop
jmp
cmc
sbb
mov
out
daa
inc
fildll
jbe
fwait
xchg
fldl
dec
inc
fisubrs
sbb
pop
mov
shlb
cmp
movsl
les
add
mov
movsb
loop
icebp
cmp
xor
addb
repnz
js
and
leave
shll
pop
ret
jo
mov
lea
movsl
dec
loope
cwtl
cmp
dec
test
stos
jne
mov
popf
leave
lods
daa
mov
inc
mov
ret
mov
inc
xor
push
mov
ss
lret
mov
imul
lret
mov
fwait
sbb
out
sub
push
fs
fbstp
pop
mov
xor
push
dec
push
jecxz
frstor
inc
mov
xor
in
dec
push
push
cmp
or
les
ror
rcll
inc
jge
cmpsl
add
jae
les
jbe
push
push
movsl
mov
jae
inc
mov
in
mov
sbbb
sarl
ret
push
cmp
enter
cmp
inc
sub
enter
sub
bound
jo
pop
insb
les
int
mov
ficoml
repnz
incb
stos
push
sarl
xlat
aaa
bound
lds
cmpsl
sar
cld
fisttpll
pop
imul
and
or
xor
pop
mov
inc
xchg
pop
jmp
stc
insb
sub
aas
jle
sub
arpl
inc
loopne
movsl
fsubr
pusha
push
lret
aas
out
push
lds
push
xchg
pop
arpl
cmpsb
lods
mov
and
scas
pop
movsb
test
pop
imul
xchg
sbb
inc
jbe
push
jae
xchg
inc
or
arpl
sbb
or
and
jb
xchg
sbb
xchg
add
add
addl
jb
sbb
sub
xchg
vpmaxsw
sbb
fiadds
sub
xor
push
cmp
sbb
and
jle
stos
xchg
push
subl
xchg
popf
mov
push
adc
jo
into
hlt
add
jbe
lcall
inc
jmp
addl
add
pop
push
xchg
fsubr
dec
and
inc
jae
addr16
mov
jmp
adc
insb
mov
cmpsb
ljmp
das
push
mov
push
movsb
out
or
push
in
sti
xchg
push
nop
arpl
movsb
jecxz
pop
xchg
inc
mov
cmp
ret
sbb
mov
sbb
xor
or
data16
mov
lds
ss
mov
mov
das
mov
sbb
fisttps
fdivs
xchg
ss
adcb
js
ret
imul
sbb
pop
pop
and
stc
dec
addr16
xchg
and
push
cmp
fidivrs
stc
pop
iret
mov
outsb
enter
inc
into
shrl
scas
pop
pop
pushf
lahf
rolb
jae
push
inc
mov
popa
ret
push
ret
and
push
or
fcmove
xor
sub
xchg
sub
and
add
repz
loopne
loop
push
cwtl
ljmp
xchg
sbb
test
les
xor
dec
loopne
ret
sub
fmulp
fisubl
pop
adc
xchg
mov
xor
cmp
pusha
dec
scas
ret
sub
sbb
dec
jbe
sub
movsl
das
push
cmp
cmp
mov
lds
and
lods
sbb
or
nop
int3
loope
lret
mov
pop
xchg
xchg
mov
aad
fdivp
add
add
stos
add
and
sub
in
and
inc
movsb
xor
repnz
cmp
test
loopne
inc
mov
and
sub
sub
sub
cmp
mov
movsb
imul
nop
push
dec
out
pop
jle
or
in
in
mov
fadds
addr16
jo
lar
addr16
sub
mov
jb
mov
stos
das
inc
push
int3
mov
jmp
frstor
aad
add
lahf
add
hlt
mov
sub
lret
aas
sbb
cs
in
imull
push
dec
iret
mov
push
lds
mov
mov
icebp
mov
mov
imul
rorw
sbb
inc
sbb
cmp
push
cmpsl
fbstp
inc
jg
jg
add
mov
lods
mov
dec
inc
push
movl
fs
xchg
jge
daa
sbb
ror
lsl
ret
pop
in
mov
add
aas
pop
adc
lret
sti
mov
pop
jmp
cmp
mov
clc
dec
sbb
push
out
xor
mov
mov
enter
jnp
push
pop
pushf
jae
dec
add
dec
in
and
ficompl
push
xor
fucomi
js
out
loop
call
pop
mov
stos
xlat
push
lahf
cmp
loope
les
rorl
sub
add
xchg
and
and
scas
xor
xchg
xor
sub
hlt
cwtl
sub
add
loope
mov
cmp
repnz
sub
dec
sub
add
jae
adc
xchg
bound
xor
push
sti
xor
pop
inc
test
loope
repnz
mov
pop
xor
popf
sub
mov
cwtl
scas
jbe
lcall
notb
repnz
xor
popa
test
rol
add
jle
sbbb
xor
dec
jnp
jmp
ficomps
fisubs
pop
cmpl
fcmovne
mov
inc
sbb
xor
jbe
mov
mov
call
aad
test
ret
sub
mov
xor
insb
or
ret
or
adc
and
outsb
pop
dec
pop
mov
mov
aad
fdivs
push
push
push
sub
insl
push
xor
sub
hlt
push
lods
and
mov
std
add
fstpl
pop
xchg
int
aam
das
sbb
lods
into
leave
aam
inc
pop
icebp
xor
jle
rcrb
xor
call
push
fisttpl
dec
loopne
int
pop
stos
sub
mov
mov
in
xor
popa
insl
mul
mov
sarb
js
push
rcl
inc
clc
js
xor
ror
mov
imul
or
sbb
and
iret
lret
ds
inc
inc
incb
out
addr16
xlat
movq
or
and
mov
mov
add
data16
add
dec
ss
inc
jbe
lret
cwtl
fs
aas
sbb
repnz
inc
jge
jle
sahf
or
cwtl
inc
push
or
and
cli
jae
mov
inc
xadd
xchg
dec
in
sbb
mov
ljmp
ficomps
adc
mov
imul
dec
iret
pop
jmp
aas
imul
nop
jo
xor
push
dec
or
add
pushw
sbb
in
xchg
mov
add
sbb
pop
aam
or
cwtl
repnz
jmp
mov
repnz
adc
inc
jnp
mov
mov
and
mov
pmaxsw
xchg
test
xchg
pop
add
cmc
add
shlb
xchg
add
cmpsb
repnz
subl
into
push
cmpsb
test
xchg
jle
insl
ret
repz
inc
ret
bound
inc
movsb
ret
faddl
and
loope
iret
scas
xchg
jae
push
add
ja
cltd
shlb
dec
jp
dec
sub
jmp
cmp
roll
mov
lret
into
pop
xchg
add
pandn
pop
out
mov
lds
repz
adc
mov
decb
mov
adc
add
cmc
push
inc
or
out
mov
int
adc
dec
std
movsb
push
push
sti
mov
pop
fists
cmpsl
lds
outsl
ret
mov
jns,pn
or
lret
stos
outsl
add
bound
sub
xchg
mov
cmp
popf
popl
scas
dec
movsb
sub
nop
or
mov
mov
xor
sbb
mov
adcb
out
inc
ret
add
inc
sti
dec
leave
cli
jecxz
loopne
iret
loopne
mov
nop
lock
iret
mov
ja
icebp
xlat
shr
mov
repz
fildll
test
repz
stos
xor
stos
std
ficompl
add
movsl
add
scas
enter
stos
xchg
fidivl
idiv
lret
add
adc
es
jmp
dec
sub
mov
jne
push
mov
es
dec
add
sub
leave
xchg
inc
aad
push
leave
out
mov
es
push
cmc
sub
fninit
xchg
jb
aad
mov
int
adc
leave
and
cwtl
ret
stos
pop
ficompl
sbb
ret
cmp
movb
aad
mov
or
pop
and
mov
push
stos
xor
jle
dec
or
lds
sbb
inc
repz
cmpsb
mov
mov
aam
mov
pop
add
and
int3
bound
jno
out
dec
testb
pop
add
sbb
scas
outsl
xlat
xor
dec
dec
out
push
ret
xchg
or
lea
mov
les
out
ret
dec
aad
cs
xchg
data16
xlat
loop
ret
in
xchg
adc
sub
cmp
movsb
add
xor
in
aad
push
inc
loopne
ret
pop
rol
movsl
cmpsb
inc
mov
iret
shl
ret
pop
leave
lds
push
les
inc
inc
sub
idiv
sub
jle
fxam
repz
lock
sarl
add
ljmp
out
dec
addr16
fildl
dec
loop
inc
int3
lret
and
fs
movsl
fmul
add
cmc
sbb
lret
mov
lret
push
push
repz
pop
adc
fidivl
push
add
inc
shrb
xchg
or
ret
pop
loop
inc
ret
shlb
sbb
mov
aaa
loop
or
call
dec
addr16
inc
lret
rcll
xbegin
xor
test
in
jmp
out
loop
jecxz
xor
sbb
xchg
loop
rcrb
cmp
or
ffree
and
mov
lock
xchg
clc
repnz
push
testl
ret
inc
pushf
ret
sub
or
push
scas
inc
imul
jo
dec
mov
sahf
out
into
or
arpl
scas
stc
out
adc
inc
lds
jb
loop
arpl
or
or
or
loop
jb
inc
mov
fldcw
mov
ret
iret
loop
push
sub
jmp
int3
call
test
jecxz
shl
into
add
and
inc
and
jmp
push
repz
fs
add
enter
int
rclb
cmc
and
push
dec
movsb
ret
shll
out
out
lds
in
andb
pop
add
andl
push
push
add
leave
imul
in
mov
adc
out
stos
shr
sti
repz
push
pop
dec
pop
pushf
shlb
jo
pop
jb
push
in
dec
fistpll
ds
add
stos
cmp
aam
mov
loopne,pn
pop
out
out
mov
rolb
dec
mov
loop
inc
lret
push
js
mov
fidivs
imul
jle
int3
pop
je
sbb
stos
enter
pop
jbe
and
mov
lret
push
or
std
xor
push
sbb
mov
push
xlat
inc
add
paddw
cwtl
mov
mov
xchg
ret
scas
cltd
loopne
jp
sbbl
sar
mov
mov
sub
rcll
loop
repnz
sub
ficompl
sbb
out
cwtl
lret
fistpl
mov
mov
cmp
or
ficompl
mov
and
rorl
inc
push
ret
sub
jle
add
push
ret
adc
aad
sub
mov
adc
outsl
outsb
lods
scas
xlat
das
lods
or
mov
out
dec
pusha
mov
leave
sub
roll
push
sbbl
fimuls
ja
xchg
sub
lds
jg
lock
ret
mov
or
mov
mov
insl
and
clc
out
inc
push
ret
or
and
push
insl
inc
test
jecxz
sahf
clc
int
cmpsb
out
out
fldenv
shlb
jecxz
xchg
fld
push
cltd
lods
and
adc
imul
jne
jp
ret
stos
or
fisubs
andb
jecxz
out
test
ret
dec
lods
push
pop
inc
popa
leave
enter
cmp
data16
fnsave
mov
add
add
and
jb
xchg
mull
pop
sbb
stc
dec
mov
mov
xor
xor
inc
push
in
pushf
fsubl
inc
adc
mov
cmpsl
cmp
jmp
xor
mov
out
mov
je
ret
sbb
loopne
ja
xchg
dec
shl
iret
shrl
pop
add
inc
xor
daa
jae
sahf
lds
add
sub
cmpsb
ror
repz
inc
xchg
cwtl
into
jno
leave
ficoml
jo,pn
mov
push
in
jecxz
pop
loop
jmp
pop
jecxz
leave
xchg
jnp
loop
repz
or
lods
push
loop
dec
mov
leave
outsl
arpl
dec
xor
imul
lock
sub
lock
push
sahf
adc
push
stos
xchg
loop
inc
push
dec
jecxz
ret
mov
inc
cmp
rcrb
dec
dec
dec
repnz
ss
mov
es
mov
jo
xor
jno
jp
fsubp
or
adc
mov
fnstcw
repnz
push
repz
nop
ret
into
mov
repnz
shlb
dec
fildl
xor
add
repz
sub
and
add
sub
push
pop
sub
or
rcr
adc
subl
into
add
std
jmp
outsb
cld
lock
dec
aam
lds
scas
push
inc
cs
ljmp
out
bound
loop
xchg
arpl
xor
sbb
scas
and
arpl
and
pop
mov
push
out
outsl
outsb
lds
add
arpl
add
dec
dec
stos
sub
ljmp
mov
imul
xchg
or
or
add
lds
aam
push
dec
and
jl
sbb
inc
into
mov
add
test
scas
dec
push
push
add
scas
into
push
xor
pushf
mov
mov
push
dec
out
out
call
enter
ficoms
jae
push
mov
push
jae
aad
xchg
jmp
inc
mov
or
push
dec
int
lods
popf
mov
rcrb
cmpsl
aad
mov
enter
mov
call
dec
xor
mov
dec
test
sbb
enter
or
adc
push
inc
test
push
outsl
jmp
ja
into
sub
in
lret
les
lods
das
je
clc
arpl
xchg
fdivrs
repnz
adc
add
adc
mov
shrl
call
or
cmp
dec
lea
jae
inc
rcrl
or
lds
mov
adc
scas
inc
push
call
xchg
inc
or
dec
aaa
enter
imul
lcall
movsb
inc
push
mov
mov
jl
or
dec
jbe
vpaddb
das
xchg
sbb
popf
adc
dec
in
push
sub
cmp
nop
sbb
sbb
inc
ret
ljmp
xlat
xchg
orl
ljmp
or
sbb
pushf
int3
fisubs
lea
in
repz
insl
pop
and
incl
les
lds
cmpl
mov
push
aam
xlat
mov
js
shrl
nop
push
lods
aam
popf
ret
sbb
jle
dec
ret
sub
jl
out
pop
add
add
xor
push
add
inc
add
ljmp
call
jae
mov
add
cmovge
pop
jmp
mov
dec
xchg
scas
int
in
outsb
inc
imul
lret
movsb
add
ffreep
js
inc
lds
lahf
rclb
xor
or
imul
ret
fs
inc
push
cs
dec
and
ja
lds
add
sti
add
int3
xor
xchg
cmp
arpl
xchg
mov
adc
fidivl
in
lock
popl
xor
mov
xor
movsb
mov
adc
xorb
sub
dec
rclb
pop
xchg
ret
cmpsl
sub
xchg
push
inc
mov
xor
inc
jb
lret
frstor
dec
ret
pop
ret
dec
loop
bnd
or
imul
iret
out
outsl
sub
loop
inc
and
jecxz
dec
fwait
adc
mov
lret
add
jae
pop
xchg
repnz
inc
add
shll
add
and
and
mov
fwait
jecxz
mov
jmp
ja
xchg
push
xchg
daa
in
dec
adcl
rcrl
es
cmpsb
stos
test
fninit
mov
cmc
test
dec
sub
jns
add
cli
out
into
aam
or
xor
jmp
and
into
lret
addb
ret
or
inc
or
mov
in
push
push
cmp
ror
ljmp
outsl
les
rol
add
cli
cmc
mov
sbb
lock
insl
les
enter
sub
jno
ret
cmc
inc
add
inc
imul
xlat
movl
bound
cmp
mov
xchg
ss
repnz
jae
sub
shl
icebp
std
das
pop
pushf
insl
push
dec
adc
lods
repnz
adc
jnp
adc
in
repnz
in
nop
sub
fmulp
mov
iret
fmull
jb
pop
mov
ja
aad
lcall
test
jo
xor
sub
sti
xor
jo
movnti
outsb
test
in
inc
xchg
mov
stos
add
xor
inc
lods
loopne
lock
mov
cmc
repnz
jb
repnz
xchg
out
mov
mov
push
lds
lcall
cmp
pop
add
inc
adc
pop
xor
mov
mov
lds
xchg
push
xor
mov
mov
cmpsb
rcrl
jne
inc
inc
stc
lret
cli
sbb
lret
inc
pusha
jae
loopne
aaa
ds
sub
imul
loopne
iret
pop
into
xor
fwait
div
dec
mov
das
ret
mov
repnz
sub
lea
pop
shlb
fneni(8087
mov
xchg
mov
data16
rorl
ret
adc
int
cmova
and
shll
aas
sbb
loop
fidivl
out
xchg
mov
inc
leave
mov
fsubrl
jae
sbb
jb
inc
push
mov
jo
xchg
jbe
jmp
or
ret
sarb
push
subb
mov
inc
pushf
pusha
ss
pop
pop
aas
cmp
push
aad
inc
adc
xlat
push
xchg
add
cmp
icebp
mov
jno
lahf
or
inc
in
jb
ficoms
pop
out
icebp
push
add
adc
lahf
ljmp
in
outsb
mov
mov
cwtl
mov
lods
add
aas
sbb
loop
ret
inc
xor
cmpsb
lds
and
lcall
insb
inc
or
leave
xchg
dec
insb
cmp
sahf
cmc
sub
sbb
mov
scas
xor
in
and
lcall
mov
lea
mov
inc
cld
lahf
mov
sbb
call
loopne
fwait
xchg
inc
aas
ds
push
inc
sub
aad
jp
add
cmc
mov
sub
cwtl
mov
inc
jge
mov
lea
addb
sbb
pop
mov
inc
shl
push
je
fidivrl
lcall
dec
pop
mov
xchg
lods
loopne
dec
mov
xchg
dec
testl
into
push
insb
ret
xchg
add
xor
jae
cltd
inc
sub
insb
cmpl
cli
flds
mov
lea
sbb
ret
push
or
inc
add
xor
mov
outsb
and
push
push
push
arpl
jb
incb
add
add
dec
mov
or
insb
push
inc
and
mov
cmp
aas
orl
push
lret
int3
aas
sub
lcall
mov
jo
stos
inc
stc
cltd
xchg
push
mov
cli
inc
inc
aas
insb
or
inc
loope
mov
jnp
fisubl
and
inc
in
lcall
jecxz
enter
fidivrs
add
sbb
pop
stos
adc
add
push
mov
data16
sar
mov
or
repnz
sub
sub
repz
mov
lods
sub
push
mov
mov
xor
aas
xlat
inc
inc
clc
push
pop
lcall
sbb
mov
push
fisubs
or
fidivs
inc
pop
dec
pop
ret
lods
jl
jecxz
inc
jno
mov
mov
icebp
xor
lods
xchg
mov
call
mov
lock
imul
jle
xor
push
cmp
les
add
outsl
les
sbb
iret
ret
clc
sbb
dec
sub
xor
and
test
jl
lock
fnstenv
leave
add
push
push
out
or
dec
mov
xchg
int3
in
repnz
push
and
cmp
stc
jns
dec
inc
fs
sbb
call
data16
inc
rorl
xchg
jbe
and
rcl
sbb
lret
aaa
js
in
push
loop
push
sub
add
sub
sbb
jne
inc
loop
inc
or
jbe
call
adc
cmpsb
adc
or
sbb
inc
sub
decb
push
inc
fimuls
or
enter
dec
test
dec
rcrl
lret
fisubrs
shlb
inc
inc
out
repnz
popa
lret
xor
sbb
aas
shrb
jo
add
fs
loop
inc
mov
out
jge
jecxz
xor
jbe
in
mov
jle
cmpsl
cmp
push
mov
push
mov
sbb
leave
mov
add
or
jp
push
mov
inc
cmp
pop
push
lea
clc
out
push
addl
mov
jae
adc
fimull
aas
int3
sbb
ret
mov
cmpsl
adc
push
add
mov
cli
inc
mov
test
dec
ljmp
xchg
dec
push
aas
mov
repnz
int
inc
daa
outsb
sbb
bound
out
dec
sti
xor
test
leave
inc
ficoms
xchg
iret
add
mov
adc
inc
iret
fimuls
sbb
repz
les
xor
mov
mov
inc
push
roll
mov
add
jecxz
sub
es
lds
xor
js
cmp
xor
mov
sbb
sarb
cld
lea
loopne
testb
inc
in
nop
inc
adc
jno
outsl
sub
repnz
sub
in
fidivs
push
sub
stos
into
and
int3
jae
push
and
popf
and
dec
jno
pop
aas
addb
pop
adc
cmp
es
es
inc
mov
icebp
lcall
xchg
subl
add
sar
and
cmp
mov
fld
jmp
or
cli
movsl
pop
lock
movb
and
jnp
pusha
arpl
loop
ss
popa
dec
pop
in
les
aas
sahf
sbb
push
add
das
les
pop
loopne
insl
shlb
dec
mov
jbe
cmp
cmpsl
adc
repnz
or
and
cld
ret
shl
icebp
lods
fidivs
push
push
in
dec
outsb
inc
cmp
mov
in
popa
ret
cmp
stos
cmp
pop
enter
adc
or
mov
add
pop
cmp
xchg
mov
dec
lahf
orb
push
mov
ror
mov
mov
mov
add
loopne
cmp
int
inc
mov
pop
aas
popa
mov
cmpsb
inc
ret
mov
xchg
mov
mov
add
lcall
pop
inc
dec
cmc
arpl
mov
push
dec
mov
aas
fsub
pop
mov
mov
lea
xchg
or
cmp
das
inc
jecxz
jecxz
push
pusha
mov
addr16
int
popa
ret
push
loopne
add
aam
fdivs
mov
fisubrl
mov
sub
daa
mov
xchg
fcomp
xchg
xchg
or
test
lods
in
adc
aas
cltd
loopne
sbb
and
xchg
cmp
lahf
or
out
dec
cmpsb
fisttpll
fbld
leave
xchg
sub
add
ljmp
loopne
dec
sub
pop
ja
jo
inc
jae
mov
test
xchg
out
ret
pop
in
push
or
lret
arpl
cmc
out
cmpsb
jno
and
fadd
aaa
sub
dec
pop
or
pushl
sbb
adc
sti
rcl
inc
push
dec
stos
in
mov
and
pop
mov
out
ret
pop
lcall
pop
jno
es
test
xlat
popa
adc
inc
xchg
inc
outsb
les
lods
or
pop
mov
xchg
xorb
es
and
jno
mov
std
push
xchg
xchg
movsb
rcrb
aaa
and
xor
xor
pop
jmp
js
enterw
mov
ret
test
gs
movsb
push
add
mov
enter
add
adc
sbb
iret
or
out
cmp
dec
lods
and
test
dec
ret
scas
or
addr16
jb
sub
inc
push
pop
jmp
bound
push
push
inc
subl
fidivs
mov
sub
push
xor
fadd
jmp
dec
rol
cli
fldcw
fcomp
add
ljmp
fsubrs
popa
mov
mov
mov
xchg
outsl
xor
add
hlt
push
add
dec
scas
outsb
sahf
xchg
push
out
imul
into
lcall
ja
push
dec
bts
or
mov
fisttps
cmp
loopne
inc
lret
mov
sahf
add
mov
inc
mov
call
js
push
jl
and
in
hlt
mov
out
push
adc
mov
sbb
xchg
clc
arpl
in
or
add
or
inc
insb
mov
dec
mov
inc
push
push
mov
cmp
popl
popa
fistl
cmp
sub
in
xor
inc
iret
add
fisubs
and
adc
popa
lds
inc
xor
sbb
lea
inc
mov
push
ret
lods
scas
lret
xchg
sub
aaa
add
leave
and
or
mov
mov
inc
xchg
sarl
sbb
mov
nop
mov
cmp
mulb
bound
icebp
insl
dec
sub
ror
pop
mov
enter
xlat
rclb
cli
lret
and
lret
or
xor
ret
imul
mov
push
pusha
mov
sub
inc
out
cmp
push
push
test
cmp
stos
movsl
leave
dec
bound
sbb
or
sti
cltd
leave
in
int3
inc
xchg
enter
loopne
jmp
dec
mov
sub
mov
ljmp
or
test
sahf
in
bnd
ja
cli
imul
inc
or
adc
push
fcomps
xchg
jo
mov
push
inc
pop
cmpb
cmpsb
cmp
fldenv
mov
and
mov
mov
jbe
or
int3
dec
pop
jp
ret
dec
xor
pop
js
ja
popf
aam
stos
test
daa
xchg
and
or
stos
inc
stos
and
xor
inc
lds
lods
ret
mov
movsl
fsubrl
inc
aaa
es
loopne
dec
and
mov
dec
xchg
jae
xchg
test
lods
fisubs
loop
jbe
xor
nop
add
pusha
and
data16
or
ret
jle
or
and
adc
mov
push
inc
sub
mov
pushf
pop
ret
cmp
aaa
ror
insb
add
push
int
popa
pop
mov
dec
movsb
fdiv
xchg
imul
mov
add
ret
xchg
mov
scas
sub
ljmp
jb
popf
mov
fildl
roll
es
jno
or
je
sub
fcoml
cmc
dec
sub
shlb
push
ljmp
and
push
das
nopl
clc
push
push
adc
push
call
adc
pop
shrl
ret
xchg
sub
call
aas
pop
push
and
inc
dec
sub
repz
out
sbb
fcoms
testl
popf
inc
add
inc
or
fists
or
fcmove
push
in
or
mov
leave
ljmp
xchg
jbe
les
fsave
pop
test
cmovns
mov
stc
push
jno
pop
icebp
lcall
mov
cmp
addb
mov
js
rcrl
pop
insl
mov
sbb
jno
std
cmpsl
in
or
mov
xorl
pop
data16
lods
dec
inc
ret
into
hlt
xchg
cmp
dec
xor
pop
lea
cmp
push
lahf
push
adc
sbb
mov
mov
loop
push
ljmp
lret
xor
loop
call
fcompl
rcll
jne
jmp
dec
inc
cli
add
lret
dec
xchg
ficoms
dec
leave
imul
cmp
jge
fisubrl
mov
mov
dec
loop
xchg
cmpsb
lds
repnz
adc
fidivrs
push
push
sub
add
dec
mov
fimuls
cmpb
icebp
lret
inc
ret
cltd
loop
xchg
shll
dec
jmp
out
and
rclb
pushf
jae
nop/reserved
inc
sub
in
inc
jne
mov
xchg
and
ret
fisubrs
fisttpl
mov
idiv
orb
pop
arpl
rcrl
mov
jne
dec
and
xchg
out
push
dec
ret
std
dec
ja
push
stos
sub
cmp
rol
or
adc
fidivs
mov
add
std
lret
push
in
fdiv
xchg
repz
call
lods
loopne
imul
fldl
repnz
mov
lcall
test
jno
and
inc
xor
mov
add
es
push
or
into
filds
xchg
jecxz
mov
pop
sub
shlb
jp
inc
loop
sahf
push
jle
xor
jno
inc
jg
sbb
popa
inc
hlt
arpl
push
jb
inc
pop
jo
and
add
roll
roll
cmp
cmp
inc
ret
or
jb
out
cmpsl
xchg
mov
out
jbe
and
push
and
mov
dec
cmpb
mov
xchg
xor
jo
xor
ret
jecxz
inc
adc
repnz
push
or
fistpl
xchg
pop
pop
fmuls
mov
test
cmp
stc
lahf
lea
push
fcmovb
dec
and
add
xchg
dec
jno
hlt
mov
repnz
idivb
sbb
fldl
divl
push
mov
icebp
add
ficomps
cmp
push
ja
lods
insl
or
mov
sub
xor
pop
mov
aam
mov
lcall
aaa
and
xchg
ret
dec
jno
fldl
sub
mov
or
inc
or
mov
mov
popf
rcrb
cmp
sarb
movsb
inc
add
inc
jmp
xchg
jge
sub
adc
test
stc
rol
mov
popa
arpl
into
sub
cmpsb
push
sub
addr16
push
mov
xchg
pop
jo
fs
mov
push
or
xchg
in
pop
arpl
inc
push
jae
lret
ret
rolb
jmp
mov
adc
shrb
bound
xor
push
dec
dec
icebp
xor
or
sahf
leave
idivb
add
es
cmp
xchg
js
ret
add
fadd
add
sub
daa
ficoml
ljmp
ret
jo
pminub
sahf
mov
cltd
shll
out
inc
dec
jbe
jmp
xor
mov
ss
add
jmp
fisubs
nop
rcll
jmp
xchg
adcb
mov
shrb
test
push
pop
cmpsb
xor
leave
fmull
mov
out
int3
inc
out
and
xor
icebp
fdivrp
jbe
decl
repnz
xchg
adc
imul
das
int3
xlat
stos
mov
sub
mov
test
loopne
inc
dec
loop
scas
sbb
xchg
aam
xchg
cmp
adc
pop
inc
lods
mov
push
fdiv
mov
shlb
sbb
cmp
pop
in
xchg
cmp
and
cmc
sub
push
subb
inc
movsl
fsubs
pusha
dec
add
xchg
in
or
popa
testb
loope
and
jb
or
mov
jno
jns
sub
add
in
mov
lahf
pop
orb
cltd
push
push
xchg
sub
cli
insb
loopne
jbe
mov
jns
es
push
pop
lret
daa
cmp
mov
mov
stos
hlt
call
inc
lods
out
in
les
out
mov
lret
mov
roll
add
lret
pop
and
adc
stos
mov
fwait
xchg
dec
mov
bound
aas
sbb
sub
lods
push
call
push
ret
cmpsl
and
sub
inc
stos
cmc
or
pushf
cmc
xor
sub
sbb
sub
mov
inc
inc
cmc
outsl
call
dec
pusha
jae
rclb
cli
and
leave
fidivl
xor
repnz
iret
aam
insl
xchg
fiaddl
cmpsb
lds
sub
leave
int
fstpt
sbb
lret
pushf
or
rcrb
cmc
inc
lods
fadds
add
adc
lret
xchg
dec
rcr
sbb
test
icebp
adc
arpl
mov
cs
push
push
mov
shlb
push
stos
jmp
pop
add
arpl
incb
inc
test
cmc
add
fwait
mov
stos
ds
dec
cmp
dec
xlat
dec
push
adc
clc
add
dec
xchg
adc
lret
cltd
sbb
sub
and
loope
push
or
and
mov
je
clc
sub
fimull
roll
pusha
xchg
je
mov
mov
ret
or
jne
nop/reserved
loopne
add
xor
into
addl
fidivs
and
shr
or
dec
cmpb
mov
sbb
rclb
jb
mov
in
les
movsl
popa
shll
addb
push
lcall
xchg
mov
mov
push
or
icebp
xor
jb
xchg
popw
fsubs
sub
test
out
push
std
ds
or
loopne
repnz
es
fisubs
jne
or
in
push
daa
out
pushf
jns
and
ds
jae
pop
stc
mov
stos
insl
push
mull
addr16
in
mov
add
and
inc
ret
mov
cwtl
pop
outsb
mov
int
push
lds
popa
cmpsb
inc
pop
sahf
lretw
add
les
stc
or
ret
jo
hlt
jns
cwtl
lcall
popa
mov
out
jmp
jno
les
mov
andl
sub
sahf
bound
iret
mov
clc
add
xchg
xchg
int3
testb
in
movl
sbb
clc
sbb
sub
je
andb
mov
or
shll
aas
rcrb
xchg
xchg
xchg
ljmp
inc
aas
pop
pop
dec
mov
lahf
mov
mov
xor
testb
and
pop
jae
cmpsl
loopne
and
sub
xchg
mov
ffreep
add
xor
or
jmp
adc
daa
pandn
sub
lea
lret
and
leave
lret
jbe
jecxz
xchg
ljmp
shrb
and
out
out
ret
mov
mov
jae
pop
fcmovnb
je
push
mov
rcr
xchg
dec
lcall
loop
hlt
or
or
jo
mov
jecxz
inc
jo
cmc
daa
add
or
lods
loopne
mov
mov
lret
int3
pop
fisubs
jg
jbe
les
fs
mull
lods
sbb
jb
or
ret
aas
push
jbe
ss
div
mov
lret
enter
push
mov
push
popa
sahf
mov
es
repz
icebp
fidivrs
movsl
rol
pop
mov
mov
pmulhw
cli
push
es
shll
inc
pusha
mov
aad
rcl
pop
ds
aad
xchg
push
je
xor
or
push
xorl
mov
sub
xchg
movsl
and
imul
jae
xor
ret
mov
lret
popa
mov
xor
rcrl
pop
repz
orb
enter
inc
hlt
ret
inc
in
sti
ret
out
pop
into
mov
pop
push
shld
js
xor
mov
arpl
xchg
std
lret
jno
aaa
sub
adc
mov
arpl
ss
sti
outsb
push
dec
mov
outsl
lods
add
into
pop
cmp
sub
fisttpll
push
data16
clc
insb
push
jg
int3
add
add
daa
xchg
icebp
mov
test
pinsrw
lcall
inc
movsb
arpl
mov
movsb
roll
leave
jns
xchg
es
aad
in
add
rolb
shlb
cmc
sti
fwait
movsb
jecxz
pop
scas
dec
xchg
mov
xchg
xor
inc
shrb
jo
jmp
fdivr
aas
ret
push
jmp
aaa
cmpsl
push
cli
push
dec
xor
xchg
pop
iret
push
sti
ja
or
not
and
lea
sub
or
sub
int3
lea
jmp
jecxz
ds
jmp
inc
and
jo
pop
lahf
jae
cltd
adc
testb
cli
ja
leave
sti
repnz
stos
jle
sar
lds
leave
or
js
pop
shrb
or
add
es
testl
gs
fistl
mov
data16
test
idivb
jb
nop
out
fucomi
add
push
add
sub
ret
daa
in
je
aas
mov
inc
adc
xchg
inc
inc
jb
pop
push
pop
or
in
shll
ret
jmp
and
add
je
lahf
leave
cmc
sub
lods
stc
aas
push
sub
xor
jmp
dec
sarl
dec
mov
xchg
dec
dec
inc
lcall
jg
addr16
push
ljmp
bound
mov
push
dec
jbe
sub
or
add
cmpsl
dec
test
jae
xchg
inc
push
inc
jecxz
jp
add
cmp
mov
jnp
xchg
decb
cmpsl
int
gs
and
out
push
movsl
add
mov
pop
sbb
lods
or
jo
add
sbb
out
push
cltd
dec
iret
mov
push
push
icebp
mov
and
test
jecxz
jg
stos
push
test
int3
jmp
push
icebp
ljmp
pinsrw
push
xchg
xchg
icebp
icebp
ret
xchg
lods
fidivrs
xchg
mov
adc
fpatan
cmp
mov
cmp
dec
incl
xor
in
cmp
insl
loop
push
add
stos
pop
data16
or
inc
jb
adc
add
mov
add
sbbb
mov
test
scas
mov
out
addb
iret
mov
repz
pop
stc
jne
fsubs
dec
aam
jae
sbb
dec
xlat
dec
in
fcompl
fistpl
data16
lret
jg
pop
lret
addb
sub
and
sbb
inc
ret
lds
fisttpll
jmp
cmp
in
lret
lea
leave
dec
loopne
dec
xchg
ret
les
subl
int3
xor
movsb
outsb
xchg
push
inc
rol
movsb
jns
ss
push
imulb
call
in
mov
mov
stos
xchg
pop
push
pop
jp
jnp
and
or
fdivr
mov
aas
leave
insb
insl
scas
add
inc
push
and
inc
adc
lret
fists
push
call
xchg
iret
pop
jo
out
div
dec
test
rorl
data16
inc
stos
into
jno
and
xchg
shll
xchg
mov
sbb
mov
pushf
pop
sbb
arpl
mov
incb
adc
and
jmp
add
sub
subb
jmp
and
lcall
subl
daa
and
int3
push
fs
jne
adc
pop
adc
jae
pop
lret
or
fiadds
scas
ret
cmp
loopne
mov
inc
daa
lds
jecxz
insb
bound
int3
sbb
xchg
and
fistpll
in
loope
inc
inc
aaa
mov
or
sti
mov
imul
mov
aad
lahf
dec
xor
sub
repz
xchg
and
xchg
jecxz
dec
addr16
in
les
inc
xchg
mov
in
dec
inc
push
mov
jae
hlt
adc
add
mov
jo
mov
push
sub
call
or
leave
pop
mov
push
mov
test
incb
test
jae
jbe
sar
rol
push
out
add
test
stos
mov
mov
out
cmp
push
stc
jae
dec
dec
repz
lods
or
fiaddl
inc
mov
adc
addr16
test
add
inc
insl
sbb
jl
adc
ret
jbe
incb
adc
sbb
fldl
lret
cwtl
adc
mov
das
sbb
inc
pop
ss
inc
fstl
jmp
lea
or
faddp
fadd
sbb
xchg
aas
fistpl
xchg
bound
push
sarb
and
mov
dec
mov
add
jmp
or
arpl
push
add
in
xor
xchg
push
mov
inc
popa
jae
mov
or
add
pop
imul
mov
push
sbb
dec
shll
stos
enter
cmp
outsb
push
cvtdq2ps
and
call
mov
inc
movsb
push
and
cwtl
inc
sub
push
push
js
mov
repz
add
push
inc
fcomps
inc
mov
pop
xlat
sti
cmc
xchg
push
ja
hlt
into
fisttps
lret
gs
push
or
loop
aas
pop
jl
xor
xchg
push
xchg
inc
xor
cs
or
add
xor
faddp
sub
aas
test
enter
jnp
push
add
fldcw
call
fcmovnbe
cmp
lods
jno,pt
int3
movb
cs
dec
adc
imulb
jno
push
push
push
mov
test
mov
mov
mov
inc
push
mov
push
rorl
inc
inc
dec
dec
fisubrs
or
pop
pop
int3
inc
std
dec
xchg
leave
nop
ljmp
rcrl
aad
cmp
mov
in
inc
inc
push
or
jb
cld
lahf
mov
mov
cmp
jmp
les
notl
iret
sub
shl
mov
dec
xchg
popa
insl
fcompl
and
ret
ret
cmp
inc
js
popa
idivl
sahf
popa
ds
shr
popa
mov
movb
aas
bndstx
bound
lods
cmp
les
hlt
dec
push
out
daa
and
cltd
push
dec
inc
push
out
outsb
add
and
jge
cmpsl
dec
lcall
in
inc
dec
sub
out
ljmp
ljmp
leave
ljmp
adc
adc
mov
inc
xchg
lret
add
dec
pop
push
push
mov
mov
ret
loop
mov
popf
je
add
lock
nop
out
add
push
jns
fs
insb
aam
ret
sti
ret
sub
add
fdivs
mov
addr16
rorl
das
mov
aaa
out
inc
insl
inc
jo
ljmp
dec
adc
insb
mov
lock
out
faddp
fcoml
insb
rcll
mov
sub
fidivrs
in
jmp
xor
iret
cmp
cmpsb
repz
outsb
pop
and
push
int
inc
imul
in
cmp
or
cmp
and
push
push
sbb
ficoms
les
test
add
aas
push
cltd
cli
dec
in
xchg
xchg
fisubs
push
lret
data16
xchg
sub
mov
lock
lret
mov
movsl
movsb
dec
sub
lahf
or
fdivr
jp
cmp
xor
sub
call
push
pop
insb
dec
inc
sub
lds
loop
dec
or
in
sbb
into
aam
adc
fwait
inc
cli
sub
ljmp
pop
mov
pop
add
cmp
idivb
lods
gs
lcall
in
shr
push
inc
pop
inc
sbb
jp
stos
icebp
sub
push
lods
data16
push
dec
enter
jo
jmp
xor
inc
and
fnstcw
cmpsb
inc
repnz
cwtl
lret
daa
xor
sub
push
std
jo
outsl
dec
cli
pusha
sub
or
sub
cmovns
fisubl
jmp
lds
xchg
pop
repz
mov
das
sti
sub
fnsetpm(287
or
xchg
lea
addr16
mov
add
dec
rcl
outsb
clc
mov
sbb
inc
imulb
fisttpl
aad
orl
push
mov
xchg
add
cltd
push
dec
cmpl
cmpsl
lea
loop
xor
lods
les
lods
jecxz
push
sub
mov
adc
and
ficomps
aaa
sahf
inc
push
shll
sbb
xchg
xor
pop
iret
scas
jns
dec
cmpsl
aas
out
xor
sub
std
add
push
push
pop
add
mov
lea
daa
push
mov
xchg
lods
inc
push
clc
dec
nop
pop
sub
das
in
xchg
mov
rol
jecxz
and
lods
mulb
mov
sub
fs
outsl
outsl
xchg
pop
and
or
pop
ret
pop
shll
fstpl
xchg
add
inc
stos
pop
imul
repz
faddp
mov
pop
mov
adc
pop
cmpb
fcmovnu
pusha
imul
rorl
enter
inc
jb
lret
lret
add
es
xchg
leave
rorl
mull
add
inc
inc
xchg
dec
mov
mov
lahf
call
test
popa
xchg
fiaddl
lcall
arpl
adc
mov
push
ret
jecxz
push
shr
xlat
ret
je
pop
ret
filds
sub
push
sub
arpl
movsl
sbb
pop
aad
sahf
inc
jae
inc
mov
cmp
nop
rcrb
or
call
fiadds
js
ret
lea
jle
fisttpl
mov
adc
xlat
mov
xor
sub
push
dec
fcoms
push
fs
stos
data16
jno
cmpsb
xor
xlat
pop
mov
adc
inc
jo
mov
shll
into
out
leave
nop
shrb
shlb
inc
xor
jae
dec
pop
dec
mov
call
dec
fimuls
test
push
cmp
pushf
rclb
fs
arpl
adc
filds
xor
lret
mov
adc
dec
add
mov
aas
push
mov
test
xchg
lcall
test
cmp
adc
lock
out
in
jmp
fbld
imul
xchg
and
int
repnz
lsl
jo
leave
mov
cmpsb
dec
cmc
xor
jbe
mov
rclb
mov
mov
xor
mov
add
arpl
jl
sub
repnz
in
jae
int3
adc
cmpsb
repnz
push
popa
cld
inc
test
inc
pop
and
repz
aam
sub
ret
sbb
fstpl
and
push
fidivl
jecxz
rcr
jecxz
pop
dec
mov
rcr
adc
cltd
and
cmp
es
das
ficoms
mov
or
ja
mov
mov
out
xor
mov
gs
std
xchg
xlat
addl
push
clc
add
xchg
daa
in
stos
stc
sub
xor
test
xor
pop
ljmp
repnz
popa
push
movsl
insb
push
and
ds
sub
cmp
inc
push
adc
push
ljmp
mov
aad
xchg
call
loopne
stc
shrl
pop
dec
daa
stos
fiadds
inc
and
sub
dec
push
xchg
in
xor
sub
dec
jno
push
pushf
xor
mov
clc
fisubrs
and
stos
cmp
add
inc
int
mov
add
popf
insb
cwtl
inc
fldenv
inc
dec
sub
lds
or
mov
or
aaa
push
popa
fildll
pop
or
fimull
sbb
stos
jo
in
imul
out
jno
fs
sub
mov
adc
ljmp
or
push
dec
or
testb
mov
jle
xchg
mov
and
mov
sbb
out
or
test
in
rol
jo
mov
js
xor
scas
mov
xchg
xchg
and
push
or
adc
rcrl
pandn
out
sub
fnstsw
outsb
mov
in
mov
pop
ret
inc
clc
or
and
xor
shl
stos
int
sti
jo
cmp
and
repz
out
xlat
ljmp
lods
aas
notb
addb
lods
mov
push
in
aad
inc
es
sub
push
imul
cld
stc
mov
xor
xor
mov
inc
and
xor
add
xchg
mov
andb
inc
lret
dec
xor
movsb
jno
mov
mov
ret
add
adcl
or
mov
jno
movsl
or
in
jo
mov
mov
ljmp
xchg
lods
sub
push
cmpsl
dec
adc
sub
dec
push
mov
test
add
outsl
loopne
mov
push
int
shufps
mov
fidivl
stos
dec
dec
aas
sbb
or
mov
movsb
jns
inc
iret
jb
roll
cltd
jge
jge
jbe
cmp
iret
aas
fwait
hlt
inc
jmp
test
mov
lret
inc
js
loop
sub
es
cmp
daa
mov
pop
lret
sub
pop
jns
repz
incb
pop
loopne
mov
loop
inc
mov
loop
mov
mov
fsts
aas
jl
data16
jle
adc
pushf
cld
lahf
daa
fadds
fistpll
imul
add
mov
out
popa
fidivrs
inc
inc
jmp
or
clc
xlat
vshufpd
aam
dec
and
push
mov
sahf
outsl
xor
xor
push
enter
mov
add
pop
cmp
loopne
cmp
outsb
daa
add
sbb
ret
lods
repnz
sub
xchg
in
lret
shrl
imul
and
imul
adc
and
cwtl
dec
fldcw
sub
xchg
cltd
outsl
xor
pop
cmc
stos
xchg
arpl
inc
adc
or
dec
xlat
call
in
push
stos
adc
popa
xor
and
stos
jmp
dec
add
pusha
pop
jb
xchg
sbb
and
into
dec
shll
leave
sbb
test
or
push
mov
inc
jb
stos
imul
rorl
fsubr
inc
fs
rcll
out
iret
fstl
mov
sbb
or
xor
fwait
mov
sbb
mov
inc
iret
notl
mov
int
push
jo
inc
pop
ljmp
push
mov
jmp
fsubrs
hlt
ret
ret
loop
add
dec
cmpsl
ret
ficomps
jo
add
les
or
push
inc
inc
test
jg
inc
xchg
sub
les
sbb
push
ljmp
js
jl
push
out
enter
into
ret
xchg
fimuls
pop
pushf
ss
sub
inc
cmpsb
mov
jns
lret
mov
adc
pop
push
dec
cmpsl
add
xor
sub
lds
pop
ficoms
fmull
data16
mov
ja
nop
hlt
std
scas
jbe
rcrb
cmp
mov
dec
fadd
lods
jae
xchg
sarl
mov
cltd
jp
cmp
lret
repnz
dec
mov
into
cmpsl
sub
pop
cmp
fiadds
pushf
pushf
mov
mov
inc
mov
add
das
out
std
push
sub
xchg
fbstp
and
mov
xor
cmp
jmp
pop
inc
cs
mov
sub
ffreep
lret
in
mov
lret
or
daa
add
pop
out
lret
test
aas
or
inc
or
arpl
lret
jae
outsb
push
out
adc
mov
into
pop
aaa
rol
fsubs
dec
jnp
ficoml
fisubs
stos
cwtl
xlat
fucomip
jg
test
xorb
aas
scas
fidivl
push
jne
jns
test
push
call
jo
mov
imul
dec
iret
ret
je
inc
or
mov
in
bound
xchg
pop
scas
pop
mov
adc
stos
pop
sub
dec
pop
jge
ss
into
lret
lea
add
test
in
sub
xor
sub
dec
in
adc
pop
add
sub
push
and
push
mov
jno
push
cwtl
scas
and
lahf
scas
fdivrp
dec
mov
enter
sub
jae
stc
enter
mov
shll
lahf
jmp
repnz
rorl
movsl
jne
add
mov
stos
lahf
mov
inc
mov
cltd
ret
push
push
out
mov
mov
push
lods
jb
lret
sarl
cmp
loop
jp
imul
and
dec
dec
in
push
test
inc
imul
into
sub
sbbb
or
loope
mov
fisubs
add
push
dec
mov
fisubs
cmp
rcr
jbe
mov
mov
cmp
scas
or
adc
fcompl
push
pusha
adc
jnp
xchg
cmp
xchg
add
mov
lods
shlb
cmpsl
adcl
cmp
andl
or
push
arpl
imul
mov
repz
in
movsb
dec
xor
imul
pop
mov
cmp
aas
push
push
sarb
fidivl
inc
jle
and
jmp
hlt
aas
sub
adcl
fcomps
sub
push
adcl
and
lea
jbe
xchg
inc
out
jg
ret
int
divb
ljmp
pop
out
sub
popa
in
ret
add
sub
out
adc
add
int
xchg
fcompl
popa
aam
lods
decb
sbb
repz
js
js
push
mov
hlt
imul
adc
shr
aad
mov
arpl
dec
push
lahf
jmp
jle
inc
out
inc
dec
xor
or
movsb
mov
dec
dec
lods
in
aas
sahf
sub
adc
dec
data16
mov
scas
add
cmp
lret
js
sub
jo
push
movsl
pop
xor
test
int
sti
out
std
sbb
and
movsl
xor
sub
movsb
data16
mov
xor
pop
out
jmp
mov
jge
mov
jecxz
jne
out
xor
xor
lret
rcr
lods
clc
cmpsb
lock
inc
pop
xor
sti
xchg
stos
out
sti
cltd
sub
push
in
shrl
and
lods
pop
cmc
jns
sub
lock
xchg
fadds
jmp
sbb
pop
das
fidivl
cmovge
jno
jecxz
iret
xor
jp
js
enter
mov
add
repnz
bound
jbe
mov
adc
dec
push
and
cmp
mov
in
push
bound
mov
add
cmp
and
mov
ret
sub
cmovl
and
in
adcb
xor
inc
in
mov
ss
inc
lmsw
push
pop
add
sbb
repnz
dec
stc
cltd
idivb
fcmovnb
fnstsw
mov
xor
and
rcrb
dec
into
movb
add
lds
rcrb
jmp
inc
inc
pusha
add
scas
add
or
pop
add
inc
xchg
xchg
adc
lcall
pusha
jb
or
adc
in
dec
dec
xor
mov
push
inc
inc
jb
inc
sub
arpl
fisttps
pushf
out
add
mov
popf
call
cwtl
mov
mov
jmp
sub
jb
outsl
fcomip
inc
fwait
scas
dec
adc
out
out
mov
cmp
into
fdecstp
mov
jno
jp
sti
fimuls
jne
aaa
arpl
inc
repz
cmpsb
test
mov
inc
adcl
vaddsubpd
movl
inc
insb
sahf
adc
int
jecxz
fiaddl
shrl
decl
dec
and
dec
filds
sub
mov
push
fimuls
mov
cmpsl
fucom
popa
es
push
mov
or
iret
loope
stos
jae
dec
icebp
lcall
fwait
adc
or
jo
rorl
test
push
jnp
mov
or
and
push
mov
js
and
jnp
in
mov
push
jno
cltd
jae
pop
in
shl
jae
or
pop
inc
in
mov
xchg
push
push
ss
nop
loopne
fmul
fiadds
dec
dec
inc
fisttpll
inc
mov
and
or
sbb
dec
icebp
or
mov
cs
mov
outsl
adc
jb
ret
and
stos
dec
scas
jo
sub
test
frstor
and
ror
cs
adcl
nop
jle
out
add
push
add
inc
mov
sub
mov
call
push
test
rcr
mov
icebp
adc
hlt
call
sub
aam
call
in
lods
jbe
jg
or
lret
int
jmp
mov
dec
sbb
inc
dec
into
ljmp
dec
xor
test
inc
fldenv
inc
rol
mov
ret
testb
fidivs
push
add
jecxz
out
clc
add
or
adc
xorl
inc
loop
and
out
stc
sub
imul
test
sub
lods
cmp
aam
fs
sub
cmp
aas
lcall
lcall
mov
mov
inc
aas
xchg
pop
lods
mov
push
stos
mov
ss
into
push
and
cmp
imulb
int3
sbb
jo
xor
dec
lds
jmp
sub
push
dec
add
push
stos
push
mov
xchg
std
mov
adc
jo
js
sub
sbb
dec
mov
ret
notb
cld
jo
cmp
and
mov
test
adc
mov
jo
aaa
and
into
xchg
or
xchg
lock
jecxz
jns
fimull
sub
jne
ret
mov
cmp
adc
fsubrs
xor
push
fildll
xor
ret
cli
mov
into
push
lret
scas
pop
ret
inc
cltd
lds
sbb
push
stos
ss
inc
jae
mov
dec
xor
or
pop
cmpb
fdivs
lret
push
sbb
clc
outsl
push
jb
test
outsb
sbb
leave
repnz
mov
enter
dec
inc
cmp
mov
adc
jne
sti
stos
je
push
jmp
pop
pop
loop
lds
push
repnz
insl
data16
mov
adc
int3
pop
repz
jnp
jno
add
xor
jne
ret
pop
mov
cmovg
ffree
jp
xor
and
add
xlat
and
movsl
sub
inc
mov
popa
ret
dec
mov
dec
and
and
mov
add
loopne
sub
bnd
cmpl
ror
mov
or
movsb
jne
pcmpeqb
lods
pop
inc
xchg
pushw
scas
fildl
cli
sbb
jmp
cmc
and
lods
dec
jb
mov
sub
cmp
or
fwait
sub
aas
mov
sub
pusha
jb
mov
jecxz
push
pop
dec
leave
and
push
mov
xchg
das
mov
pushf
and
sbb
dec
mov
call
leave
rcrl
mov
push
fiadds
inc
outsb
mov
incb
je
dec
add
jecxz
stc
outsl
outsb
add
leave
jo
jno
pushf
pop
dec
cmp
ljmp
sbb
mov
push
pop
pop
jecxz
aas
sbb
cmp
cwtl
and
ja
push
push
xor
pusha
add
leave
dec
adc
xchg
enter
arpl
sarb
testl
in
inc
scas
add
roll
or
cmp
adc
stos
inc
aas
fimuls
sub
insb
fimull
inc
in
push
mov
xor
add
test
mov
push
mov
add
xchg
push
int3
ret
fisubrs
pushl
popa
ret
dec
sub
pushf
imul
jns
pop
push
filds
mov
cltd
in
popa
or
push
aaa
sbb
xlat
lds
inc
sbb
bound
pop
into
inc
cwtl
mov
pop
js
sub
mov
sbb
shlb
lea
xchg
pop
mov
shll
lea
addr16
inc
data16
pop
int3
rcl
xor
jb
xchg
mov
fisubl
sub
pushf
add
sbb
bswap
fisubs
aas
pop
mov
push
mov
rolb
pop
mov
inc
jae
mov
cwtl
add
aad
lret
cltd
aas
in
ja
push
lea
mov
fadd
cmp
mov
int3
jmp
lods
mov
mov
adc
cmp
std
jne
or
jbe
sub
inc
addr16
push
adc
mov
lret
pop
mov
xchg
mov
ret
adc
lea
fisttpl
or
jns
dec
into
sarb
dec
lret
in
xchg
xchg
mov
ficomps
subb
int3
subb
jecxz
loopne
inc
inc
jecxz
lea
sarl
test
jne
or
mov
ret
inc
pushf
cmp
sahf
pop
xchg
sub
ret
daa
mov
jo
jecxz
jne
into
enter
out
fwait
jb
push
pop
pop
repz
sub
repnz
clc
and
punpckhbw
bound
xor
or
cmp
push
lds
popa
push
stos
push
pop
and
or
xchg
iret
test
lock
and
sbb
or
inc
test
pusha
int
fmull
xor
idivl
xchg
mov
adc
repz
jns
loop
mov
mov
ss
cmp
xlat
lahf
xor
add
js
push
cmp
repz
ret
in
stos
and
lods
xchg
dec
shll
jmp
mov
sub
gs
add
mov
and
insb
ffreep
mov
pushf
and
ja
cmp
rclb
mov
out
dec
icebp
jo
jns
sti
xchg
imul
sbb
call
sbb
inc
repz
dec
add
insb
lea
fs
xchg
inc
je
add
dec
mulb
push
out
xor
pop
adc
add
mov
dec
lods
aam
dec
inc
or
xchg
je
iret
aam
mov
dec
push
jecxz
add
gs
inc
iret
cmp
cmp
lsl
push
and
leave
cbtw
aad
fsubrl
jb
pop
mov
dec
dec
sub
mov
or
pusha
adcb
test
sbb
sbb
fsubrl
test
clc
ret
lar
jg
adc
movsb
cmova
sub
jle
cmpsl
sbb
sub
fdivs
icebp
pop
and
loop
fistpll
mov
cmp
push
dec
leave
inc
push
dec
jp
repnz
add
mov
mov
xor
add
pop
test
inc
sbb
addb
dec
sbb
lea
push
clc
cltd
es
adc
cmpl
sbb
ds
add
pop
iret
dec
sub
jae
inc
scas
cmc
pushf
sarb
mov
inc
out
enter
dec
repnz
mov
mov
jne
mov
adc
cmp
add
loopne
popa
int3
cmpsl
out
repnz
cld
popf
xor
loop
scas
lods
rcll
bound
rol
lds
pop
stc
cmp
xor
nop
cmc
add
inc
jb
mov
pop
cmp
mov
inc
stos
inc
push
es
addl
push
xor
jbe
mov
pop
or
inc
in
jmp
sbb
test
adc
in
sbb
adc
adc
dec
add
pusha
push
jb
lea
nop
or
jl
dec
add
jb
int3
pushf
add
iret
add
inc
or
add
repz
mov
dec
push
pop
inc
pop
or
shlb
push
add
jmp
in
fmuls
fwait
test
push
arpl
into
xchg
xchg
or
cmp
enter
fbstp
lret
lock
imul
ret
decl
ja
pop
in
mov
popa
mov
movsb
fbld
subl
push
mov
and
jl
rcr
inc
repnz
pop
out
push
jmp
in
mov
subl
in
aas
inc
enter
adc
mov
mov
xchg
orps
stc
pop
fld
xor
mov
rcr
adcl
test
and
popa
xchg
iret
lret
sub
mov
xor
inc
je
test
pop
push
popa
aas
mov
push
mov
and
xchg
jp
insb
and
into
adc
out
loopne
jb
cld
pop
enter
add
fwait
loop
jle
ret
loopne
loopne
push
lcall
xchg
aaa
jbe
in
sarl
sbb
pop
rorb
lret
shll
test
sbb
int
out
pop
stc
jne
int
inc
fisubl
daa
je
jo,pt
cmp
push
dec
js
mov
lock
cs
fiadds
jbe
lds
mov
lret
icebp
fcmovu
push
inc
rcr
jmp
leave
sub
jo
sub
fisttpl
rcl
das
lods
jne
or
fnstsw
nop
test
jle
jo
jo
out
inc
loopne
adcb
mov
xor
iret
mov
mov
cli
cmpsl
mov
cli
jne
sbb
push
pop
jge
jmp
sarl
daa
ljmp
and
ficomps
pop
imul
addr16
cmp
mov
add
mov
sub
mov
sub
push
aaa
cli
cmp
inc
lret
rcrb
dec
test
lods
lret
mov
adc
or
in
jb
incl
imul
mov
clc
mov
sbb
pop
sbb
pop
movsb
ficomps
into
push
repz
xchg
cs
iret
add
sub
and
lods
sub
mov
and
loopne
mov
pop
cld
out
or
adc
cmp
pop
ret
movsb
push
xchg
push
ret
aam
fldl
dec
push
mov
mov
fsub
scas
mov
push
lar
fstl
jbe
prefetcht1
lods
pop
cld
or
mov
sbb
jbe
mov
sbb
pop
or
adc
pusha
mov
pusha
fwait
push
jb
repz
adc
movsl
cmp
jb
fiadds
ds
pop
jne
popa
or
xchg
lcall
js
aam
in
xlat
pop
mov
rol
push
fsubrl
add
scas
fisubl
pop
ret
cmp
jns
ret
movb
arpl
inc
push
add
or
jp
adc
mov
imul
fs
or
push
mov
jl
jmp
inc
daa
cltd
and
mov
mov
mov
mov
lcall
mov
push
cmp
pusha
lcall
clc
mov
loopne
pusha
mov
dec
or
push
out
push
xchg
dec
xchg
push
lea
pop
into
push
adc
in
fidivs
push
mov
in
lds
repnz
cmp
scas
shl
lcall
lcall
jae
sub
mov
dec
aas
jl
mov
enter
call
pop
inc
bound
xchg
dec
cmp
into
int
in
or
jmp
mov
sbb
xor
nop
lods
inc
xchg
subl
stos
xchg
xchg
lahf
outsl
jae
ja
xchg
rcr
xchg
or
scas
jbe
cmpsl
push
push
cmp
sti
lds
inc
or
js
ret
adc
out
dec
fists
xor
scas
jno
push
xchg
fisubs
adc
cmp
aaa
and
inc
fnstcw
sub
sbb
mov
pusha
out
and
sub
push
dec
inc
fwait
pusha
sbb
cmpsb
mov
sub
std
xchg
mov
cmpsb
cpuid
add
jbe
outsb
icebp
inc
mov
vmread
sbb
jecxz
mov
enter
sbb
mov
adc
fisubrs
inc
xor
ret
mov
jb
sbb
push
sahf
pop
xchg
stc
mov
in
jb
data16
std
orb
inc
push
mov
jno
pushf
adc
test
mov
repnz
jae
mov
or
or
rcl
int3
pop
int3
inc
mov
mov
lret
add
or
adc
pop
vrcpss
inc
loopne
dec
xor
fisubs
jb
jno
and
test
bound
dec
popa
lods
or
js
stc
pop
inc
lret
mov
jns
add
pop
cmc
out
and
scas
ret
cmp
mov
ret
mov
arpl
test
les
push
xchg
pop
xchg
push
cwtl
hlt
sbbb
mov
jg
inc
repnz
push
rcrl
push
or
push
dec
lods
xchg
sbb
and
repnz
dec
test
movsb
push
mov
pusha
popa
ret
cmp
mov
repz
adc
es
jbe
mov
pop
add
mov
std
int3
ljmp
add
test
mov
inc
cmp
adc
inc
jno
push
cmpsl
push
insb
test
or
insl
push
xor
dec
mov
push
push
mov
insb
cmpsb
pop
sub
push
incw
push
pop
addr16
sub
cmp
push
les
fidivs
add
pop
adcl
fwait
cmp
movsb
dec
arpl
xchg
add
js
dec
jnp
inc
sbb
or
cmp
sti
add
lock
repz
sub
ret
xor
fisubrl
insb
vmovdqu
test
pop
inc
stos
add
rorb
loop
sub
cmp
or
rolb
xchg
or
es
mov
jle
call
popa
add
or
sub
arpl
mov
sub
mov
pop
std
aas
add
pop
lahf
cld
and
addb
fwait
push
test
inc
push
arpl
push
arpl
scas
shlb
dec
inc
ret
inc
iret
loop
xchg
les
ret
dec
lods
push
and
inc
mov
es
mov
ja
sbb
pop
dec
fmull
out
dec
pop
pop
out
inc
leave
pop
fisttpl
inc
lea
lcall
lcall
ja
repnz
xor
into
inc
jecxz
leave
cmpsl
jp
int3
rcll
push
mov
dec
in
rcrl
outsb
ljmp
std
push
mov
andl
jecxz
sbb
aad
mov
iret
aaa
jb
mov
test
scas
call
in
dec
ljmp
dec
dec
adc
or
jle
adc
mov
jge
xor
ret
outsb
and
xchg
shlb
es
mov
fmul
movsb
shl
mov
mov
dec
arpl
loop
lea
test
sub
rorb
mov
xor
out
test
mov
mov
inc
dec
fmull
ret
add
popf
cld
sbb
jb
pushf
xorb
dec
inc
lcall
jle
std
nop
mov
cltd
flds
inc
inc
pop
daa
movsb
test
dec
mov
sub
leave
movb
es
andl
pop
push
pop
call
push
xor
lock
mov
and
add
ret
lcall
dec
xorl
imul
and
rcll
movsb
in
cwtl
jo
mov
dec
adc
and
mov
pushf
aaa
sub
pop
sbbb
fmuls
lock
add
mov
or
in
xor
fld
rorb
test
push
sub
inc
sbb
or
loope
add
push
adc
aam
and
add
jle
dec
roll
mov
add
repz
or
dec
stc
dec
add
jb
xor
imul
xchg
add
sub
jbe,pn
adc
shlb
cmpsb
sti
dec
inc
push
mov
push
es
adc
pop
add
lahf
call
sub
fstl
inc
mov
sti
or
rorl
pop
cmp
inc
push
push
inc
inc
jecxz
jmp
sub
call
mov
cltd
inc
aaa
leave
or
jmp
inc
cs
ret
cltd
loop
lods
stc
mov
das
adc
cld
insb
xor
cmp
dec
fiadds
cld
xchg
push
das
jge
xchg
fimull
mov
xor
imul
fisubs
bndldx
inc
push
adc
jo
mov
fsubrs
jbe
jo
jge
jle
sbb
testb
dec
or
or
fiaddl
or
xchg
icebp
packuswb
add
push
fists
js
repz
popf
nop
add
add
idivl
arpl
cmpsl
stos
and
inc
pop
ss
mov
lret
push
mov
add
and
in
xchg
fiaddl
jmp
pop
inc
lods
sub
in
dec
gs
sbb
fadds
mov
dec
pop
movsb
enter
inc
mov
decl
aaa
jb
cmp
fidivrl
add
xor
xlat
arpl
lods
dec
stos
push
in
jecxz
push
enter
in
jecxz
push
jecxz
stos
xchg
xlat
jecxz
cmp
ficoml
mov
mov
fmuls
rorb
adc
mov
mov
cmpsb
push
or
sub
loopne
jb
daa
push
fists
shl
dec
push
ret
mul
mov
dec
inc
flds
prefetchw
or
leave
fldl
xor
and
inc
pusha
cmpsb
mov
addb
cmpsl
xor
lea
inc
pop
stc
mov
sti
lret
adc
jne
aaa
mov
xor
push
pop
cmp
popa
repnz
andb
sub
sbb
dec
dec
in
push
popa
jmp
jo
and
xor
push
and
mov
or
mov
repz
inc
cli
cmp
idivb
repz
fnstsw
popa
jo
cltd
movzwl
lret
lahf
jae
jbe
pusha
test
call
js
pop
ss
ret
cmp
push
fs
mov
ret
lcall
daa
lret
lahf
mov
enter
stos
mov
sub
sbb
sbb
sarb
push
cmpl
lds
inc
nop
in
test
xor
jae
adc
lret
sbb
repnz
faddl
cwtl
inc
push
sub
pop
shlb
or
pop
xchg
xchg
add
lret
aas
push
dec
es
pop
sbb
or
inc
and
mov
lahf
or
sub
test
inc
lods
inc
add
lcall
sub
arpl
push
sti
mov
pop
in
jecxz
push
in
jecxz
pop
add
xor
or
mov
in
bound
mov
pop
arpl
lahf
out
out
add
adc
inc
add
push
fisttpll
jns
push
sbb
pop
xor
enter
or
cmc
mov
jecxz
ljmp
fsubrl
dec
hlt
stos
dec
movsl
sub
jp
inc
xor
or
ret
addr16
jge
fiaddl
mov
loop
push
jge
out
sub
pop
cltd
enter
mov
xor
fwait
dec
data16
mov
les
dec
ret
push
ljmp
mov
cwtl
shll
addr16
or
orl
das
jno
push
into
xorb
mov
xor
cmpsl
adc
movsb
lods
lods
push
push
pop
sub
or
in
rclb
mov
xchg
addr16
inc
lret
scas
inc
xchg
sbb
inc
mov
inc
xchg
push
and
jbe
aas
cmc
cltd
adc
in
out
dec
scas
fists
xchg
mov
inc
dec
sbb
cwtl
popf
sub
ljmp
jns,pt
sbb
in
fwait
add
cmp
sub
adc
sbb
cmp
mov
sub
imul
lods
push
jbe
ret
into
xlat
loop
push
das
repnz
daa
xor
mov
int
popa
lds
mov
push
xchg
pop
clc
xchg
xchg
je
lock
push
fistps
lods
daa
stos
fimuls
pop
ja
or
xchg
js
cmc
data16
inc
mull
dec
outsb
pop
lods
ljmp
adc
rolb
insl
dec
lds
pop
or
add
add
pop
jbe
inc
shl
sub
stc
add
popa
mov
xorb
roll
in
loopne
push
inc
mov
cmpsb
pushf
lret
add
fiadds
dec
gs
rep
push
mov
mov
out
sbb
dec
push
mov
sbb
sub
jae
inc
xchg
data16
test
mulb
inc
mov
add
mov
dec
divl
cwtl
xchg
shl
and
mov
mov
xor
fidivrs
insb
inc
jp
sub
sbb
push
mov
mov
loop
movsl
imul
pop
pop
mov
sub
adc
cs
ljmp
popf
push
in
call
pop
je
adc
fsubrp
dec
je
mov
jo
cmp
jbe
push
test
fwait
into
sbb
jne
adc
push
test
cmpsb
mov
int
xchg
aad
adc
shrb
clc
push
insb
popf
mov
mov
jo
pop
insl
lods
or
lods
in
clc
and
jno
out
xchg
xor
jle
inc
decl
stos
and
lods
cmpsl
ret
jae
or
lret
sbb
sub
daa
sahf
rolb
xchg
sub
icebp
dec
push
out
mov
pop
test
push
lock
cld
sub
xor
or
mov
dec
cmpb
mov
imul
loop
icebp
stos
adc
dec
out
jb
cmp
movsl
stos
pop
mov
pop
and
cmpsl
into
ljmp
push
repnz
dec
pop
sbb
lods
rorb
lret
bnd
xchg
or
iret
sub
mov
icebp
pop
xchg
sbb
push
mov
sbb
call
dec
cmp
mov
sub
addr16
sub
pusha
mov
jl
push
add
push
pop
mov
arpl
jae
repnz
cmc
scas
imulb
sub
cmp
addl
xchg
loop
mov
das
in
neg
fs
ret
loop
add
insb
jg
daa
push
dec
inc
add
repz
or
and
fidivs
adc
mov
cmp
mov
jecxz
xor
hlt
addr16
inc
insb
xchg
sub
cmpsl
sbb
sub
loop
aad
jle
xor
mov
xchg
call
lods
and
decl
push
inc
or
or
lret
mov
xlat
in
jg
in
sub
mov
roll
and
and
xor
pcmpgtw
ljmp
jcxz
mov
jo
icebp
jno
int
sbb
loop
ret
ljmp
shll
add
mov
add
aas
sahf
mov
in
stos
push
out
fimull
or
jle
out
sbb
pop
pop
sub
loope
push
xor
inc
adc
lret
jge
shrl
cmp
sub
mov
rolb
jo
sbb
push
ret
mov
push
aas
jg
lods
ret
movb
mov
dec
push
movsb
jmp
call
pop
aas
pop
pop
dec
adc
xchg
push
testb
notb
lods
inc
xchg
push
rcrl
inc
out
in
xchg
adc
stos
call
popl
jnp
and
mov
rolb
lret
ret
xchg
inc
fists
sub
and
out
add
add
cmp
xchg
adc
nop
shlb
ja
jl
mov
ljmp
xor
sub
movsl
loop
test
inc
imul
dec
aas
add
sub
fisttpll
test
ret
dec
lret
fdivrs
call
mov
les
pusha
xor
xor
xchg
dec
int
je
mov
lods
mov
mov
xor
ret
xchg
dec
enter
sub
xchg
aas
mov
and
sub
in
fimuls
addb
sbb
cmp
sbb
adc
addr16
jmp
jo
xor
and
cmpsl
and
pop
roll
lret
mov
mov
lds
in
lret
stc
mov
call
in
sub
push
stc
dec
cmovb
jns
sbb
add
test
adc
into
jo
mov
lcall
add
and
and
lret
cmp
and
int
inc
lret
ljmp
add
jo
rol
test
sub
pop
mov
pusha
push
aad
mov
enter
inc
lret
jbe
pop
lcall
pusha
repnz
mov
lock
in
out
xchg
xchg
jno
rorb
and
lcall
in
sub
fisubrs
jmp
xchg
repz
mov
orb
inc
pop
clc
xor
fistps
loopne
add
jmp
ret
rorl
popf
pop
setnp
ljmp
fisttpl
jecxz
in
je,pn
test
adc
test
cmc
aaa
les
cltd
cmpsb
shr
lods
orb
cmp
repz
cmp
sti
test
int
sub
mov
mov
sbb
lods
fwait
repz
vpunpcklbw
repnz
xchg
fsubrl
jb
inc
inc
idivl
cli
jb
lret
inc
dec
inc
push
jns
dec
pop
repnz
repnz
mov
and
sbb
ljmp
inc
in
loop
inc
jmp
ja
cmc
jb
push
test
ljmp
mov
add
rolb
pop
or
loop
lds
mov
bound
shll
mov
cltd
ret
in
cmp
add
out
push
and
call
rol
nop
inc
fdivp
or
jae
or
cli
sbb
adc
rorb
test
adcb
sar
gs
movsb
imul
dec
aas
xchg
mov
jo
jecxz
push
stos
icebp
add
xchg
rcll
lret
rorl
or
mov
and
bound
sbb
mov
dec
jecxz
inc
ret
ljmp
stc
inc
aas
mov
inc
cli
pop
insl
ja
out
jnp
loopne
dec
lret
test
lret
outsl
mov
ret
jae
fiaddl
push
mov
fldt
lods
push
subl
xor
lret
push
and
mov
and
dec
fiaddl
or
cltd
sbb
xor
jg
bnd
push
dec
pop
pop
lods
mov
test
aas
insl
cmp
je
dec
cli
ret
mov
scas
lds
sub
repnz
vcvtss2si
push
test
enter
cmp
or
or
sub
mov
das
jecxz
dec
cmp
inc
leave
pop
xlat
movsb
adc
mov
or
ds
add
dec
in
sbb
and
mov
mov
lock
sbb
lahf
cmp
inc
sbb
ljmp
dec
sti
and
and
outsl
sub
insl
out
pusha
cmpsb
enter
pop
hlt
cmp
mov
in
and
xchg
fisubs
xor
xchg
and
daa
jb
sub
mov
mull
pusha
stc
out
ret
xor
and
outsl
mov
push
pop
nop
dec
pop
orb
lret
push
mov
rcll
js
das
xlat
imul
das
inc
pop
ret
pusha
xor
subb
std
push
aas
push
push
mov
add
roll
add
pop
jo
lret
mov
insl
ret
pop
out
jle
push
out
inc
arpl
pushf
lret
dec
mov
hlt
std
or
out
in
inc
inc
pop
mov
jae
andl
push
pop
add
fdivp
pop
cmp
adc
testl
mov
mov
pushf
aam
mov
or
pop
cmp
lret
mov
cld
or
loopne
lods
insl
or
mov
leave
cli
add
adc
lret
mov
sub
out
cmpsl
repz
leave
gs
xor
shll
pop
ja
jb
and
outsb
push
lds
pop
or
fdivrl
stc
add
or
mov
js
ja
jae
inc
outsl
ds
int3
mov
ficompl
call
in
faddl
fcos
xchg
add
fsubl
jp
mov
adc
repnz
adc
sub
ret
mov
add
mov
fcmovu
push
insl
je
lahf
pop
pop
jmp
int
mov
or
js
push
pop
ret
jne
test
and
xchg
jmp
ret
mov
or
pop
cmp
xchg
mov
das
inc
sub
lret
xor
jp
test
or
aad
mov
xorl
movsl
adc
out
adc
mov
pop
addr16
inc
cmpsb
dec
sub
mov
sub
cltd
and
in
xchg
lret
mov
out
or
and
add
jp
movsb
pusha
popa
out
fwait
lret
iret
fidivrs
fstl
in
push
xorl
jmp
jae
or
pop
repnz
inc
aam
loop
out
les
leave
lret
movsl
pop
fdivs
fildll
adcb
or
mov
inc
sar
sbb
mov
pusha
out
dec
add
inc
jg
daa
lcall
pop
sub
sub
push
fimuls
xor
mov
push
adc
ljmp
push
nop
cmova
mov
ss
insl
push
xchg
fisttpll
mov
stos
pop
fstpt
in
and
mov
mov
inc
dec
in
jle
repnz
les
sarl
xchg
mov
mov
decl
xchg
js
lcall
cmp
adc
sbb
fdivp
or
cs
ret
jecxz
add
dec
js
xor
mov
dec
cs
lock
shll
add
sahf
inc
add
cmpsl
jg
cmp
jne
rclb
test
ret
repz
je
adc
or
or
mov
jmp
lds
int
push
add
dec
push
pop
mov
adc
in
adc
inc
mov
pop
push
dec
rorb
lods
push
sub
test
out
and
dec
ret
pop
sbb
sub
and
iret
jb
pushf
sbb
out
and
cmp
push
leave
test
aad
nop
pop
lret
test
push
movsb
jecxz
ror
jmp
es
in
repz
jp
or
fs
pop
addr16
jmp
dec
inc
cmpsb
in
or
and
adc
mov
in
rorl
out
loopne
push
pop
push
push
push
ret
test
fsubp
sub
loop
mov
arpl
das
add
rorl
mov
add
mov
sub
addb
add
dec
bound
dec
mov
cs
mov
imul
test
lret
jmp
jecxz
inc
shll
jne
xchg
call
jb
mov
stos
daa
and
out
add
or
dec
push
lret
fbstp
jae
icebp
call
pop
lret
dec
ret
fisubs
pop
ror
pop
pop
ret
pushf
pop
mov
dec
push
fucomp
add
mov
mov
pop
icebp
leave
and
dec
mov
pop
jbe
rcr
out
jecxz
rcr
ret
dec
std
inc
out
fimull
fistpl
call
pop
es
add
ret
fisubl
inc
lret
pop
es
pop
es
dec
movsb
pop
rclb
fld
dec
fcompl
push
pop
inc
dec
dec
jbe
jmp
fdiv
dec
and
adc
add
sub
fimuls
out
jne
inc
xlat
or
inc
push
addr16
mov
xchg
arpl
scas
lds
repz
std
dec
pusha
push
popa
inc
mov
in
dec
pop
scas
inc
add
fsubp
les
es
jecxz
stc
imul
mov
into
add
bound
imul
inc
ret
pop
fmul
add
pop
push
movsl
inc
sub
xchg
loopne
in
jp
push
fiaddl
push
inc
in
pop
dec
out
inc
or
rcrb
mov
in
pop
aam
ret
mov
lds
pop
call
in
jns
sbb
insl
test
sbb
fadds
add
clc
ljmp
std
push
jmp
ja
insb
out
repnz
out
mov
mov
mov
punpckldq
or
aam
mov
aas
sbb
popa
loope
sbb
clc
add
shll
xchg
dec
sub
sbb
arpl
cld
push
imul
and
ret
push
mov
or
out
and
dec
outsl
mov
sbb
and
cmc
xor
inc
add
dec
loopne
es
fldt
dec
ja
ret
sbb
adc
inc
sub
rcrb
movsl
repz
xchg
pop
dec
int
jmp
in
loopne
decb
or
shr
incb
cmpsl
clc
in
daa
stc
test
or
adc
push
pop
inc
sub
inc
popf
add
addr16
or
mov
add
jecxz
and
adc
hlt
jecxz
and
xchg
jecxz
and
push
jecxz,pn
and
iret
dec
out
adc
out
or
sub
xchg
imul
fidivrs
js
add
mov
stos
mov
xlat
jae
mov
cmpsb
sbb
jecxz
addb
xor
jge
out
mov
mov
push
les
insl
stc
scas
jae
int3
sub
sub
cmp
je
jb
ss
repnz
pop
aas
xchg
dec
les
mov
pop
out
lods
int
sub
mov
add
push
add
imul
lret
pop
ffree
mov
dec
pop
push
dec
lret
push
jmp
push
xchg
call
clc
addl
pop
pop
push
aam
movsb
test
repnz
mov
bound
and
aam
push
scas
pop
orb
dec
shl
lret
fdivrs
add
inc
ret
mov
sarl
push
jb
fmull
xchg
jmp
push
daa
push
ja
inc
clc
and
cs
push
mov
je
dec
add
rolb
es
jecxz
or
jecxz
test
push
leave
sub
and
rorb
enter
daa
iret
add
loopne
xchg
sub
stc
inc
mov
add
pop
adc
out
pop
xchg
data16
out
adc
adc
dec
test
shrb
inc
scas
mov
aam
or
nop
les
repz
add
push
ret
dec
sbb
dec
or
jecxz
popa
ficoml
pop
dec
inc
jge
popa
fimull
fists
iret
out
and
mov
push
push
adc
mov
shl
idiv
jp
ret
xchg
imul
enter
fimull
dec
movsb
push
lds
dec
fisubs
mov
cmp
es
int
mov
ss
mov
sub
cmp
or
mov
xchg
mov
lods
mov
pop
sbb
and
push
jecxz,pt
push
push
and
cltd
in
lret
mov
out
sub
push
loop
popf
jnp
mov
push
loop
mov
enter
cli
xchg
daa
lds
inc
cltd
je
xor
xchg
in
add
popa
xchg
xchg
adc
inc
inc
ret
inc
lds
fisubrl
inc
repnz
mov
dec
add
imul
les
lret
adc
push
imul
pop
ret
push
mov
ret
push
inc
and
push
or
push
dec
pusha
push
xlat
mov
lret
dec
pop
jb
cs
out
pop
pop
lcall
inc
jae
jnp
jo
daa
addr16
sarb
sbb
jbe
adc
and
sbb
into
push
dec
push
int3
or
clc
xor
cmp
adc
add
int3
push
push
mov
mov
mov
aaa
xchg
add
out
push
lret
fimuls
jo
ds
insb
loopne
pop
or
cltd
jnp
jecxz
andb
lret
lods
push
pop
jns
add
mov
push
mov
pop
dec
jge
inc
pusha
icebp
std
ficoms
enter
add
sub
lds
imul
call
xchg
xchg
das
pop
ja
mov
add
sub
shufps
mov
pop
mov
imul
test
enter
or
xorb
cltd
fs
xor
add
mov
pop
lahf
rcrb
insb
std
arpl
lea
push
mov
into
xchg
loopne
mov
fisubrl
lahf
scas
inc
and
inc
lods
outsl
and
lret
pop
jo
in
jae
xchg
dec
lods
pusha
pop
andb
movsb
imull
fnstsw
cmp
mov
jne
dec
in
push
lret
into
es
jecxz
ret
sbb
and
inc
adc
push
jno
test
sub
inc
movsl
loop
pop
stos
sub
test
lds
mov
fucom
fidivl
fstpl
es
push
cltd
xchg
shrl
arpl
mov
bound
add
jo
sub
ljmp
inc
mov
xchg
cmpsl
or
mov
xchg
shrl
sbb
sub
cltd
fwait
inc
dec
inc
inc
mov
xchg
inc
pop
mov
sub
inc
call
xor
shrb
jecxz
arpl
lret
imul
push
mov
xor
mov
popa
xchg
sub
pop
rcr
push
add
push
pusha
inc
and
stc
pop
in
pop
cmc
add
pop
data16
push
adc
je
push
in
std
sbb
inc
enter
test
pop
cmc
add
fidivs
mov
out
and
icebp
xchg
add
fimuls
fucomip
testb
jmp
xlat
ds
jge
mov
incl
jbe
rorl
icebp
fcmove
repz
fisubl
insb
sbb
push
imul
pop
into
movl
ret
push
add
in
push
lods
mov
sbb
inc
rorl
pop
addr16
test
repz
je
adc
cmpsb
or
xchg
or
lret
sub
push
in
push
test
insb
pop
add
cmp
dec
sbb
in
inc
and
cmpsb
push
movl
in
sub
mov
in
out
pop
mov
and
jl
jo
ret
ljmpw
jbe
xchg
sahf
ret
outsb
xchg
inc
out
insb
and
fidivrs
push
or
adc
iret
add
rcr
cmc
or
dec
add
and
mov
mov
ret
ljmp
in
dec
or
fidivs
mov
pop
mov
mov
inc
dec
aas
sbb
xor
mov
dec
mov
or
sbb
or
arpl
cmpsl
jo
pusha
mov
add
inc
xchg
mov
clc
shll
arpl
jge
and
dec
fwait
scas
fstpt
fadds
jmp
int3
and
dec
leave
cmp
js
sub
sub
adc
int
daa
mov
in
or
lods
js
push
sub
mov
fmull
inc
jne
jo
int3
lds
enter
add
fsubp
aaa
out
fstpt
stos
fidivrl
cmp
imul
pop
jne
sbb
sbb
xchg
int
lret
in
scas
lret
in
scas
in
orb
dec
push
pop
dec
jne
fdivl
lret
mov
push
add
adc
sbb
movntq
mov
iret
std
pmaxub
pushf
pop
push
mov
clc
xor
dec
notl
aad
inc
je
lcall
mov
cs
lods
mov
or
jbe
dec
call
roll
xchg
sub
decb
mov
cwtl
out
jbe
xor
dec
int3
xchg
push
add
mov
into
test
int
or
or
cmp
fidivrl
dec
sub
in
dec
cmpsb
mov
in
mov
lret
pop
test
xor
repz
sub
jecxz
mov
or
les
cltd
push
xchg
pop
and
pop
imul
push
leave
xor
sub
jp
dec
or
leave
in
add
sub
dec
aas
pop
mov
jmp
dec
pop
pop
adc
addb
jbe
jge
jge
int3
rep
es
or
xchg
push
inc
ljmp
mov
scas
dec
fldl
mov
pop
movsl
cmpb
sub
dec
cmp
push
lret
add
test
and
xor
sub
lretw
mov
sbb
aas
push
push
pop
andb
xchg
xchg
scas
dec
jg
ljmp
cmp
sbb
dec
jg
adc
mov
xchg
fstpl
hlt
cwtl
test
add
inc
push
or
dec
stc
push
and
push
retw
inc
data16
cmp
outsb
jae
dec
outsb
mov
push
add
insb
push
out
je
les
int
dec
mov
dec
jne
sti
addl
dec
cld
pushf
sbb
into
es
push
push
dec
sub
push
jecxz
dec
lods
into
jae
test
jo
cld
inc
sbb
push
adc
outsb
or
out
mov
jnp
arpl
mov
shrb
ds
rcrb
fistpll
cmpsb
mov
not
stos
pop
imul
or
jp
sbb
inc
pushf
clc
movb
or
ret
sub
fimuls
pusha
rcll
jae
loopne
out
shl
das
push
bswap
test
adc
mov
jno
clts
xchg
lret
dec
mov
out
jecxz
fadds
ret
mov
dec
scas
cld
and
push
fsts
out
xchg
push
ficomps
inc
or
push
aaa
nop
push
pop
jb
repz
sbb
pushf
or
jno
out
xchg
or
test
enter
imul
or
xor
xchg
add
sub
imul
paddw
xchg
mov
push
mov
xor
cmp
mov
call
mov
sbb
insb
into
sti
push
sbb
fisttpll
cmp
cmovb
and
pop
dec
andl
std
add
add
sbb
sub
ljmp
mov
das
into
pop
mov
andb
repnz
push
dec
dec
push
mov
sub
test
jl
push
inc
lret
cmp
repnz
push
lock
out
and
xor
dec
pop
and
xchg
lret
mov
loopne
aad
mov
adc
sarb
mov
mov
imul
mov
aad
lahf
out
mov
daa
cli
push
ret
sarl
sub
rcr
les
add
sub
inc
or
dec
inc
push
es
push
movsb
inc
push
jmp
pop
adc
mov
xchg
fsubrl
dec
mov
pop
lds
into
icebp
pop
ret
sarb
sbbl
pop
and
shrl
jle
ret
sarb
push
cmpsb
ret
int
pop
repnz
xlat
stc
mov
outsl
add
mov
rclb
adc
lods
and
int3
andb
fldt
pop
ds
cli
xchg
scas
aad
imul
ret
dec
push
int
inc
cmp
xchg
xorl
inc
cmp
add
shufps
arpl
mov
sti
xchg
lret
sub
sahf
dec
int3
ljmp
cmpsl
mulb
pop
add
insb
fcmovbe
aas
lahf
mov
or
sbb
inc
inc
sub
gs
push
or
in
lret
repnz
lcall
jb
fsubs
in
adc
jno
pop
lods
into
js
push
mov
loopne
repnz
sti
movsl
ds
out
out
inc
mov
and
test
movsl
push
mov
mov
clc
rorb
movl
rol
iret
fcmove
loop
cltd
cltd
mov
out
mov
mov
pushf
aas
or
xor
lret
inc
xor
int3
out
pop
das
fmull
jns
mov
jecxz
lret
push
daa
push
or
pop
rcr
push
and
mov
inc
xchg
dec
imul
jns
or
in
adc
scas
mov
lods
inc
lcall
mov
mov
aam
pop
cmpsb
cmp
insl
mov
test
and
ret
push
ret
arpl
add
sbb
cmpsl
fimuls
repnz
inc
call
inc
xor
add
mov
jbe
adcl
pop
insl
inc
xor
movsb
orl
icebp
ret
and
dec
mov
sahf
sub
and
lret
xchg
inc
inc
mov
lea
in
and
sahf
js
or
bound
sbb
aas
sbb
fldcw
dec
clc
jnp
aad
sub
sti
mov
inc
inc
push
lds
and
and
adc
ljmp
or
out
xchg
data16
icebp
popf
mov
pop
push
popa
xchg
xor
shlb
rclb
jp
jl
push
aas
and
popf
outsl
fiadds
sub
call
jecxz
push
shl
sub
mov
xchg
sbb
cmp
push
pop
popa
je
xor
pop
inc
sti
push
repnz
inc
mov
clc
test
aas
subl
jecxz
mov
xchg
cwtl
and
sub
shlb
and
ds
arpl
movl
lds
push
jo
sbb
pop
jmp
sub
leave
pop
arpl
fldz
pop
dec
jl
mov
pop
and
xor
cli
xchg
out
roll
lret
mov
sub
dec
fisubrs
lds
fisubrl
mov
fwait
jmp
lds
add
out
sub
mov
loop
sahf
mov
mov
add
xor
cmpsb
es
push
loop
arpl
jns
sub
adc
and
lds
mov
cltd
nop
adc
adc
inc
and
lods
dec
sub
mov
mov
inc
sub
mov
push
xor
lods
lods
sub
sbb
rclb
test
faddp
pusha
pusha
lds
jno
stc
dec
lods
into
mov
lods
mov
es
sbbb
loopne
pop
sbb
out
repz
jge
fildl
add
insl
fidivrl
fstps
xchg
push
loope
loopne
sbb
js
data16
movsl
inc
mov
adc
repz
mov
es
fsubrl
pop
ds
xchg
mov
je
fs
sbb
test
aam
dec
fiadds
mov
pop
sbb
inc
or
es
pop
and
inc
pop
pop
dec
add
ret
jmp
int3
fisubl
mov
inc
pop
loop
push
xchg
stos
jbe
lcall
jle
pushf
rep
or
or
nop
lds
mov
xorl
jmp
dec
addr16
call
cmp
fbstp
xchg
lods
xor
dec
or
jmp
mov
push
pushf
aaa
sub
fs
cld
jnp
jbe
sub
pop
lods
stos
pop
mov
fcmovbe
push
add
push
in
ret
or
int3
test
fstl
ret
xlat
fcmove
pop
aad
fdivl
mov
pop
xchg
or
fimull
push
out
add
pop
lea
fmuls
rolb
fwait
jmp
rcrb
popa
inc
sar
pop
xchg
and
jb
popf
push
pop
in
dec
or
ret
pop
sbb
pop
push
pop
xchg
lods
inc
sub
xor
fisttpl
aam
push
xchg
mulb
aad
and
cmp
xor
push
or
fwait
pushf
jecxz
jo
iret
cmpb
mov
jns
sub
insl
into
stos
push
rol
mov
mov
add
push
popf
sub
aas
jnp
repz
lret
and
bound
inc
jne
adc
sbb
hlt
and
xor
int
int
or
mov
pop
jmp
arpl
xlat
rorb
fcompl
ds
push
jb
fidivl
loopne
iret
ficompl
or
mov
faddp
pop
jb
fistl
pop
sbb
xchg
ret
push
push
pop
repz
ret
mov
stos
add
pop
inc
fisubs
repz
rcr
jmp
in
and
dec
mov
inc
jmp
ljmp
into
mov
push
pop
inc
or
iret
movsb
fidivrs
cmp
xchg
xchg
or
inc
cmc
jns
sbb
call
xor
js
test
mov
and
fimuls
lret
lods
out
cmpsl
add
fucomp
jne
mov
xchg
jns
sahf
sbb
cmpsl
dec
inc
jle
bound
lret
aam
rep
dec
pop
lret
fnstcw
out
add
fucomp
insb
aas
out
or
mov
insb
inc
mov
mov
pop
shl
sub
dec
jmp
push
push
mov
in
popa
scas
loopne
push
and
push
pop
cmp
sub
std
inc
and
lcall
fcmovu
stos
fcmovnb
out
pop
ret
add
pop
dec
in
pop
push
sub
ficompl
es
pop
push
mov
mov
pop
push
or
lret
ss
mov
lods
xor
pop
in
mov
and
add
pop
sarb
cmpsb
lods
xor
mul
mov
add
movsl
jno
push
mov
rcl
xchg
xchg
int
std
test
mov
imulb
and
inc
or
jg
in
mov
popf
dec
push
test
xchg
pop
jmp
mov
xchg
sbb
push
pop
push
mov
dec
jo
data16
mov
xor
lock
imul
in
xchg
push
and
and
mov
mov
ret
popa
push
je
adc
xchg
push
push
lea
sub
pop
adc
jo
mov
jecxz
add
push
or
mov
das
fisttps
push
inc
cmp
mov
mov
pop
ja
rcrl
mul
popa
int3
sbb
mov
inc
ljmp
aas
mov
push
mov
rcrl
enter
mov
das
ret
outsb
imul
xor
jle
push
andl
bound
push
cmpsb
into
xor
inc
push
es
fwait
push
sub
or
mov
sbb
enter
jp
stos
dec
out
daa
mov
and
push
int3
jbe
mov
xor
in
out
xchg
add
push
mov
rclb
int3
mov
push
sbb
mov
dec
pop
iret
push
jl
adc
push
mov
loopne
shrl
and
popf
jo
mov
ficoms
mov
adc
xchg
mov
lods
push
lods
into
ja
ljmp
pop
pop
push
dec
cmpb
mov
add
aam
stos
fs
add
pop
mov
frstor
iret
fidivs
mov
push
push
stos
aaa
fcmovu
out
push
adc
dec
nop
jno
add
in
sti
inc
ret
and
jne
ret
sbb
xor
cmpsl
push
jmp
lea
rcrb
add
pop
push
das
pop
hlt
inc
adc
push
or
cs
das
inc
movsb
mov
outsb
mov
mov
jecxz
aas
mov
mov
inc
cmpsb
gs
push
ret
cmp
dec
mov
les
daa
inc
and
cmc
and
jle
call
movsb
ret
and
dec
xor
or
ret
push
pop
dec
push
sub
ret
sub
pop
inc
inc
mul
popf
test
jbe
jp
ret
mov
add
mov
sub
cmp
push
mov
xchg
xchg
lret
pop
xchg
or
inc
loopne
cli
ret
pop
inc
xor
ret
jl
das
mov
mov
pop
in
jo
or
aam
or
imul
xchg
dec
mov
xchg
mov
imul
xchg
inc
add
repz
rcr
jmp
ret
xor
dec
aas
sub
repnz
sub
push
push
pop
call
into
fistpll
fbstp
adc
dec
gs
or
inc
rolb
fldl
sbbl
and
inc
in
push
push
lret
adc
xorb
mov
fbld
jecxz
out
testl
das
jno
adc
shlb
insl
push
jmp
addr16
flds
adc
fimull
xchg
cld
sbb
xchg
add
mov
mov
pop
and
or
fisubl
pusha
jecxz
fistl
add
inc
adc
mov
imul
adc
cwtl
or
lret
or
dec
dec
ljmp
push
test
mov
inc
in
pop
mulb
test
mov
push
mov
mov
in
push
pop
push
pop
fnsetpm(287
in
push
lret
pop
in
fdivp
push
les
jb
pop
pop
sbb
in
inc
sub
fisttpl
pop
xchg
or
fwait
loopne
fcmovu
fistpl
mov
fimuls
cs
adc
repz
gs
ficoml
cli
sub
lcall
xchg
je
loope
fists
jmp
popa
mov
ja
inc
std
test
sub
mov
iret
jge
andl
enter
mov
test
cmp
push
pop
fidivl
inc
pop
inc
enter
and
jno
xchg
cld
xchg
and
sti
pop
repz
stos
xor
jnp
mov
lcall
jbe
in
out
inc
or
inc
repz
mov
int3
rcrl
int3
add
in
scas
outsl
in
push
js
lcall
fsubs
pop
adc
pop
ret
pop
pop
push
pop
inc
mov
in
dec
fmull
pop
inc
or
fsubrs
sahf
lds
pop
or
xchg
mov
out
nop
xchg
push
or
jmp
loopne
faddp
mov
dec
jecxz
inc
mov
inc
ljmp
nop
adc
js
inc
mov
inc
xor
outsl
es
mov
xchg
cmpb
jmp
aas
inc
sub
into
sub
and
call
ret
mov
ret
pop
stos
dec
add
cli
div
sarl
lret
pop
orl
or
and
popa
popf
mov
jae
icebp
pop
add
into
mov
ficoms
pop
inc
test
xor
negl
ljmp
shlb
fs
faddl
pushf
or
push
jae
pusha
std
jmp
out
inc
and
lods
dec
test
pop
sbb
sub
sub
repnz
mov
sbb
lret
movsb
mov
jno
mov
mov
icebp
sub
fnsave
mov
add
in
push
pop
inc
xchg
xchg
aas
push
jge
xchg
jo
add
movsl
xchg
mov
mov
sbb
sub
call
xchg
sbb
adc
dec
ret
ret
jg
aas
xor
in
push
jl
aas
out
sub
nop
out
bnd
in
mov
imul
cld
sub
rclb
icebp
add
add
push
outsl
push
loop
ret
test
pushl
or
sahf
add
cmp
pop
pop
sub
pop
lret
and
and
mov
push
pop
pop
std
sub
push
push
push
int3
sub
js
sahf
inc
sbb
push
pusha
push
lods
dec
mov
mov
int3
out
ret
sbb
sub
dec
lcall
mov
in
rol
sti
push
pusha
mov
cld
jmp
lea
jmp
sub
push
dec
mov
xchg
push
fnstcw
jle
in
pop
and
lea
mov
es
cmp
fistpll
sbb
adc
pop
addl
push
stc
cmpsb
int
mov
pop
inc
int
push
jne
jns
sbb
sub
mov
fcmovbe
push
dec
push
fisubs
pop
adc
aam
gs
in
sbb
adc
push
push
mov
addw
cltd
call
into
jmp
mov
jmp
pop
rolb
mov
xchg
movsb
jecxz
jecxz
lret
int
lret
jmp
out
fsub
leave
or
inc
mov
inc
sub
les
scas
jecxz
push
loop
dec
rorl
jb
dec
mov
into
ficomps
cmc
mov
lods
clts
paddq
nop
orl
mov
inc
inc
es
divl
arpl
mov
or
es
orb
mov
jb
mov
test
stc
xchg
lret
push
rcrb
and
popa
xor
pop
shl
inc
out
cmp
jb
inc
push
add
js
out
mov
lea
mov
loope
xor
jns
cwtl
or
jnp
test
mov
pop
pop
fisubrs
ljmp
sbb
jbe
call
jns
adc
rolb
xor
test
sbb
cmp
out
sub
dec
adc
push
lret
xchg
outsb
data16
jns
pop
and
orl
ret
ds
enter
cmp
lods
lret
mov
jo
jo
or
mov
les
bound
mov
cmp
push
jns
inc
cmp
loop
mov
test
jecxz
pop
jle
aam
xchg
subb
into
xchg
mov
pop
cmpsl
pop
jmp
or
sub
push
stos
mov
ret
and
adc
out
in
pop
add
loop
in
mov
jne
lahf
adc
lret
daa
xlat
and
pop
cmpsl
mov
lret
addr16
dec
mov
pop
lret
imul
std
cld
das
jmp
fldl
imul
mov
push
out
xor
inc
mov
js
aas
xlat
cli
dec
stc
in
shlb
movsl
scas
pop
movsb
stos
movsb
clc
inc
and
dec
in
addl
add
aad
push
insb
cltd
jp
test
pop
push
cmp
add
mov
sub
sbb
push
cmp
and
inc
push
jb
lahf
sbb
out
push
sbb
xchg
lods
insl
mov
inc
lcall
sbb
std
sub
add
les
dec
fwait
push
loop
sub
sti
das
mov
jge
pop
out
aad
dec
js
int3
movsl
pop
mov
stc
xchg
inc
lret
les
aas
sbb
and
push
cltd
jmp
cmp
inc
push
fisubs
sbb
cltd
xchg
fldenv
fisubs
into
fldt
xor
dec
ret
dec
loopne
ss
sti
jnp
shrb
push
jns
cmpsb
ljmp
push
arpl
inc
and
sets
cmpsb
sti
or
xchg
push
mov
arpl
add
popa
jl
push
ljmp
dec
fnstenv
xlat
push
ret
mov
fisubs
jecxz
mov
mov
mov
pop
repnz
sub
xchg
add
in
andl
outsb
push
test
xor
pop
hlt
push
loopne
add
aas
adc
sub
ficoms
sub
pushf
in
xlat
add
jae
test
cld
or
mov
dec
sbb
jns
push
lds
cli
mov
pusha
pop
shlb
jnp
inc
add
lds
fimuls
jnp
jne
loopne
filds
fdivp
add
jns
inc
pop
jl
sbb
inc
push
xor
sbb
pop
fisubs
push
or
fcoml
dec
inc
fcmove
push
push
xor
lret
xchg
pop
test
jl
in
into
pop
mov
lods
mov
sbb
sti
pop
lock
std
jno
call
pop
arpl
popf
and
mov
add
xor
fdivp
push
xchg
xorb
aad
shl
test
pop
pop
fimuls
inc
les
je
inc
rorl
ljmp
mov
mov
mov
mov
test
arpl
hlt
inc
addr16
rcrb
inc
out
fistpll
lret
pop
or
fcmove
pop
xor
sbbb
sub
inc
pop
imul
jmp
jno
xchg
jae
mov
ss
pop
es
jl
je
inc
fildl
add
pop
add
dec
stos
push
push
out
orl
cmpsb
xchg
fidivrs
test
or
fbstp
ret
push
sbb
fstl
je
loop
test
adc
out
stc
lods
into
cmp
mov
xchg
pop
xchg
stos
lret
shl
rcll
pop
or
testb
push
int3
fs
fisubl
imul
mov
ljmp
das
inc
xchg
loop
repnz
insb
push
pop
scas
and
aad
mov
mov
add
add
fstpt
mov
sti
rorb
sub
pushf
or
mov
inc
sub
sub
cwtl
sub
scas
loop
mov
or
stos
loopne
cmpb
pop
cmp
xchg
dec
pop
ja
in
mov
mov
xchg
leave
jb
push
fisttps
push
repnz
push
adc
scas
movsb
filds
imul
dec
mov
sbb
rorl
pop
in
push
data16
dec
mov
mov
jg
je
adc
gs
dec
lea
leave
cmp
inc
stos
pushf
jb
fldenv
test
outsb
and
lds
lret
ja
rcll
repz
lcall
mov
pop
das
or
js
cmp
or
push
sub
in
dec
add
inc
jnp
push
pop
fsubrs
push
das
push
lock
lcall
add
lar
push
pop
imul
enter
xlat
mov
adc
cmp
ds
push
insl
xchg
aam
aas
xchg
push
xor
lods
imul
popf
cs
jbe,pn
lods
fcomps
ja
sbb
xor
cld
jns
pop
andl
mov
popa
sahf
je
ljmp
pop
cmpsl
pushf
sarb
pop
jbe
fs
lcall
inc
xchg
in
and
les
jp
pop
data16
hlt
xchg
jae
push
inc
jg
mov
lods
cmc
or
push
adc
add
sbb
cltd
xor
divb
push
mov
fs
lcall
cli
addr16
inc
push
push
jge
inc
sub
and
cli
ljmp
mov
ljmp
adc
jo
arpl
cwtl
push
cmp
js
jo
cmpsb
dec
mov
sub
mov
std
adc
repz
xchg
pop
inc
movsb
cmc
and
into
mov
fldcw
lret
sub
cmp
mov
pop
jbe
mov
cld
or
andb
test
dec
push
dec
inc
dec
mov
inc
enter
and
xor
xchg
mov
and
sbb
jge
fistpll
test
fiaddl
popa
popf
push
lret
lret
cmpsl
push
std
mov
in
shrl
push
inc
mov
mov
out
iret
in
add
les
push
loop
xchg
mov
popa
dec
mov
jo
xor
mov
std
es
popf
lret
jge
dec
xchg
dec
or
add
rcr
xchg
insl
addb
cmp
movsb
fsubl
outsl
xor
enter
or
push
call
pop
add
aas
sbb
add
or
incl
add
fstl
dec
ret
xchg
out
mov
xchg
mov
jb
jo
xchg
data16
imulb
add
in
sub
mov
repnz
jmp
pop
mov
cs
cmpsl
cmpsb
addb
ds
xchg
test
inc
xchg
fninit
ficompl
add
in
cwtl
outsb
pop
retw
pop
call
inc
mov
jb
xlat
or
fwait
or
cld
add
test
xchg
pusha
pop
xlat
lods
sbb
mov
bound
adc
mov
push
add
pop
das
add
mov
insl
sub
bound
xchg
inc
frstor
jmp
and
in
jecxz
mov
sti
test
sbbb
cmpsl
jno
pop
mov
mov
in
inc
stos
fistps
pop
ret
jmp
pop
cld
addl
inc
sub
ret
movsl
push
ftst
dec
pop
mov
inc
mov
fucomi
int3
push
test
jge
fmull
push
mov
lds
repz
sub
out
in
adc
ret
aas
mov
faddl
sub
mov
adc
or
and
je
ret
push
dec
sub
pop
jae
and
dec
sbb
and
aam
sar
cmp
aam
mov
mov
mov
in
fmulp
jl
mov
repnz
sub
or
cmp
sbb
out
filds
sub
frstor
pop
rcr
cmpsb
outsb
data16
jae
push
adc
out
xor
xchg
stos
ljmp
dec
adc
dec
fs
and
sub
pop
ljmp
mov
add
or
shr
inc
or
stos
add
ficoml
dec
ret
shr
fildll
rorb
pop
xchg
adc
fadd
inc
je
fcoms
push
sarl
adc
fwait
popa
jno
dec
cmp
mov
iret
fsubs
and
xlat
or
pop
sbb
add
repz
ret
ret
pop
shl
aaa
rclb
adc
or
stos
fsubr
fs
jmp
push
mov
pushf
imul
ficompl
jmp
jmp
testb
aad
adc
hlt
dec
jecxz
shl
pop
fisubs
fldenv
and
inc
dec
lock
push
mov
dec
xor
adc
popa
inc
je
xorl
daa
fwait
sub
xchg
repnz
lahf
adc
lret
jbe
mov
arpl
movsb
movsb
ret
push
sub
fxch
pop
repnz
pop
sarl
fisubs
sub
add
fs
jne
pusha
fistps
xchg
jmp
daa
push
jae
xchg
fcmovu
fistpll
pop
out
xchg
fimull
fs
sub
rorb
dec
mov
bound
push
iret
add
xor
inc
push
cmp
out
add
pop
adc
jb
movsl
xlat
shl
pop
pop
ds
inc
pop
enter
fsubs
jp
jne
xor
mov
ficomps
inc
addr16
xor
push
mov
mov
mov
in
fdivr
call
dec
fstpt
jb
js
shlb
adc
mov
or
stos
out
inc
adc
pop
mov
data16
cmc
push
addl
pop
mov
push
inc
addr16
arpl
mov
and
js
mov
or
mov
lds
fsubp
or
dec
jae
and
movsl
pop
bound
inc
icebp
cltd
push
pusha
daa
cld
pushf
pop
mov
mov
add
les
inc
stos
xchg
aad
ret
jp
hlt
je
mov
mov
or
aad
jo
sar
pop
cmpsl
into
lret
cmp
or
incb
jle
inc
xor
loopne
rcr
or
fldenv
fiadds
jne
addl
mov
out
mov
xchg
jns
xor
jmp
add
mov
stc
aas
aam
lcall
nop
pop
inc
sub
repz
or
jg
fimuls
push
dec
mov
push
cmovns
aas
or
frstor
sub
outsb
dec
mov
aas
hlt
aas
adc
in
pop
ret
insb
std
mov
cmpsb
out
scas
push
inc
push
sub
mov
jo
mov
ja
loope
movsb
sub
clc
loopne
loopne
lods
lea
dec
cld
dec
mov
jecxz
pop
aas
cltd
mov
push
sub
or
iret
xor
xchg
mov
lds
rclb
adc
jmp
fiaddl
scas
ret
sub
dec
sbb
jl
mov
ja
ror
rolb
inc
mov
add
icebp
cmpsl
test
je
sti
jle
int
out
mov
bound
scas
cli
dec
mov
idiv
out
dec
push
cld
je
daa
es
xchg
sbb
fdiv
sub
test
xor
cmc
push
or
loopne
loopne
ret
inc
push
call
cwtl
mov
pop
andb
sbb
push
pop
mov
xor
ror
jne
xchg
cltd
mov
push
fsubs
xchg
cmpsl
or
rclb
inc
out
subl
lret
inc
dec
ficoms
cmovbe
gs
dec
fdivp
jg
arpl
lret
ret
shr
xchg
int
mov
dec
or
aad
fimuls
jno
xchg
cmc
out
push
inc
out
or
fisubl
fs
or
es
mov
pop
mov
cs
jecxz
pop
data16
lret
insl
sbb
icebp
inc
and
cmp
or
aaa
addr16
sbb
xchg
or
loopne
jp
shll
jae
orb
push
sbbb
daa
pop
sub
adc
test
into
cmpsl
repnz
push
lret
in
mov
dec
mov
gs
orb
and
insb
es
daa
adc
sub
ret
shll
divb
adc
je
loop
adc
std
inc
js
lea
sub
fistl
ljmp
push
sub
cmp
stc
jmp
jno
loop
inc
push
pmaxsw
aas
mov
js
mov
out
pop
sub
addb
into
out
add
dec
or
sub
jb
cwtl
inc
shll
fcmove
and
ret
repnz
cmp
call
in
mov
aaa
push
out
xor
outsl
stc
fdivl
add
jno
and
add
in
cs
fsubs
mov
lret
in
icebp
inc
out
jae
xchg
sub
and
jno
stc
jmp
into
divb
mov
enter
cmp
and
daa
leave
addr16
mov
mov
lcall
mov
pop
stc
cmc
add
addr16
call
lds
sub
jo
lea
jno
add
lret
pop
sbb
mov
adc
icebp
clc
lods
add
pop
add
pop
insl
in
sub
lea
jns
xor
lock
or
and
cld
dec
jae
inc
pop
loopne
push
outsl
mov
pop
decb
imul
xor
mov
push
arpl
loop
mov
fbstp
jmp
in
aad
fs
or
std
test
and
loopne
popa
xchg
in
ret
dec
js
data16
lock
sbb
pop
mov
or
xchg
lods
clc
lods
arpl
into
add
jmp
std
inc
mov
iret
inc
jae
push
out
daa
cmp
inc
dec
lretw
dec
leave
loopne
mov
push
and
pusha
into
test
insb
push
push
pop
in
pop
and
out
popf
adc
xchg
dec
pop
outsl
lret
sub
inc
aam
and
add
push
xchg
push
lret
std
or
add
jb
sbb
enter
xchg
xchg
sbb
adc
xchg
hlt
imul
and
dec
inc
repz
je
fdivrs
or
out
dec
mov
lds
jmp
cwtl
adc
mov
push
sub
add
fidivrs
add
dec
sbb
mov
inc
out
lock
xor
dec
and
add
fisttpl
pop
jnp
jae
push
sbb
fisubs
sub
jecxz
and
int3
and
lods
stc
je
ljmp
aas
xor
shll
mov
aam
rcrb
jae
and
inc
jecxz
lahf
jl
int
gs
pop
xchg
jo
out
sbb
push
sub
xchg
mov
inc
mov
jb
pop
stos
repnz
nop
or
frstor
rclb
adc
mov
inc
nop
inc
or
push
in
xchg
and
outsl
adc
add
enter
xchg
inc
daa
xor
rolb
mov
mov
sub
add
jl
dec
inc
std
inc
aas
cmc
sub
add
or
sub
xchg
addb
mov
xor
xor
inc
mov
xor
inc
popa
mov
cwtl
hlt
ja
or
iret
lods
movsb
shl
push
rol
fidivl
sub
cmp
std
jecxz
inc
lods
fimuls
rcrl
nop
aaa
adc
dec
fidivrl
enter
sub
stc
jno
call
in
mov
aad
mov
sub
xchg
lcall
imul
mov
cs
fcmovnbe
jl
jne
mov
jbe
inc
mov
nop
cltd
in
fadds
mov
lds
into
pop
pop
pop
cmp
and
fdivrs
and
imul
inc
mov
adc
inc
in
jns
enter
sub
inc
pop
cli
mov
les
dec
outsl
repnz
add
inc
mov
fnstenv
cmp
addr16
fnstcw
xor
inc
dec
jo
mov
jnp
jmp
aam
mov
enter
stos
es
stc
inc
and
lahf
xchg
insl
pop
xchg
push
jae
inc
js
push
rclb
sbb
in
lret
adc
mov
mov
jnp
outsl
inc
or
pop
adcl
insl
iret
inc
and
test
jae
pop
dec
adc
jb
pop
push
enter
push
pop
jb
dec
sbbl
dec
mov
pop
pop
dec
pop
imul
outsl
cmpsl
add
out
xchg
iret
popf
mov
xlat
sti
fimull
pop
mov
rorb
popa
add
jecxz
clc
mov
mov
popa
push
cmp
dec
xchg
push
mov
mov
xchg
ret
xchg
scas
or
cmpsl
push
scas
sbb
or
dec
jg
xor
jb
popa
testl
sbb
stos
loop
ljmp
testb
testb
testb
or
and
pop
jl
inc
rorl
adcb
and
out
mov
mov
jne
int
mov
lea
sub
in
ja
xchg
ljmp
dec
xchg
mov
mov
add
in
sbb
pop
aaa
lods
inc
sub
push
ret
pop
sbb
cld
dec
test
jle
xchg
imul
js
enter
call
mov
adc
jmp
xor
and
loopne
ret
imul
cli
sbb
xor
ja
pop
inc
aas
push
pusha
shll
mov
inc
jo
pusha
popa
mov
and
pop
sbb
jne
and
test
mov
clc
pop
cld
sbb
dec
jmp
xchg
cwtl
sub
loop
nop
leave
leave
insb
enter
and
sarb
jae
dec
lcall
pushf
add
jno
adc
negl
inc
mov
and
bnd
insb
mov
lahf
stos
xchg
push
sub
add
lret
sar
popf
and
sub
cmp
lods
nop
sub
jge
mov
test
inc
int
adc
in
cs
imul
jecxz
jmp
sbb
add
scas
or
mov
sub
push
mov
mov
test
scas
inc
outsb
add
xchg
xor
mov
and
in
in
cmp
push
cltd
jmp
sub
and
repnz
mov
pop
push
out
xchg
addr16
pop
inc
jge
ret
adc
ljmp
packssdw
mov
aaa
pop
mov
sub
in
ret
roll
enter
in
add
and
rorb
lods
aas
outsl
mov
fists
mov
mov
fwait
cmc
dec
mov
dec
popa
add
loop
fsubp
xlat
insb
adc
aas
jne
in
mov
sub
bound
ret
cmp
test
xor
ss
jecxz
fisttpl
fs
pop
test
xchg
mov
push
shr
add
inc
xor
inc
aas
jb
inc
dec
inc
cmp
add
aas
pushf
imul
fwait
call
fimull
lahf
loop
sub
hlt
imul
dec
rorl
scas
dec
inc
push
add
xor
orl
mov
mov
shl
data16
nop
adc
pop
call
in
xor
shlb
cmc
dec
jo
lods
ljmp
das
pusha
push
xchg
aas
cmp
dec
cmp
adc
mov
mov
mov
xor
stos
jnp
jp
cmp
push
push
inc
pop
mov
sub
insb
in
sub
inc
mov
loopnew
rorb
pop
negb
rorb
mov
enter
pop
push
sbb
pop
out
jle
call
sti
jae
popa
dec
pop
stos
aad
pop
sbb
add
popa
push
push
jg
popf
sbb
jg
or
pusha
inc
aam
inc
xor
lret
iret
xchg
mov
enter
mov
es
mov
mov
jne
add
jl
fdivs
cmpsb
pop
movsl
shr
pop
jo
dec
icebp
ljmp
lret
cmc
push
aas
push
shll
mov
sbb
mov
shrl
mov
and
pop
loopne
dec
lret
stos
sbb
and
xchg
or
popa
sti
fidivrl
mov
sbbl
xchg
lret
ret
fldl
pusha
push
sbb
movsl
push
fs
or
dec
mov
push
dec
divl
pop
mov
dec
pop
mov
fbstp
call
movsb
ret
fcompl
outsl
jns
daa
adc
pop
in
notl
aas
push
sbb
and
mov
pop
fisttps
jne
inc
sub
or
jo
mov
lret
inc
stos
pop
rorb
or
inc
add
dec
mov
mov
dec
pusha
jmp
dec
dec
mov
mov
cmp
add
addr16
pop
lret
repnz
inc
or
push
in
test
cmpsl
inc
pop
pusha
sub
jp
mov
fimull
add
ficomps
enter
pop
jbe
or
outsb
sub
xchg
jae
mov
and
adcl
add
inc
int3
loop
xchg
cwtl
fsubr
xchg
jns
or
aas
jb
mov
pop
cmp
lods
lret
push
mov
lds
add
inc
jp
xchg
jno
pop
ljmp
mov
mov
pusha
mov
adc
movsb
stos
pop
inc
cmp
gs
movsb
lret
sub
jecxz
fbstp
int3
inc
pop
fimuls
rolb
dec
lret
in
or
push
add
inc
stos
daa
lret
test
test
cld
xchg
pop
ret
xchg
add
fists
stos
pop
inc
daa
ret
cli
fsubl
cmpsl
dec
stos
enter
or
adc
enter
push
jg
and
bswap
cwtl
xchg
ja
jg
mov
xchg
mov
out
or
xchg
jl
mov
or
dec
stos
jno
or
cmpsb
ret
lock
jb
pop
mov
and
cwtl
mov
inc
dec
push
sbb
cmpsl
jmp
sub
icebp
jg
call
stos
lret
insb
repz
inc
mov
data16
out
aam
imul
dec
mov
insb
repnz
cmp
filds
push
test
out
cmpsb
mov
dec
inc
mov
and
enter
loope
insb
das
inc
daa
sbb
lret
in
adc
mov
xchg
jecxz
loopne
add
aad
lock
fdivr
mov
push
cmpsl
mov
dec
sbb
xor
pop
stos
and
sub
fistpll
in
sub
inc
push
mov
mov
push
je
out
in
aad
testb
ret
outsl
mov
lcall
aas
push
mov
or
add
add
mov
aad
cmp
dec
sub
mov
mov
mov
xor
addr16
push
fs
push
xor
mov
popf
call
ja
pop
pop
imul
loop
mov
and
pop
fsts
mov
sub
leave
js
ret
addl
or
push
fidivrs
movb
push
out
cmp
enter
sarb
das
cmp
hlt
cltd
mov
pop
ret
lods
lahf
in
enter
insb
push
or
inc
jge
pop
out
dec
mov
stc
sub
js
mov
sub
sub
add
inc
mov
in
sbb
jbe
repnz
dec
fisubs
icebp
push
in
or
mov
sub
in
pop
jno
lods
loop
fiadds
dec
push
lods
cltd
or
clc
pop
mov
and
dec
xor
adc
insb
scas
icebp
dec
sub
inc
mov
jo
pop
pop
inc
clc
mov
add
outsb
mov
inc
imul
xor
test
pop
mov
or
jno
aam
xchg
lret
dec
icebp
pop
shr
stos
mov
and
or
add
call
push
mov
and
jb
incb
mov
adc
xchg
ret
sbb
shrl
xor
jecxz
hlt
test
or
into
xor
push
mov
mov
or
mov
sub
cmpsb
out
xor
dec
bnd
mov
lret
dec
mov
sub
mov
pop
imul
in
jno
or
ret
gs
sub
out
lret
lea
cmc
and
pop
sbb
dec
inc
out
mov
fdivl
gs
lret
out
cmp
fidivl
decl
or
popa
inc
xchg
ficomps
add
inc
mov
leave
fstpl
mov
int3
pop
mov
add
mov
arpl
fmuls
int3
mov
adc
sub
mul
lret
movl
mov
dec
jge
fwait
popa
mov
jbe
lahf
ljmp
mov
out
lods
dec
sub
mov
shrl
ret
aam
sub
sbb
mov
sub
fdivs
push
push
leave
rcl
push
pop
mov
negb
sbb
popa
lea
lods
call
and
ret
movsw
xchg
movsb
xchg
in
or
fdiv
xchg
dec
jbe
rol
addr16
and
scas
xchg
push
mov
add
shll
dec
sub
mov
lds
sbb
stos
inc
xchg
dec
and
dec
inc
scas
and
mov
mov
aaa
mov
add
sub
mov
xchg
out
lds
fmuls
test
and
arpl
mov
in
xchg
movsb
sub
loop
aas
mov
in
mov
ss
lret
xchg
lret
fdivrs
outsb
mov
mov
lret
shrb
cmpsb
insb
xor
push
xchg
dec
mov
jo
mov
dec
arpl
and
lds
mov
mov
in
in
loop
add
mov
pushf
inc
data16
sbb
test
lahf
or
aam
mov
hlt
loopne
testb
jmp
push
cmpsb
inc
fsub
out
rorl
mov
push
mov
mov
dec
mov
lret
call
mov
addb
push
in
and
addl
jmp
imul
lods
or
sub
stc
mov
or
ret
jbe
pop
push
psubd
mov
lret
inc
mov
adc
out
in
addr16
adc
fmulp
pop
xor
jo
shlb
fstl
imul
push
inc
and
mov
push
sbb
sbb
mov
cltd
fcoml
inc
xchg
ljmp
out
sbb
push
dec
dec
bound
mov
pusha
movsb
push
inc
xchg
push
aas
pop
loop
or
repnz
hlt
fdivr
add
push
movsb
add
lods
inc
sub
add
stc
out
or
mov
xor
inc
mov
mov
and
push
jae
frstor
and
inc
pop
iret
xor
and
mov
push
push
std
adc
outsl
sub
xchg
cltd
or
adc
je
int3
or
clc
mov
ss
add
and
pop
mov
loopne
xchg
rcr
out
lods
jge
add
inc
mov
out
inc
bound
pusha
push
lahf
xor
in
dec
cmp
aas
mov
jo
cmp
push
add
sub
aam
into
xchg
mov
arpl
fldcw
push
cmpsb
fstps
lret
data16
cmp
inc
and
dec
out
inc
bound
hlt
pop
cli
adc
and
push
sub
inc
lods
add
mov
sub
jp
xor
jecxz
pushf
add
pushf
xchg
and
and
mov
test
inc
sub
lcall
ret
ret
pop
jne
lcall
pop
fldl
and
fstl
or
and
je
popa
dec
lret
cmpsl
jno
cltd
or
hlt
loop
divb
jl
lea
jle
pusha
xchg
sbb
lahf
outsb
jnp
mov
scas
push
inc
mov
stc
cmpsb
pop
add
lret
out
xor
xor
add
add
adc
dec
xchg
inc
sub
lret
fisttps
das
lods
lret
insl
sub
divl
or
or
pushf
xchg
push
cmp
je
rclb
cmpsb
add
mov
lock
dec
in
scas
lret
pop
ret
fs
stc
mov
xlat
cmpsb
sub
add
mov
into
add
xor
jo
ljmp
stos
or
mov
stos
repnz
xor
add
inc
inc
adc
loop
pop
sub
push
add
das
and
pop
outsl
cmp
or
sbb
mov
stc
cmpsl
aas
cwtl
or
cmp
mov
mov
repnz
sti
dec
add
push
lahf
mov
sub
mov
or
xor
mov
negl
or
fisttps
test
popa
mov
cltd
js
rcll
lea
fldcw
psubsb
vpaddusw
mov
mov
stos
lods
lds
in
adc
cmp
out
lcall
imul
enter
fists
mov
xor
lods
sub
je
push
in
dec
lods
sub
aas
or
fs
and
lcall
ljmp
enter
das
push
mov
les
add
pop
js
pushf
repnz
jp
mov
pop
data16
pop
and
lds
icebp
flds
pop
xorb
jbe
inc
aas
shlb
add
out
ljmp
pop
push
xor
adc
stos
pop
out
pop
sbbl
pop
daa
test
and
fldenv
movsl
mov
cld
pop
mov
mov
mov
pusha
sbb
in
xchg
dec
jg
pop
loopne
inc
xchg
dec
xor
dec
sub
jae
jns
xor
cli
loope
xor
xchg
rolb
ljmp
fs
jae
pop
ret
inc
loope
sub
adc
into
sub
and
cltd
mov
int3
outsl
xor
push
pop
jbe
lret
hlt
push
in
push
int
inc
aaa
jg
mov
loope
push
aam
js,pn
mov
rclb
mov
adc
jmp
and
scas
outsl
into
movsb
in
repz
sbb
pop
shl
pop
ficoml
push
inc
add
mov
push
push
jmp
aam
shlb
arpl
out
pop
faddp
adc
leave
xor
mov
mov
hlt
jo
int
sbb
sub
pop
inc
ljmp
bound
in
mov
leave
pop
loopne
pop
call
pop
mov
xchg
insl
jmp
jecxz
test
pop
jae
sbbb
mov
idivb
mov
xchg
lret
pop
sub
movsb
inc
outsb
clc
xor
jns
in
jo
fiaddl
xchg
and
lret
rcr
pop
lcall
push
dec
imul
mov
sarb
ret
and
mov
xor
test
cmp
add
movsb
or
mov
js
lret
mov
sarl
or
push
push
loope
ret
leave
mov
mov
jae
dec
sbb
ror
lret
inc
ret
rorl
dec
mov
jo
shlb
aas
mov
fiadds
adc
push
push
dec
inc
lods
jne
sub
iret
jb
lret
adc
enter
dec
push
shr
pop
loop
add
ret
xor
orb
or
shlb
aas
pop
jne
repnz
sahf
sbb
adc
dec
lds
lret
sub
and
sub
sub
push
fisttpll
cmp
repz
jnp
dec
popf
push
sub
js
mov
xchg
push
and
sub
pop
xor
xor
push
pop
xchg
pop
dec
fbld
fwait
add
pop
out
push
adc
xor
adc
repnz
mov
lock
or
inc
cmc
push
fwait
sub
push
fdiv
inc
dec
inc
push
sub
aas
inc
cmp
rclb
mov
sub
lds
lret
jo
xchg
adc
inc
les
imul
cmpsb
cmp
inc
jo
ljmp
stos
jp
mov
pop
nop
jno
adc
xchg
aam
addb
xchg
jmp
test
sub
mov
cmp
leave
imul
mov
and
fdivr
mov
rorl
inc
cmp
and
sbb
lds
call
lret
mull
push
fs
fwait
popa
loop
mov
out
inc
jbe
pop
or
sub
mov
rcll
enter
dec
sbb
adcb
jae
addr16
into
adc
xchg
adc
mov
fs
test
xchg
ljmp
inc
xchg
pop
push
xchg
movsb
sub
or
xor
sub
sbb
lock
pusha
jno
xchg
inc
pop
mov
mov
or
lea
xor
push
xchg
repnz
xchg
std
add
xchg
aam
inc
adc
call
subl
lcall
mov
test
add
pop
and
mov
dec
push
push
inc
sbb
cmp
stos
cmpsl
sub
call
sahf
dec
or
xchg
stos
pop
popa
sub
stos
scas
add
rclb
adc
sbb
jle
out
aad
xor
lods
xchg
insb
cmpsl
pop
daa
movsb
arpl
scas
jl
xchg
test
fs
daa
ja
jmp
add
push
adc
aas
push
stos
dec
outsb
sbb
loopne
iret
sub
les
shlb
inc
inc
lret
lods
jg
add
jecxz
loopne
rolb
jecxz
dec
je
or
jge
pushw
xchg
pushf
jge
push
loopne
xor
lea
and
scas
bt
adc
cli
cmc
lods
in
inc
push
add
fadd
mov
or
les
dec
xor
daa
mov
lds
out
and
sarb
subl
adc
leave
push
das
ficoms
push
fsubrl
jo
test
lds
mov
rol
xor
into
lret
test
lds
lret
inc
aad
mov
inc
outsb
sub
mov
mov
lret
not
sub
sbb
dec
aad
incb
insb
cmp
loopne
popa
cmp
test
lcall
test
addl
mov
loop
push
pop
dec
mov
cmp
adc
je
sbb
lret
lcall
aaa
cmpsb
jecxz
jbe
js
fstpl
inc
outsb
inc
or
lcall
or
dec
stos
ljmp
adc
sbb
xlat
sub
je,pn
rcl
inc
pop
pop
lahf
cmc
xor
gs
sub
add
and
repnz
inc
lds
in
fildll
and
sbb
pushf
lcall
cltd
xchg
inc
inc
sub
outsb
cwtl
mov
add
movb
mov
add
add
scas
push
inc
test
mov
jle
jns
jno
push
mov
lret
insb
js
sub
loop
aas
cmp
adc
rol
ret
sub
fisttpl
fdivr
xchg
ret
ret
sub
fisttpl
fcomps
es
cmpsl
mov
cmpsl
fmuls
repz
aam
in
sti
pop
inc
lods
clc
inc
xchg
or
push
add
jb
mov
cmp
mov
adc
sbb
inc
daa
div
xchg
repnz
bound
fwait
lods
stos
in
rol
loopne
push
mov
jecxz
mov
data16
out
sub
pop
xor
jb
lods
stos
push
ja
repz
in
enter
jb
inc
and
daa
inc
addr16
int3
pop
adc
pop
inc
inc
xchg
push
cltd
mov
test
push
mov
mov
and
cltd
jo
pop
mov
lret
repnz
xor
and
sbb
insl
mov
mov
repnz
into
or
pushf
ds
cmp
jae
insb
jne
pop
or
repz
test
popa
jge
xchg
jns
inc
jo
push
xchg
pusha
aas
dec
cmp
push
sub
loop
cs
out
add
dec
in
pop
jne
in
cltd
mov
and
popa
mov
push
fimull
inc
fidivrs
jns
dec
mov
xlat
and
and
rol
pop
add
jecxz
fisubs
ss
jo
dec
ljmp
in
cmp
inc
out
xor
adc
inc
dec
mov
lcall
sbb
loopne
mov
push
les
push
sti
sbbl
add
xchg
inc
leave
bound
jo
jl
enter
cmpsl
cld
cmpsl
negl
into
aam
xchg
add
sub
test
jle
popf
ret
push
ret
idivb
rolb
gs
popa
push
mov
aas
push
mov
ficoml
push
sub
or
loopne
push
mov
and
xchg
icebp
push
jno
add
fists
popa
jno
popa
push
jne
addr16
movsb
lea
scas
mov
insl
movsb
fldl
bnd
cltd
test
dec
pop
inc
push
push
enter
or
aas
or
jg
pop
add
add
xchg
jb
mov
andl
push
incl
daa
mov
insb
mov
icebp
rolb
test
fwait
cmp
pop
push
call
jg
dec
pusha
ds
or
cmp
jnp
out
mov
xor
jecxz
mov
out
lcall
xchg
xchg
enter
lret
mov
sbb
mov
mov
add
lea
xchg
jecxz
push
and
repz
mov
dec
lock
dec
jns
push
mov
scas
pop
xchg
mov
lods
ficoms
lea
lahf
xor
dec
fisttpll
mov
movsl
repz
pop
in
ret
mov
fcmovu
je
inc
data16
pop
mov
in
shll
and
push
ret
mov
dec
cli
push
push
test
jbe
jns
loopne
mov
in
out
push
inc
fistpll
imul
into
cmp
push
pop
dec
jge
pop
sbb
add
test
sahf
in
dec
fisttpl
dec
jo
ss
pop
dec
sbb
loope
push
pop
adc
or
dec
das
roll
add
aaa
dec
mov
sub
movsb
in
dec
pop
or
sub
cmp
rorl
sub
imul
arpl
add
push
ret
sti
jo
rcrb
daa
xchg
rcrl
xor
jecxz
lea
cli
pop
sub
out
mov
iret
pop
jns
in
int
movsb
filds
pop
aas
adc
dec
or
int
push
push
mov
mov
imul
and
sbbl
or
jmp
in
in
out
pop
push
sub
inc
test
jecxz
fisubl
adc
js
lret
mov
in
pop
mov
andl
repz
add
xadd
out
push
dec
and
pop
ficoms
shl
dec
cmpsl
adc
fdivr
sub
inc
inc
in
pop
lea
out
out
jno
bnd
sub
mov
cmp
sub
xchg
dec
mov
mov
dec
dec
cmp
dec
lock
dec
aas
mov
cmpsl
dec
mov
lock
ret
xchg
cmpsb
pusha
mov
lcall
lcall
pushf
les
inc
push
fcmove
fcoms
dec
pop
push
sbb
mov
out
pop
and
mov
cmc
vshufps
in
outsl
cmpsb
faddl
bound
add
xor
mov
xchg
inc
add
mov
test
push
add
mov
test
test
xchg
pop
fmul
jno
and
jbe
rcrb
loop
dec
push
sub
sub
mov
inc
dec
sti
sub
or
inc
cmp
enter
ror
push
mov
outsl
pop
sbb
mov
lret
add
mov
adc
push
loop
or
xchg
xor
cmpsb
cwtl
aaa
sub
sub
jp
or
fdivl
push
mov
dec
xchg
sub
and
xchg
xchg
rolb
incb
addb
dec
subps
data16
es
ret
push
movsl
es
ret
lds
es
dec
test
sbb
push
mov
ret
ret
dec
xchg
mov
fmuls
fcmovnbe
fmuls
xor
inc
loop
cld
daa
out
mov
popa
add
jge
jb
mov
adc
jne
adc
lods
add
call
insb
loop
lcall
fcmovb
nop
adc
cltd
jmp
subb
cwtl
test
pop
gs
daa
in
or
fs
pop
pusha
xchg
mov
fnstsw
lods
cmp
lret
call
push
ret
in
mov
iret
pushf
jb
push
out
in
aam
insl
mov
or
cmp
add
cwtl
mov
movsb
dec
aas
xchg
push
xor
push
fs
xor
mov
jecxz
dec
popa
aad
ficoms
int3
adc
lret
jbe
mov
and
repz
jecxz
push
pop
inc
fisubl
inc
lods
push
lea
int3
jno
mov
jb
fsts
daa
dec
cmovle
dec
xchg
lods
push
pop
add
sysenter
pusha
pop
into
dec
cltd
les
insb
iret
addr16
shll
push
push
mov
aad
sub
hlt
fs
test
pop
jl
pushf
jecxz
mov
mov
imul
loop
jb
cmpl
push
loop
cmp
int3
cmp
in
into
fiaddl
mov
push
movsb
sbbl
jecxz
rcll
jecxz
fadds
mov
mov
fisubs
xor
mov
mov
push
mov
ret
mov
pop
dec
es
push
dec
dec
fistl
lock
push
int
xor
aam
aas
imul
jecxz
mov
repnz
or
je
insb
je
or
or
sub
daa
repnz
adc
fidivrl
push
dec
std
sbb
test
daa
push
mov
jecxz
lret
mov
push
shl
lret
popf
in
and
xor
add
and
addb
popf
test
sti
add
je
cltd
cmp
jae
adc
mov
mov
lock
dec
jle
sub
into
mov
push
or
stos
xchg
cmpsl
fisubrl
sbb
jno
mov
ret
push
add
jecxz
sub
and
mov
inc
jp
ds
xor
out
lock
popf
dec
lds
arpl
sub
lds
std
push
pop
sbb
in
dec
add
push
icebp
pusha
inc
pop
inc
in
dec
in
or
and
int3
gs
and
mov
ffreep
mov
test
fisttpl
push
add
dec
dec
ss
jecxz
add
dec
rcrb
pop
inc
dec
push
stos
pushf
cmp
fnstenv
faddp
dec
xchg
mov
xchg
cmpsl
repz
or
mov
dec
sbbb
sub
fbld
cmpsl
js
in
arpl
shlb
cmpb
out
xchg
dec
cmpl
sbb
test
dec
sub
and
jae
cwtl
out
aam
stc
orb
mov
dec
mov
fdivs
jnp
outsl
and
addr16
int3
in
and
cli
into
add
in
out
pop
push
imul
mov
adc
ret
jmp
pop
xor
jmp
je
pop
cmpsl
push
cld
mov
cmc
out
addl
sub
mov
xchg
and
push
rclb
sub
je
mov
sbb
repz
outsl
sbb
sbb
sti
test
mov
cmc
incb
sar
push
out
popa
addr16
ret
icebp
cmp
adc
mov
mov
lcall
jecxz
ret
popf
scas
ja
addr16
or
ret
add
sbb
or
or
inc
cwtl
jmp
lcall
subl
mov
cmpsl
aaa
xor
addl
jo
inc
sti
lret
push
mov
push
ljmp
in
mov
cltd
pop
lds
mov
or
inc
or
mov
mov
mov
adcb
add
rorb
out
pushf
push
xor
dec
mov
jno
mov
and
ljmp
shrb
cltd
xor
or
lcall
inc
hlt
ljmp
pop
cmp
lret
clc
add
inc
dec
sbb
push
and
mov
andl
int
enter
jge
fcomip
lds
inc
orl
pop
pop
pop
xchg
mov
js
pop
jns
or
int3
insb
jne
std
fcoms
push
xchg
lret
or
mov
fisubrs
test
jmp
cmp
xchg
gs
xchg
aad
add
pop
pop
mov
mov
orb
jge
xchg
jl
ja
call
out
mov
add
jl
xchg
dec
pop
or
dec
or
pop
aaa
mov
mov
rolb
fsubrp
inc
xchg
lods
cwtl
bound
imul
dec
outsl
or
mov
fisubrs
movsb
mov
lret
aas
fstp
mov
xor
sbb
xchg
or
lods
mov
in
daa
lcall
stc
sub
ret
xchg
shlb
and
push
fwait
fs
sbb
nop
addb
shlb
repz
push
roll
out
stos
sub
fs
sub
add
loope
loopne
mov
mov
addb
mov
jo
xor
and
pushf
pop
addb
push
sbb
cli
mov
stos
xor
sbb
mov
mov
cld
mov
jg
hlt
push
add
mov
push
mov
repnz
jo
insb
sub
sarb
pop
or
lcall
push
dec
dec
mov
test
mov
xor
jo
test
lahf
cmp
pop
mov
dec
jl
cli
repnz
mov
pop
aad
xchg
jne
add
lcall
outsb
movsb
pop
cmpl
adc
jb
or
pop
xchg
push
lods
jns
xor
fisubs
or
lcall
dec
jbe
popf
movsb
jecxz
pop
xchg
das
mov
push
ljmp
outsb
sbb
dec
push
mov
mov
imul
out
fs
cli
jecxz
hlt
std
lds
imul
les
shrl
and
js
sarb
jbe
add
xchg
ret
lret
adc
addr16
jae
iret
dec
lds
jmpw
mov
adc
loop
jnp
into
movsb
inc
jecxz
iret
call
add
jle,pt
jg
lcall
subl
mov
aam
or
mov
enter
xchg
hlt
aad
aas
xchg
js
shll
jmp
pop
data16
shrb
ret
push
lock
inc
pop
inc
pusha
sbbb
adc
cmp
inc
or
push
fwait
bound
pop
aaa
shrb
jbe
and
xchg
test
stos
lret
ret
pop
push
mov
nop
xchg
sti
sbb
mov
pop
loopne
dec
xchg
es
dec
dec
dec
adc
sub
loopne
inc
into
sub
jno
call
rcl
mov
nop
shl
pop
cmpsl
mov
jp
pop
inc
ret
pop
push
sbb
out
jg
clc
icebp
pop
add
out
das
sbb
sub
repz
push
pop
subl
inc
stos
pop
rorb
ret
fcmovbe
shll
jmp
ja
dec
or
test
sbb
add
mov
dec
sub
mov
lock
pop
pop
addb
repnz
jge
cmpsb
stc
sub
imul
or
xorb
xor
mov
jecxz
adc
pop
xchg
xor
push
or
add
pop
fimull
xchg
pop
insl
stos
jge
dec
adc
pop
add
gs
cltd
imul
mov
dec
lods
push
fidivrs
dec
push
dec
and
sub
enter
push
mov
fiadds
mov
imul
out
xlat
popa
add
fisubl
push
inc
cwtl
sbb
or
orb
adc
pop
dec
stos
in
sbb
jmp
jmp
gs
dec
xor
sarl
repnz
icebp
dec
pop
lret
sub
mov
inc
in
inc
outsl
daa
addr16
popf
push
add
xor
dec
mov
inc
pop
out
add
fnstenv
pop
mov
fimull
gs
cmp
adc
js
repz
mov
dec
xor
into
mov
sbb
add
push
mov
daa
inc
jge
fmulp
mov
gs
sub
and
or
xchg
imul
pop
pop
frstor
mov
adc
loop
jno
sbb
lods
shll
xchg
cmp
pushf
xchg
loop
lock
or
dec
dec
dec
mov
lods
hlt
sub
dec
or
clc
movl
in
pop
out
pop
loop
push
ficomps
dec
dec
mov
sbb
fidivs
outsl
sbb
mov
fcoms
push
movsl
repz
dec
mov
inc
fistpl
mov
jmp
cmp
gs
pop
jo
das
fisubrl
bound
lock
and
into
aad
lds
jmp
test
sbb
dec
or
sub
fcmovb
bound
icebp
pop
fiadds
xor
xchg
jecxz
loopne
pop
jge
pop
sub
and
mov
insb
push
pop
es
movsl
inc
lds
dec
outsl
lods
and
and
mov
imul
push
push
cmpl
push
jo
arpl
fwait
push
push
sbb
das
and
pop
imul
icebp
dec
into
fs
push
sub
xor
sbb
int3
jnp
lea
adc
push
jge
daa
clc
mov
cltd
add
mov
adc
dec
jmp
sbb
push
rorl
push
repz
lret
xchg
lods
out
mov
stos
scas
sahf
jb
mov
xchg
loopne
inc
loop
or
je
iret
push
add
jo
sti
push
push
jle
mov
insb
incb
iret
or
lods
or
mov
fwait
mov
imul
and
lret
and
mov
mov
dec
fimull
sarb
jo
add
pushf
mov
lock
or
lods
jb
ret
mov
daa
xchg
lods
mov
out
aad
cltd
pop
std
cmpsb
sahf
push
push
mov
mov
outsl
lds
out
jge
mov
out
into
test
push
cld
jno
hlt
push
pop
mov
pop
mov
lea
xor
sarb
cmpsl
dec
loopne
xor
fdivp
sahf
mov
inc
ret
sets
cltd
aaa
test
sar
test
div
sub
dec
call
sti
nop
aas
push
dec
sbb
mov
imull
cmc
cld
rcrl
jecxz
idivb
push
xchg
int
push
cs
subl
and
mov
aas
ja
and
mov
dec
add
insl
popa
out
std
aas
shrb
add
add
pop
mov
push
pop
pop
inc
xchg
cmc
fmuls
enter
loopne
cltd
fidivs
adc
gs
scas
lret
and
jl
adc
or
cmp
lahf
inc
sbb
gs
mov
lods
pop
sbb
lea
loop
sub
aad
mov
fstps
sub
sbb
xor
sbb
aad
jo
leave
fmul
ljmp
aad
push
lcall
in
rol
sbb
jbe
mov
aad
cld
cmp
dec
enter
frstor
stc
lods
pop
adc
repnz
fcoml
cmpsl
rorl
cs
in
aad
add
xor
shll
shlb
std
repz
rolb
jecxz
shld
sbb
inc
repnz
loop
xchg
fisubrs
xlat
jae
lahf
adc
fwait
inc
sysenter
shrb
or
stos
in
test
push
push
aam
mov
test
add
hlt
push
dec
pop
sub
les
cmp
and
push
ret
mov
and
jo
pop
lods
arpl
inc
inc
popa
mov
add
fisubrs
sub
scas
xor
testb
sub
lds
push
lahf
sub
test
add
cmp
mov
pop
daa
out
imul
xlat
icebp
inc
bound
sbb
addl
adc
adc
inc
dec
vmcall
lret
lock
xor
jae
aad
pop
xchg
jmp
mov
ficoms
inc
pop
lock
shr
dec
push
vmptrst
pop
imul
enter
push
movsl
cpuid
mov
mov
mov
add
push
mov
xchg
sbb
push
push
pop
or
push
flds
push
loopne
pushf
lret
sbb
cmc
sub
enter
pop
sbb
adc
inc
mov
and
iret
or
sub
push
fucomi
inc
js
loop
test
xchg
aam
shll
mov
in
add
sbb
cli
pop
nop
sarb
mov
mov
push
sub
or
cli
or
iret
movsl
push
cmpsb
imul
outsb
inc
mov
ljmp
les
test
inc
mov
jne
mov
and
pop
pushf
adc
or
and
mov
mov
push
or
repz
inc
cmovnp
addr16
pop
sub
movsb
pusha
jno
mov
or
cli
loopne
or
adc
outsb
xchg
pop
lock
mov
and
add
fisubrs
jb
sbb
je
data16
mov
jae
inc
sbb
fwait
js
jmp
xor
fidivrs
jnp
xchg
dec
js
popa
mov
xor
cmpsl
jmp
push
sub
or
icebp
popa
mov
std
iret
loop
fsubr
imul
in
mov
push
ds
lret
es
xor
mov
not
mov
outsl
les
cld
jbe
icebp
stos
shlb
push
mov
std
jle
mov
jo
int
imul
sahf
sub
mov
lret
mov
pop
add
int3
sub
les
stos
lods
mov
into
pop
push
push
push
adc
xchg
or
and
movsl
cli
pushf
flds
cvtpi2ps
sub
lcall
pop
adc
ljmp
pop
sub
ljmp
push
or
stos
test
jno
push
mov
lods
fdivp
or
mov
sub
pushf
pop
nop
inc
addr16
mov
pushf
inc
inc
add
fisubrl
push
pop
js
aas
ja
inc
fimuls
bound
mov
aas
mov
mov
mov
ss
and
gs
ss
add
xor
movsb
sbb
mov
push
jecxz
into
and
lret
push
push
ret
jo
and
and
cli
cmp
mov
dec
cli
test
mov
in
add
rolb
and
add
loop
ret
addl
cmp
sbb
enter
add
push
dec
enter
and
shll
mov
and
loop
jne
scas
dec
gs
sbb
inc
inc
xor
jmp
vshufps
push
jnp
cmp
push
dec
jbe
test
dec
dec
call
scas
inc
or
je
xchg
cmpsb
sti
cmc
mov
mov
popf
dec
daa
or
mov
cmp
leave
mov
mov
mov
mov
pop
in
inc
leave
aad
es
cmp
xchg
insl
dec
inc
ret
sbb
inc
or
test
shlb
gs
adcb
add
dec
sub
or
rorl
bound
inc
test
inc
mov
push
test
dec
aam
fs
nop
loop
std
cmp
loop
xchg
dec
mov
es
dec
add
fimuls
imulb
inc
popa
cwtl
outsb
gs
adc
lds
imul
xor
dec
dec
daa
inc
sbb
push
or
jecxz
and
shll
or
inc
fisttpll
mov
mov
xor
rcll
in
gs
xor
pop
daa
dec
mov
inc
fisubs
test
div
lea
scas
decl
push
jb
add
cmp
sub
mov
adc
push
lret
push
add
sub
int
dec
push
in
add
push
pop
into
jae
jb
loopne
adc
dec
ficompl
inc
and
or
sbb
es
es
repz
pop
jno
popf
test
outsb
add
dec
sub
fcmove
or
repz
xchg
dec
pop
into
ret
mov
popa
xchg
pop
jmp
sbb
jo
push
arpl
or
fisubs
es
daa
lods
enter
sub
es
mov
insl
insb
movsb
push
mov
ret
aad
inc
jns
xchg
movsb
ret
rcrb
mov
andl
ret
or
xor
lods
js
shll
and
shl
xor
lret
in
cs
sub
inc
mov
mov
xor
adc
aam
cmp
push
mov
cmp
add
and
inc
add
jno
mov
fimuls
and
or
les
scas
cmp
inc
cltd
add
shrb
in
loop
push
mov
push
enter
lds
mov
sub
sti
pushf
sbb
dec
int
stos
add
ret
rcr
inc
lea
in
mov
insb
sub
lcall
scas
jnp
adc
or
dec
enter
int3
mov
pop
dec
lock
push
rclb
pop
mov
mov
sub
insl
hlt
das
nop
test
inc
or
or
adc
jo
adc
cmc
push
fcmovne
leave
cmpsb
mov
fstpt
fcmovb
aaa
dec
rorb
lret
pop
in
cmp
popa
movsl
cmp
push
push
inc
dec
adc
out
xor
xor
subb
out
dec
scas
insl
pop
out
out
inc
je
ficoml
arpl
or
jbe
icebp
sbb
stc
inc
mov
call
push
xor
add
push
test
lds
pop
imul
or
fidivrl
js
inc
repz
in
pop
inc
cmpsb
in
inc
iret
punpcklwd
or
push
fdivr
dec
sub
push
jne
mov
and
and
cmp
pop
xchg
or
imul
rol
call
push
ret
in
fs
cwtl
pop
cmp
or
xor
jae
loop
sub
pushl
std
daa
cld
pushf
cltd
sub
fimuls
sbb
enter
jbe
xor
leave
out
ret
xor
and
pushl
call
lret
xor
or
js
xlat
out
lods
add
jnp
add
fidivs
loopne
out
call
outsb
sub
push
rol
pop
hlt
cli
std
in
sub
or
and
inc
stos
xor
push
or
push
dec
or
test
adc
inc
adc
dec
mov
jmp
jecxz
inc
push
push
dec
sub
push
xchg
into
mov
push
lods
dec
inc
loopne
jo
into
xchg
dec
pop
xor
loop
jbe
pop
or
adc
inc
out
fiadds
mov
fwait
popf
ljmp
pushf
dec
pop
dec
pusha
mov
sub
out
push
adc
dec
dec
mov
jns
in
xchg
cmp
fwait
jmp
pusha
and
and
mov
or
cmpsl
pop
mov
push
and
push
and
add
push
or
pop
shr
xor
or
aam
mov
addl
aad
jae
bound
lds
repnz
inc
jl
jo
and
lret
enter
add
xchg
ss
xchg
adc
jae
test
in
aas
jnp
mov
mov
dec
push
or
je
add
pusha
xor
lea
cmpsl
pusha
xchg
mov
test
mov
sub
inc
mul
or
fwait
push
mov
mov
out
pop
inc
clc
bound
test
sbb
mov
pop
mov
cmpsb
in
sub
popa
and
mov
sti
cmp
call
jae
adc
fsubp
lcall
and
xchg
repnz
xchg
lret
lock
js
jns
gs
imul
or
test
sbb
aaa
scas
sahf
sub
xchg
push
cmpsl
mov
loopne
sbb
cmp
xchg
or
aam
inc
dec
xor
mov
pusha
fimuls
mov
push
fs
sbb
xor
adc
in
mov
push
mov
and
test
jecxz
aas
pop
pop
pop
popaw
pop
fisttpl
cltd
fldcw
jbe
adc
stos
mov
jecxz
in
loopne
cmc
mov
out
dec
xor
es
lcall
scas
jp
lret
fiadds
in
loope
cmp
xchg
cmp
in
arpl
in
xorl
pop
ficoms
fst
pop
testb
add
in
faddl
push
data16
and
mov
jg
cltd
repnz
inc
push
dec
ret
inc
add
das
test
pushf
inc
mov
ja
push
ds
pop
pop
add
and
enter
lret
pusha
leave
lea
insl
icebp
pop
jo
dec
mov
push
inc
stos
xchg
jns
sub
lods
mov
stos
add
push
ret
test
xchg
pop
movsl
xlat
sti
or
push
adc
call
pop
cmp
mov
mov
sub
loop
inc
sti
mov
ret
and
and
in
push
pop
xchg
or
arpl
inc
aaa
adc
pop
shl
lret
ret
jg
xchg
aas
pushf
lahf
sti
mov
push
popa
push
out
shl
das
ficoms
inc
imul
dec
pop
mov
inc
int
dec
fimuls
or
movsb
aad
rcll
divl
push
mov
cmp
data16
sbb
rclb
fnsave
mov
dec
inc
stos
and
pop
out
les
ss
test
jbe
sub
pop
out
imull
or
mov
pop
and
jb
inc
cmpsl
es
dec
cmpsl
out
inc
push
fs
mov
ret
push
dec
jb
lret
dec
push
jb
push
arpl
loopne
fmull
nop
or
shrl
mov
fisubl
mov
and
cli
adc
roll
jns
jne
mov
repnz
pop
push
loopne
jge
fwait
ljmp
adc
ret
add
insb
sub
jmp
lods
cmc
sahf
dec
fdivrl
or
inc
popf
lret
pop
pusha
leave
lods
fisubs
nop
sbb
dec
cli
pop
ret
pusha
mov
in
mov
jae
inc
bound
fld
bswap
and
xchg
xlat
into
or
test
cmpsb
cmp
mov
dec
popf
rol
fwait
movsl
or
mov
push
xor
add
add
jo
insb
mov
adc
sbb
cmpsb
cmp
loop
mov
mov
imul
sub
test
jo
xchg
push
fbld
add
sbb
xchg
mov
lahf
xchg
dec
sub
inc
xchg
and
pop
pop
jo
adc
jns
iret
inc
popf
add
cltd
fldl
push
adc
jbe
cmpsl
mov
push
adc
into
fildll
cli
int
inc
adc
lds
jnp
leave
inc
jecxz
jecxz
mov
sub
je
arpl
fldl
lret
lods
outsl
push
mov
pop
cmp
lods
addl
mov
js
aaa
and
add
pop
dec
xchg
mov
into
hlt
ljmp
aam
sub
stos
test
adc
into
xor
aam
push
xor
mov
mov
xor
popf
add
andb
ret
add
lahf
inc
out
idivl
loop
mov
ljmp
push
or
inc
ljmp
es
xor
push
mov
push
aam
inc
mov
jp
cmp
arpl
aam
test
or
jbe
fiaddl
add
js
push
ret
jo
inc
iret
or
mov
pop
loope
push
scas
jae
pop
andl
mov
inc
sub
into
adc
ja
and
sahf
push
mov
repnz
lahf
mov
fildll
xor
mov
imul
nop
out
movsl
scas
sbb
cltd
pop
in
sub
enter
movsb
pop
jno
jb
call
popa
stos
inc
roll
jb
loopne
test
mov
and
xchg
or
mov
lret
aam
out
ret
in
loop
mov
xchg
or
add
iret
xor
fmull
lods
and
fstpl
adc
arpl
and
sarb
leave
cmpb
jp
jb
ret
xor
push
bound
repz
loop
cmp
fs
add
inc
cmpsl
pop
xor
lcall
jb
aaa
mov
loop
ljmp
mwait
bound
fisubrs
fcoms
jecxz
fildll
dec
fstpt
loop
or
pushf
pop
or
aaa
lods
rorb
out
clc
outsb
lcall
cmp
ds
and
movsl
push
adc
xorb
out
popa
std
mov
pusha
rcr
fisubrs
pop
leave
inc
push
aam
rorl
mov
xor
inc
lret
mov
leave
jmp
dec
loop
push
jo
rcll
adc
out
inc
into
fmul
xor
test
inc
out
into
xorb
sbb
inc
decb
xchg
movsl
add
jbe
add
mov
sar
repz
out
and
jge
pop
push
or
mov
push
adc
cmpsb
xchg
roll
mov
jecxz
sbbl
push
ljmp
out
gs
out
dec
jne
iret
mov
cmp
jno
push
xchg
int
mov
jmp
test
inc
movsb
lret
pop
scas
dec
je
pop
mov
inc
ret
inc
or
dec
mov
lock
inc
shll
movsl
dec
in
adc
dec
add
les
out
imul
jp
dec
sub
daa
jl
inc
or
sbb
sarb
lock
mov
inc
pop
add
mov
sub
inc
and
mov
cld
sub
jle
push
mov
push
test
pop
movsb
test
popf
inc
or
mov
repnz
stos
aas
and
fdivrp
cmp
mov
inc
cmpsb
mov
xor
pop
dec
test
testl
jmp
dec
nop
stc
sub
xor
cmp
fnstcw
sub
add
frstor
xor
xchg
jl
cltd
xchg
repz
mov
push
aas
mov
adc
inc
jmp
mov
inc
xchg
arpl
lea
lahf
or
adc
dec
popa
je
inc
lret
lods
test
push
shl
sbb
out
nop
in
aas
pop
in
jno
mov
sbb
lret
mov
xlat
stos
repz
repnz
int
and
shrl
movsb
jp
arpl
fwait
add
arpl
add
pop
mov
sub
jp
push
test
jo
je
xor
movsl
and
inc
jno
aaa
push
mov
xor
mov
pop
gs
mul
les
repnz
dec
insb
add
fimuls
imul
or
pop
addr16
cmp
and
or
aam
add
jne
dec
lcall
or
cmc
push
add
pusha
in
inc
dec
inc
lds
in
jecxz
mov
push
fdivr
inc
fldt
int
ficoms
sbb
push
jb
push
mov
lea
es
xchg
dec
rcll
int3
xor
in
and
loopne
les
lret
lds
inc
imul
pop
inc
dec
roll
mov
add
cltd
inc
push
pushf
add
lret
add
inc
fcoms
add
adc
or
and
xor
mov
enter
aaa
pop
inc
sti
xor
mov
cli
jnp
mov
test
lret
and
xor
mov
jge
and
popa
jae
pop
mov
fadds
mulb
decl
adc
lds
ja
adc
pop
sbb
xchg
jmp
inc
push
dec
add
int
fiadds
ror
cltd
mov
loop
or
popf
push
fiadds
xlat
icebp
cmpsb
jmp
dec
les
sbb
loope
and
sarb
xor
mov
fcom
add
adc
mov
xor
sbb
fistps
fprem
movnti
loopne
jbe
fistpll
mov
adcl
shll
jbe
xor
pop
out
shrl
adc
push
enter
aam
ret
std
shrl
or
dec
daa
and
faddl
dec
sbb
adc
jecxz
mov
test
cli
lret
dec
or
fidivs
ss
imul
xorl
and
addr16
pop
cmp
fiadds
lcall
test
add
add
cs
call
sbb
fwait
and
testb
mov
repz
lea
push
ret
leave
js
mov
addb
aaa
pop
test
ret
xchg
fsub
mov
cli
movsb
ret
lahf
mov
push
les
inc
adc
std
dec
pop
or
dec
dec
sbb
iret
das
rcrl
cli
mov
nop
lea
in
fbstp
iret
add
xor
cmpsl
mov
sbb
fstl
or
lds
jmp
mov
lret
dec
stos
and
ret
inc
dec
xchg
std
mov
test
adc
cmp
enter
dec
lods
sbb
retw
negl
inc
daa
out
xor
stc
lods
xchg
inc
push
jno
je
lahf
stos
dec
fdiv
test
xchg
jecxz
jns
jmp
roll
jae
inc
push
add
push
cmc
mov
subl
cli
or
in
pushf
data16
mov
outsb
pop
ljmp
aam
fldl
addr16
sbb
mov
mov
out
movb
into
imul
scas
mov
cmp
mov
cmp
fnsave
data16
mov
dec
sbb
repz
and
lods
sbb
and
mov
insl
add
push
ficoms
xchg
movsl
jl
mov
pusha
stos
sarb
aas
daa
mov
insl
bound
dec
leave
mov
sahf
movsbl
pop
bound
sbb
movsl
jo
mov
dec
push
jmp
xchg
inc
insb
push
add
push
rorl
icebp
add
lods
in
xor
sub
add
sbb
pinsrw
lds
int
inc
fstpl
shrl
add
adc
inc
inc
mov
xchg
add
enter
daa
jecxz
sbb
lret
pop
xorl
pop
jno
sbb
pop
push
loopne
inc
insb
cwtl
inc
les
mov
mov
ror
call
push
push
shll
adc
mov
push
rcrb
repz
dec
gs
ret
push
rcrb
frstor
fadd
pop
push
fsubrl
repz
lds
pop
fcmovnbe
sahf
sub
inc
test
mov
xchg
aad
push
mov
rcr
jecxz
push
loopne
jnp
sub
push
and
into
add
cmc
cmpsb
inc
inc
fdiv
and
fs
mov
pop
in
hlt
push
push
push
pop
lret
push
sbb
and
lds
int3
fdivs
jecxz
pop
lret
add
xor
test
mov
lea
pushf
dec
rcrl
mov
ljmp
or
movsl
inc
repnz
xor
movsl
test
dec
mov
and
lods
pushl
and
fldenv
add
mov
aas
or
add
loop
fistpll
cmp
sub
mov
jbe
loop
cmp
push
jb
cwtl
xchg
fdivp
std
jo
push
int3
push
jns
or
push
jae
pop
and
fdivl
adc
lret
ds
or
pop
mov
push
pop
adc
inc
lods
incl
or
add
imul
jmp
aas
jge
fimull
adcb
insb
inc
xor
in
inc
mov
pop
or
into
inc
pop
call
push
je
in
mov
das
pop
push
jae
ljmp
add
mov
add
stos
push
shlb
pushf
sub
cmp
mov
mov
inc
cmpsb
ret
stc
ret
and
mov
mov
mov
cwtl
fbld
mov
push
mov
lods
pusha
mov
loopne
movw
inc
lahf
arpl
shr
xchg
out
mov
idivl
or
int3
call
mov
dec
in
dec
jmp
push
movsb
pop
mov
test
or
test
jno
ret
add
das
inc
mov
xchg
ret
add
jae
jno
es
lret
lret
lods
mov
jmp
mov
add
mov
data16
mov
or
icebp
lcall
mov
add
fisttpl
pop
adc
shrl
lret
jo
outsl
add
lock
loop
adc
xchg
inc
xchg
fisubrs
mov
and
into
push
pop
push
imul
and
sbb
xor
pop
cmc
fdivrs
cmp
clc
mov
xlat
jge
inc
stc
std
sbb
sbb
imul
xchg
lcall
adc
pop
sbb
sbb
mov
mov
cmp
ficompl
adc
repnz
xor
push
ret
insb
je
add
push
sahf
or
arpl
cmp
or
cmpl
jb
mov
iret
div
inc
fimuls
dec
jge
stos
xor
lds
lret
dec
pop
les
inc
insb
xchg
cwtl
ljmp
mov
inc
inc
out
mov
je
repnz
fisubl
into
pop
or
out
popa
test
je
cltd
dec
ret
popa
test
enter
ljmp
lds
popa
xlat
dec
and
loopne
fdivrp
adc
lods
aad
movsb
fimuls
push
aas
test
stos
push
jns
sub
adc
dec
addb
int
jae
pop
js
add
mov
add
cltd
movsb
cmc
ret
mov
jecxz
sbb
nop
fst
inc
and
xor
push
cmp
sub
adc
dec
add
ss
fdivrp
dec
outsb
inc
roll
daa
cltd
inc
jp
jns
ret
repnz
lods
sub
mov
ret
and
push
daa
fsub
je
mov
xchg
cpuid
mov
and
and
insb
mov
imul
push
cmpsl
in
les
inc
out
stos
ret
rol
iret
jmp
jl
sub
in
sub
inc
cmpsl
scas
inc
cmp
inc
fimuls
mov
movsl
xor
ret
imul
cli
shl
jae
lods
mov
inc
mov
xchg
add
icebp
inc
push
repz
xor
dec
scas
ja
outsl
push
xchg
inc
sub
pop
sub
sub
xchg
sbb
or
inc
nop
imul
jno
cmp
loop
xchg
test
mov
lret
adcl
xlat
mov
mov
push
out
mov
jl
add
sub
loop
xchg
dec
xor
fsubrl
push
ds
xor
push
mov
pop
cmpsb
aas
mov
mov
push
pop
in
lods
das
femms
lret
mov
fcmovbe
shlb
daa
add
jns
rcr
test
mov
xchg
dec
mov
lods
push
pop
mov
sbb
or
mov
daa
xorb
insl
lret
xor
imul
stc
icebp
sbb
inc
addl
xchg
gs
sbb
orb
and
test
jge
in
lea
mov
es
ds
insb
pop
call
inc
stos
lret
sbb
mov
jmp
test
or
jae
stos
push
mov
leave
xchg
add
add
nop
cvtpi2ps
cli
and
mov
imul
or
popa
fisubs
in
out
mov
js
adc
and
popa
sub
ficoml
push
jae
mov
lods
add
xchg
lods
inc
jne
pusha
pusha
or
cmpsl
sbb
push
fldcw
pop
into
push
mov
inc
js
cld
sbb
rcl
mov
mov
pop
jecxz
incb
push
jb
push
jmp
loop
xchg
iret
and
nopl
mov
ret
push
fbld
mov
or
clc
rclb
shll
stc
jo
push
and
or
mov
push
inc
loopne
pushf
ficoms
rcrl
mov
add
mov
mov
fsubl
sub
psubusb
cmpsl
add
lret
jb
mov
jb
xor
mov
loop
dec
divb
addr16
in
movsb
jecxz
jl
stos
adcl
sub
fwait
jecxz
push
cmpsb
push
mov
into
in
fidivl
icebp
add
sub
inc
push
je
add
add
jb
loop
insb
lods
sub
imul
pop
xchg
add
ret
test
push
stc
jmp
xchg
push
jnp
adc
fs
sub
mov
lock
inc
pushf
jo
dec
icebp
mov
in
stos
cmpsl
sbb
arpl
mov
test
nop
or
daa
push
dec
sbb
jl
mov
les
push
aad
jp
mov
push
aas
xchg
adc
lods
xor
adcl
or
sbb
adc
subps
in
cmpsb
mov
lret
pop
and
in
xchg
adc
les
sub
aas
lods
jge
stos
mov
jmp
jp
jle
data16
and
adc
iretw
xchg
fisubrl
sub
jne
mov
repnz
mov
jb
push
fisubl
ret
jl
int
fidivrs
and
loopne
imul
lahf
mov
inc
in
leave
loop
xlat
mov
fidivrs
sub
out
inc
adc
xor
pop
pushf
fidivs
lret
adc
clc
sbb
popa
xchg
inc
push
ret
arpl
jmp
xlat
test
add
and
inc
and
xchg
fsubr
mov
push
nop
jne
cmpsb
inc
and
fsubs
int3
stos
sub
xchg
inc
adc
inc
aam
mov
inc
iret
cmp
inc
cli
sbb
nop
cmpsl
das
in
and
insl
in
xchg
addb
inc
add
add
fisubl
add
int3
inc
ret
adc
clc
cld
cld
mov
xchg
lret
icebp
imul
ficompl
out
lods
inc
inc
pop
fsts
and
aaa
jae
icebp
xor
aad
add
jg
mov
rcll
add
inc
icebp
repnz
aas
incl
pop
icebp
mov
jg
inc
jns
or
mov
fisubrs
insb
or
ret
add
movb
jmp
xlat
jo
clts
and
mov
rorb
jb
xor
incl
cmc
push
lret
cmp
pusha
adc
frstor
add
sbb
ffree
inc
dec
into
es
add
add
sbb
fiadds
out
push
and
cmp
adc
push
mov
cld
lret
rcr
xor
addb
cmp
shl
sbb
xor
cmpsb
inc
jbe
repnz
cs
cmp
ret
movsl
inc
inc
inc
inc
dec
icebp
icebp
and
lret
cmp
adc
inc
into
enter
push
mov
inc
lret
lods
push
add
gs
xchg
push
dec
push
dec
ficomps
aas
jl
adc
dec
adcb
jo
add
sbb
fbld
add
sub
out
je
ljmp
adc
dec
packuswb
lock
mov
xchg
ss
sbb
pusha
ljmp
test
mov
inc
xchg
sub
popa
sub
inc
les
jae
fcoml
js
fisttpll
adc
cmp
fsubrs
cmp
inc
jp
sbb
cli
lea
mov
fsubs
sbb
dec
sub
xchg
or
test
int3
push
mov
out
xor
jge
push
iret
aam
or
pop
adc
xchg
jmp
insl
adc
mov
vpinsrw
stos
aas
std
lods
sub
and
loope
mov
repnz
insb
enter
xor
mov
push
jmp
push
nop
dec
lcall
call
inc
jmp
mov
xchg
cmp
fdivrl
push
ljmp
mov
fisttpll
pushf
fisubrl
das
lock
pop
enter
mov
arpl
mov
pop
mov
lods
rcl
iret
push
mov
repnz
jmp
mov
xor
stos
ret
rcl
mov
fisubrs
in
push
xorb
push
push
pop
addr16
arpl
imul
stos
inc
fdivrs
pushf
push
xchg
jne
mov
xor
fisttpll
loop
ficomps
fldenv
adc
rorl
lock
pop
add
add
repnz
inc
andb
push
sub
loop
add
sub
roll
out
dec
sarl
add
pushf
dec
fdivrl
std
mov
and
cmpsb
push
jecxz
cmpsl
inc
xor
jbe
add
push
fimuls
sub
mov
shlb
mov
inc
shrl
dec
cmp
int
jo
lsl
dec
fcompl
push
mov
mov
sbb
and
xchg
rolb
jo
push
popf
and
lcall
cli
mov
mov
out
mov
add
je
lahf
jo
arpl
dec
lret
cmp
and
fs
adc
js
push
adc
push
sub
test
jo
imul
out
repnz
xor
orl
hlt
pushf
ss
out
test
test
dec
pusha
loop
sbb
and
call
sub
out
pop
loop
sub
sub
adc
cmp
fldt
push
aad
jmp
sbb
fidivs
xor
sbb
dec
dec
jo
push
test
mov
outsb
push
inc
push
pop
popa
xchg
stos
and
push
imul
push
testb
cwtl
cli
adc
hlt
leave
sub
mov
popf
xorl
push
data16
leave
inc
fucomp
lret
mov
mov
sahf
dec
loopne
add
icebp
add
fwait
dec
in
inc
inc
sbb
aas
xchg
je
call
inc
push
pusha
jne
enter
dec
movsl
movsl
mov
mov
push
push
shr
mov
push
mov
lods
cltd
daa
ret
pop
add
xchg
icebp
push
loopne
mov
jns
push
movb
cmp
xchg
rcl
pop
cmpsl
ficomps
mov
repnz
cmc
outsl
enter
shrb
testl
shlb
stos
fdivl
bound
xor
mov
icebp
jno
stos
and
wrmsr
jo
xor
test
arpl
lret
popa
pop
outsl
lret
in
sahf
xchg
mov
or
cmpsb
cld
movsl
or
stos
xor
mov
or
shrb
cmp
push
je
int3
daa
mov
inc
addr16
xchg
jecxz
filds
daa
dec
lea
shlb
mov
ja
or
xor
inc
movsb
sbb
nop
pop
test
in
icebp
xchg
das
das
ret
sbb
pushf
fs
dec
rolb
cmp
fstp
pop
push
repz
adc
xchg
repnz
xchg
mov
xchg
add
std
in
adc
cmp
mov
in
aad
and
mov
sub
leave
ds
cmp
sbb
pop
fisubs
adc
orb
push
or
or
in
jmp
sub
inc
stc
cmp
push
pop
or
push
mov
jbe
fimuls
repnz
and
dec
ljmp
int
or
out
mov
outsb
rclb
adcl
iret
pop
cmp
mov
inc
add
and
inc
rcrb
sbb
or
jo
jno
inc
lret
popf
xchg
inc
pop
sbb
inc
ret
icebp
inc
add
addb
push
pop
pop
push
add
lods
in
es
ret
cmp
and
lods
daa
add
jge
rolb
fidivrl
dec
movsl
push
cltd
lret
jae
push
dec
arpl
push
add
jne
pop
popa
stos
movsb
mov
aaa
and
push
int3
repnz
sub
push
or
rorb
ret
fstpt
rcl
scas
sub
push
into
aam
jne
cmp
cmpsb
popa
bound
mov
jge
or
jge
fwait
pop
in
out
in
rolb
aas
jl
push
xchg
pop
add
mov
sub
or
xor
cmpl
mov
cs
icebp
sub
xchg
iret
orb
pop
mov
xchg
push
jb
mov
mov
mov
cmp
cmpsb
iret
push
xchg
push
scas
stc
and
daa
push
daa
in
xchg
lahf
or
notb
sbb
rcrl
mov
fwait
dec
fidivrl
cltd
ret
xor
jg
xor
out
dec
adc
cmpsb
pop
xchg
movsl
ret
or
out
stos
cltd
fisttpll
leave
xchg
fldl
mov
les
mov
fsubrs
popf
and
rcr
pop
jmp
sti
jo
test
cmpsl
aas
dec
jl
iret
mov
loope
inc
push
and
lar
mov
push
arpl
aas
sbb
and
repz
cmpsb
rol
ret
in
aam
dec
add
out
push
js
popa
pop
mov
sub
shrb
xor
push
jb
xlat
imul
mov
pop
pop
pop
in
rolb
testb
aam
push
sub
aad
fsubrl
out
je
add
mov
jmp
std
into
inc
jecxz
movsb
mov
leave
jo
aaa
dec
sub
scas
iret
fadds
cmp
addr16
sub
lods
repnz
les
and
repnz
stc
imul
jo
jmp
mov
mov
jmp
outsb
es
add
sbbl
and
add
xor
cmpsb
cmp
mov
push
js
mull
adc
sbb
insb
and
xor
jge
jmp
fdivrp
cmp
adc
ret
arpl
pushf
sbb
pop
dec
ret
push
and
xchg
in
addr16
jge
push
insl
daa
pop
push
cmp
pop
add
cmp
lds
add
shl
inc
addb
dec
push
mov
sub
push
cs
lods
mov
pop
pop
aas
add
enter
push
mov
sarl
mov
iret
std
push
add
inc
and
xor
loop
int3
xor
loop
and
add
idiv
shll
clc
xlat
leave
ja
xlat
pop
mov
ret
fcoml
push
push
je
mov
jecxz
mov
outsb
call
push
movsl
dec
enter
and
shll
roll
gs
les
adc
les
sub
loope
dec
xor
cld
rorb
or
sub
add
pushaw
cmp
adc
jnp
add
mov
xchg
ret
fiadds
jae
xor
xor
xchg
pop
mov
adc
popf
scas
in
scas
push
in
lods
icebp
push
add
out
fstpt
push
jns
or
jmp
sarl
sahf
push
inc
pop
repnz
push
sti
gs
add
aam
add
adc
mov
fsubl
lret
shr
sti
rorl
pop
popf
sub
adc
add
mov
divb
movsb
pop
in
ret
mov
jno
inc
mov
push
add
dec
in
pop
jecxz
arpl
jae
pop
sub
sbb
inc
jb
inc
out
or
sbb
xor
in
sti
nop
dec
ljmp
push
cmp
sub
fucomp
out
out
lods
cmp
xor
xor
test
mov
sbb
ret
jbe
out
sarl
xor
add
rcl
push
push
popa
pop
stos
lret
mov
jae
or
or
add
rorb
pop
push
not
mov
dec
cmpsl
inc
or
or
cld
mov
adc
setbe
and
daa
sbb
push
fdivr
xchg
sub
or
mov
in
push
inc
add
push
push
ret
mov
loop
aas
jbe
mov
push
dec
xor
lea
push
add
push
in
jmp
push
jae
cmc
add
jb
in
cmp
inc
jo
and
jmp
aam
push
sbbl
hlt
repz
mov
mov
lds
push
mov
in
mov
cltd
std
inc
lcall
cmpsb
popf
fidivrl
jbe
aaa
inc
dec
fisubl
or
mov
cmpsl
repnz
xlat
cmpsl
incb
notl
mov
adc
popa
pushf
rorl
lahf
pop
mov
fmuls
xor
fsub
cmp
push
pop
cli
inc
fnstsw
fldl
mov
fistpl
jo
sub
sbb
hlt
mov
movsb
pop
outsb
inc
fldl
xchg
insb
pop
xchg
add
aas
in
push
fwait
rol
iret
inc
push
outsl
pop
insb
stos
mov
mov
inc
sub
sbb
push
stos
xlat
out
adc
rorl
xor
sbb
add
movsb
lahf
cmp
sub
lea
dec
sbb
fcmovnb
scas
push
les
xor
mov
pop
aad
in
push
test
jmp
mov
lds
mov
ljmp
mov
jae
jns
imul
lods
ret
xlat
out
sub
call
dec
add
dec
cmc
insb
inc
out
push
mov
pop
fs
popf
jno
lods
xor
ficomps
jae
pop
add
fstps
popf
pushf
out
inc
cmp
fucomp
and
js
test
mov
xchg
aas
lret
cld
addl
xor
and
and
ljmp
jge
int3
repz
mov
ret
xor
cld
jae
das
rol
fs
call
loopne
mov
dec
lret
cmpsb
in
pop
or
data16
or
repnz
sbb
rorl
jae
xor
dec
cmp
pop
sub
jp
mov
push
test
pop
or
jb
ret
adc
and
movsl
inc
push
outsb
int3
xchg
add
xor
mov
insb
or
push
jnp
cs
ret
in
lret
inc
sahf
call
inc
jne
mov
jnp
jmp
adc
hlt
mov
or
fists
aas
pop
adc
adc
arpl
adc
push
loop
stc
loop
xchg
pop
and
clc
push
subl
fstpl
mov
xchg
mov
stos
jae
pop
mov
sub
pop
jno
lods
xchg
jmp
or
pop
jo
xor
push
imul
outsl
or
add
hlt
stc
ljmp
adc
inc
lods
ret
cmp
inc
popa
mov
push
dec
mov
jns
out
adc
idivl
aam
mov
push
pop
daa
sbb
test
or
sbb
ret
or
pop
js
adcb
or
mov
xor
mov
sbb
aas
call
pop
add
cmpsb
jo
mov
int
aas
sbb
cmpsb
stos
loopne
inc
out
jno
test
adc
sbb
xchg
loopne
sbb
ja
adc
loope
repnz
mov
fsubrp
lods
add
mov
lcall
or
int3
or
sbb
xchg
and
or
ret
lock
pop
inc
stos
imul
mov
out
sub
dec
lods
nop
add
pop
test
xchg
sub
push
repnz
jne
cs
lcall
dec
pop
sahf
xor
or
pop
test
gs
or
pushf
and
fimuls
mov
push
out
dec
lock
sub
cmpsb
in
sub
or
push
int
pusha
repnz
mov
shlb
scas
mov
iret
push
stos
int3
pop
mov
add
ret
lods
jg
add
jp
and
adc
popa
jmp
add
jb
add
inc
leave
out
repnz
sub
arpl
scas
mov
pop
push
jecxz
call
in
jmp
inc
loopne
inc
daa
pop
in
icebp
push
sub
inc
lds
das
xlat
nop
movsl
fs
cmpsl
sub
shll
pavgw
jg
sub
aas
cmpl
cltd
es
inc
in
loopne
dec
aaa
aad
push
mov
pavgw
cmp
loopne
mulps
int3
inc
icebp
mov
push
or
pop
or
jl
das
add
jle
pop
adcb
and
add
or
movsl
dec
cmpsl
mov
adc
in
inc
sbb
xchg
fwait
leave
adc
pop
inc
dec
mov
mov
or
inc
in
push
inc
push
test
and
pop
mov
and
xchg
lret
les
int3
rorb
bound
addr16
add
dec
roll
mov
movsl
lods
mov
mov
lods
inc
xchg
push
inc
test
test
movsl
cmpsb
pop
fldcw
arpl
mov
outsl
sarl
fistpl
inc
dec
test
cs
xor
and
cld
arpl
and
and
push
cs
lea
hlt
daa
fdivs
xchg
sbb
je
sbb
or
lock
mov
mov
mov
mov
rol
loop
mov
les
faddl
push
mov
pop
fisttpl
mov
pop
xor
hlt
adc
xchg
push
loope
repnz
inc
jge
pusha
pop
sub
push
int3
lret
push
and
cmp
mov
push
push
loopne
sub
data16
sbb
outsb
les
stos
imul
mov
out
popa
jo
mov
ljmp
lds
outsb
lods
add
inc
sahf
mov
mov
adc
sarb
test
iret
adc
pop
aas
pop
mov
cmpsl
cmp
pop
jle
mov
adc
fiaddl
bnd
sub
mov
xor
shlb
ss
xor
xor
shl
inc
into
fwait
repnz
repz
rorb
outsb
movl
mov
mov
xchg
cld
push
loop
ret
leave
outsl
mov
jp
test
or
jns
in
cmpsb
or
sub
and
popa
leave
stos
jmp
mov
xchg
mov
loopne
push
shlb
fildll
jmp
fs
stos
cmp
call
push
sbb
pusha
rolb
mov
fisubs
ret
into
dec
ja
and
aaa
jbe
fwait
sbb
cmp
insl
pop
stc
fucom
mov
iret
jno
xor
push
dec
les
pop
jb
xchg
fbstp
cmp
call
mov
into
inc
dec
lods
push
push
push
adc
push
test
loop
fisubrs
mov
adc
lods
xchg
notl
arpl
push
add
dec
sbb
dec
call
shr
jns
xor
mov
xchg
xorl
jbe
jge
push
out
ror
ret
psllq
fadds
call
sub
cmp
mov
sub
push
xchg
add
sub
icebp
mov
call
lret
test
xchg
jae
add
mov
jle
pushf
jo
ret
adcb
roll
hlt
sub
mov
icebp
call
ret
cltd
lret
popf
data16
push
out
xor
lcall
push
xchg
push
and
ret
dec
jb
sub
jb
inc
inc
xor
pop
push
fcomi
xchg
dec
mov
jae
sub
adc
aaa
and
loope
popa
xchg
lods
xor
push
fwait
lods
ror
adc
aad
dec
jmp
xchg
fmuls
gs
xchg
in
inc
jmp
cli
sub
add
fldt
popa
icebp
and
das
sbb
inc
add
repnz
les
jmp
pop
pop
sbb
jp
cmp
sbb
push
mov
inc
mov
roll
xor
data16
push
jns
stc
repnz
sub
xchg
outsl
mov
add
sahf
mov
xorl
or
vpsrld
fsubrl
pop
nop
addr16
add
cli
or
shlb
aaa
test
imul
or
loop
push
cmpsb
add
adc
sub
xchg
addb
lock
in
je
adc
pop
mov
xor
jl
lock
push
lods
push
rclb
ret
fs
sub
repnz
nop
lret
pop
pop
lds
lret
neg
fidivrl
sub
fisttps
lods
leave
xor
lock
fidivrs
addb
mov
lods
lods
or
lods
jp
add
not
add
lods
test
add
xor
mov
lods
out
scas
repz
push
shl
add
jns
jg
jbe
jbe
hlt
sbb
mov
lods
sbb
cmpsb
aaa
icebp
aaa
les
rclb
jecxz
aas
fistpl
mov
pop
aam
jmp
pop
xor
mov
in
xorb
sub
push
cld
shl
mov
and
lcall
dec
movl
add
mov
stos
jo
mov
repz
fs
insb
cmpsl
pop
sbb
je
jb
jl
fnstenv
mov
sub
mov
test
loope
and
mov
sub
jecxz
jno
cmp
imul
rol
or
push
fwait
sbb
or
and
xchg
sub
push
dec
out
loopne
or
mov
cmp
pop
data16
pushf
mov
jb
clc
arpl
mov
jp
cmpsl
lods
add
test
jge
push
and
mov
out
adc
lock
outsb
lret
sbb
shrl
out
adc
dec
call
aas
cwtl
mov
add
js
daa
sub
mov
push
es
cld
or
fiadds
cwtl
ljmp
push
scas
dec
add
inc
shrl
adc
push
lods
mov
pop
stc
into
int3
add
add
cwtl
pop
sub
out
sarl
dec
push
xor
dec
push
add
mov
inc
movsb
push
xlat
inc
or
adc
cmp
call
lds
sub
lods
iret
into
mov
les
insb
mov
dec
mov
movb
scas
mov
aam
shlb
push
popf
ret
and
popa
adc
push
dec
pushf
shrl
push
fisttpl
orb
lcall
lea
xchg
xchg
rcll
sub
mov
sub
mov
stos
fstp
cmp
loopne
pop
and
sarl
sub
or
add
sbb
js
mov
jge
roll
or
mov
push
add
cmp
adc
jae
push
je
sbb
or
arpl
leave
call
jno
push
xorl
fidivs
add
test
adc
jg
test
negb
arpl
add
mov
adc
in
jns
xchg
lret
and
lock
repnz
add
sub
fisubrs
xchg
pop
mov
pop
faddl
sub
pop
jnp
clc
and
mov
xor
ja
mov
test
sub
xchg
lods
cmp
xor
into
int3
insb
lret
stos
push
lea
int3
lea
pusha
mov
dec
mov
lahf
cmp
fsubl
fidivl
xchg
mov
dec
lds
pusha
mov
ljmp
add
mov
or
dec
lods
sbb
iret
outsl
loop
mov
fcompl
repnz
call
cmp
popa
jae
or
pop
inc
push
jle
jo
push
es
sbb
xlat
jns
cmp
je
sbb
test
lods
inc
pop
aad
jnp
lods
dec
pusha
fcompl
das
stc
push
aam
mov
push
jnp
loopne
lds
sbb
adc
jo
sub
lock
dec
and
ljmp
pushf
jl
stc
lret
fistl
mov
lret
lds
loop
pop
jle
addr16
loop
mov
lods
repz
mov
call
xor
xor
lock
loop
les
or
loop
cmp
ret
cld
test
inc
or
xorl
push
aas
sbb
jno
pop
je
push
sbb
aas
cmc
int3
outsb
leave
pop
push
decb
pop
jl
jmp
pop
cld
lahf
push
cmpsb
jge
push
icebp
xchg
adc
inc
fisubl
inc
pushf
inc
mov
sarl
push
in
inc
xchg
add
punpckldq
jecxz
adcl
jmp
or
mov
in
arpl
pushw
repz
mov
sub
arpl
push
cmpsb
sub
jmp
inc
adc
lret
jge
jo
test
ret
rorb
jno
pop
adc
pop
lcall
sbb
inc
jmp
in
inc
into
mov
rorl
leave
mov
idivb
mov
popa
test
dec
fildll
lret
mov
jge
inc
dec
lods
sub
ret
jmp
stos
or
les
fcmovnb
mov
mov
and
lret
dec
sub
pop
sbb
cmp
hlt
imul
jo
cmc
jg
ljmp
pop
cmp
fsubs
dec
mov
fs
out
aas
cmp
in
jbe
xchg
sub
or
mov
or
scas
arpl
cmc
inc
mov
mov
pop
cmpsb
rcrb
jp
aam
into
fildll
pop
leave
add
xchg
fld
mov
enter
fcmovbe
jl
movsl
inc
mov
sarl
dec
arpl
pop
repz
popa
xchg
or
scas
mov
addr16
fwait
icebp
out
popa
out
andl
push
int3
frstor
inc
lods
addr16
jno
push
adc
pop
adc
mov
and
in
cltd
push
fdivrp
jb
mov
xor
add
sub
sbb
stc
pop
jbe
pop
mov
push
jbe
or
out
inc
xchg
cwtl
xchg
or
popf
add
or
mov
ficomps
pop
inc
aaa
pop
into
mov
popf
mov
sbb
dec
fs
in
pop
jo
jae
jae
push
sub
shlb
inc
dec
adc
ljmp
mov
leave
shrb
sbb
pop
mov
out
xchg
push
mov
and
mov
pusha
lds
repz
fbld
movsb
notb
push
lret
push
inc
inc
les
xchg
xchg
push
data16
popa
jp
adc
fcoms
mov
inc
jg
mov
jne
ret
popa
mov
and
fisubs
dec
jmp
jnp
insl
and
jmp
dec
or
jae
data16
inc
jbe
fimuls
inc
add
inc
add
mov
cmp
push
inc
dec
mov
repz
aas
lahf
or
dec
loopne
mov
inc
sub
cmpsl
mov
andb
repnz
add
faddl
pop
loop
ffree
mov
cmp
push
jecxz
pop
inc
pop
cs
es
movsb
addr16
mov
cmp
stos
arpl
push
mov
out
mov
std
and
repnz
and
cwtl
rol
arpl
inc
aam
inc
or
dec
mov
mov
mov
push
and
adc
inc
dec
pmaxsw
orb
inc
loopne
lret
enter
mov
dec
push
adc
in
or
loopne
cmovb
data16
sub
out
in
xor
stc
mov
jge
jne
jno
pop
insl
push
ss
jne
dec
adc
inc
cmp
in
sub
sub
and
sbb
jno
pop
dec
ret
aas
adc
add
mov
sbb
xchg
aam
xchg
loop
mov
imul
enter
gs
dec
ret
jo
test
sub
ret
xlat
data16
mulb
adc
mov
inc
inc
scas
or
dec
and
imul
dec
pop
xor
imul
dec
xlat
insl
lcall
or
jo
fnstcw
mov
fidivrs
test
xchg
push
movsl
fidivrl
bound
push
repz
jb
mov
es
out
aas
push
into
or
outsb
in
add
hlt
lea
push
loop
push
jo
xchg
pop
sub
inc
add
repz
jae
xchg
mov
into
xchg
mov
adc
lock
ret
pop
mov
or
cmp
lret
mov
lret
jae
inc
jmp
jne
cmp
jecxz
test
lods
dec
bound
addr16
push
pushf
xchg
push
add
ret
push
lea
mov
xchg
aaa
and
xchg
cmpsb
mov
and
cwtl
xchg
test
fcomip
xor
xor
repnz
or
pop
jo
test
rorb
dec
aaa
mov
lret
out
lds
pop
add
fcompp
sub
je
mov
fmull
sbb
push
in
fnsave
jmp
stc
dec
daa
ret
adc
bound
ret
sarl
pop
add
pop
in
out
test
andl
fisubs
mov
ret
inc
ret
xor
in
lock
decb
test
cmp
and
inc
rcrb
dec
adc
push
mov
or
dec
stc
xchg
test
and
adc
mov
bnd
jecxz
lods
mov
pop
outsb
pop
or
and
add
or
pop
jne
mov
sbb
push
or
mov
test
addr16
mov
mov
cmp
rorl
add
push
ret
push
insb
pop
loop
jae
loope
or
fisubs
lret
sti
mov
inc
dec
dec
inc
aad
ret
fiadds
xchg
icebp
aas
push
sbb
stc
mov
mov
insl
out
leave
mov
and
loopne
movb
in
outsb
inc
loop
es
adc
lods
ja
add
fiadds
ret
mov
jecxz
mov
ret
imul
push
add
push
daa
inc
push
or
mov
fisubrs
adcb
inc
xchg
mov
sub
pop
dec
fwait
pusha
xor
sbb
loop
sub
cmpsl
shlb
aas
cmc
repz
cmp
out
int
dec
or
lds
aad
ret
lock
mov
mov
fldl
lock
aaa
push
dec
jmp
lret
shr
inc
shll
or
push
mov
ljmp
subb
shr
pusha
cmpsb
bound
jecxz
pop
in
or
fmull
xchg
xor
ret
adc
or
sub
and
and
xchg
ss
push
sti
add
dec
add
push
add
lcall
push
imul
adc
test
adc
and
jmp
push
jns
subb
fcmove
dec
loopne
and
popa
pop
push
and
inc
bound
or
dec
fsts
mov
mov
in
xchg
and
imul
pop
bound
hlt
test
inc
inc
pop
stos
bound
and
test
out
jge
add
push
mov
popf
inc
push
mov
repnz
lret
xchg
negl
sbb
sub
bound
jmp
shll
lret
std
mov
data16
iret
inc
adc
add
leave
stc
lods
push
add
addr16
sbb
adc
dec
shlb
cli
out
mov
loopne
mov
add
inc
add
das
aas
jmp
frstor
in
push
and
cmpsb
bnd
fisttpll
idivl
add
sbb
xorb
inc
pusha
add
repnz
ja
sti
fbld
or
jecxz
mov
ret
cmp
or
jb
in
jp
xorb
add
mov
in
sbb
jg
lock
inc
lcall
iret
mov
adc
inc
add
pop
mov
test
sbb
out
inc
inc
lock
shrl
xchg
lods
je
sub
inc
inc
pop
bswap
xchg
enter
daa
or
call
inc
push
sbb
inc
les
mov
bnd
aam
mov
dec
imull
cmp
add
jo
cld
push
ret
leave
sub
mov
adc
xchg
jmp
out
aam
aas
fidivl
lods
repnz
rcrb
aam
ret
mov
mov
lea
sbb
fs
push
add
stc
gs
xor
sbb
sbb
and
mov
xchg
cmp
push
xchg
dec
icebp
popa
lret
xor
pop
inc
aas
mov
push
mov
shll
call
jns
fldt
jne
xchg
jmp
pop
popa
push
lea
jbe
inc
pop
movsb
adc
cmp
jne
pushf
sub
cli
jo
push
adc
nop
push
into
mov
movsb
fwait
divb
shrb
pop
mov
shll
inc
xor
ja
sub
paddusb
ja
sbb
aas
cmp
jle
or
cli
ljmp
jb
xor
fs
test
aad
xchg
test
cmp
xchg
push
push
jmp
cli
mov
mov
add
aas
mov
add
negb
and
adc
orb
fisubl
mov
sub
dec
loopne
int3
rorb
popa
subl
or
cmpsl
or
call
lret
lret
inc
fisubrs
push
fwait
mov
pop
ret
add
daa
fidivl
sbb
les
js
mov
inc
std
ret
xchg
paddw
dec
mov
ljmp
xor
add
cmpsb
daa
lcall
or
add
loopne
repnz
jmp
ljmp
adc
jmp
loop
add
roll
aas
mov
dec
mov
js
mov
arpl
ret
roll
in
sub
cmp
cmc
test
shr
push
dec
cmpsl
adc
gs
cmpsb
ret
or
lret
loopne
inc
jl
push
push
fmul
adc
loop
fstl
mov
jae
call
ret
divl
mov
inc
sub
cmp
outsl
scas
add
dec
or
adc
mov
icebp
cld
inc
daa
add
pushf
cmp
cwtl
push
add
fmulp
jnp
fisttpll
pop
pop
or
pop
push
ret
pop
push
filds
inc
xchg
xchg
xchg
scas
inc
fimuls
loopne
push
inc
pusha
cmp
dec
aam
sti
or
xchg
inc
pop
mov
hlt
iret
jne
dec
cmpsl
push
dec
sbb
out
bound
ds
dec
inc
aas
lods
outsl
test
mov
sbb
gs
adc
adc
jno
pushl
dec
cmp
jl
cld
xor
pop
mov
scas
rorl
xor
fwait
dec
imul
jp
push
dec
shrl
add
insb
lcall
and
mov
arpl
ds
aas
bound
int
inc
adc
dec
insb
test
sub
xor
mov
fiadds
out
aas
cmpsb
fmuls
dec
sbb
mov
sarb
xchg
into
push
fstp
js,pn
mov
into
sub
mov
into
dec
mov
mov
int
or
repz
ret
ret
insw
mov
dec
outsb
inc
push
js
jo
pop
ja
xor
and
xchg
cli
inc
repnz
jl
jnp
or
inc
roll
adc
jo
push
dec
jo
out
mov
lea
sub
and
and
and
push
dec
pop
sbb
mov
aaa
inc
mov
fdivrl
fisttpll
add
push
inc
add
xchg
mov
mov
sbb
add
cmp
js
outsl
mov
out
mov
ret
rorb
imul
push
or
push
sbb
xchg
icebp
test
jmp
imul
xor
jecxz
movsb
aas
pop
sub
sbb
jmp
pop
out
insb
pop
inc
jb
push
pop
or
out
push
dec
mov
loopne
mov
outsb
ret
xor
jo
cmp
xchg
xlat
cmp
scas
ret
dec
dec
push
mov
push
dec
add
add
add
jl
sub
roll
cmp
fidivs
inc
icebp
xchg
les
xchg
mov
jbe
jae
push
insb
insb
andl
repz
inc
sbb
push
xorl
mov
lret
test
cli
adc
mov
jno
fcoms
sub
add
mov
sbb
fnstcw
cmp
dec
cmp
mov
movsb
jmp
mov
aas
jmp
mov
pop
or
xchg
push
stc
xor
cltd
or
ret
frstor
lods
jno
jmp
addr16
dec
jae
into
aad
mov
in
mov
xor
jp
sub
inc
add
add
in
jae
cmovs
push
cs
push
mov
sbb
pop
dec
cli
out
popf
push
addr16
je
mov
cld
or
fidivrs
fmull
pop
clc
adc
mov
inc
or
jecxz
out
aam
and
jns
or
cli
sub
ljmp
inc
fisubs
xor
or
xor
add
inc
add
fmul
stc
and
test
pop
cli
insb
add
adc
ljmp
inc
iret
ret
outsl
fldenv
add
xchg
aaa
mov
sbb
or
mov
imul
pop
fisttpl
cmp
shll
icebp
cmp
push
adc
pop
adc
ficompl
dec
mov
push
xchg
subb
xchg
lds
repnz
adc
les
int3
mov
adc
movsb
rep
inc
and
pop
fists
inc
fidivs
aaa
aam
stc
cmp
hlt
ljmp
icebp
add
adc
sbb
js
sbb
pop
out
pop
and
lods
xchg
ret
add
push
es
dec
ret
adcl
pop
inc
push
ret
push
cmp
arpl
xchg
pop
sahf
out
xchg
inc
jo
mov
jge
xchg
cmp
insb
mov
sbbl
repnz
ret
inc
lret
lret
test
frstor
jp
add
jbe
inc
aas
call
shlb
ret
test
dec
ja
lret
pop
jae
and
jo
movnti
sub
dec
fwait
pcmpgtb
push
leave
repz
out
int3
adc
aas
xlat
or
or
je
mov
xchg
repnz
inc
mov
lret
test
ret
call
popf
and
inc
fimuls
cmp
mov
sbb
aas
dec
inc
inc
repnz
pop
xor
mov
mov
add
mov
into
jg
inc
pop
add
add
inc
ret
movsl
dec
mov
adc
stc
lret
dec
repz
fiadds
pop
lds
repnz
jb
xor
dec
inc
xchg
dec
out
cmp
lds
in
pop
add
out
ss
push
jmp
adc
cmp
mov
mov
push
mov
sub
js
sbb
push
outsb
xchg
inc
sbb
daa
in
xor
cmp
push
xchg
adc
ficoml
ficoms
jae
pop
sub
cmpsb
stos
xchg
xchg
inc
cmp
out
mov
popa
cmp
pop
dec
push
into
addr16
mov
push
in
in
in
divb
stos
add
call
popf
insb
xor
mov
pop
xchg
aaa
cli
popf
fwait
insb
shrl
lret
mov
jecxz
inc
pop
fadd
ret
pop
pop
jo
push
mov
enter
inc
ss
test
push
mov
push
loopne
cmp
ljmp
push
mov
lret
ficoms
das
xor
sbb
lret
ljmp
add
push
mov
sahf
ret
es
aaa
inc
mov
add
or
jecxz
mov
lods
shlb
scas
lret
mov
ret
push
aas
mov
pop
adc
push
lcall
mov
cmp
lret
mov
mov
or
fstpl
fdivrl
mov
or
dec
dec
inc
fsubr
lods
mov
pop
js
ret
dec
xor
lret
repz
pop
xor
std
pop
and
rcl
push
insb
mov
popf
iret
jmp
cs
and
jae
adc
push
js
sar
loopne
inc
shl
ret
dec
movsl
imul
out
dec
push
jmp
pop
test
adc
ficomps
add
cld
sbb
daa
cltd
out
call
imul
mov
inc
or
or
rcrl
jnp
sbb
cmpsl
loopne
nop
and
and
ret
dec
loop
jae
aad
in
mov
in
jmp
jnp
xchg
loop
orl
addl
xchg
adc
or
xor
sub
fisttps
cs
adc
xchg
and
les
mov
push
or
fimull
mov
stos
cltd
mov
mov
and
lcallw
hlt
rolb
ror
in
movsb
jg
xchg
mov
inc
and
lret
mov
add
lret
adcb
por
shlb
sub
xor
pop
fisubrs
out
pop
pop
xor
mov
or
imul
addr16
inc
pushf
leave
push
mov
jl
pop
push
or
ror
repz
add
rolb
and
jg
pop
data16
pop
ret
ret
sub
fdivs
outsw
lahf
push
orb
dec
mov
sbb
mov
xor
xchg
outsb
int
jnp
xchg
shl
roll
jne
mov
jp
jmp
jae
sub
jne
xchg
dec
and
ror
inc
sub
mov
adc
add
jns
rcr
mov
lret
das
inc
pop
sub
fs
mov
faddl
xchg
insl
ret
xchg
mov
xchg
arpl
lods
or
sti
mov
or
dec
das
leave
mov
jno
jns
out
dec
add
pop
lret
mov
aas
dec
loop
sub
inc
ret
push
jae
inc
mov
and
pushf
sbb
jnp
dec
adc
fadds
jne
push
xchg
or
mov
imul
lds
lods
jae
ret
jnp
dec
add
dec
mov
adc
andb
and
scas
divl
mov
xchg
sub
cmc
insb
adc
insb
ret
xchg
ficoms
test
pop
clc
mov
push
movsl
int3
mov
push
inc
pushf
js
jae
add
sbb
xchg
add
loopne
repnz
xor
pop
pop
mov
scas
cli
clc
int3
in
cmovo
shlb
inc
lods
xor
das
std
xchg
das
cmp
dec
pop
call
out
jbe
aad
lea
add
fmulp
pop
les
or
jae
leave
fidivl
mov
pop
push
fildl
xchg
movsl
nop
xchg
aad
movsb
fwait
and
arpl
out
das
notl
stos
xor
push
sub
xchg
lret
insb
imul
sub
pop
mov
ret
xchg
popf
sbb
jno
lock
or
addr16
pop
cmp
sahf
mov
enter
clc
cli
pop
add
enter
out
mov
mov
mov
shll
xor
lods
add
out
test
xchg
sub
dec
xlat
fistl
iret
mov
dec
pop
inc
xchg
shll
adc
mov
ficomps
add
pop
gs
mov
fnstsw
or
call
inc
xor
data16
xchg
jmp
mov
in
mov
gs
mov
aas
lahf
cmp
les
jb
icebp
rorb
aam
jo
sbb
mov
in
out
push
out
rorl
decb
adc
sarb
fimuls
pusha
pop
cmp
add
clc
jl
pop
mov
add
mov
mov
aas
push
mov
push
sarl
adc
push
cmpsl
mov
mov
or
daa
inc
mov
and
sbb
mov
pop
sub
loopne
sbb
mov
add
arpl
dec
mov
xchg
xor
push
inc
dec
leave
stc
sahf
stc
mov
dec
push
sahf
add
push
and
and
test
scas
add
sbb
push
cmpsb
mov
inc
and
lds
aas
or
movsb
rcrb
lods
push
sub
adc
and
mov
inc
leave
jp
ret
outsl
es
clc
jo
mov
dec
mov
cmpb
iret
bound
pusha
cmp
pop
xor
mov
xor
lcall
push
xchg
inc
lea
je
lret
sub
dec
mov
loop
mov
jmp
dec
pop
push
pushf
mov
jae
mov
mov
cmp
mov
arpl
inc
daa
sbb
lods
cmp
pop
pop
or
scas
lods
scas
pop
sbb
xchg
mov
mov
fimuls
mov
and
ficoms
ret
mov
insl
inc
jecxz
popf
add
lahf
stc
pop
add
ffree
fs
mov
pop
mov
in
inc
shll
in
or
mov
cmpsl
test
mov
subl
mov
insl
sbb
test
and
jnp
leave
pop
iret
inc
aas
int3
mov
or
xchg
test
mov
mov
aas
jne
sub
les
mov
fmul
pop
fiaddl
sbb
shr
mov
cld
mov
push
bound
adc
int
loopne
dec
fidivs
xchg
mov
push
imul
pop
aad
fisubrs
add
out
clc
pop
adc
mov
cs
rorb
sbb
inc
insl
aam
jno
mov
adc
xchg
insl
fnstcw
mov
nop
xchg
jl
repnz
dec
ret
push
sub
fisubs
pop
loopne
sub
sbb
nop
fists
inc
out
rol
frstor
gs
add
dec
inc
call
mov
jecxz
xor
or
fwait
iret
dec
les
out
lcall
leave
imull
imul
inc
push
test
mov
mov
rorl
or
aas
bound
jmp
aas
xchg
ljmp
lret
cmp
jl
icebp
jmp
stc
push
or
cmp
sub
push
or
add
lret
fidivs
aas
pop
rclb
das
nop
sbb
inc
cmpsl
inc
adc
int3
outsb
or
mov
filds
adc
mov
push
fs
stos
pop
adc
aam
jns
fs
xlat
ja
ret
out
mov
lret
cmpsl
push
add
mov
inc
cmp
jns
jnp
xor
lahf
or
into
das
inc
or
xchg
cltd
and
popa
pop
sub
jl
push
dec
cltd
lret
add
inc
pop
or
mov
xchg
aam
mov
aas
inc
cmp
iret
jno
vorpd
aas
fcoms
cmp
mov
rorb
sbb
push
mov
push
mov
fidivs
int
ret
push
stc
or
dec
lret
call
jbe
pop
inc
sbbb
aas
rcll
shlb
pop
adc
ret
rcl
inc
pop
fs
out
sub
jns
lret
outsb
ret
test
pop
decb
and
jne
sub
repz
sub
lea
cltd
pop
int3
mov
jne
fistpll
in
jo
push
or
pop
sbb
lcall
shrb
jne
push
ds
push
int3
dec
pop
and
jecxz
scas
adc
push
int
lahf
dec
fstl
filds
lahf
test
fsubrs
adc
jo
cli
xor
jbe
into
jns
cmp
repz
shl
inc
movl
mov
movl
fmuls
jne
push
out
cmc
pushf
loop
mov
mov
pop
and
out
popf
mov
stos
xchg
sub
ret
lock
or
mov
lds
pop
mov
bound
lret
sub
sahf
addr16
push
add
scas
sbb
ljmp
or
ret
push
push
add
into
pop
add
push
mov
subl
pop
movsl
mov
mov
stos
xchg
add
movsl
and
pop
jo
das
std
jle
hlt
inc
or
int
inc
ficoms
je
iret
out
sti
test
imul
mov
dec
repnz
hlt
xor
lcall
cwtl
mov
pextrw
and
adc
fiadds
repnz
mov
loopne
in
rorb
sbb
leave
arpl
in
repnz
nop
std
stos
mov
es
mov
fdiv
xorb
dec
mov
out
add
loop
in
sub
sub
adc
faddp
and
jns
push
loop
cltd
sub
pop
shrl
data16
scas
arpl
fidivrs
je
mov
rolb
cmpsb
or
inc
int
mov
jo
loopne
xlat
in
scas
hlt
dec
pop
popa
ret
ret
aaa
push
sarb
mov
mov
cmp
pop
pop
push
fwait
inc
pop
insb
adc
out
inc
mov
sub
mov
or
add
push
push
repnz
jne
rdtsc
cwtl
jbe
add
js
add
icebp
shll
ljmp
jae
mov
cmp
pop
insl
test
or
ret
add
stos
mov
aas
mov
dec
jo
add
sbb
jns
adc
mov
and
adc
adc
xor
fs
lcall
mov
jo
xchg
orl
mov
jge
test
cmp
xchg
jmp
mov
fstpl
xor
call
out
fs
jbe
inc
outsl
pop
call
push
add
leave
aas
lea
int
jb
stos
ret
dec
outsl
addr16
repnz
es
pop
cmc
out
movq
movsb
in
jbe
punpckldq
mov
test
jmp
cmp
sub
inc
idiv
pop
pop
push
mov
add
bnd
mov
js
subb
andl
mov
lret
rcrl
je
mov
movsb
lods
jmp
sbb
call
addr16
lret
inc
cmp
dec
or
fimull
lds
ljmp
sub
arpl
mov
nop
test
jl
mov
or
or
sub
jecxz
and
sbb
retw
xchg
jge
mov
jno
mov
mov
rolb
mov
fwait
sbb
pusha
sub
xchg
cmp
sub
icebp
adc
sbb
push
or
or
cltd
push
mov
js
push
dec
jno
inc
lock
inc
push
or
aad
sub
cmpsb
sahf
outsb
adc
add
sbb
jnp
insb
stos
push
pushf
or
and
and
sti
out
enter
jb
in
sti
xor
movsl
ret
xor
mov
pop
sbb
jb
fldenv
out
lds
lcall
cmpsl
cmp
and
adc
jge
lcall
addr16
cmp
enter
movsl
pop
xor
inc
inc
xchg
push
pop
leave
pushf
fstpt
pop
cmp
fsubs
nop
xchg
mov
sbb
mov
loope
push
adc
xchg
add
mov
es
jecxz
sub
push
adc
jmp
sub
cmpsb
frstor
jle
cltd
movsb
mov
in
sub
pop
fists
adcb
cmpsb
lcall
movsl
sub
jp
jno
lods
inc
mov
sub
je
stos
jecxz
add
lret
jno
cli
sbb
add
lahf
ja
push
les
pop
lahf
inc
sbb
in
gs
push
cmp
mov
mov
adcl
mov
lea
xchg
gs
outsb
mov
ja
ret
das
data16
stos
xchg
or
mov
das
iret
mov
dec
adc
push
dec
in
push
add
fisttpl
mov
leave
imul
jno
pop
lds
xchg
mov
sub
loopne
stc
and
insb
and
outsb
sub
es
or
add
and
sub
jg
or
or
repz
push
call
sti
cmpsl
and
pop
sbb
sub
fbld
sub
data16
push
pop
adc
push
cs
lret
push
movl
js
sbb
jg
fiaddl
or
insb
mov
mov
jns
mov
enter
ljmp
insl
inc
fdivl
jbe
inc
mov
mov
dec
sti
sbb
inc
and
out
inc
aas
push
mov
xchg
inc
or
fidivrs
daa
push
pop
aas
imul
lods
pop
int3
repz
jo
out
sub
cmpsl
ja
push
or
fdivs
pop
out
nop
js
aas
jle
in
mov
dec
lods
mov
iret
in
rorl
arpl
mov
fsubr
popl
pop
inc
sti
xor
clc
js
ljmp
jno
cmp
jmp
and
rcrb
orl
daa
pusha
push
loopne
int3
inc
mov
subl
mov
pop
into
mov
insl
sbb
rcr
jmp
mov
in
push
jl
mov
sub
aas
cmp
xor
mov
fwait
xchg
sbb
lret
or
mov
mov
xlat
repnz
cmp
in
aam
aad
cs
xor
in
jg
sub
lock
mov
mov
sbb
adc
fwait
sub
or
or
sti
repnz
push
iret
mov
mov
pop
pop
inc
cmp
and
inc
rol
dec
push
clc
sub
fwait
dec
arpl
int
jae
inc
jns
and
test
inc
int3
test
test
jno
out
mov
cmp
insl
and
leave
call
push
inc
mov
arpl
negb
into
es
int3
dec
inc
mov
cltd
stc
mov
mov
push
popa
in
xchg
mov
sbb
stc
jno
lret
lahf
jecxz
xor
out
repz
xor
int3
int3
push
fucom
push
jmp
popa
lods
nop
and
test
stos
idivb
sub
and
cmp
fisttpl
imull
and
pop
mov
out
jno
ljmp
aad
xor
mov
cmp
xchg
iret
sbb
aad
fwait
sub
xchg
add
in
int3
or
int3
loopne
dec
jno
cmpsb
mov
adc
fwait
lret
jnp
adc
es
cmpl
push
jns
push
push
push
jecxz
xchg
pop
sbb
sbb
mov
sbb
stos
jb
sub
pop
pop
inc
xor
ja
sub
fs
jg
xlat
mov
mov
in
push
lahf
cmpsl
or
cmp
sub
stos
pop
dec
lcall
sub
inc
mov
andl
or
push
jns
ret
or
adcb
mov
or
nop
frstor
or
sub
into
rorl
mov
mov
push
daa
and
bound
fstps
dec
sub
mov
jp
loop
hlt
cmp
inc
stc
out
sbb
imul
rorl
pop
sub
push
stc
sbb
mov
stos
lods
lahf
sub
sbb
pop
mov
adc
mov
fisubrs
mov
fcmovne
lods
mov
cmp
ud1
imul
push
mov
les
cltd
fdivrs
push
cmp
pop
call
mov
les
or
popf
push
mov
rcrl
ljmp
aaa
cmpb
out
enter
les
fnsave
fidivs
add
aam
iret
mov
aas
int3
pop
push
adc
into
cmp
xor
sarl
add
stc
xor
daa
clc
in
add
lods
push
push
mov
push
sbbl
fsubrl
fs
ret
fdivrs
pop
mov
mov
inc
sub
je
mov
dec
and
insb
fildl
lods
loopne
cmp
sbb
sbb
and
add
call
fisubrs
je
mov
cmp
fidivrl
jnp
in
cmpsb
mov
dec
outsb
inc
push
imul
idivb
imul
mov
popf
stc
mov
or
jo
jbe
das
sbb
nop
and
push
jge
cmp
test
push
imul
inc
sbb
in
sti
push
dec
push
mov
stc
push
stos
add
fcoms
out
movsb
xlat
adcl
xor
int3
adc
sub
push
loope
mov
cmp
imul
pop
out
or
incl
add
mov
push
xchg
push
std
dec
es
or
inc
inc
pop
jno
pusha
mov
push
insl
lsl
push
mov
in
sub
out
or
push
test
lret
cmp
dec
pop
jg
push
icebp
sub
aaa
popa
popa
cmp
sti
push
out
and
data16
sub
xlat
notb
mov
sub
cmp
push
repnz
call
inc
jno
hlt
in
push
jns
in
popa
lds
int
fmuls
add
in
bound
xchg
dec
xor
sbb
dec
or
rolb
into
mov
fcoms
mov
mov
insb
bnd
dec
jae
mov
andl
jmp
cli
mov
mov
popa
adc
jg
rolb
mov
je
or
adc
aas
jno
cmp
popf
in
inc
jmp
insb
cmp
shlb
inc
dec
push
cli
inc
scas
loopne
popa
mov
lods
inc
test
mov
fldcw
sub
fmuls
pop
push
cs
push
add
and
lcall
xchg
push
ffree
pop
jge
dec
and
sbb
push
test
and
mov
insb
mov
sbb
aaa
inc
repnz
psubd
fisubrs
or
sbb
data16
mov
adc
icebp
add
pop
dec
xchg
mov
idivb
pop
mov
add
sub
jecxz
inc
dec
rcll
insl
add
sbbl
xchg
inc
pushf
cmp
mov
pop
jo,pt
lret
lods
dec
jge
into
cmpsb
dec
std
jle
jb
and
inc
mov
sbb
fildl
mov
sub
adc
jecxz
or
dec
test
sub
fwait
call
fldl
lcall
pop
mov
cmp
cltd
mov
jmp
xor
shl
lea
mov
scas
mov
out
sbb
and
imul
aaa
bound
imull
add
adc
dec
pop
jb
dec
pop
lret
movsl
shlb
mov
adc
out
add
cli
lret
pop
std
pushl
inc
mov
xchg
and
adc
add
rcrb
movsl
mov
add
addb
test
cld
sub
inc
out
clc
iret
xlat
fs
or
xlat
arpl
cmp
in
push
mov
cmp
subl
popa
std
shlb
and
hlt
push
sti
outsb
pop
stc
popl
or
std
jnp
mov
inc
jo
push
lret
dec
scas
xor
pop
stos
pop
popa
add
mov
int
xorl
mov
rcrl
rcll
insl
mov
aam
pshufw
or
andl
mov
push
inc
adc
jno
jg
icebp
scas
cmp
xor
popa
jo
loop
add
add
xchg
mov
cwtl
mov
mov
lret
add
add
ret
ret
adc
mov
sbb
pop
jo
repz
test
inc
std
mov
push
jmp
leave
push
inc
je
ud1
test
mov
outsl
dec
xor
lds
or
lret
cmp
and
and
cmp
add
pop
or
lods
incb
in
ret
xchg
les
fnstcw
and
idivb
xor
inc
inc
pop
into
xchg
inc
sub
inc
aas
inc
fsubrl
fidivrs
sti
mov
addb
push
adc
shlb
pop
incb
adc
mov
imul
je
dec
add
popa
in
push
add
and
das
fbstp
cld
ret
dec
dec
test
or
lcall
sbb
imul
and
faddl
xor
inc
adc
sub
icebp
sbb
cmc
stc
dec
xchg
bound
scas
xchg
shll
xchg
adc
mov
hlt
fwait
xor
leave
mov
hlt
aaa
loop
push
fwait
pop
and
stos
out
jmp
pop
adc
xchg
add
mov
popa
jns
cmp
sub
xor
daa
sbb
lret
mov
pand
sbb
jo
lock
ss
icebp
xlat
push
push
dec
repz
lret
cmp
dec
adc
das
pop
stos
adc
ljmp
pop
std
or
jbe
pop
push
pushf
les
into
mov
cmp
xchg
stos
fwait
mov
repnz
cmpsb
faddp
outsl
inc
jae
insl
mov
sti
test
das
fdiv
inc
inc
push
mov
push
sbb
and
fcomps
xor
jne
mov
push
int
inc
xor
jbe
xchg
mov
loope
nop
xor
repnz
cmp
dec
jo
into
add
lods
jecxz
dec
icebp
add
cmp
bound
popa
xchg
jmp
insb
pop
js
insb
repnz
std
cmp
sub
rol
out
cld
add
repz
leave
imul
push
cmp
outsl
mov
bound
ret
scas
jae
nop
shl
mov
movsl
push
insb
arpl
ret
sahf
push
les
jb
sbb
sub
dec
imul
or
inc
imul
iret
dec
mov
idivb
jle
mov
rorl
and
aas
cmc
cltd
dec
inc
jmp
jmp
push
fwait
mov
sbb
pop
shll
sub
js
sbb
cmc
sub
popa
pop
push
aad
sbb
or
push
dec
and
outsl
test
inc
adc
arpl
mov
mov
xlat
pushf
enter
fisubs
sub
inc
movl
les
loop
push
ret
lcall
cmpl
mov
push
arpl
call
xchg
loop
mov
notl
test
mov
cmp
mov
shlb
jmp
les
lds
jae
push
imul
bound
shl
add
sbb
adc
dec
push
cmc
xchg
inc
jae
xor
wbinvd
ret
add
jmp
inc
hlt
jmp
xchg
dec
test
cmpsb
add
add
add
inc
lods
clc
leave
lds
push
mov
inc
aaa
pop
inc
lods
and
pop
fstl
fiadds
pop
jecxz
inc
test
inc
and
jl
mov
xchg
data16
popa
push
xor
pop
or
out
jbe
and
fcomi
jno
sub
js
dec
icebp
mov
lods
fsub
jl
and
add
jg
loop
and
and
shrb
sbb
inc
inc
jnp
adc
push
mov
jle
jg
push
push
icebp
add
les
pop
sbb
mov
cmpsl
testb
test
pop
dec
inc
cltd
rcr
test
or
add
push
inc
out
subb
push
push
testb
push
dec
nop
or
inc
shll
ljmp
in
fsubs
je
dec
cld
cld
xchg
lods
in
inc
clc
and
iret
push
ficomps
adc
inc
leave
dec
daa
add
cmp
and
imul
push
in
stos
into
ret
lds
testl
out
testl
into
out
into
and
mov
inc
mov
dec
xchg
sbb
sub
xchg
dec
lret
fidivrs
add
int3
mov
jmp
sbb
and
in
iret
lret
idivl
inc
addr16
je
inc
insl
movsb
jae
push
pop
jmp
xchg
pop
pop
cmp
and
ss
jns
and
ljmp
and
cmp
loopne
or
and
xchg
push
push
xchg
lds
push
mov
jecxz
ja
push
add
sub
mov
addl
call
jo
mov
inc
lret
arpl
icebp
add
ret
ret
jge
jle
xlat
leave
repnz
popl
scas
ficomps
lret
in
or
jmp
inc
dec
rclb
in
mov
sbb
lds
add
test
in
stos
xor
jge
xor
andb
addl
addr16
fisttps
or
adc
or
push
inc
push
cltd
ret
add
aas
mov
xor
jmp
int
jg
push
or
adc
push
addr16
lds
add
stc
lods
push
push
mov
pusha
mov
sub
xlat
pop
push
int3
cmp
rcll
js
mov
lods
jo
into
fists
rcrb
push
into
pop
cmpsl
mov
cmpsl
push
inc
sub
pop
jecxz
inc
ret
loopne
mov
outsb
popa
mov
xor
cmp
clc
icebp
xor
lret
jmp
add
rol
orl
ret
dec
ss
inc
movsb
repnz
mov
lods
test
pop
je
fstpl
lcall
popa
sbbb
das
adc
cs
push
mov
aam
aas
call
xchg
ljmp
jo
aad
daa
cmc
mov
add
ret
sub
mov
xchg
orl
and
pop
or
daa
sub
ret
movsb
dec
pop
int
fstps
shll
and
xchg
fistpll
pop
neg
add
icebp
adcl
sbb
ljmp
or
rcll
push
ret
insb
lcall
add
mov
xchg
dec
mov
icebp
lea
aas
mov
jnp
sbb
enter
sub
cmp
in
popa
inc
jmp
xchg
jnp
or
push
mov
inc
leave
cltd
outsl
mov
cmpsb
into
push
ficoms
popaw
shl
and
jmp
pusha
inc
roll
sub
jns
or
lahf
pushf
loopne
mov
jae
gs
sub
add
jno
mov
sahf
mov
ret
mov
push
or
inc
push
xchg
data16
sbb
les
ret
sub
loopne
out
enter
inc
jb
test
movsl
jl
cmp
dec
fyl2xp1
or
inc
add
adc
insb
in
xchg
add
inc
jae
push
xchg
jb
cmp
sbb
mov
sbb
pop
mov
inc
fwait
rorl
shll
pushf
clc
sub
fdivp
data16
sbb
insl
sbb
test
stos
mov
push
stc
add
inc
or
roll
and
or
dec
push
pop
dec
add
cmpsl
pop
scas
movntq
mov
in
scas
shld
fmuls
fdivrl
icebp
pop
out
inc
insb
add
push
inc
inc
mov
insb
add
mov
jge
rdmsr
adc
loop
lds
and
inc
inc
shlb
push
movb
lret
rorb
repz
repnz
enter
mov
add
inc
lds
jmp
fcomps
xlat
xor
and
shll
repnz
into
out
inc
outsb
dec
out
push
into
inc
adc
adc
andl
mov
cmp
rcll
mov
add
add
std
pop
mov
popf
mov
xor
aad
and
sti
icebp
and
inc
stos
mov
adc
shlb
add
inc
add
mov
outsb
sub
xlat
sub
push
fnstcw
daa
jp
cmp
adc
mov
insb
dec
push
outsb
mov
mov
cmp
cld
and
bound
push
push
rcll
imul
rep
push
or
jecxz
movsb
aam
inc
and
jno
add
ror
and
cmc
movsl
dec
out
movsl
daa
stc
in
jecxz
adc
bnd
push
ja
cmp
enter
and
or
aam
ret
push
and
push
ret
pop
imul
hlt
sbb
movb
out
mov
in
scas
xchg
fsubs
and
ret
int
add
lods
or
add
sub
lret
or
inc
dec
mul
push
stos
dec
in
push
dec
fdivl
xchg
lods
loopne
ja
cmp
sahf
movsl
hlt
xor
and
test
lret
rcrl
and
rcl
add
sub
cli
subb
std
xor
mov
lds
mul
insl
data16
sub
mov
xorb
out
xchg
sub
fisubrl
push
jecxz
sbb
adc
xbegin
loope
sbb
enter
fs
pusha
jne
cltd
fdivr
scas
pop
ljmp
pusha
xchg
int3
push
loop
mov
lea
mov
sub
flds
rep
out
mov
std
inc
sub
arpl
stc
xor
pop
fisubrl
or
dec
ret
add
stc
movsl
out
xor
or
mov
scas
out
push
ljmp
dec
test
lret
dec
pushf
mov
mov
cmpsl
jecxz
sbb
repnz
inc
arpl
mov
nop
shl
gs
imul
xor
add
ficoms
addb
xchg
lret
sbb
repnz
fmuls
mov
leave
and
add
add
add
arpl
or
lods
sbb
repz
pop
shl
adc
dec
sub
ret
les
test
and
xor
push
mov
cmpsb
jmp
and
xor
addr16
adc
aaa
jo
pop
jl
jne
or
aad
cmp
out
jb
or
sub
sbb
dec
xor
in
xchg
xchg
xor
test
rorl
push
test
ljmp
mov
repnz
hlt
stos
cmc
and
mov
mov
xlat
popf
cmc
or
test
lds
inc
sbb
out
and
push
data16
inc
sub
cmc
inc
call
cwtl
mov
sub
inc
mov
push
pushf
shlb
test
xchg
jbe
loop
mov
sub
insb
dec
sbb
xor
fwait
mov
pop
add
xchg
jnp
icebp
pop
dec
add
lcall
out
cs
imull
testb
test
call
add
push
lea
adc
pop
jns
mov
cli
cld
xchg
fisubrs
or
cli
dec
lods
add
push
mov
add
movsl
mov
pop
les
mov
push
cmpsb
fimuls
add
lods
pop
xchg
dec
mov
fstp
daa
mov
push
aam
sbb
outsl
mov
in
addr16
push
adc
adc
mov
lret
sub
or
pop
scas
leave
jmp
add
hlt
test
jle
popf
xor
lea
and
lret
lea
push
ret
dec
inc
adc
lods
cmp
movsb
into
shrl
xchg
mov
aas
mov
mov
push
gs
imul
mov
repnz
cwtl
rorl
imul
int
lods
mov
out
test
inc
xchg
jp
ret
test
in
repz
imul
mov
in
jae
xor
mov
arpl
sub
xorb
push
gs
cld
rclb
movsb
jno
shrl
rclb
popw
mov
scas
or
loopne
repnz
mov
das
push
xchg
adc
out
dec
popf
bound
out
iret
mov
in
dec
lcall
sub
test
mov
push
xor
cmp
test
cmc
mov
mov
fs
lret
cmp
lret
mov
push
fucomp
jge
jb
or
loop
repnz
inc
inc
inc
mov
add
dec
lret
mov
in
inc
or
jne
iret
inc
aas
jle
in
orb
xchg
push
xor
rclb
iret
dec
lcall
sbb
iret
enter
xor
fwait
pop
dec
test
xor
pop
jecxz
xchg
movsl
mov
mov
add
hlt
rolb
mov
push
negl
mov
adc
pop
sbb
add
mov
mov
pop
or
mov
adc
inc
shl
pop
add
les
lock
and
out
call
sbbb
iret
jne
cmovle
cld
imul
pop
sub
cli
pop
loop
sub
insb
ret
stc
mov
adc
test
std
ret
imul
cmpsl
jo
repnz
hlt
dec
sbb
sub
out
inc
sti
mov
repz
stos
enter
lahf
push
sbb
loop
inc
add
test
pop
into
shll
repnz
sub
inc
push
lods
xchg
xchg
dec
decb
pop
push
fsubs
pushf
ffreep
pushf
lods
into
xchg
in
pop
inc
daa
pop
es
mov
inc
das
inc
sub
dec
mov
mov
xor
cwtl
in
test
insb
cmp
mov
loope
and
out
aas
mov
insl
sar
adc
adc
inc
jg
cmp
jne
icebp
push
ret
sub
out
fchs
call
stos
jae
pop
cmp
repnz
in
jae
pusha
jbe
sbbb
montmul
cmpsb
inc
lds
sub
inc
lret
sar
xor
inc
or
mov
sub
jecxz
mov
xor
ja
mov
dec
pop
in
xchg
stos
into
inc
inc
pushf
dec
les
cmpsl
decl
test
mov
jae
inc
mov
add
das
lds
lret
stc
xchg
xchg
or
repnz
es
mov
mov
call
mov
mov
mov
inc
xor
leave
xchg
or
sahf
shlb
imul
mov
lds
mov
xchg
inc
adc
int
pop
sbb
cmp
cmpb
shll
dec
fdivs
inc
stc
and
ficompl
inc
and
xor
mov
jb
xchg
or
loopne
jno
cltd
rcll
loopne
mov
mov
jmp
stos
jo
pop
aam
add
inc
or
pop
xor
aad
jnp
sbb
add
mov
push
fdivr
inc
insb
mov
jno
pop
and
push
cmp
xchg
roll
mov
mov
xor
bound
addr16
or
mov
test
xor
inc
push
aam
in
xchg
xor
inc
inc
ret
lret
leave
mov
ret
cli
inc
jmp
or
push
push
icebp
out
es
and
aaa
ret
movb
ficoms
rcrb
sub
mov
addb
mov
jge
es
mov
mov
dec
fs
and
rcr
pop
or
push
int3
sub
cld
pop
ljmp
call
inc
or
jo
popf
sbb
lds
loop
and
sub
loop
jmp
cmp
lods
int3
pushf
add
pop
mov
es
lret
cmpsl
dec
rorl
push
mov
pop
nop
stos
imul
into
mov
push
mov
add
loopne
addb
jo
xlat
jbe
add
inc
scas
loop
push
shl
xchg
into
hlt
ja
inc
mov
adc
shll
in
int3
inc
xor
jnp
ret
ds
or
cld
hlt
in
fsubrp
dec
ret
cli
adc
mov
sbb
cmp
sbb
lods
out
ret
adc
sub
dec
dec
add
ljmp
jae
hlt
inc
mov
repnz
movsb
sbb
mov
into
fmuls
leave
xor
sbb
iret
sbb
ficoms
ret
dec
push
cmp
mov
negb
pop
inc
xor
repz
fisubrl
jno
sbb
jae
add
inc
nop
or
jmp
pop
jb
push
rolb
mov
leave
dec
loopne
outsb
sbb
lret
cmpsb
aas
cltd
mov
sub
mull
shrb
fcompl
loop
bound
sbb
test
dec
arpl
test
push
cmp
test
dec
roll
ss
outsb
ss
nop
add
lret
repnz
dec
dec
or
fsubl
mov
lret
daa
pop
add
in
xor
arpl
loop
sub
nop
cmpsl
dec
jmp
fwait
add
inc
leave
inc
or
sub
cmpsb
mov
push
inc
fsubp
mov
movsb
out
pop
jg
push
push
sub
mov
outsb
test
jmp
push
mov
add
pop
arpl
inc
sbb
test
ret
pop
inc
arpl
jno
sbbb
add
pop
jno
imul
mov
xchg
dec
data16
mov
sub
cmpsl
sbbl
fs
fdivrl
mov
push
shr
inc
and
in
ljmp
xor
add
jge
dec
dec
pop
jmp
mov
mov
dec
into
and
leave
mov
lea
arpl
daa
int3
pop
mov
ljmp
mov
dec
leave
mov
and
mov
lret
sub
mov
dec
insl
pop
ret
adc
lods
rcr
or
mov
es
ljmp
mov
test
lods
cld
stos
cmpsl
pop
mov
adc
inc
inc
inc
scas
dec
aam
out
repnz
ss
mov
pop
or
popa
mov
cmp
mov
dec
add
popa
leave
mov
pop
inc
and
pop
sbb
xchg
push
pusha
inc
adc
scas
jbe
data16
bnd
pusha
cs
repnz
sub
idivl
mov
push
sub
mov
sbb
add
mov
in
test
ret
xchg
sbb
xorb
aad
pop
inc
call
adc
les
add
int
sub
cmp
mov
rolb
pop
loope
sub
addr16
mov
popa
out
inc
adc
add
sub
push
call
cld
add
push
push
jmp
inc
dec
mov
ret
xchg
xchg
fisubs
in
orl
xor
jge
dec
adc
xchg
sub
sub
adc
lds
leave
lahf
adc
call
jo
sbb
icebp
inc
pop
test
mov
outsb
fdivp
cmp
pop
insl
popa
push
stos
mov
inc
fs
repnz
cmp
fcompl
jne
dec
daa
ret
mov
jb,pt
adc
dec
loopne
mov
jp
std
push
jns
or
mov
jne
sbb
loopne
add
imul
mov
mov
pop
or
lret
test
dec
adc
xor
shrl
and
fdiv
mov
mul
stos
push
mov
xchg
add
push
pop
les
ficomps
lcall
sub
add
lcall
mov
shll
pushf
hlt
pop
mov
cwtl
inc
cmc
jp
mov
jne
inc
sub
sbb
inc
lds
movsb
or
mov
addr16
cltd
cs
push
mov
and
sub
mov
orb
mov
pop
je
jns
rorl
imul
ss
sbb
push
dec
jecxz
call
enter
push
and
xchg
sbb
rcrb
mov
xor
subl
inc
xor
out
sbbb
mov
cli
fldcw
je
leave
in
pushf
dec
mov
imul
jnp
mov
inc
mov
add
push
movsb
outsb
inc
test
into
xchg
sahf
push
xor
mov
std
imul
iret
pop
dec
pop
and
sbb
inc
sbb
stos
shl
xor
out
jae
movsl
mov
sbb
jns
mov
repnz
cmpsb
push
adc
jns
test
sub
insb
inc
hlt
int3
fbstp
int
nop
and
mov
inc
ret
ret
mov
sbb
sbbb
arpl
mov
into
enter
ret
lods
js
ss
data16
arpl
call
adc
mov
sub
or
dec
mov
jle
mov
lcall
xchg
dec
jmp
dec
test
dec
push
jecxz
enter
fdivrl
adc
sub
and
nop
jae
cmpsl
cltd
add
ret
push
test
xor
or
rol
lds
repnz
ret
bound
cmp
pop
sbb
ljmp
jge
xchg
dec
or
insl
and
imul
jmp
dec
dec
jne
mov
lea
cmp
daa
add
inc
fbld
sub
sbb
sarl
inc
add
add
jns
add
or
xor
inc
add
pop
loop
fbld
mov
adc
and
mov
inc
add
push
mov
dec
or
or
jecxz
sbb
out
pusha
and
xchg
inc
inc
cltd
cmc
add
add
or
xchg
outsl
sub
cmp
mov
loopne
jne
xchg
mov
in
push
or
adc
xchg
and
outsb
sub
into
shr
or
insl
push
arpl
xlat
int3
enter
je
jmp
or
lods
pushf
push
and
test
sub
aam
test
mov
repz
out
fisubrs
add
lcall
xor
jmp
stc
movsl
shufps
xchg
mov
out
mov
mov
pop
push
es
jg
mov
mov
jg
aas
stos
fstpl
and
mov
jl
stos
movsb
out
mov
outsl
lcall
mov
mov
int
fimuls
add
push
loopne
je
xchg
repnz
call
mov
or
fsubrs
js
aas
sbb
stos
dec
jmp
lret
in
aaa
mov
ret
data16
dec
in
ja
loopne
mov
add
aaa
mov
loopne
stos
ret
lahf
inc
push
rorl
pop
dec
repnz
add
mov
ret
jae
sub
outsb
or
adc
and
or
movsl
out
dec
mov
mov
fidivs
insb
jae
movsl
mov
inc
pop
mov
xchg
cmp
insb
enter
mov
inc
adc
xchg
inc
insb
push
mov
inc
ja
or
out
mov
test
xor
aas
ja
mov
mov
and
jl
push
orl
inc
out
sub
mov
and
insl
mov
ret
aad
call
leave
lret
add
out
cmp
lods
jbe
lret
hlt
rolb
jecxz
pushf
jb
imul
ret
leave
lret
adc
cmp
lods
and
loope
xor
jg
ljmp
xor
ret
out
xlat
pop
push
jecxz
ja
imul
out
push
and
lea
mov
inc
add
aas
sbb
adc
inc
dec
inc
push
outsb
inc
sub
test
mov
pop
jl
dec
es
lds
push
and
dec
mov
fmul
jo
adc
jae
popa
dec
out
xor
jo
pop
inc
pop
inc
or
insl
cld
xchg
cmpsb
pop
xchg
mov
ret
popf
sub
pop
mov
and
leave
push
jmp
jecxz
stos
inc
cmp
imul
pop
inc
or
int
lds
xor
ljmp
stc
xchg
iret
fdivrp
adc
out
lods
shll
ror
cmc
fidivs
inc
in
andl
in
sub
add
xor
mov
outsl
js
push
or
mov
addb
mov
jecxz
xor
sbbb
and
jo
adc
enter
mov
lods
bound
xor
sbb
aas
mov
adc
inc
sbb
sbbb
or
enter
stc
sbb
add
mov
jl
and
out
je
dec
and
mov
lods
pop
push
out
push
cmpsb
aas
rclb
inc
ficoml
repnz
out
lods
es
repnz
inc
inc
lret
lds
cld
decb
lret
inc
decb
add
xor
sbb
test
insl
xlat
sub
dec
ja
in
inc
fbstp
lods
adc
aad
add
mov
mov
dec
push
arpl
es
lret
and
inc
mov
aam
test
or
adc
lods
sbb
xchg
jo
mov
jmp
mov
xlat
outsb
out
push
pop
jl
iret
testl
pop
sub
pop
dec
loopne
fidivrs
add
fwait
push
clc
loopne
movl
pop
xor
mov
sbb
stc
sarl
lret
xchg
jb
push
loopne
adc
into
test
lds
mov
rcrb
ficomps
pushl
pusha
bound
into
add
daa
rolb
inc
jbe
cmpsl
jg
push
mov
xor
sub
daa
aam
inc
sub
arpl
mov
or
xchg
cmpsl
jb
lret
shll
xor
imul
sub
lock
sbb
dec
inc
xorl
adc
add
fisttps
jo
out
punpcklwd
fimull
add
outsl
inc
mov
mov
pop
fstl
sub
cld
xor
or
ret
dec
js
repnz
scas
enter
add
int3
popa
enter
insl
adc
bound
into
sub
lret
lret
pop
jne
mov
fdivrp
adc
pop
scas
xchg
cmpsb
xchg
jo
imul
sub
xchg
cmp
pop
xor
jae
jno
mov
sub
negb
xchg
add
pop
dec
mov
int3
add
stos
out
inc
cmp
aad
icebp
addr16
inc
mov
sbb
aam
js
lds
fwait
aas
or
bswap
jl
cmp
lods
and
rorl
jmp
ljmp
inc
add
lods
into
aam
ret
xchg
adc
sub
mov
aas
ljmp
fistps
pop
mov
inc
fcmovbe
lahf
or
movsb
test
aam
sub
push
jb
or
hlt
jmp
dec
xlat
repnz
pop
cmc
fildl
and
in
leave
dec
sub
push
clc
xchg
pop
scas
mov
lds
jecxz
stos
fsubl
jmp
dec
inc
pop
cmp
inc
icebp
jo
or
push
push
xor
jge
sarb
and
add
pushf
fbstp
repz
push
or
jo
mov
loop
ret
inc
fists
fsubrl
call
jo
loope
dec
daa
cmp
adc
scas
ret
notb
in
pop
test
lret
into
inc
lods
and
cmpsl
cltd
loopne
inc
imul
mov
fs
int
sbb
pop
adc
mov
jge
jb,pn
jecxz
shrb
lret
cmp
fwait
jo
and
cmp
insb
mov
mov
outsb
ds
inc
ficoms
fimuls
bound
sub
push
inc
push
xor
add
loop
adc
inc
mov
daa
jns
lcall
aad
jb
cli
imul
call
jge
or
xchg
push
sbb
arpl
adcb
add
ljmp
add
ret
lret
sub
and
jne
jb
fisubrs
repz
incl
xchg
mov
add
jbe
dec
outsb
jae
bound
testl
outsl
mov
dec
and
adc
int3
dec
mov
call
les
sub
ret
pop
roll
loopne
pusha
and
jno
ljmp
test
inc
ds
push
test
bound
sub
lea
mov
push
cmc
sbb
call
push
cli
and
mov
xchg
rorl
lods
ret
mov
mov
or
repnz
daa
pop
xchg
dec
aam
push
sbb
push
sbb
cmp
pop
jo
dec
jmp
xor
inc
mov
jge
pop
inc
sar
out
dec
push
sbb
mov
stos
out
xor
testb
xchg
add
jmp
fcoms
sub
fmull
push
xor
jae
enter
inc
add
jbe
cmpsl
mov
imul
adc
dec
int
pop
jno
sub
fimuls
popf
int3
inc
sub
cld
add
rol
inc
or
xor
sbb
inc
push
es
inc
dec
sbb
fimuls
push
addr16
xchg
call
loopne
loopne
mov
lret
daa
jnp
fwait
lods
xchg
into
jbe
push
push
or
shrl
bound
out
lret
or
inc
scas
and
das
iret
test
sbb
ret
sub
fistpl
lds
lret
int3
xchg
pop
cltd
and
out
mov
call
xchg
and
aad
adc
pop
aad
ds
sti
sub
mov
mov
xchg
or
in
mov
mov
xchg
mov
and
lret
add
test
xchg
mov
out
push
ljmp
xchg
into
mov
rcrl
clc
add
hlt
lods
popa
cs
icebp
sub
xchg
shll
rcrl
mov
jbe
xor
mov
mov
call
leave
aas
decl
ret
and
dec
addb
jb
xor
mov
and
movl
jb
out
in
xchg
shlb
sub
scas
lods
or
faddp
iret
lcall
cmp
lret
sbb
add
addr16
xor
mov
inc
movsl
ror
lods
xor
fiadds
std
addb
sub
dec
and
pop
mov
mov
mov
into
insl
lea
add
out
push
jg
add
stos
aas
pop
push
jmp
mov
arpl
lds
loopne
repz
jo
movsl
mov
mov
arpl
adc
inc
mov
ja
pop
add
rcrl
sahf
pop
fldl
mov
mov
lret
sbb
jecxz
out
push
sahf
adcb
pop
sub
and
dec
xchg
lret
dec
mov
ret
setp
ficoms
mov
jno
mov
sbb
pop
push
movsb
out
lds
jne
adc
mov
leave
fistps
push
sahf
loop
mov
xchg
sub
fisttps
inc
ficoml
mov
mov
popa
popf
into
sub
jae
lea
leave
jle
and
sub
fisubrs
sbb
mov
inc
and
int3
lret
push
ret
cmpsb
inc
inc
setb
pop
loop
fidivrs
dec
movsb
add
fimuls
aad
mov
aad
mov
scas
xchg
inc
dec
push
push
mov
dec
jne
pop
sub
sahf
mov
xor
loopne
ret
lods
add
sub
xchg
stos
add
jle
inc
sbb
cmc
cmpsl
cmp
lea
sub
fisttps
inc
repnz
jecxz
jae
push
mov
mov
add
xchg
fisttpll
pop
outsl
inc
stos
test
outsl
add
sub
ljmp
fs
cld
jno
scas
neg
xchg
in
push
sub
cld
cld
lods
mov
and
rcl
jl
outsb
dec
les
adc
mov
xor
inc
aas
cmp
rclb
xchg
push
addr16
dec
cmp
test
fcmovnbe
bound
add
inc
bnd
shr
push
adcb
fisubl
xor
mov
cs
popa
ficompl
sub
mov
jae
sbb
mov
push
dec
pop
pop
out
inc
in
fwait
dec
lret
lea
sub
fiadds
das
insb
rclb
xor
scas
xchg
xor
adc
int3
std
cmp
daa
xchg
out
sub
mov
push
das
sub
jb
jno
sub
mov
push
cltd
shll
inc
call
and
xchg
ret
push
xchg
rcr
sbb
testl
dec
cmp
inc
orl
insl
sbb
ljmp
repz
dec
jo
sub
jnp
push
push
jno
xor
cmpsl
test
hlt
js
leave
scas
mov
fsub
jo
inc
popa
add
mov
inc
in
shll
shr
pop
inc
adc
mov
mov
stc
mov
lret
cs
lds
add
push
pop
pusha
rolb
mov
dec
dec
pop
push
sub
inc
mov
in
add
and
jle
mov
xchg
fiadds
jmp
cmp
mov
in
xchg
sub
and
into
fsubrp
xchg
pop
mov
push
mov
inc
jge
jb
xor
dec
adc
insb
popf
ret
or
aam
insl
imul
push
add
jmp
addr16
xchg
test
mov
inc
pushf
xchg
daa
or
push
or
es
xor
cmovb
nop
mov
pusha
mov
sub
mov
sub
lds
or
icebp
mov
mov
adc
adc
imul
mov
mov
lret
mov
cmp
pop
adc
push
xor
push
and
push
adc
cmp
lret
xchg
leave
stos
mov
adc
outsl
inc
and
jo
mov
loopne
test
mov
scas
mov
or
lds
and
and
inc
into
adc
mov
sahf
cli
push
cmp
inc
push
jge
out
ss
mov
push
or
adc
mov
repz
sar
pop
ret
dec
mov
and
sbb
and
pop
in
add
or
push
test
movsb
and
jp
out
adc
insl
add
ljmp
lds
adc
in
xchg
mov
dec
add
mov
stc
inc
jb
lcall
add
mov
cmp
mov
enter
push
je
sub
push
stos
xchg
je
pusha
mov
mov
lret
pop
sahf
test
dec
inc
mov
cmp
dec
push
repz
jl
movsb
fists
ss
rolb
fisubrl
test
leave
or
popf
into
mov
js
jl
fidivrs
or
popa
mov
int3
xchg
aam
adc
adc
xchg
sub
xchg
iret
in
lahf
clc
enter
popl
pop
xor
add
push
mov
dec
stos
nop
inc
popa
mov
scas
cs
sub
in
loop
inc
test
repz
push
pop
dec
cmp
repnz
add
push
xor
out
and
sub
mov
cmp
insl
rcl
adc
pop
push
mov
push
and
lea
sub
sti
das
mov
loopne
shll
xor
inc
pop
imul
andb
adcb
stos
jae
repz
das
push
movnti
out
inc
stos
mov
push
xchg
mov
aam
insl
sub
adc
sub
add
pop
fiadds
push
mov
mov
shlb
fsubrs
push
in
jg
inc
fiadds
in
push
jmp
dec
daa
loopne
test
xchg
les
xor
adcl
adcb
dec
lods
jb
mov
in
mov
xor
aaa
aam
fisubrs
push
adc
pushf
scas
mov
loop
inc
movsl
mov
mov
sbb
mov
std
jmp
lds
jnp
fucomp
js
cmpl
xor
pop
in
mov
pusha
pop
lcall
pop
push
push
jnp
add
add
mov
jecxz
scas
push
test
ret
sub
lods
pop
dec
aad
mov
push
push
xor
inc
push
bound
mov
adc
add
jnp
daa
mov
xor
fwait
or
out
lods
in
pop
inc
ja
scas
add
iret
xlat
sub
add
ror
popa
rorb
sub
loop
std
sahf
and
lret
cmpsb
pop
lea
aam
js
and
add
andl
js
cmpb
mov
lcall
int3
inc
xor
add
lods
rcrl
ficoml
mov
es
add
sub
cltd
or
mov
or
popf
je
aam
mov
mov
and
popa
push
add
push
push
mov
pop
dec
pushf
fistps
sub
call
xlat
lods
jne
loop
xor
cmpsl
dec
push
dec
xchg
icebp
jb
xchg
jmp
rcl
lods
push
dec
lods
push
jo
filds
add
int3
sub
mov
ret
jae
les
mov
fs
daa
dec
xlat
movsb
pop
pop
fadds
pop
sub
flds
mov
sbb
mov
jbe
outsb
addr16
jg
loope
cmp
mov
imul
ljmp
nop
inc
adc
xchg
sbb
cmp
aas
sub
test
xor
and
rorl
mov
push
int
arpl
cmp
push
xor
cmpb
lock
xor
xchg
mov
arpl
xor
mov
mov
ret
nop
repz
leave
or
fsubr
stos
sbb
mov
leave
jb
jns
xchg
fadd
aaa
dec
mov
lds
jae
les
je
push
rcr
dec
push
addr16
sbb
rorl
pop
xor
cmovle
mov
leave
inc
xlat
mov
loop
call
pop
inc
mov
jp
sbb
popa
ret
add
icebp
into
xor
int
movsl
fbstp
data16
ficoms
lcall
sub
fidivrs
jbe
inc
push
mov
dec
and
stos
jo
dec
sub
inc
lods
sub
aas
pop
fdivs
or
and
or
loop
dec
or
adc
pushf
scas
cmc
fidivs
fldl
rcll
sahf
xor
inc
jecxz
in
scas
insb
fsts
jp
sub
mov
or
test
in
addr16
es
outsb
nop
inc
push
testb
mov
rorb
ficoml
and
mov
mov
mov
add
mov
and
jno
data16
repnz
xchg
and
imul
mov
incb
mov
or
lret
add
dec
test
mov
inc
mov
mov
mov
ret
std
aaa
xchg
data16
pop
nop
inc
mov
adc
push
mov
call
cmp
cmc
push
lods
push
xor
loopne
insb
lods
lods
push
fidivs
mov
out
push
or
push
cmp
sarl
leave
pushf
lcall
and
fdivrl
or
jae
fsubrs
sahf
sbb
xor
stos
les
cli
jno
push
sub
or
loop
pop
cmc
dec
push
add
fstpt
dec
push
and
inc
xchg
push
mov
cmpsb
mov
xchg
fmulp
pop
fists
sbb
push
jmp
test
add
xor
xchg
mov
mov
mov
out
fimuls
adc
into
push
mov
lds
dec
lret
jo
pop
out
dec
jecxz
shlb
lcall
push
xchg
xlat
jno
mov
sti
incl
push
cli
xchg
les
leave
shr
inc
mov
lea
movb
push
jle
inc
enter
dec
out
test
push
mov
bnd
sub
lret
xchg
rorl
or
adc
loopne
aam
dec
xor
mov
shll
aas
sbb
push
push
mov
sarl
insb
hlt
sub
int
es
sti
mov
add
repnz
or
repnz
inc
adc
or
cmp
movsl
sbb
shll
rcr
mov
push
out
rcrl
outsl
push
inc
test
fisubs
hlt
sarb
ljmp
imul
sti
cmp
inc
inc
out
loope
jl
jmp
pushf
dec
stos
imul
aad
push
xchg
xor
mov
add
or
es
pop
push
js
enter
jae
call
xor
xlat
pop
das
inc
and
jmp
jmp
and
lret
push
shrb
cli
adc
xchg
xor
sub
jmp
icebp
fbstp
mov
or
lods
push
add
cmpsl
and
aam
xor
inc
addr16
inc
shl
xchg
lret
or
add
pop
inc
mov
push
stos
addb
imul
inc
popa
add
out
shr
jbe
pop
jb,pn
ss
cli
add
push
mov
add
aas
push
jno
push
adc
lds
call
daa
jmp
jb
pop
inc
bound
imul
xchg
lret
push
or
push
adc
imul
mov
pushf
push
adc
arpl
mov
push
xchg
vpsrlw
in
sahf
ret
rcl
aad
mov
lret
push
and
sbb
cltd
rcr
push
dec
stos
mov
inc
jge
push
and
push
ficompl
push
call
mov
add
call
sarl
sbb
mov
xchg
sub
pop
add
jb
or
mov
mov
adc
stos
lret
mov
or
xorl
xlat
shrl
push
push
aam
inc
adc
fdivrp
insb
lock
in
or
mov
adc
adc
sub
push
xchg
fwait
add
lock
scas
test
sbb
push
xchg
lcall
lea
push
jb
repz
and
aad
lret
mov
out
sahf
pop
mov
into
stc
aam
rorl
fildl
jns
cmpleps
cwtl
dec
or
mov
cld
mov
roll
adc
or
cli
adc
push
mov
xchg
hlt
jnp
inc
int3
jnp
xchg
daa
adc
enter
out
leave
inc
adc
retw
mov
mov
fwait
outsb
fldl
mov
jecxz
pop
jb
inc
and
push
bound
jo
cmpsb
dec
mov
insb
lds
push
out
and
mov
mov
add
jb
adc
pop
repnz
add
std
sub
test
sub
mov
jecxz
lcall
inc
pushf
push
add
aas
adc
inc
cmpsb
and
aam
ljmp
and
add
ficoml
sub
test
repz
pop
popf
jbe
inc
or
sbb
xchg
data16
mov
lret
xchg
ds
insb
shlb
fmul
test
dec
push
ljmp
andl
lret
cmp
mov
imul
in
mov
out
sub
filds
into
aas
rorb
mov
mov
scas
mov
adc
lods
ret
or
pop
repnz
jae
data16
sbb
cmp
xlat
sub
js
mov
sub
icebp
call
cmp
aam
jae
sub
lods
bnd
xchg
loop
in
mov
mov
xor
nop
ficoms
shll
pusha
fidivs
jecxz
out
pop
stos
or
xor
ret
test
lods
loop
sbb
out
lods
sahf
rorl
push
jae
imul
xchg
push
das
lcall
pop
mov
dec
pushf
push
inc
stos
mov
arpl
vandnps
std
cmp
icebp
data16
hlt
dec
sub
imul
mov
fdivl
jp
jne
dec
je
call
or
dec
sub
lods
sti
mov
jp
ret
xchg
add
loop
xor
and
mov
jg
nop
inc
cltd
sbb
js
aad
sahf
iret
or
inc
mov
dec
les
jo
dec
xchg
mov
push
jl
fwait
jb
mov
lcall
mov
xbegin
test
sub
ja
dec
jecxz
inc
jge
cld
sub
mov
loopne
es
jg
jb
lods
pop
lds
xor
inc
stc
es
add
pop
mov
sbb
inc
fsubl
data16
push
mov
imul
jecxz
xor
cmp
cmp
pusha
mov
lds
shll
imul
and
sub
push
adc
sub
ret
repnz
pusha
cmp
fiadds
add
push
adc
xchg
rcrl
bnd
mov
or
or
add
jb
jne
stos
xor
sbb
repz
mov
loopne
pushf
shlb
add
in
inc
push
lret
mov
jbe
dec
jp
aas
jae
mov
pop
xchg
dec
ud1
jg
cmpl
fisubs
mov
roll
push
add
stos
in
leavew
and
int3
push
adc
adc
int
cmp
or
add
aaa
addl
or
stos
mov
sti
xor
shll
xchg
iret
xlat
je
xor
inc
jmp
enter
in
dec
popa
repz
cmpsl
and
loop
enter
adc
dec
outsl
aaa
inc
aaa
or
mov
insl
stc
push
pop
mov
daa
push
add
shll
jmp
and
and
mov
shll
nop
or
cmpsl
cmpsb
push
insb
add
inc
ret
cmpsl
and
xchg
faddp
repnz
popa
cmc
jbe
shll
imul
inc
jecxz
xchg
js
or
inc
add
pop
or
cpuid
rorl
pop
push
add
and
lds
incb
insb
shlb
lcall
push
push
cmpsb
adc
xor
mov
mov
xchg
cltd
movsb
add
and
lcall
out
call
lret
pop
push
inc
movb
loope
mov
push
cmp
and
jne
adc
mov
fdivrl
pop
imul
js
pop
pop
std
jmp
mov
movaps
and
mov
mov
lret
inc
cli
scas
ficoml
jno
or
sub
push
fidivrl
add
fcmovbe
movsb
mov
jo
mov
arpl
jne
sub
jge
pop
add
mov
addb
mov
andb
icebp
std
rcrb
rclb
and
jo
add
and
and
add
aas
cmp
sub
sub
addr16
mov
mov
push
xchg
inc
xchg
in
dec
xor
test
mov
daa
adc
in
hlt
dec
add
add
shl
jns
pop
outsl
stos
jnp
bound
mov
sub
lds
xchg
fbld
mov
bound
ffreep
daa
push
icebp
mov
add
add
mov
dec
inc
xor
cli
mov
mov
xchg
repnz
add
push
push
je
in
pusha
mov
jmp
or
fisubl
adc
xchg
ja
iret
add
mov
inc
out
jbe
rorl
add
push
sub
cltd
push
jecxz
adc
xor
mov
fdivl
in
mov
std
jnp
fdivs
sahf
lods
add
dec
repz
in
adc
lods
add
inc
inc
fsub
repz
test
popf
add
shll
and
xor
cmpsb
mov
and
mov
inc
into
mov
mov
imul
test
and
rorb
inc
js
shr
pusha
adcl
mov
loop
test
mov
aaa
loopne
and
or
and
je
hlt
gs
les
mov
and
and
push
pop
or
mov
andl
cmc
xor
iret
notl
xchg
scas
out
cmpsb
cmp
add
jmp
fistl
or
inc
dec
and
lcall
data16
push
xchg
inc
pop
add
int3
adc
ret
fbld
rol
xor
and
xor
mov
xor
add
jbe
std
mov
jge
and
or
sub
lds
pop
fbstp
ror
jb
ss
xor
sub
inc
pop
clc
lods
or
add
mov
loop
mov
cmp
jo
outsb
mov
jns
cmpsb
push
popaw
dec
or
inc
sub
fs
sub
add
lock
inc
fldl
jbe
dec
icebp
into
add
cmp
jmp
mov
mov
xor
mov
xor
test
in
movsl
les
fcoml
mov
es
sub
out
lret
inc
pushf
ss
xor
or
out
mov
fcoms
xchg
je
mov
push
test
int3
jno
leave
in
push
or
xchg
es
bound
add
fsubs
xchg
push
jmp
div
inc
bnd
lahf
roll
shlb
push
push
xorb
or
aam
pushf
call
in
daa
add
in
les
push
ret
scas
sbb
dec
flds
cmc
arpl
test
lahf
push
push
mov
je
xchg
cmp
out
jle
mov
into
or
push
ret
inc
jne
lock
mov
jb
fnsave
push
inc
mov
fidivs
jbe
dec
stc
or
out
push
mov
les
mov
xchg
cwtl
test
mov
dec
xor
push
inc
imul
add
inc
in
mov
adc
jecxz
adc
mov
mov
fbstp
or
popa
mov
sub
sub
outsb
data16
mov
push
out
inc
and
push
push
pop
fists
pop
cmp
push
ffree
andb
fiaddl
push
fnstcw
xchg
xor
aaa
and
jae
xchg
inc
les
fidivrs
shr
add
cpuid
hlt
in
rolb
out
or
or
jb
or
mov
adc
fsubp
mov
push
push
push
cli
lret
hlt
ljmp
push
bound
arpl
int3
out
leave
sbb
js
sub
add
mov
repnz
xor
jmp
inc
pop
or
iret
jbe
loop
hlt
sbb
ret
inc
movsb
std
popa
cli
inc
xchg
adcb
cmp
push
ret
push
test
pusha
inc
aaa
push
out
push
push
mov
xchg
dec
add
inc
fldcw
pop
xchg
out
xor
xor
lret
repnz
add
ficoms
sbb
rcll
jg
sbb
cmpsl
sbb
jecxz
pop
dec
subl
ret
lock
inc
mov
icebp
popa
and
mov
lret
mov
inc
push
xchg
mov
jns
testb
dec
mov
mov
push
les
out
ret
test
cmpl
ret
adc
push
cmp
xor
mov
cs
push
lods
cmc
in
in
push
fs
dec
pop
lods
push
dec
mov
sub
add
mov
jno
hlt
test
daa
xchg
push
and
fwait
xchg
imul
std
mov
loope
inc
cmp
repnz
push
repz
inc
dec
aam
hlt
mov
icebp
xor
scas
sahf
add
or
cmp
dec
and
jg
test
xor
frstor
ljmp
push
aam
adc
out
jbe
mov
xor
cmpsl
lret
inc
in
cmpsl
stos
cli
mov
dec
mov
je
push
push
push
ret
rol
xchg
xor
xchg
push
inc
pop
jb
jns
jb
xor
dec
inc
add
imul
pop
jo
push
test
aas
mov
imul
jb
push
bound
lret
je
xor
insb
and
inc
mov
mov
int3
insl
mov
popw
adc
in
or
add
inc
inc
cmp
ret
jo
roll
or
pushf
retw
push
lods
or
out
pop
push
sbb
and
push
dec
repnz
mov
imul
add
lods
rorb
cli
pop
push
decb
pop
std
xorb
or
mov
push
pop
cmp
add
inc
les
push
pop
arpl
pop
loop
and
out
mov
inc
adc
push
mov
inc
pop
dec
mov
cwtl
lcall
stc
out
adc
je
cli
es
or
push
and
and
pop
dec
loopne
and
jno
ret
xchg
mov
xor
or
fsubrl
icebp
std
pop
int3
stc
pop
mov
rcrb
inc
push
push
push
loopne
out
dec
and
mov
out
pop
sahf
cmc
inc
shl
icebp
loopne
flds
adc
inc
icebp
cmp
sub
roll
xlat
lret
mov
sbb
or
aam
imul
or
jnp
jecxz
std
xor
lds
mov
fs
add
push
in
sbb
enter
push
jne
inc
inc
pop
cmp
enter
fistpll
lds
mov
xor
out
les
inc
outsl
adc
loop
insb
ret
sbb
ret
enter
sbbb
push
mov
jmp
cs
data16
mov
and
push
mov
dec
inc
mov
adc
inc
aaa
loop
xor
and
nop
add
lds
ret
pusha
xor
stos
mov
sbb
shlb
dec
push
adc
mov
push
daa
insl
stos
repz
mov
pop
add
pop
loope
movsb
jg
fld
adc
int
inc
mov
inc
std
dec
shl
jbe
jp
pop
push
ret
ret
jecxz
ret
pop
jle
in
dec
push
lahf
repnz
inc
pop
dec
mov
adc
in
into
aam
jb
repnz
repnz
cmpsl
push
jb
and
fcmovb
inc
add
mov
and
mov
stos
call
inc
loop
ret
lds
add
mov
test
xchg
and
mov
frstor
ret
push
inc
and
push
int3
or
xor
out
xlat
sub
mov
and
and
and
into
aaa
enter
addr16
imul
push
bound
sbb
inc
shlb
test
addl
jne
jb
das
movsb
jmp
aas
addr16
rclb
add
mov
push
mov
rcll
lret
pop
xlat
xchg
loopne
push
lret
push
rcrb
mov
iret
sbb
sbb
loop
fsts
faddl
or
push
dec
add
jno
in
xor
cmp
imul
fs
mov
pop
dec
inc
mov
pop
hlt
ljmp
mov
xor
lds
xor
push
out
ljmp
aam
shll
mov
rcll
in
push
push
arpl
out
jbe
pop
stc
mov
popa
jne
mov
mov
inc
push
enter
into
or
arpl
add
and
lods
into
fstps
stc
add
sub
stos
in
cvtps2pi
push
push
dec
lret
lods
stos
loop
bnd
test
and
jo
and
ret
or
inc
sub
icebp
push
ds
ffree
xchg
inc
cmpsb
lcall
jo
mov
hlt
leave
or
add
rclb
mov
mov
or
sub
aam
cmp
enterw
push
flds
push
sarb
ret
xchg
jecxz
call
adc
cmpsb
inc
pop
cmpsb
push
inc
mov
scas
icebp
xchg
repz
lods
pop
or
cmp
adc
jb
pushf
add
dec
sbb
xchg
mov
push
hlt
popf
or
pushf
adc
movsb
jmp
imul
scas
pminsw
cmpsb
aam
dec
ja
mov
inc
inc
jbe
ret
dec
lret
pop
jmp
add
jl
es
push
cli
jg
jmp
stos
mov
mov
into
insb
fcomi
add
pop
out
mov
ljmp
dec
ret
pop
dec
testb
sub
cli
fmuls
ret
push
hlt
mov
sub
insb
loopne
sub
pop
inc
popa
xchg
and
push
mov
xlat
out
jl
daa
lea
shl
loopne
sub
xchg
push
sar
fbstp
ss
into
test
int3
and
cmpsb
fwait
rolb
push
pop
fistl
in
pusha
loop
push
mov
loop
bound
fwait
pop
mov
xlat
mov
push
jmp
jae
flds
pop
mov
arpl
push
inc
xorb
in
push
add
push
mov
xorl
inc
cmp
aad
xor
push
pop
xor
add
int3
loopne
aad
xor
push
push
xor
mov
mov
into
inc
dec
test
or
push
add
mov
push
adc
fcos
test
pop
pushf
mov
arpl
ficompl
xor
push
jp
sarl
ss
jecxz
test
fsubl
xorl
fyl2x
cs
je
push
push
push
lret
into
enter
sahf
adc
pop
imul
mov
and
jae
or
pop
ja
fmull
push
enter
loop
inc
jbe
pop
mov
sbb
add
fldenv
push
sub
ret
lods
loop
and
fsubl
cli
mov
add
ljmp
or
mov
mov
ret
cmpb
mov
insb
cmp
subb
leave
fildl
aad
andl
or
jmp
xchg
stc
lock
xchg
mov
mov
stos
or
xor
clc
pusha
icebp
lret
xor
scas
jle
or
loopne
add
cmpsb
xor
mov
lds
pusha
xlat
push
imul
and
cli
xchg
outsb
pop
or
fists
sub
daa
xchg
xchg
into
rolb
dec
inc
xlat
or
add
pusha
mov
sbb
push
jae
inc
xchg
out
popa
movl
sbb
fadds
jo
xor
dec
or
adc
mov
data16
mov
mov
cmc
enter
out
mov
adc
and
mov
cmpsl
jns
xchg
add
jb
rorl
lahf
dec
cmpsl
cmpsl
mov
dec
jmp
test
leave
jecxz
mov
and
and
mov
pop
insl
sub
xchg
out
cmp
sahf
icebp
jle
xor
stos
push
push
jne
push
jbe
fldt
clc
sbb
push
fwait
push
cpuid
mov
loop
je
jae
add
dec
mov
push
repz
xchg
ficoml
sbb
jmp
popf
jno
outsb
pop
push
loopne
repz
xor
std
jb
push
imul
mov
addb
adc
pop
mov
xchg
mov
dec
daa
and
xchg
fs
mov
fsubl
test
cld
inc
xchg
inc
cmp
xor
xchg
das
int3
lcall
push
or
and
sub
jne
xchg
hlt
stc
cwtl
jmp
loop
lret
sub
pop
lret
lock
addr16
mov
mov
pop
mov
mov
add
inc
fs
mov
das
in
je
pop
add
inc
loopne
fadd
jnp
dec
xchg
mov
jp
add
mov
xor
mov
fnstenv
dec
push
lods
cmc
push
mov
pop
cmc
loop
sub
pop
pop
adc
xchg
and
fisttps
aad
loopne
add
fmulp
mov
or
sbb
adc
xchg
repz
mov
sub
in
repnz
pop
sbb
stos
lods
sahf
fcoml
or
sbb
dec
loope
cmpsl
cwtl
enter
dec
push
fmull
fcmove
inc
lahf
ret
mov
xor
movb
data16
cmpl
push
lds
adc
cmc
jmp
inc
jnp
sub
dec
add
cmp
or
mov
jo
xchg
std
add
inc
sbb
adc
mov
test
mov
xor
push
aas
sbb
test
mov
cmpsl
sti
sbb
lcall
sub
mov
aad
and
xor
in
add
inc
push
icebp
shll
cmp
dec
test
lods
jle
fsubrs
leave
add
sub
lahf
or
mov
jmp
mov
jae
stos
and
repz
and
xor
add
mov
dec
jl
mov
xchg
bswap
shl
mov
fs
jecxz
sbb
dec
pop
in
xlat
xchg
adc
cwtl
add
not
dec
sbb
imull
push
cmp
mov
lds
bound
cmp
sbb
into
scas
xchg
push
cld
movsl
sub
lods
lret
pop
cmp
inc
push
mov
lret
scas
inc
fs
outsb
fistpll
sbb
xchg
repz
cmc
xchg
ret
ret
pop
insl
subl
and
add
fcomps
ss
xor
adc
loopne
add
inc
sbbl
gs
push
lods
pop
es
pop
sbb
and
insb
fildl
dec
movsl
inc
adc
jo
in
push
shrl
lea
enter
mov
push
ficomps
or
into
adc
push
insb
dec
add
push
test
mov
sbb
aad
cmp
adc
sbb
push
fstpl
lret
and
test
aam
mov
js
or
popl
xor
dec
pop
push
aas
and
ja
add
js
inc
data16
push
push
and
mov
data16
fnstsw
cli
or
mov
iret
mov
cmp
shrl
inc
bsr
xlat
das
pop
lds
inc
sub
xchg
adc
pop
daa
adc
stos
xor
shl
adc
and
lds
sbb
lret
dec
rclb
sbb
insb
mov
add
aas
sbb
repnz
sbb
jb
aas
lods
dec
jge
pop
sbb
ret
loope
mov
fsubs
sbb
cs
add
cmp
dec
jo
add
adc
rolb
mov
add
add
inc
je
dec
dec
pop
xor
out
sbb
sub
or
andb
pop
jnp
std
addr16
test
push
jno
in
add
movzbl
push
cs
add
lea
aam
in
xchg
pop
enter
repnz
push
rcll
jbe
mov
and
cmp
lret
frstor
push
jnp
mov
push
aad
adc
fidivrl
jnp
or
add
shlb
push
les
or
add
jmp
dec
inc
repnz
mov
add
rcll
pushw
lds
inc
push
sub
ror
outsb
jo
fiaddl
ret
pop
in
add
xor
bound
movsb
aad
js
push
addb
fiadds
cltd
add
xchg
lods
rolb
movsl
inc
loope
mov
xor
jnp
inc
dec
fldt
mov
lret
mov
and
mov
les
pop
xchg
dec
stc
adc
sti
jb
lret
or
pop
xor
mov
add
dec
jnp
cmp
fsts
and
cld
das
push
cli
sbb
mov
fsubl
sti
lods
daa
lcall
jp
pop
push
repz
int3
xor
in
or
popa
inc
cmc
sub
loop
pop
pand
and
push
call
cmp
imul
frstor
mov
bound
push
inc
cltd
jge
or
sub
ret
inc
sub
or
and
jecxz
mov
into
mov
sub
cmp
inc
mov
fs
mov
sub
cwtl
push
adc
mov
fsubrl
add
jo
and
jp
cmp
mov
cs
cli
cmpsl
inc
pushf
mov
mov
pushf
out
jbe
mov
int
ljmp
jb
push
in
cmp
sbbb
sub
inc
adc
push
adc
inc
mov
pop
test
inc
fsubrs
mov
mov
arpl
fmuls
leave
dec
and
mov
rolb
roll
mov
fs
mov
ret
inc
add
ds
add
fisubrs
fisubl
push
cwtl
into
mov
ljmp
lods
ret
jp
clc
push
clc
int3
jne
repz
shrb
mov
inc
daa
adc
aas
lds
aaa
lahf
pop
mov
inc
add
mov
mull
leave
jne
mov
or
jecxz
ror
or
test
movsb
pop
dec
repz
sub
push
add
xor
lods
call
nop
inc
xchg
ret
dec
sub
add
or
jge
xor
cmp
xor
pusha
xor
repnz
inc
mov
or
push
outsl
not
cmc
adc
and
push
pop
test
jae
pop
adc
jno
lock
std
pop
test
mov
push
aas
inc
xor
fcmovnbe
sub
sbb
outsb
les
repnz
call
add
pusha
jbe
jno
xlat
xchg
fidivrs
pop
or
movsb
movsl
cli
insb
in
sub
push
out
dec
jbe
cld
cmp
pop
mov
cmp
cmp
jae
add
dec
xchg
mov
mov
add
cltd
push
repz
nop
mov
push
xchg
mov
xchg
adc
fdivrl
fimuls
add
xlat
frstor
and
loopne
scas
mov
sub
push
decl
pop
push
dec
call
jbe
andb
and
mov
dec
into
xchg
jg
into
ljmp
cwtl
in
das
push
je
pusha
mov
pop
fldt
jbe
testb
repz
cwtl
inc
cltd
bound
dec
sbb
inc
cmpsb
fsub
and
xchg
xchg
fcompl
ljmp
es
sub
xchg
dec
xor
mov
xor
loop
aad
pop
aam
mov
mov
movsb
leave
lds
iret
fcmovbe
push
stos
jne
fbld
push
fcomps
cli
rcr
sub
shl
sbb
or
pop
sub
xchg
push
cli
push
sbb
fists
lret
inc
jge
mov
shl
mov
xlat
aas
push
mov
sbb
xchg
mov
mov
repnz
daa
adc
out
lods
add
sbb
out
dec
ret
add
stc
xchg
rcrb
movsl
fisubrs
decb
push
ret
sbb
xchg
cmpsl
sbb
pop
mov
add
loop
mov
lea
push
andb
clc
icebp
jp
push
out
nop
pop
and
dec
sahf
in
ret
negb
push
mov
xchg
push
lds
popa
adc
push
sarl
push
mov
inc
pop
cltd
pop
push
mov
jo
mov
pop
lods
xor
mov
dec
repnz
inc
subb
int
or
sarl
jl
mull
fcmove
or
outsl
dec
shll
xchg
pop
notl
mov
outsb
mov
push
repnz
xchg
xchg
lds
inc
fistl
jo
loop
add
jecxz
lret
push
inc
lret
adc
inc
loop
add
push
fistpl
mov
fistpl
call
pushf
out
xchg
ljmp
or
dec
loop
jecxz
inc
arpl
sub
repz
hlt
outsb
nop
loop
inc
or
sub
mov
adc
mov
and
dec
push
test
dec
inc
cs
lods
test
stos
push
daa
ret
pop
inc
lahf
repnz
or
inc
xor
jmp
and
lret
hlt
lret
jecxz
loop
mov
jno
jnp
xchg
fiaddl
mov
shl
test
xor
or
push
pop
xor
lds
jecxz
jne
stc
jbe
xchg
jbe
mov
in
inc
out
test
mov
frstor
jmp
lret
dec
mov
mov
mov
jmp
test
int3
ficomps
pop
sub
ljmp
test
test
adcl
pushf
imul
in
and
pop
inc
repnz
mov
mov
cmp
lcall
adc
icebp
cmp
les
dec
aam
add
push
ret
aad
int3
aas
pop
sbb
int
sbb
test
ja
jb
and
push
out
in
xchg
cmp
dec
dec
mov
cmp
or
dec
lret
fdivrs
lret
dec
ret
xchg
lret
into
psrad
sbb
pop
pop
ret
pushf
or
pop
mov
dec
psubusb
inc
pop
add
out
dec
mov
and
cmp
bnd
jo
xor
lods
das
pmaxsw
test
add
mov
mov
ljmp
lcall
in
cmpsl
or
xor
frstor
movsb
and
sahf
or
and
or
push
and
fldl
sbb
pop
test
cmp
lret
data16
adc
pop
lahf
out
jae
push
xchg
out
pop
mov
mov
lods
inc
mov
mov
mov
ja
mov
out
inc
rol
lods
icebp
repz
sbb
shl
daa
dec
lret
rorb
cmp
ret
ljmp
cmpsb
fdivl
push
ret
adc
inc
cli
inc
lods
repnz
push
out
xor
pop
loopne
xchg
addr16
aad
cld
push
loop
add
jmp
loop
and
lea
mov
and
inc
in
add
lock
mov
push
mov
adc
mov
or
adc
hlt
inc
dec
inc
sbb
jecxz
loope
xor
add
inc
cmpsb
iret
ret
add
repnz
les
lret
inc
shr
lahf
cmp
xchg
je
mov
inc
and
push
and
popa
cmpsb
mov
adc
fmul
out
fisubs
inc
lea
add
data16
out
mov
rcr
sub
push
repnz
shrb
std
mov
push
call
xchg
cmp
popa
in
lock
inc
out
out
loop
lahf
pusha
icebp
mov
xor
add
cli
or
jmp
mov
cmp
add
and
fsubs
les
outsb
jmp
into
mov
and
adcl
mov
ret
popa
and
ret
stos
mov
es
daa
push
or
shrl
bound
push
adc
cmp
push
xor
mov
mov
xor
xchg
lret
add
cltd
adc
lea
xchg
sub
ret
jae
adc
xchg
scas
cwtl
ficoms
push
call
push
fisubs
xchg
inc
and
pop
xchg
daa
mov
mov
jbe
cmpsb
fisubrl
repz
movhps
dec
popf
xchg
fbld
adc
jmp
or
dec
in
mov
aaa
aam
inc
les
and
xchg
dec
popf
aad
jge
cmp
in
inc
int3
scas
cmpsb
cmp
jmp
and
in
repz
jg
ror
add
dec
jge
out
neg
les
add
mov
pop
mov
popa
cwtl
ja
in
and
push
cmp
js
notl
ret
and
pop
out
mov
mov
aaa
daa
insl
mov
mov
roll
movsb
xor
imul
sbb
out
mov
aas
dec
daa
sbb
and
jb
cli
jae
or
out
repnz
adc
int
pshufw
mov
mov
xor
test
push
insb
into
xchg
inc
lret
pusha
ror
sbbb
aas
pop
adc
inc
jecxz
shlb
jno
daa
mov
lods
push
cmpsl
out
popa
adc
ja
sbb
push
xchg
ljmp
notb
xor
popf
and
pop
cwtl
pop
inc
inc
inc
ret
fidivrs
out
push
gs
mov
xchg
xchg
and
jno
orl
mov
push
notb
data16
push
add
pop
add
hlt
xor
xchg
mov
mull
sbb
adc
jbe
mov
pop
and
insb
mov
and
pusha
out
sub
dec
mov
xchg
xchg
jae
test
sbb
sub
dec
push
sub
jmp
dec
loope
inc
inc
imul
sub
inc
xor
jbe
fisttpll
pop
pop
xlat
inc
decb
lods
popf
mov
push
lods
xchg
hlt
ljmp
data16
xor
pop
mov
into
int3
add
fcom
push
sbbb
add
mov
out
movsb
ljmp
cmp
outsb
shr
lret
pop
lret
xchg
aas
cmc
add
add
push
jo
lock
das
je
mov
test
loopne
pop
fimull
leave
pop
cmp
mov
sbbb
dec
adc
dec
adc
shl
xor
pop
ret
lods
pop
out
add
jb
ja
push
dec
aaa
sub
push
sub
in
out
dec
or
xor
aam
mov
inc
mov
fmul
or
adc
insl
ja
jnp
inc
inc
adc
or
repnz
daa
push
dec
or
sub
dec
iret
pop
mov
mov
sbb
xchg
jl
inc
sbb
in
xchg
orl
hlt
sub
inc
and
rclb
inc
sete
pusha
push
pop
mov
pushf
push
pop
xorl
insb
mov
or
add
add
xor
and
clc
xchg
clc
mov
jecxz
add
fisttps
sti
je
cmp
xchg
mov
dec
inc
and
lcall
leave
and
mov
jns
adc
fnsave
ljmp
push
jmp
inc
jae
add
orb
movsb
and
insb
inc
mov
mov
sub
add
ds
mov
data16
rcrl
sub
stos
imul
inc
hlt
inc
jecxz
lock
ljmp
inc
insb
fbld
inc
xchg
sub
jle
test
fidivs
aas
sub
xchg
dec
and
in
repnz
repz
or
pop
pop
retw
and
test
fwait
inc
add
lea
ljmp
es
xchg
movsl
sub
lds
ret
fbstp
ficomps
inc
repnz
out
push
roll
popf
and
popa
call
sub
sub
repnz
pop
test
xchg
insl
je
mov
rclb
jl
ficomps
mov
sub
pop
ss
mov
lcall
or
cmp
and
pushf
fadd
mov
jecxz
pop
xchg
in
and
scas
and
shll
js
inc
mov
ds
es
push
cmp
push
gs
idivb
into
pop
lea
xchg
mov
mov
daa
stc
jg
xor
cmpsl
insl
data16
mov
aaa
dec
push
or
subl
clc
jge
push
or
inc
jno
pop
arpl
sahf
loopne
into
test
dec
out
inc
jnp
rcrb
movl
push
jecxz
add
fstps
inc
push
fisttpl
inc
cmpsl
jp
std
inc
lret
adc
jnp
mov
lds
cwtl
fsubs
sbb
push
jecxz
adc
mov
push
xor
dec
data16
mov
mov
repz
sbb
xchg
pop
adc
rcl
push
cmp
fs
fnstsw
dec
movsl
loopne
fisubs
ficompl
push
jmp
iret
test
inc
pop
test
and
bound
cmpsl
dec
ret
popa
mov
rorb
stc
add
fldln2
mov
pop
addr16
rcrb
enter
add
std
inc
roll
fwait
lods
pushl
jae
ret
jns
lret
sub
sbb
sbb
nop
cmp
test
in
stos
mov
loop
std
jae
int
jo
sbb
push
add
fidivrl
lahf
jge
roll
les
int3
int3
ret
orl
push
dec
std
stc
add
mov
mov
lahf
jbe
mov
test
mov
fildll
fnstsw
dec
mov
add
cltd
test
mov
xor
mov
mov
and
fidivrs
mov
pop
sub
sar
sub
shlb
cmp
push
pop
lods
and
push
pusha
adc
out
sbb
sub
inc
push
pop
cmp
fwait
movsb
mov
sbb
or
xor
add
repz
push
jecxz
cmp
rclb
and
jno
and
and
dec
mulb
leave
popa
das
insb
jno
xchg
test
in
inc
mov
inc
inc
rclb
lods
mov
adc
mov
jecxz
pop
es
gs
shlb
sub
lds
jno
ret
push
jecxz
leave
cwtl
pop
xchg
or
lea
jne
cmp
inc
lods
hlt
push
lods
lods
clc
add
adc
add
cmp
cmp
inc
adc
ljmp
call
fcomps
push
test
xchg
pop
fldenv
out
fisubrs
sbb
in
mov
jp
js
adc
ret
xchg
push
jmp
cwtl
stc
cmp
aaa
push
sub
cmp
stos
pusha
daa
stc
or
iret
inc
icebp
ret
jb
cmp
and
xchg
movsb
or
test
push
cmp
into
dec
cs
fs
jg
xor
test
mov
fdivr
daa
fisttps
add
sbb
popa
rcrl
jg
mov
inc
inc
push
cmpsl
xlat
push
lea
out
adc
jae
repnz
sti
mov
repnz
out
lods
loopne
dec
mov
sub
insl
mov
xor
xchg
iret
stc
ret
dec
push
pop
inc
in
mov
sub
lods
in
push
mov
loopne
push
jno
inc
dec
clc
test
fidivs
jmp
rdrand
out
xchg
jo
sub
mov
add
daa
push
mov
adc
xor
cmc
das
test
addl
out
inc
xchg
insl
dec
movsb
out
inc
or
or
test
loop
adc
sbb
mov
pop
add
add
in
into
mov
out
adc
sbb
adc
mov
gs
adc
call
inc
in
aam
in
aas
xor
and
push
jecxz
mov
mov
fildll
inc
jge
mov
sub
pop
int3
pop
sbb
bound
test
sbb
repz
mov
iret
jb
push
frstor
adc
add
xor
loope
mov
std
cmpsb
or
ret
push
hlt
push
fcoml
enter
xchg
mov
iret
mov
lock
ret
in
sub
shrl
shrl
mov
xchg
cmp
test
dec
add
mov
xor
cmp
mov
fstl
aas
sbb
aaa
push
cltd
jmp
jno
jb
jns
xchg
pop
or
ret
push
out
jne
sbb
adc
aam
inc
cltd
aam
lods
mov
pop
std
arpl
faddl
or
shlb
cmp
repnz
push
movups
inc
cli
jl
sbb
cmpsb
shll
inc
sub
lahf
vpcmpeqw
pop
jmp
out
push
scas
adc
push
add
adc
int3
or
test
xor
daa
sbb
mov
pop
cmpsb
push
in
sub
imul
out
add
mov
fadds
in
ret
ret
add
sub
ja
push
lret
xchg
bound
pop
pop
xchg
push
sbb
je
out
scas
iret
mov
xchg
lahf
aas
ljmp
out
mov
adc
in
sub
arpl
adc
add
xor
cs
cmp
sbb
mov
rclb
stos
movsb
mov
shl
sub
cwtl
adc
mov
popl
fidivrs
inc
xchg
stos
cmpsb
push
mov
jbe
add
or
cmp
sbb
adc
push
pushf
inc
sub
fwait
mov
stos
cmpsb
test
aad
dec
dec
insb
fildl
or
inc
fisubrs
add
jae
fstpl
fdivrl
sub
es
movsl
mov
test
sub
inc
ds
lcall
jg
cli
adc
aad
mov
pop
lods
subb
or
pop
cmp
cmp
adc
les
xchg
shr
mov
adc
sti
pop
adc
ret
add
in
xor
push
adc
stc
mov
insl
mov
cmpl
clc
movsl
pop
test
jo
imul
pop
push
jmp
in
and
pop
frstor
cwtl
cli
dec
inc
bound
sbb
in
lret
fs
jns
mov
pop
jne
cs
sahf
mov
xchg
inc
ret
out
leave
add
cmp
add
sbb
pop
and
nop
test
and
scas
add
bound
outsb
stos
test
jb
and
fcmovb
jbe
jecxz
xor
stc
nopl
and
add
xorl
andb
inc
ficomps
mov
push
mov
xlat
cwtl
jne
pop
and
xchg
xorb
es
adc
xchg
mov
mov
and
sarb
or
sbb
out
jecxz
fldl
je
sahf
jns
les
pop
sbb
sub
ja
arpl
lcall
adcb
inc
ret
mov
cmp
dec
jno
repnz
mov
and
loop
icebp
ret
mov
pop
int3
fmuls
pop
jmp
add
fidivrs
bound
pop
add
fnstcw
into
pop
sub
fidivrs
pop
int
jno
xor
sub
repz
sub
lcall
pop
push
add
scas
aam
test
and
mov
and
stos
gs
xor
cmp
and
jge
mov
jae
dec
jmp
divb
add
xor
pop
inc
mov
cmp
mov
stos
add
inc
jp
mov
ret
mov
pop
mov
push
xorl
fwait
add
mov
jnp
faddl
leave
xchg
mov
jg
enter
leave
mov
and
add
in
xchg
enter
stc
outsb
jno
jae
ljmp
rcl
ljmp
mov
out
lds
mov
pusha
cwtl
dec
lea
add
decb
and
scas
xchg
test
lret
stos
aas
adc
aas
xchg
pop
pop
jns
jg
movsb
cmp
lahf
or
rcl
pop
and
cltd
adc
cmp
inc
sbb
xor
rcr
lds
js
lds
lods
in
xchg
mov
enter
mov
sahf
add
pop
dec
xor
or
lret
xlat
leave
sub
lret
xchg
scas
add
inc
ror
leave
int
lret
mov
sbb
mov
rorl
sbb
scas
mov
sbb
test
push
je
push
fdivrs
movsb
rorl
and
push
int
add
icebp
lods
inc
imul
addr16
pop
repnz
inc
addr16
addl
bnd
push
ja
shlb
andb
test
dec
jo
ss
sub
jae
xchg
lea
leave
aad
ss
and
push
rorl
inc
mov
shlb
mov
shll
push
adc
sub
xchg
jno
push
push
jo
xor
movl
in
movsb
repz
push
inc
in
into
daa
jo
or
bound
sub
icebp
lahf
sbb
lret
cltd
dec
jg
sub
jmp
sub
outsl
mov
xor
pop
dec
ret
sbb
in
cmpsl
roll
int3
pop
test
xchg
pushl
mov
adc
push
dec
add
sub
stos
push
sbb
add
int3
jmp
lahf
hlt
roll
stos
inc
cmpsb
rorl
or
adc
jge
dec
xchg
insl
add
mov
inc
mov
imul
inc
and
adc
inc
pusha
rorl
ror
sbb
rcl
lret
pop
jae
adc
fisubl
cld
repnz
into
rcrl
ficomps
jo
or
pop
cmc
stos
add
adc
xchg
pop
jo
jge
mov
add
in
push
stc
das
js
in
lds
add
popa
push
and
cmpsb
fdivp
enter
rol
adc
pushl
in
das
ljmp
xchg
pop
xchg
mov
add
adc
inc
in
outsb
mov
clc
xchg
je
xlat
mov
sbb
mov
cld
or
adc
push
aaa
dec
or
mov
je
aam
lret
sbbl
rcrb
mov
mov
pushf
push
aam
mov
rcr
xor
cltd
sub
in
mov
subb
cmpl
sbb
lods
sub
movsb
add
fxch
xor
dec
std
into
inc
jb
pop
loop
and
ficoms
sub
sbb
and
lds
das
mov
std
xchg
mov
cmp
jns
xchg
in
and
inc
lcall
xchg
in
xor
cli
popf
and
jge
in
push
cmp
lds
jo
cmp
or
lock
cmc
jb
xchg
dec
push
int
and
lret
mov
adc
inc
xchg
loop
lock
jmp
lods
mov
out
or
push
add
and
jmp
pop
cli
mov
push
cmp
cld
lock
jmp
es
pop
push
ret
loopne
xchg
dec
mov
sbb
addb
into
adc
movsb
ret
xor
sahf
push
jne
adc
sbb
or
test
mov
icebp
inc
adc
inc
pop
data16
fildl
pop
cwtl
or
fcoms
cmpsb
ret
lret
call
sub
xlat
mov
stos
mov
cwtl
xchg
outsb
sub
xor
mov
mov
sub
mov
push
push
std
jae
push
or
dec
aad
repnz
jg
lret
leave
in
outsl
loop
cmpsb
or
inc
pop
aas
loop
lods
push
pop
fiaddl
mov
pop
push
out
lds
data16
cmp
imul
push
lahf
add
sub
mov
pop
xchg
inc
dec
loop
fisubrs
cli
mov
push
into
enter
adc
scas
stc
out
mov
rorl
out
dec
inc
add
fcomps
lahf
and
inc
mov
or
stos
out
dec
addb
sarl
dec
sub
cmpsb
shlb
inc
mov
gs
and
out
push
iret
data16
inc
daa
inc
sub
jecxz
push
loop
push
out
adc
jo
mov
lret
aam
pop
leave
xorl
stos
inc
repnz
in
out
or
pushf
mov
orl
mov
int
push
mov
in
lcall
pop
inc
mov
je
lret
add
leave
dec
pop
aas
sub
pop
imul
lds
jb
xchg
and
iret
fwait
push
les
ds
and
daa
sbb
add
add
mov
xor
jae
pop
das
jge
aad
nop
std
cmpsb
daa
cmp
mov
aas
cld
lret
pop
cmp
dec
cld
pop
lcall
rcrb
addr16
jae
std
cmp
pop
dec
call
adc
sub
jne
aad
or
add
sub
pop
icebp
cmpps
test
dec
add
xor
inc
rcrl
loop
and
dec
rol
inc
jae
inc
imull
dec
jo
hlt
and
movb
mov
loopne
inc
repnz
sbb
inc
dec
or
jmp
data16
repnz
sub
icebp
mov
xchg
mov
arpl
fdivrs
push
cltd
push
repnz
divb
cmp
mov
shll
and
sub
jp
fsubrp
pop
push
cmc
clc
arpl
imul
xor
flds
adc
add
nop
sub
xchg
xchg
jno
jns
scas
dec
outsl
jo
add
aas
inc
add
movsb
inc
mov
or
or
lcall
vcvtsi2ssl
stc
cmp
jecxz
insl
loop
jo
out
pushf
incb
and
daa
mov
adc
loopne
cmp
mov
cmp
sub
andl
in
add
js
adc
lahf
inc
xchg
cli
adc
or
pop
cmp
and
inc
mov
adcl
xchg
jno
pop
add
fld
lcall
fcomi
xor
in
dec
ret
pinsrw
push
or
jecxz
das
dec
out
fidivs
cmpsb
mov
fstps
gs
inc
icebp
test
pop
add
xchg
fs
dec
xor
scas
mov
jnp
sub
xchg
shrl
dec
fadds
jae
push
inc
pop
mov
popa
incl
les
xor
pop
aas
push
pushf
outsb
orl
cmp
hlt
pop
lds
jns
pop
ljmp
loopne
lea
add
add
js
mov
cltd
pusha
in
sbb
sbb
cld
jb
dec
lret
push
mov
dec
fistpl
daa
pop
inc
cmp
ret
mov
inc
daa
shrb
cmp
xor
repz
js
xor
lret
aam
push
adc
inc
push
fisubrs
cmpsl
xor
pushf
leave
or
xorb
sbb
push
cmc
fsubrl
mov
sub
xor
arpl
mov
aam
pop
jle
test
subb
popa
pop
sbb
add
shll
out
mov
or
and
out
shl
jo
pop
or
fildl
enter
icebp
lret
lock
cmp
sub
mov
ds
sbb
shlb
lods
vshufps
movsb
out
sub
cmpsl
cwtl
lods
inc
lods
rolb
stc
pop
sub
jo
xchg
inc
rol
push
jmp
aas
push
test
pusha
movsl
xor
dec
adc
add
pop
and
sarl
shl
pusha
fists
dec
iret
and
and
add
or
out
or
lcall
push
cmp
ljmp
dec
loop
aaa
push
ret
repnz
aaa
idivb
lret
lock
sub
jmp
mov
inc
in
ljmp
jge
mov
cmp
cmc
in
pop
push
fs
and
pop
mov
and
push
fs
inc
jno
mov
in
incl
adc
xchg
push
push
insb
or
xlat
jecxz
cmp
xchg
fisubrl
jmp
sub
addl
and
cmp
pop
pop
cmp
lock
cwtl
sbb
jg
pop
xor
lcall
dec
mov
and
sub
andb
push
lcall
and
cmp
add
mov
mov
push
pusha
push
arpl
mov
mov
adc
inc
daa
mov
push
push
test
dec
fcoms
mov
xor
cltd
decl
push
xchg
sub
push
dec
jecxz
fs
int
mov
push
ficoml
jb
or
iret
out
fsubr
sbbl
shl
xchg
inc
push
fldcw
fmulp
mov
rorl
dec
sbb
lock
pusha
add
insl
movsb
mov
mov
or
xlat
adc
fmuls
inc
sub
xlat
mov
in
and
push
shrl
pushf
mov
jo
in
mov
imul
or
jae
ljmp
cmpsb
mov
xchg
lcall
inc
lea
bound
aas
adc
or
aas
fsts
and
push
test
mov
xchg
mov
push
inc
mov
xchg
lds
mov
iret
enter
subb
fisttpl
mov
sbb
sub
xchg
inc
lret
test
jo
xchg
and
fistl
mov
aam
sub
inc
inc
push
shll
mov
xchg
xor
inc
fs
aam
pop
inc
cmp
outsb
push
cwtl
and
icebp
movsl
sub
jne
clc
push
cs
sbb
adc
inc
push
pushf
add
mov
mov
insb
dec
insb
arpl
push
nop
loop
rclb
in
add
mov
inc
mov
xchg
sub
ret
adc
loop
xor
pop
fstl
or
jp
call
push
fwait
and
adc
sti
stc
push
add
lods
sbb
fildl
pop
push
imul
xchg
popf
test
fimuls
inc
lret
push
push
and
fcompl
jb
mov
push
adc
sbb
mov
jo
insb
sbb
dec
gs
addr16
ljmp
data16
loop
sub
sub
and
push
call
adc
js
add
inc
or
addr16
mov
fldenv
inc
popf
std
sahf
shl
leave
repnz
or
jmp
add
stc
push
jae
sarl
or
xor
pusha
movsl
or
mov
das
ds
mov
andb
cs
fwait
jno
fisttps
mov
and
cmp
mov
or
xchg
or
inc
out
add
sbb
cmpsl
dec
rolb
sbb
add
sub
cmpsl
push
pop
int3
clc
cmpsb
decb
jno
xchg
stos
cmp
es
sarl
loop
scas
call
popa
movl
insb
ss
aas
mov
or
push
movsl
jae
out
sub
inc
das
and
inc
shl
add
insb
xchg
xorl
xor
push
cmp
popa
push
ja
decb
frstor
jge
lret
lock
mov
ficoms
fsubrs
dec
nop
out
push
sub
add
into
sub
jecxz
adc
inc
je
jp
addr16
push
push
inc
lahf
cli
or
sbb
sti
push
push
inc
xor
mov
test
mov
adc
test
jmp
ret
sbb
ret
push
push
int
test
hlt
mov
fidivrs
stc
movsb
inc
ds
push
ret
aas
or
or
fisubrs
stc
jmp
loopne
and
cwtl
movsb
popl
mov
jae
sbb
mov
pop
out
push
out
mov
pop
iret
ret
or
push
push
les
data16
sub
adc
cmpb
inc
jecxz
push
push
test
ret
lret
sbb
jo
dec
jg
ficoml
xor
scas
leave
addb
repnz
pop
jbe
jge
out
mov
add
mov
push
loop
mov
add
add
daa
jns
push
out
test
add
mov
jmp
test
insl
inc
scas
inc
push
or
mov
je
popf
loopne
scas
xor
push
jl
scas
out
and
mov
aad
lods
push
lea
pushf
jb
jnp
aam
dec
subl
jl
pop
inc
inc
dec
sub
xor
pop
test
inc
or
inc
add
repnz
cmp
pop
or
and
enter
in
and
addl
sub
inc
dec
iret
mov
movb
fnsave
rol
push
movl
mov
mov
add
jo
adc
adc
popf
flds
xor
jo
mov
movsl
jb
ret
rcrb
jo
inc
in
stos
out
xor
lods
push
outsb
lahf
inc
rcrl
lds
repz
sub
add
lret
jg
std
repnz
test
push
stc
sar
jg
sbb
add
and
hlt
lret
add
pop
push
lcall
rcr
ret
push
loope
and
and
cmp
daa
inc
aaa
mov
push
ret
xchg
mov
cmpsb
fldt
fnsetpm(287
mov
idivl
lahf
repnz
push
inc
pop
lds
ret
sbb
lret
jecxz
rcrl
ror
in
inc
std
cmc
dec
lcall
repz
adc
aam
sarb
in
repnz
ret
in
add
xor
xchg
sti
sub
bound
inc
and
fimull
adc
arpl
dec
add
add
push
push
mov
sub
lret
jmp
in
inc
in
xchg
lds
pushf
test
ljmp
out
cmpsl
add
addr16
loopne
lret
testb
mov
lret
mov
iret
outsl
inc
sub
add
enter
push
fiadds
scas
dec
ret
inc
jb
mov
add
int
daa
and
cmpsl
mov
fmull
incb
cmp
cmp
mov
mov
adc
lods
pop
std
push
jmp
scas
lret
add
sub
test
jecxz
and
push
ret
mov
inc
leave
test
rorb
icebp
int
mov
lret
jnp
pop
xor
push
lock
ror
iret
pop
jne
fldz
jo
leave
arpl
popa
xor
cmp
inc
data16
dec
roll
adc
jmp
je
call
roll
outsl
add
pop
xchg
nop
cmpsb
stc
hlt
sub
rcll
xchg
aam
in
icebp
testl
fcomps
iret
into
gs
cmpsb
mov
push
repnz
les
mov
xor
sub
fs
or
ljmp
or
push
fs
pop
int
dec
faddl
push
aam
lods
fimuls
mov
rolb
jge
cmp
xchg
push
cwtl
repnz
push
fsubp
cmc
insb
mov
out
jbe
ljmp
or
push
xchg
and
push
sub
ret
std
ja
or
cmp
andl
lock
repnz
push
lret
lcall
aas
cmp
aaa
push
mov
lock
mov
xor
mov
inc
push
lret
pop
popa
lret
popa
imul
and
or
rcr
rcl
mov
xor
pop
mov
orl
aas
jl
movsl
xor
insl
lcall
xor
out
sbb
pop
ljmp
fisubl
lea
ljmp
jno
lret
bound
cmp
and
lcall
jns
repnz
aad
xchg
sets
inc
xor
lret
sbb
clc
dec
and
add
and
jmp
daa
pop
lret
mov
mov
leave
stc
fiadds
cltd
inc
mov
xor
xchg
imul
fsubr
je
jbe
lret
into
xor
stc
into
imul
clc
repz
jp
fs
fldcw
xchg
add
inc
rcrb
mov
loop
pushf
push
add
jae
inc
inc
dec
daa
and
lret
mov
and
dec
pop
arpl
jns
and
add
inc
bound
out
xor
lods
pop
ds
test
inc
mov
test
inc
inc
adc
fisubrs
inc
xlat
imul
push
cmpsb
loopne
das
mov
inc
xchg
inc
ret
mov
cmp
or
push
repz
jmp
call
je
arpl
xchg
pusha
xchg
mov
jno
inc
lcall
mov
mov
fcmovne
mov
fucomip
out
aam
lret
mov
ret
pop
fstpl
or
sbb
lret
push
push
fidivs
stc
and
mov
test
sbbb
sub
andb
and
jb
pop
decb
dec
sbb
call
lahf
sbb
adc
pop
sbb
test
stc
xlat
sub
push
stc
adc
jns
and
pop
mov
test
xlat
cmpsl
inc
adc
and
add
hlt
jle
xchg
shlb
loopne
movsl
add
lods
cmp
xchg
movsb
mov
push
cmp
flds
aam
jg
es
jo
rcll
add
and
inc
and
repnz
lret
pop
pop
imul
mov
adc
outsb
loop
shlb
leave
pop
inc
loopne
mov
sub
cmpsb
jo
fsubr
xor
pop
dec
mov
xchg
inc
fistpl
push
sub
outsb
push
out
lods
adc
jne
data16
jp
pop
test
sub
ret
mov
fadds
add
gs
fbld
push
mov
aad
push
and
cmpsl
mov
in
das
sub
in
lret
test
sbb
aas
lods
add
loop
push
fbld
adc
addl
mov
adc
push
xor
add
jecxz
stos
orl
cmp
jbe
push
push
jecxz
test
sbb
and
jne
std
mov
cli
add
fimull
daa
cmc
movsb
lods
or
sub
stc
adc
jge
adc
dec
imul
mov
rorb
enter
cmp
inc
std
fisubl
sub
pop
mov
outsl
jle
add
mov
mov
adc
push
lcall
sub
sbb
decb
cli
inc
pop
mov
mov
cmc
inc
cmp
aas
adc
add
pop
dec
icebp
cwtl
iret
daa
push
fbstp
xchg
mov
jecxz
add
cmp
vpcmpeqw
enter
rol
ret
mov
ret
add
jns
adc
icebp
add
inc
push
ret
sbb
push
or
ret
add
xor
out
jecxz
add
icebp
xlat
pop
push
xor
add
inc
dec
fwait
sub
add
dec
xor
arpl
daa
stos
ret
rorb
es
movsl
adc
adc
xchg
or
jne
cmp
add
push
lods
xor
pusha
push
pop
jo
pusha
jg
decb
mov
gs
out
lea
xchg
jae
dec
dec
lret
push
mov
add
cmp
cmpsl
scas
pop
inc
out
sbb
in
aaa
incl
repnz
popf
lcall
mov
jbe
mov
or
dec
pop
mov
jo
pusha
imul
in
sbb
and
add
rclb
cwtl
pop
adc
pop
add
fmull
mov
or
mov
inc
aad
outsb
inc
test
adc
aas
jle
push
cli
stos
mov
mov
subb
fcoml
cmc
jge
rol
iret
std
pop
adc
xchg
mov
insl
aaa
outsl
jl
movsl
sub
xchg
ljmp
add
jne
xor
and
xor
leave
jo
daa
xchg
sarb
xchg
push
int3
mov
inc
xchg
xlat
jbe
test
jmp
dec
jmp
adc
outsb
mov
sub
aam
sarl
mov
fimuls
mov
pop
bound
std
rolb
push
out
mov
int3
into
mov
icebp
and
pop
ret
cmp
lods
dec
out
lock
out
or
cmc
ss
inc
push
je
jbe
push
je
out
mov
xor
jb
mov
leave
rcll
push
orb
and
loopne
gs
jmp
mov
and
pop
push
xchg
cmpb
mov
xchg
or
cmp
and
add
mov
dec
lea
loop
mov
pop
xor
cmpsb
int
repnz
add
dec
stos
es
pop
xor
xor
jmp
daa
fcmovnu
add
shll
stos
or
stc
outsl
xor
or
inc
lret
in
add
inc
fcomps
js
fldcw
jmp
clc
ljmp
arpl
pop
lods
mov
inc
mov
ret
push
jo
mov
inc
or
insb
jg
jbe
mov
xor
addr16
adc
lods
jge
dec
sbb
or
int
or
fs
repnz
cmp
sbb
fwait
vpaddw
dec
jecxz
xlat
mov
scas
sbb
xor
aam
sbb
jns
enter
data16
add
outsl
scas
sub
stc
lods
jp
add
aaa
inc
dec
adc
push
jge
xchg
xor
jecxz
loop
xchg
push
shlb
sub
icebp
rcl
sbb
fwait
push
push
lret
push
push
loop
jo
jae
lcall
popf
dec
adc
push
mov
mov
dec
leave
jg
jp
mov
xor
add
cli
popf
add
mov
outsb
fnsave
cld
test
pop
push
negl
gs
dec
add
pusha
pop
pop
aam
into
sub
in
adc
add
loop
fs
clc
in
aam
sbb
push
or
hlt
es
clc
pushf
subb
adc
loop
xchg
and
aas
jb
and
sub
dec
push
bound
jbe
xchg
ret
bound
lahf
dec
inc
mov
add
movsl
dec
test
jo
cmpsl
pop
out
jae
aas
jl
add
imul
push
xchg
dec
adcb
int3
inc
stos
jecxz
pop
xchg
lds
jge
dec
cltd
xchg
aas
dec
mov
mov
adc
xchg
xor
inc
in
mov
pusha
xchg
mov
and
xchg
imul
bound
aaa
xor
data16
xor
mov
or
rorl
cwtl
add
arpl
addr16
xchg
jb
daa
jo
test
std
les
push
in
add
call
push
jmp
xor
aad
aaa
jo
in
into
rorl
lods
fcom
ret
mov
into
mov
popa
scas
bound
in
aad
cli
or
cmp
call
ret
jnp
shr
mov
cmp
cltd
ficomps
rolb
mov
test
mov
push
pop
inc
pop
xor
je
cmp
int
inc
pusha
lsl
cwtl
leave
sub
push
pusha
int3
inc
mov
mov
fmull
out
xchg
das
in
mov
clc
lret
movsb
and
imul
sbb
rcrb
inc
sbb
mov
xchg
pop
xchg
or
into
and
ret
add
dec
inc
call
pop
push
int3
or
scas
adc
sbb
cmp
mov
mov
xchg
popa
mov
int3
movsb
lea
adc
pop
lods
mul
pop
ret
add
or
add
pop
sub
and
push
cmp
imul
fidivs
in
ret
add
icebp
cmp
mov
notl
pop
inc
pop
pusha
mov
lret
fucomp
inc
dec
add
add
int3
jne
inc
lret
sub
mov
ljmp
popa
inc
sarl
es
pop
pop
sub
mov
movb
push
test
or
or
in
xor
sbb
mov
xor
add
pop
inc
xor
loopne
or
mov
sub
inc
mov
movsb
leave
jp
shr
ror
lret
inc
roll
aas
ljmp
xchg
or
dec
xor
push
fstpt
sub
push
mov
insl
ret
andb
or
lahf
orl
stos
lret
push
cmpsb
jg
lock
test
in
fiaddl
sbbb
roll
inc
mov
xchg
mov
and
add
leave
stc
pushf
jo
ss
inc
inc
mov
jp
mov
ret
jecxz
adc
pusha
aas
das
sbb
fcomi
out
gs
lods
push
stc
add
pusha
and
cmp
loop
outsb
mov
push
shrb
mov
lahf
lea
in
insl
stos
cmp
adcb
push
jo
push
decb
scas
repnz
lret
cmc
pusha
mov
data16
inc
sub
add
jo
sub
xor
xor
pop
outsb
int
lds
fadd
lret
fiadds
push
rolb
addb
call
add
mov
dec
jecxz
popa
je
fstpl
aaa
inc
std
cmpsb
cltd
lods
mov
jle
ja
loopne
outsb
sahf
xor
in
cmpsb
add
fadd
shl
xor
rol
inc
cmpsl
pop
sbbl
jl
pusha
mov
loope
cli
lahf
xor
xchg
mov
jo
jae
pop
xchg
push
xlat
cmp
rorb
add
gs
mov
insb
pop
dec
cmpsl
loop
ret
ljmp
xorb
cmpsb
adc
lea
enter
push
xor
lret
leave
cmpsl
push
lods
popa
mov
lret
lea
bound
lret
or
stos
push
push
imul
pushf
hlt
adc
inc
test
aad
dec
mov
cmp
dec
mov
rcl
ret
sub
in
inc
inc
dec
pop
shll
lods
push
jmp
push
nop
ljmp
callw
xor
lret
loopne
xchg
popa
mov
insl
pop
clc
jecxz
or
sub
add
cmp
xor
rolb
pop
mov
in
push
mov
sti
mov
ret
push
pop
sub
mulb
stc
push
leave
jg
mov
jg
pusha
pop
das
xor
and
popf
sbb
lret
jg
push
or
inc
int3
mov
jge
mov
into
jnp
or
jne
fcmove
pushl
xor
push
movsl
push
maxps
or
jecxz
psrld
push
out
fs
jecxz
mov
pusha
dec
js
mov
popa
inc
aas
xchg
add
mov
cltd
int3
gs
loope
leave
inc
stc
push
ret
and
or
or
cli
jl
sub
int3
in
sub
stos
push
or
cmp
lahf
add
xchg
loop
dec
mov
mov
adc
loop
mov
hlt
adc
mov
and
mov
push
push
sbb
std
insb
xchg
fldl
scas
pop
ss
jne
repz
xchg
dec
push
enter
pop
sub
jb
pop
test
std
fwait
pop
aas
xchg
inc
fiaddl
sbb
leave
xor
sti
and
jae
lock
sub
jmp
add
fdivrs
mov
and
push
push
pusha
lret
lret
aaa
push
mov
lods
jae
repz
or
inc
adc
subl
stos
sbb
push
sbb
push
insl
pop
sarl
aas
pop
in
hlt
mov
mov
and
sti
insb
mov
pop
cld
outsb
xchg
call
add
bnd
xor
cmp
or
stc
filds
inc
inc
pop
xor
ds
lods
inc
push
cli
and
jmp
adc
adc
dec
mov
out
and
xchg
nop
jbe
mov
ljmp
mov
inc
fidivrs
or
movsb
adc
push
xor
xor
xchg
push
sub
xor
cli
lods
fsubrs
jg
xchg
lret
call
stc
test
push
xor
clc
ret
mov
push
ret
mov
push
lret
mov
adc
lcall
cmp
imul
pop
cli
add
sahf
aas
sahf
push
nop
leave
sub
xchg
push
in
cmpsl
clc
das
mov
sbb
add
ffreep
add
lahf
mov
lods
stc
pop
jmp
fdivl
pop
sbb
dec
inc
cld
fisubrl
mov
or
push
or
dec
aas
or
pusha
cmpsl
dec
jns
cmc
xchg
dec
stc
cmp
orl
sahf
and
mov
clc
sub
inc
xchg
and
push
jecxz
xchg
faddl
adc
adc
sub
outsl
adc
inc
mov
push
jmp
mov
jge
mov
sub
and
or
stos
adc
jmp
es
mov
ss
fsubs
mov
xlat
pop
or
or
loope
cmp
lods
dec
xor
mov
xor
inc
cmpsb
mov
int
lds
inc
movsl
pop
shll
adc
xlat
push
push
cmp
mov
and
push
int
out
int3
sub
dec
mov
xor
fnstsw
testl
push
xor
outsl
lret
ret
jnp
popa
mov
ljmp
dec
add
push
and
repnz
lret
movsb
push
js
add
mov
mov
xchg
mov
inc
test
or
lret
xchg
shl
orb
pop
in
in
test
sub
push
incl
fiadds
mov
mov
pop
lods
mov
mov
add
popf
cmc
and
pop
push
sub
and
lds
aaa
fidivl
lret
pop
or
cmpsb
shl
movsl
cwtl
adc
xor
and
insl
bound
add
jns
xchg
daa
lds
xchg
in
int
popa
pcmpgtb
into
inc
fiadds
cmp
add
rol
push
push
jns
jb
push
dec
adcb
test
adc
pop
lods
xchg
mov
sub
or
sub
inc
loop
test
rcrl
push
cmp
ja
jbe
adc
add
jno
movl
loop
add
mov
je
testl
repz
xchg
jg
scas
repz
pop
jecxz
aas
adc
leave
lock
or
pop
push
loopne
stos
js
test
or
dec
fstpl
cld
in
pop
pop
punpckldq
sti
xchg
jae
in
setbe
popa
xchg
test
jns
incb
inc
adc
stc
push
in
lods
fsubrp
movsl
loopne
ds
cmpsb
sub
outsb
mov
je
arpl
push
lret
sbb
xchg
xlat
je
mov
cmp
jmp
inc
push
lds
pushf
push
jecxz
lods
adc
arpl
mov
cmpsb
es
test
jmp
fiaddl
dec
add
sbb
xor
xor
ret
gs
loope
pusha
imul
les
outsb
bt
sbb
inc
idiv
rorb
or
pop
mov
jmp
sub
mov
dec
inc
in
pop
adc
jecxz
packuswb
ret
pushf
addb
adc
jno
push
fs
ret
out
dec
push
jmp
cmpsb
mov
sub
cmp
sub
xlat
stos
fdivl
addr16
shr
ret
pop
gs
leave
paddsb
dec
lods
rdpmc
int3
or
mov
imul
mov
lahf
and
sub
pop
inc
jo
repnz
push
insl
or
jg
push
sub
adc
cmp
lret
ficoml
dec
pushf
jnp
insb
leave
and
xchg
in
fldenv
mov
mov
arpl
jecxz
mov
adc
cltd
jecxz
mov
cmc
inc
lret
cld
push
js
push
mov
movsl
lods
scas
mov
insl
roll
div
add
pop
sbb
in
repnz
cmp
popf
jp
and
ret
cmpsl
aad
adc
aas
mov
push
adc
aas
cmp
roll
jmp
mov
push
in
rclb
cmp
decb
mov
inc
pop
and
dec
jecxz
add
or
rcr
mov
push
insb
mov
sub
int3
imul
mov
push
push
adc
mov
lock
shlb
dec
incb
stos
pop
sub
jnp
xor
sub
loop
mov
push
pusha
sbb
inc
mov
jl
sub
mov
inc
fldcw
push
pop
sub
orb
test
arpl
cmp
jb
jae
fcmovnbe
xchg
and
and
clc
aam
test
sbb
cld
or
cmp
sbbl
lret
sub
cmp
repnz
aad
cmpsb
lcall
shll
cs
jae
inc
loop
loopne
psubw
add
sub
addb
jecxz
scas
lret
and
jae
adc
out
movsb
jmp
lret
ret
adc
add
enter
push
inc
mov
xchg
push
or
lret
inc
cmp
inc
jbe
popa
loopne
faddl
data16
mov
gs
or
push
cmpsb
les
js
inc
rcrb
imul
add
pop
ja
mov
xchg
mov
add
inc
cmpsl
in
das
cmp
cmpsb
xchg
cwtl
dec
or
xlat
sub
out
lea
sub
mov
jle
pop
add
mov
sub
and
lods
cwtl
rorl
ret
ret
stc
xor
pop
mov
sub
fs
popa
jg
js
ret
mov
into
mov
dec
mov
in
inc
cmpsl
cmp
es
call
inc
ret
or
or
loopne
xchg
stos
icebp
xchg
inc
fimuls
lods
into
lock
push
outsb
and
lds
imul
push
jle
inc
mov
or
in
iret
sub
clc
pop
push
orl
inc
es
repnz
popf
pusha
and
xchg
std
adc
mov
xor
mov
and
rolb
push
addr16
stos
inc
lods
dec
fidivs
in
negl
enter
push
xchg
ret
scas
xor
and
data16
inc
and
sub
aad
push
inc
push
or
insl
ficomps
addr16
and
mov
outsb
loopne
ljmp
mov
stc
pop
mov
ja
and
fisttpl
and
ficompl
repnz
mov
aas
cmp
lods
inc
nop
shr
rclb
enter
or
adc
inc
std
inc
adcb
out
inc
push
adc
dec
mov
test
mov
jne
addb
push
insb
jle
pop
popf
dec
gs
push
ret
mov
movsl
pushf
movsl
pop
cmpsb
push
jmp
inc
leave
add
fcomi
stos
pushf
or
insb
pop
add
adc
cwtl
xor
cmpsl
mov
ja
stc
fiadds
loope
rol
jae
fwait
leave
call
cli
xor
jl
jb
sti
cmp
lock
xor
mov
mov
mov
jne
sub
jmp
jg
jle
popa
sub
sarb
rorb
inc
insl
data16
jecxz
fiadds
xchg
mov
mov
dec
stc
add
lret
shrb
cltd
xchg
mov
fwait
dec
push
or
sbb
leave
aam
ss
test
push
daa
icebp
jnp
inc
jbe
pop
pusha
insl
inc
xchg
pop
jle
popa
leave
mov
add
pop
in
repz
cmp
outsb
filds
fwait
push
gs
lods
sub
shrb
adc
aaa
fisubl
pushf
in
outsb
daa
fidivrs
inc
and
or
jge
or
or
and
jp
inc
pop
pop
data16
popf
scas
data16
arpl
pusha
lret
cmpsl
inc
shrl
mov
adc
in
jmp
out
jge
jae
lods
add
ljmp
xchg
pop
ret
dec
mov
inc
mov
rclb
adc
das
verr
mov
inc
cmpsb
cltd
push
ret
shl
loop
push
xor
pop
mov
insb
adc
jmp
ds
lods
add
outsl
jmp
loopne
xor
and
add
cmp
add
insb
orl
or
sbb
lock
dec
ret
outsl
stos
inc
test
loop
ss
and
fisttps
sbb
jb
mov
or
fs
push
add
sub
pop
push
pop
into
popa
jae
bound
movsl
hlt
xchg
mov
popf
adc
fisubs
sbbl
in
adc
jae
push
mov
bswap
loop
jecxz
mov
sub
sub
jge
fmull
fldcw
inc
sub
arpl
icebp
dec
or
imul
outsb
inc
inc
out
pop
sub
aad
data16
lods
lret
imul
sbbl
repnz
sub
in
sub
gs
sarl
loop
jecxz
loop
in
add
push
xchg
push
fldcw
lods
data16
mov
je
int3
push
test
loop
sbb
mov
repnz
movsl
hlt
or
push
lret
test
sar
push
dec
sub
into
fistl
lret
jmp
pop
add
testb
add
jo
xchg
stos
push
testb
mov
inc
lods
fistps
push
jg
imul
add
inc
jmp
jno
dec
fdivl
mov
movsb
and
cmp
mov
aam
xor
mov
xor
adc
inc
fisubrs
aas
sbb
cli
mov
cmp
dec
and
scas
pop
bound
into
test
in
dec
jbe
and
int
aad
leave
mov
std
int
sahf
dec
cmpsb
jecxz
pushw
stos
iret
loopne
mov
arpl
add
out
rclb
or
sbb
adc
inc
iret
inc
mov
cmc
sub
pushf
push
lret
aas
and
fisubrs
loop
lcall
stos
aas
ret
mov
and
dec
ds
das
pop
sub
fwait
inc
aas
mov
adc
loop
jle
movb
shr
movsb
jno
nop
mov
xchg
leave
xor
orb
aas
std
fstpt
pusha
aas
fwait
or
mov
mov
or
rcll
push
jne
inc
mov
inc
out
loop
fbld
jo
or
scas
cmpsb
lret
sahf
aam
add
jecxz
gs
xor
cmp
icebp
adc
imul
rorl
ret
mov
mov
xor
inc
aas
and
xchg
push
mov
adc
inc
ret
push
and
sub
sub
dec
inc
lret
and
ret
sub
jno
or
inc
push
in
add
sbb
jle
mov
addr16
jle
xor
lahf
jo
cmpsl
icebp
adc
lea
sbb
jae
stc
or
test
cmp
nop
mov
faddp
cmp
mov
mov
jns
sbb
sbb
rcl
fcmovb
aam
adc
add
jmp
add
test
inc
lea
or
cmpsb
outsb
pusha
xchg
xchg
mov
daa
dec
push
int3
jno
popf
cwtl
xchg
clc
pop
xor
lret
enter
adc
aam
gs
jmp
adc
mov
je
and
enter
and
ret
jbe
mov
sahf
push
cmp
popa
sub
cmp
xchg
add
sbb
pushf
mov
into
dec
sub
mov
iret
bound
out
mov
dec
cltd
in
jo
sub
lret
xchg
fs
into
in
dec
cmpsb
sbb
sub
inc
jo
push
cltd
pop
fisubrl
sub
push
nop
pop
loop
pusha
sti
rolb
rdtsc
push
jae
cld
fwait
xchg
dec
mov
jp
fistps
xor
xlat
dec
pop
popa
pushf
inc
insl
pop
fmul
repnz
stos
push
in
out
mov
jae
fs
inc
xor
xlat
mov
or
loop
xchg
fiadds
jle
repnz
jl
push
or
enter
push
xchg
cmp
adc
fnstcw
mov
xor
sub
shrl
fsubs
add
push
adc
jmp
jbe
jmp
push
stos
loop
mov
mov
pusha
xchg
cli
pop
adc
dec
aad
sub
pop
mov
jno
pop
inc
ror
into
in
push
mov
jl
ja
adc
lods
ljmp
push
and
mov
xorb
jne
punpcklwd
pop
cmpsl
inc
jl
pop
adc
jb
xor
lcall
ret
or
loope
push
inc
mov
push
or
jno
test
rol
jno
xchg
jl
gs
sub
ljmp
add
push
mov
pop
pop
roll
lock
mov
loop
dec
out
sti
into
enter
add
stos
lahf
in
sub
jmp
outsb
and
adc
fwait
cltd
lds
call
mov
and
inc
fisubrs
sti
sbb
xlat
dec
insl
call
arpl
loop
lret
aas
fisubrs
ret
jns
notb
xor
push
sub
jge
and
pusha
movsb
inc
icebp
pusha
jb
loopne
jae
push
icebp
insl
push
mov
in
xor
test
sbbl
add
and
ret
inc
ss
sub
xlat
repz
test
mov
call
int3
inc
cmpsl
pop
jp
call
ds
xor
stos
jmp
aas
ja
lea
inc
push
cmp
repz
ret
rcrl
push
in
stc
in
dec
and
out
sub
mov
add
fdivp
loop
subb
sbb
lds
das
fwait
pop
scas
push
fsubl
test
nop
out
jmp
imul
xchg
lcall
es
aas
pop
popf
in
movsb
adc
dec
sub
leave
popf
daa
xchg
test
lods
shlb
test
daa
lret
int
ficompl
fwait
jnp
lret
jns
aas
mov
push
sahf
xchg
xchg
jo
iret
push
call
aad
push
idivb
mov
dec
mov
lods
push
popa
xchg
jle
jae
xor
push
idivl
loop
push
shl
mov
mov
jge
xor
ds
lret
cld
std
inc
xchg
ret
fisubrs
pop
lahf
test
dec
adc
inc
sub
xchg
mov
rcll
add
insb
es
dec
icebp
mov
stc
push
loope
insb
pop
fiadds
stos
mov
movl
push
xchg
jae
adc
jmp
and
cmp
or
pop
lods
sti
mov
push
pusha
cwtl
aas
mov
cmp
and
sub
stos
std
xor
pop
push
and
mov
bound
aas
push
fidivl
add
xchg
or
add
dec
js
jne
int
xchg
and
int
pop
jae
jp
mov
mov
pop
imul
stc
cmpsb
inc
mov
jb
xchg
push
sub
ja
in
jge
into
pop
fcomps
inc
inc
loop
xor
add
jbe
add
mov
inc
cmc
mov
ret
cs
jmp
sbb
fisubrs
inc
mov
les
outsl
test
mov
lcall
repz
or
dec
jmp
pusha
mov
pop
add
shlb
aaa
mov
mov
mov
fwait
icebp
push
scas
lret
scas
mov
sbb
dec
lret
jmp
divl
push
mov
mov
xor
or
cld
ret
sbb
jecxz
dec
aas
sub
mov
lcall
mov
cmp
mov
inc
inc
and
fimuls
test
and
clc
arpl
cmpsb
xor
lods
push
pusha
adc
out
and
out
or
inc
push
dec
iret
inc
sbb
ffree
adc
lcall
mov
int3
pop
leave
mov
inc
push
repnz
les
add
lds
inc
adc
add
and
outsb
gs
lea
inc
scas
pushf
sahf
jns
mov
insl
xor
lret
mov
and
jo
inc
mov
lds
push
out
and
roll
repz
ret
sub
fsubp
jle
sbb
fwait
sbb
xchg
adc
add
mov
sbb
adc
sub
dec
jge
fists
pusha
or
pop
inc
fs
mov
jbe
enter
mov
adc
inc
les
jo
lret
mov
mov
nop
pop
mov
jb
ret
push
imul
xor
je
jmp
sub
push
inc
mulb
adc
jle
ss
loope
xor
sub
test
xchg
xor
jmp
frstpm(287
mov
leave
dec
mov
pop
and
xchg
je
xchg
jo
and
push
sub
pop
repnz
add
mov
pop
and
int3
fcom
popa
fwait
and
adc
imul
data16
lret
imul
sbb
stc
xchg
jo
jb
into
ljmp
and
pop
pop
and
out
pop
daa
mov
gs
mov
push
popa
daa
adc
stos
lds
add
adc
pop
mov
jmp
dec
repnz
adc
stc
jg
decb
into
sbbl
fidivrs
sbb
fidivl
aaa
scas
sbb
xor
mov
push
push
aas
push
add
cltd
xchg
addr16
dec
outsl
out
and
push
mov
pop
les
clc
jp
jg
fiadds
hlt
or
daa
xchg
adc
mov
sti
cmp
push
repnz
push
mov
lret
xchg
push
fistpll
test
inc
jno
shr
lret
fadd
inc
jae
ret
or
and
lods
sub
lods
jmp
aas
inc
imul
and
sub
nop
fisubl
xchg
out
and
jnp
js
adc
in
sbb
int
in
je
imul
adc
mov
and
cmpsl
pop
push
loopne
lret
ror
and
call
sti
mov
dec
into
out
dec
mov
sub
aam
jae
and
inc
aaa
pop
add
mov
cmp
mov
pop
iret
xchg
je
hlt
aas
es
fdivr
loopne
out
lock
sub
leave
insb
xchg
int
push
sbb
dec
inc
sbb
das
pusha
and
test
jle
mov
add
mov
or
mov
cmp
add
sub
mov
push
movups
bswap
add
scas
lahf
fldcw
pop
aad
xchg
sar
arpl
add
xchg
pop
loopne
out
pop
call
xchg
sub
push
inc
jne
out
int3
inc
cmpsb
sub
push
inc
sbb
insl
pop
test
into
jge
add
mov
clc
cli
sarb
jge
aam
inc
sbb
loop
in
imulb
mov
ret
insb
test
push
mov
fidivs
rorb
xchg
push
out
inc
push
cmpsb
mov
stos
xchg
ljmp
fnstsw
daa
xchg
nop
dec
dec
pushf
leave
xlat
call
or
cltd
inc
sbb
jb
mov
lods
pop
xor
jecxz
or
sub
test
adc
ja
in
stos
int3
push
jno
and
xor
popfw
js
addb
test
jle
aas
push
and
mov
mov
es
lds
and
fstpl
in
fidivrs
imul
xor
rolb
pop
bound
jnp
dec
inc
inc
pop
mov
push
mov
les
fcoml
pop
jns
and
test
aam
dec
fidivl
mov
fdivrl
add
fcomps
scas
ficompl
mov
cli
aas
or
lahf
sub
xor
fcmovb
into
fmull
pop
jmp
jmp
in
jle
push
lcall
xchg
mov
sub
ja
or
or
or
inc
jae
dec
je
push
data16
stc
jo
push
inc
inc
pop
aas
cmpsb
cmp
adc
les
adc
mov
and
mov
jmp
scas
mov
ljmp
xor
xor
movsl
hlt
adc
push
fxch
jge
mov
repnz
gs
inc
fcomps
js
loopne
dec
pop
inc
mov
sbb
add
insl
or
xor
mov
mov
es
ficoml
fmuls
out
add
adc
or
inc
js
cmpsb
addr16
xchg
jmp
lcall
into
sub
out
pusha
ds
inc
mov
push
repnz
fistl
shrl
outsl
les
ja
rclb
xor
jecxz
jno
inc
lret
jl
out
xor
arpl
mov
mov
mov
movsb
sub
subb
push
xchg
cmp
pusha
push
cmp
sbb
stos
cmpsl
aad
shr
and
ja
sub
shrb
lock
testl
lret
pop
and
and
push
data16
inc
ficoms
push
in
and
sub
dec
jp
or
sub
jo
test
negb
dec
sub
imul
mov
mov
shlb
or
loopne
mov
adc
jo
shll
mov
and
lods
mov
push
enter
pop
jo
sbb
and
mov
int3
std
mov
lock
adc
push
mov
sti
ficompl
stos
int
mov
cmp
mov
int3
push
push
das
dec
repz
adc
into
aas
dec
std
retw
repnz
or
mov
and
loop
into
mov
aas
pop
pop
dec
dec
or
ds
filds
mov
stos
dec
daa
cld
cmpsl
xor
sub
aad
lret
shlb
cltd
dec
lock
and
dec
pop
lods
loopne
adc
out
xchg
mov
ret
sub
jno
push
ja
dec
scas
call
int3
mov
imul
cwtl
sub
insb
jnp
repz
mov
mov
cmp
sbb
jmp
loopne
pusha
fcompl
daa
scas
stc
das
call
xor
movsl
xor
fucomp
jmp
iret
test
insl
clc
clc
pop
and
dec
xchg
fidivl
add
and
int
adc
sbb
inc
movsl
shll
ret
xchg
jle
dec
aad
cmp
ret
push
add
rcrb
sbb
dec
xor
daa
jns
mov
pop
lret
movb
int3
push
pop
push
jmp
push
cld
pop
adc
add
test
pushf
pop
fimuls
das
dec
out
inc
xchg
sti
out
cmp
adc
jmp
pop
daa
fimull
adc
and
add
adc
shlb
stc
in
ret
roll
push
mov
rorl
jae
add
inc
or
out
out
rcrl
jmp
or
ret
test
xchg
leave
cmp
and
insb
es
jns
adc
inc
pushf
jae
adc
xor
mov
ret
imul
pop
mov
ds
or
in
loop
and
or
aam
push
imul
push
lds
jmpw
data16
call
fcomps
gs
les
aas
pop
cmp
and
arpl
dec
sbb
repnz
addl
cmp
lds
mov
into
hlt
jae
xor
jo
dec
call
xchg
out
mov
aas
mov
addr16
xchg
inc
inc
daa
sub
gs
mov
sqrtps
mov
cmp
lods
or
inc
lret
cmp
data16
roll
cltd
in
mov
mov
jo
inc
mov
or
mov
neg
xor
add
jp
ret
jb
fimuls
pop
mov
sti
sbb
jl
test
xlat
jbe
or
jno
push
push
in
mov
ja
inc
pop
inc
stos
sub
push
or
sbb
movsl
stos
dec
movl
nop
mov
movl
stos
out
sub
and
inc
jo
mov
or
lcall
push
push
loop
push
ds
lahf
or
cmp
dec
jbe
and
cmp
xchg
inc
adcb
dec
ret
insl
aaa
ljmp
subl
push
insb
stc
jp
cmp
push
andb
bound
xlat
adc
and
movsl
adc
int3
cltd
cmp
cltd
cmp
inc
stc
imul
push
rcl
push
out
sub
push
mov
xlat
dec
in
push
mov
jnp
jno
dec
sti
test
or
andb
ret
adc
pop
fimuls
mov
jo
mov
and
in
or
and
cmpsb
aas
je
lcall
mov
fadds
push
mov
xlat
stos
jmp
rol
les
xchg
push
lret
sahf
and
push
mov
add
lds
push
dec
add
cltd
push
xor
mov
inc
rcll
fdivl
test
lahf
push
loop
stos
add
dec
or
fists
xlat
loop
and
jb
sbb
insb
mov
cli
xor
cld
into
jae
mov
mov
stc
lret
mov
add
mov
ljmp
fbstp
adcl
jae
mov
fwait
dec
sarl
test
push
ja
mov
bound
add
popf
pop
xor
in
cmp
loopne
gs
mov
lcall
ljmp
push
adcl
out
jne
push
pusha
loop
ret
fcmovnu
dec
aam
data16
bound
and
xor
sub
jge
loop
sub
xchg
mov
aas
push
hlt
fiaddl
adcl
push
jns
sub
repz
movsb
aas
sbb
xor
push
push
xchg
cmp
mov
cmp
test
mov
mov
or
mov
fists
or
loop
mov
loop
sub
loop
ret
xchg
or
inc
xchg
mov
xlat
rorl
aas
dec
out
rcll
pop
jno
pop
lret
data16
inc
lcall
or
mov
inc
hlt
jno
lahf
jle
das
add
xchg
mov
lea
and
lret
push
inc
xchg
gs
dec
mov
pusha
cmp
and
negl
jecxz
scas
lds
xchg
dec
xor
jo
mov
push
aaa
sbb
je
loop
inc
pushw
xlat
adc
lods
jecxz
repnz
lahf
mov
xchg
mov
xchg
push
mov
jno
push
movsb
lea
icebp
pop
xor
xchg
shlb
cmp
or
add
cmp
push
dec
jno
leave
dec
fcmovu
movsb
aad
js
in
bswap
sar
addr16
pop
ret
daa
cld
jbe
ss
rol
add
adc
jnp
sub
mov
push
rcll
js
sbb
mov
dec
dec
cmpsb
sub
mov
sub
jo
imull
cmp
pop
mov
mov
jo
mov
inc
sub
sbb
popa
jne
scas
sub
cmp
jo
sub
mov
xor
mov
sub
popf
js
inc
cltd
pop
and
lret
adc
insb
aad
repnz
leave
out
push
jae
adc
aas
push
test
inc
add
jb
lds
leave
xor
or
xor
rcll
daa
mov
leave
inc
lds
sbb
and
inc
lea
loop
cmpsb
adc
cwtl
ja
jne
cmp
xchg
cmpsl
jae
enter
addr16
popa
ret
push
call
adc
jecxz,pt
lret
push
in
ficoml
sub
add
mov
shlb
lds
mov
sti
sub
mov
add
push
mov
fnstcw
inc
mov
mov
jbe
arpl
or
or
adc
aaa
xor
pop
adc
dec
add
and
test
out
fwait
jp
clc
mov
pop
mov
mov
jne
sahf
pop
push
mov
mov
sbb
sbb
mov
jno
sub
sbbb
mov
adc
pop
cmp
mov
ljmp
hlt
mov
dec
lahf
pop
xor
add
lcall
loop
inc
jmp
and
cmpsl
andl
jns
push
enter
and
add
adcl
arpl
sahf
lds
mov
leave
jne
imul
dec
dec
cmp
and
inc
rorl
test
and
and
inc
adc
or
add
repnz
in
leave
cmp
test
sbb
push
pop
repz
lret
into
fwait
push
roll
in
adc
add
push
shll
bswap
xchg
pop
inc
mov
hlt
ret
aam
mov
add
cld
fcoms
ret
lret
fwait
xchg
add
jns
adc
punpckldq
jg
jecxz
inc
mov
scas
leave
push
das
into
xchg
js
scas
imul
sbb
mov
add
loop
bound
mov
call
push
sub
jne
jo
icebp
xchg
adc
or
cmpsb
cld
push
popf
push
mov
shl
adc
xor
mov
pusha
mov
xor
test
clc
sbb
sbb
test
push
mov
jecxz
dec
xchg
iret
mul
adc
dec
in
ja
movb
fidivs
sbb
out
inc
lret
cmp
insl
pop
mov
outsb
inc
push
push
lret
cmc
dec
js
jnp
lret
je
mov
shl
fists
xchg
cmp
mov
jmp
push
movsb
pop
inc
adc
inc
rcll
adc
fmull
add
inc
sub
in
dec
daa
jo
inc
loopne
adc
jae
mov
inc
movsb
jo
mov
sbb
in
data16
xchg
mov
mov
pop
push
and
sub
push
push
mov
loop
push
mov
movsb
or
das
fsubr
sbb
ljmp
aad
inc
in
cmp
iret
ret
fldl
test
jno
test
sub
stc
fst
mov
xchg
mov
xchg
jne
add
test
pop
in
push
xor
mov
stos
inc
sub
add
pop
sub
fmuls
cmpsl
les
cmc
and
ljmp
insb
fldcw
pop
sub
in
inc
push
fnstsw
adc
inc
pop
sub
pop
dec
fdivl
repz
fs
push
ret
lods
bound
fsubl
dec
aam
adc
sbb
adc
repnz
mov
cmc
aad
pop
sbb
or
enter
lds
hlt
out
push
xor
add
sub
repz
mov
rcll
dec
ficomps
es
ficompl
cmpsb
popa
and
pop
lret
dec
jno
adc
inc
ss
leave
aas
lcall
sti
jp
aas
dec
fcmovbe
iret
sbb
adc
test
lock
call
icebp
sub
inc
icebp
xchg
xchg
imul
lods
repz
imul
and
ret
addr16
push
cld
aas
mov
loopne
and
imul
dec
push
popa
push
cmp
pop
imul
xor
cmp
push
fsubrl
bound
repz
inc
mov
stos
add
fs
pop
and
mov
aas
pop
lods
jle
jbe
dec
adc
jno
je
adc
cli
xor
lock
pop
and
mov
outsl
decb
es
loop
mov
int
xchg
sbb
add
repz
push
stos
sbb
icebp
jnp
and
push
mov
xchg
ljmp
loopne
lcall
mov
enter
xchg
out
mov
std
sub
iret
push
pushf
cmc
bound
inc
shrl
inc
inc
call
dec
gs
cli
inc
in
repnz
pop
jle
xchg
mov
bound
xor
inc
ret
xchg
loop
mov
out
decb
sub
hlt
ret
repz
sbb
ja
stos
xor
iret
loopne
pop
sub
fdivs
pop
loopne
cmpsb
sub
mov
add
scas
pop
andb
push
pop
test
jb
pop
jp
and
mov
mov
mov
mov
jge
push
cmpsb
mov
fisubs
fidivrs
sarb
or
insb
mov
sub
xorb
sub
mov
daa
rorb
and
into
or
mov
mov
shll
gs
cmp
lret
mov
sub
dec
pusha
dec
mov
or
cltd
shlb
sub
pop
xor
jp
xchg
sar
add
fisubl
pop
sub
icebp
addl
mov
scas
das
and
or
mov
dec
loop
push
pusha
into
dec
lret
insl
xor
xor
jbe
lock
and
cli
movsb
xchg
in
push
ret
adc
aad
fimuls
jb
out
cmp
sbb
fidivrs
push
hlt
inc
push
and
mov
add
push
lcall
bound
btr
cmc
out
pop
ror
loopne
adc
adc
add
jae
fucomp
inc
jo
xchg
mov
faddl
outsb
cmp
je
mov
add
pop
inc
xchg
mov
pop
fdivrl
jecxz
sub
out
enter
push
mov
lods
or
mov
pop
pop
mov
xor
xchg
dec
andb
shll
shlb
es
jb
sbb
icebp
push
mov
mov
add
call
xor
cmp
jge
rcrl
xchg
xorb
ret
or
in
cmp
xchg
test
repnz
leave
add
xor
inc
fisubs
in
enter
aaa
sub
je
add
out
loop
repnz
pop
mov
out
fstl
add
cmpsb
stos
inc
les
jo
je
jae
inc
mov
loopne
cltd
sbb
or
push
mov
lret
mov
jmp
sbb
sub
jle
adc
pusha
jno
nop
sub
push
roll
mov
mov
aas
hlt
pushf
enter
pop
xor
ja
jp
push
lret
aas
lcall
cltd
inc
mov
push
scas
xor
and
pushw
mov
xchg
es
sub
mov
pop
mov
jo
cmc
and
in
int3
cmpsb
mov
mov
xor
shrl
and
add
iret
into
push
lret
add
sub
xchg
jmp
lea
addr16
fcoml
or
jecxz
dec
inc
outsb
mov
fnsave
mov
inc
or
mov
lods
in
dec
or
movaps
adc
mov
jbe
jo
pop
pop
mov
and
lret
push
leave
dec
xor
lods
sub
cmp
rorb
int3
out
pushw
lret
lret
nop
xchg
std
add
mov
arpl
and
mov
cmpsb
jbe
mov
out
divl
and
mov
adc
aas
adc
and
pop
insl
dec
fsubrs
sub
cltd
jle
das
ficomps
out
mov
sbb
push
inc
imul
fidivs
adc
into
clc
test
add
pop
dec
or
in
jb
enter
js
clc
repnz
enter
test
pusha
or
xorb
mov
lret
je
mov
jg
pop
inc
ja
repz
loop
mov
hlt
loop
into
or
or
cltd
cmp
or
dec
add
popf
xchg
fsubrs
mov
mov
mov
test
cmp
lret
jnp
leave
and
fcoml
inc
xor
or
jmp
mov
test
xor
sti
jmp
xchg
dec
les
repnz
dec
lea
xor
scas
push
xchg
cmpsl
xchg
dec
pushf
cwtl
int
iret
test
mov
aas
repz
and
lret
jmp
addr16
mov
fiaddl
ficoml
pop
adc
fucomp
mov
pop
pop
xchg
mov
js
movsb
push
lcall
data16
or
and
ret
and
and
push
les
xor
sahf
es
and
inc
mov
imul
dec
subl
test
mov
cmp
les
or
pop
stc
insb
sub
call
rol
leave
inc
push
test
jae
orb
cwtl
cmp
ja
inc
xor
xchg
pop
in
setae
pop
xor
and
sub
add
dec
repnz
fsubrp
imul
lea
andnps
lods
dec
mov
pusha
shrl
into
aad
fstl
inc
data16
add
scas
add
cmp
fistpll
jmp
and
adc
and
mov
push
ljmp
daa
and
or
stc
pop
xchg
jecxz
arpl
ret
jb
sub
callw
aas
xchg
es
cli
daa
mov
in
mov
mov
and
les
insl
sbb
jmp
ret
mov
push
fistps
jns
cmc
and
jl
clc
and
int3
lods
xchg
or
shlb
stos
push
xor
pop
addr16
lods
shrl
cmpsb
shrb
cmp
and
push
ds
les
test
sbb
mov
fsqrt
imul
or
mov
sbb
mov
out
inc
mov
adc
jae
ficompl
xor
repz
mov
call
mov
ds
insl
fcoml
pop
mov
subl
or
mov
mov
cmp
mov
or
push
cmpsl
imul
jae
cmp
sbb
cmpsl
fdivs
out
leave
jbe
dec
sub
int
dec
in
mov
push
shrl
imul
leave
adc
dec
jecxz
add
dec
push
adc
pop
xchg
dec
add
pop
enter
sub
adc
scas
fsub
adc
push
xchg
loop
pusha
lods
icebp
nop
fldt
sbb
ret
lock
cmpsl
aas
push
pop
out
cmp
call
mov
pop
inc
mov
mov
pop
icebp
xor
and
shll
aaa
movb
repz
mov
cmpsb
scas
add
fistl
scas
addr16
insb
adc
bound
push
repz
inc
ret
out
imul
in
add
mov
ret
aam
xchg
jnp
push
flds
into
add
push
mov
iret
xchg
push
sub
lret
push
jl
jmp
mov
fsub
or
adc
jo
ror
cmovg
jp
jb
les
push
lods
lods
jecxz
inc
pop
mov
pop
cld
jle
sub
mov
or
arpl
lret
repnz
mov
mov
xchg
test
sub
cmp
stos
sbb
add
mov
ret
cmp
leave
mov
push
inc
push
adc
push
repnz
xor
jo
loopne
sub
cli
jmp
mov
mov
into
mov
sahf
adc
push
in
push
test
vcomisd
stos
push
mov
pop
lds
mov
and
enter
dec
fs
shll
or
or
push
gs
or
lcall
mov
loopne
aam
or
in
add
push
adc
es
or
cli
mov
sbb
push
mov
and
fdivrl
sti
add
stos
lods
inc
jnp
sbb
dec
sub
fiadds
jo
push
mov
adc
cmc
or
pusha
dec
or
stos
xor
es
and
call
dec
incb
cmpsb
shl
cmp
inc
fdivrp
jae
aam
and
and
insl
mov
enter
stos
jns
mov
loop
lds
addr16
pop
push
stc
lods
repnz
cmp
add
iret
sub
push
xor
out
push
add
or
adc
mov
pop
lods
jno
ret
push
aas
cmp
aaa
adc
mov
mov
lods
and
xchg
aam
lea
inc
and
and
faddl
or
bound
mov
loop
out
sub
outsb
jle
mov
movsb
stos
in
mov
psubsb
les
shll
add
lret
xchg
mov
xor
js
cltd
into
xchg
xor
test
jno
xor
lds
fs
xor
mov
jecxz
ror
jecxz
push
inc
rcrb
ljmp
mov
jecxz
dec
mov
cmp
je
fldl
adc
cmp
dec
loope
jmp
sbb
sbb
xor
loop
jge,pt
or
dec
xchg
adc
pushf
mov
add
loopne
leave
xor
insl
lea
adc
mov
inc
xchg
cs
stos
data16
mov
dec
cmpl
movsb
and
pop
out
cmp
shll
loopne
sub
int3
and
mov
out
mov
pop
push
mov
movl
daa
or
push
inc
pop
test
inc
sbb
pop
pushf
pop
inc
pushf
jbe
jbe
dec
fnstenv
or
movsb
int
fs
fcoml
mov
add
jl
mov
or
mov
lahf
inc
dec
test
pop
or
push
push
fadd
lcall
pop
and
sbbl
or
push
sahf
pop
lret
xor
xchg
or
sbb
addl
and
fimuls
push
dec
je
ret
cltd
push
push
cli
loopne
and
fcmovnu
xchg
insb
aad
ret
add
inc
pop
aad
fldt
cmc
adc
or
add
outsl
ret
cmc
in
inc
pop
or
fs
push
jle
and
cs
xchg
dec
or
aaa
pop
inc
movsb
daa
pop
enter
dec
loopne
xor
insb
clc
inc
lds
dec
pop
xor
outsl
pusha
and
xchg
out
push
pop
mov
xchg
rcll
outsl
leave
fmull
dec
daa
repnz
add
xchg
push
movsl
ficompl
pusha
inc
pop
icebp
pop
xchg
mov
push
inc
sarl
mov
pop
add
add
lock
movsb
or
cmpsb
dec
sbb
not
sub
xchg
das
mov
cmpsb
clc
loop
imul
pmaxub
adcb
sbb
xorl
enter
js
mov
xor
jmp
jbe
pop
and
xorb
mov
in
pop
lret
and
movsl
sbb
jmp
inc
jle
test
in
sbb
insl
pop
sbb
mov
xor
lock
xchg
loop
and
cmp
sbb
lods
cmp
ja
adc
loop
dec
adc
mov
jmp
pop
lret
enter
dec
popf
leave
repz
fsubp
lds
dec
mov
mov
ret
xchg
adc
sub
jle
push
jae
mov
ja
rol
mov
pop
mov
mov
cmp
mov
fidivl
fcomip
aam
xchg
cmp
es
lret
sarl
lahf
mov
mov
mov
dec
mov
stos
lods
jmp
inc
aas
dec
mov
cltd
int
popa
push
fdivr
inc
push
adc
loop
cltd
inc
in
lret
lcall
or
test
xchg
push
aad
push
mov
pop
daa
pop
inc
loop
cltd
push
xor
and
push
jmp
or
fldt
adc
xchg
pop
jno
mov
push
or
in
and
add
sbb
jne
inc
mov
pop
enter
add
jae
stos
in
add
inc
jg
test
jl
fsubl
pop
sub
imul
push
push
sbb
adc
bound
cli
pop
mov
popa
sti
cwtl
and
aaa
push
dec
nop
loopne
pop
xchg
mov
inc
cld
ret
fildl
jb
and
fcmovb
es
ljmp
xchg
mov
js
push
xor
add
subl
stc
push
jecxz
std
iret
adc
push
adc
push
jns
andb
or
inc
test
cli
push
pop
mov
dec
push
mov
jp
sbb
dec
inc
mov
sbb
add
inc
add
fcmovbe
ret
pop
push
fcomps
add
int3
jbe
or
mov
xchg
daa
adc
out
jecxz
or
push
cmp
adc
aas
sub
mov
mov
out
mov
sub
jecxz
cmp
xor
jo
inc
int3
frstor
call
sbb
lcall
pop
repnz
sarb
lret
xor
insb
xchg
je
sub
push
jo
lods
nop
mov
xchg
add
dec
adc
les
push
faddp
sub
xchg
loope
jae
adc
cmp
int
popf
adc
jge
dec
push
and
inc
inc
add
insl
ljmp
jae
dec
pop
mov
mov
mov
xchg
inc
lret
xchg
push
enter
push
pop
adc
aas
rolb
scas
or
lret
std
or
ja
cmp
mov
aas
dec
lret
inc
add
add
cmp
push
pop
loopne
push
push
add
bound
loop
and
push
add
mov
stc
sbb
dec
sbb
fdivp
aas
push
sub
bound
push
mov
jo
in
xlat
testl
bound
mov
or
pop
leave
fnstenv
shlb
loop
scas
mov
fbstp
cmc
add
hlt
insl
xchg
cmp
xor
sahf
jmp
mov
mul
out
adc
fdivr
scas
cmpsb
jb
sbb
xchg
pusha
fmulp
dec
jg
int
movsb
pop
inc
jp
addr16
push
lea
incl
scas
or
add
enter
fsubr
fisttpl
lods
ficoms
sub
scas
ret
mov
ja
mov
sub
dec
enter
or
mov
sub
je
dec
hlt
mov
xlat
aam
adc
and
xchg
mov
jns
or
jbe
aas
adc
lds
jns
sub
pop
add
test
add
fcoml
fsubs
jnp
hlt
mov
xchg
aam
mov
sub
movsb
add
inc
mov
mov
xchg
pop
pop
jns
iret
mov
mov
mov
fidivrs
ljmp
leave
js
int3
jmp
pop
cmp
add
dec
sub
movsb
aam
cmp
mov
lea
xchg
sbb
jns
mov
xor
rorb
mov
lahf
arpl
mov
pop
dec
cld
out
popf
jno
rclb
inc
jb
inc
jmp
inc
enter
mov
mov
jo
dec
or
adc
mov
inc
insl
inc
dec
bnd
mov
in
inc
sub
in
push
movsl
push
or
jg
outsb
call
jecxz
loop
cli
push
xchg
mov
call
out
add
mov
jae
inc
jbe
fcoml
je
jne
mov
xor
test
in
inc
lods
arpl
sbb
push
icebp
fstps
movsl
pop
arpl
ret
hlt
dec
lods
or
or
shlb
or
aad
jo
int3
loop
enter
ret
gs
or
lds
sbb
adc
insb
jp
mov
push
adc
es
fisttpll
push
xchg
or
xor
and
inc
dec
sub
frstor
or
add
sub
cmpsb
rcr
xchg
into
push
lea
mov
or
or
inc
loop
sbb
data16
mov
fsts
push
loop
out
inc
lds
mov
push
sub
cmc
lods
sub
add
and
mov
loopne
daa
cmp
out
movsl
in
jp
repz
xor
lret
aad
sbb
pop
dec
inc
test
sub
shll
ja
xchg
jle
daa
fidivl
mov
fildll
mov
or
inc
adc
lods
jo
call
in
and
test
sbb
dec
add
les
mov
cmp
inc
jecxz
cmp
jle
icebp
lret
add
xchg
fisttpl
mov
popf
xchg
xor
ljmp
sub
das
add
jbe
mov
stos
and
loopne
sub
sub
inc
fsub
mov
ret
cmpsb
jbe,pt
and
dec
mov
shl
push
fbld
mov
or
call
dec
insl
test
mov
fildl
and
data16
push
dec
aad
and
shlb
pop
adc
jmp
xor
sbb
sbb
or
push
sbb
push
adc
add
inc
jbe
in
dec
mov
iret
xchg
jne
add
lods
fwait
add
xlat
or
into
aas
mov
enter
add
scas
inc
repz
inc
mov
mov
sbb
imul
movsl
nop
data16
ja
das
popa
mov
push
aas
mov
adcb
jo
jl
dec
icebp
xchg
push
push
rcrl
jno
pop
xchg
jnp
xchg
test
add
pushf
sbb
fildl
scas
sbb
jbe
jo
sub
cli
imul
sub
add
repz
and
pop
sbb
and
pop
mov
psrlq
pop
mov
pop
popl
mov
test
cmpsb
mov
fisttpll
sub
pop
xchg
and
call
iret
push
sub
push
and
mov
fsubrl
ficomps
sub
rorl
mov
jle
cmpsb
and
pop
jmp
cmpl
mov
add
xchg
sar
fcoml
inc
cmpsl
je
adc
sti
push
xchg
mov
std
and
add
in
jb
mov
daa
scas
jecxz
cmp
in
rcl
xchg
mov
cmp
pop
and
mov
pop
xchg
punpckhdq
enter
jge
inc
sub
xchg
or
push
ret
test
movsb
test
jl
pop
cmp
jb
inc
jo
push
nop
xchg
mov
icebp
aad
xor
mov
cli
add
mov
dec
insb
fbld
fcmovnu
inc
push
js
pop
test
xchg
xchg
pop
scas
dec
inc
push
jge
les
icebp
push
sbb
insb
sti
out
fcoms
push
adc
add
xor
loopne
call
mov
orl
andl
inc
xor
stc
push
inc
lds
les
int3
shrl
lods
jns
enter
sbb
xor
mov
and
imul
xchg
xchg
dec
insb
lea
jo
xchg
ficomps
add
popa
mov
in
rcrb
mov
mov
xor
or
addr16
insb
xor
mov
into
push
fs
sub
xchg
inc
ret
shl
sub
aas
add
loop
cs
jns
mov
push
int3
cmpsl
sbb
test
ja
dec
movsb
aam
sub
movsb
stc
mov
ret
sub
imul
mov
pop
sub
lcall
and
dec
and
movsb
xchg
cmp
jae
and
mov
mov
sarb
xchg
add
mov
iret
add
mov
sub
and
dec
andl
ljmp
jle
jnp
in
pop
mov
pop
mov
push
mov
iret
sbb
xor
mov
sub
jp
fwait
cli
sar
fnstcw
repnz
mov
popf
lea
sub
subl
xor
mov
rcr
adc
cmp
or
mov
and
jecxz
mov
mulb
and
xchg
inc
dec
or
addr16
mov
add
aaa
or
repnz
daa
pop
xchg
les
test
push
int3
jbe
fcomps
mov
xchg
out
pop
adc
inc
cmp
loopne
fldenv
jns
or
inc
add
lods
xlat
mov
push
inc
nop
cmp
jecxz
movsl
push
xchg
and
pop
add
ret
rcll
sbb
mov
lds
cmc
inc
ret
out
test
out
stos
mov
test
dec
push
ljmp
sarl
ret
call
loopne
sub
das
or
adc
popa
jb
xchg
movsb
and
andb
jmp
add
cltd
inc
loop
mov
je
aad
jae
push
or
add
std
int3
stc
jae
ret
jmp
add
in
test
pop
inc
sub
ljmp
loop
mov
pushf
jae
out
ret
push
lret
enter
test
repnz
add
loopne
inc
je
sti
and
jno
daa
dec
pushf
lea
add
sub
xchg
mov
cmpsl
and
inc
aad
mov
mov
xchg
xor
push
mov
shl
push
cmc
sbb
jb
jno
and
daa
stc
lret
pop
fsubl
in
pushf
xor
fwait
iret
fwait
and
and
test
or
addr16
lods
pop
pop
das
mov
push
lods
push
loop
pop
inc
mov
jge
and
push
outsb
cmpsb
jo
inc
pushf
push
dec
sub
inc
mov
aad
inc
adc
popa
pop
cmpb
dec
dec
ficomps
lods
or
in
aas
dec
inc
sar
add
out
ret
cmp
daa
inc
cli
sbbb
inc
fisubs
test
jp
inc
mov
adc
cmp
repz
push
inc
outsb
or
nop
or
pop
push
mov
inc
in
and
mov
jle
push
call
pop
or
les
add
xor
repnz
xchg
pop
bound
jle
xchg
sti
mov
xchg
jae
sub
jl
cmpsl
sarb
stc
in
into
or
imul
pop
xorl
xor
frstor
insb
inc
shrl
lods
cld
test
lret
cmp
repz
xchg
push
out
sub
lahf
loope
into
fadds
mov
stos
in
outsl
mov
push
sbb
insl
jae
adc
insl
std
and
in
insb
loop
jle
push
and
fisttpl
scas
test
pop
pop
jp
xor
xchg
cli
mov
jmp
push
loop
loopne
ja
xor
pop
cmpsb
aad
mov
fucom
lcall
jbe
xor
adc
mov
ret
add
rol
inc
or
int
mov
cltd
aam
in
xchg
xchg
sub
fstps
inc
push
lds
stos
xlat
in
cmpsb
jbe
inc
clc
jne,pt
lods
mov
out
fdivs
or
sub
aas
inc
mov
inc
pop
clc
push
mov
loop
jecxz
adc
pinsrw
lock
inc
mov
jb
mov
xor
lahf
add
js
adc
mov
in
scas
add
ret
in
test
dec
or
mov
inc
push
in
add
inc
inc
ss
lods
dec
in
mov
and
inc
aas
sbb
clc
loopne
push
sub
push
sub
shr
lea
repz
push
out
loop
jecxz
jge
pop
or
insl
imul
orb
js
jmp
add
mov
ficoms
mov
fdivs
movsl
movsb
lods
jbe
aas
popf
mov
shlb
inc
and
mov
dec
inc
inc
push
filds
ret
les
cli
jne
call
inc
popf
push
repnz
fisubs
adc
xchg
into
dec
lds
data16
xchg
jno
add
mov
and
test
pop
loop
in
popa
les
loopne
and
rcl
fdivs
lcall
mov
gs
fstps
pop
mov
mov
pop
jp
aas
push
inc
mov
push
pop
ret
and
push
push
dec
cli
and
fsubrl
xchg
mov
ja
ret
mov
sub
fsubs
sbb
mov
jmp
and
sbb
add
cmc
mov
xor
sub
add
stos
addr16
enter
xor
loop
lret
rorl
ret
data16
and
cmpsb
test
aam
or
leave
gs
shr
xor
dec
rcll
xchg
subb
gs
pop
adc
out
sar
xor
pop
sbb
scas
loopne
retw
adc
inc
stc
loop
dec
fidivl
jne
and
dec
ljmp
in
xchg
dec
rcll
ljmp
push
fsubrs
sahf
int3
lcall
push
fwait
aas
cmp
mov
sub
cmp
sbb
insl
dec
mov
adc
mulb
inc
mov
dec
call
cmc
outsb
sub
inc
fisttps
das
test
pop
pop
ret
lahf
call
or
mov
xor
daa
push
popf
popf
gs
in
daa
negb
push
fiaddl
movsb
xor
pop
je
xlat
repnz
scas
fisubl
inc
and
fucomp
cmpsl
aas
rclb
pop
adc
stos
mov
jmp
xchg
mov
or
fucomi
jns
popf
lods
jmp
jns
out
or
loop
sub
fsubs
pop
adc
cltd
cli
out
or
jns
fdivp
ja
jo
lock
aas
fists
fistl
fcompl
push
je
push
enter
inc
in
cmc
add
mov
aaa
dec
inc
or
adc
test
dec
notb
or
pop
lcall
pop
and
shlb
mov
mov
loop
pop
inc
cs
fnstsw
pop
push
pop
or
mov
push
nop
pop
inc
insb
stc
ficomps
xchg
jns
fnstcw
add
pop
push
xchg
jns
and
sub
adc
daa
insl
ret
jbe
ljmp
inc
decl
scas
push
and
lcall
mov
loope
pusha
xor
aaa
cmp
or
sub
jns
fs
lret
int3
xorb
mov
xor
or
idivl
ret
sub
in
jae
push
dec
insl
std
xchg
out
or
or
cmp
test
or
inc
and
stc
clc
sbb
fists
add
pop
mov
fisubs
xor
xchg
mov
sbb
bound
xchg
push
inc
aam
pop
lods
mov
dec
add
adcl
adcb
inc
arpl
add
pop
push
xlat
daa
jb
notl
jo
and
movsl
pop
jae
xlat
sbb
sub
mov
nop
xchg
out
xchg
lods
cmp
cmp
and
mov
daa
icebp
dec
pop
repnz
shlb
adc
out
stos
out
icebp
into
push
xchg
fldl
dec
add
fmul
jbe
sti
pop
addr16
mov
popa
lods
popf
cmp
mov
and
into
pop
ficoml
cmp
dec
push
mov
les
cmpsl
push
int
into
or
jecxz
bnd
or
adc
xlat
push
adc
jecxz
insb
ret
mov
in
push
ret
mov
lods
push
outsb
mov
test
pushf
xor
add
iret
jge
push
xor
add
int3
xor
adc
jmp
call
pusha
mov
shlw
test
add
nop
adc
dec
cmpsl
call
mov
leave
inc
pop
fs
sbb
icebp
in
lret
rorl
call
in
mov
aas
sbb
push
enter
dec
mov
movsb
cmp
mov
pop
mov
xchg
arpl
push
or
movl
pop
xlat
orb
lds
xor
pop
jp
mov
cwtl
mov
lret
imul
data16
ds
mov
andl
popa
lret
sub
jmp
shrb
push
mov
cltd
or
add
xor
popa
lds
les
mov
bnd
insb
int
arpl
inc
xchg
inc
pop
mov
cli
iret
or
sahf
push
mov
jo
fidivl
xor
push
cmc
faddl
cld
jp
aam
inc
mov
enter
cmp
mov
in
int
dec
or
sahf
rolb
mov
xor
jns
test
test
js
jl
imul
loopne
lahf
adc
add
adc
pop
lret
sub
in
test
add
ret
xchg
lods
fcoms
loop
fcoml
and
add
stos
ljmp
cltd
mov
int3
add
mov
add
jae
jno
sub
mov
aaa
xor
sbb
leave
cmc
ret
stos
out
lret
sbb
mov
test
repnz
in
pusha
lds
mov
cmpsb
sub
shrl
shlb
mov
pusha
repnz
dec
outsl
lods
repnz
mov
sahf
mov
or
jb
lcall
inc
movsb
and
lds
sbb
or
loop
in
in
dec
adc
enter
and
data16
repnz
nop
add
dec
test
test
mov
lahf
imulb
icebp
cmp
nop
adc
ret
loop
nop
xchg
mov
cld
mov
rcrb
orl
jb
std
rorl
repnz
insl
sti
push
pop
dec
xorl
dec
in
leave
mov
jbe
inc
enter
repz
outsb
in
leave
out
jmp
dec
mov
fiaddl
inc
inc
add
add
xor
scas
and
xor
aad
repnz
aaa
adc
xor
ficomps
ret
xchg
pop
sbb
mov
iret
ret
rolb
inc
pop
subl
ret
adc
xchg
cmp
cmp
mov
aam
int
inc
rolb
push
mov
xchg
popa
pop
add
dec
lret
pop
cmp
fdivs
fimuls
icebp
sahf
es
popa
lds
mov
movsl
sbb
iret
jne
dec
xchg
cmp
ljmp
pop
mov
je
dec
addb
bound
bound
popa
jl
jecxz
dec
rcl
jno
mov
pop
call
pop
mov
and
sub
daa
fcoml
or
insl
loop
lods
ret
lods
mov
test
daa
mov
pusha
shr
jne
stos
push
pushf
cmp
inc
lret
cmp
xchg
movb
jmp
mov
push
push
out
std
dec
pop
inc
dec
or
mov
xchg
xchg
in
dec
mov
frstor
les
addb
lcall
xchg
daa
mov
sarl
mov
xor
mov
imul
fcmovbe
pop
mov
rorl
and
sub
arpl
xor
lock
pop
daa
and
pop
call
add
jg
add
cmc
popa
ret
addl
stc
lea
rol
jnp
loope
xchg
sbb
xor
popa
add
cmpsb
inc
test
insb
fisttps
mov
lahf
lahf
xor
mov
mov
fs
mov
inc
je
and
push
sub
aaa
xchg
test
sub
out
sub
addl
out
dec
pop
cmp
sub
pop
xchg
and
sub
and
or
daa
adc
in
add
mov
jl
xchg
dec
mov
xor
adc
imul
add
sahf
popa
stc
lods
sbb
data16
aaa
mov
into
pop
lds
and
out
sub
push
cmp
daa
or
ret
add
pop
or
pop
sub
in
add
mov
adc
aad
insl
and
fs
jno
das
push
mov
dec
ds
dec
sbb
mov
push
mov
imul
jl
jb
sbb
bound
dec
adc
cld
shll
add
mov
dec
mov
jnp
jecxz
in
inc
or
xor
mov
rclb
mov
mov
xor
clc
pop
imul
inc
lods
popa
add
and
sub
cmpb
lret
xor
add
mov
jne
mov
jne
add
in
out
mov
or
in
popa
fs
dec
rclb
sub
mov
iret
lea
push
ficomps
fmull
into
sbb
adc
int3
jecxz
pop
pushw
push
cmp
add
sbb
or
dec
cld
jmp
push
loop
mov
les
push
sub
mov
or
stos
sbb
shlb
mov
inc
rcrl
mov
lods
add
dec
out
jbe
sub
sbb
jmp
sub
mov
adc
jmp
or
push
das
jg
cli
leave
fucomp
jno
js
jg
sbb
jne
xchg
bound
out
loop
bound
cmp
jne
adc
pop
xlat
sbb
xor
push
dec
pop
repnz
shrl
lret
bound
sbbb
std
mov
push
push
and
es
adc
jnp
or
sub
xor
hlt
iret
cmpsb
not
mov
cltd
ja
insb
push
mov
jecxz
sbbb
int
fdivs
jnp
and
lea
int
or
xorb
push
sbb
insl
pop
stc
insb
pop
rcr
pop
daa
xorb
fists
andl
add
and
mov
test
icebp
rclb
inc
cmp
or
lret
add
push
and
mov
xor
lcall
orl
cli
sbb
cmp
mov
enter
mov
rcrb
mov
pusha
lods
cltd
aaa
and
mov
lret
add
add
stos
in
jbe
inc
scas
adc
movsl
sbb
in
movsb
sbb
dec
ret
faddl
lods
and
pop
and
add
xor
aas
hlt
popa
out
imul
xor
dec
xor
mov
lret
shlb
jne
add
lahf
and
ror
add
jl
shr
pop
cli
push
pop
mov
or
flds
jne
fmuls
bound
in
and
jbe
inc
lcall
xor
inc
aaa
cmp
iret
ret
push
movsl
cmpsl
cmpb
stc
frstor
jbe
lret
dec
push
fcoms
leave
dec
jns
mov
xchg
jmp
cmpsl
cmp
jmp
pop
in
ficomps
test
mov
mov
pop
cmpsb
pop
and
sbb
xor
lret
int
push
cmc
fldenv
jmp
repz
icebp
pushf
loopne
sub
push
push
jecxz
jo
cli
ret
stos
jbe
mov
adc
add
cmp
ud1
ja
xor
cs
pop
mov
xchg
bound
dec
jecxz
sub
mov
sub
insb
ret
mov
add
daa
adcl
jle
mov
fcmovu
mov
invd
into
xchg
inc
rorl
call
sti
adc
cmp
es
jo
mov
dec
inc
jne
push
ljmp
aas
lods
xchg
in
and
loop
roll
push
xchg
lcall
sbb
mov
mov
xlat
sub
mov
add
and
stc
lods
mov
xchg
cmpsb
repnz
jbe
add
xchg
shl
fcmovb
enter
and
push
test
jae
push
pushf
inc
into
jg
icebp
xchg
adc
jo
xchg
ret
inc
ss
jge
bound
leave
mov
dec
and
pop
or
push
inc
les
mov
push
xor
pop
stos
enter
push
jo
stos
sahf
fiadds
and
rcll
and
mov
bound
cmpl
in
mov
mov
call
inc
pusha
shll
aam
mov
add
jae
mov
fistpll
movsb
movsb
sub
fs
std
push
das
push
sahf
dec
mov
iret
leave
int
mov
pusha
pop
mov
sub
mov
pop
nop
push
and
sbb
sub
pop
pusha
push
sub
add
add
jp
sar
inc
add
rol
popa
add
mov
int3
jo
daa
inc
arpl
inc
push
mov
inc
or
sub
imul
sar
pushl
aas
int3
pop
jmp
jb
sbb
fs
dec
mov
lock
pushf
jle
pop
stc
int
or
mov
data16
mov
cli
lret
xbegin
mov
pushf
and
add
push
push
or
in
popa
mov
loope
lcall
sub
lock
xor
mov
jp
jnp
push
jne
mov
inc
insl
inc
aaa
ljmp
xchg
mov
xlat
or
xor
xchg
pop
scas
xchg
jb
in
sbb
rolb
inc
xor
mov
inc
ss
neg
and
popa
dec
sbb
jbe
repz
inc
sub
movsb
das
inc
push
pop
inc
les
push
or
inc
arpl
rcr
jp
into
std
add
sub
and
add
lock
xchg
inc
stc
push
inc
sub
xor
out
sbb
cmp
fistpl
sbb
pop
shl
shl
lret
xor
sub
push
test
pop
lods
popa
testl
rcrl
int
lods
fmulp
cld
xchg
xchg
jl
std
loopne
mov
mov
ljmp
fsubs
clc
jl
and
in
mov
cli
xor
cmp
cmpb
nop
les
add
shrb
add
inc
xchg
lea
jecxz
dec
add
mov
and
out
mov
push
xor
sbb
push
mov
add
and
adc
lods
inc
std
sub
stc
loope
bound
les
and
int3
loope
in
jae
push
inc
jbe
or
add
call
cmc
or
les
in
push
pusha
mov
sahf
inc
jbe
pop
and
out
call
repnz
ds
loopne
and
test
add
cmp
pusha
add
and
in
sub
pop
dec
leave
aaa
xchg
mov
addr16
sub
adc
aad
jle
addr16
dec
cltd
sbb
or
ror
insb
loop
icebp
mov
iret
xchg
movsb
and
inc
adc
mov
jecxz
cltd
fildll
dec
or
in
dec
cmp
dec
cs
mov
mov
mov
jns
or
push
xchg
pushf
fstl
mov
repz
test
xor
mov
fcmove
leave
repnz
adc
in
in
push
sbb
addb
xchg
adc
ret
icebp
fists
xchg
xchg
loop
bound
cmp
pop
pop
sub
pop
icebp
outsb
sub
pop
xor
fs
addr16
dec
js
push
dec
sub
pop
movsl
xor
sub
sbb
fcmovnb
sub
int3
push
inc
ret
in
loop
lods
mov
shll
int
loopne
or
ficompl
std
into
aam
sub
add
int3
or
xor
ret
arpl
shll
scas
cmpsb
call
mov
daa
stc
xchg
cmpsl
in
dec
ljmp
dec
lret
sbb
clc
mov
or
xor
mov
enter
jp
jno
mov
dec
cmp
mov
jl
pop
sti
sub
and
repnz
mov
das
and
jmp
test
push
insl
cmc
test
les
add
xor
mov
mov
xlat
sarb
daa
sti
cltd
or
movsb
fwait
push
cwtl
dec
dec
add
jmp
fistl
mov
loopne
lea
inc
fwait
xor
sub
xchg
fistps
pop
pop
mov
sbb
call
pop
test
arpl
fisubrs
dec
aad
pusha
push
scas
das
ret
cltd
test
mov
orb
jle
dec
pop
adc
and
push
fcomi
jmp
sub
stc
adc
mov
mov
pusha
pusha
cmp
out
adc
add
dec
cmpsl
sub
cmp
fidivs
mov
push
pop
popa
xor
inc
fcompl
add
mov
dec
fiadds
cmp
fildll
fdivl
pop
and
ffree
inc
jno
fiaddl
mov
dec
sbb
cmp
mul
loopne
xlat
adc
daa
add
jp
movsb
test
lretw
addl
data16
cwtl
jae
mov
inc
push
and
test
inc
cmpsl
lea
daa
jnp
call
aas
pop
adc
xchg
test
in
addr16
xchg
lea
daa
dec
popf
stos
push
aam
mov
loop
lods
scas
dec
mov
lock
adc
inc
inc
sub
pop
loop
jns
clc
xor
lcall
cmp
sar
lret
fisubs
adc
push
jno
stc
sti
jp
adc
xchg
inc
mov
cli
jg
jnp
push
pop
jo
loopne
mov
jge
fistpll
iret
pusha
sub
add
xchg
daa
or
rcrl
mov
fs
mov
xchg
sub
inc
add
in
pop
mov
sbb
jb
mov
movsl
ljmp
jno
shrb
bound
les
js
pop
pop
es
jle
ljmp
mov
push
add
push
adc
push
popf
lods
xchg
scas
pop
nop
push
pusha
bound
lret
mov
adc
scas
arpl
add
pushf
sub
inc
push
std
loopne
pop
pop
sbb
dec
loop
loop
or
repnz
test
jo
pop
leave
xor
jne
iret
inc
lods
test
xchg
pop
jns
rcrl
cmp
data16
insb
push
loop
insl
adc
andl
mov
add
mov
fisubs
cmpl
xchg
dec
xchg
adc
stos
dec
xchg
jnp
xchg
ret
xor
jo
jae
push
stc
fsub
mov
out
jb
jecxz
ja
mov
leave
jp
mov
insb
or
addb
jle
xchg
lds
inc
add
adc
mov
lods
xor
inc
ds
aas
and
hlt
pop
enter
icebp
xor
test
lds
mov
sbb
test
cmp
inc
xchg
mov
or
mov
out
push
into
push
int3
xor
jno
mov
inc
push
ret
dec
inc
pop
in
or
lahf
push
inc
mov
aaa
mov
stos
and
adc
pop
sbb
cmp
adcl
dec
cli
sarl
fcomps
jne
lahf
pop
inc
push
and
loopne
or
inc
rcrb
jmp
sbb
push
cmp
mov
pop
inc
rorl
pop
jmp
xchg
sub
cmpsb
sbb
inc
lea
cmp
call
stos
dec
ficomps
mov
lds
adc
mov
dec
stos
dec
jne
stos
mov
and
or
cltd
out
shrl
add
lret
pop
dec
sub
stos
add
adc
std
fidivrl
data16
orb
ss
out
sbb
sub
jp
mov
lods
shll
insb
inc
adc
xchg
ss
mov
movl
es
xor
packsswb
push
das
ret
sub
enter
cmp
stos
sti
fiadds
daa
jbe
dec
pushf
push
push
mov
mov
fcmove
and
test
add
xchg
xlat
fsubrs
rcll
inc
test
add
add
inc
out
movsb
hlt
jecxz
jmp
sbb
dec
mov
push
ljmp
mov
push
nop
cmc
pusha
mov
test
pop
dec
addr16
loopne
testb
or
jmp
scas
std
in
or
xchg
inc
mov
and
push
call
inc
pop
sub
jle
dec
push
pop
cmp
lea
and
dec
incb
mov
fisubs
movsl
dec
xor
shr
ret
aad
sub
pop
push
push
xorl
movsb
xchg
xor
inc
pop
jle
stos
outsb
xchg
add
sub
fcoml
jbe
ret
inc
push
sahf
iret
mov
or
mov
sbb
or
test
popa
fisubs
mov
add
xchg
int3
pop
test
nop
push
repnz
push
mov
push
push
mov
mov
mov
xlat
mov
hlt
pop
adc
dec
sbb
aaa
das
cmpsl
xchg
in
adc
push
ljmp
arpl
lds
repz
jnp
cmpsl
mov
xor
dec
pop
out
call
xor
fdivrl
xlat
movsl
mov
inc
and
mov
rcrl
dec
xchg
es
inc
push
mov
ja
pop
mov
test
mov
dec
or
and
or
fdivrl
jecxz
enter
inc
lods
daa
lcall
lret
add
mov
inc
inc
aas
mov
out
dec
aam
cs
xchg
loopne
out
or
imul
jecxz
fbld
inc
pushf
pushf
fildll
call
add
out
sarb
repz
outsl
insl
ss
cmp
mov
mov
outsb
leave
lret
dec
pop
aaa
lods
mov
jb
push
test
pusha
pop
ror
xchg
dec
out
xchg
adc
inc
push
test
mov
inc
or
pop
and
inc
in
jno
sbbb
sbb
or
push
mov
sub
sub
xorl
dec
sahf
insb
push
movsb
lods
mov
xor
add
sbb
push
test
xchg
fldenv
bound
jno
call
jb
jns
xor
aad
adc
and
push
loop
push
sbb
lret
pop
test
ret
aaa
jl
test
aas
fidivl
jae
and
aam
jl
jmp
or
cli
mov
adc
and
add
loop
mov
nop
xchg
or
jg
or
fnstcw
mov
shlb
lret
adc
arpl
aas
inc
sub
push
cltd
push
ret
pop
pusha
adc
std
lret
pop
push
cmp
mov
dec
icebp
sub
data16
les
inc
xchg
push
cmp
lcall
push
add
push
mov
dec
and
or
sti
mov
es
xchg
or
or
mov
inc
dec
inc
cmc
sub
push
shr
loope
pop
jae
iret
sbb
jge
int3
add
stos
xchg
cmpsb
jns
je
pop
fimuls
pop
outsb
pop
cltd
or
frstor
ret
pop
adc
mov
mov
sbb
in
les
fldcw
jmp
loop
mov
mov
je
mov
shrl
mov
and
pusha
les
add
mov
sbb
inc
mov
inc
pop
sti
bound
push
pop
loop
insb
inc
test
mov
repz
inc
fdiv
jmp
add
xor
add
jle
insb
test
cwtl
hlt
cwtl
push
sbb
stc
testb
cmc
push
mov
test
cmp
addl
sbb
sbb
push
leave
inc
push
std
lret
adc
ja
fisubl
ffreep
ret
push
je
loop
push
std
stc
out
in
mov
or
inc
rolb
sbb
mov
lock
enter
insb
add
int
ljmp
xchg
mov
ret
push
je
out
push
rolb
inc
popl
hlt
jae
enter
jb
inc
sti
mov
mov
andl
cmpsl
pop
mov
jo
add
and
outsl
mov
or
mov
fstpt
bnd
ror
push
cmp
add
pop
push
push
dec
or
mov
call
fiaddl
sbb
outsl
add
cld
xor
xor
test
sub
inc
out
dec
and
andl
mov
xchg
add
push
lret
mov
mov
dec
jp
or
test
psrlq
les
loopne
es
inc
sbb
sub
dec
leave
xchg
loopne
jns
sub
xor
inc
imul
adc
and
lret
enter
xchg
fdivrl
pop
pop
aad
jmp
xlat
repz
test
mulb
mov
xchg
jae
xorb
ret
mov
add
push
and
ret
inc
mov
mov
je
inc
mov
inc
jl
leave
cli
jle
pop
test
lret
ret
int3
or
dec
rcll
inc
mov
ret
ret
dec
in
ret
dec
inc
lret
dec
fwait
jmp
and
jmp
mov
dec
les
les
push
loop
pop
fcomp
adc
jecxz
and
das
push
pop
push
mov
movsl
xor
or
cmp
push
fcompl
mov
lods
mov
mov
data16
lds
push
js
pop
pusha
inc
lea
mov
inc
xor
mov
rol
aam
mov
jae
stos
mov
push
xor
cmpsl
ljmp
rorl
mov
sub
cmpsb
jmp
loop
mov
pop
aam
jae
sub
pusha
vpcmpeqd
andl
mov
int3
push
mov
rcrb
inc
sbb
subb
cmp
imul
mov
ficoml
mov
dec
and
lahf
xchg
lret
repnz
pop
push
ror
es
lods
push
push
and
scas
xchg
push
xor
dec
xchg
in
bound
add
mov
int
fcomp
call
jl
inc
loopne
call
repnz
add
and
test
ret
rorb
addb
and
and
xor
in
and
pop
mov
ret
nop
or
xor
inc
sub
sbb
fildll
shrb
inc
jg
lock
repz
imul
ljmp
fsubrl
add
sbb
loopne
mov
cwtl
xor
dec
inc
and
push
mov
shrl
lds
cmpsb
nop
and
mov
out
pop
inc
adc
xor
cmp
jp
pop
mov
int3
xor
call
fisttps
loopne
or
dec
lret
push
dec
fiaddl
enter
mov
scas
xor
cmp
nop
inc
xchg
fldcw
xchg
and
pop
test
sbb
lret
inc
push
pushf
push
dec
and
daa
stc
xor
loop
cli
fstpl
sub
rcll
xchg
cwtl
add
mov
leave
xchg
inc
xor
ljmp
stc
int3
mov
stos
dec
pop
in
sub
cmpsl
cmp
movsb
jae
leave
sar
cmovl
jne
xchg
xchg
mov
out
jle
out
and
inc
sub
inc
movb
add
cli
xor
popa
sbb
dec
jno
mov
cmp
jl
lea
imul
and
lahf
push
adc
or
push
out
add
enter
cmpsb
jle
cld
sti
ret
cmpsb
in
push
pushf
lea
out
pop
xchg
adc
cmpsb
jnp
sar
xor
inc
ljmp
push
into
adcl
in
pop
fucomp
dec
adc
je
repz
jge
popf
push
daa
rclb
aad
leave
mov
pop
dec
mov
add
or
adcl
decb
xchg
cmpsb
and
sub
mov
fisubs
sub
xchg
stos
dec
test
lods
icebp
sub
daa
mov
jo
adc
je
or
push
xchg
dec
xchg
movsb
in
mov
pop
inc
pop
and
rcrl
das
xor
inc
xchg
loopne
rorl
fidivl
and
adc
bound
aas
mov
push
sbb
test
ss
xor
mov
cmpsb
enter
mov
imul
rolb
icebp
out
inc
in
or
mov
sub
mov
pop
jge
mov
inc
in
inc
addl
xor
pop
inc
add
icebp
sbb
aaa
push
lahf
mov
cpuid
jmp
inc
pop
jb
push
jae
xchg
and
sub
lret
jae
pushf
inc
xor
into
ljmp
sub
mov
push
lods
pushl
add
dec
sub
inc
mov
add
sub
jnp
or
pushf
lret
add
push
sub
dec
push
loopne
inc
leave
mov
int
xor
lods
stc
jae
pop
sar
push
leave
sub
sub
dec
shrl
rorl
adc
pop
lcall
and
je
loop
jo
and
ficoml
in
movb
push
lahf
aas
inc
inc
dec
and
stos
call
xchg
lret
dec
outsb
xlat
sbb
push
ret
jp
inc
dec
int3
push
repnz
loopne
cmp
jmp
and
xor
rcrl
sub
xor
dec
mov
push
mov
push
push
aas
push
sti
nop
mov
pop
or
popf
cld
or
sub
xor
sbb
add
mov
adc
ret
mov
insb
cld
xchg
dec
loop
leave
dec
in
dec
lods
mov
das
mov
ret
sub
push
jno
inc
arpl
leave
mov
fbld
or
pop
addr16
repz
jns
addb
es
js
sbb
sub
arpl
mov
xchg
bound
jmp
aas
push
lods
xor
and
jo
daa
sub
sbb
data16
add
inc
inc
jae
cmpsl
fcomps
ds
sub
push
dec
dec
mov
ret
popa
stc
sub
aas
pop
dec
xchg
hlt
dec
push
pop
ljmp
mov
loope
mov
pop
xor
sub
add
js
adc
fcmovu
add
inc
inc
fwait
jae
aad
mov
out
cmp
adc
ret
jb
or
dec
test
leave
cmp
dec
mov
adc
shlb
dec
daa
lahf
and
hlt
ret
pop
outsl
and
ret
fldenv
fisubrl
mov
test
xchg
jo
sti
mov
iret
or
outsl
pusha
pop
sbb
int
nop
fisttps
mov
add
jecxz
adc
mov
adc
in
ds
repz
xchg
es
xorb
test
int
cmp
add
and
nop
aas
js
clc
mov
sub
jp
mov
adc
mov
int3
mov
push
and
jecxz
and
inc
test
jl
aas
cmp
inc
out
xchg
add
lods
fimull
push
and
daa
hlt
mov
nopl
sti
cli
jo
inc
dec
add
scas
or
mov
bound
shlb
cwtl
jo
iret
xor
xchg
icebp
shrb
push
outsl
ret
jns
dec
neg
inc
hlt
lret
jp
sbb
dec
setl
cmp
sub
mov
and
lret
enter
pop
dec
adc
fs
mov
ljmp
mov
push
ret
sub
ret
lods
inc
adc
test
popa
cmpsb
js
iret
or
jmp
jle
test
insb
pop
adcb
out
jbe
xor
in
out
inc
push
imul
lock
xchg
daa
stc
jg
adc
rorl
pusha
mov
bound
push
mov
ja
addr16
dec
hlt
imul
mov
xor
dec
sbb
mov
das
bound
sbb
xchg
loop
mov
in
fldcw
adcl
cld
dec
jmp
orl
inc
sub
orl
lcall
mov
dec
mov
mov
iret
pop
mov
dec
adc
mov
dec
sub
ds
jecxz
lds
pop
cmp
ja
test
lea
addr16
pop
dec
cltd
cmp
cmc
stos
lahf
mov
out
jo
push
sti
cltd
mov
sarl
lock
or
xchg
cmp
fcomps
pop
ja
arpl
loop
pushf
push
add
pop
leave
lea
ljmp
jp
jge
push
mov
pop
mov
std
or
jbe
adc
lock
call
jb
fwait
shrb
push
push
push
dec
lret
popa
stos
cmp
xor
xchg
sti
add
lods
xchg
push
js
rorl
adc
daa
cmp
test
gs
std
ret
cmp
stos
stos
cli
scas
jge
mov
xor
pop
xor
dec
dec
inc
lcall
mov
cld
and
and
xor
popa
mov
cs
lcall
push
arpl
shll
mov
xchg
rorb
dec
stos
sbb
adc
inc
cmp
or
add
repnz
jno
jo
jno
mov
add
test
ljmp
mov
mov
lods
inc
aam
jo
ret
and
pop
push
test
jp
sub
add
lcall
pop
jge
mov
jno
mov
xor
add
icebp
stc
sub
or
xor
iret
aad
mov
inc
aad
enter
ret
testl
and
xchg
fdivl
jne
pop
and
lret
js
stos
std
xchg
out
sub
leave
test
cmp
mov
mov
loop
adc
lods
out
mov
leave
repnz
lds
xchg
mov
jl
lret
dec
cmpsl
jo
std
fdivrl
pop
sbb
push
insl
xchg
daa
mov
cmp
or
int
aas
and
sub
mov
push
push
jge
sub
jae
xchg
loopne
lods
add
cmc
sbb
inc
jge
jge
lea
daa
pop
repnz
je
fidivl
xchg
mov
shlb
lds
mov
xor
fcmovu
addb
call
pop
mov
or
int3
add
int3
ss
jecxz
mov
cld
addr16
pop
in
xor
cmp
inc
outsb
ljmp
fldcw
or
pushf
ret
sbb
loop
loopne
push
inc
gs
cld
nop
stc
ds
imul
xor
pop
jp
cmp
mov
xor
push
test
in
add
jbe
fcompl
sub
inc
mov
mov
cmp
xor
xchg
loope
push
stc
jo
and
push
jne
fimuls
aas
dec
aad
sbb
incb
sub
stos
lret
sub
or
insb
xchg
xor
gs
cltd
mov
jge
incl
sbb
repz
mov
int3
jno
sarb
pop
cwtl
xor
jge
sbb
ljmp
daa
stc
cmp
inc
movb
jo
fnstsw
ljmp
jg
push
sbb
insl
dec
es
lret
cmp
outsb
push
movsl
cmp
or
push
cmp
push
fimull
dec
sub
sbb
push
jo
popa
clc
push
push
out
jo
dec
jnp
xacquire
xchg
mov
cmp
ret
inc
inc
jae
pop
loop
dec
mov
daa
repz
push
cmp
lret
cmc
enter
jne
les
out
jb
jns
lcall
stos
cmp
je
fists
cmpsb
pushf
shrl
add
mov
mov
sti
push
inc
sbb
nop
dec
mov
sub
xchg
mov
insl
sbb
andb
in
inc
daa
sbb
sbb
xor
dec
xchg
cli
outsb
jo
shll
or
mov
xchg
movsl
lods
jmp
dec
fxch
sub
sbb
xor
fisttps
lds
lods
daa
cmp
sbb
cmp
fdivp
roll
in
mov
loopne
das
scas
cmp
sbb
les
mov
sbb
ja
nop
mov
imul
js
sub
inc
fdivl
sub
xor
mov
rorl
inc
cld
loop
add
jecxz
cltd
repnz
aaa
mov
popa
aas
loope
les
lock
rorl
jns
negb
dec
cmp
mov
mov
mov
dec
pop
cmp
mov
fisttpl
popf
pop
stos
add
loop
xchg
jmp
mov
mov
pop
mov
mov
and
inc
shl
mov
push
rclb
inc
jmp
aam
sbb
test
jecxz
or
xor
jbe
mov
mov
add
stc
inc
sub
cmp
or
mov
ret
ret
push
cmp
push
pop
jl
sub
push
scas
xor
dec
por
lds
or
mov
in
std
dec
es
loop
mov
mov
sub
adc
push
jb
aas
aam
mov
mov
lods
jne
cmp
pop
mov
inc
jmp
or
push
cmpsb
ret
xchg
lods
and
shr
add
sahf
cld
aam
or
sub
sub
addr16
cmp
fwait
jno
popa
cld
mov
add
dec
dec
cmp
pushf
rcrb
out
ficoml
mov
or
and
int3
call
sub
lret
mov
jne
lret
sbb
inc
ret
out
push
addl
daa
mov
lcall
in
lds
and
adc
dec
pop
notb
pop
mov
popf
lret
mov
add
cwtl
inc
mov
adc
dec
sub
sub
fmul
das
int3
adc
das
and
call
fmulp
mov
popa
dec
mov
andb
sbb
pop
add
sahf
shrl
mov
push
mov
lret
adc
push
and
cmp
popa
enter
outsb
xor
ret
leave
sbb
loopne
push
push
xchg
lds
outsb
pop
dec
xor
fistpll
inc
mov
push
pop
aas
mov
cmp
jmp
ljmp
dec
add
lods
jno
or
and
and
jle
jno
ljmp
shrb
icebp
jmp
inc
cli
lea
or
cmp
cs
jmp
pop
jg
lds
bound
lea
rclb
fldenv
leave
push
sbb
add
dec
fucomip
stc
pop
and
repnz
mov
xchg
cmp
into
and
outsb
add
dec
mov
xchg
imul
lds
mov
sahf
xchg
sar
jne
xor
sbb
cmpsl
sti
jb
adc
negb
jle
dec
outsb
jne
adc
test
leave
xor
in
loopne
mov
pop
mov
fdivs
inc
daa
xchg
xchg
sub
popf
jmp
xor
icebp
add
pop
nop
pop
or
jp
dec
movsb
push
aam
fsubrl
repnz
loope
xor
int
mov
inc
xchg
insl
sub
sub
je
je
lret
int
cltd
adc
push
adc
in
ja
or
fdivs
add
pop
sbb
jne
cmp
loopne
push
mov
jo
xor
fnsave
adc
xadd
ucomiss
add
call
inc
testl
push
lret
cmpsb
sti
inc
test
in
and
sbb
mov
push
sub
sub
push
pop
mov
in
xchg
les
nop
js
xchg
fsub
call
sub
adc
out
mov
add
cld
lock
outsl
addr16
lea
inc
xchg
lret
push
cmp
mov
inc
mov
lea
insl
jmp
lret
sahf
adc
xchg
lret
rcl
jb
push
int3
and
das
push
jg
jmp
pusha
jns
push
aad
ror
dec
sbb
mov
inc
mov
outsb
mov
pop
fcomip
fs
into
lea
dec
jge
sti
push
pop
incb
leave
clc
cwtl
xchg
das
xor
mov
dec
inc
roll
repnz
in
xor
jmp
mov
enter
or
dec
and
jl
cli
ljmp
or
sbb
repnz
sub
fbld
push
mov
movsl
mov
je
jmp
test
std
pop
xchg
and
jnp
fcoms
ror
jb
push
push
test
les
into
mov
and
sbb
ficompl
js
adc
movsb
data16
mov
jne
insb
pop
jno
or
mov
shlb
jo
and
push
or
icebp
and
les
in
and
leave
lds
push
push
push
repnz
aas
jle
arpl
inc
sub
loopne
push
and
rorb
push
cmpsb
loop
mov
call
stos
jmp
cmp
andl
vminsd
aas
adc
gs
pop
mov
cmp
add
loop
fs
mov
mov
mov
ds
iret
mov
shlb
jmp
pop
cmp
clc
or
outsb
pop
cmp
inc
sub
movsl
or
add
mov
mov
mov
xchg
jg
xchg
jns
dec
ret
ret
or
pop
add
lret
clc
mov
xchg
jmp
sbb
in
imul
lret
cmpl
pop
xor
inc
loope
mov
push
arpl
xchg
add
or
aaa
pop
fwait
xor
into
mov
push
enter
je
hlt
test
inc
xor
mov
aaa
jae
filds
in
shl
or
mov
or
push
movsb
subl
cmp
xchg
sbb
and
testl
and
fsub
jne
loope
jbe
jnp
shlb
enter
push
dec
inc
jl
and
push
sbb
xor
lock
add
std
fidivl
jp
lahf
fimull
fistpll
mov
push
shlb
lcall
mov
xchg
sub
idivl
dec
sub
push
sbb
je
xchg
push
shll
xor
das
mov
aaa
ficompl
js
fiaddl
and
fldenv
repnz
xchg
lea
clc
fcmovb
mov
pop
mov
add
outsl
fidivrs
push
addr16
push
lods
mov
je
adc
lods
fildll
rorb
cmp
mov
ret
into
rolb
scas
fsubrs
mov
rolb
das
rcll
test
add
push
arpl
pop
rorb
jb
jl
jg
fnstenv
leave
popf
push
pop
push
xlat
shrb
mov
jmp
mov
push
xlat
adc
sbb
adc
rorb
xchg
in
push
push
and
std
inc
les
out
outsl
repnz
inc
add
loopne
cs
inc
ret
sbb
push
test
movsb
std
xchg
ljmp
push
cmpsb
sarb
mul
icebp
scas
fdivrp
xor
dec
pop
dec
divb
jmp
popf
xor
subl
mov
dec
lock
lods
js
fcmovne
mov
int
mov
arpl
cmpsl
out
out
inc
cmpsl
push
lea
ret
int
and
cli
movsl
movsb
push
mov
add
gs
xchg
fs
mov
repnz
fistpll
ljmp
insb
mov
inc
adc
dec
and
jae
leave
stc
ds
xor
ss
add
cli
cmp
fsubs
dec
xor
fmull
push
mov
movsb
mov
fsubrs
lahf
mov
cmpsb
add
mov
or
ret
and
inc
push
push
scas
push
pop
lds
pushf
cmp
lret
lret
int
jb
enter
xor
je
mov
ljmp
aaa
bound
ret
imul
adc
shrl
cltd
out
mov
ljmp
les
scas
sbb
mov
pop
push
lret
sub
adc
data16
dec
mov
call
ss
add
push
adc
cmp
add
xchg
lahf
out
cmpsb
push
jo
add
pop
jno
mov
or
mov
dec
sub
outsl
lret
inc
push
jmp
inc
int
and
lds
or
cmp
or
scas
mov
imul
xchg
inc
in
fsubp
dec
jo
jbe
fsubrs
xchg
sub
cmp
mov
inc
push
cs
sub
dec
pop
mov
popf
and
clc
icebp
mov
fcmove
adcl
scas
push
in
sub
popf
sub
mov
push
stc
xor
pop
pop
xor
add
mov
xchg
cmpsb
int3
scas
jg
jae
and
pop
adc
fiadds
sbb
rorl
test
ret
push
jecxz
inc
push
xchg
daa
and
jmp
pop
pop
dec
stc
lods
mov
rolb
cmp
movsl
push
lret
lods
pop
xchg
dec
shrl
add
into
iret
addr16
insl
sbb
insb
cmp
movb
push
std
loop
jmp
mov
xchg
mov
les
arpl
sti
jecxz
push
add
sar
cmp
movsl
lret
cmc
jecxz
mov
xor
inc
addr16
jno
push
in
jo
xchg
dec
cs
rcrl
rcrl
imulb
dec
std
repz
inc
test
mov
test
ret
xor
mov
push
rolb
sar
push
dec
repnz
dec
subb
rol
push
ss
and
movb
faddl
repnz
and
sbbb
mov
xchg
push
mov
push
or
lret
cmpb
add
out
inc
inc
enter
sbb
add
inc
inc
inc
incb
jl
cwtl
sbbl
inc
cmpsb
aas
call
dec
push
jae
xchg
lret
jo
lods
mov
mov
mov
in
xor
daa
pop
popa
test
in
jecxz
sub
add
aas
jp
ficompl
jecxz
inc
lret
and
cli
or
pop
jecxz
add
adc
loop
add
popf
dec
and
dec
and
and
jecxz
add
inc
hlt
js
xor
inc
pop
jno
inc
movb
test
jo
or
lock
loop
shl
mov
and
or
in
and
int3
pop
push
lret
dec
rorb
jl
cmpsb
das
pop
aad
cwtl
shll
lret
pop
and
mov
jne
add
and
mov
pop
mov
pop
and
jle
rcll
imul
push
lods
or
push
pop
and
pandn
lock
push
inc
mov
or
stc
mov
aas
mov
test
mov
jl
add
das
fdivrp
fnstsw
adc
sub
jle
iret
adc
sahf
je
fbstp
pusha
inc
xchg
add
mov
push
cmc
and
and
and
mov
dec
lret
mov
std
btr
dec
sbb
jmp
or
jmp
sub
enter
sub
inc
fisubl
xchg
cld
sub
repnz
jl
adc
neg
insl
mov
sbb
jecxz
xchg
adc
xor
pop
and
jo
mov
push
inc
push
cmpps
in
icebp
je
aaa
mov
sbb
mov
add
adc
je
jo
xchg
inc
mov
xchg
xchg
imul
je
insl
pop
add
pop
inc
pop
adc
fdiv
sbb
push
dec
pop
rorb
jl
outsb
ficomps
mov
movntq
cwtl
outsl
in
sub
lahf
mov
push
dec
adcl
push
sub
mov
jae
dec
loop
dec
or
rcrb
and
sub
fs
and
add
inc
or
mov
lahf
mov
inc
jae
movsb
add
add
or
and
or
stc
lea
je
mov
xor
mov
xor
pop
and
mov
out
pop
in
movsb
push
cmp
jmp
aas
sub
ret
lods
sbb
inc
mov
pop
es
les
or
hlt
jb
and
xor
rol
dec
imul
inc
and
inc
mov
push
inc
stos
sbb
cmc
movsb
mov
xor
jno
or
rcrb
sub
test
or
es
lock
stos
mov
sbb
xor
lret
ljmp
or
filds
pusha
xchg
inc
lahf
pushf
mov
stos
orl
into
lret
cli
dec
or
and
and
lods
cmp
push
adc
ficompl
aaa
inc
cli
mov
inc
stos
and
mov
lea
fwait
ds
or
addr16
mov
xchg
dec
xor
dec
inc
insb
pop
add
addr16
das
pop
ja
cltd
leave
lcall
int3
xor
lret
push
scas
add
push
ret
xchg
subb
push
sub
and
repnz
adc
shlb
push
or
call
lahf
push
data16
les
sub
js
push
mov
push
cld
insl
push
lods
movsb
sub
aad
sbb
jb
jno
fidivs
push
xor
mov
adc
fimull
pop
outsl
aaa
and
sbb
inc
push
bound
adc
jo
lds
outsb
lret
push
push
sub
ficoml
mov
push
cwtl
ret
dec
loop
aas
add
into
test
data16
out
inc
cwtl
xchg
inc
sub
xchg
test
int
iret
xor
pusha
insb
daa
aaa
and
rorl
repnz
inc
mov
cs
jno
cld
sbb
pusha
dec
lds
sub
repz
lock
mov
inc
pop
adc
inc
sbb
jge
xorb
fsubrs
call
inc
inc
into
mov
mov
inc
push
inc
mov
aas
cmp
mov
inc
sub
mov
and
push
jae
scas
push
jb
pop
fwait
xchg
ss
rolb
sbb
stc
test
and
popa
push
loop
pop
bound
add
push
lret
push
adc
adc
xor
es
or
out
jae
outsl
in
or
sbb
jmp
add
sub
push
lods
in
shr
lea
push
push
sub
push
mov
mov
sbb
jmp
aas
loope
dec
jb
xchg
out
inc
inc
test
xchg
inc
adc
inc
push
mov
imul
xor
das
andb
call
sbb
jo
out
in
loopne
repnz
mov
xchg
test
loope
rcrb
call
push
ljmp
push
push
out
mov
aam
xchg
pop
ljmp
ret
push
push
leave
loopne
pop
push
or
push
dec
outsl
sub
aam
cmp
pop
push
and
add
stc
leave
loopne
mov
pushf
out
push
lock
lea
sub
mov
sub
les
jnp
stos
sbb
add
cmp
sub
sti
add
cmpsl
ret
xchg
lret
stc
aas
cwtl
popa
jns
popa
pop
mov
sub
rorb
pop
pop
cmpsl
test
xor
push
cmp
mov
or
adc
shr
cli
mov
jno
andb
push
dec
sub
shlb
push
lret
pop
mov
cli
push
push
rcr
int3
jae
add
test
fwait
push
jmp
sub
add
add
ret
inc
aad
outsl
mov
jl
pop
mov
cld
sub
data16
jno
push
mov
fidivl
fcmove
dec
ljmp
fiadds
adc
mov
ljmp
in
loop
rol
sbb
sbb
leave
pop
call
xor
push
or
xchg
ret
xchg
lods
cmpsl
and
add
ret
pop
rcrl
mov
sub
fcmovnb
sub
adc
fiaddl
inc
sub
cmp
inc
jae
adc
adc
or
in
mov
inc
repnz
xchg
cltd
sub
insl
lds
movsb
sbb
xor
repnz
and
mov
push
adc
leave
and
jle
ljmp
cmp
cmpsl
loop
nop
into
testb
loopne
nop
dec
add
mov
and
xchg
sub
test
movsb
ficoms
pushf
fs
and
shl
mov
inc
mov
movsb
and
xchg
push
push
loopne
je
dec
cmp
sub
loopne
fwait
movsb
int
sub
sub
inc
stos
cbtw
jbe
mov
jne
loopne
push
or
stc
loopne
adc
pop
xor
mov
and
adc
inc
pop
imul
pushf
call
pusha
insb
dec
mov
lds
add
inc
xchg
fsubr
push
loopne
das
lea
cmc
nop
dec
adc
into
adc
ljmp
xor
cmpsl
mov
mov
push
mov
test
sub
aas
inc
mov
jbe
roll
lret
stos
ret
jo
aaa
sub
ret
inc
pinsrw
dec
mov
mov
add
fisttpl
mov
out
mov
xchg
mov
cmp
mov
push
fdivp
mov
mov
sti
sbb
sub
or
mov
enter
jbe
cmc
retw
mov
mov
pusha
mov
xchg
mov
push
cmc
push
xor
inc
loopne
cmp
or
inc
push
mov
lahf
push
inc
xchg
xchg
icebp
insl
ret
call
rcrb
sbb
adc
xor
add
iret
and
mov
aad
enter
das
insb
fimull
dec
ficoms
adc
loopne
repnz
mov
stos
push
or
jg
lcall
dec
lret
fcmovb
sub
xchg
inc
imul
clc
pop
mov
dec
xor
dec
adc
mov
mov
push
pop
repnz
mov
push
outsl
out
shlb
popa
push
sub
mov
lods
sti
pop
jbe
mov
or
cmpl
aas
pop
popa
xchg
pop
imull
mov
xchg
jae
pusha
lods
jmp
mov
lret
fidivl
hlt
mov
cmp
popa
fsubs
enter
test
and
call
push
popa
mov
push
shll
push
gs
es
xchg
push
pushf
mov
mov
cld
add
pop
std
mov
lret
movsb
int3
aas
pop
mov
sub
xor
ficoms
jae
mov
dec
subb
dec
insl
ret
js
inc
out
mov
xchg
aas
aam
push
mov
inc
xor
iret
sub
movsb
popa
mov
sub
inc
testb
fisubl
in
inc
das
jbe
adcl
lret
loopne
sbbb
iret
xor
and
inc
pop
fldl
add
adc
push
arpl
dec
sub
xor
je
lea
nop
xchg
ss
sub
jo
test
fiadds
xchg
pop
push
push
aad
inc
shl
jo
push
pop
arpl
cmp
aad
inc
xlat
inc
pop
inc
daa
sbb
sbb
mov
ret
decl
mov
push
pop
inc
sbb
mov
cltd
in
jbe
in
cld
and
and
sti
lret
ja
daa
movb
loopne
in
cltd
push
int3
mov
sub
sub
xor
rep
loop,pn
add
fstpt
pop
push
hlt
adcb
aaa
xor
mov
xor
xchg
inc
cmpsb
aas
xchg
push
pop
add
add
popa
mov
add
cmpsl
repnz
push
movsl
and
jnp
push
inc
mov
lods
inc
jne
adcl
mov
pop
test
enter
je
jno
pop
push
adc
or
ret
out
xchg
or
jg
fdivrl
cli
sbb
in
inc
mov
aaa
sbb
jmp
lds
adc
mov
push
jns
add
stos
ret
lods
sbb
int3
mov
push
jnp
or
and
jmp
pop
into
ret
sbb
sbbl
ret
insb
or
inc
and
lea
lods
pop
push
jne
lods
fwait
lock
fdivl
mov
orl
cmpsb
je
aas
loopne
sti
lret
mov
pop
call
cmc
scas
pop
add
push
arpl
mov
insl
dec
or
shrb
push
jmp
fucomp
lods
shlb
das
pop
data16
xchg
iret
in
in
leave
jne
sub
ror
add
add
into
add
int3
shlb
cmp
stos
xchg
or
ret
scas
add
mov
mov
dec
stos
cmova
sbb
fadds
cmc
xchg
icebp
popf
xor
in
or
ret
or
mov
es
add
scas
cmc
das
xchg
jg
ss
xchg
fs
mov
pop
adc
lret
mov
and
jno
icebp
ljmp
ljmp
adc
jnp
cld
sub
out
sbb
mov
jp
ret
ljmp
adc
cltd
jmp
mov
sbb
fistps
mov
add
sub
loopne
movsb
cmp
arpl
lods
add
ljmp
lds
adc
cmp
lock
or
add
add
lods
push
ret
jbe
es
sub
test
pushf
adc
shrl
xchg
bound
mov
mov
pushf
aas
scas
xchg
xchg
jnp
mov
rclb
mov
rorl
push
mov
es
arpl
pop
ret
push
sub
test
lea
sub
and
pop
lods
cmp
sahf
mov
inc
popa
outsl
adc
dec
xchg
jae
fldl
lock
sbb
fimuls
sbb
imul
dec
and
call
sbb
into
push
sub
push
push
mov
jnp
int
rcll
adc
pop
pop
sub
xchg
or
mov
and
sarl
test
adc
cmp
dec
orb
movsl
in
sub
cld
push
lcall
ret
mov
idivl
or
jno
out
addr16
push
adc
insl
push
ret
imul
fimull
pop
xchg
adc
ret
inc
subl
sub
iret
add
leave
sub
fs
or
cmp
pop
push
push
insb
mov
or
or
xchg
mov
lods
fs
xor
fisubrs
cs
push
repz
es
js
sar
iret
lea
ss
push
xor
imul
push
daa
pop
mov
jnp
inc
mov
push
or
jmp
cmpsl
loopne
adc
imul
lahf
and
ret
add
push
lret
push
test
adc
inc
gs
push
lret
push
jo
mov
rcll
lret
ret
jmp
add
jecxz
test
or
cli
cmpsl
xor
lock
push
shl
pop
cmpsb
mov
xor
jbe
jle
and
xorl
arpl
pop
add
loopne
sub
jnp
arpl
and
icebp
js
daa
pop
mov
data16
pop
vcvtpd2dq
arpl
test
cmp
or
add
data16
add
lar
je
add
test
ss
fwait
insb
pop
adc
jmp
jns
mov
imul
push
jp
decl
in
imul
lds
ret
inc
movsb
push
clc
mov
into
or
movsl
iret
sarb
xor
fisttpll
cmpsb
into
and
xor
repnz
mov
jns
sti
jne
cmpsl
cmpsl
push
jns
bound
test
pop
ljmp
inc
jae
addb
bound
inc
rcll
ffreep
cmpsb
repnz
pusha
add
fisubs
out
mov
jecxz
push
add
lret
out
ljmp
sbb
pop
pop
add
jb
out
dec
inc
cmp
pop
inc
add
mov
faddp
ds
adc
sbb
inc
mov
cwtl
dec
add
inc
test
in
and
mov
dec
adc
fcom
cmp
shl
in
xor
lea
scas
pusha
cld
test
or
sbb
sub
rcl
pop
jecxz
mov
sbb
add
inc
jae
mov
mov
cwtl
fwait
mov
cltd
pop
cmp
movsb
lods
cltd
push
lret
mov
jg
lods
adc
push
sub
push
add
pop
adc
in
push
fstps
pop
fwait
nop
add
loopne
inc
inc
insl
ret
test
pop
dec
mov
call
add
ss
push
cs
mov
rolb
push
outsb
mov
daa
xchg
mov
in
cmpsl
leave
and
and
loop
daa
xchg
xchg
lahf
sti
js
dec
mov
inc
mov
mov
pop
test
sub
xor
cmpsl
fsubrl
in
sub
and
sub
push
or
sub
push
mov
dec
jo
mov
and
lock
inc
cltd
jne
jnp
fdivs
xlat
mov
mov
mov
mov
dec
cli
jl
hlt
daa
sub
aas
addl
arpl
xor
inc
jo
adc
repnz
jecxz
cmp
adc
loop
mov
fisttpll
int3
pop
xchg
sub
roll
pop
xor
cmpsl
les
in
pop
mov
out
out
push
pop
shrb
into
mov
or
aad
insb
loopne
aas
mov
push
fstpl
add
cmc
xor
or
sbb
jp
push
cli
adc
mov
sarl
mov
fisubrl
cmp
rcrb
mov
addb
rolb
mov
xchg
sbb
rorb
les
pop
gs
push
pop
push
xor
pop
pop
pop
xchg
repnz
incb
inc
or
mov
push
roll
cli
pushw
sub
call
pop
and
pop
jno
lret
jmp
or
jmp
mov
loopne
sbb
hlt
out
pusha
cmp
inc
jns
cmpl
jo
aas
jmp
daa
idivb
mov
add
in
ret
cmp
pop
mov
mov
in
pop
jecxz
lods
cmp
addr16
aam
fwait
ror
ret
call
popf
es
out
jecxz
mov
cmpsb
daa
fs
cli
cltd
adc
dec
inc
pop
or
fisubrl
out
xchg
test
xchg
ret
aas
cmp
and
mov
mov
push
lods
add
dec
scas
cmc
mov
push
push
sub
rorl
cli
pop
and
mov
and
xor
lahf
sub
sarl
stc
out
bound
or
loope
mov
aam
pop
cmpl
inc
test
and
xlat
ss
stos
test
inc
and
test
cmp
add
dec
pusha
dec
stos
or
fisubrs
adc
inc
stos
fs
out
sub
idivb
inc
mov
jp
pop
pop
fildl
imul
insb
push
mov
inc
imul
jg
shrb
int3
xchg
rol
fcmove
pop
inc
xchg
movsl
and
and
mov
push
inc
inc
cmp
jb
cltd
push
sti
mov
pop
adc
lock
scas
movswl
jo
addr16
roll
mov
lcall
das
jae
mov
outsl
rclb
push
sbb
lahf
inc
or
rcrb
pop
cmpsl
inc
cmc
mov
loopne
popf
cmp
popa
or
mov
pop
imul
push
mov
sub
jl
jno
aad
movzbl
rep
in
lret
adc
pop
stos
aad
ja
xchg
xchg
push
pop
cs
inc
xchg
pop
dec
popa
repz
inc
add
jno
sub
xchg
add
add
pop
pusha
ret
or
pop
mulb
adc
popa
je
pop
insb
iret
inc
add
stos
subl
cmp
cmp
mov
repnz
inc
cli
jecxz
sbb
sbb
jne
test
inc
enter
incb
repnz
loop
xorb
jecxz
sbb
mov
mov
dec
push
dec
cmp
sbb
rorl
stc
ljmp
adc
jp
js
cli
pop
popf
xor
repnz
int
les
leave
lret
add
aas
ret
mov
ret
xor
shl
sub
iret
lcall
inc
int3
repnz
xor
mov
lcall
xor
addb
lcall
pushf
fwait
add
icebp
dec
add
inc
inc
mov
jne
mov
mov
lret
lret
jmp
xchg
mov
pushf
xchg
inc
icebp
push
in
sub
and
insb
mov
push
cmp
les
rolb
pop
mov
and
loope
popf
aas
in
test
popa
jno
bound
cwtl
fs
and
mov
sub
movsl
mov
les
inc
cltd
out
dec
pusha
cmp
or
sub
sbb
sub
mov
test
sub
mov
out
fistps
dec
xor
push
mov
mov
add
and
xor
jno
addb
mov
inc
jge
sahf
inc
cmpsl
ret
faddp
add
int3
inc
or
loopne
push
and
iret
in
imull
mov
jnp
adc
mov
mov
addl
mov
and
push
popa
pop
stos
out
movsb
loop
inc
sbbl
sub
clc
movsl
into
sbb
pop
or
fsubrl
lcall
mov
test
mov
sub
je
test
push
xchg
cmpsl
jne
and
call
and
mov
cld
mov
adc
cmp
ljmp
shr
addr16
mov
das
and
and
bound
pop
add
or
aas
mov
fsubl
dec
leave
aaa
daa
bound
pop
imul
xorl
fisubl
inc
cmc
orb
pop
xor
ret
inc
pushl
pop
out
shrb
int
adcb
dec
fistl
lret
push
add
call
xchg
pop
sbb
gs
inc
add
aaa
and
or
push
mov
ss
mov
clc
ret
arpl
addr16
and
sub
mov
les
jae
push
lods
fadd
mov
movb
repnz
dec
cltd
inc
push
mov
test
lahf
or
push
adc
dec
ret
push
xchg
fs
add
or
xor
outsb
mov
mov
mov
xor
imul
cmpsl
push
divb
sub
repnz
scas
inc
add
sub
clc
inc
lret
dec
loop
mov
mov
pop
into
or
shl
jp
add
cmc
movsb
jne
jb
add
nop
mov
add
aaa
scas
fbstp
clc
adc
pop
je
xchg
testl
cltd
pop
ss
lahf
or
pusha
lds
or
nop
lods
cltd
pusha
in
repz
arpl
cmc
pushf
ret
jae
into
shrb
xchg
add
xor
jo
adc
clc
or
sbbb
push
test
enter
sbb
mov
or
lock
fwait
sub
test
and
cmove
test
push
push
and
sbb
scas
jae
scas
cmc
sub
mov
lret
mov
das
cmpl
mov
sbbl
mov
fldenv
mov
sahf
cmc
adcb
mov
and
sub
int
fldt
push
insl
les
fmul
mov
movsb
and
adc
and
sbb
cmpsb
mov
add
mov
dec
or
sub
and
or
andb
movsl
popf
sbb
scas
shlb
int
punpckldq
imul
add
mov
in
icebp
lods
xchg
sbb
mov
push
push
mov
dec
shlb
cmpsb
sbbb
lods
popf
add
outsl
insl
or
inc
mov
dec
ret
inc
sub
repz
add
notb
cli
jns
dec
xchg
fs
xchg
sahf
add
aad
daa
or
adc
jecxz
rolb
ret
push
repnz
xchg
sub
repnz
xor
insb
iret
stos
es
rcrl
sub
pop
jecxz
inc
cmp
jmp
ret
pop
faddl
mov
inc
xchg
lds
sbb
inc
xor
inc
jp
bound
lret
pushf
les
push
mov
divl
inc
dec
loop
push
pop
test
dec
push
jno
push
fs
lret
fisubrl
rolb
lods
repz
ffree
aas
mov
cmc
or
cmc
nop
or
lds
dec
or
inc
jno
jnp
fcoms
jns
add
inc
sub
movb
popa
out
fisubl
xor
ret
test
lds
loop
ret
aad
aas
sbb
popa
test
lret
add
or
push
adc
sub
dec
push
and
sub
sahf
imul
xor
flds
ret
mov
xchg
jnp
loopne
add
mov
mulb
add
inc
sar
push
mov
les
mov
fsubrp
movsb
sti
ret
cmp
lds
push
fiaddl
mov
and
fimuls
sbb
lret
jg
shlb
mov
adc
iret
mov
gs
lret
inc
hlt
cmp
int3
add
jmp
pop
idiv
mov
fnstcw
xor
mov
pushl
das
inc
cmp
push
sbb
add
inc
add
mov
or
inc
ror
mov
jb
cmp
ret
inc
lds
in
push
jmp
add
cltd
lods
cmp
mov
jp
mov
aam
xchg
push
push
shl
fbld
int3
leave
xor
ror
add
lods
dec
in
imul
imul
ror
out
aas
mov
add
mov
and
add
pop
cmp
in
pop
out
mov
xchg
add
xchg
and
mov
mov
lret
dec
inc
lea
imul
idivl
out
pusha
mov
aas
repnz
and
call
mov
cmc
sbb
shll
pop
ret
lret
repnz
mov
scas
cmpb
push
js
mov
jne
push
inc
idivb
movb
mov
sbb
test
cli
and
je
inc
jl
leave
sti
push
je
xor
push
aad
test
mov
cmp
cmc
xor
aas
mov
enter
mov
pusha
xor
sti
imul
mov
je
aaa
and
mov
test
shl
ljmp
lea
lret
shll
jno
fisttpl
inc
inc
inc
or
mov
jns
adc
popa
sbb
xchg
clc
pop
outsb
inc
mov
sub
shll
adcl
dec
negb
mov
push
test
add
xor
mov
cld
imul
jmp
addb
test
mov
bound
loop
enter
out
in
xor
out
jb
add
outsb
mov
or
xchg
push
mov
mov
fisubs
jmp
jecxz
arpl
push
mov
scas
ret
data16
cli
sub
or
or
ret
or
cmp
in
outsl
shrb
pop
lock
pop
cmp
mov
hlt
dec
out
imul
shll
cmpsl
xor
jns
mov
aam
inc
or
faddp
sub
loopne
jg
cmp
dec
not
mov
or
loopne
xchg
dec
inc
pop
cli
lods
mov
jl
jne
lds
cmp
jo
push
jmp
dec
outsb
mov
sub
shrb
adc
out
sbb
in
test
jbe
out
jl
stos
inc
mov
lods
inc
jmp
aas
push
icebp
les
out
push
sub
daa
popf
les
cmp
test
mov
loope
xor
lret
xlat
mov
add
test
cmp
test
add
jb
movsb
cmp
scas
cmp
add
adc
lds
cmovns
jg
xchg
mov
cmp
add
inc
fs
push
mov
dec
nop
xor
jp
push
test
mov
and
or
rcrl
inc
subl
xchg
int3
add
fidivrl
fsts
adcb
pop
aas
fwait
lock
jp
dec
rcrl
mov
mov
test
and
add
sar
adc
mov
cmp
xchg
sbb
add
sahf
jo
packsswb
add
rcll
cmp
les
dec
sub
shr
dec
mov
sub
adc
inc
cmp
and
aas
sbb
jne
mov
fwait
and
sub
inc
lret
dec
popa
out
dec
mov
cmp
data16
or
ljmp
ret
mov
rcll
je
push
or
dec
into
sub
sbb
test
ret
out
push
sbb
repz
push
mov
dec
bound
sbbb
ret
cmp
adc
lods
inc
add
lock
inc
add
xchg
inc
nop
jne
jmp
add
les
aam
mov
and
mov
movl
sbb
and
mov
jae
dec
pop
fisttpll
punpckldq
insl
rolb
cltd
lods
shl
push
jae
gs
aam
dec
xor
imul
rolb
lods
rol
mov
fwait
or
test
leave
add
add
jecxz
mov
adc
stos
push
xchg
xor
mov
loope
jae
shrl
shrl
ret
faddl
cs
sub
pop
xor
lds
repnz
addb
jb
inc
push
push
bound
rolb
jno
fs
and
loop
orb
jmp
sbb
insl
pop
sbb
cmpsb
jo
shr
lahf
lahf
lea
ja
adc
rorb
mov
dec
aam
mov
hlt
scas
das
iret
inc
repz
jmp
lds
and
and
icebp
jae
int3
nop
imul
daa
lret
dec
add
push
xchg
int
xchg
movsl
cmpsb
push
ret
shlb
ja
clc
pusha
fwait
adc
test
push
pop
lea
sbb
lcall
fidivrs
mov
add
xor
cltd
fidivrl
ja
in
std
mov
test
mov
xchg
sub
xor
lods
xchg
hlt
jnp
loop
loopne
mov
lods
popa
and
push
js
jns
dec
dec
data16
pusha
adc
mov
pop
sub
jae
movsl
in
sub
xor
dec
push
incb
bnd
out
out
xchg
mov
mov
ret
dec
cmp
and
xchg
es
cmp
push
xor
out
mov
lahf
push
jns
in
xchg
rclb
hlt
sbb
nop
das
jge
add
cmpl
fwait
test
or
sbb
sub
rol
movsb
mov
xchg
mov
roll
and
fs
outsb
pop
or
lret
or
dec
dec
mov
add
daa
push
cli
mov
xchg
ja
mov
ja
cmp
loopne
fisubs
and
adc
insl
mov
ret
jmp
loope
outsb
add
adc
shrb
pop
sti
inc
mov
mov
mov
inc
adc
loop
aas
cmp
ret
inc
dec
add
mov
mov
sub
stc
push
mov
mov
punpcklwd
enter
out
pop
and
push
jo
mov
ss
fsubr
jno
pop
fdivl
repz
mov
adc
std
and
cmpsb
rol
adc
loop
out
rcl
aas
fsts
mov
cmp
lods
sub
mulb
shll
mov
test
mov
ljmp
sub
cmp
mov
mov
push
rcll
sbb
mov
pop
rcrb
ret
insb
jae
mov
mov
xchg
xchg
add
shrl
sub
insl
dec
mov
push
sub
gs
mov
xchg
lods
mov
sti
mov
dec
pop
cmpsl
repz
repz
or
leave
mov
int3
icebp
loope
sub
scas
mov
movups
pop
push
test
popa
mov
mov
adc
testl
cli
mov
repz
sub
aas
hlt
shlb
inc
mov
mov
mov
mov
or
stos
lea
cli
mov
or
ja
lods
or
andl
and
sub
mov
div
in
or
pop
mov
jmp
inc
daa
push
push
mov
dec
mov
cwtl
cmp
mov
outsb
dec
lret
dec
dec
or
daa
mov
testl
mov
int3
or
fimuls
jmp
rcrb
pushf
xchg
test
adc
lcall
int
nop
loop
sub
mov
icebp
outsl
icebp
add
mov
inc
and
mov
fs
mov
repnz
inc
xchg
rorb
outsl
xchg
and
les
dec
mov
mov
pop
pop
dec
ljmp
xor
adc
in
nop
out
sub
ds
test
cmpsl
mov
sarl
lret
in
mov
inc
imul
ljmp
stos
cltd
push
xchg
cmp
mov
jbe
inc
sub
in
adc
call
repz
dec
dec
les
or
movsl
inc
into
xchg
sub
or
mov
jecxz
xchg
scas
mov
xchg
push
add
mov
mov
fiaddl
data16
shrb
inc
mov
fsts
inc
les
shl
outsl
cwtl
fs
daa
data16
jmp
jl
xorl
pop
xor
pop
sub
or
adc
adc
jmp
sub
popa
dec
lea
mov
pop
cmp
stc
xor
movsl
in
sub
add
lret
push
lds
aas
xchg
push
loope
daa
cld
imul
in
into
dec
adc
and
int3
popf
or
pop
mov
dec
stc
and
push
push
lds
subl
mov
fwait
sbb
cmp
and
out
sti
decl
add
inc
stos
pop
int
push
daa
call
push
ss
mov
into
pop
xchg
mov
aaa
xchg
lea
xor
call
mov
pop
fnstenv
sahf
xor
cmpsb
xor
xchg
mov
jmp
pop
std
bound
icebp
jmp
pop
ret
inc
js
pop
shll
xor
test
fcmove
aad
jno
cmp
mov
sbb
inc
cmp
js
mov
mov
jmp
xchg
push
aam
std
pop
movsb
pop
stc
pop
addr16
imul
adc
fldcw
icebp
or
cmp
and
testl
add
testl
pop
adcb
xor
ret
test
jmp
movsl
sub
fisttpl
inc
sub
int3
jo
xor
dec
mov
or
dec
mov
das
mov
lret
dec
mov
sub
cmc
cltd
adc
dec
push
scas
movsl
lock
imul
inc
leave
int3
xor
pop
dec
mov
loop
mov
test
mov
loop
inc
mov
out
dec
jbe
repz
xor
stos
aas
xor
dec
mov
and
jns
ror
into
call
pop
xchg
pushf
adc
mov
sahf
pop
fsubp
fidivrl
rcll
call
adc
rolb
lods
or
pop
sub
jmp
push
adc
pop
das
lock
daa
xor
xor
or
leave
push
jns
repnz
jl
mov
into
ss
add
inc
push
sub
ficomps
bound
and
add
pandn
stos
out
inc
and
ret
or
mov
dec
into
fldenv
aam
cmpsl
pop
pop
data16
nop
or
xor
mov
add
subb
and
xor
ja
or
pop
or
jno
dec
mov
inc
and
lcall
out
jbe
lods
stos
popa
bound
mov
mov
xchg
fidivrs
stos
push
dec
rcl
mov
nop
jnp
mov
inc
ss
jns
jbe
ret
inc
xchg
push
ja
ljmp
jbe
push
lret
ret
aas
stos
mov
sbb
fstps
xor
push
cltd
add
stc
cmp
cmpsl
inc
loopne
xor
mov
jns
fmulp
adc
aaa
pop
mov
adc
lea
or
mov
bound
nop
or
in
inc
jecxz
dec
jb
jmp
sub
mov
jecxz
pop
scas
xchg
sbb
xchg
jbe
les
gs
sub
mov
add
sub
xchg
or
mov
daa
es
add
mov
addb
add
test
stos
ja
mov
dec
or
cmp
mov
push
adc
cli
inc
daa
sbb
mov
rcrl
bswap
lcall
add
stos
imul
push
inc
inc
int3
push
sub
xchg
mov
stos
das
addr16
xor
cmp
xchg
inc
sbb
jecxz
pop
ret
push
jg
test
aad
pop
popa
xchg
jae
inc
loop
lahf
sbb
adc
inc
push
sub
xchg
hlt
lret
rorb
lea
jge
call
pusha
addr16
cmpsl
ja
inc
sub
cmc
adc
lods
pop
adc
xchg
add
inc
xchg
imul
cwtl
iret
rcll
rcll
jge
cli
xchg
push
mov
cmpsb
inc
sub
inc
pushf
or
lock
mov
inc
sub
out
mov
sbb
xchg
push
mov
dec
jno
ror
inc
jb
mov
jp
dec
jnp
pop
mov
add
lret
pop
inc
arpl
adc
fisubl
or
adc
roll
out
mov
push
jno
lods
and
lods
mov
xchg
ret
lock
sub
test
pop
test
or
arpl
dec
insl
add
enter
shlb
inc
adc
mov
test
jae
das
inc
shrd
fdivl
ret
cmpsb
sub
lcall
pop
push
adc
mov
cli
xlat
les
leave
push
arpl
pop
mull
mov
jmp
iret
lds
cli
cmp
mov
les
mov
orl
jl
pop
sarb
daa
dec
sub
or
xchg
xchg
bound
push
and
stos
xor
int3
call
or
dec
mov
sbb
fdivl
addr16
push
data16
rolw
test
mov
xor
inc
cmpl
fsubrs
into
aad
mov
inc
in
jecxz
mov
out
mov
adc
aad
mov
mov
jl
shll
les
push
or
stc
in
mov
cmc
mov
xchg
adc
int3
aas
and
sbb
jp
sti
dec
mov
out
cmp
inc
jns
insb
mov
into
jge
push
xchg
jge
in
add
fildll
pop
mov
sbb
andb
in
and
xchg
jae
mov
push
pop
ret
and
pushf
shr
lea
je
inc
push
dec
lcall
iret
push
xor
sub
repnz
aaa
inc
mov
push
and
popa
int3
inc
jl
adc
popf
mov
push
cpuid
ljmp
and
or
xchg
sti
xchg
xchg
sub
rcll
inc
sahf
add
ficomps
mov
std
pop
push
dec
xchg
or
mov
push
mov
loop
lret
or
loop
jg
or
sub
jno
jmp
daa
daa
xlat
push
fsubl
stc
lret
inc
enter
dec
pop
cmp
rcrl
mov
out
lahf
daa
pop
mov
aas
inc
aas
and
fisubrs
shl
xchg
or
mov
push
sbb
xor
mov
stos
les
xchg
scas
aam
bound
pop
lret
and
sub
mov
aaa
mov
cmp
pushf
push
pop
in
sahf
test
lea
jns
sub
mov
shll
fcmovbe
rclb
lods
cmp
sbb
ficoms
adc
mov
fmuls
lret
sqrtps
lret
and
andb
cmpb
fidivl
out
mov
xchg
mov
and
inc
filds
inc
xor
test
jge
mov
hlt
jo
bound
pusha
data16
mov
and
cli
or
outsb
sbb
adc
fisubrs
mov
sbb
in
or
or
mov
adc
sbb
shrb
popa
sub
mov
stos
sbb
and
and
cltd
int3
bound
mov
mov
pushf
sbb
push
cmp
insb
or
xchg
pop
mov
clc
mov
sti
popa
cmp
pop
mov
mov
pop
repz
pop
aam
mov
or
mov
popf
add
ljmp
xor
inc
fisttps
jle
scas
ret
iret
negl
push
inc
or
insl
lret
aam
in
and
mov
cmp
pop
jae
mov
jl
cs
inc
test
push
sbb
add
pop
aad
pop
mov
push
add
call
xchg
lods
and
loopne
rol
inc
out
inc
and
jecxz
mov
jo
cwtl
shlb
fnsave
and
inc
and
dec
lcall
bound
lret
mov
pop
out
gs
fbld
lods
sub
inc
jl
add
lock
iret
jbe
sub
push
sub
repnz
iret
dec
xchg
xchg
orl
push
inc
jno
or
add
sarb
add
xor
xchg
push
aad
out
mov
lea
and
sbb
pop
test
sti
lea
lods
mov
insl
lret
push
push
in
cmp
std
into
iret
mov
lret
pop
push
mov
hlt
dec
repnz
jo
jb
daa
ja
lds
add
lds
cmpsb
std
or
xchg
dec
pushf
cmc
xor
fidivrs
scas
xchg
fs
lret
and
sub
jmp
inc
ficoml
jmp
inc
pop
xchg
mov
outsb
push
push
sub
sub
scas
sbb
jmp
out
sub
fcoms
ficoml
pop
dec
cmp
or
mov
cmp
sub
add
lods
bound
jb
popf
xor
repnz
mov
imul
inc
push
add
add
lahf
ds
dec
add
stc
test
mov
jne
cmpsb
xlat
mov
dec
mov
subl
add
pop
inc
push
pop
subl
xor
ret
sbb
and
inc
inc
ret
xchg
jb
cmp
add
sbb
fsubl
sub
idiv
mov
sbb
sbb
jecxz
lds
adc
mov
push
mov
xor
sbb
dec
arpl
outsb
lods
push
pop
lods
add
int3
repnz
jno
fdiv
inc
mov
sbb
roll
jo
pop
xlat
dec
repz
push
adc
cmp
iret
imul
in
scas
inc
or
addr16
ret
mov
inc
xchg
shr
call
jp
push
insl
leave
push
mov
cltd
stos
test
mov
sbb
mov
pop
into
cli
outsb
cmp
inc
pop
pushf
mov
jl
loopne
ret
jo
mov
jne
mov
loopne
dec
lock
lret
adc
je
pop
mov
lahf
insl
icebp
mov
mov
insl
add
rcrb
mov
sub
adc
lret
cmpl
add
xor
mov
xor
lcall
lret
jecxz
repnz
push
or
nop
sub
mov
jle
xchg
imul
hlt
repz
push
mov
push
insl
popf
push
aas
je
adc
jb
sbb
sti
sbb
dec
mov
mov
jae
push
mov
leave
ror
cli
mov
add
loop
mov
lcall
cli
jmp
fimull
xchg
jns
lock
mov
fistpll
mov
arpl
jmp
popa
mov
lret
bound
imul
repnz
and
and
xor
lods
and
cmp
out
pop
andb
cld
dec
imul
mov
inc
fisttpll
mov
cmpsb
in
pop
ret
mov
add
jecxz
pop
add
pop
hlt
jbe
sbb
adc
punpckldq
insl
loopne
pop
loop
add
lods
inc
pop
gs
adc
fistpl
or
mov
loopne
mov
lods
into
rcrl
mov
dec
dec
xchg
ret
sbb
aas
cmp
ret
iret
pop
fwait
jbe
fwait
jno
inc
lret
pop
pop
aas
cmpsl
mov
call
push
push
jmp
xlat
adc
pop
test
sbb
stos
sub
sub
inc
rolb
insb
subl
jl
out
decb
and
insl
lcall
cs
xchg
pop
xchg
jbe
and
lahf
pop
cmpsb
xor
pusha
or
movsl
xchg
mov
int3
icebp
inc
adc
pop
mov
dec
int3
xor
inc
cmc
int3
mov
int
mov
sub
fisubs
test
sbb
jo
loopne
lea
sub
test
jo
push
sub
lods
xchg
jmp
cmp
push
pop
mov
roll
ret
clc
mov
mov
push
jbe
mov
call
mov
iret
push
scas
xor
push
mov
add
stc
into
cmpsl
push
es
insl
sbb
enter
dec
and
xchg
cmpsb
and
add
push
or
clc
jmp
test
ss
sbb
out
dec
sarb
test
sbb
push
and
jb
mov
movsb
mov
lret
in
inc
dec
movsb
fadd
ds
dec
add
push
lret
sub
mov
push
mov
sbb
lea
das
loopne
popa
in
or
ret
and
in
adc
cmpsb
add
es
xor
add
repz
or
cmp
sub
icebp
es
cmp
imulb
xor
mov
push
bound
pop
aaa
repnz
xchg
pop
sub
or
scas
rcr
cmpsb
xchg
ret
xchg
popf
sbbl
sbb
xchg
jg
imul
aas
mov
and
push
push
int
jae
test
faddp
cmc
xchg
sbb
enter
or
fdivrl
ret
ret
pminsw
iret
adc
loop
xchg
xchg
inc
or
push
inc
inc
add
inc
cvtps2pd
jns
insl
mov
mov
sub
mov
les
push
mov
mov
shlb
pop
clc
inc
stos
cltd
and
pop
mov
call
xchg
cltd
cmpsb
andb
dec
jle
sbb
nop
leave
pop
decl
add
mov
cltd
repz
add
push
insb
inc
mov
sub
roll
outsl
ficomps
bound
sbb
sub
or
popa
loopne
aam
jne
mov
push
les
pop
and
push
pop
out
aas
adc
jecxz
inc
or
subb
adc
jp
fs
push
hlt
shrl
add
fdivr
adc
pop
js
imull
sbb
mov
inc
decb
jno
add
mov
jo
xchg
icebp
xlat
jae
in
pop
and
aaa
cmp
repz
ret
jge
jl
sbb
sbb
shll
mov
in
mov
adc
jmp
out
sbbl
or
jmp
mov
cmpsl
xchg
and
fisubs
mov
dec
add
pop
stos
xor
and
adc
call
sub
add
les
and
add
xchg
fisubs
inc
aam
scas
sbb
fsubrp
inc
lods
movsb
inc
cwtl
pop
cmp
aas
test
gs
leave
lret
shll
shrb
adc
std
lret
les
or
add
cli
xchg
scas
sbb
les
es
fs
js
fs
outsb
rcl
outsb
movsb
mov
mov
arpl
int3
mov
inc
and
shll
daa
mov
add
popa
add
and
inc
je
fimull
ljmp
mov
shlb
lods
lods
cmp
movsl
add
cmp
js
data16
jnp
mov
aad
movsl
xchg
fadd
aam
push
ret
cmpsb
movsl
jb
lret
data16
pop
dec
xchg
scas
push
outsb
js
mov
mov
xchg
inc
sbb
bnd
or
dec
pop
sbb
xor
sbb
mov
jno
cmpsl
jle
pusha
pop
xor
sub
cmp
fidivl
pop
cmc
jmp
mov
test
aas
ss
sbb
icebp
cli
int
pushf
rcll
jae
or
aam
fsubrl
dec
and
cltd
aas
in
pop
jno
cmpsl
fnstsw
add
mov
inc
xchg
pop
ja
and
bnd
jge
pop
and
cmpsb
mov
lods
loopne
or
push
xchg
repnz
push
std
and
shlb
stc
movsl
dec
xor
mov
sti
fidivrs
in
cmp
adc
mov
and
push
xor
adc
inc
xchg
leave
pop
fmul
jo
or
ret
and
in
xor
inc
push
cltd
mov
leave
push
mov
mov
negl
shlb
or
adc
cmpb
repz
shl
aam
repnz
push
and
testl
sbb
add
xlat
orl
sub
test
shl
lock
pop
mov
imul
mov
xor
add
pop
inc
add
pop
add
insl
test
adc
dec
shl
jb
jp
into
frstor
sub
cmp
xchg
ja
sub
sbb
je
cs
push
mov
into
das
insb
sbb
popa
mov
je
movsb
mov
movl
into
jl
pop
jmp
ret
xor
arpl
inc
sub
mov
adc
rorb
cmpsb
push
movq
sub
fsubp
ret
sbb
les
cmpb
mov
adc
adc
inc
into
fildl
and
jge
enterw
fsts
fimuls
mov
in
inc
ret
into
jp
sbb
inc
les
outsb
and
loopne
mov
leave
adc
xor
adc
add
mov
dec
insb
dec
push
out
inc
aaa
loope
xor
enter
push
in
test
fwait
jmp
cmpsb
lods
and
ficoms
pop
cmpsb
cmp
push
mov
fldenv
xchg
xchg
test
addr16
push
repnz
imul
lds
fld1
shll
rclb
inc
mov
sti
fisubs
or
push
pop
xchg
cmp
adc
push
pop
adcb
mov
or
sub
fsts
adcb
fldt
mov
sahf
mov
lcall
jge
jg
stos
jnp
rol
pop
aad
imul
push
leave
lods
bound
and
loopne
sub
inc
fdivrl
fisubrl
jb
cmpsb
mov
std
insb
lock
adc
aaa
cmp
mov
mov
int
add
inc
pop
sub
icebp
pop
cmp
pop
fisubs
in
sub
stos
inc
xor
and
add
inc
mov
incl
mov
test
and
push
ret
dec
test
jb
fdivrl
mov
pop
lcall
mov
adc
fidivs
and
or
arpl
cmp
into
mov
or
xchg
lret
in
ret
push
loopne
lretw
mov
xchg
les
test
mov
mov
dec
add
push
popf
push
pop
pop
push
shrb
fstps
mov
push
push
dec
mov
shll
pop
leave
sbb
jmp
xchg
movsb
add
jae
mov
mov
mov
inc
sub
inc
adc
icebp
sahf
and
ds
subb
insl
ficoms
daa
popf
fcom
mov
add
add
jae
add
inc
xchg
pushl
pushfw
out
inc
rorl
lods
or
mov
orl
ds
stos
mov
pop
dec
pop
fidivrl
out
addr16
mov
in
inc
inc
into
pushf
test
int3
xor
mov
incl
data16
std
popa
lock
cmpsb
fistps
adc
imul
inc
outsb
movsb
sbb
adc
jae
and
fldenv
lret
stos
inc
push
add
ret
in
ret
pop
and
or
sub
xor
sahf
add
repnz
in
cmp
xlat
jno
aaa
in
inc
fidivl
push
pop
ficomps
loopne
clc
and
xor
sub
push
xacquire
outsl
xor
cmpsb
movsb
add
pop
sbb
arpl
aas
ret
add
and
repnz
outsl
scas
dec
fsubrs
fs
pop
jmp
mov
scas
inc
clc
mov
dec
dec
sub
out
xor
fsub
insb
dec
sub
push
inc
and
divps
push
ds
movsl
push
sub
push
fists
pop
push
fnstsw
in
fs
inc
pop
dec
les
jo
dec
into
sbb
ret
add
xchg
scas
lds
into
div
mov
ret
icebp
xchg
pop
jne
mov
push
cmp
fmull
jge
mov
xchg
jno
rorl
arpl
pop
ds
movsl
xchg
pop
push
jmp
inc
push
out
add
rcll
into
sbb
pop
hlt
or
jbe
dec
je
mov
jbe
movb
push
push
stos
fistpll
in
fiaddl
add
pushf
sub
movsb
mov
mov
out
enter
jl
dec
jnp
pop
push
dec
add
dec
out
loope
daa
fisubl
xor
add
stc
sub
xor
pusha
jp
sub
inc
jno
jae
arpl
fisubs
shll
inc
stos
inc
data16
sbb
cmpsl
push
fidivs
mov
pop
push
jae
mov
dec
mov
and
rorb
sub
fisubs
jne
insb
inc
ds
jmp
and
pusha
pusha
cmp
rorl
xor
and
cs
insl
pop
pop
enter
movsb
insl
cmc
aas
push
enter
lods
mov
iret
lret
mov
lods
loop
sub
leave
lods
ficoml
repnz
mov
mov
jl
popf
xchg
test
fiadds
fisttpll
ret
icebp
xor
mov
sbb
xacquire
dec
xchg
jbe
shrl
push
jnp
push
popa
mov
or
rcr
and
jmp
sbb
mov
mov
xchg
mov
int
add
push
push
mov
adcb
jmp
pop
lds
dec
jmp
into
cli
scas
dec
add
and
add
jno
call
out
add
gs
ss
out
pop
test
sub
lods
sarl
repnz
ss
adc
or
in
mov
insl
and
push
xlat
pop
pop
dec
inc
les
xchg
out
push
sub
jb
shr
or
icebp
mov
xor
pop
xor
stc
mov
lea
sti
les
lock
data16
pop
cmp
fildll
mov
cmpsl
rol
or
jo
pop
sbb
jnp
push
sbb
shlb
ret
push
in
sub
js
push
stc
jb
fstps
pop
test
pop
push
rcrl
hlt
loopne
pop
stc
test
cltd
mov
cs
dec
xchg
pop
push
xlat
cmc
xchg
cmp
jl
shlb
mov
outsb
fildl
fmuls
adc
lea
dec
inc
insb
pop
shll
fdivrs
cmpsb
loopne
adc
mov
jg
mov
mov
mov
aaa
cmp
rol
pop
and
popf
and
movb
idivb
push
cmpsl
lds
roll
outsl
mov
shrb
in
daa
mov
stc
jae
pop
es
cltd
fisubl
push
push
cmp
xor
jp
mov
sub
pusha
out
aas
pop
enter
shl
and
pop
insb
or
and
mov
and
cmp
and
cmp
xchg
in
xor
mov
dec
lods
push
inc
jno
push
sbb
clc
sbb
mov
mov
lods
movsl
ja
push
cmc
mov
out
sub
mov
mov
sub
push
popf
jae
movsl
dec
cwtl
call
dec
push
or
sbb
dec
outsb
xchg
addr16
mov
jmp
dec
data16
sub
and
pop
sbb
repz
xchg
enter
pushf
cmp
stc
mov
add
stos
mov
sbb
add
xlat
pop
sub
mov
repnz
add
push
push
jae
iret
xor
jnp
shrw
mov
mov
imul
int3
iret
ficoml
sarl
and
stc
jns
jecxz
je
orb
inc
fdivrp
into
loopne
rclb
pop
xchg
out
push
sub
jl
bound
push
pop
addr16
test
out
sub
outsb
dec
mov
dec
nop
loopne
pop
pop
sub
cmp
std
xchg
pop
xorl
pop
hlt
mul
and
or
insl
xlat
outsl
daa
mov
sahf
xchg
sbb
icebp
popf
les
out
lcall
mov
inc
inc
inc
test
daa
xchg
or
xchg
xor
or
repnz
pmaxsw
sub
push
mov
fs
sti
loopne
jecxz
aas
idivl
insb
jns
cmpsl
notl
jnp
test
sub
les
and
or
leave
bts
add
xor
xor
repnz
mov
cmp
shlb
jo
fbstp
add
fidivrs
cmc
jns
lret
out
std
xchg
mov
insb
loop
rcrl
cmp
sbb
mov
inc
ljmp
leave
xchg
inc
xchg
jne
inc
sub
add
call
mov
dec
ret
fcomip
and
push
inc
sub
es
jo
jecxz
out
cmp
jae
orb
and
inc
lahf
pop
jle
jno
mov
mov
inc
or
push
fsubs
ret
pop
pop
cmpsb
pop
movsl
imul
repnz
insl
mov
xchg
nop
ret
mov
mov
fwait
adc
mov
cwtl
xor
jae
or
cmc
push
add
sub
push
jmp
fbld
enter
or
loope
dec
daa
sti
sub
jns
fwait
push
and
icebp
shlb
mov
inc
mov
push
roll
pop
int3
js
int
js
nop
fldl2e
fwait
ret
loopne
sub
push
fwait
cmp
mov
adc
leave
inc
lods
andb
push
sti
xor
aas
repnz
mov
sub
jge
cmp
jb
push
push
daa
jge
xchg
mov
sub
sub
sub
cmpsb
and
and
push
mov
or
ror
and
mov
cmovs
sbb
mov
mov
outsb
test
cmp
inc
divl
lret
mov
pop
call
xor
push
add
cmp
xorb
xchg
sbb
pop
push
out
subb
mov
pop
or
fisubrl
aaa
and
jp
aad
lret
xchg
fidivs
aaa
addr16
cmove
aas
push
cmp
fdivrl
and
stos
jmp
das
adc
inc
lds
and
cmp
adc
inc
mov
lret
push
pop
inc
in
push
dec
inc
in
inc
sbb
mov
pushf
and
cmpb
aad
push
inc
sub
adc
xchg
insl
ret
and
cmp
xchg
mov
fdivrs
imull
inc
bound
dec
mov
sbb
jmp
pop
stc
mov
push
je
cmp
cli
mov
cltd
mov
mov
fbld
jo
outsb
add
mov
fdivs
cmp
cli
ds
sbb
cmp
adc
xor
stc
aas
sbb
cmp
jle
xor
das
mov
icebp
negb
inc
fld
xchg
mov
aas
mov
icebp
orl
push
jns
add
inc
lea
scas
call
mov
or
jno
sbb
push
fsubrl
adc
les
xchg
lret
in
dec
out
and
dec
enter
jl
aad
sub
adc
inc
jmp
jae
push
aaa
push
sub
movsl
stos
jbe
mov
cmp
and
jl
fisubs
les
repz
lcall
cmpsb
xchg
mov
je
mov
dec
loopne
loop
dec
lcall
push
sti
aas
lret
lcall
inc
fs
loop
lret
addb
xchg
jbe
or
xchg
jmp
push
push
xorb
inc
test
repnz
repnz
ljmp
dec
pop
adc
xor
test
or
les
fistpl
dec
daa
xor
mov
xor
jno
push
daa
cmpsb
jo
adc
and
and
sbb
xchg
inc
xchg
cltd
fcom
loop
cmpsl
aad
nop
andl
pushl
out
int3
fwait
xor
fidivrs
xchg
mov
and
and
sub
xchg
lods
pop
enter
mov
xchg
add
dec
and
sbb
mov
shrb
sub
adcl
fiadds
add
lahf
lods
adcb
adc
inc
test
repnz
jno
lods
and
in
into
xchg
cmp
les
cld
test
fsubrl
stos
or
sub
aad
cmc
and
push
cmp
jbe
neg
pushf
push
xchg
sub
inc
dec
push
xor
mov
mov
notb
jecxz
cld
scas
mov
xor
clc
rorl
shr
xor
sub
shlb
repnz
push
nop
insl
das
inc
sub
xchg
icebp
add
psrld
push
cmp
push
call
cmp
dec
rcl
or
or
ret
xor
movsb
adcb
fcmovne
ja
je
sub
push
jp
out
sub
inc
mov
mov
out
sbb
rcrb
aam
test
call
xchg
inc
xchg
push
mov
loop
or
ret
and
aas
sahf
insb
mov
repnz
loopne
sbbl
js
sub
dec
jmp
mov
shrb
jno
test
daa
lcall
add
mov
out
add
lret
mov
dec
mov
flds
mov
out
dec
lret
movsb
and
stc
sahf
and
mov
adc
cmp
pop
inc
mov
call
adc
or
fcompl
gs
loope
lock
dec
jmp
push
inc
mov
aas
subl
and
sub
mov
adc
dec
test
adc
mov
mov
dec
or
daa
stc
xor
add
pop
jp
adcb
std
xor
pop
xchg
and
jecxz
das
andl
or
pop
sub
clc
add
mov
lret
add
mov
mov
jp
and
icebp
jo
mov
fimuls
cmp
mov
pop
push
and
jb
test
jmp
jmp
outsb
iret
rcrb
arpl
pop
mov
dec
ret
cmp
lea
call
stos
pop
push
xchg
add
add
insb
jae
pop
sbb
into
mov
lret
je
xor
push
lock
jge
aad
xor
rclb
dec
xchg
stc
iret
mov
call
jmp
add
cmp
and
sub
mov
jae
fcmovb
or
add
or
aas
push
ds
push
jle
data16
lcall
les
dec
sbb
fs
or
lcall
hlt
pop
and
add
or
push
pusha
push
mov
loope
sti
add
aas
pop
jg
pop
jae
lret
je
ljmp
mov
push
cmp
testb
jo
popf
out
jae
add
sbb
pop
sbb
orl
cmp
loopne
insl
pop
sbb
xchg
dec
call
test
jmp
cs
sub
xchg
aaa
out
add
ljmp
push
jg
mov
popa
inc
jmp
dec
in
dec
daa
fstpt
pop
sub
xchg
pop
stos
push
and
movsb
cwtl
pop
cmp
pop
dec
lret
mov
add
mov
sub
mov
mov
mov
sbb
and
sbb
outsl
xchg
push
add
mov
pop
icebp
lcall
xor
out
daa
push
stos
mov
inc
sbb
push
ret
mov
cli
cmc
and
in
sti
add
sbb
popa
gs
ljmp
mov
inc
inc
int
int3
pop
sub
xchg
pop
or
sub
jo
data16
inc
mov
or
mov
popf
inc
cmpsl
mov
pop
lret
inc
in
incl
out
push
mov
ss
shlb
jnp
pop
sbbb
adc
insb
or
or
mov
ret
mov
inc
or
push
aas
mov
mov
jns
or
adc
adc
mov
popl
pop
add
sti
leave
mov
leave
inc
sti
sbbb
xchg
push
jo
loopne
pop
fcomps
sub
sbb
adcb
jno
fwait
xlat
sub
inc
pushf
sbb
mov
dec
adc
shlb
add
cmp
xchg
jecxz
add
jle
add
mov
xchg
add
ret
cmpsb
insl
push
js
call
scas
cmp
push
sti
inc
cmp
int3
cmp
pop
fwait
ret
push
shlb
ss
outsl
pop
jecxz
dec
dec
mov
and
inc
pop
mov
test
ret
bnd
enter
inc
or
data16
out
cmp
in
pop
stos
popa
push
fisubrs
pusha
pop
push
gs
mov
push
test
xor
addr16
in
pusha
push
add
mov
mov
notb
cmp
in
xor
adc
popa
out
or
dec
fbld
imul
popf
dec
mov
ret
sub
lods
pop
push
sub
clc
mov
sahf
push
push
and
ret
pop
inc
lcall
mov
jo
and
mov
jg
loope
popf
icebp
sahf
pop
fwait
jne
mov
loopne
pop
adc
adc
xchg
dec
scas
push
inc
adc
daa
loope
int
add
jb
pop
notl
jb
dec
aas
push
cld
push
cltd
jne
repz
imul
in
or
inc
pop
add
sbb
jge
push
aas
sub
js
repnz
xchg
aas
mov
jp
repnz
jp
mov
aad
mov
daa
aam
inc
push
pop
hlt
mov
movb
push
or
lret
sub
jge
pusha
mov
fisubrl
pop
inc
pop
adc
adc
dec
inc
push
into
mov
add
add
dec
popl
mov
fwait
push
outsb
sbb
jae
daa
or
ret
nop
cmp
jecxz
adc
test
adc
outsl
aas
xchg
fdivrl
into
add
add
mov
test
test
leave
aas
fdivs
jno
stos
add
fmull
ljmp
dec
nop
js
push
sub
test
adc
cmpsb
xor
sar
pop
scas
mov
mov
add
addr16
mov
fildll
lret
inc
push
xorl
mov
or
add
imul
es
xchg
leave
popa
pusha
icebp
inc
ret
jno
mov
inc
xor
sub
or
bound
push
adc
or
test
xchg
leave
xchg
sub
loopne
push
push
mov
add
movsb
cmp
lea
push
pop
test
jnp
xchg
insl
push
testb
push
xchg
sbb
lock
mov
xlat
je
pop
adc
and
xlat
push
mov
inc
mov
jecxz
out
inc
jae
ret
leave
gs
ret
sub
sbb
xor
rcrl
or
sub
or
push
jnp
aam
rclb
cmpsb
insb
repnz
decb
push
add
es
push
pop
dec
push
pop
addr16
dec
arpl
pop
call
cmp
mov
sbb
popa
add
popa
insb
xchg
lret
inc
cwtl
pop
fistpl
ret
inc
ficompl
dec
adc
andb
xor
cmp
sub
vpmovusdb
repnz
nop
adc
or
add
testl
or
decb
mov
int3
jg
lea
in
jae
lds
push
mov
into
xor
and
insl
push
dec
xor
call
xor
ss
outsb
int3
les
push
cwtl
out
add
xor
inc
pop
sbb
clc
clc
ja
aad
jno
cmc
sahf
fstpt
and
sub
jo
add
sub
js
pop
pop
rorw
xchg
mov
adc
pop
xor
sub
aam
push
jae
sarb
fldenv
in
lods
js
mov
icebp
ss
sbb
inc
in
xor
dec
loope
call
jb
sub
stos
xchg
arpl
xchg
orl
orb
ljmp
call
mov
push
cmp
jp
jb
cli
out
pop
ljmp
sub
xor
adc
xor
jns
scas
add
test
mov
dec
aas
or
stos
and
rcr
addr16
iret
imul
push
dec
rol
cmc
and
test
sti
enter
out
lcall
jecxz
shlb
fcmovb
dec
scas
testl
push
shl
lretw
cmovs
pushf
rcrb
in
out
inc
jecxz
inc
mov
mov
lahf
pop
adc
pushf
dec
sti
outsb
lahf
je
jmp
push
lahf
dec
cmp
or
pop
dec
daa
xor
and
repz
jns
lods
and
mov
add
inc
lret
adc
shr
cmp
ret
or
push
sub
jle
ljmp
or
pop
cmp
inc
jmp
jecxz
scas
push
sbb
adc
adc
push
jge
sar
int
movsl
sbb
mov
push
bound
jno
fmulp
xor
rcll
aad
icebp
aad
xchg
jne
repz
int3
scas
xchg
or
nop
lea
pop
push
mov
jg
mov
cmc
inc
jge
or
xchg
sub
cwtl
dec
adc
pop
inc
cli
leave
ds
and
push
aas
add
int3
xchg
pop
lods
inc
mov
sub
lahf
in
sahf
ficomps
repnz
jmp
ret
jbe
dec
mov
cwtl
jns
xor
les
movsb
icebp
mov
or
shlb
lods
les
mov
movsl
and
jns
or
sbb
stc
push
xchg
jecxz
push
adc
icebp
jae
cs
ret
ret
bound
and
pop
ljmp
pop
fs
xchg
or
push
shrl
xchg
aam
daa
stos
mov
jb
ret
bound
test
mov
lods
push
div
fisttps
in
shl
cmc
repz
ror
in
lret
or
mov
mov
addb
sti
in
sbb
mov
jb
pop
sub
push
xchg
mov
es
lcall
lods
lret
es
push
movsb
mov
adc
and
gs
mov
mov
js
add
or
stc
fisttps
dec
loopne
sub
push
cwtl
lods
mov
data16
sub
mov
dec
sbb
lret
in
pop
add
mov
lock
xor
lcall
mov
xchg
pusha
leave
and
inc
inc
xchg
xchg
lea
inc
mov
pusha
gs
fs
inc
clc
lods
ficoms
decb
bnd
cmpsl
adc
in
jmp
add
popf
nop
mov
jnp
mov
jb
push
jmp
adc
sub
dec
jbe
push
inc
mov
and
ja
out
fbld
sbb
push
in
aad
jns
fcmovnbe
cmpb
int
cmp
decb
lahf
mov
xchg
jb
inc
mul
mov
xor
sub
inc
jno
push
xlat
pop
data16
sahf
sbb
add
lea
repnz
aad
daa
dec
fwait
mov
ljmp
xor
sub
pop
and
cmpsb
pop
fcomi
inc
mov
push
ficomps
call
cwtl
jns
and
mov
das
fisubrs
loopne
cmpps
add
cmpsb
and
fisubs
aas
jmp
inc
cmp
aaa
inc
lret
push
into
bound
in
aas
xchg
int3
fs
pop
inc
icebp
jb
add
frstor
popa
xor
leave
in
and
mov
mov
sbb
orb
xorb
cmpsb
fimuls
push
lods
inc
bound
mov
jo
inc
sub
inc
jbe
cmpsl
fistpll
les
mov
inc
sti
push
mov
fs
imul
mov
das
add
push
mov
sub
lcall
fiaddl
dec
and
jne
inc
test
int3
sbb
ficomps
mov
rorl
testl
sub
ds
out
inc
and
sbb
pop
inc
jno
leave
ja
mov
pop
cmpsb
loopne
xor
or
cmpsl
cmc
gs
icebp
mov
pop
cmc
out
frstor
sub
in
cmpsl
ljmp
cmp
or
test
dec
popf
or
add
or
inc
repnz
push
dec
sub
lret
hlt
push
xor
xchg
lods
cmp
stos
fistpll
ror
inc
jo
sub
push
pop
cmpsl
mov
mov
out
cs
out
add
mov
lret
aas
cwtl
xor
mov
pop
and
pop
ficomps
lahf
jl
out
mov
or
ljmp
movsl
pandn
push
pop
and
push
fidivs
les
fsubrs
jbe
mov
test
ljmp
das
push
test
fildll
dec
dec
sbb
add
and
cmp
mov
mov
aas
nop
daa
testl
in
push
xchg
push
cmp
and
or
aad
faddl
xor
ret
mov
mov
inc
inc
pop
push
shl
pop
or
pop
or
negl
pop
andb
inc
push
inc
ljmp
and
cmp
stos
sbb
ljmp
test
pop
es
inc
les
into
xchg
push
mov
jo
sub
xor
mov
inc
mov
cmpsb
jno
test
fiaddl
fiadds
add
lret
or
test
mov
mov
ror
inc
xchg
ret
or
dec
dec
and
and
dec
xor
adc
xchg
stos
pop
bound
fcmovne
sub
inc
mov
leave
sbb
pop
aas
fcompl
in
or
pop
ret
jae
push
xor
movsb
rcrb
rclb
jecxz
inc
push
and
push
mov
sub
ret
div
lahf
mov
mov
int
push
punpckldq
push
push
xor
sub
dec
dec
adc
mov
pop
loopne
adc
mov
and
push
jl
add
pop
sub
jno
sub
and
push
loop
dec
fimuls
int3
pop
addb
shll
dec
aas
push
fdivl
dec
mov
dec
xchg
cltd
ljmp
cmp
mov
and
sahf
mov
outsl
xor
fistpll
arpl
sti
loopne
mov
sub
shll
stos
push
adc
add
pop
mov
pusha
xchg
cmp
repnz
mov
add
or
aas
inc
pop
dec
lret
lea
pushf
sbb
xor
fstl
shl
ds
cmpsb
mov
mov
cmp
jp
data16
inc
imul
sahf
call
xchg
dec
sub
sub
orb
aas
pop
xchg
push
inc
rcr
pop
mov
ret
jbe
mov
test
push
rcrl
pushf
sub
jnp
lds
imul
daa
add
imul
call
or
bound
cwtl
pushf
or
aam
mov
lds
ja
dec
mov
jae
jae
or
sti
mov
inc
push
lods
xor
lods
sbb
inc
cmpsl
mov
lret
icebp
std
rcrl
mov
pop
in
icebp
xor
js
aam
add
sti
imul
mov
and
dec
adc
stos
ss
mov
dec
repnz
pop
add
stc
lahf
lds
vpcmpgtd
jmp
call
ss
push
or
fbld
into
mov
inc
push
pop
xchg
jmp
lret
cmp
repz
ret
and
cmp
push
adc
cmp
xor
data16
repnz
xlat
pop
iret
mov
jmp
mov
pop
dec
loop
mov
or
fwait
stc
lods
rolb
repnz
sub
hlt
xor
je
cs
imul
mov
rorb
push
movsl
ljmp
inc
lret
adcl
adc
aas
jb
sahf
or
lret
call
adc
cmp
insb
sbb
mov
mov
rclb
lahf
push
or
pop
xor
arpl
sub
jecxz
sub
lods
xchg
mov
adc
lds
dec
sbb
fldt
inc
push
enter
sub
and
push
jge,pt
pusha
jno
xor
mov
pushf
mov
push
inc
mov
cmp
lret
sbb
iret
adc
das
add
push
jle
mov
in
stos
pop
aaa
hlt
cwtl
push
sbb
pop
in
sbb
fidivrl
fsubrp
jno
cmp
sti
scas
imul
push
aas
test
mov
or
sub
ds
sbb
mov
add
mov
shrb
popa
repz
sub
cld
pusha
and
jo
les
xor
out
xchg
into
ds
jbe
pop
data16
arpl
pop
addb
xchg
mov
mov
lea
add
sti
add
outsl
lods
push
sahf
mov
lret
jl
mov
jno
test
jae
insl
pusha
mov
sbb
sub
sar
data16
push
jbe
fidivl
jne
mov
mov
jno
nop
mov
and
shl
sub
cmc
and
dec
jno
dec
push
adc
adc
cmpsb
jae
and
add
and
add
leave
ret
enter
loop
mov
mov
add
insb
inc
mov
dec
inc
sub
jno
mov
das
pop
mov
xchg
xor
sbb
sbb
inc
mov
lods
cmp
xchg
push
into
mov
mov
sarl
test
xor
inc
add
lods
out
cmc
cwtl
aad
cmpsb
dec
lds
inc
sub
mov
inc
or
lds
int3
vcmpss
xor
xchg
leave
xchg
shl
add
mov
push
xchg
decb
adc
jae,pt
cmp
test
mov
dec
dec
xchg
aam
pop
sbb
push
jbe
push
xor
lods
sub
jae
push
rorb
sub
inc
jno
fst
sti
daa
mov
lret
mov
adc
push
movsb
sbb
pop
and
xor
inc
dec
loope
mov
int
in
lock
xchg
scas
dec
hlt
sub
fisubrl
bound
nop
mov
pop
pop
sub
xor
shlb
out
cmp
xchg
fdivs
xchg
and
sub
push
lods
add
or
leave
pop
and
pop
fsubrs
incb
mov
mov
add
jbe
mov
cmp
push
and
mov
pop
jo
ljmp
ret
push
or
es
fmuls
stos
sbb
jo
jns
shrb
pushf
cmpsb
mov
mov
and
aam
pushf
jo
mov
ret
push
test
test
adcl
psrlw
inc
inc
jns
add
pusha
mov
icebp
dec
lds
sbb
inc
push
inc
aas
cld
add
pop
pop
mov
ljmp
ja
ret
loop
std
inc
repz
push
ret
outsb
inc
cmp
fcoms
mov
xchg
les
xchg
ret
pop
jecxz
add
add
in
xor
xchg
xor
inc
push
adc
lds
stos
stos
add
ret
loop
insb
loope
sbb
add
mov
ret
insl
fnsave
ffreep
xor
fsubl
jae
adc
shrl
push
and
mov
pop
inc
inc
mov
fstl
inc
or
vmovss
jle
lds
or
bound
sub
pop
inc
loop
movsb
xor
mov
arpl
out
xor
jbe
jmp
sub
cmc
in
xchg
insl
fcoms
in
xchg
pop
inc
adc
cmp
sbb
cs
inc
loopne
fidivrs
loopne
out
loop
bound
add
inc
inc
icebp
inc
jns
add
sarb
ret
test
repz
inc
cli
fwait
adc
jmp
sahf
test
les
cmp
insb
pop
scas
repz
aas
sbb
or
roll
mov
sub
mov
pop
jecxz
testb
push
fstps
in
insl
sarl
push
flds
daa
lods
xor
cmpsl
sub
jge
data16
mov
push
add
popa
pop
xor
xor
pop
and
push
push
subl
lret
cltd
cmpsb
sub
lret
adc
push
sub
sarb
lods
pop
mov
adc
inc
imul
outsb
ret
xorl
or
popa
sub
inc
push
movsl
mov
inc
pusha
sbb
lds
or
pop
scas
push
inc
or
sti
jge
jb
mov
jmp
and
jo
incb
pop
divl
xchg
clc
or
les
adc
movsl
mov
test
insw
wrmsr
iret
fcoml
mov
hlt
xor
add
mov
bound
cltd
clc
lock
jns
ljmp
loop
xchg
push
xchg
data16
adc
pusha
sbb
fldln2
mov
pop
jno
dec
pop
dec
xor
enter
add
xchg
push
jne
dec
inc
xchg
or
adc
lcall
gs
ret
cltd
insl
lahf
les
fcmove
dec
jno
inc
shr
in
push
mov
icebp
xor
scas
decl
cmc
jae
iret
outsb
cmp
sbb
mov
jmp
push
hlt
lds
inc
and
jb
push
sub
les
mov
and
jo
xlat
mov
push
xchg
data16
xchg
lea
jno
sub
data16
xor
add
insl
pushf
out
cmpsl
aam
decb
decb
xlat
cmp
push
xchg
jae
xchg
insb
out
repnz
add
xchg
enter
xlat
stc
pushf
mov
fsts
orb
ret
ljmp
and
rorb
xchg
lret
sarb
mov
enter
add
lahf
inc
push
hlt
push
inc
mov
adc
pop
lods
inc
push
xchg
push
iret
stos
fnsave
xchg
and
sub
les
mov
std
cld
jmp
fists
out
dec
sub
mov
mov
pop
push
in
or
add
add
dec
inc
stos
in
loop
aas
jecxz
loopne
loopne
push
in
push
ret
push
aas
and
cmpsl
js
enter
ret
adcl
pop
fisttps
bound
sbb
add
lret
xor
adc
push
ret
cmpsb
orb
pop
fcompl
jno
mov
and
pop
into
push
xchg
repnz
inc
push
jnp
push
pop
lret
add
and
mov
xchg
pop
mov
sbb
mov
fdivp
xor
pop
jae
es
pop
push
adc
mov
xchg
inc
test
add
pop
inc
pusha
lods
stos
push
arpl
loopne
or
out
adc
or
jecxz
imul
mov
adc
vpcomb
push
push
fdivs
pusha
cld
push
lret
lsl
shrb
imul
pop
dec
xchg
aas
shlb
mov
stc
cmp
rolb
loopne
outsb
test
mov
mov
fisubl
loop
cld
lcall
jp
push
in
loop
call
push
pop
cmc
mov
sub
mov
xchg
cwtl
jne
xchg
lret
and
sahf
cmp
and
jg
in
mov
enterw
repnz
leave
enter
add
inc
mov
ret
lret
lds
dec
repnz
dec
adc
xchg
jp
mov
cmp
sti
mov
inc
dec
jo
push
sub
es
fucomip
aam
push
jmp
mov
lret
jo
call
pushf
xchg
add
mov
mov
sbb
nop
loope
sub
push
addr16
pop
inc
daa
mov
dec
movsb
jns
xor
lcall
cld
push
inc
std
jbe
std
sbb
push
ficomps
sbb
xchg
paddusw
aas
or
dec
mov
cmpsb
cwtl
inc
cli
cmp
insl
sbb
jl
inc
push
add
sbb
loopne
ret
mov
lock
fiaddl
outsb
popa
aas
cld
aad
fucomp
stos
sbb
and
into
imul
xchg
push
pushf
testb
cmp
mov
insb
mov
xor
loopne
or
loopne
lret
push
int
les
cmp
mov
daa
bound
pop
xchg
pop
cmpsb
insb
inc
adc
repnz
xor
or
lods
sbb
pop
push
and
std
out
call
test
inc
loopne
sbb
inc
gs
mov
int3
lock
and
movsl
aam
out
inc
mov
shlb
dec
mov
inc
sbb
leave
std
and
push
fs
jo
cmp
xor
jno
int
cmpl
arpl
push
push
mulb
movsb
cmc
push
add
sub
push
sarl
fwait
pop
imul
inc
dec
cs
mov
ret
push
lds
and
adc
outsb
insl
pop
int3
sub
add
mov
mov
aas
test
and
cmpsl
pop
in
test
fsubr
push
and
and
xchg
lds
js
push
inc
out
mov
jo
jb
xor
js
rorb
pusha
jns
ja
aas
xlat
aas
inc
mov
mov
push
inc
jbe
sub
pop
lret
and
repnz
das
pop
mov
in
push
bound
jle
call
fildll
jmp
mulb
jg
sub
add
insb
jbe
inc
mov
imul
mov
add
add
hlt
adcb
add
mov
or
xchg
push
imul
fldt
in
pop
xchg
repnz
mov
imulb
cmp
dec
fsubrp
outsl
out
cli
inc
xchg
stc
or
faddp
ljmp
adc
out
lods
sti
sub
pushf
cmp
pop
sbb
or
sub
sub
push
out
jo
es
xchg
ds
xor
imul
addr16
sti
jg
leave
push
daa
sti
dec
icebp
rorl
sar
movsb
pop
aas
push
fmul
cmp
or
jae
lock
and
repz
or
cmp
dec
add
push
dec
xor
xor
inc
adc
pop
inc
or
aam
jo
fs
aaa
inc
mov
ret
movsb
scas
mov
cs
or
addr16
adc
dec
popf
jmp
add
clc
xchg
xor
xor
mov
js
arpl
bnd
jecxz
jb
jp
mov
xor
sub
mov
out
and
popw
xchg
mov
ret
lods
jne
push
mov
aam
lds
push
fisubrs
xchg
imul
mov
nop
mov
filds
inc
lods
sbb
and
adc
pop
xchg
lea
lds
movl
mov
fidivrs
loopne
cli
sub
inc
pop
and
decl
in
xchg
imul
shll
pop
inc
cltd
pop
or
ret
lods
pop
fistpl
scas
mov
mov
lea
jo
scas
sub
xadd
push
lret
in
loopne
inc
sub
out
add
fxam
js
lods
in
adc
pop
push
cmp
sub
mov
cmp
add
mov
sub
mov
and
jecxz
imul
inc
xor
fadd
sub
dec
ljmp
mov
pop
jnp
test
subb
push
add
mov
lds
mov
mov
subb
xlat
fldt
lret
imul
push
mov
push
fisttps
in
frstor
sub
pop
ss
xor
push
int
dec
imul
repnz
and
aas
jg
inc
popa
push
pop
mov
ja
repnz
repz
mov
sub
xchg
stos
jb
xchg
mov
add
jbe
push
ss
shlb
shlb
ljmp
xor
jb
fnstenv
data16
fimuls
cltd
jnp
unpcklps
mov
cli
out
cli
lret
adc
repnz
outsb
dec
mov
push
mov
mov
imul
cmp
mov
in
jle
push
sbb
cmp
lods
inc
in
fmulp
dec
mov
rcr
cltd
add
aad
add
add
push
mov
repz
ret
ret
or
xor
mov
cmp
mov
call
test
rcrl
inc
mov
push
mov
ljmp
je
sbb
push
mov
mov
ror
ficomps
sti
fsubrl
pusha
adc
pop
ret
and
adc
inc
mov
jo
xor
test
add
aas
sbb
mul
add
les
inc
inc
call
mov
js
cmp
sub
nop
shll
imul
pop
dec
repz
xchg
mov
adc
push
rcr
lds
lret
repz
and
fiadds
test
or
push
out
sbb
push
pop
fistps
mov
cmpsl
roll
lret
fisubs
cmp
in
inc
pop
xchg
add
cmpsl
jns
jecxz
xorb
push
xor
aad
mov
dec
subl
jl
aas
in
loop
dec
mov
iret
push
mulb
mov
lds
mov
mov
cmp
ret
hlt
rcrl
lds
xor
cmpsl
pop
repz
push
test
sub
and
fidivs
jg
daa
mov
out
jae
add
sub
jo
and
ficomps
call
ret
imul
addr16
loope
push
add
les
mov
movsb
les
fldpi
fwait
ret
dec
sub
add
pop
std
xor
inc
cs
sub
pop
jp
sbb
sub
in
cmp
sbb
cwtl
lods
enter
push
into
cmp
cld
pop
add
mov
ret
pop
jnp
test
adc
movsl
push
pusha
inc
aaa
mov
data16
cmp
pusha
pop
jnp
das
fnstcw
imul
or
inc
and
jb
mov
inc
jno
jmp
into
mov
cmp
loopne
leave
push
push
cmpsb
sub
mov
cmp
mov
mov
xchg
fisubs
pop
leave
sub
into
sub
jbe
rol
jb
xchg
sub
cli
add
daa
lock
sahf
xor
add
mov
ret
or
mov
adcl
dec
xchg
ret
or
jo
scas
sbb
lods
sub
inc
sbb
mov
push
mov
push
ret
push
inc
repnz
add
gs
mov
cld
sub
lret
push
fs
std
sbb
jne
dec
data16
nop
test
adc
daa
stc
sub
ret
ret
and
pop
add
in
fcmove
loopne
rcrl
jns
and
int3
fldl
bswap
stos
push
ret
pop
aad
sbb
xor
add
or
jnp
sahf
mov
loop
lahf
mov
fisubs
into
icebp
sbb
enter
iret
ljmp
or
int3
mov
hlt
push
cmpsb
pushf
fsubrl
roll
pop
ds
decl
xor
ret
add
sub
ja
out
jp
lods
and
ret
push
sub
fstpt
mov
addr16
icebp
adc
push
sbb
or
mov
les
adc
data16
rorl
into
shl
and
lret
xorl
jp
je
add
inc
popf
adc
inc
lahf
cmp
dec
inc
xchg
test
addl
xor
mov
lock
inc
adc
jle
cmp
out
mov
push
sahf
xor
mov
into
cmpsb
dec
jne
incl
pop
out
add
push
fs
inc
add
in
and
mov
mov
ficomps
dec
xlat
aas
mov
or
push
cltd
ficoms
cmp
mov
sbb
ret
daa
mov
xor
push
pop
adc
push
cmp
data16
insb
out
and
push
mov
andb
fwait
sarl
andl
jb
out
sub
cmpsl
xorb
cmpsb
xor
fcmove
sbb
push
sbb
dec
mov
adc
cmovs
ret
aaa
pop
out
xchg
into
mov
lret
mov
fucomp
inc
adc
lret
pop
fiadds
or
enter
or
or
daa
pop
sub
and
lods
outsb
xor
push
mov
jae
xchg
dec
daa
mov
scas
or
inc
dec
fmuls
std
mov
add
mov
ds
subb
push
push
push
xchg
push
jb
or
cmpsb
mov
or
jno
test
icebp
clc
add
or
lods
push
aad
and
and
fistps
mov
test
jmp
mov
and
or
out
or
das
call
lods
add
ret
sbb
lods
xlat
cmp
dec
cmp
jg
xchg
sub
push
scas
jnp
daa
aad
jmp
inc
mov
mov
sub
les
jmp
inc
dec
ret
ret
je
mov
cmp
inc
lods
scas
jnp
iret
mov
in
xchg
mov
pop
int3
xchg
pop
pop
inc
xor
push
sbb
push
pop
dec
pop
xor
mov
test
mov
jbe
inc
mov
inc
out
es
cmpsb
into
adc
jl
test
hlt
shlb
aaa
fisttpl
ret
pop
mov
fisttps
mov
inc
nop
jo
and
fcmovu
fisubs
jae
add
lods
popf
add
into
js
dec
bound
cmp
addb
inc
xchg
inc
movsb
testl
sbb
stos
and
or
lret
ret
cmc
dec
shr
add
fsts
jno
insb
dec
mov
ljmp
fbstp
fnstenv
rcll
pusha
xor
ret
inc
popa
lahf
add
or
fdivl
shrb
mov
push
jecxz
xchg
and
icebp
nop
sub
ret
or
jno
dec
pop
push
sbb
adc
add
jl
add
lods
mov
inc
pusha
repnz
loopne
cmp
data16
sbb
cld
jnp
data16
insl
cltd
adc
lea
jmp
cmp
add
inc
dec
fimull
push
inc
loop
add
fs
pop
xchg
inc
dec
add
and
inc
shlb
ror
hlt
stc
fnstsw
lds
sbb
and
loop
push
and
fs
nop
inc
push
mov
inc
shll
add
dec
ret
add
fucom
xchg
sbb
sbb
out
add
lods
add
movsl
aad
pop
leave
fcomip
jbe
jecxz
ret
aad
ret
into
pop
push
sbb
into
inc
inc
aam
pop
repnz
fiaddl
int3
js
jecxz
jmp
inc
pop
inc
inc
lahf
repnz
xchg
mov
dec
sub
xchg
dec
dec
ds
insb
sub
test
scas
imulb
mov
dec
mov
lret
ljmp
daa
insb
dec
addl
scas
andl
fildl
lcall
push
lret
pop
push
fisttpl
shl
adc
cmpl
inc
dec
lret
mov
int
or
loop
dec
movb
jecxz
cmp
pop
inc
sbb
push
pop
dec
push
xchg
repnz
inc
mov
dec
repz
loopne
sbb
inc
cwtl
lret
aam
xchg
dec
adc
int
dec
inc
mov
or
lds
cmp
and
add
pop
lret
sbb
push
dec
xchg
push
repnz
inc
int3
lret
enter
inc
loopne
fcomps
inc
push
lret
adc
adc
repnz
add
inc
xchg
and
loop
dec
lcall
and
out
inc
loop
cwtl
add
inc
popf
lret
dec
out
dec
loop
repz
add
nop
jp
ret
xchg
loop
add
inc
fxch
fwait
repz
pop
dec
mov
repnz
inc
or
lret
push
cmovp
xchg
repnz
add
inc
pop
lret
fldl
pusha
lds
dec
inc
inc
repnz
add
inc
mov
pmuludq
push
hlt
jecxz
loop
add
inc
pop
dec
leave
out
pop
loop
insb
push
repz
push
dec
dec
or
repnz
add
inc
adc
stc
jecxz
push
pop
dec
pop
sbb
sbb
inc
xchg
lret
xchg
push
adc
dec
ficomps
sbb
inc
pop
lret
adc
adc
or
leave
add
xchg
push
inc
loop
mov
xor
pop
repz
mov
mov
inc
xchg
rolb
ret
or
cwtl
loop
inc
xchg
lret
out
add
inc
or
dec
repz
add
pop
inc
nop
or
mov
inc
xchg
add
inc
ret
and
push
pop
dec
fcompl
sbb
inc
push
lret
xchg
push
push
dec
dec
or
or
inc
inc
lret
loopne
jecxz
push
pop
roll
push
lret
roll
repnz
inc
dec
lret
test
inc
lds
repnz
inc
push
lret
roll
iret
dec
lea
dec
add
inc
pop
lret
add
inc
lds
repnz
inc
push
lret
push
push
push
dec
mov
leave
cmp
add
xchg
inc
loop
push
lret
repnz
add
and
ret
faddl
pop
icebp
add
out
sbb
loop
add
xchg
out
pop
loop
lret
sbb
icebp
add
push
adc
loop
repnz
lret
movsb
push
les
push
leave
add
repnz
ss
inc
cli
lret
cmc
push
xor
je
repnz
repz
inc
push
add
in
dec
ss
repnz
ret
add
and
sbb
inc
adc
dec
rorb
jecxz
push
ret
dec
inc
pusha
pop
out
loop
repnz
inc
lret
adc
rorb
dec
push
aam
push
add
inc
sbb
pop
repz
add
push
les
mov
lret
inc
dec
lret
xchg
push
xchg
dec
xlat
fptan
sbb
inc
pusha
lods
rcrl
push
dec
xchg
dec
add
inc
dec
lret
adc
xchg
dec
sbb
cltd
add
inc
sbb
ret
inc
jnp
les
enter
or
repz
xchg
dec
cltd
pop
add
inc
popa
or
hlt
inc
loop
add
inc
dec
lret
add
lock
out
push
repz
dec
pop
adc
sub
fs
mov
jle
xor
mov
lock
adc
lret
iret
jae
push
filds
lods
sub
dec
int
and
dec
scas
imul
dec
or
xchg
in
loope
pop
shrl
cli
lods
je
into
xchg
mov
cltd
lods
ss
xor
lods
adc
sbb
add
nop
push
out
xor
mov
inc
xchg
cltd
xor
sub
psrad
pop
push
add
push
les
jp
out
sub
or
push
rcll
lock
iret
jmp
mov
test
xor
add
scas
outsl
pop
xor
out
or
aaa
add
into
inc
out
mov
lock
push
orl
int3
or
fimull
mov
xor
cltd
xor
fmull
push
xchg
mov
ja
aad
dec
in
stc
mov
adc
dec
out
pop
add
adcb
adc
shll
cld
or
pop
ljmp
or
dec
mov
shrl
out
ret
outsb
push
jb
inc
or
mov
int
fldenv
dec
scas
mov
dec
sbb
sub
or
and
adc
outsb
in
mov
lock
test
xchg
stos
xchg
dec
or
jae
hlt
cmp
push
dec
in
push
dec
dec
inc
sub
mov
dec
fimuls
adc
push
jo
outsb
xor
or
push
arpl
xchg
mov
ds
scas
or
sbb
je
or
xchg
repnz
adc
cmp
mov
adc
sub
adc
jne
mov
pop
sub
xchg
aad
add
jmp
hlt
dec
int
loop
repz
mov
push
jg
push
sub
ljmp
pop
cmp
out
inc
push
and
pop
lods
loop
xor
aas
dec
xchg
outsb
jle
push
je
mov
iret
sbb
test
rorb
add
outsl
sti
cmp
les
lret
mov
cmp
xorl
jg
test
sub
sbb
jb
stos
push
dec
and
push
test
mov
dec
pop
icebp
cwtl
dec
cmpsb
gs
or
pusha
adc
movb
cld
lods
jo
and
ss
lret
xchg
arpl
jne
and
loop
inc
stos
push
inc
xchg
pop
rsqrtps
or
mov
add
or
in
inc
ds
decb
mov
lock
jae
lea
mov
insb
sbb
shll
lods
mov
mov
lods
enter
shl
into
cmc
inc
or
mov
out
daa
add
in
pop
in
lret
scas
pushf
pop
sub
inc
sub
pop
aam
rcrl
ds
out
addl
in
leave
pop
in
cmpsb
cmp
or
push
int
mov
xlat
imul
cmp
cmc
xor
iret
repnz
or
pop
push
aam
outsb
nop
inc
push
mov
testb
push
nop
cmp
push
push
xchg
mov
pop
mov
inc
adc
dec
nop
rorl
mov
ljmp
rcrb
pop
outsb
sarl
inc
mov
add
adc
mov
in
and
dec
jmp
xchg
push
add
es
inc
or
out
push
add
shrl
inc
push
inc
fidivrs
xor
xchg
repz
movsl
je
xor
test
ljmp
sahf
or
in
sbb
outsb
xchg
add
shrl
xchg
push
repz
enter
push
scas
out
cs
test
cmp
jae
push
jbe
aam
adc
push
xchg
push
sub
repnz
outsb
in
mov
and
adc
mov
test
cwtl
sti
in
in
orb
into
ljmp
inc
out
pop
icebp
lcall
push
aaa
jnp
add
jbe
xor
dec
mov
pop
mov
out
mov
dec
out
add
sub
clc
pop
into
xor
adc
in
aas
mov
cli
and
and
sub
or
mov
movsb
or
or
jno
lret
xchg
pushf
pop
ljmp
stc
jecxz
xchg
mov
mov
dec
fisubrl
into
push
and
or
push
or
jge
jo
out
ljmp
add
and
xor
sub
scas
or
inc
jnp
or
mov
ret
and
sub
or
add
cli
pop
iret
add
add
dec
pop
or
scas
or
js
fidivl
iret
dec
sub
mov
shrl
add
lret
stc
push
dec
mov
push
push
lret
imul
add
push
inc
mov
dec
sub
ficompl
xchg
loop
adc
imul
or
fwait
add
enter
adc
cltd
cmc
sub
sbb
cld
imul
xor
pop
push
pop
push
sbb
into
shll
aam
push
in
dec
js
cld
lahf
xchg
ret
dec
lods
call
dec
sar
mov
pop
push
ljmp
int3
lret
adc
daa
je
loopne
sub
test
lret
add
mov
mov
xchg
lret
cmpsl
iret
add
repnz
ret
jmp
sbb
push
dec
mov
es
push
pusha
repz
or
push
data16
mov
movsb
and
outsl
add
in
dec
dec
ret
xor
inc
test
and
sbb
scas
adc
jbe
ret
and
dec
dec
scas
sub
push
pop
push
xor
test
imul
jge
dec
test
enter
test
mov
repnz
pusha
hlt
mov
jo
out
mov
subb
imul
fcoml
ljmp
mov
cli
frstor
repz
and
jo
or
loope
sub
bndldx
add
into
push
mul
fisubrs
lret
outsb
adc
repnz
xchg
ror
pop
push
dec
fsub
cmp
add
mov
lea
dec
or
pop
jnp
push
xchg
jns
and
push
xchg
fxch
cwtl
test
loop
or
jne
daa
scas
outsb
fmuls
cli
lret
out
push
aas
sahf
data16
jmp
xchg
xor
fbstp
scas
dec
push
addr16
test
push
pop
mov
into
int
and
fwait
pop
inc
and
and
dec
inc
lods
cli
lret
and
cmpsl
fimuls
sbbl
out
stc
jns
xchg
dec
sti
xchg
daa
in
insb
push
or
test
jo
ja
jae
mov
add
jno
inc
xlat
or
push
lds
sub
sbb
push
inc
rol
add
cli
test
inc
pop
mov
mov
inc
lahf
lcall
in
cli
testl
lret
inc
cmp
push
dec
xchg
adc
fisttps
mov
push
mov
or
add
mov
dec
jbe
or
xlat
iret
sbb
das
cmpsb
inc
iret
lret
jmp
dec
xchg
outsl
inc
inc
xchg
imul
sbb
jmp
xlat
lret
or
out
sahf
inc
xchg
jp
or
dec
jnp
jecxz
xor
dec
cmovge
data16
inc
xchg
adc
sub
push
sbb
in
lahf
fcmovu
fs
pusha
push
sbb
add
jnp
ljmp
sub
sbb
out
int
movsb
inc
scas
call
pop
inc
and
mov
out
loop
aaa
inc
dec
cmc
mov
fcomps
add
out
std
cld
mov
sbb
or
shlb
enter
sbb
add
cmpsb
inc
adc
ds
push
inc
loopne
sub
orl
dec
inc
pop
inc
add
nop
sbb
push
inc
jmp
sbb
mov
cmp
inc
sub
inc
mov
xchg
push
or
pop
es
imul
sbb
xor
dec
mov
xor
int3
xchg
je
addl
ljmp
push
outsl
clc
pop
movsb
push
addr16
aad
xor
sbb
xor
nop
mov
inc
sbb
push
inc
adc
cmp
fidivl
pop
shlb
jecxz
xchg
pop
fisubl
in
leave
adc
hlt
mov
out
sub
sarl
cmp
dec
cltd
outsl
push
add
sub
mov
push
out
mov
cs
and
xchg
xchg
or
ret
repnz
cmp
addr16
mov
scas
dec
adc
testl
mov
and
imul
imul
pop
fmull
push
xchg
xlat
cmp
fldcw
out
lock
repnz
fldcw
nop
out
cmp
rcrb
or
push
popa
cmpsb
xorb
pop
add
xor
push
inc
inc
int3
xchg
mov
movsb
stos
stc
pop
sbb
inc
nop
das
sbb
pop
scas
pop
ret
fistpl
inc
adc
sub
xchg
cmp
adc
jo
adc
xchg
push
lds
ss
or
and
push
sub
and
ret
loopne
or
in
enter
add
add
stos
pop
fimull
ret
test
dec
es
mov
in
xchg
adc
push
mov
sub
inc
sbbl
clc
inc
push
dec
and
or
ret
pop
leave
adc
scas
pop
ja
into
xchg
ljmp
mov
fidivl
add
dec
sub
mov
push
push
xchg
add
ljmp
lcall
lds
je
pop
push
outsb
sub
aad
into
pop
imul
sbb
sbb
mov
adc
shlb
jae
xchg
fs
push
jmp
cltd
push
pop
adc
push
inc
lock
sahf
mov
dec
xchg
push
xor
test
ja
rorl
sub
sti
jecxz
push
add
add
adc
mov
inc
pop
adcl
ret
movsl
pop
andb
push
clc
mov
mov
out
sub
jmp
fs
jo
ret
cli
pop
das
jmp
ja
pop
or
ret
sbb
test
scas
dec
or
in
mov
add
xchg
pop
adc
fiadds
orl
xlat
jecxz
stos
mov
test
dec
lret
or
insl
adc
mov
pop
xor
mov
add
jne
stos
dec
cmpsb
push
rorl
cltd
in
test
out
ljmp
lods
stos
in
push
inc
fs
ret
jmp
sub
nop
outsb
dec
fistl
or
xchg
stos
les
push
ret
test
push
es
lret
inc
inc
pop
xor
jle
nop
push
jmp
push
inc
or
cmpsl
hlt
inc
lret
mov
jo
pop
inc
inc
out
mov
outsl
mov
pop
hlt
jp
stos
add
jmp
rorb
mov
incb
lods
emms
int3
lahf
lock
push
push
iret
push
mull
iret
in
nop
or
daa
mov
mov
or
cmp
or
mov
cs
inc
or
pop
into
dec
insl
scas
sbb
loope
and
mov
adcl
sub
dec
push
test
jmp
aad
inc
iret
mov
sub
mov
or
push
inc
lods
adc
xchg
popa
sbb
dec
das
mov
jae
jl
pop
inc
nop
enter
inc
test
pop
inc
mov
hlt
shl
xlat
pop
out
loop
in
mov
leave
enter
shl
loop
stc
repz
xchg
loopne
and
push
push
inc
inc
ret
in
mov
dec
dec
scas
jecxz
fmuls
jle
sub
test
out
out
xchg
fcoml
shr
push
aam
fcmovnbe
add
add
push
fcompl
jecxz
fiaddl
lea
int3
test
jb
enter
pusha
es
out
les
mov
and
test
enter
pop
test
fsubr
rcrl
xlat
jecxz
or
scas
push
inc
insb
push
ror
fcmovnu
repz
add
sub
iret
lock
dec
sbb
dec
adc
lret
je
fadds
repnz
arpl
sbb
inc
pop
loopne
pop
ret
scas
daa
fmulp
in
ret
fcompl
popf
inc
pusha
push
dec
push
inc
dec
fmulp
popa
fcomps
pop
out
xchg
movsl
xor
dec
aam
dec
in
and
push
push
aam
loopne
push
push
push
mov
pop
mov
sbb
movsl
hlt
out
je
iret
fistpl
fists
mov
jmp
cmc
adc
inc
dec
push
dec
lret
jge
faddl
dec
sbb
int
or
or
ficoml
rol
adc
adc
je
je
push
out
jmp
stos
dec
push
int3
jmp
jecxz
frstpm(287
xchg
sub
mov
and
in
movb
enter
repz
sub
es
push
or
mov
enter
out
xor
push
loopne
sub
adc
aad
push
mov
loope
sub
aam
push
push
mov
roll
ljmp
ds
jno
xchg
lcall
test
pop
sub
push
out
int
add
push
into
cmpsl
sar
add
les
dec
ror
pop
shrb
push
add
inc
dec
lret
mov
cs
lret
sub
sub
test
mov
fcmovbe
ror
push
mov
outsb
fnsave
sbb
cltd
cmp
test
roll
push
js
mov
mov
repnz
mov
dec
dec
adc
repz
ret
fisubs
test
icebp
adc
repz
ficompl
testb
sti
stc
inc
ds
dec
fdivp
push
mov
movsl
mov
loopne
push
test
lret
in
lds
ret
dec
test
aad
andl
dec
cmp
ror
decl
les
lods
mov
ret
cmp
sbb
ror
pop
aam
fcmovnb
mov
sti
jp
out
lret
xchg
leave
sub
ret
rol
lret
jl
fstpl
ret
pop
enter
rcr
adc
ret
out
lds
xlat
push
les
add
korw
mov
mov
adc
clc
repz
jecxz
pop
fistl
loopne
vrcpps
aam
fstps
out
ret
sbb
int
shl
xlat
fcmovu
lahf
ret
shrl
and
ficoms
loopne
jge
push
pushf
in
int3
add
or
inc
pushf
es
jp
pusha
lret
xor
out
aam
dec
fmul
imul
ret
xchg
lds
leave
dec
add
lea
js
dec
out
mov
inc
push
ss
inc
int
inc
inc
push
inc
sbb
test
add
into
add
inc
add
dec
push
push
les
lret
pop
mov
ret
mov
rorl
mov
or
or
push
push
push
push
lahf
cmc
insl
scas
loope
mov
fiadds
movsl
imul
lcall
xchg
dec
jl
pop
dec
mov
outsb
or
sub
stc
jbe
shlb
ret
shll
add
push
iret
lds
xor
jne
ret
ds
cs
cmp
insb
cmc
aad
add
aam
imul
add
enter
les
addr16
cmp
xchg
sub
ret
inc
fcmovb
enter
repz
les
in
or
inc
lds
sub
add
shrb
push
lea
sub
cmp
inc
adc
outsb
jnp
pop
repnz
inc
repz
lods
loop
jle,pt
outsb
out
push
add
notb
cmc
pop
jnp
cs
pop
push
ss
add
or
cltd
dec
rcll
daa
fwait
imul
je
sub
sti
add
jp
push
pop
dec
ret
incb
std
or
pop
pop
rcll
push
fbld
cs
ja
fs
mov
mov
fldl
fst
push
push
mov
out
and
insb
xlat
sub
nop
outsb
or
jge
out
outsl
mov
xor
imul
push
pop
data16
loop
adc
test
les
fldenv
xchg
inc
dec
gs
xchg
sub
xchg
lock
in
pop
repz
adc
shll
push
add
jg
adc
cli
in
ret
xchg
or
ret
jbe
icebp
mov
popa
ret
xchg
rcl
in
stc
adc
icebp
mov
js
cld
jmp
push
adc
add
mov
add
vpermb
ret
inc
cmp
popf
fldl
and
push
push
pop
lods
shll
xlat
lea
jge
and
xor
cmp
cmpsb
ret
dec
in
ret
je
cmpsb
adc
add
and
sbb
in
adc
cmpsb
mov
mov
lret
mov
negb
hlt
push
sbb
dec
mov
xor
or
push
iret
outsb
outsb
arpl
daa
inc
in
push
mov
in
data16
inc
or
enter
enter
les
imul
insl
hlt
inc
sub
lock
push
iret
bound
scas
fmul
je
sub
jo
xor
nop
and
in
push
or
dec
cmp
mov
enter
test
add
stos
add
out
dec
or
scas
push
push
shlb
xchg
les
lds
iret
loop
dec
lret
dec
sti
rcr
fistl
insl
push
sbb
push
outsb
jbe
cs
xchg
add
outsl
adc
lds
mov
lock
out
fs
sub
imul
sbb
repz
in
insb
imul
test
aam
lea
xchg
je
popa
sbb
ret
dec
xchg
push
push
dec
push
les
sub
mov
js
push
mov
push
repnz
xor
xchg
inc
outsb
or
mov
pop
and
adc
or
and
or
outsb
into
push
lret
testb
add
push
pop
cmp
mov
adc
xchg
popa
push
add
dec
insb
scas
xchg
mov
iret
arpl
sbb
in
xlat
or
data16
lret
in
xor
jbe
add
mov
iret
xchg
fidivl
ljmp
les
fcmovnbe
out
into
popa
enter
into
dec
push
push
fdivs
sbb
inc
sbb
je
ret
push
loope
push
iret
xchg
into
inc
out
jmp
lret
in
inc
jo
bts
add
movsb
aam
imul
shrb
add
rol
insb
xchg
dec
sub
inc
leave
add
inc
daa
dec
les
lods
mov
or
out
movsb
cmc
add
data16
add
jg
daa
xchg
imul
or
ljmp
int3
testl
xchg
inc
daa
shl
frstor
popf
jb
in
lock
ret
add
xchg
inc
clc
movl
push
adc
pop
push
lret
and
inc
sub
adcb
rclb
mov
or
sahf
mov
lods
insb
xor
cmp
adc
inc
imul
pop
into
fimuls
ja
test
test
scas
fisttps
loop
or
es
and
and
inc
scas
frstor
rorl
jae
insb
xchg
fucomi
lahf
pop
addb
test
int3
ret
ret
pop
ficoms
sub
ret
mov
inc
xchg
ret
loopne
xor
fs
pop
ret
fwait
cmp
or
jo
enter
push
push
inc
ficoml
inc
jbe
inc
sahf
shl
or
sub
inc
int3
mov
push
adc
sbb
jo
push
inc
pop
inc
clc
push
faddp
adc
xchg
in
jmp
inc
sub
in
ljmp
out
test
test
scas
dec
jmp
sub
ljmp
mov
out
mov
hlt
adc
push
movsl
test
loope
fmull
outsb
negl
push
ret
push
inc
rcr
ret
lea
push
pop
adc
out
lock
movsb
repz
pop
dec
data16
and
mov
aam
push
inc
lret
leave
xchg
aad
jb
push
shll
jmp
sub
shlb
outsl
xor
fcoms
cmpsb
cwtl
lret
or
mov
xchg
rcll
sbb
dec
sub
fld
dec
stos
push
cmpsb
stos
repz
into
rclb
xor
adc
or
std
and
jo
lcall
push
fsubrl
dec
loope
adc
ljmp
rclb
outsl
adc
nop
push
lods
dec
out
xchg
ret
imul
ret
scas
mov
mov
pop
loop
imul
dec
and
cld
lds
mov
in
test
dec
jno
sarb
xchg
aaa
xchg
pop
pop
int3
fcomps
addr16
dec
sbb
sub
or
adc
sbb
inc
sub
test
movsl
mov
ret
shll
inc
movsb
out
and
out
loopne
les
int3
in
ret
movsb
hlt
iret
out
and
fists
fldenv
movsl
mov
aam
movsl
in
in
lds
sar
into
lds
inc
je
je
fsubl
jne
jnp
out
loopne
xchg
adc
jmp
sub
inc
je
hlt
les
fsubrs
nop
sub
sub
push
sbb
je
push
in
lret
daa
sbb
jb
dec
into
lret
push
push
rol
sub
xorb
repnz
jecxz
loop
sarb
out
ret
in
flds
out
aam
mov
ret
daa
inc
repz
jmp
sub
and
xlat
pop
cmpsl
sub
pop
push
iret
pop
adc
imul
xchg
prefetcht0
cmpsb
mov
jb
pushw
scas
mov
sbb
scas
int
push
outsb
xor
push
mov
lock
inc
mov
fcmovb
xchg
int3
inc
fiadds
clc
les
fdivl
loope
sbb
and
inc
mov
int3
cmp
mov
adc
int3
fcmovb
imul
pop
fdivr
out
inc
into
push
or
les
fs
outsb
inc
lock
lods
test
repnz
pop
cmp
std
dec
fcmovu
fucomi
xchg
adc
cld
fiadds
fwait
shlb
inc
or
pop
aam
aam
add
fadds
rcll
out
lret
inc
lea
lds
int
inc
lea
jb
shr
or
les
lret
push
rclb
xor
inc
enter
inc
dec
xchg
bound
push
rolb
aam
loop
sub
dec
iret
je,pt
loopne
das
sarb
ljmp
jns
nop
xorb
jmp
scas
inc
icebp
iret
mov
in
addr16
add
dec
ret
xchg
push
dec
rol
jo
xchg
lds
xchg
dec
sub
pop
imul
iret
jns
xor
lahf
scas
cmpsb
xchg
lret
add
int3
jle
jl
inc
push
subl
mov
ficomps
pusha
in
loopne
sbb
int3
out
inc
lds
gs
test
pop
push
sbb
in
pop
jnp
mov
mov
int
add
dec
lret
jno
pop
outsl
iret
lea
bound
dec
lds
test
and
mov
xchg
cmp
push
adc
xchg
sahf
or
fwait
mov
pop
and
mov
into
lds
push
or
jge
adc
fldenv
ljmp
pop
out
imul
shrl
jp
ror
or
mov
xorl
sbb
mov
aas
jmp
adc
lds
lods
xor
push
cld
outsl
lcall
jge
in
notb
cmc
pop
inc
addr16
fs
mov
mov
out
push
adc
inc
movsb
mov
out
sub
xchg
mov
sub
je
or
jbe
mov
mov
xchg
stos
lods
xchg
ja
scas
sti
orl
cmc
mov
pop
pop
js
cli
frstor
ret
sub
mov
fisubl
orb
dec
adc
int
lock
jb
shll
les
scas
push
xchg
ss
lcall
push
iret
hlt
push
imul
xor
adcl
dec
aaa
jmp
mov
xchg
cltd
push
dec
fistpl
into
es
jae
dec
xchg
ret
mov
iret
cmc
fmull
ret
and
mov
ljmp
ja
sub
ret
adc
dec
and
adc
dec
push
enter
jo
jnp
inc
jmp
into
in
xchg
das
adc
dec
sub
int3
shlb
sub
into
sub
dec
das
jl
testb
dec
das
or
inc
bound
inc
loopne
incb
mov
or
add
loop
xchg
aad
jmp
sub
insb
jle
in
ret
insb
or
ret
jle
xor
or
adc
push
sub
lret
dec
lods
or
clc
les
sub
cmpl
jg
and
rclb
imul
cmpsb
or
inc
xchg
add
cs
lret
idivb
xchg
mov
xor
cmpsb
pushf
lret
dec
loopne
jmp
jmp
push
or
or
loop
inc
push
or
inc
add
inc
adc
jl
pop
fmuls
add
in
loop
icebp
int3
lea
loopne
add
ljmp
sub
push
xlat
les
or
cmp
outsl
and
fcom
fisttpll
call
call
pop
fistl
iret
mov
inc
test
cmp
roll
add
fdivr
iret
movsl
mov
in
pop
int
ds
into
int3
cmpsb
js
jns
stos
sub
jecxz
dec
popa
mov
hlt
or
jecxz
cmpsb
fsubp
jecxz
push
fdivr
int
fidivrl
loopne
dec
leave
dec
lret
push
rcrb
mov
aam
sub
push
fwait
add
fiaddl
push
gs
enter
loopne
ret
aad
rclb
inc
rcll
dec
cmpsl
enter
int
sub
iret
pop
ret
push
enter
lret
repz
std
inc
mov
daa
jecxz
aam
pop
rcrb
int3
sti
lret
push
shl
lret
xchg
jmp
pop
rorb
jecxz
repnz
aaa
int
xor
popa
pop
fstpt
pop
imul
add
pusha
and
mov
pop
orl
dec
repz
inc
fwait
outsb
fcmove
and
cmc
inc
and
jl
pop
add
xor
loope
ret
ret
insl
ficomps
inc
dec
and
xchg
je
push
inc
inc
mov
leavew
out
add
roll
rcll
pop
or
jecxz
add
inc
pop
stos
pushf
adc
in
fcompl
add
jle
arpl
int3
and
cltd
ret
icebp
into
pop
repz
push
aad
ret
push
repnz
dec
inc
add
ret
pusha
insl
push
les
and
push
push
jecxz
dec
dec
and
popaw
lods
push
dec
or
jecxz
repnz
add
inc
pop
lret
fiaddl
rorl
repnz
dec
push
and
ret
push
ret
ret
pop
adcb
cli
loop
sub
inc
repnz
and
push
inc
push
inc
test
or
leave
inc
jecxz
add
inc
add
in
push
stos
sub
lret
dec
push
or
sbb
outsb
lods
or
in
hlt
push
dec
dec
les
pop
repz
push
inc
stos
adc
add
rcrl
icebp
ret
or
xor
push
dec
lret
out
xchg
hlt
ret
cmc
dec
rcll
iret
stos
mov
mov
fidivrl
scas
inc
jbe
pop
xchg
into
lods
jb
lock
cwtl
inc
addr16
enter
icebp
push
lret
add
or
sub
push
inc
and
or
outsl
mov
mov
aas
aaa
push
xchg
jo
push
adc
fisttps
enter
sarl
iret
repz
push
lret
leave
add
flds
jecxz
add
lret
or
repz
test
or
int3
adc
or
and
in
inc
mov
into
jecxz
xor
iret
dec
aam
or
jecxz
inc
fcmove
loop
and
in
add
leave
add
int3
push
inc
dec
iret
ret
repnz
inc
aad
shl
fadds
lock
fistl
fiadds
cmp
lret
lret
mov
and
push
push
or
sbb
or
jecxz
inc
lret
flds
arpl
xor
add
cmpsl
pop
loop
mov
jecxz
add
repnz
into
inc
inc
lods
push
jae
inc
test
aam
out
hlt
xlat
jecxz
add
inc
jno
fstpl
jecxz
add
fildl
lret
leave
push
cmp
int3
mov
ret
add
inc
jecxz
aad
add
fmuls
fcomi
inc
add
inc
fs
jns
in
jecxz
add
inc
lret
lret
dec
int
repnz
inc
mov
lret
test
fdiv
lds
inc
in
ret
repz
enter
fs
stos
hlt
loope
into
inc
cmp
mov
out
aam
out
repz
push
fimull
add
dec
ret
arpl
inc
xrelease
dec
leave
movsl
repnz
add
inc
iret
lret
rolb
jmp
add
repnz
inc
ror
fdivp
lock
leave
adcl
add
inc
stos
lret
dec
int
ljmp
repz
dec
dec
fptan
imul
mov
fcomip
stos
ret
ret
lret
dec
enter
lret
lret
into
push
dec
inc
add
inc
aam
mov
xlat
push
lods
dec
fcmove
repnz
inc
loopne
or
sub
leave
inc
insl
lret
lea
iret
dec
lods
shl
int
aad
in
lret
push
push
fisttpl
fdivp
into
movsb
inc
jecxz
out
repz
cmovp
das
repnz
inc
int
outsl
repz
repnz
add
inc
fxch
adc
faddl
xor
push
rol
add
jo
lds
lret
mov
lret
dec
ror
repnz
fdiv
adc
aam
xor
repnz
add
inc
jno
xchg
push
loopne
ds
lds
dec
div
leave
jecxz
ret
inc
cmp
iret
repz
shlb
dec
jp
adc
sbb
lret
inc
lcall
add
inc
lret
movl
repnz
mov
rorb
shl
fmull
jecxz
repnz
repz
pop
dec
jge
repnz
add
inc
push
lret
ds
into
inc
jecxz
mov
xlat
push
xlat
les
jmp
push
or
faddl
fisubs
ret
les
enter
ror
popa
into
mov
shrb
mov
fadd
ficoms
movsl
shl
popa
ret
push
les
mov
lret
int3
add
mov
shlb
aam
rcl
popa
fdivs
mov
fisubrs
les
movb
mov
int3
and
movsl
rcl
popa
shlb
add
mov
mov
loopne
ret
rol
xchg
sub
and
movsl
ror
popa
int3
mov
into
test
mov
and
movsl
mov
rcr
popa
loopne
push
ret
ret
les
mov
enter
add
mov
shlb
shlb
mov
fsubrs
test
mov
in
add
mov
lret
movsl
ror
popa
shlb
aam
mov
mov
fisubs
loopne
rol
inc
push
sub
and
movsl
ror
popa
lret
int3
test
mov
aam
movsl
rcr
andl
fidivs
ret
les
enter
fcmove
xchg
sub
and
movsl
rcl
popa
aam
pop
test
test
mov
ret
les
enter
ror
popa
into
mov
shrb
mov
fadd
ficoms
movsl
shl
popa
ret
push
les
mov
lret
int3
add
mov
shlb
aam
rcl
popa
fdivs
mov
fisubrs
lds
movb
and
int3
sub
cli
lds
jae
ficoml
ja
ret
ja
ret
ffreep
xlat
mov
lret
neg
leave
add
sbbl
mov
lret
fcmovnb
jne
ret
mov
ret
fisubrs
std
pop
cmp
add
add
sbb
fiaddl
std
fdivrs
inc
bound
fcmovnb
std
push
cmp
lea
add
pushf
or
jb
and
xlat
sti
xchg
inc
enter
sbb
sub
xchg
aad
jmp
push
ret
fcmovnu
cmc
mov
enter
shll
shlb
inc
push
sub
dec
shrl
into
mov
dec
fstps
jb
fiaddl
push
leave
add
fldl
shrb
rorl
addr16
out
ror
pushf
decl
rol
push
add
test
sub
add
push
push
inc
bound
add
lds
lds
shl
adc
push
adc
daa
leave
xor
ljmp
jbe
cmc
pusha
xchg
fxch
or
enter
lcall
ror
ret
mov
or
sar
pop
call
popa
mov
lds
iret
lret
mov
push
push
dec
dec
bound
ljmp
nop
leave
test
mov
leave
push
ret
xlat
dec
mov
mov
pop
in
ds
in
fcomps
lret
push
pop
icebp
int
in
mov
dec
mov
push
leave
pusha
add
not
mov
dec
and
out
add
test
fnstenv
or
pushf
jl
loope
pusha
ss
push
inc
add
xlat
or
dec
nop
mov
lds
lods
ljmp
ret
pop
ret
xchg
add
addb
fnstcw
lret
lds
addl
add
bound
push
mov
inc
jl
adc
int3
fidivrl
rcl
mov
inc
mov
not
filds
pop
test
push
rorb
pop
fsubs
sbb
imul
cs
mov
push
int
add
iret
int3
int3
add
enter
or
add
inc
jecxz
cmc
push
lds
lret
testl
vmovaps
add
icebp
dec
sub
ret
pop
sub
nop
lret
push
dec
insl
add
add
fldt
outsb
inc
rol
notl
inc
int
enter
sbb
leave
int3
pop
je
push
stos
lds
inc
lea
je
outsl
aad
dec
stc
test
lea
pusha
stos
aad
shlb
shrl
aad
inc
out
mov
leave
in
loop
pop
dec
out
xchg
lds
push
adc
aam
rcrl
mov
lret
fwait
inc
sbb
negl
add
je
xchg
imul
push
out
aad
sarl
int
push
shlb
loop
fisttps
pop
push
lds
test
jmp
aad
mov
cmp
nop
ret
lds
fnstcw
ret
in
push
jae
aaa
mov
icebp
inc
mov
ret
shlb
mov
dec
ja
push
xchg
mov
pusha
mov
push
sbb
fidivrl
mov
fcoms
shll
lds
ret
xchg
mov
dec
mov
mov
ret
fisttps
mov
int3
push
sbb
cmc
inc
dec
stc
in
inc
push
xchg
cmpsl
lret
mov
or
arpl
and
stos
fs
arpl
add
test
pop
push
cmpsl
in
in
aad
dec
fucomp
sbb
jecxz
pushf
dec
inc
mov
stos
push
hlt
bound
nop
push
sub
adcb
jno
fs
xor
or
dec
xor
pop
push
addr16
lock
in
and
mov
dec
jecxz
bound
rolb
test
in
jmp
mov
fs
pop
sbb
push
mov
jae
or
lahf
or
rcrl
shlb
data16
dec
or
inc
jl
sub
iret
rorl
inc
jo
add
inc
adc
mov
pushf
enter
mov
sbb
adc
xchg
push
sub
stos
pop
jo
sbb
mov
les
cld
arpl
sbb
adc
push
pop
jns,pn
adc
je
or
push
ficomps
dec
imul
dec
pop
test
push
or
mov
test
daa
sahf
push
xchg
repz
fidivl
lock
add
das
jbe
sub
cli
mov
jno
sbb
mov
push
repz
out
jno
adc
out
jno
mov
and
push
jnp
lret
pop
shrb
pop
js
sbb
dec
sub
jmp
dec
daa
mov
jle
imul
movsb
dec
out
or
out
adc
inc
or
cld
pop
dec
sub
lds
xchg
jo
aad
fmuls
popf
mov
pop
out
addl
pop
sbb
mov
lds
scas
ret
js
imul
push
xor
int3
sub
or
out
adc
jle
adc
push
mov
lahf
xchg
xchg
xlat
pop
mov
repz
xchg
push
shrl
or
shrb
outsb
in
lret
mov
inc
pop
dec
xchg
lock
dec
adc
pushf
hlt
fildll
cmpsl
mov
hlt
add
mov
push
ljmp
mov
or
push
push
add
jmp
adc
lahf
in
dec
insl
sbb
adc
sbb
cltd
stos
adc
or
dec
dec
fmuls
add
mov
cli
mov
push
jmp
out
push
push
int3
jmp
push
fwait
inc
out
mov
ret
les
cmpsl
inc
xchg
pop
mov
and
lds
ret
cli
arpl
pop
inc
inc
jecxz
or
loop
testb
push
shll
ret
mov
sbb
add
and
add
and
and
ror
add
mov
adc
xchg
add
mov
sbbb
sti
mov
push
jmp
sub
mov
clc
es
push
adc
sahf
and
mov
mov
jmp
xor
and
test
idivb
pop
sub
ja
fisubs
std
dec
ss
add
sbb
push
pop
outsb
adc
hlt
ljmp
ret
dec
dec
inc
jmp
push
int3
in
cmp
sahf
addr16
mov
push
jnp
int
xchg
sbb
rcll
sbb
leave
lret
iret
fstl
jne
dec
iret
idiv
adc
call
or
xchg
inc
addr16
pop
jne
adc
icebp
or
mov
xchg
and
into
pop
mov
dec
and
rcll
sub
xchg
xor
rcl
shlb
jecxz
in
sub
rolb
mov
scas
int
in
out
xor
jbe
enter
movsl
add
push
fcmovnb
push
jbe
rcrb
mov
cld
push
sarb
add
xchg
sbb
inc
gs
adc
lret
inc
inc
fildl
mov
jb
push
sub
xlat
jns
pusha
xorl
mov
add
inc
mov
mov
add
jb
mov
add
mov
and
pop
sub
into
add
add
add
xchg
or
js
adc
shl
cs
mov
shl
ret
push
dec
arpl
push
dec
jle
stc
inc
add
in
xchg
js
or
mov
movsb
ficompl
mov
stos
outsb
hlt
dec
test
in
push
jnp
pushf
pop
push
ror
inc
or
popa
sbb
insb
dec
lret
add
xor
sbb
push
scas
inc
inc
bound
add
nop
fcomps
xor
push
pop
je
xchg
or
leave
scas
or
push
dec
sbb
push
inc
mov
push
not
mov
jecxz
mov
pop
cli
dec
dec
adc
dec
or
fiadds
fnstenv
mov
mov
stos
xlat
push
cwtl
call
loop
xor
push
and
daa
fnclex
pop
mov
jae
sub
adc
ljmp
clc
lea
pop
dec
mov
testb
lret
fbld
fcmovnb
scas
or
fcmovnb
xchg
jmp
mov
jbe
pop
movsb
fbstp
leave
and
add
add
and
int
or
clc
lea
add
lea
daa
or
pop
jecxz
dec
shrl
push
xchg
iret
inc
shll
mov
in
adc
iret
mov
into
shll
and
adc
mov
dec
test
pop
test
inc
in
iret
xchg
lea
scas
std
sbb
push
mov
dec
js
and
cmp
adcl
add
lock
bound
mov
movsl
scas
rcrb
adc
mov
ffree
cmc
dec
out
leave
lea
adc
pop
mov
xchg
scas
and
pushf
jb
cli
jnp
rclb
lret
jg
rcrb
sbb
sub
add
jae
dec
sbb
mov
lret
adc
shlb
xchg
add
dec
ret
shrb
jle
add
mov
sbb
xlat
push
push
leave
jecxz
leave
cmp
das
sbb
ret
sbb
or
lret
cmpsl
mov
add
loop
ret
movsl
ja
repz
loopne
rol
shll
push
ret
lret
jb
fnsave
insl
add
or
mov
jae
out
mov
neg
jecxz
inc
dec
mov
rolb
xor
fnstsw
fcmovu
pushf
iret
fildll
mov
fs
jge
movl
jne
test
adc
push
push
pop
mov
in
push
fcmovu
ret
add
ret
jle
fdecstp
or
repz
lret
ret
mov
jae
pushf
mov
pop
jle
fstl
jp
mov
inc
ret
scas
repnz
test
mov
jle
mov
inc
jae
shll
pop
shll
jae
fistps
andb
xor
subb
jnp
or
ret
movsl
and
fisubl
shrb
les
not
sbb
sbb
push
cwtl
xor
xor
and
dec
ret
pop
push
xchg
fists
ret
add
mov
dec
push
enter
cs
ja
cwtl
add
lds
sahf
out
jmp
xchg
ljmp
mov
add
adc
adc
mov
hlt
ret
int3
sarb
popf
ret
cmpsb
xor
lds
push
mov
shll
pop
imul
aaa
js
sarl
xor
adc
rorl
dec
ljmp
and
es
fcmove
cmp
jecxz
movsb
inc
ret
jnp
test
outsl
inc
movsl
add
add
lea
inc
sub
sub
push
mov
ljmp
call
sub
ljmp
lods
sub
data16
insb
test
jb
addr16
adc
call
es
mov
mov
fidivrl
lock
ret
and
orb
push
fldl
mov
dec
je
jecxz
mov
lods
mov
pop
aas
adcl
adc
mov
notl
or
imulb
ret
insb
test
sub
lods
iret
ret
adc
xchg
cmc
ret
outsl
add
test
ss
dec
pushl
ror
rcl
mov
ja
push
pop
or
fsincos
sub
push
leave
test
pop
stos
add
mov
aas
jmp
xchg
sub
inc
cmpsb
jae
lret
loopne
loope
aad
dec
add
ret
int
and
rol
mov
push
sti
pusha
add
mov
jge
mov
mov
aad
inc
insb
push
lret
mov
inc
loopne
filds
xchg
loopne
lds
mov
jne
mov
sbb
jecxz
dec
adc
dec
jne
daa
leave
movsb
dec
clc
lods
adc
inc
and
xor
and
inc
addb
dec
repz
jecxz
shrl
xchg
or
rcrb
mov
in
inc
dec
inc
fnsave
ret
add
inc
ljmp
test
ret
loop
dec
jecxz
fidivl
loop
add
inc
movsl
lret
mov
lret
lods
dec
dec
or
pop
je
and
movsb
sbb
ja
pop
dec
ffree
ja
ret
ret
loop
dec
cli
test
dec
inc
add
dec
adc
ror
mov
sahf
in
lcall
test
loop
and
lret
jbe
or
add
ja
ret
ret
loop
pop
inc
into
fldcw
xor
movb
adc
popa
mov
loop
pop
ret
dec
movb
dec
or
push
bound
popl
fsts
add
and
ret
in
jmp
sub
lods
pushf
mov
xchg
inc
jmp
dec
int3
xchg
push
dec
push
jmp
iret
in
loopne
ljmp
inc
or
rorl
mov
iret
orb
test
lret
mov
movsl
push
loop
dec
test
shrb
repnz
cltd
iret
jbe
sub
push
loopne
push
inc
iret
fists
fisttpll
rcr
inc
dec
ret
or
mov
incl
leave
fisubs
add
or
leave
lret
mov
inc
loop
es
in
vfmsub213sd
test
hlt
mov
mov
enter
adc
into
les
enter
enter
or
add
or
cltd
dec
mov
and
mov
or
in
aad
ret
lret
add
filds
add
incl
xchg
test
mov
ret
pop
into
xor
dec
push
popa
dec
add
pop
mov
int
movsl
mov
jg
les
ljmp
xchg
sub
or
lods
cmp
or
imul
push
mov
jb
movl
ljmp
test
mov
inc
fcmovnb
or
sbbb
mov
add
rcrl
lds
pushf
add
cltd
fildl
pop
andb
aaa
dec
repnz
xorb
sbb
sbb
xor
das
cs
ret
ljmp
and
fistl
fimuls
int
mov
lret
add
cmp
mov
loope
jge
jecxz
add
fisttps
leave
xchg
cmpsl
mov
inc
aad
ret
pop
push
push
sub
jne
cwtl
rorb
xor
sarb
adc
xchg
push
loope
rcll
cmc
iret
add
dec
leave
icebp
xchg
adc
cmpsl
xor
push
push
push
add
cmc
xchg
push
push
xchg
rcll
inc
rcr
int3
pop
arpl
push
xchg
mov
cs
xchg
mov
inc
jl
mov
push
call
add
push
in
ficoml
jecxz
iret
xor
ret
lcall
pop
popa
cs
jp
inc
imul
mov
sarl
test
ret
lret
jl
push
push
dec
or
push
or
addl
cmpb
arpl
push
pop
hlt
test
lea
in
ljmp
xor
push
das
icebp
and
inc
xchg
test
scas
lahf
mov
push
add
inc
test
xchg
test
mov
nop
sbb
xor
out
mov
inc
sbb
cmp
add
out
adc
jge
or
and
das
pop
insb
sub
sbb
mov
push
lds
sub
push
inc
icebp
pop
repnz
push
sbb
xorl
pop
lcall
rcll
enter
fdivl
dec
inc
jnp
aas
rolb
xor
jae
leave
test
push
icebp
clc
ret
xchg
mov
xchg
popf
repz
dec
dec
jnp
lahf
pop
xchg
xlat
cmc
xchg
dec
bound
and
popa
adc
xchg
fcoms
sub
xchg
add
xchg
inc
sub
lea
mov
pop
inc
push
add
push
fucom
ret
add
dec
popa
mov
int
and
cwtl
ss
xor
les
or
mov
inc
rorb
adc
or
les
dec
scas
mov
test
in
sbb
pop
into
fistps
or
push
mov
inc
cmp
mov
orb
mov
jle
add
mov
xorl
iret
iret
and
into
leave
ret
adc
mov
xor
jmp
fs
inc
nop
xchg
jmp
jno
imul
popf
test
add
jecxz
and
icebp
pop
xlat
pop
pop
leave
inc
les
push
leave
repnz
xor
les
inc
int
sbb
mov
lods
repnz
stos
add
dec
bound
mov
mov
dec
pop
loop
in
jbe
hlt
inc
jb
xchg
ret
stos
inc
rol
ret
and
test
mov
repnz
les
insl
sub
test
mov
loop
addl
stos
rolb
inc
or
jbe
ss
fs
mov
ret
loop
pop
iret
bound
fistl
lock
sub
ret
ret
fistl
pusha
fadds
andb
mov
add
cmp
int
mov
jecxz
in
scas
and
stos
push
add
sarl
dec
orb
xchg
adc
bound
cmp
enter
dec
sar
pop
mov
repnz
pusha
shll
inc
xchg
and
adc
orb
rcr
bound
push
xchg
xor
xor
ret
push
inc
push
push
lret
xchg
hlt
shlb
add
and
add
fidivl
push
std
sbb
xchg
lcall
or
ret
add
fstps
sub
pop
add
push
push
xlat
ret
mov
stos
or
push
movsl
push
add
push
add
push
push
xchg
push
push
inc
sbb
ret
dec
xchg
inc
jmp
aam
lahf
jae
gs
mov
pop
push
add
xchg
mov
pop
mov
cwtl
push
dec
add
and
jecxz
bound
insb
mov
jb
arpl
xchg
rorb
sbbl
mov
out
sub
dec
jle
jbe
stos
cmpsb
inc
incb
es
bound
push
xchg
push
pop
or
xchg
frstor
dec
clc
int3
fcompl
loop
pop
inc
loopne
inc
and
dec
enter
ret
into
ret
inc
inc
xchg
or
and
pusha
fiaddl
stos
jmp
leave
outsb
les
jae
cmp
orb
shl
push
sbb
or
and
pop
fwait
rcr
loop
pop
pop
xlat
jecxz
orb
jl
xchg
and
sbb
inc
ficoms
inc
lret
sbb
push
call
in
pushf
lret
repz
pop
xor
inc
ret
mov
cmc
fists
mov
inc
xor
and
lds
out
and
jo
mov
sub
push
repz
sub
adc
ret
stos
push
rol
rorb
lahf
cli
inc
xchg
pusha
repnz
ret
dec
xchg
loop
pop
xor
test
push
movsl
push
mov
lds
scas
movsb
ret
mov
dec
cli
pop
adc
push
imul
into
enter
inc
add
xor
mov
movl
adc
loop
lahf
inc
shlb
ret
aad
inc
push
aad
insb
inc
imul
clc
cmc
rclb
andb
lds
sbb
ret
int
jno
pop
pusha
aaa
xorl
push
or
pusha
or
ret
or
decb
loopne
test
arpl
in
push
xor
pushf
lret
sbb
popa
imul
add
repz
leave
mov
enter
ret
in
or
insb
mov
dec
ret
push
ret
addl
add
xchg
testl
fists
sbb
leave
sbb
aad
pop
sarl
jle
sbb
or
push
ljmp
mov
ret
xor
sbb
dec
xlat
inc
jecxz
xor
add
nop
test
and
inc
inc
add
adc
pop
pushf
sub
int3
sub
outsl
and
aam
mov
cs
inc
inc
xchg
adc
lret
pop
xor
ret
or
add
inc
mov
dec
sub
ja
lcall
inc
push
and
xchg
mov
iret
lret
cmpsb
pop
mov
rorl
xorb
lahf
ror
cltd
lret
sbb
mov
push
push
decl
adc
jb
xlat
inc
add
sbb
push
rcll
add
adc
aad
jmp
jbe
xchg
push
sbb
and
movsb
adc
stos
ret
adc
or
cmp
add
and
aad
add
and
push
xchg
test
clc
cmpb
jmp
roll
dec
iret
sbb
cmp
pop
daa
outsl
int
sub
sub
sti
addl
lret
sahf
mov
scas
outsb
stos
push
movsb
or
add
ret
scas
cmpb
push
sbb
int
dec
andl
dec
rcrb
ret
cmp
jmp
jecxz
out
cwtl
pop
jmp
xchg
das
inc
les
cmp
jg
gs
jle
jl
fnstcw
dec
out
iret
mov
cs
jo
xchg
stos
push
xorb
mov
mov
test
fcomps
cltd
inc
imul
cmc
inc
inc
xchg
jno
lods
pushf
sub
inc
push
mov
ret
pusha
mov
and
stos
jmp
sbb
pop
fcmovbe
mov
mov
ljmp
ret
xchg
iret
rcrb
xchg
pop
inc
adc
int3
mov
dec
push
push
push
iret
test
je
inc
jmp
and
add
jge
add
out
add
xchg
push
inc
ret
mov
hlt
fcmovu
shrl
fxch
stc
lret
mov
dec
push
or
push
sahf
in
add
shll
jne
or
inc
pop
testb
push
imul
shlb
inc
add
sub
push
ret
sub
jnp
cmc
adcl
sbb
push
sub
insb
stc
cmc
sbb
inc
inc
mov
sub
push
cltd
fidivrl
and
xchg
xchg
cmc
or
push
fnstcw
outsl
sbb
add
inc
cltd
adc
fisttpl
rcr
movsb
push
inc
sbb
popf
jp
pop
cmp
sahf
inc
repz
mov
repnz
dec
adc
dec
mov
shll
in
fbstp
imul
fsubrs
ret
loop
pop
pop
inc
out
push
lds
jecxz
jbe
rorl
ss
test
cmpsb
or
adc
mov
ret
mov
push
inc
mov
hlt
fsubr
lahf
ficoms
mov
movsb
push
inc
inc
pushf
sbbl
scas
cwtl
insb
lret
push
push
inc
inc
sbb
ret
xor
ret
fmul
addb
rol
lods
and
and
negb
mov
outsb
lret
sbb
and
negl
add
and
inc
jg
test
jno
mov
sub
test
jno
sarb
es
pop
or
jae
les
inc
icebp
scas
cltd
shlb
xlat
or
orl
cmp
pop
sub
push
inc
pusha
jae
or
xlat
cmp
xchg
or
inc
int3
or
cwtl
popf
push
mov
mov
imul
pop
loop
ret
mov
mov
cld
orl
xchg
inc
cmovle
add
lods
sbbl
in
sbb
in
mov
cmp
push
loop
mov
sahf
out
orb
sti
or
rol
leave
inc
add
jnp
lret
shrl
pusha
jnp
lods
fcoml
sbbb
sub
scas
cmpl
jecxz
stos
out
into
push
mov
xor
inc
inc
jbe
xchg
dec
sbbb
push
lret
xor
pop
add
mov
xorb
iret
inc
pop
cmp
push
fbld
jmp
test
pusha
fidivrl
or
dec
xor
push
inc
jbe
jae
ret
rol
dec
test
filds
mov
inc
xchg
dec
dec
push
push
loopne
inc
dec
pop
out
dec
push
ret
or
lcall
add
aaa
mov
xor
inc
pop
cmc
int3
add
or
in
mov
aas
lea
or
lea
sbb
out
inc
pop
aad
stos
sar
add
xchg
ja
ror
test
jbe
ficomps
xchg
push
push
mov
ret
jbe
jp
xchg
shrb
mov
xlat
mov
scas
testb
sbb
or
or
inc
mov
jecxz
jbe
xchg
stos
mov
iret
jns
or
add
roll
shrb
out
movsb
leave
cwtl
cltd
add
inc
push
out
inc
push
push
fbld
and
and
movsb
in
cmp
xchg
inc
sub
mov
mov
stos
mov
pop
ret
adcl
fidivrs
xchg
pop
jae
jmp
add
sbb
add
scas
adc
les
inc
xchg
add
addl
loope
sbb
adc
fcomip
sbb
cwtl
rcrb
lds
inc
jae
inc
adc
pop
pusha
push
sbb
test
sub
dec
adc
mov
sbb
dec
andl
adc
or
push
sbb
loopne
hlt
lret
jp
sbb
cmpsb
inc
leave
iret
add
notb
xchg
inc
int3
repz
mov
push
lock
lahf
in
push
dec
jno
fmul
sahf
sbb
inc
imul
add
mov
pminub
or
pop
push
mov
fistl
roll
fisubs
lret
add
sbb
dec
mov
push
subb
xchg
jmp
xor
xor
mov
aad
dec
inc
or
push
incl
add
loop
ja
ror
lret
clc
cld
dec
imul
loopne
adc
stos
hlt
jecxz
addr16
cmp
in
in
dec
mov
pop
sub
or
dec
ret
fsubrs
mov
or
lret
cmp
dec
je
sbbl
jo
jbe
fsubrl
dec
sbb
or
imul
dec
or
cmpsb
lea
pop
iret
or
dec
lret
negb
mov
sbb
pusha
inc
lds
pop
ret
and
pusha
xlat
je
inc
adc
pop
fs
das
jns
xor
loop
sub
call
push
ret
xchg
mov
sbb
mov
pop
jl
in
jg
les
xchg
push
cmp
insb
or
sub
jmp
and
push
jno
jnp
int
mov
lret
cmpsl
inc
dec
lds
push
dec
negl
inc
xor
xchg
or
xchg
std
or
add
insb
jns
roll
jge
gs
inc
mov
lods
and
pop
pusha
out
int3
loop
mov
loopne
mov
jbe
leave
mov
push
imul
xchg
add
int
inc
mov
adc
or
push
adc
cwtl
or
sbb
mov
adc
push
sbb
scas
sbb
xchg
dec
nop
stos
xchg
ret
inc
ret
jbe
inc
fwait
shl
std
pop
and
int
push
sar
imul
sbb
stos
ret
outsb
les
test
and
ret
inc
cwtl
out
pushf
add
arpl
sub
addl
cmp
inc
inc
aam
sub
orb
lret
data16
push
dec
ljmp
push
mov
ret
ljmp
add
pop
cmc
push
mov
xchg
ret
cmc
sti
xchg
cmc
stos
dec
repnz
ret
jnp
test
sbb
js
xchg
cli
nop
push
pop
shrl
push
jmp
mov
mov
je
ret
in
ret
es
or
pmaddwd
leave
adc
out
add
rolb
andb
xchg
fcmovnu
push
vshufps
out
add
imul
enter
adc
or
push
movsb
mov
or
sub
adc
add
xchg
mov
push
inc
sti
add
mov
dec
leave
jge
mov
mov
lret
hlt
movl
dec
inc
aad
dec
and
in
fs
jnp
mov
cs
mov
arpl
cmp
pop
mov
mov
inc
jbe
push
enter
push
nop
stos
pop
and
outsb
dec
loop
imul
loop
add
test
sub
pop
fldpi
lock
popl
xchg
add
jns
arpl
into
inc
aam
incb
lods
xchg
xchg
mov
mov
xchg
lret
pop
fnsave
fsubrl
pop
daa
and
pop
dec
fsubs
fildl
mov
mov
fsubl
arpl
cmpsb
out
cli
into
ljmp
lret
sub
jecxz
inc
dec
mov
negb
jmp
or
cmpb
enter
pop
pop
dec
sbb
js
nop
mov
jecxz
das
pop
iret
push
popa
xchg
mov
cmp
add
mov
add
pop
adc
lahf
loopne
popa
adc
lds
sbb
out
sbb
add
mov
stos
jne
sbb
pop
jbe
test
popf
in
rcll
inc
lret
repnz
cltd
loopne
loopne
enter
dec
push
mov
dec
hlt
mov
jo
es
adc
adc
or
inc
test
add
out
enter
or
and
dec
ljmp
pop
add
pop
enter
jo
cmpsb
lret
cmp
inc
pop
shrl
mov
ret
mov
sarl
pop
das
lret
pop
dec
and
cmp
adc
out
test
dec
fmull
push
repnz
loop
sub
repz
sub
icebp
pop
ret
loop
and
push
dec
fimuls
lcall
inc
dec
ror
pop
ror
and
ret
ret
dec
dec
fisttpl
add
inc
popa
dec
int
ret
movb
push
push
ffreep
dec
and
inc
leave
inc
shl
pop
jecxz
arpl
push
push
ret
addl
dec
mov
ret
push
into
dec
pop
leave
jecxz
repnz
dec
add
flds
inc
and
ror
pop
ror
inc
jecxz
ret
les
dec
fisttpll
test
rolb
icebp
iret
add
push
enter
dec
ret
in
dec
dec
fiaddl
add
int3
and
inc
inc
push
lret
dec
gs
ret
inc
test
rorb
leave
leave
movsl
push
rol
add
push
dec
in
aam
popa
ror
push
jecxz
ret
es
push
dec
fisttps
fcom
inc
data16
roll
push
lret
push
dec
ret
cmpsb
ret
fadd
dec
movb
lds
dec
into
pop
rol
pop
icebp
push
add
push
dec
daa
inc
inc
ret
inc
and
mov
push
add
ret
pop
ret
cmc
fsubrl
add
xchg
inc
rol
mov
and
pop
insl
enter
pop
push
mov
shl
inc
iret
pop
add
ret
jne
add
ret
mov
popa
ljmp
add
jne
adc
bound
dec
push
aas
imul
sarb
loope
or
sbb
push
mov
les
pushw
gs
dec
and
ret
pop
fimull
add
push
dec
mov
pop
pop
jns
push
fcmovu
inc
add
cmp
stos
xor
inc
dec
jae
dec
test
fisubrl
mov
push
inc
push
dec
into
lods
lret
lcall
fcmovbe
adc
fs
mov
inc
mov
out
push
sub
dec
fcmove
jp
pop
add
dec
jecxz
dec
rcll
call
mov
adc
or
fiaddl
les
jns
xchg
stc
daa
dec
and
push
dec
loop
dec
lret
dec
add
test
sbb
mov
outsb
ret
aam
loop
test
add
ret
lods
jecxz
fcmovb
pop
xlat
dec
and
or
add
jb
cld
filds
xchg
dec
pop
xchg
add
pop
dec
insl
push
ret
dec
ret
imul
sbb
dec
push
inc
aam
and
push
sbb
xor
lds
cmp
stc
mov
pop
arpl
in
int
or
sub
dec
inc
inc
sub
jecxz
stc
or
iret
addl
arpl
jbe
cmpsl
test
jae
not
push
or
filds
dec
mov
jno
clc
push
inc
mov
ret
es
into
xchg
stos
pop
ret
movb
jne
add
mov
fs
shl
rcll
dec
jecxz
outsb
pop
sbb
fimuls
jbe
sti
aam
inc
xchg
dec
int3
aam
push
pop
cli
add
int
xor
push
xlat
call
shlb
xor
and
movsb
lds
out
and
stc
sbb
dec
push
dec
push
inc
xor
les
dec
jmp
inc
push
fcomp
cli
stos
fldl2t
inc
push
dec
dec
shlb
xor
out
ret
push
iret
fs
pop
cmpsb
leave
add
or
dec
rolb
leave
ret
push
xchg
xchg
ret
enter
push
test
aad
enter
ret
clc
xchg
test
xor
sbb
movsb
dec
dec
bound
and
fiaddl
jb
bnd
lcall
push
sbb
inc
xor
mov
inc
cmpsl
ficompl
faddp
fcmovu
xor
into
dec
leave
jbe
outsb
in
dec
push
aam
enter
pop
int3
lret
loopne
sub
dec
push
rcr
popa
add
iret
xchg
es
lret
movsl
dec
lds
and
ret
mov
dec
es
hlt
shl
cli
sbb
int3
fidivs
inc
inc
roll
and
enter
test
mov
dec
gs
or
fcoms
lds
dec
test
ret
dec
dec
fistl
shr
pop
add
xchg
push
call
in
lock
xor
lret
fidivs
dec
xor
xchg
fildll
mov
and
cs
data16
ret
dec
clc
dec
add
xor
imul
dec
int
pop
jo
aam
lret
mov
repnz
notl
dec
dec
jnp
sbb
sbb
dec
in
es
lret
jbe
dec
dec
gs
dec
lahf
ret
sbb
fimull
out
add
pop
cmpsw
es
inc
inc
pop
int3
lret
or
xlat
xchg
jp
dec
or
jle
test
rcr
sbb
mov
rcll
fcmove
rclb
ret
repnz
jb
insl
cmpsl
fcmovbe
jle
test
aad
cmp
mov
fcmovb
roll
ret
movsb
repz
dec
faddp
and
dec
dec
mov
push
out
dec
in
lods
jecxz
sbb
xchg
std
inc
xlat
push
pop
dec
das
pop
cli
jp
and
gs
inc
jbe
movsb
lcall
daa
aad
cmp
lds
ret
xlat
test
push
fdivrp
cmc
ret
push
mov
into
push
shl
test
arpl
pop
ds
out
dec
repz
sbb
sub
outsl
lods
ret
jp
test
fldenv
cli
jp
dec
cmpsb
inc
mov
ret
sbb
jmp
lds
into
dec
flds
lahf
ret
cli
fnsave
cli
call
push
xchg
dec
stos
or
jecxz
sub
and
out
inc
or
loopne
xchg
dec
stos
dec
push
dec
push
sbb
scas
or
cmpsl
fcmovbe
pop
iret
adc
inc
and
mov
inc
data16
cld
fimull
rcll
push
mov
int3
adc
push
push
push
shl
mov
push
pop
fstl
shrl
sbb
lds
test
and
cmpsl
int3
shl
jle
test
ffreep
push
mov
rcr
loopne
mov
gs
ret
mov
fdiv
push
ret
jb
push
incb
xchg
dec
xchg
dec
test
add
add
mov
inc
jno
loopne
cmp
fisttps
pop
rcl
mov
push
jb
test
rolb
rcll
bound
ret
orb
cli
push
pop
call
sbb
fnstcw
or
push
out
xorl
or
dec
or
add
les
lret
loopne
inc
sbb
push
sub
loopne
repnz
dec
pop
inc
jecxz
jge
daa
dec
add
into
xor
pop
jecxz
bound
ficoml
inc
lret
stos
pusha
xor
icebp
push
push
into
pop
pop
ret
imul
xchg
dec
dec
lret
xor
push
sub
mov
into
jne
mov
dec
dec
inc
jb
fistpl
pop
xchg
dec
dec
pop
pop
jmp
lret
hlt
pop
add
fisubs
mov
jbe
inc
ret
add
leave
std
sti
push
int
lahf
ret
popa
sbb
jecxz
stc
dec
ret
jmp
rcrl
dec
ret
mov
push
leave
ficoml
push
dec
leave
inc
fidivs
or
xbegin
popa
repnz
movsb
lret
stos
ficompl
fdivrs
shrl
dec
sbbl
cmp
fidivrs
push
int
dec
lret
cmp
cld
rclb
dec
pop
enter
cwtl
xor
rolb
shlb
insb
inc
mov
pusha
sub
pop
and
xor
push
push
pop
test
jne
dec
lret
cmpsl
fsubrs
and
add
xor
push
xor
add
lret
mov
dec
fsts
fucomp
push
xor
mov
inc
ljmp
fcoml
jecxz
push
repnz
cmp
adc
je
dec
fists
inc
hlt
dec
pop
add
xchg
aaa
enter
sbb
dec
pop
adc
or
fldl
cmp
cltd
jecxz
mov
inc
jecxz
xchg
stc
adc
leave
ss
cmp
in
xor
fmull
lret
ds
push
stc
je
lret
repnz
pop
cmp
ret
faddl
lret
mov
dec
push
mov
xorl
dec
cmp
push
stos
jmp
cltd
data16
ficompl
loopne
pop
shl
lret
dec
ret
bound
or
pop
inc
pop
fstl
push
inc
cmp
dec
dec
sarb
jmp
pop
jge
std
aam
loopne
dec
lahf
ret
sbb
fimull
out
and
pop
out
xlat
rol
loop
lret
or
fsts
ficoml
dec
inc
push
or
je
push
dec
dec
shlb
lret
in
lock
dec
xchg
mov
stc
decb
leave
mov
pop
insb
adc
xchg
fisubrl
dec
rol
aad
mov
pop
les
ret
mov
fisubl
push
repz
mov
add
ffreep
ret
rorl
ret
daa
fcmove
int3
out
fidivl
push
loop
dec
mov
add
jmp
fstps
jb
int3
ret
pop
dec
push
push
push
sbb
fcos
ficompl
or
int3
bound
ficompl
sub
inc
sub
push
shr
pusha
stos
dec
pop
in
fistl
int
dec
cli
inc
dec
cmp
sbb
cmp
dec
dec
xor
ret
inc
insl
inc
add
push
pusha
rcll
pop
sbb
dec
fmulp
das
sbb
inc
push
lea
dec
pop
cmpsl
jb
ret
dec
hlt
dec
dec
adc
xchg
mov
cli
push
outsb
lods
cmpsl
dec
fcmovu
push
xchg
sub
fisubl
leave
in
in
int
cli
push
cmp
stos
shrb
sbb
enter
enter
rcr
loop
push
test
sbb
push
push
dec
cmp
pop
and
push
and
movsl
hlt
cs
bound
ficompl
lret
stos
dec
pop
in
ret
add
dec
dec
dec
lds
out
dec
repz
dec
data16
outsb
add
or
or
scas
mov
sub
pop
dec
dec
mov
ret
roll
cmpsl
movsb
rcl
loop
inc
and
cli
add
or
pop
fdiv
push
add
add
aam
pop
loop
push
inc
dec
pop
jecxz
sbb
xchg
pop
pop
push
xchg
les
xchg
dec
fisubl
dec
inc
sub
pop
pop
out
dec
xchg
pop
adc
imul
call
cli
jecxz
ja
ret
rolb
pop
ds
int3
in
push
ljmp
dec
ja
gs
add
or
sbb
dec
ljmp
fisubrl
enter
push
pop
enter
test
cltd
jecxz
add
push
dec
xchg
std
inc
lret
jbe
outsb
outsl
push
dec
and
push
add
dec
ficompl
lds
or
pop
insb
test
lods
jecxz
sbb
xchg
std
inc
int
dec
in
scas
dec
dec
ret
sbb
jp
or
dec
xchg
repz
lret
arpl
jb
roll
mov
jecxz
stc
sub
inc
pop
ficoms
cmpsl
js
lods
inc
cmpsl
rorl
icebp
lds
sarl
lods
stc
mov
inc
inc
ljmp
sub
leave
test
iret
mov
mov
jecxz
jmp
xor
dec
add
mov
lds
pop
xchg
pop
mov
lds
aad
inc
dec
fwait
mov
inc
filds
flds
pop
pop
push
int
pop
mov
loop
test
jge
xor
sbb
test
repz
cmc
mov
negl
es
mov
movsb
pop
or
xlat
jmp
sub
cmp
pop
movsl
jecxz
add
lock
inc
ffreep
adc
stc
pop
pusha
adc
mov
int3
add
cmp
lds
les
repz
mov
cmpsl
push
or
pop
out
mov
and
in
les
inc
ret
dec
and
inc
fmul
push
and
hlt
out
movsl
push
sarb
es
bound
shrl
test
shl
add
adc
rol
mov
repnz
call
fildl
lret
dec
ret
fs
les
aam
lret
popa
ret
stos
aam
int
push
hlt
mov
mov
fcmovu
test
repz
leave
std
ja
sbb
and
movsl
es
pop
incl
les
repz
sahf
add
mov
pop
ficoms
adc
ret
addl
inc
pop
push
push
adc
aas
push
fcoml
dec
mov
ja
repz
sbb
lahf
cwtl
lds
dec
enter
in
xchg
pop
into
sub
dec
cmc
cwtl
les
leave
repnz
movsl
imul
les
mov
pop
push
cwtl
les
es
dec
add
les
mov
inc
and
mov
mov
pop
shl
pop
movsl
ret
lret
inc
push
fisubrl
xlat
add
or
repnz
les
in
les
push
inc
add
mov
xlat
shll
jmp
loop
pop
je
les
inc
aam
sbb
inc
movsb
icebp
lret
add
mov
into
repnz
movsl
push
pop
dec
lds
ror
les
dec
cwtl
mov
push
ror
and
scas
ret
fisubs
add
and
or
out
fstp
ja
repz
repnz
add
add
jns
mov
das
out
mov
fisubl
aad
or
int3
and
les
pop
inc
iret
lret
lds
fiadds
mov
imul
lods
pop
iret
stos
ja
rorb
jecxz
es
sub
leave
daa
ljmp
outsb
or
rclb
pusha
pop
je
les
pop
inc
lret
loopne
movsl
adc
mov
ficoml
fisubl
mov
ret
sbb
fimull
loopne
lret
movsl
push
fstps
in
push
sbb
cld
aam
out
in
or
les
popa
dec
lret
xor
push
lcall
jbe
pop
mov
lea
mov
fldln2
lds
sbb
or
in
cld
dec
mov
dec
fdiv
aam
mov
data16
inc
fcmovbe
repz
mov
repz
push
lret
stos
xchg
xchg
sbb
loopne
lret
add
adc
and
cmpsb
ds
daa
jmp
dec
push
lret
or
fsub
into
je
les
dec
push
loopne
sbb
aad
ret
xchg
pop
fidivl
and
out
lret
les
dec
push
inc
int
jne
push
dec
pop
adc
je
test
push
cwtl
les
movsb
push
repz
loopne
in
pop
je
testl
cwtl
les
add
inc
outsb
jno
lea
sbb
int
movl
movsl
mov
les
add
fisubs
add
cmp
loop
inc
aaa
inc
push
fs
sbb
sar
pushf
cmp
mov
out
add
sub
add
cwtl
ret
in
mov
rorl
lds
ret
pop
mov
ret
push
inc
inc
enter
roll
leave
lret
push
ret
adc
ja
rcl
mov
inc
fistpl
jecxz
fneni(8087
jecxz
ret
ffreep
fs
ret
and
fs
ret
out
adc
lds
in
leave
ss
push
inc
test
iret
and
test
es
movsl
sbb
lds
fcmovnb
pop
aam
ror
stos
push
push
rorb
jae
and
into
test
jecxz
data16
lret
ret
fsubl
push
fisttpl
es
out
pop
dec
ret
push
stos
pop
push
fldenv
enter
inc
inc
lock
imul
lcall
add
inc
push
inc
or
inc
popf
in
jle
dec
negb
ret
out
inc
outsb
add
and
test
sbbl
push
lock
sub
jecxz
outsb
add
inc
and
roll
test
test
movsb
lock
inc
shlb
and
ljmp
and
test
in
push
lret
sub
inc
inc
outsb
inc
inc
xchg
test
out
pop
lock
mov
dec
xchg
xchg
inc
sub
sbb
in
sub
inc
in
push
fiaddl
pushf
or
dec
scas
dec
outsb
or
lods
add
out
push
push
shl
dec
in
ret
call
leave
cs
cmp
test
ljmp
in
lret
inc
push
aas
fucomp
loopne
ror
mov
icebp
in
shl
vrcpps
icebp
in
or
test
icebp
jmp
cmpsl
mov
orl
lods
push
lds
dec
pop
std
inc
dec
jmp
adcb
popa
enter
push
hlt
out
in
sub
fcmovnb
decl
inc
inc
dec
in
imul
sub
jbe
dec
icebp
loopne
in
push
test
ljmp
hlt
icebp
inc
repz
jne
push
int
int3
sar
dec
xchg
into
cld
pop
hlt
out
add
shr
push
or
jecxz
jmp
loop
sbb
push
fdivs
data16
pop
aaa
xlat
sub
push
in
sub
aam
pop
out
aad
inc
dec
add
xchg
ror
cmc
dec
lret
rcr
pop
cmc
rcrl
ret
sbb
rorl
pop
sbb
fcmovnbe
aam
in
mov
pop
out
enter
arpl
cli
hlt
add
dec
hlt
loop
out
aam
call
repnz
shr
push
and
imul
leave
in
and
movsb
loop
mov
aad
cmpsl
cmp
sub
dec
out
out
or
iret
arpl
pop
add
ljmp
sub
mov
add
adc
push
ds
adc
xchg
dec
xchg
leave
push
push
frstor
cmpsb
mov
enter
iret
or
sub
into
lock
cmpsl
jno
pop
jno
shlb
fs
or
jno
cltd
into
in
aam
mov
enter
fcmovnbe
or
adc
cs
sub
lods
pop
lds
test
nop
mov
dec
xchg
out
jne
flds
pop
pop
sub
dec
mov
fcmovnbe
add
stos
adc
outsb
aad
cli
jg
mov
push
faddp
fld
enter
add
inc
mov
cwtl
cmp
xlat
inc
jecxz
enter
stos
nop
pop
sbb
aam
push
icebp
cmp
in
shlb
cmc
inc
xchg
imul
lcall
add
adc
dec
in
sbb
adc
ficomps
cltd
jbe
lea
dec
lret
adcb
ljmp
add
cwtl
mov
sub
add
js
leave
outsb
dec
sub
fcmovnbe
leave
loop
fs
ljmp
dec
ret
sbb
enter
les
aam
ret
enter
xor
inc
bound
outsb
jmp
push
xor
les
inc
or
fcmovnbe
xor
add
adc
cwtl
fsubrl
movsl
lods
mov
bound
mov
push
xor
ret
and
fisubs
inc
sbb
push
cmp
inc
jle
push
daa
inc
mov
in
enter
cmp
mov
sub
xor
leave
out
ljmp
push
sbb
push
add
cmp
and
test
fs
jnp
xor
lds
out
insl
and
lods
ret
sub
add
lods
pop
sbbl
or
sahf
xchg
and
mov
inc
inc
enter
dec
imul
dec
mov
mov
movsb
imull
dec
stc
in
lods
inc
ret
adc
xchg
dec
pop
movsb
mov
lret
xchg
sub
imul
push
ljmp
ds
pop
inc
push
aam
out
insb
les
add
dec
add
push
sub
pusha
shll
rorb
fsts
inc
add
push
cmp
mov
enter
imul
std
xor
inc
scas
pop
inc
stc
dec
ret
sub
inc
bound
sub
push
xchg
dec
mov
or
or
enter
leave
cwtl
or
loopne
inc
xchg
push
fs
aam
pop
inc
hlt
fisttps
inc
fidivs
scas
je
adcb
lret
aam
xor
loop
fs
dec
out
xchg
cli
inc
leave
frstors
aad
inc
adc
jb
dec
test
enter
xlat
lds
fisubrl
out
jnp
and
test
mov
dec
pcmpgtd
inc
rcr
inc
mov
mov
stos
iret
dec
inc
inc
lret
push
xor
in
iret
inc
cmc
pop
movsb
adc
push
in
movsl
add
mov
int
lods
iret
les
dec
out
inc
cmp
cmp
xchg
add
mov
ja
adc
sahf
out
lods
and
add
in
int
insb
and
shl
inc
add
dec
jb
rol
ret
and
popa
inc
aaa
cli
jnp
enter
sbb
enter
add
inc
jmp
mov
bswap
adc
test
lds
out
movsb
testl
jb
mov
sub
imulb
push
lret
jecxz
mov
insl
loop
inc
mov
cmpsl
stc
jnp
or
lds
adc
jbe
cli
sbb
add
gs
and
sti
popf
or
icebp
enter
movb
cmc
inc
test
pop
adc
ljmp
mov
lds
fidivl
add
test
test
leave
movsl
movb
dec
sub
jne
loop
jbe
movsb
fcmovb
lds
daa
and
out
lret
mov
dec
movsb
negb
ret
out
push
inc
ljmp
inc
dec
xor
or
movsb
dec
ja
clc
daa
aam
enter
enter
dec
iret
idiv
fcoms
mov
jb
inc
aam
jo
jbe
inc
pop
inc
stc
inc
std
inc
mov
pop
std
mov
pop
pop
shrl
pop
jmp
mov
pop
mov
mov
in
pop
xchg
std
repnz
adc
push
loopne
add
dec
fsubs
ljmp
xchg
rcrb
xorb
movsb
sbb
rol
add
into
out
push
sub
fistpl
enter
dec
dec
int3
pop
dec
push
sbb
xchg
pop
mov
movsb
push
lret
cmc
insb
fucomp
inc
repz
push
pop
fs
inc
sbb
ret
jmp
dec
das
clc
dec
sub
cmpsb
xor
or
ret
push
lret
scas
addr16
dec
stc
pop
repnz
jne
sub
mov
lea
sub
ret
jl
inc
adc
inc
lret
aad
and
cmpsl
pop
outsb
dec
dec
or
enter
sarl
leave
inc
into
imul
sbb
pop
sub
movsb
sbb
outsb
push
inc
xchg
in
outsl
xor
xor
pop
jmp
mov
mov
ss
lret
fnstcw
aam
loopne
repz
or
es
movsb
push
dec
mov
cmp
dec
iret
add
cmp
add
pop
mov
ljmp
inc
aad
jne
jbe
in
push
rolb
pop
out
jo
das
jp
sub
int3
dec
jb
fwait
jb
cmpsl
outsb
push
jbe
lods
test
and
xor
push
inc
rcl
movl
rorl
lock
pop
ds
jno
push
movsb
ljmp
outsb
dec
push
push
pop
and
int
adc
push
lret
clc
into
nop
push
jns
lret
add
push
cmc
pop
sbb
push
ret
ret
jg
hlt
ficompl
popf
dec
out
add
jb
add
add
push
pop
or
fistl
xor
dec
movb
inc
fld
nop
sub
jecxz
fisttpl
push
fcmovnbe
bound
adc
dec
inc
test
inc
arpl
jmp
pusha
lret
sets
lds
es
sub
sbbl
aad
mov
scas
nop
jbe
inc
fxch
call
add
lods
mov
leave
jo
pop
ret
push
add
push
add
push
roll
insl
les
movl
add
outsb
inc
sub
mov
dec
pusha
rclb
mov
push
and
add
test
out
cmp
enter
add
gs
xchg
leave
and
dec
pop
xchg
sbb
xchg
ds
ret
in
and
or
mov
ficoms
aas
std
out
xor
aam
pop
inc
sub
dec
bound
push
in
mov
adc
ret
adc
pop
push
pop
int3
mov
push
dec
inc
or
icebp
out
jmp
push
ret
pop
roll
iret
in
cltd
loop
loope
and
sub
adc
adc
inc
in
stos
pop
push
rcrb
cmc
pop
roll
enter
out
inc
ret
push
roll
adc
out
mov
int3
shr
out
dec
xchg
push
out
arpl
ret
arpl
jo
out
pop
jo
inc
inc
inc
cltd
inc
mov
jo
flds
cmp
add
sub
inc
pop
out
lds
adc
add
xor
in
lret
jns
and
dec
cmp
ficoms
jbe
sub
lret
pop
add
sbb
inc
ror
jmp
lds
mov
lds
pop
sbb
leave
cmp
shll
scas
les
push
and
or
fs
dec
mov
subl
jbe
out
lret
repz
daa
push
or
jb
dec
adc
ficoms
add
sarl
inc
sbb
shlb
pop
mov
mov
jb
mov
adc
push
inc
fmulp
out
or
add
int3
fiadds
jns
dec
inc
pusha
or
shlb
nop
pop
inc
int3
ret
into
xchg
and
je
pop
in
aad
fcmovnu
int
or
adc
sub
lret
jns
inc
or
cli
fs
leave
addl
mov
and
mov
pop
les
jp
or
les
and
loopne
add
xor
add
push
out
inc
pop
cmpsl
inc
daa
push
pop
inc
xchg
stos
out
inc
inc
pop
or
dec
ret
fsts
mov
dec
call
add
call
or
mov
sub
add
inc
or
pop
mov
aam
pop
add
imul
test
fcomi
rcrl
nop
in
push
push
mov
xor
mov
push
inc
out
sbb
movsl
add
mov
mov
or
fiaddl
outsb
lods
int
imul
xor
or
inc
ret
lds
fcoms
loope
adc
mov
ret
inc
std
jmp
inc
dec
and
and
mov
addr16
sub
jbe
sub
inc
into
jmp
add
outsl
das
lea
lds
pop
xor
leave
ja
ss
test
outsl
out
out
lds
pop
and
leave
insb
inc
stos
das
int3
dec
inc
cmp
push
jle
leavew
inc
push
test
fiadds
insb
xor
and
jno
or
sbb
or
sub
bound
mov
mov
xchg
inc
dec
xchg
inc
das
icebp
or
mov
inc
test
sub
mov
iret
call
sbb
aad
rol
cmp
loop
out
adc
stos
dec
sbb
ret
dec
mov
nop
repz
and
adc
xor
adc
dec
lret
jae
push
ficoms
jecxz
or
das
mov
pop
aam
out
mov
cwtl
repnz
or
enter
pop
adc
out
std
inc
sub
xor
xlat
dec
aam
lret
cwtl
dec
xchg
push
lds
add
cmp
xchg
repnz
cs
in
ret
add
sbb
ret
sbb
dec
ds
dec
and
repnz
movq
inc
faddp
je
mov
jne
dec
sub
mov
push
mov
inc
adc
ds
icebp
sub
mov
adc
xor
rcrl
imul
pop
jne
mov
or
int3
ret
push
push
push
arpl
dec
mov
movsl
jecxz
int
out
test
out
outsb
dec
cmp
ss
pop
inc
adc
fs
dec
sub
fcmovnbe
cmp
lret
pop
mov
inc
rclb
add
xor
sahf
in
data16
outsb
stos
inc
dec
movb
call
js
ret
mov
or
inc
mov
pop
adc
gs
imul
jne
hlt
or
arpl
leave
inc
lret
hlt
aam
dec
pop
lds
jl
in
pop
add
pop
add
sub
xchg
dec
pop
dec
cmp
inc
loop
inc
adc
or
pop
out
mov
xor
out
stos
and
orl
fs
fcmovb
stos
out
xchg
add
imul
nop
mov
les
das
lock
leave
int3
hlt
xchg
inc
mov
dec
pop
arpl
rcrb
mov
dec
pop
xchg
push
ret
movsb
rclb
mov
ret
dec
dec
xor
ret
xlat
mov
mov
push
fst
inc
add
fs
jnp
mov
or
gs
mov
bound
dec
fstps
and
inc
stos
rcl
out
roll
stos
lods
cmc
jp
test
fwait
dec
add
jno
fildl
inc
and
cmp
ja
pop
and
jbe
rclb
test
inc
mov
out
and
pop
cmpsl
add
clc
loope
cmp
js
add
dec
test
jmp
shl
movb
push
lcall
dec
addr16
in
pop
dec
pop
test
adc
add
xlat
adcb
cwtl
cmp
out
or
mov
int3
and
shl
ficoms
or
iret
jp
je
or
int3
dec
xlat
out
sbb
iret
or
test
int3
jmp
mov
xor
xchg
mov
into
push
in
test
enter
sub
mov
in
in
repz
into
test
shll
aam
jge
pop
fisubs
mov
out
mov
ljmpw
jb
inc
pusha
dec
sti
into
enter
add
pop
jecxz
divb
test
sbb
sub
and
add
call
add
add
popa
jns
into
add
pop
mov
cmp
fisttps
fcmovbe
fildl
add
fs
inc
popf
sub
data16
aad
iret
dec
push
push
inc
adc
push
rorl
add
fldcw
push
adc
aad
push
and
ret
shl
mov
lds
rorl
mov
or
sub
test
push
inc
inc
lret
in
push
jmp
push
addl
xlat
roll
adc
xchg
les
repz
fadds
add
push
sbb
je
movsb
addl
andl
and
lret
in
fs
jb
cmp
lret
dec
add
cs
pop
or
iret
ret
bound
sbb
in
fiadds
dec
sbb
sub
adc
add
std
rolb
js
jmp
in
sbb
push
pop
ret
call
jo
sub
pop
xchg
shrb
js
cmpsl
adc
sbb
insb
popf
movsb
in
loop
arpl
int3
enter
add
inc
add
sub
stos
dec
add
mov
jb
dec
call
cli
xor
cwtl
ds
pop
add
add
cmp
fcmovu
push
pop
and
dec
mov
arpl
shll
jmp
lahf
lods
xchg
xchg
push
inc
push
push
xchg
shrb
dec
dec
out
push
adc
test
aam
sub
pop
jge
jmp
mov
xlat
das
xchg
dec
out
inc
aam
out
mov
faddl
jmp
lcall
sbb
out
fwait
inc
aad
xor
adc
scas
ret
rol
rorb
sub
enter
ret
nop
clc
pushf
cli
xchg
ret
or
pop
fs
into
pop
inc
adc
mov
push
ss
jbe
mov
jno
jp
or
pusha
popl
mov
push
aad
adc
xor
loope
or
leave
mov
adc
adc
incl
rcr
jle
cmp
stos
in
leave
mov
jp
push
in
push
pop
int
in
push
ljmp
dec
mov
add
nop
pop
mov
fcomps
hlt
and
loopne
adc
stos
loopne
add
insl
rol
push
arpl
push
mov
push
fwait
add
cmc
out
into
jns
inc
jno
movsb
ret
mov
push
adcl
add
cmc
dec
test
inc
out
pop
or
jecxz
jb
in
pop
pop
fnstsw
fsts
push
cld
inc
cmpsl
out
or
lds
rol
dec
test
iret
adc
dec
or
push
push
movsb
xor
ljmp
inc
inc
pop
xchg
ffreep
ss
jbe
push
sbb
jb
gs
xchg
cld
mov
sahf
or
flds
add
fs
mov
mov
lds
push
lods
cwtl
int
push
cld
call
iret
js
arpl
add
ret
dec
int
xor
inc
inc
pop
addb
inc
push
jp
out
pop
andb
int3
movsl
inc
cmpsb
mov
push
es
or
mov
pop
dec
xor
gs
leave
dec
adc
xchg
push
push
test
xchg
and
les
filds
inc
gs
rcl
into
mov
rcrb
push
ror
mov
out
test
dec
mov
hlt
pop
xor
xchg
jp
lret
push
test
rolb
pusha
cmpsb
push
sub
lret
pusha
test
les
call
loopne
lcall
lret
outsb
addb
ss
out
mov
cmc
pop
in
ret
or
pop
test
inc
scas
jl
add
mov
jbe
dec
inc
jne
push
enter
mov
add
loope
xchg
pop
ffree
ljmp
pop
fsubl
jnp
sub
fildll
inc
addr16
ss
int3
sbb
stos
mov
adc
xchg
inc
ja
call
inc
fiaddl
dec
jecxz
inc
or
add
or
pushf
dec
in
ret
add
sub
adc
jmp
insb
iret
push
pop
aad
rol
lds
or
test
cmp
inc
dec
gs
cmp
into
vandnps
loop
fsub
cmpsl
pop
and
es
dec
push
or
int
add
movl
add
push
pop
insl
xchg
in
hlt
fstps
lods
inc
dec
iret
popl
add
int3
fisttpl
in
loope
mov
dec
pop
add
mov
push
in
inc
jl
push
cmpsb
repz
inc
inc
xlat
mov
test
hlt
push
push
cmpsb
ljmp
pop
and
lods
inc
iret
repnz
dec
into
push
xchg
xor
mov
in
dec
in
xlat
sbb
mov
shr
ror
push
jb
ljmp
push
cli
je
in
pop
xchg
xor
fadds
sub
ret
add
jmp
add
fcoml
sahf
sbb
into
add
add
shrl
mov
dec
push
add
dec
popa
iret
mov
ror
or
fmul
jb
mov
inc
ret
ret
push
push
jb
imul
in
pop
lret
loope
lret
pusha
ljmp
push
sub
repnz
rcrb
out
pop
ljmp
das
push
je
imul
enter
dec
sub
repz
and
lods
or
daa
notl
sub
inc
lds
aad
movsb
out
cltd
and
adc
dec
ret
test
loop
add
push
dec
ror
add
push
and
in
les
jmp
iret
add
loop
dec
addr16
add
dec
int
repz
and
test
xchg
pop
iret
ret
movsl
xor
add
inc
push
push
fistps
dec
cltd
push
dec
into
les
fdivp
push
ss
xchg
pop
movsb
out
aaa
jb
mov
pop
inc
pusha
xchg
cld
inc
into
dec
jmp
push
push
jb
ds
repnz
dec
fistl
add
movl
sbb
mov
inc
add
in
aad
mov
dec
call
data16
cmp
clc
dec
inc
push
push
dec
inc
pop
int
ror
into
dec
test
mov
leave
add
cltd
lds
xor
adc
ds
or
filds
iret
adc
gs
push
aad
movsb
frstor
imul
int3
lcall
fdivl
inc
push
add
dec
pop
pop
push
fbstp
rorl
in
push
inc
mov
aad
push
xchg
push
icebp
jg
dec
outsb
rolb
adc
pop
ret
out
scas
loopne
lret
pop
xchg
push
loopne
out
push
enter
testl
test
push
xor
push
dec
dec
cmp
out
popf
mov
push
adc
dec
out
xlat
and
cmp
sub
out
outsl
iret
sub
push
inc
lea
fs
push
int3
ret
and
fildl
inc
inc
rcll
repnz
addr16
lret
cmpsb
cmp
add
pop
imul
loopne
xlat
mov
jae
repz
sbb
add
int
shrb
ds
dec
pop
cli
aam
shrl
aad
in
push
xor
movsb
les
jp
mov
mov
repnz
push
repz
add
fimuls
pop
dec
jb
pop
idivb
fisubl
out
adc
sub
repnz
push
fsub
sub
add
rorb
dec
lret
push
mov
inc
and
movsl
loope
das
lret
sbb
aad
in
add
test
lret
push
sub
xchg
push
cmc
repnz
inc
fimull
adc
int
movsb
mov
dec
stc
add
pop
lcall
lods
aad
movsl
rol
dec
ljmpw
push
inc
lret
pop
dec
push
lds
in
out
repnz
rcrb
xchg
fildl
adc
inc
sbb
ret
xor
adc
test
lds
mov
dec
inc
fisttps
inc
inc
add
iret
inc
dec
dec
pop
mov
int
inc
dec
push
push
push
int3
mov
mov
dec
les
mov
and
adc
sub
jb
mov
fcomp
jp
ljmp
dec
test
out
add
lret
in
out
add
mov
cmp
int3
call
mov
or
mov
cwtl
pop
into
push
test
pop
ja
call
rcl
dec
ret
cmp
lcall
iret
mov
push
outsl
testb
and
repz
les
mov
mov
or
aam
and
sbb
sahf
into
in
arpl
sub
fs
inc
add
inc
fldenv
jae
adc
ret
dec
push
push
rcll
push
iret
fidivs
pusha
sahf
shll
inc
rcr
out
rcll
out
fsubr
adc
cmpsb
xchg
cmpsl
hlt
shl
inc
in
ret
pop
inc
out
xor
rolb
push
fiadds
jne
stos
ficoms
ret
lock
mov
mov
int
daa
into
cmp
add
fisttpl
ret
repz
pop
and
push
out
dec
pop
lret
mov
dec
inc
out
jno
sub
inc
add
push
mov
adc
shl
push
mov
inc
jp
xchg
jmp
sbb
or
inc
or
jecxz
les
inc
jb
stos
ljmp
lods
cmc
lret
ret
add
push
insl
imul
jmp
movl
jmp
call
mov
dec
loopne
and
dec
jnp
rorl
dec
rcr
cmp
xchg
rolb
jmp
mov
inc
sti
jb
lods
ror
push
addr16
out
loopne
adc
inc
pop
int3
dec
dec
mov
leave
inc
xabort
push
mov
out
outsb
in
xchg
fiadds
xchg
lret
push
jecxz
lods
mov
dec
out
pop
xchg
push
lret
dec
push
add
dec
dec
dec
pop
dec
stos
ficoml
xchg
mov
xor
pop
or
push
iret
sub
fcmovnb
ret
fldenv
xor
int3
mov
enter
pop
mov
iret
push
test
enter
push
push
test
push
inc
fs
jb
sbb
inc
add
in
xchg
xchg
sub
pop
sub
inc
dec
lds
sti
or
enter
pop
and
adc
or
mov
add
into
test
push
subb
pop
sbb
ja
dec
and
cmpsb
sti
inc
mov
arpl
mov
iret
sub
ja
dec
jle
push
push
add
test
shlb
adc
jbe
or
dec
inc
ret
xor
mov
push
enter
dec
or
mov
lea
sbb
xor
pusha
pusha
addr16
loop
sbb
sbb
in
out
push
pusha
outsb
movsl
pop
lock
pusha
iret
dec
and
test
js
in
add
xchg
dec
add
jae
incl
xor
leave
out
stos
jmp
fldl
add
ret
int3
xchg
mov
addr16
xchg
inc
or
dec
iret
out
aad
je
into
test
enter
push
dec
mov
jo
push
rol
clc
fsubl
loop
add
push
daa
pop
push
pop
subl
xor
push
movsb
mov
out
icebp
push
jmp
dec
fld1
jge
inc
aad
hlt
loopne
add
jmp
loopne
jne
repnz
faddl
movsb
xor
out
out
and
push
add
jae
dec
je
test
xchg
and
dec
add
xor
in
sub
ret
jg
inc
movb
cmpsb
les
jmp
nop
ror
pop
sub
xchg
shrl
sti
push
enter
test
mov
mov
inc
pop
js
aad
fwait
lcall
inc
push
add
mov
iret
mov
or
pusha
cmpsl
push
pop
inc
jmp
mov
inc
push
fs
fs
fstl
push
ret
loopne
push
jnp
jecxz
roll
inc
dec
pop
daa
scas
mov
dec
loop
test
iret
dec
mov
leave
add
xor
pop
std
sub
push
xchg
push
aad
in
in
decb
pop
in
fimull
push
out
aam
daa
hlt
mov
push
daa
in
cmp
arpl
in
rcl
repz
jb
mov
inc
rcl
dec
enter
push
shl
cs
xchg
dec
add
call
lods
pop
or
loop
enter
int3
sub
int3
inc
mov
inc
pop
icebp
add
push
out
fcmovnb
cmpsb
pop
xor
xor
dec
lret
xor
inc
frstor
lret
mov
testl
ret
andb
repnz
rcll
jle
iret
andb
xchg
mov
dec
pop
or
loopne
jbe
jl
add
insb
cmpsb
jp
adc
repz
fld
adc
int3
inc
ret
or
dec
push
or
test
cmpsw
fisttpl
xchg
or
aaa
les
dec
sub
pop
jnp
fs
scas
cs
fbstp
xor
or
push
dec
mov
lret
daa
push
dec
aaa
lcall
cmc
into
and
in
ret
lret
les
ds
add
rcr
fadds
push
push
icebp
stos
xchg
and
xor
add
cmc
popa
jle
or
hlt
pop
add
dec
xchg
hlt
mov
call
pop
push
pusha
out
mov
dec
out
and
rorl
stos
dec
xchg
popa
das
pop
aam
rol
cltd
lds
paddw
out
jmp
ffree
fisubrl
adc
arpl
movb
popa
xchg
push
ds
les
fcmovnb
movsb
dec
daa
sbb
cmc
adc
nop
mov
sub
inc
adc
jnp
inc
cmp
shlb
mov
icebp
imul
add
push
sbb
inc
pop
shlb
fxch
fxch
sub
push
dec
fnstenv
loopne
push
out
ret
inc
pop
xchg
xor
pop
in
dec
movsb
leave
lret
push
jecxz
out
fs
outsb
in
lods
dec
dec
sub
or
iret
leave
inc
dec
jmp
lret
and
nop
pop
mov
pop
pop
dec
sbb
out
je
inc
pop
xchg
lock
out
or
and
dec
push
int3
mov
pop
jmp
loopne
or
sub
sbb
lds
inc
pop
cmpsl
loope
movl
dec
gs
sbb
cld
iret
push
inc
lret
mov
sub
push
jmp
pop
repnz
xor
fisttpll
test
dec
in
lods
js
fsubrl
inc
pop
arpl
jecxz
dec
sub
out
repz
sub
sub
pop
cli
inc
dec
int
dec
fmulp
fs
hlt
pop
out
cmp
sbb
clc
pop
add
sti
loopne
xchg
ja
in
cwtl
into
dec
and
fimuls
jmp
xchg
ja
sarb
pop
iret
jmp
inc
movsb
iret
mov
mov
sub
hlt
jb
in
test
push
flds
add
adc
sbb
dec
or
dec
fsubl
mov
loop
ret
cld
lds
mov
cmpsl
call
dec
hlt
adc
stos
fcmovbe
push
lret
lds
test
faddp
loopne
movb
or
dec
repz
push
ret
sub
push
xchg
rorb
mov
inc
out
dec
fildl
jecxz
iret
xor
into
icebp
push
and
nop
ret
or
push
ret
negl
pushf
iret
fs
inc
or
test
ljmp
call
or
lret
or
ror
pop
iret
cmpsl
adc
fwait
cmpsb
fimuls
add
jb
push
dec
testl
dec
pusha
mov
pusha
add
inc
test
inc
cmp
shl
dec
sub
inc
mov
insb
push
dec
iret
add
xchg
cmpsl
dec
ret
jae
dec
cmpsl
dec
ret
shl
or
dec
and
sbb
test
push
pop
inc
sbb
insl
fcomps
shrl
faddl
repnz
int3
lods
je
dec
dec
inc
rol
push
pop
jb
lret
ret
sub
jno
leave
addr16
add
lret
push
dec
popf
popf
in
cmpsb
xor
or
lret
rorb
rorl
jl
out
test
inc
aam
ret
pushf
out
lds
dec
int
ror
and
stos
adc
cmc
aad
inc
icebp
push
in
cmc
into
add
test
sub
pop
or
cwtl
dec
sub
xor
add
mov
lret
cmc
int
dec
mov
iret
test
fmull
inc
sub
cltd
push
roll
out
iret
and
enter
lret
add
push
and
pop
lds
and
cwtl
xor
out
and
jno
lock
out
pop
xchg
push
mov
or
enter
cmp
inc
or
fldl
pop
dec
cli
and
xchg
fisttpl
in
in
aam
ret
test
movb
jp
cmc
fadds
aas
xchg
add
inc
ret
jmp
jl
mov
rcll
lahf
dec
inc
call
inc
mov
cmp
pop
inc
push
fildl
xchg
call
cmpsl
xchg
arpl
addr16
push
inc
lret
add
sbb
push
add
dec
inc
inc
cwtl
outsl
inc
fst
lea
int
int
js
insb
mov
por
iret
xchg
push
sub
inc
mov
cmp
xor
repz
bound
dec
aad
in
adc
into
into
les
ror
xlat
or
out
fisubrl
fistl
or
rclb
jns
inc
push
or
fsubs
or
xor
mov
call
jns
int
les
fmul
pop
imul
enter
mov
test
pop
insb
into
les
scas
jne
or
ret
cmc
pop
out
in
test
leave
int
sub
enter
iret
out
loop
push
in
out
sar
loop
and
dec
sbb
les
pop
pop
divb
inc
leave
enter
inc
call
add
inc
imul
out
fisubrs
or
and
or
filds
cmp
jne
mov
test
out
xor
inc
dec
xchg
adc
popf
sub
pop
pop
stc
inc
add
add
loope
jl
imul
cwtl
push
fistpl
cmc
dec
ffree
dec
cs
adc
dec
add
dec
loop
and
push
aad
fdivrl
add
push
push
mov
shrl
add
mov
jmp
ror
push
hlt
inc
xor
ret
mov
push
imul
adc
int
shl
or
push
jo
dec
in
mov
dec
out
dec
stos
fmul
sbb
cmc
ret
lret
ret
mov
into
out
sub
aas
pop
lret
mov
in
and
pushf
ds
scas
shl
and
outsb
aam
dec
dec
sub
xlat
mov
push
inc
imul
lds
xor
vcvtdq2pd
fnclex
push
sahf
ret
clc
addb
pop
pop
loop
inc
dec
add
in
jecxz
rclb
inc
dec
or
mov
dec
into
push
inc
pusha
call
out
dec
pop
stc
mov
pop
add
push
loopne
ja
out
adc
les
popa
mov
outsb
ret
jne
mov
test
dec
lods
add
pusha
pop
ret
mov
fs
fisubrs
iret
loop
lcall
into
adc
hlt
inc
jae
imul
inc
int3
inc
jp
dec
in
push
pop
sub
cmc
inc
adc
push
push
scas
pop
out
bound
push
in
or
push
mov
push
rorl
ja
push
mov
fcmovbe
add
aam
push
in
inc
and
adc
jmp
dec
push
push
or
and
push
push
dec
pop
iret
fnstsw
mov
rorb
into
test
test
inc
push
pop
fbld
fildll
scas
xor
data16
xchg
int
add
ret
sub
into
rol
jp
es
mov
xor
push
popa
int3
jb
imul
std
insb
sahf
lods
call
mov
fiaddl
call
pop
lret
cmc
fcoml
insb
dec
sub
push
sub
xor
das
sti
mov
mov
dec
pop
fucomi
rcll
into
insb
fsubs
adc
cmp
ret
push
push
dec
cmpsb
mov
sar
sub
mov
or
and
shl
loope
ficoml
mov
push
pusha
xor
mov
ret
fldz
mov
cmp
pop
sub
add
jmp
lods
js
movsl
jbe
lret
mov
pop
sub
ret
xchg
and
flds
and
lds
dec
scas
sub
inc
dec
inc
jecxz
outsb
loopne
fildl
jge
add
aad
sbb
shrl
xchg
jmp
xor
out
leave
pop
and
in
or
fcompl
or
dec
sbb
mov
mov
dec
push
xor
mov
inc
ljmp
cmpsb
push
push
dec
je
and
leave
inc
into
lret
push
push
jae
shrb
jmp
dec
add
dec
in
and
pushf
out
xchg
jno
insb
repz
sarl
in
movsl
mov
lret
jo
clc
shrb
mov
dec
dec
xchg
jo,pn
mov
and
push
inc
inc
cmpsl
stos
outsl
and
cs
pop
jmp
sbb
jb
inc
inc
addr16
cmc
cmpsl
popl
shll
mov
lds
mov
arpl
xchg
cltd
or
add
stos
push
mov
inc
aaa
vshufps
and
orb
outsb
mov
dec
es
pop
xor
xchg
scas
ror
jno
shll
loop
lds
adc
stos
outsl
mov
dec
cmp
mov
xor
cltd
out
inc
test
push
or
rol
dec
sub
mov
push
popf
mov
jbe
dec
mov
cwtl
add
jb
push
iret
pop
orb
cld
les
jl
lret
mov
push
and
call
fbstp
jle
mov
sub
inc
sub
mov
sbb
push
in
daa
push
xchg
roll
pop
cs
data16
jo
fistl
jge
sub
or
add
pop
lret
sub
stos
into
es
sub
jmp
jmp
loopne
ret
push
sub
inc
sub
ljmp
iret
sbb
insb
inc
enter
mov
lret
push
movsl
inc
mov
jge
dec
lea
imul
in
inc
pop
cmpsl
aas
shl
push
enter
int3
lret
lods
lods
es
push
dec
cmpsl
pop
cmp
ss
movb
or
rolb
ja
je
ret
pop
sbb
into
add
les
fldt
fs
xlat
pusha
out
adcl
pop
sbb
daa
and
and
cmp
add
test
push
pop
cld
push
mov
inc
out
mov
in
or
fildl
notb
pop
pusha
mov
int3
or
jb
cli
adc
popf
jbe
outsb
pop
ljmp
pop
out
lods
adc
orl
cli
scas
mov
imul
aad
xchg
sbbl
push
out
xchg
sbbb
fidivrs
popf
sub
or
movb
dec
sbb
and
iret
in
repz
mov
add
aad
pop
push
add
in
pop
nop
push
adc
cwtl
sahf
in
jmp
cmc
fstpt
xorb
popa
sbb
push
lahf
lret
in
enter
jno
inc
pop
mov
cwtl
or
mov
mov
lock
out
iret
push
and
ret
push
push
lret
push
iret
push
call
sub
adc
js
and
pusha
or
movsb
std
xchg
fadds
scas
jbe
repnz
dec
dec
pop
cmp
cltd
add
imul
ret
mov
int3
das
pop
pop
mov
data16
sbb
pop
ja
les
push
adc
push
dec
outsl
repz
repnz
addr16
es
pop
sbb
adc
sbb
rcrl
sub
hlt
ror
hlt
inc
cmp
jg
leave
xor
test
cmpsb
mov
out
cwtl
int3
fldl2e
dec
inc
mov
jge
mov
incl
jle
repnz
ss
push
sub
movsb
ljmp
pop
mov
push
pop
sbb
ljmp
repz
cmp
xchg
insb
test
adc
jge
fists
mov
xor
loop
pusha
xlat
xchg
push
sub
lret
imul
jnp
mov
xor
adc
jo
jo
hlt
int
add
push
int
sbb
push
mov
cmc
and
xchg
and
push
adc
adc
dec
out
test
sbb
in
push
add
fwait
int
leave
repz
jmp
cs
mov
shrl
sub
lret
dec
mov
inc
fistl
std
or
push
pop
fcmovnu
sub
xchg
adc
xchg
cmpl
out
dec
fadds
push
and
outsl
inc
add
pop
sbb
test
inc
dec
push
xchg
pop
mov
insb
or
pop
out
push
jbe
loope
or
enter
dec
adc
fmul
je
sahf
mov
mov
popa
fistpl
or
stos
je
je
data16
push
js
shrb
test
sbb
sub
cmp
sahf
fidivrl
stos
fstps
pushf
dec
jne
mov
aaa
push
push
jl
cmp
or
push
and
jmp
xor
jb
jo
cmp
test
jmp
pop
mov
adc
jo
xor
fisubrl
ds
repz
daa
test
imul
dec
jmp
pop
cmpsl
je
lods
outsl
adc
out
scas
insl
iret
inc
mov
test
dec
push
pop
out
pusha
dec
pop
pop
int
test
push
or
cs
sarl
aaa
push
jne
mov
lock
sbb
xchg
jae
notb
push
mov
add
xchg
lds
pop
aad
sbb
insl
dec
shlb
outsl
cmp
or
aad
sbb
fucomp
sub
jne
in
add
push
dec
mov
mov
xchg
lods
dec
incl
sti
lods
add
pop
mov
xchg
insb
cltd
out
cmp
jp
in
in
fs
daa
dec
into
add
sbb
mov
inc
sbb
nop
jp
icebp
icebp
das
sub
or
test
sti
test
imul
pop
jge
pop
push
mov
pop
sbb
add
sub
je
sarb
lock
std
xchg
aaa
or
lret
add
insl
jp
push
ret
jb
or
lea
mov
out
sbb
mov
sti
cmp
and
dec
adc
shrb
sub
push
inc
cmovp
mov
xor
adc
and
outsb
fwait
push
imul
inc
rcl
inc
loopne
iret
push
stos
movsl
clc
pushf
mov
push
mov
jge
inc
call
fimuls
adc
sbb
jae
push
movsb
mov
pop
jno
aaa
repz
adc
pop
push
mov
add
inc
xor
iret
xchg
loopne
pop
arpl
ret
test
sub
push
jmp
or
jne
push
inc
or
pop
cmp
mov
mov
push
add
pop
mov
mov
lahf
xor
cmpl
shl
aam
xchg
into
sbb
bound
outsl
out
and
push
repnz
or
out
push
popa
mov
cli
mov
in
stc
push
mov
dec
push
arpl
das
pushf
push
cvtps2pd
lret
add
repz
das
repz
dec
add
cmpsl
adc
lock
roll
ljmp
cld
mov
es
dec
jle
aad
scas
arpl
loop
push
adc
jnp
xchg
in
dec
inc
mov
into
push
in
outsl
lods
mov
inc
insl
lahf
loop
xchg
orl
pop
les
movsb
push
add
sub
ss
sub
lret
cmp
lahf
addr16
movl
stos
rcl
in
dec
imull
inc
in
jle
adc
scas
pop
mov
out
leave
jle
test
xchg
dec
jmp
out
fisubrl
push
inc
cwtl
and
dec
inc
addr16
cmpsb
cltd
loopne
mov
arpl
outsb
inc
dec
or
sub
or
das
sbb
cltd
inc
adc
call
test
mov
jae
pusha
mov
fists
xchg
scas
das
pextrw
insl
lahf
inc
push
push
sbb
inc
cmpsl
xchg
dec
aam
out
pop
pop
mov
mov
adc
pop
scas
adc
or
je
fmull
js,pn
fsubp
cli
stos
jo
xor
jnp
push
sub
mov
jo
sbb
repz
pop
stos
adc
into
ficoml
jle
push
inc
push
cmpsb
hlt
lds
ss
scas
sub
lcall
fs
ss
mov
xor
dec
dec
push
cwtl
and
jns
shll
cmc
push
imul
xchg
xchg
ljmp
cltd
hlt
cmp
pop
dec
jo
insl
mov
adc
iret
imul
mov
sbb
and
or
mov
or
sub
cmpsb
outsb
adc
cmp
pusha
filds
out
rclb
out
movsl
dec
hlt
out
inc
ljmp
sbb
ljmp
clc
pop
inc
pop
cmpsb
sbb
jno
jl
filds
add
sbb
sub
pop
lods
pop
in
je
call
jmp
popf
mov
lock
jmp
dec
outsl
inc
lret
repz
mov
lock
ja
leave
scas
xlat
cmp
mov
inc
repnz
cltd
push
loopne
mov
push
push
sub
aaa
xchg
je
and
nop
mov
pop
cltd
cmp
xchg
jle
sub
icebp
out
jmp
jbe
sbb
cmp
sub
adc
addr16
outsl
jne
sbb
arpl
push
testb
out
cmpsl
jecxz
inc
pushf
xchg
pop
or
es
into
fcmovbe
lret
mov
push
cltd
cmp
inc
arpl
jmp
rclb
pop
aam
pop
ret
popl
inc
pop
push
sub
insl
scas
and
lods
hlt
ret
sbbb
xor
out
rorb
xchg
pusha
in
cmp
mov
call
cmp
xchg
or
lea
sbb
shrb
xchg
xchg
movsb
mov
cmpsb
xor
sub
push
into
mov
dec
pusha
addr16
daa
call
jne
xchg
dec
dec
bnd
xchg
xchg
loope
aad
cwtl
adc
push
xchg
daa
cli
fistpll
cmp
xlat
in
jbe
push
push
dec
cs
jo
xchg
dec
xchg
adc
inc
in
mov
ss
fldt
dec
jae
out
mov
in
mov
push
sub
lods
add
mov
jno
mov
cmp
cmpsl
scas
lods
sbb
lock
jbe
call
pop
jp
movsb
sub
pop
cmovg
je
aas
pusha
rcrl
fsubl
mov
pop
jbe
das
or
sbb
jecxz
js
jmp
xchg
dec
mov
in
push
mov
xchg
inc
imul
lock
sbb
inc
shlb
jne
neg
pop
ficoms
pop
lret
dec
divl
sub
pop
dec
lahf
cmc
xchg
sbb
fmulp
int
loop
cmp
jmp
addr16
xchg
xchg
dec
repz
je
vcvttss2si
push
arpl
outsl
cmpl
pop
repz
cmpsl
sbb
push
xor
js
pop
insl
mov
lods
repnz
or
outsb
testl
jmp
adc
sub
push
in
sbb
fadd
lret
push
mov
jno
push
jnp
aas
inc
fwait
cli
addr16
mov
out
das
int3
incb
jo
xor
mov
out
mov
or
dec
or
dec
or
rclb
jle
fsubrl
test
mov
je
ret
sbb
mov
fstpt
or
cmp
push
stos
test
push
pop
or
fs
sub
sbb
dec
aad
dec
jo
rolb
loopne
push
ror
out
fs
imul
into
lock
test
xor
pop
adc
xchg
fsubr
loope
push
adc
jnp
push
addr16
push
cmp
cmp
lock
adc
ret
int
stos
inc
pop
call
or
vxorps
pop
push
jne
outsb
les
mov
pop
xchg
cmp
adc
mov
mov
mov
or
mov
hlt
xor
or
mov
dec
mov
imul
loope
cmp
fs
stos
push
ds
pop
andl
or
pop
sub
or
push
repnz
xor
cmp
cs
sbb
inc
sbb
cs
mov
inc
outsl
xor
jo
scas
and
cld
sub
dec
lock
adc
push
or
add
lock
push
mulb
pusha
jns
sub
adc
in
push
mov
jne
inc
lods
xchg
adc
rolb
aad
push
test
in
fwait
dec
or
mov
dec
xor
sub
sbb
test
pop
repz
jle
repz
into
inc
xchg
pushf
cmp
cmpsb
xor
negb
aas
or
mov
pop
lods
xor
cmp
adc
push
andl
cmpsb
push
lcall
stos
js
mov
add
stc
sub
dec
or
fstpt
ss
mov
addl
lock
jo
sub
pop
pop
dec
je
jl
in
jns
pop
imul
je
dec
into
ljmp
lret
push
ja
adc
inc
sti
int3
mov
mov
stos
lock
xor
outsb
mov
sub
outsl
test
xchg
fwait
leave
or
adc
jl
xlat
or
mov
mov
jle
fistl
xor
mov
iret
mov
push
adc
dec
dec
sub
add
shl
mulb
stos
mov
lods
dec
popf
xor
rclb
xor
cmp
sbb
add
pop
aaa
inc
jp
jbe
pop
add
imul
push
inc
ss
jo
adc
xor
and
scas
and
jl
mov
test
enter
pop
add
shl
jbe
mov
inc
lret
add
cs
cs
xlat
or
repz
repnz
adc
and
jae
out
and
pop
pop
stos
pop
fucomi
sub
mov
or
repnz
int3
sbb
andl
dec
push
lret
fsubrs
inc
out
push
sti
outsl
adc
fstps
hlt
and
push
dec
xchg
cs
inc
jg
jnp
dec
jne
dec
cmpsb
jg
jle
pop
cmc
cmp
pop
jle
out
mov
or
pop
push
push
mov
imul
movsl
fsubs
mov
xchg
and
aaa
lret
dec
xchg
lods
mov
sti
jp
xor
push
cmc
cmpsb
out
loopne
int3
lret
jnp
std
shr
push
popa
divl
mov
xor
mov
xlat
mov
cmpsl
push
ficomps
jbe
stos
dec
jns
mov
mov
xchg
orl
repz
roll
je
cmpsl
sarb
addr16
inc
mov
and
dec
jl
pop
xor
add
mov
xor
in
xchg
out
jge
aad
adc
sub
mov
inc
rol
cmpsl
cmp
lock
inc
call
xchg
xor
sbb
push
lods
sub
pop
mov
test
test
ficompl
cli
or
or
out
cld
dec
cmpsb
jl
push
adc
cld
into
stos
push
jns
out
cmp
pop
or
imul
xchg
cmp
gs
loopne
out
mov
lcall
mov
pop
dec
pop
pop
nop
xor
sub
adc
cmc
push
dec
pop
pop
push
loope
int3
scas
xchg
out
mov
stc
xor
or
xchg
sub
jae
push
in
add
sbb
ret
roll
testb
mov
daa
and
mov
sbb
mov
clc
adcb
and
cs
jo
adc
frstpm(287
out
xchg
test
cld
xchg
mov
stos
imul
push
sub
sahf
test
or
jmp
sbb
push
xchg
pop
jb
clc
addr16
scas
roll
inc
pop
xchg
nop
jne
lods
cld
adc
xor
fimuls
stos
int3
data16
shlb
pop
and
xchg
mov
xlat
or
iret
out
or
sbb
cmp
cld
xchg
pop
jne
add
or
pop
or
push
js
sub
lahf
mov
pop
and
movsb
adc
stos
dec
cmp
sbb
sbb
mov
cmpsb
lret
xlat
cltd
dec
lods
pop
addr16
ss
mov
sub
scas
add
loopne
fildl
repz
fldt
xor
sub
lock
inc
jae
pop
cs
and
push
cmp
sub
mov
push
and
ljmp
push
gs
mov
loop
addr16
xchg
dec
or
in
xor
cmp
lahf
aad
jne
mov
scas
dec
fwait
in
mov
push
dec
lock
jno
jp
or
jae
push
cmp
gs
push
mov
mov
inc
insl
sbb
idivb
inc
sarl
add
lds
testb
sti
pop
ret
lahf
pop
mov
mov
cli
xor
das
fists
lret
pop
ret
lahf
cli
xor
outsl
cmpsl
inc
mov
les
cmp
push
ret
daa
lret
dec
or
inc
out
xchg
iret
inc
xchg
jne
jbe
dec
push
loopne
hlt
fcoms
pop
pusha
aaa
inc
and
iret
andb
lock
xchg
insl
pushf
jne
mov
or
clc
ret
scas
xor
add
mov
xor
sub
push
fmuls
mov
adc
fdivl
fldt
sahf
dec
push
add
jl
aam
sub
inc
rclb
mov
xor
xbegin
push
into
dec
and
outsb
xor
pop
insb
push
movsl
enter
inc
and
or
int
testb
mov
sub
insl
pop
lods
loop
decl
sbb
cmpsb
shlb
mov
rcll
sbb
mov
sub
dec
jmp
emms
sub
loop
inc
xor
aaa
push
outsl
enter
ja
jge
xor
sti
mov
mov
and
ja
or
push
xchg
mov
lock
jne
out
cld
xchg
scas
adc
inc
das
nop
dec
call
jecxz
mov
addr16
mov
arpl
insb
mov
out
mov
cld
lret
cmpsl
push
in
sbbb
sahf
xor
jae
jmp
in
adc
jno
dec
iret
ret
mull
ljmp
dec
fsubrl
movsb
mov
in
push
add
xchg
add
pop
out
inc
test
xor
push
or
or
add
mov
mov
xchg
inc
add
in
outsb
rclb
loop
mov
iret
bound
inc
xchg
das
adc
or
xchg
xchg
or
jnp
mov
in
xor
jle
xchg
xchg
into
mov
push
enter
sqrtps
inc
insb
loop
test
mov
nop
jb
push
fstl
xor
mov
addr16
out
xchg
inc
lods
lods
or
or
out
dec
and
ficoml
pop
pop
push
clc
push
ljmp
push
cmc
sub
add
dec
xor
dec
call
pop
pop
jecxz
cmp
std
push
ds
pop
icebp
js
repnz
insl
aas
inc
inc
iret
dec
sub
cmpsl
push
movsb
xor
xchg
adc
loopne
fadd
iret
into
decb
dec
test
xlat
xchg
nop
ret
xor
lock
imul
dec
add
inc
push
jno
adc
sub
aam
je
sbb
loopne
addr16
pop
rcrb
xchg
adc
insb
mov
jle
outsl
fsubr
lods
mov
aam
mov
mov
add
and
outsb
xor
mov
dec
cmc
adc
rclb
xor
lock
scas
or
sbb
iret
adc
pop
dec
dec
and
hlt
shll
repnz
xchg
jge
enter
sub
xlat
push
mov
sub
mov
push
cmp
pop
pop
push
sbb
movsb
sub
add
mov
pop
push
adc
push
fcompl
cmpsb
xor
sub
daa
aas
sti
negl
cmp
imul
xor
lds
mov
push
in
cmc
lods
hlt
mov
sub
imul
ret
rorb
push
jo
pop
fdivs
aad
scas
dec
cld
lods
push
jp
push
outsb
ss
mov
dec
out
and
xor
push
cmp
dec
iret
xor
push
test
daa
inc
dec
cmp
jp
lock
push
ret
enter
outsb
sbb
xchg
ja
sbb
pop
dec
sbb
pop
sub
cli
sbb
outsb
into
in
dec
or
jns
outsb
loopne
sub
push
fdivl
inc
pop
cmp
push
jbe
push
adc
jno
add
sub
dec
jp
add
iret
sub
inc
sub
outsl
cmpsl
enter
ja
cli
push
xchg
or
ret
adc
imul
fsubrp
cmpsl
jo
dec
add
daa
cli
jp
cmpsb
jle
push
je
fcoms
out
push
cmpb
jl
mov
mov
or
pop
mov
je
ds
popa
pop
inc
or
rcrb
jl
pop
aaa
incb
xchg
ret
sub
sub
adc
cmpsl
mov
imul
daa
inc
adc
mov
adc
fidivs
xchg
xor
scas
mov
cli
sbb
push
les
push
sub
aam
jb
out
lods
sub
rclb
enter
xor
push
pusha
cmp
cmc
push
lea
lods
fidivl
daa
jge
inc
insb
sub
popa
mov
xchg
dec
pop
scas
push
in
test
dec
loopne
jo
xchg
inc
lods
jo
fdivp
sti
xchg
xchg
mov
or
dec
cmp
pop
test
clc
nop
cmp
xchg
in
sub
xor
ljmp
clc
inc
or
ljmp
daa
dec
jbe
dec
fcompl
cltd
push
push
mov
push
fisubrl
push
mov
jbe
test
push
push
lock
pop
xchg
and
popa
push
lahf
mov
lods
push
or
sub
jp
cld
jo
dec
adc
lret
or
xor
aad
or
clc
out
sbb
pushf
sub
fsubs
clc
or
push
ljmp
xchg
push
imul
int
jne
jmp
add
clc
or
test
pop
add
ljmp
dec
cmpsl
or
jmp
dec
addl
mov
push
pop
xor
sbb
pop
aas
push
pop
cmp
cmp
jbe,pt
pop
lea
fwait
bound
test
stos
lret
data16
jbe
into
das
pop
mov
fimuls
cmp
stos
mov
jmp
in
pop
out
lods
mov
sub
dec
je
aad
pop
or
mov
out
or
adc
into
pop
sub
mov
stos
insl
scas
cld
jbe
rcrb
jbe
rcl
or
cmpsl
mov
sub
jns
add
aaa
imul
mov
lret
imulb
jle
cli
test
jns
testb
or
adcl
negb
adc
outsl
ds
pop
pop
addr16
or
ljmp
dec
sbb
cmp
enter
adc
popa
adc
mov
lret
inc
dec
sbb
insl
mov
push
or
xchg
mov
sbb
icebp
xor
hlt
int
arpl
sub
out
sbb
cmp
test
mov
adc
xor
xchg
push
mov
sbb
xor
cmc
ja
cmpsl
and
sub
imul
pop
in
jg
mov
mov
inc
fcmovb
adc
fisubrl
sbb
jns
mov
push
mov
xor
scas
pop
outsb
sbb
mov
xlat
mov
inc
aaa
pop
rorl
xlat
inc
sub
adc
jge
adc
push
push
enter
push
xchg
mov
or
mov
xchg
aad
out
dec
js
pop
add
das
xor
out
dec
cmp
cli
jge
sahf
fwait
lods
ljmpw
ja
sub
cltd
mov
adc
xlat
out
xchg
xchg
call
cld
aam
or
inc
popa
mov
int3
cli
pop
lret
insl
pop
and
scas
rorl
mov
fidivl
stos
sbb
xchg
xchg
jo
xor
mov
dec
outsl
push
mov
lahf
pop
dec
mov
js
movsb
jb
mov
add
daa
enter
sub
adc
cmpsb
or
loopne
fs
jo
lea
imul
stos
sbb
mov
pop
dec
push
ss
adc
orl
xchg
data16
push
jo
popa
push
dec
and
inc
push
cmpsb
pop
cmp
or
cmpsb
adc
mov
mov
jne
jno
adc
imul
orl
cwtl
push
aas
cld
pop
mov
cld
lock
cvttps2pi
pusha
repz
adc
out
or
imul
cmp
mov
xor
xor
push
jne
iret
or
nop
cmp
test
aam
insl
outsl
dec
inc
xor
and
dec
pop
push
sub
daa
cli
mov
dec
xchg
mov
filds
or
jnp
lret
out
sub
sarl
add
pop
cmpsl
das
lret
or
stos
shr
test
lret
mov
push
into
insb
rorb
aaa
out
mov
cmp
lods
daa
jmp
xor
pop
js
push
daa
push
movsb
xlat
out
daa
test
pop
popa
pusha
mov
dec
insb
mov
cmp
mov
lret
pop
mov
cmpsl
sbb
sub
push
add
sbb
mov
addr16
movb
pop
dec
or
mov
jbe
in
out
gs
cmc
inc
lock
test
fcoml
dec
mov
mov
jbe
aas
xor
pusha
roll
jbe
lock
and
dec
pop
push
mov
iret
mov
push
pop
and
sub
dec
sub
jo
sub
or
adc
xor
test
hlt
movsb
add
mov
sub
dec
cmp
xchg
mov
inc
inc
into
push
inc
in
aam
das
sahf
popa
enter
sub
push
push
and
push
xor
cmp
pop
push
out
daa
push
mov
cli
adc
inc
jbe
ja
das
fdivp
mov
fdivrp
lret
jns
rol
scas
mov
lods
mov
jne
dec
cli
pop
pop
sbb
pop
dec
repnz
sbb
ljmp
xchg
add
jmp
jnp
or
lock
pop
out
lret
call
dec
cld
loope
push
sub
sbb
inc
jbe
pushf
jl
cs
divl
imul
push
xor
or
push
fs
pop
ja
pop
das
jmp
imul
mov
xor
arpl
scas
xor
enter
out
ja
mov
cmp
bound
xchg
aas
out
or
stos
lret
cmp
jmp
jmp
xor
xchg
into
addr16
je
sahf
push
insb
push
xor
push
aad
popa
loope
stos
sub
ds
jmp
popf
pushf
mov
js
xor
sbb
pop
addr16
inc
pushf
pusha
mov
push
lahf
cmp
dec
push
mov
mov
mov
jbe
aam
lea
aaa
dec
cmp
sbb
xchg
add
xchg
cmpsl
lret
imull
pop
xor
xchg
mov
lea
mov
xor
push
push
fiaddl
lea
hlt
or
jl
push
mov
sub
adc
inc
jbe
mov
test
pop
loop
rorb
cmpsb
mov
popf
mov
mov
cmp
fists
lea
shlb
hlt
insl
xchg
mov
in
dec
sbb
mov
imul
subl
cmp
sub
push
jno
fnstcw
pop
js
mov
inc
ss
mov
repnz
repnz
pusha
lea
outsl
lods
fwait
nop
dec
adc
xor
pop
aam
int
inc
mov
in
mov
mov
cwtl
dec
cmpsb
sbb
imul
std
rcrl
sbb
dec
js
inc
das
pushf
cmp
dec
mov
movsb
pop
pop
jmp
aam
or
gs
cmpsb
jnp
xor
sbb
dec
mov
rcr
clc
iret
xchg
cwtl
inc
out
inc
dec
scas
dec
push
dec
xor
cmp
push
mov
test
push
daa
xor
and
outsb
aas
xor
fcomp
pop
push
shlb
stos
pop
and
dec
adc
cmpb
cwtl
scas
pop
mov
dec
cmpsb
mov
inc
ljmp
lock
push
les
mov
jae
data16
jecxz
leave
imul
push
imulb
pop
icebp
lret
sub
outsl
adc
popa
sbbb
push
cmp
aad
adc
xor
lahf
lods
into
out
ffree
mov
fbstp
mov
stos
out
xor
dec
adc
cmp
addr16
dec
sub
xor
jns
cmpsb
cmpsl
pop
out
inc
ljmp
je
or
push
jae
js
pop
xor
and
pushf
push
ret
ret
mov
je
cmpsb
jle
and
xchg
mov
or
sub
cmpsb
je
pop
out
mov
je
xor
clc
xorl
cmp
les
inc
ret
ret
and
ret
add
mov
daa
add
dec
ret
ret
adc
cmp
jmp
mov
arpl
into
ret
popa
ret
adc
mov
arpl
sbb
ret
or
in
iret
dec
ret
xchg
stos
shll
out
rol
sbb
les
adc
hlt
ret
ljmp
adcb
ret
mov
shrl
sub
addr16
pusha
add
loopne
shl
jle
ret
pop
ds
mov
dec
inc
out
dec
ret
ret
es
lret
insb
xchg
sub
ret
xlat
push
into
int3
fcmove
push
int3
add
rorl
lret
loope
add
les
inc
out
inc
xlat
xchg
iret
outsl
push
stos
fldenv
lock
ret
dec
jb
fdivp
rcl
push
out
dec
ret
dec
mov
jecxz
add
fcomps
mov
out
or
mov
inc
ret
push
enter
lret
ret
lret
add
int
dec
push
adc
hlt
enter
xchg
sub
rcl
jle
out
into
ret
xlat
xchg
es
jecxz
fcmovu
mov
adc
hlt
les
fists
mov
es
ret
shl
les
stc
xchg
sub
ret
jecxz
inc
ror
pop
lret
adc
hlt
enter
add
add
loope
ret
inc
and
stos
iret
rclb
fwait
jnp
rcl
jle
or
cld
call
xchg
stos
fsubs
jle
fcmovb
jle
or
fucomp
addl
add
out
int3
inc
push
ds
ret
ret
fcmovb
mov
lret
ljmp
test
lret
inc
int3
xchg
enter
out
enter
jle
or
addr16
aad
enter
jecxz
movsb
adc
ret
scas
jp
out
call
sub
les
push
ffreep
lahf
ret
inc
fcompl
out
insl
add
lds
pop
or
les
out
enter
pusha
inc
lret
es
inc
int3
enter
ret
iret
call
movsl
rclb
pop
pop
and
add
xlat
es
icebp
add
or
jae
fmull
lds
repz
sbb
dec
hlt
out
ret
loope
push
or
ret
jle
or
enter
lret
cli
movsb
int3
adcb
fcmove
hlt
ret
shll
popa
mov
out
ret
rorb
pop
aam
jl
lret
dec
rcl
xchg
es
inc
fld
fcmovu
push
aam
out
inc
fstl
jecxz
pop
es
inc
mov
shll
stos
les
add
adc
enter
incl
xchg
sub
es
into
sbb
les
out
bound
rclb
xlat
ret
mov
jecxz
xlat
jle
test
lret
or
out
fmull
push
xchg
stos
fsubp
pop
out
loopne
ret
push
loope
les
jmp
imul
push
pop
lret
stos
lret
es
push
int
fcmove
pop
outsb
adc
hlt
ret
out
inc
rclb
push
dec
aam
inc
add
mov
hlt
and
ret
dec
mov
in
pop
and
cmp
je
enter
sbb
inc
mov
test
inc
lret
xor
xor
pusha
pop
and
mov
movsb
inc
and
cmp
in
roll
and
inc
roll
fidivl
arpl
je
cmpsb
ret
push
jecxz
and
enter
insb
inc
inc
stc
xchg
je
ror
pop
and
pop
inc
cmc
mov
les
inc
xchg
lret
jecxz
dec
inc
dec
outsb
mov
fldt
inc
inc
add
sbb
sbb
push
add
es
cli
dec
lods
sti
xlat
aam
loop
arpl
out
inc
rcr
rcr
hlt
xor
loop
dec
push
dec
fildl
lret
adc
xlat
push
out
push
addb
dec
arpl
rol
je
sar
dec
mov
dec
repz
hlt
out
push
ja
repz
or
shll
rorl
push
add
adc
aad
pop
fidivl
pop
lret
pop
xor
add
xor
lret
shrb
in
push
rclb
push
outsl
ss
push
add
sbb
je
rolb
out
loop
sbbl
sub
popa
hlt
hlt
dec
repnz
repz
or
or
jecxz
mov
lret
pop
add
push
lret
xor
xor
xor
mov
dec
xor
push
ret
adc
lret
add
dec
dec
repnz
mov
leave
call
lret
add
add
dec
or
mov
or
sub
mov
add
mov
dec
jge
scas
sti
push
insb
sub
fisubrl
outsl
and
lret
mov
jae
dec
lods
xor
lods
xchg
mov
aad
ror
fisubl
rcrl
in
in
and
pop
test
or
push
sub
dec
add
inc
dec
dec
ret
dec
xchg
mov
mov
mov
insl
fiaddl
pusha
lret
dec
and
repnz
add
test
lods
subl
fcmove
dec
mov
lret
in
inc
ret
jae
cs
push
sub
cli
push
xchg
pop
scas
add
sti
push
inc
dec
bound
inc
loop
add
and
inc
dec
arpl
xchg
dec
dec
loop
lret
aad
pop
dec
fcmovu
repnz
and
or
lret
lret
roll
push
push
pop
testl
aad
xchg
loop
les
jbe
into
lds
frstor
int3
repz
mov
loopne
loopne
mov
xchg
push
stc
add
inc
scas
or
pop
cltd
push
dec
or
popa
leave
jb
pop
movsb
inc
ret
mov
mov
into
test
ret
lds
or
ss
cmpsb
jge
fcmovb
pop
dec
pop
inc
push
push
or
fisubl
dec
jecxz
in
sub
pop
rorb
or
push
dec
aam
pop
daa
fidivl
shl
and
movsl
repz
ret
lds
push
test
fbstp
repnz
sub
xchg
dec
cld
mov
push
test
out
xchg
cmp
rcr
inc
iret
jecxz
fcoms
or
aad
ret
rcrl
adc
stc
inc
and
aad
pop
lret
sbb
push
push
fdivl
jb
out
dec
jb
inc
jmp
jmp
push
out
sbb
mov
out
in
mov
adcb
shl
push
inc
rclb
stc
repnz
xchg
mov
lret
dec
loop
push
push
repnz
fadds
stos
pop
mov
fcomip
aad
dec
repz
ficoml
xor
ret
push
test
cli
jae
push
enter
rol
cli
mov
inc
push
fisttpl
int
pop
dec
fisubs
pop
pop
bound
dec
frstpm(287
pop
push
mov
pusha
fisubl
xchg
loop
mov
shlb
pop
ljmp
mov
sub
add
iret
loop
dec
sbb
xchg
jmp
add
test
xchg
orb
push
sub
fidivl
xor
aam
xor
jae
adc
fldenv
sbb
xchg
in
pop
std
or
mov
sbb
pop
dec
notb
sbb
movsb
and
repz
cmp
push
add
cmp
sbb
jae
jmp
xchg
and
in
and
xlat
test
push
mov
sub
ss
ret
dec
push
xor
push
enter
jecxz
ret
xor
fcmovnb
es
jecxz
push
sub
jecxz
and
add
push
lret
add
inc
jae
and
rolb
ret
and
fs
inc
fisubl
outsl
and
test
movsb
mov
sbb
push
dec
test
sbb
mov
movsb
cld
add
and
xor
pop
lock
inc
and
repnz
sbb
add
and
into
lock
test
movsl
push
repnz
in
cmp
fidivl
cmp
inc
and
mov
sbb
dec
es
mov
fwait
xlat
das
loop
xlat
sub
push
jecxz
cmp
inc
inc
fs
movsb
push
les
add
inc
gs
movsl
push
lds
push
repnz
hlt
xor
loop
add
xchg
dec
loop
lret
roll
xlat
or
push
rol
repnz
fs
dec
sub
loop
pop
ret
pop
push
fisttps
inc
dec
repz
push
dec
pop
pop
repnz
jecxz
test
fstps
loop
je
in
loop
lea
shlb
shr
adc
cmp
push
lret
insl
add
repz
push
enter
rcr
jecxz
cmpsb
fmull
js
dec
lret
xor
scas
je
ret
iret
je
mov
xchg
out
rol
cli
xchg
lock
rclb
and
movsb
and
loope
incl
lds
aad
hlt
sub
xchg
dec
adc
popa
push
leave
test
mov
push
test
int3
add
inc
push
push
aad
sahf
nop
icebp
or
lret
cli
nop
jmp
pushl
sub
inc
pop
imul
out
pop
sbb
aad
pop
pop
push
loop
lret
jns
fdiv
push
hlt
pop
dec
sbb
mov
repz
in
jle
imul
sbb
push
inc
arpl
dec
inc
pop
dec
dec
popa
push
cmc
xor
shl
dec
in
or
jmp
push
lret
add
add
inc
add
inc
fbld
xchg
dec
push
pop
stos
and
call
insl
dec
and
dec
shl
inc
add
decb
test
in
enter
jne
jmp
inc
dec
roll
call
dec
dec
xchg
filds
andb
out
mov
dec
pop
inc
inc
shr
ficoml
out
fbstp
pop
shll
push
and
filds
inc
mov
push
movsl
jmp
pusha
shlb
sbb
pop
sbb
ret
push
xlat
shlb
add
dec
popf
mov
fisubl
in
lret
in
repz
xlat
pop
aad
inc
lds
in
inc
dec
pop
dec
push
inc
and
decb
lods
arpl
lret
shrb
addl
es
fiaddl
bound
adc
addl
fisubrl
int3
or
in
add
cwtl
dec
icebp
inc
fdivl
rcr
ret
in
dec
inc
mov
inc
mov
shl
sbb
in
inc
repnz
inc
daa
pop
rcl
add
dec
in
sub
cld
and
fistpl
into
rcl
inc
ficoml
ret
test
loop
out
push
fimuls
inc
xchg
dec
dec
dec
shlb
dec
sahf
inc
inc
mov
je
dec
sbb
rcl
test
jbe
dec
and
les
push
in
sub
movsb
test
shl
repz
es
xchg
adc
test
ficoml
movsb
scas
dec
mov
shl
sub
mov
pop
mov
sbb
subb
xchg
inc
dec
rcl
inc
xchg
dec
inc
stos
movsl
roll
xlat
xchg
shrb
mov
int3
je
dec
sbb
rcl
movsl
repz
pusha
movsb
inc
pop
fistpl
rorb
test
push
outsb
gs
dec
dec
loop
dec
fbld
stc
pop
test
sub
pop
in
xchg
pop
cmpsl
flds
popa
lahf
ret
in
in
je
dec
jns
popa
rolb
in
push
inc
es
dec
aaa
push
mov
adc
aam
xchg
rorb
es
outsb
push
scas
dec
insl
dec
sbb
int3
adc
fcmovbe
xchg
add
cwtl
dec
icebp
inc
lds
rcrb
dec
pop
xlat
sbb
dec
rol
add
dec
pop
pop
fs
dec
jns
push
into
cmpsb
jbe
adc
or
les
icebp
sub
dec
dec
pop
repz
je
dec
pop
mov
push
fs
cli
out
ja
inc
inc
inc
int
pop
ficompl
pop
sub
daa
test
or
push
ficoml
daa
dec
and
push
inc
pop
addr16
jno
movb
inc
inc
lods
addr16
out
fbstp
jns
inc
adc
shlb
add
cmpsl
sbb
in
sub
push
je
shl
out
mov
int3
in
inc
inc
leave
sub
shrb
mov
dec
and
outsl
push
push
or
pop
push
shrb
or
inc
fcoms
xchg
fisttps
aad
sub
fiadds
ja
decl
in
shrl
icebp
mov
or
shrb
dec
fcomip
rorb
dec
sbb
in
dec
pusha
or
rorl
add
fs
test
loopne
mov
jle
xor
popa
or
in
je
pusha
dec
sbb
xor
mov
or
mov
in
jmp
inc
rolb
pop
adcb
call
stos
add
and
inc
fiaddl
pop
arpl
xchg
stos
and
mov
xchg
rol
jecxz
fsubrl
inc
stos
add
and
inc
fisubl
dec
fiadds
in
dec
rcll
push
inc
in
enter
stos
aam
fcmovnu
es
pop
aam
int
and
add
lret
push
push
xlat
dec
pop
fdiv
pop
inc
lds
rcr
fcomps
mov
and
pop
mov
dec
pop
pop
repnz
cmp
and
xchg
pop
cmpsb
inc
dec
fmull
jne
fistl
push
pop
popa
inc
enter
pop
jecxz
push
dec
dec
aad
and
loop
andb
mov
pusha
pop
dec
loop
repnz
and
pop
inc
dec
ret
repz
push
faddp
inc
loop
int
repnz
add
inc
mov
rol
inc
and
sbb
dec
pusha
mov
jecxz
stos
push
int3
cwtl
fmuls
and
cmp
cmp
xchg
inc
inc
and
lock
pop
jecxz
cld
mov
in
jmp
hlt
mov
dec
sub
push
dec
cmpsb
lret
mov
dec
iret
test
insl
lret
dec
adc
rcrb
insl
daa
lret
adc
or
ret
inc
or
in
add
mov
inc
test
ret
push
lcall
inc
pop
lret
in
inc
lds
lret
sbb
push
dec
sbb
fmulp
pop
bound
xchg
sub
cmp
roll
or
push
push
pop
jae
dec
stc
mov
dec
mov
dec
int
xor
repnz
test
ret
ret
ret
mov
data16
cmp
test
xor
cmc
inc
sbb
loop
pop
sahf
dec
repz
dec
fistl
xor
ja
adc
dec
das
jbe
pop
adc
add
repz
es
pop
sti
push
fdiv
loopne
dec
frstor
jb
inc
or
sbb
out
fcmovne
sbb
ror
push
dec
dec
pop
pop
pop
lock
fistpll
jmp
dec
sbb
inc
jle
imul
iret
mov
fildll
inc
ret
mov
push
dec
fstpl
arpl
push
pop
std
popa
mov
rcrl
in
dec
xchg
repz
push
push
dec
ss
repnz
test
cli
ljmp
and
dec
icebp
lret
push
push
repnz
out
xlat
dec
inc
loop
lret
ffree
ret
movsl
push
inc
js
inc
enter
popa
repnz
add
jmp
pop
aad
fiaddl
cmc
dec
dec
loop
dec
dec
add
dec
mov
mov
mov
fdivl
jns
int3
pusha
movsl
xlat
mov
dec
iret
inc
iret
dec
mov
fsubrl
adc
movsl
lret
pop
pop
imul
rcll
mov
lods
add
mov
cmp
lret
bound
fcom
je
push
mov
shll
je
shr
jbe
and
sar
fdivl
push
int
inc
adcb
repz
mov
addr16
inc
sbb
jmp
dec
sbb
pop
ss
push
xchg
cmp
call
inc
dec
jecxz
lret
push
fiaddl
pop
test
inc
loop
test
dec
fmull
arpl
adc
adc
leave
popa
int3
dec
mov
pop
push
inc
push
or
inc
mov
cmpsb
fnstsw
mov
or
xlat
jp
jns
xor
dec
sarb
aad
imul
dec
out
pop
dec
add
ficoml
inc
sarl
push
jns
inc
cmpsb
pop
jns
int
repnz
or
push
shl
mov
mov
cltd
repnz
sub
push
rol
pop
sarb
das
dec
lock
xor
rorl
xlat
or
push
sub
push
aad
pop
rolb
lock
sbb
pop
push
dec
sahf
fldpi
mov
cli
fld1
into
pop
and
into
dec
push
mov
outsl
rcrb
fbld
in
jecxz
movb
push
shlb
rolb
dec
popf
jae
scas
rcl
shrb
arpl
sbb
push
ret
or
rclb
rolb
dec
or
leave
shlb
mov
cmp
lret
rclb
rolb
xchg
cmp
fcmovnbe
adc
stos
pop
in
das
in
rcr
shlb
jns
rorb
and
dec
jp
stos
out
jp
roll
jb
into
sbb
popf
jae
ret
inc
sbb
fs
lcall
leave
lods
fcom
in
dec
iret
or
jbe
pop
roll
mov
js
sbb
add
or
rolb
or
ficoml
fistpl
test
dec
pop
rclb
out
popa
sub
in
xlat
sbb
dec
popf
mov
ret
add
push
fwait
pop
pop
mov
sbb
xlat
and
pop
clc
pop
mov
push
inc
stos
dec
es
repz
ficompl
fsubr
inc
in
dec
xchg
stos
dec
es
push
fcmovu
pop
pop
nop
push
pop
xchg
loope
lock
flds
loop
push
xchg
sbb
dec
cmp
les
shl
pop
shl
ret
dec
push
rorl
loopne
dec
inc
fsubrp
fisttps
push
sub
sbb
pop
pop
cmp
mov
pop
out
xchg
sub
jnp
push
inc
jnp
stos
pop
pop
fwait
or
in
fwait
mov
push
push
test
xlat
sub
test
loop
add
inc
shrb
ja
mov
sbb
push
push
pop
push
sbb
stos
dec
pop
sti
lret
sub
push
repnz
mov
inc
pop
add
adc
sarw
pop
shrl
dec
pop
repz
pop
repnz
add
xchg
insl
pop
lret
sub
dec
sbb
mov
ret
decb
dec
movsb
pop
and
pop
pop
and
int
jns
cmc
dec
and
cmp
add
movsb
pop
daa
rcrb
push
pop
sbb
inc
sbb
ja
inc
lock
dec
aas
or
dec
sbb
xlat
es
jbe
push
into
dec
push
lods
aam
pop
leave
rolb
mov
inc
push
fsubrs
fisubl
cmp
push
inc
ret
xchg
push
repnz
nop
fisttpl
push
xchg
mov
loop
push
fcompl
data16
cmp
int3
sub
inc
dec
xchg
mov
dec
and
insl
push
frstor
sti
fstl
add
insl
xchg
int3
pop
inc
sbb
popf
mov
lea
cmc
fldl
dec
fcmovu
sbb
pop
cmp
mov
inc
nop
mov
cli
dec
aam
cmp
pop
add
filds
inc
inc
dec
or
sbb
jbe
inc
pop
mov
cmc
dec
into
inc
add
dec
out
dec
pushf
pop
inc
adc
ja
xor
jo
cmp
fildl
cwtl
inc
dec
je
push
cmc
dec
and
fldt
pop
and
push
dec
sbb
ret
inc
mov
push
push
inc
fimull
je
inc
je
push
mov
push
inc
push
dec
dec
inc
xchg
fbstp
sbb
pop
push
pop
mov
fbld
sbb
es
pusha
or
dec
cld
pusha
lock
inc
adc
jle
lock
dec
sub
shl
out
lea
mov
fcmovbe
sbb
cltd
push
sub
lds
push
pop
push
sbb
inc
insl
imul
inc
push
pop
ret
dec
sbb
push
and
inc
sqrtps
dec
sub
push
push
push
add
movsl
dec
popf
je
ret
fcmovbe
dec
push
mov
dec
rolb
in
push
arpl
gs
es
xchg
sub
in
lock
rcll
inc
mov
call
inc
enter
push
xlat
jecxz
cmpsl
repz
add
call
add
sub
dec
or
inc
ror
pop
xchg
pop
fiaddl
add
and
insl
dec
pop
push
fsubrl
cmpsb
mov
push
movb
push
pop
fimull
out
test
pop
cltd
push
mov
add
pop
dec
pop
or
mov
daa
and
jecxz
pop
mov
inc
test
sub
cmpsl
jp
adc
test
addr16
fisubl
dec
out
decl
ret
mov
in
cmpsl
and
fcompl
ficoml
push
pusha
inc
inc
ret
add
fs
pop
cmpsl
dec
pop
ret
dec
loope
jb
fstp
or
dec
fildl
lock
or
in
je
dec
pop
les
mov
cmc
dec
bound
dec
pusha
aaa
push
pusha
xchg
mov
adc
inc
fcomps
ja
cli
out
fxch
ret
int3
inc
or
pusha
xchg
dec
dec
add
or
and
ret
pop
and
lret
rclb
iret
and
int
out
lds
lods
enter
push
inc
es
inc
jecxz
fcmovbe
pop
pop
adc
lods
test
inc
dec
dec
loop
or
lret
push
inc
push
fldl
inc
xchg
out
dec
lods
pop
dec
lret
dec
lret
push
es
enter
lcall
or
aad
rorl
mov
inc
dec
xchg
dec
add
int
mov
inc
mov
dec
mov
dec
add
mov
dec
fisubl
dec
sti
dec
arpl
add
inc
or
mov
xor
fcomps
mov
inc
adc
fcomps
and
push
inc
aaa
jno
stc
push
pop
inc
sub
add
jp
out
int
inc
lret
pusha
sub
cwtl
fcomps
jb
vcmpss
loop
and
test
in
popf
or
fiaddl
and
and
sub
adc
or
rorb
add
test
shl
lock
add
out
sbb
and
add
mov
mov
adc
adc
lods
pop
inc
out
mov
dec
inc
xchg
js
aam
xchg
aas
loop
daa
popf
jecxz
xchg
cli
call
dec
push
xor
cmp
dec
dec
push
repnz
call
push
add
jns
fdivrs
pop
cmp
fisttpl
daa
xor
push
pop
fldl
push
lret
add
lea
xchg
test
inc
rcll
lea
popa
pushf
jb
inc
add
not
push
pop
lods
repz
subb
fs
mov
inc
or
inc
fimull
in
ret
sbb
lods
test
shlb
sbbl
ret
inc
cmpsb
aaa
sar
lea
cld
andl
sbb
dec
push
je
lret
ja
fucomip
dec
lret
dec
cli
fcmovnb
je
lret
daa
cmp
pop
lret
push
sbb
jge
cmp
jge
lret
push
je
lret
daa
cmp
popf
lret
push
sbb
fmul
pop
push
mov
mov
cmpsb
popf
inc
fisttpl
dec
fstl
lea
sub
push
enter
jg
dec
adc
lret
std
lock
out
std
xchg
enter
jg
dec
adc
lret
push
lock
out
push
xchg
enter
jg
dec
adc
dec
ds
popa
data16
enter
lret
inc
or
push
lret
cli
jmp
cltd
inc
roll
ror
cmpsb
je
lret
push
mov
push
je
lret
ret
and
pusha
inc
inc
rolb
movsb
ficomps
inc
pusha
add
add
rcrb
gs
jecxz
sub
sahf
fistps
inc
dec
adc
mov
inc
dec
mov
mov
cwtl
fldt
cmc
les
sbb
push
fidivs
fiadds
fisubl
cmc
dec
and
enter
ret
dec
divl
add
inc
aad
enter
push
fstpt
dec
daa
push
dec
lock
sbb
aad
sbb
xchg
fildll
inc
sub
fidivrl
push
fstps
test
inc
adc
faddl
scas
iret
movb
mov
ficoms
push
inc
es
inc
data16
mov
sbb
scas
int
push
shl
fadd
inc
mov
lcall
leave
int3
je
mov
test
in
test
mov
cmp
pop
cmpsb
sbbl
fs
xchg
test
dec
out
shrb
fcom
je
sbb
lods
ret
dec
icebp
inc
int
int
push
dec
dec
inc
xor
hlt
xchg
fildl
lods
xor
jecxz
je
jbe
ret
mov
and
inc
jb
cmpsl
xor
mov
fnstsw
cmc
ret
fsubs
cmpsl
push
test
pop
js
mov
fisttpl
push
movsb
jne
adc
movb
mov
pop
into
add
decl
xchg
jmp
dec
or
fadds
xchg
fstl
jmp
pop
lods
mov
add
test
loopne
dec
shlb
add
sbb
int
ret
jmp
je
rcrl
aad
into
jo
je
ret
cmc
dec
and
ret
in
test
cmp
jb
movsl
dec
inc
fwait
lret
push
xchg
inc
mov
sbb
in
fchs
dec
push
inc
xchg
fidivrs
fistl
loopne
push
pop
fmul
loopne
repnz
cmpsb
aas
pop
int
and
into
enter
pop
bound
sbb
pop
pop
aam
pop
jb
jne
cmc
dec
and
sti
jg
jmp
ja
lds
out
int
fistps
dec
sub
inc
inc
lahf
daa
jmp
dec
into
inc
cmpsl
into
fadd
std
sub
js
push
mov
push
push
fbld
movsl
dec
cmpsb
lret
dec
mov
fisttpl
push
add
mov
fcomi
dec
and
fisttpl
ljmp
add
jno
mov
sub
mov
fcomi
dec
and
fstpt
ljmp
lret
cmp
ret
subl
inc
fcmovnu
dec
add
fldt
sbb
xchg
pop
cmp
pusha
sbb
test
or
push
jbe
fistl
mov
inc
decl
inc
push
inc
lds
add
loope
int3
fs
jns
pushf
fisubs
push
mov
jg
dec
xor
popa
and
nop
loope
sbb
subb
ja
inc
push
pusha
sbb
mov
in
xlat
mov
and
loope
push
ret
mov
pop
xchg
mov
sbb
dec
lret
push
sbb
sbb
push
push
jp
bound
mov
mov
pop
daa
pop
pop
or
inc
or
rorl
fmulp
addl
dec
rcr
repz
retw
out
mov
fiaddl
decb
mov
mov
loope
xchg
icebp
dec
shlb
int
inc
push
push
and
mov
pop
jecxz
push
cmp
or
mov
mov
in
and
cmp
and
bound
inc
in
inc
inc
adc
inc
sbb
jns
popa
jb
popa
pop
aas
mov
rcl
je
push
sbb
mov
cld
dec
and
fdivl
rcl
repz
rorb
rcll
lods
test
shlb
push
dec
adc
push
pop
insl
shlb
lock
pop
sub
rcl
sbb
or
push
rclb
dec
adc
jbe
rcrl
aam
or
dec
push
lahf
loop
jmp
or
dec
dec
add
mov
pop
ja
out
in
lret
jbe
lds
inc
mov
sub
ret
add
jbe
pop
mov
mov
ja
sar
cld
push
cld
dec
add
add
popa
retw
add
push
mov
dec
xchg
lea
fsubl
fistps
enter
bound
pop
jbe
xchg
cmpb
ficoml
fsubrl
loop
pop
fmul
pop
mov
mov
aad
loop
ret
test
loop
add
inc
movb
aad
pop
ret
ret
lds
loopne
mov
sub
arpl
dec
arpl
lock
loop
push
aad
sub
push
ret
cmpsl
dec
lret
sbb
mov
repz
dec
pop
jecxz
push
add
dec
sbb
hlt
and
dec
sub
das
lds
out
addr16
mov
cld
enter
out
cwtl
lds
push
out
cwtl
lds
push
out
sbb
jge
push
adc
xchg
shl
dec
push
fdiv
pop
add
inc
pusha
dec
ret
xchg
pop
jno
jmp
dec
lods
je
fisubl
inc
into
push
inc
dec
daa
jg
jg
dec
mov
mov
inc
in
jmp
dec
into
inc
shl
int
js
fcomip
dec
dec
fwait
nop
loope
aam
jmp
call
push
shl
push
daa
nop
loope
mov
cmp
testb
mov
outsl
daa
jno
cmpsl
xchg
loope
dec
add
add
loopne
pop
or
pop
cltd
pop
push
popl
int3
daa
pushf
fbld
or
and
pop
dec
pushf
mov
pop
mov
adc
inc
test
jmp
dec
dec
test
lds
fistpll
dec
adc
daa
lret
jmp
ja
push
movsl
rcrb
daa
mov
pop
cltd
das
loope
dec
mov
jmp
fisttpll
inc
call
daa
and
pusha
jns
daa
lds
xlat
inc
cltd
mov
out
jmp
sub
mov
xchg
loope
dec
add
loope
in
xchg
mov
sbb
loope
mov
lret
jmp
cltd
pop
pushf
mov
sbb
loope
mov
cltd
mov
and
mov
inc
ja
sub
nop
mov
fcmovbe
sbb
gs
inc
jmp
lods
pop
das
cmp
push
loope
mov
cmp
xlat
push
loope
in
jmp
sub
lret
gs
dec
and
lret
loope
int3
inc
xor
sub
movsb
jne
das
cmp
dec
nop
dec
nop
dec
nop
dec
nop
dec
add
gs
iret
inc
daa
lret
xchg
stos
rorb
lds
aam
dec
add
mov
xorl
lret
push
enter
in
loopne
out
dec
push
inc
dec
sarl
pop
pop
xchg
dec
inc
loopne
rclb
inc
inc
imul
push
dec
mov
jmp
dec
into
dec
mov
rorb
leave
cmp
dec
fisttpl
jbe
out
dec
dec
or
ficoms
shlb
and
dec
into
dec
push
jns
dec
shl
pop
repnz
xchg
repnz
push
ror
lods
mov
je
dec
pop
loopne
xchg
das
dec
stos
jecxz
dec
jns
push
xor
dec
pop
adc
lret
xor
jg
xchg
cmp
mov
push
das
and
adc
dec
lea
pop
js
dec
pop
xor
sahf
inc
movsb
push
inc
mov
cmpsl
sarl
out
push
push
push
inc
push
je
aad
inc
inc
dec
sbb
aad
insl
jns
test
dec
fdivs
dec
int3
enter
add
mov
mov
dec
shlb
sbb
inc
repnz
jo
int
out
dec
sub
push
test
lea
ret
outsl
test
fmuls
add
xor
stos
dec
into
dec
push
mov
dec
jmp
adc
lds
sbb
inc
lock
dec
mov
inc
rol
pop
dec
sbb
ret
scas
pop
adc
fidivrs
cmp
insb
or
stos
dec
mov
loopne
inc
and
mov
inc
inc
inc
jecxz
mov
jo
add
pop
adc
loopne
inc
insb
stos
inc
mov
inc
out
inc
inc
ret
sbb
and
movb
dec
push
fdiv
pusha
shl
movl
pop
push
lds
jp
rorl
push
into
test
sub
mov
hlt
pop
sub
lods
sbb
add
hlt
pop
outsl
int
inc
lret
sti
dec
arpl
push
mov
das
cmp
dec
sub
cmp
dec
mov
dec
lret
jns
push
or
arpl
sqrtps
iret
xorl
dec
xchg
inc
lock
jns
push
pop
leave
push
pop
lahf
mov
daa
or
cli
daa
pop
push
out
dec
push
pop
dec
decb
outsl
dec
and
addr16
and
repz
inc
mov
xchg
ja
dec
sahf
out
or
dec
sbb
dec
nop
dec
out
mov
lds
pop
or
out
in
or
daa
dec
or
out
xchg
sub
or
out
xchg
sub
sbb
push
mov
pop
mov
push
jbe
rorl
test
out
outsl
lds
pop
dec
pop
push
addr16
pop
loop
repnz
jecxz
xchg
movl
dec
or
ret
pop
call
call
inc
loopne
or
test
dec
or
in
dec
es
and
inc
inc
imul
inc
pop
fcomi
pop
inc
popa
inc
xchg
inc
sub
pop
inc
push
dec
test
dec
stos
test
inc
cmpsl
sub
pusha
int3
add
push
inc
cmpsb
push
fimull
dec
dec
popf
std
sbb
xchg
enter
xor
test
scas
inc
clc
dec
adc
or
fbld
ja
aas
outsl
shlb
enter
jns
dec
sub
pusha
push
enter
daa
mov
shll
enter
aas
sub
jmp
mov
dec
shr
ja
dec
sub
dec
add
test
push
or
jmp
dec
sbb
add
popf
push
mov
push
ficomps
mov
outsl
dec
and
lock
cmpsl
rclb
dec
inc
int3
inc
cmpsb
nop
fisubrl
push
and
pushf
or
mov
rolb
pusha
les
pop
mov
jg
sub
jge
fidivl
xor
dec
fimull
adc
fbstp
add
push
roll
imul
loop
push
mov
sbb
jmp
call
add
push
xor
push
pop
mov
jp
mov
int3
lret
jmp
in
lret
les
push
mov
dec
mov
dec
sbb
dec
pop
add
aaa
or
jmp
cltd
fisttps
ljmp
mov
cmp
dec
out
push
dec
push
or
lret
sbbb
inc
flds
xchg
push
mov
and
xlat
mov
daa
fcompl
inc
fcomi
rol
mov
and
add
sub
jg
xchg
cltd
sub
sub
iret
pop
and
pop
push
push
or
mov
sub
dec
pop
pop
push
lods
ds
push
dec
sarb
cmpsb
push
mov
fisttpll
add
lret
loopne
dec
jns
push
mov
sub
out
imul
rcl
cmpsb
in
fadds
ja
decb
or
cmp
popa
pop
inc
mov
dec
fiaddl
inc
addr16
shr
jge
fstpl
ffreep
dec
popf
imul
sbb
test
enter
popf
es
daa
cmp
push
pop
inc
inc
stos
js
sarb
xchg
pop
pop
in
dec
pop
or
mov
mov
dec
fcmovne
mov
dec
sbb
lret
jmp
or
iret
fsubl
test
inc
insl
leave
sbb
xchg
jmp
loopne
dec
adc
jne
outsl
mov
cmpsl
fcmovu
dec
cmpsl
sub
jmp
sub
or
mov
pop
aad
sub
addr16
push
adc
dec
push
fucom
out
jne
pop
lret
or
rclb
fimuls
jb
daa
push
jle
mov
sbb
dec
and
pop
je
dec
jns
pop
shrb
fisttps
mov
xchg
movsb
mov
iret
and
mov
or
dec
rorb
inc
loopne
sub
push
mov
aad
mov
fs
cmpsl
push
rclb
shrb
shr
sub
xchg
dec
rol
stos
push
rcrb
aad
inc
or
pop
inc
add
call
dec
sub
xchg
sub
repnz
push
pop
pop
sbb
daa
sub
inc
sar
das
fmull
fnstcw
xchg
ret
pusha
xchg
xchg
inc
xor
mov
dec
or
cmp
push
lret
inc
xchg
fcompl
mov
push
leave
enter
ret
pop
push
adc
pushf
push
out
mov
sbb
and
mov
inc
or
push
pop
out
fnclex
jne
bound
clc
pop
xchg
pop
pop
inc
or
inc
es
rcrb
mov
nop
and
push
mov
roll
fisttpll
dec
xchg
dec
push
pop
xor
shl
pop
inc
fisttps
arpl
into
jno
push
cs
mov
enter
sbb
ja
enter
xlat
insb
sbb
push
dec
cld
insb
movsl
lea
inc
or
rorb
sbb
pop
lret
inc
les
enter
push
popa
and
inc
dec
lods
dec
ret
stos
shrb
dec
dec
ret
repz
and
mov
popa
or
in
push
in
push
in
push
or
outsb
or
popa
jp
push
sub
dec
popa
sub
repnz
adc
inc
rorb
ja
push
fldt
out
insl
and
push
xchg
icebp
test
rorb
pop
dec
dec
and
lods
pushf
inc
dec
sub
dec
into
dec
mov
inc
out
int
mov
xor
push
sarb
enter
jns
pop
pop
mov
mov
leave
fcmovb
mov
in
andl
test
lret
mov
in
adc
push
cmp
pextrw
andb
jmp
call
dec
loop
lret
lods
clc
mov
inc
cmpsl
in
push
fistl
std
adc
rcll
jno
pop
rolb
out
pop
add
lods
or
sub
div
loop
push
pop
lea
push
push
push
movsb
rorl
movsl
push
xor
dec
jle
test
lea
jne
pop
sub
pop
in
push
and
ljmp
xor
pushf
push
mov
inc
jb
pop
jb
in
inc
fmuls
pop
dec
or
dec
push
enter
out
inc
mov
pop
in
daa
lret
lea
mov
push
push
enter
dec
dec
push
mov
ret
or
pop
mov
dec
pop
into
push
or
or
mov
sarb
push
sub
sbb
pop
dec
cld
out
scas
fadd
ret
sub
sub
sub
cltd
adc
fs
ljmp
dec
sub
fxch
dec
push
mov
inc
lea
jmp
dec
dec
das
xor
cmp
addr16
pop
jns
rol
dec
sbb
pop
dec
dec
dec
xor
xor
cld
rclb
jno
enter
enter
push
outsl
mov
dec
cmp
dec
and
rcrb
inc
lea
mov
into
fcmovu
or
dec
sbb
ja
inc
dec
scas
push
mov
inc
fisttpl
data16
sub
ja
movb
xorb
dec
and
into
xorb
fs
or
out
int3
in
dec
sub
out
int3
inc
scas
dec
ljmp
jno
inc
in
jmp
sub
ror
js
cmp
scas
dec
mov
rol
in
push
arpl
in
add
mov
xor
les
dec
jb
push
jmp
sub
xor
dec
cld
rclb
rolb
xorb
jb
sub
dec
jo
rorb
aam
shrl
filds
pop
enter
jp
loopne
clc
mov
popf
pop
and
nop
mov
cmp
aad
je
mov
cmp
jns
shl
dec
and
enter
add
mov
inc
cmpsl
sarb
sub
rcrb
movsb
pusha
mov
rol
dec
ja
fdivrl
adc
fisttpl
test
lea
pusha
sub
adc
mov
in
xlat
lea
out
xor
push
or
mov
rcl
dec
pop
mov
into
mov
rcrb
loope
push
jecxz
dec
pop
inc
inc
bound
loopne
in
daa
and
repz
daa
inc
jno
jmp
dec
cld
jno
pop
inc
pushl
lock
add
in
dec
adc
fimuls
addb
int
sub
dec
xchg
out
dec
scas
inc
into
sbb
sbb
push
xor
dec
imul
clc
push
push
shrb
adc
xchg
push
mov
aaa
daa
rclb
push
dec
sbb
rcl
and
aaa
or
sub
out
rclb
imul
pop
dec
dec
jae
into
rcr
js
fsubs
sbb
rorl
into
lea
gs
into
add
pushf
aam
incb
push
lock
hlt
inc
les
xchg
stos
add
pop
out
or
popa
pop
sub
dec
call
es
cmpsl
sub
repz
enter
les
rclb
fmuls
cmp
fdivl
pop
out
ret
push
shl
push
fcmovu
incb
push
loop
lret
pop
push
pusha
inc
pop
ljmp
aam
bnd
scas
push
push
rcrb
push
rcrb
ret
negl
out
jbe
mov
ror
loopne
push
dec
sub
dec
mov
rol
shrl
icebp
sub
loopne
icebp
jno
fsubp
adc
pop
dec
adc
aam
dec
mov
loop
mov
pop
ret
ficoml
mov
adc
test
fstpl
mov
and
aaa
fwait
inc
fcmovu
push
leave
sbb
add
cli
out
sub
in
mov
inc
in
sbb
sbb
insb
xor
in
iret
inc
inc
rcr
loop
repz
push
fsubr
ffreep
pusha
pop
sbb
fcoms
mov
jb
shll
pop
cmp
inc
jbe
push
and
mov
fcmovnu
and
out
outsb
rolb
dec
repnz
mov
add
test
adc
xor
dec
xor
pop
inc
push
or
in
push
btr
jae
inc
lret
jmp
rdpmc
push
adc
fxtract
push
loop
and
pop
xor
psrld
int
mov
pop
fcmovbe
push
pop
sbb
mov
repz
ret
repz
push
dec
fsts
sbb
loopne
lea
test
xor
aad
push
in
lret
pop
push
test
sbb
inc
xor
jmp
mov
xchg
dec
mov
jbe
push
mov
popa
aam
mov
dec
cld
or
iret
jp
fs
dec
push
hlt
rorb
mov
inc
addr16
enter
dec
push
mov
push
cmpsb
mov
rorl
addb
enter
in
mov
int
and
rorb
inc
xor
inc
shl
pop
enter
or
adc
cmpb
mov
sarl
add
and
push
jmp
mov
mov
faddl
or
xor
push
sbb
sbb
dec
pop
pop
and
and
jne
jmp
jmp
push
jne
shlb
pop
or
dec
es
insb
gs
hlt
xchg
jmp
sub
push
addl
aaa
or
push
arpl
aas
dec
leave
dec
dec
push
je
ror
dec
insl
add
inc
fisttpll
xchg
push
jmp
add
cwtl
dec
roll
ror
call
inc
in
into
dec
push
js
push
cmpsb
mov
xchg
leave
inc
pop
lock
call
dec
adc
pop
stos
mov
rol
or
cmc
mov
call
dec
and
inc
push
push
pop
sub
add
add
xchg
push
nop
stos
in
dec
pop
cmp
aas
pmovmskb
int3
daa
fs
lock
addr16
out
ss
aam
ror
call
mov
cmp
sub
pop
push
push
pop
stos
or
push
fs
jbe
jne
in
and
push
insb
jle
stos
inc
ret
cmp
jmp
sub
push
jbe
dec
ret
jmp
and
push
je
dec
jns
dec
or
inc
std
inc
in
and
mov
push
ficoml
xchg
mov
pop
rorl
rcll
ficompl
dec
adc
fwait
pop
repnz
inc
out
mov
fstpl
inc
pop
push
mov
fstl
pusha
push
sbb
ficompl
adc
loope
sbb
mov
es
mov
push
aad
sub
fildl
bound
xchg
push
dec
icebp
shlb
dec
sbb
or
popa
pop
jp
lret
dec
inc
inc
jns
inc
or
dec
jmp
stos
rorb
mov
pusha
pop
mov
lock
sbb
mov
out
inc
push
das
mov
pop
mov
push
js
inc
ja
nop
mov
push
je
jmp
xor
lods
inc
into
cli
insb
jg
jecxz
fisttpl
das
cmp
pusha
push
mov
aad
je
jp
mov
cmc
dec
and
pusha
xchg
ja
pop
fdivs
dec
or
sbb
sbb
setnp
xchg
push
pop
dec
insl
xchg
enter
out
fwait
dec
fisttpl
nopl
dec
in
mov
xor
roll
orb
fistpll
dec
cli
ljmp
ja
dec
add
push
push
and
mov
or
push
dec
jg
dec
je
push
call
dec
lock
or
sub
dec
dec
sti
push
scas
add
lret
jmp
pop
add
adc
dec
push
or
sbb
lods
push
xlat
push
inc
fisttpl
cmpsl
cwtl
inc
js
push
ja
pusha
jl
xlat
cmp
test
pop
lock
push
dec
imul
lock
inc
fcomps
mov
mov
xlat
inc
add
inc
mov
ficompl
js
test
sub
int
leave
push
sar
in
xchg
cwtl
pop
loopne
cwtl
xchg
insb
jmp
push
jmp
rcrb
pop
inc
sub
int
jp
jns
push
lds
sub
movb
or
dec
test
push
dec
sbb
repz
leave
in
push
in
sbb
jb
dec
fisubrl
mov
clc
xchg
or
stos
in
enter
dec
sti
lret
xchg
sub
push
sbb
movsl
es
rcrl
ljmp
adc
or
fimull
sub
cmp
push
cmp
in
lret
ja
sti
dec
and
xchg
sub
pop
stos
pop
ficompl
pop
inc
imul
sbb
popf
jae
ret
mov
dec
in
inc
jns
popa
movsl
es
inc
dec
jmp
and
int3
je
dec
jns
shl
lret
in
dec
add
in
jecxz
lods
test
inc
leave
jmp
in
int
pop
fisttps
dec
dec
or
dec
sbb
jmp
int
sub
lret
fimull
or
dec
sbb
loop
test
dec
pop
dec
add
sub
dec
push
into
shlb
insb
test
iret
in
repz
sarl
lock
and
lods
dec
jns
sbb
insb
dec
pushf
or
sbb
dec
in
or
xchg
pusha
inc
inc
roll
or
jge
je
dec
pop
shl
inc
aas
pop
inc
mov
mov
leave
mov
dec
xchg
push
mov
sub
sub
in
daa
loopne
sbb
dec
push
jns
lret
mov
inc
fiaddl
adc
lds
out
ror
int3
mov
lea
push
jp
enter
out
push
ret
call
ret
push
jp
call
fcompl
cwtl
pop
lea
push
jp
call
ficompl
push
inc
pusha
enter
jns
xlat
aas
inc
fdivl
fnstsw
pop
pop
sahf
aam
outsb
pop
loop
aas
outsb
fstps
lea
pop
push
inc
sub
neg
mov
neg
mov
neg
mov
aam
enter
in
pop
dec
nop
and
loopne
cmpsb
mov
sarb
xor
dec
push
loop
or
push
inc
loop
ljmp
js
loope
lds
dec
into
push
repnz
inc
jecxz
int3
inc
push
lret
inc
add
lret
dec
fldenv
enter
mulps
ficompl
dec
call
pop
add
shrb
jb
fsubs
fcmovu
mov
int3
rorb
adc
push
loop
dec
xorb
sbb
push
dec
into
inc
aad
dec
arpl
ret
inc
cmp
adc
jp
movsb
cmp
fdivrs
mov
pushf
rclb
push
pop
imul
orb
movsb
sarl
mov
mov
cltd
nop
jns
shrl
lahf
xchg
cmpsl
mov
fcomp
jae
add
in
je
les
stc
arpl
fwait
int
sbb
dec
icebp
inc
lret
int
dec
mov
pusha
nop
or
dec
dec
arpl
adc
add
mov
ret
and
leave
repz
aas
in
dec
inc
jecxz
nop
lea
dec
outsl
mov
es
pop
cmp
lea
stos
movsb
fists
cmc
dec
outsb
dec
mov
in
dec
jns
inc
pop
fdivrl
aam
popa
pusha
and
test
shlb
lret
aam
shl
faddl
fstpl
es
pop
and
ljmp
bound
cmp
mov
popa
or
sahf
pop
xchg
ror
and
ljmp
rcrl
mov
imul
push
data16
rcll
lcall
loopne
pusha
pop
and
mov
mov
aaa
fwait
dec
push
fisubrl
jecxz
push
daa
cld
loope
inc
mov
pop
aad
je
push
popa
jns
push
mov
shll
mov
fcomi
pop
inc
push
loop
pusha
push
jl
cmp
xchg
lods
mov
out
lret
dec
push
sbb
in
dec
push
sbb
dec
jns
ror
dec
push
mov
push
pop
shrb
or
rcl
cmp
aam
leave
imul
adc
push
pop
push
push
pop
pop
xor
jns
ror
dec
push
jns
shlb
ret
jmp
scas
cmp
jnp
push
int3
imul
dec
jnp
and
fwait
mov
and
mov
mov
mov
call
rcrb
dec
sub
inc
out
fisttpl
fistpl
sub
dec
pop
je
pop
pop
rcl
sti
xor
push
inc
sti
hlt
int3
or
dec
and
int3
lods
inc
push
in
test
js
ret
cmp
fisubrl
dec
adc
loopne
push
ljmp
mov
je
push
lods
loop
push
jl
rclb
out
rcrb
pop
lret
popa
dec
cli
jmp
jmp
or
dec
enter
inc
push
pop
clc
push
lret
push
enter
jb
and
pop
das
sbb
sub
mov
inc
fadds
pop
aad
loop
pop
addr16
int3
out
faddl
iret
imul
pusha
stos
dec
lock
and
aam
jne
fistps
jl
bound
popa
add
jmp
fisttps
adc
sub
jmp
dec
outsb
pop
clc
rclb
mov
xor
pop
sbb
inc
mov
xchg
inc
mov
xchg
inc
mov
pop
sbb
jbe
inc
sbb
and
inc
aam
jmp
sub
into
or
sbb
inc
jg
dec
adc
xor
xchg
xchg
dec
sub
cwtl
mov
and
nop
pop
loopne
imul
or
jecxz
in
fisttps
cltd
mov
pop
inc
imul
aam
inc
xchg
inc
es
imul
pop
loop
addr16
xlat
jge
push
sub
push
dec
rcrb
filds
inc
into
lret
fldl
inc
mov
sbb
int
inc
inc
lret
push
pusha
popf
or
lods
in
and
dec
mov
push
cmp
ret
cmp
std
inc
daa
in
shrb
lock
and
cwtl
out
fildll
mov
in
inc
push
cmpsl
out
int
push
adc
ret
or
out
in
enter
dec
dec
mov
int3
ror
mov
push
sbb
loopne
hlt
dec
pop
test
rcrl
int
push
frstor
pop
sub
and
mov
inc
lret
inc
insb
add
push
dec
push
std
dec
iret
dec
je
int
dec
inc
or
int
push
dec
dec
dec
cmp
shll
push
mov
mov
jmp
out
ds
pop
iret
or
dec
rorl
adc
push
pop
push
dec
dec
dec
or
loopne
pop
sub
sub
pop
test
add
sub
jle
loopne
stos
int
dec
push
je
fimuls
cmpsl
mov
int
dec
push
pop
into
jno
enter
pop
sbbb
pop
mov
jbe
stos
push
mov
nop
mov
jnp
adc
cwtl
add
iret
mov
mov
pop
mov
scas
iret
into
dec
push
adc
pop
ret
dec
xchg
fdivrl
stos
ret
and
cltd
or
push
pop
rcr
mov
call
mov
inc
imul
les
cmpsb
mov
adc
es
dec
sbb
test
fimull
xchg
enter
mov
add
je
loopne
cwtl
xchg
fidivs
ret
fsubrl
adc
test
fdivs
mov
daa
ret
fistps
test
or
jecxz
inc
aaa
adc
loopne
push
insl
inc
inc
mov
xchg
fisttpl
enter
pop
jmp
cwtl
dec
sbb
mov
fisttpl
enter
pop
js
pop
ja
adc
push
dec
push
ds
pop
mov
popa
shll
out
dec
ja
outsb
ret
dec
outsb
ret
push
insl
mov
jbe
push
sbb
cmpsl
fmulp
ja
mov
push
nop
mov
jnp
das
pop
ret
mov
lret
out
ret
pusha
ds
pop
mov
fucomip
fadds
cmpsb
sbb
jp
cli
jno
inc
mov
cmc
dec
and
ffree
stos
fstp
dec
lods
add
or
dec
decb
popf
xchg
and
xor
ret
ljmp
into
inc
sbb
aam
pop
fldl
pop
and
dec
or
push
lods
scas
pop
dec
scas
inc
inc
lret
scas
js
pop
nop
dec
iret
shll
mov
lahf
sbb
cli
lds
dec
dec
js
and
or
xor
out
mov
aam
inc
out
mov
rorb
dec
lea
adc
adc
jmp
dec
outsb
adc
rcrb
push
nop
mov
jnp
mov
out
jmp
lods
or
shlb
popa
mov
cli
push
rcl
mov
shrb
stos
leave
pop
mov
add
sarl
pop
dec
pop
inc
inc
mov
sbbl
fs
jecxz
jo,pt
jmp
int
push
jo
dec
pop
push
leave
pop
stos
inc
rorl
rcll
sub
loopne
dec
mov
xor
push
push
mov
mov
repnz
outsl
movl
dec
lods
pop
inc
mov
fwait
bound
push
fstpl
pop
inc
fisubs
les
adc
pop
cltd
cmpsl
mov
cltd
iret
mov
dec
sbb
inc
shrl
add
call
leave
jecxz
add
inc
jnp
les
push
jne
fistps
lock
iret
lock
jb
movsl
dec
mov
pop
push
pop
or
push
pop
repz
int
int
push
popa
loope
in
repnz
push
es
adc
inc
not
out
add
pop
cld
xor
pop
stos
push
cmp
int
push
ret
cli
jo
push
fcmove
lods
pop
lds
jno
xor
mov
push
fmulp
xor
fisttps
fdivrs
jle
dec
mov
ror
mov
pop
sbb
shll
mov
sub
dec
sub
rclb
in
sub
push
icebp
mov
insl
cmc
dec
and
jmp
and
adc
inc
in
dec
lret
iret
xchg
dec
sub
shll
fisubrl
sbb
cmp
pop
xor
dec
dec
xor
shll
fsubl
pop
mov
ret
sar
outsl
iret
xor
inc
fstl
hlt
push
int
bound
push
inc
flds
inc
lret
pushf
push
lret
and
push
adc
mov
jne
jmp
popa
leave
mov
leave
das
scas
int
mov
popa
mov
ret
push
mov
mov
pop
jmp
add
xchg
sub
popa
leave
loopne
repnz
sub
add
fmulp
shlb
pop
sub
dec
test
lds
out
sbb
inc
sub
push
std
pop
jbe
repnz
cmp
in
jecxz
jmp
cmc
mov
and
dec
push
jp
push
jb
or
ja
je
mov
mov
sbb
dec
dec
addr16
pop
mov
lcall
insb
jecxz
daa
pop
dec
outsb
arpl
ror
test
cmp
push
lea
inc
stos
adc
cmpsl
sub
dec
sahf
pushl
mov
fildl
inc
and
or
addr16
dec
dec
lods
jecxz
daa
rorb
ret
mov
lock
jg
dec
mov
inc
pop
pop
pop
rcrb
jmp
dec
cld
jecxz
into
in
out
lock
sbb
ficoms
push
add
inc
dec
jp
out
lds
or
pop
sub
pushl
pop
sub
or
dec
sbb
or
jne
pop
lret
enter
cmp
into
cwtl
dec
lods
inc
push
out
pop
pop
nop
mov
jnp
sub
pop
push
fs
mov
ret
mov
pop
pusha
mov
lcall
push
sub
push
test
ret
data16
push
stos
in
dec
push
sarb
pusha
dec
es
lock
data16
popa
push
dec
mov
push
mov
pop
xchg
sub
push
les
lods
fcomp
test
adc
out
pop
in
inc
sbb
cmp
in
je
ret
lds
ds
rorl
dec
in
pop
pop
repnz
add
ds
pop
mov
ja
pop
lahf
sub
fcomp
cmp
and
mov
add
sbb
in
adc
mov
ror
xchg
pop
in
inc
inc
rcr
dec
mov
inc
cli
cmpsb
lods
push
push
js
push
out
gs
pop
sbb
insb
je
rol
fiaddl
sti
test
mov
mov
adc
sbb
or
shlb
lods
push
cmp
incl
mov
cltd
aam
lods
stos
push
mov
jmp
aad
fildl
mov
xchg
push
rorl
daa
xchg
add
aad
jne
pop
ja
pop
fdivl
ja
push
rorb
jmp
sub
mov
pop
fsubp
fmull
inc
iret
mov
es
jbe
pop
push
sub
inc
jecxz
or
pop
enter
iret
push
je
pop
adc
push
mov
repnz
pop
loop
or
cld
fisubrs
ljmp
sti
push
add
jno
inc
outsb
shl
sarl
add
cmpsl
loop
mov
push
shlb
push
sbb
push
movsb
ret
lods
ret
dec
es
push
iret
es
push
iret
pushw
pushw
dec
dec
xchg
icebp
add
int
inc
inc
pop
sbb
add
call
out
movsl
dec
mov
aam
or
fcmovb
dec
add
inc
and
inc
and
xbegin
rorl
arpl
xchg
lea
insb
push
mov
dec
out
xchg
sarb
inc
into
inc
push
fsubr
inc
sub
jb
push
jns
in
jecxz
mov
pop
loope
orb
jecxz
por
cwtl
dec
xor
push
pop
fsubl
dec
jne
dec
popf
dec
adc
push
cmp
das
adc
pop
into
call
cltd
paddq
call
ja
insl
dec
pop
jne
pop
cmc
dec
and
push
jmp
adc
dec
scas
dec
sti
or
sub
pop
sub
lahf
adc
and
insl
mov
dec
mov
leave
fisttpl
or
pop
mov
stos
and
jg
dec
xor
leave
mov
mov
push
stos
inc
js
mov
pop
fisttpl
pop
add
loopne
pop
push
test
test
pop
into
dec
push
adc
jne
pop
ret
ret
pop
leave
jmp
mov
dec
adc
into
dec
push
mov
leave
out
popa
fimull
scas
fimuls
dec
cli
jmp
cld
ficomps
lods
mov
mov
and
push
mov
movsb
inc
lds
fisttpl
xchg
rol
sbb
inc
into
lds
xlat
mov
imul
adc
lods
mov
loopne
je
fnstsw
mov
dec
sub
stos
into
repnz
sbb
sti
lret
fnsave
sbb
mov
insl
pop
pop
push
filds
lret
ret
dec
sbb
inc
fiaddl
mov
xor
popa
fstpl
push
dec
out
push
int
repz
or
push
fisubrl
in
iret
add
cmp
cwtl
iret
ja
add
mov
int3
xor
dec
fldcw
loop
dec
sub
dec
inc
mov
push
fadd
clc
mov
push
jb
inc
int
pop
nop
int3
adc
popa
jle
or
fdiv
push
test
mov
dec
mov
xor
push
pop
pop
pop
mov
loope
pop
add
pop
stos
rcrb
pop
repnz
setne
or
dec
mov
mov
and
push
dec
dec
ljmp
fimull
jne
pop
xor
sub
cwtl
dec
or
enter
dec
adc
push
xchg
pop
in
repnz
test
fs
aad
vcmppd
lock
cld
in
mov
cmp
pop
add
inc
mov
pushf
pop
sub
out
aad
das
dec
push
imul
shrl
jo
shl
dec
and
push
mov
ret
je
push
dec
sbb
inc
addr16
pop
pop
mov
cmc
xor
dec
popa
jecxz
dec
xor
test
jp
dec
stos
and
xlat
xor
adc
dec
pop
loop
sbb
sbb
dec
insl
cmpsl
scas
fistpll
lret
jp
sub
fstps
pop
subb
inc
inc
dec
lret
int3
ret
push
pop
fwait
leave
sbb
popf
cmpsl
lret
ret
in
jmp
jmp
dec
dec
sti
jmp
pop
pop
push
imul
cmp
or
add
or
mov
iret
ret
lret
ja
jle
fnstcw
lret
inc
push
dec
mov
inc
cmc
int
shll
pop
shrb
jmp
lods
fsubr
inc
inc
shll
xchg
rcl
dec
loopne
std
xchg
pop
pushf
cmp
js
cmp
js
ds
jbe
leave
cmp
pop
cmp
loopne
jg
inc
pop
mov
jmp
dec
push
xchg
dec
push
cmc
fucom
sub
pushf
jns
pop
dec
pusha
std
add
mov
jmp
les
imul
mov
mov
inc
adc
pop
loopne
dec
jb
mov
subb
xor
jle
jo
mov
sahf
mov
sbb
dec
dec
lods
xchg
fisttpl
dec
lods
pop
inc
pusha
mov
pop
inc
pop
jmp
in
pop
rorb
ret
xchg
adc
es
dec
push
enter
pop
jno
add
shl
dec
sub
sub
in
daa
dec
dec
rolb
sub
fldl
shr
pop
rcrb
inc
das
cmp
shll
dec
icebp
mov
inc
lods
adc
xchg
outsb
insl
jmp
outsl
dec
jbe
mov
inc
jle
lds
call
cli
jo
pop
cli
sbbl
shrl
mov
into
mov
int
sub
inc
les
aaa
mov
pcmpeqw
pop
fdivr
test
xor
jb
and
inc
inc
push
xor
mulb
inc
lods
jne
xchg
out
int3
push
push
inc
enter
rorl
jp
xchg
mov
out
and
das
push
loope
add
inc
and
sub
les
dec
and
test
push
scas
sahf
out
pushf
dec
xchg
outsb
cs
xchg
jns
dec
push
in
test
and
dec
dec
inc
dec
lods
test
into
cmp
pop
mov
loope
mov
sbb
jae
out
xchg
push
inc
outsb
ja
outsb
dec
add
dec
in
jecxz
test
daa
xlat
ret
mov
adc
fidivrs
popl
push
ret
sbb
fidivrs
dec
mov
dec
pop
pop
xchg
jns
fimuls
arpl
mov
stos
clc
leave
mov
xchg
fldcw
addr16
mov
fcmove
xor
fidivl
dec
sbb
shrb
iret
push
pusha
dec
mov
daa
ret
ret
aad
mov
jmp
mov
js,pn
xlat
add
gs
or
mov
addb
ret
ret
xor
clc
push
test
dec
dec
filds
jecxz
dec
into
rorb
fs
ja
add
push
ret
push
mov
mov
movsl
xchg
push
pop
loopne
stos
jb
pop
add
leave
adcl
ror
mov
inc
add
mov
jmp
add
or
dec
or
js
push
inc
add
dec
ljmp
sahf
push
clc
push
rcrl
mov
add
sbb
mov
and
xchg
add
mov
pop
xor
push
out
test
adc
sub
inc
cmpsl
lds
ror
add
mov
mov
iret
fcmovb
loopne
jo
repnz
rcrb
cld
daa
inc
fimuls
lds
mov
add
iret
in
iret
dec
xor
outsb
fstl
fucomp
fisttpll
or
testb
adc
xchg
push
or
dec
repnz
mov
icebp
ss
scas
test
dec
in
sbb
leave
add
addr16
daa
inc
sub
jno
repnz
fwait
bound
add
pop
outsb
scas
jecxz
lret
and
sbbl
push
dec
insb
adc
lret
push
cmc
roll
pop
sub
or
stc
dec
adc
scas
dec
dec
imul
lret
aam
sub
lret
push
sub
int3
movsb
jbe
jb
mov
inc
inc
mov
xchg
out
push
test
rcrl
je
adc
xchg
iret
push
dec
dec
dec
mov
push
test
enter
fptan
xchg
stc
push
push
outsl
or
pop
lock
push
into
addr16
inc
xlat
pusha
xchg
sbb
cld
mov
inc
inc
cmpsb
jb
mov
sbb
notb
adc
aam
adc
mov
sub
data16
add
mov
xor
imul
sbb
scas
in
mov
sbb
mov
adc
daa
fs
sahf
dec
jb
or
es
inc
lock
dec
add
push
push
movsb
dec
shll
mov
iret
mov
jo
ljmp
test
gs
out
dec
out
and
mov
repz
cld
mov
out
imul
fiaddl
dec
sbb
pop
nop
lods
push
cld
push
sar
push
mov
ljmp
xor
int
dec
pand
mov
subb
js
rorb
xlat
inc
fwait
out
adc
lcall
popa
jne
dec
sbb
out
add
pop
dec
sub
jae
add
aam
adc
ljmp
cmp
sahf
aad
enter
mov
out
enter
mov
jle
adc
mov
into
std
mov
push
dec
loopne
xor
ret
test
test
pushf
dec
push
ficompl
repnz
cmp
scas
lret
xchg
out
lock
lret
push
loopew
loop
outsb
js
xor
mov
and
iret
das
push
inc
push
push
dec
std
outsb
enter
sub
pop
popa
sub
or
ljmpw
in
xor
dec
fimull
dec
cmp
enter
pop
dec
scas
fstl
hlt
lret
cmp
mov
mov
sub
imul
bound
or
sbb
push
jle
dec
lret
ret
add
add
dec
sbb
stos
and
popa
cld
aad
inc
les
dec
add
aad
fisubl
faddl
jb
push
lret
dec
inc
dec
add
pop
repnz
addr16
dec
pop
std
jb
aad
mov
push
lret
ficomps
test
iret
xor
js
jmp
dec
and
in
mov
enter
pop
shll
cld
dec
lret
dec
push
ds
sti
enter
inc
out
adcb
sbb
jp
xor
decl
es
mov
jo
nop
dec
or
fisttpl
clc
rcrb
push
cmp
shr
or
push
dec
xchg
sar
je
xor
sbb
hlt
pusha
in
sub
pop
push
scas
inc
dec
loopne
ror
mov
dec
inc
ficomps
mov
mov
dec
xor
lret
push
xchg
xchg
outsb
cs
das
mov
movsl
inc
sbb
jae
pop
mov
popl
dec
insb
imul
dec
cmp
inc
mov
fcmovne
iret
lods
inc
fcmovb
and
push
shr
sbb
adc
fadd
push
sub
xchg
insb
xchg
sub
inc
add
inc
into
sbb
test
add
push
xor
xchg
ret
dec
sub
out
mov
icebp
lret
xchg
or
lret
rolb
int3
sbb
lock
push
mov
or
pushf
sub
lret
notl
in
mov
fs
repz
dec
push
inc
mov
outsb
jae
dec
inc
push
pop
xchg
push
or
adc
xchg
shll
shlb
ret
jno
shl
ret
sbb
daa
loop
hlt
dec
jae
xor
outsl
xchg
sbb
sub
loopne
pop
pop
lods
or
mov
ss
push
shrb
push
dec
mov
pause
int3
sbb
cld
dec
lock
dec
scas
cli
adc
pop
aam
adc
sarl
push
in
lods
je
xchg
rorl
out
push
push
adc
and
int3
xchg
ret
lods
addr16
mov
pop
cmp
or
dec
mov
xchg
dec
xor
sub
in
adc
jb
sub
push
repnz
inc
dec
xchg
push
push
mov
fidivrl
xchg
xchg
fcompl
notb
xchg
add
fcompl
mov
mov
xorb
imul
sbb
push
mov
addr16
sub
pop
sub
push
fists
sub
cmp
inc
mov
xchg
sub
int3
into
add
add
or
inc
or
sbb
xchg
add
in
roll
fwait
ret
outsw
out
outsb
lods
dec
in
push
cmp
adc
pop
sbb
cmpsb
jmp
movsl
inc
and
sbb
cli
pusha
bound
or
stos
lret
jecxz
sbb
dec
or
pop
fildl
fucom
hlt
dec
nop
dec
or
mov
cld
dec
into
xchg
cs
jbe
or
iret
imul
or
ljmp
les
xchg
jo
inc
sbb
out
mov
or
cmpsl
cmpsl
rorb
test
or
bound
lea
call
test
lret
mov
in
ficompl
into
testl
addr16
ficomps
loop
mov
out
adc
enter
pusha
ret
dec
cmp
mov
xchg
sub
inc
adc
lods
mov
push
add
out
iret
add
cmpsb
ret
push
in
xchg
repz
mov
loop
imul
sub
or
sbb
mov
dec
push
sbb
push
mov
loopne
ret
mov
jbe
add
and
jb
jmp
add
xor
pop
out
cld
inc
scas
add
jae
jecxz
lock
arpl
nop
mov
in
dec
xchg
mov
dec
fcomps
sbb
or
daa
cmpsl
dec
out
leave
pop
sub
or
xchg
lret
inc
inc
leave
push
mov
testb
imul
outsb
int3
ficoms
jne
loope
add
sub
jb
xor
outsl
push
adc
mov
inc
pop
cmp
sub
cmpsl
stos
push
dec
dec
arpl
jge
int3
rorb
insb
add
hlt
inc
add
xchg
stos
dec
sub
or
push
inc
push
xchg
stos
pop
enter
pop
fs
inc
xchg
sbb
jecxz
outsl
xchg
cli
test
rorl
mov
dec
or
aas
jle
pop
test
jmp
sbb
dec
sub
pop
lds
call
sub
das
sbb
mov
push
add
inc
push
add
jecxz
ret
dec
imul
push
adc
nop
sub
ljmp
xchg
pop
repz
shl
aas
outsl
aas
sti
xlat
pop
call
or
inc
push
push
push
lea
inc
mov
mov
inc
mov
jge,pt
inc
inc
iret
subb
push
adc
mov
stos
xchg
scas
ljmp
mov
enter
push
sahf
pusha
xorps
or
dec
sarl
loop
sub
or
mov
sub
inc
iret
fsubr
xchg
push
sub
jmp
push
cld
enter
sub
or
stc
xchg
inc
jmp
enter
or
inc
cmpsb
xchg
and
test
les
xchg
loope
loopne
inc
gs
out
or
sbb
ja
shl
sar
or
pop
xchg
test
pop
push
sbb
inc
faddl
pop
mov
cs
mov
mov
mov
fdivl
pop
pop
mov
movb
out
stos
mov
lods
mov
dec
leave
clc
ret
push
cmc
dec
dec
inc
data16
dec
or
js
sbb
xchg
fisttpl
in
sbbl
inc
loop
iret
dec
nop
pop
push
xor
or
dec
mov
nop
loopne
lret
dec
mov
inc
outsl
add
sahf
loopne
shl
fsubrp
xchg
repz
sub
aad
ss
xor
fldt
jg
aad
in
into
dec
fcoms
cmp
out
aad
xchg
int
mov
xchg
sbb
or
jecxz
icebp
pop
xchg
and
pop
mov
dec
lret
addl
cmp
test
out
out
cmpsb
into
push
fisttps
shrl
stos
mov
lea
push
pusha
ret
mov
cmp
xchg
pop
cmc
data16
add
cmc
sub
sub
std
rclb
add
or
sub
leave
push
push
repnz
sub
sbb
dec
mov
ss
pop
iret
fldcw
push
xchg
push
jp
test
test
xchg
loopne
sbb
cmp
fadd
ret
iret
add
inc
xlat
push
ret
push
pop
outsb
call
int
push
jmp
ret
int3
dec
pop
push
cld
lds
loop
inc
data16
cli
lds
sbb
inc
adc
out
dec
cvtps2pd
iret
xor
adc
jp
sbb
jmp
call
or
dec
inc
addr16
mov
cs
xor
loop
push
xchg
push
cmp
jmp
lret
and
mov
stos
adc
sub
iret
movsl
pop
bound
addr16
jg
and
iret
clc
mov
dec
test
mov
leave
roll
mov
dec
sti
xor
mov
pop
sbb
out
dec
in
roll
aad
inc
aaa
test
dec
in
roll
aad
cmp
dec
cli
into
dec
mov
pop
pop
and
dec
xchg
in
mov
inc
lods
xor
or
xor
push
pop
adc
inc
inc
xor
pop
mov
pop
sbb
push
inc
and
addr16
inc
adc
jbe
lret
pop
add
aaa
mov
loop
mov
sbb
fiaddl
and
loope
and
and
add
add
fisttpll
adc
movsb
pushf
ret
cwtl
add
lret
fimull
add
loopne
pusha
into
dec
or
cli
fbld
lea
dec
dec
sub
sbbb
or
dec
pushf
cmc
adc
test
xor
mov
in
ljmp
daa
int
lret
dec
add
ud2
into
xchg
inc
shr
fs
mov
mov
enter
in
adc
ds
daa
in
inc
pop
into
sbb
sahf
int3
mov
les
inc
call
add
push
fadds
rclb
lahf
int3
stos
inc
es
insl
add
mov
xchg
mov
lock
sahf
out
dec
in
les
enter
pop
nop
iret
pop
mov
cmp
add
dec
out
shll
loopne
lret
push
push
insb
jbe
push
add
inc
popa
dec
pop
or
jg
jmp
stc
lods
add
jl
int3
jecxz
push
out
repnz
mov
jp
cmpsl
lret
in
push
add
xchg
push
xchg
les
xor
add
dec
push
sub
scas
adc
adc
leave
add
lret
insl
xchg
sbb
xchg
iret
sub
in
push
inc
sti
lods
jno
repz
push
mov
dec
dec
or
daa
int3
mov
cltd
pop
and
push
es
repz
push
push
add
or
enter
dec
dec
mov
repnz
jnp
dec
push
push
push
dec
dec
adc
sahf
pusha
dec
xchg
xchg
sub
dec
sahf
push
sub
arpl
cmpsl
inc
mov
xchg
dec
lds
cmp
jbe
fcompl
test
lds
adc
add
int
pop
mov
pop
scas
xlat
addb
paddq
test
push
les
enter
ret
pop
pusha
sbb
pop
fwait
mov
xchg
cmp
sbb
ja
data16
call
enter
inc
add
iret
lret
mov
push
push
dec
mov
ret
int3
pop
add
in
mov
dec
xor
rcll
testb
sub
ja
dec
ffree
jne
push
ljmp
jecxz,pt
bound
jne
fadds
ret
xchg
fisttpl
sub
adc
scas
lea
dec
push
je
fimull
inc
scas
shll
stos
push
or
hlt
mov
into
loope
xor
ja
add
pop
jp
mov
or
shlb
pop
mov
push
fldcw
cli
movb
mov
inc
fwait
imul
sti
sub
adc
or
inc
or
push
mov
test
sbb
stos
dec
rorb
movl
mov
fcomps
or
push
iret
mov
cmc
sbb
pop
out
scas
addr16
pop
adc
enter
dec
enter
mov
jp
sub
fwait
inc
cmp
or
cmovb
enter
pop
or
pop
push
push
frstor
pop
and
enter
add
mov
shrb
ljmp
cwtl
lret
cld
mov
ror
xchg
mov
or
fmull
negl
je
push
iret
sub
iret
pop
cmp
cwtl
push
dec
clc
jno
lahf
cmpsl
iret
hlt
int3
add
dec
dec
stc
mull
gs
sub
push
mov
inc
push
or
push
xchg
es
or
into
jb
test
repnz
sub
cmp
rorb
nop
mov
and
push
or
out
enter
inc
xchg
cmc
ret
mov
cmp
hlt
js
inc
ljmp
xlat
das
jp
cld
pop
inc
mov
ja
push
xchg
mov
rclb
fwait
inc
cmpsl
xchg
mov
push
lret
clc
ror
or
or
lea
fwait
movl
roll
sbb
test
sbb
fcom
jns
dec
pop
fsub
add
lret
lea
repz
xchg
mov
loope
mov
sub
das
fisubl
lret
add
int3
test
movzwl
into
lock
mov
dec
pop
rcl
xchg
sub
push
lods
add
loopne
add
es
dec
jmp
and
push
out
mov
addr16
mov
dec
mov
inc
rolb
mov
add
sbb
ret
lret
loopne
pop
out
mov
ja
popw
add
loopne
add
push
ret
hlt
sahf
rcr
add
sub
mov
aaa
iret
ret
popf
addl
mov
leave
iret
pusha
mov
lret
add
jae
add
mov
mov
add
pusha
or
inc
int
lea
into
xlat
cmp
jl
stos
fistpl
mov
pop
push
ret
mov
pop
dec
xchg
dec
lds
push
popa
mov
inc
xchg
ljmp
movl
pop
dec
xchg
popa
fiadds
das
ret
fcmovnu
jb
sbb
push
lods
inc
lds
pop
outsb
ret
addr16
add
das
les
rclb
nop
mov
add
push
xor
int
test
divb
pop
sbb
or
inc
outsb
loopne
clc
lahf
xchg
and
jmp
mov
ret
xchg
les
dec
cld
lret
sub
sbb
adc
shlb
pop
outsl
pop
lock
call
ja
sti
xchg
les
fcmovu
lods
ja
pop
test
in
int
sub
movsl
xchg
inc
adc
fisubs
inc
scas
pop
sahf
jbe
jmp
xor
mov
or
inc
and
outsl
ret
or
iret
and
add
outsb
sbb
dec
lcall
ljmp
xchg
lock
and
popf
dec
pusha
inc
cs
sbb
push
and
mov
repz
cmp
stos
jae
push
in
pop
dec
push
adc
or
push
mov
fs
inc
pop
ficompl
into
aaa
dec
pop
ficoml
push
ficompl
nop
addb
test
mov
sbb
inc
mov
aaa
push
call
dec
xchg
cmp
insb
sbb
test
or
daa
cs
adc
push
pop
sbb
cmc
dec
pop
sbb
or
xchg
shl
imul
push
test
fiadds
into
and
enter
or
outsl
jbe
mov
pop
into
xchg
jbe
adc
pop
clc
ljmp
inc
sbb
test
fimuls
mov
icebp
dec
data16
jmp
pop
dec
xor
outsl
hlt
sbb
xchg
dec
and
sbb
xchg
lret
or
inc
add
ljmp
adc
dec
das
xchg
xchg
in
iret
adc
inc
sahf
enter
inc
pop
add
adc
and
sbb
pop
push
adc
inc
insb
inc
push
ljmp
inc
jmp
imul
popf
je
adcb
adc
scas
aam
in
adc
sbb
cmovns
mov
xchg
xchg
addr16
dec
mov
test
test
adc
mov
dec
in
repz
paddsw
stos
sbb
test
cmpsb
mov
sub
test
das
dec
fwait
mov
pop
ja
xchg
adc
sbb
inc
push
aaa
outsl
outsl
dec
pop
out
repz
sbb
mov
push
inc
out
fldenv
or
out
les
les
xchg
inc
xchg
adc
push
sbb
dec
inc
ret
push
push
aam
inc
pusha
or
xor
pop
repnz
push
fs
pop
jnp
push
cvtps2pd
inc
lret
inc
xchg
dec
sbb
inc
out
rcr
hlt
scas
dec
push
push
fs
dec
push
mov
push
neg
xor
addr16
int3
dec
scas
repz
jbe
inc
sub
pop
xor
pop
addr16
sbb
adc
data16
nop
dec
mov
cmp
into
pusha
sbb
out
mov
fs
dec
cli
adc
sbb
sub
push
js
and
stos
xchg
adc
or
or
inc
scas
pop
insb
ret
mov
inc
dec
into
in
iret
pop
sbb
ficomps
inc
adc
sbb
mov
icebp
xchg
jmp
xchg
mov
loopne
jecxz
nop
mov
push
or
negb
mov
sarb
mov
and
pop
cld
pop
and
cmp
xchg
mov
out
xorl
mov
repz
clc
or
cmpsb
fs
pop
push
jb
jp
and
xchg
popa
out
mov
push
lds
dec
cs
pop
shll
push
or
fwait
adc
addr16
adc
or
xchg
data16
nop
aam
addr16
add
nop
and
xlat
push
pushf
jmp
sub
je
aaa
mov
rorl
pop
cmp
faddl
sbbl
scas
sti
fsubrl
mov
in
call
lds
dec
cmpsb
test
sbb
add
jno
push
sbb
hlt
mov
xchg
xchg
xchg
or
out
mov
cmp
adc
je
mov
xchg
jb
lock
decb
or
push
add
into
dec
fimull
fistl
dec
add
or
out
mov
loop
cmpsl
stos
push
pop
mov
fnsave
pop
pop
xchg
push
xchg
cli
pop
fxch
fisubs
fnstsw
pop
dec
xor
sbb
mov
mov
cmp
mov
xor
das
mov
roll
cld
adc
in
pop
or
aam
inc
mov
pushf
adc
xor
lret
sbb
inc
xchg
xchg
dec
adc
xchg
cmc
ljmp
sbb
cltd
or
mov
push
xor
sub
outsb
and
popa
jbe
sbb
jmp
mov
dec
fs
cmc
lds
outsb
dec
cmc
popa
inc
rorb
iret
push
push
leave
jle
fsubr
fldt
push
sbb
mov
inc
stos
push
into
push
pop
jno
test
out
dec
mov
dec
ljmp
sbb
push
sbb
adc
xchg
and
xchg
iret
cli
test
dec
cli
mov
sbb
xchg
pop
cld
iret
jecxz
pop
push
cli
sbbl
inc
lods
adc
or
cwtl
pop
inc
add
pop
push
lea
mov
mov
add
mov
cli
ret
addr16
ljmp
aad
adc
dec
subl
jle
adc
sbb
into
push
add
mov
rorb
adc
frstor
cmp
add
aad
mov
or
or
out
mov
inc
mov
sbb
fs
sub
sub
test
jle
ret
xor
dec
sbb
mov
mov
cld
ret
das
pop
out
cmpsl
mov
outsb
push
mov
ret
push
lds
pop
call
and
mov
pop
ja
push
movsb
imul
ret
mov
les
inc
or
xchg
outsb
add
rsqrtps
inc
repnz
aam
push
or
movsl
xchg
sub
lock
cli
push
cld
outsb
scas
call
out
push
int3
out
lds
clc
lret
test
adc
push
sub
andb
inc
pusha
movups
or
cs
fisubrs
dec
fstl
adc
out
jo
scas
adc
mov
cld
leave
xchg
push
cwtl
data16
cwtl
frstor
pop
cmpsl
ret
testb
xchg
ja
ret
push
dec
inc
cli
stos
xor
mov
mov
xor
stos
dec
stos
sub
add
xchg
loopne
sbb
ss
mov
nop
popf
or
push
shll
xchg
repnz
pop
or
adc
nop
jae
out
dec
iret
aaa
dec
sbb
lret
mov
ljmp
push
pushf
lds
call
mov
nop
in
inc
mov
sbb
xor
inc
fisttpll
and
js
leave
js
enter
rorl
test
insb
ja
xchg
push
add
decb
fstpt
cli
lods
cltd
pop
jbe
cli
xlat
lods
lock
or
sub
adc
iret
dec
sub
pop
push
xchg
add
add
xchg
mov
fwait
cmp
pop
clc
add
pop
nop
push
je
pusha
in
and
sbb
out
push
fiaddl
nop
lret
xchg
fcoms
lea
repz
mov
fildl
push
test
out
aam
adc
lret
pop
test
into
or
or
daa
mov
add
ljmp
add
pop
dec
mov
or
xchg
iret
stos
sub
add
push
mul
les
lret
mov
adc
add
sub
mov
fildl
dec
adc
ret
inc
mov
in
scas
or
mov
dec
push
fcom
pusha
not
or
push
mov
adc
movsl
ja
repz
sub
push
mov
adc
push
xchg
push
xor
out
ljmp
repz
stos
sbb
sub
adc
in
add
cli
jae
int
out
test
adc
hlt
sbb
daa
ficomps
pop
mov
cmpsl
out
push
inc
adc
cltd
sbb
add
ljmp
fmul
loope
xchg
inc
stos
outsl
dec
or
je
mov
adc
in
sbb
jl
and
push
xchg
dec
fwait
pop
mov
or
inc
xchg
xor
pop
and
mov
sbb
jbe
xchg
stos
lret
out
pop
add
int
mov
inc
dec
adc
pop
mov
pop
mov
out
inc
push
pushw
xchg
mov
fcmovne
dec
sahf
ja
std
fnsave
call
sbb
push
xchg
or
fmuls
lea
cmp
push
daa
fidivrs
pop
sbb
cmpsl
cltd
pushf
lea
pop
pop
sbb
adc
lcall
pop
lock
scas
adc
sbb
xlat
xchg
je
or
sbb
xchg
ss
test
or
push
push
xchg
mov
or
push
mov
adc
dec
cwtl
xchg
jb
jmp
xor
scas
jbe
jo
fwait
or
cltd
js
adc
cmp
adc
fistps
sub
adc
pop
test
push
repnz
jp
test
cld
sbb
adc
int
push
sbb
punpcklbw
cld
inc
mov
fstpt
pop
or
inc
ret
add
dec
sub
into
sbb
mov
or
xor
add
in
testb
dec
add
sbb
xchg
dec
lock
push
push
sbb
adc
pop
adc
cltd
pop
loop
inc
jmp
sbb
xchg
ljmp
sahf
insb
jp
sbb
lahf
dec
rorb
pop
insb
ret
lds
pop
call
pushf
fimuls
pop
lods
push
lret
sub
cwtl
add
addb
stos
sahf
iret
xchg
pop
jno
push
dec
ja
xchg
mov
dec
rcrb
xchg
mov
add
push
ja
enter
ret
cli
ret
xchg
out
mov
inc
shlb
enter
xor
mov
aas
addr16
lds
stos
or
mov
aad
mov
mov
mov
push
mov
dec
daa
mov
jo
rorl
pop
nop
clc
test
clc
xor
sub
push
xor
xchg
les
pusha
xor
test
repz
sbb
ret
lock
addr16
jp
sbb
dec
shl
mov
lods
dec
xchg
scas
mov
dec
scas
ja
and
jns
pop
js
aad
dec
sbb
je
adc
pop
sbb
out
jbe
sbb
pop
sbb
jne
cmpsb
sub
addr16
xchg
out
cmpsb
movsl
sbb
xchg
xor
push
cmpb
sub
lret
pop
imul
lea
mov
xchg
add
xchg
addl
sbb
push
mov
mov
les
pop
mov
sbb
add
and
adc
xor
or
sbbb
mov
cwtl
dec
ja
adc
fnstcw
cmpsl
dec
in
rol
add
test
cli
sbb
dec
addl
adc
and
push
dec
je
or
sbb
xchg
js
dec
xchg
sub
paddb
cmpsb
ds
push
push
add
xchg
lret
sbb
dec
cmp
lea
mov
push
popf
jo
jg
mov
or
fidivrl
or
push
xchg
mov
in
adc
addb
arpl
in
insb
xchg
mov
sbb
or
or
cli
lret
cmp
jo
pop
cmpsb
jmp
cld
loop
or
pop
adc
lret
arpl
in
jmp
xor
fimuls
sub
outsb
les
lds
pop
push
mov
sbb
cmp
lahf
jns
rol
rolb
rolb
push
mov
add
inc
dec
jnp
or
cmp
jne
pop
mov
test
mov
or
inc
out
xchg
sbb
test
push
add
mov
les
and
mov
and
add
sbb
xlat
pop
dec
inc
inc
cmpsl
ret
inc
js
jp
inc
mov
cmp
fwait
cmpsl
outsl
cmp
push
imul
dec
inc
hlt
loope
bound
or
mov
mov
addr16
sub
inc
stos
pusha
orl
pop
pop
imul
push
mov
inc
into
loope
dec
xor
mov
mov
inc
test
outsb
xchg
push
inc
lock
xor
cmp
push
push
sub
pop
fisubl
ds
adc
jge
xor
jg
mov
xlat
mov
mov
cwtl
insl
xchg
mov
xor
add
and
jp
and
mov
jg
pop
xchg
or
clc
inc
sti
popa
sub
fsubs
movsb
dec
cli
push
lea
in
fmuls
adc
negb
data16
adc
xchg
mov
jp
addr16
mov
adc
xor
dec
jl
sub
mov
pop
stos
jp
loopne
mov
pop
rcrl
mov
ja
push
repz
cli
pop
dec
push
jo
test
sbb
jl
imul
dec
or
mov
push
test
jle
or
and
adc
ja
or
pop
iret
push
mov
jmp
or
sbb
pushf
sbb
pop
push
push
adcb
adc
cmp
pop
push
push
adc
sbb
pop
ficomps
cmpsl
jg
repnz
push
rcr
movd
mov
xchg
sbb
pop
pop
jns
add
je
pop
add
test
sbb
xor
jbe
lret
jl
add
xchg
push
adc
pop
dec
push
inc
ljmp
mov
dec
dec
push
push
shrb
lods
aam
mov
sbbl
notl
adc
pop
aad
jl
pop
in
insl
ror
les
out
sahf
insb
push
lahf
or
lods
and
mov
push
rclb
xchg
jg
xchg
push
pusha
jbe
pop
xchg
dec
pushf
xor
cmpsl
dec
movsb
sbb
addl
sub
adc
and
adc
sub
lahf
imul
push
pop
cmp
sbb
aam
cmpsb
pop
push
icebp
fistl
jns
popf
sub
ds
push
ss
pusha
out
pop
sub
cs
pusha
jns
sbb
popf
push
loopne
pop
dec
int
xlat
sub
scas
xchg
mov
cmpsb
add
push
hlt
xchg
sbb
pop
cmp
mov
jmp
cli
or
and
cltd
test
xchg
mov
or
or
pushf
xchg
mov
sarl
test
fcomip
lods
je
in
ljmp
sub
pusha
mov
xor
dec
xor
xchg
xchg
testb
mov
in
jns
mov
out
dec
add
popf
adc
or
pop
push
popf
dec
fwait
xchg
ljmp
fwait
mov
adc
or
add
rcll
sub
fwait
jns
xchg
loope
push
cmp
shlb
ret
pop
or
xlat
cmpsl
mov
daa
fbstp
nop
and
sbb
outsl
sbb
mov
pop
adc
xchg
inc
jl
lret
mov
into
rcrl
cwtl
ret
xchg
mov
pop
sbb
jp
data16
mov
cmpsb
sti
ret
pop
xchg
or
xchg
cmp
pop
cwtl
sub
adc
lahf
les
popa
jno
popa
sbb
repz
mov
jno
movsl
adc
pusha
pop
adc
dec
into
fidivs
popa
add
popa
inc
jns
adc
mov
dec
pop
cltd
dec
xchg
xchg
data16
cmp
add
dec
les
je
mov
pop
inc
insb
cmp
aas
inc
mov
outsl
push
or
out
mov
push
in
mov
or
test
pushf
je
dec
das
fists
je
shlb
xchg
xchg
dec
inc
lahf
xor
lcall
mov
xchg
aas
cmpsb
xor
movsl
filds
cmc
lds
lahf
pop
scas
sub
and
mov
mov
push
xchg
mov
pushf
stos
inc
pop
addl
sub
sub
pop
push
xchg
pop
decb
cmpsb
imul
in
rorb
lods
inc
push
jae
ljmp
mov
insl
and
jp
jno
inc
clc
sbb
or
push
data16
xchg
iret
lea
or
test
cmpsl
sbb
add
js
mov
mov
adc
sub
into
dec
pop
je
ret
fistpl
adc
jae
sbb
mov
pop
sti
stos
xchg
mov
ja
mov
mov
dec
outsb
test
dec
sbb
mov
dec
popa
jns
pop
mov
inc
pop
pop
mov
lds
sub
aas
lods
cltd
push
lods
bound
push
and
rol
sbb
jne
lret
mov
and
sub
lods
daa
into
or
repnz
adcb
mov
push
mov
daa
or
outsl
test
sbb
outsb
dec
je
xchg
fistl
iret
jmp
shlb
je
mov
xchg
out
xlat
dec
aaa
stos
out
stos
pop
cmpsl
jnp
mov
aas
push
lret
into
mov
xorb
mov
sbb
in
mov
xchg
out
lods
outsb
xchg
ljmp
pushf
xchg
iret
sub
sub
or
push
pop
push
adc
adc
dec
or
push
je
ret
jno
sub
addr16
ljmp
subb
fisubs
dec
mov
xchg
cmpsb
lcall
add
jo
dec
sbb
add
xchg
sahf
je
mov
cmp
adcl
mov
push
cmp
daa
jp
sbb
pusha
sti
sbb
cmp
into
cmpsl
cmp
les
test
dec
xor
dec
mov
lcall
es
mov
insb
mov
sarb
pop
sarl
sub
mov
scas
push
sub
mov
fcomps
out
sahf
sbb
fdivrl
xchg
mov
rolb
pop
popf
jne
sbb
sbb
cli
cmpsb
jge
adc
jmp
sbb
xor
jns
es
insb
cltd
mov
testb
add
rcrl
push
pop
pusha
adc
pop
mov
lcall
out
mov
daa
xlat
inc
adc
or
lods
xchg
push
fadd
loopne
repz
dec
pop
xchg
mov
sti
xchg
jmp
lea
sbb
insb
mov
jne
mov
cmp
aas
lock
insb
or
imul
mov
ds
mov
jle
cmp
pop
inc
mov
out
or
ret
in
inc
insl
and
ret
popf
std
dec
adc
sbb
or
cli
dec
mov
mov
enter
sbb
sarl
imul
pop
dec
mov
dec
adc
test
test
sbb
adc
shlb
pop
dec
mov
sbb
mov
mov
pushf
cltd
ret
or
aaa
leave
mov
js
loope
cmpsl
cs
or
fnstsw
push
jbe
sub
push
test
imul
dec
or
fadd
push
or
dec
cmpsl
lahf
sbb
pop
call
fcmovnu
add
jl
scas
int3
dec
lds
mov
addr16
fmuls
into
fiadds
jmp
xchg
lock
out
lea
sbbb
jno
mov
push
imul
rol
movsb
or
adc
popa
pop
mov
mov
adc
xchg
mov
into
lea
dec
sti
and
push
fistl
jb
lods
movsl
addl
das
cwtl
sbb
das
mov
jns
adc
mov
xchg
mov
dec
mov
xor
xchg
dec
push
dec
push
sbb
xor
sub
in
pushf
push
sbb
or
or
jo
mov
pop
mov
jno
addl
loopne
sub
addr16
xchg
xchg
mov
xchg
inc
push
pop
jle
outsl
inc
movsl
fidivs
inc
xchg
inc
sbb
push
mov
or
xlat
xchg
cltd
sbb
or
mov
dec
scas
add
xor
sbb
dec
lock
jbe
shr
out
es
ja
mov
sub
adc
in
xchg
lock
cmp
imulb
iret
mov
push
dec
ja
das
sahf
lret
cmpsl
out
push
add
daa
ja
aas
mov
ss
fucomp
mov
outsl
pop
ja
test
jno
sbb
test
mov
jle
push
pop
or
inc
rorb
scas
mov
mov
lret
and
jg
push
cmpsl
test
cmp
inc
xchg
inc
cld
dec
enter
and
dec
jne
and
cmp
mov
dec
cli
rolb
int3
or
inc
inc
add
cmpsl
adc
push
mov
stos
push
push
inc
fs
js
cltd
or
xchg
or
or
fistpl
xchg
and
dec
or
dec
or
stos
xchg
adc
rcll
daa
pop
push
mov
mov
cmp
mov
push
push
lock
sub
mov
push
sbb
aaa
adc
lea
mov
or
lock
jp
mov
iret
mov
ljmp
add
sbb
sub
iret
mov
sbb
fwait
and
xor
jno
imul
ja
adc
or
les
daa
pop
lea
outsb
ret
adc
outsb
enter
adc
lds
daa
cwtl
sbb
sbb
or
rcrb
pop
cmp
jno
scas
mov
mov
mov
mov
in
and
pusha
mov
mov
ljmp
push
ljmp
push
jg
ficoms
adcl
or
out
push
dec
lods
scas
push
jne
fldlg2
dec
test
int3
sbb
enter
in
daa
jns
push
and
sti
shr
rorl
movsb
dec
push
loop
jmp
addb
lds
les
sub
js
xchg
add
lods
or
inc
or
push
mov
inc
jmp
dec
sub
lret
aas
xor
adc
ja
xor
mov
pushf
mov
es
or
lods
dec
xchg
or
in
dec
inc
sub
push
sbb
in
dec
into
add
rolb
lods
inc
test
andl
mov
xchg
insl
and
mov
mov
or
mov
mov
pop
mov
arpl
repz
adc
pop
or
xchg
fbld
mov
dec
mov
and
aaa
lock
test
or
pop
sub
push
das
lods
push
mov
lret
mov
lea
cmp
cmp
pop
xor
adc
dec
cmpsl
mov
mov
or
jns
push
popa
sbb
inc
orb
sub
adc
or
sbb
jmp
mov
ficoms
jo
xlat
cmc
pop
adc
pop
lods
xchg
or
push
aas
cmp
mov
push
data16
jbe
mov
scas
add
cltd
lea
xchg
mov
pop
btc
or
push
orl
sbb
dec
mov
or
shll
mov
fwait
adc
je
add
mov
rclb
xor
lret
xchg
or
mov
push
dec
and
inc
sub
mov
cltd
inc
pop
xchg
pushf
mov
out
xchg
pop
xor
adc
jne
add
ja
mov
mov
pop
push
mov
or
add
int
imul
pop
lock
pop
xchg
cwtl
fcomps
ds
push
lods
push
push
jno
xchg
ljmp
testb
cmp
mov
or
mov
xor
inc
mov
pop
cmpsl
push
dec
divb
add
jbe
add
fwait
stos
sbb
shr
scas
dec
add
js
mov
daa
mov
nop
dec
adc
jb
inc
xor
pop
loopne
stos
push
mov
or
fimuls
sub
and
aaa
jnp
sub
adc
xchg
pusha
sub
int3
mov
out
sub
or
inc
testl
lahf
daa
xchg
mov
test
dec
pop
mov
cmpsb
sub
push
mov
nop
in
mov
pop
cmp
adc
pop
cltd
mov
stos
adc
sbb
mov
mov
inc
jmp
test
mov
out
jge
xor
cmp
iret
jbe
push
cltd
test
xor
inc
insb
xchg
das
mov
or
test
inc
jbe
cltd
push
push
jge
jo
push
jne
adc
mov
xor
into
pop
sub
pop
push
je
lds
rcrl
cvtps2pd
push
or
sub
inc
xchg
popa
push
rcll
cli
dec
push
sbbl
inc
out
push
aad
pop
mov
leave
sbb
jmp
adc
push
jo
push
pop
jns
push
into
push
insb
pop
enter
add
inc
fsubrs
mov
cwtl
shll
mov
add
mov
out
fidivl
sbb
shrl
jbe
loope
dec
sub
mov
push
cmp
fmuls
and
in
mov
iret
and
addr16
push
mov
dec
sbb
scas
pop
neg
add
pop
test
outsb
pushf
sub
add
adc
lods
inc
xor
cmp
pop
and
lahf
jno
mov
or
dec
xchg
adc
lods
js
ficompl
jne
aad
out
push
xchg
jmp
or
sbb
dec
pop
nop
pusha
lods
fs
insl
xchg
pop
mov
mov
out
daa
xchg
push
xchg
xchg
xchg
mov
dec
aas
addr16
call
shl
test
or
inc
outsb
xchg
lock
push
sub
or
cmp
push
or
inc
pop
inc
xor
leave
xchg
or
add
jp
cmp
rcrb
mov
cld
pop
aam
das
pop
sbb
push
cmp
adc
mov
iret
cli
mov
and
or
cltd
or
push
dec
mov
je
popl
lret
mov
fdivrl
pop
jns
mov
sbb
dec
jg
adc
xchg
pop
push
dec
or
xchg
addr16
lds
jmp
out
dec
sbb
mov
adcl
adc
and
mov
sbb
mov
cmp
ljmp
cmpsb
in
and
ret
scas
and
cltd
inc
pop
pop
xor
out
insb
mov
ja
mov
aad
jne
addr16
xor
mov
dec
andl
pop
lahf
push
int
pop
shrl
xchg
pop
insl
dec
lret
sbb
mov
shrl
push
stos
outsl
lahf
push
aam
push
push
jbe
daa
pop
sub
inc
test
pusha
cwtl
pop
fcmovne
cltd
lea
js
inc
mov
dec
cli
lret
mov
jne
and
aam
jno
dec
and
mov
push
push
int3
jns
mov
push
ret
cmp
or
pop
test
push
stos
fcoml
dec
push
push
mov
inc
mov
lahf
sbb
sbb
push
scas
adc
pusha
jo
jno
sarb
loopne
pop
inc
cmpsl
test
test
push
mov
sbb
dec
aas
or
fisubrs
lret
sarl
mov
pop
mov
adc
pop
pop
and
mov
sbb
iret
sbb
scas
lret
movsl
mov
jg
lcall
dec
out
out
fldcw
enter
mov
push
les
negl
cli
pusha
cltd
orb
ss
cmp
pop
fwait
mulb
jmp
push
sbb
mov
pop
mov
adc
add
ss
mov
cld
iret
or
jp
out
pop
rclb
sub
sbb
pop
mov
sahf
cmp
divl
mov
popf
fwait
xchg
or
fmuls
sub
mov
stos
lock
lret
pushf
mov
mov
adc
pop
mov
lds
sahf
cli
sarl
mov
test
movsl
xchg
outsl
jl
pop
out
mov
and
seto
lds
in
sub
orl
out
fisttps
popa
push
push
aas
test
mov
data16
jnp
sub
sbb
pop
subl
pop
jns
popf
popf
mov
lahf
out
scas
addr16
push
adc
xchg
lods
jg
inc
and
dec
jge
lret
push
shrl
mov
mov
insl
imul
mov
das
jmp
jge
js
xchg
xchg
ret
insl
dec
and
mov
cwtl
push
or
inc
pusha
mov
loop
xchg
mov
add
les
inc
leavew
cmpsl
aas
sbb
sub
xor
push
sti
iret
pop
mov
push
sub
fincstp
rcll
or
inc
sti
movb
add
scas
or
push
lret
mov
sahf
adc
xchg
sbb
js
xchg
mov
add
in
int
mov
jo
decb
in
jge
inc
mov
je
addr16
lret
nop
mov
xchg
adc
dec
xchg
cwtl
fimull
adc
pop
sub
adc
xor
sbb
mov
push
pushf
adc
inc
push
or
cltd
inc
ljmp
or
or
push
lret
jp
test
testb
adc
inc
nop
sub
adc
and
mov
ficomps
pop
fildll
repnz
sti
xchg
xchg
mov
xchg
sarb
int3
mov
pop
push
mov
sub
jg
xor
iret
push
jae
fisubrl
mov
adc
mov
aas
mov
lods
cmp
imul
aam
lret
adc
nop
mov
cmpsb
inc
sub
hlt
adc
dec
cmpsl
inc
xor
dec
dec
xchg
enter
test
xchg
daa
pop
repnz
movsb
pop
push
xchg
jbe
push
push
jbe
xchg
cmpsl
inc
push
imul
pop
cmp
ds
adc
add
cmp
ljmp
push
sbb
pop
fstpl
xchg
fnsave
mov
xchg
js
push
adc
stos
out
shlb
mov
jg
inc
push
inc
lahf
fistps
pop
xchg
lahf
addr16
cmp
imul
fsts
insl
sti
sub
xor
jge
xchg
xchg
adc
cs
dec
jbe
or
outsb
sbb
lods
test
mov
jp
mov
ficoms
jae
or
or
cmp
outsb
sbb
mov
add
adc
cmp
mov
lea
mov
mov
leave
xor
cmpl
xchg
loopne
ja
add
or
popa
xchg
pop
mov
inc
pusha
aaa
add
test
popa
adc
xorb
ljmp
imul
mov
mov
addr16
pmaxub
cmp
mov
lahf
xlat
or
addr16
adc
pop
dec
or
fisubrs
or
and
or
shrd
push
xorb
push
adc
push
fcompl
or
scas
push
lret
lods
xchg
dec
outsb
outsb
adc
sarb
sbb
insb
inc
aad
cs
int3
jge
push
xchg
mov
push
xchg
xor
cmpsl
push
cmp
imul
movsl
popf
xchg
inc
stos
jbe
add
dec
mov
aad
insb
mov
pop
aad
frstor
sarl
jge
insb
movsl
inc
mov
loope
sbb
pcmpgtd
aaa
push
int3
ror
pop
mov
mov
pop
hlt
inc
out
es
or
lods
incl
insl
cmp
into
mov
das
xchg
lret
dec
sbb
outsb
pop
mov
push
dec
ljmp
enter
outsl
jg
xchg
lea
shll
push
dec
cmpsl
push
add
jae
pop
into
add
nop
je
test
dec
or
rcrb
mov
and
lea
enter
mov
xchg
aas
mov
imul
imul
dec
js
mov
les
lea
sbb
push
pusha
mov
sbb
mov
cmpb
xchg
sbb
jle
fiadds
xchg
dec
pop
pop
mov
imul
add
jno
das
lds
sub
lea
push
mov
mov
xchg
or
pusha
mov
data16
xchg
add
mov
sbbb
mov
xchg
inc
xchg
pop
cmp
mov
xchg
call
mov
aaa
sub
aaa
or
dec
and
mov
fucomp
enter
and
mov
sub
sbb
lcall
daa
les
lret
orb
xchg
pop
fwait
iret
stos
dec
xchg
shr
out
insb
mov
or
imul
shrl
and
cmpsb
mov
mov
aas
sub
das
push
dec
mov
aam
inc
jns
adc
adc
addr16
cmp
and
fimuls
cld
add
test
pop
cs
pop
fmuls
sub
scas
cmc
inc
aaa
jg
and
out
mov
mov
push
aaa
sub
push
js
andb
pop
xchg
rcrb
and
push
pop
dec
dec
sbb
ds
dec
inc
push
xchg
add
pop
repnz
pushf
xchg
cmp
sbb
ret
sub
ret
mov
cltd
push
dec
add
lret
jno
lret
jp
cli
jle
into
fstpt
out
xchg
pop
ja
mov
sub
adc
adc
xchg
aam
pop
mov
aas
movsb
cmp
add
sbb
jge
int
mov
dec
sbb
mov
dec
and
lahf
loope,pt
ljmp
popl
sub
shrl
cmp
lea
fdivs
mov
sbb
sbb
shlb
dec
lods
mov
ds
push
ret
mov
mov
jne
fisubl
icebp
sbb
adc
pop
cli
inc
jl
ret
in
push
jne
paddb
or
pop
pop
into
addr16
dec
pop
mov
sbb
mov
or
cmp
repz
lods
push
inc
stos
cs
dec
pop
stos
mov
lock
repnz
mov
lods
xchg
push
push
push
mov
shll
push
sub
loopne
mov
es
int3
das
cmp
loopne
xor
or
fldt
xor
add
mov
jbe
and
jbe
mov
jne
xchg
or
mov
ja
jno
test
xchg
jb
adc
or
cmp
clc
daa
ljmp
jle
xchg
outsl
sahf
mov
addr16
subb
jp
aas
mov
push
ja
testb
add
or
pusha
sbb
scas
das
sbb
fcomp
xchg
js
push
mov
mov
jbe
mov
pop
popa
xchg
movsb
lret
mov
lds
push
inc
daa
inc
lods
mov
lahf
movsl
cmp
andb
test
jo
xchg
cmpsl
into
pushf
and
jge
adc
inc
push
or
enter
addr16
push
mov
mov
movsb
lret
mov
fidivs
push
push
outsl
shrb
adc
jge
pusha
out
imul
mov
xor
daa
lret
pop
test
out
mov
inc
mov
cmpl
dec
stos
adc
loopne
mov
adc
cwtl
cmpsb
jp
incb
jno
lea
push
sbbb
je
test
or
sbb
cmp
mov
punpckhdq
cmp
shll
loopne
jbe
or
jo
fistpl
dec
stos
pop
inc
xorb
xchg
push
push
jns
push
repnz
jg
lea
push
push
xchg
xchg
pushf
pop
int3
mov
hlt
add
popf
pop
push
iret
rorb
iret
inc
adc
pop
push
test
scas
xor
insl
pushw
sub
rclb
test
sbb
xchg
orl
hlt
pop
pushf
cwtl
popa
cld
jo
vmovss
loope
push
fsubp
or
or
adc
inc
or
aaa
cmp
popf
mov
push
or
dec
dec
sbb
or
mov
xchg
sub
xchg
cli
lods
je
ja
add
ret
orb
sbb
addb
icebp
inc
mov
mov
jns
pop
xchg
dec
jg
cmc
push
add
push
dec
outsb
in
xchg
mov
in
fidivrl
ds
xchg
and
lods
inc
popa
mov
sbb
jbe
mov
out
xor
sbb
out
andl
scas
fisubl
inc
test
pusha
xchg
pushf
mov
mov
mov
or
add
dec
cld
loopne
sub
dec
shll
jne
mov
mov
push
jecxz
jp
out
movsb
cmp
fadd
je
ret
or
test
ja
lret
repnz
dec
jae
push
ss
in
sbb
dec
mov
ljmp
and
pop
adc
cmpsb
rcrl
lahf
mov
adc
in
ja
adc
and
cmpsl
jecxz
sbb
lret
data16
dec
jecxz
pop
add
add
or
pop
into
ret
xorb
add
jno
add
out
mov
inc
ss
adc
lods
pushf
push
jle
mov
inc
push
adc
inc
cmpsb
adc
dec
lret
roll
pshufw
enter
sub
push
and
outsl
and
push
out
and
stos
cmpsl
ja
pop
fbstp
fimull
adcl
or
mov
into
dec
jg
fbstp
out
mov
dec
mov
or
cmp
insl
scas
mov
fmuls
ret
lahf
mov
mov
sbb
dec
fiaddl
jmp
scas
inc
inc
fstl
mov
pop
xorb
loopne
mov
or
sub
push
rclb
pop
pop
mov
or
mov
push
cmpsb
outsb
jmp
ljmp
lds
mov
add
mov
sbb
lods
cld
ret
aam
dec
mov
test
mov
enter
leave
inc
call
push
xor
mov
xor
mov
xor
mov
xor
xchg
mov
aaa
xchg
mov
cmp
mov
xchg
cmp
mov
xchg
sbb
rcr
test
gs
or
mov
xchg
mov
int3
enter
call
push
fwait
icebp
popa
mov
sub
dec
lret
xor
ss
mov
fmulp
jg
cmp
cmp
ds
inc
lret
inc
dec
inc
jno
jae
hlt
inc
jns
mov
pop
fisubs
pusha
xchg
loopne
popa
cmc
popa
popa
push
popa
xlat
popa
pop
popa
fsubs
popa
fldenv
popa
movsb
call
cmp
cs
lods
push
mov
icebp
mov
adc
decb
pop
sub
xchg
fwait
cltd
imul
push
mov
push
pop
mov
cld
pop
in
or
in
dec
out
addr16
test
imul
jmp
insb
test
in
test
outsl
test
lock
jb
repnz
je
hlt
test
jbe
imulb
subl
mov
xor
push
scas
mov
push
mov
mov
jecxz
adc
scas
fdivl
lret
jecxz
adc
add
out
pop
jb
sub
or
lock
xchg
cmpl
add
xchg
pop
push
filds
pusha
add
stos
sub
mov
arpl
enter
jmp
faddp
call
nop
into
rorb
iret
push
push
xchg
rclb
xchg
loopne
cmpsl
sbb
sub
mov
dec
stos
cmpsb
scas
stos
shrb
stos
fisubl
mov
push
into
xchg
ja
inc
fisubl
or
imul
int
aam
push
pusha
cltd
loopne
call
clc
pop
add
sub
or
test
dec
call
dec
fldt
mov
fiadds
pop
xchg
inc
mov
add
mov
pop
sub
test
adc
mov
cmpsl
mov
cmc
and
loopne
icebp
call
in
dec
ret
sub
lret
fstpl
or
jmp
sbb
into
imul
sarb
sarb
fldl
mov
pop
test
gs
xchg
adc
aam
fwait
xchg
cmp
fistl
jle
pop
or
ret
xchg
test
dec
je
out
adc
mov
movsl
cmpsb
xchg
mov
mov
mov
lods
mov
mov
sahf
stos
aam
mov
xchg
mov
cmp
fstpt
pop
out
and
mov
pop
jne
sbb
pushf
mov
shlb
rcll
push
xchg
push
xchg
xchg
push
xchg
xlat
xchg
fcoms
pop
xchg
ficoml
pop
xchg
fcoml
ficoms
pusha
xchg
loopne
popa
fisttpll
inc
push
ret
rol
adc
xchg
inc
xchg
lds
inc
mov
lret
add
dec
popa
leave
popa
dec
popa
lret
popa
lret
mov
dec
popa
int
dec
add
popa
push
popa
shlb
popa
shll
popa
shlb
popa
shll
popa
push
add
popa
push
popa
xlat
popa
pop
popa
fsubs
popa
fldenv
popa
fisubl
adc
xchg
fmul
pop
xchg
inc
pusha
inc
loopne
popa
shlb
inc
xor
ss
cmp
cmp
ds
inc
lds
inc
movb
dec
inc
enter
leave
inc
dec
inc
lret
inc
dec
inc
int3
inc
dec
inc
int
dec
inc
into
inc
dec
inc
iret
inc
push
inc
rolb
inc
roll
inc
rolb
inc
roll
inc
aam
push
inc
aad
push
inc
inc
push
inc
xlat
inc
pop
inc
fadds
inc
jge
sbbb
test
enter
xchg
cltd
mov
icebp
call
adc
cmp
ds
inc
rolb
and
leave
xlat
fistpl
test
pop
adc
push
mov
fldl
jecxz
les
addr16
cld
add
add
mov
dec
add
xor
add
test
dec
adc
push
out
cld
jmp
mov
popa
shll
adc
rcll
push
fwait
test
push
test
fsubrs
pop
test
fldt
pop
test
fisubrs
pusha
test
inc
or
sub
ret
imul
push
mov
mov
mov
inc
into
ja
pop
popa
and
adc
xchg
js
lcall
test
mov
xor
pop
mov
inc
pop
or
imul
test
inc
addl
ret
mov
mov
loopne
popa
lret
popa
dec
popa
or
xchg
mov
jp
popf
xchg
aas
inc
enter
push
xlat
xchg
cmp
push
mov
mov
inc
xor
ss
addr16
ds
inc
or
inc
adc
sbbb
mov
mov
lret
jmp
xchg
mov
xchg
out
sahf
test
mov
and
inc
mov
fdivrl
add
aad
or
pop
or
push
push
push
sub
cmc
adc
sub
test
mov
ss
scas
push
sbb
testb
ret
test
daa
xor
ss
cmp
mov
rcrb
fdivs
mov
sarb
cli
movsb
sti
test
data16
inc
aas
xchg
or
aad
xchg
or
dec
xchg
mov
icebp
popa
xor
call
mov
jae
push
pusha
xor
popa
cmp
sbb
xchg
inc
inc
mov
gs
xchg
mov
mov
cs
rorl
pop
stos
ds
enter
sti
inc
cld
std
inc
inc
jo
mov
leave
mov
mov
mov
mov
mov
stos
mov
dec
mov
iret
mov
cltd
roll
push
add
add
roll
push
add
add
aad
push
add
add
xlat
add
fadds
pop
add
add
fiaddl
pop
add
add
add
fldl
pop
dec
pop
pop
popa
fbld
cmp
inc
mov
mov
inc
mov
mov
dec
mov
lret
cmp
dec
inc
int3
inc
dec
inc
int
dec
and
jmp
mov
push
mov
fsubs
inc
xor
push
jne
gs
rolb
dec
inc
jne
mov
in
xchg
mov
mov
jbe
cmp
roll
inc
cmc
inc
inc
mov
cwtl
int3
pop
xchg
pop
xchg
cmp
fstl
adcb
jne
gs
adc
lcall
insl
inc
popa
call
fs
inc
push
dec
rol
dec
xor
mov
or
ret
xor
ss
popa
inc
icebp
or
ret
cld
ret
std
inc
inc
inc
add
movb
add
add
in
rorb
leave
add
lret
add
add
add
int
dec
add
inc
popa
push
popa
shlb
popa
shll
adc
xchg
push
xchg
shrl
push
mov
mov
push
push
xchg
pop
cmp
pop
and
out
pop
fiaddl
pop
add
add
dec
test
popa
pop
adc
test
popa
iret
call
ficoml
test
movsl
inc
xor
ljmp
dec
mov
leave
pop
dec
cmp
dec
inc
lret
inc
dec
and
out
dec
int
dec
add
push
adc
movsl
adc
xor
outsl
cmp
adc
xchg
inc
jns
jp
sbb
pop
iret
inc
dec
loop
inc
mov
xlat
int
pop
or
or
sub
dec
or
in
push
mov
adc
stos
adc
sub
pop
inc
fisubs
dec
filds
lahf
adc
ljmp
mov
cs
add
test
xchg
test
bound
test
xor
mov
leave
rorl
rcrl
pop
push
pusha
push
xchg
leave
movsl
push
mov
mov
xor
adc
fcoms
pop
pop
call
sbb
int
jmp
adc
ljmp
nop
data16
adc
pop
xlat
popa
cmp
xchg
mov
dec
insb
xor
push
xlat
subl
outsl
push
rolb
je
iret
push
and
lret
dec
xchg
pop
xchg
call
ret
inc
lcall
movsl
mov
dec
test
in
enter
roll
xchg
push
xchg
aad
push
xchg
xchg
push
xchg
xlat
xchg
pop
xchg
fcoms
popf
scas
lahf
ret
or
jmp
cmp
sahf
add
gs
pop
xchg
sahf
mov
scas
pusha
dec
xlat
icebp
rol
stc
sbb
fisubs
dec
aaa
push
ss
ret
jne
mov
mov
xchg
jg
xchg
orl
sub
xorl
cmpsl
cmp
cmp
cmp
ds
call
sub
xorl
jne
test
add
stos
les
lds
jle
xchg
add
leave
xchg
dec
xchg
lret
xchg
dec
xchg
int3
or
mov
lahf
pop
inc
leave
fld
fldenv
arpl
sub
add
repz
cli
sbb
push
inc
and
or
mov
ljmp
out
shl
or
orb
adc
or
push
push
loopne
popa
out
or
shr
adc
xchg
mov
mov
sbb
mov
jne
fs
mov
test
or
shlb
popf
sbb
and
sbb
pop
out
enter
aam
xchg
sub
adc
rcr
sub
pop
fisubs
pop
out
addr16
adc
adc
pusha
adc
popf
mov
sub
cmpsb
push
stos
aad
mov
or
popa
dec
fsubrp
pop
mov
push
pusha
mov
mov
xchg
popa
js
pop
add
rcrb
xchg
fwait
gs
and
stos
fmul
mov
dec
adc
mov
jno
mov
xchg
inc
xlat
inc
fiadds
and
out
sbb
pushf
mov
ljmp
mov
cltd
ffree
sbb
sbb
push
mov
mov
mov
flds
mov
mov
inc
lock
and
inc
movsl
or
daa
stos
or
mov
pop
out
mov
cmp
xlat
or
pop
in
mov
out
mov
mov
mov
cmp
add
fildl
push
mov
cmp
mov
stc
jle
xor
sbb
rcrb
mov
jne
gs
cmp
push
stos
lea
xchg
iret
in
subb
cld
xchg
stc
inc
leave
ljmp
lods
add
inc
or
mov
xchg
pop
mov
mov
fadds
inc
jne
gs
cmpsl
test
mov
test
sbb
adc
iret
push
inc
test
xlat
push
mov
jns
lcall
rcr
call
or
xchg
jae
lock
xchg
imul
mov
adc
or
push
xor
sbb
fucomi
test
push
leave
add
pop
leave
dec
push
sub
ret
lea
stos
shr
inc
out
adc
dec
cmp
pop
xchg
pop
xchg
fimull
stc
or
fldl
pop
add
add
filds
pusha
push
mov
movsb
inc
mov
scas
push
mov
mov
mov
enter
int
push
dec
push
imul
cmpsb
inc
inc
sarl
mov
sbb
std
sbb
fcmovne
sbb
bound
and
cs
cmp
xchg
xchg
push
or
mov
pop
mov
fstpt
pop
jmp
add
add
loopne
icebp
sub
ret
push
cltd
shlb
sbb
pop
popa
dec
call
nop
jno
cmp
pop
pop
adc
cmc
xchg
push
dec
sbb
push
movsl
push
mov
mov
mov
xor
adc
push
out
fistpl
popf
pop
and
loop
mov
cmc
subl
cld
fisttpl
pop
iret
shl
fbld
cli
inc
or
push
mov
inc
mov
xchg
cli
ja
add
adc
push
and
mov
in
pop
adc
mov
sbb
push
push
jg
aad
push
mov
sarl
push
mov
inc
cmpsl
pop
mov
movsb
pop
mov
lea
inc
lea
push
cltd
inc
pop
xchg
fldt
pop
sbb
adc
add
inc
rol
adc
xchg
inc
sub
mov
mov
push
mov
dec
jmp
add
add
add
into
add
iret
dec
fcmovbe
popa
push
cwtl
inc
movsl
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
xlat
push
fnsave
mov
aam
sbb
faddp
sbb
int3
vpunpckhqdq
mov
xchg
inc
movsb
dec
stos
dec
dec
cmp
cmpsb
inc
lret
mov
dec
aad
dec
mov
iret
jle
cmp
push
and
adc
add
nop
push
popa
aam
mov
pop
push
in
lret
fadds
pop
add
add
add
fistl
fsubl
popa
frstor
popa
pop
popa
fistps
xchg
xchg
loopne
popa
adc
xchg
xchg
ret
test
pop
xchg
dec
popf
popf
or
les
fisttps
or
bound
mov
scas
dec
sbb
pusha
mov
mov
mov
stos
inc
scas
ret
jb
mov
mov
inc
fstpl
popa
aam
xor
and
cli
dec
fistpl
mov
xchg
dec
xchg
int
dec
xchg
into
mov
push
sar
push
sub
dec
xlat
pushf
mov
adc
ljmp
jecxz
ret
add
inc
loope
xor
pop
rolb
outsl
or
add
xchg
out
dec
or
pusha
xchg
xchg
lret
cmpsb
adc
inc
scas
push
xor
mov
xchg
decb
repz
out
pop
sub
xchg
decb
cltd
iret
xorb
in
pop
add
add
sbb
ret
fcmovnu
pop
dec
movsl
loopne
popa
fadds
inc
jne
gs
xchg
ret
test
mov
movsl
lds
inc
mov
adc
fldl
mov
pop
mov
mov
dec
mov
into
mov
push
mov
sarl
push
pop
rcrl
cmpsb
push
test
ds
repnz
pop
add
shl
adc
subl
inc
mov
jbe
lahf
adc
fists
mov
fidivrl
sbb
pop
je
push
pop
aad
pop
popa
fistps
movsl
loopne
popa
hlt
inc
dec
add
adc
les
stc
and
add
popf
test
push
mov
pop
push
loopne
test
push
push
stos
ficompl
loopne
cmpsb
pop
std
xchg
pop
add
add
fimuls
adc
test
inc
xchg
ret
test
fstl
inc
popa
mov
push
enter
dec
mov
lret
fimuls
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
aad
push
popa
xlat
js
sbb
mov
fsubrs
pushf
fdivrl
aad
pop
popa
fisubs
popa
fbld
popa
popa
clc
inc
and
movl
ret
jmp
ds
inc
inc
inc
movb
add
jp
xor
xchg
lret
cmp
dec
inc
int3
and
aad
dec
xchg
into
cmp
inc
shlb
push
dec
fsubrl
fidivl
filds
popa
fsubl
popa
frstor
popa
ficomps
pusha
mov
mov
fadds
inc
jne
and
aad
inc
or
inc
popa
lds
popa
popa
inc
jne
pop
inc
mov
test
and
lret
add
add
mov
mov
push
mov
sarl
sar
push
loopne
xchg
push
or
inc
push
inc
xlat
and
shlb
fidivl
pop
mov
mov
mov
mov
mov
mov
adc
push
pop
push
inc
dec
pushf
pushl
stos
xchg
push
or
xor
sbb
dec
test
iret
mov
push
movsb
mov
dec
mov
sbb
sbb
mov
pop
mov
ficoms
inc
or
mov
lret
push
aam
mov
fimull
ds
pusha
insl
leave
xchg
jb
sbb
inc
in
or
repnz
and
orl
jns
inc
movl
mov
repnz
mov
xor
scas
fwait
xchg
xchg
rcrl
mov
or
or
xchg
mov
pushf
cmp
cmp
sti
push
shlb
cmpsl
pop
dec
mov
push
into
mov
xchg
jmp
into
xchg
jne
pop
aaa
xor
sbb
dec
mov
adc
xchg
lods
sub
xchg
mov
lods
mov
adc
mov
loop
clc
std
sti
dec
pop
std
cmpsb
mov
call
mov
test
nop
mov
adc
cmp
imul
mov
rolb
xor
adc
ja
sbb
lahf
xchg
cmp
inc
sahf
and
push
mov
and
imul
mov
mov
xchg
jg
pusha
popa
and
push
ret
leave
call
xchg
mov
inc
push
cmpsb
scas
mov
loopne
test
or
in
cmp
lock
nop
sub
nop
inc
push
xor
xor
and
cli
lret
dec
xchg
sbb
cmp
and
pop
movl
or
incb
out
mov
push
test
jne
or
add
push
mov
cmp
xor
and
out
adc
ja
pop
sub
lret
jae
aam
stos
push
mov
jg
add
cli
dec
xchg
push
call
dec
pop
jb
xlat
add
dec
pop
sub
or
movsl
scas
mov
xchg
jno
lahf
xor
and
fistpl
or
mov
aaa
mov
sub
sub
int3
sbb
pop
xor
add
sbb
dec
mov
cltd
shrl
lods
imul
lahf
iret
add
cmpsl
adc
cltd
xchg
xor
fcomps
fcompl
xchg
ds
pop
cmp
shll
push
add
inc
lret
jmp
pop
leave
sub
mov
call
mov
popl
aad
xchg
push
lea
dec
adc
mov
jne
enter
cmp
mov
mov
mov
inc
mov
jecxz
and
cmp
stos
push
mov
push
ficoms
xchg
mov
fldl
or
xlat
mov
scas
nop
mov
mov
mov
jle
rolb
and
push
adc
push
nop
dec
insb
xchg
fnsave
call
xchg
inc
xchg
ret
xchg
test
sub
or
pop
jmp
lds
ret
movl
xor
hlt
sbb
mov
and
in
sub
cld
inc
push
dec
push
mov
pop
int3
sub
dec
lock
mov
jbe
dec
js
mov
mov
std
lret
mov
mov
or
xchg
push
jmp
movsb
mov
sbb
jge
ds
mov
mov
adc
sbb
decb
lock
add
jbe
cmp
aas
popa
mov
test
jne
xor
inc
sbb
mov
lods
movsl
mov
sbb
push
mov
lods
bound
fstpl
mov
sbbl
xchg
pop
cmp
loopne
lods
popf
cmp
xchg
lea
xchg
mov
mov
cwtl
fldenv
vcvtsd2si
loop
icebp
stc
sarl
fisubs
stc
nop
sbb
fisttpll
or
sub
movsl
notb
inc
movsl
pushf
xor
stos
mov
inc
lret
or
push
into
mov
cltd
rol
or
stc
dec
scas
movb
cmc
xchg
mov
data16
cmp
mov
jp
aad
es
cwtl
cmpsl
mov
adc
mov
mov
call
sub
adc
cli
imul
rclb
mov
adc
cwtl
or
andl
push
rcll
rcll
pop
sub
jnp
mov
out
adc
iret
fimuls
mov
pushf
ret
fidivl
dec
xchg
fst
cmp
aam
inc
and
push
add
fidivrs
mov
mov
call
xchg
lret
xchg
loopne
popa
and
pop
lods
cli
mov
jmp
pop
xor
jecxz
dec
rclb
in
sbb
cmpsl
repnz
subb
push
fisttps
sub
dec
or
jle
sbb
aas
fildl
shrl
in
jb
aad
dec
xlat
pop
andl
mov
cltd
inc
xor
das
setne
shll
and
push
int3
push
cmpsb
push
bound
xor
pop
cmp
mov
adc
popa
in
sub
xor
push
cmpsb
out
and
sti
in
adc
mov
adc
xlat
add
or
xchg
mov
pop
cs
adc
shlb
push
pop
pop
cltd
aad
dec
cmpl
loopne
daa
mov
sbb
aam
das
inc
xchg
mov
aas
jmp
insl
ja
popa
sub
scas
sbb
and
push
cmpsl
nop
sbb
aam
mov
cmp
inc
sbb
movsl
mov
mov
movsb
pop
mov
repnz
shrl
int3
mov
mov
inc
inc
test
adc
xlat
dec
test
cbtw
push
movsb
sub
pop
insl
popa
add
inc
cmp
outsl
sub
dec
mov
inc
lds
icebp
push
fildl
or
adc
aad
cmpsb
pop
or
xchg
pop
mov
popf
aam
test
fists
mov
dec
and
test
push
adc
ds
dec
leave
xlat
enter
pop
stos
xor
push
push
insl
push
xchg
adc
mov
adc
xchg
mov
xlat
xor
jmp
loopne
sub
das
stos
jae
or
mov
pop
cmpsb
pop
xchg
or
mov
nop
inc
rorb
or
mov
sbb
aaa
dec
xchg
add
pop
lret
call
jmp
adc
outsb
push
xchg
mov
movl
xor
cmpsl
cwtl
dec
dec
xchg
jg
push
call
cmp
cwtl
pop
gs
xchg
push
test
fldl
mov
add
in
inc
xchg
repz
or
dec
add
xchg
or
pushf
nop
movsl
mov
cwtl
adc
dec
sub
shr
dec
add
mov
fbld
ficoms
in
outsb
xchg
outsl
and
push
leave
inc
sbb
xor
ja
push
or
leave
xor
shlb
out
dec
adc
dec
mov
or
lods
jb
icebp
push
sbb
pop
push
cmp
loope
pushf
and
loopne
rcrb
sbb
shll
arpl
fiadds
mov
or
repnz
popf
inc
fs
leave
pop
or
push
std
cld
or
add
add
pop
mov
loope
iret
les
scas
loop
sub
icebp
rcrb
xor
xchg
ss
decb
cmpsl
sbb
filds
sub
mov
sub
pop
aam
adc
test
pop
adc
fwait
dec
mov
loopne
popa
pushl
test
stos
cltd
scas
jp
mov
enter
std
push
popf
dec
pop
dec
pop
adc
ret
push
push
or
popl
data16
je
pop
inc
cmp
adc
vmwrite
xchg
and
shll
add
test
xchg
add
fwait
rcrl
pop
sub
pusha
inc
adc
pop
jae
lret
mov
pop
push
push
sbb
xchg
and
out
stos
adc
pop
sbb
cmpsl
das
xchg
or
xchg
or
push
sbb
push
jg
adc
push
jne
adc
insb
add
cmp
sub
sbb
leave
loopne
iret
loop
aad
lds
pop
inc
mov
dec
xchg
fiadds
mov
push
loopne
pop
loop
shlb
lods
shl
rcrb
and
mov
add
rcr
xchg
xor
adc
add
pop
movsl
std
push
ret
pop
xchg
sub
cmpsl
or
mov
adc
icebp
std
dec
mov
xchg
adc
dec
pop
fisttpl
fwait
and
or
adc
xchg
pop
je
mov
jmp
push
pop
lret
adc
imul
push
fdivr
test
stc
lret
jp
popa
adc
add
cmpsb
gs
insl
movsl
std
xor
sbb
ror
add
push
and
mov
adc
jle
and
adc
mov
dec
mov
push
ss
ret
adc
xchg
in
mov
incl
add
hlt
pop
neg
or
insb
int3
fldcw
ficompl
mov
lods
sbbl
cmp
int
mov
mov
lods
ljmp
cmp
movsb
sbb
iret
ja
sbb
pop
inc
je
add
cld
xchg
sbb
outsl
xchg
cmp
sbb
push
xchg
insb
mov
ljmp
mov
mov
push
pop
lods
dec
sbb
jge
inc
sub
cmpsb
stos
stos
lret
outsb
lods
aad
outsb
mov
adc
mov
int3
lcall
js
push
inc
cli
popa
xchg
filds
xchg
or
into
dec
adc
xor
xor
inc
jnp
mov
aad
inc
mov
push
or
push
test
lods
inc
fwait
daa
and
mov
in
loopne
or
sbb
pop
mov
inc
inc
mov
faddl
cltd
or
xor
xor
jecxz
add
cmpsb
pop
xor
notl
in
push
mov
add
les
out
iret
pop
mov
inc
push
and
inc
popa
enter
sub
add
push
fisttpl
pop
sub
dec
lods
push
xchg
xlat
add
fisttps
shl
cmpsl
test
pop
into
add
xchg
pop
and
fld
pop
out
pop
dec
fwait
jns
push
xchg
inc
sub
jp
adc
ret
fsubrs
cmp
cmp
inc
loopne
test
arpl
movsb
or
dec
sbbl
inc
xlat
dec
rcl
sub
or
sbb
inc
ja
mov
cmc
push
aam
fcmovne
inc
icebp
mov
mov
lock
sbb
xchg
out
stos
push
das
out
add
or
mov
das
jns
das
jns
das
dec
shll
mov
xor
pushf
cmp
xchg
test
insl
dec
fst
loope
call
stc
pop
iret
push
and
jns
test
pop
fidivrs
push
test
aad
shlb
inc
push
dec
mov
xchg
cmpsb
outsb
mov
mov
test
pushf
ficoms
dec
add
fistps
lcall
sbb
sar
bound
addr16
inc
test
mov
movsl
mov
jmp
sub
lock
pop
test
sahf
test
dec
and
add
outsw
mov
jle
aad
sbb
mov
loop
enter
mov
mov
cmp
push
and
dec
xor
dec
fwait
lea
aam
shld
int3
push
popw
push
nop
stc
rol
loopne
push
inc
lcall
cmp
mov
loopne
mov
push
sub
jo
xor
mov
push
sbb
nop
xor
aad
adc
xchg
mov
xchg
jne
movsb
cli
xlat
fxtract
call
lret
ret
and
mov
gs
sbb
mov
inc
adc
cmp
ss
sbb
pop
lea
xchg
dec
std
xlat
add
addl
ret
inc
xchg
or
lret
adc
nop
pop
mov
add
enter
dec
sbb
gs
mov
fists
mov
sbb
mov
imul
andl
out
pop
xchg
movsb
sbb
jp
mov
adc
lahf
nop
mov
pop
js
adc
add
movsl
sub
pop
add
add
push
mov
push
xlat
push
xchg
out
xchg
outsl
xchg
out
insl
jo
cmpsb
jno
push
jb
sbb
lcall
mov
jb
or
sbb
jo
xorb
sahf
std
inc
jns
aad
sti
call
mov
mov
outsb
inc
int
ja
jmp
or
stos
jbe
pop
subb
add
mov
std
fisubrs
rcr
or
rclb
sub
insl
popa
xchg
test
push
movsb
test
ffreep
imul
lret
adcl
push
addl
and
int3
and
pushf
leave
in
pop
iret
std
mov
loopne
push
fcomps
imul
cmpsb
stos
fcompl
sbb
inc
mov
push
mov
out
sub
mov
movsb
clc
dec
inc
xor
xchg
dec
cmpsb
push
sti
xor
xchg
sub
push
mov
std
popa
into
adc
sub
imul
cmpsl
out
stc
popa
xchg
add
scas
xor
cmp
mov
xchg
push
sbb
mov
add
roll
adc
push
cltd
sub
loop
andl
fcmovne
inc
xchg
or
loop
add
inc
test
cmp
mov
das
jl
xchg
adc
aas
mov
cmpsl
cmpsb
or
popa
sbb
xchg
jbe
fistpl
jg
int3
bound
dec
add
and
sub
nop
pop
add
loopne
out
sub
and
push
sub
fistpl
leave
call
push
cmpsb
enter
dec
dec
js
cwtl
jnp
pusha
sbb
mov
std
pushf
jge
push
rcrb
jae
lods
bound
sbb
jb
jns
sbb
inc
cli
popa
fisttps
pop
cli
fadd
sbb
call
fdivrs
nop
push
movsl
jnp
insl
test
cmpsb
cmc
stos
xchg
adc
push
fildl
fucomp
adc
hlt
push
cmp
sub
in
repnz
jne
sbb
cmpsl
sar
daa
cli
jo
jb
stc
aad
dec
lret
out
in
add
push
mov
add
or
jno
icebp
cltd
dec
dec
mov
mov
in
ret
mov
test
push
sub
adc
ret
and
cmp
sbb
jge
jg
push
pushf
push
sbb
mov
sub
push
mov
xchg
adc
aas
inc
lret
in
fcomps
mov
inc
push
mov
pop
mov
and
jnp
xchg
bound
test
cmp
popa
mov
fstl
pop
mov
mov
push
aad
xchg
pusha
aaa
loopne
adc
or
sahf
nop
addr16
mov
push
inc
addr16
lea
popa
add
and
sub
in
pushfw
mov
push
in
scas
loop
xor
les
push
mov
cmp
iret
inc
icebp
aam
ret
movl
test
addr16
adc
lods
popf
dec
and
sub
fldt
mov
sub
jo
adc
mov
orb
cltd
add
out
push
push
rolb
ljmp
mov
dec
loopne
dec
push
sub
sub
mov
jmp
sbb
shrl
stos
sarb
mov
cmp
mov
adc
lods
repz
repnz
je
adc
sub
test
stc
fistps
add
xchg
imul
in
ror
test
sbb
cmp
cli
adc
scas
mov
sub
xchg
push
sub
test
push
fsubl
and
adc
imul
add
inc
movsl
mov
mov
negl
rorb
push
and
xor
fisttpll
and
mov
inc
lea
loop
or
push
xchg
or
add
push
aam
sub
push
rcr
xor
movsb
loopne
cmpsb
adc
or
and
add
ljmp
fs
or
fists
pusha
lock
leave
aaa
pop
cwtl
sbb
adc
ret
sub
fsubs
ljmp
int3
enter
cmc
gs
xchg
mov
imul
mov
push
rorl
xchg
xlat
out
push
sub
inc
rcr
cmc
iret
lds
push
mov
add
stos
xor
sbb
pop
push
jmp
aad
push
out
ret
sub
add
ret
sub
cli
sub
or
leave
pop
or
inc
push
dec
or
jle
fstl
popa
rorl
mov
shl
ret
add
lods
repz
lret
cmpsb
and
jne
xchg
inc
add
xlat
ljmp
sbb
mov
add
pop
test
outsb
data16
xchg
adc
add
xchg
mov
loopne
inc
and
add
roll
mov
xor
ss
mov
and
xor
loopne
lds
dec
outsl
in
loopne
fcoml
adc
or
or
ja
mov
push
je
sar
dec
scas
mov
clc
daa
daa
adc
push
push
aaa
or
adc
mov
jg
xor
cmp
jg
mov
cmp
aad
aaa
popa
stos
and
mov
dec
cmc
roll
and
xlat
test
jbe
pop
je
pop
xlat
or
lret
sbb
or
push
fwait
js
push
push
sbb
movsl
mov
jp
mov
adc
test
xchg
lret
fcoms
int3
adc
jle
dec
repz
add
push
jge
xor
mov
mov
pop
leave
repz
and
out
filds
or
rcr
out
dec
mov
paddsb
or
addb
sbb
xor
add
out
test
dec
fcmove
dec
xchg
sub
dec
cwtl
push
rep
jmp
daa
aad
es
fcoms
inc
dec
in
and
adc
test
adc
enter
js
push
push
push
add
sub
fbld
dec
xchg
gs
and
xor
dec
lret
shlb
xchg
mov
outsb
and
sbb
xor
inc
mov
xorl
and
lahf
cmp
clc
repnz
push
add
fistps
sbb
or
lea
cltd
cmpsb
sub
push
movsb
fdivrl
shrl
xchg
xor
js
dec
mov
cwtl
mov
inc
call
xchg
or
movsl
add
xchg
adc
and
aad
outsb
lret
pop
or
pop
or
sub
scas
fists
fwait
cltd
int
jecxz
xchg
push
sub
shlb
inc
push
out
icebp
sub
cmc
sub
dec
and
add
lahf
loop
xchg
notb
lds
cmp
and
out
mov
pop
cmp
ljmp
lds
lret
push
lcall
orl
xchg
mov
stc
and
int3
shr
cmp
xlat
sub
ljmp
sub
adc
push
aad
and
add
lock
push
adc
hlt
dec
movb
pop
sbb
pop
je
andl
push
inc
rcl
inc
pop
dec
scas
adc
neg
xchg
sub
push
ljmp
push
bound
and
xchg
popf
push
pushf
movsb
subb
xorl
mov
and
test
adc
incb
loopne
push
enter
imull
fbld
and
loopne
decw
mov
xor
lret
sbb
sahf
pushf
loopne
and
mov
mov
add
add
ljmp
and
dec
gs
gs
pushf
movsb
dec
xor
mov
cmp
dec
es
mov
push
out
stc
int3
pop
cld
subb
push
sub
push
add
push
push
mov
xchg
adc
sub
cmp
pusha
push
and
add
fildl
nop
adc
and
sub
pop
add
xor
cmp
nop
leave
cltd
outsb
test
sbb
mov
repnz
orl
and
push
xchg
pop
xchg
inc
jmp
subl
pop
aam
test
or
std
sbb
stos
int3
xorb
popa
push
and
cmp
push
jmp
or
jo
add
loopne
outsb
mov
in
fcomps
pop
nop
cmpsb
sbb
jb
test
inc
leave
stos
jne
inc
vcvtpd2dqy
adcl
fadd
sub
cmp
mov
push
jmp
insl
mov
xchg
cli
jbe
rclb
stc
stos
cmp
push
and
out
dec
cli
scas
or
sbb
insl
das
cld
lcall
ja
cwtl
or
test
ja
xlat
insb
mov
or
pop
xchg
insb
ja
sbb
jmp
mov
or
jmp
insb
sti
in
cld
insl
std
in
xchg
and
out
mov
test
stos
cwtl
lock
ficoml
mov
and
jne
fwait
jbe
idivb
or
loopne
data16
loopne
xchg
stc
lods
jp
sbb
popa
shrl
push
mov
pusha
xchg
mov
scas
sahf
in
incb
jp
add
aaa
add
sbb
cmpsb
inc
in
pop
mov
mov
das
mov
inc
jno
sbb
mov
or
aad
mov
js
pop
xchg
sbb
pop
sub
inc
jae
xchg
jl
pop
sbbl
push
xchg
gs
mov
movsb
xor
push
stos
mov
bound
pop
sbb
lret
xchg
or
jno
pop
mov
cmp
iret
push
mov
sbb
mov
sub
add
sub
aad
mov
add
inc
add
cmp
push
adc
adc
imul
gs
adc
pop
jne
shll
mov
cmp
bound
daa
imul
das
mov
fstps
lods
imul
adcl
adc
sub
lret
aam
push
repnz
xchg
enter
iret
mov
jecxz
push
stos
in
decl
push
into
js
std
faddl
inc
test
enter
lea
lahf
notl
lds
sub
push
mov
mov
sbb
movsb
int3
pusha
dec
cmp
mov
les
adc
mov
inc
cmc
loop
in
or
mov
stos
mov
or
push
xchg
add
fcmovu
dec
jne
dec
add
out
adc
sub
inc
or
jbe
sbb
fdivr
sbb
jne
and
adc
ljmp
das
cmp
mov
out
sbb
js
sbbl
adc
and
push
inc
ret
inc
jae
int
xor
addr16
add
bound
jmp
bswap
data16
dec
hlt
push
xchg
push
xchg
test
movsb
lcall
fildl
adc
fstpl
inc
sbb
jg
lods
cld
nop
xchg
sbb
push
add
dec
dec
fcomps
mov
or
push
je
pop
shrl
mov
fwait
sub
int3
mov
xchg
pushw
aas
push
fwait
loope
or
incb
arpl
cmp
adc
xor
pop
in
xchg
movsb
add
loope
int3
and
js
and
lret
jb
jbe
outsb
mov
xlat
movl
arpl
ljmp
sbb
inc
loop
arpl
andb
gs
push
sbb
xchg
mov
or
xchg
test
andb
pop
xor
fstp
mov
cmp
aad
jbe
mov
cmpsl
and
sbb
sbb
jne
dec
and
imul
pop
movsb
mov
inc
leave
ror
repnz
fldl
shl
out
dec
cwtl
mov
add
sbb
cmp
fistl
cmp
xchg
stos
add
loop
sahf
mov
pop
xchg
cli
je
frstor
into
adc
mov
mov
les
std
pushf
hlt
or
lret
sub
out
int
movsb
out
addl
adc
dec
or
and
adc
test
ljmp
mov
inc
iret
mov
adc
jne
gs
icebp
lcall
mov
dec
loop
inc
sti
push
test
xlat
dec
lods
mov
pop
sbb
pop
pop
dec
push
mov
je
xlat
popa
dec
data16
enter
fiadds
sub
adc
mov
dec
repz
cmp
xchg
iret
inc
lods
and
add
push
cmp
mov
into
push
call
pop
inc
dec
pop
push
push
loopne
xor
xchg
test
roll
ror
call
inc
pop
inc
or
fiadds
lcall
int3
xor
pop
popf
mov
mov
ss
sbb
push
in
roll
dec
rclb
adc
jne
inc
insl
push
mov
stos
mov
pop
stos
or
add
loop
lret
inc
mov
loop
mov
mov
ficomps
inc
aad
cmp
popa
sbb
xchg
pusha
gs
aad
jae
and
adc
aad
fimuls
mov
fcmovbe
adc
cmc
or
or
out
popa
push
movsl
rep
xchg
mov
xchg
jg
aam
mov
pop
subl
cmp
jmp
pop
xchg
fisttpll
mov
mov
lock
pop
sbb
mov
or
imul
loopne
dec
lea
test
adc
fcoml
fcmovbe
lret
mov
shrl
and
lret
test
xlat
sbb
je
inc
mov
mov
add
xlat
dec
push
in
movl
sbb
mov
adc
xchg
xor
lret
xlat
mov
inc
inc
subb
in
out
dec
int
test
pushf
jne
xor
cmp
mov
mov
lcall
pop
xor
xor
stc
fldenv
loop
mov
mov
jl
nop
test
xor
fstl
jne
gs
movsl
mov
stos
sbb
mov
cli
cmp
pusha
into
rcll
or
cmpsl
out
push
int
cmp
sbbb
pop
pop
and
xlat
lds
addr16
add
mov
enter
jb
loop
mov
pop
push
cld
adc
dec
mov
pusha
push
movsb
or
cmp
cmp
or
adc
imul
fcmovnu
or
mov
jg
add
add
xlat
fdivr
out
fwait
int
pop
adc
lock
lods
xor
pop
pushf
ljmp
int3
push
or
mov
push
enter
mov
fwait
xlat
adc
push
mov
pop
or
adc
loopne
sub
lea
push
fstl
cltd
aad
pushf
fiadds
fisubrs
push
adc
sub
mov
cmp
xlat
jle
adc
gs
cld
xlat
pop
sub
xlat
adc
in
jmp
mov
push
lcall
or
inc
shlb
call
scas
xor
mov
sub
nop
mov
sbb
adc
dec
int3
xchg
shlb
cmp
movsb
adc
decb
fisttps
shl
aad
inc
call
cmp
loopne
out
dec
and
push
popf
and
sub
lods
xchg
mov
ret
cmpsl
add
inc
fisttpll
dec
pop
push
and
popa
sbb
icebp
mov
or
xchg
cwtl
test
xor
mov
adc
push
adc
push
sbb
sbb
add
add
cmpsb
sub
cli
aaa
in
pushf
lahf
scas
sbb
movsb
cli
dec
bswap
lcall
inc
sbb
or
push
stc
fistps
jb
cwtl
pop
or
inc
lea
ljmp
ljmp
mov
sub
adc
add
mov
adc
cmpsl
fisttps
lods
xor
pop
pop
popf
push
add
and
mov
in
sbb
dec
push
mov
inc
call
push
jl
xlat
sbb
out
hlt
xor
rorb
add
jmp
push
pop
fucomip
test
push
adc
adc
subl
or
jns
incl
lret
mov
repnz
push
pop
pop
popa
xchg
cmpsb
cmp
push
scas
loop
jbe
inc
sti
std
mov
lret
xchg
movsb
jb
or
popa
ds
inc
call
lret
xchg
and
andb
fcompl
notl
pop
aas
push
fbld
imul
lods
repz
pop
xor
cmp
adc
mov
jge
and
fld
bound
in
movsb
cltd
scas
add
ja
or
mov
into
icebp
ss
fwait
dec
fsubs
push
jmp
or
fstl
lea
pop
xor
jecxz
cmpsb
fcomp
dec
lods
jecxz
aam
stc
sbb
das
and
iret
rcll
nop
das
ljmp
out
mov
pop
xchg
movsb
push
adc
and
push
mov
stc
push
cmp
leave
fisttps
imul
mov
and
icebp
push
pop
cs
call
hlt
movb
and
fisttps
xchg
jge
add
jle
push
adc
in
sahf
sub
mov
addr16
mov
sbb
aad
in
nop
test
xchg
push
je
dec
addr16
mov
mov
mov
mov
adc
mov
cmpsl
push
fildl
mov
test
push
nop
push
and
sbb
jb
cltd
and
push
leave
cmpsl
int3
stc
push
lcall
addr16
ret
dec
cld
es
sbb
dec
inc
ficoml
dec
cmpsl
repnz
adc
pop
and
rcl
xchg
xor
and
rolb
xchg
mov
leave
push
sbb
fisttpll
add
ja
lcall
bound
dec
dec
add
repnz
jmp
add
sbb
pop
je
ja
or
add
push
ljmp
sar
test
push
adc
fidivl
mov
adc
sahf
fcompl
or
test
xor
leave
fcmovu
pop
adc
push
inc
addr16
or
fidivrs
cmpsb
or
test
fldl
mov
int3
mov
cmpsb
dec
mov
fidivrl
cmpsl
push
icebp
filds
scas
pop
neg
pushf
js
fwait
mov
cld
pop
xchg
jmp
inc
out
pop
xchg
fcomip
pusha
mov
add
aad
ja
mov
pop
rclb
repz
jle
popa
pusha
popa
call
pop
xchg
adc
push
scas
in
outsl
fisubl
in
xchg
lret
data16
dec
pop
sbb
cmpsb
popa
lcall
or
into
lods
jmp
pop
cs
push
movsl
push
mov
mov
aad
push
jne
xlat
add
es
pusha
data16
mov
std
push
test
push
leave
pop
fptan
pop
enter
lret
test
filds
loopne
fstl
or
add
fisubs
push
mov
popa
scas
popa
lock
test
xor
xor
test
ljmp
and
adcl
test
add
out
mov
pushf
xchg
les
fadds
and
xlat
xchg
loop
enter
or
loop
xchg
or
sbb
adc
xor
push
mov
adc
mov
aad
jp
leave
dec
and
adc
add
or
movsl
fs
int
pop
pusha
sub
out
int3
sahf
sub
pusha
mov
aad
mov
pop
sahf
or
data16
std
sbb
aad
sbb
xchg
cmpsl
or
cmp
sbb
xor
mov
sbb
mull
dec
lret
push
adc
jns
int
incl
loop
adc
subl
xor
jnp
test
cmpsl
xchg
inc
push
stos
jae
xchg
xchg
repnz
insb
repz
adc
and
adc
jle
dec
adc
cmpl
pop
adc
pop
pop
dec
int3
ficoml
jne
mov
iret
int
ss
js
xchg
and
fstp
arpl
cmpsl
pop
cltd
cmpsl
ljmp
push
adc
sbb
dec
xchg
gs
movsb
or
cmpsb
cmp
mov
and
xchg
and
sbb
call
addr16
adc
push
stos
xchg
adc
push
lahf
stos
test
add
sub
rclb
fnstsw
pusha
and
bound
or
adc
jp
adc
add
mov
push
mov
test
pop
or
add
sub
into
sahf
and
popa
cmpsb
ds
pop
pop
xchg
roll
leave
shlb
push
inc
sbb
xchg
pop
adc
iret
pop
lods
repz
ljmp
daa
in
adc
inc
mov
loop
and
xor
jg
xor
sbb
xlat
push
je
xor
jecxz
call
adc
jl
inc
inc
jle
pop
inc
mov
sub
cmp
and
shlb
push
xchg
test
cmpsb
ds
lcall
lods
std
in
test
repnz
xchg
cmp
mov
or
fstpl
fbstp
xchg
sbb
test
bound
icebp
xchg
fldenv
movsb
pop
call
test
popa
sub
inc
stos
push
nop
sbb
loopne
mov
push
sahf
sbbb
push
jg
sbb
jl
xlat
ret
mov
pusha
loop
cltd
push
or
sbb
mov
dec
sub
inc
lret
dec
xchg
adc
popf
cmpsl
iret
stc
push
fs
sbb
push
sbb
pop
in
add
cld
cwtl
std
incb
addr16
shll
push
pop
in
mov
les
or
mov
addr16
mov
dec
lret
xchg
test
call
jmp
dec
push
lret
xor
jmp
dec
adc
fstl
pop
imul
dec
cmp
lock
add
aad
sub
in
ficomps
add
lods
sub
or
push
push
dec
cmp
push
pop
or
pop
fld
jmp
inc
cltd
movl
sbb
sbb
jecxz
inc
inc
pop
xor
aas
adcl
addr16
sub
rcrl
rcrb
shrl
mov
xchg
mov
xor
sbb
jl
aas
add
dec
pusha
hlt
aad
ret
add
mov
pop
cmpsl
pop
popa
movsl
stos
test
addr16
lcall
push
lods
scas
adc
out
pop
xlat
cmp
lahf
lret
push
test
cmpsl
sbb
stos
jo
add
cmc
dec
inc
sub
stos
fsubrs
dec
addr16
jmp
dec
push
push
mov
xchg
push
int
pop
lcall
push
dec
push
dec
add
xlat
adc
pop
call
loop
fcoml
sub
and
int3
and
mov
cmp
jnp
xchg
mov
scas
sbb
sub
mov
stc
loope
popl
cli
add
ffreep
int
lret
leave
pop
out
add
insl
test
sub
loopne
cmpsb
std
sbb
sti
pop
dec
subb
test
je
xchg
or
sbb
lods
push
dec
sub
int
in
jns
pop
mov
adc
push
push
movsb
shrb
int
or
ret
test
testl
jno
push
push
push
add
aam
push
mov
pop
pop
fistpll
pusha
and
dec
dec
inc
cmp
loop
es
dec
lods
dec
inc
ret
movsb
rcl
inc
gs
cmp
push
sub
jae
or
sti
add
mov
xchg
push
aas
icebp
inc
call
jp
lahf
inc
test
les
test
nop
xchg
test
fisttpll
addb
and
inc
je
fstl
xchg
or
out
add
insl
mov
sbb
pop
iret
adc
hlt
sub
lods
jb
push
xor
jnp
sbb
lds
cmpsl
sbb
fnstsw
pop
jg
jae
or
lcall
sbb
mov
or
fcomps
dec
cmp
mov
inc
jmp
int
lds
adc
push
push
pop
out
addl
mov
enter
adc
and
fmull
lea
jne
push
popa
ret
popa
fisubrs
dec
cmpsb
outsb
jmp
movb
mov
in
push
out
scas
xor
jg
iretw
pop
lea
adc
or
or
int
les
iret
setno
mov
mov
cltd
mov
inc
ljmp
mov
test
xor
and
xor
lods
mov
test
jg
and
add
add
or
xor
insb
dec
inc
leave
stos
add
push
mov
sbb
pusha
inc
pop
or
inc
aaa
mov
and
imul
cltd
mov
mov
test
mov
mov
and
pop
and
iret
xlat
sub
cmp
loopne
sbb
pop
mov
rcrl
push
mov
orl
repnz
int3
inc
stos
inc
fstp
popa
dec
popa
enter
pop
movsl
dec
mov
mov
mov
ljmp
dec
sub
jmp
shll
adc
xchg
aam
push
mov
fimuls
stc
and
or
dec
fstl
add
cmp
fbld
pusha
pop
lret
mov
inc
or
je
mov
test
fwait
nop
jne
and
fs
out
mov
jns
fucomp
pop
pusha
or
dec
add
mov
lahf
daa
fisttps
sbbb
push
frstor
daa
popf
mov
pop
cmp
sbb
mov
pushf
pop
aaa
xchg
mov
scas
and
fmuls
mov
popa
loopne
test
xchg
js
scas
xchg
or
push
push
mov
sbb
cmp
push
sub
jns
popf
sbb
dec
ja
addr16
xchg
xor
cmpsl
pop
sbb
dec
aaa
sub
lahf
mov
push
pop
sbb
push
fimull
lcall
sbb
jns
cwtl
mov
adc
hlt
fcoms
fwait
inc
lret
mov
les
inc
pop
in
mov
pop
pop
fsubs
popf
cli
dec
lahf
daa
and
in
or
or
addl
mov
xchg
adc
pop
sti
out
and
daa
aad
and
bound
aad
pop
xchg
fwait
inc
xor
fcom
call
push
pushf
shlb
std
sbb
adc
insb
inc
mov
mov
xchg
add
call
fidivrs
jns
lret
scas
inc
add
or
fisubrs
xchg
add
mov
aad
xorb
jecxz
addr16
sahf
js
push
test
and
jne
xchg
iret
xor
enter
call
pop
add
dec
xchg
sub
dec
aad
mov
xchg
fsubrp
imul
hlt
aam
ret
movsb
mov
nop
jb
insl
cmp
xchg
xchg
xlat
insl
cmp
pop
xor
add
adc
sarb
sbb
mov
repz
mov
sbb
dec
xchg
push
push
gs
add
ficoms
adc
mov
aad
inc
iret
sub
aas
xchg
push
mov
jb
adc
aad
cli
outsb
sti
cltd
dec
dec
jecxz
mov
sub
push
mov
filds
scas
or
jl
sahf
and
enter
call
sbb
fldl2e
jecxz
data16
adc
fisttpll
and
out
mov
sbb
int3
test
pop
cld
cmp
sbb
sbb
aad
inc
dec
out
mov
add
lcall
enter
mov
cmc
or
stos
xor
ret
mov
mov
icebp
test
enter
add
mov
andl
adc
dec
inc
sub
cwtl
aam
mov
jbe
pop
pop
xor
lcall
cmp
mov
or
sbb
fcomp
dec
cwtl
call
mov
xor
leave
imul
aad
sub
mov
sbb
mov
push
repnz
jne
cld
adc
and
xlat
int3
jp
mov
pusha
std
test
or
dec
cmpsl
and
test
dec
movsl
fidivl
sbb
push
inc
pop
dec
addr16
mov
or
mov
adc
sbb
ja
sbb
int3
insb
fidivs
rol
stc
loop
jbe
push
adc
mov
push
data16
stc
push
data16
push
in
push
jbe
push
mov
xchg
out
loop
icebp
dec
pusha
and
cmp
daa
mov
xchg
or
mov
pusha
iret
data16
or
push
cmp
sbb
mov
stos
fcom
push
int3
daa
inc
cli
push
nop
add
mov
repnz
jmp
xlat
scas
lret
fisubrs
push
adc
sbbl
sub
xchg
movsb
jae
ficompl
sbb
int3
stos
cwtl
pusha
and
test
out
pop
adc
cmp
fistl
int3
call
dec
lea
sbb
push
xchg
lods
pop
lds
pop
pop
dec
pop
cmpsb
push
lea
dec
add
popa
ret
inc
add
inc
ljmp
mov
fcoml
add
test
inc
std
or
xchg
jo
test
std
adc
push
sbb
lret
sub
and
imul
inc
mov
out
shlb
fists
fiadds
stos
addr16
pop
addb
addr16
pop
cld
dec
inc
xor
js
mov
push
pushf
or
cltd
push
sub
ljmp
mov
xchg
jg
sbb
pusha
loop
test
sbb
mov
mov
test
lret
fadds
imul
fadds
pushf
xchg
loopne
cmp
int3
out
rclb
stos
adc
add
sahf
bound
jnp
ljmp
jo
lahf
stos
mov
enter
std
adc
dec
inc
jnp
stc
adc
push
popa
push
and
fstpl
js
or
lcall
inc
rcll
sbb
in
or
or
xor
sahf
sbb
pop
xchg
or
loop
cmpsl
jo
pop
stos
xor
dec
push
sbb
push
aam
mov
sub
jns
or
ret
jecxz
cmpsw
stc
test
ret
xchg
inc
add
ffree
cmpsb
xchg
sbb
hlt
and
push
sub
enter
ss
lcall
loopne
cmpsb
adc
or
push
lods
xorl
outsb
sbb
andl
or
stos
in
mov
adc
cmp
fcompl
ret
ret
sbb
pop
mov
rcr
inc
inc
sub
pop
mov
xchg
sbb
pop
imul
imul
jbe
dec
xchg
sbb
xlat
and
inc
fisttpl
fisttpll
pop
xchg
pop
add
cmc
mov
pop
mov
push
adc
in
pop
fisubrl
hlt
cmpsb
imul
pop
xchg
add
rcr
nop
out
sub
cmp
adc
ljmp
in
adc
inc
xchg
pop
enter
lods
ja
dec
jp
cld
lea
push
inc
lods
cmp
lods
js
push
scas
sbb
fists
testl
outsl
ficompl
xchg
addr16
fidivl
xchg
or
sbb
cmpsl
inc
fidivrl
nop
sub
mov
cmpsl
aad
add
xchg
xchg
bound
in
dec
loopne
arpl
jne
push
push
mulb
in
fimuls
xchg
inc
pusha
dec
add
cltd
into
test
mov
pop
iret
fiadds
stos
mov
leave
stos
mov
push
xchg
jo
sub
divl
pop
xlat
or
sub
pop
orl
mov
dec
mov
cwtl
mov
mov
or
in
push
mov
mov
cmp
pusha
test
sub
mov
ret
nop
push
ret
aaa
mov
inc
jl
fisttps
push
testb
lret
cmp
les
fmull
stos
dec
aad
mov
xchg
popf
sti
lea
and
push
fadds
ljmp
mov
std
pop
jle
jg
out
mov
addl
mov
loop
js
les
popa
inc
negb
xchg
sbb
push
addr16
sbb
or
inc
pop
pop
aad
into
addr16
popa
or
fistl
aad
scas
xchg
xchg
and
cmp
fstps
das
push
xchg
dec
xchg
xor
xlat
pop
mov
gs
test
shll
push
pop
sahf
test
loop
or
adc
pop
fadds
push
lods
dec
inc
xchg
dec
sub
popw
roll
movsb
out
or
ffreep
adc
lea
loop
lret
mov
push
xchg
push
adc
stos
fsubl
sbb
clc
data16
mov
cmc
orb
outsl
and
push
dec
pop
mov
sbb
imul
negb
push
pushf
out
push
mov
dec
mov
dec
or
cli
push
pop
sti
aas
cld
cmp
loop
mov
in
out
push
sub
mov
jmp
mov
int3
add
lea
pop
mov
test
pop
xor
or
or
adc
cmp
ret
mov
call
inc
int3
or
jnp
push
scas
je
or
xlat
or
jecxz
push
xor
aaa
sbb
dec
fmul
test
mov
mov
aas
rcrb
jp
cwtl
fs
mov
sbb
int3
bts
cmc
sub
fstpl
pop
adc
xchg
jae
sbb
pop
pushf
popa
mov
mov
mov
fwait
xchg
stc
adc
pop
push
xchg
in
add
pop
pop
add
fcoms
cli
lret
add
mov
add
mov
enter
fisubl
dec
inc
sub
mov
pusha
lret
add
arpl
addr16
adc
inc
mov
insl
lods
sahf
mov
data16
popa
xlat
outsb
rol
pop
push
xchg
add
xor
rcrb
cmp
mov
addb
fstpl
mov
or
push
mov
movsb
push
jp
movsl
dec
jbe
aad
stos
sub
fists
xor
sbb
xlat
test
not
popf
mov
fwait
inc
dec
xor
xlat
pmaxub
or
loopne
dec
mov
jbe
fistpll
and
fisttps
lret
mov
or
dec
mov
xchg
sbb
lods
lcall
dec
push
mov
fiadds
stos
adc
dec
fcompl
lds
pop
inc
inc
sub
xlat
popa
ret
test
push
mov
cmpl
fildl
loop
inc
inc
pusha
insb
lret
inc
jb
test
dec
push
addl
orl
xchg
or
cmp
mov
filds
lret
inc
mov
mov
jmp
mov
inc
sub
sub
xchg
xor
sbb
fcoml
mov
push
xor
jne
enter
and
nop
push
mov
clc
pop
mov
addr16
test
popa
mov
loop
xor
jg
pop
push
xlat
cmp
xchg
or
std
adc
rcr
pop
add
or
fistpl
or
adc
sahf
sub
push
or
lea
pop
xchg
je
lahf
pop
ficomps
lret
or
ja
pop
lods
pop
sbb
pop
fists
lods
xchg
int3
shll
and
repnz
dec
push
cmpsb
imul
mov
jb
inc
xchg
aam
mov
adc
mov
jecxz
cmpsb
xor
sahf
push
mov
addr16
push
or
popa
or
sub
mov
mov
notb
enter
lcall
enter
pop
lret
dec
stos
sarl
mov
loop
pop
adc
add
cltd
dec
fistpl
ja
push
push
aad
dec
mov
push
jbe
aam
push
pop
inc
push
or
xchg
das
inc
push
add
int
arpl
jecxz
fs
pop
gs
push
data16
test
adc
iret
xchg
pop
mov
cmp
inc
mov
xlat
mov
jg
dec
sub
dec
mov
inc
dec
and
jae
or
imul
mov
jb
jo
loop
sbb
fists
or
icebp
fcomps
sbb
in
push
inc
dec
xchg
cmp
sub
cltd
pop
push
inc
push
inc
xchg
push
insb
dec
fwait
loopne
loop
mov
adc
and
sbb
arpl
lret
rcrl
sbb
cmp
xchg
cmpl
mov
sbb
push
adc
mov
inc
test
cld
push
mov
sbb
sbb
aad
add
aas
loop
jae
add
incl
sbb
cld
aad
jmp
repnz
dec
or
cli
mov
movb
mov
dec
out
inc
mov
mov
cld
lret
push
stos
test
push
data16
adc
xor
push
scas
and
inc
adc
popa
repnz
iret
inc
or
cli
cld
iret
add
cltd
inc
decb
push
adc
aam
sbb
repz
arpl
int3
xchg
stos
lret
aad
mov
jb
xor
xchg
mov
into
daa
and
adcw
sub
push
xchg
fistps
mov
jp
and
test
adc
sbb
dec
push
push
or
push
or
mov
outsb
jmp
dec
pop
addr16
std
aam
dec
aam
enter
push
push
or
int
pop
bound
sbb
jle
inc
sbb
lret
adc
xor
imul
cld
loopne
mov
pop
repnz
cmp
mov
mov
scas
sti
mov
jbe
lahf
adc
jmp
xor
adc
xor
inc
add
loope
stos
fldl
pop
lods
push
rorl
mov
sub
aam
mov
dec
sub
fstpl
mov
push
push
movsl
xorb
and
dec
xlat
push
adc
inc
mov
rorl
or
adc
fsubrs
mov
add
cmpsb
adc
sbb
mov
dec
in
push
xlat
fucomip
filds
jmp
or
sbb
xchg
pushf
lret
movsb
mov
cltd
es
mov
insl
bound
arpl
xchg
push
pop
inc
loopne
enter
xlat
sbb
ret
dec
inc
dec
mov
inc
adc
clc
popa
iret
data16
add
inc
jo
adc
pop
test
int
inc
sub
inc
push
faddp
ret
mov
pop
push
pop
mov
orl
leave
enter
ljmp
dec
hlt
and
jne
xchg
mov
adc
rcll
notb
test
popf
adc
lods
xor
stc
popf
rclb
ret
adc
shl
mov
loop
aad
jns
sbb
sub
pop
inc
ret
xlat
lretw
nop
loope
xchg
dec
jmp
in
int3
adc
lock
cmpsb
data16
shrl
and
fcomp
xchg
and
push
push
mov
test
addr16
inc
inc
arpl
xchg
cmpsb
xchg
push
mov
loop
mov
addl
lcall
lods
inc
push
iret
xchg
rolb
mov
jb
sbb
addr16
icebp
lahf
sub
nop
data16
push
aaa
add
enter
lea
xor
adc
movsb
je
pop
cmpsl
cmc
std
pop
js
adc
push
insb
inc
outsb
pop
or
in
nop
stos
xchg
lds
lret
xchg
mov
mov
inc
push
jmp
lods
mov
jp
addl
sbb
mov
xor
stc
lds
shll
rorb
je
push
aas
push
and
jecxz
push
pop
test
mov
pusha
test
orl
adc
loop
shll
pop
ret
inc
jo
adc
mov
iret
cmp
jle
ffreep
vcmpsd
fwait
add
push
xchg
ljmp
sub
xor
loopne
mov
or
stc
fiadds
orl
inc
sub
or
in
xchg
loop
or
push
mov
pop
push
imul
or
cmpsb
push
lds
push
jnp
fstpl
mov
rorl
sub
adc
popa
and
fistl
test
pop
int
push
cmc
xor
fbstp
aad
jle
jb
add
cli
xchg
adc
mov
cmp
push
or
xlat
mov
cwtl
sub
int
mov
inc
push
mov
rclb
and
adc
sbb
push
inc
pop
pop
sbb
adc
ret
stos
add
dec
insb
mov
push
jns
mov
orb
fisubs
or
lds
xchg
pop
add
data16
jmp
xchg
xor
dec
stos
repnz
int
stos
test
sbb
andb
pop
test
rorb
rcrl
or
cmpsl
into
pushf
frstor
pop
or
jp
fcomps
in
dec
ret
call
loope
jb
dec
mov
inc
mov
nop
fidivs
jne
dec
not
pushf
shll
pop
push
psrad
xchg
push
xlat
mov
pop
into
sub
fstpl
cltd
dec
and
xlat
dec
push
mov
adc
int3
shlb
fcoml
fs
add
inc
mov
lret
arpl
test
int
loopne
add
mov
dec
aam
jne
aam
adc
xchg
popf
addl
test
sahf
sub
push
push
fisttpll
push
dec
aad
in
mov
jb
sub
sbb
scas
int3
mov
dec
enter
push
dec
jge
orl
dec
lcall
test
stos
push
adc
dec
jb
adc
jmp
pop
inc
mov
aad
fstl
test
inc
lret
je
pop
shl
sbb
decb
pop
int
aam
lret
imul
sbb
insl
adcl
addr16
inc
popa
gs
pop
in
fisubrs
mov
mov
push
ffree
dec
mov
fstpt
ret
out
int3
or
dec
addr16
leave
push
loop
cwtl
fndisi(8087
xchg
sti
lods
movsb
sbb
lea
push
test
jb
pop
mov
cltd
repnz
push
mov
mov
int
dec
sub
ret
lods
pop
sbb
cli
sbb
movlps
negb
in
or
pop
loop
neg
xchg
sub
aad
jecxz
dec
dec
stos
rcl
fwait
cmpsb
mov
xchg
pushf
shlb
sbb
adc
pop
adc
dec
inc
fcoml
lret
adc
test
inc
sahf
xor
loop
jl
push
push
pop
lods
aas
inc
fisttps
nop
cmpsl
rorb
psubw
push
dec
lcall
push
stc
mov
push
in
orl
repnz
stos
fstps
mov
out
call
xchg
pop
aad
jno
mov
insl
ret
sub
mov
fcoms
insl
inc
xor
mov
fstpl
ud2
cmp
inc
loopne
mov
test
pop
lds
cmpsb
mov
push
ret
int
mov
shll
lea
push
xlat
int
cwtl
push
inc
add
cmp
xchg
in
out
mov
faddl
into
std
aad
add
or
push
push
pop
pop
fists
fimull
and
faddl
jnp
js
inc
or
push
int
jno
sbb
mov
sbb
lret
adc
lods
aad
jo
xchg
jne
xlat
cmp
into
or
rcr
mov
ret
push
fiadds
test
mov
sbb
push
rcrb
fistps
adc
inc
inc
ficomps
cmpsl
inc
int3
cs
popf
inc
iret
xchg
lods
inc
and
iret
push
mov
adc
in
nop
adc
jmp
fmul
sbb
mov
fistps
popa
mov
repz
roll
leave
adc
les
repnz
lret
fisttps
in
mov
std
pop
xchg
cld
adc
cltd
push
lea
sbb
mov
movsl
and
fists
xchg
mov
nop
mov
jmp
inc
ret
addr16
into
dec
dec
xchg
data16
jmp
mov
push
data16
xorl
aaa
fcompl
fcoml
fnstcw
in
pop
dec
inc
adcb
fstps
and
fmulp
loop
test
faddl
stc
mulb
pop
mov
adc
cmpsl
test
pusha
or
loop
lea
ret
movsb
xor
push
jo
sbb
jp
pushf
and
std
rorb
jmp
dec
inc
ror
sub
xchg
shld
and
aad
scas
popa
adc
roll
xchg
fisubs
into
cwtl
test
lock
adc
pop
xchg
pusha
in
pop
ss
pushf
shr
mov
adc
push
test
popf
lret
jns
pop
out
and
dec
xchg
popa
xor
mov
fisttpll
popa
sbb
pop
test
and
mov
es
ljmp
and
xchg
sbb
mov
cmp
sbb
dec
adc
add
sar
enter
cmpsb
cmp
push
and
loop
shl
mov
adc
movsb
xchg
sbb
scas
and
pop
lcall
imul
jmp
or
pop
pop
popa
pop
js
xchg
push
adc
lahf
int3
add
mov
test
imul
push
aad
mov
jne
adcb
sbb
mov
orl
add
mov
adc
rolb
mov
xor
sbb
repnz
pop
cltd
imul
bound
fcompl
mov
add
pop
add
push
or
out
jmp
imul
mov
push
sub
dec
sub
call
add
add
dec
ljmp
push
mov
sbb
loope
add
addl
loopne
cmpsl
ret
ds
push
mov
sbb
jbe
fstl
js
push
ja
and
or
push
mov
push
xchg
push
sub
xor
fldenv
ret
cmpsl
repz
sub
mov
std
adc
and
stc
in
pop
adc
pushaw
pop
pop
inc
mov
inc
icebp
sti
sbb
imul
loop
or
mov
insl
pop
loope
mov
data16
pop
mov
test
sub
ret
loop
sub
pop
sub
std
xlat
jle
jg
add
add
sub
ljmp
out
pop
or
push
jmp
or
sbb
push
mov
ret
loope
data16
fldt
pushf
dec
test
push
xchg
lods
stc
pop
mov
js
int
insl
mov
loop
test
xchg
fisttps
pusha
nop
pop
and
xlat
add
mov
int3
aam
cli
add
adc
dec
push
fcmovnu
push
rorl
push
mov
cmc
test
pushf
xor
pusha
fmul
or
sbb
sbb
insb
or
inc
cmpsb
add
push
pop
fiaddl
mov
and
add
pop
test
pop
andb
test
loopne
imul
pop
rorb
inc
sbb
jno
in
nop
mov
pop
test
adc
add
mov
adcb
add
test
or
mov
inc
outsb
out
cli
ds
rolb
xchg
mov
mov
inc
inc
cmpsb
or
add
inc
xchg
push
filds
mov
mov
or
ret
aaa
rorl
mov
fwait
xchg
pushf
out
into
or
repnz
enter
std
test
adc
in
test
sub
push
daa
cmpsb
push
jp
std
xor
inc
fildl
jne
dec
out
cld
xor
pushf
andl
mov
jp
pop
sbb
les
ljmp
or
lods
test
movsb
out
pop
out
adc
test
xchg
xchg
std
cmp
cli
fisttpl
out
push
out
nop
mov
repz
dec
and
add
pop
dec
outsb
inc
ja
pop
fs
pop
inc
aam
or
lea
and
dec
xchg
jne
ret
inc
or
mov
dec
es
ret
push
lret
cmp
std
inc
out
dec
call
dec
push
adc
xchg
push
inc
in
jmp
ret
sub
lods
inc
or
or
imul
test
iret
inc
nop
add
jecxz
xchg
cwtl
push
add
mov
adc
add
ret
and
fistps
jle
add
and
dec
vpsrlw
add
movsl
fisttps
das
add
jge
loop
ror
and
rcl
sub
sub
xchg
sub
sbb
mov
std
popa
int
sbb
ljmp
mov
popf
xor
loope
cwtl
adc
pop
and
fisubs
stc
pop
dec
dec
sbb
js
les
dec
mov
inc
sbb
pop
xchg
pop
push
and
rcl
adc
or
insb
mov
fiadds
loop
mov
iret
or
mov
movb
pushf
add
push
dec
fiaddl
movsb
jl
fidivrl
dec
and
push
dec
add
call
pusha
fadds
cmp
inc
xchg
clc
lea
add
fsubl
and
fstl
mov
popf
or
adc
pop
dec
test
xlat
inc
mov
sub
adc
add
or
repz
lret
lds
push
and
dec
ret
and
add
fmulp
xchg
xchg
jl
add
enter
shrb
loop
jg
adc
mov
loop
push
js
inc
test
fmulp
lret
mov
pop
mov
aad
sbb
lea
nop
dec
xchg
call
test
test
xchg
repnz
pop
inc
mov
pusha
pushl
cpuid
cltd
sbb
mov
loopne
cmpsl
stos
mov
mov
repz
loop
shl
inc
faddl
sub
shlb
xor
push
leave
popf
mov
add
pop
fwait
cmpsl
je
lahf
shrb
fstl
cmpb
pop
data16
sbb
xchg
sbb
ret
cwtl
int
or
fcoms
lcall
dec
gs
dec
sbb
pop
mov
sub
test
lret
lret
or
pusha
dec
pop
push
negl
mov
dec
iret
push
aad
mov
mov
add
inc
dec
cmpsl
inc
xchg
jmp
dec
and
rcrb
ja
mov
cli
jbe
scas
xlat
xchg
pusha
mov
xchg
or
lret
cltd
or
shlb
cmp
push
aad
test
push
stc
gs
adc
mov
xor
or
call
cmp
cmp
xchg
arpl
pop
sub
and
pop
adc
sbb
and
mov
mov
adc
addr16
orl
in
adc
test
sarl
xchg
leave
mov
mov
sbb
stc
rorb
cmpsl
mov
xchg
idiv
loop
fadd
push
mov
out
inc
shl
push
test
sub
and
push
sbb
xor
sbb
lret
push
stos
ret
cmp
xor
xor
or
or
enter
pop
sbb
out
push
inc
or
sub
sbb
mov
push
shrb
loopw
push
inc
adc
push
pop
test
leave
inc
into
lcall
cmpsb
movsb
dec
leave
add
loopne
data16
in
mov
leave
movsl
int3
or
mov
or
dec
mov
nop
adc
pop
aam
xchg
add
adc
sbb
fstl
imul
lea
inc
js
pop
in
into
pusha
adc
mov
adc
rorl
dec
ret
insl
bound
mov
xchg
push
mov
adc
cmp
add
pusha
dec
add
xor
xchg
stc
aad
cmpsl
and
jae
xchg
inc
pop
push
or
leave
xor
daa
sbb
adc
jl
push
sti
nop
or
sbb
lahf
add
and
push
or
or
pop
adc
cli
xor
push
cmpsb
sub
lods
sbb
adc
fidivrs
add
xlat
inc
xor
aad
push
push
ret
adc
adc
fildll
jl
rcll
int3
dec
psubsb
and
inc
ret
push
nop
sbb
sub
in
fisttps
mov
cltd
movsb
sbb
adc
mov
stos
sub
int
and
xchg
inc
jb
dec
xlat
pcmpgtb
pop
and
or
loop
cmp
xchg
pop
and
dec
adc
addr16
jmp
jae
ret
adcl
and
pop
adc
and
inc
fisttps
cltd
leave
and
push
loope
in
fdivs
das
mov
and
loop
sub
fisubs
dec
push
add
icebp
xchg
cli
lods
enter
jb
xchg
aad
pop
push
loopne
jl
inc
aad
scas
je
shll
mov
rclb
test
push
pop
test
hlt
lret
nop
nop
sbb
mov
inc
or
dec
pop
pop
push
push
lea
leave
mov
adc
fsubr
pusha
push
mov
add
and
mov
adc
pusha
or
icebp
push
subl
in
sub
out
push
test
sbb
adc
pop
negl
push
adc
test
call
in
addr16
mov
push
stc
xchg
or
rclb
pop
push
xchg
test
xor
push
sub
push
and
test
jns
rcrb
push
and
lahf
addl
fcmovnb
xlat
push
lea
pop
adc
push
mov
test
push
jmp
aad
or
loop
and
fisttpl
in
mov
xchg
dec
out
cltd
push
push
inc
daa
mov
rorb
push
adc
sbb
addr16
repnz
jno
sbb
loopne
push
movl
fsubr
or
outsl
xor
mov
dec
int3
mov
je
lea
rcrb
xchg
insb
stc
nop
jl
dec
or
jecxz
std
push
or
and
add
movsb
popa
iret
repnz
pop
jmp
sub
cmpsl
fsubr
popa
decb
inc
shlb
sub
push
inc
or
loopne
or
cmpsb
cltd
mov
notl
loope
in
or
mov
push
sbb
bound
push
xchg
sub
fldcw
lcall
add
lret
jg
dec
mov
stc
dec
lcall
sub
sbb
add
sbb
jb
pop
sbb
and
push
ljmp
ljmp
test
lahf
fdivl
mov
or
mov
rorb
xchg
mov
mov
cmc
mov
push
pusha
or
cld
xlat
xchg
iret
mov
lea
cld
mov
pop
pop
incb
into
iret
cmpsb
dec
in
dec
push
dec
xchg
jg
or
in
inc
or
arpl
lret
loopne
sbb
fsub
dec
iret
xchg
shld
ret
loopne
loop
push
lret
sbb
xchg
in
push
data16
popf
int3
jle
or
into
loopne
or
adc
fcoms
popf
mov
int3
mov
ljmp
adc
ror
inc
insb
ljmp
adc
or
inc
pop
stos
frstor
pop
rolb
push
adc
pop
mov
inc
pop
cmpsb
sbb
test
pop
and
std
inc
and
push
and
mov
lcall
nop
lret
lahf
loop
gs
dec
or
adc
mov
aam
and
dec
mov
roll
ficomps
pop
in
pop
and
adc
inc
leave
ljmp
dec
js
inc
push
inc
popa
jp
test
cwtl
cmpsl
ret
rcrb
dec
adc
int3
sbb
adc
fdiv
pop
mov
dec
xchg
ljmp
push
sbb
push
add
inc
add
ss
mov
nop
dec
adc
shll
push
push
push
and
adc
xchg
adc
mov
and
mov
fistpl
sub
aad
lods
ficoms
pusha
mov
dec
pop
lret
stc
mov
test
cmp
js
ficomps
inc
push
cmpsl
dec
in
ret
or
aam
xchg
test
test
add
jne
dec
movsl
mov
inc
addr16
push
jb
out
push
or
dec
faddp
test
push
sbb
loop
add
test
or
jno
cltd
jnp
sti
push
xchg
cld
pop
xchg
cmp
lods
dec
std
adc
fstl
notb
repz
int3
inc
stos
mov
xchg
test
bound
add
loop
test
xlat
dec
pop
push
cmpsb
out
inc
xchg
insl
lahf
rclb
je
or
leave
push
lret
pop
push
adc
andb
les
jecxz
lock
add
push
iret
push
cmpsl
pop
dec
outsb
ficoms
das
enter
inc
xchg
dec
movsb
sub
fists
mov
push
nop
test
cs
push
fadds
mov
push
xor
aad
in
sahf
and
xor
sbb
fcomp
addr16
std
and
sbb
pop
fsubl
mov
lea
push
frstor
iret
or
mov
sub
push
test
sbb
mov
jg
sarb
dec
data16
sbb
push
fnsave
add
add
xlat
fucomp
fbstp
fisttps
mov
lret
push
std
push
daa
inc
sbb
push
or
adc
xchg
cmpb
lret
pop
mov
neg
jmp
xor
push
imul
cld
addl
cmpsl
mov
xor
xlat
fadds
mov
adc
cmp
addl
or
xchg
test
je
shrl
dec
add
sbb
xchg
iret
roll
sub
push
shll
fisttpll
add
test
pop
and
popf
int3
dec
sub
xchg
rcl
or
call
xor
dec
cmp
aam
cmpsb
stos
leave
stc
imul
roll
dec
ret
push
xlat
pop
into
cwtl
or
scas
inc
or
das
pop
sub
adc
pop
push
xchg
sbb
adc
dec
nop
or
pop
mov
push
aad
mov
pop
dec
cmpsb
dec
push
pop
jae
inc
xor
add
fimull
jo
jno
icebp
cwtl
and
cmovle
mov
inc
push
add
loopne
cmpsl
ror
pushf
imul
mov
mov
cli
push
sti
pop
daa
xlat
rcl
pop
push
xchg
shlb
lds
fsubrl
adc
faddl
mov
and
inc
nop
movl
or
aad
mov
push
dec
and
sub
mov
cmpsl
and
in
pop
mov
ret
stos
testl
int3
dec
mov
and
xor
pop
stc
sbb
jg
cmpsl
loop
cmp
cs
fcmovnu
adc
push
les
xchg
dec
movsb
insl
xor
sahf
bound
call
push
dec
aad
adc
fstps
sub
or
fwait
out
pop
pop
daa
jns
or
xor
adc
inc
adc
sti
adc
and
std
call
fcmovnbe
ljmp
xchg
subl
nop
fisubl
movsl
je
mov
pop
adc
mov
mov
xchg
dec
cltd
cmpsl
pop
lret
dec
push
dec
ret
add
fcmovnbe
sub
sbb
mov
aam
pop
js
add
mov
pop
fisttps
xor
test
clc
inc
mov
cli
push
fistl
pusha
pushf
dec
fsubl
in
sbb
dec
xchg
rcll
push
push
iret
xor
pop
add
enter
les
les
rorl
punpckhdq
repnz
xchg
xchg
or
mov
ljmp
pop
test
leave
mov
fildll
pop
and
pop
sbb
ret
lods
dec
fisubrl
fnstenv
out
shll
addr16
sub
test
neg
xor
rorb
push
insl
inc
rcrb
fimull
pop
pop
dec
enter
repnz
xor
dec
adc
and
inc
shl
cwtl
mov
loopne
fcomps
or
fstp
cwtl
mov
fisttpll
loop
mov
sbb
pop
loopne
mov
adc
cmc
fildl
pop
test
sbb
dec
enter
int3
pop
push
pop
iret
setle
pop
push
push
fld
pop
inc
xchg
pop
or
lahf
or
ret
loopne
aam
mov
loope
and
sbb
adc
dec
mov
push
push
test
push
push
jle
xlat
xchg
pop
popa
pop
pop
xchg
movsl
pop
xchg
pop
sbb
dec
xchg
popa
rorb
js
addl
or
pop
add
in
pop
dec
cmpsl
sbb
dec
shll
lcall
dec
push
popa
push
popa
push
mov
pop
push
xchg
les
push
jae
xchg
adc
mov
pop
pop
cmp
pop
test
mov
mov
pop
sub
jbe
test
lret
jb
sbb
mov
dec
sbb
test
fimuls
repnz
cltd
push
stos
push
daa
push
mov
and
lds
out
iret
xchg
sub
dec
aas
pop
xchg
cwtl
aad
xchg
xor
leave
inc
sub
push
scas
or
and
and
fstpt
pop
jb
dec
pop
jl
addb
xchg
sub
add
pop
xchg
imul
pop
sbb
pop
push
sbb
lds
ljmp
or
mov
xchg
xchg
and
sub
and
rclb
and
les
or
dec
test
mov
dec
int3
sbb
dec
sbb
aad
inc
push
fistl
pop
and
hlt
ret
les
test
push
xchg
rorl
pop
dec
hlt
inc
in
push
add
sbbb
ljmp
pop
or
dec
lahf
pop
inc
inc
pop
adc
dec
ficomps
inc
dec
fst
popf
xchg
dec
xchg
dec
xchg
dec
js
xchg
sbb
lret
dec
push
dec
dec
dec
push
repnz
inc
jb
add
ret
sbb
add
xor
xchg
sub
int3
add
test
adc
dec
and
xchg
lret
andb
add
test
mov
out
push
inc
add
add
xchg
scas
call
inc
jae
test
in
call
add
mov
loope
lds
test
roll
dec
add
scas
jo
adc
mov
mov
lods
roll
mov
jg
xchg
xchg
cmc
and
mov
fiadds
scas
push
ret
inc
pop
movb
nop
data16
or
sbb
push
fucomip
inc
jbe
insl
xor
arpl
mov
pusha
xchg
xor
xchg
out
andb
insb
loope
and
mov
out
sub
scas
test
xor
mov
das
out
lret
fs
in
sub
xchg
in
or
xchg
push
in
mov
add
nop
fildll
mov
push
out
or
xchg
daa
mov
xor
mov
subl
push
xchg
dec
dec
mov
cmc
out
pop
dec
arpl
test
or
test
or
iret
stos
jle
jne
dec
inc
icebp
mov
cmp
add
icebp
jae
shl
add
lds
addr16
inc
testl
sbb
ds
sub
fistps
sub
shll
and
mov
loope
mov
aas
jno
ret
xor
cmp
sbbl
inc
mov
push
jecxz
push
sbb
andl
mov
loope
pop
imul
lahf
sub
loope
mov
xchg
in
dec
xchg
xchg
fabs
stos
mov
pop
xchg
mov
loop
cmp
call
out
and
and
in
loope
orl
add
ret
xchg
push
pop
pop
cmp
and
and
xchg
push
xchg
inc
mov
mov
mov
repnz
dec
cmp
push
loope
mov
dec
and
xchg
pop
mov
fwait
jle
cs
xchg
loope
adc
loope
jnp
sbb
loop
fwait
loope
mov
xchg
pop
lock
loope
pop
rcrl
or
xchg
loope
ret
pop
mov
mov
test
push
imul
pop
pop
les
ret
xor
xlat
add
loope
outsl
dec
scas
push
xor
sbb
pop
subl
sub
adc
pop
or
enter
mov
aad
jmp
add
sbb
sub
call
outsl
xor
scas
mov
in
dec
into
mov
test
xor
pop
cmp
iret
in
inc
testb
cmpsb
ret
shrb
daa
and
mov
push
outsb
fimull
mov
add
rcl
adc
xchg
cs
shl
mov
shrl
loope
adc
inc
call
out
orb
ficomps
sti
cmpsl
in
repz
xchg
xor
in
inc
loope,pt
fbld
je
fsubrs
and
sahf
xchg
and
les
xlat
lret
cmp
xchg
cmp
cmp
loope
pushf
mov
xor
hlt
inc
out
and
inc
pop
pop
and
xlat
mov
inc
test
fstps
loope
adc
lret
andl
sbb
xor
loope
pop
jp
into
mov
push
mov
aad
test
cmp
adc
mov
stos
xlat
push
clc
imul
pop
sub
inc
cli
pop
je
loope
lea
mov
inc
cmp
and
and
cltd
or
pop
stos
shrl
out
add
add
cmc
loope
adc
inc
daa
pop
mov
loope
outsl
mov
lret
xchg
pop
rolb
pusha
inc
stos
int3
out
sbb
icebp
fsubr
pop
js
leave
orb
cmp
out
divb
ret
mov
xchg
inc
je
push
aad
mov
xor
fiaddl
fcmovu
jmp
jmp
je
in
and
iret
mov
jg
lahf
dec
fiadds
int
out
loopne
cmp
mov
in
aam
inc
test
pusha
mov
mov
add
mov
movsl
inc
and
inc
jno
add
addr16
stos
cs
les
or
inc
aas
pop
pop
scas
loope
sbb
jg
mov
add
adc
leave
cmp
adc
add
fbstp
sub
mov
adc
push
in
inc
and
jp
aam
leave
lods
mulb
fnstenv
fildll
cmp
mov
insb
loope
jbe
jne
mov
call
leave
push
or
push
mov
shrl
fsubp
sbb
xchg
loop
loope
push
and
xchg
add
add
inc
dec
inc
stc
xorl
sti
mov
leave
je
mov
out
loop
test
add
add
cmpsb
sahf
or
call
fistl
scas
xor
inc
sbb
icebp
lods
test
inc
les
push
fisttpll
cmp
inc
lds
add
aas
jo
into
mov
dec
xor
js
pushf
or
ss
xchg
jbe
gs
jns
iret
sahf
sub
loope
and
loope
push
divb
lods
loopne
xorl
mov
cmc
lds
pop
mov
loope
das
sti
or
lahf
push
loope
cli
dec
sbb
loope
mov
push
mov
jp
loope
push
es
gs
popf
mov
xchg
pop
mov
and
xchg
fisttpl
inc
faddl
int3
and
and
xchg
fdivp
call
xor
ds
mov
insb
in
push
adc
cmc
int
mov
hlt
pop
and
adc
inc
inc
mov
idivb
dec
aam
pop
int
test
test
mov
mov
loope
add
push
cmp
shll
mov
outsl
push
fnstenv
iret
in
lods
ror
out
test
sub
mov
inc
push
mov
icebp
xlat
lods
mov
test
mov
sbb
loope
mov
mov
loope
dec
dec
sbb
ret
add
cmp
mov
sbb
jbe
adcb
mov
loope
mov
ret
sub
out
adc
sbb
cmc
cli
imul
and
dec
pop
loope
fisubs
fnstenv
mov
movsl
push
fdivl
mov
xchg
loope
cmp
cli
loope
sahf
in
fildll
stos
fimull
mov
sub
or
mov
cli
leave
pop
popf
bound
out
jae
mov
iret
mov
out
fldenv
sub
int
push
xor
daa
test
addr16
outsb
gs
add
fldenv
inc
loope
in
pushf
fs
or
loope
sub
mov
loope
scas
dec
arpl
mov
mov
popa
roll
loop
xchg
gs
add
rcr
and
pop
sub
lods
lahf
and
mov
and
add
rcl
loope
mov
fdivs
pop
adc
mov
nop
iret
aad
fisttpl
test
frstor
scas
and
pop
inc
inc
jne
push
fimull
loopne
loope
mov
jl
movsl
test
xchg
iret
cmp
xor
mov
sbb
push
test
shll
notl
ret
mov
stos
popf
pop
jecxz
pop
fmul
adc
movsb
xchg
jge
ret
repz
add
mov
and
std
inc
pop
sub
mov
ret
lods
in
xor
sti
ret
in
addl
dec
outsl
sbb
or
rolb
pop
jae
sub
call
in
mov
dec
outsb
mov
lret
and
aas
mov
ret
ret
push
fs
aad
orl
rorl
sbb
xor
fstpl
jle
mov
jp
add
inc
mov
pop
xor
cmp
mov
fstps
pop
push
or
dec
sbb
inc
pusha
outsl
enter
cmp
push
and
cld
or
mov
push
movsl
ljmp
loope
mov
loope
cmpsl
int
shr
or
loope
dec
or
inc
xor
push
stos
jo
pop
cmp
loope
cwtl
aaa
inc
jne
fdivs
mov
std
mov
xlat
sar
imul
mov
jecxz
sub
mov
scas
dec
mov
xor
add
mov
loope
mov
pop
and
hlt
loope
cmp
dec
loope
shll
mov
sub
loope
aam
fcomps
imul
shr
cmp
add
das
pop
orl
in
fists
aam
sub
mov
stos
sbbl
data16
shll
vshufps
inc
cmpsl
int
clc
cs
xchg
dec
fs
mov
fiadds
loope
dec
clc
and
loope
xchg
in
jno
jle
xchg
dec
mov
inc
add
and
iret
sub
pop
mov
sbb
cmp
jnp
push
push
loope
jmp
lret
xchg
loope
cld
sahf
in
lods
pop
add
lods
add
push
call
cmpsb
push
imul
call
push
or
mov
aas
fdivrs
push
cmp
push
loope
pop
fldcw
icebp
fs
inc
lods
dec
xor
pop
notb
cmp
loope
ficomps
nop
push
std
loope
rolw
jae
loope
dec
push
cmc
inc
or
jbe
pop
sub
lock
js
and
movsl
dec
ja
imul
cmp
rcrb
or
out
sahf
aad
push
das
fnstenv
sbb
cmp
pop
icebp
fsubl
shrl
mov
xchg
and
and
icebp
xor
loope
testl
stos
aas
push
cmp
out
and
pop
loope
mov
xor
ficomps
cltd
mov
loope
orb
lea
push
out
xchg
or
inc
push
jecxz
and
xor
mov
add
mov
add
sub
xchg
push
push
push
fmull
clc
mov
cltd
in
cli
stos
cmc
pop
xor
stos
sub
test
pop
hlt
jns
loope
cmpsb
pusha
daa
imul
mov
loope
js
push
arpl
mov
vpmullw
test
push
adc
ljmp
ret
add
loopne
and
lods
cmp
sbb
int3
fisubl
dec
repz
cmp
inc
daa
cltd
in
and
and
call
rorl
xchg
lods
daa
sbb
push
rcll
sahf
push
loope
ss
or
xor
loope
sbb
push
xor
sbb
popf
lods
cmpb
cmp
in
cmp
loope
xchg
jns
stos
out
in
mov
sbb
scas
xor
sub
shll
mov
sbb
adc
sbb
mov
adc
mov
loope
jmp
dec
lret
lods
popa
cmp
out
iret
loope
mov
and
xchg
lock
scas
inc
cli
cmpsl
fisttpl
sahf
and
ljmp
pushf
loope
xchg
and
mov
into
leave
test
mov
add
adc
lret
cmp
subb
xchg
dec
loope
ficompl
loope
cmp
cwtl
xchg
mov
xchg
fdivs
notb
lds
inc
test
loop
push
push
stos
lea
mov
aaa
mov
and
xchg
cmpsb
or
xchg
call
dec
daa
xchg
cmpsl
rcll
iret
das
rorl
jo
push
xor
cmpsl
or
sub
push
loope
pop
fistpll
inc
adc
and
mov
sub
not
xor
aas
adc
cmp
mov
test
int
fwait
loope
or
and
or
add
gs
pop
mov
ss
push
nop
and
out
xchg
enter
repnz
js
loope
fldenv
pop
xchg
adc
lret
fadds
loope
pop
loopne
mov
add
or
mov
loope
mov
es
cmp
loope
fsubrs
int3
loope
sbb
dec
lods
cmpl
shll
dec
and
push
dec
cli
hlt
and
jge
fsts
daa
loope
mov
mov
loope
mov
adc
mov
mov
loope
cmp
pop
xor
push
inc
mov
add
push
aaa
add
xchg
imul
repz
xchg
mov
aas
loope
jne
mov
adc
pop
pop
test
dec
sub
ja
jns
mov
lcall
and
inc
pushf
add
ret
in
and
ret
mov
push
call
fld
cmpb
leave
loope
jns
sub
lock
cmova
or
je
movsb
shl
sub
iret
or
xor
cmc
push
rol
clc
mov
loopne
push
shrl
pushf
push
mov
lds
out
scas
mov
je
sahf
pop
shll
fnstsw
stos
add
sahf
loopne
out
gs
cmp
add
and
adc
fstps
loope
adc
js
mov
fimuls
fiaddl
xchg
int
loope
das
dec
dec
dec
sbb
or
jp
and
mov
push
out
sbb
pop
push
imul
and
xchg
sti
loope
mov
pop
dec
popa
adc
or
loope
in
call
arpl
rorl
inc
sbb
das
and
ficoms
lods
std
mov
int3
inc
leave
loope
pop
flds
cmpsb
loope
imul
movsb
mov
xorb
sbb
mul
movsb
pop
int
mov
roll
mov
cmp
clc
xchg
leave
imul
loop
repnz
add
gs
mov
js
inc
mov
jne
jmp
jo
push
loope
stos
inc
jbe
cmc
adc
sub
ss
imul
cmpsb
push
push
pop
push
popa
clc
cmpsb
cltd
adc
mov
arpl
mov
aad
out
push
and
adc
and
dec
fcomps
add
int
cli
or
xor
lock
lea
mov
pusha
xchg
fsubs
out
dec
loop
or
insl
pusha
sarb
and
add
xchg
dec
in
ja
dec
cmp
in
pop
push
lds
movsb
fldenv
xor
xor
add
pop
shl
repnz
fwait
icebp
loope
xchg
out
enter
std
xchg
jp
rorb
push
jnp
pop
jns
jge
mov
test
push
mov
test
loope
or
and
inc
stos
into
stos
jmp
fldt
addr16
lock
xlat
cwtl
in
enter
test
fwait
ret
repz
xor
call
jne
aaa
out
mov
xchg
loope
jns
aad
orl
icebp
movsl
cmpsl
pop
in
pop
loop
shl
enter
test
aaa
loope
aam
lahf
dec
cmp
pop
mov
fstps
insl
pop
push
fbstp
clc
fs
repnz
lods
inc
out
cmp
int
and
pop
inc
std
outsb
and
push
fsubrs
dec
inc
lock
shrb
shll
stc
sbbl
inc
mov
push
cmp
insl
add
mov
or
jmp
popa
cmp
sub
aaa
lcall
mov
rorb
pop
push
dec
push
cld
hlt
stos
and
dec
inc
xorb
pop
aas
push
cltd
mov
add
movb
call
in
add
or
rol
inc
and
mov
mov
stc
clc
cmp
cmp
pusha
lea
jbe
sar
mov
shl
cmp
add
not
mov
dec
not
add
shrd
movl
mov
movsbw
movsbw
cmc
mov
stc
jmp
cmpsb
adcl
add
enter
adcl
add
adc
add
add
add
add
add
rcrl
test
pop
pushf
movl
jmp
clc
cmp
push
movb
call
call
imul
into
add
imul
xchg
and
fwait
aam
xchg
mov
and
mov
push
cld
pop
or
adc
sarb
es
imul
mov
mov
leave
cli
lock
xchg
out
mov
mov
out
adc
pop
aas
sbb
pop
pop
add
call
pusha
movb
movl
mov
movb
pusha
lea
jmp
movw
jmp
mov
lea
jae
bswap
mov
pusha
movsbw
mov
pushl
pusha
lea
jmp
pushf
jmp
lea
je
pushf
adc
pusha
pushf
push
lea
jmp
call
and
mov
clc
pusha
pushf
jmp
pusha
mov
jmp
movl
push
mov
movb
movw
lea
jmp
not
call
pop
pop
repz
pop
lock
aam
add
jbe
cmpsb
jle
insl
inc
sbb
sub
mov
mov
cmpsb
and
int
aas
insb
inc
imul
cmpsb
sub
imul
xor
mov
sbb
negl
jns
imul
xor
and
sbb
aas
sbb
or
mov
jno
rcrb
ret
adc
mov
jne
cmpsl
push
out
xchg
fdivs
imul
aaa
int
test
xlat
mov
fdivs
das
sub
idivl
loopne
pop
push
popa
jl
test
cmpsb
in
stc
mov
loope
nop
or
mov
movsb
jg
fsubrl
lea
sub
jo
mov
adc
arpl
mov
aas
sbb
lods
sub
adc
jbe
aas
pop
pop
mov
sub
mov
lahf
cli
adc
push
mov
or
xchg
inc
hlt
in
cltd
mov
ret
popf
out
call
aam
cmp
in
sti
jecxz
pop
add
lea
add
and
mov
push
mov
sbb
loope
pop
mov
pop
push
cwtl
pop
pop
pop
cmp
or
pcmpgtb
push
leave
out
and
inc
lds
inc
sub
inc
or
jmp
add
lea
int3
lock
test
insl
inc
popf
out
xchg
ss
cmp
clc
and
inc
jl
ret
push
inc
daa
shrb
das
inc
mov
pop
push
xchg
in
les
pop
lods
push
into
push
jbe
into
adc
test
repnz
out
inc
les
mov
xchg
xchg
push
loopne
xlat
popf
xchg
sub
lret
gs
sbb
mov
xor
cli
gs
sub
cmp
pop
in
int
sub
sub
push
xor
dec
pop
add
xor
ljmp
xor
sbb
int
imul
cmp
stos
fwait
clc
add
pusha
xchg
sahf
mov
pop
sbb
into
cltd
jbe
clc
mov
dec
cmp
lret
mov
js
lds
jl
stos
and
inc
ret
jmp
aas
sbb
adc
call
lea
je
call
push
mov
pushl
ret
lock
or
rol
jle
jg
mov
lcall
int3
lods
shlb
imul
rorl
aas
and
and
int
ds
inc
sti
imul
mov
sub
or
mov
outsb
xor
negb
xchg
repz
int3
lods
and
ficoms
xor
in
outsl
push
mov
sti
and
inc
or
xchg
and
lahf
mov
or
mov
push
dec
and
repnz
or
and
lds
adcb
mov
fwait
pop
and
aam
mov
adc
clc
in
imul
adc
jg
mov
xor
in
mov
xlat
insl
cmp
sub
pop
aaa
dec
mov
cs
xchg
out
js
dec
inc
mov
out
xchg
or
imul
jle
cmp
sar
mov
mov
addr16
mov
test
add
sub
pop
aas
sbb
adc
pushf
lea
ja
or
add
rol
or
sub
rol
adc
movzbw
add
shrd
bsr
mov
pushf
cmc
mov
bt
stc
cmc
repnz
pushf
pushl
push
lea
jne
seta
pusha
movb
pushf
mov
cwtl
call
call
xor
jmp
pop
setno
pusha
mov
xchg
mov
jmp
mov
in
or
add
lds
repz
in
xchg
push
insb
lods
inc
sbb
fnstcw
pushf
add
rolb
mov
add
data16
lret
scas
push
cmp
lcall
test
mov
dec
test
pop
cmpsl
int
insb
loop
rorl
pop
aas
sbb
in
jmp
add
pop
shl
clc
bswap
mov
cmp
cmc
test
call
stos
push
push
mov
push
lea
jmp
icebp
jno
ret
mov
jnp
mov
mov
mov
addr16
lock
mov
call
aas
mull
ds
jno
jecxz
jbe
sbb
mov
sub
xchg
dec
dec
add
xchg
notl
aas
sbb
ffree
inc
and
cs
cwtl
pop
mov
mov
or
sub
pop
jbe
stos
call
rorl
xchg
hlt
arpl
aad
adc
xchg
adc
fiaddl
xor
add
cmp
loopne
adc
test
rorb
lret
sbb
ljmp
lea
jno
push
movl
call
lea
call
pusha
pushl
lea
jmp
push
pusha
jmp
call
sub
mov
jmp
sub
inc
lock
sub
xlat
insl
add
mov
pop
or
faddl
hlt
ret
je
mov
addl
lcall
pop
pop
sub
xor
add
rorb
add
in
dec
pop
aas
push
cmc
out
call
clc
jnp
mov
lock
cld
xchg
outsb
or
push
call
cmp
or
test
sbb
daa
fs
push
ror
sub
popa
out
add
into
mov
pop
xor
sub
stos
mov
mov
pop
aas
push
mov
mov
pop
fmuls
xchg
xchg
loop
push
sub
ds
adc
xor
lcall
call
repnz
jno
in
push
or
loop
in
fstpl
cs
mov
and
fmull
andl
sub
cmp
loope
nop
sbb
movsl
movsb
cltd
ja
xchg
xchg
sub
xor
jge
test
loop
lret
cmp
dec
dec
cmp
aas
idivl
dec
jmp
push
pop
and
in
cmpsb
loope
push
std
dec
xchg
inc
std
fsubl
pop
mov
lea
add
das
stos
and
mov
and
cli
cmp
sub
jmp
call
pushf
movb
pushf
lea
je
stc
or
mov
shr
or
inc
add
pusha
mov
push
pushf
bt
test
pushf
jmp
bt
clc
rol
call
xor
xor
sbb
stc
xchg
in
fldt
pop
and
xor
repnz
jne
cmp
movsb
pop
jl
in
sbb
sub
mov
sub
or
mov
stos
shl
cmpsb
mov
or
movsb
rolb
inc
insb
iret
jge
mov
clc
repz
push
cmp
lahf
ret
mov
jmp
mov
jmp
movb
push
jmp
btc
mov
mov
stc
cmpb
movw
pusha
lea
jne
pusha
das
sub
setb
sub
neg
mov
bt
add
movb
pushl
pushf
mov
lea
jmp
xor
bound
repz
out
xchg
insb
enter
in
and
gs
push
push
dec
scas
testb
fdivrs
popa
pop
adc
add
jp
lcall
sahf
rorb
divb
mov
into
rorl
xlat
mov
pushf
inc
cs
pop
and
pop
popf
xchg
and
pop
pop
push
dec
cli
test
aam
or
lret
xor
mov
fstl
push
pusha
sbb
cmp
aas
adc
adc
imul
lahf
not
sub
pop
or
out
jg
scas
mov
cli
cmp
stos
decb
ljmp
sub
insb
jae
stos
push
adc
inc
jmp
push
xor
push
mov
sub
lret
call
ljmp
jg
imul
mov
and
jg
js
lahf
mov
adc
shll
jp
xchg
ss
pop
mov
test
lcall
lods
and
lcall
jno
inc
add
xchg
lahf
mov
in
bound
shlb
lock
mov
je
ljmp
mov
jne
cmpsb
pop
loop
rclb
daa
shlb
out
push
in
adc
adc
cmp
test
xchg
jno
aas
adc
or
nop
fwait
repz
xchg
cmp
add
mov
loopne
xchg
adc
jmp
xor
pop
ret
cmpsl
ffree
stos
fnstsw
ret
test
cs
push
push
add
add
add
cs
shrl
cmp
mov
sub
pop
adc
push
loopne
jo
daa
sub
sbb
sub
ljmp
pop
fcompl
inc
mov
sbb
pop
xchg
lods
mov
and
and
ret
pop
roll
es
push
int3
lods
pop
aas
adc
and
movsbw
movl
mov
lea
movl
pushf
call
push
movl
push
movl
push
lea
jmp
add
pop
ss
and
insb
mov
xor
arpl
stos
jnp
mov
xchg
sbb
gs
pop
or
push
jecxz
dec
cmp
mov
movsl
mov
xor
pop
stos
mov
sbb
data16
xchg
push
enter
sub
mov
insl
gs
sbb
sub
xchg
push
or
jno
pop
aas
adc
psubsb
mov
jl
fstpl
mov
push
jl
jl
pop
push
rcr
mov
je
sarl
popf
mov
rcrl
cmp
pop
jl
sar
popf
rcrl
jl
pop
popf
sti
jge
cmp
pop
cld
popf
cmp
push
sti
push
shll
lea
jne
setnp
sub
mov
rol
btc
call
pusha
jmp
add
pop
int3
fwait
xor
pusha
notb
jg
xor
cmp
mov
cmp
std
mov
mov
loop
push
push
mov
mov
pop
fistps
fadd
fldcw
jg
and
shlb
data16
lds
lcall
shl
cltd
test
lret
jb
push
std
sub
pushf
push
roll
mov
rorb
inc
les
inc
cmpsl
iret
or
outsb
mov
aas
adc
aas
adc
shll
es
push
and
xchg
in
inc
lahf
push
push
nop
mov
nop
pslld
push
in
in
push
jle
jbe
cld
sti
mov
cmpsb
in
shr
stc
scas
cmpsl
xor
mov
pop
rcrl
mov
lods
call
lods
in
sti
leave
ds
or
enter
mov
movsl
movsl
mov
arpl
dec
xchg
lock
xor
mov
inc
movsb
jae
negb
inc
jne
fnstcw
out
xchg
or
jnp
outsb
inc
pop
aas
paddsb
dec
mov
mov
xor
es
mov
movsb
xchg
lock
cwtl
pop
enter
lea
enter
adc
leave
and
and
popa
cmpxchg
out
push
mov
or
call
lods
cmpsb
movsl
fnstcw
jns
ficomps
push
nop
inc
inc
pop
mov
fdivp
mov
xor
or
dec
xchg
dec
call
mov
lods
popa
or
rcll
sub
cmp
aam
lock
dec
add
outsb
imul
push
or
pop
aas
setg
xchg
mov
nop
in
test
jo
div
and
jmp
popa
or
pop
mov
aaa
and
rcrl
sbb
xchg
mov
xlat
xchg
dec
cmpsb
pop
adc
std
movsb
inc
adcl
inc
xchg
fcoms
jge
gs
notb
loop
je
push
cld
pop
fwait
movsb
push
sub
push
mov
cmp
dec
fnstenv
jg
sbb
xor
xchg
and
sub
ficoms
shlb
pop
aas
prefetch
ret
adc
aas
lret
cmpsl
ds
sub
lahf
mov
sub
fstpl
and
imul
mov
and
lret
scas
into
mov
dec
popf
xchg
dec
test
je
jno
xor
mov
fwait
iret
das
movsb
lret
aaa
cmpsb
jo
jecxz
nop
lret
js
icebp
pop
mov
ficomps
dec
leave
je
jbe
mov
mov
scas
and
dec
and
ret
dec
outsb
popf
jbe
loop
push
jnp
sbb
mov
fwait
xor
loop
sar
inc
je
lahf
gs
in
dec
xchg
clc
iret
inc
shll
mov
jge
fnstcw
call
or
icebp
sbb
lods
xchg
je
in
pop
push
enter
pop
aas
or
mov
mov
mov
and
push
dec
or
mov
les
or
sbb
insl
lods
push
cmpsb
loopne
imulb
in
dec
sbb
cmp
aad
dec
or
out
xchg
add
testb
bound
sub
jnp
dec
xor
bound
fiaddl
movsb
clc
sti
in
lea
cmp
mov
fsts
cmp
outsb
jmp
sbb
add
mov
lcall
sub
lcall
mov
stos
pop
aas
or
icebp
or
xchg
mov
pop
pusha
aaa
shrb
add
fs
les
jmp
sbb
in
adc
mov
into
inc
out
and
cmp
xchg
idivb
dec
xor
jg
add
push
jecxz
lret
scas
fsts
mov
fistps
dec
sub
jno
pop
sub
push
cld
test
loop
into
movsb
mov
rorb
pop
aas
or
and
fsubl
mov
fstl
pop
sbb
pop
sub
push
mov
sub
lahf
roll
test
mov
jmp
xchg
mov
dec
pusha
ljmp
add
nop
or
mov
and
push
mov
imul
stos
xchg
pop
sbb
cmp
inc
jns
sub
lcall
pushf
movl
pushf
movb
push
lea
jmp
movl
call
and
movb
and
sarb
push
sub
dec
fs
jne
aas
movsb
lods
jmp
sbb
fs
roll
filds
mov
test
add
andb
je
scas
popf
mov
rol
mov
repnz
std
xchg
sahf
inc
cmpsl
test
dec
mov
mov
xchg
mov
jne
insb
pop
mov
repnz
addr16
xor
cmpsb
jne
and
addr16
and
mov
je
push
xor
sbb
les
cld
mov
call
pop
inc
divl
out
adc
jnp
jno
sbb
xchg
arpl
lods
ficoml
ds
hlt
sub
insl
pop
aas
or
jns
aaa
or
es
push
and
iret
jmp
mov
fsts
xchg
push
lods
fdivrs
popa
ret
lea
ljmp
push
jno
pop
sahf
cmp
add
loopne
out
jb
cs
pop
ja
jb
adc
mov
fistpll
sar
lods
add
push
shll
inc
jns
stos
in
fmul
xor
push
incb
icebp
dec
stos
fmuls
cltd
adc
fcompl
sub
insb
int3
aaa
jno
lahf
not
pop
negb
mov
pop
jge
and
xchg
jmp
out
mov
cltd
ret
test
mov
cmp
xor
mov
int3
xor
push
lods
sub
pop
aas
or
aam
sbb
xor
sub
ret
mov
iret
and
and
in
xchg
jne
scas
mov
cmpsl
cmp
cwtl
push
xchg
inc
and
pop
push
shrb
mov
dec
data16
ss
sahf
xchg
dec
mov
ds
ret
pop
jp
mov
mov
add
imul
mov
fsts
mov
push
lahf
mov
jbe
xor
cwtl
push
mov
je
ljmp
sti
mov
sub
shrb
popa
push
scas
cmc
lods
repz
mov
pop
aas
or
in
mov
push
adc
xor
jge
mov
fistps
bswap
aaa
push
adc
jecxz
sti
mov
fbld
mov
cmpsl
mov
insb
enter
adc
jns
orb
jg
or
dec
push
push
scas
fldcw
cmpsl
inc
dec
pop
out
add
nop
pop
out
push
sbbl
adc
sub
or
xchg
neg
clc
cmc
rol
jmp
mov
btc
push
sbb
sar
mov
rcr
push
pushf
call
call
lea
js
push
push
pusha
lea
jmp
lea
call
push
lea
jne
call
setne
jmp
inc
call
push
mov
es
cmpsb
sub
ljmp
jbe
pop
stos
rorb
lods
pop
sub
test
test
and
test
sub
bound
loope
aam
lret
sub
cmp
add
dec
cmpb
pop
aas
or
std
pushw
and
xor
lea
push
call
pushf
movl
movb
pushf
lea
jmp
shr
inc
mov
pushf
sbb
inc
sub
lea
jmp
incb
add
mov
dec
and
out
test
xchg
xor
sbb
pop
mov
stc
jne
lds
leave
psrld
or
pop
pop
out
mov
pop
jbe
ret
sbb
ja
roll
int
xlat
jo
push
xchg
outsb
int3
sbb
nop
test
test
jbe
sbb
sub
rcrb
mov
js
inc
into
data16
rorb
mov
lods
pop
aas
pop
xchg
dec
lea
jae
bsf
pushf
shld
rol
mov
shrd
xchg
mov
lea
bswap
xor
mov
jmp
mov
inc
not
dec
stc
adc
xchg
movzbl
aam
mov
adc
xor
rcl
xor
mov
test
bt
push
mov
mov
mov
dec
btc
mov
pushf
sub
pushf
movl
pusha
rep
pushl
pushl
movw
bswap
mov
pushf
pushf
pushl
pushl
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xchg
test
mov
or
sbbb
xchg
daa
jge
and
mov
mov
jg
push
cli
and
jo
and
mov
cwtl
addr16
ds
dec
sahf
ror
or
in
and
pop
xchg
or
push
ljmp
lcall
pusha
cmp
xchg
mov
insb
add
or
jnp
scas
inc
jle
sub
mov
and
mov
mov
icebp
sub
jns
mov
xchg
cmp
dec
stc
popa
mov
aas
outsl
dec
cli
mov
ficoms
bound
jae
aas
push
into
imul
or
xchg
or
rorb
add
add
pushf
movb
pushf
mov
lea
jmp
movl
pushf
lea
call
call
jmp
lea
mov
mov
pusha
pushl
movl
jmp
mov
mov
movb
inc
call
out
sar
sti
fstl
jns
ljmp
fistl
xor
xchg
jbe
in
cmp
shl
lcall
push
or
pop
xchg
ret
hlt
imul
pop
mov
and
or
ss
sarl
or
mov
sbb
add
and
out
sub
adc
inc
and
inc
jnp
test
cmp
jmp
aas
btc
mov
test
test
jmp
inc
or
repnz
add
mov
mov
sti
bound
inc
adc
std
xlat
or
fwait
adc
cmp
or
add
xchg
sbb
js
ja
push
mov
push
jmp
es
lods
out
ds
clc
push
push
shll
jecxz
cs
sbbl
mov
dec
adc
pusha
adc
je
jge
mov
in
push
test
shll
test
xor
cmp
dec
int3
xor
adc
inc
movsl
cmpsl
jp
cld
es
mov
into
lock
faddp
js
lds
rorl
adc
test
sub
cmp
or
push
pop
lods
in
mov
cmc
int3
retw
inc
cmp
sub
cmp
xchg
cmp
or
or
clc
jno
int3
sti
cltd
sbb
aad
mov
loopne
aas
add
out
jmp
sub
ja
xor
not
pop
cmc
mov
add
jno
and
push
mov
loope
imul
les
cmc
stos
push
mov
mov
xor
sbb
inc
out
lods
fsubl
mov
repnz
sub
sarb
les
imull
movsl
xlat
xchg
mov
ret
sub
sarl
fisubrs
ds
jge
aad
gs
push
dec
push
jl
scas
out
pop
aas
add
cmp
add
and
lea
xor
movsbw
setne
movsbw
lea
jmp
and
sti
pop
outsb
xchg
and
push
mov
fisttpl
xlat
cltd
mov
pushf
dec
mov
mov
ds
dec
jg
lea
xlat
xor
cmp
sbb
mov
mov
lret
movsb
push
mov
les
push
xor
roll
jg
in
hlt
dec
mov
sub
inc
mov
xchg
shll
pop
aas
add
aad
cld
rcrb
jmp
pop
lods
inc
pop
clc
push
addr16
outsl
lret
mov
pop
imul
mov
xor
cs
push
push
call
xchg
ret
xchg
lds
imul
xchg
mov
in
cli
ljmp
outsb
sarl
rorl
xchg
sub
mov
mov
jecxz
mov
xlat
jbe
lds
sbb
push
mov
add
xchg
ds
in
adc
mov
loope
dec
mov
mov
pop
push
or
inc
mov
data16
jns
imul
dec
mov
or
scas
test
jge
rcll
aas
add
js
inc
and
push
pushf
movl
pushl
ret
add
pop
cltd
imul
ret
inc
and
or
add
icebp
dec
ret
data16
test
pop
fdivr
test
test
pop
js
ror
xchg
js
cmp
lods
mov
or
push
jmp
sub
sahf
or
icebp
scas
cltd
xchg
dec
jns
mov
stos
nop
jg
xchg
mov
cmp
in
xchg
int
mov
aas
add
mov
movsbw
mov
movb
pushf
push
pushl
ret
sbb
imul
push
cs
popf
xor
add
test
and
fmul
out
xchg
out
test
sub
xor
jnp
add
add
xchg
and
sub
dec
cmpl
loop
ror
cmpl
push
sbb
icebp
pusha
lea
jb
pushf
mov
push
push
pushl
ret
push
dec
call
cmpsb
inc
cmp
jb
iret
stos
inc
fnsave
test
and
inc
xor
outsl
stc
es
push
aad
scas
fadd
stos
test
std
inc
jl
sub
pop
cmp
jo
mov
xor
pushf
inc
or
jnp
scas
pop
lods
sub
mov
jmp
lds
in
sbb
mov
inc
fistl
xchg
and
std
cld
aas
je
jmp
xchg
les
test
cmp
out
mov
stos
push
jge
stos
popa
jo
mov
mov
pop
aas
add
mov
shlb
and
cmc
repnz
mov
pushl
jmp
fcmovu
je
inc
mov
adc
and
mov
gs
adc
loopne
fsubrl
mov
lods
pop
les
fs
lds
xorl
popa
inc
mov
mov
adc
pop
mov
ljmp
jge
es
imul
enter
fbld
push
push
ret
test
jl
mov
inc
cmpsb
loope
or
jb
fstpl
cmp
out
pushf
mov
xlat
push
or
inc
int3
lret
ret
dec
pop
mov
dec
jmp
xor
popa
mov
fadds
in
sub
or
inc
mov
mov
ds
jge
test
push
and
jmp
imul
mov
clc
bt
add
movb
pushl
lea
jmp
stc
add
push
pushf
lea
jmp
push
push
mov
lea
jnp
push
mov
lea
lea
movsbl
pop
push
movb
push
pushl
ret
call
call
mov
pushf
pushf
push
pushl
ret
lea
jb
push
cmpb
pushl
lea
jne
bsf
rcl
inc
movsbw
mov
jmp
call
into
shr
and
inc
sub
mov
and
mov
xchg
es
pop
test
pop
push
mov
fs
inc
or
jbe
out
gs
sub
call
mov
hlt
inc
sbbl
icebp
sub
ljmp
cmp
mov
cmp
mov
ret
lods
mov
pop
adc
sbb
inc
and
les
int3
adc
lahf
pop
dec
add
imulb
jmp
call
incl
in
lods
add
mov
std
pop
xor
add
fmuls
add
dec
les
testb
movsb
sbb
push
je
pop
mov
inc
std
jno
adcl
mov
inc
and
sub
pop
mov
and
jmp
call
jmp
mov
cmpsl
les
repz
and
cwtl
dec
les
mov
push
or
ds
into
sarl
sub
pop
xchg
or
ja
push
fldl
movl
pusha
movl
pushl
pushf
lea
jmp
pushf
lea
jb
clc
cmp
pusha
call
cmp
jmp
cmp
call
pushf
pusha
stos
push
pushf
movl
pushf
lea
jmp
call
mov
xor
mov
lahf
jnp
test
fdivl
dec
cmpsl
add
adc
xchg
test
lock
mov
mov
xchg
jne
xchg
lea
sti
pop
push
dec
call
inc
cmp
inc
test
push
mov
push
mov
xchg
lods
and
out
enter
add
pop
in
and
xchg
lods
in
test
stos
clc
push
fcoml
dec
les
stos
loop
popl
std
mov
pushw
je
les
imul
scas
aam
push
nop
dec
adc
ds
pop
fisttpll
add
int3
fwait
and
push
mov
sbb
int3
inc
mov
dec
lock
sub
mov
and
adc
jb
push
cmpb
lcall
leave
scas
out
jle
jg
push
fmuls
xchg
jge
push
lods
adc
mov
inc
movsl
sbb
jp
cmp
flds
ss
scas
aad
mov
sub
jns
cltd
pusha
cwtl
dec
push
and
cmc
out
cmpsl
pop
pop
popl
xor
mov
pop
lods
xor
inc
movb
xchg
enter
cmpsl
loop
xchg
xor
ds
xchg
dec
mov
adc
fsubl
jnp
xlat
fdivrl
nop
cmpsl
les
sub
out
lcall
add
pop
stos
push
pop
aas
lock
jmp
pushf
push
addl
test
push
push
jp
cmp
dec
in
shlb
sub
and
mov
inc
cmp
in
int3
pop
ds
jne
lea
pop
popa
negb
mov
mov
jmp
fadd
push
ret
xor
xor
sub
jb
or
dec
loope
leave
lods
push
cmp
js
imul
jb
xchg
mov
jecxz
add
test
inc
add
hlt
inc
aam
loop
add
iret
sub
cwtl
nop
mov
pop
in
or
mov
jg
pop
adc
cld
inc
lods
loop
in
test
dec
inc
aad
out
addr16
lock
inc
fimuls
stc
call
mov
add
xchg
xor
lods
cmovo
pop
and
mov
mov
push
ror
fwait
leave
gs
in
sub
addl
mov
cmp
negl
mov
nop
xchg
sahf
es
sub
xor
jae
inc
out
sub
adc
jae
fildl
hlt
mov
nop
jnp
fists
sub
imul
adc
ficoms
call
popa
fldenv
fs
jmp
jmp
jnp
mov
push
notl
test
aas
pop
iret
xchg
mov
mov
pop
inc
sub
cmp
scas
roll
cwtl
dec
addr16
pop
xor
sbb
xor
pop
adc
scas
inc
and
cmc
push
mov
jo
lds
jecxz
js
dec
pushf
jns
pop
add
adc
rorb
shrl
inc
divl
jp
xlat
ret
leave
mov
movsb
inc
das
sub
jp
es
pop
mov
mov
add
push
ss
bswap
inc
cmp
ds
inc
stc
sarl
in
jb
gs
xchg
jb
push
pop
mov
shlb
bound
imul
mov
cld
rcll
xchg
lods
test
xchg
or
cmc
inc
jl
mov
cmp
and
pop
push
insb
movsl
sbb
pop
mov
cld
mov
andl
out
fwait
push
push
pop
ds
mov
aam
xchg
mov
jae
mov
add
nop
jno
leave
adc
push
or
nop
mov
aad
imul
adc
scas
cmp
push
outsb
xlat
loopne
or
push
divl
rclb
ss
daa
lret
mov
mov
add
fcoms
imul
fistl
ds
rolw
inc
and
scas
fs
test
pushf
movl
pushf
movw
lea
jmp
jmp
pushf
inc
lea
jmp
lea
je
pusha
movl
cmp
pushf
pusha
push
lea
jne
jmp
mov
call
pusha
lea
jne
pushf
pusha
inc
pusha
pushf
inc
push
lea
jmp
call
mov
pushf
lods
shr
neg
cmp
sub
neg
pushf
setg
setge
inc
push
pusha
rol
lea
jbe
pushf
dec
pusha
dec
pusha
shl
shr
cmp
neg
pushl
stos
pushf
mov
lea
jmp
mov
pushf
not
not
mov
inc
pusha
mov
pushf
push
lea
call
jo
pushf
mov
adc
pushl
call
inc
inc
fistl
mov
fwait
xor
out
xchg
icebp
push
jecxz
roll
adc
mov
dec
cld
xchg
add
insl
cltd
pop
imul
aas
lock
or
xlat
lret
mov
push
xorb
jno
cmpsb
jmp
dec
mov
inc
movsl
in
or
push
mov
xor
dec
fnstenv
or
popa
xchg
xchg
js
and
jl
sub
mov
fcoms
xchg
push
cwtl
aam
xchg
lds
mov
fstl
push
je
pusha
movb
lea
je
bsr
lea
ror
add
rcl
bswap
mov
bsr
mov
push
pusha
add
test
clc
mov
bts
push
movsbw
movzbw
mov
cmc
call
and
cwtl
pop
jb
pop
jno
adc
ret
sbb
dec
and
push
in
inc
push
fcmovb
and
stos
add
sahf
cwtl
sahf
leave
scas
and
xchg
dec
and
sahf
and
inc
xchg
fstl
aad
loopne
push
mov
mov
pop
push
or
pop
idivl
sti
test
mov
jg
mov
popa
add
jns
jecxz
sarl
out
fisubrs
rcll
jne
dec
pop
inc
gs
int
mov
inc
pushl
fisttps
negl
orb
mov
mov
dec
mov
inc
test
ja
stos
idiv
enter
sbb
inc
xchg
dec
mov
add
or
rcr
in
scas
pop
or
cwtl
inc
lret
mov
jb
lcall
cmpsb
push
test
mov
lret
ret
imul
daa
push
mov
inc
add
push
ljmp
arpl
shll
cli
jle
leave
push
stc
xor
add
in
xchg
scas
ret
int
inc
adcb
pop
and
mov
int
jno
cs
insb
push
push
inc
sub
movsb
sub
add
mov
sbb
int
sub
pop
inc
sti
mov
push
mov
inc
cwtl
aas
inc
xchg
add
lcall
rcll
clc
lods
and
add
mov
dec
rolb
loopne
mov
lds
pop
pop
shl
mov
mov
cmp
cs
fnstenv
bound
ja
jp
inc
and
sbb
jl
mov
inc
stc
fdivrl
loope
dec
rcll
loope
and
xor
lcall
dec
xor
mov
pop
pop
xor
dec
mov
fnsave
shl
test
dec
xchg
stc
mov
arpl
push
add
dec
mov
push
xor
test
adc
pusha
inc
xor
lods
xor
push
or
shrl
ljmp
dec
insl
add
sar
fcoms
mov
sarb
loope
inc
jne
push
jmp
fiadds
or
repnz
loop
push
insb
les
in
out
push
pop
or
push
movl
shrb
or
leave
ja
pop
add
xor
pusha
inc
push
sti
iret
mov
faddp
or
ror
dec
cmp
enter
daa
movb
aam
in
fldt
into
in
insb
mov
aad
sbb
push
mov
add
and
repnz
adc
fwait
mov
call
xor
pop
int
icebp
stos
pop
arpl
or
leave
hlt
push
movsl
hlt
pop
insl
popa
mov
inc
push
dec
lds
mov
push
out
adc
ljmp
fldcw
lret
inc
mov
and
dec
hlt
add
ss
cltd
sub
mov
pop
and
fldenv
xlat
jb
cmp
xchg
xchg
out
xor
adc
jne
pop
mov
dec
shlb
inc
jae
sbb
mov
xchg
into
mov
pop
mov
push
inc
stc
aam
cs
ss
jne
retw
fiadds
add
sbb
loope
sarb
sahf
cmp
add
in
xchg
imul
sbb
push
mov
ss
cmp
insl
adc
xchg
mov
xchg
pushf
add
xchg
jmp
int
dec
and
add
dec
add
ss
test
sbb
repnz
push
imul
daa
les
test
fsubp
faddl
mov
lret
push
xchg
mov
pop
adc
lcall
shrb
dec
imul
ret
fdivrl
pavgb
xlat
pop
inc
xor
loopne
mov
and
add
sub
cmc
ret
stos
sub
inc
hlt
inc
ret
stc
int
ret
jae
push
ret
inc
xor
jb
and
leave
or
push
jp
pop
mov
cmp
pop
rcrl
xchg
movsl
lods
add
mov
nop
rcll
jnp
leave
xlat
lret
and
add
sub
es
push
repnz
xchg
lret
add
push
mov
rcr
push
into
inc
and
xchg
aam
sarl
imul
jae
dec
leave
add
sarb
mov
stc
enter
mov
mov
add
jnp
mov
sbb
popa
decb
imul
sub
ljmp
cmp
and
int
xchg
rolw
aaa
sahf
jmp
imul
mov
dec
testb
mov
loop
cwtl
push
mov
test
xor
das
testl
add
and
mov
xchg
xor
xor
int
xlat
lds
mov
jbe
loope
lods
or
pushf
test
ss
pop
adc
out
rolb
push
ds
and
pushf
inc
jns
jmp
fadds
pop
jae
push
or
xor
into
dec
and
icebp
fdiv
out
add
dec
pushf
cltd
push
ljmp
out
jae
adc
es
ret
sub
sub
incb
xchg
sub
and
or
mov
jg
fiaddl
push
out
xchg
icebp
jne
push
fisubrs
in
leave
sbbl
int
mov
jl
sub
add
neg
cmp
int3
add
cmpsl
adc
jecxz
ret
jl
jae
lods
loopne
pop
stc
les
std
jae
jae
lds
mov
lret
mov
aam
add
adc
adc
lret
lds
pop
lret
fisubs
fidivs
sbb
sub
push
jbe
cmp
dec
repnz
insb
test
and
jnp
ret
sarl
jmp
rcr
jno
push
push
insb
fwait
push
test
xchg
enter
and
mov
in
push
push
dec
insb
cmp
idivb
adc
jnp
push
aas
mov
dec
lods
in
mov
loopne
aaa
sbb
and
repz
lods
sub
loopne
dec
stos
dec
arpl
mov
or
mov
push
pop
inc
leave
and
adc
aam
lahf
xor
mov
shll
lret
hlt
arpl
addb
stc
add
push
inc
jo
fisubl
or
inc
or
sub
mov
rcll
ds
test
dec
imul
mov
test
call
dec
jle
add
imul
ljmp
push
pop
fwait
test
js
mov
pop
repnz
icebp
addb
jle
push
loop
jbe
icebp
xlat
call
lds
lret
cmpl
fxch
dec
xchg
cmc
mov
cmp
mov
mov
roll
push
xor
out
imul
dec
jae
jle
dec
mov
lds
cmc
out
repnz
loop
sbb
dec
adc
fmuls
ret
mov
cmp
inc
mov
sarl
gs
roll
xor
mov
push
enter
loop
rorb
imul
xchg
push
rolb
leave
inc
into
sub
pop
jmp
in
sti
ret
cltd
dec
mov
pop
rclb
cmp
lea
adc
mov
icebp
fcoms
push
lock
cmp
sbb
cmpsb
pushf
adc
add
mov
xchg
inc
and
repnz
rolb
adc
adcb
jg
lret
cmp
mov
xlat
cltd
arpl
mov
mov
mov
cmp
mov
jb
jb
xchg
xchg
aad
cmp
mov
stos
and
inc
iret
sub
popf
daa
sbb
repnz
push
sub
and
jecxz
fldcw
in
ret
jp
dec
fnstenv
cmp
or
xchg
popf
in
jns
aaa
push
fisubrs
add
dec
aam
inc
mov
leave
pop
into
and
in
fimuls
rclb
icebp
inc
sub
loope
pushf
pop
and
stos
add
push
lcall
test
sbb
hlt
inc
shll
insl
movsl
mov
jae
sub
add
fldpi
add
pop
arpl
orb
fucomi
in
clc
daa
dec
lds
mov
dec
push
sbb
sti
cmp
repnz
icebp
fbld
faddl
push
pop
mov
and
imul
dec
jb
or
mov
mov
jg
bound
cwtl
dec
fwait
add
cli
int
lods
inc
adc
jmp
xchg
pop
add
lds
dec
loope
cmp
sbb
faddp
adc
sbb
and
adcb
pop
jmp
bound
inc
dec
icebp
adc
ja
stc
shlb
stos
cltd
inc
jbe
fidivs
dec
push
dec
lret
movsl
dec
cwtl
lods
leave
add
into
mov
cld
je
movsl
or
dec
ss
into
mov
inc
pop
adc
pop
dec
fisubrs
fsubl
add
mov
movsb
sub
sub
pop
adc
lahf
sbb
pop
cmp
loope
cli
mov
mov
out
add
inc
loop
cmp
popa
sub
lods
les
adc
leave
xor
int
aam
rol
xor
mov
xchg
inc
loope
mov
pop
inc
adc
daa
fldcw
addr16
sbb
dec
cli
fs
sbb
pop
popa
xchg
pushf
gs
outsb
or
inc
jmp
adc
imul
fs
stos
ret
shlb
add
sti
cld
fs
sub
add
pushf
xor
sub
push
imul
inc
cmp
pushf
mov
ficompl
stc
adc
inc
cmp
subb
ja
ffreep
cli
faddl
neg
dec
in
mov
int
mov
cmp
ret
jp
xchg
add
testb
fnstenv
inc
std
xchg
jecxz
mov
cmc
mov
add
mov
mov
fldl
add
popl
mov
loopne
mov
insb
xlat
adc
decb
popa
pop
jnp
lds
jg
fisubrl
add
or
mov
sbb
mov
fistl
xchg
mov
daa
inc
inc
fsubrp
scas
popa
pop
add
adc
inc
out
inc
addb
loopne
and
xchg
and
shrl
push
jle
mov
jmp
or
push
std
icebp
popf
sbb
rcrl
push
mov
inc
or
dec
cld
outsl
lods
and
mov
dec
inc
pushf
ret
ucomiss
cmp
and
fs
outsl
stc
decb
fisubrs
leave
lahf
xor
mov
cmp
push
mov
popf
jmp
cmp
scas
add
jg
into
or
inc
inc
and
mov
enter
dec
mov
sbb
repz
decb
add
pop
inc
pop
aaa
setge
test
dec
test
adc
xchg
movsl
ret
insb
lock
lahf
jb
enter
push
imul
jnp
push
adcl
push
fisttpll
roll
fcmovnu
mov
popf
sub
inc
and
or
xor
push
mov
loop
cmp
enter
add
aas
mov
mov
jae
outsb
adc
stos
pop
ja
sarl
test
sbb
xchg
mov
inc
sbb
addr16
jns
rolb
jmp
sarb
xchg
jecxz
loope
int
jp
stc
xlat
loopne
cltd
push
loop
aad
rcrl
mov
xor
enter
sub
adc
xchg
pop
sub
xchg
sub
stc
jno
add
mov
push
aad
sbb
cwtl
or
into
repz
mov
add
sbb
data16
loop
inc
addl
xor
repnz
pop
mov
pop
test
xor
out
sbb
fstpl
nop
xadd
ret
pop
adc
push
pop
dec
mov
sbb
lds
inc
mov
std
data16
out
pop
push
fwait
push
adc
mov
lea
and
jae
loope
cmp
lret
pushf
incb
arpl
add
mov
sarl
leave
in
mov
dec
or
sub
shll
fstps
inc
push
sub
aaa
adc
sbb
sbb
lcall
dec
dec
adc
dec
and
pop
mov
push
out
add
pop
and
mov
call
cmc
pop
cmpsl
push
cli
mov
mov
lods
or
inc
vpackssdw
xchg
pop
testl
insb
dec
dec
xchg
dec
add
xchg
adc
sub
jmp
fwait
lods
jp
mov
cmpsb
icebp
sbb
leave
adc
repnz
orb
imul
jb
push
sub
and
jb
xchg
in
and
loop
inc
add
mov
or
sti
and
jge
int
in
xor
sbb
cmp
imul
loop,pn
lahf
insl
push
xlat
add
into
push
adc
dec
pop
jmp
sbb
ds
add
inc
pop
xchg
and
lahf
and
sbb
dec
push
cmpsl
push
int
icebp
imul
in
repnz
inc
dec
mov
push
cli
rcr
pusha
loopne
push
cmpsb
mov
in
mov
jae
pop
adc
push
jecxz
jl
into
cld
test
sub
mov
iret
hlt
imul
sub
dec
cmpsb
lret
out
data16
roll
aas
out
lret
inc
and
ja
loope
ret
std
stc
out
adcb
ds
push
pop
push
popf
icebp
daa
cmp
int
ja
int3
idivb
xchg
stos
mov
mov
aaa
inc
pushf
mov
in
add
pop
stos
add
sub
sbb
add
jecxz
inc
mov
loopne
lret
adc
aam
and
mov
mov
push
cmpsb
adc
int
sub
lds
mov
pop
and
je
ja
push
stos
mov
js
push
push
or
iret
bound
addb
stc
cli
inc
sbb
rcll
mov
inc
push
mov
rolb
mov
jecxz
lahf
jmp
cmp
std
test
fadds
pop
add
inc
inc
jp
sbb
inc
fucomi
add
pop
loopne
mov
xor
std
sti
fidivs
or
das
jmp
push
add
decl
inc
fwait
add
inc
repnz
and
sbb
lea
lds
sbb
faddl
push
lcall
inc
xor
or
popf
sub
dec
xor
test
aaa
mov
or
push
adc
sarl
ja
and
daa
add
xchg
push
sbb
mov
jae
jbe
mov
arpl
std
inc
pop
sub
daa
mov
dec
add
test
loopne
mov
adc
lea
inc
adc
icebp
sahf
and
out
stos
jmp
stc
sbb
mov
iret
das
mov
add
xor
ja
cwtl
lret
cmp
cmp
or
inc
pop
pop
and
sub
cli
push
sbb
inc
push
ret
fstps
and
int
mov
call
sbbl
jge
pop
rcrb
pusha
push
aam
call
jae
js
or
test
negb
daa
cmpsl
push
enter
cmp
jnp
mov
add
lods
aad
dec
inc
popa
call
mov
roll
jge
push
dec
xchg
inc
lcall
push
cmp
sbb
cmc
pop
mov
xor
rorl
sbb
jp
lret
into
push
push
jno
bound
rcl
fsubp
movsb
divb
into
lea
mov
jo
jb
fimuls
into
dec
sbbb
push
and
mov
aad
cmp
mov
fidivs
pop
inc
mov
aaa
stos
mov
enter
sarb
push
mov
adc
roll
pop
rcr
sub
enter
sub
stc
test
shr
and
xor
lret
push
fs
leave
ret
inc
xchg
sbb
pop
outsl
pop
add
jg
andl
test
leave
mov
push
sub
dec
jns
inc
into
arpl
cld
adc
or
xchg
ds
decl
test
dec
sbb
cltd
xor
mov
pushf
inc
insb
cli
stos
or
dec
or
dec
stos
mov
rcr
mov
jp
inc
push
jbe
stos
push
push
add
dec
mov
sbb
mov
in
ret
ficompl
pop
inc
or
gs
adcl
mov
inc
inc
push
js
jecxz
lret
xlat
pop
in
sub
or
or
xchg
je
movsl
notb
dec
jb
jmp
cmp
loope
xchg
add
dec
or
fwait
adc
xor
aam
ficomps
sub
fisubrs
add
ret
ds
and
pop
fcoms
cld
loop
and
in
sete
jmp
shll
and
push
cli
mov
into
push
inc
jp
inc
enter
cmp
roll
lea
ds
fsubp
dec
cld
dec
addr16
int
mov
sarl
or
mov
push
bound
mov
daa
int
mov
imul
repnz
mov
inc
xor
xor
pop
insl
mov
ss
lcall
icebp
cmp
insb
xchg
subl
into
stos
pop
dec
cmpsl
andl
shl
inc
lds
mov
mov
add
jbe
stos
scas
xlat
test
dec
mov
sbb
loop
fs
out
rcrl
adc
int3
xchg
addb
sbb
cwtl
mov
sbb
and
dec
jnp
xchg
repnz
xor
rclb
out
repnz
leave
mov
xor
and
clc
imul
or
cmp
cld
cmc
ret
or
cmp
pop
addr16
xchg
cmp
data16
add
xor
lock
jne
pop
inc
adc
ret
rolb
stos
imul
ret
dec
pop
stos
fdiv
cmpsl
push
push
pusha
test
fiadds
and
sarb
sub
fimull
jp
mov
sbb
dec
inc
mov
mov
rcrb
add
out
in
add
sbb
fwait
int
rclb
call
outsb
mov
sbb
dec
pop
lret
cmp
aaa
and
xchg
stc
les
push
sbb
cmp
jo
or
cld
inc
fimuls
xchg
mov
dec
jmp
flds
jp
sti
aad
in
mov
mov
xor
cmp
mov
cs
adc
sar
imul
int3
sub
fmul
pop
out
test
push
xor
mov
enter
and
popa
mov
nop
add
mov
xor
add
mov
ret
pop
sbb
repz
and
icebp
stc
loopne
rcrl
addr16
out
int
push
idivl
int
bound
cs
fimuls
inc
sub
loope
add
cmp
shrb
ljmp
out
jne
mov
scas
int
into
mov
jmp
icebp
pop
call
mov
or
pop
jl
jecxz
mov
inc
divl
lods
dec
stos
adc
lahf
fiadds
les
and
bound
mov
aam
push
add
aad
ja
cmp
roll
into
xchg
movsb
insl
cmp
push
sbb
fisttps
mov
sbb
mov
aam
sub
fcompl
mov
add
adc
push
decb
xchg
fnstcw
into
and
sbb
jmp
mov
aam
repz
inc
mov
and
mov
outsl
xorl
orl
mov
mov
mov
mov
lret
pop
mov
pop
jmp
dec
cmc
and
mov
or
jmp
adc
negl
sbb
sbb
lock
dec
cmp
aam
cmc
add
faddl
cmc
cmp
scas
int
ret
test
or
fisubrs
inc
mov
jp
dec
inc
enter
into
and
add
into
popf
jne
or
ficoml
imulb
or
dec
add
out
arpl
into
cld
loope
fisubl
mov
add
lcall
loope
pop
pushf
rcrl
lret
push
and
dec
rclb
push
ds
lret
add
sbb
es
rcrb
jle
xchg
jecxz
sbb
lods
fstps
popf
jmp
mov
loope
push
xchg
orb
nop
lret
js
inc
dec
push
cmp
negl
lret
loop
xchg
ds
sbb
lds
mov
mov
sub
int
xor
push
or
imul
movsl
inc
xor
lock
jle
sbb
sub
inc
jmp
xchg
jmp
sub
pop
pop
incb
fwait
xor
sub
mov
addr16
imul
stc
inc
loop
push
cmpsb
sbb
std
mov
mov
stos
js
pop
and
mov
xchg
outsl
aam
fimuls
nop
adc
mov
add
cld
bound
cmp
lret
or
dec
out
cmp
aaa
or
loope
in
dec
mov
popf
fldcw
push
inc
fldl
sbb
jmp
mov
icebp
int
jl
inc
sbb
fld
mov
sbb
pusha
xchg
push
xchg
add
incb
andl
rclb
rol
dec
int
lahf
dec
cmp
sub
clc
leave
adc
sub
fucomip
in
xchg
or
jge
xlat
out
and
jno
data16
movsb
push
jge
sahf
jmp
xchg
pop
leave
and
fstpt
out
decb
sbb
sub
leave
add
ds
ret
mov
stos
jnp
insb
add
jmp
push
in
sbb
sbb
test
movsb
xor
jae
packuswb
add
inc
pop
dec
pushf
cmp
repz
popf
xor
ficoms
dec
inc
adc
popa
dec
add
das
orl
ds
xor
sub
fldenv
push
std
and
or
ret
lock
outsl
mov
shlb
fisubrs
push
dec
and
subb
add
test
push
dec
xlat
int3
into
andl
movl
push
test
sub
xor
and
xchg
push
fwait
ret
lods
and
adc
fisubs
or
mov
lret
lds
add
ret
mov
scas
adc
je
add
insl
call
in
loopne
and
jecxz
in
lret
data16
and
aad
mov
lret
xchg
and
adc
or
cmp
pop
jmp
data16
or
out
insb
sbb
push
popf
fs
test
bound
add
push
dec
pop
cmpsb
xchg
outsb
test
mov
and
data16
push
sbb
int
push
push
loopne
cmpsb
aad
andl
sbb
mov
data16
in
loop
mov
fldenv
inc
fdivrs
je
pushf
lret
push
aam
icebp
pop
mov
and
scas
clc
pop
movsl
fcmovnu
push
loope
add
mov
pop
add
pushf
dec
mov
mov
adc
hlt
test
addb
cmpsb
out
loop
cld
ljmp
mov
lods
mov
add
jns
add
or
icebp
into
mov
in
fdivl
mov
dec
lds
addl
dec
and
inc
jb
or
clc
mov
std
sub
and
lahf
inc
pusha
out
xor
dec
icebp
push
enter
pop
mov
dec
cli
push
jmp
add
mov
or
movsl
xlat
test
mov
adc
lea
xchg
das
push
cmp
or
and
repnz
into
pushf
fidivs
push
xchg
aad
cmp
inc
into
decl
jb
push
inc
roll
dec
mov
ret
movsb
incb
dec
pop
icebp
outsb
mov
adc
sbb
icebp
mov
test
in
ret
add
xchg
xor
and
cmp
sbb
push
dec
inc
push
rclb
ror
inc
addr16
loop
out
fxch
popa
mov
arpl
xchg
mov
inc
imul
xchg
pop
popf
lea
jo
lret
es
sbbb
call
push
cmc
pop
insb
ljmp
divb
add
mov
jle
enter
cmp
sbb
cli
dec
push
pusha
mov
adc
jb
sbb
and
or
cmpl
in
lahf
xor
cmpsb
pop
dec
pop
dec
flds
add
mov
stc
rcr
jbe
test
push
jp
mov
icebp
shll
aam
mov
ret
popa
mov
shll
and
fwait
les
lock
add
ret
out
push
cmpl
mov
mov
test
hlt
imul
in
adc
mov
addl
sub
sub
pop
out
sbb
add
adc
pusha
inc
decb
jns
bound
in
fdivp
sahf
mov
xchg
cmpsb
scas
dec
popf
add
dec
filds
cltd
sbb
adc
sarb
icebp
into
dec
sub
or
fsubrs
and
out
loop
push
in
fiadds
cmc
dec
mov
les
insb
leave
in
cmp
insb
pop
fld
lock
mov
loop
pop
jp
daa
sub
fisttpl
repnz
and
cmp
xchg
or
movsb
rcrb
or
int
fstpl
lcall
mov
outsb
movsl
int3
mov
popa
into
add
ret
jne
cmpsb
xor
dec
ret
das
push
sub
loope
in
sarl
mov
sub
xor
sbb
mov
addb
inc
inc
cmpb
jae
addr16
movswl
jns
pop
xor
ds
inc
sti
mov
insb
js
scas
mov
mov
cmp
mov
sub
movsl
iret
push
xor
inc
lea
jmp
scas
cli
movsl
jbe
add
or
mov
faddp
push
shrb
dec
cs
jb
mov
lds
fisubrs
pop
push
and
mov
enter
stos
hlt
inc
mov
lcall
sub
outsb
mov
push
jmp
das
fcoms
imul
add
pop
aad
cmpsb
add
mov
mov
sti
cmp
ret
sbbb
sbb
int
imul
imul
sbb
cmpl
pop
jns
sub
fcom
adc
lock
hlt
add
jnp
cmc
test
int3
inc
mov
push
out
mov
add
roll
mov
std
ds
sahf
enter
jb
jne
xor
ret
adc
and
fwait
mov
pop
loop
jl
mov
push
sub
cmpsb
aad
mov
mov
gs
in
adc
sbb
sub
loop
xorb
push
call
loop
js
jae
push
cmp
cmp
repnz
or
cmpsl
scas
fucomip
jo
outsb
sti
sbb
fiadds
xchg
lds
jae
pop
insl
sub
lea
cs
dec
xchg
cmpsl
lods
dec
push
stc
or
cwtl
dec
lret
mov
xchg
inc
or
and
loop
rcl
daa
addr16
loope
sti
push
lahf
xchg
pop
out
iret
xor
divl
rol
mov
dec
loop
fldcw
iret
cmc
insb
push
mov
and
mov
cli
sti
lahf
cmpsb
pop
cmp
and
sbb
add
repnz
xor
les
loopnew
jno
and
push
arpl
pop
mov
adc
insl
movsl
or
mov
sub
js
bound
sbb
pop
out
daa
sbb
push
and
data16
push
adc
push
dec
jge
add
xchg
aam
ficoml
adc
push
std
push
dec
pop
ror
divb
cmpsb
dec
cmpsl
addr16
ljmp
clc
dec
sub
pop
in
xor
mov
je
jb
lds
push
jecxz
xor
test
imulb
les
bnd
add
sarb
mov
xchg
loopne
and
cmp
dec
repnz
fcmovnu
xchg
add
aaa
cmp
enter
add
or
into
hlt
insb
stos
rcl
les
adc
cld
int3
and
sub
faddl
into
pop
xchg
pop
in
test
stos
in
mov
or
stc
inc
enter
cmp
adc
sar
imul
jne
inc
int3
loope,pn
push
add
rorl
cli
add
jp
sub
stos
jmp
je
mov
ljmp
sbb
popf
loopne
int
cmp
dec
pop
in
lods
xor
enter
in
into
sbb
or
mov
fnsave
test
add
popf
pushf
lret
testl
rcll
je
lcall
mov
jb
adc
sbb
xor
incl
popa
xchg
ljmp
in
push
push
imul
icebp
jmp
scas
mov
adc
mov
mov
pop
ljmp
pop
jge
inc
adcl
pcmpgtb
jg
shll
pop
addr16
ret
push
into
pop
mov
jne
test
or
mov
out
icebp
insb
aam
pop
pop
pop
jbe
mov
arpl
add
inc
into
cmp
inc
pop
and
ret
cmp
cmp
jmp
mov
imul
or
lds
jo
xor
inc
jmp
push
cmpsl
or
pop
jmp
arpl
cmp
and
pop
shl
idivl
lahf
dec
push
addb
jae
ficomps
hlt
sub
cld
xchg
lds
pop
leave
mov
push
mov
mov
fcmovnu
outsb
pop
sub
jmp
or
sbb
lahf
lock
jo
push
cmp
push
add
das
sarl
shll
jbe
mov
dec
pop
mov
lods
lret
je
cmp
mov
fmull
ret
into
adc
or
mov
cmp
lcall
into
jbe
adc
mov
arpl
fs
dec
scas
jb
jecxz
adc
and
pop
outsb
push
sub
push
jmp
pop
and
add
mov
cmpsb
das
leave
inc
xchg
mov
cld
and
sbb
push
push
inc
inc
ror
push
int
loope
inc
xchg
jl
fisubs
call
cmp
repz
inc
push
xor
repnz
adc
sti
cmp
inc
lahf
add
inc
lcall
sahf
addr16
and
loope
sbb
pop
stos
ret
mov
xchg
xchg
movsb
adc
lock
outsl
rcrb
mov
pop
in
push
fimull
jmp
xlat
add
jae
jo
xchg
cwtl
aam
mov
iret
fldl
fstps
inc
movsl
test
mov
mov
mov
roll
jns
ret
addr16
notb
lods
jae
sub
out
loopne
xchg
mov
loope
inc
fnstcw
fidivrs
daa
dec
test
fcomip
jo
jb
lods
mov
and
shrl
test
loop
mov
mov
aad
into
add
xor
push
cs
inc
lret
test
cmp
pop
addr16
sbb
or
ljmp
and
sub
mov
mov
testb
jb
lret
div
ljmp
pop
xchg
pop
fwait
lret
out
xor
and
lahf
inc
imull
inc
call
ret
ljmp
jp
push
neg
xchg
loope
inc
xchg
push
fistl
pop
loopne
popa
add
into
mov
adc
mov
sub
cltd
fisubrs
test
call
sub
mov
pop
repnz
aaa
lods
add
inc
push
lret
sbb
fistps
lahf
mov
cmp
fcomps
in
stos
psrad
int3
sbb
sbb
decb
jne
mov
cmp
filds
addb
inc
xor
loop
jae
lock
ret
xor
jle
leave
xor
jnp
rcr
xlat
not
movsl
lock
cmp
add
call
cmp
push
ret
cmpsb
lret
xor
xchg
pop
mov
inc
into
faddl
jne
push
add
les
imul
stos
add
fimuls
sub
int
push
and
add
pop
jecxz
dec
push
aad
loopne
out
data16
push
arpl
in
popf
adc
sahf
push
stos
pop
mov
jbe
or
pop
mov
int
insb
lea
test
test
icebp
ficoms
sub
incb
fisubs
lcall
stos
aaa
inc
jle
xchg
inc
xor
lahf
es
loopne
mov
sub
insl
cmc
inc
lods
jmp
or
mov
loop
aas
push
ds
cmp
push
sbb
fisttpll
push
pop
fisttpl
push
inc
add
cmpsb
and
or
dec
repnz
inc
cs
inc
imulb
add
jbe
pop
xor
mov
int
fbld
mov
push
sbb
out
push
loopnew
out
insb
mov
add
lods
push
push
ret
ret
or
shrb
stc
ret
adc
shlb
shll
int
dec
jge
loop
call
ret
sbb
pop
jmp
bound
inc
scas
push
cmpsl
outsl
ja
stc
daa
lcall
jmp
mov
pushf
or
es
mulb
mov
dec
cld
dec
dec
xchg
fildll
jmp
sbb
dec
insl
sub
pop
roll
dec
xchg
mov
jle
shll
add
inc
lret
subl
int
out
repnz
iret
sti
jp
cmp
bound
test
xchg
ffree
mov
dec
sub
in
mov
push
into
pushf
les
jp
aad
fiadds
push
jnp
mov
inc
std
sub
add
aas
and
sbb
andb
rorb
addl
lret
loope
mov
inc
nop
leave
mov
lret
adc
or
enter
dec
in
jmp
imul
mov
inc
icebp
ret
fcmovnu
add
and
movsl
mov
lods
jmp
jno
test
add
aam
cli
lds
and
inc
fiadds
inc
stc
fildll
cli
xor
mov
push
mov
push
sbb
fwait
pop
dec
nop
cmpsl
or
adc
lock
and
fcmovbe
pop
ja
nop
dec
push
fists
add
pop
leave
jecxz
pop
test
fadds
jle
shll
mov
sub
fsubrs
dec
add
or
out
hlt
outsb
inc
mov
cmp
stos
frstor
pop
push
dec
sub
add
xor
cmp
test
jge
jl
insb
xchg
in
fwait
jae
fidivs
and
icebp
stc
xor
cld
xor
pusha
negb
ss
xchg
fimuls
xchg
icebp
sub
jge
clc
nop
xor
fwait
aam
stos
pusha
adc
jle
nop
loope
cmp
push
or
and
fsubs
ret
jecxz
push
test
mov
popf
leave
nop
sbb
fiadds
inc
faddl
arpl
jge
pop
adc
aam
fidivrs
pop
inc
push
repz
mov
ljmp
mov
inc
dec
popa
jmp
insb
jg
adc
sbb
in
mov
jmp
dec
jmp
popa
cwtl
int3
test
push
jl
shrl
imul
jge
shrb
popf
loop
rcll
xchg
ret
stc
into
jmp
outsb
ret
mov
sarl
dec
cmpsb
inc
fistpll
outsl
xchg
push
loopne
fldt
je
jae
icebp
repnz
fsqrt
mov
xchg
adc
lea
xchg
inc
sub
inc
js
push
leave
andb
and
sbb
icebp
fldz
sar
push
fidivrs
pop
jmp
insb
incl
xor
or
jae
aaa
std
pop
push
mov
flds
fisubs
xor
mov
adc
push
mov
push
mov
push
loopne
cmp
loopne
rdpmc
les
repnz
stos
push
rcrl
mov
fmuls
adc
jno
add
xor
int
call
dec
ds
add
inc
inc
cwtl
loopne
pop
lds
push
and
xchg
popa
pop
jp
idivb
cmp
or
shrb
mov
icebp
push
sub
jno
lea
adcl
enter
scas
orb
adc
dec
dec
cmpsb
push
movsl
in
mov
sti
ljmp
jo
lea
jle
or
xchg
mov
ljmp
imul
aad
fsubrs
adc
ljmp
adc
or
cmp
scas
imul
adc
into
sbb
outsl
mov
andl
cwtl
mov
aad
sub
int
sbb
sub
inc
mov
lock
jae
dec
jl
je
or
push
punpckhwd
lods
pop
je
repz
sbb
repz
outsb
into
jno
or
in
pusha
imul
into
add
push
pusha
stc
ret
fcompl
loope
adc
andb
stc
fiaddl
dec
fs
pushf
ljmp
xor
jmp
iret
lock
and
add
fdivp
cmp
inc
lret
ret
xchg
enter
sbb
lahf
lds
jns
das
push
fyl2x
fwait
inc
loope
jae
outsl
push
iret
mov
stc
mov
aaa
inc
cli
and
cmp
inc
inc
xchg
outsl
ret
loopne
and
pushf
out
jne
dec
js
into
ret
push
inc
das
mov
mov
sbbl
jge
push
or
je
int
ret
fistpl
pop
or
pop
bound
cltd
add
or
lea
fnstsw
add
scas
xor
into
mov
je
sbbl
int
ret
in
and
mov
mov
and
imul
js
test
xchg
lea
lea
push
mov
fisubl
pop
xchg
mov
sti
jns
cmpsl
cmp
or
mov
pop
or
mov
pop
mov
add
jbe
into
mov
ficoms
add
int
shll
in
in
mov
pop
mov
xchg
mov
xor
jmp
int
xchg
loopne
sbb
xchg
xchg
ljmp
insb
mov
icebp
mov
pushl
jne
lret
jp
movsb
cmp
insl
push
dec
xor
fimull
flds
icebp
add
js
pop
fistpll
ret
shl
faddl
jmp
lret
push
ret
pop
jg
psrad
lahf
mov
and
sub
jge
in
pop
loope
inc
loopne
xorl
lds
or
adc
test
enter
pop
int3
inc
into
pop
and
inc
cmc
dec
add
sub
sub
std
dec
gs
rol
xlat
sub
scas
xlat
in
fdivrl
jns
xor
ror
sbbb
in
sub
pop
fnstenv
jo
loop
out
mov
data16
add
rclb
jb
stc
jl
insl
sarl
pushf
lea
jne
jae
sbb
cli
ljmp
jmp
push
movsb
fprem1
and
stos
testb
ja
scas
shl
push
and
and
dec
mov
dec
lods
mov
insb
out
nop
fadd
xor
adc
imul
jmp
mov
jns
pop
push
inc
and
rcll
out
lds
cmc
add
lods
add
mov
daa
xchg
pop
cmp
fstps
in
imul
sbb
rcr
loop
mov
xchg
into
out
jp
clc
mov
mov
inc
pop
ret
add
mov
inc
fsubl
es
xor
sti
inc
enter
leave
cmpsl
pop
jmp
rcl
adc
imul
cld
sub
pop
pcmpeqw
add
in
int3
je
mov
mov
sub
pop
ds
loope
and
mov
roll
repnz
int
push
mov
sbb
pop
sub
out
dec
faddp
xor
aam
imul
jo
cmp
pop
repz
ljmp
icebp
xor
repnz
add
jg
int
aam
repnz
sub
jo
jbe
lahf
inc
adc
popf
das
outsb
ret
sub
xchg
or
ljmp
mov
push
add
adc
fistl
mov
popa
movsl
popa
jmp
pop
inc
or
xchg
ret
out
xchg
ret
inc
push
add
inc
aad
push
ret
ret
les
lret
into
xchg
sarb
loopne
les
adc
call
in
inc
les
rcr
rcrl
jmp
movb
push
or
into
or
inc
sti
rorl
dec
adc
inc
jecxz
lret
lcall
push
push
mov
lds
sahf
enter
cld
pop
push
rcll
cs
int3
imul
push
inc
fcmove
movsl
in
fsub
lahf
ret
fildll
ljmp
pusha
inc
push
stos
add
vpminub
push
and
push
into
adc
inc
lds
add
dec
vorps
add
inc
dec
dec
push
dec
cld
lret
loope
add
ret
dec
les
push
ret
push
pop
push
dec
leave
mov
inc
arpl
push
data16
es
ret
pop
fcmovb
lds
cs
ret
jmp
ret
add
pop
loope
inc
int
xlat
push
xlat
fcmovne
jmp
dec
sbb
iret
repnz
mov
dec
shr
push
add
ret
out
out
out
in
lret
shrl
inc
mov
ret
lret
inc
adc
fdivrp
add
loope
inc
lret
lret
push
rcll
ret
adc
xor
popa
loop
add
ret
test
out
out
in
ret
rorl
repnz
inc
repnz
inc
mov
inc
or
push
repnz
ljmp
into
jmp
push
add
inc
inc
rcl
add
int3
mov
loop
ljmp
push
pop
push
lea
out
ljmp
into
inc
or
push
inc
pop
inc
pop
ret
inc
fstl
push
lret
xlat
ror
jmp
aad
dec
add
inc
inc
repnz
ljmp
iret
ret
dec
ret
inc
lret
repnz
ljmp
mul
push
loop
in
add
push
rol
enter
inc
sbb
and
fnsave
negl
jp
dec
pop
mov
aaa
jg
test
lret
push
jno
inc
icebp
mov
mov
cmp
rorb
insb
jbe
push
pop
push
dec
rorb
and
rdpmc
jns
sti
sbb
xor
insl
push
popa
scas
mov
ret
jbe
or
sub
jg
loop
push
mov
movsl
cmpsb
cmp
fldcw
xor
adcl
fisubs
loop
je
push
xchg
repz
pop
mov
and
jecxz
push
jb
decb
insl
xor
test
adc
scas
jl
jnp
aad
jmp
or
sbb
pop
fwait
push
adc
fsubr
fadds
or
xor
mov
hlt
out
mov
cmp
into
adc
mov
bound
fdivrs
test
adc
clc
lds
jns
ret
fisttpl
cmpsb
mov
sar
fisubs
jno
aad
mov
ret
sub
cmp
repnz
std
fs
jmp
xor
mov
cld
push
loopne
or
lods
push
lds
in
jbe
jno
or
and
add
sbb
ljmp
insl
insb
ficomps
sahf
jmp
add
loope
lret
les
dec
inc
sbb
mov
xlat
mov
mov
inc
je
out
mov
and
mov
data16
or
call
adc
hlt
js
jb
fisubs
dec
popf
mov
lret
jg
inc
loopne
fidivs
out
inc
enter
or
jo
data16
fmuls
lret
xchg
sbb
loopne
test
fdivrs
outsl
sarb
inc
dec
jne
pop
test
int3
mov
into
scas
add
aad
jmp
movsl
daa
rol
cmpsb
lret
add
push
add
and
or
mov
repnz
add
sti
adc
add
shll
push
sbb
aas
paddusb
mov
fisubrs
repnz
ret
cmc
push
push
clc
jmp
inc
call
and
mov
mov
pop
push
add
mov
out
das
dec
adc
scas
ror
imul
aad
adc
ret
add
mov
push
dec
sub
mov
out
xchg
sbb
and
mov
incb
xor
in
jae
cmc
sub
sbb
shll
jmp
add
mov
pop
dec
and
inc
or
icebp
push
jne
push
push
xor
mov
inc
inc
and
ror
mov
negb
dec
loope
jnp
xor
jmp
adc
dec
lahf
sub
sbb
xor
je
push
emms
pop
or
mov
pop
cmp
cld
mov
add
mov
fs
sub
mov
into
daa
aaa
cmpsl
xor
add
jl
leave
pop
aam
fiadds
fwait
xor
lahf
les
pop
jp
mov
and
movsb
or
xchg
inc
jo
xchg
sahf
mov
xor
fdivrp
nop
dec
repz
dec
sbb
cmp
lds
inc
fisubs
jns
jbe
mov
push
inc
lea
and
or
add
int3
fdivp
lods
hlt
mov
xor
push
pop
xor
mov
leave
lods
popa
mov
mov
shll
xor
faddl
dec
jb
icebp
xor
and
loopne
mov
fisubl
or
inc
imul
outsb
ljmp
into
mov
xchg
cmpsl
loop
aas
adc
movsb
movsb
mov
das
or
call
lret
sub
cmp
jns
sub
rcrl
movsb
aam
push
pop
jmp
and
xor
stc
loopne
flds
xchg
jno
sti
loop
pusha
add
mov
leave
sbb
dec
jb
loopne,pn
out
and
cmpl
insl
mov
mov
or
push
leave
add
je
or
repnz
ss
push
pop
test
fisubs
arpl
or
popa
and
inc
test
push
fbld
ret
loope
sbb
cli
cmp
mov
jmp
sbb
insb
adc
push
adc
cwtl
lds
jmp
mov
lahf
add
ds
mov
jbe
loopne
push
adc
fidivs
mov
cmp
hlt
mov
xchg
jnp
xlat
mov
cltd
pushf
jl
or
add
fsin
add
ret
dec
popf
repnz
and
lods
jne
inc
sbb
loopne
fiaddl
and
mov
andb
mov
cli
dec
and
cmp
loop
mov
enter
cmp
pop
or
es
or
fisubs
cli
imul
into
sbb
scas
mov
pop
push
mov
adc
lcall
fimull
aas
shll
pop
popf
mov
mov
arpl
rcrb
test
daa
or
ljmp
inc
mov
push
ss
mov
loope
lret
movsl
out
int
flds
outsl
cli
inc
inc
stos
dec
hlt
std
fimuls
jle
dec
outsb
or
sub
stos
mov
add
push
or
testb
fsubrp
add
and
mov
std
and
xchg
inc
rcrb
fstps
xchg
in
mov
cmc
inc
stos
leave
rol
into
mov
push
jne
test
pushw
inc
and
mov
jecxz
in
add
pop
cmc
push
jmp
aas
test
fisubs
jne
in
pop
add
or
xchg
cmp
ss
xchg
mov
loopne
inc
jmp
mov
cmpsb
xor
repnz
ficomps
hlt
fisttpl
xor
sbb
rcrl
into
pop
cmpsl
cld
shl
insb
add
cltd
ljmp
jae
cmpsl
icebp
xchg
loopne
repnz
rorl
clc
shr
and
repnz
imul
dec
mov
not
pop
xchg
les
push
sbb
mov
push
inc
lods
ror
mov
fs
pop
push
pusha
dec
inc
les
cmpsb
jg
dec
cmp
sbb
mull
lahf
orl
enter
inc
enter
jp
mov
lcall
addb
loope
push
cmp
fs
lods
popa
into
add
mov
sub
xlat
mov
xor
or
push
mov
mov
jmp
push
inc
and
fstpl
fnstenv
aam
rolb
inc
icebp
cmp
lcall
outsb
inc
mov
and
sbb
jb
int
sub
jns
and
push
fiadds
cmp
or
cs
fistps
lret
adc
dec
sbbb
xlat
sub
gs
cmp
movsb
jb
insb
iret
mov
aaa
sahf
addr16
into
ja
push
mov
add
add
pop
movsl
loop
or
dec
sub
sbb
push
xlat
sbb
inc
sbb
xchg
lahf
aad
je
mov
das
into
bound
jbe
and
inc
fwait
pop
das
push
fcoms
fisubrs
das
sbb
pushf
lret
int3
and
xor
stc
test
mov
hlt
mov
stc
sub
add
insb
push
jo
fcoml
rcrl
push
sbb
arpl
ja
dec
fisubrs
pop
add
ret
lock
lea
test
and
mov
and
sbb
js
outsb
mov
popl
inc
jb
and
push
rcrb
cli
ffree
iret
mov
pop
ret
bound
xchg
jp
lret
or
and
sbb
sbb
das
je
pop
ljmp
pushf
cmpsb
repnz
lret
and
sahf
das
je
pop
or
mov
rcll
mov
push
mov
mov
sbb
add
movsb
fsubs
rclb
mov
sahf
fsubl
aam
js
mov
push
insb
subb
sbb
jo
dec
cmpsb
call
push
push
sbb
rcll
bound
mov
sub
test
mov
push
fsubl
out
ret
daa
and
inc
jo
bound
mov
adc
and
pop
out
push
sbb
pop
xlat
pop
out
dec
push
lods
sub
mov
dec
xchg
stos
jecxz
sub
iret
sar
xor
int3
in
add
imul
cmp
cli
mov
cmpsb
jmp
add
in
jecxz
xchg
fisttpl
jb
std
jae
adc
out
add
mov
mov
negb
ret
out
fidivl
sub
push
insb
push
add
xchg
mov
vmread
sti
pop
test
repnz
sub
add
push
add
insb
sahf
pop
enter
inc
insb
cmp
loopne
dec
dec
les
add
mov
add
dec
adc
pop
pop
es
jmp
adc
fcomi
shl
inc
xlat
insb
ficomps
push
not
pop
add
lods
into
mov
adc
aad
cwtl
sbb
mov
cmpsl
cmc
sbb
inc
jns
inc
xchg
jae
jp
cmp
popf
pop
xchg
mov
xlat
lock
xor
leave
mov
sub
rcl
int
cltd
cmp
das
movsl
movsb
rclb
shlb
xchg
inc
inc
aam
sti
loope
fstps
push
jge
into
jp
mov
pop
pop
mov
inc
ds
push
inc
dec
dec
es
and
lret
out
xor
adc
mov
mov
les
fnstsw
ret
push
add
dec
dec
cmp
fisubs
lods
lds
sbb
xchg
scas
add
es
sub
cmp
leave
into
jge
inc
cs
je
ss
push
fcmovbe
xor
orl
jb
andb
clc
into
je
cld
out
addr16
dec
ret
and
push
loopne
xor
fwait
xchg
mov
jmp
pop
cmpsl
lock
jg
or
jmp
scas
push
jb
cmp
in
in
and
repnz
and
outsb
cwtl
aas
data16
das
pop
cmpsl
enter
aaa
mov
daa
rorb
add
call
test
imul
adc
jecxz
inc
add
repnz
loopne
loopne
xor
pop
lahf
out
iret
push
xor
int3
fildl
cmc
scas
add
iret
into
inc
adc
sbb
pop
subb
mov
xchg
push
nop
cmp
jb
mov
push
stos
mov
gs
repnz
pop
jl
lcall
lcall
inc
mov
insb
sbb
test
add
aam
enter
fcompl
shll
mov
lcall
mov
and
rorl
jno
das
sbb
in
scas
cmp
lahf
fisttps
stc
sti
sbb
sub
fcmove
mov
mov
jno
les
fstpl
insb
ss
lcall
lret
inc
into
pop
sbb
pop
in
sti
decb
lahf
xchg
dec
mov
dec
popa
xchg
lods
push
sub
daa
into
call
pop
das
and
sti
stos
test
dec
mov
test
lea
pop
into
loop
popf
mov
lods
in
and
and
sbb
mov
or
out
dec
dec
and
daa
xchg
aaa
sub
out
push
or
inc
insl
push
nop
push
push
dec
mov
mov
sti
or
fisubrs
negl
inc
adc
add
xchg
mov
dec
je
push
or
xchg
nop
incl
das
cmp
or
xchg
ret
ljmp
mov
sub
movb
aaa
xchg
push
lret
add
push
xchg
lods
lds
pushf
xor
jns
loope
clc
push
mov
test
call
add
cmp
dec
and
pop
mov
inc
cwtl
inc
lock
mov
adc
loope
fcom
out
fidivs
cmp
dec
imul
fidivl
out
fimuls
negb
insl
outsb
inc
push
push
daa
dec
mov
xchg
ror
cmp
je
add
cmc
fimull
mov
dec
into
mov
and
mov
mov
rolb
sarb
xchg
fs
daa
inc
push
pushf
sbb
jno
push
ficoml
loop
ds
pop
push
push
push
inc
add
stc
int
shrb
aas
stc
fucom
int
faddp
mov
stos
push
fstps
dec
mov
inc
mov
sub
stos
movsl
adc
pop
faddp
xor
xor
movsl
jbe
jle
bound
pop
fincstp
lods
cli
push
jns
fcmovu
fwait
imul
lea
jecxz
jae
psllw
outsb
clc
mov
dec
inc
roll
lcall
mov
xchg
mov
andb
ret
lcall
incb
fnstcw
push
out
into
cmp
shrb
inc
jno
popa
std
or
mov
inc
in
imul
mov
aas
jge
jl
xor
std
andb
or
lds
scas
mov
shrb
loop
pop
test
inc
dec
sti
les
inc
fisubs
mov
xchg
lods
push
shrl
into
inc
sub
imul
xor
sub
fldl
jle
insb
fxch
jne
cmp
and
fimuls
aaa
adc
leave
jb
sub
shll
in
sub
cmp
stc
and
inc
or
dec
aam
mov
jl
pop
dec
add
clc
ficoms
ss
fbstp
es
jmp
xor
movsb
inc
cmpsb
sahf
mov
decl
adc
addr16
mov
inc
enter
insb
sub
enter
adc
dec
mov
subb
out
mov
inc
mov
fucom
int
fsub
gs
sbb
push
cmpb
push
cmpsl
into
jnp
mov
insb
cmp
and
xchg
hlt
mov
bound
mov
leave
xchg
inc
adc
ret
test
cld
or
push
xor
and
call
sub
fistpl
aam
pop
mov
inc
shlb
scas
inc
jl
stos
fsubs
ficomps
mov
fdivr
ffreep
out
cmp
jne
out
mov
ret
stos
les
test
sahf
mov
call
fs
addr16
lret
ret
movsb
and
ja
or
jne
and
and
fstps
inc
icebp
sbb
ret
cmp
push
popa
add
push
loopew
mov
int
inc
cld
lcall
and
and
sbbb
xchg
or
sbbl
loope
sbb
lcall
mov
pop
fwait
dec
push
mov
mov
lds
icebp
test
dec
xchg
dec
into
out
xchg
aad
sahf
mov
pusha
gs
call
inc
add
loopne
xor
add
inc
dec
mov
loop
jno
dec
loope
inc
mov
cld
cmpsb
mov
insb
in
fnstsw
fs
mov
ljmp
xchg
je
and
jns
cwtl
pop
lds
sbb
loopne
mov
pop
pop
mov
mov
enter
mov
mov
dec
mov
movsl
xchg
mov
into
xchg
mov
add
mov
fnstenv
sbb
rcr
add
xor
mov
push
movsb
loop
repz
push
rclb
inc
or
loopne
jns
mov
arpl
inc
fisubs
fsts
pop
mov
insb
into
cwtl
ja
xorb
arpl
cmpsl
in
neg
add
mov
cs
add
loopne
push
jo
jo
sahf
push
adc
adc
inc
imul
mov
jle
lds
je
imul
ss
loopne
dec
ffree
xchg
xchg
cmp
into
test
js
out
cld
cmpl
cmpsl
inc
insb
or
outsb
loope
into
mov
jnp
push
test
jns
dec
sub
mov
aas
mov
fnstsw
dec
lds
shlb
jmp
and
pop
dec
dec
dec
fsub
shll
ficoms
inc
mov
cmp
mov
test
decb
idivb
push
fcomps
mov
cmp
pop
test
adc
out
sti
pop
jb
xchg
push
jo
dec
shll
fldenv
push
sti
fimuls
sbb
cmp
jmp
into
cwtl
incl
call
pop
xor
adc
inc
ss
jl
sbb
stc
andb
aaa
fists
inc
fidivrs
mov
gs
fildl
mov
push
test
mov
inc
inc
ret
daa
xchg
inc
sarl
mov
jae
bound
mov
sub
das
xor
pop
or
ljmp
pop
push
iret
aam
lea
loopne
add
dec
lea
or
loopne
out
into
inc
bound
mov
push
sub
push
mov
lahf
int
mov
cmp
in
jbe
inc
popa
roll
mov
arpl
pop
notb
js
ret
mov
ror
xor
or
addr16
sti
pop
dec
enter
pop
push
add
ja
or
cmpsb
jl
and
xchg
jnp
shll
push
mov
loopne
jge
add
in
mov
sbb
insb
sbb
dec
jl
int
sbb
fidivrl
fstps
sbb
rcrl
js
into
daa
imul
add
jmp
sahf
adc
loop
and
sbb
dec
shrl
push
bound
and
mov
dec
lea
outsl
lcall
jnp
jp
mov
fiadds
cmp
add
rolb
jns
xor
push
pop
lret
xchg
add
jne,pt
inc
out
je
or
jg
rcll
enter
mov
adc
int
in
push
out
sub
jns
cld
xchg
cmpsb
dec
and
dec
xchg
in
jb
push
sbb
loope
mov
filds
and
mov
push
aad
rcrw
pop
adc
test
loop
in
mov
xchg
daa
xor
pop
inc
mov
adc
sbb
mov
or
aad
mov
sub
dec
xchg
hlt
popa
int
out
push
ficomps
or
fistps
add
xchg
pop
pushf
ja
mov
fimuls
bound
jnp
push
and
mov
lret
fisubl
lods
dec
push
xchg
cwtl
xor
repz
and
pushf
out
dec
jnp
fsts
inc
add
mov
ja
or
push
jnp
out
cwtl
jns
fldl
inc
into
push
cs
lods
mov
pop
out
int
incl
lds
lea
dec
loope
into
dec
and
shll
addr16
push
xchg
stos
pushf
push
daa
shll
shll
nop
adc
repnz
lods
shrb
inc
add
cmp
ljmp
enter
ffreep
fmul
ds
stos
lods
lcall
push
ret
lods
ret
sbb
xchg
add
mov
stc
testl
pop
ljmp
mov
lds
xchg
inc
fisubrs
scas
dec
into
push
pop
les
pop
ret
push
lds
adc
in
ret
ret
push
lds
ret
dec
lret
dec
inc
adc
out
push
in
xlat
aam
mov
push
rolb
js
subl
lds
dec
jmp
outsl
cs
ret
dec
stc
pop
xlat
das
pop
dec
ror
imul
dec
inc
fmul
inc
lret
push
pop
dec
or
ret
sub
push
push
push
fcmovb
or
imul
pop
cmc
loop
movsl
insl
sbb
and
rcll
dec
lds
or
sub
inc
loopne
mov
into
fxch
pop
imull
ret
dec
dec
adc
in
add
orl
add
outsl
imulb
lret
loop
push
dec
insb
fisttpl
push
or
ficoml
dec
push
pop
push
daa
lods
xor
inc
imul
push
leave
leave
imul
xor
lds
push
leave
xor
std
jnp
in
fld
pop
into
pop
ret
pop
cmc
cmc
mov
ret
pop
dec
mov
push
ret
ret
jb
mov
shll
dec
shrl
ljmp
mov
fstpt
sarl
fstpl
inc
fstl
inc
outsb
ret
leave
inc
push
push
decb
enter
dec
push
outsl
imul
dec
inc
pop
hlt
into
dec
shrb
jmp
fcoms
push
dec
adc
aad
dec
loop
sbb
inc
leave
cmovnp
add
jnp
xchg
jmp
rclb
fdivrs
divps
ret
sbb
stos
adc
aam
xor
inc
fxam
dec
inc
shl
push
push
xlat
push
rorl
int
fisttpll
push
dec
inc
inc
test
fdiv
xchg
push
inc
fimuls
incl
mov
add
push
push
fimuls
popa
and
fistpll
gs
cmp
jae
mov
mov
add
shlb
cwtl
xor
cmpsl
shr
popa
sbb
cld
iret
dec
cmp
ret
or
xchg
aaa
cli
inc
movsb
jle
cld
loopne
and
mov
fstps
add
fidivs
and
shll
cmp
int
jbe
xchg
ret
les
inc
or
or
jmp
movsl
sub
aam
mov
jns
cmp
push
jae
cmp
cs
test
inc
ret
mov
xchg
scas
gs
jmp
out
insb
xor
jle
inc
xchg
pop
and
pop
mov
or
movsb
mov
dec
dec
jp
into
negb
jo
adc
adc
loop
gs
dec
push
leave
nop
scas
inc
lcall
in
loop
and
incb
adcl
push
cmp
cld
ss
incb
xchg
xor
jle
orl
pop
push
pop
movsb
mov
push
addl
ss
jmp
jmp
jno
sti
mov
bound
loop
incb
jmp
mov
mov
into
stos
data16
push
xor
pusha
repnz
stc
or
mov
lods
pop
xchg
jo
jecxz
sub
sub
xor
cmp
loope
pop
mov
aad
bnd
fwait
add
pusha
push
add
nop
pop
mov
js
add
mov
xchg
push
adc
add
lock
dec
inc
dec
enter
andl
sbb
xchg
pop
dec
out
mov
cs
ficomps
jb
adc
and
int
mov
add
push
jmp
test
int3
lds
ror
cmpsl
push
sbb
enter
or
jecxz
repnz
int
add
pop
push
in
test
push
bound
ficoms
xorl
inc
push
arpl
dec
mov
roll
sub
mov
push
enter
mov
ret
shll
aad
xor
in
hlt
cmp
es
add
or
insb
bnd
mov
test
add
jae
js
pop
jb
les
mov
pop
xchg
imul
add
push
mov
sub
hlt
mov
test
icebp
std
xchg
push
and
xchg
push
addr16
fwait
mov
aaa
ret
jl
mov
add
data16
int3
addr16
pop
jecxz
lret
lret
adc
loop
scas
pop
ljmp
cmpsb
daa
sub
pcmpeqd
pop
push
fiadds
into
or
lret
jno
inc
cli
fadds
lods
mov
inc
rcl
sahf
into
or
mov
adcb
mov
dec
cmp
push
lods
test
lock
popa
jne
fscale
adc
lods
jge
inc
sbb
jae
pushf
push
pop
and
gs
shll
jb
sti
xchg
inc
push
jbe
sti
lock
fsubl
sarb
xor
mov
icebp
or
imul
lods
sbb
xchg
add
mov
lret
fidivrs
lea
js
dec
int
push
mov
imul
fisubs
ss
int
dec
push
insl
out
outsb
sarb
std
lods
es
mov
subl
lods
cmc
subl
sbb
mov
bound
test
sti
cmpsl
fistps
xlat
jmp
out
inc
mov
xchg
push
cmp
cmpl
and
mov
xchg
and
pop
or
jo
add
test
psrlw
fwait
popa
ror
sarb
mov
inc
push
jecxz
push
xor
mov
leave
mov
sbbl
lds
movb
mull
es
pushl
xor
lahf
add
and
dec
lret
mov
pop
adc
ret
cmc
dec
jo
test
inc
int
scas
sahf
movsb
fmul
data16
mov
push
cmpsb
dec
ss
imul
xor
mov
mov
mov
stos
xlat
xor
cltd
jp
ss
lods
jl
mov
nop
mov
pop
mov
rcr
sbb
sub
cmc
pop
inc
mov
pop
add
ret
or
dec
jmp
lcall
cmp
sub
cmp
push
repnz
jo
jns
aam
pop
arpl
into
iret
jnp
aaa
int
and
ret
aas
push
lods
push
clc
lret
cmp
xor
sub
cli
sahf
cs
mov
icebp
pop
sbb
or
xchg
cli
test
mov
into
rorb
ret
aas
pop
push
jno
adc
xor
lds
jne
dec
jmp
mov
xchg
dec
adc
fsub
stos
lret
or
push
popa
inc
or
es
lcall
dec
pop
jo
jg
movsb
cli
ljmpw
stos
mov
pop
add
pop
in
inc
sti
shrb
addb
scas
lods
mulb
push
incl
vpcmpgtw
cmpsl
ficoms
leave
in
sbb
iret
in
ret
inc
mov
jne
pop
add
cltd
in
sub
or
mov
fwait
cs
bound
pushf
insl
test
jle
push
add
int
les
inc
popa
push
movsb
icebp
pop
rcrl
mov
xor
in
mov
aam
mov
jno
dec
dec
push
pop
fisttpl
pusha
inc
int3
fists
xchg
add
mov
cmp
mov
int3
adc
jno
out
fldenv
cwtl
inc
mov
lret
icebp
jnp
nop
lret
loop
fidivrs
scas
adc
xor
dec
push
xchg
ljmp
lahf
lock
xor
dec
testb
lahf
repnz
mov
rcrb
sbb
mov
test
pop
test
sbb
roll
rcrb
mov
xlat
jmp
mov
or
loopne
hlt
inc
cmp
sbb
adc
outsb
hlt
pop
mov
iret
ja
roll
dec
xor
out
repnz
push
hlt
pop
mov
adc
dec
adc
fld
jnp
jae
jge
mov
hlt
insl
add
mov
jg
fucomp
inc
xor
mov
inc
sti
jp
outsb
andl
sub
leave
and
pop
mov
repnz
dec
stos
mov
test
or
int3
mov
movsb
xor
cltd
adc
xchg
sub
pop
jno
add
sti
daa
jle
jbe
jnp
out
pushf
cltd
sbb
push
ficompl
sbb
xor
sbb
jge
pop
mov
je
fnsave
inc
pop
xchg
push
inc
pop
mov
cmpsl
jge
add
shrl
adc
mov
mov
dec
sbb
pop
or
ljmp
xchg
movsb
mov
aas
outsl
pop
vcmppd
loope
sbb
cltd
leave
decb
sub
fwait
loopne
jmp
push
lcall
sbb
push
orl
leave
jbe
faddl
sbb
test
loope
nop
add
fwait
xchg
scas
lret
push
adc
push
jnp
and
mov
mov
pop
fisttpl
jne
sbb
add
and
mov
mov
pushf
dec
cmp
add
xor
lahf
or
rsqrtps
inc
scas
xchg
sbb
insl
or
push
inc
stos
ret
rcrb
fldt
push
div
add
les
leave
in
mov
mov
mov
popf
dec
sbb
xor
leave
aaa
pop
or
fisubrl
jecxz
mov
ljmp
xor
jo
mov
lret
inc
rcll
pop
pop
enter
jb
xchg
fs
repz
out
shll
daa
or
stos
jns
adc
scas
and
lahf
dec
xchg
and
inc
divb
popa
test
lods
notb
add
call
inc
lea
aas
nop
paddsw
lret
pop
sarb
into
cmp
cs
and
push
imul
arpl
jge
sahf
fidivrl
lret
loop
ret
jmp
pop
iret
int3
clc
adc
fimuls
jno
mov
push
and
ror
cmpsl
fst
sbb
sub
push
cmp
mov
daa
push
and
mov
std
pop
xor
int3
out
xchg
mov
pop
dec
xor
ficoms
sbb
xor
mov
daa
enter
mov
fimuls
fnstenv
in
aas
scas
cli
mov
and
orb
mov
mov
rcr
and
add
mov
aas
sub
fsubrp
sub
mov
add
sti
stos
imulb
mov
andb
lahf
push
loope
ret
mov
cmpsb
outsl
jecxz
xchg
jmp
mov
pusha
push
cli
rcr
lods
iret
repz
mov
push
or
and
shrl
sbb
xchg
mov
fcmovnb
sub
loopne
arpl
inc
pop
cmp
push
inc
aam
cli
xlat
testl
sbb
fldl
jne
or
ds
mov
shl
fcoml
pusha
pop
xor
nop
fdivrp
cltd
sbb
jae
cld
test
test
push
push
sbb
dec
xlat
mov
mov
stc
js
dec
loope
mov
aam
leave
lret
mov
cmc
inc
inc
inc
jb
pop
fsts
push
pop
cmpsb
dec
inc
jo
loop
rcrl
sbb
sbb
aas
xchg
cld
mov
loopne
and
xchg
sbb
mov
lods
sar
icebp
and
mov
out
cmp
stc
sbb
xchg
mov
int3
shlb
int
xchg
push
xchg
dec
test
xor
lret
push
dec
loopne
imul
pop
pop
call
pushf
jno
sub
cmpb
cld
stos
and
sbb
push
insb
jmp
test
pushl
sub
dec
bound
std
lea
andb
shll
mov
mov
rol
stc
in
push
ror
fdivs
nop
stc
and
fidivs
enter
push
add
mov
data16
add
sbb
sub
loop
xor
mov
js
decb
stos
mov
inc
aad
lods
cmc
hlt
pop
jbe
lret
movsb
push
or
fstps
sbb
mov
sbb
inc
jns
aam
fcoml
sbb
mov
inc
inc
xor
fwait
mov
out
sbb
faddp
int
fisttpl
fmull
and
push
pop
mov
pop
pop
cli
cltd
ss
cwtl
inc
dec
ds
lret
dec
fisubrs
lret
xlat
cmpsb
cltd
inc
shrb
cmp
inc
push
arpl
into
adc
icebp
stos
sub
arpl
ret
inc
and
xor
push
jne
jecxz
fsubs
jmp
push
add
sub
dec
jns
inc
xor
fstpl
and
and
dec
iret
jle
or
cld
add
aad
ret
inc
je
test
andl
xchg
lea
or
sub
cli
push
push
sbb
lret
and
ljmp
lahf
mov
mov
into
data16
sahf
inc
rcrb
rclb
ret
loopne
fisubs
lret
sarl
jb
dec
iret
pushf
je
cmpsb
orb
shl
mov
inc
mov
jl
inc
pop
pop
mov
rol
or
xchg
pop
loope
adc
jo
mov
pushl
xchg
loop
add
insb
out
lods
pmulhw
jge
das
jno
fidivs
in
test
call
and
pop
or
mov
ljmp
leave
mov
mov
pop
outsb
out
pop
out
push
insl
popa
fld
mov
dec
clc
dec
push
imul
sbb
int3
lret
test
xor
mov
adc
dec
dec
inc
xchg
mov
inc
inc
jns
xchg
pop
fsts
cmp
dec
mov
lahf
into
mov
jmp
outsl
jl
inc
int
mov
pop
push
push
mov
lea
ror
push
push
jns
lods
push
aas
sub
jb
xlat
and
mov
push
nop
ret
sbb
xor
lea
add
int
mov
mov
das
aam
add
push
mov
dec
adc
xchg
inc
xchg
inc
jmp
mov
pushf
xor
ljmp
xor
insl
jmp
push
je
jmp
enter
sbb
ret
aad
mov
insl
inc
adc
loope
mov
iret
sbb
pop
fwait
push
pop
clc
adc
or
outsb
mov
mov
stc
pop
and
add
add
ret
aad
decl
icebp
inc
dec
push
lahf
lret
dec
shrl
fsub
movsl
cmp
hlt
sub
out
pop
add
inc
push
mov
rorb
ficoms
ja
pop
out
insb
sub
loop
jecxz
or
dec
cmp
adc
xor
inc
and
push
adc
mov
fimuls
enter
dec
jne
push
pusha
xchg
mov
or
pop
push
mov
subl
jl
in
and
pop
es
pop
cmpsb
enter
and
loope
push
test
sub
xor
je
imul
mov
loopne
push
dec
cmp
rcrl
jp
aaa
push
sub
dec
andb
ss
pusha
mov
mov
addr16
inc
push
cmp
iret
lcall
push
cli
cmp
in
mov
pop
pop
out
push
jb
das
cmpsl
adc
loopne
psubusw
push
mov
les
mov
loopne
test
popa
lsl
pop
adc
ljmp
xchg
pop
shlb
sbb
insb
adc
loopne
jb
mov
arpl
sbb
or
int3
mov
into
stos
and
fs
lock
das
cltd
jnp
or
jns
xchg
out
aad
sar
mov
pop
cltd
cmp
mov
and
cmp
cmpsl
mov
lea
push
dec
mov
jne
mov
mov
mov
mov
push
xor
adc
jae
xor
int3
test
mov
inc
sarb
push
in
push
xor
sub
lret
shrl
push
jge
call
jnp
pop
loopne
add
cld
jne
sub
mov
jb
pop
push
iret
dec
std
inc
add
push
mov
sub
mov
adc
ds
adcl
inc
sbbb
fidivs
adc
fstps
pop
test
xor
push
xchg
jl
inc
cltd
scas
inc
or
outsb
lods
lcall
sbb
iret
ret
in
xchg
add
pusha
shr
mov
xchg
xor
and
in
fisubl
push
pop
mov
add
mov
fsubs
clc
sub
repnz
cmp
ret
and
ljmp
sbb
shl
sbb
push
ret
xchg
jne
adc
jge
and
push
mov
int
mov
in
loope
jb
sarb
cmp
cmpsb
jg
dec
and
xchg
dec
das
fcmovnb
pop
sbb
add
cmpb
aad
lcall
xor
outsb
movsb
js
lahf
mov
in
mov
in
pop
push
push
mov
inc
jns
jbe
push
loop
cmp
xor
icebp
lahf
xchg
test
bound
lods
enter
and
call
add
mov
adc
jg
and
dec
mov
cld
jmp
movsb
mov
mov
xchg
nop
cli
shl
jecxz
lret
shll
popf
push
mov
cmp
cmp
js
fwait
pusha
dec
xor
imulb
shr
into
inc
adc
enter
je
into
jge
cmp
xor
dec
and
and
jge
sbb
adc
push
mov
outsl
xor
addr16
lret
sub
fmulp
xor
ficoms
jp
or
in
mov
call
int
add
jnp
in
ja
inc
fwait
sbb
pop
sub
dec
adc
inc
out
jbe
ret
dec
sub
and
mov
pop
lea
pop
mov
les
lods
in
nop
mov
xchg
xchg
jbe
loop
inc
add
aas
pop
test
sub
fs
jnp
aad
inc
mov
push
xchg
imulb
loop
push
pop
int3
jmp
sub
xchg
hlt
enter
mov
sbb
sub
and
into
sarb
dec
movsl
jb
loop
fisttps
std
loopne
psrld
lret
xchg
jbe
rolb
sub
or
fucomip
push
lea
rolb
xchg
lret
ror
adc
or
xchg
lahf
mov
xlat
sbb
hlt
pop
ret
fwait
jmp
out
and
and
popa
add
insl
iret
lret
stos
mov
ret
push
dec
test
lret
dec
test
mov
jae
mov
movl
nop
xchg
ja
mov
lahf
add
add
inc
push
rorl
fisttpl
loopne
xchg
mov
pop
mov
pop
nop
xor
adc
push
pushf
testb
je
cli
inc
movsb
mov
pop
push
je
sub
pop
xchg
xchg
scas
lds
lods
pop
sub
xor
pop
cmp
dec
fmulp
dec
jp
enter
testb
jno
fsubl
or
std
stc
fwait
ret
mov
and
pop
pop
fs
xor
gs
pusha
in
fucompp
or
imul
loopne
or
loop
stos
adc
cwtl
xor
dec
in
mov
sub
add
mov
arpl
inc
daa
xchg
xor
lods
mov
add
cli
xchg
xchg
sahf
xchg
push
cmp
mov
jp
inc
sbb
ret
xor
mov
xor
bound
subb
mov
push
inc
lods
sub
xchg
inc
jmp
push
inc
lcall
mov
mov
repz
mov
popa
stc
rorl
or
and
insb
lret
pop
lea
test
push
fs
xor
daa
ljmp
xor
fsts
dec
push
pop
adc
stos
pop
jge
sti
xchg
jnp
add
mov
bound
std
mov
pop
inc
pop
stc
add
fwait
xor
rcr
push
pop
cmp
fwait
adc
ss
cmp
pop
andb
inc
cmp
push
jbe
stos
add
mov
add
bound
sbb
movsl
rolb
jo
test
jge
fimuls
jle
into
outsb
or
arpl
pusha
bnd
and
xlat
ds
int
loopne
push
imul
jmp
or
push
jno
inc
xchg
movsl
jbe
scas
dec
dec
out
mov
aaa
xchg
mov
cli
adc
add
ret
int
sub
push
push
repz
add
cltd
mov
fcmovne
clc
movsb
call
ds
inc
int
dec
into
mov
fisubs
inc
fcoms
into
and
xor
mulb
push
loope
cmp
inc
sub
leave
fisubs
cmp
clc
pusha
js
lods
pushf
fdivs
mov
mov
sbb
pop
push
add
dec
mov
xorl
mov
sbb
add
cs
xor
adc
dec
adc
add
cmp
ret
insl
in
insb
repnz
and
pop
add
rcrl
fldt
xor
int
scas
enter
in
or
push
daa
add
fisubs
fstps
js
movb
mov
imul
lcall
mov
adc
mov
sahf
inc
cmc
lret
fbstp
outsb
cmpsl
adc
dec
mov
xchg
jmp
mov
dec
mov
adc
int
adc
out
mov
lcall
movl
mov
cmp
orb
std
and
cmp
js
and
sbb
cmp
pop
dec
loop
or
rcrl
mov
pop
les
lock
mov
sahf
into
loopne
int
ficoms
xor
fsubl
out
cmp
mov
inc
negb
test
push
push
pop
sbb
loop
aaa
pusha
xchg
push
sbbl
jb
loopne
insb
mov
test
push
xchg
add
mov
in
fsubrp
lahf
adc
sub
mov
sub
repnz
int
cwtl
mov
jno
adc
test
loop
mov
sub
or
inc
jno
add
push
imul
dec
push
stc
lcall
jb
in
sbb
sbb
fdivp
xchg
cmp
mov
loopne
imul
lea
test
lret
les
int
aaa
icebp
jb
insb
rol
in
test
sahf
cmpsb
jmp
test
add
adc
stos
mov
xchg
int
sti
pop
ja
mov
push
jmp
lret
mov
sbbl
dec
imul
push
dec
clc
rcrl
jno
and
xchg
nop
sub
dec
or
pusha
mov
jmp
mov
mov
mov
into
pusha
gs
insl
into
les
adc
test
repz
js
jle
push
cli
adc
adc
into
or
fwait
insb
cmc
rcrb
lret
movsl
cmovnp
jl
shrb
mov
pop
jecxz
and
dec
nop
vmulpd
cmp
in
jae
leave
bswap
dec
inc
and
aaa
cmpsb
mov
xlat
mov
fpatan
pop
and
in
cmp
pop
xorl
sahf
or
inc
or
and
xor
in
addl
xor
in
mov
lods
loope
fiadds
subl
cmpsb
stos
push
ds
addl
pop
inc
cmc
dec
lds
js
fadds
bound
aam
inc
std
and
jnp
mov
ficoms
xchg
pop
mov
lods
int
into
popf
or
ss
pop
xchg
addr16
push
jl
xchg
leave
and
into
sti
in
les
lds
inc
inc
jo
push
sbb
mov
sub
aas
pop
imul
and
add
rolb
mov
out
cmp
fidivrs
add
mov
rclb
test
fwait
test
insl
sbb
sub
xchg
or
xor
clc
cmpsb
lret
mov
adc
add
daa
mov
pop
dec
jne
pop
mov
ftst
add
cmp
ret
xchg
dec
sub
imul
dec
js
orl
fdivrl
push
cmp
ret
jmp
lods
xor
fsubp
fbld
lods
hlt
arpl
push
pop
aas
addb
addr16
stos
add
adc
sbb
mov
jbe,pt
and
inc
mov
mov
cld
pop
icebp
test
pop
push
and
dec
dec
scas
sub
fisubrs
nop
lods
jbe
daa
fdivrp
adc
arpl
dec
cmp
nop
outsb
dec
cmp
adc
stc
mov
sbb
jb
sti
mov
int3
lahf
jo
jo
cwtl
daa
pop
ficomps
in
dec
add
pop
daa
lret
xor
ret
and
xchg
push
push
xor
inc
decb
lret
mov
popf
cmc
aas
ret
cmp
xchg
mov
sbb
insb
scas
jae
scas
int3
aam
mov
ss
pop
std
push
jmp
ret
sti
lea
sti
push
push
jmp
mov
xlat
mov
test
mov
cmp
test
insb
lcall
test
push
shll
stc
jb
xchg
dec
js
dec
dec
les
lret
lock
pop
mov
leave
lret
mov
add
out
sbb
cmpsb
pop
add
repz
aas
inc
mov
sub
xor
adc
mov
cmp
data16
pusha
les
jns
icebp
repnz
dec
dec
jae
pop
xchg
or
scas
cmpsb
add
rorl
test
jne
mov
and
ljmp
sbb
insl
jecxz
js
in
lret
or
ret
jo
pop
mov
sub
cld
lea
js
int
mov
pusha
mov
inc
loop
mov
into
loop
pop
lods
and
stc
out
sti
lods
bound
icebp
sbb
std
pop
scas
xchg
outsl
jne
xor
sbb
pop
repz
int
add
fiaddl
enter
jmp
push
insl
add
add
loopne
imul
jg
fiadds
inc
out
and
mov
jp
ja
xor
lods
imul
jmp
push
mov
pop
mov
lret
push
lcall
jbe
lods
rolb
pop
xor
push
mov
enter
push
jb
pop
inc
dec
mov
fs
test
inc
xor
scas
ror
push
xor
fimuls
jg
ret
aam
mov
loopne
or
pop
dec
jge
mov
lret
adc
cmp
push
inc
or
outsb
xchg
add
aam
movsb
sub
insb
add
cmp
dec
mov
ljmp
daa
clc
fildll
sub
inc
test
and
inc
loopne
lret
mov
das
les
or
sbb
and
adc
jno
jmp
sbb
filds
cltd
stos
and
cmp
daa
int
cmp
daa
aad
aam
xlat
es
andb
ret
jge
or
inc
leave
cmp
mov
and
push
jmp
sbb
sarl
mov
xor
pop
ja
out
sbb
jecxz
jns
mov
mov
lock
pushf
ss
add
mov
inc
jo
inc
xchg
push
push
das
cs
inc
int
cmp
sbb
movsl
push
imul
lcall
mov
sti
out
and
jnp
movsb
sbb
fucomp
mov
or
enter
mov
xchg
rol
push
repnz
ljmp
mov
sub
lods
testb
data16
cmpsl
sub
shlb
inc
insb
lret
push
stc
mov
cmpsl
mov
mov
or
daa
jmp
jns
inc
ljmp
outsb
inc
pop
xchg
mov
or
jmp
or
jmp
dec
xchg
js
jl
xchg
movsb
loopne
int
mov
jmp
and
add
andl
popa
push
cmp
jo
in
push
bound
xchg
pop
jp
stos
sahf
push
lods
fsubrp
flds
mov
in
and
jl
dec
pop
lods
cmpsb
aam
mov
data16
lods
subl
push
inc
pop
pop
xchg
lea
pop
js
add
mov
push
xchg
mov
fs
sbb
or
or
in
adc
dec
enter
jle
add
dec
inc
js
mov
push
or
bound
pop
int
xlat
test
push
push
into
loop
mov
in
pop
jo
test
int
int3
aam
loopne
lods
cltd
pcmpgtd
sahf
outsb
movsl
mov
sbb
loop
mov
sub
sub
sti
rol
int
movsl
js
loop
mov
faddl
pop
adc
and
xlat
sbb
ret
into
data16
hlt
fs
fidivrs
add
inc
pop
sub
ret
std
cmpsl
shll
push
sbb
mov
push
inc
lds
icebp
sti
sbb
or
mov
fdivrl
data16
jne
ljmp
jp
xlat
test
add
stc
push
mov
jo
pop
cli
shrb
xchg
fstps
inc
sub
outsl
jg
cld
dec
into
fyl2xp1
sbb
sub
sbb
in
icebp
cld
das
push
shlb
lods
sti
sbb
sarl
sbb
int3
out
stos
cwtl
push
pop
movsb
ljmp
xor
fwait
test
fneni(8087
aad
test
mov
bound
ficoms
int
push
imul
aas
sbb
sub
push
push
test
loope
adc
loop
dec
mov
repnz
fildll
test
sub
or
lret
mov
dec
push
and
aaa
mov
pop
push
jmp
cld
lea
outsl
xor
lea
add
sahf
mov
jecxz
dec
dec
std
mov
push
les
orb
int3
sbb
sub
fstpt
loopne
inc
enter
adc
fadd
jecxz
je
mov
mov
repnz
lds
add
mov
mov
or
cli
sbb
adc
jl
cmp
jp
add
loop
ret
out
inc
mov
push
dec
xor
sbb
into
lcall
inc
xchg
mov
add
call
cld
sbb
repz
popa
ljmp
lods
lret
jnp
jg
imul
xchg
scas
lods
dec
in
push
aas
out
push
shl
and
inc
cli
mov
pop
cmpb
rorb
sub
cmpsl
push
dec
push
cli
insb
mov
shr
cltd
cli
fnstcw
int
rcrl
jl
fildl
loop
adc
push
pop
ljmp
or
mov
push
xor
inc
sbb
mov
popfw
xchg
scas
movsb
and
push
push
cmp
out
daa
jle
and
je
xlat
mov
lds
xor
icebp
int
adc
mov
lods
sbb
hlt
rep
popa
out
jbe
push
iret
neg
movsl
into
les
mov
adc
mov
add
aas
add
out
ja
add
out
loope
rcrl
sbbb
inc
cmp
les
repz
jmp
shr
jge
mov
inc
sub
sub
mov
testl
push
mov
push
sbb
jo
xlat
mov
jno
or
idivb
out
aam
sbb
fists
into
call
inc
mov
add
cmpsl
sbb
xor
sar
inc
dec
pusha
lods
or
ss
lock
and
les
pop
mov
je
inc
push
fidivs
shll
roll
ljmp
push
mov
and
aam
mov
mov
and
lret
mov
addr16
jmp
sahf
dec
push
decb
imull
cmp
leave
sarb
hlt
aam
ficompl
loopne
loop
bound
sahf
and
stos
inc
enter
mov
cmp
data16
fdivs
mov
ror
xlat
mov
or
add
loopne
sti
shrb
mov
pushf
js
aam
out
clc
xchg
leave
adc
sub
cmpsl
stos
ja
std
xor
gs
out
leave
mov
lret
push
int
add
popf
mov
shrl
ja
ljmp
mov
call
sub
fwait
js
scas
mov
add
popfw
lcall
sbb
nop
or
leave
cli
popf
loopne
cltd
out
sub
ljmpw
xchg
push
stc
mov
jnp
pop
mov
andl
pop
ja
mov
cld
jmp
sbb
mov
and
enter
xor
mov
ret
shl
lods
test
pop
and
shlb
push
js
std
pusha
or
movsl
sub
inc
icebp
ja
in
jne
insb
fcoml
ret
lret
jae
loop
xlat
or
psubq
addl
fwait
lea
sbb
mov
js
cmpl
sbb
and
pop
xor
or
iret
lcall
sub
andl
je
fimuls
cmp
xor
mov
dec
mov
mov
add
push
adc
pmullw
mov
sbb
icebp
add
or
mov
andl
inc
lods
cmp
mov
jmp
xlat
cltd
pop
mov
lea
rorl
mov
push
iret
cwtl
loopne
mov
push
mov
decb
in
push
sbb
fsub
ret
dec
hlt
std
jns
sub
or
xor
xor
xchg
loope
or
out
push
pop
jns
inc
decb
xchg
cmp
into
loop
dec
adc
push
jmp
push
das
jp
xlat
ljmp
jecxz
enter
or
sub
test
mull
mov
dec
int
push
jmp
push
mov
add
add
out
bound
lods
dec
mov
das
inc
into
or
ret
inc
cmpsl
cmp
incb
cmp
loope
into
orl
xchg
pop
fcom
ljmp
movsb
add
jmp
das
inc
jge
mov
sub
mov
and
and
and
fadds
inc
insl
call
fimuls
mov
aad
out
mov
pop
adc
shll
int3
scas
push
sbb
add
sti
add
popa
push
or
mov
in
mov
mov
and
jne
jge
fdivs
mov
dec
lret
test
repz
into
dec
dec
jnp
xor
mov
sarl
stc
into
jmp
xchg
mov
sti
jne
xchg
or
insb
and
push
out
data16
dec
push
fsubrl
cmp
cltd
daa
inc
fcmovnu
add
pop
mov
mov
out
mov
lds
inc
or
rol
xor
enter
adc
jl
loop
adc
add
faddl
sbb
jo
js
or
xor
sarl
inc
fimuls
mov
popa
aam
movsb
sub
pop
inc
sar
addl
mov
push
jb
out
adc
jmp
lret
mov
pop
lahf
mov
inc
xchg
and
adc
iret
mov
push
fdivp
jmp
mov
xchg
xor
dec
xchg
inc
jg
enter
or
ret
push
lea
add
and
in
scas
divl
sti
dec
stc
fidivrs
jae
xchg
movsl
dec
pop
inc
fsts
xchg
lcall
hlt
mov
fimuls
sbb
jl
xchg
add
jae
cli
rcll
call
sahf
and
pop
add
pop
xorl
jb
sub
mov
sarl
ret
rcll
sbbl
call
push
fwait
mov
pop
incb
xor
mov
ret
mov
inc
push
ds
mov
cmc
ljmp
repnz
into
cltd
sbb
inc
push
out
sarl
sub
cmpsl
sbb
cmpsb
aaa
pop
or
mov
mov
fisttpl
fwait
push
mov
hlt
fbld
ljmp
push
aas
test
test
lahf
pushf
leave
fsub
pusha
xlat
add
shl
add
sahf
fs
xchg
push
scas
lods
sub
inc
pusha
leave
sub
cmc
xchg
sub
xor
xor
push
cmpsb
push
mov
sub
push
mov
ljmp
fs
push
ret
enter
sbb
mov
push
stc
out
out
sbb
jae
or
in
adc
js
mov
enter
or
lcall
nop
fwait
sub
arpl
in
mov
jns
shl
pop
mov
push
push
gs
out
fsubl
sbb
pop
cld
int3
cmpsb
lea
adc
add
or
mov
adc
insb
mov
or
imul
jne
dec
push
test
loopne
test
rcl
mov
ja
mov
jge
je
or
jns
jns
and
rcr
add
adc
cwtl
push
cwtl
aad
jne
in
insl
add
loopne
pop
adc
add
lds
or
gs
push
sub
outsb
adc
outsb
mov
rclb
push
fdivrs
jge
jbe
sbb
inc
ss
insb
or
lock
cmpsl
dec
js
imul
stc
push
jno
inc
dec
pop
add
sbb
loop
mov
adc
fsubr
neg
fwait
mov
popa
rorl
jne
pushf
or
inc
repnz
inc
stc
xor
and
ja
ret
push
repz
xor
in
das
sahf
subl
xor
cmp
xor
sbb
std
mov
aad
mov
rcr
lds
dec
mov
adc
scas
pop
pop
ss
aaa
jmp
sbb
dec
decb
icebp
jp
lods
or
xlat
pop
imul
push
clc
inc
jae
daa
pop
cli
aaa
scas
cmp
dec
add
adc
xor
mov
repz
mov
add
mov
out
rolb
mov
push
xchg
xchg
add
cmpsb
adc
mov
scas
testb
dec
mov
jno
pop
dec
pushf
cmp
mov
jmp
ret
js
cwtl
not
mov
cmp
inc
insb
ret
add
sub
lods
mov
dec
fsubrp
push
jp
mov
cmpsb
mov
idiv
cmpsl
push
sahf
mov
insb
js
mov
sarl
mov
leave
popf
mov
mov
mov
pop
jo
les
lea
xchg
int
ds
leave
add
add
xor
push
lods
add
lret
inc
fcomi
daa
mov
add
enter
pop
into
in
xchg
push
jnp
mov
lret
jl
insl
sub
or
insb
xlat
cwtl
push
inc
inc
sbb
pop
sub
and
sahf
aam
mov
jmp
add
std
orb
stc
pop
into
sub
movb
cmp
jns
repz
nop
ret
out
dec
or
and
xchg
decb
nop
push
push
adc
sahf
jno
outsb
aad
cmp
test
inc
les
adc
fst
fwait
adc
push
ret
iret
sub
test
into
gs
nop
fldt
xchg
scas
ljmp
into
pop
repnz
popf
jmp
ret
inc
mov
sbb
sub
pop
inc
sbbl
rorb
xchg
jno
mov
pop
adc
pmaddwd
lret
jmp
and
faddl
popf
scas
xor
and
xlat
out
enter
add
cmp
repnz
sub
add
jl
mov
inc
adc
rclb
dec
mov
rsqrtps
outsl
and
lret
inc
subb
fwait
xor
loopne
movsb
mov
sahf
fstps
cli
and
push
jbe
pop
popf
pop
push
ret
sbb
inc
mov
inc
lret
into
add
xchg
stos
out
jmp
sub
cli
movsb
xchg
add
or
and
and
sbb
add
mov
out
loope
push
faddp
sub
ds
pop
bound
sbb
negb
aas
cmpsl
push
xor
out
dec
sbb
in
sub
aas
jb
add
scas
mov
mov
loop
es
lret
data16
sbb
or
sbb
cmp
sbb
std
sbb
fcmovne
sar
and
sub
lahf
in
mov
jb
or
lods
ljmp
fstpl
fmuls
jge
mov
jne
inc
and
xchg
and
jne
ret
push
jmp
loopne
lret
pop
stos
data16
stc
dec
push
and
push
and
push
sub
mov
and
mov
dec
push
ret
fisubrs
inc
lret
add
movsl
mov
imul
mov
mov
xlat
or
test
mov
aas
test
lods
jle
xchg
push
movsl
dec
inc
xor
pusha
scas
push
ds
mov
test
pushf
and
jb
sbb
and
push
fwait
sub
push
add
lods
xchg
inc
push
mov
push
pop
icebp
push
out
scas
pop
lcall
xor
xchg
imul
pop
lods
fnsave
es
xor
ret
cmp
lods
das
cmp
sub
iret
mov
into
mov
mov
cmp
ds
subb
cmp
fdivp
bswap
jl
lret
xchg
pop
daa
sar
add
pushf
jb
pop
fistpl
xchg
dec
cmpsb
and
lods
sbb
int
cmp
cmp
inc
lods
in
add
and
and
adc
xchg
mov
je
iret
jne
jmp
imul
or
and
adc
imul
xor
ljmp
push
sbb
sbb
push
cli
into
dec
int
in
xchg
cld
push
je
or
or
xchg
arpl
cmp
or
popf
rorb
aad
test
sti
rorl
daa
pop
xchg
cmp
add
pop
aad
inc
in
fcmovnu
xor
popa
icebp
cmp
push
decl
pop
push
int
dec
popf
sbb
jge
imul
fstp
out
bound
imul
or
mov
fisubs
jne
cmp
mov
mov
repz
add
or
lea
dec
js
push
into
into
xor
in
cmp
cmpsl
popa
mov
pop
in
je
ret
fwait
or
xor
xchg
cmp
mov
xchg
inc
jnp
inc
mov
lret
mov
gs
cmpsb
decb
std
mov
cmp
stos
inc
mov
int3
pushf
lcall
dec
xchg
xchg
jle
in
in
sti
andb
inc
or
fisubl
sbb
ror
xchg
mov
mov
cmpsb
inc
dec
call
fisubrs
jg
sbb
es
mov
lods
fdivr
mov
cmpsb
xchg
xor
add
jecxz
and
sahf
lods
cmp
mov
insb
pop
and
mov
jae
bound
push
sbb
inc
xor
add
rol
jl
cltd
ja
out
leave
vandnps
push
adc
inc
cmp
lods
int3
mov
int3
lock
mov
and
addb
mov
adc
into
cli
in
dec
scas
lods
hlt
fisubs
pop
mov
pop
stc
mov
shrb
or
roll
mov
roll
adc
mov
sarb
enter
insl
repnz
push
lds
push
sbbb
mov
lret
jb
fcmovnu
out
jmp
or
and
out
int
dec
ret
aad
sbb
add
mov
rolb
adc
sbb
and
cld
adc
sub
lods
adc
enter
or
ret
sti
xchg
pop
imull
mov
sbb
out
jmp
mov
stc
pop
leave
cmp
inc
mov
or
mov
repnz
xor
repnz
mov
lods
outsb
stc
into
mov
mov
es
lret
sbb
mov
js
in
bound
xor
aas
xchg
push
fs
mov
loop
push
sbb
push
ljmp
push
fs
sbb
jle
into
add
outsb
mov
orps
cmp
out
into
lds
btc
mov
lock
test
shr
xchg
push
test
icebp
lds
lds
add
mov
test
std
sbb
dec
testb
into
mov
insb
test
in
call
icebp
inc
frndint
add
sub
clc
push
add
xchg
enter
sbb
mov
push
ja
mov
call
adc
fdivl
les
inc
push
ret
ljmp
add
cmpsl
or
fistps
jmp
fdivrl
and
subb
cmp
ret
lds
loopne
lret
js
std
in
jle
pop
cli
or
into
pop
loop
les
xchg
scas
mov
int3
mov
shlb
enter
in
or
leave
inc
push
cs
pop
dec
xchg
ret
inc
lds
out
and
aam
ret
add
jb
push
stos
push
iret
add
sub
ret
and
adc
mov
rol
dec
xor
adc
adc
add
stos
fxch
pop
cmc
fistl
shll
pop
testl
inc
pop
pop
sub
add
lret
fmul
ficoms
push
filds
inc
sbb
shl
push
inc
dec
imul
out
lret
shll
and
rorl
popa
movl
inc
aad
mov
insb
inc
cmc
loop
xchg
int3
push
push
fstp
ret
add
add
rcrb
into
clc
inc
push
dec
rep
jae
push
push
jl
ret
adc
mov
pop
dec
test
pop
movl
adc
inc
sbb
int
jmp
ret
or
je
sub
shr
inc
shlb
dec
dec
dec
pop
mov
imul
icebp
ror
xlat
test
movl
or
xlat
push
lret
vcvttsd2si
rorl
jmp
stos
imul
int
rorb
pop
stos
das
shll
dec
jmp
dec
into
clc
dec
cmc
rorl
inc
ljmp
dec
sbb
lret
lret
pop
dec
push
not
push
inc
push
inc
adc
test
fdivr
loopne
ret
pop
sbb
dec
into
jmp
psraw
enter
push
pop
jb
inc
shll
fucomi
inc
in
xchg
dec
shr
push
rcr
mov
push
inc
inc
add
dec
inc
push
fcmovnbe
push
push
fisttpll
or
inc
jmp
dec
iret
add
or
loope
dec
mov
mov
inc
or
pop
cmpsl
enter
fdiv
sub
dec
jmp
add
lcall
xor
push
cmc
or
sbb
popf
fimuls
dec
xchg
in
cmp
cmp
cmp
mov
and
push
dec
nop
jb
mov
pop
flds
sarl
int
cmp
fistps
test
icebp
pop
lds
xor
divb
ss
and
adc
or
stos
adc
fisttpll
je
cld
cli
mov
add
arpl
js
daa
sahf
out
dec
jbe
arpl
std
bound
shrb
stos
out
push
cmpsl
in
push
mov
jbe
jae
or
leave
adcb
lret
sarl
dec
movsb
into
nop
cld
dec
loop
cli
lcall
mov
cld
lock
sbb
and
test
pop
cld
add
inc
pop
test
mov
insl
jecxz
add
dec
push
sub
shll
add
insb
adc
lea
nop
les
pushf
mov
and
pcmpgtw
push
divl
pop
xchg
cmp
sub
inc
fidivrs
xor
mov
into
test
mov
fsubrp
xchg
cmp
add
loop
rolb
rcrb
inc
add
jnp
dec
ret
ljmp
or
out
push
in
mov
mov
push
lcall
or
dec
mov
into
xlat
fisubrs
int
jbe
cmpl
or
out
inc
lret
jnp
inc
pop
idiv
jne
fwait
jbe,pt
or
stc
dec
incb
daa
pop
int3
hlt
xchg
sub
and
jp
adc
push
dec
sbb
xchg
jne
int3
int
dec
jmp
iret
jae
in
dec
in
popf
mov
pop
std
adc
les
adc
mov
jmp
loopne
jae
jp
push
inc
sbb
flds
mov
ror
jmp
and
add
cmpsb
out
insl
insl
in
cmp
ret
xor
jl
jns
cld
sub
clc
fnstenv
sbb
and
into
aaa
fcoml
push
jb
or
movsb
jb
xlat
xchg
shl
mov
loopne
int
pop
arpl
dec
mov
xchg
pop
leave
or
mov
aaa
add
rclb
fisubrs
adc
jne
bound
test
dec
cmpb
int
int
mov
dec
mov
inc
pop
sbb
ret
xchg
mov
fidivrs
adc
ljmp
sbb
push
insl
add
icebp
into
call
and
in
sbb
enter
ficoms
lret
pop
inc
push
out
pinsrw
add
mov
sahf
scas
mov
pop
inc
inc
fsubrl
ret
or
movsl
inc
and
sbbl
nop
insb
mov
cmp
mov
xor
pop
sbb
jne
jae
pushf
lods
sti
loope
fsubs
stc
in
sub
jecxz
lea
dec
clc
mov
mov
ljmp
dec
in
adc
mov
das
sub
sbb
inc
sbb
dec
arpl
loopne
pop
sub
cmpsl
popf
int3
mov
mov
lahf
push
ljmp
inc
sti
dec
je
rcrb
js
push
sbb
loope
jns
jae
mov
xchg
outsl
inc
in
lds
addl
das
xchg
es
scas
xchg
es
add
mov
test
mov
inc
scas
xlat
dec
mov
std
std
and
and
sub
outsb
jmp
lods
stc
mov
enter
sbb
add
fsubs
inc
push
jb
xchg
lods
rol
int
into
adc
dec
mov
fst
sbb
sbb
or
cmpsl
test
mov
push
mov
lcall
add
lods
testb
lret
ljmp
addr16
xor
lret
into
rclb
movsb
mov
ret
rcll
mov
sarb
mov
movsb
ficomps
jne
mov
dec
xchg
sar
cli
add
pushf
cltd
dec
adc
ss
into
mov
mov
or
lods
ds
jb
and
hlt
nop
or
push
adc
div
movsl
mov
arpl
addl
adc
jle
xchg
into
lds
cmp
xchg
push
cmp
add
lods
jbe
xchg
repz
adc
mov
dec
inc
int3
xor
adc
insb
pop
in
cltd
mov
fucomp
stos
or
jne
lods
aaa
jns
icebp
loop
pop
scas
add
inc
lds
mov
xchg
std
pushf
mov
iret
fnstenv
inc
or
call
xchg
adc
cltd
mov
ss
pop
mov
dec
inc
adc
js
adc
push
popa
pop
dec
push
cmp
mov
pop
push
pop
pop
outsl
int
or
jb
repnz
dec
add
aaa
inc
sti
lea
mov
add
sbb
inc
lcall
cmpsb
loopne
les
fisttpl
pop
inc
lcall
cmp
jns
repz
loop
rcrl
jno
inc
mov
pushf
insl
push
pop
and
sub
out
loop
mov
fcmovne
ss
or
push
sbb
jl
pop
hlt
pop
push
outsb
mov
icebp
jecxz
sbb
xchg
fldcw
or
lods
loope
inc
cmp
incb
xchg
ret
or
add
cmp
sbb
push
sub
dec
jmp
jns
rcrb
stc
inc
inc
movb
lods
les
lahf
lret
fiadds
cmp
insl
fimuls
addb
add
fdivl
jbe
movsb
enter
inc
fucom
sbb
sbbl
inc
es
or
pop
les
out
jbe
add
in
lods
xchg
cli
in
add
mov
fs
add
mov
nop
bound
icebp
jp
test
mov
cmpsb
rorb
inc
pop
pusha
mov
mov
jle
inc
jl
insl
pop
fildl
aam
flds
int
out
arpl
hlt
shlb
mov
cmp
sub
push
sbb
ljmp
jge
push
aaa
insb
fisubrl
fiadds
ja
xorl
fadds
mov
divl
xor
addr16
lcall
and
incb
loope
sub
or
cli
add
imul
pop
cmc
xchg
push
jns
add
aas
scas
jg
mov
mov
loop
mov
icebp
sahf
pop
pop
push
arpl
and
dec
jg
adc
shrl
xchg
fsubs
mov
jae
flds
jmp
jge
shll
rep
pop
mov
inc
lds
dec
rcrl
dec
or
orb
jo
pop
cwtl
sbb
insb
stos
fxch
add
data16
fcmovnu
cmpsb
and
jnp
inc
stc
mov
adc
mov
pop
leave
ret
cmovo
and
mov
bound
and
push
adc
loopne
lcall
mov
adc
aam
sbb
inc
adc
xor
dec
andl
ror
push
and
inc
xor
lcall
cmc
adc
lods
add
int
mov
xor
cld
mov
xor
jecxz
pop
mov
xchg
inc
xchg
cmp
add
dec
jb
ja
int
or
adc
push
xchg
movsb
lahf
rclb
jne
adc
dec
mov
sub
or
inc
sub
xchg
push
lds
add
or
adc
xchg
imul
lcall
fcomi
ss
cmp
lods
fstl
inc
fdivr
stos
jo
sbb
jmp
lea
lret
addr16
add
jb
cmc
movsb
adc
sub
out
or
je
inc
fcomp
shll
fwait
mov
cmp
mov
mov
push
ret
push
cwtl
shrl
sbb
mov
pushf
fs
outsl
xchg
and
repnz
push
xor
cmp
inc
cli
cmp
int
fisubrs
and
lahf
inc
repz
stc
jecxz
es
jne
and
sbb
jb
rolb
or
or
ficompl
cmpsl
clc
dec
aas
pop
pop
mov
loop
sub
dec
jl
sub
jne
xor
jae
pop
cmp
lret
fnsave
std
nop
xchg
push
sub
pop
sbb
fwait
negb
add
xor
dec
out
mov
roll
sahf
add
cmp
idivl
imul
into
leave
jl
leave
or
leave
push
mov
dec
fmul
mov
loopne
mov
lret
loop
movsl
ret
ret
enter
lds
ds
mov
lret
rcll
fstpl
or
enter
xchg
pop
jge
out
mov
xchg
jmp
push
int
sahf
in
sbb
ret
dec
les
xchg
cmp
leave
inc
jecxz
cmp
cs
push
dec
test
shrl
pop
inc
sbb
lret
add
sub
xlat
dec
ja
xor
dec
dec
fucom
fisubrl
sarl
ds
or
rcll
push
or
ljmp
mov
andl
mov
inc
pop
mov
into
repnz
inc
mul
cmp
mov
dec
inc
dec
xchg
shrl
out
sub
pusha
xchg
fists
fcmovnb
shl
ret
add
dec
lret
ror
sub
cli
fidivs
jnp
in
enter
loope
lret
fs
dec
push
mov
pop
push
xor
add
dec
loope
fmuls
aad
pop
lret
stos
pop
adc
or
push
dec
dec
adc
loope
dec
icebp
jecxz
arpl
loop
fmuls
ret
push
inc
shll
lds
iret
inc
jnp
in
pop
inc
rorl
xor
and
adc
dec
int3
sbb
outsb
dec
out
dec
fldl
aad
fiaddl
add
dec
push
push
push
in
push
jle
in
dec
dec
pop
push
lret
inc
lds
lret
xlat
push
lds
les
add
push
stc
jnp
cmp
or
adc
pusha
ret
xchg
cltd
mov
ret
dec
mov
into
enter
or
push
int3
push
dec
push
ret
jl
inc
push
rorb
loop
test
enter
inc
adc
adc
loop
movsb
popa
push
pop
mov
int
ret
ljmpw
lret
pop
cmpsb
incl
xchg
inc
sahf
inc
cmp
lea
mov
incl
sub
pop
test
push
decl
lahf
rcrb
mov
add
lcall
inc
jg
ret
mov
dec
adc
mov
mov
mov
cwtl
pop
jns
les
inc
ficoms
xchg
jne
loopne
test
dec
pop
mull
test
xor
mov
lret
sbb
cmp
int
xlat
test
add
add
bnd
or
adc
mov
push
adc
or
lock
frstor
data16
mov
cmp
xchg
ret
sbb
xor
pop
int
mov
dec
xchg
pop
repz
xor
mov
mov
add
or
push
mov
jns
mov
fidivs
or
dec
xor
mov
jg
repz
cmc
outsl
rorb
jns
data16
es
push
icebp
sahf
push
inc
aaa
xor
std
insl
leave
xlat
fwait
out
adc
lds
lods
xor
jno
mov
in
cmpb
adc
and
cltd
fists
xorb
dec
xor
scas
sub
icebp
xor
pushf
test
leave
inc
scas
cmpsl
xchg
add
aam
cli
adc
adc
into
movsb
and
stc
jne
dec
xor
int
sbb
and
bound
lds
frndint
insb
mov
loopne
mov
je
insl
mov
xchg
jle
lcall
data16
in
sbb
adc
into
pop
sub
add
push
pop
push
jo
dec
or
adc
movsl
lods
inc
xchg
hlt
test
call
out
mov
xchg
jmp
dec
std
xchg
mov
and
fisubrl
dec
ljmp
and
insb
div
fst
ss
adc
or
add
std
bound
dec
test
xor
les
and
jp
icebp
std
repnz
daa
mov
in
add
xchg
inc
xor
lret
lock
mov
std
mov
fwait
inc
inc
push
or
cmpsl
in
aaa
cwtl
adc
loope
stos
pop
andl
pop
mov
jb
jg
xor
repz
mov
shll
or
adc
imul
pop
outsb
jbe
ss
cmp
and
and
les
pop
orl
push
mov
dec
cld
xchg
xchg
push
inc
stc
call
ret
ljmp
lcall
nop
mov
adc
inc
data16
vpshufd
out
sti
fildll
cmc
rcll
fstpt
or
imulb
cmpsb
and
popa
jne
cli
xchg
jo
repz
add
fyl2xp1
and
sub
inc
cmp
mov
xchg
xchg
cmp
push
in
cltd
aas
insb
mov
repnz
in
ret
pop
jp
in
lods
cmp
push
and
popa
je
lcall
add
das
jo
loopne
sub
xchg
movsl
sub
xor
dec
shl
xchg
mov
fimuls
js
faddl
cmp
insb
cmc
outsb
push
sbb
ljmp
push
pop
sbb
ret
dec
inc
push
push
fimuls
sti
sbb
pop
out
fwait
adc
cmpsb
xchg
add
xor
shlb
or
mov
push
mull
stos
je
add
fwait
int3
ret
sti
pop
cmp
pop
in
es
sbb
leave
or
jb
frstor
and
sub
jge
aam
fidivs
xchg
cltd
cmp
sahf
sub
and
test
pop
jne
inc
jp
dec
jge
xor
sbb
cmp
popa
adc
test
pop
cwtl
ljmp
js
fs
jmp
jbe
mov
xor
test
push
inc
fs
mov
or
push
mov
cltd
cmp
aam
cmp
lods
cmpsb
push
sbb
icebp
scas
addl
outsl
shrb
icebp
fiadds
popa
loope
and
daa
and
out
dec
mov
or
dec
inc
jne
lret
lods
ss
std
add
shll
inc
mov
movsb
testb
add
dec
clc
test
inc
pop
jecxz
repz
add
dec
cld
cmp
or
inc
pusha
and
push
es
test
jp
lret
out
mov
movsb
std
adc
push
dec
or
fstpl
jae
pop
mov
adc
xor
xor
push
add
fsubrl
sub
lret
mov
enter
ljmp
mov
xlat
lds
test
jb
inc
shll
inc
or
shr
pop
dec
fcom
ror
cmp
loopne
cs
xlat
roll
leave
sub
fnstcw
fmulp
mov
and
rorb
lds
dec
movb
jge
les
rcll
leave
add
cmp
or
dec
jae
std
and
pop
int
mov
jmp
leave
add
xchg
ror
inc
test
jp
inc
pop
and
ror
lret
movb
mov
sbb
dec
pop
rcl
push
ret
iret
pop
inc
xlat
pusha
pop
inc
shll
pop
ret
push
sub
fptan
ror
inc
vorps
xor
leave
jmp
leave
ljmp
icebp
dec
call
push
into
fists
leave
out
ljmp
sar
adc
lret
leave
push
les
rcll
or
int3
jmp
leave
inc
fadd
lret
or
fsubr
ret
or
or
jmp
pop
loop
push
lock
shr
aad
dec
xchg
shl
dec
out
pop
lret
lret
jbe
dec
ret
pop
push
repz
repz
push
jmp
inc
lret
ljmp
inc
loope
rcrb
repz
rorl
dec
jbe
dec
ret
dec
leave
or
jmp
ret
loop
loop
loop
loop
inc
leave
inc
pusha
ret
inc
inc
je
push
aam
divl
dec
fcmovnb
dec
into
jmp
in
into
dec
adc
ret
lret
or
enter
leave
inc
ret
dec
or
inc
push
arpl
fsubs
jnp
loop
push
loope
push
out
in
fstpt
les
rol
lret
add
or
push
ret
inc
pop
ljmp
add
add
push
dec
dec
inc
out
or
enter
ret
push
fstl
loope
push
or
fmull
jmp
leave
dec
jmp
shll
lretw
inc
leave
fistl
fadd
inc
fsts
xor
loopne
arpl
popa
mov
cmpsl
notl
add
sti
fisubs
xlat
nop
mov
or
inc
repnz
adc
data16
lcall
and
inc
pop
mov
mov
cmp
cs
cmpl
dec
nop
jl
pop
jg
pushf
mov
add
push
cmpsb
adc
sub
sbb
sbb
dec
mov
and
mov
into
jne
addr16
mov
pop
sub
pop
arpl
in
int
or
xchg
cmp
loop
ficomps
add
fcoml
jo
loop
inc
enter
push
ljmp
xchg
mov
mov
or
sub
push
aas
inc
sub
jecxz
pop
xchg
jl
mov
or
pop
sbb
cmpsl
pop
dec
or
pusha
lcall
loop
lahf
lret
out
adc
cmp
jae
pushf
and
addr16
or
xor
arpl
lret
mov
push
adc
xchg
pop
sbb
test
shrl
sub
dec
jo
aad
or
mov
pop
stos
mov
leave
xchg
js
movsl
bnd
test
test
out
cltd
sbb
in
repnz
addr16
pop
pop
inc
push
insb
into
lock
cmpsb
aad
xlat
or
adc
ficomps
xchg
pop
jae
scas
repnz
adc
mov
or
inc
mov
xchg
or
mov
adc
inc
lea
and
mov
jmp
sarb
add
jbe
enter
dec
mov
pop
aam
adc
lds
pop
lods
jne
pop
enter
and
and
js
in
lret
and
or
pop
jbe
popa
movsl
stos
xor
inc
push
cmp
xor
add
inc
mov
cmp
push
pop
xor
inc
push
xchg
mov
out
decb
int
enter
sahf
jg
sbb
add
pushf
dec
jmp
mov
ds
inc
push
mov
rclb
not
jl
sbb
sbb
jne
inc
test
mov
jmp
add
dec
and
test
icebp
sbb
add
mov
xchg
push
add
int
outsl
inc
test
jmp
mul
and
push
rol
mov
jns
lods
pop
int
jl
aas
xor
or
stos
and
add
repnz
and
xchg
int
lock
cmp
fistps
in
xor
arpl
push
cmp
in
aas
je
or
lret
xchg
arpl
sti
inc
sub
fmull
cmp
lea
sbb
setp
cmpsb
rcll
pop
dec
lret
xor
add
jmp
loopne
xlat
jge
push
ja
add
lret
push
xor
sbb
fs
push
icebp
pop
jge
dec
mov
pop
stos
stos
dec
and
in
js
mov
push
mov
mov
cltd
or
mov
jg
js
call
mov
imul
ficoms
scas
ds
pop
cltd
rorb
xor
mov
loope
loopne
addr16
aam
loope
xor
fcmovnb
mov
bound
inc
jo
mov
dec
pusha
test
jbe
pop
pop
or
and
repz
je
ds
psrad
inc
idivl
and
pop
xor
out
aad
inc
int
sbb
popa
fisubrs
cltd
int
pop
rorl
ja
cltd
mov
insl
pushw
cmp
mov
jl
fldt
popa
push
mov
dec
inc
stos
call
push
add
out
pop
sub
inc
cmpsb
aam
xor
sbb
cwtl
jl
and
add
mov
addl
adc
incl
fiaddl
cmp
dec
cmc
scas
add
call
int
pop
pop
ror
rorl
sub
pushf
jmp
and
and
dec
divb
add
mov
jns
jo
popa
push
jecxz
push
jl
fbstp
out
cltd
ret
or
pushf
nop
jle
add
sbb
test
pop
rclb
enter
jg
pusha
jecxz
test
flds
dec
cwtl
aad
dec
fcmove
int
cmp
fimuls
push
pop
add
mov
jae
dec
or
jge
inc
sbb
bsf
mov
les
fcmovnu
lds
adc
or
inc
sub
push
lods
inc
push
push
push
test
bound
add
sbb
sub
imul
dec
cmp
lods
sub
in
jg
adc
mov
fs
adc
shrd
jmp
xchg
inc
jno
aad
stos
hlt
pop
shl
fiaddl
inc
inc
inc
repnz
lods
pop
in
enter
lds
add
xlat
lret
jmp
out
out
xchg
fsubp
cld
lods
imul
inc
out
rcrb
push
push
sub
mov
mov
outsb
sbb
mov
or
nop
sub
or
addr16
insb
cmpsl
mov
dec
es
sbb
movsb
incb
inc
out
jb
adc
jmp
stos
into
mov
inc
pop
repz
mov
mov
mov
cmpsb
stos
mov
xor
fmul
pop
mov
test
pop
repnz
daa
mov
and
jge
adc
test
call
or
roll
pop
shl
subl
repnz
shlb
and
into
add
push
pop
pop
push
shr
xor
dec
and
incl
fcoml
add
cltd
and
inc
push
out
inc
inc
and
push
test
clc
xor
dec
in
movsl
lret
hlt
jmp
xor
ret
push
std
add
jecxz
ja
mov
lcall
lds
fisubl
adc
add
xchg
jmp
inc
das
and
xchg
pop
test
into
push
jae
jno
loopne
push
sbbb
dec
in
dec
fwait
in
aaa
popf
push
ror
add
gs
outsb
sbb
fcmove
mov
inc
cmp
push
jmp
out
mov
insb
pusha
dec
cmc
addl
sbb
insl
sbb
inc
jp
push
push
inc
fstpt
dec
rcl
dec
mov
and
js
inc
cmpsb
repnz
xlat
pop
cmp
inc
ss
sbb
sbb
mov
pop
imul
add
in
pop
sub
jae
add
popa
loopew
xchg
imul
cmp
push
mov
pop
popa
sub
das
pop
pop
mov
aaa
shlb
imul
lahf
enter
lret
add
inc
cmpsb
push
dec
jg
mov
or
insb
addb
push
pusha
fisubs
aaa
lods
sbb
lcall
xchg
add
enter
imul
xor
mov
js
lods
sti
test
rcr
jle
pop
lahf
push
push
scas
xchg
lea
dec
inc
and
add
inc
add
mov
dec
outsl
jae
loope
pop
ror
or
sub
loop
mov
rorl
cmp
mov
aaa
dec
negb
dec
add
mov
cwtl
fldenv
test
loope
inc
dec
mov
adc
pop
dec
push
fdivrl
int
es
mov
lock
shr
pop
add
mov
sbb
inc
pop
xor
repz
or
or
jns
pop
imul
mov
arpl
repnz
fucomi
aas
fmull
jmp
cld
movsb
mov
bound
push
rclb
jmp
loopne
push
bound
lret
or
sbb
sub
adc
inc
cmp
cmp
cmp
inc
cs
addb
jne
adc
iret
push
cmp
loop
cli
jo
cmpsl
jl
xor
flds
sub
pushf
jb
sti
flds
je
repz
jnp
cmc
pop
and
addb
sub
add
sbb
in
je
int
stc
or
arpl
fnstenv
push
inc
test
xchg
pusha
fucomip
pushl
lahf
pop
cmpsb
pop
lea
shrl
jb
inc
mov
stc
dec
mov
and
insl
lret
mov
lods
outsb
lods
adc
inc
sbb
push
pushf
cmpsb
andl
push
mov
rolb
imul
mov
mov
and
pop
pusha
ds
ret
sti
xor
mov
jns
shrl
shlb
lret
jbe
push
xchg
popf
stos
ljmp
adc
data16
outsb
fildl
cmpsb
mov
inc
cmp
popf
and
add
dec
les
lds
icebp
cld
and
aam
out
mov
xor
sub
mov
add
add
fimuls
push
inc
int
sub
stos
cwtl
es
orb
in
and
out
xchg
dec
and
int
pop
cmpsl
push
fs
lea
aaa
out
fiaddl
cmp
aaa
jp
sbb
mov
int
mov
fisubrs
iret
outsl
mov
jle
rcrb
push
mov
inc
into
mov
or
xor
sub
rolb
leave
icebp
mov
jns
and
in
sbb
xor
and
xchg
mov
mov
movlps
int
xchg
jmp
dec
add
xor
aad
or
into
xchg
sbb
mov
les
jne
mov
pusha
mov
push
addb
adc
stos
shrl
mov
stos
xchg
arpl
and
pop
jns
loop
sub
sbb
mov
shlb
jne
sbb
bound
call
movl
and
push
scas
addr16
xor
mov
jo
adc
xchg
lods
push
adc
cltd
lods
xchg
test
sub
shl
add
stc
aam
or
pop
or
add
cmpsl
leave
sbbl
pop
movsl
xlat
lds
shrl
fidivrs
adc
push
cmp
pop
and
sti
rolb
or
xchg
xchg
insb
push
jmp
pop
test
repnz
inc
adc
fidivrs
sbb
push
xor
cmp
out
pushf
dec
or
dec
loop
cmp
xor
push
lea
lds
cmp
out
mov
xor
leave
insl
data16
cmovo
loopnew
sarl
jb
loop
jle
adc
mov
push
in
sub
dec
inc
lcall
pop
pusha
fisubs
or
and
iret
cmp
dec
or
insb
test
cmpb
loope
out
call
push
aas
jbe
or
pushf
sbb
xor
mov
out
mov
stc
push
mov
data16
ljmp
cmpsb
adc
lods
fwait
inc
or
inc
or
xor
xchg
lahf
mov
ljmp
add
jle
lcall
movsb
decb
push
sbb
faddl
mov
loop
jb
dec
movsb
std
mov
movsb
pop
sbb
and
stc
sbb
sarl
scas
stos
inc
push
pop
rorl
lahf
jne
arpl
jb
push
push
pop
pop
pop
cmc
shr
sbb
loopne
mov
sub
mov
mov
inc
and
or
inc
sbbb
mov
je
push
je
jmp
jb
push
fsubrs
sbb
cmp
lock
lret
xorb
int
add
jecxz
push
ljmp
jg
enter
mov
push
push
jae
sbb
mov
xor
sbb
adc
cmpsb
faddp
xor
pop
push
push
ja
or
jge
cmp
dec
jp
lret
dec
cmc
int3
and
mov
addl
mov
dec
data16
repz
in
mov
push
inc
mov
jo
inc
out
pop
or
ja
jns
inc
jne
mov
push
cltd
jp
aaa
hlt
dec
ds
mov
inc
push
sti
mov
ljmp
scas
stos
mov
ljmp
add
adc
ljmp
jbe
ljmp
cmp
adc
ds
shll
jb
in
or
sub
mov
ljmp
inc
sbb
dec
mov
dec
cmpsl
inc
jno
outsb
or
pop
movb
mov
pop
xchg
xlat
add
xor
enter
andl
in
mov
or
dec
lods
lret
adc
lds
in
test
inc
and
loopne
jecxz
rcrb
inc
in
sub
and
test
inc
mov
cmp
dec
faddl
push
inc
movsb
insb
ja
cmpsb
repnz
and
and
mov
cmpsl
push
cmp
mov
mov
leave
sarl
test
xor
stc
je
jbe
sbb
jl
movsl
xchg
out
sbb
or
inc
shll
les
es
and
sub
das
push
in
repnz
xchg
mov
dec
loop
loop
push
loope
sar
test
test
mov
sar
mov
and
inc
add
hlt
fisubs
scas
rol
or
stos
lods
push
pop
out
xor
jg
out
jge
out
jno
pop
mov
imul
rcr
fcmovbe
mov
sub
ja
mov
mov
sbb
popa
repnz
shl
sarb
test
dec
mov
jmp
mov
test
jl
sub
pop
arpl
icebp
push
mov
lock
dec
clc
jl
leave
sbbl
data16
cld
loop
fsubl
add
jno
cmp
dec
xor
cmpsl
dec
dec
fnstcw
sub
pop
cmc
dec
sbb
ret
decb
xlat
ret
sub
shl
imul
popa
inc
fadd
out
stos
lods
stos
push
pop
sarl
mov
cltd
jnp
jecxz
lret
or
fwait
push
ljmp
pop
fidivs
imul
bound
adc
jb
adc
adc
cmp
mov
fdivp
dec
loop
into
push
aaa
pop
scas
dec
jp
sub
rcrl
subb
mov
dec
dec
shrl
lods
xor
sahf
pop
and
or
push
dec
push
xchg
cmp
cld
push
jbe
shlb
mov
push
xchg
cltd
pusha
jl
adc
dec
inc
ret
into
loop
addr16
out
pop
mov
xchg
out
in
pop
sahf
test
fcmove
enter
jae
gs
xor
leave
les
xchg
ret
pop
ret
lret
sbb
jecxz
data16
into
or
push
inc
mov
mov
adc
mov
fcmovnu
or
xor
int
jno
sbbb
xchg
insl
push
xor
mov
push
mov
shll
sarl
bound
call
hlt
push
sbb
add
pop
fcmovnbe
mov
fistpll
sbb
lods
hlt
movb
sbb
les
jns
ret
loope
mov
popa
jecxz
sbbb
pop
lret
ljmp
sbb
cmp
data16
jo
xor
lcall
xor
and
repz
jne
add
inc
sub
push
sbb
push
and
mov
or
or
lods
rcll
data16
fs
insl
mov
push
outsl
inc
sub
rclb
mov
xor
int
and
xlat
cwtl
out
fnstsw
pop
movsb
rclb
jb
xor
loopne
pop
lods
into
inc
mov
push
push
roll
in
pop
stos
sub
shrl
mov
shrl
sub
out
mov
enter
int
jge
rcrb
lret
adc
loopne
jbe
frndint
mov
or
enter
scas
fsubrp
mov
aad
into
mov
pop
jbe
push
ljmp
add
cmpsb
push
cmp
sub
js
xchg
loopne
cwtl
insl
cmpsb
arpl
clc
addl
hlt
push
and
xor
pop
adc
jp
cmpsb
mov
repz
add
inc
lahf
ror
sahf
movsb
or
jbe
into
cmp
push
cli
add
jns
orb
stc
lea
fsub
jg
std
jmp
xchg
dec
add
mov
dec
mov
dec
arpl
shlb
out
dec
sarl
cwtl
jg
mov
lret
dec
add
dec
xchg
stos
loope
popf
fadds
cmpsl
adc
into
add
xchg
insl
or
aad
aad
icebp
lahf
cs
xchg
pop
xchg
jl
push
dec
shll
mov
pop
pop
mov
mov
and
jle
ds
fnstcw
mov
xchg
sbb
lods
and
repz
mov
xchg
lods
cli
add
xlat
lcall
jg
imul
int
inc
push
adc
mov
dec
xor
mov
mov
jmp
std
sarl
add
loopne
out
sbb
inc
imul
mov
add
movsb
sbb
add
fists
in
stos
ret
push
xchg
int
frstor
stc
cli
dec
test
pop
or
cld
sbb
xor
lock
jecxz
popf
sub
xlat
cmp
mov
pop
jae
dec
mov
cmpsb
pushf
adcb
cmc
push
pop
jmp
sbb
loope
jp
dec
fnstsw
vpmaxub
out
add
mov
aaa
pop
test
sub
mov
mov
inc
xchg
lahf
mov
cmp
push
filds
jo
pushf
fdivp
lret
aaa
mov
aam
into
or
mov
cmp
inc
lcall
jmp
aad
mov
mov
mov
test
xchg
in
punpcklbw
push
icebp
inc
inc
push
pop
rcrl
inc
and
add
fs
jecxz
fidivrs
xchg
cmp
int
mov
pop
not
decb
xor
lods
ljmp
pop
xor
in
mov
jp
add
dec
loope
clc
into
xor
xchg
in
xchg
jmp
mov
dec
shlb
icebp
stos
pop
insl
inc
js
or
push
sbb
mov
cltd
and
sbb
jno
and
popa
test
rorl
jo
mov
ljmp
dec
into
and
push
push
insb
int
xor
cmpsl
jb
sbbb
lds
lods
daa
cmp
xlat
mov
fidivrs
xor
add
ljmp
ret
cmp
adc
out
push
dec
lds
cwtl
sub
shlb
mov
rorl
push
xlat
mov
loop
in
lods
cmpb
xchg
pop
insb
imulb
dec
ret
faddl
leave
cltd
sub
jmp
cmpb
jbe
mov
jbe
or
lock
jne
cmp
pop
loop
sti
into
xor
mov
notl
cmpsb
inc
mov
vandnps
cmp
jne
inc
aam
pop
ja
cmp
jns
cmpsb
sbb
ss
ds
popf
repnz
adc
push
int3
cmp
into
cmpl
inc
test
cmp
les
cltd
shll
ret
lds
adc
popa
ds
cmc
cwtl
xor
xor
xchg
sbb
lods
pop
jmp
sahf
and
out
vroundsd
movsb
stc
pop
ds
push
inc
lds
test
fdiv
jl
inc
and
gs
dec
insl
mov
rclb
lea
movsb
mov
and
insb
dec
or
bound
insl
cmp
inc
xchg
ss
and
fimuls
adc
mov
cli
cmpsl
xor
sti
dec
pop
cwtl
mov
add
cmp
xchg
cmpsb
add
sbbb
movsl
mov
frstor
in
mov
cwtl
xor
cmp
push
push
sub
cmp
mov
dec
je
pop
jo
test
insl
mul
lcall
push
adc
pop
cltd
ljmp
push
cltd
inc
loop
adc
cld
and
sbb
in
aam
adc
loope
pop
into
dec
ret
rcr
sbb
decb
mov
nop
sbb
add
stc
dec
and
or
and
and
inc
mov
loope
fs
negb
jb
mov
pop
dec
setne
aaa
adc
addr16
or
fmuls
mov
add
or
aam
cmpb
sub
sbb
data16
push
out
mov
pop
shrb
icebp
push
mov
loop
testl
test
les
sub
add
out
push
fwait
push
dec
or
ficompl
push
jge
outsl
roll
pop
inc
call
inc
pop
adcb
cli
fiadds
mov
and
pop
jae
addr16
sub
fnstcw
mov
cmpsb
lret
call
movsl
jnp
aad
daa
xchg
push
or
mov
xchg
into
out
sbb
push
sbb
lahf
test
cmc
add
xchg
push
xor
fwait
or
mov
sahf
push
scas
xlat
loop
push
out
jl
imul
popa
movsl
pushf
dec
lds
pusha
inc
pop
or
inc
aas
iret
jae
rolb
lods
das
sbb
xchg
and
mov
sbb
out
dec
mov
and
mov
cmc
imul
ss
inc
adc
jno
xor
push
outsl
pop
sub
and
mov
roll
popa
scas
dec
jno
std
rorl
xor
mov
add
xor
sbb
iret
xchg
addr16
arpl
aas
jno
dec
pop
push
les
int3
aaa
mov
push
cmpsl
mov
push
bound
sbb
test
dec
push
sub
jl
sub
popf
je
mov
aam
sbb
shrl
bound
insb
addr16
or
js
ljmp
pop
pop
sub
dec
dec
ror
into
stos
mov
andb
pop
push
mov
mov
subb
test
loopne
sbb
sub
adc
je
pop
push
ret
testb
andb
lcall
push
gs
int3
daa
add
and
jne
mull
fbld
jmp
inc
xchg
out
pop
icebp
mov
jne
sbb
in
and
int
pop
mov
sub
xchg
fwait
sub
jmp
lea
movsb
mov
fwait
cmp
jl
jge
xor
sbb
mov
repz
adc
xor
js
aaa
mov
lods
sub
mov
push
stc
jl
sbb
bound
adc
loope
into
mov
inc
cld
je
pushf
push
sbb
dec
cmp
xchg
sbb
insb
addr16
inc
and
dec
cs
fstpt
sbbl
sti
jne
stc
xchg
inc
cmpsb
dec
pop
mov
hlt
push
cltd
das
aas
sbb
cli
test
jae
lret
mov
call
push
test
mov
adc
xor
sbb
loop
sbb
pop
push
jb
shlb
pop
fwait
shlb
add
cmpsb
lock
test
inc
dec
sub
ss
shrb
fmulp
lcall
addb
ss
sbb
xor
hlt
inc
bound
and
lea
push
stos
pop
cli
sbb
push
js
xor
add
push
xor
push
xor
cmc
or
jne
sub
push
sbb
clc
imul
cmpsl
rorb
pop
or
inc
sbb
test
enter
js
add
stos
cmpsl
cmp
loop
dec
jne
jno
xor
insb
pop
out
pop
movsb
leave
out
fcoms
sbb
jmp
ljmp
mov
sarl
sub
pop
sbb
adc
dec
push
adc
and
hlt
in
or
add
xorb
popf
loop
loopne
mov
push
lods
enter
aas
call
mov
mov
testl
mov
xchg
push
pop
dec
pop
lea
dec
aam
xor
dec
ret
push
and
inc
mov
pop
lret
push
push
cmp
push
fnstsw
stos
stc
inc
lds
xchg
aas
cmp
dec
xchg
mov
lds
rorb
sub
sarl
add
mov
add
adcl
mov
mov
std
push
xchg
cwtl
iret
stos
cmp
mov
dec
cmpsl
push
mov
push
fcmovu
jle
movsb
shll
xor
repnz
out
mov
jns
outsb
loope
into
mov
stc
jmp
mov
repz
test
outsb
aad
jae
rolb
mov
add
cltd
lods
pop
repz
pop
mov
push
inc
push
inc
push
je
mov
into
in
movntq
in
into
imul
movsb
mov
rcrl
xchg
dec
cld
inc
loop
adc
hlt
and
cmp
sbb
sti
pop
outsb
in
cmovs
rcll
les
and
notb
xlat
jb
fimuls
xor
inc
into
ret
mov
ret
repnz
stc
shll
pop
pop
stc
loope
cmp
das
jp
int
les
or
mov
xchg
out
mov
aaa
sub
xchg
mov
inc
add
cli
sub
mov
jns
sbb
jle
inc
inc
dec
push
add
rcrl
pop
popa
or
popf
addr16
cmp
mov
loope
mov
enter
shll
gs
out
jecxz
fs
push
iret
xlat
adc
outsb
cmp
inc
cwtl
js
shl
jbe,pt
mov
in
push
cmpsl
pop
cmpsb
stc
aaa
dec
push
push
mov
out
or
leave
mov
add
stc
mov
pop
mov
ja
fisubs
and
imul
inc
inc
bound
and
mov
dec
lcall
add
fxch
dec
sbb
neg
test
pop
out
jecxz
add
lcall
mov
mov
pop
push
and
stc
sbb
xchg
ror
sub
andb
sub
adc
sarb
lret
xchg
mov
lea
int
insb
adc
mov
fstpt
nop
mull
lods
mov
xchg
pop
push
cwtl
xchg
insl
inc
repz
int
stc
xchg
mov
or
cmpsl
xchg
loope
xor
repnz
push
data16
out
jl
out
mov
or
push
or
and
aam
inc
sbb
cmpsl
mov
stos
xor
ds
mov
fmull
loop
fidivs
push
cwtl
ret
mov
and
lret
mov
adc
ffree
dec
sbb
shll
ss
in
loopne
ret
mov
arpl
mov
sbb
pop
sub
aas
adc
and
add
insl
xchg
mov
lcall
fimuls
jge
sbb
call
and
or
repz
andb
mov
fwait
push
inc
decl
mov
icebp
mov
aas
out
lock
mov
or
mov
dec
jl
mov
sti
fistpll
sbb
dec
and
xor
or
loop
sarl
xchg
xchg
or
or
inc
stos
push
sub
loop
mov
fldcw
bound
lods
push
and
in
cld
add
xchg
mov
repnz
fadds
jle
sub
lahf
jae
jno
scas
sub
test
dec
addb
stc
mov
fmuls
pop
out
push
push
and
mov
stc
cmp
fadd
sub
stc
add
inc
mov
cmpsb
sbb
idivb
push
mov
mov
outsb
add
stc
flds
jg
push
popa
cli
lds
pushf
pop
inc
or
sbb
cmp
sbb
push
aad
mull
rep
imul
loop
fistpl
call
icebp
push
and
call
pop
out
repz
pop
mov
fmulp
leave
dec
shr
sbb
sbb
mov
mov
bound
mov
lea
mov
adc
loop
mov
aas
int
fwait
enter
dec
inc
jns
xorl
or
andb
lret
fidivrs
cwtl
or
sub
fcmovnu
outsb
movsb
loop
dec
testb
mov
push
mov
fmuls
and
sub
decb
mov
sbb
add
sahf
lret
jle
pop
cmpsb
or
jmp
loope
into
lods
mov
lcall
jne
cmpsl
clc
mov
or
stos
add
or
inc
inc
loop
fldenv
lock
jle
xor
sarl
and
repnz
loop
addl
mov
pusha
push
test
loop
push
push
push
int
inc
insl
mov
inc
push
nop
stos
xchg
notl
inc
pop
mov
jno
add
push
loopne
push
jo
ret
shl
cmpb
cli
arpl
mov
rolb
fxtract
enter
shlb
stc
or
adc
stos
jge
dec
leave
aas
cmp
adc
into
adc
add
jmp
testb
into
pop
cmpb
gs
xchg
lods
xchg
push
mov
sub
cmp
loop
je
adc
dec
push
imul
fsubl
add
sbb
cmp
add
sbb
pushf
push
pop
inc
inc
mov
adc
negb
pushw
lea
lds
in
ret
aaa
das
push
inc
add
jl
dec
mov
aas
and
cmpsl
pusha
adc
std
shrb
loopne
push
fwait
mov
push
lods
dec
sub
fiadds
das
push
add
pop
outsb
jns
push
dec
push
add
out
jl
adc
loopne
out
insb
push
imul
icebp
std
push
pop
lret
repnz
mov
addr16
mov
mov
or
adc
jo
and
pop
adcl
inc
mov
vcvtpd2psx
mov
ret
or
cmc
ficoms
push
push
push
push
movsb
icebp
std
adc
ja
fcmovu
loop
cmp
jo
lds
subl
gs
mov
pop
xchg
fldl
jne
mov
pushf
popf
lods
xor
pop
fisubrs
add
push
cmpsb
outsb
xlat
mov
stc
xchg
inc
fisubs
xor
arpl
cmpb
scas
cmp
bound
adc
imul
mov
sub
test
and
fucomp
mov
inc
movsb
xchg
inc
cld
loop
xchg
xlat
mov
addr16
mov
out
push
js
fs
lods
jne
and
jmp
mov
dec
ja
insl
push
inc
mov
and
push
movhps
mov
adc
xor
fidivrl
dec
into
xor
cmp
lds
subb
in
fidivrs
or
loop
add
sbb
leave
dec
sub
dec
adc
fucomip
inc
sahf
outsb
inc
add
shrl
daa
call
sarl
mov
jne
mov
das
fidivl
sub
xor
testl
cmp
into
paddd
imul
or
lock
ret
mov
andl
cmpsl
fcoms
dec
lods
jne
lods
ret
lret
pop
in
mov
or
imulb
mov
aaa
mov
mov
pop
lea
adc
jbe
pop
mov
inc
imul
mov
adc
push
pop
stc
sbb
xchg
decb
lock
fdivrp
or
inc
dec
mov
sahf
scas
add
das
insl
sbbb
loop
and
add
dec
fprem1
sbb
mov
add
inc
or
call
cmpsl
lcall
into
mov
lods
adc
mov
lea
sar
cwtl
stc
adc
fstps
sbb
pop
pop
data16
repnz
popa
xchg
in
cmc
add
xchg
js
mov
xchg
andb
stos
jno
xor
jmp
shrb
mov
movsb
cmp
add
pop
inc
aas
cltd
mov
or
push
cmp
adc
int3
mov
mov
lret
jb
andb
ficomps
das
cmpsl
jle
and
jmp
stc
or
decb
push
mov
pop
lcall
popf
xlat
out
push
loop
sbb
daa
cs
leave
mov
sbb
stc
inc
add
inc
ficomps
into
mov
mov
add
sbbl
add
notb
fcompl
push
mov
subl
inc
cmp
ljmp
xchg
or
bound
pop
insl
sub
rcr
mov
popa
fnstsw
addl
push
fildll
loopne
pop
ret
test
adc
repnz
push
push
hlt
dec
fisubrs
lods
xchg
xchg
ja
inc
ror
movsb
xor
outsl
in
pusha
jae
lds
cltd
shrb
mov
ret
les
jbe
out
jno
add
scas
inc
aaa
sbb
push
mov
movsl
out
cmc
popf
pop
mov
push
incl
into
fisubs
add
lcall
sbbl
jle
icebp
add
xor
adc
jb
mov
lret
lods
dec
mov
fwait
inc
into
loop
xchg
and
std
adc
fiadds
lds
add
andb
shlb
fimuls
lds
sub
jmp
inc
js
cmp
dec
int
imul
les
loopne
lret
xchg
mov
inc
repnz
pop
loopne
sbb
xchg
test
shrl
loop
adcl
icebp
pusha
dec
enter
into
sbb
pop
cmp
daa
push
insb
mov
mov
lock
dec
fnstenv
cltd
jae
in
decb
sbb
into
ret
lcallw
mov
std
jns
int3
push
add
jne
popa
pushl
mov
ret
cmc
loop
fcmovb
ficomps
pusha
scas
lret
loop
mov
pop
sbb
test
or
push
mov
push
lret
pushf
insl
lock
pop
xchg
into
and
scas
and
call
enter
pop
jg
stos
mov
xchg
inc
ds
repnz
faddl
jmp
mov
cmp
sub
push
xchg
push
cmp
movsb
sub
mov
imul
fdivrp
mov
faddp
sbb
adc
out
push
dec
pop
stos
cli
int3
lea
cmpsl
cltd
adc
lods
in
fimuls
or
insl
sub
testb
cmc
frstor
int
xchg
repnz
dec
push
mov
mov
out
in
mov
lock
cmp
lret
lret
mov
pop
scas
rcrl
movsb
sahf
clc
lcall
aaa
sub
imul
add
mov
popf
push
add
cmpsb
in
ja
les
mov
mov
sub
dec
and
jns
xchg
bound
cmpsl
aas
push
ret
and
adc
or
stos
decb
add
inc
pop
adc
dec
data16
add
fmulp
mov
out
scas
pop
lret
loop
mov
lock
jle
mov
lret
dec
ret
fisubs
or
frstor
xchg
imul
fstps
add
fidivs
inc
mov
adc
inc
cmpb
mov
inc
or
xlat
mov
inc
or
jb
jmp
mov
fdivrl
mov
pusha
mov
ret
ret
inc
or
bound
into
ret
or
lret
mov
fs
mov
lret
ret
jns
aad
out
test
xor
into
or
dec
ret
into
ret
cld
adc
ret
popf
iret
ret
push
shll
rcrl
les
outsl
jmp
sahf
add
jp
in
les
adc
test
dec
sub
pop
movsl
ret
icebp
xor
inc
fcmovnb
lret
adc
pop
push
push
fidivs
ret
adc
fsubs
pop
rol
add
dec
repz
ss
in
rol
add
push
icebp
sahf
rol
sub
push
into
adc
roll
and
push
pop
adc
inc
add
fcmovu
in
dec
std
dec
movb
add
ret
sbb
ret
out
push
testb
les
push
ret
fst
enter
push
adc
dec
shl
inc
lret
ja
push
fcmove
vxorps
push
lds
push
lds
daa
jl
pop
out
movb
push
push
cmp
dec
adc
dec
lret
lds
inc
fcmovnb
rcl
dec
daa
dec
loopne
fildl
inc
je
les
sti
hlt
fdiv
scas
int3
test
pop
push
inc
add
loop
ret
and
xor
push
push
shll
pop
xchg
push
pop
and
mov
fld
xchg
scas
ljmp
dec
into
xlat
pop
jnp
xchg
filds
push
les
push
inc
mov
psrld
pushw
sbb
fmull
pop
shl
pop
jnp
loop
aaa
xlat
aam
fisubrl
loop
cmc
movb
xchg
fidivrl
adc
ret
lds
mov
stos
aaa
cmp
dec
inc
call
loop
in
out
loop
in
inc
push
dec
pop
dec
ret
repnz
inc
pop
out
jnp
xchg
adc
pop
pop
loop
mov
hlt
inc
fidivs
xchg
cmp
and
jb
fcomps
mov
ret
popa
sub
sbb
cli
in
dec
je
mov
pop
int3
xor
faddl
jae
or
movsb
xor
add
cmp
stos
enter
push
mov
stc
mov
loope
mov
mov
les
mov
pop
jne
cmp
and
stos
into
cmp
add
lahf
and
adc
push
insb
ret
int3
sbb
mov
adc
mov
cs
popa
add
icebp
ret
fiadds
inc
jmp
insl
or
mov
mov
scas
jmp
mov
pop
or
enterw
aad
jne
ret
test
data16
mov
xor
pop
leave
movsb
inc
jb
sbb
in
add
mov
sbb
fcoml
xchg
data16
mov
dec
dec
les
mov
mov
mov
clc
aaa
jnp
loop
sti
sub
in
orb
pop
inc
jle
fstl
shrl
shll
aas
sti
cmp
inc
mov
lea
push
adc
das
sbb
les
shlb
stos
lahf
push
mov
fiadds
insl
shrl
ficomps
loope
int
repz
adc
pop
mov
jno
lret
popa
or
or
lret
leave
and
push
rcr
shr
cld
cmpsl
mov
stos
add
rorb
push
cld
xor
cmp
popa
inc
jmp
popa
std
popf
mov
aaa
aad
pushf
push
pop
in
inc
jb
fmulp
fbstp
or
lahf
add
pop
push
pop
icebp
mov
jecxz
dec
sub
rcr
jle
and
lret
loop
ljmp
cmpsb
leave
pop
rcr
gs
jne
cmp
push
ror
cwtl
inc
addr16
out
insl
insb
lock
sub
pop
scas
cmp
popa
les
nop
add
sti
movsb
xchg
rclb
inc
fcompl
jnp
pop
in
xor
dec
daa
cmp
lret
gs
mov
into
add
xchg
fnsave
loope
cmp
sub
jmp
mov
pop
stos
repnz
pop
or
insl
repnz
sub
imul
mov
sbb
mov
ret
sub
sub
pop
jmp
fcoml
in
std
test
jb
das
or
pusha
adc
sub
sbb
cmpsl
push
out
push
sbb
push
lds
push
insb
call
aas
scas
xor
test
xor
pop
lods
mov
and
nop
movl
and
add
mov
adc
sub
lods
into
inc
add
jecxz
mov
mov
cltd
pop
in
and
sbbl
iret
bound
or
xor
shl
mov
push
add
pusha
pop
jmp
add
jb
and
cmpsb
mov
xor
adc
dec
popa
cmp
cmp
iret
and
pop
mov
fwait
lods
movb
pop
enter
mov
das
cmp
out
fsubp
mulb
xor
bound
lock
or
pop
pop
lcall
adc
test
imul
push
fldt
adc
lods
push
jecxz
sbb
jne
push
jbe
adc
cmp
push
fcmovb
cld
inc
add
xchg
stc
lock
lcall
fcmovne
push
jl
sahf
inc
insl
xor
jecxz
push
jne
push
fstp
jl
mov
dec
jg
sbb
insl
popa
in
mov
mov
adc
inc
fiaddl
push
or
and
mov
sub
mov
icebp
and
cltd
subb
je
addb
cltd
loopne
lea
cmp
jl
xchg
jmp
inc
add
jne
or
add
xor
mov
jecxz
or
out
push
xchg
push
inc
in
mov
cli
pop
fucom
lahf
sbb
jnp
add
jmp
pop
gs
sbb
dec
and
xchg
pop
outsl
dec
inc
xchg
pushf
sbb
sbb
js
jle
xor
repz
and
push
cmp
nop
movsl
xchg
dec
or
movsb
push
stos
mov
push
mov
inc
mov
cld
mov
pop
fstpt
cltd
test
push
pop
test
sbb
jo
lret
leave
clc
movsb
shll
aam
inc
in
mov
dec
mov
sbb
cmc
inc
adc
and
sbb
movsb
fidivs
into
fucomip
fidivrs
sub
out
daa
sbb
push
je
dec
insb
out
stos
mov
and
loope
icebp
add
add
mov
dec
inc
js
mov
cmpsb
pop
into
ror
gs
pop
andl
jg
rcrl
je
cmpsl
mov
add
and
and
outsl
sub
or
push
repz
push
not
mov
mov
adc
rclb
cmp
xor
sbb
jg
mov
pop
ss
push
cs
jmp
or
xchg
test
dec
das
loope
repnz
into
pusha
addr16
loopne
mov
sar
out
jb
int
add
inc
dec
cmp
data16
and
icebp
cld
mov
mov
pop
adc
inc
fcompl
pop
lea
shll
jbe
cmpsl
adc
pop
fdivs
cmp
ja
inc
cmp
add
fisubrs
lock
arpl
jmp
mov
push
mov
loopne
repz
roll
shll
jecxz
mov
lret
bound
stos
cli
aas
dec
push
sub
xor
mov
jl
icebp
and
inc
sub
mov
cmpsb
pop
push
lods
sbb
add
cmp
inc
test
dec
adc
add
jp
test
sub
pop
mov
inc
adc
sbb
js
dec
cli
fs
pop
dec
add
subb
push
xchg
mov
mov
sti
das
cmp
add
fadds
inc
aam
int3
into
mov
ds
mov
test
add
movl
enter
fbld
jmp
push
and
mov
push
sub
in
add
loope
jno
lods
dec
jmp
cwtl
lds
lds
cmp
loopne
shl
out
xor
inc
and
mov
imul
andb
mov
into
and
pushf
pop
xor
push
adcb
cmpsl
dec
jne
jecxz
dec
scas
jns
callw
pop
cld
jmp
addr16
xchg
dec
or
andb
rcrl
mov
mov
fsubs
add
xor
sbbb
adcb
pop
inc
pop
xor
jge
xor
push
sbb
xor
inc
mov
sub
je
fsubrs
repnz
mov
xchg
stc
mov
pop
sbb
bound
mov
or
dec
in
adc
jb
shrl
rcrb
fmull
inc
mov
rcll
sbb
jg
loopne
sbb
mov
sbb
js
pop
in
popf
adc
out
call
sbb
mov
pop
adc
cmp
ret
sub
pop
pop
sbb
loop
xchg
ljmp
xchg
jno
cmpsl
lcall
lahf
je
js
lods
add
popa
adc
xor
xor
sub
push
mov
or
sbb
fistps
cmpsb
adc
in
and
ja
inc
subb
and
xor
dec
cltd
mov
and
and
cmp
jle
add
xlat
rorl
loope
shrl
cwtl
ljmp
aas
repnz
into
push
hlt
ss
jno
sub
mov
sbb
add
pop
sbb
cli
dec
data16
inc
scas
pop
fidivl
daa
push
popf
lea
or
js
jge
mov
mov
xlat
andb
int
sub
and
pop
dec
scas
fisubs
mov
mov
cmc
gs
push
into
jp
das
cvtdq2ps
lea
pop
cmp
sbb
and
sub
arpl
pushf
sbb
rcrl
push
lcall
add
ja
int
out
adc
lahf
insl
push
jbe
loopne
cmp
nop
lret
ret
xchg
rcll
add
cld
cmove
sbbl
movsb
mov
mov
inc
sub
xchg
push
out
or
mov
inc
loope
addb
test
dec
lret
fwait
pop
shr
shr
imul
dec
push
iret
in
roll
fwait
int3
xor
jmp
inc
cmpsb
push
jecxz
add
jg
mov
mov
icebp
jge
mov
jno
pop
movsb
cmc
add
loope
cltd
mov
in
push
and
loopne
jo
test
xchg
loope
jae
or
cwtl
lret
xor
test
into
das
in
repz
stc
lcall
insb
loope
pushf
dec
push
pop
mov
or
lahf
mov
popa
fstps
fcmovbe
imul
mov
mov
mov
mov
mov
cltd
in
test
repnz
push
test
sbb
inc
rcrl
mov
jns
mov
popf
or
not
rolb
mov
psubusb
out
mov
out
sbb
fiadds
pop
out
fimuls
incl
add
int
fsubp
and
clc
mov
adc
mov
sub
jbe
inc
push
daa
and
insl
or
loop
dec
scas
testb
or
mov
aas
into
mov
aam
leave
shrl
mov
inc
xor
push
cmpsb
cs
enter
test
xchg
pop
push
into
add
xchg
pop
mov
dec
and
adc
cmovo
imul
jne
or
arpl
ret
data16
jl
push
int
inc
jno
xchg
push
scas
mov
lods
repz
mov
pop
jnp
mov
into
pop
enter
pop
outsb
cli
mov
sub
xchg
or
inc
fisubs
sti
lret
add
movsb
stos
push
mov
adc
sbb
inc
bound
mov
loope
into
mov
pop
cltd
sub
or
fiadds
lods
pop
mov
pop
inc
sbb
or
inc
add
xor
je
push
mov
dec
cmpb
mov
cmc
and
jne
jns
dec
sbb
lcall
repz
sar
add
jecxz
mov
and
xchg
jno
in
fmulp
mov
jle
adc
mov
xor
cmp
cmc
movsb
std
loop
sub
idivb
out
dec
cmp
mov
popa
inc
das
arpl
inc
mov
fists
inc
hlt
fwait
add
cmp
fidivs
pop
inc
cs
sub
stc
cmp
xor
pop
and
mov
fidivrs
ret
sbb
repnz
int
mov
fisubrs
js
inc
fimuls
or
sub
or
pop
push
xchg
mov
jo
popa
jnp
xchg
int
or
and
into
in
int
shll
sarb
cmpsl
out
jnp
insl
popf
add
pop
jae
jne
cltd
mov
rol
jge
icebp
data16
pop
aad
cmp
inc
add
out
fcomi
xchg
mov
loopne
jo
cmp
pop
add
inc
adc
fmull
cmp
xor
add
jge
pusha
inc
jns
mov
bound
orb
fwait
mov
and
stc
jae
outsb
sub
lea
adc
jmp
add
out
je
insb
icebp
xchg
movsb
testl
icebp
mov
adc
cmp
gs
xchg
jbe
ret
movsl
les
lock
in
add
cmp
pushf
inc
adc
pop
int
into
xchg
packuswb
out
insb
xchg
push
ret
mov
xor
int3
pop
add
aas
push
sbb
iret
test
nop
or
xchg
out
loopne
lods
movsl
push
cmp
fcmove
pop
iret
stos
incl
sar
fdivr
cli
mov
pop
bound
fisttpl
cs
repz
xor
inc
stos
imul
mov
cmp
leave
popf
shlb
cmp
fptan
icebp
mov
fsubl
jns
loop
rolb
faddp
repnz
or
or
test
mov
lret
popa
or
bound
daa
lcall
rcrb
and
in
hlt
pop
arpl
in
addr16
mov
pop
insl
pop
mov
mov
popl
fucomi
int
mov
jns
add
in
inc
iret
sub
push
addr16
lret
jbe
bound
or
in
lret
in
shrl
mov
popa
aas
inc
pop
jnp
lcall
leave
into
out
mov
hlt
mul
xchg
pop
mov
and
jnp
out
push
adc
test
data16
or
dec
into
lcall
sbb
rorl
ret
dec
fistps
mov
add
sub
xor
inc
shl
add
dec
incb
fcmovne
and
leave
mov
inc
push
loope
add
nop
fwait
xchg
into
imul
out
pushf
jmp
es
cld
or
inc
mov
int
ds
or
lock
test
dec
add
cld
push
sbb
pop
or
push
roll
mov
cmp
push
jb
inc
add
pusha
or
jmp
outsl
fsubr
xor
lds
fdivrs
sbb
les
stos
mov
out
sbb
jg
rcrl
les
sahf
bound
loopne
mov
push
xchg
mov
inc
lods
pop
cltd
push
or
push
mov
mov
mov
lcall
ss
fists
push
cmp
pop
push
fistps
call
das
lea
inc
sbb
mov
js
inc
fmuls
cltd
push
mov
fwait
inc
cli
push
repz
push
scas
or
add
int3
paddd
push
jo
outsl
inc
xlat
adcl
hlt
cmp
pop
add
sub
and
xchg
xor
mov
pop
mov
push
push
cmpsl
sub
loopne
xchg
shll
ret
fidivrs
sub
insb
in
in
inc
dec
adc
sbb
out
or
and
es
adc
inc
into
loop
jne
push
int3
sbb
mov
cmp
cmp
stc
xchg
add
std
lds
rclb
insl
loopne
cmpsb
mov
add
shl
mov
mov
sbb
sahf
and
mov
mov
loope
lcall
xchg
add
mov
aas
loopne
sub
iret
loopne
pop
test
mov
pusha
repz
jbe
xchg
inc
add
test
cmpsl
xchg
and
mov
jne
mov
sbb
adc
pop
lds
mov
mov
bound
fs
jne
idivb
sub
subl
repnz
mov
xchg
loopne
inc
rcrb
sbb
lahf
into
and
adc
jbe
mov
lock
mull
into
inc
out
sbb
push
mov
sbb
cmp
lcall
cmp
cmp
add
aam
pop
ffree
mov
inc
push
jl
scas
and
lcall
test
adc
fidivrl
jb
pop
rorb
in
pop
mov
cmp
repnz
ret
data16
xchg
dec
sbbb
cmp
icebp
stc
jnp
repnz
imul
enter
ret
and
shll
dec
sarb
inc
cltd
add
pop
pop
pop
lods
xlat
andb
dec
fdivrl
aaa
fildl
inc
imul
xor
cli
jg
bound
add
insb
adc
mov
ljmp
jl
out
sti
xor
les
push
pusha
mov
lret
popf
js
lods
sub
mov
push
mov
icebp
xor
movsl
xchg
adc
movsb
push
std
mov
pusha
sahf
stc
sub
test
hlt
cli
add
mov
mov
mov
cmpl
mov
dec
jl
fmul
aaa
jmp
int
pop
imul
adc
int
add
aas
stos
cli
mov
js
arpl
sahf
sbb
push
add
add
sbb
adc
call
adc
lods
inc
fldl
into
mov
inc
push
cmpsl
or
inc
outsl
popa
xor
fiadds
and
add
addl
push
inc
aad
pushl
icebp
cs
decb
mov
data16
mov
pop
add
rorb
pop
push
sbb
outsl
sub
mov
testb
add
js
lcall
cmpsl
xor
xor
orl
push
cld
out
sti
mov
repnz
push
fcomip
cwtl
cmp
into
leave
pop
xchg
xor
add
hlt
push
fisttpll
inc
mov
xchg
jle
fimull
jmp
pop
fsts
jecxz
popa
ret
cld
mov
push
mov
cmp
lock
cmp
cld
sbb
cmpsl
pop
popf
sbb
fcmovnu
jo
jne
adc
cmp
mov
mov
xchg
aad
das
into
pusha
cmp
sub
xchg
les
adc
dec
pop
cmp
xchg
shl
icebp
jg
add
inc
addb
loopne
sbb
arpl
jae
mov
jbe
xchg
mov
xor
mov
stos
fadds
mov
sub
adc
rcrl
jne
push
cwtl
insb
out
lahf
insb
bound
add
jmp
sbb
jae
aas
movsb
xor
push
xor
and
dec
xor
fwait
sub
shlb
movl
dec
inc
adc
cwtl
xor
test
adc
jg
sub
les
xchg
cli
movsl
jmp
push
inc
mov
jge
cltd
sbb
addr16
jmp
bound
ds
pop
or
leave
xchg
jae
sub
lret
les
outsl
in
push
in
dec
jle
enter
sbb
mov
push
mov
adc
sbb
lahf
repz
lret
lds
arpl
inc
flds
loopne
add
sbb
inc
xchg
jae
sub
cmp
inc
stc
pop
and
sti
lret
adc
jne
sub
mov
cmp
loope
push
out
mov
mov
mov
dec
cmp
lea
je
int
into
mov
lds
push
pop
bound
sti
jle
jmp
pop
lret
jne
xor
mov
lods
icebp
ret
into
in
add
stos
dec
sub
push
sbb
jbe
sub
jo
xor
xchg
mov
loopne
or
scas
jne
adc
mov
rcr
cmp
loopne
pusha
addr16
push
push
cs
repnz
cmpsb
ficomps
inc
cmpsl
cmp
icebp
inc
into
ljmp
loopne
cli
aad
js
mov
imul
add
inc
push
andl
aas
mov
shll
fwait
lret
xor
iret
aad
add
push
test
lea
outsb
dec
repnz
mov
cmp
xchg
mov
out
dec
jmp
mov
pop
jle
mov
or
fdivrp
pop
stos
rorl
daa
adc
fidivrl
jne
push
mov
xor
out
test
fadd
sbb
aad
sub
push
out
flds
add
mov
sbb
push
clc
inc
mov
rol
icebp
sbbl
adc
push
cmpsl
fldcw
repnz
fisubs
sbb
inc
xchg
lcall
call
add
mov
enter
mov
jne
pop
mov
gs
ficoml
sbbl
nop
mov
aas
adc
popf
xor
test
add
fisubs
imul
cmpsl
lret
pop
xor
dec
inc
ret
dec
sti
inc
xor
dec
mov
jnp
push
shll
mov
push
or
mov
and
sbb
clc
sub
sbb
repnz
push
or
repnz
mov
inc
aad
add
xor
cmpl
loopne
int
dec
popa
xor
adc
mov
jle
aaa
and
int
fwait
hlt
mov
es
adc
pop
scas
add
mov
jbe
push
pop
inc
jns
lret
sub
cmpsl
ds
out
andb
add
stc
pop
loopne
jg
cmpsb
cmpsl
cmc
scas
lock
dec
xchg
out
xchg
and
fwait
cmpsb
lcall
or
icebp
xchg
sbb
data16
or
scas
ficoms
cmc
cwtl
push
movsb
xchg
rolb
fimuls
adc
mov
xor
lret
xor
xor
test
add
push
xchg
clc
push
repz
add
and
pop
xor
mov
ss
inc
aam
and
push
mov
mov
sbbb
lea
hlt
addr16
popa
add
fiaddl
stos
lds
addr16
insb
sarl
out
inc
int
jmp
dec
sub
popa
xor
or
dec
and
imul
decb
aad
insb
into
loop
inc
js
jo
lods
scas
int3
fistps
or
sbb
add
cmp
rolb
into
and
sahf
aam
popa
pop
lcall
and
add
dec
loop
lock
mov
mov
and
jg
aaa
cmpsb
repnz
sbb
movsb
cmpsb
dec
mov
and
inc
push
int
add
repz
ret
or
inc
mov
cmp
xchg
mov
xchg
jecxz
inc
xor
sub
lds
jo
gs
stos
push
fisttpl
mov
adc
sbb
jnp
aad
and
sub
into
scas
cmpsl
ss
nop
fldl2e
sbb
cmpsb
inc
enter
std
pop
pop
movsb
data16
popf
scas
dec
or
xor
add
rdtsc
lret
enter
fildll
aaa
pop
rcpps
fxch
into
clc
mov
mov
dec
call
into
add
sbb
jb
sub
inc
xor
inc
pop
xchg
lods
aam
dec
neg
fimull
out
inc
or
je
out
repz
repnz
adc
jl
aas
cmp
call
mov
cmp
sti
outsb
sub
je
aaa
mov
nop
shlb
cmpsl
sar
xchg
sbb
mov
sub
pop
out
icebp
ret
data16
and
xor
fs
inc
stos
sbb
test
dec
sahf
adc
adc
js
movsb
push
mov
leave
jmp
sbb
adc
or
push
test
repnz
sbb
lock
loopne
ror
shlb
cmp
mov
mov
ret
xchg
sub
xchg
pop
mov
pop
pop
mov
inc
cmp
mov
mov
pop
xchg
mov
mov
and
insb
fcmovnu
pushfw
inc
jecxz
int
adc
in
jo
gs
fcompl
jmp
mov
stos
inc
insl
sub
shll
or
shlb
stc
out
or
adc
cld
xor
lahf
loop
mov
in
hlt
push
daa
inc
mov
nop
pop
cmp
sub
sub
int
sti
test
mov
xchg
and
or
loop
or
jne
das
loopne
out
scas
mov
push
sbb
repz
ja
mov
jne
jge
ja
xchg
add
xorb
inc
sub
mov
sub
adc
aaa
jge
es
pop
or
and
mov
jne
jae
fnstenv
mov
push
leave
jl
add
jns
jb
sub
ficoml
cmpsb
pop
mov
incl
and
aad
bound
cli
dec
rolb
enter
and
mov
add
je
adc
jne
div
loope
mov
and
fisubs
xchg
addl
roll
into
lret
mov
lods
fbld
popf
in
push
lret
sarb
mov
jl
test
pop
add
int
cmp
jnp
jge
leave
fimuls
mov
bound
aas
mov
out
pop
push
lock
add
jbe
and
into
loopne
jg
out
repnz
cli
into
xor
mov
xchg
add
dec
cmp
xchg
mov
fistl
insb
fdivrp
push
xchg
inc
jo
incl
dec
ror
mov
jge
movsb
cltd
shlb
xlat
add
and
or
call
pusha
add
icebp
mov
lahf
sbb
mov
xor
pop
fldenv
repz
ss
ja
ror
aaa
into
outsb
subb
jle
ja
imul
ficoml
jl
mov
push
jbe
add
rorb
fistpl
cli
push
xchg
pop
lcall
fld
mov
mov
sahf
enter
fisubrs
cld
dec
and
decb
lahf
fimull
mov
cmpsb
rolb
mov
mov
test
aam
push
add
sbb
xchg
jecxz
add
into
orl
or
add
sbb
ret
xchg
add
inc
std
mov
mov
push
in
adcl
mov
pop
inc
jge
cmpsb
sahf
lds
mov
ja
adc
rcrb
push
dec
xor
jp
xchg
pop
fiaddl
repz
jns
jecxz
jb
sbb
pop
test
inc
jmp
std
popf
pop
lods
mov
pop
dec
shll
mov
mov
fisubs
jne
adc
into
and
int3
or
adc
leave
jle
add
scas
mov
fldcw
lret
dec
sbb
imul
lods
pop
loop
ret
fwait
cmp
inc
cli
icebp
nop
xchg
dec
call
jmp
cmc
sub
cmp
or
insb
sahf
mov
inc
stos
shll
lods
clc
sbb
lds
in
fisubrs
in
mov
adc
popa
adc
iret
mov
adc
xchg
push
mov
int
into
mov
aaa
adc
mov
add
xor
mov
nop
pop
xor
jnp
fisubs
shrb
sbb
je
lahf
dec
pop
and
js
add
sub
aaa
mov
cmc
cltd
mov
bound
sarb
lcall
inc
pop
xor
jns
es
and
lret
or
es
cmc
call
add
icebp
nop
in
sub
inc
or
jne
mov
mov
pushf
jmp
lcall
push
pop
loope
js
sbb
mov
icebp
mov
mov
daa
repnz
xchg
shrl
push
ss
mov
fcmovb
jle
inc
enter
aas
leave
orb
fiadds
sub
insb
andl
out
fisubrs
dec
rcrl
inc
lret
inc
dec
ret
ljmp
mov
jae
mov
mov
aaa
lds
repnz
add
in
andl
cmp
mov
mov
sub
insb
sbb
repz
je
fcoms
aad
fisubs
dec
in
adc
adc
mul
jle
sub
int
cwtl
pop
mov
mov
loope
insl
adc
mov
mov
mov
add
jl
jle
add
mov
pushf
or
cmpl
test
jp
iret
sub
into
in
fucomip
aaa
inc
mov
lcall
inc
stos
sbb
or
ror
mov
xchg
out
sbb
lret
mov
and
mov
push
cmpsb
les
sahf
and
xchg
fcoml
movb
imul
and
fcompl
lods
fs
insb
mov
cmpsb
sub
int
adc
adc
insb
cmpsl
ficomps
daa
cmp
xchg
cltd
push
dec
call
test
sbb
cmpsb
outsl
and
xchg
hlt
mov
addr16
jb
mov
mov
repz
or
stc
mov
pop
pop
fldlg2
mov
cmpsl
dec
adc
in
loop
adc
or
fstpt
rol
cs
push
cmp
mov
pushf
add
loopne
aam
rclb
add
popf
sbb
push
jmp
lds
call
test
xchg
popf
push
mov
sbb
jae
and
jp
pop
ficomps
fwait
xor
lret
sub
aaa
enter
pop
inc
out
add
enter
mov
add
mov
push
addr16
out
fisttpll
andb
xchg
fidivrs
les
add
jbe
lea
mov
xor
xchg
pop
repz
push
xor
shll
dec
fnstenv
mov
jb
fsts
dec
icebp
filds
clc
rolb
rcrb
add
and
mov
test
movsb
in
inc
daa
sbb
dec
mov
add
mov
stos
decl
and
stos
rcl
and
mov
jge
stc
push
sbb
mov
stos
xor
punpcklbw
shrl
push
and
cli
sti
pop
pop
mov
jno
mov
lret
mov
add
les
inc
and
inc
addl
in
jb
pop
push
jno
roll
lds
stos
pushf
data16
shll
mov
add
mov
jae
sbb
pushf
pop
xchg
aas
and
add
stos
fistl
iret
movsb
lods
into
inc
xchg
xor
je
adc
js
jecxz
fbstp
xorb
jns
push
imul
jae
cmpb
call
mov
and
inc
adc
out
nop
sbb
scas
cmp
cltd
cmpsb
push
cmc
adc
js
add
test
inc
and
int
dec
leave
sbb
je
jns
mov
xor
add
pop
mov
test
xor
in
xchg
xor
ret
aam
hlt
fimull
jmp
ret
imul
loop
insl
dec
cmc
adc
and
clc
mov
dec
and
xor
push
int
push
mov
lods
ret
test
addr16
out
lcall
adc
fisttpll
call
pop
vmovupd
movsl
pop
sbb
dec
mov
and
sub
sub
scas
test
jle
pop
rclb
inc
and
mov
in
mov
ficomps
aad
rcrb
aaa
xchg
mov
int
dec
push
mov
jp
mov
leave
mov
xchg
mov
xor
ficomps
aam
in
cltd
mov
mov
mov
es
fisubrs
jl
test
inc
ja
add
push
aaa
mov
and
pop
jnp
lret
sub
ret
jno
push
jge
js
lcall
fcomps
ja
xor
inc
vxorps
jl
pop
pop
vmwrite
jo
loope
mov
push
aad
push
xor
repz
pusha
stc
ljmp
cmp
sub
in
inc
inc
sub
loope
fcompl
fs
sbb
jo
add
or
arpl
mov
aad
sahf
mov
in
inc
push
inc
cli
push
push
xchg
ret
jb
int3
xchg
movsb
jl
mov
lock
jae
pop
test
movsb
in
lods
imul
push
andb
adc
enter
sbb
roll
and
fcoml
inc
inc
frstor
mov
pushf
mov
jb
dec
shl
or
xchg
fcmovu
stc
inc
dec
jle
mov
adcb
aas
ret
add
jmp
cmpsl
sub
ss
and
xchg
sub
push
rorb
cmpsl
shl
addr16
cs
jne
bound
out
cwtl
lcall
xor
jno
push
enter
or
popa
aaa
lahf
data16
inc
sti
xchg
pushf
stc
sbb
jg
xor
cmp
push
dec
scas
sub
add
jge
or
xor
fwait
in
ljmp
xchg
xchg
mov
xchg
add
jno
ret
inc
rolb
pop
daa
cmp
inc
cmp
xchg
mov
ds
mov
scas
jno
call
lret
add
or
adc
inc
jb
mov
jnp
test
xlat
sub
jmp
loop
mov
aam
add
repz
sub
and
push
sahf
fwait
dec
decl
cmp
and
or
frstor
cld
rorb
lahf
sbb
push
std
add
int
hlt
push
jb
idivb
xchg
les
sbb
js
pop
lcall
daa
jnp
jecxz
pop
pop
inc
inc
xor
out
push
dec
insb
xor
mov
movsb
jne
incl
push
pop
icebp
fld
mov
mov
cmp
gs
fisubs
incb
push
adc
mov
push
adc
lds
add
mov
mov
fldlg2
cmpsl
mov
push
mov
repz
bound
sarb
sub
mov
fistpll
in
insb
push
mov
push
lods
je
icebp
dec
enter
fistpll
into
push
test
cmpsl
cltd
in
sbb
or
mov
pop
inc
shlb
inc
fimuls
rcll
jnp
roll
fisttpl
add
jne
rol
decl
push
cmc
cmp
jmp
nop
cmpsl
push
dec
mov
lret
push
test
inc
mov
out
lods
fsubrl
gs
adc
pop
xor
mov
add
fs
divl
mov
test
pop
adc
arpl
movb
dec
push
jbe
adc
adc
jge
push
mov
sbb
xchg
pushf
inc
loope
imul
and
xor
cmp
sbbb
int3
in
mov
loopnew
mov
rolb
leave
lock
roll
dec
data16
pop
add
test
pop
sub
cltd
out
xor
loop
int3
mov
shll
sbb
lods
adc
sbb
jns
pop
add
sbb
mov
movsl
xchg
adc
aam
fiadds
loop
int
mov
stc
fldenv
mov
out
sub
inc
add
sub
inc
mov
mov
out
cmp
psubq
push
dec
fnstcw
pushf
in
ja
inc
cwtl
arpl
dec
xlat
ljmp
out
push
mov
ret
cwtl
mov
cmpsb
mov
addr16
inc
mov
icebp
cmpb
cmp
addr16
xchg
subb
or
cltd
fs
adc
xchg
lahf
push
flds
cmp
sti
fisubrs
shlb
pop
jmp
sbbb
ljmp
stos
cmpsb
sarb
mov
ss
xchg
test
pop
lods
int
jno
repnz
mov
add
loope
shll
mov
and
repnz
adc
inc
lahf
push
or
jg
and
jmp
inc
adc
dec
mov
aad
pminsw
push
jmp
stos
inc
lret
and
jne
fcoms
gs
dec
addr16
into
cmc
cmp
adc
pop
shlb
cmp
or
fidivrs
jns
jb
test
sarl
mov
add
jge
icebp
aad
cmpsl
mov
add
pop
mov
push
cmp
and
xlat
cld
and
mov
mov
push
fstp
dec
mov
sbb
jecxz
jb
ficoms
std
movsb
and
pop
and
dec
aas
rorl
adc
fdivl
mov
adc
data16
and
adc
rorl
xchg
cmp
inc
xor
into
mov
cld
rcrl
lea
or
add
xchg
push
or
jb
shlb
sarl
pop
xchg
test
pop
into
jmp
inc
adc
ds
ret
js
setnp
gs
jbe
repnz
pop
call
pop
mov
ret
dec
les
inc
je
jl
xor
shll
scas
aaa
das
fcomp
jns
bound
jb
fidivrs
push
dec
mov
xor
jge
or
and
inc
pop
jle
push
sbb
popf
cwtl
push
jge
ja
inc
pop
dec
test
xchg
repz
jle
sti
inc
leave
sub
push
cmpb
sbb
adc
lods
das
inc
cmp
pop
leave
xchg
mov
stc
fstpt
out
jmp
loop
and
adc
loope
rcrl
ret
add
jmp
jae
aad
cmpsb
movsb
lahf
pop
in
mov
data16
and
call
or
iret
cmp
sub
mov
icebp
jne
pop
inc
into
stos
push
fidivrs
inc
pop
sbb
jb
pusha
jae
dec
add
pop
jno
jge
repnz
lcall
pop
sbb
mov
add
movsl
das
cli
push
ror
lock
pop
lods
cmpsb
xlat
call
insb
inc
push
pop
jecxz
jmp
movb
xor
cmp
aaa
jmp
pop
pop
ret
test
or
fbld
cltd
sbb
sub
add
stos
repnz
hlt
outsb
pop
push
xlat
xor
movsb
stos
test
xor
cli
pop
mov
imull
cmp
faddl
sub
push
cmpsl
jne
and
sub
popf
push
pop
jne
mov
cs
jo
or
jmp
add
testb
add
sti
or
inc
inc
movsl
gs
pop
inc
jb
xor
sti
fiadds
lods
dec
fidivl
mov
popa
iret
outsb
or
mov
les
iret
je
outsl
or
out
cli
test
loopne
iret
test
inc
sbb
add
out
lods
fidivrs
loop
nop
push
cmpsl
lret
pop
mov
fldt
jns
push
ret
sbb
int
sub
dec
sub
add
dec
or
push
stos
cmc
ss
and
shl
jmp
negl
test
mov
mov
xchg
loope
sti
icebp
popa
cmpsl
add
cld
scas
jecxz
pop
rcll
or
mov
mov
idivl
cmp
push
sbb
xchg
cmpl
scas
jmp
xchg
lds
idivb
into
xor
in
je
jnp
add
pop
push
dec
push
adcb
xor
lods
data16
mov
cltd
inc
sbb
cmp
das
pop
mov
int
pop
lret
lcall
dec
call
push
mov
mov
ret
xor
fstpt
cmc
ret
jge
ret
mov
push
or
xorl
sbb
ret
les
pop
ret
bound
mov
lahf
ret
fisttpl
es
sub
dec
jmp
repnz
cmp
cltd
rol
pop
aaa
inc
stc
adc
ljmp
sub
push
push
daa
adc
in
arpl
ret
in
test
push
fs
fidivl
push
in
push
mov
add
rol
cmp
ret
add
es
jg
rolb
xchg
cmp
pop
adc
imul
lret
adc
inc
es
fstl
leave
lds
pop
es
push
out
or
pop
sbb
push
dec
daa
pmullw
add
fnstsw
loop
inc
aam
inc
movsb
hlt
imul
jge
pusha
fcmovnbe
push
sbb
cmpsb
xor
in
add
cwtl
popa
sbb
push
xchg
leave
xchg
inc
sti
rclb
out
insl
push
xchg
jecxz
aam
dec
dec
sub
rol
ret
stc
ret
rol
dec
arpl
mov
jmp
ret
lret
daa
pop
xor
dec
ss
push
push
push
jl
into
adc
ret
cli
es
movsb
hlt
xchg
pop
inc
inc
ret
fistpl
push
ret
dec
push
rcll
push
inc
test
adc
push
leave
xchg
ret
imul
adc
fisttps
dec
lret
rcll
fcmove
mov
xchg
in
pop
iret
xchg
inc
fildll
enter
int3
into
or
jle
cmp
outsb
dec
ret
rolb
jnp
hlt
lret
ss
rorl
hlt
pop
inc
fimuls
xchg
rclb
sbb
dec
pop
push
pop
out
out
in
ret
hlt
push
out
mov
out
int3
or
ret
into
push
rclb
rcrl
loope
shrb
push
push
aaa
adc
xchg
push
sub
pusha
mov
rcll
inc
pop
int3
sub
cmp
mov
dec
int
pushf
jle
jecxz,pt
loopne
movl
inc
sar
int
aaa
fmuls
and
ficomps
adc
fistpll
lret
iret
fsubrs
mov
mov
rol
push
dec
test
testb
jno
sub
pop
mov
fwait
xchg
add
dec
adc
sbb
lods
push
xchg
inc
lret
ficomps
jo
cmpsl
jnp
cld
lds
stos
std
rcl
into
cmp
push
cwtl
lcall
loope
into
subb
jle
loopne
sub
les
jmp
rcll
stos
mov
int
inc
adc
ret
mov
mov
jg
xchg
jge
les
aam
enter
mov
add
hlt
sbb
outsl
das
js
pop
ss
lcall
inc
mov
mov
in
fisttps
out
ret
dec
icebp
jmp
xor
xchg
das
xchg
lahf
push
cs
fst
fs
rcrb
xchg
stc
inc
insl
and
adc
lods
cld
inc
cmpsl
insb
inc
dec
or
cli
sub
jge
shlb
pushf
sbb
jecxz
in
push
inc
mov
addr16
jns
mov
inc
push
enter
push
sbb
pusha
dec
sbb
movsw
cmpsb
push
push
fiaddl
data16
fimuls
out
add
fnstcw
cli
loop
into
pop
enter
je
cmp
cli
scas
xor
pop
lea
popf
test
and
sub
sbb
mov
pop
out
push
movsl
or
inc
push
or
or
ret
jp
addr16
imul
push
xor
shrb
rcrl
movsb
shr
loopne,pt
sbb
push
xchg
ds
adc
or
fsubp
lods
add
mov
bound
mov
into
fists
cmpsl
in
cmpsb
xor
loope
into
sub
out
insb
rcr
out
jns
lret
insb
add
mov
jbe
leave
push
xor
add
inc
dec
xchg
lods
pop
data16
call
xor
or
jno
jns
sub
jnp
int
ret
jmp
add
cli
bound
insb
insl
inc
in
mov
or
mov
fstps
cli
sahf
loope
sbb
insb
xchg
pcmpgtw
ret
cmp
jno
mov
cltd
out
loopne
aas
pop
les
icebp
loopne
or
cmp
lea
inc
fisubs
gs
jmp
cmp
sarl
ret
popa
ljmp
int3
cmp
cmpsb
sub
xchg
fst
push
push
idivl
xor
xchg
sbb
ss
add
mov
gs
xor
lcall
inc
into
sub
cmpsb
or
sti
aam
add
out
xchg
aas
mov
movsb
mov
leave
ficoms
sub
insb
shll
shll
roll
outsl
cmp
add
imul
ja
ja
loope
jns
cmp
jge
jnp
int
pop
out
jae
cs
fsubrp
lret
add
jne
add
es
stc
lcall
adc
mov
movsl
dec
ljmp
insl
aas
jno
fsubrs
test
lahf
mov
jp
and
divb
jbe
test
pop
icebp
jb
adc
mov
sub
inc
or
mov
mov
arpl
sbb
daa
bound
pop
mov
incb
lahf
in
xor
and
in
mov
push
mov
loopne
mov
pusha
loop
rorb
les
and
pop
sbb
insb
push
push
repz
push
into
nop
test
xchg
outsl
sbb
out
mov
adc
dec
mov
or
mov
inc
push
or
addl
sbb
add
fs
ficoms
mov
in
mov
cmp
inc
lret
repnz
in
int
pusha
mov
loope
cmpsl
pop
ds
lea
mov
fdivrs
ss
adc
js
jecxz
cltd
daa
cmp
and
in
mov
dec
orb
addr16
ss
ds
inc
sbb
pusha
out
pop
cli
and
cmp
jno
push
test
call
add
cmp
movsl
sub
adc
lods
xor
sbb
fstps
jae
test
ret
sub
mov
loope
pop
jp
sbb
sbb
or
or
les
jle
pop
mov
add
adc
sub
rcr
add
xor
sbbl
dec
js
lret
lea
xlat
pop
jl
stc
lcall
dec
dec
cli
ret
scas
icebp
lahf
iret
and
stos
mov
stc
sahf
mov
enter
pop
stos
inc
sbb
loopne
inc
cs
add
cmp
into
pop
sahf
push
or
inc
shrb
psubq
jo
add
fnsave
int3
je
lds
xchg
fcoms
int
rorl
dec
mov
test
add
rcrl
fisubl
ret
frstor
or
xor
lret
fiadds
stos
cmpb
push
sarb
aad
sbb
jns
dec
into
imul
rcrb
inc
std
fidivs
lods
xbegin
pushf
xor
mov
repz
sbb
inc
ret
pop
pop
cmp
xor
jge
pop
movsb
mov
sbb
into
fistpl
imul
xor
call
fnstcw
sbb
jb
and
mov
int
add
lcall
ror
in
cmp
stc
mov
test
push
shlb
sahf
pop
stc
hlt
sub
mov
inc
std
test
jns
and
lahf
test
cmpb
data16
ret
mov
push
xchg
push
xor
das
dec
loope
pop
insl
cmp
out
or
inc
add
fisttpl
jl
pop
push
mov
jmp
push
cmp
or
mov
sub
rol
in
jge
dec
sub
lods
adc
popf
pshufw
inc
adc
rorb
jno
adc
cmpsb
stc
push
jle
std
call
and
inc
enter
inc
fisubrs
lods
push
sub
filds
push
mov
lods
pop
in
and
test
add
in
jb
pop
push
xor
stos
xor
and
dec
ret
dec
sub
fs
pushf
xchg
cld
repz
mov
cmpsl
stos
mov
cmp
jge
mov
enter
jmp
fisubl
fcmovne
xchg
fisttpll
push
pop
lret
xchg
push
mov
insb
movb
lds
push
es
cmc
inc
mov
dec
or
jns
lcall
insb
jae
mov
int
mov
mov
stos
and
dec
add
xchg
and
sbb
repz
or
mov
pop
and
xchg
imul
push
in
xchg
jnp
lret
ret
cli
out
xor
enter
fimuls
imul
xchg
test
lods
add
push
push
ljmp
dec
fs
cmp
movsl
test
inc
mov
imul
ret
mov
inc
stos
mov
or
in
and
dec
lcall
cmpsl
popa
pop
rcl
into
jo
data16
xchg
xor
mov
int
mov
jns
inc
push
orb
mov
dec
xlat
call
add
push
add
xchg
mov
test
test
push
xlat
jmp
mov
out
push
jge
mov
mov
jecxz
rcl
into
jecxz
mov
dec
cmp
call
push
in
push
outsb
lods
scas
popa
mov
ret
mov
inc
into
loop
fwait
sarl
inc
inc
loop
pop
pop
jb
and
das
adc
lret
mov
push
or
popf
sbb
in
or
jge
aam
btr
out
in
jge
mov
xor
add
mov
out
sbb
sbb
ljmp
cmpsb
sub
icebp
xchg
adc
movntq
sub
xor
inc
lods
ljmp
jge
test
xchg
or
bound
mov
dec
sub
ja
sub
push
jl
in
fisubrs
ds
stc
pop
sti
or
push
xor
ds
loop
dec
add
inc
rcr
mov
or
lea
pop
stc
adc
dec
mov
aas
lock
xor
outsl
lcall
xchg
cmp
outsb
sub
insb
pop
in
scas
fisubrl
and
push
mov
movsl
mov
or
filds
imul
mov
and
or
imul
xor
inc
inc
lret
hlt
cmp
into
loopne
dec
cmp
dec
movsb
sub
shlb
in
loop
jae
push
xlat
iret
cmpsl
jge
dec
dec
das
cli
cmc
inc
insb
adc
sarl
clc
xchg
xor
push
popf
rcrl
or
daa
ret
addr16
loopne
daa
jns
mov
rcrl
sub
jno
jp
xrelease
push
sahf
and
fisubs
sub
push
je
int3
mov
cli
add
into
cmpsb
mov
mov
cmp
adc
or
push
pushf
pop
loop
adc
or
mov
pop
js
cmp
in
fdivrp
dec
add
shll
jg
fdivr
cs
xor
sub
dec
lret
fmull
cld
je
in
insb
sub
xchg
les
push
lret
je
jecxz
xchg
mov
in
cmc
push
dec
add
and
push
popa
inc
in
nop
int3
inc
add
fidivs
out
xchg
fs
adc
jmp
data16
mov
into
pop
int
iret
add
loop
xor
lods
xlat
fstpt
test
pop
push
inc
add
jb
xchg
fstpt
int3
outsb
adc
mov
cmpsl
dec
into
and
mov
lds
dec
jecxz
mov
int
movsl
push
faddl
into
push
adc
jno
jp
mov
cmp
jo
or
je
pop
mov
mov
xor
adc
push
adc
xchg
mov
and
xchg
addl
pop
dec
insb
cli
xor
push
add
mov
lods
push
rcrb
out
xor
sub
shlb
fbstp
xchg
push
dec
jg
cmpsb
sti
cli
add
loop
add
int
int
sti
out
clc
ds
negl
jl
xchg
aas
cmpsb
mov
loop
sbb
dec
lods
mov
pop
jb
stos
add
mov
cmp
out
pop
js
xor
lret
js
pop
mov
leave
mov
lret
dec
or
lret
movsb
dec
pop
push
cmpsb
jo
mov
dec
mov
sti
ret
or
aas
push
outsl
inc
in
psrad
cmpsb
xor
adc
fwait
push
xlat
and
or
sti
add
out
mov
loopne
fildl
jne
inc
mov
push
out
mov
cmp
add
mov
lcall
sub
xchg
or
jmp
xor
mov
and
es
les
mov
scas
inc
or
sbb
fucom
test
sbb
das
fistpl
add
cmp
dec
call
fdivrp
jge
push
and
out
bound
mov
frstor
sbb
ljmp
push
mov
mov
xchg
iret
mov
mov
fwait
jmp
fbld
std
fsubrp
push
loopne
sub
sbb
fwait
movsb
mov
cmpsb
inc
rcr
andl
ror
push
sbb
push
mov
outsb
jno
cli
sbb
loopne
push
mov
data16
repz
cmpsl
cmc
bound
adc
add
ficompl
data16
mov
gs
lcall
mov
aaa
arpl
mov
ja
cmp
pusha
mov
or
xor
push
and
push
aas
push
sarb
das
sbb
stc
into
and
xchg
pop
lcall
int
push
xchg
dec
lds
xchg
and
pop
sub
mov
cld
in
lds
sbb
je
stos
addr16
mov
mov
loope
icebp
aad
aam
js
cmpsb
out
xor
cmp
dec
or
ret
out
mov
shl
and
into
addps
icebp
cltd
enter
lods
lock
add
je
xor
xor
outsl
ficompl
cmpsb
push
add
add
xchg
cmp
and
sbb
addr16
daa
ljmp
mov
xchg
push
pop
jno
push
pop
inc
mov
adc
xchg
or
shlb
and
stos
lds
flds
stos
ss
jb
inc
pop
test
fdiv
jecxz
test
test
push
bound
nop
sahf
leave
sbb
fyl2xp1
lea
int
stos
sahf
pusha
addr16
int3
or
adc
clc
test
sbb
test
sbb
out
pop
sbb
std
test
fisubrs
pop
addb
push
sti
add
lods
ja
xchg
rcrl
daa
xchg
ret
push
xchg
ret
sub
ret
repnz
gs
in
ret
jmp
addb
rol
lds
out
imul
lods
clc
add
push
leave
nop
xchg
lcall
aaa
inc
decl
xlat
adc
mov
lret
aad
loopne
or
inc
ret
mov
stc
jb
es
dec
loop
leave
mov
test
cmp
ror
ret
addr16
inc
dec
repz
rol
fdivs
insb
sahf
mov
aad
mov
lcall
cmp
ror
jl
retw
rorl
call
leave
mov
xlat
into
into
rcr
fisttpl
push
pop
push
daa
mov
rol
dec
push
loope
dec
ret
jnp
inc
dec
lret
roll
cli
sbb
loope
lds
push
out
adc
pop
inc
mov
xlat
dec
arpl
push
out
and
cltd
std
add
pop
xchg
rcr
scas
inc
mov
jae
aaa
add
roll
adc
or
aad
sbb
in
dec
roll
fs
outsb
shrl
addr16
out
loop
out
pop
adc
ficoml
lret
add
leave
or
in
js
dec
inc
jecxz
inc
into
std
leave
imul
pop
cmc
rcrb
sub
fmuls
xor
adc
ret
lret
inc
cmc
fistps
jae
gs
ret
or
dec
jecxz
out
add
mov
int3
push
leave
popf
in
add
mov
inc
dec
aaa
pop
dec
movb
xlat
inc
rcr
mov
jmp
imul
rorl
inc
dec
les
fsub
fnstcw
loop
inc
pop
mov
ficoms
aad
inc
in
es
insb
pop
xchg
dec
leave
push
inc
pop
inc
sbb
push
aam
ficompl
dec
outsb
loope
fadds
sbb
dec
in
add
leave
imul
iret
jmp
dec
push
loop
in
test
daa
fimull
dec
push
pop
rolb
pop
push
hlt
inc
dec
roll
jecxz
push
rcrl
leave
jmp
in
inc
xlat
hlt
loopne
pop
push
or
es
mov
popf
outsl
sbb
adc
xor
xchg
push
xor
sub
test
jmp
pop
test
cld
jns
loop
rcr
leave
idiv
add
mov
push
lods
inc
lods
mov
scas
fmull
mov
popf
cli
pushf
sub
or
pop
or
add
sbb
cmpb
add
dec
pop
les
pop
notb
loope
pop
mov
jne
ret
and
sbb
lahf
pop
and
jo
repz
cmpsl
jns
add
fdiv
test
in
test
insb
adc
and
sti
loopne
arpl
jne
cld
sub
adc
add
fistpll
or
or
mov
loopne
or
testl
lahf
int
movsl
jp
into
pop
movsb
outsb
ss
pop
or
dec
jle
mov
arpl
xor
testl
sbb
test
repz
test
in
jnp
andl
push
mov
xor
lock
adc
mov
adc
fisubrs
enter
mov
and
inc
mov
fmuls
faddl
dec
clc
roll
push
cmp
lds
mov
jne
inc
or
test
sbbl
lcall
addr16
xchg
jbe
adc
arpl
rclb
repnz
loope
dec
mov
xchg
testl
arpl
rolb
sub
incb
vpunpckhwd
int
popf
cs
adc
sbb
mov
aam
aam
push
push
jns
mov
mov
pop
leavew
sbb
inc
aad
fisubrl
jno
or
mov
and
jmp
push
mov
add
int3
pop
push
insl
jecxz
leave
scas
pop
xchg
lds
mov
xchg
push
stos
cmpsb
and
lods
pop
sahf
add
inc
sti
pop
mov
or
push
js
fsubrp
adc
or
adc
adc
jne
scas
inc
mov
negb
loop
xor
jo
lahf
sbb
sbb
pushf
pop
icebp
pop
inc
pop
jbe
push
sub
pop
inc
jns
test
adc
mov
sbb
lds
add
sbb
inc
mov
xor
ja
insb
shrl
into
cli
add
test
or
sahf
in
pop
or
push
clc
cmp
add
sbb
xchg
cvttps2pi
test
incl
jns
push
adc
outsb
mov
mov
ljmp
push
and
ficoms
cwtl
in
or
dec
adc
sti
pop
jne
fisubrs
cmp
lret
insl
adc
jne
add
ret
in
decl
test
int
jg
imul
fiadds
std
mov
test
insl
ret
or
dec
sbb
imul
sbb
lea
push
inc
inc
orl
mov
xchg
daa
jge
dec
and
data16
mov
cmp
stc
ror
fmul
add
sar
mov
neg
push
push
mov
fstpt
xchg
lods
test
lcall
movsl
sahf
and
and
loop
or
lds
add
pop
stos
jge
dec
sub
in
add
xor
pop
inc
loope
dec
jp
xchg
mov
outsb
leave
ljmp
mov
into
je
ja
repnz
push
xlat
rorl
ds
pop
inc
xlat
dec
imul
mov
jae
push
in
jno
jecxz
stos
pop
sub
add
loopne
or
dec
push
sbb
popf
loop
cmp
ja
ret
call
inc
iret
icebp
in
xchg
sub
mov
mov
repnz
mov
mov
mov
sub
push
inc
fisttpll
fnstenv
mov
jbe
mov
lock
data16
add
adc
jge
jmp
xchg
pushw
and
cmpsb
inc
out
icebp
pop
lock
add
clc
ljmp
out
dec
cltd
dec
repnz
jmp
popf
pop
ret
cwtl
and
mul
out
cmp
cmp
xchg
jnp
add
int3
cld
mov
cmpsl
cmpsb
out
lock
ja
rcrl
or
shrl
push
push
cld
sub
cmp
js
mov
shll
inc
leave
pop
outsb
jns
jg
lret
stos
out
cmp
orb
xor
mov
ret
or
ret
mov
jle
inc
sti
das
sub
cli
sub
mov
sub
dec
cmp
int3
mov
mov
or
mov
mov
iret
out
dec
les
cs
leave
mov
in
lret
fstpl
int3
mov
enter
pop
dec
notb
ret
roll
in
lds
mov
fistpll
lcall
jmp
leave
push
rcr
mov
inc
inc
inc
or
inc
shll
lret
inc
rorb
ret
inc
push
rcll
pop
sti
call
ror
lret
sub
in
lret
push
jg
fcmove
push
ljmp
jbe
int
jne
push
inc
push
pop
push
ficoms
inc
inc
dec
fisttpll
push
push
ret
rolb
lret
test
in
inc
mov
fucomi
aad
cmc
lret
into
dec
lds
pop
jmp
aam
in
push
enter
loopne
xchg
ror
aad
jmp
iret
in
inc
inc
ret
inc
inc
jmp
mov
cli
out
pop
sub
or
loopne
jp
ret
dec
in
dec
sbb
rorb
rorl
push
or
or
inc
or
or
or
pop
push
leave
shrl
shll
push
ret
xor
push
ret
jmp
lret
inc
ret
data16
inc
rol
ret
inc
or
or
jmp
ret
or
lret
pop
ror
lcall
pextrw
add
dec
inc
adc
add
adc
or
adc
repz
adc
rclb
lret
loope
dec
adc
or
loop
add
ret
or
or
ret
push
lret
add
inc
fists
push
inc
hlt
ret
lds
pop
adc
inc
ret
dec
jnp
push
inc
ffree
ret
fcmovbe
pusha
rcll
ret
push
hlt
ljmp
lret
push
into
fcmovb
out
lret
leave
adc
push
adc
inc
ret
call
pusha
xor
add
fistps
pop
inc
inc
xchg
lret
push
popa
repz
roll
imul
ret
loop
bound
fisttpl
cli
dec
inc
dec
enter
and
inc
repnz
int3
mov
pop
rol
push
jb
je
sbb
cmp
js
cmpsl
test
aaa
int3
rorb
mov
ljmp
arpl
xchg
fisttps
adc
test
mov
or
in
jno
mov
idiv
mov
test
int
mov
xor
add
or
mov
popa
xor
dec
stos
inc
shl
xchg
inc
inc
aam
mov
sub
ret
jae
sti
loopne
push
stos
sti
inc
stos
dec
push
xchg
popf
rcll
into
sbb
test
aas
lcall
and
pop
or
sub
lds
inc
pusha
mov
mov
icebp
jbe
adc
add
ret
sbb
fwait
into
hlt
lret
sbb
mov
popa
js
and
dec
inc
mov
mov
mov
mov
pushf
jae
adc
mov
inc
and
out
lcall
add
decb
push
cwtl
or
aam
loopne
ror
repnz
cmp
dec
int3
out
fiadds
pusha
imulb
and
inc
into
stos
lods
cli
fmuls
repnz
cmp
xchg
cli
clc
mov
lcall
into
push
pusha
jnp
pop
out
sub
mov
add
jne
adc
xchg
sahf
dec
mov
push
decb
lods
jmp
rclb
push
fildl
fisttpl
test
popa
push
adc
int3
leave
call
pusha
pusha
adcl
push
lea
aaa
cmpsb
inc
push
lods
xchg
enter
mov
fimuls
in
aaa
jae
lret
xchg
mov
jl
push
mov
mov
imul
jmp
adc
fadds
addr16
pop
xchg
iret
repz
pop
mov
fimuls
mov
push
mov
pop
loop
add
imul
add
gs
stos
insl
sbb
sbb
mov
sbb
or
repnz
sti
imulb
icebp
push
push
or
insb
hlt
add
mov
sbb
data16
xchg
aam
fisttps
ret
mov
negb
mov
jge
or
xchg
mov
mov
lea
loop
lret
aad
sahf
rcll
adc
and
mov
jnp
shlb
stc
mov
push
xchg
sysret
add
pop
mov
mov
or
push
test
aas
jle
icebp
test
inc
cmp
cmpsl
mov
popa
shrl
hlt
jecxz
or
jo
jne
inc
jae
xchg
mov
shl
stc
add
dec
fstps
vmulpd
lcall
inc
enter
dec
jne
pushl
sbb
jmp
mov
inc
mov
fdivs
or
dec
xchg
sti
pop
sbb
jo
je
ret
adc
inc
int3
adc
add
push
add
mov
cmp
imul
xor
cmp
add
xchg
loope
mov
jp
and
pop
dec
stos
inc
out
or
sbb
fs
popf
ror
jae
pop
push
in
into
and
sbb
mov
add
loop
push
xchg
lock
push
mov
mov
mov
and
stos
rcl
jae
jp
lret
push
js
inc
leave
fsubp
mov
mov
or
lds
push
add
add
add
jne
rorb
add
shl
jmp
inc
jne
sahf
ljmp
cmpsl
lfs
je
cli
insl
ret
les
repz
andb
enter
or
sti
adc
lods
xchg
sbb
loop
outsb
ss
jg
ret
and
arpl
fcmovnbe
insb
add
int
jns
add
adc
movsb
cmp
fucomp
mov
addb
mov
cmp
jno
aaa
mov
dec
cld
adc
cli
push
cltd
add
stc
inc
mov
cmp
sub
jno
loope
fmull
popl
test
jb
inc
cmp
jl
dec
cmp
mov
mov
sbb
ficoms
jo
xor
shrb
popf
mov
push
jg
xchg
aam
and
xchg
ja
adcl
fists
and
lahf
aaa
insb
cmpsb
jp
jp
xchg
outsb
fs
aad
ret
fsts
inc
or
cmc
fimuls
popa
loopne
addr16
pop
bound
jmp
push
xor
dec
pop
push
int3
cmp
ret
sbb
sub
shll
call
push
inc
stc
sbb
pop
sbb
add
xor
pusha
ljmp
sbb
sbb
mov
into
ret
dec
sbb
adc
jo
lret
lods
nop
pop
fldenv
daa
cmp
loop
sub
js
xchg
jo
sbb
pop
leave
mov
push
dec
cmp
test
mov
push
outsl
movsb
jl
test
andb
ss
mov
daa
mov
bound
xor
mov
repnz
pop
inc
mov
dec
dec
cmp
bound
cmp
and
mov
fisubl
loopne
pop
mov
test
ss
sub
rcrb
lahf
sarl
dec
xor
test
out
mov
mov
test
sbb
dec
jae
or
leave
dec
pop
mov
je
jmp
incb
adc
sub
loopne
pop
push
sahf
scas
andl
in
push
sub
or
mov
test
mov
mov
jbe
jg
les
or
jl
lcall
or
fldl
rcl
push
lcall
addr16
outsl
mov
cmp
jle
andb
or
pop
ficoms
dec
lods
out
sub
dec
es
jb
daa
call
mov
ror
outsb
mov
lock
incb
shrb
jecxz
fsubrl
inc
mov
xor
pop
mov
loopne
ljmp
mov
and
fiaddl
or
nop
mov
push
out
push
pop
dec
icebp
ss
add
mov
push
stos
inc
lods
fwait
ja
push
push
cmp
std
pop
test
popf
xorl
into
test
jl
cwtl
mov
sbb
sbb
insb
mul
jge
lds
push
repnz
fldenv
cwtl
jo
mov
fsubp
xor
aad
lret
rorl
add
rcrl
mov
out
cltd
int
into
std
sub
xchg
mov
rcll
repz
and
push
ret
jns
fmuls
je
xor
test
pop
adc
push
dec
movsb
leave
sbb
loop
or
jno
pusha
inc
push
cmp
dec
ficomps
cmp
mov
ret
lods
pop
lea
dec
cli
inc
lahf
sub
ret
jns
or
add
test
xor
xor
and
cwtl
pop
out
stos
pop
int
pushf
xor
or
push
adc
dec
cs
incb
out
sti
pop
rorb
mov
adc
or
ljmp
xor
fsub
int
inc
jge
stos
mov
sub
icebp
aam
cltd
jp
push
push
dec
shrb
cld
jnp
or
lock
out
fstpl
sti
lcall
pop
jle
xor
movl
out
dec
movsb
jb
and
popa
xlat
data16
ljmp
ror
sti
and
popa
decl
cltd
mov
push
enter
and
mov
mov
fs
mov
or
mov
and
loop
jp
xlat
and
outsb
dec
repz
aad
and
and
imull
mov
or
adc
into
sbb
sub
sub
clc
lea
mov
and
aad
mov
fisubrs
repnz
xchg
inc
jge
and
in
lahf
lret
data16
lock
cmc
adc
shlb
adc
addr16
add
stc
lahf
loop
fsubl
jle
jae
dec
jle
xor
in
int
enter
pop
in
lods
xor
movsb
scas
adc
push
xchg
pop
int
insl
rcl
xchg
mov
and
movsb
pop
pop
jne
sub
into
imul
dec
nop
ror
dec
and
out
movsl
and
lret
int3
adc
or
mov
mov
test
xor
addr16
push
stc
cmpsb
adcl
fidivrs
setne
add
and
push
popa
nop
fnstcw
into
leave
ret
nop
fiadds
pop
movsl
mov
push
mov
mov
push
stos
mov
jl
sbb
pop
pop
mov
rep
hlt
fcmovu
ret
into
push
xor
pop
sbb
xchg
lret
sbb
out
sub
rcrb
push
or
xchg
shll
add
inc
cmp
imul
int
fisubrl
fimuls
xchg
into
sbb
enter
test
mov
cwtl
ljmp
into
cmovs
loopne
fsubs
adc
fcomp
lcall
hlt
xor
cmpsb
jae
inc
push
ret
fistpll
lds
mov
out
outsb
nop
lcall
in
inc
inc
push
add
call
sbb
cld
lea
enter
inc
pop
push
enter
and
xor
sub
xchg
sarl
dec
fwait
scas
faddp
data16
pop
mov
and
mov
pop
sub
stc
cmpsl
roll
shl
ja
inc
popa
xlat
and
repnz
push
push
in
cmc
iret
xchg
add
into
lcall
out
insl
cmp
jmp
adc
jp
dec
repnz
adc
mov
aam
push
into
and
pop
dec
xor
push
fstps
mov
jp
aam
inc
mov
jl
pop
or
mov
lds
lea
pushf
pushf
sub
mov
repz
test
fcmovbe
das
pop
ret
sub
js
cmpsb
cmp
loop
jae
or
das
jns
xchg
or
lods
test
mov
dec
dec
jmp
jne
test
xchg
xchg
popf
repnz
dec
out
in
testl
and
pushl
push
stos
aas
cli
fmuls
icebp
inc
pusha
mov
push
imul
testb
add
out
jb
pusha
sti
pop
rolb
fisubs
insl
pop
insb
mov
test
dec
sub
mov
mov
sub
xchg
int3
xchg
sbb
cli
into
call
in
or
rcrb
mov
sar
xchg
icebp
and
iret
lods
rcr
xlat
movlps
arpl
fstl
rorl
ficoml
and
std
cmp
jnp
inc
inc
inc
sbb
cli
test
in
push
loopne
loopne
jle
data16
inc
sti
in
mov
dec
insl
rcrb
jbe
cmp
ljmp
dec
stos
test
jnp
popa
cmp
pop
and
mov
lods
lcall
fmul
ds
xchg
aas
push
cli
mov
dec
aam
popf
and
mov
lods
jno
push
dec
lret
mov
arpl
in
jp
into
dec
mov
cmpsb
sub
mov
movsl
lds
fldenv
push
rcrl
mov
and
add
sbb
adcb
shll
test
dec
int3
movsl
and
pop
je
into
sbb
mov
xlat
add
or
dec
and
cmp
stos
lea
push
add
test
repnz
sub
jp
mov
xor
adc
rorb
xor
adc
cmp
dec
outsb
repnz
bound
and
ret
loope
push
into
cld
add
decl
fildl
cltd
loope,pn
into
shrl
inc
sbb
sbb
or
loop
add
loopne
addr16
lods
nop
out
cmp
aam
shll
mov
push
fcmovu
cltd
jmp
daa
lret
mov
test
test
push
sub
xlat
dec
gs
cmc
push
into
sbb
dec
ja
pop
mov
xchg
mov
fcompl
es
adc
pop
mov
outsb
inc
and
ja
jno
push
in
or
outsb
jecxz
ja
pop
fldln2
xchg
pop
xchg
movsb
jb
and
mov
insl
mov
sub
jne
adc
popa
leave
repz
inc
or
mov
push
cmpsl
mov
push
lods
mov
pop
and
test
enter
pop
dec
out
mov
inc
pop
cmp
jp
notb
jno
xor
ret
fwait
xor
push
aad
mov
jo
in
push
imul
and
mov
inc
iret
sub
add
std
ret
clc
xor
jae
mov
inc
shl
cmpsb
dec
mov
xchg
ljmp
loopne
jno
mov
adc
mov
or
xor
sbb
fnstcw
pop
dec
out
cli
add
addr16
nop
cmpsb
lds
xor
loope
divb
sbb
pop
sub
cwtl
cli
addb
jmp
adc
bnd
setg
clc
pushaw
add
xchg
pop
imul
pop
jb
adc
pusha
js
push
ret
mov
aad
insl
sbb
xchg
jo
lcall
mov
jl
movsb
mov
inc
fisubs
pop
dec
push
repz
add
dec
mov
add
adc
sbb
insb
fadd
mov
test
ds
pop
sti
cmp
xlat
pop
mov
cmp
movsb
test
lahf
bound
pop
stc
xor
bound
fcoms
sbb
rorb
jecxz
mov
mov
add
cmp
aas
xlat
cmp
fiadds
adc
push
loop
add
fstps
lret
pop
push
fucom
into
mov
adcl
pop
sub
pop
cmpsl
ret
pop
jb
or
test
addr16
pop
loop
push
push
lods
pop
flds
xchg
and
push
pop
or
call
fbstp
push
cli
jne
fucomp
hlt
adc
mov
sub
outsb
icebp
pop
pop
in
jecxz
repnz
repz
mov
xchg
test
add
fstps
ja
inc
mov
leave
dec
into
xor
stc
icebp
in
lock
into
loopne
and
fidivs
xchg
shrb
cmpsb
jb
xchg
mov
inc
dec
add
test
jns
dec
mov
les
and
ljmp
fisttps
sub
add
in
out
outsl
cs
or
cltd
cmp
hlt
mov
rolb
mov
sub
dec
loopne
mov
int3
data16
mov
ljmp
mov
std
mov
and
sbb
lock
das
lods
aad
mov
push
jle
xchg
clc
mov
or
push
loopne
decb
movsb
shl
pop
shrl
aam
mov
dec
mov
cmpsb
sbb
sbbb
push
and
ror
ret
fiaddl
repz
mov
push
cmp
pushf
jnp
jl
lds
pop
dec
mov
dec
ljmp
in
jp
push
inc
outsb
leave
pop
mov
and
adc
outsl
pop
or
push
mov
dec
cmpsb
aad
out
popa
pop
sub
pop
stos
adc
jg
or
imul
jmp
shll
loopne
pop
push
push
jg
jno
test
scas
cwtl
xchg
inc
push
lret
das
sub
insl
xchg
push
inc
fmull
lds
out
loopne
scas
loop
push
aam
mov
mov
inc
mov
xor
outsl
mov
jge
xor
push
clc
in
sti
jle
test
fisubrs
mov
insb
xchg
mov
xchg
mov
aad
pop
lock
scas
pop
ja
int3
push
ret
icebp
mov
lret
jno
shl
cmp
lds
fdivrp
mov
repnz
jmp
adc
pop
and
out
cs
test
fwait
pcmpgtb
cmp
push
xchg
leave
sbb
int
aaa
adc
and
ja
sbb
dec
stos
inc
into
ficoms
dec
push
mov
arpl
pusha
std
xor
or
int
push
fcmovb
insl
pushf
shr
lret
adc
inc
aas
bound
dec
loop
fisubs
sub
fiaddl
cmp
sbb
ret
fmull
sarb
fwait
test
jl
iret
inc
and
int3
pop
cmc
xchg
pop
xchg
push
out
sbb
inc
add
lahf
cld
popa
rcr
frstor
pop
and
mov
xchg
add
ss
rclb
fisubrs
xchg
sbb
mov
in
loop
sti
add
sbb
push
call
push
mov
pop
test
inc
sbb
adc
fnsave
push
out
jl
mov
xchg
test
pop
add
repnz
sbb
jle
pop
rcrl
into
xor
and
sahf
xchg
test
mov
inc
pop
sti
push
fbld
fstps
addr16
add
mov
bnd
xor
xor
bound
sbb
sbb
andb
add
data16
mov
push
xlat
mov
push
add
xlat
sbb
xorb
in
test
mov
cld
inc
or
adc
adc
sarb
fsts
pop
popf
fcomp
in
xchg
mov
jo
int
jno
jmp
mov
lret
inc
push
movl
mov
js
and
loop
dec
lret
cmp
lret
dec
add
add
dec
loop
sbb
jge
int3
fisubrs
cmpsl
hlt
sub
lea
jp
xchg
daa
cmc
mov
xchg
mov
inc
rolb
sahf
aas
stos
dec
adcb
inc
push
pop
jo
push
or
js
test
aaa
cltd
mov
inc
jo
sahf
stos
adc
and
out
fmull
enter
pop
inc
or
je
aad
in
js
jmp
and
pop
push
sbb
push
lcall
icebp
add
xor
scas
add
cmp
rclb
je
and
sbb
sbb
lahf
rcrl
xor
add
cs
repnz
jmp
add
cltd
pop
pusha
mov
addr16
lret
fldenv
add
xchg
divb
add
adc
aaa
lea
ret
pop
out
loope
out
sbb
or
scas
dec
cltd
dec
std
fsubs
adc
push
ror
push
mov
repnz
dec
fldl
pop
push
pushf
jbe
outsl
dec
dec
add
push
jl
sub
int3
scas
fcoml
inc
push
call
into
movsb
fisubrs
xchg
enter
es
sub
inc
xorb
xor
mov
lret
rolb
cmpsl
mov
pop
cs
aas
bound
stc
mov
xchg
push
sbb
push
dec
icebp
roll
jbe
pop
xchg
or
add
jge
ret
decb
or
add
cmpsl
or
inc
and
mov
add
add
out
or
lods
ljmp
or
mov
fldcw
fdivrp
cmp
and
pop
mov
rol
mov
dec
mov
push
sub
mov
stc
mov
ror
push
call
addr16
stc
in
sub
xchg
mov
mov
inc
test
out
lahf
mov
mov
aad
push
cmp
cmovno
int
push
popf
and
jne
les
rorl
int
pop
mov
pop
mov
dec
mov
test
loopne
pop
sarb
hlt
mov
xor
rorl
into
xchg
push
pop
aad
subl
jb
fisttpll
mov
sahf
pop
jbe
and
lds
fistpll
ljmp
sbb
mov
nop
insl
and
leave
jg
loopne
enter
jp
jecxz
pop
mov
mov
pop
push
adc
stc
add
fildl
repnz
jge
out
jmp
inc
cmp
fbld
ja
in
jns
sub
leave
mov
insl
mov
pop
out
mov
xchg
sub
cmp
sbb
and
and
mov
loop
fidivs
enter
sbb
shlb
adc
insb
aam
push
xor
stos
loop
fnstenv
andb
push
or
push
dec
out
and
outsl
push
fidivrs
popl
sbb
jno
adc
lcall
mov
bnd
loopne
fstp
out
add
insb
outsb
dec
das
fcompl
adc
pop
sarb
pop
call
sub
rcr
dec
sub
push
xchg
mov
inc
push
data16
jne
and
dec
dec
decb
loopne
je
xchg
sbb
int3
or
into
addr16
jl
adc
movsb
ficoms
test
pop
fnstenv
enter
sub
ret
cmp
fcmovu
sub
call
ret
pushf
loop
mov
mov
cmpsb
out
fs
test
ficoms
push
sahf
jbe
into
xor
mov
adc
add
push
pop
les
stos
das
in
in
hlt
sbb
movsb
cmp
bound
jb
decb
nop
fidivs
repnz
or
jle
adc
mov
xor
mov
lods
pop
repz
aad
insb
mov
pop
cmp
cmc
and
in
mov
push
add
dec
into
ret
jo
outsb
mov
inc
inc
mov
sbb
pop
and
fsubrs
mov
inc
add
nop
cwtl
mov
into
nop
std
pop
hlt
int
fdiv
mov
fwait
inc
jns
outsb
xchg
mov
call
aaa
repnz
jle
subps
repnz
je
jno
sub
clc
test
add
addr16
int3
dec
sbb
jns
xchg
push
mov
adc
add
mul
mov
mov
aam
lods
outsb
xchg
push
je
shlb
and
aas
lods
jg
fadd
adc
and
pushf
jl
loop
out
mov
jne
mov
sbb
shrl
leave
cmpsb
in
aam
pop
cmp
mov
repnz
loop
jbe
jle
sti
mov
pop
insl
jl
lods
popf
inc
sbb
movsl
pmaddwd
incl
add
test
fnstcw
inc
jns
push
lret
dec
mov
aad
into
stos
mov
xor
rorb
cs
push
add
cmp
add
and
mov
lcall
loop
fstps
mov
shrl
into
inc
jbe
movsl
cli
jmp
xchg
jl
xchg
lods
mov
ss
iret
stc
fldcw
ljmp
or
cs
sti
ljmp
dec
arpl
push
sbb
mov
mov
and
push
nop
xchg
push
ds
push
jae
adc
sub
lret
and
dec
fisubrs
repnz
mov
pop
lea
sub
jecxz,pt
cmpsb
roll
popa
adc
arpl
and
faddp
mov
and
int
cltd
cld
mov
rcrl
cmpsl
rcl
sub
in
and
pop
jge
popf
neg
xor
lcall
stc
mov
sti
sub
pushf
clc
rcrb
cmpsl
cmp
mov
xchg
add
jo
loop
mov
mov
cli
mov
ret
or
sub
in
xchg
xchg
int
adc
inc
pop
mov
pop
je
ljmp
dec
daa
in
xor
jmp
xor
dec
dec
fimull
rcrl
xor
sub
lret
add
xchg
cmp
adc
ret
loop
sub
clc
aas
dec
pop
sub
adc
insb
lock
icebp
std
or
and
je
cld
xchg
cld
scas
xorl
sbb
fcmovnu
sar
incb
inc
pop
dec
fs
leave
bound
or
test
add
rorl
loop
addr16
rorl
popf
rcrb
jnp
add
in
or
mov
adc
mov
pop
into
mov
lds
xor
mov
sub
mov
xor
mov
imul
in
ror
adc
and
lret
fstps
lea
cmpsb
add
insb
jle
xchg
stos
jp
sub
addl
mov
int
outsb
mulb
jne
aas
cld
int3
pop
fidivrs
jae
and
mov
sub
sub
cmp
add
lcall
push
cmpsl
or
and
cld
je
add
aam
cmp
push
sbb
into
gs
dec
jnp
mov
daa
in
mov
orb
inc
and
dec
incb
leave
rolb
xor
add
or
add
loope
faddl
fbld
lret
or
and
sub
popa
pop
cmp
and
mov
stc
je
rorl
les
ds
mov
add
inc
icebp
mov
aaa
shll
dec
inc
cmp
stos
mov
mov
je
rolb
popf
mov
mov
fistpl
flds
inc
cmp
call
lods
loop
std
repz
pop
jnp
stc
int3
mov
xchg
add
les
outsb
int
popa
inc
leave
cmpsl
or
adc
mov
jns
jnp
gs
push
arpl
inc
insb
inc
push
pop
loopne
xlat
test
xor
mov
adc
addr16
or
sbb
insb
ljmp
sub
and
imul
and
leave
adc
ja
add
scas
popa
or
daa
sbb
push
rclb
divb
add
dec
data16
add
cs
and
icebp
ret
xchg
js
negb
stos
roll
das
pop
cltd
add
out
adc
int
pop
lds
sbb
jno
dec
dec
aam
xchg
fnsave
sti
jp
inc
push
loop
add
push
nop
das
bound
add
sub
mov
shll
mov
mov
pop
sub
and
aaa
mov
test
nop
daa
mov
cmp
sahf
in
mov
and
addl
mov
add
add
repnz
cmc
sahf
fidivrs
mov
push
stos
mov
dec
inc
xor
aas
or
sti
sbb
sbb
aam
rdtsc
dec
mov
add
sbb
push
pop
loop
in
mov
in
imul
ret
xchg
fsub
testl
mov
jno
mov
mov
mov
adc
and
dec
sbbl
ret
inc
push
loope
push
sbb
ret
jnp
and
je
mov
call
dec
jne
push
add
xchg
xchg
or
int
dec
cmp
pop
mov
cmp
int
ja
pop
mov
sbb
in
push
mov
ljmp
sub
outsl
sbb
sub
xchg
sub
push
aaa
loop
dec
xor
test
sbb
xchg
data16
add
add
mov
mov
dec
mov
ds
rcr
mov
ret
mov
jns
jb
mov
stc
inc
ficoms
push
aas
adc
stos
lea
aas
leave
mov
sti
add
in
inc
dec
lret
xor
ljmp
data16
sub
insl
pop
xor
jne
int3
aam
jnp
je
or
popa
out
mov
xchg
jns
sub
shlb
bnd
xchg
loope
inc
jno
dec
jnp
sbb
jl
jne
jg,pt
add
jns
in
in
or
sbb
push
enter
dec
cmpsl
jmp
lock
sub
mov
dec
and
inc
xor
std
fldl
push
inc
in
inc
dec
pop
fisubs
xor
xlat
or
cmp
ds
mov
icebp
inc
jmp
daa
sahf
shll
fstl
xchg
jp
jb
cmp
fidivl
jne
or
rcll
ficomps
sarb
rolb
test
adc
lea
shll
cli
sbb
decb
dec
sbb
cwtl
loop
pop
outsl
mov
pop
pop
cltd
cmp
lcallw
decb
jg
mov
mov
ror
pop
mov
out
xchg
das
int
pop
cmp
xchg
lret
int3
ds
lcall
cmp
fucomp
mov
jo
orl
lahf
lods
mov
arpl
push
icebp
mov
or
sbb
adc
into
sub
pushf
and
adc
mov
sub
addb
or
popa
test
jge
fiadds
dec
mov
add
leave
add
sbb
push
cmpsl
call
xchg
popf
leave
mov
mov
sbb
daa
hlt
lods
inc
jecxz
icebp
lods
adc
or
inc
inc
adc
cmpsb
addl
and
dec
jns
lods
stos
loop
inc
pushf
int
icebp
fwait
and
scas
jp
rcl
lahf
or
xchg
pop
pop
jo
and
pop
loop
orb
add
cmp
in
icebp
sahf
mov
inc
call
enter
push
js
ds
sub
inc
fwait
push
cmpsl
or
int
mov
add
mov
add
int
sbb
divb
data16
inc
rcrb
jae
push
popa
xor
adc
adc
xchg
jecxz
xchg
sbb
loope
push
inc
sub
push
inc
cmp
inc
pop
jnp
iret
loope
push
into
enter
repz
xor
fwait
in
jmp
loope
js
sub
ss
lock
and
cs
inc
sti
push
int3
xor
mov
test
inc
mov
loop
pop
fidivrs
fadd
pusha
aaa
jp
mov
xor
shr
jae
and
fcomp
aad
orb
ret
fcoml
arpl
push
lods
mov
adc
ret
cmp
orl
xor
in
loopne
popa
xchg
cmpsb
lds
mov
sbb
lret
adc
js
jle
sbb
cltd
idivl
jl
mov
into
pop
add
mov
push
loopne
dec
mov
pop
hlt
test
push
and
pop
xchg
scas
push
push
jmp
aas
adc
in
inc
dec
push
gs
mov
cmc
mov
shrl
or
mov
dec
push
dec
insl
push
mov
rcr
subb
aam
or
fdivl
push
rcrb
ret
test
loopne
dec
movsl
add
pop
dec
les
sbb
loopne
cmp
popa
sahf
aam
popf
mov
or
sub
aad
sarb
fistpl
and
adcl
pop
sub
mov
xor
pop
jb
sub
add
test
mov
mov
xor
sbb
mov
movsb
push
ficoms
push
sub
jle
xchg
icebp
pushf
fildll
xor
fiaddl
ljmp
int3
sub
fcompl
sbb
pop
dec
cmp
fcom
sub
add
and
or
xlat
inc
sbb
pushf
lahf
push
jae
pop
push
inc
sbb
jo
adc
sti
jg
adc
pop
loope
pop
repnz
xchg
shlb
mov
jo
in
out
cmp
mov
cmpsb
dec
daa
or
lods
in
dec
mov
mov
scas
insl
cmp
arpl
inc
rcr
sbb
jmp
fcmovne
loopne
mov
hlt
orb
pop
rcl
int
adc
fcmove
mov
xchg
push
call
mov
subb
std
push
mov
mov
insb
mov
mov
push
subb
fstps
mov
enter
ljmp
inc
ret
push
leave
sbb
cltd
push
jl
hlt
dec
and
sahf
mov
cmc
sub
sbb
pop
scas
mov
jg
movsb
adc
adc
leave
lock
lods
add
dec
jmp
push
inc
pop
insl
popa
sbb
fpatan
into
in
and
pop
mov
cmpsb
mov
loop
inc
jns
sahf
mov
inc
sub
out
hlt
inc
xchg
or
fadds
mov
rcll
pop
nop
push
mov
push
mov
ss
shrb
popa
xchg
ljmp
pop
xor
in
in
decb
jle
iret
cmp
or
xorb
icebp
pusha
leave
clc
inc
xchg
lods
fsubl
xchg
push
mov
mov
or
cli
mov
jns
xor
fldpi
enter
je
xlat
and
sbb
adc
insb
or
pop
cmp
out
lods
sbb
or
add
mov
push
cwtl
negb
je
jl
add
loop
push
jae
addr16
je
sub
or
inc
jbe
int3
sahf
es
shll
rclb
mov
out
loop
lods
sbb
add
cmp
fnstenv
das
mov
sti
add
fs
push
jne
pop
out
mov
mov
jecxz
adc
cmp
sahf
pushf
dec
mov
rcrl
stc
and
or
aas
or
mov
sub
add
incl
jecxz
scas
xchg
out
lds
scas
dec
jbe
or
outsb
xchg
sti
inc
leave
cmp
or
mov
jne
jp
cltd
enter
ljmp
and
mov
test
es
lahf
outsb
cmpsb
inc
icebp
dec
push
leave
jns
shl
test
rol
stos
fdivrp
bnd
lock
fcmove
cltd
jle
dec
icebp
fwait
jne
sbb
xlat
std
mov
adc
mov
add
inc
into
lret
inc
daa
ljmp
loopne
xchg
and
cmpsl
mov
xchg
lret
mov
mov
cmpl
ljmp
adc
and
les
stc
jle
xor
fistl
vcvtps2dq
sbb
movsl
jbe
sbb
shlb
repnz
out
movb
dec
imul
pop
js
lods
adc
mov
inc
mov
adcb
in
pop
js
arpl
push
cs
lods
cmp
dec
jmp
rcr
out
lahf
jbe
inc
hlt
pop
pop
cmpsl
cmp
cmp
roll
jmp
sbb
mov
mov
and
pusha
sbb
nop
fistpl
push
int
ret
inc
inc
js
pop
ss
mov
lcall
aad
rcll
push
stc
std
and
nop
pushf
test
sub
faddl
out
mov
cmp
aam
mov
cmp
inc
stc
out
xorl
in
add
fs
cmp
pop
dec
jno
jmp
daa
or
mov
out
out
test
mov
and
add
fnstenv
sti
jecxz
sbb
testl
xor
add
gs
jle
push
cmpsb
lret
add
outsb
sub
pop
cltd
icebp
adc
sbb
lds
fnstsw
push
mov
std
dec
jmp
testl
xchg
mov
sti
adc
sub
scas
cmp
cmp
inc
loop
fcmovbe
hlt
enter
pushf
ret
dec
int
loop
fiadds
and
scas
mov
cmp
xchg
pusha
mov
fidivs
mov
mov
jp
pop
pop
movsl
mov
dec
push
fisubrs
pop
push
roll
xlat
xor
jg
xor
sub
pop
or
aad
roll
ja
lds
dec
add
int
jmp
rorl
push
iret
add
jmp
int3
mov
add
shl
into
pop
cs
and
push
xor
push
or
or
pushf
andl
les
daa
sbb
ret
push
push
jle
jns
orl
ja
dec
mov
cmc
sub
fwait
add
mov
inc
push
sahf
orl
sub
jp
push
mov
scas
sub
adc
add
setg
pop
into
jge
sbb
xchg
data16
xor
mov
mov
push
add
je
into
lret
pop
popf
lods
sub
pop
add
xor
pop
sub
popf
add
aam
inc
and
fistpll
and
int
hlt
jp
cli
repnz
inc
leave
cli
fidivs
cmpsb
xlat
sub
cmpsl
xor
lock
add
ret
rcrb
ss
test
out
subb
jmp
aas
testb
stos
je
and
push
push
cli
nop
mov
mov
out
jne
lds
lret
fisubs
lcall
fs
xchg
mov
orb
mov
mov
jae
dec
lcall
fisubl
cmp
pop
fsub
dec
add
pop
or
aad
stc
inc
dec
roll
dec
add
mov
mov
testb
adcb
int
inc
arpl
sbb
inc
fcmovu
ret
jl
push
test
pop
xor
pop
and
xchg
mov
popf
dec
sbb
mov
pushf
sbb
pushf
shll
add
adc
add
adc
mov
lahf
xor
cmc
test
bnd
push
add
ret
lds
sbb
pop
loopne
addr16
insl
xchg
push
je
sbb
mov
mov
jle
add
orb
inc
bound
test
pusha
hlt
xchg
mov
jmp
or
mov
push
push
fwait
jmp
push
mov
mov
popf
mov
pop
dec
loopne
or
add
mov
popf
push
repnz
lods
push
mov
adc
sti
popf
mov
loopne
inc
je
in
out
sbb
fidivs
pop
loopne
jmp
and
sbb
adc
xor
dec
pop
inc
push
test
fists
xchg
sbbl
je
and
vmread
fxch
nop
sti
divl
cld
inc
push
mov
pop
cmp
icebp
fidivrs
xorb
mov
out
popa
into
fwait
mov
push
dec
clc
leave
or
and
lds
fiadds
cld
xchg
cmpsb
imul
cmp
ljmp
popa
or
pusha
into
sub
shlb
stc
mov
and
lods
cld
das
push
fsubp
mov
hlt
mov
into
test
test
xchg
lea
lret
push
adc
fnsetpm(287
mov
cmp
cmpsb
dec
jl
aas
pop
data16
out
jecxz
and
cmc
out
fstp
add
leave
ja
aam
fisubrs
lret
adc
dec
testl
adc
push
push
movsb
jnp
lea
inc
test
in
stos
fidivrl
int
fsin
pushf
push
fstl
xor
xchg
and
add
in
fcompl
or
subl
aam
push
push
xchg
pop
mov
push
sub
les
jl
xor
xor
jl
out
aaa
dec
fidivs
test
ds
sbb
out
add
cmpsl
mov
loope
int
into
mov
call
or
fidivs
stc
or
dec
jo
div
pop
cs
jne
arpl
add
and
cli
and
or
lret
in
leavew
inc
lret
mov
xchg
stos
in
push
push
fisubs
inc
push
mov
mov
adc
add
aam
or
inc
fnstenv
or
add
add
pushf
inc
popf
enter
sub
xchg
xchg
push
dec
and
std
jb
pop
jbe
and
push
das
add
jnp
and
cltd
cmpsb
cmp
or
pop
subl
pop
pop
mov
shl
mov
mov
lds
xor
int
sub
test
and
sbb
icebp
dec
int
cld
and
lea
jle
rcr
or
mov
hlt
pusha
ficoms
xchg
js
mov
andps
sahf
add
ja
mov
popf
pop
xor
ja
lods
into
scas
sahf
jb
ficomps
dec
shll
jbe
aam
xchg
call
arpl
pop
jecxz
rcrb
lock
pop
into
stc
mov
fidivl
test
pop
inc
adc
mov
shll
xchg
popa
dec
ljmp
cli
pop
inc
loopne
cmpl
sbb
and
ja
aam
call
popf
dec
aam
insl
inc
insb
js
jb
idivb
lds
sbb
cmp
add
mov
je
pop
lret
aam
pushf
dec
rcrb
lcall
pop
fstps
stos
lret
add
pop
xchg
ret
repnz
dec
or
mov
mov
rorl
fs
fwait
repnz
mov
fstpt
icebp
xchg
hlt
push
ljmp
loope
rcr
jns
xchg
xor
repnz
cmp
int3
rcrl
mulb
shrl
adc
test
sahf
xchg
mov
sub
sub
movsb
add
add
dec
popa
push
out
jl
xor
cmpsl
jge
sahf
mull
dec
out
sub
inc
adc
std
mov
cmp
dec
lret
ret
pop
pusha
dec
inc
mov
aam
mov
addr16
jo
cmc
push
mov
jo
add
cmc
lea
int3
jns
addr16
lea
add
aad
lret
negl
inc
pushf
nop
pop
jl
repnz
incb
lahf
fimull
inc
sub
sti
std
into
jbe
out
lock
mov
fcmovbe
lcall
stos
fdivrp
adc
sub
clc
adc
adc
jge
mov
aam
rcr
jmp
clc
pop
in
loopne
and
loopne
outsl
jns
adc
or
jbe
sbb
cmp
push
insb
push
adc
sbb
lcall
insl
push
mov
jbe
add
hlt
sti
dec
aam
jp
cmp
inc
into
out
nop
push
fwait
cli
mov
fwait
loopne
mov
insl
and
inc
jo
dec
sbb
ffree
pop
mov
idivl
lahf
xor
mov
cmp
loopne
xchg
int
mov
mov
cmp
pusha
imul
je
xor
cmp
pop
dec
xchg
adc
jl
loopne
dec
add
inc
inc
fnop
shrb
inc
adc
fisubl
lret
insl
xchg
pop
mov
jnp
into
aam
sbb
and
xchg
pop
sti
xchg
loope
inc
imul
iret
xlat
bound
sub
add
addb
fisubrl
xlat
jmp
jecxz
mov
pop
push
in
cmpsb
jmp
push
lret
leave
dec
inc
pop
call
xchg
dec
mov
sub
div
into
fiaddl
sub
pop
push
into
and
iret
les
jge
xchg
push
stos
fstpt
and
pop
add
or
addr16
mov
pop
adc
aam
mov
xor
sub
jno
sbb
mov
push
sbb
lods
add
popf
loop
sbb
jno
out
insb
sbb
sub
sub
cmp
mov
push
out
js
shrl
add
int3
inc
or
mov
cmp
and
adc
jge
and
in
push
inc
jmp
jle
mov
fdivs
inc
fnsave
push
mov
cltd
xchg
aas
push
mov
pop
ljmp
iret
sub
mov
or
sbb
fiadds
push
pop
jb
and
icebp
mov
f2xm1
jnp
jae
add
lods
bound
hlt
xor
mov
dec
stos
add
jae
jne
test
jmp
scas
mov
or
ja
out
cmpsb
or
dec
cmc
je
hlt
popf
cmp
mov
stos
mov
inc
gs
fimull
adc
ja
xor
pusha
test
push
dec
jb
cli
push
sub
mov
jecxz
fs
leave
lea
ret
stos
mov
in
and
sub
push
addr16
inc
xchg
push
xorl
inc
fisubs
mov
lea
bound
and
ja
andl
fidivrl
jge
into
or
push
je
jg
xchg
shrb
sub
cltd
fwait
enter
mov
or
pop
cmp
loop
lahf
fiadds
sub
mov
and
int
mov
adc
rcl
jno
decb
insl
push
xor
sahf
mov
ds
test
in
mov
lcall
ds
dec
inc
js
movsb
mov
adc
mov
stc
lcall
push
fstpt
ret
jmp
out
mov
jb,pt
mov
add
jg
jo
mov
mov
jp
dec
loope
mov
mov
pop
lods
xchg
dec
jmp
mov
enter
mov
dec
fidivs
out
pop
push
inc
mov
and
call
jl
jnp
push
popf
xchg
dec
pop
pop
push
xor
filds
fisubrs
xchg
stos
dec
cmp
push
and
sarl
lock
repnz
in
insl
lcall
into
push
mov
pop
shlb
or
rcrl
jl
out
aas
mov
lods
pop
pop
fcomps
loop
rol
insl
into
rolb
rorl
scas
pop
repz
push
fiadds
add
subb
jmp
push
addl
jbe
icebp
cmpb
jp
pop
mov
mov
cmp
sub
int3
or
and
push
ficoms
and
ja
pop
dec
add
int
mov
cmp
icebp
jns
repnz
test
mov
int
in
out
lds
mov
mov
inc
faddl
jo
push
shll
pusha
inc
inc
lock
and
and
ficomps
pop
mov
push
loop
fcmove
orl
ljmp
stos
mov
mov
push
flds
jl
ret
vpcmpgtd
popa
into
icebp
lahf
pop
stos
movl
std
push
out
mov
aaa
testl
mov
dec
ja
sub
std
xor
pop
jmp
adc
and
loop
jle
xorb
or
xor
inc
les
sub
mov
sbb
enter
data16
fimull
mov
ret
cmp
ret
dec
les
xchg
sbb
mov
push
cmpsb
sbb
and
lcall
sbb
mov
pop
sar
shll
test
pop
dec
data16
adc
add
sub
push
out
jno
mov
mov
adc
je
lds
cmp
inc
mov
fistps
xor
mov
jo
lret
mov
push
loop
fiadds
jno
aaa
inc
call
add
rolb
push
les
and
jl
loop
sub
fisttpl
enterw
pop
push
adc
sbb
dec
adc
xchg
mov
inc
mov
decb
test
lods
pop
mov
xchg
jo
rcll
push
push
outsb
pop
repnz
cwtl
cmp
popa
sub
and
or
adc
je
mov
lahf
jmp
movsl
clc
fsubrs
add
mov
enter
ret
mov
loope
inc
pop
mov
int
aam
adc
and
into
and
pop
loopne
cmp
dec
lea
dec
ja
adc
ror
aam
fstl
mov
popa
sub
cmp
gs
jbe
ror
xchg
enter
sub
ds
mov
movsb
insl
mov
aad
ficoms
pop
pop
add
sub
and
leave
push
and
mov
or
icebp
jle
fstpt
iret
mov
repnz
cmc
push
out
xor
loope
adc
int
xor
shlb
mov
xor
fstpt
lahf
jo
add
test
pop
add
pop
jge
push
push
orb
dec
icebp
clc
xchg
stos
and
cmpsb
mov
repz
inc
push
lods
sub
sbb
mov
test
lret
mov
mov
and
xchg
cltd
push
sub
in
cmpb
inc
jb
inc
nop
loop
push
lahf
xchg
out
xor
sbb
call
ret
jbe
jo
jb
and
and
cmpsb
xor
cmp
sbb
cli
jmp
or
stos
sub
fsubs
mov
enter
push
or
fsubr
or
mov
lods
out
in
dec
sub
mov
loop
in
mov
dec
mov
loopne
jo
pop
xchg
add
and
loop
sbb
push
pop
leave
cmp
xchg
inc
dec
pop
inc
pushf
call
mov
adc
push
fwait
ret
popf
dec
jl
inc
push
mov
push
adc
loopne
stc
fnstcw
loope
mov
cmp
and
rcll
movsb
sbb
or
sbb
testb
nop
jb
jp
sar
inc
je
std
cmp
mov
fmull
mov
pushf
fnstcw
sbb
and
mov
rcrb
out
push
pop
hlt
cs
sbb
cmc
js
xchg
and
inc
jmp
sub
fsubp
aad
sbb
mov
mov
fisubrs
jo
into
jp
adc
orb
xchg
in
sub
add
ficoms
ja
jne
mov
nop
xchg
adc
dec
bound
addr16
insl
shlb
and
shlb
ja
and
insl
out
pop
and
shrl
sbb
out
jp
lcall
test
add
sbb
xchg
bnd
into
shll
mov
loopne
bnd
loopne
leave
das
fs
dec
orb
inc
enter
lods
jmp
sete
push
sahf
pop
arpl
xor
filds
into
mov
lods
mov
out
mov
cmp
mov
into
inc
loop
ret
lcall
aas
mov
mov
mov
mov
fisubs
dec
inc
loopne
and
repz
into
add
dec
repnz
xor
pop
ds
and
sub
jmp
gs
jp
xor
enter
push
movsl
fidivs
call
jne
adc
pop
push
mov
lcall
lds
out
add
ficomps
or
pop
hlt
adc
in
rclb
insb
push
adc
sub
adcl
iret
out
enter
dec
mov
popf
add
filds
std
pop
in
mov
popa
cmp
mov
sbb
aas
test
jp
dec
cltd
pop
push
fdivs
mov
mov
mov
rcll
mov
fiadds
mov
fsubrp
test
data16
add
lcall
insb
faddp
in
dec
xchg
mov
and
adc
inc
jne
and
push
push
les
rolb
roll
test
decb
xor
mov
push
fiadds
popf
ljmp
push
test
jmp
pop
add
cmp
lods
mov
jp
mov
test
push
in
and
movsb
mov
idivb
pop
sbb
inc
push
pop
sub
ficoms
pop
sarb
icebp
xchg
cs
dec
stos
mov
shll
dec
mov
and
push
icebp
cmpsb
ljmp
jge
loope
jg
or
sub
pop
dec
lods
repnz
fistps
leave
mov
cmp
jp
cld
or
mov
fwait
mov
jb
lahf
and
and
pop
sbb
mov
cmp
test
rclb
pop
into
sbb
cmp
add
dec
rolb
jns
pop
or
ret
sahf
pop
fisttps
dec
daa
call
dec
dec
addr16
push
jne
sbb
cld
sub
mov
cmp
loope
mov
jg
jbe
mov
enter
ja
lods
lds
and
mov
lds
pop
cmp
into
loope
test
and
and
fsubrl
mov
vmread
fildll
sahf
add
lret
dec
int
sar
jle
add
xchg
inc
sbb
lods
adc
cmpsb
jne
jecxz
iret
jmp
or
je
fnsave
iret
jle
test
add
sbb
rol
dec
out
xchg
call
fdivrl
add
and
push
or
loopne
adc
lret
fisubs
sbb
fldcw
xchg
ret
pusha
inc
out
ret
or
inc
pop
fmul
pop
inc
xlat
jae
fadd
sbb
sbb
mov
shl
sahf
arpl
push
fcomip
fcmove
in
sub
mov
xchg
lods
cli
in
leave
lret
add
ret
xchg
fisubs
pop
sbb
jmp
ljmp
fcmovb
cmp
ficoms
adc
xchg
inc
jb
sub
divb
sbb
imul
pop
jmp
add
cmp
jo
dec
push
into
dec
aad
dec
aad
sarl
loopne
aaa
push
rolb
or
add
fwait
loopne
loopne
call
mov
ja
add
gs
mov
or
incb
cmp
dec
rolb
es
shrl
shlb
cmp
sar
ror
std
fwait
xor
mov
inc
xchg
or
sbb
fldenv
int
testb
data16
fwait
aaa
push
dec
cmp
lock
fwait
add
gs
jno
neg
lods
dec
adc
fisubs
xchg
xor
sahf
or
mov
ficomps
pop
out
ljmp
xor
cmp
movsb
je
xchg
or
push
pop
ret
mov
or
mov
outsb
loopne
shlb
in
inc
jge
test
sub
mov
push
movsl
cmp
fstl
sub
enter
lret
scas
imul
addb
imul
out
add
rolb
clc
inc
fisubrs
ret
mov
mov
add
push
add
cwtl
add
fimuls
xor
inc
daa
push
mov
data16
dec
cltd
add
loope
sub
aas
push
dec
enter
dec
xlat
aam
jmp
aam
ret
data16
int3
ja
mov
mov
inc
inc
clc
or
comiss
inc
pop
and
or
cmc
sbb
fiaddl
adc
push
or
cmp
sbb
mov
sub
into
addb
lcall
xlat
in
outsb
dec
push
mov
xchg
leave
sub
in
add
cmpsb
jnp
cwtl
jmp
adc
xchg
fstps
fs
lahf
movsb
lds
mov
or
push
add
or
out
leave
cmp
mov
ret
shl
jo
repz
mov
ljmp
movsl
inc
movsb
jp
push
fidivs
in
int
test
inc
imul
ret
test
les
aas
pusha
in
js
out
add
sub
inc
pop
into
push
cmp
fldenv
fs
test
ret
ret
cmpsl
push
leave
out
or
cmp
sti
aas
jae
aam
ret
fcmovnbe
shlb
mov
cli
ret
adc
and
push
movsl
ret
add
pop
dec
push
ds
ret
push
jnp
arpl
out
sbb
push
pop
aad
inc
dec
dec
std
mov
dec
inc
dec
pop
rclb
pop
ror
jno
pop
or
ret
les
mov
ret
mov
mov
inc
inc
jo
les
out
xchg
and
ret
shll
xlat
les
mov
lret
lods
jp
and
aad
lahf
pop
enter
xchg
daa
sti
out
les
lcall
add
mov
add
enter
ret
xchg
mov
les
adc
add
imul
dec
inc
ret
dec
push
push
push
enter
inc
add
aad
lcall
leave
lds
inc
dec
or
inc
jmp
inc
cmp
ret
jmp
enter
dec
rcl
aad
lret
jmp
ljmp
shll
aam
ror
into
rcrl
pop
lret
shl
push
out
iret
push
fstl
inc
add
rolb
or
daa
pop
out
fbstp
lds
leave
add
add
loop
ret
inc
inc
inc
sti
int
sub
jmp
mov
ret
call
push
out
ret
or
ret
lret
pop
in
cli
rol
push
dec
in
inc
pop
in
movsl
adc
inc
int
pusha
dec
jae
insb
push
jecxz
fnstenv
fucomip
in
xchg
rcl
fcmovu
inc
inc
adc
dec
out
lret
xlat
outsl
fsub
inc
aaa
fsub
lds
xlat
adc
xchg
fcoml
push
push
dec
fcoml
popa
scas
xlat
inc
repz
mov
imul
sub
into
flds
aas
sbb
loopne
inc
lock
mov
and
cmpsb
arpl
push
xchg
mov
sbb
scas
dec
push
mov
push
inc
jge
enter
add
push
dec
sbb
mov
aas
or
jo
xor
mov
into
int
mov
cmp
xor
mov
popa
je
mov
push
in
ja
sub
push
xchg
adcl
mov
sub
jnp
push
mov
pop
test
mov
or
lods
repnz
cli
test
in
js
pop
fimull
cmp
call
roll
int
add
xchg
and
leave
sti
aas
lods
jle
pop
cmp
rclb
cmp
les
hlt
dec
jmp
pop
or
xor
sub
jb
mov
pop
aaa
push
lods
pop
and
sbb
pop
aam
push
leave
push
fisubrs
xlat
add
jg
xchg
loopne
daa
pop
bnd
shlb
and
cltd
push
loop
jl
jae
xchg
ljmp
jge
lret
stos
int
rcrl
push
jns
cmpsl
popf
xor
sub
ds
lret
mov
pushf
xor
and
cwtl
adc
jo
loopne
mov
loopne
mov
fstl
pop
movsb
fbld
int3
xchg
push
nop
sti
rorb
stos
dec
dec
stos
insb
add
fisubrs
xchg
sahf
int3
mov
in
movsb
xorl
mov
ljmp
insl
inc
push
sbb
test
push
test
fiadds
outsl
mov
xor
fisubs
ret
sub
push
dec
test
ret
jno
mov
sbb
sbb
ficoms
push
mov
ljmp
push
push
push
adc
addl
fwait
jae
and
mov
aas
enter
xlat
out
popa
shrl
mov
aam
jecxz
push
incb
imul
inc
fdivp
lea
ror
scas
jecxz
xchg
xor
or
bswap
or
inc
popa
rcr
leave
xchg
cltd
dec
mov
jle
loop
frstor
add
mov
pop
lods
dec
lds
jne
imul
cmp
pop
lods
pop
ja
add
and
paddusb
lods
dec
and
cmpsb
fistpl
mov
pop
and
aam
sub
mov
mov
push
dec
jge
pushf
cmpsl
dec
cs
jl
and
bound
or
fiadds
dec
mov
leave
cmp
loope
leave
push
add
cmp
jg
ljmp
jns
dec
movl
fidivrs
mov
add
je
aas
das
dec
jecxz
xor
mov
rcrb
pop
mov
pop
xchg
rorb
pop
loop
pop
pushl
sbb
in
jo
xor
data16
lock
repnz
pop
ja
jmp
outsb
and
cmp
fcomps
mov
xchg
lods
int
aaa
mov
mov
ss
jp
clc
dec
test
fisubl
nop
inc
aam
jo
stc
push
sub
mov
ss
adc
mov
loopne
out
test
xchg
repnz
repnz
mov
sahf
popf
jmp
inc
cmpsl
pop
and
lods
add
clc
push
jns
pop
les
push
dec
cli
pop
xor
in
movsb
mov
push
sbb
iret
inc
adc
mov
push
jne
mov
cmp
or
lods
lahf
jp
cmp
mov
pusha
inc
jns
inc
jg
jmp
mov
sub
shrl
inc
aad
in
mov
aaa
cli
dec
xchg
or
cmc
pop
xchg
sti
aaa
sbb
xchg
lahf
loop
fstpt
mov
mov
shlb
int3
and
pushw
bnd
loop
lds
je
push
data16
sbb
xchg
adc
test
or
into
jecxz
int3
cmpsl
iret
mov
leave
xchg
xor
adc
jb
jae
ja
cli
call
cmpsl
xchg
inc
pop
mov
popf
test
dec
pop
xchg
mov
ret
or
sbb
mov
ret
addr16
sbb
jmp
mov
scas
push
arpl
mov
in
and
mov
fcomps
mov
mov
test
loop
inc
in
sub
scas
aam
add
inc
jg
daa
sarl
dec
repz
lods
test
inc
fildll
pop
and
cmp
pop
stc
fisubl
imul
fidivrs
mov
mov
in
mov
ja
dec
lods
lods
lcall
jae
int3
sub
movsb
loope
mov
cltd
bound
fidivrs
or
cmp
fmuls
das
push
ficoml
jecxz
and
xlat
xor
lret
fiadds
inc
jl
mov
adc
mov
icebp
cmp
adc
fisubrs
jge
call
xor
dec
and
sub
aas
push
xor
and
testb
mull
sbb
lea
outsb
inc
and
into
mov
lret
mov
push
das
cmpsl
push
and
fwait
in
daa
pop
and
popa
push
cltd
push
mov
jne
mov
cld
ret
add
je
xchg
clc
data16
imul
clc
scas
shlb
xchg
psrad
popl
add
ja
push
in
jne
addr16
push
cwtl
ffreep
push
movsl
pushf
add
and
adc
or
mov
mov
stos
inc
mov
mov
cmp
adc
cmp
ret
ja
mov
call
out
lcall
rcrl
sbbl
push
je
sbb
mov
cli
push
inc
inc
add
andl
and
cmp
jb
pop
fptan
fnsave
and
mov
xchg
sbb
ret
arpl
jnp
or
jge
sbb
orl
ffreep
sbb
data16
mov
leave
cmp
mov
jmp
and
pop
cmp
cmc
andl
adc
test
nop
add
ss
loop
popf
aad
pop
fcomip
pushf
loop
cmp
add
aas
insb
sahf
pop
inc
test
jmp
pop
mov
cmc
in
adc
mov
dec
aas
or
cmp
lea
fildl
xchg
icebp
mov
cmp
enter
mov
mov
push
daa
jg
ja
lret
cmpsb
loopne
jmp
xchg
cld
fsubrp
nopl
jg
mov
sarb
or
lahf
xor
adc
cmp
sub
cmp
lods
cs
cwtl
hlt
dec
inc
adc
sub
inc
hlt
sbb
sub
gs
sbb
dec
sub
mov
mov
into
sar
sbb
add
mov
pop
fdivp
ljmp
stc
fnstcw
out
lods
xchg
and
aad
and
mov
jg
test
cmp
sub
push
repz
xor
mov
into
and
push
loop
dec
mov
xlat
stc
or
insb
pop
lcall
mov
mov
xchg
push
fistl
into
loop
inc
sbb
in
xor
sti
adc
roll
mov
or
mov
repnz
jmp
in
mov
push
das
pop
lret
nop
hlt
xor
fidivrs
cmp
aam
nop
jge
fistpll
pushf
push
pop
imul
mov
mov
mov
dec
mov
cmpsb
icebp
sbb
sub
js
push
inc
lds
dec
loope,pt
adc
and
mov
repz
jnp
push
ret
inc
in
mov
mov
mov
dec
insl
cmpsb
mov
lods
sahf
aas
leavew
xor
sub
test
pop
cmp
cltd
push
pop
or
popf
add
inc
lds
push
stos
int
inc
sbb
movb
push
mov
mov
inc
push
sahf
popa
sbb
lods
add
push
int
les
cmp
ret
cmp
lahf
dec
push
popf
insl
and
push
in
loopne
or
mov
lea
mov
fbld
jle
push
add
lcall
int
cmpsb
mov
cmp
hlt
ret
nop
sbb
test
mov
sar
mov
fsubrs
jle
mov
mov
sahf
lods
pop
mov
test
mov
and
or
ja
push
inc
mov
pop
sarl
movsl
add
rcll
mov
lods
add
addb
fxch
stos
pushf
jmp
fdivl
inc
pop
sub
mov
dec
pop
mov
sub
mov
cmp
lds
jbe
lret
rcrb
dec
pop
mov
jns
cmpsb
inc
pop
push
mov
popf
lret
add
inc
sub
pop
push
enter
and
aad
lret
mov
roll
pop
push
enter
sub
cwtl
jmp
push
xchg
pop
loopne
mov
xor
mov
lcall
xchg
mov
or
loopne
sub
aaa
push
into
cmpl
mov
push
pop
push
push
pop
loop
mov
mov
fmul
cmp
sbb
sub
les
pop
jae
inc
mov
loope
into
leave
movsb
xcrypt-cbc
cmpsl
push
adc
add
jecxz
or
push
aaa
cli
loop
mov
shlb
cmp
jl
adc
iret
loop
icebp
mov
shll
out
xor
mov
pop
jp
mov
push
xor
xor
fmuls
inc
fmul
add
rorb
negl
push
int
popa
jae
ss
fdivr
das
mov
cmp
fisubl
adc
lea
mov
inc
test
jns
mov
cmc
mov
jp
out
sahf
or
xor
data16
lcall
ja
jp
arpl
sub
rcll
inc
push
mov
shrl
lcall
repnz
fs
mov
rcr
cmp
movsl
gs
sub
testl
loopne
xor
and
popf
pop
repnz
imul
enter
pop
add
sbb
lcall
stos
movl
shrb
push
fisubs
ljmp
jg
jb
hlt
ficoml
mov
sub
xchg
push
mov
sbb
xor
sbb
lods
lods
dec
out
add
andl
and
ja
enter
dec
cmp
sub
je
cmp
dec
sub
push
mov
test
xchg
cmpsb
lods
pop
shlb
movsb
movsl
mov
sbb
inc
sbb
shrl
dec
scas
pop
dec
adc
add
lret
mov
popf
jae
push
sbb
ljmp
std
sahf
mov
sbb
lcall
data16
lcall
insb
mov
imul
decb
ss
sti
push
cmpsl
jg
loope
xchg
cmp
dec
stc
pop
jl
mov
sub
insb
jmp
icebp
sti
imul
mov
cmp
cld
arpl
cmpsl
jp
sub
shrb
in
mov
or
jp
adc
rcrl
into
int
pop
loopne
rcll
jne
push
inc
cmpsl
ficompl
data16
in
push
int
jp
push
fldenv
in
mov
pop
shll
test
or
fisubs
mov
std
sbb
cwtl
out
hlt
ret
addb
ret
fstp
neg
add
loop
repnz
lock
push
xor
xor
repnz
mov
dec
inc
jb
push
mov
push
cwtl
and
fdivrp
mov
js
adc
add
cmp
mov
sarb
dec
adc
jp
push
mov
data16
movsb
out
inc
daa
ficomps
dec
inc
into
mov
xlat
insb
std
sti
inc
jl
out
mov
stc
dec
loop
shl
dec
pop
int
push
mov
cmp
lret
mov
dec
cmp
xor
aam
in
cmp
cwtl
int3
xchg
mov
or
mov
adc
jno
stc
inc
xor
inc
jb
data16
inc
xor
xor
jge
xchg
rorb
aam
push
rcr
sub
into
jecxz
mov
sahf
nop
add
pop
loop
testb
cmp
xchg
rcrl
std
add
add
add
fcoms
push
mov
add
subb
cmpsl
inc
hlt
pop
sbbl
pop
xchg
outsb
out
lret
insl
in
xlat
and
jge
inc
xor
call
clc
sbb
inc
loop
rorb
dec
dec
aas
cli
jle
mov
inc
mov
add
sarl
sarb
jg
jne
dec
jnp
pop
lcall
xchg
dec
jne
adcb
repz
cmp
jb
dec
dec
out
dec
scas
lea
rcl
lcall
leave
cmpsb
dec
andl
ret
jb
pop
inc
sbb
push
and
lods
xchg
in
int
pop
or
rclb
or
insb
cmpsl
jns
xchg
push
mov
and
aam
incb
cltd
lods
dec
cmpsb
lds
int3
add
int3
repnz
add
lcall
or
add
rol
mov
mov
popa
xor
pop
push
aas
ljmp
inc
mov
fldl
into
cli
xchg
mov
pushf
lahf
lds
inc
mov
jb
inc
out
data16
loop
pop
pop
and
pop
mov
mov
stos
lods
add
loope
icebp
lahf
or
shll
js
lea
repz
iret
insb
inc
out
jmp
shlb
shll
push
push
shlb
insb
es
shll
repnz
jns
push
dec
cmpsl
pop
data16
add
pop
sbb
inc
repnz
pop
mov
mov
xchg
icebp
add
push
cmp
imul
cmc
or
sub
cmp
stos
loop
aam
loopne
lret
hlt
and
pop
pop
xor
cmp
call
aaa
push
rorl
popf
jne
scas
mov
and
lahf
add
jb
adc
add
add
jae
jp
sbb
mov
mov
pop
pushf
xorl
lea
loopne
inc
stc
pop
out
subl
xor
rorb
jae
jbe
fwait
jmp
mov
std
sub
mov
into
shlb
mov
lods
sbb
mov
bound
mov
into
pusha
xor
cmp
pop
inc
sbb
push
call
xchg
mov
loop
jnp
rcl
mov
movsl
xchg
xor
arpl
xchg
enter
inc
jmp
jnp
gs
shlb
or
gs
pop
loope
push
loopne
mov
pop
ss
xlat
mull
add
popa
jae
dec
or
mov
jg
adc
movsl
ficomps
mov
data16
loope
jae
je
adc
sub
xlat
test
jbe
sbb
jnp
testl
add
push
je
or
data16
test
aas
add
push
inc
js
mov
add
movsl
or
pop
dec
sbb
dec
mov
mov
test
cmpsb
push
mov
inc
dec
and
filds
int
fdiv
lock
rol
in
sbb
xor
cmpsb
aas
fldpi
into
popf
imul
loop
add
shlb
ret
jnp
scas
cmc
fisubs
loopne
fcmovnbe
lret
fbld
pop
adc
pop
mov
loopne
sub
or
fisttps
push
lret
movb
inc
aad
or
mov
inc
cmp
push
push
int
pushf
movsb
pop
adc
ret
pusha
fidivrs
frstor
popf
lret
jo
dec
ljmp
or
jnp
mov
sub
adc
add
pusha
cmp
dec
cmpsl
sbb
xor
insl
fildll
xor
and
imull
sbb
cmc
aam
pop
insb
add
xchg
clc
int
mov
shll
cltd
shrl
fsubr
nop
std
sub
xor
movsl
lds
mov
mov
packuswb
popf
mov
test
stos
push
push
nop
cli
jmp
add
and
sbb
adc
popa
rolb
and
inc
sub
and
xor
psllq
imul
cmpsl
bnd
dec
jns
inc
test
mov
outsb
rolb
inc
push
fisttps
push
gs
in
cmp
iret
jle
loop
aaa
repz
mov
roll
notb
out
inc
cmc
push
ret
mov
mov
sar
mov
xorb
sub
push
adc
rcrl
enter
shll
fwait
out
orb
mov
cmc
pusha
or
ret
adc
aas
int3
cmc
icebp
push
fisubs
add
mov
aaa
aam
mov
sub
rorb
pop
inc
ficoms
mov
push
sbb
and
into
mov
ljmp
pop
call
pushf
jae
dec
jne
popf
mov
adc
inc
jns
mov
cs
sub
test
fisubrs
dec
ficoms
push
fidivs
sbb
sarl
rclb
dec
lret
aas
mov
sbb
sub
or
pop
repz
fs
fdivp
dec
out
pusha
ror
xor
and
adc
fstpl
das
sub
mulb
pop
inc
cmpsb
mov
dec
pushf
daa
ficoml
stos
mov
or
sub
test
push
pop
fildll
push
int3
push
mov
push
push
mov
push
and
add
sbbl
pop
sti
cmpsb
and
mov
popa
loopne
mov
sbb
pop
fdivrs
aad
fwait
push
je
xchg
cmp
lea
lahf
dec
inc
xor
mov
mov
sbb
fdivrp
negl
pop
mov
gs
mov
push
call
mov
sarb
ds
mov
into
or
sahf
pop
push
loop
add
jb
decb
fabs
pushf
jb
fdivrp
jns
aas
pop
jbe
aas
test
andb
bound
add
movsb
repnz
push
test
stc
inc
dec
adc
sub
movsb
in
pop
je
int
ljmp
cltd
jmp
adc
xlat
jp
mov
mov
les
adc
mov
inc
dec
outsl
dec
xchg
movl
lods
jb
pop
xor
add
and
or
add
xchg
xchg
int
inc
jmp
shll
sbb
jo
cmp
and
lds
jge
sti
mov
imull
jae
jno
adc
sahf
or
mov
out
incb
inc
sbb
pop
icebp
mov
popf
data16
lcall
pusha
into
mov
ficomps
cmp
dec
adc
fs
inc
decb
hlt
mov
or
pop
sub
pushf
clc
aas
push
or
orb
insb
lea
div
xor
iret
adc
push
arpl
leave
aad
mov
lcall
push
cli
or
jg
cmpsb
and
test
insl
dec
fisubl
cmp
fwait
mov
test
fsts
leave
mov
mov
lret
mov
fdivp
cmp
cmpsb
inc
stc
movsb
sarb
add
mov
adc
dec
incl
pop
or
out
aam
sbb
and
mov
cli
sub
mov
inc
in
xchg
jl
add
js
push
push
insl
add
fimuls
pop
das
fdivs
mov
aam
sub
xor
arpl
dec
into
pusha
and
leave
popa
insb
jp
mov
inc
add
repnz
es
lcall
in
mov
fwait
sub
mov
in
mov
mov
gs
adc
decb
mov
ds
sbb
loop
fildll
flds
sub
fwait
aad
andl
xor
or
inc
pop
xchg
jb
mov
cld
pop
push
sub
leave
cli
ja
cmp
add
lock
xchg
fidivrs
cmpb
vpsrlq
test
movsb
ja
cmpsb
orb
mov
and
or
ljmp
dec
test
mov
dec
fsubp
lret
adc
xor
pop
push
mov
sub
fwait
pop
sub
mov
ficoms
jno
fisubrl
gs
and
add
sahf
icebp
inc
mov
cmc
rcrl
jno
addr16
jmp
jo
jo
sbbl
mov
cmp
inc
flds
pop
jge
loopne
mov
hlt
bound
cmp
mov
add
xor
push
mov
xchg
jle
add
sbbl
xchg
gs
cmpsl
xor
or
incb
repz
subl
in
xchg
sub
aam
shrb
rolb
jb
sbb
mulb
sarb
in
mov
push
cmp
sub
add
or
pop
aas
adc
dec
mov
dec
cmp
test
out
jecxz
push
lahf
loope
dec
subb
outsb
lret
push
insb
popf
and
and
ljmp
jge
mov
fsub
xchg
in
data16
pop
lds
into
stc
xor
fisubrs
ljmp
aaa
loope
or
movsl
rclb
data16
pop
lods
or
pop
repz
xor
sub
cltd
xor
mov
xchg
loop,pn
mov
idiv
jno
mov
insl
push
inc
icebp
cmpsl
jmp
jmp
out
int
loopne
push
cmp
sbb
pop
andl
loopne
pop
mov
lret
cmpsl
outsb
call
rolb
mov
divb
iret
inc
int
xchg
fldenv
and
xchg
icebp
push
cmpsl
pop
mov
pop
les
cmpl
rorl
xchg
pop
iret
lds
out
arpl
icebp
add
sbb
inc
dec
faddl
mov
xor
and
sub
into
jl
fstps
and
jo
push
and
dec
cmp
fxch
movsb
inc
leave
fldz
add
andb
fnstsw
xor
cwtl
sub
xlat
lock
inc
int3
data16
mov
lret
push
fisttpll
cs
push
and
cwtl
int
xor
adc
dec
dec
test
lret
popa
jmp
sub
or
jle
test
jmp
jb
push
ljmp
andb
repz
mov
jbe,pt
mov
xchg
leave
rcrb
or
adc
shll
sarl
and
lea
iret
add
test
jmp
push
and
jo
insl
mov
xor
repz
test
jmp
sub
xor
or
enter
dec
icebp
adc
pop
insl
aaa
xchg
adc
ret
mov
push
mov
pop
add
xlat
cmp
pusha
and
pop
push
fisubrl
lret
lock
mov
mov
jns
shll
mov
lret
dec
hlt
xor
icebp
lret
push
push
inc
or
lds
lret
test
add
cwtl
lret
int3
insl
mov
mov
pusha
arpl
lret
push
shll
dec
enter
add
popa
hlt
test
lods
sbb
icebp
out
cwtl
int
add
xor
mov
rcl
dec
clc
pop
sahf
push
sub
add
xchg
iret
aaa
scas
icebp
xlat
push
cld
jle
pop
push
push
lret
dec
cmp
popf
mov
pop
pop
add
push
fstpl
and
in
jbe
dec
into
push
xor
mov
rol
inc
sahf
dec
setns
add
ret
mov
jne
in
inc
lahf
out
faddl
and
add
inc
ljmp
and
inc
and
lods
test
inc
sub
popa
std
rcrb
xchg
mov
mov
and
add
pop
in
aas
pop
xchg
sub
in
inc
and
xchg
push
std
add
inc
pop
fildll
push
lcall
enter
leave
dec
nop
lahf
lds
sbb
sub
jge
cmp
dec
and
pop
inc
int
ret
mov
dec
or
lret
lock
test
fnsave
fiaddl
pusha
add
loop
xchg
mov
loopne
lds
xor
xor
mov
ficompl
or
xor
shl
xor
jl
xor
cmc
ficompl
mov
enter
push
lock
cmp
jns
xchg
stos
nop
mov
int
xor
cmp
sti
cwtl
stos
push
into
xchg
sub
push
and
push
insb
ljmp
test
int
js
xchg
sub
push
mov
lret
ficomps
fisubl
dec
enter
aad
or
mov
fsubl
cwtl
loop
leave
push
sahf
and
add
pop
jbe
mov
stc
inc
loop
lahf
leave
sahf
and
inc
add
xchg
or
inc
outsl
xchg
fdivl
inc
xchg
ficompl
push
pop
stc
add
je
mov
push
inc
fisubrl
dec
mov
dec
inc
test
popa
stos
movsb
inc
imul
lock
inc
adc
cmp
cmc
inc
jns
arpl
push
pop
imul
jmp
rcll
add
xor
fwait
loop
rcll
ret
cmpsb
in
mov
lock
lcall
in
daa
ja
xor
jmp
lret
test
jmp
fdivrs
xor
ficompl
or
inc
mov
insl
adc
mov
push
mov
sub
pop
pop
lcall
mov
or
mov
add
push
push
mov
mov
push
shrl
int
jno
cwtl
shll
fwait
mov
dec
mov
cmp
insl
loop
bound
mov
call
adc
shlb
add
lods
mov
dec
nop
in
iret
insb
dec
pop
xchg
push
dec
or
stc
nop
push
mov
xor
mov
mul
shlb
lret
js
push
inc
and
std
pop
dec
cwtl
xor
xor
fcompl
push
and
movsb
stc
adcl
out
xor
sub
pop
adc
xchg
push
popf
lcall
ret
mov
daa
shll
ss
and
loop
xlat
mov
xor
mov
dec
sbb
dec
and
test
xor
nop
inc
inc
push
enter
movl
and
add
lock
mov
cmp
fidivl
frstor
inc
sbb
ret
lcall
adc
dec
rorb
jle
dec
xchg
ljmp
mov
dec
shll
dec
dec
inc
mov
clc
xchg
and
jmp
add
cltd
lods
stc
push
push
sub
and
iret
add
arpl
dec
loop
test
scas
fiaddl
jne
inc
leave
jge
mov
bound
enter
in
out
nop
jmp
add
or
and
mov
push
pop
decl
mov
or
lds
sbb
imul
hlt
adc
xchg
jns
mov
push
fisubs
push
jbe
std
loopne
ds
xlat
popa
add
addb
outsl
mov
int
jb
sub
neg
ret
sbb
or
jg
out
or
mov
mov
in
mov
aam
fcmovbe
outsb
push
movb
lret
fidivrl
inc
jl
pop
inc
pop
out
pop
mov
icebp
popf
leave
hlt
sbb
adc
movsb
mov
jg
aad
lret
mov
test
fucomip
inc
pop
aaa
pushf
ret
xchg
dec
pusha
jmp
cmp
gs
hlt
stos
sbb
gs
fiaddl
jne
xchg
mov
loop
hlt
inc
sbb
ss
add
test
xchg
jo
notb
add
loop
jnp
mov
dec
and
xchg
lret
ret
and
mov
jno
hlt
and
inc
lahf
in
psrad
sbb
xchg
mov
das
jmp
add
add
push
imul
or
dec
mov
test
jmp
add
push
sub
add
fimull
test
jl
in
lods
popa
lock
jae
pop
mov
lret
dec
jno
mov
lret
mov
and
cmp
push
fmull
push
rclb
adc
xchg
pop
arpl
and
pop
cld
idivl
pop
mov
inc
scas
js
mov
push
and
popa
leave
out
pop
loop
inc
or
mov
jb
push
pop
fisubrl
inc
push
lcall
aam
fs
xlat
mov
pop
imul
and
stos
dec
xor
shr
xor
mov
push
pop
cmpb
popf
dec
xchg
sub
push
ss
jbe
add
popa
or
test
jp
xchg
sbb
das
add
iret
insl
mov
add
sti
pop
sbb
lcall
and
popf
inc
sarl
sti
fidivl
shll
inc
fisttpll
xchg
je
and
scas
mov
dec
xchg
cmc
mov
inc
movsl
pop
mull
pusha
ret
std
xchg
adcl
cld
xchg
leave
lcall
mov
pusha
and
ss
and
lock
bound
fldpi
popf
cltd
add
pop
or
je
adc
cs
clc
xor
or
push
sub
push
dec
and
and
lret
movsb
icebp
lods
dec
sub
jns
push
push
add
in
adc
test
pop
sbb
mov
xlat
orl
push
mov
mov
out
pop
inc
test
jle
push
jno
bound
mov
fdivrs
adc
adc
or
fmull
jb
mov
adc
repnz
dec
add
sahf
shrl
push
popa
and
mov
in
sbb
inc
lock
ss
adc
stc
cmp
adc
je
arpl
cmp
xlat
hlt
sahf
push
mov
cmpsb
lret
or
sub
mov
ror
aam
push
lcall
push
ficoml
pop
lret
add
mov
lret
bound
inc
lret
mov
aam
inc
dec
cmp
rol
mov
shll
popf
inc
into
mov
repz
fidivrl
jge
dec
aas
fdivrl
sbb
jl
int
pop
inc
aad
mov
sub
push
mov
call
lds
aam
fisttpll
mov
mov
ret
test
inc
jecxz
jae
fcmovb
jbe
popa
push
mov
push
jno
gs
mull
and
fisubrl
cmp
popa
flds
pop
bound
push
cmpsl
adc
inc
cmc
shl
out
subl
xchg
jno
fildl
sub
pop
sub
mov
inc
dec
in
cmc
jg
lcall
shrb
mov
inc
lods
sbb
inc
lods
in
fistpll
jmp
test
and
loop
hlt
or
fsubrs
dec
mov
mulb
fimuls
push
fstpl
popl
or
xorl
add
repz
lock
test
les
mov
mov
bound
mov
mov
xor
aaa
dec
mov
mov
repnz
mov
orb
lock
add
movsl
and
mov
dec
sbb
cmp
xor
cmc
std
cli
pop
cs
nop
cmp
mov
sbb
cmp
sahf
dec
aaa
add
jnp
and
out
lods
icebp
push
jl
ja
inc
rcrb
out
pop
xchg
pop
mov
cld
rcll
sub
dec
mov
pop
mov
std
leave
out
fcoml
in
repz
xchg
iret
push
pop
lock
loop
aam
cmp
sub
xchg
incl
es
add
dec
mov
lret
cli
lcall
mov
push
inc
and
aas
hlt
test
or
scas
xchg
addr16
mov
adc
jecxz
popa
sahf
adc
out
popa
add
pop
mov
int3
mov
jmp
out
adc
add
scas
jb
outsb
xchg
pop
ds
inc
bound
mov
xor
jge
dec
pop
out
dec
movsb
mov
sub
adc
pop
cwtl
shl
jo
cld
lcall
sub
mov
lret
and
inc
bound
sub
repnz
push
and
pop
mov
test
cmp
loopne
mov
scas
icebp
mov
sahf
icebp
and
mov
mov
orl
mov
or
add
aas
xor
addl
fstps
jb
cld
sti
sbb
inc
dec
jns
xchg
inc
pop
sbb
lds
inc
test
hlt
jp
inc
sub
lret
xchg
fdivl
dec
dec
sbb
mov
jmp
cli
int
icebp
mov
push
or
pop
push
push
arpl
insb
out
pop
rcr
test
fcoms
xchg
sub
hlt
add
into
jbe
mov
mov
shll
add
cld
pop
or
mov
push
dec
inc
push
iret
iret
xor
dec
cmp
mov
stc
lock
shlb
test
push
mov
add
inc
and
inc
xor
std
mov
dec
lock
fstp
lret
out
mov
in
mov
sub
dec
lret
mov
mov
test
dec
stc
push
fdivl
push
or
or
adc
mov
or
int
or
pop
lea
inc
mov
fmull
pushf
mov
dec
push
popa
cld
test
mov
add
in
out
mov
jmp
pop
sar
aam
in
inc
sarl
shll
dec
in
fiaddl
cmp
loope
inc
xchg
sbb
add
or
movl
mov
sti
scas
je
xor
inc
aad
mov
xor
ret
int
or
fdivrs
in
inc
add
xlat
add
roll
jmp
aaa
popa
fmulp
test
movl
cmp
in
and
and
mov
mov
xlat
push
mov
lret
lret
adcb
add
add
bound
cmp
cwtl
test
rorl
rol
dec
les
add
ds
xchg
dec
mov
lds
mov
and
shl
jns
and
jg
lret
loop
out
das
clc
xor
ret
mov
fcoml
mov
inc
stos
inc
leave
add
mov
push
jl
aam
inc
push
push
shll
or
stc
cld
push
xor
pop
xor
and
pop
cltd
xorb
arpl
aad
inc
inc
cmc
hlt
xchg
push
lcall
adc
in
fyl2xp1
sub
jb
ss
movsb
adc
xchg
lret
sub
dec
das
hlt
inc
mov
cs
mov
mov
shl
outsl
push
fsubrl
mov
mov
mov
popa
cmpsl
add
mov
add
adc
jmp
xlat
outsb
dec
fwait
repnz
lods
lret
fs
mov
test
hlt
inc
orb
dec
les
or
fst
les
aaa
cld
and
add
pop
movsl
std
test
adc
ffree
es
testl
fidivl
inc
mov
adcl
pop
bound
push
fadd
inc
pop
loop
dec
int3
stos
xchg
cld
loopne
xor
cmpsb
rol
add
xorb
inc
lret
popa
inc
lahf
xor
pop
and
sub
jg
mov
fdivrl
aad
dec
push
sbb
mov
ss
addb
sahf
sub
pushf
or
rol
lock
ror
xor
fdivl
mov
xchg
repnz
xor
movsb
xchg
test
or
dec
test
aad
mov
ds
std
cmp
mov
into
mov
adc
mov
xchg
roll
imul
mov
mov
adc
aam
popf
inc
pop
or
bound
gs
push
iret
shrd
push
pop
xor
shll
add
pop
shl
aaa
mov
mov
add
sbb
or
sub
push
out
push
rcll
icebp
mov
outsl
adc
in
ljmp
icebp
out
jo
mov
mov
movsb
fsubrp
inc
cmpb
in
xorb
pop
gs
aaa
fadd
les
push
xchg
data16
call
faddl
mov
mov
lret
and
pop
sub
shll
sysret
sub
loop
push
call
mov
add
add
mov
into
push
stc
jmp
adcb
pop
gs
and
jb
aam
push
mov
push
xchg
push
and
pop
pop
mov
loop
sbb
and
push
add
loope
and
add
aad
jmp
jmp
add
xor
loopne
lret
clc
sahf
subb
jno
rcrl
and
test
cmp
roll
xchg
test
mov
push
sub
dec
hlt
add
mov
mov
pop
cmp
xchg
push
fmull
mov
in
sbb
lods
mov
fstpl
sbb
inc
stc
inc
inc
ljmp
xchg
mov
cmp
stc
inc
repz
xchg
push
cmc
jmp
imul
hlt
and
test
aas
fbld
in
push
js
aaa
roll
xchg
push
lret
rcrl
pushf
mov
rcrl
lds
sbbl
imul
push
inc
add
scas
mov
xchg
in
or
mov
cmp
mov
cmc
shll
adc
or
add
arpl
add
mov
cmp
fwait
mov
outsl
cmp
das
icebp
dec
in
leave
lcall
lret
dec
rol
mov
aam
adc
stc
add
mov
jmp
add
imul
sub
stc
popa
push
ljmp
std
mov
int
ror
xor
cli
xchg
mov
dec
mov
mov
int3
leave
lds
adc
inc
push
test
in
das
ljmp
xchg
mov
add
pop
iret
inc
mov
dec
xchg
dec
ret
xor
aas
icebp
leave
inc
adc
or
out
cs
inc
xorl
loopne
lds
sub
fstpl
pop
rcrl
mov
xlat
fisubl
jmp
pushl
mov
jo
test
fisttpll
xchg
inc
icebp
jbe
out
push
std
fcoml
pop
or
xchg
mov
enter
lcall
in
mov
in
mov
mov
ficomps
in
imul
aas
xor
pop
add
add
test
nop
xchg
shlb
or
inc
les
popf
int3
push
cmp
fdivs
js
xor
rcll
mov
mov
and
sbb
cli
add
enter
lret
adc
aad
ror
enter
push
xor
jbe
xchg
push
test
inc
mov
sbb
add
mov
iret
mov
xorb
sub
or
stos
addb
enter
sub
and
inc
lret
lods
mov
mov
xor
push
sbb
sbb
stc
pop
push
jge
aam
push
ret
test
je
sbb
inc
dec
call
add
inc
add
add
loop
mov
movl
bound
lcall
dec
add
cmp
add
test
out
mov
or
cmpb
add
inc
mov
pop
test
and
jmp
sub
orl
daa
push
mov
jg
jne
loopne
imul
incb
dec
scas
pop
inc
push
mov
loopne
fsubl
dec
pusha
aas
popf
mov
xchg
push
rol
adc
lret
pop
inc
data16
aam
push
fildl
mov
pop
dec
fists
scas
movsb
sarl
repz
xor
loopne
inc
cltd
call
sti
mov
imul
lret
popf
or
mov
or
aam
in
jne
adc
push
jmp
andl
test
mov
jns
sub
push
push
inc
dec
mov
fs
lret
fisubs
outsl
mov
inc
std
adc
frstor
push
inc
stc
es
add
cli
pop
dec
xor
pop
jecxz
sub
sarl
sar
cmc
rclb
or
cmp
jb
push
add
int
add
js
lcall
jne
push
pop
sub
inc
cmp
fwait
xor
dec
sub
mov
stc
mov
shr
pop
xchg
leave
std
add
xchg
imul
or
xchg
jns
cmpsb
or
std
pop
int
inc
or
dec
push
pop
xchg
cmpsl
dec
pop
jnp
cld
lds
popa
sub
fldz
inc
les
lret
cmpsl
lret
add
lret
cli
icebp
hlt
pop
fimuls
mov
test
pop
push
or
lcall
out
hlt
inc
aam
lock
add
lods
and
inc
dec
loopne
faddl
movups
popa
mov
inc
add
faddl
add
fldenv
xor
call
pop
mov
dec
adc
aaa
xchg
sub
inc
add
pop
cli
sub
push
jns
add
pop
mov
add
int3
sub
sti
jp
mov
das
lahf
icebp
in
cli
int
or
pushf
cltd
mov
inc
or
shrl
mov
inc
cmp
adc
mov
fnsave
fldenv
hlt
stc
add
jecxz
add
add
adc
sub
jne
rolb
dec
pop
fistps
push
dec
fadds
add
inc
dec
jo
insl
inc
dec
cmp
push
cmpsb
ds
aas
das
xor
icebp
scas
pop
and
inc
or
ja
inc
dec
aad
sahf
add
dec
stc
or
stc
sub
sub
lcall
test
arpl
loope
clc
jbe
std
jge
hlt
or
dec
xchg
and
in
mov
ficoml
add
mov
in
stc
pop
and
div
mov
data16
jb
sub
mov
push
mov
fsubrs
mov
or
jmp
dec
mov
popf
lods
cli
pop
sub
xor
push
xor
in
and
push
jne
cmp
pop
jns
jae
aad
inc
enter
shl
fidivrs
stos
pop
add
out
adc
mov
push
ret
cwtl
out
pop
inc
test
test
sub
add
lret
ret
pushf
lret
aam
hlt
dec
loope
lock
lods
xor
clc
loop
fs
lds
mov
shrl
fcomp
insb
aaa
shr
rcrb
movsl
lods
dec
or
pop
ss
inc
inc
sbb
stc
sub
jne
sarl
sbb
jle
jne
cwtl
and
mov
jmp
cmc
ja
sbbb
daa
movsb
mov
test
out
pop
shlb
pop
jg
dec
fisubrl
dec
mov
nop
mov
pop
aad
jecxz
ja
cmp
inc
lea
fadd
mov
int3
inc
lret
cmpsb
lds
loope
add
add
xor
xor
push
sub
outsl
arpl
loope
ret
or
lock
fs
inc
add
mov
loope
popf
mov
xor
ret
sbbl
stc
cwtl
push
ljmp
das
inc
jae
jge
orb
ficomps
inc
xor
or
cwtl
pop
jns
in
mov
xchg
add
rorl
or
sbb
xchg
push
xor
xchg
cmp
lret
lret
scas
movsl
mov
and
in
cmpsl
add
xchg
mov
pop
mov
dec
jecxz
outsb
inc
rcll
add
pop
dec
inc
push
and
inc
hlt
sub
xor
sbb
jmp
pop
clc
xor
pop
mov
ror
xor
lret
push
push
mov
jns
jmp
pop
inc
notb
sbb
dec
add
push
pand
fiaddl
aam
dec
jae
xor
sbb
push
pop
pusha
sub
fldl
add
addr16
and
add
or
add
cwtl
add
sti
xor
jl
ss
sti
mov
mov
std
out
fstl
cmp
aad
mov
xchg
out
aam
mov
jb
mov
outsb
roll
and
add
ret
loop
cltd
out
jo
loop
and
sahf
into
scas
add
mov
in
cld
ret
lea
enter
sub
mov
mov
or
mov
dec
add
ss
xchg
ret
or
mov
dec
loopne
fdivrl
mov
adc
inc
in
cwtl
test
or
cmp
xor
fldcw
ror
push
pusha
jmp
movsl
loope
jno
xor
test
and
sbb
xor
loope
sub
movsb
outsl
int
stos
loope
push
jp
movsl
test
aam
data16
std
shl
ds
jnp
add
sbb
inc
lcall
insb
adc
pop
movsb
rclb
and
iret
sbbb
cmpsl
inc
mov
loopne
loope
int3
cmovnp
jo
sub
mov
jl
dec
enter
xor
push
ret
jbe
stc
cmpsb
cmp
adc
out
adc
lock
loop
imulb
sbb
loope
subb
loope
or
mov
push
mov
jno
call
or
sarl
ljmp
lret
fxam
adc
sti
loope
add
mov
ja
loope
int
out
out
pop
push
loope
jp
gs
pusha
aad
sbbl
jo
leave
pop
jle
repnz
stos
out
pop
mov
fcomps
into
jmp
lock
sbb
enter
aam
fstpt
mov
shl
das
ss
in
outsl
mov
loope
sub
mov
xor
push
push
sbb
in
pop
pushf
loope
and
mov
test
push
mov
or
jne
outsl
jnp
xlat
add
and
lods
out
fimuls
cmp
int
pop
mov
add
jp
mov
jmp
rep
add
loope
dec
mov
mov
and
jecxz
scas
loope
xchg
add
js,pn
loope
push
loopne
mov
int3
dec
push
seta
subl
movsb
loope
adc
add
pop
mov
lock
xchg
push
sub
xor
jns
mov
cs
or
dec
cmp
or
out
les
aaa
decb
icebp
sbb
loope
xor
das
jno
fs
add
cmp
jl
fld
mov
aad
or
rcl
xor
and
add
fmull
push
mov
sub
sahf
push
ja
mov
loope
loopne
xchg
adc
xchg
in
cmpsb
xchg
and
lds
cmc
mov
xchg
sub
ja
jo
sbb
push
cmp
divl
dec
int
das
sahf
pop
push
dec
pushf
ja
mov
popl
lds
jnp
sub
lret
js
push
ret
addl
pop
shll
sbbb
sahf
xchg
xchg
ljmp
dec
ret
out
repnz
mov
test
rcrb
loopne
loope
in
add
loope
jns
sub
pop
dec
lret
inc
xchg
pop
leave
rcr
bound
lahf
ret
jns
jo
loope
inc
in
pop
lock
loope
push
sbbb
xchg
cld
sub
xor
mov
loope
cmp
and
inc
add
loope
jp
ficompl
or
pop
shll
mov
xchg
and
ja
shrl
push
pop
gs
in
or
pop
mov
loope
jne
jmp
xor
movsl
sub
pop
pop
fcmove
loop
addl
ffree
jp
iret
cmp
ss
movsb
dec
test
into
cmpsl
or
loope
pop
add
jno
andl
mov
popa
clc
test
mov
jmp
push
adc
sbb
sub
and
push
bound
shr
adc
test
lret
dec
push
jno
test
add
fsts
cmp
mov
mov
inc
insb
mov
sub
andl
stos
mov
int3
ret
paddsw
mov
dec
aad
leave
xchg
and
sbb
push
cwtl
leave
dec
into
or
dec
mov
fmuls
xchg
sub
dec
sub
cmpsl
enter
stos
mov
push
mov
push
sbb
mov
enter
or
sarl
jae
insb
loope
jmp
fiaddl
dec
cmpsl
xor
arpl
fdivr
movsl
loope
cmp
mov
push
mov
pop
jns
stos
inc
aam
add
mov
jg
mov
add
and
mov
pop
and
repnz
xchg
pop
loop
jne
mov
mov
jb
jp
push
insl
xor
inc
mov
jl
lret
dec
jge
and
cmp
out
mov
sub
xchg
loope
call
xlat
lcall
shl
scas
inc
sub
rcll
dec
out
sti
push
add
or
test
shrb
jge
loope
push
mov
and
loope
xchg
mov
loope
icebp
pop
mov
test
lret
fnstenv
inc
loope
pop
roll
pop
stos
test
data16
mov
add
pop
stc
ret
or
mov
pop
call
fisttpl
mov
scas
add
pop
mov
hlt
test
or
gs
ret
shlb
test
scas
inc
inc
pop
mov
les
dec
and
xor
loope
inc
and
loope
pop
inc
dec
nop
or
mov
cmp
xchg
lods
loope
and
xor
or
add
sbb
int
sub
or
sub
in
adc
sbb
loope
cmc
js
inc
cmp
adc
jle
addl
int
dec
loope
lds
push
loope
or
repz
aam
jle
in
inc
pop
add
mov
aas
setg
jb
or
sbb
loope
arpl
xchg
xor
lods
lods
add
mov
adc
pop
mov
fs
aaa
in
arpl
cwtl
ret
and
xchg
lds
add
add
mov
js
jae
add
out
cmp
add
xchg
sub
adc
ss
cld
push
sti
add
fsub
jg
pusha
test
pop
js
xor
loope
out
in
imul
insl
stos
loope
sbb
pop
xchg
lahf
frstor
lds
outsl
test
pop
push
dec
mov
push
push
pop
cwtl
popf
add
int
in
in
xchg
pusha
mov
mov
and
cwtl
sti
adc
insb
cmpsl
or
push
test
lock
mov
loope
sti
fs
dec
push
dec
loope
aas
repnz
push
popf
nop
xchg
cmp
jmp
mov
xorl
scas
jge
cmp
pushf
repnz
pop
loopne
loope
dec
mov
and
and
aad
hlt
imul
inc
fisttpl
mov
out
dec
jnp
add
sbb
das
pusha
loope
sbb
les
inc
xchg
sahf
push
loope
popf
dec
push
nop
aad
repz
and
jle
cli
fidivrs
in
and
mov
out
push
int3
rcrl
mov
out
jle
repnz
or
aaa
push
outsl
ds
sti
pushf
and
movsb
fsts
adc
mov
pusha
enter
aam
and
dec
jae
rcr
cwtl
int
roll
pop
in
push
inc
or
cwtl
and
pop
roll
pop
push
test
sahf
dec
inc
cli
jge
jmp
loope
in
inc
les
stc
loope
cmpsl
mov
xor
mov
fwait
and
orb
cmp
cli
mov
imul
mov
add
push
xor
dec
push
add
sbb
xlat
pop
aad
loope
js
dec
mov
fs
pushf
orb
lret
movsl
loope
jno
test
loope
aaa
pushf
or
lea
xor
test
pusha
cltd
fxch
xlat
dec
jbe
loope
das
out
and
xchg
loope
xor
cmpsb
loope
pop
outsl
lock
add
loope
xchg
sub
loope
enter
out
push
and
and
repnz
xor
jle
dec
jae
loope
outsl
xor
dec
orl
in
adc
push
add
mov
xor
dec
loope
dec
nop
pop
jo
inc
pop
pop
and
mov
mov
or
or
dec
test
ja
mov
add
das
xchg
and
mov
enter
mov
inc
sbb
sub
fidivl
inc
enter
mov
ja
mov
jmp
loopne
inc
loope
inc
in
add
mov
sub
loope
sbb
sub
dec
les
push
lret
lcall
roll
imul
movsl
ds
loope
xchg
in
and
pop
arpl
shl
js
in
pushf
sub
flds
adc
and
push
pop
jmp
mov
movsl
repnz
jae
lcall
mov
loop
in
dec
sahf
add
push
into
shll
hlt
fcomi
dec
mov
jae
mov
loopne
cmp
sub
xchg
jge
dec
jmp
mov
loope
fdivs
test
pop
mov
mov
add
pop
pop
iret
cmp
fnstsw
inc
xor
gs
mov
lcall
mov
rcl
dec
test
out
sbb
loope
or
flds
jp
xor
les
rcrl
movsb
pop
push
dec
scas
test
loope
mov
push
and
cmp
arpl
pop
fbstp
jl
jmp
int
cmpl
push
sbb
and
lock
cs
push
loope
pop
cmp
arpl
loop
movsb
mov
shlb
fildll
icebp
cli
jno
xor
sarl
xor
xor
sub
dec
push
add
scas
int
cmpsl
xchg
mov
addl
clc
mov
pop
mov
sub
fucomp
loopne
ss
fwait
push
cltd
push
mov
fnstcw
dec
adc
pop
test
cmp
popa
fsubl
sub
ja
cwtl
insl
mov
push
frstor
jmp
add
add
mov
fsubrl
loope
mov
popf
mull
xor
sarl
pop
sahf
sbb
jae
les
cmc
adc
in
mov
xchg
mov
loope
xchg
mov
or
xchg
pop
rcrl
mov
loope
dec
pop
cwtl
adc
pop
fabs
aaa
les
test
push
fs
ficomps
inc
aas
and
pop
dec
and
fistpll
sbb
flds
sbb
adc
loope
mov
push
mov
add
iret
and
stc
nop
sub
cmpl
loope
jl
push
popa
dec
loope
push
scas
pop
pop
lods
push
push
adc
mov
int
aaa
bound
in
sub
add
out
mov
fsts
loope
std
add
mov
in
cmpl
cmp
out
pop
test
loope,pt
inc
mov
insl
loope
or
mov
pop
loope
dec
xor
pop
and
push
or
jb
aaa
dec
fnstenv
jg
loope
or
mov
push
loope
jl
mov
sub
fidivrl
data16
idivb
movsl
mov
jo
and
inc
call
imul
mov
fidivl
cmp
cmp
or
jmp
loope
mov
dec
jns
inc
pop
ss
in
aam
dec
mov
cmp
loope
sub
mov
jb
cwtl
sub
adcb
push
mov
inc
jp
push
in
dec
add
andnps
and
aad
into
jg
push
stos
test
insb
add
fmuls
inc
fbld
js
xchg
dec
mov
mov
push
push
rol
or
movsl
aad
mov
fdivp
lds
pop
push
test
mov
ja
in
call
dec
dec
loope
xchg
dec
sbb
or
std
mov
and
rorl
mov
adc
adc
cmpsl
cmp
add
aam
popa
std
loope
in
stc
enter
loope
mov
jmp
loope
cmp
arpl
lcall
xchg
int3
add
sbb
imul
adc
adc
daa
int
push
and
pop
loope
jne
subb
fstpt
test
inc
push
add
pop
xchg
js
mov
std
stos
pop
cmpsb
out
add
dec
mov
mov
leave
aad
jmp
lret
stos
shl
dec
lahf
dec
arpl
fisttpll
and
cmp
mull
iret
cmc
sbb
dec
mov
ror
cli
pop
out
mov
xchg
mov
or
jg
out
mov
add
ret
cmc
loope
dec
and
and
cmpl
ja
push
nop
sub
dec
mov
xchg
loope
ret
std
dec
int
mov
pushf
test
scas
sahf
mov
pop
test
pop
rorb
into
jo
loope
mov
add
xor
inc
ss
fisttpl
fmull
push
pop
ret
in
jns
add
dec
xchg
mov
push
add
leave
popa
mov
std
push
lret
push
dec
shll
shl
push
fxch
and
insl
dec
mov
loope
popa
inc
jmp
insl
popa
loope
test
or
enter
stos
xor
stos
inc
jne
loope
pop
xor
mov
cmpsb
shll
cmpsb
pushf
sbb
sub
inc
addr16
mov
mov
es
fstpl
loope
sahf
sub
loope
mov
fdivr
push
out
subl
cltd
jecxz
andl
and
pushl
mov
addb
cmc
add
mov
and
pop
mov
loope
scas
sub
int
cmpsl
cmp
sbb
jecxz
rcll
and
mov
jmp
rcl
dec
jmp
mov
stc
insb
stos
cmp
cs
je
push
add
mov
idivb
xchg
dec
mov
sbb
jno
data16
cli
pop
and
and
dec
inc
rcr
mov
in
cwtl
mov
sahf
xchg
data16
push
mov
jp
xlat
fwait
into
xorl
test
sarb
int
outsl
xor
dec
jmp
mov
mov
xchg
adc
stos
mov
cmp
jle
pop
cs
xor
insl
cltd
stos
push
fcmovnbe
inc
jl
and
loopne
add
inc
das
add
sub
ja
pushf
aas
dec
cmp
cmpsl
fwait
mov
cmp
sahf
insl
int3
stos
xor
movsl
int
or
lret
cmp
call
and
movsb
lock
xchg
les
xchg
pop
xor
int
fsubs
pusha
pop
sahf
adc
fdivp
aad
push
into
lods
mov
adc
lret
pusha
pop
repz
orl
sub
hlt
or
inc
imul
dec
clc
pop
sbb
xchg
jp
pop
into
enter
sarb
das
notb
sub
pop
mov
jno
int
lret
cmpsl
lds
scas
inc
inc
and
cmc
xchg
dec
or
dec
outsl
insb
lret
dec
mov
out
jo
push
stc
sbb
mov
loop
jbe
mov
pop
xor
inc
jle
jne
add
xor
fs
fmuls
rcl
aam
add
icebp
or
sub
cltd
adc
jns
ror
dec
pop
fidivs
jle
mov
inc
addr16
push
test
mov
std
mov
sbb
pop
mov
mov
jo
sbb
cmp
test
adc
xchg
mov
dec
sub
pop
clc
xchg
sahf
les
cmp
pop
sbb
mov
lds
inc
addr16
enter
and
repnz
adc
into
jnp
adc
add
scas
push
cmpsl
adc
adc
repnz
lds
mov
or
out
jecxz
xchg
test
ds
cwtl
add
sti
sarl
inc
push
stc
xor
dec
or
or
sub
imul
lret
gs
pusha
push
mov
and
leave
push
cmp
sti
bound
xlat
and
test
call
cwtl
xor
and
lds
adc
dec
xchg
shl
sub
mov
push
insl
pop
loop
jno
mov
into
mov
xlat
mov
popf
xlat
or
inc
mov
inc
fidivrs
inc
rcr
mov
sti
sbb
sub
aaa
data16
adc
pop
mov
or
aaa
cmp
int
and
jecxz
or
inc
mov
cmpsl
loope
in
sub
loope
pushf
imul
fidivs
lret
xor
or
and
es
jae
test
mov
shl
mov
cmp
sub
pop
test
lods
and
aam
lds
sbb
cli
jne
inc
bound
push
mov
push
xchg
movsb
das
jno
mov
test
or
rcr
rclb
push
cmp
aam
pusha
cltd
loope
out
das
xor
xchg
ror
out
mov
hlt
cmpsl
dec
cmp
pop
push
mov
scas
rcll
mov
lds
and
fisubrs
add
bound
mov
mov
dec
cli
cmpsl
loope
cmpsl
cwtl
pop
sti
mov
lea
mov
mov
or
movsb
rcr
lahf
rcl
xor
jno
adc
mov
aad
fstpt
push
pusha
mov
aam
cmp
loope
js
std
pop
cmp
loope,pt
in
xchg
adc
cmp
jbe
loop
pop
loope
jae
and
rcll
loope
cli
das
adc
mov
xchg
test
xor
push
ror
loope
pop
cmp
andb
dec
loope
ror
jae
js
sbb
nop
add
lock
loope
jb
push
xchg
in
test
in
pushf
filds
mov
gs
inc
jne
je
dec
push
pop
and
xor
push
sbb
loope
or
cmpsb
or
les
push
imul
call
push
mov
shll
add
cmp
or
add
or
mov
add
lds
stos
cmp
loope
inc
adc
loope
subb
test
mov
das
jecxz
shrl
dec
out
jns
jp
fnstsw
sbb
bound
cmpsb
xchg
add
push
mov
sub
lea
adc
sub
lret
fs
clc
ficoml
mov
jb
popf
mov
push
shr
insl
cmp
mov
cmpsl
cmp
nop
adc
xchg
sub
jne
aam
leave
rorl
push
add
lcall
sbb
shlb
aas
mov
mov
rolb
shl
and
fisttps
xor
push
mov
inc
loope
imul
pop
cmpsl
add
cmpsb
int
addb
daa
fldl
mov
data16
pop
pop
xor
xchg
fwait
loop
iret
sahf
in
xchg
jle
cmp
xchg
sub
inc
dec
add
jg
mov
lds
int
loope
inc
fldl
and
xchg
dec
jno
pop
je
pop
loope
or
aaa
mov
arpl
iret
mov
push
cwtl
push
fisubrs
dec
int3
pop
or
push
pop
and
dec
mov
in
push
andl
fxch
push
jo
lds
loope
jbe
orl
decb
sbb
pushf
out
mov
fdiv
loope
push
andl
mov
dec
pop
and
test
sub
sti
pop
sbb
and
jae
das
mov
jno
mov
xor
lods
mov
mov
loope
add
inc
shl
loope
mov
mov
test
stc
ljmp
loope
mov
loopne
and
test
loope
mov
sub
loope
in
sarl
cmp
loope
push
pop
lods
jne
repz
mov
push
mov
loope
add
leave
rol
jo
subl
clc
fisttpll
sbb
incb
mov
in
aad
notb
push
jg
aaa
jl
jb
or
and
mov
fdivrl
pushf
pop
add
sub
repz
mov
mov
mov
std
inc
cld
sbb
push
loope
loopne
dec
cmpsb
dec
and
ljmp
shll
sbb
into
adc
rorl
inc
subl
rcrl
pop
out
mov
dec
mov
ss
loopne
movsb
mov
in
push
sbb
mov
inc
or
add
sbb
add
out
cs
loope
inc
and
js
mov
or
lret
jg
mov
push
shr
mov
fsts
inc
js
dec
pusha
fists
pop
loope
xor
ja
ret
pop
sub
vpaddusw
les
stos
jo
or
mov
xchg
pop
aam
loopne
loope
mov
adc
das
jne
add
outsl
scas
fsts
loope
jge
add
add
cltd
cwtl
pop
inc
mov
lods
enter
loope
sbb
dec
and
int3
fidivs
ret
cmp
cmp
mov
rclb
std
mov
pop
loope
xchg
mov
int
lods
dec
mov
push
cli
push
or
and
xchg
popl
rorb
and
int3
test
lahf
pop
js
sti
rolb
lock
ror
dec
sub
pop
inc
pusha
inc
mov
leave
inc
cmp
repz
in
mov
or
mov
out
push
pop
mov
sub
mov
les
sub
test
jns
fsubs
cmp
loope
ret
dec
testb
loop
loope
jg
aam
lahf
push
dec
add
adc
xor
repz
push
push
loope
xchg
and
out
jg
push
loope
cmc
or
out
loope
add
lahf
inc
xchg
loope
out
out
pop
sbb
loope
mov
mov
inc
cld
xchg
loope
lods
js
pop
add
out
fs
into
jne
and
xchg
cs
push
aas
in
inc
lock
insl
aad
stc
jae
pop
inc
xchg
es
add
and
dec
ret
loope
push
dec
jne
popa
std
adc
aas
cmc
and
hlt
loope
xor
xchg
pop
jne
call
int3
lds
lods
jecxz
or
sub
aad
in
xchg
popf
maskmovq
or
xor
aam
loope
push
test
loope
lods
fmul
mov
mov
pop
xor
aad
cmp
clc
mov
roll
sub
das
push
sub
out
cmpsb
loope
mov
int
add
adc
mov
mov
iret
xlat
sub
mov
pusha
xlat
push
or
pop
add
fcmovne
hlt
popa
lret
loope
sub
jecxz
loope
test
imul
jecxz
sub
adc
repz
cli
enter
loope
or
dec
in
and
scas
sub
xor
lahf
mov
loope
xor
sahf
or
mov
popa
add
jbe
stos
loope
lcall
mov
loope
out
mov
mov
mov
or
dec
and
loopne
out
repz
out
add
push
inc
addr16
fcom
sbb
loop
ljmp
sahf
cmp
aad
loope
test
xchg
imul
leave
fdivrl
pop
movsl
addb
or
loope
adc
jbe
adc
cs
lret
test
loope
lahf
jecxz
cmp
xchg
loope
push
stos
mov
fptan
divl
add
pop
pop
leave
in
jnp
pop
xor
int3
int
loope
xchg
push
mov
shll
or
jp
loope
pop
push
repnz
sub
mov
fists
mov
loope
mov
loope
test
dec
ljmp
sarb
adc
jb
imul
loope
jle
inc
stos
jp
dec
loope
jl
outsb
mov
pop
or
lds
mov
jns
iret
cmpsl
dec
add
shl
sbb
cmp
inc
pop
int
rcl
pop
or
jmp
addr16
lods
gs
popf
mov
dec
xchg
dec
xchg
and
icebp
jmp
sub
lcall
dec
pop
pop
call
and
loope
cmc
gs
xchg
clc
push
loope
or
pop
and
xchg
fisubl
xor
int
xchg
in
push
loope
pop
cmp
loope
adc
paddusw
fwait
dec
and
movsb
roll
jns
cmp
shll
gs
ret
icebp
push
mov
rorl
and
inc
aaa
shrl
xchg
jae
inc
enter
roll
push
jo
fdivr
sbb
jae
jns
loopne
test
sti
pop
fcomps
pop
fiaddl
mov
imul
ret
cld
fxch
sub
lret
loope
int3
cmp
lret
xor
pop
loop
ja
dec
cmc
sar
daa
in
jne
dec
or
cld
sahf
push
pop
scas
cli
icebp
rcll
sub
add
jb
push
loopne
adcb
pop
rol
scas
lret
jne
aaa
ds
loope
repnz
dec
xlat
fisubs
add
movsl
int
jmp
into
or
out
push
and
enter
std
rorb
add
push
sub
mov
adc
fisubrs
ret
sub
dec
in
mov
shll
je
mov
adc
mov
enter
aas
arpl
xor
cmp
sub
test
sbbb
adc
pop
mov
imul
dec
mov
bnd
mov
cltd
mov
int
insb
mov
inc
inc
mov
mov
dec
push
or
testb
lcall
pop
int
add
push
les
icebp
dec
in
pop
ret
pop
inc
incb
frstor
push
push
mov
ficompl
fincstp
mov
or
jbe
dec
int3
dec
imul
adc
and
jno
inc
das
jns
arpl
sbb
les
add
insl
push
mov
xchg
adc
fnstsw
int
in
cmp
jmp
or
jg
movsl
mov
les
inc
aam
mov
fisubs
cld
into
jecxz
leave
daa
jle
inc
sbb
xchg
add
nop
dec
sub
dec
out
jno
xchg
pop
stos
jmp
mul
inc
fimuls
cmp
loop
pop
cmp
add
add
fldenv
ret
adc
add
sub
movsb
mov
loope
ja
or
sbb
inc
fwait
pushf
xor
fs
pop
cltd
movsb
jo
loope
andl
mov
loopne
mov
pop
insl
popa
mov
gs
hlt
sarl
push
or
in
xor
mov
xor
xor
xchg
and
lods
mov
and
or
add
mov
pop
inc
loope
mov
and
loope
cld
scas
hlt
outsb
sub
icebp
js
cwtl
cmc
pop
inc
popf
leave
stos
add
cmpl
pushf
mov
xchg
mov
loope
push
aaa
outsb
cmp
pop
loope
jno
ret
mov
add
inc
dec
fcoml
push
xchg
pop
inc
and
shlb
mov
fwait
mov
mov
shrl
sbb
loope
es
ret
imul
sbb
pop
clc
loope
cmp
insl
lahf
iret
fs
cmpsb
lcall
lret
xor
mov
mov
jns
sbb
clc
pop
pop
jmp
or
loope
rol
ds
into
jne
mov
inc
cmp
test
mov
jle
sbb
ret
mov
aad
stos
iret
and
repz
pop
push
and
mov
fld
push
cwtl
loope
bound
es
test
movsb
mov
fsub
fldcw
lret
fwait
aaa
and
shl
dec
lods
sub
into
test
add
popf
test
cmp
jne
je
sbb
mov
mov
sarb
add
inc
xchg
mov
jecxz
mov
int3
aas
loope
iret
mov
sub
push
loope
fcmovne
test
rorl
mov
shll
aam
pop
loope
pusha
int
sub
in
arpl
outsl
std
cmc
dec
mov
nop
mov
xchg
fiaddl
loope
pop
mov
fsub
sarl
dec
jb
jo
pop
lds
into
imul
ret
fiadds
bound
xchg
inc
mov
mov
loop
cmp
pop
ja
das
sub
mov
roll
pop
insl
fldcw
mov
leave
fimuls
rcll
push
and
bound
repz
ret
int3
in
jno
add
xchg
loopne
cmp
mov
idiv
pop
out
xchg
out
or
pop
test
cmp
jecxz
popf
loope
cmpl
inc
push
int
insb
in
sbb
scas
andl
fisubl
rcrb
test
sbb
outsl
es
out
fs
xor
inc
imul
mov
shlb
push
gs
xchg
insl
roll
or
lock
iret
movsb
adc
xchg
leave
dec
and
repnz
cmp
adc
fsubs
mov
cmpsl
pop
loope
sub
mov
leave
dec
fwait
push
lds
add
pop
jbe
popa
cwtl
loope
mov
sahf
sub
iret
lds
dec
jecxz
xchg
loope
ds
out
out
sbb
loope
dec
inc
push
sbb
and
mov
cmp
in
pop
call
loope
stos
int
xlat
jns
popa
sub
dec
loope
shrl
sahf
push
inc
and
cs
cmp
sbb
jle
cld
xchg
rcl
mov
iret
iret
loope
pop
xchg
enter
addl
mov
jno
pop
fcoms
arpl
mov
movsb
out
mov
dec
dec
sti
push
cld
pop
bound
add
lret
fisttpll
aad
mov
sub
push
adc
leave
pop
pop
inc
push
lds
lods
inc
or
jge
cmpb
loope
or
and
repz
sub
dec
aaa
push
pop
lcall
pop
or
pushl
jae
lds
aas
pop
loope
aad
pop
dec
ds
out
mov
lcall
out
cmp
insl
aas
and
add
or
pop
xchg
test
add
insl
popf
mov
xor
iret
lret
loope
push
enter
dec
cmp
ret
xor
ret
ljmp
lret
loope
out
mov
movaps
loope
orb
fadds
loope
out
cltd
or
fidivs
lahf
loope
and
shl
sub
cmpsb
loope
mov
fistps
loope
xchg
jecxz
ds
adc
test
loope
fldcw
fiaddl
inc
sarl
loope
or
in
xor
and
xchg
fistpll
cwtl
bound
push
fs
jecxz
mov
xor
shlb
movsb
or
xor
clc
data16
test
dec
popa
loope
mov
out
loope
pop
mov
pop
loope
daa
sbb
popa
sbb
lret
push
jge
fndisi(8087
pop
jae
xor
stc
icebp
inc
sahf
mov
inc
pusha
loope
in
daa
out
cltd
lock
mov
pop
loope
stc
push
or
loope
jecxz
adc
loope
pop
shrb
adc
scas
add
cli
fstpt
sahf
add
sbb
out
int
inc
decl
pop
loope
fnstsw
movsb
shrl
stos
mov
sub
jb
sbb
loope
push
jns
test
das
mov
jg
pushf
xor
imul
movsb
and
mov
and
out
or
add
fcmovu
lods
xchg
loope
push
and
jne
add
fstp
popf
testl
add
dec
xorl
ret
repnz
dec
loope
mov
lock
aas
mov
add
das
repnz
fmul
xlat
jl
dec
lock
loope
cmpsb
or
xor
mov
jns
fsubp
testb
mov
pop
mov
leave
daa
aas
int
loope
cwtl
pop
cli
mov
scas
rcrl
addr16
je
sbb
mov
push
mov
insb
aad
mov
aam
rolb
cltd
aas
mov
rcl
loope
nop
ds
mov
fsubs
loopne
pop
lahf
je
fldenv
addr16
and
fs
loope
sbb
mov
pop
pop
loope
jbe
stos
daa
popa
cmp
push
sbb
and
out
or
jmp
fwait
xor
push
loope
outsb
jae
in
jo
ljmp
aas
xlat
nop
fdivrs
inc
pushf
mov
leave
mov
pop
mov
push
pop
mov
aam
dec
sub
ret
enter
hlt
mov
loope
fpatan
sti
dec
mov
loope
fwait
and
aaa
dec
push
xlat
adc
or
stos
mov
divb
sub
xlat
movsb
loope
xchg
mov
push
aas
loope
mov
sbb
int
jmp
lret
cmpsl
les
cld
jge
nop
push
call
loope
jle
lods
lock
ds
or
jnp
jb
loope
test
dec
enter
loope
sti
xlat
dec
data16
sbb
cs
cs
mov
add
jmp
icebp
clc
test
add
loope
cmp
pop
icebp
mov
jle
jnp
sbb
fldcw
fs
and
faddl
cltd
jne
mov
dec
mov
jg
xor
xchg
sbb
sbb
jno
shlb
imul
mov
adc
daa
rcrb
jbe
dec
ja
sub
jmp
imul
or
jmp
ret
lret
into
mov
loopne
sbb
loop
dec
mov
cmc
iret
test
aad
mov
jne
scas
movsb
mov
lock
icebp
dec
int
pop
loope
andl
pusha
hlt
imul
fcom
js
lahf
les
and
loopne
mov
jbe
mov
lock
add
xchg
fdivrl
dec
cmc
lret
cs
in
inc
fs
xacquire
ss
mov
mov
es
adc
lret
pop
cs
pop
jmp
lods
loope
mov
jmp
pop
lds
mov
lock
das
xchg
popf
or
pop
xchg
push
xlat
fbld
subl
outsl
test
cmp
int3
stc
add
or
dec
mov
repnz
pop
stos
lret
cmpsb
test
loope
xchg
push
add
jnp
sub
stc
inc
lcall
out
mov
xchg
mov
or
push
mov
out
sub
adc
je
mov
push
add
in
lahf
mov
sbb
pop
xchg
loop
scas
int
push
repnz
inc
nop
jge
push
shrl
mov
jl
adc
idiv
loope
cmp
and
ret
mov
movsl
adc
out
ljmp
mov
xchg
fwait
jmp
les
aad
xor
adc
jo
shlb
out
adc
or
inc
loope
lcall
loope
lahf
pop
mov
lods
fisubs
sbb
ret
std
mov
iret
mov
leave
push
rclb
loope
das
ljmp
mov
je
enter
mov
mov
loopne
inc
data16
jg
imul
pop
push
xchg
pop
mov
mov
push
ffree
lock
int
inc
add
adc
push
mov
push
sbb
inc
dec
imul
leave
jmp
pop
push
fcoms
sbb
call
ja
out
and
xchg
rorl
push
jge
inc
iret
sbb
mov
sbb
xchg
mov
loope,pt
lret
cltd
lea
add
jae
add
data16
xor
movsb
stos
ficomps
inc
inc
mov
mov
jnp
xor
mov
mov
cmp
mov
jge
aad
lods
dec
jle
lahf
push
ja
addr16
xchg
adc
loope
and
and
mov
insb
rcrl
dec
xchg
loope
imul
cwtl
loope
inc
mov
insl
loope
fstpl
pop
repz
loope
add
mov
xor
loope
add
xor
and
pop
loope
mov
sub
clc
xor
xchg
cmp
add
sbb
int3
inc
dec
and
sbb
notb
ss
sub
xchg
lock
add
push
loopne
mov
mov
aad
pusha
mov
mov
mov
inc
sub
sarb
pop
cmp
out
jle
sahf
mov
add
inc
int3
iret
sahf
mov
test
jp
outsl
sbb
push
fnstenv
push
and
lret
push
cld
loopne
pop
adc
adc
iret
sub
lcall
sbb
sub
nop
mov
push
pusha
add
loope
push
lret
mov
loope
push
jne
push
push
loope
lcall
xchg
stos
loope
fildl
mov
mov
pop
mov
inc
loope
sbb
scas
cmpsb
mov
pop
cltd
inc
loopne
mull
call
dec
sbbb
rorb
mov
push
loope
cmpsl
stc
xchg
out
dec
pop
sbb
roll
sub
rcl
jmp
sahf
les
fistps
push
pop
mov
out
test
das
add
mov
mov
cmpsb
xor
rcl
jbe
test
loope
lahf
testb
push
pusha
das
dec
leave
cmp
jmp
lret
rcll
dec
adc
fmulp
or
xor
movsb
cmp
aam
ljmp
add
or
lock
mov
lea
stos
mul
cmpsl
xor
xor
cmp
cmc
jno
addr16
loope
jecxz
rcll
aas
cltd
mov
or
and
sub
popa
loopew
or
adc
and
in
dec
shlb
stc
sub
stos
aad
inc
jo
sti
add
sar
xchg
lret
xchg
pop
cmp
mov
loop
imul
adc
adc
loope
push
inc
cld
roll
add
rorl
out
add
inc
clc
add
add
iret
push
aas
xchg
jmp
and
inc
inc
int
loope
and
xchg
and
jl
sub
add
loop
adc
shll
stc
jne
inc
lods
mov
xchg
psrad
mov
push
mov
hlt
test
das
imul
and
call
add
mov
test
and
arpl
pop
dec
bound
jmp
stos
fisubrl
stos
sbb
cmc
fmuls
std
rorl
ds
loope
xchg
inc
ret
stc
add
cld
loope
cmp
mov
mov
and
test
ficomps
mov
leave
cmp
and
fildl
sbb
or
out
fsubrs
xlat
mulb
jmp
mov
ljmp
sub
pop
sub
push
and
sub
fisubs
jmp
icebp
sarl
pop
loope
dec
cmp
jnp
imul
inc
xor
push
lret
fadd
movsb
aas
loope
xchg
out
jecxz
push
mov
loope
xchg
into
pop
pusha
and
leave
or
mov
dec
into
or
rcll
sbb
mov
out
cwtl
pop
mov
loope
fbld
mov
mov
jge
fcoms
jne
and
push
jbe
aam
in
int
subl
test
mov
add
xchg
sub
fbld
sub
iret
sub
fstl
clc
xor
pop
rorl
stc
inc
xchg
testb
xor
out
dec
add
jg
adc
lds
out
adc
rolb
int3
test
movsl
icebp
jae
loope
adc
push
gs
mov
pop
test
stc
pushf
pop
mov
adc
scas
add
mov
mov
inc
fdivl
loope
and
push
push
mov
es
push
inc
adc
sahf
shl
cmp
jbe
add
and
shrb
pop
shlb
jg
xchg
clc
jp
repz
add
imul
ficompl
fsubr
clc
push
roll
imul
in
xchg
test
fwait
push
and
push
int3
das
mov
repz
cmp
lock
data16
xor
arpl
mov
insb
pop
xchg
out
scas
jbe
sub
jb
sbb
fsts
push
add
in
in
and
inc
in
lods
loope
mov
lret
arpl
mov
cltd
adc
jecxz
adc
jae
out
add
xchg
test
aad
cwtl
loop
fists
stos
inc
lcall
divb
enter
jp
flds
mov
xor
cld
ret
and
aad
ret
bound
pop
xor
aad
movsb
loope
movsl
and
loope
add
sub
idiv
test
push
sub
mov
xor
fstps
xchg
sti
loope
add
jecxz
mov
mov
loopne
mov
ret
call
addr16
cmp
xchg
mov
loop
add
jle
fbld
movsw
and
pop
push
loop
pop
imul
fdivrp
in
push
inc
xchg
pop
fimuls
clc
and
inc
int
inc
icebp
mov
imul
loope
sbb
imul
scas
xor
cmpsb
jg
cmpsb
pusha
push
lods
sahf
lods
push
jb
jb
subl
incb
sbb
lds
mov
ffreep
popa
add
push
or
jnp
sti
das
xor
adc
je
movsb
inc
add
mov
jne,pn
pop
in
into
inc
xor
mov
sarb
hlt
sbb
fsubrl
repnz
push
jns
loop
cli
cmpsl
mov
shlb
add
dec
lods
cmp
add
mov
inc
fiaddl
or
std
icebp
sahf
cltd
mov
pop
lahf
fcomi
rcll
fstps
cltd
jnp
adc
push
cwtl
pop
mov
mov
cmp
add
test
add
dec
js
mov
cli
cmpsl
pop
cmpb
cmpsl
incb
scas
mov
pop
test
enter
xchg
out
jbe
xchg
in
adc
xor
fadds
enter
mov
test
sbb
int
adc
mov
sub
mov
mov
and
pop
jg
cmp
aam
jge
in
sarb
mov
frstor
lds
mov
and
int
fisubrs
add
in
sub
data16
jno
cmpsb
xchg
inc
cli
cmp
inc
jl
or
ret
enter
push
sub
xorl
stc
ret
les
sub
iret
hlt
insb
sbb
insl
fbld
fistl
push
bound
dec
add
push
flds
or
dec
lret
loopne
aam
adc
inc
mov
ss
fisubs
sub
lods
ret
lods
flds
ror
lret
jne
push
inc
mov
mov
jmp
insb
pop
mov
or
mov
shl
sub
xor
sarl
int
mov
inc
bound
lock
jmp
and
mov
nop
sbb
test
clc
push
insb
add
inc
sbb
aam
js
lods
and
push
lret
mov
jnp
xor
fnsave
adc
aas
mov
ror
dec
into
shrl
pop
ret
and
sti
or
daa
cld
roll
pop
jmp
pop
data16
sbb
sbb
push
stos
jno
and
loope
cs
mov
repnz
loopne
sub
cmpsb
jmp
xor
mov
scas
movsl
hlt
and
repnz
loope
add
inc
loope
pop
test
ja
jg
test
xchg
mov
je
and
push
stos
and
loope
push
insb
jno
xor
sarb
adc
mov
loope
test
xor
pop
aas
test
and
lock
ss
fstl
popf
movsl
and
dec
rcll
xor
xchg
dec
or
push
xchg
loope
data16
push
mov
flds
popa
loope
jecxz
mov
push
lret
add
ret
dec
fstps
lahf
stc
push
mov
fidivl
add
idivl
sahf
mov
mov
popa
int
iret
enter
mov
roll
inc
mov
or
xor
loope
ss
xlat
sub
rolb
aas
xor
loopne
bound
fistl
mov
loope
sbb
ss
xor
jmp
adc
sub
jb
lods
sub
xchg
in
inc
ficoms
and
fstl
pop
stos
fcom
clc
int
popf
imul
loope
mov
fiadds
loope
outsb
daa
lds
sahf
pop
add
pop
and
fidivs
adc
lock
ret
fldenv
sbb
test
test
mov
repnz
in
and
clc
push
ret
cmp
loope
jl
daa
push
test
xorb
insl
lods
rcll
inc
push
stos
and
dec
mov
or
loope
mov
movsb
jge
je
push
mov
mov
loope
push
mov
sbb
mov
xchg
sub
in
hlt
xchg
addr16
loope
cmp
inc
std
inc
cmc
jb
loope
mov
loop
hlt
add
xchg
scas
loope
outsl
sbbl
icebp
out
add
mov
sahf
xchg
out
and
loope
insl
int3
fmulp
out
and
addr16
and
jnp
add
xor
lea
jl
mov
inc
push
aad
loope
scas
inc
pop
push
andl
sahf
jge
fdiv
clc
sbb
fwait
mov
add
stos
pop
ja
jne
loope
movsb
push
cld
inc
mov
add
sub
inc
into
push
pop
pusha
scas
pop
loope
dec
sbb
nop
inc
cwtd
mov
jge
ss
loop
repz
mov
cltd
loopne
in
xor
rolb
jb
pop
call
cmp
arpl
mov
cmpsl
mov
add
mov
aad
rolb
ficomps
push
adc
andl
mov
inc
or
xlat
cmp
pop
loope
bound
das
loope
notb
jbe
adc
push
pop
out
mov
xchg
leave
jmp
loope
hlt
int
inc
push
test
and
push
bound
fistpl
sbb
add
into
flds
add
fs
pop
mov
fisttpll
frstor
cmpsl
cmp
cmpsl
cmpsb
jb
aas
xor
cld
loope
mov
gs
add
lea
mov
dec
mov
jb
ret
hlt
pop
cmc
mov
popa
frstor
stc
mov
cmp
nop
push
loope
cmp
aad
hlt
test
and
sub
push
loop
or
mov
push
push
lret
loope
jbe
jmp
jb
dec
sarb
movsb
stos
fsubrl
or
adc
xchg
dec
push
and
mov
sub
xchg
push
xchg
shr
mov
xor
dec
addl
aaa
pusha
sarb
cmp
test
adc
pop
sahf
loop
fs
mov
cli
mov
or
fidivrs
int
jae
js
rol
loopne
sar
or
dec
cmpsb
mov
lods
or
push
int
dec
dec
sub
or
sbb
cli
push
int3
sahf
mov
or
sub
les
adc
in
mov
mov
aaa
and
or
decb
pop
in
jp
pop
testb
cwtl
fxch
fbld
cmpsb
int
jns
out
xchg
fimuls
xor
pusha
push
faddl
into
mov
out
cmpsl
stc
jmp
rcll
movsb
lahf
ja
movsb
push
xor
sbb
mov
cmp
ret
repnz
xor
jo
jae
jg
lahf
out
sbb
jge
ja
dec
pop
ljmp
add
scas
kmovd
shr
mov
mov
ja
shrb
or
int
add
ret
imul
sahf
xchg
gs
outsb
adc
jge
mov
loope
jecxz
pop
mov
leave
push
mov
and
xor
fisubrl
cwtl
or
int3
movsl
pusha
cli
testb
and
xchg
mov
jae
movsl
add
fcom
pushw
inc
jbe
loop
inc
push
cld
gs
push
xchg
sub
push
sub
movsb
ret
loope
addl
into
cmpsl
mov
loopne
clc
lret
dec
icebp
adc
jb
pop
pop
mov
xor
and
aad
mov
jl
inc
mov
nop
popa
and
aad
xor
pop
and
lret
pop
mov
jne
inc
test
dec
lock
ljmp
adc
cmp
lret
icebp
pop
ficomps
mov
adc
jne
pop
dec
fiadds
fsts
mov
cmp
or
sub
push
add
test
cli
popa
repz
shrl
nop
ret
xor
dec
repnz
leave
sbb
and
or
and
xchg
les
out
jo
and
jl
fcmovu
hlt
pop
add
aad
out
or
mov
pop
lock
push
ret
sub
out
popf
add
frstor
std
or
test
jne
xchg
or
inc
div
adc
les
adc
or
rorb
lret
ret
dec
pop
fcmovbe
jp
dec
inc
cltd
dec
pop
cmp
add
adc
push
test
sbb
push
xchg
lret
sub
out
shl
sub
out
subb
nop/reserved
inc
out
mov
in
mov
cmp
out
in
mov
mov
repz
stos
stos
or
pop
jns
loopne
pop
inc
jg
jecxz
fsubl
and
dec
xor
or
sbb
pop
mov
mov
std
jb
mov
mov
idivb
add
dec
adc
cmpsb
dec
shl
mov
pop
inc
js
in
push
cmp
push
call
or
sub
mov
iret
lret
mov
lret
pushf
add
xlat
loope
cld
or
movl
or
mov
pop
mov
popa
pop
dec
and
jmp
decb
inc
dec
sbb
ljmp
jne
add
or
push
push
sub
xchg
or
shrl
mov
push
or
les
loopne
xor
stos
cmp
lidtl
xchg
jno
into
or
xorl
sbb
pop
orl
push
mov
enter
pushf
daa
mov
push
incb
fdivl
mov
aam
pop
mov
dec
push
into
dec
dec
and
add
out
mov
inc
push
mov
fbstp
jne
or
xchg
imul
mov
leave
push
mov
mov
add
adc
mov
loope
scas
jmp
add
lods
movsb
decb
loope
and
ljmp
cmp
mov
mov
mov
subb
cmc
loope
xchg
pop
and
mov
fcoms
pusha
jo
movsb
in
pop
mov
fidivrl
jmp
or
icebp
loope
cli
pop
adc
loope
push
mov
ret
push
repz
inc
ret
insb
leave
mov
pop
jg
push
cli
jle
movb
jmp
insl
jp
loope
pop
xchg
pop
loope
push
lods
lret
jns
inc
jecxz
cltd
loope
repz
pop
mov
push
pusha
xchg
cmpsl
test
loope
rcl
adc
xlat
stc
pop
pop
fs
inc
mov
scas
adc
daa
pop
jmp
mov
fyl2xp1
lcall
leave
add
ror
mov
mov
mov
leave
inc
xor
int
jge
fs
mov
cmc
out
inc
xchg
mov
gs
add
loope
lcall
add
mov
les
call
cmp
scas
cmp
sbb
sbb
dec
sbb
ja
dec
std
ret
mov
cmpsl
popa
arpl
push
cld
pop
leave
or
test
inc
dec
pop
or
cld
aad
aam
xchg
mov
mov
out
mov
inc
mov
aaa
push
fs
cmp
test
or
sbb
adc
mov
fucomip
mov
enter
test
inc
add
mov
push
fadd
xchg
loope
enter
inc
sbb
push
fwait
pop
jge,pt
fadd
leave
pop
mov
xorl
push
mov
je
add
loopne
roll
fidivrl
push
hlt
jmp
arpl
pop
adc
or
pop
sbb
stos
leave
xor
mov
jecxz
pop
mov
shll
rorl
loope
jle
fmull
dec
pop
or
jnp
mov
aam
mov
gs
jecxz
out
inc
push
adc
xchg
loope
dec
test
movsb
xor
scas
fldenv
movsl
fcmovnb
push
stos
adc
sub
sbb
adc
lret
mov
vpsllw
pop
in
mov
popa
imul
repnz
loope
dec
mov
int3
or
loope
xor
mov
adc
push
insl
adc
repz
and
cmpb
insl
fsts
jle
rorl
loope
jb
aam
or
lret
rcll
mov
pop
adc
loope
pop
inc
mov
out
repz
push
stos
movsb
xchg
lds
dec
fmuls
mov
add
inc
or
dec
sbb
pushf
loope
xchg
mov
push
loope
xor
jmp
mov
and
ret
mov
leave
aaa
pop
insb
jecxz
adc
mov
faddl
out
jl
mov
fistps
sar
inc
cwtl
and
pop
mov
enter
xchg
into
std
ss
mov
and
pusha
xchg
aad
hlt
out
adc
arpl
pop
sub
ljmp
and
shlb
loope
int
xlat
jl
xchg
inc
loope
dec
shl
xor
loope
adc
push
cs
pop
pop
pusha
in
mov
hlt
ret
rol
cmp
or
ret
and
mov
stos
pop
pusha
mov
loope
aaa
movl
ljmp
loope
mov
push
popf
xor
in
loope
pushf
add
cmp
enter
mov
adcb
outsb
mov
pop
mov
dec
lds
loope
push
loopne
loope
out
dec
pop
or
loope
add
cmp
mov
imul
mov
jmp
mov
lds
adc
add
push
and
sub
ror
stos
xor
imul
int
leave
push
insl
mov
add
lods
iret
aas
dec
add
or
repnz
jb
mov
mov
sahf
dec
movl
sub
mov
lds
repz
mov
xlat
loope
adc
mov
add
cmp
jae
jecxz
dec
test
lea
das
mov
loop
push
jns
lds
mov
sti
mov
loope
jg
cs
filds
sahf
loope
fnstcw
push
mov
lahf
and
cltd
aam
pop
or
mov
mov
add
push
rolb
xchg
pop
out
mov
pop
fimuls
jp
int
scas
dec
popf
push
loope
fildl
call
icebp
jno
sub
data16
fbstp
aad
mov
inc
sub
fwait
loope
outsl
adc
rcrb
fisubl
jle
inc
lea
jb
mov
enter
xor
inc
push
mov
push
imul
cmp
loope
out
dec
sbb
aas
addl
push
sarl
call
inc
scas
cmc
mov
cmpsl
pop
inc
mov
ffree
and
mov
sub
jo
bound
sub
add
xchg
into
addr16
cmp
mov
pushf
in
mov
push
sar
adc
addb
push
add
add
into
add
mov
test
jnp
pop
imul
xlat
push
cwtl
popf
ror
lock
jmp
fisttpl
inc
xor
sahf
inc
xor
pop
pop
out
sub
je
jae
cmp
inc
ret
or
lods
loope
shrl
aam
shl
outsb
aad
stos
lret
fisubrs
jmp
popf
xor
xor
inc
cld
add
and
push
adc
aad
loopne
loopne
mov
xchg
in
out
add
mov
sub
push
rorl
xchg
loope
dec
sahf
inc
jmp
push
push
scas
ja
sbb
and
lret
lret
mov
cmpsl
jmp
cld
mov
fcoms
fdivr
enter
lods
stc
mov
cs
cmp
repz
or
push
push
or
loop
cmp
add
fidivrs
or
push
xchg
shll
add
loope
jle
test
push
fcoml
aad
xchg
inc
push
outsb
jb
repnz
mov
loope
lock
and
loop
cmp
loopew
mov
mov
inc
inc
push
lahf
fucom
push
cmp
add
test
inc
es
mov
or
je
and
cmp
xlat
ret
pop
pop
shrl
movsb
fs
xor
fimull
pop
cld
or
mov
rcl
insb
mov
ficoms
adc
pop
sti
add
dec
loope
dec
fdivrs
pop
push
stos
jmp
lods
fildll
loope
sub
push
mov
mov
xchg
cmp
imul
push
push
test
mov
stos
testl
xchg
cmp
es
rcrl
in
das
mov
rol
inc
loope
or
outsl
lds
cmpl
mov
fs
aas
sqrtps
call
into
xchg
movsl
das
sbb
call
xchg
xchg
lret
cli
adc
sbb
jg
imulb
cmc
loope
fiadds
call
mov
icebp
add
cmp
ret
lret
pop
rorb
shll
inc
jo
pop
aam
loope
daa
jnp
push
xchg
sar
bound
mov
mov
mov
push
add
ja
popf
loope
test
je
leave
or
mov
aad
mov
popf
icebp
mov
ds
in
inc
dec
pop
stc
xchg
loope
lret
sub
inc
sahf
jbe
ret
mov
leave
fiadds
lds
rcll
loope
or
xchg
jno
add
push
inc
rclb
mov
in
xor
cmp
enter
mov
adc
roll
mov
loope
inc
push
mov
ret
cs
fimull
mov
push
loope
push
jmp
xchg
andb
jno
scas
bound
push
out
or
loope
into
es
cmp
cwtl
test
loope
rclb
or
ja
mov
int
psubq
xor
inc
jo
push
js
or
cmp
jo
cli
and
push
or
insl
sub
hlt
push
lret
jge
mov
ret
sbb
movsl
ret
rclb
dec
ja
loope
call
stos
sarl
jo
jmp
cmp
test
loope
mov
lahf
leave
insl
sarb
dec
fmulp
inc
jne
stos
jmp
mov
sub
shrl
loope
stc
add
sbbl
mov
sub
sbb
sbb
push
jmp
jnp
mov
out
mov
cmp
fnstenv
or
dec
shll
roll
xchg
loope
mov
insb
cmp
aas
dec
outsb
and
sub
push
mov
jo
pop
movl
into
inc
test
push
js
push
mov
iret
repnz
lret
fwait
push
add
mulb
jne
icebp
mov
shlb
dec
add
ss
int
fmuls
inc
loope
dec
lods
std
add
dec
mov
lret
insb
mov
push
aam
mov
cmp
jns
sbb
adc
shl
rorl
aaa
fistpl
loope
sub
sti
outsb
cmovb
add
incl
push
xchg
jbe
loopne
jo
jo
jecxz
mov
inc
aas
mov
mov
outsb
adc
orb
pop
nop
mov
cmp
scas
jno
sbb
sub
inc
repnz
loope
dec
fiaddl
aam
jmp
dec
mov
add
xor
loop
fwait
xor
cs
add
ret
xor
in
or
jnp
vsqrtss
jbe,pn
inc
adc
pop
lds
push
loope
lret
ds
inc
push
test
daa
fwait
nop
sarb
ljmp
xlat
in
adc
loope
fwait
cmc
add
int
adc
stos
test
loope
or
ds
add
add
mov
push
sbb
mov
inc
lds
fstl
jp
flds
insl
mov
loope
adc
cltd
push
xchg
add
mov
mov
subl
push
mov
jl
add
outsl
mov
jb
icebp
ret
mov
xchg
fldenv
add
ja
lea
fldl2t
pop
lds
roll
dec
adc
fnstcw
adc
ficompl
jle
int3
sub
sub
mov
daa
or
dec
mov
push
xchg
push
out
jns
loope
pop
xchg
cs
cmp
add
lahf
xchg
imul
bound
repz
jmp
or
es
test
in
in
xlat
rclb
iret
pop
jbe
jl
iret
and
inc
arpl
push
nop
mov
enter
or
cli
xchg
cmp
dec
pop
xchg
in
lret
adc
repnz
and
out
or
sub
rorl
jmp
and
rcrl
mov
call
mov
lret
mov
push
jo
imul
dec
and
aas
test
call
add
stc
sub
ds
imul
or
shll
mov
pop
and
test
enter
repz
or
cmc
adc
hlt
or
popa
push
enter
in
imul
lret
addl
pop
out
test
pop
inc
and
and
and
or
mov
mov
subl
hlt
dec
sbb
sbbb
mov
inc
sub
mov
push
jle
or
call
inc
cmpsl
test
inc
cwtl
out
adc
gs
mov
lea
pop
jnp
imul
roll
lds
das
out
or
lds
shrl
adc
mov
rolb
dec
adcl
sub
in
rcr
enter
sub
xor
dec
les
daa
or
test
cmc
sbb
call
rcrl
out
loope
aam
loop
adc
jne
fldcw
enter
jmp
mov
mov
inc
mov
sub
in
mov
fstl
inc
orb
mov
out
call
adc
enter
leave
inc
inc
push
fs
test
push
enter
leave
sub
jle
sub
xchg
icebp
aam
fmull
push
cli
ljmp
ss
dec
pop
ficoml
lret
addr16
ret
sub
and
out
or
rcll
enter
pop
sub
fisubs
test
dec
pop
mov
out
and
sar
test
inc
call
inc
fldln2
lods
sub
jmp
mov
enter
cli
sub
pop
imul
mov
addr16
mov
imul
lret
test
pop
sbb
shr
enter
or
push
pop
mov
pop
shrl
adc
pop
sub
xchg
and
sub
iret
inc
sbb
adc
jns
gs
or
filds
imul
test
add
test
inc
xchg
add
or
inc
or
dec
jne
gs
adc
rorl
inc
sbbl
sub
ror
enter
loop
leave
dec
mov
xor
aad
test
jecxz
mov
popa
inc
adc
push
push
mov
cs
mov
pop
fisttpl
xchg
lds
add
or
inc
push
push
mov
sub
in
dec
xchg
sbb
pop
rcr
push
and
enter
fsubs
fstpl
and
cmpsl
cmpsb
aam
jnp
xchg
fisubl
imul
or
dec
out
call
mov
ret
test
enter
testl
push
fidivl
and
pop
sub
inc
std
orl
sub
cmp
dec
xor
lahf
xor
xor
jbe
mov
mov
add
inc
int
jmp
ret
mov
inc
daa
jecxz
mov
cltd
xor
mov
fbstp
addr16
test
addr16
ret
pop
mov
inc
pop
enter
jge
xor
bound
icebp
dec
aas
test
xor
jne
scas
sbb
mov
jbe
leave
push
cmp
in
jns
hlt
push
cwtl
jns
pop
mov
sbb
jnp
int3
int
movsb
xor
or
loopne
mov
cmp
adc
mov
jmp
dec
faddp
sub
aaa
cs
pop
cmp
in
out
fistl
add
pop
cmp
lea
je
pushf
push
mov
lea
jmp
pushf
push
lea
jae
and
shl
clc
test
mov
cmc
mov
sar
or
mov
cmc
test
sub
test
repnz
call
pop
and
packuswb
or
add
icebp
mov
cmp
das
push
sbb
mov
push
mov
fdivrl
fbld
std
popa
cmpsl
pusha
add
mov
mov
mov
pop
test
int
pushf
fcmovnbe
xor
cmpsb
adc
adc
xchg
sti
mov
inc
les
arpl
push
in
and
xchg
jg
sbbl
mov
push
xor
lods
mov
movb
lea
jb
jmp
shl
mov
cmc
cmp
repnz
pushl
mov
pushf
pushf
lea
jne
bswap
push
pop
movb
setg
push
cwtl
movsbw
lea
pusha
movl
pushf
call
call
inc
push
data16
jl
movsb
cli
xor
ja
test
cltd
jno
add
add
out
popa
mov
fs
add
push
inc
cs
into
repnz
dec
ret
cli
outsl
push
js
cmpsb
imul
aam
sbb
mov
sbb
add
sub
push
jg
xchg
cli
cmp
loop
in
dec
sbb
push
or
mov
mov
jl
push
shll
js
and
xchg
xor
cmc
mov
fs
cmp
jne
aad
fdivrl
jp
jb
loope
add
sahf
push
or
hlt
push
add
ffreep
fcompl
insl
xor
test
insb
rolb
xchg
sub
repz
xor
fidivrs
add
movsb
pop
push
cmp
jle
and
mov
stos
dec
dec
cmc
xor
lods
xchg
or
inc
xchg
jne
dec
add
or
mov
push
rclb
push
and
add
idivl
mov
ret
sub
sub
jae
fisubrs
mov
push
aad
fwait
aam
add
scas
xchg
hlt
rcrl
cmp
xor
push
mov
outsb
insb
and
jl
mov
push
push
cmp
nop
add
push
and
push
add
adc
lea
shll
pusha
xor
pop
fstl
insb
in
fmuls
gs
push
xchg
sar
mov
ret
mov
lret
enter
call
pop
cmp
movl
mov
jmp
lea
jmp
pusha
lea
jne
pusha
lea
jno
push
inc
call
test
xlat
pop
jno
les
std
shrb
mov
repz
fdivs
mov
aaa
lret
les
or
hlt
or
mov
sbb
mov
shll
rcrl
mov
fsubl
or
inc
cwtl
jb
mov
mov
inc
add
lahf
cmpsl
pop
or
subb
aam
lcall
div
sub
push
notb
cmp
mov
add
pushf
pushf
push
pusha
movzwl
movsbw
bswap
pushl
mov
movw
push
pushf
movw
lea
jmp
xchg
push
fs
xchg
outsb
pop
or
sub
sti
stos
and
fcompl
les
sub
jmp
sbb
loopne
or
jne
test
mov
shr
fs
fisttps
dec
loop
xor
scas
adc
test
pop
sub
ja
xchg
sbbb
xchg
jno
and
push
push
and
sub
cmpsl
or
xor
mov
xor
iret
dec
sbb
lret
scas
imul
jge
or
push
mov
inc
dec
aad
fsubp
imulb
sbb
dec
cwtl
pop
cmp
movb
pushf
lea
je
call
movl
pusha
push
movb
lea
jmp
pusha
jmp
push
lock
std
std
addb
ret
jl
xlat
ror
mov
pushf
mov
pop
je
xor
sub
mov
jno
dec
inc
cmp
aam
pop
into
add
out
and
test
mov
xor
mov
add
xchg
push
jbe
hlt
xor
mov
enter
ror
cmp
fisttpl
ficomps
mov
sub
mov
pop
movzbl
bt
rol
mov
call
lea
jae
push
stc
xor
jmp
clc
cmp
pushl
mov
lea
ja
call
or
and
scas
in
mov
clc
inc
push
aaa
int3
out
fsubrs
inc
xor
movsb
or
jbe
xchg
push
push
test
adc
push
cli
mov
int
outsb
sub
pop
sbb
push
and
insb
fildll
fdivrl
inc
les
jmp
nop
push
mov
cmp
jbe
icebp
shrl
inc
sbb
inc
stc
lods
sub
iret
push
jns
loopnew
lods
pop
cmp
sahf
stos
cmp
add
and
jmp
out
lcall
dec
imul
cmpsl
adc
jg
addr16
sbb
jb
mov
outsl
stos
add
jae
jl
scas
mov
cmc
roll
mov
mov
shrl
jno
out
mov
sub
rorl
xchg
repnz
mov
sbb
push
out
mov
fdivs
dec
int3
je
mov
push
mov
roll
fs
pop
iret
test
repz
cmp
aas
or
xchg
and
cli
or
xchg
push
pop
decb
jns
outsl
arpl
adc
outsb
sub
rolb
out
mov
fbstp
lods
mov
mov
sahf
shll
addl
pushl
cmp
inc
pusha
add
call
cmp
pushf
call
push
jmp
xchg
cwtl
mov
jp
inc
aaa
les
push
xor
outsl
lds
mov
sbb
iret
mov
jg
dec
push
loop
mov
xchg
mov
mov
scas
mov
inc
stos
dec
cld
gs
inc
mov
das
call
sub
adc
stc
lcall
std
push
popf
mov
jnp
jle
pushl
xchg
add
fildl
imul
std
xlat
push
inc
scas
mov
mov
mov
sub
xor
add
movsb
pop
push
xor
ds
xor
inc
dec
test
andb
or
inc
inc
cmp
push
pop
xchg
dec
mov
scas
popf
repz
and
jmp
sub
jl
cltd
aas
pushl
xor
or
in
fstpt
inc
cmp
shrb
push
in
pop
sbb
das
lods
xor
dec
or
cmc
in
imul
pop
int3
xchg
pop
xchg
ds
xchg
pop
int3
fimuls
fstl
cmp
push
pop
cmp
aam
imul
jecxz
or
fs
cli
sub
xchg
push
loope
xchg
cmp
lret
mov
out
inc
fdivp
lea
pusha
sbb
ficomps
mov
in
jae
icebp
stos
push
nop
ret
sub
push
in
cmc
in
test
pop
mov
cmp
pop
movzbw
movb
jmp
lea
jne
call
add
ret
push
leave
sub
fs
sbb
popf
lcall
xchg
and
or
sub
mov
aas
hlt
jmp
fcomps
jo
push
push
or
or
mulb
push
mov
ljmp
clc
add
ljmp
jae
pop
mov
mov
gs
xchg
gs
mov
loop
mov
add
stc
mov
je
push
idiv
mov
fwait
stos
enter
pop
lods
adc
ja
lcall
push
sahf
xor
add
jb
or
aaa
cmp
and
lret
clc
das
inc
xchg
xchg
popa
movsl
imul
aad
jle
cmpsl
pop
mov
adc
movsl
test
inc
imul
inc
mov
in
xor
dec
cmpsl
fsubp
or
mov
sub
shlb
cld
cmc
mov
cmp
negb
sub
mov
fisubl
push
jne
out
fwait
jp
test
cmp
rol
int3
int
push
div
mov
dec
jl
fiaddl
sbb
dec
in
sbb
std
cwtl
gs
repz
cmpsb
push
cwtl
seto
cmp
mov
out
rorb
pop
cmp
push
push
jmp
xor
adc
mov
jbe
mov
nop
adc
les
pop
inc
imul
xchg
into
mov
pop
or
pop
out
outsb
cmpsb
cmp
fs
cmp
enter
into
add
jl
add
jne
xchg
sbb
xor
ss
jb
pop
lcall
mov
lret
hlt
cld
jecxz
cmpsb
pusha
stos
shll
les
or
testl
std
aad
iret
mov
setle
fcompl
mov
and
add
jns
cwtl
leave
js
xchg
hlt
adc
pop
push
mov
xchg
mov
loop
xlat
push
adcb
push
scas
sbb
fstl
lret
pop
sbb
inc
cli
mov
fbstp
or
cmpsl
mov
cmp
test
cmp
jb
mov
sahf
es
adc
push
mov
xchg
pop
xchg
in
push
int
loopne,pn
cld
in
mov
ficompl
js
jmp
pop
test
notl
push
mov
cs
cs
adc
pop
fadds
fdivl
and
ss
shr
jecxz
les
das
in
mov
cmpsl
pop
aad
rolb
movsb
pop
push
leave
lcall
mov
call
jmp
adc
addr16
in
pushf
mov
loop
adc
sbb
data16
aam
fs
inc
out
dec
push
jl
mov
sbb
mov
push
mov
push
or
imul
cld
xlat
pop
ret
or
push
int3
push
lds
xor
fisttpl
call
xor
addr16
add
xor
mulb
mov
mov
inc
mov
push
jns
hlt
cmc
enter
mov
jp
arpl
lods
pop
cmpsl
push
inc
xchg
jmp
sahf
jo
scas
adc
repz
and
je
int3
in
xchg
lcall
js,pn
cmc
in
sti
repnz
push
push
mov
sub
inc
inc
mov
outsb
lahf
std
inc
dec
xlat
pushf
aas
and
mov
inc
jo
subb
push
call
test
sbb
cmp
xchg
push
fsubl
sbb
into
jmp
add
jo
imul
popf
sbb
cwtl
outsl
lret
popa
js
sub
aam
push
outsl
mov
cmp
mov
sahf
mov
int3
imulb
pop
nop
subl
sub
xchg
sarl
sbb
sbb
pop
jmp
fistl
mov
enter
jns
lods
push
not
jmp
lea
je
test
jmp
movl
pushf
mov
lea
jmp
mov
setb
not
pushf
lea
call
cmc
mov
mov
jmp
test
cmpsl
add
xor
cmp
std
data16
loope
and
jge
or
mov
xor
cmpsl
xlat
sub
cmp
xchg
int
outsb
popf
mov
xchg
negl
adc
popf
fidivrl
jne
or
mov
push
push
les
dec
push
push
cmp
in
jns
jo
pop
xchg
cmpsb
std
repz
cmp
fstl
hlt
xor
lret
sarl
sbb
mov
pop
cmp
daa
mov
divb
movsb
jg
out
push
fidivl
mov
cmp
cmp
add
mov
rclb
mov
enter
xor
jno
push
cmpb
pusha
lea
jne
push
ror
xor
not
call
jmp
call
addr16
inc
das
loop
or
inc
xchg
repnz
movsb
jge
lods
or
test
ret
dec
rol
hlt
pop
mov
mov
and
push
repnz
clc
imul
inc
or
rcr
cwtl
jae
cmpsl
lcall
and
aas
ror
add
mov
sti
jbe
pop
cmp
imul
gs
xor
cs
insb
add
fs
call
pushf
pushl
pushf
mov
push
lea
jmp
pushf
mov
mov
pop
pusha
pushl
pusha
pushl
ret
lea
je
push
push
pushl
stc
cmp
pusha
movb
lea
je
pushf
mov
lea
jmp
sbb
test
std
rorl
and
cld
push
sub
mov
sahf
cmp
mov
xchg
inc
and
mov
les
mov
ja
mov
test
and
mov
orb
and
jle
sbb
cmp
cmpsb
mov
inc
dec
je
mov
xchg
mov
adc
popa
pop
xchg
dec
mov
cmp
sbb
pop
pop
cmp
sbb
jne
cmp
je
xchg
jecxz
adc
lret
xlat
mov
cmpsl
add
pop
leave
cwtl
es
jl
xor
sbb
pop
add
out
xchg
cmp
xchg
js
mov
fdivs
mov
stc
sub
push
push
xor
mov
ret
add
cmp
dec
lcall
or
mov
das
sub
mov
xchg
cmp
jns
sub
in
aam
cmpsl
dec
mov
push
fisubrl
mov
xchg
inc
sahf
adc
in
jae
adc
push
ret
push
cmp
pop
aam
stos
js
xchg
in
lret
movsl
shrl
outsb
sub
lods
cs
test
and
xchg
out
outsl
or
mov
mov
push
xchg
add
inc
and
inc
and
add
and
fdivr
add
loop
pop
mov
fcompl
stc
xor
and
and
test
push
je
sahf
pop
shl
mov
fstl
xlat
jmp
or
mov
lahf
or
mov
xor
mov
mov
mov
ret
xlat
mov
mov
add
sub
cmc
je
cmp
imul
xor
mov
jg
pusha
sbb
cwtl
jae
std
push
cmc
mov
cmpsl
dec
lret
icebp
cmc
rorl
enter
out
movsl
pop
sar
aam
jno
xlat
xchg
xchg
outsl
xlat
test
add
add
jb
in
pop
cmp
cmp
pusha
lea
je
cmp
push
cmp
jmp
lret
scas
push
fnsave
and
push
cs
lcall
fcoml
pop
mov
fwait
dec
fistpll
mov
xor
and
add
rep
and
shrb
dec
outsl
pushl
mov
pusha
pushl
ret
lea
push
pop
call
cmc
push
cmp
push
lea
jb
push
cmp
pushl
pushl
pusha
mov
lea
jae
bswap
movzbw
mov
pushf
pusha
mov
mov
pushf
push
movw
lea
jmp
push
lock
std
std
mov
xchg
ljmp
dec
push
mov
sub
mov
pop
hlt
ss
cmp
mov
in
enter
and
aam
pop
enter
xlat
and
test
cs
xor
and
xchg
push
push
cmpsl
test
xchg
jge
iret
sub
repnz
inc
movl
jmp
inc
dec
movsl
pop
cmp
and
mov
loope
adc
push
push
jbe
lods
movsl
fwait
xchg
int3
inc
jnp
subb
inc
mov
loop
data16
lret
in
int
sar
out
in
std
pop
cmp
divb
mov
lock
push
fisubl
and
xchg
scas
and
lods
push
outsl
rorb
hlt
popf
sub
mov
push
fwait
sub
mov
ljmp
or
mov
xor
mov
and
fmul
add
pop
cmp
mov
cwtl
pushf
movl
movb
cwtl
bswap
lea
mov
movw
movl
pushf
push
pushl
popl
pushf
pushl
mov
mov
pushl
ret
xchg
push
out
shrl
xor
popa
jl
lods
sbb
or
mov
pusha
push
jno
mov
xchg
fisubl
pop
pmaxsw
adc
and
cmp
add
jp
pop
cmp
out
out
mov
dec
dec
es
or
and
gs
jp
into
hlt
mov
in
lret
mov
repz
mov
dec
pop
mov
mov
mov
cmp
sub
mov
sub
dec
pop
in
hlt
cmp
mov
cmp
push
push
orb
inc
mov
adc
nop
ds
mov
and
cmp
daa
mov
cmp
adc
aam
pop
mov
push
and
cmp
test
movl
das
addr16
je
or
fcmove
sub
aaa
pop
mov
mov
lret
cmpsl
push
jg
xchg
xlat
shrl
add
xor
cmp
inc
fiadds
repnz
cmpsl
and
aam
mov
fucomp
xchg
mov
dec
rorb
cmp
lcall
lods
lods
pusha
lea
dec
test
js
enter
repnz
jne
lcall
lods
out
fistl
inc
adc
add
inc
in
pop
ret
sbb
jo
lods
dec
cmp
mov
aam
mov
sub
jl
xchg
jne
dec
sbbl
das
js
test
cmc
mov
pop
cmp
add
add
xor
add
add
add
out
sbb
add
adcl
add
mov
add
add
mov
call
adc
sub
bsr
lea
add
shr
bsr
not
mov
rcl
setne
mov
cmp
pushf
jmp
mov
pusha
mov
lods
test
xor
clc
ror
stc
cmc
pushf
clc
neg
push
pushf
jmp
lea
jbe
pusha
adc
sub
dec
mov
add
adc
mov
jmp
mov
xchg
and
or
lret
push
mov
mov
fsts
test
or
icebp
mov
hlt
xchg
push
push
lea
inc
pop
aad
rcrl
scas
notl
pop
cmp
dec
in
daa
xchg
mov
push
dec
mov
sub
sti
lods
mov
xchg
or
dec
inc
cmp
adc
cltd
pop
cmp
add
inc
gs
outsl
fs
gs
imul
add
and
jb
lock
les
lock
shrl
test
sbb
push
ds
and
test
xor
pop
mov
jg
push
xchg
sub
dec
jp
movsl
movsl
jae
push
xchg
xor
mov
cmp
arpl
les
cmp
dec
mov
stc
cmp
cmc
sub
test
pushl
call
pusha
mov
pushf
bt
sub
call
mov
mov
lahf
mov
lock
mov
int
movsl
fimull
testl
dec
rolb
lock
lcall
or
sti
je
xchg
nop
in
mov
out
cmp
call
js
mov
dec
push
add
adc
xchg
rorl
sbb
sub
mov
push
dec
inc
mov
adc
cmp
pushf
call
call
call
idivb
lret
movsb
mov
sub
cmp
cld
xchg
jb
add
xchg
dec
test
or
repnz
sbb
or
push
push
mov
scas
sbb
or
push
leave
cwtl
je
sub
in
dec
ficoms
hlt
push
lahf
xchg
leave
add
sub
push
mov
xor
mov
mov
call
bt
jmp
sahf
loope
repnz
mov
add
sbb
sbb
mov
faddl
test
mov
in
pop
mov
out
mov
mov
lcall
repnz
cmp
ds
cmp
fiaddl
add
mov
arpl
fwait
aad
xchg
cmp
push
mov
mov
and
mov
loope
adc
out
aas
inc
xor
add
lods
push
sbbb
adc
fidivrs
add
icebp
insl
sub
pop
cmp
xor
mov
je
and
push
sub
xchg
negb
popf
nop
ja
lods
sti
icebp
push
ffree
imul
out
sub
int3
mov
shl
mov
mov
arpl
outsl
add
test
mov
aad
aad
das
shlb
imul
pop
push
and
jae
pop
lea
ja,pt
xchg
jns
sbb
sub
cld
xchg
imulb
aad
or
stc
repnz
popf
pop
cmp
in
xorb
insb
hlt
mov
jbe
fs
shlb
test
or
lret
mov
pop
sbb
mov
pop
cmp
vpmulhw
sub
sbb
jp
and
rep
ss
and
addr16
xchg
push
or
push
mov
dec
das
mov
aaa
lcall
mov
adc
cmp
pushf
mov
mov
pushf
call
add
shl
cmc
mov
pushf
jmp
inc
movb
pusha
pushl
inc
mov
lea
jmp
adc
call
pop
lahf
divb
lock
add
jno
movsb
cmp
stos
add
mov
cwtl
int
aas
out
adc
mov
daa
bound
movsl
pushf
xor
ret
stos
stos
xchg
mov
packsswb
xor
ljmp
jne
and
cmp
cmp
cmc
imul
jmp
lea
ja
and
sub
xor
mov
add
add
sbb
mov
and
call
push
call
pusha
cmp
call
mov
call
add
call
push
cmp
call
pushl
lea
jne
jbe
pusha
stos
pushf
mov
mov
pusha
lea
jmp
clc
clc
stc
sub
call
lea
jae
cmc
push
mov
bt
xor
push
call
movzwl
clc
mov
cmp
stc
clc
pusha
add
lea
jp
mov
push
pushf
cmc
call
call
setns
mov
pushf
jmp
cltd
pop
je
dec
and
jge
jb
popa
jp
push
jb
cld
and
push
int
hlt
jge
push
xchg
popa
jae
icebp
stos
bound
push
cld
sti
sbb
cmp
jns
cmp
or
movl
add
sbb
cli
or
es
cli
in
iret
setg
sarl
aas
std
insb
or
pusha
mov
dec
movb
cwtl
lret
ret
andb
push
adc
fwait
adc
fs
notb
cmp
mov
pusha
pushf
pushf
mov
pushl
ret
jmp
lea
call
call
leave
or
mov
xchg
fnsave
mov
push
hlt
dec
fs
xchg
push
mov
push
das
pop
sbb
imul
jnp
or
cmpsb
or
xchg
push
sarl
das
data16
cmpl
lock
pushf
pop
mov
or
mov
dec
push
adc
cmp
ret
cmp
andb
mov
div
enter
cmpsb
icebp
clc
mov
retw
repz
in
ja
mov
push
jnp
mov
scas
jb
call
jns
xchg
inc
aam
jg
fnstcw
cmp
das
gs
rorl
cmp
sub
sahf
rorl
cmpb
or
mov
mov
imul
inc
and
mov
hlt
out
decl
xchg
mov
ljmp
jno
push
pushf
call
movl
pushf
pushf
lea
jmp
mov
fcmovne
scas
sbb
fistpll
xchg
imul
shrl
stos
pop
push
test
and
cmp
dec
sbb
inc
cmp
sub
cmpsl
mov
push
cmpb
push
or
fwait
cmpb
push
pop
aaa
pop
cmp
jne
dec
fsubl
stos
orb
xchg
int3
mov
hlt
cmpsb
dec
push
cwtl
dec
es
adc
ret
pop
imul
int
outsl
outsb
push
or
jnp
jo
cmp
sbb
shll
push
imul
dec
jecxz
call
fists
mov
adc
jne
jecxz
sub
mov
cmp
daa
sahf
fwait
rorb
cmp
push
jmp
xor
bt
jmp
pusha
pusha
movb
movl
push
push
lea
jmp
jg
rcl
cmc
push
mov
mov
cwtl
shrd
pushf
sub
jmp
lea
movl
movl
call
pushf
call
loopne
jl
xchg
and
and
int3
add
inc
fidivs
dec
imul
repnz
mov
xorb
jp
shrb
mov
xchg
mov
jecxz
jle
scas
arpl
pop
cmp
clc
popf
cld
pop
cld
sti
pop
cld
pop
sti
pop
cld
mov
push
mov
xchg
iret
call
bt
bt
adc
mov
push
and
cmc
pusha
call
push
dec
clc
push
neg
pusha
cmc
test
shr
call
stc
cmc
repnz
call
add
sub
iret
xchg
mov
and
xchg
imul
xor
andb
lock
fsts
ljmp
sbb
mov
xorb
sti
inc
popa
ret
mov
mov
push
inc
loop
fdivrl
arpl
insb
push
jbe
aas
stos
dec
scas
sbb
push
outsl
push
aad
sub
sub
xchg
mov
outsl
repz
mov
stc
fucomp
mov
sbb
test
fistpll
pushf
mov
xor
aam
popa
iret
mov
jmp
stos
or
lcall
dec
mov
loopne
and
cmp
out
loop
lock
push
mov
sub
ret
or
inc
mov
push
loop
add
or
xchg
fcoms
push
cmp
xchg
pop
cmp
adc
ror
fwait
ds
iret
mov
pop
sub
and
lock
out
inc
mov
jbe
xor
jg
rcrl
xchg
pop
cmc
dec
ret
lods
sbb
dec
sbb
cli
test
cli
repnz
dec
dec
clc
mov
and
fs
dec
xchg
btsl
dec
aad
or
jne
inc
rorl
out
jl
cmp
xchg
pusha
dec
stc
cmp
fistl
lcall
leave
xchg
xor
add
adc
cmp
sbb
xchg
lods
jg
cmpsl
adc
aad
mov
les
sub
cmpsl
outsl
test
sbb
das
pop
mov
scas
cmp
add
mov
sahf
data16
or
jne
adc
jl
push
idivb
insb
xor
mov
mov
push
mov
fadd
push
pop
dec
arpl
bound
in
sub
lds
adc
or
xchg
arpl
enter
outsl
mov
sub
gs
dec
push
push
add
pop
cltd
xchg
jae
iret
clc
ljmp
out
jecxz
adc
stc
iret
jecxz
pop
mov
push
in
ret
and
arpl
loopne
pusha
rorb
mov
shll
mov
cmp
shll
sahf
sub
jno
sbb
add
test
fwait
lahf
mov
mul
cmp
mov
arpl
inc
enter
adc
jns
ds
mov
inc
cmp
loopne
jl
cmp
daa
sahf
jge
hlt
pop
ror
adc
mov
fldt
je
jns
inc
call
popf
or
adc
lock
enter
push
mov
inc
ja
hlt
imul
xchg
cs
cmp
incb
sbb
icebp
daa
adc
arpl
sub
inc
test
push
sysret
fsts
jmp
inc
bound
or
out
shrb
xchg
in
jb
mov
or
stos
push
scas
sbb
jle
cmc
aaa
lahf
popf
xor
pop
push
movsb
cld
xor
mov
sti
imul
jg
pop
in
jg
cmpsb
clc
mov
gs
xchg
pop
cmpsl
sarl
out
mov
cmp
addl
faddl
mov
jg
fsubs
add
dec
test
dec
and
movsl
repz
cmp
clc
mov
outsl
xor
out
xor
jnp
test
pop
adc
mov
dec
sahf
xor
xchg
sbb
mov
jnp
loop
jo
jns
sbb
sti
mov
sti
out
xor
stos
fbstp
xor
shll
jmp
enter
add
add
movsl
sbb
mov
cmp
xchg
scas
jnp
inc
rcll
cli
daa
pop
jb
and
jno
and
adc
dec
pop
cmp
pushl
lea
jne
pushf
pusha
pushfw
popw
and
or
jmp
int3
popf
pushf
push
movl
call
outsl
xrelease
xor
lahf
jae
data16
cs
mov
mov
mov
pop
push
lds
out
pusha
cmc
sbb
jno
popa
fstpt
jo
or
or
movsb
fld
mov
aas
xchg
aad
mov
or
mov
cmp
cmp
fisttpll
sahf
arpl
push
stos
and
in
mov
mov
xchg
inc
sbbb
and
and
mov
jecxz
adc
outsb
jmp
and
shlb
outsb
pop
int
test
xchg
and
mov
lock
lcall
pop
cmp
pushf
pusha
movl
push
jmp
rcl
mov
jmp
jo
dec
xchg
pop
testb
test
fcomi
mov
mov
add
inc
arpl
cmp
add
push
pop
orb
pusha
cmc
stc
pop
or
outsb
push
les
xor
aam
ss
dec
inc
sbb
jecxz
adc
insl
aaa
roll
pop
jo
cmovbe
cmp
scas
call
pushf
fwait
shrb
cld
jno
in
push
mov
clc
push
inc
lock
jle
mov
clc
in
push
daa
iret
scas
sahf
ljmp
scas
lea
mov
add
mov
cmp
pop
pop
es
and
dec
jg
popf
push
cmp
or
loop
cmp
add
add
fs
das
ret
pop
xor
sarb
mov
push
mov
fcom
subl
inc
imul
sahf
mov
inc
mov
es
pop
cmp
sarb
aad
add
dec
push
lahf
hlt
push
movsl
xorl
push
mov
jle
cmpsb
aad
mov
add
fsubr
imul
mov
xchg
inc
aaa
into
jno
sbb
repz
push
pop
adc
out
daa
shlb
cld
addr16
cli
sub
mov
fldz
out
pop
in
imul
mov
mov
into
lahf
inc
pop
dec
test
das
adc
sbb
mov
jecxz
add
jo
pop
pop
push
xchg
repz
fdivrl
push
push
mov
adc
ljmp
pop
cmp
lea
je
call
jmp
pushl
popl
stc
pushl
cmp
pushl
mov
movb
pushl
lea
ja
push
call
add
dec
outsl
arpl
inc
jb
gs
insl
xchg
dec
mov
mov
fisubrl
or
mov
xor
or
rcll
test
lods
test
xchg
fistl
xchg
into
sub
je
xchg
call
out
ss
lcall
mov
jl
mov
and
add
fs
jmp
xchg
fnstenv
dec
cwtl
fwait
mov
sar
inc
cltd
mov
out
push
lock
fidivrs
aam
repz
lcall
outsb
pop
adc
xlat
push
int
sahf
jns
iret
mov
xchg
ret
xchg
mov
ds
inc
adc
adc
or
pop
in
iret
scas
lds
adc
test
pusha
cmc
push
icebp
dec
sub
inc
sub
jmp
xchg
jbe
mov
or
dec
cld
mov
gs
xchg
dec
enter
and
sbb
and
jae
call
pusha
lea
je
jnp
pushf
cmp
push
pusha
lea
jne
push
mov
inc
pusha
pusha
inc
pushf
movb
push
pushf
lea
jmp
test
and
and
hlt
dec
daa
fnstenv
call
out
test
inc
xlat
xor
cltd
cmp
aam
testl
mov
rclb
jae
jne
clc
shll
jne,pn
aad
sbb
shrl
es
cltd
jb
mov
inc
sub
cld
xor
pop
mov
mov
pop
cmp
movb
cmp
movb
lea
jae
rcl
rcr
mov
movzbl
cmc
mov
lea
neg
mov
cmp
sub
clc
call
xor
add
or
pushl
sti
xchg
aam
dec
push
repnz
gs
xchg
sub
mov
add
cmp
lahf
push
ss
dec
xchg
xchg
int3
ljmp
lret
mov
xchg
dec
jne
ljmp
xor
mov
add
pop
xchg
daa
jg
shll
sbb
nop
cmpsl
mov
cmp
or
out
xchg
mov
lea
bound
xchg
aad
push
push
push
test
neg
mov
pop
std
jae
call
cmpb
adc
and
inc
out
or
aam
fnsave
dec
xor
js
test
push
cmpsl
fwait
and
or
pop
xor
and
lcall
jae
mov
bound
in
or
mov
fcoms
lods
cmpsl
sahf
js
cmp
popf
and
mov
imul
pushf
test
lret
daa
cmp
or
out
xchg
xor
lcall
push
cltd
push
mov
fsts
or
pop
xchg
repz
mov
cltd
pop
popf
jns
sahf
mov
pop
or
inc
push
mov
insb
pop
out
movsb
sbb
or
dec
jecxz
or
mov
mov
cmpsl
loopne
push
pop
sarl
cs
pop
cmp
and
inc
cmp
add
sub
lcall
mov
aad
sbb
push
xlat
fists
xor
fadds
adc
jae
jecxz
and
out
jno
imul
cwtl
xchg
adc
pop
int
xchg
mov
cmp
mov
pop
xor
cmp
repz
call
rcrl
sub
jmp
mov
das
and
mov
push
call
jo
lods
or
xchg
in
hlt
sub
sub
xchg
adc
icebp
mov
jns
ljmp
adc
cmpb
cmp
sub
sbb
imul
aas
sbb
xchg
xor
std
das
pop
sub
xchg
mov
mov
outsl
cmp
arpl
lahf
cld
mov
popa
fidivs
sub
ror
inc
jnp
xor
sbb
xor
xlat
fadds
cmpsl
push
mov
jl
stos
movsb
jns
cmp
pop
mov
movzbw
not
jmp
rclb
out
xchg
inc
mov
push
imul
out
out
sbb
les
sub
pop
or
xchg
fs
pop
push
ljmp
jbe
fwait
cmp
dec
or
cmp
insb
cltd
adc
call
loope
inc
shl
cwtl
std
jmp
or
push
rorb
mov
insb
xchg
jne
stos
mov
adc
stc
sbb
sbb
sbb
mov
xchg
orl
add
xor
pop
cmp
cmp
jmp
push
cmpb
pusha
jmp
jl
imul
cmp
bound
out
or
cli
not
mov
sub
sub
pop
pop
mov
ret
jnp
into
add
fcomps
mov
out
add
push
adc
sub
fiaddl
cld
insb
fcoms
imul
sbb
pop
gs
mov
ret
ret
jl
in
jmp
jl
stos
mov
mov
es
cmp
adc
add
sub
mov
in
data16
fwait
xchg
div
test
aad
pop
push
int3
or
cmp
lea
jae
pusha
sub
call
movzbw
mov
not
cmp
bts
mov
mov
shl
push
push
ror
mov
call
pusha
call
je
adc
movsb
xor
js
mov
sahf
jbe
sub
testl
jmp
insb
cmp
ljmp
dec
sar
cmp
mov
in
shl
rclb
lea
add
push
clc
push
mov
xlat
loope,pn
hlt
fwait
jecxz
cmpsb
outsb
cmp
inc
sub
or
repnz
jge
movsb
loope
mov
xor
lcall
fadd
sbb
pop
in
cmpsb
pop
xchg
into
dec
push
adc
cmp
mov
mov
jmp
pop
lcall
or
cmp
call
cmp
push
add
jle
neg
sub
call
pusha
pusha
pushf
mov
pushf
pushf
mov
pushl
ret
lods
lock
jmp
cmp
dec
ja
cmc
loop
xor
inc
fdivs
xchg
rorl
jp
sbb
and
stc
jb
add
mov
jecxz
std
push
leave
sarl
test
fninit
xchg
add
sgdtl
pop
xor
mov
and
sub
fucomip
mov
fldt
rorl
mov
int
ljmp
mov
movsb
bound
in
stc
xor
enter
push
jno
push
sub
orl
adc
adc
in
xchg
mov
xor
data16
push
dec
cmp
xlat
mov
jmp
cwtl
pushf
iret
popa
dec
out
push
xor
xor
lret
adc
lcall
nop
cmpsl
inc
cmp
mov
mov
out
es
xchg
adc
ret
jmp
pcmpgtb
lcall
dec
or
iret
es
ficoms
fsubr
setbe
mov
pusha
neg
push
mov
inc
pushf
bt
clc
rol
mov
dec
stc
pushf
neg
cmc
push
pushw
popfw
call
pushf
movw
lea
call
push
lea
jae
setno
mov
pushf
inc
not
mov
lea
push
lea
call
call
pusha
lea
jne
movzbw
movb
cwtl
setge
push
sets
movsbw
movzbw
mov
lea
pushf
movl
call
pushf
mov
push
test
cmc
cmp
add
pusha
push
lea
jmp
lea
jnp
pushf
mov
pusha
call
mov
pushf
mov
movb
push
lea
jmp
movb
mov
push
push
pushl
lea
jmp
std
mov
jmp
movl
pushf
pushf
push
mov
mov
movl
pushf
pushl
ret
mov
movb
lea
jmp
pushf
jmp
ror
bts
and
adc
jmp
pushf
popl
mov
pushl
popl
mov
pushf
movb
lea
jmp
btc
mov
cmc
cmp
cmp
cmp
sub
jmp
neg
neg
mov
pushf
sub
movb
jmp
pushf
lea
jno
push
pusha
pushf
pusha
mov
jmp
movb
pushf
popl
call
call
pusha
mov
pushf
lea
jmp
mov
jmp
rep
bsf
rcl
shld
shld
mov
bt
shrd
mov
cmc
pushl
popf
pushl
pushl
pushf
push
lea
jmp
pusha
lea
jl
push
jmp
mov
pusha
pushf
mov
lea
jmp
call
push
setae
movzbw
mov
movl
pusha
call
pusha
pushl
push
mov
mov
call
ror
lea
inc
dec
not
dec
sar
movsbl
xor
movsbw
adc
xor
pop
cmc
shrd
movzbl
jmp
mov
call
lea
jl
pushf
mov
pushf
pushf
pushf
lea
jmp
sub
test
cmc
and
pusha
call
pushl
popl
pushf
pushl
pushl
lea
jmp
mov
jmp
mov
jmp
movb
pushf
mov
push
pushf
popl
jmp
movzbl
sar
mov
cmc
cmc
add
pushf
pushl
lea
jmp
jmp
rol
test
call
shr
push
mov
pushf
movb
pushf
popl
mov
call
jmp
mov
mov
lea
jmp
mov
pushf
call
cmp
pushf
cmc
neg
bt
rol
cmp
test
add
cmc
bt
mov
call
xchg
jmp
add
pushl
push
mov
pusha
mov
push
push
lea
jmp
jmp
mov
pushf
mov
movb
call
jmp
mov
neg
mov
add
ror
stc
bt
mov
cmc
add
call
shr
mov
pushf
pusha
mov
pushf
pushf
pushf
popl
pushl
push
call
jmp
dec
clc
test
xor
bt
bt
clc
cmc
sub
call
movsbw
call
mov
rcr
ror
mov
pushf
add
mov
push
mov
lea
jmp
pushf
call
jmp
repz
popl
jmp
daa
mov
test
call
jmp
mov
push
push
mov
pushl
ret
mov
setbe
rol
mov
cmp
clc
sub
push
mov
call
call
mov
pushl
push
pushf
lea
jmp
add
mov
cmc
sub
shl
test
mov
cmc
jmp
sub
test
clc
pushf
sub
jmp
jmp
movw
jmp
push
mov
mov
mov
mov
push
jmp
cld
mov
jmp
btr
pusha
not
pushf
push
sub
ror
call
shl
stc
xor
btr
call
lea
mov
push
call
inc
stc
push
lea
mov
call
pushl
popl
push
pushf
pushl
lea
jmp
ror
pushf
dec
clc
cmp
stc
jmp
pushl
mov
call
jmp
push
pushf
lea
je
push
mov
pusha
lea
jmp
call
btc
ror
sub
sbb
and
inc
mov
call
call
call
sbb
lea
not
mov
bt
stc
push
call
call
call
push
movb
mov
push
repz
popl
jmp
inc
cbtw
add
movzww
test
clc
pushf
jmp
jmp
bt
add
call
call
movb
call
call
sub
push
push
pusha
cmc
mul
call
clc
ror
bsr
shld
not
cmp
cmp
add
sub
btc
bswap
rcl
ror
pusha
call
movb
inc
call
pushf
popl
push
push
push
mov
pushl
popl
pushl
pusha
push
lea
jmp
lea
jg
popl
pusha
pushf
lea
jmp
push
pushf
repz
popl
pusha
call
cmp
pushf
mov
shr
pusha
call
pushf
jmp
or
clc
xor
call
pushf
shr
not
test
movzww
pushf
xchg
jmp
call
mov
push
mov
pushl
mov
pushf
pushf
mov
call
rol
pushf
pusha
movzbl
clc
jmp
cmc
add
call
pushl
mov
mov
push
call
mov
pushl
mov
lea
jmp
mov
push
pusha
lea
jp
pushf
repz
popl
push
push
pushf
call
pushf
mov
pusha
pushl
pushl
mov
movb
push
lea
jmp
pushf
mov
pushf
pusha
lea
jmp
jmp
shrd
push
mov
pusha
pushf
popl
push
jmp
mov
mov
jmp
pushf
mov
push
mov
call
pushf
pushf
xor
mov
mov
cbtw
clc
cwtl
cmp
bt
mov
stc
sub
call
seto
mov
jmp
add
pushf
mov
movl
lea
jmp
add
sub
shr
sbb
btr
mov
pushf
adc
sub
bts
sub
rcr
pushf
not
pop
rol
ror
movzbw
rol
shrd
inc
cmp
sub
rol
pusha
stc
movzbl
movzbw
sub
setl
mov
call
pusha
jmp
mov
pushf
jmp
mov
push
movb
repz
popl
push
mov
push
mov
pushf
mov
pusha
mov
mov
pusha
pushf
call
pusha
divl
pushf
pushf
jmp
mov
pushf
lea
jmp
setns
mov
shr
rcr
shl
sar
mov
clc
jmp
call
mov
bt
sub
cmc
bt
clc
movb
ror
cmc
mov
call
pushf
popl
movb
pushf
lea
jno
popl
pushf
mov
pusha
push
lea
jmp
lea
pushf
pusha
call
mov
sar
mov
jmp
mov
pushf
pushl
lea
jmp
pushf
pushl
popl
pushf
pushf
pushf
pusha
lea
jmp
pushf
mov
pusha
mov
movb
mov
jmp
pushl
pusha
mov
pushf
push
pushl
pushf
lea
jmp
movb
pushf
movw
mov
jmp
mov
movb
push
mov
push
lea
jmp
xor
shrd
call
bswap
and
or
bts
mov
stc
adc
add
jmp
mov
pushf
call
push
and
pushf
pushf
movb
pushl
mov
push
jmp
bt
test
pushf
pushf
bswap
clc
sub
mov
stc
pushf
add
call
jmp
mov
movw
jmp
call
xadd
btr
ror
rcr
mov
bswap
and
and
rcl
mov
push
bt
not
bt
stc
not
clc
pusha
and
pusha
mov
lea
ja
push
mov
push
pushf
popl
call
pushf
bt
sbb
mov
jmp
jmp
call
jmp
jmp
inc
mov
cmp
clc
cmc
add
push
mov
pushf
pushf
popl
pushf
push
pushl
popl
pusha
push
pushf
mov
lea
jmp
pushf
test
pushl
popl
clc
test
pushf
add
jmp
call
inc
push
pusha
not
push
dec
pushl
jmp
mov
pushf
mov
movb
lea
jne
setb
btr
mov
mov
pusha
jmp
mov
pushf
mov
mov
mov
pushf
pushf
lea
jmp
xchg
rcr
rol
test
mov
adc
call
dec
cmc
clc
pushf
add
movb
jmp
call
add
pusha
pushf
lea
jmp
push
pushf
popl
call
repz
popl
call
push
mov
mov
mov
push
lea
jmp
clc
adc
mov
ror
cmp
add
lea
add
or
rcr
sub
shl
lea
jmp
mov
aas
inc
sub
mov
push
sub
mov
mov
push
lea
jmp
pushf
call
test
stc
not
pusha
push
cmc
not
mov
stc
push
push
sub
pushf
mov
jmp
pushl
popl
pushf
movw
pushf
lea
jmp
call
pushf
pushf
mov
mov
movb
mov
pushf
call
push
mov
push
mov
push
pusha
mov
pushl
jmp
inc
btr
lahf
shrd
mov
adc
mov
bt
call
push
pusha
mov
push
pushf
mov
jmp
lahf
lahf
lea
mov
pusha
mov
jmp
pushl
popl
mov
pushf
push
lea
jmp
mov
push
push
repz
popl
jmp
push
mov
push
mov
jmp
std
pushl
popf
push
push
push
lea
jmp
bswap
mov
movzbl
pushf
dec
bswap
jmp
call
jmp
push
mov
call
mov
jmp
div
mov
push
pusha
mov
call
mov
call
cmp
bswap
pushf
cmp
add
call
mov
jmp
mov
mov
pushf
pushf
movw
mov
lea
jmp
jmp
cmc
test
and
cmp
cmp
pushl
lea
jne
test
dec
stc
xorb
push
pusha
mov
pushl
lea
jmp
pushf
pusha
lea
jo
mov
push
push
push
lea
jmp
mov
pushl
mov
pushf
push
mov
pushf
movb
pushf
mov
call
cmc
call
sbb
pushf
mov
stc
neg
add
push
pushf
call
xor
mov
movb
btc
mov
rol
inc
mov
pusha
pushl
popf
call
pushf
pushf
movl
jmp
call
pushf
mov
pushf
lea
jmp
pushf
mov
pusha
push
pushl
pushf
lea
jmp
call
mov
movw
lea
jmp
pushl
mov
mov
jmp
neg
aad
aam
sbb
mov
bt
test
bt
clc
add
pushf
lea
jp
mov
call
pushf
add
call
xor
jmp
jmp
call
mov
jmp
test
add
pusha
movl
push
push
lea
jmp
lea
jb
push
mov
pushf
lea
jmp
pushl
popl
push
pushf
pushf
lea
jmp
jmp
mov
jmp
movzbl
ror
push
shrd
rcl
mov
test
bt
cmc
push
sub
pusha
call
mov
mov
repz
popl
mov
xchg
movsbw
movzbw
xchg
not
pusha
movsbw
inc
xchg
pop
movzbw
movzbw
xchg
bswap
movsbw
xchg
pushf
jmp
pushf
pushl
pushf
dec
bt
xor
pusha
stc
cbtw
jmp
mov
pusha
add
mov
pushf
pushf
lea
jmp
jmp
or
rcr
lahf
mov
cmc
jmp
rcr
rcl
neg
notl
shl
sub
das
add
mov
test
call
test
mov
shl
call
mov
inc
movb
call
pushl
movl
lea
jne
push
mov
mov
mov
pushf
push
push
lea
jmp
pushf
test
stc
not
mov
cmc
add
pushf
movb
lea
jmp
call
jmp
add
add
mov
pusha
jmp
pushf
mov
call
not
shr
mov
clc
call
clc
cmc
xor
push
push
jmp
mov
mov
movb
movw
lea
jmp
decl
call
sub
call
mov
pushf
pushl
repz
popl
jmp
jmp
pushf
mov
jmp
stc
pushl
pusha
sub
push
pushf
clc
stc
rol
mov
push
push
inc
call
call
not
inc
cmc
rdtsc
mov
bt
shr
cmc
pusha
mov
bt
mov
add
jmp
pushl
popl
pushf
pushf
lea
jmp
pushl
mov
push
call
mov
pushf
popl
pusha
push
push
jmp
pushf
mov
call
mov
call
sub
pushl
movw
mov
pushf
movb
movb
mov
lea
jmp
pusha
mov
pusha
lea
jmp
movsbw
btr
sbb
mov
neg
btr
movsbw
mov
cmp
add
pushf
mov
pusha
mov
push
lea
jmp
stc
cmpl
jmp
mov
pusha
lea
jmp
adc
add
sub
add
addb
leave
jg
cmp
addb
mov
dec
sarb
adc
add
enter
leave
jg
cmp
jg
js
jg
mov
addb
sub
add
addb
mov
add
lcall
hlt
lcall
hlt
sub
add
int
add
jg
mov
sarb
sub
jg
movsb
or
jg
je
addb
leave
jg
cmp
jg
cmp
jg
lods
mov
add
jg
add
addb
sahf
jg
or
jg
enter
in
addb
mov
add
add
jg
mov
addb
sahf
jg
cld
mov
jg
sbb
jg
sbb
jg
sbb
addb
mov
and
jg
js
addb
sub
add
jg
mov
jg
xor
jg
mov
addb
int
add
addb
lock
andb
add
jg
js
jg
clc
pop
addb
or
add
xchg
jg
or
jg
inc
sub
add
addb
lcall
hlt
lcall
hlt
sub
add
mov
jg
lods
mov
jg
insb
scas
jg
loopne
jg
js
jg
clc
and
add
sub
add
add
add
jg
enter
sub
addb
mov
and
jg
insb
cwtl
jg
sbb
jg
or
jg
inc
lret
jg
fs
jg
lods
out
add
jg
cmp
jg
sbb
jg
sbb
jg
sbb
addb
loop
add
pushf
jg
clc
out
add
addb
and
add
addb
in
jg
insb
add
add
add
in
jg
mov
jg
adc
add
sub
add
push
addb
in
jg
insb
out
add
addb
push
addb
loop
add
sub
add
lcall
hlt
lcall
hlt
push
addb
and
add
addb
leave
jg
cmp
jg
adc
jg
pushf
loop
add
mov
addb
adc
add
in
jg
insb
xchg
jg
mov
adc
add
xchg
jg
mov
adc
add
jg
loopne
jg
xchg
mov
jg
mov
and
add
jg
sbb
jg
sbb
jg
sbb
jg
mov
call
jg
jl
addb
mov
addb
leave
jg
cmp
addb
scas
jg
loopne
jg
cld
mov
add
mov
and
jg
inc
and
add
jg
mov
lret
jg
fs
jg
cmp
addb
mov
jg
mov
enter
mov
add
lcall
hlt
lcall
test
addb
sbb
jg
or
addb
mov
add
sarb
adc
add
jg
or
jg
jo
jg
jo
jg
js
jg
movsb
sub
add
pop
addb
add
add
add
add
add
jg
mov
addb
or
jg
movsb
mov
jg
sbb
jg
sbb
jg
sbb
jg
mov
or
add
addb
movb
lea
call
jmp
cmc
clc
cwtl
stc
call
jmp
mov
pushl
pushf
jmp
sar
inc
and
movzbw
mov
pushf
cmp
jmp
call
cmp
shr
clc
pusha
pushf
jmp
bt
mov
cmc
cmc
call
mov
jmp
pushl
pushl
mov
jmp
pushf
lea
ja
jmp
seto
mov
pusha
call
call
pushl
repz
popl
jmp
call
mov
movzbw
mov
jmp
bt
pushf
add
pushl
mov
mov
lea
jmp
call
pushf
push
mov
mov
pushl
mov
pushf
pushf
push
push
lea
jmp
call
bswap
not
mov
lea
inc
movzbw
inc
jmp
pushf
push
call
repz
popl
pushf
pushf
mov
call
stc
mov
call
cmc
rdtsc
stc
sub
pushf
mov
mov
jmp
ror
mov
pushf
adc
mov
push
clc
test
bt
xor
jmp
pushf
mov
pushf
push
mov
lea
jmp
pusha
mov
call
pushf
mov
pushf
jmp
or
mov
pusha
stc
push
call
pushf
mov
jmp
pushf
repz
popl
movb
call
pushf
push
mov
movw
pusha
push
mov
mov
pushl
mov
pushf
mov
pushf
lea
jmp
movw
movl
pushf
mov
pushl
pushf
pushl
ret
call
call
lea
jne
cmc
cmp
bt
xor
call
movb
clc
sub
mov
call
jmp
pushf
mov
movl
mov
movw
lea
jmp
mov
push
mov
mov
call
cwtl
mov
mov
pusha
mov
pusha
mov
mov
lea
jmp
mov
pushf
jmp
shl
aam
mov
bsf
cmp
mov
cmc
setne
mov
cmp
jge
add
test
cmp
shld
push
movb
pusha
mov
mov
pusha
pushl
jmp
clc
lea
shl
btc
mov
cmp
bt
bt
add
push
lea
jmp
pushl
pushl
mov
push
jmp
shl
not
stc
add
bsf
adc
lea
btc
shr
call
pushl
jmp
call
sar
dec
shrd
and
jmp
mov
call
add
test
cmc
cmc
push
sub
call
pushl
mov
call
push
push
pushl
mov
call
pusha
movb
call
call
mov
mov
push
call
lea
shld
mov
bt
add
pusha
call
mov
push
pushf
popl
pusha
mov
pushf
call
stc
cmp
jmp
mov
pushf
pusha
push
push
pushl
ret
pushf
pushl
popl
mov
mov
lea
jmp
neg
bt
add
not
pushf
call
stc
mov
push
call
mov
pusha
lea
jmp
call
mov
jmp
call
pushf
pushl
pushl
mov
mov
pushl
jmp
inc
call
mov
pushl
jmp
sar
xor
xor
add
cmp
lea
movzbw
sub
btc
pushf
shld
lea
btr
mov
shl
bt
add
inc
or
rcr
mov
bsf
movsbw
stc
sub
sub
bsf
and
sub
btc
not
call
repz
popl
mov
mov
mov
movb
mov
pushf
mov
pusha
push
movw
call
mov
mov
lea
jmp
pushf
repz
popl
pushf
pushf
call
pushf
mov
pushf
movb
pushf
lea
jmp
pusha
pushl
movb
mov
mov
push
pushf
popl
call
lea
cpuid
clc
cmp
sub
call
movb
pushl
popl
push
mov
movb
lea
jmp
call
movb
mov
mov
mov
mov
call
mov
pushf
push
mov
pushl
jmp
mov
movw
jmp
pushf
ror
test
add
mov
push
mov
push
pushf
movb
pushl
pushl
ret
push
pusha
mov
pusha
push
push
lea
jmp
mov
pushl
mov
lea
jmp
push
pushf
mov
pushl
pushf
push
lea
jmp
mov
pushl
push
lea
jmp
lea
jne
clc
cmc
xor
jmp
mov
stc
pusha
cmc
or
lea
jge
je
cmp
bt
cmc
stc
xor
clc
cmp
xchg
push
pushf
mov
pushl
sub
push
lea
jne
call
call
call
call
pusha
not
cwtl
mov
bts
mov
cmp
cmc
add
jmp
pusha
mov
mov
mov
push
jmp
mov
lea
dec
not
movzbw
pushl
not
jno
setge
push
lea
mov
movzbl
setnp
movzbw
inc
pusha
shr
sar
xor
stc
stc
lea
stc
add
movzbw
sar
movsbw
lea
pusha
bt
clc
sub
rcl
inc
neg
mov
shrd
mov
setb
call
pushl
pushl
popl
push
lea
jmp
pusha
call
pushf
pushf
popl
mov
mov
call
mov
push
mov
pushf
jmp
sub
call
jmp
mov
mov
mov
movb
mov
mov
pusha
movb
pushl
lea
jmp
rol
stc
rol
lea
not
sub
test
call
pusha
pushl
mov
pushf
movb
pushl
lea
jmp
cmc
sub
pusha
clc
cmc
rol
jmp
sub
mov
je
mov
pushf
pusha
pushf
popl
mov
mov
xchg
movzbw
movsbw
xchg
mov
pusha
lea
cld
mov
cld
jmp
jmp
push
xchg
call
pushl
popl
pushf
pushl
push
pushf
lea
jmp
pushf
mov
pushf
jmp
mov
push
movw
call
movb
mov
mov
lea
jmp
jmp
mov
mov
movw
lea
jmp
pushf
mov
pushl
pusha
jmp
pushf
pushf
lea
ja
push
pushf
call
lea
pushf
cld
movl
mov
lea
jp
pusha
movzbl
push
mov
pushf
cld
mov
jmp
jmp
mov
call
dec
mov
movzbl
jmp
stc
pusha
sub
test
clc
test
pusha
xchg
call
mov
bt
pushf
mov
shr
shr
mov
clc
cmp
sub
pusha
bt
jmp
cld
call
pushf
pushl
popl
pusha
pushf
push
lea
jmp
movw
pusha
mov
pusha
jmp
mov
push
xchg
mov
jmp
pushf
call
pushf
popl
pusha
pushl
call
shl
rol
test
movzbl
test
xor
pusha
stc
pusha
clc
ror
jmp
stc
lea
call
jmp
sub
call
movb
jmp
pushf
pushf
mov
pushf
push
lea
jmp
mov
mov
movw
pushf
popl
call
sub
jmp
mov
mov
lea
jmp
stc
push
stc
cwtl
pushl
cmp
sub
mov
mov
mov
movb
push
lea
jmp
cmc
bt
pushl
mov
cmp
sub
jmp
push
jmp
shl
mov
shrd
movsbw
mov
push
mov
add
pushl
push
pushf
movb
mov
movb
lea
jmp
clc
bswap
sub
mov
and
sub
sbb
stc
mov
pusha
add
pusha
jmp
cmc
xor
cmp
stc
pushf
stc
xchg
call
bts
sub
bsf
add
mov
cmc
add
test
add
call
mov
ror
rol
not
mov
stc
cmc
test
add
call
xor
lea
jge
pusha
pushf
push
dec
pushf
call
pusha
mov
push
lea
jl
pusha
mov
call
call
call
pushf
dec
call
stc
shl
jmp
push
mov
jmp
inc
rol
clc
mov
neg
cmc
mov
call
push
movl
pushl
popl
mov
mov
movb
lea
jmp
pusha
mov
movb
mov
movb
push
lea
jmp
sbb
neg
mov
shrd
or
mov
test
cmc
jmp
lahf
mov
sar
stc
inc
cmp
mov
bt
sub
jmp
mov
pusha
lea
jmp
jmp
mov
mov
jmp
pusha
call
cld
push
pushf
jmp
pusha
mov
jmp
pushl
popl
pushf
pushf
mov
push
lea
jmp
mov
jmp
pusha
call
stc
shl
cmc
call
neg
rcl
shl
neg
mov
rcr
rol
adc
xor
setb
pushf
inc
mov
sub
ja
neg
stc
not
rol
not
bt
add
or
lea
cmp
sbb
rcl
xor
movsbw
shl
mov
clc
pusha
add
call
mov
jmp
pusha
mov
jmp
jl
pusha
movb
pusha
lea
je
call
bswap
bswap
pushl
mov
pusha
jmp
pusha
mov
push
mov
mov
mov
pushf
push
mov
push
jmp
push
xor
pushf
stc
pushf
test
mov
pushf
sub
pushl
call
jmp
mov
mov
movb
call
add
mov
jmp
pushf
jmp
lahf
cwtl
mov
movsbl
mov
pushf
pushf
mov
push
pushl
ret
call
cld
pusha
rep
shrd
mov
bts
bsf
mov
stc
clc
pushl
popf
push
mov
mov
lea
jmp
push
pushf
mov
pusha
pusha
repz
popl
call
bt
push
not
cmc
add
pusha
clc
pushf
mov
sub
pushf
movb
mov
mov
lea
jmp
call
daa
mov
btc
clc
bt
pop
bsr
pop
sar
setns
sub
sete
pop
daa
aaa
pop
and
daa
pop
call
btc
jmp
pushl
mov
movl
pushf
movb
mov
lea
jmp
xchg
jmp
movb
pushf
popl
call
xchg
call
mov
mov
pushf
call
jmp
mov
mov
lea
jmp
mov
pushf
mov
call
jmp
movw
pushl
popl
push
pushl
lea
jmp
mov
mov
pushf
mov
lea
jmp
je
jmp
push
jmp
push
pushl
pusha
mov
mov
call
push
mov
movb
push
mov
repz
popl
jmp
pushf
push
rep
bts
std
pushf
mov
call
call
repz
popl
pushf
mov
call
shr
mov
clc
stc
push
sub
bt
clc
cmp
pushf
add
pushl
jmp
and
bsr
shr
mov
jmp
pushf
add
call
mov
mov
mov
pushl
lea
jmp
movb
rol
test
sub
call
add
push
pushl
pushl
lea
jmp
mov
call
pushf
pusha
call
mov
sar
mov
bt
call
pushl
jmp
mov
pushf
call
pusha
mov
pushf
mov
call
mov
pushf
sub
jl
bswap
clc
cmc
sub
pusha
add
test
not
test
clc
call
mov
pusha
call
cmc
add
clc
shld
call
not
lea
clc
test
cmp
pushf
call
pushf
mov
mov
mov
pushf
mov
movb
mov
mov
pusha
mov
lea
jle
push
pushf
movb
mov
mov
pusha
lea
jmp
jmp
pushf
popl
pushf
pushf
pushl
popl
pushl
lea
jmp
jle
push
jmp
movb
jmp
pushf
mov
jmp
push
mov
movsbl
pushf
bswap
jmp
pushl
jmp
lea
call
repz
popl
pusha
mov
pushf
call
pop
mov
pusha
mov
pushf
movb
jmp
bsr
mov
cmc
btr
mov
cmc
call
push
call
btr
btr
shl
or
mov
and
call
mov
test
movb
pushl
popf
movb
mov
lea
jmp
push
push
mov
pushf
mov
mov
movw
mov
pushf
mov
mov
push
lea
jmp
call
clc
test
sub
jmp
push
movl
jmp
push
pushf
mov
pushf
mov
pusha
movw
lea
jmp
xadd
rcr
mov
xor
mov
call
mov
cmp
bt
clc
sub
test
push
pushl
pushf
shl
lea
jns
push
mov
call
call
shrd
mov
adc
xor
cmc
cmc
mov
cmp
pushf
pushf
sub
test
mov
shl
pusha
mov
mov
pushf
popl
pushf
mov
push
pushl
popl
pushf
pushf
movl
lea
jmp
cmc
cmp
movb
sub
call
add
mov
lea
jmp
mov
push
push
lea
jmp
call
mov
pushf
mov
movb
mov
jmp
call
jmp
bsr
clc
sbb
neg
stc
rol
rcl
rcl
and
movzbw
add
clc
pusha
mov
pushf
add
movw
call
pushf
pusha
pusha
mov
call
