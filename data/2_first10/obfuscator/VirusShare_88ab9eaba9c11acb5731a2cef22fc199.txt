nop
jb
lea
mov
rclb
xchg
push
ds
shlb
sbb
shr
movsb
pop
test
cmp
lcall
jae
inc
or
sti
jmp
inc
mov
hlt
jb
nop
popf
jle
dec
ficomps
add
enter
push
into
cltd
jl
stos
shrb
sahf
inc
inc
iret
test
insb
lcall
mov
out
repz
push
push
and
movsb
mov
aam
mov
push
cmpsb
cmp
call
pop
adc
subl
pop
loopne
sub
jge
mov
push
nop
inc
fimull
xlat
fstp
and
push
lds
fs
xor
inc
sbb
adc
adc
imul
cltd
dec
jp
fsubrl
fbstp
push
mov
shlb
out
dec
mov
xorl
dec
aas
aad
inc
cmp
fwait
xchg
lock
inc
xchg
dec
aaa
mov
jp
insl
shll
adc
pop
loopne
rcrb
xor
addr16
imul
frstor
mov
shrb
cld
pop
les
add
cwtl
mov
repnz
nop
cmp
jb
inc
sub
jmp
and
enter
mov
scas
jecxz
aad
or
ljmp
mov
add
sub
push
fisttpl
inc
dec
movsb
dec
push
add
lcall
mov
dec
aam
je
fstp
jecxz
das
sub
pop
gs
cmc
int
loope
lahf
ret
adc
lea
push
xchg
mov
insb
inc
fwait
bound
xchg
or
fsubrs
mov
shl
dec
jo
mov
adc
jnp
inc
iret
pop
mov
data16
push
out
cltd
jbe
repz
xlat
jg
mov
dec
aas
ljmp
test
xchg
xchg
test
or
mov
imul
in
je
xorb
ret
sarl
inc
ret
loope
and
icebp
push
ljmp
xchg
jns
ss
lock
and
inc
pop
cli
pop
das
sti
jae
lods
xor
jb
cmp
into
stc
leave
jp
test
lret
mov
xchg
adc
sbb
xchg
loop
repz
das
xchg
add
std
pusha
xorb
xchg
aad
loopne
dec
dec
cmp
cmp
adc
pop
mov
das
sbb
sti
je
cmp
jb
dec
in
scas
mov
jle
stos
movsl
dec
lea
divl
push
push
rolb
fisubl
lret
mov
andb
mov
sub
push
xchg
jnp
test
adc
dec
pop
xchg
jo
leave
jmp
loop
or
pushf
movsb
sub
cwtl
and
shrl
xchg
scas
mov
cmp
xor
mov
hlt
stos
fs
inc
jb
movsl
push
aaa
lea
dec
inc
mov
and
ljmp
or
dec
jge
ds
or
inc
add
cmpsb
lea
loope
mov
push
mov
test
push
jno
dec
icebp
fnstsw
stc
jns
icebp
pop
mov
lahf
pop
sub
mov
into
jo
mov
adcb
jecxz
inc
cmpsl
cltd
adc
adc
mov
or
imull
sub
jge
pop
jno
outsb
fsubr
stc
sarb
in
or
les
mov
or
push
jb
ret
dec
sub
imul
or
aam
and
mov
xchg
jno
sti
das
inc
cmp
dec
sub
test
xchg
or
cmp
fcmovne
in
cltd
rcrb
call
aaa
rolb
dec
rcl
add
or
sti
and
jp
cmp
and
pushf
popf
cli
adc
movsb
fmuls
cmpsl
aaa
ds
in
xor
push
xor
push
or
stos
inc
fwait
dec
iret
mov
xchg
and
lcall
repz
cmpsl
fbld
les
inc
mov
xorb
ret
int3
dec
jg
je
jg
lds
sbb
pop
loope
pop
adc
push
inc
hlt
and
mov
xchg
test
jecxz
jno
lock
jecxz
lret
inc
cmp
scas
and
add
int3
push
sub
shl
out
shr
adc
xchg
push
or
or
repnz
repnz
push
ret
push
xchg
out
or
xchg
mov
into
mov
sub
xor
dec
jecxz
popf
call
lods
outsb
rolb
ds
sbb
dec
inc
ds
and
and
repz
xor
outsb
call
xchg
xlat
xchg
fwait
clc
fdivs
vunpckhps
jo
add
stc
outsl
mov
push
insl
das
testb
stos
addr16
add
inc
jg
lret
push
push
inc
xor
or
cwtl
lea
or
mov
frstor
lahf
xchg
data16
cmpsl
ret
or
xor
jmp
mov
jnp
ret
or
rcll
jno
and
push
and
adc
cmp
jmp
cmp
int3
push
and
push
jns
and
add
repnz
aas
push
scas
push
push
lcall
push
call
pop
inc
jns
nop
mov
jg
ja
dec
cs
insb
das
ja
xor
adc
push
loope
xor
out
inc
hlt
cmp
pop
or
xchg
jo
call
leave
or
xchg
pop
sbb
icebp
pop
pop
jno
jle
push
cmpsl
adc
inc
das
ficoml
inc
pop
jo
cld
mull
mov
pop
and
clc
adc
cwtl
inc
into
inc
fisubl
adc
xchg
pop
lahf
push
dec
mov
int
jecxz
push
ret
xchg
adc
test
cmp
cmp
not
sbb
pop
push
divb
loope
bound
adc
lods
bound
jb
shlb
ret
insl
fwait
rcrb
int3
add
sarb
cmp
andb
mov
add
inc
std
fadds
pop
pop
jae
pop
faddl
fs
dec
loop
or
cmp
gs
cmpb
inc
lods
dec
addr16
jge
jb
push
incl
scas
push
add
out
mov
repnz
dec
stc
sahf
add
xchg
pop
jno
or
cltd
ret
jne
xor
adc
push
ljmp
mov
pop
pop
out
das
ret
cmpsb
sbb
je
add
movsb
push
mov
cs
imul
push
push
or
lods
add
cltd
sbb
gs
mov
and
in
rcl
xor
aas
xlat
mov
sub
fsubrs
nop
lea
push
jecxz
adc
subb
cmpsb
jb
into
cs
jb
fildl
xchg
fidivrl
pop
sub
movsl
lock
dec
or
pop
jge
lret
cltd
addr16
dec
into
mov
imul
mov
sti
inc
jl
hlt
jmpw
popa
xchg
sbb
xor
and
jne
mov
sbb
mov
push
inc
jg
outsl
jbe
sbb
pop
push
arpl
fidivrl
push
jmp
stos
jns
movsb
out
fadds
pop
or
scas
xchg
pushf
outsb
cltd
jne
imul
dec
sbb
cmp
enter
push
push
xchg
movsb
scas
and
cmc
ret
enter
mov
test
repnz
cmp
sti
sti
lods
lock
sbb
or
cmp
mov
xor
inc
stos
cmpsl
push
daa
das
mov
jge
stos
adc
adc
mov
add
and
dec
sti
sub
aas
xor
add
push
insl
adc
dec
sub
das
cmp
inc
dec
scas
push
and
dec
push
es
out
mov
int3
lods
addb
cmc
cmp
pop
movsl
xor
packsswb
mov
push
hlt
pushf
push
mov
scas
mov
mov
imul
xor
sub
shrb
cmp
push
dec
aaa
mov
mov
loopne
cwtl
sbb
jle
fistpl
out
scas
test
add
imul
aas
daa
addr16
xor
je
leave
pop
dec
dec
call
pop
mov
ja
sub
lds
push
jecxz
xchg
jo
cmp
sub
sub
and
nopl
test
cmpsl
sub
decl
bnd
sub
int
add
push
or
mov
lret
jnp
test
add
aas
jecxz
pop
in
insl
jl
mov
jo
mov
push
bound
mov
lea
sarl
test
popa
xlat
insb
push
repnz
dec
repnz
xor
pop
into
add
loope
test
inc
xchg
inc
int
dec
out
es
xchg
cli
fucomp
int3
aad
xor
add
or
pop
imul
stos
mov
bound
je
mov
and
jl
gs
add
in
add
xlat
andb
into
push
push
stc
pop
pop
roll
sbb
push
out
fucomi
das
cmpb
mov
lds
cltd
ss
nop
ss
arpl
testl
outsb
and
popf
push
mov
test
jmp
fisubl
mov
adc
aam
xchg
jnp
fidivrs
xchg
aam
mov
xchg
inc
ret
adcb
sbb
jl
sub
orl
mov
ja
pop
jecxz
int
loopne
xor
pop
mov
jle
sbb
push
lret
mov
cmp
mov
mov
sbb
gs
mov
out
xchg
sub
adc
mov
outsb
or
inc
lock
add
pop
fmull
pop
mov
pop
fldenv
mov
js
mov
ret
xchg
mov
cmp
sbb
sti
inc
arpl
in
insl
xchg
decb
fldt
iret
xorb
inc
jne
idivb
cld
cmp
jle
adc
loopne
inc
push
lock
lahf
or
push
arpl
ret
or
push
cmp
push
xchg
or
rcrl
out
idivb
cs
add
mov
jle
push
xchg
jb
dec
sub
jns
rcl
lds
add
or
xchg
mov
inc
adc
mov
les
divb
mov
push
or
cmp
adc
or
inc
push
daa
mov
addr16
cld
mov
push
aaa
push
daa
push
xchg
jno
or
fcomp
mov
je
cld
loope
pop
push
popf
xchg
je
lods
inc
jg
cld
xorb
cltd
lret
hlt
movsb
xchg
or
aam
test
notl
xor
repz
cmp
in
ret
je
cmp
imul
cmp
leave
add
xchg
call
ss
or
shlb
ljmp
mov
pushl
jp
xchg
push
mov
cmp
lock
dec
push
mov
lcall
adc
adc
mov
decl
xchg
repnz
add
popa
mov
loopne
jle
loope
test
test
in
xchg
je
push
sti
cmpsb
xchg
mov
cmp
fidivs
sub
test
push
loopne,pn
jge
cmp
mov
test
in
test
xchg
xchg
push
mov
pop
cs
out
lret
jo
xchg
or
rcll
cmc
fdivrs
test
sub
std
add
mov
loope
xchg
jns
pop
jp
lahf
adc
mov
pop
and
dec
das
in
in
cmp
stos
mov
popa
push
int3
scas
jnp
outsb
ror
popf
daa
sbb
mov
pop
xchg
mulb
dec
jae
js
push
push
int3
fildl
push
jb
add
repnz
mov
idivb
add
vpshaw
xchg
test
rcll
pop
and
xchg
sub
mov
lret
scas
inc
dec
ja
dec
push
aad
int3
lods
pop
mov
mov
rcr
mov
jne
inc
pop
jnp
das
mov
daa
rclb
pop
iret
mov
jae
insl
jmp
adc
xchg
mov
notb
dec
cmp
xor
jne
push
int
sub
daa
adc
stos
cmpsb
xor
inc
ret
ljmp
rcll
sub
loope
imul
push
fcomps
cs
add
mov
jmp
lds
pop
lcall
pop
pop
fldcw
out
add
daa
aaa
pop
add
mov
aas
xlat
mov
cli
push
cmp
cmp
xor
aad
push
stc
jbe
pop
rcrl
dec
and
and
mov
pop
ss
mov
and
sbb
dec
aas
paddd
pop
dec
sbb
shlb
js
outsl
faddl
es
push
lahf
add
jns
test
sbbl
add
mov
sbb
lret
test
movsl
jl
ss
es
xchg
adc
add
ret
clc
std
ret
add
fisubrs
arpl
mov
out
xchg
push
cmpb
fidivl
dec
outsb
cltd
shrb
pop
mov
rcl
add
ja
mov
pop
xor
sbb
mov
sbb
xchg
arpl
xor
xor
jg
add
mov
cld
shr
out
ljmp
push
jne
jo
or
and
in
mov
les
bound
in
nop
push
pop
ja
push
jge
ljmp
rcrl
sbb
lret
gs
mov
inc
popa
dec
out
mov
mov
cmpsb
sbb
add
sbb
mov
sub
pop
or
mov
mov
ljmp
xorb
inc
mov
rcrb
pop
mov
jo
sub
mov
add
aaa
push
and
aas
cmpsb
mov
ret
mov
push
jno
adc
and
xor
sarb
les
lcall
outsb
sbb
adcb
pusha
hlt
add
xchg
test
dec
inc
cltd
lcall
inc
nop
dec
inc
int3
xchg
pop
test
mov
mov
push
xchg
cmpsb
aaa
mov
cld
loopne
pusha
xor
and
clc
ret
and
push
ret
mov
shl
je
loop
dec
lcall
cmpsl
lret
clc
mov
cmpsb
push
xchg
fists
and
jge
and
cmp
or
sub
cltd
cli
rorl
xchg
push
movsl
and
or
pop
mov
mov
jno
xor
xor
cmp
mov
addr16
mov
pop
rcrb
test
sti
js
dec
or
stos
pop
sub
adc
mov
dec
sub
sbbl
mov
xor
mov
jo
call
xlat
jo
jl
repnz
xor
inc
jo
testl
orb
int3
cmp
add
cmc
mov
add
pusha
jl
mov
scas
pop
xchg
add
xchg
mov
and
push
xchg
sub
push
in
push
iret
jmp
push
mov
inc
aaa
scas
pop
cmpsb
test
push
xchg
jg
aad
cmpsl
lahf
and
int
xchg
jbe
cmpsb
cmp
mov
loop
mov
mov
push
mov
inc
mov
cmp
repz
shrb
lods
sub
mov
xor
jnp
fdivrs
inc
adc
icebp
sub
mov
jb
and
push
nop
xchg
xchg
xor
jge
push
dec
ret
sub
adc
sub
xchg
movsl
inc
add
and
push
fsubrs
inc
mov
lds
lods
inc
fwait
je
leave
mov
pop
xlat
sahf
push
hlt
repnz
in
pop
jae
jmp
fs
outsb
mov
fcompl
scas
pop
test
mov
mov
int3
dec
xor
loope
xchg
jmp
pop
mov
daa
pusha
hlt
mov
and
insl
outsl
lods
stos
ljmp
push
mov
add
xor
jge
cmp
adc
lcall
jl
test
div
repz
inc
mov
js
xor
adc
nop
jb
loope
push
and
sub
jge
mov
mov
out
fsubs
inc
cmc
fs
ljmp
mov
mov
push
loop
mov
xchg
pop
sbb
popa
shll
call
add
cmpsl
std
mov
vxorpd
mov
fmul
out
mov
xchg
mov
sbb
arpl
push
daa
aad
xchg
mov
pop
sub
inc
mov
mov
pop
arpl
adc
ja
dec
dec
movzbl
mov
or
jns
aam
dec
add
ffree
decl
ds
cltd
insl
frstor
dec
test
mov
mov
push
xor
arpl
pusha
and
fwait
or
push
cmp
xchg
lock
mov
mov
push
pop
jns
mov
add
clc
mov
push
arpl
pop
incl
aaa
insb
leave
jno
cmp
mov
ljmp
jmp
xchg
repnz
iret
adc
movsl
pusha
fdivrl
mov
popf
sti
aaa
int3
mov
in
pop
lret
scas
or
in
push
mov
cwtl
test
jmp
mov
xor
scas
xor
xchg
enter
es
push
scas
mov
out
popf
cmp
nop
imul
aaa
jo
sti
cmc
popf
in
je
out
out
icebp
lds
cld
imul
push
jg
insb
jns
adc
inc
mov
cmp
mov
or
add
dec
sbb
scas
dec
xchg
cld
push
pop
in
xchg
mov
lret
adc
incl
sbb
and
push
cmp
out
in
aad
jmp
sub
aas
sar
popf
out
dec
mov
mov
jmp
lods
jbe
lea
adc
aas
xchg
nop
jecxz
popa
lret
adc
repz
js
arpl
dec
in
push
daa
shll
scas
shlb
xor
pop
popa
rcrl
sbb
fisttps
xchg
outsb
imul
orb
dec
outsl
leave
cmp
popf
aad
call
int3
cmc
jmp
lds
enter
xor
jae
push
mov
adc
pop
pop
ret
xor
jecxz
test
add
mov
loopne
out
adc
mov
lahf
imul
shl
mov
dec
fsubl
sbb
jns
push
aad
sub
mov
insb
sub
insl
xlat
xchg
scas
sbb
insb
inc
movsl
fwait
pop
decb
repnz
xlat
jae
adc
test
rorl
add
adcl
inc
cmp
hlt
mov
push
mov
rcrl
js
ret
out
jnp
add
mov
jae
ds
push
or
bound
dec
fcomps
cmc
and
xor
stos
ss
repnz
arpl
or
xchg
xor
cmpsl
sub
out
mov
mov
test
pop
out
cmp
push
popa
cmpl
in
pusha
testb
xor
mov
fs
rcrb
cmpsb
push
sti
jge
add
leave
mov
ljmp
in
adc
xchg
mov
scas
inc
jb
scas
mov
xor
push
test
jp
rorb
lds
aad
jg
loop
imul
xchg
in
sahf
adcb
popf
jo
enter
jnp
orl
insl
add
push
pop
push
xorb
mov
movsl
sbb
mov
pop
jb
pop
cmpsb
cmp
add
scas
pushf
push
mov
push
mov
add
push
cmpb
insl
stc
mov
mov
push
xchg
scas
jae
arpl
ljmp
jne
insl
outsb
sbb
fmull
and
adc
push
leave
fnstsw
jnp
jmp
and
mov
inc
es
outsl
test
sti
out
jl
lock
mov
or
fnsave
aas
outsl
mov
pop
push
sbb
and
jp
in
xchg
and
lock
dec
sub
push
cmp
pop
lret
push
shrl
adc
dec
sbb
stc
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
sub
stos
and
mov
.byte
pop
popa
xor
add
add
decl
loopne
add
filds
add
loopne
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
jo
imul
add
addr16
insb
outsl
jae
dec
gs
add
dec
insb
gs
jne
add
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
jb
gs
xor
cs
insb
add
mov
add
add
add
mov
add
add
add
lea
lea
je
add
add
add
jmp
mov
pushl
popl
jmp
popl
mov
cmpl
je
push
pushl
pushl
push
addl
call
add
pop
mov
shl
add
add
jmp
jmp
push
imul
jb
je
arpl
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
gs
xor
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
imul
jo
imul
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
insb
jne
push
jb
arpl
outsb
inc
popa
arpl
add
add
jb
gs
xor
cs
insb
add
add
cmp
dec
inc
dec
inc
push
cmp
je
jns
outsb
and
je
jns
jo
imul
js
add
dec
inc
push
dec
inc
dec
inc
push
cmp
insl
outsl
insb
bound
and
and
push
push
dec
inc
dec
add
push
push
dec
add
inc
dec
inc
inc
push
inc
add
add
and
cs
add
dec
inc
push
dec
inc
dec
inc
push
cmp
jb
outsb
outsb
imul
and
add
outsb
xor
jae
add
outsb
outsl
ja
cmp
jne
imul
outsb
sub
add
outsb
outsl
ja
dec
add
add
outsb
outsl
ja
cmp
add
add
outsb
outsl
ja
cmp
imul
push
sub
imul
outsb
sub
add
outsb
outsl
ja
cs
inc
push
add
outsb
outsl
ja
pop
push
add
add
outsb
outsl
ja
xor
xor
add
outsb
outsl
ja
dec
push
sub
xor
add
push
imul
push
sub
cs
dec
inc
push
dec
inc
dec
inc
push
cmp
push
push
inc
push
push
add
add
push
imul
insb
insb
outsl
arpl
add
add
inc
push
dec
cmp
jo
inc
jne
arpl
add
and
fisttpll
inc
push
and
inc
in
jl
iret
and
sbb
xor
outsb
lods
add
mov
and
cmpsl
je
sahf
sub
cli
jmp
ret
div
aas
xchg
add
test
jne
adc
stos
ret
cmp
jo
fcompl
movsb
sbbb
pop
mov
es
ja
lret
and
negb
push
cmp
inc
or
pop
cmp
call
mov
jns
xor
mov
fildl
jmp
mov
test
sub
inc
jle
push
sbb
mov
bnd
cmpsb
shlb
cwtl
mov
loope
dec
mov
enter
sbb
incb
clc
leave
sub
stc
cmc
mov
sbb
test
fs
aad
push
add
mov
aaa
add
popa
jbe
dec
out
movsl
cltd
cmp
add
add
add
add
add
add
add
inc
mov
mov
mov
add
rolb
add
add
inc
mov
inc
add
jecxz
add
jecxz
add
inc
add
and
cmp
add
add
xor
cmp
cmp
add
add
dec
outsl
popa
fs
imul
add
add
and
add
or
inc
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
push
mov
push
mov
mov
and
shr
test
jne
pop
mov
pop
pop
ret
push
mov
test
jbe
cmp
mov
jb
mov
sub
cmp
mov
jl
mov
shr
mov
neg
shl
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
xor
mov
add
add
add
dec
jne
mov
test
je
xor
mov
add
inc
add
dec
jne
mov
xor
mov
div
mov
mov
mov
xor
div
test
mov
ja
mov
pop
shl
pop
or
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
mov
push
push
mov
push
mov
movl
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
rep
stos
mov
shr
test
mov
jne
mov
call
cmp
je
or
mov
mov
mov
test
je
call
mov
cmp
je
mov
mov
call
mov
mov
inc
and
mov
jmp
call
mov
cmp
je
mov
call
cmp
je
mov
and
and
mov
shl
or
add
mov
mov
js
jmp
mov
lea
xor
and
mov
mov
mov
call
mov
mov
inc
and
inc
mov
mov
cmp
jle
jmp
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jb
or
ret
mov
push
xor
mov
inc
mov
mov
pop
ret
nop
nop
mov
push
cmp
jae
mov
mov
mov
inc
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
jae
mov
mov
mov
inc
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
mov
push
push
push
mov
call
push
mov
push
push
mov
call
add
mov
push
call
push
push
mov
call
mov
mov
lea
mov
lea
cmp
jae
imul
mov
add
xor
mov
add
cmp
jb
mov
add
mov
mov
mov
sub
inc
lea
mov
lea
mov
add
add
add
cmp
jae
cmp
jae
lea
mov
and
cmp
jae
imul
mov
add
xor
mov
add
cmp
jb
mov
mov
mov
push
push
mov
mov
mov
call
mov
test
mov
je
cmp
jbe
push
push
push
push
call
mov
lea
mov
mov
shr
rep
mov
and
rep
mov
mov
push
push
push
mov
push
call
cmp
je
push
push
push
push
call
push
push
push
call
mov
add
cmp
je
push
push
push
push
call
mov
push
push
push
call
push
push
push
mov
call
mov
mov
add
test
jne
push
push
push
push
call
call
push
push
push
mov
call
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
call
push
call
add
test
pop
pop
pop
je
mov
call
jmp
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
pop
call
xchg
pop
mov
popa
pop
pop
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
mov
test
push
mov
jne
push
push
push
call
push
call
add
mov
mov
lea
push
push
lea
push
push
call
mov
dec
test
je
mov
lea
mov
add
mov
add
dec
dec
test
ja
mov
lea
push
lea
push
push
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
xor
lea
movb
mov
rep
stos
stos
mov
xor
lea
sub
imul
add
mov
and
mov
shr
mov
xor
inc
mov
inc
mov
inc
test
je
cmp
jb
mov
cmpl
jne
mov
push
call
add
mov
test
jne
push
call
test
mov
jne
int3
mov
lea
push
push
push
call
add
test
pop
pop
pop
jne
int3
mov
pop
ret
nop
nop
push
mov
sub
mov
push
mov
mov
push
push
test
jne
mov
mov
lea
mov
test
je
lea
sub
xor
mov
mov
inc
test
jne
lea
movb
push
call
mov
add
cmp
mov
jl
mov
mov
push
push
push
mov
call
add
mov
movl
mov
mov
mov
test
je
mov
mov
test
je
cmp
jg
cmp
jl
movsbl
add
movsbl
xor
cmp
je
xor
cmp
jne
mov
inc
inc
mov
mov
test
jne
cmpb
je
mov
add
inc
cmp
mov
jl
pop
pop
xor
pop
mov
pop
ret
mov
pop
pop
pop
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
push
je
mov
mov
mov
test
je
cmp
jne
dec
inc
inc
test
jne
pop
xor
pop
ret
test
je
xor
xor
mov
mov
pop
sub
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
mov
push
test
push
jl
mov
cmp
jae
mov
mov
lea
mov
add
mov
mov
cmp
jne
test
je
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
test
jne
mov
mov
pop
mov
lea
xor
pop
mov
mov
lea
mov
add
pop
pop
ret
mov
mov
movl
mov
dec
js
jmp
mov
mov
push
lea
cltd
sub
mov
mov
sar
mov
lea
mov
add
test
push
jge
mov
push
call
jmp
mov
push
call
add
test
je
jle
inc
mov
jmp
lea
cmp
jle
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
cmp
push
jbe
mov
cmp
jae
test
jne
mov
mov
mov
mov
lea
test
mov
je
test
je
test
jne
mov
sub
mov
lea
mov
add
jmp
mov
push
push
push
push
call
mov
mov
mov
add
cmp
jae
add
add
cmp
jae
mov
xor
lea
movb
rep
stos
stos
mov
lea
test
je
cmp
je
cmp
je
mov
mov
inc
inc
test
jne
lea
lea
push
call
mov
add
test
jne
mov
test
je
lea
push
call
mov
test
jne
mov
test
je
lea
push
call
mov
test
je
cmp
ja
pop
pop
xor
pop
mov
pop
ret
pop
pop
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
sub
mov
mov
jecxz
jnp
mov
mov
jge
loop
ss
push
test
cmp
mov
lret
jne
out
pushf
jno
xor
or
push
imul
and
lret
fwait
int
cmp
les
call
mov
add
rorb
push
jmp
jo
jb
jb
inc
push
js
das
inc
pop
and
inc
cmp
insl
into
inc
pop
divb
pop
mov
call
cmp
xlat
mov
repz
sub
jns
xchg
fidivrl
imul
repz
rcrl
adc
mov
mull
stc
aas
imul
and
mov
andb
pop
pop
sub
jbe
mov
popa
cmpsl
ja
repnz
xor
cmpsb
pop
and
or
cmp
and
push
and
add
lret
adc
jecxz
fisubs
mov
dec
dec
int3
fsts
cwtl
out
jp
inc
loop
add
dec
lock
in
in
stc
add
leave
and
fadd
test
repnz
cwtl
push
mov
in
loope
xchg
inc
jmp
cmp
sub
out
and
mov
mov
dec
inc
fisubl
sub
inc
xchg
cmp
sub
xor
rclb
loop
and
out
mov
pop
cwtl
push
mov
sbb
mov
xlat
cmp
out
mov
bound
pop
pop
xlat
rclb
addb
adc
xor
mov
xchg
xchg
dec
test
pop
in
pop
loope
pop
mov
fstpl
cwtl
js
aas
sbb
or
or
stos
cmpsl
and
int3
mov
jle
inc
inc
mov
mov
cwtl
xor
adc
sbb
cmc
sub
jl
xor
sub
mov
lea
hlt
jl
mov
es
cltd
mov
imul
xchg
xchg
adc
mov
pushf
stos
shrl
lcall
cmp
jg
dec
ljmp
mov
imul
push
sub
test
loopne
and
push
xchg
or
into
pop
fdivrl
frstor
jge
sti
scas
loopne
jmp
in
and
nop
stc
push
adc
sarb
sbb
gs
jecxz
xchg
into
sbb
sahf
jbe
call
dec
push
cli
cli
push
xchg
out
rorb
fisttps
pop
enter
popf
xchg
push
outsb
addr16
outsl
or
mov
mov
xchg
add
iret
xor
divl
xchg
add
push
jne
push
inc
lcall
imul
sbbb
lock
cmpsb
out
jl
xchg
mov
sub
pop
sar
cli
cmp
daa
mov
and
jae
and
cmc
xchg
or
lods
xor
int3
js
mov
ss
jb
cmp
pop
test
mov
decb
cmp
xor
pop
in
pop
or
stos
in
sarb
push
int3
jnp
push
sub
pushf
or
pop
bound
pushf
sbb
pushf
push
sub
ds
push
or
mov
inc
push
ret
jge
push
or
test
aaa
ss
sub
std
outsl
push
or
cld
mov
push
push
lahf
dec
testl
mov
lcall
js
inc
lret
in
daa
insl
aas
shl
shll
notb
insl
arpl
push
sub
inc
lods
jmp
iret
or
sar
push
enter
add
push
gs
pusha
call
test
push
imul
pop
imull
push
dec
lret
inc
ds
rcrb
lods
mov
les
subl
fdivs
jle
lcall
out
icebp
jmp
insb
out
icebp
jmp
insl
mov
add
mov
mov
add
mov
movl
add
and
rcll
inc
mov
out
rol
sub
inc
scas
repz
pop
mov
sbb
cmp
cmp
or
leave
das
add
mov
sub
imul
or
push
xchg
aad
fcoml
fdivrp
adc
mov
inc
cmp
stos
xchg
fldl
clc
push
or
cld
push
lcall
jecxz
sbbb
cmp
sub
mov
jle
cmp
or
stos
sarl
iret
insb
divl
dec
or
jecxz
adc
pusha
xchg
inc
xor
mov
lret
in
jl
xor
in
jb
dec
sub
mov
test
aaa
cmp
add
jp
pop
sahf
shrd
cmpsb
push
xorl
mov
xchg
mov
loopne
mov
lret
fidivs
lock
shl
hlt
pop
cmpsl
dec
je
mov
xchg
dec
clc
sub
push
sarl
sahf
ficoml
lock
mov
xor
push
dec
push
mov
dec
adc
or
add
shlb
push
cmp
sub
call
ret
inc
loopne
pop
repz
insl
xor
aaa
jns
push
mul
cwtl
aam
in
je
scas
xchg
push
popa
xchg
cmpsb
or
cld
inc
cltd
sbb
inc
pop
and
xlat
xchg
dec
inc
push
jge
orb
mov
mov
std
imul
sar
sbb
or
shll
xorl
sbb
daa
pop
movsl
cli
int3
pop
sub
aad
fldt
and
fwait
insb
xlat
adc
jecxz
pop
xor
outsl
adcl
divl
xchg
popa
mov
sub
dec
in
mov
adcl
movsb
out
mov
pushf
mov
lcall
adc
add
jl
xor
push
fwait
mov
xchg
movsl
cmc
push
pushf
dec
push
pop
fmull
cs
orb
shrb
loope
cli
dec
inc
stos
jb
lret
mov
mov
xchg
add
or
ret
xchg
or
ljmp
sbb
cmpsl
mov
das
push
insb
test
or
dec
inc
stos
push
into
leave
push
movzwl
xor
push
push
push
inc
sbb
jns
call
insl
cmpb
pop
gs
js
xlat
xchg
jno
jmp
mov
adc
cmpsl
push
jnp
mov
cmc
pushf
loope
jp
sbb
mov
xor
mov
out
jns
or
inc
fwait
inc
xchg
jl
insl
pop
pop
cmp
inc
mov
jae
xchg
mul
mov
cli
mov
imul
pop
sbb
je
int
add
jns
lret
xchg
inc
mov
mov
or
mov
jmp
inc
inc
lods
call
xchg
jne
pop
mov
xchg
daa
rol
call
mov
cmpsb
pop
sbb
nop
adc
fwait
sarl
fwait
inc
out
lahf
push
ficomps
popa
pop
sub
aad
mov
cwtl
mov
fstps
pop
add
mov
push
iret
jo
pop
repz
jl
dec
jmp
sub
std
loopne
jle
sub
pop
insl
mov
mov
xchg
mov
dec
in
add
test
cmp
in
clc
and
inc
cmp
push
sub
lret
or
fistpll
cmp
dec
cmp
sbbb
or
and
xchg
insl
push
scas
test
mov
push
repz
push
pushf
ja
pop
aas
out
fmul
pop
js
sbb
arpl
jne
fidivl
test
scas
adc
inc
ja
and
push
int3
push
imul
loope
sub
push
xor
xchg
inc
dec
jle
dec
imul
and
inc
add
lds
mov
stos
jae
sti
sub
imul
divb
std
shll
pop
mov
divb
xchg
or
loop
outsl
adc
mov
dec
shlw
cmp
adc
daa
iret
lret
and
stos
call
mov
xor
and
movsl
jbe
mov
outsb
adc
shrb
jo
sarb
lea
sub
inc
decl
adc
pop
imul
push
addr16
dec
jbe
cmp
jns
outsb
adc
std
add
push
dec
adc
mov
mov
in
push
pushf
adc
subl
mov
sub
fisubs
push
xchg
lret
xchg
iret
sub
inc
clc
test
fs
add
cltd
ret
ss
test
scas
addl
jmp
push
jge
mov
repz
arpl
push
push
or
addl
dec
gs
pop
sub
adc
pcmpeqw
mov
pop
clc
inc
lods
in
int
lods
enter
stos
ret
loope
shll
inc
jne
mov
add
xchg
neg
push
test
int
rcrl
jmp
lock
push
sub
fildl
outsl
out
mov
out
ja
and
mov
out
fcom
push
lcall
sub
fnstcw
and
cmc
inc
test
decb
push
fnstcw
sub
cmp
in
out
sub
xlat
jecxz
xor
or
cld
dec
and
test
push
ja
negl
mov
xor
inc
and
jne
pop
ja
fs
pusha
addr16
mov
xor
jge
nop
insb
popf
jle
or
loop
or
sub
icebp
test
inc
xchg
cwtl
scas
xlat
gs
lahf
imul
pop
mov
cs
insb
aam
fisttps
add
out
loope
bound
stos
cmp
mov
jl
cs
shll
adcb
fsubp
in
out
popa
aam
idiv
sarl
adc
push
aas
movsb
dec
sub
mov
mov
dec
enter
inc
mov
test
cltd
push
lret
adc
stos
lods
xchg
jbe
sti
adcl
pop
and
cld
push
or
xchg
xchg
cwtl
aad
es
clc
lret
pop
rcrl
push
adc
testl
popf
xorl
adcb
fsub
std
mov
enter
xor
mov
addb
aaa
shrb
and
mov
cmpsl
hlt
and
les
lods
cmpsl
and
popf
movl
adc
test
scas
dec
popf
je
icebp
cmp
and
cmp
mov
test
jge
outsl
and
lock
dec
pop
push
jmp
mov
adc
mov
shlb
inc
lcall
adc
adc
adc
and
push
sti
mov
pusha
sub
pop
les
fsts
dec
aam
jbe
jle
add
in
push
push
sbb
fnstsw
orl
out
pop
push
adc
orl
jmp
xchg
shll
xchg
imul
mov
adcl
pop
test
out
xchg
insb
out
and
nop
push
int
sbb
popf
in
fs
repz
outsb
push
sbb
xchg
movsb
or
xchg
repz
push
cmp
xor
roll
repz
aas
ja
jmp
rcrl
adcl
dec
mov
int3
adc
pop
pop
adc
insb
pop
fisubrl
out
dec
add
cmp
push
add
shrl
call
or
mov
jbe
inc
mov
jb
add
lods
aam
xlat
aas
mul
mov
push
xchg
add
pop
xor
jl
scas
sub
clc
movsl
adc
int
or
mov
mov
inc
lcall
int
repz
popa
inc
scas
jmp
clc
in
rcr
pop
cs
lret
roll
aam
je
inc
or
test
enter
xchg
jbe
jne
into
cmpl
aam
sbb
lret
cmp
jge
mov
mov
cmp
repz
mov
sub
pop
push
fisubrl
lcall
cmpsl
jl
in
pop
or
and
loop
and
mov
or
test
xor
push
pop
mov
jb
pop
inc
mov
out
orb
jmp
cmpsb
rorl
test
inc
inc
or
lret
xchg
sub
jbe
xchg
jmp
loop
jns
popa
nop
movsb
sarb
ret
cwtl
sbb
cmp
je
cwtl
in
or
shll
dec
add
lret
pop
push
pop
dec
and
leave
or
mov
xchg
cmpsl
div
dec
imul
push
addb
mov
sbb
pusha
sahf
aad
pushf
enter
test
aaa
jg
movsb
inc
pop
ds
data16
repnz
sar
add
push
jnp
sbb
adc
lret
jns
push
fcmovu
ljmp
test
fmuls
jbe
cld
mov
jle
cmp
lcall
stos
xchg
xchg
sub
je
inc
or
into
add
mov
andb
mov
push
mov
xchg
aam
gs
dec
and
jo
lock
nop
xlat
cmp
push
fcoms
xor
sbb
and
mov
sbb
jb
dec
mov
js
fbld
sbbl
cmp
lock
pop
pushf
jecxz
mov
dec
add
and
dec
out
or
jns
data16
loop
xorl
add
xor
hlt
movsb
mov
test
lahf
push
imul
int3
repz
lock
das
gs
cmp
jmp
adc
aam
outsl
jg
repz
negl
sub
je
cmpb
sbb
jmp
mov
dec
jle
repz
testl
xor
pop
jae
lcall
cli
lock
xchg
cli
mov
pusha
dec
push
add
xchg
arpl
sti
dec
mov
jg
jecxz
adc
mov
stos
pop
and
not
mov
and
mov
ljmp
push
mov
nop
jno
pop
jp
fwait
push
mov
pop
test
lds
shll
add
sti
mov
xchg
xor
sbb
std
stos
sti
stos
or
lret
mov
sub
mov
or
pusha
push
mov
sbb
xchg
mov
hlt
fsub
mov
stc
ret
jb
mov
mov
mov
lcall
pop
push
cmpsb
push
ja
fcmovu
and
lcall
dec
jmp
push
dec
dec
push
popf
test
aad
jp
int3
mov
push
mov
push
jge
xorb
inc
and
inc
xor
add
orl
stos
dec
stc
mov
and
sti
mov
pop
mov
xor
jp
cli
fucom
dec
jp
dec
lret
push
scas
xchg
popf
fsts
push
xor
icebp
iret
xor
push
mov
idivl
xor
or
push
or
inc
xor
xor
pop
insl
test
sahf
lea
xor
adc
mov
insl
fsubs
repnz
cmp
je
cmp
xchg
loopne
imul
mov
add
sub
xor
adc
jne
mov
lahf
xor
cmpsl
inc
movl
outsb
shlb
adc
stos
xchg
insb
pop
pop
call
and
gs
push
mov
lcall
push
fwait
and
addl
mov
int
in
and
xchg
jmp
movsl
xchg
lret
push
fiadds
out
inc
insl
data16
cmp
xchg
mov
fisttpll
xchg
cmp
push
sub
cmp
mov
push
jnp
mov
adc
push
push
sti
icebp
stos
push
nop
lahf
cmp
inc
in
add
pop
orb
xchg
out
daa
dec
add
scas
jmp
js
sti
adcl
iret
lcall
test
ficompl
mov
adc
mov
xlat
dec
mov
sub
rol
xor
popa
insb
insl
fnsave
or
add
cmpsl
fcmovnbe
jnp
cwtl
jg
push
rcr
clts
pop
mov
sbb
in
cmp
add
adcb
ror
mov
movsb
cmp
xchg
rorl
jnp
mov
jecxz
sbb
in
pusha
popa
dec
xchg
or
push
bound
jp
cmpsb
stos
jmp
mov
std
lock
loope
xlat
scas
push
xlat
jecxz
jbe
add
imul
fldenv
test
rcr
into
and
mov
push
or
lea
movsl
jo
mov
insb
or
push
rolb
repnz
std
cmp
fwait
repz
out
and
sti
insl
lcall
lods
inc
outsb
add
test
sbb
insl
in
sub
in
mov
fidivl
jnp
popa
push
ljmp
insb
stos
out
pop
or
lcall
in
mov
mov
inc
gs
xor
mov
pop
cwtl
pop
push
movsl
aaa
jl
mov
mov
mov
scas
lret
mov
popf
aaa
int
dec
imul
gs
mov
popa
lahf
add
mov
sub
adc
iret
and
mov
jle
adcb
testb
xchg
lods
mov
scas
nop
mov
aad
add
insl
lret
sub
scas
ret
scas
adc
ret
test
jmp
inc
jbe
inc
dec
push
jecxz,pt
shll
test
xchg
fcompl
pusha
xchg
mov
lods
xchg
outsb
shlb
fimuls
cltd
or
push
cmp
int
mov
ds
ss
push
ret
aas
inc
cwtd
pop
ljmp
cmp
sub
scas
movsb
adc
repz
xorl
fwait
push
push
dec
jae
in
std
cmp
into
stc
pop
sub
xchg
and
push
fdivrs
loop
daa
jecxz
outsb
pushf
in
stos
ljmp
mov
mov
enter
push
or
push
fwait
lea
fwait
into
pop
ret
lock
inc
pushf
and
sub
in
xor
lds
shll
scas
cmp
sbb
add
push
xchg
push
xchg
aaa
push
fwait
popf
adcl
or
and
sbb
cmp
mov
pop
pop
xor
test
mov
imul
mov
aas
stc
jecxz
repz
pop
jb
mov
cli
es
mov
jns
and
pusha
inc
lcall
sub
notl
mov
and
imul
push
enter
lahf
test
xchg
cmc
insb
jns
sbb
cld
inc
repnz
jge
mov
xor
xor
rol
or
hlt
mov
mov
pop
repnz
int3
sbb
in
mov
sbb
aas
js
sar
rcrl
test
cmp
xchg
mov
std
lahf
inc
mov
mov
pop
in
out
mov
add
notl
loope
adcb
inc
push
stc
aam
push
orl
rcll
pop
xchg
fldl
into
out
cli
add
gs
fildll
xchg
insl
scas
das
test
cli
mov
dec
call
xchg
je
inc
inc
out
jnp
test
mov
sbb
jmp
cmp
jg
adc
test
mov
mov
adc
mov
fcoml
push
push
iret
std
inc
pusha
pop
jle
sbb
pop
pop
lret
rolb
imul
pop
lods
cmpl
bound
aam
fsubl
push
jne
shlb
fldl
adc
das
cli
notl
inc
jae
jmp
xor
int
add
addr16
push
push
pop
jno
pop
lods
dec
pop
adc
push
inc
xchg
mov
mov
xchg
xlat
jl
inc
lock
jbe
fdivrs
fs
js
push
sar
pusha
adc
lret
cmp
js
sti
push
scas
push
xchg
inc
out
xor
and
int
xchg
fs
jbe
pop
in
jo
mov
out
cli
scas
jl
cmpsb
aad
dec
jmp
jbe
stos
fcomi
cmova
lds
mov
mov
repnz
jle
cmp
insl
adc
nop
push
cmp
in
std
scas
jl
shr
test
ss
xor
xchg
int
lret
out
push
loope
cltd
xor
popf
mov
or
fcmovne
pusha
inc
inc
mov
jne
dec
in
dec
int3
bound
jle
out
pushf
inc
pushf
jmp
leave
call
adc
push
sub
repz
mov
repnz
rep
mov
jle
iret
das
repnz
xor
cwtl
pop
ret
stc
int3
sub
xchg
mov
lahf
mov
addr16
xor
sub
fnstcw
xchg
std
insb
xchg
pop
test
jns
xor
dec
mul
lcall
pushf
xor
outsl
dec
mov
aam
je
and
pop
jns
or
jno
xor
in
fisttpl
adc
rcrl
mov
out
dec
xor
sub
roll
push
into
xor
fisttpl
cmp
push
adc
xor
sub
pop
jg
imul
adc
sub
pop
jnp
jbe
add
notb
jecxz
pop
jecxz
sti
js
adc
xchg
push
ret
dec
jno
mov
mov
sub
pop
lahf
pusha
add
rorl
aad
adc
pop
loop
gs
aad
sbb
xchg
pop
test
cmpsb
pop
loope
clc
mov
cltd
orl
stos
adc
sti
es
stc
xor
push
stc
mov
add
lcall
aam
xchg
es
xor
jno
jle
mov
xchg
stc
add
in
pop
push
cli
jns
int
or
sub
imul
jne
hlt
fwait
mov
push
or
mov
xor
push
add
out
mov
jno
fidivrs
pusha
pusha
fyl2xp1
js
add
xor
ret
mov
shlb
xor
push
arpl
cmpsb
je
in
dec
ret
mov
neg
mov
iret
loope
das
push
movsl
in
xlat
test
jle
fsts
and
xchg
add
inc
jae
adc
pop
sub
ds
mov
cwtl
mov
cmp
popf
insl
xor
xchg
mov
lret
cs
in
sbb
repnz
movsl
pop
sub
push
call
lcall
outsl
push
push
hlt
scas
push
pop
pop
mov
movsb
rcr
aaa
mov
gs
ret
mov
sbb
daa
mov
jno
loope
and
out
jecxz
mov
cmp
cs
inc
ret
mov
fidivrs
ljmp
sahf
or
cmp
addb
fwait
jle
xchg
push
cmpsl
xchg
dec
scas
sub
xchg
shll
inc
cld
sbb
pop
mov
xor
add
out
and
jecxz
xchg
dec
mov
cwtl
stos
push
cmp
stos
mov
or
testl
movsb
mov
pop
mov
ss
jnp
aas
outsb
js
ficoms
ds
fiaddl
push
and
test
xchg
arpl
fcompl
orb
ret
rorb
mov
pop
xchg
or
mov
aaa
pop
push
inc
adc
xor
mov
push
xor
mov
repnz
pop
std
pushf
jl
push
enter
or
leave
scas
aas
adc
lret
ja
or
pop
cmc
or
aaa
pop
ret
push
dec
jle
mov
jae
add
mov
movsb
scas
push
sub
jne
jae
loop
xor
cmpsb
adc
xor
scas
add
and
push
adc
push
mov
clc
xchg
sub
in
or
or
adc
push
jb
inc
xor
lret
stos
orb
jle
fdivrp
or
jle
sahf
push
xlat
cmc
fisttpll
or
cli
push
dec
popf
cltd
sbb
lock
mov
or
push
mov
push
jg
sbb
pop
sub
cmp
fnstsw
and
int
dec
std
nop
out
bound
xor
and
mov
scas
push
and
sarl
inc
adc
adc
xor
sbb
hlt
pop
std
clc
jg
mov
jnp
push
add
add
cwtl
sti
jg
push
cmp
lock
adc
pushl
xchg
sub
mov
pop
loopne
in
insl
ljmp
test
mov
lret
cmp
mov
adc
xchg
enter
and
cmp
xchg
mov
aad
sub
and
mov
sbb
fldl
pushl
loopne
jg
mov
jp
test
ss
aaa
orl
pusha
xchg
and
cs
notl
push
jne
ret
test
lods
test
lods
clc
dec
into
or
cmpsb
ret
jecxz
xlat
ss
jb
adc
cmp
mov
pop
pop
scas
mov
jmp
fcoms
mov
sbb
sbb
cmp
and
inc
mov
aas
dec
push
add
inc
fsubrs
xrelease
loopne
dec
adc
xor
test
aas
in
sub
push
adc
push
push
sbb
sbb
mov
ss
movb
addr16
test
pusha
sbb
imul
inc
xchg
xor
call
lock
imul
dec
clc
sbb
xor
ljmp
das
lock
gs
jno
or
rclb
jae
std
mov
sahf
bound
inc
push
xchg
mov
iret
into
lahf
jecxz
lret
add
int3
mov
adc
arpl
movsb
jno
jns
imul
in
or
js
out
rcr
out
push
xchg
dec
or
rorl
dec
pop
add
xchg
mov
dec
lea
dec
leave
repnz
sbb
test
repnz
push
dec
pop
rcll
and
or
xchg
mov
rclb
push
andl
mov
ss
sub
sarb
inc
test
loop
cmp
lret
pop
push
minps
rorl
data16
aas
dec
int3
mov
xchg
ja
pop
or
fcmovnu
mov
clc
mov
pusha
or
mov
xor
std
stos
cld
jmp
dec
sub
pop
mov
jo
ret
cmp
mov
insb
int3
in
lret
inc
sub
push
push
int
rcll
xchg
ret
mov
cmp
push
std
adc
fs
movsb
mov
jno
xor
stos
inc
cmp
cld
pop
lea
cmc
push
rcrb
or
mov
cmc
add
jp
mov
xor
int
and
out
addr16
or
arpl
mov
ret
pusha
fadds
adc
pop
fwait
push
test
sub
dec
mov
cli
lret
dec
or
cmp
stc
pop
shlb
mov
xchg
inc
les
lahf
es
xor
lahf
leave
sti
add
rdtsc
mov
outsl
mov
or
mov
jb
mov
push
push
jmp
or
pop
sub
fisubrl
mov
and
push
dec
cmp
xor
cli
add
bound
enter
es
sub
cwtl
movsb
sub
dec
cmc
sub
jae
add
scas
loopne
jl
xor
jp
add
add
xchg
or
mov
add
add
rclb
push
inc
mov
clc
mov
xchg
add
jg
jg
xor
or
push
xor
sub
add
fstp
or
imul
fstps
cs
xchg
sbb
aam
jno
in
or
nop
push
inc
or
xchg
fisttpll
cmc
out
pop
out
pop
int
insb
push
jle
mov
jns
xchg
stos
pushf
jge
les
sahf
fs
ret
aam
out
int3
bound
imul
and
ret
aaa
sub
mov
leave
std
push
fnstsw
shl
out
inc
adc
add
cmp
int3
test
adc
ret
sbb
adc
and
cmp
sub
into
mov
in
and
inc
mov
and
testl
xchg
cmp
xchg
xchg
cmpsl
adc
inc
test
push
sbb
stos
out
imul
push
scas
sub
and
popl
pop
push
ss
and
pop
fmuls
into
lods
inc
fisubl
sbb
inc
push
inc
je
dec
and
fwait
jne
sub
gs
pushf
jl
jmp
dec
fwait
pop
mov
sbb
mov
xor
outsb
das
add
cmp
add
sbb
xor
xchg
pop
cli
dec
sti
push
shlb
test
mov
test
cmp
rorb
push
pop
adc
pop
fidivrs
pusha
add
push
ficoms
adc
js
mov
dec
lods
inc
cmc
mov
adc
loopne
pop
subl
pop
mov
lret
inc
scas
aas
and
jge
dec
inc
xchg
mov
xor
mov
xchg
sbb
aam
adc
rorb
push
xor
out
xlat
jbe
test
aas
clc
les
rorl
movsb
int3
or
rcll
cmp
push
mov
jmp
les
jno
jbe
jo
daa
adc
mov
cmpsl
mov
cmp
sbb
fwait
or
or
lret
jne
inc
pusha
sbb
push
pusha
stos
cmp
xor
lahf
cmp
push
pop
xchg
push
daa
lret
cs
push
cmp
ret
add
pop
sbb
mov
adc
insb
push
jp
jl
movsl
test
push
jp
push
adc
mov
addb
mov
push
or
jge
int3
pop
leave
jg
sub
inc
pushf
fcompl
loope
push
pop
stc
fimull
pop
sbb
mov
mov
dec
inc
sub
mov
aaa
fcoms
rorl
addl
loope
imul
push
dec
test
lock
cmp
cli
adc
fisttpll
popa
shll
das
cmp
or
mov
jo
jecxz
icebp
mov
xchg
outsb
loope
pushf
fisttpl
or
xchg
inc
cwtl
dec
fildl
je
cmc
mov
sbbb
pop
xchg
inc
ret
cmpsb
sbb
loop
and
sub
loop
ret
jne
xchg
loop
out
push
cmp
push
jg
xor
inc
pop
idivl
add
sub
mov
mov
call
and
dec
push
or
faddl
pop
dec
call
call
ja
push
or
push
inc
xor
push
mov
dec
ss
xchg
xchg
shrl
xchg
cltd
mov
jno
sub
or
xor
rcrb
ss
mov
sahf
or
outsb
push
xchg
roll
dec
addr16
or
pop
mov
idivb
cltd
popf
imul
gs
mov
cmpsb
push
push
mov
cmpsb
loope
sub
sbb
jmp
dec
push
lock
xchg
mov
xchg
mov
mov
popf
add
pop
xor
adc
push
or
lods
jne
test
mov
cltd
out
out
pop
fnstcw
popa
daa
or
sbb
dec
xchg
sbb
ss
dec
pop
jle
scas
insl
mov
pop
fsts
andl
aam
test
pop
dec
push
jl
push
sub
mov
or
mov
rcll
sbb
imul
xchg
into
cmp
push
lds
aad
push
je
push
clc
fnstenv
mov
inc
in
adc
push
aam
jge
add
mov
subl
inc
movsl
rcll
jnp
push
inc
int
test
icebp
jne
sub
xor
jmp
push
bound
push
cmpsb
js
gs
cltd
dec
inc
mov
push
int3
mov
mov
or
ret
ss
es
jl
insl
ja
xchg
sub
xchg
xchg
test
push
in
dec
cmp
rorb
bound
mov
popf
rclb
sar
loopne
rclb
pop
cwtl
call
jg
hlt
jmp
push
lret
pop
pop
mov
in
fwait
or
add
clc
test
gs
sub
dec
cmp
xor
add
dec
fistpl
test
cmp
sti
lret
popf
out
cmp
jl
fs
add
testl
mov
lea
xor
pop
dec
pop
setnp
roll
repnz
ss
stos
scas
or
lahf
or
xchg
xor
out
inc
es
aad
push
aaa
mov
les
je
cmpb
xor
lock
mov
scas
inc
cmpsl
clc
add
dec
xchg
jmp
inc
std
mov
jl
mov
les
shrl
cs
popf
stos
lods
dec
fnstcw
cltd
scas
sbb
xor
sub
mov
adc
out
shll
push
xchg
xor
adc
adcl
orb
cmpsb
or
xor
mov
dec
scas
inc
test
pop
les
mov
xor
add
cmpsb
inc
push
jnp
lret
leave
shl
aad
adc
push
fldenv
push
addr16
dec
xchg
out
lock
or
js
mov
ret
jno
movsl
mov
daa
push
ret
rol
cmpsl
sub
pushf
daa
jecxz
insb
xor
mov
cmp
leave
jnp
rclb
js
add
mov
pop
mov
orb
xor
nop
cmpsb
xchg
adc
sahf
mov
test
sbb
out
or
add
jae
js
test
or
and
sub
into
mov
pop
dec
add
call
cltd
sub
push
adc
cmp
xor
mov
ret
mov
push
icebp
arpl
popf
punpcklbw
mov
sbb
or
je
dec
pushf
mov
sub
sub
std
in
mov
mov
lods
fisubl
push
lods
out
pop
es
fdivrl
push
out
out
subb
push
xchg
cli
jecxz
test
mov
imul
fistpll
nop
scas
popa
clc
xchg
cs
dec
jno
xchg
jge
nop
inc
pop
testl
loop
add
pop
flds
pop
and
xchg
icebp
xchg
xorb
adc
push
dec
hlt
dec
inc
jge
or
cmpsl
aad
fdivrp
jnp
lock
xchg
push
imul
hlt
sub
and
scas
sahf
stc
mov
arpl
inc
scas
pusha
idiv
div
pushf
scas
cmp
test
scas
outsb
add
and
ljmp
lret
das
xchg
lcall
fisttpl
stos
mov
divb
lea
ja
jg
adc
sbbl
pop
xor
and
adc
orl
in
and
and
add
fidivrs
mov
icebp
jge
pop
loopne
mov
jbe
mov
push
aad
mov
push
xlat
cwtl
cmp
jb
insb
mov
mov
adc
cmc
nop
sub
xlat
pop
xor
mov
lret
lds
jno
lds
jl
iret
mov
or
push
loope
movsl
movsl
imul
push
loope
pusha
adc
and
ret
scas
pop
mov
cmp
adc
inc
mov
adc
in
insb
pop
sbb
and
or
or
inc
push
xor
and
test
lahf
or
mov
jae
rclb
lahf
xor
and
test
rcl
cmc
in
pop
jg
and
int
xor
in
xorb
lahf
dec
push
daa
push
test
loope
fisubl
outsb
jecxz
push
jecxz
xchg
int
mov
repz
dec
sub
rcrl
pop
es
sub
mov
lds
pusha
jno
xlat
pusha
rcll
pusha
inc
rorb
mov
pop
int3
ss
fadd
pop
lds
dec
xor
daa
mov
out
std
insl
jmp
mov
mov
dec
aam
daa
outsb
stos
or
packssdw
cmp
sbb
and
jecxz
add
in
add
xchg
inc
mov
mov
cltd
jg
pop
js
in
mov
sbb
mov
mov
out
xlat
cmp
mov
pop
sahf
mov
test
jne
repz
sahf
jle
lods
mov
or
ljmp
add
cld
roll
adc
imul
fimull
aaa
sahf
push
mov
xchg
push
jecxz
and
cmpsb
loop
jae
push
enter
fsubr
ret
scas
sub
dec
ret
test
push
lretw
sahf
aaa
add
icebp
rcrl
imulb
imul
sbb
jne
adc
push
fcmovne
xchg
das
jp
test
adcl
push
and
or
push
dec
push
fcoms
ss
dec
mov
jg
push
lret
push
pop
sbb
cs
xor
pop
inc
fdiv
call
push
mov
mov
mov
push
adc
sahf
or
jg
mov
pop
scas
sbb
inc
mov
mov
mov
xchg
xchg
pop
xchg
jecxz
jne
dec
cmpsl
add
xlat
or
jns
sbb
gs
adc
stc
pop
push
int3
pusha
lret
lret
and
dec
addl
pop
test
xor
pop
mov
out
mov
xorl
ret
jnp
mov
mov
jo
jae
push
fsubl
scas
shr
xchg
xor
push
lret
arpl
mov
inc
jbe
ret
mov
femms
push
test
fwait
idivb
loopne
outsl
push
sub
add
sub
lock
adc
mov
sahf
lret
push
jnp
andl
jp
pusha
pushf
mov
mov
cmp
xor
sub
push
mov
pop
hlt
pop
jmp
cmp
cmp
pop
push
mov
mov
fsubrl
jmp
push
mov
dec
xchg
test
sbb
in
lahf
and
rorb
in
fisubrs
sbb
pusha
pop
inc
jp
iret
add
pop
mov
roll
das
rcrb
lock
int3
in
push
ja
jo
out
int3
testb
or
andb
fstl
popf
mov
ret
jp
pop
mov
sbb
mov
pop
or
inc
push
loop
xor
mov
dec
xlat
push
aad
in
pop
cmp
add
mov
sti
adc
in
lret
test
insb
xor
and
inc
push
imul
push
lcall
aam
and
nop
ss
cli
sub
ss
lods
push
cli
mov
pop
pop
data16
ss
sbb
arpl
mov
dec
aam
inc
js
add
fs
push
divl
rol
jmp
outsl
shlb
xor
jns
ret
ret
pop
inc
dec
dec
ljmp
pop
jne
xor
sti
lcall
xor
adc
scas
add
movsb
sti
fcoms
inc
jne
inc
add
lahf
ror
and
jg
movsb
cli
inc
push
aam
fmuls
mov
inc
mov
mov
cmp
scas
jge
aas
ror
ja
cmpsl
daa
push
mov
insb
jge
fwait
gs
xor
and
jne
jo
fildll
sbb
sahf
mov
addb
call
sub
jno
dec
ret
adcl
mov
inc
xchg
inc
adc
dec
pop
out
mov
jno
sbb
adc
or
mov
or
insl
fdivrl
mov
jo
nop
shll
lds
jmp
faddp
mov
imul
xor
lea
pop
mov
cmp
popf
pop
adc
int3
js,pn
cmp
mov
in
push
pop
pop
push
rorb
xor
pop
and
aam
movsl
xchg
pusha
pop
adc
xor
cmp
adc
into
loop
dec
mov
pmaddwd
xchg
xchg
mulb
cmp
lcall
jbe
inc
adc
imul
and
sbb
sub
call
mov
out
dec
push
je
jo
cs
loop
nop
sbb
lea
test
nop
lods
add
or
cli
push
ret
add
clc
es
push
dec
movsb
out
sub
dec
pop
pop
lock
insl
push
cwtl
stos
mov
aaa
push
mov
jo
sbb
or
xchg
pop
xchg
test
adc
dec
pusha
mov
adc
cmpsl
pop
popf
icebp
lret
dec
push
icebp
daa
popa
faddl
es
mov
iret
xchg
mov
or
xlat
pusha
inc
push
loope
ljmp
jnp
mov
sbb
aas
cmp
lods
and
test
leave
jp,pn
in
insl
movsb
mov
ret
leave
dec
cmp
pop
jae
outsl
add
cli
scas
or
insb
mov
ds
cwtl
adc
pop
add
ja
idivb
push
sbb
inc
lcall
lods
inc
inc
div
insl
xor
jecxz
xchg
mov
adc
push
mov
mov
outsl
lds
lret
fcmovnbe
inc
add
cmc
pushf
outsl
fdivr
comiss
js
xchg
enter
das
or
iret
or
movsb
jne
jmp
gs
movsl
cmp
dec
inc
call
icebp
mov
cltd
rcr
ret
inc
pop
add
aam
fs
add
and
dec
clc
adc
cmc
mov
fwait
ror
fwait
or
sti
inc
outsl
fwait
ja
push
mov
cmovnp
jne
imul
pop
pop
adc
push
inc
orb
sub
and
loop
xchg
and
jecxz
mov
or
mul
rol
mov
into
pushf
test
inc
xor
sub
cmp
loop
setp
int
cmpsb
in
out
ret
and
lods
out
repnz
adc
sbbb
cmp
stos
mov
mov
dec
mov
and
in
and
arpl
inc
movsl
and
and
aam
stc
lea
jae
mov
pop
jg
test
movsb
sub
mov
scas
cs
icebp
pop
mov
mov
mov
mov
arpl
clc
jns
addr16
imul
int
push
adc
hlt
popa
push
mov
sbb
pop
iret
imul
push
jbe
icebp
pusha
dec
mov
jl
arpl
sahf
xor
mov
cmp
or
mov
into
out
les
les
dec
jns
nop
pusha
repnz
cmc
xor
out
adc
insb
out
aas
sub
mov
mov
js
lret
mov
pop
sti
and
sbb
xchg
gs
cli
out
loope
mov
inc
inc
scas
lcall
js
js
jnp
bound
xor
add
in
insl
sbb
sub
sub
xor
mov
and
adc
cmp
das
jb
sub
and
xor
nop
cmp
adc
or
sarb
xchg
push
stos
rorb
xchg
into
cmp
fdivp
mov
adc
cmp
sub
call
pusha
pusha
or
and
movsl
add
inc
aaa
cmpsl
inc
jecxz
xchg
cmp
out
mov
mov
push
cmp
mov
pop
push
pop
inc
lcall
xchg
stos
aam
je
scas
push
jbe
ret
scas
sub
pushl
adc
jg
repz
push
mov
les
pop
out
xchg
popa
repz
cmp
std
mov
int
push
xor
das
sbb
nop
mov
add
sbb
xor
and
test
push
leave
call
xor
jle
stos
inc
fisubrs
sbb
push
add
or
sbb
sbb
mov
and
pop
inc
add
lret
dec
sbb
mov
adc
scas
icebp
popa
mov
dec
pop
mov
or
lods
dec
adc
lds
repz
insl
jge
rcrb
inc
lret
iret
sbb
scas
outsl
adc
or
pop
and
sbb
inc
pop
add
pushf
sub
out
pop
div
mov
add
hlt
mov
add
in
fildl
cmp
stc
enter
dec
push
lret
jno
add
mov
sbb
loopne
lahf
push
pop
adc
nop
sahf
jne
sbb
addr16
push
sbbb
xor
cltd
out
in
call
outsl
mov
cmp
mov
dec
aad
pop
mov
xchg
adc
sub
push
sbb
xor
jmp
loop
cmp
movsb
out
dec
jns
fsubrs
xchg
mov
jge
insl
rcll
mov
movsb
lret
sahf
loop
sti
push
subl
dec
aaa
mov
add
mov
stos
push
rcrb
cmp
jp
aaa
pop
fcomi
adc
inc
cmpsl
xchg
cmp
orl
mov
hlt
outsb
imul
jmp
dec
adc
in
xchg
mov
adc
xchg
xchg
jb
inc
push
pop
add
dec
repz
cli
lods
push
adc
push
cwtl
dec
and
mov
cmpsw
jecxz
jge
dec
les
jo
lcall
pop
add
scas
sti
inc
mov
jno
fimuls
cmp
mov
and
xor
mov
out
pusha
xor
movsb
sbb
mulb
adc
and
mov
stos
fwait
outsl
insl
mov
adc
mov
jne
push
cli
push
loop
shll
dec
mov
jo
sub
and
ja
and
cmp
push
ror
push
lea
pop
mov
ja
in
stos
add
cmp
nop
dec
imul
cmp
das
pop
adc
fsubrl
test
push
daa
adc
shlb
xor
pop
loopne
jle
sbb
push
sbb
xor
je
sub
push
mov
pushf
sbb
adc
btr
push
lds
xchg
sahf
adc
add
jmp
in
icebp
ficompl
jo
pop
push
jbe
push
aaa
dec
mov
sub
inc
push
scas
lods
mov
cmp
cmp
dec
test
scas
add
sub
sbb
pusha
shrl
xchg
iret
push
or
sbb
iret
mov
cmp
sti
cmp
and
iret
or
loope
pop
int3
fcompl
inc
and
lods
stos
fcmovb
lahf
cmp
inc
fldt
ds
mov
and
in
into
shr
clc
mov
xor
mov
xorb
leave
ja
mov
repz
dec
sub
mov
ret
and
test
fcomps
shrb
xchg
ret
test
aaa
fstpt
pop
dec
sub
add
js
pushf
cmc
repz
dec
or
mov
xchg
jle
and
cmpsl
pop
or
or
sbb
mulb
or
sbb
lret
out
lock
adc
inc
scas
repnz
push
js
jmp
xchg
std
inc
pop
je
testl
and
aaa
orl
xor
push
cmp
test
outsb
ss
inc
js
xor
data16
addr16
pop
dec
popf
imul
dec
mov
das
sti
hlt
rcr
sbb
jb
mov
mov
xorb
enter
sub
out
popf
lods
inc
shlb
and
add
jns
je
dec
sbb
fs
mov
xor
push
sub
sbb
iret
out
cwtl
adc
mov
fmul
gs
push
lods
xchg
mov
mov
pop
sub
sbb
hlt
mov
outsl
push
icebp
test
gs
jecxz
mov
xor
xchg
push
push
lods
lret
mov
and
xor
insb
xor
popf
inc
insw
fcompl
lret
inc
xchg
in
dec
repnz
cmpsl
sub
xor
imul
ficompl
push
les
jo,pt
subl
ret
mov
push
test
cmpsl
cmp
stc
out
aad
ret
inc
scas
inc
aaa
popa
lea
fcom
mov
sbbl
xor
into
inc
sub
mov
inc
mov
mov
adc
bnd
mov
lret
pop
test
dec
int
mov
dec
dec
ret
adc
add
outsl
ret
clc
idivl
xchg
inc
push
scas
leave
movsl
mov
mov
xor
add
hlt
popa
insl
inc
pop
movsb
popa
aad
inc
xchg
mulb
inc
inc
in
mov
mov
sub
sahf
or
jo
and
hlt
or
inc
out
jecxz
cltd
std
mov
lea
dec
inc
xchg
sbb
aad
pop
leave
dec
arpl
and
ret
sub
and
shll
popf
insb
bound
inc
add
sub
lahf
xor
or
mov
rcl
push
or
pop
mov
push
loopne
imul
jno
push
shlb
leave
fstpt
xor
bound
pop
shll
lds
mov
inc
fimull
or
pop
adc
pushl
dec
and
adc
inc
cmp
inc
sbb
insb
movsb
cmp
xor
lock
or
pusha
and
repnz
je
bound
push
gs
js
and
nop
test
cmp
adc
mov
cwtl
push
js
jb
bound
int
inc
dec
xor
dec
outsb
jnp
cmpsl
mov
and
mov
or
cli
inc
icebp
mov
xchg
rorl
je
orb
into
aaa
iret
out
icebp
dec
add
and
adc
nop
aaa
loop
push
loop
xor
bound
bound
ljmp
and
jl
xor
icebp
sar
out
jg
int3
mov
xor
scas
and
jns
sti
test
and
and
loopne
jno
ja
popa
leave
adc
test
imul
dec
xchg
jb
arpl
and
pop
mov
cmp
ret
test
lret
mov
xchg
or
fstl
jle
mov
negb
icebp
xor
mov
push
aad
pop
and
and
mov
into
cmc
jg
aaa
fmuls
push
in
nop
insl
mov
pop
mov
xchg
lds
mov
sbb
inc
aad
lock
inc
dec
jmp
lahf
inc
pushf
insb
xchg
jbe
call
sbb
jl
adc
mov
adc
sbb
inc
aas
add
sub
cmpb
dec
xchg
mov
add
mov
xchg
fcoms
mov
out
adc
xchg
jo
shrl
cltd
xchg
jae
sbb
sti
mov
xchg
pop
scas
int3
subb
inc
leave
out
mov
call
or
mov
fwait
imul
add
dec
aam
pop
lods
cmp
xor
out
push
pop
sbb
lods
call
shlb
add
out
sub
jp
dec
add
lock
addr16
mov
scas
and
cmova
add
cmp
or
xchg
jae
sbbb
enter
adc
aad
cli
jle
rclb
jbe
mov
mov
fsubrl
sub
ljmp
push
and
cli
cmp
xchg
inc
in
sahf
scas
out
js
imul
xchg
jb
mov
cmpsb
movsl
sbb
fisubs
aam
dec
mov
lahf
mov
aad
jnp
test
ret
insl
fcmovnu
xchg
cld
clc
dec
and
sbb
outsb
mull
xchg
add
cmp
arpl
loopne
xchg
sti
push
cli
xchg
mov
dec
rol
mov
imul
mov
jecxz
pop
cwtl
cmp
xchg
cmpsl
xchg
std
ja
bswap
lret
call
dec
test
sub
sub
inc
add
insl
mov
cltd
dec
std
mov
cmp
cli
repz
mov
xor
inc
xchg
adc
adc
jno
mov
jl
pop
repnz
jl
enter
dec
mov
dec
in
lock
xor
mov
insb
mov
mov
or
push
cmp
shrl
push
jecxz
lea
dec
jbe
xchg
lahf
mov
and
cs
ret
or
jbe
mov
sub
je
test
xor
adc
mov
dec
adc
fdivs
ret
addr16
int3
gs
rclb
invd
in
adc
popa
lret
mov
aaa
mov
pop
aad
mov
nop
and
xor
cltd
ja
insb
daa
iret
jmp
loop
jecxz
lods
inc
cld
fs
sti
cmpsb
pop
sar
lds
outsl
shl
es
mov
add
gs
jae
fstpt
jecxz
add
adcl
int3
dec
es
inc
ja
aad
in
jb
mov
and
dec
out
mov
test
mov
jle
mov
mov
sub
mov
fbstp
out
add
jo
mov
add
jb
into
sub
in
and
hlt
sub
cltd
xchg
sti
stos
and
inc
xor
jno
mov
xchg
mov
pop
test
cmc
fnstcw
xchg
es
bnd
insb
idivb
jno
out
incl
xchg
lcall
fcoms
sub
add
pop
and
mov
aam
dec
out
fsubrs
mov
cltd
mov
mov
cmp
xchg
in
add
jmp
mov
data16
fcomps
mov
adcb
decb
mov
jecxz
pusha
jl
dec
pop
mov
jmp
fsub
jg
loop
movsl
movsb
bnd
inc
push
pop
inc
jnp
dec
cmpsl
dec
rclb
testb
outsl
xchg
adc
push
ja
inc
cmp
lcall
scas
xor
push
jmp
sti
mov
pop
fwait
lods
push
into
fldcw
fisubrs
or
enter
lahf
aaa
xor
daa
push
popa
mov
js
lock
cld
mov
scas
pop
mov
sbb
leave
jge
hlt
loope
push
jp
insl
addr16
pusha
xchg
dec
push
xlat
lock
mov
pop
ret
mov
ja
arpl
lret
lods
in
vucomisd
push
std
cmp
inc
fsubr
xchg
pop
ret
cwtl
dec
jg
xchg
inc
fiaddl
cltd
jle
rclb
pop
jp
mov
rol
rcrl
pop
jbe
xchg
stc
sarl
cmp
mov
cmp
xlat
fwait
out
add
mov
sub
bound
mov
pushf
fistpll
cmp
fsubrl
imul
insb
push
cmp
cs
loope
add
dec
insb
cmp
jmp
leave
add
cld
mov
mov
sub
mov
mov
jae
cltd
jecxz
out
jp
cmc
push
lahf
adc
test
outsb
es
push
sbb
incb
and
rol
add
jae
pop
lret
inc
out
and
inc
test
out
xchg
lea
xchg
pop
loopne
push
jns
and
aad
ret
lret
cmp
loope
dec
push
ljmp
xor
sub
into
sbb
inc
and
pop
jae
xchg
bound
jae
xlat
das
out
sub
add
shll
or
or
cltd
lret
dec
or
stc
dec
mov
outsb
int3
addb
xchg
pop
jb
mov
arpl
push
dec
out
sbb
mov
cmp
xor
loopne
ret
outsb
insl
mov
not
loop
jg
dec
push
fists
sti
shll
loope
push
out
inc
inc
jmp
push
and
sbbb
fcmovnu
push
mov
mov
xchg
call
mov
pop
sbb
adc
mov
pop
sbb
pushf
xlat
cmp
sbbb
scas
dec
and
jno
cwtl
mov
into
jo
aaa
mov
push
adc
into
test
sbbl
jmp
adc
fadd
jecxz
inc
sbb
stos
out
push
push
ror
jno
xor
mov
popf
enter
js
call
shr
incl
mov
jg
out
mov
jo
cmp
roll
mov
sub
jmp
ja
scas
or
in
or
movsl
scas
inc
dec
jae
pusha
int
adc
js
jg
mov
jecxz
inc
cmp
xchg
and
jl
cltd
dec
mov
arpl
je
mov
stc
icebp
cmpsl
sti
xlat
divl
out
outsl
mov
lcall
mov
ss
call
ljmp
lods
or
jg
jae
jns
bound
ret
ds
dec
mov
rcll
movsl
xchg
xor
inc
mov
cmp
or
fs
cs
mov
sbb
push
cmc
out
cmpsb
pop
inc
cmp
sahf
lcall
pop
pop
in
xchg
adc
adc
movsb
xchg
xor
jge
or
test
data16
test
dec
icebp
in
in
lock
adc
out
idivb
arpl
xor
decb
loopne
das
inc
adc
je
push
icebp
fs
cs
or
mov
clc
js
imul
stc
aas
add
int
xchg
or
adc
xor
adc
arpl
sbb
pop
cltd
lret
mov
repnz
stc
aaa
or
daa
out
movsl
dec
mov
outsl
jl
std
jbe
aad
inc
jmp
sbb
fprem
gs
add
xchg
jne
aam
stos
ret
jle
push
movsl
fnstcw
data16
cs
dec
pop
cmp
inc
movsl
cmp
or
jns
enter
lcall
lret
mov
icebp
xchg
sbb
push
mov
addl
imul
lds
cmp
xor
frstor
sbb
jns
outsl
adc
dec
addr16
insl
or
dec
mov
mov
adc
cltd
test
je
push
sub
push
jbe
cmp
mov
in
adc
push
lret
test
repnz
mov
das
rcrl
or
ret
jle
roll
pop
mov
mov
mov
call
int
xchg
jno
cmp
fldl
xchg
orl
add
fidivrs
add
ja
movsl
pop
add
inc
ficoms
pop
iretw
add
dec
out
andb
sbb
jmp
aad
mov
cmp
test
fdivp
mov
push
mov
aam
adcl
pop
adc
out
movsl
cmpl
pushf
mov
mov
enter
rcll
popa
insb
adc
cmpsb
mov
test
mov
sbbb
inc
es
fs
xor
fdivs
repnz
arpl
cwtl
pop
in
popa
push
inc
or
xchg
repz
jno
call
mov
data16
jbe
dec
out
clc
movsl
shlb
mov
xchg
iret
popf
adc
cli
pop
pop
enter
insb
andb
out
out
je
daa
sub
and
hlt
push
add
sbb
mov
stos
fstl
jle
xchg
repz
add
ljmp
call
lock
cld
hlt
ret
jbe
cwtl
mov
xchg
fs
dec
jecxz
inc
add
imul
jmp
and
adc
mov
cmp
dec
dec
dec
adc
imul
mov
sarb
or
jp
mov
xor
dec
fimull
and
pop
stos
scas
js
scas
nop
and
dec
int3
sbb
lea
or
in
add
push
fs
mov
sub
mov
mov
fmuls
les
cmp
xor
mov
pop
mov
fisttpll
leave
lret
pushf
mov
lret
xor
jmp
sub
inc
push
inc
out
icebp
push
cmp
cld
cmp
outsb
int3
mov
add
fnsave
imul
xorb
adc
cmp
fdiv
iret
insb
mov
aad
sbb
lret
jb
lea
push
jbe
insl
add
clc
and
cmp
popf
dec
js
and
cmp
fstps
mov
cwtl
or
pushfw
mov
push
or
jmp
ja
das
data16
cmp
and
and
inc
dec
call
stos
inc
mov
aad
nop
adc
cmpsl
push
inc
pop
lock
push
sub
out
in
loope
push
pop
lods
es
ljmp
cli
or
pop
jp
xor
std
ficoml
and
mov
add
lret
xchg
xor
mov
shll
scas
addr16
push
pop
mov
xchg
lret
pop
ror
imul
sub
setl
into
cld
xorl
aad
add
lods
mov
sbb
dec
mov
insb
add
ret
lahf
cmc
dec
test
mov
jmp
pop
mov
repnz
mov
push
sub
or
xchg
bound
mov
mov
xchg
mov
sbb
js
dec
sbbb
enter
adc
inc
xor
pop
sahf
out
jle
repnz
test
or
loop
rcr
adc
fs
xchg
fmul
movsb
xchg
sbb
xchg
pop
shlb
xchg
insl
lods
cmp
pop
fidivrl
clc
outsl
sbb
jmp
js
xor
adcb
jge
cs
dec
test
iret
repnz
orb
adc
popa
pop
aaa
push
lods
stc
jecxz
xchg
dec
rolb
and
xor
lods
sub
stos
adc
pop
je
mov
xor
inc
or
push
fcmovbe
push
mov
and
xchg
sbb
ljmp
jp
fmull
pop
js
repz
push
sub
fidivs
xor
mov
sahf
pop
arpl
push
sbb
sahf
es
pop
rcrl
lds
jmp
mov
cwtl
pop
sbb
jno
mov
cltd
addr16
cltd
xor
or
jo
mov
fwait
lea
push
ret
xchg
lret
leave
cmpsb
cmp
loop
and
sub
xor
push
in
inc
push
arpl
pop
or
fistpll
dec
jnp
or
mov
in
or
adc
sbb
xor
or
cmc
mov
xchg
push
fidivl
sarl
mov
leave
popa
inc
jo
lds
xchg
add
fidivrs
jge
rclb
mov
cwtl
aad
loop
cmpsb
repz
sub
mov
cmpsb
dec
call
shll
pop
aaa
mov
and
pop
mov
outsb
inc
les
mov
clc
push
cmp
lds
jb
xor
aaa
aaa
imul
data16
sbb
and
aad
sub
fsubs
mov
sub
data16
push
add
cmpsb
xor
jmp
mov
pusha
jb
adc
ret
jbe
enter
test
iret
sarb
mov
divl
jae
ja
sbb
stc
orb
inc
inc
add
test
pop
das
in
rcl
aas
xor
pinsrw
shlb
cmp
sbb
add
push
and
out
xchg
lcall
cwtl
mov
xchg
lock
fwait
mov
jmp
stos
call
inc
js
sti
jge
xor
jle
imul
and
xchg
dec
popa
lcall
pop
jecxz
roll
cmp
ret
pop
lock
cltd
mov
scas
mov
xchg
mov
rcrl
and
fdivp
ds
or
pop
jnp
fs
gs
or
ljmp
xchg
insl
adc
pushf
insb
iret
dec
push
adc
mov
mov
aas
jg
push
js
mov
outsb
push
xchg
ficoml
mov
aas
mov
sub
outsl
jp
mov
daa
cwtl
lahf
push
scas
or
fcompl
out
in
imul
fstps
pushf
loop
push
add
xchg
aaa
leave
mov
push
movsb
mov
pop
movl
repnz
shrl
into
lock
dec
mov
cmp
stos
fs
popf
mov
js
imul
pop
jecxz
push
and
xlat
sub
jns
idivl
dec
jbe
or
mov
sbb
iret
adc
mov
ficoms
leave
hlt
and
gs
in
push
sub
movsb
arpl
jge
jo
jnp
push
xchg
cmp
add
inc
pop
jecxz
into
mov
pcmpeqb
js
jle
push
cmp
jp
mov
pushf
pushf
outsb
aas
and
jmp
testl
scas
sub
fstpt
xor
insb
ffree
mov
js,pn
ja
cmp
cmp
int
or
xchg
adc
mov
sub
adc
das
dec
in
inc
sahf
xlat
add
inc
mov
xchg
xor
test
cmc
pop
das
mov
sbb
mov
loopne
movsl
das
loopne
aad
fiadds
fildll
mov
xchg
sub
jg
rolb
mov
sub
and
ss
call
inc
mulb
mov
mov
mov
pop
xchg
jo
mov
cmp
mov
sub
imul
cmc
cltd
test
ja
dec
dec
inc
sbb
or
xlat
jl
xchg
mov
dec
and
jmp
loope
shll
mov
rorl
jnp
cmp
repnz
or
sbb
and
into
add
jns
pop
cmp
lods
pop
xor
lret
cmp
adc
xor
push
cmp
cmpsl
cmp
aam
pop
insl
cmp
sti
movsl
xor
cld
repz
jp
push
aam
movsb
jne
incl
mov
inc
mov
dec
adc
mov
mov
das
fidivrs
cmp
int3
shl
imul
adc
fcmovbe
jmp
mov
nop
test
mov
in
pop
add
sbbl
imul
mov
mov
imul
pop
mov
mov
das
xchg
or
je
xchg
push
xchg
cmp
sbb
frstor
inc
pop
mov
pop
and
xor
mov
xchg
mov
sub
lcall
xor
movsb
movsl
jb
push
faddl
repnz
xor
test
sub
les
dec
mov
scas
rorb
mov
repnz
add
mov
adc
aaa
or
adc
and
in
cmp
movsl
dec
pop
mov
adc
cld
dec
sbb
js
aam
cmpsb
imull
enter
cmp
aaa
daa
jnp
and
ffreep
cli
dec
fsubp
mov
ds
std
iret
shl
sub
jo
add
aas
mov
mov
pushf
and
sbb
pushf
es
inc
sbb
test
scas
or
lea
mov
incb
jns
sub
adc
jmp
pop
mov
lods
cmc
add
dec
push
sbb
rorl
std
push
push
clc
sub
inc
repnz
jb
test
sbb
adc
jl
sbb
jge
jg
inc
lret
mov
adc
and
sub
mov
test
adc
adc
inc
xchg
sub
ret
sahf
adc
push
out
mov
sub
cmp
push
test
jmp
dec
scas
xor
std
popf
popf
mov
sub
testb
inc
jmp
andl
mov
xchg
push
pop
mov
add
push
xchg
test
jne
ficoms
repnz
sti
cmp
push
pop
aam
jge
aad
out
rcrb
pop
test
test
mov
xchg
outsl
jg
add
data16
xchg
pop
stos
enter
add
and
mov
popf
xor
movsb
push
pop
sub
and
int
or
dec
ret
mov
js
loope
insb
outsb
pushl
and
push
mov
jge
push
add
xor
sbb
rcll
shl
icebp
jno
push
add
jo
addr16
shrb
xorb
and
mov
jne
mov
ljmp
xchg
push
inc
jg
fcoms
mov
jle
gs
call
shlb
scas
movsb
jbe
lock
inc
test
incb
std
js
push
cltd
pandn
leave
push
adc
shr
or
loopne
sbb
icebp
lea
ficomps
push
dec
repnz
div
mov
pop
imul
jp
insb
inc
lahf
jg
dec
sbb
xchg
fsubs
push
jnp
xor
in
jg
data16
orb
lea
fidivrs
adc
push
inc
das
add
xchg
lods
pop
rcrl
add
je
sbb
inc
push
adc
shl
pushf
push
test
dec
call
xor
mov
push
or
fbstp
in
mov
orb
int
and
mov
dec
cmp
loope
xchg
pop
cmp
xor
sbb
inc
mov
iret
ret
mov
xlat
xor
ficoml
les
lods
jns
add
or
xor
sbb
push
je
hlt
mov
xchg
inc
sar
or
sub
adc
dec
fnstenv
bound
fisttpl
push
call
aad
inc
push
push
aas
mov
adc
cmp
sbb
or
cmp
inc
mov
mov
push
stos
dec
sbb
push
in
mov
insb
int3
std
add
jnp
lahf
sub
inc
jle
push
data16
mov
jne
dec
icebp
jae
push
jle
mov
fcmovnbe
jae
aam
or
jno
lret
lret
jp
fidivl
xchg
cmp
sub
mov
xchg
scas
ret
mov
in
daa
jecxz
in
ret
sub
and
ja
dec
xchg
dec
aaa
or
ja
dec
rcr
popa
pop
repz
fistpl
jp
shrb
xchg
stos
inc
outsb
ljmp
cmp
jnp
mov
add
test
push
pushf
je
xchg
movsb
movb
fnstenv
pop
out
lret
fwait
testl
or
frstor
cwtl
push
sbb
out
leave
mov
test
scas
cmp
dec
sub
lahf
leave
jno
adc
or
cmp
into
sbb
mov
push
pusha
scas
cmpsl
xchg
push
mov
inc
cli
cmp
sbb
ljmp
sub
inc
notl
js
les
xor
jnp
negb
in
adc
and
xchg
test
or
mov
pop
lods
jae
xchg
lahf
clc
cmp
lods
in
lahf
jbe
push
fsubp
push
dec
ret
stos
sub
lods
inc
jmp
sub
sub
int
cmp
rol
pop
inc
int
push
pop
loope
add
xor
mov
insb
lahf
dec
sti
mov
dec
out
std
add
jecxz
sbb
imul
or
mov
int
cld
mov
jns
out
cmpsb
popf
in
xchg
push
xor
popf
call
push
pop
ret
cmp
inc
mov
or
sbb
cmpsl
push
jg
popa
push
shlb
daa
in
icebp
shl
or
and
cmp
xor
sarb
adc
push
mul
mov
es
rorl
xchg
xchg
enter
ja
inc
imul
and
in
in
cmp
lods
sub
sbb
jne
lods
xchg
cld
pop
into
outsb
cs
and
and
cltd
add
cs
jo
xcrypt-cfb
cmpsl
addr16
xlat
imul
jle
lea
arpl
lods
mov
loope
shrl
sub
mov
ja
lahf
ja
adc
or
push
xchg
leave
stos
hlt
mov
inc
mov
inc
push
mov
push
call
xchg
xor
sbb
shl
insl
and
add
fcoms
dec
insl
inc
andl
or
lods
loop
jecxz
or
mov
adc
int
test
out
jae
fists
enter
shll
xchg
dec
cld
outsb
cmp
xchg
adc
mov
xor
sub
cmp
mov
cli
add
push
incl
test
mov
out
push
jae
mov
pop
mov
out
pushf
push
cli
test
mov
lds
ljmp
gs
fs
cmp
jnp
imull
jb
mov
fisubrs
mov
mov
dec
sbb
pop
add
aad
jmp
dec
pop
cmpsb
inc
pop
repz
movsl
mov
cli
ja
fwait
jmp
push
aas
and
fnstcw
jle
test
add
lret
out
lods
js
pusha
xchg
iret
adc
test
mov
xor
mov
lcall
es
fcmovbe
mov
in
into
iret
pop
jecxz
mov
rorb
ljmp
dec
xchg
mov
mov
or
in
jne
mov
xor
xor
pop
or
arpl
fdivl
and
xchg
pop
daa
dec
stos
leave
rorl
xchg
mov
jbe
loopne
xchg
or
pop
pop
mov
jge
cmpsb
xchg
cwtl
sub
jg
aas
xchg
nop
mov
pushf
add
stos
and
je
pop
dec
lcall
cmp
mov
dec
and
shlb
mov
shlb
mov
test
inc
sti
fiaddl
mov
lahf
mov
cltd
inc
jns
sahf
incb
mov
ds
dec
gs
cmp
xchg
or
push
outsl
push
into
movsl
push
or
jb
or
mov
jo
dec
divl
xor
loopne
imul
pop
sbb
aaa
in
and
or
mov
xchg
jg
push
xchg
and
inc
adc
out
and
das
ret
loopne
int
call
adc
xor
arpl
bound
xchg
mul
je
dec
dec
in
or
aas
popa
scas
dec
xlat
shlb
int3
insb
fdivp
cltd
les
pop
pop
pop
adc
or
dec
roll
je
cwtl
push
das
jb
ss
in
jns
sahf
jl
cld
mov
test
rcrl
sbb
test
sbb
stc
jecxz
pop
xchg
xor
mov
pop
dec
dec
sbb
enter
sti
inc
arpl
and
mov
lret
clc
addl
stos
lret
es
test
mov
ss
into
in
lods
fistl
xor
jle
push
into
xchg
bound
mov
jmp
test
or
lret
mov
xlat
ss
lea
cmpsb
mov
mov
add
push
push
popf
mov
rcr
gs
loopne
pop
and
sub
pop
mov
insb
add
dec
rcrl
icebp
cmpsl
outsl
sbb
fstl
iret
sbb
pop
push
loope
test
add
or
fwait
add
jmp
dec
cmpsb
mov
push
das
ljmp
fsts
pop
aad
mov
cbtw
cwtl
mov
movsl
xor
add
cmpsl
cwtl
aam
push
into
hlt
mov
mov
dec
cmpsb
movsb
int3
jle
adc
arpl
push
lods
dec
pop
sub
push
lds
sub
or
lds
ljmp
ficomps
aam
loop
add
push
cmp
mov
xchg
dec
mov
mov
pushf
nop
leave
int3
pushf
dec
imul
push
push
cmp
jne
lret
insl
mov
test
add
jmp
lret
sbb
icebp
sbb
sbb
xor
std
add
stos
cmpxchg
sbb
lock
or
inc
jmp
mov
adc
imul
sbb
xor
xchg
loopne
faddl
sub
jle
mov
pushf
ds
test
dec
jge
pop
imul
jne
shlb
ds
lahf
lret
ds
mov
mov
mov
xlat
xor
mov
mov
and
popa
fldenv
lea
xchg
add
mov
pushf
lcall
pop
mov
scas
out
popa
int3
adc
adc
xchg
fbstp
jae
push
jo
fidivl
or
sub
mov
xor
push
sub
divb
popa
pop
jle
pop
fcoms
mov
call
dec
and
sbb
jmp
cli
sarb
mov
fdivrl
jmpw
dec
dec
mov
and
and
adc
push
xor
iret
xor
insb
rorb
sbbl
jbe
xchg
iret
jecxz
repnz
mov
test
jbe
mov
int3
xchg
mov
mov
lods
shld
push
addr16
jno
scas
mov
xchg
mov
add
push
pop
inc
ror
jp
or
sbb
adc
inc
pop
out
jmp
cmp
sti
call
adc
subb
jmp
xchg
xor
sti
cmp
or
lock
aam
call
mov
lret
je
mov
scas
dec
add
cmp
add
dec
iret
filds
dec
enter
push
std
daa
sbb
mov
mov
loopne
mov
mov
mov
in
stos
mov
insb
and
jno
cmpb
adc
cmp
mov
mov
call
lods
das
sbb
mov
or
cli
mov
pop
js
adc
int
cmp
icebp
pop
popf
jbe
test
repz
in
or
sub
js
ja
inc
out
sbb
push
sub
faddl
fnstsw
sbb
aad
mov
fisttpl
or
int
mov
cwtl
out
cmp
and
scas
mov
or
add
insb
fisttps
test
frstor
sahf
adc
ss
js
inc
or
je
dec
aaa
lock
das
leave
dec
fdivs
call
in
add
sub
cmpsl
push
adc
cmp
arpl
jl
cli
inc
adc
in
or
pop
adc
fsubs
and
adc
push
into
push
aas
push
insl
xchg
adc
addr16
dec
dec
int3
repz
or
lahf
or
icebp
mov
jecxz
xor
cli
pop
jbe
and
sahf
mov
push
dec
xorb
jnp
fadds
inc
cmc
clc
adcl
and
jmp
xchg
mov
cltd
icebp
xchg
pop
xor
fdivl
mov
insb
dec
and
mov
pop
repnz
mov
cmp
adc
je
dec
dec
jae
jg
cmp
xorl
loopne
test
mov
and
push
out
jmp
out
les
mov
imul
xor
pop
push
mov
sbb
movsl
mov
and
mov
ret
xor
or
xchg
dec
inc
mov
subl
dec
arpl
xchg
jnp
and
inc
enter
lds
dec
jo
in
test
dec
or
push
add
pop
mov
cli
sub
stos
jl
test
nop
mov
push
mov
fldt
mov
jmp
xchg
or
jle
repnz
imul
mov
fdivs
unpcklps
mov
lcall
movsl
out
lods
movsb
inc
fmuls
enter
mov
clc
insl
push
lcallw
cs
jecxz
nop
in
insl
or
stos
and
icebp
jl
scas
aas
hlt
cli
cmpb
sub
pop
mov
stos
jge
fcoms
pop
out
sbb
mov
jmp
pop
inc
subl
ja
iret
fcomi
repz
sbb
imul
adc
sbb
sbb
jnp
movsb
sarb
adcl
sbb
ljmp
lahf
pop
mov
adc
das
sub
xor
cmc
pop
outsb
cli
aaa
push
in
lea
fwait
dec
pop
cmp
mov
mov
sarb
rcr
push
lds
cmp
and
mull
mov
or
push
sarb
jmp
sbb
ret
sbbb
mov
nop
cmpsb
adc
bound
ds
cmp
lods
or
mov
test
ljmp
ficomps
popl
fcompl
xchg
int3
dec
in
push
jecxz
cmp
and
lds
sub
pushl
push
xor
cmpsb
mov
shrb
or
mov
or
jo
mov
inc
test
addb
popa
aad
lret
mov
inc
mov
into
adc
jl
sbb
jnp
cmp
inc
gs
stos
addr16
pop
inc
cmp
sub
out
aas
out
jns
std
sbb
push
cld
add
nop
push
sub
sbb
push
ffreep
shlb
outsb
jecxz
push
test
push
jb
xchg
push
dec
jecxz
xor
stos
pop
mov
or
push
pushf
aam
out
loop
outsl
jl
stos
sub
cs
sbb
outsb
pop
mov
xlat
cwtl
mov
mov
out
adc
push
in
xor
sbb
arpl
pminsw
in
mov
mov
xor
pop
mov
pop
lods
jle
rclb
sbb
movsl
rcrl
push
mov
sarl
and
out
test
test
gs
inc
and
inc
jae
stc
nop
pop
insb
cmp
mov
out
dec
fwait
xchg
outsb
insl
mov
jb
add
push
jg
femms
aas
jbe
std
jne
adc
push
mov
jne
push
dec
test
or
mov
push
stos
insb
and
sub
jo
dec
imul
repz
cmp
dec
je
lahf
imul
push
jle
ret
outsl
pop
sbb
fbld
adc
jbe
mov
fwait
sti
xor
adc
into
mov
jl
xchg
pop
pop
inc
popa
xchg
xor
subl
jecxz
daa
and
push
xchg
outsb
fdivs
outsb
hlt
adc
jo
lds
iret
pop
jg
scas
mov
stc
pushfw
je
add
sti
or
xlat
inc
mov
cmp
or
add
jle
fistpll
xchg
pop
rorl
xchg
test
xchg
test
and
adc
jl
mov
test
push
cmpsb
ret
daa
add
aam
loopew
cli
repnz
xor
jg
addb
clc
adc
in
imul
xor
repnz
push
jge
add
and
cmpsl
add
imul
pusha
ja
add
push
cmpsl
ja
push
dec
mov
loop
movsl
add
adc
pop
in
push
int3
cmp
cwtl
mov
aaa
sub
scas
cmp
cmp
cltd
loope
add
stos
xor
ficoml
daa
jg
rolb
sbb
dec
fmuls
dec
xchg
dec
mov
inc
xchg
jnp
insb
imul
mov
or
daa
fbstp
pop
in
test
scas
out
add
xchg
fisubl
notb
cld
negb
push
xchg
push
dec
jp
mov
adc
jmp
and
sub
sti
out
push
es
mov
adc
cmp
xor
adc
cmpsl
xchg
fildll
call
push
mov
pop
jmp
mov
xchg
push
pushl
fdivs
cmpsl
cli
jbe
popf
dec
dec
imul
and
inc
mov
xor
pushf
imul
cmpsb
adc
lahf
jecxz
xor
in
add
imul
rorb
inc
or
stos
movsl
xchg
out
mov
loopne
scas
fadds
and
dec
nop
and
shl
mov
lea
pop
mov
sarb
gs
push
mov
pusha
push
aam
test
test
nop
divb
pop
fs
js
lea
cltd
lret
xor
or
add
pop
cmp
xor
pop
loopne
jle
sub
shrl
xor
call
std
mov
clc
lret
or
movsb
shrb
es
aas
add
mov
pop
dec
cmpsl
sbb
xchg
push
scas
or
call
ja
loopne
jl
fstl
mov
call
movsb
or
enter
dec
test
and
es
sbb
popa
daa
inc
test
push
adc
in
aas
in
insb
lcall
call
sub
lock
cmp
mov
mov
mov
or
sbb
xchg
hlt
in
inc
stos
lcall
xchg
push
loope
xchg
lcall
pop
fimull
mulb
pop
push
push
mov
jb
add
int
jno
xchg
ret
mov
adc
nop
pop
jmp
xchg
aaa
imul
pop
dec
mov
aad
aad
jecxz
jbe
mov
push
leave
adc
dec
xchg
inc
inc
insl
inc
push
dec
js
push
push
xchg
in
popf
std
addr16
mov
sub
shrl
pusha
mov
mov
scas
dec
and
sbb
mov
es
xchg
test
scas
mov
loope
out
movsl
pop
clc
mov
test
cwtl
or
mov
cld
push
sbb
shl
add
leave
xor
or
negl
aad
mov
push
repnz
xor
inc
enter
jecxz
fsubr
scas
arpl
mov
movl
es
arpl
std
push
mov
pop
hlt
movsl
xchg
pop
mov
sbb
add
sbbl
test
pop
popa
mov
mov
adc
jno
movsl
mov
aas
subb
scas
inc
sti
xchg
fwait
or
jns
outsb
mov
pop
lret
in
jp
mov
dec
mov
sahf
xor
sbb
test
mov
dec
stos
rcl
jl
lods
pusha
mov
xor
repnz
sbb
dec
dec
xorb
sub
mov
insl
fdivrl
xchg
sbb
imul
adc
lea
outsl
or
fisttpl
xchg
divl
inc
adc
mov
cmp
pop
pop
outsl
jmp
mov
fisubs
imul
jge
lahf
jo
xchg
push
movsl
push
sarl
jae
repnz
mov
add
add
mov
rcrl
xor
xchg
incb
imul
orb
jl
fwait
dec
imul
icebp
adc
and
push
neg
insb
jmp
mov
es
nop
sbb
xor
dec
lea
insb
mov
xchg
imul
dec
dec
jo
divps
pop
sti
ss
push
stos
sbb
and
and
adc
pop
mov
xchg
out
mov
repz
xchg
mov
and
push
incb
call
test
in
ret
cmp
cmp
add
pop
sub
popf
adc
inc
mov
idivl
sahf
push
std
cli
lret
nop
fwait
inc
inc
pop
inc
push
cld
gs
sub
nop
dec
or
mov
xor
lahf
add
inc
sbb
nop
test
lret
mov
std
inc
sbb
inc
cmpsl
mov
inc
sbb
dec
and
jb
adc
mov
mov
nop
ja
mov
push
push
imul
loopne
mov
and
mov
sub
jle
sbb
mul
leave
xchg
inc
ret
pop
loope
dec
jno
push
add
jecxz
bound
push
lret
bound
movsl
mov
and
mov
xchg
jmp
imul
pop
pop
sbb
dec
xchg
or
mov
mov
pop
jno
sub
ljmp
and
mov
adc
xor
pop
push
and
cmc
mov
fmuls
pop
repnz
xchg
in
fisttps
outsb
insb
xchg
bound
xchg
mov
hlt
cs
mov
adc
ljmp
xor
sbb
into
addr16
jg
cwtl
mov
stc
lods
inc
cs
mov
fdiv
fwait
and
cmpsb
idivl
mov
scas
adc
jg
movsb
hlt
sub
pop
push
in
out
dec
in
sub
or
push
inc
cld
mov
ds
cmp
or
push
xor
sbb
fcoms
repz
mov
cmp
gs
iret
push
loopne
pop
pop
stos
push
aas
sbb
into
sbb
mov
sbb
xchg
hlt
mov
test
mov
pop
jge
out
or
dec
mov
outsb
je
push
sbb
mov
adc
div
mov
pop
mov
leavew
rol
mov
mulb
mov
int
pop
dec
pop
leave
shll
lret
sbb
mov
push
mov
out
scas
je
mov
mov
push
imul
ss
out
add
ljmp
inc
fwait
insl
mov
or
jo
pop
enter
fiaddl
xor
pop
or
vpunpcklqdq
pop
cmp
gs
pop
ficomps
stc
push
bound
xchg
ficoml
fadd
lods
ss
pop
dec
loope
insb
mov
daa
addr16
pop
pop
sarl
dec
jo
push
dec
aad
fldcw
inc
jle
jo
lret
movsl
xor
repz
out
lea
fcoms
adc
movsb
mov
and
add
out
pushf
adc
test
cld
push
fisttps
inc
neg
scas
mov
fbld
scas
inc
in
xchg
stc
test
mov
test
jge
xchg
sub
sub
and
mov
and
lods
add
mov
add
jno
xchg
mov
clc
fiadds
das
and
and
and
mov
cmp
mov
sbb
repnz
xor
add
xor
loope
dec
jp
mov
movsb
push
std
jnp
xor
inc
pop
xlat
sbb
xlat
test
test
or
shll
aad
out
adc
lods
lods
cmp
xor
inc
cli
insb
insl
int
in
xchg
stos
out
or
emms
test
sub
jge
xor
iret
pop
outsb
adc
fists
push
mov
mov
ljmp
push
fcom
pop
push
insb
call
jnp
mov
push
outsb
mov
xchg
dec
mov
pop
testb
mov
dec
sti
sub
out
sub
jp
adc
cmp
xor
repz
sub
sbb
xlat
scas
xlat
add
call
dec
sbb
mov
outsb
push
pop
loop
roll
cmp
orl
out
ljmp
xor
icebp
sub
fidivrl
xchg
inc
insb
sbb
jmp
cld
cmpsl
or
mov
icebp
dec
hlt
arpl
sbb
mov
out
es
das
mov
rolb
les
mov
sub
je
push
sub
jl
icebp
push
jmp
mov
jmp
aaa
ret
pop
pop
repz
pop
jno
mov
xor
lret
jmp
lds
loop
pop
lret
mov
mov
mov
aaa
aam
aam
das
push
jae
push
pushf
adc
and
xor
adc
lock
xchg
inc
push
mov
fdivs
call
int
incl
andb
cmp
xchg
stos
stc
ja
inc
inc
test
jno
add
sub
jbe
xor
mov
jbe
sbbb
jne
inc
lock
cmp
pushf
xor
imul
xchg
fcomps
jno
sub
cmpsb
icebp
inc
or
cmp
sub
xlat
mov
imul
out
cld
cwtl
les
outsl
fstpt
cmp
sub
or
sbb
lods
inc
push
xor
arpl
mov
nop
clc
push
mov
xchg
enter
adc
mov
test
movsl
in
fwait
int
and
aaa
lea
push
cmp
enter
in
imul
mov
les
andb
and
stc
mov
mov
les
ljmp
arpl
xor
dec
add
mov
cld
push
pop
mov
lock
testb
js
aad
xchg
cli
js
cld
mov
je
cmp
xchg
shlb
xchg
lds
jae
out
mov
adc
aaa
xor
mov
jb
xchg
idiv
mov
dec
loope
sysret
or
sbb
jl
lds
test
pop
ret
pop
shr
xor
xor
mov
inc
movsb
sub
cmp
mov
xchg
bound
inc
push
shl
test
and
adc
fisttps
jmp
mov
push
mov
mov
push
cmp
loope
jbe
push
repnz
mov
stos
daa
fnstenv
and
jnp
loopne
mov
sub
insb
lods
insl
fisttps
adc
out
sub
xor
xor
sbb
bnd
popf
imul
or
push
push
gs
lods
ror
fsubs
sbbb
cltd
icebp
into
push
adc
das
ja
aam
xchg
ret
stos
xor
out
or
jge
sbb
insl
dec
xlat
mov
test
add
int3
xor
xor
cmpsl
pop
jg
sub
aad
xor
lods
in
fisttpl
dec
ds
push
or
mov
aas
icebp
push
sub
dec
data16
jmp
fidivrs
mov
mov
jge,pn
mov
and
jo
jge
add
cmpsl
mov
js
push
dec
push
ja
mov
xor
cli
ljmp
aam
jg
mov
shrb
inc
add
sbb
fcompl
iret
push
fmuls
shlb
lahf
inc
or
jae
das
mov
push
sbbl
cltd
mov
outsl
out
xor
fs
mov
or
jne
mov
lahf
mov
or
push
push
out
stos
rolb
imul
dec
and
dec
jae
dec
jle
push
insb
scas
mov
fwait
cmp
lods
push
ret
cmp
jmp
pop
xchg
fcos
sbb
imul
pop
pushf
pop
clc
in
setae
popa
push
fimuls
arpl
cmpsb
dec
or
push
in
fcom
fistps
xor
mov
scas
mov
loopne
sahf
icebp
arpl
mov
cmp
xchg
das
jp
pop
mov
jecxz
popa
popf
and
imulb
ljmp
mov
ljmp
dec
cmc
popf
fldl2e
outsb
test
cmp
flds
rorl
cmpsb
mov
inc
pushf
movsb
mov
and
std
loope
out
fldl
jno
or
push
jns
bound
jo
aaa
or
loop
and
rorl
out
aaa
sbb
fsub
mov
pop
jns
add
sbb
aas
push
or
or
aam
aad
mov
push
sbb
pop
xor
push
lods
cs
xor
jg
mov
scas
cmpsb
inc
dec
inc
ja
xchg
inc
lock
inc
and
test
mov
dec
add
push
jle
pop
lcall
add
pop
outsb
lods
mov
test
pusha
out
push
add
lret
mov
mov
sahf
add
fcmovbe
mov
mov
xchg
stos
jmp
cmp
add
xchg
mov
push
sar
into
pop
pop
jo
fistpll
jmp
mov
push
or
push
shrb
inc
movsl
jb
outsb
mov
push
stos
push
cmc
mov
icebp
out
dec
mulb
fmul
adc
in
out
ret
clc
push
mov
fmul
std
pushf
mov
adc
push
sub
mov
adc
cmp
xor
pop
and
xchg
cmp
push
sbb
dec
scas
xlat
lret
fdiv
inc
mov
mov
imul
lods
or
aaa
stc
lret
cli
divl
lock
enter
sbb
mov
jmp
lret
pop
mov
xchg
arpl
mov
pop
clc
xchg
xor
iret
sbb
push
mov
xlat
cmp
sti
addr16
mov
cmp
gs
sub
jnp
in
jae
push
in
sbb
lret
clc
mov
ljmp
repz
scas
movb
xor
cld
jecxz
sarb
add
sahf
aaa
scas
cltd
int
ja
movsb
and
in
add
hlt
xlat
shl
test
add
js
dec
xchg
arpl
and
iret
cmpsl
push
lahf
lea
fistpll
clc
pop
jmp
cltd
pushf
popf
jb
dec
jbe
xchg
aam
xor
mov
aaa
mov
sarl
pop
int3
stos
and
ss
sub
jns
ret
add
jne
filds
fldcw
lods
mov
lret
fs
pop
sbb
cmp
sub
pop
xchg
or
push
into
inc
sub
inc
pop
add
mov
push
scas
xchg
ret
sti
fcmovne
mov
mov
xor
daa
mov
cmp
aas
cmp
es
adc
adc
scas
adc
xor
movsb
mov
inc
cmpsb
inc
push
hlt
mov
jge
push
inc
ret
and
pushw
icebp
ja
in
fs
psraw
sbb
aad
clc
xchg
lock
jo
out
into
lods
jnp
pop
das
add
adc
jecxz
out
lcall
xor
mov
test
frstor
xchg
cmp
fcmovu
stos
fucom
mov
mov
arpl
mov
repz
fwait
cmp
out
cmp
in
sahf
mov
mov
in
mov
jge
pop
daa
pop
fcmovne
pop
or
hlt
sub
lret
es
shl
sub
push
stc
xchg
icebp
xchg
aaa
cmpsb
lret
fwait
push
test
jno
je
xor
xor
xor
dec
cli
jg
mov
xor
mov
shll
jnp
pop
jle
lds
jno
daa
mov
cmp
sti
mov
mov
das
es
cmpsl
dec
leave
leave
dec
sbb
push
mov
push
push
jmp
sbb
jle
nop
dec
push
mov
jne
push
xor
mov
rclb
dec
popf
inc
pop
stos
jp
and
divb
enter
jecxz
xchg
push
cs
sbb
mov
rclb
xlat
adc
pushl
ficoml
xchg
or
aaa
inc
gs
fincstp
test
sbb
hlt
cmpsl
push
lcall
pop
leave
sbb
mov
adc
sbb
repz
lret
xor
divb
dec
pop
mov
or
jp
jo
testl
sub
lret
adc
ds
pop
sub
add
mov
mov
sti
ljmp
ret
push
loope
xor
xchg
xchg
movsb
arpl
rolb
xlat
mov
dec
pop
pop
add
stos
decb
lock
lods
inc
pop
jmp
daa
xor
rolb
cmp
xchg
jl
scas
jne
inc
dec
ret
add
dec
pop
add
push
bnd
sbb
fwait
add
repnz
pop
sub
cmp
repnz
loop
mov
mov
xor
sarl
pop
sbb
lds
push
inc
inc
out
jbe,pn
hlt
adc
dec
ja
mov
xchg
in
jbe
cs
scas
jle
sbb
cvtdq2ps
loope
cld
mov
mov
xor
aaa
fildll
jns
and
call
gs
cli
test
fistl
cmc
and
xchg
cmp
movsb
inc
pushl
daa
cmp
std
xchg
movsb
jnp
ljmp
inc
ss
scas
lcall
jmp
ret
out
mov
mov
cmp
add
mov
movsb
jg
mov
jp
xor
add
sub
sbb
in
adc
inc
jge
test
push
push
adc
popf
fs
pop
int
pop
mov
xor
outsb
mov
push
inc
push
or
jnp
pop
daa
cli
adc
cld
sub
movsb
xchg
es
test
xchg
sahf
insb
rcll
das
imul
icebp
sbb
dec
lahf
icebp
pushf
cld
test
adc
push
pushl
popa
stc
sub
daa
les
shlb
xchg
mov
or
leave
cmp
jns
lds
sahf
push
mov
repnz
and
and
outsb
xchg
mov
or
adc
aad
pop
mov
enter
rcll
sbb
fs
xchg
push
mov
pushw
je
jge
mov
lahf
mov
or
sti
add
in
xchg
jnp
pop
xor
mov
push
xchg
xor
cmpsl
lock
mov
inc
cltd
fadds
dec
pop
cltd
leave
xchg
aad
cltd
sbb
fstpt
test
int3
and
or
rorb
bswap
fxch
and
push
cmp
mov
rcrl
dec
pop
mov
jbe
add
inc
xor
repnz
xchg
or
adc
loop
cmp
xor
loop
test
stos
mov
aad
mov
push
cwtl
ret
movsb
fsubr
xchg
outsl
movsb
rorb
sub
out
mov
in
dec
inc
adc
lods
or
aad
sbb
scas
in
sub
outsb
fdivrl
pusha
fidivrs
hlt
imul
ljmp
js
cli
cmp
xchg
mov
and
or
rcrl
add
pop
jl
mov
mov
fists
pop
aaa
into
mov
dec
inc
fwait
test
mov
lahf
mov
inc
lea
test
jbe
daa
add
test
mov
scas
icebp
into
je
mov
stc
sbb
add
lret
xor
lds
rcl
sub
rcrb
ljmp
inc
mov
sbb
sarb
inc
adcl
sbb
push
sbb
out
test
lret
stos
rclb
add
push
jle
cmpsl
xor
xor
pop
loopne
test
pop
mov
add
andb
mov
lock
push
sub
hlt
jg
mov
f2xm1
and
repz
bound
mov
leave
vsqrtss
cmpsl
orl
mov
mov
push
xor
lea
mov
adc
or
fwait
cmpsl
mov
les
xor
nop
mov
mov
cltd
push
mov
test
in
inc
insb
jne
and
mov
and
je
or
int
jge
or
testb
aam
xchg
pop
jl
jo
sbb
lds
hlt
repz
sub
lret
pop
jno
pop
push
aas
push
pop
mov
mov
push
mov
sbb
xor
in
lahf
pop
lods
mov
xor
mov
xchg
lahf
mov
mov
mov
add
add
xor
in
jb
mov
mov
mov
shll
adc
cmp
xchg
adc
shlb
stos
scas
fsubrs
adc
mov
inc
cmp
lds
pop
int3
into
lahf
push
nop
jp
mov
add
es
aam
test
ja
neg
pop
arpl
mov
push
add
dec
gs
sarb
aam
lcall
or
enter
jge
and
jnp
xchg
test
xchg
out
ljmp
xchg
daa
fisttps
mov
mov
and
popf
sbb
pop
lock
xchg
shr
push
xor
mov
push
repnz
enter
add
lds
mov
addr16
lods
push
push
lret
add
xchg
rcrl
dec
rcr
push
sahf
mov
xor
mov
add
ljmp
test
xchg
jecxz
lods
xor
lea
nop
adc
je
fnstsw
fptan
retw
repnz
je
adc
adc
add
dec
fldt
jne
lcall
popf
hlt
icebp
mov
imull
xchg
das
stos
xor
pop
mov
inc
decb
movsl
cmp
repnz
nop
es
cwtl
mov
dec
orl
jg
cli
add
inc
sub
mov
in
icebp
ja
xor
sahf
mov
aaa
sub
xor
js
out
sbb
push
pop
lods
push
mov
in
sub
add
ret
xchg
pop
ror
je
pusha
lock
cwtl
stos
icebp
and
xor
sbb
in
das
jns
out
imul
mov
test
cmp
aas
pop
lret
mov
xor
mov
xchg
subb
inc
out
mov
xor
ret
inc
in
imul
fdivs
insb
add
and
std
dec
jl
xchg
jecxz
mov
ficoms
xor
jns
stos
lahf
jb
mov
pushf
std
xlat
mov
stc
cld
test
sarb
adc
dec
push
ret
jnp
or
aas
add
sti
xchg
lret
lret
cmp
xor
les
sub
ja
fwait
gs
or
inc
lds
and
and
jae
pop
cmp
and
mov
insb
or
inc
jne
cmpl
sub
ljmp
cltd
cmc
push
xlat
stos
lods
sbb
mov
add
push
mov
leave
jge
adc
pop
jg
dec
xor
outsb
push
les
sbb
or
or
xor
sub
mov
inc
popf
sub
and
pop
xchg
outsl
daa
pop
cmpl
inc
in
pop
ficoms
adc
faddp
dec
ret
jg
mov
push
cltd
fsubr
jmp
cmc
stos
xchg
stos
jne
pop
mov
jl
mov
test
in
adc
mov
decb
test
mov
aad
insl
and
pop
mov
dec
and
push
leave
xchg
add
nop
insb
sub
mov
ss
std
call
and
dec
cltd
scas
cmc
adc
jle
lret
push
sub
shlb
addl
sahf
in
xorl
xchg
add
lret
mov
xor
lods
lds
jnp
sbb
or
lret
pop
movsb
gs
mov
push
mov
mov
inc
popa
xchg
out
int
pop
xor
data16
xchg
xor
sbbb
pop
lds
je
jae
sub
cwtl
push
and
jge
add
ret
cmp
jae
cmp
cmpsl
andl
add
sbb
mov
or
bound
xor
inc
pop
mov
mov
test
push
mov
cmp
add
xlat
dec
mov
dec
dec
and
outsb
scas
push
les
aaa
test
push
repz
push
faddl
xor
push
in
std
ja
xor
xor
or
in
jb
addr16
and
call
popf
call
mov
adcb
in
push
or
inc
loop
test
or
jle
mov
ds
lahf
or
fwait
cld
in
int3
es
sbb
jmp
lock
in
sub
sub
divb
xor
xchg
divl
push
lret
rcll
mov
out
fiadds
xorb
js
js
mov
mov
lahf
vmovups
popf
jge
cld
inc
inc
xchg
mov
cltd
popl
sbb
das
rclb
pop
mov
pop
fldt
int
int3
pushf
ds
arpl
movsb
mov
xchg
sub
imul
sbb
mov
sub
inc
or
mov
lea
lea
push
rcr
and
jns
negb
xchg
push
mov
ficomps
xor
push
pop
mov
pusha
das
jecxz
and
xor
inc
pushf
sbb
je
cwtl
mov
adc
shrl
rol
sub
ljmp
mov
cmp
sbb
adc
and
in
dec
repnz
adc
dec
xor
xchg
adc
jmp
mov
inc
inc
movsb
aas
cltd
push
or
pop
xor
mov
lods
into
pushf
imul
jp
adc
cli
cltd
cli
inc
sub
shll
adc
cmpsl
stc
mov
inc
mov
subb
inc
dec
mov
xchg
sti
push
cmova
mov
fdivr
mov
pop
xlat
adc
in
shlb
in
lret
dec
cltd
and
inc
hlt
cli
adc
jle
add
xor
movsb
inc
inc
pushf
movsl
cmp
push
push
mov
jb
in
or
add
jecxz
jnp
mov
sub
jo
add
and
mov
je
xchg
xor
and
dec
ja
push
mov
das
test
dec
ja
cli
shlb
in
sbb
adcl
stos
fcmovne
out
in
outsb
cmp
xor
add
jge
sti
std
dec
adc
js
lret
or
or
shll
lahf
leave
pop
shl
aaa
pop
mov
fidivrs
imul
xchg
jl
push
pushf
loopne
and
xchg
adc
jb
gs
jl
push
clc
sbb
sar
sub
sarb
mov
jae
xor
and
cmc
inc
sub
mov
enter
push
sub
testl
rorb
pop
xor
xor
cmp
fldt
cmp
mov
int3
rcrb
xor
add
js
pop
pop
pop
xlat
mov
punpcklbw
add
mov
jmp
pusha
sar
mov
mov
sbb
inc
cld
pop
out
hlt
cmc
mov
gs
cmpsl
or
movsb
test
dec
lea
js
stc
add
push
xor
add
cmp
cltd
push
dec
xor
lahf
or
xchg
add
push
ficomps
test
mov
mov
jp
push
jae
aad
jmp
out
stc
xlat
inc
mov
ds
lea
and
sub
push
dec
mov
pop
sbb
xchg
outsl
push
loop
fisttps
cmp
push
sub
and
push
in
sbb
lahf
int
inc
push
int3
js
mov
or
sub
cmp
xchg
push
sub
out
and
mov
fisubrs
iret
adc
jg
adcb
mov
mov
lds
aas
sub
and
orb
insl
push
out
jne
push
push
es
pop
mov
mov
shrb
mov
push
push
dec
daa
stos
push
dec
push
pushf
fwait
lods
mov
es
sub
loop
data16
testl
imull
test
aaa
les
dec
jb
push
enter
js
mov
js
cld
cmpb
movsb
cmp
sbb
sti
sbb
sarl
push
scas
ja
and
sarb
movsb
push
fistl
lods
cld
pop
dec
fstps
test
dec
mov
mov
loope
dec
mov
dec
rcrl
arpl
mull
leave
or
adc
imul
icebp
dec
cmp
mov
std
adc
rorl
test
push
xchg
mov
rolb
fnstcw
and
or
scas
es
aad
mov
daa
add
fsubrs
or
pop
fldcw
mov
mov
ljmp
sub
xlat
push
sub
mov
cmp
addr16
sbb
rol
fsubrl
sub
sbb
popf
lcall
sbb
add
mov
icebp
and
sbb
stos
aaa
imul
cs
mov
xchg
shll
or
sahf
and
mov
jne
and
out
orb
cmp
xchg
mov
addr16
pop
outsb
cltd
aas
xlat
daa
inc
dec
mov
mov
rorl
test
lret
imul
inc
out
cmp
mov
daa
out
sub
fadd
js
xchg
stos
mov
inc
jno
mov
imul
push
fsubrl
addb
das
mov
push
mov
out
addr16
imul
jg
jp
shl
fldenv
mov
xlat
popa
dec
lods
mov
into
cmp
insb
sar
and
push
sub
jns
ret
inc
out
mov
and
out
je
jg
mov
addr16
inc
daa
arpl
aas
out
hlt
loopne
sub
dec
mov
test
dec
fucomip
cld
sub
ja
inc
lods
inc
ja
aad
jp
sub
dec
lods
cli
loop
pop
sub
les
pushf
add
pop
cmp
xchg
cmp
sbb
js
inc
mov
dec
aad
cmp
mov
mov
jle
and
sbb
pop
push
leave
xchg
xchg
push
orl
xlat
mov
sbb
mov
neg
add
cmpsb
cmp
aam
cltd
dec
inc
test
mov
xor
bound
mov
aam
cld
mov
lods
push
frstor
jg
icebp
and
fistpl
inc
mov
pop
sbb
pop
adc
out
jge
pop
sahf
fimull
out
xchg
jo
mov
clc
leave
sbb
mov
icebp
xchg
popa
frstor
mov
mov
les
ljmp
add
push
incb
cmp
es
rcrl
jmp
mov
pusha
and
inc
outsb
pop
jg
in
mov
addb
jp
iret
cld
mov
orb
jl
or
orb
or
inc
and
out
sahf
sbb
test
cld
rorb
pop
inc
mov
leave
or
dec
and
outsb
leave
hlt
push
jle
fisubrs
mov
xchg
mov
xchg
xchg
jnp
add
rorb
test
mov
test
sbb
sbb
out
mov
xchg
sub
out
aas
enter
cmpsb
or
mov
xchg
nop
insl
add
sub
xchg
test
icebp
cmp
xchg
mov
mov
in
dec
shl
inc
stc
inc
push
inc
pusha
lods
dec
arpl
mov
icebp
pop
inc
xor
mov
or
popf
sbb
mov
jp
into
push
xchg
mov
jnp
aad
punpckhdq
scas
test
push
sbb
ficoms
clc
das
in
ljmp
not
pop
jp
pop
faddp
mov
popa
inc
adc
nop
hlt
mov
pop
cs
stos
add
xchg
mov
data16
cmp
jae
mov
push
jnp
into
and
xlat
aaa
xor
xor
adc
and
out
mov
imul
inc
fnstsw
dec
jle
or
pop
data16
and
add
out
scas
mov
fidivrs
sbb
out
mov
ret
movsl
pop
mov
sarl
fwait
es
rcrb
inc
fnstenv
add
add
mov
leave
xlat
iret
jne
lahf
and
in
pop
pop
ret
and
cmpl
imul
xchg
ret
add
pop
inc
or
xchg
sbb
cmp
imul
adc
aad
xchg
sub
xchg
jle,pt
xorb
aas
push
mov
fsubrs
iret
jae
lea
pop
jge
lret
cmp
add
inc
or
mov
adc
push
mov
mov
leave
or
loopne
pop
out
pop
mov
xchg
sbb
add
xor
fwait
push
cli
gs
cmpsb
mov
dec
cmp
in
fsubrs
ret
and
fsubr
push
cmp
adc
mov
xor
mov
xor
and
sub
cs
dec
movsb
mov
adc
cld
or
cld
mov
inc
sbb
sub
or
mov
pop
sub
push
aaa
subl
xchg
adc
mov
in
jle
lret
and
sub
cmp
mov
roll
icebp
xlat
push
push
into
xor
outsb
or
out
or
xchg
mov
pop
fwait
jg
je
mov
add
inc
dec
mov
pop
mov
and
mov
ss
js
adc
ljmp
subl
push
dec
inc
out
add
pop
int
or
mov
adc
insb
sub
push
mov
sti
cmpl
popa
cmpsl
addb
jns
dec
xor
popf
out
add
sub
xor
xchg
pop
cwtl
fstl
mov
and
adcl
and
cwtl
imul
cmpsl
jmp
mov
jns
sti
pop
insl
fisubrl
fwait
loopne
mov
fdivrl
ret
scas
jne
add
outsl
mov
out
push
jne
icebp
ds
push
push
scas
imul
xchg
mov
popf
ret
push
add
fdivrl
dec
bound
in
aaa
sbb
jne
in
mov
mov
subl
cmp
xchg
mov
loop
mov
add
jl
jns
test
icebp
std
lahf
inc
pop
or
mov
jle
loop
pop
je
or
cs
mov
cmc
and
lret
sarl
xchg
repnz
les
sbb
add
adc
andb
jmp
xor
mov
sbb
adc
aaa
std
jno
push
adc
pusha
iret
or
mov
sbb
mov
loope
scas
mov
imul
xchg
in
out
test
loopne
xchg
adc
repnz
mov
adc
les
lods
and
rcrl
mov
sub
scas
and
inc
dec
and
test
int3
addr16
ljmp
lret
inc
jl
pop
das
in
cmp
stc
push
std
std
mov
jae
cltd
mov
adc
mov
lret
enter
outsb
xchg
inc
fcomps
shll
in
adc
icebp
mov
or
rolb
xchg
mov
orb
xor
fcomps
aas
add
rorb
ljmp
sbb
inc
clc
push
test
or
adc
fsubl
incl
roll
jns
insl
fldl
test
pop
mov
out
push
fbstp
push
pop
pop
sub
pop
lcall
roll
xlat
fstp
addr16
movsb
ret
aam
leave
sub
add
push
xchg
sbbl
jp
or
pop
shll
dec
sbb
add
push
shrb
push
test
aas
xchg
inc
bound
jmp
mov
sub
and
xchg
gs
inc
dec
inc
pop
call
scas
lret
lods
push
add
outsb
mov
cmp
xor
jmp
int
into
shll
bound
leave
add
dec
cmp
sbb
pop
cmpsb
cmp
movsl
add
test
add
cmp
lret
cmpsl
or
iret
or
pushf
mov
xchg
mov
xor
js
in
push
or
das
leave
repz
lods
xchg
cmp
sbb
scas
out
xchg
dec
dec
push
int3
scas
fsubrp
mov
jecxz
inc
dec
lahf
into
xchg
fdivrs
sidtl
xorl
add
je,pn
inc
push
jecxz
fstpl
cmpsb
pop
out
or
data16
dec
insb
movups
sub
and
js
jno
out
cmpsb
das
rol
add
mov
push
dec
mov
es
popf
fidivrl
rolb
mov
xchg
pop
test
sub
jle
out
pop
jne
add
add
xor
sub
inc
and
fsts
psadbw
jae
daa
or
dec
inc
popf
add
pop
insl
sub
dec
xchg
and
fldlg2
xor
test
lea
aam
mov
sahf
das
gs
xchg
push
mov
mov
pop
js
push
fdivrl
sub
loop
mov
das
call
xchg
mov
sbb
loopne
lods
mov
mov
insl
adc
and
addr16
cmp
sbb
mov
mov
sbb
cmpsb
inc
insb
sbbl
inc
mov
cltd
xor
insl
popf
aaa
insl
loop
sahf
or
mov
sbb
inc
ss
or
jge
sbb
pop
imull
frstor
adc
sahf
cmpsb
fdivrl
inc
out
pop
adc
jp,pn
cmpsl
jne
cmpsl
lea
pop
fwait
insl
pop
stos
js
cli
push
stos
add
inc
adc
dec
adc
inc
add
sub
lret
xor
cmp
or
fistpl
loop
scas
leave
ds
out
or
mov
lds
arpl
fs
inc
rcrb
push
add
push
aad
mov
mov
in
jecxz
or
clc
inc
cwtl
mov
push
mov
jnp
enter
jle
cmp
cmp
mov
das
xchg
ret
int3
gs
test
shrl
psrlq
movsl
sub
push
ss
mov
sub
lea
mov
and
imulb
dec
cs
push
cmpsl
int3
push
mov
and
adc
orl
mov
cwtl
mov
mov
ljmp
sbb
xorb
xchg
scas
rorb
nop
ret
in
iret
out
push
jns
pop
lret
add
dec
pop
into
push
cltd
mov
push
adc
scas
cs
sub
lcall
cmp
dec
lock
and
lock
cmpsb
jb
cmp
pushf
pop
data16
bound
mov
insb
iret
sub
pop
aas
fwait
negb
sub
enter
or
imul
sbb
lods
or
xchg
adc
push
jg
jmp
cmp
push
add
push
pop
sbb
mov
lahf
pop
fdivs
inc
cmpsb
daa
adc
aas
movsl
xchg
je
fildl
inc
sbb
into
leave
sub
and
pop
loopne
arpl
cwtl
mov
aas
sub
jge
jne
mov
je
je
add
adc
lret
test
pop
xchg
mov
bnd
and
stos
scas
aas
movsb
xchg
neg
stc
mov
hlt
add
add
xor
ss
stos
cs
imul
dec
scas
je
testl
rcrb
dec
push
mov
mov
dec
push
repnz
int3
sub
mov
fisubrl
loopne
pop
movsb
and
jmp
xchg
or
push
fbld
or
adc
in
dec
jno
jle
and
cmp
xorl
js
push
out
xor
xor
dec
les
gs
pop
enter
jl
mov
sub
mov
xchg
sbb
mov
or
jo
pop
push
cmovb
push
dec
aaa
mov
jnp
push
dec
cmovb
lods
dec
rcl
mov
dec
fsubrs
cmp
cmc
cmc
mov
xchg
mov
and
lcall
lahf
gs
ja
ss
stos
jmp
lock
insl
ss
dec
in
and
xor
rol
adc
jns
jge
test
stos
movsl
mov
hlt
in
lods
add
jo
stc
aad
xchg
outsb
in
cs
loopne
mov
mov
rorb
and
icebp
cmp
int
xor
in
mov
mov
dec
xor
pop
lret
adc
lea
dec
mov
lea
sbb
sarb
pusha
sbb
dec
addl
sbb
xchg
push
js
lret
dec
mov
fbld
mov
push
mov
or
jl
xor
xchg
push
or
test
cltd
mov
mov
jb
and
jecxz
mov
push
jno
pop
or
iret
sbb
outsb
stos
int
push
push
jp
cli
movsb
jmp
xchg
push
or
mov
jecxz
push
push
mov
push
pushf
and
mull
mov
fistpll
jg
in
scas
mov
add
jnp
sbb
addr16
and
popa
sbb
pop
data16
pop
jmp
or
lds
mov
mov
leave
ljmp
push
jl
inc
sbbb
rolb
adc
fnstcw
xchg
mov
outsb
push
loope
and
xor
lds
pop
and
mov
lods
pop
movsl
mov
imul
cmp
sahf
pop
faddl
sub
jns
loop
dec
xor
imul
in
cmp
cmp
cmp
dec
loop
int3
lcall
loop
lock
ret
jg
loop
ret
fistl
pushf
mov
xchg
ds
ret
test
pop
xor
mov
push
arpl
push
jle
or
mov
pop
pusha
fdivl
fbld
call
cmp
popf
mov
subl
jge
into
gs
push
lcall
call
and
fisttps
jnp
sarl
mov
popa
mov
std
push
sub
xor
dec
xorl
push
push
in
ds
pusha
fcomps
xchg
addr16
mov
and
xor
xchg
mov
push
xlat
cmp
imul
in
dec
xchg
je
pop
stos
inc
ljmp
test
ret
es
jb
ret
fistps
pop
andb
cli
in
mov
cmp
out
enter
pushf
andb
adc
and
rolb
mov
es
dec
popf
lret
dec
jmp
xchg
popa
mov
push
push
js
fwait
jnp
out
sbb
jmp
inc
ss
dec
int
and
jmp
adc
dec
imul
jg
push
xchg
movsl
stc
push
and
es
subb
or
mov
movsl
movsl
sbbb
jl
mov
mov
dec
sbb
sbb
jg
sbb
out
pusha
and
dec
test
xor
cmp
push
cmp
adc
lret
sub
in
xchg
lods
fcmovne
inc
xchg
lret
jno
ljmp
or
sub
outsb
repz
repz
xchg
mov
call
push
call
loopne
mov
or
inc
pusha
sbb
shlb
push
add
lock
mov
lahf
or
add
mov
jbe
mov
imul
xchg
jecxz
loop
cwtl
popf
dec
cmp
ds
fcoml
push
test
or
sahf
mov
and
div
cltd
pop
xchg
arpl
push
push
jp
insb
in
ljmp
push
push
lods
andb
addl
xor
add
sbb
popa
push
mov
xor
mov
mov
je
pop
leave
add
sub
insl
jge
test
cltd
ret
mov
jmp
inc
dec
lret
pusha
xor
mov
jecxz
push
sub
push
push
dec
pop
or
popl
xor
inc
in
jnp
call
mov
call
cmc
xchg
icebp
mov
jbe
stc
aaa
fdivs
sub
add
jne
adc
mov
ret
xchg
sbb
fsubrl
cmpb
out
xor
jge
fldenv
push
insb
add
call
inc
sub
sbb
movl
xchg
fcmovnu
adc
cmpsl
xor
lods
sub
popa
adc
sarl
mov
mov
cli
inc
xchg
arpl
add
lods
xlat
push
shl
push
ret
insl
dec
lahf
adc
out
xchg
cmp
mov
sub
out
push
jmp
enter
jmp
ds
fldl
sti
adc
and
out
dec
mov
xor
mov
mov
and
sub
mov
inc
ror
or
scas
add
xchg
mov
mov
mov
gs
out
adc
ss
lods
inc
mov
in
xchg
add
inc
aas
cmp
mov
sub
push
loope
aam
adc
shr
scas
push
cmc
sub
andl
mov
cwtl
pop
test
loop
cmc
xchg
aad
xchg
cld
add
stos
ret
cmp
and
jns
jl
pop
pop
jecxz
pop
sbb
dec
addb
push
repz
or
jbe
loope
add
out
popl
shrl
cmp
dec
loop
gs
mov
jmp
testb
cltd
pushl
add
orb
and
inc
dec
in
cmp
out
add
add
adc
gs
mov
dec
test
dec
pop
mov
dec
pop
arpl
xchg
adc
test
mov
mov
jl
inc
cs
xchg
mov
mov
jns
fbld
pop
test
shrb
push
int
inc
mov
add
mov
mov
mov
icebp
and
pop
andb
fwait
adc
push
or
pop
sbb
mov
cli
cmp
out
test
jbe
sub
add
test
in
and
dec
xlat
xor
sbb
scas
cwtl
pop
xor
dec
push
aad
xlat
inc
jb
subb
pop
arpl
je
cmp
cmp
mov
movb
jbe
xchg
push
jne
inc
or
movsb
lds
insb
push
inc
and
js
decb
fisubl
mov
pop
insl
icebp
decb
insb
and
lods
clc
cs
mov
rcll
pop
xchg
sbb
cld
push
jnp
push
enter
pop
dec
push
add
daa
into
dec
test
cmp
out
add
mov
cwtl
dec
dec
loope
mov
ja
xchg
dec
gs
movsb
xor
int
jb
sar
xor
xchg
pop
fidivrl
rclb
pop
push
sarb
shr
gs
aad
sbb
in
std
inc
inc
int3
inc
xor
data16
inc
mov
in
lock
into
stos
mov
mov
cmc
setle
push
stos
jne
int3
jmp
sarl
push
dec
jne
xchg
push
inc
js
in
lods
sub
rcrl
les
jge
pop
arpl
inc
push
mov
xor
lods
pop
mov
mov
outsb
lods
push
stos
dec
lret
or
mov
or
pushf
pop
movsl
mov
int
mov
sbb
add
cmp
sub
sbb
jbe
rcrb
out
push
aam
fcmovne
in
xor
push
xchg
es
sub
stos
lds
loopne
dec
cmp
cltd
insl
pop
adc
add
das
rcrl
inc
mov
add
je
dec
push
adc
inc
dec
in
cltd
enter
xchg
sbb
push
mov
push
cmp
push
test
stos
stc
jp
or
jnp
loop
pop
mov
sbbl
arpl
nop
pusha
dec
fildll
xlat
xchg
cmp
mov
lea
cmpsl
cwtl
and
mov
das
cmp
push
shlb
jne
jp
or
xlat
inc
inc
cmpsl
push
ds
mov
ja
xchg
mov
orl
jmp
orl
sbb
fs
pop
or
sbb
lock
in
inc
pop
aam
sub
mov
icebp
das
pop
paddb
inc
out
imul
push
repz
scas
jno
inc
insb
scas
mov
adc
test
fisttpll
leave
aaa
adc
push
es
and
imul
jge
js
or
outsb
and
pop
cmp
test
add
and
jmp
cmp
push
mov
cmp
inc
mov
mov
xor
in
testb
cwtl
fcmovne
mov
cmpsl
dec
or
in
shll
popl
xor
imulb
cmp
jo
mov
out
das
cmp
into
mov
add
xor
adc
mov
inc
lea
add
inc
xchg
aaa
icebp
push
mov
shlb
into
push
push
mov
or
icebp
inc
mul
clc
adc
mov
jge
dec
adc
outsb
jae
or
lcall
mov
stc
push
push
mov
and
sub
cmpsb
xchg
jge
lret
mov
jp
inc
xchg
or
xchg
loope
mov
push
jns
leave
inc
mov
int
push
adc
sahf
shrl
adc
pop
sbb
out
lret
mov
fstl
xchg
fidivl
inc
das
cmp
push
inc
dec
dec
mov
sub
mov
push
nop
lret
xor
cli
mov
xchg
adc
xchg
mov
cmpsl
lahf
ds
gs
in
ljmp
scas
lahf
sti
aaa
sbb
ljmp
punpckldq
jmp
and
pop
pop
or
mov
les
xor
ljmp
dec
adc
cmp
or
sub
hlt
hlt
repnz
add
cmp
aas
inc
shl
dec
call
ds
adc
mov
in
icebp
xchg
or
out
inc
mov
inc
xchg
xchg
ja
inc
sti
shl
in
mov
dec
adc
subl
sub
cmp
icebp
inc
jle
xchg
pop
loopne
daa
dec
sbb
or
mov
subl
cs
stc
data16
jbe
mov
adc
cltd
sbbb
cmp
rcr
test
sub
lret
add
and
mov
jle
or
fwait
ja
outsl
xor
repnz
mov
cmp
fmull
sbb
jno
mov
cmc
push
lods
jne
adc
fld
dec
push
xor
jb
jge
repz
pop
mov
jl
fnstenv
and
divb
push
mov
shrl
mov
mov
sub
test
or
sti
jle
jmp
movsl
ds
mov
mov
jbe
and
xor
mov
or
push
lods
sub
inc
cwtl
and
jle
xor
sub
add
mov
mov
loop
rcrl
sarl
xchg
jo
mov
jl
inc
dec
iret
pusha
push
adc
inc
pop
dec
inc
leave
mov
xor
mov
addr16
inc
in
jmp
icebp
dec
fldt
test
xchg
cmp
xlat
sahf
and
xlat
dec
js
cmp
or
cmp
ja
repz
or
sub
or
inc
or
daa
std
rol
aaa
test
mov
sar
mov
jmp
sub
cwtl
scas
push
xchg
inc
push
push
insb
rorl
push
xlat
adc
sbb
mov
inc
push
insl
cltd
movsb
xor
gs
xlat
xor
sub
jno,pn
push
jmp
cmpsl
ss
jnp
xchg
fadds
adc
dec
add
mov
mov
imul
inc
cmp
jmp
dec
adc
dec
add
decl
fwait
inc
mov
xchg
pop
adc
sti
jno
sbb
mov
xchg
arpl
lock
xchg
jmp
insl
adc
mov
test
mov
push
ret
inc
pop
scas
in
adc
push
addr16
call
iret
cld
ds
shr
addr16
popa
xchg
add
mov
pop
add
inc
std
adc
jle
sbb
nop
imul
pushf
movsb
mov
lahf
mov
xlat
cmp
xchg
mov
cmp
out
cmc
test
dec
faddl
ficomps
stc
mov
loop
faddl
lret
xchg
inc
and
out
inc
xor
stos
je
out
test
xchg
push
push
mov
pop
loop
add
xor
lcall
cs
mov
add
mull
mov
jbe
or
ret
sbb
xor
add
xorb
fsubs
cmc
add
into
jne
ret
aam
sbb
hlt
popf
in
xchg
adc
adc
pop
cmpsb
sub
adc
cmpsl
bound
aaa
pop
std
pop
xor
pusha
in
iret
aas
daa
pop
sti
fisttps
jmp
inc
andb
roll
and
aam
arpl
push
into
hlt
in
mov
rclb
movsl
mov
lock
and
mov
jne
call
and
adc
sub
movsl
xchg
pop
int
int
jl
out
xor
mov
std
xor
pop
and
push
mov
fsts
scas
cmpsb
cs
insb
push
sti
adc
sbb
icebp
xchg
dec
push
mov
je
dec
es
and
mov
cmp
xchg
mov
mov
mov
negb
arpl
push
mov
std
mov
fsubrl
out
orl
xchg
jnp
pop
inc
xchg
jl
incb
popf
ss
insb
add
in
lock
push
mov
fimull
shll
sbb
and
jl
loope
nop
sbb
std
movsb
bound
xor
add
ret
cmp
sub
stos
stos
xor
jg
xchg
cli
cmp
mov
jno
fldcw
pop
adc
or
cmc
push
out
orb
jae
and
dec
shrl
int3
adc
fcoml
mov
shl
insb
lock
stos
test
and
scas
sbb
loope
lahf
repnz
into
mov
pop
std
add
rcrl
ret
mov
int3
enter
test
sub
test
arpl
push
shlb
mov
xor
push
push
out
sub
push
push
inc
and
leave
xchg
std
sahf
shrl
pop
mov
push
xchg
sub
xchg
and
sub
push
pop
shrb
ror
je
pop
movsb
pop
xchg
and
out
mov
pop
int
fldl
pop
xlat
push
std
sub
fwait
cmp
xchg
jp
cmp
jl
inc
mov
cltd
in
lahf
mov
rol
sbb
test
call
inc
int
mov
jp
out
xor
and
ficoms
push
and
cwtl
pop
pusha
push
xor
dec
lret
mov
lock
je
aaa
mov
and
cmp
push
mov
fcmovb
shll
xor
mov
int
mov
cmp
xor
mov
aam
mov
mov
mov
xchg
xchg
sub
xor
xor
sub
orl
inc
aaa
mov
pop
gs
repz
push
jo
mov
cmpl
mov
cmp
cwtl
nop
lret
pop
insl
push
push
inc
mov
mov
sub
sbb
pushf
fdiv
lock
js
int
sbb
ja
xor
sbb
jo
call
cmpsb
cmp
fnstenv
and
lds
pop
and
mov
mov
bound
cmpsb
das
imul
insb
pop
inc
out
test
pop
aaa
lcall
iret
test
mov
inc
cmc
cmc
xchg
test
cmp
xchg
test
lcall
push
push
xchg
mov
mov
pop
pop
paddusw
iret
push
sahf
hlt
clc
mov
xor
push
xchg
push
dec
mov
scas
leave
push
inc
stos
or
inc
pushf
sub
ja
and
iret
xchg
push
xor
mov
push
xlat
test
ja
xor
cmp
push
je
inc
xor
nop
inc
sbb
notb
stos
xchg
lods
add
insb
jbe
pop
add
mov
hlt
sub
mov
mov
mov
aad
das
pop
cltd
lea
push
in
lcall
push
mov
lret
mov
fistps
mov
in
mov
xchg
pop
dec
into
rcr
jecxz
mov
mov
fst
pop
movsb
jo,pt
punpcklwd
push
iret
aad
test
xor
mov
jae
mov
addr16
jnp
mov
incl
mov
js
divl
outsb
dec
pop
test
mov
xchg
mul
rolb
cmp
aad
stc
roll
and
xor
cmpsl
loopne
scas
jb
cwtl
fwait
xchg
std
mov
sbb
cmp
dec
jns
inc
push
shrb
inc
jmp
mov
test
cmpsl
aaa
jg
nop
xchg
out
stc
xor
and
dec
pop
je
xchg
jb
les
js
push
dec
int3
ret
scas
loope
push
repnz
fbld
sbb
adc
inc
xor
push
in
jecxz
lea
pop
in
lahf
pushf
push
in
jp
dec
sub
push
notb
movzbl
mov
pop
cmp
xor
clc
popa
dec
test
sbb
adc
xchg
das
dec
gs
or
inc
scas
out
xor
push
call
js
es
cltd
fildll
cs
xchg
mov
adc
fsubr
ret
std
int
lods
mov
mov
xchg
adc
stos
sbb
lcall
jge
adc
popf
dec
fstpl
sub
mov
mov
cmc
loopne
pop
or
mov
leave
out
repz
lds
rcll
push
push
add
das
stos
mov
je
bound
test
dec
mov
pop
movsb
mov
sbb
push
flds
out
mov
in
imul
inc
dec
lcall
lret
stos
insl
data16
ret
std
pop
movsb
mov
test
mov
fdivp
sbb
jg
test
movsb
out
or
mov
mov
push
dec
dec
push
push
xor
cmovb
enter
xor
rcrl
hlt
call
aaa
imul
out
stos
leave
jns
push
push
imul
and
pop
je
ds
mov
repz
inc
out
dec
sbb
in
icebp
rcrb
sub
in
mov
imul
lret
dec
jecxz
cmpsb
xor
mov
pop
insl
push
cmpsl
test
fcoms
mull
push
xchg
push
sbb
aam
and
mov
xchg
cld
jmp
lds
sbb
in
jmp
mov
mov
adc
frstor
dec
nop
fadd
loopne
rcll
andb
mov
pop
pop
bound
lds
mov
shlb
enter
push
test
out
aas
jne
mov
leave
call
xchg
adc
aad
js
and
adc
aas
adc
mov
cmpsb
gs
insl
mov
testl
mov
jl
push
jp
xchg
or
sbb
outsw
sbb
sub
or
pop
sbb
jp
shl
dec
lea
pop
stc
lods
xor
lea
jae
into
daa
sarb
scas
push
out
cmp
bound
pop
mov
es
je
push
inc
or
cmp
mov
and
leave
lret
sti
pop
cld
add
sub
pop
mov
mov
fwait
iret
mov
lret
ficompl
es
jnp
jne
adc
or
ljmp
cmp
mov
rcll
mulb
clc
daa
mov
cmp
cli
fld
push
out
inc
clc
das
mov
cmp
mov
jnp
sub
aaa
addb
push
popf
add
pop
cmp
fldcw
jno
mov
aaa
adc
je
aas
leave
xchg
test
xchg
test
ret
pop
fwait
mov
mov
sub
lea
cmp
inc
dec
incb
out
pop
insl
bound
rsm
dec
or
lret
fisubrl
jg
xchg
pop
scas
or
int
sub
jo
daa
movb
outsl
inc
in
loope
or
or
test
adc
dec
outsb
mov
push
adc
mov
mov
test
imul
insb
loopne
inc
and
sub
out
mov
pushl
pop
pop
shll
push
cmpsb
inc
xor
add
stos
pcmpgtd
jno
xor
cmpsl
maskmovq
addr16
xchg
bound
ja
push
pop
mov
push
mov
adcl
out
push
push
fsubrl
and
jge
xchg
mov
dec
in
jne
and
inc
adc
test
iret
jbe
fisubrs
lds
adc
cmc
scas
and
cmc
out
sub
and
dec
jo
mov
jmp
shlb
sub
popa
push
pop
cwtl
inc
int3
imul
push
mov
call
js
fldcw
fsubrs
fstps
stc
jecxz
dec
mull
shrb
pop
stc
mov
divl
aam
mov
popa
clc
dec
fsubrl
aas
enter
pop
xor
arpl
stc
fadds
sub
or
xchg
pop
pop
jnp
std
adc
push
push
outsb
adc
out
push
sub
insb
iret
xchg
or
push
sarl
dec
je
insl
cmp
jae
popa
xor
and
lods
cli
fstpl
loope
repz
je
inc
mov
insl
mov
push
bound
fs
add
stos
cmp
dec
repz
dec
shll
or
jg
xor
xchg
mov
je
jo,pn
cli
fdivr
dec
pop
push
aam
add
mov
mov
xor
dec
in
cltd
orb
mov
jae
push
and
mov
mov
loop
xchg
repnz
sbb
jl
js
sub
movsl
addr16
and
jmp
jbe
xchg
adc
pushf
push
in
rcll
pop
pop
fldenv
jns
xchg
dec
push
sbb
stos
mov
rcll
rcr
or
loope
push
bnd
pop
push
lret
lods
incb
test
test
mov
mov
rol
cmp
mov
jge
dec
leave
sbb
dec
out
lods
and
mov
dec
cmp
cmpsl
push
lock
fdivs
fnstcw
mov
lret
push
ffreep
xchg
or
pop
add
push
xlat
sbb
dec
sbb
xchg
mov
dec
inc
pop
adc
in
data16
mov
jb
clc
inc
cs
xchg
adc
xlat
arpl
adc
sbb
pop
xchg
out
mov
pushf
mov
mov
jnp
pop
pop
ja
stc
mov
div
mov
testl
push
lret
mov
jns
int
es
xlat
jb
xchg
push
cld
rcr
sarb
sbb
enter
or
pop
jmp
push
scas
dec
ljmp
inc
pop
xchg
inc
add
int3
jp
push
sub
lods
xchg
xor
push
add
mov
movsb
jb
cmp
sub
popa
mov
mov
and
repnz
test
rcrl
mov
aas
dec
aaa
xchg
clc
ja
and
lods
cld
push
gs
dec
loope
mov
outsl
stos
lds
sbb
xchg
sbb
jg
inc
xchg
mov
sub
pop
mov
hlt
add
fwait
jge
arpl
inc
lret
stos
leave
dec
jb
repz
rorb
mov
repz
and
movsl
add
insb
lcall
mov
in
sub
notb
mov
rolb
ret
out
jmp
cmpsb
pop
xor
xchg
push
bound
or
lock
ds
xchg
ss
test
jmp
mov
daa
mov
insl
loope
lret
xor
icebp
mov
cmp
cld
call
rcll
test
sub
dec
negb
std
and
xchg
ret
push
lock
stc
xchg
pop
and
mov
push
push
rclb
xlat
and
sbb
xchg
stc
sub
sub
popl
scas
or
lods
and
mov
jg
lds
push
inc
and
leave
clc
test
addl
test
cmpsl
pop
mov
jae
and
hlt
add
mov
dec
mov
mov
jge
jmp
insb
in
cmp
pop
sbb
outsb
and
data16
fwait
pop
mov
adc
push
call
call
repz
mov
add
dec
mov
nop
push
pushf
into
pop
ja
aaa
pop
aas
adc
enter
push
mov
inc
push
cli
xchg
ror
movsb
add
lds
cs
cmp
add
mov
popf
mov
roll
addr16
xchg
stos
popf
dec
mov
fxch
jmp
mov
mov
shr
jle
xchg
gs
clc
and
fadd
inc
in
mov
xchg
popa
inc
inc
inc
jb
push
pop
fnstsw
jo
or
xchg
out
and
popf
cmp
and
fs
test
push
push
test
lea
test
cs
pop
sarb
addb
int3
in
es
movsl
pop
leave
inc
inc
stos
movsb
inc
push
out
pop
mov
or
iret
icebp
clc
rclb
jmp
aaa
push
cmc
jno
lock
test
mov
push
aam
stc
and
mov
xor
enter
mov
addl
lods
and
adcb
rol
pop
mov
sbb
xchg
xchg
mov
push
xlat
jo
xchg
jbe
pushf
push
jecxz
xor
pop
jo
push
jbe
decl
cmp
sbb
adc
cmp
add
insl
mov
shlb
scas
dec
cmp
mov
jle
push
and
cs
push
addb
sbb
pop
push
adc
cmpsl
in
call
in
mov
mov
xor
push
jae
and
cmpsb
enter
adc
jnp
test
sbb
add
mov
inc
inc
dec
mov
jle
cmp
or
rcll
pop
aas
jne
cmp
fistps
or
adc
fadds
pop
loopne
mov
clc
xchg
iret
cmpsb
jnp
mov
mov
lods
inc
jb
xlat
push
inc
mov
adc
ret
cld
xchg
mov
flds
xor
je
cmpsb
adc
push
and
test
xchg
cmp
lds
cs
jb
ss
sbb
sbb
insb
lahf
loope
pop
xchg
aaa
xchg
mov
orl
dec
pusha
fsubrl
mov
xchg
or
leave
lret
sbb
cmpsl
movsl
aas
jnp
enter
cmpsb
mov
mov
inc
jnp
sub
fnstenv
mov
leave
and
or
fsubrl
rorb
add
mov
pop
or
mov
inc
add
sub
sub
fs
mov
fs
push
fcoml
ss
aaa
sub
ljmp
decl
pop
xor
pop
jb
mov
pop
add
mov
inc
rcrb
and
dec
mov
in
mov
daa
and
pushf
dec
idiv
aad
mov
mov
add
cld
sub
cmc
inc
adc
sbb
ret
test
sub
mov
xchg
lds
push
mov
dec
mov
push
xor
mov
ss
inc
data16
mov
imul
leave
popf
mov
or
fcmovne
das
jns
sti
xchg
sbb
mov
fs
stos
push
rcrl
dec
testb
lea
or
shrl
push
scas
xchg
lcall
stos
dec
lock
repnz
sbb
in
popa
aas
popf
stos
mov
sub
xor
mov
jbe
movsb
fadds
sbb
divl
test
add
lds
rorl
pop
add
dec
add
cmpsb
pop
add
sub
pop
insl
inc
jb
loopne
mov
insl
out
and
sti
xchg
lahf
sbb
dec
sub
or
jne
xchg
outsb
shll
jae
push
pop
push
stos
shlb
push
in
mov
adc
ret
push
jne
xchg
xchg
not
icebp
add
push
jge
into
cmpsb
int3
cmp
cltd
lock
push
add
nop
pop
push
js
adc
ja
jbe
div
gs
out
fwait
dec
pop
loopne
cmp
sbb
pushf
push
sbb
pop
push
push
hlt
popa
shll
out
gs
jmp
rclb
gs
jle
push
push
xchg
pop
push
stc
push
roll
into
mov
pop
insb
lcall
add
movsb
xchg
into
sbb
inc
nop
xchg
cmp
test
push
jecxz
sbb
icebp
sbb
mov
pop
outsb
sub
push
adc
pop
jl
notl
and
push
xor
sub
dec
outsb
pavgb
sub
jl
adcl
in
ss
inc
adc
fcmovu
sbb
cmp
cmp
fucom
cmp
pop
imul
mov
xor
shll
adc
test
add
sarb
or
push
push
push
fistps
je
jo
mov
idivb
mov
mov
dec
xor
mov
mov
mov
lcall
and
mov
mov
sub
and
cmp
dec
fnstenv
dec
rclb
jecxz
cld
push
cwtl
dec
dec
insl
out
fucompp
pop
cli
sbb
fsubr
xor
sbb
push
les
mov
add
insl
cmc
repnz
xchg
fwait
and
out
inc
mov
cmp
mov
and
popf
movsb
mov
ljmp
jl
mov
cmp
pop
and
mov
xchg
push
mov
sahf
pop
jl
jbe
inc
jecxz
sti
mov
pop
push
cmc
dec
imul
scas
lret
imul
adc
cmp
xchg
aad
mov
ret
cld
xchg
cmp
lea
adc
xor
sbb
in
mov
in
sar
into
in
lds
mov
scas
aad
ret
lcall
cs
jae
jns
call
xchg
fs
rorb
dec
fbstp
js
enter
pop
mov
add
add
sbb
std
enter
arpl
push
out
dec
adc
fstps
adc
pop
faddl
inc
inc
xorb
xchg
imul
ret
shlb
cmp
xchg
mov
mov
push
outsb
sahf
es
fidivrl
outsl
sar
icebp
jbe
cmpl
cmc
imulb
in
push
mov
outsl
shlb
fidivrl
cmp
xchg
xor
shl
sbb
mov
jge
aam
pop
je
mov
jbe
das
xor
xchg
jae
les
lcall
ror
test
jmp
xor
sbb
sub
add
rol
ss
adc
mov
imul
adc
dec
dec
add
imulb
pop
mov
ljmp
xchg
dec
clc
adc
addb
imul
cmpsb
add
cmpb
jbe
mov
pop
add
iret
inc
jns
inc
sti
stos
mov
and
jmp
js
fbld
je
sub
mov
test
out
push
das
and
inc
ds
add
push
inc
cld
divl
adc
fdecstp
push
data16
shrl
ficomps
shll
sbb
shll
push
clc
jnp
out
hlt
dec
push
or
mov
sub
leave
xchg
or
inc
jns
cli
scas
push
iret
add
ret
sub
xor
repnz
out
das
movsb
pop
adc
out
pop
push
sbb
inc
inc
and
xor
pop
cmp
sbb
jae
pop
fnstsw
nop
or
data16
add
xor
pop
popf
out
js
movsl
mov
push
fstpl
sbb
add
pop
jg
push
xlat
out
insl
mov
mov
iret
loope
xorl
cmp
cmp
stc
sub
pop
sahf
add
outsb
pop
lea
cmp
pop
outsb
mov
out
andl
idiv
cmp
adc
sub
xchg
push
ds
loop
or
push
aas
pop
out
sub
leave
dec
dec
mov
subb
and
mov
fldl
or
dec
mov
test
clc
loop
decb
das
mov
or
push
cmp
ret
inc
inc
and
lcall
clc
push
lahf
loope
test
mov
popa
add
and
mov
mov
lock
mov
adc
in
jnp
adc
jp
mov
dec
inc
cmpsb
imul
mov
pop
test
repz
je
add
mov
mov
lcall
jg
outsl
call
adc
cs
outsb
loopne
or
and
mov
or
imul
or
leave
arpl
pop
nop
mov
mov
out
shlb
fs
imul
ret
imul
jp
mov
les
aad
loope
dec
out
orl
outsb
adc
mov
push
mov
jecxz
jmp
or
mov
jg
fistps
fisttps
sbb
mov
sub
adc
adc
push
jl
pop
sbb
dec
jb
stos
mov
adc
mov
rcrl
lock
popf
mov
mov
add
test
cmp
inc
or
and
rcrl
jns
sbb
ss
testl
movsl
push
adc
ja
lods
add
les
lret
lods
rorl
js
mov
fadds
jl
xlat
clc
adc
adc
cld
lock
mov
jl
dec
dec
test
bound
push
xorb
inc
jnp
jp
push
loopne
mov
or
sub
test
enter
cmp
push
push
sbb
add
es
icebp
and
das
fdivrp
rolb
shll
sub
and
clc
xchg
push
ja
mov
and
std
lret
aad
xor
aas
jge
or
jp
push
out
pop
xor
rorb
popf
xchg
movsb
gs
adc
mov
mov
fdiv
outsb
pop
sbb
push
sub
repnz
pushf
mov
ljmp
mov
push
stc
dec
sub
and
xlat
add
xchg
stc
pop
sub
in
push
sarb
shll
mov
adc
and
xchg
imul
and
or
lds
je
aam
in
xor
fcmovnb
test
aaa
push
test
or
lods
aad
jl
das
jo
mov
add
int
xchg
sub
mov
push
push
mov
add
pop
pop
and
cmp
loop
insl
mov
mov
push
sbb
mov
arpl
nop
test
mulps
dec
mov
pop
sub
les
lret
insb
or
jb
test
xchg
pop
vunpckhpd
ficomps
out
fimull
fcoml
call
leave
pop
mov
pop
jo
cmp
fdivp
pushf
insb
rorb
pop
add
psubusb
jae
mov
jecxz
les
jae
daa
in
out
stos
dec
inc
pop
mov
jecxz
mov
push
sub
jg
add
push
add
fidivrs
xchg
cmp
clc
mov
addb
out
inc
sub
xor
mov
dec
ja
ja
add
mov
dec
aam
or
push
sti
popf
aaa
pop
sbb
ror
cs
xchg
mov
lret
icebp
sub
loopne
in
in
mov
stos
outsb
nop
repz
xchg
ljmp
sahf
sub
iret
bound
arpl
addr16
scas
pop
dec
push
xor
nop
mov
mov
roll
scas
pop
enter
sbb
lahf
adc
mov
cwtl
adc
repnz
js
and
jp
js
pop
cmp
data16
das
dec
pop
and
mov
jns
pop
clc
bound
shlb
negb
lds
sub
movl
fistpl
sbb
mov
in
popf
pop
mov
xor
stc
movsb
push
dec
aam
or
sti
push
pop
jbe
movsl
inc
out
aaa
adc
mov
ror
xor
mov
mov
add
mov
pusha
movb
sub
xor
xchg
jmp
addr16
mov
xor
or
outsb
jo
push
int
dec
mov
jnp
sub
jl
cmp
sub
cs
sub
mov
dec
aam
pop
pushf
add
bound
cwtl
cltd
pop
mov
xchg
and
xchg
icebp
imul
inc
lret
fcmovb
jne
inc
inc
jae
add
stos
pop
int
adc
xor
add
push
stos
ja
mov
adc
add
das
sti
shll
cmpsb
imul
ret
lock
insw
pushf
ret
mov
push
pop
out
daa
pusha
enter
icebp
lods
lods
cmpsl
add
imul
xor
ds
sub
in
faddl
mov
add
xor
fprem1
ja
cmp
icebp
les
xor
ss
das
aad
mov
inc
xor
pop
bound
lods
pop
outsb
clc
imul
out
js
xchg
adc
and
shr
push
xchg
dec
and
xchg
lahf
shrl
xchg
imul
adc
cmpsl
sub
mov
mov
xor
xchg
movsb
aas
mov
aas
jle
jmp
mov
pop
cli
gs
mov
hlt
mov
jns
ret
fisubrl
enter
addb
neg
push
sbbb
test
dec
sbb
repnz
inc
inc
jl
jge
mov
or
call
out
push
iret
rolb
inc
loope
lret
xor
repnz
loopne
pop
adc
int3
add
int3
cld
and
adc
inc
cli
addb
lock
add
and
ret
pop
cli
pop
into
and
jo
pop
or
adc
mov
jp
jp
mov
inc
shll
mov
rcrb
in
pop
jno
cmc
sub
mov
mov
pushf
dec
lcall
gs
and
lret
add
push
jle
in
out
jb
out
cmp
in
int3
out
sti
fildll
push
das
pop
lahf
lods
fistps
andb
sbbl
or
mov
orl
or
testl
inc
mov
addr16
cmp
imul
adcb
cmp
les
fwait
add
lds
push
mov
xor
shrb
es
jmp
xchg
cmp
leave
insb
insb
or
cmp
push
mov
mov
xor
pop
xor
dec
sub
mov
std
imul
mov
testb
les
mov
cmp
pushl
cmpsl
and
addr16
fldl
je
dec
cld
inc
lods
popa
pop
lock
ja
mov
sub
cltd
pushf
xchg
imul
xchg
mov
inc
add
bound
imul
out
fidivs
push
icebp
add
shrb
inc
mov
jge
xor
mov
and
test
movsl
popl
mov
xchg
jo
lret
sub
out
mov
jno
or
or
shll
rorb
rolb
cmp
push
das
adc
cmpb
mov
rolb
push
pusha
pushf
mov
pop
insb
mov
rolb
add
sub
inc
jns
addl
xor
cmp
rol
sub
in
push
or
les
sub
leave
inc
add
mov
rorl
jl
xor
jecxz
push
cmp
loop
outsl
push
jp
leave
in
std
mov
cltd
loop
and
ret
xor
mov
cmp
loope
loope
cld
push
cmp
pop
or
iret
pop
aam
fildll
loopne
lahf
xchg
in
jp
cmc
mov
out
xchg
mov
lret
pop
cmp
push
std
mov
xlat
xor
add
out
inc
pop
sub
sbb
cmpb
dec
mov
repz
xor
pop
ljmp
add
out
lea
repnz
jno
pop
xor
adcl
aam
push
xlat
sub
push
and
cmp
jl
xchg
jbe
mov
cmpsb
xor
out
data16
sbbb
dec
inc
rcll
pop
outsb
add
loop
rol
call
data16
mov
jle
mov
pop
gs
inc
jns
outsl
les
and
sub
lcall
or
sbb
lret
sub
dec
inc
int
lea
pop
dec
rcl
sub
lahf
aad
jge
cmp
sbb
aad
lret
lods
test
dec
imul
cli
andb
es
cmp
xor
movsl
xor
sub
addb
mov
cmp
ret
fldl
sbb
stos
cmpsl
cltd
dec
pushf
push
mov
jl
ret
inc
push
lahf
imul
out
pop
dec
stos
adc
sbb
fwait
and
test
arpl
mov
mov
add
xchg
mov
movsl
stc
rcrb
call
ljmp
push
jmp
jae
rolb
int
aas
pop
das
outsb
push
pop
push
in
lret
imul
ret
in
lcall
cmp
fldenv
in
aaa
and
jp
mov
or
mov
mov
mov
stos
push
orl
insb
pushf
sbb
dec
hlt
aam
add
dec
test
mov
xor
stos
lcall
addr16
fucomp
out
int
dec
cmp
aad
cmc
aam
fisubrl
fcomp
loopne
fidivs
int3
add
mov
sbb
xchg
sbb
and
imul
jge
lods
rcrb
dec
pusha
push
push
arpl
pop
or
inc
sub
std
and
sub
das
jmp
or
les
aaa
mov
iret
cmpsw
andl
fstl
add
sub
jl
ds
add
push
dec
cltd
add
jg
popa
int
cmp
movsb
pop
sbb
repz
lahf
jp
mov
shrb
push
aaa
mov
xor
and
pop
mov
xchg
add
test
xchg
lahf
cld
lods
sub
out
xchg
cmc
daa
aam
aad
test
mov
bound
orb
dec
add
push
sub
pushl
shl
push
shll
mov
jnp
into
loop
sbb
dec
insb
jne
xchg
xor
je
jle
out
call
fdivr
icebp
inc
andb
push
outsl
adc
unpcklps
insb
leave
in
test
adc
jecxz
out
hlt
and
push
shll
aad
in
jecxz
and
add
adc
xchg
loopne
add
stos
test
push
or
hlt
pop
lret
bswap
out
cs
leave
jmp
adc
mul
mov
out
xchg
mov
jo
cwtl
xchg
jno
xchg
adc
fs
lods
jecxz
in
fbstp
xor
mov
xor
addl
lods
out
aam
mov
xor
enter
add
mov
shr
dec
loop
xchg
and
loopne
fwait
jno
inc
rcll
cld
cmp
mov
fucomp
clc
test
pop
test
fwait
sub
pop
hlt
icebp
sbb
or
popf
ja
add
adc
flds
pop
cmp
adc
mov
out
ss
scas
scas
fcomps
mov
ret
mov
push
lods
mov
mov
xchg
push
flds
xor
sub
fwait
lock
sbb
rcll
jns
sub
mov
das
mov
add
mov
fisttps
push
repnz
push
mov
push
aaa
pop
push
pop
or
mov
inc
mov
fcomip
int
jb
ret
popfw
sbb
mov
rcrl
stos
lock
and
dec
lds
lret
insl
rolb
mov
xchg
fs
cmovns
inc
mov
dec
adc
xor
jmp
enter
fimuls
cmpsl
sbb
je
ja
xlat
mov
cmp
push
sti
mov
inc
rorl
jb
jae
sub
pop
jnp
fnsave
jp
lods
mov
test
add
notb
xchg
cmp
imulb
cmp
outsb
sbbl
mov
arpl
aad
mov
pop
dec
push
scas
and
adc
inc
subb
inc
fwait
shlb
cmp
mov
mov
out
dec
mov
mov
in
lahf
shlb
loopne
lods
or
sub
dec
lods
leave
jne
inc
shlb
outsb
jnp
push
repz
lds
in
rcl
and
mov
cmp
xchg
inc
daa
in
add
dec
inc
out
aaa
cmpl
pop
shll
jle
aas
xorb
lds
out
cmp
adc
xlat
movsl
xor
cli
js
hlt
adc
sub
cmpsb
push
mov
cmpsl
test
mov
fnstsw
mov
lock
jmp
mov
aaa
inc
xchg
cmp
scas
ss
sti
push
test
mov
addr16
in
adc
add
add
xchg
push
outsl
lods
subb
push
xor
insb
andl
enter
pop
push
mov
imul
stos
xchg
and
in
cs
out
insl
cmpsl
in
mov
lods
in
leave
and
in
push
stos
jae
addr16
pop
jge
into
pop
arpl
roll
and
or
cmpsl
jns
es
movsb
cmpsb
ss
mov
mov
out
xchg
push
mov
cmpsb
enter
decl
aaa
sub
mov
clc
das
or
mov
std
daa
lock
dec
mov
xor
shlb
and
xor
xorb
dec
pop
pop
inc
push
fstps
or
les
inc
mov
sub
mov
lock
in
aad
mov
push
mov
mov
mov
bound
push
jp
ljmp
mov
push
call
adc
jno
scas
cmp
cmp
aas
mov
jbe
xchg
sub
pop
dec
pop
xchg
pop
fwait
add
xchg
jne
ds
bound
inc
cmp
lock
xor
test
xchg
rcll
adc
pop
mov
in
jns
lret
lods
push
or
andb
scas
sub
lods
test
or
jo
pop
dec
iret
xor
xor
ret
addb
add
adc
adc
push
inc
aas
jl
loop
fcomp
ljmp
loopne
adc
sub
sub
data16
xchg
add
push
sub
jl
mov
jnp
sbb
enter
sub
aad
cmp
dec
or
pushw
adc
ja
jbe
jo
movsl
mov
xchg
sub
sbb
push
add
std
mov
cmp
cmp
and
scas
mov
push
jle
push
cmpsl
mov
push
les
cmpsb
cmp
cwtl
or
je
sarb
in
inc
out
repnz
mov
xchg
es
js
loop
fwait
pop
inc
pop
or
xor
pop
hlt
xchg
insb
testl
inc
pop
inc
loopne
jl
les
sarb
pop
popa
fdivl
loopne
sub
outsl
or
scas
inc
mov
xor
fdivr
sbb
mov
out
lods
add
jns
sub
das
lock
mov
jg
lods
repnz
sahf
in
sub
adc
lods
fdivl
jmp
mov
icebp
pop
jge
cmp
repnz
out
push
xchg
jl
popa
in
jl
adc
call
enter
add
mov
hlt
pusha
repnz
in
sbb
loop
hlt
mov
ljmp
imul
mov
jae
and
inc
xchg
or
arpl
pop
icebp
stc
icebp
ret
aas
in
ret
in
mov
aad
push
outsb
or
or
popa
ja
jecxz
adc
imul
mov
xchg
inc
call
rcrb
jecxz
cmp
scas
jecxz
lret
div
mov
pushf
pop
jp
arpl
out
icebp
jecxz
outsb
adc
xor
pop
or
sbb
repz
sbb
mov
aas
xor
repz
arpl
test
imul
or
outsb
in
mov
sahf
sti
repnz
push
inc
addb
adc
pop
push
dec
daa
sbb
in
fsubr
div
addr16
std
mov
pop
shrb
mov
paddusb
stos
sub
adc
or
jge
fldcw
lods
shll
aaa
pop
jp
aaa
sarb
insb
popa
mov
in
mov
and
cwtl
rcrb
push
pop
mov
cli
std
adc
test
xlat
out
rclb
je
xchg
jmp
mov
in
jg
test
out
arpl
sbb
lea
test
adc
or
je
fsubr
jb
mov
lods
cwtl
mov
loope
sbb
loopne
jne
cwtl
dec
push
stos
xchg
and
sub
inc
jns
fsubrs
jecxz
jecxz
mov
in
and
inc
mov
jnp
xor
add
cmpsl
in
std
test
mov
or
setns
pop
hlt
jmp
scas
mov
andb
cmp
in
adc
into
jle
mov
cmp
push
pop
push
xor
inc
pushf
mov
test
ret
add
mov
cld
and
sbb
sbb
lahf
fnstsw
adc
or
stc
dec
xlat
out
ret
mov
out
lret
mov
out
cmpsb
lcall
mov
mov
cmp
or
ljmp
shlb
loop
test
insl
cmp
leave
inc
dec
aam
aad
data16
les
sti
cld
jg
aaa
cmpsb
xor
sub
fmuls
test
sbbl
mov
pop
xlat
mov
aad
ret
dec
and
not
push
loop
xchg
aas
adc
hlt
lds
orb
xor
cmp
fwait
test
inc
xor
push
mov
dec
imul
add
xor
popa
pop
jo
ljmp
jge
outsl
data16
stc
mov
add
in
js
rorl
jns
mov
aas
loope
shlb
jg
into
aam
addl
inc
hlt
xor
int
mov
mov
pop
in
cmp
push
push
or
mov
in
mov
addr16
pop
arpl
inc
dec
fs
fldl
sub
add
push
ds
dec
and
stc
movsb
inc
pop
sbb
sbb
repnz
adc
stos
stos
jne
movsb
sbb
int
out
add
push
jle
sbb
and
mov
cmp
dec
or
and
sbb
out
inc
insb
out
push
lods
jge
xor
dec
push
adc
je
mov
inc
leave
jmp
inc
int
test
xchg
pop
lock
mov
add
sbb
andb
test
ror
xchg
divl
jge
pop
testb
add
mov
loopne
mov
cmp
stc
rcll
jl
mov
adcl
idivb
dec
test
mov
dec
imul
repnz
out
xor
dec
lods
lods
stos
andl
mov
adc
jmp
lret
sbb
xor
lea
movsb
repnz
out
je
sbb
iret
out
sahf
addl
leave
not
pop
lds
sub
rcrl
icebp
dec
inc
stos
inc
inc
sbb
adc
push
add
andb
pop
jae
lahf
int
jmp
or
cld
or
sub
out
in
dec
or
push
frstor
jp
lds
adc
jbe
out
es
shrb
leave
sbb
sti
cmp
xlat
pop
mov
mov
adc
stos
push
xor
jbe
xor
push
dec
sbb
and
xor
xor
icebp
fwait
mov
cltd
loopne
adc
push
outsb
adc
hlt
andl
mov
movsl
sarb
dec
cwtl
sub
pop
js
addl
fiadds
jle
mov
push
jbe
jb
fsubrs
lods
inc
imul
out
cmp
enter
pop
jb
mov
sbb
sub
scas
push
or
lret
dec
hlt
mov
rcl
loopne
iret
dec
dec
ja
dec
mov
out
dec
scas
cmovns
frstor
aam
inc
sub
fwait
mov
mov
shlb
push
mov
adc
loop
pop
xchg
mov
push
bound
shlb
mov
and
mov
hlt
xchg
icebp
movsb
push
mov
adcl
std
aas
sub
out
sbb
xor
je
sub
push
mulb
mov
xor
call
sarl
dec
dec
imull
scas
cmc
and
aaa
cmp
adc
pop
cli
fsubp
testb
ss
stc
or
into
mov
dec
push
pop
cmpl
pop
aad
sub
call
scas
fstp
iret
test
xorl
fldcw
add
or
or
pop
adc
and
iret
inc
or
stos
inc
adc
sarl
xchg
add
push
adc
loope
aam
pop
sbb
mov
add
in
arpl
pushf
jbe
stos
xchg
imul
pop
lods
insb
fnstcw
scas
pop
sbb
cmp
ret
push
popa
mov
xchg
sub
xor
insb
icebp
lahf
add
push
dec
add
lods
push
outsl
ret
inc
addr16
mov
pop
sbb
fstp
jge
into
and
add
jb
adc
mulb
pop
mov
mul
mov
cmp
cmc
jle
push
dec
aas
add
push
scas
adc
js
push
das
sub
loope
xchg
in
sub
mov
loop
dec
movl
cmp
rclb
sub
xchg
stos
out
movsb
mov
shlb
adc
mov
bound
std
mov
sub
jmp
cld
imul
repz
pushf
movsl
js
inc
mov
xlat
cltd
and
pop
aaa
mov
js
aad
ljmp
fbld
ja
pop
hlt
pop
je
icebp
nop
int
push
inc
imul
push
mov
pop
push
shlb
mov
cwtl
lret
mov
push
adc
fs
mov
push
push
dec
in
test
in
in
adc
sbb
aaa
das
aam
scas
cli
ret
push
dec
fstps
ljmp
insb
cmp
flds
push
icebp
xchg
data16
dec
mov
jne
sub
daa
loop
cli
mov
jg
imul
adc
test
inc
icebp
pusha
or
fsubs
cli
xor
pop
and
or
ficoms
jle
test
xchg
loop
iret
or
stos
mov
or
pop
cmp
hlt
fldl
gs
popa
dec
out
mov
sbb
xor
and
adc
rclb
and
fldcw
or
out
outsl
and
cmp
mov
sub
dec
pop
dec
ret
stc
std
add
mov
push
jne
mov
mov
stos
and
scas
imul
dec
and
jg
aam
in
jecxz
fcoml
in
mov
mov
cmpsb
sbb
inc
std
cmp
stos
shll
bound
xor
testl
and
lea
loope
pop
xor
adc
jns
pop
pop
cmp
adc
mov
xchg
fwait
cmp
adc
out
sbb
dec
fwait
daa
jb
push
or
add
sbb
jle
movsl
xor
loopne
es
test
out
cld
mov
mov
add
add
pop
mov
cmp
sbb
jns
enter
inc
call
addr16
hlt
insb
dec
test
mov
fdivs
insb
lods
int
sbb
imul
in
inc
cmp
or
lcall
or
mov
cltd
add
les
xor
gs
daa
pusha
and
adc
mov
dec
rcll
adc
out
adc
in
cltd
nop
lds
adc
mov
pop
pop
cmpsl
and
adc
cmp
adc
mov
add
lcall
das
or
mov
push
cld
loopne
lcall
clc
addr16
pop
jg
cmpsl
enter
pop
and
ret
sbb
cmp
push
das
push
xor
mov
fmuls
and
mov
fdivrs
mov
cmp
js
fwait
sub
xor
jecxz
ror
lods
retw
push
mov
jb
rcrb
outsl
sub
xchg
xchg
xchg
ss
jg
mov
sbb
or
orb
loop
sti
jo
mov
cmpsb
sbb
pop
js
insl
lret
xlat
rorl
pushf
jmp
sub
aaa
push
lret
mov
pushf
ror
mov
or
mov
test
stos
add
pop
sub
fists
shrb
stc
test
mov
dec
xor
lods
shl
rcrb
or
cmp
cld
ljmp
popa
ja
out
ja
aad
test
inc
loope
stos
aaa
mov
add
cmp
lcall
mov
dec
es
hlt
xchg
mov
sbb
dec
pop
xchg
jo
ss
push
dec
push
add
fiadds
mov
mov
inc
outsb
fidivs
push
fildll
sbb
std
inc
cli
rclb
ds
jl
mov
fwait
cmp
sbb
mov
aas
es
xor
or
xor
add
jae
inc
lcall
add
divl
cmpsl
jns
or
mov
and
jp
idivl
jg
mov
les
dec
add
arpl
cltd
pop
dec
cmpsl
mov
xor
out
jg
adc
movb
fstl
mov
out
cmpsb
es
inc
or
mov
cmp
mov
sarl
jnp
iret
jp
pxor
aas
dec
enter
and
adc
lahf
fadds
mov
jl
data16
out
nop
jge
sarb
sbb
lcall
leave
nop
sub
jnp
pop
jo
mov
inc
shrl
add
push
pushf
loop
dec
out
or
cmpsb
shll
dec
mov
add
loopne
adc
lret
cs
pop
or
inc
incb
in
mov
xchg
jae
test
push
mov
push
and
adcb
fwait
or
scas
out
adc
xchg
jmp
stos
mov
add
addr16
mov
rclb
push
and
fiadds
push
cmp
mov
push
xchg
inc
inc
stos
les
sti
in
insb
mov
nop
inc
mov
cltd
adc
sbb
jp
inc
leave
test
pop
jbe
lea
ss
jo
or
fucomi
mov
push
roll
enter
inc
leave
shll
movsb
pop
xchg
adc
sbb
jo
lcall
xor
sub
insb
pop
frstor
mov
ljmp
xchg
push
sbb
mov
inc
lcall
inc
cmp
push
and
dec
repz
mov
dec
adc
aam
jmp
sbb
sub
ret
mov
mov
mov
mov
xchg
and
test
stc
push
push
mov
cmpsb
mov
mov
lahf
std
adc
fnstenv
jge
push
sub
mov
test
icebp
lret
cmp
sub
and
fcmove
aam
mov
les
sub
push
mov
jo
add
movsb
adc
dec
sti
push
sbb
stos
sahf
repnz
xor
int
sub
and
imul
shl
popf
dec
adc
sbb
xchg
dec
mov
mov
and
inc
out
test
mov
or
xchg
pop
test
sub
shlb
bound
and
jmp
mov
cwtl
sbb
xor
stos
test
in
stos
iret
inc
or
jle
mov
fwait
loope
push
add
push
adc
add
lret
pop
sub
int
out
jns
daa
jnp
mov
outsb
gs
mov
pop
xor
mov
aam
pop
imul
fcmovnu
popf
cmpsb
dec
inc
loope
cwtl
test
arpl
aam
pop
fisubrl
loope
gs
push
inc
dec
and
fdivrp
cmp
mov
jl
adc
inc
out
cmovs
pop
adc
xchg
lock
push
in
push
aam
insl
out
mov
push
out
or
push
into
cmp
mov
or
jbe
mov
or
xor
sbb
jbe
in
imul
lcall
push
imul
adc
jecxz
loop
xor
or
scas
mov
aam
jne
fiadds
sahf
sbb
pop
xor
jecxz
xchg
pop
das
and
test
ss
icebp
aas
inc
push
stc
movsb
dec
cmp
js
inc
sub
dec
loop
in
outsl
jmp
mov
mov
lds
test
sub
jae
inc
push
and
mov
mov
sbb
mov
inc
fwait
insb
sahf
fucomi
icebp
dec
fistpll
cmp
pop
test
add
sub
push
ret
mov
mov
gs
mov
ret
stos
sub
cmp
xor
pop
adc
adc
test
inc
test
or
shl
movsl
int3
notl
je
in
mov
add
mov
inc
in
clc
lahf
push
cs
test
mov
lods
out
daa
cmp
ret
cmc
cmc
push
out
imul
enter
jbe
mov
pushf
dec
sbb
xor
lret
sub
push
cltd
rolb
mov
test
jae
fsubrs
cmp
dec
or
push
push
cmp
pop
test
nop
xor
push
adc
popa
test
clc
pop
xor
inc
inc
or
jge
jecxz
out
sahf
inc
xchg
cmpsl
into
cmp
xor
addr16
stc
cld
outsl
mov
sub
addr16
pop
decl
or
sarb
or
imul
out
and
addr16
bound
pop
std
xchg
or
int
cmc
jnp
add
jno
pop
bound
sub
sbb
pusha
jmp
fbstp
outsb
inc
push
popf
and
adc
xchg
stos
xchg
cmpsl
jbe
and
dec
in
sar
pushf
inc
imul
mov
fcoml
andb
loope
add
sbb
or
lea
jge
xor
mov
hlt
cmc
sbb
and
je
jl
inc
int
scas
xor
dec
stos
xchg
push
cmp
mov
pop
test
call
popa
jbe
test
ret
mov
adcl
add
mov
lea
icebp
mov
add
push
dec
or
xchg
shrb
adc
push
pop
cmp
sub
repnz
jle
dec
mov
and
inc
rorb
lea
jmp
andb
div
nop
loopne
inc
mov
jb
push
add
sbb
and
subl
and
and
fcmovnbe
movsl
mov
insl
dec
out
inc
push
sti
dec
mov
mov
xchg
icebp
popl
mov
mov
in
ret
inc
push
mov
rorb
or
mulb
mov
adcb
pop
pop
fbstp
mov
test
cmc
fists
into
cmp
fcoml
cmp
and
pop
repnz
das
push
and
push
cwtl
divl
xlat
in
jmp
cltd
add
xchg
mov
sahf
inc
insl
inc
pop
jmp
xor
std
push
cmp
gs
bound
sahf
add
mov
outsb
inc
sub
fistpl
jbe
pushf
ja
insl
xorl
loopne
dec
cmpsb
jle
pop
movsb
decl
dec
or
insl
push
rcll
mov
jne
xor
xor
xchg
mov
out
mov
mov
cwtl
xchg
pop
movl
xor
in
adc
stc
in
sub
sbb
sbb
xor
sub
adc
fimull
bound
and
and
lret
int3
dec
orb
adc
mov
pop
mov
inc
decb
sbb
push
lods
inc
dec
push
push
pop
push
iret
fisubrl
leave
insl
push
xchg
cmp
dec
xorl
ss
xchg
jle
outsl
enter
cmp
inc
out
sahf
mov
jns
ret
cmc
out
add
mov
mov
fisubs
aam
cs
out
movsb
mov
jne
pop
xor
les
xor
cmp
xchg
mov
xchg
xor
fstps
pop
push
or
lea
jo
out
or
shl
iret
xor
lret
adc
pop
in
js
insb
xchg
mov
ret
xor
pop
cmp
cld
ret
pop
xlat
mov
hlt
inc
ja
aam
dec
xchg
in
imul
fsubrs
shrb
aad
push
pop
ss
cmp
rorl
inc
insb
movsb
inc
push
xchg
outsb
ds
jl
mull
jne,pn
dec
data16
std
xchg
jne
lds
je
push
push
mov
clc
addr16
ret
rcll
mov
pop
lret
xor
decb
lds
movsl
inc
faddl
js
dec
sub
jo
test
out
push
xchg
pop
icebp
int
and
inc
inc
inc
jg
xor
rorl
arpl
sub
lock
push
jge
movsl
bound
mov
xchg
and
and
out
jo
ljmp
jp
ficomps
mov
lock
push
sbb
movsb
adc
fwait
out
sarl
xchg
jle
mov
xchg
cmpsb
hlt
inc
mov
int
popa
ds
fidivrs
fcomps
sub
out
inc
stc
adc
xchg
pop
adc
xor
aaa
push
dec
xorb
sub
mov
bound
inc
inc
sahf
int3
sbb
jb
sbb
lods
sub
jecxz
lret
lret
adc
adc
xchg
and
stos
std
test
xor
xor
loop
das
inc
int
fistpll
int3
mov
gs
icebp
mov
pushl
cmp
or
sub
adc
mov
jg
stos
xchg
dec
test
and
sub
xor
xchg
sbb
pop
jo
xor
std
in
daa
clc
pop
out
fxsave
fucomi
into
pushf
sub
mov
lcall
jecxz
aaa
sub
aaa
inc
mov
add
std
push
mov
lahf
popf
test
push
scas
push
xor
jl
push
inc
and
lock
sbb
insl
test
fbld
nop
cltd
pop
mov
pusha
lds
mov
mov
xchg
mov
lret
mov
pusha
adc
push
test
in
clc
and
mov
imul
lock
pop
mov
pop
cmp
push
lock
xor
test
adc
cmp
fiadds
pop
aaa
ret
mov
cmp
inc
mov
dec
sub
xchg
sbb
add
stos
fistpll
outsb
cmp
repz
push
add
mov
dec
xchg
inc
cmp
cmpsl
int
js
sub
inc
pop
movsb
addl
xor
test
mov
dec
push
inc
dec
mov
in
stos
std
xchg
inc
ror
popa
xchg
jmp
rcrl
dec
std
cmp
mov
jb
lods
xor
xchg
mov
ret
cmp
test
adc
and
pop
je
lcall
mov
xchg
xchg
movsb
dec
push
and
cmp
data16
mov
gs
or
or
xorb
mov
push
dec
dec
mov
mov
pushf
lahf
cmp
pop
adc
jnp
cltd
fildl
ljmp
mov
jge
jns
in
lods
arpl
loop
std
out
mov
fildll
cmp
out
imul
xor
les
in
outsl
testb
mov
addr16
and
adc
faddl
pusha
mov
scas
data16
out
mov
lods
push
adc
jg
xor
stos
sbb
fldt
mov
xor
push
dec
add
adc
sub
pop
mov
ret
xchg
daa
lods
xchg
sub
enter
test
aaa
push
add
dec
enter
xor
xor
fmuls
mov
fidivrs
mov
andl
xchg
or
push
stos
dec
mov
loope
cltd
pop
mulb
mov
stc
jl
inc
mov
sub
push
jnp
rcrb
enter
adc
pop
out
mov
mov
iret
stos
pop
in
cmp
pop
lds
cmp
dec
jo
xor
mov
nop
cltd
or
fbld
ret
or
add
les
xchg
fwait
mov
lock
xlat
mov
dec
sbb
out
fstpl
lret
jns
cmp
dec
inc
mov
cmc
or
cli
in
sub
lea
jp
dec
xchg
icebp
jnp
mov
pop
ror
scas
push
shl
cli
mov
test
or
jge
leave
lods
push
pop
jge
les
sub
pop
jle
xor
jmp
cmpsb
hlt
or
icebp
cmpsb
mov
sub
ljmp
and
cs
adcl
je
pusha
push
mov
nop
dec
push
mov
in
rorb
xor
mov
jne
push
mov
stos
clc
push
movsl
dec
mov
divl
repnz
dec
sbb
mov
adc
push
xor
aam
mov
movsb
pusha
lods
jno
inc
xchg
sub
sbb
cmc
push
popa
fsubs
mov
pop
add
sub
mov
std
or
sub
jne
mov
ja
pop
sbb
ds
ja
aad
outsl
cmp
sbb
aaa
sbb
iret
shl
aam
mov
inc
adc
fs
pop
xor
rclb
jmp
mov
pop
stos
hlt
sbb
jbe
xor
lret
pop
xchg
shl
jl
lock
pop
ret
adcl
stos
iret
and
xlat
sub
jbe
rcl
mov
cmc
and
fcmovnu
movsl
xchg
sbb
fbld
ret
inc
or
stos
xor
adc
bound
fisttps
push
arpl
inc
cmp
mov
sub
sbb
mov
movsb
jmp
pop
mov
mov
arpl
icebp
push
pop
cld
in
push
jae
pusha
dec
adc
push
mov
xor
add
jnp
mov
mov
jmp
pop
jecxz
cmp
int3
subb
js
dec
pushf
lcall
pop
in
hlt
movsl
sub
pop
xchg
cmp
mov
dec
pop
pop
lcall
push
out
and
sub
dec
pop
movsb
pop
lds
jmp
adc
loope
into
loope
std
jg
pop
jl
iret
inc
cmp
and
movsl
dec
sti
and
movb
xchg
das
mov
fs
jne
xchg
mov
imul
mov
sbb
xchg
aas
dec
inc
sbbl
ss
cmpsl
jae
cld
xchg
cmp
insb
sahf
add
inc
fdivrs
ds
aas
dec
loope
fldt
cmpsb
loope
pop
lret
cmp
addr16
mov
pusha
sbb
adc
pusha
hlt
in
sub
rorb
aad
scas
jb
cld
mov
lret
sub
jle
mov
subl
mov
sbb
stos
add
out
pop
pop
and
mov
add
pop
pop
es
clc
stc
inc
mov
or
mov
add
mov
out
cmp
cwtl
pop
les
psubb
addr16
xchg
jmp
out
ss
hlt
jae
imul
stos
insl
cmp
imul
pop
ljmp
cmp
mov
hlt
cmc
outsb
adc
in
out
cmpsb
push
xor
mov
pop
push
ja
test
sbb
sub
pop
call
movsl
lds
rcl
jp
and
push
jns
mov
into
add
fs
sub
cld
lret
sbb
mov
jmp
or
jge
inc
lcall
loope
add
fidivrs
ret
inc
fildl
jg
push
loopne
pusha
insl
push
out
dec
pusha
mov
roll
shl
movsl
and
mov
arpl
cltd
lahf
xor
xchg
test
jo
je
add
enter
adc
and
fwait
gs
ljmp
xor
mov
xor
fstp
jnp
or
lods
add
xchg
ret
push
test
add
jmp
in
int3
movsl
sbb
into
sub
data16
pop
rcrl
or
mov
lds
test
and
into
std
call
push
dec
push
aad
pop
out
lods
aaa
push
in
jmp
in
mov
imul
movlps
mov
or
leave
mov
mov
fdivs
mov
adc
imull
xor
adc
jle
dec
test
cs
call
jo
in
fsubs
xchg
and
rorl
sbb
sbb
int3
adc
mov
xchg
push
leave
in
es
xor
cmc
test
pop
xor
aaa
or
cltd
pop
movsl
test
inc
adc
xor
mov
fs
inc
and
fdivrl
mov
ja
cwtl
sbb
cmpsl
leave
and
hlt
mov
xor
cmp
cmp
xchg
dec
xorb
aaa
jecxz
mov
scas
int
cld
jp
push
or
in
sub
jb
or
lahf
loop
add
scas
pop
push
out
cs
push
movsl
mov
mov
lea
ret
in
push
and
scas
sub
repnz
inc
movsb
scas
or
sub
xchg
pop
repnz
cmpsl
mov
sub
or
xor
add
push
inc
mov
loopne
mov
cmp
push
pop
repnz
add
adc
jnp
popa
lds
add
sahf
push
lock
jg
cli
ret
mov
sbb
faddl
sub
mov
adc
push
xadd
cmp
lcall
and
fdivs
sti
and
lahf
pop
dec
jae
test
mov
inc
lcall
leave
mov
xchg
mov
adc
ja
repz
movsb
scas
pop
test
aam
jle
mov
adc
sbb
aad
and
inc
lods
cld
scas
jle
lea
lods
imul
test
cmp
cmp
cmc
dec
xlat
mov
and
and
sbb
push
pop
ret
insl
and
jo
outsl
sbb
mov
lret
push
sub
popa
sub
mov
bound
les
add
or
adcb
cmp
push
adc
fbstp
lds
rcl
ficoms
andl
test
inc
lods
clc
mov
rorl
lods
inc
shr
sbb
mulb
iret
jg
sub
mov
jo
scas
insb
jmp
lret
sbb
icebp
xorl
std
jns
inc
addr16
addr16
push
cs
iret
jb
repnz
clc
dec
push
mov
inc
je
fidivrs
dec
adc
sti
je
or
push
push
sub
inc
pop
popa
adc
loope
lret
sub
sbb
outsb
add
mov
ret
cmp
and
push
pop
mov
add
or
or
push
xchg
and
pop
cmp
int
frstor
cmp
cmp
mov
call
pop
sub
lock
loope
sub
test
xchg
imul
cmp
mov
loop
loope
les
out
andb
and
mov
jmp
lods
mov
pushf
mov
mov
dec
mov
dec
inc
stc
mov
pop
dec
add
popa
fdivrs
sub
fisubs
in
or
loopne
divl
clc
and
hlt
lret
sub
inc
xor
push
out
andl
test
pushf
pop
xor
lahf
in
mov
push
stos
mov
push
jb
add
mov
rcrb
xchg
inc
es
xchg
je
sarb
jae
sbb
lea
xchg
mov
stos
add
fildll
sbb
push
jg,pn
test
sbb
cmp
mov
idiv
inc
xor
inc
scas
notb
mov
xorl
test
lods
inc
neg
add
adc
call
and
in
and
and
negb
gs
dec
in
sub
push
sbb
jb
cmp
in
xchg
iret
xlat
cmp
push
push
inc
in
cmpsl
jno
pusha
ljmp
pop
in
sbb
addr16
std
data16
incb
cltd
nop
enter
adc
mov
mov
pop
and
xchg
mov
xchg
sbb
mov
xor
jecxz
jb
test
fwait
scas
sbb
clc
jns
test
enter
sub
mov
cmp
jg
pop
mov
lds
add
cmpsl
outsl
mov
sbb
cmp
fcoml
jecxz
shlb
push
ds
xchg
lcall
add
out
in
mov
out
jecxz
sbb
dec
popf
outsb
stc
cmp
outsb
lret
adc
cwtl
pop
xor
mov
push
and
ja
push
xor
jp
xchg
mov
pop
adc
int3
xlat
loope
add
cli
jnp
add
jecxz
leave
or
cwtl
or
pop
push
adc
xchg
xchg
lock
ret
xchg
mov
mov
push
lock
call
movb
dec
mov
int
cmp
xchg
xor
cmp
and
pop
cwtl
dec
sbb
sub
rclb
jle
ss
jne
pop
sbb
mov
out
sti
leave
mov
pop
sbb
pop
nop
aaa
cmp
jnp,pt
jle
sub
cmpsb
cs
sub
cmp
xor
adc
adc
pop
pop
cltd
popf
mov
push
aad
jl
push
and
push
leave
out
aas
cmp
pop
mov
pop
loopne
jbe
and
sub
outsl
cltd
sbb
sub
xor
inc
inc
push
cltd
xchg
bound
pop
imul
mov
notb
push
loope
dec
pop
cmp
mov
inc
sbb
pop
in
leave
gs
mov
repnz
mov
sti
cmp
bound
jl
xor
std
jge
mov
lock
faddp
insl
pop
jle
mov
cwtl
mov
jle
inc
icebp
and
and
cmc
lret
test
add
jg
loopne
xor
xchg
leave
out
aaa
or
inc
xchg
jmp
insl
pop
adc
mov
pushf
jge
loop
flds
or
lods
movl
enter
mov
out
js
mov
iret
cmp
adc
out
cli
mov
popa
in
mov
or
push
push
hlt
pushf
shll
daa
dec
popf
jno
aam
sbb
xor
jg
xchg
imulb
cmp
enter
lahf
sub
sbb
out
jge
imul
jp
mov
mov
dec
jge
jge
and
mov
and
sub
jmp
mov
cmp
or
aaa
add
test
ret
test
jp
aas
shll
pop
xlat
mov
pushf
or
test
jecxz
pop
fbstp
dec
jle
mov
incb
mov
lcall
je
xlat
mov
push
push
cli
sbb
gs
sub
jp
xchg
or
clc
lahf
jae
pop
in
inc
js
dec
cmp
mov
or
sub
and
popf
xchg
add
mov
mov
or
dec
inc
insl
mov
lds
das
lret
es
cmp
in
cmp
cld
jecxz
leave
inc
push
rcrb
movsl
notl
cmpsb
mov
lods
push
lret
ja
push
int3
xor
aam
fcmovne
loop
ss
push
inc
lds
inc
lret
mov
or
jnp
ljmp
xchg
jo
pop
mov
push
loope
dec
dec
stos
repz
jmp
jnp
mov
decb
fwait
out
jecxz
in
fstl
jne
jecxz
or
add
imul
dec
mov
les
mov
xor
xor
call
sarb
flds
sub
sub
sbb
pop
gs
add
out
xchg
jmp
pop
jge
adc
push
pop
stc
push
sahf
pop
pop
cwtl
loop
data16
xchg
nop
call
mov
xor
hlt
test
cmp
cmpsl
push
xor
dec
call
xchg
xchg
inc
push
xchg
lea
mov
xchg
push
ret
rcrb
nop
sub
insl
xor
dec
cmp
bound
mov
loop
mov
leave
cli
dec
int
mov
stos
pop
push
mov
psraw
scas
pop
out
es
xchg
daa
stos
mov
insl
and
push
imul
dec
addr16
cmc
and
xchg
jge
jp
xor
out
dec
lret
loop
lret
adc
mov
adc
push
test
mov
jo
xchg
jl
dec
and
cld
jp
jmp
or
imul
lea
loope
popa
adc
pop
sahf
xchg
daa
xchg
mov
jo
stos
jg
mov
inc
or
push
adc
ret
ljmp
cltd
mov
fnstenv
mov
push
add
push
xchg
xchg
lahf
test
fdivrl
out
dec
fs
mov
imul
dec
sbb
sbb
ja
sbb
mov
gs
sti
inc
jb
add
mov
and
xchg
test
adc
jle
cmpsb
test
imul
add
jbe
sbb
mov
and
dec
mov
decb
mov
jecxz
add
popf
outsb
std
mov
sti
test
mov
aam
adc
outsl
mov
fildll
jnp
enter
mov
or
add
jg
jno
cmpsb
fcmovne
je
mov
je
cltd
adc
pop
inc
and
and
aad
jne
mov
ss
popf
sahf
sub
call
lea
push
and
mov
andb
pop
jp
pop
inc
in
pop
shll
fcmove
xchg
loope
inc
inc
mov
mov
cwtl
pop
xor
repz
dec
dec
cmp
sti
pushf
jb
sbb
jne
pop
mov
frstor
jns
loope
adc
jl
fidivl
jge
pop
xchg
divb
fadd
cmc
mov
ljmp
jecxz
adc
lret
push
xchg
xchg
into
push
mov
lea
jo
mov
ficompl
mov
dec
adc
int3
pusha
pop
pop
out
lock
push
cmpsb
or
mov
dec
testb
cmp
adc
aaa
cmp
shrl
adc
mov
mov
sub
nop
jbe
push
aas
pop
cmp
mov
scas
mov
ficompl
and
push
pop
mov
fildll
mov
push
lods
cmpsl
lcall
inc
mov
das
jmp
mov
lahf
add
jb
adc
rcrl
in
pop
pop
imul
xor
dec
stos
push
repz
arpl
add
pushf
cltd
xchg
adc
mov
mov
div
repz
dec
cmp
xchg
push
add
imul
and
push
pop
sub
mov
adcl
push
loopne
cmp
sub
jmp
lock
call
insl
cmp
scas
dec
push
xchg
out
std
std
xchg
mov
mov
and
nop
add
add
popa
pop
cmp
jbe
lds
fidivrs
out
xlat
mov
cld
jbe
fnsave
pop
cltd
out
mov
leave
psubw
mov
pop
jnp
pushf
ss
test
pop
xchg
test
loopne
or
jmp
dec
jb
push
sbb
enter
jg
stc
add
push
fstp
cmp
call
lcall
je
adc
dec
shll
in
xor
int
mov
xchg
jb
out
push
ljmp
ja
xchg
mov
pusha
sarb
jb
daa
xchg
jmp
imul
dec
or
push
arpl
adc
xchg
cmp
and
push
adc
ja
cmp
leave
ficoms
jecxz
mov
xchg
xchg
adc
or
inc
and
push
sub
mov
int
sub
out
and
lds
outsl
addr16
jb
mov
sarb
sub
ret
cmp
adc
mov
sarl
dec
adc
shl
dec
dec
daa
test
dec
insl
inc
lds
or
stc
push
outsl
xor
movsb
xor
jno
mov
imulb
call
gs
lock
sahf
lahf
sbb
sub
lock
xor
jb
and
ret
into
jmp
jmp
mov
jle
xchg
cmp
xchg
mov
sub
dec
in
rcl
mov
jg
imul
outsb
testb
imul
sbb
push
dec
inc
xor
sbb
loope
test
push
stc
mov
mov
add
xlat
xor
je
clc
or
iret
lea
jo
add
popa
xor
sbb
or
cltd
ss
ficoml
xor
mov
mov
mov
loop
insb
or
jne
lock
push
loopne
subl
push
popa
popf
mov
lahf
sbb
jge
out
add
xor
sub
lret
mov
push
sbb
inc
push
mov
xor
push
sbb
out
jno
adc
lret
mov
cmp
stos
lea
push
shr
in
mov
bsf
mov
xor
adc
push
adc
addr16
xchg
sub
mov
xor
pop
jo
sti
cmp
loopne
orb
in
cmpsb
aam
adc
cmpsb
mov
cmc
mov
lret
pop
mov
jno
imul
sti
xor
movsb
outsb
inc
xor
outsb
ficoml
jl
sub
add
in
stos
cmpsl
cli
mov
jo
mov
cmpsl
and
mov
imul
push
pop
mov
call
and
insb
aad
inc
fstpt
mov
adc
mov
data16
ljmp
push
xlat
adc
adc
sarb
sbb
cmp
push
lds
sbbb
shlb
add
mov
mov
aaa
sbb
mov
iret
jno
pop
in
sub
daa
jae
adc
or
xor
mov
arpl
cwtl
loope
mov
shlb
inc
or
out
shl
adc
lock
repnz
lock
xchg
cmc
xchg
movsl
int
xchg
test
lods
in
mov
int
push
jg
push
push
popf
rorb
hlt
sub
mov
repz
dec
ret
test
push
mov
sbb
lds
xchg
xor
jae
or
push
jp
push
inc
test
pop
fucomip
sub
pop
adc
or
pop
add
push
imul
jo
stc
dec
cwtl
pushf
jp
out
out
mov
inc
pusha
rcrl
data16
data16
popf
jmp
les
xor
mov
sub
mov
ja
push
lret
sub
es
fcmove
stc
sahf
sub
add
insb
push
mov
cmpl
arpl
xchg
dec
loopne
jno
cld
insl
lret
sarl
mov
cmp
dec
add
stc
cmpsb
imul
adc
negl
jg
mov
and
pusha
pop
jp
add
mov
lret
mov
rcll
or
es
ljmp
push
adc
sti
pop
scas
std
scas
fildl
movsb
push
push
cmp
dec
repz
or
test
sbb
mov
fbstp
dec
fisubl
icebp
lret
jl
cld
cmp
pop
adc
sub
inc
jns
and
pop
jnp
jns
ss
fsts
push
lds
ds
adc
enter
outsb
pop
and
pop
mov
add
fs
in
inc
jae
adc
aas
push
sbb
push
js
fcoms
hlt
push
mov
push
in
shl
mov
mov
mov
js
dec
into
scas
push
mov
xor
xchg
aam
dec
ss
xlat
into
test
mov
mov
dec
mov
mov
fsubr
xchg
scas
xchg
adc
push
sti
push
xchg
int
sar
adc
pcmpeqw
pop
fistpl
stc
dec
pop
and
or
mov
xor
clc
mov
adc
jb
mov
sti
test
mov
and
decb
test
mov
test
sarb
lcall
pop
sub
scas
add
inc
inc
xlat
or
lds
cwtl
pusha
push
shrb
test
dec
lock
sti
test
jb
dec
out
push
pop
sbb
les
aad
leave
stc
mov
lcall
push
push
mov
movsb
stos
jae
std
mov
jo
imul
sub
sbb
push
and
inc
dec
push
mov
roll
fiadds
leave
push
cmp
pop
add
dec
cli
int3
push
or
adc
xor
das
sub
or
js
adc
movsb
mov
in
aas
cs
jge
popf
fsubl
xlat
rcrb
jecxz
test
push
fstpt
sti
mov
mov
aam
push
cmp
add
xlat
icebp
cmp
mov
lret
xlat
pop
pusha
xchg
jbe
pop
stos
and
cld
test
push
mov
rcrb
cmp
pop
repnz
xchg
cmp
daa
addl
or
jp
jge
mov
jno
mov
ret
dec
push
and
add
nop
mov
fiaddl
mov
pop
cmp
mov
inc
lds
faddl
xchg
xor
cmp
insl
in
sub
hlt
xchg
in
jne
dec
dec
sbb
adc
or
jp
sar
test
andl
getsec
dec
lds
in
dec
mov
stc
out
xchg
aad
mov
add
jne
xor
fwait
pop
leave
mov
lock
jae
push
movsl
push
cmp
jne
rsm
xor
pop
data16
aam
rorl
jmp
jecxz
xchg
pop
mov
mov
cmpsl
icebp
mov
push
movsb
pop
rcrl
repnz
mov
or
sbb
inc
adc
mov
or
gs
jb
in
adc
mov
popf
push
aad
push
lret
xchg
xlat
xorl
mov
fwait
sub
inc
test
lods
cmpsl
insb
mov
dec
pusha
push
push
addl
insl
jmp
ljmp
jne,pt
repz
lods
ljmp
cltd
push
repnz
loop
ret
jg
xchg
or
cwtl
inc
push
clc
shrl
stos
je,pn
loopne
sub
xchg
mov
stos
push
test
aad
jmp
std
and
xor
jbe
ja
movsl
fldl
daa
mov
adc
call
aad
leave
mov
in
neg
clc
and
adc
push
push
shrb
cmp
jmp
xor
xlat
xchg
fs
inc
or
cltd
mov
inc
pop
pop
dec
repnz
xchg
ja
mov
sbb
cmc
outsb
loope
repnz
gs
sti
ret
and
mov
push
jno
add
bound
das
cmp
add
fimuls
xor
inc
sub
push
sub
mov
out
cmp
dec
adc
mov
cmpsl
jge
and
ret
dec
pop
es
cld
xor
xorl
dec
fsubrs
sub
out
scas
int3
mov
pusha
cmp
cmpsb
add
add
dec
movsb
cs
int
pop
xor
dec
in
mov
outsl
test
push
dec
imul
lea
pop
repnz
push
push
cmp
add
das
cmpsl
rcr
orps
cmp
pop
adc
in
aaa
ja
mov
clc
lods
out
pop
repnz
cmp
stos
jge
test
push
subl
scas
fists
pop
or
mov
mov
movsl
dec
fucomi
and
jecxz
aaa
shll
out
mov
inc
dec
mov
insb
push
enter
push
stos
fistl
mov
pop
sub
inc
xchg
dec
or
mov
sub
xchg
push
sub
imul
mov
pop
pop
or
mov
aaa
wbinvd
xor
sarl
shlb
iret
ljmp
std
inc
movsb
pushf
test
inc
jno
hlt
insb
mov
call
in
out
out
lods
leave
xor
fdiv
xchg
lea
aaa
fwait
adc
mov
add
cmp
dec
adc
push
outsb
jle
movsl
mov
aad
imul
rcrb
out
cmp
lods
into
insl
imul
fs
jnp
imulb
mov
data16
repz
lds
insb
fistps
daa
mov
or
test
jno
xor
fistpl
outsl
std
and
shlb
push
sub
push
test
ja
dec
test
adc
fstps
lods
push
sti
rcl
cs
mov
fwait
and
pop
jmp
out
inc
scas
fs
jae
push
xchg
repz
popf
gs
jp
pop
dec
jb
inc
cmc
aad
dec
ljmp
mov
sahf
pushf
mov
pop
mov
xchg
loop
and
out
and
inc
mov
mov
xor
push
testb
repnz
cmp
cmpsl
popa
mov
inc
push
jne
data16
movsl
sub
or
and
sbb
mov
dec
pop
cmp
js
pop
adc
add
movsl
nop
push
sub
int3
push
jns
mov
jecxz
xor
fcompl
outsb
sub
cli
push
shlb
in
es
inc
cld
jns
or
and
sbb
aam
loopne
fcomps
addr16
mov
lods
push
and
push
int3
mov
sti
lret
nop
mov
iret
pop
es
cltd
in
xchg
repnz
faddl
mov
stos
ds
jb
sbb
mov
or
ffree
pop
movsl
adcb
aam
fnstenv
mov
insl
cmp
dec
iret
fnclex
mov
mov
hlt
xor
lea
pushl
xchg
out
pop
mov
adcb
mov
bound
in
aas
sub
fcmovnbe
out
fwait
pop
iret
xchg
cli
xchg
sbb
jnp
nop
ror
mov
jae
pop
cmp
imul
adc
pop
lods
dec
outsl
jp,pn
shlb
cli
sub
jp
push
sti
ret
stc
sbb
aad
mov
leave
pop
mov
jae
mov
jno
add
fsubrs
arpl
xor
sub
push
imul
cmp
das
clc
movsb
movsl
mov
xlat
cld
jnp
mov
imul
mov
imul
test
fldt
lds
andl
popa
mov
daa
adc
pop
xchg
dec
mov
push
and
jb
clc
iret
xor
dec
test
sbb
pop
lcall
pop
xchg
sbb
nop
jecxz
data16
pop
test
stos
fwait
pop
inc
bound
fadds
lahf
push
push
repz
fisubs
imulb
test
clc
test
sbb
xchg
lock
dec
dec
sbb
dec
inc
mov
sub
push
mov
jge
dec
orb
dec
mov
pop
pop
add
jg
jb
hlt
out
xchg
push
xchg
testb
call
outsb
jge
cmp
shlb
fcoms
movsb
test
stos
icebp
jno
add
dec
ds
in
or
sub
icebp
ret
insb
cmp
inc
insb
xor
xor
or
add
mov
outsl
sub
sub
mov
or
daa
loop
jl
dec
sbb
mov
add
xor
cmp
xchg
mov
add
std
pop
rcr
pop
push
sbb
adc
sbb
push
xchg
sahf
mov
popf
cmpb
add
cmp
jl
pop
or
push
mov
imul
pop
int
cmp
dec
adc
lret
xor
mov
shlb
push
pushf
or
sub
mov
int
cwtl
jg
xor
sub
mov
jg
sub
je
or
in
sub
pop
into
ficoms
cmpsl
icebp
pop
add
lcall
orb
ja
int
jmp
and
cmpsl
mov
popaw
iret
mov
sbb
enter
xchg
test
pop
fiadds
scas
enter
mov
inc
ret
inc
or
dec
xor
adc
or
dec
xor
jb
inc
or
inc
push
es
imull
insb
aam
adc
adc
in
fwait
pop
in
sub
je
push
mov
adc
push
ss
add
pop
iret
fwait
imul
mov
stos
loope
cltd
jb
scas
loope
cld
lret
decb
push
cmp
stc
xchg
and
mov
and
pop
xchg
add
sahf
xchg
test
stos
negl
nop
pop
mov
push
add
xchg
arpl
or
cmp
lret
stos
xchg
jo
mov
addps
sti
stos
int
je
das
into
pop
fstpt
cmpsl
mov
repz
js
imul
lods
push
insl
fsubrl
pop
out
scas
sti
addr16
daa
sbb
cmp
add
sbb
sbb
jmp
push
adc
in
xchg
in
push
pop
stc
cmpsb
mov
adc
cmp
outsl
in
add
pcmpgtd
stos
mov
add
fildl
dec
push
jecxz
aad
hlt
xchg
hlt
sub
lahf
rcrl
gs
push
jo
xor
mov
hlt
xlat
cli
fistpl
out
leave
push
scas
loop
das
stos
sbb
pop
in
mov
push
adc
ds
js
in
push
aam
add
imul
std
ds
or
lods
and
insl
cmp
adc
push
mov
data16
xchg
int
cs
pop
shrb
stos
outsb
mov
mov
sahf
cmp
jg
imul
andb
dec
int
inc
ret
or
lahf
movsb
lock
insl
sbb
sbb
xchg
pop
mov
cld
xchg
.byte
