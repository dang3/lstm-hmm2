push
mov
sub
movl
call
mov
push
push
push
mov
push
call
push
push
push
mov
push
call
test
jne
call
mov
cmpl
jne
push
push
call
call
cmpl
jne
push
push
push
call
push
call
call
cmp
jne
mov
mov
mov
push
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
mov
push
call
mov
mov
push
call
lea
push
push
push
mov
push
call
push
push
push
mov
push
mov
push
call
mov
cmp
jbe
movl
mov
push
call
mov
push
mov
push
call
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
mov
push
call
mov
push
push
call
mov
movl
movl
movl
push
mov
push
call
mov
lea
push
call
mov
pop
ret
push
mov
push
mov
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
mov
push
mov
push
call
mov
push
call
push
push
push
call
mov
mov
pop
ret
push
mov
sub
push
lea
push
push
mov
push
call
mov
mov
cmpl
je
cmpl
je
cmpl
je
jmp
mov
and
mov
mov
shr
and
and
mov
mov
mov
cmpl
je
cmpl
je
jmp
push
push
mov
push
push
mov
push
call
jmp
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
jmp
lea
push
mov
push
call
mov
lea
push
mov
push
call
push
lea
push
lea
push
call
add
push
lea
push
mov
push
call
lea
push
mov
push
call
jmp
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
mov
pop
ret
push
mov
push
mov
mov
cmpl
je
cmpl
je
jmp
mov
jmp
mov
and
cmp
je
mov
and
cmp
jne
mov
and
push
mov
push
call
mov
jmp
xor
mov
pop
ret
push
mov
sub
movl
push
mov
push
call
add
mov
mov
push
call
mov
mov
pop
ret
push
mov
pop
ret
push
mov
sub
cmpl
jae
mov
mov
mov
add
mov
mov
push
mov
push
call
add
mov
xor
mov
div
test
jne
movb
jmp
mov
xor
mov
div
test
jne
lea
push
push
call
jmp
mov
xor
mov
div
test
jne
movb
movb
jmp
mov
movl
mov
mov
pop
ret
push
mov
push
movl
xor
mov
pop
ret
push
mov
sub
movl
push
push
push
push
call
mov
mov
push
call
mov
movl
mov
mov
pop
ret
push
mov
push
movl
push
push
push
push
call
mov
cmpl
jbe
mov
movl
mov
movl
mov
mov
mov
push
push
mov
mov
push
call
add
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
push
push
lea
push
call
add
movl
cmpl
je
movl
push
push
call
mov
cmpl
je
push
push
push
push
call
mov
push
push
push
push
mov
push
call
mov
push
push
push
mov
push
call
mov
push
call
movl
movl
cmpl
jne
movl
push
push
lea
push
call
add
lea
push
call
mov
add
mov
jmp
push
push
mov
push
push
call
mov
mov
mov
movl
cmpl
jbe
mov
push
push
call
movl
cmpl
je
movl
push
push
push
call
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
push
push
push
push
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
push
call
mov
pop
ret
sub
sub
sub
sub
sub
sub
sub
adc
cmpl
movaps
sub
mov
or
add
sub
dec
or
subl
sub
sub
sub
add
dec
or
subl
sub
add
rolb
dec
or
andl
lock
add
rolb
dec
or
xor
push
or
mov
sub
sub
sub
sub
sub
jae
mov
mov
mov
xor
sub
mov
mov
mov
mov
xor
sub
imul
mov
mov
mov
mov
mov
jmp
sub
sub
sub
add
mov
mov
mov
cmp
sub
sub
sub
sub
add
jmp
sub
sub
sub
add
dec
or
subl
sub
add
rolb
dec
or
andl
lock
add
rolb
dec
or
xor
push
or
mov
sub
subl
add
mov
mov
mov
cmp
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
adc
push
mov
add
jmp
mov
or
mov
shll
mov
inc
mov
add
push
mov
add
mov
shll
mov
inc
mov
add
dec
mov
andl
dec
jnp
jnp
jl
packssdw
mov
add
mov
xor
push
lret
cmovne
mov
mov
add
jmp
cmovge
add
jmp
mov
or
andb
mov
andl
mov
sidtl
dec
mov
add
andb
mov
andl
lods
verr
inc
mov
nop
mov
adc
mov
mov
test
shll
xchg
mov
dec
mov
add
adc
push
mov
add
xchg
mov
add
jmp
mov
lods
mov
add
or
add
or
add
xchg
or
ret
inc
or
nop
or
dec
or
add
inc
or
add
mov
add
or
inc
or
add
mov
add
xor
add
mov
mov
add
pop
or
mov
add
mov
mov
decl
decl
lods
or
add
or
add
or
add
stos
add
add
or
add
lock
add
push
stos
mov
lock
add
mov
stos
bts
add
push
stos
mov
cmp
add
xchg
stos
add
add
loopne
add
subb
stos
mov
push
stos
add
mov
add
add
mov
subl
stos
lods
add
stos
mov
add
mov
add
mov
subl
stos
lock
stos
mov
add
mov
mov
cmp
or
add
mov
add
add
addb
add
inc
ljmp
xor
mov
or
xadd
rorl
shl
add
mov
or
mov
add
add
adc
jmp
insl
push
rol
lods
loop
roll
add
jmp
mov
or
roll
add
rorl
add
add
rorl
add
insl
push
rorl
mov
or
roll
add
rorl
add
add
roll
add
pop
insl
dec
rorl
add
add
dec
ljmp
mov
or
leave
insb
mov
adc
add
rol
mov
or
roll
add
rorl
xor
mov
add
xadd
insl
inc
rorl
mov
or
roll
add
shr
jmp
inc
dec
rol
lods
roll
add
add
jmp
mov
or
add
loop
rol
mov
or
add
push
rorl
andl
arpl
aaa
or
add
loop
rol
mov
or
add
push
roll
add
pop
mov
mov
mov
cmp
jae
mov
mov
mov
xor
mov
or
adc
add
dec
or
xchg
mov
dec
or
mov
fisttpl
scas
ret
adc
adc
adc
adc
adc
adc
adc
jmp
jmp
adc
adc
adc
adc
adc
adc
adc
mov
cld
mov
or
add
mov
adc
adc
add
mov
mov
add
mov
mov
mov
mov
mov
mov
push
adc
adc
add
adc
adc
adc
add
push
call
add
adc
adc
mov
cld
adcl
add
add
adc
adc
add
incl
add
call
call
mov
mov
mov
dec
andb
xchg
fiadds
xchg
jb
adc
mov
lods
xchg
xchg
mov
xchg
sti
add
scas
xchg
add
movsl
xchg
add
push
mov
lods
xchg
xchg
or
or
xchg
add
add
add
dec
mov
sbb
add
or
adc
icebp
add
add
or
cmp
xchg
adc
shrl
icebp
add
add
push
xchg
xchg
add
jne
lcall
aam
adc
adc
or
xchg
xchg
pushf
mov
or
mov
add
mov
or
mov
add
cmpl
mov
xchg
cli
aaa
adc
mov
je
add
mov
xchg
mov
mov
or
andb
xchg
adc
mov
mov
cld
or
inc
mov
je
xchg
das
mov
or
xchg
xchg
adc
or
xchg
xchg
xchg
xchg
pop
add
rorl
or
xchg
pop
add
add
mov
cwtl
mov
xchg
daa
add
add
adc
mov
mov
inc
add
dec
mov
xchg
daa
add
mov
or
mov
add
mov
mov
fmull
adc
adc
mov
jmp
push
lcall
aam
or
xchg
or
add
cmp
add
andb
add
mov
mov
mov
add
andl
add
mov
movl
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
mov
dec
or
add
fimuls
mov
mov
mov
mov
mov
adc
pop
add
add
scas
add
add
add
add
aas
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
xchg
pop
jae
mov
mov
mov
cmp
jae
mov
mov
mov
xor
mov
add
mov
dec
or
add
fisttpl
rorl
loopne
add
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
pop
xor
mov
mov
mov
mov
mov
add
pop
add
add
sar
add
imul
add
lcall
xor
add
push
or
inc
pop
int
add
push
insl
adc
or
add
adc
mov
mov
sbb
add
dec
or
add
adc
adc
mov
cmpl
xchg
add
mov
mov
mov
mov
mov
mov
mov
push
xorl
cwtl
add
add
push
add
add
ja
mov
lret
add
add
add
add
or
add
or
sbbl
add
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
adc
lret
mov
mov
mov
mov
mov
decl
lods
add
add
add
add
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
fwait
add
add
mov
fimuls
mov
mov
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
cmpl
pop
mov
mov
mov
or
mov
mov
mov
rorb
add
mov
mov
mov
mov
xor
mov
add
rorl
loopne
add
mov
mov
mov
jmp
in
roll
incl
mov
test
add
adc
adc
mov
cmpl
adc
mov
mov
mov
mov
mov
mov
dec
or
nop
mov
dec
or
add
push
add
add
ja
mov
lret
add
add
add
add
or
add
add
sbbl
add
mov
movl
inc
mov
mov
xchg
add
push
or
mov
mov
add
mov
mov
pop
or
add
or
mov
cmpl
jbe
mov
mov
mov
adc
mov
mov
mov
rorb
add
fwait
add
add
mov
fimuls
mov
mov
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
dec
or
mov
mov
lds
mov
mov
mov
mov
xchg
add
dec
or
mov
cmpl
pop
mov
mov
mov
or
mov
mov
mov
rorb
add
mov
mov
mov
mov
xor
mov
add
rorl
loopne
add
mov
mov
mov
jmp
mov
movl
jmp
mov
mov
xchg
add
pop
or
mov
mov
add
mov
mov
mov
mov
xchg
add
pop
or
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
dec
or
leave
lea
mov
mov
mov
mov
xor
mov
adc
lret
mov
mov
mov
mov
mov
in
roll
incl
mov
mov
mov
mov
push
or
add
aam
add
add
mov
mov
mov
mov
mov
mov
inc
pop
mov
xchg
pop
push
insl
inc
mov
mov
mov
push
mov
mov
mov
push
add
mov
mov
mov
mov
mov
inc
or
jecxz
add
mov
mov
mov
mov
mov
push
inc
aas
mov
mov
mov
cmpl
adc
inc
or
andl
add
jmp
mov
mov
xchg
add
dec
or
mov
cmpl
sbb
xlat
add
add
mov
pop
adc
jmp
mov
mov
mov
mov
adc
add
adc
mov
movl
sbb
mov
rolb
or
mov
mov
mov
mov
ds
push
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
push
sub
mov
dec
or
add
or
xlat
add
add
mov
mov
mov
mov
push
inc
aas
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
ja
mov
lret
add
add
add
add
adc
test
ret
add
mov
pop
or
add
leave
imul
add
add
xchg
dec
or
add
mov
ret
sub
add
add
add
mov
mov
dec
or
add
sub
or
mov
mov
cmpl
jbe
mov
mov
mov
cmp
jle
or
les
add
mov
xchg
add
mov
push
or
subl
adc
test
add
lods
add
add
or
add
mov
add
add
mov
mov
mov
mov
aad
mov
mov
adc
add
add
lods
add
add
pop
add
jmp
mov
xchg
add
xchg
push
or
test
add
jmp
mov
mov
xchg
add
pop
or
mov
mov
mov
ds
pop
jae
mov
mov
mov
mov
imul
mov
mov
add
add
lods
add
add
ja
add
mov
mov
imul
mov
mov
aam
add
add
add
lods
add
add
or
jbe
add
in
xor
incl
mov
xchg
add
dec
or
add
aam
add
add
push
or
mov
cmpl
adc
inc
or
inc
add
add
add
adc
add
cmpl
ja
mov
xchg
add
test
add
add
adc
add
mov
mov
push
dec
jnp
sub
add
mov
mov
push
mov
call
mov
mov
mov
cmpl
js
mov
mov
push
mov
call
mov
mov
mov
cmpl
ja
mov
mov
cmpl
and
adc
add
mov
mov
push
push
adc
daa
add
add
sbb
xchg
adc
add
mov
mov
push
or
and
add
jmp
mov
xchg
add
add
sub
add
push
mov
mov
push
push
mov
add
mov
movl
mov
mov
xchg
add
xchg
dec
or
add
aam
add
add
push
or
mov
cmpl
adc
inc
or
add
addl
je
mov
mov
xchg
add
mov
mov
call
mov
mov
mov
cmpl
js
mov
cmpl
ja
insl
add
sub
add
inc
or
add
add
iret
add
add
jns
inc
or
xchg
sbb
add
nop
iret
add
add
data16
push
mov
mov
push
mov
add
mov
mov
mov
xchg
add
mov
xchg
add
add
sub
add
push
mov
shrb
xchg
int3
add
add
add
int3
add
add
pop
add
add
cmp
mov
add
mov
mov
push
inc
adc
and
add
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
mov
mov
andb
add
xchg
pop
mov
mov
mov
mov
add
mov
mov
incb
decl
adc
add
add
mov
mov
paddw
decl
loopne
add
add
imul
add
push
mov
mov
push
mov
add
imul
add
push
mov
push
mov
add
mov
pop
popa
pop
pusha
add
jmp
mov
shlb
mov
pop
ret
push
mov
push
push
call
push
push
push
call
call
xor
pop
ret
push
mov
sub
push
push
movl
movl
movl
push
call
mov
movl
movl
mov
mov
lea
rep
push
call
mov
push
push
lea
push
call
add
movw
lea
push
call
add
mov
movw
movw
push
push
lea
push
call
add
push
push
call
push
mov
push
call
movl
lea
push
push
call
add
mov
cmpl
jne
mov
movsbl
cmp
je
mov
movsbl
cmp
je
push
lea
push
lea
push
call
add
push
push
push
mov
push
call
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
movl
mov
cmpl
je
mov
movl
push
push
mov
push
call
mov
mov
mov
mov
jmp
push
push
push
call
push
push
mov
push
call
xor
pop
pop
mov
pop
ret
push
mov
sub
movl
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
call
mov
mov
push
push
push
call
mov
cmpl
je
mov
add
mov
mov
movl
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
mov
push
mov
push
call
cmpl
jne
push
lea
push
push
mov
add
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
movl
mov
push
call
push
call
xor
mov
pop
ret
push
mov
sub
movl
mov
add
mov
cmpl
jae
mov
push
mov
push
call
add
mov
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
sub
mov
jmp
jmp
push
call
call
jmp
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
cmpl
je
movl
movl
jmp
mov
add
mov
mov
add
mov
mov
cmp
jae
mov
add
mov
jmp
push
push
call
add
mov
mov
mov
pop
ret
push
mov
mov
pop
ret
push
mov
sub
lea
push
push
mov
push
call
mov
and
mov
and
imul
mov
mov
and
cmp
jne
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
mov
and
cmp
jg
movw
jmp
movw
mov
and
cmp
je
mov
and
mov
shl
lea
push
push
call
mov
jmp
push
push
call
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
jge
mov
and
mov
shl
mov
mov
mov
and
cmp
je
mov
and
mov
shl
lea
push
push
call
mov
jmp
push
push
call
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
cmp
jge
mov
and
mov
shl
mov
mov
mov
movl
mov
and
mov
mov
imul
add
and
cltd
and
add
sar
mov
imul
mov
mov
mov
movl
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
push
push
call
mov
push
mov
push
mov
push
mov
xor
mov
push
push
mov
push
mov
push
call
push
push
push
push
push
push
mov
push
call
mov
movw
mov
mov
mov
mov
lea
mov
add
mov
movw
movw
mov
mov
mov
mov
lea
mov
push
lea
push
push
lea
push
mov
push
call
push
lea
push
mov
mov
lea
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
mov
push
call
test
jne
mov
push
call
test
jne
mov
push
call
mov
pop
ret
push
mov
sub
movl
movl
call
mov
movl
push
push
call
add
mov
cmpl
je
mov
push
call
mov
push
call
cmpl
je
mov
push
call
mov
jmp
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
jne
xor
jmp
cmpl
jne
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
push
lea
push
push
lea
push
mov
push
call
test
je
push
push
push
mov
push
call
mov
push
mov
push
push
mov
push
mov
push
call
push
lea
push
mov
push
lea
push
mov
push
call
push
mov
push
push
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
push
call
xor
mov
pop
ret
push
mov
sub
push
push
mov
mov
movl
movl
lea
mov
push
call
mov
mov
lea
rep
movsw
mov
xor
lea
rep
stos
mov
movl
movw
mov
movl
movw
movw
movw
movw
lea
push
call
add
mov
movl
movl
cmpl
je
push
push
lea
push
call
add
lea
push
call
lea
push
lea
push
call
push
push
push
push
call
mov
mov
mov
push
call
add
jmp
mov
movl
mov
push
push
mov
push
push
call
mov
mov
mov
cmpl
je
mov
movl
mov
mov
add
mov
mov
mov
cmpl
jne
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
movl
cmpl
je
mov
add
mov
push
call
mov
mov
mov
mov
cmpl
jbe
mov
cmpl
jne
cmpl
je
mov
push
call
movl
movl
mov
cmp
jae
movl
jmp
mov
add
mov
cmpl
jae
mov
cmp
jae
mov
add
xor
mov
mov
add
xor
mov
xor
mov
mov
mov
mov
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jae
mov
cmp
jae
mov
add
xor
mov
mov
add
xor
mov
xor
mov
mov
mov
mov
mov
add
mov
jmp
jmp
jmp
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
mov
sub
push
push
lea
push
call
add
movl
cmpl
jne
movl
jmp
movl
jmp
lea
push
mov
push
call
test
je
jmp
call
mov
mov
push
call
cmpl
je
movl
jmp
movl
mov
jmp
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
lea
push
call
add
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
jmp
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
push
push
push
mov
push
call
call
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
mov
push
call
mov
push
push
push
lea
push
call
test
je
lea
push
mov
push
mov
push
call
test
jne
lea
push
call
lea
push
call
jmp
mov
jmp
jmp
jmp
jmp
mov
pop
ret
push
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
push
push
call
mov
push
mov
push
mov
push
mov
xor
mov
push
push
mov
push
mov
push
call
push
push
push
push
push
push
mov
push
call
mov
cmpl
je
movl
movl
or
cmpsl
mov
int
insb
in
xorb
outsl
movsb
and
xchg
mov
and
shr
jbe
inc
or
shrb
xchg
and
ror
inc
insb
movsb
and
ror
jbe
movsb
and
shr
jbe
inc
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
and
ror
jbe
movsb
popf
adc
cld
subb
mov
je
int
insb
movsb
push
inc
cmp
lods
xchg
mov
add
inc
loope
in
std
adc
shll
mov
jo
cmc
and
lcall
push
lcall
sti
mov
out
fs
add
ret
mov
test
cmp
adc
je
mov
ljmp
adc
mov
xor
pop
or
test
shll
decb
test
mov
add
das
lods
jb
mov
mov
outsl
pop
xchg
dec
adc
ss
lock
dec
add
mov
mov
dec
stc
adc
mov
xchg
adc
or
push
xchg
mov
outsb
push
and
jae
push
mov
data16
or
fwait
aam
inc
mov
mov
xchg
mov
sbb
aaa
xlat
aad
xor
mov
mov
in
sbb
loop
xlat
testb
int3
cli
scas
fisttps
fwait
mov
push
orb
ret
adcl
push
mov
iret
jmp
andb
ja
jp
xchg
subl
xor
push
fidivs
scas
jae
or
inc
dec
pop
std
fimull
mov
inc
loopew
xchg
inc
orb
sbb
xor
mov
or
cmpsb
xchg
jge
or
mov
aas
xchg
push
xchg
mov
pop
and
test
int3
cmp
xchg
or
or
rolb
popa
jnp
repnz
popf
gs
lea
dec
and
mov
es
mov
xor
sub
mov
mov
jmp
inc
dec
mov
ret
push
clc
xchg
leave
dec
cmp
jnp
and
push
ds
xor
mov
jge
mov
fsubs
or
daa
mov
push
insb
push
cmp
jbe
fisubs
scas
push
sti
add
int3
adc
jno
repnz
ds
jle
scas
pop
add
push
jne
add
jg
jns
roll
cmp
cmp
push
xchg
pop
xor
xchg
fsubrl
xchg
js
jbe
and
jp
xchg
ja
loopne
add
fmull
dec
xchg
jnp
clc
adc
jp
in
push
sarl
daa
inc
aam
and
cmpl
mov
xchg
xchg
je
imulb
adc
cld
in
in
push
add
jecxz
ret
pushf
test
add
pop
xor
sbbb
jno
shrl
push
or
daa
mov
lds
in
dec
clc
xchg
in
xor
push
pushf
sub
push
mov
jecxz
loope
cmp
shlb
xlat
test
popa
loope
jg
jnp
adc
out
pusha
lds
loop
fnstcw
mov
cltd
out
xlat
jle
jg
les
add
fdivr
addr16
das
cltd
and
arpl
mov
into
repz
data16
aam
push
mull
jp
xchg
lahf
sbb
int3
add
iret
shrb
fsubrs
cmp
popa
jns
insl
fisubrs
mov
addr16
xchg
mov
inc
sbb
leave
js
out
sub
and
das
jle
lcall
popl
repnz
fwait
add
jbe
imul
adc
aaa
jg
jae
std
mov
mov
mov
jno
or
in
jmp
fnstsw
jnp
mov
hlt
adc
jg,pt
xchg
int
sbb
xchg
pusha
jnp
jnp
mov
scas
cmpsb
fcoms
lret
push
sahf
and
xchg
icebp
jp
xor
pusha
addl
push
mov
xchg
in
ds
jp
mov
inc
xchg
xchg
cmp
inc
inc
shrl
xor
lock
repnz
bound
xchg
je
add
xor
inc
das
shrb
sbb
sub
fistpl
lods
repz
sti
je
sub
xor
xchg
push
cmp
and
inc
sub
sbb
pusha
std
push
lahf
cmp
pop
std
xor
scas
dec
mov
or
mov
pop
subb
or
sub
daa
jl
test
xor
rcrl
cmpb
inc
sub
jle
stos
xchg
repnz
add
add
outsl
mov
sarb
imul
mov
ret
jmp
add
or
dec
sbb
and
sar
xchg
fs
lock
jb
out
lahf
into
sub
movsb
in
push
xchg
push
lods
fldl
addr16
mov
jno
dec
jno
adc
loop
in
push
sti
sarl
pop
or
add
xchg
ja
scas
repnz
out
lret
jo
cmpsl
imul
in
ficomps
mov
xchg
inc
sbb
xchg
mov
stos
leave
xlat
iret
xchg
call
clc
outsb
mov
sahf
push
jae
decl
test
out
sbb
lods
les
std
sbb
push
add
or
pop
and
mov
xor
xchg
jne
dec
add
sub
in
push
stc
mov
rorb
leave
dec
mov
dec
outsb
and
and
mov
in
xor
std
push
sbb
sbb
sbb
test
xor
aas
xchg
mov
cmp
sbb
stos
lods
and
jo
inc
gs
shll
mov
jmp
lea
test
add
cmpb
adc
in
dec
mov
test
mov
cmpsl
or
xchg
mov
movsl
in
std
icebp
popf
cltd
jl
or
fdivrp
sahf
pop
dec
dec
fmull
push
shrl
xchg
cs
xor
cmpsl
dec
mov
dec
shll
pusha
ret
in
loop
cmp
mov
dec
jo
sti
xchg
mov
jp
in
cmp
lods
fdivr
icebp
cmpsb
sbb
iret
paddusw
test
and
mov
jge
stos
pop
test
push
or
subb
fsubr
orb
cld
mov
jg
sarl
mov
jge
movsb
jne
nop
add
fwait
das
call
cmp
js
fdivrs
push
stos
ret
fisubrl
or
push
jle
xlat
jge
aam
inc
pop
lock
and
inc
or
mov
xor
mov
dec
cmp
decb
xchg
nop
sub
fisttps
dec
addr16
jle
test
mov
insb
inc
pop
insb
dec
lods
dec
mov
sbb
xchg
push
pop
pop
test
je
pushf
mov
nop
pop
pop
movsb
lcall
xchg
popf
or
cmp
xchg
hlt
cli
push
dec
call
pop
xchg
bound
pusha
xchg
cs
cltd
out
out
push
pop
push
insl
add
pop
push
addr16
adc
jl
out
pop
add
mov
ds
sbb
out
dec
mov
fisttpl
mov
push
cwtl
test
jg
jg
in
push
push
ret
hlt
mov
cld
pop
lds
xchg
pop
add
mov
loopne
stos
mov
mov
cmpl
gs
in
nop
mov
sub
roll
mov
dec
psllw
mov
pop
or
fcmovb
add
lock
loopne
push
sbbl
pop
stc
sbb
imul
jbe
pop
mov
fstpt
popf
ljmp
xchg
mov
shr
cmp
sub
jno
mov
xor
mov
add
push
movsl
and
mov
push
cld
pop
xor
inc
push
jbe
xchg
shrb
mov
loope
add
and
xchg
shlb
fldcw
loopne
sti
stc
xchg
nop
xlat
divps
mov
adc
repnz
pop
jle
jo
mov
push
add
icebp
popf
mov
sbb
into
sub
stc
sub
loope
into
inc
loopne
lods
add
ret
movsl
adc
mov
xchg
in
push
lea
iret
rcll
inc
inc
les
hlt
out
daa
out
and
sbb
cmp
xor
dec
cmp
fisttps
pushl
lods
aas
pop
cwtl
ja
arpl
push
inc
mov
adc
xchg
xor
loop
in
daa
fs
ja
sub
and
test
lahf
sarb
sub
imul
xchg
fstpl
sub
mov
or
mov
cmp
cmpsl
jb
push
or
push
mov
sbb
push
push
or
add
push
push
jl
xchg
test
mov
sub
lods
push
dec
xchg
loopne
dec
pop
sbb
and
jae
push
mov
dec
mov
cmp
and
add
cmpsl
aad
sahf
loope
sub
mov
lret
int3
stc
addr16
scas
pop
andl
push
ja
aaa
cld
ret
je
and
dec
sub
mov
add
outsl
jl
jg
lret
scas
das
pusha
pusha
adc
sarb
mov
cmp
adc
leave
mov
sbb
decb
mov
lret
dec
in
push
push
mov
or
arpl
xchg
loope
mov
scas
insb
mov
fidivrs
js
jmp
fiaddl
out
hlt
int3
into
and
or
or
jmp
adc
insl
les
jl
mov
pop
fadds
jp
push
adc
pop
movsb
mov
sbb
nop
stc
orps
mov
fwait
cmp
xchg
inc
adc
std
cmp
xchg
push
stos
addl
mov
sahf
lahf
pcmpgtd
jo
les
sub
aas
jmp
jmp
das
cli
lock
pop
cmp
in
cs
and
mov
xor
aaa
cmove
cmpsl
or
fmulp
push
inc
loopne
mov
or
jmp
icebp
pop
test
stos
dec
and
push
insl
sub
imul
pop
jg
or
jl
xchg
mov
sahf
ja
xor
dec
repnz
sbb
push
cld
gs
xor
enter
andl
pop
out
in
rorl
jmp
jae
test
push
sti
jns
sub
pop
mov
mov
shlb
popa
mov
cmp
icebp
leave
pop
popf
sub
inc
cld
shrb
fdivrs
and
add
mov
mov
jge
push
adc
sti
or
xchg
mov
mov
and
push
mov
ret
pop
and
jo
jecxz
lret
rolb
stc
inc
sbb
lea
dec
repnz
jne
inc
dec
in
mov
aam
sub
mov
and
ret
arpl
cmc
sbb
sbb
push
dec
int
mov
rclb
and
repnz
lds
mov
bound
lods
insl
sub
in
or
sbb
dec
cmp
enter
xor
inc
test
mov
mov
in
push
mov
cmp
cltd
adc
jecxz
and
cmp
xor
xchg
rorb
and
mov
and
mov
mov
mov
xchg
popf
es
and
fbstp
repz
scas
sbb
push
add
repnz
mov
rcl
sub
imul
aad
mov
mov
sbb
push
mov
inc
mov
test
std
jge
stos
jge
dec
insb
out
inc
pop
xchg
add
nop
lret
xlat
das
cmp
jnp
dec
mov
pop
cmp
test
push
popa
cltd
rcrb
sbb
pop
fbld
lea
ljmp
rcrb
sbb
lahf
lret
je
xor
jb
mov
fidivs
mov
popf
mov
arpl
push
dec
dec
out
insl
movb
add
dec
imul
cmpsb
xor
cmp
ljmp
popa
out
dec
lea
sbb
mov
xchg
adc
outsl
int
pop
jmp
and
mov
pop
mov
mov
aas
cld
xchg
dec
mov
ss
not
mov
jmp
aam
adc
les
aam
mov
negl
inc
in
clc
stos
mov
add
push
push
in
jecxz
jo
inc
xor
aad
fisttps
dec
push
lahf
lret
pushf
xor
aaa
pop
sbb
sub
add
mov
lea
xlat
dec
out
xor
pop
sbb
pop
adc
mov
sbb
test
fwait
aaa
cltd
lock
cmpsb
lods
scas
rcrl
insb
xchg
out
daa
pinsrw
lods
push
mov
add
pop
cmp
sbb
inc
pop
push
aaa
adc
or
clc
loope
repnz
pop
adc
push
sarb
mov
js
mov
sub
mov
stos
or
cmp
rclb
mov
mov
xchg
jo
loop
xor
inc
dec
in
mov
or
je
jge
push
push
lcall
stc
xchg
sub
xor
sbb
xor
outsb
scas
test
inc
xlat
aam
nop
leave
mov
mov
inc
dec
cmp
mov
notl
push
xor
cmp
pop
clc
push
sub
test
adcb
testl
sbb
clc
jno
sar
sbb
ja
repz
pop
lea
or
leave
xor
lret
popf
stos
fmul
dec
cmp
lock
frstor
mov
dec
fsts
and
orb
push
mov
lret
stos
push
and
cmp
push
ficoml
mull
sbb
pop
push
out
sbb
movsl
mov
cmpsb
int
in
test
mov
or
jg
sbb
dec
outsl
dec
lret
out
iret
fxch
fdivrl
sub
clc
ds
xor
out
fistpl
into
ret
jbe
pop
js
adc
pushf
daa
mov
jbe
ret
test
out
dec
dec
dec
sbb
dec
cli
jg
mov
je
cmpsb
dec
jmp
fisubs
inc
xchg
arpl
das
cmp
sbb
cmp
xsaves
pop
push
loop
mov
clc
enter
movsb
cmp
cmp
addr16
mov
in
adc
ss
jne
lret
jmp
stos
xchg
add
movsb
stos
pop
repnz
and
cmp
adc
popa
inc
gs
xor
add
cmp
std
cwtl
jb
inc
repnz
pop
ficoms
filds
add
and
push
push
and
mov
cld
sbb
pop
sti
cwtl
inc
test
sbbb
fildl
lret
popf
push
mov
inc
fucomip
mov
add
or
data16
jae
mov
popa
arpl
rcrb
out
sub
aam
test
mov
jno
incl
ljmp
mov
add
pop
imul
add
lods
mov
push
pusha
inc
dec
out
fwait
sub
xor
call
shrl
pop
fsubrs
rorl
and
push
repz
nop
cltd
popf
jae
fdiv
jnp
lret
and
mov
les
sub
out
or
push
jle
mov
inc
ljmp
xchg
and
sbb
sar
std
mov
jle
and
jbe
idivl
mov
test
inc
ret
aad
adc
int3
xchg
fiaddl
sbb
int
insb
dec
xor
jae
xchg
or
sahf
jge
aas
inc
inc
xchg
or
lea
sbb
and
lock
aad
scas
ret
pop
fs
fcmovnbe
insl
xchg
xchg
fistpll
inc
sbbb
cld
in
or
sbb
jmp
pop
sub
ds
shlb
std
xchg
jle
js
and
stos
xor
lcall
sbbl
ljmp
fwait
pop
mov
add
lds
popa
pusha
xchg
sarl
cltd
stos
ret
push
mov
subb
push
pop
adc
mov
mov
lret
lcall
leave
add
sbb
fcoml
add
es
ss
xor
decb
mov
dec
mov
or
push
sbb
pop
je
pop
sti
xor
mov
lea
rolb
loopne
inc
cmp
dec
sti
popf
clc
es
cmpsl
mov
lods
std
ret
cmc
mov
test
push
idiv
pcmpgtw
dec
popa
shlb
and
sub
dec
cmp
jge
in
ds
loop
addr16
xchg
ret
in
lock
jle
jg
loope
sub
mov
push
filds
stos
arpl
call
std
push
dec
and
jg
in
sub
mov
jmp
ljmp
cmpsl
paddq
outsl
inc
jae
adc
jp
out
das
or
or
mov
in
push
into
mov
jmp
pushf
mov
push
es
sbb
ret
add
test
sbb
aas
aaa
pop
mov
jecxz
sub
cld
fbld
or
jno
lods
into
sti
push
push
cltd
imulb
les
xchg
inc
push
test
sub
in
pop
add
sarl
icebp
or
adc
and
jns
jbe
popf
repnz
mov
jno
xchg
outsl
test
push
pop
mov
insl
sbb
jb
mov
shll
sbbb
mov
std
test
jno
stos
jg
push
scas
sub
xchg
adc
in
loopne
mov
inc
adc
addl
pop
jo
lret
std
jns
xchg
das
enter
push
in
loope
mov
dec
dec
pop
aam
shll
sub
movsb
iret
xchg
push
xchg
flds
dec
xlat
pop
jae
xchg
inc
dec
sub
dec
cmc
mov
mov
dec
mov
aad
dec
loop
xchg
mov
sbb
inc
jne
ss
aas
arpl
js
fnstenv
mov
sub
cltd
push
xchg
in
in
mov
or
sbb
mov
mov
jo
mov
repnz
mov
jg
sahf
push
cmp
sub
mov
push
jb
mov
cld
test
xor
cmc
movsl
rcll
fwait
hlt
sti
pop
jb
xchg
adc
adc
jge
js
xrstor
and
pop
sbb
pop
insl
loope
mov
jne
out
insb
push
push
lock
pop
fildl
subl
rcrl
jp
and
rorl
cmpsw
loopne
or
pop
je
dec
jnp
lret
call
adc
push
dec
pop
push
push
xchg
or
dec
cmp
push
sub
cmpsb
push
mov
mov
dec
ja
lods
jmp
mov
dec
mov
pand
sbb
cmpsb
xchg
and
sarb
push
sbb
mov
xor
mov
dec
mov
xchg
mov
push
nop
sbb
xor
pop
loop
inc
fnstenv
in
push
xchg
cmp
int3
pop
push
jecxz
xchg
jae
or
je
adc
das
das
xor
mov
fstps
test
dec
arpl
mov
je
movsb
mov
movb
push
loope
xlat
stos
jg
es
adc
arpl
loope
outsb
push
incb
adc
and
jp
dec
stos
sahf
mov
xchg
arpl
bound
xor
adc
and
les
dec
cmpsb
leave
push
add
jmp
dec
cmpsl
jnp
dec
xchg
sbb
int
push
fstl
mov
jp
inc
mov
data16
rcrb
call
daa
jl
mov
jb
mov
stc
jno
les
push
mov
loope
sahf
pop
sbb
loop
cs
sti
push
dec
jecxz
scas
adc
sbb
call
add
lahf
inc
dec
pop
clc
aaa
fsubrs
pop
or
ret
inc
push
in
add
push
add
dec
mov
stos
jo
mov
ret
notb
out
adc
pushf
pusha
mov
mov
lcall
push
dec
es
sarb
sbbb
lods
inc
pop
xchg
cmp
pushf
mov
scas
ja
sub
adc
pop
push
ret
sbb
test
lret
jg
jecxz
sub
xchg
or
inc
shll
shlb
ljmp
movsb
jns
lods
mov
jne
imul
ret
or
dec
mov
lds
or
jmp
lods
xor
xor
inc
insl
stos
and
cmp
das
jno
repz
xchg
cwtl
inc
test
shlb
imul
xor
adc
push
cmc
idivb
fldenv
or
lea
mov
jae
and
or
ljmp
imul
icebp
popf
outsb
pushaw
or
addr16
pop
sarl
add
xchg
sbb
push
sbb
shl
pushf
popf
and
aaa
mov
lcall
in
inc
add
push
outsb
xor
add
mov
pop
or
mov
push
aam
xor
insb
cmp
jl
jbe
fs
mov
out
pop
fdivrl
inc
cmpsb
call
movsb
add
lret
mov
sbb
and
mov
lret
imul
sbb
adc
lods
shll
jle
sub
pop
sti
mov
mov
icebp
gs
push
sbb
inc
aad
test
xchg
add
or
fmull
rcr
mov
xor
pop
cmp
or
cmpsl
stos
inc
pop
pusha
jae,pn
divb
fdivrl
iret
in
adc
call
stos
pop
xlat
jmp
push
fildll
mov
jp
mov
mov
sub
imul
adc
push
xor
xor
jmp
cmp
test
fisubrl
std
push
or
clc
or
shr
into
jbe
push
outsl
out
jb
orl
sahf
add
and
add
or
and
popf
in
xor
mov
mov
dec
mov
movups
xchg
inc
js
mov
imul
sub
adc
jns
in
mov
pop
mov
mov
enter
pop
shrl
jge
leave
pushf
inc
outsl
push
jge
inc
sub
testb
sahf
push
gs
adcl
cwtl
test
daa
shll
addr16
hlt
xchg
jecxz
inc
or
popa
sub
in
xor
pushf
jecxz
adc
rcll
mov
cmp
inc
xlat
and
sbb
sbb
sub
test
shl
dec
inc
aaa
mov
lods
sbb
or
ss
inc
insb
les
push
or
imul
roll
and
and
cld
sub
xchg
fwait
ds
gs
xor
cmpsb
pop
xor
cmp
mov
jl
cmpsl
cmpl
jecxz
cmp
shll
xor
mov
sbb
mov
mov
ret
xchg
jl
ficoms
addl
fimull
inc
rcrl
mov
xor
out
pop
pusha
je
dec
mov
xchg
ljmp
fistps
jb
into
xor
jl
sbb
sbb
addr16
sti
stos
into
into
xor
aam
ljmp
bound
cld
xlat
pop
repz
fisttps
gs
sbb
xchg
jmp
jbe
adc
push
test
jmp
mov
jo
cs
jmp
fisttpll
mov
aad
shlb
jb
pop
jle
mov
ret
cmp
cmpsb
cmp
pop
push
idivb
jp
inc
or
rcrl
ret
loope
mov
out
jne
jmp
mov
out
incb
lret
ljmp
jae
lods
loopne
cmpsl
sbb
xchg
mov
mov
loop
fadds
adc
dec
adc
jb
cmp
mov
loopne
dec
dec
ljmp
lahf
xorb
mov
and
stos
mov
pushf
add
sbb
loopne
test
sub
pop
in
mov
dec
idivb
dec
in
inc
pop
jg
ficompl
mov
popf
and
jb
or
rcll
inc
add
jmp
stc
sbb
leave
adc
sub
repnz
jno
mov
pusha
in
in
xchg
sub
stc
mov
push
int3
mov
inc
fucomip
adc
loope
mov
adc
cmc
push
push
mov
je
pop
mov
mov
adc
mov
testb
add
sbb
sub
scas
lret
stos
adc
jo
jp
nop
inc
loop
in
stc
lret
pop
jmp
xor
loope
and
pusha
cmpsl
xchg
push
int
bound
lahf
negl
sub
pusha
das
das
xchg
ljmp
push
xor
std
fisubl
or
scas
cmp
in
xor
lods
mov
jg
sarl
cmp
arpl
fstpl
cltd
inc
mov
aam
push
ret
inc
mov
cmp
lods
sbb
fsubr
or
sbb
mov
cmp
outsb
jecxz
insl
out
test
push
or
pop
fcomps
bound
mov
jmp
and
jno
movsl
repz
enter
rorb
and
movsl
lock
push
jecxz
lahf
adc
fxch
rcrl
dec
add
incl
xchg
mov
pop
cmp
imul
dec
cmpb
or
cmp
sub
lcall
or
cmp
sub
dec
mov
xor
stc
test
xchg
mov
test
rcr
out
pop
fmuls
xchg
out
mov
orl
dec
shl
loop
idiv
scas
push
aaa
mov
fcmovb
or
and
imul
fldcw
jle
aas
out
jb
dec
sbb
sahf
adc
fdivrp
test
cmpsl
outsb
lods
cmp
lret
inc
std
scas
lock
sbb
je
cmpsl
xchg
fistps
outsb
stos
sti
push
imul
inc
adcl
cltd
mov
clc
shlb
sbb
pop
inc
scas
aaa
xor
ds
shll
mov
jnp
in
jo
xchg
rol
pop
fdivl
adc
xor
out
fmuls
lods
jecxz
movntps
lcall
loopne
mov
ja
sbb
push
dec
mov
ss
inc
aad
push
jnp
bt
sub
imull
in
sub
scas
ret
add
fdivl
leave
dec
mov
sbb
push
push
aas
fcompl
addb
test
push
sbb
iret
or
add
jl
dec
or
cld
adc
jmp
pop
shr
xchg
pusha
cwtl
pop
mov
pop
nop
sub
cmp
neg
loope
sti
test
mov
cmpsl
in
inc
mov
cmp
lahf
cmpsl
cltd
sub
dec
or
mov
adc
cwtl
sub
xchg
pusha
sbb
mov
mov
test
mov
es
popf
mov
int3
xor
xlat
lcall
mov
lds
cmpsl
or
mov
adc
push
mov
aad
dec
push
xor
jns
daa
push
jge
xchg
mov
jo
mov
addb
shl
cli
mov
mov
mov
loopne
sbb
fldl
xor
or
test
xchg
pop
and
mov
insb
sub
bound
sub
mov
xor
jl
out
dec
cmp
inc
pop
adc
sbb
mov
mov
pop
ret
ficomps
cmpsl
sbb
iret
mov
lock
call
out
es
xor
fldenv
lock
cmpsb
push
fwait
lods
inc
mov
cmp
test
out
in
mov
lock
adc
outsl
jmp
pop
outsb
push
inc
xor
xchg
je
out
and
mov
sub
push
popf
cld
repz
adc
out
mov
movsb
ds
adc
push
test
test
push
add
ret
ret
es
adc
xchg
popa
pop
pop
or
cli
or
cmp
mov
inc
inc
lcall
lods
mov
push
mov
sub
int3
pop
jne
lods
adc
out
js
mov
adc
mov
in
and
je
jg
mov
pop
mov
outsl
ja
dec
imul
dec
popf
popa
aad
mov
mov
adc
inc
fnstcw
mov
xchg
xchg
inc
in
negl
sub
add
jne
loop
push
jns
mov
sbb
mov
mov
xor
inc
pop
cmpsl
jno
push
sbb
jl
mov
xlat
outsb
xchg
into
xchg
sahf
cmp
loope
mov
and
mov
imul
mov
sbb
xchg
lea
sbb
fs
xchg
rcl
insl
jecxz
data16
arpl
rcll
ret
loope
imul
repnz
xor
je
pop
je
shll
std
mov
mov
xor
and
and
test
and
pop
push
mov
push
mov
bound
inc
cltd
jmp
mov
push
sahf
leave
fsubl
mov
adc
xor
movsb
outsb
fiaddl
push
dec
sub
xchg
xor
cmpb
loope
push
data16
imul
mov
cmp
mov
sbb
repz
xchg
loopne
ljmp
cmp
sbb
cmp
cld
cwtl
jp
dec
fistl
push
sarb
aad
push
cwtl
scas
jbe
mov
jo
pop
lea
sub
clc
jl
pop
dec
push
pop
ret
push
mov
dec
ss
loope
rcr
iret
cmovne
fisubl
ss
int
push
std
cmc
jb
lds
add
jae
mov
loopne
dec
push
mov
jecxz
pop
jns
or
dec
mov
and
fistpl
sub
adc
mov
fidivrs
jle
inc
xor
pusha
inc
pushf
jae
cmp
leave
cli
notb
inc
push
shll
dec
mov
test
pop
rorl
fadds
test
pop
pop
sbb
das
adc
dec
sarl
rclb
pop
fldl2t
int
cmc
clc
inc
dec
inc
or
mov
xchg
mov
negl
adc
pop
shll
adc
insl
sbb
incl
mov
mov
mov
hlt
mov
or
adc
and
dec
incb
notl
jne
or
insl
jg
inc
loop
lcall
cmp
mov
sarl
xor
imul
fs
pop
addr16
mov
test
pop
push
and
sub
xchg
jmp
stc
sti
loope
mov
push
mov
add
test
insb
adc
pop
sbb
or
push
loope
inc
loopne
mov
jne
dec
loop
inc
dec
andb
repz
orb
out
sub
jae
lods
aaa
daa
jb
sub
popa
nop
jmp
arpl
cmc
mov
cs
jg
ljmp
adcb
subl
sub
inc
imull
sub
mov
jmp
jecxz
mov
test
mov
fs
pop
mov
pushl
popa
jno
out
xchg
add
or
push
lahf
mov
xchg
out
clc
incl
sbb
or
cld
mov
int3
sbb
dec
out
scas
mov
add
xchg
mov
addr16
jg
pop
sar
add
or
add
add
pusha
xor
xor
add
xchg
push
fdivrl
notl
xchg
in
and
mull
stc
jle
incb
and
jb
cmpsl
inc
xlat
or
jnp
xchg
shlb
inc
fwait
xchg
jnp
dec
aam
fcmovnu
or
push
push
pusha
mov
and
pop
ljmp
jle
and
add
jb
push
sub
mov
mov
xchg
pop
xchg
addr16
push
test
xchg
enter
add
jmp
xor
cmpsl
sahf
aas
pop
xchg
jle
push
xor
inc
pop
xchg
sub
adc
pusha
fldt
sti
aam
or
js
xchg
cld
dec
sub
add
call
adc
in
mov
sbb
lds
xor
lods
in
aas
les
in
aaa
xor
ljmp
push
into
lea
push
jg
or
and
adc
aas
cmpsb
pop
aad
mov
inc
or
mov
fsts
inc
test
or
mov
lods
jmp
mov
mov
sarb
lret
sbb
ja
imul
or
inc
call
int
aas
mov
out
or
ljmp
cwtl
inc
fisubs
xor
data16
idivb
adc
xchg
pop
movzbl
in
xchg
and
or
sub
push
outsb
pop
cmp
imul
xor
shrb
xor
pxor
insb
jge
dec
test
fucomi
fcomps
or
xor
mov
shlb
inc
pop
xchg
outsl
jb
lea
inc
roll
dec
enter
lret
int
inc
dec
cmp
xchg
movsl
push
sub
pop
dec
loopne
inc
push
xchg
cmpsl
adc
loope
outsl
shll
mov
jb
add
jae
sub
jns
negb
add
inc
add
fwait
mov
rclb
lds
inc
and
mov
lret
mov
pop
adc
or
cltd
xchg
lahf
arpl
sbb
cmc
mov
lea
std
mov
int3
push
xor
sbb
mov
lcall
fwait
and
or
cs
xchg
scas
insl
std
pop
mov
imul
cmp
shl
rolb
aaa
test
mov
push
pushf
mov
mov
cmpb
bound
testl
shll
jnp
jle
out
out
add
aad
fbstp
pushf
and
pop
jmp
js
pop
mov
mov
out
or
pop
clc
lea
test
mov
idivb
xor
xchg
jne
pop
lock
loope
pop
sbb
call
loope
lcall
int
xchg
xchg
movsb
sbb
loopne
filds
imul
imul
lds
jle
ss
rcrl
xchg
mov
std
and
xor
and
push
popa
sub
clc
pop
cmp
and
mov
push
notb
leave
push
fdiv
sub
fnstsw
add
int
pusha
jne
movsb
pop
xchg
or
outsb
cmp
pop
mov
pop
pop
or
mov
out
xchg
outsl
shrb
roll
test
mov
and
jg
inc
clc
in
rcrl
lods
dec
jno
mov
cs
lock
and
mov
lea
pop
clc
cmp
outsb
in
and
mov
jge
insb
rcl
shr
inc
sub
jo
cwtl
popf
fnstenv
shrl
gs
sub
sub
test
imull
lea
aam
pop
ljmp
movsl
in
pop
add
jp
mov
and
jno
pop
aam
inc
xlat
aam
mov
cmpsl
inc
xchg
fsubs
pop
inc
data16
push
ret
or
gs
call
jbe
push
pop
fldt
mov
idiv
ret
jl
in
mull
and
les
push
les
add
rorb
pushl
int
xchg
pop
pop
xor
adc
cmpsl
rcrb
test
xor
mov
adc
adcl
aam
push
aam
mov
je
or
pushf
ret
cmc
lods
pop
das
outsb
add
insl
int
jecxz
add
jg
xchg
popf
mov
mov
xorb
and
jmp
stc
push
lock
xlat
push
jno
mov
inc
sbb
inc
pop
adc
pavgb
loop
test
pop
mov
sub
add
movsl
adc
jle
push
shl
rcrb
int
leave
jnp
insl
xchg
fsub
mov
and
aas
cmp
icebp
jecxz
test
mov
mov
cmc
and
shll
scas
jl
xchg
stc
adc
inc
daa
lahf
movsb
cvtdq2ps
push
mov
cwtl
repz
incl
test
sub
mov
adcl
adc
inc
addr16
outsl
mov
test
insl
sub
jae
push
int3
sub
jp
cmpsl
sbb
dec
out
and
and
mov
fldcw
add
popa
and
push
mov
movsb
xor
roll
rcll
sub
add
adc
mov
cltd
mov
scas
outsb
pop
loope
dec
sahf
xor
add
inc
mov
in
leave
or
je
stos
or
jmp
aad
push
and
xchg
ror
into
add
inc
dec
movsb
sbb
push
shlb
pop
mov
jmp
dec
out
lods
mov
mov
sub
int
js
mul
mov
adc
pop
fcoms
ret
mov
cmp
or
cmp
sub
int
add
adc
push
add
pop
fdivrl
sbb
pop
jg
push
xchg
fs
in
mov
ret
lods
lds
pop
test
ja
lret
xchg
scas
cmc
dec
or
push
test
mov
push
jbe
cmc
inc
adc
fwait
aad
pop
sub
add
mov
push
mov
idivb
pop
popf
xchg
push
jnp
negb
ds
gs
pusha
icebp
mov
push
push
lds
sub
push
sbb
and
pop
jp
nop
dec
jno
jmp
mov
repz
dec
ja
mov
pop
jge
xchg
sbb
rcll
out
push
or
xor
mov
cmp
lods
mov
sahf
cltd
fldt
cmpsl
insb
cmpsl
pop
pushf
or
jmp
pop
jne
pushf
and
imul
adc
push
sbb
jnp
outsb
sbb
jns
call
xchg
sbb
mov
daa
sbb
aam
and
xor
push
adcb
xchg
andb
mov
mov
jmp
out
daa
jb
xchg
push
mov
out
fwait
jg
mov
aam
inc
mov
mov
pop
mov
test
sub
jg
test
sub
bnd
shrl
addr16
push
fildll
and
mov
adc
loop
jecxz
adc
frstor
repz
jmp
adc
push
inc
adc
imul
pop
cmpsb
out
sbb
push
or
lock
mov
sbb
in
jno
fisubrs
xchg
and
in
and
testb
cmp
mov
fistpll
fstl
inc
in
cmp
mov
aas
fisttps
xchg
incl
outsb
jb
pop
lret
or
ror
jbe
insb
sbb
xor
cmpsl
in
push
dec
repz
idivb
test
dec
cmp
insl
lcall
scas
cmpsl
xor
aam
push
sbb
repnz
insb
sbb
mov
sahf
loope
shll
dec
nop
out
popa
test
inc
jbe
into
mov
outsl
pop
xchg
clc
ss
ljmp
dec
aaa
mov
fwait
adc
ds
rcrb
push
repnz
jle
push
ficompl
lods
aad
in
xchg
ds
les
push
adc
jb
es
xchg
cmc
into
sarl
jg
leave
imul
rorb
adc
addl
cmpsw
xchg
call
and
in
mov
pop
and
xor
lods
rol
cmp
pop
xchg
scas
mov
dec
sub
adcb
js
xchg
sahf
xchg
andb
jo
fldcw
insb
test
aam
mov
sub
mov
mov
sub
outsl
mov
push
cs
push
sub
adc
xchg
aas
pop
cwtl
cmc
mov
pop
xor
mov
mov
dec
lret
mov
in
pop
mov
mov
dec
rolb
cvtps2pd
fldt
imul
lods
jp
inc
push
xchg
mov
repz
add
add
push
ret
mov
push
sub
adc
adc
imull
aas
mov
enter
inc
jns
movsl
cmp
addr16
scas
mov
mov
fstps
sub
out
dec
xchg
sub
popf
pop
lahf
scas
xor
push
stos
gs
out
loope
push
inc
sahf
js
es
jle
cld
add
mov
and
or
mov
lods
sub
call
stc
out
fwait
test
cmp
xchg
out
das
adc
mov
mov
dec
mov
clc
fwait
add
xor
dec
or
mov
inc
pop
mov
dec
xor
jno
inc
scas
mov
js
daa
mov
cmp
out
test
rclb
cmpsl
iret
iret
in
mov
or
ret
dec
stc
xlat
sub
bound
mov
dec
inc
roll
xor
or
jns
push
push
and
push
pop
imul
jecxz
std
xor
push
in
mov
loope
push
in
ja
fisubrs
mov
sbb
xchg
sbb
fs
and
add
adc
xor
inc
rcl
push
icebp
and
push
mov
stos
lods
jbe
push
scas
movsb
mov
shlb
in
cmpsl
leave
addl
and
add
cmpsw
lcall
les
andb
adc
inc
clc
stc
int
dec
mov
lahf
or
sub
ljmp
subl
adc
ljmp
mov
xchg
or
sarl
outsl
cmp
and
dec
rcr
popf
adc
xchg
in
sbbb
jnp
cmp
je
test
das
das
ret
or
xchg
dec
movsb
mov
add
pop
mov
dec
mov
call
adcb
xchg
cmc
sbb
es
cmc
jle
or
subb
or
fisttpl
push
mov
add
out
or
push
nop
mov
sub
pop
xor
mov
xchg
sub
lds
sbb
and
push
cmpsl
jae
fstl
add
aam
mov
jno
jecxz
push
mov
mov
daa
loope
add
fwait
or
movsb
int
push
outsl
in
mov
xchg
push
mov
or
movsb
and
les
shll
pop
or
mov
xchg
pop
leave
xor
jne
mov
or
into
std
mov
mov
push
xor
add
mov
push
add
lret
mov
sbb
mov
inc
and
push
sbb
cwtl
adc
push
aad
push
rorb
add
sub
dec
pop
jmp
sub
daa
jle
fwait
pop
lods
popa
lret
roll
mov
pop
jge
enter
or
inc
sbb
in
adc
shrl
loop
jp
scas
outsl
mov
add
cltd
lods
and
cli
pop
and
push
es
clc
inc
jp
daa
lret
testb
dec
fidivrl
gs
test
and
xchg
mov
int3
dec
stc
cwtl
pusha
lret
std
lea
dec
jmp
aam
rclb
mov
pop
mov
push
push
inc
jl
xor
dec
leave
shr
cmp
add
leave
jbe
jle
in
in
ljmp
mov
xchg
sbb
mov
jne
inc
xchg
js
and
insb
popa
aas
and
xchg
mov
xchg
jb
nop
pop
push
fnstcw
ja
std
xchg
dec
cmpsb
clc
dec
in
inc
pop
dec
repnz
sahf
sub
out
sub
push
jbe
xor
mov
aaa
insb
into
testl
cli
sub
inc
je
cmpsb
mov
scas
repz
jge
jno
mulb
jmp
shrl
or
lods
lahf
xchg
divb
les
mov
sbb
mov
hlt
sbb
jmp
inc
jle
scas
mov
cmc
sub
mov
xor
jmp
mov
pop
aas
inc
add
mov
aaa
scas
mov
jle
mov
fwait
lahf
cwtl
data16
psubd
fbld
and
test
mov
imul
mov
bound
push
ss
xor
cmp
mov
cmp
jl
test
xchg
pop
gs
pop
imulb
mov
pop
ret
cli
lock
cmpsb
pop
sub
out
test
mov
xchg
ljmp
outsl
lret
sub
imul
cmp
popa
cmp
push
lds
inc
daa
shlb
xor
mov
adc
adc
dec
shrl
jnp
bound
pop
fsubrp
sbb
mov
xor
dec
jg
mov
lea
lods
and
addl
xchg
notl
mov
xchg
dec
jno
fs
push
in
adc
ret
lret
jle
push
ret
test
testl
push
xchg
or
and
pop
fimuls
cs
add
xchg
cmp
cmp
mov
xchg
out
sub
sahf
mov
pusha
mov
stos
mov
sub
jmp
movsb
fisttpll
test
test
ret
sub
xchg
adc
jns
xchg
loopne
mov
bnd
sbb
xlat
fiadds
xlat
mov
push
add
outsl
lahf
fistl
and
push
add
lahf
cmp
or
imul
cmpsb
and
sbb
inc
repnz
adc
jne
mov
loopne
subl
jb
add
dec
stos
gs
fnstenv
std
loopne
stos
jno
jae
arpl
or
cmp
in
leave
dec
adc
jg
sub
fnstenv
adc
test
and
xorl
pop
push
mov
and
in
sub
mov
add
sbb
outsb
dec
xor
mov
sub
scas
jle
enter
push
mov
mov
sbb
shrb
popa
xor
stc
movsl
adc
shrl
in
push
push
mov
or
add
sbb
xor
insl
mov
push
mov
insb
lock
or
jo
add
push
xor
mov
inc
into
cld
repz
cmp
jnp
mov
fiadds
add
leave
ss
dec
add
sub
inc
js
cwtl
jge
aas
push
lahf
pop
push
cmp
dec
cltd
je
fdivrl
sbb
jecxz
push
nop
add
testb
push
mov
out
cmp
jp
lea
xchg
adc
out
fisttpll
mov
js
lret
pop
mov
jp
adc
fnsave
imul
add
out
je
cmpsl
sub
mov
mov
ja
dec
daa
or
jne
and
or
aam
xchg
xchg
in
stos
pop
es
or
pop
push
ja
dec
dec
std
lea
mov
popf
stos
inc
sub
mov
lock
add
add
sbb
add
pop
mov
xchg
popf
js
mov
popa
mov
popf
push
aaa
or
jo
fcompl
lea
ljmp
jp
mov
jmp
fs
xchg
jp
sub
test
out
push
cmpsb
data16
in
sub
jno
cmp
inc
int3
jno
sarl
sbb
mov
call
loopne
push
ljmp
inc
in
in
push
xor
rcr
fmuls
iret
xchg
jb
xchg
inc
rcl
add
dec
out
cmp
mov
jp
in
push
pop
pop
add
iret
mov
clc
cld
mov
add
ja
mov
out
mov
pop
jb
les
pusha
cmp
or
dec
clc
adc
lods
nop
imul
cld
in
cmp
pop
pop
push
push
enter
jecxz
jb
popf
xchg
addr16
inc
mov
loope
mov
mov
shll
int
push
push
mov
and
lret
xchg
push
push
and
ret
decl
mov
jnp
insb
shlb
ficomps
jl
ljmp
mov
xchg
das
xorl
push
loopne
mov
push
add
sbb
sbb
pop
push
pop
sbb
mov
ror
xor
out
mov
fdivl
cmp
xor
cmpsl
cli
test
mov
daa
xchg
cmp
add
popf
lea
mov
lock
mov
sti
stos
push
or
mov
fsubl
insl
test
cmc
movsb
insl
and
cmp
es
mov
jae
inc
push
dec
and
jecxz
add
mov
xor
xchg
adc
dec
out
mov
fs
sbb
xor
aaa
mov
add
sahf
push
jo
push
sbb
test
jle
mov
movsb
jmp
mov
aam
es
sbb
mov
int3
push
rcrl
inc
lret
negb
adcb
or
add
add
fisttpll
cmp
ret
jmp
dec
cmp
enter
pop
stos
leave
fnstenv
mov
cltd
out
mov
sti
aam
pop
dec
ljmp
cmp
rcl
aad
xchg
adc
out
mov
sbb
adc
inc
loopne
mov
rclb
push
cli
cmp
xchg
push
cmp
jns
cmp
insl
sbb
loope
cmp
and
xor
outsl
inc
push
mov
popf
adc
imull
push
mov
ss
cmp
lds
fs
adc
xchg
clc
out
mov
fs
lea
int
add
dec
das
xchg
pop
clc
mov
push
adc
inc
shl
in
mov
jecxz
cmp
loopne
enter
adc
push
adc
cld
or
inc
imul
jae
mov
gs
inc
mov
mov
adc
js
pop
jbe
pop
sti
shll
and
and
int
mov
repnz
pop
arpl
adc
push
inc
out
pop
and
ds
mov
inc
pop
insl
dec
lods
negb
mov
aas
pop
test
push
cmp
or
in
mov
xchg
fs
fwait
cli
push
jp
popf
inc
push
or
cmp
and
pop
imulb
out
sbb
je
xchg
push
in
dec
sbb
adc
xchg
cli
jns
fcomp
and
pop
xchg
outsl
jne
sbb
mov
xorl
xor
mov
or
xor
nop
or
mov
mov
mov
adc
add
test
stos
xor
mov
popa
ficoms
jo
xor
or
xchg
mov
jae
dec
repnz
pop
int3
pop
sbbb
lret
pop
and
inc
pop
jge
dec
inc
lds
adc
adc
cmpsb
std
mov
add
dec
mov
jge
daa
dec
leave
pop
and
iret
pusha
mov
dec
push
cmpsb
mov
pop
inc
gs
adc
cmp
movsb
dec
add
arpl
xchg
aaa
xor
jno
nop
push
mov
pop
ss
outsl
rcr
xchg
rol
aam
sbb
sub
jno
xchg
mov
add
loopne
push
das
mov
xlat
cmp
pop
or
es
fildl
jbe
into
push
add
cs
bound
out
push
aas
and
scas
stos
inc
pop
subb
sbb
aaa
or
in
je
mov
inc
insl
cld
jge
mov
xor
xchg
fsts
fiadds
fwait
pusha
lock
test
fcmovne
call
jp
stos
mov
in
lret
fmulp
lods
lock
cmp
lret
xchg
sub
adc
push
or
hlt
hlt
xchg
jne
out
mov
daa
shll
mov
gs
fsubrp
hlt
daa
cmp
loopne
mov
add
dec
sbb
cmpsl
lods
ljmp
in
testl
or
dec
pop
jno
pop
in
adc
add
fstps
mov
sti
inc
dec
jge
push
xchg
lods
fcmovbe
pop
ja
sub
jo
pop
fistpl
mov
mov
popa
push
xor
pusha
mov
pop
jne
or
or
pop
cmp
inc
rolb
xchg
mov
iret
pop
and
inc
pop
sub
xor
insb
outsb
xor
adc
and
jnp
dec
inc
xchg
add
pop
test
ftst
test
leave
jge
popf
add
add
fsts
push
jnp
test
pushf
outsl
jo
cltd
xchg
xor
fldcw
std
fdivrs
cmp
ds
enter
ljmp
mov
xchg
xchg
sub
push
adc
fwait
push
inc
mov
imul
fstpl
pushf
and
mov
push
popa
push
pushf
or
cld
inc
out
sub
push
outsl
xor
jp
out
loop
ljmp
subl
pop
xor
mov
je
adc
mov
in
inc
inc
dec
hlt
ds
das
add
ljmp
and
push
push
stos
push
and
outsl
and
movsb
lret
lods
push
mov
in
inc
push
insl
push
or
into
sbb
push
pop
add
ror
mov
mov
adc
fstl
nop
adc
xchg
cli
jo
repnz
mov
sbb
xor
std
ja
cmp
sbb
ljmp
jne
out
adc
pushf
adc
orl
pop
adc
dec
repz
imulb
pop
mov
pop
cmp
mov
mov
cmp
sub
pop
int3
lods
stos
push
jb
mov
jae
push
sub
add
adc
jno
jb
xchg
out
or
sti
es
lea
mov
fdivrs
sub
sbb
and
lock
addr16
sbb
xlat
in
dec
call
xlat
pop
adc
xor
jmp
sbb
sbb
inc
ret
cmp
adc
push
mov
adc
sbb
outsl
out
pop
imul
dec
sahf
repz
push
or
test
cmp
mov
xchg
cmp
outsb
xchg
xor
jo
mov
bound
pop
lods
test
insl
adc
add
icebp
and
jg
das
sub
and
mov
cmp
ja
jb
xchg
cwtl
sub
mov
add
mov
addr16
sub
add
and
dec
leave
dec
and
in
xchg
pop
hlt
or
stc
adc
imull
jge
js
jns
out
ss
xor
mov
enter
jge
mov
fldenv
test
enter
or
icebp
xchg
push
adc
pop
push
dec
sub
scas
adc
fisubrs
popfw
push
push
arpl
dec
mov
xor
paddusb
arpl
mov
in
push
push
in
pop
sbbl
xchg
jb
cmp
shlb
pop
jge
pop
or
inc
in
cmp
dec
xchg
xlat
mov
cmp
arpl
arpl
mov
fistps
ds
lcall
mov
inc
push
push
loope
loopne
ss
in
jae
fmuls
pusha
pop
mov
into
out
cwtl
aam
add
rorl
jle
sub
jbe
ja
sub
test
enter
int3
data16
fwait
inc
adc
addr16
jno
jno
and
dec
pop
mov
flds
adc
testb
cs
adc
cli
repnz
loope
test
dec
mov
mov
mov
mov
mov
leave
fdivrs
pop
sbb
and
movsl
lds
fmulp
mov
jl
lds
loopne
rcl
push
pop
jmp
xor
lret
and
cmpsb
sub
xchg
xchg
insl
pusha
pop
lcall
push
dec
cmp
std
xchg
jge,pn
sbb
or
sub
mov
inc
push
shr
sbbl
add
stos
cs
hlt
test
inc
push
push
pop
out
mov
hlt
das
mov
sub
lea
test
mov
test
cmp
push
pop
out
adc
fwait
adc
or
lea
lcall
test
mov
loope
push
xlat
enter
flds
stc
inc
jno
xor
pop
ret
push
inc
imul
add
inc
hlt
repnz
lds
dec
cmc
push
pusha
pop
les
repz
repz
hlt
sbb
lret
mov
inc
lods
ds
fisttpll
or
xchg
lock
cwtl
sbb
repnz
add
jg
xor
and
or
shrb
stos
or
jmp
inc
cmpsb
xchg
cmp
fimull
in
mov
pop
cmp
inc
pop
mov
or
shr
in
or
xor
cmp
or
fcoms
xchg
cltd
mov
enter
push
mov
add
xchg
ds
je
adcl
sub
inc
in
movsl
dec
das
rcrb
loope
iret
adc
pop
or
xorl
mov
or
test
test
adc
adc
and
xor
aad
add
mov
mov
insb
or
push
test
les
or
jmp
xor
sbb
loope
fs
pop
mov
lahf
jae
sbb
out
das
nop
aad
sbbl
xchg
insb
int3
lods
jo
xorb
mov
mov
xorl
sbb
lret
call
mov
stos
push
xchg
sub
lret
and
jae
loop
inc
inc
adc
or
adc
frstor
sub
js
repz
sbb
sbb
jbe
sub
dec
lret
ja
fiaddl
jge
xor
mov
pop
xchg
mov
aas
xchg
mov
iret
ja
shl
in
dec
mov
xor
add
mov
mov
pop
sbb
call
push
jb
dec
xor
or
xchg
push
cmp
stos
movsl
aas
pop
xchg
fldenv
dec
or
data16
push
outsl
mov
mov
inc
bound
out
ljmp
push
mov
popf
xchg
or
loopne
mov
insb
into
mov
mov
and
and
xor
dec
xchg
mov
pop
insl
lods
loope
xchg
pop
dec
test
inc
dec
scas
loop
sub
mov
adc
pop
andb
dec
mull
dec
sarl
pop
mov
xchg
ret
nop
iret
insl
lods
outsb
test
sbb
nop
fcmovbe
xchg
scas
sbbl
mov
xchg
jge
in
leave
rorb
cmc
xor
xor
pop
icebp
xchg
test
mov
popa
and
push
ds
mov
xchg
call
jb
mov
shll
pop
jg
adc
sti
cltd
mov
inc
mov
lods
adc
mov
mov
push
xchg
insl
stos
in
loope
push
mov
stos
mov
adc
nop
jb
rol
jbe
cmp
bound
lea
sti
imul
and
arpl
aam
xchg
sbb
jae
mov
inc
ret
xchg
push
cmpsb
scas
aad
inc
xchg
aaa
push
mov
aas
popa
ljmp
mov
lods
jo
mov
je
sub
arpl
add
jns
mov
dec
testl
inc
or
in
jns
cmp
outsb
je
jb
test
aad
clc
mov
inc
mov
or
mov
cmp
outsb
add
cmp
ss
adc
ror
lea
xchg
adc
dec
inc
or
cmc
mov
add
add
xchg
adc
mov
mov
push
in
sub
add
mov
int
lods
mov
pop
push
dec
mov
rorl
adc
and
pop
imul
inc
cmpl
hlt
fstpt
arpl
hlt
sub
sub
jg
es
mov
test
ret
int
jmp
jo
xor
adc
icebp
data16
jo
aam
xor
sbb
xchg
bound
mov
lds
sbb
sub
jno
dec
or
repz
pusha
lea
aam
pusha
leave
pop
repnz
lods
mov
jg
lea
les
enter
inc
xchg
movsb
jge
inc
divl
xchg
or
or
push
sub
idivb
fcmovb
out
es
out
test
into
dec
arpl
pop
pop
fcompl
or
insb
mov
sub
xlat
ljmp
fldl
pop
adc
int
fwait
add
sbb
push
xchg
cld
mov
xor
mov
push
mov
xchg
and
jecxz
xorb
pop
ret
fs
leave
scas
aad
pop
pop
int
test
jle
in
dec
icebp
xchg
popf
or
add
sbb
sbb
cli
jmp
sarl
cltd
add
js
push
outsb
into
rorl
addr16
mov
inc
popa
adcb
inc
adc
and
inc
popf
push
test
lds
int3
mov
jbe
jle
xchg
xor
dec
scas
adc
sbb
lcall
push
negl
xchg
inc
cmpsb
cmp
xor
jle
cmp
sbb
pop
pop
out
repnz
jb
int
inc
add
rcl
clc
mov
mov
cmp
dec
mov
fisttpll
gs
outsl
xor
inc
xchg
mov
mov
mov
xchg
fisubs
pop
push
outsb
scas
cmp
jle
iret
dec
out
cmp
xchg
jno
and
push
data16
pop
movsb
test
test
push
icebp
lahf
bound
mov
call
fiadds
clc
fdivrl
movswl
cli
movhps
add
sub
lea
mov
push
loop
jl
aaa
mov
cwtl
adc
xchg
dec
pop
xor
pusha
push
adc
jne
dec
rol
or
data16
loop
xchg
nop
repnz
push
mov
int3
lcall
scas
mov
pop
mov
out
aaa
dec
out
out
shlb
testb
cmp
xchg
mov
pop
cld
add
aad
sbb
mov
and
stos
imul
jns
stc
push
sbb
lcall
push
pop
push
jne
test
nop
add
pop
stos
test
jecxz
dec
or
adc
nop
ds
dec
sbb
jb
pop
repnz
sbb
call
test
cmc
add
in
push
xor
mov
fisttpll
push
cli
icebp
add
mov
or
call
pop
test
or
push
push
add
scas
jle
mov
xor
movsl
or
cld
in
sub
scas
aaa
popa
push
stos
ljmp
es
rcl
or
in
fldenv
leave
mov
or
xchg
push
lea
iret
adc
sbb
pop
negl
iret
or
dec
sub
or
fsubs
test
addl
add
mov
out
xor
mov
dec
nop
fwait
dec
jle
adc
push
cmp
mov
xor
adc
push
jnp
cmp
arpl
fiadds
loop
and
dec
lret
sbbl
cmp
pop
jae
add
rcl
jo
ljmp
into
pop
aas
arpl
push
cmp
mov
stc
sbb
add
push
pop
mov
aad
test
or
outsb
sbb
shlb
adc
push
cli
mov
fbld
stos
dec
mov
into
cmp
xchg
dec
push
jmp
pop
sahf
pushf
ljmp
bound
in
mov
mov
dec
adcl
adcl
mov
rcr
sbb
outsl
lcall
cmp
and
imul
fadds
dec
dec
mov
movsb
lret
movsl
je
mov
insb
inc
sub
mov
push
je
xchg
in
xor
jne
cmp
cld
dec
stos
std
inc
and
add
cwtl
push
bound
cmpsl
fnstsw
mov
lods
mov
cmp
jb
and
jb
adcb
add
mov
in
leave
es
sub
fs
or
iret
movsb
mov
hlt
pushf
adc
test
imulb
aaa
int3
arpl
push
jmp
enter
and
imul
sbbb
push
add
xor
mov
fwait
cmpsl
imul
sbb
sahf
enter
inc
movb
flds
notl
push
repz
insl
mov
shr
xor
adc
inc
inc
das
jo
fsubp
dec
xor
lods
cmp
or
push
vpcmpeqb
and
dec
fwait
mov
mov
daa
push
adcb
movsl
adc
int3
inc
cmpsb
les
fucomp
lock
sahf
mov
adc
fsubrs
xchg
mov
push
pop
leave
test
push
xchg
lret
adc
sbbl
int
pop
pop
adc
xchg
inc
xchg
mov
cvttps2pi
cmp
jb
daa
in
mov
and
stc
pop
pop
lock
xchg
pop
fmuls
daa
jp
push
push
movsl
dec
lahf
inc
fnsave
jne
adc
inc
xchg
mov
mov
imul
les
mov
sub
mov
fnsave
sbb
rolb
outsl
pop
call
fiadds
sti
mov
pop
push
xor
mov
in
push
add
lcall
rcrl
ja
int
es
xchg
add
and
mov
jle
jne
sub
iret
cmc
insb
mov
dec
aad
fstp
mov
push
into
cli
mov
pop
enter
mov
int3
mov
clc
imul
inc
nop
das
ficomps
je
stc
repnz
sbb
pop
or
cmp
or
dec
mov
notb
sub
adc
jno
insl
ret
test
mov
adc
lock
pop
pop
xchg
pop
imul
sti
or
int3
mov
in
cmpsl
dec
movsl
popf
fstpt
dec
pop
mov
jo
mov
popf
movsb
repnz
xchg
mov
mov
lods
xchg
fdivrl
aas
daa
outsl
pop
lods
rclb
outsb
out
iret
mov
xchg
enter
mov
inc
in
inc
dec
into
push
mov
mov
ss
loope
adc
add
sbbb
into
adc
int
dec
ret
xchg
dec
aam
add
push
xor
inc
leave
push
nop
cmc
lods
stc
ret
push
xchg
in
loope
jns
pop
inc
inc
loopne
mov
jge
mov
fstpt
jns
aas
mov
cmpsb
dec
jl
mov
add
lahf
add
add
xchg
lcall
and
mov
into
sub
arpl
push
mov
das
mov
mov
loope
jecxz
push
scas
sahf
push
xor
xchg
fistpll
mov
jns
mov
add
rorl
jp
adc
aam
repz
js
mov
pop
rclb
pop
sub
test
fisubl
dec
movsb
rorl
clc
ss
cli
mov
inc
cltd
sbb
addl
or
or
movntps
pop
shlb
xor
jo
cld
xor
lea
out
mov
xchg
ds
inc
in
dec
dec
out
call
adc
gs
js
sub
and
xor
mov
xor
cld
adc
ss
data16
and
aad
imul
xorb
fcompl
fdivrs
mov
jmp
jb
outsb
xchg
or
movsl
stos
ja
xorl
dec
pop
hlt
outsl
das
jno
mov
insb
ret
or
jg
sbb
lds
mov
or
sbb
ds
pusha
movsl
stos
jp
fwait
dec
inc
out
fwait
cs
dec
adcl
fsubrl
es
pop
rorl
sbb
inc
push
pop
jb
jbe
bsr
jmp
adc
in
nop
mov
stc
lock
lods
mov
hlt
inc
mov
jg
sub
mov
jae
push
das
cmpsl
push
jnp
loop
ret
test
mov
mov
inc
cmpsl
sbb
adc
or
mov
sbb
dec
int3
out
aam
or
adc
sbb
add
int
pushf
call
popf
mov
loop
outsb
sub
mov
push
lods
mov
ret
mov
or
cmp
imul
mov
cwtl
imul
push
hlt
sub
mov
cmp
jbe
xchg
in
mov
aas
pop
nop
iret
cmpsl
fcmovbe
xchg
mov
popf
cmp
cmp
cmp
mov
insb
or
and
arpl
mov
aad
test
cmpb
aas
cld
inc
inc
aaa
cwtl
ret
mov
rorl
xchg
js
pop
pop
sbb
and
mov
fistpl
fcomip
dec
mov
repz
mov
push
outsl
pop
movsb
sub
sbb
jb
in
adc
mov
jg
popa
ss
pop
and
movsb
into
xchg
xchg
call
enter
xchg
dec
adc
cwtl
push
or
aam
cmc
fwait
push
mov
push
cltd
andl
sbb
pop
cmpsb
fidivrs
add
pop
movsl
xchg
add
cmp
jle
xor
mov
and
adc
rcl
je
inc
in
fmull
add
imul
xchg
xor
adc
and
fbld
movsl
and
roll
cmp
or
loope
xchg
sub
adc
sahf
sub
inc
push
xor
in
inc
add
pop
pop
push
mov
hlt
inc
cs
ljmp
or
jle
repz
imul
inc
xor
and
popf
adc
int3
in
mov
dec
les
sub
jno
test
addr16
push
repz
adc
pop
repz
imul
sarl
imul
mov
sub
cld
mov
cld
xor
and
sbb
inc
je
mov
pop
lret
add
jge
aad
rol
test
cli
shll
in
pushf
inc
fimull
in
jmp
xchg
adc
das
decb
or
mov
xor
dec
daa
dec
lcall
dec
sub
xlat
dec
icebp
loopne
mov
mov
sbb
not
push
xchg
and
add
outsl
adc
jns
cmpsl
mov
out
loope
ret
jne
dec
loop
je
sub
or
test
hlt
push
adc
push
jl
call
and
sub
sub
ret
mov
cmp
call
lea
cltd
mov
mov
dec
mov
imul
jg
cmp
xchg
in
je
sub
push
rol
xor
inc
cmp
loopne
xchg
int
add
add
fcomps
sbbl
pop
movlps
push
or
adc
adc
xor
lea
aad
pop
pop
dec
into
pop
mov
xchg
pop
sahf
push
push
sti
cmc
pop
mov
fcomi
popa
fwait
loopne
pop
pop
stc
jns
mov
mov
leave
aam
pushf
add
repnz
mov
sbb
loopne
shrl
stc
dec
es
lret
into
int
addr16
mov
fdivr
mov
adc
arpl
rclb
pushf
adc
fsts
push
enter
cmp
pusha
xlat
push
std
ja
push
and
adc
adc
or
jne
jmp
jl
jmp
icebp
test
incb
mov
push
ljmp
jmp
pop
lea
sarb
jb
pusha
jae
push
mov
pop
sub
clc
sbb
adc
and
repz
and
insb
xorl
repz
adc
dec
cwtl
rcrb
stc
mov
loope
jnp
xchg
mov
cmp
nop
lods
jmp
dec
scas
dec
fucomip
or
xchg
push
xchg
adc
and
pop
pop
rcll
xor
sub
lcall
icebp
cli
bound
jae
xchg
popf
std
inc
cltd
ret
lods
mov
leave
adc
cmp
dec
sbb
add
outsb
adc
cwtl
pop
and
pushf
mov
mov
pop
jmp
jbe
push
icebp
push
mov
jns
ss
jmp
insl
pop
jb
jbe
pop
push
xchg
xor
orl
sub
addr16
out
es
pop
stc
fsubrp
adc
jge
ret
mov
mov
jecxz
ss
mov
shrb
push
mov
inc
popa
or
popa
jmp
aaa
adc
aas
and
xchg
pop
nop
cmp
arpl
sub
dec
xchg
pushf
stos
jmp
adc
pusha
adc
fimull
mov
or
mov
add
shl
lods
jmp
add
inc
cwtl
sbb
pop
mov
aam
aaa
dec
push
sahf
nop
in
je
xchg
mov
lret
mov
jge
roll
in
cltd
orl
or
sub
stos
cltd
sub
mov
mov
je
and
or
pop
dec
jns
mov
js
outsb
sti
jo
mov
and
cmp
add
jg
js
dec
in
shll
jo
and
inc
ret
sti
dec
lcall
or
nop
ljmp
int3
roll
cmpsb
lcall
jb
insl
movl
push
fisubs
bound
in
out
add
enter
pushf
pop
popa
lret
shl
iret
push
mov
shl
jmp
fcomps
push
mov
repnz
int
out
dec
jno
xchg
sbb
lods
sbb
fs
and
fcoml
ficompl
fimull
mov
sar
fstpl
jmp
mov
mov
outsb
push
dec
orb
mov
aam
mov
xor
xchg
mov
push
das
lock
dec
fistl
mov
out
imul
xchg
jae
sbb
ss
adc
inc
cwtl
sbb
adc
mul
push
sbb
lret
jnp
sbb
sarb
jns
adc
sub
cmp
xchg
lret
adc
cli
mov
push
scas
int3
arpl
shll
ljmp
das
xorb
shl
mov
rorb
pop
mov
fcomps
ret
mov
cmp
out
movsl
and
cltd
push
xor
lret
out
test
push
push
lcall
pop
push
out
movsb
pop
aaa
pop
cmp
pushf
in
idivl
xorl
aad
push
xchg
and
in
push
pop
ret
inc
cld
inc
add
jl
cmpb
mov
jbe
dec
xlat
shl
mov
jb
add
pop
test
adc
std
xor
frstor
mov
xchg
fs
sbb
sub
mov
xor
cmp
imul
addr16
adc
jb
jno
jecxz
and
mov
push
pop
add
mov
push
nop
jecxz
inc
notb
dec
inc
call
scas
repz
std
pop
and
and
roll
fisttpll
cmpsb
xchg
mov
mov
mov
jge
stos
in
sti
dec
push
sbb
or
inc
imul
ja
mov
xchg
mov
les
cs
cmc
xchg
sub
movsb
leave
movsb
or
fwait
mov
xchg
adc
cmpsl
pop
shl
lahf
adc
popa
test
jo
pop
and
push
and
push
aaa
jae
movsb
sub
mov
pop
or
cmp
iret
xor
cmpsb
adc
cmp
mov
shlb
clc
sbb
icebp
or
pop
xchg
lcall
push
scas
cwtl
sbb
pop
dec
hlt
mov
test
subb
andl
xchg
cmpsb
fnsave
ljmp
push
pop
lods
cwtl
ret
push
push
adc
jle
adc
push
jno
test
lret
sti
lods
aaa
lcall
sbb
pushf
mov
loope
nop
xchg
add
mov
ret
cmp
loopne
mov
sbb
xlat
ds
push
in
dec
lds
nop
xor
out
fiadds
out
jb
push
stos
push
adc
mov
loop
cmp
cli
or
or
inc
cmp
fcmovnb
mov
fildl
fcomi
xchg
dec
jg
mov
xchg
or
jg
fs
pusha
fstl
push
imul
jl,pt
outsb
add
add
mov
out
cmpsl
sti
mov
fwait
jbe
out
inc
and
pusha
xchg
ja
outsb
mov
mov
in
mov
mov
sbb
int3
jae
and
aam
push
sub
incl
push
cli
cmp
add
adc
std
out
inc
mov
push
int
cmp
aaa
fcompl
enter
cmp
mov
and
add
sti
movsb
outsb
jg
iret
push
scas
inc
pop
call
xchg
jge
mov
rorl
scas
fs
xchg
cwtl
in
fstp
test
movsl
in
mov
jle
sub
xor
ljmp
lods
and
cmp
push
mov
push
and
mov
rorl
mov
jbe
sbb
pop
mov
inc
popf
aas
out
dec
clc
rorl
lahf
and
jmp
push
sub
out
push
popf
testb
mov
xor
xchg
sub
addb
xchg
call
aam
pop
loope
cmp
rcll
sub
daa
out
cmp
pusha
hlt
adc
cmp
or
imul
and
xor
call
or
in
fcompl
dec
enter
or
test
cltd
or
test
sbb
mov
mov
mov
aas
pop
clc
push
lret
mov
mov
mov
lods
es
ss
mov
insb
xchg
out
scas
shll
add
mov
cwtl
adc
sub
mov
mov
cmp
push
add
dec
or
jae
adcb
fs
jnp
mov
ret
sub
push
xchg
fnstcw
inc
movsl
in
xchg
push
inc
mov
mov
sub
lahf
mov
daa
add
pop
out
cltd
inc
sbb
mov
adc
lcall
popa
inc
lahf
dec
and
je
mov
subb
iret
rorl
cli
test
xor
loope
cmp
dec
incb
add
cmpsl
or
rolb
insl
push
popf
push
sub
sbb
push
in
adc
mov
push
gs
call
inc
mov
xchg
jb
lods
adc
or
sub
in
push
xchg
in
mov
nop
sbb
fimuls
sub
and
dec
fbld
pop
xchg
loopne
mov
or
adc
add
push
xchg
lahf
inc
cs
repnz
out
cmp
and
jmp
movsb
shlb
in
orl
in
inc
push
popa
sub
pop
mov
stos
addr16
pop
rclb
xor
mov
cs
xchg
mov
ret
adc
lea
push
icebp
scas
pop
mov
shl
scas
or
icebp
out
sub
das
push
xchg
ret
rclb
and
and
push
fisubl
push
mov
std
cwtl
scas
push
or
mov
xchg
cmp
mov
lcall
lahf
loop
inc
dec
inc
inc
push
adc
in
add
sub
xlat
sub
int
test
cwtl
xchg
mov
sub
inc
js
sarl
lahf
gs
xor
lods
adc
and
jb
rorl
pusha
xchg
push
bound
call
test
cmp
je
out
mov
fisubrl
sub
push
add
adcb
clc
rcrb
add
and
mov
shrl
dec
gs
loop
mov
dec
jecxz
aad
mov
aaa
mov
movsl
not
mov
jp
icebp
paddq
xor
cli
les
jg
or
xchg
stos
sub
loop
ss
mov
mov
imul
inc
pusha
mov
cmpsb
dec
insl
bound
inc
in
dec
push
push
cmp
shll
xchg
or
dec
mov
lret
or
xchg
mov
test
inc
and
cmp
push
jp
mov
fsubs
pop
punpckhdq
xchg
cmp
jge
mov
sub
sbb
and
movsl
mov
inc
xor
daa
inc
lret
mov
adc
pop
xchg
mov
or
xor
sahf
sub
jae
cmpsl
jnp
and
mov
sub
mov
cwtl
fstps
inc
mov
iret
pushf
sub
cmp
shlb
cmp
xor
int3
sbb
rcll
mov
jp
jge
imull
mov
adc
xlat
jns
out
aam
pop
loop
push
dec
sarl
sbb
in
mov
scas
mov
aas
mov
leave
fldt
stc
push
outsb
std
xor
out
push
es
adc
sbb
movsl
subl
inc
lea
sbb
es
push
sbb
outsl
jl
imul
gs
jo
adcb
or
into
popa
data16
cmc
sbb
push
aad
xchg
cmp
sbb
push
add
jge
aam
popa
pushf
jb
sarl
testb
or
shlb
jl
sbb
dec
sub
call
cli
mov
loopne
mov
cmp
pop
stos
shlb
add
push
shlb
repnz
shlb
cmp
push
cmpsb
aas
insl
cmp
push
xor
mov
hlt
imul
jns
fmul
sti
jns
jmp
lds
mov
mov
into
xchg
xchg
push
fcoms
mov
fisubrl
push
jecxz
fs
push
gs
in
aad
data16
and
push
jno
imulb
or
cmpsl
iret
pusha
ds
mov
fistpll
push
imull
jecxz
add
mov
imul
pop
je
sahf
sti
xchg
into
stos
pop
test
in
mov
inc
xchg
movsb
push
addr16
inc
add
rorb
jns
lods
js
jno
xor
jmp
out
mov
mov
inc
dec
xchg
repnz
or
push
test
adc
shrl
imul
in
push
lret
push
adc
repz
or
addr16
leave
paddusb
add
mov
test
jb
lds
in
push
roll
pxor
and
inc
popf
adc
and
inc
pushf
addr16
shll
pop
dec
pushf
mov
jmp
fistps
and
cmp
pop
enter
clc
sbb
js
or
in
rolb
pop
xchg
popa
adcl
mov
jg
jg
fimuls
sahf
ret
imul
repnz
test
test
test
sub
push
aad
call
fdivs
jecxz
push
pusha
and
dec
xor
mov
sbb
inc
rolb
aad
call
mov
and
lret
add
imul
ret
cmpsb
xor
icebp
adc
jns
mov
dec
inc
dec
fists
pop
xchg
inc
xor
stc
xchg
adc
aas
repz
test
cmp
adc
xchg
scas
dec
cmpsl
stos
push
jns
aas
sub
out
in
aad
pop
int
mov
aad
scas
xchg
pop
and
bound
stos
fildll
xchg
iret
daa
mov
movsl
sub
in
icebp
shl
and
mov
add
ret
lcall
jecxz
mov
mov
cmp
jns
cmp
test
and
data16
das
mov
aam
jle
ljmp
das
scas
pop
cmp
iret
mov
aad
mov
enter
lret
shlb
sbb
dec
jnp
test
xchg
add
pop
dec
jecxz
int
sbb
push
stos
xchg
xor
jae
jnp
js
ret
sub
push
or
sub
cmc
xor
fidivs
cmp
pop
ror
js
rorb
cmp
leave
out
dec
add
and
jle
arpl
fwait
popa
pop
push
in
lock
out
add
iret
inc
dec
dec
clc
int3
ja
pop
dec
xorl
xor
pop
addr16
cmpsb
faddp
pusha
lds
inc
gs
mov
test
xchg
jnp
dec
xchg
out
jmp
repz
loopne
cli
cs
pusha
ret
iret
dec
mov
inc
loop
xchg
insl
loopne
and
das
xlat
mov
xchg
insb
dec
mov
pop
push
mov
les
sub
in
jecxz
test
notl
xchg
and
pusha
stc
push
push
and
and
cmp
daa
lods
inc
xor
in
inc
add
jns
testl
aam
mov
cmp
push
cmp
bound
imul
push
xor
mov
les
push
dec
add
push
inc
cmp
stos
shll
bound
mov
xchg
mov
xchg
cmp
adc
pop
push
sbb
jg
push
stc
sbb
stos
sbb
cltd
jmp
es
xor
xchg
sub
aam
cmp
adc
pop
arpl
adc
mov
lock
xchg
pop
lret
adcb
and
loope
test
cmpsl
mov
iret
sub
popf
aad
xor
cmc
or
fs
xchg
sbb
nop
sub
pop
mov
sbb
sub
std
mov
leave
mov
fisubl
int3
fidivrs
mov
hlt
cmp
rep
int
sti
repz
cmp
adc
cs
adc
jle
das
push
aad
lahf
push
ljmp
unpcklps
inc
adc
ljmp
pop
and
push
add
xor
fisubrl
xorb
je
push
push
aaa
xchg
jge
aam
sahf
mov
xchg
add
mov
and
pop
cmp
add
movsl
decl
dec
or
pusha
sbb
out
cld
insl
push
mov
icebp
lods
and
hlt
addl
sbb
mov
mov
add
pop
sahf
imul
mov
cmc
mov
mov
into
xorl
mov
jmp
jno
stos
popa
adc
dec
inc
cld
xor
jnp
or
cmp
cmp
xor
push
jecxz
dec
xchg
inc
and
loopne
and
push
fwait
dec
repnz
xchg
popa
lea
push
pop
adc
or
int
lret
push
test
sarb
sbb
cmp
test
mov
and
mov
jbe
sbb
sub
ret
pop
lcall
jb
cwtl
jae
inc
xchg
icebp
adc
push
lahf
or
xchg
and
pop
repz
or
mov
sub
bound
addr16
test
lret
push
or
das
pop
les
sbb
add
sti
aaa
sbb
aad
in
mov
cmp
out
int3
jae
addr16
cmpsb
aas
pop
imul
jecxz
sbb
cs
dec
inc
add
mov
and
insl
xor
adc
scas
stc
cmp
lahf
ret
mov
repz
je
jp
fcoms
push
test
adc
scas
pushf
pop
xor
insl
pop
push
lods
mov
sub
dec
push
call
jo
fdivrl
and
mov
clc
dec
cmpl
scas
inc
sub
imul
fsubl
sub
pop
test
aad
sub
jge
and
iret
fcoms
cmc
jmp
pop
pop
push
in
out
int3
push
cmpsb
mov
lock
cmpsb
adc
cmc
inc
add
lock
push
std
ret
mov
dec
insl
pop
sbb
lea
shll
stc
lock
test
aad
mov
imul
mov
mov
or
int
add
lods
int3
stos
and
data16
jae
lea
jne
sbb
xor
shl
sbb
hlt
adc
jnp
cmp
je
test
in
outsb
pop
fstpt
or
and
sti
sub
pop
rcll
cmp
mov
fs
out
cmp
cmp
shrl
out
add
xchg
ljmp
pop
imulb
jo
fisubrs
lds
dec
jecxz
push
ja
mov
rorb
dec
cmp
and
mov
mov
punpckldq
aaa
inc
sub
dec
out
cmp
jge
arpl
lea
push
and
jmp
mov
int
jb
push
add
push
xor
iret
push
inc
aam
mov
jecxz
mov
sbb
lds
pop
sub
xor
mov
mov
cmp
mov
mov
jl
test
scas
jle
aaa
out
sub
push
addl
imul
mov
adc
mov
ficoms
xchg
dec
adcl
jae
adc
subb
xchg
pushf
negb
inc
xchg
mov
iret
xchg
mov
cmp
pop
es
sub
mov
and
call
mov
popa
jecxz
or
xchg
mov
mov
iret
mov
movsb
jno
andl
sub
ja
push
xchg
sub
mov
pop
imul
push
push
pop
aas
pop
mov
adc
arpl
mov
mov
and
aas
inc
push
dec
push
pop
arpl
xor
aas
xor
adc
dec
ds
dec
sub
test
data16
repz
ds
stos
cs
inc
lcall
aam
push
mov
xchg
add
push
push
movsl
cmpsb
mov
cmp
out
xchg
sbb
pop
cld
lods
les
push
pop
mov
pop
xor
xchg
add
add
pop
mov
sti
xor
popa
and
mov
outsb
out
push
outsl
in
fnstenv
mov
or
negl
fxch
test
shlb
setne
dec
xchg
in
mov
clc
dec
loope
arpl
pop
xchg
in
sbb
insb
pop
jne
inc
sbb
sarb
out
pop
mov
mov
nop
pop
rcll
lods
inc
je
mov
scas
mulb
cmpsl
inc
ds
adc
rorl
lret
add
or
jae
or
imulb
test
push
das
fimuls
outsb
mov
mov
push
xchg
xchg
arpl
fwait
leave
lods
mov
pop
push
cltd
popa
push
and
sub
cltd
shl
and
push
add
mov
push
les
cmp
mov
push
sbb
cmpsb
pop
mov
call
cmpsb
ds
cwtl
push
lahf
mulb
cmp
sbb
pop
cmp
xchg
push
cmpsb
lret
mov
pop
xor
cmp
cwtl
push
inc
rolb
inc
jae
sub
add
dec
int
ret
call
xor
out
xchg
repz
or
adc
pop
sarl
adc
xlat
into
mov
lret
cmp
pop
xor
mov
cmp
cmpsb
xor
fdivl
pop
xchg
sub
push
push
stos
cs
or
adc
cmp
scas
hlt
xchg
jne
shl
movsb
in
inc
insb
cs
into
divb
cs
das
adc
inc
jo
and
cmp
addr16
mov
mov
mov
fcompl
jb
clc
xchg
aad
lods
adc
or
sub
iret
ds
mov
inc
push
add
lcall
jb
inc
lret
inc
shll
jo
jmp
cmc
pop
fsincos
fs
push
cmc
xchg
test
ljmp
mov
xchg
xchg
pop
xchg
aad
adc
and
adc
cmp
jmp
mov
or
lods
cwtl
das
pop
pushf
lods
pop
ja
daa
cmp
xor
or
or
scas
shrl
pop
push
sbb
add
adc
push
sbb
push
out
cwtl
je
addb
fsubrs
lods
outsl
js
xchg
mov
out
or
pop
or
mov
pop
push
xchg
daa
mov
xor
hlt
cmp
pop
lret
push
dec
outsb
fildll
loop
xor
daa
push
or
push
or
mov
inc
cmp
out
pushf
aam
adc
es
outsb
adc
dec
xchg
mov
jb
add
andb
outsl
sbb
std
ret
mov
push
jle
call
dec
inc
sbb
cmp
repnz
jns
fstl
push
fadd
dec
out
push
xor
push
or
fdivs
xchg
in
aas
in
jl
jl
inc
fimull
jae
popf
adc
nop
aam
jno
leave
sbbb
or
pop
jno
pop
jge
pop
xor
mov
das
xor
mov
xchg
jbe
cs
pop
mulb
xchg
jle
adc
loop
aad
imulb
leave
pop
push
mov
sub
outsb
stos
notl
inc
adc
movsl
addr16
cmp
mov
mov
bound
mov
jle
lods
fsubr
daa
movsl
dec
mov
mov
in
inc
cwtl
dec
movsb
or
inc
mov
out
mov
and
inc
xor
les
and
push
sub
pop
fwait
lret
fucom
adcb
cltd
jnp
inc
dec
subb
sub
popf
mov
lods
mov
ret
das
out
lahf
mov
leave
push
addl
xor
dec
leave
add
and
push
icebp
loopne
cli
sub
xchg
inc
fnstenv
lahf
in
lock
out
cmpl
sub
jmp
cs
lea
push
insl
inc
mov
out
lret
neg
ljmp
rclb
jg
int3
fsubrl
ss
pop
sbb
stc
hlt
or
push
hlt
gs
adc
jnp
aam
movsb
add
enter
stc
and
clc
xchg
sbb
scas
mov
mov
push
pop
jo
mov
hlt
mov
and
test
or
sbb
push
insl
ret
cmp
jnp
pop
add
add
shrb
mov
clc
add
jle
push
cltd
hlt
add
dec
in
xchg
fildll
test
imul
pop
dec
cmpb
nop
fcoms
fdivr
lahf
push
dec
rcrb
sbb
sub
mov
xor
stc
xor
push
inc
test
fdiv
jg,pt
aam
push
shl
dec
jno
fldln2
rcrl
mov
fs
cmp
xor
sub
mov
cmpsl
mov
cmp
out
bound
inc
out
mov
sbb
push
sahf
jb
cmp
sbb
add
ds
push
push
or
xor
cmpsl
adc
jns
insl
mov
push
xor
cli
mov
cs
cwtl
shrl
out
jmp
loop
mov
mov
nop
adc
xlat
hlt
ja
xchg
push
dec
adc
mov
pop
pop
mov
rolb
mov
es
test
mov
sahf
sub
insb
xchg
push
icebp
in
in
fnstsw
push
xchg
or
mov
out
cs
in
inc
clc
add
push
mov
mov
adc
fisttpll
and
popa
jg
out
xchg
pop
inc
test
cmpsb
mov
loop
jbe
mov
cmp
mov
std
fcomps
xchg
dec
mov
mov
out
fwait
inc
test
stc
stos
pop
adc
pop
repz
rcrb
push
and
je
inc
pop
or
xor
fwait
xor
pop
push
add
xchg
mov
test
iret
sub
ds
lcall
test
dec
testb
rcrl
xor
mov
in
pop
sti
cmp
movsl
addb
sti
xlat
in
mov
xchg
mov
daa
mov
cltd
adc
sbb
pop
or
or
xor
rolb
enter
mov
loopne
and
or
mov
add
inc
outsl
xchg
cmp
dec
out
dec
fidivs
jo
push
test
or
xchg
out
or
add
sbb
ret
or
add
es
nop
xor
repnz
jmp
out
int3
push
stc
cmp
fwait
sbb
gs
stc
inc
js
xor
stos
std
test
and
sti
inc
pop
into
cmp
lahf
in
adc
fimull
lret
mov
cmovo
mov
inc
cmc
jae
jl
lret
pop
xchg
push
xor
sub
lock
xor
lcall
inc
adc
add
call
inc
and
or
mov
inc
roll
insb
mov
ficompl
lea
loope
xchg
pop
pop
loopne
xor
jl
xor
out
and
aas
mov
jbe
ret
movsl
sub
or
pop
scas
add
adc
fs
push
pop
divl
dec
adc
pop
sbb
fnstenv
xor
test
add
fs
xchg
jae
push
fisubs
mov
mov
sahf
in
cmpsb
outsb
fistpl
inc
adcb
xchg
jle
jo
loope
sbb
popf
xchg
sub
sbb
mov
jle
popa
test
add
xchg
leave
jecxz
push
mov
adc
stos
cmc
mov
xchg
stos
roll
in
cld
mov
nop
out
adc
insb
out
jl
call
sbb
xchg
pop
and
insl
xor
js
sbb
in
outsb
addr16
aad
push
xchg
mov
insl
je
leave
adc
xor
push
pop
push
add
aam
xor
inc
sub
out
iret
jle
xchg
mov
fisttpll
and
cli
stos
pop
fbld
jmp
loope
sahf
outsb
stc
push
je
rcll
mov
mov
xchg
in
and
lods
sahf
imul
movsl
leave
push
mov
addr16
pop
inc
xchg
jns
push
adc
enter
addr16
loop
pop
mov
mov
adc
lret
paddw
sbb
rcl
in
ret
adc
dec
mov
int3
into
pop
cmp
ficoml
pop
ss
lock
push
jne
add
lea
imul
ds
mov
shrl
xor
repnz
les
push
call
mov
es
test
sarl
movb
popf
mov
ljmp
dec
out
jmp
daa
mov
push
popa
inc
or
adc
int
xchg
adc
push
mov
cmp
dec
cmp
push
jae
in
mov
mov
in
enter
push
out
jae
push
and
mov
fisubrs
mov
cmc
pop
cwtl
jae
adc
add
sub
rolb
xchg
pop
test
popf
insl
je
test
xor
sub
sub
icebp
push
push
pushf
inc
arpl
push
shlb
dec
arpl
pop
push
inc
push
leave
stos
mov
cmp
rcrl
dec
dec
fsts
je
cmp
cmp
inc
in
test
int3
mov
push
jg
movsb
jg
ss
mov
mov
std
sar
xor
lret
and
and
lds
lods
decb
loope
out
or
mov
sub
mov
dec
cld
mov
jge
add
push
mov
mov
shr
cwtl
xchg
mov
pop
or
cmp
mov
push
scas
mov
mov
sub
or
xor
arpl
fcoml
dec
inc
adc
shll
ja
scas
xchg
icebp
imul
cmpsl
js
inc
addr16
and
lret
xor
mov
and
mov
aad
int3
aad
cwtl
inc
rcrb
mov
sbb
lahf
ret
mov
std
xchg
lea
stc
lea
jp
popa
icebp
and
jne
aad
adc
in
imul
aas
pop
in
dec
aam
std
imul
and
push
sbb
push
sub
pop
nop
sbb
out
cmpsb
leave
jne
insl
cwtl
test
xorl
jo
lock
pop
sbb
shrb
fisubs
cmpsl
pop
imul
fucom
iret
jo
scas
pop
outsb
call
jg
js
push
enter
add
js
jmp
test
pop
int
jge
dec
lea
adc
in
notb
sub
jne
rcll
xlat
and
ds
aas
insb
pushf
pop
cmp
jl
lds
dec
leave
mov
cmp
test
loope
shll
cmpsl
and
hlt
jmp
mov
cmp
pop
inc
jp
js
mov
incl
mov
out
xor
hlt
stos
lcall
push
jg
xchg
fstpt
aas
add
push
enter
aad
aas
mov
inc
push
jns
mov
adc
mov
hlt
cmpsl
add
cwtl
ffreep
lods
rol
insb
rorl
and
xchg
pop
cmp
inc
gs
mov
mov
add
pop
fsubr
and
stos
jge
mov
rcll
ret
or
insl
sbb
incb
cli
adc
add
into
addr16
aaa
iret
sbb
jecxz
jns
push
xor
inc
orl
adc
in
jns
xor
or
test
pop
ja
insl
mov
mov
adc
jne
mov
call
mov
ret
mov
imul
pusha
inc
sar
add
hlt
pusha
mov
sar
mov
sbb
mov
test
shlb
fdivrp
inc
cmp
adc
repnz
push
out
push
lret
adc
aad
loop
out
jmp
cmp
cmc
aas
shll
dec
xchg
xchg
mov
loop
and
push
xchg
xchg
dec
mov
out
ds
out
lods
or
lds
xor
sub
push
cmpsb
push
mov
or
adc
lods
cwtl
and
int
xchg
push
jb
dec
test
out
popl
cld
js
daa
rcrl
dec
or
dec
mov
jmp
ljmp
shrb
xchg
ret
cld
aaa
ja
adc
add
mov
in
sbb
fists
xchg
hlt
in
in
push
mov
mov
hlt
imul
sbb
dec
aaa
test
mov
sbbl
lods
insb
imul
jecxz
adc
mov
or
adc
sub
jne
clc
loope,pt
jns
fs
fincstp
wrmsr
mov
inc
sahf
fisubs
sbb
sbb
call
dec
movsl
popf
fnstcw
lock
adc
mov
fucom
add
es
lret
or
es
mov
xchg
ret
adc
xor
mov
xchg
xchg
inc
dec
jge
pop
mov
mov
xchg
cmp
insl
cmp
xchg
add
lds
cmpsb
test
pop
and
lahf
mov
movsl
in
jbe
and
jbe
pop
aam
dec
xchg
xor
das
fsubl
fldt
bound
sti
pop
aam
xor
sahf
stc
dec
sub
je
cs
mov
adc
push
push
mov
loopne
rolb
inc
pop
pop
xchg
clc
xchg
fsub
lret
scas
leave
jnp
mov
lock
lods
fbstp
hlt
fldl2e
inc
or
xchg
mov
das
cmp
mov
hlt
jnp
jo
fnsave
sub
mov
imul
push
pop
test
push
lcall
or
loope
xchg
xchg
cwtl
aas
cli
into
icebp
lods
jns
popa
js
cmp
sub
dec
jnp
mov
jecxz
add
sbb
push
or
shl
pop
add
out
push
push
out
push
aam
popf
loop
ss
xchg
cmp
or
cwtl
outsb
push
fistps
jl
roll
add
sbb
push
fisttps
test
outsl
mov
stc
jns
add
lds
loope
pop
fucomi
inc
outsl
adc
int3
out
mov
inc
outsb
popa
aaa
ds
adc
leave
into
adcb
pop
jne
jbe
lock
shll
or
fdivrp
repz
sub
pop
xor
mov
mov
jl
ss
push
daa
cwtl
cli
das
nop
inc
mov
addr16
sub
outsl
lock
push
movsb
dec
xchg
sub
and
or
mov
mov
std
hlt
push
nop
dec
sbb
sub
mov
cmp
arpl
dec
xlat
testb
lahf
sbb
and
out
out
icebp
pop
add
loope
mov
push
outsb
ss
dec
adc
gs
fsubrs
sti
pop
aaa
imul
cwtl
dec
mov
dec
sub
into
mov
add
scas
lret
add
leave
js
mov
xchg
cs
fsubs
mov
ds
test
mov
fs
add
outsl
loope
push
mov
sahf
push
push
mov
hlt
ror
adc
daa
xchg
adc
rorl
std
or
sahf
outsl
imul
test
je
xor
pop
jg
adc
mov
cmp
inc
lcall
cltd
ja
mov
out
insl
lea
aad
jle
shrl
inc
jae
stc
idiv
fldcw
aam
insl
fldl
mov
jmp
cmc
fiaddl
push
sub
cmp
ret
insl
stc
and
in
lret
mov
mov
push
cmp
mov
shll
xchg
sub
stos
aad
dec
cmp
sbb
ljmp
jne
test
enter
addr16
aas
inc
xchg
test
fdivl
icebp
and
imul
dec
cmp
test
sbb
repnz
cmp
push
push
pop
jl
fsubl
test
mov
add
icebp
jns
scas
mov
xor
movsb
inc
popf
inc
out
xchg
lods
and
dec
addr16
outsl
inc
in
adc
sbb
push
cmpsb
or
or
xchg
mov
pushl
lods
cmpsl
cmp
inc
fstpt
dec
lds
sbb
inc
popf
xor
imull
sahf
mov
test
dec
dec
xchg
and
sbb
fsts
inc
rcl
sub
pop
adc
mov
mov
aad
push
rep
test
inc
lods
pop
jnp
jg
sahf
adc
clc
pop
cwtl
inc
pop
mov
push
cmp
dec
or
jbe
ja
cli
push
stos
insb
call
ljmp
jae
test
xchg
shlb
push
pushf
adc
lahf
mull
es
in
lret
mov
fnstcw
cltd
outsb
push
sub
dec
das
in
add
shlb
popa
xor
mov
iret
out
insb
daa
xchg
loope
or
push
ffreep
jnp
pop
in
popa
xor
loope
sti
add
push
fwait
mov
leave
popf
int3
mov
sti
ret
aad
push
sbb
adc
dec
iret
and
jbe
lods
roll
pop
pop
popa
pop
pop
fsubrl
cmp
xchg
adcb
sub
jle
jo
lret
mov
xor
pop
pushf
mov
int
int
imul
pop
or
xlat
cli
jns
jns
lods
sub
jmp
mov
aaa
test
dec
pmaddwd
mov
mov
push
cmc
pop
out
jmp
repnz
data16
add
test
lea
call
xchg
push
andl
ss
jno
adc
popa
shr
xlat
cmp
mov
and
xchg
push
aam
inc
push
mov
adc
aad
leave
gs
cmp
xorb
mov
mov
ss
push
jg
sub
cli
or
add
jp
movsl
fisttps
push
xlat
js
inc
sub
fldt
in
pop
nop
xor
sahf
mov
sbb
mov
and
imul
pusha
mov
cmc
sub
leave
cli
xchg
cmp
nop
sbbb
scas
xor
leave
pop
pop
mov
cld
orb
into
loopne
xorb
and
int3
add
fsubs
fcoms
in
daa
aad
pop
or
test
xchg
enter
data16
sub
roll
lret
popa
mov
aas
mov
push
aam
xchg
add
hlt
xor
inc
lcall
mov
and
in
adc
test
insl
add
inc
jb
push
pop
or
xlat
ret
test
in
xchg
push
js
cmp
xor
outsb
pop
mov
fwait
lret
adc
loop
xor
xor
test
loopne
inc
fwait
and
or
in
jnp
cmpb
mov
loop
lea
ja
xor
shlb
jmp
cmpsb
lret
adc
xchg
les
mov
out
cmpsl
lcall
pop
scas
aam
mov
sbb
loop
xchg
xorb
cwtl
sbb
mov
out
test
add
pusha
cmpsl
scas
adc
je
push
and
jno
das
pop
and
loope
mov
ds
andb
out
fidivs
jne
sub
iret
stos
mov
in
bound
mov
inc
loopne
dec
lret
jl
cmp
cmp
xchg
xor
test
dec
and
cwtl
mov
xorb
inc
mov
ja
jge
cmp
jo
inc
jge
pop
js
insb
xor
jae
lret
mov
pushf
rcrl
sbb
pop
inc
inc
pushf
mov
dec
push
lods
sti
mov
out
mov
jo
cmp
pop
fwait
aas
pop
cmp
adc
and
fiadds
push
jnp
in
pop
mov
and
sahf
lahf
jno
movsb
xchg
fcmovnu
sbb
jmp
mov
icebp
push
mov
dec
enter
lahf
jnp
push
xor
roll
enter
ds
adc
mov
pusha
mov
add
sbb
fcomps
and
push
and
sub
aad
mov
adc
ds
pop
or
jp
lods
push
outsw
int3
dec
je
xor
pop
jno
cli
les
sbb
lret
loopne
jle
pop
lret
and
sbb
xor
push
pop
bound
sbb
std
cmc
adc
cmp
in
sbb
push
xor
mov
push
das
jns
lds
mov
lds
outsl
sbb
rclb
cli
sub
add
and
sbb
rcr
stc
xchg
pop
fbld
push
repnz
sbb
sbb
jno
adc
div
fstp
push
pop
rol
dec
xor
sbb
loope
adc
in
push
cld
in
or
sbb
bound
push
das
xor
inc
call
addr16
adc
loop,pt
add
sbb
in
pop
inc
lds
lret
cmpsb
adc
aam
mov
lea
push
mov
jge
and
push
arpl
lret
fnstsw
in
adc
int
mov
xor
cmc
jmp
adc
stos
jo
xchg
pop
pop
dec
sub
sub
sbb
test
and
mov
data16
xor
rorb
xchg
pop
int3
xchg
stc
push
push
movsb
jmp
inc
adc
mov
andl
jb
fsubp
test
cmp
jae
icebp
add
mov
rcrl
fmull
pop
mov
push
mov
cmp
decl
and
int
andb
xchg
out
sbb
add
lods
jl
pop
leave
xor
pop
int
inc
lret
jmp
pop
xor
or
clc
xor
xor
cwtl
adc
adc
lret
pop
scas
out
lods
scas
sub
inc
insl
xchg
mov
sbb
cmpl
movsl
je
sbbl
xor
mov
cmp
out
lcall
xchg
push
jp
andb
lahf
and
add
and
aaa
add
pop
jbe
cli
pop
dec
fs
js
sbb
rcll
xor
cli
lret
push
cmc
mov
mov
sbb
mov
in
inc
ja
adc
pop
xchg
stos
add
jecxz
add
inc
sbb
aaa
mov
sbb
test
aaa
and
mov
add
cs
xor
cltd
popa
loope
xchg
in
ljmp
les
insl
mov
es
addr16
lahf
imul
cmp
cmp
pop
out
mov
mov
lods
scas
xchg
fucomi
cmp
pop
lahf
mov
stos
lods
cmp
cmp
push
adc
add
cmc
jle
xchg
cmp
jns
mov
sbb
fwait
in
outsl
xchg
mov
clc
mov
out
decl
dec
test
fdivl
es
jne
inc
lea
and
xor
xchg
push
xor
inc
jb
inc
mov
fidivrs
dec
movsl
call
leave
dec
aaa
lock
call
cmp
ret
and
nop
js
jmp
push
and
mov
lods
jno
add
sub
inc
and
call
scas
mov
enter
and
adc
in
sbb
sub
push
js
cmp
fidivl
fmull
dec
xor
xchg
jae
enter
inc
adc
aaa
inc
sbb
pop
sbb
ja
and
push
cltd
dec
cli
mov
sar
clc
test
inc
sub
mul
pop
mov
clc
mov
je
bound
pusha
in
js
dec
mov
mov
xchg
std
adc
jp
rcr
out
outsl
mov
cmp
clc
mov
sub
cmp
dec
jb
jle
mov
jle
pop
shll
add
mov
inc
jmp
jnp
test
cmpsl
jecxz
sub
push
in
push
pushf
mov
add
aas
jg
js
xor
dec
xchg
dec
bound
negb
mov
lods
mov
cmpsl
sub
rorl
loop
lcall
scas
dec
out
sbb
jne
mov
mov
mov
mov
lock
movb
es
xchg
test
mov
dec
fcmovnbe
repz
negb
arpl
pop
sti
pop
mov
xchg
dec
xchg
xor
dec
jno
sbbb
insl
rol
loopne
out
push
outsl
das
xor
pop
jp
out
dec
jg
ljmp
add
nop
mov
xchg
stos
stc
dec
inc
addb
xchg
adc
arpl
pop
insl
xchg
mov
xchg
jmp
stc
inc
or
adc
jnp
call
push
jl
inc
lea
fldt
int
ljmp
push
in
loop
dec
aas
or
push
repz
adc
inc
insl
in
jge
decb
pop
mov
pop
add
cmp
fldenv
inc
orl
into
mov
pop
pop
out
xchg
mov
shl
cmp
cmpsb
cmp
iret
sbb
pop
xlat
mov
shll
or
ds
gs
mov
jge
addb
sti
out
push
fwait
lret
pop
sahf
push
cld
popa
cmpsl
xchg
and
pop
js
lret
arpl
lock
pop
lods
pop
enter
push
loop
ds
jnp
sub
stos
adc
imul
xorb
loope
mov
insl
cwtl
lods
cmp
xchg
repz
adc
cld
sub
add
imul
je
and
inc
movsb
idivb
movsb
xchg
dec
sbbb
adc
shrl
imul
or
out
push
xorps
xorb
xchg
dec
movsl
arpl
mov
leave
mov
lret
imul
add
shll
scas
or
xor
sub
xchg
arpl
je
lock
mov
ror
es
or
fsubl
push
lea
pop
ljmp
arpl
push
in
jp
cmp
dec
test
stos
roll
imul
std
cli
ds
cld
or
jnp
inc
loope
or
addb
pop
cs
repnz
cmp
push
pop
sub
add
mov
xchg
stc
adc
cmp
and
inc
jecxz
bound
leave
sarl
sub
cmp
xor
cld
mov
test
inc
sub
add
or
arpl
sub
jns
pop
add
shl
repz
in
imul
wbinvd
mov
pop
cmp
mov
mov
pusha
cld
fmull
outsl
mov
adc
fstpt
add
sbb
es
xlat
test
mov
pop
ret
mov
mull
adc
push
pushl
xor
les
or
xor
lret
iret
push
or
push
sbb
shrb
mov
sbb
jns
add
je
stc
sbb
ja
or
jle
stos
mov
negl
adc
inc
pop
fs
add
inc
and
and
dec
xchg
mov
movsb
inc
aaa
dec
sbb
jmp
dec
push
fdivrl
in
sub
push
jp
sarb
out
pop
pop
dec
and
inc
xor
xchg
mov
gs
inc
in
mov
mov
int
js
mov
mov
ret
es
ja
rcll
add
cmp
pop
mov
rorl
or
pop
sti
fwait
loopne
mov
pop
pop
mov
popa
aad
mov
pusha
or
ret
nop
add
test
jl
mov
jle
aaa
movsl
dec
and
xlat
mov
lock
mov
xchg
and
insl
inc
lahf
outsl
jb
and
dec
std
or
inc
movsb
cmc
in
pop
adcl
cmp
int
aad
pop
cwtl
clc
jbe
div
into
inc
inc
xchg
sti
xor
xor
ds
jmp
sbb
pop
test
xor
fildl
dec
cwtl
loope
movsb
or
popa
push
cwtl
or
xchg
push
jnp
fiadds
xlat
dec
add
inc
adc
sbb
or
add
mov
dec
je
xor
add
or
dec
xor
xchg
in
add
cwtl
sub
icebp
movsl
frstpm(287
aam
into
inc
pop
ss
leave
add
push
mov
add
lock
roll
inc
or
push
imul
sub
mov
iret
jmp
lret
pop
inc
mov
push
push
mov
pop
pop
xchg
cmc
cmp
cmp
cmpsl
inc
insb
xchg
jne
mov
sub
enter
movsb
lds
cs
arpl
jge
in
xlat
int
sahf
xchg
icebp
lret
jbe
test
pop
cs
cmp
push
mov
push
mov
rcrl
cmc
or
js
test
xor
mov
xor
enter
loop
cwtl
xor
adc
mov
sub
add
in
sub
adc
stos
xor
std
add
hlt
jns
or
outsl
loop
shll
mov
loopne
mov
mov
out
mov
ret
push
fucomi
inc
jmp
cwtl
jnp
enter
insl
std
nop
push
dec
clc
cmp
jmp
adc
test
sahf
dec
jg
repz
push
xor
xchg
das
aaa
test
add
jae
xchg
push
fidivl
dec
sub
xor
pop
adc
push
mov
cmp
mov
or
pop
in
int
aas
out
outsl
das
ret
inc
mov
push
dec
mov
cmp
pusha
ret
movsb
loop
and
movsb
icebp
divl
enter
arpl
push
aas
xlat
adc
pcmpgtd
dec
pushf
pop
mov
imul
mov
sarl
mov
inc
lods
ds
and
push
mov
out
adc
or
inc
add
orb
sub
adc
imul
test
add
push
fwait
mov
pop
or
scas
dec
cmp
fnstenv
lcall
xlat
outsb
mov
pop
jnp
and
jmp
out
mov
mov
test
mov
test
aad
inc
adc
inc
mov
mov
movl
lahf
fimuls
int
mov
push
out
xchg
cmpsl
in
aas
mov
subl
js
push
add
dec
pop
cmp
xchg
xchg
mov
fldcw
pop
and
nop
lods
inc
mov
dec
and
push
mov
jae
mov
push
dec
and
push
mov
sub
xorb
ret
jl
out
xor
hlt
pop
xlat
cmp
sub
mov
pusha
cmc
jo
lcall
pop
mov
cmp
roll
test
outsl
pop
jp
mov
jp
xchg
and
xchg
sub
dec
cmp
std
int
loopne
insl
test
or
dec
outsl
dec
jp
pop
lods
cmpsb
int
outsb
pop
out
gs
stos
or
mov
cmp
imul
xor
sbb
test
mov
pop
mov
lsl
mov
das
jge
adc
xchg
pop
sar
mov
imul
in
add
push
push
repnz
popf
xlat
xor
in
mov
pop
movsb
push
int
shl
sbb
push
adc
fwait
imul
inc
insb
cmc
push
inc
popa
inc
popf
cld
iret
cmp
test
pop
ds
mov
mov
and
push
xorb
lea
cmp
jmp
cld
dec
cli
pop
push
adc
decb
xchg
pop
popf
ja
mov
mov
test
das
icebp
out
fstpl
clc
clc
addl
aaa
sub
push
adc
inc
popf
cmp
shll
xchg
xorl
inc
movsb
call
xchg
inc
lahf
push
pusha
push
and
mov
mov
call
xchg
and
xchg
jmp
clc
jl
daa
adcl
push
repnz
cmp
mov
dec
mov
lea
mov
inc
add
and
adc
pop
ret
sub
dec
sub
movsl
int3
jecxz
xor
push
xor
les
pop
fisubs
add
sahf
mov
aam
fisttps
icebp
sbb
call
ss
dec
dec
mov
mov
lock
jmp
xchg
mov
push
aaa
push
icebp
sub
and
lods
pop
pushf
clc
xor
mull
sarb
data16
hlt
pop
push
negl
xchg
pop
dec
pop
cmp
and
xchg
xor
adc
in
js
clc
mov
add
lret
add
or
lock
pop
cli
jae
roll
inc
arpl
mov
jbe
gs
cmpl
mov
outsb
nop
jle
sti
movsb
sbb
lret
scas
sub
out
in
mov
or
cmp
out
dec
xchg
mov
pop
popf
inc
cwtl
pop
adc
xchg
bound
jmp
push
aam
push
jecxz
call
repz
inc
mov
movsb
scas
or
and
repnz
jns
enter
movsb
loopne
data16
adc
mov
in
aaa
push
mov
out
sbb
pusha
sarb
sub
fdivrl
pop
pop
shll
jp
popa
adc
pop
das
lea
and
xor
xchg
ss
aas
movsl
callw
xchg
int
cmc
jmp
imul
inc
xchg
jmp
pop
call
mov
gs
lock
and
out
test
adc
addr16
gs
jbe
push
scas
push
mov
pop
repnz
xchg
adc
mov
xchg
das
lods
stos
dec
mov
pop
jnp
sbb
and
not
repz
loopne
sbb
pop
test
outsl
repnz
out
mov
and
pusha
loop
push
xchg
xchg
cmp
xchg
sbb
jmp
xchg
adc
mov
cltd
xor
cmc
mov
xchg
xchg
inc
fisubrl
dec
bound
lahf
fimull
or
lods
shl
inc
mov
int3
cs
repnz
loope
push
xchg
insb
sub
outsl
dec
ss
and
adc
ja
push
adc
pop
cmp
jmp
mov
sbb
mov
push
imul
and
xlat
in
aad
sbb
data16
out
push
sub
loopne
push
sub
xor
mov
jl
jno
push
aaa
mov
popf
push
adc
imul
mov
sub
or
adc
shrl
arpl
xchg
movsl
js
adc
jmp
sub
iret
cmp
scas
sub
adc
cli
add
inc
pop
push
in
push
xchg
fisttpl
dec
insl
sahf
jecxz
xchg
arpl
subb
jl
pusha
cs
in
pop
ret
icebp
repnz
lahf
iret
pmaxub
outsl
jnp
mov
call
mov
test
inc
pop
mov
ret
stc
aaa
jge
add
stos
sub
and
sbb
jp
movl
and
xor
aas
and
pop
pop
cltd
shrl
or
push
test
xor
cmpsb
or
push
fadd
ficompl
or
je
push
stos
and
into
pop
rolb
testl
adc
pop
inc
call
lock
pop
outsb
testl
jbe
push
inc
jecxz
aam
xor
aaa
inc
or
add
fs
out
rolb
pusha
sti
mov
xchg
inc
ss
xchg
test
dec
adc
sbb
sub
lret
dec
decl
xor
xchg
flds
hlt
push
jno
adcl
mov
pushf
mov
mov
add
out
xor
leave
push
mov
mov
enter
lds
or
or
and
rorl
addb
mov
mov
adc
aad
dec
sarl
dec
lret
pushf
enter
insl
stos
in
daa
shl
icebp
mov
popa
in
cli
rorl
imul
dec
inc
pop
dec
idivb
ror
pusha
outsl
jns
add
nop
jp
fdivrl
fcmovnb
mov
jne
in
pop
add
call
repnz
pop
sti
push
cmp
shll
test
fidivrs
aas
lock
cs
repz
fisubrs
shll
dec
sahf
ja
mov
xchg
iret
pop
dec
cmp
jmp
cmp
fisubrl
or
cmp
je
mov
cwtl
jle
xchg
cltd
sub
sub
addr16
add
es
fucomip
add
cwtl
adc
imul
xchg
insl
stos
push
mov
imul
xchg
jno
mov
jl
movsb
aam
mov
jbe
movsb
adc
mov
addl
jg
fistpl
pop
movb
or
lret
and
rorb
xchg
popl
lods
fs
mov
out
sahf
add
repz
lret
jns
add
cmp
inc
cwtl
cmc
and
js
rcrb
inc
aad
imul
dec
push
test
sub
call
jns
mov
cmp
sub
lahf
and
adcl
sbb
pop
mov
jg
lds
shrb
push
mov
cld
imul
xchg
loopne
adc
out
out
mov
xchg
dec
inc
iret
popa
cwtl
sahf
pop
push
push
mov
js
push
stc
mov
pop
inc
dec
test
mov
lret
in
pop
mov
mov
dec
jle
sbb
or
pop
aad
push
mov
cwtl
inc
mov
es
push
xlat
mov
pop
ss
hlt
jo
mov
jmp
vpmuludq
cmp
dec
push
add
jo
hlt
and
paddq
out
pause
mov
add
repz
push
test
lods
add
icebp
cltd
sub
xchg
int
xchg
jb
roll
push
lods
shr
aam
data16
cmc
out
sub
adc
or
stos
xchg
or
and
popa
push
stc
je
or
xchg
dec
iret
aad
mov
popa
sub
xor
scas
push
adc
out
sub
stos
jecxz
fcoms
mov
movsb
adc
lret
mov
mov
mov
xchg
data16
sub
and
inc
push
cmp
aam
and
xchg
dec
out
and
push
test
lods
jb
sbb
andl
add
addr16
mov
ss
dec
fcompl
sahf
stc
pop
jecxz
mov
push
xchg
mov
mov
add
lea
dec
and
push
pop
mov
andps
or
sbb
cwtl
push
lods
cmp
inc
rclb
sbb
sarl
push
push
push
mov
lock
bound
pop
mov
mov
mov
and
popa
pop
sbb
xchg
jg
out
in
jns
imul
clc
or
or
add
repz
faddl
pop
pop
jae
push
xor
cwtl
cmp
lds
sahf
sbb
push
loopne
pop
ja
sub
pop
pushf
cli
mov
pop
pop
pop
sbb
gs
mov
into
push
mov
scas
sub
ret
lcall
lcall
shr
xchg
dec
add
and
xchg
and
sub
xor
dec
sub
cmc
cmp
xchg
inc
mov
and
cmpsl
inc
ror
adc
sub
loopne,pn
jno
pop
out
lret
push
pop
mov
add
aas
out
das
hlt
cmc
or
flds
dec
aaa
mov
sbb
pop
mov
dec
sahf
adc
gs
rclb
jmp
and
jne
lea
hlt
out
insl
and
rorl
push
or
mov
aam
inc
stc
into
lods
or
bound
jge
jle
mov
lods
stc
dec
outsb
std
adc
loop
rcrb
insb
mov
lret
jbe
mov
mov
push
dec
pop
pop
xchg
ds
mov
mov
xchg
lahf
cltd
dec
mov
jbe
popf
mov
stc
in
int3
pop
mov
stos
outsb
enter
and
nop
push
mov
mov
subb
jp
fnstcw
pop
dec
mov
cmp
xor
repz
xchg
jl
int3
or
cmpsl
shrl
dec
pop
dec
les
lods
js
jbe
mov
insb
dec
dec
testl
cmc
xchg
jmp
jno
loop,pn
es
jge
xchg
data16
mov
repz
rclb
fsub
jge
into
sub
fmul
rorb
cli
push
mov
testl
into
insb
pop
jbe
mov
loope
xchg
mov
push
ds
dec
push
jg
cmp
dec
pop
mov
jno
arpl
bound
inc
mov
push
hlt
out
push
movsb
divl
arpl
mov
test
fwait
cmpsl
dec
cmp
shll
and
cmp
and
lea
inc
cmc
xchg
inc
stos
cmp
pop
mov
sub
ds
cmc
add
stos
loopne
mov
push
cmp
sub
in
lods
ja
inc
or
sub
push
idivl
xlat
or
pop
push
pop
add
int3
fsubr
dec
jnp
mov
sub
dec
addr16
cmp
jae
adc
bound
lds
pop
movsb
add
inc
test
push
xchg
mov
inc
arpl
loop
xor
mov
cmpsb
sahf
xchg
leave
adc
xor
mov
and
mov
push
je
das
fxch
jno
cmp
push
jbe
sub
leave
addr16
cmp
add
inc
xchg
movsl
mov
pop
mov
aaa
fwait
movsb
sahf
imul
dec
fiaddl
xrstor
cltd
jns
jp
inc
mov
mov
addb
sahf
bound
push
fisubrs
lock
insb
loop
xor
cmp
xchg
cmp
cmp
xor
out
adc
pop
imul
test
xchg
dec
je
push
dec
push
and
out
add
pushl
hlt
int
jle
xchg
mov
movsb
mov
xchg
cmp
lret
adc
mov
mov
cli
xor
pop
jae
andb
xchg
add
lock
ljmp
pop
sub
test
dec
and
or
incl
rcrl
pop
test
jecxz
cmp
enter
jge
adc
hlt
icebp
clc
jae
nop
pop
mov
push
pop
cmp
ljmp
outsb
push
sbb
mov
out
repz
pop
pop
or
dec
pop
sub
jae
test
jp
fidivrl
cs
call
out
mov
cmp
adc
fadds
ja
arpl
xchg
dec
movsb
aaa
jle
aaa
out
lret
mov
fstp
push
lea
xor
sub
xor
mov
mov
insl
pop
in
inc
dec
js
iret
cs
sbb
in
xor
imul
popa
popf
xor
push
stc
sbbl
xchg
sbb
popw
stos
jp
test
pop
and
fs
or
rolb
enter
mov
leave
jp
xlat
imul
ror
mov
push
int
xor
jmp
mov
loop
push
hlt
addr16
fwait
rcll
in
inc
pusha
cmp
nop
xchg
enter
xchg
into
ljmp
pusha
aad
inc
call
add
outsb
push
sub
push
push
aad
stc
gs
jb
dec
xor
jae
sub
cs
xchg
cli
stos
imul
flds
mov
add
cld
je
sub
daa
call
fistps
call
and
fcmove
out
pop
dec
mov
insl
push
push
fidivrs
dec
pop
adc
mov
sbb
xchg
leave
popw
or
jp
cmp
adc
ficoms
jmp
enter
sub
and
inc
data16
lret
imulb
xlat
jno
test
xchg
xlat
jl
or
test
sbb
mov
sbb
pop
mov
lods
mov
inc
enter
dec
inc
jns
loope
sbb
leave
pop
or
jmp
inc
inc
cmpsb
inc
mov
dec
mov
jo
roll
mov
jl
ja
ret
mov
sbb
test
and
scas
cmpsb
cmpsl
test
mov
test
mov
rorl
sbb
mov
mov
cwtl
f2xm1
iret
movsl
adc
jae
xor
stos
fwait
jl
adc
jnp
fcoml
aam
mov
jb
gs
iret
stc
addr16
lret
mov
pop
arpl
pusha
adc
aam
cmp
daa
vaddps
dec
xor
dec
repnz
sbb
or
cmpsl
or
mov
mov
hlt
mov
lock
data16
inc
flds
xchg
imul
inc
push
in
clc
add
or
mov
mov
call
mov
xchg
pop
lcall
test
add
lahf
rcrb
dec
lea
cmp
dec
arpl
bound
ret
and
push
jae,pt
ljmp
or
mov
pop
ret
pop
adc
ss
pop
add
sbb
mov
out
mov
and
mov
lods
adc
ffree
adc
pop
push
pusha
mov
jge
leave
fstl
and
shll
loop
shrl
cld
sub
jp
inc
sub
stc
loopne
imul
imul
xor
rcll
out
xor
mov
sub
fildll
mov
cmp
dec
cli
push
dec
data16
or
dec
dec
js
jl
jl
out
ret
mov
cmc
mov
xchg
sbb
rolb
xor
push
int
xchg
cwtl
pop
cmp
mov
jno
pop
mov
ror
add
adc
inc
scas
xor
stos
gs
lock
rcrl
mov
sub
les
sbb
cmp
xor
outsb
sahf
js
dec
dec
repz
pushf
add
inc
jno
mov
xor
xor
dec
pop
cmpb
ss
pop
das
push
sub
xchg
push
mull
or
add
out
xchg
cs
pop
inc
xor
cmp
loope
lahf
or
movsb
inc
test
hlt
adc
bound
sbb
fs
xchg
sbb
xor
or
jg
in
std
lods
xchg
mov
xlat
jecxz
arpl
xor
mov
jnp
inc
push
mov
sbb
jno
jmp
jb
lock
mov
int3
mov
out
pusha
or
sti
jge
das
mov
stos
jne
pop
cwtl
and
test
ljmp
add
insl
sbb
in
mov
xchg
sets
mov
jp
out
movsb
pop
cld
rcr
decb
adcb
hlt
xchg
inc
ljmp
cwtl
mov
dec
mov
daa
push
pop
jbe
xor
mov
adc
inc
and
arpl
jp
sti
sbb
sbb
sbb
jae,pn
nop
aad
pop
mov
std
add
aam
aam
aas
loop
scas
cltd
cli
xor
or
sarl
push
stos
sbb
mov
or
das
push
sti
lcall
xor
sub
mov
testl
lods
jae
aas
loop
or
les
call
stos
out
mov
loopne
ret
adc
cmp
out
cmp
push
pop
dec
mov
dec
sub
fiadds
pop
call
fsubs
lea
fsubrs
cltd
andl
fucomip
jg
andb
fcomip
movsl
das
jno
fsubl
stc
iret
mov
std
lret
sahf
sbb
mov
into
mov
push
dec
stos
jecxz
cltd
pop
add
inc
cmp
mov
push
bound
out
sub
aaa
psllw
lret
or
mov
into
mov
or
popa
and
mov
sarl
test
scas
sbb
das
jg
xchg
xchg
aaa
test
rclb
in
ss
dec
ret
scas
ss
and
sub
repnz
xor
or
xorb
ret
dec
mov
lods
scas
sarb
pushf
dec
iret
xor
lret
xor
pop
add
inc
nop
push
add
jmp
mov
xlat
scas
inc
inc
jb
outsb
jmp
xor
mov
lcall
fwait
pop
popa
mov
js
fistpll
mov
test
jle
fs
adc
in
sbb
repz
jnp
jge
in
hlt
cmp
push
xchg
xchg
adc
sub
cwtl
cmpsb
cmpsl
mov
int3
inc
cmc
inc
pop
and
xchg
shll
dec
insb
bound
fmul
add
out
pop
clc
les
pop
lret
xor
popf
out
pop
jg
mov
sbb
xchg
scas
pop
fildll
fwait
pop
jge
push
push
test
mov
dec
fwait
mov
hlt
or
inc
in
rol
add
mov
cs
insl
inc
jno
test
js
jae
hlt
sbb
cltd
aam
push
rorl
xchg
test
fidivrl
sub
out
movsb
xor
jmp
call
cmp
outsl
cmp
inc
pop
out
lret
shll
lods
jle
sbb
mov
in
ficompl
xor
insl
hlt
incl
push
aad
notb
sub
sub
das
adc
out
movsb
jbe
scas
cmp
leave
ret
sbb
xchg
jne
cmp
jmp
jmp
test
dec
jp
stos
daa
movsb
mov
inc
xchg
leave
stc
in
mov
insl
fst
and
arpl
mov
adc
frstor
insl
xor
mov
cmpsb
adc
in
or
aaa
xor
mov
fisubl
push
mov
push
lahf
dec
jb
lret
call
mov
fisubrl
pop
pop
lock
in
sub
add
adc
push
mov
sub
mov
scas
pop
dec
xchg
insl
fs
aam
mov
leave
loopne
addr16
adc
lcall
jp
add
movsl
out
out
fmulp
mov
test
mov
popa
mov
inc
jl
sub
mov
push
xchg
clc
andl
imul
fnstenv
scas
sub
or
push
daa
xor
das
popa
and
movsl
push
in
sti
xchg
add
pop
xor
out
imul
insb
dec
mov
sbb
push
lods
push
sbb
pusha
adc
lods
repnz
insl
mov
inc
inc
jne
cmp
sbb
gs
in
pop
xlat
inc
nop
push
sub
adc
jno
mov
push
inc
push
int
cmp
gs
push
dec
inc
xchg
jg
ljmp
ss
mov
add
xchg
sub
mov
jae
out
into
mov
in
insl
mov
xchg
sbb
pusha
xchg
fadd
stos
add
dec
xor
and
cmp
or
cmp
stc
add
inc
fisttpll
jb
in
mov
int
jge
sbb
xchg
mov
sarb
adc
imul
ljmp
xor
ss
mov
push
or
or
sbb
test
sub
subb
ret
or
sub
adc
mov
cwtl
pop
cmp
push
test
xlat
mov
xchg
sub
lea
iret
aam
and
xchg
movsb
incb
sub
inc
pusha
arpl
inc
jle
dec
adc
stos
adc
pop
inc
ja
out
xchg
push
pushf
inc
out
sub
mov
aam
xchg
xor
mov
in
push
xor
hlt
fstps
push
rclb
sub
xor
mov
sub
pop
outsl
subb
adc
add
push
leave
push
sti
cmp
popa
repnz
leave
jae
cltd
clc
andl
je
jbe
add
push
hlt
fwait
mov
and
ja
jg
pop
or
cmp
pushl
cmpsb
mov
cwtl
sbb
push
mov
in
pusha
cmpsb
cmp
xchg
mov
jne
jmp
fstl
ret
scas
fwait
add
inc
jns
mov
cli
fsubs
mov
mov
outsl
movsb
mov
mov
subl
iret
dec
mov
out
pop
or
or
test
mov
fdiv
mov
sub
push
cmp
push
adc
mov
mov
out
outsl
jb
leave
out
es
push
and
sar
lret
dec
adc
ret
pushf
lods
adc
sub
pusha
or
lret
ja
or
mov
lahf
nop
fstps
cmp
in
or
ret
gs
into
mov
xlat
mov
pop
jns
lock
pop
pop
das
push
sarb
bound
imul
or
scas
jae
jnp
xor
and
cli
stos
xchg
iret
mov
add
daa
dec
aad
push
sarl
shlb
andl
fdivrl
stos
jle
push
imul
dec
xor
or
int
dec
lea
lret
ss
scas
xor
lcall
outsb
clc
std
mov
or
fnstenv
stos
cli
in
aad
scas
aad
sub
dec
outsb
pop
stos
cmp
pop
test
fisubrl
cs
pop
xor
adc
push
jae
adc
and
repnz
push
cmp
mov
or
mov
clc
xor
test
sarb
push
movsb
push
mov
arpl
stc
lods
xor
mov
mov
adc
sub
add
aas
int
xchg
lods
push
decb
sbb
lock
or
test
andl
mov
lods
shrl
xchg
xchg
in
imul
insb
ss
or
aad
mov
push
dec
xor
pop
pop
pop
mov
mov
xchg
insb
cmovge
dec
test
mov
xor
in
rorb
jae
xchg
mov
push
in
js
cmc
sbb
xor
movsl
sub
and
in
dec
xchg
in
cmpsl
xchg
or
cs
cs
lea
mov
mov
inc
push
or
and
outsb
xlat
mov
scas
aaa
clc
in
cs
add
les
fs
push
sahf
call
cmpsl
inc
jle
enter
dec
dec
pop
cmp
lds
jns
das
mov
into
shlb
inc
mov
mov
sbb
mov
dec
push
jo
icebp
adc
adc
sub
xchg
call
je
inc
out
leave
cltd
push
fnstsw
jle
pop
jb
sbb
mov
lds
mov
sub
jecxz
jo
add
add
or
xchg
fwait
enter
inc
dec
lods
out
inc
pop
inc
xor
xchg
push
rol
lret
out
dec
out
lods
xchg
das
subb
adc
mov
imul
mov
pop
ret
pop
in
lahf
add
mov
xor
movsl
mov
test
push
jb
mov
and
cli
jnp
inc
dec
test
and
mov
jg
and
mov
and
scas
scas
aad
ja
jl
hlt
jnp
dec
dec
jne
push
cmp
xchg
mov
les
xor
xchg
mov
xor
out
adc
movsl
and
xor
pushf
dec
leave
cli
pop
mov
ficoms
popf
lret
mov
es
mov
imul
dec
cmc
push
jle
mov
sub
jg
andl
sub
shl
in
push
cltd
push
mov
daa
jb
lret
lea
pushf
mov
sub
sbb
int
and
loopne
clc
cmp
cmc
cmp
and
mov
sti
sti
arpl
pop
ja
mov
mov
stc
out
in
inc
enter
mov
out
and
push
js
pop
jmp
dec
lods
cmp
imul
cwtl
push
pop
mov
push
and
lea
dec
psubd
mov
loopne
stos
jg,pt
cli
ror
jnp
fistpl
cmp
push
pop
xor
fsts
ret
cmp
jo
fisttps
cmp
xchg
lods
andb
xor
dec
pop
mov
jp
mov
lods
sbb
movb
jne
sbb
push
push
inc
xor
lds
and
mov
enter
push
bswap
jb
xchg
push
pop
xor
out
mov
or
ret
mov
jns
pop
fs
xchg
jae
mov
adc
das
mov
fsincos
add
mov
mov
mov
cmc
cmp
mov
and
jno
mulb
dec
jmp
arpl
inc
mov
rcll
leave
mov
stc
or
loopne
faddl
in
pop
cmc
mov
cld
push
inc
out
sbb
mov
movsl
or
mov
jo
cltd
stos
out
xor
pop
xchg
scas
lret
sub
adc
push
mov
mov
sbb
xor
add
sbb
mov
ret
shl
js
loopne
jne
or
pop
aas
iret
repnz
fisubs
push
xchg
xchg
hlt
push
xor
push
enter
and
jge
add
outsl
adc
xor
movsb
mov
xchg
stos
mov
inc
push
or
icebp
fnstsw
stos
aaa
out
loopne
fstl
mov
cltd
pushf
mov
mov
mov
push
in
mov
test
mov
xlat
push
push
lea
inc
inc
mov
sbb
mov
push
icebp
mov
inc
jnp
sbb
loop
rcr
addb
add
repz
mov
lds
ja
mov
add
cwtl
sub
sbb
mov
dec
inc
fs
hlt
lock
shlb
rol
scas
sti
mov
add
jbe
push
test
call
and
hlt
and
cltd
loope
jnp
test
into
or
popf
jge
ss
out
cwtl
xlat
int
scas
xchg
cmp
push
sti
dec
sahf
inc
outsl
aaa
push
mov
enter
mov
jl
popa
sub
leave
pop
sbbl
sub
xor
jno
adc
mov
pop
inc
int3
test
dec
call
xor
lds
jge
movsb
sbb
jbe
xchg
mov
aam
and
or
or
in
movsl
mov
or
sbb
dec
dec
mov
xchg
pusha
fisttps
xor
xorl
inc
cld
or
cmp
xor
stc
push
repz
jp
sti
jecxz
mov
cmp
fwait
lds
jbe
and
add
repz
inc
sbb
popa
adc
push
jmp
mov
mov
pop
popa
hlt
ror
push
cmp
fldl
xchg
mov
aad
adc
push
icebp
repnz
movsl
push
mov
addr16
imul
ljmp
iret
mov
cld
jne
bound
test
out
test
sub
orl
imul
repnz
fsub
push
sub
xor
test
adc
push
xor
and
jg
and
cli
sbb
hlt
sbb
gs
idivl
fwait
movl
mov
pop
jecxz
in
dec
xor
add
insb
addr16
arpl
pop
out
pop
dec
adc
aad
fnstenv
mov
or
push
push
test
sub
cs
inc
popf
adc
out
xlat
or
sbbb
inc
cmp
pusha
test
push
jb
pop
add
repz
iret
testl
xlat
sarb
data16
jns
xchg
jbe
fcmovnbe
lods
bnd
jbe
sbb
dec
cmc
xchg
dec
mov
filds
bound
rorl
jne
sahf
int
std
mov
xlat
lds
adc
inc
mov
fwait
arpl
in
sub
shlb
push
lcall
mov
push
jnp
fbld
jecxz
mov
mov
or
mov
in
rcrb
mov
ljmp
in
adc
or
ficoml
fsubl
sbb
push
stc
fdivrs
pop
movsb
pop
push
ss
fcomps
and
addr16
mulb
jne
inc
movsl
push
fs
xor
mov
push
lret
xor
test
pushf
in
int
sbb
mov
dec
and
pop
jmp
push
hlt
or
dec
mov
fistpll
mov
sbb
adcb
dec
bound
mov
xchg
loopne
lret
out
push
cmp
leave
loopne
fimuls
jmp
xor
and
aas
mov
or
or
arpl
and
dec
cld
jle
enter
xchg
mov
mov
aaa
es
adc
add
mov
pop
rcl
in
or
and
mov
rep
sti
xor
es
in
cmp
fsts
xchg
adc
inc
inc
adc
nop
test
imulb
and
mov
inc
xor
push
fwait
fwait
and
jo
dec
nop
test
enter
movsl
daa
xor
mov
js
inc
mov
mov
outsb
lahf
sub
popa
mov
inc
fistpl
sti
adc
out
fwait
sbb
dec
loopne
out
mov
lds
bound
cmpsl
adc
lods
data16
adc
push
add
inc
fsubs
pop
mov
stos
xor
xchg
test
cwtl
lock
dec
sti
cmp
mov
jmp
ljmp
xchg
sbb
push
mov
ret
sub
les
mov
lods
mov
int
fldl
loope
int3
por
and
inc
mov
stc
rcr
lods
xchg
push
fstpl
test
mov
pushf
mov
cmp
xchg
push
mov
jb
imul
shl
cli
in
push
adc
xor
imul
xorb
cli
test
icebp
out
or
push
mov
out
xchg
movsb
pop
in
push
aas
dec
and
shlb
mov
sub
imul
std
mov
sti
mov
icebp
sbb
push
push
sbb
mov
iret
movsb
push
out
ss
inc
out
fisubl
imulb
mov
or
insl
pop
xlat
aad
push
subl
cmp
mov
inc
nop
mov
xor
or
stos
xchg
pop
dec
nop
or
clc
adc
xchg
push
imul
adc
push
lret
insl
and
pop
testb
je
out
movsl
dec
out
cli
jns
pop
xorb
mov
nop
rcrl
mov
cmp
lock
jne
xor
dec
jb,pn
scas
inc
clc
lds
in
sbb
adc
inc
push
daa
mov
and
jle
add
pop
lock
xchg
cmp
outsl
ret
inc
mov
jb
pushf
push
cmp
aam
cs
jne
jo
push
into
stos
push
pusha
aad
mov
je
xchg
call
add
or
jns
js
nop
scas
push
repz
mov
jae
out
add
jne
xor
cwtl
cmp
loope
outsl
je
cmpsb
jb
pop
and
xchg
cmp
aaa
aam
jb
loopne
or
mov
enter
repz
add
cmp
cmc
push
enter
dec
scas
dec
in
bnd
or
clc
flds
outsb
lds
xchg
popl
cvtps2pi
arpl
dec
jbe
and
dec
ds
stos
inc
into
js
ret
xorl
scas
xor
lock
pop
sbb
pop
sbb
jecxz
cs
mov
pop
mov
sub
movsb
adc
mov
push
xchg
dec
insl
mov
or
sbb
inc
adc
add
or
inc
pop
lret
inc
cmp
decb
push
xchg
inc
xchg
insl
daa
lods
loopne
fs
dec
push
mov
das
sbb
add
xchg
cmp
movsb
gs
push
sti
or
dec
cltd
ret
insl
cmp
pop
add
mov
fcomp
in
inc
repnz
sahf
push
and
xchg
loope
jnp
jmp
mov
pusha
rol
pop
xchg
pushf
xchg
lret
sbb
repnz
ljmp
xchg
mov
mov
je
testb
pop
inc
xchg
clc
loope
loope
or
dec
movsb
hlt
aaa
mov
mov
pushf
notl
jge
sub
mov
enter
test
jl
mov
or
das
enter
mov
or
les
je
dec
scas
jg
xchg
icebp
mov
pop
ljmp
icebp
addr16
inc
push
sub
popa
aas
mov
cmp
adc
out
push
ret
scas
lret
jl
sub
add
add
jbe
push
shlb
inc
roll
push
inc
dec
mov
pop
mov
push
fsubs
loop
movsl
xor
inc
inc
inc
mov
cmp
xchg
in
daa
bound
sbb
inc
cmp
out
push
jecxz
xchg
cmp
dec
cli
dec
push
pop
push
call
cmp
push
out
mov
cmp
clc
out
insb
inc
inc
scas
cwtl
testl
add
pop
pop
mov
add
nop
in
pop
cli
arpl
pop
fsubrp
test
adc
dec
dec
jg
push
mov
repnz
sbb
out
dec
push
in
xchg
jle
ret
xchg
xlat
movsb
jl
and
dec
and
movsl
jno
dec
jns
cmpl
fisubl
aaa
repnz
adc
and
pusha
mov
cmpsb
dec
inc
aam
test
jbe
cli
xlat
jge
addb
mov
xor
pop
mov
or
push
mov
mov
int3
test
lret
inc
insl
mov
dec
pop
mov
test
dec
push
sub
mov
cmp
xchg
jae
pop
fnsave
push
dec
jg
xchg
jge
or
repz
leave
or
les
xlat
fistpl
fdivs
test
out
pop
call
in
aas
sarb
mov
dec
leave
es
pop
add
lds
pop
xlat
shrb
adc
cmp
mov
ja
cwtl
lret
mov
out
fs
cmc
lahf
mov
mov
adc
xchg
xchg
mov
aad
dec
insb
pop
out
xchg
xor
jl
sub
stos
pusha
push
mov
jo
jle
inc
in
dec
test
ror
movsl
sbb
sub
fsubrp
fimull
xor
mov
std
jae
js
js
in
mov
push
cltd
sahf
aas
pop
adc
mov
jg
into
mov
mov
std
adc
in
insb
data16
mov
mov
stos
xchg
scas
ja
inc
pop
ret
dec
jle
mov
icebp
fbld
imulb
lods
jg
rorl
push
jnp
mov
test
jae
js
cmp
lds
jl
stos
js
pop
inc
pop
cld
adcl
pop
sub
sbb
imul
push
push
mov
into
sahf
dec
add
popf
cld
add
mov
out
fwait
cmpw
ret
ja
inc
sbb
nop
imul
and
or
pop
push
mov
mov
dec
adc
and
or
je
pop
arpl
xchg
push
rclb
mov
adc
mov
mov
dec
mov
stos
faddl
inc
loop
pushl
test
dec
inc
fiadds
les
stos
jns
dec
sbb
add
add
movsl
out
xor
or
test
cmp
repnz
push
mov
jge
movsb
pop
push
pop
inc
rolb
and
out
jb
lret
sbb
fcomps
ds
daa
and
or
arpl
push
insb
adc
decl
dec
pop
mov
addl
dec
add
xor
popa
repnz
cld
into
repnz
push
jg
xlat
es
sub
mov
hlt
mov
movsb
loop
sbb
aas
lds
jno
inc
push
adc
mov
pop
pop
adc
outsb
lcall
inc
inc
adc
scas
js
test
nop
cli
xchg
mov
xchg
aad
add
sub
xchg
movsl
es
cmc
add
lret
push
or
shll
xor
jne
pop
xchg
loop
push
xor
pop
or
test
mov
out
cltd
xor
cmpsl
fistps
dec
push
inc
pop
dec
and
cmp
mov
adc
sub
iret
je
mov
scas
mov
add
adc
addr16
fisttps
mov
movsb
test
pop
pop
push
mov
push
mov
jle
nop
fidivl
mov
xor
xchg
pushf
les
pop
outsl
fsubrl
mov
jnp
rorl
sub
mov
push
push
out
hlt
loopne
iret
call
loop
pop
ret
xchg
cs
jl
dec
and
in
pop
inc
mov
jno
div
dec
jp
cwtl
cmp
cmpsl
cmp
fsubl
test
jp
jb
icebp
mov
mov
add
xchg
inc
mov
imul
cltd
test
mov
iret
jb
xor
cmp
xchg
stos
loope
pop
mov
inc
outsb
aaa
xor
xorl
dec
or
insb
ds
pop
adc
je
dec
arpl
gs
lcall
push
cltd
or
sti
call
jae
mov
loope
and
adc
insl
push
out
inc
push
insb
inc
cs
or
jbe
or
ret
sbb
sbb
aam
hlt
scas
pop
enter
aam
mov
push
mov
pushf
xchg
addr16
cmp
out
push
clc
or
in
adc
js
inc
mov
ljmp
cwtl
imul
movsb
ds
jno
mov
and
add
mov
repnz
mov
add
dec
cmp
mov
push
imul
sti
or
jae
lods
sub
add
sbb
add
nop
add
add
test
mov
or
mov
call
into
sahf
sbb
mov
adc
push
lock
mov
out
jo
insl
fs
adc
jbe
ret
int
and
add
mov
pop
mov
inc
cmc
adc
aas
xchg
loope
shlb
jge
mov
je
lods
push
pop
imul
push
mov
rcrl
rcll
pushf
scas
fstp
lock
inc
lret
and
sbb
xor
iret
jns
addl
inc
add
adc
xlat
jle
in
jb
sub
mov
push
push
adc
cld
mov
and
loopne
and
outsl
fs
sub
jae
dec
clc
inc
and
and
mov
enter
pop
jno
outsb
rcrb
jle
inc
movsl
mov
xchg
or
scas
or
inc
in
cmpsb
subl
inc
mov
push
adc
add
popf
data16
lock
sub
sarb
fcmovu
sub
call
les
popf
loop
aam
cmpsl
sti
pushf
cmpsl
push
sbb
pop
push
sti
pop
stos
sbb
lods
xchg
insl
cli
or
jns
mov
andl
pusha
insl
cmc
sbb
stc
pop
ja
adc
and
imul
xor
jno
xor
jno
dec
xor
inc
cmp
fistl
inc
clc
pop
mov
push
add
cmc
mov
jnp
scas
jmp
sub
cld
hlt
filds
jb
sub
rolb
out
mov
jecxz
rcl
pop
jl
out
fsubrl
clc
mov
arpl
mov
pop
movsb
push
scas
pushf
scas
idivl
clc
mov
scas
adc
pop
lds
inc
or
add
aaa
inc
mov
xchg
inc
aam
dec
jge
mov
cmp
ja
das
out
dec
jecxz
dec
js
push
pushf
mov
lcall
icebp
out
mov
mov
popf
lret
mov
mov
sbb
sbb
fimull
and
sbb
clc
and
mov
scas
out
or
jge
dec
adc
or
movsb
xor
fucomip
mov
or
pop
movsb
jo
fwait
inc
add
push
in
gs
mov
jmp
sbb
lds
push
lods
inc
cs
mull
cmpb
or
fcmovbe
outsb
jnp
movsb
lret
xchg
sbb
cld
fwait
add
movsl
addl
push
jmp
pop
mov
xor
or
sti
cmp
fcomi
dec
ficoms
test
std
push
aaa
pop
or
fs
and
int3
fimuls
in
mov
xchg
lock
xchg
out
inc
sti
aam
loop
mov
mov
mov
push
xchg
loopne
jnp
icebp
dec
fcom
push
test
addl
mov
mov
cmp
add
dec
adc
sbb
fdivrs
and
pop
push
out
ficompl
outsb
push
and
dec
cmp
outsl
sti
pop
rclb
pushf
mov
fmuls
lods
jno
test
sbb
adc
sub
jb
push
pusha
xchg
scas
mov
movsl
xchg
rorb
rcll
js
sub
pop
or
adc
jne
sbb
xchg
dec
or
mov
shrb
mov
push
stc
and
adc
pusha
repnz
fldt
xchg
jg
push
push
cmp
push
nop
push
adc
call
loopne
pusha
xchg
popf
push
adc
lock
jo
cmpsb
clc
int
test
sub
sbb
addr16
rol
mov
cmpl
mov
or
lods
aad
sti
xchg
cmp
int3
adc
mov
std
mov
mov
dec
sbb
dec
clc
sbb
dec
mov
sbb
inc
add
pop
cmp
adc
sub
popa
mov
cmpsb
mov
or
mov
jno
addl
cli
jbe
add
ret
insl
arpl
out
sbbl
cltd
imull
ds
dec
cmp
dec
and
adc
movsb
adc
pop
pushf
stos
insl
push
add
aad
insb
or
push
adc
das
jbe
mov
test
jno
jnp
add
mov
xchg
call
mov
sbbl
lods
jae
test
or
pop
and
fistps
fistl
ljmp
sahf
repz
mov
jns
test
loope,pn
into
adc
cmpsl
sbb
sti
fcomp
lret
mov
mov
mov
inc
and
mov
xchg
or
arpl
aas
test
fstl
xor
out
pop
inc
shll
or
push
mov
dec
mov
xchg
cmc
out
inc
lock
repz
lods
mov
pop
push
lahf
ja
jbe
inc
filds
out
sahf
jb
jg
push
js
hlt
mov
roll
lods
xchg
dec
mov
xor
add
iret
dec
test
xor
inc
inc
jne
xchg
insb
fsubs
or
push
popa
sar
xor
mov
pop
sub
add
jp
and
loope
daa
stos
cmp
std
int3
sbb
loopne
dec
scas
pop
jne
lods
pop
lods
ss
inc
mov
or
dec
out
xor
stos
movsb
fwait
mov
iret
inc
cmpsl
inc
pop
jns
sub
das
jns
mov
aad
das
mov
cmp
inc
cmp
lret
mov
movsl
or
cpuid
sbb
push
repnz
in
push
insl
and
loopne
adc
shl
das
xor
xlat
jnp
cs
loopne
and
ljmp
or
mov
jg
jmp
testl
and
test
mov
into
repz
sbb
shrb
inc
add
sbb
int3
lcall
xchg
stos
xchg
mov
cmp
addr16
xlat
clc
or
inc
cmp
mov
enter
xchg
and
dec
data16
and
ret
lock
cs
inc
and
mov
pop
mov
sub
outsb
in
sarl
xor
out
mov
pop
inc
dec
das
outsl
sbb
cmc
add
icebp
ljmp
add
pop
mov
aam
cwtl
insl
push
int
dec
mov
mov
mov
push
jmp
jl
test
stc
mov
les
repz
arpl
or
cmp
mov
pop
stc
test
push
pop
int3
ja,pn
pusha
jnp
pop
pop
nop
ret
subl
insl
mov
lret
popf
cmpsl
or
inc
data16
sti
rorl
repnz
mov
pusha
shlb
mov
aaa
cmp
lcall
popf
mov
std
outsl
sti
int
xchg
push
adc
cmp
pop
nopl
pop
aam
xchg
sbb
subl
sub
cltd
ret
ljmp
ljmp
daa
popa
enter
std
cmp
sub
out
mov
dec
jae
or
mov
data16
dec
push
stos
insb
jnp
stos
nop
fnstcw
loope
incl
pusha
xchg
and
xorb
and
cmp
pop
cs
mov
repnz
daa
inc
dec
andl
rcl
or
mov
cmp
add
cmp
imul
in
call
push
loop
fstp
or
popf
inc
lea
nop
lahf
cs
lret
xor
pop
stos
push
pop
pop
popf
push
fs
xchg
dec
jecxz
rorl
pop
loope
pop
pop
sahf
rclb
xchg
int
or
js
cmp
push
lahf
outsb
and
stos
test
or
mov
insb
fsubrl
adc
mov
pop
xchg
aas
out
sbb
sbb
cld
push
sub
into
sbb
adc
repz
fidivs
test
int3
pop
cmpsl
lods
dec
xor
push
push
fisubl
mov
mov
or
jae
gs
insb
popf
pop
jp
push
repnz
in
fistps
js
test
ret
gs
jnp
das
push
fistl
les
or
nop
pushw
loop
out
adc
ljmp
xor
xchg
pop
cli
sbb
push
xchg
fnstcw
sbb
jl
fadd
mov
loopne
imul
dec
push
popf
mov
nop
das
les
xor
out
fildl
scas
inc
push
fs
mov
stc
ljmp
push
stc
jnp
in
in
cmpsb
stc
psrlq
add
rcr
ret
enter
stc
outsl
push
inc
sub
or
jmp
pop
xor
dec
addr16
icebp
mov
jo
mov
cmpsl
pop
dec
cmpsl
jmp
aas
cmpsl
mov
inc
fists
and
push
xor
sub
out
mov
pop
cmp
movsb
out
jbe
sahf
sbb
sub
inc
sbb
ljmp
cmpsb
test
sub
shr
and
xor
into
rclb
mull
jae
dec
mov
test
mov
fmuls
aam
add
inc
pusha
push
repnz
sarb
loopne
sub
push
push
movl
cmp
and
aas
test
outsl
push
aaa
pop
in
mov
mov
sub
iret
test
sbb
sbb
cli
out
repz
sub
iret
fmul
out
les
jmp
test
or
shl
imul
lods
xor
cwtl
loop
es
insb
cmp
jno
test
rcll
jecxz
bound
fs
adc
lods
mov
popf
cmpsl
pop
aas
sub
sub
data16
fnstenv
push
push
scas
cltd
cld
or
out
sti
xchg
xor
mov
push
iret
or
cmp
decb
push
outsl
xorb
movsl
jg
mov
pop
and
repnz
test
mov
mov
rol
out
ja
iret
in
inc
fwait
dec
mov
sub
sub
int
fdivs
stos
push
aas
inc
and
jns
lock
pusha
xchg
mov
mov
mov
int
mov
es
iret
inc
push
pushf
jg
test
pop
ret
mov
xlat
in
jbe
scas
js
dec
jb
and
cmp
cli
pshufw
add
mov
add
dec
xchg
fildl
or
addr16
dec
in
ret
pop
scas
lret
out
jb
mov
or
cli
push
addr16
imul
mov
pop
fdiv
scas
push
lcall
lcall
add
add
jp
aad
int
and
movsb
sub
pop
in
cmpsl
xchg
ja
cmc
jl
mov
fsubrl
mov
xchg
inc
movntq
out
or
aaa
mov
orb
negl
pop
cwtl
fidivrl
loope
lods
sub
shl
cltd
xchg
mov
repnz
aam
sysret
arpl
adc
jl
mov
popa
das
scas
shr
xor
mov
sbb
cmpsl
pop
mov
mov
or
mov
pop
into
scas
pusha
mov
loop
es
ret
jmp
stos
pop
xor
push
cmp
mov
gs
fisttpl
pop
test
jno
sbb
inc
test
cmp
xor
and
push
aas
mov
xchg
jb
mov
inc
lcall
dec
rcrl
pop
dec
adc
inc
aas
xchg
jmp
push
jbe
xchg
or
int3
in
das
movsb
jnp
cs
out
adc
xor
lret
fcompl
popf
cmpsb
mov
mov
and
sbb
outsl
or
lret
mov
jne
mov
jb
add
imul
clc
test
fcmovu
enter
sbb
imul
stos
jmp
mov
ret
mov
jle
push
push
loope
movsb
cmp
or
sbb
sbb
mov
repz
inc
lods
fiadds
sti
pop
cmp
jmp
icebp
dec
fstl
pop
mov
mov
orb
sbb
push
sub
mov
jno
mov
inc
lret
fildll
adc
fsubrs
xor
cwtl
or
jo
data16
cmp
xor
sub
xchg
xor
and
sti
cwtl
inc
test
in
into
in
jp
iret
mov
pop
aam
jo
xor
sbb
gs
xor
cmp
test
pop
jo
cmp
fstps
push
push
cs
fmuls
ja
daa
push
jp
out
icebp
push
out
pop
lock
add
xor
mov
cli
jne
push
add
pop
ljmp
insb
xor
add
ja
jbe
fisubrs
push
movsl
cmp
pop
pop
lock
jmp
mov
push
mov
push
call
cmp
mov
pop
pop
hlt
movsb
jbe
mov
daa
arpl
std
and
scas
call
push
fidivrs
movsl
and
pop
dec
pop
push
lock
mov
dec
mov
out
push
aam
jecxz
mov
or
call
rclb
push
mov
jle
xchg
pop
outsl
enter
aam
stos
mov
mov
stos
add
mov
mov
mov
iret
nop
aam
scas
mov
movsb
sti
cmp
pusha
push
and
loop
andb
xchg
dec
cmc
inc
ja
or
mov
dec
mov
lret
incb
and
mov
push
xchg
aad
add
dec
andl
outsb
das
xchg
mov
mov
mov
repz
xor
mov
pop
sbb
test
iret
or
pop
pop
add
and
inc
or
dec
sbb
andb
cmp
data16
ds
xchg
mov
outsl
push
or
xchg
xor
cmc
aam
sbb
mov
cwtl
adc
sbb
rclb
es
outsb
pcmpgtb
aam
cmp
popf
sbbl
dec
js
mov
add
arpl
jns
lret
mov
sub
test
insb
aad
mov
dec
test
mov
jo
inc
aad
mov
cwtl
shll
loop
aam
add
movsb
cmp
xchg
add
jmp
imul
pop
movsb
cmp
mov
cmp
out
xchg
push
sub
ljmp
mov
inc
xchg
fistps
out
sbb
inc
mov
fxch
jo
add
jmp
rcrl
int
lods
movsl
cmpsb
add
sbb
aam
repz
push
in
or
loopne
je
fld
xchg
mov
pop
ja
cmp
push
pusha
stos
call
sti
ss
aaa
cmp
push
xor
dec
pop
cli
lret
xchg
scas
or
sub
inc
stos
or
pop
and
xchg
mov
xor
and
fiaddl
xor
cli
cld
push
pop
or
rolb
loopne
lcall
inc
cld
lods
ljmp
and
sub
iret
div
aaa
mov
jle
dec
repz
dec
jg
lret
popf
pushl
adc
mov
lcall
sbb
adc
xchg
mov
rol
dec
mov
rolb
lods
fs
xlat
sub
movsb
jl
xlat
popa
inc
fsts
xchg
in
les
std
push
decb
shr
jge
xor
or
sub
fs
insl
lds
gs
ret
in
pop
jb
nop
push
ja,pt
das
and
dec
std
cmpsb
mov
sbb
push
mov
mov
ljmp
adc
jo,pn
aad
ja
cmp
sub
test
sbb
ss
jmp
pop
lods
fs
cld
or
inc
jmp
xor
sarl
mov
sub
cmp
icebp
fsubl
int
hlt
pop
jg
inc
xchg
inc
and
push
fwait
mov
aas
mov
cmpsb
push
mov
ja
push
cmp
jb
mov
push
xor
fbld
mov
adc
add
out
sarb
pop
imul
in
fisubl
xchg
lock
mov
sub
mov
inc
mov
dec
addl
and
inc
cmc
dec
cmp
lock
dec
hlt
hlt
orps
jmp
mov
fldl
adcb
jl
pop
and
gs
fld1
jnp
xchg
mov
sbb
aas
xchg
lods
movsl
movsb
xchg
xor
pop
enter
dec
test
xchg
adc
jb
imul
or
mov
xchg
jl
jp
and
cmp
push
jmp
jg
sub
jae
sbb
mov
sbb
lds
add
jb
cmp
mov
inc
int
ss
ret
ret
inc
xor
pop
dec
cwtl
divl
ja
aas
xchg
clc
cld
stos
ds
xlat
lret
lret
add
scas
aad
pop
cs
mov
adc
xlat
jne
push
add
mov
int
add
cwtl
cmp
sbb
sub
cmp
pop
cmp
jmp
dec
add
lds
or
push
gs
push
jl
adc
mov
mov
rolb
fsubs
mov
test
imul
mov
popa
push
inc
imul
bound
out
adc
sti
faddp
sbb
insb
dec
adc
inc
mov
sbb
mov
adc
sub
mov
lcall
pop
cmp
and
ja
clc
lret
or
test
repz
out
dec
scas
push
xlat
repnz
ret
adc
mov
movsl
push
ret
mov
xchg
fstpl
cli
push
in
mov
adc
lea
or
jp
cli
stos
adc
jno
ja
or
mov
xchg
add
test
cmp
sbb
out
imul
out
pop
dec
dec
fbld
xor
rolb
test
ljmp
mov
hlt
add
pop
xor
clc
ss
lcall
lods
mov
push
and
in
or
cld
in
and
jbe
mov
outsb
repnz
fsubs
jae
sbb
rcrb
xor
out
fiadds
lea
out
popf
test
inc
xor
stos
fldt
cmpsb
scas
lahf
stos
sbb
cmp
sbb
jbe
push
pop
fsubrs
icebp
fdivl
xchg
lods
pop
fisubs
cli
sub
dec
mov
or
call
fisttpll
daa
mov
sbb
sub
push
or
add
cmp
inc
add
mov
mov
clc
inc
push
mov
xchg
jge
adc
insb
lret
push
andb
inc
cld
arpl
pop
jo
cmp
add
mov
add
loope
out
adc
call
icebp
inc
push
mov
mov
pop
or
fwait
nop
adc
cwtl
out
cmp
xchg
adc
icebp
shl
bound
cld
cmp
xchg
xchg
fbld
test
sti
pop
jb
mov
fimuls
jmp
cmpsl
xchg
sub
pushf
pop
daa
sub
stos
enter
or
std
pop
mov
shlb
stos
mov
adc
sbb
into
mov
jecxz
sub
xor
xchg
mov
aaa
or
or
push
roll
loop
push
push
dec
mov
push
jge
dec
inc
inc
mov
test
test
test
fidivrl
push
neg
cmp
dec
fwait
ds
adc
xchg
subb
es
push
inc
out
mov
cltd
inc
jb
or
dec
mov
lcall
loopne
and
jb
jmp
ds
dec
cld
test
cmc
or
pop
pop
adc
mov
ret
push
add
pop
rorl
cmp
pop
in
dec
adc
jae
push
xor
les
sub
fwait
adc
jo
and
add
pop
dec
jg
movsl
cli
loop
imulb
and
adc
mov
xchg
imul
pop
and
xchg
loop
ret
out
dec
cmpsb
xchg
imul
jle
sub
lds
std
xor
jl
out
dec
mov
push
daa
enter
ljmp
cld
add
cmp
scas
movsl
data16
outsb
xchg
pop
push
and
and
scas
sub
xor
mov
pop
dec
inc
inc
movsl
in
mov
push
mov
decb
popa
sbb
ror
mov
loop
lret
stos
shrb
mov
or
lret
xchg
iret
psubd
mov
and
push
and
xor
das
and
cmp
push
lods
pop
dec
dec
in
jae
test
add
popf
inc
push
inc
ja
cmp
in
lock
jbe
mov
ret
lods
ljmp
jmp
cli
jbe
movsl
mov
sub
sbb
aam
ljmp
lds
mov
mov
enter
fmul
fimuls
fwait
xlat
popa
xlat
cltd
and
add
roll
scas
movsb
scas
shll
adc
popf
jae
movsb
incl
xchg
cmc
push
fsubl
or
mov
sbb
push
int3
xlat
jae
shll
jnp
add
xor
in
xlat
mov
fdivs
out
mov
sahf
push
sbb
ss
fidivl
cmpsb
popa
andl
rcrl
fiadds
or
test
jbe
mov
xchg
movsl
push
mov
dec
lahf
push
iret
mov
outsl
sbb
cmp
repz
push
jecxz
mov
pop
push
cmp
cs
mov
lret
enter
jecxz
adc
int
lret
jge
add
dec
imul
xor
xchg
icebp
in
mov
iretw
ljmp
dec
rorl
nop
rcrl
mov
and
sub
cs
std
push
cltd
sub
pop
aam
sub
ficomps
loopne
jne
sbb
inc
popf
ret
push
jg
inc
bound
daa
lods
push
xor
adc
mov
jne
mov
mov
testl
mov
aas
insb
dec
adc
movsl
div
mov
sub
test
cmp
sahf
adc
sbb
mov
outsb
lahf
mov
out
dec
lods
mov
mov
mov
inc
jmp
inc
jge
outsb
lods
fsts
fldl
pop
sbb
push
fucom
xchg
imul
decb
mov
lret
cmpsb
and
xor
loop
xor
movsl
lret
aad
cmp
rcr
out
out
idivb
adc
jecxz
push
les
cli
mov
mov
frstor
pop
pop
adc
lcall
jne
cmp
add
repnz
inc
pusha
mov
outsl
out
out
xor
and
jno
movsb
dec
es
std
loope
lock
jne
sub
jae
fsubr
aam
les
mov
mov
mov
jnp
out
add
int
arpl
gs
xor
adc
push
xlat
adc
or
fnstsw
inc
sbb
in
sbbb
jb
mov
bound
dec
cld
scas
jne
jp
and
lahf
pop
sub
lds
and
xor
mov
sbb
xchg
ja
ljmp
jnp
scas
jmp
loop
push
decl
inc
sbb
cmp
lods
outsb
test
xchg
scas
and
pop
aas
push
shl
mov
test
testb
insb
pop
and
ret
mov
sbb
es
lods
jne
in
and
pop
cs
scas
je
int3
mov
fldl2e
adc
pop
aam
mov
add
cs
dec
test
xor
and
pop
pushf
in
push
adc
xchg
adc
enter
rcrb
or
std
cmp
mov
or
xor
mov
adc
inc
loop
pop
das
cmc
xchg
mov
adc
rorb
ljmp
and
notl
aad
out
test
adc
push
push
and
inc
xlat
push
test
pop
mov
cmp
shlb
mov
cmpsl
xlat
js
dec
mov
cmp
es
jo
add
or
rol
mov
imul
insb
sbb
add
push
pushf
mov
test
dec
push
and
mov
and
das
push
fwait
or
xchg
mov
adc
clc
push
in
roll
out
jge
push
outsb
mov
sti
ret
cmpsl
jae
cmpsb
inc
and
adc
xor
sub
mov
or
popa
sub
mov
push
imul
mov
inc
std
mov
xchg
aad
xchg
hlt
and
mov
int3
fnsave
jnp
xchg
icebp
ss
add
std
lcall
dec
cli
push
das
into
enter
mov
shll
pop
arpl
push
adc
and
sbb
push
hlt
jnp
and
inc
cld
test
dec
in
les
inc
shlb
out
sbb
sub
ret
push
or
jb
add
add
mov
pop
mov
push
ja
loopne
jl
xchg
jmp
sub
rorl
xchg
jecxz
int3
lret
cltd
push
dec
jb
mov
cmpsl
mov
dec
insl
fildll
sub
lret
cmp
push
mov
jae
push
test
pop
inc
mov
push
loop
in
sub
add
addl
mulb
shr
and
fwait
in
je
cmp
in
and
push
rcl
shl
clc
enter
sbb
push
cmp
xor
stc
mov
xchg
mov
xchg
jge
xchg
add
fsubl
jbe
sbb
cmp
push
cltd
mov
and
jbe
repz
jns
pusha
sub
pop
push
daa
cmpsb
dec
orl
mov
imul
mov
cmc
jg
push
outsl
stc
xor
imul
xlat
or
mov
mov
fwait
ret
arpl
jb
push
mov
hlt
pop
or
mov
mov
test
or
pop
adc
xchg
outsb
shr
dec
les
jl
test
lcall
inc
pop
rolb
stos
adc
imull
xchg
daa
mov
push
das
push
icebp
jecxz
cmp
pop
jno
adc
jae
int
scas
xorl
scas
loope
scas
sti
fisttps
inc
add
daa
push
shl
mov
inc
enter
add
add
pop
cmp
aaa
repnz
lds
mov
cmpsl
repz
aas
loop
push
inc
mov
loop
loopne
or
mov
fwait
add
insl
dec
popf
add
test
push
mov
cmp
daa
pop
cli
mov
ret
dec
scas
and
jmp
jle
cmpsl
cmp
or
adc
adc
sbb
xor
jmp
call
cs
bound
xchg
push
jo
xchg
add
ljmp
add
mov
cmp
pop
fstpt
inc
stc
and
fdivrl
sub
hlt
sbb
push
sar
adc
bound
add
jp
mov
cmp
mov
jb
int3
jb
jmp
rep
pop
adcb
pop
movsl
test
scas
sub
sahf
es
inc
push
dec
sahf
sbb
mov
outsl
push
into
sar
jp
jge
xor
leave
adc
dec
or
cmp
mov
sub
xchg
lret
xlat
pop
ljmp
add
sub
push
add
shll
inc
xor
dec
jb
imul
fimuls
pop
mov
pop
testb
into
js
ss
mov
sahf
aad
stos
pushf
ficompl
mov
lea
cmp
jnp
js
xor
xchg
jg
hlt
cmp
pop
shlb
cmpb
rol
shll
cmp
add
icebp
loope
repz
mov
pop
mov
jl
cmp
push
sbb
lahf
aas
popf
out
xchg
movsb
mov
gs
fldcw
mov
xor
jmp
imul
jo
fwait
popa
push
cwtl
xchg
push
fistpll
or
pusha
or
shl
sub
lahf
jge
cmpsl
sub
mov
push
cmpsl
pop
cmpsb
and
mov
jae
xchg
sub
stos
lcall
pushf
fcoms
and
lock
add
lds
lcall
dec
ds
outsl
push
loope
xor
jo
cmpsb
xchg
sahf
ljmp
xchg
das
push
push
cld
enter
lahf
adc
fidivrs
pop
sbb
jne
sbb
mov
scas
mov
or
cmc
insb
in
in
push
xor
xor
shl
inc
in
test
cmp
or
sub
lea
cmpsb
and
es
lods
addr16
inc
jo
mov
mov
adc
fwait
inc
pop
cs
mov
repz
popa
addr16
iret
loopne
push
ds
bound
fsubl
pop
add
cmc
mov
mov
lcall
test
std
mov
outsl
in
fistl
sub
lods
shrb
popf
dec
outsb
xchg
ret
adc
mov
cmp
test
dec
movsl
cmc
cmpsb
xor
pop
sbb
popa
lods
fwait
inc
push
mov
pop
push
jle
mov
pop
testl
inc
lds
std
roll
mov
add
dec
or
jae
negl
sbb
outsl
push
jp
test
rcl
mov
cmp
cmpsl
inc
mov
movb
cmp
stc
addr16
cmp
cmpsl
lock
jp
mov
sbb
cli
pop
cmp
movb
xchg
inc
push
xor
sbb
cmp
iret
rcll
nop
popf
xorl
jmp
mov
js
test
mov
jmp
icebp
jae
cmpsb
movsl
incb
jae
mov
clc
and
xor
mov
shrb
movsb
dec
inc
mov
mov
adc
pop
mov
int
pop
rcrl
pop
aas
lods
dec
cltd
sbb
inc
mull
dec
cmpb
xor
sub
jno
scas
sbb
rorl
mov
mov
sbb
cli
cmp
jle
jb
adc
orb
xchg
and
jae
mov
stos
mov
imul
out
loope
push
subl
push
jno
push
push
mov
mov
and
dec
dec
out
jl
push
add
rcl
repnz
push
stos
lods
cli
mov
xor
push
je
and
insb
stos
push
cmp
fs
dec
cmp
mov
les
mov
jb
and
add
rclb
sbbb
xor
arpl
scas
lcall
shll
cltd
mov
push
sub
les
andb
enter
bound
jg
test
mov
xor
dec
or
dec
inc
bnd
fwait
insb
cmc
jg
cmp
mov
lcall
or
fldt
push
data16
adc
setno
cmc
cwtl
push
sbb
xor
shr
fdivs
inc
xor
xor
gs
pop
mov
popf
aam
xchg
xor
bound
cmp
dec
cld
lock
adc
push
xchg
sbb
jle
sbb
cmpsb
mov
dec
ret
push
je
sbb
or
push
jmp
sub
js
jne
es
orl
sbb
adc
ja
lods
jmp
add
popf
jne
enter
sbb
push
fbstp
lss
fsubrs
inc
pushf
cwtl
mov
jg
sahf
push
push
fldt
jg
xor
movsl
xor
call
ret
mov
pop
es
push
shrb
jmp
jno
mov
sub
aaa
nop
mov
int
inc
dec
mov
and
loop
inc
push
mov
xchg
repnz
mov
dec
icebp
xchg
and
xchg
dec
test
rolb
pxor
cmp
mov
push
jl
push
dec
adc
shr
and
adc
mov
clc
or
jne
test
push
aam
testb
and
push
pusha
pop
bound
mov
insb
pop
mov
aaa
orb
pusha
mov
cmc
pop
pop
je
pop
in
mov
mov
mov
es
inc
pop
test
leave
dec
or
and
ret
rorb
mov
xor
shlb
xor
stos
xchg
jecxz
ljmp
xor
fs
mov
popa
inc
sub
dec
mov
loope
pop
inc
pop
loopne
push
sarb
sbb
cltd
fisttps
data16
sbb
mov
pop
dec
fs
add
dec
subb
sbb
dec
dec
and
mov
test
mov
insb
mov
dec
js
jmp
ficomps
push
rcrb
dec
loopne
cld
mov
mov
int3
sbb
ret
push
out
jmp
clc
mov
jl
addb
mov
test
jns
insl
cmp
into
in
jg
push
or
jns
imul
test
inc
in
out
cmpsl
xchg
xchg
xlat
cmp
adc
pushf
ja
cmp
jmp
outsl
sbb
xchg
pop
cmp
or
enter
push
mov
mov
jge
rcrb
inc
shrl
sbb
sbb
jo
mov
add
jbe
fildll
cmova
or
mov
movsl
mov
out
xor
adc
aaa
pop
cmp
cmpsb
ret
dec
push
outsl
push
sarb
shlb
loope
inc
lahf
pop
push
mov
xchg
mov
je
out
aam
mov
push
add
dec
sub
or
or
add
sbb
mov
sbb
add
pop
mov
addr16
mov
sub
inc
push
fwait
mov
mov
loopne
repz
jg
mov
std
xchg
mov
mov
lret
imul
jno
es
pop
pop
or
test
pop
mov
and
push
fnstenv
fcoms
sbb
cmpsl
shrb
ret
xlat
cmpsb
or
sub
xor
lret
jecxz
add
icebp
enter
xchg
add
into
pop
sub
push
push
push
xchg
scas
mov
fildll
sub
stos
cmp
xchg
push
neg
test
lret
mov
shrl
cmp
fcomi
push
or
cwtl
flds
fcomps
shlb
and
pop
xchg
icebp
daa
aad
into
cmpsl
lret
bswap
and
test
and
adc
enter
sub
pop
adc
jo
mov
dec
test
push
sbb
add
inc
or
sbb
out
push
das
mov
jbe
dec
jae
js
jmp
jle
cmp
dec
mov
int3
xchg
aaa
into
leave
push
lcall
cmp
stos
cs
pop
lea
push
aad
cmp
movsl
xor
mov
mov
mov
sub
faddp
pop
int
jmp
adcl
fcoml
aam
dec
add
fldcw
pop
out
stc
incl
push
push
mov
sbb
outsb
or
fsubrp
sub
jge
mov
das
nop
hlt
fsubp
cmpsl
ret
jns
pusha
into
stos
lock
insb
fldt
cmp
inc
movsb
shl
icebp
test
and
and
imul
sub
in
shll
aad
sbb
mov
xor
xchg
insl
push
xor
mov
data16
push
arpl
cmpsb
cmp
or
xchg
lahf
nop
ja
pusha
inc
mov
or
dec
dec
sbb
cwtl
sbb
cmpsl
mov
inc
add
lock
and
jne
icebp
outsl
dec
inc
icebp
xor
fs
jecxz
dec
data16
dec
lods
push
xor
sbb
stc
popa
fdivrl
mov
dec
js
stos
call
add
test
lret
popa
dec
repnz
cmp
lret
aaa
daa
das
enter
imul
push
jecxz
adc
push
add
inc
push
rol
mov
imul
mov
loope
mov
mov
jo
mov
scas
or
and
fs
mov
imul
dec
xchg
dec
sub
inc
fnstcw
adc
das
outsb
pop
pushf
into
xor
xchg
inc
insl
out
xlat
enter
inc
stc
lahf
outsb
jmp
lcall
ljmp
mov
mov
inc
roll
inc
imull
in
or
and
into
jb
out
dec
pop
add
loope
mov
jmp
stos
adc
adc
aam
nop
push
push
aam
fimuls
jp
fistpl
popf
push
jge
mov
loope
stos
scas
dec
ror
hlt
mov
adc
popf
test
ret
out
mov
shl
cmpl
or
mov
dec
push
cmpsl
mov
jns
cmpsl
movsb
mov
xchg
cld
fwait
insl
mov
dec
push
insl
jns
dec
repz
in
xor
mov
xlat
or
xor
std
push
dec
push
jo
xor
in
ljmp
repz
mov
lods
pop
mov
mov
or
jbe
push
cmp
outsl
das
or
pop
mov
jg
sbb
movsb
mov
adc
add
test
push
arpl
fs
in
jl
iret
movsb
aam
lods
scas
lret
jae
js
push
roll
inc
and
push
mov
es
popf
stc
add
lods
and
cmp
data16
pop
pop
cwtl
or
enter
lahf
cltd
dec
sbb
mov
push
int3
xchg
push
push
pop
dec
mov
stos
jl
aaa
pop
and
push
popl
add
js
cmpsl
cltd
add
adc
xchg
push
jo
or
dec
aas
sahf
dec
sbb
inc
mov
cmp
enter
sti
pop
shl
nop
and
stos
in
mov
test
int3
xor
push
add
fistpl
add
sbb
aas
fldt
xlat
sbb
roll
popa
leave
push
outsl
sub
lods
xor
mov
sub
aam
inc
push
rcrl
insl
cwtl
incb
sbb
jmp
or
orl
ret
aas
ds
int
and
dec
pop
insl
mov
fidivl
push
mov
mov
xchg
add
les
jo
inc
pop
mov
leave
xchg
xor
jp
sti
lods
lock
add
add
xchg
push
mov
mov
cmp
loopne
subl
stc
jno
pop
jno
mov
cld
outsl
mov
mov
or
inc
out
scas
testb
mov
stc
cmp
faddl
jl
fdiv
int3
adc
fdivrl
into
ret
adc
jns
lret
lahf
mov
outsl
xor
adc
mov
fidivl
jge
adc
mov
or
jge
mov
repz
push
mov
push
pop
aam
jno
or
mov
inc
or
cli
sub
fs
jnp
mov
loopne
ja
or
mov
dec
adc
push
sub
int
inc
cs
xchg
mov
ja
or
call
int
shrb
ret
pop
lods
sbb
lret
sbb
pushf
xchg
sub
in
hlt
adc
je
xor
or
mov
aad
notb
iret
mov
mov
jnp
movsl
cld
adcb
cwtl
fcmove
sbb
pop
pop
outsb
push
xchg
mov
sbb
sbb
test
aad
xchg
mov
popa
xor
out
loopne
out
jno
inc
aad
dec
jne
add
mov
jp
xchg
pop
ffreep
cmp
adc
or
lock
lcall
out
mov
ja
or
leave
ljmp
sahf
movsl
jmp
push
jb
jne
mov
loop
out
mov
popf
mov
ret
popf
xlat
sti
sarl
inc
hlt
pop
cmp
js
push
out
mov
test
lret
iret
jmp
iret
mov
insl
xor
aad
push
adc
or
mov
push
lahf
shl
pusha
cmp
pop
mov
push
aam
je
sti
pop
out
sahf
test
orl
push
mov
mov
ret
fisttpl
lods
cmp
loop
xchg
imul
call
sti
sbb
push
mov
les
outsl
inc
sti
inc
and
dec
sti
sbb
aad
push
out
mov
in
push
and
lret
pusha
xchg
dec
push
push
orb
lds
pushf
mov
xchg
data16
mov
or
lods
cmp
or
pop
fwait
mov
loop
addr16
and
stc
sti
scas
cmp
jp
shl
jl
mov
mov
mov
mov
popa
push
mov
data16
test
inc
test
fbstp
les
mov
insl
jge
xor
cmc
push
fwait
jg
jg
cmp
cmc
shll
int
std
ljmp
lret
inc
bound
jg
mov
mov
lret
push
lods
in
push
dec
inc
js
icebp
arpl
jo
pop
filds
std
dec
dec
gs
outsl
or
cmc
mov
inc
mov
xchg
ret
or
cmp
dec
xchg
outsl
jb
mull
mov
fnstcw
dec
pop
adc
nop
jnp
mov
cli
jno
rcll
das
flds
mov
clc
mov
mov
mov
jne
enter
lods
pop
gs
dec
call
cmc
loope
addb
mov
sarl
or
sbb
inc
jl
dec
cmc
mov
lods
ja
bound
or
or
enter
jae
dec
push
or
inc
mov
cs
jns
adc
insb
pushf
mov
sub
and
sbb
push
mov
xchg
push
mov
push
and
sub
dec
add
in
rolb
test
sub
cmpsl
add
movsb
sub
mov
orb
and
lods
cmp
push
lds
inc
movsb
lret
mov
push
jle
sbb
sub
lea
push
std
stos
test
sbb
pop
fstp
sbb
push
les
mov
xchg
call
mov
inc
lcall
dec
sti
stos
daa
ss
add
add
xchg
sbb
mov
sti
subb
mov
lret
leave
and
push
mov
test
gs
data16
mov
ffreep
decl
das
scas
enter
push
rcll
mov
mov
pop
mov
mov
push
addr16
dec
cmp
pushf
push
add
fisttps
push
setbe
cltd
pop
lods
ret
ror
cmp
mov
scas
test
addr16
inc
lea
mov
push
and
sbb
fwait
in
sbb
or
pop
xor
ret
or
divb
lret
mov
dec
cmp
or
insb
stc
and
add
out
inc
in
cmc
cmp
mov
or
cltd
cmp
in
test
inc
loop
cmp
das
jne
sbbl
push
or
mov
sub
idivb
jp
imul
movsb
xchg
pop
cmp
negl
fisubrl
mov
loopne
push
or
adc
rol
xchg
ds
pushf
xchg
pop
mov
jae
and
sub
mov
mov
cmc
mov
mov
sbb
dec
lods
lock
insb
clc
call
out
or
es
jge
or
pop
rcrb
push
push
cmp
in
loopne
fmuls
or
sub
iret
fdivl
aad
add
cs
sti
xchg
stos
pop
je
out
sbb
bound
or
std
cmp
lcall
aaa
xchg
push
push
insl
and
mov
or
movsl
jge
frstor
out
mov
xchg
mov
mov
xlat
mov
cs
out
mov
std
pop
adc
cmp
stos
loop
test
adc
add
outsb
sarl
es
aad
arpl
pop
movsb
in
dec
pop
jae
fcoms
push
mov
cltd
les
repnz
incl
test
adc
xchg
adc
mov
xor
xchg
test
ja
mov
in
sbb
in
adc
dec
pop
jmp
stc
ss
dec
cmpl
outsb
add
or
xor
mov
push
ss
lock
cmp
pop
shl
pusha
sub
push
pop
sbbl
outsl
mov
gs
sbb
push
mov
adc
pop
push
dec
and
inc
jmp
mov
mov
repz
add
xor
loope
rcrb
push
cmp
dec
sub
stos
sbb
xor
sbb
pop
insb
gs
in
xchg
int3
inc
daa
jnp
inc
cmp
pop
cmp
xor
lcall
dec
mov
pop
mov
mov
xor
inc
jo
push
cmp
jge
xor
jb
iret
cmp
shlb
loopne
jge
mov
fsubr
data16
adc
cmp
dec
jns
sahf
push
in
pop
dec
lock
imul
iret
jge
inc
js
jo
pop
pop
outsl
dec
pusha
mov
xchg
pop
cwtl
rclb
stos
scas
scas
scas
sbb
mov
mov
ljmp
out
loop
in
int
sub
cmp
ss
sub
cmc
mov
sbb
pop
popf
mov
push
pop
inc
inc
xchg
and
lods
es
imul
push
lods
jae
inc
scas
adc
rcrb
jbe
jg
lods
lcall
loop
testb
mov
lret
iret
andl
adc
push
add
sbb
mov
lret
push
out
loopne
jl
mov
fistpl
outsl
shrb
cmp
add
movsb
xor
orb
rcrb
inc
inc
lea
mov
arpl
xchg
sbb
aam
cwtl
repnz
aad
inc
aaa
in
mov
mov
cmpsb
test
xchg
outsl
stos
fsubl
call
cmp
stos
dec
jp
pop
bound
sbb
aaa
add
shll
or
pusha
pop
mov
fwait
lahf
dec
ss
add
repnz
fmuls
mov
mov
mov
shlb
movsl
cltd
test
sbbl
fwait
scas
xor
adc
mov
sbb
leave
cmp
pop
stc
sbb
cmpl
mov
sbb
inc
in
jmp
notl
cwtl
scas
les
add
cwtl
stc
aam
mov
fstps
rcrl
add
imul
hlt
mov
adc
mov
inc
data16
jg
scas
ret
mov
lret
out
and
jbe
stos
xchg
and
or
scas
xchg
push
jle
clc
sub
pop
rclb
pusha
jnp
enter
and
push
leave
subl
lret
add
inc
lock
sub
dec
bsf
and
hlt
jnp
mov
jns
test
clc
mov
sbb
push
movsb
xchg
rorb
ret
pop
stc
adc
mov
push
fidivrl
out
ds
jecxz
ret
sub
es
sub
repz
repz
dec
test
adc
and
push
mov
ret
mov
bound
out
test
sub
cli
outsl
mov
enter
sub
adc
out
icebp
pop
xor
ja
ret
xchg
in
lock
push
scas
rclb
push
xchg
jnp
rclb
jne
mov
mov
mov
pop
js
subl
sub
sub
jp
stos
xchg
int3
cmpl
push
and
test
fisttps
and
mov
cmpsl
or
mov
and
jle
cmp
add
je
lcall
and
test
adc
cmp
aad
test
test
xor
mov
dec
inc
outsb
lret
mov
xchg
mov
test
insb
in
xchg
xor
fisttpl
sub
lea
fisttpll
imul
sbb
jns
jbe
loopne
movsb
mov
sub
mov
push
das
ror
cmpl
xor
adc
dec
jge
jmp
lods
xor
cli
dec
faddl
bswap
ret
sub
jae
loop
xchg
cwtl
lcall
jecxz
test
mov
cmpl
cmp
lods
orl
push
in
iret
cmp
adc
xchg
lret
sbb
adc
ljmp
and
inc
cmp
movsb
cmp
dec
dec
adc
inc
and
mov
push
das
jp
mov
mov
xchg
push
jl
xchg
outsb
or
outsl
clc
clc
shr
mov
test
jne
aas
xor
inc
push
daa
xor
cli
pop
and
sub
push
scas
pmaxsw
imul
in
xchg
mov
jns
inc
pop
out
sbbl
shlb
pop
dec
shlb
xor
and
insl
xchg
loope
dec
pusha
push
aad
xchg
inc
add
stos
pop
add
cmp
push
std
arpl
push
sub
or
xchg
icebp
pop
ret
fwait
mov
push
popa
and
frstor
push
add
mov
add
out
xlat
div
or
out
fmul
ds
jbe
ret
inc
das
dec
sahf
cmpsl
xorl
adcb
aas
push
sub
aas
xor
xchg
jo
pop
push
push
leave
imul
jnp
int
or
out
xchg
xor
pop
mov
out
dec
xor
inc
pusha
mov
ljmp
sbb
mov
pop
add
pop
insl
insl
ret
cmp
lock
cmc
lcall
arpl
stos
mov
fistl
lds
pusha
or
fwait
adc
jnp
xorl
leave
inc
outsl
dec
sub
aad
pop
xor
add
inc
sub
add
out
mov
testb
fistl
aaa
pop
loope
jp
cli
aad
sub
cmpsb
push
or
inc
cmp
mov
cld
pop
movsl
sbb
mov
push
sti
nop
inc
push
add
bound
scas
cmpsb
dec
cmpsb
adc
out
movl
lds
push
into
cld
ljmp
sbb
mov
dec
push
adc
mov
push
sub
std
aam
jecxz
cld
dec
insl
dec
dec
test
push
pop
xchg
mov
jge
aaa
shrb
sahf
xchg
and
mov
stos
mov
sbb
sahf
sti
xor
dec
test
mov
inc
aas
pop
fimuls
pop
add
lds
ret
mov
adc
loope
xor
sub
or
add
popa
push
mov
sbb
pop
ret
lods
or
fdivp
jno
scas
and
pop
stc
sub
sub
xchg
icebp
lret
je
fstps
call
pop
add
in
push
mov
mov
daa
cmp
mov
lret
aas
es
outsb
sti
repnz
xlat
filds
aam
push
mov
lret
insb
decb
shlb
cmpsl
insb
int
fucomip
jno
faddl
repnz
dec
icebp
mull
push
xor
out
cmp
xchg
test
inc
pushf
popa
push
cmp
pop
jns
xor
dec
sahf
xor
pop
mov
test
jne
xchg
lret
jg
jmp
xchg
les
sub
ds
sub
push
cmpsl
in
das
or
push
mov
sbb
lcall
pop
cmpsb
fcmove
pop
pop
sbb
into
stos
testb
mov
test
xorb
add
int
iret
in
in
testb
ss
and
jmp
pushf
lock
push
loopne
add
xchg
or
dec
inc
push
inc
rorb
lds
popa
xchg
jge
jg
ret
je
or
pushf
in
pop
mov
mov
xchg
jno
es
lock
pop
cmc
push
xchg
fcompl
push
xchg
sbb
mull
add
movsb
xor
jmp
dec
inc
adc
jnp
sub
cld
es
popf
in
sub
ljmp
xor
inc
cwtl
bound
scas
icebp
add
cs
add
ljmp
loopne
pop
ffreep
inc
add
mov
xchg
mov
pop
add
in
mov
sbb
inc
jmp
xor
sbb
sub
cmpsb
sbb
jne
subb
aad
test
add
js
or
mov
sbb
fmul
dec
adc
and
loop
sub
scas
out
js
insl
sahf
mov
jnp,pt
iret
jmp
push
nop
ljmp
mov
adc
xor
push
dec
or
shl
cltd
stos
in
fisubrl
testl
push
push
ret
pushf
adc
clc
pushf
in
aaa
in
mov
aaa
imull
cmp
fsubrl
jns
lds
or
jle
stc
mov
out
test
in
out
push
cmp
fsubl
fs
loopne
xor
lds
xchg
lea
repnz
int3
lahf
jno
aam
mov
neg
fs
pop
dec
ret
jecxz
call
cmp
bound
adcl
es
fcmovb
shl
jecxz
jmp
insb
sub
jne
call
hlt
jb
idivb
fnstsw
sti
repz
add
popa
lock
jae
test
fidivs
jmp
pop
repz
xchg
rcr
mov
mov
cmpb
pusha
xchg
or
mov
push
sahf
lods
mulps
adc
incl
bound
sarb
cmp
mov
xor
dec
scas
mov
inc
shl
mov
aad
jge
divb
add
push
das
rcll
xlat
sbb
mov
and
sub
negb
jl
addr16
aam
and
mov
leave
cmp
xor
mov
mov
sbb
sub
cmp
int3
shlb
mov
cmc
mov
mov
inc
xor
shr
adc
mov
dec
pop
mov
stos
sub
inc
lahf
repnz
insl
rorb
push
sti
jmp
gs
nop
xchg
data16
fldt
fwait
xchg
pop
andb
addl
rcrl
mov
inc
cmp
loop
fisttps
mov
popa
pop
das
and
loop
pusha
lea
cwtl
bound
fildll
adc
cltd
ret
rcrl
xor
shlb
mov
lahf
sbb
jl
or
sub
lds
xchg
jb
mov
pop
outsb
loopne
pop
xor
gs
fwait
xor
adc
fdivrs
aam
inc
pushf
dec
sub
add
mov
lods
ret
test
out
dec
cmpsl
mov
xchg
sar
xchg
mov
hlt
fiaddl
sbb
test
xor
pop
xchg
sbb
loope
inc
insb
and
mov
pop
fcoms
pop
cli
mov
xchg
push
mov
dec
mov
imul
mov
out
loop
mov
js
popa
mov
adc
sti
data16
sub
inc
xchg
out
mov
shrb
xlat
cmp
out
ss
icebp
or
push
hlt
stos
sub
jbe
add
jbe
cmp
ficomps
loop
mov
out
fnstsw
mov
fcoml
das
stos
movsb
pop
sahf
mov
sbb
ss
sti
jl
stos
sbb
xor
das
pop
shl
jmp
push
ret
ret
test
dec
xchg
loopne
add
pop
sbb
push
nop
mov
add
std
push
ffree
sbbl
std
arpl
xor
pop
dec
adc
test
jle
popf
xchg
and
push
pop
lret
jl
and
data16
fisttpl
dec
or
nop
mov
cs
daa
xchg
jnp
sub
subb
icebp
dec
or
fcoms
loopne
mov
add
pusha
fsubl
loopne
fcmovnu
lock
cs
jmp
adc
push
orb
lock
cltd
jecxz
jecxz
lds
sbb
cmp
add
dec
in
and
xchg
jg
sbb
cmp
push
inc
dec
in
insb
jne
dec
addb
cmp
pop
push
mov
xchg
cmp
inc
mov
sub
dec
push
add
stos
jbe
out
sarb
or
cmp
ret
and
leave
inc
jo
cli
adc
scas
xchg
xchg
mov
jg
in
lret
sub
push
and
lds
push
xchg
ss
out
and
push
mov
lock
lcall
push
sbb
cwtl
mov
xor
and
outsb
xor
sbb
data16
xchg
daa
pop
daa
rorl
mov
insb
xor
push
dec
fwait
test
into
icebp
xchg
insb
or
inc
adc
xchg
adc
loop
cs
inc
int3
mov
jo
out
jecxz
js
aaa
push
cli
mov
xchg
fnsave
add
fimull
mov
lret
add
aad
testl
pop
xchg
dec
mov
mov
push
xor
sub
loop
ficoms
xchg
pop
stos
leave
lahf
mov
xor
enter
sbb
jae
sub
dec
cli
negb
mov
sarb
mov
push
pop
dec
mov
fcoml
in
imul
jmp
pushw
pop
sbb
lock
mov
insl
loop,pt
jo
lods
mov
js
into
int
mov
and
cmp
enter
inc
fadds
xor
mov
pushf
int
add
cmp
lret
sbb
lret
mov
adc
outsb
adc
fistl
xchg
nop
mov
aaa
retw
mov
mov
cmp
xor
imul
call
dec
cmp
ficoml
push
ret
or
xchg
scas
and
and
pop
xor
xchg
inc
or
lods
inc
cmp
inc
xor
fwait
ds
adc
and
pop
fsubs
lock
or
push
or
jp
clc
xchg
pop
icebp
arpl
xchg
call
nop
jne,pt
sub
int3
cmc
ret
daa
movsb
dec
add
and
imul
aaa
shrl
shlb
fcmove
into
adc
mov
pop
loop
cwtl
inc
xchg
enter
popa
jb
mov
leave
fwait
hlt
jl
int3
push
pop
cltd
adc
cmc
xchg
aad
sub
pop
lock
je
mov
loopne
mov
loope
adc
jecxz
dec
xchg
and
pop
movsl
mov
mov
jle
push
popf
push
jle
out
sub
dec
loopw
aad
ds
mov
fs
idiv
in
fdivl
sarb
mov
push
adc
mov
inc
cmp
dec
call
lods
add
or
outsb
add
push
popf
testb
mov
jae
lods
xchg
or
lock
add
loop
xor
mov
jns
movsb
lock
cmp
popa
push
int
filds
imul
sbb
mov
sbb
fwait
mov
shll
jmp
push
mov
mov
sbb
push
out
hlt
nop
int3
in
lods
mov
test
aaa
xchg
mov
xor
in
out
sbb
stos
jno
inc
jnp
stos
sbb
loopne
dec
push
add
test
sub
pop
mov
sbb
adc
xor
cmp
jmp
push
scas
cwtl
and
sbb
data16
pusha
scas
and
sbb
pop
mov
sbb
loop
nop
data16
pop
lods
ret
inc
mov
das
push
ret
fwait
andl
ja
test
popa
add
inc
xor
in
incb
popf
push
in
inc
jnp
sub
call
xor
xor
pop
dec
mov
pop
sub
fwait
mov
int
pop
jg
dec
dec
inc
jnp
repz
out
test
xchg
aam
aam
dec
shlb
mov
push
repz
push
sbb
out
jge
xor
mov
in
xlat
dec
out
push
or
add
in
push
outsb
jno
xchg
mov
fnstsw
xor
jecxz
leave
pop
lcall
jg
pop
imul
jecxz
ficoml
adc
xchg
div
xchg
testl
les
cld
add
inc
mov
dec
xor
bound
inc
inc
lcall
ds
aad
lock
les
pushf
sbb
inc
adc
mov
jle
push
mov
roll
add
loope
mov
jb
sub
aad
mov
lret
lahf
mov
adc
repnz
int3
jmp
jbe
jne
mov
dec
shlb
adc
jo
daa
push
inc
xchg
es
sub
ficomps
inc
cs
mov
ds
push
leave
or
into
fs
mov
es
mov
jle
lds
aam
subb
fildll
xor
call
sbb
xchg
lds
popf
xor
pushf
subb
popf
popf
add
jg
imul
fadd
dec
movsb
pop
out
fmul
cmp
jb
inc
cmp
dec
xchg
push
lds
mov
or
shrb
cwtl
mov
enter
cmpsl
je
jle
jnp
loopne
add
xor
test
call
mov
push
aas
scas
loop
sub
shll
xchg
xchg
test
fsubs
loope
movsb
cmp
les
lea
xorb
adcb
pop
sbbl
adc
pop
mov
xchg
mov
xor
xchg
push
inc
cmpl
xor
dec
and
sarl
sahf
lret
test
jmp
idivl
xchg
jmp
mov
dec
inc
and
jg
sub
fstl
rol
cmp
mov
cmp
pop
test
les
xchg
mov
or
shl
pop
pop
pop
inc
jl
rorb
fildl
lds
xchg
push
stos
dec
ds
outsb
int3
fnstcw
mov
lcall
movb
sahf
add
push
or
push
or
imul
sbb
test
jnp
in
subl
push
fdivl
out
test
pop
cmpsl
xchg
in
inc
dec
push
in
subl
add
xor
xor
adc
cmp
add
mov
enter
js
lahf
scas
push
mov
leave
xorb
mov
inc
xchg
sahf
xchg
arpl
dec
adc
adc
xchg
adc
cmp
sbb
mov
dec
push
adc
mov
enter
sub
mov
and
mov
jmp
outsb
xlat
movsb
push
int
sbb
loope
aam
xor
data16
mov
repnz
dec
jl
gs
mov
xchg
jbe
sahf
loope
xchg
fwait
rorb
pop
bound
pop
dec
or
xchg
lea
les
jg
cmp
sbb
sub
xlat
inc
ret
xor
and
ret
cli
dec
sarb
push
sub
xor
xchg
cmp
icebp
push
adc
out
sti
jnp
popa
jae
adc
sbb
mov
ds
xchg
in
std
add
pop
inc
mov
aas
scas
mov
popa
mov
add
xlat
mov
rorl
mov
cmp
or
jle
movsb
ret
mov
sbb
shrl
fcompl
imul
inc
rcrl
push
outsb
jno
inc
jbe
data16
cmpsb
outsl
ja
std
mov
rclb
es
jl
scas
mov
imul
inc
push
jp
in
dec
stc
mov
jp
adc
rclb
lret
sbb
notb
addr16
push
pop
rcr
addr16
cmpsb
add
lock
iret
aaa
ja
fistl
inc
dec
outsb
push
jb
out
xlat
and
popa
lock
notl
cmpsl
mov
cmp
and
fnstcw
push
adc
and
cld
ret
pop
xchg
clc
xchg
and
mov
repz
ds
pop
mov
jl
jns
popl
pop
push
aad
stc
loope
xor
cltd
mov
adc
mov
mov
inc
jge
push
xor
push
mov
outsb
movsl
call
clc
mov
insl
jmp
imul
push
dec
dec
sub
rorb
pop
test
lea
scas
ljmp
mov
sub
jl
dec
xorl
call
es
pop
dec
inc
xchg
fwait
cmc
iret
stc
xchg
mov
mov
shlb
push
jg
lock
inc
in
insb
enter
jl
rcll
mov
mov
adc
inc
fsubr
dec
fisttpl
aas
mov
jns
mov
adc
push
mov
leave
lcall
popf
fldenv
push
push
push
pop
jae
mov
lea
mov
stos
int
or
ja
jo
add
jbe
insl
pop
ds
mov
cmp
dec
rorb
mov
add
movsl
rcrb
lds
dec
sbb
xor
enter
jl
arpl
inc
jno
mov
sub
test
inc
sub
ret
cmp
movsb
test
jg
sbb
sbbl
popf
and
mov
cmp
adc
pop
test
push
push
jge
aad
mov
ret
xchg
pop
xchg
psubsb
outsl
and
dec
cmp
getsec
sti
fistpll
das
sub
mov
and
sbb
mov
push
sahf
pop
cld
int
mov
sbb
mov
or
inc
stc
cmpsl
and
mov
add
pop
mov
imul
arpl
popa
mov
add
add
and
jmp
or
test
lock
xor
xchg
dec
mov
inc
shrb
xchg
ficompl
jl
or
dec
inc
dec
mov
daa
inc
jmp
mov
xchg
loop
xchg
mov
push
cmp
out
xor
cmpsb
mov
cmpsb
mov
jge
aaa
hlt
in
add
mov
hlt
in
cmc
jmp
mov
scas
xchg
divb
and
sarb
cld
add
cmp
adc
sbb
mov
mov
push
pop
mov
cld
out
mov
addr16
cmpsb
sub
jp
xor
push
lahf
adc
pop
push
in
movsl
mov
sub
loope
mov
sbb
aas
test
xorb
xlat
push
add
cmp
fildll
movsl
loop
xor
es
and
mov
nop
or
movmskps
cli
sbb
cltd
out
bound
sbb
fcoms
out
jle
inc
sbb
dec
das
sarl
jmp
loope
in
push
pushf
cmp
mov
and
sub
stc
loope
mov
dec
mov
and
mov
cs
fucomp
sub
bound
call
repz
inc
es
cmp
adc
mov
add
loope
jl
imul
or
jg
ljmp
mov
int3
movsb
enter
insb
rclb
ja
in
lret
insb
cli
inc
xor
js
in
dec
cmp
imul
gs
cmp
cld
lds
lock
push
arpl
dec
std
ror
push
jo
movsl
pop
dec
es
jle
ret
ljmp
dec
and
add
pusha
push
mov
cmp
out
inc
mov
scas
xor
dec
cmp
pop
xor
sub
movsb
cli
cmp
add
or
hlt
xchg
inc
fstps
mov
and
lock
gs
ljmp
push
call
shlb
cli
pusha
outsb
dec
fldl
sti
jne
leave
sub
inc
fmuls
and
inc
jl
cmpsl
shlb
fstpt
xor
dec
aad
maskmovq
stc
mov
cs
xor
insb
cmc
xchg
ja
cmp
ja
cmp
and
xchg
dec
push
je
js
jno
scas
push
push
cli
clc
xchg
loope
les
mov
jp
ss
mov
sub
fimull
loope
xchg
fprem
scas
xchg
int3
cmpsl
lea
inc
cmp
rcrl
xor
inc
scas
hlt
push
mov
and
arpl
pushf
addl
mov
mov
iret
xor
dec
inc
xor
fbld
sbb
mov
jo
sub
push
xchg
cmp
jl
fiadds
loopne
adcl
push
popf
stc
cwtl
stos
add
push
jnp
outsl
imul
adc
dec
ja
pop
movsl
outsb
pop
inc
mov
outsl
ljmp
js
lahf
mov
push
mov
mov
fadds
add
xchg
mov
cs
lods
push
and
push
in
push
cmpsb
fistl
dec
flds
aaa
mov
sub
xor
jnp
cld
lret
aam
lea
lahf
or
movsl
or
xor
movsl
nop
xor
call
outsl
es
adc
push
aad
test
or
in
xchg
repnz
outsb
mov
lahf
jns
dec
popf
iret
js
les
mov
test
pop
and
jecxz
dec
sahf
mov
adc
jno
pop
mov
mov
rorb
test
in
push
mov
iret
rclb
std
mov
inc
push
cmp
mov
xchg
ret
out
jo
push
jp
fisttps
jecxz
push
cltd
pop
cmp
mov
sub
rcrb
movsl
cmp
xor
nop
or
fdivs
lahf
sti
out
mov
push
xchg
cmp
ds
rcrb
dec
xorb
add
insl
mov
in
fcmovnb
sbbl
test
jg
leave
cmpsb
mov
mov
and
fs
push
fcomps
push
outsb
mov
stos
mov
mov
mov
push
mov
dec
or
cmp
sub
pop
sub
scas
sub
fimull
sti
daa
mov
sti
fdivl
ja
pop
push
fwait
mov
imul
in
xchg
or
mov
jmp
jo
jge
imul
sub
cli
fsts
les
dec
ljmp
xchg
sub
fimuls
and
movsb
or
int3
dec
mov
xchg
mov
out
bound
in
hlt
cmpb
cmc
cmp
outsb
cmpsl
jl
mov
dec
pop
mov
pop
xchg
clc
mov
sbb
ret
sbb
ja
push
add
cli
int3
sub
and
cli
jbe
push
add
cmpsb
rcll
dec
mov
mov
jne
test
mov
cmp
int3
jae
ja
pop
mov
jmp
dec
push
xor
mov
js
aad
in
push
pop
les
mov
ja
inc
inc
add
add
xchg
push
or
gs
leave
rcrl
or
hlt
popa
mov
add
add
add
call
jge
mov
daa
jp
mov
or
repnz
outsl
push
bound
aas
jno
dec
test
bound
push
mov
or
pop
aaa
out
pop
aas
outsl
pop
mov
push
cmp
cmpl
pusha
jge
xchg
in
adc
ds
in
aam
mov
push
aaa
lds
pop
fstl
cmp
mov
sub
je
shl
sbb
lea
sbb
scas
stos
lahf
xor
xchg
mov
insb
arpl
lcall
xchg
ss
jo
jae
adc
loop
sbb
sbb
pop
aad
in
mov
sbbb
es
jg
loopne
dec
aas
in
loop
loope
xor
jns
dec
jecxz
bound
sbb
cltd
mov
pop
push
int
pop
jl
xchg
outsb
pop
inc
dec
mov
add
in
jg
xor
adc
pop
mov
ja
sbb
add
and
cmc
xchg
lods
imul
jg
addl
rolb
mov
sub
loop
pushf
pop
notl
lahf
int3
inc
jns
sbb
cli
insl
sbb
xchg
dec
mov
mov
fsub
xor
mov
fucomip
adcb
dec
push
test
push
popf
mov
mov
stos
and
data16
jg
adc
adc
test
cmpsb
mov
jg
ret
mov
ffree
or
xor
in
aad
mov
mov
repnz
into
cwtl
movsl
pop
ret
out
or
test
dec
jecxz
sub
in
icebp
repz
ja
add
mov
adc
fadds
sub
dec
mov
cmp
aaa
push
or
arpl
cld
fldt
pop
cmp
icebp
adc
xchg
inc
adc
inc
repnz
out
cwtl
in
rclb
push
jne
ret
nop
repnz
ljmp
pop
adc
add
mov
dec
or
dec
inc
imul
pushl
aad
xor
ret
test
push
add
imul
std
pop
dec
xchg
add
jecxz
pop
lcall
sub
icebp
repnz
sub
xchg
std
pop
or
cmp
jbe
shl
cwtl
lods
push
rcll
mov
lcall
aam
jns
fiadds
cmpsb
aas
or
adcl
aaa
cmp
xchg
hlt
add
add
add
sub
sbb
lock
and
out
xchg
mov
inc
and
pop
add
cld
xchg
popa
sbb
loopne
add
aaa
push
add
lea
rcl
pop
lods
cmp
outsb
scas
repnz
push
or
or
fwait
add
push
or
in
movsb
ficoms
pop
loop
sbb
add
mov
adc
les
dec
add
push
test
loopne
push
insb
pmaxsw
xchg
xor
xorb
mov
test
sbb
add
leave
jmp
xchg
stos
mov
xchg
div
push
inc
ja
mov
icebp
dec
sbb
xor
jne
adc
cwtl
stos
imul
inc
push
mov
jae
into
ds
mov
ss
addr16
jp
nop
sbb
push
mov
sbb
mov
mov
push
sbb
js
adc
add
rcrl
mov
lods
cmpsb
dec
outsb
lds
popf
testb
adc
aad
lcall
aaa
adc
pop
fsubl
lock
add
nop
inc
punpcklwd
mov
icebp
mov
jmp
and
pop
outsl
fidivs
add
repz
fldl
insl
pop
push
lds
dec
xor
add
sti
push
cmp
mov
out
xchg
das
mov
test
outsw
cmp
out
xor
or
inc
inc
ret
lahf
movsl
pop
ret
sub
lds
push
cli
outsl
jg
xchg
pop
xchg
jbe
sub
out
lret
decb
addl
adc
in
scas
cmp
test
mov
sub
sub
leave
stc
pop
dec
inc
vcvtsi2sd
mov
and
push
pop
mov
lds
and
jb
int
dec
rcll
cmp
movsl
pop
pop
sbb
mov
rcll
sbb
stos
lods
push
out
into
jp
pop
je
iret
mov
jl
cli
mov
dec
adc
and
in
loop
addr16
js
sub
jl
pushf
aaa
and
pop
iret
mov
out
jo
adc
repz
sub
sbb
jae
sub
mov
scas
adcb
idiv
fwait
call
cmc
cli
std
mov
ss
jo
xor
mov
inc
pop
fstl
stos
gs
dec
stc
pop
sub
clc
outsb
icebp
movb
out
xor
mov
or
loop
dec
loopne
cmpsl
dec
pushf
dec
in
cmp
mov
adc
dec
pop
lret
lock
pop
push
jmp
pop
jae
sbb
aam
fisubrl
xor
or
stos
push
js
sub
push
or
movsb
inc
sub
cmp
lods
jle
cmp
adc
cld
mov
xchg
mov
adc
jecxz
cltd
in
mov
sbb
jg
dec
mov
lret
loop
movl
adc
int3
cmp
shll
sub
test
jns
sub
int
cmp
pop
xchg
shrb
mov
sbb
add
jle
push
mov
inc
lret
out
flds
xor
sbb
test
fidivrl
loope
or
lock
out
mov
add
out
mov
sub
jbe
and
or
es
imul
add
or
scas
push
negb
inc
mov
cld
cld
xchg
cltd
mov
sub
lods
inc
outsb
ret
cmpl
nop
stos
mov
cmp
mov
adcb
mov
fistps
xchg
xor
fstpt
pop
or
xor
call
add
or
gs
or
movsl
je
lods
jecxz
cmp
push
call
lahf
ret
insl
or
push
mov
adc
loope,pt
fsts
jmp
xor
fcmovne
in
mulb
or
filds
pop
xchg
dec
js
xchg
xchg
and
repz
and
scas
cmp
and
mov
jecxz
jl
push
inc
sbb
mov
mov
orl
loopne
cmpsl
dec
into
cmpl
test
std
mov
push
popf
mov
scas
pop
sbb
mov
sbb
movsl
loope
repz
lret
xor
scas
mov
cmpsb
inc
jp
jne
xchg
insb
cmc
add
ffree
pop
cmp
inc
sub
inc
mov
addl
jg
or
aam
xchg
loope
out
mov
les
das
sbb
and
hlt
js
dec
loopne
xchg
cltd
lods
mov
xchg
mov
mov
aam
aad
nop
push
push
leave
test
test
jnp
xorl
xchg
es
insb
mov
lds
pop
lahf
xor
xor
insl
xchg
push
adc
test
in
fisubrl
gs
sub
fsub
xchg
cmp
pop
sub
dec
outsb
pop
out
inc
loop
add
jecxz
mov
dec
lock
repz
bound
jg
movsb
jmp
push
xor
and
push
hlt
icebp
xor
or
push
cld
movsb
dec
inc
pop
scas
push
push
enter
fiadds
xchg
jne
sbb
aaa
test
decl
je
jbe
stos
mov
jge
inc
notb
mov
mov
jmp
xor
iret
push
xchg
mov
sbb
dec
fwait
and
inc
mov
and
xchg
lock
mulps
add
jmp
out
mov
or
xchg
xchg
jbe
mov
add
xchg
roll
outsl
sbb
dec
cld
cmp
lock
xrelease
push
xchg
mov
or
mov
xor
mov
cmp
and
incb
nop
aas
test
push
mov
orl
mov
jmp
add
xchg
imul
xor
popa
enter
rorl
adc
lahf
xor
pop
popa
sbb
cmp
dec
sub
cwtl
lock
inc
adc
inc
add
outsl
xchg
adc
cltd
pop
dec
repz
pop
imul
pop
lds
inc
add
push
in
in
push
push
movsb
xor
sub
aam
push
add
ret
fists
pop
leave
cli
add
adcl
lds
pop
adc
loop
cs
push
mov
xchg
pushf
or
xor
sub
inc
add
push
adc
adc
inc
pop
pop
cld
daa
mov
dec
lret
dec
repnz
add
je,pn
adc
aas
mov
std
out
cwtl
pusha
mov
test
cmp
lods
and
cmp
mov
jp
mov
aas
cmpsl
nop
xor
jmp
out
andb
popa
mov
inc
addr16
in
mov
xor
fdivrl
stos
mov
push
div
add
pop
pop
mov
cltd
subb
xchg
xor
scas
cld
and
xchg
loopne
test
sub
sahf
mov
jl
dec
stos
xchg
and
sbb
or
push
pop
aam
add
mov
nop
aaa
sub
enter
add
lods
cmp
in
mov
xchg
inc
imul
lret
cmp
fnstenv
push
jo
xchg
fmull
inc
adc
mov
in
dec
lcall
pop
aad
nop
mov
in
stos
mov
jl
cmpb
arpl
lcall
cmp
add
shlb
fwait
mov
movsl
mov
cmpsb
add
lret
movsb
jmp
fs
jae,pn
pop
mov
pop
mov
jno
inc
movsl
outsb
sub
ret
inc
jno
rcrb
pop
imul
imul
out
out
int
push
jnp
add
les
test
pop
ret
fwait
xchg
adc
ja
cltd
add
mov
je
test
sbb
int3
jmp
call
mov
shll
sub
and
int
enter
dec
mov
mov
inc
jne
mov
into
pushf
lret
pop
lds
clc
add
roll
mov
xchg
push
pop
dec
hlt
xor
dec
cmp
mov
mov
mov
mov
ja
ret
mov
or
mov
out
adc
dec
out
push
fldl
push
pop
sub
stos
mov
repnz
sbb
fldt
sub
xchg
and
and
les
outsl
fdivs
sub
outsb
insl
xchg
or
scas
aas
add
enter
pusha
add
adc
jg
into
fidivs
xchg
pop
fidivs
adc
or
sbb
mov
mov
iret
rolb
adc
jle,pt
out
dec
arpl
add
ret
test
push
push
pop
add
xchg
loope
sub
in
and
ficompl
cmp
enter
adc
inc
cmpsb
xor
fs
sbb
lds
and
jne
or
das
cwtl
cmp
and
xor
scas
mov
push
in
sti
cmp
mov
ficomps
mov
sbb
cmp
xchg
dec
cmp
xchg
addr16
dec
daa
adc
sub
push
dec
cmp
addb
ss
cmp
xor
or
cmp
sbb
push
fwait
lret
dec
sbbb
sti
mov
mov
push
push
pop
movsb
call
add
sub
cmpsb
sti
repz
mov
jmp
dec
cwtl
decb
jp
fmuls
ds
stos
mov
or
push
fwait
mov
mov
inc
cmp
push
cmpl
movsb
das
xor
pop
push
sbb
add
hlt
popf
cli
test
cmpsb
movsl
shlb
out
lods
js
adc
aaa
xchg
lock
dec
dec
xor
dec
inc
daa
ficompl
ja
in
mov
shlb
dec
fmulp
repz
push
in
popl
rcrb
jp
add
dec
sahf
clc
push
xor
mov
scas
xor
jmp
push
in
or
xchg
insb
in
mov
lea
xor
in
mov
into
outsb
sbb
push
mov
ss
daa
mov
adc
jp
mov
push
popa
mov
andl
shrl
scas
pop
mov
jl
push
jl
push
test
cmp
sub
aad
adc
inc
enter
ret
rolb
stos
mov
pop
jb
loop
popf
fsubrl
mov
xor
fsubl
clc
pop
mov
xchg
out
icebp
sub
pop
sahf
out
mull
add
fstpl
xchg
dec
roll
sahf
or
lods
fnstsw
fmulp
cwtl
cmpsl
dec
jmp
sti
mov
xchg
mov
mov
enter
movsl
dec
mov
cmpsl
insl
push
mov
mov
adcb
stc
dec
mov
int3
and
xor
push
pushf
mov
adcb
dec
jbe
rorl
out
movsl
bound
adc
mov
adc
inc
pop
sbbl
pop
adc
dec
ljmp
dec
mov
fwait
mov
xchg
dec
lea
xchg
pop
sti
dec
cmp
sbb
test
sub
out
mov
cmp
cmp
cmp
in
fs
test
cmp
neg
inc
sub
loopne
loope
mov
out
test
mov
cli
in
cmp
cmpsl
and
lea
push
fidivl
rorb
push
mov
dec
sub
test
nop
push
xor
loope
pop
ds
dec
movsl
aad
pusha
lds
add
pusha
aam
mov
popa
out
xor
push
inc
das
xchg
or
cmp
mov
or
in
fisubrs
pop
lea
mov
sub
sbb
xchg
inc
and
pop
sub
dec
in
lea
cmp
test
cmp
aad
stc
add
pop
divb
ficompl
arpl
dec
pop
cmc
jmp
pushf
int3
in
das
cmp
adc
push
inc
push
fcmove
dec
test
xchg
pxor
fisttpl
clc
mov
ret
lea
jne
jp
push
out
inc
imul
les
imul
shll
xorl
test
dec
je,pn
ss
jbe
pop
insb
call
cmc
sbb
push
clc
mov
jl,pn
jne
xchg
or
pop
cmp
fcoms
scas
sbb
mov
push
orl
sbb
fildll
push
out
out
or
jle
xchg
jae
loop
push
sbb
outsl
data16
pop
jl
sub
aaa
outsb
ss
jecxz
test
mov
mov
es
repz
cmp
mov
lahf
add
add
cmpxchg
insb
cmp
orb
test
mov
xor
mov
mov
in
sbbl
rorb
movsb
jge
or
mov
out
adc
dec
lods
adcl
cli
fcoms
push
cmp
cwtl
aam
popa
decl
inc
add
mov
sarl
shll
fs
push
mov
sbb
push
fdivs
mov
mov
lds
mov
fldl
adc
test
in
aam
adc
neg
popf
mov
arpl
fwait
mov
mov
aas
lock
test
outsb
and
mov
repz
popf
pop
imul
push
xor
fimull
dec
int3
cltd
pop
adc
sbb
sub
push
mov
subl
call
inc
sbb
sbb
testl
sbb
mov
fmulp
pop
xor
or
rorl
cltd
arpl
dec
sbb
imul
add
fistpl
and
add
jecxz
cmp
clc
mov
inc
sti
pop
mov
ret
cmp
mov
popa
push
jbe
inc
inc
adc
pusha
sti
xor
jo
lret
xlat
pop
std
lahf
adc
mov
pop
cs
ret
xor
nop
pop
mov
and
aaa
fistps
andb
mov
jg
loope
push
outsb
test
int3
xchg
dec
fwait
adc
push
pop
call
cmc
sbb
sbb
pop
mov
fisttpll
dec
adc
push
mov
mov
loop
pop
mov
lods
loop
or
shrl
xlat
sub
in
ret
xor
adc
and
roll
adcl
sbb
xor
loope
lahf
clc
xor
pop
sbbl
notl
jae
subl
mov
adc
daa
pop
lods
addr16
sub
sahf
sti
cld
or
pusha
push
push
sub
lea
arpl
jnp
or
pop
pop
std
cmc
push
loopne
shlb
out
push
sarb
sbb
inc
mov
fcom
mov
pop
sarb
pop
mov
stos
filds
das
fiaddl
loop
mov
mov
lock
cmp
movsl
fdivl
nop
push
int3
sti
loopne
xchg
call
fisubl
lods
add
out
mov
jmp
popf
aad
or
xor
push
add
mov
cs
mov
cmp
in
mov
xchg
clc
xchg
dec
push
mov
and
je
sbb
test
pop
aad
cmp
push
jp
xor
or
sbb
out
les
ret
aad
xor
dec
outsb
js
mov
jne
les
icebp
push
dec
mov
stos
mov
loop
rolb
data16
test
lcall
imul
xchg
sahf
scas
fistpll
sahf
lods
leave
stos
lea
clc
and
inc
dec
add
push
xor
pop
das
repnz
rol
aas
frstor
sbb
test
fldl
mov
cld
pop
xchg
imul
push
jl
pop
lock
mov
mov
xchg
outsl
cltd
sub
mov
jmp
dec
mov
js
je
dec
dec
stos
xchg
xchg
jmp
imul
xchg
es
stos
stos
fists
pusha
and
outsb
xchg
sbb
jno
in
dec
push
pop
loopne
xchg
stc
jo
lret
mov
jecxz
clc
cs
mov
inc
sbb
push
js
push
shll
jecxz
add
repnz
mov
pop
hlt
adc
fwait
insb
dec
adc
jp
into
add
pop
pop
das
and
ss
in
mov
lock
jle
insl
sub
cmp
stc
mov
and
sbb
cmc
imul
xor
adc
ret
push
jb
lods
outsl
in
insl
shll
push
xlat
data16
shlb
jle
add
pop
cwtl
xchg
adc
add
testl
and
xor
cmp
rcrb
jnp
sub
loopne
inc
fmulp
xchg
movsl
xor
sbb
sbb
ss
faddl
xchg
stos
pop
mov
jle
mov
pop
mov
sub
ja
and
jecxz
xor
lcall
sub
fdivr
and
pop
mov
add
jne
inc
fnsetpm(287
or
imul
mov
jne
pop
lea
adc
mov
adcl
cwtl
xchg
or
sbb
inc
aad
dec
adc
mov
xor
imul
aas
stc
aas
pop
add
outsl
jecxz
xor
adc
add
in
adc
scas
cmc
jno
add
shrl
aam
pop
inc
fstpl
pop
mov
mov
add
movsl
stos
stos
sbb
rcrl
loopne
enter
mov
clc
mov
and
mov
pop
xor
ja
mov
in
push
test
daa
cmp
pop
and
adc
mov
cwtl
mov
inc
stos
rcrb
mov
pop
dec
sub
nop
push
insb
mov
inc
cli
std
jne
movsb
adc
test
pushf
cmpl
sub
fcmovbe
adc
jne
push
movb
inc
mov
stos
and
mov
cltd
cli
mov
inc
jo
push
sub
xlat
mov
faddl
dec
sahf
jns
inc
add
les
or
test
pop
cmp
daa
shrl
jno
jbe
mov
out
mov
xor
lds
or
jbe
repz
xor
gs
out
imul
mov
xchg
fwait
lock
pop
jns
cmp
mov
outsb
xor
inc
dec
push
lods
mov
lcall
sub
mov
mov
in
or
icebp
or
out
xor
addr16
pop
and
shrb
shll
pusha
adc
xor
push
stos
enter
lea
jnp
xor
lea
fistl
mov
push
repz
jl
mov
sub
mov
mov
mov
push
pop
ret
push
shrl
mov
sub
arpl
xor
or
je
sbb
xchg
add
fs
inc
add
adc
and
imul
cmp
sub
mov
ja
and
cwtl
or
mov
out
es
out
sub
outsb
popf
pusha
sbb
fwait
ret
mov
divb
das
dec
inc
in
fimuls
xchg
add
dec
sti
test
lock
imul
enter
shrl
shll
sarl
inc
sbb
aad
dec
jle
pop
roll
pushf
pop
and
xchg
int3
cld
lret
pop
xchg
stos
xor
adcb
aam
iret
cmpsl
jno
fisttps
mov
push
inc
sub
add
mov
aad
push
ficoms
xor
movsl
mov
es
loope
push
cs
mov
clc
and
inc
jae
rclb
gs
pop
push
jmp
and
cld
push
push
jns
mov
lcall
inc
mov
pop
cmpnleps
decb
stos
cmp
pop
adc
or
pop
and
repnz
cmpsl
movsl
mov
cwtl
scas
and
mov
insl
push
cmp
iret
sarl
out
xchg
push
dec
ss
out
aas
mov
sub
pop
xor
cli
sub
add
mov
mov
mov
mov
mov
jecxz
fnstcw
push
aam
dec
sub
aad
mov
sub
adc
jp
aaa
xchg
stos
aaa
pop
mov
jp
orb
movsl
hlt
xor
movsb
jmp
push
push
dec
lret
xchg
mov
push
and
mov
lea
int
inc
xchg
int
dec
and
daa
scas
pop
push
clc
push
int3
cmp
std
ret
out
mov
mov
fwait
add
xchg
jge
test
mov
hlt
lret
jmp
jno
jmp
fnsave
das
jle
icebp
mov
mov
dec
sub
sbb
pop
movsb
mov
jl
dec
mov
aas
cmpsl
dec
mov
cmc
pusha
movsb
cmp
cld
dec
cmp
jbe
daa
leave
adc
out
shl
sbb
dec
or
insl
sub
icebp
jns
xchg
push
lods
mov
bound
stc
adc
aas
push
dec
pop
lods
jbe
movsb
xlat
out
lods
in
cs
lret
sub
repnz
call
push
imul
xorl
enter
mov
es
test
scas
out
adc
lcall
gs
mov
int3
mov
push
inc
mov
stos
sbbl
and
sub
scas
mov
adc
sub
pop
push
mov
add
stc
dec
add
pop
fbld
cltd
dec
pusha
fwait
mov
sarb
mov
sub
loop
call
sub
or
imul
mov
sub
inc
adc
sub
cmp
mov
push
dec
clc
in
hlt
dec
int3
rcl
out
std
std
loope
in
dec
popf
push
xchg
sub
xchg
inc
fisubs
jne
xlat
mov
inc
cmp
mov
test
aas
call
jle
mov
pusha
pop
fwait
rclb
insb
jecxz
cmp
inc
mov
add
adc
pop
add
xchg
push
cmp
jno
in
push
cwtl
adc
test
push
movb
push
jmp
inc
sbb
loope
mov
lcall
or
mov
push
push
outsb
js
xor
inc
stos
jge
fildl
sub
clc
mov
in
cmp
or
mov
shrb
xchg
push
push
subb
adc
push
jp
gs
ret
mov
sbb
inc
mov
mov
xor
pop
mov
aas
add
lock
in
sub
jno
movsb
loope
jno
inc
mov
cmpsl
xor
mov
dec
rol
cmpsb
aam
add
push
out
xlat
repz
mov
aam
jl
fwait
mov
fisttps
stc
in
adcb
cmp
mov
stc
jne
pop
pop
scas
int3
sub
in
inc
lods
std
mov
xor
xor
call
sbb
push
jne
sub
mov
and
sub
xchg
mov
mov
mov
adc
add
inc
mov
and
add
pop
scas
incb
xchg
repnz
and
pusha
pop
mov
and
stc
jl
fadds
add
lret
xchg
or
loopne
int
stos
imul
xchg
sbb
jae
arpl
ret
adc
xor
mov
adc
jmp
jns
and
sti
adc
mov
xchg
dec
sub
xor
inc
inc
stos
or
pushf
shrl
out
cmpsl
fs
push
maskmovq
enter
arpl
xor
cmp
xor
inc
ss
jae
scas
popa
mov
int3
lret
or
cmp
idivl
inc
pop
push
stos
or
or
xchg
dec
pop
inc
xchg
add
fsts
les
into
gs
or
pop
lcall
fdivrl
rcrb
test
sub
and
movsb
dec
bound
xor
fsubl
loope
xchg
in
fucomip
xchg
push
ljmp
cmove
shlb
add
jno
daa
int
jecxz
xchg
outsb
das
mov
or
jp
test
mov
push
sbb
fldenv
xorb
pop
lcall
testl
adc
sub
loope
xor
popl
jmp
mov
xor
dec
jo
ss
and
div
ret
pusha
pop
ja
std
enter
movsl
jp
push
and
push
xor
push
push
push
adc
call
or
loop
aaa
mov
jo
sub
or
ds
mov
mov
fadd
xor
mov
add
push
xchg
data16
pop
pusha
cs
pop
jmp
push
xor
js
lret
add
push
daa
sbb
jb
inc
clc
xor
les
fisttps
push
and
movsb
fisttps
inc
cltd
mov
js
xor
push
ss
add
dec
aam
mov
lcall
ss
in
int3
mov
xor
add
loop
mov
int
or
cmp
std
in
sub
fisttps
or
mov
lret
aad
mov
repz
scas
add
mov
adcl
and
jle
cld
pop
icebp
push
mov
rcr
mov
hlt
add
xchg
orl
ret
pshufw
mov
add
in
movsl
push
dec
repnz
sbb
ljmp
je
cmp
push
popf
mov
std
addr16
jo
jmp
lahf
sub
ss
jmp
adc
daa
mov
inc
sbb
mov
pop
bound
movsl
jne
or
test
pop
push
xchg
inc
bound
cmp
int3
mov
cmp
dec
jge
jl
jecxz
mov
and
and
adc
xor
jecxz
push
push
or
cmp
push
sar
or
mov
aaa
mov
clc
jl
repnz
pushf
jno
fsubp
mov
orb
loope
movl
mov
or
mov
aaa
cwtl
fwait
rcrb
or
call
test
add
aaa
loopne
mov
jle
insb
mov
sub
or
imul
cmp
xchg
lret
push
arpl
aad
sti
jmp
call
or
mov
mov
mov
out
inc
stos
mov
pop
ret
mov
sub
adc
mov
mov
mov
lods
inc
fldcw
push
imul
adc
aas
or
xchg
arpl
dec
add
je
mov
into
or
sub
addr16
or
sbb
xor
inc
leave
repz
mov
incb
loop
sahf
fnsave
fidivrl
inc
jl
orb
cli
sbb
mov
lret
or
mov
mov
sub
enter
stos
mov
repnz
push
mov
mov
mov
xchg
add
mov
ss
sub
push
inc
ljmp
mov
lods
pop
adc
ljmp
jo
push
stc
clc
mov
repnz
arpl
dec
ret
inc
jmpw
sub
fwait
add
jb
lahf
and
jb
idiv
inc
idivl
int
out
fst
xor
ds
add
xor
aas
mov
cwtl
repz
repz
stos
inc
lock
sbb
sub
repz
lcall
jb
mov
push
mov
btr
loopne
std
and
cwtl
cmpsl
subl
stos
loope
or
adc
mov
or
push
sbb
push
aas
cmpb
add
jle
dec
mov
les
dec
jae
add
mov
scas
stc
gs
ds
sti
sbb
cltd
mull
sbb
outsb
outsl
xchg
test
cmpl
jne
sahf
std
or
mov
cld
sbb
aad
sub
imul
and
aaa
pop
add
js
jg
inc
cmp
insb
lea
mov
rcll
sub
cmp
lahf
aas
arpl
lcall
sub
inc
fisttpll
fistpl
xor
call
movsb
push
clc
mov
aas
jle
test
sbb
jmp
lods
pop
mov
push
adc
shlb
add
jle
mov
xchg
mov
gs
shlb
or
sbb
cltd
add
add
ror
mov
ljmp
lret
push
out
cld
cmp
adc
mov
hlt
jge
mov
nop
pop
add
imul
push
push
mov
xchg
sbb
shrb
push
inc
fildll
dec
out
adc
sbbl
mov
dec
mov
in
aaa
adc
pop
test
das
daa
sbb
jg
imul
lret
repz
xchg
jg
cmp
push
push
les
in
or
or
sbb
jno
data16
xlat
mov
inc
pushf
lock
xlat
push
test
sbb
scas
sub
pop
outsl
adc
jo
dec
add
ret
stc
sub
test
add
xchg
repz
push
or
dec
push
lcall
sub
jmp
je
popa
push
adc
inc
mov
jae
rolb
sub
inc
push
fstpt
push
xorb
xlat
insl
popf
sub
sbb
clc
sahf
les
in
repz
nop
sub
xchg
stos
aaa
jge
pusha
iret
and
push
xor
push
repnz
mov
mov
cmp
jp
fildll
sti
inc
cmp
sahf
sbb
xchg
fisubrs
cmp
test
sbb
mov
adc
cmpsb
add
and
mov
jecxz
push
inc
ds
pop
scas
test
mov
and
xlat
add
ret
jp
jno
cwtl
xchg
in
xchg
fdivr
inc
pop
pop
and
jo
or
mov
outsl
js
call
sub
or
ret
outsb
jb
push
mov
sub
std
sbb
push
mov
sub
fists
jle
cmp
sub
mov
cmp
insl
adc
cld
pcmpgtw
mov
and
inc
and
inc
inc
cmp
sub
pop
inc
sub
jne
cmpsb
ret
dec
cli
ds
fiadds
in
jno
cmpsb
lret
jg
cltd
subb
into
outsb
jle
xor
inc
add
jnp
mov
add
cmpl
leave
push
rorl
enter
cltd
jle
push
push
leave
ret
push
pop
mov
dec
and
shr
jno
sti
mov
cltd
pop
mov
push
lock
out
fistl
mov
imul
movsl
hlt
push
xorl
xchg
nop
or
ds
mov
xchg
out
adc
jg
cmp
pusha
xchg
outsl
sbb
scas
leave
iret
mov
cwtl
xchg
rclb
sbb
mov
std
scas
push
xchg
imul
imul
add
pop
push
sub
cld
stos
sub
mov
cmp
dec
test
mov
arpl
dec
jg
jae
push
mov
xchg
ss
lret
lret
mov
pop
xor
sbb
push
mov
or
shrl
mov
movsl
mov
mov
dec
inc
fimull
xchg
fidivl
push
and
pslld
push
int
lea
pop
jns
popa
fcoms
cmp
call
dec
mov
scas
lods
les
dec
sahf
dec
jno
xchg
push
dec
xor
das
add
cmpsb
sbb
je
bound
imul
and
jne
ret
scas
jmp
inc
xor
or
sub
cmp
xchg
and
outsl
insb
add
ret
sbb
xchg
lods
loop
push
adc
cmpsb
loopne
out
ljmp
scas
ja
adc
xchg
cmpsl
dec
jnp
xchg
push
shr
adc
sbbl
mov
mov
adc
adc
inc
push
dec
movsb
mov
aad
movsl
pop
push
movb
mov
dec
repnz
mov
arpl
fisttpl
mov
popa
jns
mov
out
sbb
push
or
sub
or
mov
and
push
sti
mov
add
inc
pop
dec
jne
dec
dec
pop
jl
jecxz
or
cld
out
dec
mov
add
push
outsb
adc
lea
fstps
dec
jle
pop
js
jp
inc
xchg
scas
or
add
cmp
icebp
les
and
mov
mov
sbbb
aad
bswap
mov
xchg
sbb
jnp
shrb
ret
popa
pushf
and
mov
sbb
mov
test
repz
stos
lods
or
in
pop
jl
cmp
push
jl
cmp
jb
lahf
adc
cmp
add
scas
popa
jae
outsl
mov
das
mov
cmp
out
add
or
gs
sbb
sbb
test
data16
and
es
mov
mov
or
jbe
or
fisubrl
lcall
je
xor
jmp
sub
and
pop
loopne
mov
push
adc
cmp
push
pop
lcall
push
cmc
fimull
das
dec
add
push
iret
xor
nop
out
pop
add
imul
mov
cs
jbe
jb
gs
xchg
popf
out
pop
or
fs
xchg
test
or
xlat
and
addr16
sub
mov
mov
imul
mov
add
cmc
add
cmpsl
jb
cltd
inc
xchg
pop
std
xor
insl
sub
jae
sti
mov
mov
cwtl
lcall
adc
popf
into
clc
xor
adc
adc
mov
push
push
push
inc
sbb
out
jnp
sahf
das
pop
xchg
dec
hlt
xor
xchg
mov
mov
xchg
outsb
cmc
outsb
insb
xor
sub
aad
jmp
movsb
cmp
mov
or
mov
adc
mov
iret
pop
dec
cmc
sbb
and
sbb
fisttpl
in
adc
jmp
inc
lret
pop
xor
and
adc
pop
cmp
sbbb
jl
pop
mov
fidivl
mov
ja
pop
jae
lcall
adc
popf
jle
jno
inc
push
mov
xchg
imul
xor
repnz
mov
enter
jmp
ret
inc
aas
xor
push
cmp
rcr
mov
sahf
sahf
jno
jecxz
mov
xor
into
cmp
push
stc
push
in
mov
call
pushf
insl
and
xor
das
test
fdivrl
scas
fcmovne
into
aas
fdivrl
push
scas
xor
xor
sub
add
sub
jmp
popa
push
sub
mov
cli
cmp
sbb
sub
es
add
lret
scas
mov
add
jecxz
insb
sbb
pop
xchg
sub
mov
dec
jno
loope
sub
sub
jno
sub
cld
orl
fstenv
insl
call
movsl
in
cmp
xchg
mov
rcr
negl
jl
mov
mov
dec
and
in
jmp
dec
orl
cmp
cmp
fsubr
scas
push
rcrl
jno
jns
sahf
divl
and
mov
fiaddl
ficoml
inc
xchg
mov
into
cmp
push
es
xor
mov
out
int3
inc
call
xchg
enter
sub
loop
icebp
int
jg
and
mov
andl
pop
mul
ljmp
inc
mov
jne
mov
xlat
pop
cmp
iret
stos
imulb
fimull
ret
pop
push
inc
adc
mov
out
sub
test
add
or
into
pop
fildl
sub
dec
pop
lds
test
gs
insb
inc
out
imul
fs
test
mov
xor
movl
out
mov
sbb
inc
fistps
or
ljmp
xlat
jp
imul
neg
and
xchg
lret
icebp
mov
test
xor
dec
nop
pop
inc
ret
cmc
arpl
mov
out
and
sbb
mov
sub
daa
fistl
clc
lret
nop
sbb
test
or
loop
into
cmpsl
mov
pop
xchg
std
fstpl
icebp
ret
mov
xor
imul
mov
cld
mov
loop
pop
inc
and
and
fidivs
sarb
mov
sub
bound
mov
cmp
cmp
sbb
and
jecxz
aas
add
in
cld
outsl
mov
xor
bound
sahf
adc
cmp
sub
add
rolb
bound
push
ret
xor
jne
sub
cmp
frstor
push
in
xchg
out
repnz
mov
out
loope
out
wrmsr
out
imul
loop
outsl
sub
mov
mov
sbb
ret
xchg
mov
sti
jge
mov
sub
clc
scas
pop
fists
xchg
jae
ss
fldcw
das
test
aaa
xchg
mov
stc
xor
lods
mov
push
lods
jnp
mov
push
lds
inc
push
in
xchg
enter
xchg
daa
xor
les
pop
pmulhw
sbb
push
test
inc
push
jg
lock
pop
dec
xor
push
or
dec
jecxz
shlb
push
inc
or
jmp
imul
jmp
popf
cltd
pop
adc
sahf
jne
mov
and
out
mov
test
movsl
in
cmp
jmp
pop
clc
jne
xlat
ljmp
pop
repnz
test
mulb
mov
or
mov
mov
out
shrl
sub
inc
add
jae
add
pop
jo
jo
roll
cmp
pusha
cmpsb
test
into
push
xchg
hlt
or
mov
fwait
into
lea
rorb
push
addr16
fcoms
sti
cli
xor
xor
lret
sub
mov
dec
bound
ja
lock
inc
movsl
and
notb
push
mov
movsl
rcrl
movsl
scas
sub
xchg
fnsave
or
sub
and
adc
mov
push
fnstcw
lods
mov
and
pop
arpl
dec
and
inc
dec
aas
stos
movsb
shrl
lods
add
ret
fiaddl
outsl
mov
push
cmpsb
sbb
arpl
lock
cmpsl
pop
inc
in
mov
inc
mov
adc
outsl
sti
repnz
cmc
pop
push
or
add
sub
sbb
int
mov
mov
cmp
sub
push
push
cmp
rol
cltd
pop
repnz
xchg
out
mov
mov
add
test
push
out
lods
lahf
ret
or
xchg
inc
cmp
pusha
das
sub
mov
pop
add
sub
jg
mov
pop
push
ror
mov
xor
xor
push
mov
cmp
ret
mov
lret
arpl
mov
pop
xchg
jge
xor
xlat
cmc
imul
ret
nop
lret
adc
jnp
and
push
call
int
sub
inc
fnsave
cmpb
push
mov
fbstp
repnz
xor
jmp
and
mov
cmp
mov
jmp
push
lahf
stos
or
xchg
pop
mov
ret
in
inc
leave
shrl
imul
inc
push
and
test
xchg
incb
std
sub
idivb
out
push
imul
sub
sub
fadds
dec
or
bound
movsb
lods
lods
inc
hlt
and
mov
add
mov
das
pop
jle
xchg
adc
push
repz
in
dec
or
mov
mov
jne
andb
jg
movsb
jle
aad
inc
ss
cmpl
pop
sahf
lcall
addl
pop
popa
icebp
sbb
sbb
cltd
hlt
test
mov
filds
inc
sub
adc
cmp
push
jnp
cmpsl
sahf
adc
rcrb
fldcw
sub
xor
mov
cmp
cld
inc
ja
loopne
ja
or
push
dec
xor
inc
add
mov
pop
sub
cmp
xor
jb
push
jb
or
fs
imul
icebp
outsb
mov
and
cmp
hlt
pushf
pop
xor
out
sahf
add
rcrb
imul
dec
inc
mov
outsb
jbe
push
adc
sub
sub
in
out
add
popf
sbb
sub
cli
into
out
dec
es
ljmp
adcl
mov
mov
push
mov
int
fidivs
test
inc
pusha
add
push
ljmp
push
inc
scas
hlt
mov
lahf
push
sbb
imul
dec
enter
dec
jo
xor
jle
cmp
int3
insb
add
loopne
cmpsl
xor
mov
cld
xchg
roll
dec
adc
out
ljmp
fsubrs
shlb
shll
adc
test
adc
out
jbe
in
sbb
shrb
push
andb
shr
or
push
jg
jg
mov
fimuls
loop
mov
xchg
pop
sbb
les
fistpl
mov
popf
clc
imul
outsb
subl
popf
mov
push
add
es
std
cmpsl
or
movsl
shrl
int3
pop
rcl
outsl
push
mov
aad
mov
lds
enter
jl
aas
xor
xor
or
adc
cwtl
dec
inc
xchg
jmp
test
icebp
mov
and
hlt
es
dec
xlat
jb
mov
popf
std
dec
movsb
xor
faddl
adc
popa
out
jmp
arpl
mov
xor
adc
cmp
pop
or
stos
jmp
push
cld
out
mov
jns
sarl
push
in
jl
nop
sub
test
fldt
cld
rorb
lret
cmpsb
ja
or
dec
or
cld
cmpsb
mov
out
push
hlt
pop
in
ss
jge
popl
nop
cltd
orl
lret
lods
cltd
dec
inc
ljmp
xchg
jo
push
js
mov
add
sub
outsb
cmp
js
jp
mov
or
ja
frstor
mov
test
push
nop
test
rolb
pop
les
stos
jmp
xor
jne
lock
mov
sbb
je
into
cmp
gs
cmp
scas
imul
or
cmp
sbb
arpl
out
xor
adc
jle
xchg
icebp
lret
std
and
decb
data16
outsb
mov
xchg
imul
push
xor
daa
ljmp
xorb
add
mov
jns
xchg
cmp
cmp
or
stos
adc
test
sub
xor
or
pop
aaa
mov
pop
sub
outsb
int
cltd
dec
movsl
cmp
inc
and
mov
imul
cmpl
fildll
inc
mov
fdivp
xor
mov
add
ret
imul
cmpb
repnz
jp
inc
lds
sub
sbb
roll
jl
mov
test
mov
lahf
dec
vmovupd
nop
inc
push
push
ret
jno
mov
mov
xchg
or
cs
lahf
fildl
xor
nop
scas
sub
addr16
add
pop
fiaddl
push
nop
fistl
xchg
mov
dec
xchg
or
cmc
xchg
fcom
neg
out
mov
es
jae
mov
or
insl
aas
pop
add
dec
stc
mov
adc
push
mov
shrl
std
jmp
cmp
adc
xchg
or
mov
add
xor
push
jne
cwtl
pusha
idivl
push
cs
shll
das
icebp
sahf
stos
sbb
sahf
push
jmp
ret
or
mov
mov
shr
xchg
out
hlt
push
sub
in
jbe
jbe
sbbb
je
cs
loope
mov
and
test
leave
sbb
cmp
scas
js
xchg
inc
cmpsb
push
xchg
sbb
aam
cmpsb
adc
mov
fcoms
push
enter
push
pushf
mov
fcmove
xor
fcompl
fstl
jp
popa
push
adc
and
mov
cs
scas
or
addr16
xchg
mov
stos
mov
icebp
pop
sub
idivb
hlt
pop
popa
pop
call
pop
dec
adc
mov
adc
inc
in
ljmp
cmp
cmp
nop
arpl
or
mov
mov
out
outsb
frstor
jmp
lea
outsl
imul
mov
and
push
bound
and
add
les
push
cmc
push
mov
shr
push
adc
mov
aaa
fadds
les
xor
jg
push
sub
popf
or
xor
callw
cltd
dec
or
dec
ret
adc
ja
mov
movsl
cwtl
adc
sti
gs
cmp
icebp
pop
lahf
mov
rcl
es
sub
mov
xor
lret
or
gs
movb
xor
loopne
cmp
lds
add
in
cmp
std
outsb
add
lds
dec
mov
inc
js
mov
and
mov
pusha
xor
adc
dec
and
stos
mov
rcrb
push
dec
es
repnz
sbb
pop
test
cld
xchg
stos
imul
mov
lock
sbb
pop
notb
pop
sub
adc
ja
aas
arpl
dec
cmp
cmp
cs
cmp
pushf
das
lahf
push
loop
or
jae
cmc
aad
mov
xlat
xlat
leave
mov
mov
jmp
dec
stos
leave
add
cmp
test
or
fistl
lods
test
shrl
adc
xor
jg
jo
shl
xchg
mov
xor
ds
cmp
arpl
cwtl
loope
jle
push
jo
roll
mov
iret
push
sub
scas
addr16
xor
or
fistpl
mov
shll
add
lahf
out
pmullw
gs
fdivl
cmp
push
icebp
sub
flds
orb
dec
xchg
mov
andb
sbb
sbb
jecxz
adc
sub
mov
scas
scas
idivb
cmc
lods
lea
outsl
dec
outsb
arpl
shrb
incl
mov
jle
dec
js
out
lret
adc
mov
cmp
cmp
dec
icebp
jno
scas
or
rolb
jl
sti
mov
test
cli
jp
jle
loopne
push
jg
push
mov
aam
xchg
sarl
scas
inc
or
dec
cmpsb
jae
cli
cli
fbstp
in
xor
inc
enter
ja
push
leave
divl
jmp
inc
and
icebp
dec
insb
insl
push
pop
aaa
push
loope
fwait
cmpsb
lahf
sbb
xchg
out
sbb
mov
mov
add
push
cmp
pop
mov
mov
add
pop
adc
and
pop
sbb
cli
pusha
mov
cmp
pop
or
jecxz
and
lods
dec
bnd
in
jmp
add
call
push
out
push
es
dec
rep
sahf
sti
addr16
int3
add
out
dec
mov
mov
jbe
xor
xchg
and
movsb
cmpsb
insb
jno
and
out
pop
bnd
test
and
sbb
push
add
lea
sbb
test
push
sub
test
sub
jnp
inc
scas
in
xchg
and
add
nop
clc
das
mov
mov
aas
mov
les
jmp
mov
incb
adc
pop
mov
push
pop
push
pusha
jge
jl
jne
xchg
lods
lods
and
repz
nop
les
and
mov
data16
xchg
out
imul
xor
mov
inc
clc
add
and
dec
jmp
xor
dec
sub
fsubs
adc
fucomp
outsl
jbe
and
sti
mov
sbb
xor
dec
jl
jle
in
mov
imul
or
test
xchg
mov
inc
dec
mov
sbb
jno
pop
in
cmp
mov
loope
into
addr16
out
mov
pop
xchg
cmpb
lds
leave
je
pop
push
je
cmp
pusha
addr16
addr16
movsb
xchg
adc
loop
adc
xchg
in
push
mov
or
enter
ss
sbb
push
jnp
ror
mov
outsl
out
jns
sbb
and
sub
aaa
fists
add
lcall
jp
inc
xorl
ds
sbb
pop
push
out
data16
andb
scas
mov
or
xchg
inc
test
add
scas
loope
andb
out
dec
inc
xchg
std
xor
sbb
add
mov
xchg
fsubp
xchg
mov
jo
scas
mull
sti
sbb
gs
fwait
push
mov
add
in
test
iret
xor
add
jmp
push
sbb
dec
es
push
jno
aam
test
les
and
faddp
sub
pop
lods
pushf
ss
mov
push
push
enter
mov
inc
js
ja
and
adc
fnstcw
fsubrp
loope
lods
push
cmp
jmp
addr16
cmp
cmp
add
xchg
lea
dec
repz
stos
adc
inc
int
mov
mov
inc
fadd
push
jmp
pusha
movsb
andb
std
leave
jbe
cmpsl
push
xor
cmp
pushf
mov
push
lock
adc
push
test
addl
es
and
pop
inc
xor
push
mov
add
movsl
ret
lret
adc
adc
repnz
lods
stc
xchg
cmp
bound
sub
insl
mov
imul
imul
fimuls
std
mov
mov
cmp
pop
loope
jbe
in
mov
movsl
aaa
mov
stc
xchg
adc
sbbb
test
popa
fsubl
in
cmp
push
cmp
mov
test
pop
pop
fxch
aaa
daa
and
mov
popf
adc
int
sarb
lret
addb
sti
stos
lds
cmp
xor
or
inc
adc
sarb
imul
or
mov
scas
test
testb
push
or
js
xor
or
mov
push
pop
or
xor
nop
aad
lret
push
gs
filds
lock
fs
pop
cmp
fwait
iret
mov
loope
inc
cmpsl
pusha
or
mov
and
mov
jb
or
inc
scas
les
xor
pusha
pop
fwait
in
repnz
push
outsb
mov
push
xor
xchg
push
test
iret
xor
out
inc
or
es
mov
fs
xchg
sub
jne
mov
push
popa
sub
fbld
inc
push
mov
ds
lds
lea
aas
in
ret
pushf
mov
dec
shll
leave
xor
pop
mov
sarl
xor
mov
repnz
stc
imul
xor
add
dec
orl
dec
mov
roll
jne
jg
sub
mov
pop
fnstenv
in
sbb
nop
adc
or
decb
cwtl
adc
sbb
lahf
icebp
loope
notb
call
jns
idiv
jae
xchg
push
lcall
mov
outsl
jae
pop
cwtl
negb
push
sub
mov
lea
sub
jmp
xor
adcl
mov
vmovsd
test
out
cli
fwait
sbb
divl
test
push
push
mov
cmp
mov
xchg
mov
mulb
xchg
shl
dec
xchg
add
cmp
push
or
cmp
roll
test
imul
rcrl
add
nop
out
call
daa
arpl
cli
jne
test
adc
fcomps
shll
out
lcall
not
mov
sahf
or
pushl
cmp
cmp
adc
xchg
pop
jecxz
test
mov
call
das
adc
push
out
xchg
or
adc
add
imul
js
dec
pop
lea
xchg
sbb
add
cmpsb
xor
rcrb
inc
sbb
push
jecxz
repz
pop
or
in
add
pushl
adc
sub
or
sahf
clc
int
sbb
pushf
and
aas
ret
fdivl
and
and
cmc
cmp
daa
cld
stos
add
pusha
or
pop
xchg
icebp
push
inc
aas
xchg
pusha
sarl
mov
mov
sub
push
loop
inc
mov
xchg
out
push
inc
mov
xchg
pop
rcl
data16
xorl
and
inc
mov
addr16
and
shll
test
sub
clc
popa
fdivl
popa
repz
push
sbb
push
xchg
xchg
xorb
pop
push
push
loop
out
pop
cltd
adc
dec
cmp
jo
mov
sbb
jmp
aad
aaa
in
dec
test
fcmovu
stos
ret
cltd
jl
cmova
push
ret
aam
add
mov
and
imul
movsb
roll
aad
sarb
into
movsb
mov
rcrb
jns
pop
adc
xchg
pushf
mov
rcl
pusha
xchg
fcomp
cmp
sbb
es
pop
lahf
mov
mov
rcrl
cmp
popa
cmpsl
mov
mov
xchg
dec
mov
es
dec
imul
jg
shl
rorb
lret
loope
sub
mov
mov
insb
ficoms
xlat
fldenv
test
popf
xchg
jmp
sar
sub
in
jge
dec
or
addb
or
mov
push
cmp
mov
cmpsl
pop
mov
lds
jbe
js
pop
sti
call
loopne
pop
bound
popf
gs
insb
rolb
mov
dec
shlb
sbb
jo
data16
and
lea
mov
push
addr16
lret
pop
cmp
shlb
mov
sub
outsl
or
fdivl
std
test
sub
jmp
out
rcrb
sub
sahf
mov
jns
leave
push
jle
faddp
cli
mov
mov
popf
ret
inc
pop
in
mov
stos
cmpsl
xchg
std
ds
repz
cltd
negl
mov
push
daa
mov
popa
jnp
adc
ret
insb
je
outsl
inc
mov
test
insl
xchg
dec
jmp
mov
pushf
adc
dec
int3
in
lahf
push
or
inc
out
movsb
mov
add
push
jl
inc
imul
jns
mov
or
pusha
mov
inc
jae
lahf
fimuls
rcrb
cld
adc
dec
imul
test
sahf
sbb
icebp
cmp
push
clc
jl
or
sub
push
js
mov
mov
idivb
xor
cmpsl
stc
inc
fstpl
iret
xor
dec
test
mov
xchg
inc
andl
xchg
movsb
lcall
mov
andl
aas
xchg
out
adc
lods
xchg
xchg
mov
or
xchg
jns
jg
test
xor
or
nop
mov
lds
int
mov
cli
inc
jmp
push
int
ds
lods
imul
sbbl
jns
imul
mov
jmp
loop
sahf
lret
xor
push
call
mov
jl
and
int3
gs
add
mov
fdivrl
xchg
iret
xchg
push
sbb
xchg
add
mov
ficoml
ljmp
insb
out
xor
push
aaa
std
scas
gs
mov
lea
rolb
mov
es
xchg
jle
mov
jge
out
adc
cmp
push
mov
adc
mov
rcrl
lds
cmp
xor
dec
ficoml
movhps
jl
sbb
fwait
cli
loop
addr16
xlat
push
push
pusha
pop
mov
push
dec
push
stos
pop
or
push
and
pusha
pop
push
jnp
enter
daa
mov
or
xor
jmp
leave
cmpsl
imul
jns
cmp
mov
clc
arpl
rcl
out
pop
aam
push
cli
popf
imul
nop
pop
mov
icebp
xchg
dec
mov
add
mov
push
lds
and
inc
cmp
cmp
and
pop
pusha
data16
cltd
stc
xchg
iret
or
xchg
call
rolb
lahf
cwtl
fstl
test
outsl
iret
stc
stos
mov
arpl
xchg
xor
cmpsl
or
fiadds
fcompl
decb
xchg
dec
rorl
test
or
xor
and
mov
aas
cmp
add
inc
add
cmp
jns
mull
or
xchg
ljmp
aam
dec
sbb
lods
or
ret
jbe
repz
js
pop
int3
jno
outsl
fldt
outsl
stos
ljmp
add
jo
repz
push
mov
cwtl
dec
fstpl
shlb
test
jbe
jno
adc
mov
push
sarl
sbb
inc
movaps
xchg
mov
out
mov
jns
bound
lcall
ljmp
filds
sbb
and
mov
sbb
push
inc
notb
lods
pop
ja
jmp
adc
pop
lods
sub
lds
mov
movsbl
mov
movsl
pop
dec
stos
mov
loopne
pcmpeqd
out
push
bound
mov
ss
jmp
pop
loopne
ds
pop
sub
push
xchg
push
pop
push
or
movsb
cmp
cmc
sub
or
fnstcw
or
xor
mov
mov
fcoms
ja
cmp
pop
pop
push
mov
loopne
inc
pop
pop
jle
aad
test
sbb
inc
mov
in
call
lret
jno
data16
sbb
xlat
and
mov
inc
add
js
inc
jmp
inc
pop
mov
sarl
enter
sbb
xchg
mov
jae
or
inc
jnp
xorl
jp
push
mov
cmpsl
inc
push
js
xor
and
mov
cwtl
mov
xchg
dec
jge
xchg
lea
inc
or
shrb
les
mov
xor
int
jg
and
rcrl
mov
mov
mov
in
mov
shll
shll
and
rorb
popa
lock
sbb
fwait
call
les
loope
ds
jnp
pop
outsb
int
inc
daa
dec
mov
fidivrl
cmp
inc
popl
int
andl
in
sub
push
jle
mov
add
mov
mov
inc
jnp
out
test
ud0
cmp
add
sbb
dec
rorb
das
sbb
rorb
stc
outsb
xchg
push
inc
mov
leave
in
lds
mov
cmp
or
xchg
out
mov
cli
bound
inc
int3
fdivs
inc
xor
shlb
lods
inc
scas
mov
add
les
dec
mov
test
mov
add
inc
jp
sbb
cltd
xor
sbb
cltd
out
nop
inc
cvtpi2ps
scas
ds
sbb
mov
daa
or
push
call
xor
mov
jmp
jmp
aad
movsl
or
jns
pop
orl
adc
sbb
xchg
mov
bound
test
sbb
pop
gs
ljmp
xor
xchg
rcrl
aam
mov
adc
hlt
pop
pop
jns
jae
aam
mov
xchg
cmp
into
outsl
mov
push
jge
add
nop
adc
sbb
push
xlat
pop
pusha
je
xchg
divl
stc
push
bound
push
mov
stos
ret
and
test
adc
fildll
sub
xchg
cs
popf
jnp
add
xchg
add
sub
sbb
add
mov
mov
loop
adc
mov
call
pop
xchg
xchg
cmc
repz
clc
xchg
cmp
sti
out
scas
les
icebp
add
pop
psllw
std
push
cld
pop
mov
andb
mov
in
sti
xor
fwait
rolb
jns
in
and
inc
mov
cmpsb
jp
call
lods
adc
out
shl
pop
jbe
add
pop
jle
cmp
movsl
dec
sub
dec
inc
aas
clc
jecxz
aam
mov
xchg
shll
xlat
adc
std
cmpl
repnz
aas
js
out
cld
dec
push
add
cwtl
mov
negl
mov
aad
pop
insb
fwait
stc
rcr
push
stos
cld
adc
enter
sbb
cmp
jge
jge
dec
jns
mov
jmp
and
das
lods
ljmp
and
roll
dec
jno
out
inc
xor
lcall
inc
pusha
xchg
into
loopne
push
aaa
int
push
mov
jb
popl
gs
xchg
ljmp
ljmp
and
aad
sbb
lock
test
adc
ror
ret
add
loop
sbb
push
dec
mov
mov
pop
mov
or
insl
das
dec
pop
mov
push
or
inc
jg
out
mov
inc
test
outsl
jmp
fsubrl
inc
xor
xlat
mov
cmp
mov
add
mov
dec
out
jg
push
xor
xchg
cld
bound
jo
lea
sbb
or
dec
repnz
sub
out
and
mov
jg
popa
mov
jge
mov
sbb
sbb
sbb
mov
mov
scas
add
jb
push
mov
subb
loop
mov
fcom
mov
int
add
int3
rcr
or
sub
pop
mov
jne
mov
and
mov
jnp
outsl
imul
xor
jns
inc
sbb
inc
jg
cmp
pop
mov
mov
push
and
adc
decl
add
dec
fdivrs
dec
sarl
sbb
ss
lods
xchg
rolb
pop
lcall
out
mov
loop
out
xchg
iret
jg
sbb
shrl
cltd
jns
sub
in
dec
mov
outsb
jle
dec
cmp
mov
ret
push
aaa
mov
or
inc
sbb
mov
ret
push
jecxz
stc
lds
push
xchg
clc
inc
or
cwtl
cltd
xor
stc
in
jg
test
in
sarb
xor
lds
lcall
sub
sti
add
push
mov
pushf
inc
popa
sbb
in
ret
inc
lods
push
sbb
fisubrs
xchg
fnstsw
movsb
fisubrs
leave
ret
std
rolb
js
xor
int
lret
inc
mov
enter
inc
adc
stos
pop
push
stos
mov
loop
jmp
mov
lea
cmp
iret
inc
xchg
negl
popf
rorb
add
leave
je
inc
andb
or
sti
inc
push
cmp
into
fstpt
cld
xor
out
mov
cmp
inc
jp
sti
lods
dec
lcall
dec
repnz
lds
mov
lcall
loopne
stc
int3
jl
mov
ljmp
jno
test
mov
xchg
inc
xor
mov
push
repz
mov
jbe
pcmpgtd
sbb
sti
imul
aas
in
and
or
pushf
mov
push
clc
xchg
jl
jns,pn
test
ds
imul
cld
jle
stos
cmp
mov
div
jle
shrl
push
add
push
popf
jmp
popf
sub
add
jb
jbe
dec
cmovp
scas
pop
push
inc
jo
jnp
je
sbb
push
mov
push
add
mov
lods
push
sub
jno
add
outsl
push
out
sbb
out
push
sub
xchg
push
adc
sub
movsb
push
arpl
mov
jns
sbb
jne
scas
inc
test
rcll
ror
dec
iret
jp
xchg
enter
push
cmp
mov
push
mov
sub
stos
pop
cmp
rcrl
and
mov
out
ds
push
fs
xchg
cmpsl
test
mov
pop
push
test
hlt
fs
ljmp
jge
cmp
inc
int
xchg
jecxz
xchg
fnsave
jp
popa
sub
jg
add
fxtract
jno
mov
jp
inc
dec
fldenv
repnz
cmp
lret
mov
fmuls
pop
sti
or
and
fisubl
add
arpl
loopne
fs
pop
sahf
outsl
icebp
fwait
and
ljmp
fistpll
pop
adc
jns
ss
test
and
jnp
bound
mov
fwait
dec
pop
pusha
xchg
mov
sbb
pop
jmp
cmp
push
pop
outsb
xchg
jp
insl
icebp
xor
xor
or
inc
and
jge
outsb
and
sbb
test
mov
mov
mov
xchg
inc
cmp
xchg
xchg
js
mov
mov
out
enter
pop
add
xchg
mov
sbb
lock
lods
int3
push
inc
add
outsl
in
add
mov
pop
or
jl
fnstcw
scas
pop
xchg
adcb
inc
daa
loopne
cld
and
out
or
dec
dec
fsubr
push
cmp
mov
stos
and
popa
pushf
xchg
pop
ret
out
rcrb
shrl
push
pop
jg
cld
iret
cltd
mov
call
repnz
lahf
inc
loop
in
loopne
sbb
and
mov
push
outsl
stos
push
out
jns
fwait
pop
inc
iret
mov
divb
sti
out
int
pop
xchg
fmuls
push
sti
aad
pop
xchg
out
nop
test
into
or
xchg
push
sbb
hlt
fstp
ret
adc
mov
test
push
mov
ror
sub
fnstcw
or
dec
or
pop
pushf
ficompl
push
stos
mov
or
or
mov
add
decb
cmp
or
scas
pop
pop
sti
xchg
into
daa
xchg
lcall
fs
xchg
dec
popa
mov
dec
imul
cmp
inc
movsl
push
and
out
movsl
fnstcw
lods
or
adc
lcall
sbb
ja
gs
je
pop
into
les
enter
enter
sub
lahf
xchg
das
cmp
add
fisttpll
setno
jno
inc
xchg
inc
aaa
dec
inc
clc
adc
dec
popf
push
and
dec
mov
dec
cmp
and
pop
cli
aad
dec
dec
out
stos
out
pop
and
push
popa
lock
mov
cs
les
ljmp
inc
add
ljmp
push
pop
lret
push
pop
out
enter
sbb
inc
lds
adc
pop
push
outsl
mov
jae
ljmp
enter
rol
js
mov
sbb
add
out
cltd
repnz
scas
or
push
mov
mov
sbbl
mov
xchg
dec
pop
dec
xor
or
pop
push
lds
call
and
pop
shlb
mov
ljmp
jb
icebp
inc
mov
in
jne
ret
inc
lret
fdivrs
jl
lcall
lea
inc
lahf
push
jae
aad
push
cmp
mov
pop
testl
rcrb
jecxz
xchg
lret
xor
int3
adc
or
xor
movsb
inc
int3
add
adc
aaa
adc
out
dec
das
or
in
or
mov
adc
dec
mov
sub
pop
or
bound
jno
loope
icebp
in
les
jle
in
and
cmpsl
popa
fimull
sub
cmp
rol
mov
je
mov
mov
sbb
mov
mov
fidivrs
jne
out
inc
mov
ret
xor
fnsave
gs
adc
js
loop
mov
adcb
mov
fmulp
stc
push
xor
xchg
pop
ljmp
loop
pop
mov
inc
sbbl
sahf
daa
lods
adc
mov
loop
cmp
pop
dec
scas
ljmp
pop
arpl
shrb
daa
pop
pop
lea
mov
ds
jbe
xchg
stos
pop
inc
mov
inc
outsl
xchg
push
in
jo
and
jne
adc
dec
ja
pop
push
mov
pop
mov
shr
mov
jnp
cwtl
xor
sub
pusha
pop
cmp
fdivs
fnsave
jle
cmpsb
jl
lret
jge
cmpl
imul
pop
or
jns
je
das
xchg
push
pop
mov
mov
lcall
pop
add
cwtl
push
subb
fisttps
push
cmc
stos
xchg
jge
mov
sbb
cmpl
mov
push
les
or
add
jmp
mov
xor
xor
cmp
test
push
mov
into
and
mov
sarb
test
incb
jmp
shrb
mov
inc
mov
fdiv
rorl
fisubl
adc
bound
cmp
xchg
in
mov
pop
lcall
repnz
inc
and
inc
in
or
inc
jge
inc
and
jge
cmc
xchg
sub
jecxz
xchg
das
into
rcll
mov
cltd
or
xchg
and
inc
mov
into
push
in
dec
ja
or
aam
std
and
or
mov
jg
inc
or
stos
or
xchg
mov
fcompl
call
jge
loop
or
mov
pop
inc
pop
dec
sbb
xor
add
mov
inc
loop
pop
daa
adc
mov
js
lea
xchg
jle
lea
bound
and
pop
mov
mov
mov
fstpl
fcoms
mov
jnp
sbb
jne
call
sub
out
push
mov
pop
pusha
or
xor
sbb
xchg
jl
mov
dec
adcb
scas
xchg
popf
and
mov
add
or
xor
pop
popf
bound
jg
and
mov
out
and
nop
mov
inc
adc
shlb
xchg
xchg
ret
sbb
jb
mov
addr16
cld
aad
ss
lods
mov
fnstsw
jmp
xchg
imul
lgs
jg
clc
and
popa
dec
fwait
or
pop
div
mov
mov
addl
push
negl
hlt
sbb
add
jl
pop
adc
fcomps
jae
pop
sub
outsb
push
push
dec
xor
insb
inc
andl
out
xchg
insl
jmp
fldenv
pusha
jno
mov
mov
cmp
stos
pushl
mov
pop
lods
adc
mov
in
loop
cmp
add
and
xchg
enter
xchg
in
hlt
and
pushf
lahf
out
fwait
or
test
adc
aas
or
inc
out
and
ret
fwait
ja
mov
jae
outsb
pop
std
cmpsb
pop
cmpsb
out
mov
arpl
xchg
stc
xlat
lret
jle
inc
sub
xchg
pcmpeqw
cmp
mov
scas
pop
aas
add
and
cmc
iret
sub
jo
push
scas
inc
sbb
pop
sbb
cwtl
lods
push
lods
pusha
adc
pusha
ret
gs
mov
jbe
jle
je
scas
xchg
int3
jl
xor
aaa
mov
cwtl
imul
xchg
xor
scas
xor
jecxz
inc
ror
mov
test
push
imul
mov
in
sub
popa
pop
rcrl
dec
push
aad
mov
dec
xchg
push
mov
inc
xchg
xlat
lock
jb
fstl
addb
or
test
add
sub
ja
pop
addr16
ljmp
jecxz
mov
sub
setbe
cld
mov
lahf
repnz
and
jl
or
mov
fnsave
cmpsb
popf
dec
sbb
mov
out
je
mov
popf
mov
ror
lcall
jmp
jbe
mov
daa
idivb
shlb
int3
popa
xor
xchg
adc
mov
stos
jbe
test
ds
dec
ret
lods
lret
jecxz
arpl
push
xchg
or
xchg
jo
push
and
mov
leave
cmp
dec
pushf
mov
stos
mov
xchg
ds
mov
jg
xchg
enter
dec
adc
push
mov
les
cwtl
cld
shrb
into
pushf
inc
and
clc
mov
mov
rcrl
jg
mov
and
mov
sbb
mov
and
push
sub
aas
xchg
fiadds
mov
sahf
fbld
imul
inc
pusha
mov
lock
pushf
add
or
adc
lods
inc
ret
xchg
xor
fisubrs
pop
sti
inc
inc
into
outsb
mov
mov
mov
add
pop
sar
aad
sbb
lahf
inc
sbb
push
xchg
and
mov
xchg
mov
das
xchg
push
inc
mov
push
sbb
add
pop
xor
adc
sub
pushf
or
adc
push
and
fldt
inc
jp
std
sbb
int3
dec
push
scas
shrb
xor
bswap
rolb
inc
push
or
mov
or
xorb
hlt
jmp
mov
lea
sub
and
aas
push
cmp
mov
mov
or
fst
sar
adc
call
mov
imul
data16
xlat
pop
sbbb
xor
pop
mov
add
pop
pop
rcll
insb
inc
stos
sahf
inc
ljmp
mov
push
mov
or
jmp
adc
std
fildl
cltd
push
mov
push
in
sbb
divl
inc
mov
push
sbb
lea
lahf
iret
xchg
jbe
mov
shlb
push
mov
xchg
push
sub
in
ja
out
dec
dec
insb
or
push
xchg
inc
xchg
fldt
xchg
adc
scas
mov
repz
cmp
adc
and
add
mov
mov
xchg
mov
sub
lea
mov
lret
mov
rolb
sarl
cmp
enter
jb
add
and
call
testl
icebp
ret
adc
sbb
and
mov
xchg
xlat
inc
clc
mov
push
stc
mov
out
popf
stc
xchg
inc
shl
mov
mov
add
lods
cmp
pop
rorb
add
mov
lods
xchg
ss
clc
mov
fwait
shlb
sub
mov
mov
and
add
and
call
icebp
pop
xchg
sub
inc
push
sbb
cmp
cmp
lret
mov
push
xchg
jnp
adc
movsl
inc
jns
sub
xor
jnp
scas
loop,pn
push
sti
inc
push
pop
sbb
mov
iret
data16
lods
fldt
stos
cmc
fbld
movsb
or
mov
daa
clc
pop
ret
outsl
cmc
jp
mov
mov
jne
sbb
pop
dec
push
inc
push
sbb
fisubl
mov
or
stc
pop
dec
push
adc
rclb
ljmp
mov
jae
add
out
adc
cmp
mov
stc
mov
add
xchg
push
sbb
lcall
inc
clc
adc
jle
sub
and
incb
mov
and
mov
loopne
enter
add
call
fwait
mov
outsb
cli
aaa
sbb
xchg
or
ret
repz
gs
lds
inc
pop
outsb
inc
ja
shlb
cmp
or
fwait
dec
sbb
aas
mov
insl
in
std
arpl
xchg
push
xchg
loop
sub
rcll
sub
sbb
jo
sub
push
bnd
dec
int3
pop
pop
mov
dec
andb
push
lret
ljmp
bound
shll
cmp
xchg
xor
rorl
lret
scas
xchg
pop
push
add
cmp
xor
cmp
and
mov
cmp
ljmp
xor
jmp
jbe
dec
movsb
cmp
pop
int
sub
mov
sbb
loopne
shll
xlat
jl
push
jecxz
movsl
sbb
inc
mov
leave
ret
outsl
dec
cmpb
ss
jg
jg
fsubrl
lcall
js
sub
pop
test
scas
or
or
cld
loope
jp
dec
mov
insl
xchg
xor
xor
pusha
fistpll
add
mov
dec
and
outsl
jmp
je
rolb
stc
adc
into
jno
ljmp
xor
in
lret
adc
cmp
dec
pop
lds
sbb
dec
loop
in
adcb
filds
cmc
pop
test
movb
pop
adc
fists
mov
xlat
dec
loopne
into
push
rcl
rcr
xchg
popa
fdivrl
or
ret
mov
push
ret
push
mov
cmp
mov
data16
add
inc
pop
mov
mov
or
popf
inc
daa
pop
jg
push
pop
push
lahf
sub
add
js
add
xchg
lret
sub
arpl
popf
mov
push
cmp
ret
xchg
adc
jl
divb
aam
les
or
cmpsb
pop
xchg
or
push
ror
pop
pop
sbb
add
test
jle
data16
cmp
out
es
sub
and
repnz
push
pop
xchg
jge
dec
and
push
fmuls
inc
inc
push
pop
push
sbb
cwtl
mov
xor
bound
adc
xor
adc
dec
dec
inc
adc
jb
ret
into
cltd
add
test
mov
mov
adc
mov
popf
adc
rcrl
xchg
popa
lahf
cmp
addr16
in
sti
div
cwtl
adc
aad
or
push
lock
daa
ds
dec
mov
pusha
dec
mov
es
pop
mov
jb
push
push
aaa
arpl
jp
xchg
jecxz
negl
mov
mov
test
push
scas
fisttps
push
test
xchg
stc
add
cmp
ret
pushf
fwait
int
in
rcr
mov
sbb
popa
cmp
test
and
repnz
fnstsw
sbb
mov
out
test
pop
mov
fsubr
cld
cltd
lds
mov
icebp
in
lahf
loope
adcb
pop
mov
jbe
lret
jns
pusha
addl
fsubrp
aad
xchg
mov
pop
mov
ja
rorb
mov
sbb
pop
icebp
aad
in
dec
cltd
clc
push
ret
add
aas
bound
push
push
dec
mov
sbb
sub
call
mov
push
add
xchg
jg
xor
ret
inc
popa
imul
loopne
mov
dec
xchg
jg
sub
ds
std
pop
mov
sbb
lcall
xor
lret
addb
rcrb
sbb
call
int
jp
lods
xchg
add
mov
in
cmp
in
or
add
inc
mov
push
into
inc
cmp
and
ret
daa
rcrb
cmpsl
pushf
xor
into
pop
jmp
cmp
jecxz
je
push
fiaddl
mov
les
pop
fcomi
vmwrite
xchg
push
sbb
subb
mov
pop
dec
roll
mov
ljmp
adc
fiaddl
sub
dec
dec
xchg
and
insl
xor
lods
out
push
mov
mov
fcmovu
sbb
push
add
and
mov
xchg
iret
icebp
jo
jne
dec
mov
les
test
scas
std
jae
fstpt
jae
adc
das
sarl
mov
jae
cmp
mov
fldt
cmp
dec
test
xor
dec
sbb
repz
std
outsb
in
mov
and
rorl
hlt
push
sti
or
cltd
mov
inc
loopne
mov
mov
cmp
aad
je
cwtl
int
and
adc
stc
je
loopne
fimuls
jns
sub
sbb
stos
jmp
fists
ret
mov
loop
inc
in
jle
outsb
lret
mov
xchg
subb
ss
push
mov
in
or
inc
push
pop
shlb
lahf
imul
mov
xor
push
inc
jb
sbb
aas
int
xchg
cmp
cmp
pop
incb
sbb
negl
sbb
ret
jge
dec
xchg
lret
lret
cmp
int
in
daa
mov
jle
pop
mov
jae
adc
and
cmpsl
call
xchg
hlt
es
inc
arpl
repz
mov
jb
cld
mov
inc
mov
jno
mov
cmpsl
aaa
test
shl
pop
jne
es
mov
jmp
xchg
mov
mov
adc
mov
add
push
mov
mov
sub
adc
scas
fwait
jp
jo
mov
insl
xchg
faddp
iret
out
or
lds
sbb
ja
xor
xor
mov
and
and
aas
adc
fistl
movsb
inc
ja
icebp
inc
lods
loopne
xor
lods
mov
fimuls
idiv
add
pop
mov
sahf
sbb
fistpl
inc
test
stc
sti
mov
adc
add
cmpsb
and
push
push
and
ljmp
mov
mov
scas
sbb
adc
clc
pusha
jmp
test
es
loop
add
adc
cmp
xor
xorl
sbb
fnsave
sbb
ljmp
inc
cmp
xchg
mov
das
or
dec
std
bound
and
mov
pop
xor
mov
pop
jno
push
stos
mov
sbb
inc
test
xor
mov
mov
negl
mov
das
xlat
outsb
imul
mov
add
ljmp
jle
int3
jmp
insl
mov
adc
lcall
add
out
aad
pushf
ja
insl
push
sub
pop
in
jnp
lea
fidivrs
push
lcall
ficoms
pushl
mov
nop
and
mov
xchg
sub
lcall
lret
ret
popa
mov
push
sbb
lea
sub
push
or
int
movsl
jle
fiaddl
dec
js
aad
jae
lret
ljmp
sahf
cmp
scas
mov
mov
insl
idivl
loope
and
jno
pop
lds
fildll
clc
pop
arpl
sbb
sub
pop
dec
jg
rclb
xchg
in
add
xchg
dec
popa
pop
pop
cli
fists
mov
push
fsubrs
cld
lcall
ret
xor
sbb
mov
add
jmp
mov
pop
dec
mov
loope
jb
mov
sarl
pop
push
pop
ds
inc
xor
mov
and
pusha
mov
pop
xchg
mov
iret
rcr
pop
sub
add
pop
sbb
stos
out
add
add
scas
dec
pop
sarl
cltd
test
push
ret
nop
mov
push
int
hlt
scas
data16
adc
dec
mov
mov
scas
xchg
cwtl
mov
mov
adc
inc
testb
mov
mov
mov
jo
in
xchg
dec
cs
or
mov
out
cs
inc
jmp
jl
cmp
lds
mov
hlt
sbb
pop
xor
mov
stc
adc
push
sbbb
xlat
mov
repz
sub
lods
sbb
add
or
add
sbb
cli
lret
cmp
jno
insl
popf
movsb
pop
testl
pop
xchg
out
lahf
cmp
cwtl
sub
mov
loop
imul
adc
jno
in
jbe
das
cmp
arpl
lock
mov
xorb
testb
js
out
outsl
and
fs
mov
imul
andl
cli
test
pop
push
fcoms
dec
fimuls
pusha
lcall
mov
dec
mov
leave
add
sub
gs
or
jno
mov
repz
dec
and
adc
lahf
int
dec
or
jl
push
xor
pop
pushf
xchg
xchg
addb
jl
add
xchg
std
jae
push
out
cmp
sub
ret
xor
adc
stos
loope
jp
int
movsb
xor
repz
pop
xchg
mull
adc
mov
and
or
adc
je
mov
cmp
inc
adc
dec
loop
aad
add
clc
pop
stos
mov
xchg
pop
push
movsl
jb
loop
ss
shll
iret
out
mov
stc
pcmpgtd
mov
sahf
sub
push
push
scas
fldenv
gs
or
add
repnz
adc
ret
jno
sbb
popa
sub
cmp
ret
lahf
xchg
dec
hlt
pushw
rorb
sub
mov
aad
imul
push
mov
lods
popf
jae
jne
outsb
add
mov
js
mov
xchg
push
inc
aad
test
xchg
push
aam
xor
call
aad
push
cmp
push
rcrb
sahf
add
cmpsb
addr16
les
ljmp
mov
sub
pop
push
xchg
add
dec
jmp
pop
mov
push
lds
pop
dec
cmc
push
add
inc
xchg
push
xchg
sahf
lods
cwtl
es
pop
pop
add
cli
jle
shl
aad
insl
ljmp
lret
in
sbb
push
xor
scas
fwait
pop
test
add
xor
push
aas
inc
ficoml
mov
cmpsb
inc
xchg
jne
pop
ret
aad
pusha
cwtl
test
pop
push
loope
push
test
sub
inc
add
ret
movsb
insb
add
mov
out
pushf
jmp
enter
jnp
mov
and
sub
ret
imul
in
adc
xor
xor
int3
mov
and
push
sti
pop
inc
jo
mov
pushf
and
fstps
sub
stc
out
pop
test
pop
mov
jo
sub
arpl
jecxz
cmpxchg
movsb
and
mov
and
in
cmp
cmp
xchg
xlat
jo
negl
jle
ja
movsb
outsl
scas
mov
mov
je
les
jb
bound
cmp
push
push
pushf
or
jge
inc
imul
push
push
push
push
inc
imul
xor
mov
faddl
aas
mov
push
loope
push
test
cmp
outsb
sbb
pop
fldcw
fsts
inc
pop
or
cmp
fdivr
cmp
fs
push
mov
clc
mov
sub
and
sub
negb
and
pop
scas
inc
lahf
test
es
sbbb
jnp
adc
dec
iret
call
je
jnp
shl
enter
sub
jecxz
enter
push
inc
icebp
jge
ds
gs
jg
cmpsl
xor
sarl
mov
and
lods
leave
mov
mov
push
and
ret
xchg
pop
notb
add
push
sbb
sbbb
cs
loope
cmp
lock
mov
sbb
add
mov
add
fwait
std
mov
bound
mov
cwtl
nop
adcl
mov
mov
xor
inc
dec
out
clc
adc
jb
dec
mov
and
fmul
jmp
xchg
or
jp
jnp
lods
jne
sbb
int3
mov
and
push
pop
pop
mov
fldenv
sbb
pop
cmp
mov
add
inc
inc
mov
test
test
shlb
add
inc
push
mov
xor
adc
sub
in
pusha
adc
dec
or
push
outsb
sbbb
jns
arpl
frstor
cld
push
and
dec
push
in
loope
xlat
shlb
daa
rep
movsl
fcompl
mov
rcrb
or
imul
dec
push
pushf
dec
mov
xor
add
cmp
add
rcll
cmpb
jae
xchg
shrb
lods
xor
xor
insl
rcrl
xchg
xorb
negl
leave
mov
mov
xchg
inc
pusha
xor
loope
int3
push
aas
imul
mov
lahf
push
mov
jecxz
aam
not
inc
and
cld
mov
outsl
adc
fcompl
add
xchg
decb
mov
ljmp
dec
xor
pop
jns
push
push
scas
faddp
inc
es
push
ja
arpl
mov
xchg
or
xor
cmpb
dec
pop
pop
fcoms
sub
jl
dec
add
fcoms
cs
xchg
or
aam
leave
and
mov
ss
roll
mov
jecxz
add
enter
test
nop
adc
fidivl
cmp
sub
dec
out
add
xor
cmpl
mov
mov
mov
out
psadbw
mov
jb
ror
mov
loopne
syscall
mov
jnp
das
ljmp
je
mov
push
jnp
aas
cmp
pop
mov
and
dec
dec
mov
stc
mov
mov
jae
xlat
insb
mov
cmpsl
pop
push
mov
xchg
aad
popl
divl
xchg
data16
lea
fwait
or
mov
cs
sbb
iret
add
aas
xlat
or
adc
and
push
roll
cmp
sbb
mov
adc
hlt
lret
outsb
xor
nop
js
push
pop
or
loop
xor
nop
rolb
jae
nop
shrb
sahf
jns
jecxz
insb
pop
push
push
mov
pop
add
mov
jo
xchg
jbe
ror
psubsw
add
or
sub
sti
sahf
int
mov
jecxz
or
cmp
leave
mov
xchg
mov
dec
cli
repz
push
dec
aad
add
sbbl
outsb
popa
test
mov
add
aas
sub
mov
setno
pop
mov
dec
in
mov
mov
mov
xor
xor
popf
fcompl
pop
js
pop
test
fwait
mov
push
loop
mov
inc
jns
mov
push
inc
xchg
xchg
cld
fmulp
nop
inc
fwait
lods
bound
cmp
mov
cmpsb
hlt
ja
dec
retw
mov
push
lods
dec
push
rorb
in
sbb
dec
ret
loop
lock
mov
psllw
mov
pop
ret
mov
movsb
mov
popa
cmpsl
in
dec
adc
test
inc
mov
in
jmp
not
mov
mov
lods
movsl
pop
insb
int
addr16
in
mov
loope
xchg
sub
je
or
xchg
xchg
or
sti
fistl
addl
mov
pop
ret
call
mov
xchg
cmc
in
inc
push
sbb
jae
fwait
scas
fidivrs
add
pusha
xor
incb
jo
outsb
push
inc
fldenv
cli
data16
inc
xchg
bound
std
or
mov
cs
xlat
fildl
fwait
mov
push
mov
or
xchg
lcall
or
test
adc
sbb
xor
mov
ficoms
jae
and
adc
pop
pop
in
inc
jo
lret
sub
mov
jae
pop
push
rcrl
in
or
adc
daa
dec
test
and
push
scas
mov
mov
jecxz
jne
loopne
movsb
or
out
call
sub
fnstcw
insb
cmp
in
ffree
movsl
inc
xchg
imul
cld
mov
in
test
mov
add
push
push
lea
adc
push
ret
sub
sub
movsb
fwait
or
cld
popf
sub
xchg
jo
outsb
mov
xor
jns
push
fisttpll
adc
int
das
pop
add
pop
xchg
push
mov
je
push
pop
add
and
into
add
jbe
add
and
lea
sbb
mov
or
orl
push
mov
mov
push
adc
adc
cmp
cmpsl
mov
fst
dec
sahf
stos
push
enter
add
out
jno
gs
cld
imul
and
in
adc
andl
andl
pop
scas
fcoms
sub
dec
aas
jg
jae
lea
mov
jo
mov
xor
repnz
std
jmp
pop
lock
outsb
arpl
xor
lcall
mov
test
mov
pop
cmp
inc
cli
fcomi
sbb
sub
movsb
mov
add
jp
data16
adc
not
add
xor
shl
scas
loop
cmpsb
rcll
mov
mov
pop
cmpsl
pop
sbb
fidivrs
and
adc
jno
pop
shll
lds
cmp
lret
lods
sahf
mov
cli
loope
arpl
loope
push
inc
pop
pop
mov
loopne
inc
or
jecxz
rcr
int3
scas
adc
imulb
fs
icebp
xor
jle
adc
test
and
adc
mov
test
jp
js
adc
jns
fwait
pop
aas
mov
xor
dec
daa
sbb
add
pusha
shrl
out
push
pusha
cld
mov
mov
jecxz
addr16
sbb
in
pop
fistl
jecxz
aas
jne
push
jge
jg
fldenv
mov
sbb
adc
add
scas
movsb
subb
scas
xchg
adc
rcll
sbb
or
and
dec
xchg
aam
xor
loopne
add
in
loop
ds
sbb
mov
and
ret
insl
inc
pcmpeqw
icebp
and
addr16
mov
push
vcvtdq2ps
sbb
leave
fnsave
pop
xchg
scas
sti
mov
jmp
out
insb
lret
jno
xor
xlat
xchg
rcrb
sbb
popf
pop
dec
mov
fstl
into
das
mov
lret
outsb
sub
mov
lahf
inc
adc
adc
popa
lds
movsb
and
pop
adc
cmp
scas
xchg
lcall
ljmp
inc
xchg
jge
sub
push
bnd
aad
lock
nop
jns
jne
xor
add
mov
icebp
sub
rol
lds
mov
dec
insb
scas
scas
fldl
arpl
push
and
cli
add
xchg
mov
decl
incb
mov
inc
sbb
fsubp
xchg
sets
lahf
std
push
loopne
xorb
inc
leave
lea
sub
xchg
mov
inc
mov
repnz
or
popa
or
push
fiadds
test
in
jb
xchg
jecxz
sub
cmp
push
pusha
xchg
jnp
pop
xchg
scas
out
and
add
loopne
fbld
out
and
aaa
sbb
cltd
jg
mov
mov
sub
loope
ljmp
scas
inc
dec
pop
pop
jg
xchg
jle
loopne
and
insb
jns
cmp
scas
popa
adc
inc
pop
or
divb
jb
jne
pop
push
xchg
rclb
stc
fidivs
pop
cmp
ljmp
cmp
jne
test
mov
jl
mov
xchg
mov
add
xor
lds
pop
sti
inc
es
xchg
pushl
push
cmp
cli
fcomi
dec
and
adcb
shlb
rep
pop
fwait
jb
or
xchg
push
push
in
dec
and
xchg
adc
sub
xchg
jle
fimull
inc
cmpsb
jbe
xorb
inc
push
dec
add
and
or
wrmsr
jmp
gs
push
test
push
cmc
inc
and
xor
dec
mov
mov
adc
jp
in
cmp
outsb
daa
ret
xchg
jecxz
sarl
push
in
out
inc
cmp
sub
or
js
cmpsl
and
pop
outsl
or
and
lcall
mov
mov
sbb
sbb
push
cmc
rcll
and
inc
xor
xchg
pop
in
mov
xchg
adc
push
mov
pop
jmp
lock
and
std
inc
xor
call
sahf
mov
add
lods
loop
enter
popa
pop
fisubrl
push
rcrb
into
mov
in
in
out
call
push
sbb
mov
pop
mov
or
out
lods
enter
pop
dec
cmpsb
imull
or
sub
and
mov
lcall
outsl
xlat
mov
outsb
cwtl
lahf
loop
mov
push
adc
js
loopne
cmp
cmp
mov
popf
ds
enter
popa
sbb
or
in
outsl
je
push
mov
clc
faddl
and
lret
lcall
icebp
rolw
stos
iret
mov
fistl
sbb
arpl
push
push
lret
imul
jp
adc
pusha
push
push
aaa
cmp
adcb
add
add
addr16
cltd
movl
xchg
cmp
pop
imul
ret
mov
outsb
xor
sbb
jbe
insl
scas
clc
fdivrs
pop
shl
inc
adc
xor
mov
sbb
jbe
arpl
in
testb
sbb
gs
jl
incl
imul
lcall
xchg
ret
repz
xchg
dec
adc
movsb
sub
mov
xchg
mov
or
push
insl
leave
scas
sbb
push
xlat
push
sub
add
xchg
adc
mov
ss
jge
ret
lea
insb
sbb
xor
loopne
cmp
xor
loope
xor
pusha
test
and
xchg
leave
out
adc
in
enter
add
sub
cltd
mov
es
test
cs
and
iret
push
pop
sbb
sbbb
out
icebp
hlt
mov
mov
inc
push
push
arpl
pop
out
sbb
xchg
leave
andb
xorb
fisubrl
dec
and
rcrl
sbb
dec
sbb
sbb
ret
pop
fldl
mov
loope
add
mov
fistps
loop
rcrl
rorl
mov
dec
mov
push
nop
dec
ljmp
adc
xchg
mov
std
arpl
lods
dec
mov
push
pop
fdivr
push
mov
shrl
cmp
shl
cmc
inc
iret
jno
dec
outsb
add
adc
pop
or
pop
sbb
in
cmpsb
enter
ret
out
aam
xchg
inc
outsl
je
inc
shrb
dec
mov
pop
xor
pop
test
fldt
imul
cld
mov
inc
push
fistpl
jmp
xchg
pop
inc
sbb
inc
add
test
stc
out
adc
test
xor
add
xchg
mov
mov
nop
orl
test
movsl
dec
add
inc
repnz
jae
push
insl
mov
adc
nop
fdivrl
xchg
lods
mov
cmpsl
or
jns
jno
sar
xchg
stc
xchg
push
or
mov
xchg
and
inc
sub
lock
xchg
xlat
push
inc
jnp
or
lods
add
fldcw
mov
mov
dec
icebp
cmp
aaa
aas
mov
mov
jne
dec
jge
out
adc
add
in
mov
stos
push
push
mov
cmpl
in
xor
add
pop
jl
sbbl
ds
and
aas
and
test
mov
pop
jns
and
mov
mov
sub
movsl
loope
scas
add
mov
pop
rcrb
filds
inc
push
dec
arpl
imul
decl
mov
push
dec
mov
add
ss
inc
pop
xchg
outsb
int3
insl
nop
aas
push
jg
add
lahf
lret
aam
mov
pushf
fisttps
aas
and
lds
pop
lcall
pop
in
clc
jns
mov
dec
movsl
loopne
jo
loopne
sbb
and
test
aad
lock
jbe
cld
xor
andl
mov
xchg
xchg
mov
stos
jl
cmp
in
lea
push
std
mov
mov
gs
popa
imul
sub
vpmulhw
mov
and
test
mov
ja
mov
addb
iret
shll
sbb
fidivl
jg
xchg
or
xor
jns
sub
test
popf
dec
cmp
push
out
or
das
push
out
lahf
inc
idivl
cmp
inc
lods
pop
fs
aad
xchg
sub
xchg
inc
int
jns
and
ret
in
xchg
sub
rcrb
mov
xchg
sub
jecxz
cmp
popf
mov
lock
decl
mov
pop
inc
scas
or
jne
leave
pop
cmpb
int3
mov
add
cwtl
out
sbb
jp
jp
inc
add
cmpsl
dec
test
sbb
jle
divl
movsb
lods
jecxz
ss
dec
xchg
popf
or
ret
mul
sbbb
into
jno
and
out
pushf
push
dec
fsubrl
sbb
fimuls
test
psubsw
mov
dec
and
sub
mov
bound
xor
fbld
movsl
or
xchg
adc
and
push
es
icebp
pop
jo
loopne
mov
push
bound
mov
lds
dec
shlb
and
aaa
outsl
loope
pop
jg
pop
pop
jle
popa
sbb
mov
aas
mov
mov
jne
ret
and
popa
push
test
pushf
es
insb
gs
hlt
cmpsl
or
cli
sbb
test
sti
add
aas
pop
adc
jg
stos
lret
pusha
stos
lahf
mov
xchg
in
and
xchg
mov
and
int3
jb
mov
lret
daa
je
roll
mov
and
add
push
push
mov
lock
adc
mov
mov
fwait
jmp
push
dec
fcoms
jecxz
mov
xchg
mov
gs
sahf
insb
xchg
jo
adc
jae
cltd
fs
jecxz
sbb
scas
or
cmp
adc
and
stc
loope
mov
test
shrl
ja
mov
sbb
sub
inc
sbb
subl
or
push
mov
sar
mov
arpl
add
out
loope
nop
cwtl
cmpsb
cmp
mov
push
mov
dec
dec
loop
dec
mov
loope
xor
imul
or
das
jl
into
aaa
lock
push
push
jle
pop
push
adc
add
cmp
xor
xchg
fdiv
add
mov
rol
mov
dec
test
lea
and
call
mov
xlat
clc
mov
je
cmpsb
mov
rol
loope
jp
jp
cmp
mov
jbe
ret
insl
loope
loop
pop
sti
test
fidivl
mov
xor
mov
mov
mov
cltd
data16
mov
lods
add
or
sub
lahf
jmp
inc
loop
cmp
stos
sbb
fldcw
dec
fstl
xchg
jnp
adc
mov
dec
xchg
ja
mov
mov
test
mov
xor
into
or
std
inc
push
cmp
lods
lret
cwtl
shrl
xchg
dec
xchg
leave
call
pop
scas
out
cmp
fs
inc
mov
xchg
in
scas
addr16
in
daa
in
subl
shll
jbe
and
cmpsb
clc
sub
inc
aam
mov
lea
repnz
xor
outsl
scas
lcall
decl
repz
dec
pop
mov
add
mov
sub
sti
push
xchg
xor
fidivrs
cs
pop
test
xor
cmpsl
cwtl
mov
out
jg
sar
outsl
orb
mov
push
mov
fsubrl
movsb
insb
pop
mov
jmp
das
adc
inc
orb
mov
sbb
rcll
cmpsl
jecxz
andb
add
jno
add
test
in
dec
addb
sub
clc
xchg
and
xor
and
cmp
iret
enter
jmp
test
test
inc
call
jo
xor
andb
dec
pop
xchg
shr
rcrb
jp
scas
insl
push
mov
xchg
lret
mov
dec
sti
ficomps
test
lea
das
xchg
dec
in
in
sbb
lret
into
adc
test
sbbl
sub
cmp
mov
in
sub
dec
arpl
add
xor
loopne
mov
out
cmp
shll
adcl
and
adc
mov
jmp
sti
jno
icebp
adc
sti
outsb
mov
push
fs
mov
inc
mov
xor
repz
stc
xlat
and
stos
sbb
xor
pop
fnstenv
xchg
es
pusha
push
ds
lea
mov
ds
repnz
jnp
jne
push
inc
popa
and
in
jb
fadds
cmc
adc
pop
sbb
mov
inc
sub
adc
int
lods
dec
push
es
ficoms
pop
xchg
in
sub
les
fiaddl
ljmp
add
pop
shl
jmp
loope
mov
loop
fildll
mov
mov
or
mov
int3
xchg
mov
test
outsb
test
xor
and
sti
mov
and
imul
je
xor
stos
cld
pop
mov
pop
pop
movsl
sbb
std
in
sahf
push
lret
push
lods
scas
insl
in
dec
xor
cmp
nop
shll
data16
lods
cmp
icebp
in
int3
push
shrb
add
jmp
mov
fs
xchg
out
sub
lret
sbb
gs
dec
xchg
mov
repz
leave
sbb
push
dec
das
cs
loope
daa
lods
inc
lahf
inc
ss
inc
test
inc
xchg
xor
clc
and
shll
mov
mov
scas
sti
sub
test
mov
jg
jecxz
adc
sbbb
cs
int
mov
cmp
mov
sub
mov
dec
xor
mov
xchg
loope
add
xor
xor
cwtl
stos
dec
js
loop
jge
mov
std
push
pop
outsl
pop
lods
inc
mov
pop
ljmp
fdivs
scas
push
mov
cmpsb
stos
xchg
fs
leave
mov
es
adc
sub
test
out
insl
push
xchg
push
inc
adc
jle
fwait
popa
shrl
pop
inc
jmp
push
inc
sub
adc
mov
jne
cli
add
sub
jns
sti
and
dec
rcrb
mov
push
xchg
repz
sbb
in
and
add
and
pusha
out
add
aam
push
aad
inc
push
inc
jnp
mov
push
enter
ret
mov
adc
jnp
jmp
and
out
lcall
lea
iret
lret
lret
dec
sahf
cld
fimuls
mov
and
sub
mov
rorl
jae
pop
push
mov
int3
add
jno
lods
popf
jp
mov
pop
sub
cmp
pop
insb
sbb
adc
clc
pop
xor
cli
dec
shrl
add
or
lahf
xor
add
or
mov
mov
xorb
sbb
add
push
pop
xor
pop
insb
xchg
add
adc
ja
or
mov
dec
inc
aaa
cwtl
or
push
fsubrl
sbb
pushf
sub
adc
and
into
xor
mov
mov
or
iret
sbb
push
push
lahf
xlat
xorb
xor
cmpsb
cltd
cltd
js
mov
out
andl
mov
mov
jmp
and
ja
aas
lahf
push
or
mov
mov
pop
dec
xor
adc
pop
iret
cmp
lret
popf
push
addr16
xor
ja
js
cmp
int3
aas
rsqrtps
outsb
in
xor
test
addr16
mov
pop
cmp
jecxz
mov
addr16
add
ja
inc
jbe
add
sub
jbe
insb
test
xchg
das
push
cwtl
mov
push
xchg
sub
loopne
dec
cmp
aaa
or
push
mov
push
dec
and
enter
dec
ret
loop
clc
sub
cmp
sub
jno
inc
inc
or
in
hlt
fnstenv
and
push
or
sbb
mov
lods
lds
or
and
dec
in
inc
outsb
repz
shlb
shll
dec
je
add
xor
insb
outsl
cmpb
aas
mov
jno
outsb
stos
cmpsl
mov
push
and
ja
xor
dec
pop
pop
push
out
insb
mov
mov
mov
call
mov
in
dec
jl
pop
push
loop
les
fucom
cltd
cmc
cmp
jp
pop
repz
jge
mov
pop
xchg
push
in
pop
data16
jno
cmp
and
xchg
addr16
mov
push
movsl
and
repz
xchg
jmp
mov
mov
or
dec
push
cmpsl
jl
lods
mov
ficompl
fnstsw
cmp
push
jp
mov
jns
repz
add
jnp
xchg
and
sub
xchg
pop
inc
das
jl
adc
das
mov
cltd
fisubl
scas
xlat
mov
sub
outsl
mov
mov
jecxz
jmp
pop
bound
aas
fwait
sbb
jge
mov
lds
test
bound
xlat
cltd
pop
pop
fs
xor
add
inc
pop
push
jbe
push
or
sbb
xor
xor
into
lret
das
imul
std
adc
lret
lcall
cmpsl
jmp
fwait
xadd
lods
xor
cmp
je
std
aad
fmulp
adc
pop
sub
add
lahf
add
push
hlt
pop
push
test
mov
cld
push
loop
xor
stc
mov
inc
and
jmp
and
shll
loopne
cld
test
fucom
jno
insl
mov
int3
out
insl
jge
add
mov
cmc
lahf
and
mov
mov
jo
cmp
sbb
jne
or
popa
pop
ljmp
push
sub
xor
fcomps
jno
mov
xchg
cli
sbb
lea
cmp
out
jb
dec
jnp
pop
sub
jp
inc
inc
cmp
iret
fsubrl
stc
sub
call
enter
pop
cld
sbb
xlat
xor
jo
popf
xchg
cmp
jl
adc
jbe
icebp
sbb
and
dec
leave
test
cltd
mov
pop
pushf
inc
or
mov
adc
mov
out
addr16
in
sub
fildll
mov
push
je
insb
add
arpl
loopne
jnp
aas
jb
ljmp
std
cs
sbb
pushf
cmp
imul
adc
inc
ljmp
mov
cwtl
mov
in
xor
rcll
xchg
cs
dec
enter
push
es
call
imul
dec
arpl
and
fsubrs
mov
mov
mov
imul
adc
or
ljmp
out
inc
das
lea
jecxz
mov
loopne
out
dec
inc
ret
lea
or
mov
or
std
scas
aaa
cltd
lcall
sbb
mov
ja
scas
push
iret
and
scas
push
clc
lods
xchg
sahf
std
push
push
loope
out
sbb
das
push
pop
dec
add
stos
cmp
test
data16
xchg
aas
test
cmc
add
les
push
les
in
and
sub
sbbb
daa
xchg
mov
dec
or
lods
dec
jge
repz
jp
fucomip
and
cs
sbb
push
sbb
aad
xchg
in
sbb
mov
cmp
push
sbb
sbb
mov
add
add
inc
arpl
fwait
mov
test
out
and
push
mov
push
daa
mov
ffree
and
pop
ja
push
push
in
in
xor
xchg
dec
xchg
add
push
inc
aas
fcmovu
xor
mov
test
outsl
add
in
jns
jmp
sub
cmp
sub
out
ja
ja
xor
inc
test
hlt
lds
js
mov
into
insb
add
push
pushf
xchg
dec
or
bsr
dec
xchg
adcb
jo
mov
aam
and
movsl
rcrb
sbb
xor
jno
lahf
ljmp
aas
inc
mov
sahf
pop
sub
out
fmull
sub
ret
outsl
imul
mov
or
jb
jo
jne
cmc
std
popa
mov
xor
mov
in
sti
ds
mov
clc
xchg
sub
xchg
sbb
push
bound
ja
js
aas
adc
mov
xor
lock
popf
scas
pop
fiaddl
cltd
jge
jno
mov
sbb
cmp
mov
dec
xchg
hlt
movsb
push
mov
lahf
std
and
mov
lds
shll
xor
shlb
jp
mov
jp
stc
stos
pop
out
pop
imul
jb
fwait
mov
loope
inc
dec
sahf
fdivr
jecxz
and
adc
adc
dec
sbb
dec
mov
test
xor
into
aad
in
bound
pop
mov
jecxz
mov
test
sarl
icebp
mov
dec
push
movsb
jg
pushf
inc
jbe
mov
cwtl
inc
fldt
fcompl
mov
in
xchg
mov
insb
je
adc
adc
lcall
out
xchg
mov
push
or
pop
stos
inc
and
push
adc
in
lahf
mov
xor
lods
call
cltd
or
das
adc
jmp
lds
stos
mov
scas
mov
gs
clc
mov
push
sub
into
lret
xchg
mov
cmp
cmp
ss
sbb
imul
cmp
sub
cltd
fs
lock
fnstenv
ret
out
add
iret
sbb
jnp
out
lret
mov
aad
icebp
cld
cli
inc
push
ds
cmp
sbb
push
fildll
lods
and
popf
test
and
in
push
scas
aam
push
je
mov
push
mov
and
xchg
mov
dec
or
cli
ja
push
jnp
adc
mov
arpl
int
lcall
pop
les
adc
orb
push
push
xchg
jl
sub
gs
jecxz
movsb
push
outsl
sti
int
orb
loop
jmp
sbb
out
scas
pop
adc
adc
bndstx
imul
lds
insb
aaa
lret
sbb
into
ret
inc
pop
cltd
fcoml
push
jo
setl
sbb
push
mov
hlt
lods
out
in
aaa
inc
mov
pushw
scas
andl
ss
in
dec
cmpl
xchg
cmp
ret
nop
jg
lds
xor
xchg
pop
mov
icebp
sahf
xchg
imul
add
ret
imul
push
dec
jo
add
pusha
add
pop
test
fsubrs
leave
jecxz
cltd
adc
addr16
les
adc
push
orl
mov
icebp
jnp
popf
mov
outsl
cmp
popa
lret
jl
rcl
sbb
jbe
adc
lock
inc
mov
push
jno
lds
xchg
sbb
scas
data16
adc
sub
hlt
es
cli
jbe
cmp
jo
cmp
ret
dec
lods
movsb
test
in
xchg
fimuls
sahf
xor
int3
call
cmp
jb
rorl
sub
ja
mov
push
into
int3
lret
sub
push
mov
int
test
stc
aas
mov
arpl
fbstp
cmc
sbb
shr
stos
add
dec
xlat
push
lret
xchg
push
lock
pop
push
mov
cmc
inc
push
sbb
mov
pop
xor
call
clc
xchg
push
movsb
xchg
mov
iret
sbb
and
into
pop
stos
repnz
nop
dec
sbb
mov
sub
sub
rolb
push
mov
lret
xchg
dec
sbb
sbbl
jb
cli
stos
icebp
cmp
aam
ljmp
or
aas
ja
add
popf
and
aam
stc
lods
cmpsl
cmp
insb
js
jno
mov
mov
ficoml
hlt
rcl
dec
mov
add
xchg
cmp
test
in
movsl
jno
data16
fisubs
loope
sub
bound
out
imul
xor
cmc
and
push
adc
dec
mov
mov
dec
pop
cmp
pop
sub
mov
icebp
js
loop
leave
bound
hlt
mov
cmpsl
xor
in
dec
enter
inc
push
mov
add
pop
dec
sub
sub
imul
movsb
lods
jl
push
cmc
add
xor
mov
in
lcall
in
sbb
mov
stos
movsb
lods
nop
call
mov
addr16
movsl
xchg
scas
repnz
into
imul
mov
ds
sti
mov
mov
sahf
ds
mov
aam
sub
mov
mov
sbb
ss
decb
pushf
sbb
sub
sahf
mov
iret
and
test
dec
cmp
jb
xchg
loopne
mov
js
rolb
outsb
fnstenv
cltd
sbbl
ds
dec
pop
push
aam
mov
cmc
add
mov
repz
fnstsw
sbb
cld
pop
imul
cmp
sbb
fstcw
add
mov
in
jg
adc
sbb
xor
out
adc
or
lret
imul
jl
inc
jmp
test
push
addb
xchg
mov
mov
add
mov
add
jp
rclb
mov
mov
mov
fnstsw
imul
mov
out
mov
push
fisttpll
call
in
dec
pop
and
cmp
je
xchg
imul
mov
inc
sbb
jne
std
popa
xchg
roll
mov
daa
mov
popf
jp
push
or
push
icebp
sti
loop
cmp
les
fs
or
push
pop
cltd
xchg
xchg
mov
out
lods
and
xor
pop
sub
stos
out
mov
das
cmpl
push
sbb
les
or
movsb
dec
sub
repz
jo
adc
sub
fadds
shrl
add
out
sbb
and
adc
cmp
mov
xor
mov
in
dec
push
mov
and
xor
and
xor
in
notb
scas
lcall
testb
xchg
dec
out
int3
jge
or
das
movsl
movsb
movsb
mov
mul
mov
pop
xchg
repz
bnd
mov
std
das
or
cltd
lret
mov
or
fists
pop
test
ljmp
push
adcl
in
adc
in
xorl
movsb
adc
or
in
cmpsb
sub
stos
std
and
xchg
xor
lcall
shr
iret
dec
xchg
pop
movsl
scas
cmp
pop
or
popa
xchg
mov
push
add
call
mov
nop
inc
and
dec
outsb
outsb
cmp
imul
imul
data16
leave
mov
push
jp
or
xchg
or
fcoml
lret
rdpmc
insl
sbb
sbb
push
incb
dec
and
sbb
mov
mov
inc
mov
jo
push
jp
or
sarl
fwait
adc
repz
aad
arpl
jle
push
xlat
negl
jmp
stos
jb
or
out
jecxz
inc
inc
test
or
loopne
add
mov
fnstcw
add
xchg
xor
int
sub
mov
mov
mov
scas
jbe
out
adc
mov
mov
sbb
out
dec
ds
push
push
daa
mov
mov
push
push
adc
into
test
repz
cmpsb
cmc
xor
cltd
sbb
test
pop
data16
insb
pop
rcrb
xchg
jle
mov
imul
push
cmpsl
sub
jnp
push
ds
call
dec
sub
jge
mov
mov
push
mov
inc
loope
and
sub
fs
sarb
fwait
out
out
inc
fmulp
jo
call
cmc
xor
ret
and
or
xor
push
in
lds
mov
jg
sub
inc
cmpsl
add
neg
aas
dec
adc
cmp
mov
jnp
add
pop
pop
sub
ds
insb
jbe
push
faddp
jg
push
sub
stos
xchg
aam
jne
ds
add
jmp
lock
xor
mov
loopne
ret
andl
test
mov
fdivrs
pop
and
push
daa
push
fisubs
add
ficoms
pop
lea
movsb
jg
outsl
loopne
sub
cmp
lock
inc
cmp
js
mov
test
scas
loope
dec
push
in
fs
in
mov
gs
push
fcomps
loop
test
insl
lret
pop
pop
xor
xchg
adc
mov
xchg
adc
mov
loope
ss
scas
idivb
rol
inc
pushf
test
xchg
sti
pusha
push
insb
dec
es
lahf
cmp
sti
push
sahf
pop
pop
pop
sbb
adc
inc
lret
in
adc
dec
push
mov
and
or
fcmovbe
xchg
lret
or
test
xchg
inc
add
fwait
scas
ret
enter
sub
addr16
lahf
ja
cltd
inc
xchg
jo
ja
pop
jne
imul
pusha
adc
mov
mov
xor
sbb
inc
jl
movsl
shrb
mov
mov
adcb
pop
xchg
fsubrs
je
mov
ret
sub
inc
lea
imul
arpl
or
fidivl
hlt
ficoml
cmc
adc
rorb
fs
mov
add
mov
lret
jae
jg
push
les
addr16
dec
aam
push
cmp
add
jge
xor
inc
cmp
sahf
xor
je
jmp
xchg
add
cmp
ja
jns
fcmovb
and
jmp
fstpl
cmp
pop
imulb
gs
jmp
jno
push
data16
lcall
xchg
imul
shl
jmp
movsl
repz
push
push
inc
es
imul
mov
dec
das
pusha
sbb
ret
push
call
jne
push
sarb
hlt
pop
mov
outsl
pop
movsl
jg
push
mov
aaa
rorb
pop
cmpsb
loope
push
xchg
pop
jle
inc
imul
leave
popf
mov
lods
sub
mov
sub
xchg
test
addr16
jb
push
jl
dec
add
and
popa
in
and
aas
xchg
lret
inc
dec
sbb
enter
data16
xchg
mov
mov
arpl
pusha
xor
lcall
inc
nop
nop
push
les
call
cmpsb
bound
mov
sub
adc
jbe
sbb
andb
sbb
rorl
mov
or
jmp
insb
push
dec
repz
push
lret
mov
fisubrs
inc
sub
cwtl
clc
mov
lods
in
shll
jbe
mov
sbb
ljmp
testl
lcall
push
push
push
imull
pop
shrl
fs
aam
cmp
daa
adc
bound
sbb
inc
inc
ds
jle
aad
xor
in
push
pusha
jl
inc
pusha
xchg
lock
insl
adc
xchg
lock
shr
sbb
push
lret
sbb
test
cmp
cmp
xchg
cmp
cmp
ret
push
xchg
movsb
mov
dec
xchg
mov
and
xchg
mov
cmpsl
jo
push
jle
xor
aad
lods
cmpsb
and
test
ja
mov
pop
hlt
clc
addr16
repnz
fbstp
in
mov
cwtl
jae
lret
pop
pop
adc
scas
jae
iret
adc
shlb
das
divb
jo
xor
roll
push
sahf
sbb
inc
jns
push
inc
fistpll
jns
loope
mull
scas
bound
adc
pushf
or
imul
mov
jl
lods
sbb
mov
jae
mov
in
int3
js
scas
mov
xchg
sahf
inc
faddl
jl
push
and
pushf
rorl
roll
dec
out
mov
popf
fdivs
inc
inc
icebp
jo
call
jbe
pop
adc
aaa
cmp
push
int
leave
xchg
or
sbb
push
dec
fisubl
xor
xchg
js
movsb
jno
xchg
loop
push
adc
mov
into
scas
push
add
popa
scas
xchg
mov
push
mov
mov
mov
push
mov
add
lea
cmp
ret
xchg
push
add
in
pop
cmp
test
jle
adc
movsl
std
adc
sub
out
push
jle
inc
in
push
add
pusha
data16
inc
sub
lea
jbe
xchg
xor
inc
and
xor
imul
and
push
dec
mov
cli
sub
pop
sub
sar
push
ja
push
leave
sub
stos
incb
je
jno
xlat
cwtl
xor
and
xor
addr16
aaa
push
aaa
dec
sbb
add
int
jne
xchg
test
fisttpll
or
cmp
push
and
mov
lahf
push
lods
xor
pop
shrl
xlat
test
mov
std
lcall
push
sbb
shr
lcall
mov
jns
dec
and
add
dec
jmp
lods
pushf
sub
rorl
mov
inc
mov
push
mov
and
cmpsl
add
mov
movsl
cmpsb
sub
clc
iret
mov
in
dec
mov
jle
ret
aas
lret
in
pop
push
shrb
leave
enter
jmp
mov
or
pop
add
jno
mov
aas
fidivl
int3
lods
add
or
stos
jp
ja
fwait
rorl
pop
jge,pt
stc
jmp
mov
cmpsl
leave
pop
jo
jmp
xor
outsl
jecxz
xor
nop
push
sbb
icebp
add
push
jne
scas
xchg
or
scas
mov
add
test
ja
ret
fwait
dec
cmpsl
push
mov
xor
lret
shr
mov
xchg
clc
cli
hlt
push
jae
aaa
sub
mov
mulb
ljmp
repz
push
dec
iret
into
pop
push
xchg
sub
mov
adc
jmp
dec
mov
dec
pop
push
call
lods
fdivrl
dec
mov
stos
ss
gs
fxrstor
outsb
movsl
inc
daa
pop
pop
or
mov
jb
js
xchg
dec
sub
or
mov
mov
pop
xchg
pop
nop
inc
ljmp
mov
test
into
cmp
mov
stos
out
adc
roll
repnz
mov
jbe
jle
jbe
cmpsb
sub
sarl
scas
ja
or
mov
adc
xor
xchg
test
jb
lahf
stc
jns
push
cwtl
int
sub
lret
adc
inc
sub
imulb
xchg
xor
dec
push
movsb
and
xor
scas
mov
stc
pop
lods
mov
or
lock
pop
and
push
mov
pop
push
jp
sub
loopne
call
add
iret
test
int3
rolb
push
addb
lods
sbb
fs
jo
popa
mov
cmpsb
test
roll
shrl
lods
out
xchg
xor
xor
stos
xor
mov
fs
mov
in
jne
push
or
movntps
fimull
jb
xor
add
std
sbb
jbe
sub
mov
shr
mov
das
cmp
adc
mov
ret
int3
in
cwtl
pusha
lahf
out
fs
mov
jne
bound
jmp
loope
orl
aam
mov
test
fs
test
jbe
xor
push
xor
pop
sbbb
push
shlb
repnz
and
jbe
or
push
jl
inc
adc
repz
adcl
and
cmc
adc
mov
cmpsb
pop
scas
and
lret
and
dec
outsb
ljmp
or
mov
sbb
mov
call
insl
jl
sbb
ss
cmp
test
nop
pop
inc
and
mov
ffreep
enter
pop
pop
ss
sub
ror
into
lahf
adc
sub
dec
fs
in
mov
in
ficomps
out
adcb
adcl
dec
jno
jp
inc
fs
sbb
adc
lods
sbb
fists
cs
and
pop
inc
and
sub
mov
enter
scas
inc
sbb
pushf
pushl
pop
mov
addr16
sbb
inc
push
mov
mov
dec
adc
mov
adc
pop
call
pop
cmp
enter
mov
and
int
cld
js
inc
mov
sub
in
shlb
sbb
shll
les
push
inc
hlt
int3
ret
push
into
ljmp
insb
and
xchg
clc
xchg
cmpsb
jne
fld
mov
jbe
sbb
repz
add
mov
outsl
pop
pop
stc
sub
mov
cmc
add
outsb
lahf
fwait
sbb
rclb
mov
jo
lods
adc
in
sbb
inc
lods
push
jmp
xlat
mov
xor
pop
repz
xchg
push
sub
loope
cmp
insl
dec
jmp
sub
sti
addr16
xchg
das
mov
ret
fs
leave
punpckhwd
mov
fmull
xchg
shll
fldcw
loop
jno
sbb
and
sti
mov
test
clc
das
aam
inc
mov
out
call
dec
push
mov
not
push
push
sbb
mov
and
jnp
outsb
jp
sub
adc
inc
clc
sbb
jmp
and
pop
add
mov
mov
out
sbb
cmp
filds
andl
pop
ds
xor
rolb
lahf
sub
mov
jbe
out
rcll
icebp
lock
into
jge
dec
out
stc
pop
push
pop
mov
pop
mov
push
mov
je
sub
popa
sbb
push
dec
or
inc
mov
inc
ljmp
dec
dec
add
fidivl
pop
push
in
jo
loopne
inc
cmp
push
cmp
ret
out
or
aaa
clc
cmp
int
xchg
aam
ficompl
ss
xchg
jns
sub
test
inc
shlb
fcmovnbe
jns
mov
pop
lahf
fisubrl
out
repnz
stc
popf
movsl
xchg
stos
out
add
imul
fiadds
mov
cmp
sbb
or
iret
enter
inc
mov
pop
in
int3
xchg
adc
test
lcall
or
imul
outsb
lds
xchg
cmc
xor
enter
outsl
xor
sbb
pop
leave
or
pop
mov
inc
xor
push
fmull
and
or
adc
jb
xchg
sti
and
imul
insb
mov
in
je
jo
rcrb
stos
add
into
and
jg
jb
or
mov
std
loop
flds
or
xchg
dec
test
loopne
push
testb
mov
pcmpgtd
jbe
mov
cmpsl
mov
mov
lret
or
bound
scas
dec
mov
mov
pop
out
test
or
out
cmp
jae
cmp
int3
mov
ret
push
jbe
mov
push
je
sub
dec
mov
fs
push
adc
push
dec
call
push
cmpsb
cmp
mov
ljmp
and
inc
leave
lock
shrl
jecxz
jbe
xor
jl
jbe
and
pop
ret
neg
sarb
insb
shlb
push
mov
aaa
mov
mov
push
bound
mov
or
mov
xor
jmp
inc
clc
loope
pop
sub
push
cltd
mov
js
cmp
inc
add
add
pop
xchg
out
mov
sub
sub
rclb
add
jg
andb
shlb
or
incl
pusha
cltd
xor
outsb
orb
mov
adc
daa
or
mov
and
mov
lahf
in
or
mov
cmc
mov
out
and
aam
mov
enter
sarb
mov
lahf
jnp
add
sbb
sub
pop
xchg
xchg
data16
popf
or
jne
pop
jmp
pop
adc
daa
stos
inc
and
cltd
dec
xor
ret
push
xchg
orl
add
bsr
inc
mulb
inc
in
pop
push
lret
jmp
mov
push
mov
inc
xchg
mov
rolb
mov
test
aaa
dec
subl
lret
xchg
mov
dec
mov
repz
push
pinsrw
mov
lcall
add
cmp
jg
adcl
sub
mov
jle
adcl
sub
stos
xchg
dec
adc
xor
pop
mov
add
jo
aad
out
jbe
xchg
xchg
cmpsb
pop
ds
add
jbe
inc
pushf
dec
sub
push
add
mov
fisttpl
repz
dec
mov
jne
test
imul
fdivr
cltd
jmp
dec
and
mov
mov
or
add
or
pop
mov
fstps
hlt
mov
and
mov
jae
inc
sub
stc
mov
push
or
imul
scas
mov
pop
mov
lret
lds
hlt
jno,pt
lods
jle
lock
inc
das
ret
or
mov
es
lock
stos
dec
aam
pop
push
or
bound
inc
iret
pop
or
cmp
push
fwait
ja
ljmp
sub
subb
mov
mov
xchg
scas
shl
or
push
pop
out
mov
push
aad
cwtl
jb
push
fists
jp
rcll
popf
xor
jns
rcrl
mov
sbb
pop
dec
and
in
dec
pop
int3
movsl
scas
pop
jmp
shrl
and
push
push
and
push
in
mov
rcrb
in
or
and
jbe
loopne
dec
xchg
into
stos
sub
sub
daa
pusha
js
cmp
lea
jge
mov
je
mov
adc
das
dec
inc
popf
clc
jmp
push
mov
and
dec
mov
in
adc
leave
outsb
cmp
push
daa
int
sbb
enter
fmul
mov
ds
stc
and
jp
insb
and
popf
sarb
pop
nop
jne
jp
sub
xchg
sub
into
xchg
in
xchg
cwtl
mov
stc
push
xchg
xchg
or
rol
sbb
mov
fisttpll
and
mov
out
sarb
loop
int3
int
cmp
mov
xor
shlb
mov
movb
and
pop
sbb
into
sbb
add
pop
pop
mov
sarl
or
aam
fistps
jns
movl
mov
imul
mov
movb
jl
push
fs
xor
cmp
outsl
push
mov
cmpsl
cmp
stc
cmp
cltd
out
ror
leave
fcoms
pop
inc
pop
in
mov
sub
mov
adc
adc
and
out
mov
cmp
aaa
enter
cltd
shrl
jecxz
pop
ss
dec
lcall
xchg
cmpsl
dec
cmp
inc
pop
mov
xor
out
cmp
out
jnp
lock
outsb
int3
fisttpll
add
pop
lods
or
movsb
inc
xchg
out
bound
pop
jmp
mov
fstpl
dec
test
jbe
cmp
jns
test
mov
xor
mov
mov
out
mov
ljmp
fildll
ret
movsb
mov
adc
out
rcl
cmp
xchg
adc
sha1msg1
gs
mov
jp
aas
xor
adc
leave
mov
mov
shlb
in
not
cmp
xchg
cli
fcoms
in
sti
test
int3
xor
fbstp
pop
mov
js
sbb
sbb
fwait
aam
sbb
lods
adc
int3
in
scas
and
xor
dec
dec
fwait
cs
rorb
sbb
mov
movsb
orl
mov
ja
jns
lods
add
inc
mov
jmp
jns
idivl
sub
cmp
sub
dec
or
xchg
call
dec
pop
pop
shrb
test
push
xchg
popf
jb
addr16
test
inc
or
add
iretw
xchg
add
ss
pop
gs
jp
pcmpgtw
test
out
clc
fsubs
cmpsl
push
pop
push
in
push
lea
sbb
dec
icebp
addb
bound
xchg
mov
cmpl
repz
xor
inc
imul
and
inc
popa
mov
je
test
ljmp
aaa
in
cmp
xor
sub
or
add
cmpsl
or
pop
pop
xchg
push
lret
fwait
sbb
mov
pop
adc
and
ja
stos
ret
inc
jo
jmp
or
inc
lahf
int
and
das
adc
fdivl
mov
dec
ds
add
pop
sbb
xchg
ret
mov
stc
imul
inc
inc
xor
pop
xor
add
out
xchg
sbb
in
test
xor
pop
mov
daa
inc
ret
loopne
out
test
scas
inc
push
mov
ja
inc
push
adc
into
cmpb
push
adc
sti
pop
or
adc
rol
mov
cmp
call
cmp
shrb
out
dec
imul
and
xchg
push
mov
xchg
arpl
daa
insb
bound
jne
mov
mov
in
mov
addr16
fnstenv
pop
add
cmp
xchg
mov
out
das
mov
add
bound
call
lret
push
adc
out
add
add
mov
pop
mov
inc
dec
xor
sub
iret
dec
cmp
lds
xor
psllw
lds
sub
and
shll
mov
jbe
ds
scas
adc
cmp
jnp
insl
xchg
roll
fnsave
lods
ds
sbb
xchg
xor
adc
into
ss
pusha
adc
js
cmp
lods
in
pop
scas
xchg
es
in
pop
ljmp
daa
outsl
pop
push
dec
lds
dec
inc
ficoms
addr16
aam
cmp
cmp
mov
sti
lret
adc
inc
out
cltd
pop
pop
lcall
lds
je
inc
sub
pop
and
pmullw
mov
mov
ds
cmp
stos
aam
adc
dec
in
inc
mov
mov
inc
int
adc
cmpsl
push
and
fidivl
xchg
add
int3
inc
push
das
test
lahf
mov
pop
jmp
xchg
sub
or
pushf
pop
dec
xchg
pop
aad
popa
testb
cmp
test
jns
xchg
jne
dec
adc
std
popa
adc
push
xchg
mov
pop
hlt
sbb
inc
and
out
sub
mov
scas
mov
ret
nop
aam
lcall
dec
rolb
ja
or
divb
push
and
or
inc
fsubrl
scas
xor
mov
loopne
lret
or
shrl
adc
xor
ss
inc
and
jg
adc
push
cld
xor
repz
xor
push
push
xchg
shll
test
das
lods
push
cmpsl
pop
sub
in
jle
imul
add
add
retw
dec
and
lods
mov
icebp
xor
mov
test
rclb
xchg
jge
test
testb
or
mov
mov
sub
pushf
push
mov
iret
jl
inc
std
sbb
ss
add
cmp
std
pop
push
cmpsl
int
sub
and
pushf
xor
iret
xchg
lea
xor
xchg
mov
sub
push
imul
into
fisubs
fisubrs
fidivs
or
out
pusha
nop
pop
xchg
cmp
dec
add
shll
testl
push
aam
dec
aad
std
into
and
sti
xchg
lea
in
jl
shr
or
add
loope
sub
fs
test
xlat
imul
or
push
pop
add
and
cs
sub
smsw
cmp
push
cvtpi2ps
cmpl
ds
jo
sti
xchg
imul
push
sub
jo
jns
push
cwtl
push
lahf
lret
cmc
in
scas
cmp
xchg
mov
imull
cmovns
mov
punpckhdq
push
mov
hlt
push
jle
cmp
les
mov
and
sub
imul
xchg
or
insl
dec
lcall
shrb
sbb
push
ret
jo
cmpsb
and
dec
adc
push
mov
jle
data16
pop
hlt
cmp
ljmp
xchg
inc
push
inc
sub
pushf
loopne
sbb
or
and
cmpb
ret
and
and
lea
ret
mov
xor
or
inc
push
outsl
xchg
cld
sub
add
lret
ror
mul
pop
fucomi
and
daa
and
aas
pop
mov
jns
inc
mov
fistpl
sarb
cmp
fs
xchg
popf
testb
sarl
lock
dec
mov
fwait
pop
nop
out
mov
repz
or
or
inc
fldpi
push
mov
xchg
inc
adc
sbb
jmp
rcr
jno
mov
loope
cmovbe
scas
lcall
sbb
fstpt
dec
or
out
inc
pop
bound
aas
jle
outsl
pop
add
jg
mov
jnp
notl
cmpsl
adc
out
cmp
sbb
insl
repnz
sahf
pop
movsl
and
add
push
push
xor
dec
fsubrs
inc
in
rcrb
cmpsl
mov
cli
pop
xlat
jecxz
hlt
das
sbb
scas
pop
xchg
xchg
das
mov
mov
mov
mov
subl
into
xor
jl
push
outsb
or
adc
and
jg
xchg
ja
cmc
sbb
lea
jmp
out
jno
jecxz
enter
pop
dec
jo
cmp
out
or
pop
cltd
insb
xor
mov
pop
inc
sub
push
in
jp
sbb
sbb
mov
push
popf
jnp
xchg
repz
mov
lcall
jo
ret
push
mov
cltd
mov
pop
out
jmp
jg
fsubs
loop
rol
nop
or
cmp
imul
enter
jo
inc
stos
insl
add
mov
lcall
sbb
int
ficoms
mov
test
push
scas
jge
mov
inc
negb
sbbl
sahf
jbe
mov
cli
inc
stos
roll
nop
or
scas
mov
cmpsb
and
inc
mov
push
fs
pop
dec
xchg
and
dec
fldl
xchg
or
inc
rcl
inc
inc
jge
inc
fwait
lea
xchg
mov
ljmp
rolb
mov
or
mov
inc
adc
pusha
and
inc
in
mov
insb
push
scas
pop
lods
inc
sbb
loope
imul
jb
sahf
mov
cmp
insb
addr16
es
mov
mov
add
movsl
sbb
dec
cs
in
aam
xor
mov
fcmovnu
and
in
imul
push
or
mov
sbb
aam
lock
pop
enter
in
icebp
dec
push
fiadds
and
stos
cmp
adc
pop
mov
jo
mov
xor
pop
shr
sbb
jae
or
xchg
and
xchg
fstpt
ljmp
jno
movsl
out
xchg
sub
movsb
mov
sbb
rcrb
cmp
rcl
js
dec
inc
inc
jo
jle
inc
scas
mov
pop
rolb
inc
adc
push
stos
mov
cli
add
test
into
sti
insl
aad
ss
mov
pop
and
adc
ja
std
decl
xor
enter
and
in
fstpt
dec
jecxz
inc
inc
push
pop
out
pop
cmpsb
cwtl
lds
inc
push
or
push
leave
loop
xchg
out
dec
rorb
cmp
jp
call
imul
mov
push
push
push
xor
jmp
ljmp
lea
sbb
mov
iret
fwait
and
cmp
cli
inc
roll
mov
cwtl
add
add
mov
shlb
jb
and
nop
loope
call
mov
rcll
stc
sbb
fsts
addr16
loope
clc
sub
lods
sbb
out
jmp
subb
inc
out
arpl
fistpl
cmp
in
mov
push
andl
or
and
out
push
lds
pop
bound
adc
mov
or
cmp
xor
cmp
push
shll
mov
cmp
push
call
les
call
into
cld
mov
push
gs
jb
cmpl
stos
stos
sbb
cmpb
mov
jne
xchg
mov
outsl
inc
sbb
stos
shlb
mov
add
imul
outsb
sbb
fildl
jecxz
fucomi
inc
or
mov
andl
das
or
xor
mov
mov
mov
andb
inc
aam
enter
in
xor
inc
mov
and
inc
push
into
xor
sub
push
data16
popa
stos
push
sarl
fsubr
andb
xlat
test
pop
in
xor
dec
jbe
sub
fdivrl
hlt
xchg
lods
cmc
popa
adc
test
mov
std
cmp
cmpsl
mov
cli
mov
cmpsb
pop
js
mov
out
mov
mov
mov
iret
jbe
repz
sub
repz
and
adc
call
or
std
imul
push
cmovl
mov
stos
js
sub
mov
adc
aad
mov
mov
jbe
dec
imul
jge
mov
out
inc
test
mov
mov
inc
xchg
jl
mov
in
cmpsb
movsl
mov
or
inc
mov
jb
mov
leave
dec
iret
xchg
lods
mov
inc
fsubrs
movsl
mov
jnp
sbb
pop
js
clc
psubsw
fs
mov
jno
ds
leave
cmp
lret
scas
movsb
fcoms
leave
bound
aad
arpl
cmc
repnz
jae
or
or
ljmp
cmpsb
push
mov
sarb
test
pop
das
scas
bound
es
inc
ret
adc
aas
sub
clc
xchg
fcompl
jno
les
stc
push
adc
mov
sub
outsl
lret
jns
cltd
bound
popf
and
ret
js
mov
aad
sub
push
pop
jnp
jb
xchg
mov
and
repz
mov
idiv
pop
push
lret
adc
sbb
xchg
int
adc
stos
jo
icebp
fcmove
das
mov
lret
push
pop
or
pushl
ja
iret
bound
notb
cltd
or
xchg
add
fists
inc
cli
mov
xor
or
push
rolb
xor
out
pop
mov
fwait
lcall
add
dec
dec
pop
mov
lods
lret
enter
and
and
es
push
cwtl
rorb
mov
loop
xchg
inc
sbb
std
pop
xorl
clc
mov
addr16
cmp
test
mov
lcall
xchg
or
out
stc
jg
gs
push
fsubrl
dec
loopne
in
pushf
fsubrl
push
out
fbld
addl
pop
push
sbb
loope
sbb
lock
adc
pop
das
xor
ljmp
fsubl
dec
xor
pop
out
in
stos
adc
fincstp
movb
push
pop
jp
iret
mov
int
bound
mov
out
inc
jp
mov
xchg
fs
fbstp
jl
ret
jmp
bound
outsl
sbb
repz
out
pop
popa
icebp
les
sbb
mov
sub
sti
inc
push
daa
frstor
inc
cld
sbb
xchg
cmpsb
add
fisubs
scas
cmp
mov
fisubrl
push
sub
mov
mov
pop
fucomi
mov
cli
jo
imul
push
xor
pop
je
test
xchg
out
jno
push
loopne,pn
loopne
or
mov
sti
inc
xor
repnz
std
sahf
popf
pop
pop
mov
mov
lock
jns
les
or
enter
fstpt
push
rcrb
and
stc
or
aas
and
mov
add
mov
scas
sub
or
mov
pop
data16
testb
scas
js
pop
xor
or
imul
ret
ret
into
xchg
push
adc
push
int
cmpsl
inc
xlat
cs
or
inc
sti
imul
lcall
jg
ret
adc
loop
xchg
or
stos
jbe
mov
sub
sti
mov
jne
pop
js
cmp
fistl
pop
push
wbinvd
mov
xchg
sbb
pushf
adc
inc
ja
ficomps
repz
xchg
aaa
xchg
adc
in
push
ror
jo
and
ret
test
jae
cmp
xchg
std
adc
dec
lahf
push
imulb
push
andb
rorl
addl
rcll
inc
iret
std
xchg
cld
add
inc
je
mov
aaa
pop
cmp
pop
out
jo
mov
enter
fsts
push
adcb
movsl
cld
test
ret
das
cmpsb
or
es
pop
dec
push
out
sbb
imul
xor
test
into
pop
add
lret
sub
loopne
clc
and
push
decl
mov
aaa
adc
aas
fstps
movsl
inc
jle
mov
add
jo
jg
mov
repz
das
fwait
xor
icebp
mov
mov
cmp
popa
lds
test
loopne
pop
dec
out
mov
sub
out
mov
or
popf
fsts
icebp
decl
and
call
or
adc
jae
pop
sbb
clc
jns
push
lods
lret
jns
imul
jg
arpl
inc
fsubrl
cwtl
xchg
nop
stc
aam
sbb
jle
call
sub
and
cmp
cmp
mov
sti
sbb
pop
cmp
mov
xchg
mov
jecxz
out
mov
into
dec
fdivs
loopne
mov
pop
jecxz
push
bound
mov
xchg
sbb
and
push
repnz
or
negb
ret
iret
loope
leave
inc
sbb
jns
xlat
add
lds
dec
ds
in
testl
xor
je
jge
sbb
adc
xor
xchg
xor
negb
cmc
push
insb
xor
in
imul
mov
sbb
aaa
fisubrl
inc
add
dec
jne
mov
pop
add
lcall
fdivl
cwtl
mov
cmpsb
adc
dec
insl
sub
push
inc
cmc
stc
in
xchg
mov
sbb
clc
ljmp
or
es
scas
in
jmp
stos
icebp
push
je
jnp
dec
shll
test
cmc
out
int
xor
xchg
xor
outsl
aam
jnp
js
mov
sub
dec
adc
add
pop
jge
xorb
test
adc
mov
dec
mov
dec
jle
in
mov
add
mov
mov
in
inc
cmpsb
cmpsb
add
xor
push
xor
add
stos
sub
aaa
and
jg
add
aam
or
subb
inc
cmp
add
int3
cltd
ret
in
shl
test
and
movsl
inc
adc
iret
push
mov
push
inc
mov
cmp
cwtl
bound
sub
xchg
push
out
sub
and
rclb
in
rcrl
popf
scas
jae
fwait
push
fisubrs
adc
leave
sbb
arpl
rep
mov
adc
movups
mov
dec
cmp
int3
sbb
jmp
scas
int
cmp
ss
imul
inc
adc
xchg
jne
add
out
jg
int
inc
mov
or
xor
jp
mov
fdivl
jg
xor
mov
and
sub
movl
and
fidivrl
add
aaa
push
add
mov
pushf
popa
jge
and
jae
inc
xchg
fdivrl
mov
cmp
clc
sahf
mov
jle
iret
pop
in
ds
dec
ss
lret
lret
mov
lahf
push
push
roll
push
ret
out
test
lods
adc
mov
push
int
inc
stos
mov
arpl
jmp
push
iret
jnp
adc
pop
add
push
test
mov
mov
mov
cltd
sub
mov
xchg
mov
je
fmuls
mov
mov
mov
pop
cmpl
pop
lds
adc
out
push
pop
daa
arpl
push
call
xor
pushf
pop
mov
push
scas
and
cmp
pop
cmc
push
out
add
xchg
and
cli
cmp
in
roll
push
arpl
mov
adc
sbb
add
sub
bound
jo,pn
push
pop
mov
mov
in
movsl
jb
xor
dec
outsl
aaa
imul
xor
jle
push
scas
sarb
fnstcw
scas
clc
fistpll
pop
jns
orl
out
test
stos
jl
jle
insb
aaa
fstps
cs
rcrb
fisubs
in
gs
xchg
in
rcll
dec
lds
jl
dec
loop
xor
cli
ds
cwtl
aad
push
pop
xor
test
xchg
cmp
fidivrs
outsl
cli
test
push
fdivl
ret
inc
add
jae
jmp
mov
sub
mov
repz
mov
mov
rolb
popa
mov
and
jo
ja,pt
fwait
sbb
cld
mov
aam
xor
push
into
pop
fcoml
sbb
movsl
lea
xor
inc
aas
movb
test
adc
xor
les
sub
lock
inc
xor
push
and
jg
or
sub
leave
test
mov
sub
inc
sub
sub
dec
jae
xor
mov
xor
js
jns
push
lods
xchg
lods
out
mov
nop
mov
dec
aaa
mov
mov
fiaddl
adc
mov
pop
mov
inc
xor
lret
inc
in
mov
mov
xchg
cmp
push
jns
push
repnz
pop
loopne
or
pop
mov
mov
mov
jmp
jmp
inc
stc
mov
mov
and
dec
movsb
lahf
push
sub
or
sub
cld
cmp
adc
cmp
out
add
dec
lock
into
test
inc
test
in
movsl
add
xchg
push
test
inc
cmp
movaps
add
popa
pop
clc
add
push
inc
cmp
jo
vpmuludq
push
sub
push
jmp
data16
push
mov
jge
insb
cli
dec
cmc
push
ja
xor
xchg
inc
mov
fmul
cmp
arpl
xchg
adc
test
mov
mulb
int3
movsb
xchg
jmp
lods
mov
cld
push
cmp
mov
sbb
xor
push
inc
jecxz
test
jno
icebp
xchg
push
cmpsl
mov
int
xchg
pop
mov
dec
int
xchg
orl
sbbl
pushw
pusha
cmc
jns
push
in
sub
pop
push
and
push
mov
arpl
in
lods
inc
subl
xchg
xchg
shll
rcll
test
or
loop
mov
test
loope
fxch
bound
ds
and
icebp
shll
test
push
mov
lods
pop
mov
add
dec
xchg
aaa
das
sbb
stos
fisttps
mov
popa
push
inc
mov
fsubrs
rdtsc
outsb
adc
sbb
shlb
dec
imul
xchg
push
inc
xchg
mov
mov
cltd
outsl
mov
popf
sahf
add
popf
mov
ret
imul
inc
in
lret
rep
lcall
xchg
sarb
mov
mov
sbb
movsb
cmp
cmpsb
cmp
rclb
sar
mov
cmp
mov
adc
call
add
iret
mov
xorl
daa
jg
mov
xchg
in
add
scas
movups
insl
shl
stos
pop
cmp
inc
adc
lods
xchg
sub
adc
xor
xchg
xchg
xlat
into
jle
push
xlat
sub
ss
clc
cmp
pop
inc
xchg
in
xchg
aas
jb
sub
push
fs
cmp
sub
jne
mov
mov
mulb
out
xor
mov
sbb
loop
test
enter
xor
lock
mov
add
xchg
xor
fidivrl
adc
mov
test
mov
jle
adc
insl
lahf
pop
inc
loop
int
cmp
inc
and
enter
adc
and
sub
ret
jno
mov
pusha
or
popf
xchg
jmp
loopne,pn
mov
arpl
lahf
daa
call
insb
sbb
movsl
xchg
mov
es
adc
insb
pop
pop
jg
and
sbb
xlat
sub
addl
jp
mov
push
xor
lods
jmp
xchg
add
aad
adc
mov
fsubr
push
dec
pusha
inc
mov
lahf
xor
xor
push
xchg
xor
fcmovnbe
loop
xchg
xchg
adc
inc
xchg
mov
call
push
xchg
jecxz
pop
rcl
mov
cwtl
stos
inc
jae
xchg
add
sbb
bound
fldt
dec
dec
adc
adc
inc
inc
lret
int3
ficoml
lods
pop
push
adc
roll
out
inc
xor
test
dec
jnp
cmp
shrl
scas
filds
xchg
ds
psubusb
fisttps
ret
pop
pop
inc
cmc
imul
addr16
rol
mov
pslld
jl
mov
sbb
sub
pop
xor
cmp
jns
cmp
lods
inc
adc
xchg
outsb
mov
sbb
jp
mov
mov
xor
dec
push
jle
sub
daa
xchg
movsl
mov
out
cmpsl
rcrb
add
mov
xchg
mov
popa
sahf
repz
adc
fisubrs
push
dec
ds
fbstp
mov
sub
push
dec
jo
jae
out
aam
enter
add
cld
jl
adc
cmc
ss
mov
pop
pmaxub
pop
inc
xchg
in
push
movntq
shrd
dec
aas
push
inc
aaa
pushf
xlat
cmp
dec
imul
pop
outsl
imul
subb
and
push
or
int
dec
inc
and
push
sahf
push
jo
clc
mull
pop
xor
jnp
lds
pop
or
ds
stc
cltd
insb
shll
mov
push
jnp
sbb
cmp
jnp
or
scas
js
adc
inc
test
dec
push
cs
repz
and
push
xor
shr
les
cmc
shr
arpl
dec
push
ss
jno
jl
mov
or
pushf
scas
ffreep
ret
jg
and
dec
out
adcl
jo
fmull
add
icebp
or
repnz
push
push
add
popa
sarb
dec
lret
sti
aam
and
push
nop
xchg
rcl
sbbb
dec
inc
testl
add
cltd
fs
and
faddl
sbb
test
cltd
sbb
mov
sbb
mov
cltd
and
in
jmp
rolb
pop
mov
mov
daa
insl
and
sub
pushf
mov
das
decl
cltd
aad
sub
pop
mov
inc
call
adc
pop
test
pop
adc
pop
mov
aaa
xchg
loopne
cmc
insl
mov
lock
test
rorb
xchg
and
ljmp
push
nop
dec
push
dec
lret
jmp
adc
insb
cld
popf
cmp
nop
mov
add
sub
movsl
in
inc
out
and
or
mov
es
jbe
call
cmp
xchg
hlt
cmc
dec
stos
lods
sbb
xor
fldl
iret
test
push
inc
fcoms
add
ret
or
pushf
add
test
stos
cmpsl
mov
push
ficoml
loope
popf
sbb
xor
dec
xlat
hlt
popf
mull
shlb
mov
stos
jnp
dec
jae
adc
sub
loop
shll
mov
xchg
fsubs
shl
adc
sbb
ja
leave
pop
arpl
cs
inc
xchg
cmp
int3
in
inc
cld
outsl
xor
rcl
xor
das
fdiv
ficompl
sub
or
mov
icebp
pop
das
cmp
mov
lahf
fadds
dec
sub
adc
cmpsl
scas
popa
mov
lock
xchg
test
sbb
or
pop
mov
lcall
inc
push
cmp
mov
adc
bound
lods
repnz
xor
sub
mov
fisubrl
int
add
pushf
cmpsb
roll
repnz
popa
lret
xchg
push
inc
dec
daa
mov
or
je
test
aam
dec
mov
sbb
insb
gs
mov
inc
subb
idivl
xchg
inc
shl
adc
negl
idiv
gs
mov
jns
mov
sub
or
mov
pushf
loop
xorb
jmp
mov
inc
push
pop
pop
stos
xlat
int
dec
sbbb
sbb
in
jecxz
les
mov
out
and
and
inc
adc
cmp
iretw
movl
add
fsubr
xchg
pop
movsl
rcll
mov
add
pop
pop
mov
das
lret
popf
mulb
fdivr
lret
push
ret
stc
aas
in
test
frstor
jp
add
movsb
and
cmpsb
addl
sbb
add
pop
xlat
fcmove
roll
addl
adc
dec
mov
mov
fisubrs
inc
adc
or
sub
sahf
mov
dec
imul
icebp
in
dec
push
lea
xor
mov
iret
pop
fs
cltd
psrld
xchg
aad
iret
shrb
enter
into
dec
roll
call
mov
push
aad
loope
xchg
ja
or
lret
sub
int3
cmp
cmp
stc
jmp
inc
int
mul
outsb
cmpsl
ds
push
mov
divl
cmpb
cltd
sub
je,pn
fstpt
push
sub
aam
pop
test
shll
jb
pushf
stc
jne
pop
push
push
aas
out
fidivl
rep
mov
mov
int
push
pop
aad
lods
cmpsb
lds
push
imul
xor
fnsave
les
cmp
mov
push
hlt
mov
mov
mov
xchg
inc
sbb
pop
xlat
pushf
xchg
add
std
cmp
outsl
push
adc
enter
mov
sbb
into
inc
dec
outsl
rorb
gs
mov
xor
cltd
outsl
add
jmp
xchg
data16
push
sub
pop
fwait
rolb
ret
sbb
enter
mov
adc
adc
ljmp
iret
adc
inc
dec
jl
popf
lahf
pop
fsubs
andb
popa
movsl
push
mov
movsl
gs
hlt
add
fisttps
adc
addl
fwait
push
movsb
hlt
xchg
dec
jl
sub
jb
mov
xor
ds
into
inc
push
arpl
pusha
xor
mov
xchg
imul
insb
add
cmpsb
into
repz
push
mov
fcomps
stos
and
add
mov
bound
es
inc
sbb
sahf
fs
xchg
jp
jns
mov
and
mov
imul
mov
lods
inc
lahf
sub
mov
mov
into
mov
dec
ds
insb
ljmp
stos
mov
arpl
mov
fldenv
les
push
popf
shll
inc
push
dec
loop
sub
mov
mov
sbb
pop
add
stc
push
mov
mov
std
sarl
adc
outsb
test
push
push
sbb
repnz
rorb
cmpl
sbb
push
clc
aad
cmp
stos
cld
in
fbld
mov
pop
cmovp
pop
lcall
inc
mov
add
cmp
imul
scas
fidivs
sti
mov
jmp
lret
push
std
and
xchg
in
add
jle
imul
jg
xchg
out
add
xor
push
mov
xchg
or
imul
pop
fists
inc
cmp
mov
xchg
test
push
into
inc
fistps
xor
test
adc
pop
lods
jb
test
bound
fucomp
cbtw
add
xchg
sub
cmp
push
out
fldenv
daa
pusha
inc
in
cmp
pop
xchg
outsl
fadds
push
push
in
mov
std
jecxz
or
shll
and
out
fldl
mov
es
mov
adc
ja
xor
cs
out
ret
iret
xchg
cmp
pop
cwtl
xor
int3
add
imul
and
lods
jnp
scas
dec
pop
insl
and
dec
cmp
sbb
dec
stos
sub
fsubrs
jle
xchg
test
test
scas
mov
lock
imul
test
ret
mov
sub
adc
inc
adc
out
dec
cmp
test
lcall
jae
out
pop
insl
cs
fcmovnbe
les
mov
repz
sahf
call
sbb
and
clc
les
cmp
mov
mov
test
sbb
mov
xchg
and
cltd
test
scas
sub
mov
mov
test
in
call
loopne
out
pop
rcl
daa
pusha
jg
pop
mov
push
inc
sbb
sbb
jle
xchg
mov
testl
pop
outsb
mov
dec
int
cmc
dec
push
mov
and
repz
mov
les
adc
inc
scas
sub
enter
push
imul
out
cld
ret
addr16
pop
mov
pop
mov
popf
jae
fwait
stc
add
cmp
fisubrs
cli
movsl
gs
test
rclb
cmpsb
in
inc
xchg
sti
xor
adc
push
fldl
in
es
idiv
fsts
mov
fnsave
test
push
push
imul
jb
lds
scas
xor
pop
sub
lea
lods
icebp
jge
pushf
inc
jne
stos
and
jno
pop
not
fiadds
imulb
xchg
jg
dec
xor
addl
movsl
push
bound
xchg
dec
mov
cltd
psubsw
xor
jge
mov
test
dec
fwait
xlat
movsl
jns
add
stos
test
mov
jbe
popf
inc
mov
push
xlat
jge
inc
arpl
imul
cmp
xor
hlt
jmp
bound
sbb
mov
sbb
ja
pop
push
mov
in
mov
clc
pushf
loope
sub
ret
pop
call
vmwrite
fnstsw
mov
mov
fidivrl
push
jne
cmc
mov
adc
std
rcl
adc
add
cmpsb
leave
cmp
fimuls
push
sti
mov
shr
es
stos
add
jle
andl
push
arpl
jae
xchg
jmp
frstor
cmp
rcl
mov
lock
lods
test
xchg
cwtl
mov
mov
inc
push
adc
jae
sbb
fsubrl
shrb
popa
lock
lds
adc
mov
jae
mov
add
into
notl
mov
xchg
arpl
je
in
shlb
xlat
sarb
ljmp
mov
xchg
dec
movsl
into
or
shll
xchg
mov
hlt
dec
add
pop
pop
mov
fs
jg
xchg
xor
dec
mov
iret
repz
add
into
loopne
nop
test
std
xor
call
stc
inc
je
iret
cmpsl
inc
mov
xchg
sbb
decl
loopne
push
or
pop
jg
ja
mov
iret
sbb
int3
call
loopne
push
mov
stos
outsl
push
mov
jno
stc
lahf
cmp
add
orb
lds
insl
aam
insl
jo
or
mov
cmp
cli
or
call
popf
jne
fistpll
push
imul
test
mov
cld
shr
mov
test
outsb
arpl
sub
jecxz
inc
imul
addr16
cmpsb
mov
sbbb
pop
push
mov
out
shl
imul
into
jge
push
jne,pn
lret
cld
or
loop
add
mov
sub
xchg
sub
mov
inc
adcb
movsl
fstpt
sub
ret
and
popl
pusha
lea
mov
lret
sbb
mov
ja
loop
nop
outsl
xor
pusha
pop
shlb
rcr
jne
outsl
push
imul
sti
mov
dec
jecxz
mov
repnz
aad
push
cmp
dec
adc
sub
lods
scas
add
mov
inc
imul
aaa
jge
lret
jg
test
xchg
mov
pop
and
lods
in
xchg
xchg
iret
mov
sahf
cmc
ss
xor
push
mov
fstl
xor
adc
hlt
ja
mov
ja
mov
pop
inc
xchg
in
shrb
sub
mul
hlt
xor
sub
sbb
imul
jae
shll
je
jg
mov
pop
leave
sahf
stos
scas
mov
push
cmp
sar
stos
std
mov
bound
mov
cmp
pop
sub
mov
push
push
fstps
ja
xchg
icebp
scas
mov
jbe
rorl
push
hlt
xchg
push
sahf
mov
or
jg
lods
jl
rcrl
insb
fwait
pop
test
cmp
icebp
pop
xchg
testl
cmp
mov
xor
scas
and
inc
call
pop
mov
in
imull
xchg
push
mov
pop
xchg
xor
xlat
push
in
clc
adc
cld
les
mov
sbb
dec
add
sbb
ret
in
add
adc
outsb
xchg
shr
ljmp
xlat
mov
aas
push
and
pop
pop
ljmp
sbb
test
add
add
cmp
lea
mov
bnd
xchg
add
sub
sub
xor
je
cmpsb
lea
mov
popf
push
int
xchg
in
inc
xorb
sub
lea
cmp
pop
dec
dec
repnz
out
call
mov
xchg
xchg
mov
xchg
sbb
leave
lds
sub
add
mov
jb
fs
sub
ss
push
add
lods
addr16
mov
and
notl
dec
inc
mov
mov
mov
hlt
insl
jl
in
movsl
addr16
fbld
or
aaa
mov
jae
mov
sbb
roll
lcall
decb
cmp
mov
test
dec
add
push
fidivrl
xor
and
inc
repnz
mov
ljmp
js
xlat
cltd
pop
push
xor
es
jp
outsb
fildll
popf
popf
ja
jecxz
mov
adc
cwtl
xor
mov
testl
add
cmpsl
lahf
sub
cld
or
push
and
adc
push
xorb
pop
mov
icebp
and
enter
enter
fdiv
jge
movsl
mov
xchg
mov
aaa
sub
adc
jns
mov
jo
sub
adc
xor
lods
in
and
int
adc
pusha
repnz
pop
je
in
or
inc
dec
ret
push
iret
lods
pop
sbb
enter
or
cmp
cmpsb
in
sub
daa
adc
std
pop
negb
dec
xchg
shrl
rolb
xor
ljmp
jae
inc
fwait
outsb
or
adc
xchg
push
mov
jb
repz
out
jne
adc
jae
std
nop
pusha
aad
and
xchg
out
inc
mov
mov
scas
xlat
push
and
and
ficomps
popa
sbb
insl
and
xchg
adc
pusha
mov
jb
xchg
sub
jl
pop
add
addr16
lds
cmpb
aas
divb
bound
inc
fnstcw
lods
dec
and
shll
lods
adc
sub
mov
fucomip
inc
cmpb
lcall
or
add
insb
enter
mov
inc
add
adc
in
out
push
in
adc
cmp
inc
add
aad
inc
outsl
mov
addr16
out
punpckhwd
mov
fbld
mov
inc
jae
push
mov
loop
xlat
sbb
pop
cltd
scas
aas
and
nop
sub
cmpb
cld
pop
or
dec
inc
inc
inc
dec
push
xlat
test
adc
rcl
cmp
and
ja
push
sbb
inc
int
sbbb
rcll
inc
cmp
fistpll
or
hlt
inc
orb
jbe
adcb
sbb
xor
repz
sub
mov
dec
inc
push
sub
das
xchg
cmp
outsl
and
pop
mov
call
sbb
inc
mov
adc
push
loope
xchg
repnz
pop
dec
pop
sbb
loope
testb
fwait
mov
xchg
call
jne
mov
xor
mov
mov
in
rclb
jmp
cmp
rcrl
cmp
mov
inc
or
xchg
xchg
pop
mov
pop
pop
adcb
faddl
mov
in
ret
mov
mov
je
fmull
mov
mov
cs
lds
test
push
js
push
mov
add
xor
lock
mov
push
repz
xchg
nopl
or
jg
dec
sahf
popa
jecxz
orb
jbe
je
data16
scas
in
sbb
cmp
dec
add
sti
fistpl
ljmp
rcrb
cld
aad
ds
cli
add
hlt
pop
sub
push
mov
mov
fdivl
pop
add
cmpsl
call
sbb
aaa
scas
push
popa
jne
sbbl
test
out
imulb
sub
daa
xor
add
mov
jp
mov
jno
hlt
sbb
sub
aad
dec
mov
in
imul
sahf
ret
sub
loopne
lret
or
ret
in
es
xor
pop
or
mov
dec
inc
xchg
jbe
adc
leave
ficoms
mov
js
mov
xchg
push
outsl
mov
dec
jbe
in
sbb
popa
test
js
aas
and
aas
jp
or
dec
lret
xlat
xor
mov
adc
push
sbbl
mov
fadds
cmp
xor
or
insl
xchg
test
pop
xlat
arpl
addb
mov
mov
push
mov
cmp
sub
jne
cmp
les
jp
negl
fildll
pop
outsl
lds
sbb
call
sbb
cmp
scas
jmp
jbe
xor
jecxz
mov
movsb
outsl
or
je
pop
sarb
cs
popf
sbb
xchg
adc
cmp
mov
aaa
aad
outsl
outsl
std
jno
lods
and
cltd
push
enter
dec
mov
cmp
mov
lret
xchg
int
popa
or
add
movsl
mov
mov
aaa
inc
mov
sahf
scas
sbb
cmp
xchg
enter
push
mov
movl
in
movsl
push
scas
out
xor
inc
aad
adc
pusha
jb
add
cmp
in
push
or
sbb
out
divl
nop
sbb
jge
mov
dec
mov
jno
lcall
pop
jle
pusha
pusha
sbb
mov
in
ljmp
push
test
jae
test
xor
inc
pusha
fmuls
popf
test
leave
or
sahf
xchg
andl
jmp
mov
lods
cltd
out
movsl
in
jmp
int
cld
push
jmp
push
rcll
fisttpll
imulb
push
dec
pop
xchg
xor
jb
insb
xchg
stc
adc
push
lahf
addr16
es
pop
int
test
inc
mov
pop
mov
sub
sub
sub
nop
mov
shl
pop
int
arpl
adc
mov
test
xchg
jle
fsub
mov
ja
insb
inc
sub
adc
cld
loop
fs
ja
xor
popf
jle
add
adc
mov
aad
mov
movsl
out
mov
xchg
add
xchg
jns
aad
loop
push
sbb
mov
xor
bound
mov
dec
imull
xchg
ds
mov
cmpsb
test
ffreep
rcrb
fs
jb
pop
fiaddl
or
sbb
push
mov
push
cmpsl
xlat
scas
out
call
or
addl
lahf
fnstsw
xchg
pop
push
jmp
popa
pop
out
cmpsb
mov
pop
lret
or
add
ljmp
add
push
ret
lds
jmp
icebp
lret
ret
js
bound
mov
jecxz
loop
gs
repnz
push
stos
test
ds
dec
mov
cmp
mov
cmp
sti
or
test
popf
dec
or
or
fwait
mov
das
push
scas
popa
out
mov
cltd
and
jo
and
xor
and
into
je
mov
jb
test
sbb
and
mov
xchg
pusha
jmp
iret
addr16
ljmp
cmc
sbb
jl
or
or
push
icebp
mov
pushf
xchg
pop
fbstp
cmp
jno
sub
xchg
sbb
aaa
xchg
sbb
jno
insb
add
gs
mov
lods
repz
jp
pushf
arpl
mov
loop
add
repnz
lods
sbb
popf
jo
cmp
rol
sbb
adc
jnp
data16
nop
xlat
aaa
push
jbe
cmp
cmp
rcr
pop
add
push
pop
inc
hlt
cs
bound
push
fs
or
push
inc
or
testb
ret
add
sub
add
arpl
push
xor
cmp
mov
loopne
jno
lahf
sub
popf
sti
loopne
xor
sub
sub
jg
pop
or
in
fildl
stc
add
and
dec
sbb
and
ds
nop
cmp
jle
cmp
mov
mov
fdiv
add
leave
xchg
inc
stc
sub
cmp
scas
sub
insl
or
pusha
ficoms
pop
push
ret
mov
adc
inc
enter
add
adcb
mov
ljmp
mov
mov
cmpsl
icebp
iret
cwtl
fisttpl
jmp
in
loopne
jle,pn
stos
dec
loope
ret
xchg
pop
aas
lret
loop
sub
lods
call
ret
adc
fsub
daa
add
mov
cli
jge
pop
ret
cld
add
cli
sub
xchg
pop
icebp
scas
loop
repz
mov
or
test
push
fisubs
mov
lahf
dec
xchg
rorb
idivl
push
mov
out
out
setl
adc
add
sub
int
and
adc
push
mov
shl
ret
mov
mov
mov
dec
dec
in
sub
push
rorl
cli
and
movsb
push
or
dec
fwait
mov
cwtl
jg
or
xor
lret
sbb
mov
sti
hlt
loop
push
out
add
out
cmp
out
shrl
mov
jnp
pusha
push
leave
fmull
jg
sub
xor
aaa
ss
jmp
xchg
movsl
or
orw
pop
fs
push
cmp
push
lock
call
idivb
pop
das
popf
loopne
das
into
sub
ljmp
mov
out
cmp
movsl
xorl
pop
cltd
inc
ret
pop
jae
enter
cwtl
mov
or
cs
sub
loope
lea
sbbl
data16
push
push
test
out
sub
dec
jbe
mov
lods
std
fcmovbe
aas
and
push
fsubrs
sbb
mov
or
imul
pop
xor
sahf
das
lods
ljmp
xchg
iret
inc
rorl
inc
popa
imul
xor
cmp
lea
add
sti
bound
aas
addb
in
cmp
daa
into
adc
into
jnp
dec
fcoms
dec
loopne
scas
movsl
xchg
lret
push
gs
lods
aam
push
sahf
insb
fiaddl
scas
cmp
flds
out
push
xlat
cld
addb
push
and
or
rorl
xchg
jle
shr
mov
and
fdivr
pop
lock
sti
fwait
jbe
ret
pusha
hlt
fnstsw
push
inc
xor
loope
pop
and
or
cmp
jmp
aas
jmp
mov
sahf
mov
mov
xchg
pop
push
data16
push
adc
call
xchg
mov
repz
test
mov
insl
sbbl
insl
nop
pushf
ds
pop
or
jl
rcrl
ret
add
ficoml
test
fadd
jae
int3
shlb
jg
pop
adc
adc
into
aaa
mov
cwtl
adc
nop
cmp
xor
test
sbb
adc
je
pop
je
aad
xchg
lock
int
push
mov
out
sbb
fiaddl
notb
xchg
mov
push
pop
mov
mov
ss
mov
xchg
in
popf
mov
test
push
xlat
xchg
ror
dec
jns
xchg
push
inc
or
adc
xor
shl
xor
xor
cs
shll
popf
sbb
cwtl
push
ret
mov
push
adc
mov
je
out
movsb
mov
into
xchg
and
jle
jo
clc
cmp
xchg
ds
add
or
mov
jecxz
iret
rorl
adc
leave
pop
lds
ss
cmpsl
add
mov
loope
in
loope
cmp
decb
sbb
mov
jns
dec
push
mov
mov
mov
inc
sbb
dec
insl
add
fldl
lret
xchg
test
sti
cmp
sub
sub
cmpsb
mov
mov
xchg
popf
xchg
and
cmpsb
lods
sub
or
je
xchg
mov
mulb
pop
fnop
les
cmp
lret
xchg
dec
pop
sbb
mov
test
lcall
pop
movsl
sub
sbb
mov
leave
out
in
movzbl
pop
push
mov
inc
add
or
fstpl
sub
or
repnz
adc
aad
cmp
sbbb
jl
das
aam
je
inc
sbb
int3
je
inc
add
and
add
cmp
and
out
imul
adc
aam
in
xor
inc
adc
cmp
jbe
pop
stc
push
mov
sbb
xchg
push
out
data16
push
cli
lods
pop
clc
dec
lret
aas
inc
jle
cmp
add
fimuls
pusha
push
pop
pop
and
iret
pushf
aas
add
push
lods
jno
daa
sub
movsl
and
pop
stos
dec
xchg
cmpsl
popa
sub
xor
test
movsb
lods
and
mov
cmp
inc
jecxz
cmp
xlat
dec
push
mov
test
adc
mov
xchg
sub
or
mov
mov
in
mov
pusha
sar
inc
jge
ja
fnsave
add
clc
inc
sbb
and
pushf
and
lea
jae
adc
add
out
mov
loop
xchg
push
push
mov
out
data16
in
sbb
jne
sub
mov
outsl
outsl
cltd
sbb
mov
call
sbb
pushf
addb
popf
sub
adc
sbb
push
fsubr
cltd
inc
add
lret
leave
xor
mov
or
mov
and
adc
adc
xlat
xchg
cmp
push
dec
xor
or
xor
mov
dec
out
cmp
inc
mov
and
iret
sbb
std
in
pop
adc
repz
imul
push
ds
dec
std
xchg
dec
cmp
xchg
add
xor
push
imul
hlt
pushf
add
jl
pop
cli
push
aaa
adc
xchg
test
xchg
lds
nop
sbb
jmp
mov
and
jb
inc
inc
dec
jg
xor
int
or
and
subb
test
pop
es
pop
inc
gs
sub
xchg
push
dec
xchg
mov
jo
xorl
mov
negl
cli
mov
push
push
xor
xorb
xlat
ss
fisubl
outsb
inc
sbb
xchg
in
dec
sub
testb
add
loop
aad
xor
fnstcw
int
into
nop
adc
fsubs
loope
cmp
pop
sub
jmp
mov
nop
mov
stos
test
pop
push
cmp
js
daa
dec
sbb
out
pop
xchg
mov
int3
pop
or
sbbb
mov
incb
lods
sti
imul
inc
add
mov
mov
cli
das
mov
sbb
cmc
es
jnp
dec
cmpsb
adc
mov
xor
out
adc
nop
btc
hlt
xchg
test
mov
enter
leave
lock
outsl
sbb
mov
lds
pop
lds
hlt
lds
dec
xor
pop
mov
movsl
rclb
scas
aaa
cmpsl
fsubs
int3
imul
jns
xlat
pusha
fwait
push
les
mov
int3
popf
xorb
out
xchg
push
ret
dec
addb
rolb
sbb
mov
dec
sbb
xor
jle
add
sbb
insl
je
adc
mov
into
add
adc
mov
mov
out
xor
int3
lods
mov
mov
int3
loop
and
xor
lret
adc
mov
xlat
inc
fdivrs
aaa
out
jmp
mov
lret
and
sbb
mul
out
jecxz
pop
mov
inc
add
push
sub
or
jecxz
cmpsb
nop
dec
ficomps
cmp
popf
loop
insb
rolb
pop
jns
lahf
jo
mov
push
outsl
adc
inc
dec
loopne
jnp
mov
jge
xchg
mov
mov
jg
into
or
stos
lret
cs
inc
lods
shr
jecxz
movsl
and
mov
pop
add
mov
scas
sub
jb
adcl
mov
jno
outsb
stc
xchg
mov
dec
rcrb
push
fldl
seta
aad
jmp
mov
into
mov
sub
jle
dec
or
jns
fwait
mov
jne
mov
mov
cmc
sub
pop
or
cmpsb
repz
dec
sti
mov
or
gs
cwtl
xor
mov
decb
jo
notl
fdivl
mov
mov
outsl
mov
nop
and
jg
or
lods
add
pop
pop
test
xlat
sbb
fucomp
sub
ret
push
adc
mov
cmpsl
gs
or
mov
cs
sub
adc
outsl
xor
sbb
pusha
enter
xchg
mov
pop
popf
sub
cmp
dec
push
mov
sub
orb
jmp
mov
inc
mov
mov
xchg
enter
and
xchg
mov
outsl
and
pop
mov
int
jmp
movsb
mov
mov
cmp
mov
and
cmp
aaa
mov
shrb
lret
adc
mov
dec
test
inc
sbb
push
in
add
and
mov
leave
insl
cmp
loopne
leave
push
push
mov
and
push
cmp
out
mov
pushl
enter
dec
dec
push
daa
into
test
cltd
aas
jecxz
fwait
inc
cmpb
loopne
je
pop
dec
aad
sub
cmp
sbb
xor
les
shlb
xorl
xor
adc
dec
cmp
xchg
out
lcall
and
repnz
mov
rcrb
stc
ss
leave
dec
cmp
mov
stc
cmpsl
pop
test
mov
pop
mov
jns
sub
clc
sti
push
out
jnp
pop
sub
dec
push
push
aaa
addb
cmp
push
pop
test
fldt
or
je
xor
sbb
and
in
inc
daa
sar
adc
cmc
rolb
fsubl
in
pop
dec
and
add
or
aad
push
jecxz
subl
aaa
jge
or
jecxz
ja
das
aaa
fadd
push
les
xor
ret
inc
jno
push
sbb
dec
inc
pop
dec
mov
das
filds
mov
mov
inc
sahf
and
push
and
repz
xor
or
sub
jnp
mov
sbb
and
rclb
mov
rcl
in
xchg
ljmp
sbb
stos
cmpsb
jg,pt
fildl
adc
cwtl
sahf
ror
rcll
out
imul
pushf
andl
sarb
lret
adcl
jae
dec
push
mov
jle
cmp
scas
movsl
xchg
loopne
jno
out
jle
inc
lods
sbb
adc
repnz
pop
add
inc
dec
imul
sub
ss
and
inc
push
out
ret
xor
cs
in
shl
push
ficoml
inc
leave
mov
out
jmp
xor
mov
outsb
push
mov
push
subb
inc
jno
dec
jne
add
sbb
fimuls
mov
stos
inc
mov
movsb
adc
loopne
lret
rol
aad
icebp
outsb
cmc
inc
pop
out
mov
mov
cmc
inc
je
xchg
hlt
jno
push
call
xchg
cmp
jbe
sbb
mov
sub
insb
and
and
xchg
int3
std
ds
push
cmp
cmp
cwtl
jmp
rolb
or
mov
jg
jge
out
adc
fnstcw
test
xchg
loope
inc
fisubs
inc
adc
fldl
inc
data16
push
jns
test
xchg
out
fidivs
or
imul
cmp
es
push
adc
bnd
cmp
add
jecxz,pn
mov
jecxz
popa
jbe
incb
lock
xchg
ss
mov
cmpsl
movsb
cmp
sahf
dec
aas
enter
and
mov
xchg
jl
loope
xor
add
scas
negl
pop
call
shrb
pop
lods
ljmp
aaa
insb
and
adcb
in
test
inc
aas
push
and
nop
dec
xchg
xchg
sbb
ljmp
inc
lret
adc
add
sbb
inc
aam
push
jg
jb
xor
incb
push
sbbb
jg
adc
sbb
xor
and
in
sti
imul
dec
sub
push
or
jo
mov
outsl
out
or
push
fnsave
jge
sbb
xchg
and
jae
aam
inc
and
xor
mov
les
sub
aam
dec
cltd
ja
cmp
mov
dec
and
sub
pushf
mov
daa
cs
jno
cmp
jo
popa
ficoml
lods
stos
or
outsb
mov
outsb
js
roll
ret
cmp
popa
fimuls
popf
cmp
ret
mov
dec
sbb
xor
lcall
xchg
xchg
stos
sub
mov
in
mov
sbb
add
adc
jle,pt
mov
bound
cmpsl
out
pop
push
jae
int
ljmp
adc
ljmp
dec
loop
and
adc
cli
push
mov
jns
fidivl
lock
fistps
shl
sub
xchg
xchg
fcoml
cmp
xor
mov
add
rcrb
xchg
test
and
outsb
andb
mov
aam
dec
pop
lds
push
aad
push
or
cwtl
xor
cmp
movl
push
pop
pop
leave
xor
jl
dec
xcrypt-cfb
cmpsl
or
dec
mov
insb
scas
or
lcall
sub
orl
in
imull
repnz
in
sub
mov
and
mov
insl
mov
repz
arpl
and
shlb
lea
rcl
adc
sbb
test
decb
int3
and
das
loop
jle
rol
rolb
mov
ds
pop
mov
das
scas
push
sub
dec
cmp
pmaxub
ss
jp
in
mov
enter
out
leave
lods
testl
aad
imul
cld
arpl
decl
hlt
clc
mov
mov
lcall
jge
in
xor
pop
je
rcl
xchg
jecxz
loope
and
les
xor
scas
rcrl
mov
mov
arpl
lock
dec
lret
mov
jle
and
fs
addb
int3
stos
inc
inc
bound
or
insl
les
push
pop
inc
dec
cmp
xlat
pushf
sub
dec
or
in
cwtl
mov
outsl
sbb
repz
mov
clc
into
push
jne
inc
mov
shl
shll
mov
cmp
jbe
jp
movsb
pop
sbbl
push
shlb
popf
fs
inc
das
stos
jg
jns
or
xchg
cs
xchg
and
and
int3
faddp
xor
mov
dec
jmp
mov
pop
loopne
mov
xchg
adc
add
bound
jge
jbe
fwait
outsl
cld
repnz
push
pop
mov
xchg
ja
mov
fwait
movsb
xor
aad
stos
popf
insl
pusha
in
push
ret
je
scas
or
push
sar
and
pop
in
jmp
test
pop
mov
pushf
lods
sub
pop
out
out
sti
sti
mov
jmp
aas
jo
and
push
int
rcrb
or
xor
pop
cmp
mov
xor
sbb
mov
jnp
popl
popf
mov
lret
mov
xor
dec
das
lds
xlat
or
inc
clc
mov
push
in
and
adc
daa
push
push
pushf
mov
push
push
add
lcall
jecxz
push
pop
iret
sbb
xor
fldt
inc
in
in
outsb
das
pop
mov
pop
xor
or
test
cmpsb
es
dec
call
frstor
shr
push
sub
jmp
mov
movsl
repnz
jne
repnz
xor
dec
mov
test
xor
mov
mov
cld
sbb
ret
inc
dec
jno
xor
push
push
jg
leave
jns
xchg
ficoms
std
fwait
test
xchg
cmc
repz
iret
xchg
popa
push
xor
fmull
sbb
mov
fwait
mov
out
aad
mov
xor
outsb
data16
dec
fwait
or
or
mul
xchg
outsb
sti
cmc
fisttpll
sbb
in
mov
movsl
jno
push
dec
fs
cli
sbb
loop
jl
jns
leave
pop
push
setle
xchg
mov
arpl
sub
pop
inc
loop
xchg
jl
mov
cmpsl
xchg
or
jnp
lods
fbstp
outsb
pushf
sbb
sub
inc
and
xor
or
inc
test
aad
jo
clc
fistpl
nop
decl
out
dec
out
pop
int
insl
lahf
jnp
scas
cmp
clc
cmp
push
orl
dec
and
fucomip
xor
movl
mov
ret
out
jne
in
and
clc
lds
pop
or
scas
mov
fs
sti
test
adc
fildll
sbbb
in
lods
sbb
jge
inc
jmp
fcomip
fadds
call
pop
push
or
adc
inc
or
in
mov
inc
stos
popf
mov
pop
leave
jno
xor
pop
mov
jg
mov
pushf
adc
stos
int3
loope
sbb
inc
cs
jmp
int3
adc
cmp
jmp
ljmp
dec
mov
inc
sub
pop
mov
int3
lcall
sti
mov
fwait
and
xchg
mov
jae
in
mov
inc
dec
cmp
and
repz
stos
mov
test
ds
jg
andl
mov
int3
popf
adc
js
push
bound
dec
sbb
cmc
sbb
mov
inc
xchg
pop
add
push
or
xchg
and
repz
cmp
imul
stos
sub
stos
stos
fwait
or
jl
lcall
mov
pop
add
adc
iret
push
sub
imul
sbb
lcall
pop
sub
imulb
jmp
arpl
cld
sub
aad
mov
push
xchg
scas
sbbl
mov
popf
cwtl
in
push
or
push
inc
add
das
mov
aad
adc
std
movsl
inc
fs
cs
inc
xchg
repz
ljmp
jns
inc
pop
int
push
sub
dec
subl
movsl
rolb
out
idivl
outsl
pop
and
jb
and
rorl
jge
shll
jnp
push
cmpsb
sti
xor
inc
cmpsb
push
xor
movsl
popf
fwait
std
std
lret
lret
mov
shl
out
jno
push
ret
fsubs
xchg
fwait
imul
fcmovbe
inc
push
dec
les
mov
cwtl
fsubl
mov
jno
notb
jl
pop
ficoms
int3
aad
mov
subl
arpl
mov
mov
sbb
mov
into
out
mov
sbb
xor
xchg
and
outsl
pop
clc
pop
arpl
adc
outsb
cmpsb
sti
fs
das
lcall
rclb
xchg
xlat
sbb
or
je
lcall
pop
xor
data16
cmp
sbb
sub
jp
pop
es
sub
xor
aaa
mov
sarl
in
and
jmp
lcall
mov
add
mov
mov
out
in
pusha
insb
cli
ss
xchg
pop
inc
cwtl
jae
push
bound
or
dec
adc
jmp
or
ljmp
dec
dec
xor
xlat
lds
or
fcoms
daa
push
call
add
jle
mov
pushf
mov
loop
dec
cli
aad
lcall
add
or
movsb
or
xchg
int
inc
movsb
dec
mov
popa
sub
cs
leave
ja
mov
jnp
into
mov
cmp
ss
xchg
pop
sub
jno
test
mov
in
mov
and
sahf
mov
mov
jl
popl
inc
arpl
aaa
inc
jbe
loop
mov
out
xchg
xor
ljmp
in
into
cli
or
and
mov
shll
dec
bound
mov
addr16
stos
subb
jns
stos
subb
mov
cmpsl
loope
mov
stos
sti
addr16
outsb
call
mov
neg
or
aaa
push
jno
cmp
jo,pt
int3
fwait
xchg
nop
out
fdivrp
loopne
insl
cmp
in
pop
xor
and
sub
dec
add
jne
call
mov
mul
cld
popa
add
and
mov
cmp
and
rol
repz
gs
cmp
mov
inc
enter
rolb
push
test
cmpsl
pusha
push
add
inc
out
notb
aam
push
cld
adc
cli
mov
insb
ljmp
add
ret
sub
mov
lods
pop
pushf
cld
cmpsl
fdivl
stos
xchg
aam
mov
stos
fcmovne
fcomps
negl
mov
push
outsl
pop
xchg
out
jle
adc
clc
adc
iret
fistl
jp
ret
sbb
fidivl
cmpsl
adc
clc
shr
lds
fwait
push
fwait
dec
scas
pop
dec
ret
jle
sbb
or
popa
and
in
sahf
fidivl
xor
nop
push
lock
mov
in
jo
push
pusha
outsb
xchg
and
aad
mov
test
jp
scas
add
iret
inc
gs
xchg
mov
neg
sbb
push
popa
pop
test
sub
jge
aas
cmp
dec
enter
arpl
enter
sub
cmp
adc
mov
dec
cltd
ror
dec
adc
xchg
push
loope
sbb
lock
jmp
sbb
push
sub
inc
inc
push
xor
pop
pop
or
and
inc
push
jnp,pn
dec
xchg
lock
mov
lock
test
push
loopne
pop
mov
pop
cli
nop
xorb
test
mov
in
test
fdivrs
xor
pop
mov
push
and
adc
ja
lcall
xchg
mov
mov
mov
cmp
xchg
js
in
mov
jge
push
ret
clc
xor
stos
add
rcll
aaa
add
shl
std
pop
mov
daa
shr
imul
mov
movsl
aad
aad
mov
inc
lcall
shrb
loope
sub
mov
mov
and
aad
xchg
cmp
mov
sbb
inc
lcall
dec
and
add
movsb
pop
mov
ljmp
and
gs
inc
push
loope
xor
push
xor
mov
repz
sbb
imul
jns
data16
insl
push
mov
cmp
je
xchg
lret
out
lahf
mov
leave
xchg
dec
popf
jecxz
mov
adc
je
imul
dec
test
cmp
mov
xor
aaa
std
cmp
mov
loop
ret
add
inc
test
sub
inc
sbb
pop
mov
dec
imul
incl
ja
jp
and
sbb
aam
cmpsl
xchg
inc
jle
roll
mov
mov
je
sarl
in
and
sbb
aam
cld
cltd
adc
jo
cmp
xchg
jecxz
dec
jae
or
sbb
xor
dec
sub
out
pop
pop
jns
cs
sbbb
lods
sub
xchg
aad
je
daa
lahf
push
fdivrs
add
push
mov
pop
cltd
mov
dec
popf
push
mov
or
test
sub
scas
stos
cmp
shll
add
addr16
or
pop
push
enter
cld
cmp
dec
jge
data16
into
add
shll
mov
into
orb
rcl
imul
jmp
mov
aad
adc
push
addb
sti
out
das
adc
rcrl
out
push
inc
jecxz
or
or
jb
pop
in
test
xchg
mov
enter
jae
sbbl
dec
push
mov
jnp
divb
dec
cmpsb
sub
insl
jmp
repnz
arpl
pop
stc
rcll
sub
pop
lods
jmp
adc
imul
xor
std
pop
and
pop
int3
sub
call
jo
mov
fsubs
incb
cmp
outsb
pop
mov
fmull
in
ss
jnp
shlb
mov
mov
mov
fmull
add
xchg
pop
xor
and
add
push
test
int
jp
sub
jno
pop
test
loopne
lret
scas
push
inc
push
jb
sbb
stos
ret
or
xchg
pop
push
rcll
jle
clc
lock
dec
in
jno
pop
ljmp
mov
mov
sbb
sub
xor
dec
scas
sti
adc
and
xchg
or
cmpsl
fstpt
in
arpl
loop
fisttpl
mov
inc
adc
ficoml
xor
jns
and
ja
or
shll
dec
dec
push
outsb
orl
mov
ss
das
push
icebp
jns
outsl
sub
inc
mov
iret
sarl
in
push
push
add
dec
cltd
outsb
dec
sahf
outsb
cmp
hlt
jle
lret
into
push
jnp
ret
addr16
jmp
sub
adc
sbb
cmc
mov
out
je
jecxz
xchg
push
rcrb
mov
jmp
out
and
push
add
sub
sbb
mov
mov
movsl
fwait
adc
test
mov
scas
imul
es
pop
pop
scas
mov
mov
xchg
movsl
nop
xchg
push
mov
xchg
fnsave
inc
xchg
ss
xchg
mov
xor
in
stos
scas
sarl
push
dec
cltd
addl
cmp
sti
xchg
jne
xchg
xor
cmpb
add
mov
shl
sub
fsubr
jge
inc
loop
decb
cwtl
adc
jge
jl
jnp
jge
mov
shll
xchg
movsl
jp
cmp
mov
out
clc
aaa
outsb
negb
bound
pop
push
mov
loope
mov
cmpsl
hlt
lahf
mov
xlat
lret
loop
aas
dec
bound
mov
xchg
jne
imul
or
divl
daa
lea
es
dec
icebp
add
int
ret
divb
daa
xchg
adc
clc
inc
enter
pop
cmp
xor
scas
mov
stos
sarb
sbb
pop
pushf
imul
dec
sub
cld
ror
jmp
cltd
aad
cmc
ds
jbe
into
std
cs
or
cmp
dec
inc
pop
xor
pop
add
fstpt
sbb
scas
lods
sub
lret
mov
popa
and
cmp
rol
dec
popf
ret
mov
lahf
mov
push
das
loope
mov
iret
jl
xlat
pop
add
mov
pop
jb
repnz
lahf
in
jbe
sarl
stos
xchg
rcrb
mov
jnp
cmp
dec
cli
and
dec
movl
fnstsw
push
jo
mov
cli
cltd
bound
daa
inc
inc
out
clc
lds
jb
or
aas
mov
leave
jno
and
cmpsb
shrb
imul
fnstenv
cmp
cltd
hlt
dec
std
xor
pop
into
pop
dec
or
imul
fdiv
push
scas
push
jecxz
repnz
cmp
mov
mov
sub
out
adc
xchg
cmp
aaa
cltd
aad
or
je
rcr
jae
daa
test
or
jle
cld
xlat
cmp
jp
int3
push
stos
mov
sbb
adc
add
mov
pop
mov
xor
or
adc
jno
inc
mov
stos
fucomp
addr16
add
cmp
addr16
pop
and
add
or
lock
test
lahf
and
adc
iret
sub
mov
negb
pop
verw
lock
stos
and
mov
int3
shr
or
push
es
and
add
leave
xchg
sub
lea
stos
push
mov
and
pushf
inc
repnz
imul
mov
loopne
shrl
aad
dec
push
repz
imul
cmpsl
xor
movsb
adc
aad
sub
fcomps
lret
shufps
icebp
notb
and
mov
xchg
adc
or
shll
lods
cmpsb
inc
jno
rcrl
and
inc
bound
mov
cmp
adc
lods
ret
aas
xor
mov
mov
loopne
mov
and
pop
scas
cltd
add
shll
mov
lahf
sahf
imul
in
lea
mov
cmpsl
pextrw
push
fstp
imul
ljmp
lcall
mov
xchg
mov
and
and
jl
mov
iret
aaa
xchg
repnz
roll
or
rorl
mov
lret
dec
outsb
mov
mov
mov
push
in
cwtl
mov
xor
cmpsl
inc
ror
sbb
xor
in
xor
sbb
loopne
add
cmp
cli
lock
testb
mov
jmp
rcll
sbb
cmpsl
jae
cmp
adc
mov
xchg
and
and
rorl
stc
cmpsb
push
arpl
gs
icebp
inc
sub
popa
jmp
notb
mov
je
or
cltd
pop
push
cmpsb
jl
push
push
push
or
pop
and
das
int3
xlat
cmp
mov
gs
xor
cld
into
ljmp
ds
cltd
mov
cmpsb
out
js
lcall
or
rdmsr
mov
enter
lahf
sub
orl
fwait
pushf
fs
scas
movsl
jecxz
outsb
xchg
pop
sbbb
mov
pop
mov
popf
inc
sbb
mov
stc
roll
repz
testb
cmpsl
out
lods
iret
ljmp
les
std
dec
loope
lods
add
cmp
in
stos
out
std
ret
int
cmp
stos
fsubrs
mov
push
and
mull
add
xor
mov
lcall
pop
shll
jno
mov
sub
sbb
inc
nopl
fstpt
jmp
pop
es
cmp
rclb
lods
int3
mov
xor
loopne
pop
fstps
fmulp
fstpt
mov
into
jge
movsb
stos
sub
pushf
pop
jp
pop
adc
mov
push
mov
clflush
sarb
pushl
aas
dec
adc
icebp
repz
sbb
pop
xor
pushf
pop
mov
rcrl
cs
ljmp
lret
lahf
in
je
stos
hlt
and
mov
and
mov
xorb
push
dec
daa
push
mov
dec
xchg
cmpsl
fisttps
inc
sub
movsl
xor
sub
sbb
lcall
pop
sub
icebp
loopne
out
or
cmp
jl
mov
pavgb
fstl
dec
xchg
sub
cmpsl
cmp
pop
pop
push
sbb
subl
mov
ja
test
dec
into
sahf
out
cmc
adc
stos
cmp
xchg
mov
adc
fsub
stc
mov
mov
mov
pop
sbb
lea
xor
inc
iret
or
xchg
pusha
jo
and
push
pop
mov
test
cmp
test
adc
pop
cwtl
lds
filds
fists
mov
xchg
popa
add
shlb
stos
xor
mov
aas
cs
jl
imul
test
in
sub
jg
sub
push
test
sub
arpl
xor
hlt
pop
xchg
movsl
sub
jb
and
dec
lcall
mov
sbb
das
push
sbb
mov
pop
add
ficompl
lock
fsubrs
pop
xchg
xor
in
mov
cltd
pop
int3
fnstenv
sub
inc
lea
stos
xor
jecxz
out
adc
mov
and
dec
adc
mov
outsb
aad
test
push
sbbb
lret
push
sbb
mov
lret
cld
jmp
add
sbb
and
push
adcb
pop
negb
cmp
mov
ficoms
dec
dec
xlat
fnstcw
sbb
decb
mov
inc
out
xor
adc
scas
push
or
push
in
into
cmpsb
sti
mov
subb
bound
iret
dec
sahf
shll
aad
dec
xor
cli
cltd
dec
sub
adc
adc
mov
in
pusha
icebp
scas
adc
pop
push
jae
nop
loop
shll
fbstp
mov
adc
repz
loop
or
jg
into
sbb
add
pop
sub
lea
fadd
mov
sbb
shrl
pop
jge
sub
jmp
inc
fildl
or
ret
sahf
fdivrs
jmp
imul
push
push
adc
cmp
sbb
mov
mov
mov
stos
xor
scas
fs
repz
jg
ret
adc
les
mov
fildll
and
jmp
fs
fwait
cmc
or
imul
pop
out
mov
out
hlt
cmp
and
add
fistps
out
xchg
js
jmp
sahf
dec
fdivrl
and
cmp
aaa
fiaddl
sub
and
subb
es
enter
testl
fldl
insl
cs
lods
les
mov
lods
mov
or
cmp
add
pop
dec
sub
je
dec
sbb
mov
lret
push
push
xchg
je
aam
pop
adc
les
fistpl
dec
xor
ret
jp
add
lea
fldt
jno
xor
imul
mov
mov
jnp
aaa
stos
hlt
es
fisubs
cld
mov
sub
jbe
idivb
jae
mov
push
xor
xor
jl
hlt
xor
adc
sbb
dec
xor
mov
dec
sbb
loope
mov
xchg
xchg
popf
scas
push
adc
xchg
out
outsb
sub
les
in
or
sub
ret
repz
push
pop
xchg
sti
ljmp
dec
jmp
xor
pop
push
rorl
push
movb
out
mov
stc
dec
js
dec
and
mov
jmp
add
fdivp
shll
into
jmp
out
mov
imul
arpl
pop
xchg
adc
xchg
adc
out
stos
fstps
adc
xchg
popf
jl
inc
rorb
ret
sbb
pop
dec
fnsave
lret
sti
fdivrl
js
mov
inc
dec
out
add
iret
movsb
sbb
jecxz
pop
mov
lahf
mov
cli
lds
sub
adc
jbe
pop
sub
mov
sub
mov
add
xchg
inc
inc
cmpsl
fs
sbb
jp
sub
mov
sbb
xor
xchg
xor
and
jae
mov
xchg
rclb
sub
pminub
push
adc
mov
inc
into
xor
mov
mov
outsl
xchg
dec
testb
mov
je
je
xor
jnp
cmc
or
pop
les
into
pop
dec
inc
ds
stos
sbb
mov
dec
imul
push
sahf
or
mov
ja
stos
xchg
xor
imul
shlb
mov
cmp
test
jp
mov
dec
pushl
adc
xlat
divb
fisubrl
pushf
cltd
adc
scas
inc
mov
lret
inc
xchg
js
adc
xor
jp
jbe
mov
lcall
push
adc
or
out
adc
cmp
or
fwait
rcll
das
and
in
shrl
imul
fcompl
call
adc
xor
adc
xchg
and
lret
orl
sbb
mov
mov
cs
sub
xor
ds
xchg
imul
std
push
mov
insl
test
pop
dec
pop
mov
shr
jge
add
outsb
insl
mov
xchg
add
cmp
mov
xor
mov
push
in
inc
inc
fld
icebp
inc
mov
iret
dec
repnz
xor
jp
inc
ja
mov
shlb
mov
dec
lret
sub
push
insb
xchg
insb
mov
movsl
mov
loope
icebp
jno
test
or
loope
cmpb
push
dec
shlb
xor
xchg
mov
push
sti
int3
jns
andb
cmc
pusha
dec
fisubrl
xor
cmpl
xor
xor
mov
clc
out
jmp
lret
je
popa
aam
mov
jmp
fistpll
mov
ds
gs
inc
push
scas
sbb
inc
mov
lock
dec
cli
xor
push
popf
faddl
push
lahf
adc
popa
aas
in
fadd
inc
xlat
xchg
repz
ret
fbstp
sbb
cmc
dec
lds
push
inc
out
mov
roll
mov
push
mov
mov
ss
loope
rep
std
mov
insb
aaa
mov
add
dec
pop
enter
xor
leave
scas
pop
sbb
sub
sbb
push
inc
xchg
aaa
sbb
and
add
pusha
and
xchg
add
in
inc
mov
rcll
loopne
sbb
out
xor
dec
sarl
dec
xchg
or
inc
cmc
push
jne
inc
pop
stc
lret
je
mov
mov
dec
or
add
lds
pop
inc
jl
push
icebp
cmc
popf
movsb
enter
negb
push
in
mov
xor
ficoms
or
loop
in
leave
int
dec
xchg
or
dec
fwait
push
add
stos
pop
sbb
adc
fmuls
or
and
insb
out
pop
in
cmp
sub
xor
stos
ret
cmpsb
fs
xchg
inc
cli
mov
into
loop
mov
add
lock
or
mov
inc
or
fs
addr16
fcmovb
loope
inc
mov
lock
leave
push
mov
sahf
fcomps
adc
lgs
in
add
or
push
into
int3
fistpll
or
fisubs
push
ss
fwait
pusha
sbb
das
test
sbb
arpl
mov
dec
mov
out
push
and
adc
rcll
adc
or
and
add
inc
cmp
jns
cmp
insl
mov
int3
int
cltd
decl
push
nop
cs
pop
movsb
and
or
xchg
pop
cwtl
xchg
cmp
imull
movsb
push
sbbb
cli
mov
add
xor
dec
mov
xchg
notb
dec
mov
mov
scas
fdivs
push
addr16
add
stc
fisubl
daa
mov
arpl
rcrl
xor
gs
push
jno
lds
pop
mov
cmp
dec
mov
push
mov
xchg
adc
add
inc
lods
xchg
lcall
cmp
fldcw
mov
setns
jbe
pop
daa
mov
loop
sbb
jge
and
push
dec
inc
inc
pop
pop
cmp
push
sub
mov
push
fstps
cmp
shll
mov
xor
repnz
shll
les
jg,pn
mov
ret
clc
jnp
inc
and
fsubrs
mov
pusha
mov
xor
lock
cltd
stos
lea
xlat
movsb
scas
mov
inc
fucomi
inc
push
cltd
jns
das
into
lahf
jae
and
stos
xor
adc
lret
repz
bnd
dec
cs
jmp
jl
jp
lcall
fimull
xchg
dec
cltd
mov
dec
inc
dec
push
scas
scas
or
ret
sarb
jle
sbb
or
js
xlat
adc
bound
and
adc
outsb
add
in
je
push
xchg
cmp
mov
iret
stc
push
in
mov
mov
dec
mov
xlat
pushf
xchg
cld
jl
std
push
sbb
mov
jle
sub
mov
dec
adc
je
aad
jg
pop
jge
mov
popf
mov
push
pop
mov
mov
imul
push
das
cmp
and
jo
movsb
pop
in
idiv
xor
stc
fcmovb
sub
test
push
jge
sar
bound
mov
cld
mov
or
mov
push
stc
sbbl
cmp
jns
mov
jns
das
push
mov
movb
les
ss
adc
pop
aaa
dec
or
ficomps
pop
push
aam
scas
scas
fnstsw
xor
std
jbe
inc
aad
xchg
lea
popa
and
xchg
incb
mov
cmpsl
lds
pop
pop
enter
mov
mov
dec
cmp
fs
xor
push
pop
ljmp
jmp
or
and
imul
adc
test
xor
test
sbb
jno
outsl
cwtl
fimull
inc
fwait
jge
pop
psraw
adc
cmp
xchg
push
movsl
movsl
hlt
pop
in
xchg
jnp
dec
adcl
int3
push
in
xchg
loopne
sub
lea
or
aaa
stc
mov
mov
daa
sub
sbb
test
sbb
add
push
jns
xor
shlb
xchg
adcb
arpl
sbb
xchg
xorb
pop
cs
mov
fldt
cltd
sbb
je
cmp
imul
add
xor
pop
sbb
lcall
mov
cmp
movsl
cmpsl
and
add
pop
cwtl
lods
mov
mov
daa
dec
push
outsb
sbb
add
push
adc
pop
pushl
mov
aad
push
aaa
sub
repz
pop
mov
mov
dec
jae
sti
cli
mov
inc
lret
mov
pop
movsl
mov
jb
inc
fnsave
rcll
cmp
cwtl
pop
out
shll
sub
lahf
int3
sub
cmp
bound
pop
xor
jle
pop
popf
addr16
or
cmp
pop
adc
xor
ljmp
xchg
inc
dec
mov
xchg
cmp
push
out
mov
fs
inc
fisubs
jb
fimuls
jb
push
outsl
add
and
nop
cmpsb
negb
push
xor
inc
in
pop
out
sbb
add
mov
xchg
enter
testb
cmp
movsl
fs
xor
stos
push
in
repnz
add
flds
xchg
imul
mov
mov
fldcw
jnp
jmp
mov
bound
jo
push
rclb
jg
stc
sub
adc
xor
xlat
lods
cld
push
lods
cmp
rol
pop
mov
mov
push
sbb
ret
push
xchg
ljmp
xchg
mov
js
mov
dec
pop
or
fcomps
add
sub
bound
or
inc
inc
xor
pop
jp
into
sbb
add
hlt
test
fldl
xor
call
inc
scas
jp
jp
add
fsts
shrb
rcrl
scas
mov
stos
inc
xor
lret
pop
sub
in
movsl
mov
cmc
jae
out
cmpsb
xchg
push
lret
add
outsb
test
aas
xchg
xchg
mov
js
fsubr
mov
jne
jp
adc
dec
outsl
es
mov
mov
insl
daa
push
cmp
and
in
push
ja
pop
fwait
adc
rolb
out
pop
shlb
enter
arpl
jb
cmp
jmp
into
or
insl
out
ret
pop
add
js
test
loopne
cmp
mov
je
or
dec
cli
decl
idivl
cld
mov
mov
lcall
clc
dec
jg
jle
repz
mov
inc
cmp
jb
xchg
xchg
inc
push
mov
lds
sbb
adc
dec
and
sahf
nop
cmp
int3
addr16
push
cmp
and
jmp
mov
push
inc
outsb
pushf
or
mov
bound
xchg
sbb
das
js
rclb
add
rcll
insb
or
mov
nop
adc
dec
cmpsl
sbb
cli
pop
in
xchg
cli
shll
loop
pop
mov
dec
mov
or
popa
inc
icebp
div
xor
and
sahf
mov
adc
dec
lock
clc
cmpsl
cmp
inc
cmp
push
test
xor
outsb
xchg
xor
mov
pop
xor
add
leave
pushf
add
cmpsb
adc
icebp
pop
push
js
pop
dec
in
int3
push
dec
mov
repz
xor
sbb
pop
popf
or
hlt
sub
jno
nop
cs
sbb
stc
mov
push
and
movsb
pop
sbb
xchg
xlat
inc
insl
push
cmpsl
and
pop
mov
push
sub
sub
jbe
js
inc
adc
pop
push
cmovp
inc
xchg
mov
dec
aas
pop
leave
les
push
mov
ret
pusha
shrb
enter
fisubs
shll
sub
adc
ret
mov
mov
or
popl
pop
and
in
jb
lret
jge
div
pop
pop
scas
inc
cmc
lds
add
sub
xchg
imul
xor
clc
mov
sahf
lret
in
addl
js
lret
mov
jle
ds
push
add
adc
lahf
stos
xor
jl
mov
fs
xor
jecxz
dec
or
outsb
cwtl
mov
adc
jg
sti
shr
jno
add
push
int3
mov
ljmp
and
and
fsubrl
adc
jmp
jg
loop
aad
sub
aas
dec
xor
fldt
push
inc
dec
jle
out
pop
sub
nop
mov
or
daa
dec
out
mov
lock
mov
inc
test
dec
je
mov
sbb
mov
roll
shlb
inc
ret
pop
pop
and
and
sti
sbb
fwait
aad
inc
pop
mov
loopne
xchg
xor
jmp
aas
gs
mov
sti
or
je
mov
push
dec
add
aam
jne
fs
insb
in
and
loopne
pushl
pop
popf
xor
and
adc
xlat
push
es
mov
cwtl
mov
mov
push
loop
add
fsubl
int3
xchg
push
push
stos
and
bound
mov
push
lahf
push
fs
sub
add
mov
or
pop
imul
push
fs
add
mov
add
lret
aam
ret
insl
inc
mov
das
aaa
and
add
fstps
or
sub
pop
mov
shlb
mov
ja
jne
fs
xor
push
cld
dec
test
pushf
ret
mov
imul
incl
gs
xchg
fildll
cmp
push
flds
ror
shrl
sub
mov
out
in
movb
mov
ds
mov
sub
cld
pop
cmp
ljmp
or
scas
test
mov
fucom
xchg
jl
xor
cwtl
inc
cmp
fiadds
les
les
mov
jo
mov
jmp
pop
das
out
push
gs
cmpsw
adc
push
or
xchg
dec
das
stos
arpl
inc
jbe
push
or
pop
lea
lods
iret
bound
push
push
outsb
mov
cs
fsubs
dec
stos
ds
jg
mov
pop
dec
adc
pop
push
ret
push
dec
cli
dec
fmulp
rorb
aam
rcl
mov
imul
xor
mov
inc
das
je
aad
stos
sub
lods
sbb
addr16
adcl
xlat
mov
pop
mov
pop
pushf
inc
mov
push
pop
das
clc
xor
sub
xchg
xchg
mov
es
add
stos
pop
aam
xchg
dec
xchg
add
add
retw
sub
loope
fmull
sbb
sbb
cwtl
mov
dec
stos
hlt
pop
lds
enter
or
dec
xor
in
lock
dec
add
inc
cmpsb
mov
pop
mov
dec
xchg
dec
loope
jne
push
es
filds
inc
cli
imul
test
and
int3
xchg
cmpsl
repnz
mov
mov
push
xor
jle
push
scas
icebp
push
sbb
mov
push
loopne
stc
wrmsr
inc
cld
add
in
inc
xchg
rcrl
and
daa
mulb
dec
mov
dec
std
or
xchg
pop
and
sub
in
iret
mov
sub
xchg
loopne
push
stos
jge
in
es
mov
shlb
data16
cltd
or
das
ljmp
jg
ret
js
pop
js
aas
cmp
and
add
and
iret
fstpt
push
fisttps
dec
decb
gs
pop
decb
mov
inc
addr16
ds
pop
pop
ljmp
pusha
adc
mov
or
jnp
lods
call
xor
cmp
xchg
mov
lods
mov
cmp
push
jg
push
mov
jp
bnd
cmp
xchg
daa
cmp
sbb
jb
test
lahf
push
mov
cmp
popa
and
pushf
fisubs
mov
and
cmc
or
inc
jle
adc
sti
xor
scas
cwtl
aam
jnp
iret
xchg
lahf
add
mov
pop
fs
mov
dec
mov
imul
in
push
pop
inc
in
push
ficoml
lret
dec
testb
and
fidivrl
ss
lahf
inc
outsb
fnsave
and
cmpsl
or
or
pop
xor
or
out
roll
scas
cmp
in
test
lret
push
push
mov
sbb
jno
push
lret
adc
push
ss
lods
mov
fnstcw
test
mov
fidivl
add
jno
fstl
nop
pop
jnp
and
mov
pop
jl
xchg
dec
fucomip
pop
add
xor
fildll
xlat
xchg
movsb
add
lahf
pop
aad
arpl
rcl
push
sbb
mov
jb
pusha
mov
adc
rorb
inc
add
in
dec
out
loope
mov
dec
add
or
push
movsb
jl
and
das
ss
mov
test
insl
les
or
pop
dec
mov
sbb
mov
lret
popa
push
add
xchg
ljmp
or
iret
loopne
push
add
data16
mov
or
popf
and
sar
xchg
inc
mov
dec
mov
test
scas
test
and
shrl
push
push
cld
in
mov
or
xorb
ds
or
cli
std
mov
mov
aaa
or
scas
add
jne
xor
inc
adc
push
fnstcw
aaa
pop
adc
mov
sub
mov
mov
dec
popa
fwait
cli
cmp
pop
mov
rol
enter
inc
inc
mov
arpl
xchg
leave
dec
popf
ds
dec
into
inc
push
dec
mov
mov
dec
mov
lock
filds
in
cmp
inc
cmpsl
movsl
mov
xor
inc
push
xchg
and
scas
xchg
fstpt
sub
testl
jge
sbbl
sub
pop
icebp
int3
aaa
inc
pop
inc
notb
daa
dec
icebp
mov
cmpsb
decb
pop
imul
adc
lahf
sbb
xor
and
push
cld
or
out
js
lock
adc
adc
aad
test
ss
pushf
bound
leave
xor
inc
nop
aas
out
push
adc
jge
mov
leave
mov
mov
or
push
insl
repnz
sub
addr16
xlat
push
or
loop
jae
movsl
xor
sti
xchg
jecxz
add
inc
inc
loope
dec
into
cld
push
imul
das
sub
out
cmpsl
imul
repnz
jmp
call
shrl
cmpsb
mov
cs
leave
sub
or
sbbl
insl
xor
inc
xor
pop
stos
pop
xor
push
stc
loopne
test
sahf
push
push
shrb
inc
pop
fdivrl
jle
push
xlat
adc
push
scas
pop
fsts
imul
loope
setns
add
or
and
outsb
cmpsl
data16
or
out
in
pop
add
pusha
xsavec
shrl
in
mov
mov
inc
mov
mov
xchg
xor
aad
es
push
push
cld
movsl
movups
pushf
adc
aaa
out
xor
leave
push
test
clc
push
sbb
sbb
adc
xor
xor
and
test
sub
mov
cmpsb
lret
ja
push
repnz
inc
cmpsb
adc
sahf
sub
fnstenv
jmp
lcall
mov
adc
cs
inc
push
sbb
adc
mov
inc
jg
push
and
or
dec
cmc
mov
call
sub
out
dec
mov
mov
pop
pop
dec
cld
cld
push
xor
sbb
mov
jns
add
insl
into
fiaddl
mov
lret
iret
dec
pop
sarb
jecxz
mov
in
outsl
xor
sbb
ds
mov
mov
push
add
lret
push
push
js
mov
push
lods
fwait
insl
or
pop
test
lods
lock
adc
out
daa
scas
sarb
ret
jo
mov
cmp
inc
cli
bound
and
sti
cld
gs
mov
imul
and
insl
mov
fsubrl
fisubrs
imulb
arpl
mov
shll
sbb
jne
ljmp
xchg
jbe
jb
pop
mov
mov
movsb
clc
jbe
xchg
das
lcall
dec
inc
cmp
cwtl
ds
adc
push
adc
xchg
add
sub
sbb
rcr
call
jle
add
sub
sbb
outsb
test
sbb
jbe
in
jle
cmp
out
mov
je
shll
stos
clc
lea
pop
pop
lahf
rclb
push
scas
jp
js
iret
lret
leave
into
pop
lock
inc
aam
dec
mov
mov
mov
mov
lea
mov
add
mov
movw
movw
mov
mov
mov
mov
lea
mov
push
lea
push
push
lea
push
mov
push
call
test
jne
push
push
push
call
mov
push
push
push
mov
push
call
mov
push
call
movl
push
push
call
mov
pop
ret
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
nop
bound
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
arpl
add
add
add
add
xor
add
sub
add
and
add
sbb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
js
add
andb
mov
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sbb
cmp
pusha
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
add
mov
add
int3
add
aam
add
fsubl
in
add
mull
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
adc
add
add
sub
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
push
addl
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
addl
mov
addl
lods
addl
movsb
addl
pushf
addl
xchg
addl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
addl
cld
addl
adc
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
test
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
addb
add
test
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
jmp
jmp
jmp
