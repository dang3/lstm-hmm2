lea
ja
clc
push
imul
pusha
add
pushl
mov
movb
lea
jmp
push
call
pop
push
call
push
ja
mov
sti
repnz
xlat
ljmp
test
push
ja
inc
cwtl
fistps
insb
adc
push
into
dec
into
outsl
fisubs
aad
out
adc
pop
stos
nop
push
jmp
jbe
add
jle
out
push
ret
jbe
dec
jnp
cld
xor
pushf
jmp
push
call
btc
into
xor
setae
lea
pop
movsbw
jl
push
mov
call
cltd
enter
sbb
xchg
xchg
mov
xchg
fcoml
mov
inc
aam
aaa
movsb
data16
xchg
insl
cmpl
mov
cmp
sbb
lds
dec
jnp
inc
jl
mov
std
mov
cmpsb
bnd
loopne
sbb
push
test
loope
arpl
push
shr
mov
xor
inc
cld
push
loopne
int3
pop
clc
popa
cld
imul
sti
jmp
push
loope
bound
sub
sub
xor
sub
cmp
das
xchg
daa
insb
std
ljmp
sub
leave
fs
jae
ret
push
decl
mov
out
mov
dec
jbe
into
in
ficoms
mov
xchg
jge
jp
dec
insl
cld
and
dec
xchg
mov
repnz
out
cs
test
es
ret
bound
push
nop
pop
jne
std
std
cmp
mov
loop
testb
ficoms
pop
ret
add
fimuls
push
movsl
std
iret
rcrl
adc
fwait
cmpsl
push
call
rcrl
pusha
add
mov
pushl
pusha
lea
jmp
lea
pop
sub
out
aam
call
loope
jmp
out
addr16
sbb
sub
xchg
lret
push
xchg
pop
add
cmp
je
test
pop
adc
mov
adc
pop
fdivs
push
cld
sbb
pop
addr16
dec
sti
xorl
ja
dec
js
test
mov
mov
je
dec
sbbl
sub
mov
adc
daa
mov
dec
jp
rorb
push
adc
scas
cli
fildl
jecxz
cmp
xor
and
sub
or
push
and
pop
dec
inc
out
insb
jmp
push
sub
or
adc
hlt
dec
sub
into
add
nop
pop
push
jo
sub
xchg
pusha
xchg
pop
mov
daa
mov
dec
adc
fiaddl
xchg
jbe
mov
mov
adc
lock
cmp
movsl
pushl
and
mov
stos
out
fldt
jb
jle
outsb
xlat
jle
jbe
outsb
xor
ret
test
sub
call
lds
xchg
sbb
jb
inc
jg
jnp
ja
pop
bound
jecxz
testb
fcoml
mov
into
addr16
sbb
or
in
inc
push
dec
rcrb
pop
and
repnz
sbb
cmp
mov
stos
inc
pop
stos
jl
mov
sub
jnp
sbb
mov
xor
ss
xchg
popa
mov
scas
scas
insb
lahf
or
or
adc
std
jnp
xor
jmp
jb
fs
inc
jnp
imull
pop
ljmp
data16
inc
out
jecxz
dec
jns
xchg
pop
out
mov
outsl
pop
aas
stos
xchg
mov
scas
xchg
mov
add
mov
out
pop
cmp
cmp
jmp
push
out
mov
push
inc
inc
out
fstps
jae
mov
xchg
cmp
mov
fwait
push
mov
aaa
cmp
mov
aaa
xor
jle
shll
xor
sub
add
fiadds
out
and
pop
mov
sbb
lods
add
into
add
aad
jg
sbb
imul
in
add
inc
loope
add
add
adc
or
sub
rcl
shl
bswap
bts
lea
sub
test
cmc
sub
stc
push
mov
pushl
popl
jmp
dec
cmp
adc
lds
add
adc
sub
and
cmp
add
push
xchg
adc
aad
out
sbb
or
mov
lret
sahf
pop
cmp
mov
jae
mov
mov
jno
inc
pop
mov
cmp
jmp
mov
push
out
mov
lahf
push
xchg
sbbl
sub
xor
out
cltd
enter
mov
mov
call
stc
call
stc
mov
xchg
inc
pop
dec
in
fdivl
std
jmp
fimuls
xchg
dec
dec
enter
popf
sbb
cmpsb
xor
sbb
pop
lahf
cmc
xor
adc
cld
es
xor
xchg
mov
adc
into
sbb
addr16
mov
mov
test
insb
and
imulb
or
cmp
sbb
jno
xchg
push
xchg
or
test
jae
push
ja
mov
jl
call
mov
aad
jp
notl
or
bound
xor
aad
sbb
mov
or
test
call
inc
shr
inc
adc
add
or
in
sbb
or
or
add
sub
in
shlb
stos
push
push
outsb
sti
pop
ret
push
sbb
adc
enter
stos
mov
pop
sarl
xor
aas
sbbb
xor
call
sub
test
mov
movsbw
setp
movb
setns
push
movw
movzbw
mov
lahf
setns
movsbw
lea
jmp
push
call
mov
jmp
adc
and
or
add
push
call
cwtl
fs
and
xor
inc
mov
xchg
scas
mov
stos
mov
pop
aas
add
cmpsl
ret
insl
ret
adc
xchg
mov
xchg
pop
loopne
fsubrl
pop
cld
gs
rcrb
xor
scas
lea
je
clc
cmp
pushf
call
jmp
setno
sub
bts
cmc
add
add
shrd
and
mov
inc
or
mov
push
pushf
cmp
repnz
push
lea
jne
lahf
movzbw
lahf
lahf
movb
lahf
cwtl
push
mov
movzbw
lea
lea
push
call
icebp
mov
xorl
mov
mov
daa
leave
rcl
lret
add
mov
lahf
mov
mov
and
imul
push
push
loopne
lds
scas
cmp
rcl
sbb
push
xor
js
out
add
sbb
cmpl
aas
inc
xchg
mov
push
or
jo
sahf
int3
jle
sbb
fwait
xor
pop
jp
pop
nop
cmp
cwtl
xor
xor
jne
mov
jnp
jg
movsl
lods
mov
mov
sbb
movl
negb
sub
ljmp
pop
dec
fdivrs
out
je
xor
lahf
test
movsl
jae
cmp
lahf
pop
sbb
ret
mov
add
sub
enter
fdivr
lret
mov
ljmp
movb
test
addl
repz
hlt
jne
jno
jge
push
les
push
lock
adc
adc
add
mov
pop
mov
jo
add
adc
jge
mov
es
jmp
xchg
cmp
mov
shlb
leave
scas
cmp
mov
and
pusha
jp
sub
cmp
fsubrs
jp
inc
addr16
dec
inc
imul
out
jbe
rorb
sub
mov
sub
mov
sub
push
aas
mov
push
aad
inc
notb
ficoml
pop
mov
leave
test
pop
pop
nop
adc
xchg
mov
sahf
or
mov
in
std
dec
aad
leave
push
fnstenv
stos
movb
mov
lea
jne
jg
movb
lahf
pusha
pop
mov
pushf
movsbw
lea
movb
push
jmp
lea
je
jmp
push
call
mov
or
call
mov
and
daa
sbb
sub
adc
in
sbb
jg
pop
lahf
rcrl
hlt
std
cmp
jecxz
aad
jo
xor
fsts
aam
iret
push
sti
pop
jle
outsb
fisttpl
pop
adc
in
cltd
dec
cli
fs
inc
pop
and
inc
push
popf
pop
fcompl
xor
dec
push
call
or
jnp
sbb
or
jg
cwtl
subl
xchg
scas
mov
lcall
add
psrld
mov
cmpsl
xchg
negb
add
lret
in
adcb
mov
cmpb
sbb
sbb
or
inc
mov
stos
addl
jge
stc
insb
cmc
fs
dec
jb
loop
push
call
xor
adc
mov
loope,pn
leave
aam
enter
ror
in
pop
int
mov
inc
mov
or
movsb
ss
or
js
push
repz
cld
or
mov
inc
leave
enter
mov
sbbb
sbb
pop
out
xchg
dec
sub
test
push
mov
sbb
cmpw
jp
mov
lcall
cmp
test
or
adc
push
sahf
or
ret
or
jecxz
xlat
ret
xlat
out
test
fcmovne
insl
jp
ljmp
xchg
jb
pop
andl
cmp
mov
dec
fildll
jmp
jne
sub
stc
xchg
scas
mov
mov
cmp
mov
enter
int3
pop
xor
fsts
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
xor
fwait
into
cmp
xor
push
sub
or
xor
or
aaa
mov
xor
xor
icebp
int3
inc
or
inc
mov
sub
shrb
fldenv
lea
mov
add
add
xor
jns
adcb
pop
inc
inc
push
mov
out
jp,pn
data16
inc
push
popf
pop
ret
addr16
push
mov
push
int3
pop
iret
pop
pushf
cmp
xlat
pop
sti
push
fsubs
cmp
fs
jo
inc
pop
insb
jne
icebp
push
fnstcw
je
mov
ret
xchg
mov
mov
pop
and
popa
rorb
rorb
pop
xor
fnstsw
out
lea
shr
neg
out
not
shl
ror
inc
rol
pop
push
push
inc
fcoms
movsl
sub
mov
mov
out
arpl
push
add
mov
cmp
bswap
lods
in
fsub
add
cli
mov
outsl
mov
lods
pop
sub
push
inc
push
push
or
xor
loop
jae
inc
adc
sub
mov
out
cltd
pushf
sbb
movsl
cltd
sbb
or
xor
add
push
xchg
lods
push
call
xchg
pop
or
and
or
or
call
cmp
jnp
push
fdivrl
sub
in
out
sub
enter
enter
cmp
rcrl
jmp
call
dec
rcl
aas
insb
push
fwait
out
sar
ja
stos
and
push
cmp
test
mov
pop
sbb
lahf
mov
mov
sub
mov
cli
clc
aad
stc
rorb
popa
lock
call
pop
shrb
xor
sub
jl
and
mov
daa
mov
pop
mov
lea
jns
out
neg
dec
fnclex
sti
jp
in
push
push
stos
cmpsb
sbb
ljmp
fucomip
xchg
pop
in
in
push
shr
fsubrp
pusha
icebp
jo
sub
mov
repz
in
adc
test
add
xor
and
sub
addl
adc
stos
call
and
cmpb
call
xchg
pop
mov
jle
xchg
les
lret
sub
cmp
adc
nop
xor
mov
fmuls
sbb
arpl
adc
fistpl
cmp
lea
push
xor
sub
sti
xor
subb
setnp
mov
stc
lds
idivl
add
mov
inc
lcall
popa
lcall
int
push
push
pop
cld
imul
dec
shlb
and
jle
add
icebp
rcr
lock
in
in
clc
in
in
inc
push
jl
int
in
imul
fsubrs
arpl
rorb
jg
sahf
cmp
pop
cmpsb
mov
jne
sub
test
je
add
inc
into
bnd
jmp
jns
mov
xor
sbb
or
dec
insl
mov
std
push
call
push
data16
es
inc
loope
stc
jo
or
inc
inc
dec
push
inc
imul
mov
pop
and
lods
pop
mov
test
and
sbb
jmp
ret
jb
mov
or
mov
adc
push
push
imul
xchg
jl
adc
bound
sbb
mov
push
and
out
inc
clc
cld
pop
insl
lret
xor
cmp
lds
mov
test
sub
sbb
ficoml
gs
jge
fst
arpl
dec
fsub
pop
int
outsb
sti
rcll
xchg
xor
xor
push
ljmp
out
out
out
not
jmp
or
leave
fisttpll
mov
arpl
push
rcrl
push
inc
dec
push
jne
mov
xor
mov
xchg
sub
xor
sub
rcll
in
sub
ds
hlt
enter
mov
mov
cltd
mov
jg
cwtl
and
push
xor
dec
fucom
inc
or
pop
and
aad
shl
sub
lahf
insl
fcompl
dec
enter
pusha
data16
and
and
pop
rcrb
jae
repz
pop
call
xlat
jp
dec
insb
fmull
xor
pop
js
call
in
pop
add
push
aaa
and
std
push
lock
pop
pop
mov
ret
hlt
pop
cwtl
inc
cmp
mov
int3
mov
loopne
jno
push
xchg
mov
mov
popf
add
int3
cmc
int3
fnstsw
cli
pop
mov
ja
xlat
insl
and
frstor
call
sub
leave
xchg
mov
add
mov
stos
fsubl
sub
mov
xchg
cmp
xchg
scas
xchg
daa
lcall
pop
xchg
adc
mov
stc
push
call
out
mov
mov
icebp
xchg
andl
bound
negl
jecxz
repz
dec
jns
out
and
push
in
and
or
push
das
add
cmp
or
or
int
cmp
jp
or
adc
stos
scas
sub
jge
fcomp
test
fldl
dec
aad
js
add
mov
pop
jns
dec
jmp
je
lods
nop
mov
sub
adc
xor
dec
imul
push
call
nop
mov
cli
cmpsb
push
adc
sbb
cmp
and
add
and
lods
aaa
cmc
adc
add
std
popf
hlt
cmp
mov
jnp
movb
pop
mov
cmp
stos
push
cli
fistl
add
test
bound
xor
out
jb
enter
repz
sahf
adc
andl
dec
jnp
push
xchg
in
push
sub
push
mov
scas
cs
ds
mov
lahf
push
mov
dec
push
sti
movsl
aad
jmp
xchg
pop
fs
jns
inc
jbe
mov
pushf
xor
jle
sbb
adc
xor
adc
mov
push
lock
inc
clc
sbb
movsb
lahf
push
cmc
loop
sti
and
adc
dec
call
imul
ds
inc
js
ret
imull
cmp
xchg
xchg
lcall
push
and
or
add
xor
jae
xor
sbb
lret
in
shl
shr
std
shr
dec
jmp
addr16
lods
mov
sbb
push
jmp
ja
outsb
loop
push
mov
push
lret
test
mov
pop
cli
sarb
sbb
ret
lds
cmp
lret
xchg
test
loope
in
pop
cmp
mov
nop
and
xor
sti
sbb
je
insl
or
push
shr
xlat
loop
dec
fcmovb
fcmovnbe
movl
push
mov
sub
xchg
push
shrb
mov
or
scas
sti
daa
dec
inc
sbb
jno
pop
inc
and
sti
lods
mov
cld
inc
jnp
shll
movsb
mov
inc
stos
xchg
jmp
xchg
pop
dec
mov
adc
call
dec
dec
pushf
jb
mov
jbe
push
dec
xlat
pop
ret
xor
mov
out
call
xorl
add
fs
call
sbb
dec
inc
cld
test
mov
orl
out
or
push
nop
fdivrs
lock
or
jbe
ficompl
jns
mov
cmc
aam
pop
bound
lds
mov
xor
dec
cmp
xchg
into
sub
jne
pop
inc
add
mov
push
push
cmpsl
add
pop
cmp
bound
mov
xchg
adc
xlat
jmp
jnp
pop
fisubrs
push
fidivl
jg
outsl
xor
das
push
add
xor
in
jne
jle
adc
out
xlat
iret
xor
dec
std
test
lcall
shrl
push
add
sbb
xchg
add
ror
mov
outsb
or
push
xor
xor
xchg
icebp
pop
sub
jle
popf
add
stos
xchg
cmp
fisttps
inc
insb
int
lock
cmpsl
lcall
mov
mov
pop
mov
xor
test
aad
hlt
call
cmp
add
mov
mov
fisttps
xlat
push
pop
sbb
push
sbb
popf
push
pop
push
mov
inc
cld
add
push
fs
idivb
adc
push
push
sbb
or
int3
sbb
cwtl
cli
adc
sahf
or
imull
or
adc
je
sbb
push
add
mov
mov
in
mov
push
push
ja
jmp
idiv
sbb
push
or
inc
incb
push
push
sbb
fwait
push
or
pop
push
push
or
popf
xlat
pop
popf
pop
stc
xchg
int3
pop
add
dec
add
sti
aad
xchg
adc
adc
sbb
jnp
repz
loop
lcall
mov
psrlw
mov
add
cli
test
adc
sbb
nop
mov
stc
lahf
jbe
hlt
pop
xchg
mov
adc
mov
sbb
mov
mov
pushf
mov
sbb
push
adc
sbb
sahf
cmc
fwait
push
ja
rcrl
push
or
pop
push
jmp
sahf
sbb
clc
xchg
negb
fistl
int3
adc
push
femms
mov
push
aad
adcb
into
xchg
or
sbb
jge
lahf
int3
sbb
sbb
mov
fisttpll
push
xchg
add
push
mov
xchg
fwait
insb
adc
xchg
add
jae
jge
int3
adc
cmc
pop
mov
jbe
sbb
mov
daa
xchg
push
fstl
out
adc
xchg
cld
sbb
ud2
arpl
xchg
pop
test
push
fstpl
pop
mov
popf
or
adc
out
lcall
xchg
xchg
and
push
out
ja
or
or
push
and
add
out
sbb
mov
pop
ficoms
add
xor
xor
cs
fcoms
mov
sub
sbb
std
pop
sbb
inc
insb
or
pop
jl
out
dec
scas
jne
inc
pop
adc
popa
scas
addr16
iret
sbb
or
pop
scas
push
addb
adc
pop
popa
leave
and
sbb
sbb
push
xchg
add
xorb
or
mov
mov
mov
jmp
out
rolb
mov
fst
add
xchg
aas
faddp
popf
mov
sbb
xchg
push
and
adc
add
push
push
daa
ljmp
pop
pop
mov
aas
pop
loopne
inc
inc
mov
cs
dec
pop
dec
aam
sbb
stos
loope
mov
insl
adc
xor
fwait
inc
push
mov
mov
inc
ror
fmul
rcrb
mov
cltd
out
out
sbb
clc
popa
rol
xchg
mov
inc
jle
aad
lahf
fnstsw
movups
jb
adc
sbb
inc
cwtl
pop
fwait
xchg
xchg
jge
add
lahf
lea
sbb
incl
add
addr16
mov
test
fwait
inc
sub
lods
aad
mov
lret
pusha
loopne
rcrl
jno
pop
movsl
cwtl
fwait
rcrl
xchg
loop
pop
adc
ret
and
add
aas
push
inc
popa
dec
add
cltd
into
add
add
xchg
push
add
push
js
dec
sbb
xlat
mov
shll
jno
loop
into
in
mov
jns
sahf
sub
jg
cld
imul
xchg
jl
test
xor
iret
fnstenv
mov
insl
lds
push
jmp
cmpsl
fnstsw
xor
sbb
mov
jbe
add
cltd
mov
outsb
popf
jb
cmp
loope
out
cs
jne
push
jecxz
scas
adc
cmp
dec
inc
adc
ljmp
test
pop
movsl
pusha
leave
cli
ficoml
out
ret
ljmp
inc
sub
cltd
insb
aaa
shrb
adc
pop
sbb
pushf
sub
xchg
xchg
scas
sbb
add
mov
loop
es
sti
push
adc
or
push
pop
pop
sahf
loop
fiadds
push
xchg
add
mov
mov
rcrb
cmc
push
pop
sub
popa
fimuls
fnstsw
or
add
lahf
mov
loop
shl
fwait
ds
ljmp
iret
cld
jno
sbb
xchg
stc
mov
add
adc
pop
fdivr
daa
pop
imul
mov
int
loopne
jg
add
in
popf
out
xchg
or
dec
lahf
sbb
adc
xchg
jnp
test
jmp
push
aaa
into
push
loop
bound
add
xchg
push
stc
pop
int3
fstps
xor
iret
mov
add
pushl
in
cmp
dec
jecxz
loop
push
lret
faddl
add
jg
pop
adc
inc
xlat
mov
insb
loop
fs
lea
sbb
in
inc
sti
adc
inc
movsl
pop
add
cmp
sbb
iret
outsb
fwait
jbe
pop
inc
pop
out
push
fwait
sahf
aad
mov
int3
xchg
mov
iret
mov
sbb
cltd
inc
sub
loopne
sbb
out
popa
and
cmc
clc
outsl
ja
mov
push
cs
lods
mov
sbb
add
xlat
fmuls
pop
inc
pop
divl
cli
daa
pop
iret
cmpsl
mov
jl
cltd
xor
ret
pop
jg
cmpsb
or
pop
vmread
sub
add
cmpsl
cmp
cmpl
aas
leave
adc
cmc
out
pop
aaa
sbb
mov
movsb
popf
loop
in
or
sbb
adc
sbb
sbbl
mov
std
xor
xchg
cmpsl
mov
in
or
inc
testb
shrl
hlt
cmpsl
aaa
fists
mov
and
in
int
adc
lcall
fnstcw
cwtl
mov
pop
sub
ss
mov
lods
jle
lds
xor
scas
loop
xor
pop
icebp
fwait
sahf
sbb
dec
add
fprem
je
jno
in
mov
push
dec
stos
xchg
sbbb
iret
push
mov
sbb
jecxz
cmp
lods
ret
pop
test
ret
sbb
and
outsb
ss
sbb
push
mov
enter
in
mov
sbb
adc
dec
inc
pop
add
loope
aaa
adc
mov
insb
loopne
lds
inc
daa
sub
popa
push
filds
test
paddsw
gs
out
popa
add
xchg
or
dec
adc
pop
popa
icebp
mov
cwtl
jnp
push
imull
sbb
addr16
out
outsb
cs
popa
or
pop
aas
sub
fs
repnz
jp
cmp
rorl
int
add
addr16
mov
cmpsl
jne
fldt
repz
push
and
out
mov
push
arpl
loope
int
mov
sbb
cmp
xchg
fisttpll
or
aad
xor
xchg
jecxz
jmp
test
lods
pop
push
mov
call
ror
addb
mov
sahf
popa
jne
add
out
mov
ds
enter
or
pavgb
cmp
cli
fcmovne
or
mov
sti
sub
pop
mov
sub
pusha
cmc
je
ljmp
mov
cmp
jg
inc
dec
iret
push
outsb
jmp
add
int
jne
mov
iret
sbb
outsb
iret
cmp
cld
mov
mov
mov
movsl
add
add
out
add
dec
add
fdivp
sahf
test
lods
cmp
inc
fcmovnu
adc
jae
lahf
out
adc
movsl
cmp
mov
stos
cmpsb
pop
xchg
mov
icebp
aaa
fistps
popa
adc
adc
push
dec
testl
pop
mov
sub
in
out
sahf
lcall
ja
dec
lods
pminub
rclb
jns
cmp
jnp
ljmp
jne
popf
out
adc
jmp
mov
xchg
adc
pop
das
push
inc
push
sub
add
push
out
and
movsb
retw
mov
mov
testl
jmp
in
cmp
or
out
loopne
adc
or
enter
scas
pop
add
daa
cmp
outsb
div
rcll
cmp
jle
dec
and
js
mov
fisubrl
testb
and
pop
sbb
adc
loopne
mov
out
pop
sbb
mov
and
call
adcb
mov
jmp
in
cmp
lods
mov
cmc
int
push
clc
in
mov
test
xor
mov
out
pop
adc
nop
push
adc
imul
pop
out
stc
add
punpckhdq
pop
mov
xchg
lahf
mov
mov
jmp
add
mov
jg
jno
out
loopne
rcrl
insb
jge
add
jle
mov
mov
adc
movsl
add
loope
mov
lock
into
xor
cltd
mov
loop
je
push
cld
push
sub
sahf
pop
xchg
xor
cld
test
mov
out
setbe
adc
adc
adc
sbb
int
pop
in
or
out
mov
out
add
pushf
xor
sti
movsb
push
jmp
or
jg
lret
mov
leave
hlt
jl
pop
movsl
cmp
incb
iret
jmp
fwait
jmp
stc
mov
stc
mov
xchg
add
scas
mov
add
loopne
sbb
fists
adc
es
xchg
cmpsb
sub
xbegin
pop
pop
outsl
sbb
insb
adc
mov
mov
fdiv
pop
adc
sbb
push
adc
mov
into
shlb
xchg
insl
clc
add
sahf
in
add
popf
add
out
mov
fimull
mov
out
test
loope
aad
dec
mov
add
inc
fucomip
jne
push
sub
pop
dec
sbb
lea
sbb
ds
mov
pop
scas
nop
ja
jns
outsb
aas
or
dec
stos
aam
xchg
pop
xchg
in
sbb
or
adc
xchg
dec
xlat
int
adc
test
cmove
sti
and
adc
push
push
cmpsl
lock
xor
cmpsl
mov
pop
add
lock
test
pusha
data16
je
and
out
lahf
ds
lahf
out
push
cmp
test
mov
add
xlat
cli
jg
lahf
ret
xchg
sub
adc
popa
outsl
call
mov
mov
lock
sbb
sti
lahf
repnz
loopne
add
aas
xchg
js
ljmp
jmp
or
loop
xchg
sub
out
pushf
shll
mov
out
pop
or
push
loop
hlt
test
test
sbb
in
sbb
fs
out
clc
scas
inc
adc
add
call
push
jp
cli
and
addr16
xor
xor
adc
adc
mov
int
sti
jo
pop
ret
cmp
cld
mov
sbb
pusha
xchg
bound
jb
mov
int
push
cmpsl
int
insl
rcrl
popa
or
pop
push
adc
cmp
fidivl
jmp
inc
jle
imul
mov
lahf
or
adc
pop
popa
mov
mov
enter
loop
lea
das
clc
add
push
xchg
adc
loope
scas
faddp
add
push
add
mov
adc
int
adc
fistps
add
jg
pop
sbb
imul
enter
movsl
lds
xor
pop
movsl
push
ficoms
sbb
push
fucomi
mov
adc
aam
fldenv
sbb
icebp
or
int
cmp
or
shlb
sbb
daa
add
adc
adc
loop
pop
mov
xchg
or
mov
add
pop
push
sub
ljmp
sarb
jns
nop
inc
pop
push
cld
push
mov
mov
in
jp
pop
mov
mov
xchg
jo
mov
popa
insl
fucomp
jmp
sahf
lahf
push
gs
jo
jp
jp
cmp
ljmp
data16
cs
lcall
jnp
xchg
aaa
or
out
or
pop
scas
sahf
outsl
jg
mov
outsl
pop
xor
jge
dec
lcall
adc
push
cwtl
adc
cmc
lea
and
in
test
ret
sbb
fs
ljmp
adc
and
scas
outsb
push
inc
pop
lods
pop
jge
add
mov
pop
add
movsl
add
xchg
test
jo
das
sub
outsb
js
mov
lds
out
add
or
in
outsb
out
dec
imul
fs
adc
push
or
aas
add
sbb
call
inc
sub
out
push
cld
pand
adc
cmc
icebp
push
mov
sbb
and
sti
sbb
push
mov
sti
xchg
mov
psubsw
leave
cltd
rcll
mov
xchg
jl
int
or
inc
sbb
outsl
pop
scas
mov
or
lret
pop
loop
pushl
in
faddl
xor
sbb
dec
add
pop
mov
push
lea
jnp
out
adc
fs
in
sarl
pop
or
sub
inc
outsl
aad
push
xchg
aaa
inc
or
sbb
popf
loop
xor
mov
mov
or
imul
cmpsl
adc
add
and
jae
push
lea
jnp
shrl
add
inc
mov
fsubrl
sbb
stc
fwait
add
mov
xchg
jmp
out
or
popa
out
jl
bound
insb
out
push
loop
sbb
pop
out
sbb
adc
clc
add
sub
mov
jle
xchg
and
out
add
inc
test
into
pop
jnp
in
adcl
mov
iret
push
sbb
jp
inc
jge
push
add
sahf
inc
out
cmpsl
ss
or
iret
loope
rcll
inc
ret
cmc
xlat
loop
add
xchg
xchg
inc
std
xchg
mov
jb
add
jne
pop
dec
fsubr
mov
push
sbb
test
dec
sub
andb
push
xchg
decl
inc
jo
jnp
adc
ret
insl
stos
das
mov
jb
sbb
xor
fs
lea
sbb
jbe
std
push
imulb
inc
push
mov
adc
je
ljmp
xchg
nop
mov
adc
pushf
loop
fstpt
mov
or
lahf
adc
push
in
lret
repz
js
fwait
jne
sub
jno
nop
jg
pop
loopne
jp
mov
and
sbb
push
mov
push
aas
fcomps
lahf
mov
push
xchg
incb
jno
and
flds
jecxz
loop
mov
add
test
data16
jae
loop
cld
pop
pop
into
fistpll
scas
or
mov
mov
test
mov
and
flds
inc
and
movsb
loop
or
cltd
jbe
daa
lahf
clc
pop
out
fsubr
arpl
cmp
mov
imulb
das
loope
lods
cmp
fadd
jnp
adc
push
or
lcall
pop
jb
lcallw
out
outsb
stos
adc
loope
cs
out
cmp
outsl
lcall
outsb
sbb
adc
mov
incl
xchg
cltd
mov
movsl
inc
add
jg
lcall
ret
pop
xchg
leave
jnp
int
std
pop
push
mov
sahf
sbb
jno
insl
outsl
shrb
fs
cld
test
lods
mov
addr16
jmp
lahf
push
pusha
repz
add
mov
ja
outsl
cmpb
test
mulb
dec
dec
xchg
mov
or
add
sub
xor
pop
mov
outsb
ja
out
es
fdivp
imul
daa
popa
add
lret
ja
in
out
and
dec
jns
pop
lahf
mov
fwait
out
mov
push
out
inc
and
rcl
scas
adc
int3
or
outsl
adc
sub
pusha
xor
out
daa
call
inc
cmp
inc
repnz
daa
add
imul
loop
xchg
add
hlt
je
push
out
mov
adc
ds
mov
lahf
cmpsl
cmp
xchg
push
mov
ret
xchg
xor
pop
data16
popa
mov
movsl
mov
or
lahf
mov
adc
dec
xorl
rcrl
inc
jnp
pop
mov
adc
loopne
vpaddusb
ds
adc
fwait
adc
push
fwait
repnz
test
or
int
xor
lret
lcall
popa
and
call
pop
add
pop
ds
jp
icebp
out
or
bound
hlt
jnp
clc
fisttpll
hlt
mov
arpl
xor
repnz
xchg
lret
and
xchg
cmp
and
cmpsb
adc
lcall
inc
mov
cmc
ljmp
dec
lock
mov
imul
push
out
xor
cmpsb
lods
aaa
push
pop
insb
jnp
mov
das
rorb
jbe
push
add
sub
pop
lods
mov
jmp
adc
inc
int
mov
add
sbb
jmp
scas
push
cmpsl
gs
sbb
push
repz
push
lds
scas
ss
mov
call
sarl
inc
in
mov
cs
fnstsw
out
cs
int3
add
mov
sbb
inc
pop
dec
js
cmp
mov
ret
cs
out
inc
je
frstor
push
loop
push
outsl
push
sbb
pop
mov
in
je
xor
add
fnstcw
sbb
mov
out
inc
mov
jb
push
movsb
lahf
jnp
out
lret
lods
out
popf
outsl
adc
sub
lods
mov
std
add
add
or
sbb
loope
add
outsl
mov
jge
je
fstps
and
lea
ficoml
mov
xlat
lret
in
dec
pushf
xchg
sub
es
pop
fstpl
ret
fnstenv
test
rcrb
sti
outsb
aaa
push
clc
fsub
inc
bound
push
dec
sbb
adc
add
imul
pop
push
mov
imul
pop
nopl
ds
lret
adc
jnp
xchg
sbb
mov
inc
ss
or
dec
cmp
aas
int
add
loope
dec
inc
mov
aas
pop
adc
scas
andl
jb
xor
stc
xor
mov
lea
gs
sahf
xchg
outsb
fdivs
push
push
aad
adcb
mov
fidivrl
mov
das
aam
out
es
in
push
clc
arpl
addr16
jo
int
push
sbb
pop
stos
inc
outsb
cltd
jmp
dec
fcomi
clc
inc
adc
inc
lea
pmaxub
mov
xchg
enter
lds
cs
mov
lahf
adc
mov
xchg
imul
xor
cmp
pop
mov
inc
inc
adc
sahf
pop
das
cmp
fwait
sbb
push
icebp
in
mov
outsb
in
mov
cmpsb
xchg
add
inc
test
dec
pop
sbb
fsubl
mov
into
int3
movl
add
mov
fidivs
popf
sub
das
lahf
cmpsb
cltd
call
pop
pushf
lret
xchg
mov
push
mov
shrb
xchg
lahf
scas
int
mov
sbb
int
adc
sub
lahf
scas
out
and
jle
cmp
and
in
add
lret
xchg
pop
mov
aad
popf
mov
pop
sbb
adc
adc
shll
cmp
outsl
mov
repnz
cwtl
rorb
cmp
adc
enter
and
enter
jne
aaa
pushf
pushf
sbb
test
lods
xchg
xor
sbb
mov
push
mov
mov
xlat
scas
lods
das
sbb
pop
jae
fstps
mov
sbb
loop
scas
jge
outsl
pop
lcall
add
jge
inc
mov
sbb
adc
xchg
dec
jle
mov
dec
mov
cld
mov
or
sub
lcall
mov
add
sbb
fdivp
std
add
imul
push
sahf
jl
or
lahf
fisubs
mov
jecxz
mov
push
inc
mov
je
jg
mov
out
sbb
cmpsl
push
add
cltd
in
cmpsb
jmp
lret
cld
mov
xchg
jnp
sbb
push
pop
out
aas
dec
add
mov
mov
adc
and
push
add
push
faddl
fbld
fcomps
cs
xchg
out
dec
or
dec
aaa
fwait
jns
out
add
sahf
imul
dec
xchg
xchg
sbb
pusha
xor
shlb
mov
mov
icebp
ds
add
int3
loope
xchg
mov
push
lods
lahf
adc
add
xchg
push
xorps
xor
sbb
sbb
jmp
insb
stc
nop
dec
mov
pushf
pop
sbb
lea
inc
out
mov
adc
cltd
int
mov
pop
cwtl
dec
aad
jnp
sbb
adc
dec
loop
mov
das
iret
add
fs
pop
cs
loop
push
pop
out
and
xor
lret
mov
inc
shl
loop
xchg
or
adc
in
int3
add
mov
pop
test
insl
xchg
sub
aas
sbb
inc
push
mov
std
mov
pop
cltd
sti
xchg
popf
push
pop
fldt
outsb
sbb
cwtl
pop
outsb
xchg
sub
pop
pop
inc
xchg
inc
pop
adc
mov
scas
or
lahf
call
dec
out
out
movsb
in
sbbb
jp
pop
pop
fcompl
lods
pop
xor
out
addr16
pop
shr
cmp
imul
xor
jmp
aas
cmpsb
das
stos
mov
sbb
lret
push
or
mov
pop
lock
cmp
std
ret
out
clc
lahf
data16
dec
sbb
scas
daa
push
mov
fmulp
jb
adc
out
in
sbb
or
cmp
push
loop
ds
test
adc
out
sub
mov
out
das
push
fsts
shll
aam
add
push
push
sub
je
nop
mov
jl
int
fisttps
push
pop
sbb
cld
loope
lahf
add
inc
int
add
jge
or
int
cmp
xchg
pop
mov
adc
setg
mov
sub
incl
notl
adc
aam
lret
pop
mov
sbb
push
mov
das
jle
pop
loop
xor
push
mov
movsb
or
vcvtps2pd
push
cmp
adc
xchg
jl
or
jmp
scas
movhps
pop
mov
jle
stos
cli
inc
pminsw
dec
and
adc
cld
jl
inc
mull
in
push
insl
dec
xchg
lret
imul
jns
subl
add
gs
push
sub
add
add
mulb
in
add
fwait
in
fstl
push
add
mov
xchg
scas
enter
fmull
cmp
in
orl
xchg
pop
jg
testb
and
cmp
xor
push
ret
mov
fstpl
fdivrl
aam
mov
jb
sbb
inc
inc
sub
fiaddl
nop
sub
xor
negl
scas
mov
sub
lahf
jmp
int3
mov
xchg
insl
in
sbb
adc
adc
cli
pop
xlat
dec
inc
arpl
pop
push
or
xor
add
ja
pop
xor
cmp
xor
mov
xor
popa
cs
jmp
sub
mov
xchg
arpl
xchg
pop
fwait
mov
loope
mulb
loop
xor
leave
jo
adc
cmpl
add
shlb
sub
sub
jmp
data16
jle
in
and
loop
and
aad
loop
fcmovb
adc
fnstcw
dec
push
lret
scas
out
cmpsb
int
sbb
outsl
push
rorb
jl
pop
jg
out
ds
movsb
cmp
das
add
and
jnp
and
add
cltd
sbb
push
call
push
push
mov
sti
or
mov
ret
addr16
dec
push
dec
out
jno
sub
ds
dec
std
jle
das
ret
ss
sbb
mov
movsl
add
xor
mov
push
xchg
ss
xchg
xorb
out
add
sti
leave
push
cmp
sbb
std
sbb
adc
mov
cmpb
lcall
cmp
adc
pop
jl
ret
loope
rorl
movsl
sar
mov
push
push
insb
or
imul
out
test
sahf
decb
add
fwait
or
jmp
jmp
xchg
jae
fstpt
sbb
icebp
jle
push
sub
add
jge
test
or
inc
iret
sbb
inc
lret
or
mov
and
mov
pop
lahf
mov
or
adc
sahf
in
sahf
int
jbe
and
or
jecxz
divl
pop
jae
mov
sub
popf
mov
loope
inc
in
out
dec
ljmp
dec
loopne
addr16
mov
xor
push
cld
cmp
add
repz
sahf
outsb
sbb
mov
or
int
cwtl
ja
xchg
and
push
not
stos
mov
mul
xchg
cmc
test
mov
adc
lock
push
adc
in
adc
insl
cltd
xchg
xchg
lcall
xchg
inc
jo
test
dec
add
dec
adc
iret
out
cmp
add
incl
adc
mov
shlb
jo
in
xchg
cmp
daa
adc
lock
movsb
push
lea
ss
mull
sti
cmp
scas
sub
xor
enter
xchg
add
or
aas
int
dec
mov
out
add
cltd
ds
xchg
pop
cmp
or
in
pop
sub
sub
cmp
js
sub
insb
jnp
mov
sbb
out
fwait
adc
sbb
test
sbb
or
sbb
or
aaa
dec
xchg
sbb
adc
aas
pushf
push
mov
sbb
inc
imul
xchg
test
xchg
sub
fdivs
or
adc
les
push
xchg
jecxz
add
scas
out
popf
das
fsubp
outsl
repz
out
stos
sub
adc
sub
sbb
outsl
mov
hlt
mov
dec
cli
adc
add
arpl
jae
mov
xor
dec
not
push
push
lea
lods
adc
dec
fsubp
jbe
xlat
stc
ljmp
fwait
xchg
cmpsb
mov
pop
push
incl
call
repz
sbb
and
repz
sbbl
clc
je
fstl
xchg
les
aas
xlat
mov
sub
mov
jle
mov
adc
scas
dec
mov
rorb
andb
jb
sub
fists
iret
insb
int
rclb
and
sbb
cmp
jo
jmp
repnz
inc
add
stc
adc
xchg
in
xchg
lcall
aaa
adc
cld
or
stos
or
ficoms
fdiv
jg
adc
jnp
test
mov
sbb
fwait
lahf
sub
or
icebp
fcos
in
loopne
add
add
dec
les
out
lcall
xchg
fisttpll
sbb
dec
fwait
int3
push
shr
dec
add
loopne
jg
ljmp
sbb
loop
in
int
aad
pop
sbb
test
outsl
adc
ret
inc
mov
iret
mov
mov
jnp
sar
mov
or
cld
cmpsl
mov
pop
pop
sbb
push
add
imul
ds
add
sti
inc
sbb
dec
or
adc
call
adc
pop
xor
cmpsl
jbe
sub
jmp
or
outsb
mov
in
adc
ret
int3
cli
fwait
cmp
cmc
shl
notl
dec
js
jp
fsubrp
in
loopne
xor
sbb
xor
xor
pop
nop/reserved
push
divl
xchg
or
pop
jmp
dec
xlat
movhps
push
fbstp
add
xchg
jno
in
mov
push
mov
imul
movsl
add
in
jp
je
xchg
int3
repz
loop
mov
leave
stos
jg
in
pop
sub
sbb
push
xchg
pop
cwtl
sbb
insb
push
ss
sub
cld
jmp
fcoms
adc
filds
out
pop
sbb
lea
adc
inc
pop
enter
sub
mov
in
and
cli
or
int
mov
lea
lods
jge
lods
push
sti
and
test
fstp
lahf
hlt
int3
sbbl
outsl
dec
mov
fwait
dec
mov
pop
adc
sti
jg
dec
add
je
jg
call
fidivs
outsl
lret
or
data16
push
cwtl
imull
jp
xor
mov
fcoml
mov
in
sbb
stc
or
movnti
mov
and
jne
data16
inc
fisttps
add
stos
pop
xor
mov
outsb
popf
jmp
adc
lret
scas
adc
test
dec
bound
adc
repnz
dec
adc
enter
xchg
inc
call
push
lret
stos
in
clc
sbb
sahf
mov
mov
pushf
xchg
ds
outsl
dec
xor
clc
cmp
xchg
fcomps
adc
out
subl
aas
mov
les
sub
jmp
cli
jbe
add
pusha
int3
fdivr
sub
add
mov
daa
mov
or
jle
sahf
fnstcw
ffree
mov
push
sub
pop
aas
clc
lock
negb
dec
dec
jmp
mov
sub
repz
push
pop
jl
mov
pop
neg
fwait
aam
imul
sti
vbroadcasti64x2
inc
ds
sub
mov
ret
pop
adc
pop
and
rorl
mov
aad
push
jmp
xchg
int
loop
mov
xchg
stc
test
fmuls
lcall
int
cmp
sub
xor
and
mov
sub
scas
out
pop
dec
jle
mov
dec
outsl
stc
fwait
sbb
mov
fcoml
fldcw
pop
test
mov
rclb
mov
inc
adc
out
jne
sbbl
push
mov
int3
jo
xorb
jae,pt
sub
out
cmpsl
fcmovnu
sub
mov
je
mov
aam
sbb
sahf
scas
xchg
aas
fsubs
jns
xchg
addr16
mov
add
xchg
sub
pop
mov
jle
imul
hlt
inc
negb
addr16
cmp
into
sbb
repz
sbb
adc
or
in
gs
xchg
push
dec
xchg
sub
dec
inc
es
or
cmp
popf
mov
ret
xlat
sbb
push
flds
jno
aad
mov
add
xlat
test
or
fcoml
cmp
int
pop
in
push
addr16
mov
cwtl
mov
sbb
xchg
int
cmp
sbb
adc
mov
fmul
cmpsb
mov
inc
sbb
sbb
ljmp
adc
pop
pop
lret
mov
push
xchg
scas
out
mov
push
pop
fstl
push
mov
mov
adc
int3
jnp
inc
dec
pop
add
pop
push
aaa
xor
orl
xlat
inc
cltd
mull
scas
cwtl
dec
sti
sbb
pushf
jg
imul
sub
mov
cs
repz
jmp
out
add
push
cltd
xchg
das
sub
xor
iret
in
add
loope
mov
jl
push
aas
xadd
outsl
jns
hlt
mov
mov
mov
xlat
pop
cmc
int
inc
loop
lret
pop
jo
outsl
xlat
in
orl
add
fcmovne
jg
loope
leave
mov
push
xchg
fistps
inc
mov
dec
aas
loopne
adc
scas
sbb
mov
scas
pop
jmp
xchg
or
sbb
mov
mov
cmc
push
adc
sub
and
mov
insb
aam
shlb
pop
push
pop
test
dec
push
test
mov
pop
pushl
es
lahf
lcall
inc
jge
jg
dec
mov
ljmp
popa
ss
add
dec
sub
bound
push
movsb
mov
mov
push
add
jl
pop
pop
int
negb
hlt
sub
popf
loop
mov
call
add
or
push
sbb
cmpsl
test
mov
sbb
push
insb
repz
popf
push
std
mov
lahf
xchg
mov
add
adc
aam
scas
in
cmp
dec
mov
cltd
sti
dec
pop
adc
in
aad
mov
sbb
jnp
rcll
mulb
popf
jg
mov
add
mov
fnstenv
or
shl
inc
adc
mov
iret
sahf
int
movl
fwait
leave
lcall
or
test
nop
pop
sbb
sub
or
inc
scas
test
sub
sbb
iret
cli
mov
out
lret
fistps
mov
pop
adc
adc
shll
sbb
mov
aas
into
add
push
jbe
ja
jmp
adc
fucom
fisttpl
insl
or
xchg
sub
dec
repz
xorl
jge
mov
cmp
insl
mov
jns
iret
jl
push
out
mov
jmp
clc
xor
sahf
fwait
ds
xor
mov
adc
sbb
xchg
pop
out
nop
adc
lock
xchg
rorl
in
insl
fwait
sbb
cmp
add
movsb
loop
mov
iret
cld
xchg
loopne
pushf
lds
loop
or
jle
dec
test
adc
adc
jp
fwait
iret
incl
cmc
pop
push
mov
negb
pop
or
jl
lahf
mov
mov
dec
outsb
or
cs
pop
or
pop
jle
cmp
push
loop
mov
rol
lock
ficoms
rclb
les
and
ss
aaa
cmp
or
ds
mov
js
scas
or
xor
jnp
repz
aad
add
lods
xor
ja
push
xor
lods
mov
jg
daa
test
pop
or
fnsave
sub
xor
inc
out
ficompl
popf
scas
daa
xlat
mov
pop
popf
mov
push
in
inc
fdivrs
pusha
cmp
and
rclb
xchg
push
out
icebp
inc
pushf
push
add
mov
aas
leave
fisubl
sbb
pop
test
test
sub
aam
xchg
xchg
xorb
xchg
test
push
cmpl
inc
jnp
fimuls
jmp
sub
xchg
js
pop
sub
sbb
test
mov
cmp
pop
mov
mov
or
and
jbe
xchg
cld
mov
lea
test
movsl
push
add
jae
call
fistpl
arpl
aas
lret
idivb
push
pop
cmp
push
mov
insl
loop
and
pop
fcoml
pop
inc
pop
mov
nop
clc
outsl
jae
aam
inc
cmc
fwait
scas
push
ret
mov
loop
pop
out
xchg
xlat
lods
mov
ja
add
mov
mov
cld
nop
and
mov
arpl
out
mov
icebp
repnz
mov
xchg
jbe
add
mov
ja
add
movl
pop
add
enter
stos
mov
sbb
pop
das
pop
fwait
mov
xchg
int3
xchg
fsubrs
inc
test
mov
cmpsl
push
ja
mov
pop
test
mov
mov
push
outsb
adc
sahf
out
pop
ljmp
ss
scas
sub
adc
bound
mov
push
aaa
loop
aam
mov
jecxz
pop
js
mov
outsb
or
iret
outsl
loope
xchg
sub
sbb
mov
lods
fbld
push
add
stos
loop
cltd
and
sbb
xchg
mov
cmp
jbe
sub
cmp
or
lds
cmp
mov
jmp
jge
ret
shrl
mov
dec
mov
out
push
popa
cmp
hlt
adc
pop
jae
adc
cld
and
jg
xchg
push
push
push
adc
lcall
cmpsb
pop
mov
in
iret
inc
out
outsb
lods
mov
lret
fsubrp
outsb
sbb
ss
lret
loop
adc
fistl
mov
popf
bound
fwait
jp
sbb
and
and
mov
jnp
push
sbb
sub
rcrb
pusha
loop
inc
call
pop
dec
jbe
scas
sub
out
push
jge
fcmovne
cmp
adc
xor
mov
int3
aaa
fwait
cli
lret
pop
in
adc
shll
test
adc
mov
fwait
cmp
loop
dec
push
iret
sub
notrack
mov
sahf
das
push
push
out
ja
jge
sub
lea
adc
popa
mov
pop
adc
fwait
add
pop
out
test
dec
sub
add
rorb
add
out
popf
inc
lods
pop
enter
loop
push
mov
jl
lcall
test
mov
jns
push
loop
sub
add
sbb
or
mov
outsl
mov
decl
loop
ficomps
fstl
sbb
mov
cmp
add
addr16
jmp
mov
adc
xchg
xchg
movsl
call
leave
mov
adc
cmp
lret
and
cmp
push
inc
xlat
pop
aam
or
and
xchg
jae
fcoml
pop
popf
adc
ja
out
cmp
cmc
jne
fucomi
pusha
rclb
lcall
cwtl
jne
loop
jg,pt
sti
xchg
out
xchg
jnp
sub
inc
push
mov
int
sbbb
mov
mov
jl
lret
pop
jp
shl
jnp
cwtl
test
pop
call
test
loop
dec
xchg
cmp
shlb
dec
pop
mov
cltd
loope
call
imul
lods
test
mov
daa
push
int
pop
imul
pop
inc
jmp
or
mov
arpl
insb
movsl
mov
aad
xchg
push
push
or
outsb
push
mov
and
or
jmp
cmp
popf
loopne
fildll
ficoml
or
int
jo
pop
mov
xchg
mov
jge
sub
pop
push
mov
ljmp
aam
sub
rcr
outsl
popf
out
pop
ret
sbb
clc
mov
mov
rorb
cmp
outsb
aaa
dec
xor
movsb
mov
aaa
mov
sbb
outsb
scas
icebp
idivb
je
ss
mov
ret
or
lcall
push
mov
mov
mov
mov
lea
mov
lahf
in
and
sub
sub
add
lcall
jno
loopne
ja
xchg
fldcw
pop
fsubp
xchg
cmc
scas
cwtl
dec
inc
pop
std
out
loopne
lret
loop
and
adc
insl
mov
icebp
stos
jmp
mov
aas
popf
fnstcw
out
mov
sbb
adc
jnp
jno
dec
jmp
adc
push
push
mov
dec
mov
bound
lret
fs
leave
mov
fs
arpl
out
and
adc
push
popf
icebp
xchg
jnp
mov
jnp
xchg
ds
hlt
stos
cmpsl
push
pop
sbb
dec
aam
cwtl
lretw
testl
mov
lds
scas
sbb
xlat
fmul
xor
xchg
sbb
push
jb
add
int
or
loope
lods
test
mov
test
sub
push
arpl
sub
xchg
int3
arpl
fs
cli
mov
loop
and
mov
cmp
fstpl
adc
adc
xchg
test
loope
lahf
pusha
and
or
pop
add
xchg
adc
or
sbb
sti
rcll
add
movsl
adc
add
incb
in
or
mov
es
xchg
sete
aam
and
pop
popl
adc
mov
lds
mov
aas
sub
or
pop
sbb
sbb
sbb
jmp
lea
adc
adc
mov
pop
push
insl
sub
add
cs
mov
jp
xor
ds
mov
mov
adc
jo
add
cltd
outsb
int
jnp
and
jmp
ja
xchg
cmp
mov
clc
and
movsl
pop
add
test
notl
jnp
push
cli
pushf
lahf
push
sbb
sbb
inc
jne
xor
mov
adc
fsts
sub
jne
loopne
mov
dec
mov
mov
ljmp
jno
inc
xchg
mov
adc
adc
or
adc
mov
cmp
push
cmp
repnz
btr
jle
pop
inc
jmp
outsb
sahf
out
inc
or
popf
enter
jo
and
lahf
test
mov
mov
test
out
test
pop
pop
cmp
dec
pop
adc
adc
scas
pop
int
mov
push
imul
hlt
xor
das
push
sub
adc
mov
xor
jp
jg
loop
icebp
xlat
in
sbb
outsl
push
pop
mov
mov
test
adc
fisttps
pop
movl
sbbb
jg
outsl
orl
push
sbb
mov
xchg
loop
push
fstps
leave
adc
enter
push
cli
mov
cwtl
and
cmp
je
inc
mov
scas
es
sbb
test
cmpsl
aas
push
dec
mov
fwait
push
dec
fisttpl
imul
jbe
shrl
cmpsb
arpl
mov
ja
push
ljmp
mov
push
add
xor
jmp
scas
xchg
adc
fisttpll
mov
mov
push
cmp
cmc
cmpsb
stc
lcall
and
and
jecxz
iret
into
int
add
loope
mov
inc
inc
repz
jg
lods
or
pop
sbb
sbb
mov
pop
or
pop
repz
stos
xchg
mov
and
sbb
xor
lods
adc
or
pop
gs
sar
cmp
rorl
les
inc
inc
sub
xor
adc
adc
in
xchg
mov
loop
or
xchg
in
andnps
addl
out
xor
sbb
movsb
jo
mov
dec
sub
mov
add
loop
jg
mov
cmpsl
add
mov
das
ss
fisttps
dec
xorb
cmp
loop
fbstp
repz
jge
cmpsl
out
arpl
iret
push
add
bnd
loope
add
into
adc
imul
mov
or
sub
int
add
and
cmp
or
lcall
cwtl
adc
sbb
lods
cmpsb
pushf
fildl
movsl
push
sbb
mov
int
aas
decl
sbb
mov
mov
cmp
mov
adc
shrl
cmp
pop
mov
lock
fcomp
sbb
inc
ret
popf
push
addl
maskmovq
negl
lods
flds
jmp
int3
outsl
and
hlt
jo
inc
jmp
shlb
mov
in
sbb
xor
in
jns
inc
mov
ds
repnz
push
sbb
sbb
mov
je
xchg
lahf
std
mov
popf
hlt
mov
add
mov
jne
xchg
inc
add
imul
lods
out
loope
je
pop
mov
mov
rorb
sti
or
mov
sub
inc
int
stos
jmp
sub
ret
lahf
cltd
testl
shl
outsb
push
jnp
or
mov
lock
test
rorl
mov
aad
fists
rorb
sbb
pop
mov
xchg
push
inc
mov
jp
mov
mov
lcall
ds
mov
jno
pop
xchg
imul
pop
and
repz
or
aas
mov
int3
inc
test
cwtl
sbb
jns
jne
in
xchg
sbb
test
or
jmp
popl
or
fistps
pop
xchg
push
push
sbb
add
xchg
adc
or
fsubrl
sub
add
push
mov
mov
cmc
add
sub
xchg
mov
ficompl
pushf
push
fcoml
xor
clc
inc
xchg
cmpsl
cld
adcb
addr16
cs
insl
lods
adc
adc
fbstp
xchg
inc
adc
popf
mov
icebp
adcl
push
sub
scas
pushf
add
adc
push
loop
jno
mov
lea
xorb
data16
mov
test
xor
fildll
aad
xchg
lcall
insb
popf
je
adc
lret
pop
into
ret
add
pop
xlat
stos
add
add
stos
aaa
es
adc
loop
mov
leave
inc
or
ds
or
xchg
shll
out
add
in
jb
jge
and
sbb
out
inc
in
mov
push
pop
dec
nop
sbb
lret
pushf
shl
add
pop
mov
repnz
pop
repnz
push
sub
mov
push
xchg
jae
or
and
xor
mov
jmp
pushf
dec
ljmp
and
jno
push
andl
loop
mov
ljmp
push
out
cmovns
lods
sbb
sbb
mov
mov
push
jmp
jnp
inc
cmp
in
pop
add
mov
mov
mov
push
out
sbb
or
sbb
femms
sbb
iret
sub
fneni(8087
fstl
fwait
pop
loop
mov
cmp
subb
push
push
sub
fstpt
rcrl
idivl
sbb
test
lcall
cmp
les
and
cmpsb
aad
push
mov
idivl
push
frstor
call
adc
cmp
xor
jg
add
or
sbb
imul
or
insl
push
and
cli
movl
fstpl
add
pop
test
ljmp
jne
insb
imul
inc
loop
mov
mov
mov
negb
orb
jns
les
sar
add
mov
inc
add
fs
test
out
mov
adcl
pusha
push
dec
ss
inc
inc
jno
mov
mov
xchg
mov
test
ss
dec
push
add
push
nop
mul
mov
xchg
hlt
lahf
fisttpll
shr
mov
add
jp
sbb
pop
sub
adc
sub
lahf
loop
aad
pop
mov
pop
pop
sub
mov
or
sbb
ret
pop
loope
mov
adc
push
push
mov
add
movsl
sbb
xchg
fdivrl
ss
adc
into
ljmp
outsl
sub
mov
jbe
push
scas
sbb
inc
ss
popf
or
sub
loop
cmp
clc
mov
mov
outsb
rcrl
pop
ss
jge
sub
push
aam
mov
mov
push
xchg
loop
or
cltd
mov
fdivs
adc
pop
ljmp
xor
aaa
xchg
jecxz
dec
in
and
mov
stos
dec
repnz
into
insl
mov
mov
add
fsts
cmp
push
jnp
add
outsb
dec
dec
int
push
sti
adc
jmp
iret
mov
sub
cmp
dec
fsubrs
icebp
cmpsb
leave
in
mov
leave
loop
gs
hlt
aas
fldt
add
cmpsb
test
jne
insl
fisttpll
roll
in
data16
sub
rolb
mov
ss
jg
add
pop
shld
jle
jl
sub
inc
dec
fists
lcall
push
pop
pop
sbb
sbb
mov
incb
mov
in
subb
lret
dec
aam
xlat
add
ds
js
outsl
sbb
cmp
sub
xchg
loope
jbe
push
jno
adc
std
jecxz
pop
test
pop
addr16
lods
repz
ljmp
adc
loope
test
push
lahf
out
mov
lahf
fsubrl
fldenv
shrb
jmp
imul
ljmp
in
aad
aad
inc
adc
mov
test
mov
jns
add
cltd
scas
sbb
sub
adc
add
filds
insb
cmpsb
outsb
sub
mov
adc
adc
add
in
or
sub
cld
push
xchg
bnd
notb
fildll
mov
sarl
add
ret
push
adc
jge
vphadduwd
fisttps
xchg
fwait
xchg
imull
ret
inc
jge
or
iret
fs
push
mov
setp
xchg
mov
insb
push
xor
mov
cmp
sbb
lds
iret
loope
leave
in
xchg
ret
cmp
aas
mov
dec
xchg
sahf
in
add
outsb
jne
int3
sbb
xor
hlt
call
in
and
cmp
pop
sub
xchg
ljmp
jnp
push
out
add
nop
lods
sub
ljmp
inc
in
jge
rcr
aam
jge
lea
out
insb
pop
mov
push
xchg
shll
adc
dec
sbb
jl
repnz
ljmp
insb
jae
dec
push
arpl
in
add
rcll
jbe
push
mov
jl
adc
mov
in
mov
dec
and
xor
repz
sbb
fadds
cmp
jno
add
inc
in
jmp
fsubp
lcall
adc
mov
pop
push
push
jge
incl
bswap
cltd
enter
adc
lret
push
aam
sti
xchg
aaa
xchg
sbb
in
int
fsubrs
bound
pop
es
stos
es
out
lods
icebp
sub
scas
call
adc
xchg
sub
minps
jge
repz
xor
dec
xchg
cmp
loop
icebp
sub
mov
mov
test
shl
push
push
pop
ds
fxch
addb
push
add
push
ds
arpl
imul
cmp
lods
sub
jmp
sbb
inc
cmp
lcall
fbstp
outsb
sub
jp
popa
sbb
stos
inc
sbb
xor
scas
movb
jg
push
call
pop
ret
cmp
loop
push
xchg
push
push
inc
adc
adc
in
mov
int
rorl
ja
mov
xchg
xchg
or
mov
mov
sub
in
pushf
xchg
fnstenv
jo
insb
jge
insl
fstps
je
sub
jb
xchg
cli
lods
add
mov
push
lahf
adc
fisttpll
js
cmp
lcall
sbb
flds
movsb
mov
mov
pop
rcll
fnstcw
popf
pop
push
push
dec
push
sub
sub
pop
test
ja
insb
retw
lea
imul
dec
loop
iret
mov
mov
sub
in
fucom
sbb
jmp
movsb
xor
mov
aam
sbb
test
es
je
out
popa
jmp
dec
test
ret
rorl
movl
mov
adc
lahf
xor
add
lock
orb
hlt
xor
cwtl
outsb
in
int
dec
fcmovnb
mov
adc
aas
cmp
adc
push
mov
test
jp
adc
scas
jns
pop
neg
cmc
enter
or
mov
sub
sbb
cmpsb
sbb
jmpw
aam
jg
rorl
add
out
jl
outsb
add
mov
cmp
lock
das
loop
in
decb
jnp
inc
sarb
pop
mov
enter
or
pop
les
and
in
lock
cmp
popa
mov
fsts
xchg
mov
icebp
rorb
fwait
jns
add
cmp
jns
adc
arpl
cmp
mov
xlat
sub
pop
vmread
imul
push
imul
adc
fwait
mov
add
jno
mov
loope
fistl
outsb
out
movsl
jnp
data16
popl
dec
jne
add
mov
push
xor
mov
push
aaa
pop
shlb
push
arpl
test
rclb
mov
add
sbb
sbb
ffreep
sub
sahf
pop
loop
ret
xor
or
xor
in
fucomip
xchg
sbb
mov
adc
jmp
dec
xor
mov
insb
dec
test
add
adc
mov
mov
bound
and
sbb
and
xor
ds
xchg
mov
dec
in
enter
lret
xor
mov
bound
inc
jo
cltd
inc
lds
scas
stos
fcmovu
xchg
imul
loop
hlt
mov
push
xchg
in
mov
pop
sub
or
push
orl
pop
mov
or
push
xor
mov
insb
mov
fnstenv
jp
and
mov
add
inc
mov
push
sub
leave
cmc
stos
es
dec
lahf
pushf
aad
movsb
test
xor
jp
int
sub
adc
xchg
sbb
dec
sbb
mov
adc
cmp
inc
imul
lea
cmp
movsb
loop
addb
iret
xor
jmp
jecxz
sbb
cs
iret
aad
sbb
das
add
pop
call
fdivrs
stos
mov
fists
daa
pop
xchg
inc
sbb
adc
xlat
xchg
sub
adc
gs
push
lcall
xchg
subb
add
dec
out
dec
stos
rcr
jnp
out
jne
andl
ljmp
cwtl
mov
dec
mov
and
jle
mov
push
xchg
mov
jecxz
push
add
aaa
jno
fsubrs
idiv
int3
ss
scas
dec
fyl2xp1
popa
add
neg
dec
test
fidivs
cmp
dec
aad
sub
data16
cmp
adc
cs
dec
js
loop
sbb
aas
loopne
xor
or
cwtl
out
lret
ds
pop
xor
sbb
test
and
sahf
sbb
sbb
push
xchg
cmp
add
push
adc
fwait
adc
daa
stos
push
imul
pop
iret
adc
mov
mov
pop
lahf
enter
std
pop
dec
sub
xchg
add
out
rol
adcl
cmpl
push
or
insb
pop
mov
xlat
inc
push
dec
clc
pop
sbb
dec
outsb
imul
lcall
ljmp
dec
xor
out
adc
mov
mov
scas
lods
sbb
out
jp
xor
jg
fisubl
out
fisttpll
scas
arpl
cli
lcall
mov
mov
mov
add
lods
loopne
sbb
dec
test
or
ds
test
daa
dec
mov
enter
xchg
cmp
adc
lret
loop
mov
mov
jg
mov
add
adc
cmp
push
pop
js
mov
and
push
in
cmp
mov
out
xlat
cmp
xorb
xchg
add
adc
mov
loop
mov
lret
dec
sbb
test
pop
iret
jo
or
inc
or
shl
mov
or
insl
or
sub
pop
jnp
adc
jg
out
cmc
outsl
xchg
js
xor
insl
sub
sub
aam
cmp
mov
int
call
push
scas
movsl
popf
lret
rorl
pop
test
scas
mov
enter
adcl
lret
and
mov
add
jne
repnz
dec
ss
pop
cmpsl
push
pop
lds
cwtl
ljmp
shll
in
or
loop
sahf
xchg
and
iret
adc
fistpll
push
icebp
mov
in
mov
enter
lods
or
sbb
pop
pop
and
subb
pop
enter
pop
xor
into
xor
inc
pop
push
ljmp
fbld
pusha
call
imull
popf
decb
imul
pop
mov
cmp
lds
sti
loop
pop
stc
pop
pusha
pop
or
xchg
lea
int
stos
cmp
out
ja
xor
loope
xchg
subl
push
outsl
pushf
dec
arpl
jge
cmpsl
jp
push
mov
pop
push
lods
or
sbb
outsb
ljmp
jnp
sub
scas
pop
mov
or
loop
fsts
adc
es
call
insb
cli
cmp
aam
ffreep
push
add
jo
xlat
sti
pop
dec
or
loop
mov
fld
jnp
xchg
lea
in
pop
jnp
xchg
mov
lds
into
popf
adc
add
enter
or
lock
push
sub
pop
mov
xor
ret
outsb
lahf
in
adc
xor
loop
outsl
push
push
or
sub
xchg
into
jg
jecxz
sahf
xchg
xchg
fs
jbe
mov
sbb
int
cs
lods
lret
xchg
mov
xchg
int
mov
xchg
jg
stos
arpl
push
sub
lods
adc
ljmp
gs
mov
mov
int
push
hlt
out
outsb
lods
add
add
ss
dec
or
outsb
call
popf
sub
into
sahf
es
arpl
pop
jmp
loope
lahf
into
imul
sti
mov
sysret
fistps
ss
xchg
push
lahf
adc
mov
pop
fbld
adc
pop
add
push
ja
iret
and
sub
pop
add
fldl
dec
push
pusha
xchg
mov
decb
fwait
inc
sub
jecxz
adc
xchg
notl
fistpl
sub
dec
adcb
adc
call
fidivs
sub
ffreep
sub
in
mov
jbe
sbbl
cmp
fmull
inc
test
add
out
int
fbstp
sub
add
or
int
fistpll
adc
add
adc
pushf
movsl
jge
mov
pop
pop
cld
xchg
sbb
mov
insb
or
mov
mul
mov
add
rorb
mov
lods
push
add
adc
xor
inc
or
xchg
imul
mov
xlat
or
mov
mov
js
mov
cld
imul
insl
add
mov
mov
popf
mov
clc
or
sti
adc
mov
std
push
inc
mov
pop
mull
add
or
mov
mov
fnstenv
xor
cli
ret
xor
test
inc
fwait
ret
test
in
jnp
out
imul
xchg
cmc
arpl
cld
bound
sub
lahf
mov
mov
cs
cmpsb
sbb
sub
iret
push
loop
cltd
lahf
dec
adc
inc
pop
cltd
clc
stos
fst
or
pop
adc
int
mov
repz
sahf
insb
addr16
dec
adc
pushl
fdivr
cltd
sub
push
aaa
inc
lahf
push
in
xor
cmp
outsb
into
xlat
push
rolb
call
popa
mov
rcll
cmp
std
ret
jp
es
cli
xor
xlat
lock
jae
xor
xchg
sbb
sbb
mov
add
cmc
dec
or
sub
xchg
adc
stos
cmp
mov
sbb
stos
lock
movsl
bound
out
add
sub
or
sbb
mov
pop
lcall
mov
push
adc
jnp
insl
int
push
fs
adc
loope
push
jo
aaa
frstor
sahf
sub
adc
and
adc
insl
fisttps
cld
cli
stos
push
pop
adc
sahf
push
push
jns
dec
adc
dec
push
ss
mov
xchg
inc
shl
jbe
add
lret
lahf
push
cmc
scas
out
push
jg
test
cmp
loop
xchg
lahf
rcr
xchg
imul
cld
dec
jne
iret
xchg
jnp
pop
jg
repz
pop
mov
lea
cmp
push
cmp
xchg
lret
fcompl
call
pop
fisttps
pop
cmp
or
xor
shrl
cmp
in
sub
dec
push
fstl
out
mov
cld
fistps
sub
dec
jne
test
sub
lea
add
xchg
sahf
dec
div
dec
fsubrs
or
inc
negb
xchg
jb
adc
mov
cmp
sbb
int
nop
inc
cmp
cwtl
sbb
adc
out
jo
insl
add
pop
outsb
outsl
adc
fisubrs
jp
outsb
mov
add
lret
jge
int3
adc
ds
fwait
mov
add
sbb
or
pop
add
inc
fs
sbb
inc
stos
sub
test
cmp
mov
or
std
imul
xchg
mov
outsw
push
push
lcall
adc
in
push
ret
and
outsl
jp
mov
xchg
popf
pop
xchg
cmp
stos
or
add
adc
adc
mov
lret
inc
movsb
test
dec
sbb
rcll
cwtl
sti
es
iret
dec
repz
add
adc
pop
icebp
inc
insb
push
dec
cwtl
mov
lahf
mov
in
add
out
fildl
clc
incb
jge
dec
imul
sbb
aas
pop
cmc
xor
popf
push
fildl
jns
push
pop
pop
adc
lahf
push
xchg
push
leave
data16
adc
add
or
lods
mov
cmp
in
push
push
cli
into
jp
adc
sbb
dec
add
pop
mov
cwtl
fnstsw
xchg
ds
push
mov
or
mov
xchg
pop
loop
pop
mov
lods
testl
loopne
push
pop
lock
ds
pop
sub
enter
notl
or
mov
sbb
pop
adc
mov
addr16
imul
push
mov
cmc
notb
ret
divb
fistpll
mov
mov
inc
lea
iret
int3
sbb
pop
jmp
lret
out
call
jb
jge
cmc
inc
push
xor
push
outsb
test
popf
cmpsl
mov
jmp
cmp
pop
push
pop
icebp
jl
adc
movsl
inc
stc
subb
adc
pop
push
sbb
stos
jecxz
add
sbb
js
adc
leave
out
jno
lret
and
jns
sub
and
pop
dec
xchg
mov
mov
jne
push
mov
mov
loop
aad
es
mov
dec
stos
pop
loop
lcall
data16
fistpll
ret
stos
push
inc
add
mov
push
xor
in
dec
pop
aam
sub
insb
mov
add
cltd
sahf
lret
and
insl
movsb
fidivrl
or
sbb
mov
add
add
cmp
sub
add
jle
iret
adc
xlat
roll
test
rcrl
in
jl
pop
adc
cmp
push
mov
in
jnp
movl
stc
sbb
add
adc
in
or
jmp
push
or
stos
movsb
mov
mov
ljmp
pop
outsb
sub
testb
clc
icebp
xchg
in
mov
mov
shlb
adc
adc
xchg
jnp
cmp
lcall
scas
mov
ljmp
shlb
xor
ljmp
jnp
loopne
cmc
push
fs
cmp
mov
mov
call
add
sahf
add
aaa
enter
pushf
addr16
mov
push
loop
data16
or
dec
sbb
mov
ss
pop
imul
mov
mov
loope
sbb
int3
sbbb
iret
shrl
scas
movsl
lods
sub
or
dec
add
adc
push
fimuls
cmp
jle
dec
push
adc
push
adc
jbe
sub
imul
in
inc
adc
int3
into
inc
mov
cmc
mov
cmp
fs
popf
ret
push
in
fnstcw
xor
stc
add
lods
xchg
icebp
aam
ret
add
push
sbb
mov
leave
popf
ret
popa
lods
aaa
pushf
in
and
xchg
fwait
out
fidivrs
cwtl
inc
xor
xor
fidivrl
mov
xchg
jp
mov
fwait
fwait
imul
fstpt
mov
ret
inc
add
and
scas
mov
push
in
fadds
mov
xor
sbb
jl
jae
push
lods
jmp
loop
test
iret
int
rclb
cmp
or
mov
add
xlat
loope
aas
pop
adc
inc
in
or
mov
sbb
adc
xchg
fwait
sbb
jmp
jns
mov
cmp
daa
xchg
imul
xor
fwait
pop
hlt
int
add
fwait
lods
cmp
cmp
arpl
int
sar
adc
mov
repnz
jb
fistpll
scas
jns
addr16
aam
sub
push
sbb
loop
test
outsl
xor
jbe
add
pop
jbe
or
sbb
cmpsb
pop
sbb
loop
xor
cmc
xor
scas
rclb
push
jmp
adc
lea
xchg
hlt
call
fst
pop
cmpb
jl
jg
repz
inc
pop
adc
hlt
les
mov
imul
icebp
movsl
dec
mov
lahf
mov
in
jge
add
out
scas
decl
dec
and
xchg
mov
mov
mov
adc
dec
fadds
add
xchg
popa
mov
mov
loope
js
adc
sub
insb
xchg
push
mov
lret
mov
out
mov
arpl
adc
ss
lea
in
fidivrl
out
je
pusha
add
add
movsb
sbb
mov
movsl
jns
movsb
adc
stos
and
push
mov
insl
mov
xor
lock
mov
shlb
jmp
insl
fidivrl
and
cmp
xor
popa
mov
push
fdivrl
xor
jecxz
out
subb
cmp
sti
out
sbb
fcomp
mov
fistps
pop
loop
dec
pop
mov
repz
int
jo
push
add
jne
insl
add
sbb
or
and
cmc
pop
mull
pushl
outsb
int
insl
cmp
push
xchg
mov
sahf
loop
lea
aad
mov
sbb
push
lds
call
fwait
dec
les
rcrl
rclb
adc
jbe
mov
pusha
xchg
mov
jle
xchg
sbb
jnp
out
ret
mov
jno
mov
loope
mov
push
and
int3
sbb
in
addr16
fprem1
dec
outsb
sub
lods
mov
outsl
push
add
jl
sti
shr
aas
jne
cmp
lahf
mov
xchg
inc
adc
into
jbe
int3
inc
add
xchg
push
jg
clc
mov
xchg
xchg
or
jno
cmp
adc
mov
roll
mov
mov
or
cmp
sbb
std
scas
fmuls
xchg
inc
add
outsl
mov
dec
lahf
adc
push
daa
sub
inc
pop
xchg
sahf
add
insb
mov
sbb
push
hlt
ss
daa
add
xchg
push
inc
dec
fstp
nop
push
stos
jae
mov
sub
rcrb
pushf
xchg
sub
dec
loop
sahf
jg
mov
mov
mov
repz
push
movsl
orl
mov
pop
push
mov
pop
push
out
mov
call
sbb
sub
mov
pop
push
iret
push
pop
mov
dec
adc
adc
push
mov
pusha
test
mov
jne
ret
stc
mov
cmovo
push
xor
pop
loope
in
push
ljmp
add
ljmp
xchg
lahf
adc
dec
rcrl
inc
outsb
cltd
imul
rorl
add
clc
xor
mov
adcl
add
inc
ds
sbb
jmp
mov
pop
mov
xor
rclb
dec
mov
repnz
rcrb
dec
mull
adc
loop
ss
adc
lahf
rol
incl
sub
ds
addr16
mov
mov
sahf
mov
or
aam
push
cmp
test
ret
add
lcall
dec
add
inc
dec
out
dec
sub
lods
lcall
jmp
sbb
lods
outsl
stc
sbb
sbb
fldl
dec
in
sub
add
cmp
imul
jg
cmpsb
mov
mov
das
pop
movsl
fwait
sub
adc
sbb
out
andnps
pop
xor
testl
jecxz
int
das
pop
jnp
lods
xchg
adc
push
xchg
fldcw
dec
cwtl
push
pop
fisttpl
lret
addr16
push
inc
fmulp
movsl
insl
xchg
or
or
fsubrs
push
in
xor
lret
xchg
push
adcb
or
pop
shlb
mov
insl
xlat
sub
scas
add
mov
cmp
shll
mov
or
rcr
push
mov
fistl
fstps
test
in
fisttps
xor
pop
xorb
clc
push
cld
lea
sub
push
lods
inc
mov
xor
dec
jecxz
mulb
test
sbb
jg
lea
ror
fildll
aad
push
lods
test
leave
imul
enter
pop
in
mov
loope
je
sbb
ds
enter
rclb
fsts
jl
xchg
aam
aam
icebp
imul
push
mov
imul
pushl
setnp
xchg
jmp
cmp
pop
mov
cmp
inc
jmp
test
jp
xchg
cmpsl
xchg
subb
cli
clc
cmpsb
out
notb
loopne
mov
xchg
stos
aam
nopl
pop
mov
sub
inc
ds
ret
lret
lahf
imul
inc
movsl
out
loopne
lret
jmp
cltd
cwtl
adc
add
pop
loope
or
jne
ret
fsubrs
push
rorl
mov
mov
adc
xchg
cld
loop
push
mov
dec
into
insl
sti
ret
test
jecxz
iret
jno
pop
shlb
mov
aam
ret
jg
arpl
and
fisttps
xchg
lahf
add
stos
mov
cmp
lcall
cmp
push
push
mov
pop
stc
xor
or
xchg
mov
xchg
lahf
out
ss
push
dec
push
call
cmp
xchg
dec
mov
push
mov
loope
aaa
fs
jnp
dec
into
leave
xchg
incb
xchg
push
repnz
std
lahf
xor
mov
aas
outsl
add
sbb
push
lods
jge
addr16
or
mov
jp
cmc
fcom
mov
idiv
lahf
push
scas
je
popa
negb
rcll
pop
dec
mov
push
notl
fldl
stc
inc
scas
loop
jl
lds
lea
adc
ss
sbb
cmpsb
fisttpl
ljmp
push
push
adc
mov
cmp
stos
xor
loop
mov
sbb
jne
fstps
int
stos
mov
cmp
call
sub
push
aad
mov
adc
mov
loop
and
inc
test
insl
out
add
std
mov
ljmp
popf
insl
js
test
dec
fwait
jno
sub
lret
pusha
xor
aas
jne
add
mov
out
pop
call
jnp
push
lret
sub
lcall
cwtl
sbb
pop
mov
test
insl
xchg
adc
pop
rclb
loopne
sub
mov
or
sub
imul
cs
addb
imul
cli
adc
adc
jo
adc
push
inc
mov
mov
mov
pause
cmc
cmp
enter
shrb
fisttps
xor
xlat
std
inc
dec
pop
fildll
ror
push
push
pop
lret
inc
aad
mov
pop
loop
adc
sbb
fisttps
ds
xorl
push
adc
jg
push
popf
push
cmp
cli
pop
fildll
jmp
in
xor
mov
xchg
add
sbb
out
jmp
mov
sub
orl
in
test
pop
push
jge
lahf
cwtl
int3
add
in
insb
lea
loop
dec
decl
push
aaa
sub
cmp
lahf
movsl
inc
fldenv
nop
setnp
push
cmp
jmp
mov
loop
incl
clc
rorb
inc
stos
mov
orl
enter
lds
popa
loopne
cmp
ret
jg
fiadds
sub
dec
mov
mov
rcr
or
mov
pop
mov
sbb
lock
popa
mov
mov
lahf
mov
add
mov
adc
adc
xchg
fnstsw
inc
scas
mov
mov
jo
add
jl
lahf
es
inc
xor
cltd
push
into
in
sti
pop
adc
mov
lahf
mov
lods
test
push
push
punpcklwd
insl
adc
insb
jg
adc
iret
push
adc
call
jns
and
or
icebp
ja
enter
or
jge
int
divb
inc
jno
unpcklps
and
mov
add
repnz
mov
sahf
pop
add
or
aaa
xchg
cmpsl
fwait
mov
aad
mov
push
mov
xor
js
loop
add
pop
adc
push
push
aad
inc
mov
mov
rcl
jg
xor
fimull
sbb
inc
mov
shl
xchg
cmpsl
adc
loop
jbe
aaa
aas
mov
lcall
jae
in
in
ret
cmpsb
push
push
in
xor
mov
fnstcw
xchg
icebp
mov
negl
xor
cmp
sub
mov
or
out
popf
dec
lret
or
jbe
insl
pop
mov
xorb
push
leave
lahf
test
jg
xchg
sbb
nop
mov
test
pop
mov
jecxz
aam
and
clc
sbb
lahf
popf
fimuls
in
push
fstpt
xchg
xchg
psllq
pop
fidivl
lcall
adcb
rol
mov
mov
fimull
adc
dec
testb
or
pop
test
cltd
mov
lahf
ds
mov
push
pop
ljmp
pop
insb
lock
adc
add
dec
in
jecxz
sub
insb
not
sub
scas
lods
inc
je
out
outsb
inc
pop
jnp
sbb
xchg
sub
rcrl
sbb
fisttpll
jnp,pt
dec
fdecstp
lahf
xchg
in
cmc
jae
jp
jbe
scas
fistpl
pop
push
lcall
adc
cmp
ljmp
dec
rcll
lret
gs
into
lods
jnp
fwait
ret
push
pop
imul
cld
ljmp
or
fmull
push
mov
lret
pop
icebp
hlt
sti
add
addl
fisttps
addr16
loop
push
adc
xchg
fsubrl
scas
push
imul
sub
faddl
adc
sbb
adc
ss
sahf
insl
sahf
and
dec
push
incb
push
pop
nop
sub
mov
adc
sbb
mov
xchg
lock
adc
fsubrl
shlb
stos
out
test
or
sub
push
mov
in
adc
mov
aad
mov
mov
stos
cmp
add
cli
mov
or
jl
xchg
dec
or
add
scas
cltd
out
aam
inc
jno
and
mov
lods
out
or
mov
in
pop
roll
rclb
adc
lods
clc
not
lods
test
out
loope
sub
jecxz
cmc
sub
xor
je
xchg
pop
jp
scas
dec
dec
repnz
xor
out
xor
testl
out
cmpsl
jp
xchg
rcll
mov
data16
lods
cltd
or
pop
out
std
mov
test
icebp
adc
pop
loopne
mov
push
lcall
fcomps
ret
sbb
das
pusha
push
dec
and
mov
push
call
shl
lcall
xor
mov
add
fistps
out
pop
test
inc
test
insb
mov
ret
mov
add
xchg
or
aam
pop
jo
push
inc
pop
cmc
add
jg
lds
frstor
stos
out
or
fisttpll
movsb
sub
pop
cltd
push
insl
cmp
mov
mov
aam
xor
sub
nop
fcmovb
jp
lods
neg
scas
pushf
cwtl
enter
jle
add
fstps
lds
loop
push
xor
or
ror
jge
adc
push
stos
in
adc
dec
cwtl
lock
lret
movsb
and
push
testb
inc
out
mov
mov
pop
pop
mov
popa
insb
cli
ss
sbb
inc
in
xor
inc
loop
push
test
xor
lcall
pop
add
dec
jp
inc
cwtl
pop
add
ficoml
mov
enter
pop
jmp
mov
sbb
enter
or
cmp
jmp
jge
jle
in
and
dec
lret
add
and
out
push
int
xchg
call
lds
aad
sbb
xor
fisubrl
lods
or
aad
mov
jg
lret
pop
lahf
orl
int
xchg
inc
pop
std
cld
test
mov
stos
and
add
or
push
sub
int3
outsb
jnp
sub
dec
cmp
mov
repz
push
jne
adc
jge
aaa
sahf
sbb
fildll
in
push
fists
loopne
xor
add
stos
or
fwait
pop
mov
xor
stc
test
add
adc
mov
ret
mov
sub
mov
cs
push
js,pt
push
or
cmp
loope
or
call
icebp
add
cmpsb
jmp
add
mov
inc
sbb
inc
mov
adcb
leave
pop
add
pop
fistpll
push
addl
aam
int
ret
jne
xor
pop
mov
sar
cmp
add
pop
jecxz
test
outsl
add
out
push
mov
sbb
sub
hlt
add
sbb
pop
outsl
mov
cmp
movsb
pop
movb
aad
addr16
into
add
xlat
xchg
mov
pop
adc
insl
call
add
sub
pop
mull
jmp
mov
pop
jp
out
ret
xor
mov
aad
xchg
adc
out
pop
popf
cmpsb
fistps
fsubr
insl
int
jne
push
push
test
xor
notl
cmp
dec
adc
shl
xchg
xchg
jnp
or
cli
push
jle
cmpsb
or
mov
inc
stc
test
out
mov
jp
pusha
scas
insb
pop
imul
pushw
ja
ffree
aas
jne
inc
dec
and
subl
mov
jno
mov
hlt
pop
sarl
decb
sar
inc
pusha
test
loope
loopne
lahf
xchg
dec
push
pop
out
dec
jne
dec
jbe
mov
fwait
inc
dec
sysenter
jno
push
dec
fwait
mov
mov
mov
loopne
sahf
sahf
dec
aas
inc
and
lds
cmp
or
int
sub
adc
dec
stos
test
or
mov
inc
daa
gs
lret
aas
xchg
into
fldenv
xchg
notl
jo
cvtpd2ps
lret
push
push
dec
pop
push
adc
xchg
or
sbb
popa
mov
popf
xchg
call
push
aas
loop
or
push
lahf
cltd
sub
mov
cmp
xchg
dec
roll
cmp
out
or
add
fisubrs
xchg
inc
mov
push
inc
stos
mov
cmpsl
repnz
fstl
mov
xchg
rol
inc
decl
jmp
mov
inc
jns
lcall
insb
loopne
push
mov
add
push
in
out
push
cwtl
xor
movsb
scas
xlat
cmp
add
push
sub
sahf
mov
imul
push
out
pop
inc
gs
popa
inc
xchg
popa
popf
fucom
scas
mov
ja
xor
lret
add
pop
jmp
loop
out
add
in
pop
sar
inc
in
and
js
xchg
in
fnstcw
insl
adc
in
call
xchg
call
fdivs
push
clc
test
sub
and
cmp
fisubl
data16
out
cmp
rcrb
lods
test
jnp
and
mov
pop
aam
dec
imul
outsl
dec
xor
push
cmpsb
add
adc
mov
fsub
mov
aaa
mov
sbb
popa
mov
xchg
dec
or
shl
test
pop
sub
lcall
out
sub
cmc
out
mov
enter
fbstp
pop
push
xchg
test
pop
push
sbb
lahf
sbb
xchg
or
outsl
pusha
fldcw
or
mov
mov
dec
les
adc
and
xor
add
enter
insl
loope
lcall
xor
pop
sub
setbe
mov
inc
and
adc
jl
cmp
dec
scas
sbb
repnz
mov
sarl
adc
mov
test
jae
xchg
outsb
scas
aad
xor
xchg
xchg
ds
fldt
xor
sbb
xchg
fs
shlb
cltd
jnp
push
out
les
fwait
test
xor
scas
das
loopne
iret
pop
call
mov
jmp
test
cli
es
mov
pop
add
sbb
ja
call
inc
jnp
outsb
out
lcall
dec
xor
fisttpl
adc
mov
sbb
aad
inc
mov
xor
loopne
jae
xchg
push
and
loop
cmp
cmp
das
es
ljmp
cmp
arpl
enter
xor
lcall
add
xor
bswap
xchg
lahf
adc
lret
insl
mov
mov
call
push
outsb
xor
xchg
enter
xlat
aam
fcmovbe
fxch
call
call
push
jns
aad
push
cli
mov
fdivrs
jnp
imul
out
sbb
imull
mov
mov
sbb
jb
cwtl
jne
mov
pop
adc
adc
jp
mov
mov
and
xor
repnz
enter
fbld
mov
movsl
pop
push
int3
cltd
stc
xchg
in
test
jmp
add
mov
ds
and
jnp
pop
hlt
fmull
mov
movsl
sub
push
add
add
mov
call
adc
and
rcll
enter
ljmp
xchg
and
dec
add
mov
sbb
out
push
or
jbe
pop
add
sbb
lret
pop
int
in
dec
loope
das
int3
inc
iret
ret
inc
mov
dec
in
into
cmp
cli
lret
mov
sub
loopne
fwait
into
ret
cmpsb
stos
and
popf
mov
jae
xor
lock
popf
sbb
insb
clc
rcll
lock
jp
or
loop
mov
call
push
aad
sub
push
arpl
movsb
adc
ss
js
mov
push
outsb
sub
jnp
inc
vandps
push
cmp
pop
pusha
lock
sub
call
jmp
xor
mov
cld
jmp
mov
cwtl
pop
in
inc
lods
icebp
imul
and
mov
mov
mov
adc
ffreep
out
add
mov
xchg
cmp
leave
jnp
adc
mov
adc
je
mov
nop
dec
sahf
scas
nop
sub
inc
loopne
jp
xor
pop
mov
add
jp
and
pop
jecxz
add
sub
adc
jecxz
mov
lcall
daa
leave
into
popa
mov
xchg
mov
mov
imul
push
mov
adc
xlat
popf
push
cmpsl
lods
jle
or
inc
rorb
imul
xor
pop
mov
decl
pop
push
pusha
add
iret
outsl
push
orl
cmp
mov
lret
add
and
into
mov
enter
jecxz
sbb
cmc
lahf
sub
push
fbstp
xor
mov
call
test
pop
cmp
scas
xchg
ud1
cmp
aam
cmpsb
je
rcrb
repnz
ja
push
mov
ret
sbb
cmp
add
out
adc
inc
scas
inc
mov
fsubl
pop
imul
pop
scas
mov
ror
sub
add
sbb
cmpsl
incl
fadds
dec
adc
lahf
lock
sub
imul
pop
rcrl
add
dec
jo
inc
dec
in
outsb
popf
popa
aam
push
loopne
or
jmp
lods
cmc
fs
xchg
push
fldt
fcompl
jno
sbb
cli
add
cmp
or
lcall
loop
fmull
inc
mov
push
push
aaa
pop
pop
imul
int
inc
and
sbb
into
xor
es
addr16
lret
pop
cmp
or
mull
mov
pusha
cld
add
xchg
xchg
jnp
mov
sahf
xchg
pop
mov
mov
inc
inc
insb
mov
ljmp
idivl
cli
popf
mov
aad
sahf
mov
jl
push
jo
mov
ja
pop
jmp
xor
loopw
push
fadds
outsl
test
dec
sbb
xchg
pop
sbb
scas
xor
bound
scas
mov
adc
scas
int
movsl
xor
push
sub
ds
popf
adc
mov
sbb
add
sbb
loop
mov
cmp
das
push
mul
sbb
adc
mov
mov
adc
jno
sahf
pop
add
addr16
loop
dec
xor
and
jnp
mov
inc
lret
cmc
popa
cmp
movsl
jmp
outsl
jp
xchg
ret
sti
cmp
cmc
jg
mov
pop
adc
fnstcw
dec
imul
pushf
outsl
cmp
lahf
pop
cli
xor
dec
xchg
lods
pop
int3
pop
shrb
mov
or
xchg
sbb
lcall
xchg
mov
cwtl
add
aad
gs
adc
or
jno
pop
jle
jecxz
ret
in
fistpll
pop
sub
mov
fbld
aam
call
fwait
pop
mov
in
cmpsb
test
ds
dec
mov
imul
xchg
in
push
mov
subl
pop
ds
es
rcrl
stos
push
mov
jno
mov
loop
fsubrp
lahf
jge
sbb
add
scas
cmp
movl
fidivl
mov
push
sub
in
repnz
push
push
aaa
mov
or
fbld
xorb
jno
test
jne
gs
jae
xor
jnp
jne
stos
jg
mov
cmp
push
jp
push
inc
and
ljmp
or
mov
fstps
dec
imul
mov
sub
adc
push
lahf
add
imul
or
jle
out
mov
push
ss
xchg
cmpsl
or
and
adc
pop
adc
pop
mov
cltd
push
ret
stc
mov
inc
icebp
jbe
mov
aad
mov
sahf
dec
rcrl
mov
dec
xchg
push
jnp
pop
xchg
popl
pop
inc
inc
icebp
test
sahf
out
adc
mov
inc
push
inc
cmpsb
mov
enter
add
mov
aas
mov
or
rorl
mov
fucom
lods
in
push
lahf
cld
mov
mov
sub
cmp
xlat
in
cmp
mov
add
push
mov
push
stos
rclb
jae
or
mov
hlt
ja
push
jb
fsts
clc
popf
inc
xchg
and
inc
jnp
lahf
cmp
arpl
push
fstpt
arpl
mov
xchg
adc
out
sub
adc
add
daa
push
das
mov
sbb
rcll
stos
inc
xor
hlt
push
in
sbb
sub
lret
inc
movsl
lahf
push
fmuls
push
inc
push
out
and
or
outsl
cmc
or
mov
push
or
mov
jne
mov
push
mov
pop
add
sbb
fiadds
mov
mov
and
sbb
mov
xorb
adc
inc
enter
daa
popf
repz
imul
add
adc
mov
lds
iret
push
sub
test
inc
mov
sbb
mov
and
outsb
add
ja
lahf
add
push
sub
mov
push
inc
testb
fstpl
xchg
mov
xchg
imul
or
mov
sahf
lods
flds
xor
xlat
jno
loop
adc
mov
mov
shl
mov
jle
movd
jae
or
jns
sub
negb
cmpsl
inc
or
loop
adc
push
inc
and
ja
jne
mov
lods
ret
fistpll
xchg
cmp
push
pop
bound
cmc
sbb
inc
pop
push
push
cmpsl
pop
sti
icebp
dec
adc
out
fisttpll
push
or
mov
aam
leave
enter
xchg
movsl
inc
lahf
out
inc
push
fisttps
inc
adc
je
bound
mov
lods
int
aaa
jno,pn
loop
mov
fmul
pop
data16
or
rolb
std
adc
int
sbb
leave
jb
pop
dec
lds
jnp
xchg
popf
push
and
lock
mov
pop
mov
mov
or
xchg
and
outsb
dec
fidivrl
jge
xlat
incb
shr
pop
pop
aad
sbb
dec
and
push
add
pusha
mov
mov
adc
xor
dec
inc
data16
xchg
icebp
mov
sub
in
cmp
into
sub
add
mov
arpl
pop
push
add
fwait
adc
lahf
call
insb
dec
sub
push
or
mov
inc
aam
add
lahf
popa
and
daa
push
lret
push
sbb
mov
jbe
je
sub
mov
ficompl
test
push
outsl
add
pop
push
enter
js
and
lahf
adc
inc
movsl
jg
test
xor
sbb
loop
push
cltd
aad
pusha
loopne
jns
leave
adc
fwait
mov
es
leave
inc
xchg
sbb
jp
push
add
test
std
jae
jl
xchg
jle
pop
mov
mov
int3
mov
pop
testl
add
int
push
push
iret
cmpl
nop
pause
xchg
pop
test
imulb
xor
cmp
iret
aam
leave
and
movsl
int3
mov
push
sbb
fildll
in
cmp
sbb
push
iret
cmp
xchg
cmc
in
push
and
lods
mov
dec
out
pushf
jae
subl
int3
stc
dec
or
sbb
lds
adc
sti
out
pop
andl
icebp
push
loop
adc
jg
add
inc
push
cmp
dec
jnp
inc
mov
in
cmp
jae
cmpl
test
adc
dec
adc
cmpsb
and
ret
pop
lods
cmp
js
mov
out
xchg
or
mov
adc
add
or
jb
push
dec
xchg
mov
decb
push
les
mov
test
sbb
loop
push
lds
cmpsl
cwtl
push
mov
or
adc
outsb
outsl
loop
xorl
push
xchg
andl
xor
test
pop
sub
nop
and
mov
add
pop
insl
lds
inc
or
adc
mov
lods
sbb
jae
loopne
test
ret
cwtl
mov
loop
hlt
and
lahf
add
popf
xchg
pop
cmpsb
adc
filds
test
jns
iret
into
or
inc
dec
push
inc
rcll
mov
push
call
xchg
mov
inc
out
mov
or
inc
inc
adc
pop
sti
jnp
add
xchg
sub
lret
adc
xchg
cmp
sbb
or
mull
fsubr
outsb
adc
mov
inc
adc
int
mov
cmp
cli
out
pop
mov
aad
ret
aas
loop
imul
ret
in
test
add
sbb
jbe
fistps
adc
insl
jae
into
mov
loopne
xchg
fucomp
in
clc
arpl
or
test
lock
mov
leave
arpl
xchg
xchg
xor
adc
cmp
push
pop
out
into
push
stos
jnp
out
fs
scas
pop
into
add
or
shl
cwtl
ss
addr16
cmc
mov
lcall
and
push
mov
roll
fisttpll
mov
enter
push
lods
adc
movsb
mov
pop
pop
lret
cmc
xchg
sub
pop
xor
sub
fcompl
imul
repz
movb
out
nop
mov
adc
lods
sub
xor
and
shlb
ds
xchg
xor
mov
inc
lret
frstor
mov
in
adc
adc
fiaddl
add
push
lea
add
leave
cmpsb
add
mov
mov
push
fisubrl
push
pop
push
mull
xor
and
sar
ja
push
cltd
jge
pushf
add
lds
mov
ljmp
sahf
sub
and
sub
movsl
pop
test
xor
sbb
sub
loopne
sbb
outsl
lea
sbbb
hlt
push
add
mov
pop
push
loopne
or
nop
bndldx
push
popf
and
cli
inc
xor
test
jg
call
xchg
jb
in
jno
mov
in
or
loop
sub
jge
inc
sbb
push
add
mov
stos
push
into
mov
sub
lods
mov
mov
repnz
or
jnp
popa
cmp
ja
jp
ja
sbb
sub
test
mov
add
lds
movsl
idivb
aam
add
mov
jnp
mov
fcomps
outsl
pusha
mov
fldl
inc
stos
insl
ljmp
sub
nop
outsb
xor
add
cwtl
sbb
mov
jle
in
hlt
push
sbb
mov
adc
rorl
arpl
dec
fistpll
popf
int
andl
jge
adcb
in
cmpsb
lods
fists
jnp
pushf
or
inc
insb
sub
aad
hlt
sbb
stc
out
popf
dec
mov
test
fisubrs
lcall
or
mov
cmp
out
sbb
enter
pop
pop
xchg
mov
js
imul
pop
int3
enter
loop
clc
cmc
or
out
adc
add
sbb
out
loope
lahf
fsts
push
and
mov
out
insl
addr16
and
hlt
push
cmp
mov
jg
mov
add
rclb
roll
cmc
push
mov
adc
lods
cmpsb
int
ret
jg
pop
mov
mov
inc
pop
sub
pushf
gs
imul
bound
push
out
inc
push
out
adc
std
hlt
data16
mov
lret
push
loopne
sub
push
in
inc
std
int3
idivb
int3
pop
xor
int3
sub
sbb
lcall
dec
pop
mov
inc
sbb
loop
js
stos
adc
mov
int
vmptrld
jo
push
jb
cltd
lret
ljmp
sti
jp
clc
sbb
mov
cmpsl
out
inc
ret
insl
pop
cltd
xchg
aad
or
cmc
loop
dec
scas
xchg
fdivp
ljmp
push
xor
adc
or
insl
add
mov
sahf
les
dec
insb
jg
sub
gs
or
orl
sub
mov
dec
in
or
xchg
push
jne
mov
dec
mov
je
adc
jo
xlat
mov
jmp
sbb
sbb
and
es
xchg
notl
outsl
lret
jp
ljmp
ret
cmpsb
push
call
xor
mov
std
push
lds
push
sub
iret
imul
jne
lods
imul
inc
adc
popf
add
out
int
test
jne
cmp
cmp
into
xchg
adcb
lds
loopne
or
incl
out
push
aam
subl
scas
enter
add
push
xor
cmc
insb
adc
jbe
adc
xor
xor
mov
dec
es
lods
mov
push
add
cmpb
repz
lahf
out
jb
sub
lret
aas
mov
stc
outsl
add
sbb
mov
sbb
fstpt
loop
xchg
in
ds
pop
cmp
adc
loop
adc
push
mov
dec
bound
jnp
sbb
add
inc
test
adc
int3
in
sbb
pusha
dec
mov
imul
push
data16
or
or
mov
movsb
rorb
loopne
jmp
pop
xor
adc
ffreep
sbb
movsl
sti
leave
icebp
adcb
lods
pop
in
cwtl
pop
mov
xor
outsb
loop
dec
mov
and
jo
ficoml
xor
cmp
sarl
push
mov
inc
lea
out
push
repz
rcll
add
add
sbbl
adc
dec
mov
cltd
push
xor
fistpl
xchg
jp
add
insl
pop
shlb
pop
sub
loop
add
bound
loopne
mov
xor
cld
fildll
test
jb
mov
pmulhuw
loop
push
mov
xchg
call
fildl
jecxz
mov
cmpsb
loop
sub
aad
xchg
lds
fucom
into
ficoms
mov
cmp
push
pop
pushf
pop
mov
jno
call
push
hlt
enter
das
lahf
pop
or
or
add
sub
mov
cmc
icebp
movsl
push
addr16
mov
inc
mov
pop
je
or
adc
aam
test
jl
fnstenv
mov
cmp
xor
incb
or
mov
mov
or
outsb
in
jns
pop
outsl
fcomps
out
or
loop
sub
adc
outsb
mov
ja
icebp
jl
add
sub
insb
outsb
dec
push
cmp
in
jg
scas
insb
mov
xchg
lahf
sub
pop
mov
cmpb
fnsave
cs
stos
add
or
mov
sub
mov
xor
mov
pop
cmpsb
cltd
pop
jl
test
jnp
mov
add
mov
ficoml
xchg
lock
xchg
xchg
lds
sub
ret
jmp
xchg
xchg
adc
pusha
xchg
fwait
adc
push
hlt
fistl
ljmp
jne
bound
mov
push
stc
into
ficomps
stos
stc
xchg
pop
mov
jg
adc
xchg
jp
jae
outsl
inc
icebp
loop
mov
sbb
lcall
scas
clc
pop
rolb
testl
fnstcw
jnp
pand
or
add
jnp
push
das
pcmpgtb
lret
inc
insb
xor
in
fimuls
adc
jbe
loop
shrl
sahf
stc
pop
pop
aad
xchg
jns
mov
pop
xlat
and
sub
jo
lahf
add
outsl
lahf
sub
scas
ljmp
mov
mov
sbb
call
xor
mov
dec
imul
loopne
jge
int3
sub
fisubrl
pmullw
fnstsw
das
push
sub
std
mov
jmp
xor
pop
incl
mov
adc
adc
ljmp
jno
inc
push
add
push
gs
pop
enter
cltd
insl
add
pop
aad
sahf
xchg
jbe
jmp
adc
mov
pop
push
hlt
cmp
dec
pop
push
jae
adc
adc
xchg
addr16
mov
mov
or
add
xor
es
rol
xchg
add
daa
mov
fldl
fs
adc
sti
jb
sub
popa
xchg
jae
sub
xchg
push
mov
repz
repz
outsb
inc
push
adc
inc
sbb
lret
ret
fldl
and
xchg
adc
stos
and
sub
fisttpll
bound
push
shll
xchg
adc
jl
fldcw
aas
int3
inc
xor
data16
sbb
xchg
sub
shl
xchg
xchg
adc
xchg
or
inc
sbb
scas
jmp
or
adc
nop
pop
mov
mov
pop
adc
stc
or
shlb
sahf
dec
les
add
xchg
jmp
adc
add
push
in
js
and
nop
pop
add
dec
insl
ret
mov
clc
adc
loop
and
xchg
sub
cmpsb
call
leave
mov
hlt
sahf
xor
xor
sub
sbb
or
adc
das
imul
push
pop
add
sub
xchg
push
mov
je
pop
incb
call
sbb
pop
ja
mov
in
or
adc
add
jl
out
fisttps
gs
push
or
mov
fxch
lahf
add
mov
pop
xchg
and
loop
leave
pushl
rcrl
cwtl
ds
add
push
push
jae
ljmp
xchg
adc
xchg
jmp
adc
mov
stos
negb
inc
xchg
pop
fucomip
pushf
dec
setne
adc
es
fmull
inc
jmp
mov
mov
test
aad
ret
out
in
cmp
enter
mov
outsl
add
arpl
ss
rcll
adc
mov
orl
push
movl
aad
adc
out
xchg
call
pop
pop
pop
sub
nop
mov
push
xor
mov
add
xor
dec
lds
sbb
xor
repz
sbb
hlt
not
mov
mov
lea
jnp
das
lock
sbb
into
enter
pushf
sbb
mov
nop
adc
sub
add
loop
in
lcall
xchg
faddp
fiadds
imul
sub
pop
sbb
cmc
sbb
int
addr16
testb
mov
lock
movsl
lea
ret
movsl
mul
mov
mov
call
pop
add
ljmp
arpl
mov
inc
mov
jg
xchg
mov
fildll
adc
and
sbb
jo
sahf
adc
xchg
shll
lahf
orb
lret
out
lods
jecxz
shlb
add
mov
fsubs
data16
sub
movswl
mov
pop
jne
addr16
pop
and
fisttpl
adc
mov
push
roll
mov
test
lds
pusha
mov
ret
insb
dec
jbe
mov
mov
or
dec
sub
int3
or
cmp
call
jnp
xor
mov
aaa
and
xor
jno
aas
lcall
dec
shrl
jp
and
ss
testl
call
push
outsb
or
mov
dec
mov
imul
and
lret
call
jno
inc
pop
push
pop
clc
mov
mul
in
sub
push
out
push
pop
sbb
add
dec
lahf
xlat
mov
or
pop
dec
ds
and
xchg
and
mov
fbstp
adc
imul
ret
sahf
scas
cld
pminub
push
mov
call
inc
inc
enter
sti
push
add
cltd
push
mov
sbb
xchg
mov
idivl
or
add
jb
bound
or
call
ss
out
test
jp
xchg
mov
or
neg
addl
adc
lods
push
fisubl
jmp
xadd
js
xor
mov
fmull
scas
out
lods
inc
jno
push
stos
jb
lods
faddp
mov
addb
dec
adc
pop
loop
fdivrs
adc
pusha
add
adc
jmp
scas
loop
adc
mov
arpl
fwait
pop
popf
pushf
in
call
adc
jg
ja
push
pop
out
jecxz
cwtl
loop
lret
sti
jl
xchg
pop
rcrl
adc
inc
adc
repz
adc
and
idivl
addl
sbb
loop
lcall
idivb
iret
jle
fs
ret
and
inc
adc
out
xchg
sbb
push
es
adc
jo
or
fld
andb
dec
pop
sahf
jg
loope
or
outsb
jo
add
mov
mov
imul
pop
push
out
inc
repnz
mulb
mov
sub
jle
je
dec
pop
outsl
outsb
call
inc
mov
sub
mov
fisttps
sbb
sbb
jmp
nop
cltd
jge
pop
filds
and
or
pop
xchg
sahf
loope
lret
loop
xor
fistl
fsts
xchg
and
ds
inc
enter
leave
dec
mov
inc
mov
sbb
pop
mov
enter
mov
mov
test
add
leave
mov
or
out
or
sub
ja
data16
rorl
jno
lss
push
jg
pop
dec
cmp
xchg
pop
sbb
adc
inc
pop
lods
jmp
xor
addr16
push
popf
adcl
sbb
cmp
rclb
inc
in
push
push
jge
dec
enter
sbb
sbb
mov
outsb
jecxz
das
loopne
lret
sub
loop
sahf
push
dec
arpl
push
aad
adc
idiv
push
sub
pop
jne
jp
mov
imul
sbb
mov
pop
cld
stc
mov
mov
ficoms
push
dec
shl
imul
cmp
dec
movsb
inc
cmp
inc
add
in
popf
dec
jno
inc
jmp
je
out
dec
xchg
addl
out
push
dec
and
jo
cli
jg
mov
fldt
pop
sub
enter
jmp
sbb
bsr
cmpsl
mov
notl
insb
cmp
xchg
xchg
mov
jo
inc
fwait
pop
sti
jae
adcl
sbb
push
sub
andb
adc
mov
dec
adc
pop
cmp
lock
or
outsb
jge
or
aad
dec
pop
jnp
stos
mov
dec
cmc
adcb
cmp
std
out
and
iret
shl
pop
push
in
int
lret
bound
pop
je
or
mov
push
sub
loop
push
loopne
cmp
das
int
xchg
lahf
lock
out
push
cmpsb
ds
adc
loop
push
sbb
and
fstpt
mov
mov
or
pop
gs
stos
dec
loop
jae
lcall
cwtl
adc
lahf
aad
scas
inc
mov
popa
push
outsb
mov
clc
push
jmp
push
adc
xchg
test
cmc
adc
aad
setb
flds
push
dec
cmc
mov
shll
adc
cltd
xor
mov
add
adc
add
mov
mov
fimull
cmp
aad
cmp
mov
add
repz
ret
movsl
ds
in
mov
sub
nop
mov
inc
push
push
mov
sbb
loop
xchg
cmp
test
hlt
divl
add
data16
cmp
pusha
push
pop
cmpsb
loope
mov
push
cs
pop
mov
loopne
lcall
das
jmp
cmp
sub
int
push
fdivrl
lods
cmp
and
dec
fnstenv
mov
push
xchg
divl
pop
jno
and
xchg
scas
pop
dec
mov
enter
movsl
mov
inc
cmp
fwait
jmp
enter
dec
lcall
mull
jb
addr16
pop
sub
mov
inc
cmp
sub
imul
pop
cld
mov
mov
pop
ds
add
ds
aas
pusha
xlat
xor
in
mov
jno
mov
sub
pusha
ja
js
notl
mov
repnz
shlb
call
mov
sbb
pop
sub
and
aaa
push
dec
mov
cmp
pop
loop
repz
jb
pop
mov
adc
rcll
cmp
incb
push
xchg
pop
aam
add
into
push
mov
pop
push
push
scas
or
lahf
add
mov
fdivr
test
inc
push
cli
fstl
ljmp
fildll
popa
add
inc
ljmp
shl
xor
aam
adc
mov
or
gs
nop
scas
add
adc
repnz
lock
in
mov
out
lods
es
ja
mov
pop
push
enter
leave
fdivrl
add
inc
jns
pop
sub
and
add
dec
push
cmc
and
jbe
push
arpl
fnstcw
or
and
hlt
test
xchg
mov
jae
mov
adc
dec
insl
sbb
sub
je
jnp
das
loope
or
adc
and
ret
inc
xorl
mov
mull
push
pop
movsl
jae
rcrl
jg
enter
pop
adc
add
xchg
mul
jle
shlb
rcr
pop
xchg
xchg
stos
push
and
cltd
frstor
adc
popf
push
mov
mov
into
cmp
push
pusha
aam
jge
xor
mov
push
ret
sub
fsubs
adc
aaa
jnp
hlt
xchg
cmp
rorl
jbe
pop
add
stos
movsl
mov
mov
popa
popa
sub
xchg
jmp
scas
sub
ss
ret
movsb
daa
push
mov
scas
lahf
sbb
jecxz
call
jnp
xchg
xchg
cmp
orb
mov
push
adc
out
mov
inc
fbstp
sub
dec
jnp
or
mov
mov
push
mov
or
sbb
das
push
pop
dec
pop
adc
scas
sbb
or
insb
in
mov
inc
mov
push
jbe
out
pop
or
test
aam
lahf
adc
push
xchg
imulb
ds
out
ja
jmp
loope
lahf
fstpt
sahf
mov
mov
andps
dec
jmp
ret
fimuls
sbb
xchg
lahf
adc
iret
xchg
adc
add
inc
sub
ja
sti
stos
cmp
pop
add
fs
scas
push
hlt
xor
je
jmp
cs
sbb
std
mov
dec
stos
jbe
xor
adc
call
pop
lahf
mov
insl
mov
mov
std
jecxz
out
mov
xchg
jg
pop
jns
lret
out
mov
scas
cmp
push
loop
hlt
mov
mov
mov
jp
dec
xor
popa
mov
jp
shl
push
enter
repnz
ret
aaa
notl
test
pusha
cltd
call
pop
sahf
add
cmp
dec
push
lret
negl
cmp
scas
int
jmp
shll
push
sbb
add
fldenv
negl
cmpsb
xchg
mov
mov
insb
sbb
fistpll
xchg
cmp
jae
addr16
repz
das
roll
cmp
mov
inc
hlt
mov
pop
inc
fnsave
jp
fwait
xchg
add
out
cmc
lahf
mov
sahf
mov
xchg
sub
enter
and
ficomps
mov
out
je
jo
xchg
push
mov
imul
insl
frstor
sub
jnp
mull
pop
pop
movsb
mov
es
iret
ja
add
sub
cmpsb
sbb
xchg
jne
pop
lods
xchg
inc
shlb
xor
out
xor
roll
jge
mov
sub
mov
fnstsw
sahf
and
out
ss
push
jnp
test
movsl
fiaddl
adcb
lcall
adc
xor
sbb
pop
popf
jg
mov
mov
adc
push
xchg
sub
cmp
cld
stos
imul
mov
mov
fmul
add
inc
dec
sub
sub
or
out
add
clc
dec
xorb
xchg
inc
push
add
pop
dec
shlb
and
fiadds
aam
add
mov
xchg
icebp
fdiv
push
add
enter
add
fs
push
inc
out
nop
xor
fldz
pop
xor
jge
je
add
mov
cmp
out
push
push
push
leave
cwtl
xor
ja
xor
mov
push
pop
pop
mov
add
ret
push
enter
scas
dec
call
sahf
cmc
add
adc
icebp
fildll
push
add
xorb
xchg
sarl
inc
sbb
lcall
jmp
daa
imul
test
gs
jbe
adc
adc
cmpsb
mov
pop
jno
push
out
sbb
test
hlt
fildll
fwait
out
dec
jl
lock
cmc
repz
aaa
mov
decl
pop
jg
sbb
adc
and
xor
ficoml
mov
or
out
xchg
shll
xchg
fiaddl
lea
or
xor
pusha
mov
cmc
aad
mov
xchg
sub
loop
mov
cwtl
pusha
add
push
add
xchg
out
std
rcrl
mov
push
clc
pop
iret
loop
jne,pt
add
add
adc
dec
sbb
cltd
or
push
sbb
inc
push
ljmp
je
cmp
cmp
test
enter
das
add
sub
out
sbb
sbb
and
mov
mov
mov
xchg
hlt
or
add
imul
mov
dec
sahf
mov
pushf
jne
inc
mov
aas
in
inc
aam
leave
pop
dec
mov
pop
lock
ret
sub
scas
lcall
data16
insb
mov
push
fistpll
loop
adc
fcoml
outsb
add
mov
jmp
int3
push
inc
aas
imul
mov
adc
cli
xchg
sub
aam
fsts
or
lahf
adc
xchg
iret
cmp
mov
adc
mov
sub
lahf
pop
adc
cmp
into
loop
popa
xchg
push
out
jo
imul
fwait
ret
repnz
jo
fidivs
add
or
mov
add
aad
out
adc
add
dec
mov
sbb
adc
add
adc
test
xchg
adc
fnsave
sub
out
mov
add
dec
mov
fbld
loop
iret
loope
jp
mov
inc
or
jbe
push
pop
scas
mov
jbe
lods
sub
sbb
je
adc
jne
cld
lods
mov
push
sbb
outsl
push
mov
pop
xchg
jl
push
mov
loopne
mov
ficompl
dec
sti
sub
push
push
cwtl
fmuls
pop
out
jo
jp
pop
push
cmp
add
cltd
lcall
adc
cmp
fwait
scas
out
into
push
lahf
mov
iret
lret
or
loop
sbb
popl
xchg
mov
mov
and
je
push
data16
notl
aas
jne
inc
inc
jg
sub
or
sbb
fldenv
out
loop
fsub
nop
shrl
mov
adc
dec
imul
sbb
or
jno
lahf
xor
mov
aad
insl
sub
dec
adc
sbb
arpl
mov
aad
popf
jmp
xor
into
jb
lock
mov
bound
lahf
jge
test
and
cs
loop
xor
sub
inc
sub
xchg
movsl
insl
in
adc
adc
rcr
int
sbb
loop
bound
in
fldln2
or
dec
push
lea
mov
pushw
pop
aas
push
add
lret
repnz
movsb
cmp
ljmp
inc
mov
mov
lahf
ds
inc
jae
dec
adc
fisttpll
and
jmp
adc
pop
int
pop
in
cmp
inc
inc
jno
sub
and
add
and
ja
ret
or
repz
sbb
incl
repnz
push
out
scas
xchg
scas
cmp
loop
xchg
lods
pop
or
decb
daa
jbe
sti
mov
jnp
imul
jp
dec
sub
test
dec
lea
scas
mov
xchg
negl
mov
or
xor
ja
fadds
and
jne
pop
loop
pop
push
frstor
mov
adc
testb
mov
mov
std
fwait
sbb
loop
adc
je
mov
aad
dec
loop
aam
mov
insb
dec
lahf
test
in
dec
adc
pop
int
addl
xor
inc
inc
aas
pusha
xchg
dec
pop
lret
sbb
or
out
mov
test
add
adc
in
cmp
xchg
dec
shrl
mov
mov
cmp
daa
jbe
sahf
lahf
cmc
adc
loop
mov
mov
jle
pop
cltd
filds
movhlps
inc
bound
adc
add
mov
in
lret
push
mov
loop
test
add
adc
lds
sbb
mov
cwtl
mov
cli
mov
shlb
mov
data16
sbb
hlt
cmpb
out
pop
adc
add
push
pushf
push
loop
lds
pusha
or
inc
push
push
mov
insb
rcrl
add
push
adc
jmp
sub
adc
sbb
jae
test
loop
jecxz
add
inc
xor
loope
outsl
pop
jno
decl
push
xor
int
test
movhps
lret
cmp
add
test
in
adc
leave
xchg
mov
dec
push
sub
mov
inc
push
or
cmp
scas
rolb
jl
popf
and
fwait
mov
std
aam
popa
pop
sbb
sarl
mov
sub
fldl
out
xlat
daa
push
test
scas
fisubs
xchg
sub
xchg
push
fildll
ficoml
xchg
pop
adc
cmp
mov
aam
movsl
mov
cltd
fwait
out
pop
push
lock
pop
xor
lahf
sub
xchg
mov
push
mov
fldl
xor
sahf
cmp
ljmp
sarl
das
ljmp
xlat
cld
sbb
dec
pop
loop
adc
out
fstpl
sbb
fstpt
icebp
pop
add
mov
inc
jne
sbb
push
arpl
add
int
push
cmp
or
test
lcall
mov
ret
leave
cltd
and
call
out
ja
pop
shlb
xor
fwait
xchg
adc
mov
scas
icebp
es
sbb
or
add
pop
ds
fldl
inc
push
jl
iret
or
stos
lahf
xor
mov
add
inc
outsl
subl
aaa
add
inc
adc
incl
mov
scas
push
push
dec
shll
int
push
cmp
ds
lcall
pop
lret
push
cmc
mov
push
cmp
xlat
pop
or
push
jmp
dec
push
adcl
jne
xchg
xor
or
iret
loop
cmp
rcrb
add
adc
mov
hlt
push
mov
fwait
mov
cmpsb
sub
in
add
es
ss
hlt
cld
xchg
pop
notb
or
push
out
push
xchg
fistpll
stos
sub
dec
pop
or
imul
jne
or
mov
dec
test
in
xchg
sub
es
push
xchg
pusha
or
outsb
push
out
pop
push
and
or
or
pop
cmp
int
cmp
incb
cmc
loope
popa
dec
jp
xchg
mov
push
pop
movl
push
push
andb
mov
add
lea
pushf
add
clc
pusha
xlat
fcmovnb
fucom
fmul
in
mov
js
jle
xorl
adc
dec
bnd
testl
sub
lret
imul
adc
mov
das
mov
pop
testl
adcb
clc
fldl
fsub
mov
loop
mov
xchg
and
xchg
xorb
pop
ret
add
lahf
shll
sbb
dec
xor
inc
lahf
fcmovb
sbb
adc
insl
out
jne
inc
adc
in
xchg
dec
push
int3
loop
or
mov
add
pop
dec
aad
mov
xor
mov
and
ficoml
mov
jecxz
sbb
mov
push
adc
sub
fstpl
sbb
rorb
cmpsl
popf
add
roll
or
pop
faddp
lods
cmpsb
add
xchg
push
ds
sub
xchg
lds
sbb
ljmp
jmp
xor
and
jecxz
sarb
add
into
test
cmp
ret
outsl
mov
sarb
imul
mov
imulb
in
loope
xchg
push
mov
push
adc
mov
mov
xchg
icebp
push
and
sbb
arpl
and
cmp
sbb
dec
das
jl
cmp
test
inc
jne
int3
out
adc
and
mov
sub
ss
jl
les
icebp
push
fwait
cmp
popf
out
lahf
std
jg
rcrl
mov
cmp
push
jne
pop
int
cld
push
outsl
incb
mov
loopne
pop
cmp
mov
fucomip
mov
div
push
lea
test
pusha
mov
pop
dec
jnp
movsl
jge
stos
mov
adc
in
cmp
xchg
and
mov
adc
adc
push
xor
mov
iret
js
sbb
push
cmp
cld
nop
bound
mov
aam
mov
out
inc
xor
pop
test
and
add
mov
pushf
push
add
cmc
xchg
decb
pop
adc
divb
add
out
mov
data16
rcll
jne
leave
adc
inc
sbb
jno
mov
inc
into
jne
fidivrl
mov
imul
cltd
and
bound
inc
movsl
xchg
ret
mov
cmp
scas
scas
mov
pusha
imul
shll
inc
test
mov
dec
negb
mov
pop
sbb
mov
in
dec
jmp
ret
idivl
xchg
out
mov
rcrb
push
pop
pop
loop
outsb
push
aad
cmp
xchg
in
cwtl
sub
scas
and
push
imul
adc
dec
leave
xchg
jno
xor
mov
aam
cmp
jecxz
pop
mov
insl
cld
jnp
add
ret
test
pop
enter
stos
jno
cmc
int3
mov
adc
call
adc
sbb
mov
add
cmp
loop
mov
add
mov
push
mov
xchg
lds
pusha
imull
fisubs
pop
mov
xor
and
stos
lods
inc
in
out
push
jmp
popf
lods
lcall
mov
outsb
pop
arpl
call
cltd
repz
sbb
sbb
out
jmp
sbb
int
hlt
mov
adc
cmp
push
ljmp
popf
enter
add
xor
sbb
pop
xlat
orb
addr16
push
sbb
xchg
movsb
fildll
inc
xchg
lds
mov
sub
pushf
mov
into
cmp
mov
out
and
gs
pop
imul
mov
addb
pusha
sub
fistpl
aad
addb
pop
xchg
sub
in
add
shlb
mov
mov
cmp
aad
pop
mov
xchg
adc
out
shlb
sarl
pusha
push
lcall
das
mov
xor
cmp
fs
xchg
add
movsb
test
fnsave
mov
lahf
sub
sub
popf
sub
loop
addr16
aas
nop
out
div
mov
addr16
adc
incl
adc
mov
inc
xor
mov
ss
sbb
push
jnp
shll
pushf
popf
pop
bound
sbb
lret
outsl
xchg
pop
pop
adc
and
mov
popf
cld
sub
loop
sub
push
out
pop
out
mov
sbb
fildl
push
sbb
lods
repnz
add
xchg
loopne
filds
inc
push
mov
out
add
adc
insb
push
cs
push
adc
push
xchg
adc
outsb
sahf
jbe
hlt
out
movsl
adc
push
mov
mov
rolb
cltd
popf
adc
xor
loop
sub
fdivr
pop
push
lea
inc
xlat
xchg
jns
in
test
or
xchg
xchg
and
add
fndisi(8087
shl
loopne
nop
aaa
popa
shlb
mov
xor
mov
outsb
inc
cld
int3
xor
mov
je
mov
mov
add
aaa
out
movsl
mov
or
jbe
mov
imulb
push
lock
push
jecxz
cmp
maskmovq
divl
lea
adc
adc
adc
lret
ret
ret
sti
rcrb
dec
movsl
arpl
push
fldl
shl
jmp
aam
sbb
popf
mov
pusha
cmpsl
scas
sbb
jb
sbb
fsubs
inc
jle
iret
jecxz
sub
mov
sbb
out
ja
and
popf
mov
inc
push
and
mov
mov
test
lea
loopne
dec
dec
push
jp
jg
push
mov
pop
xor
mov
push
popa
lea
push
push
fwait
and
or
montmul
cmpsb
inc
mov
mov
pop
sbb
lcall
mov
push
addl
pop
push
inc
xchg
xlat
inc
sub
fcomi
adc
cmp
orl
test
shrb
shl
adc
out
inc
adc
loop
shrb
out
clc
inc
sahf
push
sbb
jecxz
add
mov
mov
iret
fiadds
xchg
push
or
inc
inc
push
pcmpgtb
mov
out
inc
mov
mov
add
ljmp
or
inc
mov
mov
lcall
pop
add
mov
mov
mov
iret
pop
mov
add
test
pop
or
repz
out
fstl
lods
adc
jae
insb
or
and
push
pop
sub
cmp
pop
loope
or
push
in
sbb
fwait
gs
rol
sub
dec
sbb
adc
sub
in
bound
stos
push
mov
sbb
adc
inc
xor
icebp
mov
push
pusha
iret
inc
push
fiadds
mov
xchg
inc
popf
imul
pop
lcall
xlat
out
push
andl
out
insb
inc
scas
lahf
adc
add
imul
jb
cmpsb
push
lret
sbb
add
insb
loop
out
jae
cmpb
sahf
push
sahf
jle
adc
sub
fwait
cmp
inc
xor
les
cli
dec
nop
xor
add
sti
in
xchg
out
dec
imul
lods
sub
push
xchg
mov
mov
dec
mov
or
int
lahf
adc
ja
mov
imul
std
lahf
fcomps
mov
call
daa
add
jle
je
pushf
cwtl
orb
stc
lds
sub
cld
xchg
repnz
sub
insb
add
and
inc
sti
xchg
dec
pop
cmp
add
jno
mov
jne
sahf
dec
dec
hlt
lahf
in
push
mov
and
dec
and
sub
mov
gs
fs
int
out
je
mov
std
ss
adc
jae
ja
push
and
pop
adc
xor
inc
inc
js
push
xor
push
sbb
popf
loop
arpl
mov
cwtl
clc
fldcw
lods
push
or
mov
or
hlt
cmp
pusha
mov
insl
mov
jecxz
repz
push
adc
lds
pushf
add
and
pop
popa
add
ljmp
xlat
pop
nop
jne
jmp
fs
mov
adc
fptan
rcl
outsb
push
popa
subb
dec
cmp
into
dec
add
daa
das
push
push
push
mov
cmc
xor
shl
add
or
fildll
or
jne
cld
loop
adc
xchg
push
sub
sub
xchg
frstor
xchg
xor
int3
cli
out
dec
and
fnsave
lahf
sbb
stos
mov
dec
sbb
push
test
int
mov
iret
pop
mov
fldt
xor
sub
cmp
xor
mov
pop
cmp
push
inc
and
push
sub
scas
andb
mov
pop
and
sbb
out
shlb
dec
les
lods
sbb
js
xlat
je
push
jmp
jl
pop
mov
jns
dec
mov
push
push
push
shlb
mov
lahf
movsl
stos
lea
jg
loop
or
cmp
loop
lahf
add
xchg
std
scas
sahf
pop
gs
mov
std
scas
out
gs
pop
or
rcrb
loop
pop
loopne
pop
cmpsb
scas
pop
cld
test
sub
jg
inc
adc
or
mov
test
pop
push
pop
mov
shlb
clc
mov
in
push
and
sbbl
jnp
lahf
xchg
cld
rcrb
inc
sub
insb
adc
sti
sub
push
jg
inc
bound
into
cmc
mov
pop
xor
inc
mov
jo
ss
mov
sub
lret
aam
jae
addb
orb
mov
stos
add
mov
cmp
ljmp
cmp
mov
xlat
add
mov
test
rcrl
push
xor
pop
int
fiadds
adc
pop
xor
xchg
sbb
mov
shll
mov
push
inc
cmpsl
imul
pop
js
jle
sbb
mov
jle
inc
lcall
dec
cmp
add
sti
enter
in
mov
push
fdiv
popf
enter
movsb
xchg
push
loop
push
push
mov
mov
jno
add
or
jg
mov
test
pop
out
and
xchg
cmpl
sub
xor
cld
adc
movl
xchg
add
or
fstps
ja
testb
mov
lods
dec
mov
fists
push
fildll
dec
test
loop
add
lods
cmp
push
test
xor
in
aas
scas
jae
or
push
add
sahf
xor
push
sahf
xor
sbb
out
jns
out
push
push
jnp
jge
add
ret
cmp
loop
lock
mov
fldcw
or
aad
call
jo
mov
push
push
and
pop
iret
cmp
cwtl
pop
fildl
xchg
pusha
stos
mov
popf
aam
hlt
sub
jg
jle
push
in
and
imul
and
je
add
add
jnp
adc
inc
jge
sbb
pop
push
inc
adc
loope
lret
subl
stc
out
xor
lret
les
pushw
sub
xor
and
xchg
mov
outsl
xchg
sub
add
test
sti
insl
push
jno
loop
push
xor
lcall
mov
cld
ljmp
adc
jl
leave
sahf
std
adc
lea
mov
sti
test
xor
sub
enter
mov
cmp
lahf
loop
arpl
sbb
or
test
sub
push
testl
mov
sbb
fldl
mov
inc
mov
or
aas
adc
xor
and
std
cmc
rorl
fstpl
or
push
xor
sbb
sub
insl
xchg
add
or
hlt
call
adc
mov
fists
dec
rcl
mov
loopne
xlat
pop
fyl2xp1
jbe
xor
loopne
pop
dec
ljmp
sub
rcr
int
sti
sub
in
pop
sbb
shll
adc
sub
jne
mov
mov
dec
jmp
inc
sbb
xchg
sub
mov
mov
iret
std
loopne,pt
imul
cmp
sbb
mov
jb
sarb
aad
insl
inc
mov
jnp
mov
lret
lcall
mov
lret
das
addl
ss
xchg
ds
out
jle
inc
std
add
sub
cmp
shl
sbb
fnstsw
js
add
xchg
fcos
adc
pop
pop
push
loop
jno
xor
stos
ds
iret
add
insl
lods
std
out
or
jmp
arpl
rol
jmp
je
sub
dec
sub
xlat
mov
aad
sbb
adc
jl
fwait
loop
lcall
pop
int3
mov
rolb
pop
sahf
fiaddl
push
sbb
or
or
xchg
xchg
add
dec
mov
jp
call
jo
lret
jp
les
jp
lret
xchg
repz
icebp
cmp
fldl
mov
test
lea
push
jo
out
or
inc
cltd
hlt
pop
adc
adc
insb
jo
nop
mov
add
pop
mov
out
sahf
loop
cmp
fstl
sub
sbb
pop
hlt
and
gs
mov
ljmp
jg
xchg
mov
pop
pushf
adc
leave
xchg
push
xlat
xlat
das
dec
push
and
fadds
xchg
adc
adc
jne
lods
pop
call
inc
imul
shlb
loop
and
mov
add
inc
enter
jbe
adc
cmpsb
cs
rolb
push
ret
mov
push
fsubrl
mov
and
lea
addr16
int
dec
xor
push
out
lock
mov
add
test
pop
sbb
negl
jle
cmpsb
fs
mov
jp
mov
jns
mov
adc
outsb
popf
gs
lods
ja
fsubp
int
aad
sti
mov
sub
mov
mov
sti
ret
adc
mov
mov
dec
repnz
xchg
repz
xor
push
mov
jne
mov
lods
fcomps
lock
aad
fildll
idivb
js
in
inc
pop
sub
bound
aas
aad
mov
adc
cmp
or
popa
jnp
adc
test
clc
and
fistps
sub
dec
repz
xorb
xlat
push
call
xorb
dec
call
jle,pn
mov
in
add
stc
push
out
loop
sbb
cmp
insb
and
mov
shll
xor
lcall
sahf
roll
jno
stos
push
xor
mov
pop
xchg
fcomps
push
leave
frstor
fwait
sbbl
outsb
scas
sbb
loope
sbb
lds
std
mov
aad
jnp
es
out
pop
xlat
lods
mov
popa
push
mov
xor
jp
add
fdivl
fsub
cli
test
push
jne
roll
sub
push
adc
push
insb
adc
add
sbbl
lds
icebp
lock
inc
repz
mov
fidivs
filds
repnz
jno
imul
sub
lcall
sti
scas
cmc
fcoms
push
jo
add
out
stc
jg
mov
xchg
mov
xlat
idivl
push
push
out
sub
xchg
aaa
pop
adc
adc
jnp
fdivr
or
sbb
adc
iret
sub
xchg
mov
cld
dec
mov
lret
pop
sbb
lret
pushf
mov
sbb
xchg
xor
lahf
out
xlat
sub
mov
cmp
loop
call
adc
jae
push
inc
xor
jmp
add
js
jmp
shl
lahf
int
xchg
stos
push
cmp
xchg
cmpsl
adc
inc
xorb
cmp
mov
push
push
add
dec
or
fimuls
jae
xchg
add
cmc
add
scas
lds
ss
or
xlat
adc
pop
iret
nop
jbe
jae
lds
mov
dec
cltd
aaa
out
jo
xchg
jne
loop
pop
add
fwait
rorl
sub
sbb
cmp
lods
mov
xchg
sbb
out
mov
xor
cmc
xor
out
xchg
mov
cmp
jo
fisubl
loopne
cmp
test
outsl
test
aaa
push
idivb
inc
mov
or
push
push
xor
add
add
insb
push
stc
lods
dec
les
pop
fists
dec
stc
jge
loope
insb
loop
inc
adc
test
int
repnz
repz
test
add
mov
lcall
mov
mov
push
cmp
data16
push
mov
loop
pop
cmp
mov
ljmp
sbb
data16
dec
cmp
mov
sbb
push
mov
cmp
ss
loop
lcall
jmp
jmp
add
rolb
loop
push
daa
pop
arpl
jbe
xor
sub
fld
js
adc
adc
dec
mov
and
cli
jo
mov
jne
es
adc
pop
mov
loop
fmul
fidivrs
mov
mov
sbb
pusha
sbb
add
inc
pop
xchg
sahf
ss
fwait
inc
sub
inc
movsl
add
pslld
dec
xlat
pop
call
insb
jg
stos
inc
mov
sub
push
iret
add
and
jne
scas
int
pop
jg
faddl
shr
subb
jecxz
xor
clc
call
int
in
mov
fiaddl
out
pushf
pusha
setbe
cmp
or
push
loope
cmpsl
sbbl
and
mov
push
push
sub
add
pop
leave
testl
xor
jo
jp
hlt
add
push
mov
stc
loopne
test
adc
dec
leave
call
dec
lret
sbb
fistps
mov
mov
jno
lock
fstl
and
sub
gs
aas
hlt
mov
add
adc
pusha
test
ljmp
adc
mov
pushf
sub
inc
push
fbstp
and
setl
movsl
mov
sbb
mov
mov
sbb
aad
mov
xor
sub
xchg
adc
idivb
gs
push
jg
sub
cmp
fistps
mov
push
push
add
mov
mov
jbe
pop
push
or
inc
jnp
push
sbb
mov
and
dec
add
mov
inc
bound
adc
out
mov
pop
push
ds
daa
lods
adc
incb
scas
cmpsl
in
mov
test
lds
xchg
test
sub
mov
push
xlat
pushf
mov
and
sbb
jg
jo
insl
nop
fbld
fdivrp
fs
loop
and
in
shrl
aam
dec
leave
out
int3
mov
jae
cld
cwtl
mov
rcrb
in
stos
test
sub
sbb
leave
jle
rcl
bound
int
aas
push
fldcw
cli
test
adc
push
or
lcall
scas
shl
jo
xchg
les
fidivrs
loop
gs
rclb
mov
lahf
jno
shlb
mov
sub
in
scas
sarl
das
orl
push
jg
xchg
das
arpl
aad
icebp
xor
cmp
pop
es
ror
dec
rol
xchg
jns
ja
push
out
popf
jb
jo
or
push
cwtl
sbb
mov
fdivp
xlat
loope
push
mov
xchg
dec
push
out
xchg
sub
xor
gs
dec
sti
repnz
sbb
insb
lods
out
or
mov
iret
movb
push
xor
inc
sbbl
jle
fstl
test
mov
inc
cmp
dec
jecxz
adcl
mov
call
out
aaa
inc
sub
daa
adc
inc
pop
cmpsb
insb
cmc
add
lock
loop
notb
pop
iret
push
test
or
sahf
pop
vpunpckhbw
push
fwait
add
test
shrb
or
cmpsl
mov
out
xor
cmpb
lcall
adcl
icebp
push
test
jo
xor
out
push
test
test
inc
mov
inc
xor
jae
add
push
insl
ljmp
stos
adc
out
aad
jmp
sub
inc
mov
andb
and
jg
jmp
insl
enter
je
ja
cmc
or
sbb
jno
ljmp
movsb
lahf
dec
es
hlt
or
cltd
mov
or
adc
jg
outsb
add
cmc
sub
adc
dec
push
mov
push
fdivr
test
lock
lret
pop
jp
adc
fbld
xchg
or
popf
jne
sarb
sbb
cs
pusha
iret
aaa
xchg
adc
aad
int
mov
repz
icebp
sbb
pop
outsl
adc
cmp
adc
popa
fldl
and
bound
insl
je
or
fdivrs
repnz
lods
and
fwait
sub
out
mov
scas
add
cli
mov
ljmp
andl
ja
fdivr
or
jecxz
in
outsb
cmp
repnz
pop
xor
fisttps
xchg
adc
pop
push
mov
and
mov
cmp
aad
sbb
dec
shl
mov
jmp
mov
outsb
add
scas
add
and
fwait
jb
cmc
mov
xchg
and
or
out
in
push
sti
or
aaa
addb
sub
add
lea
push
adc
push
loop
ss
dec
imul
inc
cmp
add
cli
addb
adc
push
jne
pop
sahf
xchg
enter
ljmp
xchg
sub
lahf
outsl
adc
mov
mov
mov
xchg
or
jnp
insl
in
int
jns
cmp
div
pushfw
shll
mov
jmp
push
sbb
mov
ljmp
les
mov
out
iret
sub
dec
lods
dec
jns
jb
aaa
sarb
mov
and
and
cld
movaps
pop
out
xlat
mov
adc
cmpsl
adc
fdivl
mov
xchg
or
imul
int
xor
negb
push
mov
dec
pop
xor
cmp
mov
cmpsl
xlat
fdivrp
das
inc
sub
enter
pop
adc
in
pop
inc
test
jecxz
cmc
adc
lcall
sbb
stos
call
outsb
pop
lds
mov
mov
xchg
lret
das
fs
adc
and
cmp
lea
sbb
jae
inc
inc
xchg
int3
inc
ret
cmpsb
lahf
or
jae
out
lods
sub
and
cmpsl
sahf
jno
and
js
rolb
aam
int
push
sahf
mov
sub
jnp
aam
repnz
dec
sub
xchg
clc
jns
cld
cmpb
inc
sbb
sbb
mov
inc
mov
stc
push
outsb
loopne
mov
das
lahf
mov
andl
sbb
fisttps
or
jp
ret
scas
inc
inc
mov
sub
xchg
mov
cmp
cli
and
punpckldq
mov
leave
sbb
mov
mov
xchg
loop
addb
pop
xor
rcll
jns
jg
pop
add
scas
loop
add
mov
in
cmp
setnp
repnz
jp
pop
jle
and
scas
jmp
sub
xlat
jbe
outsb
in
sub
pop
cmp
into
cmpb
inc
mov
add
jle
lea
popa
sbb
out
inc
stos
pop
inc
lret
pop
mov
inc
mov
testb
and
and
test
push
jo
cmp
jne
icebp
int3
xlat
loope
xor
int
fistps
push
xor
mov
xor
push
test
mov
mov
push
xor
cli
stc
jne
stos
cmp
mov
push
sub
loop
adc
xor
scas
aam
sbb
mov
sbb
xchg
lock
jbe
sbb
or
jecxz
lods
sbb
rcl
mov
dec
add
mov
mov
aas
lds
mov
stc
arpl
decb
jne
scas
aas
test
xchg
jmp
xlat
cmpsl
imul
cmp
sbb
and
out
pop
cmc
stc
cmp
in
and
sbb
aas
shlb
add
imul
mov
hlt
and
int
insl
sahf
aas
dec
add
mov
sub
out
and
adc
ljmp
push
mov
loop
in
mov
adc
in
mov
rolb
push
mov
dec
daa
test
jne
arpl
or
mov
in
add
neg
xlat
pop
inc
mov
ret
add
pusha
inc
callw
ja
leave
add
cmp
outsl
or
mov
ljmp
xor
or
inc
push
subb
mov
pop
pop
loop
push
jg
idivb
lods
cmc
cmc
dec
push
xor
mov
les
or
mov
les
ljmp
in
xchg
and
out
jp
js
ficompl
and
adc
addr16
outsb
xor
cmp
xchg
cmpsl
inc
xchg
into
push
mov
inc
cmp
push
scas
sbb
mov
es
inc
add
test
sarb
int
or
cld
sbb
enter
xlat
shrl
into
add
or
sbb
inc
mov
repz
outsb
sbb
xorl
adc
inc
popf
imull
roll
or
aad
addr16
xor
cmp
notl
stos
lcall
add
jmp
xor
iret
loopne
sbb
mov
add
push
or
das
gs
ror
js
push
andb
in
add
push
mov
mov
fs
aas
xchg
adc
inc
mov
jno
outsl
xchg
rol
xor
xchg
jmp
loope
inc
adc
jp
inc
shrb
pop
pop
push
repz
mov
std
lea
mov
mov
repnz
push
sbb
andl
cmp
pop
mov
xor
inc
sbb
or
scas
jno
jp
loopne
lods
cmp
movsb
xor
flds
push
dec
sarl
mov
lahf
std
cmp
jae
xchg
cmp
xchg
jo
dec
mov
leave
jp
pushf
push
das
add
pop
mov
pop
sbb
add
sub
pop
adc
cwtl
in
subb
das
or
push
pop
cmp
lcall
mov
inc
and
add
lret
cltd
ss
mov
pop
xchg
push
repz
push
fcmovb
and
add
xchg
cmc
and
fmull
in
imul
xlat
addr16
pop
idivb
push
sbb
or
mov
xchg
arpl
inc
push
shrb
imull
sahf
push
adc
leave
xchg
ja
shll
inc
loop
lods
add
aam
pop
decb
mov
out
push
mov
sub
xchg
sbb
add
sub
clc
jbe
sbb
xor
adc
stc
or
xlat
sbb
cmpsl
sbb
insl
lahf
xchg
lods
sbb
mov
cmc
inc
jg
push
loopne
dec
addr16
dec
mov
or
in
push
lret
fisttpll
sahf
aas
outsb
insl
sbb
sub
rclb
cmp
sti
sbb
mov
cmp
lods
sbb
sub
push
fisttpl
pop
in
loop
mov
or
hlt
ss
not
or
mov
shrl
pusha
xchg
xchg
outsb
fldcw
cmp
int
xchg
push
insb
push
push
lods
testw
adc
out
lds
lahf
icebp
jmp
into
xor
scas
lret
inc
mov
xchg
xchg
sbb
dec
idiv
dec
ds
das
fists
fwait
outsb
pop
mov
scas
bound
dec
xor
mov
xchg
mov
mov
sub
cmp
out
cwtl
xchg
cmp
pop
push
aam
mov
mov
xchg
cmp
mov
adc
mov
jl
sub
xor
adc
xchg
pop
hlt
repz
sbb
lahf
loop
movsl
mov
dec
mov
out
shlb
or
pop
aam
scas
enter
lds
mov
clc
dec
push
rcrl
mov
mov
adc
inc
push
lret
pusha
adc
lods
sbb
jbe
adc
ss
push
lds
in
mov
push
xor
test
mov
fs
mov
sbb
pop
imul
out
inc
jno
fwait
mov
ljmp
ret
movsb
aam
lret
sbb
inc
aam
sub
aad
xchg
mov
sub
pop
fisttpl
ss
or
sbb
loop
xchg
js
incb
inc
int3
pop
call
xor
or
add
or
lahf
sarl
pusha
sbb
arpl
cmp
sub
sbb
mov
icebp
insb
shll
fnsave
add
ds
xchg
das
cmp
jae
adc
cld
mov
test
in
sub
sti
loopne
fwait
aas
and
pop
jb
mov
cmc
sub
sahf
push
lret
incl
xchg
test
mov
lcall
ror
insb
cs
lea
ror
testl
dec
sbb
enter
ja
fiadds
cwtl
mov
in
adc
jl
lahf
pop
jne
sbbl
cs
mov
fdecstp
pmullw
xor
dec
cld
mov
scas
xchg
inc
and
pop
xchg
push
pop
add
loop
ret
dec
scas
mov
mov
call
popa
int3
xor
ret
shlb
movsl
xchg
add
cmp
jl
ja
sbbl
stos
mov
mov
and
fistpl
and
add
jno
dec
sub
call
cmp
inc
lahf
adc
das
leave
movsb
push
pusha
popf
shrb
mov
mov
clc
cli
add
jmp
xchg
adc
xchg
lahf
cmp
fsubs
jae
imul
push
or
push
push
or
fisubl
mov
jp
aam
out
je
outsb
adc
pop
jle
lahf
sub
jmp
int
add
and
iret
lret
outsl
clc
jns
shll
xchg
pop
xor
mov
or
sahf
dec
js
aad
add
ret
movsl
es
popf
and
and
push
fisttpll
je
rolb
adc
mov
stc
insb
push
fstpt
stc
js
mov
ljmp
xor
jnp
sub
sbb
push
shll
inc
ds
iret
fsts
pop
aas
pushf
lahf
adc
sarl
loop
stos
int
xor
mov
push
push
jmp
push
adc
jb
mov
xor
and
adc
cli
div
pop
add
or
adc
mov
or
mov
xchg
and
push
mov
das
mov
and
and
pop
adc
pop
mul
pop
adc
adc
jp
add
xchg
cmp
jg
mov
xchg
aaa
mov
iret
push
ja
mov
stos
repz
inc
cltd
or
cs
and
and
sub
ret
xchg
je
popf
ret
jle
xor
jg
fwait
jle
sub
or
dec
ja
or
xchg
jmp
adc
mov
add
cltd
and
sub
loop
xorb
jp
or
push
sub
mov
shlb
inc
rcr
pop
cltd
xchg
sbb
sbb
adc
pop
mov
fisubrl
add
sub
lahf
outsl
dec
pushl
decb
or
lods
add
push
push
loop
sub
cmpsb
pop
mov
nop
jns
and
sahf
and
jnp
mov
lea
ljmp
dec
mov
aaa
adc
divb
add
push
pop
sbb
iret
cmp
int
xchg
int
cli
or
xor
inc
mov
lea
fldt
adcb
jle
idivl
aaa
jg
repz
pop
dec
mov
mov
xlat
in
mov
cmc
add
out
lcall
lds
xchg
sbb
or
mov
inc
add
mov
jo
sbb
push
pushl
cmc
ret
out
and
pop
shr
fstps
lock
scas
pop
jecxz
popf
lahf
cld
xchg
pop
stos
xlat
fsubr
jns
xlat
gs
imul
sti
mul
mov
xor
outsl
outsl
loop
xchg
cmp
test
mov
fistl
sbb
in
sbb
fs
lods
sarl
shlb
movzbl
das
idiv
out
xor
add
adc
sbb
hlt
fbstp
data16
ljmp
and
daa
push
decl
mov
mov
xchg
adc
movsl
inc
push
repz
and
cmp
addr16
xor
xchg
in
jg
in
in
dec
out
lods
fistpl
out
fisubrl
push
sbb
push
decb
mov
lcall
lods
fcmovbe
or
ficompl
sbb
out
sub
cli
ljmp
mov
xchg
in
cli
es
xchg
or
lds
inc
lret
enter
mov
enter
ljmp
jb
push
push
sbb
insb
icebp
xor
es
lods
shrl
std
cmpsl
loop
fldcw
scas
dec
mov
pop
xor
dec
mov
mov
xor
jle
stos
lret
ljmp
push
sub
xor
test
jl
cwtl
push
xlat
and
bswap
cmp
cmpxchg
and
fisttpl
enter
sub
mov
cmp
xchg
xor
mov
jae
cmp
in
sub
mov
push
test
shll
int
push
cmpsb
imul
shrl
inc
arpl
int
fsubrs
scas
mov
das
or
push
fs
mov
pop
popf
addl
or
aad
jno
addl
xchg
push
int
mov
push
or
out
sub
jno
popf
fists
orb
test
sbb
or
adc
scas
sub
dec
add
fidivs
insl
xchg
sub
cmpsb
insl
in
out
adc
xor
fsubr
mov
add
aam
mov
mov
insb
xchg
inc
xlat
iret
loop
push
rorb
repz
pop
fistpl
roll
fistps
inc
xor
gs
cli
sub
movsl
ret
stos
cmp
pusha
xchg
xchg
leave
popa
ret
adc
push
sub
dec
push
mov
dec
or
insl
add
jno
sti
jnp
popf
push
mov
push
out
loopne
aaa
xchg
ficoms
sbb
add
mov
sub
inc
je
cmp
xor
mov
mov
iret
sti
rolb
jg
inc
out
addr16
stc
icebp
scas
pop
adc
xchg
fnsave
mov
cmpsl
sbb
mov
dec
adc
or
incl
out
loop
mov
sahf
add
push
dec
aam
aas
xor
mov
push
jns
or
cltd
filds
xorb
gs
outsl
add
or
add
fs
jecxz
outsb
xor
or
icebp
cmpsl
push
mov
cmpsb
cmpsb
aam
or
lods
aad
pop
sub
add
sbb
add
int3
cli
mov
pop
int
xor
jbe
pop
jg
dec
lcall
outsb
mov
lcall
bound
inc
mov
aam
lret
test
mov
adc
add
cmp
xchg
mov
mov
xchg
cmpsb
aam
out
cmpb
push
lds
mov
cmp
mov
cmp
and
xchg
adc
push
or
cwtl
mov
lods
ror
adc
cmp
adc
inc
jo
or
jne
push
xchg
mov
sti
enter
xor
xor
jno
adc
mov
add
ljmp
pop
sub
movsb
inc
frstor
cmp
mov
add
push
imull
fcoml
imul
jno
dec
pop
sbb
pop
pop
or
and
inc
imul
mov
cmp
push
scas
out
mov
adc
pushf
xor
dec
sbb
jno
rclb
or
neg
push
rorb
enter
inc
sbb
xchg
push
in
aam
ja
and
sub
xchg
sbb
mov
adc
pop
add
iret
adc
lahf
adc
mov
xchg
fwait
dec
push
adc
inc
lret
or
jg
and
outsb
jle
pop
push
pop
push
mov
ret
icebp
pop
or
out
das
test
and
xchg
xlat
sub
rcrb
adc
fistpl
dec
add
in
push
imul
lcall
mov
xchg
lods
mov
dec
add
dec
push
mov
ja
popf
mov
jnp
xor
or
stos
std
pop
les
ret
sbb
add
aas
mov
fiadds
imul
dec
ss
mov
xchg
xor
mov
cmp
adc
out
movsb
pop
test
mov
pop
rclb
rcrl
xchg
je
test
and
repnz
dec
in
sub
jmp
fisttps
dec
sbb
lret
cmp
subb
jae
mov
mov
jl
sub
mov
scas
mov
add
or
sbb
adc
test
repnz
test
incb
dec
insl
out
xor
jl
shlb
std
pushf
cmpsl
jg
cmp
mov
lahf
cs
xchg
sbb
mov
clc
add
call
xor
jle
adc
fstp
add
lahf
fistpl
fiadds
test
or
imulb
jp
leave
aam
pop
enter
ljmp
cmp
adc
and
insb
in
imul
jmp
nop
dec
mov
xchg
das
arpl
test
insl
sub
mov
je
bound
cmp
shr
add
stc
push
pop
sbb
out
into
jb
push
xorb
subb
jle
push
push
pop
or
cli
adc
std
pop
dec
push
add
test
inc
sti
dec
mov
push
subl
dec
mov
fstpt
enter
es
in
mov
jnp
cmp
aam
jp
jmp
idivl
out
lahf
pop
add
enter
jnp
test
je
lock
rcll
xchg
jmp
and
outsb
js
cmp
mov
mov
mov
xchg
xor
push
loop
stos
xchg
rcr
lahf
adc
jno
sbb
mov
loop
psadbw
nop
cmpsl
pop
stos
bound
pop
add
int
pop
pop
ss
mov
or
or
or
adc
aam
daa
sbb
adc
and
unpcklps
sub
loop
mov
inc
dec
push
mov
stos
fidivs
daa
call
scas
dec
sub
shlb
and
pop
xor
in
and
jns
lock
loop
sbbl
jbe
outsl
leave
jmp
jno
aas
adc
loopne
lcall
add
jg
adc
cmp
mov
movsb
cltd
sarl
pop
imul
nop
std
lahf
ss
fistpll
mov
iret
shlb
cmp
popf
jmp
pop
mov
mov
adc
sbb
sbb
inc
addr16
adc
mov
imul
and
addr16
mov
sub
imul
leave
sahf
test
xor
jg
sbb
sub
sbb
jle
cmp
sbb
sub
notb
xchg
and
push
pop
mov
ds
xor
sti
adc
outsb
sbb
clc
test
adc
xchg
push
imul
inc
rcr
or
iret
test
negl
jnp
xchg
rcr
mov
add
stos
pop
lds
dec
mov
imul
loop
sbb
pop
mov
in
ret
push
xchg
cmp
cwtl
rolb
in
int
pusha
frstor
and
add
rcr
sub
add
loop
fisttpl
xchg
inc
cmp
mov
nop
pusha
push
fstpl
xchg
cltd
inc
add
sub
adc
or
ret
mov
cltd
testb
sbb
std
mov
sbb
in
add
sbb
adc
xchg
cmp
cld
mov
cltd
test
mov
jl
lea
mov
cs
xor
shll
test
ret
mov
inc
pusha
xchg
test
push
lahf
push
mov
pop
es
xlat
pop
adc
imul
out
adc
aas
add
dec
ljmp
or
xor
xchg
into
cmp
xlat
inc
outsb
xor
push
xchg
cmp
sbb
mov
mull
sub
pop
icebp
pop
and
call
das
out
cltd
imul
call
fwait
jo
test
lret
inc
mov
in
pop
and
gs
pop
push
lods
mov
stos
scas
dec
scas
adc
dec
mov
test
mov
popa
pop
decl
cmpsl
scas
mov
aas
in
mov
add
test
out
ja
insl
xchg
negl
pop
aas
in
pop
pushl
call
xlat
adc
push
or
cmp
cmp
sub
mov
dec
pop
cmp
dec
stos
add
sub
mov
mov
mov
push
xor
jge
out
ja
subb
insl
repz
aaa
xor
cmp
hlt
inc
cmp
jg
jns
test
adc
jmp
sbb
imul
cmp
out
mov
test
aaa
push
hlt
fildl
jno
pop
aaa
xchg
jl
cltd
pop
mov
mov
jg
push
jns
aaa
cmp
daa
loop
push
jmp
cld
sub
pop
push
sbb
push
mov
sub
cs
subb
pop
scas
orb
push
out
mov
push
test
push
inc
arpl
test
mov
and
int
mov
loop
cmp
ret
fs
sub
inc
sbb
loopne
aad
outsl
and
enter
cmp
add
cmp
pop
testb
adc
xchg
leave
call
iret
push
mov
pop
adcl
push
es
ss
mov
ret
fstps
sti
cmpsb
sbb
pop
movsl
mov
dec
roll
mov
int3
inc
sahf
push
leave
pop
xlat
outsl
mov
je
loope
inc
xor
mov
inc
sub
pop
add
outsb
into
push
push
xchg
add
mov
pop
sbb
insb
sub
xor
loop
inc
and
stos
jns
add
in
shll
dec
pusha
insl
inc
ret
jge
lcall
sub
sarl
subb
fadds
mov
aad
push
pop
jecxz
scas
bound
psubsb
xchg
mov
stos
out
inc
shlb
enter
inc
pop
insb
cmp
in
mov
push
rol
stos
andps
fidivs
dec
dec
les
xor
lahf
in
add
repnz
sbb
jbe
add
loop
jmp
or
xchg
shlb
pop
push
rcl
pop
arpl
and
push
js
add
pop
xchg
sbb
enter
lock
jg
lret
js
pop
and
imul
adcl
int
scas
inc
xor
out
cmp
stos
jg
sub
out
outsb
je
sub
or
sbb
lds
outsb
add
or
fcomip
cmc
loope
inc
xor
and
sahf
mov
mov
pop
and
int3
shlb
test
pop
insl
mov
cmp
mov
ds
jbe
in
add
faddl
loop
sbb
lds
add
push
inc
outsb
leave
dec
pusha
cmp
cmp
mov
jmp
mov
in
adc
inc
nop
les
ret
sarb
xchg
jecxz
xchg
sbb
mov
repnz
test
loop
ss
subl
lds
inc
fbstp
enter
mov
dec
pop
add
ficoms
pop
inc
iret
xchg
jecxz
add
out
pop
aam
lahf
adc
fistpl
pmaxub
mov
lods
cmpsl
test
cmp
fstps
cmc
out
adc
add
lods
imul
lret
pop
or
jae
inc
je
roll
jecxz
popf
adc
add
iret
fisttps
push
mov
enter
and
fisubrs
add
fs
popa
and
adc
push
or
and
fisttps
pop
jo
jae
mov
scas
imul
hlt
push
aam
int3
lock
movsl
jnp
cmc
dec
stos
push
pop
loopne
ja
push
lret
int
cmp
lret
je
push
jnp
push
cmp
add
sbb
fisttpll
jg
mov
or
bound
sbb
insb
sbb
cs
inc
sbb
add
push
and
xor
dec
push
enter
insb
ffreep
sar
and
mov
mov
mov
lret
jbe
mov
push
cmc
test
lock
lcall
outsb
pop
pop
adc
lahf
mov
xchg
lods
inc
or
inc
adc
clc
push
push
mov
dec
mov
xchg
nop
sub
or
roll
dec
inc
sbb
arpl
pop
sub
jg
pushf
repz
pop
lods
mov
hlt
add
inc
inc
neg
popf
icebp
addr16
out
movsl
adc
pushf
shrb
add
cmpsb
adc
pop
fisubs
xchg
and
lock
mov
push
aas
test
pop
adc
cmp
sub
int
adc
mov
mov
sub
negl
aad
xor
or
rcll
sbb
jmp
xabort
pop
loop
in
xchg
add
xor
pushf
pop
mov
push
push
out
mov
push
cmc
inc
xor
xchg
or
xchg
adc
jno
fwait
pop
add
or
aam
into
leave
dec
mov
enter
sub
sub
and
mov
pop
addb
adc
xor
cld
sti
jg
cmpsl
loop
mov
pop
arpl
mov
clc
cmp
push
add
dec
lret
dec
jg
cld
sub
sub
cmpsb
je
adc
lods
cli
leave
cwtl
jns
leave
shrl
test
loop
pop
ljmp
fldt
pushl
or
sub
pop
dec
icebp
testl
or
sub
addr16
mov
ljmp
sub
andl
lahf
or
fisubs
sbb
add
in
enter
jle
adc
sub
cmp
out
loop
out
mov
or
dec
jl
push
inc
popf
cmp
test
addr16
loop
js
stc
lret
fisttpl
dec
sub
and
nop
sub
mov
xchg
add
push
push
decl
cmpsl
sub
xchg
dec
jno
cmp
xchg
pop
ss
xor
lahf
repz
mov
mov
outsb
sub
loop
xor
sub
aas
xchg
jne
in
fstpl
xlat
cld
loop
imul
mov
sub
push
cld
fsubl
andb
sbb
cwtl
dec
and
sbb
stc
mov
je
call
sbb
insb
inc
outsl
or
or
jp
cmpsb
lds
imul
test
cmp
pop
push
mov
push
sti
pop
sub
idivl
js
adc
mov
fistps
into
inc
jnp
xor
mov
xor
outsb
and
test
enter
xor
xchg
mov
ja
testl
fdivr
leave
sbb
lods
adc
xor
xorb
adc
int
loopne
loope
neg
ret
push
sub
loop
adc
xchg
out
pop
xor
call
push
xchg
jne
cmp
lea
push
mov
xchg
xor
addl
decb
fstp
push
scas
repnz
addr16
push
in
pop
stc
lcall
inc
mov
jo
adc
jb
sub
sub
icebp
push
adc
xor
negb
push
add
pop
add
push
cmpsl
xchg
push
mov
push
xchg
mov
out
xchg
mov
arpl
ret
dec
or
sbb
push
push
fisttpll
mov
iret
adc
jmp
adc
mov
hlt
popf
sbb
push
stos
ljmp
movsl
cli
das
call
inc
jne
sahf
imul
enter
mov
jo
scas
sub
movsl
inc
jnp,pt
cli
leave
test
rcrl
add
dec
mov
mov
pop
out
cld
or
mov
add
rorb
push
xor
in
mov
outsb
inc
push
addr16
mov
out
fldenv
xchg
jmp
pop
sbb
jge
cmpsb
cmp
out
push
push
out
pop
ficoms
and
xor
dec
test
mov
loop
xchg
xor
pop
jecxz
and
pop
adc
jle
insl
incb
mov
xor
mov
jmp
adc
faddl
loop
push
fidivrl
sub
out
rorl
dec
les
mov
add
push
mov
adc
sub
mov
or
incb
sub
stos
enter
xor
into
sub
and
lret
jle
daa
insb
inc
pop
cmpsb
je
dec
xor
mov
rolb
pop
add
sub
pop
fadds
fcmove
gs
xchg
sahf
popa
sti
sub
iret
popf
cmp
inc
movsl
fisttps
adc
mov
adc
add
mov
and
xchg
lcall
mov
outsb
lods
out
cmp
push
adc
push
mov
into
mov
pop
jmp
cmc
mov
test
shrl
or
jnp
xor
in
xor
or
test
int
mov
push
fmul
jo
push
adc
mov
dec
in
mov
lret
notb
dec
pushf
pop
xchg
in
mov
xor
sub
ljmp
adc
sub
mov
dec
fists
cli
dec
jg
iret
out
lcall
icebp
xor
and
jmp
bound
jg
mov
inc
arpl
outsb
out
les
outsb
data16
sbb
daa
loopne
jbe
pop
mov
pop
pop
cmp
fcoml
jecxz
outsb
testl
mov
shll
dec
and
sub
je
je
jnp
mov
push
and
jns
scas
lret
movsb
pop
ljmp
or
ffreep
push
adc
test
xor
add
das
xor
cvtps2pi
repz
add
movl
lcall
add
mov
addr16
sbb
shll
lcall
je
sbb
ds
sti
out
xchg
js
or
fcom
xor
ds
test
jbe
fwait
pandn
cmp
add
lcall
fdivl
cmp
mov
push
sahf
mov
cmp
and
es
adc
aam
and
insb
xchg
cmp
push
test
cmp
sub
lock
pop
mov
mov
add
mov
test
call
sub
push
dec
jno
loop
mov
insl
lret
int
sub
xlat
jne
fisttpl
push
jo
out
lods
add
lret
pushf
test
lcall
mov
mov
lahf
insb
popa
or
mov
nop
dec
mov
mov
xchg
ficoml
xlat
jmp
dec
add
fdivrl
cmpsl
inc
call
cmpl
hlt
jle
mov
outsb
lret
dec
enter
mov
mov
push
popf
cmpl
fiadds
and
dec
rcr
push
push
inc
xchg
dec
out
inc
dec
fisubrs
dec
mov
andb
jge
adc
out
cs
inc
cmp
mov
int
inc
mov
cmp
inc
pop
push
dec
pop
xor
jmp
mov
pop
sahf
loop
imul
or
rcrl
jecxz
les
push
cmpsl
sarb
push
jb
pop
push
hlt
dec
mov
lahf
adc
in
xor
mov
sar
adc
insl
idiv
jge
mov
or
inc
mov
jo
cmpsb
push
push
jp
or
mov
inc
xchg
fidivl
pusha
mov
add
push
jle
loop
xchg
test
push
lds
jp
pushl
in
jge
adc
sub
roll
call
loopne
xor
cltd
mov
sub
and
stos
jmp
out
dec
xlat
dec
test
testl
pop
dec
jge
stos
cs
mov
sub
lds
test
xor
pusha
out
xchg
add
xchg
jge
mov
dec
pop
iret
mov
sbb
test
mov
mov
fcmovbe
dec
movsl
nop
scas
aaa
xor
in
inc
ffreep
add
leave
xchg
or
lahf
dec
mov
mov
push
add
aad
dec
jae
sahf
adc
adc
int
mov
ja
adc
out
loop
in
ljmp
insb
loope
imul
xchg
out
push
sbb
shl
out
fsub
adc
rorb
loop
inc
mov
frstor
dec
flds
xchg
cmpsl
and
mov
insl
inc
shr
dec
inc
in
cmpsb
push
rorl
std
inc
out
mov
loop
stos
lods
push
pop
cwtl
jne
mov
fs
and
mov
pop
popa
imul
or
movsl
add
sub
push
mov
imul
sti
cmp
mov
add
push
cmc
add
shrb
xchg
xor
mov
outsl
jecxz,pn
inc
push
or
in
jl
adc
xor
jns
mov
lcall
jns
cli
mov
mov
inc
or
push
enter
fdivrl
lret
push
or
pop
aaa
cltd
adc
push
mov
mov
adc
scas
in
dec
int
jns
pop
sbbb
aad
ret
cld
push
pop
mov
jmp
aas
int
lret
lahf
sbbl
adc
cld
push
cmpsl
stc
fidivs
cmp
adc
and
pop
jne
jle
jo
adc
pop
cltd
xor
push
mov
jne
loop
cld
fcomp
or
adc
pop
dec
loop
adc
cmp
dec
incl
add
cmp
aam
sub
sahf
mov
adc
bound
sub
add
fnstcw
testb
inc
adc
xor
test
test
push
ret
xchg
jle
add
and
sbb
stc
mov
or
shrb
add
mov
push
enter
lahf
mov
mov
cmc
mov
jge
loop
mov
ror
dec
cmp
adc
dec
adc
inc
push
add
rcl
jo
loop
shl
lods
call
xorl
mov
outsl
mov
popf
in
mov
push
sub
mov
adc
cld
lcall
push
jae
rcll
or
jmp
add
inc
scas
scas
push
fwait
jnp
mov
or
lahf
ret
pushf
lret
dec
lcall
mov
mov
fldl
addb
or
xor
fs
scas
mov
dec
out
call
les
jno
mov
fisttpll
shl
pop
js
push
lds
movsl
and
ss
push
ljmp
lods
popf
add
pop
mov
das
fbld
sbb
mov
or
out
cmp
xchg
cmp
out
mov
scas
sti
aas
gs
mov
cwtl
dec
xor
mov
shll
mov
adc
test
stc
push
and
pmulhuw
adcb
cmp
aaa
mov
pop
mov
cmpsl
movsl
cld
pop
fs
sbb
cli
insb
cmp
je
addr16
pushf
pop
sar
push
loopne
dec
mov
das
fidivrs
add
outsl
mov
mov
cmp
ret
sbb
pop
sub
mov
push
pop
cmp
iret
cltd
shlb
add
sbb
jge
icebp
dec
fadds
int
jae
shrb
cmpsl
loop
cmp
cli
push
gs
pop
mov
sub
dec
fimull
mov
ljmp
pop
scas
mov
subl
xchg
test
sub
cltd
lds
mov
stos
jp
jae
rolb
sbb
adc
pushf
jle
loop
cmp
mov
pop
or
loop
and
mov
cmp
mov
scas
push
xlat
es
aas
sub
mov
pop
cmc
lea
and
add
xchg
pop
cmpb
mov
mov
jnp
imul
cmpsb
iret
adc
push
or
mov
add
pop
leave
xor
jg
inc
inc
mov
jae
lods
or
sbb
adc
mov
neg
add
add
loope
ja
mov
mov
jae
imul
pop
icebp
sbbl
fsts
jno
xchg
inc
imul
push
pop
xor
mov
pop
pop
cld
das
nop
daa
push
scas
xor
incb
stos
test
mov
push
cmp
lahf
adcb
test
sub
add
dec
mov
mov
jp
pop
mov
xchg
sbb
push
imul
gs
rclb
jb
std
xchg
push
dec
aaa
call
fisttpl
inc
testl
push
inc
mov
push
push
stc
push
cmc
xlat
outsb
int
rcll
mov
cli
js
push
idiv
popf
sub
sub
add
loop
mov
pusha
jae
mov
divb
push
push
loop
lods
pop
or
out
sub
rorl
add
push
mov
sub
sbb
xchg
mov
aas
aaa
sar
jno
mov
dec
xchg
pushf
lret
js
rorb
roll
int3
push
out
jle
in
jle
ss
in
pop
sbb
iret
nop
std
xchg
lahf
cltd
mov
and
jmp
cltd
add
mov
adc
inc
movsl
fldl
nop
ret
inc
dec
mov
cvtpi2ps
loop
fs
lea
cmpsb
mov
popa
jb
mov
cmp
cld
loop
scas
add
popa
and
addr16
loopne
cltd
ffree
pop
daa
dec
inc
jbe
or
repz
addr16
stos
xchg
imul
add
aaa
mov
mov
loop
sub
add
loopne
jge
or
out
inc
into
fld1
addr16
push
movb
adc
and
call
or
mov
cmpsb
fnstsw
sub
lahf
aad
dec
cmp
push
jp
int
xor
add
hlt
push
sub
dec
std
push
sub
jmp
sbb
mov
dec
adc
pop
pop
adc
adc
cmp
push
cmpsb
xor
nop
xchg
idiv
xchg
sub
cmp
int
push
sbb
mov
pop
insb
lcall
mov
lret
inc
pop
push
pop
icebp
scas
xchg
pop
cwtl
scas
and
xlat
and
daa
sub
mov
loop
sbb
idivb
add
sbb
cltd
add
sbb
add
jnp
mov
fwait
rorl
xor
sub
in
pushf
xor
leave
mov
jmp
sbb
dec
hlt
and
int3
add
xchg
sbb
add
lods
pop
je
jl
ds
push
dec
lcall
setg
sbb
lcall
stos
bound
xchg
pop
clc
lret
xchg
idivl
push
hlt
out
aaa
jbe
addl
xchg
pop
addr16
jne
lods
push
or
and
add
shll
int3
leave
xchg
cmpl
xor
int3
je
jmp
sti
and
cmp
ss
popf
cmp
mov
mov
jae
mov
mov
outsl
adc
and
and
aad
shr
push
mov
inc
mov
ja
jb
rcrb
sarl
jg
add
dec
je
outsb
mov
ja
loope
mov
dec
jb
xor
scas
mov
lahf
imull
xlat
mov
cmp
or
jno
aas
dec
pop
add
fnop
pushf
push
in
ret
jnp
adc
or
bound
movsb
sarb
dec
mov
movl
and
xchg
push
or
cmp
loop
adc
daa
leave
test
popf
pushl
std
or
sub
ret
cmp
push
add
lret
push
pop
aas
jecxz
adc
mov
dec
mov
rcrb
je
mov
push
loopne
sbb
sub
or
aad
cmp
popa
sahf
push
mov
lahf
int
sbb
adc
xchg
negb
jne
in
div
lret
sbb
fisubs
mov
rcr
fbld
mov
mov
push
push
mov
sahf
sbb
dec
pop
fildll
ret
push
adc
into
or
jo
jle
daa
fsubs
push
add
sub
aam
cmc
sub
mov
lea
in
mov
fwait
xchg
add
sahf
jecxz
and
daa
data16
sbb
ret
sbb
iret
cld
sub
out
or
mov
mov
jo
mov
sub
inc
sub
xlat
test
jo
arpl
lahf
cmc
xchg
add
jge
div
cmp
lahf
mov
incb
sbb
pop
xor
loop
pop
mov
sub
xor
pop
in
sbb
jge
or
jp
stc
adc
or
negb
arpl
loopne
ljmp
popf
jge
push
test
jmp
mov
popf
xchg
adc
scas
mov
ret
push
push
jmp
add
or
cwtl
cld
lahf
lock
lcall
lret
xorb
scas
enter
jne
ss
push
stos
idiv
pop
mov
xchg
adc
sbb
add
sahf
outsb
int3
pop
pop
mov
int3
in
or
jl
addl
mov
insb
xchg
mov
xchg
dec
stc
out
xchg
cmp
mov
in
fsubrs
and
pushf
jne
mov
mov
dec
into
cmp
jg
hlt
jae
lret
add
fiaddl
loop
sub
sti
sub
mov
lds
loopne
mov
clc
outsl
sbb
and
iret
and
dec
dec
jle
mov
shl
popf
xchg
add
mov
xorl
cmp
pop
call
xchg
jne
or
loop
sbb
adc
loop
inc
ret
mov
cs
cmp
cli
push
jbe
aaa
adc
sub
scas
pop
mov
aam
mov
sub
adc
cmpsb
pop
pop
xor
les
mov
shlb
mov
xor
jmp
mov
mov
enter
ds
mov
fbstp
xor
push
imul
push
imul
cli
iretw
gs
dec
push
cld
sbb
push
rorl
pop
push
xor
sub
sub
inc
push
jl
dec
push
cmpsb
pop
fdivs
loop
sbb
ret
clc
xor
ss
xor
cmp
test
insl
inc
fld
out
outsl
push
popf
mov
jl
mov
shll
add
mov
jg
lret
and
or
fildl
adc
lock
mov
push
jns
aaa
sub
outsb
popf
imul
daa
pusha
mov
aaa
xorb
sub
cs
and
rcrb
and
arpl
xchg
loop
ror
jne
iret
cmp
sbb
xchg
shll
mov
jp
int3
push
xor
testl
sub
add
inc
jne
sbb
add
ja
xchg
adc
int
stc
gs
mov
mov
xchg
cmp
adc
push
cmp
test
inc
adc
js
mov
lods
lcall
div
sbb
in
into
enter
mov
adc
mov
adc
popf
or
ja
inc
and
in
pop
jg
inc
cmp
ret
push
je,pn
int
cmp
push
enter
jae
loop
inc
xor
mov
dec
mov
pop
sub
test
dec
push
and
add
icebp
push
adc
adc
mov
std
pop
add
in
roll
xchg
jno
loop
movsb
ret
jg
pop
sub
rcrl
adc
and
fmuls
outsl
pop
out
jle
aaa
sbb
shlb
ret
push
aad
inc
push
cwtl
cmpsl
xchg
add
std
ret
ficomps
mov
add
pop
data16
stos
add
mov
mov
cmp
and
xchg
filds
fisubl
dec
mov
shll
sub
fmull
lock
out
jns
test
push
mov
fdiv
mov
pusha
lret
out
adc
ret
loope
xor
fcmovnu
je
lods
rorb
pop
push
push
aad
pushfw
sbb
out
xlat
scas
fstpl
adc
and
cwtl
clc
ret
push
into
cmp
lret
adc
or
jmp
test
es
insb
rclb
and
nop
repnz
clc
mov
ds
pop
lods
out
pop
and
pushf
clc
mov
xor
push
stc
mov
sbb
mov
sbbb
adc
pop
add
dec
and
mov
inc
notl
pop
bound
push
mul
sti
cld
xor
fcompl
lret
mov
je
sub
sub
movsl
jmp
popf
loop
and
adc
jne
jge
popf
jne
mov
mov
bound
pop
sub
rcl
ret
sub
xor
add
dec
dec
cmp
adc
fs
or
jne
fs
js,pn
pop
out
repz
mov
or
outsl
sub
int
std
out
ja
xor
cmpsl
into
call
out
sbb
mov
mov
pop
dec
cmp
rorb
add
and
mov
and
or
negl
jae
adc
lahf
sbb
in
sub
scas
or
jecxz
loop
addr16
mov
lods
out
out
test
ret
jmp
pop
jg
push
in
fwait
enter
mov
stos
in
lahf
sbb
or
enter
out
rcll
andb
je
xchg
sbb
pop
aam
and
cmp
imul
repnz
and
and
pop
fcomp
jg
and
fst
in
jg
stc
or
bndldx
push
adc
pop
fsubrl
ljmp
sbb
outsb
loop
pushf
xchg
ljmp
insb
repnz
into
pushf
sbb
pop
iret
rcr
sbb
movaps
jp
sti
stos
loop
psubusb
pop
mov
lds
andl
ds
imul
xor
leave
loop
dec
aam
add
or
jp
loop
jnp
pushf
out
mov
mov
or
sbbb
push
xor
mov
or
jb
xchg
mov
data16
fistpll
fstpl
andb
dec
mov
adc
mov
sbb
mov
pop
pop
out
mov
sbbb
test
sti
or
imul
cmp
es
dec
movsl
xor
dec
enter
nop
scas
std
and
aas
pop
out
jp
addl
mov
fstpl
inc
or
xor
or
rolb
fldcw
adc
loope
sub
loop
cmp
sub
or
shlb
popa
xchg
mov
mov
sbb
xchg
mov
inc
mov
mov
mov
jp
pusha
cmp
scas
popa
arpl
push
push
xor
cvtps2pi
mov
jae
cmp
push
add
lahf
mov
adc
add
shll
fs
pusha
inc
negl
stc
aam
sarl
sti
jb
sbb
mov
pop
push
cmc
mov
xchg
cmp
lret
xor
cmp
adc
mov
movsl
push
shll
push
mov
xor
sbb
sbb
call
rcl
add
subb
ret
sub
inc
mov
lods
jmp
dec
add
scas
jne
pop
pop
iret
push
xchg
xor
popf
rolb
mull
insb
inc
data16
sbb
add
sti
sbb
setl
js
jge
lret
stos
int
jns
ret
pop
popf
mov
outsl
dec
fldcw
mov
sti
sti
sbb
stc
out
sub
mov
pop
dec
cmp
add
or
inc
ret
dec
xor
lahf
add
cmpsb
out
rcll
scas
xor
pop
jo
enter
fidivrs
inc
cmp
gs
mov
fwait
xlat
mov
push
pusha
test
pop
mov
ja
aad
pusha
int
gs
cmp
cmpsb
test
xchg
cli
jecxz
scas
negl
xchg
push
mov
xchg
sub
cs
add
mov
mov
inc
xor
push
push
add
outsl
mov
ret
je
mov
mov
orl
pand
pop
add
xchg
fnstcw
xchg
loop
mov
cmp
add
adc
adc
jecxz
xchg
bnd
stos
jmp
sbb
and
fucom
addr16
add
unpckhps
push
jl
imul
cmp
pop
enter
out
fcoml
xchg
mov
xchg
jnp
pop
mov
lahf
enter
lahf
mov
xchg
mov
push
sub
cwtl
or
pop
maskmovq
fldl
lahf
add
shr
popa
das
adc
fstpt
jne
mov
xor
stos
mov
pop
push
mov
jnp
or
jbe
ja
mov
gs
pmullw
push
scas
cmp
addr16
jle
cmp
jecxz
out
mov
push
push
sbbl
mov
mov
xchg
mov
jmp
mov
repz
mov
pop
sbb
sub
xchg
adc
lock
cmp
mov
cmp
fs
or
enter
arpl
mov
out
jge
out
adc
test
rcll
xchg
lret
sub
push
ds
mov
vcmppd
and
pop
mov
loop
mov
scas
adc
add
popf
test
xlat
out
dec
fs
jnp
sbb
mov
test
ret
pop
jnp
orl
cmp
test
inc
push
xchg
repz
subl
sbb
push
sub
faddp
aaa
push
std
sbb
nop
push
push
loop
out
inc
fcmovnbe
mov
hlt
cld
jnp
mov
aad
mov
imul
xchg
sarb
sahf
add
add
daa
stc
mov
aam
add
mov
adcb
adc
daa
in
sub
scas
push
loop
dec
jecxz
andb
jg
add
test
mov
scas
sub
pop
into
adc
mov
dec
push
cltd
roll
mov
int3
add
loop
jne
cmp
jns
cmp
inc
adc
test
mov
add
movl
lea
xchg
mov
je
xor
test
lds
jmp
adc
cli
divl
test
push
mov
out
aam
mov
xchg
sub
jno
mov
mov
fs
lret
outsb
adc
sarb
and
mov
xchg
pop
out
or
call
xchg
outsb
inc
xor
sbb
inc
and
push
and
cmpsb
push
push
adc
or
mov
fistps
aam
mull
daa
sub
icebp
push
fimull
jae
sub
nop
pushf
fidivrs
adcl
add
pushl
xor
loop
jg
dec
les
lods
cld
cmp
jo
push
nop
push
jae
mov
push
inc
jns
fcompl
loope
xlat
adc
pop
pop
ficompl
movsl
mov
pop
and
pop
gs
das
push
popa
lods
mov
ljmp
imul
test
cmc
cwtl
add
mov
out
or
test
fnsave
xchg
xchg
xor
test
in
xchg
sbb
mov
outsl
mov
fbld
adc
add
adc
ss
lret
pop
xor
lds
stc
mov
sbb
inc
add
push
sub
inc
iret
insb
push
xchg
mov
loop
adc
add
push
call
push
int
hlt
jno
or
out
daa
mov
cwtl
loop
xlat
cmp
imul
sbb
cld
push
mov
repnz
sub
aad
outsl
scas
jo
pushaw
fisubrl
push
or
pop
loop
mov
jbe
mov
mov
movsl
aad
push
adc
push
pop
pop
add
fldcw
and
jp
daa
lret
aad
icebp
arpl
inc
add
das
sbb
and
add
dec
add
sbb
cmpsb
call
push
std
add
int
push
or
sbbl
in
and
xchg
pop
insl
fcmovnu
leave
incb
cmpsl
sub
adc
andl
adc
arpl
in
outsl
shll
pop
xchg
xor
dec
sbb
cvtps2pd
jge
adc
or
push
mov
into
push
push
add
cmp
xlat
xor
jns
cmpsb
cmp
sbb
popa
mov
mov
subb
loop
movsl
in
add
cmp
outsl
mov
loop
inc
adc
shr
lock
mov
in
mov
aaa
dec
and
cmp
lea
and
in
add
inc
fildl
mov
test
sarb
nop
adc
lods
pusha
inc
clc
imul
loop
and
rclb
out
fimuls
jbe
xor
sub
loop
mov
daa
ljmp
jecxz
xor
fildll
cmpsb
jg
test
mov
and
fistps
stos
xor
sub
fimull
or
inc
inc
mov
dec
fs
push
mov
cmp
fwait
push
push
push
les
cmp
xchg
sbb
pop
sahf
add
mov
out
push
shl
cmc
out
lock
shlb
cli
enter
jb
iret
push
fcomps
ret
imul
adc
loop
xor
adc
scas
xchg
lods
decb
xchg
push
mov
aaa
xchg
xor
sbbb
add
xchg
xchg
aam
jl
jmp
jle
iret
sub
cmpsl
loope
sbb
fsubrs
jo
fsts
lods
adc
xor
in
sbb
es
movsl
mov
ja
inc
pushf
cmp
mov
enter
sti
outsb
addr16
or
addr16
imul
jnp
movl
push
decb
mov
xchg
insb
jl
adcl
popa
cmp
mov
and
cmp
in
in
pop
in
pop
pop
ss
fidivrl
in
int3
sbb
scas
xchg
mov
cmp
pop
outsb
lcall
adc
pop
jmp
adc
jno
mov
add
sub
lret
inc
cmpsb
es
adc
adc
push
movsl
mov
ja
push
xchg
xor
lahf
jb
mov
call
add
sub
sub
push
ret
push
sbb
mov
ss
push
int
aas
xor
pop
mov
dec
test
adc
or
lahf
jno
ds
pop
cmp
mov
inc
leave
aad
xor
cmpl
lods
sub
push
nop
cmp
ljmp
mov
pop
xchg
cs
xchg
add
pushl
push
pop
nop
jle
lcall
jle
mov
fistps
not
jne
clc
xor
push
aad
movsb
push
jle
xchg
mull
lods
incb
cmp
push
jmp
xor
mov
orb
adc
aas
ret
push
imul
test
sbb
movsb
lods
mov
iret
pusha
pop
std
imul
hlt
call
mov
mov
fistpl
push
cltd
pop
adc
dec
in
hlt
loop
sub
cmp
ds
out
add
aaa
cmp
or
xchg
mov
pop
lock
nop
sbb
add
and
dec
mov
gs
cmp
mov
imul
out
test
sub
push
sub
adc
aad
adc
punpckhdq
pop
or
loop
pop
int3
dec
jnp
rclb
xchg
add
das
insl
mov
shll
mov
in
popf
adc
in
xor
push
fbstp
cwtl
out
mov
pop
xor
shll
push
out
jnp
inc
sub
jnp
xchg
das
out
ljmp
mov
nop
xor
sbb
out
loopne
repz
lret
xchg
xlat
aad
mov
sub
push
insb
hlt
leave
imul
scas
mov
mov
inc
sub
mov
add
push
push
or
or
fildll
push
cmp
adc
and
cmpsb
push
pop
loop
stos
popf
xchg
gs
sub
xchg
mov
push
mov
loop
inc
adc
jo
orl
popf
jne
push
ret
pop
sbb
negb
xchg
xchg
insb
xchg
in
test
insb
xchg
repz
fsubrs
xchg
adc
jae
jae
je
xchg
mov
add
push
push
sbb
pop
sbb
mov
rcrb
jg
inc
cmp
sub
popa
fmuls
mov
repz
popa
popf
cmp
in
sub
mov
inc
xor
pop
outsb
mov
mov
mov
jg
dec
popa
ffree
add
testl
add
scas
repnz
fmull
sbb
iret
pop
outsl
adc
popa
fmull
popa
imul
xchg
inc
pop
sub
pop
shlb
xlat
adc
lret
fbstp
xchg
xchg
adc
cmp
es
out
push
inc
je,pt
aad
nop
inc
xchg
pop
and
pop
or
adc
inc
test
insl
sbb
push
gs
ja
loop
dec
div
jmp
mov
xor
inc
jmp
adc
iret
lock
in
push
outsb
sub
call
push
negl
jp
jne
cmp
xchg
adc
sbb
dec
pop
insb
mov
lock
pop
adc
scas
push
push
xchg
inc
xchg
sub
int3
pop
pop
adc
in
push
mov
loopne
shrb
add
sub
or
jns
fisttps
out
xor
loop
adc
pop
sub
sub
loope
test
or
scas
lahf
clc
mov
sbb
jnp
incl
iret
iret
rcl
sbb
or
insl
leave
mov
push
enter
fsubr
pop
mov
add
mov
mov
sub
shll
dec
push
out
out
push
sbb
dec
outsl
pop
pop
mov
sbb
adc
pop
cmp
adc
jnp
cld
sti
inc
add
sub
aam
jp
mov
lahf
sbb
negb
add
mov
bound
scas
je
lcall
sbb
jp
cmpsl
sbbl
aaa
mov
sub
jno
hlt
mov
sub
lcall
cmpsb
int
and
cmp
sub
ficomps
arpl
mov
jae
mov
pushf
or
mov
xchg
add
test
mov
mov
fcmovnu
fistpl
popa
movsb
jno
add
inc
or
jb
ret
pop
sub
adc
rol
pop
or
mov
pop
adc
sbb
out
add
cmp
jl
insb
add
add
movsb
sbb
mov
lea
mov
add
or
mov
sbbb
and
mov
add
mov
fwait
cwtl
pop
pop
xor
jbe
adc
sbb
loop
lock
inc
pop
and
xchg
sub
int3
fcmove
mov
sub
inc
popf
cmp
push
jle
cmp
and
scas
loop
adc
ljmp
movb
sbb
adc
cmp
incb
sbb
inc
and
push
inc
fwait
mov
gs
outsl
add
mov
pop
test
mov
sbb
pushf
test
or
sub
jge
xchg
shl
mov
aam
in
lahf
enter
cli
sarb
xor
fmull
lahf
in
call
push
add
jnp
inc
into
cld
cltd
or
sbb
jecxz
aad
scas
cmp
xor
mov
scas
enter
inc
add
jp
outsb
sub
add
imul
push
ljmp
mov
les
cmp
sub
loop
sub
xchg
adc
pop
inc
xchg
mov
mov
xchg
jge
push
aas
adc
mov
in
popf
ret
sahf
sub
aas
mov
testl
xchg
add
push
mov
jnp
cli
mov
push
dec
ret
int
jl
test
sahf
movsb
fisttps
pop
icebp
ja
fndisi(8087
adc
cltd
add
shrl
push
mov
in
sub
arpl
lcall
push
fnstsw
scas
leave
loop
gs
or
pop
jnp
jmp
fcomps
loopne
ljmp
out
xchg
cmp
push
mov
sti
sub
jnp
sbb
fdivrs
adc
or
sti
push
sbb
adc
sarb
stos
aas
xchg
inc
arpl
fldl
xchg
int3
push
push
push
rclb
ret
mov
sbbl
ds
sbb
or
add
jl
fcom
xor
xchg
mov
add
add
xlat
movsb
sbbb
outsl
push
cmp
xor
mov
sarl
mov
lret
jmp
cltd
fs
imul
addr16
aam
cltd
pop
shlb
xchg
in
jne
mov
xorb
xchg
ret
push
xchg
lret
aam
fsubrs
lahf
sbb
pop
scas
pop
fbld
push
jnp
sub
scas
sub
dec
mov
dec
xlat
adc
xor
mov
lret
cli
push
pop
lcall
shll
jmp
sahf
push
cltd
shrl
jne
push
je
popf
lcall
jmp
popf
aaa
insb
push
or
test
and
inc
sbb
xchg
mov
cmp
andl
pop
leave
pop
push
sbb
jbe
ja
imul
ret
sbb
cmp
pop
fsubrl
pop
test
ds
in
inc
loop
sub
dec
imul
dec
cmpsb
adc
jne
xchg
mov
lock
push
mov
test
adc
fnstcw
xchg
in
sti
xlat
xor
test
sub
repz
lahf
and
jmp
lret
jp
inc
push
insl
jnp
or
push
xor
je
loopne
inc
loope
add
ret
xchg
out
mov
mov
rcrl
xor
fs
push
es
test
lcall
cmp
xor
jnp
sub
push
loop
ss
out
nop
scas
sbb
wbinvd
lods
mov
xor
lds
lock
fimuls
repz
push
icebp
dec
pop
movsl
mov
pop
scas
adc
mov
lods
mov
cmc
sub
aad
iret
out
pop
pop
push
push
inc
inc
dec
ret
sbbl
loop
dec
adc
pop
or
jge
inc
scas
iret
imul
and
push
scas
dec
cmp
dec
mov
int3
aas
fisubrs
loop
test
test
dec
and
cwtl
cmc
insl
pop
adc
insb
mov
dec
mov
mov
cmc
fs
or
xchg
lock
xchg
mov
sub
xchg
push
mov
adc
cwtl
fstpl
adc
xor
bound
orb
stc
sbbl
xchg
fistl
jmp
fstpl
and
mov
push
sub
scas
sub
mov
cmp
sarb
mov
gs
movsl
mov
xchg
mov
push
aaa
sub
cltd
je
or
mov
xchg
jg
mov
ficomps
gs
fsubs
ss
add
add
movups
xchg
js
bound
popf
xchg
adc
loopne
dec
sub
ret
loop
stos
test
sbb
adc
bound
lcall
jmp
mov
test
out
std
adc
pop
mov
add
jp
jnp
out
addl
in
mov
sbb
add
leave
xor
movsl
mov
sarb
pop
xchg
and
sub
xor
mov
mov
dec
mov
lods
ret
inc
push
push
adc
or
out
sbb
jnp
inc
mov
cmp
stos
cltd
testl
add
fwait
subb
dec
sub
cltd
mov
addr16
into
add
push
inc
jno
add
xor
outsb
nop
xchg
into
mov
aam
in
push
add
jnp
notl
jbe
enter
sub
cwtl
inc
add
mov
rorl
jnp
stc
dec
jge
fists
pop
pop
sarl
imul
setg
aaa
pop
stc
popa
and
enter
out
xlat
les
loopne
lcall
mov
mov
jp
inc
cli
div
pusha
call
int
push
movd
mov
ffreep
adc
sbb
inc
jne
inc
aas
loop
in
enter
mul
ret
rcr
out
add
sub
lods
jg
cmpsl
push
imul
sub
inc
mov
sti
mov
dec
push
setl
fcoms
inc
inc
outsb
popf
jno
xchg
pop
bound
dec
push
mov
push
ss
les
sub
mov
xchg
adc
cmp
push
xlat
test
inc
pop
pop
popa
cwtl
cmc
lea
test
loope
outsl
xadd
push
xchg
dec
mov
xlat
xchg
cmpl
xor
mov
shll
pop
adc
popa
push
mov
int3
inc
inc
addr16
xor
lods
fistpl
dec
jmp
cmp
adc
cmp
adc
adc
lret
outsl
sti
pop
scas
out
lea
pop
pop
mov
jo
cmp
adc
xor
jae
sbb
aaa
ss
xchg
push
or
popl
sti
rol
jmp
aas
jp
pop
xchg
sub
stos
xor
iret
sub
xchg
pop
xchg
pop
and
push
mov
hlt
lahf
adc
pushl
lods
lods
or
outsb
fisttps
aas
jmp
cmpsb
enter
xchg
dec
shrl
lret
add
push
jne
lds
ds
cmp
aad
push
lahf
insb
dec
mov
add
mov
push
ss
xor
je
cmp
ljmp
aad
bound
jae
outsl
push
jmp
ljmp
push
lret
in
cmp
cmp
dec
jo
psubw
stc
rcrb
or
sub
jp
nop
xor
cwtl
ja
pop
out
sub
add
stos
insb
fwait
cmp
jae
pmaxub
mov
add
aad
insb
push
int3
rcr
test
cmpsb
pop
lods
out
fstp
enter
dec
cmpsl
cmp
jnp
sub
push
incl
shrl
or
jbe
fadd
call
test
es
and
in
and
cltd
push
and
mov
pop
fs
add
jne
scas
mov
das
fildll
cli
xor
nop
push
fisttpll
cmp
cmp
scas
popf
popa
fcomip
sub
pusha
imul
loop
adc
call
cmc
scas
scas
push
xchg
outsl
adc
lds
dec
je
jp
xor
jge
xchg
jecxz
sbb
lock
les
fldt
push
jo
xchg
popf
ds
imul
aad
insl
imul
or
mov
mov
or
rorl
mov
mov
rorb
fs
cs
xchg
or
and
into
xor
ja
aam
and
xchg
enter
addr16
cmpsl
push
sbb
popf
add
movsb
mov
jae
je
idivl
scas
adc
nop
cmp
adc
insb
int3
cmc
pop
aas
inc
inc
out
cltd
into
pop
in
idiv
cltd
mov
cmp
add
add
cs
int3
xor
add
sbb
rorb
xor
mov
or
mov
adc
mov
stos
add
lret
or
pop
inc
xor
cmpsl
aad
xor
das
sbb
test
repz
sbb
mov
push
fwait
mov
icebp
icebp
lcall
or
dec
push
sbb
bound
subl
inc
stos
or
add
pop
inc
ret
add
mov
jno
pop
scas
and
jmp
xor
sbb
adc
int
mov
xorb
out
jb
arpl
sub
pop
in
fnsave
out
and
jl
xor
add
push
mov
mov
mov
xor
add
dec
dec
das
xchg
gs
xchg
jmp
add
push
dec
cwtl
lods
mov
ljmp
cld
outsb
inc
pop
popf
or
add
mov
or
lret
mov
dec
lods
jno
outsl
xor
inc
mov
pop
fistps
sbb
jnp
jecxz
jno
outsb
mov
stos
outsl
add
jecxz
imul
es
test
lret
sbb
and
add
iret
add
cli
jns
je
loop
sub
cmp
xchg
xor
insl
push
mov
cmc
lahf
cmp
or
jo
in
adc
cwtl
pop
adc
imul
xor
cmp
xchg
push
mov
add
xchg
in
xchg
ret
adc
fsubrl
add
cs
jp
mov
xchg
inc
mov
lods
add
pop
jecxz
out
cmp
mov
ss
mov
out
aam
hlt
ret
loop
stc
mov
cwtl
ds
movsl
add
pop
inc
lds
cli
daa
pop
cmp
mov
or
cvtps2pi
sbb
push
inc
mov
shll
mov
add
push
fs
sub
sbb
adc
lret
aaa
push
rcrl
dec
adc
adc
add
sub
add
jnp
test
sub
mov
test
setg
ss
or
cmpb
out
sbb
fs
mov
incb
movsl
mov
stc
lods
adc
jecxz
jno
cmpsl
loop
pop
or
and
adc
ret
pop
add
add
inc
ds
jne
push
lahf
rcrl
pop
rorb
leave
dec
pop
xchg
fcompl
pop
push
or
push
in
xchg
cs
mov
add
insb
jmp
fstl
out
test
out
xor
pop
andb
outsl
popa
mov
dec
cltd
cltd
xchg
imul
xchg
xchg
mov
lcall
stos
out
rcll
mov
and
loopne
lods
mov
js
dec
jp
push
mov
and
mov
push
jecxz
sub
xor
cmp
adc
cmp
fisubrs
lds
adc
roll
aaa
imul
fsts
adc
sub
mov
pop
insb
add
push
mov
mov
lds
adc
mov
pop
das
inc
lcall
aaa
ret
das
test
mov
sbb
push
adc
mov
insb
lods
daa
sub
pushf
sub
pusha
int
and
push
loope
sbb
jb
fdivl
pop
mov
mov
insl
and
stc
pop
pop
push
loop
mov
fisttpl
push
or
xchg
popa
fmuls
push
add
fimull
jne
stc
or
pop
sarb
mov
test
fisttps
pop
xor
cmp
lahf
sbb
dec
cmp
push
sbb
sti
push
inc
sub
jmp
out
pop
xchg
subl
adcb
xchg
das
sub
int
mov
jnp
lods
and
sbb
lcall
pop
cmc
cmp
sub
cmp
loopne
pushf
xchg
push
push
fbstp
jnp
pop
add
outsb
inc
call
and
or
aad
mov
jae
sub
mov
jp
imul
sbb
push
popa
ret
cmpsb
cmp
add
pop
xchg
fbld
popl
jmp
or
mov
fidivs
xchg
mov
mov
out
or
inc
sub
ret
jg
push
xlat
dec
std
jne
shrb
fucom
mov
imul
mov
gs
call
cmp
rorl
out
jle
loopne
adc
aad
sub
mov
or
loop
or
adc
push
shrl
mov
xchg
sub
mov
in
sub
outsl
push
inc
jns
jl
inc
ret
sarl
xchg
sbb
sub
int3
js
mov
or
enter
arpl
in
xchg
and
ds
les
xor
mov
in
inc
test
pop
add
add
addl
testb
jo
mov
adc
repnz
mov
push
sbb
cmp
mov
lods
lret
lahf
cwtl
add
mov
inc
rol
xchg
scas
inc
imul
xor
lret
sub
addl
lods
in
fstpl
outsb
sub
and
push
movsl
or
mov
rcrb
dec
neg
push
les
je
cli
call
aad
add
in
fiaddl
lret
mov
popf
inc
xchg
push
out
inc
iret
or
cld
xor
and
jo
addr16
loop
jbe
movsl
jg
cmc
fisttps
mov
into
loope
movsb
sub
mov
loop
sbb
sbb
or
std
push
cmp
sub
mov
xchg
int
sti
sub
aas
jmp
jp
ficompl
xor
mov
adc
push
mov
xchg
fs
shrl
sub
leave
dec
bound
aad
in
sbb
inc
xor
nop
lds
sub
jne
lret
shll
xor
jo
into
mov
and
lahf
roll
pop
stc
cmpsl
and
push
inc
push
call
and
adc
out
mov
sub
jp
push
rcrb
sbb
dec
dec
dec
push
dec
aad
sbb
and
scas
bound
pop
fwait
ljmp
or
nop
subl
imul
mov
sbb
xlat
push
test
xchg
mov
mov
pop
jnp
mov
jns
lcall
mov
mov
sbb
mov
jnp
vmovupd
out
push
sbb
imul
jnp
jg
push
cmp
lret
in
mov
leave
idivl
jae
imulb
mov
add
ljmp
stos
push
shl
mov
mov
xor
dec
mov
and
mov
cli
add
sbb
mov
adc
mov
out
aas
push
push
in
xchg
loop
sbbl
push
sbb
cmc
push
int
add
jnp
push
add
loop
insb
lds
aaa
jg
add
adc
cli
xchg
xchg
ds
sub
add
mov
mov
sbb
mov
jmp
push
fildl
outsb
pop
outsb
add
cmp
hlt
sbb
out
sahf
loop
adc
xor
idivl
jae
push
sub
push
pop
movsb
or
mov
add
fstpl
fsubr
out
dec
sahf
std
fnstenv
fcomi
jnp
test
iret
inc
and
mov
cmp
divl
pop
cmp
aad
pop
addr16
stos
int3
dec
test
loopne
push
clc
xor
pop
imulb
js
jmp
jmp
mov
mov
sahf
out
pop
push
adc
out
mov
imul
test
shr
shr
pop
movsl
divl
ficompl
push
loope
mov
sbb
xchg
popa
sbb
loop
aad
fsin
cli
inc
inc
cs
mov
adc
cmp
out
gs
je
test
lea
incl
iret
pop
cmc
arpl
adc
jg
es
shr
popa
or
xchg
jg
cltd
add
insb
mov
push
into
je
test
loop
push
inc
insl
xchg
fisubrs
in
add
call
test
jp
ficoml
push
fdivl
xor
sti
in
and
test
popa
int
xchg
pop
mov
mov
inc
jno
or
add
stos
test
and
adc
lock
jnp
flds
xchg
cmp
in
dec
jne
jp
jge
and
adc
aam
jnp
shlb
aad
pop
inc
push
xchg
push
and
rolb
pop
adc
jne
out
fs
jecxz
jp
cmp
and
enter
int
or
in
fldl
or
add
rolb
insb
inc
gs
jnp
icebp
push
inc
mov
loope
lods
data16
push
ss
in
cmpsb
pop
mov
add
loopne
adc
test
cli
lret
stc
bnd
push
push
mov
add
test
cmp
jp
es
jnp
pushf
push
cmp
les
aam
scas
shr
repz
cmp
cmpsb
mov
sbb
lock
std
shll
test
out
sbb
push
cmc
mov
arpl
add
lcall
shl
push
ret
mov
rcll
sysenter
loopne
push
mov
push
adc
popa
inc
pushf
cwtl
adc
cltd
stc
je
push
outsl
loop
or
xchg
adc
lds
mov
jecxz
or
outsl
popa
xchg
mov
or
mov
push
in
loop
adc
mov
addr16
into
jmp
mov
inc
inc
leave
loope
xchg
scas
loope
mov
add
push
xlat
mov
insl
out
dec
sti
cltd
fistpll
ljmp
out
cwtl
in
jnp
aad
rcrl
negl
lret
mov
xorl
cli
xlat
loop
out
mov
push
mov
ds
addr16
cmp
je
outsl
movsb
shr
lret
cli
cmpb
xchg
xchg
lods
mov
insl
adc
fisttpll
adc
hlt
mov
or
jge
adc
test
and
mov
stc
lret
sqrtps
pop
into
push
ljmp
addr16
fcomi
stc
sbb
insb
stos
push
jg
push
sub
jae
sub
xor
cmp
mov
stos
push
xor
loop
push
mull
and
out
xor
insb
push
fstl
or
loop
and
adc
sub
rol
lea
mov
fs
gs
jecxz
dec
leave
pop
fidivl
addr16
popa
jo
lret
jnp
movswl
add
jg
pop
inc
imul
addb
insl
dec
loop
xor
iret
lcall
cmc
into
mov
jl
push
add
mul
sub
and
xchg
cmpsb
push
pop
loop
sub
fs
rclb
outsl
test
sub
test
push
out
sbb
jo
hlt
jle
sahf
fcmovnb
mov
neg
or
pusha
inc
test
mov
aad
loopne
incl
dec
dec
shlb
lods
add
and
pop
jle
fistpl
jle
push
sbb
jg
inc
call
in
pop
sub
insl
sahf
add
std
mov
addr16
iret
lret
incb
fldenv
cmp
mov
xchg
or
int
lahf
adc
rorl
scas
sbb
lods
cs
das
in
push
cmpsl
add
xchg
sub
addb
and
pushf
in
pushf
shrl
mov
fistpl
mov
fsubr
pop
mov
adc
sbb
adc
cmp
mov
or
adc
sub
mov
xchg
loope
mov
shl
sub
mov
inc
fsubrs
out
add
out
fidivl
out
ret
jp
ja
mov
sub
dec
out
fs
rcr
mov
loop
adc
lcall
lcall
xor
jecxz
enter
adc
hlt
jnp
dec
out
push
lret
adc
sub
push
lret
imul
hlt
mov
jmp
dec
mov
shll
pusha
stc
pop
sub
or
sub
and
mov
fsubs
into
pop
popf
mov
push
lahf
add
test
dec
adc
outsb
imul
sub
adc
xchg
adc
pop
sub
ret
ret
orl
add
ret
popa
lahf
fbstp
lds
inc
imul
adc
adc
sarl
jo
daa
lahf
movsl
enter
rorl
jmp
pop
leave
cmp
movsl
roll
mov
jnp,pt
push
pop
ficompl
inc
sbb
pop
adc
cmp
xchg
testb
pop
loop
scas
push
pop
mov
movsb
sub
pop
push
cmc
push
pop
push
mov
lods
movsb
into
sbb
bswap
pop
out
or
mov
mov
and
push
add
cmp
iret
push
mov
flds
jecxz
dec
pop
orl
or
ret
mov
push
lahf
mov
leave
pop
popf
push
push
les
sub
add
jne
jnp
pop
or
add
pop
mov
inc
neg
daa
loop
sbbl
mov
xorb
pop
pop
lock
or
notl
jo
xor
orl
push
in
test
adc
iret
push
pop
xchg
pop
and
pop
orb
jecxz
sub
addl
dec
jae
out
mov
mov
and
push
mov
popa
aam
push
mov
xor
ja
cmp
loopne
mov
cmp
xchg
nop
rcrl
cmp
test
or
jmp
out
loop
mov
lds
lret
xchg
jg
jl
push
push
rorl
and
inc
dec
xlat
fldl
push
jbe
mov
clc
push
xorb
popf
or
xor
pop
push
pop
push
xor
popa
movsl
mov
xorb
and
inc
dec
ret
fisttpll
fnclex
sahf
loop
inc
cltd
add
xchg
mov
popf
xor
dec
dec
fsub
and
push
mov
sbbb
sub
in
jecxz
movsl
adc
pop
mov
jbe
push
rol
mov
cmc
push
and
bnd
fisttps
push
mov
or
push
xchg
setle
lds
adc
push
sti
adc
adc
adc
sub
int3
fnstcw
jge
mov
adc
mov
scas
clc
push
negb
jnp
or
loop
shlb
mov
pop
bound
add
sbb
xlat
add
or
jecxz
gs
clc
dec
je
lret
bound
mov
arpl
adc
fsubp
cmp
push
insb
sbb
cli
mov
xchg
incl
mov
fstpt
add
sbb
mov
cmp
xchg
popf
jge
test
adc
xor
fiadds
add
add
sub
lock
call
mov
push
xchg
push
cli
pop
jmp
cmp
mov
aas
in
rolb
notl
nop
icebp
ja
repnz
arpl
roll
push
add
add
cmp
cmp
mov
dec
in
cmp
sarl
fldt
push
push
add
jp
flds
insb
fmull
scas
add
mov
outsb
add
jl
jo
aaa
sub
fwait
adc
jne
jo
mov
jo
loop
rcrl
hlt
sub
push
pop
pop
pushf
test
inc
mov
or
stos
clc
test
mov
sub
mov
pop
cmp
and
jo
movsl
push
repnz
rcl
and
aad
lret
das
push
sbb
pop
inc
mov
idivl
xlat
xlat
sub
jae
cmc
int
out
ss
inc
btsl
xchg
xchg
mov
pop
xor
cmp
cwtl
fstps
clac
cmp
jge
sbb
pop
sub
call
out
jecxz
jmp
rolb
push
sbb
cmp
lret
rcrb
pop
mov
lahf
stc
aas
jno
push
xor
pop
sbb
outsb
pop
mov
sbb
ss
cmpb
push
xor
ljmp
cpuid
mov
test
cmp
add
mov
sarb
xlat
fmuls
or
decb
sub
popf
cltd
inc
adc
aam
dec
jmp
xchg
add
popl
xor
dec
inc
shll
cmc
push
jno
mov
inc
push
popf
lahf
mov
dec
add
xor
add
dec
and
ret
adc
cmc
inc
xor
xchg
xor
pop
lods
push
push
push
insb
inc
pop
outsb
adc
clc
push
adc
mov
imul
and
pop
mov
cmpsl
loop
repnz
iret
out
mov
xchg
shll
mov
xchg
mov
stos
push
add
fbld
and
loopne
pushf
loop
ds
je
mov
pop
ds
adc
xor
push
cmp
popl
fists
sub
push
ret
push
popa
xchg
pusha
icebp
xchg
mov
and
in
mov
push
push
test
inc
ja
repz
dec
jmp
shll
add
sbb
xchg
xchg
jnp
fbstp
adc
fcos
and
mov
jns
enter
sbb
out
out
or
sbb
ds
cmp
mov
out
aam
jecxz
xor
xchg
call
test
lahf
jl
aad
adc
push
or
out
shrb
xchg
psraw
nop
mov
loop
or
xchg
pop
push
add
sub
in
mull
fs
jno
mov
lahf
add
repnz
mov
cmp
dec
and
lret
sub
adc
cli
rolb
jnp
jne
push
in
aas
mov
icebp
repz
popf
push
sahf
mulw
clc
pop
mov
pop
sbb
inc
jecxz
movsl
sahf
dec
xchg
cmp
jbe
add
add
inc
push
addr16
rolb
push
jo
mov
cmp
sti
inc
mov
stc
mov
and
mov
movsl
mov
rcll
xchg
fwait
stc
rcrb
mov
xchg
xor
sub
xorb
insb
sub
mov
out
sti
add
xor
lods
jnp
movsb
xor
xchg
insl
cld
jno
scas
int3
pusha
jge
int
unpcklps
cmp
sbb
sub
push
insl
lock
mov
mov
jg
insb
mov
gs
pop
sbb
sub
or
lds
pop
pop
out
and
data16
lods
mov
and
in
orb
cli
xor
fadds
push
mov
pop
aad
add
popa
dec
inc
xchg
ss
out
fs
fcompl
rcrl
aaa
iret
mov
push
xchg
js
jns
roll
jg
lods
add
sub
ja
dec
andl
xchg
gs
mov
and
sub
sub
loope
loop
subb
je
pop
and
popf
sub
fildll
adc
sub
xor
setp
add
decb
mov
dec
jnp
sub
lretw
mov
ljmp
mov
add
test
lret
into
decl
or
dec
lods
inc
add
iret
in
lahf
mov
sbb
add
cmp
add
cld
hlt
pop
cli
cli
pusha
ret
stos
or
ret
iret
xlat
loop
aas
cltd
pushf
push
mov
add
or
and
lcall
or
lret
enter
xchg
cmp
add
mov
add
sahf
loop
clc
xor
idivl
loope
xor
cmp
shll
enter
xchg
inc
push
pop
mov
mov
int3
push
shrl
jne
jmp
push
push
xor
cmpb
fs
adc
xchg
fsubrs
mov
add
imul
xchg
xor
aas
push
mov
filds
pop
and
fcoms
pop
ds
testb
int3
pop
gs
popa
or
jmp
popa
sub
loopne
inc
call
jge
ljmp
movsb
sub
push
mov
inc
pusha
push
in
fnop
cmp
insb
into
sbb
adc
call
lldt
and
jbe
je
and
test
movsb
lds
xor
inc
sbb
mov
into
mull
push
inc
sahf
out
pop
cs
jge
mov
pushf
mov
inc
repnz
addr16
cmpsl
sub
loopne
scas
loope
inc
divb
xchg
cmpsl
mull
insb
mov
xchg
popf
incb
pop
add
arpl
je
or
jne
je
cmc
jge
jo
mov
mov
lea
sub
call
or
inc
repz
xchg
mov
aas
sbb
test
push
sbb
cmp
jno
adc
into
push
rcl
call
out
xchg
rorl
jae
sahf
in
pop
out
stos
leave
stc
mov
movsb
movsb
and
ljmp
sub
jbe
adc
mov
jns
stos
dec
lret
adc
lods
lds
stos
negb
add
lea
adc
adc
sbb
btc
aad
or
and
add
andb
fucomip
loop
xlat
out
cltd
insb
aad
inc
mov
insb
mov
sarl
pop
xor
dec
xchg
gs
lea
lods
mov
fisttps
js
in
out
lahf
inc
sub
mov
mov
xlat
test
xor
lods
xchg
add
adc
xlat
add
hlt
jmp
and
pop
aad
cmp
and
pop
pushf
mulps
loopne
cmp
lret
pop
mov
nop
and
mov
jl
insl
fisubrs
inc
cld
and
outsb
mov
scas
lahf
insl
mov
mov
add
dec
jnp
out
loopne
inc
je
inc
into
mov
scas
jp
arpl
shrl
mov
lds
or
aad
stos
out
fildll
nop
cmp
mov
movsb
inc
inc
dec
insl
out
add
add
adc
loop
dec
shlb
xchg
pop
fcoml
das
jmp
mov
or
mov
add
push
sub
xchg
add
lods
sub
and
push
xor
in
sbb
push
or
test
es
or
sahf
iret
jle
test
mov
shlb
adcb
xor
rolb
enter
sti
or
stos
sbb
scas
sub
jnp
mov
push
aam
jp
adc
lods
and
push
adc
into
aam
push
in
test
fldenv
xchg
xor
xor
cwtl
insl
mov
and
cmc
clc
fcmovbe
adc
and
push
dec
fwait
cs
xlat
mov
xor
ret
pop
add
jg
adc
dec
clc
dec
push
lods
push
add
mov
cmpsb
sub
sub
xor
add
das
cmp
es
iret
addr16
loop
adc
sbb
in
xor
hlt
sbb
dec
jae
mov
mov
and
mov
push
push
push
adc
sub
push
mov
adc
hlt
mov
jnp
fdivr
out
sti
push
js
push
or
inc
aad
leave
lcall
add
xor
mov
jg
pop
int
xor
xchg
loope
mov
lcall
cmp
sbb
mov
fstps
setle
mov
or
push
push
mov
and
imul
cwtl
pusha
xchg
push
jecxz
cmp
fsub
cmc
gs
fs
rclb
js
mov
notl
imul
int
sub
inc
add
loop
pop
cmp
iret
movsl
and
pop
xchg
fisttpl
dec
pop
hlt
push
or
push
dec
daa
in
daa
pop
push
ret
insb
out
dec
dec
dec
out
arpl
push
in
loop
imul
inc
pop
pop
gs
xor
negb
push
add
adc
call
out
lods
pop
add
lret
mov
mov
mov
movsb
ja
sub
mov
in
mov
cld
adc
cmp
pusha
testb
pop
lcall
sbb
call
sbb
xlat
and
ljmp
fldenv
xchg
xchg
test
ss
sbb
dec
sub
fsubp
pop
andb
pusha
lock
dec
sub
js
cwtl
push
xchg
aaa
out
and
into
movsb
xchg
cltd
out
fidivrs
jnp
push
cli
sbb
in
jae
daa
or
stos
enter
adc
clc
fildl
ja
ffreep
sbb
sub
jno
jbe
jle
pop
xor
dec
mov
mov
add
in
out
sbb
xchg
adc
outsl
xchg
fs
pop
mov
fwait
lahf
scas
cltd
addb
bound
jle
leave
ds
pop
fisttps
fucom
push
inc
inc
push
push
add
cmp
insl
test
dec
add
in
sbbl
push
out
addr16
mov
cli
pop
mov
mov
lret
nop
mov
mov
cmp
iret
rorl
mov
imulb
adc
mov
pusha
push
lods
rcrb
in
sbb
lds
push
xchg
mov
fucomip
rcr
sbb
loop
xor
xchg
ffreep
enter
ret
mov
pop
das
xchg
add
cmpsb
sbbb
sahf
pop
cmpsb
cmp
fdivrp
pop
test
hlt
sarb
xchg
lds
mov
jo
add
sub
movsb
and
scas
test
xchg
imul
or
pop
xor
sbb
outsb
cltd
pusha
cmp
inc
test
and
sahf
jg
mov
idivb
jno
stos
adc
shll
mov
xchg
hlt
jb
enter
push
jb
fldl
pop
mov
outsb
add
pushl
sub
loop
in
cmp
out
jne
imul
mov
addr16
lods
adc
repnz
jbe
mov
mov
test
repnz
cmp
cltd
cmpsl
pop
lahf
jne
jno
push
push
adc
loopne
out
inc
push
cmpsl
mov
notb
xchg
sub
das
jnp
inc
or
divl
xor
mov
or
add
sarb
mov
decl
hlt
xor
xor
sbb
sub
xor
loop
mov
add
xchg
xchg
add
jo
push
mov
cmp
xchg
jae
push
insb
inc
imulb
mov
mov
xor
insl
mull
js
mov
test
negl
in
push
push
rorl
sbb
add
jnp
lock
push
out
inc
jnp
cmp
pop
add
sbb
pop
xchg
mov
push
jg
lds
push
fwait
loop
adc
mov
mov
xor
xlat
clc
pusha
xchg
insb
rcrb
lea
adc
shll
mov
pop
and
sub
daa
movsb
rcll
shl
in
out
imul
adc
dec
scas
ficoms
or
pop
push
je
push
mov
and
mov
aad
adc
into
add
aad
das
jl
mov
inc
or
out
inc
mov
fmuls
and
mov
loop
pop
pop
push
push
cld
fs
fisttpll
add
push
std
pop
jne
das
push
gs
test
xor
cmp
add
movsl
sar
clc
mov
aad
pop
mov
dec
mov
push
in
mov
int
inc
icebp
pop
outsl
jne
jp
mov
pop
in
loop
jns
dec
out
repnz
roll
ficompl
mov
adc
jg
lods
sub
roll
loopne
cmpl
sbb
cmp
xor
outsl
mov
clts
out
sub
cmp
jmp
xchg
mov
orl
mov
iret
stc
sub
push
pushf
pop
push
adc
mov
adc
sti
dec
divl
jnp
mov
jne
and
je
add
in
fstpl
test
mov
pop
loop
mov
add
mov
in
out
call
fldz
push
xchg
or
pop
outsl
pop
xor
inc
inc
adc
sahf
outsl
and
ljmp
dec
adc
jmp
movsb
stc
mov
and
leave
insl
xor
ficoms
dec
inc
jl
or
xlat
cmpsb
push
jp
jne
shl
inc
cld
push
add
call
xlat
ljmp
sbb
add
inc
fsubrs
xor
mov
push
dec
mov
adc
imul
xor
mov
adcl
add
jne
lods
out
dec
mov
shlb
or
std
xchg
cltd
clc
mov
jle
out
xor
and
mov
ror
int3
clc
xchg
and
fs
out
adc
xor
fidivl
fidivs
sub
sub
push
xor
add
sbb
cli
ret
sbb
add
pop
mov
mov
xchg
je
push
mov
pop
nop
ja
inc
xor
fdivp
xlat
push
das
icebp
or
call
push
mov
imul
jg
int
or
lret
loop
pop
pop
inc
test
pop
xor
push
and
mov
mov
mov
outsl
or
addr16
xchg
pop
insb
or
xchg
push
negl
mull
stos
sbb
popf
flds
les
and
adc
call
lods
sbb
sbbl
cwtl
out
push
or
push
inc
movsb
aad
test
pop
mov
daa
popf
movsl
push
fists
inc
imul
sbb
leave
inc
ja
sbb
mov
outsl
fwait
lods
dec
loope
cmp
stos
scas
in
scas
mov
add
loop
iret
lcall
rcrl
insb
push
shl
and
inc
xor
adc
int
jno
out
push
inc
test
add
xchg
stos
idiv
loop
in
xor
test
or
hlt
push
push
sarb
push
jo
mov
cwtl
insl
mov
adc
xchg
mov
jge
adcb
popa
clc
lods
cltd
fsubs
jnp
out
fucom
pop
fwait
and
data16
loope
gs
mov
rcrb
jns
in
sbb
mov
jg
out
push
mov
lock
lods
ljmp
not
sarb
adc
or
rorb
mov
push
stos
movsl
inc
inc
mov
dec
aam
add
cmp
mov
lahf
js
sub
out
aas
das
mov
sub
nop
mov
out
insl
insb
jg
cmc
loop
pop
sub
mov
inc
xorb
sub
add
add
ret
jno
mov
in
mov
mov
mov
mov
sbbl
outsl
add
adc
and
imull
xchg
and
adc
and
bt
mov
insl
ss
addl
sbb
flds
add
cs
xchg
add
xchg
cld
mov
aam
stos
pushw
shll
push
cli
in
popf
mov
xlat
dec
mov
pusha
xor
test
xor
inc
daa
or
loope
xor
je
test
movsl
test
flds
aas
xor
pusha
dec
sbb
insb
push
or
repnz
add
mov
mov
cmc
push
scas
popf
jl
and
or
in
lods
notl
add
loop
cmp
xor
aam
push
movsb
push
or
data16
pop
addl
jb
add
les
scas
lahf
push
fisttpll
pop
das
mov
mov
push
and
fadds
add
xchg
sbb
stos
mov
and
lahf
enter
loop
pop
sub
xlat
jae
or
sub
hlt
mov
mov
in
pop
mov
loop
ja
test
xchg
inc
jge
leave
fistpll
stos
test
sbb
insb
in
das
mov
sub
pop
loopne
les
sub
mov
fistpll
xchg
fs
rcll
test
mov
pop
outsl
inc
into
mov
xor
sub
dec
icebp
inc
bound
mov
inc
movsbl
addl
out
pop
pusha
pop
out
sub
fbld
pushf
loopne
jmp
fisubs
cmp
adc
movsl
lahf
and
arpl
test
adc
loop
pop
dec
shrl
xor
adc
outsl
cli
insb
xor
pop
jp
dec
insl
inc
jno
cmovne
mov
out
mov
xchg
fs
mov
mov
xchg
add
outsb
mov
test
mov
ret
jno
mov
dec
push
xor
sub
rolb
or
xchg
xchg
push
or
xor
icebp
sbb
call
and
imul
pop
xchg
fbstp
adc
adc
cmc
adc
fnstcw
rcl
push
lcall
lods
in
loop
jno
test
cmp
enter
fwait
mov
mov
cwtl
mov
pusha
xorl
sub
dec
adc
lret
adc
adc
xchg
mov
push
or
or
insl
sahf
mov
jb
lock
popa
and
insl
cld
cmp
mov
sub
test
pop
sbb
xchg
rclb
xchg
mov
inc
insb
notb
cmovo
inc
mov
pop
adc
push
sub
int
xchg
cwtl
cmp
dec
sbb
mov
inc
mov
sbb
loopne
inc
sbb
cmp
adc
bound
jecxz
loop
inc
mov
add
loop
sub
xchg
adc
and
lret
mov
mov
and
mov
leave
push
and
push
sbb
sti
pop
out
mov
cwtl
lret
inc
adc
adc
or
dec
jnp
ficoms
out
jne
add
jno
mov
xchg
loopne
jne
icebp
cs
mov
xchg
xor
outsb
int
xchg
decl
push
enter
push
pop
inc
sub
int
sbb
mov
push
mov
xor
mov
pushf
mov
inc
mov
add
jb
movsb
mov
xchg
xchg
cmpsb
scas
stos
mov
and
faddl
dec
leave
cmp
xchg
insb
outsl
fstl
xor
fldl
cmp
leave
pop
jnp
xchg
lcall
loop
push
aaa
cmp
add
aad
mov
loop,pn
sub
loope
jno
push
pop
xlat
mov
adc
mov
inc
or
push
jo
push
jbe
bswap
ljmp
cltd
fsts
movzbl
or
push
adc
sti
adc
scas
lcall
add
cmp
mov
jge
dec
ret
jl
push
inc
fwait
adc
or
cli
mov
push
imul
movsbl
add
gs
les
cmp
test
hlt
cmp
or
xor
dec
loope
jg
xchg
daa
pop
dec
and
insl
sub
lahf
adc
inc
and
mov
scas
push
cmp
adc
out
shlb
outsl
adcb
sub
in
call
enter
adc
adc
pusha
jg
pop
mov
mov
dec
fidivrs
insl
cmpsl
movsl
loopne
fcompl
and
mov
mov
xlat
adc
imul
sub
imul
mov
add
int3
negb
cmp
insb
loopne
pop
jnp
sbb
fimull
ja
jge
cmp
add
dec
dec
add
sbb
pop
mov
inc
pop
rcll
push
inc
add
out
cmc
and
sbb
jmp
aaa
int3
mov
jl
ljmp
seta
stc
inc
arpl
jns
rcll
lahf
push
jne
mov
mov
sbb
push
out
adc
scas
lea
jmp
out
push
sbb
or
hlt
out
call
cmp
fwait
push
repnz
jne
add
lahf
adc
dec
sbb
fidivl
sbbb
and
dec
pop
dec
xor
jp
xchg
sub
or
pusha
test
jp
pop
loop
dec
leave
fistpll
xchg
cmp
jo
add
mov
das
pop
mov
imul
or
or
data16
data16
notb
fistpll
in
xchg
jmp
push
lcall
test
int
jnp
je
mov
ljmp
testb
ja
mov
pop
push
adc
cmp
add
fstl
jmp
mov
fnclex
push
icebp
fildll
add
cmp
movsl
add
int
in
cli
lock
xor
ret
adc
ss
aad
cmpsl
adc
adc
out
imul
outsl
xchg
lods
cmp
fcoms
mov
jne
mov
mov
mov
out
adc
stos
insb
jno
sub
sbb
mov
lock
popa
ja
fisttpl
jge
jnp
popf
mov
mov
cs
add
shll
je
mov
add
jne
jae
cld
aam
fs
fdivr
dec
repz
fcomip
fldcw
je
pop
adcl
jnp
roll
ret
loop
fisttpl
add
mov
pop
out
loop
cs
xchg
inc
push
and
movsl
sbb
jmp
dec
xlat
xchg
inc
adc
jg
sub
out
mov
decb
cmp
stos
inc
push
and
or
leave
mov
pop
lret
push
xorb
adc
xchg
cs
fidivl
loop
xchg
imul
cli
sbb
outsl
push
xor
xor
fbstp
fsubl
inc
test
ffreep
cmpsl
cmp
pop
dec
les
xchg
sbb
xchg
push
adc
cmc
or
sbb
dec
loop
push
call
jnp
push
push
jno
pop
sbb
pop
push
ret
fldz
test
mov
lea
repz
inc
sbb
cwtl
adc
ret
in
out
pusha
xchg
dec
xchg
fcom
ss
in
scas
xor
popa
pop
out
aaa
int3
in
cmp
cmp
stos
jp
mov
rcl
xor
sbb
push
dec
sub
je
xchg
xlat
add
and
mov
out
add
add
mov
sbb
jmp
xor
mov
push
add
out
mov
out
push
mov
sbb
xchg
daa
lcall
sub
addb
push
mov
xchg
push
sub
push
xor
fdecstp
loop
mov
mov
xor
and
adc
and
push
mov
mov
inc
mov
jecxz
cmc
xchg
or
xchg
inc
and
mov
fiaddl
xchg
lcall
subb
pushl
fisubl
fwait
jg
and
or
xor
dec
pop
ss
pop
or
add
in
rolb
test
pop
push
fnclex
jo
mov
or
sbb
inc
push
add
xchg
aam
dec
and
arpl
pop
out
mov
pop
cmpb
mov
or
xchg
inc
pop
sbb
mov
inc
imul
and
sub
enter
je
adc
fwait
test
adc
lods
or
dec
repnz
or
xlat
sahf
std
sbb
mov
or
loopne
shr
mov
xlat
jb
push
test
adc
adc
stc
mov
adc
insb
stos
mov
stos
aad
sub
adc
adc
add
fsubr
rorl
inc
mov
xlat
pusha
mov
in
fstpl
je
pop
sahf
loop
ficoml
pop
mov
popl
sub
jp
cmpsb
rcrl
adc
iret
jno
fsubrs
dec
dec
insl
push
mov
iret
cmp
xchg
xor
inc
scas
xchg
test
or
pop
xchg
out
pop
aam
sub
cmp
and
push
movsb
fwait
add
push
addr16
insl
push
jae
jg
mov
shlb
sar
pop
das
cli
lcall
ljmp
fmull
add
mov
pop
fmuls
and
cmp
push
dec
dec
mov
push
outsl
hlt
add
je
xchg
lds
dec
mov
xchg
sub
and
push
jecxz
jno
mov
mov
inc
rorl
cli
or
out
xchg
push
mov
loop
or
pop
mov
jae
out
mov
cmp
fsubr
aaa
into
sti
nop
cmp
mov
fisttpll
xchg
sub
add
fisubl
cmp
pop
mov
dec
faddl
ffreep
ja
loop
push
add
addr16
cmp
mov
pop
mov
or
out
inc
adc
xchg
ss
push
pop
les
mov
push
adc
mov
bound
sub
xor
push
sub
das
mov
loopne
or
pop
and
shrl
insl
sahf
xchg
in
mov
rcrl
jnp
gs
fisubrl
sbb
lcall
test
add
leave
addl
andl
out
or
mov
cmp
pop
imulb
dec
or
rol
adc
sub
push
aad
adc
push
and
movsl
insl
mov
pop
xchg
cmpsb
sub
fdivrp
aam
enter
pop
push
jmp
imul
sbb
xchg
lcall
adc
sub
fldl
stos
or
andl
outsl
or
inc
xchg
mov
and
adcb
add
ret
mov
leave
cld
sti
sbb
and
rcrb
jno
or
or
pop
inc
sub
ja
loop
jno
mov
pop
add
push
call
incl
ss
cwtl
fdivs
cmc
in
push
frstor
jecxz
ss
ret
ret
aas
jp
push
or
cmp
in
gs
adc
cmp
adc
dec
lret
ljmp
jo
jo
push
jnp
fidivs
lcall
and
fbstp
jo
xchg
cmp
add
adc
scas
rcl
in
jne
cwtl
mov
dec
xchg
cmp
mov
addl
in
insl
pop
fidivrs
xor
nop
and
push
push
sbb
adc
push
push
jo
sbb
imul
add
pop
adc
pop
nop
pop
lret
jp
seta
pop
lods
rorl
lcall
mov
repnz
icebp
mov
insb
cmp
fwait
add
adc
jp
cmc
mov
and
xchg
mov
jecxz
mov
inc
cmp
dec
cld
lcall
out
rclb
pop
xor
pop
push
sub
push
leave
ja
insb
lods
movsb
mov
sub
sbb
mov
cmp
push
lods
and
clc
sub
add
sbb
pop
mov
repz
lds
cmc
mov
popa
je
inc
push
push
or
cmp
jno
fwait
xchg
dec
aaa
mov
stc
mov
push
orl
clc
mov
mov
xchg
sub
push
repz
jno
mov
inc
pop
scas
mov
push
mov
cwtl
divl
pop
inc
sub
xor
setg
icebp
scas
push
cs
push
inc
or
loopne
mov
push
mov
stos
mov
int
push
add
incb
or
pop
push
in
insb
fnsave
pop
fmuls
adc
fisttpll
push
mov
xchg
inc
sub
pop
movsb
push
addl
aad
or
pop
outsl
fmulp
sub
movsl
mov
dec
ljmp
xchg
jp
shll
jge
xchg
ljmp
xchg
mov
cmp
adc
push
sub
xor
add
sbb
iret
loope
mov
cmp
adc
fwait
mov
lods
outsb
mov
fidivrs
inc
sbb
add
pop
ss
sbb
or
cmp
jl
adc
scas
sub
shlb
inc
aaa
lea
inc
xchg
pop
pop
cmp
push
adc
xchg
cmp
loop
aas
jp
cmc
jo
mov
cwtl
adc
jae
xor
pop
and
and
sbb
jg
das
xchg
and
inc
outsb
scas
pop
es
mov
idiv
or
rcr
ja
test
sbbl
inc
insl
cmp
and
rcl
je
ja
mov
mov
add
imul
inc
xor
lea
loopne
loop
les
pushf
cmp
ficomps
pop
mov
ds
cmp
out
inc
fimull
push
jecxz
mov
mov
fistl
xchg
std
lahf
int
insb
daa
sub
lods
sub
sub
sub
es
cld
cmpsl
inc
xchg
xor
jnp
lahf
pop
fwait
mov
call
jns
sbb
popf
ss
adc
xchg
sub
cmpsb
out
or
rcrl
leave
aas
rcr
sub
popf
jge
pop
cmp
or
sbb
cmp
jle
mov
ret
jno
pop
pop
repz
push
add
sbb
shlb
sbb
daa
xor
sbb
pop
je
pop
dec
dec
and
jmp
sbb
pop
push
loop
adc
or
lret
dec
fdivrp
pop
popa
subl
cwtl
test
jecxz
xor
mov
dec
or
push
push
adcb
jne
jnp
lahf
inc
addr16
inc
xchg
mov
xchg
lds
and
push
pop
out
sbb
mov
sbb
insl
xor
fstl
adc
aas
push
ljmp
or
mov
popa
mov
push
inc
insb
and
xor
adc
scas
and
daa
fstpt
int3
sub
stos
jns
mov
adcl
jne
add
out
mov
adc
imul
divb
aad
pop
mov
ja
mov
iret
loop
lahf
xchg
jmp
nop
xchg
adc
outsb
int3
daa
cmp
jl
jo
divl
repnz
cld
mov
xchg
sbb
ljmp
imul
sub
push
outsb
imul
int
jnp
or
push
xchg
adc
push
sbb
pop
outsb
xor
loop
lcall
pop
cwtl
jg
dec
lcall
add
outsl
ds
and
aam
sbb
sahf
rclb
int
cmp
int3
mov
test
and
jl
ret
adc
push
xor
lahf
icebp
mov
int
popf
jo
mov
jg
mov
xor
scas
stos
mov
dec
dec
aad
xchg
inc
popf
dec
pop
push
ja
sub
loop
lock
ds
cmp
sbb
or
cmpsb
xor
daa
jne
cltd
sub
jno
jg
ss
push
push
clc
xor
data16
or
push
and
mov
or
cmpsl
divl
fisubs
jns
mov
mov
out
mov
cmp
or
inc
pop
out
pop
iret
pop
pop
xor
cmp
inc
mov
sub
add
loop
sub
pop
push
sbb
rcr
gs
cmp
push
jle
xchg
fists
addr16
hlt
int3
outsl
or
sbb
ja
jp
loope
lcall
ret
imul
negb
shll
lds
cmp
dec
lcall
inc
mov
pop
stos
adc
push
adc
ret
inc
ss
xchg
sbb
mov
mov
cmp
adc
ret
mov
cmc
jg
icebp
flds
jae
adc
pop
sbb
into
outsb
insl
adc
push
sahf
push
aaa
add
jb
inc
mov
insb
push
xor
xor
data16
ja
adc
xor
je
inc
or
inc
jp
pop
imul
imulb
lahf
rorl
idivb
outsb
int
cmp
xchg
addr16
adc
pop
shll
out
out
in
mov
out
xchg
or
xor
push
add
pushf
jmp
cmpsl
jns
ss
xlat
sub
push
mov
pushl
jmp
ret
ja
jg
xor
fiadds
out
cmp
xchg
ret
mov
mov
ljmp
call
stos
add
es
inc
add
adc
insl
push
pop
mov
dec
lret
cltd
push
shrl
daa
bndstx
mov
imul
pop
adc
pop
in
pushf
jg
pop
out
std
mulb
outsb
add
xor
lds
pop
dec
mov
popa
cmc
jg
clc
mov
aas
xchg
and
pop
or
pop
or
dec
pop
sub
jne
neg
arpl
and
xchg
notb
xchg
jge
jo
shrl
xor
stos
je
cmp
stos
or
xchg
cmp
pop
xchg
pushf
inc
in
xor
ja
ror
ret
pop
lahf
addr16
or
mov
mov
push
fmul
addr16
cmp
sbb
jbe
or
scas
push
jg,pn
pop
jb
in
sub
dec
fdivrs
out
cmpl
pop
jl
inc
jo
pop
inc
test
popf
testb
push
pushf
or
and
cltd
dec
mov
frstor
fbstp
mov
not
and
sub
xor
sbb
ret
push
cmc
sub
rcrb
cli
cwtl
test
stos
shrl
in
add
mov
add
push
fmul
sub
in
sub
pop
leave
xchg
push
lea
ds
push
inc
pop
bnd
int
xchg
addr16
lcall
inc
enter
sbbb
out
aad
test
enter
addl
jnp
or
jbe
lcall
test
pop
mov
out
idivb
les
push
or
xchg
lcall
test
dec
int3
lds
rcrl
push
stc
and
mov
call
xchg
cwtl
popf
sbb
add
outsl
mov
movsb
add
lods
add
jg
push
push
mov
cmp
mov
cld
mov
push
fists
divb
in
test
inc
cmp
xor
lahf
mov
xchg
fcmovb
push
sahf
cwtl
mov
dec
insb
add
std
xor
and
out
cmp
sbb
int
push
jmp
dec
notl
es
out
and
divl
test
or
mov
jl
inc
dec
mov
rclb
or
xchg
popf
mov
jo
popa
cld
fsubrl
or
pusha
cs
cmp
shrl
push
push
add
cli
mov
cmp
jmp
aaa
cmp
or
xor
jp
lock
add
xlat
jecxz
repz
add
jge
lea
sbb
dec
insb
add
cmc
push
jnp
es
push
pop
mov
push
lret
jno
adcl
push
iret
add
fists
je
rcr
mov
push
loop
cmp
sbb
fcoml
shll
mov
pop
add
jae
ficompl
iret
test
iret
loop
flds
nop
sti
sub
pushf
movsb
sbb
sbb
ret
dec
aam
xlat
cmpl
mov
aaa
jg
int
outsb
jg
mov
aad
mov
mov
xor
add
cmpsb
sbb
jnp
push
mov
push
mov
gs
push
xorl
fsubs
movsl
aad
leave
pop
push
mov
sahf
leave
pop
popf
adc
dec
in
mov
pop
ss
xor
push
push
popf
mov
mov
sbb
cs
mov
mov
outsl
cmpl
popf
sahf
mov
jg
das
fidivs
sub
js
loop
jbe
add
or
leave
mov
jb
int
int
add
mov
ss
enter
insl
or
xor
out
divl
cmp
cmp
xchg
hlt
push
jne
or
das
inc
cmpsb
mov
mov
fdivp
jmp
sahf
sahf
dec
jno
outsb
cmp
int
out
xor
mov
sbb
aam
sub
test
jbe
push
sbb
int3
int
xchg
mov
xor
fsts
into
mov
pop
scas
and
sti
lret
adc
sbb
lahf
push
inc
mov
dec
loop
push
stos
push
jno
or
scas
pop
add
aad
add
pushf
inc
mov
mov
fdiv
lods
xchg
mov
xor
pop
add
mov
xorl
jb
inc
and
fists
adc
mov
xchg
sub
xchg
xchg
xchg
imulb
aaa
and
lahf
cmpsb
test
in
xchg
clc
jp
cmc
out
sub
mov
pop
loop
mov
or
push
mov
fstpt
xchg
jecxz
insb
fdivrs
add
jle
push
arpl
jp
inc
ret
out
push
sub
xchg
push
adc
roll
ret
dec
aam
dec
test
jle
mov
xchg
xchg
das
mov
cmpsb
seta
das
mov
aas
iret
out
in
and
rcrl
rorb
test
enter
or
sub
sbb
adc
cmp
and
and
xchg
xor
pushf
cmpsb
jbe
fs
sub
adc
je
adc
mov
clc
ja
cli
paddd
fnstenv
cmc
xor
orb
out
popf
xchg
mov
mov
push
inc
push
test
or
pop
adcl
daa
sub
inc
add
insl
iret
adc
adc
pop
inc
movsb
mov
popf
pop
enter
sbb
mov
gs
inc
mov
and
bound
pushl
pop
xchg
cmpsb
repnz
loop
hlt
shll
out
lds
insb
icebp
push
enter
push
jo
ds
test
mov
mov
mov
pop
inc
xlat
xor
or
stos
in
or
or
adc
inc
adc
loop
jnp
fists
jo
jle
push
push
push
push
decb
pop
xor
mov
cld
inc
fsubr
or
lea
push
fistps
ficoml
aas
mov
sub
adc
cmp
mov
fsub
fcmovbe
out
addb
mov
nop
xor
adc
inc
mov
ret
jbe
sbb
or
sub
jp
mov
lock
fistpll
adc
les
mov
xchg
xor
xchg
mov
test
fs
jae
roll
push
enter
pop
sbb
int
or
jecxz
sub
jecxz
test
aad
adc
ljmp
jno
pushf
daa
lahf
jo
adc
mov
mov
mov
sti
jg
mov
push
bound
fwait
mov
in
loope
rclb
cmp
scas
mov
addr16
fs
add
push
sub
cmc
cmp
fists
sahf
jmp
call
dec
adc
sub
and
mov
xor
cmp
push
sar
pop
aad
lods
adc
inc
adc
into
rcrl
sbb
mov
loop
xchg
inc
das
cmc
adc
sbb
shrl
push
xor
ror
leave
daa
aad
mov
pop
mulb
add
adc
imul
adc
mov
mov
mov
mov
loopne
sbb
int3
jg
out
sub
cmp
sbb
xor
and
sbb
cmp
dec
ret
jae
popa
nop
mov
hlt
prefetch
fwait
cmp
inc
in
daa
insl
int
mov
pop
enter
push
push
loopne
iret
out
mov
add
dec
mov
add
adc
push
pop
imul
pop
fneni(8087
push
push
mov
insl
jns
call
and
iret
xor
and
pop
loop
scas
dec
iret
sbb
ljmp
sub
addr16
mov
js
mov
adc
aad
jnp
sub
test
fcomi
or
adc
hlt
sbb
lcall
and
dec
xor
pusha
sahf
dec
sub
pop
adc
int
jne
inc
fwait
xor
adc
enter
add
add
popa
out
in
lcall
jae
cmc
mov
outsb
or
test
sbb
inc
repz
add
cltd
lcall
nop
enter
je
insb
sbb
sbb
sbb
ljmp
fsubrs
jp
in
testb
bound
cmp
adc
and
sbb
mov
sbb
push
push
enter
ja
enter
mov
in
cmp
xor
out
inc
pop
mov
adcl
aam
pushf
notl
add
call
movsb
sbb
push
pop
push
sahf
out
stos
cmp
xchg
add
xchg
pop
inc
jmp
fcmovne
adc
orb
insl
mov
sub
jns
sbb
test
dec
adc
mulb
xchg
push
shlb
and
push
and
loop
mov
aam
loope
mov
sbb
sahf
mov
pop
jle
out
sbb
stos
in
or
add
jbe
sub
sar
mov
and
aam
int
notb
sbb
cltd
shll
test
push
pop
xchg
repnz
xchg
inc
mov
add
iret
gs
xor
xchg
sbb
cmc
loop
lret
cmp
jns
mov
fs
pusha
in
sbb
popa
inc
sbb
nop
ljmp
sahf
lock
stos
sub
lods
xor
jb
loop
rcrb
sub
inc
ret
loop
je
sbb
or
int3
or
lock
mov
push
add
lea
movsb
mov
push
xor
jge
shrb
jg
rcrl
mov
and
lcall
cs
xchg
sbb
das
shrl
and
inc
or
mov
in
sbb
sub
mov
pop
and
ficomps
fcos
aas
jns
sub
sub
pop
fbld
pop
or
and
movb
imulb
frstor
dec
push
dec
cmpsb
sbb
push
pop
cmp
mov
mov
gs
lods
xor
sub
cmp
dec
rolb
sub
push
jp
mov
and
mov
mov
xor
pop
test
cmp
inc
mov
xlat
push
cltd
repz
adc
icebp
insl
pop
sbb
add
sub
push
aam
fs
jnp
insl
sbb
inc
push
loop
sahf
mov
mov
maxps
pusha
push
push
inc
mov
lahf
scas
cmpsb
sub
push
incb
frstor
aad
fsubrp
jns
inc
push
lcall
push
in
repz
pop
mov
bound
sbb
outsl
test
mov
jo
sbb
test
dec
insb
test
shrb
popf
sti
mov
setge
das
iret
jne
lcall
mov
push
inc
divl
pop
push
ljmp
add
add
mov
test
sub
adc
xor
xchg
nop
and
adc
idiv
mov
mov
pop
sbb
cltd
repnz
adc
sub
xor
lods
mov
mov
fimuls
or
enter
cmp
mov
iret
loop
in
xor
aas
cwtl
lods
or
push
cwtl
xchg
cltd
sbb
xchg
daa
xchg
pop
pop
test
lock
add
ret
fwait
pop
sub
jnp
adc
fwait
dec
jo
add
inc
lret
xchg
jo
and
push
dec
mov
fnstcw
inc
shrb
push
sbb
pop
inc
dec
mov
addr16
iret
and
inc
lahf
ss
negl
mov
sbb
stc
lcall
push
xor
imul
push
xchg
jnp
dec
test
test
fsts
shr
mov
xchg
xchg
dec
cwtl
fidivrs
into
lods
fcoms
adc
inc
aam
mov
mov
lock
xchg
pushw
cmp
out
sub
stc
in
sbb
sbb
stos
cmp
imul
imul
das
adc
cmp
xchg
push
pop
scas
sub
fwait
stos
dec
fmuls
dec
fldl
fistps
cmc
add
dec
jb
mov
push
dec
add
add
inc
adc
mov
adc
testl
stc
push
call
gs
pop
add
sti
adc
test
jnp
in
out
sbbb
mov
sbb
das
incb
adc
stos
in
loop
sbb
sub
repnz
nop
sti
sahf
mov
or
aam
jecxz
hlt
lock
sub
pop
insb
jno
out
xor
xchg
cltd
pop
pop
cmpsl
mov
or
aam
sub
sub
dec
fs
out
dec
loop
adc
dec
into
out
hlt
add
mov
in
popa
xchg
push
jno
mov
mov
pop
testb
mov
mov
adc
push
imul
jne
rolb
adc
push
xchg
ja
adc
pop
or
xchg
repz
push
out
or
lahf
push
movsl
dec
lds
push
inc
or
adc
test
into
hlt
cmp
mov
xor
adc
filds
xor
mov
dec
push
out
add
jns
push
push
call
pop
xchg
mov
sbb
stos
sar
das
and
xor
stos
sbb
fisubl
push
xorl
jge
test
sub
xor
ret
dec
repz
xor
insb
arpl
push
push
sub
popf
add
outsb
fsts
cmc
popf
movsb
dec
mov
dec
ljmp
popf
mov
frstor
push
stos
cmp
je
add
or
test
xor
outsl
ror
mov
mov
jmp
push
push
sbb
nop
in
test
cli
imul
fucomp
dec
dec
xor
cltd
adc
aaa
adc
add
jg
rclb
cmp
or
aas
xchg
incl
scas
sahf
pop
fs
adc
inc
jnp
xor
sbb
add
decb
popf
in
js
movzbl
adc
imul
pusha
push
mov
out
push
dec
ss
dec
arpl
add
sub
sarb
popa
or
mov
adc
mov
mov
dec
outsl
decb
lods
test
jns
scas
in
ss
jno
pop
lea
test
mov
sbbb
call
into
cmc
adc
and
std
sti
jno
hlt
and
cli
mov
dec
int
jno
and
cmp
fwait
arpl
push
cmp
aam
or
and
mov
push
mov
bnd
add
outsl
call
inc
lcall
or
sub
jnp
mov
adc
test
popf
and
adc
push
pop
testb
push
adcl
int3
and
stc
roll
outsl
mov
out
std
cld
in
mov
jns
xchg
js
imul
push
imul
mov
xlat
cmpsb
mov
stos
out
xor
xor
push
cmpsl
sbb
mov
adc
insl
loope
dec
scas
lret
out
mov
xchg
sbb
pop
ret
enter
mov
and
popa
in
inc
pop
fmuls
mov
fstl
add
add
mov
sbb
dec
ljmp
imul
xchg
xchg
shrl
inc
fldt
push
cmp
or
out
xchg
or
cltd
xchg
sbb
int
imul
shrl
scas
inc
and
pushw
adc
loop
test
cmp
add
jmp
data16
orb
mov
jns
imulb
and
arpl
loop
fdivr
loop
mov
fs
fdivrs
je
daa
jp
les
lods
mov
cmp
fadds
push
enter
pop
jmp
cmp
pop
loop
imul
lods
inc
stos
sub
jnp
sbb
mov
cmp
out
in
aas
adc
dec
mov
sti
jnp
aas
xchg
or
push
mov
sahf
fildll
cltd
jae
jo
mov
inc
dec
jo
or
mov
sub
jnp
clc
pop
mov
xchg
ljmp
push
lret
popf
pop
outsl
sarl
out
xlat
cmp
push
ret
aad
aam
jg
into
decb
push
push
fstps
cmc
out
fxam
scas
push
pop
adc
cld
lods
rcl
in
inc
lahf
movl
pop
or
repz
xor
test
lret
mov
in
jno
push
jecxz
mov
lds
int
and
aam
test
or
js
or
push
aad
add
adc
lcall
adc
inc
or
addr16
pop
jl
std
mov
jecxz
fimull
imul
push
cwtl
in
or
mov
inc
and
cld
sub
mov
mov
ret
fsub
lcall
ss
shrb
sar
push
jp
pushf
and
dec
or
iret
pop
sbbb
sub
or
adc
push
cmp
adc
shlb
test
mov
xchg
or
imul
roll
sbb
test
incl
cmp
ljmp
sarl
leave
data16
lods
adc
iret
rcrl
jae
outsl
lahf
lret
outsb
push
out
call
subl
push
sub
mov
mov
add
push
test
pop
mov
xchg
push
jo
pop
or
sahf
jle
arpl
dec
push
test
push
xchg
adc
xchg
lahf
aam
push
mov
cmp
les
cmp
popa
push
fimull
mov
jno
je
sbb
rsqrtps
loop
repnz
lods
aam
xchg
and
push
sub
pop
jnp
or
loop
hlt
push
mov
mov
mov
push
out
push
jmp
adc
lock
std
mov
hlt
sub
ret
fimull
iret
out
lret
int
mov
je
add
out
repz
xchg
cmp
cmpsb
insl
sbb
gs
loope
cmp
inc
mov
jg
jne
outsb
call
or
scas
pop
sbb
das
mov
mov
mov
pop
fistpll
xchg
pop
or
jne
mov
movsb
sub
push
or
mov
cmp
xchg
cmc
sbbl
xchg
sbb
mov
mov
call
mov
and
dec
aad
adc
fnstcw
jb
push
cs
shrl
mov
pushf
das
out
cmp
repz
pop
sbb
ljmp
cmp
pushf
popf
dec
jmp
mov
inc
jge
mov
mov
out
mov
push
xor
sarl
stos
push
mov
inc
fdivrs
cmp
mov
loope
popa
icebp
rcrb
iret
mov
and
popa
sbb
sbb
push
cmp
xlat
add
inc
jmp
outsb
lahf
dec
pop
les
out
stos
add
add
subb
into
push
pop
fcomps
aam
cltd
addr16
out
push
or
sub
mov
in
lods
lds
das
ficoml
pop
fwait
mov
xchg
push
add
aam
fwait
cmc
adc
daa
xchg
je
mov
mov
jge
or
jmp
into
leave
movsl
ss
mov
xor
lea
mov
sbb
xchg
xor
fmuls
push
sbb
test
xchg
cmp
ss
stos
mov
test
out
jno
dec
outsb
setns
add
lods
pop
add
clc
addr16
call
ja
xor
repnz
cmp
fsub
inc
adc
into
pop
mov
in
pop
dec
and
add
fisttps
loopne
jl
adc
and
and
and
jbe
fbld
sub
ljmp
mov
push
int
sarl
xor
clc
adc
sbb
outsb
sahf
imul
adc
loop
rorb
jmp
pop
aad
pushf
fstpl
xchg
mov
pop
push
xchg
int
fildll
fidivrs
xor
add
ja
mov
adc
mov
xchg
ds
cmp
sahf
enter
mul
sahf
in
aaa
sti
xchg
pop
xor
in
jno
jecxz
lods
repz
movhps
fmull
adc
and
mov
sub
add
adc
add
pop
fcompl
adc
fs
and
sbb
outsl
and
in
into
cmp
xchg
rclb
and
xlat
in
test
mov
lcall
and
inc
pop
add
jge
imul
jge
dec
mov
pop
pop
inc
lahf
enter
cwtl
mov
xchg
mov
repz
sub
cmpsl
mov
push
xor
push
or
lcall
xchg
mov
dec
les
mov
mov
inc
mov
icebp
sub
loopne
push
dec
in
add
mov
ds
ret
movsb
xchg
push
lea
inc
fnstsw
enter
loop
loop
scas
sahf
and
mov
ret
xchg
sub
stc
sbb
lods
push
or
mov
les
add
daa
enter
push
adc
stc
xchg
sbb
lea
add
call
jb
xor
push
icebp
repnz
das
fistpll
and
fs
nop
xchg
in
and
add
fdivrs
imul
adc
test
stos
je
xchg
inc
icebp
out
mov
mov
mov
out
int
adc
pop
jnp
cmp
inc
mov
sub
xor
subl
je
fmuls
dec
fldl
addr16
mov
movsl
cmovs
mov
push
and
jp
adc
mov
loope
fldcw
test
sahf
pop
mov
mov
lods
sahf
subl
popf
xor
imul
pop
scas
out
jo
sar
adc
jae
mov
arpl
in
ds
jno
push
sub
adc
adc
and
clc
andl
cmp
xor
xchg
sub
sti
xchg
cltd
dec
pop
inc
sbb
mov
ret
cmpsb
shl
xor
data16
push
adc
or
push
inc
dec
push
push
scas
stos
sbb
jmp
or
adc
mov
rorl
bound
adc
aam
mov
sti
aas
shr
or
inc
testb
enter
inc
or
push
add
push
mov
popa
mov
sbb
pop
adc
nop
push
push
es
push
pop
xlat
nopl
sub
dec
mov
or
ljmp
sub
stos
adc
adc
popa
das
adc
xor
push
ds
test
movsl
push
add
and
pop
inc
xchg
fists
push
mov
mov
sahf
mov
cmc
dec
mov
push
lock
mov
aas
insb
xchg
add
orb
repz
hlt
mov
mov
dec
sbb
inc
test
mov
aad
xchg
mov
adc
mov
test
inc
and
adc
add
or
stos
xlat
movsl
xor
xchg
out
pop
scas
mov
outsl
dec
imul
mov
sub
lea
imul
inc
jmp
pop
push
mov
or
push
cmp
mov
sub
cmp
pop
das
outsl
and
fistpll
incl
fwait
xchg
adc
clc
cmp
aad
aad
or
adcl
mov
roll
inc
dec
xor
test
xlat
int
pop
ds
xchg
fsubrl
pop
popa
adc
add
xchg
jnp
ljmp
movsl
sbb
add
sbb
lds
into
push
push
mov
or
loop
pop
sti
mov
sub
add
dec
ret
arpl
pop
mov
imul
call
leave
sbb
loope
cmp
mov
push
cmp
lcall
push
inc
sbb
inc
into
or
add
cmpsl
or
and
ja
xor
mov
and
aad
adc
and
pop
xor
fstps
cmc
dec
mov
cmpsb
or
iret
cmp
cmp
test
repnz
iret
test
or
dec
cli
aas
aas
rcr
cmpsb
or
xchg
repnz
push
push
and
imul
out
and
inc
cmp
sub
and
cltd
push
and
fsubr
mov
data16
xchg
lods
fcompl
mov
push
repz
jne
out
or
test
dec
movsb
icebp
add
and
fsubs
in
cmp
rcl
jp
dec
and
pop
movsl
pop
ret
sarb
loope
jmp
cmpsl
sahf
lds
sbb
push
subl
sbb
mov
jmp
inc
testb
call
test
es
ret
mov
inc
lods
jg
jne
mov
mov
dec
dec
aam
lock
and
add
cmc
dec
jns
fs
lods
daa
incb
adc
pop
aad
popa
or
push
je
push
jo
adc
fldcw
fwait
or
and
adc
iret
sbb
movsb
hlt
xchg
sub
out
aam
loop
dec
sub
test
out
push
adc
push
mov
add
jnp
mov
out
adc
xchg
pushf
lahf
adc
cmc
xchg
ret
push
sub
sbb
pop
jp
sub
pop
pusha
out
xchg
xor
cmpl
lcall
bound
inc
cmp
sub
fsubl
pop
loop
adc
sub
push
aam
jg
dec
lods
push
mov
or
pop
rolb
dec
das
cmp
and
mov
out
call
or
mov
sbb
cmpsb
test
ja
imul
mov
js
mov
mov
lds
and
imul
push
repz
adc
rcrb
das
lods
fisubrl
sbb
out
int
or
outsb
sahf
add
adc
call
pop
push
pusha
push
adc
inc
fldt
mov
je
cmp
mov
ljmp
leave
push
popl
lret
aad
nop
mov
je
sub
push
ljmp
xor
xor
jo
repnz
test
cmp
std
or
out
int3
ds
inc
mov
mov
adc
xchg
lret
incl
push
in
and
bound
add
dec
cltd
ja
divb
mov
cld
test
pop
sahf
xchg
clc
out
fisubrs
jbe
mov
mov
cmp
in
cmp
push
dec
xchg
fsubrs
stos
iret
dec
test
divb
je
imul
outsl
mov
ljmp
popf
pusha
fwait
mov
mov
gs
scas
push
xor
aas
pop
dec
fisubs
or
jg
loop
fidivrs
cmc
cmp
lahf
pop
or
nop
add
lods
idivl
xchg
and
sub
lock
popa
push
mov
adc
lods
inc
lds
and
jl
loopne
int
icebp
xchg
scas
mulb
push
stos
mull
stos
jnp
loop
les
aad
and
shll
xchg
xchg
push
enter
adc
out
iret
mov
test
leave
mov
rcll
lret
imulb
mov
xlat
mov
mov
into
cmp
mov
cli
mov
mov
sub
adc
lods
inc
addb
cmp
jle
or
into
pop
mov
out
mov
fidivs
and
jo
mov
push
ljmp
lea
mov
mov
gs
lcall
scas
call
out
cmp
xchg
xchg
es
mov
ja
sbb
or
sbb
test
lea
mov
cmp
aad
push
out
pushf
inc
enter
mov
cli
jne
xchg
push
pusha
adc
ds
data16
inc
xor
rcrb
push
popa
and
cmp
add
idivb
sbb
imul
xchg
jecxz
lea
popa
push
sub
ss
vandps
jae
mov
cmc
fwait
mov
mov
shl
pop
xor
sub
in
insl
stos
push
icebp
inc
enter
in
xchg
lock
mov
int3
mov
add
popf
jns
ret
jg
or
sbb
push
jno
jno
sarb
adcl
mov
xchg
sub
sub
xchg
jne
add
xlat
sub
fbld
adc
arpl
push
das
ror
or
xorl
and
cmp
or
mov
inc
sarl
dec
cwtl
jmp
adc
lods
jne
cmp
add
cmp
call
stos
jg
xor
mov
lcall
mov
mov
sbb
xor
cmp
xorl
mov
clc
lds
dec
add
adc
leave
pop
int
add
loop
sub
xor
pop
and
ss
mov
fwait
imul
outsl
push
dec
sub
je
insl
jp
xor
cli
inc
mov
fisttps
or
sbb
adc
push
dec
fldcw
testb
scas
lahf
jne
add
inc
movsb
jmp
mov
jmp
fistpl
xchg
scas
jnp
stc
xchg
inc
jae
sub
cmp
arpl
sbb
push
lcall
inc
pop
loop
movb
ds
inc
out
ret
cmp
pushl
scas
aad
and
mov
nop
mull
sbbl
pop
sub
sahf
ret
nop
push
scas
push
jne
mov
dec
sahf
in
inc
add
cmp
pusha
outsb
popf
sti
in
sub
push
lds
sbb
adc
mov
out
xlat
sbb
or
add
nop
aad
out
lahf
sbb
loop
xor
dec
inc
nop
mov
cmp
push
fxch
adc
mov
mov
dec
imul
adc
jo
mov
flds
add
and
std
mov
imul
push
add
pusha
adcl
push
fisttpll
xor
pop
pushf
inc
roll
scas
loope
xor
add
cmp
cltd
int
push
ret
test
punpcklwd
jnp
mov
push
mov
adc
shl
insl
testl
xchg
xor
cmpsb
test
xor
pop
mov
xchg
xchg
pop
scas
dec
loop
les
cmpps
push
fistpll
pop
xor
into
imul
lahf
test
gs
lret
outsb
imul
inc
ficoms
shr
inc
cmc
cmp
test
dec
push
ja
jg
dec
sbb
mov
xchg
imul
adc
cmp
lods
ss
pop
mulb
loop
pop
testb
cmp
dec
lret
dec
call
aad
and
dec
ljmpw
push
jle
push
push
or
push
insb
and
push
lods
jmp
loopne
pop
test
and
xor
out
adc
xchg
frstor
cmp
pushl
imul
lods
xor
cmp
sub
dec
sbb
cwtl
cmpsl
sbb
out
loop
daa
jno
push
jmp
pop
add
or
add
pop
mov
mov
push
fmuls
mov
inc
sahf
jmp
fdivrl
cld
out
or
xor
out
rcrb
sbb
filds
or
xchg
in
clc
and
insl
and
cmp
jno
mov
or
inc
adc
pusha
imul
loop
adc
fbstp
mov
adc
test
test
test
jge
test
or
enter
out
mov
push
jl
ficomps
adc
mov
pusha
cmp
in
into
mov
dec
fwait
dec
imul
repz
cmp
mov
loopne
dec
stos
and
hlt
pop
cmp
adc
fisttps
test
xchg
inc
xchg
adc
cmc
or
xor
fisttpll
sbb
repz
cmp
lret
out
sub
sbbb
pop
ljmp
orb
les
jnp
test
sub
pop
rolb
sbb
mov
out
sbb
cmovno
jg
or
push
and
sbb
dec
xchg
cmpsb
cmpsl
sbb
cmp
add
sub
fwait
add
or
mov
mov
adc
enter
add
or
fcomps
xchg
fucomip
jnp
ss
push
sbb
jo
sahf
or
test
mov
push
sub
shll
push
out
nop
fsubp
shll
sahf
adc
int
xchg
aaa
loop
cmp
pop
jne
mov
add
adc
aaa
out
fists
pause
aas
sbb
sub
fistps
xor
clc
int3
popf
xor
sub
sub
cmp
popf
out
xchg
rorb
add
sahf
out
loopne
mov
or
adc
adc
and
xchg
ja
arpl
rcll
pop
push
cmp
add
aam
icebp
cli
jae
mov
sbb
popa
fnsave
sub
xor
out
pop
jo
sarl
or
fadds
cmp
dec
push
fnsave
jmp
js
enter
fmul
jno
test
sbb
or
add
repnz
pushf
adc
xor
inc
rcr
imul
in
adc
in
mov
pushf
rcl
int
fwait
cmp
or
or
push
and
xchg
jg
mov
mov
add
xchg
lahf
movsb
push
into
scas
into
xchg
rclb
enter
and
testl
cmp
js
sub
pop
ss
imul
into
pushf
clc
adc
pop
jg
mov
adc
lock
cmpsl
and
shll
or
sub
sarb
xchg
mov
sbb
fcomp
sti
push
add
fwait
adc
xor
push
test
clc
rclb
sub
adc
jl
ja,pn
pushl
hlt
sbb
or
or
push
divl
outsl
fisttps
and
or
cltd
push
cmp
xchg
mov
popa
jge
mov
sbb
sub
mov
push
adc
outsl
sbb
push
sarb
adc
iret
enter
arpl
sbb
mov
pushf
iret
pop
fistps
call
roll
mov
sub
jmp
rolb
idiv
mov
flds
das
cmp
sarb
add
fildll
sub
or
shll
xchg
xor
or
xor
xlat
mov
xor
sbb
adcl
jb
loopne
mov
ljmp
xor
xchg
aaa
xor
push
and
rorl
out
cld
rcrb
mov
sbb
daa
or
shll
daa
or
xchg
in
in
xorb
gs
pop
xchg
data16
cmp
push
pop
add
mov
in
sbb
xchg
xor
rclb
xor
mov
pop
shlb
xchg
aaa
orl
add
dec
sbb
test
mov
aam
xor
pop
adc
or
test
adc
mov
enter
cmp
sbb
sbb
lahf
ret
pusha
cmp
mulb
and
sub
pop
adc
xor
push
movsb
roll
cmp
jg
adc
movb
adc
loopne
rcl
cltd
adc
cs
or
fwait
lock
cmpsl
or
adc
sub
or
test
xor
mov
iret
sub
enter
add
ds
mov
test
mov
push
sub
xchg
sub
add
mov
enter
xchg
sbb
add
xchg
mov
xchg
sub
in
iret
sub
lea
mov
xor
pop
xor
or
sbb
jno
push
or
jns
repz
sbb
or
sbb
or
xor
or
out
push
cmp
cmp
shll
scas
sub
push
and
sbb
mov
sahf
iret
loopne
nop
xor
mov
sahf
push
jns
sub
mov
mov
xchg
jb
in
add
call
push
call
lcall
jae
jmp
dec
repnz
hlt
xchg
popa
mov
jae
jl
sub
std
mov
imul
enter
sub
or
xor
mov
stos
or
xor
dec
lock
mov
sbb
cmp
xor
insl
xchg
sub
adc
xchg
les
sbb
sarb
sub
xor
adc
sub
cmpsl
popf
xchg
pop
fdivl
sub
xchg
adc
dec
mov
in
xchg
ret
mov
jno
ja
js
sub
enter
xor
aaa
fcoms
xchg
lods
shrb
inc
imul
and
cs
jmp
cli
xchg
call
sbb
add
xor
sbb
push
mov
or
es
sbb
sbb
sbb
sbb
push
cmp
adc
flds
or
sbb
fstps
mov
jl
xchg
mov
daa
cwtl
iret
pushf
sarb
xchg
fbld
icebp
or
push
or
or
adc
repnz
fnsave
mov
and
or
pop
lahf
shll
sub
arpl
in
lahf
sbb
in
mov
aaa
int
cmp
test
sub
or
lock
xor
add
sbb
or
xor
das
mov
cmp
and
xchg
into
xchg
out
xchg
ds
shll
or
or
push
cmp
jmp
sub
xchg
and
loopne
sti
shlb
clc
dec
jno
jmp
mov
jmp
repnz
imul
pushf
fcoms
adc
push
sub
out
test
sbb
loop
es
pushf
stos
jecxz,pn
outsl
test
jecxz
dec
lock
adc
and
aad
mov
pop
xor
pushf
loopne
jne
xor
rolb
inc
push
and
jb
leave
mov
adc
ret
xor
rcrl
outsb
mov
or
inc
cmp
cmpsl
adc
sub
sub
dec
jnp
fmull
inc
mov
xchg
scas
mov
push
or
mov
lea
cmp
xchg
repz
sub
adc
fsubs
lahf
or
jb
outsl
xor
and
jbe
add
pop
icebp
xor
rcll
out
sub
xor
adc
push
sbb
lcall
jp
xor
fwait
jb
sbb
cmpsl
add
les
sahf
add
pop
shrb
mov
lock
std
cmp
psllw
popf
xchg
pop
or
pop
xchg
fbld
rolb
fsub
repnz
outsb
in
cltd
test
out
xor
out
mov
out
rolb
or
xlat
sarb
dec
mov
pusha
mov
fildl
das
adc
sbb
mov
cmp
das
jns
xor
push
or
push
adc
mov
add
dec
mov
xor
or
mov
pop
and
and
jns
xor
xchg
mov
enter
or
or
adc
cwtl
call
sbb
xchg
and
test
jnp
mov
int3
mov
lea
cltd
clc
scas
add
shlb
xchg
or
cs
sub
inc
mov
iret
call
test
rorb
loope
loope
je
subb
mov
push
sbb
xsaveopt
addr16
mov
aaa
mov
and
sbb
test
roll
lea
sahf
cltd
push
xor
std
shrb
jecxz
add
mov
cli
repz
adc
jns
jb
cmpsl
outsl
lahf
dec
xor
add
fdivs
and
push
xorb
aas
cwtl
nop
fidivrs
mov
add
jb
fsts
ds
mov
aam
jno
loopne
arpl
nop
cmp
popf
cmp
test
popf
pop
mov
orl
push
sbb
sub
popl
xor
cmp
mov
or
nop
pop
outsl
dec
cmp
xchg
in
pop
addr16
xchg
sub
xchg
fmuls
xlat
add
cmp
jae
mov
es
mov
sbb
jbe
shrb
cmp
sbb
adc
cmp
testl
insl
iret
dec
lock
imul
push
mov
xor
push
xchg
daa
mov
or
shlb
in
xchg
mov
faddp
mov
pop
cmp
sub
xor
and
nop
shlb
repz
ss
add
or
repnz
adc
add
fnstsw
scas
xor
push
shll
add
shrb
mov
xchg
adc
dec
cwtl
fistps
mov
sub
adc
xlat
dec
das
or
imul
adc
lock
sub
xchg
adc
jae
ffreep
adc
insb
mov
aaa
cmpsl
cwtl
sub
fcomps
insl
nop
jae
add
lods
rcll
adcl
pushf
fidivs
das
mov
lahf
or
add
jno
xchg
adc
xor
mov
cmp
cmp
cmpl
fnsave
test
loopne
daa
mov
sbb
add
sarb
cmpsb
scas
pop
or
sub
or
fwait
mov
adcb
cmc
shlb
xor
push
lahf
push
pop
mov
nop
sub
loopne
mov
pop
add
inc
jo
xor
push
daa
or
xchg
or
unpcklps
mov
xor
fwait
adc
movsl
test
mov
addr16
xchg
test
push
iret
test
mov
loopne
pop
call
or
jno
and
pop
or
sbb
cmp
xchg
fsubr
nop
xor
lea
push
mov
jno
xor
cltd
iret
enter
addr16
jbe
xor
mov
add
or
aam
pop
jg
cltd
dec
mov
or
into
dec
sbb
cmpsl
cmp
adc
adc
mov
shll
lock
nop
sub
jmp
pusha
fcomps
xchg
icebp
cmp
nop
adc
sbb
enter
lahf
xor
inc
cltd
mov
jae
lahf
pop
adc
sub
fbstp
or
enter
icebp
adc
movsb
mov
add
jae
icebp
lahf
lock
xchg
lods
into
lea
mov
imul
mov
xor
mov
sbb
fmul
nop
rcll
fwait
lahf
pop
mov
in
into
sbb
pop
shlb
add
jmp
dec
fucomip
fnsave
scas
adc
jo
xor
adc
dec
jnp
inc
rorl
xchg
cmc
jne
ret
push
fistpll
xor
shll
gs
cmc
pop
testl
pushf
mov
pop
and
adc
lods
push
fistpl
sbb
or
fstp
add
or
mov
int3
push
aam
mov
js
fnsave
or
xchg
fs
adc
dec
or
loop
mov
mul
push
enter
xor
out
mov
shl
rolb
bound
adcb
push
jge
into
loop
mov
cs
lahf
mov
pop
shl
repz
pop
aas
jne
push
mov
or
loop
mov
push
mov
mov
ja
cmpl
scas
mov
jne
stos
movsl
nop
sbb
loop
aam
sub
mov
mov
dec
mov
and
pop
mov
fs
cltd
setp
xchg
push
cmp
leave
push
mov
sub
pop
mov
dec
cmpsb
push
sub
loope
push
xchg
inc
jnp
leave
inc
xor
outsb
xchg
fmuls
mov
imul
repnz
pusha
inc
fldt
gs
sub
mov
push
sub
pop
imul
movsl
push
or
xor
push
clc
mov
fidivs
sbb
mov
sbb
mulb
xor
push
stos
sbb
mov
sbb
out
adc
enter
lret
pop
mov
sbb
dec
xor
int
fs
daa
ret
xchg
or
push
mov
mov
and
movsl
or
cmp
hlt
xchg
lods
jp
jle
jne
ror
loopne
sub
insl
add
aas
fs
out
push
lret
stos
dec
mov
pop
dec
lods
and
mov
call
xor
xorl
call
mov
pop
mov
stc
imul
or
in
and
rep
mov
pop
enter
popa
mov
mov
pop
mov
jp
sbb
insb
inc
jno
sub
mov
loopne
pop
and
sti
xchg
repnz
mov
ficomps
cmp
add
inc
fistl
das
mov
mov
mov
and
push
cmpsl
mov
mul
add
adc
addr16
xchg
ja
outsb
add
adc
sbb
ljmp
push
mov
leave
jmp
sbb
outsb
lcall
les
add
push
imul
cmp
stos
leave
mov
and
jne
add
add
cmp
jae
js
mov
sub
sub
jle
stos
lahf
xor
decl
pop
mulb
pusha
out
xor
sub
jne
adc
es
push
mov
out
jo
stos
lahf
pop
repnz
ret
mov
lods
mov
add
jnp
xchg
shrl
sub
out
adc
negl
ret
push
fimuls
packssdw
repz
shl
push
and
insb
mov
push
fnstsw
xchg
add
add
sub
enter
mov
sbb
lahf
adc
push
jno
stos
stos
push
notl
loop
adc
lcall
stc
jmp
sub
arpl
add
pop
xor
dec
and
ret
test
xor
cltd
ljmp
or
mov
xchg
aam
push
jne
popa
lahf
mov
cltd
fisubl
xor
out
push
jns
les
xor
pop
test
fucomp
insb
mov
xorb
rcl
fs
fsubrs
push
inc
lret
adc
mov
mov
or
divl
in
cmp
jo
into
loop
xchg
stos
sub
ret
lock
scas
loopne
mov
cmp
jno
and
xchg
push
jne
add
xor
add
xor
add
int3
mov
in
sbb
push
push
int
push
test
ret
xchg
and
into
or
leave
adcb
rcrl
sbb
inc
lahf
call
cld
inc
loop
xchg
loope
lret
insb
aad
add
pop
lods
pop
out
add
xchg
iret
sbb
xor
mov
mov
pop
add
and
add
cmp
lock
mov
jo
fwait
push
ds
or
mov
push
imul
xor
add
and
out
mov
pop
mov
shll
dec
iret
into
scas
xchg
add
and
cld
push
shll
int
and
mov
in
testl
inc
icebp
push
adc
push
add
adc
aam
popf
mov
jne
and
enter
arpl
push
jne
xchg
pop
xlat
pusha
and
jl
ret
xchg
xchg
mov
xor
mov
mov
push
mov
dec
mov
push
fmull
stos
sub
add
lea
hlt
push
mov
xor
jle
jae
mov
xorl
out
jno
pop
sbb
sbbb
sub
repz
add
nop
mov
dec
sar
cmp
mov
and
or
adc
add
pop
or
mov
pusha
repnz
adc
add
inc
push
fisttps
or
scas
pop
shlb
mov
outsl
mov
xor
fsubrs
roll
or
jb
cwtl
cmp
lods
mov
push
repnz
hlt
cmp
sub
push
jno
mov
pushl
xor
scas
out
pop
adc
cmpsl
xor
rolb
movsb
cmp
into
adc
shr
inc
dec
or
push
cmc
fnsave
std
mov
cmp
xor
jne
in
fadd
rcr
faddl
fcoml
fldenv
cwtl
xor
xor
stos
add
fidivrl
dec
mov
add
mov
add
nop
call
and
stos
iretw
xor
mov
add
mov
or
and
push
mov
xor
loop
cld
adc
pop
aas
insl
pop
out
test
test
enter
fmuls
outsl
dec
pushf
cmp
xchg
push
repz
test
jnp
outsb
lret
jmp
cld
mov
and
sti
dec
popa
or
lods
into
aam
and
mov
lahf
or
in
aaa
insl
ficompl
mov
dec
push
sbb
add
xlat
test
or
adc
cs
inc
push
push
mov
add
aaa
mov
inc
sbb
test
repz
and
movsl
dec
xchg
out
jl
inc
mov
adc
xlat
xchg
xchg
push
addr16
adc
cmpsb
mull
inc
cmc
sbb
test
cmp
fildll
mov
pop
in
xor
add
int3
std
fcmovbe
mov
lock
sub
add
and
pop
xchg
xchg
je
lret
mov
inc
pop
mov
xor
xorb
or
fmull
xor
cmpsb
cld
jecxz
pop
scas
push
xor
fcoml
pop
dec
jbe
add
inc
fistl
push
jo
popf
mov
push
mov
sbb
add
ss
jg
outsb
push
test
xchg
or
cltd
mov
adc
into
test
hlt
je
xchg
mov
mov
fdivr
inc
ds
dec
push
fsub
push
cmp
mov
pop
pop
andb
or
jns
mov
sbb
push
stc
adc
ret
shrl
mov
ljmp
xchg
stos
testb
mov
and
xor
dec
sbb
sub
adc
jl
out
jecxz
shlb
pop
xor
cmp
dec
out
pop
or
pop
lods
sbb
jge
stc
cmp
shr
lods
ficomps
aad
inc
jecxz
xor
or
mov
xchg
sbb
dec
rcr
mov
arpl
cmp
fwait
in
xlat
dec
add
pusha
pop
cli
fs
fcmovne
imul
adc
xchg
int3
hlt
push
lret
leave
adc
aad
mov
ja
jg
scas
pop
inc
mov
jge
fmuls
cmp
mov
cli
xor
fistpl
f2xm1
xlat
sbb
into
inc
ret
ret
test
addr16
test
or
cmpl
test
data16
xchg
push
jb
stos
inc
cmp
push
ss
iret
loop
popa
stos
inc
aaa
popf
out
adc
xchg
int3
popf
inc
push
lahf
adc
jae
sbbl
sub
pop
push
loop
das
xchg
xor
mov
iret
pop
add
popa
fcmovnb
xor
xchg
adc
ret
leave
lret
in
jbe
xchg
push
test
cmpsl
filds
and
pop
data16
loope
xor
negl
cwtl
or
push
in
pop
dec
aad
pop
call
popf
xor
ljmp
cmc
loopne
jg
shrl
es
mov
xchg
ds
cld
aad
jo
fldl
out
xor
cmp
xor
lret
jl
add
cs
add
call
into
mov
cmp
and
cmc
push
or
sub
pop
out
rol
into
pop
pop
cmp
repz
add
pop
and
scas
ljmp
push
or
lret
es
stos
nop
das
dec
push
testl
inc
fbstp
jne
pop
int
imul
push
cmc
xor
out
gs
shrb
lret
dec
ds
and
jbe
rolb
mov
add
mulb
int
je
sbb
jo
mov
loopne
mov
sahf
mov
mov
loop
xchg
addl
jns
jmp
push
cli
enter
rclb
lds
sbb
inc
mov
sbb
or
cld
sbb
push
adc
xchg
mov
clc
mov
in
movsl
fisubl
sub
movsl
lcall
mov
jne
inc
in
mov
xchg
dec
shll
push
mov
mov
pushf
fisttpll
hlt
jnp
stc
push
test
sub
cmp
sub
lahf
dec
enter
pop
pop
test
jge
sub
roll
and
add
es
cmp
add
inc
lahf
fistpl
mov
in
add
imul
rorl
aad
pop
popa
fldt
mov
jecxz
xor
adc
xchg
mov
mov
jg
push
or
fwait
js
xchg
jle
lds
lret
xchg
pop
aad
xchg
fmuls
push
sbb
mov
test
dec
mov
test
fucomp
mov
adc
sahf
cmp
pop
adc
test
mov
sbb
icebp
mov
mov
imul
mov
inc
or
iret
sbb
sub
xor
and
mov
mov
jecxz
or
cmp
mov
push
push
out
mov
adc
scas
aas
outsl
shrl
cltd
stos
int3
gs
adc
adc
adc
xchg
inc
inc
pushf
dec
fwait
aas
mov
dec
fwait
jl
test
aaa
imul
repnz
pop
sbb
out
andl
mov
push
lahf
mov
in
rcll
cwtl
fisttpl
aad
fdivrs
iret
loop
cmp
aas
xor
fmull
mov
or
xlat
call
iret
int
mov
dec
lret
pop
sub
push
cmp
into
jle
pushf
mov
sahf
cmp
inc
jp
leave
stc
and
pop
out
lods
adc
in
mov
xchg
dec
ret
icebp
push
sbb
mov
mov
adc
dec
xor
pop
shl
xor
imul
je
call
addr16
sbb
mov
push
test
out
jae
cvtps2pd
sbb
xor
xor
mov
je
mov
and
movsl
arpl
adc
popf
push
hlt
xchg
jmp
and
das
xchg
insb
nop
insb
repz
pop
push
shl
js
inc
sbb
nop
sub
gs
test
sbbl
mov
sbb
dec
cmp
jo
mov
call
xlat
lock
adc
xchg
inc
jne
imulb
fldcw
push
jne
inc
test
sbb
jo
mov
cmp
jp
scas
loope
jle
pop
and
loop
orl
popf
in
fistl
mov
int
rorl
inc
pop
ja
mov
xor
push
in
fbld
mov
cmc
or
add
repz
icebp
xor
jae
push
adc
mov
pop
ds
xlat
push
mov
ret
pop
add
loopne
sub
cld
jno
adc
pop
adc
imul
into
add
sub
pushf
mov
and
hlt
in
pop
loop
or
jmp
mov
loope
testb
ret
mov
cmp
test
in
lds
xchg
pop
mov
add
out
xchg
inc
xchg
mov
sbb
pop
xchg
out
in
sub
cmpsb
xor
xchg
fs
cmpsl
lret
mov
or
pop
pop
sub
jo
or
out
loop
cltd
mull
push
sub
push
xchg
sarb
lahf
pop
test
js
inc
xlat
push
jno
xchg
popa
cmc
mov
pop
out
dec
icebp
sub
dec
fdivrs
sbb
add
adcb
dec
mov
je
fldcw
mov
pop
lret
dec
jbe
shll
popl
xchg
dec
in
out
movsbl
mov
daa
or
mov
cmp
sub
jg
and
out
dec
and
xchg
add
add
aad
and
jle
cmc
aas
mov
repnz
das
fisubrs
xchg
mov
ss
inc
push
loop
jnp
inc
xchg
mov
xchg
lahf
scas
jecxz
or
cmpsb
call
add
jne
adcb
sbb
fdivrs
popa
mov
outsb
mov
cmc
enter
jg
pop
sbb
cmc
xchg
cmc
sti
inc
adcl
dec
cld
ficomps
adc
jg
lock
ljmp
fsubrl
cmp
cmp
sub
stos
cltd
jnp
sub
mov
negl
pusha
scas
mov
mov
xor
xorl
std
push
in
xor
dec
addr16
mov
xchg
hlt
fwait
sahf
ret
lods
dec
lcall
rcl
jp
stos
jle
mov
dec
push
testl
cwtl
sub
bound
inc
arpl
js
repz
mov
lds
sbb
and
xlat
call
jo
outsb
sub
or
jnp
push
pop
xchg
sub
lahf
rol
push
insl
fsubrs
leave
inc
insl
jne
rolb
stos
mov
ja
sub
push
in
jbe
hlt
xchg
cmpsl
jg
mov
xchg
mov
pushf
fisubrl
repz
je
fisubrl
es
mov
in
mov
cmp
mov
in
and
add
mov
ss
ds
pop
data16
out
push
lahf
xchg
out
loop
ret
mov
popf
js
mov
je
lcall
push
adc
subb
mov
adc
push
inc
xchg
out
push
ret
sahf
pop
add
push
fs
mov
cmp
jbe
adc
jl
shr
xor
or
add
fistl
cs
dec
dec
in
ss
push
loope
stc
aas
insl
xor
cs
xchg
bound
jp
sbb
sbb
aad
ds
rcl
sbb
mov
hlt
or
cmp
pop
ds
or
sahf
test
cmpsl
addr16
popa
mov
adc
pop
cmp
cmp
jnp
cli
cwtl
pusha
push
mov
or
ljmp
jno
mov
pop
or
test
loopne
push
sbb
push
je
ffree
hlt
pop
loop
add
subb
jnp
out
sbb
adc
divl
lret
push
or
ljmp
sbb
push
sarl
fnstsw
adc
dec
lcall
inc
pop
lods
enter
call
frstor
cs
add
into
mov
mov
fwait
dec
test
scas
out
mov
and
sub
outsl
call
jg
add
sub
add
imul
loopne
xchg
add
push
sbb
in
idivb
adc
addr16
aad
wbinvd
mov
mov
push
sahf
jnp
sbb
movsb
mov
pop
or
push
inc
jbe
dec
xchg
sbb
fdivrs
dec
mov
add
adc
jg
sbb
push
fisttpll
das
push
lahf
add
and
pop
jnp
fsubrl
push
mov
xchg
rcr
fstpt
sbb
add
mov
add
imul
and
je
lea
pop
jmp
shrb
adc
add
or
sub
outsl
fwait
int3
enter
xchg
sbb
fdivl
push
mov
cmpsl
aam
data16
mov
sub
sarl
xor
clc
fbstp
sbb
xor
je
pmulhw
ffreep
test
mov
and
pop
mov
cmp
sbb
loope
ficomps
push
mov
sub
xor
jp
mov
je
sbb
push
fwait
fldcw
jb
lock
sub
hlt
mov
xor
mov
movsl
dec
jle
addb
mov
daa
jle
mov
out
or
mov
das
int3
mov
loopne
int
popa
adc
or
adc
pop
inc
pusha
dec
sub
mov
sub
xchg
pushf
jp
jmp
sti
mov
aas
cmp
aaa
pop
or
lcall
icebp
add
ficomps
mov
add
cmp
aas
int
xor
stc
icebp
add
ljmp
mov
jne
sbb
dec
cmpsb
cmp
and
push
adc
mov
inc
push
add
lods
mov
xchg
or
jo
xchg
call
sub
test
push
bound
jle
out
out
xor
dec
dec
xchg
popf
arpl
cmp
adc
pop
ljmp
ljmp
push
int
sub
cs
mov
rcrl
pop
sub
out
scas
and
pop
xchg
out
xchg
cmpl
cmp
add
leave
les
dec
xlat
imulb
cltd
ja
test
mov
int
pop
adc
cld
lods
mov
sbb
outsl
mov
scas
mov
or
sbb
fucom
sbb
cmp
out
inc
daa
aad
and
filds
stc
test
lods
jle
fsubp
mov
shlb
lods
test
jns
xlat
xor
and
mov
ja
or
loop
cmp
iret
inc
ret
cmp
inc
into
sar
int
add
mov
pop
movsl
lret
or
imul
je
sbb
aad
inc
stos
xchg
mov
fdivl
pusha
pop
loope
jg
call
loop
arpl
cmp
lcall
jne
push
rclb
mov
dec
fwait
xchg
inc
adc
pop
sub
sbb
ja
test
pop
rorl
push
sub
mov
out
lcall
clc
mov
adc
lret
pop
add
test
pop
sub
xlat
jmp
sbb
mov
add
lret
add
cld
fldt
ds
test
jae
adc
mov
cltd
mov
sub
push
or
test
lds
xor
or
sbb
sbb
repz
dec
sub
mov
mov
adc
push
data16
sub
jge
out
daa
fadd
fs
aam
jo
aad
pop
sub
jno
push
gs
cwtl
pusha
int3
xchg
out
pushf
xor
and
push
sbb
mov
pop
imulb
cmc
xor
leave
inc
cmp
mov
push
nop
adc
push
leave
xchg
adc
adc
mov
sub
test
push
cmp
mov
cmpsb
testl
xchg
out
or
pusha
push
or
mov
int3
jo
in
mov
mov
repnz
xchg
and
dec
repz
mov
pop
sub
jmp
lods
lahf
adc
mov
enter
rcrl
mov
pop
cmpsb
scas
add
test
js
call
sbb
fwait
or
push
mov
dec
adc
xchg
cltd
or
push
mov
mov
and
add
adc
xor
bound
ret
dec
out
loop
int3
lret
out
adc
cmp
int
or
xchg
lcall
xor
xcrypt-cbc
cmpsl
push
negl
sbb
mov
arpl
test
add
test
inc
xchg
int3
js
pop
hlt
pop
xchg
sbb
insb
push
leave
adc
sarb
hlt
sahf
adc
frstor
or
loop
sbbl
xchg
xchg
adc
jno,pn
loop
sub
gs
xchg
mov
dec
sub
push
add
mov
pop
or
dec
sbb
aad
out
jge
inc
cmp
cmp
je
movl
lret
insb
mov
and
xchg
stos
or
pop
push
pushf
sub
les
sbb
movsl
add
loop
in
xchg
cmpsb
cmp
loop
aam
or
or
cmpb
push
xor
mov
ljmp
jns
js
dec
mov
cmp
cmpsl
jnp
int3
int
mov
pop
sbb
push
fs
push
imul
cmpsb
cmp
pop
push
loop
es
sbb
adc
addl
lock
in
inc
and
aaa
xor
lock
loopne
gs
ds
push
lods
mov
jne
ror
adc
mov
xchg
adc
push
imul
outsb
cltd
pushl
imul
imul
movzbl
mov
jge
xchg
dec
movsb
lea
imul
push
push
or
adc
cmpsb
xor
xchg
mov
lret
and
jle
adc
pop
in
mov
cli
lret
fcoms
and
fisttpl
loop
dec
push
insl
push
pop
adc
jns
rcr
xchg
jne
addr16
ss
decb
adc
and
inc
push
jge
bound
int
inc
je
or
mov
push
sbb
lods
repz
inc
add
sub
repnz
ficompl
xchg
mov
movsb
aam
lds
push
dec
pop
ret
repnz
jno
jbe
inc
mov
cwtl
jl
push
into
xchg
lods
mov
dec
inc
mov
jecxz
add
and
leave
add
cmpsb
call
mov
add
repnz
dec
xor
pop
ss
enter
mov
add
mov
jae
add
scas
shlb
pop
add
iret
sub
popf
cmp
cmp
mov
xchg
or
ds
gs
or
mov
sbb
push
je
jge
lock
dec
sbb
cmovle
push
pop
loopne
push
test
add
adc
and
test
pop
ret
dec
jle
mov
in
pop
mov
rcrb
jo
imul
inc
lcall
arpl
sbb
je
lds
scas
sub
cmp
add
rcrb
testl
ss
cwtl
leave
mov
xor
sti
or
add
sub
cmc
fists
aad
push
add
push
xchg
out
xchg
mov
mov
pusha
jo
cmp
mov
mov
push
neg
sub
test
stos
data16
sti
mov
cmp
shl
stos
sbbb
arpl
push
xchg
orps
js
mov
test
decb
jle
sub
jp
jno
mov
std
out
std
jl
xchg
out
and
lea
stos
fldcw
or
jp
enter
jns
mov
ja
lods
inc
mov
push
mov
pop
push
subb
xchg
loopne
add
insb
aad
into
xlat
or
je
call
ja
cmp
ret
jne
xchg
lcall
outsb
cwtl
je
jnp
or
pusha
sti
ljmp
xor
pop
xchg
sahf
or
mov
push
std
ret
jno
aad
and
mov
cmp
ret
mov
rolb
stos
xchg
enter
fcmovb
inc
or
pop
xor
insb
cli
cmpsb
jne
xchg
xchg
rolb
loop
loop
or
loop
sbb
mov
stos
repz
insb
lods
cwtl
in
xchg
fdivrs
enter
adc
jecxz
push
pusha
test
mov
adc
adc
cmpsb
mov
and
pop
into
sbb
imul
mov
sub
push
lea
cmp
pop
in
jb
push
push
cmp
aad
sub
xor
aam
mov
mov
fdivl
sbb
sahf
cmp
or
js
sbb
mulb
stc
aaa
push
and
mov
or
jecxz
enter
cmpsb
inc
jno
adc
sbb
sahf
inc
insl
xchg
int
sysret
and
mov
xchg
mov
or
inc
loop
sahf
add
push
push
mov
pop
mov
xchg
ss
xor
jne
ret
sub
or
and
loop
fcom
jne
fisttps
mov
lret
ja
fdivs
add
outsb
mov
or
insb
push
inc
adc
sub
iret
sub
or
jno
cs
popa
cmp
push
fldl
and
ficoms
out
lcall
punpckhdq
stos
pop
mov
lods
cmp
adc
mov
sahf
mov
hlt
pop
jecxz
mov
lds
lods
js
mov
sahf
rcll
xchg
das
rorl
popa
stc
sbb
mov
ret
mov
mov
pop
xchg
dec
sbb
adc
add
scas
push
cmp
pop
cltd
lret
mov
jno
ds
xchg
outsb
push
aaa
xchg
loopw
sti
jo
mov
mov
mov
ret
fsub
mov
xor
dec
adc
and
inc
pop
rolb
loop
push
dec
xor
mov
sub
or
xor
ficomps
xor
insb
bswap
mov
das
test
loope
rol
int3
loop
cmp
jg
jae
out
lods
je
and
in
and
out
out
mov
jg
cmp
loopne
fistps
mov
cmpsb
or
push
out
sbb
adc
loop
jo
adc
lea
add
out
or
pop
adc
stc
or
mov
daa
jnp
jecxz
mov
pop
lock
pop
mov
repz
les
sub
je
sbb
dec
movsl
stos
divb
loope
and
fwait
cmp
push
sbb
sub
icebp
cmpsb
fwait
xchg
jns
ret
and
cld
cwtl
imul
in
xor
je
adc
dec
aas
xor
add
leave
pop
fs
fstpl
je
idiv
sahf
sub
push
lret
rcr
fistl
push
dec
popa
jne
xlat
and
pusha
sub
in
xor
inc
push
insb
rorl
cld
or
add
jp
or
lea
adc
push
cli
inc
arpl
mov
fisttpll
aam
cmp
sahf
lcall
scas
rcrb
pcmpgtd
fsubrp
sub
xlat
imul
mov
ja
add
mov
popf
xor
outsl
jnp
xchg
mov
cmp
xor
fdivl
cmpb
jmp
sub
enter
cmc
sbb
enter
lods
add
jnp
jno
add
cwtl
clc
xor
rorb
cmp
lock
sahf
pop
std
inc
mov
lahf
loope
cmpb
add
pop
lahf
inc
pushf
nop
push
arpl
imul
cltd
xor
popf
fucomip
and
pop
adc
inc
xchg
cmpsb
dec
aam
xchg
cli
pushf
flds
push
inc
pcmpgtb
or
cld
or
repz
inc
pusha
xchg
hlt
cmp
mov
pusha
scas
xchg
xlat
and
stc
lea
ljmp
sbb
and
stos
xchg
hlt
adc
movsb
add
mov
jo
in
inc
test
aaa
pop
jp
pop
repnz
sti
data16
popf
lcall
xchg
add
pop
adc
jno
outsb
adc
repnz
sbb
fisttpll
cmp
cmpb
jo
lahf
or
push
test
shlb
mov
xor
in
push
adc
add
pop
mov
jmp
jbe
push
xor
int
out
fs
sbb
sahf
add
push
repnz
cmp
lods
repz
loope
sub
into
mov
arpl
push
clc
fstpl
xor
test
and
ret
jo
dec
mov
pop
add
adc
pusha
jae
loop
aam
dec
sub
leave
and
dec
rclb
jno
add
push
mov
das
decb
fdivl
movsl
xchg
movhps
lahf
add
push
mov
xchg
aaa
mov
mov
loop
pusha
sbb
daa
insl
out
sti
and
sub
inc
mov
icebp
jnp
pop
loop
or
pop
js
mov
ret
jno
lds
fbld
push
xor
pop
xor
in
pusha
aad
adc
repz
add
push
fbld
addb
mov
dec
push
insl
nop
adc
mov
sub
out
cmc
fstpl
shl
aad
cmp
inc
add
in
xchg
mov
fstpt
cmp
call
fists
fistps
mov
mov
out
push
cmp
push
sbb
imul
xlat
mov
xchg
xlat
add
or
pushf
jmp
mov
ljmp
decb
into
sub
adc
jns
mov
sbb
leave
dec
push
dec
insb
xchg
inc
adc
inc
mov
mov
sbb
aam
cltd
addr16
cmp
pop
dec
shrb
mul
xchg
xchg
xchg
cmpsb
int
fildl
fdivs
sub
jnp
xchg
dec
push
adc
notl
call
push
pop
incb
xor
cmp
out
pusha
xchg
iret
je
jmp
loop
sub
mov
jno
and
repnz
xor
fsubrl
mov
movsl
int
and
dec
stos
ja
adc
sub
sbb
cmp
movsl
rclb
arpl
mov
sub
outsb
mov
fldenv
push
adc
ficomps
rcrb
filds
dec
movl
pop
icebp
mov
push
aad
movsl
mov
push
mov
add
rcll
inc
fstl
push
jnp
lret
push
adc
enter
add
xchg
add
mov
enter
insb
test
pop
and
mov
loop
dec
fwait
testl
pop
mov
push
cmc
cmpl
shl
jmp
lds
mov
adc
scas
dec
jle
jbe
gs
rol
divl
push
jl
fdivrs
xor
push
xor
cmp
imul
sub
sbb
xor
sarl
pop
xchg
stc
test
pop
mov
mov
xchg
pop
pop
sub
jg
jns
movb
jnp
and
std
ljmp
mov
pushf
mov
pop
mov
sub
lds
mov
addb
inc
and
dec
xor
enter
mov
psrld
inc
push
pminub
sub
cmp
fstl
cmp
add
jnp
mov
mov
add
test
lcall
scas
mov
lahf
insb
push
lret
rcll
sbb
pop
adc
mov
cmp
xchg
pop
js
mov
jmp
adc
and
push
add
cmp
xor
loop
das
push
inc
out
cs
xor
cmpsb
out
dec
inc
or
int3
data16
push
push
cmp
popa
sbb
ds
mov
inc
aad
sbb
cmc
mov
lods
lock
mov
popa
mov
neg
lods
xchg
shrl
pushf
sub
cmp
adc
int3
cmp
call
fwait
cmc
add
outsl
xor
rcll
sub
inc
push
scas
insb
xlat
jo
sub
leave
pop
adc
add
push
out
or
jne
sbb
inc
jbe
icebp
data16
cwtl
push
jnp
fidivl
dec
lods
inc
add
jo
mov
push
sahf
shll
hlt
or
fwait
lahf
or
cmp
mov
add
scas
adc
leave
ret
jg
call
roll
cmp
and
jmp
mov
lods
fisttpll
pop
shll
shl
fiaddl
xor
out
cmp
and
xchg
cmp
mov
adc
sbb
mov
jne
call
pop
xlat
cmpl
es
es
dec
jl
test
sti
jo
xchg
lea
push
mov
int3
jl
int
add
mov
mov
int
mov
mov
push
iret
mov
cli
movsb
jbe
cld
push
dec
lds
sub
cmpsb
sub
or
jmp
mov
ret
sahf
mov
rclb
jo
ret
adc
jnp
js
add
push
iret
enter
aaa
xchg
sub
push
dec
adc
mov
in
lret
shrl
mov
addr16
lret
pop
inc
mov
mov
mov
inc
aad
aam
sub
mov
cs
scas
jns
out
call
jle
outsl
inc
stc
add
fimull
pop
loop
cmp
dec
dec
xchg
faddl
xchg
sub
xchg
gs
adc
lahf
jb
xchg
jnp
mov
out
jg
dec
setp
mov
xor
jmp
dec
dec
iret
testl
mov
push
bndstx
lahf
enter
or
and
imulb
ja
arpl
shlb
aas
cwtl
loope,pt
cld
fdivl
cwtl
aas
arpl
pop
test
jne
dec
mov
pop
movsb
mov
xchg
decl
add
push
int
ds
outsb
iret
inc
mov
inc
xor
push
add
push
in
fdivrl
push
enter
loop
xchg
out
loopne
fstpt
dec
push
sarl
loopne
lret
imul
cmp
pusha
pusha
fld
fildll
int
outsb
cmp
call
mov
lods
ret
leave
cmc
push
mov
aaa
je
dec
int3
std
sbb
mov
cld
scas
test
inc
jp
sbbb
sbb
pop
insl
jno
lret
sahf
das
pop
xor
dec
xchg
test
push
test
lahf
inc
mov
jno
xor
xchg
push
mov
cmp
aad
or
and
adc
out
xchg
xor
or
mov
adc
scas
test
sub
cmp
xor
scas
adc
mov
icebp
or
fiaddl
xchg
lret
sbbb
inc
aas
lcall
nop
sahf
pop
xchg
aad
dec
scas
jp
add
or
int
cmc
mov
decb
cli
mov
leave
jne
int
ds
jbe
testl
mov
andb
jo
adc
mov
inc
ja
mov
push
xchg
fiadds
fwait
icebp
mov
clc
mov
jecxz
cmp
shl
fbld
es
mov
daa
loop
inc
das
icebp
push
or
fistpll
setp
movsl
add
sahf
adc
jle
movsl
push
lahf
lcall
neg
sub
stos
ljmp
out
mov
popf
mov
sbb
sub
pop
neg
jns
and
ss
dec
cmp
insb
or
ds
xor
std
and
push
call
scas
loop
mov
sub
push
iret
or
add
xchg
mov
repnz
xchg
jmp
aam
sbb
lret
xchg
test
jmp
fmulp
xor
outsl
push
rolb
sub
add
mov
pop
test
mov
leave
jle
mov
int3
cs
out
pop
dec
xchg
mov
add
push
add
sbb
adc
movsb
insb
daa
rclb
cmp
loopne
sub
lcall
pop
subb
push
sbb
inc
mov
and
inc
fisubrs
adc
addr16
jmp
cmp
sub
lods
leave
sbb
sarb
cmp
mov
add
stc
pop
lret
mov
das
adc
loop
ja
icebp
jle
gs
cmpsb
sub
sbb
mov
mov
push
enter
dec
pop
loop
adc
aam
or
dec
add
sbb
sbb
cmp
mov
stos
or
adc
inc
mov
or
std
pushl
and
int3
addr16
add
je
cmp
cmp
pushf
or
jl
lcall
bndldx
popa
push
inc
sahf
popa
daa
jmp
mov
lcall
mov
xchg
adc
out
daa
mov
enter
hlt
jle
pop
jne
add
mov
ffree
adc
int3
push
test
std
lock
call
push
cmp
cwtl
jae
jns
mov
sbb
add
lret
mov
or
mov
sar
ss
push
sub
dec
add
or
loop
insb
and
and
xor
movsl
lahf
and
stos
cmp
into
aad
daa
sub
or
outsl
xor
mov
fs
push
mov
mov
aas
out
aaa
and
cwtl
test
aam
and
sbb
pop
pop
add
push
addr16
jae
movsl
xchg
sub
int
inc
test
xor
xchg
fstl
insl
jmp
imul
cmp
imul
pop
popl
adc
cmp
pusha
mov
sbb
or
add
shlb
mov
add
repnz
ds
dec
push
cmp
int
xor
out
stos
loopne
jge
lds
jo
jmp
aad
push
jecxz
mov
inc
lret
div
js
std
push
test
push
outsl
push
daa
cmc
mov
rcl
add
xchg
add
mov
lea
loop
jge
leave
xchg
pop
mov
test
push
cmc
test
sahf
sub
xor
mov
add
ja
push
les
mov
stc
push
pavgb
ss
sub
dec
aaa
mov
and
rcrb
mov
xor
xor
mov
dec
test
int
adc
loop
push
push
inc
repz
jae
sub
or
scas
lods
out
lcall
cmp
bound
fnstenv
fists
stc
sbb
lds
push
fwait
jbe
ret
dec
out
in
iret
loope
fists
in
pop
fdivrs
pop
push
insl
js
sbb
pop
add
sub
in
ja
mov
or
repz
out
pusha
xchg
fmul
call
mov
dec
test
sbb
mov
out
push
in
cmpsl
aas
sub
push
sub
jns
push
je
sarb
and
ds
fwait
int
sub
xchg
out
in
mov
fs
pop
cltd
cltd
add
aad
psllw
mov
xchg
filds
mov
jg
xor
add
fbstp
aad
jne
or
cltd
jmp
jno
bound
inc
orb
add
les
xchg
adc
lcall
jp
lret
lcall
fsubrs
loopew
insl
stc
test
cmpb
mov
gs
insb
fstpl
jg
insl
jmp
sbb
or
dec
xchg
fucomp
sub
lcall
jmp
adc
lret
pop
lret
leave
sbb
xchg
insb
xchg
nop
aaa
mov
cs
adc
inc
andps
cld
jae
cld
loop
push
int
orb
pushf
pop
jmp
frstor
shlb
movsl
dec
sbbb
push
push
insb
jle
push
mov
pusha
xchg
pop
sbb
daa
pop
rol
cmc
cwtl
jecxz
jecxz
and
jp
mov
inc
xchg
xor
mov
ret
mov
mov
lahf
mov
ds
fmulp
movl
addr16
add
out
clc
pop
out
adc
adc
inc
gs
mov
movsb
popa
out
jnp
xchg
subb
cmc
xchg
pop
and
or
cmc
nop
sbb
cmovb
rol
mov
jp
jno
push
adc
in
push
dec
adc
js
push
leave
sahf
jp
cld
add
jmp
enter
xchg
js
ret
decl
aas
and
arpl
sbb
nop
sub
sub
outsb
sbb
movl
scas
and
sbbl
cmp
pop
pop
fnsave
mov
dec
movsl
and
cmpsb
incb
inc
fmul
jp
pop
xor
es
push
push
insl
push
movsb
sub
sarl
sahf
enter
push
int
repz
leave
imul
pop
daa
cwtl
call
daa
jl
push
pop
call
pop
mov
xchg
or
repnz
ljmp
dec
cmpsl
adc
cmp
sbbb
cltd
clc
gs
fistpll
jo
sbb
pop
bndmov
jge
sti
sbb
or
stc
outsb
cwtl
sub
aad
pusha
push
dec
sbb
daa
mov
mov
or
xlat
push
mov
add
sub
push
and
pop
sbb
mov
cmp
test
shrl
lahf
stc
and
jne
inc
adc
sysenter
js
cmp
lret
sbb
lods
add
aad
add
enter
in
mov
adc
inc
ss
pop
cmp
or
imul
ficoml
cwtl
loop
push
insb
adc
insb
xor
fistps
test
xor
cld
shll
arpl
or
ljmp
fidivrl
movb
inc
in
ret
xor
inc
and
xchg
scas
cs
mov
adc
or
xchg
push
pop
filds
push
addr16
roll
mov
add
ds
pop
mov
insb
xchg
je
sahf
add
nop
loopne
ss
push
in
push
inc
or
inc
and
cmc
stos
pop
xlat
add
inc
rorl
mov
cli
scas
xor
sbb
mov
sbb
lock
push
xchg
out
in
addr16
inc
into
cmp
mov
cli
andl
cmp
hlt
sub
push
rol
and
inc
mulb
aas
loop
and
fisubrl
adc
jbe
inc
div
test
pop
notl
nop
inc
fnstsw
rcll
dec
cmp
cmp
jl
add
adc
cmp
sti
xor
cmp
aas
loop
fstps
loop
sahf
cltd
fwait
pop
aam
enter
add
sbb
cli
cmp
aas
jo
scas
loopne
mov
or
jg
xorl
vcvtss2si
pop
lahf
pop
dec
rolb
outsl
or
ret
xlat
daa
mov
push
push
add
in
sahf
arpl
aas
or
jge
loop
xchg
adc
xor
cs
and
xchg
inc
cmpsb
pop
inc
lret
leave
adc
and
and
stc
dec
fisubrl
rcr
jnp
xchg
ficompl
jnp
lock
fwait
xchg
and
xchg
adc
les
inc
xor
push
mov
mov
and
cmpsl
push
xchg
aad
sbb
adc
rorl
mov
xor
jecxz
fs
rol
ds
leave
dec
fmul
cmp
xor
movsl
mov
mov
push
pop
aaa
or
popa
in
rcr
lahf
shrb
and
in
mov
push
repnz
push
jmp
iret
sub
fs
xor
add
add
or
push
ret
loop
inc
sbb
mov
jae
repnz
dec
lods
clc
je
dec
jg
out
test
shrl
fistpll
xchg
mov
push
popf
adcl
and
jl
lds
and
test
jo
fs
and
aad
ljmp
scas
rolb
lods
in
lret
mov
daa
jnp
mov
jecxz
sbb
aam
mov
sub
jbe
or
call
test
popf
mov
jecxz
add
lahf
mov
jmp
lcall
mov
jge
and
add
popa
xor
xlat
loop
ret
jmp
mov
add
inc
xor
aam
ror
scas
jno
sti
xchg
sbb
lds
add
or
out
fisubrl
push
adc
ss
imul
out
xorb
mov
leave
mov
aam
cmp
orl
testb
mov
pop
mov
bound
test
pop
push
xlat
mov
sbb
jp
push
pop
sub
adc
inc
add
and
fcmovne
out
nop
xchg
sbb
adc
xor
enter
call
es
xchg
or
sub
je
jle
inc
sarl
orl
imul
mov
outsb
shll
aad
add
movsb
loop
addr16
lcall
fs
aad
shlb
lds
je
adc
in
fildll
xor
push
and
ds
cmp
pop
adc
insb
int
xchg
nop
iret
jnp
fidivl
scas
mov
push
sbb
sahf
mov
cltd
jp
and
jecxz
stc
jmp
mov
fwait
inc
xchg
repz
xor
enter
mov
push
push
incb
inc
push
loope
and
movl
ljmp
jp
test
push
mov
std
cltd
xchg
pop
nop
push
xor
xchg
lds
adc
shl
sub
stos
loop
xor
rcl
xor
loop
repnz
cmp
mov
push
out
loopne
mov
mov
push
adc
dec
add
loop
fst
mov
outsl
sbb
jnp
lea
adc
add
aad
mov
repnz
test
jmp
pop
push
push
dec
insl
mov
rcr
in
mov
add
movsl
hlt
outsb
popf
fs
xchg
sbb
sub
xchg
mov
adc
pop
testb
daa
xchg
inc
sbb
addr16
inc
fisttps
lods
xchg
ljmp
add
jne
pushf
stos
loop
enter
lea
mov
inc
rcrb
negl
fstpl
cmpb
into
and
add
sahf
mov
lods
inc
sub
sbbl
ret
jle
or
adc
push
mov
sbb
lcall
movsb
or
sub
fcomps
mov
push
push
and
lahf
adc
mov
pop
fstp
stos
sub
or
pop
jns
test
leave
shr
loop
add
inc
sti
jp
fstpl
lods
test
enter
mov
aad
mov
add
xchg
inc
jnp
lret
mov
adc
or
push
push
shrl
xchg
sub
cltd
test
cmp
mov
xor
mov
push
sub
xchg
mov
cs
rcll
mov
in
mov
add
insl
and
sub
iret
lods
adc
jno
lods
bound
cmp
aad
pop
xor
out
loop
sarl
lcall
pusha
pushf
stos
sub
jno
mov
push
nop
jo
push
add
lcall
loop
jmp
sti
in
dec
adc
outsb
outsl
test
mov
fisubs
mov
cwtl
sub
insl
lods
fistpl
inc
pop
pushf
adc
mov
dec
mov
orl
sbb
adc
int
test
jne
addr16
js
loop
xchg
inc
ficoml
inc
aam
iret
sar
inc
dec
jns
push
cmp
inc
xchg
mov
bswap
push
iret
popa
push
rcr
loop
ja
mov
test
sbb
loopne
leave
push
cmpsb
pop
in
sbb
xchg
or
push
ret
aaa
and
xchg
subl
add
xchg
sahf
add
scas
insl
mov
aaa
adc
fld
or
sbb
lods
shrb
ss
stos
ljmp
push
lods
call
pop
add
adc
test
sub
xchg
jnp
cmp
in
sub
xor
lahf
insl
mov
testl
adc
sbb
or
mov
inc
fstp
pushf
test
cmc
negl
adc
push
add
xchg
pop
lcall
xor
push
cmp
pop
mov
mov
aas
subl
call
and
jnp
mov
adcl
cmp
fldl
decl
call
aas
jne
fmulp
xor
jg
cmp
nop
lahf
pusha
call
adc
adc
push
push
mov
in
loop
into
out
pop
xchg
jg
scas
sub
add
mov
cwtl
test
mov
lock
xor
aad
mov
and
sub
sahf
test
ja
inc
adc
in
rorl
xchg
out
sub
add
cmc
sub
hlt
dec
fistps
add
xchg
inc
mov
push
inc
sahf
xchg
push
adc
sub
test
pusha
push
cmp
shrl
out
loope
sub
out
push
insb
testl
adc
push
scas
std
sub
inc
ss
movsl
and
add
call
xor
lods
jle
out
xor
mov
add
xchg
cmp
test
and
lea
pop
stc
add
adc
fs
cmp
lea
outsl
sub
mov
pop
pop
push
add
cmpsb
xchg
bound
loop
arpl
mov
jns
xchg
ror
sahf
xor
xor
nop
dec
out
xchg
mulb
lock
mov
sbb
sub
jo
test
sbb
insl
dec
jo
aas
dec
jnp
jg
mov
stc
add
mov
jns
mov
jge
sub
xor
jne
push
adcb
inc
push
es
adc
pop
xchg
add
shlb
pop
imul
pop
cmp
dec
xchg
test
scas
test
or
dec
dec
in
int
es
sbb
lahf
push
mov
inc
daa
scas
popf
pushf
pop
adc
sub
push
movsl
fildll
or
push
and
fiadds
sub
or
inc
iret
out
in
or
inc
imul
loop
or
test
adc
mov
decb
test
out
sub
into
loop
imul
sbb
arpl
ljmp
mov
stc
insb
fisubl
dec
xor
fstl
clc
outsb
fcmovu
jne
inc
pop
jg
out
inc
cltd
xor
sbb
lods
mov
push
inc
out
sub
or
lcall
cmp
in
sub
mov
push
pop
shll
push
stc
je
aas
pop
loop
add
push
sbb
sbb
lea
gs
mov
mov
cltd
jp
out
xchg
and
jae
test
out
cmpsl
popf
sub
or
xchg
ret
or
sub
lret
jge
xor
inc
fdivs
outsl
test
les
push
lds
dec
cmp
sbbb
fdiv
mov
sbb
sub
ret
int
sahf
jo
or
aaa
lock
faddl
into
xor
movsl
pusha
jo
lds
and
les
pop
cmp
or
loopne
hlt
mov
mov
js
xchg
or
mov
inc
mov
or
imull
mov
xchg
decb
gs
adc
mov
sub
pusha
mov
add
vpsubsb
out
xchg
jmp
cmp
leave
xor
adc
add
mov
jl
dec
mov
mov
shr
dec
mov
imul
loopne
ffreep
es
jle
jmp
les
jne
jecxz
mov
sbb
push
lcall
add
xlat
mov
jno
inc
sub
in
or
pop
popa
dec
xchg
cmp
in
loopne
add
mov
jno
enter
and
dec
hlt
cwtl
aad
scas
or
jne
and
jnp
stc
notb
push
dec
add
shlb
fs
lcall
jne
sub
loop
lahf
mov
out
pop
push
js
aam
jnp
lcall
adc
aas
pop
xchg
mov
adc
mov
aam
cmp
repz
cmp
lea
xchg
cmp
add
sbb
int3
cmp
stc
xlat
pop
adc
int
shrb
movsl
jae
mov
in
lods
out
scas
aad
jge
call
movsb
scas
out
stc
mov
add
ret
cli
mov
push
sti
add
dec
pop
inc
jecxz
movsb
xchg
cmp
fstpt
xchg
popf
or
data16
popa
inc
add
and
push
ret
xchg
mov
push
aas
incl
xor
xor
xlat
int
add
cltd
enter
jg
das
cld
mov
loope
push
jne
loop
shlb
mov
add
subb
xchg
in
cltd
xlat
lahf
adc
xchg
jnp
mov
xorb
outsb
mov
jmp
cmc
rorb
scas
pop
adc
xchg
pop
ljmp
mov
loop
subl
insl
adc
addr16
fldl
pop
aaa
test
sbb
in
lea
pusha
xlat
loope
orl
fldl
or
dec
dec
or
pusha
cmp
inc
cmovge
out
divl
icebp
xor
push
loop
sbb
cmp
adc
jnp
sbb
mull
stos
mov
mov
aad
cmp
outsb
push
xorb
nop
jnp
adc
out
lods
xor
xor
cltd
mov
mov
sbb
jnp
push
std
mov
lcall
xchg
rcll
xchg
or
push
call
jp
sbb
hlt
into
sbb
inc
adc
and
cmp
movsl
fidivrs
cmp
mov
outsl
pop
xor
mov
pop
outsl
fwait
pop
add
mov
pop
sub
dec
loop
addl
sub
xchg
and
pop
mov
jns
out
subb
shlb
pop
std
scas
mov
mov
xlat
inc
adc
test
mov
push
nop
lahf
stos
andnps
insb
push
hlt
lods
lods
mov
pop
setge
and
lret
addr16
mov
xor
in
std
push
pop
jg
xor
push
mov
adc
xchg
test
loopne
mov
adc
fwait
xor
mov
mov
inc
gs
dec
in
mov
fwait
out
dec
imul
fbld
out
lcall
enter
out
aad
repz
cli
xchg
inc
loopne
push
arpl
inc
pop
fsts
xchg
out
repnz
out
rolb
das
loop
cld
push
hlt
xor
mov
mov
cli
add
add
push
fsubp
sbb
jmp
jmp
xor
outsl
pop
sub
push
lret
sbb
adc
int3
mov
xlat
jno
repnz
dec
push
or
lahf
je
xchg
jnp
outsl
push
pop
sub
iret
xchg
adc
inc
mov
dec
sub
adc
popa
and
pop
pop
ret
sahf
adc
ss
daa
push
mov
xorl
cmp
loopne
ja
lods
adc
add
jmp
insb
add
and
and
popf
adc
jg
lock
les
sarl
ss
xchg
jecxz
aas
mov
sbb
addr16
mov
pop
push
das
adc
jmp
push
jns
push
inc
clc
aas
cmp
jp
lret
aaa
or
xor
pop
push
sbb
xor
ret
add
sbb
xchg
mov
js
add
add
and
sbb
adc
jle
xor
add
ds
cmc
mov
fstpl
pop
pop
adc
xchg
push
nop
or
scas
enter
adc
das
movnti
insl
lahf
pop
cmc
sub
xchg
out
insl
and
xchg
xchg
insb
decb
add
mov
scas
jp
push
mov
lcall
loopne
and
xchg
xchg
mov
inc
insb
stos
dec
xchg
fnstenv
pop
xchg
push
enter
mov
jle
mov
rcrb
sub
icebp
mov
and
or
lea
xchg
lcall
dec
sbb
mov
jmp
cmc
test
fptan
daa
push
stos
inc
jo
hlt
push
push
push
dec
call
push
xor
popf
push
adc
adc
scas
mov
and
fcoml
fnstenv
mov
fs
mov
dec
sbb
sub
pop
andl
mov
lds
or
inc
xchg
insl
xchg
xchg
mov
inc
push
mov
fisttpl
mov
pop
adc
negb
lahf
insb
int3
gs
push
insb
jne
mov
mov
les
push
mov
out
xchg
stos
adc
pop
sub
sbb
popf
sub
mov
pop
sub
jne
lods
jbe
and
sti
add
pop
adcb
cmp
xchg
addr16
cmpb
adc
mov
and
aaa
and
jecxz
adc
sbb
fldl
cmp
out
inc
out
xchg
sbb
fsubrl
nop
xchg
add
push
inc
aas
and
movsb
xchg
jne
add
push
dec
adc
push
out
xchg
test
sub
push
int
mov
inc
inc
nop
je
cmpsl
sahf
or
fiadds
sbb
push
or
add
xor
imul
outsl
lahf
mov
push
pusha
sbb
in
jmp
sub
clc
repz
mov
leave
or
and
pushf
lret
xchg
cmp
ficoms
and
adc
bound
add
test
inc
dec
hlt
out
pop
push
sbb
pop
jne
into
imul
pop
lret
xchg
in
mov
adc
push
ja
bswap
insl
f2xm1
les
jge
fnstcw
cmp
orb
mov
mov
fnsave
int3
lret
mov
add
inc
aad
rorl
fs
cmpsl
out
mov
cmpsb
xchg
pusha
xchg
xchg
insb
dec
pop
subb
iret
adc
lret
sub
xor
cmc
mov
mov
xchg
or
lret
push
or
adc
jg
add
sbb
push
stc
loope
fstpl
inc
adc
out
push
xor
mov
mov
out
test
mov
fnsave
xchg
xchg
cli
sub
lods
call
stc
jnp
mov
setne
xor
cli
adc
mov
push
pop
lock
stos
jmp
mov
mov
sahf
cmp
scas
insl
call
pop
into
push
inc
dec
push
adc
out
jo
daa
cmp
out
leave
clc
jl
sbb
movsl
pusha
lea
mov
cmc
cmp
adc
pop
add
aad
popa
out
in
fwait
mov
lret
insl
test
add
popf
xorl
sar
push
jns
xor
insb
movsl
pop
subb
cltd
push
int
add
jnp
pop
lret
aas
int
mov
hlt
test
ret
ret
test
loop
clc
loopne
scas
pop
in
xor
out
adc
arpl
sbb
mov
stc
mov
mov
adc
dec
mov
jnp
cld
or
subl
neg
or
cmc
jmp
pop
orl
loop
shlb
aam
pop
ja
jmp
test
mov
dec
pop
dec
fwait
aaa
int
adc
movsb
lods
lods
xchg
js
xchg
inc
pop
div
cmp
leave
cmpsb
mov
pop
and
fcompl
ljmp
add
stc
pop
fisttps
mov
fldl
jo
cmpsl
mov
xor
cmp
les
sub
pop
orb
mov
mulb
test
adc
push
ljmp
loopne
je
hlt
lea
mov
lcall
dec
push
mov
sbb
xor
and
rol
sahf
add
jle
push
sbb
add
adc
push
xchg
dec
pop
test
sbb
pop
jo
iret
xchg
iret
cmp
xor
fmull
sbb
add
lret
jge
ljmp
cltd
and
mov
lea
orb
loop
mov
lret
sbb
sahf
xchg
notb
fldl
xchg
jmp
icebp
sub
xor
aas
shlb
dec
push
and
push
outsl
sbb
ffree
ficoml
inc
fcmovnbe
clc
cmp
out
ficomps
xchg
loop
lret
aam
shlb
adc
je
mov
mov
and
fists
mov
xorl
enter
xlat
js
jg
test
fcmovne
and
shll
xorl
cmpl
mov
leave
cmp
push
lret
scas
and
arpl
repz
push
cmc
hlt
and
daa
in
loop
mov
imul
call
and
lock
xchg
mov
daa
dec
add
mov
mov
push
int
xchg
loop
xor
rclb
and
in
add
sub
mov
push
loop
mov
iret
movsl
and
fwait
add
loope
and
adc
jmp
scas
and
sbb
nop
or
in
sti
xchg
or
xchg
popf
and
adc
in
scas
lahf
ret
mov
in
sub
jp
dec
jo
mov
shrb
xchg
insb
push
push
xor
push
push
nop
sbb
xchg
dec
mov
inc
jle
or
lahf
nop
andl
cmp
fimull
cltd
pushf
mov
sub
lea
lea
fildl
push
jge
repnz
push
pop
push
push
ror
lret
push
xor
adc
clc
mov
subb
push
sbb
fdivrp
mov
mov
adc
scas
les
lret
cmp
les
out
and
pop
adc
sub
sub
loopne
inc
mov
imul
push
cmp
sbb
push
mov
test
aaa
ljmp
aas
inc
mov
lahf
pusha
popf
sub
pop
pop
sbb
ljmp
out
pop
fdivl
jb
ja
lods
adc
mov
xchg
cmp
ret
scas
aam
cmp
dec
add
add
push
je
cs
popf
loop
rcll
ss
and
or
mov
stc
dec
adc
fwait
lds
sub
loop
adc
fildll
ret
frstor
pop
loop
mov
mov
shlb
lahf
bound
rcr
mov
gs
rcrb
cmpsb
adc
inc
loop
and
stos
pusha
sahf
pop
xchg
nop
mulb
adc
and
ds
xor
imul
shrl
xor
sahf
pop
icebp
or
jns
cmp
mov
xchg
mov
pushf
aas
sub
xchg
movsb
sub
jns
xor
or
sub
adc
mov
jecxz
pop
dec
push
fists
add
call
add
and
pop
mov
iret
add
fisubs
or
sahf
orb
mov
cmp
mov
cmc
nop
subl
push
mov
mov
call
leave
rcll
testb
jmp
orl
pop
idivl
in
arpl
mov
scas
cmpl
pop
and
or
sbb
xor
sar
mov
sbb
and
jnp
imul
pop
lock
sahf
mov
cltd
cmp
jp
hlt
cmp
jp
outsl
inc
loop
jle
sbb
cwtl
adc
add
sub
pop
xor
iret
out
pop
xor
jecxz
lret
sbb
and
inc
cmpsb
in
sbb
test
jge
mov
push
leave
jecxz
in
lahf
push
loop
enter
mov
mov
lds
call
xchg
mov
xchg
xor
or
add
sub
cmp
sarl
hlt
pop
sub
pop
movsb
jg
push
xor
adc
repz
xchg
loop
cld
imul
lods
sbb
jbe
adc
jg
insl
jmp
ret
stos
sub
fimull
push
out
xchg
mov
nop
pop
aad
push
pop
dec
out
pop
xchg
data16
cmp
repnz
pop
inc
mov
sbb
sub
ret
cmc
shl
pop
xchg
mov
cltd
jb
mov
push
mov
arpl
popf
cltd
adc
loop
mov
push
push
out
add
nop
or
adc
inc
xchg
xchg
inc
loop
push
imul
sub
inc
lahf
mov
xchg
and
cs
mov
push
je
movsl
fistpl
imul
clc
mov
lds
sahf
or
cli
mov
mov
mov
loope
push
push
add
dec
pop
or
mov
jecxz
push
in
jne
jg
pop
add
jge
jno
insb
sbb
mov
sbb
ds
xchg
cld
or
out
sbbl
mov
push
mov
ret
jge
call
stos
fstl
mov
mov
nop
push
mov
ljmp
xchg
jmp
adc
xchg
push
mov
cmp
nop
jp
inc
gs
imul
sub
jbe
cmp
cmp
jp
inc
xor
cmpb
popa
std
mov
lods
stc
adc
sbb
addr16
xor
adc
or
cmc
mov
mov
or
cmp
xor
mov
aam
add
adc
push
inc
sbbb
fisttpll
cltd
pop
addr16
push
loop
sub
imul
rorb
pop
cmp
in
test
pop
mov
test
sub
movsl
mov
test
sbb
scas
lods
cld
outsb
push
adcl
sub
mov
xor
sbb
push
mov
ret
cmp
pop
mov
mov
push
jne
pop
in
adc
into
loop
and
insl
push
shll
addl
shlb
cmp
mul
inc
xor
ror
or
sbb
sub
aad
ret
lea
cwtl
fnsave
adc
dec
xor
ds
mov
cmp
jmp
push
loopne
outsb
or
ficomps
mov
xor
pusha
sub
mov
push
mov
scas
jae
rolb
adc
mov
add
inc
pop
mov
aad
andl
jg
pop
ret
lret
jnp
stc
pop
and
outsl
jns
jno
outsb
pop
int
mov
dec
daa
mov
mov
sbb
sbb
mov
ret
inc
dec
out
insl
mov
out
or
mov
cmp
insb
sbb
int3
test
in
arpl
pop
das
lea
add
jo
pop
xor
mov
or
stos
cmp
rcr
add
dec
test
push
ret
adc
call
xor
mov
in
call
loop
pop
xor
sbbl
xchg
aaa
pop
dec
jecxz
lock
cmp
adc
or
or
xor
push
pop
pop
es
pop
into
or
add
push
push
inc
pop
add
sarl
scas
lods
psrlq
lods
popa
fisttpll
mov
xchg
test
stos
mov
sub
outsb
decl
push
xor
xchg
fsubp
fs
add
out
lahf
fs
sbb
fcomip
xchg
jns
sti
xor
shrb
push
mov
pop
enter
pop
ret
mov
je
enter
enter
out
pop
cmc
add
jns
imul
ja
dec
out
pop
mov
mov
shrl
and
cmc
adc
dec
sahf
mov
ficomps
pop
outsb
push
pusha
insl
inc
mov
push
outsl
sub
scas
js
mov
adc
stos
out
lcall
test
mov
mov
andl
pop
fimuls
sub
xchg
mov
dec
outsb
add
movsb
lea
and
div
mov
incl
cli
xchg
jo
inc
data16
out
cmpsl
shl
dec
js
sahf
add
jno
ss
rcr
pop
subb
push
jae
adc
loopne
inc
rcrl
fidivs
inc
adc
pop
sbb
pop
mov
dec
pusha
out
movsb
xor
loopne
push
xor
mov
out
inc
js
pop
push
xchg
decb
dec
cmp
push
aad
push
popa
push
and
jne
ljmp
inc
jno
xchg
out
arpl
call
jne
loop
aad
ret
xchg
add
icebp
stc
negl
cltd
push
inc
xchg
push
pop
pop
bound
inc
shl
xchg
push
jle
jp
mov
push
nop
lock
aas
int
cli
stos
pop
sub
pop
loop
xlat
lret
mov
lea
mov
stos
insb
mov
dec
add
xchg
sub
adc
fmulp
mov
adc
test
popf
xor
repz
out
sub
scas
jg
sub
lret
jne
cmp
addl
into
lret
outsb
outsl
add
jecxz
or
jae
shrl
rorl
mul
dec
lahf
or
sub
in
and
push
jno
jg,pt
pusha
decl
add
das
mov
fucom
xchg
mov
mov
lahf
fwait
adcb
xchg
jnp
test
outsl
fistps
push
fmulp
scas
or
cmp
scas
repnz
jnp
inc
lret
jno
mov
mov
mov
imul
adc
cmp
in
fldl
xchg
scas
push
not
in
test
push
cltd
addl
mov
inc
and
scas
icebp
nop
out
jne
or
out
add
xchg
sbb
xchg
call
inc
xor
sarl
xor
sub
sahf
lock
lret
cmp
pop
mov
dec
pop
lds
add
ret
add
shll
fwait
add
sub
clc
sbb
popa
pop
or
or
xor
mov
sarb
mov
jo
mov
mov
addr16
sbb
mov
stos
aaa
loopne
add
inc
clc
jge
dec
xor
xor
mov
jns
jno
stc
push
sub
dec
inc
jbe
push
add
dec
dec
jle
dec
cld
xor
pushf
mov
jb
jmp
jnp
shlb
cmp
fs
pop
in
fisubrl
out
std
notb
out
mov
fidivrs
lret
dec
jnp
les
sub
ret
test
fs
pop
mov
and
test
xchg
mov
dec
sub
push
call
cmp
cmp
xchg
faddl
cwtl
outsb
popf
jne
leave
ret
cmovb
pop
popf
imul
testl
inc
mov
outsb
cmp
pop
or
pop
push
fldt
push
into
out
movsb
movsl
lea
in
mov
addr16
in
pop
or
adc
pop
pop
call
push
mov
hlt
mov
jecxz
adc
lcall
nop
cli
imul
jmp
xchg
and
pop
xchg
call
jmp
pop
cmpsl
test
lea
cmp
aas
idiv
lods
popa
inc
js
int3
adc
int
popf
outsl
lods
ljmp
lods
jo
mov
out
out
cmp
lods
mov
xor
test
add
adc
movsb
dec
sbb
xlat
in
xchg
push
mov
loop
jnp
mov
fldl
sarb
fsubr
inc
sub
stos
cwtl
mov
add
insl
xor
insl
das
dec
pop
adc
aad
jo
or
shrl
xchg
ja
ret
ret
cmp
loop
pusha
fildll
mov
iret
pop
addr16
jmp
jl
push
popa
sub
pop
popf
out
out
iret
stc
fsubrs
lret
sahf
mov
mov
mov
inc
hlt
arpl
lds
jg
clc
imul
or
dec
lds
aad
mov
loope
mov
cmpb
or
sbb
lahf
adc
push
dec
jne
je
pusha
popf
pop
outsb
lret
adc
jne
scas
out
aad
adc
push
xor
idivl
outsb
data16
mov
cmc
loop
push
ret
add
xchg
push
cmp
mov
cmc
ret
cmp
sbb
cmp
out
cmpsb
call
jo
and
pop
aad
sbb
sub
xchg
cmpsl
enter
pop
sbb
cmpsb
roll
mov
xor
sbbb
add
jp
sbb
sub
adc
xor
in
std
lret
pop
lahf
nop
jae
aad
outsb
mov
cmc
lds
aas
push
mov
sub
jge
dec
push
mov
cmp
faddl
push
add
jns
add
dec
or
insb
cmp
rcll
mov
xchg
lahf
sbb
loop
mov
xchg
jnp
pop
push
or
outsb
xor
cmpsl
xchg
pushf
adc
imul
push
fsub
shrl
sbb
aam
xor
jle
adc
popa
aas
pop
insb
push
adc
hlt
push
sub
jbe
and
int3
fisttpll
icebp
icebp
xchg
aad
mov
fbstp
fimuls
push
popf
sub
xchg
dec
sbb
ficompl
xchg
inc
insb
mov
les
cmc
jp
ficompl
lods
ret
sarl
pusha
mov
je
push
inc
mov
lret
bound
popa
in
push
fadds
sub
icebp
repz
or
insw
mov
push
inc
paddd
in
leave
out
popa
icebp
pop
sahf
mov
mov
cmp
add
subb
mov
xchg
or
jle
add
in
inc
push
insb
in
cmp
push
jne
adc
in
mov
dec
xlat
jecxz
and
jge
lret
loop
xor
pop
dec
jne
outsb
cmp
pop
ljmp
mov
sbb
negb
xorb
adc
scas
shrb
mov
scas
add
cmp
inc
pop
pop
add
fcompl
int
mov
add
lcall
sbb
rclb
sahf
sub
and
cs
dec
cmp
les
fsubr
add
or
notb
cmc
call
std
jae
stc
cmpsb
imul
fwait
cs
cmp
and
cltd
ret
clc
xlat
xor
mov
xchg
int
sbb
jmp
mov
gs
pop
xchg
adc
outsl
sub
push
loope
pop
outsb
sub
mov
movsl
ljmp
sbb
mov
sub
xorb
int
sbb
lea
adc
push
push
sub
mov
ds
sub
je
imul
ficomps
jbe
aam
popf
lahf
dec
and
jge
sbb
xchg
jecxz
jp
pop
not
inc
das
fs
push
sbb
movsb
into
mov
insl
popf
stc
lahf
setne
sbb
lcall
insb
cmp
xchg
dec
mov
mov
popa
push
pop
cmc
mov
pop
jmp
fs
xchg
test
jg
movsl
cmpsl
cmp
xchg
roll
ja
test
mov
push
fistl
push
cmp
ss
loope
in
sub
jne
mov
inc
push
cwtl
xchg
mov
scas
xchg
aad
dec
pop
sub
xor
jne
je
pop
push
mov
dec
mov
test
cmpb
out
insl
ret
imul
push
frstor
inc
das
js
rorb
ror
lods
dec
push
jne
stos
push
addr16
xor
jmp
out
pop
repnz
sub
int
sub
sub
and
loop
dec
popa
xchg
inc
sub
jg
shlb
test
out
or
adc
add
call
gs
mov
rol
cmp
jg
jecxz
pushf
mov
test
test
mov
cmp
pop
push
shrl
lcall
popf
leave
lea
repnz
pop
fimuls
fistpl
aam
cltd
leave
in
sub
mov
cmpsb
sbb
cmp
je
or
mov
sahf
sbb
dec
mov
sub
pop
add
xor
dec
mov
push
push
xor
lret
mov
xchg
adc
inc
ret
testb
dec
test
and
cmc
inc
push
jmp
inc
scas
push
decl
lea
adc
movsl
mov
lahf
mov
int
sbb
push
push
inc
nop
sbb
loopne
push
jp
mov
scas
fsubrs
cli
out
gs
push
adc
daa
mov
insb
xchg
mull
sub
mov
std
jb
loop
add
outsl
pop
fs
and
ja
mov
mov
and
cmp
sbbl
xchg
adc
out
xchg
inc
inc
push
lret
mov
aam
out
das
dec
inc
lds
pop
mov
push
out
ss
add
add
push
push
scas
sub
mov
adc
movntq
pusha
or
sbb
ret
lock
popa
cmp
orb
adc
rcl
mov
jp,pn
mov
in
fadds
and
pop
test
sbb
pop
pop
sbb
pop
ret
xchg
popa
pop
jmp
mov
or
xchg
sbb
sahf
sbb
sbb
inc
cmp
lahf
filds
movsl
cld
shl
sahf
fidivl
adc
inc
mov
or
mov
pop
ja
jmp
test
xor
test
incb
call
mov
popf
or
pop
xor
cmp
out
mov
sub
sbb
push
frstor
sbb
sbb
dec
and
sub
gs
cltd
repnz
add
fcomp
clc
popf
xor
out
adc
fnstsw
add
in
and
xor
adc
xchg
fucom
pop
hlt
mov
in
cs
sbb
je
or
jo
or
jmp
adc
jmp
jge
sahf
sbb
int
ret
inc
push
jno
xor
xlat
fadds
and
inc
jae
sbb
outsb
test
and
sub
out
sbb
sbb
shll
pop
push
dec
je
ja
jp
pop
pop
out
into
mov
lea
rcrl
pop
cmp
cmp
adc
add
sub
fbld
hlt
or
dec
xor
xchg
scas
aad
sbb
push
pop
adc
mov
aas
pop
loop
inc
cmpsl
or
push
push
mov
repz
cltd
or
pop
call
add
cmc
mov
mov
mov
or
fdivp
mov
xchg
xor
cltd
push
pushf
push
xchg
push
lea
push
movsl
pop
cwtl
fwait
mov
enter
inc
out
scas
push
repnz
bound
pop
in
rclb
insl
adc
insb
push
mov
sub
xchg
jno
xchg
cmpsb
in
out
mov
jp
mov
sbb
icebp
out
add
loop
rorb
pop
mov
mov
jge
jg
cmpl
add
lods
or
loop
xchg
jl,pn
pushf
pop
xchg
test
ss
pop
outsb
jmp
dec
inc
push
inc
pop
push
xor
xor
movsl
mov
mov
sbb
sub
or
or
or
outsb
dec
rcr
lahf
dec
and
mov
lods
cmp
test
rclb
enter
sub
scas
jno
xchg
dec
jmp
ljmp
lahf
fs
adc
in
xchg
loop
or
push
sti
sbb
sub
jle
sub
out
xor
sbb
ret
aam
pop
aam
jns
cs
jno
movsb
imul
mov
sbb
cwtl
insb
hlt
subb
mov
testb
loop
inc
fsubr
sahf
pop
adc
test
addb
sbbb
xor
add
xchg
stos
movsb
cmc
arpl
cld
xchg
and
out
add
push
je
and
mov
inc
mov
xchg
rcr
push
mov
mov
push
scas
ret
rorl
cmp
adcl
cmp
or
pop
ds
mov
adc
je
in
adc
lods
push
pusha
jnp
fwait
mov
sbb
lahf
jp
pop
shll
aad
sbb
hlt
sub
ret
shrb
out
mov
fistpll
iret
nop
scas
outsb
and
push
repz
loop
fmuls
xor
mov
add
xchg
add
ss
or
fwait
adc
jne
in
fidivl
mov
sub
enter
pushf
loop
jnp
int3
loop
xor
cmp
ds
lods
and
in
inc
fs
stos
out
push
jae
jmp
cmpsl
popf
and
js
cmpsb
push
or
ret
jg
test
popa
lahf
sub
pop
stos
out
inc
negb
in
inc
sub
push
fdiv
jo
sub
adc
popl
inc
scas
ss
mov
inc
loopne
fistps
mov
repz
pop
mov
pop
pushf
js
pop
imul
dec
inc
rcrl
or
add
adc
lahf
lods
mov
in
enter
pop
and
sub
adc
inc
xchg
sahf
call
mov
out
popa
inc
push
inc
adc
sub
cwtl
mul
inc
push
jmp
xor
xchg
and
cmp
mov
popf
mov
and
imul
lcall
fsubs
sti
mov
lret
mov
mov
mov
aam
and
bswap
xor
test
jno
pusha
pushf
lcall
pop
xor
out
xor
mov
push
dec
jae
out
arpl
stos
add
cmp
sar
pushf
adc
or
test
ficoml
xor
xchg
jnp
add
cmp
orb
aam
mov
mov
xchg
mov
mov
int
sub
jg
ret
mov
xchg
loop
lods
add
sbb
rcrl
sub
xchg
xchg
int3
jne
loop
ficomps
dec
adc
mov
dec
sti
cs
push
roll
cmp
sub
or
jno
mulb
pusha
and
rcll
mov
pop
add
or
mov
mov
sbb
sub
mov
clc
lods
dec
push
out
xor
shlb
pop
xchg
mulb
jecxz
rcrb
fsub
push
or
cmp
adc
nop
or
sbb
pop
arpl
xor
adc
test
sub
in
mov
iret
idiv
mov
or
ret
dec
jnp
jno
dec
out
loope
jnp
sahf
dec
push
test
mov
dec
xor
clc
pusha
jns
pusha
inc
out
adc
pop
jns
and
and
adc
pop
call
loop
cmpl
mov
mov
in
cltd
imul
adc
hlt
ret
or
add
je
cmp
jg
jnp
push
and
test
in
mov
sahf
push
out
mov
push
imul
scas
xor
fwait
mulb
icebp
aas
or
out
pop
jo
add
sub
push
jo
in
pop
insl
mov
data16
xchg
out
lret
mov
xchg
push
sbb
iret
adc
loop
jnp
jo
cltd
vdivpd
popf
bound
dec
mov
mov
sub
inc
aam
dec
mov
sbb
insl
ja
push
insb
orb
mov
jns
xor
pop
adcb
in
jp
add
cmp
idiv
test
fbld
cs
pop
incb
mov
in
aaa
push
out
adc
jbe
dec
sbb
push
adc
loop
push
int
xor
xor
lods
inc
cltd
jae
xchg
pop
mov
in
cmp
fstl
test
out
mov
std
movb
mov
jp
test
jp
sbb
adc
add
test
imul
aaa
cmc
out
aas
xchg
je
cli
sub
jecxz
jae
push
inc
lea
add
stc
pop
push
dec
int
push
fidivrs
push
jns
dec
ret
push
dec
insb
cmc
call
cld
cmp
fdivs
lods
ss
ss
arpl
gs
add
xchg
fisttpl
cmp
push
xchg
or
gs
outsl
sbb
int3
out
sbb
sbb
notb
sarl
jne
shl
fwait
or
adc
mov
frstor
add
stos
or
out
add
cmc
xchg
mov
outsl
lret
outsl
xor
sti
or
jle
loop
pop
xchg
mov
sbb
fcom
mov
mov
add
mov
jne
movsl
daa
xor
lret
stc
push
adc
aas
and
inc
sub
in
adc
mov
sub
or
dec
int
mov
loop
mov
in
add
shlb
popf
dec
filds
or
movsl
fwait
xchg
negl
movsl
or
imul
xchg
cmpsl
jo
push
add
test
adc
shr
mov
out
decl
faddl
or
aaa
ffree
rcrl
push
jg
dec
or
inc
sub
cwtl
mov
lods
sahf
cmc
mov
nop/reserved
mov
test
stc
and
mov
mov
lahf
push
mov
adc
pop
mov
dec
cmc
loopne
cmp
xchg
and
cmp
or
add
adc
add
inc
adc
stos
std
sbb
adc
push
add
rcrl
out
mov
ss
or
cli
pop
mov
fists
mov
xchg
jmp
or
push
or
fistps
mov
sub
insb
lcall
mov
push
call
cmc
or
cmp
gs
push
inc
outsb
fisubrl
cli
pop
shll
xchg
enter
add
daa
xchg
or
sti
jnp
lock
repnz
and
fisttpl
addb
aad
dec
loop
sbb
int
adc
aaa
daa
icebp
push
or
adc
sub
out
in
es
adc
xchg
mov
pop
cmp
and
movsl
pop
mov
adc
int3
add
mov
ds
incl
lret
dec
out
xchg
loop
sub
adc
push
stc
adc
pop
mov
ficoms
sbb
aas
fists
sub
push
dec
or
jmp
test
adc
cmpsb
and
jno
adc
add
adc
fstps
mov
mov
lods
add
or
mov
popf
push
mov
push
out
sbbl
inc
push
loop
mov
mov
cs
push
jmp
sbb
sbb
adc
jne
loop
sarl
and
sbb
fistpll
call
mov
loope
mov
pop
jg
inc
jnp
fisubl
loop
or
add
push
stos
leave
or
pop
dec
dec
jo
jg
mov
in
cmp
sti
jge
insl
fldcw
mov
imul
fnclex
xchg
adc
cmp
lds
jle
jns
sbbb
and
or
jmp
shrl
push
jnp
jle
xchg
sti
pop
idivb
or
sub
mov
call
ret
pushf
push
add
loop
pop
pop
rclb
pop
pop
push
scas
sahf
pop
aam
sbb
rorl
adcb
lret
xchg
sbb
icebp
pop
orl
ja
xor
sbb
add
insl
xchg
ljmp
inc
sbbl
jecxz
jne
adc
daa
add
leave
pop
xchg
and
sub
jno
xchg
or
jg
cmp
jns
ds
add
dec
sub
inc
sub
sub
sub
loop
pop
loop
adc
int
xor
pop
pop
sbb
test
jg
or
cmc
dec
pushf
sub
push
pop
push
xor
cmc
dec
sub
push
sbb
sub
xor
sahf
xchg
push
cmp
jo
int
or
test
out
cli
cmp
ficoms
repnz
sahf
loop
pop
jl
dec
add
mov
les
ljmp
jp
lds
push
repz
mov
cmp
xor
and
imul
dec
ret
sahf
mov
stos
push
nop
inc
idivl
inc
cs
mov
mov
push
push
in
iret
iret
stos
push
cmp
pusha
xchg
ljmp
adc
pop
push
add
rcrb
push
scas
in
fadds
mov
cmp
sbb
push
test
out
cwtl
xor
sub
out
lea
icebp
cmc
jne
mov
stos
ss
mov
xchg
sbb
or
mov
inc
in
jmp
gs
inc
clc
fnstsw
inc
ja
lea
mov
mov
imul
sarl
push
dec
xor
cmp
sahf
dec
pop
aas
sub
std
std
popf
aad
mov
push
sub
dec
fxch
mov
ja
jnp
jb
adc
dec
dec
mov
call
mov
unpckhps
cli
cmp
sub
xchg
cwtl
mov
cmpsl
sub
xchg
push
and
das
sub
add
arpl
pop
rorl
jbe
xchg
adc
mov
mov
mov
xchg
inc
xor
dec
inc
mov
mov
rorl
add
push
aam
or
das
push
add
lds
jl
lahf
xor
jp
out
and
jmp
stos
pop
repnz
ret
mov
and
mov
push
addr16
adc
lcall
inc
mov
aam
pop
xchg
sbb
xchg
sti
mov
mov
cmp
sbb
mov
dec
xchg
bound
mov
adc
shl
ljmp
mov
push
cmp
mov
es
movsb
mov
and
shll
push
sti
out
or
dec
xchg
push
addl
xchg
fistl
hlt
cmp
adc
dec
push
sbb
lret
dec
sahf
out
push
push
mov
ret
mov
mov
pop
adc
dec
xor
mov
adc
pop
xor
lret
out
xchg
push
jle
cmp
cmp
outsl
inc
pop
mov
scas
lret
add
jne
aaa
insl
push
mov
into
inc
jl
xor
nop
push
pop
negb
push
mov
or
lahf
loop
call
insl
xchg
sub
rorb
cmp
sbb
out
adc
push
xchg
mov
ret
pop
mov
sub
pusha
filds
jmp
jne
cld
out
adc
add
sbb
mov
stos
xchg
dec
orb
aad
and
dec
add
sbb
movsl
mov
mov
icebp
jnp
inc
iret
jo
jl
loop
addps
pop
push
xchg
xor
add
sbb
repz
push
add
mov
push
dec
lock
bndldx
pop
into
cs
sub
xchg
aas
lret
call
inc
hlt
fcom
pop
lahf
mov
xor
add
mov
fsubrl
jmp
mov
jnp
push
push
push
aad
xchg
xor
lock
out
insb
or
push
ljmp
mov
outsb
int
mov
lods
fnstenv
xchg
clts
push
mov
call
lea
sti
push
mov
jle
gs
push
stos
ss
mov
push
insb
out
push
push
sub
cmc
stos
jg
add
data16
dec
dec
fwait
inc
enter
mov
sahf
mov
bound
punpckhdq
rolb
cmp
xchg
cmpsl
stos
fnsave
inc
lods
mov
out
or
addl
outsl
cmp
mov
imul
cvtpi2ps
pop
push
call
insb
inc
jmp
dec
gs
stc
std
push
pop
mov
xchg
cmp
imul
enter
ljmp
mov
iret
cmpsb
lods
sbb
lock
mov
test
pop
ss
dec
imul
fnstsw
sbb
push
add
hlt
mov
cwtl
stc
mov
and
add
mov
mov
imul
lds
sar
scas
add
inc
xchg
pop
push
fisttpll
mov
sbb
loop
and
add
add
adc
jecxz
adc
mov
add
and
sub
out
lds
fidivrs
sbb
ret
or
adc
out
fcomps
xor
fstl
lret
ret
mov
xchg
mov
adc
repnz
adc
out
out
jne
or
push
ja
loop
test
std
out
pusha
bound
pop
jmp
pop
xlat
lahf
loop
sbb
jge
push
out
xchg
cld
pop
mov
lret
pop
xor
bswap
iret
sbb
xor
sbb
test
adc
jae
scas
dec
loopne
jg
dec
fwait
pop
jecxz
stc
cmp
sbb
pop
cwtl
dec
nop
mov
sub
fmuls
andl
outsl
sub
loopne
cmp
sub
dec
repnz
xor
and
out
mov
lahf
xchg
mov
sub
outsb
add
dec
int
fidivl
dec
or
push
xchg
pop
mov
push
jp
cmp
xor
bound
mov
mov
xchg
ret
lret
out
ljmp
xchg
xchg
inc
dec
rcrl
pushf
push
xor
outsl
and
pop
pop
add
sub
enter
out
cmc
add
test
mov
movsb
add
xchg
call
or
iret
popf
cmp
pop
cltd
cmc
xchg
adc
jmp
mov
mov
mov
sub
arpl
inc
sbb
loop
jne
enter
inc
xor
cmpsl
mov
mov
add
fcmovu
aas
pop
sbb
dec
push
fwait
out
xlat
cltd
xchg
lock
repz
xchg
add
daa
jns
adc
inc
frstor
or
frstor
data16
push
ds
ret
dec
lret
out
out
xor
pop
adc
out
repz
pop
loope
out
and
pushf
gs
scas
icebp
push
inc
aam
xchg
or
ss
pop
shrb
das
je
and
pop
imul
sub
push
jmp
pxor
mov
xchg
fs
ds
pop
inc
ret
sub
ret
test
in
stc
inc
xchg
mov
std
in
sbb
mov
sub
xchg
and
xor
into
inc
xchg
sbb
in
cld
mov
in
sbb
rorb
xor
sub
adc
aad
pop
test
pushf
or
daa
sbb
xchg
ljmp
out
jo
push
xchg
rorb
mov
lds
inc
stos
pop
cs
repz
xor
inc
loop
cmp
imulb
mov
push
faddl
xchg
daa
filds
popa
fiadds
xchg
clc
jecxz
sbb
int3
jno
or
dec
xchg
sub
mov
repnz
ret
ss
push
pop
add
cltd
insl
mulb
outsb
sbb
push
mov
or
xchg
pop
fistpll
in
add
xchg
jg
mov
cmp
add
shl
fcoms
or
rcrl
sub
testb
xchg
sti
dec
cmp
sub
mov
adc
rcr
fsubp
dec
adc
inc
les
sub
clc
mov
cld
lock
iret
into
push
sub
cltd
sbb
inc
or
enter
sbb
mov
inc
jno
jo
scas
push
cmpsl
vpaddusw
stos
dec
add
das
dec
dec
int3
test
jg
in
out
popf
call
icebp
dec
dec
aas
aad
xchg
jmp
xlat
jo
adc
stos
push
ret
mov
hlt
call
cmp
cld
rorb
sbb
repnz
and
pop
xchg
jno
mov
or
sbb
jns
out
int3
mul
add
cltd
adc
fucomp
fisubs
add
sti
or
insl
cmp
scas
aam
push
inc
sahf
out
pop
pushf
sbb
push
adc
pop
cmp
mov
pushl
cmp
subl
jecxz
jae
sbb
pop
scas
push
movsb
jle
loop
aad
mov
adc
jno
in
mov
popf
in
mov
xchg
fs
pop
push
stc
sbb
mov
pop
sahf
sarl
pusha
or
mov
out
pop
lods
add
adc
push
fadd
push
xorb
outsb
sbb
sahf
adc
sbb
and
outsl
popf
push
pop
sbb
stos
insl
push
loopne
xor
shlb
sbb
jge
inc
jmp
add
rclb
add
inc
sbb
dec
mov
ljmp
enter
lock
repnz
in
cwtl
out
outsl
jnp
inc
fwait
push
shr
mov
fidivrl
lods
add
lahf
adc
or
lcall
notb
push
add
mov
adc
inc
mov
xchg
dec
jns
testl
enter
or
push
or
loop,pn
fcmove
inc
sbb
repnz
mov
adc
in
mov
loop
pop
fstps
cmc
in
push
filds
insl
push
sbb
add
sub
loop
xor
fwait
daa
inc
aad
mov
jmp
lahf
sub
pop
insb
mov
and
dec
adc
sbb
repz
addr16
mov
orl
push
aam
mov
fcmovnu
js
and
fwait
sub
sbb
insb
pusha
mov
pop
xchg
xchg
clc
sub
repz
sbb
mov
jno
test
adc
loop
test
xor
repz
test
and
dec
or
xor
movsb
mov
cmc
jg
loop
and
inc
stos
cld
lods
or
push
mov
in
mov
jecxz
mov
add
out
addr16
cmp
imul
mov
addr16
int
cmpsl
test
or
ljmp
lds
jecxz
or
add
jae
inc
imul
ljmp
cmp
mov
and
mov
cmp
mov
mov
jo
out
pop
call
nop
sub
insl
iret
int
jb
mov
loop
or
icebp
adc
testb
mov
outsb
sub
pop
cmp
out
dec
call
pushf
push
xchg
xor
sahf
or
and
cmp
flds
cli
shlb
pop
cltd
cmp
stc
in
sbb
enter
iret
in
std
les
push
xchg
xor
mov
dec
sbb
sbb
aas
lret
loop
jb
rcll
enter
call
xor
loop
out
aam
lret
jecxz
cmpl
push
out
divb
shlb
rol
mov
lcall
loop
jno
push
mov
outsb
call
or
mov
sbb
mov
movsl
sbb
in
jle
adc
jnp
aam
lret
pusha
sbbl
add
inc
in
sub
cmpsl
int3
push
xor
outsb
lahf
push
xor
xchg
loop
mov
sahf
fsub
inc
mov
mov
mov
and
js
sub
in
adc
loop
cld
jmp
push
out
jl
iret
leave
sbb
push
adc
add
and
fwait
mov
popf
enter
sbb
lods
jge
xor
das
lods
out
adc
scas
fwait
fwait
incl
enter
loop
shrl
lods
fmul
add
add
int3
dec
xorb
mov
subl
cmp
ja
clc
out
mov
sub
pop
scas
popf
push
mov
mov
sahf
fucom
repnz
cld
xchg
movsl
jg
jne
int3
hlt
jnp
cmpsl
rol
aam
psrad
adc
mov
aam
or
mov
mov
inc
mov
sbbl
xor
adcl
add
pop
lahf
and
xlat
outsb
in
mov
mov
add
push
scas
push
adc
sbb
xchg
loop
incw
outsl
cmp
fsubs
mov
or
int
adc
test
jle
idiv
inc
add
fwait
lret
sub
into
dec
cmp
insl
fbstp
xor
sub
ljmp
inc
mov
loop
push
in
pop
bound
adc
nop
cli
les
mov
mov
decl
outsb
push
shll
or
push
adc
jle
call
ss
rcl
sbb
inc
sub
jae
inc
nop
jbe
or
iret
into
xorl
stos
scas
mov
xlat
imul
js
mov
popf
lret
rol
and
stos
js
pop
mov
cmpsb
pop
inc
adc
lcall
jecxz
cmp
push
stc
xor
pop
cmpsl
pop
data16
daa
cmp
out
sbb
stos
jbe
sbb
jmp
fmuls
pushf
mov
sub
or
sub
sarl
mov
fprem
push
xor
lahf
or
ljmp
fwait
rolb
lret
xor
inc
sbb
push
xchg
shl
test
or
out
pop
lock
adc
call
enter
mov
js
ljmp
stc
jge
inc
ja
mov
xor
pop
sub
mov
dec
test
in
jb
adc
sub
or
cmp
ret
fwait
loopne
mov
test
sbb
out
xchg
xor
cmp
std
push
lret
hlt
pop
jmp
sbb
nop
test
dec
push
sub
adc
adc
jb
shrl
aad
push
sbb
call
lods
add
dec
les
loop
int
shrb
jmp
out
push
xchg
enter
popa
push
mov
push
xchg
lea
fistpll
inc
mov
leave
mov
mov
pusha
add
out
push
inc
push
mov
fisubrs
pop
jnp
or
sub
xor
data16
xchg
std
pop
fidivrs
and
aam
out
int
push
mov
push
xor
ret
xchg
scas
xchg
lcall
push
popf
adc
mov
jne
data16
mov
pop
cld
mov
push
pop
ja
pop
lcall
push
lock
jge
frstor
dec
or
or
jne
in
push
mov
xor
jmp
add
push
cmpsl
adc
pop
scas
dec
add
xor
xchg
sub
mov
adc
jp
aam
in
sti
shr
adc
xor
fucomip
cmp
push
fistpl
scas
cmp
or
or
push
fists
sbb
xor
push
mov
sahf
sahf
adc
push
sub
cltd
bound
and
sub
mov
cmp
testb
sbb
outsl
inc
imul
subb
testb
xchg
cmp
lahf
mov
inc
adc
pushf
adc
in
in
mov
inc
mov
cld
jo
dec
mov
and
xor
mov
ds
sub
fists
call
xchg
aas
cmovs
sahf
mov
adc
andl
out
es
sub
orb
or
movsb
test
test
or
dec
push
adc
xor
sbb
push
jns
mov
mov
outsl
fwait
or
push
xchg
xchg
cwtl
mov
sti
sarb
cmp
xchg
push
xchg
scas
cmp
inc
push
sbb
and
loop
jo
addl
ds
daa
fwait
bnd
je
pop
mov
aam
pop
push
popf
adc
out
jl
pop
mov
pop
push
push
adc
jb
addr16
inc
cmp
in
adcb
xchg
mov
cli
push
sbb
or
and
pop
aad
jg
mov
test
popa
icebp
mov
sbb
mov
cwtl
inc
leave
mov
jns
or
dec
aam
idivl
jg
lahf
stos
cpuid
add
fs
fst
jmp
jne
xor
push
ss
cltd
dec
and
mov
pop
push
or
fcoml
push
scas
mov
mov
push
mov
mov
decl
push
xchg
mov
rclb
aad
push
adc
mov
push
add
ss
mov
subl
dec
push
std
pop
mov
lea
sbb
mov
sub
mov
jl
loopne
cli
nop
add
incb
loop
lods
sbb
int
sub
cmp
shlb
mov
dec
cmp
data16
sub
and
cmp
push
xchg
cltd
add
jmp
shlb
rorl
cli
ljmp
cmp
lea
mov
mov
lcall
adc
in
push
clc
mov
stc
push
orb
fiadds
loope
jno
daa
pop
push
adc
mov
dec
xchg
shrl
mov
adc
mov
stos
popf
pop
fucom
mov
cwtl
jbe
sahf
rclb
aad
shrl
sub
fstp
and
sarl
dec
inc
sub
andb
lock
fcomi
mov
test
divb
repz
mov
push
mov
jnp
sub
and
call
mov
nop
cmp
ds
mov
jl
outsb
adc
cmp
dec
inc
sub
and
push
lods
mov
xchg
lahf
pop
pop
push
and
mov
xor
mov
push
aad
pusha
mov
or
or
popf
adc
push
call
scas
les
mov
pop
insb
loope
lahf
loope
push
inc
in
fidivl
add
pop
dec
cmpsw
pop
pop
lock
or
lds
adc
pop
ret
mov
arpl
sbb
loop
push
sub
rol
mov
aam
and
aaa
inc
imul
repnz
and
loopne
aad
imul
jp
sbb
scas
ljmp
clc
je
test
xchg
ss
add
imul
inc
loope
dec
xor
jp
jg
insl
aas
fists
bound
in
outsb
sub
inc
mov
mov
int
fs
xlat
sub
push
loop
imul
fbstp
pop
lret
mov
test
insb
daa
in
add
int3
push
sbbb
sbb
enter
loopne
cmp
sbb
lods
inc
test
push
xchg
push
repz
subb
lret
and
sub
mov
xchg
dec
into
push
pop
adcl
gs
inc
ret
xchg
pushf
xor
aad
mov
insb
mov
push
xchg
notb
lahf
jno
pushf
loop
insl
out
in
jns
call
xor
popa
lahf
push
dec
into
lds
ror
movb
lahf
push
js
loopne
dec
leave
push
iret
cmp
scas
out
shr
xor
movb
or
loop
pop
fisttps
jp
cmpsl
jg
add
stc
cmp
cmp
push
out
dec
sub
ret
mov
and
loop
in
push
sbb
push
imul
xor
fildll
dec
and
gs
repz
insb
add
fstpl
out
ret
mov
ds
sahf
in
mov
call
fisttps
scas
jne
ret
push
sahf
sahf
pop
movl
call
lahf
orl
mov
fld
jle
mov
loope
adc
in
cwtl
lea
mov
cmp
outsl
push
int3
leave
xor
jmp
ret
aaa
rep
mov
push
pop
loop
mov
xchg
push
aam
fbstp
mov
pop
loope
add
xchg
mov
inc
add
push
jge
aas
sbb
mov
fcmovu
cmp
xchg
jecxz
sarb
jg
jno
xlat
mov
xor
pop
je
mov
push
mov
insb
repz
int3
cmpsl
call
lret
jl
fimull
dec
lods
sbb
xor
mov
icebp
out
nop
ljmp
iret
lea
inc
jge
ss
pop
sub
and
fistpll
dec
or
cmp
mov
outsb
cmp
push
sub
mov
jo
add
rcrb
add
bound
inc
ret
fisttpl
mov
cmc
jge
add
or
adc
in
aam
or
loop
mov
lods
mov
jne
fldenv
lret
and
or
out
insl
imul
sub
mov
mov
pusha
loope
mov
mov
clc
sub
add
loop
pop
cmc
push
jb
push
cmpsl
into
xor
inc
push
cmp
in
mov
cmp
jl
pop
into
pop
inc
mov
cmp
aam
incb
out
inc
movsb
mulb
aam
cmp
xchg
mov
push
inc
enter
push
mov
dec
pop
push
adc
or
and
xor
in
inc
or
movsb
jg
inc
stc
sbb
fadds
fs
mov
mov
aad
stos
in
mov
sbb
add
scas
ljmp
mov
cld
pop
sahf
pushf
pushf
fisttpll
xchg
sub
sbb
and
lea
pusha
jnp
mov
push
or
int
in
ficoml
cmp
mov
stos
push
xor
fidivl
pop
jne
dec
lahf
iret
andb
and
or
out
rcrl
push
pop
cmp
fiaddl
jp
pusha
push
adc
adc
and
iret
xchg
pusha
imul
cmp
mov
xchg
int3
add
adc
pop
testb
shrl
xor
pop
or
sahf
push
popa
and
add
cmp
inc
xchg
push
jp
and
loop
test
rorb
push
loop
repz
sub
ret
mov
lock
pop
adc
mov
sbb
fisttps
adc
mov
sbbl
pop
gs
call
sbbb
adc
fistpll
out
mov
jo
jnp
mov
fs
mov
in
and
or
rcrb
jne
std
enter
xchg
mul
int3
cmp
sbb
ret
push
xchg
jle
popa
push
fwait
sbb
mov
scas
int
mov
sub
inc
xor
pop
mov
mov
and
repnz
or
outsb
sbb
je
popa
cmp
pop
out
xor
sbb
mov
lcall
sub
lds
push
dec
xchg
shlb
sbb
rcll
lods
jp
jbe
aas
xor
push
inc
pop
pop
sbb
in
insl
outsb
shrb
mov
jg
fimuls
fdivrl
adc
lret
jp
xchg
push
insl
jp
int
and
jg
fiadds
sub
sbb
mov
mov
scas
aam
mov
insb
loope
shll
inc
jp
xor
push
shl
jmp
adc
popf
or
push
test
outsb
cmp
movsb
inc
xor
and
sarl
inc
shl
repz
sbb
shrb
jne
inc
into
xor
stos
push
aad
jno
cmp
leave
je
sub
ds
mov
imul
loop
mov
test
ds
dec
loop
mov
sbb
sbb
fsts
imul
scas
inc
push
sub
or
mov
sbb
fadds
mov
in
ljmp
sub
inc
out
xchg
call
push
add
lcall
push
jp
jle
lahf
lahf
std
dec
mov
aam
cmp
adc
jne
sbb
inc
pop
ror
lcall
stos
push
pop
repz
sub
adc
or
addr16
cwtl
xor
or
xor
or
inc
dec
fisttpll
adc
out
push
mov
push
es
mov
dec
in
jp
push
cmp
xchg
add
inc
ret
aad
add
lock
pop
bound
popa
mov
stos
adc
sbb
add
and
aaa
xchg
pop
jmp
ret
fisubs
scas
and
add
fidivrl
lahf
out
stc
push
or
in
sti
mov
movsl
or
pop
inc
add
mov
pop
adc
js
in
int3
mov
pushf
insb
sahf
out
jae
data16
gs
loop
in
mov
jnp
incl
adc
out
cmp
loop
fisubs
in
sbb
sahf
ficompl
xchg
cmp
xor
popf
push
sahf
mov
add
inc
ret
or
xchg
int
sahf
xchg
pusha
xor
test
xor
lret
jns,pn
jmp
lret
mov
sahf
aad
xchg
dec
gs
jb
cmp
stc
movsl
dec
outsl
in
movl
imul
dec
push
and
inc
cwtl
mov
xor
jl
xor
adc
decb
fbstp
cld
adcb
jg
xchg
adcb
xchg
xor
out
and
dec
and
add
fwait
ljmp
fisttps
xlat
and
xlat
sub
xor
adc
in
inc
push
stos
xlat
sar
pop
pop
sub
dec
xor
mov
dec
jne
das
aad
out
pop
fldenv
adc
filds
sub
xorb
mov
push
jge
mov
ss
call
scas
out
mov
push
jle
popa
clc
adc
mov
and
mov
sub
pop
cmpsb
xor
mov
push
mov
sbb
adc
or
push
or
dec
jo
adc
ljmp
pop
dec
aaa
mov
outsl
movsl
add
jnp
or
add
sahf
icebp
ret
mov
xchg
in
push
fidivrs
js
pushf
sbb
fsts
jno
fwait
and
add
cmp
ret
xchg
enter
jb
adc
imul
cmc
push
xor
ljmp
sbb
xchg
sub
push
aad
pop
adc
push
insb
mov
loop
fldl
push
pop
jmp
ds
xor
sub
loop
pop
sub
pop
or
insb
lahf
adc
lret
div
sbb
mov
mov
enter
xchg
xor
lods
mov
pushf
out
cs
xchg
mov
xchg
and
fildl
test
and
sub
stos
out
xlat
cli
and
cld
xchg
pop
xlat
clc
scas
inc
push
cmp
cmp
mov
jecxz
jne
jecxz
mov
pop
push
ret
in
cmp
rcrl
cmp
std
cmc
daa
mov
nop
fstpl
push
shrb
insl
sbb
fsubrs
fldl2t
pop
aas
sub
mov
dec
punpckhbw
push
in
sahf
clc
inc
adc
xor
in
jl
mov
push
daa
pusha
dec
add
mull
add
mov
cli
testl
js
mov
cli
jl
movsl
sbb
sub
dec
fisttpll
adc
xchg
push
mov
out
mov
in
sbb
push
adc
and
mov
and
or
cmp
ret
cmpb
addr16
shll
xchg
decb
enter
dec
push
jnp
xchg
xor
xor
and
add
lea
push
cmp
fsubl
lahf
out
sbb
out
pop
add
pop
gs
mov
rol
std
push
lret
lods
ret
loope
mov
mov
xor
enter
mov
fwait
loop
jnp
aam
jp
cmp
or
add
outsb
pushf
ja
fistps
mov
negb
jg
loop
inc
sub
push
lock
lahf
sbb
and
add
sbb
cmpsl
push
bnd
adc
push
mov
aaa
xchg
imul
mov
xchg
ret
fwait
sbb
call
out
mov
sub
in
or
jg
es
inc
loope
push
pop
out
fiadds
out
mov
inc
sbb
jae
dec
mov
lret
aad
mov
inc
rolb
mov
sbb
addr16
sbb
xchg
pop
fs
scas
call
mov
cmpsb
test
sbb
sbb
clc
mov
xchg
pop
out
mov
stos
xchg
sub
sub
emms
mov
xlat
add
repz
dec
fmuls
jns
mov
test
xchg
or
cmp
repz
cmpsl
push
je
mov
outsb
lahf
push
or
jp
les
dec
stos
into
pusha
adc
subb
or
fldl
adc
rcrb
mov
push
adc
push
xchg
pushf
fcomi
sbb
fstl
push
add
or
loop
dec
inc
mov
sub
add
hlt
enter
call
pop
mov
js
jne
xor
popf
push
cmpsl
or
mov
mov
insl
push
or
inc
jmp
out
fcomp
mov
sahf
imul
inc
gs
add
push
lods
cmp
in
push
cltd
pop
add
je
iret
cmp
jns
stos
shr
push
imul
xchg
xchg
push
jge
mov
push
pop
shr
and
std
pop
add
xchg
mov
adc
rclw
loope
mov
enter
out
aad
mov
or
or
iret
pop
push
add
pop
or
dec
std
insb
adc
cltd
adc
lret
pop
aam
in
jne
and
decb
jns
shr
xchg
je
mov
sahf
test
push
clc
dec
iret
pop
mov
sbb
int
ror
lcall
push
in
test
xor
add
stos
out
xchg
lret
cmc
or
push
jge
mov
xchg
das
imul
sbbb
add
lret
xchg
mov
add
ret
lds
push
stc
mov
push
rorl
dec
fnsave
sub
mov
mov
in
pop
mov
cmp
out
out
clc
and
sub
xchg
xchg
jnp
hlt
add
sub
cmpsl
push
enter
jo
jne
test
fistpl
and
jb
inc
lock
mov
adc
sub
cmpsl
ja
mov
xor
add
inc
je
out
clc
lahf
fwait
out
xor
mov
push
xchg
push
sbb
xor
lret
mov
rorl
lret
mov
sbb
dec
shll
jg
push
test
sbb
sar
dec
sub
mov
jns
sbb
int
mov
mov
or
ss
mov
pop
pop
out
pop
movsl
mov
test
out
fwait
cmp
adc
xchg
lcall
in
mov
adc
lret
mov
add
push
sbb
fldl
mov
mov
lret
movsb
bound
jg
adc
scas
loop
enter
imul
push
arpl
xchg
mov
loop
orl
xchg
pop
sub
or
mov
idiv
test
or
jo
stc
lods
add
dec
sub
je
loop
push
into
xlat
or
pop
jg
lcall
popf
push
sar
stos
pop
pop
mov
sub
pop
add
mov
pop
loop
push
mov
xchg
mov
add
xorl
imul
psraw
adc
mov
enter
mov
mov
jo
add
iret
dec
cmp
sbb
loop
insb
add
pusha
xchg
call
fwait
scas
sub
or
outsb
mov
out
ds
and
mov
add
aaa
xor
lea
sbb
jns
xchg
cmp
push
dec
out
cmp
mov
mov
mov
std
rorb
mov
mov
lret
rcll
mov
int3
ljmp
in
int
xlat
mov
add
pushf
mov
or
pop
xor
push
or
negb
adc
ror
sbb
mov
incl
insb
out
push
xchg
mov
ret
ret
ja
fs
push
xchg
dec
push
sbb
inc
push
add
mov
test
xor
pop
loopne
adc
sbbl
sub
xor
xchg
inc
pop
into
in
adc
cwtl
adc
jnp
sbb
stc
scas
mov
mov
nop
jne
or
ljmp
xor
pop
andl
cmpsl
xchg
adc
aam
jmp
mov
out
js
arpl
popa
cmp
fnstsw
outsl
scas
push
jno
xor
ret
pop
xlat
xchg
xor
sbb
push
negl
mov
mov
gs
lock
push
sbb
add
mov
pop
push
hlt
std
add
ljmp
adc
jecxz
bound
fistl
flds
lret
cmp
mov
add
and
movsl
xchg
pop
iret
cmp
repnz
cld
push
sbb
pushl
and
fidivs
or
pop
dec
mov
add
or
fisttps
xchg
cmp
mov
icebp
add
cmp
sbb
jecxz
out
out
pop
je
fs
xlat
sub
nop
mov
movsl
dec
sbb
outsb
aam
dec
cli
push
jae
arpl
loop
add
cmp
jnp
inc
mov
add
mov
aas
sub
mov
sub
push
cmpl
test
inc
rclb
out
xchg
imul
cmp
sahf
ds
nop
je
push
loopne
call
mov
xor
sbbb
test
or
faddl
neg
xorb
adc
mov
rclb
rcll
cli
xchg
push
mov
jmp
mov
test
leave
inc
out
bound
inc
sbb
pop
push
adc
fwait
sbb
mov
stos
mov
enter
stc
scas
adc
xor
adc
movsl
sahf
les
dec
int
rcr
sbb
loopne
rcrl
dec
xor
fwait
loop
addb
adc
adc
xchg
fcoml
inc
push
popf
pop
fs
or
roll
push
fucom
mov
adc
mov
out
mov
xchg
xor
lcall
or
ret
xchg
mov
mov
mov
scas
adc
loop
sub
pop
fists
pop
or
fnsave
xlat
cwtl
das
adc
dec
clc
mov
jg
in
lds
adc
mov
pop
sbb
sub
inc
push
pop
or
mov
insl
icebp
push
scas
sbb
and
pop
call
repnz
orl
fxtract
mov
mov
dec
jge
push
cltd
add
push
mov
orl
filds
jns
mov
icebp
push
mov
adc
adc
fisubrl
or
rolb
adc
mov
rclb
jp
pop
pop
shrl
sub
jb
mov
addr16
imul
scas
int
into
or
inc
or
or
xor
lret
fisubrs
ss
pop
imulb
pop
into
mov
pop
repz
or
or
pop
inc
xchg
testb
add
aam
int
pop
gs
or
enter
sbb
nop
int
add
pop
cmp
dec
inc
in
in
sarl
adc
xor
xor
push
sbb
inc
aas
adc
insb
enter
out
adc
mov
xlat
jo
adc
out
icebp
mov
push
ljmp
jmp
mov
xchg
sub
jmp
add
mov
cmp
add
jp
cli
xchg
iret
add
pop
cltd
mov
pushf
jb
mov
xchg
pop
pop
into
mov
xchg
mov
imul
mul
cltd
pop
fadd
rorl
lahf
jl
scas
push
xchg
imul
cmp
jle
push
lcall
roll
hlt
pop
mov
adc
jg
pop
and
and
push
lahf
cmpsl
adc
push
stc
cwtl
ret
add
sbb
cmp
das
fwait
add
fistpl
push
adc
xchg
pusha
dec
ds
cltd
into
inc
lahf
aas
adc
in
or
push
xchg
in
jmp
enter
push
and
jno
into
jp
or
sahf
cmp
sub
jne
aam
in
movl
dec
add
pushf
cmpsl
ds
mov
stc
ficomps
xor
xchg
pushf
loop,pt
xor
xor
adc
movsb
setns
in
stc
sbb
xor
pop
shll
lahf
loop
fdivrl
aad
sub
inc
call
stos
ds
xor
xchg
inc
push
cmpsl
sbb
dec
or
xlat
loop
mov
loopne
pop
ficompl
test
jns
lds
push
pushf
add
ret
popa
dec
add
inc
outsb
test
mov
xchg
sbb
jo
inc
out
cwtl
stos
ret
pop
repz
sbbb
fists
sub
add
add
mov
lods
pop
scas
cmp
idiv
jecxz
xchg
pop
packuswb
inc
dec
pop
mov
pop
jle
or
or
pushf
not
xchg
add
jnp
loopne
clc
lahf
int
out
add
push
adc
sub
inc
je
jbe
add
iret
call
mov
in
dec
sbb
push
popf
xchg
sbb
pop
push
bound
or
pop
push
mov
adc
adc
shlb
into
dec
test
setne
adc
repnz
leave
push
stos
xchg
xchg
push
mov
mov
jmp
inc
adc
lds
add
adc
nop
xchg
enter
cmpsl
fisttps
sahf
inc
adc
push
adc
mov
push
sbb
rcl
or
jns
scas
sahf
insl
sbbl
rorl
adc
loop
adc
adc
pop
aam
stos
mov
dec
sbb
call
xor
into
cmp
out
call
hlt
cltd
sub
push
jecxz
popf
das
mov
mov
xchg
outsl
insb
addb
adc
test
sub
test
ja
or
loop
push
shlb
repz
push
jno
jnp
cmc
xor
cmp
push
icebp
mov
out
mov
xchg
out
inc
pop
or
or
jmp
ret
fistpll
mov
enter
clc
mulb
inc
jne
push
or
movb
outsl
outsl
vpsubusb
aas
xchg
test
dec
jg
sub
leave
sbb
pop
mov
lahf
js
imulb
jno
adc
insl
jnp
pop
in
scas
lock
adc
jae
popf
sub
xsha1
cmpsb
or
loop
jp
inc
out
mov
and
loop
push
subl
cmp
sbb
inc
lds
mov
call
xchg
sbb
sub
push
cmp
mov
ja
sub
sub
mov
mov
xor
sbb
adc
cli
jge
lea
and
sbb
pusha
sbbl
pop
adc
repz
in
stos
mov
arpl
pop
clc
xchg
add
imull
pop
clc
add
clc
xchg
sbb
adc
push
iret
push
sbb
ret
imul
ret
fs
loop
sbb
fdivrp
out
scas
sbb
fldl
test
dec
ds
decb
sub
scas
outsb
mov
push
jmp
lcall
out
decb
idiv
jmp
adc
push
mov
mov
jbe
rorb
sub
sbb
scas
mov
add
ficomps
adc
pop
sbb
in
push
cmp
cltd
or
and
in
nop
add
xor
mul
xchg
xor
jl
dec
scas
sub
cli
int
mov
or
mov
movsl
xchg
add
add
dec
jecxz
out
dec
cmp
mov
mov
lods
adc
fstpl
add
jne
pop
ds
jle
psrlw
pop
loope
imul
xchg
xor
test
and
jne
mov
aam
xchg
xchg
add
shlb
mov
mov
repz
dec
mov
lds
inc
ss
lea
push
movsb
out
push
add
xlat
jg
scas
out
mov
sub
push
adc
loop
outsl
sub
nop
out
adc
cmp
push
adc
and
xchg
loope
mov
cmp
push
mov
sbbl
stos
outsb
add
rclb
push
adc
add
cmp
scas
ret
pop
shufps
insb
es
scas
into
or
adc
fs
add
lds
inc
sbb
jb
cld
xchg
jmp
push
clc
loopne
adc
jae
mov
push
mov
cmc
jg
cld
leave
jg
in
mov
fnsave
lret
int3
xchg
jne
push
js
push
lret
adc
sub
mov
repz
push
push
stc
push
inc
popa
pop
cmp
mov
xchg
add
cltd
outsb
jg
shrb
pop
lea
pop
subb
test
pop
repz
arpl
mov
xchg
lret
inc
lods
xchg
clc
add
push
movl
loop
bound
add
gs
popa
add
or
popf
push
xor
xchg
bound
jle
mov
stos
sbb
sbb
add
mov
mov
add
sub
xchg
leave
ret
stos
leave
adc
add
enter
xchg
adc
dec
aad
setns
jnp
mov
shrl
fidivs
lcall
add
sub
sbb
sub
enter
cmp
or
insl
sbb
notl
mov
push
jno
add
or
bound
xchg
lahf
rcr
test
push
push
mov
bound
fst
or
pop
sub
ret
add
lcall
jbe
mov
ljmp
mov
mov
jne
push
arpl
xchg
cmp
into
fisubrs
mov
sub
out
fstl
dec
cmp
in
pop
iret
es
mov
and
call
adc
and
iret
je
test
mov
in
xchg
popa
push
pop
movsb
loope
and
rcrb
adc
jbe
negl
push
loop
sbb
addb
insb
push
adc
stos
push
pop
pushf
and
push
pop
je
and
pop
sbb
fiaddl
jg
inc
pop
mov
xchg
mov
dec
xchg
fildll
iret
scas
xor
je
idivb
add
ret
push
icebp
fistpll
scas
int
imul
xor
mov
jne
jp
lea
ss
fistpl
push
subl
xor
xchg
dec
arpl
jp
stc
ja
inc
rcrl
shll
outsl
fists
stos
dec
inc
sub
jnp
stc
push
into
jbe
les
pop
loop
xchg
int
movsl
andb
add
and
aad
mov
inc
jbe
mov
ljmp
popa
js
mov
ja
loop
inc
add
addr16
lret
sub
hlt
jp
enter
and
fs
mov
pmulhuw
call
push
fistps
xor
sbb
ret
inc
xchg
hlt
loop
mov
sbb
lock
add
cmp
stos
aad
or
repnz
pop
lock
sub
js
push
xchg
inc
ss
or
addr16
aas
adc
mov
xchg
adc
nop
sbb
fcomi
lret
aam
dec
xchg
mov
sub
test
push
lods
pop
lret
aas
ds
cmpsl
test
jnp
xchg
inc
xor
out
dec
and
cltd
xchg
inc
pop
mov
addb
jnp
push
xor
xchg
in
stc
dec
sbb
call
xor
add
gs
push
and
dec
imul
ucomiss
xchg
hlt
and
testl
xchg
xchg
std
jnp
js
rcl
test
add
insb
adc
mov
mov
lahf
movlps
mov
xchg
bound
or
call
stos
or
lret
shll
xchg
push
mov
jnp
dec
in
iret
pop
insl
fldt
inc
cmpsl
add
aad
push
cmp
out
out
pop
adc
call
mov
adc
in
mov
repnz
out
mov
filds
shrl
inc
add
push
fs
movsb
push
sbb
fs
aam
in
mov
loopne
pop
pop
pop
loopne
mov
xchg
mov
sub
sti
outsb
mov
mov
in
sbb
inc
xchg
out
js
pop
pop
mov
fnstcw
movsl
gs
cmp
lahf
mov
cmp
sbb
loopne,pn
roll
cwtl
cmp
jp
test
into
jns
les
es
fs
outsl
mov
jno
jp
addr16
jg
cmp
je
test
or
rorl
gs
add
lea
mov
cmpsb
push
or
sbb
or
lds
aas
rcl
jo
pop
jne
sbb
negl
fcomps
cmp
or
jne
sub
test
idivl
pop
test
sub
xchg
add
push
fistpl
or
testl
sub
test
iret
jne
negl
sbb
decl
loopne
jne
or
dec
cltd
sub
fsubrp
jns
mov
xor
jp
push
shlb
xchg
fwait
mov
xor
mov
add
sbb
aam
stc
aaa
lcall
sar
mov
xor
xchg
xchg
lods
dec
mov
pusha
xlat
adc
mov
sti
test
xchg
insl
andb
dec
lea
adc
cmp
inc
in
and
cmp
push
dec
in
gs
pop
add
xor
dec
sbb
loop
std
push
arpl
jb
cwtl
jns
inc
push
add
loop
sub
xchg
adc
xlat
pop
sti
and
popa
idivb
push
lds
xchg
adcb
mov
enter
in
mov
mov
xor
sub
inc
lret
pop
je
mov
orb
test
and
leave
push
xchg
es
cltd
xchg
push
popa
mov
shll
xchg
ret
lods
mov
clc
xor
and
sub
xor
inc
xchg
loopne
leave
adc
add
push
aaa
aad
and
jo
dec
rorb
xor
fadds
xchg
sub
adc
fsubs
sbb
dec
in
enter
xchg
push
test
sub
jno
pop
push
inc
mov
add
movsl
mov
inc
jbe
hlt
fnstcw
test
adc
or
std
push
jmp
out
sbb
adc
mov
scas
sbbb
loop
test
cmp
mov
ljmp
xchg
loopne
jmp
arpl
or
add
int3
outsb
lahf
bound
hlt
cmpsl
adc
mov
push
div
add
cmpsb
sbb
mov
jge
fists
dec
cltd
or
ds
pop
jmp
scas
and
lea
adc
bound
test
outsl
inc
in
jl
insl
js
stos
loop
lret
outsb
outsb
lods
and
and
adc
nop
xchg
fbld
mov
pop
jp
pop
mov
dec
cmpsb
xor
pusha
mov
sub
xor
cmp
lcall
xchg
fisubl
in
iret
mov
or
enter
sbb
cmc
mov
data16
fistps
mov
xor
aaa
lret
pop
scas
sbb
cld
adc
adc
loopne
mov
mov
push
add
enter
push
jo
sbb
xor
cld
loop
inc
enter
pop
and
or
xor
outsl
sbb
stc
rcl
mov
dec
ret
dec
sub
xlat
pop
mov
mov
aam
popl
loop
and
cmpl
pop
movsb
sub
mov
lahf
xor
inc
inc
push
negb
arpl
cmp
pop
or
xchg
lret
mov
std
notb
and
and
lea
cltd
test
and
mov
mov
and
imul
fldt
push
mov
insb
xchg
jge
cli
and
push
in
sbb
xchg
push
and
cmp
iret
popa
jl
pop
sbb
jnp
shlb
mov
cwtl
adc
dec
and
dec
fld
and
adc
enter
pusha
scas
sahf
pop
jo
aad
lret
and
fidivs
and
imul
sti
push
inc
clc
addr16
sbb
or
push
rolb
lret
inc
stc
pusha
push
adc
or
js
mov
insl
pusha
fnstsw
xchg
or
cwtl
ljmp
push
je
inc
xchg
adc
fwait
adc
nop
insb
pop
popf
mov
mov
jo
dec
out
lahf
pop
xor
jbe
orb
cmpsb
inc
inc
je
cld
out
mov
mov
inc
cmpsl
movsl
xor
mov
cmp
and
sbb
adc
mov
ds
mov
fcomip
add
jecxz
imul
add
fstps
cmc
out
pop
and
jae
sbb
insb
dec
jmp
jp
scas
add
cwtl
aad
add
rorl
add
dec
mov
or
insb
adc
cmp
stos
mov
adc
xchg
adc
cmpsb
jmp
xor
sub
mov
fdivr
sub
test
jp
sbb
outsl
movsl
push
xor
dec
stc
inc
ja
dec
dec
flds
imul
mov
shlb
adcl
ja
jae
sub
faddl
mov
xchg
or
add
in
loop
jno
and
js
insb
lds
roll
scas
fimuls
pushl
cs
pop
push
sub
pop
cmpsb
ficoml
push
sbb
test
les
push
test
fistps
into
movsl
iret
imul
iret
rorb
xor
adc
fs
es
adc
fwait
mov
and
add
cli
inc
cmp
cmp
out
adc
dec
pop
out
aam
dec
or
into
dec
ret
int3
pop
das
jle
push
mov
adc
out
mov
fwait
popa
push
sub
fabs
clc
xor
push
pop
mov
dec
push
xor
dec
mov
sbb
daa
push
aad
pop
sub
or
push
out
lcall
outsb
add
ss
pop
out
lods
or
leave
xchg
int
sub
inc
rcrl
daa
cmp
mov
ja
dec
subl
add
adc
sub
fildl
mov
push
inc
mov
kaddb
call
adc
mov
pop
movsl
and
inc
sub
mov
cmc
scas
push
stc
out
sahf
fcomps
mov
push
mov
inc
xlat
mov
call
mov
leave
mov
pop
mov
mov
nop
ds
mov
dec
mov
loopne
jg
mov
aam
inc
xchg
cld
sub
out
shr
xchg
or
imul
into
iret
xchg
test
push
out
push
notl
jns
push
jmp
xor
lea
sub
jb
xor
mov
sub
aam
adc
aad
fsubrl
das
imull
mov
cmc
dec
sub
and
scas
adc
test
push
lret
out
push
outsl
cltd
and
sahf
push
insl
and
push
call
int
and
adc
adc
xor
sbb
mov
mov
loope
push
add
lods
ret
jl
call
les
aam
cli
cmp
xchg
int3
mov
fistl
scas
fs
hlt
shlb
ja
mov
in
mov
into
xor
sbb
mov
cvtdq2ps
dec
scas
cmp
sbb
mov
pop
mov
sarl
jecxz
lods
ror
std
dec
push
int
xor
add
pop
dec
adc
inc
or
in
popf
pop
cmpsl
pop
imul
jg
pop
push
dec
leave
fsubrl
xchg
adc
cwtl
in
sbb
andb
ret
repnz
xchg
fmuls
clc
stc
daa
sahf
loopne
sbb
es
or
stos
nop
aam
push
movq
xor
scas
inc
push
in
fsts
addr16
mov
fucom
or
xchg
fidivrl
adc
or
xor
pop
and
negb
inc
push
adc
xchg
xchg
xchg
adc
mov
mov
aaa
sahf
mov
sub
xlat
pop
negl
iret
loop
cs
cmp
xlat
mov
sbb
push
shld
adc
mov
pop
push
lea
stos
pop
int
mov
sub
cmp
mov
fidivrl
rcrl
dec
enter
xchg
fistps
lea
movsb
pop
dec
push
incb
sbb
dec
iret
or
jae
pop
popf
pop
aam
cmc
lahf
pop
sbb
popf
pop
xchg
dec
rcll
mov
repnz
fwait
repz
inc
xchg
fcomp
adc
fimuls
test
push
adc
rcrb
adc
xchg
xchg
sub
cmp
divb
sbb
insb
lods
add
dec
icebp
sbb
pop
ret
xor
add
push
or
inc
iret
xchg
ds
sbb
and
dec
int
ss
xchg
mov
loop
stos
ljmp
daa
pop
inc
mov
push
in
pop
pop
xchg
fsts
mov
cltd
daa
out
sbb
negb
in
imul
lret
and
test
int
lcall
int3
jge
fldcw
subb
mov
jmp
pusha
int
je
and
fnstsw
imul
sahf
repz
mov
test
xor
inc
sbb
inc
add
aad
pop
cmpsl
mov
stos
in
adc
std
pushf
push
jbe
lahf
cmpsb
dec
push
mov
jmp
xchg
negl
xchg
insb
xor
gs
mov
lods
pop
pop
aaa
and
rolb
adc
out
mov
imul
push
adc
jo
imul
repz
int
sbb
xchg
mov
sbb
sahf
mov
dec
testl
xor
push
mov
cmp
sahf
ds
daa
jmp
xchg
xor
xor
in
adc
add
mov
sub
adc
fcoml
pop
decl
xchg
inc
jo
fstpl
jne
notl
mov
sarl
mov
lds
and
xor
add
add
jne
inc
es
loop
shrw
std
cli
fwait
mov
data16
push
leave
mov
sub
and
into
lds
mulps
inc
decb
inc
mov
sahf
in
iret
lods
clc
ss
sbb
ljmp
cli
hlt
loop
push
inc
pop
imul
lahf
or
pop
jno
adc
mov
ret
add
add
add
out
sbb
add
sub
fdivr
xor
das
mov
push
loop
dec
and
or
out
mov
add
mov
push
or
fadd
repz
adc
push
push
hlt
pop
imul
pop
xchg
fcomp
stos
mov
or
out
push
dec
ret
js
shll
adc
hlt
and
fdivl
sub
jb
sbb
cwtl
jmp
jnp
pop
xchg
cwtl
imul
push
pop
fdivl
cmp
xor
push
xor
jl
imul
jmp
cs
xchg
mov
push
push
add
adc
adc
push
and
cmpsl
pop
es
insl
mov
repnz
ljmp
jle
in
andl
sub
loop
shll
or
mov
popf
lret
push
pusha
iret
fs
xor
jp
adc
popf
addr16
pop
addr16
shll
xchg
loop
scas
loopne
popf
adc
lds
pop
push
xchg
es
lret
adc
mov
insl
inc
loopne
add
es
push
cmpsb
rolb
xchg
adc
pop
xor
inc
clc
jle
shll
inc
cltd
out
jo
stos
push
pop
pop
sar
adc
cmp
sub
dec
aad
push
fildl
out
adc
adc
mov
dec
mov
add
xor
mov
inc
inc
shrb
sahf
imull
inc
lret
js
or
aam
adc
das
add
xor
push
stc
dec
xchg
push
mov
loop
into
test
xor
add
sub
outsb
jbe
mov
dec
add
sbbl
adc
test
nop
rep
cmpsb
subb
cs
clc
imul
jb
insl
add
push
push
and
and
shll
cmc
adc
mov
outsb
adc
loopne
mov
fldcw
fdivrs
xchg
mov
mov
mov
mov
ret
ret
jne
sahf
fisttpll
stos
sbb
cmp
ret
setb
loop
push
mov
in
sbb
push
sbb
add
iret
orl
jne
aam
bound
sub
fildll
jnp
push
inc
pop
insl
sbb
push
jno
outsl
push
xor
aas
push
test
adc
ja
dec
imul
xor
sub
xchg
pusha
adc
outsl
cmc
scas
adcb
mov
aaa
sbb
dec
mov
xor
jns
dec
pop
roll
ss
test
ss
or
jne
mov
adc
or
pusha
xchg
dec
dec
ret
daa
sub
ret
cmp
add
bound
pop
adc
cmp
sub
cltd
out
xchg
aaa
and
or
test
sbb
lcall
loop
mov
adc
inc
out
mov
or
xor
jle
mov
add
and
push
add
outsl
push
push
out
sahf
iret
sbb
cmpsl
or
xor
dec
inc
xor
add
adc
xchg
xchg
xor
out
jg
stos
pushf
lahf
jbe
aad
cld
bswap
test
mov
pop
outsl
test
sbb
mov
sub
or
jg
jg
mov
mov
lcall
stc
pop
adc
push
push
push
popa
cmp
fiadds
push
repz
imul
scas
jae
add
in
incl
jl
aam
push
rcll
aad
mov
and
cmp
jbe
xchg
js
lcall
adc
mov
xor
add
les
cmp
dec
lcall
loop
test
mov
in
out
add
add
mov
add
cmp
push
out
sub
fnsave
add
inc
aam
daa
add
push
call
loop
je,pt
sbb
mov
adc
popa
les
lahf
xchg
sti
cmc
inc
in
adc
int3
idivl
jno
in
lret
dec
das
xchg
mov
push
and
jnp
inc
adc
lock
decb
shl
popf
in
scas
int
dec
fsubrs
sbb
out
loop
xchg
inc
fxch
jne
rcrb
scas
xchg
fwait
in
push
push
sbbl
sub
xlat
fcoms
add
mov
icebp
dec
xor
lcall
dec
or
inc
xchg
mov
mov
enter
cmp
push
inc
add
cmp
sub
in
lock
out
adc
inc
jecxz
fdivrl
cmpsl
cmp
leave
int3
sbb
add
inc
inc
fstl
mov
jge
test
addb
xchg
and
sub
lock
int
in
pop
xchg
lock
inc
bound
sti
pop
sbb
sub
in
inc
in
sbb
cmpsb
add
mov
mov
ret
dec
fstl
sub
negb
and
leave
pop
adc
outsb
call
in
push
sahf
out
inc
fdivrl
popf
shll
cmc
inc
xorb
lahf
cmpsb
inc
jns
push
xor
testl
and
jnp
ljmp
out
push
pop
mov
jecxz
cmp
jno
mov
nop
nop
push
std
sub
jle
popf
je
xorb
and
push
cld
in
sahf
loop
sub
mov
sarb
pop
pop
test
sbb
cmp
pop
movsl
mov
jle
jle
dec
jb
add
push
imulb
out
pop
out
loop
lds
gs
mov
aas
mov
outsb
inc
push
dec
js
pop
rolb
std
fsubr
xchg
push
push
outsl
pushf
inc
test
and
ja
jg
decl
ljmp
fnstsw
fcomip
loop
sbb
dec
lahf
add
add
sub
pop
aas
addr16
scas
adc
cmpsl
es
adc
sub
pushf
pop
popf
ds
out
jecxz
je
pusha
cmp
shl
push
repnz
mov
sbb
gs
cmp
sub
jmp
sbb
add
in
xchg
xchg
aas
scas
loop
push
adc
push
mov
sbb
orb
xor
adc
pushf
je
call
add
les
icebp
pop
xchg
pop
inc
mov
pushf
mov
xchg
mov
stos
imul
adc
sub
add
or
enter
xor
movsl
jno
fsubrs
add
xchg
ret
lods
cmp
loop
idivl
push
dec
jmp
pusha
and
mov
adc
inc
and
pop
jecxz
jno
das
ja
iret
mov
cmc
mov
shrl
js
and
adc
pop
mov
insb
ror
je
insl
and
pop
inc
mov
outsl
js
dec
inc
and
out
or
ret
xchg
cmp
jmp
sbb
outsl
mov
xor
test
loop
or
ds
add
push
arpl
fisttps
pop
cmp
fucom
xchg
pop
pop
push
inc
sub
jg
call
out
jnp
jl
push
mov
test
cli
aaa
jne
and
xor
jge
pop
out
mov
test
push
imul
aaa
das
adc
sub
xlat
or
loop
mov
xor
iret
insb
inc
test
cltd
bound
adc
adc
push
pushf
jmp
jl
loop
lret
and
push
cwtl
dec
out
test
inc
lcall
and
stc
int
adc
lcall
mov
pop
push
stos
fdivrl
adc
rcrl
pop
sti
pop
inc
out
adc
jle
cs
jbe
fimuls
cmp
or
addl
push
shr
js
or
lahf
sbb
dec
es
xor
lods
mov
pusha
or
mov
sarb
add
fwait
sub
mov
mov
imul
sub
js
andl
outsl
addr16
mov
ljmp
sti
rcll
iret
or
loop
cld
cmp
push
mov
loopw
into
xchg
mov
popf
cmp
or
sub
std
push
or
adc
adc
pop
dec
cltd
adc
pop
push
push
mov
roll
mov
fcoms
sahf
jnp
xchg
insb
shrb
in
test
js
inc
add
shlb
sub
cmpsl
nop
dec
and
call
mov
dec
ret
mov
mov
cltd
inc
mov
shld
inc
in
das
mov
daa
dec
mov
and
jno
out
sahf
ret
loop
mov
adc
pushf
mov
test
inc
loop
mov
push
test
ret
dec
cltd
jno
xchg
adc
aas
jnp
adc
bound
cmp
hlt
leave
jmp
imul
mov
xor
sub
stc
add
sbb
and
into
out
xchg
or
mov
push
pushf
int3
lods
out
inc
xchg
xor
outsb
dec
fstpt
inc
adc
out
inc
sub
fwait
scas
add
loopne
adc
outsb
outsl
int
or
loop
or
push
pop
mov
rcll
xchg
adc
int3
mov
movsl
cmp
cld
mov
jae
cmp
sbb
pop
pusha
les
inc
mov
movsl
test
in
stos
aam
or
add
push
and
or
pop
mov
stos
sbb
xor
mov
fdiv
inc
lock
add
jp
je
out
xchg
ret
add
jg
or
pop
add
subl
repz
popf
mov
jecxz
in
test
jne
or
xor
mov
sub
loope
xchg
in
stc
sub
mov
dec
mov
push
inc
mov
mov
pop
pop
outsb
xchg
push
aad
or
add
test
jg
je
aam
dec
into
lods
pop
out
pop
mov
pop
cli
xlat
and
mov
sbb
rorb
push
cmp
les
scas
insb
xchg
pop
dec
rcll
push
xor
sbb
fmuls
ret
rorl
out
mov
inc
add
in
adc
mov
xchg
std
sub
insb
or
push
loop
ljmp
dec
outsb
fwait
mov
lea
aam
xor
insb
pop
inc
in
imul
add
ss
scas
mov
aam
jnp
out
push
ucomiss
push
adc
jnp
mov
incb
xor
loope
dec
andl
or
mov
xchg
cmp
stos
or
cmpsb
stos
mov
lcall
push
pop
insl
dec
push
fisttps
xor
ret
xor
cmp
cltd
sbb
push
jp
flds
add
mov
repnz
xlat
adc
gs
adc
mov
fmuls
adc
push
cmp
mov
mov
lods
pusha
sbb
call
call
mov
mov
xlat
outsl
xchg
add
jbe
int3
push
stc
aaa
test
insl
sbb
sub
test
cmpsl
add
sub
and
popf
dec
out
xlat
sbb
sub
out
loop
push
or
loop
sbb
rclb
call
out
push
js
clc
and
pop
repz
add
add
divl
xchg
outsb
pop
jg
mov
or
inc
mov
loopne
adc
das
stos
lahf
push
test
pop
incb
sbb
cs
insl
cmp
sub
in
xchg
adc
pop
jg
jnp
lret
xor
loopne
loop
mov
in
call
add
xchg
insl
xchg
mov
flds
cmp
clc
sahf
push
rcr
inc
mov
ja
fistpll
fidivs
test
adc
push
dec
and
dec
fs
add
mov
jecxz
in
rcrb
jle
add
add
sahf
mov
addr16
pushf
adc
adc
mov
test
bswap
out
iret
push
pop
xchg
push
or
xchg
or
jnp
fisubs
xchg
pop
inc
jg
ss
dec
xor
mov
dec
cltd
sti
sbb
xchg
in
repz
dec
loopne
mov
or
jecxz
nop
sbb
mov
repnz
cmp
shlb
imul
push
xchg
xor
xchg
sub
dec
aam
push
out
pop
adc
jnp
out
test
mov
mov
cmp
sub
es
in
sub
xchg
push
lret
jae
enter
lea
in
cmp
jg
dec
ss
push
adc
adc
mov
fisttpll
mov
adc
mov
sbb
push
push
add
loope
pop
bound
adc
xor
bound
aaa
add
es
mov
lret
xchg
xchg
stos
dec
lret
xor
clc
inc
and
xor
int3
arpl
inc
or
outsb
sub
cltd
push
stos
cmp
push
push
fisubrs
mov
mov
test
mov
jne
push
add
mov
xor
adc
and
mov
cmc
mov
cmp
mov
data16
movsl
pop
ffree
mov
or
sbb
jnp
call
sahf
jmp
ja
orb
leave
fwait
dec
lods
pop
dec
inc
ljmp
jne
xor
cmp
sub
rcl
test
cmp
dec
push
push
sbb
mov
cs
mov
lods
pop
fisttpll
add
sub
mov
loop
fiaddl
jae
dec
leave
lcall
or
mov
scas
xchg
pop
adc
dec
jle
push
mov
call
mov
pop
cmp
out
loope
int
sub
jae
lret
lds
outsb
cwtl
push
stc
loopne
sub
adc
ja
mov
push
shll
adc
movsb
cmc
sahf
xor
xor
xor
pop
sbb
add
add
and
dec
ja
scas
add
mov
xor
push
cwtl
repnz
iret
fdivs
xchg
or
xor
xchg
or
add
not
or
mov
inc
and
or
cmp
outsb
adc
xor
cwtl
mov
in
test
lock
ljmp
push
sub
ds
pop
add
push
outsb
or
jbe
lahf
xchg
fimuls
xchg
in
push
mov
adc
sbb
push
sarb
test
xchg
lret
xor
jne
dec
cmc
imul
pop
in
mov
popa
andl
pop
call
stos
mov
call
cwtl
push
mov
xor
mov
rol
std
movsb
mov
pop
sub
sarb
and
add
sahf
push
adc
fistps
dec
insl
cld
mov
pop
or
hlt
data16
pop
decb
aam
clc
je
inc
int
out
cmp
jmp
add
push
outsb
pop
clc
sub
pusha
push
sub
xor
mov
ja
bound
and
xor
add
inc
lods
adc
add
inc
scas
or
adc
enter
jp
stos
mov
sbb
xchg
jb
aaa
dec
dec
xlat
test
xchg
cmpsb
into
mov
xchg
inc
dec
cmp
or
adc
xlat
pop
mov
and
fadds
hlt
pop
push
mov
inc
sbb
add
inc
rclb
out
mov
ds
das
push
pop
pop
ds
mov
arpl
dec
xlat
lock
and
mov
push
push
mov
sub
xchg
incb
cld
sbb
or
loop
aam
sbbl
lahf
adc
sub
sbb
loop
jo
lcall
pop
mov
xchg
xchg
std
test
jae
shll
xchg
mov
jne
scas
sbb
jl
adc
arpl
xchg
ja
dec
mov
mov
jp
xchg
jp
lds
dec
test
pop
push
loop
fistpll
icebp
out
in
mov
sub
loopne
jmp
scas
div
out
cmp
sbb
adc
xabort
movsb
fistpll
shlb
andl
mov
ret
clc
fnsave
inc
test
mov
pusha
pusha
dec
cmp
filds
mov
or
push
sub
push
outsb
mov
fstps
loop
cmp
mov
jg
je
push
cwtl
out
sahf
shlb
jo
out
mov
mov
lret
pop
repnz
imul
or
and
mov
out
cmp
movsl
inc
and
dec
cmc
or
sbb
sub
or
adc
add
call
jbe
jbe
repnz
pop
out
ret
popf
aaa
jnp
and
add
pop
insl
in
outsl
ret
mov
rcrl
xor
shlb
test
adc
cmp
sti
loopne
insl
jmp
lcall
popf
cmp
clc
push
push
scas
sbb
sbb
ja
jp
fmuls
mov
sbb
mov
xchg
mov
mov
xchg
add
or
int
iret
jo
jae
popf
mov
repz
mov
xlat
mov
ss
pop
das
stos
jb
mov
pop
or
testb
sti
loopne
xchg
lods
out
dec
lods
xchg
mov
xchg
leave
adc
addb
push
loop
lea
roll
repz
cmp
jnp
xchg
xchg
mov
rorl
mov
fisttpl
pushl
sarl
push
dec
fstps
sbb
or
xorw
adc
xchg
pop
sub
mov
adc
add
arpl
mov
ja
mov
jle
movsb
jmp
shr
xor
mov
mov
jmp
sub
sbb
fsubrs
or
xor
pusha
popa
aam
in
or
mov
inc
pop
or
adc
adc
push
push
insl
scas
sbb
fisubrl
and
xor
hlt
js
loop
mov
mov
push
cltd
push
push
cmp
fwait
xor
cltd
repnz
adc
adc
in
cmp
in
sbb
xchg
fst
bound
pop
xchg
aas
imul
push
mov
add
fnsave
jp
movl
or
jge
xlat
sub
ss
loope
pop
push
test
xchg
xor
fisubrl
ds
sbb
adc
jne
push
push
arpl
lea
in
into
out
aad
xor
rcll
test
test
mov
xchg
adc
arpl
push
cmp
scas
and
loop,pn
int
shll
or
inc
mov
lock
repz
aas
hlt
push
call
adc
call
mov
mov
fisttpl
xor
out
sbb
fiaddl
gs
dec
mov
daa
cmpsl
mov
dec
in
lods
lahf
push
lret
mov
scas
aas
mov
fs
pusha
popf
mov
fs
push
mov
out
enter
push
jp
xchg
pop
call
stc
shlb
mov
imul
outsl
es
push
cwtl
push
das
inc
data16
insl
sti
addr16
mov
mov
in
sub
insb
dec
mov
pop
xor
mov
jg
rol
das
lret
nop
mov
add
xchg
mov
mov
xchg
add
pop
jp
mov
in
jle
sbb
popa
repnz
repz
dec
adc
dec
stc
fimull
test
adc
inc
push
xlat
je
jmp
scas
repnz
xchg
mov
fstps
ret
gs
loope
leave
pop
push
mov
sub
addl
popa
cmp
mov
notb
pop
lock
out
lods
lock
xor
push
inc
push
inc
xlat
iret
xor
mov
pushf
mov
jle
lcall
pushf
loop
sub
outsl
jbe
sub
mov
lahf
or
dec
in
into
roll
pop
push
fisubs
out
enter
in
lret
js
enter
outsb
pop
lods
lret
mov
mov
int
test
movhps
cwtl
roll
and
test
xchg
addb
lahf
mov
test
pop
into
frstor
mov
cmpsb
xchg
in
lcall
leave
cld
repz
fisubrs
sbb
shl
pop
imul
mov
dec
adc
jl
sub
mov
adc
shll
mov
jnp
std
adc
xchg
adc
adc
or
jecxz
enter
adc
and
push
lahf
test
bound
lds
push
sbb
inc
dec
mov
orl
sbb
add
lds
cwtl
add
push
or
pop
lret
dec
cmp
push
aad
cmpsl
pop
push
mov
xchg
in
jmp
iret
or
adc
cmp
iret
add
mov
ja
stc
mov
mov
jbe
pushf
mov
dec
or
setb
shl
sub
cmp
push
ss
add
adc
dec
lea
sbb
push
add
mov
aas
push
or
adc
pop
pop
mov
loopne
or
and
lret
and
leave
insl
sti
repnz
idivl
out
lcall
jmp
in
scas
mov
fcomp
loop
add
add
xor
push
sar
push
loop
jbe
xor
and
popf
out
pusha
push
lock
adc
dec
cmp
pop
gs
enter
dec
pop
mov
int3
adcb
fs
call
xor
roll
adc
ljmp
cmc
stos
sbb
or
or
sub
roll
aas
sahf
adc
add
jecxz
iret
mov
pushf
push
adc
lret
xor
ljmp
inc
add
xchg
fwait
stos
imul
adcb
ss
cmp
mov
paddq
add
fistps
push
pusha
add
shrb
enter
jnp
jmp
aam
pop
xor
xorb
stc
add
movsb
daa
jg
push
fiadds
aam
jno
loope
pop
lods
mov
iret
repz
aam
jmp
lahf
inc
add
out
pop
push
test
lock
test
lret
adc
jo
ss
pushf
frstor
rep
inc
in
push
or
arpl
stos
pop
xlat
pop
jno
fiaddl
sbb
decb
push
cmpsb
add
add
dec
jecxz
call
insb
pop
xor
je
push
pop
jb
push
das
cmp
jnp
dec
pop
in
aam
xchg
je
xchg
jne
xchg
loop
add
add
scas
ja
add
sbb
add
add
js
lret
test
xchg
push
adcl
cmp
fiadds
scas
or
or
mov
test
add
ja
call
nop
sub
fwait
sbb
sub
xchg
daa
jge
ds
xor
movsw
pushf
cmp
lea
adc
orb
rcl
sti
pop
fistps
mov
dec
ljmp
loop
lret
dec
dec
sub
loope
out
cltd
push
pop
fnstenv
ss
fsts
mov
mov
test
add
xchg
ja
dec
ss
xchg
cli
push
xor
jo
or
iret
adc
adc
movlps
adc
adc
dec
pop
cmp
pop
xlat
or
dec
int
add
out
sbb
add
fs
gs
hlt
xchg
out
lock
call
sub
fisttpl
cmp
lea
cmp
aam
in
ja
sbb
gs
push
add
push
data16
sbb
jbe
sub
dec
daa
pop
ja
add
xchg
xor
cld
or
sbb
mov
pop
and
cs
xlat
js
sub
push
scas
mov
out
int
sbb
es
aad
iret
xchg
dec
and
or
stos
jmp
push
sub
xor
push
xlat
aad
ds
mov
jae
ret
cwtl
add
cltd
mov
enter
insb
inc
or
push
popa
sbb
pop
cmp
je
or
gs
push
push
int3
adc
sarl
daa
aad
sub
xor
xchg
push
test
sub
movsl
xor
nop
mov
jp
fprem1
aam
cmp
pop
sar
std
adc
sbb
xor
cs
lret
mov
andl
xchg
dec
cmpsb
mov
sbb
ljmp
xchg
mov
imul
lcall
iret
mov
aad
push
sbb
adc
imul
ss
adc
push
mov
loop
cltd
aam
sbb
cmp
adc
sub
cmp
aad
adcb
xor
push
insb
jnp
push
push
jg
orl
and
cmpsl
leave
ja
lods
cmp
scas
fnstsw
adc
pop
push
pop
jle
rcll
push
push
scas
mov
in
jo
ljmp
mov
out
mov
into
jae
sbbb
sbb
add
sahf
test
dec
aam
aad
mov
jnp
fs
jbe
sbb
dec
push
sbb
inc
int
ret
in
mov
cmp
movsl
andl
jge
fcoms
jo
jnp
ja
roll
xor
xchg
lods
mov
jg
xchg
or
aam
outsl
pushf
test
cwtl
add
add
icebp
push
lea
cmp
dec
mov
mov
shld
sub
sub
push
imul
cmp
dec
shlb
push
adc
push
xor
aas
and
imul
aad
sub
addr16
push
imul
mov
pop
adc
mov
rorb
stos
pop
push
int
xchg
xor
loop
sbb
xchg
aad
lds
mov
in
pxor
ds
xor
push
in
cmp
cli
ds
mov
xchg
dec
rol
popf
xor
mov
dec
mov
and
jl
dec
emms
mov
test
lea
enter
out
inc
push
stc
mov
cwtl
push
imul
stc
pop
or
xchg
inc
in
fs
xchg
push
out
lcall
ja
mov
movsl
push
jno
scas
push
xchg
sbb
jp
and
xchg
lea
add
int3
sahf
mov
ds
cmp
or
rolb
push
pop
inc
mov
xor
sub
jp
xlat
sbb
ret
loop
xor
cmc
mov
or
xorb
scas
test
lcall
sub
or
inc
xlat
xchg
shlb
cmp
xor
or
adc
xchg
outsb
cltd
add
lds
adc
dec
push
testl
rol
xor
mov
xchg
sub
push
rorl
adc
cltd
lahf
inc
mov
outsb
rcr
movsl
push
lret
pop
jnp
inc
push
ret
pop
xor
push
mov
cmp
ja
sub
iret
dec
inc
pop
jne
popa
push
add
sub
clc
insl
mov
push
jb
or
daa
push
dec
mov
cmpsb
popa
xchg
mov
add
call
mov
ret
dec
jp
pop
push
xchg
insl
mov
mov
dec
ret
jne
push
das
fists
mov
push
ret
movsb
mov
or
insl
pop
and
add
stos
sub
mov
mov
icebp
cmp
lods
movsb
sbb
mov
ja
dec
add
fmul
push
push
lods
lret
xor
cli
xchg
es
cltd
and
jl
movsl
icebp
dec
jmp
cmp
push
insl
sbb
shl
fidivs
mov
test
mov
jmp
scas
or
int3
add
scas
or
lahf
or
iret
add
pop
pusha
in
loope
dec
cs
fucom
add
loop
fcoml
aad
movsl
and
stc
xor
xor
push
mov
or
push
xchg
add
test
or
xchg
adc
xchg
xchg
add
leave
clc
in
das
scas
mov
xor
cs
mov
xor
test
rcrl
xchg
push
inc
sub
popa
pop
fldt
ret
fisubl
pusha
jl
mov
and
int3
and
in
push
das
add
mov
pop
stos
mov
and
jle
loop
adc
sub
add
xchg
and
add
xor
sbb
hlt
fnsave
fldl
mov
out
lret
sub
xchg
adc
xor
sub
cmp
lahf
fcomps
lods
and
push
loopne
je
add
xor
clc
push
fistl
rorl
jae
jecxz
outsb
insl
movsl
dec
jg
lcall
in
dec
arpl
cltd
cmp
or
dec
imul
das
push
cmc
xor
xor
mov
and
leave
jg
inc
out
inc
and
rcrl
pop
push
adc
inc
push
cmpsb
loope
lret
jnp
in
nop
inc
int
mov
xor
pop
or
jnp
sbb
adc
pop
dec
cli
and
or
jbe
pop
sub
clc
out
rcrl
sbb
cmp
adc
rclb
cwtl
jg
mov
push
mov
xor
pop
push
xor
mov
dec
icebp
mov
in
xchg
nop
lock
iret
fnsave
in
jp
lahf
pop
mov
jmp
das
mov
sub
xor
loope
pop
xchg
xor
out
in
aas
icebp
cmp
movsl
int
subb
sbb
jg
in
dec
mov
xchg
outsl
sub
insl
cmpsl
mov
push
fbld
xchg
jbe
ret
push
cmp
ljmp
gs
loopne
pop
dec
cmp
jo
addb
iret
sub
loop
js
cmp
dec
adc
mov
and
and
mov
les
cmpsl
dec
sub
and
insl
sarl
popa
ss
test
sub
cmp
xor
dec
cmp
mov
cmp
pop
mov
mov
test
hlt
lods
push
incb
sbb
xchg
insb
xchg
add
or
xor
sub
call
cld
lods
bnd
add
cmpb
push
int
cmpsl
sbb
in
or
mov
ret
in
loop
sub
andl
pop
icebp
in
or
jp
sbb
sbb
sysret
mov
mov
mov
or
lret
test
push
in
jo
stos
push
xchg
mov
push
add
cmc
mov
cmp
xor
mov
or
je
adc
mov
add
and
cmpsb
enter
sub
fwait
inc
inc
cmpsl
lock
sub
scas
out
sbb
test
mov
xchg
adc
pop
push
sahf
sub
in
mov
jg
adc
js
mov
aam
mov
push
xlat
pop
pop
roll
int
fcomps
xchg
fists
arpl
xlat
cmc
mov
lahf
shr
outsb
testb
out
sbb
lods
sbb
mov
insb
push
lock
je
sbb
insb
test
push
ja
cli
int
test
hlt
push
sbbl
mov
insl
out
add
daa
inc
sar
cmp
inc
and
xor
mov
push
sub
mov
inc
dec
lods
test
cmp
push
and
xor
add
imull
sub
int
mov
sbb
pusha
jp
push
fldenv
sub
dec
pop
aad
outsl
xor
icebp
pop
mov
shlb
js
stos
mov
jbe
xlat
aad
push
push
cmpsl
cmp
iret
xchg
imul
inc
int
jns
fcom
sarb
sub
ljmp
dec
dec
pop
mov
mov
mul
stos
je
fs
jbe
jne
mov
lock
xor
pop
or
cmp
imul
xchg
pop
jg
stos
iret
push
push
cmp
add
cmp
lret
mov
leave
jg
jns
dec
lahf
fmulp
ds
add
add
cmp
fs
cmp
loopne
pop
sub
pusha
pop
xor
pop
adc
pushf
inc
xchg
lock
xadd
add
lods
fucomip
jecxz
lods
cmp
adcb
loop
mov
mov
xchg
mov
aas
stos
ljmp
add
add
adc
int
pop
mov
mov
add
lods
sub
mov
in
mov
fsubrp
fnstsw
popa
ret
add
arpl
add
fwait
je
xchg
cmpsb
add
add
iret
jns
je
sti
icebp
dec
movsb
mov
push
pop
mov
fwait
imul
shufps
int
sbb
lahf
mov
push
notb
sub
lcall
pop
cmp
and
mov
loop
jecxz
shll
test
mov
lret
loop
stos
xchg
xchg
push
sbb
cmpsb
mov
xchg
popa
jae
sub
fcmovb
lods
dec
cs
sub
enter
loopne
push
rolb
inc
not
and
imul
jmp
in
add
xor
lds
mov
pop
outsb
mov
mov
ret
jmp
icebp
shl
stc
repz
dec
call
adcl
mov
or
loope
cli
in
cmp
dec
pop
addr16
push
pop
sub
add
adc
and
ret
or
shrl
mov
mov
sbb
ss
out
stc
adcl
or
mov
mov
mov
stc
push
and
xor
adc
jl
je
lds
or
inc
cmpl
out
inc
ja
and
adc
je
mov
packssdw
ret
outsl
fldenv
idivl
jbe
sub
dec
mov
ljmp
xchg
pop
lcall
adc
mov
cmpsl
fnstsw
inc
push
add
sub
out
pop
repz
adc
out
leave
mov
adc
scas
xchg
mov
adc
push
adc
or
rcrb
insl
adc
push
adc
test
xchg
scas
sub
sub
fidivrs
cmp
ficoml
sub
call
ja
pop
les
loop
add
inc
shrl
add
xchg
xchg
insl
jae
out
notl
movsb
aam
sub
push
adc
jae
movq
cmp
inc
jo
sub
ds
test
in
mov
add
outsl
fists
sbb
xchg
pushf
mov
test
xor
cmpsb
cmc
in
inc
jns
iret
add
push
test
int
into
jle
into
dec
push
bound
jp
stos
stc
adc
cmp
repnz
sbb
or
int
scas
mov
add
negb
and
xchg
loop
mov
sti
pmuludq
sbb
sbb
mov
or
and
inc
pop
push
call
ljmp
lods
call
loop
fldenv
mov
dec
mov
enter
call
sbb
das
xchg
pop
aam
shrl
adc
push
push
mov
leave
add
mov
testl
fwait
ljmp
das
mov
sbb
add
cmpb
shlb
xor
stos
jnp
push
mov
sbb
push
jmp
jns
jne
push
aaa
addr16
sub
mov
scas
push
sub
sub
add
icebp
jmp
adc
jo
adc
push
push
sbb
jno
loope
test
jg
bound
xchg
or
inc
enter
sarb
in
fists
add
ror
popl
mov
dec
aam
das
pop
stos
stos
and
fidivrs
mov
ret
mov
inc
lea
and
and
jo
bound
test
mov
mov
ljmp
sbb
lahf
xchg
loope
jmp
xor
add
sbb
sbb
fcompl
stc
mov
mov
sub
fcomip
or
and
and
add
inc
adc
loope
int
fimull
pop
into
cmp
mov
push
and
sbb
cli
adc
mov
dec
in
lahf
dec
lock
out
adc
jne
ljmp
mov
outsl
xor
push
test
xchg
ljmp
arpl
outsl
xchg
dec
es
inc
mov
test
in
ja
leave
subl
int3
xlat
out
inc
rolb
cmp
add
rolb
cmpsl
adc
aaa
aas
cmp
mov
addr16
in
lcall
bound
mov
mov
jne
pop
and
or
xchg
jl
pop
leave
rolb
add
mov
mov
dec
out
pop
mov
cmp
jno
lods
xchg
push
mov
fidivrl
xchg
or
dec
cmc
lahf
add
stc
mov
test
add
mov
mov
adc
xchg
rclb
sub
lods
pushf
push
cmp
xchg
daa
push
sub
xchg
push
bound
cmp
test
jmp
outsl
mov
lods
loop
test
fisttpll
iret
gs
es
out
xchg
mov
or
xorb
dec
leave
lock
jp
mov
cmp
scas
sti
xchg
popf
sub
cmc
sbb
cmp
mov
xchg
out
push
xchg
test
push
vmovntps
cli
or
lock
gs
lahf
loop
or
dec
and
xor
rcrb
or
movsb
adc
daa
arpl
in
jnp
cs
repnz
cwtl
add
stos
mov
xchg
scas
mov
test
cmpsl
pop
xchg
adc
je
or
add
cli
int
lret
movsl
lods
std
jmp
in
xchg
out
leave
adc
loopne
test
clc
nop
cmp
mov
sub
arpl
lods
sahf
jae
adc
sub
jl
das
out
jae
aaa
repz
inc
cmp
mov
xchg
xchg
rcr
sub
jge
test
push
bound
cmp
cmc
mov
xchg
fildl
jge
and
xchg
xor
pusha
sub
sahf
cmpl
repnz
lahf
leave
sub
fisubl
shll
loop
adc
stos
das
scas
pop
xchg
mov
mov
call
imul
pop
and
jp
jno
mov
jbe
cmp
jno
inc
jg
iret
test
pop
stos
cmc
adc
mov
cli
push
outsb
mov
push
call
fists
fwait
xchg
sbb
jae
ljmp
outsb
or
rcl
sub
mull
cmp
cld
adc
rep
es
xchg
andl
rorb
lock
pop
adc
cmp
cmc
stos
data16
push
xchg
cmp
cmp
ljmp
xchg
pop
ret
mov
lahf
mov
lods
dec
inc
fsubrs
orb
loop
mov
mov
adc
or
jecxz
out
adc
dec
push
insb
push
out
lods
into
shrl
lret
fists
arpl
jae
movsl
cltd
mov
out
or
pop
repz
das
jg
lock
xor
lds
xor
push
aam
and
daa
fwait
insb
pop
hlt
hlt
cmp
dec
cmp
push
sbb
push
in
cmp
mov
loop
push
cmpsl
cmp
pop
mov
imul
push
ja
jae
fistpl
add
pop
inc
adc
ret
jbe
push
scas
loop
divl
pop
pop
inc
leave
enter
jmp
add
mov
mov
loopne
pop
lock
int
mov
and
cmpsb
mov
cmc
sbb
adc
mov
dec
loop
mov
mov
mov
mov
sbb
pop
orps
and
mov
orb
mov
push
or
mov
int
sub
incb
hlt
insb
xor
mov
popf
lahf
sbb
rorb
mov
mov
insl
inc
insl
sbb
ret
sub
sbb
sbb
repnz
bound
sbb
xchg
add
sub
adc
adc
in
jnp
ljmp
je,pt
fst
mov
and
loop
js
stc
sub
push
cwtl
sbb
fiaddl
mov
lahf
adc
push
mov
stc
jge
insl
cmc
out
push
js
push
add
int
push
adc
es
imul
mov
add
or
je
mov
push
inc
lret
mov
lods
xor
pop
sbb
int
adc
loop
mov
jae
pusha
lahf
fistpll
out
ffreep
rcrb
frndint
jno
mov
push
push
fistpll
inc
cli
add
mov
cltd
sbb
adc
test
ss
je
aam
cltd
or
add
mov
jmp
fldl
mov
sbb
push
stos
stos
decb
leave
test
pop
pop
or
or
jmp
sbb
into
sub
xchg
sbb
xchg
sar
dec
sbb
mov
mov
fiadds
ss
mov
out
fwait
addr16
pop
enter
dec
fcomip
cs
jecxz
or
mov
dec
inc
repz
sub
out
out
adc
mov
lds
add
pop
dec
frstor
shl
mov
shll
sub
or
and
daa
adc
mov
push
imul
loop
or
or
sbb
mov
lods
inc
xchg
and
insb
scas
mov
shrb
mov
adc
call
fnsave
jge
sbb
inc
or
pop
incl
sub
loopne
sub
jg
inc
or
lods
sbb
stc
push
ss
sbb
jg
xchg
dec
ret
lea
jne
gs
jp
adc
sbb
cltd
loop
jno
inc
cmp
dec
dec
jnp
mov
aaa
mov
fmuls
into
data16
test
std
scas
xor
inc
mov
jg
xlat
test
sub
std
xor
popf
nop
mov
push
ds
cmpsb
xor
pop
clc
inc
imul
adc
popf
dec
pop
pop
push
add
inc
push
dec
xchg
ja
sbb
pop
les
pop
mov
lock
aad
leave
sbb
jnp
jo
jle
repnz
stos
cmp
fucomip
jp
fistpl
sti
xchg
ds
add
inc
ret
hlt
aaa
enter
push
pop
sub
adc
dec
call
lahf
testl
aaa
sqrtps
push
mov
lss
mov
hlt
add
xor
loop
pusha
inc
jb
out
pop
ror
cmp
cwtl
out
pop
adc
jmp
outsb
out
sub
fimull
mov
ss
ret
sub
outsb
pop
into
scas
inc
sub
testb
xchg
imul
in
lret
sub
xchg
fisubl
pop
mov
mov
out
pop
cs
pop
idivb
adcb
mov
es
fwait
add
or
dec
fildll
mov
lret
cmp
or
imul
hlt
jno,pn
loop
xor
pop
push
adc
or
pop
stc
nop
fistpl
jge
adc
or
adc
mov
mov
popf
lods
xchg
leave
adc
aad
dec
sub
imul
in
xchg
sahf
push
iret
into
fdivl
cmp
test
lods
dec
fisttpll
dec
rep
in
and
stos
sbb
in
jg
int
jecxz
test
int
inc
sub
cmp
movsb
jo
sbb
test
push
cli
ja
mov
sysexit
push
sbb
jmp
scas
mov
xchg
lahf
xor
adc
mov
aam
jge
sbb
mov
mov
test
xchg
nop
fistpl
dec
push
loop
stos
ret
and
shrb
loop
mov
ljmp
sub
mov
std
lock
sub
xchg
cmpsb
inc
in
fisubrl
mov
dec
xchg
hlt
adc
into
pop
mov
test
xchg
push
sar
and
sbb
popf
idivl
aas
sub
mov
or
std
subl
sbb
pop
outsl
cmp
jb
imul
scas
out
pushl
jne
push
rcrl
push
push
out
xlat
stc
iret
jo
sub
sbb
fsts
jae
push
ja
mov
jle
xchg
movsb
dec
sub
add
mul
pop
jg
or
pop
aaa
test
addl
cs
add
pop
lret
fadd
stos
push
nop
in
mov
sbb
adc
push
movsb
sbb
xchg
inc
arpl
test
push
imul
add
insb
cmp
dec
cmp
mov
adc
lret
sub
lret
add
lds
mov
sbb
lock
or
or
les
scas
pop
dec
mov
adc
mov
xor
push
test
or
imul
cmp
sub
fs
sar
mov
pop
adc
pusha
shll
pop
pop
xor
mov
push
sbb
call
jae
or
int
scas
mov
cwtl
sbb
out
add
jg
pop
cwtl
push
or
cmp
sbb
xor
out
jecxz
dec
push
xor
data16
or
push
pop
ja
push
mov
sub
mov
imul
scas
sub
push
fisubs
aad
pusha
out
lahf
add
ret
lcall
add
mov
cmp
jno
mov
ds
mov
jmp
xchg
dec
addr16
aaa
es
iret
ljmp
pop
mov
mov
sbb
or
sbb
ficompl
and
mov
dec
pop
nop
mov
push
shlb
repz
das
xchg
loope
frstor
xchg
sbb
jmp
mov
call
out
inc
test
pop
xchg
mov
sahf
stos
mov
pop
or
mov
pop
adc
js
test
aam
adc
mov
add
mov
or
sbbl
ret
push
sbb
aas
jp
out
in
mov
in
or
and
add
dec
or
aaa
push
in
mov
adc
push
cmp
jecxz
cmc
std
sbb
xchg
xchg
out
and
out
popf
jno
mov
dec
push
iret
mov
cli
out
icebp
pushf
sub
sbb
sbb
push
fs
mov
xor
popf
mull
sub
out
adc
adc
mov
add
sub
jno
popf
mov
mov
adc
mov
ljmp
sahf
pusha
std
and
inc
adc
fwait
lods
into
cld
jbe
ja
mov
mov
mov
movsl
insl
lahf
sub
lret
or
sbb
mov
ficoms
test
mov
xor
ljmp
mov
outsl
jnp
xrelease
sbb
negb
add
fcoms
lret
into
lcall
cli
fistps
inc
xchg
and
mov
testb
and
pop
mov
mov
inc
pop
divb
mov
mov
incb
mov
inc
push
notl
push
pop
aad
push
sbb
jne
inc
fstpl
out
pop
cmp
and
jb
mov
sub
inc
push
into
xchg
push
cmp
cmp
sub
or
aad
and
sbb
loopne
testl
popf
jae
jge
mov
fbld
xor
mov
xchg
xchg
inc
pop
mov
cmp
lret
aas
enter
xor
jp
adc
mov
imul
int
jmp
push
dec
out
mov
dec
stc
mov
mov
idiv
xchg
push
jno
divl
orl
pushf
arpl
in
out
and
xchg
push
jnp
mov
imul
lods
std
lods
xchg
fisttpll
xor
dec
imulb
mov
pushf
add
jge
insl
and
ficoms
push
fbld
dec
loop
add
in
add
adc
mov
mov
mov
dec
dec
mov
lret
adc
call
push
lret
hlt
inc
ds
xchg
dec
add
cmpsb
xor
lahf
adc
push
shl
test
add
sub
daa
rcrb
jp
in
push
mov
push
add
mov
sahf
xchg
mov
cmp
xchg
dec
mov
setae
imul
repz
stc
push
data16
fwait
stos
and
sahf
out
xchg
dec
add
xchg
dec
cmpsb
add
add
popf
mov
dec
sbb
push
xchg
sbb
sub
and
xor
jp
adc
mov
mov
std
lahf
mov
ds
stos
in
lcall
ds
lods
and
pop
pop
adc
xlat
inc
stc
mov
mov
popf
repnz
in
lods
mov
ficomps
daa
adc
out
aaa
xor
sbb
je
pop
out
shrb
mov
iret
xchg
mov
aad
xor
sbb
mov
and
mov
aaa
pop
int
lret
xor
sbbb
sub
mov
aas
xor
lret
imul
jno
adc
pop
jg
xchg
data16
push
ret
adc
not
mov
les
in
pop
loop
outsb
ret
insl
sbb
adc
mov
enter
mov
xor
pushf
cmp
cld
cwtl
das
mov
push
xchg
xchg
xor
mov
dec
rcl
cmp
or
int
cs
dec
pop
fwait
mov
add
and
jmp
mov
xor
or
cmc
in
incb
add
cltd
cmp
popa
cmp
rorb
inc
push
push
inc
pusha
in
into
xchg
jne
pop
stc
test
jnp
dec
xchg
cmpb
imul
addr16
push
sarb
mov
mov
loop
sub
mov
addr16
xor
xor
mov
xor
outsb
dec
mov
inc
lret
sbb
call
or
je
loop
lds
mov
push
sysenter
int3
lds
out
aaa
enter
xchg
fstpl
sbb
stc
scas
dec
inc
or
mov
mov
xor
add
lret
xchg
adc
mov
out
div
std
scas
iret
nop
roll
arpl
loop
sbb
fs
xor
lcall
lea
jg
cmc
dec
jnp
int
adc
not
push
sar
icebp
cs
jnp
sbb
nop
fcmovnbe
js
leave
js
xchg
jne
add
jbe
sarb
loop
lods
jmp
popa
imul
stc
jne
enter
arpl
mov
pop
repz
gs
inc
fsubrs
sbb
jmp
mov
mov
dec
adc
add
sbb
test
dec
int3
dec
sbb
lret
or
xor
lock
incb
or
push
cmp
lcall
push
sbb
lds
sub
sbb
aad
push
push
fucom
mov
out
xor
xchg
inc
push
dec
fprem1
push
mov
xchg
xchg
scas
xor
scas
dec
sbb
pop
fdivrl
jge
xchg
loop
insb
pushf
or
and
pop
push
lea
mov
ficomps
push
aas
dec
add
shrl
xchg
jns
sub
adc
nop
fmuls
push
push
fists
push
popf
leave
mov
cli
in
or
xlat
testb
or
imul
adc
adc
pop
cmp
lock
xbegin
std
fists
pop
jecxz
les
sub
test
pop
lock
popa
test
xlat
outsb
popf
loop
cs
mov
pop
cmpsb
dec
jnp
cmp
mov
push
ds
adc
in
lods
pop
clc
add
sub
sahf
mov
iret
fists
scas
scas
sub
sub
inc
xchg
cmp
ja
mov
stc
push
mov
movsl
sbb
nop
sub
scas
inc
shll
mov
fdiv
out
aaa
scas
push
test
out
adc
inc
pop
ss
sbb
dec
in
loop
xchg
fists
adc
jnp
push
sub
fidivrl
xlat
mov
imul
add
mov
enter
dec
leave
lcall
aad
das
or
jecxz
mov
scas
loop
sbb
push
adc
xchg
fsts
hlt
xlat
insl
jmp
mov
jne
fwait
or
fmul
xchg
test
adc
mov
or
mov
xor
test
call
pop
mov
loop
dec
shrl
mov
insb
ljmp
insl
and
popa
adc
xchg
mov
mov
loop
pop
xor
into
insl
test
jnp
sbb
decb
mov
xor
xor
xchg
loope
xchg
in
jle
loop
mov
add
or
adc
push
ja
js
push
jb
int
and
pop
fstpt
cmove
shrl
mov
xor
loop
dec
inc
ret
mov
popf
sub
pop
dec
inc
mov
inc
adc
push
xor
or
sar
push
xchg
jg
ret
xor
stos
inc
loopne
popf
adc
pop
arpl
mov
jp,pt
mov
loop
push
add
push
xchg
mov
test
leave
stc
rcll
rcll
xchg
push
js
push
push
imul
and
xchg
sub
cld
push
imul
repnz
lods
mov
cmpsb
sbb
push
test
jge
push
add
ds
daa
loop
fimuls
leave
imul
lds
mov
test
scas
xchg
xchg
add
lcall
sti
loop
xor
lock
push
cmp
out
or
jne
clc
xor
into
and
jns
inc
mov
and
test
xchg
out
push
push
or
fcomp
std
js
adc
setge
cmpsb
sbb
or
mov
in
out
add
lods
push
fimull
sub
lcall
jno
shll
sub
and
inc
push
sub
mov
pop
adc
or
int
adc
aad
fcompl
push
mov
ss
inc
sbb
outsl
mov
xor
xlat
cli
add
ret
or
shrl
out
add
add
fwait
aad
jmp
fnsave
rcll
pop
iret
imul
int
rorl
push
ds
mov
out
push
dec
rclb
pop
xor
ds
notb
push
pop
daa
cmp
test
cmpsl
lret
je
push
mov
in
call
cmp
push
in
jp
jnp
sarl
pop
push
in
pop
ljmp
add
icebp
imul
movsl
cmpsl
enter
nop
in
xchg
adc
xchg
adc
enter
test
lea
call
loop
pop
leave
cmp
ja
mov
pop
cmpsb
es
lahf
out
push
sub
fcoms
test
sub
pushf
sbb
pop
cld
rcrb
push
push
cmovnp
sub
loope
mov
sub
mov
popf
inc
add
push
push
add
xchg
fdivl
pusha
mov
inc
aas
insl
pushf
xor
pop
push
dec
xlat
and
add
ss
adc
rcrb
xchg
movsl
popf
negb
jg
popl
push
inc
and
pop
xlat
shr
adc
movb
and
inc
cmp
mov
push
repz
or
cmpsb
mov
loope
push
fstpl
xlat
loop
dec
mov
test
push
xor
cmp
cli
popa
clc
sbb
loop
sar
inc
outsl
adc
mov
ja
sub
loope
mov
pop
outsb
lahf
jbe
and
ja
inc
test
das
jo
in
adc
int3
dec
int3
sahf
pop
inc
adc
lcall
or
iret
fnstenv
dec
mov
je
xor
jg
mov
fsubrp
cli
pop
push
incb
sub
xlat
add
xchg
jg
adc
push
fdivp
adc
dec
and
pop
arpl
loop
out
jne
sub
inc
sbb
into
scas
pushf
inc
mov
inc
in
mov
loop
push
inc
xor
insb
add
lret
inc
dec
mov
stos
pop
lret
popl
lock
in
cs
push
setle
sbb
loop
out
adc
inc
add
pop
in
imul
pop
cmp
fwait
scas
std
jecxz
dec
sub
subb
je
sarl
adc
ret
cld
xchg
lret
in
xor
je
mov
pop
sbb
shrl
ljmp
mov
sub
sahf
lods
sbb
ret
xchg
lds
push
pusha
add
push
loop
stos
out
sub
iret
cwtl
sub
das
dec
cli
sbb
fwait
int3
in
add
mov
push
jno
repnz
mov
ret
mov
fidivs
xchg
shrb
sub
rorb
adc
sbb
imul
subb
aad
jp
sub
jno
shl
mov
add
mov
shl
inc
and
mov
mov
je
ret
dec
orl
add
test
ja
dec
outsb
fdivrl
insl
xor
mov
ret
inc
sbb
incb
lods
cmp
dec
and
sbb
stc
popa
enter
es
aad
push
mov
je
dec
mov
lcall
scas
adc
push
fsubrs
push
stos
sbb
push
adc
mov
lea
mov
out
test
xor
iret
add
idiv
fildl
scas
ss
call
out
leave
add
mov
aas
adc
push
sbb
sbb
mov
and
mov
jns
add
mov
jle
xchg
sbb
icebp
adc
sbb
add
test
clc
jl
mov
inc
pop
loope
sbb
or
arpl
and
ss
or
adc
add
mov
cs
cmp
cli
xor
loope
dec
cmpsl
lods
sub
add
inc
flds
in
mov
inc
cmp
mov
inc
sub
xchg
ljmp
aad
cmp
pop
icebp
cmp
push
push
outsb
iret
sbb
jp
incb
mov
add
jg
dec
loop
mov
push
push
and
je
stos
jl
mov
aam
icebp
sbb
enter
push
xchg
test
xor
fmuls
pop
push
out
sarl
scas
fisubs
jp
adc
addb
add
xchg
mov
sbb
pop
loope
cwtl
adc
adc
subb
out
xchg
into
cmp
data16
push
movl
jp
dec
cwtl
add
les
testl
xor
cmp
mov
lret
dec
mov
mov
lahf
push
out
cmp
xchg
iret
and
imul
loop
fstpl
mov
sub
dec
iret
mov
push
sub
push
icebp
push
pop
insl
out
mov
mov
jg
int3
lret
scas
sbb
fs
lahf
add
call
lret
xor
push
inc
jge
hlt
sbb
pop
dec
sbb
cmc
sub
imul
pop
test
push
pop
adc
add
inc
mov
dec
pop
cmpsb
loop
aad
arpl
cli
std
push
mov
repnz
jle
inc
and
cmp
adc
pop
cmpsb
aam
adcb
sti
repnz
inc
mov
dec
mov
adc
add
adc
addb
cwtl
sub
push
jnp
das
cmp
call
push
xlat
sbbl
sub
fildll
pop
xchg
adc
mov
xchg
mov
mov
adc
jo
mov
push
mov
ljmp
mov
xor
in
xchg
pop
mov
out
adc
hlt
call
xchg
test
mov
into
inc
in
cltd
pop
clc
fcomi
insl
lahf
insb
push
dec
sahf
adc
stc
std
popa
out
repnz
inc
and
stc
xchg
adc
ret
int
imul
out
movsl
enter
cmp
push
mov
je
in
loop
bound
lds
mov
add
push
out
cmpsl
mov
fwait
arpl
in
mov
jne
in
mov
xchg
out
das
dec
popa
xor
rcll
xchg
dec
loope
or
mov
lcall
lds
test
mov
sahf
pop
out
int
std
movsl
cmpsb
rol
shll
mov
rclb
xor
xchg
adc
xchg
mov
lret
loopne
rorb
adc
sub
add
or
push
inc
rorb
jns
push
xor
dec
mov
inc
mov
outsb
push
add
pop
jle
rcl
or
imul
shrl
sub
add
xchg
push
xchg
adc
dec
mov
leave
negl
loop
outsb
xor
into
sbb
dec
inc
filds
adc
xor
dec
sbb
cld
std
lahf
mov
es
jo
dec
xchg
icebp
mov
or
adc
sub
test
pop
adc
adc
lock
sbb
fwait
sahf
xchg
test
jo
cmc
pop
xor
pop
pop
sti
nop
push
mov
bnd
shrl
mov
scas
push
adc
fstps
xor
xor
mov
jne
pop
insl
xor
xchg
jbe
in
jmp
imull
adc
push
dec
movsl
out
or
jmp
sbb
aas
jno
loopw
adc
notb
sbb
testl
loop
lods
lahf
imul
scas
sbb
add
aam
mov
pusha
dec
jle
xor
ret
lea
add
int
jo
loopne
mov
xor
push
idivl
jb
stos
sub
mov
adc
xchg
add
jbe
js
in
cmp
dec
xchg
or
pop
add
and
sti
scas
out
lcall
cmp
mov
fs
dec
fnsave
sub
xchg
scas
cmp
loop
dec
pusha
mov
test
out
jb
int
add
out
xchg
or
sub
and
push
xor
mov
xor
fadds
push
loop
mov
int
aas
adc
sub
lahf
or
dec
or
and
inc
arpl
iret
inc
test
and
lds
mov
into
cmp
jmp
jns
mov
xor
sub
adc
leave
sbb
xchg
mov
inc
or
push
sub
xor
pop
repz
in
mov
xorb
dec
sbb
insl
addb
push
mulb
in
inc
mov
fnstsw
pop
ret
pop
mov
scas
imul
les
ds
aad
or
insl
ss
adc
imull
inc
xchg
xor
or
out
insl
and
shl
dec
lcall
push
and
bound
fstl
loop
adc
push
dec
add
push
sti
test
dec
sbb
insb
push
pop
lock
test
loope
jge
icebp
shrb
je
outsl
notb
insb
mov
push
jno
out
xor
fwait
adc
repnz
inc
jbe
lds
sub
push
mov
roll
mov
jmp
push
xor
nop
cmp
les
mov
mov
outsl
sub
inc
lods
sbb
scas
mov
jmp
push
adc
loop
jne
into
xor
dec
sbb
loop
ljmp
test
push
sub
outsb
int
out
enter
sub
pusha
mov
sub
and
push
ss
leave
sub
fucomi
push
in
fsubrp
inc
mov
xor
dec
addr16
lea
sbb
cwtl
sub
dec
jmp
add
mov
mov
test
mov
inc
or
outsb
fistps
or
leave
pop
xchg
pusha
mov
int
mov
scas
mov
test
imul
stos
jecxz
sarl
pop
and
adc
fxsave
xchg
cld
mov
imul
mov
mov
test
hlt
cmp
hlt
and
or
dec
fists
cmp
add
dec
pusha
push
sbb
mull
pop
mov
inc
or
lret
cmp
repz
mov
ret
lcall
icebp
loop
dec
and
enter
mov
pop
mov
lcall
rclb
sahf
in
mov
pop
repnz
mov
xor
jbe,pn
int
mov
setb
add
aam
mov
lahf
mov
cmp
inc
add
out
add
outsl
fs
in
iret
mov
test
xor
fdecstp
add
sti
lahf
loope
out
inc
sub
fisttpl
addr16
mov
xor
ljmp
sti
push
mov
or
push
popa
lds
idiv
fbstp
add
push
repz
aas
add
cmp
bound
push
fwait
or
push
sub
cmpsb
fs
and
pop
cmc
das
xchg
sbb
mov
adc
sbb
scas
loop
push
arpl
inc
xor
add
xorb
cmp
add
cmc
and
movsl
add
push
dec
jnp
or
arpl
mov
outsl
lds
int
and
aam
xor
shrl
push
pop
sbb
adc
xchg
fwait
out
add
push
sbb
loop
arpl
cmp
testb
mov
test
pop
loop
int3
inc
lods
shrb
shll
push
add
lods
xlat
adc
jo
add
and
dec
in
stos
stc
icebp
pop
sbb
mov
lods
ret
repnz
adc
inc
or
int
mov
cmp
fldl
lahf
sub
lea
mov
pop
fimull
xor
dec
cmpsl
les
cmp
mov
xchg
adc
pop
loopne
out
cs
adc
push
aas
push
jp
lcall
mov
sbb
adc
out
stc
popf
sbb
pop
add
sub
test
mov
stos
jge
add
xchg
repz
cmp
lahf
repnz
push
sub
pop
xor
inc
pushf
dec
push
jno
adc
push
sbb
aaa
cli
into
jg
sarb
mov
out
fs
stos
fists
xchg
inc
adc
addr16
int
and
push
jle
mov
xchg
frstor
rolb
lds
add
loop
insb
push
xor
xchg
jp
inc
pop
mov
cmpsb
push
scas
xchg
ret
hlt
and
pop
mov
mov
in
loop
stc
sub
ds
sub
loopne
jg
mov
dec
arpl
ljmp
aas
adc
idivb
pop
jno
pop
in
cmp
xor
pushf
adc
stos
nop
mov
fstpl
out
adc
int3
push
sbb
pusha
dec
adc
xor
fs
inc
sbb
mov
add
cmp
das
add
loope
pushf
jb
push
clc
arpl
aad
fldl
lahf
call
pop
add
testl
adc
test
push
dec
shll
add
dec
data16
adc
pop
adc
and
leave
pop
pushf
lahf
add
daa
pop
mov
inc
insb
pop
iret
loop
ss
subb
dec
ret
add
sbb
data16
xchg
pop
out
ds
jmp
shrl
adc
mov
sar
scas
scas
inc
jne
aam
push
rorl
test
inc
pop
pop
jnp
xorl
outsl
call
in
repz
xchg
xor
push
jnp
gs
and
notl
aam
dec
push
sarl
arpl
pop
cltd
scas
ror
fdivrl
stos
xchg
imul
cmp
bound
sbb
sbb
add
push
in
adc
insb
inc
adc
mov
add
loop
sbb
xor
sbb
inc
xchg
mov
out
ficompl
sub
add
push
js
jnp
movb
cmp
push
hlt
mov
rorl
jmp
pop
xor
adc
jno
fbstp
insl
scas
setg
addr16
fldl
xor
rorb
pop
dec
ljmp
ret
mov
lret
int
dec
not
sub
mov
cmpsb
jecxz
lcall
add
jne
fstps
ficoms
push
xor
xchg
xor
in
or
or
add
push
push
adc
movsb
loope
sahf
cmp
adc
cmpsl
xchg
ljmp
dec
xchg
jge
ss
leave
mov
repnz
sbb
loope
fdivr
and
sub
mov
fldt
mov
xor
xchg
mov
and
stc
aam
mov
add
divl
mov
sub
rolb
pop
cs
stos
jg
or
and
loop
sti
sub
movsb
addr16
dec
xor
adc
dec
push
inc
popf
cmp
adc
fisubrs
fsubrl
adc
jbe
push
aam
jns,pn
stos
cmp
mov
fsts
jne
mov
sbb
push
or
mov
loop
adc
or
hlt
arpl
jae
rorl
adc
fnsave
lea
pushf
xchg
sub
mov
adc
or
imul
insl
lods
xlat
bound
aas
mov
movsb
lahf
push
test
lods
inc
lea
inc
dec
fisttps
pusha
cmpsb
and
test
dec
cmp
mull
pop
lock
pop
adc
cltd
in
inc
lret
adc
dec
rcl
jge
bound
mov
mov
mov
fists
sub
lock
loop
pop
push
in
push
ret
lahf
lcall
add
inc
pop
stc
push
out
mov
adc
sbb
pop
and
out
mov
fucomip
mov
mov
cmp
adc
popf
sub
xor
out
jmp
rcll
mov
add
jnp
shl
mov
or
or
push
inc
fwait
dec
sub
aad
dec
in
pop
add
test
sub
pop
dec
mov
push
xor
repnz
mov
outsb
mov
or
loop
ret
jmp
jecxz
dec
add
fsubs
pushf
or
jae
fmuls
or
cmpsb
push
aas
flds
inc
jl
pop
mov
fcmovu
push
sbb
mov
sub
nop
jmp
call
inc
add
push
les
adc
into
xor
insl
fstpl
in
fildll
push
add
lea
jg
imul
loop
push
int
fwait
loop
arpl
cwtl
roll
ret
enter
ret
pop
inc
jne
pusha
push
int
orl
and
lahf
push
mov
popa
cmp
js
ds
pop
icebp
jnp
pop
andb
add
je
xlat
inc
les
sti
psubsb
and
jo
dec
pushf
jne
cmc
lods
jnp
xchg
add
into
insl
aas
push
or
cs
stc
ret
pop
xchg
nop
fistps
clts
push
adc
data16
xor
jge
sub
cmp
popf
hlt
loopne
scas
out
jnp
jle
xor
push
and
and
adc
loop
mov
setno
fisttps
adc
inc
iret
sbb
test
push
mov
out
xor
sahf
loop
aam
mov
jno
sahf
adc
xor
jle
scas
sub
ljmp
ss
lods
push
mov
mov
push
js
xor
mov
imul
cmpsl
lods
cmpsl
adc
clc
fwait
in
repz
mov
sbb
sub
jecxz
in
and
test
sbb
mov
call
xchg
pop
sbb
pminub
mov
inc
loop
cmpl
dec
es
inc
rcll
xchg
lcall
or
js
int
xor
push
test
leave
xlat
mov
adc
pop
dec
cli
popa
hlt
push
loopne
push
insl
cmpsl
jg
lods
fbld
int
cmp
adcb
mov
xor
out
adc
sub
or
adc
mov
pop
aas
iret
jns
int3
add
clc
jmp
ja
cmc
in
xor
popa
push
dec
mov
add
mul
inc
pop
insl
push
test
mov
aad
cmp
mov
push
jmp
xchg
aaa
in
sbb
mov
pop
aaa
fisttps
fistl
icebp
out
out
adc
repz
flds
push
and
or
addr16
or
push
jb
lcall
loop
pop
add
mov
filds
cmp
mov
scas
adc
adc
pop
inc
add
rcrl
sbb
adc
aas
sahf
and
jg
in
push
sub
mov
mov
shlb
cmc
sub
cltd
fisubrs
inc
mov
mov
movsl
push
and
or
sahf
lods
test
or
pop
pusha
or
and
sahf
inc
jle
push
shl
loopne
cmp
sub
push
push
lds
jno
cmp
pop
loopne
cld
jbe
push
sub
sahf
adc
movsb
loope
sub
mov
or
push
xchg
mov
pop
aam
cmc
mov
loop
andb
sbb
pop
es
jb
test
insl
pop
xor
mov
andb
pusha
mov
mov
push
sub
insb
xchg
mov
ljmp
adc
adc
imul
push
ret
mov
imul
mov
in
adc
jmp
cs
cmp
inc
add
mov
sbb
imul
mov
mov
xchg
sub
clc
mov
jmp
mov
inc
hlt
dec
add
xchg
inc
rcrl
cld
fbstp
xchg
pop
fildll
iret
out
fstl
pop
push
pop
adc
jp
sbb
js
push
sub
loope
inc
das
mov
pop
subl
decl
sbbb
sub
das
fiaddl
jecxz
push
mov
iret
fisubs
jecxz
test
inc
insl
icebp
xchg
scas
xor
or
enter
and
int
jmp
dec
fsubr
pop
out
or
inc
pop
shl
fmul
and
pop
stc
mov
mov
jno
push
into
and
cmc
stc
xchg
iret
test
sub
pop
mov
jg
jp
ljmp
push
in
or
sahf
push
adc
fisubrs
repnz
jo
jmp
push
jg
pusha
mov
arpl
fisttpl
jnp
in
pop
gs
jg
movsl
sub
or
outsl
dec
mov
bsf
push
push
ss
sahf
andb
fnsetpm(287
aam
sbb
repz
lds
mov
cmp
sbb
shll
push
shlb
mov
jns
lret
push
lret
shll
fxch
and
cmp
filds
xchg
jo
ljmp
jae
test
into
jo
xchg
push
outsl
sahf
pop
and
aaa
add
in
lods
or
outsb
lods
and
shll
enter
ljmp
out
pusha
cli
pop
out
aad
scas
loop
adc
mov
adc
aad
dec
jo
fwait
into
mov
aas
mov
inc
loop
imul
fistps
xchg
ret
in
in
xchg
sbb
mov
inc
insb
sarl
dec
push
movsb
jmp
jmp
loopne
into
jnp
sbb
cmp
xchg
out
xchg
imul
lea
mov
lock
fildll
cmc
mov
ficompl
insl
sub
mov
xchg
jecxz
mov
imul
sets
popf
adc
test
xor
or
test
sbb
pop
pop
loop
divl
cwtl
jge
sti
or
sbb
in
xchg
in
scas
push
mov
imul
cmpsl
into
fimuls
aam
cmp
push
jae
inc
mov
mov
cmp
lea
or
fnsave
push
mov
dec
icebp
out
data16
pop
xchg
mov
jo
fs
xchg
sbbb
lahf
ds
testb
in
loop
sarb
jae
jmp
add
nop
mov
je
xlat
shl
cwtl
repz
subl
add
push
ljmp
jno
arpl
inc
test
adc
jne
mov
repz
cmp
sbb
add
daa
fdecstp
mov
xchg
xchg
sbb
leave
aas
stos
or
imul
dec
outsl
loop
repz
cmp
cmp
or
in
dec
decb
enter
loop
mull
lret
test
addr16
or
popf
ja
cmpsb
insb
shll
inc
enter
lahf
int3
ret
mov
fwait
jae
fdivr
sub
mov
lret
and
in
jg
cwtl
xchg
out
xchg
dec
sbb
popf
mov
adc
lea
lahf
sub
pop
push
imul
pop
movsl
pop
mov
jno
incb
jae
addb
ret
aad
lea
jo
sub
push
out
add
xchg
in
add
in
popf
sub
icebp
or
es
inc
push
xchg
cmpl
popa
aad
pop
pusha
sarb
insl
pop
adc
enter
shlb
jns
dec
xchg
fimuls
push
movsl
rolb
jge
dec
hlt
fbstp
loop
or
xchg
outsb
out
cmovae
push
out
cmc
xchg
sbb
outsb
sahf
popa
xor
lea
shll
cmp
push
xlat
mov
jnp
dec
push
iret
imul
mov
mov
lahf
jae
dec
sbb
sarb
or
jnp
loop
sti
test
and
xorb
sub
leave
push
add
insb
mov
stos
gs
enter
inc
mov
notb
inc
testb
dec
and
sahf
mov
mov
xchg
jp
lods
rcrl
aad
pop
pop
xchg
mov
cmp
mov
sti
sahf
mov
push
roll
fs
and
inc
insb
iret
xor
and
inc
push
push
stc
shl
pusha
jle
cmp
add
pop
jecxz
jmp
pavgw
sub
fucom
inc
inc
pop
lret
mov
adc
mov
mov
in
push
sub
addr16
lahf
testb
push
push
and
lahf
sbbl
pop
sub
pushf
js
test
arpl
xor
imull
sub
enter
sub
and
movsb
pop
add
sbb
xorb
adc
mov
xchg
inc
mov
or
dec
pop
inc
clc
or
stos
inc
aam
lcall
stos
ret
and
dec
mov
lcall
mov
movsl
subb
insl
addr16
jl
push
cmp
mov
repz
mov
fsqrt
vmovdqa
mov
mov
test
dec
add
dec
mov
xchg
mov
scas
adc
orl
push
mov
pushl
hlt
out
and
mov
mov
pusha
cld
in
icebp
mov
inc
add
imul
rcrl
movsl
in
test
cpuid
rol
pop
dec
adc
add
outsb
imul
sub
or
add
aas
popa
je
je
mov
pop
add
ss
mov
stc
jo
inc
push
imul
mov
sub
push
loopne
pop
pop
mov
rolb
stc
ja
aad
enter
push
mov
push
out
push
sbb
repz
lcall
lcall
leave
and
cmpl
push
pop
dec
fstp
test
inc
mov
cmp
xlat
jns
dec
pushf
sahf
in
cltd
push
dec
pop
mov
loopne
test
and
popa
pop
std
or
out
push
jle
add
and
jl
mov
cmpsb
inc
adc
fs
cmc
sbbb
imul
lea
adc
pop
jnp
in
rolb
mov
enter
adc
jmp
pop
sub
or
jge
xchg
cmp
xor
adc
push
dec
movsl
push
and
cli
ljmp
adc
sub
pusha
jnp
push
inc
test
push
iret
sub
insl
adc
loope
dec
or
inc
sub
sbb
paddsw
add
sub
dec
xor
imul
jne
pop
sub
jne
into
jb
lret
testb
call
xchg
popf
push
bound
mov
mov
sbb
push
mov
add
adc
dec
cld
xor
mov
les
jne
dec
pop
mov
cmp
rolb
out
sahf
subl
leave
ja
cmc
rcrl
or
shl
addr16
jmp
call
xchg
push
mov
xchg
adc
xor
data16
cmp
aam
out
add
add
mov
ja
mov
fisttpll
insl
xor
loop
xchg
jg
xchg
add
cli
mov
nop
and
mov
or
lods
test
pop
and
push
arpl
xchg
dec
rcrl
movq
and
lahf
sti
sbb
mov
push
mov
xchg
mov
nop
jmp
ljmp
ret
imul
jns
add
stos
arpl
jns
outsb
mov
and
pop
arpl
fdivrl
push
sub
sbb
mov
enter
cltd
pop
addr16
mov
sub
scas
or
mov
lock
call
or
iret
jne
push
test
addr16
into
cli
cmp
push
hlt
jg
repz
jnp
aad
in
pop
dec
rcrb
sbb
hlt
push
loop
mov
out
add
scas
stos
popa
xor
cmp
push
or
and
in
mov
out
jae
fiadds
push
inc
adc
mov
jnp
je
jp
jnp
cli
sub
int3
and
ss
xchg
mov
jo
sub
push
je
sbb
push
jne
jp
push
mov
adc
incb
lock
testl
daa
jns
cmc
iret
fisttpll
dec
roll
xor
jo
or
aam
mov
ja
adc
cltd
mov
repnz
fcmovnb
fisttps
xchg
add
dec
jp
rcrl
stos
xchg
adc
ja
mov
out
jno
iret
and
insb
jnp
push
jno
sbb
sbb
sbb
jbe
movaps
jne
insb
hlt
xchg
sarb
iret
pushf
loop
push
push
cld
jmp
mov
test
mov
add
sbb
lahf
sahf
rorb
shl
aas
pop
sbb
lcall
mov
popf
fwait
inc
xor
lods
and
push
pop
loop
lods
jl
not
mov
mov
jbe
mov
xor
lods
sbb
pop
outsb
lahf
incb
sbb
inc
mov
push
nop
dec
cmp
icebp
in
sub
xor
test
insb
xor
ror
gs
dec
test
inc
push
xchg
cmp
adc
popa
mov
lcall
lock
xchg
pop
out
lcall
sub
mov
sbb
xorb
movl
pop
sahf
popa
ljmp
divb
fst
inc
or
mov
arpl
mov
outsl
shl
xor
scas
jo
insl
mov
sbb
jnp
and
mov
adc
push
sbb
cmp
mov
mov
dec
dec
mov
icebp
push
adc
bound
enter
dec
sub
cwtl
mov
in
popf
inc
adc
in
pop
xor
xor
sub
fistps
jne
nop
rol
sub
out
sahf
loop
cmp
mov
mov
jbe
std
sbb
adc
scas
cwtl
es
pop
adc
lods
or
mov
add
pop
out
mov
push
ljmp
int
add
fistpll
add
jne
shrl
addl
divb
ja
cmp
mov
sub
xor
negb
cs
lods
sbb
pop
jne
jno
adc
cmp
int3
push
mov
push
lds
cmc
jnp
xchg
jne
pop
cmp
notl
push
adc
popf
fistl
mov
aaa
cwtl
adc
rcl
push
and
ret
icebp
fstpl
push
add
hlt
cmc
inc
push
or
ja
scas
pop
pushl
push
popf
push
pop
test
sbb
jge
push
dec
in
ljmp
jl
testb
imul
dec
xchg
mov
mov
hlt
adc
jne
xor
jle
rcrb
pushf
mov
xchg
push
aad
ret
mov
add
int3
xchg
insl
mov
mov
out
cs
inc
out
imul
enter
out
xchg
aas
sub
iret
pop
push
xorl
repnz
mov
pop
call
ss
rcl
xor
or
sahf
push
int3
subb
loop
aaa
rorb
out
movsl
fbld
inc
insl
mov
cld
pop
mov
ljmp
cs
enter
pusha
aaa
cmp
push
in
das
shrl
sahf
xchg
fsubrs
add
xchg
test
dec
decl
xchg
negl
mov
pop
xchg
mov
out
ja
popf
into
cs
push
stos
sbb
inc
sub
and
push
cmpsl
lods
pop
sbb
mov
cmp
ss
outsb
ss
pop
mov
gs
mov
cmc
shl
addr16
or
nop
cltd
sub
leave
inc
bound
lret
outsb
dec
pop
ffreep
push
iret
or
inc
push
mov
jnp
fs
pop
push
mov
insl
or
rcl
jbe
aad
mov
xchg
adc
stos
sahf
cmp
scas
xor
mov
repnz
or
or
pop
pop
pop
in
loop
data16
stc
movsb
je
aad
adc
pop
push
cmp
push
aaa
add
cmpsl
cld
jnp
push
adc
cmc
pop
mov
add
pop
loop
ret
mov
add
test
loop
lahf
mov
shll
fistpl
in
je
add
xchg
lahf
push
fldpi
pmullw
xchg
and
jge
scas
dec
aam
pop
sbb
cld
add
push
cwtl
loop
mov
adc
inc
xchg
mov
jo
add
push
les
lds
sub
jnp
insl
inc
clc
adc
rclb
add
aaa
int
fwait
xchg
test
test
adc
fisubrl
sbb
pop
jmp
out
jnp
dec
mov
sbb
sub
push
cwtl
fs
in
outsl
push
rcll
in
sub
push
test
pop
jg
add
pop
mov
push
int
sahf
jle
add
adc
testb
bound
dec
pushf
cmp
or
sub
pop
sbb
add
jmp
in
into
push
fimull
lds
push
mov
push
mov
jmp
dec
jle
xchg
xchg
shll
aaa
xchg
mov
xchg
pop
mov
dec
xchg
imul
push
push
movsl
ret
addr16
push
push
mov
jnp
bound
and
arpl
int
xor
xchg
inc
fcomi
mov
shrl
inc
or
mov
mov
or
int
fcmovnbe
int3
mov
jne
mov
push
repnz
fs
loopne
add
fisttpl
inc
ss
fists
mov
or
push
in
xor
pop
inc
cmp
mov
xor
xor
gs
lret
outsb
and
xchg
fcompl
ret
inc
pop
cmp
iret
aas
clc
add
mov
push
pushf
fstpl
lds
inc
sbb
sub
push
mov
mov
ret
sbb
sbb
mov
aam
popa
sub
pusha
mov
pop
mov
pop
orl
push
push
mov
pop
fisubrs
mov
cld
pop
scas
int
mov
mov
cmpsl
xchg
push
js
adc
cmp
inc
sbb
jge
push
xchg
pop
addr16
inc
xor
xor
fs
dec
or
push
mov
add
mov
or
pop
inc
int
test
or
jnp
mov
fwait
loop
jmp
inc
pop
inc
pop
pushl
add
pop
incl
out
jle
push
gs
shl
sbb
cmpsb
mov
out
lcall
ret
dec
test
fadds
cmp
cmp
stc
jns
jl
mov
pop
adc
xchg
mov
push
mov
xor
jae
or
leave
inc
int3
iret
xor
lret
add
cmp
pushl
popa
mov
ljmp
popf
jne
push
inc
rcrb
test
fs
fbstp
test
and
lock
repnz
cmp
lahf
inc
dec
pop
repnz
lods
aaa
add
and
ja
sub
js
push
repz
adc
jns
imul
int3
push
in
pop
mov
add
test
outsl
inc
xchg
aam
cmp
xchg
hlt
xchg
insl
adc
adc
and
push
clc
jle
stos
aaa
adc
inc
in
mov
push
inc
and
cmpsb
out
testb
lcallw
roll
adc
push
xorl
lea
add
leave
lcall
nop
in
pop
popf
mov
fsubp
inc
xor
xor
and
mov
pop
arpl
stos
mov
adc
loop
enter
mov
xchg
loop
lods
insl
mov
call
xor
fwait
outsl
or
adc
imul
cli
ds
mov
xlat
sbb
sahf
loop
mov
jg,pn
into
xor
dec
pop
arpl
lds
scas
stos
js
out
xor
xorb
sahf
jne
xor
test
xchg
xchg
push
shlb
xchg
pop
pop
add
test
mov
add
and
cwtl
dec
push
insl
gs
dec
testb
out
xor
pop
cltd
aad
xchg
les
negb
cmp
jp
jne
cmp
inc
jg
push
cmc
repz
push
push
mov
pop
shll
into
pop
movsl
leave
ficomps
inc
cld
push
push
lods
push
jge
or
mov
scas
or
push
add
out
sarb
aaa
lods
push
icebp
nop
loop
shl
or
and
push
pop
inc
stc
popf
or
or
pop
cmp
or
ss
cmp
inc
cmp
mov
jae
or
jbe
out
add
iret
dec
and
ficompl
out
or
pushf
ret
fwait
sbb
push
fisttps
xchg
mov
xor
sbbb
add
xor
insb
adc
cmc
das
mov
mov
cmc
inc
mov
mov
shl
and
test
push
out
rclb
adc
pop
mov
lods
loope
add
adc
xlat
cli
sub
repz
test
out
lcall
nop
jno
pop
int
sbb
mov
xchg
xchg
add
imul
sti
mov
add
in
test
lea
or
cmp
movl
clc
lods
push
sub
lods
dec
sbb
or
loope
xchg
mov
or
push
sbb
cmp
xorb
mov
adc
scas
adc
test
in
adc
in
call
push
sbb
pop
mov
inc
aas
arpl
inc
adc
jmp
add
push
mov
icebp
mov
push
xor
pusha
aam
fstpl
mov
lahf
mov
jae
inc
mov
cli
jg
out
add
lahf
outsl
shlb
adc
mov
jecxz
outsl
fimuls
mov
inc
pop
frstor
js
sbb
out
dec
inc
pop
fwait
mov
scas
shll
mov
cmp
loop
xor
dec
ljmp
and
aam
mov
xchg
rclb
xor
xchg
imul
lret
lret
pushf
push
sub
add
dec
ljmp
add
insl
and
push
cmpsl
loop
pop
lahf
adc
mov
mov
in
jb
cmpsb
divb
dec
sub
add
jg
cmp
movsl
movsl
lret
pop
or
push
and
aas
aam
jmp
sub
pop
jno
les
iret
and
loope
fstl
int3
test
mov
lcall
sbb
adc
pop
fists
or
jmp
cmp
xor
sbb
in
ret
mov
loopne
les
outsb
lods
andl
pop
fcoms
jl
pop
rorl
xchg
push
xorb
mov
xchg
jmp
and
xchg
aaa
out
fistps
push
push
pop
sub
int
lods
sar
insl
xchg
xlat
shlb
push
sub
ja
xlat
fmulp
jns
adc
roll
or
lahf
cmpsb
adc
mov
fsubrl
pop
mov
adc
xor
test
cli
cmp
stos
jo
cmp
mov
mov
xchg
jns
lcall
inc
imul
imul
popf
inc
sbb
out
outsl
je
or
mov
fs
sbb
cmp
dec
out
aad
adc
sub
sti
fsubl
mov
push
addb
cli
mull
out
fdivrs
mov
pop
inc
and
cmp
aad
lds
pop
cmovae
enter
in
stos
out
adcl
dec
push
dec
out
fxch
aad
loope
xlat
add
add
xor
cmp
stos
mov
xchg
dec
mov
or
clc
ror
iret
inc
jae
nop
insl
cs
je
and
popa
fdivrl
inc
test
dec
imul
or
push
adc
dec
mov
ss
pop
fldl
sub
test
lret
loope
out
sbb
daa
cmp
ljmp
aas
or
inc
inc
mov
or
movsl
mov
loop
divl
stos
sbb
push
pop
or
enter
std
jno
imul
xchg
stos
push
pop
lahf
mov
int
push
mov
data16
in
cmp
loop
inc
sahf
ret
mov
mov
ret
outsl
sub
outsb
sub
fstpl
lea
mov
mov
mov
or
std
adc
in
subl
mov
jp
xor
mov
clc
sbb
jae
stc
ljmp
sti
sub
fimuls
arpl
lahf
dec
inc
enter
fnstsw
negb
loope
rol
icebp
lcall
adc
cmc
enter
fwait
pop
fisubrl
push
xlat
sbb
add
fcoms
mov
or
leave
pop
cmpsb
inc
pusha
xor
xor
shl
fidivs
xor
aas
jnp
and
xor
out
inc
push
lahf
outsl
add
mov
popf
scas
nop
lock
daa
out
arpl
mov
lret
adc
aaa
inc
adc
and
fistl
xchg
int3
mov
jp
enter
inc
push
mov
xor
and
xchg
call
loop
and
sarb
mov
shlb
push
mov
rclb
adc
dec
cmp
es
add
sbb
cli
loopne
test
and
push
sub
push
iret
rcrl
fidivs
pop
bound
jns
sbb
adc
xor
pusha
sbb
cmp
negb
cld
xor
jbe
les
gs
inc
repz
mulb
push
rorb
pop
push
sahf
mov
mov
cmp
sbb
ja
aad
sub
and
enter
and
in
ret
xor
pop
inc
std
movsl
cltd
sbbl
fidivs
cmp
scas
into
mov
or
roll
ret
cmp
lods
mov
jns
lahf
ret
add
out
add
cmpb
mov
and
mov
ret
pop
insl
inc
lret
adc
xchg
ret
mov
fisubs
push
rclb
mov
fsin
dec
and
popa
sahf
jp
adc
ja
inc
dec
int
ss
pop
das
push
pop
movsl
add
int
sahf
xor
xor
mov
add
in
cmpsb
dec
outsl
test
stos
negl
fwait
mov
mov
out
sbb
cmc
into
push
ret
push
push
in
sti
sbb
je
fidivrs
outsb
add
cmp
sub
insb
xchg
fucom
repz
add
fcmovbe
mov
dec
repnz
xor
mov
sahf
lret
sbb
fidivrs
push
mov
gs
loop
fldl
inc
daa
add
jg
popf
dec
imul
imul
jecxz
mov
sahf
fdiv
enter
rcl
add
jo
fsubr
jno
fwait
ja
lret
popa
testl
rcr
aad
inc
lret
sub
scas
divb
mov
loop
into
fsubr
ss
jg
jl
mov
ror
sub
push
imul
sbb
push
stos
outsb
int3
fmuls
sbb
adc
fs
leave
fistpl
push
enter
or
xlat
mov
jbe
enter
sub
lock
orb
arpl
mov
sar
mov
bound
mulb
jbe
mov
in
mov
push
mov
lods
aad
jge
push
sbb
mov
xchg
in
or
sbbb
insl
fcmovnbe
test
sahf
loop
add
fnstsw
add
into
out
rcll
aaa
in
sbb
stc
loop
jmp
loope
lret
ss
ficoml
cmc
fildll
pop
outsl
pop
sbb
inc
add
lret
push
cmp
push
xor
push
add
mov
loop
arpl
xor
push
pop
fists
lds
or
push
pop
sti
fisttps
mov
sbb
inc
mov
jno
inc
andl
enter
imul
outsl
fldcw
add
push
jg
push
insl
adc
das
incb
pop
and
pop
xchg
cmp
cmpsl
push
push
xor
cmp
loop
fdivrl
cwtl
test
neg
push
xor
push
outsb
lahf
sub
fdivrs
clc
lock
sub
mov
mov
and
mov
cltd
jns
sub
lret
cmpsl
add
mov
mov
add
sub
aas
sub
jmp
inc
inc
or
dec
mov
rclb
sbb
inc
sub
mov
jae
lea
jge
jg
sbb
pop
aam
push
iret
sub
movsl
adc
ds
push
dec
fwait
or
enter
pcmpeqw
rolb
xchg
lods
pop
xchg
mov
repnz
inc
jle
out
sbb
xchg
scas
scas
test
setne
xchg
pop
enter
add
fs
adc
mov
loopne
das
ds
mov
lods
sbb
fldt
mov
jne
bound
lea
test
call
xchg
jg
shl
je
pop
cmc
loopne
sarl
fucom
mov
fs
loop
negl
jecxz
xor
add
shll
addl
inc
ret
cmp
leave
inc
in
lcall
iret
mov
xor
imul
push
add
loop
repnz
repnz
mov
mov
push
adc
mov
jo
imul
inc
into
lahf
in
push
testl
sub
sbb
mov
aad
rol
jo
add
repnz
out
rorb
and
pop
lcall
aad
rclb
and
testl
inc
je
adc
xchg
mov
sbb
shrl
xchg
insb
or
mov
call
loop
fstpl
sub
sub
add
fists
xorl
inc
stos
in
mov
repnz
adc
cmp
pop
cmp
push
cmpsb
scas
sbb
pop
xchg
jnp
jmp
test
mov
popa
lods
adc
xor
icebp
sahf
test
pop
push
enter
or
test
cmp
popa
pop
shr
cmp
lret
loop
adc
dec
mov
xor
mov
and
imul
pop
fwait
pop
and
jno
xor
or
lret
push
arpl
pop
mov
das
sub
adc
xor
mov
xor
call
scas
push
out
mov
mov
aad
and
lret
dec
repnz
in
mov
enter
cmpb
push
dec
pop
push
movsl
sbb
in
test
mov
dec
ds
dec
in
andl
xchg
xor
mov
jecxz
stos
insl
movsb
mov
sahf
adc
mov
xchg
dec
mov
lahf
dec
and
sub
cmp
out
xchg
adc
popa
jecxz
pop
inc
mov
add
adc
lcall
test
xchg
push
or
lods
cwtl
pushf
adc
aad
mov
das
pop
mov
mov
and
sbb
mov
lods
adc
enter
jne
sbb
ret
cmp
pop
addr16
inc
out
stos
loop
adc
js
inc
dec
cmovg
pop
test
sbb
xor
push
cltd
inc
xchg
jmp
sbb
pop
out
sbb
xor
scas
fildll
sub
fstp
jmp
add
cmc
imul
mov
mov
testb
adc
fwait
outsb
dec
mov
cld
aaa
adcl
jnp
add
insl
xchg
xor
jmp
add
test
movsl
sbb
adc
or
test
pop
arpl
pop
cmp
daa
lahf
bound
lret
xchg
mov
incl
imul
adc
loop
repnz
mov
into
pop
hlt
cmc
mov
mov
dec
xchg
mov
xchg
dec
dec
add
fwait
mov
mov
adc
sbb
or
cli
insl
xor
mov
call
orb
lahf
lcall
cmp
cltd
pop
out
or
int
jbe
xor
sbb
iret
into
icebp
movsb
sub
inc
xchg
rorl
sarl
scas
call
leave
dec
jg
xchg
push
xor
adc
in
xchg
push
mov
rorl
xchg
rol
hlt
push
add
adc
jg
lcall
push
or
loope
push
add
inc
cmp
jne
addr16
or
stos
lcall
adc
push
std
arpl
jge
push
aas
sub
adc
jo
cltd
hlt
das
lcall
aad
leavew
idivl
mov
roll
in
lret
xchg
pop
mov
loop
mov
adc
sbb
out
xchg
jnp
into
xchg
push
bound
cli
push
xor
mov
inc
lret
push
popa
icebp
and
xor
je
adc
inc
rcrl
sbb
adc
pop
jge
idivl
shll
sub
sbb
testb
in
adc
cwtl
cmp
lahf
xchg
push
orl
test
and
pop
add
lods
rcrb
out
fistpl
and
push
mov
hlt
ret
push
loop
pop
adc
cmp
sbb
and
popf
cmpsb
push
dec
aad
lahf
sahf
leave
sbb
fcomip
in
mov
sub
pmaxub
ss
out
adc
xor
mov
and
sti
cs
jg
inc
adc
mov
test
sub
jno
mov
aaa
nop
imul
rclb
adc
movsb
xchg
mulb
sahf
cmp
lea
add
test
adc
cmp
cmc
xor
xor
aaa
jmp
arpl
outsb
cmp
xchg
mov
rorl
jmp
xor
xor
pop
sub
les
dec
in
clc
adc
icebp
mov
jp
idivl
jl
ja
mov
jmp
dec
ret
mov
dec
jb
or
push
mov
fdivrs
jo
inc
mov
sbb
fwait
pop
arpl
in
pop
jmp
out
lods
out
cmp
ss
sub
jnp
cmp
xor
sub
push
ret
mov
lahf
xorb
les
sbb
or
iret
and
inc
push
cmp
add
dec
push
cmp
mov
sti
xchg
ret
lahf
es
dec
and
sub
add
jo
test
outsl
push
push
mov
dec
adc
aad
cmp
sbb
adc
rcll
push
inc
mov
lahf
adc
lock
mov
jns
xor
push
or
aam
inc
sahf
mov
jp
or
adc
pop
mov
mov
repz
mov
bsf
xor
or
add
sti
jecxz
enter
inc
bound
ss
cmp
sub
lock
rcrb
rolb
fwait
icebp
enter
adc
sbb
adc
iret
ja
jne
adc
cmp
push
dec
rolb
add
scas
arpl
and
cld
test
aad
adc
sbb
stos
or
in
fnsave
mov
mov
mov
fstps
jae
fnsetpm(287
and
jae
or
in
mov
cmp
stos
sbb
cli
dec
push
or
push
mov
pop
popa
loop
and
cmp
mov
imul
add
mov
in
scas
loop
pusha
subl
fs
rcl
nop
fisubs
shlb
sub
push
mov
test
adc
xor
or
bound
dec
adc
mov
xchg
pushf
mov
mov
test
pop
dec
add
pop
aam
sub
adc
adcb
or
or
fwait
mov
iret
xor
lcall
push
jge
sbb
pop
sub
ret
adc
sub
jnp
out
cwtl
jmp
aam
rolb
push
dec
push
sub
sbb
xchg
rorb
mov
pop
popf
cvtps2pi
sbb
ret
int3
jg
subb
aad
rol
bnd
push
dec
mulb
hlt
roll
scas
mov
inc
mov
loop
dec
xchg
pop
js
push
adc
inc
into
adc
neg
pusha
inc
in
mov
lods
lds
push
mov
ljmp
call
shrb
adc
add
hlt
jae
cmp
lcall
imulb
push
xor
hlt
sub
pusha
or
dec
mov
ret
xchg
mov
mov
inc
mov
mov
mov
fnsave
test
call
popf
mov
jmp
lcall
and
int3
ss
dec
sbb
or
pop
mov
mov
sub
cmp
xchg
xor
mov
jne
loop
or
push
mov
repz
mov
popf
adc
jp
out
inc
inc
icebp
mov
mov
mov
fisttps
faddl
push
icebp
cli
pop
pushf
jmp
mov
cli
mov
mov
xchg
scas
mov
jae
jae
mov
adc
pop
fldl
sub
jg
lahf
mov
jle
mov
out
inc
sbbb
jg
or
xchg
xlat
lahf
iret
sub
xor
outsb
mov
cmpsb
mov
pop
mov
jg
push
add
lods
sarl
frstor
hlt
and
jne
sbb
ds
mov
or
mov
xor
fnsave
adc
inc
and
push
xchg
xchg
adc
adc
sahf
add
or
loop
repz
addr16
mov
fstpl
push
dec
sahf
sti
out
jecxz
iret
adc
loop
push
ret
int
test
xor
imul
popa
adc
lcall
pop
push
or
mov
cmc
and
push
push
sbb
xor
xchg
sbb
cltd
dec
xor
mov
jp
xchg
lahf
ljmp
mov
add
adcl
dec
mov
out
xor
lcall
loop
lods
cmpsb
jne
fs
mov
ficompl
cmpsl
pop
sub
mov
inc
stos
jno
cmp
sarl
lods
adc
mov
insl
and
push
cld
rorl
add
adc
push
aaa
mov
or
cmp
push
cld
dec
xchg
lea
adc
movsb
ja
mov
jno
iret
ljmp
scas
es
fisttpll
add
sbb
push
sub
pop
push
idivl
imul
cmp
and
lcall
aam
insl
enter
add
scas
and
test
ja
cmpsl
add
xor
into
das
mov
aas
cmp
push
lret
mov
or
into
in
fldl
mov
enter
int3
mov
or
xlat
pop
jno
andb
imul
xchg
out
inc
mov
outsb
sub
lahf
out
shrl
cmpsb
xor
cmp
cmp
pop
xor
jge
dec
repz
adc
push
rcl
cmp
sbb
sbb
mov
sbb
sbb
iret
xor
out
and
add
fyl2x
add
mov
sbb
mov
sbb
imul
ds
mov
push
test
sub
rcrb
xchg
adc
loope
sub
add
imul
push
sub
push
and
fwait
cmp
pop
xchg
lret
addb
xchg
push
fstpt
and
fsubrl
imul
sbb
add
inc
ds
cmpsl
sub
sbb
in
dec
add
insl
jne
inc
cmp
lds
ret
loop
add
cmovl
lea
lods
push
jl
jbe
decl
add
sub
dec
sbb
outsl
les
push
test
lcall
ret
mov
cmc
fistpll
mov
bound
add
adc
add
jae
pop
push
inc
xchg
inc
xchg
jl
add
pcmpgtb
push
cmc
push
loop
je
sub
cmp
call
inc
add
push
pop
out
xor
pop
xchg
ret
sub
scas
add
adc
call
mov
dec
mov
stos
mov
jno
pop
sub
push
pushf
push
push
dec
sub
cld
mov
xor
xchg
negl
dec
cltd
lods
ret
js
gs
rolb
or
outsb
sub
dec
jecxz
in
inc
add
push
incl
ja
inc
pop
dec
mov
out
aam
jnp
sbb
sahf
pop
out
ret
mov
lret
fs
lock
jae
xor
xchg
sbb
sbb
mov
loop
jbe
cwtl
add
fcoml
int
mov
mov
push
xor
fnsave
jg
add
cmp
enter
aas
pusha
push
fwait
pushf
ja
jg
inc
pop
in
jge
notl
and
mov
dec
push
lock
xchg
mov
jae
and
xor
sbb
hlt
mov
stos
mov
aas
add
sub
xchg
xor
xor
out
sub
and
nop
cmp
test
adc
add
fsubrl
rorb
mov
push
addb
hlt
mov
sarl
pop
ss
fnstenv
pop
xchg
jo
icebp
fists
adc
lock
adc
cmc
sarb
fs
shrl
testl
cmp
nop
outsl
dec
aaa
loop
shlb
out
and
test
movsb
mov
scas
xchg
inc
pop
aas
inc
adc
push
out
xchg
in
insl
push
jg
cld
movsb
std
inc
pop
pop
in
push
pop
sti
xchg
pushf
or
fs
mov
shlb
inc
inc
outsl
lock
xchg
bound
mov
arpl
lahf
mov
mov
pop
inc
mov
or
movsb
lods
aaa
xchg
ret
mov
push
shrl
movsb
ja
sahf
lea
sbb
xorl
in
and
aas
mov
punpcklwd
or
lods
jno
and
add
sub
inc
insl
cli
sbb
bound
in
leave
jmp
push
inc
aas
std
mov
js
call
out
push
clc
mov
in
loopne
loope
shll
inc
mov
jne
aad
sub
dec
das
add
dec
jmp
sbb
xchg
popa
add
sbb
rolb
shrl
ret
adc
dec
push
xchg
cmc
ret
sbb
ficoms
inc
xor
rorb
push
jmp
pop
sub
push
lcall
pusha
subl
mov
adc
mov
cmp
mov
lods
jnp
xabort
imul
test
rol
icebp
out
cld
out
ds
daa
test
shll
sarl
cmp
push
sbb
sub
jg
jnp
cmpsl
popa
scas
std
and
popf
lahf
in
out
pop
mov
jge
mov
xor
mov
add
inc
adc
gs
adc
inc
shll
hlt
jo
arpl
into
fists
ret
insl
xchg
call
stos
lret
test
jnp
cli
mov
ret
js
data16
int3
add
fwait
dec
jle
jmp
lcall
and
and
ss
push
pushf
and
leave
xchg
xor
rcll
mov
sub
dec
scas
es
add
jecxz
outsb
rolb
lret
cltd
jl
cmp
add
jno
rcr
inc
cs
int
and
xor
jmp
add
and
push
lea
push
cmp
adc
mov
int
xchg
loop
push
addr16
cmp
jnp
sbb
aas
mov
push
idivl
push
pop
add
fadd
pop
jp
add
or
sbb
add
std
dec
adc
out
inc
jo
outsl
scas
ss
pop
sbb
out
aam
or
sahf
lahf
fsub
jno
test
sub
inc
add
daa
arpl
mov
inc
mov
ss
loopne
stc
xchg
push
mov
push
scas
and
pop
or
pop
cwtl
sub
das
adc
and
or
cmp
inc
jbe
lcall
pop
lock
ret
jle
rcll
xchg
cld
sti
ret
fwait
sub
insl
test
xor
jnp
scas
or
push
mov
test
pop
shll
xchg
adc
pushf
cmp
call
test
pop
lods
mov
insl
mov
inc
aas
pop
rcrb
mov
gs
sub
jae
fists
lea
inc
dec
xchg
sbb
lret
mov
mov
mov
nop
or
and
stos
xor
mov
xor
adc
loopne
adcl
lds
stc
mov
dec
insb
inc
nop
stc
or
or
pop
inc
stos
gs
mov
das
cmpsb
adc
rclb
jmp
scas
movsl
push
and
mov
inc
sbb
sub
or
adc
out
push
or
in
xor
cwtl
dec
imul
pushf
lds
mov
movsl
faddl
out
add
outsb
mov
pusha
mov
fisubl
mov
notl
push
pop
cmp
push
roll
xor
in
int
sub
mov
mov
call
rol
test
bound
mov
push
sbb
sti
dec
in
jmp
mov
ljmp
sbb
sbb
mov
fucomp
add
fnstcw
mov
or
gs
jecxz
mov
inc
sub
mov
inc
mov
pop
andl
loopne
and
jne
addr16
jb
clc
cmp
aad
enter
repz
add
xchg
incb
mov
cli
insb
xor
lock
loope
cwtl
mov
call
fistpl
shll
push
mov
leave
jbe
out
mov
sbb
or
std
or
imul
mov
push
xchg
in
push
insl
je
adc
push
jle
fstp
add
lock
clc
loop
mov
or
loop
push
aam
imul
xchg
sub
push
nop
and
lret
xchg
inc
sbb
adc
aaa
add
cmp
popf
mov
xchg
fistpl
jg
loop
int3
in
push
imul
leave
adc
sbb
inc
xlat
pusha
sbb
push
ljmp
cmp
outsl
in
pop
mov
cmc
sbb
pusha
sub
xor
inc
jbe
xorl
dec
lahf
jnp
fs
mov
add
es
xcrypt-ofb
cmpsl
sub
mov
sbb
pop
adc
push
push
lcall
inc
cltd
outsb
in
nop
add
inc
enter
imulb
mov
je
xor
lret
push
xor
dec
fistpl
inc
mov
lahf
adc
subb
icebp
das
add
jge
sub
or
inc
push
nop
push
cmp
icebp
or
mov
adc
push
or
mov
shll
int
shr
leave
push
test
loop
or
adc
pop
xchg
adc
divl
das
add
clc
push
shrl
leave
ljmp
push
fdivs
push
and
jp
mov
cmp
pop
mov
jge
pusha
cmpsl
test
andb
xchg
sub
mov
insb
scas
mov
lds
or
cmp
add
imul
or
jecxz
push
xor
ret
insb
xchg
mov
lret
sub
adc
pop
repnz
lock
jb
jp
shr
or
testl
jmp
and
xchg
scas
out
pop
inc
pop
stos
aad
adc
pop
pop
outsb
idivl
cmp
mov
adc
pop
pop
jg
dec
fcompl
mov
pop
loopne
dec
movsb
pusha
jns
fstpl
adc
sbb
mov
jno
push
jmp
mov
push
push
and
sahf
das
rclb
dec
cmp
insl
iret
cmpsb
pop
out
jp
mov
testb
adc
stos
outsb
test
mov
mov
adc
je
lcall
jo
gs
mov
icebp
loop
mov
push
mov
call
arpl
sarb
andl
stos
test
les
xor
jecxz
mov
gs
adc
mov
inc
jnp
lret
sub
sbb
adc
push
enter
mov
mov
add
jno
out
mov
mov
mov
rdpmc
aas
lahf
cmc
imul
mov
lahf
push
dec
fisttps
cmpsl
jnp
incl
xlat
sbb
imul
loop
add
movsb
ds
sbb
mov
add
push
mov
cmp
mov
dec
inc
insb
pushf
push
jb
jp
test
add
int
ss
and
cmpsl
and
adc
xor
adc
push
cmc
call
mov
in
js
add
inc
mov
and
orb
push
dec
enter
sbb
test
int3
or
adc
sbb
rolb
fcoms
pop
xchg
pop
loope
add
cmc
sub
cmc
push
scas
popf
ret
jne
icebp
mov
cmovno
mov
sbb
pop
xchg
jno
adcl
aaa
inc
iret
and
inc
push
cmp
out
push
addr16
aam
loop
or
and
mov
mov
and
xlat
or
lods
pop
adc
loop
jns
cwtl
add
int
fimuls
adc
push
ljmp
xchg
imul
mov
lcall
mov
and
push
push
ljmp
enter
cmp
push
dec
loopne
jnp
notl
mov
sub
push
adc
outsl
dec
mov
dec
sbbl
adc
jnp
shlb
or
adc
jo
sti
push
push
jno
out
lock
fstpt
or
jg
mov
cli
lea
add
xchg
and
push
mov
push
mov
xchg
adc
lahf
std
sbb
cmp
pop
test
es
in
inc
in
and
ret
fimull
xor
jo
clc
fidivl
dec
mov
adc
inc
cmp
stos
adc
push
add
pop
sbb
pop
fxam
lahf
cld
sbb
push
adc
xchg
push
dec
push
ja
iret
mov
std
out
adc
cmp
dec
stc
iret
andb
outsl
sub
jnp
mov
pushf
push
das
call
push
cltd
xlat
add
ret
std
jg
or
stos
enter
int3
loopne
or
and
ret
adc
lret
push
sub
test
add
jo
sub
or
adc
ret
cmp
call
add
sub
xor
push
test
stc
cld
loop
roll
js
pop
pop
sub
mov
pushf
sbb
jl
mov
ss
outsl
sub
lret
sub
jns
lods
fwait
cwtl
sub
in
lret
lea
ret
out
shlb
loopne
rorl
cmpsb
ds
imul
pop
mov
aad
repnz
mov
outsb
das
movsl
jmp
faddl
cwtl
xchg
pop
or
insl
mov
mov
je
aas
jne
test
push
fistps
shrl
fbstp
adc
mov
fcoml
jne
jge
mov
nop
insb
dec
popf
lret
insl
subl
sahf
xchg
adc
dec
jb
xchg
adc
add
add
rorl
xchg
test
push
in
adc
jecxz
cltd
mov
add
and
fwait
loop
sub
push
fnsave
test
nop
pop
fsubl
addr16
imul
or
inc
ret
loopne
lds
js
inc
push
int
stos
push
mov
cmc
je
fmul
lods
std
cmp
scas
mov
sbb
adc
sub
ja
xchg
mov
mov
gs
into
stc
icebp
fs
fistl
pop
movsb
pop
filds
cmc
je
dec
out
mov
cmp
or
orw
and
es
lcall
leave
cs
add
arpl
mov
lods
sbb
push
jp
xchg
xchg
pop
push
clc
add
into
push
sub
mov
adc
aaa
inc
mov
adc
adc
lcall
les
inc
in
std
dec
xor
xor
inc
mov
cmc
mov
ljmp
clc
loop
and
cmp
jnp
add
dec
popf
mov
sub
fwait
rcrl
sbb
mov
gs
fdivrs
in
jno
or
scas
mov
push
jp
mov
fldenv
test
sbb
pop
pusha
pop
jns
dec
aam
jmp
lds
mov
cmpb
adc
mov
sbb
or
lods
xorb
cmc
cmp
repz
sub
lret
fiadds
mov
pop
push
jo
aad
mov
loop
and
cmp
dec
xor
inc
jne
push
cs
jp
in
add
push
and
mov
ljmp
or
push
adc
mov
pop
mov
shrl
xor
adc
mov
pop
loop
or
rorb
aam
aad
arpl
cmp
shlb
jbe
cltd
or
add
scas
ss
enter
add
mov
int3
cmp
xchg
mov
dec
mov
jnp
xor
xor
dec
jne
or
push
adc
rcr
loop
xor
in
flds
push
shll
and
or
pop
sub
out
rclb
sbb
add
sub
xchg
sahf
aas
jmp
shll
xor
pop
push
das
insb
je
pop
or
sbb
insb
int3
shlb
outsl
add
xor
dec
sbb
and
jecxz
shrb
or
outsl
sbb
jne
dec
leave
mov
push
sub
movsl
mov
xchg
mov
cmpsl
and
jo
fildl
jo
mov
push
out
push
cmc
fcmovnu
mov
ja
xchg
and
bound
maskmovq
sbb
test
in
sub
fistps
push
add
jo
imul
adc
pop
js
xor
and
ljmp
sub
mov
dec
roll
leave
aad
enter
loop
or
jmp
sarl
cmp
ficoml
fwait
out
not
pushf
adc
add
cmpsb
incb
cmp
adc
ja
jmp
lret
and
sti
sub
out
or
shlb
push
xor
daa
cmp
das
addb
lret
pop
test
jmp
xlat
add
push
sbb
xchg
dec
cli
mov
add
test
xor
add
test
cli
xchg
xchg
sub
scas
jnp
dec
ljmp
icebp
sahf
add
mov
ljmp
dec
xor
jge
arpl
cmp
cltd
rol
cmp
mov
pop
mov
pop
cmp
push
or
cmc
loope
stos
cltd
cmp
testb
stc
out
lods
pusha
popa
daa
inc
shlb
in
out
cmp
adc
push
and
aam
sbbb
je
push
stc
mov
cmp
xorl
push
nop
mov
rcl
iret
pop
xor
lret
inc
xor
fstps
push
sub
neg
stos
out
fimull
cmp
mov
sahf
xchg
add
popa
ret
inc
xchg
xor
push
sub
aam
adc
mov
enter
jne
xlat
lods
cli
outsl
test
sub
out
xchg
lret
xchg
push
sbb
adc
ss
add
ficomps
aam
pop
adc
loop
adc
nop
adc
dec
gs
dec
xor
jle
lea
add
imul
jge
cmp
adc
icebp
pusha
in
mov
adc
adc
xor
pop
aam
push
push
clc
push
cmc
mov
inc
dec
mov
fistpll
pop
js
and
cmp
mov
jnp
jo
mov
push
subb
push
lret
dec
mov
movsb
jg
add
fadds
push
ja
sbb
in
into
outsb
cltd
jo
dec
inc
mov
mov
cmp
movsl
mov
test
sbb
scas
pop
dec
xor
out
add
adc
xchg
orl
pop
data16
fmull
xchg
sub
negb
adc
hlt
pop
stos
ret
sbb
lock
loope
sub
and
xchg
mov
mov
cmp
aas
sub
jmp
movsb
mov
push
cmpb
test
movsl
aad
add
jne
int
xchg
mov
dec
jnp
sarb
orb
xchg
loope
adc
ret
inc
or
dec
mov
adc
int3
call
shlb
stos
test
mov
cmpsb
add
sub
mov
and
inc
pushf
lds
mov
adc
add
jae
ret
push
or
call
sbb
mov
mov
dec
call
out
scas
pop
cmp
dec
or
pop
adc
adc
sub
sbb
xor
dec
in
in
daa
mov
in
sbb
mov
or
out
loop
xor
bound
fistpll
mov
icebp
mov
jae
iret
test
and
cmp
das
lahf
out
jmp
mov
imul
pop
fildll
mov
mov
sti
shll
orl
add
or
mov
ds
push
sahf
xlat
dec
neg
jmp
mov
fmulp
cmc
and
adc
sub
out
daa
outsl
pop
movd
addr16
inc
aam
sti
mov
push
lods
add
cmc
jecxz
fiadds
addr16
popf
sahf
mov
jo
in
les
out
ret
adc
xchg
repz
mov
mov
cwtl
test
dec
cmp
mov
inc
vsqrtss
dec
outsb
or
mov
subl
xchg
sub
call
mov
mov
xor
out
inc
int
sahf
repnz
je
aas
adc
movsb
inc
push
aam
adc
jnp
mov
mov
pop
sbb
jae
or
inc
in
xlat
bound
push
add
icebp
add
mov
mov
add
leave
push
add
out
sahf
int3
pop
mov
enter
push
mov
xchg
je
imul
and
ds
add
sbb
int
mov
mov
ds
lods
je
cli
and
pop
xchg
mov
ret
add
mov
in
add
mov
out
inc
repnz
dec
xchg
mov
add
pop
scas
cmp
push
stc
enter
insb
cmp
jb
and
shl
pop
into
loope
and
sldt
cmp
and
pop
or
pop
adc
mov
shlb
add
movsb
lret
xlat
mov
add
pop
mov
inc
sub
repnz
push
pop
mov
sbb
pop
sbb
pop
cmc
jmp
loop
dec
xchg
xchg
mov
xor
movsl
or
lret
dec
jns
lea
nop
shrl
and
push
ja
mov
inc
imul
adc
outsl
fidivrs
rcl
dec
ret
je
scas
outsl
jno
ds
sub
pushf
movntps
out
xchg
mov
xor
pop
jmp
loop
cmp
mov
lds
push
add
mov
pop
je
sbb
addr16
pop
push
stc
pop
mov
mov
mov
sub
mov
aad
scas
gs
dec
xor
sti
xor
or
mov
in
xchg
push
dec
jp
sbb
pop
add
cmp
mov
loope
test
insl
test
adc
push
mov
cmp
fwait
ret
sahf
xor
frstor
mov
fstps
lock
fiadds
stc
and
sbb
roll
shrb
divb
xchg
dec
in
out
sbb
shr
push
push
dec
add
ljmp
push
daa
jp
je
std
pushf
push
fbld
sbb
insb
mov
jge
sbb
xchg
mov
test
mov
mov
cmp
mov
mov
inc
adc
jnp
push
int3
insl
or
xchg
insl
ljmp
pop
lahf
dec
scas
test
sub
or
mov
xchg
aam
mov
adc
iret
movsl
in
or
dec
movsl
adc
push
sub
in
sbb
mov
cmpsb
sarl
sahf
mov
add
fsubr
xchg
lds
xchg
or
push
pusha
outsb
push
iret
dec
xor
cli
lods
jne
inc
cmpsl
ljmp
rorl
out
sub
jp
out
popf
jo
jg
cmpsl
loop
enter
pop
scas
xor
xor
add
frstor
outsl
or
or
dec
repnz
out
sub
pop
cltd
cltd
or
lods
inc
push
subb
shl
pop
pop
and
test
push
or
lret
imul
jg
sbb
movsl
movb
pop
xchg
ja,pt
into
call
adc
stc
jno
lcall
or
sbb
sub
sbb
adc
xchg
stos
adcb
imul
push
loop
xor
in
test
push
xchg
ljmp
jnp
mov
pop
pusha
push
scas
inc
mov
sahf
xchg
xor
cmc
or
push
push
iret
cltd
je
cmp
add
push
loop
not
mov
xchg
pop
nop
out
sha1msg1
sahf
fs
pop
sbb
fnstenv
or
dec
subl
in
dec
out
rcrb
push
mov
inc
mov
sbb
idiv
arpl
adc
popf
repz
push
cli
sbb
jns
inc
xchg
push
pop
bound
lods
lret
daa
pop
mov
jne
sbb
sub
xchg
call
outsb
and
sbb
clc
mov
mov
test
les
cmp
xor
outsl
popf
scas
sti
xchg
or
rcll
rclb
outsl
cli
jnp
sahf
and
push
add
jecxz
inc
gs
out
or
mov
add
daa
hlt
ret
mov
cmp
data16
cs
sbb
xchg
push
and
es
movsb
cvtps2pi
jmp
lret
bound
mov
sbb
shl
lcall
rorb
pop
bound
insb
inc
pop
dec
push
push
leave
dec
mov
xor
mov
fstpt
mov
addb
sbb
xor
dec
cmpsb
lahf
insl
or
test
pop
push
stos
sbb
bound
jno
fld
pusha
not
mov
adc
idivb
ss
jle
add
fidivl
lahf
push
dec
scas
mov
sub
push
pop
cld
dec
inc
sub
mov
cmpsl
bound
mov
sbb
aas
jnp
pop
inc
out
mov
push
or
mov
mov
enter
movsl
fidivl
sbb
or
add
mov
and
dec
xor
jp,pn
sub
jge
cmp
loop
in
ror
push
rcr
out
inc
pusha
ret
jnp
imul
dec
sbb
mov
orb
fdivs
add
cmp
xchg
test
scas
lahf
cmp
add
lcall
sahf
inc
xchg
xchg
jnp
fdivrp
push
loop
or
ljmp
movsl
arpl
ret
adc
out
push
push
int3
mov
sti
jge
sbb
stos
mov
testb
stc
lahf
xor
push
das
xchg
js
mov
jge
loop
cmp
adc
lea
xor
sbb
adc
sahf
data16
pop
arpl
mov
daa
iret
jl
inc
inc
xlat
sbb
dec
jae
in
int3
pop
and
cld
arpl
mov
aad
jnp
lock
push
jne
out
mov
iret
jp
mov
pop
or
mov
ja
and
gs
jmp
jle
cmp
ljmp
add
cmpb
inc
add
jnp
mov
ja
jecxz
sub
or
shlb
out
sar
mov
mov
sbb
jp
push
dec
les
mov
jle
into
movl
xor
mov
insb
sub
pop
jg
pop
addl
mov
add
inc
aas
out
mov
pop
and
or
jae
out
ret
and
cmp
jno
lods
frstor
lret
jno
fnstsw
add
pop
sub
mov
sbb
xchg
jno
sub
aas
lahf
xor
jbe
inc
mov
mull
jmp
cmp
and
push
insb
dec
mov
dec
out
jecxz
jecxz
or
pusha
inc
push
pop
adc
mov
sbb
pop
test
les
scas
push
sahf
sbb
push
mov
cmp
mov
imul
add
dec
imul
sub
jo
imul
out
aam
add
aam
jne
jp
test
mov
ror
jbe
lock
xchg
push
jl
repz
mov
xchg
and
out
xchg
inc
ret
fs
cltd
mov
xor
xchg
mov
push
sub
dec
xor
fisttpl
movsb
inc
adc
int3
inc
push
out
sub
mov
sahf
sub
sahf
adc
push
mov
fmull
jno
rolb
les
imul
adc
add
pop
scas
pop
and
divl
push
jg
data16
arpl
sub
popf
adc
mov
add
inc
or
push
adc
adc
sbb
push
dec
in
pop
add
xor
mov
xor
mov
cmp
aad
incb
pop
repz
pop
ja
mov
lahf
psllq
inc
fisttpll
in
aad
xchg
pop
or
imulb
mov
icebp
out
xor
rcl
adc
pop
push
add
ret
cwtl
push
jne
stos
mov
push
outsb
lahf
ds
aam
incl
mov
push
imul
push
sub
adc
pop
or
ja
pushf
or
hlt
cltd
jns
jns
hlt
xchg
pop
rorl
add
sbb
jno
dec
add
push
sub
int3
popa
xor
ja
inc
dec
mov
cli
lahf
push
push
loope
pusha
imul
test
jp
dec
lods
int
mov
xchg
leave
push
fs
adc
or
loop
iretw
xchg
inc
out
in
test
ret
inc
insb
cmp
lahf
and
cmp
cltd
adc
je
loop
adc
jmp
in
mov
push
xchg
push
cs
lock
ds
dec
fnstsw
cmp
stos
lds
sub
sti
lret
push
or
pushf
ds
sub
sti
roll
gs
add
sub
clc
rcll
jle
jb
cmc
ljmp
out
sub
dec
jnp
jmp
or
cmpsb
lods
cmp
cmp
rorl
out
mov
mov
outsb
add
insl
and
aaa
add
add
fistl
or
sbb
mov
or
sbb
xor
xor
and
and
notl
mov
and
outsl
sub
xchg
mov
adc
popa
xchg
dec
pusha
cmc
and
loopne
int3
call
lods
xchg
mov
out
mov
pop
jmp
dec
repz
push
xor
fnsave
ret
stc
lcall
xor
enter
jmp
mov
cmp
adc
sub
inc
ljmp
and
sti
push
shlb
popf
bnd
mov
pop
ret
mov
mulb
fisubl
call
add
aam
fwait
cmp
xchg
add
adc
inc
loop
push
stc
sbb
repz
mov
outsb
shr
das
cmp
push
scas
xlat
das
jns
push
mov
scas
adc
call
xor
and
push
mov
sub
arpl
inc
fildll
mov
aad
ja
sbb
sahf
shl
jg
data16
jl
mov
xor
push
or
pop
ret
push
cmp
ljmp
test
iret
sub
aaa
or
jae
jg
adc
aam
dec
ss
loop
jno
sbbb
jns
push
adc
inc
rclb
loop
aam
dec
fcmovne
cltd
pop
pusha
sbb
js
popf
xor
out
call
jmp
int3
xor
push
insb
adc
adc
xchg
sbb
and
pop
cmpb
adc
int3
push
andb
dec
sti
loope
jnp
shlb
movsb
add
or
xor
mov
loop
notb
ds
lahf
mov
jp
out
aam
insb
and
pusha
std
sti
enter
cli
mov
and
iret
pushl
sbb
adc
adc
mov
fidivrl
jl
ljmp
mov
xor
fldl
call
inc
jno
xchg
xlat
cli
insl
add
aam
adc
cs
in
ret
int3
loopne
imul
daa
inc
jecxz
mov
test
pop
mov
xchg
in
aad
icebp
clc
push
outsl
push
and
mov
mov
out
adc
mov
sahf
into
test
push
repz
mov
pop
and
mov
insl
cmp
mov
loop
cmpb
jp
fistpll
pusha
push
xor
bound
pop
push
cs
nop
cmc
imul
push
adc
xor
mov
pop
cmp
loop
inc
mov
mov
and
adc
cmp
imul
xor
sbb
jmp
mov
jp
inc
mov
jp
sbb
test
jbe
ljmp
mov
push
jp
sbbl
out
mov
ds
cmpsb
adcb
das
cmp
and
cmp
sarb
loop
sti
dec
inc
fsubr
xchg
sbb
mov
cwtl
push
ja
ror
xor
nop
js
imul
or
mov
movsl
dec
into
ror
stc
popf
nop
push
fists
shll
adc
mov
lahf
dec
fidivl
cld
ficoms
shlb
pusha
sbb
clc
sub
cmp
decb
xchg
add
aad
shrl
pusha
in
mov
out
ret
adc
mov
push
fmuls
and
pop
jmp
adcb
cmp
pop
or
sbb
pop
repz
adc
push
inc
ror
add
insb
hlt
adc
adc
shrl
xchg
je
in
dec
in
loop
andl
xlat
push
or
mov
in
or
fidivl
rcll
dec
cmp
and
push
les
lcall
aas
lret
enter
jecxz
and
jnp
inc
cmpl
sbb
add
mov
ja
add
adc
fstps
xchg
jecxz
dec
cmpsb
mov
nop
insl
cmp
test
shl
adc
fscale
pop
adc
popf
push
push
loope
mov
adc
out
test
mov
cmp
adc
sbb
rclb
push
cmp
stos
mov
test
mulb
out
mov
fldt
pushf
xor
filds
adc
out
std
and
int3
addb
xor
pop
iret
xor
test
cmp
cmp
andl
lcall
aad
fnstenv
or
sbb
pushl
in
push
mov
rorb
stc
test
xchg
js
sbb
iret
scas
stc
pmuludq
adc
out
shll
mov
xchg
push
dec
inc
xchg
dec
sub
push
into
icebp
pop
cmpsl
mov
xchg
adc
and
and
aad
lods
es
adcl
aaa
cmc
mov
popa
inc
cmc
rcrb
fmull
add
add
dec
ret
lret
mov
dec
cwtl
cmp
mov
shl
cwtl
je
mov
sub
ss
mov
ja
pavgb
ficoms
and
sub
and
int
mov
push
loop
mov
roll
sub
ja
fcomps
mov
shrb
rclb
jg
cmp
cmp
jmp
loope
incl
inc
push
mov
dec
fadd
jne
push
mov
add
cmpsb
add
cmpsb
sub
std
outsb
or
add
push
arpl
push
adc
cld
leave
cmp
testl
sbb
adc
ret
lock
mov
mov
les
or
mov
arpl
clc
mov
mov
cwtl
mov
jnp
negb
cmp
add
pop
mov
jno
imull
sbb
sbb
mov
and
stc
dec
sbb
insb
iret
pop
lcall
mov
sti
pop
add
sub
test
arpl
or
sub
mov
insl
or
sbb
pop
add
mov
test
fsts
test
imul
dec
mov
shr
lods
xchg
hlt
call
mov
enter
adc
loop
mov
repnz
fs
lock
pop
adc
inc
pop
mov
fstpl
outsb
push
xor
testl
mov
stos
test
sbb
adc
fucomp
and
pop
loopne
or
adc
jl
sub
mov
mov
movswl
adc
mov
movsb
out
mul
dec
cmp
je
xor
jnp
xchg
jne
fstpl
jecxz
cmp
sarl
pop
push
loop
out
hlt
xor
jbe
loopne
jnp
pop
mov
xor
jg
scas
test
jb
mov
lahf
cmp
push
mov
aam
add
int3
xchg
repnz
ja
xor
cltd
xor
fwait
pop
popa
cmp
pop
das
loop
insl
mov
cmovg
popa
iret
pop
sub
int
push
jno
aas
int
mov
inc
push
lea
jne
mov
outsb
or
setp
divb
fcmovbe
dec
gs
nop
jg
test
cmp
jp
sub
and
lcall
mov
pop
jnp
pusha
and
adc
dec
addr16
incl
cmp
shrl
out
push
ret
into
test
mov
xor
testl
aaa
mov
xchg
xchg
int
mov
cmp
dec
lcall
loop
push
add
pop
jnp
mov
int3
sbb
push
bound
push
xor
cmc
mov
or
int
xorb
sub
sub
iret
popa
jecxz
pusha
fcmovb
mov
xor
mov
lock
adc
sub
sub
mov
inc
push
sti
add
aad
hlt
imul
sbb
div
inc
pop
xchg
in
push
aam
cmp
xor
jnp
inc
dec
jg
mov
xchg
sub
das
fwait
sbb
lods
xchg
and
dec
sahf
xchg
sbb
mov
push
adc
mov
pop
inc
shll
out
push
cmpsl
adc
pop
incb
push
xor
insb
add
cmp
sub
out
enter
leave
add
jnp
xor
int3
jnp
push
fadds
loop
xchg
fdivrp
out
sbb
pop
sbb
adc
dec
clc
push
loop
leave
ljmp
and
add
xor
pop
inc
iret
cmpsl
out
fimuls
adc
lret
test
lcall
push
shll
lahf
je
jnp
inc
nop
repz
aaa
jnp
pop
fists
add
and
cwtl
sbb
xor
leave
sub
cmp
or
loop
insb
push
xor
mov
jg
sub
test
or
mov
imul
push
cmpsb
test
add
sti
andl
mov
ficompl
test
mov
inc
nop
adc
mov
sahf
jne
inc
imul
sbb
leave
mov
out
movsb
cmp
sub
xchg
xor
mov
pusha
test
adc
icebp
mov
scas
xchg
inc
push
push
cmp
inc
xchg
in
lahf
cwtl
ds
mov
sti
mov
jnp
pop
sub
aam
jecxz
mov
push
dec
call
cmp
or
lods
pop
push
int
out
negl
lods
mov
je
sub
popf
pop
pop
cmc
loop
imul
notb
pop
insb
loope
fildll
shl
push
loopne
lahf
loop
lret
in
movsb
rcrb
xchg
and
xor
or
jo
mov
ljmp
jg
in
loope
push
dec
out
mov
cs
or
jnp,pn
iretw
fcomps
add
push
sbb
test
or
cmp
fcomi
pop
jp
stos
jns
sti
enter
mov
loope
push
jge
insl
adc
mov
jg
or
xchg
rol
dec
rcll
cmp
jne
mov
pop
jns
push
cmp
ja
pop
loop
cmp
xchg
mov
xchg
and
xor
hlt
or
jns
test
loop
nop
add
nop
dec
add
pop
stos
mov
dec
mov
xchg
into
xchg
mov
ljmp
sub
sbb
inc
aas
cmp
push
and
das
sbb
int
sti
jne
mov
and
cmc
outsl
add
jg
ds
movl
pushf
mov
mov
rcll
sti
int
inc
mov
lret
int3
inc
in
test
ss
inc
adc
jne
lock
popf
outsb
imul
or
cmc
loop
test
cmp
lret
fisttpll
in
lods
std
mov
shll
pop
mov
sub
aam
sub
js
jbe
jge
int3
daa
jnp
dec
adc
sub
or
push
mov
and
sbb
sbb
and
insl
gs
inc
push
dec
daa
cvtps2pi
roll
cmp
cmpb
setbe
add
in
jl
popa
mov
fcomps
outsl
sub
add
push
stc
add
movsb
pop
jle
cmpsl
xor
xchg
mov
pop
loop
jl
lea
enter
pop
or
aam
or
aaa
mov
inc
push
push
iret
lret
jmp
jns
out
xchg
mov
sub
adc
add
loopne
push
ljmp
sub
repnz
xor
sub
mov
negl
popa
insb
inc
aam
sbb
push
xchg
int
jp
pushl
iret
xchg
lcall
in
push
add
movb
and
paddb
xor
jno
rcr
jmp
and
sbb
mov
loop
adc
subl
ret
das
mov
subl
adc
adc
mov
mov
imul
mov
shrl
jbe
push
inc
sti
enter
int3
pop
sbb
test
icebp
push
inc
inc
and
lds
leave
xchg
dec
xor
sbb
aam
ret
mov
dec
cmpsb
and
insl
jno
inc
mov
jno
jne
mov
mov
lock
sahf
fs
pop
push
test
out
sub
outsl
dec
lds
sysenter
sbb
cltd
inc
cmpsb
mov
mov
push
xlat
add
sub
sbb
pushf
or
fildll
lea
aam
je
pop
xor
sbb
jo
lods
jmp
mov
outsl
sbb
lahf
scas
dec
jnp
out
lcall
mov
adc
cmpl
add
jp
mov
rol
xchg
int3
lock
push
adc
sub
xor
jge
push
test
jg
test
ja
mov
pop
fmull
xor
push
out
imul
and
push
outsb
leave
pushl
ficoml
xchg
popa
addr16
inc
popf
push
ss
push
out
jb
das
roll
push
in
cwtl
jl
sbb
sahf
push
push
outsl
add
adc
mov
sbb
mov
and
test
sub
jmp
or
insl
lock
or
lea
call
scas
aam
fs
xchg
or
sub
je
mov
pop
js
sbb
cmp
imul
mov
push
cmpsl
aaa
test
arpl
xchg
enter
adc
shl
xchg
mov
add
xchg
sbb
mov
notl
or
xchg
shrb
sbb
out
int3
adc
and
jmp
scas
mov
pop
dec
test
push
adc
lret
xlat
cmp
mov
push
pop
jbe
shl
add
dec
sbbb
out
scas
out
inc
mov
fistpl
sub
jae
lock
cmp
lcall
jecxz
lret
mov
sub
xor
push
push
jmp
rorb
mov
push
insb
and
mov
int
ja
cmp
lods
dec
in
or
movsl
sbb
ja
test
push
out
and
and
xchg
loop
aas
mov
scas
mov
push
stos
cli
jae
idivl
adc
pop
lds
mov
lods
mov
dec
aad
jmp
or
jae
cld
xchg
or
pusha
repnz
ds
jnp
sub
jns,pt
mov
sar
pop
xor
incl
pop
orl
sub
push
jne
dec
rol
insb
and
push
pop
xor
mov
clc
push
pushf
sti
mov
repz
add
fmuls
xor
cmp
and
push
ret
sub
negl
je
cli
out
push
pop
or
adc
hlt
or
push
or
xchg
mov
jp
jno
mov
aas
scas
in
lea
loop
and
sbb
and
mov
or
dec
xchg
div
xchg
sub
cmp
out
mov
stos
sbbl
fsub
jo
inc
dec
cmp
and
mov
ss
movlps
xchg
pop
xor
mov
ds
sbb
push
mov
push
aad
test
xchg
cmc
outsb
lods
notb
push
cmp
fwait
and
cmp
add
fwait
xchg
lret
fldl
testb
sbb
cmp
hlt
mov
inc
loopne
jp
loopne
pop
inc
testb
nop
dec
scas
dec
push
testb
fstp
test
add
test
int
lods
sbb
jmp
iret
push
fimull
sbb
fxch
mov
push
mov
rcrl
hlt
mov
popa
sahf
xor
add
mov
sbb
sub
cli
inc
dec
in
jmp
push
lock
cld
enter
fwait
movsb
fwait
or
adc
inc
sub
mov
shll
mov
pop
inc
add
push
adc
loop
nop
repnz
push
repz
and
stos
mov
xor
inc
xchg
lret
xchg
add
punpcklbw
lods
out
ss
sub
addl
lret
stos
aam
jp,pt
iret
call
and
int
in
das
pop
movsb
and
sbb
add
mov
jnp
out
imul
push
and
test
push
dec
mov
int
pop
aas
mov
rcll
mov
call
cmp
sub
or
adc
mov
or
and
outsl
sbb
loop
mov
jne
sbb
fcomip
adc
inc
inc
sub
sub
mov
adc
mov
jne
sbb
out
mov
cmp
popf
test
mov
jp
in
sub
cmc
sub
stc
push
je
mov
mov
fbld
xchg
xchg
jne
dec
jecxz
mov
xchg
out
loop
pop
adc
out
ret
js
adc
aad
sbb
jmp
gs
mov
lret
popf
iret
pmaxsw
mov
cmp
jp
mov
add
loop
int
or
push
lea
int
cmp
and
sbb
sarl
lret
imull
pop
add
jb
hlt
mov
push
ss
push
push
sahf
ret
ficompl
ja
psubd
dec
out
gs
push
xor
mov
xchg
shlb
cwtl
lahf
movsb
sub
call
jb
out
stc
loop
cmp
inc
push
fisttpll
in
loopne
sbb
mov
imul
sbb
lods
cmpsl
outsb
add
inc
and
or
iret
scas
lods
sub
push
rcl
je
xor
ret
je
imul
fstpt
jno
call
loop
or
loope
jnp
push
fs
divl
lcall
add
aad
out
lcall
mov
nop
pop
mov
jmp
pop
mov
xor
ja
pop
lret
int3
les
test
mov
orl
test
lea
aas
adc
add
jmp
cmp
test
enter
rcr
xchg
jne
jno
cmc
je
mov
loop
popa
std
pop
push
test
inc
enter
stc
arpl
adc
fimull
push
mov
in
push
pop
mov
xchg
repnz
ds
mov
jg
mov
jns
ds
xchg
cmp
fldt
and
push
ffree
xorl
sbb
data16
sub
inc
mov
lock
ret
jp
or
fmull
mov
inc
sahf
mov
inc
mov
leave
mov
mov
push
and
scas
fdivr
hlt
xor
cld
mov
pop
adc
jmp
xchg
jnp
call
push
fdivr
mov
jl
adc
aas
pop
xchg
dec
sbb
jns
xchg
mov
adc
lea
sbb
and
xchg
and
or
imul
cltd
aam
xchg
in
std
adc
sub
pop
add
repnz
dec
ffreep
aas
jge
adc
sbb
imul
mov
mov
and
jno
jecxz
inc
xor
cmp
adc
aad
daa
dec
movsl
adc
ljmp
or
push
push
add
sarb
cmpsb
int3
dec
xchg
dec
imul
test
cmp
movaps
nop
and
push
cmp
adc
xlat
dec
call
loop
daa
int
adc
ds
call
xor
add
cmp
push
sbb
add
das
add
push
in
int3
sbb
jno
adc
dec
out
adc
mov
in
frstor
jnp
aas
jo
mov
add
stc
add
fwait
sti
test
je
add
push
pop
add
int
cmp
push
mov
adcl
cmpsl
pop
add
cltd
imul
pop
fadd
add
push
pop
mov
lret
scas
pushl
mov
push
sahf
fsts
ds
push
push
incl
adc
or
cmp
mov
pop
test
js
xor
ret
or
cld
add
mov
mov
cs
or
cmp
xchg
mov
adc
pop
adc
ds
fsubrs
mov
fildl
mov
sub
push
or
test
pusha
in
sub
sbb
ds
fcoml
cmp
or
mov
out
fsub
dec
cld
data16
fcoml
add
jmp
mov
mov
xor
push
in
sbb
sbb
and
lret
push
sbb
decl
icebp
adc
sti
mov
add
jg
mov
adc
xchg
cmp
rolb
sbb
inc
pop
or
mov
dec
cmp
dec
pop
pop
call
pop
xchg
test
inc
dec
add
xchg
push
cld
jecxz
bound
or
jp
aad
and
jae
jmp
pop
push
jmp
test
fisttps
repnz
mov
pop
adc
shrl
movsb
sub
out
inc
xchg
pop
jp
sbb
imul
ja
lea
lret
sub
mov
fists
pop
inc
adc
in
add
ss
xchg
daa
dec
in
and
mov
push
cltd
dec
add
sub
sahf
adc
cmp
lods
jo
mov
adc
add
mov
and
repz
insb
cwtl
push
pop
insb
movsb
sbb
imul
loop
callw
adc
sahf
push
out
popf
and
imul
sub
and
xchg
leave
dec
loop
push
fists
repz
les
sti
aaa
xchg
sub
std
lahf
dec
lret
sub
push
pop
ficoml
jl
adc
xor
inc
pop
mov
fsts
xlat
ds
leave
sbb
push
jle
popa
dec
xchg
inc
lds
fisubl
add
jb
push
cmp
lret
in
pop
push
aas
out
addr16
repnz
xchg
add
cwtl
sbb
test
sub
inc
jp
sub
repnz
les
je
xchg
push
mov
out
mov
or
lcall
fwait
test
fmuls
idivl
cli
cmp
mov
imul
fldl
jp
imul
loop
enter
cmc
loopne
int
cmp
cmp
or
dec
in
or
in
pop
pop
imul
inc
dec
outsl
mov
sub
js
mov
mov
roll
repz
data16
dec
mov
dec
sarl
mov
mov
out
insl
push
mov
fisttpll
rclb
hlt
loop
cmp
pop
imul
popf
fstl
cltd
sbb
mov
cmpsb
and
je
mov
lcall
sub
jo
xor
test
xchg
and
sub
cmp
add
adc
outsl
inc
mov
add
mov
shll
movsl
and
pandn
stos
stos
inc
mov
out
xor
xor
cmp
push
inc
dec
sub
mov
xchg
sub
in
enter
mov
rorl
push
push
fcomp
lret
scas
inc
outsl
stos
cmp
sub
stos
and
pop
jle
lcall
ret
inc
aas
aas
sbb
fnsave
pop
and
xor
sti
out
ja
pusha
jge
shrl
dec
push
insb
icebp
jb
push
cmc
scas
push
pop
adcl
adc
xor
fwait
inc
inc
out
sbb
adcb
jle
or
stos
out
pop
scas
xchg
bound
sub
ret
je
pop
fdiv
push
sarl
outsl
mov
orl
incb
icebp
testl
test
xchg
inc
divb
test
js
pop
int
ss
xchg
or
and
test
jp
cwtl
inc
loopne
inc
push
or
xchg
xchg
or
test
sbb
xor
inc
into
jg
add
enter
xchg
cmp
push
movsb
or
lds
inc
add
sahf
decb
bound
xchg
adc
and
lahf
jae
inc
xor
cmpsl
lods
add
xchg
std
sbb
dec
fsub
jbe
push
and
lahf
mov
in
stos
add
fs
push
roll
gs
xor
jnp
inc
sub
xlat
enter
sbb
mov
insl
sbb
out
dec
xchg
pushl
pop
dec
mov
inc
mov
add
push
push
cmp
mov
lret
icebp
shll
xor
mov
and
inc
mov
sahf
in
dec
cwtl
pop
in
pop
jmp
xchg
and
repnz
or
fs
loop
and
push
rolb
mov
xor
pop
push
mov
dec
jmp
push
dec
mov
lret
test
and
and
adc
shr
adc
xor
inc
sbb
adc
pop
jnp
adc
mov
fnstenv
aam
fistpl
sti
in
addr16
mov
xor
push
repnz
pop
pop
cs
sub
add
daa
addr16
jnp
pop
aam
sbb
sarl
loop
out
mov
mov
cmp
jne
inc
cmpsl
cmpsb
pop
js
pusha
inc
inc
inc
aad
xchg
push
fcom
sub
in
dec
add
mov
sbb
xor
inc
and
ror
aaa
scas
dec
jae
xchg
push
pop
mov
xorl
stos
std
out
xor
popa
jbe
rcrb
push
cmp
in
cmc
lcall
popa
fwait
adc
adc
pop
cltd
ss
pushf
out
cmp
mov
stos
sub
js
stos
dec
mov
addb
pop
mov
jg
pop
mov
sbb
mov
aad
aas
push
aaa
mov
popf
shl
imul
jmp
and
call
xor
pop
jp
xchg
cmp
push
aaa
popf
or
pop
scas
ss
addb
xor
ss
mov
mov
cmp
pop
or
adc
xchg
xor
rcr
lahf
and
and
iret
cmp
pushf
insb
push
pop
cld
mov
bnd
arpl
xorl
divb
xor
mov
cwtl
adc
test
jecxz
jecxz
iret
mov
add
rcll
out
push
sub
shrl
test
lock
loop
aas
jle
sub
or
mov
sbb
push
push
sub
aam
jns
gs
pop
pop
ds
fsubrs
cmc
subl
out
cmp
push
rcll
cmp
or
pop
jle
inc
dec
adc
loope
test
testb
cld
mov
jne
stc
adc
das
mov
je
cmp
sub
loope
pop
xor
pcmpeqd
aad
incb
loop
call
xor
adc
jmp
jnp
shl
aam
cwtl
inc
xchg
and
shl
test
push
outsb
sbb
jnp
out
xchg
mov
mov
and
addr16
adc
ljmp
mov
lret
mov
pushf
imul
lahf
mov
fisttps
xchg
mov
dec
loopne
lock
inc
ja
xchg
adc
leave
xchg
bound
test
imul
aas
cmp
setle
test
lcall
jb
loop
or
fiaddl
fstps
dec
icebp
pop
and
scas
cltd
push
jg
fld
outsl
xor
adc
repz
mov
mov
pop
mov
mov
cmc
mov
adc
aam
sbb
push
cwtl
jp
mov
loopne
push
mov
add
test
mov
fdivrp
xor
test
loop
mov
mov
adc
jbe
out
or
add
repnz
test
cmpsb
idiv
shrl
pop
fldenv
mov
andb
lcall
pop
rcrb
adc
add
inc
mov
xchg
cmp
aam
push
or
push
cmpsb
dec
xchg
adc
or
lea
pusha
xchg
xchg
fstp
imul
inc
insb
mov
or
inc
aas
xchg
or
jg
fidivs
insl
lock
adc
insl
div
jnp
mov
adc
pop
cmp
in
rcll
jp
loop
sbbl
int
leave
cld
sti
ja
jnp
xor
je
ffree
mov
jnp
xchg
push
push
dec
or
ss
test
cs
sbb
xchg
xchg
push
iret
lea
push
lahf
ret
sub
add
mov
inc
ret
test
inc
xor
or
cmp
aad
inc
in
fs
aas
lret
fldpi
das
imul
fbld
insl
or
mov
add
jne
arpl
fadds
sbb
fwait
cmpsb
mov
adc
aam
pop
pop
call
xor
adc
pop
dec
fcmovnb
add
pop
rcrl
xchg
push
mov
fucom
pop
xchg
lret
xchg
cmp
xchg
sarl
dec
not
dec
xor
or
stos
jo
and
dec
add
fucom
popa
xchg
ja
adc
sub
fnstenv
mov
stos
lea
xlat
adc
or
subb
loop
add
sub
sbb
xor
pop
subl
insb
lahf
and
jne
cmp
sbb
lcall
cmp
int3
outsl
imul
roll
adc
push
xor
lahf
xchg
push
push
mov
push
xor
addr16
mov
fdivrs
mov
imul
jmp
push
push
dec
add
outsb
dec
in
mov
push
and
mov
testb
iret
shll
int3
int
xchg
sub
movsb
shl
subb
cmp
mov
icebp
cwtl
adc
dec
add
std
mov
adc
xor
int
iret
movsl
and
loop
bound
mov
dec
push
jbe
add
clc
xchg
push
ficompl
xchg
leave
add
lea
ret
xchg
inc
lcall
mov
les
xchg
xchg
jnp
mov
ljmp
lret
dec
mov
mov
mov
inc
movsl
xor
cmp
and
push
xchg
sub
iret
adc
mov
cmpsl
fsts
push
cmp
adc
dec
pop
sub
in
cmp
stos
inc
shl
jno
mov
push
adc
adc
pusha
push
test
mov
sarb
adc
cmp
mov
push
sub
cs
icebp
xchg
popf
aas
jo
fcmove
push
popa
jnp
ss
addb
and
mov
adc
test
xor
cmp
adc
cmp
aad
ljmp
add
test
push
mov
adc
sub
scas
loop
jbe
jno
and
aad
add
mov
mov
popa
mov
mov
push
mov
cltd
cld
mov
dec
in
pop
pop
xor
push
xchg
inc
stos
jl
or
test
das
lds
aas
jbe
sbb
lods
mov
inc
enter
mov
out
mov
cltd
fsubs
out
sbb
fldl
add
sbb
pop
adc
ljmp
add
repz
lods
fs
xorl
and
ret
pop
lods
adc
outsl
dec
mov
mov
adc
and
imul
pop
inc
adc
dec
cmpsl
and
dec
add
outsb
cltd
jne
ret
push
xor
enter
nop
pop
or
push
shll
jle
fnstcw
push
std
cmpsb
push
out
mov
xchg
subb
pop
es
notl
out
jle
adc
dec
mov
sbb
test
xor
imul
jmp
xchg
pop
aad
test
inc
lahf
in
roll
lds
rcrl
aas
js
xlat
mov
imul
cmc
sbb
test
add
js
jns
test
sbb
sub
cld
push
insl
loope
cmp
andb
stc
pop
push
mov
addl
push
xchg
add
xor
call
xchg
aam
or
add
out
sub
out
jg
mov
cli
ljmp
dec
call
popf
mov
test
inc
ja
std
fwait
cmp
subb
shl
add
fwait
stos
lods
pushl
mov
ljmp
add
xchg
lret
ja
test
xchg
push
push
ror
cmp
mov
cs
fnstsw
std
push
push
cmp
sub
je
push
pushw
mov
shrb
das
pop
dec
sbb
or
pusha
or
pop
push
inc
in
addr16
pop
mov
add
pop
lret
add
push
lods
loop
push
push
mov
dec
cmpb
out
mov
es
push
or
fistps
call
nop
adc
into
xchg
mov
xor
roll
sbb
imull
or
sub
lahf
fisubl
les
sbb
fstl
and
loopne
push
pop
pusha
pop
outsl
cmp
mov
ss
jmp
data16
out
cmp
lahf
cmp
ds
add
ljmp
jbe
inc
test
out
movsl
xor
sti
jge
lods
pop
and
add
cmc
inc
leave
mov
push
push
xchg
mov
movsl
fsubrs
pop
insl
fidivl
or
or
rcrb
sbb
cs
clc
xor
rclb
cmp
xorb
xorb
rcll
xor
xor
popa
lods
sbb
sarb
add
mov
xchg
or
and
push
sub
mov
adc
and
or
inc
mov
call
loop
pop
xchg
sti
js
outsb
push
inc
popf
sbb
pop
adc
or
jp
mov
or
add
addb
push
adc
pop
rol
fdivs
popa
mov
cltd
inc
test
adc
hlt
stos
push
cmp
sbb
dec
jp
incl
out
out
loop
in
xchg
add
pop
mov
add
xor
push
out
je
jnp
adc
add
cmp
adc
cmp
mull
cmc
lcall
inc
jbe
lods
out
sbb
outsl
xchg
aas
fs
cmp
ja
pop
sbb
add
setb
aad
fisubs
sub
pop
addr16
fldenv
or
mov
das
fucomi
adc
in
sub
inc
outsw
add
xor
xor
shl
fstp
xchg
dec
aaa
lcall
or
lahf
movsb
jecxz
mov
aad
cmp
adc
cmc
add
adc
sbb
outsl
pop
xchg
pushf
xor
ret
mov
mov
cs
jp
sbb
out
mov
test
aas
mov
fmuls
xchg
les
sahf
push
sub
test
loop
into
dec
popa
or
sub
jp
stc
sbb
lock
leave
imul
in
iret
inc
mov
neg
pop
imul
cmp
xlat
call
out
in
mov
hlt
jne
adc
rclb
lds
lret
scas
and
pop
shrb
into
jmp
sbb
push
mov
enter
push
add
adc
inc
loope
fisubrl
outsb
pop
lcall
push
mov
dec
mov
adc
stos
popf
mov
inc
and
outsl
js
fisubrs
ret
shrb
stos
cltd
jno
ss
and
outsb
push
sti
cmp
out
sbb
sbb
ret
or
stos
cs
and
mov
jg
js
or
xlat
fnstsw
add
mov
jns
sub
sub
cli
adc
outsb
imul
xchg
or
jge
add
push
xor
adc
out
pop
adc
adc
in
cmpsl
sbb
add
jbe
jnp
jo
or
push
xchg
xor
inc
lds
mov
je
loop
pop
and
movsb
add
push
rclb
loop
insl
push
fcoml
cmp
push
adc
push
bound
cmc
daa
sub
iret
jne
in
lock
test
stc
fstpt
mov
adc
xchg
rorl
adc
jmp
fistps
xchg
jmp
cltd
mov
push
outsb
and
movl
out
mov
adc
xor
lret
xchg
push
xchg
adc
jbe
je
dec
cmp
ficomps
leave
sub
test
incb
lret
cmp
xchg
cmp
sbbb
in
and
lret
loope
xchg
adc
fidivs
decl
cmp
arpl
adcl
mov
mov
loop
pop
inc
fwait
outsl
outsb
push
cli
jge
xchg
jl
out
pop
leave
inc
sbb
jg
dec
pop
mov
cmp
mov
mov
mov
add
loopne
out
add
lcall
and
roll
xchg
adc
loop
fmull
add
rcrl
jle
pushf
in
cli
pop
and
stos
loop
push
push
adc
lret
js
push
insl
mov
outsb
mov
int
sbb
adc
in
dec
jbe
scas
scas
add
pusha
dec
outsb
mov
xchg
add
dec
sbb
stc
jno
adc
movsb
push
cltd
or
and
add
dec
add
mov
test
aad
push
and
insb
push
ficompl
jne
ror
xor
push
push
cmp
push
movsl
fimuls
sahf
xchg
inc
mov
push
or
mov
lcall
mov
loop
mov
add
mov
fwait
jae
ljmp
add
xor
xor
xor
aam
push
mov
and
xchg
scas
in
and
ret
push
mov
fidivs
add
jnp
cmp
pop
mov
sti
leave
inc
mov
or
stos
xor
sub
and
mov
mov
fstl
movsb
outsb
in
mov
pop
mov
jo
ret
cmpsb
or
daa
test
add
aaa
sti
mov
call
push
aas
push
stos
push
fstl
lods
mov
out
andb
mov
mov
push
mov
mov
push
cld
out
std
push
iret
push
adc
pop
popa
push
icebp
aam
or
mov
lret
sbb
push
test
jns
mov
lret
cli
lds
int3
jg
cmp
pop
mov
adc
add
and
test
mov
push
scas
imul
cs
mov
fcompl
dec
movsb
test
mov
in
lret
sbb
mov
negl
lea
jb
negl
ret
mov
popf
and
adc
aas
fidivs
hlt
out
push
fs
adc
xchg
xor
pop
xchg
ret
mov
fcmove
stos
cmp
sub
std
xor
jecxz
or
aam
push
bound
and
or
jno
jae
sub
inc
xor
ss
or
dec
je
add
cmp
xor
adc
pop
movsb
add
cmp
call
cmp
dec
fists
and
pop
jle
sub
int
mov
cmp
or
in
xorb
add
mov
pop
cmp
push
ud2
dec
scas
sbb
push
repnz
fisttpl
sub
jno
cmp
call
push
mov
sub
or
mov
jae
and
jo
cmp
xchg
sbb
or
popf
int
sbb
int
cmpsl
movsl
xchg
call
call
roll
cltd
mov
fwait
testb
adc
imul
dec
iret
mov
cmc
push
pop
mov
xor
jmp
stos
pop
loop
in
cmp
dec
jmp
insl
cltd
inc
imul
test
insl
sbb
mov
xor
das
daa
cmpsl
shll
shrl
fcomip
jns
push
sbb
pop
aam
and
popa
push
or
nop
loopne
add
leave
xchg
mov
gs
push
enter
pop
arpl
in
pop
inc
xor
push
xchg
sbb
jmp
out
inc
hlt
xor
mov
out
push
or
paddd
ret
pusha
or
or
fiadds
xchg
mov
dec
sbb
or
cmc
icebp
roll
jmp
cmp
dec
jg
pop
or
jne
ds
sub
xchg
sub
xor
mov
mov
jno
push
or
pop
add
push
push
int
dec
leave
lds
adc
lcall
arpl
loop
mov
mov
adc
icebp
mov
ret
int
or
jmp
inc
movsl
and
jae
decb
loop
xchg
in
int
aam
hlt
jge
test
mov
mov
or
or
punpckhwd
inc
loop
sub
mov
mov
sbb
add
sbb
ja
and
inc
sub
pop
pushf
jg
mov
push
jbe
jecxz
xchg
sbb
cli
mov
xchg
stos
mov
ss
aad
insl
rcrb
cmc
adc
or
fldcw
sbb
dec
xor
icebp
push
sets
jmp
lods
or
pop
mov
adc
mov
sahf
das
add
scas
dec
daa
sub
xchg
adc
lcall
sub
lret
mov
mov
mov
adc
add
imul
inc
sub
sbb
jg
jg
je
adc
dec
inc
mov
test
mov
sub
adc
or
ret
fwait
mov
cmpsl
cli
sbb
mov
andb
aam
test
or
leave
inc
xor
jl
add
jo
cmp
push
jnp
add
adc
xchg
pop
fdivrp
int
enter
cltd
pop
sbbl
test
arpl
add
mov
ficoms
push
cmp
test
in
add
sub
push
cmp
shrb
inc
mov
idiv
push
xor
jecxz
push
aad
dec
cmp
aad
insl
mov
xchg
xchg
mov
psrad
add
mov
push
inc
jg
mov
jge
jl
jnp
and
fidivrl
inc
jnp
pushf
adcb
in
push
bound
stc
test
mov
ret
inc
inc
leave
ret
push
push
mov
xchg
lea
fwait
push
xchg
mov
mov
push
push
pop
jle
shrb
loop
or
imul
shll
mov
sbb
ret
push
xor
pop
pusha
frstor
dec
mov
rclb
xchg
add
inc
fldenv
add
imul
push
imul
add
and
sbb
inc
sub
jno
push
je
je
xor
shll
mov
or
xchg
jno
stc
test
fisubrl
sbb
repz
and
out
push
faddl
jbe
jae
sub
pusha
dec
mov
and
fists
lock
push
data16
sahf
pop
mov
pusha
test
mov
imul
cwtl
lret
in
shl
rclb
xor
xor
xchg
and
add
test
cmp
fcmovbe
cs
outsb
out
out
mov
cli
sub
xchg
pop
or
mov
stos
xchg
fimuls
jnp
cmpsb
fld
loope
dec
out
jg
add
xor
imul
cli
jmp
insb
pop
adc
add
xchg
hlt
xchg
jl
add
pop
shll
and
call
out
add
pop
rol
jne
leave
sub
lods
cmpsl
cmp
frstor
push
pusha
inc
add
dec
fmuls
insl
arpl
add
cmp
xchg
adc
inc
xor
sbb
mov
mov
or
mov
add
lods
mov
jno
push
daa
add
lods
orl
loopne
je
cmpsb
xchg
push
cmp
addr16
daa
jno
lahf
dec
pop
loop
dec
stc
xor
mov
sbb
push
int
adc
dec
int3
test
movsl
jo
loope
adc
adc
dec
jne
adc
insb
mov
arpl
in
rcr
lret
dec
enter
cmp
add
scas
aad
ljmp
or
cmp
mov
push
out
fsub
paddd
fistpl
testl
xchg
cmp
or
or
movsl
mov
sbb
out
mov
jp
mov
leave
jns
gs
fsubrs
ja
test
icebp
cmc
dec
and
mov
push
push
in
rcll
out
out
xchg
stc
sbb
std
cmp
add
repz
out
and
loop
mov
loopne
sbb
push
jmp
loop
je
pop
ficomps
sbb
outsl
dec
sti
mov
in
adcb
out
sub
jo
loop
xor
in
movsl
fcoms
pop
push
fwait
xor
lret
sbb
pop
je
es
fistl
sub
jnp
mov
mov
inc
cmp
subb
dec
jbe
push
out
cmp
cmp
jmp
out
fisubs
iret
push
repz
pop
ja
pop
xchg
or
cmpsb
cmc
sub
mov
bound
stos
sbb
ss
sub
out
adc
adc
inc
sub
inc
outsb
imul
pop
int3
adc
pop
or
cwtl
ss
dec
fwait
sti
fdivl
jbe
dec
fildl
dec
jecxz
push
add
adc
aam
pop
jne
jmp
inc
push
enter
xchg
mov
cmp
mov
jg
js
in
and
sti
in
ficompl
dec
mov
adc
orb
cmp
push
fistpll
cmp
cs
adc
loope
sti
add
lahf
daa
loopw
or
mov
dec
xor
out
inc
int3
pop
sbb
cs
rolb
punpcklbw
xchg
or
ds
jg
enter
fldenv
add
pop
cmp
loop
or
int3
addr16
mov
cltd
jns
rcrb
aam
push
arpl
and
cmp
or
fcomps
mov
lcall
leave
push
popf
lret
sub
mov
and
out
out
testb
ljmp
imul
sbbb
test
cld
negb
sub
mov
int3
dec
aam
jecxz
xor
rcrb
adc
pop
push
pop
and
mov
lds
adc
insl
add
inc
mov
sbb
pop
mov
push
decl
inc
mov
bound
pop
dec
aad
cmp
xchg
add
outsl
xchg
enter
imulb
mov
dec
xlat
stos
add
xchg
arpl
dec
inc
push
push
pop
fucomp
mov
loop
repnz
std
and
or
inc
jo
sub
sbb
cld
cmp
mov
xor
insb
mov
rcl
mov
insb
pop
or
and
pop
mov
leave
jb
adc
and
sbb
add
lock
loope
hlt
iret
mov
xchg
jge
sbb
sbb
or
xchg
or
push
sub
adc
pop
inc
lahf
adc
aas
or
rcll
fwait
adc
mov
cmp
or
mov
fidivrs
adc
inc
jnp
inc
push
pop
shlb
mov
fs
int
pop
cmp
mov
enter
fnstsw
ljmp
cmp
xor
test
sub
movsl
scas
lcall
lcall
retw
xchg
xlat
subl
cmp
pop
mov
pop
jns
xchg
sbb
cmp
std
leave
add
cltd
aam
nop
lahf
in
inc
repz
leave
in
fldl
xchg
fsubl
inc
sbb
stos
int3
sti
fstl
xor
loopne
pop
addl
loopne
sub
adc
sub
dec
add
fists
lea
mov
sbb
or
push
es
in
addb
loope
dec
cmp
aad
jbe
sbb
cmp
push
mov
sub
int
bswap
fdivrs
sbb
mov
cltd
loopne
imul
add
mov
xorl
das
out
cld
jo
push
out
mov
adc
std
shr
xchg
and
mov
dec
jg
push
or
lods
mov
add
out
xchg
push
out
pop
push
pop
xchg
adc
dec
aam
inc
stos
sbb
lcall
rcrl
cmc
loopne
or
call
and
push
adc
adcb
mov
mov
test
lcall
add
icebp
adc
push
fwait
mul
ret
pushf
pop
push
push
scas
fdivr
jo
out
add
lods
dec
adc
mov
popa
sbb
js
xchg
sub
loope
aaa
cmc
jne
or
addb
sub
fists
xchg
adc
or
or
mov
cmp
sbb
and
sub
xchg
std
jo
push
add
inc
aaa
lahf
xchg
xchg
hlt
aam
fimull
lds
push
xor
roll
insl
mov
flds
xor
cmpsb
push
xor
aaa
mov
jp
mov
lret
inc
in
cmp
cltd
xor
inc
dec
jg
mov
sub
pop
loope
push
mov
leave
xorl
mov
int3
repz
add
add
push
adc
push
adc
xchg
adc
fistpl
dec
push
loopne
push
push
in
inc
nop
repz
enter
and
pop
cmovns
mov
jl
sahf
mov
arpl
orl
ja
aas
loop
adc
xor
dec
sub
cmp
cld
rolb
in
into
incl
mov
dec
lds
sbb
mov
pop
ljmp
mov
sahf
rol
xchg
adc
xchg
or
insb
aam
pop
loop
loopne
sub
loop
je
pop
and
sbb
fcomp
add
push
test
push
jge
push
scas
or
push
or
jnp
mov
cld
pop
pop
add
sbb
mov
sbb
push
dec
mov
mov
dec
mov
add
insb
push
mov
mov
mov
addr16
mov
sbb
dec
adcb
mov
int
hlt
mov
jo
xchg
cmpsb
lahf
inc
jl
aas
cmp
flds
adc
int
aad
sub
cmp
inc
outsb
in
jne
jo
fadds
dec
popf
and
xchg
pop
jg
pop
mov
or
jo
inc
call
dec
aaa
fdiv
mov
aad
adc
adc
xor
lods
andl
push
out
mov
push
add
inc
xor
sub
mov
dec
sahf
or
xor
in
or
daa
dec
outsl
decb
sub
ret
pusha
sub
mov
push
pusha
ret
push
push
loopne
xchg
lahf
loope
and
imul
or
aad
fsubr
jg
push
dec
mov
dec
rolb
cmp
xchg
scas
into
das
pop
loop
mov
sti
dec
lcall
out
push
cmp
push
adc
adc
andl
loope
xchg
dec
push
addb
std
mov
popa
ja
and
cli
and
es
adc
and
aaa
xchg
pop
jge
cmc
movsb
fwait
popf
movsb
decb
subl
int
out
insl
fldcw
test
sub
and
mov
loop
out
xor
ljmp
nop
xchg
loopne
xchg
lcall
jns
sbb
or
les
adc
mov
add
xchg
push
cmpsb
xchg
sub
outsb
dec
fiadds
jg
pushf
jecxz
clc
mov
and
ss
push
inc
lretw
cmp
sub
fnstsw
xorb
mov
push
out
push
and
stc
into
je
mov
mov
mov
sbb
ds
fidivl
and
add
fcompl
jmp
lods
lahf
stos
adc
adc
jno
sbb
xchg
xor
mov
pop
bound
mov
cmp
cwtl
out
rorb
adc
test
pop
aam
sbb
xchg
dec
fwait
inc
jle
shlb
imul
movsb
fst
mov
in
fcoms
out
adc
pop
inc
inc
mov
mov
add
loopne
cmp
imul
push
inc
clc
dec
mov
lahf
add
xor
mov
inc
xchg
sub
int
adc
insb
pop
mov
shll
xchg
add
adc
push
push
mov
out
insl
js
sub
push
sbb
punpckldq
or
arpl
xchg
aam
xchg
sbb
rcl
inc
cli
hlt
xchg
sub
in
adc
cmp
fwait
push
jo
dec
out
and
xor
dec
ud1
add
sub
sub
mov
aaa
jg
js
jmp
add
sbb
leave
xchg
jp
inc
mov
shrd
xchg
loop
adc
jno
mov
add
fisttpl
lds
call
cmc
lods
sub
icebp
sahf
cmp
push
out
jl
and
push
arpl
cltd
adc
popa
cli
adc
add
scas
and
iret
push
cmc
mov
add
push
push
test
push
mov
fcmovu
pop
inc
push
or
fwait
xchg
sti
stos
push
push
xor
hlt
ds
pop
push
out
cmp
mov
xor
imul
pop
cmpsl
mov
int3
push
inc
int
loop
mov
xchg
sbb
mull
cmp
out
jp
hlt
lods
imul
sbb
test
xchg
test
xchg
cmc
sbb
adc
jp
popf
add
sbb
sub
add
call
mov
iret
mov
push
enter
xlat
arpl
out
pop
loope
mov
outsb
dec
cmpsl
sbb
data16
iret
xchg
jns
sbb
and
sbb
repnz
cmpb
xor
in
cs
jl
or
out
cmc
xor
mov
adc
leave
cmp
je
mov
fs
aaa
jle
push
mov
arpl
in
pop
mov
lret
inc
push
loop
inc
sbb
xchg
movsb
adc
inc
mov
jnp
fwait
pop
and
test
mov
out
xor
in
popf
sub
lods
push
jg
pop
sub
rcl
sbb
stos
adc
scas
push
test
hlt
mov
test
adc
pop
pop
pop
popf
mov
push
sub
es
sub
xchg
unpcklps
sub
jmp
xor
pop
or
loop
and
pop
dec
mov
enter
pusha
fadds
xor
jb
out
outsb
or
jmp
sahf
or
cltd
cmc
aad
adc
adc
test
pop
jo
insb
xor
push
mov
push
push
mov
sub
add
inc
pop
mov
adc
adc
cli
in
std
pop
stc
push
pop
mov
lret
push
cld
add
stos
in
into
inc
jmp
les
mov
dec
dec
sub
xchg
in
inc
in
add
jno
push
scas
stos
adc
cmp
sbb
push
adc
frstor
xlat
xchg
mov
xchg
je
xchg
flds
sub
push
ja
loop
loop
out
add
pop
mov
cmp
jo
out
xor
jnp
mov
loop
push
mov
adc
leave
cmp
xchg
scas
ds
sub
jnp
loop
aam
mov
push
push
movsl
add
adc
cwtl
lret
mov
mov
xchg
movsl
adc
jno
pop
mov
or
jg
sbb
mov
xor
pushf
inc
sub
leave
cs
jne
imul
mov
enter
jle
xchg
and
add
or
mov
adc
int3
sbb
push
insb
push
mov
and
sbbl
jecxz
sub
lret
sbb
lcall
mov
add
mov
dec
adc
inc
lods
sub
in
jne
pushf
es
pusha
push
lods
loop
das
sbb
cmc
fstl
movsl
aad
adc
mov
push
test
sub
icebp
bound
xor
out
or
xor
lahf
inc
sbb
das
xor
jp
mov
in
cmp
dec
insb
inc
jge
jae
pmulhw
xchg
cmc
xchg
sub
imulb
xor
ss
fbld
fwait
iret
out
sbb
cwtl
add
push
jno
icebp
loop
and
subb
sbb
roll
mov
add
dec
in
sub
lods
cmp
mov
mov
sbb
mov
xor
je
add
pop
xor
adc
xor
cld
jb
fsubs
adc
cli
lcall
loop
cmpsl
jbe
mov
popa
add
push
int
inc
and
loop
andb
nop
xor
xor
gs
lret
jnp
gs
out
mov
repnz
les
ds
cmpsl
mov
aad
cmp
xchg
xlat
fisubrs
loop
mov
movsl
int
inc
add
pop
push
or
bound
pop
repz
faddl
ret
sub
fnsave
cmp
xor
sub
arpl
push
jmp
out
enter
loopne
pop
sbb
jp
aas
xor
icebp
push
pop
enter
in
cmpsb
jns
pop
pop
jns
push
add
mov
jno
inc
cltd
and
cmp
adcb
cli
mov
cmpsl
dec
fistl
ljmp
xor
aad
ret
push
imul
imul
ljmp
enter
mov
lds
sbb
xchg
mov
fildll
andl
ret
loopne
sbb
jo
rclb
pop
jecxz
xchg
imul
cmpsl
fmuls
iret
xor
fcmovnb
pop
je
js
in
mov
xlat
imul
mov
xchg
outsl
xchg
loope
mov
iret
insl
push
shlb
sub
xchg
lods
ret
dec
jp
jnp
inc
orb
sub
lea
or
in
fisubrs
outsb
bnd
jmp
push
sbb
fcomip
fcoml
rclb
xchg
push
push
mov
aas
jnp
add
popf
arpl
add
out
add
dec
je
insb
adc
rclb
sti
cmpsl
shr
andb
cltd
xchg
sub
cwtl
insl
sbb
leave
ret
add
mov
imul
shrb
mov
gs
test
das
cmc
adc
dec
shll
insl
filds
iret
mov
rclb
adc
loope
dec
xor
mov
adc
test
and
aam
incb
or
mov
test
xor
stc
dec
fisttpll
stos
xor
push
jmp
cmp
jle
inc
jno
iret
loop
xchg
sub
imul
sahf
dec
jo
or
ret
adcl
insb
or
inc
mov
add
call
push
cmp
adc
idiv
sahf
loop
das
push
jae
and
add
and
push
xchg
shl
out
aam
push
xchg
jae
xor
mov
dec
pop
dec
xchg
mov
bts
jnp
notl
ja
or
mov
loopne
sbb
lea
leave
andb
rolb
andb
imul
push
push
leave
mov
inc
adc
adc
call
push
jle
test
int
sbb
sub
jae
mov
mov
les
faddl
sahf
movsb
lcall
je
aas
test
mov
in
adc
xchg
ja
push
add
add
adc
outsl
test
loop
and
lds
repz
ret
add
enter
in
loopne
xor
je
adc
mov
test
push
popa
ljmp
nopl
dec
xchg
mov
mov
dec
out
jae
adc
mov
xchg
xor
outsb
out
insb
pusha
fbld
jg
aam
pop
dec
sub
add
dec
sub
in
adc
pop
sbb
in
mov
mov
popa
icebp
negl
mov
push
cmp
jne
adc
xor
into
xchg
in
loop
jp
sarb
cld
xchg
add
jl
push
xor
sahf
dec
pop
dec
lret
push
arpl
iret
sti
adc
lcall
mov
int3
xor
push
imul
inc
dec
jg
push
push
xchg
or
outsb
pop
mov
mov
cwtl
dec
je
and
popa
add
xchg
in
adc
lahf
pop
cmc
je
fadd
test
and
mov
push
test
sub
fldcw
adc
pop
loop
lret
seto
or
shrl
inc
out
in
fsubrs
aam
push
ss
cmp
push
xchg
fists
inc
lcall
cltd
xor
pop
imul
scas
jo
xchg
sub
jg
adc
mov
sbb
sbb
cmp
cmc
out
mov
push
inc
cwtl
add
xchg
adc
dec
lret
pushf
rcl
push
add
or
lahf
and
push
push
fdivs
add
push
push
clc
mov
loop
int
jns
xor
cmpsb
sub
mov
or
and
jb
ret
insb
ret
cmp
jge
pop
xchg
shl
push
push
inc
or
out
out
icebp
and
push
add
data16
push
pop
mov
push
aad
bound
loop
jno
fidivl
jb
sbb
dec
jb
mov
xchg
jp
ret
rcrl
pusha
sbb
mov
fistpll
mov
add
out
xchg
jns
popa
cmp
pop
sub
mov
out
lock
sbb
inc
mov
insb
xchg
sbb
popa
inc
aad
mov
loop
dec
xchg
sub
mov
pop
jae
jge
dec
lcall
lahf
cmpsb
sbbl
xor
loope
adc
in
lea
imul
outsb
pushf
jb
leave
jnp
sub
pop
xor
mov
mov
mov
xor
mov
mov
adc
jae
insl
scas
out
cmp
mov
or
or
nop
je
lret
xorb
and
pushf
xorl
es
pop
mov
int
dec
jbe
pop
jne
mov
add
sbb
js
pop
pop
pop
insb
pop
mov
fnsave
je
cltd
jge
push
cmp
cmp
jmp
mov
adc
and
or
cmp
out
push
jnp
fists
xor
cmpsb
outsl
notl
je
sub
push
rolb
lret
inc
mov
xchg
in
sti
xchg
rorb
push
push
lods
jp
adc
nop
sbb
lods
das
mov
cmp
adc
jb
test
cmp
hlt
fstpt
fwait
inc
fucomip
mov
mov
icebp
loop
enter
mov
push
lcall
xchg
ds
sub
insl
push
icebp
sbb
sub
dec
fiadds
rol
repz
mov
jg
out
das
xlat
sub
stc
loop
or
adc
jg
push
adc
insl
scas
outsb
aas
sti
cmpsb
lods
iret
add
jge
pop
and
push
pushf
lock
stc
cmp
push
push
lahf
clc
push
js
leave
mov
or
sbb
sub
sbb
xchg
pop
pusha
sub
mov
sysexit
mov
xchg
ja
loop
adc
push
dec
lcall
bnd
shl
inc
lret
sbb
out
fsubs
xchg
push
xchg
sbb
fcoml
jo
jg
in
daa
adc
dec
push
divb
cs
bswap
stos
sbb
outsl
mov
pop
sub
adc
dec
sub
inc
mov
push
sub
and
inc
cmp
add
push
pop
inc
lds
jmp
cmp
jno
fs
adc
pop
xchg
xchg
outsb
push
add
int3
cmp
pusha
xchg
pop
popl
adc
clc
xchg
repnz
iret
outsb
gs
pop
test
mov
xor
and
mov
mov
lret
push
aam
addb
lahf
fcomps
add
mov
fimull
pop
shrb
inc
mov
loopne
divb
repnz
and
fldcw
aam
xchg
scas
lea
pop
ja
ret
popa
js
dec
imul
cmpsl
or
jno
mov
jl
adc
push
pop
in
dec
sbb
ret
les
jb
jmp
or
mov
xchg
mov
loop
int
xor
into
ret
je
rolb
loop
ds
xlat
push
cli
inc
pop
sub
pop
cmp
cmc
inc
push
sbb
sahf
pop
leave
lods
cmp
out
push
mov
pop
xchg
cmc
add
js
pop
ret
imul
subb
sub
outsl
outsb
icebp
sub
dec
testb
fisttpll
das
push
inc
cmp
pop
pop
sub
mov
sub
mov
inc
fistps
out
fdivl
loopne
cwtl
mov
out
push
jo
pop
push
mov
popl
ds
stc
mov
and
sub
stos
mov
mov
jae
mov
push
push
xor
pop
loop
mov
mov
shll
sahf
xchg
mov
mov
test
out
iret
enter
shrl
aas
adc
jp
xor
add
xchg
mov
adc
pop
sahf
mov
push
cmpsl
pop
dec
mov
add
jle
add
mov
cmp
push
bound
inc
xchg
add
nop
outsl
sub
xchg
xor
scas
inc
xor
lods
xchg
je
and
clc
pusha
mov
lcall
icebp
jg
movb
cmc
inc
fs
adc
or
adc
daa
push
xchg
scas
pop
adc
mov
jb
incl
arpl
xchg
inc
mov
icebp
sub
subb
enter
fistps
and
in
sbb
adc
stos
xchg
ds
shlb
jl
lahf
mov
add
sbb
xchg
add
scas
dec
jp
nop
adc
cmp
pop
jne
shrl
pop
fwait
mov
pop
lds
call
mov
lods
mov
push
xor
enter
cltd
cwtl
cmp
insl
adcl
call
or
add
cmpsl
movhps
push
jnp
pusha
out
cmp
mov
push
iret
add
jno
push
cwtl
pop
cmpsl
and
data16
xor
mov
ds
mov
nop
loope
sub
jb
jo
add
or
pusha
test
jne
add
jge
lods
dec
add
popl
outsb
or
fdivrl
inc
inc
mov
push
or
cltd
gs
iret
cmp
jle
lahf
mov
ja
out
mov
sub
add
mov
jo
fbstp
jp
shll
mov
in
js
loop
ficompl
mov
fstl
popa
inc
test
cmp
insl
add
in
inc
pop
fstps
push
cld
xchg
ss
loopne
inc
xchg
je
ret
imul
xchg
inc
loop
insb
stos
push
rorb
es
daa
jns
xor
out
movb
push
insb
shll
out
push
fs
fistl
test
xchg
adc
add
add
data16
scas
leave
les
hlt
std
mulb
jnp
xchg
push
xchg
repz
jb
jp
pop
adc
mov
mov
mov
fldl
dec
outsb
mov
cmpb
into
inc
sbb
shlb
mov
or
js
xor
sbb
push
push
add
das
out
cmp
cmp
or
addb
mov
loop
out
fcmovbe
push
dec
fstpt
add
add
xchg
sbb
dec
test
das
mov
dec
sub
lcall
dec
push
scas
pmulhw
mov
adc
int3
pusha
mov
rcrb
add
push
xlat
outsl
sub
xchg
inc
repnz
aas
or
xchg
roll
in
arpl
sbb
lods
fwait
inc
test
je
cmpsb
fbld
mov
xor
lods
std
icebp
inc
cmpl
add
test
lahf
test
dec
out
addr16
leave
pop
push
adc
rcr
gs
push
add
pop
stc
sbb
jge
in
and
lock
pop
mov
cmp
pop
loop
inc
add
movsl
inc
lret
pop
ja
add
mov
jg
add
sub
add
dec
jo
adc
mov
idivb
xor
and
mov
mov
loopne
push
jecxz
jo
jnp
iret
or
arpl
pop
addb
fisttps
dec
loop
arpl
mov
push
nop
jb
mov
pop
mov
push
xor
mov
add
mov
add
stos
sub
xchg
cmovs
push
push
in
ret
push
xchg
lret
repz
aad
rolb
out
adc
test
mov
hlt
lds
mov
insb
jmp
xor
xchg
pop
dec
mov
add
or
dec
outsl
xchg
not
or
mov
push
xchg
aaa
iret
mov
and
pop
popf
aad
mov
fisttpl
lret
popf
sti
push
and
or
push
cmpsl
mov
inc
jle
sbb
push
ret
cmpsl
push
data16
loop
lods
or
cwtl
hlt
cld
fs
push
adc
mov
inc
sahf
lcall
scas
xor
mov
dec
adc
loop
aas
cmp
aam
sahf
insb
sbb
add
je
cmp
pop
inc
lret
fimull
dec
push
mov
sub
loop
mov
push
jg
jno
sbb
add
imul
sub
movsl
mov
push
mov
or
stos
fldl
mov
lea
xchg
pop
idivl
aam
push
mov
dec
or
inc
in
inc
and
loop
ss
cltd
pop
xorl
or
in
jnp
fldl
push
rorb
push
xchg
loopne
xor
jb
popf
lret
adc
movl
push
lcall
aaa
mov
pop
cmp
inc
shlb
jg
jae
mov
enter
jb
sbb
rcll
add
xor
xchg
scas
sbb
cmp
sahf
adc
es
xor
add
sub
sub
mov
mov
les
adc
push
daa
sub
aam
sbb
mov
imul
mov
out
int3
dec
sbb
xchg
addr16
test
mov
push
mov
or
mov
in
add
sub
sbb
hlt
lods
testl
adc
lret
mov
lret
add
addb
iret
mov
pop
mov
xor
lahf
push
data16
xor
adc
pushf
jo
lcall
adc
mov
sahf
rol
pop
cmp
sub
xor
dec
cld
cs
or
xchg
cltd
xor
xchg
outsb
add
stc
rdtsc
pop
test
mov
mov
aad
sub
lahf
daa
loop
pop
ljmp
stos
das
dec
mov
mov
add
adc
ret
mov
mov
neg
ljmp
push
repnz
or
push
pop
mov
mov
into
jb
mov
fdivl
stc
push
dec
push
xchg
jbe
clc
xor
sub
pop
mov
int
or
adc
and
mov
inc
dec
cmpsl
adc
cmpsl
pushf
dec
insb
insb
repz
fisubrl
inc
xor
inc
test
test
cld
dec
jg
std
pop
je
mov
jp
pop
mov
sahf
pop
movsl
sbb
pop
cmp
add
dec
aam
iret
sbb
and
xchg
fisubrs
add
sub
or
jg
mov
inc
test
mov
inc
sub
dec
in
adc
sbb
xchg
dec
hlt
adc
pop
jno
in
inc
mov
cmp
xor
cmp
mov
sarb
scas
sub
leave
aas
mov
fistpll
mov
test
int3
push
daa
mov
test
mov
mov
mov
sysexit
shlb
cli
imul
pusha
mov
je,pt
sbb
rorb
sbb
sbb
mov
adcl
sbb
lds
mov
push
scas
stc
cltd
loop
fadd
mov
shrl
mov
dec
add
mov
sbb
lea
outsl
mov
int
int
ljmp
shlb
or
dec
stos
fisubl
cmpsl
loop
out
add
jl
push
xchg
inc
jnp
fxch
jno
pusha
cmp
xchg
sub
in
sti
and
pusha
ja
cmp
out
icebp
xor
es
cld
mov
cmp
xchg
dec
rcll
insb
sarb
cmc
cld
cwtl
dec
cmpsb
sahf
pop
cld
adc
sbb
xor
jo
mov
aad
lret
jg
push
call
adc
mov
jns
or
add
push
fwait
mov
sub
repz
loop
or
sbb
insl
icebp
mov
jae
or
repz
ljmp
sub
push
clc
popa
sbb
aam
or
xchg
push
adc
frstor
jbe,pn
mov
or
lret
in
xchg
add
outsb
push
repz
cmp
ds
lds
mov
add
adc
mov
lret
mov
loop
xchg
and
out
out
rorb
aad
add
fcoms
sti
mov
aad
push
dec
es
push
scas
adc
sahf
adc
xor
lea
fists
mov
xchg
lret
data16
mov
cmp
nop
jbe
jmp
inc
fstpt
sbb
popa
mov
or
mov
jecxz
fsubrs
xchg
push
xor
sbb
es
push
xchg
xchg
test
pop
imul
addr16
dec
lret
jbe
xchg
and
or
arpl
cmp
int3
int
scas
sbb
or
jg
sub
cmc
or
out
mov
jne
bnd
push
dec
test
xchg
lods
and
jp
test
fisttps
mov
or
add
loop
xchg
push
and
lret
cmc
jg
enter
dec
sub
inc
cmp
xchg
rolb
mov
les
outsb
jge
add
mov
and
mov
in
push
shlb
stos
enter
adc
ret
outsb
mov
mov
jge
das
aas
dec
xchg
outsl
mov
push
ret
push
loop
push
jno
into
incb
mov
int3
add
mov
jns
shrl
sti
push
enter
xlat
repz
mov
pop
sarb
ljmp
cs
out
sub
aam
mov
repnz
cwtl
and
push
aas
adc
pop
sub
pop
jo
js
xor
add
push
dec
jns
or
loop
xrelease
lret
insb
cmpsb
adc
popf
adc
push
scas
call
fists
pop
xchg
jbe
jno
jl
nop
xor
jne
sbb
or
push
adc
lods
push
into
lret
inc
lcall
xchg
dec
insl
mov
sub
mov
inc
lcall
imul
out
daa
cmp
out
push
sub
outsb
lcall
mov
arpl
sub
mov
loop
pop
jae
insl
pushf
inc
rcl
daa
fistpll
dec
adc
sub
or
repz
fwait
push
cli
loop
xchg
std
mov
ss
or
ja
loop
jg
adc
xor
add
push
jp
cltd
hlt
call
jmp
lods
jne
push
cmp
and
imul
mov
push
mov
mov
or
jecxz
or
les
je
pop
dec
dec
fidivrs
stos
xor
or
loope
inc
bound
sbb
xor
sub
sbb
push
inc
ja
push
das
xchg
xchg
fbld
jl
lods
iret
test
xchg
popa
insb
xchg
jg
mov
sahf
push
jno
cld
add
xor
test
jp
push
or
repnz
mov
jg
xchg
insb
sahf
push
cmp
out
pop
nop
add
mov
iret
add
into
xor
push
in
or
test
add
mov
xchg
ss
inc
push
loopne
pop
dec
in
xchg
xchg
adc
push
fwait
dec
cmp
xchg
push
xlat
lret
adc
pusha
and
test
aam
bound
jae
xchg
jmp
fnop
roll
and
dec
push
and
push
or
clc
popa
and
mov
enter
cmpsl
xchg
cld
jg
jg
add
or
inc
incb
or
and
dec
inc
sbb
pop
jbe
int
movsb
ja
arpl
ret
mov
push
ljmp
jnp
filds
scas
sub
outsl
cmp
sub
add
pusha
and
addr16
ret
and
xchg
xor
xorl
pop
scas
mov
pop
addr16
lods
mov
out
add
mov
mov
rorl
aas
add
andb
mov
pop
pop
xor
pusha
movsb
dec
fldpi
pushf
popf
cmp
bound
scas
out
mov
jnp
out
or
insb
inc
pop
test
push
testb
pop
adc
ljmp
dec
cmp
out
mov
subb
mov
mov
stos
pop
or
int
xchg
cltd
orb
shl
pop
fwait
or
pop
mov
push
rcl
dec
sbb
or
add
mov
or
clc
pop
ljmp
adc
out
sbb
pusha
pop
sbb
push
sub
sbb
mov
iret
cwtl
insb
mov
sbb
push
jne
dec
leave
cmc
push
rorb
and
inc
hlt
xchg
add
or
mov
test
inc
mov
pusha
lahf
jns
in
popf
out
cmp
pop
sbb
fnsave
dec
jmp
jmp
bound
push
stos
adc
cwtl
int
xchg
stos
dec
fisttpll
mov
xchg
adc
adc
push
stos
nop
dec
sub
and
add
enter
pop
in
lods
push
xchg
gs
mov
incl
and
scas
adc
andl
pop
int3
add
xchg
pop
pop
ret
idivl
sbb
test
loope
dec
pmulhuw
or
das
mov
dec
nop
pop
test
fdivrs
test
leave
rcl
mov
dec
adc
movsl
sbbb
hlt
roll
mov
cmpsb
incb
repnz
pop
xor
mov
ficomps
mov
push
enter
into
jg
sbb
cmpsl
xor
mov
stos
mov
inc
push
daa
sub
les
int3
in
or
dec
mov
lods
lods
movsb
push
addb
jle
xor
out
lods
push
test
loopne
ss
push
jp
pop
int
lahf
shrl
dec
insb
push
adc
rcrb
xchg
das
push
sahf
stc
cmpsb
xor
das
ljmp
sub
popf
iret
loop
mov
mov
loop
nop
test
jmp
ret
inc
aas
xor
pop
jg
push
pop
mov
loopne
ret
je
rorl
out
rorb
popf
ja
cmpsb
nop
jp
hlt
fcomps
mov
xor
cli
aad
mov
pop
and
inc
movhps
pop
loop
inc
shlb
out
pop
dec
add
inc
cmp
cmpsb
loop
imul
ds
lret
mov
pop
adc
sarl
aad
out
jo
ljmp
enter
nop
xchg
ror
add
iret
pusha
je
cmp
enter
lret
aam
out
rcll
out
ljmp
lods
mov
in
sub
jo
ret
rcll
adc
adc
push
fbld
fistpll
add
mov
xchg
adc
and
mov
xlat
fistpl
add
inc
stos
sub
adcl
xchg
out
jns
sbb
mov
shlb
in
sbb
mov
test
jnp
daa
mov
fiadds
inc
jmp
out
push
loopne
aad
push
or
sbb
sub
ds
test
push
adc
cmc
jnp
out
jne
das
xchg
sub
inc
out
adc
and
movsl
fstl
test
cmp
ljmp
pushf
xor
lret
int
and
cwtl
sub
cld
pop
mov
add
scas
daa
lods
mov
mov
xor
mov
mov
jg
add
pusha
loop
xchg
mov
pop
and
mov
lods
fidivl
mov
in
out
popf
adc
mov
icebp
dec
int
xchg
cmpsb
mov
mov
add
cmova
mov
gs
call
pop
jnp
mov
inc
adc
int
pop
mov
fwait
nop
insw
mov
pop
dec
push
pop
jle
dec
xchg
add
mov
sub
pushf
in
xor
and
xor
fildl
popa
push
hlt
lods
leave
mov
jns
sbb
xor
mov
add
out
add
dec
sub
nop
nop
cmp
jecxz
sub
insl
insb
or
dec
mov
mov
dec
fs
dec
lcall
xchg
push
mov
mov
push
jbe
adc
push
adc
fimull
or
inc
or
popf
notb
popf
push
xor
ss
push
mov
ds
jl
or
push
jge
bsr
jl
adc
xchg
or
fsubrl
dec
mov
in
xor
test
dec
add
mov
jge
pop
cmc
xchg
jmp
and
push
dec
dec
cmpb
loopne
xchg
or
aam
push
cmp
fcompl
cmp
sbb
out
jno
mov
mov
xor
inc
fidivrl
mov
xor
lods
pop
add
pop
xchg
sbb
and
cltd
ss
xlat
xrelease
aas
adc
inc
out
push
mov
mov
inc
push
sub
test
adc
cli
mov
inc
das
mov
out
xlat
dec
fs
cmp
in
mov
dec
jl
pop
adc
push
sub
hlt
icebp
loopne
into
inc
jns
xchg
push
imul
or
rclb
jle
insl
repnz
call
inc
adc
outsb
insb
add
push
adc
adcb
and
popf
cmpsl
jae
sub
pusha
lods
cmp
xchg
pop
jne
lahf
movsl
lods
mov
imul
push
popf
test
and
dec
push
or
xchg
add
adc
xorb
ffreep
dec
jne
add
call
dec
shl
add
loopne
andl
or
inc
fisttpll
jb
mov
push
lods
inc
push
shll
fldt
sbb
mov
pop
ss
or
mov
mov
adc
insb
mov
mov
push
mov
add
imull
or
mov
add
fwait
lcall
rolb
adc
sti
jnp
cld
test
sbb
adc
fnsave
cmp
push
push
movl
test
lea
lock
sub
hlt
je
and
jne
inc
push
dec
call
imul
ret
in
insb
pop
mov
add
push
pop
loop
fdivrl
sbb
adc
fisubl
adc
sub
sbb
cmp
call
int
mov
jne
ja
push
push
push
std
loope
cwtl
push
movsl
pop
jge
jnp
mov
int
push
jnp
inc
push
aad
xchg
sub
jo
cmp
aam
pop
xorl
cmc
test
jo
push
loop
mov
iret
pop
add
xor
rclb
pop
jns
orl
addr16
out
inc
lret
imul
test
fnstenv
push
xchg
pop
dec
lods
adc
push
cli
icebp
insb
mov
push
out
sbb
mov
and
repz
sahf
sub
ret
inc
mov
aam
int
mov
pop
in
je
push
cmc
pusha
lcall
addb
xchg
shl
ja
loop
out
push
in
push
mov
xchg
lock
loop
push
ret
loopne
pop
pushf
inc
or
pop
pop
mov
data16
adc
push
mov
cmpsl
divb
insl
push
adc
push
hlt
xor
sub
mov
cmc
and
sbb
xor
enter
adc
sub
add
out
das
fistpl
in
clc
and
pop
mov
outsb
mov
int
fucomip
pop
je
sub
jno
repz
into
lahf
into
jmp
call
mov
daa
fs
add
call
mov
xchg
adc
sub
jae,pt
adc
cmp
into
sub
lahf
popa
sbb
rclb
dec
sbb
out
add
mov
popf
fcoml
mov
mov
cmpsl
mov
lods
cmp
add
fldl
sbb
adc
and
add
mov
test
out
shlb
repz
pop
mov
mov
fisubs
push
push
leave
sbb
or
sbb
sub
sub
adc
xor
pop
out
sarb
ret
cmpsb
pop
mov
stc
out
mov
xchg
cmpsb
mov
add
sub
mov
xor
scas
test
mov
pop
jl
popf
adc
insb
inc
xchg
notb
xchg
mov
mov
sub
xchg
push
arpl
push
mov
arpl
out
test
sub
mov
jne
stos
ljmp
dec
lods
sbbl
rsqrtps
imul
or
loop
jge
popa
or
dec
loopne
push
sub
mov
addb
xchg
cmp
sti
fmul
mov
popf
aad
in
adc
inc
lods
or
pop
loop
ljmp
and
pop
pop
push
sbb
addr16
out
mov
jae
sub
xor
nop
push
mulb
and
ss
inc
lds
push
outsb
sbb
in
or
cmp
out
ljmp
inc
adc
push
pop
xchg
sub
subb
pop
ss
adcb
push
cmc
icebp
hlt
push
push
rcrb
cld
xor
xchg
push
jnp
pushf
mov
xchg
scas
xchg
lds
jnp
xor
push
dec
jp
mov
xchg
clc
loop
add
push
add
sarl
sub
jnp
xchg
push
stos
loop
add
out
iret
call
inc
fstl
jmp
cmp
jl
loope
fimull
je
mov
push
loop
shll
add
fsub
jp
or
adc
mov
pushf
jae
arpl
sti
sub
and
mov
xchg
in
mov
and
jb
pushf
clc
lds
adc
mov
push
popa
mov
or
add
xlat
imul
sti
push
mov
loop
ljmp
idivb
pop
std
cmc
xchg
cmp
in
push
pop
fisttps
outsb
mov
cwtl
sbb
mov
sbb
adc
xor
dec
lahf
xor
aad
push
nop
jecxz
mov
rcrb
inc
push
push
dec
jns
loopne
je
das
jae
xchg
mov
mov
les
cwtl
stc
roll
sub
sbb
jmp
push
stos
lcall
sbb
or
sbb
inc
lahf
dec
adc
mov
in
enter
sbb
and
and
add
mov
mov
push
sub
adc
imul
sahf
xchg
mov
add
sub
sbb
dec
xor
cmc
lods
outsb
aas
hlt
fidivs
xchg
call
dec
cmc
add
scas
add
repnz
sub
sub
lea
dec
enter
ja
xor
movsl
sub
sarb
scas
sbb
cmpsb
cmp
testb
add
out
add
fnstcw
aam
test
negb
gs
cwtl
jg
test
sub
ja
xor
xlat
xor
scas
pop
xchg
jg
mov
and
mov
idivb
pop
mov
mov
push
int
shrb
cmc
sete
mov
ja
add
dec
paddsb
lcall
adc
push
dec
mov
outsb
sub
stos
scas
inc
push
nop
sbb
inc
gs
popf
ret
iret
in
sbb
push
pop
loop
mov
call
in
nop
pusha
or
jle
insl
das
adc
mov
insl
iret
lea
ds
iret
add
pop
inc
repz
fnstcw
outsb
sbb
cmp
loope
fwait
sbb
test
push
outsl
fstl
jle
xchg
push
sbb
shl
mov
cmp
push
push
mov
mov
inc
and
sub
jne
popf
push
subl
pop
ds
add
sbb
sub
and
arpl
mov
loope
cmp
sbb
add
fwait
and
xor
jmp
sahf
add
outsl
push
push
inc
insl
pop
adc
push
aad
mov
add
mov
mov
test
scas
out
push
std
ds
out
fstl
mov
xchg
mov
rdtsc
sub
xor
mov
pusha
pop
pop
adc
psrad
js
pop
flds
jne
int
scas
adc
scas
pop
inc
adc
mov
add
or
out
adc
fwait
arpl
popa
mov
jmp
push
or
dec
pop
fsub
or
or
mov
jnp
push
mov
nop
inc
xchg
sub
pusha
pushf
jnp,pt
in
add
mov
mul
jno
push
int
add
inc
cltd
shrl
pushf
cmpl
inc
sbb
xor
movsl
jno
adc
testl
cmp
push
clc
xchg
fnstcw
cmpsb
test
mov
in
faddl
pusha
sbb
out
clc
push
imul
sbb
rorb
sbb
popa
add
fdivl
lret
orb
sub
or
movb
pop
cltd
mov
sbb
push
cmp
orb
mov
cwtl
sahf
sub
sub
mov
push
imul
sub
jae
lahf
add
pop
mov
fiadds
xor
icebp
cmpsl
test
adc
out
dec
or
jp
cmp
lcall
imul
ljmp
test
and
in
addb
sbb
sahf
add
imul
push
jne
cs
jnp
or
es
ror
ror
xchg
gs
movsl
push
or
leave
lods
push
mov
pushf
aaa
cwtl
lcall
sub
divb
push
cli
daa
fists
xchg
out
repz
out
sub
iret
jnp
push
ja
out
xor
pop
fcmovnbe
cmpb
das
dec
mov
mov
out
mov
dec
xor
fnstsw
lods
xchg
or
scas
adc
xor
cmp
pusha
stos
out
incb
cmpl
and
ss
pop
fcmovu
mov
mov
or
jecxz
cmp
lcall
cld
loop
frstor
pop
sub
cmp
mov
mov
pop
mov
ret
adc
test
mov
mov
fisttps
add
sbb
cltd
pop
loope
ret
gs
pop
cmp
push
mov
lahf
sbb
add
pop
push
sub
lea
cmp
and
add
addr16
xchg
into
sub
mov
and
jns
sahf
xor
out
mov
mov
push
scas
shl
out
push
add
pusha
stos
ja
or
mov
push
xchg
cmp
pop
imulb
push
push
cmpsb
or
add
cmp
xchg
mov
test
outsl
js
push
fists
and
add
adc
ss
fmuls
inc
sbb
jnp
sahf
and
insl
cmp
pop
cli
sbb
sbb
xchg
add
outsl
ret
sbb
ss
insl
rorl
cmp
cmp
pop
dec
call
loop
aam
leave
int3
testb
pop
mov
ficoml
mov
sbb
in
sub
inc
mov
xlat
jbe
das
mov
push
sbb
sub
fstps
jg
fbstp
lods
pusha
jo
fildll
ds
add
sbbl
jns
mov
mov
cwtl
adc
fstl
mov
push
stos
aam
sub
movsb
fdivrl
ljmp
jg
push
fcmovu
insl
test
inc
pop
adc
rcrl
lret
in
cmpl
frstor
aaa
test
and
fldt
imul
mov
lds
jo
push
sub
adc
fnstsw
jecxz
in
mov
js
jne
das
xchg
and
add
in
sub
rcrb
pop
push
dec
inc
imul
push
in
mov
push
mov
xor
out
push
pop
dec
pop
cli
cmp
cmpl
int
stos
js
add
xor
add
aad
xchg
adc
xor
inc
adc
rcrb
adc
out
imul
ja
in
sbb
or
scas
sub
pop
sub
decb
jmp
lret
push
mov
gs
fidivrs
mov
or
jge
push
sarl
cmc
push
subl
fmull
subb
repnz
rcr
push
gs
jecxz
sub
pop
in
adc
adc
mov
cmp
dec
or
cmp
push
pop
inc
insb
cltd
pop
dec
xor
push
add
adc
sbb
je
les
sub
sahf
pop
loop
push
xchg
lcall
insl
mov
rorb
xchg
ret
data16
ljmp
mov
add
xchg
cmpsb
adc
loop
push
sub
shlb
ljmp
shll
idivl
add
adc
leave
mov
shrb
scas
out
hlt
int3
outsl
popf
add
daa
mov
inc
or
sbb
xchg
xorb
inc
mov
add
cmpsb
outsb
mov
in
popf
outsl
ds
outsl
fwait
and
fs
adc
or
cmpsl
shl
ss
xor
sbb
call
xor
and
adc
loope
insb
mov
xor
push
adc
mov
addr16
sbb
mov
push
push
inc
arpl
xchg
leave
std
cmp
sbb
push
cld
sahf
rcrb
sbb
dec
call
std
setg
insl
xor
stos
cmpl
les
jl
adc
mov
pop
inc
jge
cli
iret
pusha
cmp
dec
pop
lds
jnp
data16
add
sbbb
insl
mov
ja
pop
fwait
push
sbb
mov
xlat
testb
faddp
xchg
dec
in
pop
into
out
cld
sbb
stos
stos
sub
xchg
and
inc
mov
cltd
push
sub
leave
cmp
je
lahf
mov
es
test
mov
xor
sub
mov
pop
stos
xchg
iret
sarl
inc
lea
mov
loop
fldl
cmc
pop
bound
push
add
pop
lods
mov
lods
loope
push
jg
mov
mov
out
mov
mov
inc
pop
push
ljmp
and
lcall
and
sti
dec
movsb
or
negl
ret
sbb
add
cmp
lods
adc
ret
dec
popf
xor
icebp
test
fiadds
inc
pop
pop
movsb
pushf
fcom
stos
test
mov
mov
add
movsb
sarl
ret
scas
sbb
sub
mov
loopne
add
jg
rcrl
push
lock
jg
sti
cltd
in
sub
xchg
sbb
jo
sbb
lret
push
mov
pushf
sbb
aas
jge
imul
hlt
pop
rorl
push
mov
xor
aad
mov
mov
sbb
pop
fs
aad
decb
je
popa
test
scas
adc
test
cmp
cmp
mov
mov
or
addl
inc
add
js
imulb
pop
loop
mov
std
call
cmpsb
jne
shl
jg
dec
ljmp
mov
pop
ds
loop
push
mov
pop
mov
mov
sub
leave
jbe
add
data16
in
cmpsb
testb
xchg
push
or
dec
pop
add
xchg
gs
ret
or
jecxz
mov
cmp
test
mov
fiadds
loop
addb
aaa
in
cmpsl
sbb
fstpt
jmp
add
push
fprem1
jl
gs
pop
cwtl
popf
add
in
lcall
inc
hlt
xlat
pop
xor
decb
push
enter
icebp
pop
scas
inc
jno
addb
mov
pop
lods
and
lret
add
pop
insb
xorb
jecxz
push
repnz
and
push
mov
cld
mov
cli
call
inc
sbb
in
cmc
xchg
adc
or
xchg
xchg
sbb
mov
popf
or
xchg
mov
outsb
jl
ljmp
sbb
lock
inc
dec
xor
adc
push
loopne
movsl
and
dec
loop
and
stc
or
or
nop
inc
jo
dec
jecxz
mov
inc
xchg
pop
addr16
dec
mov
xchg
dec
or
add
push
sub
ret
jecxz
push
pop
or
stos
cmpsl
push
xchg
pop
in
out
int
out
lcall
push
insl
jo
es
jmp
in
pop
lret
fwait
lods
fnsave
xchg
cli
fmulp
inc
mov
add
out
imul
cmp
xchg
push
fdivrs
imul
mov
shrl
aam
or
test
push
daa
out
test
mov
mov
add
and
or
sahf
xchg
or
xor
insb
push
jb
xchg
add
pusha
mov
mov
inc
cld
push
mov
outsb
add
pop
std
lock
call
testl
push
daa
aam
push
inc
push
pushf
mov
xchg
loop
add
std
sbb
pop
mov
sbb
ds
push
pop
enter
push
loop
xchg
and
add
popf
cwtl
int3
adc
inc
cmp
int
sbb
call
jns
imul
loope
sbb
test
and
mov
jne
aam
xor
inc
scas
sbb
fs
pop
pop
cwtl
sub
lock
and
mov
repz
cmc
mov
adc
int3
cwtl
rol
adc
push
jne
imul
xor
mov
push
cli
lods
jb
inc
mov
sbb
lret
jg
push
test
xchg
rorb
sbb
cmp
jns
ljmp
cmpsl
xlat
pusha
in
mov
fadd
cwtl
inc
xchg
pushf
test
or
mov
test
xchg
outsl
lcall
scas
push
push
pop
mov
das
mov
xor
xchg
icebp
xor
jne
inc
loop
jno
dec
ljmp
ljmp
xchg
jno
fwait
mov
mov
pop
dec
adc
inc
pop
mov
jnp
repz
pop
sub
out
dec
in
pop
jnp
mov
pusha
jo
and
fisubrl
sbb
cmpb
out
je
xorb
xchg
sbb
add
add
icebp
paddsb
inc
pop
lret
out
je
movsl
xor
sbb
lcall
mov
cmpb
sbb
popa
rol
lds
adc
dec
jno
or
xchg
out
prefetchw
push
in
sahf
adc
dec
mov
or
push
mov
in
mov
lahf
ja
mov
nop
dec
xchg
cli
jmp
sub
fidivrs
inc
inc
mov
mov
imul
dec
cltd
insl
sbb
aam
dec
icebp
sbb
pop
jns
add
outsb
dec
fsubp
sahf
inc
pop
jecxz
scas
cmp
jb
add
sbb
imul
subl
scas
dec
bound
mov
ret
xor
addb
test
std
mov
adc
mov
out
loop
mov
call
mov
adc
leave
lahf
xlat
loop
stc
and
mov
add
popa
adc
push
int3
fiadds
cmp
lret
lea
pop
fs
insb
addr16
add
adc
or
outsb
and
adc
or
dec
push
jbe
adc
xor
jne
ss
int3
lret
pusha
xor
sarb
lods
popa
jne
pop
cmp
push
pop
mov
mov
es
mulb
and
jg
sbb
or
sbb
cmc
xchg
sbb
imul
repnz
cmp
cmpsb
loopne
imul
imul
jmp
lds
sarb
or
gs
xchg
push
dec
subb
cmp
sbb
adc
jl
pop
in
loop
shlb
jne
in
int
sbb
mov
mov
outsl
loop
sub
dec
push
ds
stos
rorl
sub
jp
daa
add
or
dec
and
sbb
push
push
push
out
pop
xor
lods
jp
inc
xor
push
bound
movsb
shl
or
cld
cmc
jno
push
sbb
lcall
scas
out
push
mov
out
je
loopne
jb
in
cmc
sbb
push
adc
imul
jecxz
sahf
std
lahf
push
add
idivb
lret
into
pusha
pop
lods
inc
jg
jecxz
push
xchg
cwtl
xor
mov
add
ret
std
mov
lcall
inc
lcall
adc
push
jecxz
jmp
or
pop
add
popf
adc
dec
call
imul
loop
jno
mov
push
inc
add
sahf
popl
outsb
dec
push
insl
in
dec
sbb
or
sub
aad
in
dec
push
int3
sbb
out
cmp
mov
repnz
outsb
adc
out
sbb
or
test
sbb
stc
mov
mov
ds
fiadds
hlt
sahf
ret
fistpll
xchg
pop
push
es
jb
or
das
fmuls
test
mov
and
mov
lods
fists
mov
imul
les
sub
pop
mov
pop
push
xor
mov
stos
lahf
fwait
mov
mov
adcb
cmp
aam
mov
std
mov
pop
fistps
cmp
dec
and
xor
and
mov
inc
add
xor
dec
sti
and
mov
add
xlat
cmp
inc
pusha
inc
add
cmp
test
test
sbb
out
sbbl
push
add
insl
fwait
or
add
sub
dec
stc
jge
push
es
loop
sbb
lahf
xchg
sub
mov
imul
xchg
rcll
jg
inc
jns
adc
sahf
enter
fistl
pop
mov
xor
xor
jl
jno
in
push
mov
push
cmc
jne
repz
push
cmp
mov
mov
mov
pushf
aam
and
aad
mov
loop
cli
sarb
sub
cltd
or
repnz
pushf
mov
jnp
dec
pusha
int
sbb
sub
leave
pop
cmp
cmpsl
lock
int3
test
adc
add
repz
xorl
ljmp
mov
xlat
sub
mov
xor
ss
ja
movsb
fisubl
testl
leave
test
or
mov
je
ja
lret
adc
psllw
lock
xchg
movsb
out
cmp
and
cwtl
sub
pop
imul
cmc
dec
loop
insl
out
jne
xchg
mov
adc
mov
or
xor
xor
cmc
ss
dec
add
sub
adc
jo
pop
int
inc
cmp
loop
jl
lock
cmp
pop
sub
ljmp
mov
adc
sbb
inc
dec
aaa
push
mov
dec
popf
sbb
test
or
dec
sbb
aad
ljmp
push
fimull
xor
pusha
clc
push
mov
sub
inc
test
mov
lret
sub
jnp
stc
xor
das
subb
mov
cld
iret
imul
mov
adc
imul
popa
and
sbb
imul
movsb
xchg
push
push
ljmp
lds
lcall
shll
adc
lcall
icebp
jmp
adc
movsl
cmpsb
pushf
push
inc
dec
sub
fmuls
mov
jmp
outsb
out
fisubrl
insb
adc
ja
xor
mov
nop
push
sub
iret
fmull
out
add
sub
or
or
add
xor
mov
add
pop
pushf
xor
pop
push
in
int
or
imull
xor
adc
test
shrb
mov
xchg
push
push
rcll
in
leave
jge
xchg
mov
es
jmp
stos
test
sub
fs
xchg
lea
dec
xor
xor
mov
add
jo
and
cmp
aas
stc
pop
mov
add
mov
in
icebp
out
mov
xchg
clc
out
aas
dec
push
imul
mov
mov
loop
push
sub
xchg
or
in
cwtl
mov
enter
dec
sahf
or
push
cmpsl
fidivl
lret
test
dec
xchg
sub
int3
adc
push
xchg
or
sarl
and
mov
xchg
pop
movsb
add
aad
test
push
mov
xchg
dec
cmp
pop
jecxz
in
in
cmp
pop
push
in
and
adc
push
push
push
cmc
push
stos
inc
and
in
out
sbb
ret
push
sub
ja
in
sbb
rorl
xchg
rcrb
dec
and
push
sahf
roll
or
out
in
roll
add
hlt
data16
aaa
jle
dec
mov
test
icebp
scas
push
pop
push
lcall
inc
or
jnp
jb
out
or
pushf
add
ja
or
in
fs
sti
jne
js
and
mov
push
loop
pop
gs
xor
xor
popf
nop
mov
icebp
pop
mov
shrl
repnz
mov
bound
dec
adc
rolb
fadd
jecxz
push
push
shrb
push
dec
mov
or
and
jne
xor
andps
sub
push
xchg
out
adc
leave
das
push
push
add
imul
adc
rorb
jecxz
xor
add
aad
add
std
inc
fs
inc
out
xchg
dec
sbb
add
add
idiv
dec
test
mov
in
mov
pop
mov
adc
iret
pop
outsl
sub
rcl
xchg
int3
in
outsl
loop
jge
cmp
movsl
cmp
cmp
or
lds
xlat
mov
add
cmp
mov
adc
mov
sub
or
inc
cld
pop
dec
cmp
scas
sbb
enter
mov
pop
pop
out
in
jp
and
add
fwait
jg
loop
ret
dec
dec
mov
subb
lret
inc
mov
xor
lea
adc
mov
in
rorb
or
mov
ret
xchg
ja
inc
pop
jbe
xor
sahf
mov
cli
in
imul
std
data16
add
cmpsb
arpl
aad
rclb
pop
cmp
lock
mov
js
add
inc
testl
and
inc
mov
xorb
lret
daa
or
mov
pop
aad
add
insl
lea
jge
xor
sub
bound
xchg
ljmp
xchg
sahf
add
sbb
iret
jg
aad
pop
adc
push
mov
ss
jg
adc
xchg
dec
inc
jns
pop
lahf
jne
inc
push
adc
jl
adc
lods
daa
test
jno
leave
cmp
mov
xor
mov
adc
fistl
xchg
sti
mov
data16
leave
pushf
and
or
mov
dec
add
pop
add
test
mov
mov
lret
outsb
and
fiadds
out
sbb
cmp
stos
mov
sub
scas
pop
sub
mov
in
add
mov
aam
sahf
or
pop
or
out
sub
mov
cmc
sub
int
rcll
add
ret
xor
aas
jecxz
roll
mov
loop
mov
and
roll
cmpsb
lds
mov
js
adc
inc
out
inc
ljmp
push
mul
jle
lds
add
movsl
dec
jno
jp
cli
inc
es
loopne
lret
xchg
lcall
movsl
push
pop
or
mov
jne
push
jnp
fsubrl
xchg
out
in
mov
mov
inc
icebp
push
ja
dec
or
adc
out
sbb
pop
sub
popf
leave
insl
mov
mov
push
dec
or
filds
out
jne
lret
out
fidivs
and
mov
dec
mov
push
pop
testb
xchg
out
adc
lret
fnstenv
jo
fiaddl
cmp
pushf
mov
mov
rclb
imul
icebp
mov
xor
add
movsl
sbb
loop
arpl
sbb
pop
push
insl
outsb
xor
sub
scas
scas
xor
xor
rol
adcb
hlt
push
sbb
jecxz
dec
outsb
fistps
fnsave
loopne
loopne
enter
mov
int3
pop
adc
jl
push
add
push
out
add
xor
jecxz
clc
xlat
push
outsl
in
xlat
icebp
sbb
jbe
mov
sub
lds
sub
mov
dec
loop
cmpsb
cld
jmp
adc
and
pusha
inc
xor
sub
popf
ds
dec
js
shrl
jmp
sbb
loop
pop
sar
xchg
push
or
stos
lahf
stc
or
sahf
in
fs
out
das
stc
push
shlb
add
jl
addr16
sub
add
je
ljmp
inc
mov
sub
scas
fldcw
repnz
cli
mov
push
xchg
mov
sub
sbb
mov
sarb
adc
insb
subl
mov
cmpsl
stos
lea
cmp
adc
xchg
mov
xchg
adc
lock
push
js
in
pop
xchg
cmp
push
stos
popf
push
movsb
lcall
test
aad
in
sbb
push
repz
aam
repnz
xor
lahf
or
mov
lret
lods
inc
adc
add
and
insb
push
popf
sub
inc
sub
add
hlt
addr16
fdivrp
sub
xchg
push
pop
jmp
cli
cld
pop
cmp
sub
push
add
pop
enter
jno
lahf
lahf
adc
cmpl
xor
dec
adcb
out
dec
mov
stos
and
mov
add
adc
add
and
imul
mov
loopne
mull
mov
js
cmpsl
imul
adc
loop
je
jle
js
popa
orl
jg
inc
adc
inc
jnp
jnp
loopne
xchg
mov
fbstp
ds
or
push
inc
sub
lcall
mov
data16
xchg
repnz
cmp
cmpsb
mov
sbbb
sbb
xchg
lock
mov
adc
scas
popf
movsb
imul
enter
decb
test
lret
xchg
push
adc
lods
jge
addr16
sub
cmp
pop
adc
pop
fwait
sahf
add
lock
das
pop
adc
and
test
int
jbe
pop
fstpt
ficoml
push
int
dec
pushf
sub
mov
gs
mov
cmpb
cmpsl
add
and
mov
pop
movsl
mov
ret
cmp
mov
rolb
jno
andb
loop
movsb
leave
mov
push
mov
clc
push
subb
xor
cmp
rorl
cltd
lods
lea
xlat
adc
js
or
xor
lea
cmp
sbb
ja
cmc
cld
fs
xor
repz
sbb
cmc
mov
inc
dec
andb
and
jne
mov
fisubrl
jnp
inc
cmp
daa
or
int3
shlb
mov
ficoms
fnstcw
adc
and
fmul
jne
or
xor
sub
insl
sub
pop
test
popf
in
loop
negb
push
mov
push
jnp
and
std
cmp
mov
jp
ret
xor
or
scas
insl
mov
add
enter
into
mov
xor
orl
lret
test
mov
sarb
mov
dec
out
pop
enter
movsl
enter
ds
lahf
fs
lret
sub
cltd
lahf
inc
mov
rorl
pushf
sub
push
dec
aas
mov
dec
pop
cmp
gs
into
dec
shl
push
add
push
ja
in
mov
lret
lock
xchg
or
sbb
lret
jno
mov
or
xorl
loopne
shlb
std
mov
sub
ljmp
xchg
sbb
sbb
mov
sbb
pop
ds
mov
cmp
lock
pop
sahf
xchg
es
push
dec
lock
push
subl
clc
xor
jg
decb
jge
decb
pop
cltd
or
or
xor
lea
push
je
fists
pop
leave
cmc
xchg
data16
outsb
xor
call
lds
jl
ret
out
push
je
xchg
push
cmp
cmpsb
xor
and
test
adc
imul
and
xlat
xchg
cmp
inc
iret
dec
lods
xchg
push
bnd
mov
fimull
dec
xor
insb
xchg
cs
mov
mov
mov
pop
lods
arpl
shl
inc
out
addl
js
out
inc
adc
xor
aam
mov
sub
cltd
loope
push
adc
sub
cwtl
cmp
inc
mov
push
lds
js
bound
sub
fcomps
imulb
cmp
popf
insl
and
xor
sarl
inc
xor
adc
scas
xchg
outsb
fsubl
xchg
sub
jmp
add
ja
int3
adc
pop
sarb
fcoml
and
xor
jnp
inc
or
lea
js
mov
jg
sub
add
cmpsb
adc
call
testb
jae
test
add
insl
int
loop
jecxz
xlat
xchg
sbb
xchg
xchg
iret
push
jne
daa
sbb
aad
inc
imul
adc
loopne
iret
pop
pop
test
bound
inc
mov
js
imul
adc
shll
popa
fdivl
and
pop
nop
loope
dec
aam
pusha
pop
outsl
cmc
mov
jle
lcall
sub
jno
push
divb
test
mov
jae
cmp
adc
inc
pop
jg
iret
fucom
hlt
jge
stc
mov
cmp
pop
cmp
mov
mov
scas
and
insl
lea
cmp
add
add
mov
pop
mov
lahf
adc
movsb
sbb
add
pop
xorl
loopne
sub
jnp
in
dec
ret
xchg
stos
pop
test
mov
jp
ss
out
addr16
xchg
and
test
xor
sub
pop
push
mov
data16
mov
cmp
xor
mov
mov
in
xor
mov
test
rcrl
inc
add
add
jnp
incl
adc
jge
imul
xchg
nop
adc
cld
lahf
ds
mov
lcall
adc
xchg
aad
lcall
jl
rep
sub
test
sbb
sub
mov
jp
pop
sbb
sti
push
mov
out
test
pop
or
mov
pushf
push
adc
xor
or
adc
sarb
cli
imul
ret
or
push
idivb
dec
and
xchg
popa
cmp
and
mov
sar
adc
ret
sub
mov
lahf
inc
add
xchg
sar
lret
jo
adc
pop
jecxz
add
fwait
jnp
mov
xchg
pop
loop
sub
mov
ljmp
popa
mov
pushl
icebp
mov
mov
imul
push
out
sub
mov
xor
push
add
les
pop
xor
push
fcoml
data16
adc
popf
outsl
add
test
cmp
fsts
loop
push
jno
test
hlt
cltd
les
out
daa
mov
int
mov
xchg
fs
inc
sbb
aas
jmp
inc
jl
int
xor
push
add
mov
loop
push
push
dec
bnd
test
cmpsb
xchg
repz
add
adc
mov
xchg
inc
stos
mov
dec
push
or
mov
add
hlt
or
test
adc
xchg
xchg
scas
push
sbb
push
xlat
adcb
push
push
mov
sbb
ret
push
xchg
into
add
xor
push
mov
sbb
cmp
call
rorb
idivl
inc
repz
pop
mov
cmp
inc
add
push
test
jecxz
push
pop
shlb
lea
divl
outsl
xchg
or
sub
aad
push
lahf
ljmp
out
jne
cwtl
mov
mov
mov
mov
adc
out
rcll
std
stos
mov
inc
enter
or
loop
pop
aad
cmp
dec
dec
jg
rolb
mov
lcall
cmp
xchg
pusha
cmp
das
cmp
add
stos
out
dec
sbb
dec
pusha
fadds
test
inc
ljmp
mov
mov
aas
pop
loop
mov
push
call
out
mov
adcb
lahf
sub
sti
loope
xor
push
mov
adc
sbb
dec
dec
add
hlt
or
mov
sbb
sarb
and
push
xor
sahf
xchg
lret
mov
adc
sbb
xchg
enter
fistl
add
addr16
imul
pop
mov
ficompl
jmp
lahf
call
pop
test
jecxz
xchg
add
jne
cmpsl
xlat
or
sub
or
aam
jae
shlb
dec
mov
mov
imul
sbb
in
pop
sub
inc
mov
ss
out
inc
sbb
loopne
repnz
test
roll
xor
shrb
and
das
adc
ja
mov
jnp
int
clc
push
cmpsb
sub
int
je
or
push
imul
xor
pop
icebp
test
mov
sub
mov
enter
rolb
mov
mov
and
filds
in
loop
out
bound
les
jmp
lock
fdivl
mov
add
sbb
add
fstpt
mov
dec
xor
push
mov
test
in
dec
mov
test
test
jge
xchg
mov
adc
mov
sbb
pop
sbb
ss
push
pop
and
jp
or
and
sbbl
cmp
scas
sub
ja
sub
call
push
imul
repz
and
or
mov
push
adc
xchg
inc
add
pop
repnz
xlat
push
lahf
xchg
jl
adc
stc
incl
mov
sub
push
ljmp
jne
sbb
sub
dec
fmuls
mov
mov
ss
aad
pop
cmp
int
push
mov
sbb
sarb
int3
test
imul
scas
push
and
jecxz
cmp
and
ret
sbb
fildll
push
and
ret
repnz
mov
iret
pop
push
push
stos
in
add
dec
lcall
mov
mov
add
inc
adc
cmpl
add
inc
mov
lds
pop
dec
dec
xchg
cmp
and
xchg
mov
mov
jle
adc
mov
dec
dec
in
pop
or
lahf
cs
mov
xor
dec
cwtl
loop
push
leave
pop
push
popw
nop
jp
pop
and
lret
mov
or
jb
and
jg
mov
out
sarl
inc
mov
mov
sbb
lahf
cmp
jmp
cmp
pop
mov
jp
ljmp
stc
cmp
sbb
mov
or
outsl
dec
lods
fsubrs
pusha
xor
inc
fists
jo
cmp
test
das
jnp
push
xor
cmp
and
mov
add
mov
out
inc
dec
sbb
pop
jns
sub
cwtl
push
dec
lcall
and
add
jae
outsl
test
shl
dec
aaa
out
fprem1
push
cmc
add
xchg
mov
popf
into
sbb
scas
mov
mov
stc
pop
or
cmc
jns
ret
push
test
popa
push
sbb
je
fstpl
sbb
mov
pminub
add
mov
in
sbb
leave
addb
inc
push
call
push
test
imul
jle
mov
pusha
js
mov
cmpsb
imul
push
push
imulb
aad
mov
test
test
ret
pop
mov
sub
test
loop
data16
cmp
jo
sub
outsl
stos
orb
xlat
or
mov
movsb
fs
xor
jno
scas
mov
and
lods
mov
lods
sub
inc
cmpsb
mov
push
in
xchg
movsl
cmp
xor
push
mov
mov
inc
push
icebp
sub
push
shlb
push
sub
and
inc
fs
xchg
sub
mov
cld
adc
add
inc
icebp
lret
cmpsb
and
jns
arpl
push
test
enter
xchg
mov
and
xchg
ret
out
cmc
lret
les
mov
push
insl
pop
enter
sbb
adc
stc
dec
in
jle
xchg
or
adc
sub
jmp
or
call
adc
push
sar
pop
push
popf
rcrb
xchg
inc
fadds
cmpb
enter
pusha
arpl
loopne
push
sub
add
xor
movsb
push
stos
inc
add
xchg
mov
cld
mov
pop
aas
mov
sbb
add
jno
dec
xchg
and
push
cmpsl
jnp
mov
pop
push
mov
lcall
in
lahf
lds
sbb
js
adc
mov
and
push
lret
adc
cmp
pop
jno
out
insb
mov
pop
adc
leave
fadd
add
cld
inc
out
clc
cmp
stos
out
insb
cmp
mov
and
sub
push
xor
jo
mov
adc
push
outsb
outsl
push
mov
lods
test
pop
loopne
push
xchg
pop
adc
or
enter
pop
movsl
fs
sbb
scas
adc
fstpl
mov
sarl
xor
movsb
out
test
inc
inc
jl
inc
or
cmc
sti
loop
loopne
and
sbb
fcomps
push
xchg
jecxz
dec
sbb
lea
lods
repz
mov
insb
sub
sahf
out
add
daa
cmpsl
or
ja
inc
mov
insb
out
jno
push
sar
adc
scas
andl
jno
out
mov
sub
ficoml
imul
enter
sub
mov
xor
mov
jecxz
cmpb
gs
dec
mov
or
lods
xchg
push
icebp
sub
add
and
or
lds
rorl
mov
lret
iret
sbb
sbb
ret
test
stos
jno
cmpl
loopne
push
enter
mov
adc
push
jnp
mov
in
fucomp
lahf
sbb
filds
add
pop
jge
mov
xchg
mov
cmp
jp
push
push
push
adc
cmp
jmp
or
shrl
int
sub
int3
push
sbb
xchg
fadds
cmovl
pop
sar
je
jne
pop
adc
sub
je
loopne
ljmp
insl
jne
stos
out
shl
leave
push
jo
pop
jo
sub
aad
push
outsl
in
clc
in
orb
mov
add
ret
sti
push
fimull
xor
ret
testb
or
in
fcos
ds
or
les
jnp
push
movb
loop
cmp
inc
mov
jae
lods
jo
push
add
push
int3
cmovb
pop
cmp
mov
push
aad
push
insb
jle
ss
xchg
sub
adc
mov
push
add
pusha
inc
rcl
sub
mov
mov
sub
push
mov
dec
sub
or
dec
push
js
cmp
cmpsb
mov
sub
push
adc
int
push
loopne
scas
punpcklwd
pop
push
insb
daa
shr
shld
cs
movsl
pop
or
mov
jne
outsl
dec
sar
add
inc
mov
jae
loop
bound
aaa
adc
push
cmp
loope
jp
mov
fistpl
sub
les
loop
ret
stos
push
aad
cmp
adc
clc
lahf
and
into
sbb
loope
inc
divl
inc
add
push
cmp
mov
push
mov
mov
les
fstl
stos
mov
jb
and
arpl
mov
leave
and
sub
cmc
mov
jp
in
dec
push
push
cs
orl
xchg
fistps
push
jecxz
pop
jae
pop
inc
push
aam
xor
mov
push
dec
pop
adc
xchg
out
xlat
das
int
ds
dec
sbb
xor
sbb
sbb
mov
lea
cmp
into
in
push
inc
and
xchg
xchg
push
xor
mov
mov
xchg
sub
ret
dec
hlt
dec
mov
or
pop
je
jmp
popf
pop
sbb
cwtl
loope
sbb
rcr
lret
jo
shrb
sbb
adc
fbstp
mov
mov
xlat
andb
fsubl
xchg
lahf
and
into
sar
sub
ror
fimull
das
jp
add
cmpsb
cmp
xchg
loop
push
sub
aas
out
fildl
pop
outsl
les
pop
pop
xchg
out
dec
shrl
popa
push
ds
push
pop
xchg
jb
int
in
in
out
jg
in
data16
push
sbb
aaa
lahf
lahf
add
mov
lret
lods
dec
mov
in
pop
xchg
sti
cmpsl
mov
gs
mov
mov
push
repnz
repz
jl
mov
loop
sbb
call
fisttpl
int3
push
aas
inc
testb
outsl
cltd
out
jo
jne
mov
cmpsb
aam
cmp
xchg
insl
cmc
jnp
je
test
push
jb
xor
adc
shr
cmp
pop
stc
addb
cli
push
stos
mov
rclb
call
push
stos
jmp
mov
mov
xor
sub
add
jmpw
pop
outsb
lods
mov
mov
jge
mov
sbb
jno
xchg
insl
xor
mov
add
sbb
fwait
jbe
aad
mov
fwait
je
aad
pusha
mov
sbb
outsl
cmp
inc
fdiv
in
mov
ret
inc
cs
pushf
fistl
repnz
scas
cmp
hlt
sbb
mov
add
test
or
out
mov
sub
xor
stc
push
aad
sub
sbb
push
or
lods
cmp
rcr
aaa
mov
lret
mov
jo
sti
shr
ficoms
mov
cs
inc
scas
mov
adc
inc
mov
inc
test
mov
push
and
mov
outsb
pop
and
outsb
dec
lds
add
xor
sbb
cld
push
std
adc
js
mov
fnsave
repz
mov
out
aad
cmpsl
arpl
call
out
ret
leave
jnp
pop
push
pop
lahf
mov
add
mov
out
test
xchg
lcall
sbb
idivb
push
jnp
xor
and
jp
cmp
dec
dec
test
mov
popf
inc
jnp
sub
adc
xchg
cwtl
jp
mov
pop
sub
push
dec
mul
mov
sbb
idivl
out
inc
scas
leave
imul
stos
fsubl
lods
loop
popa
sub
xor
xor
aam
call
sbb
jmp
and
addl
dec
inc
mov
jno
fisubl
or
rclb
push
out
xlat
add
inc
imul
lods
push
in
xor
loope
out
in
xor
loop
shll
fcmovne
cmp
ffreep
adc
pop
testl
sub
fadds
xchg
je
add
cs
nop
jmp
cmp
rorl
mov
mov
mov
inc
push
jnp
inc
jnp
sub
nop
push
addr16
mov
mov
out
add
sub
and
into
das
pop
popf
outsb
scas
add
gs
loop
dec
popa
jno
mov
jno
cmpsl
movsl
xchg
pop
inc
enter
sarb
dec
loopne
lock
mov
add
loop
insl
xlat
sbb
cmp
es
sahf
sub
aad
mov
push
sbb
bound
jnp
ret
xlat
sbb
xor
pop
cmp
sub
adc
push
push
adc
push
push
sbb
mov
sub
xchg
inc
mov
pop
push
push
ljmp
cmc
jg
add
inc
stos
sbb
or
fdivs
inc
adc
stos
sbb
lcall
decb
lds
cli
mov
mov
outsb
lahf
sub
cmp
enter
mov
neg
dec
jae
jno
mov
jl
sbb
loop
xor
fldt
jno
insl
into
mov
jnp
lock
jle
out
mov
lods
and
pop
ss
movsl
push
and
int3
or
enter
sub
imull
jmp
push
loop
fists
stos
push
inc
xchg
repz
cmp
fisttps
iret
xor
addr16
enter
loopne
enter
jecxz
dec
pushf
shll
jno
or
sbb
fcmovb
into
inc
sub
jecxz
aam
test
jbe
cmpsl
clc
add
inc
jnp,pt
and
loop
shr
loop
cli
lret
movsb
arpl
in
sub
aad
rolb
repz
fdivr
push
outsb
fwait
lods
mov
dec
fsubs
sub
inc
insb
rcll
lea
xchg
add
loop
mov
sti
arpl
test
and
frstor
and
push
add
cld
std
sti
xor
add
and
push
orl
jmp
add
mov
lock
jge
mov
insl
xchg
test
xchg
jne
int3
out
lods
fdivrl
loope
rorb
mov
test
sti
xlat
inc
add
mov
push
stc
pop
xor
dec
lcall
pop
stc
scas
sbb
aas
adc
hlt
insl
lret
mov
push
jb
add
mov
xchg
inc
dec
add
cmp
mov
dec
shl
lcall
adc
mov
cltd
fimuls
jg
pushf
lahf
enter
adc
or
lahf
or
negl
daa
or
adc
mov
mov
xchg
ret
pop
test
jnp
pop
pusha
inc
and
loop
jns
push
jnp
adc
push
or
mov
and
pop
fists
adcl
mov
add
push
cmp
sbb
sbb
pop
test
mov
fisttps
and
dec
and
push
lret
insb
push
and
insb
mov
add
daa
jno
cmp
push
mov
in
adc
add
scas
leave
and
sbb
inc
push
lea
out
push
mulb
insb
je
mov
repnz
add
pop
ja
push
adc
in
mov
idiv
aam
arpl
jo
cmp
cmp
add
xchg
pop
stos
lods
cmp
das
sbb
sbb
add
pusha
in
jge
push
push
xchg
add
movsl
mov
adc
push
inc
inc
inc
xor
add
test
ss
fsubrl
mov
lds
ret
lahf
loop
js
mov
dec
sub
adc
outsl
ja
jno
aad
xchg
inc
cmp
add
xorl
or
shll
xchg
adc
pop
movsl
jp
imul
ljmp
lret
push
leave
call
fstpl
push
lcall
push
mov
aam
pop
add
add
xchg
add
xchg
add
out
clc
push
pop
push
idivl
xchg
push
mov
cmp
int
mov
lock
xor
cmc
mov
pop
push
inc
jo
stos
orl
push
mov
ss
das
fisubrl
repz
notl
cltd
mov
xchg
shll
mov
imul
scas
xor
push
cmc
mov
loop
aas
dec
fists
inc
cmp
adc
shl
iret
mov
pop
fistl
mov
mov
inc
pop
ss
mov
mov
adc
mov
cmp
call
imul
sbb
pusha
fldl
inc
test
outsl
roll
cmp
lcall
shr
jno
int
cmp
ja
pop
dec
push
loopne
xchg
pop
addr16
outsl
sarl
dec
in
icebp
jmp
dec
insb
enter
jecxz
scas
icebp
popa
ret
iret
push
test
movhps
push
cs
add
shlb
jo
pop
jecxz
jns
inc
jo
loope
outsb
outsl
loop
pop
sahf
cmpsb
xor
fidivrl
imull
inc
adc
in
hlt
pop
aaa
jp
adc
mov
repz
cmp
daa
das
imull
and
mov
aad
dec
jp
in
xchg
sbb
movsl
mov
bound
xor
or
ret
popf
test
jb
aam
inc
pop
add
mov
sub
inc
aas
mov
sbb
push
test
xchg
cs
testl
lcall
inc
jp
fisubl
mov
xlat
pusha
mov
xchg
ljmpw
mov
inc
dec
jnp
lcall
fnstsw
add
sub
test
sti
in
cmp
and
cmp
negl
es
fwait
scas
mov
leave
dec
lods
sbb
inc
cld
loop
das
daa
push
push
fcoms
xchg
fcomps
out
and
shll
xor
mov
push
rolb
cmp
pop
insl
loop
nop
dec
les
sahf
popa
icebp
dec
mov
push
sti
das
mov
push
adcb
dec
xlat
ret
xchg
adc
sbb
mov
enter
lods
jno
leave
mov
cmpsb
cmp
mov
xor
push
scas
cltd
in
mov
push
pop
xchg
add
jmp
div
dec
outsl
xchg
call
negl
mov
pop
sbb
stos
push
jne
repz
sbb
xor
leave
pushf
sahf
mov
push
popf
dec
lret
testl
pushf
fstpl
insl
sub
lock
out
inc
mov
out
or
jp
jge
and
dec
sahf
add
gs
sub
dec
fucomp
pop
lds
mov
sbb
xchg
sarb
jp
sbb
out
insl
inc
xor
shrb
xchg
pop
mov
pop
decb
nop
mov
cmc
or
sub
movsl
xchg
dec
cmc
add
ss
dec
rsm
ret
arpl
dec
jns
and
outsl
jge
notl
add
pop
leave
fiadds
pop
mov
jg
lods
int
cmpb
inc
jae
mov
bound
aad
push
sahf
push
sbb
dec
sahf
push
add
iret
sahf
adc
mov
lds
hlt
clc
xchg
push
push
or
pop
push
sbb
in
out
aas
sbb
cmc
fisubrl
test
out
jp
out
pop
lods
pop
pop
mov
sbb
data16
sub
sub
sbb
ja
test
pop
push
sub
sbb
mov
jae
cmc
mov
push
pop
or
cmp
inc
fs
adc
push
dec
pop
inc
bound
int3
dec
jno
mov
test
push
lcall
cltd
push
xchg
fidivrl
xor
lods
xchg
fdivs
sahf
inc
xchg
pushf
test
call
scas
rcrl
ss
inc
js
or
loop
add
adc
dec
sub
push
and
shufps
out
cmp
aaa
pop
dec
jae
ret
and
das
push
sbb
sub
mov
lcall
imul
inc
addr16
or
data16
dec
les
adc
sub
lea
or
mov
jp
pop
out
lea
sbb
adc
testb
xor
data16
fnstsw
std
hlt
dec
add
testl
mov
subl
scas
cmp
out
sahf
jns
rcll
mov
xor
int
fdivrs
outsb
and
mov
adc
gs
push
repnz
je
mov
call
xchg
fs
sbb
and
push
adc
je
aad
aad
lea
rclb
xchg
ficomps
mov
loop
gs
popa
in
dec
xor
gs
inc
jne
lcall
xlat
lcall
mov
mov
pop
fwait
adc
xchg
adc
xor
cld
enter
fidivrl
leave
adc
adc
movsb
inc
test
sub
shrl
and
loopne
xlat
insb
lods
mov
push
mov
pop
mov
inc
sub
nop
aam
xchg
inc
add
cmp
sahf
scas
xor
xchg
loopne
mov
push
xor
adc
cltd
adc
in
insl
dec
lcall
and
sbb
movsl
and
leave
ja
adc
imul
lcall
xchg
aas
xor
leave
mov
loop
outsl
and
clc
fwait
les
faddl
fisubl
jg
inc
shrl
cs
jp
leave
in
add
dec
jno
inc
mov
outsb
not
sbb
adc
inc
adc
and
sbb
push
ds
jl
flds
lds
movd
jnp
sbb
and
adc
add
nop
int3
psubw
mov
shll
or
or
popa
and
adc
sbb
add
stc
subl
cltd
push
cmp
stos
shlb
mov
pop
cld
enter
push
pop
jg
push
lahf
mov
in
test
insb
pop
xor
sub
mov
mov
fisttpl
stos
in
outsb
sub
sbb
das
cmc
add
or
rorl
das
xchg
subl
mov
mov
add
adc
dec
mov
into
dec
sbb
jg
xor
xchg
sbb
insb
lods
inc
pop
jb
sahf
dec
mov
dec
scas
lahf
loop
and
movsl
sub
push
push
mov
out
pusha
aam
mov
jmp
push
pop
out
int
fistpl
adc
and
pop
loop
cmp
and
pusha
pop
cmp
cmpsl
jl
add
repz
jae
push
fistl
pop
stc
test
mov
or
iret
push
shll
or
sub
scas
sub
nop
sbb
fiaddl
call
cmpsl
jecxz
loop
lods
inc
jbe
out
aaa
mov
stc
inc
fistpll
xchg
xchg
lcall
pop
idivb
cmp
popa
sbb
cmpsl
pop
loop
dec
addb
mov
add
push
dec
ja
pusha
push
cmp
adc
call
mov
pop
insb
mov
pop
xchg
ret
cmpb
jno
adc
cmpsb
mov
push
mov
dec
ret
push
pop
adc
imul
negl
loop
inc
ja
sub
stos
mov
pushf
dec
xchg
mov
stos
dec
es
xlat
and
scas
adc
aad
or
push
rcl
jne
das
test
jp
popf
rclb
ljmp
cld
sub
call
ljmp
ja
add
sbb
xor
sbb
or
repz
mov
aam
jne
adc
cmp
xchg
push
sub
push
pop
xchg
lods
push
lret
pop
ja
pop
jno
add
pushf
sub
js
dec
arpl
sbb
dec
lahf
adc
mov
stos
lahf
fwait
shll
stos
jo
enter
xor
jg
adc
and
loop
jmp
fsubrs
cmpsb
cmp
xchg
es
dec
mov
cmpb
out
orb
sub
aam
loop
out
in
mov
xor
dec
cmp
into
xchg
xor
pop
movl
sbb
add
sub
in
fsubl
addr16
pop
insb
scas
xchg
pusha
adc
enter
mov
stc
repnz
sbb
lahf
mov
sbb
jg
xchg
scas
addr16
and
les
cmp
in
jnp
cld
xchg
mov
jno
ret
or
mov
pop
sbbl
or
out
push
add
aad
jecxz
jge
aam
jp
incl
int
inc
outsl
pop
lret
mov
cs
mov
std
std
ljmp
mov
push
mov
jae
sahf
mov
data16
inc
cmc
push
fisubrl
leave
dec
cmpsb
xchg
je
loop
push
es
push
add
inc
cs
lods
lods
adc
loop
adc
add
orb
cs
jp
add
or
xchg
push
pop
call
ja
aas
aam
mov
in
inc
iret
mov
inc
out
dec
fadds
shrl
insl
cmc
dec
lods
sub
shlb
testl
lcall
and
insl
lret
pop
lahf
push
mov
repnz
call
xor
rcrb
jg
dec
add
icebp
mov
mov
lret
adc
jb
lcall
jecxz
stos
push
inc
adc
push
test
xor
inc
adc
sbb
cltd
add
out
int
push
xor
pushf
mov
adc
add
adc
mov
jle
cli
xlat
shr
cmp
xchg
jmp
bound
bound
out
pop
call
lea
xor
lret
mov
aam
mull
test
sub
cwtl
or
add
pusha
es
fstps
jne
decb
loop
pushf
or
dec
lret
inc
xor
cmpsb
sub
xchg
push
nop
jnp
hlt
sub
lret
loopne
and
mov
test
mov
lret
jne
mov
cltd
jne
fstps
ljmp
arpl
sub
loop
in
rcrl
xchg
out
enter
mov
xlat
xor
scas
xchg
in
or
lds
pushaw
js
cmp
adc
out
jnp
adc
mov
pushf
jecxz
xchg
xchg
aad
mov
jne
movsb
sahf
pop
inc
jp
fadds
icebp
scas
loop
xchg
jae
pushf
gs
divb
push
fst
and
mov
int3
mov
adc
adc
and
insl
pop
scas
lods
popf
fucom
stos
insl
or
dec
add
ljmp
shl
nop
cli
or
add
mov
imul
repz
popf
adc
sub
sbb
clc
imul
fucom
out
mov
add
int3
push
sbb
dec
mov
mov
push
jns
clc
stos
out
sbb
neg
push
mov
sub
jecxz
pop
clc
mov
dec
inc
mov
popa
test
rorb
jg
jnp
xorl
outsl
mov
xor
or
push
sub
sti
xchg
dec
push
jl
sti
mov
push
inc
fmul
orb
into
mov
inc
call
loop
jp
je
and
sub
mov
ja
mov
lea
add
mov
mov
sbb
or
popa
xchg
sub
inc
mov
enter
push
and
or
imull
stos
sub
fisubs
pop
outsb
inc
jp
pusha
call
out
and
fstps
in
clc
cmp
in
fstl
outsb
enter
mov
pop
jo
mov
in
sbb
scas
sub
int
push
lret
cmp
sub
test
mov
dec
pminsw
jle
roll
out
jno
fs
rol
call
jp
gs
test
mov
mov
or
sub
sbb
dec
fistpl
jp
jns
and
test
mov
and
mov
bswap
cmp
and
xor
xor
and
xchg
or
pop
fldenv
lds
lcall
add
aam
pop
stc
xor
ficompl
jp
jecxz
push
nop
xchg
pop
addr16
iret
enter
cld
lock
xor
sahf
cmp
sahf
pop
mov
mov
add
addr16
mov
adc
jl
fldl
sbb
jmp
mov
cmp
or
jne
inc
dec
sahf
pop
push
aam
mov
xlat
pop
adc
push
inc
outsl
add
jae
enter
dec
ds
lahf
cmpsl
idiv
cmp
insl
push
add
cltd
enter
mov
push
test
out
mov
clc
rcrl
mulb
mov
mov
cmp
loopne
inc
xchg
mov
aaa
or
mov
lds
fbld
rcl
and
repnz
mov
sbb
outsb
xor
mov
jl
into
push
pop
cs
dec
jno
and
lret
filds
inc
xor
push
xchg
or
mov
sbb
jge
sbb
adc
add
push
les
in
test
mov
adc
pop
push
pop
xchg
mov
pusha
int3
cmp
pop
jp
xor
push
lahf
ds
test
inc
push
cmp
dec
mov
ljmp
xor
pop
loop
fmul
push
jo
loope
mov
mov
in
popf
lcall
xor
cmp
cs
pushf
rep
and
push
jnp
mov
mov
xchg
lahf
jle
push
inc
call
dec
jnp
ret
jg
dec
out
lret
imul
push
cmp
xchg
xchg
loop
sub
mov
iret
scas
sub
ret
mov
mov
bound
mov
outsl
xlat
sub
jg
loop
cs
stc
dec
add
and
icebp
call
mov
mov
scas
out
dec
and
sbb
xchg
decl
stos
mov
sub
shrb
adc
adc
and
incb
mov
rep
pop
push
add
jmp
fmull
xchg
aaa
mov
ljmp
imul
mov
xchg
insb
or
jp
out
fsts
xchg
fdivrs
sbb
cld
jp
faddp
add
ficoms
push
lds
mov
mov
push
lock
pop
dec
call
iret
dec
ds
outsb
fwait
lods
out
push
push
push
outsl
insb
jge
mov
or
pmulhw
es
jb
pusha
sub
repz
fwait
daa
mov
mov
aas
adc
adc
std
and
lgs
aam
or
adc
int3
inc
jp
mov
mov
popf
or
divl
and
dec
out
adc
cmc
dec
xor
outsb
cwtl
mov
out
pop
jne
sbb
mov
fdivrl
test
jns
and
add
outsb
or
pushf
dec
in
jnp
xchg
pcmpgtd
loop
rcrl
les
fcompl
and
fs
pusha
shll
lods
or
push
or
mov
rcrb
jle
bound
call
movsb
pop
lds
ret
sbbb
jecxz
jno
push
roll
fldt
imul
cmp
ljmp
sbb
clc
cltd
mov
lahf
aam
in
mov
nop
sbb
cli
sbb
emms
icebp
push
sub
xor
xor
shll
jbe
addr16
bound
sub
cmp
add
outsb
popf
push
test
stos
int
push
push
push
xchg
sarb
mov
add
xor
loopne
jo
mov
mov
pushf
pop
out
push
ds
fisttps
inc
aad
gs
mov
mov
cmpsb
xchg
jmp
adcb
inc
pop
js
jns
mov
mov
sarl
or
fmull
inc
call
out
xor
mov
push
dec
lds
test
adc
fsubrl
mov
int
push
cmc
imul
xor
int
adc
mov
pop
sub
jle
sti
lods
or
sub
sub
lods
push
mov
orb
jbe
jle
xchg
arpl
mov
jno
mov
jg
or
jg
add
lds
cmp
stc
lods
pop
std
mov
scas
cwtl
and
add
mov
in
xchg
loope
sahf
sahf
mov
adc
aam
bound
xchg
sub
mov
sbb
mov
add
dec
out
push
int
pop
and
jnp
adc
mov
pop
mov
adc
push
mov
scas
adc
cmpsl
leave
loop
sbb
dec
pop
fwait
pop
fcoml
dec
test
lea
ficoms
rorb
std
movsl
pop
adc
or
mov
sbb
jmp
movsb
xchg
mov
std
mov
pop
pushl
inc
mov
movsb
out
mov
sbb
out
sbb
add
mov
add
enter
xor
daa
mov
mov
sbb
jmp
dec
sub
pop
shl
add
mov
daa
sbb
je
mov
push
in
pop
sahf
push
inc
popa
push
xlat
sub
push
stos
lret
mov
cmp
cmp
jp
xchg
push
adc
cmpl
loop
ret
jecxz
aad
jbe
call
pop
xchg
sbb
dec
add
out
lods
into
sbb
leave
jae
pop
sub
aaa
pop
sahf
push
out
pop
or
sbb
outsb
cwtl
push
sub
inc
aam
gs
add
mov
movsl
or
movsl
xchg
add
jg
add
ret
pop
in
push
add
jle
add
lock
xor
mov
mov
iret
jp
cmc
mov
gs
out
aam
shll
dec
mov
cwtl
loop
jns
pop
in
mov
mov
out
jnp
subl
add
sub
sub
mov
mov
xlat
dec
sub
test
mov
scas
pop
add
xchg
sbb
popa
in
or
xchg
in
inc
sbb
lds
mov
ret
or
inc
pop
aas
sbb
lret
adc
mov
testl
mov
mov
je
or
test
fsubl
mov
rolb
aad
lret
xchg
jo
and
test
testl
push
repnz
jne
push
or
cltd
out
sub
loop
push
not
dec
fwait
mov
cmpsb
cmc
push
push
push
push
test
nop
xchg
cmp
jne
adc
xchg
scas
pushf
fld
sahf
jnp
subb
adc
out
lds
xor
xlat
aaa
jge
invd
test
cmp
xor
mov
xchg
mov
push
jecxz
rcrl
aam
iret
xlat
roll
jbe
mov
or
pusha
add
pop
data16
sarl
push
jg
xor
and
mov
aas
xchg
in
xor
xor
jo
push
and
push
rcrb
sub
mulb
xchg
jp,pt
mov
icebp
mov
out
adc
pop
push
int3
out
loopne
jge
add
mov
pop
mov
fcoms
fsubl
xchg
push
repnz
lea
jno
adc
mov
cmp
add
jp
shl
cltd
in
inc
cmp
lods
neg
fistps
pop
aad
fistpll
jecxz
cli
push
sarl
jne
in
add
or
bswap
xchg
inc
dec
push
xchg
outsb
ljmp
push
jnp
jbe
adc
imul
pop
loop
arpl
inc
fucomp
add
mov
das
or
or
out
ret
sbb
mov
lahf
add
in
out
adc
add
into
dec
jnp
xor
lds
pop
mov
mov
add
sub
shrl
pop
sbb
xlat
scas
push
or
roll
jae
icebp
mov
cmc
movsb
dec
xor
mov
test
cmp
in
jg
sbb
jp
mov
jnp
jnp
push
mov
das
bts
push
adcb
xchg
push
stos
xchg
pop
pop
cmp
push
add
das
fldl
mov
rcrb
loop
jmp
mov
add
lock
aas
enter
ja
sbb
mov
cmp
xchg
popf
je
push
or
mov
out
adc
pop
stos
cmp
cli
fisubrs
int
lret
adc
dec
shl
mov
test
lahf
fxch
jp
daa
es
push
out
push
cmp
fnclex
rep
xchg
jnp
xor
dec
adc
mov
inc
inc
add
push
pop
icebp
pop
sbb
aam
pop
repz
dec
pop
inc
and
or
popf
pop
fwait
push
stos
lock
or
outsl
stc
lahf
sbb
roll
mull
fldpi
mov
mov
out
push
je
inc
pop
out
imul
int3
push
inc
test
stos
dec
int
enter
sub
ret
pop
out
or
loop
xchg
xchg
movl
sub
dec
inc
outsb
mov
sub
sarb
loop
push
jmp
in
push
fstps
pushf
in
sbb
es
cmp
shlb
push
sub
leave
es
jne
add
leave
out
push
mov
or
pushf
sti
mov
xor
pop
push
pop
mov
ret
lret
sub
dec
sbb
add
movb
inc
in
test
jg
enter
pop
repnz
push
ret
jp
cmpsb
mov
adc
fcompl
hlt
add
jge
sbb
test
aam
popf
jnp
cwtl
gs
adc
sbb
add
mov
add
jp
scas
insl
mov
jne
test
ret
mov
xlat
xchg
fwait
mov
push
popa
inc
push
xor
dec
push
fcmovb
mov
imul
jnp
mov
dec
adc
dec
pop
jno
aam
jnp
fists
mov
lcall
sbb
push
jle
cmp
int
pop
and
mulb
mov
out
cmc
and
push
fistl
adc
daa
dec
jp
pop
push
push
jnp
pushf
push
fs
add
and
into
push
rorb
pushf
and
data16
adc
dec
push
push
xchg
jae
push
xor
sub
mov
inc
ret
inc
or
imul
add
fstl
test
out
mov
cmp
pop
cmc
and
call
mov
xor
daa
call
add
lods
out
imul
mov
das
dec
in
pop
jb
adc
outsl
cwtl
mov
mov
pop
hlt
gs
mov
mov
push
mov
push
dec
dec
sbb
add
ret
arpl
adc
jmp
mov
adc
mov
js
cli
sub
or
jne
xor
bound
jmp
mov
inc
iret
or
hlt
or
leave
mov
pop
out
sbb
add
idiv
arpl
sbb
push
loop
cmp
jle
fistl
sbb
add
push
pusha
pop
faddp
repz
sub
sbb
das
test
add
outsb
or
jl
sub
jp
mov
xchg
popa
shrl
fwait
sub
push
push
lods
xchg
and
ljmp
or
dec
testb
mov
xor
fstps
sbb
imul
push
jno
clc
movsbl
add
push
dec
lds
divb
cltd
test
jno
fisttps
jbe
setno
mov
sub
ljmp
in
fidivs
lret
int
cmp
sub
repz
enter
sbb
push
daa
sub
sub
cmc
cmc
mul
and
mov
int
and
xor
jecxz
mov
fwait
lahf
or
popa
ret
mov
test
mov
dec
mov
push
les
sbb
cmp
hlt
aam
sbb
inc
aam
mov
shl
push
pop
subb
mov
add
push
mov
or
insl
popl
xlat
adc
aas
or
cmp
xchg
and
mov
xchg
and
inc
loop
xchg
movsb
sbb
popf
lret
pop
mov
adc
xor
loope
jmp
cmp
int
lea
testl
imul
test
add
imul
rcll
test
fldenv
xor
sub
push
adc
sahf
xchg
out
sbb
or
insb
pop
inc
scas
repz
scas
push
inc
adc
xchg
inc
or
ja
dec
xchg
fistpll
adc
adc
lock
insl
movsb
xchg
cmp
mov
leave
xor
loop
sub
pop
ret
xchg
popf
cmc
jmp
fdivs
jne
inc
cmp
rorb
inc
push
sub
inc
dec
enter
add
imul
mov
pop
das
pop
mov
cmpsl
in
sub
add
or
aaa
rcrl
sbb
mov
popa
push
sbb
sub
mov
mov
lock
lock
dec
pop
mov
jo
and
out
jge
push
aad
aas
sahf
scas
test
jnp
and
ja
aad
das
add
cmp
and
jmp
cld
push
sub
sbb
xchg
add
jbe
xchg
mov
es
push
mov
ret
daa
icebp
fmul
lcall
and
iret
fwait
pop
mov
sub
pop
cmpsb
xorb
jnp
or
pop
inc
test
add
mov
add
out
aam
xchg
mov
adc
rorl
pop
pop
out
xorb
fs
and
lea
jp
call
push
and
inc
js
sbb
aaa
gs
jbe
pop
aas
mov
pop
das
jge
decl
sub
cmp
jl
imulb
loopne
cmc
std
lods
outsl
adc
repz
nop
pop
cltd
ss
push
loope
pop
dec
sti
stc
push
xor
sbb
das
imul
ss
rcl
pop
or
lds
adc
inc
push
cmp
outsl
mov
jmp
mov
push
jb
mov
mov
xchg
adc
fsubr
arpl
mov
imul
addr16
fnstenv
ja
jecxz
mov
pop
imul
mov
inc
inc
cmp
jl
aam
sbb
mov
pop
mov
leave
sbb
imul
jp
push
cmpb
inc
outsb
rcrb
cwtl
jae
add
pop
sbb
shr
and
or
push
cwtl
rcll
cmp
inc
lods
paddd
adc
lock
mov
out
pop
dec
xlat
xor
sti
pop
sub
dec
mov
inc
mov
pop
jo
into
cmp
mov
inc
mov
popf
pop
jne
lahf
dec
mov
aad
jge
sbb
mov
out
and
mov
aad
add
cmpsb
mov
adc
push
sahf
push
cli
sbb
push
aaa
mov
repnz
sbbl
aad
mulb
in
sbb
dec
mov
clc
cmp
pop
push
adc
cmp
cmp
mov
subb
xchg
or
loop
jge
mov
fcmovu
insl
scas
jg
fisttpl
aas
dec
adc
cmpsl
xchg
lds
lock
push
add
iret
and
dec
les
adc
cwtl
adc
ljmp
sub
sub
test
outsl
cmp
jo
sub
and
push
stos
push
sbb
add
gs
inc
mov
pop
movsb
jbe
mov
cmp
mov
cmpsb
and
addr16
push
mov
mov
enter
jns
int
or
out
inc
or
divb
pop
jbe
sub
dec
dec
sub
pop
sar
mov
clc
cmp
scas
adc
stos
lcall
shl
iret
sbb
adc
xchg
mov
pop
sub
add
add
pop
inc
xchg
leave
dec
xchg
lcall
dec
mov
push
sub
popf
fsubrp
fsub
testl
sub
test
decb
sub
daa
sub
cmp
insl
jg
mov
sti
xor
cmpsl
loope
jno
sub
lahf
loop
xor
and
mov
lret
fucom
jae
and
mov
in
cmp
mov
push
mov
lea
push
xor
test
sbbb
iret
aad
adc
decl
mov
test
xchg
cmp
stc
gs
dec
xor
leave
cmp
ret
fbld
call
jl
scas
pop
sbb
cwtl
cltd
xor
mov
jno
jne
out
inc
push
iret
jmp
add
test
cs
mov
je
inc
push
divl
mov
xor
add
out
adc
mov
stos
aad
pop
inc
mov
adc
and
mov
cmpsl
cltd
aad
xchg
ret
mov
pusha
test
or
mov
loopne
sub
scas
lock
call
sar
sub
mov
and
outsl
inc
shrl
jmp
fwait
sub
xchg
cld
repz
xchg
and
stos
adc
lahf
pop
mov
mov
dec
pop
sub
js
mov
outsb
dec
push
dec
sbb
xor
cld
les
or
aam
xlat
es
push
mov
or
xchg
adc
push
add
pop
push
loop
mov
into
sub
sbb
loope
scas
dec
fists
jns
scas
jo
int3
lds
adc
loop
xchg
mov
sbb
not
xchg
sbb
jg
cs
scas
test
pop
sbb
enter
push
pusha
xlat
leave
ret
lahf
mov
loop
fsts
inc
sub
xchg
enter
out
sub
mov
push
jnp
pop
inc
cli
loop
nop
mov
outsl
loopne
pop
sub
push
mov
xchg
movsl
ljmp
mov
enter
frstor
insl
insl
inc
inc
add
aam
mov
pop
ds
aas
inc
adc
mov
leave
pushl
outsb
in
xlat
add
xor
xor
addr16
mov
enter
mov
mov
js
pop
sahf
mov
sbb
arpl
xchg
push
cli
mov
jge
orl
ds
mov
cmp
adc
ja
addr16
add
mov
cli
sbb
insb
xchg
rorl
aam
pop
repnz
sbb
out
in
inc
fs
pop
or
nop
out
aad
lcall
adc
mov
mov
push
push
add
je
out
push
faddl
push
loope
pop
jnp
sbb
mov
sbbb
sub
push
and
dec
mov
enter
xchg
fcmovu
lods
icebp
or
sbb
push
sbb
mov
mov
outsb
das
js
mov
insl
ss
out
inc
jne
push
adc
inc
xchg
adc
sub
mov
fisttpl
and
adc
mov
into
aad
mov
sbb
dec
out
adc
mov
popl
adcl
xor
shlb
xor
out
jle
test
imul
pop
pop
push
or
mov
push
jnp
dec
inc
sub
sbb
mov
xchg
sub
push
dec
or
data16
mov
aas
push
mov
sbb
cltd
adc
push
add
movsl
rclb
enter
das
dec
mov
pop
enter
or
xlat
jg
lahf
push
add
dec
sbb
push
popa
sbb
fbstp
adc
cmp
mov
inc
sbb
mov
mov
inc
les
dec
lds
popl
subb
out
pop
movsl
lods
jae
loopne
popa
xchg
testl
iret
pop
inc
fstp
pop
fidivrl
jg
jmp
js
imul
lcall
sub
adc
cmp
pop
mov
sarb
lahf
xchg
hlt
and
jmp
mul
xchg
sub
sbb
mov
ror
and
adc
outsl
fdivrl
cmp
push
add
sbb
loop
lock
stc
test
sahf
add
rcrb
inc
and
sub
mov
pushf
cmp
sub
js
mov
sub
cmp
scas
cs
adc
inc
push
jecxz
adc
out
jp
cld
lock
adc
sbbl
xchg
out
xor
enter
daa
jmp
outsb
int
xor
pop
loope
xchg
inc
enter
cmp
lret
push
lds
cltd
clc
cmp
int
lret
test
inc
mov
xchg
mov
mov
or
mov
push
iret
add
aad
sbb
inc
decb
sub
add
and
cltd
lock
out
mov
dec
cmp
push
or
mov
out
jmp
cmp
sub
sub
add
orl
pop
daa
push
test
cmp
sub
dec
adc
sbb
jnp
mov
xchg
pop
notb
adc
inc
cvttps2pi
sub
push
rcr
enter
int
sbb
mov
out
adc
cmp
or
stos
sub
mov
jge
scas
popw
and
pop
call
cmp
imul
rcll
sbb
sub
cld
sbb
aad
in
and
mov
add
add
xchg
mov
bnd
cmp
adc
fists
dec
sub
lea
loope
xor
adc
cs
outsl
bound
lret
sub
test
gs
icebp
adc
adc
sub
scas
add
jne
mov
fucomi
mov
xorb
sti
stos
push
addr16
loope
inc
dec
ficompl
mul
mov
pop
vmwrite
jno
sbb
mov
inc
xor
imulb
push
gs
lods
leavew
xchg
and
sub
arpl
sbb
std
enter
mov
loope
xchg
test
adc
sub
insb
leave
adc
aas
ds
out
or
pusha
rcr
enter
mov
std
mov
dec
mov
dec
add
int3
inc
fucom
test
loop
mov
pop
dec
iret
roll
xchg
adc
movb
rcll
cmpb
std
mov
pop
adcb
out
rolw
les
push
inc
test
insl
xor
jnp
or
add
dec
pop
xchg
add
add
lcall
out
mov
sub
in
mov
fwait
test
sahf
sbb
out
push
test
xchg
cmpsb
call
add
fdivrl
je
sbb
daa
mov
push
and
sbb
fsubp
xchg
mov
scas
cmp
fldenv
push
dec
insl
xchg
adc
popf
pop
repz
jle
or
lods
push
lds
gs
xor
inc
fstps
sbb
mov
or
in
andb
pop
aaa
adc
xor
sti
in
sbb
int3
enter
cli
push
dec
pop
popf
das
ficomps
out
mov
mov
enter
or
test
lea
sarb
and
mov
xlat
adc
jae
xor
test
adc
push
push
ss
pop
jne
iret
push
ret
test
xchg
call
or
repnz
mov
gs
adc
cmp
mov
mov
xchg
adc
pop
pop
test
pop
incb
iret
fwait
cmp
xor
and
inc
lds
jp
test
or
sub
add
loop
mov
je
jb
loopne
push
repnz
rolb
negl
add
push
jmp
enter
sub
subl
push
imul
pop
mov
in
insl
push
int3
hlt
jnp
push
xor
or
lock
add
pop
cli
cmpsl
gs
fistpll
or
in
inc
push
mov
dec
xlat
mov
xor
push
aam
xor
lea
push
add
dec
cmpsb
call
sbb
aad
mov
sub
inc
xchg
daa
loop
pushl
pop
add
sbbb
adc
out
loop
daa
cmp
xor
xchg
xorl
arpl
inc
push
daa
mov
or
add
mov
jnp
arpl
fstl
int3
data16
dec
mov
xchg
test
jnp
or
push
test
xor
mov
mov
in
test
sbb
loope
cmovbe
pop
loop
inc
mov
xchg
cmp
sbbl
adc
adc
mov
lahf
mov
inc
out
cld
in
or
jo
push
xor
sub
lahf
or
mov
mov
dec
sub
cmc
mov
add
aad
jno
dec
push
sub
dec
fldenv
push
out
pop
fs
testb
je
dec
pusha
sbb
adc
in
jo
divb
sub
lret
shll
cli
addb
stc
push
adc
fadds
adc
arpl
bound
gs
adc
or
cs
add
sub
adc
pop
cmp
stc
pop
mov
rolb
loop
inc
iret
xchg
jne
sbb
test
or
dec
cmpsl
adc
adc
sbb
xchg
insb
cmp
sbb
cmc
pop
loop
inc
lret
sbb
arpl
mov
mov
add
iret
cmp
add
int
imul
repz
scas
pop
iret
add
loop
aam
sbb
adc
mov
xor
and
leave
adc
jmp
jp
cmp
add
sub
imull
mov
in
fs
inc
aam
ja
cmp
pop
add
inc
push
push
inc
pop
dec
and
out
shll
and
adc
pop
add
jecxz
or
pop
jnp
push
cmpsl
sub
push
adc
sub
loopne
insl
push
dec
add
dec
rorl
mov
lahf
xchg
xchg
ffreep
push
mov
fs
je
push
std
out
sti
mov
inc
dec
and
out
mov
fnstenv
in
out
mov
adcl
push
aad
jg
sahf
inc
in
or
mov
dec
mov
adc
inc
inc
xchg
push
pop
xchg
adc
or
xor
lods
adc
in
mov
jecxz
pop
mov
sbb
aam
sub
push
or
enter
push
ret
and
pop
mov
jbe
repz
sub
xchg
popf
shl
jp
mov
adc
xchg
and
sbbl
mov
cmp
bound
jmp
or
scas
adc
insb
andl
das
out
fidivrs
enter
add
mov
mov
add
or
aad
push
jae
xchg
shll
push
aam
xchg
jne
or
loop
and
mov
adc
push
sub
cmp
cmp
sub
aad
xchg
xor
in
out
mov
pushf
xor
jne
test
pop
clc
mov
push
pop
cmpb
xchg
enter
pushf
cmp
xchg
mov
ret
adc
in
cmp
push
sub
jo
ja
dec
popf
inc
inc
pop
int
jmp
clc
cmp
insb
cmp
out
in
mov
sahf
adc
fcoml
inc
fs
xlat
popf
outsb
pop
iret
push
mov
xchg
in
imul
pop
sarl
pusha
enter
test
jb
or
dec
fadds
enter
dec
add
jle
cmp
or
js
fwait
mov
arpl
in
cmp
in
sub
repz
cmovbe
push
and
popf
cmp
mov
jne
leave
pop
xchg
imul
aam
lcall
xchg
out
jno
push
add
shlb
dec
out
sub
aas
lahf
adc
dec
rcrl
lret
lahf
aad
jno
divl
sarb
mov
mov
leave
inc
or
sbb
aaa
popf
jns
icebp
xchg
repnz
sub
rol
mov
mov
ljmp
out
es
jl
xlat
loop
rorb
and
xchg
js
imulb
push
outsl
pop
popa
add
cmp
adc
push
arpl
fsubs
mov
lret
out
test
leave
ds
out
dec
outsl
push
adc
mov
fcoms
je
decl
and
div
lods
push
fdivrp
add
xchg
jns
scas
cmc
ret
adc
stos
imul
lcall
sbb
jg
add
arpl
dec
push
test
popf
loop
mov
mov
scas
iret
add
rcrl
jnp
xchg
mov
pop
scas
scas
addl
or
mov
jns
mov
loop
scas
jne
xchg
int3
fdivrl
jno
and
imul
rol
adc
fwait
inc
pop
inc
iret
jb
bnd
movsb
and
jne
push
xchg
pop
sub
dec
mov
out
add
mov
call
sbb
inc
aas
and
xchg
cmp
in
das
scas
mov
mov
push
or
loop
cmp
mov
sbb
mov
div
add
lods
and
ja
xchg
push
in
repnz
popa
inc
test
stos
lret
pop
lahf
add
or
mov
push
dec
daa
xchg
lahf
ds
sbb
loop
fidivl
push
loopne
frstor
mov
cmp
push
xor
dec
jl
adc
jnp
cmp
pusha
mov
fwait
mov
int
add
cs
mov
psrad
pusha
mov
or
aaa
subb
lds
pop
sbb
add
xlat
ja
inc
inc
cmp
xchg
adc
cmpsb
and
or
xor
xchg
cs
enter
jnp
aas
xchg
fucomp
add
push
fs
imul
push
bound
stos
mov
aam
into
jmp
rcll
xchg
pop
pop
push
add
or
mov
jp
in
loopne
dec
imul
and
insb
sbb
add
xor
popa
mov
cmpsl
sbb
push
sub
xor
sarb
push
push
int
sub
subl
or
sub
test
mov
hlt
xchg
pop
imul
jp
movsl
popa
pushf
cmpsb
or
push
xchg
jb
lcall
sub
jg
sbb
adc
lods
push
add
jmp
push
and
dec
es
sahf
es
popa
imulb
or
ds
add
mov
pcmpgtw
jae
fsubs
fiaddl
andl
ret
cmp
test
addb
fwait
aam
ret
add
testl
dec
rcrl
mov
in
clc
addb
add
mov
cmc
ficomps
leave
mov
iret
les
jb
push
inc
out
ret
jns
fwait
or
cmp
iret
loop
shlb
cmp
out
imul
clc
loope,pt
dec
mov
out
out
or
xchg
loop
daa
push
dec
cmp
popa
pop
lret
mov
sub
mov
mov
pop
enter
fdivrs
cs
in
mov
cltd
js
jno
lods
push
or
fstpt
jno
mov
loop
aam
xchg
lods
jp
shrl
repz
fneni(8087
xchg
lahf
addl
sub
ret
loopne
jg
inc
rorb
mov
in
jmp
in
add
mov
sbb
sbb
or
jo
push
push
mov
test
xor
outsl
insl
xchg
cmp
inc
pop
es
mov
and
nop
mov
push
iret
add
rolb
inc
xor
insb
inc
jge
pop
adc
test
cmpsl
mov
imul
add
adc
test
lock
imulb
shl
divl
xlat
or
rorb
xchg
mov
sub
xor
mov
inc
iret
sub
lock
jmp
and
test
sub
cmp
shll
and
sbb
inc
lahf
dec
xchg
ds
js
push
jne
fnstcw
andl
sbb
in
or
cmovp
cmc
sub
rorb
mov
sbbl
mov
test
mov
pusha
aad
ds
sti
jg
rcll
pop
jo
int
shrb
sbb
adc
mov
adc
adc
jns
int3
xchg
xchg
cmp
in
fstp
xor
scas
push
pop
dec
mov
push
push
leave
xor
fistl
stc
out
inc
add
jo
icebp
sti
test
cmp
mov
jo
lds
or
pop
mov
adc
ret
xchg
fsubrl
lahf
push
decb
and
adc
negl
test
sub
adc
and
mov
fcoml
inc
jmp
pop
imul
adc
cmp
std
jne
je
lcall
loope
mov
sub
inc
icebp
add
notb
enter
sub
testl
ds
and
fs
mov
dec
pop
or
enter
adc
mov
test
sahf
scas
dec
int
clc
push
in
xchg
ds
lret
xlat
sete
in
cld
pop
ss
mov
cmpsb
dec
add
xor
dec
sti
push
mov
repnz
add
imul
loop
inc
test
imul
and
mov
xchg
inc
iret
in
outsb
inc
data16
lods
xor
repz
jo
jbe
iret
into
inc
jge
cmp
xor
ja
dec
xchg
sub
and
test
mov
insl
xchg
mov
cmpsl
fucomp
test
xlat
sbb
not
push
fimull
test
in
sbb
in
cmpsl
sub
mov
dec
or
and
fsub
push
mov
aam
dec
lcall
push
mov
push
ffree
mov
push
mov
int
push
fistpll
leave
jp
iret
push
pop
testb
sbb
lea
repnz
in
loop
cmp
adc
shrb
mov
pop
sbb
push
mov
xchg
sahf
sbb
addb
mov
cmp
in
sub
fucom
push
and
cmp
push
jl
neg
cmp
dec
adc
divb
loope
iret
push
outsb
dec
mov
mov
gs
seta
out
pop
pop
lock
out
or
mov
loop
leave
sahf
inc
sbb
xchg
je
xor
insb
fstps
jno
sbb
pop
mov
xchg
je
mov
test
movsl
aaa
jmp
in
mov
pop
jne
shll
divb
cmp
add
sub
sbbb
test
dec
mov
push
test
or
xchg
fstl
aaa
adc
dec
loop
movntps
push
rolb
out
js
sarb
push
gs
pop
int
inc
pop
ret
pop
out
out
xor
daa
jecxz
jne
xchg
sbb
loop
in
call
dec
add
mov
ja
nop
inc
arpl
aas
push
jne
repnz
in
mov
sbb
clc
adc
jnp
xlat
inc
xor
sbb
sarb
and
cmp
xlat
xor
adc
and
add
lret
mov
dec
lods
inc
inc
sbbb
call
int
sbb
fsubrs
jnp
pop
lret
stc
arpl
xor
sarl
pop
add
lock
push
int
stos
in
cltd
or
mov
pushf
shrb
add
jp
and
add
mov
enter
sub
or
xchg
add
hlt
sbb
lds
adc
mov
adc
std
xchg
lcall
jnp
ror
mov
or
mov
out
pop
or
sbb
lret
push
ja
fildll
les
incb
add
and
push
cmc
push
mov
jmp
adc
out
sub
xchg
cmp
jnp
js
mov
lock
ja
adc
mov
sbb
dec
adc
imul
add
out
sahf
gs
mov
push
sbb
fs
sbb
scas
sub
add
or
movsb
sbb
pop
adc
or
sbb
jp
repz
cmpb
out
adc
adc
fldl
or
mov
push
push
push
push
shrl
mov
sarl
fcmovnbe
pop
jno
loop
dec
jne
adc
insb
mulb
inc
arpl
inc
mov
lds
ja
mov
or
ds
or
xchg
loop,pn
cmp
jge
jo
cmpsb
pushf
mov
imul
sbb
inc
ds
mov
cmp
sub
loop
dec
addr16
pushf
sbb
xlat
mov
push
insl
aam
jge
cmc
out
dec
fists
cltd
push
xor
enter
push
ret
ret
aas
ficoms
cmp
out
out
repnz
dec
mov
cmp
push
xor
lock
xor
sahf
ret
test
adc
dec
mov
lods
dec
dec
call
fcomip
icebp
xchg
dec
lahf
and
enter
test
sub
mov
xchg
fistl
add
adcl
inc
imul
sbb
xor
push
mov
adc
xchg
fisttps
and
pop
sahf
es
loopne
cmp
or
ljmp
xor
enter
nop
add
stc
pcmpeqw
push
or
push
jno
mov
inc
into
jns
loop
stc
mov
pop
loop
add
sub
out
add
ds
outsb
or
jp
sub
ret
dec
jb
xor
or
dec
jmp
fwait
adc
out
xchg
fstpt
outsb
int
stos
xchg
xlat
xchg
and
mov
sbb
pop
dec
fcomps
mov
sti
jbe
mov
imul
mov
ds
insl
mov
lahf
mov
add
aam
fnstsw
aad
xchg
push
fldl
xor
cmp
cmpb
and
mov
and
or
test
sbb
adc
cmc
xchg
lahf
mov
adc
sbb
mov
sub
xor
pusha
cmpsb
mov
cli
cs
mov
adc
xlat
lods
mull
xlat
int
mov
imul
inc
insb
inc
in
inc
iret
pop
call
dec
decl
sbb
jge
ljmp
push
xorb
jecxz
mov
push
cmp
and
ljmp
ret
fdivrl
test
js
mov
push
fidivrs
push
ret
test
in
aam
fadds
pop
lret
bnd
pushf
xor
fldl2t
push
mov
mov
testb
adc
cmp
loop
setnp
xor
adc
leave
or
cmpsb
fstpl
push
out
add
dec
cmpsl
add
cmc
shlb
pusha
xorl
loope
sbb
inc
pop
xlat
pop
out
je
dec
mov
sbb
test
lea
add
pcmpeqb
sub
rorb
or
iret
inc
aas
sahf
test
out
lcall
test
add
imul
bswap
and
je
inc
push
xor
out
mov
sbb
push
out
sahf
xchg
xchg
push
call
data16
mov
add
call
fwait
pop
mov
stos
jo
sbb
loopne
loope
leave
adc
insl
in
lcall
xor
mov
inc
xor
mov
push
addb
jbe
lea
mov
inc
add
iret
pop
jno
ret
push
or
mov
adc
shrb
adc
mov
cltd
cmp
jnp
sbb
sbb
xlat
mov
cmp
mov
cmpsl
ljmp
pop
and
sub
wbinvd
adc
aaa
push
cmpsb
lods
and
push
xchg
test
mov
or
or
jmp
inc
mov
loop
add
mov
ret
add
out
pop
call
inc
nop
imul
xor
and
pop
sarb
push
loope
jmp
cmp
adc
outsl
cli
repnz
dec
push
jne
mov
jne
loopw
fiadds
add
frstor
jmp
mov
or
fwait
pop
sub
test
dec
sub
or
xchg
shrb
jmp
std
jnp
scas
xchg
cmpsl
xor
dec
jecxz
insb
int
enter
fdivrl
and
inc
int
add
fwait
pop
or
aam
out
and
iret
inc
push
cmp
mov
lahf
shlb
ret
adc
addb
repz
call
arpl
jae
insl
jecxz
inc
pop
push
test
jnp
sbb
daa
movb
test
jecxz
and
dec
push
or
mov
and
xor
jne
and
rorb
into
addr16
mov
inc
fimull
adc
cltd
es
lods
xor
mov
test
aaa
or
cmp
mov
aaa
pop
mov
push
adc
mov
aam
mov
adc
loope
or
inc
jne
nop
popf
fiaddl
mov
movsl
lds
xchg
mov
mov
mov
mov
jle
adc
adc
lods
jp
jecxz
jmp
xor
sahf
jg
daa
lock
enter
push
aad
sahf
dec
cmp
loop
xchg
sub
lahf
aad
insb
add
mov
ljmp
out
testb
in
mov
aas
xchg
jp
cmp
jl
movsb
imul
ds
adc
cmp
jnp
out
sub
inc
add
andb
imul
out
lret
adc
mov
or
mov
call
rorl
pop
out
outsb
aas
adc
jl
add
fstpl
ljmp
mov
clc
sbb
test
mov
lahf
mov
fwait
dec
daa
or
hlt
call
lock
mov
lret
les
and
inc
pop
cmp
add
jp
cltd
sar
std
adc
dec
lods
cmp
rdpmc
adc
mov
sbb
dec
iret
add
scas
mov
mov
mov
testb
jp
inc
mulb
xor
or
pushf
dec
enter
fldl
in
dec
mov
push
sub
in
daa
lahf
jns
inc
outsl
dec
mov
test
outsl
fdiv
mov
xchg
fidivs
cmc
add
imul
es
dec
fiaddl
int
mov
xchg
fwait
push
or
mov
inc
popa
add
mov
out
sub
imull
push
inc
mov
rolb
pop
cmp
inc
adc
jmp
push
sbb
je
fstps
xor
mov
leave
sbb
insb
fs
xchg
ficomps
dec
cmp
jmp
popa
push
ficompl
das
jg
mov
clc
cltd
xlat
jmp
mov
jl
pushf
incb
inc
jp,pt
in
add
cmp
lcall
les
and
inc
mov
lods
test
incb
lods
sarb
add
jg
cli
mov
ret
sbb
sbb
mov
rorl
xchg
loop
dec
jbe
and
ror
insl
push
decb
xor
or
loope
lahf
mov
int
mov
push
ljmp
scas
test
add
mov
xchg
test
xor
sub
mov
nop
or
pop
cmp
push
sbb
incl
xor
psrlw
xchg
jmp
fs
pop
and
imul
mov
pop
mov
adc
pop
mov
mov
stos
inc
add
mov
or
adc
mov
jmp
bound
pop
cmpsb
jg
inc
fwait
jae
push
fstl
aad
dec
inc
sarb
mov
push
fwait
lea
inc
sahf
dec
repz
popa
or
pop
popa
and
sti
xor
in
inc
or
imul
inc
hlt
addl
adc
mov
test
insb
push
mov
lahf
pop
aam
scas
nop
loope
sub
out
loop
ss
leave
enter
andb
nop
popa
push
sub
jb
and
inc
mov
loop
mov
or
adc
insl
inc
repz
loop
sub
push
push
pop
aad
adc
mov
std
lret
out
nop
stos
mov
xlat
xor
push
inc
divl
and
xchg
jge
dec
xor
ss
adc
sbb
mov
sub
loop
das
adc
add
jbe
aad
mov
popa
lods
jge
cltd
pop
pushf
xor
pop
sub
ss
adc
or
xchg
sti
sahf
aas
inc
push
pop
jl
movb
cmp
stc
outsl
push
mov
inc
sub
cmp
sub
pushf
mov
xor
mov
push
pop
push
icebp
and
repz
fbstp
adc
adc
or
and
loopne
in
mov
scas
imul
repnz
movsb
mov
imul
push
movsl
sbb
scas
popl
dec
jmp
test
mov
pop
push
xor
cmp
fwait
and
imul
ret
or
pop
pop
sti
lods
mov
mov
mov
mov
cmc
lahf
nop
xchg
adc
mov
sahf
rcll
and
int
xchg
daa
push
add
outsl
out
bound
pop
lods
sbb
xchg
push
in
dec
mov
mov
jp
dec
pop
movsl
sahf
or
lret
push
rcrl
inc
je
cmpb
or
int
and
fnstcw
shll
xchg
mov
cmp
sbb
js
mov
jns
sbb
push
xchg
or
add
rorb
jbe
sub
sbb
or
push
mov
ffree
push
ljmp
pop
sub
in
pop
xlat
xor
repnz
enter
ja
notb
repz
in
mov
dec
int
push
idivb
push
inc
jg
sub
push
nop
mov
aaa
xor
call
mov
pop
mov
xchg
mov
mov
rclb
sbb
push
jb
mov
in
mov
fildll
xchg
xchg
cwtl
sub
mov
sub
scas
test
push
aas
dec
mov
pop
lahf
add
scas
loop,pt
rcl
clc
stc
xchg
fidivl
mov
sub
inc
jns
enter
add
mov
xchg
nop
loop
pop
int
test
xchg
or
jge
mov
xchg
xchg
das
jmp
hlt
shlb
out
or
test
pop
jno
xor
inc
jno
and
pop
mov
push
push
inc
icebp
dec
ret
cwtl
call
pop
out
rcll
call
cmp
loope
outsl
xchg
adcb
xor
xorl
ret
sarb
sub
shrl
lahf
push
mov
pop
sbb
adc
loopne
out
sbb
mov
movsl
xor
enter
addb
xchg
adc
jmp
mov
dec
pop
or
and
inc
mov
push
dec
lcall
subl
sbb
xchg
in
out
pop
addl
push
js
in
imul
cmc
fnsave
call
iret
and
je
int3
pop
loop
jno
lods
jl
add
xor
dec
enter
push
fistpll
inc
insl
xchg
data16
jno
push
inc
push
push
push
dec
insb
enter
pop
cmp
loop
sarb
ds
xor
push
into
or
xor
or
or
outsb
adc
ret
mov
pop
push
clc
push
in
pusha
mov
and
push
notb
add
sub
je
jno
mov
out
xchg
sbb
and
outsl
pop
imul
call
cmp
out
data16
xorb
aad
pop
mov
mov
daa
push
out
mov
ss
xor
add
adc
push
xlat
fcomps
mov
mov
mov
int
jb
pop
dec
and
or
ret
sahf
dec
push
and
aas
loop
in
xchg
adc
mov
pop
sbb
sbb
sarb
add
adc
outsl
add
notb
sbb
popf
in
ja
jg
dec
rep
jg
sbb
in
jle
xchg
mov
and
or
and
cmp
ds
dec
leave
mov
mov
jp
lock
lret
mov
jmp
adc
cli
mov
cmp
jmp
test
out
push
xchg
fadds
push
jnp
cwtl
xchg
xchg
aad
insl
out
in
stos
iret
xchg
cmc
add
mov
lret
dec
lds
lea
sti
lcall
vprotw
mov
je
neg
imul
jle
dec
out
mov
int3
lea
test
jg
jnp
xchg
mov
mov
dec
std
iret
and
jo
adc
iret
inc
push
cmpb
mov
orb
add
imulb
lcall
mov
mov
add
mov
mov
add
inc
pop
adc
push
ds
enter
sub
dec
adc
mov
and
xor
sub
addr16
movsl
loop
adc
mov
sbb
int3
inc
gs
sub
out
push
out
sub
push
cmp
lcall
pushf
repz
sti
jbe
mov
pop
fisubl
jg
cltd
mov
leave
test
or
in
insb
add
scas
or
andl
add
cmp
ror
jge
mov
cld
pop
cltd
test
aas
loop
adc
push
or
je
icebp
rorb
nop
push
mov
push
cmp
sbb
adc
sarl
add
mov
cmp
ror
push
jecxz
xorl
das
fdivl
add
testl
hlt
add
cmp
jle
xor
cmp
inc
ret
push
push
sub
cli
subl
pushf
test
inc
in
jne
jbe
ret
and
bound
out
fcompl
push
dec
jnp
pusha
out
pop
xchg
lds
adc
mov
adc
add
inc
mov
and
jecxz
loopne
out
shlb
roll
xchg
jo
cmp
roll
xor
flds
sbb
xor
push
aaa
xchg
adc
nop
mov
xor
and
rcr
or
inc
pusha
ret
jnp
je
cwtl
insb
jne
mov
or
push
nop
adc
adc
test
hlt
cmp
loop
adc
sbb
mov
jns
push
push
sub
out
in
jge
sub
scas
cwtl
inc
fistl
mov
ret
push
adc
jl
lock
cmp
icebp
stc
sbb
jle
sbb
lods
shrb
mov
xchg
sbb
pushl
ror
cmp
push
pop
hlt
pop
mov
pop
int
pop
add
mov
pop
cmp
mov
imul
add
orb
scas
in
icebp
cmp
scas
cli
je
mov
lcall
jle
push
lea
and
stc
sbb
mov
sbb
add
mov
dec
cmp
call
add
mov
xor
nop
cld
sbb
stc
ljmp
repnz
ja
fs
xchg
jnp
jno
inc
cmp
adc
pop
out
sahf
push
or
pop
or
cmp
adc
fldl
jne
imul
stos
pop
xlat
sub
push
pushf
aas
adc
xchg
cli
iret
xchg
lock
mov
jnp
add
push
jmp
adc
sbb
popa
fstp
add
push
sub
femms
xchg
fs
mov
test
aaa
pop
pop
cmpsb
adc
pusha
in
mov
mov
xor
xorl
push
or
jb
mov
movl
imul
loop
jecxz
mov
fnsave
out
lcall
aad
lahf
push
cmpsl
sub
out
std
loop
cld
enter
ds
push
in
mov
push
sahf
add
mov
push
aam
sbb
mov
and
stc
mov
movsl
pop
fs
adc
xor
adc
enter
push
push
adc
push
gs
push
mov
mov
sti
cmpsb
ds
test
xchg
mov
jno
test
or
xor
mov
push
shlb
cmp
xchg
adc
pop
inc
jbe
and
outsl
stc
fmuls
lock
int3
jno,pt
pcmpeqb
insb
mov
loop
inc
jecxz
adc
jno
xchg
aaa
int
shll
sbb
xor
shll
push
call
adc
adc
xchg
das
out
and
pop
xor
mov
inc
dec
cltd
in
daa
cmp
mov
pushf
add
sub
jae
adc
inc
call
add
ljmp
xlat
fidivl
mov
jae
jno
fpatan
mov
xchg
mov
fistpl
xor
enter
add
mov
out
mov
adc
jno
ret
mov
adc
sub
movsb
testl
adc
fnstcw
rcrb
sub
aad
jae
pop
pusha
mov
xchg
std
sahf
out
aas
stc
das
xor
mov
dec
mov
clc
es
out
or
out
xchg
pusha
push
xchg
sub
mov
or
lcall
or
adc
sbb
inc
xchg
pop
mov
inc
inc
loope
sbb
sbb
mov
pop
jno
clc
sbbb
ret
cmp
ret
stos
xchg
cmc
insl
xor
stos
aam
mov
lret
stc
pop
adc
pop
dec
xchg
test
int
sub
inc
sbb
dec
adc
and
shl
addr16
or
inc
dec
cmp
hlt
sahf
repnz
fisubrs
shrb
cmp
cmpsb
pop
dec
loopne
in
push
lods
push
scas
sbb
sub
cltd
movsb
mov
dec
jbe
sbb
arpl
adc
cmp
popa
or
mov
es
sahf
mov
jecxz
int
sbb
sbb
dec
jb
fldl
outsb
cwtl
arpl
mov
cmp
cmc
and
iret
add
sub
inc
xor
dec
cmp
imul
push
or
hlt
mov
jg
mov
lcall
sub
mov
push
addr16
sbb
sbb
ss
inc
fwait
test
and
or
bound
or
ds
out
sub
dec
pop
xchg
pushf
sahf
push
loop
cmp
push
adc
add
jno
pop
in
cmc
loope
mov
jmp
in
shl
cmp
jmp
or
inc
cmp
and
lcall
adc
test
pop
adc
outsb
sub
jo
ret
adc
dec
in
cmp
dec
cmp
inc
and
push
jmp
clc
push
jecxz
add
xor
push
mov
push
jp
push
jo
shl
adc
enter
sbb
adc
ljmp
and
mov
loope
shll
add
fwait
adc
in
sub
sub
out
notb
adc
xor
ret
les
idiv
jge
and
popa
popf
lods
jl
movsl
cmp
roll
in
int3
jno
jle
dec
imul
push
sbb
aam
xor
cwtl
xor
xor
shrl
xor
sub
jnp
dec
inc
or
jnp
and
xchg
add
divb
mov
lcall
jne
ret
xchg
inc
jp
ja
mov
mov
jp
mov
out
add
ret
cmovge
enter
mov
xor
fs
mov
xor
lods
mov
into
xor
sub
iret
sub
lods
lds
and
lds
lds
div
adc
ja
flds
and
xchg
scas
mov
clc
mov
ss
ss
cltd
ds
adc
ficoms
pop
inc
arpl
bound
pop
sahf
ds
test
sbb
pop
dec
pop
dec
ds
lods
or
add
mov
lret
pop
jecxz
insb
xchg
sub
sub
mov
lods
inc
pop
mov
xlat
imul
in
cwtl
lahf
loop
mov
cmp
adc
rcll
mov
bnd
mov
data16
dec
idivb
lds
push
and
lods
aam
mov
imul
stos
add
xchg
sub
and
cwtl
lds
popf
arpl
in
add
sbb
add
pop
xor
stos
je
push
fistps
and
into
adc
stos
fisttpll
sbb
adc
dec
pop
xchg
sub
lock
mov
and
inc
adc
inc
shrl
xchg
adc
sbb
adc
adc
fnstenv
adc
aas
push
pusha
lea
add
mov
cmpb
addr16
mov
inc
imul
pushf
andb
add
xlat
or
jnp
cmc
out
into
fcmove
inc
mov
call
dec
insl
mov
mov
lahf
imul
fdivrs
sbb
push
sti
icebp
and
setb
repnz
add
mov
xchg
decl
mov
fcomip
lcall
push
add
xchg
pop
sbb
dec
sarl
aaa
add
xchg
scas
fisubs
testl
xor
jecxz
mov
mov
sbb
insl
stos
pop
mov
add
mov
sbb
lods
lret
or
add
insb
cmp
and
cld
ds
mov
sbb
push
out
push
xor
cld
out
clc
pop
xor
hlt
adc
add
jns
shl
test
pop
xor
sahf
mov
lcall
xchg
in
mov
nop
mov
mov
pop
xor
cltd
pop
lret
mov
imul
mov
or
lret
call
or
pop
rorl
adc
cmpsb
fcoml
adc
cltd
lds
and
addb
push
mov
into
out
xchg
popf
push
cmp
je
add
dec
lahf
jnp
roll
xor
push
xor
mov
mulb
jg
shll
sub
pop
sbb
dec
mov
enter
fsts
dec
lret
jg
scas
push
in
mov
sub
jno
popf
xchg
add
xor
loop
mov
push
push
out
out
cmp
test
and
mov
imul
add
push
loop
adc
js
xor
das
or
fnsave
xchg
cli
xor
mov
xchg
push
js
loop
movsl
mov
fst
sbb
loop
mov
xchg
jne
mov
movsl
imul
mov
pushf
jp
arpl
jmp
adc
fsubrs
inc
inc
push
into
dec
mov
pop
rclb
add
and
shld
rorb
aaa
in
leave
mov
js
pop
arpl
adc
cmp
sti
push
dec
movsl
shll
in
jno
nop
mov
ljmp
xchg
sbbl
xor
cmp
dec
mov
xchg
out
lea
pushf
pop
inc
sub
out
jbe
dec
xchg
adc
push
push
mov
push
xchg
sbb
push
outsl
jae
push
inc
jne
ficoml
cmp
and
push
pop
imul
jg
mov
insl
add
mov
dec
xor
jae
lcall
aaa
mov
outsb
fldl
les
bound
cli
ror
push
ss
mov
and
adc
outsl
push
sbb
test
and
dec
sub
xor
lret
ret
add
jb
fwait
xchg
jp
cmp
lds
addr16
mov
xchg
xor
lods
in
stos
push
pop
popf
outsb
cltd
mov
xor
dec
cltd
jne
in
in
shl
dec
mov
rorb
pop
inc
popf
sbb
leave
sbb
mov
inc
lahf
sahf
add
mov
sbb
cmp
fxch
xchg
in
mov
out
sbb
lock
out
out
cmp
dec
xor
sbb
cmp
lods
add
pop
sub
test
xchg
ds
aaa
jnp
jo
lods
lods
push
adc
cltd
outsb
lcall
je
sub
push
cmp
push
leave
or
inc
rolb
popf
imul
jns
aas
add
enter
xchg
sbb
adcb
add
int
rolb
out
add
fnstcw
push
xor
je
out
cmp
sub
jne
jecxz
xor
test
xor
inc
jo
cmp
popa
in
outsl
mov
lea
mov
pop
loop
inc
aad
cmp
imul
mov
lret
adc
push
adc
pop
outsw
add
dec
or
insb
inc
popf
test
push
inc
sahf
imul
add
mov
and
push
shlb
mov
fucomi
sti
call
imul
jg
out
hlt
dec
imul
les
in
pop
jns
cwtl
inc
lret
sub
das
cli
xchg
pusha
xchg
sub
or
add
int
adc
cmp
icebp
sbb
mov
push
je
xchg
js
xchg
out
repnz
push
sbb
xor
arpl
aad
enter
or
imul
scas
insl
xchg
outsl
mov
cmp
imul
jo
jmp
aad
add
sbb
adc
push
pop
pushf
pop
push
pop
mov
loop
dec
aaa
jns
pop
cld
sub
repz
add
xchg
pusha
add
push
testb
loopne
subl
xchg
aam
inc
sbb
jnp
in
ret
shlb
xchg
pop
jge
fmuls
ss
in
mov
add
push
xor
in
enter
cmc
mov
subl
push
fsts
lahf
scas
rolb
dec
out
push
adc
push
xchg
jg
rcr
add
mov
arpl
hlt
push
and
ss
jb
mull
out
lods
inc
dec
mov
cmpb
in
inc
and
ret
mov
adc
xchg
sbb
loopne
mov
popa
add
add
dec
add
aad
pop
or
jmp
repnz
sub
negl
ret
xchg
add
rolb
xor
and
cmc
push
xor
jne
sti
mov
jnp
jnp
out
jbe
aad
cld
and
adc
mov
sub
repz
pop
mov
js
dec
adc
pop
in
xor
xor
and
push
loopne
add
pusha
rol
push
push
or
popw
pop
sub
les
xchg
or
sub
push
lret
jnp
out
xchg
adc
sub
xchg
dec
or
scas
into
xor
data16
or
call
pop
cmp
adc
and
cmp
mov
inc
xorb
outsb
jo
dec
lds
test
or
xchg
sahf
jg
and
dec
xor
adc
adc
sub
pop
fiaddl
test
fwait
cmc
dec
xchg
push
mov
jg
repz
xor
fs
mov
mov
out
pop
push
mov
es
cmp
jbe
xor
sahf
out
ret
inc
cmpsb
mov
pavgb
jne
pop
dec
lret
xlat
shrb
jo
les
mov
mov
test
mov
inc
adc
les
movsb
fdivrp
cwtl
rolb
fiaddl
loop
mov
sub
push
inc
push
scas
inc
and
imul
adc
push
mov
mov
dec
and
and
test
cwtl
cmp
jg
sbb
ret
dec
in
aad
sti
aam
loop
cld
sbbb
adc
repnz
dec
ss
loopne
or
je
sub
mov
jmp
mov
ret
sbb
mov
push
lock
jne
inc
popa
les
sub
push
cmp
push
add
inc
out
mov
int
imul
fstp
push
push
negb
push
mov
mov
popf
ret
fcmovb
jnp
std
or
insb
lock
sub
lahf
fisttps
loopne
fbstp
xor
outsl
pop
clc
pop
inc
test
push
insl
ss
dec
std
pushf
or
addl
mov
jg
mov
loop
stos
ss
into
sbb
adc
mov
pop
shrb
and
xor
mov
xlat
and
daa
xor
in
movlps
xchg
stos
dec
xor
icebp
push
movsb
sbb
push
adc
or
push
mov
sbb
mov
mov
arpl
aam
pxor
nop
sub
push
adc
sbb
dec
xchg
sbb
inc
sahf
xor
lcall
imul
xchg
push
inc
cmpsl
lahf
xor
popa
nop
push
pusha
mov
or
test
nop
pusha
js
lods
cmpsl
int3
dec
repz
int
loop
jmp
inc
sub
rol
mov
fisttpll
dec
push
xor
xchg
pop
mov
testb
or
negb
enter
loopne
adc
js
out
pop
sti
stos
mov
mov
push
into
mov
lret
xor
cmp
fiadds
out
mov
xor
loope
insl
lcall
pusha
cmp
sub
test
fisttpll
out
pop
mov
sti
cli
aam
adcb
lret
test
mov
xchg
mov
dec
adc
and
enter
loop
enter
fistl
lea
imul
push
mov
loopne
cmc
fimull
cmp
call
pop
aad
jae
lcall
inc
arpl
mov
add
jae
scas
adc
ljmp
fnstsw
pop
out
mov
call
fsubrl
or
jo
mov
push
mov
fstpt
jo
add
lods
loop
or
ljmp
cmc
loop
pop
cmc
jmp
cmpsl
pop
cmovp
pop
or
pop
out
cmpl
ljmp
in
jno
push
loopne
mov
jae
ja
fldt
stos
ret
push
push
cmp
jnp
xchg
push
mov
lea
arpl
pop
repnz
inc
xor
mov
ficompl
pusha
loope
lds
imul
mov
popa
cmp
push
push
mov
jl
fndisi(8087
shlb
rorl
cmp
pop
insl
cmpsb
jg
or
or
push
jmp
stc
mov
mov
std
icebp
or
mov
movsl
mov
sub
dec
leave
dec
daa
rcrl
jbe
bswap
pop
push
aad
and
rcrb
nop
into
lock
and
cmp
aam
pusha
movsl
out
lret
pop
push
pop
pop
call
in
dec
pop
clc
sub
out
mov
mov
insb
xchg
cmp
mov
fmul
fcompl
cmpb
xor
rorb
xchg
enter
daa
mov
adcb
shll
mov
jmp
add
pop
decb
pop
pop
movsb
sbb
pushl
mov
adc
sub
mov
sub
fnsave
in
in
xchg
fs
push
inc
mov
in
imull
sbb
mov
nop
add
jo
dec
push
mov
inc
sbb
cmpb
outsl
mov
subb
out
sbbl
imul
stos
stc
ret
fists
je
cmp
xor
pop
add
xor
mov
xchg
xchg
fwait
jne
cmp
cmp
je
or
sbb
add
and
jbe
xchg
sbb
call
std
out
sub
add
cmpsl
in
push
stc
or
adc
in
xchg
pusha
les
mov
xor
mov
push
je
push
sub
pop
shll
mov
test
xchg
cmp
mov
int
or
sbb
cmp
call
mov
ret
jo
stos
jecxz
jg
loop
inc
xlat
movsb
or
test
sbb
out
fldcw
xor
jp
mov
dec
push
in
insb
push
call
xor
jb
sub
mov
iret
arpl
mov
lahf
add
stos
xchg
insl
int
and
cltd
cld
add
jecxz
stc
in
xor
inc
lret
insl
add
and
cmp
ljmp
dec
mov
pop
jo
push
cmp
mov
push
cmp
test
aaa
hlt
adc
xor
je
sub
arpl
jnp
push
pop
dec
cmpb
mov
push
sbb
sbb
sahf
xlat
loop
sub
push
jl
add
and
pop
flds
loope
xchg
adc
je
jmp
jp
int3
dec
xchg
loope
nop
mov
or
pusha
or
push
cmp
addb
mov
or
insl
jmp
loop
dec
fiaddl
cmpsb
push
ss
repnz
dec
fcom
jp
ret
into
adc
lcall
stos
inc
bound
or
pusha
inc
push
mov
xchg
ficoms
aad
and
push
jg,pn
push
pop
aad
sub
sti
mov
pop
push
or
sub
popa
les
jg
cmp
aas
or
fsubrs
mov
inc
shl
sub
scas
cmp
push
adc
xor
cmpsl
cmp
adc
mov
inc
clc
inc
adc
stos
ss
and
lcall
adc
fisttps
in
out
call
dec
pushf
cmc
xchg
jle
je
decb
fs
cmp
pop
xor
adc
cmc
jbe
jg
aaa
lock
push
ret
or
in
add
push
cli
insb
iret
adc
mov
push
incb
es
out
mov
jecxz
sahf
stc
fbstp
pop
mov
ja
out
decl
xor
fs
data16
jne
imul
dec
addb
dec
es
fiaddl
ret
mov
mov
adc
mov
movsb
lcall
and
inc
aaa
mov
mov
push
mov
rorl
scas
xlat
dec
cltd
or
xorl
aaa
xorl
out
inc
mov
dec
inc
in
fisttps
mov
jno
lds
notl
push
adc
shrb
mov
pop
and
jae
adc
loop
pop
fistl
xchg
punpcklwd
sbb
mov
jnp
and
inc
and
cwtl
sbb
mov
jnp
dec
xchg
xor
ffree
push
data16
mov
cmp
mov
sti
xchg
pop
jp
mov
or
xor
shlb
mov
in
outsb
pushf
adc
out
xor
jecxz
pop
pop
push
and
lock
sub
sarl
repz
xor
push
cwtl
mov
popf
and
stos
pop
into
lret
in
add
cmp
das
pop
incl
pop
dec
scas
fcoms
xor
xchg
dec
pop
sub
ror
adc
ret
xor
cmpl
in
pusha
fmul
jnp
inc
call
jl
imul
lock
fists
scas
sbb
sbb
insb
inc
jbe
add
enter
jp
push
lret
iret
push
mov
push
aaa
fldcw
repnz
loop
rorl
add
xchg
adc
popf
enter
sahf
in
out
push
out
call
adc
adc
or
mov
fstps
or
outsb
int3
mov
test
pop
loop
add
lret
mov
jnp
popaw
push
sbbb
jmp
je
cli
add
imul
inc
sub
mul
inc
push
imul
and
mov
rorb
cmp
out
xor
jecxz
leave
push
pop
ja
pop
xor
cmpsb
mov
pushf
mov
add
mov
jo
stc
addr16
test
push
mov
adc
ja
mov
daa
and
jmp
jo
xchg
adc
mov
sub
filds
mov
dec
enter
ss
mov
adc
in
ljmp
enter
ficomps
push
cmpsl
mov
test
inc
mov
pop
sub
mov
add
pop
in
repnz
jns
xchg
std
sbb
test
mov
rorl
or
push
pop
cmpsb
inc
repz
les
dec
loopne
adc
daa
adc
mov
mov
pop
adc
ud2
sbb
mov
rcrb
shrb
lcall
stos
sub
incb
rclb
lods
add
stos
pop
mov
cmp
xor
rorb
popf
adc
dec
aam
push
sub
mov
mov
ja
popa
bts
repnz
sahf
xchg
rorl
and
add
sbb
inc
xchg
jl
out
cli
out
push
inc
in
lods
mov
cwtl
lods
mov
or
fsubl
add
and
mov
sbb
pop
xor
sti
cmp
fs
jnp
test
pop
add
fimull
lret
xchg
in
insl
xchg
pop
add
ja
mov
nop
sub
cwtl
mov
in
loopne
sbb
or
lods
lcall
nop
lods
test
mov
mov
shll
mov
jg
int3
fsts
ljmp
jle
xchg
lret
lcall
out
xchg
loopne
scas
test
ja
fstl
negb
adc
cld
scas
sbb
mov
loopne
out
inc
testb
push
pop
fisttps
mov
lahf
fs
push
jne
aad
outsb
outsl
movsl
sarl
adc
adc
add
pop
xchg
stos
pand
xchg
xor
mov
loop
and
or
aas
dec
fxch
shlb
stos
mov
xchg
sbb
test
add
ja
xchg
lock
mov
push
jnp
pusha
arpl
outsb
subl
sub
out
pop
cmp
scas
or
jg
add
lret
adc
xor
mov
xchg
aam
dec
es
and
outsl
scas
sub
sub
pusha
lcall
mov
push
lret
push
add
inc
dec
fwait
push
xchg
out
fs
xor
stc
pop
xlat
stos
adc
in
je
or
dec
pop
fisubs
pop
adc
sub
sahf
out
push
sahf
xchg
hlt
fstl
adc
adc
adc
ljmp
arpl
sbb
xor
push
cmp
jmp
mov
out
push
sbb
lea
mov
cmpsb
ljmp
enter
pop
mov
lods
pop
stos
or
sbb
in
movsl
sbb
shl
sub
loop
mov
push
push
xchg
sbb
cmp
rclb
mov
outsb
sbb
cmp
jg
scas
shl
sbb
repz
or
xchg
test
addb
cmp
insl
and
push
or
push
inc
fbstp
pusha
adc
xchg
jo
sbbb
cwtl
subb
clc
in
mov
nop
shlb
fbstp
jbe
cltd
setb
test
hlt
out
nop
lock
sbb
test
lods
sbb
scas
push
fsts
push
mov
adc
inc
xchg
popa
imul
mov
sbb
rorb
ds
test
jl
jne
call
jp
jno
lods
hlt
mov
pop
into
out
loopne
pop
adc
pop
jmp
jne
icebp
mov
dec
cmp
incb
loop
mov
lock
and
and
loop
xchg
pop
imul
sbb
les
lret
outsb
lahf
jae
ljmp
lods
cwtl
mov
rcrl
and
sbb
sti
or
mov
in
sbb
call
mov
mov
stc
pop
fucomp
push
jg
push
mov
add
cmp
sub
int
in
jbe
js
mov
mov
xchg
jnp
xchg
and
push
movsb
mov
test
lock
and
lahf
test
call
ss
jle
pop
stos
xchg
insb
movsl
aaa
iret
std
scas
ret
push
loope
shrl
add
sbb
mov
xor
push
cmp
lret
xchg
cmp
fs
xchg
pop
sub
pop
repz
pop
or
xor
cld
jns
lods
cmp
push
cmp
test
gs
in
pop
aas
leave
movaps
jne
lock
inc
push
jae
adcl
out
cmp
stos
sbb
shl
out
mov
adc
dec
imul
fs
add
xchg
add
fmull
mov
lcall
or
into
js
jae
push
push
jg
lcall
xor
adc
jne
add
mov
bnd
jno
aad
adc
push
dec
daa
adc
sbb
sti
in
inc
cmpl
ss
lret
testb
adc
jl
pop
loope
scas
pop
and
in
push
push
push
adc
adc
add
dec
mov
dec
adc
push
test
push
nop
and
in
and
or
add
lahf
jl
dec
enter
sbb
cmc
push
addr16
adc
xor
or
pop
adc
dec
and
mov
xchg
je
or
dec
push
push
inc
rcrl
push
mov
xor
enter
xor
cmpsb
xor
adc
int
jno
inc
lahf
loop
stos
int
push
nop
pushf
ja
iret
dec
adc
iret
sahf
mov
into
insb
mov
iret
sub
popa
mov
mov
stc
or
jns
ds
psubb
cmp
xchg
inc
imul
fmuls
sbb
lea
lcall
adc
push
mov
frstor
xchg
ds
jp
mov
into
adc
jbe
arpl
xchg
push
fs
add
mov
hlt
jbe
sub
push
and
int3
out
ret
xchg
xor
test
jae
pop
outsb
stos
pop
ljmp
lret
fwait
or
lret
pop
sbb
mov
pushf
lods
push
xchg
out
fsubs
aas
ret
movsl
mov
outsl
mov
es
push
inc
sbb
add
mov
pop
rcl
sub
rcll
mov
mov
xchg
and
xchg
test
hlt
adc
or
jge
push
pop
sbb
out
imul
mov
mov
sti
lods
notb
pop
push
mov
in
sbb
and
xchg
mov
cs
and
jne
sti
push
mov
lret
enter
sbb
add
stos
inc
in
icebp
ds
je
je
test
mov
adc
mov
push
push
loopne
jnp
fisttpl
add
lods
clc
inc
mov
sar
jns
mulb
cs
data16
xchg
stc
cmp
cmc
imul
sub
dec
aad
fildll
ficoms
sar
xor
jo
sub
gs
jo
lret
movsl
hlt
or
pop
xor
xor
xchg
push
add
aad
xchg
pop
push
add
push
jne
cltd
add
shlb
and
fs
adc
mov
or
pop
addr16
dec
sbb
addr16
sub
andl
add
xchg
push
mov
mov
add
aaa
mov
ds
mov
and
or
repnz
int
orl
jno
xchg
ljmp
xchg
or
insb
iret
pop
add
pop
mov
jl
or
notb
cmp
fmul
push
and
and
mov
dec
add
add
lods
dec
xor
pop
fists
push
addr16
adc
lds
mov
fchs
mov
leave
pop
enter
inc
scas
jnp
jae
cmp
adcb
cs
flds
cwtl
cltd
push
jns
mov
movsl
mov
jne
fsub
pop
lret
loop
mov
sti
cmp
test
sbb
xchg
jge
mov
push
jbe
sub
push
inc
cld
sub
loop
push
test
dec
stos
call
push
dec
fs
push
xchg
enter
mov
push
ss
std
jae
mov
out
pop
mov
xchg
adc
ds
xchg
xor
sub
iret
mov
leave
xor
arpl
in
sub
jno
sub
cmpsl
sbb
repz
loope
sub
pop
push
or
push
xchg
push
sub
cs
and
inc
xchg
xchg
and
in
sbb
pop
jne
mov
adc
imul
lods
or
mov
push
shrl
mov
mov
ret
xchg
mov
mov
mov
jge
mov
stos
adc
bound
es
dec
push
ret
push
add
jnp
mov
mov
fs
cmc
pop
push
jl
xchg
dec
lods
xlat
loop
adc
jae
mov
adc
movl
movl
push
jno
orb
in
adc
xor
jmp
stos
pop
sbb
lret
push
push
jae
mov
test
lret
or
stos
mov
jno
push
pop
mov
fbld
dec
ss
hlt
outsl
mov
inc
outsb
or
or
jmp
and
movsl
out
pop
lea
call
inc
mov
add
pusha
std
dec
xchg
fbstp
inc
mov
adcl
into
add
push
add
fistl
clc
scas
dec
ds
jae
and
in
mov
sbb
mov
jmp
out
icebp
ret
mov
sub
sbb
imul
or
pop
mov
test
xor
pop
xor
mov
fistps
xchg
push
xor
out
lea
dec
add
addr16
jmp
andl
popa
fs
xchg
lcall
sbb
mov
add
popa
jne
nop
aaa
out
sahf
and
push
push
cmp
adc
push
mov
mov
push
sbb
add
add
roll
jo
sub
jnp
mov
adc
adc
mov
push
cmpb
and
andb
adc
loopne
cmp
dec
movsb
mov
pop
loop
fcomps
stos
pushf
dec
bound
adc
or
repnz
inc
sub
push
and
adc
insb
xchg
lds
push
inc
imul
fildl
repz
cli
bound
in
mov
adc
in
nop
aas
adc
movsb
lret
or
mov
mov
jno
add
in
dec
loop
dec
add
ja
popf
rclb
xor
faddl
lret
repnz
in
in
xchg
ds
add
das
jge
test
dec
adc
rclb
push
mov
in
pop
fadd
adc
arpl
in
xchg
xor
cmc
int3
lahf
dec
mov
pop
jle
imul
in
stos
aam
lahf
inc
test
cltd
pop
test
pop
mov
push
push
mov
pusha
sub
lret
mov
loop
jmp
xchg
fidivrs
lret
bnd
xorl
cmc
cmpl
popf
loopne
pop
out
into
stos
inc
dec
inc
cmp
clc
jp
lds
insl
pusha
popa
mov
cmp
cwtl
mov
stos
jno
dec
loope
jg
push
adc
mov
sub
cmp
dec
addl
mov
pop
push
dec
imul
mov
fisttpl
cld
inc
mov
push
loop
push
hlt
mov
aas
mov
add
mov
lods
sbb
or
ss
xor
pop
repnz
rolb
pushl
jnp
dec
dec
sub
mov
and
in
push
and
jp
pop
add
mov
in
sub
xchg
mov
cmp
jmp
mov
imul
ret
mov
adc
xchg
popf
or
pop
int3
icebp
je
push
dec
jp
mov
loopne
je
scas
loopne
pop
loop
jmp
push
sub
mov
mov
das
pop
mov
loope
add
push
jae
sahf
cmp
add
loop
in
adc
mov
mov
jne
mov
int
jne
call
mov
or
rolb
push
test
or
or
or
mov
dec
popl
sti
mov
lahf
scas
mull
xchg
xor
push
das
test
sub
sarl
movsl
pop
add
in
cmpsl
cmp
jp
cmp
sub
rcrl
xor
push
xor
sbb
jle
mov
leave
and
pusha
call
xor
dec
in
push
cltd
xchg
dec
mov
or
xor
fcompl
xor
in
push
mov
aad
jg
pop
jbe
stos
and
add
inc
or
mov
or
xor
xchg
xor
ds
icebp
aad
idivb
nop
push
sub
inc
ret
fwait
mov
jecxz
sar
out
jg
sbbl
and
push
push
push
stc
cltd
pop
fidivs
inc
into
stos
outsl
pop
inc
push
jno
cmpsb
fldenv
lcall
push
cli
push
sbb
inc
fcmovne
pop
and
push
fldl
jmp
stos
mov
repnz
xchg
push
sbb
ds
mov
jnp
sbb
idivl
inc
adc
nop
push
sbb
lahf
mov
jbe
inc
addl
push
xor
push
cmp
scas
pop
in
push
aad
loop
dec
dec
or
jnp
xrelease
pop
sbb
js
mov
xchg
add
cmp
adc
hlt
test
lods
imul
mov
loopne
or
ljmp
adc
outsb
popf
add
inc
pop
lcall
fwait
in
popa
or
outsl
cmp
icebp
mov
lods
inc
and
push
jg
clc
popf
pcmpgtw
mov
in
fnclex
and
out
stos
ret
pop
cmp
xor
pushf
das
imul
aam
xor
fdivl
hlt
ds
lret
enter
add
xchg
adc
pusha
jno
out
mov
mov
ret
js
movb
jno
jns
adc
test
dec
adc
movq
test
popf
and
jecxz
pop
push
pop
add
outsb
ret
out
adc
adc
adc
dec
and
sbb
pop
jg
jmp
les
aas
call
pop
jnp
adc
inc
arpl
jnp
sub
shrb
mov
mov
or
sub
adc
mov
mov
scas
dec
sbb
jg
sbb
push
arpl
mov
sub
ret
push
mov
mov
xor
call
jae
repz
rcrl
cmc
push
bound
cmpsl
mov
and
lds
add
nop
pop
mov
popl
add
loop
pop
and
add
jns
and
lock
cmp
inc
lcall
mov
add
cmp
or
iret
push
cmc
pop
xchg
push
outsb
inc
sbb
enter
push
outsl
sub
dec
and
notb
scas
cmp
sbb
jbe
dec
mov
cmp
mov
mov
mov
mov
out
adc
jle
fsub
jle
iret
das
mov
mov
ds
mov
lods
ffreep
in
adc
bound
push
push
mov
and
call
cmp
mov
mov
outsl
stos
arpl
jno
xor
pop
outsb
sahf
adc
mov
es
out
adc
or
repnz
nop
mov
shl
das
or
dec
cmp
pop
iret
add
push
dec
fucom
adc
daa
dec
scas
lods
idivb
inc
aam
jne
sub
xor
shlb
popf
addl
dec
dec
out
mov
es
push
inc
fwait
repnz
outsl
test
push
dec
out
mov
cmc
xor
outsl
loop
dec
inc
aaa
pop
and
adc
cmp
mov
shrl
cmp
cmc
bound
popa
dec
and
ret
fwait
push
mov
sti
in
sbb
inc
xchg
xchg
cmc
sbb
adc
das
pusha
outsb
lret
ljmp
push
rol
jle
subb
mov
out
pop
gs
ljmp
fwait
mov
jp
xor
rorl
mov
cmpsb
movsl
or
fimuls
movl
test
cmp
adc
sub
in
loop
mov
cli
pop
mov
add
lock
mov
sbb
lock
cmp
xor
insl
add
ffreep
stc
or
pop
cmp
loop
adc
or
push
sub
testb
loop
push
jg
mov
pop
dec
mov
cmp
cld
negb
inc
pushf
out
pop
stos
fldl
push
sbb
xchg
lea
cmp
adc
setae
xor
icebp
mov
in
cltd
pop
mov
sub
mov
jl
or
mov
test
lock
in
mov
adc
ja
pop
adc
stos
sahf
popa
xchg
rclb
rcrl
add
cli
int
dec
jo
jl
lock
jmp
sahf
sbb
xlat
leave
or
sbb
test
pop
or
rcll
mov
and
sbb
loop
out
imul
fcoms
mov
das
sub
adc
push
divb
lahf
sbb
sbb
pop
pop
bound
fwait
push
sub
mov
or
loop
leave
push
fidivrl
mov
push
push
sub
shlb
stc
popf
cmpsb
mov
lcall
outsl
jle
leave
push
jl
fisttpll
je
addl
fstl
sahf
or
xlat
cmp
push
lret
sar
sub
cmpsl
adc
push
push
adc
sbb
in
outsl
xor
mov
daa
outsb
inc
pop
repnz
into
out
shlb
addr16
mov
jg
loopne
fstl
xchg
or
push
xchg
sbb
loop
frstor
icebp
jg
gs
sbb
in
int
sub
lret
fisubrs
int
push
jmp
stc
subb
lds
mov
adc
rcll
mov
xchg
xchg
stos
ror
mov
popf
imul
insl
push
push
cmp
push
std
sub
sub
xchg
cmp
push
lods
stos
stos
adc
lea
pop
loop
subb
ret
xor
lds
add
loop
and
sbb
jno
sbb
pop
jecxz
pusha
repnz
pop
jno
aad
pop
jne
ljmp
call
std
dec
cs
mov
or
inc
lock
insl
inc
fldcw
pop
jb
jmp
jae
jno
mov
dec
sub
push
xchg
shll
test
or
sbb
push
add
jae
test
in
mov
fcmovnu
push
or
enter
cli
lret
loop
jl
sbb
mov
or
lret
call
scas
gs
xchg
fidivrl
insl
je
sbb
pop
sub
mov
jl
push
add
cmp
aad
mov
cmp
adc
js
or
xchg
pushf
sti
or
xor
sbb
in
adc
push
xchg
and
sub
xor
xor
mov
dec
out
adc
or
mov
mov
mov
cmpl
arpl
mov
repnz
ficoms
rorb
add
cmp
clc
push
fstpt
push
pop
insl
movsl
loope
loop
out
sbb
adc
repnz
mov
shlb
inc
stos
addr16
lahf
sar
in
jge
fwait
sbb
xchg
xlat
add
pop
insb
movsb
mov
lea
call
test
out
and
inc
int
cmp
in
dec
push
lahf
pop
sub
sbb
adc
mov
mov
pop
adc
adc
jmp
sbb
sub
jp
out
adc
dec
add
mov
and
mov
or
push
and
cmp
pop
sub
xor
xor
daa
dec
xchg
or
insl
push
outsb
ss
pop
jg
or
cmp
aaa
mov
xchg
int
inc
cmp
bound
add
add
push
push
lcall
icebp
daa
sbb
mov
add
inc
out
dec
pop
fwait
xchg
repz
xor
push
cmp
popf
mov
dec
jmp
enter
pop
add
clc
rol
fwait
inc
popf
xlat
out
cmp
in
cmp
mov
and
jne
xchg
pminsw
sti
in
push
adc
inc
out
lahf
mov
das
sub
fnsave
push
xor
cld
adc
cwtl
pop
nop
inc
jecxz
adcl
sbb
and
lea
adc
pop
mov
pop
dec
lret
push
mov
cmp
imul
mov
add
or
outsb
lret
test
imul
adc
in
fwait
jp
sbb
add
xor
iret
jge
arpl
jo
inc
xor
fidivrs
gs
fnstenv
mov
mov
out
sbb
outsb
push
scas
sbb
dec
pop
in
adc
sarl
adc
fistpll
imul
out
mov
movsl
fs
sbb
out
out
sti
loope
pop
sbb
insl
mov
xchg
xchg
push
lds
dec
cmpb
or
in
jnp
jecxz
scas
es
mov
ljmp
loopne
icebp
mov
loop
mov
sbb
pop
out
in
dec
jmp
scas
xor
loop
push
push
or
xor
out
sbb
popf
inc
jne
popa
fcoms
cltd
leave
aas
jns
popa
fmulp
cmp
lahf
aaa
sbb
loopne
and
cmc
sti
lret
adc
inc
outsb
cmp
xchg
sbb
xor
push
in
sbb
call
fstps
and
mov
mov
mov
adc
fsubl
push
in
fcmove
iret
test
mov
xor
in
push
xchg
xchg
cmc
jo
mov
or
insb
cld
xor
mov
shr
test
xor
adc
addl
mov
out
cmpb
push
mov
push
push
and
movsb
cmp
push
cmp
sbb
outsb
cs
cmp
in
clc
xor
xchg
add
imul
jbe
adc
aaa
sahf
jb
pop
out
mov
pop
cli
jl
add
mov
mov
mov
sbb
cltd
or
push
outsb
fistps
lock
add
loope
push
lds
shll
pop
aad
mov
pusha
or
jne
add
stos
int3
lods
cmp
pusha
into
xor
dec
push
testb
jmp
out
xor
sub
int
enter
stos
mov
cmpsl
or
daa
test
ss
fnstsw
inc
mov
das
sbb
cmc
paddd
rcl
or
push
and
enter
daa
in
mov
out
pusha
cmp
sbb
or
loop
jo
data16
adc
iret
movsl
jne
rcrl
xchg
mov
mov
mov
mov
or
incb
not
xchg
sahf
push
xlat
or
enter
imul
std
xchg
les
push
mov
fcoms
or
dec
pushf
imul
icebp
push
inc
lcall
cmpsl
push
xchg
jnp
jne
loop
stos
and
int
lcall
sbb
lahf
and
pushf
and
or
aaa
ja,pt
test
ds
push
mov
sbb
jmp
in
lahf
adc
shrl
inc
xor
mov
add
or
push
jle
xchg
sbbb
aam
lahf
sub
add
cltd
test
mov
test
packssdw
ljmp
sub
loopne
loop
sub
mov
test
jnp
lahf
mov
repnz
lcall
inc
sahf
sub
jne
push
adc
cmpsl
mov
or
mov
loop
push
movzwl
jnp
adc
daa
repz
sub
mov
sbb
sbb
xor
loopne
adc
mov
es
xchg
add
fwait
mov
cltd
jp
testl
inc
aad
cmc
push
push
mov
repnz
inc
xor
fldt
aas
mov
push
fildl
adc
add
adc
mov
bound
mov
inc
das
mov
push
imull
fistl
xor
mov
scas
std
xor
enter
popl
xor
std
cmp
mov
push
sbb
sbb
dec
add
mov
or
pop
dec
or
inc
fnstcw
xor
adc
or
sbb
lahf
jne
jae
pop
or
dec
cmp
jb
add
sub
sub
arpl
xor
out
fldcw
or
xor
mov
fsubrl
add
stc
and
out
mov
cmp
daa
lds
divl
aad
dec
and
xchg
xchg
rorl
jne
scas
xor
incb
adc
xor
out
and
les
out
cmc
mov
out
gs
sub
subl
pushf
sub
aam
mov
ret
sub
loope
in
pop
and
cmp
and
sbb
bound
lea
call
add
cmc
add
std
push
jne
jno
js
inc
loop
fmuls
std
inc
fistpll
decb
mov
sub
iret
out
add
mov
mov
arpl
mov
stos
cltd
inc
stos
jnp
ret
pop
adc
repz
xchg
rorb
nop
stos
add
sub
jge
fcomi
loop
jno
jnp
cmp
mov
test
mov
lds
lcall
jb
loop
addl
das
repz
lods
xor
or
out
scas
xlat
les
arpl
dec
dec
cmp
outsl
xchg
test
cwtl
mov
adc
and
add
std
sbb
xor
adc
sub
gs
cli
in
aam
push
int
add
xchg
rcll
jmp
sbb
lahf
inc
iret
push
sahf
lahf
rep
std
push
mov
jne
mov
scas
mov
sub
loop
int
mov
pop
sbb
es
or
jecxz
add
popf
add
mov
jmp
gs
loop
mov
jl
lcall
mov
sbb
sti
sub
sbb
add
insb
icebp
shrl
lcall
add
loop
jp
or
cmpsl
imul
pop
dec
lahf
fsubp
push
in
push
lahf
sub
jg
loope
sub
fcomps
dec
sbb
dec
push
adc
mov
cmp
addr16
test
les
hlt
cld
jp
stos
adc
sub
test
jbe
int
jb
pop
sbb
sbb
in
sbbb
lock
mov
es
mov
mov
xchg
xchg
ss
lahf
arpl
jne
xlat
or
pusha
scas
inc
faddl
jne
mov
std
mov
push
out
inc
mov
sti
xchg
add
mov
adc
int3
inc
aam
rcl
cmp
stc
rcrl
inc
pop
fcomps
inc
iret
dec
cltd
mov
dec
aaa
add
jbe
jp
addl
pop
lret
jns
inc
or
mov
pop
xchg
stos
or
loop
push
adc
xor
lods
jne
shr
pop
and
xchg
loope
mov
movb
jnp
inc
ja
dec
fists
add
sbb
push
popf
jmp
and
xor
push
aaa
xlat
loop
inc
mov
stc
fildl
cwtl
data16
aas
mov
fistpl
xlat
fcmovnb
push
jne
sub
add
int
fisubrs
xor
lock
sub
flds
faddl
and
jno
inc
loop
mov
push
adc
push
enter
push
xchg
push
fistpll
mov
shl
popa
mov
out
add
lcall
sahf
mov
loop
int
xchg
mov
sbb
jg
and
or
or
negl
dec
inc
loopne
jae
mov
and
in
push
sti
lds
sbb
pop
iret
add
repnz
sbb
les
gs
out
insl
push
addr16
insb
xlat
jae
adc
xchg
inc
fsubrs
imul
pushf
je
scas
pop
mov
sub
inc
mov
in
or
int
lahf
ja
xor
stos
add
mov
sar
aam
loop
xlat
outsl
lcall
mov
xor
xchg
inc
scas
push
and
xorb
stc
xchg
setne
mov
lret
add
mov
sub
lcall
insl
and
xor
pop
mov
popf
out
sbb
push
jle
sarl
test
loop
fwait
pop
push
push
add
push
sahf
adc
outsb
out
sub
mov
adc
scas
jle
cld
int3
ss
sbb
adc
mov
gs
ret
xchg
mov
aam
imul
notl
out
pop
int3
xor
pop
iret
loop
incb
add
or
sahf
mov
xor
cmpsb
adc
mov
aaa
popf
xor
jg
enter
mov
jnp
add
dec
sbb
sub
pop
inc
add
jnp
push
inc
loop
aam
sti
out
xchg
pusha
inc
sub
inc
jo
insb
cmc
loopne
jg
loop
dec
jecxz
mov
cld
icebp
int3
gs
mov
pop
fisubrs
enter
sbb
pop
test
push
fs
push
cmp
cmp
push
and
loop
aam
sarl
dec
add
dec
cmp
rclb
fucomip
bound
leave
mov
adc
xor
jl
vxorps
xchg
mov
nop
data16
mov
fsubs
loop
mov
jnp
ss
mov
loopne
pop
orl
adc
xor
push
movsl
test
push
lcall
test
add
sbb
push
jmp
xchg
decl
fsubrl
cmpsl
mov
push
push
sub
or
fsubrl
fucom
ja
mov
jbe
and
sbb
mov
or
xor
lock
ja
arpl
xor
fldl
pop
insl
push
addl
push
outsb
insl
xor
pushf
aaa
enter
sbb
stos
pop
fucomp
ja
push
out
call
insl
iret
push
mov
jo
hlt
pushf
xchg
jmp
mov
xchg
not
jne
out
gs
scas
xor
shl
inc
mov
fidivrs
aad
rcrl
dec
xchg
mov
mov
jg
xchg
mov
lahf
out
pop
jb
sti
sahf
jg
push
xor
fs
xor
ja
cs
xchg
pop
cmpsb
aas
and
mul
cmc
and
testl
push
xchg
imull
and
xlat
add
pusha
shl
rcl
pop
test
in
fs
stos
es
hlt
jmp
push
push
pop
cmp
jp
adc
push
loopne
xchg
cmp
jle
xchg
out
lcall
inc
and
mov
sahf
ja
cmp
jnp
faddl
sub
adc
mov
cli
or
xchg
sub
push
mov
mov
push
xlat
test
xor
lock
pop
xor
pop
lahf
jecxz
pusha
dec
mov
sbb
add
pop
xchg
cmp
inc
push
fwait
lret
int3
push
test
sbb
pop
divb
cmc
mov
aad
push
adc
popf
and
xorl
and
xlat
enter
sub
into
adc
dec
pop
nop
add
ds
stc
fsubrl
mov
inc
cmc
push
pop
div
ret
hlt
aad
adc
push
cmp
sbb
jle
pop
xor
iret
mov
sub
xlat
and
adc
lret
orb
xor
aam
xchg
adc
mov
sbb
fstpl
and
ret
sahf
stos
ja
das
mov
ret
mov
dec
xchg
cwtl
rclb
in
xor
inc
push
and
mov
xchg
mov
lds
faddp
push
test
iret
out
insb
adc
aad
jnp
mov
in
adc
outsb
ljmp
jmp
or
pop
insl
sbb
fistl
nop
mov
mov
je
outsb
das
xchg
add
sbb
mov
rorl
incb
clc
jmp
mov
test
imul
test
mov
incb
xchg
pop
ja
popf
jnp
jno
in
xchg
sub
frstor
jge
int
mov
rcl
dec
pop
cli
pop
push
bswap
lcall
es
xlat
mov
cmp
xlat
xor
sub
and
and
movsb
inc
or
aam
sbb
inc
and
cli
mov
xchg
cmp
out
rcrb
cmp
sbb
pop
loop
rcrb
inc
jne
and
jnp
inc
ljmp
repnz
push
incb
aaa
hlt
je
pop
mov
stos
lcall
aas
mov
or
mov
fstpt
lcall
ja
push
loope
das
stos
cmp
int3
call
into
push
pop
mov
xchg
add
xchg
cs
cmp
fiaddl
xor
mov
pushf
icebp
pop
frstor
add
in
push
shll
add
sbb
jb
jge
loope
lret
cmp
push
lods
adc
repnz
daa
xchg
lahf
xor
setge
dec
mov
enter
push
adc
xchg
xor
aas
mov
js
movsb
sarl
mov
sub
sub
xor
jns
test
dec
out
sub
enter
inc
push
aad
xchg
inc
ffree
pusha
mov
mov
ja
jp
jbe
cmpl
cmc
jge
jo
cmp
lods
scas
jecxz
and
add
gs
sbb
inc
mov
push
bound
ret
fistps
loop
cltd
pop
sbb
mov
lahf
cmpsb
or
adc
test
lea
mov
or
xchg
xor
cmpsl
stc
hlt
mov
int
cmc
test
enter
testb
push
lods
out
mov
pop
leave
xor
roll
xchg
test
push
fdivrs
cwtl
dec
add
mov
fmuls
clc
sti
cltd
fcomps
dec
sbb
or
add
scas
push
jne
mov
inc
push
cld
or
scas
add
inc
aam
inc
das
xorl
sbb
mov
cmp
fistpll
mov
cmp
cltd
push
or
push
pop
fists
shll
xor
or
lods
aaa
iret
adc
xchg
aam
sti
sub
or
aaa
cmp
xchg
mov
and
insb
lahf
and
ret
or
push
roll
repz
dec
fisubrs
jmp
sub
mov
fs
insb
incb
push
andl
and
lret
xchg
lds
lods
jb
gs
mov
and
flds
sbb
fldl
rep
movsl
xor
pop
or
push
push
and
sti
insb
xchg
push
pop
call
push
pop
jno
dec
push
bound
cmp
push
in
fcoml
cs
xchg
outsl
jne
xor
cli
sbb
sbb
imul
in
sti
sbb
std
push
cwtl
xor
icebp
stc
lods
shrb
jne
inc
rcll
iret
mov
push
test
loope
push
sub
add
adc
mov
push
clc
pusha
int
pop
sbb
ret
mov
insl
add
inc
adc
xor
jne
imul
nop
pushf
ret
dec
test
push
pop
fdiv
or
pop
cmp
mov
jns
je
call
or
adc
sbb
xor
int3
je
mov
cmpsb
jge
dec
stc
xchg
push
xlat
das
hlt
adc
push
sbb
movsl
cmp
adc
icebp
push
sbb
adc
cmp
sub
mov
je
jo
jecxz
jo
inc
outsb
enter
adc
push
inc
sbb
push
push
and
add
xchg
push
mov
fidivrs
sbb
mov
pop
int
cmp
and
cmc
lahf
out
cmp
mov
xchg
rorl
mov
repnz
sub
or
ficoml
mov
test
andl
sbb
dec
or
mov
xchg
sahf
push
push
dec
push
mov
loop
sub
aam
xchg
hlt
jae
cltd
jnp
sbb
push
in
fisubs
pushf
je
inc
scas
lret
or
shrb
xchg
cmp
adc
int3
adc
and
lock
dec
jmp
fcompp
push
cmp
adc
cmpsl
push
cwtl
add
dec
mov
lods
cmp
pop
lahf
ljmp
dec
or
pop
imul
mov
addr16
pop
aad
add
and
mov
jb
repz
sub
mov
fdivrl
mov
lret
pusha
and
push
sahf
aam
int
in
xor
aaa
outsl
enter
andl
and
jmp
mov
es
loop
cmp
dec
scas
xchg
mov
in
mov
ret
pushf
andl
push
inc
lea
in
loopne
pop
xchg
jg
add
sbb
aam
ret
inc
pop
cmp
mov
movsb
inc
pop
push
imul
adc
mov
cmpsl
outsb
xchg
pusha
pushl
sub
outsb
je
sbb
and
aaa
inc
mov
xorl
in
lock
adc
lods
and
pusha
sbb
sbb
pop
push
push
adc
mov
mov
ds
cmpsl
add
movsb
lods
in
loop
fimull
aam
popf
in
lock
fnstenv
mov
add
sub
cltd
in
add
int
xchg
int3
mov
add
loop
stos
inc
fcoml
inc
cmpl
sbb
mov
mov
xchg
jno
push
imul
mov
push
in
xchg
jae
lods
mov
adc
and
es
add
dec
pusha
jb
movsl
pop
sbb
test
data16
fiadds
outsl
ret
hlt
push
pop
or
or
or
cmpsl
out
push
loope
cwtl
aam
loop
das
sbb
push
ficomps
push
bound
jmp
push
jmp
mov
inc
mov
enter
mov
adc
mov
inc
sub
divb
es
fsts
jnp
cli
fcmovnu
iret
sub
jmp
mov
outsb
cmc
sbb
or
int
fistpll
xor
pop
xorl
dec
xchg
or
adc
and
out
mov
sbb
and
push
arpl
aas
jne
add
adc
imul
popa
scas
and
shlb
jecxz
out
in
fildll
pop
inc
inc
push
cld
loop
repz
mov
adc
jecxz
insb
sbb
cmp
scas
movsl
loop
xor
jmp
imul
jp
enter
enter
pop
popf
mov
hlt
sbb
mov
cmpsl
lock
pusha
cmpl
adc
mov
dec
popl
stos
push
sub
aas
xchg
push
xchg
repnz
adc
add
sti
sahf
xchg
add
inc
fcoml
mov
jbe
mulb
inc
aaa
mov
in
push
outsl
jg
pop
leave
mov
out
addb
jns
icebp
xor
cmp
std
sub
faddl
scas
mov
movsl
pop
add
sub
jbe
pop
rcrl
xorb
pop
in
adc
adc
mov
arpl
sar
enter
xchg
imul
cmp
aaa
mov
dec
outsb
test
and
out
or
nop
or
ds
scas
lea
insb
mov
jae
shl
push
cmpsb
push
sti
mov
std
arpl
insb
out
into
push
lahf
fiaddl
jns
inc
insb
ret
aaa
push
xchg
dec
sub
fisttps
sar
sbb
bound
lcall
mov
mov
test
fdivs
in
mov
add
cld
mov
iret
dec
mov
movsb
sbb
sahf
mov
popa
cwtl
pop
mov
andb
lret
lcall
sbb
stc
jno
sub
ficompl
adc
stos
mov
jo
pop
outsb
sub
stos
in
adc
pop
pop
cmpsb
insl
into
or
aam
out
test
jecxz
push
ds
adc
call
cmp
sbb
sysret
pop
out
or
dec
out
call
xlat
cmp
xchg
push
cmp
cmp
decl
fwait
mov
mov
outsl
adc
cmc
loopne
dec
add
mov
ss
test
sub
push
daa
adc
xor
out
clc
jb
mov
int3
ss
inc
aas
sarb
sar
test
mov
pop
ret
pushf
xor
or
outsl
add
jp
outsb
xor
dec
pop
pop
hlt
pop
nop
cmp
inc
test
test
xchg
pop
aaa
andb
add
test
cwtl
sub
ret
inc
inc
pop
pop
mov
sbb
aas
orl
test
lea
cmp
je
test
ds
xchg
xor
mov
adc
scas
js
cmp
loopne
push
mov
sbb
loope
sub
xchg
add
sub
push
or
fisubl
inc
test
lcall
add
pop
jo
fsubs
xor
jl
divb
sub
div
inc
jl
lods
pop
push
ljmp
je
adc
movsb
inc
aam
jmp
and
mov
xchg
mov
in
cwtl
mov
imul
pop
call
and
pop
push
push
push
ficoml
mov
adc
imul
icebp
leave
test
loope
jge
fstl
cmpsb
ja
popa
lahf
adc
adc
idivb
xor
jae
loop
sub
ljmp
das
xchg
xor
pop
insl
loope
out
cmpsb
jb
and
dec
mov
mov
fnstsw
sti
jb
icebp
ja
and
lock
nop
fists
mov
push
sub
cli
xchg
push
adc
je
pusha
scas
ret
push
rclb
mov
je
call
lahf
push
cmpb
xchg
cli
jnp
je
and
sbb
dec
repz
hlt
out
out
ds
inc
sbb
insl
mov
notl
and
push
sbb
sbb
jns
insb
mov
fisttps
add
test
xor
xor
cmp
add
loop
sahf
or
sbb
rclb
add
mov
pop
insl
mov
scas
mov
cmp
jno
push
push
aad
scas
mov
jge
mov
push
call
sbb
or
sub
enter
and
cmp
insb
push
or
stc
mov
stos
mov
ljmp
in
add
push
pushf
outsb
push
mov
mov
adc
subb
shll
cmp
xor
sbb
jecxz
js
cmp
nop
rol
testb
popf
out
fisubs
pop
je
jae
mov
mov
into
mov
push
mov
inc
pushf
cmp
repz
dec
xchg
mov
add
sbb
pop
pop
sbb
sub
insl
and
das
sahf
cmpsb
loop
pop
and
push
scas
mov
adc
inc
scas
imul
jbe
add
or
insb
inc
jo
push
xchg
jnp
xchg
xchg
dec
dec
shlb
jecxz
movsb
mov
cmpsb
or
pop
mov
pop
sub
xchg
nop
mov
add
cmpl
and
push
sbb
scas
cli
enter
or
push
out
sar
insb
jno
movsb
xor
dec
xchg
iret
add
inc
mov
add
cs
push
sub
pusha
dec
test
sub
inc
cmc
push
fwait
dec
jae
mov
add
and
enter
cwtl
mov
les
lahf
sub
mov
mov
or
ret
insb
xor
stc
mov
jp
pop
aas
push
fs
sti
shl
out
psubb
mov
sarb
adc
iret
or
xchg
push
das
add
add
test
pop
add
xchg
je
and
jo
int3
mov
cmp
test
inc
ljmp
std
adc
rcpps
insb
push
and
and
int
xor
jb
sbb
lret
or
adc
outsb
and
inc
pop
out
nop
inc
aaa
jnp
out
cmp
mov
out
adc
or
sub
fisubl
sarw
ret
xor
sub
cmp
cmpsb
or
add
scas
pusha
mov
adc
xchg
mov
sbbl
out
test
pop
mov
ret
jp
lock
or
xchg
pushf
aad
jnp
daa
mov
pop
sti
std
dec
mov
loop
pushf
mov
shl
scas
push
cltd
pop
das
sbb
push
dec
dec
imul
fnstcw
adc
jl
je
mov
jnp
orb
lods
jmp
dec
jne
loope
or
mov
sbb
aad
dec
mov
loopne
aad
sbb
xor
outsl
add
lret
scas
jnp
shlb
push
sahf
lahf
add
cmp
xor
pminsw
sbb
roll
inc
jmp
or
jmp
or
adc
pop
inc
shrl
loop
rclb
fidivs
push
arpl
fistps
hlt
push
dec
inc
popa
loope
adc
jp
cmc
subb
jnp
stc
repnz
lahf
adc
fldl
or
std
stos
filds
mov
mov
lahf
fnstsw
pushw
mov
lret
adc
push
ret
push
repnz
jge
add
jmp
inc
imul
fistps
fsts
daa
cmp
sahf
fcoms
imul
dec
lret
mov
hlt
outsb
or
shll
sbb
in
jmp
sbb
cli
push
adc
cmpb
pop
lock
pop
loopne
sbb
push
xchg
mov
add
into
sbb
push
rolw
push
sbb
mov
ret
xor
movsl
popl
lcall
pop
sbb
sahf
or
sbb
xlat
pushf
leave
xchg
cmp
adc
inc
aaa
adc
popa
ljmp
cmp
jecxz
jmp
adc
jecxz
in
das
adc
in
mov
sub
aaa
cmpsb
popf
sbbl
sbb
clc
add
or
sahf
push
movsb
mov
dec
push
and
inc
leave
adc
mov
lods
pop
xchg
adc
loopne
cmp
pop
push
and
pop
loop
sbb
push
iret
ljmp
je
jecxz
cmp
lahf
push
sub
jmp
xorl
fdivrs
scas
les
jnp
incb
and
pop
mov
mov
cmp
ret
cmpsl
aad
adc
or
iret
mov
push
mov
xchg
dec
jo
cmp
test
ljmp
sbb
mov
stos
ss
push
inc
ss
xchg
pop
jno
lahf
dec
or
pop
mov
adc
pop
insl
stos
in
cmp
loop
mov
jnp
sbb
add
sub
gs
xlat
movups
sahf
xor
dec
sbb
mov
xchg
jb
push
or
inc
sbb
dec
cmp
cmp
mov
adc
fidivs
inc
lock
dec
ja
fwait
mov
test
mov
adc
inc
xchg
xor
stos
call
xchg
or
adc
mov
mov
cwtl
jnp
mov
add
hlt
rolb
fs
ss
push
push
inc
dec
aam
stos
mov
dec
pop
pop
int
jl
and
notl
inc
mov
push
out
jmp
ret
xor
sbb
ftst
mov
mov
pop
add
outsb
sahf
jb
mov
cmp
loope
pop
cmp
push
sub
cli
out
xor
add
cwtl
adc
cmpsl
and
xchg
jne
jp
pop
jno
das
loope
sbb
repnz
and
ljmp
fchs
and
xchg
and
mov
inc
push
es
jp
frstor
mov
cld
punpcklbw
xchg
repnz
mov
test
movsb
adc
std
pusha
not
mov
add
xor
add
fs
sbb
mov
adc
xchg
imul
pop
daa
jno
adcb
adc
pop
scas
int
sbb
mov
adc
into
pop
sub
enter
xchg
push
out
lock
mov
fwait
insl
pop
sbb
add
fists
lahf
stc
mov
jp
sahf
adc
add
test
and
push
jl
and
or
rol
gs
lcall
ret
imul
push
dec
jecxz
inc
iret
adc
jne
jmp
sbb
sahf
dec
fcmove
popf
mov
imul
dec
out
mov
lahf
aad
inc
roll
outsb
sbb
pop
cmp
and
pop
push
push
push
loopne
cmp
leave
loopne
jne
in
loope
cmp
jg
sti
and
data16
fists
pop
cmp
fs
rorb
pop
insl
cmp
cmp
xor
sub
test
out
and
int
rcr
sub
popl
leave
sbb
adc
js
popa
add
add
sbb
out
repnz
push
xor
and
jnp
jns
scas
pop
out
push
mov
add
dec
sbb
rcrb
add
pop
mov
jo
sbbl
hlt
insb
and
or
mov
cmp
cltd
sub
inc
or
cmc
test
mov
loope
mov
arpl
shl
and
push
and
cmp
mov
dec
cs
xchg
mov
xchg
jne
xchg
add
mov
sbb
adcb
jp
lock
xor
dec
push
test
addr16
sub
cltd
out
ficoms
imul
mov
add
cmp
mov
add
inc
and
push
imul
sbb
jl
addr16
mov
sub
push
xor
dec
imul
inc
jge
xor
push
fisttps
and
cmc
imul
mov
sub
repz
inc
sbb
pop
mov
adc
or
call
addl
dec
pusha
jb
arpl
les
mov
mov
ja
rcl
sbb
inc
pushf
xor
aad
into
and
lahf
jne
cld
in
pop
iret
aas
mov
pusha
pop
gs
dec
rcrl
pusha
mov
adc
sub
das
and
lcall
mov
mov
cmp
call
xchg
xchg
adc
rolb
scas
lcall
xchg
cmp
add
cmp
jne
push
pusha
push
inc
xchg
xchg
dec
icebp
or
pop
push
rcrl
cmpsb
dec
sub
cmp
fsts
shrb
mov
in
je
jl
incb
pusha
pushf
call
add
leave
pop
or
xchg
adc
aad
sbb
or
add
ds
add
inc
and
sbb
lds
adc
mov
lods
insb
out
rcll
push
cmp
lret
ret
addr16
adc
fcompl
xchg
testl
xlat
aam
and
lcall
fwait
xchg
pop
add
aam
pop
stos
xchg
outsb
add
dec
insl
loop
mov
fcmovbe
push
inc
xchg
mov
iret
dec
pop
and
mov
out
sbb
add
xchg
or
je
call
cmpsl
pop
lcall
push
fildll
push
pusha
inc
mov
arpl
mov
lcall
ss
rclb
jno
mov
sbbl
xor
std
xchg
xchg
cwtl
inc
dec
hlt
lods
cwtl
pop
adc
loop
jnp
mov
push
outsb
iret
hlt
push
push
pop
sub
pushf
adc
dec
sub
out
ror
lods
lock
and
add
mov
mov
arpl
insl
and
in
imul
jp
mov
sbb
rorb
das
test
adc
mov
ljmp
pop
negl
pop
loop
mov
xchg
push
fldt
xor
scas
mov
jbe
rorb
add
jbe
add
lock
jne
ror
rolb
mov
shll
rcrb
fnstenv
dec
push
jne
pop
jns
xchg
rcrb
sbb
lret
or
pushw
icebp
add
cltd
add
push
mov
popf
push
mov
cmp
jmp
nop
pop
lret
sub
xlat
jae
outsl
xor
sbb
das
or
scas
xchg
jg
add
js
fldl
or
andb
jl
loopne
imul
loop
es
ljmp
shl
xor
leave
outsl
add
pop
repz
add
push
sbb
push
xchg
scas
ljmp
push
xchg
stos
dec
cmp
fnstsw
sub
inc
pop
add
cmpsl
mov
andb
cmp
jno
sub
jnp
xlat
dec
mov
pop
xor
sub
loope
mov
adc
mov
cmp
popf
jno
mov
mov
cvtps2pi
std
stc
inc
mov
ljmp
xchg
divb
cmp
dec
int
mov
sub
push
popa
stc
push
push
and
mov
cmp
pop
in
jb
jmp
fdivr
dec
imull
pop
clc
unpcklps
lcall
ljmp
xorb
sub
mov
adc
sbb
and
fs
sub
or
out
push
dec
iret
punpckhdq
fbld
sahf
in
xchg
out
xchg
dec
push
cltd
add
and
je
ret
dec
mov
in
mov
push
lret
lds
add
insl
loop
xor
mov
dec
add
rol
nop
hlt
or
add
dec
pop
cmp
dec
or
or
leave
sub
sub
inc
pop
ficomps
adc
xchg
iret
xlat
add
xchg
xchg
pushf
xchg
out
movsl
loop
inc
cli
adc
push
xchg
pop
pusha
add
dec
iret
adc
push
sub
dec
enter
sbb
lahf
push
and
lret
or
xchg
rcrl
or
sub
xchg
inc
jae
push
xchg
cmp
sub
inc
idivb
push
insb
inc
lds
neg
fdivr
enter
loop
popa
mov
fisttps
in
in
scas
mov
jb
jg
adc
pop
in
sub
stos
and
push
jl
stc
sti
mov
pop
inc
incb
out
out
xchg
jnp
fmuls
sbb
cmp
inc
push
xor
das
adc
sub
cmpsb
dec
adcl
mov
pusha
nop
cmp
xchg
nop
add
test
push
sub
ja
sbb
div
pusha
adc
aam
addr16
ret
mov
lods
in
in
push
cltd
mov
loopne
mov
or
lahf
cmp
push
ljmp
sub
mov
xchg
jecxz
adc
adc
cmp
aas
mov
cmp
jp
int
int3
test
mov
pushaw
inc
and
bswap
sbb
movsl
and
outsb
sub
nop
enter
test
add
jbe
scas
push
mov
adcb
or
dec
loop
push
lods
repz
push
ficompl
jnp
idivb
xchg
jge
jb
inc
cmp
lods
add
adc
scas
enter
cmpl
imull
fimull
xchg
lret
sub
les
jle
push
stos
jl
dec
push
mov
lea
cmp
fsubrp
test
push
xor
xchg
incl
push
adc
adc
push
jnp
mov
out
sbb
dec
or
add
lea
std
lds
mov
push
jnp
popa
test
inc
add
pop
adc
orl
dec
cmpsb
lcall
stos
jo
and
outsb
and
pop
repnz
sub
adc
dec
out
leave
hlt
push
cli
outsl
xlat
dec
stos
jg
and
push
xor
mov
xchg
push
add
push
push
pop
in
lahf
scas
int
mov
loop
icebp
and
jge
add
nop
aad
pop
int3
fsts
cmp
addr16
pushf
or
testl
xchg
sti
arpl
mov
or
call
jne
dec
in
sub
pop
aad
adc
adc
xor
push
fildll
mov
add
loop
or
sbb
mov
out
push
xchg
and
jge
inc
mov
jno
or
call
mov
jbe
xchg
in
cltd
mov
mov
mov
or
inc
xchg
repz
inc
fbld
xchg
movsl
cmp
and
in
jg
fwait
xchg
xchg
jl
int3
or
sub
adc
ret
iret
or
inc
iret
sbb
or
push
pop
mov
cmp
rclb
test
pop
inc
jg
mov
testl
inc
xchg
and
pop
inc
std
add
out
jnp
in
jnp
xchg
sub
cmpsb
jnp
in
mov
xchg
mov
jo
out
xor
and
xor
mov
add
pop
jno
fwait
lret
xchg
lods
mull
xchg
outsl
jb
mov
sbb
lcall
add
inc
or
hlt
mov
sub
lcall
inc
push
cmp
xor
mov
push
sbb
jbe
scas
loopne
clc
pop
xlat
dec
adc
sar
filds
cmpsl
jmp
adc
or
loope
imul
mov
js
iret
je
imul
jne
push
sahf
loop
fcompl
ds
cmc
adc
fldenv
sub
add
dec
arpl
pushf
jle
push
mov
out
jnp
js
jg
adcb
adc
fidivs
jecxz
movsl
cwtl
and
sar
xor
test
mov
mov
xchg
aad
xchg
adc
or
sub
and
xchg
jno
lret
cmp
cmp
push
fildl
int3
out
pop
and
dec
xor
or
mov
mov
mov
addr16
mov
cmpsb
and
xchg
cmp
in
or
aas
jle
push
xor
ss
sbbl
in
ljmp
mov
cli
pop
cltd
iret
jo
mov
dec
and
adc
xchg
xor
cs
sub
xchg
push
adc
fcmovbe
cltd
mov
lcall
fs
imul
gs
fstps
pushf
in
ret
loop
mov
or
jns
add
outsb
dec
or
iret
xchg
pop
adc
push
xor
and
push
push
mov
es
push
popf
add
adc
loopne
fwait
xchg
pop
insb
xchg
faddp
pop
ja
dec
mov
push
jnp
enter
xchg
mov
iret
ret
xchg
imul
fnstenv
inc
mov
xchg
sub
adc
test
shr
sbb
loopne
jge
inc
stos
aam
pusha
pop
and
mov
int
aas
ret
sub
pop
sbb
dec
push
sahf
stos
dec
fs
lret
mov
jae
daa
test
sub
rorb
pop
loop
add
sbb
out
cmc
les
sbb
xchg
ret
aas
bound
test
cmpsl
adc
mov
mov
jecxz
xor
inc
out
push
shl
jl
lahf
pusha
mov
outsb
and
leave
push
popf
add
into
decb
subl
jecxz
sysret
je
fcomi
mov
cmp
lret
loope
fbld
jo
insl
call
cmp
sbb
or
adc
rcrb
scas
and
cmp
mov
test
loop
out
movsb
push
cmpsb
and
pop
aas
dec
jg
jle
inc
popa
push
pop
sti
outsl
xchg
or
add
pop
rclb
add
sub
pop
das
cmp
mov
jnp
inc
xor
inc
fnstenv
rcl
mov
adc
lods
xchg
shrl
sub
call
adc
mov
jnp
xlat
xor
inc
pop
enter
imul
or
push
shl
jg
ja
xor
pusha
fs
jno
sub
movsb
mov
pushf
jmp
fmuls
push
mov
xor
mov
jp
fists
inc
xchg
outsb
inc
inc
hlt
cltd
bound
push
push
mov
mov
adc
cld
div
mov
mov
fisttpll
mov
in
push
cmpsb
sarb
sub
xchg
shrb
sbb
adc
adc
outsb
lahf
insl
mov
nop
jge
sub
ret
inc
sub
or
stos
inc
aad
out
jo
pop
xchg
xchg
call
in
mov
cmp
add
int
cltd
push
pop
inc
in
mov
push
mov
xor
sub
inc
or
pusha
xchg
fmuls
movsl
lds
mov
rorl
cmp
pop
inc
pop
cwtl
sub
pusha
and
cwtl
adc
mov
loop
xor
xchg
data16
jne
movl
ret
insl
xchg
or
int3
mov
cmpsl
ret
xchg
fwait
adc
stos
jns
pop
and
insb
sbb
mov
mov
loop
add
iret
or
push
loop
mov
cmp
and
sbb
adc
rorb
cmp
fs
cmpl
adc
mov
cmove
xchg
jecxz
push
push
lahf
into
and
push
fimull
xor
push
mov
aam
movsl
sub
lods
sbb
push
loop
cmp
and
int3
mov
jns
xor
mov
rclb
xlat
or
push
jp
insb
push
pusha
aam
lea
insl
fcmovnbe
loope
enter
decb
rcl
scas
in
es
pop
roll
add
cmc
stos
insl
fsubp
xchg
cwtl
leave
scas
jae
sbb
aad
icebp
and
shl
jmp
fldt
jno
cwtl
push
dec
or
or
cmpsb
add
ds
xor
mov
pop
out
dec
loope
mov
or
cmp
sub
fucom
add
mov
push
cltd
or
xor
mov
pop
pop
add
pop
inc
add
pusha
push
mov
daa
sbb
test
mov
xlat
imul
out
into
lcall
out
add
push
mov
xchg
fildll
pop
in
push
div
out
sbb
int
push
and
scas
push
pop
push
sub
aas
pand
stos
ret
adc
stc
mov
adc
in
mov
mov
test
xchg
mov
shrl
dec
mul
aad
pop
xlat
test
jnp
push
push
push
outsb
scas
lahf
ret
mov
adc
fsubr
loop
add
xor
call
mov
adcl
ds
push
adc
lret
icebp
enter
loopne
ss
dec
mov
add
dec
mov
xchg
insl
ja
fldl
mull
jb
dec
sti
sub
repnz
inc
mov
mov
mulw
lods
dec
lea
pop
pop
and
mov
scas
xor
mov
ret
fs
icebp
rcrb
adcb
imul
pop
pop
mov
rcrb
xchg
mov
jnp
mov
test
cltd
mov
sub
mov
ds
or
fwait
std
popf
ret
adc
imul
dec
call
cltd
mov
jbe
push
dec
fsubrl
xlat
insl
sbb
inc
mov
cwtl
jnp
imul
out
std
test
aad
push
jo
scas
repnz
adc
inc
jne
jle
or
lds
pop
clc
or
xchg
testl
push
test
cli
push
popa
mov
mov
pop
push
adcl
pop
dec
clc
jmp
or
jle
aam
mov
int
mov
or
mov
nop
iret
or
ss
fisttpll
add
rcll
mov
pusha
inc
test
mov
mov
out
aad
push
sbb
leave
aam
shr
movb
cmp
aam
sub
loopne
sub
sub
push
push
fsub
dec
and
fs
sub
xchg
inc
sub
loop
lret
arpl
jae
iret
cmp
dec
jb
ja
adc
xchg
imul
push
xchg
and
in
fisttpl
cmpsl
sub
arpl
ret
sbb
sti
adc
sub
pop
lret
and
inc
xchg
scas
cmp
sub
test
inc
out
out
xor
push
jg
and
push
stos
testb
add
mov
pop
loop
movsl
xchg
icebp
xor
xchg
xorl
adc
mov
jmp
push
shrb
pop
ror
pusha
shlb
in
jmp
lahf
inc
sub
mov
or
cmp
pop
lahf
dec
sub
push
outsb
inc
xor
dec
and
inc
sahf
xor
dec
inc
scas
push
mov
mov
fisttpl
add
or
outsb
out
push
xor
insl
push
fsts
fcompl
decl
into
cmp
add
mov
mov
push
test
push
xchg
jmp
into
push
xlat
sbb
mov
lret
pushf
pop
push
adcb
outsb
ljmp
jge
mov
hlt
inc
adc
pop
stos
pusha
pop
std
dec
out
xlat
dec
or
cmp
cmpsb
add
repnz
mov
add
arpl
mov
lock
pop
inc
jne
add
out
and
jl
pushf
aad
nop
push
sbb
mulb
cmp
dec
aam
cmp
cli
or
notb
sub
jae
pusha
mov
test
adc
movl
pop
sbb
sub
arpl
and
fdivl
push
fidivrl
and
imul
and
mov
stos
inc
xchg
pop
lahf
lahf
nop
pusha
fldl
sbb
fs
adc
int
iret
dec
xchg
movsb
idivl
xchg
dec
push
repnz
jo
add
pushf
sub
jnp
in
loop
nop
add
push
fists
dec
inc
and
inc
push
sbb
xchg
xchg
jl
xchg
mov
mov
leave
fisubrs
out
lods
push
fwait
test
adc
fwait
jge
push
aad
scas
into
jnp
mov
mov
push
mov
add
sbb
add
in
bound
add
push
rolb
lods
push
outsb
int
sbb
mov
aaa
jbe
inc
je
adc
adc
lret
lods
sahf
lds
push
sub
andb
pop
push
mov
test
sbb
sbb
test
fists
hlt
fistpl
add
lret
test
and
pop
xchg
sbb
mov
or
sub
sarb
adc
mov
lret
aad
pop
and
mov
sub
mov
cmp
dec
scas
xchg
push
inc
sbb
jg
addr16
add
mov
lahf
ret
inc
ret
inc
loop
lds
shr
jp
das
popf
hlt
fs
enter
pop
jmp
cmp
adcl
arpl
lds
test
js
psrld
dec
jecxz
mov
sbb
es
xchg
and
testl
inc
loope
outsl
xchg
jg
dec
imul
out
inc
cs
out
pop
dec
sti
out
inc
pop
fs
es
imul
das
sahf
xor
fiadds
pop
pop
inc
ja
outsb
push
test
cmc
push
sub
mov
fists
mov
jge
cmc
mov
loopne
enter
mov
je
lret
ret
xor
int
sbbl
mov
fistpll
lcall
mov
ja
cwtl
dec
sub
and
scas
shlb
xlat
sub
addb
addr16
sarl
mov
dec
lods
jns
xlat
add
mov
mov
inc
adc
fisttpl
div
mov
or
xchg
cmp
mov
pop
rolb
sub
stos
das
dec
pop
paddsb
dec
adc
into
subl
lret
pop
push
dec
inc
rcr
jne
xor
xchg
push
sub
loop
sub
arpl
or
test
jecxz
mov
shr
call
push
cmpl
sub
jmp
incb
sub
dec
enter
push
sub
add
push
mov
std
xchg
aad
sbb
fsubrs
mov
outsb
push
fists
hlt
mov
ds
dec
shrl
adc
lds
or
jne
das
jmp
mov
xor
mov
inc
pop
out
fidivrs
mov
loop
int3
cltd
adc
das
or
xor
popaw
sbb
ret
sbb
and
jbe
mov
mov
push
inc
pop
adc
sbb
int3
push
push
call
adcl
pop
xor
mov
rclb
cld
popf
in
xor
test
repz
pop
push
xor
pop
fstl
loop
xchg
lahf
sub
xchg
pop
jle
add
pop
ds
mov
outsl
mov
and
pop
push
mov
mov
dec
insl
push
push
or
scas
mov
lahf
and
incb
jns
nop
pop
divb
push
inc
in
inc
dec
lret
jne
lods
mov
imul
test
xchg
and
addr16
mov
cmc
in
push
push
dec
fldcw
sub
adc
mov
mov
aad
jmp
mov
int
push
movsl
sub
nop
xchg
fstps
xchg
outsb
or
call
and
add
test
sbb
jbe
dec
sub
lods
xor
add
mov
lea
loop
rorb
imul
mov
push
imul
shll
ret
xchg
decl
mov
loopne
push
xchg
and
mov
inc
gs
sbb
div
fscale
ds
cmp
sub
jg
cmc
xor
fisttpll
pushl
dec
xchg
rclb
pushf
mov
in
cmp
adc
fs
fs
push
xor
xchg
aad
sub
fiaddl
inc
and
in
fisttpl
xchg
das
ficomps
adc
push
int
pop
int3
movsl
jns
add
fs
mov
outsb
das
cmp
xorb
pop
adc
lahf
xchg
push
pandn
mov
fldl
aad
mov
or
test
in
leave
jp
cmp
fistps
add
in
inc
push
mov
mov
sbb
jmp
ja
hlt
fmuls
pushf
movb
sbb
cmp
inc
jg
mov
int3
jnp
adc
fildll
add
mov
add
stos
pusha
insl
push
outsl
push
mov
stc
cmpl
or
imul
pop
bound
je
in
jb
push
outsl
lret
daa
jns
inc
out
lret
in
out
adc
jg
enter
push
dec
call
dec
sub
fs
cld
decb
aam
mov
lret
loop
stc
ret
in
adc
inc
out
push
loope
aad
divl
lahf
pop
insl
jp
scas
inc
add
inc
test
jo
insb
and
xchg
jbe
push
jne
mov
inc
mov
iret
dec
xor
aas
and
push
push
adc
loope
mov
inc
sbb
cmpsb
dec
loop
dec
dec
or
jl
sub
sub
jp
push
repnz
add
sub
add
xchg
sbb
les
jl
loop
and
insb
or
int3
out
and
popa
cmp
push
insl
fs
pop
dec
outsb
out
sahf
sub
mov
jnp
and
add
adc
repz
stos
cld
xorb
pop
in
jnp
and
dec
xchg
mov
pop
test
jae
xchg
mov
fisttpl
adc
adc
jle
pop
push
fisubrl
xchg
imul
loop
call
pop
adc
mov
push
add
movsl
call
pop
rclb
adc
jns
sub
xor
mov
mov
int
adc
push
test
loop
sub
mov
call
pop
pusha
leave
sub
jecxz
aad
xorl
sbb
xchg
fsubrs
sbb
xchg
lret
mov
mov
inc
gs
add
popa
xchg
sbb
sar
push
mov
mov
xlat
call
dec
out
ret
les
cli
imull
iret
or
fcomip
xchg
outsb
out
mov
jae
leave
fcomi
cmp
movsb
mov
jo
mov
mov
pop
push
out
cmp
lods
xchg
xor
ljmp
xchg
mov
push
in
mov
popf
fstsw
nop
mov
fstpl
loop
cli
nop
push
jnp
xchg
in
jp
or
sub
stos
adc
add
mov
cltd
pusha
cmpsb
mov
cmp
in
dec
movsl
loop
adc
push
lahf
cmp
xor
jno
sub
iret
dec
loop
fdivrp
cmp
int
ret
shll
add
adc
jnp
inc
fs
lea
pop
call
cmpsw
repz
jmp
movsb
rcr
nop
sahf
mov
xchg
mov
in
mov
inc
mov
scas
pusha
pop
mov
sbb
adc
pop
repnz
mov
fisttps
test
jbe
add
out
push
test
add
lret
outsb
movl
add
roll
cmpsl
repz
inc
cltd
scas
test
popf
push
stos
sbb
mov
sti
add
push
cltd
in
imul
outsl
les
rol
je
adc
cmp
cli
inc
shrb
lret
cwtl
cmc
and
inc
shlb
mov
leave
sbbb
outsl
mov
aas
sub
mov
sub
arpl
xor
rcl
push
or
out
insl
mov
xchg
mov
inc
xchg
aam
push
dec
or
or
cli
fwait
inc
and
jns
push
mov
mov
push
add
addr16
mov
out
mov
inc
adc
pop
int
xchg
pop
addl
mov
xchg
or
sub
lods
mov
cmp
push
jg
in
call
leave
fldl
repz
mov
out
add
xlat
xchg
insb
xor
mov
sti
sub
imul
int3
sahf
dec
jp
testl
mov
fildl
jg
ds
mov
push
xchg
ficoml
sub
adc
aam
loopne
out
xor
mov
ret
std
sub
loop
mov
xchg
add
in
out
fisubs
sub
int
xchg
shrb
cli
sub
mov
push
xor
in
lea
push
into
jge
mov
mov
or
fprem
fdivrs
lock
xor
sbb
lcall
outsb
cltd
jbe
ds
movsb
sbb
pop
lods
test
out
in
out
mov
jg
lahf
aam
inc
orl
movsb
insb
inc
fldcw
mov
xchg
xchg
iret
add
test
test
div
out
lahf
pop
ret
mov
push
fldl
ljmp
les
ss
xor
pop
jbe
xchg
jno
or
mov
pop
ljmp
dec
insl
push
and
or
leave
push
gs
lret
mov
inc
fildl
xchg
or
cwtl
aas
lock
cmp
adc
dec
sub
xlat
rcrb
inc
pushl
jmp
sti
mov
mov
jg
xor
inc
ret
dec
mov
xlat
lret
or
ljmp
inc
cwtl
jne
ret
loop
lret
sub
es
dec
push
test
push
add
mov
in
xchg
xor
or
sub
cmp
add
dec
mov
sub
mov
mov
push
mov
sub
pop
movntq
or
pop
pop
int
sahf
push
sbbb
test
loopne
js
push
sub
and
push
notl
add
insl
inc
add
xor
sub
test
push
stos
add
sub
dec
in
sbbl
in
out
or
add
flds
aad
add
rorb
dec
loop
je
test
push
imul
icebp
cmp
cmp
or
fisubrs
add
dec
pop
sbb
dec
or
cmp
pop
daa
stos
adc
negl
jmp
ljmp
leave
push
inc
xchg
lock
in
fisubl
cwtl
test
mov
jae
aad
test
dec
jnp
inc
fs
inc
add
out
adc
stos
fbld
pushf
mov
push
fucomip
in
orb
cld
push
das
es
xchg
je
cmp
jnp
push
or
out
mov
loop
mov
adc
mov
adc
sbb
ja
xor
sbb
mov
scas
cmpsl
jg
lds
movsl
xor
stos
pop
pop
out
add
fbstp
or
adc
out
mov
dec
iret
inc
movsb
cmp
cmp
test
sbb
mov
test
nop
hlt
dec
pop
push
popl
insl
sahf
push
mov
add
fdivrl
sti
orl
nop
sbb
push
adc
fistl
rcl
sub
mov
int
xchg
mov
lods
imul
outsl
aas
test
in
aad
enter
fwait
cmpsl
cwtl
lods
xchg
shrb
outsb
stos
xor
ja
xor
adc
cwtl
push
inc
adc
xchg
lcall
dec
sub
cs
int3
jecxz
pop
inc
sti
jnp
test
and
sbb
inc
sbb
jne
sub
test
inc
cmp
into
xor
jle
pop
cwtl
mov
stos
xor
mov
jle
aaa
jp
mov
add
cmc
lods
xor
test
fsts
mov
ficoml
ljmp
test
mov
icebp
pop
xor
int3
jne
add
add
push
in
arpl
mov
mov
jle
pop
subl
cli
subb
cmp
mov
imulb
repnz
xor
lods
aam
testb
movsb
mov
mov
imul
inc
adc
mov
mov
je
lret
lds
cmp
add
xlat
adc
int3
sbb
fucom
jmp
imul
popa
lods
fildl
sbb
mov
push
pop
cmp
insb
inc
lock
js
xor
test
arpl
adc
lcall
and
insl
loop
aam
imul
rolb
adc
in
add
or
inc
adc
cmp
out
aaa
xchg
cltd
mov
aad
and
inc
vprotw
loope
cmp
cmpsl
shlb
xor
lea
mov
mov
xor
fs
pop
cmc
sar
pop
out
movsl
sub
insb
scas
sbb
gs
adc
dec
sahf
les
das
cltd
stos
inc
ficoms
mov
repz
loope
lret
out
rcrl
pop
dec
aad
xchg
mov
cmc
cmp
imul
daa
cmp
inc
push
and
or
cmpsl
or
ret
imull
push
lods
mov
mov
pushf
adc
xor
push
call
iret
out
lcall
pop
xor
cmp
aaa
xchg
pop
scas
sbb
dec
lret
sbb
mov
loop
xchg
mov
xlat
imul
add
push
mov
mov
mov
call
sub
pop
popf
adc
sbb
lcall
jmp
and
test
out
mov
mov
push
decb
and
int
or
andl
clc
gs
xchg
roll
cmpsb
lret
and
les
add
sahf
xchg
pusha
add
fs
fbld
sbb
xchg
dec
inc
lock
punpcklbw
bound
js
or
pop
shrl
adc
and
jmp
inc
ret
pop
jno
ja
cmp
push
test
xor
mov
pop
and
mov
in
jg
scas
int
mov
dec
adc
adc
loop
push
sbb
stc
int
lcall
pop
call
pop
add
outsb
or
mov
outsl
rol
mov
cmp
ja
push
adc
enter
inc
lahf
mov
xchg
loopne
scas
pop
je
stc
rcrl
addl
iret
repnz
gs
leave
loop
in
cmpsb
jle
add
dec
mov
loop
repnz
jae
notl
mov
xor
sub
or
fistl
fstp
jne
jle
imul
in
adc
sbb
jnp
sbb
aad
loop
sub
add
jo
cmp
cld
test
adcb
or
and
loop
cmp
add
imul
mov
repz
fcomi
push
dec
add
xor
dec
adc
mov
in
pop
loopne
out
push
jge
and
fwait
sub
pop
testl
or
jl
scas
sbb
je
aaa
ja
dec
scas
pop
cmpsl
mov
repz
aam
push
std
je
lock
push
imulb
add
gs
inc
aad
add
cmp
in
mov
push
inc
push
je
and
fsubrs
shll
jmp
loop
jne
popa
mov
push
cs
aam
cld
ret
sbb
es
daa
out
addr16
pop
sahf
dec
cmp
adc
and
dec
inc
add
mov
repz
sahf
test
jno
push
fists
xor
jle
sahf
add
or
and
cmp
int
adc
inc
movsb
leave
push
adc
jne
or
nop
popa
mov
jmp
loope
inc
cmpsb
dec
xor
xchg
iret
cmpsl
cwtl
negb
mov
and
xchg
call
mov
xor
in
sbb
aad
lods
jae
pop
ds
in
insl
lods
sub
lock
and
sbb
pusha
imul
sbb
push
add
mov
ret
xchg
jg
xchg
insb
sbb
cmp
xchg
fdivrp
and
adc
ds
fldenv
pop
cltd
test
sbb
cmp
cmp
adc
fistps
aas
push
sbb
fstps
shll
jns
insb
or
mov
aaa
xor
sbb
out
push
cltd
fcom
jbe
xor
adc
push
mov
pop
clc
js
fsubs
in
lret
push
in
or
pop
in
sbb
mov
stc
mov
ljmp
mov
int3
clc
cltd
xchg
sbbb
lock
cmpsl
scas
cld
pop
mov
gs
cmp
add
dec
sbb
dec
adc
inc
pop
jl
sysexit
pop
andl
lods
loop
fstpt
subl
sbb
pop
ljmp
sbb
sbb
leave
xchg
les
xor
pop
fnstenv
sti
fstpt
rcrl
popa
in
in
add
jns
inc
xchg
sbbb
out
out
push
push
sbb
xor
push
enter
pop
mov
negl
nop
js
out
push
outsl
pop
popf
pop
cmp
sbb
xchg
xchg
jge
push
sub
clc
stc
rcr
fstps
mov
xchg
dec
ljmp
mov
pop
lods
lods
ret
or
cmp
orl
or
sbb
addl
inc
xchg
shrl
clc
mov
dec
cmp
js,pt
out
push
sbb
rol
xchg
add
xchg
in
pop
xchg
pop
mov
mov
test
ret
in
in
cmp
out
gs
fdivrl
out
fldt
add
cmp
fsubs
mov
xchg
push
dec
fmuls
sbb
mov
js
pop
sub
inc
push
aas
cmp
xor
push
sbb
nop
clc
stc
add
fcmovnu
test
add
cltd
lock
mov
cmp
addl
cmp
je
xchg
inc
pushf
mov
aaa
fistpl
adc
xchg
pop
push
inc
into
mov
adc
sahf
inc
sbb
out
push
aam
rorl
push
sahf
clc
jns
fmuls
mov
pop
hlt
fmuls
pop
xor
scas
sbb
jne
add
std
clc
mov
sub
fsub
fsubs
in
and
cwtl
or
lods
mov
clc
pop
cmp
adc
into
popa
xchg
push
adc
insb
movsb
aas
stc
lock
xchg
out
in
in
add
mov
cltd
jo
xchg
movsl
iret
popa
or
cmp
clc
sbb
pop
jle
jnp
cmovle
xchg
mov
mov
jne
jmp
ficomps
in
add
js
out
in
in
add
pop
xchg
repnz
xchg
push
fs
jb
in
adcl
pop
push
push
sbb
clc
fnstenv
or
ficompl
or
pop
cmp
mov
mov
mov
in
add
sbb
fs
test
dec
mov
js
jl
icebp
cmp
cli
push
fisttpll
adc
bndldx
stc
shl
cmp
cmpb
xchg
sub
inc
fs
mov
lods
sub
clc
xor
clc
fadds
scas
rcrb
mov
stos
add
lea
adc
or
insb
sub
mov
aaa
mov
enter
mov
mov
pushf
insl
das
aad
sub
les
cmp
cmp
out
push
sbb
les
adc
int
mov
fnstsw
sbb
dec
scas
sarb
lods
ret
or
pop
mov
fsubrs
cli
jecxz
fisttpll
xchg
test
aaa
push
inc
out
xor
in
add
mov
dec
mov
rcrb
inc
mov
adc
cld
clc
clc
pop
fcoms
mov
lret
inc
das
ficompl
xorl
and
push
mov
push
cmp
out
xlat
xchg
or
dec
int
out
icebp
out
push
dec
mov
cltd
stos
jnp
pop
lods
sbb
test
or
mov
icebp
fdivs
sub
jg
scas
cmp
out
fwait
inc
pop
clc
pop
stos
push
add
xchg
filds
test
aas
cltd
sbb
cmp
repz
fnstcw
in
add
mov
fstpl
cltd
out
mov
cmc
jns
lods
orl
iret
and
lcall
pop
sbb
lods
lret
je
cltd
push
insb
adc
push
mov
insl
cmp
das
mov
mov
add
das
fcmovu
mov
shl
mov
call
push
lods
pop
mov
xchg
pop
iret
fstl
shll
popf
fmul
ja
fstpt
jmp
or
sbb
mov
xor
dec
pop
jg
jbe
adc
adc
fists
add
fsubs
push
cs
mov
or
add
xorl
push
cmpl
inc
std
or
xorl
dec
andl
js
pop
push
dec
nop
pop
jle
cmpsl
sbb
push
lods
dec
stos
ljmp
stc
loop
je
out
inc
adc
cmpsb
out
jns
out
in
in
jecxz
loop
fwait
add
clc
cmp
pop
sbb
push
push
inc
out
jmp
mov
xchg
or
jl
dec
lret
pushf
and
or
fnstsw
pop
adc
adc
sbb
addl
jo
fldenv
hlt
mov
in
repnz
mov
test
push
sub
inc
scas
cmp
je
sub
dec
out
clc
jl
adc
outsl
in
jno
sbb
or
and
sbb
pop
loope
and
rcll
les
pop
cmp
out
sub
das
in
sbb
out
lds
mov
dec
push
rcrb
enter
push
mov
clc
sub
cmpsl
mov
mov
fsubrs
jno
sub
rcrb
cmp
xlat
jbe
sarb
mov
adc
shrb
pushf
mov
add
fldl2t
mov
pushf
xlat
jns
das
mov
or
push
int
hlt
leave
ret
fnstenv
push
mov
mov
lods
and
mov
push
ljmp
pop
jb
or
xchg
sbb
xchg
lods
cmpsb
sbb
andl
jmp
out
in
sti
push
out
push
xor
cmpsl
sbb
das
dec
clc
or
jg
pop
out
in
cltd
xchg
dec
aas
test
sti
push
pop
enter
fsts
setbe
jp
aam
fwait
stc
shrl
push
out
lahf
fprem1
lods
pop
adc
push
cltd
sub
dec
or
ds
sbb
out
cmp
add
pushf
clc
fcoms
fmuls
fwait
inc
leave
mov
enter
cmp
out
or
mov
add
xchg
inc
hlt
push
pop
clc
or
push
lcall
mov
cmp
inc
add
sbb
adc
add
fmuls
enter
jnp
add
push
dec
movsb
dec
mov
decb
aaa
shl
cmp
out
sbb
sbb
lret
add
fsts
out
sahf
jbe
cmpsb
or
jns
sbb
pop
adcl
stos
push
and
mov
fcoms
out
sbb
adc
movsl
decb
js
or
jnp
rcl
xchg
pushf
fnstsw
mov
cmp
or
iret
roll
scas
fbld
cmp
adc
jle
lea
inc
mov
mov
aaa
fdivs
cmp
dec
fs
clc
mov
cs
out
push
js
lods
orb
push
adcl
fld
or
xchg
mov
mov
scas
jnp
jg
push
int
push
rcl
xchg
mov
dec
pushf
or
data16
inc
pop
xor
mov
push
lcall
int
aaa
clc
pop
or
xchg
push
fdivr
cmp
mov
or
xchg
adc
sub
clc
fnstenv
scas
jmp
push
lcall
inc
xchg
inc
lret
lea
sbb
clc
pop
fcoms
pop
idivb
sub
pop
pop
rcll
scas
or
shll
dec
xor
repz
mov
sbb
ss
mov
jl
das
mov
mov
fcom
or
lcall
int
push
cli
sbb
arpl
stc
cld
arpl
add
mov
cltd
je
lahf
enter
fistps
mov
push
clc
mov
in
in
add
mov
push
lret
rolb
pushf
cmp
ljmp
scas
cmpb
xor
stc
pop
mov
sqrtps
adc
xchg
fbld
cltd
push
pop
outsl
out
in
pop
cmp
pop
xchg
rcll
pushf
pop
sbb
popf
clc
sub
xchg
insl
jp
cmpsb
lahf
or
scas
add
push
xchg
sbb
lret
hlt
add
out
in
repz
movsl
xchg
sbb
xorb
mov
pop
jns
clc
pop
adc
sbb
push
jae
pop
ret
mov
lods
and
sbb
cwtl
mov
mov
fldcw
inc
cmp
or
mov
add
add
sub
mov
dec
add
mov
insb
das
pop
cltd
call
out
sbb
push
les
jg
jno
cmp
pop
mov
out
in
in
cwtl
or
js
mov
pop
imulb
stos
xchg
or
or
cmp
sbb
neg
rcll
mov
cltd
cli
lods
adc
pop
mov
push
loopne
aam
imul
in
xchg
aam
clc
clc
dec
fadd
mov
les
mov
in
lahf
js
pop
out
sub
cld
cmp
mov
xchg
fwait
sbb
sbbl
addl
xlat
lahf
push
subb
inc
mov
xor
xchg
clc
pushf
fmuls
mov
mov
push
stos
dec
and
xor
jge
cwtl
int
adc
adc
jno
insl
pop
cmp
adcl
rcll
pop
pop
fsts
push
daa
outsl
ds
dec
pushf
std
cltd
mov
add
pop
fdivr
cmp
jp
das
xchg
xchg
mov
or
jae
lods
xlat
loop
mov
dec
add
cmpb
out
push
fistpll
sar
xchg
icebp
xchg
sub
int
or
in
sarb
rcr
call
inc
mov
mov
divl
mov
int3
dec
push
sbb
fbstp
lahf
jbe
pop
clc
xchg
fsubrs
aas
test
cmp
out
dec
pop
mov
out
sbb
ss
mov
push
clc
mov
cltd
jns
aam
dec
popa
or
idivb
xchg
addl
std
fdivs
mov
xlat
pop
notl
ret
movsb
out
adc
mov
xchg
jecxz
add
pop
xchg
popl
clc
mov
aam
aam
pop
push
test
jno
cmpsl
clc
cmp
repnz
cs
or
mov
jb
js
movsl
or
or
iret
dec
add
cmp
dec
adc
mov
sbb
rcrl
cmpsl
pop
data16
cltd
push
andl
clc
jns
fcoms
sbbl
dec
movsl
test
clc
cs
daa
orl
xchg
dec
push
test
in
sbb
js
pop
inc
adcl
notb
mov
or
inc
mov
push
jle
out
addl
sbb
movsl
lds
add
ljmp
jne
push
pop
sbb
icebp
xlat
pop
ljmp
clc
outsb
fmuls
inc
jle
mov
mov
push
out
loopne
push
sbb
pop
mov
ja
movl
xchg
sub
lods
pusha
mov
or
jns
int
push
cmpb
ret
or
add
xor
cwtl
mov
stos
js
pop
xchg
int
adc
push
int3
xchg
xchg
test
lahf
or
or
sub
stc
mov
cli
fsts
out
in
movsb
out
push
out
xchg
lea
outsl
scas
push
jns
int
push
pushf
pushf
xchg
insb
sub
push
sub
sti
xchg
clc
and
fcmovu
shll
mov
rcrl
or
ljmp
xor
pop
andl
repz
test
mov
sub
stos
push
mov
xchg
subl
das
sarb
jmp
mov
jo
xor
sub
push
pop
adc
jecxz
or
mov
or
adc
shrb
xchg
jecxz
pusha
jae
out
xchg
cltd
xchg
out
xchg
adc
popf
or
dec
cmp
sti
lcall
in
xchg
lahf
daa
add
mov
arpl
adc
orl
sbb
pop
int3
lret
xchg
testb
das
sbb
repnz
andb
cld
int
xchg
sub
pushf
xchg
mov
or
jns
scas
cmpsb
insb
iret
lret
inc
mov
adc
add
insl
das
loope
push
or
clc
dec
fsubs
or
pop
adc
xchg
pop
adc
pop
fnstenv
dec
clc
mov
adc
call
ljmp
outsl
sbb
clc
rcrl
dec
clc
call
js
push
mov
lods
add
mov
push
stc
mov
mov
or
cltd
lods
in
shrl
or
inc
cmp
dec
xchg
test
add
pushf
sbb
out
dec
clc
sub
mov
pop
push
daa
das
jle
dec
mov
ret
sbb
repnz
xchg
add
and
push
pushf
pushf
fsts
dec
data16
aaa
mov
arpl
adc
sbb
pop
lahf
cmp
push
imul
inc
clc
adc
sub
movsl
clc
cld
fsubrs
lods
add
or
fimull
dec
add
insl
lahf
sbb
push
out
in
or
stc
scas
dec
dec
or
fsts
outsb
leave
pop
push
cmp
lods
push
stos
bound
imul
push
rolb
rep
push
pushf
mov
dec
insb
mov
rcrb
jge
shll
add
xchg
mov
xchg
sbb
in
mov
fldcw
push
lret
dec
out
and
mov
xor
jl
lret
into
mov
jg
or
push
mov
dec
mov
cltd
and
mov
add
xchg
sbb
inc
add
cmp
orl
jo
inc
das
lahf
stc
idiv
lret
out
cwtl
dec
xchg
leave
mov
insb
adc
dec
aas
mov
sarb
push
xchg
ret
fcomp
out
fcomps
mov
inc
repz
cmp
lret
clc
cmpsb
or
pop
mov
insl
xchg
scas
mov
scas
mov
mov
dec
xchg
adc
add
pushf
mov
sub
lahf
scas
shrb
lret
sarb
hlt
jmp
rcrl
add
out
je
or
mov
in
sub
mov
pop
out
sub
insb
inc
add
cltd
lahf
push
sub
hlt
cmovbe
aas
lret
fwait
mov
repnz
out
subl
xor
push
movsb
iret
hlt
mov
pop
scas
fwait
mov
lcall
lea
aas
sbb
jno
inc
ficoms
testb
pop
stc
mov
pop
push
jg
rcrl
fisubrs
or
in
cmpl
enter
clc
lods
out
adc
mov
xchg
js
subl
sbb
dec
lods
sbb
or
fnstsw
pop
cmpsl
ret
push
fsts
xchg
add
outsl
cmp
mov
inc
push
cltd
outsb
mov
adc
lahf
cwtl
and
fisttpl
cmpsl
pop
cmp
mov
jl
popf
adc
flds
pop
cltd
mov
rcr
xor
mov
xchg
sbb
cmp
cmpsl
pop
jb
xchg
stc
roll
ret
push
lods
nop
pop
push
adc
push
sbb
mov
pushf
pusha
das
lcall
adc
inc
in
xchg
pop
aam
fisttps
iret
xchg
mov
cmpsl
sbb
or
insb
lret
lahf
negb
das
iret
xchg
repz
or
or
das
or
mov
incb
sti
pop
cmp
sbb
ss
sbb
clc
jmp
dec
xchg
mov
sbb
or
daa
fadds
fbld
xchg
cmp
mov
dec
jns
mov
scas
enter
lret
pop
push
sarb
jnp
subl
cwtl
or
sub
pop
xchg
aad
hlt
or
out
push
out
xchg
mov
add
mov
rolb
mov
mov
xchg
insb
and
and
fistpll
dec
mov
pusha
add
dec
add
out
or
pop
aaa
cmp
mov
xchg
add
ss
enter
adc
gs
test
jmp
jp
xor
cmp
xchg
repnz
clc
push
mov
cmpsl
or
sbb
mov
roll
lds
push
cmp
adc
stc
sar
xchg
leave
pushf
jl
push
dec
popf
mov
mov
imul
push
sbbl
shrb
lock
loop
popf
clc
sarl
jecxz
add
enter
mov
out
adc
cmp
leave
setle
lea
idivl
mov
out
fidivrl
inc
push
push
sub
das
cmc
cltd
xchg
cmp
xchg
pop
add
ja
or
dec
or
subl
cmp
or
adc
jae
imul
pop
sub
pop
mov
cmp
mov
stos
sbb
mov
mov
jecxz
mov
push
stc
shrl
mov
rcr
fnstenv
das
adc
pop
mov
sub
add
les
fistps
aaa
imul
out
or
nop
cwtl
subl
cmc
js
insb
mov
pop
pop
cmp
div
mov
scas
ror
lret
inc
adc
mov
hlt
sbb
js
dec
inc
dec
cli
cltd
xor
stos
lret
or
sbb
sbb
lods
xchg
adcl
lahf
cmp
decb
jnp
mov
cmp
push
adc
cmp
pushf
inc
sbb
or
mov
jp
scas
enter
add
in
pushf
int
pushf
sub
in
add
mov
shrl
inc
fcom
push
add
xchg
iret
dec
jmp
sbb
xchg
sti
pop
cmp
lods
in
pop
sbb
xchg
iret
adc
xchg
mov
iret
sbb
rclb
aas
push
cltd
and
jne
xor
mov
or
rcl
cmp
mov
mov
or
pop
ret
out
mov
test
lcall
pop
mov
inc
pop
fwait
aam
add
divb
std
xchg
cs
jg
rcll
xchg
addr16
or
popl
sar
jl
push
push
mov
cmp
push
out
and
out
push
stc
pop
shll
push
cmp
out
lcall
out
je
pop
lock
mov
jns
mov
dec
push
mov
popf
repz
jno
fisttps
xchg
push
jl
adc
rcl
xchg
insb
push
inc
add
rcll
iret
adc
push
adc
ret
pop
lods
sbb
sbb
and
dec
stos
dec
or
fld
mov
hlt
pushf
jnp
jg
pushf
or
add
addb
outsl
fdivrs
imulb
fcmovnu
jb
lret
lret
bound
pop
mov
das
into
daa
neg
pop
sbb
pop
push
pop
out
push
xchg
cwtl
mov
pushf
mov
sub
stc
xor
les
push
fisttpl
and
pop
jns
loop
repnz
lcall
mov
mov
or
psllq
in
fwait
xchg
sbb
inc
testl
xchg
dec
sbb
adc
sti
push
xchg
es
push
sub
jmp
lcall
mov
xor
ret
fstps
pop
sbb
sbb
orl
cmpb
test
lahf
fsubrs
and
cwtl
rorl
loope
sbb
push
clc
cmp
jp
xchg
sahf
mov
fnstsw
lods
mov
test
push
insb
aas
pushf
sub
inc
out
aas
xchg
adc
insl
or
leave
add
pop
jae
and
dec
or
bound
fsubrs
mov
adc
and
pusha
in
pop
mov
lods
nop
stos
sub
pushf
inc
lea
fwait
or
addr16
push
bound
cwtl
jmp
mov
xor
ret
fcomps
sbb
dec
jmp
add
xchg
outsb
push
push
ds
insb
xchg
jl
int
or
or
adc
inc
das
pop
adc
xorl
xchg
negl
mov
movsl
mov
mov
fisubl
adc
sbb
mov
and
pop
ret
add
gs
inc
fcoms
movsb
out
sbb
mov
enter
scas
xchg
in
pop
or
sbb
add
mov
ret
xchg
pop
lock
sbb
jbe
adc
aas
test
cld
sbb
imul
fcoms
xchg
in
mov
int
mov
push
sbb
lock
je
dec
out
push
lcall
adc
mov
jp
bswap
mov
pushf
fstpl
int3
mov
push
fadds
incb
jne
ret
lret
cwtl
dec
sbb
lcall
insb
push
sbb
dec
mov
mov
pop
jbe
and
pushf
or
mov
fwait
outsb
lods
dec
dec
int
notb
xchg
fdivrs
rorl
fcomps
or
mov
lods
mov
pop
xor
loop
add
dec
sbb
iret
pop
sbb
fisttps
gs
cmp
arpl
pop
adc
cmp
push
imul
mov
add
xlat
push
cmp
add
rcll
rcrb
into
adc
sbb
push
mov
mov
pop
sub
popf
pop
sbb
shl
in
cltd
pop
pop
clc
clc
insl
mov
adc
jnp
inc
int3
out
sarb
pop
daa
ficoms
popf
std
xchg
std
xchg
or
jp
adc
sarb
shl
outsl
in
add
mov
adc
enter
mov
mov
addr16
iret
or
test
adc
push
sub
xchg
cwtl
xchg
mov
int
js
repz
cmpsb
out
movsl
pop
lods
sbb
jns
incb
stc
aaa
out
cmp
les
add
adc
sbb
lea
mov
daa
push
push
push
push
pop
add
ficomps
fwait
or
sbb
dec
dec
add
or
gs
leave
aam
mov
lea
push
or
arpl
xchg
in
or
jmp
xor
add
inc
and
push
pusha
lea
jae
mov
movsbw
add
mov
ror
setno
mov
pushf
inc
pusha
shrd
mov
call
das
xor
shrd
mov
neg
add
rol
mov
pusha
jmp
push
call
aaa
std
mov
cmp
call
push
lea
jae
pushf
call
int
arpl
lcall
xlat
mul
lret
fdivrp
out
fcmovu
push
rcrl
mov
jb
or
in
stos
jo
jo
out
mov
sub
cmc
mov
in
sti
xor
mov
bnd
dec
xchg
dec
je
xor
loope
retw
xchg
or
adc
xchg
jb
push
stc
lds
pop
cmc
dec
leave
pop
icebp
push
sarl
inc
gs
sub
pusha
pushf
jmp
mov
jmp
push
call
pop
push
test
popf
mov
cmp
pop
inc
bound
arpl
push
inc
pop
imulb
fcomps
sar
xchg
cmp
adc
sahf
cli
cmp
nop
cmp
aaa
lcall
jb
jae
pop
fmuls
push
mov
xchg
jmp
xchg
lods
aad
mov
push
cmp
ds
fldcw
push
jge
push
dec
aad
pop
xchg
sub
cmp
xchg
add
jmp
jecxz
divl
jp
pop
xor
push
filds
outsl
pusha
test
xchg
xchg
mov
xchg
jge
push
inc
jg
sub
ljmp
inc
push
mov
jmp
aam
lock
cld
mov
cmp
mov
fcomp
sub
repz
mov
xor
push
xor
sti
push
call
or
add
add
stc
cmpsl
call
into
mov
push
call
pushf
popf
inc
xchg
xor
sub
or
or
mov
int3
sti
jle
add
fdivr
add
xchg
into
sbb
das
frstor
je
or
iret
out
outsb
xlat
rolb
add
mov
pop
lock
or
push
xor
js
cmp
sbb
xlat
jmp
pop
lock
fcomps
or
pusha
fnsave
int3
insl
stc
jmp
mov
xor
adc
sub
fs
mov
add
sub
aaa
push
xor
or
mov
lahf
cs
mov
add
push
add
shr
imul
js
je
pop
stc
jo
jo
inc
fiadds
leave
inc
adc
and
hlt
sub
push
std
in
and
ds
push
cmp
jmp
aas
sub
mov
popf
and
js
or
shr
movsl
out
js
fisttpl
cmc
cs
scas
aad
fiadds
movl
stc
lods
in
adc
mov
out
fldenv
push
inc
jnp
mov
jne
popa
scas
outsb
scas
out
sub
scas
xchg
push
xchg
bound
stc
cmpsl
fwait
sbb
dec
dec
aad
jl
add
cmp
fnstsw
mov
xchg
xor
movsl
mov
mov
cmpsb
cmp
aas
mov
xor
imul
mov
push
out
jnp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
ret
fs
jmp
dec
cmp
aaa
xchg
xchg
outsb
or
icebp
cld
in
fsub
in
cld
lret
push
xchg
into
stc
insb
enter
decb
mov
mov
ret
rorl
mov
js
into
repnz
adc
push
ret
mov
dec
mov
sub
roll
subl
push
inc
mov
push
aam
jle
lcall
decl
pusha
xor
dec
pop
ds
lcall
cmp
sub
stos
call
mov
mov
mov
mov
xor
outsl
inc
inc
pushf
mov
inc
sete
mov
pusha
pushl
jmp
ror
mov
pushf
jmp
pop
stc
shl
pop
jbe
idivl
or
add
shr
rcll
pop
inc
xor
out
sbb
test
pop
orl
popf
xor
mov
fsubl
inc
pushf
out
shl
mov
xchg
scas
test
stos
je
mov
sti
jp
stos
scas
push
loope
sbb
gs
xor
mov
fdivl
jno
insl
aam
in
hlt
les
inc
popa
jmp
fstps
push
call
xor
add
je
outsl
fs
gs
imul
add
lea
call
call
push
call
movsl
out
les
lret
lods
push
daa
sbb
stc
in
rcr
call
aad
aad
inc
xlat
cmp
add
popa
lds
in
or
movsl
sub
stos
jne
jle
jp
dec
add
cmp
cmp
fucomp
dec
mov
bound
push
jl
mov
pushf
inc
pop
inc
sbb
mov
sar
push
dec
push
push
cmp
and
sbb
popa
xor
inc
daa
call
int3
adc
repz
call
push
call
mov
sub
dec
dec
inc
inc
jnp
jae
mov
sbb
add
xchg
add
sub
pop
loop
mov
hlt
add
pop
pusha
jno
aas
xor
jp
push
lahf
mov
cmp
or
ret
addr16
ja
shlb
popa
pop
push
mov
incl
das
jne
in
into
repnz
out
notl
jno
scas
aaa
mov
mov
xor
inc
popa
jl
push
xchg
inc
loopne
push
int
shl
iret
out
out
test
iret
test
jnp
jmp
or
pop
xchg
out
adc
mov
mov
sbb
sbb
mov
out
jnp
inc
in
lret
xchg
sar
js
mov
jl
out
and
and
shr
cmp
pop
jge
mov
xchg
and
jp
mov
sub
mov
mov
pop
dec
pop
leave
je
inc
fnsave
dec
fstl
inc
pop
out
movzbw
pop
mov
call
jecxz
mov
pop
push
mov
push
pop
jbe
pop
pop
jle
inc
addr16
out
inc
fldenv
add
test
and
jecxz
jo
jae
mov
rcll
cmpsb
sub
mov
add
adc
subl
push
in
mov
jmp
stos
sub
decb
add
in
mov
bound
xchg
iret
loope
test
sub
mov
shll
jle
pop
iret
jmp
xlat
xor
mov
mov
cmc
and
push
outsb
imul
push
pop
outsl
inc
out
cwtl
cmp
xor
xor
lods
add
inc
push
jg
mov
mov
imul
mov
outsb
cmp
xor
mov
jl
xchg
jp
xchg
and
and
and
int
ja
sub
mov
mov
dec
fimuls
dec
rorl
pop
adc
jae
inc
rorb
addr16
inc
ljmp
aaa
pushf
mov
inc
btr
rcl
call
out
lahf
xchg
xchg
jae
push
cmp
lods
cwtl
test
mov
jp
imul
jnp
mov
add
lret
push
sub
gs
mov
std
mov
scas
mov
add
jbe
inc
dec
jbe
ss
push
in
rcrb
movsl
sbb
cmp
mov
pop
pusha
sub
jno
arpl
shl
jns
xchg
lahf
fs
ja
add
out
aas
cs
scas
das
jb
outsl
in
jle
ljmp
push
jmp
ret
push
push
jecxz
fbstp
lods
push
call
xchg
add
pop
xor
xchg
mov
test
lret
add
sbb
and
cmp
add
sub
and
or
mov
loopne
adc
pop
pop
movsl
ljmp
ljmp
sbb
gs
add
xor
fcmovnu
in
rclb
push
pusha
rcrl
hlt
inc
xor
int3
or
popf
adc
pop
gs
or
shrb
jns
adc
ret
dec
out
add
push
repz
mov
leave
clc
dec
call
ficoms
or
add
and
test
xchg
aas
push
xor
imul
test
mov
mov
in
icebp
int
insl
push
add
add
dec
xchg
lcall
movsb
sub
pop
add
push
xchg
lods
push
jbe
and
shrb
pop
int
jg
cld
cmp
mov
dec
loopne
or
lds
and
sub
jg
imul
jg
outsl
ret
ret
mov
mov
jg
mov
mov
mov
mov
inc
pop
ret
call
xor
cmc
repnz
pushf
movb
push
movb
lea
jne
ror
mov
sub
xchg
mov
pushf
sub
jmp
push
and
jecxz
xchg
push
test
xchg
sbbb
mov
sbbl
push
dec
ret
loop
push
and
sbb
xor
fcoms
aad
mov
inc
jns
or
loop
add
iret
adc
dec
lds
out
pop
add
jl
hlt
ficomps
inc
test
cmp
jae
push
out
ljmp
fidivl
inc
pop
in
ret
sti
stos
xchg
push
cltd
dec
jle
dec
dec
imul
jae
pop
negb
rcll
lds
cmp
testb
bound
pop
mov
adcl
mov
addb
in
lods
in
int
or
and
enter
adc
arpl
fsts
dec
int
lds
push
sub
pop
xlat
mov
outsl
jp
lods
nop
popf
mov
mov
xorl
push
sti
jle
mov
out
jp
adc
and
dec
pop
mov
das
adc
add
and
scas
adc
or
rorl
jle
push
push
mov
or
push
hlt
sub
cli
fildll
andb
popa
inc
dec
jbe
push
xor
stc
test
xchg
and
das
scas
daa
cmpsb
xor
lock
call
pop
lea
je
push
pusha
push
mov
lahf
lea
movsbl
movl
pushf
cwtl
movl
lea
setnp
not
mov
bswap
not
lea
pusha
movb
push
push
movl
movb
pushl
popl
pushf
pushl
ret
aad
movsl
movsb
add
sub
jnp
mov
cltd
test
mov
mov
push
mov
int
mov
adc
mov
xchg
adc
cs
add
inc
or
ret
aad
and
stc
and
xchg
js
clc
pushf
mov
jmp
dec
out
stc
mov
movsl
lock
pop
aad
jo
or
xchg
leave
fwait
push
dec
aam
xor
mov
push
inc
pop
testb
cli
dec
sarb
push
arpl
fstps
test
add
pushf
xor
pop
dec
pushf
bt
mov
lea
ror
rcr
test
add
shl
call
push
add
and
stos
aas
add
xor
adc
pop
cmp
or
push
pop
mov
aam
jge
fcmovne
push
jo
cltd
xor
cmc
in
sbb
push
subl
dec
xchg
push
jnp
std
sbb
pop
insl
inc
fmuls
clc
push
rolb
jo
test
xor
jp
scas
dec
inc
mov
push
setp
jbe
or
cmovp
pop
cmpsb
lcall
push
xorl
cmp
and
lea
ljmp
ja
fiadds
lcall
fwait
mov
mov
ds
jns
ljmp
lods
insb
outsb
scas
xchg
cmp
aam
push
popa
fsubrl
mov
inc
lahf
xchg
pop
lahf
mov
sahf
pop
ficoms
das
inc
test
sbb
or
mov
rol
sbb
iret
inc
sbb
mov
add
nop
sbb
mov
inc
pop
and
adc
jl
inc
jne
push
pop
popa
inc
pop
fs
fdivrl
stc
insl
aad
aaa
scas
sti
cmc
dec
push
and
pop
and
cmpsb
aas
mov
cmp
push
xchg
repz
xchg
cmp
rcrl
jp
mov
je
xor
pop
sbb
data16
dec
lret
lea
mov
mov
lods
mov
mov
or
push
lea
xchg
daa
jbe
pop
dec
cli
xor
and
or
sub
push
inc
pop
pusha
xor
lods
pop
xor
sbb
pop
mov
add
push
jge
std
adc
xor
into
sbb
mov
push
ror
and
fidivl
xchg
adc
std
shl
cld
pop
clc
dec
les
dec
hlt
jno
inc
xor
int
pop
xor
xchg
dec
xor
xor
or
pushf
stos
mov
mov
cltd
daa
rclb
cmp
inc
inc
pop
pop
inc
arpl
into
arpl
push
lea
cmp
sti
in
mov
cmp
sub
stos
jge
lds
iret
shrl
pop
sub
in
mov
mov
pop
bound
inc
sbb
bnd
jle
dec
repz
call
dec
iret
inc
xlat
iretw
xor
dec
lea
je
pushf
pusha
pusha
mov
lea
jmp
jecxz
stos
mov
dec
sbb
add
push
je
js
dec
jno
dec
pusha
jno
cmc
pop
dec
rcrb
add
vpcomd
sub
adc
aaa
push
les
push
jnp
or
cltd
sub
pop
and
push
popf
push
dec
scas
push
outsl
xchg
push
fs
push
cmp
nop
sub
js
mov
adc
or
rep
je
fwait
dec
pop
push
pop
xchg
mov
cld
shrb
scas
sub
adc
adc
mov
push
jl
sub
or
nop
sub
adc
imul
outsb
fdivl
sar
idivl
push
sbb
das
subb
mov
repz
mov
sbb
rol
jne
sub
adc
aas
ds
mov
jo
xor
mov
add
or
mov
mov
mov
lahf
cs
icebp
or
fnstsw
loope
js
sbb
lcall
clc
les
jne
pop
fdivrs
imul
inc
push
sti
jmp
push
repnz
rclb
add
sub
or
addl
mov
adc
clc
lock
test
nop
jecxz
mov
cmpsl
jno
in
icebp
mov
jg
cmovne
inc
jbe
imul
xor
sbb
and
ss
add
cld
and
and
cld
bound
mov
or
mov
loope
out
dec
inc
int
in
fs
in
jl
inc
in
js
xor
popa
push
call
je
cmp
push
lea
jle
pusha
movw
lea
ja
pushf
stc
pushf
imul
cmp
clc
bt
test
add
pusha
mov
lea
jmp
push
lea
call
pushf
pusha
adc
pushl
pushl
movw
lea
je
jae
call
push
call
lahf
mov
pusha
setne
mov
push
lea
call
push
call
sub
inc
std
mov
lods
arpl
push
dec
bound
inc
jb
jle
jle
lock
push
int3
pop
jns
enter
clc
inc
jns
cmp
mov
cmp
int3
inc
lds
xor
and
addl
ficoms
xchg
scas
pop
sahf
or
push
fisubl
add
out
into
stos
int
xchg
push
rcrl
outsb
repnz
pop
sub
fwait
push
stos
or
out
out
mov
cmp
repnz
jg
ja
inc
out
jg
inc
fidivs
mov
inc
arpl
test
arpl
push
jne
inc
inc
loope
pop
push
repz
push
out
loop
add
data16
add
xchg
pop
cmp
add
xchg
out
test
movl
or
jmp
sbb
mov
mov
add
das
push
scas
push
push
xor
dec
icebp
int
int
aad
loope
lds
jmp
add
sub
adc
xor
call
push
call
sbb
and
sbb
call
sbb
xor
sub
insb
xchg
add
mov
add
cmpsl
push
mov
push
movsb
xchg
mov
mov
lods
and
mov
dec
cmp
test
ds
jl
test
inc
jae
rcrl
test
addl
fucomi
jl
andl
into
je
mov
movsl
push
dec
sbb
popa
fs
xor
in
xor
xchg
push
mov
or
xor
sti
push
call
test
push
insl
inc
int
or
xor
xchg
mov
xchg
mov
sbb
jmp
mov
enter
push
or
mov
clc
jmp
es
pushf
lea
push
bound
fnsave
les
cmp
pop
lahf
sbb
stc
lods
push
cmpsb
xor
or
add
sbb
call
jle
arpl
dec
out
leave
xor
lcall
dec
inc
push
sub
lea
sub
sbb
inc
push
push
xchg
pop
sbb
cmc
enter
sti
sar
out
aas
xor
xchg
mov
mov
sub
and
push
mov
js
xchg
mov
sub
ljmp
fistps
in
jmp
sub
scas
add
out
hlt
std
je
lret
outsl
into
scas
outsb
adc
jbe
jp
pop
repz
iret
inc
fbstp
dec
xor
rclb
mov
xorl
jne
push
xchg
pop
imul
inc
inc
pop
int3
inc
aad
hlt
imul
push
mov
aaa
push
xchg
pop
cmp
jp
add
roll
mov
aad
jmp
lods
cltd
pop
mov
xchg
push
mov
pop
fldl
mov
adc
sub
and
inc
aaa
aad
jg
icebp
pusha
jbe
ret
scas
sbb
xor
adc
adc
cmp
xchg
push
sub
cmp
leave
jl
xchg
or
add
push
dec
cltd
movsl
call
push
call
mov
addr16
ja
jg
inc
dec
ja
inc
jle
in
imul
adcl
test
jb
push
aas
jge
int
lods
outsl
insl
or
sub
cltd
sub
in
es
push
push
rcll
subl
inc
push
sbb
fcoms
cmp
and
out
adc
out
jmp
push
sub
sahf
pop
cmpsb
dec
out
sarl
ja
cmpsb
add
dec
je
hlt
ficomps
mov
mov
sbb
and
jp
pop
push
repz
pusha
jne
pop
fs
js
fs
je
insb
jnp
leave
insl
xchg
aaa
push
jle
dec
sbb
jmp
stos
pop
lahf
in
jae
or
es
or
or
pop
pop
js,pt
cs
mov
or
xchg
push
fcoml
mov
fmul
mov
push
lds
popf
xor
loopne
data16
push
cltd
test
xchg
xor
nop
or
push
mov
xchg
push
mov
xor
xor
xchg
scas
xchg
mov
lea
dec
ljmp
mov
cmpsb
jmp
xlat
div
iret
loop
ret
loope
clc
in
mov
xchg
pop
lcall
lods
leave
or
mov
push
inc
test
enter
filds
add
adc
in
sbb
ret
data16
adc
mov
and
lods
add
jns
jg
jle
jle
push
mov
sub
and
or
sub
or
adc
add
push
cmc
insl
scas
ljmp
or
testl
xlat
adc
sbb
int
call
ss
inc
inc
int3
or
inc
jecxz
add
in
sub
bound
pop
sahf
sti
xchg
or
or
int3
stc
mov
push
test
lds
push
test
push
scas
pop
xchg
mov
adc
xchg
and
imul
shl
call
jns
jge
jns
pop
xor
loope
add
pusha
insb
call
outsl
and
lea
jne
adc
btc
xor
mov
cmp
add
jbe
push
movzwl
add
mov
cmc
mov
cmc
jmp
push
call
or
dec
push
push
pusha
lea
jne
pusha
movb
push
lea
jmp
or
outsl
into
fwait
cmp
test
movsb
xchg
mov
mov
clc
jmp
mov
xor
lds
test
cld
outsb
adcl
inc
jmp
js
xchg
outsl
sub
sti
push
inc
push
and
leave
ficompl
push
or
daa
ds
jae,pn
or
sub
fdivl
xchg
adc
adc
mov
loopne
push
call
lods
loop
jo
in
icebp
jo
sbb
pop
stos
aas
jmp
in
hlt
leave
ror
jge
jmp
call
call
adc
cmp
or
popl
push
cli
aam
push
and
fisttps
loop
ljmp
and
sbb
pop
dec
addl
inc
es
xor
je
jg
lods
xor
cld
ficompl
stc
je
push
aas
mov
rorb
cmpsb
add
cmp
inc
push
dec
jo
imul
add
and
pop
incl
push
repz
pop
fildll
xor
mov
sbb
and
jmp
aam
in
in
arpl
cmp
inc
pushf
pop
cmp
scas
scas
adc
out
add
mov
inc
andb
jne
xlat
gs
gs
jge
insl
int3
jns
jno
fwait
xor
fcmovne
arpl
lahf
faddl
xchg
fimuls
pop
cli
xor
clc
xor
jecxz
pop
nop
pop
push
in
dec
mov
mov
insb
jno
push
jo
push
idivl
adc
sub
lahf
sub
fdiv
push
outsb
out
xor
xor
jne
in
jbe
enter
movsl
jae
fdivrl
data16
mov
movsl
cs
push
inc
sbb
dec
scas
outsl
out
mov
test
jae
fstl
lods
add
cmp
fs
cmpsl
andb
dec
rorb
inc
sti
jp
jb
lretw
jp
pop
fbstp
pop
movb
pushf
push
movl
pushf
call
dec
sbb
adc
lock
cmp
or
cmp
push
cmpsl
and
fdivrl
out
or
divl
add
lock
dec
lahf
xlat
data16
aaa
lds
pop
cmp
push
aaa
or
add
inc
jb
sub
or
loope
pop
mov
test
js
in
bound
es
mov
stos
or
icebp
arpl
filds
push
mov
bound
das
stos
sbb
aas
sahf
pop
scas
add
or
jle
adc
mov
adc
adc
cmp
adc
sub
imul
push
aam
into
dec
stc
xchg
jns
jns
jns
fs
fldl2t
aad
jp
sbb
mov
orb
movb
cmpsb
sbb
test
jne
adc
sbb
add
sub
push
sbb
sub
inc
add
clc
or
push
and
icebp
xchg
push
mov
nop
lods
test
push
scas
icebp
outsl
mov
xor
and
sbb
cmp
and
inc
dec
mov
call
pusha
stc
pushf
clc
sub
cmp
cmp
call
push
call
lcall
aas
call
jecxz
int
fst
fldcw
mov
mov
scas
mov
sahf
mov
sbb
lds
cmp
push
sub
je
pushf
repz
mov
ljmp
scas
xorb
or
arpl
aad
add
push
imul
xchg
lret
hlt
cltd
lods
nop
cmpsl
push
dec
sbb
fmull
add
arpl
int3
cmc
dec
in
mov
cmpl
dec
out
sti
push
outsb
out
push
ret
xor
jl
push
adc
popa
dec
shll
cs
mov
stos
stos
mov
cmp
dec
push
shlb
jecxz
mov
neg
and
xor
add
ret
loope
into
out
push
push
pop
in
popf
or
xor
xchg
inc
push
outsl
inc
jne
mov
cmpsl
cmp
jno
movsl
inc
andb
inc
cs
call
cld
xor
mov
mov
adc
mov
or
outsl
loope
cmpl
div
mulb
outsl
fisubs
jnp
pop
out
xor
xor
mov
pushf
mov
mov
je
stos
add
xchg
pop
jae
int
outsb
shl
pop
mov
ret
outsb
and
add
das
out
mov
xor
mov
mov
xchg
xor
out
in
out
and
pop
cmpsb
pop
in
xchg
push
mov
aad
in
pusha
roll
inc
dec
pop
mov
repz
ret
cli
xlat
outsl
cmp
dec
cmp
xchg
inc
stos
adc
fwait
adc
loop
sub
gs
imul
mov
adc
in
jo
adc
cmp
cmp
xor
add
nop
add
mov
pushf
sub
add
frstor
mov
xchg
mov
jnp
imul
jg
jnp
nop
add
rcll
repz
fnstcw
jmp
dec
or
jns
in
sub
hlt
and
xor
sub
enter
xchg
dec
lds
stos
loopne
jge
add
inc
add
decb
mov
es
fwait
arpl
xor
mov
inc
loopne
cld
cmp
das
mov
mov
dec
int
jae
test
inc
js
fs
push
rorl
icebp
inc
loope
fnsave
pop
push
call
cmpsb
shl
test
fnstcw
and
or
adc
adc
xor
popf
xor
out
xor
test
push
and
out
out
mov
adc
cmpsl
push
pop
stos
push
movsb
mov
rorb
cmp
mov
add
push
sbb
inc
js
pop
xor
sbb
aam
jge
add
and
inc
jge
std
inc
mov
ljmp
in
enter
fcoml
push
xor
cs
fsubrp
repnz
cmp
pop
xchg
stos
scas
lahf
xchg
xchg
stos
mov
mov
inc
das
add
mov
push
add
sub
sti
ret
push
jge
pop
in
ret
push
ret
mov
sub
lock
adc
iret
fidivrs
push
rolb
push
cwtl
xor
mov
and
dec
push
imul
scas
in
add
adc
lods
call
cmpb
sub
jo
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
xor
andl
test
push
int
scas
cs
mov
xchg
lods
popa
mov
dec
faddl
adc
sub
mov
adc
xor
lods
fsub
inc
cwtl
fcmovu
pop
fs
inc
jb
sub
mov
mov
sahf
orl
adc
imul
fisubrs
dec
loop
into
pop
ja
xor
jg
add
and
call
jno
cmpsb
mov
bt
shl
cmc
mov
call
popa
ret
ja
xchg
nop
mov
push
inc
fs
inc
pop
push
je
fdivrs
or
loopne
ss
fwait
mov
pushf
push
pop
add
movsl
mov
pop
lret
ss
ret
imul
lcall
cltd
adc
sub
rcrl
jno
idivl
arpl
jne
jmp
push
bound
sub
popa
int3
cltd
les
pop
shll
cmovae
loop
inc
out
fimull
jnp
pop
arpl
push
xor
sub
fs
ja
xor
sub
shrd
inc
add
rcr
and
mov
inc
mov
cmc
cmc
call
push
call
subb
jle
call
pusha
push
cmc
push
bt
sub
lea
test
stc
pushf
clc
or
pushf
movw
call
neg
bswap
jmp
push
sub
cmc
cmc
shr
movw
call
push
call
les
icebp
pop
call
gs
shrl
insb
xor
cs
insb
add
or
call
insl
xor
xor
pusha
mov
movsbw
mov
jmp
mov
cmc
cmp
or
jmp
repz
and
popf
pop
lods
nop
outsl
into
xchg
push
imul
or
shlb
sbb
stc
xlat
sti
inc
push
in
mov
mov
cmp
pop
xor
ss
sahf
pop
add
mov
ret
mulb
sbb
sbb
pushl
imul
out
jle
and
dec
lcall
icebp
les
lods
xchg
insl
add
pop
popl
mov
scas
push
mov
mov
mov
inc
inc
mov
sub
clc
clc
repnz
mov
pushl
lea
jne
or
mov
clc
sub
bts
mov
mov
clc
call
push
call
and
cli
imul
push
stc
stc
call
mov
lahf
movl
pushl
push
call
in
xchg
mov
inc
push
xchg
pop
inc
jo
insb
jge
dec
pop
inc
jl
call
pop
pop
inc
add
lcall
bound
lods
jnp
in
xchg
aaa
sbb
xchg
loopne
sbbl
out
aam
xlat
xchg
xor
into
repnz
inc
in
push
lock
nop
insb
push
data16
mov
fwait
push
mov
pop
addr16
out
data16
push
jmp
testl
inc
jno
dec
mov
movb
pushl
ret
adc
stos
out
sbb
add
cmp
xor
cmp
add
mov
cmp
pop
insb
lea
sbb
xor
or
sub
adc
push
aam
push
aam
enter
fmul
outsb
jns
pop
adc
icebp
fwait
loop
or
cmpsb
xor
xor
movsb
mov
jge
fmull
mov
arpl
jl
and
pop
pop
mov
addr16
roll
xchg
sub
daa
mov
mov
inc
or
out
mov
add
push
call
push
call
xchg
adc
inc
push
call
imul
mov
dec
pusha
mov
pop
stos
push
xor
mov
sbb
lahf
mov
push
in
push
inc
imul
dec
lret
inc
sti
mov
out
test
jg
inc
mov
pop
insl
pop
stos
rorb
iret
sbb
shrb
ret
jb
adc
push
leave
std
mov
sbb
inc
clc
xor
jno
test
xchg
sub
mov
hlt
or
mov
test
or
enter
call
jno
inc
xor
aad
in
stc
insb
xor
cld
icebp
fdivr
std
clc
in
aad
leave
jl
jns
push
insb
data16
leave
shlb
stos
xor
les
push
rorl
mov
add
in
jae
sbb
mov
out
jle
cmp
xchg
dec
mov
mov
test
adc
add
stos
mov
clc
nop
sbb
cmova
daa
loope
imul
inc
mov
cmp
jge
mov
push
btl
pop
sahf
or
aaa
xchg
xor
jb
add
add
in
add
cld
shl
std
adc
mov
jmp
shr
icebp
clc
inc
loopne
push
inc
nop
dec
mov
cmp
in
push
inc
jb
inc
xchg
cmp
repnz
sbb
int3
xchg
xchg
fdivrl
lcall
mov
push
inc
xchg
call
xlat
sbb
push
sub
ljmp
cltd
sbb
hlt
repnz
std
push
dec
jmp
lret
add
adc
or
xor
rorb
test
cmp
pusha
cmc
sub
clc
pushf
mov
sub
cmp
sbb
cmc
mov
pushf
push
cmp
clc
cmp
jmp
push
call
sahf
rcrb
cmp
add
and
sbb
and
and
aaa
or
aas
sbb
cltd
addr16
adc
push
add
lea
dec
add
lret
idiv
push
js
mov
or
jno
addl
addl
mov
add
pop
xchg
add
shr
adc
push
lret
or
or
mov
mov
sub
cmp
sbb
and
sub
adc
inc
inc
mov
idivl
call
xchg
add
arpl
add
inc
scas
dec
out
cmp
je
xor
ret
ret
sti
ret
ljmp
sub
lods
jnp
bound
add
outsb
and
jb
pop
sub
and
jle
or
xlat
cli
push
mov
pushf
pop
out
testl
rcll
es
cwtl
movsb
leave
or
ds
pop
jae
xchg
filds
dec
filds
mov
leave
addr16
lea
aaa
sbb
lcall
mov
adc
cmpb
adc
inc
outsb
jbe
push
call
push
enter
xchg
add
inc
inc
jle
dec
jae
dec
dec
addr16
imul
mov
or
inc
je
dec
jp
shlb
xor
repnz
push
ret
mov
xchg
lock
ljmp
jae
sub
sbb
cltd
in
and
movq
sbb
dec
add
fidivrl
data16
xor
aaa
push
mov
xchg
int
mov
imul
dec
lock
xor
adc
loopne
call
xor
mov
sub
xor
stos
mull
or
inc
and
ret
out
lret
repnz
test
jae
stc
aas
fnstenv
or
mov
add
aas
fistpl
push
or
adc
repz
out
test
xchg
mov
jmp
shr
or
fcmovnb
or
xor
leave
push
sbb
popf
rclb
mov
mov
mov
daa
cmpsb
and
cwtl
push
call
dec
sahf
jo
adc
pop
call
cmp
hlt
call
fs
pushf
movw
lea
call
jbe
pushf
pusha
lea
jae
jmp
pop
cli
fucomi
ja
jg
sbb
movsl
movsb
orl
in
mov
jo
xor
stc
cwtl
and
inc
or
or
ds
imul
or
xchg
addb
xchg
push
fcmove
out
add
or
push
lahf
cmpsl
add
ds
mov
jmp
add
repnz
call
xchg
les
add
in
call
movsb
xchg
out
inc
repnz
cltd
mov
cmpb
mov
pusha
mov
cli
pop
xchg
push
nop
cmp
xchg
xchg
add
xor
xchg
cmp
js
add
sub
add
mov
in
add
cltd
push
popa
hlt
data16
or
addb
xchg
cmc
sub
scas
push
sar
arpl
xor
dec
test
inc
xor
mov
lds
xchg
pop
mov
add
xor
sarl
hlt
fldcw
das
cmp
jle
dec
ja
pop
pop
inc
jp
push
ret
dec
sbb
fimull
stc
inc
sub
fadd
pop
pop
sarb
jnp
mov
inc
ret
aam
adc
dec
or
rclb
frstor
sbb
addr16
repz
push
mov
sbb
neg
ja
mov
nop
add
cmpsl
xchg
adc
test
dec
mov
shrl
mov
add
adc
and
cmp
xchg
pop
lahf
lret
inc
jmp
cmp
cmp
mov
push
lea
je
pushf
lea
ja
and
rcl
call
inc
mov
call
push
call
cmp
mov
stos
andl
test
mov
cmc
comiss
fmuls
pop
add
xor
jecxz
add
add
pushf
or
ja
xlat
push
fbstp
add
movsl
pop
cmp
or
cld
insl
es
js
fildl
jbe
inc
outsb
xor
xor
sub
daa
sub
cmp
add
push
sbb
mov
aam
out
into
xchg
mov
lock
iret
dec
push
dec
push
lods
mov
movsb
sbb
xchg
xor
sub
pop
jns
mov
pop
cmpsb
push
loope
xchg
jne,pt
cmc
pushl
push
roll
dec
jecxz
inc
cmp
stos
push
call
dec
lea
jne
jmp
pusha
jmp
call
push
call
in
jns
cmp
icebp
pop
adc
pusha
stc
movsb
xorl
and
dec
addb
xchg
inc
aam
xchg
js
cmpsl
stos
mov
scas
mov
adc
dec
nop
shll
mov
mov
cmp
mov
xchg
sub
shll
mov
ds
outsb
lret
enter
xchg
add
hlt
xchg
out
loope
and
sbb
and
xor
addr16
call
jne
sub
fsubs
clc
mov
add
jno
pusha
cmc
cmc
test
push
pusha
lea
je
test
call
and
jl
aaa
lcall
mov
xchg
mov
mov
mov
test
adcb
pop
lcall
push
icebp
popa
mull
push
rcr
dec
lods
xor
movsl
out
les
js
ret
lret
lods
jnp
cld
dec
in
dec
sbb
sbb
push
cld
inc
adc
pop
pop
pop
fbstp
orl
mov
sub
xor
inc
cmp
lock
push
add
fmul
clc
rcl
fsubr
in
dec
aam
loope
mov
int
and
push
leave
mov
ret
xchg
cld
leave
pop
outsb
xchg
idivl
xor
pop
out
xchg
xchg
and
incb
out
adcb
daa
mov
int
mov
stc
int3
insl
jne
hlt
repz
pop
sbb
mov
lahf
or
push
mov
xchg
and
mov
aam
push
call
inc
push
call
icebp
jmp
in
jg
dec
fcmovb
mov
jno
dec
dec
dec
inc
jns
push
jo
jl
inc
inc
sub
repz
stos
cmpsb
xor
gs
shlb
in
inc
loop
iret
xchg
lret
rcrb
xchg
push
and
push
xorl
push
dec
cmpb
push
test
scas
xchg
xor
je
mov
fbld
movsb
and
mov
inc
cmp
add
shlb
call
add
sbb
push
call
shrb
push
pop
xchg
ret
scas
or
adc
lret
ret
hlt
dec
adc
adc
add
cmp
xor
mov
das
push
dec
lods
fsubp
arpl
xchg
sbb
into
dec
xchg
mov
call
mov
xchg
lret
mov
push
test
push
mov
and
insb
arpl
dec
imul
push
mov
call
into
add
adc
and
pop
repz
pushl
jle
inc
aaa
call
fcoms
call
xor
add
pop
xor
add
jg,pn
push
out
mov
and
sub
push
sub
cld
sub
movsl
and
cmp
sbb
adc
xor
sub
imul
cmpsl
push
or
icebp
aam
jle
stc
inc
cwtl
loopne
or
stos
push
jns
mov
je
mov
jnp
ret
fsubrs
lds
inc
scas
in
repz
xlat
bound
repz
stos
popf
xchg
aas
sub
fmull
pop
addr16
jnp
pop
shlb
dec
outsl
lret
xor
movsb
test
loopne
jo
add
fbstp
int
stc
rol
shll
dec
jns
jg
lahf
mov
sti
cmpsl
xchg
stos
or
iret
push
popf
pop
jae
jae
adc
imul
push
jb
push
cmp
outsl
lret
lea
pop
jno
add
out
inc
push
jp
adc
rol
loop
xchg
and
dec
mov
cmp
push
lods
dec
test
test
mov
out
shlb
pop
mov
jg
push
pop
lret
push
fiaddl
pop
xor
adc
cltd
test
push
xchg
inc
jg
dec
dec
outsl
inc
inc
inc
dec
inc
je
out
jg
jmp
les
mov
ljmp
jnp
inc
jnp
test
ds
cmc
xchg
inc
mov
dec
cmp
pop
lahf
adc
xorb
mov
ljmp
or
pop
ret
and
jno
cmc
push
aad
in
pop
fnsave
in
cmc
xor
mov
shll
sub
adc
add
aas
push
add
cmpsl
ds
mov
and
pop
push
jno
inc
out
popa
int3
add
jo
test
ljmp
jne
fcomps
jl
inc
mov
jmp
inc
rclb
icebp
fstl
xor
mov
lcall
paddw
pop
in
insb
sbb
fucom
les
mov
jp
lret
outsb
inc
sbb
ja
gs
les
mov
sub
aas
sahf
xor
inc
ss
sbb
dec
cmp
xor
out
rol
fdivp
ret
fucomip
ret
out
sti
jb
rorb
inc
stc
xchg
inc
data16
xor
add
xor
ret
mov
loopne
addr16
rorb
sub
in
test
mov
and
inc
jp
in
dec
mov
cmpl
jns
sub
mov
xchg
fsubl
cs
mov
or
fdivs
jne
jns
jne
jns
imul
test
hlt
leave
add
lea
jae
pusha
pushf
pushl
call
test
cmpb
push
jmp
push
lea
jae
bswap
rcl
setno
mov
shl
mov
adc
cmc
shr
and
mov
cmp
clc
call
inc
adc
xor
xor
fcmovne
iret
fdivrp
loop
div
ljmp
mov
pop
rcll
xor
dec
mov
test
push
push
cwtl
pop
in
sub
xchg
mov
dec
push
insb
and
cmc
jae
mov
add
dec
pop
jo
push
jnp
sub
sub
ret
cltd
dec
loop
cmc
dec
xlat
popa
or
jmp
xlat
dec
jmp
out
push
sti
jbe
inc
xor
stos
xchg
dec
call
outsl
sbb
push
outsl
outsb
inc
dec
pop
pop
dec
jp
bound
inc
out
addr16
mov
mov
loope
cmp
movsl
add
push
lcall
icebp
xor
mov
insb
jecxz
mov
pop
aam
jne
outsl
in
test
enter
dec
jb
pusha
xchg
mov
xchg
sub
shrl
daa
enter
push
rcll
jno
paddusb
add
xor
xor
inc
xor
and
pushf
lea
jns
jae
push
pushf
lea
jmp
sub
mov
pushf
pushf
rep
pop
mov
push
pusha
push
pushl
lea
jmp
push
call
out
in
mov
inc
js
je
jb
arpl
jae
push
call
out
insb
fadd
or
popa
in
sbb
add
stos
xchg
andb
sbbl
or
cltd
jge
and
mov
adcl
mov
and
mov
rolb
push
jecxz
cli
push
popf
jnp
sub
pusha
mov
fimull
push
out
mov
clc
cs
scas
or
ljmp
dec
aam
fdivs
insl
int3
pop
in
xor
aaa
lea
call
push
cmc
push
rcl
dec
movzbl
push
shl
shr
push
lea
bswap
shr
mov
pushf
shl
rcl
mov
xor
mov
call
pushf
lea
jb
push
pushf
pushl
ret
loopne
movsb
mov
push
imul
pop
jo
push
popa
fs
push
pop
stos
jmp
jne
ds
jne
mov
and
sbb
jg
xchg
mov
hlt
push
in
xor
call
adc
pop
sub
dec
xor
inc
test
movb
and
xor
xor
xchg
subb
push
xchg
sbb
mov
cmpsl
jmp
mov
lret
cmp
adc
mov
and
xchg
mov
xchg
sub
add
std
jg
pop
sub
sub
or
push
rorl
push
jp
jbe
xor
push
out
pop
outsl
sub
ljmp
faddp
out
pop
adc
jl
add
sbb
lods
jg
push
xchg
jecxz
mov
cwtl
jne
xchg
loope
push
sbb
add
scas
add
dec
jb
test
mov
xor
mov
mov
mov
stos
aaa
lcall
mov
and
sub
popf
nop
test
es
scas
add
dec
jbe
out
mov
fwait
es
jl
movl
in
clc
les
push
std
jo
push
jg
mov
xchg
lods
sub
xchg
sub
ret
incb
addr16
aaa
aaa
push
jp
xchg
adc
lock
loop
out
jecxz
push
jb
fsubs
xchg
out
push
xor
cmp
adc
xor
add
jmp
shl
fld
sub
mov
lods
mov
xchg
adc
dec
into
or
rclb
roll
movsl
lcall
xchg
pop
lret
aas
push
and
aas
sarb
lea
mov
movl
pop
xor
push
mov
push
mov
push
jle
shrb
mov
popf
dec
add
xlat
or
mov
xchg
inc
xchg
push
inc
xor
mov
mov
imulb
sub
fcmovnb
fst
shl
icebp
enter
enter
int3
xchg
in
scas
xor
pop
xchg
mov
cltd
in
jne
add
cmc
int
in
sbb
xorb
sub
dec
dec
mov
and
mov
pop
movsb
ljmp
jo
push
in
je
js
fs
ss
pop
push
mulb
lods
bound
outsl
jbe
inc
push
outsb
imul
ja
jbe
mov
pop
lret
dec
xorl
leave
fcoml
pop
ja
cmpsl
adc
sub
mov
add
cwtl
data16
test
pop
dec
pop
sub
imull
call
push
ret
iret
xor
leave
inc
icebp
mov
lods
and
adc
sti
push
decl
add
push
cmp
pop
pop
cmpsb
inc
mov
xor
sti
data16
push
mull
inc
das
fmuls
mov
cmc
cmp
bt
pusha
test
pushf
push
lea
je
pusha
mov
sub
clc
clc
cmp
jmp
add
jmp
push
call
sbb
inc
inc
jo
movsb
loopne
cltd
xor
nop
mov
mov
adc
cltd
aas
dec
ja
ret
aam
sbb
adc
inc
dec
ja
xlat
push
nop
xchg
jge
fcomps
call
addb
jmp
int3
test
push
popa
js
popa
mov
lcall
popa
push
fs
fsubs
dec
enter
jno
pop
aam
loopne
clc
push
hlt
imul
cs
xchg
mov
adc
in
gs
dec
lcall
clc
jle
inc
ja
push
outsb
dec
inc
outsl
pop
dec
data16
mulb
test
lods
sbb
push
sbb
pop
in
mov
scas
dec
pop
loope
xchg
add
inc
out
leave
sub
sub
push
and
in
test
xchg
daa
mov
push
aam
sbb
xchg
or
or
xor
or
aad
and
or
add
aam
adc
dec
movb
pushf
push
call
mov
cmp
push
call
cmpps
cmc
insb
enter
aad
sub
and
sbb
and
jl
and
mov
in
sbbb
pusha
fadds
pop
and
ret
add
mov
push
xchg
fsubrs
add
and
jl
daa
mov
mov
cmpsb
fwait
xchg
lock
aas
out
xchg
xor
sub
xor
pusha
out
jb
jg
bound
mov
inc
ja
pop
stc
mov
push
mov
xorl
es
ss
xor
ret
movsl
mov
push
inc
dec
addr16
imul
outsl
pop
pop
push
jg
push
sbb
mov
shlb
sbb
add
mov
push
rcrl
cwtl
test
out
out
mov
ret
lock
mov
xchg
mov
mov
pop
movsl
icebp
lds
adc
out
pop
fidivrl
sbb
and
rolb
push
rorb
jno
push
in
inc
sub
adc
or
out
add
in
sub
pusha
pushf
pushl
popl
cmp
pushl
jmp
cmp
adc
push
lar
mov
pop
xlat
or
push
mov
push
mov
ffree
pop
inc
jae
mov
xlat
and
fldcw
adc
aam
fst
leave
call
leave
jo
lret
and
sarl
bound
lcall
lods
fxam
dec
in
inc
repz
ds
imul
inc
out
dec
ret
jle
or
sub
imul
cli
push
shlb
inc
repnz
fisubrs
inc
sub
pop
sub
aam
push
add
push
cs
push
call
test
or
inc
adc
mov
andl
dec
ja
dec
inc
inc
jbe
push
ret
push
mov
or
mov
pop
xchg
ss
inc
push
pop
sar
jno
in
mov
pop
jmp
insb
cmc
pop
aad
inc
sub
pop
lock
in
jmp
aaa
push
or
das
push
adc
add
pop
mov
mov
and
push
jge
ds
push
out
jp
ficompl
popf
xchg
pop
daa
sbb
roll
xlat
arpl
clc
lea
mov
adcl
imulb
mov
xor
mov
mov
push
aaa
or
mov
mov
cs
scas
es
xor
ret
call
xchg
rcl
push
add
leave
sbbb
sbbb
mov
mov
loope
mov
cmp
icebp
sub
sub
nop
push
mov
stc
mov
scas
xor
inc
dec
lds
sub
xchg
das
mov
xchg
pop
mov
mov
mov
dec
jmp
sbb
mov
add
jmp
roll
in
fldenv
sub
dec
mov
or
lods
psrlq
out
loop
fcmove
mov
mov
js
roll
test
negl
cmpsl
mov
xor
mov
xor
jmp
fisubs
sarl
push
xchg
orb
scas
lret
out
and
jnp
pop
imul
jp
and
cwtl
pop
mov
or
jno
cmp
cmpb
sub
cmp
sbb
daa
xchg
add
xor
sbb
xor
lea
jne
rol
aaa
cmp
sub
setns
mov
inc
adc
add
cmp
push
rol
mov
pushf
clc
jmp
xchg
adc
mov
dec
cmc
loopne
icebp
js
add
out
es
cmc
sbb
imul
icebp
lock
and
cld
cmc
int3
int
in
cmpsl
cs
in
inc
sbb
sarb
mov
mov
jge
fisubrs
into
xor
mov
test
mov
pop
push
or
inc
inc
shll
mov
mov
mov
mov
ss
adc
mov
test
xchg
and
insl
fists
ret
jne
dec
sub
repz
cli
sar
lret
repz
out
jae
std
insb
daa
stos
jb
sub
mov
fisubs
add
sub
jbe
shll
adc
sub
sub
push
sub
push
xor
adc
daa
mov
stos
push
scas
icebp
or
in
shl
push
lock
cmpsb
xchg
jecxz
arpl
arpl
dec
repnz
pop
fidivs
inc
out
inc
sub
inc
push
call
sub
mov
cli
imul
xor
mov
nop
mov
cltd
adc
cmpsb
aaa
mov
imul
dec
decl
les
test
int
fisttpl
and
lahf
lret
jmp
pop
adc
xchg
push
cmc
scas
pop
push
jo
mov
popa
push
sti
dec
je
fsub
loope
in
mov
lods
adc
hlt
lret
out
push
repnz
ja
dec
out
inc
lret
jnp
pop
ficoml
inc
sub
push
out
adc
fxam
sar
stc
lock
in
loopne
int3
shl
dec
jmp
xchg
imul
scas
icebp
int
inc
test
mov
inc
pop
sti
outsl
ljmp
in
or
imul
in
mov
out
fsubrs
dec
clc
cmc
ret
mov
xor
add
mov
push
dec
int3
inc
call
inc
hlt
pop
in
les
push
xor
mov
adc
cli
mov
jp
jg
stc
jg
imul
jae
dec
inc
inc
dec
jmp
fwait
cmp
fld
gs
sti
out
in
xchg
arpl
push
cmp
push
push
xchg
push
mov
push
push
mov
sahf
jno
sbb
shrl
in
jg
orb
push
stos
std
push
out
ret
inc
repz
popf
mov
mov
test
xchg
sub
xor
ljmp
jo
je
inc
imul
popf
inc
xchg
xor
rcr
out
jb
push
incl
jp
jb
bound
sub
adc
call
adc
jnp
rorl
mov
jo
push
imul
mov
push
jo
xchg
lret
outsl
mov
ljmp
sub
xchg
lods
pop
repz
and
jl
sbb
stc
outsl
out
stc
fdivr
js
lahf
dec
fildll
push
sahf
mov
pop
adc
jnp
in
jmp
push
addr16
aas
push
int
mov
jmp
pop
out
lcall
push
inc
js
lock
lds
push
and
sbb
int3
repnz
nop
xorl
mov
mov
lret
addr16
outsl
xor
faddl
and
mov
popf
dec
jo
inc
inc
je
inc
insl
jo
pop
roll
mov
dec
sti
jg
mov
stos
sub
xchg
cmp
jne
inc
bound
push
fsubrl
dec
loop
ss
imul
dec
ficomps
loop
das
adc
jns
mov
xor
mov
push
add
adc
pop
dec
aas
cmpl
shl
adc
add
mov
sub
mov
mov
lahf
or
push
xor
push
push
call
lds
fadd
fcomps
inc
arpl
dec
xchg
cmpsl
xchg
mov
stc
pop
push
out
jbe
lret
lock
out
scas
jecxz
mov
sub
shll
out
jmp
test
je
mov
sbb
movsl
mov
addr16
cmpsb
and
and
daa
or
inc
add
pop
lret
dec
fistl
dec
repz
out
jmp
out
xor
sbb
scas
lahf
mov
inc
std
push
cmpsl
jg
push
dec
pop
addr16
pop
push
dec
inc
jb
inc
xlat
inc
push
arpl
popf
xchg
pop
lahf
sbb
lahf
lret
aam
in
sbb
sahf
adc
movsb
data16
sub
and
ljmp
lahf
movsb
imul
lahf
pop
jecxz
push
data16
lock
stos
lcall
mov
and
jno
aad
cmp
xor
daa
xchg
enter
mov
or
setle
xchg
xor
mov
mov
xchg
mov
add
add
iret
jp
dec
mov
push
sub
pusha
lea
jne
pushf
pusha
call
clc
pop
push
jg
jle
or
inc
mov
xchg
push
dec
mov
cs
lar
sbb
adc
push
popl
dec
hlt
pop
push
xchg
test
inc
int3
xchg
movsb
sub
daa
sahf
mov
push
and
sbb
lahf
test
fs
test
int3
sti
xchg
gs
xchg
push
pop
xlat
aas
rcrl
adc
adc
dec
fdivs
add
or
and
lock
cld
pop
js
xor
cmpb
dec
fistps
roll
pop
in
pusha
leave
push
inc
and
jno
push
call
loop
jo
sbb
adc
xor
out
imul
dec
arpl
andl
pop
xchg
or
and
into
or
and
scas
andb
pop
mov
in
lods
rcrb
and
stos
loop
inc
daa
add
js
test
aas
lock
loopne
loopne
pop
mov
jg
add
lds
inc
nop
cmp
into
sbb
pop
cltd
dec
push
xor
xor
sub
pop
movsb
int3
stos
imul
stc
leave
lret
sub
xchg
add
lods
xor
push
add
push
mov
lea
call
and
push
jecxz
xchg
iret
sub
into
out
ret
out
lret
les
mov
adc
adc
xchg
push
push
xor
sub
adcb
daa
fstps
sbb
push
imul
ljmp
fsubrl
dec
jle
cld
div
jmp
mov
inc
div
repnz
mov
lcall
enter
jbe
insb
popa
call
ficoml
lret
push
jecxz
dec
jmp
out
push
ljmp
outsl
pushf
xchg
lock
fldcw
jnp
pop
xchg
pop
icebp
sub
sub
and
aam
push
call
push
lea
jb
cmc
call
push
call
push
call
push
jae
push
mov
add
test
pusha
add
and
jmp
jmp
add
inc
outsb
jne
inc
insb
imul
inc
outsl
jb
popa
je
add
and
jmp
push
call
jbe
sbb
add
pslld
icebp
mov
sbb
pop
sub
adc
test
mov
mov
pop
mov
popf
and
inc
cmp
inc
ja
lahf
jl
test
pusha
cmp
jmp
les
int
leave
push
dec
roll
inc
test
sub
jmp
mov
dec
add
inc
dec
jne
sbb
or
ret
rcrb
inc
pusha
and
adc
sub
mov
add
sub
push
mov
mov
popf
xorb
dec
ret
sahf
sub
mov
pusha
mov
or
xor
sub
or
sbb
inc
and
push
push
and
push
rcrl
and
xor
add
sbb
xor
adc
or
add
je
jecxz
lock
push
rclb
push
loope
and
adc
out
pop
sub
fcoml
out
ss
jae
cmp
test
push
xchg
adc
pop
inc
mov
dec
push
push
sbb
xchg
mov
pop
xchg
lea
fildl
dec
xabort
and
mov
sahf
dec
jo
inc
testb
xchg
sub
cmovge
setbe
orb
pop
xchg
or
stc
jne
sub
inc
hlt
push
ret
pop
sub
jae
jae
daa
out
bnd
push
and
daa
jmp
cmp
xor
inc
jbe
outsb
jae
jg
pop
negb
xchg
fidivs
add
add
faddp
xchg
pop
in
lahf
mov
lret
xor
add
in
repz
adc
add
mov
xor
sbb
sbb
pop
xchg
xchg
aaa
sahf
and
pushf
dec
push
call
mov
inc
sub
sti
shrl
cmpl
mov
mov
jbe
push
popa
jne
in
bound
clc
jl
jbe
es
js
scas
inc
inc
std
sub
add
adc
mov
call
jle
push
push
repnz
aam
push
out
data16
jo
fstpt
pop
xor
mov
icebp
pop
mov
mov
clc
add
aam
insb
movsl
mov
test
sub
and
ficoml
pop
notb
inc
rorb
arpl
push
xor
xor
and
jae
cmp
xor
pusha
jmp
into
mov
sbb
push
xchg
inc
dec
push
dec
jg
addr16
arpl
loopne
std
pop
or
cmp
test
mov
fmuls
jecxz
push
pop
lret
add
cli
jnp
hlt
gs
fistpl
sbb
stos
sub
jbe
pop
add
and
in
shrl
mov
arpl
mov
pop
push
jecxz
cmp
mov
mov
or
pushf
and
and
test
xchg
add
inc
gs
popa
jbe
inc
imul
add
jae
jae
pop
jp
jbe
pop
jnp
mov
adc
mov
mov
or
inc
icebp
inc
lds
addr16
popw
dec
orl
or
mov
mov
mov
scas
ss
mov
les
sbb
bt
cmp
pushf
push
call
push
call
loop
and
jp
jbe
jg
cmpsb
cwtl
inc
movsl
cltd
mov
lods
mov
mov
mov
lock
push
pop
xor
out
fldl
out
shrl
ljmp
ds
clc
or
add
mov
push
jae
jo
sbb
mov
inc
add
outsb
loop
aam
imul
xlat
es
lahf
shll
repz
xor
addr16
sbb
clc
ror
push
lock
lahf
pop
popf
adc
ljmp
jg
outsl
fimuls
outsl
xor
les
aaa
adc
pop
adc
add
es
or
push
addb
daa
addr16
fs
fxam
in
aas
pop
fcoms
xor
rclb
stos
pop
sahf
daa
mov
xchg
mov
xor
pop
cli
stos
xchg
xchg
cmpsl
aam
dec
lcall
gs
popa
jl
pusha
push
call
pop
pop
xchg
test
jae
xor
lods
in
fnstsw
sbb
pop
pop
sub
lods
mov
in
in
mov
aaa
or
push
fildl
out
push
rcrl
cmp
add
mov
xchg
daa
mov
xchg
pop
xchg
sub
cwtl
push
call
or
pop
adc
out
cli
mov
jmp
rcl
sti
repnz
jmp
sti
int3
popa
xor
cmpsb
repz
push
sbb
sbb
out
xlat
and
push
pop
pop
iret
lock
adc
test
rorl
pop
xchg
movsl
xor
inc
jecxz
mov
mov
add
inc
jmp
out
xchg
pop
in
fdivrl
mov
sbb
sub
pusha
xor
fisttpl
pop
lret
call
or
or
xchg
xor
xor
push
add
dec
mov
or
das
push
xor
adc
daa
adc
es
push
adc
outsl
push
fiadds
mov
cmpsb
xor
xor
mov
dec
es
inc
icebp
fs
stc
inc
jbe
ret
lock
lahf
test
sbb
lcall
inc
sbb
mov
push
lea
jns
pushf
dec
call
stos
je
jo
pop
push
push
jne
gs
push
leave
hlt
addr16
pop
xor
test
mov
mov
jmp
pop
shlb
wbinvd
mov
mov
sub
mov
push
stos
mov
xor
shrb
les
call
arpl
add
addr16
xor
lea
ja
pushf
inc
lea
not
push
inc
add
cmc
xchg
aad
ror
aaa
mov
not
add
not
mov
test
clc
cmc
bt
push
push
pop
test
mov
mov
call
test
cmp
pushf
pushf
call
fs
lods
jle
and
hlt
aad
in
icebp
hlt
jmp
xlat
pop
or
push
mov
pop
in
fistl
jns
sub
int3
xchg
out
sbb
iret
inc
fwait
and
dec
cltd
and
xlat
pop
adc
fldpi
lcall
xchg
pop
lret
icebp
mov
pop
push
pusha
shr
and
test
inc
xor
or
mov
aam
dec
fstl
push
in
insb
cmc
jl
inc
sbb
add
pusha
adc
xor
add
in
aam
hlt
jmp
ljmp
jns
and
jae
pop
leave
push
aad
out
call
jmp
xchg
inc
add
cmp
inc
or
call
adc
cmpsl
pop
push
pop
lret
test
inc
jle
mov
out
jecxz
or
jg
dec
out
jg
jae
pop
outsl
divb
xor
inc
jne
add
lods
stc
add
fdivr
aam
in
stc
clc
int
stc
jl
imulb
mov
adc
loopne
out
adc
test
add
sbbl
and
or
sahf
cmp
push
dec
out
xchg
and
lea
jle
adc
stc
les
enter
test
xor
hlt
imul
repz
call
fs
scas
adc
push
cmpl
and
mov
loop
xor
stos
mov
push
pushf
lea
jmp
cmp
call
lea
jne
mov
clc
pusha
sub
bts
cmc
stc
mov
xor
rol
cmp
add
cmc
pusha
not
xor
mov
cmp
clc
pushf
pushf
test
pushf
mov
pushf
lea
je
jmp
std
lods
orl
jb
inc
push
jb
lock
movsb
xchg
push
jbe
add
dec
test
cli
mov
fs
sbb
jno
xchg
mov
cs
push
mov
sbb
lods
ficoms
or
fs
adc
nop
mov
pop
xchg
pop
dec
in
in
lds
cwtl
add
lret
sbb
and
addl
pop
lret
jg
rol
enter
int3
insl
cld
push
in
in
jge
inc
sbb
add
cltd
cmp
push
stos
notl
and
and
sbb
xor
lods
sbb
ja
mov
fs
cs
pop
adc
loopne
lahf
test
je
loop
mov
inc
lret
sbb
dec
fs
lcall
adc
subl
in
aad
jg
scas
add
jecxz
sbb
es
push
gs
sbb
test
mov
xlat
add
push
or
insb
jmp
sti
pop
rorl
pop
jecxz
xlat
dec
fbstp
pop
enter
add
push
mov
cmpsb
scas
mov
pushf
xorl
xor
out
js
push
jns
push
sbb
push
divb
push
adc
mov
popw
and
mov
mov
xchg
or
dec
push
sbb
jb
call
dec
cmp
xchg
frstor
sbb
and
subb
ja
ja
lret
cmp
movsb
stos
leave
leave
push
cmp
ror
mov
sub
cwtl
or
pop
lret
sbb
cmp
mov
dec
fwait
cmpsl
sahf
mov
stos
mov
sbb
mov
sbb
xchg
scas
push
xchg
imul
insb
loope
jb
ret
or
xchg
pop
rorl
enter
push
das
loopne
ret
int
outsb
dec
js
dec
lds
add
gs
mov
bound
xor
imul
jno
imul
push
pop
mov
sbb
mov
xchg
mov
cmp
xor
stc
int3
rcr
clc
in
call
das
repz
repnz
iret
push
or
cld
inc
jnp
xchg
xchg
adc
movsl
loopne
scas
sti
mov
pop
lcall
cwtl
jae
mov
pusha
fldz
outsb
lcall
aaa
mov
sahf
inc
adcl
jmp
lahf
or
or
pushf
daa
xor
insl
enter
sub
xchg
xchg
add
jb
pop
xor
pop
push
call
pusha
push
call
movsl
mov
gs
insb
xor
cs
insb
add
out
inc
lcall
dec
inc
jle
data16
repnz
insw
inc
movsl
in
clc
imul
sahf
xor
fcomip
nop
pop
int
xor
inc
jg
push
das
rcrl
aad
rcl
iret
imul
add
sbb
pop
xchg
sbb
pop
imul
imul
fcoml
dec
add
enter
mov
stc
xlat
fsubp
sti
mull
hlt
enter
enter
int3
dec
cld
inc
faddl
inc
adc
icebp
int
out
xlat
inc
in
inc
mov
push
das
sub
ds
push
cmp
or
mov
gs
push
je
cmpsl
fwait
sub
jae
shr
xchg
mov
and
add
cmp
cmp
adc
cli
xor
lret
out
sti
imul
xlat
into
enter
mov
sub
push
ret
enter
shlb
iret
pop
push
fbstp
stos
mov
in
repz
arpl
cmc
fistps
sub
lds
dec
mov
ror
push
mov
aas
ja
dec
in
pop
sti
enter
xor
adc
pushf
xor
xchg
push
call
lea
jae
add
inc
fucomip
ja
add
push
call
sub
pushfw
lea
je
stc
jmp
scas
ljmp
mov
add
sub
push
mov
out
xor
pop
xchg
push
jnp
adc
add
cmp
fldl
sub
sarb
dec
lea
and
sahf
fldt
lds
orl
aam
sti
mul
and
popa
hlt
and
bound
pop
bnd
push
lret
dec
ljmp
cwtl
dec
cs
dec
inc
out
setns
ja
dec
jae
imul
outsl
push
push
dec
pop
jbe
inc
push
fmuls
sbb
cwtl
scas
push
pop
inc
mov
lea
bts
jne
scas
sub
mov
cld
jmp
cmp
xor
adc
iret
repz
call
arpl
movsl
dec
mov
lea
mov
in
push
inc
sub
test
lret
jbe
imul
adc
push
leave
js
push
in
inc
adc
sbb
gs
and
xor
enter
shl
cld
int
in
call
imul
movsl
lods
in
xor
jno
insb
lods
sub
adc
mov
adc
mov
xchg
out
mov
push
ljmp
add
movsl
adc
test
cmp
adc
add
sub
clc
int3
add
lcall
push
int
xor
in
pop
movsb
inc
adc
dec
hlt
jge
xor
xchg
cmp
lds
fs
cmc
dec
int
loope
shll
pushf
mov
bswap
pushl
popl
pushf
mov
lahf
lahf
movl
jmp
add
inc
jne
imul
insb
add
inc
out
into
ret
lret
ret
fsubrp
rcl
inc
sbb
cmp
ss
jne
xchg
pop
js
dec
mov
ljmp
inc
pop
notb
inc
xor
cld
and
fsub
fdivr
call
cmc
fsubrs
jns
mov
dec
pushf
movsl
cmp
aaa
scas
sbb
pop
js
shrb
test
xchg
pop
shlb
push
lea
pop
push
call
xorb
add
mov
mov
jo
dec
loope
sarl
pop
xor
xor
addb
mov
lea
pop
push
call
xorb
fsub
popa
mov
jl
insb
jns
adc
scas
adc
rcrl
addr16
aad
clc
ret
add
and
addl
sbb
loopne
pop
push
out
push
imul
jbe
pop
jae
out
movsl
roll
xorb
or
cmpb
call
push
pop
push
call
andb
lcall
movsb
mov
pusha
lea
call
pushf
pushf
jmp
pop
mov
pusha
pushl
ret
pusha
pusha
pushf
not
mov
lea
push
mov
jmp
pusha
add
mov
mov
pushf
lea
jmp
push
call
xor
rcrb
pop
out
lcall
aad
add
jmp
push
call
test
push
movsl
push
sub
xchg
cmp
and
sub
sbb
cmp
xchg
adc
scas
xchg
sub
jnp
aas
xor
imul
push
gs
push
sbb
cmpl
inc
aaa
sbb
sub
gs
insl
in
add
sub
xor
gs
xchg
data16
adcl
aas
popa
lcall
sub
rcr
std
mov
inc
lea
popf
sub
xor
cmp
scas
ss
add
cmp
call
pop
mov
push
call
hlt
xor
push
and
fiadds
add
adc
add
scas
sti
inc
in
int
add
std
popa
xor
add
cmp
jl
sarb
icebp
out
mov
push
sbb
jae
lods
fucom
les
mov
inc
cld
shrb
pop
mov
and
inc
pop
jnp
mov
mov
pmuludq
sbb
adc
xor
daa
mov
mov
movzbl
xor
ja
inc
inc
dec
stc
lods
stos
cmpl
xchg
fldcw
add
sbbb
sub
daa
mov
adc
lret
lds
int3
ficompl
fs
sub
leave
dec
leave
fisubrs
push
scas
add
xchg
aaa
mov
and
cmc
fistpll
ja
jl
loope
push
pop
adc
jge
mov
fisubrl
data16
in
cmp
insb
enter
xchg
movsl
xchg
xor
fbld
lea
add
and
push
scas
xor
add
jne
dec
sbb
clc
aaa
push
or
aas
ds
xor
adc
add
mov
je
pop
inc
roll
inc
inc
mov
cmc
call
mov
dec
rolb
cld
sub
mov
xchg
lahf
xorl
fsubr
jo
decb
popf
dec
lcall
stos
mov
xorb
sbb
mov
cmpsl
into
ret
pop
cmpsb
and
xchg
push
out
lds
xchg
cmp
push
xor
lods
lea
call
pusha
cmp
pushf
call
and
cmc
pusha
pushf
test
add
push
push
push
pushf
lea
jmp
aam
pop
xor
sub
add
or
xor
aaa
jl
shl
push
test
jle
sti
pop
cmpsb
and
add
in
stc
push
cmc
dec
std
pop
xor
sbb
inc
jo
hlt
push
xchg
fidivrs
adcl
dec
fwait
addr16
sub
out
cmp
sar
loope
icebp
enter
fmul
push
jnp
xchg
mov
sub
push
lds
fbstp
pop
es
jne
sahf
xorl
int
push
mov
jmp
jg
jnp
out
into
add
sbb
sbb
add
test
or
add
adc
addr16
iret
dec
nop
cld
in
shl
loope
cmc
shr
hlt
stc
stc
les
cmp
lahf
test
movsl
pushf
stos
ljmp
jbe
dec
shrb
push
lea
sub
mov
outsl
xchg
fimuls
xor
mov
scas
mov
shrl
and
fistpl
sbb
stc
fmull
mov
cwtl
cmp
mov
mov
lret
sbb
add
aad
shr
cmp
ret
jmp
aaa
data16
jmp
and
leave
pop
push
repnz
add
adc
pop
movsl
mov
jb
mov
adc
push
jle
movsl
mov
iret
loop
cli
iret
fcmovb
cli
fcmovnb
repz
fisttpl
int3
dec
pop
mov
mov
mov
sbb
inc
sbb
xchg
inc
fwait
xor
ja
nop
lods
in
xchg
adc
mov
mov
dec
shrb
mov
shl
push
in
js
jl
je
push
cmc
fs
inc
std
xor
mov
test
stc
xor
mov
mov
test
movsb
mov
sarb
mov
cmp
add
lahf
xlat
dec
adc
jmp
nop
inc
jle
inc
inc
xchg
stc
bound
scas
lds
in
in
sbb
std
dec
sbb
push
ds
out
lods
arpl
leave
pop
loopne
loopne
xchg
insb
ljmp
mov
test
mov
jnp
xlat
dec
fistpl
pop
out
inc
or
sbb
cmpsb
add
jnp
daa
fadds
sbb
clc
push
cmpsl
ds
js
sbb
add
or
ret
ret
xchg
mov
ret
fldlg2
stc
lock
shl
clc
loopne
mov
xchg
cmc
and
mov
and
int3
fisttpll
push
loope,pn
movsb
lret
test
adc
lret
cld
inc
cld
dec
stos
cmpsl
fwait
or
xchg
stc
lea
mov
ds
cwtl
aas
pop
dec
jbe
pop
xlat
inc
push
pop
jmp
out
inc
or
mov
imul
cmp
pop
dec
jo
inc
jno
insl
loopne
mov
loopne
inc
stos
mov
iret
inc
xor
jbe
imul
jnp
ficoms
push
icebp
ja
loopne
lcall
movsb
or
popa
cmp
jae
loopne
mov
push
pop
arpl
sarl
test
outsb
aas
push
stos
fs
xor
sub
out
ljmp
leave
cld
dec
in
mov
add
imull
jle
push
push
fbld
inc
or
dec
cwtl
leave
lock
in
fstpt
xchg
cmp
cmp
popf
loopne
sub
and
dec
adcl
enter
frstpm(287
xor
dec
mov
scas
add
pop
je
mov
mov
cmpsb
cmpsl
push
scas
mov
pop
xor
xlat
clc
or
frstor
sbb
adc
push
aam
shll
in
xchg
lock
pop
pusha
inc
fmuls
clc
dec
inc
inc
pop
cli
mov
push
cli
dec
cli
addr16
outsl
lret
push
push
fiaddl
inc
or
out
and
jge
cmp
jno
push
movb
lea
je
pusha
lea
jmp
push
call
mov
pushl
lds
into
sub
fwait
xchg
mov
mov
mov
in
clc
test
xchg
stc
ss
fs
aam
or
cmc
pop
aam
mov
jo
pop
int3
test
mov
in
xchg
mov
mov
cmpsb
push
xchg
out
adc
adc
fcmovne
std
dec
xchg
cli
pop
sub
insl
pop
cmpsb
negl
movsb
popf
outsb
pop
lock
add
xor
mov
dec
aad
cli
dec
bnd
dec
into
inc
fimuls
jg
outsl
xor
lds
mov
movzwl
bswap
not
lea
movsbw
lea
not
mov
push
pop
mov
pusha
pushl
pushf
jmp
xchg
loope
int
sub
in
fisttpll
scas
stos
popf
cmp
sahf
lret
into
stc
xchg
test
lea
mov
jp
cmp
fcompl
mov
popl
scas
xchg
or
outsl
mov
mov
gs
popa
push
xor
stos
xchg
push
ret
jb
xchg
and
push
bnd
test
loope
adc
or
mov
lahf
ljmp
adc
pop
mov
lcall
mov
add
add
call
aaa
mov
loopne
add
pop
add
cmp
adc
fucomp
jb
add
rcrb
call
sub
add
add
iret
call
push
call
call
fwait
xchg
cmp
jnp
push
data16
outsl
bound
pop
pop
imul
add
xor
vpsubw
dec
xor
imul
aaa
cmpsb
fisttps
test
clc
push
stos
or
int
mov
xchg
adc
cwtl
fwait
xchg
clc
pop
jmp
cmp
cld
mov
dec
loope
fnstsw
fwait
iret
inc
xchg
lods
push
jmp
mov
daa
fwait
outsb
xorl
dec
jo
les
dec
in
jge
jno
jne
pop
aam
inc
pop
fwait
dec
xchg
nop
test
mov
xchg
mov
mov
pop
cmpsb
jnp
loopne
xchg
jle
xor
mov
jns
push
lcall
vpackuswb
les
xor
add
sti
jb
and
mov
dec
push
push
lods
fs
test
test
cmp
add
out
imull
jmp
add
jmp
insl
aam
enter
aam
in
dec
xor
adc
stc
call
fdivrs
inc
mov
mov
mov
adcl
jmp
out
addl
arpl
icebp
int
outsl
push
iret
push
mov
movhps
addr16
inc
dec
fstpl
insb
mov
or
dec
loope
add
inc
lods
daa
das
loope
jns
inc
in
cmpsl
rcl
pop
sar
aam
in
hlt
jno
gs
push
in
xor
lcall
fs
jae
pusha
lea
jne
jmp
lea
ja
sub
setge
sub
shrd
bswap
add
mov
mov
inc
not
pushf
pusha
mov
cmp
stc
repnz
movw
lea
jne
sets
push
pushf
movb
pop
mov
lahf
movsbl
push
lea
mov
pushf
movl
mov
mov
pusha
pushl
ret
outsl
insb
xor
cs
insb
add
push
mov
mov
push
mov
push
xor
push
sbb
cmpsb
sub
loop
cwtl
rcl
inc
loope
aam
mov
scas
icebp
daa
jp
dec
mov
mov
cs
out
imul
dec
jns
jne
in
inc
setbe
push
dec
in
ss
xor
faddl
cmp
out
mov
xor
int3
sub
mov
add
sti
inc
and
ret
inc
sub
mov
shrb
enter
in
cld
xor
lods
push
call
inc
mov
push
scas
fmulp
lret
mov
out
ret
mov
push
addb
add
sbb
mov
in
cld
sub
scas
add
aas
add
pop
dec
pop
int3
pop
add
jecxz
sahf
pop
stos
fadds
icebp
push
add
mov
pop
xlat
or
xor
push
lcall
cmp
stc
pop
add
dec
ja
ja
push
out
arpl
jnp
ja
inc
lret
add
sbb
and
sub
sub
movsb
and
es
lcall
jo
mov
enter
sbb
mov
jno
lea
add
jecxz
mov
sbb
and
push
imulb
ret
xlat
loopne
sbb
sbb
inc
jge
sbb
dec
into
repnz
stc
pop
incl
lcall
movsb
mov
cltd
xor
xor
cmp
adc
inc
add
sbb
push
call
fprem1
test
push
xchg
test
movsb
popf
xchg
movsl
mov
movsl
mov
ror
inc
inc
mov
and
push
mov
or
incb
adc
xor
pop
mov
sbb
push
mov
mov
cmp
jg
push
ljmp
mov
negb
cli
dec
mov
mov
mov
xor
cwtl
inc
js
js
inc
fsts
fldenv
insb
shll
popa
push
call
pop
sub
push
repz
sub
cmc
in
in
sar
jmp
push
leave
fiadds
jbe
orb
pop
xchg
xchg
xor
ss
sub
sbb
mov
lret
into
pushl
clc
dec
loop
mov
xchg
inc
xchg
outsb
lods
icebp
insl
jmp
or
popa
and
xchg
out
inc
stos
ficoms
xor
aad
cmp
out
test
adc
out
roll
push
enter
enter
lock
jno
pop
xor
fnstcw
dec
jle
ljmp
in
in
enter
hlt
rol
jno
lret
jbe
repz
test
sub
insb
jg
adc
cmp
xchg
repz
outsb
pop
in
mov
lods
and
ficompl
fildl
jge
cmp
cmp
ds
mov
imul
sbb
les
sub
out
cmp
mov
pop
scas
xchg
scas
add
push
cmpsl
and
inc
add
jge
inc
pushf
fidivrl
mov
ds
adc
sub
cli
cmp
test
xor
add
in
add
add
fstl
cmpsb
and
sub
xchg
movsl
xor
loop
dec
push
cmp
outsb
mov
mov
test
or
nop
sub
mov
mov
rcrl
aas
daa
mov
scas
mov
mov
mov
lret
dec
rcrl
push
inc
ljmp
jb
jp
inc
add
or
and
inc
hlt
rcl
in
loopne
divb
adc
mov
pop
fstpl
mov
mov
or
incb
jnp
xchg
fidivl
movsb
lahf
mov
sub
ret
ret
push
repz
insl
lds
and
cmp
mov
jnp
rclb
int
fsubl
inc
sar
push
cs
fwait
cmp
push
xorl
cmp
xchg
sti
dec
xor
rcrb
and
or
and
sub
dec
int
adc
leave
push
and
push
imul
mov
xlat
mov
inc
ljmp
fistpl
cmp
mov
xchg
ss
rcrl
ror
xor
jge
fiaddl
jno
cmpsl
fwait
shll
jbe
rcll
in
jmp
jecxz
imul
ja
into
sbb
in
fnsave
aad
in
jl
dec
xor
cmp
and
inc
xchg
scas
xchg
mov
xchg
stos
mov
fidivrl
xor
push
imul
pop
fwait
or
sbb
outsl
mov
dec
iret
pop
les
dec
xchg
orb
cli
push
faddp
aaa
negb
std
dec
sub
arpl
jmp
xchg
cmp
adc
sbb
adc
dec
jo
imul
jmp
mov
sbb
mov
dec
xchg
xlat
push
jle
mov
add
insl
push
roll
adc
test
fs
and
mov
xchg
sbb
ja
sbb
movl
imul
mov
repnz
cmp
push
ss
test
cmp
subb
mov
inc
or
xchg
ss
movsb
lea
jge
pop
ficompl
dec
fwait
mov
jmp
push
lcall
scas
push
lahf
add
inc
add
jae
data16
fs
insb
add
push
insb
add
push
call
scas
dec
lock
imul
gs
xor
cs
insb
add
test
fwait
xchg
call
cmpsl
mov
mov
jno
pop
jo
dec
dec
insb
push
push
std
insb
clc
gs
aas
xchg
xchg
mov
into
jae
aad
jg
lds
pop
outsl
inc
mov
xor
loop
cmc
add
mov
cmp
and
push
loope
mov
pop
pop
mov
filds
pop
push
mov
mov
sbb
xchg
cmp
cmpsl
sbb
insb
sti
sub
shll
fwait
repnz
push
bnd
push
divb
addr16
pop
into
pop
xor
push
lret
mov
out
pop
pop
mov
cmpsb
sbbl
mov
pop
dec
ds
mov
and
inc
addl
mov
daa
push
incl
and
jge
call
cmp
xor
mov
test
inc
out
dec
lcallw
sub
adc
xorb
dec
clc
jge
jno
jne
insl
shlb
hlt
dec
push
add
add
add
stos
adc
add
add
add
add
add
push
push
add
add
add
push
add
add
add
add
add
lock
add
out
add
add
add
scas
adc
add
mov
add
push
imul
add
or
add
adc
add
add
add
sbb
add
add
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
ja
pop
test
adc
lret
sub
sub
add
cmp
pushf
add
xchg
xlat
sub
add
rorl
jmp
fwait
popf
pop
imul
push
dec
pop
sti
mov
cli
push
lret
dec
xchg
cmp
pushf
cmpsl
fwait
push
xchg
stos
adc
inc
icebp
in
cltd
movsl
sbb
leave
sub
add
lds
jle
out
push
bnd
pop
xchg
jmp
sbb
jle
test
mov
mov
xor
test
add
shr
lcall
add
inc
callw
add
gs
pop
rcrb
iret
lcall
cmc
test
pushf
test
ficoml
stos
stos
imul
or
ror
call
icebp
push
in
ja
push
xchg
xchg
stos
mov
pushf
xchg
push
cmp
ss
or
and
cli
jg
and
cmc
cwtl
push
dec
mov
bound
lds
mov
mov
loop
cmp
outsl
aam
mov
inc
jle
outsb
jecxz
incl
lret
push
ret
inc
jmp
inc
cld
dec
xchg
stos
push
call
das
repz
pop
aad
bt
cmp
jmp
mov
fists
dec
xlat
lock
pusha
insl
pusha
inc
pop
jne
insl
je
insb
jnp
in
jae
xor
in
push
sbb
fsubr
mov
mov
fs
mov
idivb
ljmp
jbe
lods
jae
add
adc
sbb
cmovno
cmp
dec
testl
jno
dec
pop
or
jg
sar
push
popa
pop
push
mov
adc
and
add
adc
orb
push
ljmpw
inc
fildll
jb
xor
push
push
call
out
ret
inc
aam
aas
dec
xorl
xchg
mov
mov
std
insb
clc
mov
and
addb
insb
rorl
or
mov
adc
mov
fdivrl
bound
mov
xchg
addl
insl
mov
and
aam
les
popf
imul
sbb
popa
rorb
shrl
cmp
sub
sbb
ds
or
ret
or
addb
sahf
imul
lea
mov
pop
imul
loopne
and
outsl
sub
sub
adc
cmp
lods
or
lahf
jo
sbb
roll
jge
in
dec
jo
cld
sub
mov
cmpl
lret
lock
push
mov
push
sbb
or
mov
test
cmp
pusha
push
push
pop
mov
dec
roll
push
loope
fnstsw
xor
cmpsl
call
mov
push
pushf
mov
mov
pushl
ret
push
das
or
icebp
ds
adc
or
cmp
xor
sub
mov
movsl
imul
sbb
jno
test
mov
bswap
in
mov
pop
sub
sub
cmp
stc
push
lock
jp
and
push
push
outsl
ret
sub
mov
shl
lret
xlat
adc
xchg
inc
jg
movsl
dec
jae
mov
and
js
mov
stos
call
das
int3
cld
xor
addr16
push
sbb
sub
xchg
sub
adc
xor
imul
fdivr
call
sub
adc
mov
iret
sbb
in
rol
rcl
stc
lock
rolb
mov
ficomps
mov
mov
xchg
mov
js
inc
adc
or
pop
lods
lcall
push
scas
adc
sub
in
inc
aad
test
push
out
xor
sbb
cltd
add
loop
jl
loope
in
jl
push
sarl
xor
ret
adc
mov
add
sub
sbb
xor
scas
in
pop
fucomp
adc
pop
subb
mov
inc
dec
dec
in
lret
fdivr
sbb
out
jmp
or
je
dec
mov
add
call
add
sbb
stc
cmp
insb
cmp
dec
out
cli
out
and
daa
out
push
loop
and
in
roll
adc
xlat
repz
fs
subb
mov
xchg
das
pop
sbb
mov
inc
insb
aam
and
pop
xorb
cld
mov
sbb
aad
data16
mov
scas
lzcnt
outsb
arpl
jae
cmpsl
jecxz
pop
push
test
mov
sub
ret
and
lea
jne
pushf
pushl
ret
mov
aas
movsb
aam
data16
mov
test
mov
hlt
lds
icebp
hlt
dec
pop
sti
clc
xchg
ss
je
data16
mov
mov
push
cmp
lods
outsb
xor
push
fwait
cs
inc
clc
mov
in
ljmp
adc
call
cmp
jae
shll
lods
lret
aaa
mov
xchg
lcall
lahf
mov
shl
arpl
mov
mov
mov
adc
incb
adc
cli
xor
jb
cmp
test
fnstsw
sbb
inc
sbb
add
dec
push
sub
push
push
pop
mov
push
push
mov
mov
xchg
or
mov
icebp
inc
add
inc
mov
dec
arpl
outsl
lret
ja
ja
inc
mul
add
push
call
stos
cmp
pushf
mov
adc
push
pusha
pushf
push
lea
jmp
pushf
rep
movsbw
lea
mov
pusha
pushf
push
pushf
lea
jmp
push
call
das
jmp
add
test
call
push
inc
jmp
jg
cmp
mov
mov
pop
and
cmp
daa
sbb
cmp
sbb
push
or
out
add
xor
ja
sbb
add
in
sbb
xlat
mov
dec
jbe
in
mov
cs
es
addr16
mov
lahf
sub
jbe
mov
mov
mov
push
jl
mov
add
adc
jb
cmp
cmp
dec
rcrl
aas
sahf
xor
jecxz
movsl
push
bnd
push
lret
pop
out
ret
xor
mov
push
call
push
add
jmp
lock
push
mov
mov
xchg
mov
adcb
mov
sbb
out
cmpsb
jl
inc
leave
cwtl
mov
push
xchg
loopne
mov
add
dec
pop
or
lods
aam
mov
mov
stos
ss
fdivrp
mov
jl
fs
out
or
inc
int
loopne
scas
mov
rcrl
pop
adc
es
xchg
xor
adc
and
add
jae
dec
push
call
mov
pushf
call
out
sarl
adc
pop
call
stos
sahf
dec
aam
push
call
jge
cmpl
pushf
pusha
lea
je
btr
bsf
mov
stc
bsf
shld
sub
shl
sub
shr
pusha
bsr
sbb
mov
dec
add
not
test
not
bswap
add
btr
shl
cmc
mov
cmp
pushf
stc
pusha
shr
cmp
cmc
clc
cmp
cmp
jmp
mov
cmp
jmp
ja
daa
ss
jno
lret
push
enter
mov
or
hlt
push
or
gs
shr
mov
adc
mov
lea
outsl
out
xor
cvtps2pd
or
cwtl
fistps
pop
xchg
sbb
scas
sahf
loop
stos
je
sub
lret
or
sbb
mov
lods
xor
sub
cld
sub
xchg
mov
mov
cmp
hlt
inc
movsb
cwtl
push
call
inc
cmp
sub
and
pusha
pushf
push
lea
jmp
sub
lahf
ljmp
xchg
andb
mov
bound
icebp
daa
mov
or
push
in
rcrb
dec
dec
sbb
clc
aam
lea
movsb
lea
inc
mov
sub
jae
lret
test
das
xor
in
adc
xchg
dec
mov
loop
je
dec
loopne
lcall
lcall
in
cwtl
xor
ss
push
cmpl
and
cmp
xlat
sbb
mov
mov
mov
aad
call
in
loope
shr
push
int3
fstpt
lahf
test
fldt
xchg
inc
add
imul
gs
adc
mov
sbb
dec
lret
mov
mov
mov
cmpsb
lret
test
or
icebp
clc
in
xchg
sbb
sbb
jge
popa
popf
mov
adc
inc
fsubrs
jns
popa
hlt
insl
shlb
lock
mov
icebp
into
decl
adc
cltd
add
xchg
insb
cmc
push
notw
jp
mov
pop
imul
pop
out
in
sahf
test
pop
ja
dec
dec
xlat
inc
fwait
or
lar
mov
adc
test
jle
cmp
lret
mull
minps
adc
adc
cmpsb
or
cmc
iret
scas
xchg
mov
enter
cmp
out
mov
sbb
adc
leave
pop
push
call
ret
enter
es
mov
dec
repz
out
jmp
ret
fcmovb
ljmp
mul
imul
pusha
rorl
mov
pop
cltd
cwtl
dec
loopne
mov
xor
xor
pop
adc
aam
les
stc
cmp
inc
imul
or
inc
jp
cli
push
or
out
outsl
out
fidivrs
arpl
imul
loop
xor
hlt
push
inc
outsw
ljmp
lcall
cmp
in
outsl
loop
divl
rcll
inc
subl
out
mov
jne
loope
jmp
push
inc
outsl
jbe
jle
push
inc
enter
inc
dec
jne
icebp
sbb
inc
out
inc
and
dec
or
pusha
mov
loope
loope
popf
popa
out
std
xor
adc
xor
cmp
lahf
das
inc
inc
jg
addr16
arpl
push
cli
inc
arpl
push
out
inc
repnz
mov
insl
pop
inc
inc
inc
js
pop
insl
fs
inc
in
fldl
cmp
icebp
jl
pop
aad
sarl
fsts
xchg
jg
mov
imul
mov
add
xor
xchg
addr16
cmc
int3
insl
xor
je
fs
imul
rcrb
jmp
sbb
mov
mov
loope
or
in
dec
mov
jbe
pop
and
pop
fcomi
sub
mov
sbb
shr
aam
lock
and
pop
bound
aaa
div
mov
dec
add
sub
dec
inc
lea
mov
cli
xor
mov
fidivrs
cmc
out
js
cwtl
adc
mov
xor
sbb
mov
xor
out
cli
fucomi
fucomip
cli
out
ret
into
ljmp
lock
adc
out
aad
fisubrl
cs
arpl
xchg
push
int3
pop
int
inc
add
popf
enter
imul
push
adc
imul
movsb
arpl
les
movsl
sbb
mov
movsb
icebp
std
jp
out
push
pop
sub
sub
add
cmp
cmpsb
aaa
cmpsl
sbb
pop
mov
test
mov
gs
scas
sub
enter
xchg
adc
mov
daa
mov
mov
scas
adc
mov
mov
cs
aas
adc
in
and
jae
xchg
mov
lahf
mov
mov
iret
pop
inc
jle
in
cltd
add
mov
inc
movsl
lock
inc
nop
sub
cmp
jecxz
add
xor
lock
xor
imul
push
loop
out
loop
imul
inc
lock
and
jmp
add
bt
bt
stc
cmc
add
jmp
mov
pushl
pushf
cmp
test
pushf
lea
ja
pusha
lea
je
cmc
add
pushf
pusha
pushf
push
cmp
movb
lea
jb
test
bt
cmp
pushf
jmp
cltd
enter
cmp
dec
lcall
test
nop
mov
mov
ljmp
icebp
rcrb
and
add
repnz
pop
out
fildll
mov
dec
pusha
mov
xor
jg
sbb
pop
mov
pop
mov
cld
out
mov
test
pushf
and
mov
ret
inc
push
xor
sbb
jg
outsl
cmp
mov
arpl
and
scas
test
std
mov
cmp
cmp
mov
pop
jo
jo
pop
std
jl
dec
stc
inc
leave
pop
shll
fsub
jo
outsl
std
jmp
test
lods
aad
inc
push
and
sub
adc
or
lret
jle
and
clc
cmp
inc
out
inc
sahf
mov
mov
xchg
cs
shl
fucomi
lret
out
inc
out
ret
inc
cmp
notb
insl
push
jl
or
mov
adc
stos
mov
xchg
push
and
lock
jmp
sarl
enter
cmp
pushf
push
cli
inc
or
push
stos
loopne
or
jge
add
pop
scas
das
lcall
cmp
out
and
or
shrl
call
shll
lret
call
mov
call
dec
call
lahf
jmp
stos
stos
pop
inc
add
mov
xchg
mov
mov
mov
or
out
xchg
pmaxsw
mov
jle
rol
rol
js
inc
stc
popf
and
ret
push
push
cli
jl
cmpsb
mov
jmp
mov
fwait
lcall
sar
and
out
inc
repz
roll
outsb
xlat
xor
xchg
divps
ljmp
mov
std
enter
cld
in
int3
cmc
call
arpl
out
popl
mov
lds
fwait
sub
xchg
stos
popa
cld
test
in
pop
jo
js
rclb
mov
xor
out
shl
xor
mov
loopw
repnz
ljmp
inc
in
std
out
pushf
lea
call
jmp
cmp
stos
sti
sarl
mov
mov
mov
test
jl
cmp
mov
xor
cmp
mov
in
fcmovne
pop
icebp
sub
jmp
aam
fwait
xchg
cmp
add
jl
test
push
xor
insl
dec
xor
mov
pop
int
xor
sub
imul
and
cld
inc
mov
popf
bound
iret
outsb
xlat
pop
push
xlat
pop
jmp
jmp
inc
in
dec
xchg
stos
push
call
dec
jns
pop
adcl
jmp
push
call
and
push
call
rolb
adc
scas
aas
movsb
enter
or
or
add
add
jno
push
out
and
ljmp
mov
dec
mov
push
loopne
xor
mov
loope
in
pusha
fisttpll
pop
fisttpll
xor
cmp
adc
call
add
mov
pusha
mov
jmp
pop
sti
div
push
repnz
jecxz
cmp
icebp
push
fcomps
adc
xor
sub
or
or
xchg
dec
xor
inc
ret
loop
pop
movsl
sahf
mov
dec
popa
in
sub
adcb
adc
out
inc
jno
test
xchg
cmp
into
push
int
insl
add
scas
cltd
sub
scas
mov
mov
adc
or
sbb
or
cs
scas
cmp
bound
dec
push
imul
sub
mov
iret
fimull
push
dec
faddl
cwtl
movsb
adcl
lea
xor
inc
jmp
xor
jmp
call
jb
aas
cmp
and
cld
popa
xor
sahf
ret
es
push
push
movsb
pop
arpl
inc
cmc
or
addl
dec
aas
push
dec
mov
xchg
cmpsb
fbld
xchg
or
xor
outsl
jp
jae
jnp
jnp
outsl
jle
jle
ljmp
ss
sub
out
cmp
shrb
xor
jns
repz
mov
aas
mov
mov
loop
dec
pop
cmc
lcall
lock
gs
sub
push
pushl
movb
push
lea
jmp
push
data16
cmpsb
xchg
lret
cli
sti
ljmp
lret
dec
rol
pop
outsb
lret
sahf
mov
out
cmpsl
cmp
dec
negl
adcl
clc
push
mov
or
cmp
addb
mov
test
mov
or
adc
pop
dec
sub
pop
je
lret
xlat
out
xchg
pop
in
stos
pop
push
jge
out
sti
int3
pop
fdivrs
add
in
int
dec
fmull
fisttpll
scas
or
or
xor
aas
out
lahf
mov
or
jns
jo
pop
jno
jge
inc
fs
sarl
push
jecxz
add
xchg
sub
test
add
addr16
fildll
mov
jp
fsubl
xchg
adc
jg
orl
scas
mov
scas
and
jno
push
dec
fdivp
xor
stos
pop
pop
mov
lcall
dec
std
cli
stc
cmp
cmc
push
jp
sbb
xchg
daa
xchg
pop
push
dec
push
xor
xchg
andb
xlat
mov
nop
adcl
inc
lock
jns
popa
int3
jge
jecxz
xor
and
xlat
lret
ja
jne
cmc
dec
in
loope
inc
jmp
inc
jg
iret
xorb
push
xchg
pop
push
dec
push
push
je
insb
push
call
jge
dec
cmp
jmp
dec
leave
mov
ficomps
jmp
mov
inc
jge
jl
leave
stc
inc
adc
lcall
mov
xor
stc
mov
jg
outsb
xlat
mov
stos
pushf
or
sbb
push
push
mov
outsl
into
push
lret
sub
nop
mov
daa
mov
xor
cmp
jnp
cli
out
out
push
aad
mov
mov
test
mov
or
mov
mov
loope
inc
test
pop
or
jge
in
xor
mov
gs
cli
filds
scas
cli
pop
jne
jae
sbb
inc
ret
rclb
inc
push
rcll
dec
je
hlt
popa
mov
pop
sub
xchg
xchg
cmp
daa
lcall
stc
push
call
jg
cmp
push
call
jmp
push
call
mov
jecxz
sub
cmc
test
cmp
pushf
call
add
push
jns
push
je
imul
push
call
icebp
mov
xchg
mov
sbb
inc
je
mov
pop
fiadds
aam
push
pop
dec
sub
pop
xor
sti
jge
jne
dec
je
dec
pop
push
push
cld
pop
sbbb
mov
jno
out
dec
pop
pop
fdiv
ljmp
push
mov
mov
inc
adc
mov
xor
adc
xchg
push
adc
mov
hlt
cmp
mov
mov
scas
xchg
xchg
es
push
mov
clc
les
aad
inc
call
mov
add
shll
jl
add
push
call
into
sub
add
pusha
imul
repz
xlat
repz
inc
imull
inc
dec
fcoms
rolb
mov
jo
jns
std
int3
sub
hlt
jmp
test
in
add
clc
std
pusha
xchg
sbb
inc
mov
sub
sbb
and
stos
arpl
imul
fstp
ja
shrb
adc
outsl
outsb
mov
sub
es
mov
or
cmp
xor
movsl
push
call
jg
push
cmp
dec
sbb
xchg
popf
cwtl
mov
mov
inc
je
cli
outsl
cmp
outsl
jbe
jno
stc
cmp
sbb
ret
push
xchg
pop
popa
mov
cmp
call
pop
fsubrl
ljmp
nop
xor
ficompl
int
mov
sub
enter
pop
enter
inc
dec
pusha
rol
fldt
push
jnp,pn
rorl
rclb
add
adc
mov
sbb
push
dec
loop
out
jae
shlb
push
out
jg
xor
add
aam
shr
jp
add
std
movsb
aam
int3
popa
xor
ret
push
fwait
mov
fwait
mov
aas
scas
in
jb
pop
mov
push
sub
sti
push
sbb
lds
push
hlt
mov
sub
mov
mov
push
cmp
and
roll
and
imul
xchg
jb
fistpl
xchg
xchg
imul
int
in
mov
int3
lock
lock
int3
push
cld
jne
gs
faddl
inc
in
icebp
int
add
jl
call
pop
sbb
pushf
call
push
call
in
mov
mov
test
imul
insl
add
add
enter
std
in
and
adc
nopl
adc
xor
push
cmpsl
push
sbb
mov
jge
das
clc
les
and
or
repz
push
jns
jns
inc
and
cli
xor
movsb
add
mov
or
pop
pop
fdivs
jns
pop
aam
inc
in
bound
add
gs
insb
inc
js
arpl
gs
add
lret
rcl
mov
cmc
jmp
jmp
mov
aad
adc
fstpl
fsubrs
sbb
mov
addr16
and
fiadds
cwtl
stc
imul
mov
iret
ret
xchg
and
adc
dec
xor
das
shlb
mov
add
rol
cmp
pop
sbb
sahf
sbb
in
adc
pop
jnp
cmp
js
mov
lret
inc
fiaddl
daa
call
inc
fcoms
popa
int3
jge
jns
inc
in
add
or
sbb
add
sub
push
or
xor
cmp
mov
dec
clc
mov
les
xor
outsl
aam
xchg
subl
aaa
mov
pop
fs
stc
cmp
adc
push
cmp
jl
daa
fidivl
push
sarb
rcrb
pop
mov
outsb
xlat
outsb
xor
popa
jne
scas
js
push
pop
mov
push
lock
dec
aam
in
enter
inc
jecxz
pop
xchg
pusha
mov
or
jmp
cwtl
leave
int3
jmp
xor
fwait
or
out
repnz
addb
test
lahf
mov
flds
les
sbb
mov
nop
cmpl
in
cmp
lahf
and
xchg
icebp
push
outsb
repz
out
and
and
xor
and
je
and
xchg
pop
pop
cmpsb
adc
xor
outsb
faddp
or
mov
push
jo
and
or
or
or
inc
pop
call
cmpl
jae
stc
pushf
cmp
jmp
sbb
out
ror
jmp
fcmovnu
mul
dec
xor
scas
pop
xchg
pop
arpl
jnp
add
push
lds
mov
mov
dec
jp
ret
decl
jp
pop
ret
inc
sti
jb
xor
mov
adc
call
shll
cwtl
inc
or
add
test
add
fistpll
inc
push
push
add
jp
shlb
testb
add
push
js
mov
or
add
inc
js
jae
or
add
push
mov
cwtl
inc
or
add
cli
and
adc
add
inc
jg,pn
jnp
lahf
inc
dec
add
add
xlat
shll
or
add
sar
push
and
cwtl
inc
and
add
bound
dec
sub
or
inc
and
add
es
pushl
fwait
inc
fwait
sbb
add
add
cmpsb
insb
pop
cwtl
inc
rolb
add
shl
negb
xor
add
imul
add
add
or
add
ret
popa
adc
cwtl
inc
or
add
add
add
in
cwtl
inc
cmp
pusha
jge
or
add
jbe
sbb
out
push
cwtl
inc
or
add
inc
jae
clc
mov
add
add
push
cmp
or
add
push
xor
je
push
cwtl
inc
in
sldt
call
sahf
sti
push
cwtl
inc
or
add
add
sbb
add
push
and
xlat
push
cwtl
inc
or
add
inc
call
cwtl
inc
adc
xchg
lock
push
cwtl
inc
or
add
xorl
jge
inc
or
add
popf
mov
mov
add
add
lret
xchg
and
add
gs
inc
mov
dec
es
dec
push
cwtl
inc
or
add
movb
inc
imul
add
mov
inc
or
add
cmpsb
test
push
lahf
inc
cmp
add
xor
outsb
xchg
fwait
inc
enter
adc
lcall
add
dec
or
add
add
loopne
inc
jne
add
lahf
inc
pop
lahf
inc
mov
add
push
sub
mov
add
add
into
jne
pop
lahf
inc
xchg
add
mov
div
fiaddl
adc
cmp
stos
popf
or
cmp
sbb
ds
fwait
pop
test
movsl
pop
ss
push
pop
ds
xor
add
and
and
mov
int
outsl
fists
mov
mov
ret
mov
pop
ds
push
cmp
test
jmp
cli
mov
mov
adc
ss
pusha
cmc
adc
mov
mov
adc
loopne
xor
ljmp
aad
pop
call
adc
mov
aad
mov
xor
add
movsb
outsb
push
push
call
lahf
std
je
out
xor
push
sub
sbb
aas
add
and
xchg
pop
adc
enter
xchg
mov
mov
xchg
mov
test
inc
mov
mov
dec
cmp
xor
mov
repnz
jl
pop
into
push
add
mov
outsl
inc
stos
xchg
std
aas
lea
mov
inc
das
adc
cmp
popa
lds
imull
push
adcl
out
mov
jmp
dec
iret
xlat
inc
iret
pushw
push
divl
inc
add
jp
cmp
xchg
add
aad
stc
aam
call
stc
shl
stc
out
push
rorl
rorl
jae
mov
ja
push
push
cld
cmp
scas
sbb
loopne
push
std
dec
cli
in
lock
jne
pop
or
mov
scas
outsl
dec
sti
dec
arpl
xchg
mov
out
dec
dec
dec
mov
xchg
mov
inc
divl
jno
stos
jl
dec
in
loope
in
insl
jp
rorl
rolb
stos
test
push
or
xor
jg
dec
ret
pop
xor
xchg
push
call
cmp
pop
ja
pop
ljmp
cmp
adc
and
adc
and
or
nop
adc
jge
push
insl
in
mov
dec
shlb
xor
mov
add
int3
xor
stos
add
sahf
add
add
push
mov
mov
ficoms
fxam
shlb
add
inc
adc
out
mov
sbbl
lods
and
jne
xor
pop
ss
int3
lock
lods
lcall
jno
rorl
rclb
repz
stos
sub
or
mov
jno
inc
in
jno
jns
jno
xor
jne
in
movzbw
pushf
bswap
mov
pushl
pushf
pushl
ret
pop
mov
mov
dec
inc
adc
aaa
bound
repz
xchg
jns
dec
test
mov
mov
ds
sub
pop
pop
pop
js
dec
insl
inc
jge
jns
mov
xchg
mov
pop
pusha
inc
inc
push
mov
rol
push
add
add
fcompl
and
lock
les
xor
arpl
in
rcrb
out
jno
aam
fwait
or
xor
xor
enter
jg
call
push
and
xor
sub
lock
out
into
ret
ret
lret
fsubp
lret
lret
xorb
jo
or
jp
iret
sbb
sahf
pop
add
lcall
and
push
xchg
imul
pop
inc
shll
rolb
in
xlat
fdivrs
xor
inc
aam
mov
movsb
xchg
sub
iret
xor
xchg
pop
cmpsb
das
pop
jns
ret
arpl
ret
out
out
jbe
jp
pop
roll
xor
lods
jmp
sbb
js
jne
dec
jmp
jnp
dec
jp
pop
pop
inc
inc
dec
out
jno
add
sarl
shll
addr16
shll
js
js
js
faddl
fs
inc
mov
mov
push
xchg
call
xchg
inc
xchg
data16
mov
ret
hlt
mov
sahf
test
stos
fwait
push
in
mov
sahf
dec
jne
cmc
push
lret
mov
orb
and
inc
fcompl
or
aam
jne
xorl
es
adc
add
dec
insl
popa
addr16
imul
ja
cmp
int
push
jge
push
dec
pusha
pop
je
inc
push
push
jge
jno
inc
push
iret
dec
out
push
ds
jo
fdivr
sub
scas
xchg
inc
loop
xchg
sub
xor
out
mov
stos
lret
or
pop
xchg
push
iret
dec
mov
cmc
dec
xor
add
or
pop
xchg
or
dec
jmp
icebp
add
mov
push
dec
test
out
lret
pop
out
sti
pop
shll
jbe
inc
imull
inc
fcmovnu
or
mov
xlat
loop
push
adc
test
mov
scas
andl
sahf
mov
pop
into
inc
rcll
repz
xor
out
subl
cmp
ret
cmp
mov
xor
and
adc
arpl
mov
adc
aam
ljmp
rcrl
and
pop
stos
movsl
mull
mov
mov
ljmp
jg
inc
jnp
xor
push
pusha
lea
jne
lahf
seta
call
stos
pusha
mov
pushl
mov
lea
jmp
push
call
scas
lcall
in
cmp
fists
xor
or
add
mov
test
movsl
cltd
movsl
nop
and
xor
xlat
mov
mov
adc
push
movsl
dec
enter
inc
divl
pop
testl
push
xor
loopne
adc
mov
fsubrp
cld
rcr
jmp
fcomp
cld
int
inc
cs
pop
js
ds
outsl
mov
dec
jbe
sub
arpl
lret
imul
and
scas
pusha
jge
popa
scas
clc
mov
jmp
push
cltd
xor
inc
mov
cmp
lret
and
push
test
dec
pop
lock
hlt
gs
jno
push
clc
inc
enter
inc
fiaddl
sub
add
jbe
pop
sarl
sub
or
sub
cmp
xor
and
ficomps
ret
sti
push
mov
mov
lods
or
movsb
cmp
xchg
les
sub
dec
lcall
or
cmp
inc
mov
dec
xchg
daa
cli
out
int
sub
jne
xchg
testb
imul
in
shll
xchg
arpl
lahf
add
and
fdivr
in
cmp
sahf
rol
and
or
add
cwtl
pusha
lea
jmp
pushf
cmp
call
pusha
mov
lea
mov
pushf
mov
push
pushl
ret
push
call
jb
inc
jecxz
ret
push
or
xchg
sbb
pop
bound
xor
inc
push
shr
ljmp
sbb
or
add
adc
mov
mov
mov
lock
mov
rcr
adc
outsl
dec
cmp
mov
pop
popa
fs
loopne
inc
loope
cmpl
push
push
pop
push
aam
out
xchg
cmp
mov
adc
fmul
sbb
push
call
cmpsl
sbb
rorb
pushf
pushl
ret
add
pusha
mov
lea
jmp
lahf
cmp
xor
pusha
pop
imul
je
xor
mov
fwait
test
and
outsl
jp
push
dec
pop
push
bound
push
inc
arpl
jnp
inc
pop
decb
sub
jb
sbb
push
mov
int3
mov
test
xchg
sub
test
out
fnstenv
packsswb
cmp
loop
cmp
cwtl
mov
into
mov
push
lds
pop
cli
pop
add
sbb
add
mov
adc
mov
add
sub
call
adc
push
add
and
call
and
mov
stos
mov
dec
and
mov
dec
jo
pop
popa
push
dec
dec
jno
int
cltd
or
mov
inc
aam
in
shlb
cmp
stc
push
cmc
mov
inc
divb
out
das
and
push
shlb
jg
in
push
lock
negl
add
test
jl
pop
push
popa
or
call
pop
in
xchg
xchg
add
mov
adc
mov
or
pop
pusha
add
lea
bt
test
pusha
cmp
cmp
mov
pushf
movw
lea
jne
jmp
pop
rcl
addr16
out
jp
inc
jle
dec
push
pop
jle
dec
pop
inc
imul
pop
roll
push
push
inc
jne
jnp
or
mov
cltd
loope
mov
dec
aaa
push
pushf
lods
and
int3
sbb
xor
inc
fs
pop
pop
jmp
popa
pop
add
dec
xlat
dec
mov
cmp
clc
mov
pop
lahf
sub
lahf
orl
in
lahf
mov
push
dec
addl
cmp
mov
sub
movsl
cmp
sbb
ret
xor
inc
rcll
insb
inc
pusha
push
jo
push
popa
cld
lret
dec
ljmp
insl
mov
and
push
xchg
or
inc
cld
movsb
cwtl
jae
enter
addl
aad
sysenter
or
fimuls
xchg
int3
adc
lods
fwait
add
pop
stc
push
incl
ljmp
es
mov
mov
stos
pop
sbbb
pop
mov
xchg
cmp
pusha
test
and
pushf
pushl
ret
fwait
lret
ja
jmp
icebp
ja
pushf
ror
and
xchg
adc
sbb
xor
aaa
cs
push
sbb
cmp
dec
insb
push
jl
xchg
aaa
pop
mov
insl
push
clc
out
mov
lds
pop
mov
sbb
mov
cmp
test
fcmovnu
cmc
or
stos
mul
pop
cltd
adc
popa
scas
scas
cs
adc
repz
push
decb
jg
jae
push
push
xor
adc
lea
mov
mov
mov
mov
stos
lahf
mov
mov
pusha
jl
sub
adc
popf
cwtl
popf
sbb
jno
dec
inc
fcompp
jbe
sbb
dec
lea
lea
cmp
popa
call
ja
pop
ljmp
push
divb
stos
lret
lcall
jo
vpsubusb
enter
int3
rcr
cltd
xor
pop
cltd
orb
mov
mov
aam
inc
lea
push
mov
push
xor
insl
lea
xchg
inc
out
mov
adc
les
xor
loope
les
mov
jne
repz
push
xchg
push
or
out
xchg
inc
test
inc
jne
popf
mov
movsl
fidivrs
jnp
pop
and
repz
pop
bnd
push
ficomps
push
addr16
inc
shl
pushl
push
call
pusha
fwait
cmp
mov
xchg
addl
mov
test
fstps
outsl
mov
or
pop
into
fwait
inc
xchg
jne
sahf
add
xlat
sbb
mov
mov
cld
adc
mov
mov
sbb
dec
inc
mov
movsb
jge
shll
mov
cmpl
lret
fiadds
or
push
imul
push
clc
inc
shlb
fwait
or
bswap
ror
mov
cmp
cmpb
push
pushl
movb
mov
lea
jne
aad
push
jmp
aam
pop
inc
out
dec
adc
dec
lcall
gs
jne
dec
inc
in
pop
dec
ficomps
mov
xor
inc
lock
and
data16
pop
push
push
jecxz
jl
movsb
scas
cmp
imul
cwtl
testl
add
push
aad
les
adc
pop
adc
sub
arpl
fwait
mov
ds
lret
imul
orl
je
repnz
jecxz
mov
ja
xchg
cmp
rolb
adcl
movsl
adc
mov
sbb
lods
xchg
or
test
std
lret
lds
cmp
add
mov
push
jecxz
mov
mov
fs
fwait
cmpsl
adc
mov
inc
cmpb
jns
addl
out
sub
mov
ss
xchg
or
xor
in
jo
push
loope
int
fnstenv
xor
shrb
aad
in
call
sub
ret
add
int3
int
jl
add
xchg
in
sub
dec
clc
movsl
stos
xchg
cmp
xor
sti
jge
jge
imul
push
lea
fisubrl
sar
je
sub
dec
jb
mov
xor
fcompl
xchg
hlt
mov
in
sti
int3
inc
or
roll
data16
shr
mov
aaa
jge
sub
cmp
divb
xlat
cmp
cmp
xchg
pop
xchg
lods
cmpsl
jnp
jns
dec
fdivl
inc
hlt
push
enter
in
xor
scas
jo
out
dec
les
add
inc
jle
les
test
pushf
mov
pushf
mov
mov
add
jno
mov
adcl
fildll
xor
popl
cmp
mov
sbb
loope
call
lahf
pop
repnz
stc
ja
jl
inc
int
push
and
or
ret
repz
fldt
pop
iret
pop
call
dec
xor
adc
aad
mov
add
loope
adc
push
call
cs
mov
push
jmp
push
call
lock
xchg
push
call
mov
fwait
loope
cwtl
call
loop
xchg
push
imul
arpl
push
ja
arpl
fisubs
xchg
xor
mov
jmp
sbb
mov
addr16
aas
stos
out
push
dec
jbe
jecxz
mov
and
jge
insb
inc
fiadds
insl
sbb
pop
mov
mov
sbb
pop
je
mov
out
xchg
pop
cmc
loopne
cmp
das
adc
sub
in
sbb
mov
add
or
jmp
movsl
movsb
or
mov
lods
xor
mov
push
call
jp
dec
xor
out
jge
inc
mov
mov
sub
mov
jge
jo
add
imull
mov
mov
add
xchg
push
aad
push
push
js
fstps
pushf
pop
movsl
inc
cmp
xchg
push
push
stos
mov
imul
jbe
ja
pusha
mov
mov
jl
rclb
lret
mov
std
jecxz
fs
push
insb
popa
dec
loope
mov
xchg
xor
pop
mov
mov
stos
pop
mov
sahf
pop
xchg
nop
decb
imul
out
into
repz
inc
faddl
sub
pop
ja
shll
lret
iret
loop
jns
popa
jp
insb
popa
subb
cld
rclb
fcmovb
cli
add
pop
popf
xchg
xlat
enter
icebp
aam
rcll
inc
push
cwtl
nop
push
jl
jmp
insb
push
aad
call
fildll
dec
aaa
loope
and
pop
sub
jb
xchg
cmp
out
adc
stos
mov
scas
sub
movsl
ret
fwait
ds
and
add
or
mov
stc
mov
movsl
mov
xchg
mov
cwtl
or
mov
mov
out
adc
je
add
lahf
mov
mov
andb
bts
cmp
lret
fadd
fcoml
fcmovne
pop
daa
call
dec
xor
mov
clc
lods
mov
and
adc
aam
test
inc
in
push
rolb
rcrb
xor
jmp
jnp
dec
ret
mov
sbb
pop
lods
or
dec
pop
sbb
mov
lods
mov
mov
and
lcall
scas
stos
daa
cmp
loope
jge
enter
outsb
aas
mov
dec
adc
in
adc
and
je
lods
sub
das
mov
outsb
fisttpl
in
and
std
ret
pop
dec
out
lret
jp
pop
fisttpl
dec
pushl
push
push
call
inc
movsl
and
inc
cmp
push
lods
cmp
loop
xlat
lret
ja
cmc
push
arpl
fwait
xchg
mov
mov
jp
jno
je
aad
loope
xchg
pop
pop
xor
pop
clc
int
movsb
jb
lock
or
pop
lret
clc
fstl
aas
or
imul
jp
lcall
insl
loopne
call
insl
aam
in
dec
xor
cli
imul
bt
add
pusha
pusha
pushf
pushf
lea
jmp
push
call
inc
pushf
push
mov
pushf
pushl
ret
pusha
mov
call
mov
call
mov
cmp
repz
lret
imul
faddp
dec
jecxz
insl
pop
iret
push
xchg
and
jne
sub
sub
push
out
rorl
fistpl
es
dec
or
shll
shll
arpl
jb
inc
in
sbb
xchg
lods
cmpsb
pop
bound
dec
push
adc
mov
add
adc
setb
pushf
out
mov
stos
push
test
mov
jmp
mov
gs
push
stos
push
jp
cmpsl
imul
xchg
addb
mov
mov
inc
repz
leave
inc
or
or
or
fldl
sbb
int3
xchg
mov
in
pop
cmp
jae
neg
pop
iret
pop
rep
testl
push
xor
adc
mov
andl
mov
lods
test
mov
imul
or
fdivp
je
pop
sbb
mov
pop
enter
xchg
push
icebp
ljmp
shll
add
icebp
cltd
movsl
add
inc
jmp
adc
andb
bound
pop
xchg
rol
mov
and
setb
test
sub
jl
sub
test
push
pop
xchg
pop
lcall
adc
lret
sub
lea
inc
je
jmp
push
call
xchg
aas
dec
inc
push
lea
movb
push
movl
pushf
jmp
pushf
lea
jae
shl
mov
mov
neg
sbb
bts
mov
not
mov
pusha
xor
cmc
call
push
call
out
pop
ss
mov
dec
mov
into
jmp
xlat
ret
add
sbb
sbb
andl
int3
add
and
inc
out
inc
cld
rorb
mov
jl
mov
cmp
xlat
cmp
xor
scas
push
jae
add
dec
push
mov
into
xchg
xchg
imul
loope
or
leave
ret
pop
cmpsb
repz
xchg
push
aad
outsl
cmp
sbb
and
mulb
dec
dec
je
pop
in
dec
icebp
push
std
je
xor
mov
xor
dec
push
test
outsl
mov
pop
push
stos
inc
jecxz
xchg
push
push
jno
pop
inc
jns
push
je
pop
dec
jmp
xor
push
jno
dec
mov
pop
std
ljmp
inc
inc
xchg
xor
test
jae
mov
xchg
mov
pop
pop
push
fldt
push
lcall
ja
push
add
mov
test
aaa
xor
mov
cwtl
fldl
dec
pop
jmp
jp
pop
inc
lcall
xor
inc
push
call
popa
shll
pushl
call
push
call
js
cmpsl
lcall
mov
pop
push
jnp
push
push
inc
jp
inc
dec
push
out
push
inc
clc
out
fldl
cwtl
std
sarl
sti
jge
sbb
xor
sub
fidivrl
dec
xor
push
imul
inc
aam
inc
jnp
inc
rep
scas
sbb
lret
inc
es
and
xchg
sti
aad
inc
push
cmp
pop
adc
cmp
push
movsb
mov
jp
jge
jecxz
arpl
push
inc
aad
pusha
pop
dec
lock
jne
pop
int3
dec
hlt
pop
shlb
xor
iret
out
mov
pop
sbb
sbb
xor
cmp
xor
mov
push
or
jae
xchg
fists
lds
add
out
mov
movsb
lods
jnp
inc
stos
scas
out
orl
jae
mov
or
nopl
cmp
into
arpl
jge
or
nop
cmc
cmp
inc
mov
fucomip
adc
mov
jecxz
popl
mov
nop
xor
xor
xchg
pushf
lods
pushf
bt
cmp
neg
pushf
pushl
call
out
xchg
popa
js
mov
mov
mov
dec
leave
pop
or
jae
imul
test
jbe
mov
ret
dec
mov
mov
push
ret
add
movsl
mov
and
inc
lcall
in
sbb
sahf
mov
adc
leave
cmc
ret
mov
and
cmpsl
add
in
cmp
mov
cwtl
push
xor
sbb
mov
enter
push
lea
ja
call
push
call
std
movsl
popa
push
mov
movb
call
push
call
sbb
sub
lahf
mov
mov
stos
mov
iret
cmpsl
das
loop
std
shll
push
cmp
jns
cld
cwtl
ja
in
rorl
clc
jno
push
fldz
or
and
xor
sbb
iret
jge
add
scas
ret
xor
clc
push
imul
nop
xor
cld
xor
xchg
xor
adc
and
nop
lea
lods
cmp
or
and
or
inc
mov
and
lea
je
pushf
pusha
pusha
push
lea
jmp
push
call
pop
mov
or
ret
inc
and
addr16
movl
and
jmp
push
call
push
mov
aad
mov
add
dec
shlb
call
rorl
push
call
mov
lods
jmp
outsb
call
cwtl
inc
inc
int3
in
outsl
inc
dec
jb
jle
jp
push
addr16
out
dec
mov
pop
enter
push
addr16
push
popa
adcb
jp
movsl
fucomi
push
push
das
pop
fwait
mov
cs
xor
mov
test
mov
and
idivl
xor
adc
and
mov
fcoms
sub
aaa
cld
and
in
out
icebp
push
popf
or
xor
inc
mov
cmp
lret
std
shl
fsubrs
cmc
jge
mov
jns
fsub
roll
xorb
xchg
rcl
jle
outsl
ret
scas
cmp
sub
mov
adc
sbb
sti
test
mov
jmp
xor
in
in
aad
cmc
aam
fdiv
int3
jno
adc
stc
je
add
pop
test
mov
add
shll
pop
daa
fsubrs
inc
sbb
adc
cmp
add
out
pop
insb
and
and
push
jmp
xchg
test
mov
cmp
lds
shrb
call
ror
push
call
out
and
or
aad
lret
call
xor
in
push
call
sti
lahf
int3
es
repnz
lods
lods
sbb
rcrl
movlps
or
and
sub
xor
mov
adcl
sub
sbb
out
pusha
mov
xor
xor
ds
arpl
scas
aaa
bound
sbb
adc
sti
gs
or
jecxz
xlat
mov
mov
out
push
insl
addb
push
push
mov
in
and
jne
mov
jle
pusha
data16
sbb
fwait
cmp
test
ja
jnp
outsl
loop
pop
lret
xor
pop
push
call
and
inc
fistpll
vxorps
inc
or
pop
pop
lret
xchg
std
out
das
aas
sarb
insb
fbstp
insl
xchg
test
push
lods
ss
rcrl
into
imul
repz
out
out
cli
jmp
idiv
pop
jmp
loopne
xchg
xchg
ss
add
inc
mov
addr16
rclb
push
outsl
xchg
jge
jge
jbe
scas
jg
popa
loop
jb
jb
add
jl
cld
jns
std
pop
mov
cmp
adc
xor
sbb
roll
push
cmpb
call
mov
sub
push
rcr
loope
jmp
bnd
repnz
sti
scas
mov
cmp
sub
xorb
xchg
cmpsw
mov
arpl
push
ret
sbb
jge
mov
leave
adc
call
adc
and
shlb
stos
mov
lock
sti
pop
hlt
pop
retw
push
xor
das
es
or
push
fcmovnu
lods
dec
sti
push
iret
jp
outsb
repz
idivl
xor
mov
inc
and
movb
mov
pushl
ret
lea
jae
bt
clc
cmp
pushf
lea
ja
mov
push
inc
setb
inc
bt
xchg
stc
aas
mov
or
mov
cmp
call
pusha
sub
lea
call
add
push
dec
in
jecxz
adc
in
in
fisubrl
xchg
iret
sub
mov
xchg
lret
dec
mov
out
in
outsl
lods
imul
or
sbb
dec
in
cmc
notl
in
add
dec
pop
jno
lea
mov
and
mov
inc
adc
fsts
lock
fistl
aas
es
es
xchg
cmp
xorl
pop
mov
xchg
mov
pushf
mov
mov
movzbw
mov
mov
movsbw
mov
movw
pushl
ret
push
call
cmc
les
xor
xor
inc
mov
sti
rcr
dec
cli
fcmovbe
out
push
rcll
test
stos
fists
xchg
pop
outsb
adc
push
lahf
lret
mov
movsb
popf
and
bound
aam
lea
lcall
das
mov
imull
sbb
fnstcw
jne
add
je
jp
pop
aad
out
adc
push
and
xor
sbb
cmp
and
add
mov
lret
inc
shrb
and
pop
and
adc
daa
push
addl
and
fprem
iret
push
xor
je
sbb
cmc
test
pop
aam
jns
sbb
sub
enter
cmc
dec
xchg
push
les
mov
add
sbb
dec
mov
ret
ret
sub
xchg
pushf
adc
loopne
dec
pop
mov
xor
jns
pop
lds
std
dec
mov
sbb
or
mov
rcrl
imulb
aam
pop
call
and
add
mov
dec
mov
dec
ja
pop
bound
arpl
lods
push
cmp
cmpsl
push
xchg
es
adc
sub
in
fst
cmc
pusha
rorl
popl
loopne
mov
mov
mov
dec
sahf
pop
inc
rcll
shll
mov
jo
fimuls
cmp
aas
fnstcw
add
dec
lahf
jae
push
xor
mov
jno
ret
sbb
pop
int
loope
lods
pop
xor
inc
xchg
jo
cltd
test
nop
int
add
mov
sub
push
xchg
xor
lods
data16
xor
mov
push
enter
jmp
enter
in
outsb
pop
in
mov
adc
push
mov
mov
les
mov
push
pop
out
inc
fwait
mov
jg
jp
jmp
cmpsb
sub
jecxz
sbb
sbb
aam
adc
les
orl
call
jl
int
iret
pop
hlt
dec
or
jbe
cli
inc
mov
je
inc
adc
int3
xchg
adc
test
mov
mov
into
add
mov
scas
mov
xchg
xorb
cmc
mov
loope
shlb
sahf
jns
push
fsubr
aam
loope
js
and
loop
pop
jae
outsb
out
and
adc
xchg
mov
pop
addr16
stos
aam
call
cmp
idivl
push
xchg
push
imul
jl
inc
fwait
mov
push
cmc
insb
enter
adc
call
jno
pop
loopne
shlb
push
xor
fstps
daa
and
iret
sbb
movlps
push
aas
push
pop
push
pop
or
movl
daa
add
bnd
and
fldz
push
fs
mov
mov
notl
jbe
ds
cltd
in
mov
jmp
xor
nop
lods
cmp
aas
xor
jo
and
stos
int
icebp
hlt
jge
cmpl
out
mov
cmp
ficoml
mov
test
sbbb
mov
popf
nop
mov
test
push
outsl
jle
dec
jnp
addr16
dec
dec
dec
ja
test
mov
aaa
pop
scas
xchg
test
cwtl
mov
sub
shlb
or
jbe
and
int3
add
jmp
adc
aad
mov
inc
sub
std
inc
jg
mov
movsl
movsb
inc
cmc
hlt
add
mov
stc
in
inc
loopne
lock
pop
enter
xor
leave
add
je
aam
repz
jns
fisttpl
add
sub
and
or
adc
cmpsb
mov
xchg
js
roll
dec
test
or
sahf
lret
fsubrp
insb
xor
mov
movl
inc
inc
xor
pop
mov
insl
scas
dec
pop
out
ret
outsb
inc
out
hlt
and
push
push
add
cmc
cli
mov
mov
sbb
popf
nop
iret
into
int
movsb
cwtl
sbbl
lret
in
cmp
stos
ds
add
sub
mov
pop
dec
jnp
cmc
and
jo
inc
insb
imul
jno
jns
insl
es
jne
jmp
push
insl
clc
and
je
pop
jecxz
and
adc
and
adc
pusha
xchg
pop
and
mov
cltd
scas
sub
lret
inc
dec
mov
cltd
es
or
mov
add
inc
call
push
dec
retw
orl
adc
shlb
push
aas
and
pop
sbb
jl
dec
aad
shrl
inc
jmp
into
push
shrb
adc
call
fnstcw
add
and
mov
add
push
call
fidivrl
sbb
cltd
ss
xlat
jmp
shl
out
jecxz
out
bnd
std
fs
sahf
popf
and
ret
dec
jno
sub
mov
jecxz
mov
mov
test
cmp
jne
les
pop
rol
fadd
pop
jmp
js
inc
icebp
xor
inc
push
call
push
pop
or
fmuls
xor
or
sub
xor
pushf
cmp
rcrb
jle
xor
test
lret
adcb
mov
shl
notl
decb
xor
and
mov
dec
dec
mov
hlt
inc
inc
jmp
stos
stc
lret
or
out
mov
push
out
mov
mov
repz
sub
xchg
sar
adcb
popf
and
clc
jge
inc
lock
push
call
dec
xor
adc
add
call
add
adc
jbe
int
add
test
clc
bt
jmp
push
call
cmp
rolb
add
aad
int
pop
add
insb
push
push
data16
jmp
pop
scas
pop
loop
out
lret
ret
sti
out
out
outsb
sti
and
xchg
stc
das
cmpb
aad
aad
lock
inc
add
push
xchg
fucomip
imul
push
jb
fcoml
cmpsl
out
mov
fstps
sbb
mov
push
or
xor
push
mov
sbb
insb
inc
pop
lds
add
pop
jecxz
jp
dec
lcall
inc
repz
iret
dec
xor
and
rcrb
call
pop
call
push
jp
xchg
out
lret
push
test
pop
gs
inc
push
pop
je
je
inc
jne
dec
push
fwait
jl
add
daa
sbb
sub
jg
jge
loopne
xchg
sub
dec
sub
push
sbbl
pop
gs
jne
dec
mov
add
out
adc
jne
cmc
leave
insb
aad
stc
dec
roll
in
aad
xor
test
aam
xchg
call
movsl
jg
out
into
lahf
mov
dec
lcall
mov
sahf
or
adc
inc
sarl
pop
and
lret
mull
mov
cmpsb
or
js
pop
cld
hlt
hlt
inc
ret
pop
lret
mov
movsb
mov
fucomip
xchg
cmp
dec
in
push
cld
insl
shrl
out
xchg
mov
and
pusha
popf
jp
add
or
mov
mov
test
mov
scas
outsl
std
mov
mov
lahf
cs
std
data16
sbb
sub
mov
fwait
lds
mov
fwait
add
jecxz
out
iret
jb
fsubr
xchg
mov
xchg
stos
fwait
es
jp
xor
call
lret
dec
fidivrl
inc
mov
orl
push
pushf
mov
pushl
push
pushl
ret
push
call
fdivs
add
sbb
call
inc
xor
btc
aaa
mov
clc
add
add
sub
call
dec
sbb
push
xchg
mov
push
pop
push
sub
adc
add
pop
xor
popa
cs
lcall
cmpsl
inc
mov
inc
xchg
js
imul
mov
arpl
xchg
repnz
push
xchg
out
into
jg
std
popf
pop
fistl
pop
cmp
sbb
push
dec
jae
dec
xchg
sarl
icebp
arpl
arpl
add
pop
cmp
cld
ror
push
enter
adc
xor
sbb
mov
mov
mov
shll
call
lret
inc
bt
test
call
push
call
mov
insl
jl
inc
pop
jl
pusha
push
rcl
clc
xchg
rcll
mov
or
xchg
and
aad
imul
fwait
pop
andb
add
adc
jb
pop
inc
sti
scas
inc
dec
stos
sahf
stos
fs
fadd
mov
addr16
push
ficoms
jae
inc
rol
dec
xchg
das
sub
cmpsl
fwait
mov
fs
xchg
dec
jb
rol
push
in
gs
push
call
fwait
cwtl
push
jmp
push
call
dec
inc
xor
sub
add
nop
mov
lcall
sarl
push
add
xchg
jae
mov
dec
enter
dec
les
or
xchg
out
popa
xor
int
adc
pop
sbb
add
lar
sub
leave
pop
icebp
cmp
out
xchg
mov
inc
push
jns
mov
shlb
clc
mov
or
mov
jne
dec
push
insb
dec
rorb
std
jnp
sti
jb
sub
insl
daa
gs
pop
stos
sbb
sbb
inc
mov
inc
xchg
lea
je
test
pusha
clc
cmp
pusha
jmp
movl
pushf
jmp
decb
mov
pop
jl
pusha
push
push
pop
js
jo
push
jmp
lcall
mov
ljmp
sbb
pusha
aad
and
mov
insb
daa
sbb
inc
or
scas
mov
mov
mov
or
iret
clc
dec
sbb
push
les
add
dec
xor
or
test
test
mov
add
inc
out
xor
cmp
sub
xor
jno
and
filds
cmpsl
push
dec
in
cmp
outsb
inc
test
cmp
sbb
jg
xchg
jg
mov
sahf
mov
lds
korw
pop
hlt
jno
inc
mov
scas
xchg
and
mov
outsl
std
scas
sti
out
shr
lret
cmc
popa
xchg
jg
in
dec
in
mov
mov
mov
rclb
or
adc
cltd
cmp
cmp
out
xlat
loop
cli
pop
bnd
dec
push
cli
inc
or
xor
das
mov
lahf
inc
mov
sbb
rolb
add
xlat
or
bound
add
repz
in
test
aad
repz
inc
adc
fs
nop
lods
mov
mov
test
xchg
jg
in
inc
xlat
insb
push
rcrl
jge
jecxz
fcmovbe
and
adc
xor
push
dec
sbbl
sbb
sbb
test
cmc
test
sahf
add
sbb
sub
mov
sti
out
not
test
push
mov
mov
sub
add
and
inc
mov
pop
xchg
jmp
push
call
int3
cwtl
pusha
push
call
outsb
push
call
fcom
shrl
mov
pop
fs
dec
pusha
jno
jge
jns
jge
cmc
je
inc
jl
push
jmp
cltd
movsb
cmp
adc
test
aad
inc
test
nop
sub
or
lcall
loope
pop
inc
push
ds
cmp
xor
sar
xchg
test
mov
xchg
mov
xchg
lahf
cs
xor
inc
push
and
cmp
jmp
bnd
ret
out
repnz
lret
rcrl
insb
rolb
rcrb
xchg
mov
jb
repnz
push
push
icebp
inc
vcvtsd2ss
ja
in
push
and
lock
ds
scas
push
mov
dec
cmp
jmp
mov
pop
cltd
sbb
je
and
fbld
mov
dec
pop
arpl
push
fsubp
imul
cli
jg
dec
repnz
fidivrs
inc
mov
add
inc
adc
pop
mov
push
sub
adc
xor
ucomiss
xor
or
mov
hlt
into
vandpd
mov
adc
sbb
std
cmp
cmpsb
pop
mov
imull
cmp
rcll
jnp
int
xlat
rcrl
stos
and
arpl
adc
push
push
in
sub
jmp
fists
pop
lret
outsb
push
inc
mov
sbb
dec
dec
pop
push
jae
pop
pop
out
pop
divl
jp
cmp
out
mov
leave
shrb
aas
sub
gs
fmuls
jns
inc
mov
mov
push
call
stos
push
call
cmc
in
jb
clc
stc
cmp
push
mov
call
insl
sbb
jp
icebp
clc
std
loopne
shl
shl
clc
fucom
dec
in
push
mov
cmc
inc
dec
je
shlb
shll
mov
xor
mov
loope
popa
dec
data16
pop
outsb
mov
outsl
jo
add
or
adc
sbb
dec
jb
push
repz
ja
jmp
push
sarb
jmp
dec
cwtl
rorb
mov
jle
add
daa
and
mov
lods
sub
scas
dec
lcall
lahf
sub
push
xor
sbb
aam
or
dec
push
add
add
fstpl
das
push
add
adc
inc
call
insl
jnp
fadd
push
call
mov
and
call
fwait
mov
test
not
push
pushf
lea
call
push
call
xchg
push
call
jae
mov
add
ret
sub
push
inc
add
push
call
inc
or
outsl
outsl
insb
gs
jne
xor
cs
insb
add
shlb
call
rcrl
lea
je
cmc
cmp
mov
cmc
clc
call
xchg
bnd
outsb
cmp
push
ljmp
repnz
dec
push
add
add
pop
scas
cltd
xor
dec
mov
mov
mov
jmp
out
js
pop
sub
stc
cmp
and
or
cmp
test
push
mov
sti
cmpsl
lcall
incl
jmp
stos
test
sbb
mov
adc
pop
shll
sbb
push
xchg
pop
data16
leave
clc
sarl
cs
lret
inc
pop
std
push
lds
icebp
dec
leave
inc
int
jmp
lea
lcall
push
cld
mov
pop
call
loope
push
call
cmp
rol
inc
incl
lahf
lea
pushf
setl
mov
pop
lea
jmp
adc
inc
aam
rcrb
push
cs
mov
xchg
sbb
push
inc
inc
jp
std
cmpsl
sbb
jb
data16
pop
cmp
pop
cmp
scas
jmp
fimull
push
and
mov
jb
stos
mov
adc
test
xchg
mov
jns
pusha
lods
test
mov
call
rcll
pushf
cmp
sub
in
mov
sub
cmp
push
xchg
xor
or
mov
enter
ret
fildl
jb
jp
jle
dec
xlat
xor
addr16
push
call
aad
dec
or
jmp
inc
pusha
dec
js
pop
gs
jno
insl
push
aad
cld
jns
fwait
jg
or
fildl
and
into
outsl
mov
jmp
xchg
pop
mov
lret
dec
rolb
inc
jg
ja
pop
cltd
xor
cmp
rol
das
xchg
inc
adc
inc
lret
sbb
mov
jns
dec
imul
adc
dec
jge
flds
fs
out
dec
mov
int
pop
movsl
lds
sub
pop
lcall
aam
lea
jne
pusha
mov
stos
pusha
lea
jmp
push
call
sahf
push
aas
int
and
push
iret
jmp
std
aam
call
aad
rol
push
adc
push
aam
mov
ficomps
out
int3
adc
sub
ja
out
test
cmp
inc
insl
mov
stc
mov
les
xor
mov
jp
out
in
es
sbb
leave
adc
cs
sbb
jne
int3
sub
add
nop
and
or
sub
and
sub
adc
vpunpckhbw
mov
jmp
push
call
jmp
xchg
hlt
and
jo
aam
repz
xchg
pop
inc
inc
jne
jns
popa
push
inc
jo
pop
fstpl
ret
test
test
xor
mov
mov
inc
icebp
gs
push
lahf
lret
stos
sbb
rcrb
shlb
shlb
cld
imul
shl
call
push
or
rclb
outsl
push
mov
lcall
cmp
ret
mov
mov
lods
mov
add
push
cmp
push
in
cmp
in
push
loopne
push
cmp
cmpb
and
sub
pop
flds
push
lods
pop
pop
pusha
inc
cld
jns
jne
inc
lock
aam
cld
jne
xor
out
add
icebp
push
call
punpckhbw
aad
xlat
call
iret
push
cld
cmp
shll
cmp
add
loopne
add
push
add
mov
cmp
and
leave
hlt
icebp
fadd
hlt
shr
lock
lds
mov
mov
lret
lcall
adc
lods
push
xchg
push
and
cmp
incb
adc
aad
mov
clc
insl
cmp
enter
lret
cld
dec
in
jns
add
dec
adcl
mov
lock
fmuls
iret
xor
in
loope
jmp
jo
dec
in
inc
scas
pop
mov
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
mov
cmpsl
js
ja
movsb
orl
cmpl
mov
mov
aam
mov
push
repz
jle
imull
fmuls
fcom
mov
or
mov
fnsave
cmp
daa
aad
test
ret
inc
and
leave
push
cmp
sub
scas
xorb
stos
xor
call
stos
push
notl
mov
mov
sahf
pop
mov
lcall
inc
lods
leave
sbb
xor
push
int3
push
push
mov
stos
scas
mov
mov
jno
sbb
fisubs
cmp
dec
add
jmp
dec
xchg
pop
mov
add
cmpsl
and
test
ret
mov
mov
loope
clc
push
mov
sub
stos
pop
jae
bound
out
or
add
add
popw
lcall
dec
dec
loop
adc
sub
cpuid
setle
mov
setp
mov
mov
shll
call
pop
repz
lea
call
push
pushf
jmp
push
call
mulb
nop
les
loopne
int3
movsb
pusha
mov
shl
mov
movsbl
bsf
pusha
shl
mov
cmc
mov
das
btc
daa
mov
movzbw
stc
mov
aas
mov
mov
btr
rcr
shl
mov
call
rcll
stos
sti
jno
mov
xchg
lcall
mov
das
mov
mov
cli
std
lea
xchg
mov
rol
std
repz
cli
cmp
sbb
push
out
subl
in
fsubl
xchg
out
adc
or
imul
inc
rcrb
inc
dec
mov
mov
cmpsl
in
aas
roll
xchg
jge
xor
push
enter
cld
jns
pop
cld
popa
xor
fcmovu
mov
cmp
jecxz
lret
mov
lret
into
pop
rorl
mov
hlt
xchg
stos
xchg
push
out
add
cmp
aam
jb
cmc
insb
cmp
cmpsl
repnz
leave
addr16
adc
adc
push
pop
mov
mov
cmc
sub
mov
cmp
pushf
nop
pop
nop
lds
aam
lods
daa
pop
repnz
sbb
mov
test
mov
dec
push
ja
ss
fs
mov
jg
or
inc
faddl
push
clc
dec
cld
jns
push
les
xor
pop
mov
enter
jmp
mov
dec
js
pop
jno
dec
pop
popa
push
rorl
adc
mov
je
stos
cltd
movsl
xor
jnp
rorl
sbbb
cmp
add
sbb
mov
adc
fs
inc
push
mov
add
cmpb
stos
push
mov
pminub
cmpsb
aam
stos
push
xorl
repz
or
jmp
imul
mov
sbb
das
xchg
mov
xchg
xor
pop
rorl
movl
btr
sar
shr
pushl
mov
cmc
sub
call
mov
pusha
pusha
pushf
lea
jmp
adc
dec
jle
arpl
push
sbb
movsl
cmc
les
shrl
xor
and
sbb
bndldx
and
push
jecxz
aas
clc
push
xor
aam
mov
loop
sub
out
and
xor
adc
or
mov
iret
pop
lea
cmpsb
imul
push
inc
mov
cmp
mov
shlb
add
test
and
cmp
xor
test
aad
mov
das
ds
lods
xchg
movsb
cmp
mov
xchg
inc
fs
insb
jns
jns
inc
fs
call
mov
inc
mov
xor
jae
add
xor
mov
aad
rorl
add
add
orb
loopne
cmp
pop
mov
popf
cmp
stos
mov
jbe
outsb
in
jge
idivb
jno
jge
mov
mov
popa
add
out
in
pusha
in
inc
xchg
push
mov
mov
cs
xchg
xor
fs
call
das
push
call
sbb
sbb
mov
dec
mov
jnp
dec
dec
jp
les
bound
lret
or
jno
mov
lea
bound
sarb
jo
jg
mov
adc
fisttpl
mov
mov
das
pop
addr16
cmp
inc
jg
xor
jnp
ror
lods
fsub
insl
pop
mov
jmp
and
xchg
push
imul
push
push
inc
imul
clc
jns
rolb
xor
ficoms
dec
jo
insb
pop
dec
inc
pusha
jge
pop
pusha
aad
shrb
or
hlt
jne
fldenv
jnp
push
aam
cmp
cmp
les
fcomps
lahf
pusha
int
xorl
rcll
repz
mov
jbe
adc
jl
pop
lcall
in
xor
push
cmp
pop
je
orl
fistl
or
add
push
pop
push
mov
and
push
stos
push
xorl
sbb
fwait
cmpsl
movzbw
mov
lea
movsbw
movzbw
mov
setne
lea
not
mov
movzbw
pusha
mov
jmp
dec
cmp
daa
mov
ret
les
out
lret
push
mov
mov
iret
shlb
jmp
add
insl
xor
cmp
cmp
jbe
adc
out
sub
sub
jmp
adc
pop
adc
pop
daa
stc
das
sbb
mov
aas
push
sub
fisttps
lock
stc
dec
popa
test
movsl
cltd
or
add
or
xor
sahf
inc
jp
call
stc
loopne
clc
dec
clc
jne
ret
inc
mov
xchg
cs
aam
inc
insb
stos
xchg
sub
daa
or
scas
push
stos
cmp
push
sbb
dec
push
clc
imull
test
outsb
ret
push
add
stos
or
mov
cmp
loopne
std
lahf
lds
jp
loopne
loop
popl
pop
outsb
xchg
add
dec
pop
jns
stc
loopne
shr
aad
adc
out
out
mul
js
stos
push
mov
leave
cmc
insb
cwtl
in
mov
adc
jmp
roll
push
out
iret
dec
xlat
push
xor
aam
push
mov
push
imul
push
ret
les
xchg
cwtl
in
lea
mov
inc
loope
aad
cli
inc
mov
cld
pop
or
cmp
iret
lock
lock
in
pop
fdivs
repz
dec
ret
ficoml
mov
scas
stos
das
mov
sysexit
inc
cmpsb
pusha
test
adc
mov
add
or
mov
shl
lock
fdiv
fadd
rclb
fistpl
jo
add
or
cwtl
add
out
scas
aas
add
push
pop
bound
xchg
std
jl
pop
pushf
int3
aaa
aas
cmp
or
push
leave
adcb
mov
jmp
pop
nop
mov
aas
push
mov
or
pop
mov
daa
xchg
mov
cmc
cmp
push
cmp
imul
cli
dec
rorb
push
dec
ret
inc
movsb
jmp
sub
cmpsl
es
rcrb
iret
dec
xlat
xlat
ljmp
iret
fsubs
and
xchg
repz
out
push
push
pop
add
fisubl
pop
pushf
cmp
or
fisttps
das
test
or
int3
inc
test
pop
pop
push
sub
bts
test
xor
dec
rcrl
stos
lods
ret
pushf
leave
int3
popa
clc
push
lods
sub
call
dec
je
enter
fdivrs
inc
call
xor
jne
ja
jg
into
stos
scas
cmp
popa
dec
push
je
jo
push
insl
in
pop
imul
and
sub
cmp
rcrl
sub
test
data16
testl
xor
mov
rclb
idiv
arpl
push
push
out
mov
xorw
iret
bsr
out
cmp
push
dec
adc
int
arpl
pop
iret
lcall
cmpsl
loopne
push
scas
push
dec
sub
movsl
sbb
add
xor
sbb
add
adc
subb
add
jmp
out
fnclex
fldt
sub
mov
jb
jns
sub
mov
xchg
push
ret
mov
stos
push
dec
inc
and
sbb
shrl
sbb
pop
jnp
dec
push
add
jbe
ja
ja
xor
dec
push
dec
dec
sbb
fstpt
xor
sahf
xor
sub
cmp
inc
mov
add
cmp
call
lret
lods
mov
add
xor
sbb
adc
aas
sub
ss
xor
fisubrs
int
or
push
inc
pusha
inc
adc
ret
ret
lret
fwait
add
mov
sbb
sub
and
test
push
das
jno
mov
jbe
push
out
mov
hlt
or
xchg
fsubrp
adc
jle
mov
jnp
fmull
push
cmc
push
sar
push
int
mov
scas
and
cmp
xor
adc
sarl
call
arpl
xchg
mov
cld
pusha
mov
dec
bound
outsl
jle
jbe
jle
push
sbb
cld
or
out
inc
enter
and
mov
clc
lea
xchg
pop
lods
sub
cmp
sbb
loop
pop
bound
xchg
xor
fisttps
imul
dec
jmp
pop
mov
sbbb
dec
out
mov
dec
int3
rorl
sbb
mov
sbb
sub
cmp
scas
ss
mov
xor
mov
inc
cmp
incl
nop
dec
add
nop
dec
add
inc
dec
add
push
add
imul
add
add
fs
je
stc
cmc
test
jmp
push
call
rcrl
jp
call
inc
push
call
cmp
aad
sbb
xor
push
and
xor
add
aaa
xor
mov
pop
mov
pop
xor
lahf
pusha
movsb
icebp
push
outsb
out
fnstenv
arpl
jb
cmpsb
jo
jno
pop
jae
lahf
mov
sub
dec
or
call
aas
xchg
mov
outsb
aas
sahf
out
ret
or
mov
mov
xor
adc
xor
test
aam
shr
mov
add
push
call
dec
and
xchg
or
dec
shrb
jge
push
inc
jno
imul
je
loop
sub
jmp
jmp
jbe
and
inc
or
pop
std
mov
lahf
imul
dec
cltd
adc
shll
mov
sbb
adc
push
xor
xchg
push
popa
or
push
out
push
add
jns
push
fwait
mov
xor
add
push
mov
addl
cmp
je
add
xor
call
icebp
fwait
pop
int
pop
pusha
lea
ja
add
pushf
sub
add
sub
rcr
cmp
mov
mov
call
push
call
xlat
pop
xchg
out
hlt
movsl
pushf
mov
add
leave
pop
mov
arpl
outsb
pop
dec
push
lahf
imul
jle
pop
mov
fwait
mov
scas
xchg
and
lret
ds
add
mov
fwait
pop
jg
adc
leave
mov
aad
fsubp
iret
xor
dec
cmc
insb
lods
sub
mov
cmc
rclb
sub
mov
add
dec
dec
mov
test
and
jnp
mov
adc
andl
xchg
and
xor
sbb
ret
jmp
pop
or
mov
pushf
fimull
rcr
aad
loope
icebp
in
mov
xor
jge
mov
mov
hlt
or
mov
cmpsb
cwtl
pmaxsw
fdivl
pusha
in
push
fisubrs
aas
retw
cld
fstl
xor
fsubrp
dec
mov
ljmp
and
xor
push
sahf
inc
fbstp
movsl
add
add
dec
pop
leave
fs
cmc
lcall
int3
gs
dec
shlb
inc
cld
inc
xor
rcll
xchg
outsb
div
iret
cli
sti
repnz
ret
repnz
out
ret
pop
lret
pop
into
enter
adc
dec
out
and
gs
iret
scas
outsl
jmp
xorb
arpl
mov
add
push
mov
hlt
xchg
pop
iret
scas
sbb
cli
pop
fs
add
mov
push
int3
dec
int3
cltd
mov
pop
pusha
dec
je
pop
cmpsl
sti
icebp
nop
mov
rorb
dec
cli
outsl
loop
ljmp
mov
int3
flds
or
push
into
xchg
cmp
daa
ret
out
out
cli
int
hlt
ret
dec
sbb
hlt
xor
push
fsubs
dec
or
popa
scas
mov
mov
mov
inc
enter
or
ljmp
les
cmp
aam
scas
cmp
pop
xchg
cmp
aaa
das
call
add
push
rol
icebp
inc
fcompl
jl
sbb
push
mov
cmp
xchg
pop
adc
lods
lock
push
push
ja
inc
jp
rorb
pop
ds
mov
clc
dec
fwait
sahf
or
cmp
sbb
sbb
daa
adc
stc
das
push
pop
ucomiss
sub
push
pop
and
insl
movsb
pusha
out
test
ljmp
test
fsubrs
jo
aaa
lret
jecxz
inc
add
sbb
push
xchg
mulb
add
cmpsb
popf
mov
xor
out
mov
jmp
pop
sub
inc
loopne
jge
or
fs
pop
add
inc
fdivrs
sub
push
addr16
out
das
mov
cmp
aaa
scas
or
aas
scas
pop
xchg
daa
mov
inc
popf
and
cld
pusha
lea
ja
shl
add
bswap
not
shr
rcl
shrd
mov
and
add
pusha
not
neg
mov
lea
cmp
test
pushf
cmpsb
push
pusha
pushl
lea
ja
push
mov
lea
jb
jmp
sub
cmp
cmp
pusha
pusha
movb
jmp
cwtl
cmp
pop
scas
or
xchg
mov
dec
cwtl
test
pushf
mov
and
jg
fsubrl
cmpsb
in
fisubl
daa
adc
and
sti
xchg
pushf
pop
fwait
mov
les
hlt
lret
inc
lock
outsl
rorl
fdiv
aam
push
das
adc
fsub
in
jnp
adc
sbb
mov
mov
inc
jmp
jmp
xlat
outsb
jecxz
fistpll
jle
jbe
inc
fwait
call
aad
inc
call
dec
stc
push
call
mov
stc
pushf
neg
movb
setno
dec
pusha
rcr
stc
rol
not
call
push
call
xor
test
pop
nop
pop
jp
push
jb
bound
push
jle
divb
int
in
inc
inc
jnp
repz
and
repz
bound
jne
out
mov
loopne
mov
add
cmpsl
repnz
or
fwait
dec
mov
mov
loopne
jnp
cmp
push
mov
mov
jb
mov
sub
aam
push
outsb
jae
repz
leave
js
sbb
mov
mov
fwait
es
lahf
cs
subl
pop
push
call
push
test
ret
mov
call
and
popa
hlt
test
xlat
add
adc
and
xor
and
sbb
and
stos
xor
enter
jns
loopne
loop
cli
jge
daa
insb
inc
orl
ret
pushl
lret
xor
inc
fstps
sahf
pop
pushw
je
push
cld
repz
lock
shr
xor
sbb
stc
jo
insb
xor
call
mov
sub
sti
jp
test
sbb
cmp
and
jae
add
xor
call
adc
int
rorl
test
popa
fs
jno
jge
imul
int3
push
std
lea
and
call
je
rcll
scas
sbb
xchg
shl
insl
cmp
test
xor
add
jmp
nop
shrl
jmp
call
les
adc
pop
fstpt
inc
sbb
add
dec
ss
cmpl
arpl
lods
adc
xor
cli
pusha
movw
movb
lea
jne
cmp
popf
pushf
movw
pushf
lea
jmp
push
call
mov
pop
push
call
mov
adc
fsubr
std
ss
jp
add
bound
add
sahf
out
out
into
jnp
jmp
pushf
dec
fwait
mov
xchg
fwait
xchg
mov
addr16
jne
cmp
lret
cmc
fwait
push
enter
in
imul
imul
push
std
and
mov
push
insb
fldenv
push
jle
pop
pusha
aad
movaps
in
cwtl
movsb
adc
out
xor
push
das
sbb
mov
mov
inc
pop
dec
out
push
or
cmp
sbb
and
mov
int
call
in
inc
into
push
call
pusha
sub
jno
sbb
mov
insl
and
sbb
and
or
xor
cmp
rcrl
inc
loopne
addl
test
in
jno
sub
aam
pop
and
push
movsw
add
push
cmp
push
xor
xchg
mov
inc
outsl
xor
jmp
add
loopne
push
leave
pushf
cmpl
cmc
inc
std
jmp
fwait
out
cmpsl
fwait
mov
mov
sahf
aas
mov
xchg
sbb
inc
cltd
xchg
dec
jae
add
or
add
scas
scas
xchg
push
cmp
jae
inc
pop
inc
dec
arpl
bound
jmp
lock
dec
test
fsub
gs
jb
cld
dec
add
int3
jmp
xor
xor
ret
clc
pop
es
xor
mov
jne
shlb
stos
jge
pop
push
fldt
out
adc
in
pop
stos
sub
push
sbb
sbb
pop
stos
xor
fstpt
lock
hlt
xchg
cmc
hlt
enter
rcr
fdivr
enter
inc
in
xchg
dec
dec
aas
xchg
add
arpl
jp
jo
sub
lods
lcall
iret
mov
xlat
cmp
bound
mov
adc
jne
push
out
pop
inc
xor
jnp
xor
jo
mull
add
int3
cmc
ret
mov
bound
outsb
bound
push
mov
mov
inc
mov
sahf
out
push
jl
mov
ss
decb
rcrl
push
mull
push
xor
xchg
pushl
pushf
jmp
push
call
repnz
ljmp
aad
adc
xchg
pop
add
adc
mov
in
js
dec
pop
jns
jge
jge
push
push
gs
dec
jp
or
adc
call
and
addr16
pop
mov
push
lock
pop
rorl
mov
xchg
pop
push
iret
push
xor
cmp
cmp
push
cmc
push
push
cmp
dec
or
data16
dec
lcall
xchg
adc
add
push
sahf
mov
push
xchg
cmp
sub
inc
xchg
cwtl
dec
jo
popf
push
call
and
cmp
and
add
lea
je
jmp
xor
dec
jns
mov
stos
xchg
lcall
mov
scas
lcall
icebp
add
xor
test
dec
mov
jns
push
push
xor
dec
stos
adc
popf
cmpsb
lcall
sbb
cmc
test
cltd
or
add
ret
rcll
inc
cmpsb
mov
shrl
lods
test
repz
lahf
ret
dec
xchg
ss
jo
dec
loope
roll
pop
in
xor
lret
clc
add
pusha
pushf
lea
jne
not
pushfw
or
mov
rol
mov
push
neg
pusha
mov
movb
call
mov
lea
jne
call
fisttps
sub
dec
push
xchg
scas
xchg
fwait
mov
int
sub
mov
or
xor
cltd
loope
mov
aad
stc
sar
fldcw
shll
and
add
pop
push
mov
push
push
pop
sahf
mov
mov
push
add
outsb
rcrl
push
mov
sti
xor
mov
pop
movsl
test
int
icebp
pop
in
insb
jmp
dec
in
inc
xchg
lret
push
call
jne
push
call
or
xor
mov
ljmp
sti
out
shr
out
ljmp
dec
les
xchg
add
inc
dec
inc
xchg
inc
xor
je
jae
mov
rcrb
mov
int
xchg
cmp
push
lahf
push
sbbb
std
shll
mov
rorb
clc
cs
or
cmp
mov
les
add
and
xor
xchg
push
outsb
push
call
push
inc
fcmove
lret
lahf
push
cmc
repnz
adc
push
or
and
daa
push
cmp
sub
pop
ds
sub
and
aaa
mov
pop
lahf
sub
mov
dec
pusha
leave
jecxz
test
scas
or
mov
aad
xlat
pop
add
ficomps
cs
and
jae
movsl
sbb
xor
iret
xor
and
cmpsl
testb
jle
rorb
outsb
xchg
push
rcrb
push
stos
or
lds
nop
lods
mov
sbb
and
lret
push
call
std
push
cmp
test
sbb
movsb
xchg
mov
andl
repnz
sub
leave
lret
negl
xchg
ljmp
push
pop
int3
lret
fs
fstpt
test
inc
jecxz
int3
or
lahf
mov
adc
add
adc
out
mov
ficomps
cltd
or
cmp
xor
divb
shr
fsubs
sahf
pop
jg
and
jmp
es
rorl
xchg
push
xchg
lods
clc
jmp
push
call
xchg
rcrl
sbb
xor
or
add
sbb
push
daa
adc
mov
std
mov
scas
stos
testl
fiaddl
scas
add
testl
das
addr16
xchg
fistpl
or
cmp
fstpl
leave
fldcw
icebp
movsb
lods
lcall
sbb
adc
sub
test
fs
and
add
mov
movsl
mov
add
mov
pop
jno
frstor
icebp
jl
dec
in
pop
fisttpll
inc
xchg
arpl
and
push
call
mov
mov
ss
adc
ja
addr16
pop
inc
push
pop
dec
repnz
pop
in
aaa
cmp
call
leave
cmc
je
test
out
stos
mov
in
push
arpl
mov
lods
lcall
je
rolb
push
push
xchg
fisubl
xchg
cmp
test
adc
bnd
mov
stc
fs
movsb
scas
mov
loopne
ret
pop
ret
divl
jp
inc
sti
jbe
pop
xor
fsubrs
sarl
call
int3
inc
test
filds
adc
call
push
call
nop
push
call
mov
rcrb
call
pop
mov
pusha
push
pushl
lea
jmp
push
call
mov
cmpb
pusha
lea
jae
jne
dec
neg
xor
aad
mov
shl
xor
add
shl
mov
cmc
test
pushf
lea
je
jmp
inc
adc
pushf
pop
add
sub
push
sbb
pop
and
mov
jbe
pop
mov
out
and
sub
outsl
test
daa
sub
jmp
dec
lock
pop
cwtl
jnp,pt
aad
xchg
ret
cltd
roll
movsl
xor
je
pop
dec
stc
dec
call
push
es
iret
movsl
or
jbe
jg
daa
push
imul
daa
mov
dec
clc
jne
pmaddwd
mov
mov
in
dec
out
fidivl
sbb
xor
sub
or
adc
push
xor
fwait
mov
mov
xchg
add
xor
mov
pop
dec
fistpl
sub
push
mov
je
cli
pop
imul
mov
jle
mov
push
test
xor
mov
es
push
jbe
add
ja
jp
out
imul
sbb
mov
leave
mov
das
mov
aas
mov
cmp
scas
in
mov
insb
mov
mov
pushf
mov
adc
pop
test
fldz
dec
sbb
mov
idivl
cmpsb
lcall
lahf
scas
push
loop
ja
or
mov
lock
push
jg
or
dec
pop
or
jg
lock
clc
inc
sbb
pop
nop
adc
mov
adc
clc
imul
push
fwait
or
cmp
adc
sbb
adc
pop
cmp
cvtpi2ps
ds
push
pop
sub
add
xchg
daa
insb
in
rclb
outsl
mov
int
mov
sub
shll
jbe
xchg
cltd
sub
xorb
std
sub
ja
or
push
xchg
pop
mov
push
cltd
pop
sar
cmp
push
cmpsl
xor
faddp
jp
xchg
popa
call
pop
arpl
lods
sub
ljmp
cld
sub
lea
sbb
xor
mov
insb
pop
lahf
sbb
lock
add
xor
fisubrs
aad
inc
call
jno
mov
lret
shll
imulb
add
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
aad
movsl
call
mov
jnp
xor
push
cmp
add
pop
adc
add
or
cs
inc
pushf
and
or
push
or
pop
adc
adc
cmp
add
xchg
jle
dec
xor
mov
lock
rcrb
les
jne
pop
hlt
xor
mov
add
sub
call
jmp
cmp
and
cli
out
cmp
add
or
or
add
mov
cmp
out
lahf
xchg
mov
xor
std
dec
call
or
mov
push
mov
and
pusha
pop
std
mov
inc
push
xor
cli
fldcw
xor
xor
pushf
dec
jge
rolb
stos
cld
pop
mov
add
repnz
out
outsl
ret
pop
add
cmp
add
xor
out
cmp
pop
dec
dec
xchg
xchg
fcompl
shr
loopne
clc
in
in
es
std
cmp
pop
lds
dec
jbe
mov
sbb
pop
iret
lcall
jb
lea
adc
push
sub
jb
inc
pop
es
imul
sbb
xchg
cmp
dec
dec
add
sahf
add
stos
push
jb
sahf
mov
je
ljmp
adcb
enter
enter
shlb
add
jg
xchg
add
lds
and
aaa
push
aas
or
add
push
mov
dec
sub
imul
pop
push
sub
sbb
movl
inc
divl
scas
out
pop
into
push
mov
push
aas
mov
xchg
dec
je
ficompl
ja
push
imul
ret
rcl
push
xlat
mov
movsb
jo
clc
pop
clc
gs
hlt
inc
aam
call
jmp
sub
add
add
les
mov
add
adc
das
das
bswap
mov
pusha
neg
sub
shr
test
bt
cmc
push
movsbw
stc
push
shr
daa
sub
lahf
lea
pusha
call
push
call
push
add
mov
mov
inc
pop
jle
jp
jb
data16
ja
arpl
nop
jno
or
cmp
js
sub
xlat
insb
push
aad
or
arpl
xor
sbb
xchg
cmp
lcall
xor
mov
bswap
fdivrs
jg
rcll
and
loopne
xor
imul
push
mov
mov
mov
aaa
shl
cmp
sub
daa
push
cmpsl
and
ds
jmp
data16
outsb
ret
dec
fistl
outsb
lret
push
out
xor
or
pushf
movl
call
movl
pushl
lea
ja
bt
imul
pusha
push
add
pushf
movb
movb
movb
lea
jmp
push
call
jecxz
stos
cs
call
icebp
dec
arpl
xor
call
leave
pop
push
call
push
call
push
sbb
roll
orb
movsl
addr16
sbb
sahf
mov
or
or
add
js
cli
adc
cmpsb
lcall
test
fdivl
dec
inc
scas
shll
and
and
push
adc
sub
pop
pop
adc
xchg
loopne
in
dec
popfw
das
sub
lret
mov
sahf
daa
sahf
or
das
sahf
pop
xchg
xor
dec
pop
push
movhps
sbb
loop
loop
cmp
jg
es
and
push
pop
inc
mov
and
jb
inc
scas
dec
aam
test
popf
mov
mov
outsb
and
dec
adcb
ja
aad
aad
pop
cmp
xor
sbb
hlt
xchg
inc
jne
jecxz
stos
pop
cmp
in
cmc
push
in
mov
push
sti
sub
mov
push
addr16
out
negb
pop
fidivrl
inc
mov
pop
enter
and
ja
call
push
call
stos
push
call
faddl
and
mov
adc
ljmp
jle
cmpsb
out
push
xor
cwtl
dec
mov
ss
inc
xchg
out
dec
rcll
cs
test
aaa
xor
push
daa
adc
cs
dec
loopne
test
mov
lods
mov
dec
sti
daa
lea
dec
int3
cltd
ret
scas
subb
mov
addr16
mov
xchg
mov
mov
js
fildl
sbb
adc
xor
add
mov
test
das
mov
jp
add
and
aas
sahf
test
jp
adc
add
mov
cmpsb
mov
lcall
dec
inc
out
fwait
cmpsl
stos
movnti
popf
mov
das
and
xchg
fcomip
xchg
lods
sub
aas
pop
dec
inc
xor
dec
leave
insl
mov
sar
jl
push
outsb
mov
jne
cmp
sub
xlat
sub
xchg
push
lcall
fstpl
add
leave
cld
sarl
dec
push
pusha
mov
pop
clc
pop
int3
push
call
xor
sbb
popf
call
dec
inc
xor
lret
push
outsl
push
jb
outsb
pop
inc
pop
jp
inc
arpl
dec
pop
icebp
mov
pop
out
xchg
shrb
in
cli
sarl
xchg
pushf
xor
sti
jbe
rclb
fmul
or
hlt
xor
push
ret
sbb
jmp
push
adc
cltd
mov
in
scas
mov
shlb
aam
int
or
push
push
ud2
aaa
xchg
sahf
aas
scas
xor
add
jo
mov
test
call
fdivrp
incb
jae
jp
inc
xchg
mov
test
mov
mov
int3
sar
push
add
or
or
das
call
pop
adc
mov
pop
out
push
mov
cmp
push
xchg
lahf
ss
mov
adc
jbe
xor
pop
adc
xchg
mov
inc
xor
cmp
adc
jnp
add
in
pop
roll
test
cmpsb
or
xchg
sti
sub
jmp
movsl
sbb
push
nop
push
das
sub
xor
xchg
orl
dec
loope
or
xchg
pop
aam
inc
xlat
fisubrl
adc
dec
movsl
mov
jmp
ret
hlt
jge
jno
and
lret
xor
setp
in
mov
fmull
inc
les
popa
les
popa
rclb
inc
xchg
fucom
rolb
push
xor
jle
push
dec
jle
inc
inc
bound
addr16
pop
fisttpll
lods
stc
or
lret
pushf
cmpsb
push
sbb
xchg
xchg
fidivl
dec
jno
xlat
std
cmp
lahf
lcall
arpl
cmp
pushf
mov
andb
in
addr16
scas
mov
mov
psllq
pop
inc
test
jbe
push
jb
push
repnz
jns
sub
mov
or
das
xor
outsl
shr
pushf
cmp
pusha
call
lea
je
call
push
call
hlt
int
mov
push
loope
int3
dec
into
sbb
pop
add
pop
push
cmp
add
pop
and
dec
xchg
into
and
and
pop
pop
imul
push
push
or
mov
cmp
add
inc
xchg
sub
adc
rorb
stc
inc
adc
mov
imul
test
xchg
sub
test
into
ja
add
aad
leave
pop
jmp
add
xchg
or
mov
add
sub
rorb
adc
jp
pop
and
jns
pushf
push
call
call
stc
add
push
pop
jbe
inc
addr16
push
insb
int
mov
js
inc
addb
or
hlt
in
rcr
lods
scas
or
out
xor
pop
fldt
dec
inc
out
inc
or
add
in
and
sbb
stos
addb
test
pushf
outsb
pop
sub
and
or
add
cmp
lods
mov
fnsave
xor
sbb
xor
movsl
push
call
fdivrl
out
hlt
dec
jmp
sti
jle
pop
icebp
lahf
dec
pushf
mov
mov
or
cmp
sbb
ljmp
pop
sbb
or
sbb
imul
sahf
push
scas
insb
mov
out
jae
add
int
rdpmc
cs
jnp
faddl
inc
test
stos
or
inc
rclb
out
in
shl
lods
xor
jmp
xchg
cltd
dec
jl
mov
stos
sub
and
mov
cltd
sbb
cmp
inc
test
aad
aas
call
cld
push
call
outsl
inc
loope
in
fs
xchg
pop
xchg
mov
xchg
mov
scas
cmp
addl
cmpsb
clc
js
inc
cld
rcrb
fldl
adc
int
sti
andl
adcl
bnd
out
mov
arpl
adc
mov
hlt
enter
mov
mov
orl
sahf
mov
add
adc
mov
jg
out
lret
push
dec
adc
push
adc
aas
add
adc
pop
add
or
push
jl
cmp
xchg
es
push
inc
jb
adc
jb
fcomps
mov
notb
repz
fcoms
inc
test
shll
lcall
xchg
inc
insb
ret
xchg
and
and
nop
cli
mov
movsl
adc
xor
xor
mov
cmp
cmp
mov
jmp
fs
dec
jmp
push
inc
cmpl
push
call
xchg
mov
ljmp
aam
outsb
call
sahf
push
fcomip
mov
adc
cmp
adc
push
sub
daa
sub
or
xorb
fs
std
sarl
mov
pop
jne
inc
in
outsl
cmp
ss
cmpb
dec
sarb
inc
cmpsl
sbb
movsb
lods
xor
scas
cmp
mov
rol
mov
inc
push
out
adc
mov
fs
inc
sbb
sahf
cmpsl
sahf
aaa
lcall
aam
jp
into
divb
pop
jbe
adc
sub
mov
mov
xor
inc
push
call
int3
stos
lcall
adc
cmp
pop
add
sbb
adc
addl
xchg
fbstp
adc
jecxz
loop
fbstp
xor
jne
cltd
jne
push
jbe
lret
xor
out
ljmp
aaa
or
mov
mov
xchg
inc
movsbl
out
dec
out
mov
std
icebp
inc
icebp
sub
repz
imul
jg
ja
inc
ret
inc
sbb
les
add
pop
shl
addr16
rorl
pop
xor
loope
loope
test
les
pop
out
mov
enter
int3
or
sub
es
and
sti
ror
out
jmp
ret
cli
neg
repz
iret
fdivrs
mov
pop
leave
insb
pop
inc
testl
outsl
adc
jo
sub
inc
jge
cli
dec
jmp
dec
ficomps
outsb
push
out
dec
sbb
js
sahf
sahf
mov
pop
sahf
xor
aaa
xor
jg
repnz
push
negl
push
les
repz
ret
fcmove
loop
repnz
xchg
fistpl
mov
ljmp
push
cmpsl
in
loope
or
xchg
fists
mov
decl
pop
mov
xlat
jg
mov
xchg
bnd
mov
mov
sbb
or
sub
frndint
pop
int3
cltd
insl
fsubs
dec
cmc
js
inc
icebp
dec
fstpl
je
inc
sub
jbe
jb
imul
add
mov
mov
jmp
mov
clc
cmp
cmpb
push
mov
push
lea
jne
call
push
call
dec
stc
dec
outsl
pop
push
jb
push
leave
aam
loopne
call
in
hlt
in
stc
insl
clc
push
sti
inc
push
es
insb
xlat
jmp
jne
jne
iret
lcall
jmp
inc
push
popa
mov
adc
js
mov
cmpsl
jns
dec
add
sbb
jge
in
cltd
movsl
xor
add
push
pop
mov
pop
jns
movsl
dec
push
fdivrl
aam
push
mov
cmc
push
shrl
dec
loope
fnstsw
cmc
inc
flds
jg
ljmp
call
je
jmp
dec
sbb
xor
ja
aaa
mov
loop
out
loop
out
iret
sarb
jmp
or
arpl
stos
jae
into
frndint
fnstcw
jno
xchg
or
inc
loopne
dec
subb
xchg
push
imul
fistps
cmpsl
push
xchg
jecxz
lds
and
add
cmp
and
rcl
jg
outsb
mov
or
aam
in
pop
shlb
bound
sarb
call
push
inc
gs
push
dec
outsb
outsw
add
cmp
rcrb
repz
out
dec
outsl
lret
enter
jp
fistps
inc
sbb
sub
jno
out
cmpsb
add
pop
sub
inc
jg
add
mov
mov
jno
jp
and
cmc
jge
dec
xchg
outsb
cli
dec
lahf
push
mov
cmp
leave
cmc
push
add
jb
jns
movsl
cmp
pmaddwd
mov
iret
out
lret
sbb
aaa
cs
add
push
mov
mov
jg
add
push
call
pop
repz
dec
push
push
jb
outsb
jnp
arpl
fs
int
mov
dec
jp
outsl
mov
and
flds
cmp
jb
fisubrs
inc
adc
ds
mov
int
movsb
jmp
xchg
mov
mov
mov
cmp
and
cmp
jle
mov
push
call
ja
push
and
pop
sahf
mov
mov
ljmp
xor
add
mov
decb
pop
xchg
cmpsb
aas
push
arpl
cltd
pop
ret
dec
or
aas
lock
pop
lahf
pop
xor
mov
imul
in
je
pop
shr
xchg
cmpsb
arpl
push
xchg
sub
cmp
push
cltd
mov
xchg
mov
pop
or
jnp
sti
push
btr
mov
lahf
push
cmpsl
xchg
lahf
es
jge
cld
xor
daa
scas
call
lret
cmpsb
ror
loop
out
jecxz
lret
cli
jae
mov
push
inc
loop
add
cmp
mov
push
and
xchg
aas
mov
xor
or
inc
add
push
imul
insb
insb
outsl
arpl
push
call
daa
dec
mov
fsubrs
mov
bt
stc
cmpb
call
movw
call
mov
xlat
ficoml
jns
sub
cmp
cmp
or
mov
mov
and
and
cltd
adc
mov
and
sub
aad
test
sub
repnz
out
es
lret
mull
or
mov
add
mov
push
cwtl
in
sarl
dec
lret
ror
dec
lret
cmp
xor
in
pop
dec
sbbl
enter
aam
hlt
imul
imul
roll
sbb
aaa
push
movlps
sahf
test
mov
das
arpl
enter
out
cmpsb
mov
orb
sub
mov
xchg
test
fisubrs
xchg
inc
jle
loopne
or
push
outsl
push
repnz
dec
sbb
jg
xchg
xchg
lahf
or
and
mov
je
push
pushf
mov
push
ret
outsl
out
ret
pop
repnz
fidivs
mov
adc
mov
scas
adc
add
loop
jecxz
out
jmp
xlat
jle
jle
add
addb
in
push
stc
pop
aad
leave
fisubs
ret
push
inc
xchg
aas
push
xor
dec
adc
test
cwtl
add
sub
outsl
std
jbe
les
ss
push
cvtpi2ps
xchg
orl
adc
jb
xor
cmp
add
and
enter
push
leave
add
mov
sub
mov
cltd
cmp
xor
or
lretw
outsb
mov
addr16
cli
imul
aaa
sbb
adc
pop
lds
aad
jmp
xor
jle
add
jmp
call
jae
mov
add
and
call
stos
insb
cwtl
divps
xlat
stos
cli
iret
inc
test
jg
ja
inc
push
les
xor
fsts
adc
mov
or
cmp
pop
mov
cli
xchg
xchg
sbb
loop
shrl
push
rclb
mov
inc
jmp
aaa
testb
sbb
mov
loopne
dec
pop
insb
rcrl
test
in
std
add
popf
cmp
jecxz
jns
cmp
in
rol
push
rcrl
dec
sub
dec
sahf
xchg
fwait
cmpsl
es
push
mov
cmpsl
and
enter
mov
jmp
push
call
dec
sysexit
push
call
mov
ds
mov
in
mov
fcoms
adc
xor
sub
sub
and
mov
xor
add
jb
data16
mov
addr16
scas
ret
add
xchg
movsl
es
dec
inc
mov
sub
jmp
jno
push
sub
movsb
outsl
push
into
loope
mov
cli
outsb
push
inc
or
enter
stos
cmp
fcmovnbe
pop
ret
stc
xchg
fnstsw
dec
int
rorl
icebp
js
xor
cmc
aad
movsl
pushf
or
sbb
xchg
xchg
xchg
movsl
xor
inc
mov
scas
orl
adc
mov
lods
xchg
mov
xchg
outsl
pop
lcall
stc
xchg
js
inc
ds
pop
add
or
das
mov
ljmp
sbb
cld
mov
shr
fisttpl
xlat
jle
lcall
popf
mov
push
fcomps
imul
out
fimuls
imul
cli
dec
into
xor
push
push
mov
mov
xor
push
xchg
inc
push
insl
pop
gs
pusha
icebp
je
ljmp
out
data16
stos
mov
jbe,pt
mov
test
jecxz
leave
cmc
xor
xor
sub
jno
or
insb
sbb
pop
cli
sbb
sub
cmp
mov
popa
popf
jl
fldenv
ret
icebp
int
int
lds
pop
lds
pusha
shll
ljmp
hlt
call
shrb
test
jmp
push
call
je
mov
adc
call
dec
sub
aam
pop
call
push
loop
mov
or
or
lar
xor
xor
dec
push
clc
mov
cmovno
ret
ret
sub
pop
push
mov
fnstenv
pop
int3
popa
mov
add
or
jle
or
or
mov
cmp
shrb
or
add
stc
movb
pushf
jmp
or
jle
mov
mov
pop
dec
jns
dec
push
daa
cmpsb
mov
pop
xchg
push
loopne
inc
movsl
ret
pop
xchg
repnz
movsb
mov
xor
outsb
push
and
jp
aaa
cmpl
fsub
popa
loopne
ss
icebp
pop
stos
lcall
ficompl
dec
adc
repnz
sti
cmp
imul
pop
xchg
and
xor
xchg
jne
mov
adc
adc
lds
and
int3
icebp
inc
mov
add
sbb
add
adc
andb
adc
je
repnz
ret
push
jo
mov
jge
and
out
dec
inc
jl
stos
popf
dec
dec
es
push
imul
mov
jnp
pop
xor
lods
sbb
and
jp
mov
popf
pop
sub
outsl
xor
ss
adc
sub
xor
cmpsl
push
call
fisubs
sub
jmp
int3
jmp
pusha
bnd
es
xchg
pop
mov
push
insb
fldz
jge
cmc
pushf
push
xor
jne
add
fistl
push
dec
jl
daa
cmp
cmp
or
sub
add
loop
test
xchg
repz
into
jne
clc
out
lds
xor
pop
ret
xchg
mov
dec
jge
dec
jmp
jle
xchg
or
mov
out
cmp
and
cmp
xor
add
add
or
aam
xor
ss
add
push
sub
push
add
jle
push
scas
call
cmp
push
jmp
push
call
cs
popa
jo
xor
cs
insb
add
imul
add
adc
lea
jne
je
pusha
mov
mov
movb
mov
push
pushf
lea
jmp
push
call
jb
and
cmp
stc
lock
add
push
and
sbb
add
daa
mov
inc
roll
inc
icebp
hlt
jne
sbb
and
pop
ja
mov
je
push
jg
inc
in
imul
repz
sbb
push
dec
mov
idivb
cmc
hlt
jne
mov
add
mov
sub
outsl
dec
fists
dec
incl
repz
xlat
inc
or
and
fs
inc
enter
in
mov
rclb
mov
xor
jnp
add
out
call
cmp
js
call
pop
cmpsl
xlat
loop
pop
mov
adc
das
adc
cmp
sbb
dec
push
mov
and
popa
pop
enter
ret
js
mov
sbb
rcr
pop
std
ljmp
push
pop
cmpsb
cli
push
mov
sbb
or
gs
sub
push
stc
mov
ljmp
xchg
arpl
lcall
push
or
cmpsl
push
cmpsl
sbb
cmp
inc
jne
and
fcmovnbe
iret
jp
aam
xchg
push
sbbb
mov
popf
mov
mov
pop
inc
inc
xchg
add
pop
in
fucom
je
adc
mov
xor
test
cmp
mov
arpl
test
leave
pop
into
push
xchg
jb
mov
fdivr
bound
mov
shlb
sbb
sbb
int3
shrb
cmp
mov
in
pop
xchg
mov
idivl
aad
clc
imul
in
xor
sahf
jle
pop
scas
or
je
mov
call
xlat
scas
sbb
add
fs
imul
add
aad
inc
call
pop
jne
into
adc
add
add
add
int3
adc
add
into
adc
add
add
add
cmc
sbb
icebp
push
add
into
adc
add
add
add
push
push
add
push
add
into
adc
add
add
add
sbb
add
nop
push
add
into
adc
add
add
add
push
add
nop
push
add
adc
add
add
add
jbe
add
nop
push
add
adc
add
add
add
nop
push
add
adc
add
add
add
xchg
add
adc
add
add
add
mov
add
nop
push
add
adc
add
add
add
nop
push
add
adc
add
add
add
int3
adc
add
adc
add
add
add
int3
adc
add
add
add
add
add
cmc
sbb
pop
nop
push
add
aad
lods
call
aas
ret
icebp
push
call
mov
ljmp
mov
sub
jae
jno
popa
insb
inc
push
dec
inc
add
clc
bt
jmp
mov
push
lea
call
jmp
shlb
pop
int3
repnz
cmp
sar
int3
std
hlt
in
in
rol
ror
les
repz
push
imul
dec
fstpt
jle
jo
shlb
add
inc
loopne
outsb
jns
xlat
loope
push
fisttps
scas
aas
xor
adc
lods
cmp
mov
mov
and
jle
dec
xchg
nop
push
dec
pop
lods
sub
mov
sbb
insb
enter
jb
fdivrs
hlt
xor
mov
lods
cmp
pushf
int3
fisttpll
adc
or
cmpsl
in
shr
jmp
dec
movb
rorb
lods
ds
push
rcll
scas
mov
mov
fst
pop
ja
sbb
xor
out
mov
xchg
jp
outsl
push
jb
inc
pop
push
jnp
addr16
imul
sub
sub
imul
sbb
xchg
cmp
adc
fsubp
jg
cmpsb
xor
inc
dec
mov
stc
aam
inc
or
fucomi
imul
pop
jmp
and
xor
dec
movsl
jae
int
mov
cmp
shr
out
outsl
out
aam
sbb
js
mov
or
das
xor
pop
lea
jae
pusha
pusha
lea
jmp
push
call
adc
dec
dec
outsl
cli
scas
mov
int3
loope
loope
outsl
hlt
ss
int
sub
pop
into
push
mov
sub
in
loopne
lret
dec
popa
out
int
in
js
out
jnp
es
mov
fs
jg
clc
inc
push
jl
sahf
sub
and
out
or
lea
shlb
xor
push
data16
arpl
pop
fisubrs
inc
rcrb
jg
push
lret
xor
or
shrl
inc
or
fcmovnu
cmp
push
push
pusha
lea
je
jmp
push
call
cs
stc
sbb
lret
add
pop
sar
cmpsb
iret
mov
roll
jne
ret
out
out
fcmovnb
out
ffreep
movl
je
and
mov
jns
les
mov
mov
pop
fisubrs
mov
inc
mov
sub
insb
hlt
out
lret
insb
stos
imul
clc
pop
into
jmp
xchg
jae
es
aaa
loope
cmp
shrl
orl
outsb
cmpsb
ret
jl
dec
adc
sbb
ret
push
iret
push
jecxz
lret
pop
divl
inc
jo
add
adc
fucomi
inc
add
add
xor
adc
push
mov
pop
std
adc
test
repz
jmp
out
roll
inc
fisttpll
add
test
data16
mov
dec
lea
mov
addr16
loope
cld
and
add
mov
cmc
pushf
and
repz
popa
loopne
sbb
lret
ds
mov
int3
ficoml
clc
sarl
movsb
and
imul
lcall
jle
pop
lret
push
lcall
xor
nop
jmp
xchg
inc
cmp
and
cmp
cmp
cmp
test
push
bts
ror
or
mov
cmp
push
pusha
stc
cmp
mov
call
mov
int3
mov
sub
or
adc
cmp
jl
jnp
jecxz
fists
xor
andb
out
dec
pop
inc
fdivrl
pop
addr16
pop
nop
adc
addr16
cmpsb
add
ljmp
xchg
test
cld
sbb
andl
stos
imul
pop
lea
int
cmpsb
jp
leave
lock
in
mov
insb
ljmp
ss
jae
pop
out
push
sarb
dec
ficoms
pop
into
xor
push
push
call
inc
add
shll
call
out
mov
dec
jp
xchg
mov
imul
inc
movsl
jae
imul
arpl
inc
outsl
jb
push
inc
fsubrl
orl
push
imulb
add
jg
dec
out
lds
icebp
dec
rorl
cld
push
mov
cmp
xor
cmp
faddp
inc
insl
loopne
mov
jecxz
jbe
ss
scas
test
mov
inc
xchg
cmpsl
repnz
loop
test
push
xchg
pop
out
pop
shlb
lds
in
push
arpl
in
in
je
dec
in
std
jo
push
inc
repnz
xchg
ret
sar
movsl
adc
xor
shll
jae
outsl
repnz
jg
inc
outsb
loope
aas
pusha
jmp
push
call
mov
and
xchg
aaa
inc
jl
mov
je
insb
imul
adcb
sub
push
pop
jmp
jmp
jae
jb
and
data16
sbb
and
sub
aas
rorb
xor
xchg
xor
into
test
jns
repz
jae
into
xor
filds
sub
inc
fldl
aam
fmulp
pop
cmp
pop
cmp
sbb
xor
sbb
stos
cmp
push
call
je
sub
data16
xor
mov
int3
dec
test
and
adc
and
sub
or
rcrl
out
es
pmaxsw
in
arpl
fisubrl
or
add
dec
push
sub
iret
jp
or
jp
push
and
lahf
push
aad
frstor
int3
jns
jns
aam
mov
or
lret
loop
out
mov
outsl
push
out
lret
push
shrb
jnp
jg
xor
inc
push
call
adc
je
in
mov
and
lods
cmp
sahf
pop
fsts
mov
add
add
and
add
mov
scas
test
shrb
dec
xchg
xchg
pop
repz
mov
or
je
or
mov
outsl
push
adc
in
dec
cli
ret
pop
call
xchg
gs
sbb
aas
xchg
pop
cmpsb
aas
sahf
cmp
sbb
push
call
insb
lods
jbe
ds
xor
out
sbb
pop
cmpsl
xor
stc
pop
cmp
sbb
es
inc
pop
cltd
ljmp
push
dec
mov
movsl
lock
add
and
cmp
cmp
xor
sub
sbbb
iret
mov
hlt
shlb
icebp
fs
ds
adc
mov
cli
mov
xchg
push
fwait
mov
jno
sbb
std
push
sti
pop
sub
push
add
in
in
imul
mov
test
xor
or
inc
imul
push
call
add
jae
mov
jo
aaa
pop
add
mov
and
pusha
dec
pushf
pushf
rol
pushf
push
call
mov
pop
pop
shlb
int3
cltd
repz
mov
or
cwtl
movsw
adcb
scas
sub
out
daa
ret
ljmp
sti
fnclex
push
sbb
and
jae
outsl
jmp
adc
dec
js
or
mov
roll
mov
rorb
inc
sbb
xor
sahf
fldl
xchg
mov
adc
lea
imul
xchg
xchg
dec
out
aas
lea
fidivrs
insb
loope
std
push
shll
dec
stc
pop
aad
inc
imul
push
adc
adc
ljmp
fucomip
gs
cmp
mov
test
or
cltd
in
loopne
fmull
push
aad
adc
push
outsb
fcmovne
leave
dec
shl
jo
orl
dec
mov
clc
rorl
add
hlt
fdivrl
push
fnsave
fwait
pop
pop
fcomp
push
loope
leave
inc
in
insb
leave
je
push
int
xor
mov
sbb
jnp,pn
in
mov
mov
mov
je
push
push
nop
cltd
xorb
mov
cltd
test
lods
mov
dec
inc
jl
fcom
adc
sub
cmpsl
mov
or
mov
ljmp
stos
add
movb
inc
mov
xchg
sti
dec
jmp
dec
enter
dec
inc
jge
std
pop
mov
sub
hlt
push
in
jge
inc
fsubrs
jge
xor
dec
clc
test
sbb
insb
mov
je
mov
jge
inc
pop
imul
jmp
gs
mov
mov
out
mov
popa
mov
push
sahf
out
mov
xor
movsl
xchg
sub
xor
pop
jle
adc
inc
incl
test
xlat
push
mov
inc
jg
lcall
lock
in
mov
or
sub
sbb
inc
imul
scas
jl
stc
call
cmp
jmp
push
call
lret
test
adc
cld
call
mov
xchg
cmpsl
sahf
xor
pop
push
arpl
jp
inc
dec
inc
pop
pop
out
inc
or
adc
decb
and
or
scas
scas
cs
mov
xchg
pop
call
aam
lcall
outsb
test
daa
mov
sti
sub
adc
lahf
in
sub
bound
jne
ds
stos
add
ss
fwait
mov
cwtl
dec
lcall
cld
in
rcr
stc
fmul
lock
clc
loope
stc
jne
mov
notl
inc
imull
bound
lea
ja
cmp
push
movsb
rolb
xchg
mov
cmpsl
push
xor
jecxz
add
bound
xchg
add
push
call
inc
jo
push
inc
pop
imul
clc
iret
push
inc
mov
out
mov
add
sub
sub
orl
or
or
cmp
or
sub
add
lods
xor
or
cmp
mov
data16
call
jbe
push
addr16
pop
mov
push
xor
cmc
mov
xor
mov
out
notb
push
xchg
pop
jle
sti
push
ret
out
xlat
pop
fisttpl
pop
repz
mov
movb
push
dec
mov
lea
jne
pusha
pushf
pushl
lea
jmp
push
call
pusha
jge
lds
rcr
dec
mov
cltd
aad
sub
mov
cmpsl
outsl
scas
sub
mov
sbb
cmp
sahf
jecxz
and
je
and
cmc
nop
bound
mov
add
adc
add
or
adc
mov
addl
insl
pop
inc
es
pop
cmpb
sbb
imul
jns
dec
adc
or
and
out
xchg
xor
movl
lds
jo
dec
stc
xor
dec
push
call
addr16
hlt
movsl
mov
xchg
push
rcrl
or
xor
adc
xor
lret
sub
flds
int3
xchg
cmpsb
xchg
std
sub
arpl
bnd
pop
pusha
lods
insl
mov
xor
dec
gs
ja
shrl
jge
ret
sbb
sub
daa
mov
push
dec
shll
sbb
es
into
addr16
inc
ret
sahf
xchg
outsl
jmp
push
sub
adc
or
adc
cmp
and
adc
adc
shr
cld
lods
mov
sbb
push
gs
repz
pop
lahf
push
dec
mov
mov
lahf
xchg
stos
sahf
mov
mov
lods
bound
scas
ds
dec
stc
ss
dec
inc
lret
inc
data16
pop
add
shl
push
xor
lods
xor
insl
mov
jp
lods
push
push
xor
stc
call
iret
fucomi
ljmp
out
mov
fidivrs
imul
jae
imul
xor
ja
adc
mov
pop
incb
cmp
xchg
call
dec
sbb
push
call
mov
aad
fld1
mov
and
insb
imul
push
popa
dec
in
mov
je
sti
jae
mov
fucomp
adc
fsubs
stc
cmp
outsb
jp
jbe
dec
lret
rcrw
enter
mov
mov
cli
ja
es
cmpl
xor
lret
push
rorb
leave
push
mov
fmul
adc
pop
in
fldcw
xor
outsb
push
dec
dec
pop
jg
inc
jle
test
mov
mov
aam
iret
loopne
jo
pusha
fnsave
aad
leave
jo
push
int3
pop
adc
shl
es
bound
mov
jecxz
inc
gs
pop
push
call
xor
mov
lea
je
call
inc
loope
lds
jb
xchg
push
push
jns
pop
js
dec
imul
scas
and
enter
jns
mov
in
mov
cwtl
loope
add
add
xchg
mov
mov
sbb
out
and
push
xchg
sbb
int3
mov
pop
mov
push
push
add
cwtl
sub
and
jne
shlb
mov
imul
cli
ja
sub
test
vpcmpeqb
pop
fldcw
fnstcw
dec
in
xor
cmp
push
pop
inc
lock
rcr
icebp
lock
fsub
hlt
leave
cld
jne
cmpsl
adc
inc
outsl
daa
scas
sti
and
pusha
xchg
bts
fs
std
ret
js
mov
rsm
mov
add
ss
or
sub
jbe
arpl
pusha
stos
call
jae
js
test
cs
addr16
out
cmpsb
in
popf
jno
scas
sbb
movsbl
scas
and
jl
mov
and
xor
push
add
inc
and
movl
pusha
pushl
ret
push
call
push
in
fidivrl
aaa
shlb
lret
xor
sbb
repz
iret
into
lret
shr
into
fcmovnbe
iret
out
into
fldcw
dec
jg
stc
xchg
pop
out
clc
mov
inc
or
pop
or
cmpsl
push
xor
cmp
pop
pop
cwtl
dec
mov
mov
fs
enter
mov
fisubl
fistps
movsb
add
sbb
fwait
sub
clc
callw
mov
sub
cmp
mov
xchg
stos
xchg
xchg
sahf
sub
mov
push
es
sub
xorb
ljmp
loopne
jns
lock
or
pop
xchg
and
sbb
aas
mov
lock
lods
and
xor
test
or
xor
dec
or
jnp
sbb
pop
and
popa
out
adc
push
pusha
sarl
dec
sub
repnz
cli
jg
jae
jnp
jg
pop
xor
in
adc
cmc
call
pop
test
cld
stc
inc
lret
adc
fimuls
aaa
push
or
sub
sbb
pop
push
and
add
xlat
mov
mov
paddusw
rol
mov
push
hlt
in
in
pop
xchg
add
xchg
into
popa
out
loop
inc
mov
ret
pop
fsts
mov
xchg
inc
mov
nop
and
mov
bound
pop
xchg
out
out
jae
sub
pushf
dec
jno
pop
jl
js
fs
pop
dec
pop
jne
inc
push
jecxz
je
daa
jbe
sub
mov
aam
or
scas
or
sti
cs
aad
or
lock
outsb
repz
xor
lds
stos
mov
mov
stc
movsb
mov
incb
push
fisubrl
arpl
push
out
arpl
fmuls
test
lcall
and
pushf
pushf
push
lea
jmp
pusha
cmp
mov
pushf
call
arpl
add
mov
mov
cmp
movsl
dec
mov
pushf
cmp
pop
int3
ljmp
jl
rcr
gs
flds
sbb
cmp
insb
popa
insb
dec
fs
je
jo
js
mov
xor
out
ljmp
mov
mov
movl
xchg
scas
cltd
adc
int
in
ret
sbbl
out
into
pop
rclb
rolb
les
jns
xor
stos
mov
aad
jge
test
mov
test
pushf
mov
orb
mov
rclb
loop
mov
jmp
jns
pushf
and
movsl
jae
rcll
lock
inc
les
pop
loop
jae
cs
loopne
sub
sub
xchg
mov
cmp
and
or
xchg
rorl
push
pop
out
rep
sti
jbe
pop
xor
sub
outsl
stos
es
dec
jo
addr16
frstor
mov
outsb
repz
jbe
xor
mov
rclb
cmp
call
lret
dec
sbb
clc
sub
jp
or
add
fwait
mov
mov
mov
mov
cwtl
add
sbb
pop
subb
mov
xchg
push
inc
xchg
outsb
push
gs
inc
cli
fbstp
in
push
add
mov
cmp
push
lret
mov
mov
mov
mov
push
mov
inc
pop
movsb
inc
jmp
call
sub
adc
pop
call
jae,pn
pushf
movb
sub
call
es
jae
les
adc
ljmp
iret
fdivp
inc
out
push
out
stc
imul
mov
jnp
inc
scas
mov
cmpb
jecxz
and
hlt
cmc
sub
pop
ljmp
cmpsb
lcall
leave
cmp
add
pop
shlb
pop
movsl
cltd
pop
pushf
jns
or
cmpsb
lcall
pop
cmpsb
and
push
out
sub
nop
adc
mov
pop
jmp
xlat
pop
sti
iretw
jp
push
pop
jmp
inc
pop
dec
xchg
pop
lea
ja
jmp
mov
cwtl
call
push
call
cmc
pop
and
cmp
jmp
leave
and
cmp
sbb
and
mov
orl
sub
jne
mov
pxor
fnstenv
or
or
es
push
and
clc
jne
ret
les
adc
mov
test
fwait
sbb
xor
stos
mov
mulb
xchg
sub
hlt
push
inc
into
pop
in
xchg
cmp
and
out
add
add
pop
dec
shll
xchg
sbb
ret
xchg
xchg
rcll
push
lock
aam
int3
push
hlt
dec
lock
fnstsw
xor
mov
dec
ljmp
push
inc
imul
imul
sbb
outsl
std
pop
insl
jl
jge
jno
jmp
arpl
jg
mov
push
cmp
lahf
adc
mov
outsl
test
pushf
xorl
out
dec
fistps
cld
cmp
jecxz
mov
mov
jp
pop
inc
test
sub
pop
sbbb
pop
lcall
stc
dec
push
adc
rcll
in
pop
mov
loopne
loopne
hlt
dec
shlb
mov
aad
mov
add
roll
add
xor
push
call
jl
push
sub
add
call
pushf
mov
jl
cli
dec
mov
mov
lret
cld
dec
mov
push
xchg
ds
push
popa
cmc
stos
adc
jmp
push
xchg
mov
push
add
pop
add
push
pop
push
fwait
push
or
or
pop
lret
int3
adc
adc
or
pop
nop
inc
xchg
sbb
or
xor
sahf
lret
outsl
fisubrs
sbb
lcall
dec
pop
iret
jp
data16
dec
repz
xor
inc
bt
push
clc
sub
pushf
cmc
movl
stc
cmp
jmp
movb
movb
lea
call
call
push
call
lcall
push
mov
add
lock
insb
push
call
je
mov
adc
inc
inc
jb
pop
push
dec
addr16
pop
inc
incl
ja
pop
lods
cmpsb
in
std
inc
cltd
scas
xor
jg
cwtl
std
fcomi
sub
and
rcrb
fidivrs
add
ror
jne
sub
je
scas
out
daa
fistps
or
jmp
xchg
push
aad
sbb
repz
sbbb
adc
test
pop
mov
jp
jbe
push
lods
xor
ljmp
arpl
ja
xor
pop
jb
rol
je
fcomp
loope
xor
sub
add
xor
test
jne
mov
clts
xchg
add
xlat
loopne
push
loopne
pushf
jbe
push
mov
ret
or
mov
movsl
jae
hlt
aaa
sub
dec
jne
mov
xchg
push
test
rolb
jne
gs
in
sti
lahf
pop
jae
xchg
inc
vmovhps
into
repnz
ds
insb
mov
xlat
add
cltd
xor
lea
xor
mov
xchg
mov
and
mov
inc
pop
pop
fucom
pushf
lea
ja
shr
sub
rol
shld
add
mov
adc
or
lea
mov
xor
mov
jmp
push
call
mov
lea
aam
xor
dec
pusha
mov
mov
cmp
test
test
pushf
push
movb
lea
je
xor
bt
test
mov
cmp
and
add
cmp
ror
mov
test
cmp
clc
test
push
pushf
pushf
mov
lea
je
shl
shld
clc
add
call
push
call
hlt
pop
lods
in
lock
bound
push
jge
imul
gs
jge
push
lcall
jns
adc
movsl
cwtl
dec
iret
test
cmp
cmp
xchg
adc
xchg
int3
arpl
or
repz
jg
stos
gs
pop
dec
sub
inc
push
push
jno
adc
loopne
fsubs
imul
jns
gs
sub
sub
adc
mov
cmp
sbb
mov
mov
xchg
pop
stos
mov
sbb
out
xchg
lods
xchg
add
adc
fdivs
cmp
call
mov
pop
cmpsb
push
mov
pop
xor
fs
pop
out
inc
sub
fs
push
pop
mov
mov
into
lret
dec
repz
xor
inc
jae
dec
fisubrl
inc
fidivs
imul
xor
mov
jae
push
pushf
dec
jno
dec
push
jae
inc
jne
mov
addb
fisttpl
adc
adc
ljmp
ljmp
sub
inc
xchg
jnp
cmc
or
add
pop
fsts
fsubp
imul
jecxz
popf
test
jnp
xchg
ret
jbe
stos
add
mov
fistpl
or
cmpsb
jnp
movsl
mov
mov
cmp
cwtl
cmp
inc
pop
rcll
sub
movsl
nop
test
mov
outsl
add
in
lock
in
mov
or
pop
mov
sub
push
fsubrp
js
stc
cmp
adc
nop
lods
icebp
push
add
sbb
psubsb
add
dec
insb
test
ret
or
dec
jbe
inc
call
sbb
xor
stc
cmp
dec
sar
cmpsl
repnz
js
insl
lods
sub
fs
addr16
xchg
push
inc
inc
ja
inc
jbe
repnz
divb
arpl
dec
pop
icebp
xchg
push
add
jmp
outsl
inc
cmp
xchg
jecxz
daa
mov
xor
sti
aas
outsb
pop
pop
mov
pop
dec
push
jns
dec
inc
gs
pop
pusha
imul
gs
cmp
sub
pop
add
jo
lret
or
mov
mov
sarl
mov
ds
mov
add
sti
fbld
xorl
mov
hlt
inc
ja
lcall
cmpsb
pop
mov
rclb
or
dec
js
fsubs
add
jg
fisttps
test
dec
mov
aad
add
sbb
and
mov
cli
dec
call
dec
xor
xor
inc
jl
pop
jne
jge
imul
mov
pop
sarl
fwait
aas
jne
cmpsb
in
mov
inc
cld
xor
out
mov
ret
xchg
mov
cmp
jno
push
jae
adc
insb
add
lds
pop
test
js
nop
jne
xor
in
xor
adc
xchg
add
pop
clc
popa
xor
or
mov
add
adc
inc
decl
in
mov
xor
std
lds
fs
shll
jmp
rclb
cs
call
xchg
nop
out
mov
xchg
or
mov
sub
push
xchg
jnp
inc
cmpsb
mov
aad
sar
call
pop
aad
dec
and
loope
iret
int
add
dec
das
rcl
fwait
mov
sti
pop
call
xchg
cmp
clc
push
test
bndldx
cli
imul
cmc
pop
std
push
shrl
int
inc
push
jae
cmpsl
imul
insb
add
push
add
movl
push
cmp
mov
stc
test
pusha
pushf
call
divps
sti
push
addps
daa
and
ds
adc
fdivrs
stc
sub
orb
and
enter
jnp
test
cs
mov
xorb
das
jae
sub
mov
xor
push
addr16
mov
or
jmp
dec
mov
push
rclb
bnd
int
gs
outsl
pop
out
jbe
fistl
sub
xor
and
jb
pop
fdivr
ljmp
aam
aad
jae
add
xor
lods
testl
pop
bound
push
xlat
sbb
xor
cmp
adc
sbb
ret
adc
scas
fistl
jo
nop
jg
clc
pop
dec
imul
pop
mov
loope
lods
leave
push
das
sbb
cmp
cli
jns
jb
xchg
xchg
sbb
inc
jnp
mov
or
cmp
xchg
mov
cmpb
mov
subl
es
call
push
jne
cmp
bt
sub
cmp
pusha
test
cmp
pusha
lea
ja
push
imul
cmp
call
pusha
call
sub
jns
pop
dec
jge
popa
dec
imul
out
imull
adc
mov
mov
dec
sub
fcoms
dec
sub
es
push
jmp
sbb
lcall
les
pop
jmp
cmp
sahf
cmpsl
adc
in
dec
add
add
or
xor
in
call
xchg
outsl
sti
adc
popa
and
jno
mov
jo
js
dec
icebp
pusha
aad
dec
shrb
shrl
dec
jg
inc
pop
xor
inc
std
cltd
pop
movl
rclb
pushf
cmp
call
push
call
xor
pop
push
add
adc
sub
add
xor
xor
cmp
das
xor
mov
adc
fstl
shll
sbbl
mov
push
mov
roll
push
aaa
push
aas
xor
sub
or
push
xchg
push
sarl
sahf
mov
insb
push
push
loopne
fcoml
sar
inc
and
jecxz
in
inc
inc
xchg
or
insl
cmp
leave
cmc
cld
mov
mov
fstpl
pop
mov
mov
cli
pop
in
xorb
mov
push
fwait
sbb
stos
not
mov
jmp
cmp
push
call
dec
mov
mov
pushf
popf
sub
addr16
data16
mov
lret
mov
fwait
stc
dec
test
jb
mov
mov
rcrb
adc
in
push
in
or
mov
xor
and
ficoms
iret
jbe
cmp
shlb
mov
xchg
lods
test
nop
or
cmpsb
xor
pop
mov
mov
stos
xor
xor
add
nop
test
sarb
cmpsb
xchg
xchg
mov
fwait
sahf
xchg
mov
mov
jge
rolb
xchg
stos
or
nop
pushf
fisubrl
shll
push
fsub
roll
sbb
neg
scas
hlt
sahf
push
or
cmp
xor
cmp
xor
adc
cld
pop
push
sbb
int3
push
shlb
push
hlt
push
lock
call
push
loopne
aam
inc
push
mov
push
call
dec
push
pop
push
popf
bsr
mov
stc
cmc
cmc
stc
and
test
cmp
pusha
cmp
add
pusha
mov
lea
jmp
push
call
pop
or
mov
and
ret
out
into
shl
ret
into
lret
loop
pop
iret
fadds
cmp
imul
sahf
pop
push
imul
sub
imul
popf
fisttps
mov
idivb
and
outsb
push
jecxz
or
into
jl
movsl
mov
stos
cmpsl
sub
dec
ja
repz
fistpl
data16
dec
jmp
xlat
jle
xor
push
mov
cmc
clc
pusha
pushf
shl
movb
pusha
lea
je
push
pushl
pushl
mov
pusha
movl
pushf
movl
jmp
push
call
mov
dec
push
leave
call
sub
inc
call
xchg
inc
xchg
pop
mov
jecxz
jnp
lret
movsb
jecxz
leave
in
fadd
clc
int
in
aad
int
flds
loope
xchg
adc
bound
fsubr
fidivrl
out
fstps
insb
pop
mov
mov
outsb
push
xor
aas
add
adc
daa
cltd
lock
enter
inc
js
or
lahf
adc
iret
data16
dec
xchg
enter
push
pop
sahf
bswap
sub
ret
inc
ret
inc
jae
inc
into
xor
dec
cmp
scas
andl
imul
pop
inc
jbe
outsb
dec
jbe
data16
dec
pop
jmp
negb
lea
ja
fcompl
ds
imul
jecxz
mov
inc
fisubs
scas
imul
out
mov
scas
ss
or
std
pop
pop
pop
cltd
sbb
scas
test
jge
push
mov
or
or
dec
jo
jl
dec
std
jo
inc
std
fs
ljmp
and
xchg
sub
dec
push
and
push
inc
xor
and
add
div
lcall
loope
jno
data16
jp
jbe
outsb
dec
pop
pop
inc
pop
ret
cmc
loop
insb
and
sub
pop
mov
push
push
cmp
and
cmp
push
cli
nop
inc
dec
shl
push
sbb
cmp
rcrb
call
repz
pusha
in
sub
fstl
dec
jno
jmp
adc
test
out
cli
outsl
mulb
sub
mov
popf
cmp
and
adc
test
decb
push
xchg
int3
fmull
out
lret
iret
pop
clc
dec
lret
jns
inc
clc
inc
or
das
adc
scas
xor
cwtl
ds
insb
jmp
pop
sub
movsl
jg
sbb
es
mov
das
inc
or
lret
xor
jle
push
movsl
mov
mov
in
lock
daa
sahf
stos
mov
pop
mov
push
leave
jo
push
mov
cmp
adc
and
push
xor
and
add
add
push
add
add
add
add
add
add
add
jge
add
jge
add
jge
add
add
add
add
jge
add
cmp
mov
push
dec
mov
pop
and
mov
ja
movsb
mov
dec
mov
lret
pop
xchg
lock
imull
xchg
aad
cmp
pushf
out
mov
add
fs
icebp
xchg
mov
popf
pop
in
test
mov
das
in
jb
cmp
pop
fwait
sub
cmp
mov
nop
stc
inc
test
cmpsl
frstor
ret
dec
jb
adc
adc
dec
add
xchg
stos
or
xchg
hlt
ret
scas
mov
lods
mov
or
push
and
inc
sbb
fsts
mov
arpl
push
adc
aad
push
or
repz
push
testb
push
xchg
les
sbb
das
daa
dec
loopne
mov
mov
cmpsb
stos
insb
pop
and
cwtl
test
repnz
addl
inc
hlt
cmpsl
std
daa
xor
and
xor
cmc
jecxz
lods
addb
adc
pushf
dec
daa
mov
cli
pop
sub
push
xor
shlb
pop
cwtl
ss
inc
xchg
cmpsb
leave
shlb
jmp
test
cmpsl
sub
hlt
repnz
rorl
sbb
mov
stc
imul
aam
fdiv
and
mov
imulb
dec
mov
inc
pop
mov
mov
sub
and
mov
sub
sub
xchg
shlb
outsb
jmp
out
push
mov
fwait
xorl
mov
repnz
jp
add
mov
fs
rcrb
or
and
or
and
imul
xchg
dec
xor
cmpsb
sbb
fldl2e
stos
das
je
inc
int
pminub
aad
movsb
jae
xor
lcall
pop
dec
jp
mov
inc
sbb
imul
enter
cli
push
and
adc
repz
in
jbe
fcoml
loope
stos
jl
inc
js
cmp
adc
or
jecxz
jnp
out
inc
add
xchg
sarb
pop
in
cmc
xchg
lods
cmp
mov
dec
xor
xchg
dec
mov
call
mov
sub
loop
sub
sti
jp
push
push
sub
test
lock
cmc
jo
popa
pop
xor
cld
push
xor
push
dec
daa
outsl
es
sbb
pop
insb
mov
int
xchg
aam
cli
insb
int
inc
cmp
cmp
lret
mov
fucomip
sub
int
popa
mov
and
jo
test
shll
mov
lret
dec
cld
pop
push
mov
jmp
setg
stos
aam
lcall
push
adc
insb
in
gs
sub
dec
dec
dec
addb
push
dec
int3
and
cmp
cltd
mov
pop
subl
sub
lahf
xlat
lds
popa
fisubrs
repz
outsb
mov
push
in
enter
lods
xchg
add
in
cmp
or
pop
xor
adc
imull
cs
mov
dec
xor
ja
push
pop
lds
cmp
sub
into
test
movb
xor
inc
imul
cmp
adc
sbb
push
or
adcb
dec
cli
ficoms
xchg
mov
int3
cli
sbb
and
sub
stos
and
test
mov
rol
lcall
cwtl
pusha
add
cmpb
mov
int3
in
scas
es
mov
pop
xor
into
sub
fbstp
sub
mov
std
pop
jmp
ret
test
out
fistps
sub
xchg
push
and
dec
jb
dec
repz
dec
sub
jmp
mov
xchg
xor
js
pop
daa
sub
ljmp
pop
inc
xor
xlat
sbb
outsl
loop
inc
jnp
je
inc
xor
stos
imul
cld
sbb
stos
fs
push
test
mov
jae
pop
add
scas
lcall
adc
repnz
les
mov
addr16
enter
mov
shrl
in
mov
xor
push
in
xchg
cmp
outsl
inc
ss
popf
adc
xlat
fwait
sbb
lea
add
cmpsl
xor
idivl
mov
popa
and
mov
call
xchg
mov
pushf
popf
jge
stos
xchg
mov
ficomps
inc
or
out
mov
orl
and
out
aam
ljmp
outsb
fsubr
add
xor
mov
cmc
jnp
cmpsl
js
sbb
repz
movsb
sub
mov
sub
cmpsl
mov
inc
sti
repz
lods
fwait
xlat
cli
add
xor
rcll
push
out
stos
mov
out
popa
pop
clc
sub
mov
aas
push
out
dec
scas
mov
pop
lods
cltd
adc
mov
add
das
cltd
mov
mov
xchg
pop
mov
push
shll
pop
or
cmp
data16
clc
enter
insl
mov
xor
aas
cmpsb
bound
icebp
cmp
xchg
cld
clc
mov
or
enter
aad
xchg
cs
pop
and
or
loopne
insb
fidivrs
aas
clc
push
lcall
jge
negl
pop
cmp
mov
int3
shll
mov
out
std
push
sub
add
out
add
pop
cld
sti
ja
and
data16
xor
gs
mov
mov
cmp
scas
pop
int
std
push
push
mov
and
imul
cmp
jmp
jmp
dec
or
pop
bound
mov
inc
jno
cmp
mov
jp
mov
je
hlt
mov
call
xchg
std
jb
xor
sahf
pop
pop
or
decl
lds
xchg
test
mov
mov
leave
stos
cmp
aad
jo
mov
inc
data16
inc
mov
xchg
mov
cmp
into
test
and
imulb
push
xchg
loope
cld
mov
pop
inc
aam
test
cmp
punpcklbw
fimuls
jmp
out
and
in
mov
push
nop
mov
jno
in
or
lock
sub
ss
into
insb
fwait
sahf
push
pushf
jo
push
lods
mov
rorb
stc
repz
sbb
ja
mov
lds
inc
pop
out
imull
mov
xor
shl
xor
loop
mull
loopne
jle
js
and
dec
pop
pop
repz
scas
jecxz
adc
xor
das
int3
jne
xor
scas
lret
insl
mov
sub
pop
icebp
or
fs
add
xchg
add
push
ror
xor
aas
decb
xchg
push
push
fbstp
test
rcrl
mov
push
out
cli
push
aaa
pop
sbb
jecxz
mov
int3
cmp
adc
cmp
push
and
mov
fsubrs
iret
bound
mov
out
insb
fnstenv
imul
dec
sbb
imul
adc
xchg
push
adc
gs
fcoml
xlat
jge
mov
sbb
aas
add
sbb
add
xchg
push
xor
aam
arpl
leave
aaa
or
hlt
arpl
movsb
mov
mov
sub
in
ja
sub
mov
inc
aam
stos
lea
mov
mov
xchg
ss
decl
mov
scas
testl
cmc
fstps
jnp
movsl
mov
xchg
push
cltd
pop
or
jp
inc
inc
pop
out
pusha
out
push
stos
not
ds
ud0
movsb
dec
inc
shll
les
lock
lcall
pop
xchg
fcoml
repz
or
mulps
pop
lods
lea
shr
jb
mov
xchg
dec
loope
and
loope
sbb
fld
push
cmpsl
jge
cmp
pop
push
cmp
mov
imulb
rolb
daa
sti
out
gs
clc
jmp
xchg
subl
nop
nop
das
insl
insb
jae,pt
cmp
mov
fwait
das
dec
cmc
repz
pushl
imull
fists
sub
inc
dec
push
scas
dec
pop
mov
jbe
fcomp
sub
mov
imul
bound
mov
gs
aas
fsts
vcmpps
cmc
or
insb
scas
clc
repz
jle
sar
lcall
xchg
lods
hlt
fistl
in
leave
sub
test
cmp
and
mov
mull
push
out
push
cwtl
cmpsl
sbb
test
mov
pop
imul
aaa
jmp
pop
fstpl
push
dec
xchg
pop
aas
inc
push
out
in
lds
mov
and
or
push
ss
rorb
push
mov
sub
sbb
movsl
cmp
ficompl
cmp
lock
add
sub
xchg
fimull
dec
mov
incl
js
adc
ds
xchg
sbb
push
lds
mov
xchg
push
test
jg
scas
push
mov
fcompl
jecxz
add
xor
jns
ss
fistpll
addr16
sbb
add
xchg
or
pop
scas
insl
sbb
pusha
inc
popf
loop
sbb
sub
jge
and
push
pushf
stc
lcall
jg
or
mov
sbb
cmp
inc
leave
mov
jle
fstps
xor
jbe
mov
and
pop
ljmp
or
pushf
dec
cmp
xchg
jne
in
push
sub
faddl
add
mov
bound
and
addr16
inc
cwtl
cmp
mov
outsl
cmpsl
out
mov
les
ja
or
lods
inc
daa
rcr
insb
xchg
and
lods
fnsave
inc
icebp
and
or
cmp
inc
dec
sub
movl
enter
or
inc
mov
xchg
fwait
or
lods
mov
dec
xchg
push
xchg
call
std
mov
mov
fisttps
test
xchg
icebp
clc
pop
jmp
enter
and
dec
xchg
pop
test
cmpsb
mov
add
mov
and
inc
dec
int
fstpt
test
sbb
xor
mov
flds
outsl
xor
push
repz
scas
mov
jo
or
lahf
sub
jno
out
adc
push
aam
in
lds
imul
dec
call
ror
icebp
mov
das
add
add
call
jne
cmp
in
out
fsubrp
jmp
repz
rcl
imul
jecxz
ret
sbb
sbb
daa
out
stos
movsb
or
addb
rsm
loope
jp
jg
aaa
stos
sbb
fmul
stos
push
adc
shrl
popa
fdivrs
loop
ret
or
sub
add
xor
cmc
clc
clc
pusha
clc
repnz
movb
jmp
push
call
lret
mov
adc
mov
and
pushf
cmpl
call
pushf
mov
adc
jmp
fs
ja
popf
ljmp
or
mov
mull
mull
std
mov
jne
jl
jmp
pop
xchg
inc
mov
sahf
pop
scas
test
dec
xchg
mov
imul
rorl
into
movsl
stos
pop
inc
stos
or
push
into
imul
pop
imul
sbb
pop
in
cwtl
push
out
inc
dec
in
outsb
push
push
jmp
xlat
inc
repz
xlat
jle
outsb
repz
out
adc
in
call
sahf
pop
or
adc
dec
jo
pusha
insl
js
pusha
repnz
push
ljmp
sbb
cmp
imul
leave
pop
sbb
ficoms
mov
mov
dec
xchg
mov
rcrl
sub
cmpsb
repz
test
dec
dec
and
ret
andl
jbe
mov
mov
aas
xchg
aas
push
cmp
mull
jp
pop
fildl
push
fildl
inc
inc
sub
das
push
adc
mov
decl
mov
push
rcrl
rol
fwait
nop
aad
xchg
xchg
cs
mov
lahf
adc
sbb
mov
pop
mov
mov
adc
xchg
cs
sbb
pop
or
loope
fisttpll
pop
sbb
outsl
mov
pop
cltd
loopne
fstpl
cs
std
xchg
hlt
mov
mov
ficomps
cltd
repz
sbb
imul
jmp
sbb
bound
ficomps
xchg
test
adc
push
aam
lcall
jge
and
loop
popf
and
jl
pop
push
push
sti
sbb
mov
outsb
adc
js
out
andb
dec
loop
or
imul
xchg
push
push
pop
fsubl
jns
dec
les
imul
frstor
jb
mov
sub
mov
add
sub
pop
mov
mov
xor
xchg
push
and
sti
imul
push
orb
addl
lret
bound
popf
sub
fwait
js
pop
popf
je
or
mov
loop
into
dec
adc
lods
xchg
dec
adc
push
cmp
mov
dec
test
mov
cs
andl
sbb
mov
mov
dec
xchg
add
jnp
dec
aam
shrl
imul
pop
out
rol
insl
rclb
subb
adc
jno
inc
jo
push
imul
lcall
jbe
sbb
pop
enter
xlat
lds
nop
mov
movsb
xchg
dec
xchg
sub
outsl
into
add
mov
add
cs
adc
rclb
cs
imul
pop
mov
lods
stos
mov
fstps
mov
dec
and
xchg
jne
imul
hlt
mov
ficoml
adc
mov
pusha
cmp
and
les
xor
mov
mov
test
shl
mov
nop
sub
shlb
cmc
mov
test
xorb
shl
iret
subl
mov
pop
and
mov
lds
xor
addl
ret
inc
xchg
add
ja
pop
test
dec
inc
xlat
lods
push
xchg
test
shr
incl
adc
add
push
gs
insb
imul
je
add
shlb
call
fadd
xchg
sbb
rcr
pushf
movzbw
mov
sub
jge
test
clc
bt
and
test
cmc
test
add
call
push
call
lahf
insb
je
add
test
mov
mov
pop
dec
pop
jl
fs
pusha
pop
insb
jno
push
clc
popa
mov
stc
xchg
lods
xchg
mov
jne
insb
out
aad
test
inc
mov
test
fsubl
add
push
lea
pusha
sahf
sbb
sub
aas
cmp
test
sti
jbe
mov
jbe
js
add
dec
jle
push
das
sahf
add
sub
jbe
sti
loop
loop
fidivl
jnp
inc
out
loop
xor
clc
rcll
icebp
xorb
fwait
stos
mov
mov
mov
sub
subb
scas
xchg
insb
int
pop
xlat
addb
fimull
xchg
inc
push
xchg
jo
jp
mov
insl
fnstenv
lcall
sub
cwtl
sub
xor
repnz
repnz
mov
ds
xor
into
xchg
outsb
inc
ret
xor
into
mov
and
sar
push
cld
mov
lret
add
adc
cmp
sub
cmp
adc
and
sbb
add
rcr
repnz
add
add
stos
adc
add
add
add
add
add
push
push
add
add
add
push
add
add
add
add
add
lock
add
out
add
add
add
scas
adc
add
mov
add
push
imul
add
or
add
adc
add
add
add
sbb
add
add
lahf
sbb
sbb
mov
xchg
jae
push
adc
in
jg
jp
push
repz
mov
shll
outsb
mov
add
sbb
mov
add
notb
xchg
jae
mov
lahf
jnp
adc
fbstp
scas
or
div
ficomps
xor
stos
popf
mov
adc
pop
mov
push
push
lea
push
or
xchg
xor
fwait
or
insl
test
sarl
ficomps
xchg
or
popf
nop
std
into
jns
sbb
aaa
lahf
cld
push
sbb
fistl
jp
setl
aas
xchg
pushl
rcl
jae
xchg
sbb
repnz
jle
repz
movsb
jb
sbb
cmp
pop
divb
mov
xor
mov
sbb
mov
push
lcall
add
loop
aaa
pop
mov
out
xchg
fcomip
insb
mov
jo
pop
pop
mov
into
stc
pop
fcomp
sbbb
sbb
xchg
pop
push
push
add
push
mov
pop
xchg
xchg
rcll
mov
xchg
hlt
bound
add
push
repz
or
mov
or
jne
cmp
pop
ds
sbb
pop
cld
aad
movsl
jne
ds
push
push
dec
pop
xor
jo
pop
xlat
push
mov
sbb
or
pop
sbb
mov
popf
jns
lahf
inc
sahf
pop
arpl
sub
sbb
jnp
sub
sbb
pop
sbb
jle
push
push
cmc
adc
xchg
std
xor
shll
orb
xlat
push
push
sahf
adc
pop
sbb
sbb
jmp
or
call
lods
jbe
push
ficompl
adc
jecxz
jle
pusha
into
mov
aas
std
xlat
insb
leave
mov
sbb
sti
lret
adc
pop
pop
push
inc
lock
fisttps
mov
out
xchg
sbb
mov
sub
ja
push
stc
punpckhwd
xor
or
mov
xchg
scas
xchg
add
add
sub
xchg
mov
mov
outsl
dec
mov
test
xlat
jle
dec
iret
sbb
or
push
xlat
lods
pop
sbb
mov
decb
xchg
imulb
push
pop
pushl
adc
mov
and
pop
add
outsl
out
jg
or
jmp
mov
out
lcall
jle
mov
or
out
add
sbb
rclb
push
mov
mov
sbb
ror
mov
mov
or
ret
lahf
sahf
sahf
sub
popf
xlat
pop
mov
xor
lret
pop
and
inc
cmc
pop
aad
in
jae
stos
sahf
aas
cmpsl
push
xor
loope
popf
fwait
xor
sub
je
push
mov
or
mov
jno
sbb
add
cmp
ficomps
call
mov
push
mov
mov
aas
and
mov
jecxz
add
mov
rcl
je
stos
out
sbb
add
out
in
scas
jmp
add
xchg
add
inc
roll
mov
push
fwait
jno
inc
dec
mov
and
mov
add
xchg
xchg
cmpsb
jns
mov
sbbb
inc
add
cli
out
mov
out
pop
fwait
mov
dec
dec
fnstsw
adc
inc
test
inc
outsl
jmp
sahf
sti
jle
or
hlt
mov
xchg
push
push
scas
rol
fldl
out
inc
outsl
out
mov
xchg
inc
inc
stc
test
inc
sbb
out
mov
rcrb
call
fstps
inc
sbb
mov
xchg
mov
int
cli
add
adc
cmpl
notb
add
xchg
jne
in
mov
add
mov
repz
lret
xchg
sahf
out
je
inc
adc
lock
jmp
lea
sti
popa
pusha
adc
xlat
test
cmp
adcl
and
push
sub
and
mov
bound
mov
push
push
pop
inc
xor
inc
mov
and
bound
push
jle
xchg
xor
mov
jno
sub
out
lahf
fwait
dec
scas
fisubs
jg
je
notb
sbb
out
mov
popa
or
scas
adc
ds
jmp
pop
jmp
push
sub
mov
mov
pop
ret
sahf
add
and
ret
cmc
pop
xchg
jecxz
push
push
and
jns
es
adcb
sahf
mov
fbld
fs
inc
cs
add
pop
xchg
adc
xor
outsb
sahf
out
dec
stos
mov
sti
enter
cli
sahf
int
xchg
pop
lcall
fxch
inc
cld
cltd
testl
out
and
xchg
sbb
jo
fidivrs
outsb
jne
scas
inc
out
sbb
mov
sbb
sbb
or
sbb
mov
jmp
xchg
iret
cmp
daa
and
sub
and
popa
shll
mov
or
add
enter
cs
push
mov
lcall
xchg
fisubs
leave
lret
add
cmpb
sti
arpl
mov
cwtl
fwait
jns
imul
int
in
pop
pop
cmp
push
loop
xchg
mov
ret
rol
jl
jl
jg
jne
jno
jg
xor
dec
add
outsb
push
ljmp
push
cli
add
xor
cmp
dec
je
fstpt
fwait
scas
and
add
mov
loop
push
lds
add
xlat
pop
iret
outsl
push
shlb
pop
mov
les
mov
pushf
popa
jno
fdiv
lea
and
mov
sbb
or
std
mov
outsb
ss
sbb
push
bswap
shr
jbe
jnp
fsts
gs
outsb
or
push
pop
js
add
inc
mov
mov
es
scas
in
in
xchg
xchg
ss
add
outsl
movsb
xchg
cmp
dec
leave
push
pop
int
repnz
out
shll
jbe
jae
pop
roll
int
std
cwtl
insl
frstor
dec
outsb
adc
subb
dec
lods
pop
and
xor
fldt
jg
pushf
cmp
aas
adc
xchg
sbb
fimuls
xchg
lcall
ja
pop
fimuls
xchg
adc
adc
ds
xchg
rorl
pop
cmp
jg
mov
sbbl
scas
jno
or
rcl
sti
inc
jg
scas
or
hlt
outsb
fisttps
sub
xor
sahf
cmpsl
loop
fcompl
pop
je
xchg
ds
popl
pushf
ficoms
xor
lods
adc
jmp
in
push
add
int3
dec
inc
dec
leave
test
cwtl
push
gs
jnp
dec
jg
mov
mov
xor
popf
bnd
xchg
or
aas
fnstcw
push
das
or
cmp
sti
cld
pushf
mov
fmuls
in
fdivp
jp
jle
xorl
movsb
mov
add
mov
decb
mov
loopne
push
xor
adc
outsl
out
lock
loopne
gs
jno
imul
lcall
iret
cmovp
mov
push
pop
mov
out
aas
mov
pop
outsl
fucomp
sarb
add
dec
int
ret
scas
loop
outsb
pushf
decl
rcrb
sahf
ds
mov
scas
in
jmp
loop
or
lahf
nop
sahf
dec
xlat
out
out
jp
out
pop
sbb
mov
sahf
push
scas
ret
ret
int3
mov
xor
add
cwtl
pop
push
sahf
nop
pop
imul
sub
pop
and
mov
adc
dec
pop
sti
pop
leave
mov
pop
fstl
adc
mov
std
and
adc
sbb
jmp
or
adc
rcrl
pop
mov
pop
maxps
adc
sub
add
ljmp
aam
add
fwait
pop
or
jno
cmpsb
mov
inc
push
push
pop
pop
scas
nop
mov
hlt
add
xchg
ja
pop
push
or
cmp
test
outsb
iret
cmp
ds
clc
xchg
inc
popa
and
lds
aad
inc
mov
int
push
movsl
mov
jnp
and
push
popf
cmp
mov
lock
mov
repnz
ss
int3
mov
outsb
popf
mov
add
out
faddl
and
or
cmp
aam
pop
aad
add
out
mov
iret
mov
jns
out
inc
push
push
sarl
inc
outsl
ffreep
xchg
xchg
or
push
orl
mov
mov
mov
mov
pop
int
and
lcall
clc
scas
fists
popf
cmp
jl
adc
mov
lcall
decb
pusha
shrl
mov
scas
pop
iret
call
mov
fwait
cld
imul
stos
push
ds
pop
cmc
adc
mov
xor
outsb
cwtl
fwait
icebp
imul
cmp
movsl
or
hlt
and
lret
jns
pop
dec
mov
mov
js
mov
aaa
lahf
sbb
inc
mov
iret
cmp
cmp
fnstcw
fwait
nop
xchg
enter
mov
jns
iret
and
pop
scas
or
push
inc
lea
loope
add
scas
jo
mov
sbb
mov
out
sahf
lcall
aad
lret
stc
cvtdq2ps
fstl
iret
into
cs
enter
fistpll
xlat
xor
xchg
test
xchg
iret
lds
mov
pop
ret
jns
pop
sub
iret
push
adc
mov
xchg
push
mov
mov
push
add
cmp
inc
pusha
mov
cltd
xor
and
mov
mov
mov
fstp
scas
jo
daa
cmp
push
push
ja
sbb
sbb
cli
in
ficoms
inc
pop
fstps
lods
fcompl
or
cwtl
movsl
mov
xchg
mov
mov
jl
jg
js
aas
jns
dec
lcall
push
xorl
jne
dec
xchg
cmp
loopne
jmp
pop
loop
or
out
adc
fcomi
pop
stc
pop
dec
or
icebp
push
in
test
xchg
aad
sahf
ds
dec
data16
rorl
outsw
inc
mov
sbb
push
jno
pop
jle
add
dec
dec
frstor
enter
ficoms
jbe
mov
mov
mov
cmp
je
repnz
mov
jl
fwait
popf
popf
dec
fwait
loop
xlat
mov
xor
cli
pop
xchg
xchg
jmp
mov
jmp
push
shl
mov
int3
mov
negl
or
daa
fcmovnu
and
insb
pop
cmpsl
loop
fnsave
arpl
je
or
xchg
rcrb
lea
cmp
fwait
and
pop
or
rcll
aas
loop
lods
in
rcpps
lahf
dec
mov
inc
cmpsl
jno
mov
sbb
jle
adc
imul
ja
loop
mov
pop
imul
jno
sahf
cmp
ja
dec
pop
mov
sbb
adc
add
rol
push
sub
mov
lcall
out
test
pop
mov
mov
sub
sbb
cmp
lahf
call
cmp
cli
scas
daa
inc
adc
dec
mov
pop
pop
sahf
dec
fwait
jne
mov
xlat
mov
rcr
pop
mov
jge
out
xlat
sti
std
pop
push
je
or
gs
sbb
out
inc
fisttpll
scas
add
push
xchg
mov
addr16
inc
mov
scas
pushf
and
push
sbb
add
xor
test
jo
outsb
xchg
ficomps
cmp
cli
cmp
and
mov
mov
xor
mov
inc
mov
fsubl
je
inc
out
and
stc
mov
loop
push
nop
adc
pop
ljmp
xor
pop
jo
mov
jle
mov
es
ficompl
mov
push
jmp
aaa
jl
jnp
pushf
mov
out
and
add
or
lea
out
jbe
adc
jmp
lock
add
jo
pop
daa
scas
les
arpl
mov
xor
pop
sbb
mov
ret
push
cmp
mov
mov
sahf
add
rclb
lahf
xor
jle
jmp
mov
xchg
or
lea
cmp
sbb
loopne
das
ret
out
pop
nop
fstpt
scas
push
and
or
je
mov
stos
mov
pop
cmpsl
xor
or
jo
fistps
adc
std
adc
cmpsb
in
add
incl
pop
out
jo
mov
cmp
jmp
jle
dec
pop
jb
sbb
and
sbb
and
pop
push
or
sbb
push
push
or
fcos
nop
sbb
xlat
fwait
mov
pop
fsubrs
mul
pop
xchg
fsubs
jae
push
push
push
and
adc
cmp
cmpsl
sbb
push
je
xchg
add
jge
lahf
dec
adc
mov
pop
into
adc
iret
lock
lahf
xchg
loop
or
cmpsb
aas
xchg
out
sbb
movsb
add
test
add
jecxz
pop
andl
push
aad
add
pop
adc
or
test
adc
loop
mov
adc
add
js
push
xchg
adc
sahf
xor
lret
pop
push
loope
iret
cmp
lds
rcrb
ljmp
pop
clc
lahf
and
mov
adc
mov
jecxz
loop
sahf
testb
nop
ds
cli
std
pusha
fmull
mov
xorb
sub
fisubl
mov
sbb
mov
jno
ljmp
cmpsl
fbld
jnp
rcrb
mov
fstl
pop
clc
add
lea
sbb
aas
js
jnp
mov
xor
jle
mov
pop
push
sbb
mov
aam
loope
xchg
mov
sbb
lcall
fs
xor
pop
roll
add
jne
scas
jb
adc
mov
loop
loop
sbb
pop
adc
repz
cmpsl
xor
in
andb
aam
sahf
js
mov
sbb
fwait
or
or
xchg
daa
push
cs
repnz
push
rcr
sbb
xor
pop
jo
fistpll
and
pop
fidivrl
push
and
mov
mov
test
out
out
fisttps
popf
cmp
fyl2xp1
into
fildll
fstpl
jnp
mov
aaa
adc
ds
cmp
scas
std
ds
mov
out
push
and
add
cli
push
pushl
aad
ret
pop
xchg
scas
sbb
cmp
in
xchg
bound
push
adc
xor
int
cmp
inc
pop
clc
mov
mov
mov
lods
aam
or
pop
fdivrs
jno
xchg
lock
mov
pop
mov
cld
jge
sbb
push
in
popa
sahf
aaa
dec
push
xor
jl
frstor
mov
cmc
out
inc
out
das
icebp
pop
sbb
ja
pop
pop
push
aam
sbb
push
cmp
js
xor
pop
dec
pop
fcomp
jno
push
fstl
lahf
jnp,pt
mov
test
fsubl
cmp
stc
push
fstpt
add
rclb
push
fwait
mov
mov
xlat
lret
popf
hlt
push
inc
fwait
mov
scas
movsb
sub
lea
sahf
into
pop
push
adc
imul
ficoms
xor
sbb
adc
icebp
mov
ss
sbb
lahf
cmp
and
fwait
xor
sbb
mov
clc
pop
add
inc
inc
data16
hlt
stc
inc
out
fsts
and
add
test
inc
addr16
out
sub
ds
fsts
jae
lret
sbb
xchg
push
mov
jg
push
dec
cmpsl
fisubrs
push
out
lahf
mov
mov
and
add
inc
out
fwait
rcl
cwtl
lret
mov
pop
push
jg
or
into
fcoml
call
divb
mov
and
mov
pop
out
sti
sbb
and
fisubs
aas
outsb
mov
adc
jp
out
loope
jecxz
lds
or
or
fwait
jmp
push
add
loope
pop
sbb
or
lret
and
push
idivb
add
push
fiadds
mov
ja
ds
add
jno
pushf
nop
lcall
popa
cli
stc
addr16
pop
mov
fstl
test
xchg
sub
sub
jg
sbb
xor
outsb
mov
dec
adc
push
scas
add
lcall
pop
jp
and
adc
sbb
ja
test
cmp
push
pop
hlt
add
xchg
repnz
pushf
adc
sahf
jnp
pop
push
pushf
pop
mov
in
push
and
stos
icebp
or
and
xchg
and
cmp
movl
mov
push
xchg
add
xlat
xor
ds
repz
xchg
aas
xchg
jae
adc
repnz
adc
jbe
mov
push
add
jo
mov
fdivs
int3
mov
and
pop
sbb
imull
nop
or
push
decb
ret
js
scas
push
cmp
cmpb
cwtl
call
and
lahf
adc
shll
xlat
test
xchg
push
faddl
test
repnz
cmc
lea
or
mov
dec
fdivrs
add
jge
out
add
inc
jno
loop
pop
mov
push
or
pop
push
sahf
pop
ds
mov
out
jg
sahf
cmpsl
add
int
inc
pop
lcall
cmc
sbb
add
and
add
shl
iret
hlt
inc
idiv
out
push
fld
lcall
cltd
mov
xor
in
mov
cmp
mov
sbb
inc
or
popf
out
cltd
sbb
stos
add
fwait
das
movb
jge
mov
pop
add
aas
ds
mov
sub
out
jmp
out
scas
std
loop
cli
push
leave
and
mov
add
pop
push
cmp
scas
cmpsl
cmp
mov
insb
sarb
mov
adc
add
cmp
xorl
add
dec
fldl
lret
sahf
adc
aas
push
xchg
scas
push
lret
lahf
adc
mov
dec
arpl
push
fdiv
jne
in
outsl
add
clc
pop
repnz
add
dec
lock
insl
mov
ret
or
cli
xlat
mov
mov
shll
stos
dec
repnz
and
test
test
pop
addr16
add
cmc
push
mov
stc
ljmp
out
out
scas
clc
in
pop
xchg
cltd
out
or
mov
or
xchg
jp
jg
jle
mov
fistpll
shrl
fdivp
push
lret
cmpsl
adc
cmpsl
xchg
aaa
addb
daa
int
hlt
jecxz
fbld
loop
xchg
xlat
or
out
movsl
mov
mov
and
mov
xchg
neg
or
lahf
mov
cmp
inc
jmp
cmp
or
scas
pop
test
fnsave
cmp
out
or
out
je
jl
movsl
pop
jge
push
pop
scas
inc
add
push
pop
sbb
or
pop
fiadds
jno
jno
mov
adc
pop
pop
fsts
testl
popf
mov
dec
outsb
xchg
or
push
pop
mov
push
push
mov
and
push
cmp
pop
pop
jmp
push
sbb
cmp
push
pop
cmp
dec
roll
mov
ret
lock
incb
push
aad
cmc
mov
nop
mov
mov
aas
cmp
pop
daa
neg
lahf
insl
stc
cmp
mov
fdivrp
sbb
iret
aaa
pop
mov
dec
sahf
jne
sbb
hlt
push
push
fstl
sbb
push
and
add
adc
dec
jo
negl
aam
pop
push
adc
add
call
push
rclb
pop
add
fwait
fwait
pushf
out
and
push
dec
rcll
cmpl
mov
sbb
into
add
lahf
mov
push
popf
decb
les
xchg
mov
jnp
loop
dec
adc
scas
idiv
pop
adc
loop
sahf
fisubs
dec
or
loope
mov
nop
adcb
dec
jmp
es
fistl
push
in
sbb
not
ficomps
popf
std
aad
movnti
test
in
pop
into
sub
mov
pushf
adc
xor
and
xlat
push
outsl
fstl
ss
sbb
inc
ja
push
or
push
addb
adcl
add
cmc
inc
inc
and
xchg
inc
scas
sub
clc
incl
and
cmp
inc
add
or
push
cli
mov
xor
jl
sbb
add
sarl
add
adc
mov
sahf
mov
mov
jge
add
adc
jl
jle
js
loope
xor
pop
lahf
fisttps
jnp
fdiv
fdivrl
sbb
adc
mov
call
nop
fwait
int
jns
push
fidivs
or
mov
mov
aaa
inc
movsb
or
scas
cmpsl
jg
xor
xor
inc
sbbb
out
xchg
push
pop
idivl
loop
inc
cmp
cmp
jge
push
push
jmp
ja
loopne
pop
pmullw
addr16
push
aaa
pop
cmp
lcall
mov
icebp
out
addr16
loope
imul
add
sbb
xchg
xchg
test
dec
inc
mul
xchg
adc
cmp
mov
in
push
xchg
xchg
mov
aad
mov
lods
or
mull
push
leave
out
pushf
add
pusha
mov
adc
xlat
dec
setge
mov
dec
sub
sti
jns
pop
sbb
in
out
comiss
jns
mov
out
add
lahf
cmc
sbbl
std
ljmp
test
xchg
xchg
daa
nop
xlat
jnp
jns
xor
pop
rcrb
ja
add
push
in
adc
aam
mov
std
pop
aas
mov
jmp
xchg
mov
daa
or
repz
pop
add
out
scas
or
sahf
scas
adc
lahf
pusha
add
pop
out
imul
stos
push
pop
push
mov
popf
fucomp
std
xor
cli
add
divb
aam
xchg
dec
cltd
xchg
jmp
cli
add
adc
jecxz
or
call
lahf
or
repz
fistpll
out
sbb
xor
mov
jge
xor
sbb
das
es
js
or
mov
dec
cmp
pop
cmp
js
ficompl
jmp
pop
or
mov
cmp
push
js
pop
cmpsl
lcall
daa
sub
data16
mov
add
add
add
add
add
add
imul
jl
scas
aad
add
lahf
es
sti
mov
mov
push
fnstcw
xchg
adc
xchg
sbb
jle
jne
fistpl
jb
scas
mov
sahf
sbb
xchg
pop
out
mov
cs
xchg
xchg
jl
jecxz
inc
clc
mov
outsb
and
leave
xchg
sarb
inc
pop
lret
cli
or
int3
cmc
popf
push
js
mov
push
ret
lret
xchg
mov
xchg
bound
inc
mov
jg
mov
mov
dec
jb
mov
pop
scas
test
popa
insb
fucomi
mov
or
xor
pop
int
pop
jecxz
sahf
add
lahf
insb
fldt
sbb
fnsave
inc
lahf
negb
aam
adc
mov
xchg
jl
or
mov
cli
sti
pop
je
push
pop
adc
xor
xchg
mov
xlat
leave
mov
lahf
and
pop
cli
jl
cmp
sbb
xor
push
std
cmp
push
outsl
or
iret
mov
pop
cwtl
cmc
cwtl
add
mov
or
sbb
inc
movsb
fwait
xchg
cmp
push
or
sbb
lods
pop
pop
out
out
mov
cmpb
fwait
push
cltd
out
incl
sahf
jns
sahf
out
sbbb
sub
call
add
loope
sbb
jnp
mov
sbb
cwtl
xchg
cwtl
add
sbb
int
faddl
test
hlt
or
into
pop
push
cmp
lahf
jno
ret
mov
popf
jl
pop
std
jp
sahf
and
pushf
pop
sbb
cmp
call
xchg
ret
fiadds
add
xlat
push
sbb
ficomps
dec
sbb
adc
dec
dec
sub
insl
mov
sub
add
gs
mov
out
xchg
cltd
aaa
push
add
and
mov
enter
or
jnp
mov
mov
push
sbb
jno
adc
repz
ja
stos
cwtl
sbb
fbstp
insb
repnz
jg
fwait
out
mov
or
ja
fwait
test
add
ljmp
mov
pop
aad
jb
int
jp
jno
iret
mov
in
sub
inc
scas
sarb
jg
pop
imul
mov
mov
mov
xchg
repnz
mov
lock
adc
sarb
adc
cmp
mov
out
stc
clc
sbb
mov
jp
cs
push
dec
sbb
loop
push
outsb
in
mov
test
add
or
add
nop
push
cltd
add
pop
mov
add
ds
adc
sbb
fsubl
xlat
mov
lahf
cli
inc
mov
rol
xchg
cmc
fwait
ja
xor
push
out
xchg
xlat
jnp
in
xor
pop
sub
les
das
outsl
nop
popf
adc
push
imul
adcb
push
scas
ja
add
cmp
in
aam
loopne
adc
add
adc
faddl
cli
addr16
and
loopne
daa
addr16
cs
stos
insl
pop
adc
xor
mov
ret
ret
jnp
negl
iretw
aaa
mov
lea
add
sub
cwtl
sahf
push
sbb
repz
add
xchg
js
sahf
inc
add
and
mov
pop
adc
ja
lahf
sbb
or
pop
push
loopne
adc
call
or
aad
ret
call
hlt
add
aas
sti
aad
ficoms
ret
xor
filds
fadds
jl
mov
in
aam
dec
loop
xchg
maskmovq
negl
jp
push
mov
cltd
mov
jle
iret
pop
sbb
cltd
cld
pop
mov
mov
add
cwtl
ds
ret
fisttps
xor
adc
dec
jno
and
pushf
adc
loop
std
cld
adc
jg
cld
xor
pushf
mov
cmp
jmp
std
clc
in
enter
pop
sbb
add
push
pop
lds
shrb
adc
pop
mov
dec
xor
lcall
scas
lock
inc
clc
inc
iret
sub
pop
rcl
scas
mov
fwait
scas
adc
in
ret
and
int3
cs
mov
xchg
repz
xlat
nop
aaa
mov
pop
mov
pop
cmp
jl
int3
ljmp
ljmp
repnz
jns
aas
sti
mov
pushf
jp
insl
shlb
mov
cltd
and
ss
jns
pusha
push
icebp
out
sbb
pushf
cmp
adc
rclb
dec
std
fildll
sub
scas
testl
inc
scas
xchg
mov
pusha
push
aad
testb
pop
mov
mov
stos
push
mov
push
in
push
adc
imul
cmp
mov
push
jmp
cs
aad
fisubrs
scas
dec
clc
call
unpckhps
mov
into
fistpl
ss
pop
push
out
mov
jecxz
out
cmp
dec
jne
repz
mov
sahf
push
push
lcall
lock
jl
or
or
mov
addr16
inc
xchg
jne
adcl
push
mov
les
push
out
push
pop
lcall
lcall
les
cli
pop
movsl
cmc
rclb
cld
dec
xor
std
adcl
mov
arpl
pop
sarb
mov
lods
cmpsl
pop
add
add
and
adcb
fidivrl
jo
add
andl
add
inc
outsb
lahf
fcomp
add
ljmp
or
addr16
fsts
jne
jbe
fstl
lods
mov
and
and
mov
jnp
inc
add
adc
pop
scas
pop
negl
popf
cmp
stos
sub
add
rcll
or
loop
lret
mov
sbb
push
sbbl
pop
and
adc
push
popf
push
jne
out
cmpsb
and
sahf
mov
sahf
inc
adcb
out
rolb
dec
insb
addr16
sub
push
out
pop
sahf
adc
adc
pop
jno
cmpsb
add
pop
add
push
inc
jnp
ds
andb
sbb
add
rolb
fldcw
scas
clc
loope
dec
dec
mov
xchg
add
loopne
inc
sub
outsl
out
repnz
dec
std
add
sub
mov
cld
add
lcall
fcoms
jle
adc
mov
sahf
or
lcall
xchg
or
mov
xchg
pop
jmp
ss
xchg
add
adc
icebp
sbb
push
xchg
test
lahf
pop
and
dec
xchg
out
push
sub
cmp
mov
loope
rcrb
outsb
popf
mov
add
insb
sbbb
aam
out
fistps
mov
lret
sbb
lcall
popf
and
push
push
sub
movsb
ljmp
idivl
aas
inc
inc
movsb
jmp
cmp
sti
pop
mov
cmp
jp
scas
je
iret
add
jmp
nop
add
lea
push
mulb
outsl
lret
imul
xor
ss
adc
sahf
add
xchg
sbb
mov
sahf
fidivrs
push
pop
cmp
xor
arpl
adc
loop
jbe
mov
mov
mov
pop
sahf
pop
pop
push
jg
mov
scas
xchg
pop
pop
ficomps
mov
xchg
ficompl
jne
daa
dec
fadds
jle
popf
js
fdiv
pusha
pusha
aad
add
mov
addr16
loop
dec
stos
push
xchg
cmpl
xchg
fs
imul
adc
push
xchg
adc
pop
push
ja
pop
add
scas
adc
mov
leave
xor
add
out
clc
loopne
fiaddl
andb
fstl
jl
cmp
sti
repz
mov
push
lea
mov
xlat
adc
pushf
mov
std
add
outsb
ds
or
std
sti
out
jle
loope
lea
sbb
and
xor
add
lahf
pop
lahf
cli
out
outsl
dec
outsl
jb
out
les
xchg
lret
dec
lahf
sarb
adc
xchg
mov
testb
jle
adc
xor
fisttpl
lret
mov
ret
mov
adc
sbb
jo
std
sti
and
std
xchg
mov
mov
or
push
std
mov
pop
sbb
repz
or
inc
notb
sbb
jne
sbb
stc
fcomip
clts
cld
xchg
lcall
scas
and
adc
sbb
xor
add
daa
jbe
adc
ret
iret
mov
xchg
lret
adcl
xchg
fwait
popf
into
ds
and
mov
aad
pshufhw
dec
jecxz
imul
popa
out
lcall
fwait
sbb
mov
add
jb
aas
call
mov
fistpll
pop
fwait
and
inc
jge
test
cmp
ret
aas
sbb
inc
sub
lcall
mov
xchg
pop
fsubs
mov
xchg
sbb
dec
pop
xchg
ror
aad
pop
into
orb
mov
add
dec
test
addb
xor
xchg
add
xchg
test
mov
push
les
jno
mov
jge
fwait
xchg
addr16
sub
sysexit
mov
testb
leave
mov
pop
xchg
scas
imul
jp
sub
adc
pop
pop
push
dec
mov
pop
ljmp
sub
sbb
push
int3
jp
adc
stc
add
mov
js
jnp
pop
inc
rcll
and
jns
mov
lret
fnstenv
inc
mov
xchg
mov
pop
loope
sub
jge
shlb
rolb
mov
cld
cld
out
stos
cmp
sbb
add
loop,pt
in
and
jecxz
jecxz
ja
out
hlt
push
scas
andb
imul
scas
rcrb
mov
pop
xchg
pop
push
and
jno
and
pop
jp
mov
jae
sub
xchg
xchg
jle
sub
fcomps
int
dec
out
push
sahf
push
scas
sbb
ficompl
mov
aam
and
shll
frstor
pop
sahf
pop
scas
add
adc
ret
mov
push
mov
ss
gs
push
jle
mov
cmpsl
adc
xor
sbb
movsb
jmp
sbb
int3
xchg
jp
or
lods
sbb
pop
mov
or
pushf
mov
popf
sbb
aaa
insb
and
cmc
call
hlt
adc
add
cmp
in
pop
seta
mov
jp
add
adc
sbb
xlat
notb
loop
cmpb
pop
adc
cmpl
inc
in
leave
loopne
mov
jp
ret
aas
out
pop
test
in
cmp
dec
lock
lea
jb
enter
sahf
cltd
push
fs
inc
sub
js
fistl
cld
sbb
inc
fldz
mov
mov
sahf
cmp
mov
scas
ret
jle
pop
xor
mov
or
fmuls
int
decb
scas
pusha
or
cli
pusha
ljmp
and
mov
dec
xchg
cltd
mov
sbb
lods
lea
mov
and
andl
dec
mov
mov
loop
in
jp
out
mov
iret
mov
stos
and
imul
or
in
jp
lea
ljmp
stc
sbb
call
cmp
xchg
sti
xchg
std
jge
mov
call
inc
xor
pop
mov
icebp
add
cmpsb
cmp
jle
mov
xchg
push
xchg
or
sbb
fists
jg
aaa
ds
add
pop
and
data16
popa
fwait
jg
out
add
call
xor
sub
and
ds
jg
mov
jns
adc
pop
test
movsb
adc
sbbl
mov
dec
push
js
lahf
xor
imul
or
jg
lahf
pop
in
popf
pop
sub
mov
ret
in
pop
fldz
fs
ret
jnp
repnz
loopne
push
pop
pop
outsl
sbb
mov
aam
js
xor
push
pop
movsb
pusha
lahf
and
push
sub
mov
jle
and
or
andb
add
mov
push
jl
pusha
loop
inc
and
push
or
inc
fstp
inc
xor
nop
mov
cmpl
ss
ja
clc
jbe
adc
dec
jg
shl
cmp
and
rcll
mov
xor
bound
pop
movsb
les
idivl
sti
adc
daa
xor
add
stos
cmp
pop
iret
xchg
pop
mov
adc
mov
pop
inc
xchg
mov
out
in
push
daa
dec
adc
mov
cmp
xor
adcl
negb
jl
outsl
dec
inc
outsl
inc
add
mov
xor
ret
mov
jmp
fwait
enter
addb
ret
scas
mov
xchg
inc
test
mov
loopne
sbb
jg
les
mov
lock
mov
je
add
xchg
jge
in
mov
add
sbb
loopne
jge
repnz
adc
pop
mov
pop
orl
add
xlat
inc
cmp
aad
pusha
add
mov
arpl
inc
cltd
int
pop
jmp
std
push
sahf
js
cld
jno
or
arpl
scas
push
jle
in
jno
enter
adc
je
int
pop
out
aad
xchg
out
std
and
dec
out
push
js
rcrb
pop
mov
ss
push
mov
jb
out
imul
push
loop
add
sbb
shll
clc
add
fadds
mov
sahf
movsb
cwtl
fwait
cmp
imul
aas
inc
in
add
sbb
jnp
sbb
pop
pop
test
or
stos
mov
adc
dec
popf
xchg
and
push
add
fsubrl
out
lahf
sti
mov
add
add
sub
pop
sub
sbb
arpl
jle
jno
jg
fidivrl
adc
or
insl
movsl
pushf
sub
pop
add
pop
pop
adc
and
mov
dec
push
loop
mov
fisttpl
aam
mov
rorl
je
mov
sbb
sbb
fcompl
jo
or
lahf
add
and
xchg
loop
lock
dec
cmp
negl
out
scas
mov
fwait
into
push
sub
push
sbb
sahf
sub
mov
daa
and
ficoml
into
xor
push
and
test
fwait
pop
jg,pn
sbb
mov
lods
jl
xor
sub
addl
and
add
mov
in
sub
jne
cs
in
adc
push
test
xchg
push
jp
test
loopne
lods
test
push
lret
mov
push
out
jl
adc
pop
push
mov
add
and
pop
jne
cmp
das
dec
stos
daa
sbb
mov
out
mov
fidivl
push
scas
cmpsl
mov
les
fildll
pop
popw
outsl
daa
divb
cmp
ret
pop
lret
test
lahf
jae
movl
cmpsb
sahf
sbb
jno
cmpsb
out
push
sbb
mov
cmpl
or
mov
pop
testb
jae
pop
nop
cmpsl
xchg
ficomps
subl
sbb
adc
iret
push
mov
mov
push
rcll
mov
pop
or
cwtl
out
dec
mov
cld
stos
pusha
aam
dec
adc
push
push
loopne
adc
push
mov
nop
bound
pop
lea
je
cli
jne
push
sahf
push
pushf
jmp
pop
movsl
and
sbb
std
or
pop
loop
lcall
adc
and
std
adc
in
outsl
xchg
jno
pop
mov
jp
or
and
xchg
adc
or
sahf
sub
adc
sti
mov
mov
lret
out
mov
ss
xchg
lcall
xor
jb
xorl
mov
dec
fstpl
mov
jl
sbb
lods
outsl
outsl
jnp
mov
xchg
fcmovnb
jg
mov
add
sub
add
mov
addr16
adc
cli
pop
or
add
cmp
jmp
int
popf
sbb
mov
dec
mov
xchg
ds
ja
sbb
bound
loop
inc
xor
lock
cld
push
call
sbb
push
xor
popf
inc
jns
cltd
xchg
mov
testl
mov
cmp
fidivrs
ja
call
addb
add
aas
mov
rcll
xchg
mov
fsts
nop
addr16
push
repz
push
aaa
jb
negl
inc
jnp
sub
mov
je
sbb
ja
inc
xor
adc
add
test
fmulp
jbe
add
in
popf
pop
pop
ret
pop
pop
std
call
shll
sbb
ja
test
cmpsb
pusha
inc
cmc
xchg
sti
xor
add
jecxz
adc
daa
xchg
test
ds
and
mov
pop
test
jmp
cmpsl
loop
hlt
add
fwait
and
mov
ljmp
mov
sbb
push
iret
inc
adc
sti
int
sub
imul
fcompp
sahf
inc
sti
sub
pop
out
sbb
mov
jno
pop
lahf
xlat
push
mov
clc
add
out
jb
aaa
js
pushf
jnp
lahf
and
fldl
fmull
popf
jno
repnz
and
cs
mov
ds
xchg
mov
sbb
xchg
mov
das
shl
inc
add
mov
push
xchg
xor
add
inc
mov
xor
shlb
sahf
pop
mov
or
fidivrs
hlt
dec
lahf
add
sbb
fisubrl
fisubrs
pop
fisttpl
andl
outsl
aad
out
mov
cmp
cmp
movsl
jmp
xchg
sbb
out
fists
popl
repnz
push
or
hlt
hlt
mov
clc
in
ja
cmp
int
leave
lahf
push
outsl
push
fsubp
fisttpl
insb
repz
jno
mov
in
push
stos
imul
lahf
cmc
imul
sti
xchg
lahf
add
movsl
sarl
mov
sahf
hlt
jnp
ja
mov
or
add
mov
dec
adc
dec
or
and
movsl
ret
test
test
adc
adc
and
js
mov
pop
cli
jo
lock
scas
mov
mov
in
cmpb
cmpsl
mov
inc
mov
inc
sub
jb
sub
pop
jno
adc
out
cs
cmc
popf
scas
lahf
hlt
icebp
sbb
push
inc
cmp
sbb
sbb
ss
leave
add
filds
ds
sbb
cmp
adc
pop
or
jnp
popf
idivb
jbe
xlat
ret
mov
push
in
cmp
dec
sbb
adc
xchg
lcall
addr16
sbb
mov
mov
mov
mov
test
cli
aad
add
mov
ficoml
push
dec
pop
sahf
aad
pop
loop
lcall
push
cmp
cmp
jb
mov
push
adc
push
fmull
cmpsb
popa
jno
loopne
mov
out
imul
adc
std
or
cmpsl
sbb
jno
mov
leave
push
jo
lret
sahf
or
jecxz
lahf
sbb
ja
mov
pop
pop
loop
idivb
sarl
hlt
daa
push
pushf
pop
hlt
testl
xchg
ja
ds
or
lock
sti
fwait
xchg
nopl
lds
mov
cmc
sub
push
pop
out
cmp
sti
pop
movsl
mov
fistpl
out
push
lahf
test
stos
cmp
and
push
jmp
add
lcall
aam
push
mov
enter
clc
and
push
pop
notl
jmp
test
shll
aam
fcmovne
scas
and
xchg
adc
pushl
popf
mov
test
sbb
ficomps
fistl
inc
cltd
lret
insl
ja
sbb
push
popa
add
pop
ds
mov
jmp
shlb
repz
pop
fbstp
aad
cmp
cmp
movsl
rorb
repnz
cmp
push
lret
movsb
outsb
bswap
fstpl
jmp
stos
cmp
push
fcompl
pushf
sbb
sbb
fwait
lret
ror
rcr
imul
arpl
jge
fimuls
aas
inc
data16
nop
pop
mov
push
popf
out
ror
inc
mov
mov
sahf
sub
stc
or
sub
xor
sbb
adc
test
ret
pop
add
xor
cld
xchg
pop
mov
fwait
mov
pop
pop
hlt
xchg
pop
js
sbb
jne
cmp
add
fstp
sbb
add
mov
pop
xchg
mov
mov
in
or
stos
arpl
popa
xchg
push
cmc
daa
pop
dec
and
or
ret
cmp
ds
mov
lcall
out
xchg
imul
testl
sbb
insb
loope
test
xchg
rcl
sub
sbb
out
mov
mov
mov
into
out
mov
xchg
imul
cli
mov
push
pop
fisttpl
jnp
faddp
jno
cmp
out
subb
push
sbb
hlt
jo
popf
or
dec
mov
enter
dec
or
aas
push
sub
test
pop
js
loopne
push
mov
jge
ds
lret
jb
lods
test
daa
mov
pop
push
dec
inc
popf
pop
fcoms
xchg
pop
int3
repz
jge
fwait
outsb
scas
jnp
adc
loopne
xchg
or
and
aaa
push
out
in
test
sahf
mov
xchg
jl
mov
or
jnp
cli
test
mov
and
xchg
scas
and
pop
loop
in
add
ret
mov
outsb
inc
add
call
pop
xlat
dec
adc
lds
into
jle
sub
fists
jmp
mov
shlb
push
insb
push
xor
gs
pop
pop
jp
inc
add
in
mov
aam
push
pop
add
mov
push
mov
jg
psllq
test
out
fwait
out
adc
mov
pop
and
popf
mov
mov
xor
push
dec
add
mov
adc
push
jnp
rolb
jno
aad
xchg
fwait
mov
scas
xchg
sub
pusha
add
mov
pop
inc
cld
mov
data16
dec
enter
scas
loopne
sbb
jl
mov
call
adc
icebp
mov
jno
jnp
gs
lcall
repnz
jl
cs
adc
mov
cmp
pop
aam
xor
mov
jns
enter
inc
mov
fisubs
mov
mov
and
shlb
aam
ret
cmpsb
fnsave
push
pusha
push
out
out
loop
or
add
mov
outsb
push
cmc
sbb
test
clc
bswap
inc
pop
mov
mov
jp
scas
jmp
or
rorl
in
sbb
mov
hlt
push
mov
inc
call
push
in
test
outsl
inc
ds
mov
pop
aas
negl
lret
push
call
sbb
sbb
aas
pushf
fwait
les
xorb
inc
loop
cmc
std
xchg
push
xchg
lcall
andl
movsb
stos
jns
jae
cmp
pop
daa
aaa
scas
aam
xchg
pop
adc
cwtl
lcall
jno
inc
xchg
mov
jg
mov
cmp
push
cmc
jg
pop
mov
add
mov
mov
fwait
sbb
adc
pop
pushf
xchg
ja
cld
popf
sbb
pusha
xor
out
sub
or
inc
out
out
popf
xchg
fwait
pop
lcall
roll
mov
mov
cmpsl
and
xchg
loope
pop
add
xchg
fildl
pop
js
cmpsl
adc
pop
inc
mov
adc
xor
fistps
xchg
jg
shlb
xor
cmpsl
adc
adc
pop
or
dec
cld
mov
sbb
add
sub
jecxz
mov
mov
test
fcmovnu
pop
fisubl
in
push
adc
sbbl
or
ljmp
sub
mov
pop
mov
lret
jmp
fdivs
add
lahf
mov
rcr
mov
adc
add
sarb
add
push
fsts
dec
sbb
pop
add
adc
mov
jmp
mov
movsl
push
push
or
popf
xor
cmc
hlt
js
mov
call
push
fdivrs
sbb
cmpl
push
decb
cmp
xchg
push
arpl
aas
cs
push
and
xor
data16
aad
xor
fucomi
ja
nop
xor
jae
dec
imul
cmp
gs
es
cmp
inc
dec
adc
stos
add
mov
adc
out
enter
lret
xor
mov
xlat
mov
cmp
outsb
and
add
add
out
cwtl
mov
and
dec
sbb
insb
add
mov
cmp
rclb
add
cmp
sar
out
cs
imul
adc
add
push
mov
hlt
mov
aas
add
rcll
mov
es
lret
ret
test
daa
in
lcall
dec
or
mov
pushf
jno
dec
or
pop
jbe
sub
lods
clc
mov
mov
arpl
push
or
add
jmp
or
pusha
mov
add
loopne
xor
mov
pop
adc
lods
sub
aad
xchg
add
push
gs
std
jns
mov
adc
aad
inc
insb
push
pop
pop
push
mov
scas
ljmp
scas
out
jmp
ret
xor
xor
sub
add
adc
pop
aaa
in
adc
mov
cmp
sub
pop
bound
jecxz
pop
out
mov
mov
push
adcl
or
loop
mov
xchg
sub
pushf
and
sub
mov
cmp
pushf
in
push
pop
popf
mov
loop
mov
sbb
lds
xchg
sbb
lcall
sub
lcall
movsb
loop
xchg
jno
and
inc
or
mov
cmpsb
jg
loopne
or
ret
and
pop
push
push
jae
popa
sbb
cmpl
mov
scas
or
pop
push
push
pop
jno
das
add
adc
jg
pop
pop
pop
cmpsl
jb
cmp
lahf
add
lret
sarl
mov
mov
push
mov
fiadds
aas
add
je
shrl
shll
hlt
lock
push
iret
outsb
adc
adc
sbb
std
dec
fimuls
sbbl
ds
and
sarb
call
add
push
pop
inc
xor
movsl
xchg
add
std
pop
xor
jno
jg
xchg
out
cmp
xchg
sbb
add
inc
jl
loopne
lods
jge,pn
fmull
sub
cmp
xchg
lret
sti
add
pop
mov
imul
pop
mov
sbb
popf
sti
scas
jp
decb
subb
pop
inc
jg
adc
mov
ds
jb
mov
push
push
fdivrp
push
sbb
adc
push
add
add
jmp
adcb
xchg
xor
mov
fisubs
enter
mov
ds
inc
shll
sbb
sahf
std
stos
lcall
sbb
sahf
add
sbb
aaa
repz
rcll
or
push
sub
add
push
aas
mov
into
push
sbb
pop
stc
jmp
pop
mov
xchg
sub
sbb
sbb
ficomps
or
jnp
mov
or
pushf
rcrb
das
cmp
jno
pushf
xchg
cmp
mov
stc
lret
sbb
sbb
insb
aas
lcall
jg
xchg
mov
sbb
adc
iret
mov
or
or
jle
call
cmpsl
fcmovnu
mov
push
pop
in
lgs
fmul
jmp
cltd
into
into
and
in
xchg
mov
sahf
sti
iret
mov
mov
aam
jg
add
sbbb
fsub
push
ss
es
rcl
ror
mov
inc
scas
jle
mov
sahf
int3
mov
pop
sbb
cltd
pop
jmp
jge
icebp
or
repnz
inc
cmpsb
int3
adc
mov
loop
test
aas
lahf
pop
xor
xchg
adc
call
aas
ss
call
stc
cmp
jle
add
std
xor
sbb
stc
mov
inc
lret
sbb
pop
push
pop
ljmp
leave
sbb
mov
popl
ss
adc
repz
xlat
push
mov
es
addr16
sub
sbb
sbb
popf
sbb
or
loope
imul
test
jns
pop
adc
xor
jle
sbb
jo
into
mov
sbb
insl
or
mov
adc
sbb
jge
push
roll
mov
pop
arpl
sti
sbb
sbb
or
into
stos
aad
xlat
sbb
xchg
loope
sbb
fldt
sahf
test
jge
sbb
out
das
aam
adc
or
xor
add
mov
mov
jmp
stc
push
mov
cltd
push
jp
or
ljmp
adc
pop
xchg
sbb
hlt
jge
cmp
mov
out
and
pop
roll
repz
xlat
pop
cmp
sbb
mov
push
xor
sahf
addr16
sbb
dec
cli
repz
cmp
xchg
pop
repz
or
dec
pop
cwtl
cmpsl
lds
push
mov
jle
insb
jnp
push
fwait
sub
outsb
sbb
fwait
out
sti
push
ret
inc
dec
or
lods
imul
sbb
inc
xor
in
lea
arpl
test
or
push
dec
xlat
ds
sti
push
push
sbb
cmp
mov
out
adc
push
jmp
cmpxchg
or
cmovns
rorl
push
fstpl
repz
fists
sbb
test
sub
jl
mov
out
sbb
ret
notb
adc
js
pop
jge
xchg
push
pusha
xlat
popf
push
or
xchg
imul
adc
loopne
sbb
test
or
pop
jmp
jmp
std
sbb
repz
adc
mov
cmp
aaa
mov
out
sbbb
push
xchg
stos
idivb
pop
pop
arpl
xor
pop
cmp
pop
jge
out
add
ljmp
sbb
mov
add
sbb
adc
mov
mov
adc
ret
loop
dec
fcmovu
negb
popf
incb
adc
jns
add
pop
adc
xor
pop
sbb
mov
sbb
sbb
sbb
cmpl
push
adc
sbb
iret
sbb
push
adc
sbb
aad
cmp
push
sti
adc
imul
repz
pushf
stos
aad
push
pop
inc
ret
jle
dec
fmuls
sbb
repz
lret
into
jmp
mov
mov
jge
les
mov
out
ljmp
or
ret
add
shlb
adc
xchg
outsb
sbb
fists
push
orl
lahf
add
push
or
adc
jge
adc
popf
enter
cmpsl
out
add
pop
dec
cli
paddsw
call
notl
cli
out
jl
loop
ficomps
pop
pop
xlat
jp
push
sbb
sti
sbb
into
outsl
stos
sbb
sub
jo
pop
fnstsw
mov
pop
pop
pushf
hlt
out
or
cmc
xlat
sbb
rorb
std
jnp
mov
push
movd
add
insl
stc
jb
outsl
jno
repz
adc
sbb
sbb
inc
ds
fcomps
rcrb
lods
add
mov
in
add
sub
mov
mov
aad
pop
xlat
and
or
cmc
sbb
xchg
adc
fwait
mov
xor
jb
pop
jg
lds
repz
pop
jno
or
sbb
jae
xchg
inc
or
leave
lods
push
cmpxchg
or
adc
repz
add
mov
and
add
mov
sub
test
fiadds
pop
into
movsb
scas
sbb
adc
mov
inc
lods
or
pop
js
out
mov
fidivrl
punpckldq
outsl
daa
repz
clc
sbb
fdivs
int
adc
mov
sahf
in
adc
sbb
or
lea
popf
xlat
adc
mov
jmp
mov
fdivl
mov
ds
sbb
shll
sbb
repz
cs
sbb
call
out
dec
jge
pop
mov
inc
pop
inc
arpl
push
test
mov
add
mov
add
add
push
fs
repz
adc
pop
pop
dec
push
pop
stc
sbb
cmc
adc
test
dec
dec
push
sahf
pop
mov
repz
mov
packuswb
xchg
sbb
dec
sbb
pop
sub
push
rorl
in
or
insb
shrb
sahf
sti
mov
fwait
cwtl
jle
popa
adc
sbb
push
and
push
lahf
loopne
ds
mov
pop
sbb
loope
cmc
sbb
pop
pop
sbb
or
cmc
sbb
adc
mov
mov
sldt
jnp
sbb
jnp
fisttps
adc
ja
out
push
push
push
or
ja
dec
add
pop
adc
jle
cltd
stos
mov
mov
sbb
enter
fisttpll
sbb
xchg
mov
stc
or
sbb
addr16
xchg
sbb
ret
pop
push
out
pop
or
aam
pop
sub
push
lds
sti
pop
add
out
mov
loope
rcll
scas
pop
xchg
ss
addb
cmp
les
add
inc
fwait
pop
cmp
mov
in
sbb
test
iret
fsubrl
push
sti
clc
cltd
ds
cli
movsb
out
rclb
jg
mov
push
sub
jmp
movups
out
lahf
fwait
sub
fistps
sub
lds
pusha
mov
pop
sbb
aam
add
cmp
fadds
sahf
fwait
push
pop
popf
in
sbb
fwait
loopne
mov
in
mov
sbb
mov
cmc
jl
adc
jl
aam
mov
cmpsl
add
cmp
sub
xor
xchg
xorb
nop
cs
into
xchg
sahf
lahf
loope
jle
aas
adcb
gs
imull
push
xor
ja
cli
cmp
adc
pop
pop
mov
sub
into
jbe
xor
xor
mov
pop
ja
xchg
jecxz
popf
xor
cltd
jae
push
sbb
and
and
nop
pop
jne
ds
enter
stc
loop
aaa
pop
push
mov
push
ja
jae
inc
add
jmp
ret
sbbl
dec
icebp
cmpl
in
in
add
add
dec
ds
add
mov
pop
loope
rcl
clc
sbbl
loopne
rcl
clc
sbbb
aaa
add
jecxz
ret
pop
mov
clc
inc
pushf
and
add
mov
clc
inc
pushf
and
push
mov
movsl
addl
and
dec
aaa
les
addl
or
cmpsl
in
xchg
addl
clc
pop
pushf
out
aaa
mov
addw
clc
or
test
orl
clc
or
test
mov
push
clc
or
jmp
ja
cmp
push
ljmp
lock
inc
test
cmpb
stc
fdivrp
xchg
push
repnz
jae
pop
adc
push
out
pop
ficoms
mov
push
aad
adc
mov
stc
adcl
mov
mov
dec
sbb
shrb
mov
mov
sub
outsb
mov
jl
ja
mov
adc
dec
pop
or
shlb
xor
fistps
not
jne
orl
sbb
push
xchg
bound
pop
sbb
adc
outsl
push
push
mov
xchg
std
push
mov
or
mov
jno
inc
push
popf
jbe
jb
jnp
outsl
xchg
mov
sahf
xchg
jle
ja
push
push
or
mov
call
rcrb
fisttpll
inc
aaa
xchg
push
or
xchg
icebp
mov
mov
int
jne
pop
push
or
popf
jo
popf
push
jo
adc
xchg
repnz
xlat
lock
aam
xor
xchg
pop
popa
add
aad
push
xor
xor
jl
sahf
nopl
push
push
sub
xchg
xor
xchg
xchg
sbb
push
rcrb
xchg
xor
sahf
ss
sub
adc
jo
lds
repnz
ss
adc
aaa
adc
xchg
cli
sub
or
sbb
adc
test
xchg
imul
xchg
jge
adc
out
pop
jne
xchg
pop
hlt
push
xor
fsubs
in
fistl
push
xor
pop
ja
cltd
adc
xchg
mov
insb
lea
mov
mov
mov
cltd
adc
sub
ja
xor
or
add
fildl
push
ja
mov
cmpxchg
out
xchg
repz
mov
in
lcall
xchg
enter
mov
lcall
mov
repz
dec
push
aas
iret
sbb
inc
iret
mov
xchg
mov
xchg
adcl
into
insb
pop
push
repz
mov
or
mov
pop
frstor
mov
int
xchg
pop
pop
popf
scas
data16
lret
pop
lahf
rol
in
xlat
mov
push
xchg
adc
mov
xchg
xchg
xchg
fildl
xor
ja
fwait
rclb
mov
push
jae
incb
xor
cmp
jae
push
pop
repz
in
std
fstl
stos
mov
repz
lea
xchg
or
mov
push
and
mov
inc
dec
cli
sbb
nop
and
jb
out
fwait
xchg
jbe
xchg
int3
adc
cmp
pop
xor
mov
push
shr
or
and
push
adc
xchg
mov
add
mov
subb
lret
mov
shlb
sub
outsl
cli
sub
nop
mov
scas
test
rcrl
std
jge
imul
rorb
push
add
push
sub
hlt
pop
sbb
into
gs
jbe
dec
daa
ret
imul
jmp
sti
enter
stos
pop
jmp
pop
lahf
and
rcll
cmp
shlb
fwait
mov
push
sarb
lea
jge
jmp
adc
and
test
xchg
sbb
push
cld
add
mov
mov
enter
cmp
fnstsw
fistps
rclb
xor
maxps
push
mov
jnp
mov
cwtl
xlat
pop
mov
aam
lahf
ljmp
push
mov
lahf
lahf
mov
sub
and
and
fcmove
push
and
xor
fisubs
or
mov
sbb
mov
sbb
dec
cmpsl
pop
and
xchg
pop
or
cld
stos
cmp
subb
test
dec
inc
iret
dec
fs
pushf
test
dec
rcr
cli
or
mulb
sbb
push
mov
fwait
mov
fcompl
sub
cwtl
jle
pusha
shll
std
cmpsl
sub
movsb
out
imul
pop
sahf
jg
mov
imul
push
mov
or
das
in
mov
dec
jecxz
jecxz
fistpll
lea
add
in
cwtl
add
pop
mov
mov
rcll
xchg
fs
xchg
jns
adc
enter
mov
cmpb
aas
rcr
ret
mov
dec
data16
icebp
mov
fstpl
rep
jg
cltd
mov
push
xor
out
sahf
rorb
dec
leave
xchg
cmp
inc
jle
cmpsb
mov
xor
test
cmp
xchg
jle
mov
aaa
pop
fimuls
xor
mov
popf
xchg
out
ret
push
repz
mov
iret
cld
pop
bound
leave
mov
add
or
pop
or
lahf
sub
xor
push
popf
inc
cld
mov
mov
nop
mov
sub
xchg
pop
outsl
nop
sti
into
sarl
push
loopne
adc
fiadds
cmpxchg
aaa
pop
jno
xor
xchg
je
in
sarl
pop
pop
mov
enter
cmp
mov
pushf
aas
aam
xchg
pusha
test
cmpsl
push
and
cmpsl
jbe
movsl
jbe
enter
psadbw
add
lret
xchg
xchg
leave
movsb
sahf
fwait
push
sub
sub
or
sahf
iret
pop
push
cmpsl
in
sbb
adc
ja
les
aaa
fiaddl
lret
into
sbb
mov
rcrl
dec
int
adc
or
scas
cmc
jo
idiv
out
push
xchg
cmp
sbb
sahf
push
shlb
xor
add
or
add
aam
xchg
cmp
add
fstpl
xor
cmp
outsl
testb
mov
fcmove
ja
xor
jne
fstl
sbb
mov
or
mov
ljmp
lea
add
cmp
int
push
stos
push
popf
add
pop
lcall
loopne
filds
cmp
mov
cmc
add
mov
in
into
xchg
outsl
fisttpl
addb
cltd
pop
fs
inc
xlat
cmp
jno
gs
or
pop
or
add
jnp
ds
sbb
and
sbb
nop
fidivrl
pop
xor
sbb
sub
stos
mov
mov
add
ds
loop
cmp
clc
sbb
xchg
mov
mov
gs
mov
and
clc
ss
or
pop
in
add
dec
popa
idivb
add
lds
push
cmc
mov
add
leave
pop
or
add
mov
fsub
js
pop
aad
mov
push
mov
scas
pop
pcmpeqd
mov
addr16
fisubrs
bound
pop
adc
pushf
adc
xor
ljmp
mov
xchg
or
xchg
orb
or
pop
fistps
inc
inc
sbb
out
jg
fbstp
mov
pop
ret
adc
push
cmc
mov
cmp
push
sbb
xchg
adc
out
fldl
arpl
andb
and
add
xchg
xor
nop
mov
pop
insb
fiadds
mov
incb
jae
pop
xchg
fdivr
cltd
xchg
xchg
repnz
dec
out
jge
xor
sbb
inc
mov
jge
stc
and
sbb
jno
xor
mov
outsl
adc
or
orb
pop
int
pushf
add
xor
add
pop
sbb
add
xlat
adc
jb
inc
xchg
cwtl
adc
pushf
orl
xchg
fdivrl
inc
mov
xor
repz
mov
nopl
and
insb
inc
mov
xchg
xchg
adc
mov
sbb
push
cwtl
pop
notb
push
or
cli
daa
daa
clc
sub
xchg
lea
out
push
and
lret
pop
adc
add
std
xchg
mov
xor
and
in
les
cwtl
mov
mov
daa
and
inc
lock
in
push
aaa
fcoml
icebp
xchg
jns
xchg
ret
jg
jno
push
cli
sarb
int
idivb
fsubl
jl
mov
popf
cmpsb
fldl
fwait
les
aad
or
inc
hlt
push
inc
in
xchg
loopne
out
mov
outsb
ljmp
mov
or
stc
cmp
aas
lds
shrl
jl
xchg
decb
cli
in
cmp
jne
int3
mov
xor
rcrb
sbb
add
push
xchg
mov
test
push
pop
mov
mov
pop
pop
lahf
movsl
mov
jnp
dec
inc
sbb
mov
roll
and
pop
cli
loope
jl
cmp
popa
fwait
inc
mov
fisubrs
and
frstor
imul
push
pusha
inc
out
push
decl
jne
mov
fucomip
sbb
dec
cmp
cltd
mov
sub
adc
cmp
or
pusha
dec
int3
call
add
mov
pusha
nop
int
addl
mov
lds
jo
sbb
in
mov
xchg
mov
cwtl
mov
ljmp
push
xlat
sub
xor
lea
pop
xorl
ljmp
and
in
sub
xchg
jl
sub
fstps
lahf
add
hlt
pop
clc
inc
jmp
mov
jnp
popf
lret
adc
pop
mov
dec
jmp
mov
orb
mov
lahf
stc
les
mov
lcall
cltd
or
mov
test
cs
pop
pop
mov
aam
pop
add
jno
mov
mov
lcall
jo
int3
fsubp
mov
xor
cltd
sbb
or
lret
rcl
jne
aad
aad
or
stc
hlt
scas
dec
loop
or
add
xchg
repz
sbb
cwtl
add
xor
mov
adc
ds
or
cmpsl
aad
mov
loop
dec
xlat
add
and
adc
cmpsl
pushf
lret
dec
test
mov
or
cmp
mov
aad
adc
outsb
cltd
inc
sbbb
andb
fwait
insb
inc
int
pop
lods
in
pop
fcompl
stc
xchg
repz
jmp
mov
mov
pop
std
pop
or
add
jbe
cli
in
inc
int
push
or
mov
mov
adc
xchg
xchg
std
fidivs
sbb
adc
stos
sbb
mov
das
adc
adc
inc
mov
add
mov
mov
sbb
outsb
jno
dec
mov
loopne
push
pop
lds
fcomps
cld
aas
push
pop
pop
std
imul
incb
jno
pop
outsb
jbe
push
pop
in
cmp
clc
adc
fimuls
repnz
aas
ds
xchg
jge
fcmovnu
outsl
xor
cmp
pop
and
movsb
imul
xchg
ret
sar
mov
add
sbb
xchg
in
dec
pop
imull
lahf
mov
punpcklbw
adc
sti
ja
adc
mov
lret
filds
mov
div
jg
test
lods
popl
add
shlb
imul
xchg
enter
mov
scas
lock
sahf
push
unpcklps
stos
ficompl
mov
ss
sahf
dec
xor
push
out
sbb
daa
ja
dec
imul
pop
scas
sub
dec
xchg
mov
aaa
xchg
cmp
mov
rcr
push
and
cmpl
sti
test
xchg
pop
clc
ffree
push
jnp
pop
popf
clc
sbb
cmpsl
cmp
or
enter
inc
inc
cli
pop
or
out
mov
jmp
cs
ror
add
sti
roll
ror
inc
pop
adc
repnz
add
inc
mov
push
pop
mov
cmpsl
adc
hlt
xor
jecxz
call
lods
and
mov
fildl
inc
push
sahf
insl
cmp
and
pop
push
adc
in
das
in
jnp
and
sub
out
xchg
xchg
mov
int3
jno
fsubrs
or
int
movsl
pusha
addr16
popa
aas
mov
fwait
pushf
cwtl
hlt
mov
or
outsb
outsl
inc
push
and
into
and
adc
lahf
nop
mov
sbb
mov
push
jp
dec
test
or
mov
out
add
jo
out
and
outsb
insl
pop
mov
mulb
push
xor
lds
idivb
cmc
mov
xor
cmp
jns
pop
mov
imul
pop
sub
pop
mov
scas
sbb
and
or
jno
pop
call
fists
mov
insl
or
push
out
ja
mov
adc
aaa
enter
inc
or
outsb
lahf
xchg
sbb
frstor
xchg
or
inc
mov
movsb
out
rcrb
cmp
push
pop
and
mov
and
cld
mov
daa
or
rol
jge
push
mov
push
mov
notl
jno
dec
lcall
or
and
repnz
out
cmp
rcrl
sbb
loopne
shll
aam
and
out
jno
movsb
push
mov
xchg
lods
sub
repnz
pop
xor
mov
loop
dec
cmp
setne
cmp
xchg
mov
aas
and
jno
mov
jmp
clc
enter
cmp
and
dec
addb
pminub
lret
fbld
inc
int
sub
cld
push
cwtl
ret
xor
sbb
mov
xor
xchg
xchg
mov
and
lahf
icebp
push
sbb
xchg
and
insl
sbb
test
hlt
pop
aad
sbb
jb
adc
into
xchg
lahf
and
ret
rol
fidivrs
mov
cmp
jg
imul
jns
je
cmc
push
cwtl
cmp
fstl
inc
pop
testb
addr16
xchg
pop
xchg
add
cmp
or
in
out
xor
div
jg
ja
dec
push
adc
push
sbb
nop
pop
out
ja
add
inc
jns
lret
jle
and
jae
sahf
cmc
je
ljmp
cmc
stos
call
das
dec
push
stos
int3
or
jns
xor
ljmp
sbb
pop
mov
adc
call
or
mov
pop
add
data16
push
jmp
fwait
mov
sbb
push
stc
add
mov
ret
xor
nop
sbb
jle
aad
repz
adc
repz
jg
aas
mov
or
sbbb
fildll
in
push
orb
loope
jbe
ret
cwtl
ficompl
add
xchg
pop
jno
dec
sti
lret
add
jbe
std
or
in
xchg
cmpsb
push
lahf
mov
mov
or
cwtl
insb
or
outsl
scas
ficoms
inc
adc
dec
fwait
pop
stos
in
jecxz
shlb
cmp
mov
std
test
and
jmp
scas
jge
sub
insl
gs
out
lahf
push
cmp
insb
in
ret
xchg
lods
fisttpll
in
sub
leave
xlat
fstps
add
icebp
stos
mov
mov
repz
fnsave
popf
mov
sbb
mov
pusha
mov
in
andl
or
mov
rcrb
cmp
adc
jns
pop
xchg
sti
in
or
pop
xchg
push
lahf
pop
jno
sarb
pop
sti
add
inc
sahf
sbb
pop
push
mov
inc
dec
paddsb
push
inc
sub
push
data16
fisttpl
lds
xlat
enter
imul
inc
leave
out
sahf
inc
ficompl
fildl
insb
xlat
push
dec
add
sbb
out
iret
js
jnp
jmp
ja
fldt
testl
mov
adc
mov
lcall
pop
jno
stc
subl
add
mov
in
fcomps
mov
add
cltd
mov
stos
dec
mov
pop
adc
fwait
jmp
inc
into
xor
fcomi
sub
imul
xorl
rcll
lahf
dec
int
push
iret
adc
cmp
xchg
mov
std
fwait
popf
fistpl
jmp
mov
inc
mov
xchg
bndstx
sbb
pushl
push
cmp
mov
and
std
data16
push
pop
je
cmp
xchg
cmp
sti
push
ret
xor
das
mov
dec
push
mov
sbb
test
xchg
les
pop
add
out
lret
cmp
inc
lea
cmp
rcrl
dec
cmp
push
or
out
xchg
or
xor
fwait
outsl
push
adc
mov
ljmp
push
jnp
pushf
inc
fwait
movl
fnstsw
fcomps
loope
popf
mov
push
mov
out
cmpsl
cmp
or
mov
sbbb
leave
pop
xchg
add
xlat
sbb
inc
in
psubusb
jg
subl
jg
jge
sbb
icebp
clc
ret
mov
push
and
mov
xchg
pop
fsubrl
add
sbb
jmp
fmul
push
iret
loopne
in
add
xor
fwait
and
aam
jle
test
mov
pop
or
mov
pop
jo
and
mov
jg
insb
or
jle
sub
pop
push
outsb
stos
push
rcl
mov
xor
inc
popa
push
xor
scas
push
or
jbe
pop
xlat
outsl
or
xor
xchg
add
sbbl
pop
fstl
push
sbb
xchg
cmc
cmpsl
mov
jg
mov
jg
pop
rcrb
inc
stc
pop
nop
cmp
loop
xlat
leave
jnp
adc
adc
sbb
xchg
out
pop
inc
orb
ds
push
push
cmpsb
sbb
imul
imul
xor
inc
pop
mov
pop
fs
outsb
insb
enter
add
xchg
jp
lret
fstp
jmp
xchg
mov
pop
pop
jbe
push
fldenv
inc
daa
cmpsb
xchg
int3
pop
jns
std
jmp
mov
jo
sti
push
mov
jo
lcall
sbb
out
dec
imul
dec
cmpps
add
stos
xlat
cltd
push
popa
hlt
cmpsb
loopne
push
out
mov
pop
and
fs
sub
inc
sbb
outsl
out
adc
adc
movsb
call
repnz
lret
mov
xchg
jne
sbb
lahf
cmp
inc
lock
add
add
dec
sub
adc
cltd
fs
pop
jg
jno
mov
rcll
mov
std
mov
mov
inc
jns
out
push
fbld
jle
cmp
adc
push
pop
adc
iret
jne
jae
out
int
idiv
push
xchg
mov
scas
ret
push
mov
daa
mov
sti
push
jle
ds
lahf
jns
adc
faddl
lea
aas
test
fbstp
mov
push
test
mov
adcb
pop
xorb
mov
sahf
push
mov
or
pop
bound
inc
dec
adc
hlt
addl
fldl
sbbb
jo
addl
push
out
sbb
mov
xchg
ret
xchg
xchg
pusha
ror
push
lods
stos
out
add
icebp
sub
push
std
mov
inc
mov
mov
adc
loop
int
xchg
add
outsb
out
fisubrs
jp
inc
dec
orl
int3
gs
ret
mov
mov
xchg
scas
stos
gs
push
push
lgs
mov
test
push
push
jns
sbb
jnp
jl
out
or
mov
jg
pop
pop
aas
push
pop
sbb
sbb
pop
aas
pop
orl
xor
ror
jmp
inc
pop
pop
lea
xchg
sahf
mov
mov
or
ja
sti
ljmp
cmp
or
packssdw
xchg
fdivr
pop
test
ror
mov
dec
rcrl
adc
mov
jle
dec
jo
dec
xor
outsl
test
movsb
ja
or
les
or
push
fildl
scas
leave
insl
outsl
pop
call
sub
mov
cmp
or
fildl
insl
pop
push
sti
xchg
imul
sbb
push
xlat
xchg
mov
or
mov
outsb
ja
xchg
or
testb
aam
pop
lea
mov
or
push
fistpl
push
push
and
dec
dec
into
jnp
ds
or
sub
leave
fistl
and
ss
dec
jecxz
mov
mov
or
add
push
scas
mov
arpl
js
movsl
ficomps
in
dec
and
mov
hlt
cmp
dec
dec
xchg
inc
add
adc
jmp
xchg
aas
jmp
nop
push
mov
add
jb
imul
xchg
pop
xchg
jle
push
sbb
and
jno
cmp
enter
jnp
lea
add
inc
lods
push
adcl
bound
fstpt
mov
imul
xchg
sti
add
lds
clc
je
lea
fisttpl
or
xchg
stos
call
jmp
clc
fnstsw
adcb
mov
push
and
lret
scas
and
sbb
adc
jo
add
sbb
cmc
mov
clc
aad
stos
jnp
je
push
sbb
inc
divb
xlat
int
push
outsb
int3
pop
mov
sbb
sahf
sub
push
cltd
sarl
xchg
cltd
incb
movsl
outsl
xchg
pop
das
ljmp
adc
dec
xlat
add
pop
sbb
cwtl
clc
cld
repz
adc
xchg
mull
xor
repz
into
iret
xchg
add
rcr
stos
sbb
xchg
pushf
cs
sbb
sahf
sub
fmull
sbb
call
lea
lock
xchg
xchg
outsl
inc
adc
lret
into
outsl
inc
jp
xchg
add
pop
scas
and
and
sahf
sbb
jecxz
sbb
mov
mov
add
lock
scas
out
imull
push
sarb
mov
sbb
scas
pop
xor
roll
leave
sub
ds
mov
es
mov
push
mov
jo
cwtl
roll
push
out
lcall
cmp
lods
fildl
popf
addb
xchg
cmp
popa
mov
mov
fildl
sub
jp
and
fadds
xor
sub
mov
xchg
stc
das
insl
cmpsb
in
sbb
ds
sbb
mov
pop
mov
mov
push
aam
jmp
jno
adc
mov
add
adc
cltd
outsl
inc
sbb
dec
mov
xchg
gs
negl
mov
add
adc
inc
fmuls
cwtl
sbb
fnsave
mov
lds
push
mov
mov
or
dec
and
cmc
andb
je
pushf
sahf
test
out
jnp
ret
nop
dec
bound
adc
jo
in
rcrl
ljmp
sub
nop
adc
addr16
cmp
xchg
insl
andb
je
rdtsc
or
cmpsl
pop
fists
mov
or
xchg
add
fidivrl
pushf
cmp
pop
mov
push
scas
cltd
and
orl
jle
mov
push
fidivrs
cltd
pop
test
add
movsl
add
add
push
loop
in
cli
push
add
loope
cli
and
inc
popf
xchg
or
and
lcall
stc
in
daa
push
negb
dec
fwait
jnp
test
popf
push
pop
mov
outsb
xchg
imul
add
push
fs
and
pop
mov
add
or
xor
ds
cmp
push
sub
loopne
lahf
mov
dec
fsubp
popf
push
rcrb
test
ss
rorb
and
and
ret
push
dec
mov
push
pop
imul
movsl
scas
js
sbb
incb
jnp
push
pop
stos
xchg
or
fiaddl
xchg
int3
pop
or
stos
aas
push
inc
pop
shll
in
xor
fisubl
sbbb
popf
cltd
imul
divb
mov
idiv
mov
push
add
adc
xchg
cmp
int
cmp
jbe
mov
and
mov
loope
mov
jo
push
xchg
dec
push
adc
enter
es
je
dec
subl
fwait
pushf
sbb
clc
std
popa
push
jmp
jl
les
lret
inc
mov
ja
pop
addl
std
and
push
jl
push
jge
cmp
xlat
mov
test
test
or
push
test
mov
sbb
pusha
ret
cltd
aam
adc
or
xchg
jmp
pop
popf
mov
clts
push
mov
sbb
lcall
jne
or
xlat
jns
mov
xchg
or
jne
sbb
sahf
inc
mov
xchg
push
fistpl
pop
orl
repnz
add
repz
or
mov
shl
push
jle
add
xchg
mov
xchg
mov
cmp
mov
aas
fisttpl
xor
enter
mov
rolb
test
mov
ficomps
orl
aaa
mov
push
pop
popf
adc
loopne
repz
std
xorl
sub
in
enter
dec
pop
xor
pushf
push
dec
loopne
data16
cmp
xchg
sbb
jb
xchg
mov
xchg
sbb
xchg
lcall
repz
sahf
aaa
adc
xchg
adc
dec
jo
xchg
jg
pushf
divl
or
push
push
sbb
cmpsb
lahf
cltd
fadds
mov
dec
pushf
mov
xor
out
ja
insb
pop
lret
or
add
jnp
push
faddl
shll
and
mov
sub
mov
xchg
xor
sar
scas
jle
pop
loopne
pop
adc
adc
jle
aad
popf
jp
iret
sbb
mov
ljmp
into
pop
arpl
jne
and
rcrl
inc
ret
or
jl
sbb
jmp
sub
mov
lcall
lret
rcrb
sbb
cld
xor
cltd
jmp
ds
push
shll
mov
fwait
pop
push
stos
adc
cli
scas
js
pop
fimuls
sbb
je
icebp
and
mov
push
shl
xorl
ja
testl
test
dec
xchg
fwait
push
nop
pop
outsb
push
rclb
setp
mov
out
push
pushf
fdivrs
sbb
mov
les
xchg
pop
jge
in
pop
add
repz
sar
cwtl
movsl
adc
subb
inc
xlat
push
outsl
ja
mov
push
aas
xchg
xchg
cmp
out
xchg
ficompl
ss
xchg
inc
mov
nop
mov
fsubp
sub
mov
lcall
lods
and
xor
sbb
adc
in
test
inc
out
mov
lds
stos
lock
outsl
cmpl
fstpl
fwait
jns
or
jg
lcall
cmp
scas
adc
ds
push
fwait
out
cwtl
sbb
inc
fidivrs
sbb
pop
roll
add
aad
add
jnp
mov
mull
jnp
cmpsl
cltd
pop
loope
xchg
lret
test
inc
std
xlat
push
in
push
xchg
mov
lret
or
sahf
lods
xor
lcall
in
inc
or
xor
push
scas
adcl
aam
ljmp
mov
dec
sub
dec
enter
xchg
sbb
lock
cltd
popf
std
call
or
lahf
sbb
xchg
cmc
addl
subl
out
test
lcall
xchg
sbb
mov
pushf
in
jmp
cmc
mov
lea
xchg
sbb
mov
sbb
cmp
fistl
out
cwtl
in
std
xchg
flds
cmc
xchg
pop
xchg
jmp
xchg
or
sbb
repz
repnz
div
popf
xchg
int3
cld
lahf
cli
pop
lcall
cld
mov
std
adc
nopl
xchg
cmp
sbb
fstps
fwait
sbb
sbb
pop
xchg
sbb
xchg
sbb
sbb
jnp
fstps
sahf
jnp
fstps
pop
jnp
fsts
lahf
jnp
cmp
pop
lea
pop
inc
add
mov
sbb
cmp
fstpl
mov
add
add
sbb
int3
adc
push
lea
fadds
xchg
test
addb
pop
or
xchg
xchg
mov
xchg
or
push
in
or
popf
fwait
in
mov
add
in
mov
mov
in
fdivrp
xchg
std
add
and
notb
lods
imull
push
out
fadds
adc
mov
sub
pushl
push
or
push
lds
adc
in
adc
fistpll
mov
mov
out
jo
sub
jp
xor
fbstp
push
xor
negb
mov
outsb
jno
ds
je
push
adc
lahf
xor
in
sub
fildll
movsl
inc
hlt
test
fimull
xchg
sub
aaa
es
jns
pop
mov
call
cmpsl
bsr
sbbl
and
jbe
out
mov
cmp
loopne
nop
fdivrl
push
lret
sbb
or
dec
shrb
pushf
sbb
push
cld
sbb
add
jge
into
add
popf
push
stos
pop
fnstcw
pop
add
fisubl
pop
das
ljmp
leave
mov
outsb
scas
lds
mov
lahf
sbb
or
push
je
sub
jne
lret
jno
jmp
mov
pop
sub
test
push
sub
mov
scas
test
fldenv
jns
and
jne
repnz
mov
leave
loop
mov
ret
add
pushf
mov
fsubrl
jg
out
iret
inc
dec
testb
movsb
jnp
ret
out
test
into
test
lret
xchg
jle
jno
or
enter
mov
and
lcall
sub
mov
dec
cmp
jl
jl
aad
mov
ds
aas
fsub
push
filds
out
outsb
mov
pop
sbb
cwtl
adcl
sbb
stc
subb
jg
hlt
mov
test
mov
inc
adc
push
subb
cmpsl
fwait
cmp
sbb
push
movsb
mov
mov
cli
or
mov
pop
cli
pop
push
cli
cli
adc
pop
push
stos
sbb
sbb
pop
jg
in
mov
jns
mov
testl
repnz
lahf
aas
mov
xor
push
out
cmp
xchg
fisttpll
ficompl
mov
and
mov
mov
xor
mov
sub
scas
push
mov
mov
jge
sub
push
test
js
xchg
cmp
std
inc
in
sbb
addr16
fdiv
clc
popf
push
daa
repnz
sub
push
xor
cmpsl
cmp
cmp
mov
negb
std
and
add
mov
xchg
xchg
fwait
xchg
dec
pop
push
adc
and
into
xchg
pop
cld
lahf
jbe
ja
jle
lahf
cmpsl
or
mov
xchg
and
test
mov
dec
sti
push
mov
cmp
std
sahf
pcmpeqw
pop
andl
cmpsl
pop
cmpsl
lcall
out
stc
loope
loope
loope
loope
dec
dec
sbb
and
or
cwtl
les
scas
adc
jno
out
jne
bound
dec
icebp
xchg
sub
lods
mov
mov
sbb
mov
aad
mov
out
arpl
push
cmpsl
jo
xorl
outsl
pop
mov
mov
xor
mov
adc
mov
xchg
je
ficomps
cmp
jmp
cmp
mov
pop
fsubr
fistpl
mov
sbb
jge
sub
mov
pop
adc
jp
mov
and
stc
mov
push
cmp
inc
outsb
icebp
neg
xchg
mov
mov
and
jno
mov
mov
leave
incl
notl
mov
cmp
mov
push
stc
mov
fcmovnbe
xchg
addr16
dec
sub
adc
push
ds
jg
rcrl
pop
mov
pop
movsl
pop
fmull
insb
lret
push
cmp
pop
ret
pop
repnz
push
inc
adc
jnp
divl
xlat
mov
fistl
pop
push
pop
sub
std
scas
pop
fdivrl
xchg
inc
mov
out
loop
cmp
pop
jp
push
icebp
repnz
int
mov
neg
ret
jmp
jecxz
cmpsl
fsubrs
jb
andb
lods
fs
scas
loop
or
add
cmp
mov
and
and
inc
outsb
popf
mov
enter
into
xchg
jge
or
or
lcall
jg
inc
scas
ret
add
mov
mov
add
cld
cmp
mov
fdivrp
scas
and
mov
mov
loope
cmpb
xchg
pop
pushl
adc
or
mov
mov
dec
stc
out
sarl
sub
into
sti
jmp
loope
sbb
fadds
lahf
mov
push
xlat
inc
scas
pop
inc
pop
lahf
or
mov
mov
lahf
xor
insb
push
stc
mov
and
inc
lahf
nop
cmp
sub
dec
idivl
add
dec
add
fidivs
push
lds
pop
andl
mov
cltd
outsl
sahf
lret
shrl
and
inc
jle
js
pop
dec
xchg
in
andb
sbb
sbb
mov
xchg
ret
outsb
xchg
mov
inc
aas
sbb
cmp
jne
call
loopne
icebp
lds
lret
mov
pop
pop
add
in
lods
insb
jo
mov
inc
std
mov
add
adc
pop
adc
scas
addr16
fcomps
call
add
cli
dec
adc
fcoms
mov
jnp
mov
lcall
cmp
aad
adc
rclb
jecxz
stc
adc
lret
adc
add
pop
lahf
and
mov
and
push
ljmp
xlat
lahf
rcrb
dec
into
jb
fwait
outsl
cmpsl
mov
push
sbb
push
and
xchg
mov
les
cli
mov
mov
ret
into
pop
push
test
out
ficompl
mov
bound
push
out
rolb
pushf
cmc
fildll
or
pop
push
jecxz
ja
outsl
mov
in
dec
push
aas
mov
loope
mov
adc
pop
call
jge
lret
push
mov
sahf
fcomi
std
nop
repnz
sbb
ja
cmp
push
out
pop
lea
push
jns
adc
sbb
push
pop
jge
icebp
mov
inc
scas
in
popf
rclb
xchg
mov
scas
ficomps
pop
pop
jecxz
pushf
insb
std
popf
fst
fiadds
std
pop
pop
sbb
popf
ja
adc
stos
jge
jmp
inc
or
push
jecxz
ja
mov
or
adc
lcall
js
cmpsb
dec
mov
lea
push
ret
pusha
inc
mov
mov
rorl
das
pop
aas
loop
mov
sbb
incl
icebp
movsl
mov
popf
sbb
rolb
xchg
repnz
pop
and
pop
imul
pushf
ljmp
mov
push
dec
shrl
clc
push
pushf
in
dec
aaa
int
lods
in
lea
insl
orl
clc
or
int3
mov
insb
orl
adc
scas
in
popl
outsl
orl
clc
setl
dec
aaa
into
mov
outsb
orl
clc
adc
mov
xchg
pop
jno
push
shll
clc
adc
mov
nop
pop
jo
push
shll
clc
adc
repz
aaa
sarl
jae
push
shll
clc
adc
mov
xchg
pop
jb
push
shll
clc
push
pushf
cmc
dec
aaa
aad
mov
xchg
jne
xchg
push
shll
dec
aaa
aam
mov
xchg
pop
je
push
shll
sbb
mov
daa
mov
aaa
adcl
or
xchg
pushf
jbe
aaa
push
mov
stc
sbb
mov
dec
aaa
pop
mov
clc
sbb
mov
dec
aaa
pop
mov
lcall
push
cwtl
adc
jecxz
push
cmp
fadds
pop
xchg
shll
mov
stc
pop
outsb
xchg
push
fistpll
inc
andps
xchg
les
pop
andb
mov
jno
scas
mov
pop
dec
movsl
out
insl
cltd
mov
fucomip
sbb
pushf
mov
sbb
jmp
hlt
mov
mov
ss
es
dec
jmp
adc
add
and
xchg
imul
cs
sbb
aad
pop
or
mov
insl
in
xor
dec
outsb
adc
rorb
add
stc
inc
mov
jno
pop
minps
xor
xchg
mov
push
loopne
scas
xor
adcl
add
dec
pop
in
ficoms
mov
and
jnp
pop
xchg
push
insb
mov
fstps
cmp
dec
loope
test
clc
add
scas
pop
or
sbb
dec
movl
es
stos
dec
add
mov
ficoml
stc
movsb
adc
inc
push
sub
pop
es
jle
push
scas
adc
clc
xor
or
scas
mov
stos
ficoms
or
adc
movsl
ret
nop
cwtl
xor
jecxz
imull
data16
ljmp
xchg
and
pop
fisubs
and
ret
sahf
or
sbb
xor
into
jg
fsubrl
les
pop
aad
ficoml
dec
insl
pop
in
inc
ja
mov
sahf
and
xchg
fnstcw
ds
add
push
rcr
fidivs
mov
jmp
in
out
jecxz
aas
cs
rorl
test
sbb
test
jnp
je
xchg
cwtl
jle
fisttps
pop
mov
jl
push
jnp
and
inc
into
xchg
mov
cltd
std
or
cmp
test
dec
jmp
fstl
ss
nop
rcll
imul
div
cmp
and
pop
push
adc
pop
and
push
out
rcrb
es
sub
pop
out
xor
insb
inc
mov
out
inc
fwait
inc
sbb
nopl
pop
stos
in
popf
push
adc
lahf
out
aas
mov
incb
es
je
xchg
daa
scas
inc
scas
adc
test
and
xchg
xchg
sbb
ljmp
out
inc
dec
push
adc
pop
fisttps
mov
lret
xor
xchg
push
cwtl
fucom
lea
pop
xchg
add
cmc
push
mov
test
sbb
mov
jns
test
xor
flds
mov
dec
cmpsl
inc
xchg
stos
sbb
mov
xlat
jle
fsubrs
lret
xchg
popl
lcall
cmpl
inc
add
jmp
add
push
call
inc
push
pop
int
push
outsb
jbe
xor
shrl
xchg
rorl
in
sbb
popa
rorb
lea
cmp
fs
ljmp
xchg
and
js
sub
fsubs
in
rcll
mov
outsl
jg
addr16
out
popf
mov
or
pop
paddusw
and
setb
out
fnstcw
xorb
clc
mov
pop
sarl
push
cmpl
arpl
sbb
aad
dec
shll
mov
aam
mov
nop
push
fistps
sub
push
or
mov
pop
movsb
sbb
and
add
aad
mov
pop
je
xchg
add
popf
insl
mov
mov
sbb
shll
add
xchg
loopne
pushf
mov
mull
rcrb
repz
push
out
adc
lods
jns
std
popf
adc
seta
xchg
mov
arpl
sahf
cltd
pop
sahf
lahf
divb
ss
aad
jne
in
lret
and
pop
sahf
pop
add
jecxz
cltd
pop
not
ja
sub
out
ret
pop
jno
sbb
push
lahf
out
aas
pushf
movsb
fidivrs
enter
out
mov
push
notl
hlt
and
aam
xchg
lahf
mov
lahf
cmp
iret
pusha
and
pushf
dec
and
jecxz
pop
lcall
fadds
pop
test
sarl
stos
fstpt
add
rcrl
lea
inc
pop
pushf
xchg
push
jno
cmp
cwtl
in
bound
gs
or
push
lahf
pop
lock
dec
jno
je
mov
fisubrs
adc
add
push
jb
inc
xchg
mov
or
xchg
cwtl
es
jae
test
jno
mov
repnz
mov
pop
cltd
mov
test
lea
sti
push
fsubrs
mov
xchg
xlat
repnz
push
jbe
xchg
xchg
jae
mov
rcll
stos
fdivs
pop
or
jge
popf
pop
inc
push
test
sbb
pop
mov
xchg
lock
sahf
xor
or
aad
pop
pusha
ret
dec
xor
std
test
lods
lahf
aam
lret
push
sbb
pushf
mov
out
mov
mov
sbb
pop
adc
enter
push
adc
adc
lret
inc
outsl
fdivp
adc
aas
sbb
jb
repz
lret
cmpsl
test
lret
xor
and
leave
lods
sbb
andl
fsubs
xchg
rorl
jb
std
loop
insl
repz
xchg
add
push
push
push
or
dec
lahf
jle
push
mov
inc
mov
add
mov
adc
adc
xchg
paddq
lahf
in
bnd
rcll
adc
push
or
dec
mov
ja
push
mov
iret
or
test
rcrl
sahf
lds
ja
xchg
sbb
mov
push
clc
push
dec
jno
fimuls
adc
dec
cmc
sahf
jl
fwait
xchg
xchg
xchg
xchg
xchg
repnz
repz
movsl
cmp
sbb
fbstp
xchg
mov
adc
inc
adc
rorb
outsb
aaa
clc
adc
test
ja
rcll
adc
arpl
xor
xor
sbb
out
lahf
mov
insl
adc
lret
sahf
shll
xchg
mov
or
cmp
inc
popf
aam
dec
xor
adcb
enter
sbb
adc
fwait
add
sar
sbb
and
pop
loope
cmp
sbb
fwait
xchg
push
rorl
call
out
aam
push
adc
sub
fwait
mov
mov
push
cld
pop
cld
pop
lahf
xchg
stos
push
add
cld
add
add
sahf
fisttps
lds
mov
and
push
iret
jge
cmpsl
divb
aas
mov
std
xlat
lock
inc
fnstenv
jge
inc
mov
add
out
sahf
std
or
popl
and
xchg
mov
popf
decb
and
nop
jns
xchg
sbb
ret
jae
mov
into
testb
sti
add
aaa
fwait
mov
xchg
and
mov
pop
shr
cli
sbb
das
sahf
fwait
sar
out
orb
imul
roll
xchg
pop
xchg
out
push
fnstsw
mov
std
setbe
pop
adc
push
lcall
pushf
jmp
and
notb
xchg
ss
xor
cli
xchg
or
xor
outsl
or
lock
jp
imul
mov
pop
xchg
repz
pop
cwtl
std
adc
adc
push
sbb
sbb
js
les
xchg
in
and
add
push
and
push
pop
adc
sbb
cmpl
aas
fildl
sbb
xchg
add
icebp
mov
decb
unpcklps
cmpsl
sbb
jg
sbb
pop
out
xchg
mov
xor
mov
dec
aaa
add
notb
pop
aas
dec
ds
inc
sub
negb
mov
jl
jge
adc
sbb
push
in
mov
sbb
std
sbb
imul
mov
pop
or
xchg
pop
sbb
sbb
xchg
xchg
cltd
push
or
nop
mov
dec
sbb
xchg
sbb
pop
jl
pop
push
leave
test
out
in
mov
and
aas
sub
std
sbb
pop
fstpl
movsb
lret
sbb
cli
push
fstpl
std
jnp
sbb
sbb
push
pop
sti
push
les
fistpl
xchg
add
jo
push
ss
repnz
shlb
push
adc
test
push
sbb
popf
loop
adc
add
xor
in
jmp
std
xchg
pop
xchg
mov
push
jge
adc
loope
cld
cwtl
or
pop
das
push
sbb
mov
negl
cmp
lea
outsl
ds
sub
xlat
push
aam
push
addb
adc
pop
pop
pop
sahf
in
mov
xchg
pushf
outsb
in
sbb
or
sbb
push
cli
dec
jmp
loop
xchg
int3
sti
ficomps
leave
xchg
inc
pop
jg
sbb
inc
push
movsl
std
add
xchg
jne
out
icebp
fnsave
fwait
outsb
pop
lods
in
ljmp
test
aas
mov
jle
out
popf
popf
dec
or
lds
movl
std
xor
mov
inc
fistpl
sbb
fistpl
sbb
or
xchg
mov
decb
cwtl
and
pop
cld
xchg
negl
rcrl
test
sbbb
sbb
pop
mov
xchg
pop
or
pop
imul
cli
xchg
adc
xor
jl
add
xchg
sti
lahf
pushf
cmp
sbb
cwtl
or
mov
cld
adc
movlps
filds
xchg
imul
push
cli
aad
push
loop
jecxz
cmp
push
std
add
xlat
sub
lret
xchg
loopne
aaa
ficomps
arpl
jp
ljmp
xchg
jns
inc
sub
add
add
call
mov
jmp
mov
movsb
leave
orl
aad
mulps
int
fwait
sbb
pop
xchg
hlt
sti
hlt
andb
sbb
xchg
repnz
adc
sar
std
lahf
push
pop
cltd
lock
pushf
cld
popf
rcrl
add
adc
cld
push
ds
ffreep
jecxz
loop
loope
loopne
loopne
loopne
pusha
mov
cmp
mov
decb
xchg
add
add
or
shlb
add
sti
xchg
pushf
sti
pop
fidivrs
outsb
jmp
cmc
pop
sbb
mov
sbb
leave
sbb
inc
mov
lahf
rdmsr
cwtl
aam
fstpt
cli
cmp
in
xchg
repz
out
ret
es
inc
adc
adc
xchg
pop
incb
setbe
std
sbb
push
xchg
nop
sti
push
pop
adc
dec
cmp
mov
lods
xchg
jns
pop
adc
add
sbb
xchg
cld
or
das
loope
mov
mov
pop
sbb
sub
mov
lea
dec
std
push
sahf
or
mov
add
or
dec
fbld
cli
filds
notb
mov
xchg
push
push
add
outsb
cmpsl
adc
mov
push
xchg
push
scas
push
gs
xchg
jno
and
mov
repz
sahf
xor
jmp
pushf
inc
outsb
pop
js
jne
or
sbb
gs
pop
filds
cltd
and
mov
sbb
sbb
mov
rcrl
jmp
jne
push
mov
jbe
and
in
or
fldt
cmc
mov
cmp
push
cmpsl
pop
loop
cmc
add
sub
in
push
shl
push
mov
push
sub
adc
push
cli
push
mov
jp
mov
imul
lcall
es
jno
jns
fwait
lds
or
and
jmp
pop
aaa
rcr
cltd
sbb
fs
aad
xchg
add
ljmp
sub
push
pop
jp
imul
xor
mov
lret
out
cltd
xchg
mov
andb
data16
jle
clc
pop
cwtl
dec
ret
rorl
mov
mov
push
sub
or
mov
lds
bound
pop
dec
and
push
fildl
lahf
mov
divb
xchg
dec
xor
std
jp
jmp
sbb
push
mov
daa
outsl
xor
pop
mov
lods
jae
push
cs
pop
inc
jecxz
arpl
test
daa
xor
lcall
jo
mov
sbb
jle
inc
inc
xor
icebp
or
ss
jmp
jle
adc
jecxz
sub
sti
jne
cmp
cld
adc
jmp
inc
loopne
mov
fstpt
mov
scas
jle
clc
test
xlat
or
fildl
pop
imul
stos
test
into
mov
jge
addr16
iret
lods
fcmovnu
lcall
xchg
scas
mov
fisttpll
inc
sbb
adc
jle
inc
push
in
cmp
gs
cmp
mov
xchg
lahf
adc
outsl
out
push
ret
cmp
psadbw
lock
and
push
in
mov
inc
xor
xchg
addb
jno
sub
pop
and
pop
mov
xchg
mov
jne
adcl
into
sub
push
jle
or
mov
sbb
mov
andb
pop
popf
in
cmp
mov
or
ds
aad
mov
add
es
cmp
sub
ret
pop
fwait
add
push
add
dec
jp
popa
scas
sbb
pop
jno
call
cmc
idivb
mov
sub
and
add
push
idivb
std
mov
jecxz
xchg
nop
push
aad
inc
jp
add
adc
push
data16
fstpt
mov
lahf
loop
out
mov
int3
icebp
mov
jne
mov
aas
xchg
push
lahf
test
cmp
inc
sbb
cld
xlat
mov
fistpl
xchg
fstpt
scas
xchg
test
pop
popl
mov
pop
nop
rclb
ficomps
and
iret
rorb
sub
pop
int3
call
enter
mov
sahf
or
testl
scas
insl
cmpsl
mov
outsl
and
mov
mov
loop
mov
ja
push
daa
jo
xchg
idiv
ja
fidivrs
inc
jp
into
pop
mov
loop
push
hlt
rcrb
jl
mov
add
imulb
ds
std
push
jbe
ljmp
mov
decl
js
test
fwait
cmp
hlt
lods
or
cmp
xlat
mov
xor
sbb
pop
hlt
push
lret
push
mov
cld
xchg
test
hlt
sti
push
fisttps
clc
out
or
jnp
adc
sahf
or
nop
aam
sub
sbb
pop
setle
push
mov
or
push
call
ja
cltd
dec
sahf
int
inc
or
repnz
and
loop
push
je
inc
xchg
loopne
out
mov
repz
pop
xlat
int3
cmc
pop
ja
xchg
div
std
scas
adc
xchg
lods
flds
cmp
daa
mov
sbb
lea
icebp
add
pop
xlat
subb
mov
or
js
pop
dec
adc
fcoml
jne
or
test
hlt
dec
push
in
ficoml
lcall
jno
push
adc
outsb
pop
pop
adcb
inc
pop
adc
shrl
push
std
testb
inc
hlt
adc
add
fadds
xor
fsub
push
jo
push
mov
sbb
jge
aas
add
inc
adc
fiaddl
jns
and
or
mov
loope
clc
hlt
jge
mov
repz
or
insl
bound
jg
sbb
pop
out
jle
into
int3
pop
sub
fistps
add
shll
and
push
ficompl
pop
movsl
xlat
lods
mov
xor
push
jmp
sbb
sub
or
int
repz
sub
mov
push
shll
mov
inc
jne
cmc
push
add
es
scas
adc
mov
cltd
or
and
stos
cmp
pushf
pop
adcl
jns
sahf
xchg
add
jge
into
jno
pop
push
movsb
sysret
mov
sub
imul
push
mov
arpl
sbb
testl
in
jl
mov
mov
ljmp
arpl
add
inc
mov
pop
xor
and
lret
cmp
jle
and
pop
mov
clc
dec
sahf
push
in
cmpsl
neg
push
or
cwtl
or
xchg
mov
cmp
xchg
push
push
mov
in
stc
shlb
pop
ret
ret
mov
lea
fnsave
push
inc
shlb
mov
mov
mov
jecxz
arpl
popf
or
xchg
push
jle
and
adc
lock
loop
xor
pop
add
mov
out
xchg
sub
mov
lds
jmp
push
mulb
mov
pop
push
and
mov
adc
xchg
cwtl
add
mov
sub
sub
push
aas
inc
clc
pushf
sbb
or
cmpsb
add
das
fimull
out
dec
rcl
or
rcrb
pop
pusha
push
mov
jmp
std
int
pop
mov
dec
sbb
scas
in
adc
and
fcomip
divl
and
cmpsl
popf
ljmp
out
repnz
addr16
sti
xor
push
jmp
inc
mov
xchg
xlat
nopl
lret
mov
mov
fnstsw
or
pop
add
jne
dec
test
leave
pop
jg
and
shll
out
xchg
fs
xor
or
mov
idivb
or
fucom
shlb
sbb
int
or
imul
or
sbb
push
lahf
jmp
cmp
xchg
icebp
pop
mov
pusha
fxch
pusha
sbb
jae
push
out
div
aas
push
js
sbb
leave
cmc
stos
lcall
fildll
stos
add
fwait
loopne
dec
dec
das
js
adc
jno
push
pop
mov
mov
push
cld
sub
cld
iret
pop
mov
add
adc
int
hlt
push
cmp
cmp
inc
mov
pop
leave
mov
jbe
jno
add
pop
sbb
sbb
jo
fistpl
jl
sbb
adc
out
push
pushf
cltd
test
push
and
pop
cmp
lea
add
mov
icebp
sarl
mov
mov
clc
mov
dec
mov
push
adc
es
inc
cwtl
pop
sti
mov
mov
fucomi
pop
dec
jge
out
int
xlat
push
adcl
adc
jne
push
leave
sbb
jno
pushf
or
adc
and
mov
cmpsb
push
bound
push
mov
sub
pop
fbstp
lock
push
out
jmp
mov
lret
aaa
sub
and
add
cmp
xlat
int
mov
cltd
pop
mov
mov
scas
sub
faddl
pop
push
sbb
cltd
out
rcr
cwtl
add
js
out
sbb
push
push
push
clc
je
jae
pop
adc
add
push
lds
mov
cmc
sub
add
out
xchg
add
into
imul
jo
mov
pop
sbb
push
andb
pop
jg
jo
and
pushf
das
pop
insb
add
arpl
mov
lock
dec
pop
scas
mov
mov
es
pop
mov
inc
mov
and
and
mov
popfw
pop
aaa
xlat
movsl
cmp
fldenv
out
pop
sti
out
and
xchg
ds
das
mov
out
out
mov
mov
inc
sbb
push
aad
jns
add
or
adc
hlt
ds
mov
stos
fwait
push
cld
idivl
out
scas
add
nop
jbe
sbb
mov
push
mov
pop
lcall
adc
cmp
pop
dec
sbb
adc
dec
popa
mov
lods
imul
lcall
gs
and
daa
aam
clc
sbb
clc
adc
mov
pop
sbb
test
ds
int
push
mov
cld
cmp
mov
inc
inc
popf
insl
jg
jl
hlt
lahf
pop
add
adc
mov
call
ss
mov
das
push
inc
xchg
add
pop
shlb
jle
cwtl
jbe
out
sbbb
fistl
pop
lahf
cmp
pop
sarl
push
jmp
sub
repnz
out
cmp
xchg
adc
sbb
cmp
loop
in
and
pop
int
xor
out
inc
push
test
popl
mov
jmp
fucomi
pop
scas
jo
shll
and
imul
mov
test
or
sti
inc
js
mov
enter
rorl
call
mov
pop
test
cmovb
xchg
int
lcall
das
pop
add
dec
jo
fwait
adc
gs
stos
jno
push
loop
push
mov
ja
push
push
pop
xchg
pop
and
push
std
sahf
add
loope
xchg
rolb
jl
test
jns,pt
mov
dec
aam
and
push
xchg
subl
sti
std
loopne
inc
lahf
push
sbb
aam
add
push
cmpl
dec
push
cltd
add
call
jp
jg
dec
int
imul
pop
xchg
adc
sbb
add
fcmovu
pop
pushf
jnp
mov
xchg
je
cmpsl
mov
call
mov
loopne
jg
add
jg
enter
mov
jecxz
push
imul
leave
frndint
nop
mov
cmc
clc
in
sbb
repnz
and
test
push
pop
cmp
out
push
lahf
clc
sti
xchg
cltd
fistpl
push
bound
sbb
mov
clc
jg
push
sahf
aas
pushf
push
pop
lahf
xchg
fs
outsb
imul
in
adc
test
add
orb
test
push
pop
add
les
shr
adc
cmc
lds
rclb
or
shll
xchg
pop
mov
fwait
pop
aam
cmc
xchg
mov
jno
in
hlt
test
inc
loop
fsubrs
xchg
inc
xlat
stc
hlt
stos
mov
mov
cltd
sahf
mov
repnz
stc
movsl
mov
mov
jns
xchg
push
jge
jbe
jmp
mov
xchg
mov
popa
jl
fwait
mov
sbb
mov
xor
psrlq
mov
nop
fstl
sahf
mov
mov
sub
cmp
movsl
push
jp
movb
outsl
jne
fucomi
sahf
orb
ss
push
pop
mov
lock
lcall
popa
into
cmp
ret
add
imul
xlat
testl
nop
fisttpll
cmp
sbb
xchg
jmp
loope
arpl
pop
std
xlat
shr
fisubs
jl
movsb
pop
mov
xchg
lcall
mov
test
fdivl
sub
sbb
insl
push
lods
mov
into
xor
imul
xchg
fisttpll
notl
xchg
imul
fstps
pop
out
mov
sbb
fcmovb
adc
pusha
in
outsb
addl
push
xchg
mov
mov
cltd
or
sbb
jno
jmp
popf
pop
push
cld
add
aad
imull
out
popf
outsb
push
fdiv
pop
push
loop
ss
xchg
pop
push
cli
pop
sbb
test
push
xchg
adcl
leave
div
xchg
leave
addr16
fldcw
setp
pop
or
popa
stc
adc
inc
push
sbb
push
xchg
cwtl
xor
mov
adc
pop
popf
sbb
out
pop
call
xchg
shll
mov
cmp
adcb
repz
sbb
aad
xor
mov
pusha
cmpsb
mov
push
imulb
inc
dec
push
xor
add
pop
cmp
cmp
mov
stc
imul
mov
testb
push
jecxz
rcll
popf
inc
sbb
jg
push
and
jp
cltd
aaa
xchg
daa
lahf
orb
imul
mov
pop
pop
cmp
aaa
sahf
push
xor
jp
mov
lcall
icebp
xor
push
hlt
sbb
repz
insl
dec
test
test
sbb
push
fstps
adc
mov
adc
notb
test
in
std
add
push
aad
jns
push
inc
dec
sbb
cltd
mov
jp
jae
mov
xor
div
scas
addr16
inc
mov
pop
jae
jns
bound
jp
outsb
push
in
fadds
cmpsb
push
pop
xchg
and
aam
cld
xor
inc
in
loop
cmc
sub
xor
pop
loop
mov
outsb
push
mov
fdivr
sbb
sbb
inc
or
lds
jge
int
add
aad
jbe
pop
in
sbbb
sub
sar
dec
cwtl
xchg
rol
dec
das
adc
fstpt
jnp
and
adc
cmp
popf
fbstp
mov
fwait
ja
in
fxch
adc
xchg
mov
pop
jae
ficomps
dec
pop
aad
andb
inc
jbe
sub
cmp
mov
push
aam
pop
repz
decb
adc
sbb
enter
jae
xlat
fisttps
hlt
fs
fdivrl
out
mov
lahf
scas
adc
jae
jge
adc
and
clc
inc
in
mov
inc
ja
and
add
inc
shll
lcall
andb
pop
jne
adc
jno
int
xchg
movsl
stos
ljmp
loope
sbb
xchg
cmp
leave
popf
sbbb
movsl
cmp
dec
pop
aaa
mov
adcl
cmp
outsb
cmp
xchg
popf
mov
std
sub
repnz
imul
fisttpl
sbb
inc
pusha
sub
pop
jns
cmp
mov
cmovne
dec
push
sub
mov
out
mulb
dec
lea
add
fwait
inc
shr
mov
pusha
inc
mov
sti
movsl
mov
jbe
pop
test
stc
clc
dec
in
mov
sbb
jae
stc
push
jp
fcoml
pop
sbb
stos
adc
negb
fcmovnbe
lods
scas
aam
dec
push
pop
add
jg
or
fnstenv
mov
jno
xor
cli
push
and
repnz
push
ror
aaa
push
cmp
add
jns
fistpll
icebp
and
xsha256
cmpsb
adc
jp
dec
push
je
mov
xlat
sti
sbb
dec
into
jo
pop
pop
pop
xchg
or
pop
mov
inc
jle
mov
hlt
int
shll
or
jp
sbb
xchg
call
arpl
add
mov
imul
sbb
in
cmp
jnp
inc
xor
fnstsw
jns
inc
xlat
cmp
fs
fwait
push
cmpsl
mov
jmp
mov
or
adc
ja
dec
shll
mov
shl
cmc
xor
mov
and
mov
sbb
aad
cmpsb
jle
jmp
movsb
add
lods
add
jle
loope
push
pop
ret
adcb
xchg
lcall
fs
cmp
xor
cmc
cmp
inc
adc
xchg
pop
repnz
pop
or
push
add
mov
outsb
pop
jg
setp
jne
inc
and
cmp
cli
lcall
pop
lret
mov
imul
mov
rcr
stos
mov
std
ljmp
adc
mov
mov
add
popa
add
sahf
xchg
xor
roll
adc
mov
xchg
sbb
pop
or
inc
add
loop
sbb
mov
dec
mov
jg
inc
pusha
xor
getsec
pop
fwait
add
stc
inc
jns
in
push
inc
or
shlb
xchg
adc
pop
clc
jecxz
idivl
jp
scas
arpl
pop
and
fsub
fistpl
cmp
sub
jae
xlat
and
xchg
lea
jle
test
lcall
mov
nop
push
push
jnp
or
sub
sub
idiv
dec
ds
cltd
sarl
ss
popf
mov
stc
cmp
insl
xchg
mov
push
xchg
outsb
std
inc
mov
imul
popf
lret
xlat
lea
cmpsb
icebp
ja
shll
push
mov
inc
mov
xchg
lods
adc
mov
pop
xor
mulb
xchg
push
mov
mov
rolb
jno
fidivs
outsl
shll
iret
pop
pop
push
sbb
add
in
out
or
jno
sahf
fimuls
loope
mov
fstl
mulss
pop
sbb
lods
ficomps
mov
movsb
adc
push
xlat
js
sbb
leave
pop
idivb
pop
or
popf
js
in
cld
mov
jp
fimull
pop
mov
sbb
push
fwait
pop
sbb
lcall
inc
push
sub
pop
jmp
or
sub
nop
xor
ljmp
ja
clc
rcrb
adc
mov
sub
cltd
jo
or
pop
xchg
pushf
into
jp
cld
xchg
movsb
jg
inc
pop
stos
outsl
fs
push
mov
push
mov
inc
aam
inc
out
mov
in
outsl
fistl
aam
pop
std
push
lods
pop
fcmovnu
rolb
fwait
ret
jae
xchg
pushf
sbb
lcall
push
pop
xor
cmp
cltd
filds
outsl
test
push
add
cmp
xlat
mov
cmpsl
jmp
mov
xchg
push
js
in
fmuls
imul
lahf
aaa
add
ficomps
rol
sub
fistpl
pop
jge
lods
mov
sbbb
fdivl
push
movsl
popa
clc
outsl
cmp
sbb
out
test
jae
and
mov
mov
adc
aad
sub
negb
das
loopne
pop
shl
pop
fs
push
xor
leave
add
push
push
ss
outsb
pushf
cmp
mov
fwait
lahf
add
rorb
inc
jo
outsb
mov
in
mov
jle
adcb
ret
scas
mov
popa
lret
sbb
into
cli
push
mov
add
cmp
popf
shll
push
or
call
push
clc
lret
mov
push
popf
or
rcl
pop
dec
inc
xchg
out
lret
dec
mov
inc
inc
and
sub
inc
adcl
dec
dec
fwait
push
je
std
sub
fcoms
cmp
fisttpl
pmaxub
lret
xchg
sbb
pushf
cmp
xchg
push
negb
rcrl
pop
shl
mov
out
mov
out
add
lock
sub
push
bnd
cwtl
sahf
outsb
or
shll
aam
fiaddl
mov
test
jp
add
fwait
out
nop
dec
mov
call
jno
es
mov
fldt
gs
mov
xor
jnp
xchg
inc
sbb
add
test
fwait
xchg
push
pusha
mov
out
es
pop
xor
ss
inc
pop
jo
pushf
cmp
jae
out
cmp
xchg
xor
roll
divl
mov
out
ret
mov
popa
pop
aaa
mov
popf
subb
xchg
pop
xchg
jns
aas
add
lds
iret
pop
int3
loop
jecxz
out
nop
mov
stc
pop
das
data16
pop
xor
adc
nop
push
imull
in
pop
aad
roll
jmp
push
aaa
pushf
mov
lahf
xchg
test
ret
gs
push
pop
push
ldmxcsr
faddp
cmp
int3
sahf
mov
sahf
ljmp
outsl
mov
fistpll
sbb
mov
stos
jp
mov
sbb
jo
or
inc
pop
jg
mov
jle
fsub
sub
push
in
inc
cs
jae
sahf
xor
aaa
adc
repz
sbb
sti
jp
hlt
xorl
or
jno
imul
stc
std
add
mov
push
daa
ja
mov
mov
jge
sub
cmp
testl
push
fstpt
leave
int
xchg
subb
jge
pop
adcb
mov
cmc
push
mov
fcompl
imul
xchg
bound
lret
leave
gs
sahf
sub
xchg
sti
sbb
add
or
negl
pushf
fstpt
gs
ja
sub
repz
mov
jns
fucomp
add
loope
repnz
cmpl
pop
mov
in
jae
pop
adc
repnz
imul
sbb
xor
scas
add
sub
mov
ds
idivl
test
imul
jle
xchg
rcr
nop
or
sbb
jne
and
pop
push
inc
pop
sub
mov
pop
out
mov
or
jo
je
mov
and
mov
clc
repnz
jnp
mov
fldt
scas
jbe
push
ret
mov
loop
jge
fwait
clc
leave
test
adc
push
cltd
in
data16
testb
xor
jecxz
inc
sbb
shlb
xor
sbb
iret
push
jl
sbb
push
push
jnp
leave
sbb
mov
adc
xchg
fwait
je
push
jg
pop
mov
cmp
fists
sub
jp
fs
mov
mov
xor
sbb
loop
ds
xchg
sahf
pop
and
ficomps
push
dec
mov
jns
mov
add
cli
mov
add
mov
aam
mov
pusha
addb
push
fisubrs
pop
jg
loop
xor
call
push
mov
cmc
cwtl
out
loope
push
aam
mov
cltd
lret
dec
cltd
addr16
jmp
rcr
inc
fwait
jge
add
xchg
or
and
test
xor
xlat
mov
inc
push
pop
mov
jno
or
push
xor
add
push
push
mov
sub
mov
sub
jecxz
jle
popf
scas
fidivl
xchg
sti
pop
mov
std
or
cmp
sahf
xchg
sbb
out
rorl
push
negb
xchg
cltd
out
mov
pop
lcall
push
cmp
add
out
pop
adc
fwait
addr16
pop
fstp
fstps
cmp
mov
shlb
cmpsb
cmp
cs
mov
inc
cmp
repnz
icebp
mov
int
nop
ret
orl
and
pop
push
lods
adc
imull
pushf
lds
fcmovne
sti
ds
lds
sahf
fcmovbe
fisttpll
add
add
es
imul
popf
sahf
lcall
jne
jae
dec
pusha
sbb
test
dec
push
popf
sti
mov
cs
fcoml
jle
inc
push
pop
hlt
lods
lahf
push
push
out
fdiv
push
popf
add
inc
cld
stc
je
addr16
mov
or
pop
xchg
dec
cli
sbb
sbb
stc
cmpsl
stos
pop
inc
cld
stos
mov
fisttps
ss
out
sbb
xorl
mov
xlat
cld
cmpl
pop
jns
jecxz
xlat
cmpl
cld
dec
adc
xchg
mov
push
push
sahf
pop
cmp
pop
pushf
cmp
pushf
xor
pop
push
test
adcl
shll
adc
adc
rclb
push
sbb
popf
push
push
push
xchg
jne
pop
insb
fcmovnu
pop
popf
aas
pop
mov
push
inc
int
mov
inc
pushf
lea
inc
push
xchg
subl
inc
sbb
inc
add
add
fcompl
pop
mov
fdivrs
mov
mov
pushf
sbb
xchg
xor
ret
pop
out
adc
movsl
pop
fbstp
mov
xchg
out
notl
mov
xchg
push
mov
pop
rcr
loopne
cmp
pushf
jmp
sub
pop
pop
jp
mov
xor
pop
ud1
xlat
addr16
pushf
sub
add
xor
jns
addr16
add
inc
nop
jmp
pop
mov
push
sbb
sbb
test
pop
daa
sbb
cli
popf
or
inc
aad
andb
mov
std
xlat
ja
bound
test
js
push
jne
jp
mov
aam
das
fisttpll
sub
pushf
jmp
lcall
add
push
add
adc
and
fdivrs
in
cmp
jl
jle
xchg
xor
push
int
adc
ljmp
jge
aam
xchg
push
mov
daa
add
clc
lret
jge
mov
lret
mov
mov
in
inc
sub
push
jne
dec
insl
push
gs
fisttpl
jge
mov
push
mov
ja
out
dec
mov
ss
push
lock
fimull
jmp
add
lds
and
sbb
xor
aad
mov
cmp
jbe
fsubl
mov
jmp
sub
pop
pushf
push
popf
rorb
adc
test
pop
push
lcall
push
and
push
test
sub
sti
cmp
std
sbb
pop
enter
mov
mov
push
push
fstpt
and
pop
fistl
or
fidivs
mov
fstl
xchg
pop
sub
xchg
mov
fisubs
jl
xchg
cli
stc
loope
sbb
xlat
insb
push
nopl
pop
aas
cmc
and
jmp
inc
pop
xchg
outsl
or
sub
in
add
pop
mov
fsts
mov
push
cmp
mov
mov
in
rcll
inc
int
add
push
inc
xor
jmp
sbb
fadd
lcall
mov
sub
add
scas
push
pushf
loop
aam
mov
push
loopne
divb
clc
out
stc
iret
cmp
iret
in
pushl
shlb
adc
pop
dec
hlt
pop
hlt
repnz
push
mov
fisubrl
fmuls
std
ja
pop
pop
pop
ja
mov
add
xchg
fdivr
and
push
push
fstl
pushf
faddl
sbb
or
jmp
in
sbbb
sub
mov
scas
aas
xchg
int3
fidivs
mov
sub
stos
jmp
push
xlat
ds
lods
pop
scas
or
mov
add
pcmpeqb
lea
shrl
jge
lahf
fstl
aam
mov
int
xchg
mov
cmp
aam
cmc
ret
mov
popa
jl
outsb
xchg
dec
sti
aas
out
std
in
cmp
nop
movsb
leave
push
inc
or
mov
sbb
xchg
cmp
sti
in
mov
dec
dec
sbb
nop
pop
sub
in
cmp
mov
or
xchg
scas
pop
in
sbb
popf
sbb
scas
push
mov
in
mov
xchg
push
and
xor
sahf
aas
cmp
shl
inc
inc
cmp
jo
bsf
jle
mov
jp
dec
xchg
xor
nop
jmp
in
insl
push
cmp
inc
jns
int3
scas
mov
inc
mov
push
pop
iret
es
jo
idivb
mov
inc
dec
mov
arpl
dec
pop
add
and
mov
jno
fwait
lret
add
cmpl
jne
inc
scas
mov
inc
cld
divb
adc
adc
add
sbb
dec
mov
or
xchg
mov
push
out
push
push
xlat
adc
sti
icebp
rorl
out
pop
imul
int3
aad
xchg
sbb
lahf
jp
and
out
popf
loope
sub
mov
pop
negl
adc
int
ret
sahf
fidivs
push
jno
jmp
dec
shrl
pop
mov
lret
mov
lcall
stos
dec
push
out
cld
lret
xor
mov
mov
inc
mov
adc
pusha
xor
add
add
pop
clc
in
mov
or
cli
cmpsb
into
pushf
mov
call
loop
xorb
movsb
jno
ss
adc
lea
mov
inc
test
inc
sbb
mov
mov
sarl
sbb
mov
lock
fcoml
mov
stc
leave
pop
xor
mov
call
inc
filds
stc
cmp
pop
cmp
mov
int
adc
mov
xor
push
cli
sbb
fwait
jle
cwtl
mov
scas
fiaddl
xchg
mov
or
scas
xlat
mov
lahf
mov
mov
je
lods
outsl
lds
mov
mov
fimuls
xchg
sub
roll
test
mov
rorb
imul
test
xchg
xor
in
cmp
fsubs
movsb
add
adc
shll
mov
xor
out
mov
fcomp
in
or
les
add
test
xchg
xchg
rcrb
push
jge
test
out
nop
aad
cmp
jnp
pop
test
sbb
push
cld
test
cli
push
add
mov
or
add
jg
adc
xor
push
adc
adc
cmp
push
cmpb
out
push
xlat
mov
jge
xchg
cmp
sbb
mov
mov
les
sbb
pop
xor
mov
lret
and
sbbl
adc
mov
push
test
outsb
cltd
lcall
xor
push
cmc
dec
mov
lcall
xchg
fdivp
outsb
rclb
dec
loopne
cld
stos
push
pushf
rcrl
in
sbb
xchg
adc
sbb
mov
or
jp
sti
pop
xchg
pushf
mov
mov
mov
or
popf
in
scas
adc
xchg
mov
sbb
out
adc
fstp
mov
sbb
xlat
lcall
repz
xlat
xor
cmp
popa
jae
mov
xchg
and
xlat
sbb
outsb
jbe
cmpsb
and
dec
sub
fwait
adc
ret
std
outsb
push
popf
jg
sbb
pushf
popf
test
lods
jmp
jno
inc
scas
add
adc
movsb
mov
fcmovnu
pusha
sub
xor
dec
push
push
cmp
call
jp
mov
jnp
in
les
sti
fucomip
mov
cmp
pop
xor
subl
mov
imul
xor
xor
fists
push
pand
lcall
push
leave
mov
sbb
inc
cli
mov
xchg
into
or
loop
neg
ljmp
mov
sub
cmp
popl
xchg
pop
sbb
sub
add
lcall
std
jle
inc
rcrl
sbb
pop
sti
add
pop
push
jle
dec
lcall
and
out
ss
mov
jg
out
sbb
sbb
lods
fsubrl
mov
sbb
mov
ss
sti
or
fimull
notl
sahf
mov
jge
hlt
mov
mov
inc
lahf
sti
jbe
inc
sbb
ret
mov
pop
jp
mov
repnz
aas
xchg
mov
xchg
cmp
out
out
adc
cwtl
jo
sbb
sbb
add
xchg
xchg
pop
dec
popa
adc
fisttps
mov
loop
xor
and
push
xchg
loop
pop
dec
mov
jg
jne
and
add
cmc
pop
cmpsl
fistpll
jecxz
mov
mov
cwtl
lods
and
imul
xchg
sub
fdivs
and
jmp
lahf
scas
jmp
pushf
aas
ss
hlt
aam
pushf
rclb
sbb
xor
push
in
pop
pminsw
pop
cmp
les
sub
adc
xchg
mov
je
arpl
xchg
pop
loop
les
aaa
lds
jecxz
xchg
jle
ds
dec
outsl
into
adc
and
fwait
outsl
inc
jg,pt
lcall
lahf
mov
mov
cltd
ja
sub
sbb
jecxz
into
ss
jecxz
sbb
movsb
push
lret
mov
push
idivb
pusha
xor
push
aaa
xchg
cmp
pop
std
sti
fisttpll
out
push
pop
shlb
cmpb
adc
mov
push
jno
repz
xchg
movsl
jle
lcall
sbb
cmp
adc
std
ds
dec
imul
pop
call
popa
sbb
xlat
pop
pop
jge
adc
dec
sub
pop
loopne
sbb
mov
xchg
and
ds
imul
xchg
cwtl
test
in
outsl
sub
xorl
or
sub
dec
pextrw
imulb
jno
cmpsb
mov
ds
sbb
dec
sbb
scas
test
out
mov
jnp
mov
sub
pop
mov
inc
inc
xchg
mov
std
sub
or
cmp
push
fldlg2
xchg
rol
popa
dec
stos
cmp
test
add
jmp
pusha
pop
dec
cld
sbb
cmp
rol
cmpsl
mov
cld
mov
sbb
inc
mov
cmc
pop
call
xor
dec
xchg
jle
jnp
aas
xor
or
fnstcw
jmp
sub
incb
mov
js
adc
cli
jo
cmp
sub
imul
lret
insl
pop
cld
out
int3
push
add
mov
orl
jmp
mov
adc
sbb
imul
push
cmp
and
pop
mov
fs
jmp
adc
push
jae
jg
adc
leave
push
shr
lds
push
mov
mov
aas
jge
ljmp
aaa
jne
or
and
mov
icebp
or
push
sub
inc
int
push
sbb
jbe
mov
lcall
sbb
adc
dec
lea
xchg
pushf
stc
mov
add
fnstsw
loop
hlt
adc
aas
imul
jns
lds
inc
in
adc
test
dec
xor
push
sub
scas
pop
push
and
xor
stc
dec
jo
pop
ds
mov
sub
pop
sub
das
add
call
xchg
cmpsl
jo
jbe
inc
cmp
lock
jl
inc
cltd
lret
bound
lahf
mov
jp
pop
mov
push
rcr
inc
mov
aas
sbb
pop
xchg
das
dec
jmp
shrb
adc
xchg
mov
sbb
cmp
cmpsl
addl
mov
pop
sub
inc
std
xchg
in
bound
sbb
rcl
sbb
sbb
out
jae
fnstenv
add
cwtl
jle
sbb
cmp
mov
negb
mov
cmp
daa
popf
shl
add
cld
push
out
cli
xchg
or
mov
sbb
popf
lods
loop
popf
lret
push
in
out
pushf
xchg
in
sbb
mov
std
popf
popf
loopne
outsl
mov
clc
adc
repz
pop
imul
push
test
push
movnti
fstps
aas
inc
add
mov
xor
mov
push
scas
subl
mov
shll
mov
out
mov
pop
repnz
addb
cmove
pop
mov
lcall
test
pop
test
add
cmpl
mov
xlat
lea
insb
jno
pop
jmp
int3
negl
and
stos
push
test
sbb
sbb
sti
mov
mov
std
mov
pop
jb
out
out
fwait
ss
sbb
lahf
hlt
xchg
popf
xadd
sbb
cwtl
or
pop
pop
push
add
ljmp
mov
pusha
cmp
in
lret
fadd
out
mov
rcrl
xlat
cmp
mov
ret
sti
jmp
inc
mov
sahf
cmp
xchg
or
pop
push
xor
jbe
pop
roll
sub
sub
jmp
hlt
push
adc
cmp
lcall
pushf
mov
lods
pop
dec
lcall
jg
fcomp
testl
fcmovu
push
fs
ja
jne
test
out
or
and
push
loop
xchg
xlat
call
push
fcompl
pop
xchg
jmp
movlps
mov
push
cmp
pop
adc
pop
mov
jmp
pop
and
pop
adc
and
cmp
mov
lods
cltd
outsl
add
pop
outsl
pop
in
aaa
mov
push
fwait
outsl
inc
lods
or
mov
insb
push
loope
adc
fstpt
inc
popf
push
mov
pop
jns
testl
mov
int
and
jg
xor
adc
xchg
sub
push
mov
sti
lret
cmp
movsl
stc
mov
xor
sbb
rorb
scas
pop
cmpl
fildll
popa
aad
jbe
out
mov
mov
cmpsb
das
out
mov
lods
int
inc
fistps
mov
inc
push
shl
push
pop
scas
pushf
inc
sbb
mov
movsl
mov
pop
xchg
test
sub
stc
je
fisttpll
dec
mov
mov
add
int
sub
pop
mov
inc
sub
inc
cltd
mov
add
inc
mov
cltd
fwait
mov
lahf
sbb
inc
into
std
jge
pushf
or
and
aad
sahf
dec
call
fcmovnbe
in
cld
mov
sbb
jno
cmp
insb
push
outsl
push
add
xchg
mov
cmpsb
add
scas
jae
push
jmp
cmc
mov
add
jle
sub
sbb
jp
mov
loop
mov
push
addl
inc
push
inc
sbb
sub
sub
das
xor
mov
xlat
mov
aas
lret
mov
pop
test
pop
xlat
xor
inc
cmp
mov
stos
stc
add
pop
cwtl
mov
popf
out
stc
outsb
int
sbb
mov
mov
add
and
aas
popf
mov
mov
xor
ds
cmpsl
mov
lret
sarb
lret
mov
mov
jae
cwtl
inc
xchg
cmp
or
add
mov
pushf
xchg
fsubrp
arpl
loope
dec
cmpl
push
orb
mov
mov
jnp
loop
xor
insl
loope
mov
lcall
aad
aad
in
xor
pop
out
sahf
push
xchg
addl
mov
dec
fistpll
lret
or
pop
jns
cwtl
fstp
adc
adc
in
xor
jge
mov
rcl
pop
cmc
or
imul
cli
loopne
ret
pop
clc
pop
icebp
add
jae
or
imul
jp
fcmovnbe
push
sub
mov
mov
add
stc
pop
fsubl
mov
xor
stos
pushfw
bnd
push
cmp
pop
fadds
fisubs
mov
out
mov
pop
int
lahf
stos
and
out
or
or
js
ret
and
add
hlt
nop
mov
jp
sub
push
adc
push
push
mov
stc
cmc
cmpl
cmp
out
mov
fwait
and
cwtl
js
push
inc
mov
push
mov
inc
push
mov
std
adc
out
out
int
or
dec
icebp
cmp
sbb
incb
popf
push
and
inc
sub
or
test
xchg
sub
sub
hlt
addr16
sahf
gs
out
std
push
dec
pop
fists
lahf
pop
xor
fldenv
cmc
sahf
icebp
test
dec
in
xchg
dec
cs
arpl
cmc
lahf
nop
mov
lea
push
pop
std
xchg
stc
pop
pop
xchg
mov
popa
pusha
xchg
jge
sbb
sahf
in
cmp
inc
cwtl
pop
repz
aad
frstor
popf
mov
jl
push
xchg
jae
sub
imul
pop
mov
xchg
add
xchg
es
mov
mov
xor
mov
pop
or
in
pop
popf
add
daa
negb
fst
scas
or
pop
jmp
cmp
jl
pop
roll
jmp
xchg
pop
loopne
inc
dec
xor
in
inc
push
out
je
adc
js
ja
ret
cmp
out
pushf
xor
add
xlat
sbb
insb
lods
xchg
jne
aad
xor
push
xlat
mov
stos
in
mov
cmp
test
cli
es
jg
cmp
pop
inc
std
mov
jg
dec
xor
test
sbb
ror
and
nop
mov
test
mov
cld
adcl
js
out
jle
push
loop
cmpsb
cmp
xchg
cmp
xor
hlt
out
xor
adc
sbb
movsl
push
jno
jmp
pushf
mov
mov
lret
add
fstps
xchg
stos
flds
jg
lahf
mov
and
loope
pop
jnp
ja
imul
clc
pop
mov
jp
mov
je
dec
pop
pop
in
mov
out
xchg
out
pop
out
shlb
xchg
adc
xchg
sbb
iret
pop
mov
flds
clc
sbb
mov
call
or
pop
mov
cmp
rolb
sbb
xor
aas
mov
mov
outsl
push
mov
pop
adc
sub
push
clc
sub
cld
je
add
out
mov
cmpl
daa
sti
ss
mov
enter
mov
mov
in
push
ljmp
push
pusha
or
xor
sub
movzbl
inc
cmp
mov
fmulp
outsb
adc
loopne
out
test
icebp
sbb
jb
sbb
shll
mov
push
jno
add
aad
cs
pop
fidivl
add
bound
popa
fldenv
cwtl
insl
idivb
push
push
add
imul
mov
test
repnz
lahf
movsl
cmpsb
adc
add
inc
sbb
pop
rcrb
orl
ficompl
repnz
repnz
lahf
jns
mov
mov
mov
ret
xor
pop
jnp
enter
idivl
in
add
mov
cmp
lea
cmc
gs
xor
xchg
xchg
mov
mov
xlat
popf
out
and
rcr
imul
inc
xchg
pop
enter
xor
and
push
imul
xlat
sbb
sub
push
sahf
aad
outsl
fwait
sub
lahf
dec
adc
js
push
mov
sbb
and
cmp
jmp
stos
pmulhw
insl
loopne
testl
mov
out
pushl
or
in
pop
jno
cmpsb
jbe
sbb
push
scas
push
jbe
data16
lea
int3
push
push
mov
mov
mov
jns
inc
aam
mov
jp
test
outsb
mov
int
and
jg
insl
add
mov
and
fstpl
jmp
cmpsb
fwait
movsb
mov
cmpsl
jg
loope
dec
sahf
or
xlat
mov
fldcw
push
or
fsubl
mov
sbb
sbb
aad
sbb
pop
mov
mov
mov
jge
adc
stc
inc
jle
and
pop
jo
fldt
jne
out
jo
mov
adc
sbb
shlb
hlt
leave
xchg
push
add
fucomip
push
mov
add
add
scas
adc
cmpsl
mov
mov
in
hlt
lods
iret
lock
shll
xchg
push
insl
push
aad
push
out
jge
fistpl
and
fstps
lock
sarl
lods
pop
mov
or
sbb
add
jno
test
clc
fnstenv
mov
fcomps
adc
cmp
add
xlat
jle
mov
and
cmpsl
or
cltd
mov
aaa
cmp
inc
mov
stos
sbb
adc
hlt
loop
adc
pop
mov
negb
or
or
lret
jae
jge
sbb
mul
cmp
aad
popf
cli
pop
mov
sbb
movsl
test
rolb
insl
bound
push
ret
jne
test
pusha
or
inc
sbb
stc
xchg
test
sbb
frstor
mov
sbb
or
lods
lods
fdivrs
jno
lahf
jl
loopne
flds
pop
scas
fistpll
mov
add
loopne
push
repnz
sti
xchg
popa
mov
push
enter
sub
sbb
lds
lds
ss
push
int
push
xchg
out
mov
sbb
lock
sub
dec
bound
ds
pop
lahf
xchg
xor
hlt
push
mov
sbbl
daa
enter
inc
in
sbb
mov
shl
cmc
dec
imul
mov
mov
lahf
jp
sbb
add
sbb
mov
xchg
aas
cmp
lods
push
push
push
mov
or
enter
test
mov
into
fdivl
pop
add
cmpb
ss
fldt
stc
cld
leave
mov
lcall
mov
repnz
mov
mov
xchg
and
dec
mov
js
sarl
mov
cltd
mov
xor
fnsave
insl
mov
sbb
sarl
push
bswap
and
inc
or
repz
inc
or
adc
cmc
xor
adc
lahf
jnp
sbb
sahf
add
xchg
cmp
mov
aaa
data16
inc
mov
inc
xchg
or
fldenv
xor
lahf
loop
lds
nop
pusha
insb
pop
sbb
ljmp
cltd
fmull
enter
out
add
sti
div
adc
pop
mov
clc
sti
lcall
mov
rolb
andb
out
xchg
pop
mov
in
push
aam
shlb
mov
fdiv
add
out
ret
or
cmp
mov
inc
and
shlb
cmpb
add
rol
movsl
pop
int
or
mov
jg
mov
je
jae
nop
aad
test
mov
mov
aad
sub
push
or
dec
loop
sub
mov
js
pop
mov
aam
mov
leave
mov
mov
cmp
jne
leave
mov
sub
add
stos
inc
mov
outsb
jbe
sub
popa
fstpt
dec
xor
mov
std
int
xchg
mov
mov
add
arpl
jnp
push
mov
sar
or
testl
movsl
mov
in
movsl
push
cmp
xchg
inc
push
out
sub
fs
jae
fnsave
dec
es
fwait
orl
jmp
mov
inc
push
add
movsl
insl
aaa
push
pop
lcall
fdivl
sbb
jo
cli
dec
popa
nop
push
xchg
je
sbb
sti
cmp
into
repz
lods
and
jp
jg
pusha
push
mov
lea
sbb
std
inc
test
popf
aaa
pop
lds
push
pushf
ja
in
aas
sbbl
stos
xchg
pop
out
xchg
mov
popf
jle
dec
in
imul
das
add
xchg
out
jno
sbb
xchg
pop
adc
sub
pop
xchg
mov
mov
out
loop
adc
int
rcr
pop
fcoml
cmc
or
inc
mov
push
sarb
sti
jne
mov
sbb
sbb
jle
pop
jbe
setbe
sti
xchg
inc
pushf
pop
imul
cli
fwait
xlat
out
cmp
ds
clc
dec
ja
stc
sti
add
popf
adc
mov
insl
cld
test
jo
lods
iret
fsubrl
clc
sbb
je
adc
fbld
addr16
adc
xor
rcrl
mov
divb
pop
cmc
mov
add
mov
lahf
jo
pop
pop
rcrb
jnp
xor
or
outsb
sti
mov
dec
aas
mov
popf
adc
hlt
pushf
adc
in
push
dec
xor
inc
jmp
add
test
test
insb
cmpsl
mov
cld
inc
push
xchg
mov
and
jo
push
test
mov
addl
clc
sbb
pusha
mov
outsl
xlat
es
test
movsb
inc
les
ret
aam
sar
and
xor
test
int
jmp
sbbb
insl
mov
pop
mov
out
sbb
push
sahf
dec
repnz
adc
adc
fwait
imul
test
xchg
cmp
mov
mov
jnp
rcrl
mov
lcall
add
add
frstor
ret
out
jno
pusha
xor
mov
adc
mov
hlt
push
xchg
add
cmp
scas
inc
call
add
cmp
mov
and
test
test
jl
push
adc
call
dec
insb
fsubrl
xchg
daa
leave
jle
cmp
in
faddl
xor
xchg
inc
ds
scas
mov
mov
push
in
dec
lcall
insl
xchg
jge
rcl
and
push
insb
inc
dec
jne
mov
mov
out
ljmp
add
inc
dec
xchg
push
cmp
jl
and
adc
mov
cs
xchg
dec
out
outsl
and
dec
loopne
loop
jnp
fldcw
nop
mov
lcall
cmc
and
add
sbb
mov
xor
dec
push
shr
movsb
or
sahf
dec
cs
and
jl
enter
mov
add
cmp
sub
and
leave
hlt
push
dec
loop
test
loop
sub
push
cld
aad
rolb
incb
in
repnz
test
and
mov
add
rorb
je
jmp
jns
cmp
mov
in
cmp
out
jbe
dec
aam
jns
iret
loop
inc
fists
push
xor
mov
push
lock
cmp
cmp
jne
pop
push
adcl
cs
pop
jno
fldl2t
xchg
jg
cltd
decb
addl
pop
jnp
fs
cmp
xchg
cs
insl
push
test
mov
xor
inc
cmp
ret
mov
adc
in
aaa
add
ss
mov
add
outsl
inc
adc
xchg
mov
push
leave
pop
inc
jno
test
pop
loopne
ss
mov
cli
call
sbb
xchg
and
inc
stos
push
sbb
fsts
hlt
cmpl
ret
xchg
xchg
icebp
jecxz
daa
popf
ja
fistpll
fwait
jnp
or
pop
xor
dec
jle
pop
lock
das
repnz
push
ret
xchg
out
in
incb
in
mov
push
mov
jge
dec
fists
xchg
fsub
pop
sub
std
jmp
jp
test
outsb
aaa
loop
mov
mov
inc
iret
imul
in
fwait
xorb
add
push
sub
push
sub
jl
repz
xlat
sti
insl
push
sti
ds
push
or
adc
popa
mov
xchg
or
push
dec
cmp
dec
add
inc
sti
out
popl
aaa
sub
inc
smsw
lea
or
fs
leave
in
popa
push
outsb
in
xchg
incb
int3
fucomip
repz
inc
ds
fildl
sbb
loop
mov
icebp
xchg
inc
adc
mov
addr16
mov
push
and
add
les
stos
inc
cltd
xor
jnp
repnz
out
mov
jno
test
xchg
test
sub
outsb
aam
nop
lret
mov
ficoms
push
xor
in
cltd
ds
dec
mov
push
cmp
mov
jg
pop
cmp
pop
xorl
popa
fstpt
loopne
pop
cld
adc
aam
inc
sbb
stc
mov
nop
xor
mov
shll
lcall
push
das
cmp
inc
pop
lock
jge
dec
enter
enter
mov
lea
xor
inc
arpl
xchg
mov
cmp
push
add
repz
xchg
enter
mov
pop
addr16
ret
jno
ja
pop
pop
xor
rcr
mov
xchg
xchg
push
leave
fnstsw
shrb
jae
fmuls
sbb
xchg
add
inc
stos
jae
rcrl
lock
add
js
sub
jmp
or
cwtl
stos
jle
cmpsl
enter
jnp
inc
push
outsb
daa
or
adc
fildl
fisttpll
sbb
and
add
sbb
and
sub
pop
shlb
scas
inc
jg
cmp
test
dec
mov
adcb
and
fidivs
jl
addl
pop
lahf
sub
into
enter
pop
out
loope
ret
sbb
cmp
or
iret
iret
pop
jo
frstpm(287
mov
icebp
xchg
xchg
outsl
jg
mov
push
jno
ds
adc
dec
sub
mov
loop
or
jg
out
mov
fsubl
and
sub
leave
mov
sbb
fcompl
sub
sbb
bound
cld
fcompl
or
sub
clts
movsl
xchg
push
cmp
xor
jmp
push
mov
xchg
sub
cld
addb
and
mov
pop
push
test
aad
mov
shlw
xor
daa
sbb
imul
jbe
neg
inc
aaa
addb
pand
ja
ficomps
push
adcb
mov
jmp
xchg
cmpb
add
add
push
gs
insl
iret
sahf
in
inc
sti
jno
push
jmp
pusha
mov
sbb
adc
push
pop
jno
mov
lods
xor
push
into
pop
mov
push
push
add
fildll
push
add
push
fisubrl
jg
pop
loop
arpl
xor
xor
and
dec
add
insl
jbe
je
fs
outsl
xchg
add
add
dec
xchg
ret
jmp
paddb
jnp
cmc
xchg
cmp
inc
jnp
ja
fsubs
test
cli
add
mov
sbb
ja
decl
inc
hlt
aam
jb
pop
in
xorb
mov
pop
xorl
cmc
clc
sti
adc
sbb
insl
out
mov
out
mov
lahf
fcmovu
add
ja
fwait
scas
sbb
push
mov
mov
imul
jecxz
inc
xchg
out
mov
xlat
sahf
xchg
inc
inc
push
sahf
imul
stos
xchg
ljmp
int
sub
xlat
inc
xchg
add
fsubs
xor
adc
shlb
xchg
mov
xchg
xchg
push
shrl
pop
mov
in
push
push
sbb
popf
xor
push
push
std
shld
shlb
mov
fstpl
pop
push
and
dec
mov
inc
pop
aam
sub
adc
cwtl
mov
stc
popa
lahf
mov
lahf
sub
lgdtl
push
mov
dec
aaa
fstpt
jg
add
add
popf
fwait
sti
arpl
sbb
fsubrs
clc
xchg
lret
and
dec
xchg
roll
pop
ljmp
fucomi
cltd
and
into
or
test
pop
pop
lock
push
push
into
sti
daa
into
mov
hlt
and
dec
jle
push
mov
push
pop
dec
mov
shlb
or
scas
sbb
lods
fisttpll
fmuls
and
sbb
in
lahf
loopne
fisubl
xlat
xor
arpl
lods
cmp
pop
push
testl
stc
mov
test
adc
mov
sub
mov
xor
inc
inc
and
popa
inc
lahf
xor
je
adc
adc
sahf
iret
lock
arpl
notl
inc
mov
lds
insl
loope
adc
sbb
jg
bound
and
adc
cmp
xor
cmpl
xor
adc
inc
xchg
or
ljmp
in
fldl
sahf
loop
jecxz
mov
popa
jge
lods
movsl
sub
xor
add
cmp
popa
lret
mov
adc
aaa
sbb
add
push
inc
sub
add
jno
jno
xchg
movsl
sub
call
inc
fidivs
push
sbb
enter
icebp
xor
xchg
repnz
out
stos
fs
sbb
popa
lea
fldl
jmp
bound
testb
pop
inc
mov
push
pop
push
lods
xchg
imul
pop
push
or
mov
fdivs
or
sbb
mov
mov
cmp
aad
cmpsb
mov
and
adc
or
mov
pop
int
xchg
popa
add
es
icebp
sti
xchg
jo
icebp
xor
xchg
add
sub
pop
mov
stc
lcall
cs
in
les
inc
ja
xor
daa
mov
je
int3
sbb
mov
pop
popf
add
pop
loopne
push
cltd
sbb
inc
in
fdivs
pushf
push
cwtl
sti
sbb
and
inc
pop
mov
sbb
cli
push
push
inc
and
outsb
add
arpl
and
out
lds
cltd
xchg
or
xor
fwait
jo
dec
out
xlat
dec
jecxz
into
ss
dec
mov
aaa
mov
pop
dec
lea
push
mov
insb
push
sti
mov
jnp
fldl
pop
mov
and
cmp
mov
or
getsec
jbe
xchg
xchg
add
in
inc
inc
sbb
pushl
out
push
sahf
add
out
mov
dec
pop
sti
mov
stos
cltd
test
push
cmp
mull
mov
ficompl
out
stc
insl
loop
jbe
icebp
cld
mov
jg
adc
dec
jge
fcmovnb
loop,pt
test
adc
out
rcl
jl
loopne
imul
adc
mov
sar
or
mov
imul
jbe
pusha
sar
lods
xchg
mulb
loopne
xchg
push
call
cwtl
int
mov
pop
pop
scas
cli
mov
out
ror
insl
xchg
pop
jmp
sbbl
sbb
add
in
adc
popf
push
jno
pusha
aam
je
jns
pop
add
decl
mov
xor
call
inc
data16
into
sbb
sbb
cmc
sahf
xor
lea
add
adcb
mov
mov
add
orl
aam
test
into
pop
push
jle
cmp
lea
jbe
stos
cmovae
fstl
pop
mov
mov
sbb
into
out
aas
dec
mov
jno
dec
cmovl
pop
lds
inc
push
shrb
adc
in
out
mov
jne
insl
ret
je
push
mov
std
jo
aas
aas
and
add
add
or
jns
jnp
and
fst
ds
ljmp
mov
sti
sub
and
cli
test
aaa
sti
dec
insb
sahf
or
ds
das
fdivrs
fsubs
fcomps
test
out
add
lods
or
ss
mov
mov
dec
fiadds
sbb
add
cmp
loop
lret
cld
mov
std
loop
xchg
or
out
push
es
mov
adc
fsts
lods
fnsave
dec
cmp
fcompl
fbld
and
mov
sbb
hlt
jo
xor
inc
stos
iret
insl
xor
fadds
hlt
xchg
sub
lcall
ja
or
xlat
sbb
pop
fwait
dec
adc
or
dec
femms
inc
in
inc
imul
pop
sub
popf
aad
cmc
cmc
cmp
jnp
and
jl
lds
daa
inc
or
movhps
add
ret
push
data16
repz
xchg
lahf
testl
lds
je
push
leave
and
mov
fwait
negl
outsl
out
stos
inc
je
jge
push
xchg
inc
xor
andb
outsb
or
xlat
fimuls
xchg
int
in
test
lods
jae
stos
push
sahf
mov
nop
in
push
and
adc
add
sbb
push
test
sub
xchg
sub
jp
sub
mov
mov
adc
divl
fcoms
inc
pop
fistl
pop
out
pop
sbb
xchg
sti
push
dec
fcmovnbe
popf
cli
sbb
xchg
mov
sahf
xchg
repnz
mov
enter
xor
fisttpl
test
mull
inc
add
aaa
rorl
adc
mov
shrb
pop
sbb
xor
sbb
xchg
xchg
out
mov
fcoml
adc
pop
or
xor
xchg
jae
repz
xchg
ficomps
roll
mov
xchg
rorl
cwtl
popa
out
lea
sti
lcall
xchg
mov
and
jae
popf
or
stos
mov
lock
cmp
mov
out
je
pop
into
pop
notb
fnsave
fs
cld
shll
xorl
pop
mov
xchg
negl
push
mov
adc
xor
pop
or
dec
xor
or
inc
adc
jg
arpl
xlat
sahf
movsb
aas
cltd
hlt
mov
jle
jle
aaa
jns
adc
inc
push
or
pop
cmp
cmpsb
xchg
xchg
or
xlat
add
shlb
push
xchg
jae
or
xor
popa
pop
mov
jle
fidivrs
jbe
in
dec
lods
cmc
push
mov
pushf
inc
mov
jle
mov
adc
aas
fnstcw
pop
sbb
aam
ficoms
pop
push
mov
fistpll
popf
inc
pop
ret
aas
cmp
in
ror
push
stc
rcrl
ror
aam
fisubrs
mov
sbb
xor
sbb
pop
rcl
jno
cli
mov
add
cmp
outsl
pop
jb
push
andb
pop
pop
orb
add
xor
ds
push
addr16
mov
fwait
mov
adc
jge
push
outsl
fwait
inc
xchg
sbb
mov
push
pop
mov
div
mov
push
pushf
repnz
imul
cmp
xchg
in
lods
push
cmp
pop
mov
sbbl
lds
lea
test
sbb
scas
and
mov
outsl
sbb
or
xchg
pushf
jns
data16
adc
in
mov
lds
mov
mov
inc
adc
fimull
jg
repnz
xor
dec
inc
sbb
pop
pop
jae
xchg
push
cmp
mov
mov
jnp
xchg
pusha
xchg
push
iret
jb
or
out
popf
or
mov
cld
jg
mov
shlb
xorl
lret
pop
fmull
lret
nop
sbb
xor
jge
push
leave
cwtl
fwait
pushf
into
nop
loope
jae
lahf
out
cmpsb
lret
or
jne
jle
test
push
notl
stos
jecxz
fnsave
negl
mov
out
lahf
mov
rcll
adc
cmp
dec
jecxz
sbb
psubb
jp
mov
xor
mov
adc
sti
sbb
into
pop
push
fwait
scas
pop
pop
cmp
aas
jle
add
js
push
adc
push
loop
mov
add
imul
pop
xchg
sub
orl
xchg
sahf
mov
insl
popf
jecxz
dec
idivl
paddd
repz
shrl
movsl
test
test
pop
fnstsw
pop
mov
sub
sbb
out
and
jo
adc
lea
or
sbb
push
cmp
jo
inc
cli
lret
jge
mov
xor
jae
cld
and
imul
repz
or
mov
stos
jae
in
lds
add
xor
push
xchg
inc
xor
in
fsubs
iret
aad
cmp
fistpll
add
add
sbbl
cmp
cmc
mov
test
dec
aad
sbb
cli
mov
pop
sbb
xchg
mov
mov
pop
fildl
push
push
std
pushf
sti
xchg
mov
pop
add
movsb
loop
pop
or
xchg
std
cmp
push
adc
test
cld
aad
push
pop
push
in
mov
sbb
push
mov
nop
sbb
cwtl
dec
nop
mov
out
fistpll
clc
mov
jecxz
out
xchg
jno
or
std
add
sti
or
in
lods
negl
inc
cmp
xchg
mov
mov
jb
xor
xchg
fwait
fwait
aaa
mov
call
das
jbe
sbb
push
xchg
repnz
rorl
push
pop
adc
sbb
push
sbb
rclb
add
enter
call
pop
mov
test
pop
sbb
fistl
push
setbe
decb
sbb
mov
xchg
addr16
imul
aas
std
mov
daa
add
stos
insb
add
or
notl
out
cmp
mov
repnz
shlb
mov
lahf
push
jge,pn
push
leave
adc
xchg
pushf
decb
push
cwtl
adc
adc
stc
mov
inc
out
add
psubusw
add
xchg
cli
lea
fiaddl
pop
adc
xchg
nop
pop
pop
out
sbb
add
sbb
pop
add
ss
jle
lahf
ljmp
ss
inc
xor
sbb
sbbb
ficoms
notb
or
in
mov
or
xchg
pop
nop
pop
stc
bswap
std
mov
addr16
sub
pop
mov
xchg
add
in
xchg
std
adc
mov
and
adc
cli
mov
or
jns
push
push
mov
aas
jle
sub
fnop
push
mov
mov
adc
pop
push
add
in
adc
movsl
testl
cmc
push
pusha
or
jbe
notb
push
aaa
sbb
in
stc
or
out
jg
divb
mov
add
push
call
sbb
mov
xor
inc
ds
jns
adc
sub
dec
pop
enter
mov
sti
lea
sahf
push
sahf
mov
sub
sub
jo
cmpsb
hlt
and
inc
jge
push
decb
divl
iret
adcb
pop
and
sti
jl
jg
adc
pop
jno
stos
pop
les
lahf
into
in
fidivs
pop
into
sbb
decb
loope
cmp
lret
nop
loop
fnstcw
xchg
dec
jp
push
aas
sbbb
lea
inc
aam
stos
data16
xor
outsl
jno
add
lock
into
fs
test
dec
mov
sub
outsb
fldt
pop
shrb
pop
loop
ss
cmp
fidivs
lcall
lfs
or
mov
sbb
rcll
jecxz
and
and
pop
sub
into
inc
xchg
push
cltd
jbe
sbb
mov
std
sahf
pop
sti
movsl
pop
mov
jbe
sbb
sbb
testl
mov
clc
mov
jmp
mov
push
imul
push
xchg
lock
xchg
int
xlat
pusha
mov
pushf
sbb
xor
xchg
mov
inc
pusha
pop
cltd
mov
mov
aaa
lahf
jmp
mov
orl
xchg
mov
pop
mov
xor
lds
stos
repnz
xchg
ss
aam
add
out
scas
push
popf
or
push
pop
pushf
loopne
fidivrs
jns
jo
into
sbb
xor
cmp
shlb
add
jmp
les
jp
xor
outsl
mov
jp
xchg
and
fldt
and
sahf
mov
jmp
push
push
cmp
rclb
or
jp
pop
stos
fistl
loop
pop
cld
pminsw
cmp
jmp
lret
push
sub
sub
fnsave
jmp
pop
jle
sbb
mov
ret
cli
fwait
mov
pop
jae
push
lcall
jae
mov
adc
imul
sub
mov
fwait
cmpsl
xchg
jae
imul
lea
repz
loope
repnz
rcll
mov
mov
sti
xchg
add
bnd
sub
mov
push
popf
jno
pop
xor
out
adc
div
jno
repnz
fwait
add
mov
sahf
lahf
mov
push
fisubrs
add
mov
xor
pop
jno
xchg
adc
mov
mov
shl
fistps
repz
out
jbe
push
jno
pop
xor
icebp
jle
popf
push
out
sub
sbb
xchg
adc
push
pop
push
xchg
push
nop
push
cld
push
sbb
xlat
xor
nop
push
xlat
sbb
faddl
cltd
lock
dec
pop
mov
sub
mov
daa
pop
xchg
xchg
in
popf
add
and
lds
mov
cli
std
movsb
and
clc
cmpl
fwait
jge
xchg
outsl
add
pop
sub
sbb
mov
ret
decb
push
shll
adc
cli
push
xor
xlat
mov
adc
push
xor
mov
rolb
push
outsl
fbld
mov
mov
mov
fnstenv
addb
xchg
mov
je
and
add
cwtl
xor
jle
popf
pop
push
push
mov
xor
pop
fs
ja
lods
lea
xchg
add
jne
xor
sub
hlt
jbe
ss
iret
jbe
mov
lcall
inc
insb
loop
mov
fwait
push
aaa
ja
ds
fstpt
ss
dec
stc
mov
aas
aaa
xlat
fnstcw
pop
notb
fwait
xlat
add
sub
dec
inc
aaa
mov
nop
nop
popf
jne
mov
cli
pop
test
xchg
lds
pop
ljmp
xlat
testl
pop
jne
sti
adc
sahf
push
imul
negl
aad
push
in
cmp
jbe
sar
call
mov
cmp
mov
std
mov
int
add
mov
dec
cmpsb
mov
hlt
xor
add
cwtl
push
add
iret
mov
mov
nop
gs
jmp
adcb
mov
mov
mov
loope
pop
cmp
cmp
cmpsb
pop
cwtl
inc
pop
popf
pushf
out
adc
add
ljmp
cmp
jmp
pushf
mov
mov
mov
inc
mov
js
mov
lahf
mov
push
popf
or
movsb
test
xchg
dec
dec
mov
pop
test
enter
or
cmp
cmp
pop
sbb
xchg
jae
pop
pushf
dec
xor
and
push
or
in
push
dec
test
xchg
out
mov
sbb
mov
dec
cmp
mov
xor
xchg
jp
mov
xchg
sub
out
jge
adc
xchg
sub
sahf
add
mov
add
pop
jp
jg
xor
cmp
aas
lds
sub
das
xchg
mov
xlat
mov
xchg
test
sbb
xchg
sbb
ret
inc
imul
lock
insl
pop
jl
lea
or
aas
ror
mov
cmp
cmp
push
outsb
adc
xadd
sbb
imull
cmpsl
pop
push
sbb
cmpsb
enter
es
cli
adc
or
xchg
pop
cltd
andl
mov
out
ficomps
iret
stos
inc
sub
and
pop
or
lret
std
dec
fidivs
aam
or
outsl
sbb
decl
in
pop
loop
aam
jnp
fistpl
popf
push
or
sti
pop
sbb
sub
int
adc
push
mov
jnp
imul
fbld
fstpt
cld
gs
into
rcr
frstor
add
daa
sub
sub
fcomp
lret
fadd
pop
or
stos
aad
cmc
ljmp
sar
sbb
clc
sti
dec
sbb
out
mov
les
xchg
add
xchg
sahf
pop
mov
fbstp
fidivrs
xchg
push
sbb
test
pop
ja
lar
sti
incb
sub
inc
xor
sbb
sbb
sti
push
push
sbb
inc
and
mov
xchg
mov
repnz
mov
out
stos
in
ljmp
mov
push
rcl
mov
lcall
mov
sbb
int
sti
jle
dec
rcll
out
push
xor
mov
inc
xchg
notl
fdivs
mov
fstpt
mov
shlb
lcall
inc
lret
fstpt
imul
xchg
mov
test
dec
rcl
pop
cmp
lods
sbb
sarl
pop
sti
adc
dec
push
andl
and
push
cld
leave
int3
mov
push
stos
pop
ss
lahf
aaa
or
jo
dec
lods
sbb
sbb
ljmp
ficompl
lods
pop
out
rcrl
mov
repz
enter
add
jnp
inc
jp
sbb
addr16
pushf
mov
pushf
out
ljmp
fldt
stc
scas
fidivrs
sar
enter
pop
mov
or
and
and
data16
loop
fsts
jl
mov
cmpl
std
inc
inc
jbe
lock
dec
cli
loope
sbb
mov
mov
fadds
add
sti
add
push
and
std
push
mov
xchg
mov
inc
jno
adc
and
outsb
pop
into
xor
jno
mov
pushf
outsl
sub
sub
push
and
add
popa
jo
xchg
cltd
ret
mov
jnp
jge
lret
push
cli
test
stos
lea
sbb
in
cmp
mov
inc
subb
test
cmpsb
inc
dec
repnz
rcll
leave
imul
mov
sti
add
push
inc
cld
sahf
sahf
out
mov
pop
sbb
cmp
inc
push
cltd
mov
cli
jne
out
add
xlat
and
push
cmp
dec
add
dec
das
fstpt
pop
mov
adc
xor
adc
and
push
mov
mov
sbb
add
jb
jno
nop
out
dec
scas
or
mov
scas
stc
jne
jl
fcoml
mov
mov
sbb
test
stc
mov
ja
ret
sbb
mov
pop
or
pushf
push
pop
pop
xchg
ljmp
in
pop
loope
jl
clc
sbb
mov
outsl
mov
hlt
jge
in
add
outsl
test
push
ret
cmp
push
sar
repnz
loop
sbb
popa
lock
or
mov
push
jl
sbb
loopne
cmp
loope
stos
sub
adc
rcrl
push
pop
jl
in
xor
pop
sbb
mov
dec
add
int3
loop
mov
sar
filds
call
adc
adc
ljmp
dec
mov
adc
into
out
ficomps
negl
pop
daa
aam
dec
push
stos
mov
push
pop
inc
out
imul
sbb
mov
enter
sahf
sub
inc
lods
push
or
mov
popf
dec
mov
xlat
loopne
sti
push
sbb
std
in
orb
xchg
inc
in
or
dec
ret
in
and
xchg
sbb
in
jbe
cltd
adc
aaa
stos
cli
inc
sbb
js
fldl
sbb
mov
insb
jge
pop
push
jno
es
outsb
jge
mov
add
cmp
std
lret
sub
ss
mov
pop
adc
mov
fwait
int
jp
xor
sahf
mov
xor
sahf
scas
fidivs
pop
data16
pop
push
pop
mov
pop
cmpsb
push
repnz
sbb
add
pop
popf
push
scas
sahf
and
imul
add
clc
xchg
nop
jb
iret
insl
push
pushf
ja
enter
insb
adc
dec
pop
cmp
mov
fldl
sub
jge
addr16
dec
mov
sbb
xor
in
ds
sti
mov
mov
sub
add
popf
sub
pusha
mov
jnp
xchg
aam
mov
fcmovnu
xchg
push
rclb
push
loop
xchg
cltd
xchg
push
adc
jg
psubusb
movsb
jb
cwtl
pop
mov
mov
cwtl
mov
addb
xor
in
jno
jle
lahf
add
adc
cmp
mov
idivb
cmpsb
mov
lods
mov
dec
leave
shr
xchg
mov
xchg
decl
push
and
out
ss
pop
mov
mov
mov
bound
pop
repnz
sahf
jae
jno
inc
outsl
iret
leave
jnp
pop
imul
orb
xchg
es
rolb
cwtl
sub
mov
push
pop
xchg
adc
jbe
aam
fld
enter
sar
shl
aam
mov
mov
and
jmp
xlat
mov
mov
mov
push
push
xchg
sub
sub
dec
popf
xor
std
xchg
roll
mov
mov
subl
or
sbb
xlat
jbe
mov
scas
es
xchg
mov
rorb
daa
filds
and
sbb
imul
push
lods
dec
xchg
sar
fstl
fsubr
sbb
ds
add
mov
mov
push
leave
in
sbb
ljmp
lahf
lcall
fs
outsl
movsb
jp
jnp
mov
lea
or
in
int3
push
cwtl
pushf
xlat
mov
push
sbb
add
add
jne
sbb
leave
insl
outsl
mov
bound
nop
scas
sbbb
push
inc
cmp
fdivrs
push
jecxz
iret
shlb
sub
ja
popf
push
in
stc
mov
and
xor
cmp
arpl
out
push
sahf
cmpsb
jo
push
movsl
add
sahf
xlat
popf
inc
jae
lahf
cli
or
jno
cs
es
sti
cmp
das
dec
imul
add
ljmp
aaa
push
popf
test
negl
dec
sahf
xchg
nop
sbbb
inc
pop
lea
in
mov
push
push
std
or
adc
mov
push
cmc
outsl
or
stc
push
sbb
pop
and
or
test
and
inc
fcomp
xchg
cmp
adc
jp
repnz
cld
sbb
repnz
rclb
iret
xchg
push
cwtl
mov
loop
outsl
mov
test
xor
mov
or
enter
xchg
pop
imul
cwtl
std
cwtl
mov
incl
dec
outsb
adc
mov
add
add
and
or
dec
sbb
cmpsl
xchg
mov
mov
repz
scas
push
sti
cmp
prefetchnta
dec
inc
aad
fbld
pop
lods
push
leave
sbb
pop
dec
xchg
int
data16
pop
fsubrs
push
mov
mov
fisubs
xor
lahf
sahf
add
bound
mov
mov
stos
sbb
pop
mov
pop
push
push
jo
or
fstpl
push
ficompl
xor
cld
iret
mov
repz
fs
movsb
inc
mov
push
pop
popf
xchg
inc
jno
or
loopne
scas
lret
adc
or
or
xlat
fistpl
fmull
sbb
push
and
imul
lods
pusha
mov
mov
lahf
mov
sti
inc
jle
sbb
and
lcall
jnp
repnz
mov
insb
xchg
xchg
mov
aad
sub
test
clc
pop
cld
inc
bnd
popf
sti
lret
out
fwait
sbb
sub
push
inc
roll
fldt
jmp
insl
rcrb
sti
mov
pop
fs
hlt
push
push
sub
or
add
int
xor
fiadds
lds
lods
out
popf
and
fstpl
push
sahf
imul
mov
cld
and
mov
xchg
pop
sbb
pop
jg
cli
inc
pusha
movsl
xlat
neg
add
dec
xchg
cmp
bound
out
xchg
jl
mov
xchg
in
in
jp
mov
popf
and
pop
out
out
sbb
fmul
popf
push
sub
add
xor
inc
push
push
popa
lahf
test
test
popf
pop
das
or
sahf
add
xor
jo
cld
and
cmp
push
stos
jns
pop
or
pop
push
das
ds
iret
inc
pop
in
sbb
stc
sub
loop
lods
int
fistpll
sbb
xchg
mov
stos
cmpb
pusha
xchg
sbb
cmp
mov
sbb
data16
push
out
or
mov
inc
hlt
fistl
or
cmp
sub
inc
pushf
xchg
push
pushf
lcall
into
test
fisubrs
jle
idivl
and
fldl
jae
sub
and
xchg
sahf
or
mov
jle
jno
cmp
mov
mov
and
out
in
mov
aas
cmp
cmpsl
sub
mov
sub
fists
inc
fistps
rorb
sbb
outsl
jmp
lcall
sub
jmp
dec
lret
or
fs
popf
or
and
lock
lods
ficomps
cli
scas
lret
mov
pop
and
xlat
pop
fstps
sbb
lcall
call
insb
in
repnz
adc
cmpl
int
mov
int
cmp
sbb
icebp
pusha
and
insb
jmp
mov
sub
pusha
das
push
add
jmp
jmp
test
cmp
jo
lsl
ja
in
repnz
jo
adc
popf
rcl
and
xor
push
cli
js
jp
mov
std
sahf
movsw
mov
jnp
iret
cli
filds
cmpsb
cltd
pushf
in
jl
ja
cmp
fistps
mov
das
fstpt
pop
cmp
notl
jnp
dec
repnz
fiadds
inc
add
push
ljmp
push
pop
push
popf
push
mov
jnp
in
push
xchg
popf
clc
sahf
push
xchg
add
dec
pop
jne
inc
inc
xor
out
imul
loopne
xchg
or
pop
adc
rcl
sahf
aas
or
mov
mov
out
inc
enter
pushf
lahf
sub
pop
aas
into
hlt
fisttps
adc
sub
decb
pop
inc
sbb
push
inc
arpl
inc
jne
add
ljmp
je
js
outsl
and
enter
test
mov
mov
pop
into
dec
movsl
aam
mov
divl
jno
add
out
sbb
cmp
push
adc
inc
dec
prefetcht2
pop
mov
inc
js
push
mov
imul
adc
dec
and
jnp
mov
lods
adc
push
into
ds
out
jnp
out
push
div
shll
cmp
shll
xor
pop
mov
out
pushf
cmp
and
add
pop
adc
push
push
jle
cmp
stos
fisttpl
push
fwait
loop
ret
sub
push
in
sub
rolb
sbbl
ds
xor
lret
pop
out
pop
decb
adc
out
push
adc
cmp
sbb
push
sub
or
push
mov
sub
jl
gs
pop
aas
scas
mov
out
pop
mov
adc
popf
lods
ss
mov
dec
negl
inc
sbb
push
test
cmp
insl
std
bound
loopne
adc
dec
lea
js
xchg
pop
mov
xor
fiaddl
cli
pop
filds
adc
fistps
nop
cmp
test
filds
add
or
mov
outsb
xchg
sbb
jl
dec
out
jmp
testl
sub
adc
fildl
mov
scas
push
xchg
sbb
mov
push
sbb
xor
sub
add
loopne
in
jbe
out
sbb
aas
xor
mov
idivl
sbb
pop
mov
mov
cwtl
out
outsb
add
das
inc
sbb
nop
push
pop
sbb
pop
mov
or
jg
add
inc
lret
rcrb
pop
xchg
push
fcomip
cmp
movl
inc
pop
lea
mov
popf
cmpsl
out
aas
pop
xchg
rorb
leave
popa
jnp
xchg
mov
mov
ja
xchg
aad
or
jae
mov
xchg
adc
and
adc
icebp
loope
aad
test
repnz
mov
loopne
mov
and
out
jl
xlat
popf
cmp
fisubrs
pop
add
sbb
sub
jle
in
xchg
dec
mov
pop
jo
daa
dec
mov
mov
fld
xor
cmp
inc
push
cmpl
mov
sub
push
mov
xor
inc
sarl
adc
psllw
jp
adcl
test
dec
cli
adc
movsl
gs
imul
jg
sbb
sbb
popf
fwait
jl
dec
rcl
fistl
je
mov
ret
dec
sbb
inc
xlat
inc
pop
push
push
jmp
inc
jb
rcl
pop
and
sti
sub
mov
add
dec
fstps
sti
sub
cmp
jg
ljmp
fsubrs
scas
mov
loope
mov
xlat
or
push
popf
pop
cmpsb
add
stos
pop
mov
or
pop
mov
jbe
decb
xor
out
lahf
add
pop
nop
pop
aad
pushf
pop
pop
push
xchg
jl
out
xor
xor
sbb
je
add
mov
imul
pusha
leave
sahf
xor
stos
push
and
lcall
and
lea
fisubrl
pop
mov
mov
sahf
sub
sub
scas
sbb
sahf
or
sub
push
int
cmp
in
mov
inc
pop
sbb
rorb
adcb
xor
rcrb
jb
sub
lret
or
or
sub
add
dec
xchg
sbbl
mov
push
and
mov
fucomip
mov
mov
mov
push
xchg
add
jnp
lret
cmpsl
xchg
dec
sbb
inc
mov
xchg
xlat
xlat
into
ficoms
pop
pop
xorl
add
pop
jne
rep
popf
in
je
clc
add
mov
pop
out
jno
in
push
ss
mov
rcr
pop
or
cmpsb
aam
mov
add
mov
test
xlat
mov
pop
xabort
shrb
mov
push
call
cmpsl
sahf
fcoml
out
push
je
loopne
fcmovne
movsl
adc
jbe
inc
jne
xchg
testl
push
std
in
add
jge
ds
pop
test
mov
into
or
mov
jb
or
jne
enter
xchg
aam
add
mov
clts
xchg
push
sbb
push
sub
fidivrs
das
arpl
ds
push
mov
push
xor
xor
push
fistpl
xor
into
push
loopne
loope
xor
push
lahf
ss
mov
dec
neg
fnsave
stos
add
popa
jno
jp
push
jnp
adc
mov
rorb
aad
pop
incl
popf
std
ret
int3
mov
sbb
or
orl
push
jmp
popf
mov
mov
flds
mov
orl
das
lock
dec
sti
pop
out
aas
rcll
mov
adc
sbb
lahf
sbb
std
sub
decb
mov
dec
inc
mov
add
scas
pop
inc
daa
mov
inc
fnstcw
pop
pop
imul
pop
mov
or
pop
cmp
daa
mov
mov
or
test
mov
inc
lock
and
mov
mov
mov
sti
lds
pop
ficoml
std
mov
flds
pop
pop
inc
std
stos
inc
add
les
je
ret
lods
jbe
int
lcall
std
dec
xchg
push
out
mov
ret
sahf
into
insl
push
jg
mov
jnp
fbstp
es
hlt
sahf
jnp
gs
cli
mov
insl
ljmp
dec
int
divb
jae
inc
inc
mov
add
dec
insb
push
ljmp
jnp
push
scas
fldt
mov
mull
lahf
test
inc
push
lret
cmp
jp
xchg
push
mov
inc
jb
int
inc
decb
cwtl
xchg
dec
xchg
cmp
adc
sbb
fimull
jmp
xor
or
mov
test
jbe
out
sbb
push
subl
lret
in
pop
mov
push
push
inc
out
add
sub
lcall
and
add
jae
cld
rcrb
sbb
filds
insb
fwait
inc
jg
fildl
pop
push
push
push
out
inc
jne
mov
in
add
test
mov
adcl
push
vunpcklpd
shll
mov
ja
mov
and
scas
add
fisttpll
dec
fistl
pop
adc
ja
scas
sbb
pop
inc
call
or
into
push
lahf
jne
sahf
add
cs
lods
ds
push
sub
or
adc
xor
call
jbe
xor
test
cmpb
pop
add
cmp
cmovp
cmp
sbb
sub
sub
mov
lea
out
pop
mov
push
push
inc
add
into
xchg
xlat
gs
sahf
sbb
mov
inc
sub
lock
iret
dec
xor
adc
jg
leave
inc
add
test
sbb
aam
pop
ret
cmp
fs
cmpsb
push
sbb
negl
aad
sbb
jae
sub
jg
jo
cltd
sbb
jo
movsl
dec
xlat
push
sbb
jne
out
dec
pop
out
mov
lcall
gs
xchg
loop
cmc
mov
test
arpl
xchg
lret
mov
mov
dec
outsl
xchg
fwait
xor
icebp
jno
jns
loop
in
lock
jne
insl
push
dec
out
inc
jmp
push
or
add
lods
stos
cmp
das
pop
adc
xorl
test
jge
mov
push
and
jmp
das
jecxz
mov
sahf
neg
out
inc
mov
pop
push
cld
lcall
imul
into
sbb
ret
popf
adc
dec
sti
xchg
push
push
mov
out
pop
mov
repnz
popf
imul
pop
push
sub
mov
aam
add
mov
xchg
mov
pop
outsl
lret
jae
scas
and
xchg
lcall
das
mov
leave
lahf
fcoms
cld
dec
arpl
fiadds
stos
adc
xchg
cld
sbb
xchg
pop
push
cmpb
xor
jb
rcrl
xor
and
lcall
jmp
rorl
sub
jmp
and
into
push
scas
lock
add
mov
jno
cli
mov
adc
nop
xchg
test
sbb
in
mov
xchg
sub
cmp
imul
pop
push
add
sbbl
stc
ret
sbb
add
lcall
cmp
pop
adc
test
scas
xchg
inc
rcll
inc
imul
iret
aad
and
push
sahf
xorl
sti
mov
repz
fadd
or
add
xor
insb
shrb
pop
mov
adc
push
mov
push
jbe
mov
pop
inc
jno
ja
out
jo
sbb
js
mov
test
popf
ss
or
mov
inc
fstpl
sbb
inc
les
into
cmp
or
loopne
leave
push
imul
fadd
call
into
xchg
push
mov
sub
pop
fst
jmp
clc
xadd
sbb
outsb
not
sub
jle
out
push
loopne
sub
aam
pop
xchg
dec
clc
xchg
sbb
xor
js
dec
jmp
and
lahf
jns
sub
add
std
xchg
mov
push
adc
xor
rcll
pushf
xchg
xor
xlat
nop
mov
test
notl
mov
mov
xlat
pop
sti
aam
or
neg
xchg
scas
cmp
xor
mov
out
jbe
movsl
nop
les
mov
xchg
gs
leave
loopne
aam
cltd
sub
arpl
dec
in
cmp
mov
fidivs
inc
mov
cmp
cmpsl
mov
lock
sbb
xchg
je
mov
inc
int
rol
sti
sbb
sbb
push
mov
ds
push
cmp
pop
fiaddl
lahf
pop
xchg
popa
jno
int
pop
xchg
push
sub
cmp
jg
test
sti
rcll
push
mov
cli
push
fstl
adc
insl
rcrb
or
pcmpgtb
add
sti
pop
push
hlt
push
fwait
push
clc
mov
outsb
rcl
loopne
jns
lcall
stos
bnd
pop
mov
mov
out
xchg
jle
xchg
daa
test
les
jl
mov
sbb
add
or
jno
data16
pop
and
fwait
loopne
sub
nop
add
in
push
cmpsl
stc
push
mov
mov
fildl
addr16
and
xor
xchg
xchg
jge
idivb
test
jge
xchg
push
sbb
xchg
rclb
xchg
imul
notl
lahf
mov
into
cmp
mov
add
out
adc
ja
add
adc
mov
lock
sbbb
in
mov
popf
imul
iret
popf
mov
inc
cmpb
jo
add
mov
mov
sub
pushf
int
fsubrp
and
aam
dec
sbb
jno
jmp
xchg
clc
sti
xchg
cmp
cmp
out
data16
sub
dec
rorb
and
adc
out
loopne
adc
int
in
sub
pop
rcll
out
jno
pop
jmp
adcl
xlat
pop
jb
push
lahf
inc
lea
cltd
mov
pop
adc
xor
mov
jmp
stc
sbb
test
sub
mov
aad
mov
jns
mov
pop
outsl
lahf
jge
mov
pop
ja
mov
stc
cmp
fcmove
sbb
jl
pop
lret
idiv
mov
mov
xchg
push
iret
out
lods
adc
arpl
cmp
mov
lds
jnp
and
jge
xor
outsl
dec
sub
stos
or
sbb
mov
or
mov
mov
jmp
loopne
jl
xor
iret
mov
jne
jb
jp
inc
aaa
out
push
mov
hlt
leave
push
psllq
or
pop
or
insl
aad
xor
sbb
jecxz
adc
push
adc
mov
fnstsw
shrl
or
add
scas
das
mov
pusha
daa
mov
dec
xrelease
dec
imul
in
mov
mov
icebp
icebp
lahf
cmp
sahf
stos
push
push
mov
push
mov
arpl
test
or
xchg
pusha
jb
push
xor
mov
sbb
inc
in
fstp
jmp
into
lret
xchg
fwait
pop
mov
out
mov
jge
jmp
cmp
ret
add
test
xlat
call
popa
dec
nop
mov
sub
push
cmpsl
int
pop
das
out
out
dec
out
fsts
pop
sbb
xchg
cli
fimull
sbb
or
sub
mov
or
xchg
inc
xlat
jns
mov
test
xor
repz
fwait
ljmp
cmp
push
mov
pop
pusha
xor
xor
sbb
insl
ds
pop
pop
push
loop
and
enter
mov
flds
sbb
mov
cmp
imul
jle
mov
in
jbe
aas
push
sbb
mov
into
sbb
mov
lahf
jns
mov
out
push
inc
sbb
jb
sbb
xchg
mov
addr16
mov
cmp
dec
xor
lcall
push
push
leave
cli
xor
lret
bound
nop
shrb
lods
les
aas
shrl
std
push
lret
cmp
sbb
mov
add
xor
xchg
fdivr
push
sub
cld
lahf
sbb
cmpsl
scas
sti
mov
outsl
insb
cmp
jne
dec
cltd
clc
aad
jg
popf
je
lea
fnstsw
lea
mov
insl
push
pop
mov
test
cmp
test
mov
dec
sti
sbb
mov
pop
pop
cmp
mov
pop
fiadds
mov
and
pop
scas
not
jle
movsb
xchg
mov
push
out
popf
scas
aam
imul
xchg
xor
dec
add
loope
sbb
inc
xchg
into
push
adc
xor
sbb
subl
out
xchg
mov
shlb
bound
mov
pop
out
pop
fisubs
jp
or
or
bound
mov
add
pop
pop
pushf
jecxz
and
xchg
fstpl
fsubrp
jp
out
ss
or
cmp
jle
xchg
xchg
insl
fs
cmp
std
hlt
mov
jmp
int3
cmc
aam
xchg
xchg
int
lea
repnz
stos
xlat
lahf
icebp
rorb
kmovb
lahf
dec
mov
xor
fisubl
lahf
insb
cmpl
test
mov
inc
sub
mov
jnp
pusha
jae
cmp
jne
call
push
insl
mov
out
jo
or
jbe
xchg
jg
inc
les
loopne
mov
jne
or
insl
test
dec
aam
inc
outsb
ja
cwtl
pop
pop
sarb
jbe
cmp
sub
xchg
lods
pop
into
cmpb
inc
leave
pusha
fistpl
pop
mov
testl
cltd
or
shl
xchg
mov
mov
cmc
rcl
dec
mov
add
jae
divb
and
and
push
aaa
add
inc
fimull
xchg
rcll
adc
popf
int3
jno
mov
insb
xchg
add
mov
sbb
scas
mov
and
push
out
fcomi
ret
pop
jb
mov
test
fwait
xchg
subb
aaa
xor
bound
cmp
lds
xchg
loop
fisubrl
xlat
fldl
sti
cli
mov
lock
mov
push
mov
out
arpl
cmp
ljmp
flds
adc
adc
ds
sub
shl
mov
addl
gs
mov
insl
sahf
push
dec
mov
sti
or
sub
in
jle
jnp
add
adc
cmp
xor
iret
xor
sub
push
or
fsts
fwait
shrb
dec
mov
test
addr16
enter
out
sbb
out
jno
cltd
inc
aaa
ret
inc
roll
adc
clc
pop
stos
leave
subl
push
fwait
xor
pusha
adc
xor
push
ss
sub
jge
aas
stc
add
add
orb
mov
addr16
scas
push
add
out
adc
lds
out
adc
cmp
aad
pushf
cmp
mov
xchg
adc
pop
in
mov
and
lods
push
pop
sbb
hlt
mov
js
pushf
icebp
bound
jno
mov
cli
jnp
mov
clc
pop
cwtl
xchg
mov
setl
sahf
inc
std
and
add
nop
sti
push
mov
ret
xlat
pop
sti
xchg
pushf
in
pop
out
icebp
sbb
add
xchg
mov
mov
add
stc
jge
gs
in
add
fnstsw
push
pop
enter
sbb
lahf
sub
ss
addb
jp
cmp
iret
and
inc
iret
dec
or
jp
and
push
sub
mov
push
xchg
lea
imul
ljmp
add
push
cmpsb
push
pop
negl
or
popf
negl
lsl
jge
fwait
xor
mov
cltd
xchg
push
lret
or
aaa
lock
or
aas
scas
push
lahf
cmp
adc
dec
adc
aaa
mov
inc
pop
cmp
fwait
jo
test
push
arpl
adc
push
push
sbb
icebp
aam
bound
ds
push
adc
add
mov
push
add
ret
mov
mov
outsb
fsubrs
sub
imul
jmp
dec
test
insl
push
bound
jb
mov
cmp
inc
andb
scas
dec
mov
xchg
lret
ljmp
mov
cmp
sub
cmp
lret
push
fisttps
xchg
cld
ret
adc
roll
cmp
pop
popf
and
bound
cld
jge
push
fiadds
mov
sti
shll
jb
push
jge
xor
lahf
mov
mov
clc
mov
add
dec
or
inc
xchg
or
stos
adc
pop
xlat
adc
pop
adc
jo
mov
out
add
push
lea
out
push
inc
mov
fildl
and
sbb
negl
sahf
xlat
jle
aad
mov
popl
mulb
push
adc
push
pop
sbb
rol
outsb
add
cld
rcr
pop
int
pop
loopne
adc
push
outsb
cmpsb
fwait
cmpl
ret
push
inc
jo
push
mov
xchg
or
xchg
sub
pushf
add
fadds
push
cmpb
or
xchg
aas
jge
push
das
popf
icebp
sub
pusha
mov
push
out
jmp
rcrl
xchg
jp
incb
jne
les
test
nop
hlt
and
sub
cli
addb
dec
lea
cltd
ret
jne
pushf
pcmpgtb
fidivl
jmp
jbe
sub
xor
mov
push
push
out
out
inc
nop
jo
pop
insl
in
scas
adc
sbb
and
mov
shrl
push
adc
jge
xor
and
xchg
jg
or
unpcklps
dec
push
pusha
mov
mov
cmc
add
gs
inc
in
adc
cmp
push
mov
adc
lcall
in
icebp
int3
inc
pop
jb
push
mov
sbb
xchg
test
mov
loope
inc
pushf
scas
xchg
lret
les
stos
mov
cmp
ficompl
shlb
xchg
cld
sbb
fisubrs
adc
out
out
mov
xor
sahf
shll
mov
xchg
imul
sub
xchg
sbb
adc
push
xlat
aam
test
inc
mov
push
insl
dec
rcrl
pop
add
cmpb
rorb
cmpsl
sbb
mov
ret
xchg
push
cmp
and
inc
adc
sbb
lea
mov
ret
or
shll
pushf
repz
sbb
insb
adc
js
pop
sub
jle
movsl
ljmp
adc
jnp
sub
pushf
mov
fs
mov
inc
sub
xchg
lock
rclb
notl
xor
add
mov
pop
xchg
mov
roll
sub
push
and
gs
push
pop
fs
sbb
push
lcall
or
add
fwait
arpl
scas
lock
pop
inc
das
shrl
sbb
clc
sbb
roll
mov
jmp
adc
pop
rol
xchg
out
cmp
jecxz
sahf
pop
push
and
sbb
outsl
push
push
mov
xchg
add
lods
xchg
pop
pop
jecxz
pop
add
fistpll
mov
mov
pop
cmp
or
and
sbb
push
add
jno
add
sbb
js
push
cmp
daa
popa
sbb
insl
sahf
pop
xchg
sti
add
pop
pop
cmp
sbb
jno
jge
xlat
and
bound
inc
cmp
mov
sahf
cmp
lds
fucomi
sahf
lds
ficoml
les
cmp
in
mov
pop
push
jno
lahf
xchg
cmpb
cmp
in
fcoms
xchg
push
or
pushf
aas
pop
adc
outsb
rclb
push
cmp
dec
add
jns
fldl
test
shll
xchg
cld
pop
jne
fistl
sub
pop
or
sbb
cmpsb
lret
popf
mov
add
jno
test
xchg
sahf
xchg
stc
pop
aas
cmp
lock
pop
or
push
hlt
std
and
push
adc
sbb
mov
dec
aam
iret
test
fcmovne
inc
pop
fwait
sahf
jbe
iret
jecxz
notb
pop
fwait
sbb
push
pop
cwtl
mov
adc
jle
cmp
jbe
adc
test
sbb
push
into
pushf
sub
sahf
pop
dec
xor
test
and
fstpt
mov
adc
pop
fcompl
std
xor
stc
pop
lahf
sub
loop
hlt
sub
mov
mov
inc
add
add
ljmp
jle
xchg
jp
mov
ficoms
adc
xchg
cmp
testb
pop
das
pusha
cld
fisubrs
data16
pop
cltd
pushf
sbb
imul
movsb
add
mov
js
leave
imulb
lds
mov
add
sbb
dec
leave
jl
sbb
mov
fs
jle
clc
dec
add
icebp
xor
cmpsb
cmp
movsb
fidivrs
inc
divb
cmpsl
in
jno
hlt
imul
jne
push
cltd
mov
lret
test
pop
jno
ret
scas
rcl
fs
xchg
ljmp
xchg
inc
arpl
push
mov
stc
stos
lret
popf
xchg
sbb
in
sub
and
mul
xor
and
jp
insb
xlat
xchg
movsb
xchg
push
sub
sbb
jns
scas
jl
lods
test
xchg
pop
jb
jnp
jne
inc
popf
add
mov
rcll
cmp
pushf
jp
lahf
inc
mov
popf
mov
pop
sbb
and
mov
or
cmc
push
ret
mov
stc
fdivr
xlat
mov
mov
adc
inc
mov
cmc
pop
popf
fimuls
push
pop
xchg
mov
mov
outsb
ror
xor
push
aaa
jp
loopne
cwtl
pushf
sbb
rcrl
jo
xor
lock
cli
add
jle
inc
and
std
jbe
pop
add
pop
mov
or
sbb
fisubrl
mov
clc
or
imul
mov
test
mov
fxch
addr16
push
sub
sub
push
mov
out
fsts
loopne
stos
sub
push
jno
bound
xlat
es
lret
fcompp
arpl
inc
das
pop
icebp
nop
mov
vpunpckhbw
pushf
jmp
in
mov
xchg
popf
adc
mov
icebp
cmp
lret
ss
fcomi
sbb
in
insb
popl
arpl
movsl
in
sarb
jno
push
xcrypt-cfb
cmpsl
daa
mov
adc
ret
aad
ds
sahf
std
sbb
and
or
dec
lds
add
xchg
inc
add
push
insl
int
and
xlat
jle
cltd
out
pop
push
xor
jns
bound
inc
push
adc
shlb
jle
xchg
shlb
xlat
gs
sahf
fs
sti
pop
popf
or
jno
pusha
mov
iret
xor
or
fisubs
lds
xorl
lret
ficoms
jp,pt
out
addr16
add
sbbl
jp
out
fwait
mov
push
lods
sbb
push
adc
pop
aam
lds
sbbl
and
rcl
cltd
cmp
std
xlat
push
lret
and
cmpsb
mov
sahf
lahf
mov
or
les
mov
mov
decl
ja
pop
adc
fistl
lahf
or
mov
clc
cmp
inc
pop
fidivl
or
mov
cmpsl
dec
jle
adc
push
fisubrs
xlat
pop
jle
mov
lahf
add
imul
push
fst
add
jo
out
pop
sbb
inc
ss
sbb
iret
inc
xor
repz
and
cmpl
stc
cli
stos
ret
fisttpll
ljmp
jp
sbb
nop
jmp
add
mov
mov
enter
xchg
pop
lods
sbb
adcl
pop
inc
sbb
js
xchg
call
push
je
push
divl
pop
jge
test
xor
in
mov
sti
test
arpl
cmp
jbe
cwtl
jge
cmpsl
lock
popl
inc
aam
xchg
and
mov
sahf
mov
push
mov
imul
adc
lcall
lret
fistps
mov
sti
xchg
pop
or
jns
pop
les
dec
jg
push
mov
gs
das
outsl
push
mov
push
in
xor
jae
iret
push
fsubp
je
mov
jnp
mov
arpl
call
ret
lds
mov
mov
pushf
sti
cmp
mov
xor
sub
pop
mov
mov
icebp
fwait
lds
hlt
aam
add
sbb
push
adcb
xchg
push
clc
in
mov
sbb
inc
pop
push
loop
xchg
out
add
adc
js
scas
xchg
dec
sbb
xchg
sbb
loop
sub
imul
fidivl
in
inc
adc
scas
or
and
mov
cli
shlb
cmp
dec
lahf
mov
cmp
pop
orl
mov
jge
pop
in
in
lea
fdivr
sub
add
sahf
popa
std
pop
fstpt
and
pop
mov
jge
fisttpll
stos
pop
ds
cmpsb
dec
lahf
aam
sub
pop
bound
sbb
push
sbb
fwait
in
nop
cmp
adc
xchg
sbb
dec
adc
mov
adc
pop
mov
mov
fildll
sarb
sbb
sahf
enter
cli
fdivrs
int
dec
je
lock
sub
or
push
ror
lods
sbb
mov
dec
inc
ja
cmp
out
fwait
push
sahf
xchg
mov
aad
add
mov
test
fldenv
jle
pushf
pop
in
xchg
sbb
push
add
lret
icebp
out
inc
movsl
fs
pop
mov
cmpsl
pop
pop
adc
xchg
out
inc
push
out
xlat
aam
push
pushf
xor
in
pop
scas
aad
or
rol
popf
popa
daa
loopne
sbb
imul
add
or
xor
fisubs
mov
out
out
push
sbb
out
cmp
push
andl
fldt
push
lahf
mov
rcrl
mov
inc
push
notl
mov
shll
sub
outsl
aad
outsl
popa
arpl
cmp
or
mov
cmpsl
stc
cmp
adc
rcrl
cli
xor
fninit
bound
xchg
push
scas
jp
xchg
rcrl
pop
cltd
daa
jecxz
adc
jns
cmp
sbb
xor
jae
mov
adc
mov
lcall
jg
addr16
jno
cmp
xchg
pop
mov
outsl
mov
mov
xchg
and
push
sbb
or
push
into
sahf
push
repnz
or
lahf
mov
cli
in
sbb
fstpl
rcll
lcall
js
and
xor
cmp
sub
pop
jae
bound
dec
cwtl
hlt
mov
or
leave
cmp
push
lcall
notb
jae
jne
xor
inc
mov
pop
mov
inc
mov
xchg
inc
dec
shrl
gs
push
xchg
ja
enter
sahf
pop
aam
jg
dec
push
out
push
adc
insl
pop
pop
cwtl
rcl
mov
lock
cltd
dec
xchg
gs
popf
or
testl
rolb
fstps
adc
cltd
sbb
pop
xchg
lea
insb
sbb
adc
mov
mov
mov
fldcw
imul
dec
rclb
rcll
icebp
inc
lcall
pop
cli
lds
xchg
aam
out
push
outsl
or
in
rcrl
push
jge
pop
popf
pop
mov
dec
pop
iret
int3
sbb
and
jle
enter
add
xchg
cmc
cmp
sahf
sbb
push
sar
cmp
sahf
out
daa
and
ficomps
repnz
sbb
subb
adc
leave
and
jne
and
mov
add
mov
sbb
insl
sub
mov
adc
dec
sub
adc
sbb
mov
repnz
adc
movsb
test
ret
mov
inc
jp
push
dec
aad
push
sbb
sub
or
or
pop
cmp
push
mov
sbbl
sub
push
mov
imul
and
pop
fists
sub
xor
sbb
popa
outsl
rcr
mov
ljmp
cwtl
push
icebp
rcl
mov
pop
fildl
test
shlb
adcl
bound
lahf
lret
add
and
mov
or
adc
sub
and
in
negl
push
jg
pop
fildl
mov
sub
pop
xor
mov
outsl
mov
pusha
lods
dec
jp
jge
sarl
cmc
dec
fstpl
sti
test
loope
pop
xor
sbb
xchg
test
sub
mov
mov
lods
fistpl
inc
inc
and
scas
sarl
in
sbb
push
inc
xor
or
cmp
adc
sbb
inc
pop
lret
mov
xlat
jg
frstor
outsl
cmc
add
xchg
cmp
add
cmp
push
and
mov
daa
cmp
push
aaa
and
sahf
add
push
pop
dec
mov
int3
xchg
jecxz
repz
mov
xchg
scas
pop
popf
call
je
and
sbb
mov
pushf
mov
mov
mov
or
push
sahf
fwait
mov
scas
inc
in
nop
rorb
jne
sub
mov
add
sbb
scas
add
mov
and
push
push
push
push
inc
and
ja
bnd
popf
push
mov
xchg
add
stc
popf
idivl
sbb
les
roll
push
test
sarl
or
out
fstps
jno
xor
push
pop
in
mov
jl
sub
sub
mov
scas
push
rolb
cmpsb
cwtl
push
mov
cmp
test
stc
lods
jg
das
sahf
mov
jecxz
or
pop
jnp
sbb
cld
lcall
xchg
sti
xor
mov
pushf
dec
pop
add
pusha
fwait
out
repnz
incl
fwait
shlb
or
sub
stos
ror
push
mov
jg
aad
jle
out
out
ds
clc
lcall
mov
pop
sti
mov
es
xorb
fstpt
push
cmovp
mov
sub
mov
pusha
iret
pop
inc
ficomps
push
bound
add
and
push
sub
push
mov
cld
cmp
mov
pop
sbb
sbbl
adc
dec
cmp
in
cmovle
or
mov
in
bound
int
xchg
and
fsubrp
push
or
sub
pop
jge
dec
js
dec
ret
jb
xor
pop
pop
test
jecxz
cld
sti
subb
clc
pop
test
dec
int
stc
xor
mov
xor
mov
adc
ret
sub
scas
or
lds
sbb
sbb
iret
jle
mov
jecxz
dec
ret
cmc
or
inc
aam
std
add
add
pop
fwait
pop
push
and
jmp
push
mov
pop
lods
into
pop
jb
shrl
xorl
push
ret
add
jp
mov
stc
popa
sbb
jae
aam
pop
pushf
push
or
pop
fisttpll
js
sub
lods
pop
xor
or
int3
int
loop
ss
fldl
aad
add
xchg
into
icebp
sub
mov
pop
jbe
mov
ret
je
mov
pop
sub
dec
ret
and
push
data16
and
cld
jbe
fidivrl
or
cli
icebp
push
pop
iret
daa
add
rolb
out
cwtl
fwait
xlat
jbe
aas
fstps
mov
inc
jecxz
pop
push
push
push
dec
rcl
ret
cmpl
fstps
sbb
push
pop
or
cmc
lret
ja
xchg
addl
incb
xchg
xor
xchg
fstl
dec
int
push
cmc
test
push
mov
jmp
shll
pop
add
sub
push
jle
ret
out
mov
pushf
push
out
xorb
adc
adcl
xchg
cltd
sar
mov
movsb
fcoms
add
push
mov
mov
sahf
popf
adc
or
aaa
sbb
cmc
daa
push
enter
or
scas
xor
in
jo
mov
out
int3
loope
subl
rolb
jb
jl
mov
scas
test
dec
pop
sub
sbb
imul
xchg
push
xor
repz
scas
outsb
aaa
sbb
push
add
adc
push
jg
push
popf
jno
mov
popf
cmp
divb
sbb
call
mov
lea
arpl
push
jne
rcrl
xchg
arpl
fdivrl
mov
repnz
rcrl
leave
push
lret
mov
xchg
sbb
das
std
scas
inc
mov
sbb
ss
js
push
loop
pusha
fiadds
inc
clc
adc
scas
add
xor
add
push
sbb
pop
iret
push
js
dec
js
push
mov
imul
push
fildll
mov
nopl
cli
adc
nop
and
and
mov
adc
out
test
or
in
or
ds
inc
test
mov
add
jo
imul
dec
cmpsb
push
jmp
xchg
mov
fdivrl
jp
or
jg
push
mov
sbb
fcmovnbe
push
adc
mov
sbb
add
xchg
inc
mov
in
jecxz
rcrb
xchg
imul
rclb
adc
pushl
xor
mov
xor
cmp
insl
adc
scas
jnp
xchg
dec
mov
push
pushf
xchg
mov
xor
mov
in
stc
mov
add
mov
add
pop
sti
adc
jg
or
dec
cmp
nop
adc
leave
xlat
mov
ljmp
lea
xor
push
js
ret
jns
xchg
xchg
insb
test
xchg
or
popf
sbb
push
sub
pop
filds
fildl
hlt
clc
scas
ja
aam
xlat
sbb
jno
stc
jmp
add
jo
ficoms
lods
push
jnp
pop
xchg
mov
xor
je
mov
add
scas
cmp
dec
idiv
lsl
mov
and
lahf
movsb
fwait
mov
pop
arpl
imul
xor
cmp
xchg
push
icebp
pop
or
clc
inc
xor
mov
push
fcmovne
iret
jno
scas
mov
jnp
pop
pop
iret
xchg
sbb
fidivl
fwait
and
add
lea
pop
push
pop
mov
insl
add
leavew
xor
roll
cmp
iret
and
dec
mov
xchg
fwait
mov
mov
in
xor
pop
jo
aas
adc
jle
dec
lds
inc
ss
sbb
pop
xchg
addr16
sahf
dec
out
push
fildl
mov
fcomps
or
sbb
pop
push
popa
push
pop
call
sti
cli
mov
sti
jne
pusha
sbb
ds
sbb
inc
pop
ja
mov
adc
aad
ja
add
int
xchg
lahf
xchg
fidivrl
pop
aaa
jbe
mov
popa
lahf
mov
xor
mov
out
mov
inc
movsl
mov
sub
inc
cmpl
mov
push
out
mov
aam
xchg
rcr
rcl
cmc
lret
nop
push
test
mov
mov
jno
cmp
dec
push
push
xchg
push
and
and
in
jp
lret
mov
mov
iret
and
pop
pop
dec
scas
mov
fs
pusha
push
pushf
jnp
or
ss
pop
mov
ja
loop
mov
hlt
jecxz
sbbl
lds
mov
cmpl
mov
loopne
pop
sub
mov
cld
decl
lahf
mov
pop
xchg
dec
shll
test
negl
jl
call
mov
sbb
imul
push
add
aam
loopew
addr16
inc
sbb
mov
sub
fsubrl
dec
shr
sub
decb
mov
lods
enter
testb
stc
xor
sbb
bound
dec
out
in
out
or
xchg
cmpsl
fwait
paddd
leave
fwait
nop
sbb
adc
dec
xchg
popf
arpl
pop
add
sbb
push
lods
mov
mov
outsb
movsl
int
adc
movsl
hlt
es
add
mov
and
test
push
fcomip
jnp
and
pop
sbb
xchg
insl
sub
jg
fcmovnbe
pop
outsb
loopne
push
lds
add
sub
sbb
popf
mov
mov
mov
fimull
add
outsl
xor
pop
dec
xchg
xchg
in
ljmp
leave
mov
inc
sub
repnz
jno
loope
enter
xchg
cwtl
jne
hlt
call
pop
mov
inc
mov
dec
dec
fimull
jno
stc
bound
cwtl
aaa
mov
xchg
sahf
push
shrl
push
movsb
pop
outsl
into
sub
sti
sub
repz
adc
std
jae
jmp
rolb
icebp
mov
or
enter
pop
add
sarl
je
mov
dec
dec
jmp
cwtl
addps
cmp
dec
cmpsb
add
dec
jp
popf
or
idiv
mov
aam
rcll
out
pop
pop
shl
adc
cmp
inc
xchg
pop
sub
dec
hlt
push
mov
inc
xor
push
and
ret
adc
clc
and
negb
mov
loope
mov
addl
ss
ficomps
rolb
adc
cmp
enter
out
jae
dec
jmp
pop
jno
mov
sub
adc
jnp
std
out
out
pop
xor
dec
aam
lds
std
clc
cmp
mov
popf
jmp
fsubrs
push
stos
dec
out
dec
xchg
mov
ss
out
ret
cmp
push
xor
jb
scas
sub
xchg
pop
push
lods
icebp
sahf
adc
pusha
insb
mov
push
sahf
fldenv
mov
pop
imul
push
mov
and
stos
mov
jg
ret
jnp
xchg
lahf
jno
dec
mov
out
lret
sub
mov
add
mov
sub
iret
xchg
pop
rcrl
xor
scas
mov
leave
roll
push
adc
sbb
fcmovb
adc
mov
sbb
xchg
scas
jae
push
pusha
fldenv
sbb
lock
stos
test
cmp
dec
fwait
pop
fistps
pop
sti
fisubs
push
es
pop
xchg
cmp
addl
jle
and
jne
lds
push
shll
pop
jno
ret
add
ret
stos
pop
rcrl
cs
cltd
subl
push
cmp
xor
repz
inc
stos
insb
push
add
sub
insb
pop
xlat
loop
push
add
push
popf
loop
test
xchg
in
or
jecxz
cmp
rcrb
or
imul
sbb
xchg
add
xchg
mov
paddsb
push
popf
jmp
js
or
jae
stos
cmpsl
mov
imul
lcall
and
sbb
mov
stos
pop
movsb
sarb
jnp
xchg
lret
scas
pop
inc
sbb
out
ret
ds
and
xchg
mov
cli
push
pusha
jmp
mov
mov
push
xchg
mov
jnp
ret
cltd
push
sti
mov
pop
add
xchg
fisubrl
idivl
in
xchg
in
sub
inc
sbb
ss
push
and
push
mov
pusha
xlat
sbbb
lock
sub
aad
jo
mov
test
pop
pop
jnp
or
inc
js
sub
jle
inc
into
or
inc
std
addb
jmp
hlt
ror
adc
xor
cmpl
xchg
popa
das
push
push
pop
dec
aaa
or
int3
jg
and
jge
std
loope
cltd
sbb
int3
mov
cld
mov
add
inc
fimuls
enter
sbb
inc
jp
pop
xchg
jp
xor
add
adc
fisttpll
scas
jge
adc
jbe
or
sbbl
pop
jae
xchg
push
mov
mov
bound
mov
jg
mov
xor
mov
aas
call
stos
adc
sbb
cld
xchg
aaa
jle
mov
pop
fists
adc
lret
mov
sahf
pop
fistl
dec
push
call
add
std
push
iret
lea
add
out
mov
push
inc
jmp
xchg
mov
cmp
push
xlat
std
xcrypt-cbc
cmpsl
xor
mov
enter
stc
adc
xor
dec
fld1
xchg
cli
jno
femms
shr
int3
popf
out
pop
pushf
and
sahf
sbbb
and
popf
iret
andb
sbb
pushf
sahf
cmp
xchg
sub
adc
inc
xlat
mov
xchg
add
pop
xchg
mov
and
jg
shll
lahf
cli
add
sbb
mov
xchg
pop
jp
mov
push
fldl
in
sub
cs
sub
xlat
dec
clc
popf
mov
mov
pop
in
push
and
shrb
dec
pop
int3
outsb
mov
jne
xchg
fildll
xchg
adc
rclb
cmp
arpl
lcall
lmsw
pop
pop
js
hlt
mov
adc
sti
js
scas
out
jno
loopne
jne
push
mov
outsl
push
fstpl
cmpl
mov
cmpsl
adc
insb
xor
cmp
push
repnz
mov
cmp
push
mov
adc
xchg
mov
mov
jg
loop
jae
or
hlt
mov
fmulp
jp
mov
sub
orl
xchg
pop
imul
cmpsl
xor
pop
jg
pop
cmp
add
jnp
adc
pmullw
popa
scas
pop
lea
mov
pop
dec
jge
je
adc
push
pop
or
inc
test
mov
xor
cwtl
jne
or
adc
adc
cmpsl
ds
aad
sbb
pop
sbb
add
mov
add
push
iret
xchg
dec
frstor
loop
sti
sbb
add
sbb
sbb
sbb
mov
outsb
lods
push
lcall
mov
mov
push
fcoml
lahf
mov
sbb
jl
cli
pop
xchg
jg
mov
mov
pop
push
xchg
loopne
aas
dec
push
das
lcall
pop
sbb
fidivl
insl
pop
popf
scas
nop
bound
adc
fistl
xor
push
sahf
stc
cli
ds
aad
mov
jp
push
jge
test
aad
mov
fstpl
popl
mov
es
add
out
or
xchg
aad
fisttpll
jbe
or
pop
push
fwait
xor
inc
jge
mov
fildl
pop
sbb
sbb
cltd
pop
in
fdivl
mov
ficoms
push
nop
mov
adc
fisubrs
sti
jl
xchg
xor
push
int
pop
pop
sarl
or
loope
sahf
mov
cmp
fwait
stc
cmp
fdiv
and
sbb
leave
shlb
scas
pop
sbb
pop
mov
or
sbb
push
and
loop
adc
dec
sub
subl
dec
repnz
int
mov
sbb
lcall
jne
popf
fadd
ljmp
lods
add
pop
sbb
jecxz
mul
lret
sahf
xor
lret
push
adc
push
into
xchg
cld
sbb
adcl
cs
orb
pop
scas
inc
sti
into
cmp
xlat
sbb
mov
xchg
in
jle
dec
jle
xchg
xchg
fyl2xp1
xor
jge
sbb
jns
pop
fcmovu
mov
fsubrs
push
jle
sbb
in
sahf
pushf
mov
xchg
aaa
sbb
mov
sahf
jecxz
mov
inc
das
std
or
adc
cmp
or
add
dec
sbb
sti
insb
mov
push
into
cmpsl
adc
sbbl
scas
js
add
into
jbe
nop
ds
adc
sbbb
call
jge
jl
lahf
jnp
imul
std
sahf
sbb
pop
outsb
sub
cwtl
push
dec
shll
dec
repnz
sbb
add
and
dec
xchg
aas
inc
jg
cmc
call
bound
incb
adc
in
pop
lds
pop
xchg
in
add
xlat
aaa
jae
or
jmp
or
add
mov
or
sub
push
jge
sbb
mov
jl
ss
mov
ret
fstl
scas
inc
jge
dec
cmp
cltd
mov
lea
mov
daa
adc
imul
sti
mov
mov
jmp
shl
shll
xchg
outsb
inc
dec
pushf
mov
fildl
sti
outsb
sbb
cmc
xor
cmp
lcall
jo
lds
test
pop
rol
or
mov
decl
pop
mov
or
fisttpll
cmp
sbb
cmpsb
jb
adc
test
je
xchg
jno
dec
push
sti
call
inc
and
push
int3
popf
iret
mov
dec
jno
sti
repnz
push
imul
rcr
call
xor
jmp
imul
and
fisubl
push
lea
sbb
push
lods
mov
call
fwait
pop
sbb
add
xor
jne
ror
sbb
xlat
sub
mov
jnp
add
cmp
scas
fwait
nop
mov
test
cmpsl
faddl
or
in
mov
sbb
sahf
pop
dec
pop
fucom
sbb
lahf
jg
dec
adcb
jb
in
icebp
mov
jno
mov
mov
pop
sbb
push
ja
stos
ret
xlat
adc
fimuls
cmp
jg
pop
sub
pop
sahf
fidivrs
popf
in
jno
cmp
fwait
scas
or
rcrl
xchg
xchg
outsb
jp
sbb
and
popa
lods
sbb
push
xor
ret
mov
pop
add
xor
mov
cmpb
sbb
xchg
cmp
mov
lcall
add
popa
popf
lahf
pushf
sar
mov
lock
fiadds
jno
mov
sbb
add
ror
sahf
in
fcomp
push
lcall
loop
push
push
mov
mov
bound
shll
test
mov
add
pusha
in
pop
sbb
push
add
cltd
xorb
jle
std
pop
jl
sti
repnz
cmpsb
pop
xor
xchg
sahf
jno
push
jl
cmp
mov
iret
shll
fdivrp
lahf
imul
xchg
popf
jge
pop
adc
scas
add
sub
adc
jb
repnz
adc
and
adc
jecxz
int3
stos
movsl
adc
popa
sbb
xchg
and
pop
jge
mov
xchg
test
xchg
jmp
push
std
xchg
fistps
test
xchg
mov
sbb
ja
add
xchg
xchg
mov
fs
mov
adc
test
push
ljmp
ret
add
rol
add
sub
in
push
nop
jle
pop
jae
in
or
cmp
insb
cwtl
add
mov
cltd
mov
out
push
push
rcll
cmp
clc
sbb
cwtl
subb
js
aaa
loop
imul
inc
scas
shlb
fidivrl
cltd
aad
sbb
loop
xchg
adc
lods
shrb
pop
fcoml
xchg
add
push
xchg
xlat
push
into
cmp
sbbb
sti
lahf
clc
push
pushf
fdivrp
sbb
sbb
pushf
jns
mov
inc
orl
xlat
fistpl
jle
lahf
xchg
mov
jmp
xchg
sub
fdivrp
adc
push
mov
pop
sbb
pop
xchg
sahf
sbb
pusha
pop
nop
dec
ror
mov
sti
push
xchg
adc
sbb
arpl
or
es
nop
or
sar
sahf
cmp
inc
sti
pushf
xchg
or
decb
mov
mov
sbb
pop
aam
aad
dec
movsl
nop
push
sbb
adc
dec
sbb
mov
leave
sub
sbb
adc
xor
outsl
adc
aad
loope
ficomps
push
xchg
aad
mov
test
loopne
das
clc
mov
xchg
rol
jmp
sbb
pop
push
pushf
push
pop
pusha
outsb
adc
pop
lcall
sbb
add
inc
sbb
loopne
inc
nop
push
lcall
sbb
cwtl
mov
mov
xorb
mov
enter
adc
push
xor
sbb
jb
stc
icebp
xchg
sarl
xor
fwait
sbbl
cmp
mov
sbb
push
mov
sahf
fistps
adc
mov
adc
idiv
xchg
pop
paddw
test
lahf
mov
sbb
sbb
mov
incb
repz
loop
notl
cld
pop
xchg
test
pop
or
push
push
mov
roll
nopl
flds
mov
cmpsl
adc
adc
fistpl
mov
cmpsb
pop
aas
shlb
rcll
mov
aam
fistl
fidivs
xchg
aaa
cwtl
pop
sahf
jmp
cmp
xchg
pop
fstps
cli
jecxz
test
mov
out
add
daa
cmp
mov
in
add
in
sbb
testl
mov
notl
push
adc
nop
ja
pop
inc
add
inc
xlat
insb
fdivrl
inc
mov
addr16
sahf
jl
mov
cltd
shrb
inc
int
push
push
mov
jg
jle
xchg
dec
sub
adc
mov
out
pushf
shl
adc
jecxz
sahf
lock
testb
stos
ds
outsb
sbb
mov
adc
or
xchg
xor
gs
int
rcrb
repnz
and
xlat
arpl
loope
jge
push
cmp
scas
fstpl
push
jnp
insl
pop
jg
aaa
xchg
jbe
out
inc
fdivrl
dec
cld
xchg
cmp
mov
cmp
lret
insb
xchg
xor
jge
roll
notl
lods
jge
xchg
or
adc
pop
push
repz
imul
cli
xchg
xchg
int
das
cli
fnstsw
xchg
push
pop
push
adc
std
fwait
mov
sbb
neg
push
lcall
cld
pop
sti
pop
pop
int3
cmc
into
fstpl
int3
sub
test
sbb
xchg
mov
adc
leave
lods
out
fwait
pop
testb
pop
aaa
fwait
lea
xchg
sub
sub
push
pop
xchg
mov
push
fists
mov
fistpll
mov
xchg
aaa
std
adc
xchg
lods
xchg
in
push
cmpl
repnz
in
in
cwtl
es
xchg
pop
out
lahf
lahf
mov
pop
sbb
cmp
push
add
adc
adc
or
sti
loopne
ja
ret
pusha
mov
sbb
cli
fisttpl
aaa
data16
add
mov
aaa
into
mov
pop
or
setno
push
fwait
lds
and
fisttpl
loop
sti
jnp
out
pop
mov
lds
pop
push
jnp
data16
mov
dec
jnp
cmp
repnz
jg
xchg
push
jbe
adc
push
fwait
in
mov
ja
lds
cli
push
aas
fwait
xchg
push
test
fisttpl
cmp
fcmovu
pop
adc
push
loopne
out
lahf
imul
cld
adc
push
or
pop
mov
push
or
jae
cwtl
xor
xchg
pop
in
sarl
fiadds
sbb
pop
add
dec
fnsave
xorl
fwait
cmc
cmp
rcrb
rcl
fstpt
pop
add
mov
sti
sbb
cmp
scas
sub
loope
stc
out
int
jne
test
xchg
frstor
mov
xchg
xchg
repz
jno
jp
adc
jg
dec
xchg
dec
lcall
sahf
insb
xor
pop
cmp
fildll
sbb
or
cld
mov
rcrl
sbb
sar
cmpl
mov
xchg
popa
mov
mov
or
mov
nop
ds
std
mov
mov
sbb
inc
xchg
and
rorl
psubsb
pop
loopne
mov
or
and
or
sbb
sbb
mov
stc
rcr
jae
outsb
sbb
pop
pop
popf
repnz
insb
daa
jae
push
sbb
dec
cltd
mov
xchg
sbb
lahf
or
cs
dec
popf
pop
xchg
loopne
push
test
cltd
jle
add
pop
out
jnp
jns
pop
rcrl
testb
and
push
enter
hlt
stos
adc
push
jp
outsb
mov
and
lahf
hlt
test
jmp
nop
push
xlat
sahf
or
hlt
pop
cmp
ds
icebp
clc
loopne
mov
fnstsw
pop
int3
fisttpll
mov
push
out
popf
jg
push
xchg
outsl
andl
dec
adc
sbb
mov
lret
fcompl
sbb
pop
xchg
aas
mov
inc
mov
divl
xchg
ret
shr
mov
adc
mov
pop
adc
insb
loop
pop
insl
mov
xchg
inc
int3
mov
cmp
mov
in
pop
xor
les
mov
xchg
fcmovnu
btc
mov
xchg
pop
mov
mov
fidivrl
lcall
push
mov
xchg
repnz
cmp
rolb
leave
push
sbb
mov
inc
movd
inc
stos
fistpl
cld
xchg
test
or
jb
out
or
stc
pop
stos
fwait
addr16
rcrl
jne
jnp
jmp
push
pop
lahf
xor
xchg
orb
push
mov
jecxz
repnz
mov
pop
xchg
mov
std
or
or
aas
loopne
in
fcompl
fstpl
dec
push
icebp
fsts
pop
or
sbbb
adc
mov
in
pop
aas
push
std
aad
je
cmp
pop
call
decl
push
out
pop
nop
jbe
pop
pushf
cmp
sbb
pushf
into
push
or
fsubrl
and
jg
and
sahf
sbb
int
in
mov
in
shlb
fsin
arpl
in
popf
mov
fimuls
xchg
divb
mov
repnz
xchg
sahf
rcll
sbb
mov
dec
ret
push
and
sti
jbe
add
ds
and
cmp
in
push
cmp
sub
mov
xchg
popf
mov
pop
roll
fldl
nop
mov
add
jns
repnz
push
cmpsl
sbb
pop
mov
jb
jae
cld
adc
xor
jge
out
sbbb
add
repz
xchg
adc
rol
pushf
adc
outsl
imul
sti
xchg
jl
lods
outsb
sbb
cmp
push
sbb
sti
sti
cmc
sbb
mov
loop
xor
lcall
xor
and
push
aaa
mov
mov
in
stc
cmp
sub
cwtl
repnz
cmpsb
xchg
pop
push
je
imul
mov
cmc
sbb
bnd
pop
pop
mov
ret
jmp
cmp
ficoml
mov
jp
lret
pop
cmp
sbb
cmpsl
xchg
xlat
stc
mov
outsl
jge
or
or
sbb
mov
lock
in
xchg
testb
pop
loopne
out
sahf
push
xchg
rorl
cmp
aas
sahf
jne
adc
cltd
sti
pop
push
xlat
cmp
mov
push
fwait
cmp
inc
lret
in
dec
cmp
mov
mov
fwait
sub
jb
cmp
add
cs
cmpl
in
cld
cwtl
or
mov
pop
xchg
mov
or
lahf
aas
das
aas
iret
decl
es
mov
fwait
out
nop
shl
repnz
in
cwtl
aas
push
mov
cmpsb
fisubs
mov
sti
sbb
fistps
adc
lods
xchg
pop
sbb
jmp
cli
cmp
add
mov
pushf
push
push
cltd
les
fists
mov
cs
mov
test
movsl
sahf
xchg
dec
loop
aaa
rcrl
xchg
std
xor
fstl
outsl
icebp
jge
leave
pop
cmp
cmp
xlat
cld
xchg
lahf
or
jb
mov
pop
jae
test
es
pop
outsb
jle
mov
or
jg
je
push
mov
mov
andl
sub
insl
pop
js
fcomip
xor
clc
add
and
sbb
scas
pop
xchg
fs
lods
and
imul
xchg
push
pop
enter
xlat
sbb
stc
outsl
lock
sarl
jns
push
pop
enter
xlat
sbb
faddp
mov
mov
mov
roll
lahf
out
or
mov
lcall
xchg
cmpsl
pop
mov
jb
xlat
aad
popf
sub
pop
ret
test
les
xor
lods
jp
pop
in
cmp
add
shll
adcl
into
pop
mov
sahf
adc
negb
xchg
or
lahf
aam
mov
push
xchg
lcall
sti
out
mov
mov
leave
aam
cmc
mov
in
stos
push
stc
jmp
sbb
dec
or
stc
movl
imul
xorl
xchg
dec
jp
mov
sbb
xor
xchg
lea
adc
out
scas
push
std
or
push
mov
push
call
outsl
enter
pop
mov
fists
or
jp
sbb
imul
out
adc
incb
push
sahf
iret
fistpl
pop
adc
push
std
push
mov
xchg
xchg
xchg
maskmovq
negl
mov
mov
stc
js
cmp
enter
jecxz
fstps
fpatan
test
xchg
sbb
std
aad
fsts
cmp
xchg
loope
rolb
pop
mov
ret
imul
lahf
das
and
daa
mov
jle
jbe
call
lret
mov
sti
pop
push
aam
int3
cmp
andb
xor
and
mov
repnz
inc
data16
push
pop
add
mov
das
cmc
mov
xchg
jl
subps
cmp
or
jnp
mov
mov
popa
or
jg
mov
in
jp
sub
lods
fcmovnb
inc
sub
fistpl
loop
sti
jnp
xlat
pop
mov
das
cmc
sbb
ficoml
sahf
sbb
sbb
dec
mov
or
mov
pop
ror
fs
adc
pop
faddp
cmp
sbb
psubw
mov
pop
fistpll
jb
sarl
adc
mov
jns
mov
xchg
jmp
sbb
scas
sbb
sti
jg
push
lcall
dec
popf
fcomps
xchg
lcall
adc
xchg
mov
cmp
loope
mov
roll
or
xchg
mov
push
std
or
mov
cld
cmpb
icebp
push
fistpl
lcall
push
cld
stc
push
and
std
xchg
jecxz
mov
test
xchg
fadds
xchg
mov
cld
pop
scas
incb
jne
lcall
dec
push
stos
cmp
fnstcw
or
mov
das
jge
setns
and
mov
pop
fcomp
movsb
test
sbb
mov
fnstcw
pop
mov
cwtl
mov
cld
mov
push
sbb
fistl
stos
iret
mov
xlat
cld
pop
mov
idivb
or
mov
popf
or
stc
cmp
incb
fwait
in
xchg
sub
ficomps
pop
push
jle
jbe
push
pop
xor
sbb
push
popa
mov
into
jbe
fs
or
lds
or
mov
repz
xor
mov
pop
hlt
add
adc
cmp
and
or
insl
ret
orl
pop
and
pop
loop
cmp
jge
sbb
repz
aad
jae
lds
lock
cmp
xchg
cld
mov
push
xlat
mov
fs
fisubl
pop
jne
cmp
sbb
sbb
in
pop
mov
push
mov
xlat
jnp
pop
outsl
lock
cli
pop
pop
fidivl
sub
lcall
popf
xlat
pop
stc
adc
jae
rclb
loopnew
push
mov
jne
sbb
mov
ficomps
pop
aaa
iret
shl
fisttpll
mov
push
xchg
cld
iret
decb
rcll
int
mov
in
notb
incb
adc
xorb
cwtl
jb
push
adc
jbe
popf
add
imul
scas
or
cltd
mov
notb
insb
cmp
lcall
adcb
push
or
pop
xchg
xchg
arpl
pop
aas
std
mov
testb
fidivrl
or
outsl
cmp
inc
sbb
pop
cmc
sub
jl
push
mov
xchg
cmp
jae
sub
aaa
pop
ds
outsb
mov
outsb
aad
outsb
pushw
xchg
cmp
push
cs
fldl
pop
xor
leave
cmp
mov
sti
cld
test
cmpsb
fcmovne
mov
jno
pop
sub
cmp
push
xlat
test
pop
and
fsubl
fcmove
push
mov
dec
bound
mov
xlat
jnp
mov
mov
push
cmp
mov
jp
hlt
pop
mov
sbb
fxch
scas
outsl
cs
jnp
loopne
xor
mov
adc
xchg
shll
shrl
push
xchg
rorl
push
sti
xchg
inc
xchg
cld
jae
cltd
add
dec
push
adc
inc
std
paddsb
or
dec
dec
std
sub
sbb
or
mov
das
in
jg
mov
andl
shrb
test
cld
cltd
jbe
paddd
or
xchg
cld
adc
xchg
add
or
pop
bndldx
loopne
sub
outsb
sbb
adc
mov
cmc
mov
xor
push
jbe
mov
push
xchg
sbb
lahf
xchg
mov
mov
pop
xchg
sbb
ja
jl
pop
fisttpl
arpl
daa
xchg
in
rorb
mov
dec
idiv
jno
push
mov
loop
sar
fildl
cwtl
mov
adc
inc
mov
mov
push
mov
jg
nop
and
test
add
xor
push
push
fistpl
pushf
insb
in
cmc
jbe
mov
aam
fs
push
cmp
pop
cmp
push
sbb
sti
sti
xchg
mov
or
push
aas
adc
popf
sbb
xchg
lahf
mov
nop
pop
insl
xchg
inc
push
mov
add
aaa
sbb
je
push
aaa
sti
cmp
inc
or
jmp
push
pop
fmuls
and
mov
sbb
mov
outsl
hlt
mov
cmpl
pop
mov
mov
and
mov
xchg
lea
pop
xchg
xchg
loop
cmp
and
sub
xchg
sbb
enter
pop
push
lcall
sbb
add
clc
pop
sti
sti
push
mov
or
sbb
push
int3
orl
dec
add
add
pop
int
sarl
cmp
cmovo
push
stos
xchg
paddd
lret
std
ficoms
xchg
fwait
aas
imul
cmp
pop
sub
cmp
push
sahf
test
jle
pop
mov
push
mov
xchg
push
stos
fnstcw
or
jg
lahf
sahf
xchg
or
fdivp
ffreep
xor
push
into
push
lds
ret
dec
xchg
lret
jge
inc
mov
loopne
ljmp
dec
rcrl
mov
sbbb
jmp
jae
lea
mov
jnp
je,pn
xchg
sbb
pop
subl
sub
mov
insb
fwait
xor
jl
mov
cmpsl
gs
xor
icebp
cmp
nop
xor
in
les
or
fndisi(8087
xor
cmp
sbbl
push
xlat
pop
mov
outsl
hlt
sbb
lret
cli
jge
ficompl
mov
std
add
lds
ffree
roll
je
pop
or
leave
ljmp
adc
and
and
mov
cmpsl
adcl
push
xchg
out
push
std
mov
pop
and
lcall
sbb
adc
setbe
sti
cld
add
adc
incb
sbb
decb
out
orb
xchg
add
fwait
push
jg
mov
sbb
pop
xor
pop
cmp
mov
dec
outsb
sbb
mov
dec
jge
inc
mov
or
dec
cmpl
cmc
or
pop
std
or
cwtl
lahf
sbb
nop
rorb
push
add
xchg
sbb
cmpl
nop
sbb
pop
push
or
ja
cmp
testl
add
xchg
push
addb
push
lea
repz
add
or
rcrl
add
dec
adcb
jmp
or
cmpsb
mov
ret
xlat
mov
sti
and
xor
xchg
inc
in
push
ret
add
cltd
jmp
out
in
out
push
sbb
call
in
dec
pop
cli
repnz
std
repz
loop
inc
in
jge
cmp
loope
cmpsl
icebp
addr16
mov
lods
scas
mov
test
cltd
and
mov
push
test
lahf
shrb
sarb
stc
fists
loop
ss
dec
test
mov
scas
movsl
add
mov
xor
or
rcrl
lahf
xchg
push
push
test
add
cwtl
shll
xlat
popf
scas
dec
xor
push
push
daa
stc
add
cld
mov
mov
sub
shl
mov
push
sbb
dec
add
push
dec
lods
js
xchg
xchg
pop
add
popf
xchg
sub
pop
outsb
jne
outsb
sbb
cmp
sub
pop
push
jns
push
cmp
insl
adc
or
hlt
or
scas
jo
adc
mov
test
cmpsl
loop
mov
into
sub
and
mov
cmc
int
mov
pop
pop
inc
das
ja
and
jge
xchg
sarl
aas
adc
pop
jl
int3
pushf
mov
cli
outsb
jno
xchg
insb
inc
sub
fstpt
jle
lret
jns
pop
mov
push
cmp
sub
lahf
inc
mov
adc
lea
mov
or
push
adc
jecxz
das
fcmovbe
mov
fildl
sti
test
push
nop
fildl
jp
mov
sahf
in
insb
stos
lcall
xchg
jg
add
movsb
push
fsubrl
dec
call
mov
sahf
mov
mov
mov
pop
pusha
sti
repnz
hlt
enter
pushf
fistl
push
sub
jne
xchg
cmp
push
mov
icebp
data16
pusha
push
mov
lahf
cltd
daa
sbb
sahf
jne
jno
nop
sbb
in
sbbb
dec
xchg
mov
fs
mov
push
mov
shl
mov
popf
movsl
shlb
cmpl
rol
xor
push
cmpsl
push
daa
mov
xlat
inc
adc
jg,pt
pop
sub
mov
dec
insl
push
std
cmp
cld
rorl
dec
or
pop
sbb
cmp
cmc
inc
mov
test
jle
mov
int
xlat
add
push
nop
pop
stc
in
cvtps2pi
inc
fnstcw
xchg
jp
int
fsub
push
sub
jno
pop
cmp
pop
lea
lcall
iret
in
dec
cmp
pop
out
inc
jge
xchg
mov
jae
mov
jnp
sbb
jmp
dec
mov
sar
lahf
xor
sahf
popf
fwait
insb
dec
sbb
inc
adc
pushf
push
xlat
xlat
mov
and
in
push
jecxz
cwtl
push
sti
cmpl
add
imul
jnp
xchg
test
dec
popa
loopne
xor
pop
jno
sti
mov
shll
in
sbb
add
dec
mov
and
scas
mov
sbb
cmp
sbb
pop
sbb
test
or
add
popf
leave
lcall
scas
movl
stos
cmp
ja
pop
test
scas
es
push
lcall
sub
in
jae
and
stos
nop
lret
sbb
es
out
mov
pop
xchg
mov
lahf
fstpt
cwtl
fnstsw
fisubrl
pop
inc
cmp
mov
add
xchg
adc
dec
jl
lret
pop
pusha
jnp
es
fistps
and
sbb
leave
popl
pop
int
pop
fwait
pop
sbb
mul
mov
sbbb
jp
sbb
mov
or
ja
xor
jl
dec
inc
add
mov
idivl
push
jg
sahf
ja
pop
in
sbb
mov
jns
gs
xor
pop
pop
or
sbb
push
negb
pop
iret
setg
out
and
mov
pop
scas
fwait
call
push
sbb
add
push
push
mov
ret
sbb
add
push
fbstp
mov
inc
cmpsl
mov
fidivrl
ds
pop
mov
icebp
xlat
pop
mov
inc
sbb
cld
out
push
mov
cmp
int
cmp
rcll
push
sbb
loope
push
test
mov
push
and
lea
cmp
sbb
aad
jno
int
sarl
or
std
or
fmuls
cmp
jmp
ljmp
stos
adc
and
xchg
fwait
dec
fcmovne
mov
sub
imul
test
fistl
fwait
and
addl
or
inc
daa
iret
jo
or
xor
push
or
test
in
pop
sub
not
lods
scas
sbb
sub
mov
sbbl
fwait
push
daa
and
std
stc
gs
imul
jae
mov
aaa
movl
into
pop
pop
sbb
call
test
xor
icebp
pop
repnz
mov
enter
arpl
loope,pn
pop
sahf
loopne
mov
push
mov
cmp
in
pop
movsb
andl
loopne
loop
add
pop
in
xlat
repz
cmp
or
insb
xorl
push
iret
sbb
or
cs
push
or
and
pop
add
mov
lods
sbb
popf
rsm
pop
jge
cmpb
insl
xchg
adc
add
stc
cmpsl
sbb
dec
loope
repnz
mov
popf
mov
jl
push
push
ss
shr
xchg
sahf
popa
in
int
cmp
push
xadd
push
into
jnp
adc
into
dec
pusha
lea
jae
fcmovnu
mov
or
outsl
ss
test
mov
or
sub
xchg
pushf
pop
xlat
mov
bound
cmp
jo
lock
cmpsl
les
mov
xlat
mov
xsavec
mov
fldcw
lods
jae
dec
inc
mov
cli
testb
xchg
fiaddl
out
insl
mov
repz
es
aam
notb
add
fmuls
adc
ud2
pop
sub
inc
cmc
es
scas
push
or
mov
cli
push
jno
aam
cmp
sbb
jmp
mov
jle
pop
call
xchg
das
testb
popa
divl
ficomps
push
mov
stos
lahf
push
mov
lods
ljmp
cltd
fwait
ret
std
pop
jg
push
fcmove
mov
fwait
movsb
xor
mov
rolb
jg
xchg
xchg
xlat
pop
mov
scas
push
xor
push
mov
das
xchg
sahf
movsl
or
jb
jl
mov
cmpsb
mov
jae
pcmpeqw
push
mov
add
jecxz
cmpxchg
lods
jl
scas
les
fidivl
dec
fisttpl
popf
lds
push
jbe
mov
pop
ss
sahf
cmp
mov
out
fistl
imull
out
movsl
fisubl
je
mov
mov
mov
lds
outsb
int3
rcrl
push
xor
adc
cli
or
or
flds
adcb
test
test
das
faddl
mov
fiadds
nop
enter
in
lea
daa
sub
or
sbb
in
sbb
xlat
mov
lahf
jle
or
xchg
mov
fisttps
lds
scas
ret
xor
ja
fistpll
mov
loopne
mov
rolb
adc
sbb
mov
cmp
jno
out
push
sbb
sbb
lcall
xchg
jecxz
ja
sti
add
aaa
push
loopne
dec
out
js
xlat
jg
in
push
add
call
out
xchg
fwait
dec
dec
and
inc
jecxz
mov
out
icebp
xor
aad
std
insb
scas
push
mov
inc
mov
cmc
and
xor
adc
int
push
lea
xchg
cmp
lock
cmp
cmpsb
push
add
xchg
or
push
pusha
mov
stos
in
pop
adc
mov
or
ds
xchg
adc
cli
cmp
mov
fdivrl
hlt
insb
lea
imul
sbb
xchg
or
jne
ljmp
jmp
or
mov
pop
hlt
jge
popf
adc
pop
imul
dec
sbbl
xchg
loop
cwtl
xchg
mov
mov
push
adc
push
xchg
mov
dec
mov
mov
call
repnz
pop
icebp
xchg
xchg
fucomi
mov
push
or
mov
add
mov
pushf
fwait
and
lods
mov
popa
cltd
lds
daa
push
out
outsl
movsb
add
mov
loop
xchg
inc
jne
adc
mov
fwait
cmp
out
dec
adc
pop
push
scas
test
cltd
push
mov
lahf
popf
cmp
mov
xchg
out
add
jno
cmp
push
sub
loopne
xor
cmp
add
or
cli
xchg
dec
dec
insb
addl
add
inc
lock
pop
jmp
mov
lock
test
sub
adcl
inc
or
loopne
xchg
rcrl
leave
or
mov
test
mov
in
push
aas
fnsave
test
push
out
rcrb
mov
cmp
push
cmp
pusha
mov
rorl
xchg
iret
xchg
push
pop
stos
mov
insl
test
xorl
roll
mov
js
xlat
dec
aam
std
pop
jno
add
push
sahf
add
xchg
jbe
movsb
sbb
ja
mov
repnz
xor
pop
and
in
jl
sahf
fs
js
mov
lcall
jno
push
enter
stos
cmp
data16
pop
xor
in
inc
or
push
dec
sbb
pop
leave
mov
fcompl
nop
sbb
test
out
insl
sub
fisttpl
jle
clc
mov
js
mov
fnstcw
mov
pop
mov
inc
shll
jmp
push
clc
pop
xor
les
jnp
sti
mov
ds
leave
jo
xor
cli
sbb
xor
nop
push
fisttpll
jae
pop
cmp
cld
dec
jno
xchg
aad
cmp
mov
fdivs
inc
shr
push
xchg
push
sahf
xchg
ja
add
enter
inc
fwait
sti
mov
push
jmp
rorl
cmpsb
les
sub
xlat
scas
jmp
add
inc
in
pop
xchg
out
icebp
and
in
in
fistpll
jle
jle
fcomip
cmp
add
mov
notl
push
xor
aaa
jl
fwait
cmpsb
xchg
fdivrp
add
jnp
fdivl
jge
pushf
adc
push
fnstsw
and
sbbb
dec
xchg
mov
mov
xchg
rorb
mov
int3
xchg
sbb
pop
pop
fcomps
lcall
lea
sbb
aad
adcb
jp
movsb
push
add
lods
sti
ficomps
lods
pop
xlat
adc
add
cmpsl
fs
mov
lret
sbb
jmp
leave
cmp
or
sbb
sbb
into
sarb
add
pushf
or
in
xchg
mov
mov
mov
mov
int3
js
sti
xchg
sub
cld
and
jbe
popa
mov
lahf
out
fiaddl
aam
sbb
out
out
lock
xor
pop
push
bnd
sbb
jge
pop
push
inc
inc
std
or
adc
out
add
loop
inc
enter
pop
test
pcmpeqw
pop
enter
rcl
es
iret
add
mov
cmp
fildll
aas
mov
or
sub
add
test
push
sahf
shlb
jl
pusha
pop
sub
sbb
add
fidivrl
fs
mov
jne
es
rorl
enter
add
add
xchg
aas
add
and
mov
pop
jg
fisubl
sub
cmpsl
mov
mov
mov
sahf
sbb
mov
scas
faddp
lahf
mov
push
pop
loop
aaa
aaa
outsl
xor
xchg
mov
scas
mov
adc
push
inc
mov
adc
add
pushf
fstps
sbb
in
sahf
mov
in
pushf
adc
loopne
pop
add
outsl
xor
insl
lret
iret
jbe
lock
add
xor
ret
adc
neg
adc
dec
aaa
cmc
cmpl
add
stos
aad
mov
push
loop
movsl
xchg
aas
icebp
pop
out
push
sub
out
pop
enter
out
cmp
mov
and
icebp
and
test
sar
inc
iret
cmpsb
cli
pop
icebp
adc
into
adc
shlb
fninit
loope
add
push
out
sbb
adc
pop
add
dec
mov
into
add
mov
aaa
jle
xlat
in
xchg
sbb
seta
leave
push
lds
add
cmp
scas
mov
or
pusha
sti
pop
ds
jno
pop
mov
movsb
xor
add
stc
mov
jle
sahf
or
inc
pop
lret
push
hlt
pushl
pop
pop
jle
leave
xchg
cli
mov
pop
aaa
xor
push
lds
cmpsb
sbb
pop
sar
xchg
xor
dec
jbe
ret
and
pop
cmp
cmp
scas
inc
dec
cld
add
jmp
call
mov
insl
es
fnstsw
test
lock
sub
mov
cs
cmc
push
push
nop
xchg
mov
add
sub
push
notb
mov
sti
sbb
enter
jmp
mov
pop
mov
and
jnp
fistpll
dec
ljmp
pop
enter
shrb
xchg
icebp
xlat
mov
out
jbe
popf
pop
ret
enter
add
aam
das
test
xchg
pop
sub
enter
repz
dec
mov
xchg
xchg
rorb
xor
or
js
dec
xor
hlt
cli
mov
push
faddl
fcmovnu
idivb
cli
mov
adc
aas
insl
movsl
in
pop
cli
shrl
push
test
xlat
arpl
stos
lea
jge
in
add
sbb
enter
lds
cmp
cs
add
imul
jae
sbb
mov
lcall
mov
xchg
sbb
mov
sbb
outsl
fstp
jmp
je
pop
jmp
call
cmp
imul
cmp
imul
test
sahf
adc
inc
repnz
push
xchg
lahf
dec
xchg
popf
daa
dec
sbb
sbb
push
adc
xlat
stos
int
lahf
adc
jno
cli
push
and
sbb
fiadds
ja
rep
call
stc
leave
and
jle
ljmp
cmp
fucomip
imul
call
pop
mov
sub
adc
sbb
mov
repz
and
jno
pop
arpl
rolb
jmp
out
das
sahf
movl
mov
mov
adc
getsec
xchg
fxch
add
fwait
lcall
jge
and
push
cli
adc
jecxz
rol
loope
out
hlt
hlt
int
mov
ficompl
pop
xchg
sbb
stc
sbb
sub
or
call
rorb
sbb
adc
fidivs
jmp
push
cmpsb
gs
jne
insl
pushf
add
out
or
gs
push
jns
pusha
and
dec
lret
mov
sub
lret
std
sbb
fildll
push
mov
add
jp
test
mov
test
movsl
adc
sbb
sbb
cwtl
pop
push
insb
pop
pop
aaa
add
mov
xlat
cwtl
lahf
adc
xlat
lahf
mov
mov
push
cli
jmp
jecxz
int
in
mov
push
xchg
rclb
jmp
scas
mov
repnz
sbb
or
jle
xchg
test
addr16
cmp
inc
add
std
mov
arpl
pop
push
movsb
lret
outsb
jmp
inc
or
pop
push
pop
push
out
into
mov
js
cmp
cmp
mov
jg
lahf
dec
adc
data16
mov
repnz
inc
inc
mov
or
rolb
push
pop
in
into
pushf
lcall
push
xchg
xchg
rorl
mov
sbb
pop
dec
sti
cmp
push
cmc
pop
sahf
mov
addr16
scas
hlt
mov
mov
mov
sbb
or
mov
xchg
pop
out
mov
mov
fwait
xlat
jno
mov
inc
in
xor
subl
fsubrl
mov
mov
push
jne
pop
and
add
cmp
ss
and
cmp
xor
mov
movsl
mov
add
and
daa
mov
push
or
jle
push
addb
xor
sbb
xlat
xor
xchg
pop
addb
ja
cmpb
pop
cltd
imull
jmp
orb
sub
push
aad
movsl
jbe
leave
mov
add
fnstsw
jle
or
aas
adc
cmp
ficoml
ds
xor
lock
xchg
pop
lret
adc
and
rclb
in
dec
xchg
dec
inc
sti
jge
xchg
add
jp
fs
add
adc
push
jbe
scas
rclb
cmp
je
adc
hlt
mov
fsubr
lahf
dec
ds
shl
xchg
fcmovb
cwtl
lret
inc
pop
dec
pop
pop
and
sub
jo
ja
mov
jb
jle
sbb
adc
ja
dec
pushf
sbb
push
push
inc
fnsave
and
sub
dec
test
pop
js
lahf
in
jle
ds
mov
das
dec
mov
xor
pop
inc
dec
mov
out
notl
sbb
pop
jp
in
sbb
pop
sbb
mov
jl
sbbl
xchg
push
into
jp
mov
mov
sbb
jmp
in
cld
fildll
leave
dec
loopne
ljmp
cmp
xchg
pop
pop
insb
sub
daa
ljmp
push
dec
shl
movsl
push
cltd
inc
sbb
xchg
sbb
push
mov
push
call
fists
push
dec
mov
stos
pop
int3
sbb
jp
outsl
xchg
jle
mov
push
lahf
add
fidivrs
stos
stos
mov
pop
mov
shll
and
pushf
mov
ds
jno
cmpsb
sti
sbbl
jmp
jnp
mulb
push
jl
mov
sbb
fisttpl
and
ds
add
jmp
push
push
xlat
fwait
cwtl
rolb
mov
insl
push
stos
push
sbb
push
in
std
add
gs
loop
aam
inc
and
xchg
xlat
xchg
push
lahf
push
pushf
dec
fwait
jbe
add
jb
mov
mov
xor
loope
mov
mov
mov
fstl
jge
jge
icebp
sbb
push
test
mov
pusha
mov
cld
loop
push
popf
sub
pmuludq
jnp
pusha
pusha
dec
cwtl
sub
and
out
and
fsubrl
xchg
pop
push
fwait
mov
dec
xor
sbb
push
add
stos
xchg
jp
xchg
mov
jmp
or
xlat
sahf
mov
mov
popf
popfw
and
and
pop
or
xchg
fstpt
in
leave
mov
popf
mov
jg
xchg
inc
sbb
xor
loop
out
adc
dec
mov
jmp
pop
mov
add
sbb
and
or
scas
in
xlat
aaa
jg
lret
jecxz
sbb
fcomi
or
mov
ss
test
push
cmc
in
cltd
pop
cmpsb
cwtl
in
lea
loop
cmp
xlat
pop
sbb
inc
insb
xor
mov
ljmp
dec
mov
into
test
repnz
xchg
scas
aas
mov
testb
inc
adc
rolb
dec
lods
xchg
int3
shll
mov
fists
aas
sbb
lock
addr16
in
les
outsb
sbb
hlt
mov
inc
push
push
shrb
nop
lahf
fdivrp
sti
adc
sti
mov
stc
jno
mov
push
lahf
rorl
popf
js
sub
xchg
addr16
push
lcall
fwait
outsl
scas
test
into
js
xchg
stos
cld
push
pop
jno
test
cmpsb
jo
inc
stc
outsb
aad
lahf
stos
mov
mov
jmp
sub
xchg
cmp
pop
and
and
adc
jmp
stos
cmp
jns
add
lret
sbb
jno
in
jp
clc
sub
fcomps
push
orl
xorb
test
roll
fistl
dec
mov
cmp
aam
dec
xor
mov
icebp
inc
jge
repnz
test
pop
and
stos
outsb
xchg
adc
shlb
icebp
cltd
sahf
sbb
and
xor
dec
cmp
xlat
into
and
js
cmc
xlat
sahf
mov
mov
xchg
xchg
fstps
sbb
pop
outsb
jne
add
jnp
sub
aam
mov
mov
sub
scas
iret
scas
jbe
or
and
orb
pusha
mov
mov
fdivs
ret
loopne
mov
sbb
and
sahf
mov
pop
mov
shrb
push
mov
mov
jg
out
sbb
sbb
jae
ret
push
sbb
mov
adc
sub
std
ja
pop
and
mov
jp
and
fistl
fistpl
or
push
sarl
pop
cli
cli
loopne
mov
push
pushf
fsubs
mov
rorl
mov
stc
aam
lahf
pop
ljmp
idivb
mov
xchg
int3
je
xchg
test
rorb
dec
rorb
lahf
jno
outsb
push
ss
ss
or
mov
dec
xchg
ja
fs
jp
jge
add
push
sar
sbb
add
sub
repnz
sbb
movups
pop
insl
cmp
or
std
mov
decb
dec
sbb
aam
movsb
movsb
cltd
cmpsl
mov
add
icebp
jle
mov
test
jecxz
and
jp
mov
jp
insl
std
jl
cmp
sbbl
scas
nop
fiadds
pushl
test
lcall
jl
or
lret
sahf
aam
push
adc
or
mulb
popl
out
aaa
xchg
inc
cmp
pop
jg
pop
outsb
xchg
fsin
fucomi
arpl
sub
fcomps
fldenv
or
bound
sbb
adc
std
shl
xorb
add
fstl
mov
ljmp
cld
pop
loop
mov
cmp
out
loope
daa
cli
fisubrs
jno
into
lret
out
pmaxub
push
xchg
xorb
jns
ret
sbbl
and
xchg
sahf
jg
inc
loopne
jp
and
xlat
aas
jp
jmp
pop
outsl
in
cmpl
cmp
jg
xchg
pop
movsl
call
pusha
jns
add
loop
movsl
sub
call
popf
in
fisubrl
sahf
xchg
mov
dec
sbb
dec
movsb
add
xor
xor
mov
jo
lahf
add
mov
icebp
repnz
gs
cmc
shll
jge
popf
loope
mov
inc
out
fldcw
cltd
mov
sbbb
iret
fadds
clc
addr16
repz
adc
mov
mov
inc
or
pushf
add
push
sub
pushl
cmp
sahf
mov
xchg
pop
adc
sete
mov
pop
jne
pop
cmp
bound
sar
jnp
sbb
aas
or
inc
pop
frstor
test
fcmovnu
call
pop
add
sub
lahf
outsl
and
pop
pop
xchg
pop
xlat
sbb
lea
push
sub
stos
jmp
cmp
pavgw
popf
sbb
sti
or
or
insb
xchg
orl
sbb
xor
xchg
jns
aaa
pop
add
out
into
jge
push
sbb
fadds
jno
mov
sub
popf
jmp
mov
pop
mov
loope
push
pop
push
cwtl
adc
test
cs
push
mov
jecxz
inc
fdivr
mov
push
push
shl
push
enter
int3
jge
mov
dec
xchg
jle
and
ds
out
mov
data16
dec
mul
lahf
test
xchg
cmpsb
adc
xchg
fmull
push
mov
or
xor
cmpsb
jl
imul
adc
pop
stc
in
in
bound
adc
aaa
cmp
fimull
add
push
rorl
jg
xchg
dec
scas
sbb
or
adc
pop
xchg
sbb
negl
pop
fs
dec
fistps
cmp
mov
xchg
pop
push
sti
xchg
lods
add
test
jmp
xchg
sbb
sbb
mov
push
jge
xchg
fsubrp
das
jbe
ret
or
xlat
cld
scas
sub
jl
mov
rorb
push
jl
iret
mov
fiadds
sub
cmpsl
mov
xor
mov
mov
sub
push
pop
mov
xchg
pop
lds
insb
loopne
lea
cmp
inc
and
scas
jg
xor
das
imul
or
ret
into
mov
int3
sub
inc
aas
push
sbb
cltd
xor
ds
xchg
nop
into
orl
out
mov
ss
mov
mov
sahf
and
lods
push
sub
sbb
mov
cmpsl
insb
addl
nop
push
mov
jns
loop
int
and
pop
mov
sbb
outsl
cmpb
xor
push
lahf
aad
imul
outsb
insl
ja
add
xchg
cmpsl
cmc
push
aam
scas
andb
sbb
cmp
rcrb
adc
lea
lcall
or
bound
xchg
insl
cli
xchg
cmp
mov
lods
fs
mov
popf
pusha
ficoms
xchg
insl
or
push
jae
cs
cmp
pop
xor
sbb
pop
loopne
in
push
dec
decl
lahf
loop
popf
mov
std
int3
push
test
xchg
pop
dec
dec
cltd
aad
sbbl
rcrb
subl
test
xchg
push
lds
roll
xchg
adc
xor
daa
push
out
xchg
ficoms
sbb
xlat
dec
sbb
xchg
sub
push
sub
out
sahf
out
dec
mov
dec
mov
jae
adc
outsb
std
inc
pop
pop
roll
dec
orb
cmp
lods
dec
rorl
fstps
out
imul
xlat
pop
or
lahf
pop
subl
jecxz
and
xor
add
inc
or
mov
pop
pop
sbb
and
pop
div
imul
and
outsb
and
cmp
je
pop
ds
xchg
push
cwtl
mov
push
mov
sbb
ja
mov
mov
xchg
repnz
lods
insb
pushf
jl
push
add
inc
std
mov
insb
lret
lods
adc
mov
lahf
outsb
leave
lahf
and
cmp
testb
cmovnp
cmp
and
sbb
sub
lock
push
jp
testb
inc
adc
push
loop
xchg
adc
xor
or
mov
xlat
popf
xchg
stos
xor
push
test
lods
insl
xchg
xchg
fidivrl
mov
bound
adc
mov
movups
sbb
mov
pop
mov
pushl
out
xchg
xchg
movsb
enter
adc
adc
stc
lock
mov
out
dec
adc
andps
fisttps
inc
pop
cmp
pop
ficoms
xor
xor
pop
jo
xchg
mov
fcmove
sbb
sub
or
or
jae
sub
andl
xchg
xchg
inc
lret
lret
std
into
sub
nop
in
lea
push
lret
in
dec
not
and
pop
mov
jle
sub
add
sbb
jle
xchg
aad
fidivrs
insl
dec
cmp
push
xchg
mov
orb
mov
pop
xchg
pmaxub
xchg
lcall
and
mov
sbb
adc
sbbb
push
fstps
pop
lcall
rcrl
mov
or
out
jb
sbb
xchg
mov
xchg
cmp
sbb
lahf
outsl
out
jmp
cmp
stos
lods
fisubs
pop
in
jp
or
push
add
loope
rcrl
std
sbb
sti
or
xchg
pop
sbb
repz
push
nop
push
dec
fcmovbe
sub
popf
cmp
xor
rolb
sbb
sti
adc
push
adc
ret
fnclex
int3
popf
push
jg
sbb
icebp
push
int3
inc
rclb
aas
xchg
test
out
xchg
cmp
add
cld
fcmovnbe
cs
push
jno
sub
aad
rcrb
fwait
jp
mov
mov
sti
dec
xor
add
in
std
jae
xor
cmpsb
lahf
cmp
sub
shr
stc
mov
fmul
add
and
vmwrite
xchg
das
repz
xchg
popa
jnp
sahf
loope
cmp
sahf
mov
pop
cmpb
stos
jns
sub
pop
aaa
aas
adc
sbb
negb
loopne
pop
xchg
adc
push
call
loope
outsb
fmull
mov
adc
cmc
add
xchg
add
add
add
out
and
xchg
lahf
cmp
addl
xchg
xchg
stos
aam
movsl
lahf
dec
inc
jmp
add
sub
jo
lods
dec
stc
xchg
sahf
shll
repz
dec
mov
sahf
ja
xchg
xor
or
mov
addr16
adc
je
mov
lods
adc
or
inc
int
or
dec
or
jg
lcall
testl
push
mov
cmp
ds
sbb
cmp
shrb
cltd
jns
dec
inc
mov
shl
push
test
cli
cwtl
or
sti
cmp
sahf
fistps
xor
mov
sbb
mov
das
push
jle
fisubs
jmp
push
sti
aaa
xor
sbb
xchg
divb
mov
sbb
cwtl
ret
popf
xor
cltd
scas
pop
sbb
out
xlat
dec
fldl
mov
jnp
mov
adc
int
into
out
outsl
adc
mov
out
test
fcoms
lods
hlt
popf
xchg
dec
mov
rcrb
scas
or
xor
pop
int
call
rcrl
cmp
scas
push
popf
fistl
mov
stos
sbb
notb
cmp
mov
sti
lcall
or
push
jmp
push
or
cwtl
dec
inc
je
jne
in
mov
xchg
adc
cmp
imulb
and
inc
push
lahf
mov
pop
mov
jmp
and
push
mov
jo
gs
dec
fptan
pop
jne
js
jae
pop
mov
xchg
adc
sub
push
sbb
outsb
or
xlat
pop
add
popf
pop
xchg
aas
jg
pop
mov
mov
mov
pop
aaa
dec
pop
jle
mov
or
rolb
sbb
jo
scas
daa
cmp
decb
push
and
outsb
js
out
ss
add
dec
sub
or
pop
mov
xor
sub
xor
mov
add
rcrb
mov
fnstenv
inc
cld
mov
cltd
add
xchg
xor
sahf
in
pop
cwtl
adc
pop
sbb
out
jno
outsb
xor
dec
je
sbb
jecxz
mov
loop
dec
fprem1
sbb
mov
mov
or
sbb
and
cmp
mov
dec
lahf
out
outsl
out
pop
in
inc
jbe
inc
sbb
dec
sbb
push
popf
imul
xchg
mov
push
add
mov
iret
popf
sub
mov
repnz
lcall
inc
adc
xchg
decb
hlt
mov
das
push
scas
jp
sbb
dec
lret
das
mov
mov
add
pop
pusha
xchg
push
in
add
rsqrtps
xchg
es
orl
in
pop
push
cmp
ficompl
pop
mov
fistpll
roll
andl
sbb
repnz
xchg
mov
push
or
pop
jmp
rclb
or
and
sub
loop
divl
pop
mov
out
add
enter
adcl
mov
mov
mov
sub
sarb
aaa
fnsave
mov
lret
sbb
mov
xchg
int3
mov
add
sub
mov
or
sti
push
cmpsb
jno
nop
push
lcall
rorb
xor
push
pop
fstpt
movsb
sbb
xor
fcompl
fbld
inc
pop
dec
add
mov
lahf
pop
ss
add
iret
push
aam
ret
pop
xorl
fistpl
call
into
mov
add
enter
dec
inc
pop
push
push
cmpsl
cmp
cmp
cmp
push
jnp
xchg
sub
cmpsb
push
push
or
pusha
add
leave
jns
and
test
arpl
imul
movsb
insl
mov
adc
add
adc
test
add
adc
add
push
jns
pop
loope
sbb
mov
mov
xchg
mov
push
cwtl
sbb
popa
std
push
sub
xchg
push
mov
sar
aaa
ret
inc
ljmp
xorb
pushf
ss
roll
jecxz
stos
fdiv
lret
inc
fsubrl
sahf
and
mov
ss
ret
xlat
push
testl
test
inc
leave
shll
stc
rcr
mov
out
jle
pop
daa
lahf
fwait
pushf
cmpsl
popl
out
jns
adc
cli
in
cmp
mov
pop
not
mov
jg
xor
jge
std
push
fsubl
mov
lahf
jmp
int
pushf
popa
lea
fcmove
push
xchg
aam
outsb
icebp
inc
xor
adcl
pop
sub
mov
scas
out
jecxz
sbb
pop
mov
jae
sbb
nop
insl
push
cs
inc
add
sahf
push
jo
stos
mov
sti
loope
clc
std
aad
fdivrp
sbb
sbb
outsb
jnp
inc
adc
in
insb
adc
inc
ret
ss
es
out
stos
mov
mov
pop
and
repz
push
lea
aad
sub
pusha
fwait
or
sbb
cltd
adc
push
fstpt
cmp
hlt
fisubrl
cwtl
jle
hlt
fidivl
sbb
ret
movb
xchg
pop
in
dec
jmp
lock
rcll
in
push
fimuls
setle
pop
add
add
lret
pop
fcoms
push
xchg
xlat
insl
lock
orl
cli
add
sub
mov
mov
xchg
daa
lods
inc
jns
xchg
push
sbb
cli
aad
sti
pop
imul
mov
jl
arpl
cmp
fisttpll
push
jle
xchg
fsubrl
push
pushf
pop
sbb
lods
sub
jno
std
fildll
out
push
out
lds
mov
xchg
sub
ret
loop
pop
pop
popf
push
mov
mov
mov
jbe
mov
pop
cmp
lahf
dec
pop
test
outsl
out
subb
fs
fnsave
or
daa
mov
mov
pop
out
xorb
jle
adc
int
je
dec
out
push
or
xchg
xor
std
mov
pop
inc
iret
adc
mov
xchg
movsb
loope
xchg
cmp
xchg
dec
cmp
cwtl
mov
stc
dec
jns
loop
lods
stos
xchg
cltd
push
subb
pop
cltd
ss
xchg
mov
inc
xchg
push
push
pop
push
in
push
mov
movb
jno
cltd
orl
lea
push
push
xchg
aas
imul
xchg
std
fwait
inc
sbb
aas
popf
les
jnp
jo
sbb
xchg
mov
mov
sub
xchg
or
movsl
add
pushf
and
adc
jle
sti
jp
dec
sbb
cmp
mov
out
pushf
cmp
sbb
pop
cld
xchg
sahf
xor
mov
xor
sub
xor
jno
insb
push
fs
sbb
fnsave
add
dec
adc
fdivl
xor
cs
xchg
and
xor
in
pusha
call
setg
addb
jb
ret
into
xchg
mov
pop
out
sahf
popa
addb
add
dec
ficoml
mov
shll
shrb
and
iret
iret
and
jg
add
inc
lret
cmp
mov
xchg
dec
std
pop
sti
decb
jecxz
jmp
lahf
xlat
outsb
das
mov
subl
rclb
add
sub
shl
dec
fisubl
cmpl
sub
and
jnp
jae
fidivrs
fcmovbe
mov
insb
push
pop
jno
loopne
xchg
or
pop
into
fbstp
test
sbb
ds
xchg
rcrl
das
sub
jmp
adc
fs
ss
sub
adc
or
sbb
ret
fistpll
sub
push
stc
mov
scas
cmpsb
push
enter
cmp
icebp
push
cmp
pusha
sti
xor
rorl
in
cmp
jg
add
mov
movsl
iret
push
scas
jae
ret
rcrl
xchg
push
frstor
pushf
inc
inc
sbb
jle
pusha
out
iret
xor
rcrb
or
pusha
pusha
popf
sbb
shl
nop
xchg
fldl
sub
inc
jle
xchg
lahf
scas
xchg
fstpl
or
mov
and
push
push
add
push
jbe
inc
jne
inc
addl
push
jl
xor
cmpb
gs
mov
dec
jg
mov
jge
mov
adc
cwtl
mov
arpl
pop
cmc
xchg
sub
adc
inc
pop
addb
xlat
lret
cltd
sub
push
lock
push
adc
cmp
xchg
pop
push
xchg
or
jne
popf
add
nop
pusha
fistpl
aaa
movsl
mov
sti
jmp
fidivl
cmp
add
nop
cwtl
and
inc
scas
scas
mov
cwtl
mov
jns
je
out
addr16
stos
sbb
cmp
add
pop
mov
shrl
adcb
repnz
test
orb
mov
sbb
mov
pop
paddsw
mov
nop
cmp
popf
imul
cld
xchg
test
sbb
je
xchg
dec
lds
arpl
mov
push
sbb
incb
add
shrl
adc
sub
push
mov
std
prefetcht0
insb
loope
sbb
push
mov
insl
xor
jo
add
and
imul
xlat
iret
push
pop
push
jnp
addr16
push
and
push
push
test
dec
jmp
pop
iret
icebp
xchg
sahf
xchg
fs
insb
aas
sub
add
lods
leave
sbb
xchg
stc
mov
mov
rcll
mov
inc
sub
pop
mov
loopne
jp
push
inc
push
aas
pop
aad
adc
vpackuswb
xlat
sub
subb
mov
cltd
pop
mov
mov
and
mov
push
lahf
in
pop
ja
xchg
scas
mov
xchg
icebp
xor
fwait
cwtl
aaa
or
in
sbb
cmp
std
pop
xchg
add
mov
jae
xor
imul
scas
dec
push
fisubrs
adcb
mov
test
mov
add
out
pop
popf
fstl
orl
adc
stc
lahf
test
push
mov
or
stc
xchg
std
test
incb
in
push
repz
fsubs
mov
jge
dec
ret
pop
dec
push
ja
push
or
xlat
push
rcll
stc
pop
xchg
push
pop
sub
ja
ficoms
punpcklwd
in
out
mov
cltd
pop
sbb
std
pushf
lcall
sti
mov
xchg
push
adc
mov
or
sar
ret
cmp
frstor
jge
sbb
jne
adcl
stc
pop
xchg
jb
idiv
jno
or
xor
rcll
imul
sbb
cltd
adcl
pop
ret
sbb
lret
lcall
inc
mov
fbld
fs
mov
stc
fidivrs
pop
xchg
xchg
xchg
inc
jnp
outsl
imul
out
mov
repz
mov
outsb
jg
xchg
hlt
aas
inc
sahf
xor
mov
fcmovnb
cwtl
shll
push
or
aam
rcrb
xchg
or
or
push
paddb
sbb
cltd
add
outsb
adc
add
adc
push
xchg
jno
scas
cmp
aas
cld
push
dec
push
cltd
push
rcll
sahf
mov
lgs
jne
mov
fwait
loop
xchg
dec
pushw
pop
notb
xchg
sbb
inc
pop
add
push
popf
sarl
aaa
mov
mov
add
test
es
sub
sahf
int
mov
adc
jle
xchg
jge
mov
adc
xlat
hlt
in
out
pop
ds
ficoms
xchg
lahf
mov
repnz
jne
push
xor
out
sahf
mov
cltd
sti
xchg
aam
sbb
push
fsubs
sbb
jecxz
psadbw
shrb
lock
test
xchg
sti
jno
nop
jmp
adc
jge
push
xchg
mov
movsl
xchg
mov
sbb
imul
pop
addr16
cmp
xlat
adc
xchg
pop
test
inc
lret
bound
lds
xor
pop
jle
sub
lcall
dec
les
scas
fimuls
push
test
cmpsb
sbb
xor
jne
fwait
mov
xchg
insl
mov
xchg
je
mov
fnstsw
push
jge
jnp
mov
imul
and
ljmp
push
int
fsubs
add
mov
in
push
cwtl
push
sub
pop
cmc
ficomps
ljmp
negl
pop
or
jmp
pop
mov
fcoms
orl
sub
add
enter
mov
or
test
int
jmp
out
pushf
pop
ljmp
xor
push
dec
call
jae
xchg
xchg
movq
jnp
xchg
rcll
adc
mov
nop
push
push
xchg
cmp
mov
jne
stc
adc
adc
pop
xchg
stos
inc
mov
xchg
adc
int
test
mov
push
cs
mov
js
mov
sbb
popl
sub
adc
sbb
dec
out
sbb
sbb
add
add
insb
addb
imul
rorl
push
xor
xchg
ficoml
das
mov
aas
xor
inc
cmp
fistpll
in
mov
mov
stos
jle
and
jns
cs
es
fsubs
cwtl
es
mov
add
and
andb
mov
inc
mov
mov
mov
inc
mov
movsb
mov
add
mov
loopne
movsl
mov
push
mov
shll
or
push
incb
jge
sbb
cmp
fscale
adc
or
adc
sbb
mov
cld
hlt
pop
out
push
fldl
fistpl
rorl
cltd
sbb
sbb
cmc
sbb
mov
adc
cmp
mov
aas
int
pusha
pop
sbb
out
adc
xchg
sti
jmp
in
sbb
std
orl
out
xchg
cmp
lahf
jl
pop
pop
lcall
or
push
fildl
stc
add
out
cwtl
outsb
cld
or
inc
loopne
rcrl
testl
jns
test
scas
test
sbb
adc
aas
std
loop
dec
or
cmpsb
lcall
mov
sbb
and
add
mov
insl
sbb
out
add
push
xchg
mov
sbb
lods
lahf
test
loopne
push
jg
in
xor
movsb
cmp
pop
or
adc
and
fstpt
sub
cmpsl
push
fwait
std
adc
loopne
xchg
push
or
mov
std
xchg
loopne
fstpt
out
jge
add
mov
jne
or
xchg
push
cmc
mov
repnz
and
xor
sahf
pop
push
ss
adc
fidivrs
mov
pop
pop
mov
mov
aam
aaa
outsl
fcmovnbe
aas
ds
test
mov
data16
dec
sub
xor
xchg
mov
sub
inc
push
repz
out
or
sahf
xchg
shrb
inc
adc
jmp
or
jle
push
push
xlat
or
xchg
rcll
cmp
pop
xor
rol
xchg
rcrl
popf
aad
mov
fnstsw
iret
jno
sbb
or
mov
mov
ds
imulb
test
ret
push
rolb
lock
cld
ds
out
in
lret
shlb
stos
adc
add
xor
loop
mov
add
push
fistpl
inc
andb
sub
push
mov
sarb
out
add
loope
addr16
jb
xchg
scas
std
push
rcll
mov
clc
sbb
mov
dec
push
add
pop
lcall
filds
fldl
pop
inc
in
scas
jle
or
outsl
dec
adc
jl
pop
mov
lcall
adc
imul
loop
jle
cmpl
push
cmp
cmp
cmp
cmp
jnp
lahf
rcrl
cmpb
cmp
push
lahf
sbbb
cmpb
clc
dec
fnsave
mov
repnz
lds
push
shlb
push
pop
push
daa
push
inc
push
addr16
xchg
mov
fisubs
out
or
sub
dec
repz
push
cmp
pop
call
fldl
pop
xchg
out
paddusw
xchg
pop
cwtl
in
adc
xchg
or
lahf
push
out
sbb
xchg
fildl
push
lahf
add
mov
sbb
mov
xchg
call
xchg
xor
nop
jne
or
mov
or
incb
pop
xchg
aaa
jecxz
xchg
xchg
pmaxsw
in
xor
mov
or
test
test
xchg
xor
sbb
adc
xchg
or
pushf
xchg
or
push
inc
cmc
adc
push
incb
sbb
hlt
cmc
add
inc
sti
sbb
cld
xchg
xchg
mov
or
stc
nop
cmp
sbb
mov
fsin
add
adc
bnd
mov
out
imul
xchg
mov
inc
clc
sbb
sbb
xchg
sbb
sahf
or
pop
sbb
addl
ss
jbe
sbb
xchg
xchg
jp
repz
jb
repz
inc
addl
xchg
cltd
or
dec
stos
aam
popa
frstor
loope
lea
lahf
fisttpll
xchg
sahf
test
mov
enter
dec
adc
das
cld
cmp
sub
sub
xor
xor
lea
repnz
loopne
jge
test
lock
out
cwtl
sti
pop
cmpsb
lret
pushf
mov
jne
pop
mov
mov
mov
inc
fstl
mov
cs
repz
add
mov
fistpl
sbb
sub
pop
test
push
cld
mov
or
orb
mov
push
ljmp
xchg
push
clc
sbb
mov
mov
or
xchg
sbb
int
in
fwait
aas
push
std
cmc
ja
push
sbb
data16
adc
in
fstl
add
pop
adc
xchg
sub
stc
sahf
std
lahf
push
jg
xchg
push
pop
call
pop
adc
mov
pop
xchg
mov
and
adc
pushf
aad
btcl
adc
fistps
orl
xchg
sbb
adc
addl
xchg
sbb
sbb
mov
nop
sahf
mov
repnz
inc
cmc
and
cmp
lahf
xchg
or
xor
sbb
jnp
mulb
repnz
mov
stos
mov
fs
cli
aaa
push
lahf
mov
fs
mov
lock
mov
push
out
ja
add
out
sahf
fwait
shll
sti
xor
cmp
ss
add
addr16
mov
adc
in
cmp
aas
or
xchg
lock
mov
pop
and
cmp
pop
into
popa
add
cwtl
es
mov
push
std
pop
xchg
push
or
shll
jb
in
sub
fisttpll
sahf
xor
mov
sbb
sub
and
cltd
xchg
mov
dec
push
mov
pop
das
lahf
mov
sahf
lret
sbb
in
fdivrl
out
sub
inc
add
pushf
seta
xchg
or
cld
fwait
cli
pop
stc
in
pop
rcr
xor
and
fldcw
cld
push
adc
push
loope
in
xchg
fisttpll
std
repz
adc
mov
sbb
leave
scas
pop
push
mov
pop
pop
cs
sbb
pop
xchg
lods
pop
sbb
xchg
out
pop
test
mov
xchg
adc
sbb
ja
adc
lret
out
pop
in
push
into
push
ret
out
pop
mov
stos
pop
jecxz
or
sub
nop
cltd
sub
pop
out
push
pusha
sbb
pop
aaa
adc
fsub
xchg
cmp
pushf
pop
mov
es
push
ljmp
sbb
std
mov
xchg
jle
mov
aaa
insl
add
jg
adc
std
cmp
clc
rcrl
mov
and
cmpsb
pop
push
xor
fwait
jne
pop
jmp
push
testb
fwait
fwait
push
mov
out
pop
or
cmp
out
push
mov
scas
jl
enter
mov
xor
fdivp
aad
jmp
fists
lds
popa
push
push
and
inc
and
or
shl
cmpsb
in
xor
mov
mov
lcall
jb
loope
ja
bound
xor
sti
popf
fadds
jecxz
mov
ja
xor
fidivs
iret
inc
mov
inc
pop
add
aaa
mov
pop
lds
mov
dec
popa
or
mov
xchg
repnz
cs
push
mov
popf
cmc
sbb
mov
cmc
xchg
xor
lahf
jbe
pop
test
jecxz
or
mov
addr16
fwait
movsb
jp
jge
daa
sub
sbb
sahf
popf
push
rcr
jge
xchg
aaa
addb
scas
fcoml
sub
add
test
pop
hlt
gs
pusha
dec
test
jle
daa
sbb
mov
test
pop
movl
add
nop
jecxz
xchg
std
cltd
gs
outsb
mov
mov
out
push
setne
sahf
ficoms
flds
cld
scas
js
sbb
jmp
add
mov
cmc
jmp
mov
popa
lds
stos
negl
fwait
enter
xchg
fwait
addr16
mov
inc
push
push
pop
out
jl
scas
mov
sbb
cmp
mov
xchg
sti
out
adc
add
gs
inc
xlat
je
xchg
xor
or
nop
sub
or
fs
ljmp
mov
mov
call
mov
push
ss
jb
fiaddl
push
pop
jnp
andl
imul
and
jae
sarl
test
push
dec
jns
out
jge
mov
mov
subl
out
lock
nop
addb
hlt
jo
pop
lahf
fsubrs
stos
sti
ljmp
rcrb
out
xor
push
inc
cmp
push
popf
xlat
xor
mov
push
nop
fdivl
cmp
je
xor
js
push
mov
loop
aad
sbb
cmpsl
and
mov
jmp
jle
lret
jnp
loop
xlat
or
mov
cmp
sub
xor
sub
int
jle
lahf
xor
mov
xor
rcrb
out
icebp
xor
jae
push
and
or
scas
mov
popf
clc
or
clc
or
clc
or
push
adc
jbe
sbb
push
add
stos
cltd
pop
stos
ljmp
xor
jne
ret
sbb
jae
hlt
pop
pop
jmp
xor
icebp
imul
ljmp
jge
cmp
sbb
fs
mov
pop
mov
int
pop
lcall
jp
push
jmp
pop
add
lahf
push
jmp
imul
out
adc
incb
xchg
push
bound
repz
inc
pop
imull
jae
jno
mov
or
lcall
aas
fcomp
fisubs
inc
jl
pop
xlat
cmp
sbb
add
mov
xchg
xchg
push
push
adc
nop
scas
sub
fiaddl
fwait
imul
jno
std
pop
push
or
sahf
mov
sbb
rcrl
data16
fmuls
scas
sbb
ds
pop
push
test
xorb
lret
in
xchg
int
pop
and
out
mov
mov
dec
jno
sub
sbb
push
imul
add
out
jno
aad
sbbl
iret
dec
es
xchg
sbb
mov
push
repz
leave
push
pop
rorb
cmp
fmuls
jle
sahf
add
addl
or
call
fcoml
xchg
or
jns
pop
or
push
sbb
jmp
scas
cmc
xor
divl
insl
mov
lret
push
data16
cmp
push
pop
xor
jo
xchg
sets
movsl
xchg
push
js
js
push
sub
mov
push
mov
sbb
outsb
adc
xchg
in
xchg
sbb
mov
xor
jmp
fsub
push
mov
mov
fsts
cmpsl
sub
mov
sbb
and
push
aaa
adc
mov
add
pop
push
lds
movsb
cmp
je
test
subb
xchg
jnp
push
sbb
sahf
push
fisttpll
sbb
or
and
push
mov
adc
fs
pop
inc
scas
ret
push
pop
pushf
test
add
jl
pop
popf
sbb
outsl
cmp
cmpb
mov
inc
and
xor
push
mov
loope
jg
out
out
xor
test
in
sbb
cmc
sub
mov
movsl
mov
mov
mov
fisubrs
out
pop
mov
test
rorl
fldl
and
rcll
add
mov
mov
enter
lahf
or
jge
fs
fisttpll
push
xchg
cmp
addb
popa
and
popf
mov
xlat
and
lahf
mov
fldt
sub
xor
xchg
xlat
aas
mulb
add
outsl
xchg
pushf
mov
inc
jmp
andl
xor
pusha
fistl
adc
jnp
xor
sbb
add
xor
shrl
inc
xor
lcall
inc
sbb
add
jl
add
je
cwtl
test
mov
mov
fs
inc
pop
or
xchg
sub
jns
and
fwait
cmp
cli
popf
ret
pop
scas
or
sub
mov
sbb
cld
add
mov
xchg
cld
test
lahf
add
insl
xor
sub
or
xchg
fidivrl
jmp
jno
sub
sahf
mov
xor
aad
sub
cwtl
xchg
test
loopne
cmc
pop
clc
push
aas
ja
sar
stc
mov
ljmp
aad
orl
into
aaa
mov
mov
or
mov
and
std
inc
ret
push
test
add
inc
adc
ljmp
shrb
add
iret
sti
lret
lahf
aaa
loope
jne
cmp
jno
fldl
jae
xor
lea
pop
push
xchg
int
jo
test
pop
out
jbe
std
push
fmuls
sbb
push
jmp
jno
pop
xchg
test
sub
popf
jne
cmpsl
add
and
xchg
push
and
push
mov
popf
push
jle
setno
ds
jno
mov
inc
or
push
xlat
and
jnp
pushf
xchg
fwait
mov
fstl
stc
jno
mov
pusha
outsl
sbb
scas
stos
cld
fiaddl
jl
lock
mov
sbb
repz
outsb
scas
out
mov
mov
pop
mov
fwait
out
add
or
sub
addb
cmp
sarb
pushf
sahf
fstps
add
js
out
or
pop
insb
jae
cmc
inc
or
aad
cmp
or
imul
add
mov
imul
inc
push
jns
inc
cltd
push
aas
fwait
and
inc
mov
add
sahf
outsl
mov
cmp
lcall
jg
pop
cmp
int
xor
push
or
lods
jle
and
jg
push
dec
cli
out
cld
pop
mov
loope
pusha
push
ficompl
adc
stos
inc
xchg
jae
xchg
jne
arpl
fcmovbe
adc
call
cli
pop
aam
and
rcll
pop
mov
fcoms
jo
mov
scas
xchg
sbb
rorb
pop
xlat
repnz
cmp
sbb
pop
xor
mov
add
push
adc
fldl
je
in
jmp
in
or
mov
jle
adc
cmp
out
lahf
mov
ljmp
sbb
jp
jmp
std
mov
jg
mov
xchg
popf
ficoms
jge
mov
into
fistpll
mov
or
js
movl
add
push
nop
outsl
xchg
jl
mulb
pop
push
xchg
ficomps
or
add
mov
jbe
push
sbb
inc
jg
jnp
test
mov
xlat
cmp
cli
filds
mov
or
in
xchg
out
pop
out
jg
xor
mov
push
push
lahf
xor
inc
into
add
icebp
test
xlat
fwait
gs
stos
mov
pop
xor
mov
cld
xchg
pop
sahf
mov
ds
cmp
or
add
lock
subl
in
pop
xchg
shrb
mov
mov
and
cmp
je
mov
ja
pop
mov
jge
xchg
fistpl
cpuid
sbb
std
xlat
ds
xor
mov
movsb
pop
adc
dec
add
sbb
ds
outsl
repnz
fsubrl
aad
stos
push
pop
sbb
sub
loop
sbb
test
pop
out
add
jbe
adc
sahf
sbb
imul
xchg
fs
mov
sbb
pmovmskb
xchg
mov
xchg
sbb
cmp
insl
adc
jg
scas
jl
mov
mov
stc
mov
pop
jp
xor
cli
fidivs
fiadds
lcall
icebp
xchg
fs
pusha
fucom
in
out
jns
mov
pop
cmp
or
lahf
adc
mov
push
aad
lock
xchg
push
cmp
add
jns
pusha
inc
mov
push
xchg
pushf
js
add
sbb
lods
jnp
inc
xlat
pop
inc
outsb
xlat
xchg
lret
clc
fnstsw
sbb
rcrb
fwait
movsb
lahf
sub
pop
sbb
mov
and
loopne
aam
sbb
mov
pop
les
xor
and
push
shlb
in
push
cmp
xlat
sbb
or
push
cld
pop
lcall
fs
into
mov
hlt
popf
mov
aas
dec
pop
imul
pop
stos
nop
mov
cs
sti
mov
iret
push
pop
mov
in
fists
fildll
lret
or
fsubs
lods
mov
loope
xchg
adc
and
jg
pop
xlat
mov
push
mov
lahf
ljmp
ja
in
mov
scas
stos
add
cmc
jge
mov
das
sbb
ds
mov
arpl
push
in
pushf
jno
jne
stc
cmpsl
xchg
mov
popf
fsts
test
cld
cmp
mov
rcrb
sbb
loop
or
sbb
jno
pop
xorl
mov
mov
pop
int
cmp
hlt
xchg
sahf
addl
outsb
jbe
and
push
mov
pop
popa
into
sub
aaa
jne
xorb
je
mov
jge
adc
mov
pushf
test
rcll
rcrl
cmp
test
es
cmc
jne
sbb
subb
out
loop
jae
int
stos
sti
pop
add
aas
jno
xchg
mov
mov
or
insl
cmpsl
cmpsb
adc
out
push
out
aad
jno
jmp
shl
push
imul
pop
in
js
std
cli
cli
sbb
int
push
cmpsl
push
cmp
jecxz
jle
cld
pop
sub
pop
sub
xchg
out
scas
ret
adc
ja
lods
movsb
mov
cs
sbb
push
pop
sbb
sub
add
mov
stos
ret
dec
insb
xor
cmpsl
push
aam
pop
inc
sbb
inc
pusha
shll
pop
and
addr16
mov
push
leave
dec
inc
push
sub
in
adc
xchg
lea
hlt
fcmovbe
add
mov
pop
popf
out
sahf
out
sahf
sbb
std
mov
push
lret
lret
in
cmc
cli
adc
adc
xchg
std
or
dec
pop
test
sub
and
fnstenv
je
mov
pusha
ret
mov
xchg
cmp
mov
jno
adc
ret
dec
push
incl
fmuls
or
adc
sahf
or
mov
pusha
sbb
dec
jecxz
fstl
cmpsl
bnd
sub
or
mov
lret
pusha
rcll
mov
pop
cltd
push
ret
push
arpl
add
loop
repz
scas
sahf
sub
pop
xor
xlat
int
movsb
popa
xor
adc
sub
dec
mov
out
adc
or
out
add
addr16
jbe
sbb
sbb
xchg
cmpsl
mov
out
xchg
lret
ret
push
mov
pop
mov
std
aam
pop
add
out
shrl
add
loopne
scas
xchg
push
idiv
mov
test
addb
lods
push
ja
xlat
pop
mov
fwait
imul
dec
int3
rcll
les
and
ret
out
xchg
lahf
mov
std
dec
lahf
stc
cmpsb
mov
pop
into
sub
add
scas
mov
inc
pop
xlat
pop
out
mov
xor
insl
xor
pop
pop
pop
sbb
mov
sub
in
popf
add
xchg
or
sub
jmp
mov
inc
or
hlt
cmp
jmp
push
loop
je
sbb
ljmp
nop
fadds
and
popf
inc
mov
push
dec
xchg
cmp
cltd
lds
cwtl
mov
movsl
cmp
mov
xchg
push
ss
jns
xor
std
divb
dec
or
xorl
sub
imul
insl
xchg
cwtl
cmc
adcl
pop
pop
shlb
idivb
sub
adc
fs
popa
adc
mov
ljmp
sbb
cmc
mov
lods
out
nop
xlat
push
xchg
popa
sbbl
jmp
inc
xor
mov
push
add
xor
push
loop
cld
sbb
pop
xchg
mov
jl
add
nop
jg
xchg
imull
adc
sub
pop
dec
aad
stos
paddusb
into
test
adc
leave
dec
addr16
xchg
fucomi
rorb
push
cwtl
mov
dec
jnp
xchg
cltd
hlt
xchg
fistpll
and
out
sbb
pop
xlat
enter
mov
push
insb
pop
adc
int
add
loope
adc
mov
xchg
repnz
sbb
popf
incb
push
sbb
out
mov
adc
mov
xor
jbe
mov
xor
ds
cmp
mov
push
push
or
add
xchg
sub
mov
cmp
popf
push
fstp
idivl
or
das
inc
aas
fimull
mov
lea
xchg
stc
xchg
push
pop
icebp
sbb
outsb
and
ds
fnstsw
out
adc
mov
inc
sbb
push
and
xchg
not
inc
in
fistpl
ficomps
or
repz
dec
or
pusha
out
fwait
or
xchg
pushf
fdivr
push
sahf
fwait
ss
pop
jb
out
xor
jecxz
xor
sbb
inc
dec
sub
sbb
lods
lret
test
mov
pop
xchg
push
imul
pop
sub
loope
fstl
pop
adc
lcall
adc
pop
inc
scas
aas
sub
jo
sbb
cmp
dec
adc
arpl
and
adc
xor
hlt
outsb
or
mov
push
cli
jbe
mov
mov
clc
out
subl
mov
cltd
push
std
out
movl
mov
mov
sbb
pop
cli
xor
push
loope
loope
imulb
xor
pusha
xchg
mov
sbb
mov
pushf
pop
sbb
pop
or
int3
outsl
jbe
xor
aad
push
sti
pop
loope
lcall
int
xchg
mov
repz
in
sti
mov
mov
dec
pop
in
hlt
icebp
push
pop
cltd
xlat
mov
pop
mov
adc
ja
adc
jns
cltd
mov
into
sbb
loop
lahf
fcom
aaa
xor
fstl
nop
jmp
adc
mov
push
mov
popa
lock
xor
mov
divps
mov
mov
mov
jg
push
sbb
in
loop
hlt
push
inc
adc
pusha
clc
pushf
xchg
cwtl
outsl
outsl
add
jle
xchg
imul
xchg
pop
out
jge
dec
fwait
xor
leave
dec
sahf
frstor
fnsave
nop
dec
pop
cltd
mov
out
out
mov
shl
xchg
adc
jmp
mov
and
cs
dec
mov
daa
lahf
outsl
xchg
mov
aaa
adc
or
sbb
and
out
pushf
add
addr16
in
xchg
adc
aaa
incl
pop
pop
in
negb
sbb
push
inc
push
sahf
push
push
sarb
mov
faddl
scas
mov
add
icebp
pop
outsl
and
pop
mov
addb
pop
cmp
pop
add
adc
cmp
dec
mov
inc
pop
jno
push
adc
les
adc
sbb
or
scas
dec
pop
adc
out
cwtl
inc
lock
mov
ficoms
popf
fdivl
ja
mov
pusha
jge
pop
cwtl
xchg
push
add
shll
jnp
in
js
lahf
or
push
adc
stos
pop
jle
pop
cmp
jp
cmp
pop
fldl
jp
push
cmp
rcl
pop
add
adcl
aaa
ficomps
jle
mov
sbbl
mov
stos
sbb
xor
push
xor
jbe
add
push
test
push
loop
inc
rorb
mov
iret
xor
rcll
repz
mov
ljmp
negl
int
xchg
jmp
fnsave
sarl
bswap
push
push
push
mov
xchg
sub
cwtl
aaa
clc
ds
push
sbb
out
mov
jno
or
jge
sbb
fldt
fsubrs
scas
push
push
popf
xor
daa
sahf
xchg
out
adc
pushf
add
sbb
fdivrs
out
rcll
jnp
cmc
loopne
imul
pop
into
mov
xchg
adc
push
lret
push
jbe
xchg
fwait
enter
mov
mov
ret
outsl
sub
sbb
sub
mov
pop
adcl
inc
or
or
shll
fbstp
mov
and
scas
cmp
decb
pop
cmp
push
pop
xchg
mov
sbb
xchg
mov
and
xchg
add
push
lcall
fwait
mov
in
mov
add
xchg
inc
in
popf
mov
mov
xor
pop
decb
adc
pop
repz
call
fadds
sub
jns
orl
cltd
fxtract
mov
mov
out
push
fcompp
ljmp
pop
inc
or
and
jns
mov
lcall
adc
fnstsw
cli
xorl
push
js
add
mov
sbb
mov
cmp
mov
in
pushf
outsb
jbe
inc
inc
fisttpl
jnp
jl
sub
mov
sbb
jno
push
dec
mov
xchg
clc
jecxz
cwtl
xchg
adc
push
aaa
jne
jle
out
mov
movsb
pop
ja
mov
sub
aad
aaa
push
add
fistl
bound
sbb
sbb
in
call
out
dec
or
mov
into
push
cmc
or
ret
fsubs
ljmp
out
sbb
adcb
add
sbb
push
outsb
test
jmp
fistps
cwtl
out
nop
pop
cltd
push
std
cwtl
adc
mov
push
testb
fdivp
xchg
mov
out
fwait
in
nop
sbb
sub
jge
std
notl
into
cwtl
sbb
sbb
fsubrl
clc
sbb
insb
lock
adc
push
test
sbb
cmp
mov
fistl
add
fistpl
sbb
pop
push
push
or
mov
mov
scas
xchg
repnz
cmp
outsl
mov
popf
pop
pop
jg
inc
in
add
scas
cld
or
dec
fdivrp
dec
xlat
mov
popf
out
pop
xchg
insl
mov
cmp
mov
jmp
and
stos
aam
mov
jnp
cli
out
push
in
pop
push
fxch
sub
jae
test
hlt
fistl
cmp
lahf
cmpsl
jg
jns
lret
popa
sahf
scas
adc
xchg
and
int
and
lcall
push
jns
jno
cltd
and
fdivrp
negb
jp
pop
inc
sub
jne
lret
hlt
or
add
jns
pop
in
hlt
sub
inc
push
xchg
aam
fwait
mov
sbb
xor
fstl
out
sahf
push
push
sbb
fnstcw
mov
lock
push
fstl
inc
cltd
jecxz
xchg
or
fsubp
pop
xlat
ja
fwait
jo
lret
push
scas
scas
popl
mov
cmpsb
push
xchg
out
into
jecxz
xchg
in
jp
jbe
push
hlt
aam
insb
mov
cmp
popl
and
dec
xlat
lret
int
fs
jb
xor
adc
sub
add
cmpb
jne
push
xchg
clc
ret
mov
mov
xbegin
outsb
cs
mov
fcomp
cltd
int
lahf
jp
and
int
movl
daa
push
int
xchg
and
into
mov
out
aas
inc
psraw
xor
out
jl
in
mov
lcall
xchg
or
fnstcw
popa
cwtl
push
loope
sar
inc
jno
imul
mov
push
pop
or
push
jmp
sbb
jbe
mov
imul
out
jo
jmp
int
push
jecxz
lahf
cmpsb
enter
xor
sarl
sbb
xchg
sbb
mov
add
andl
jmp
fnsave
xchg
pop
into
dec
pop
mov
jl
inc
inc
add
xor
mov
scas
and
orb
cltd
jle
sahf
xor
add
je
sbb
dec
idiv
jno
fnstenv
outsl
jp
pop
pop
xchg
xor
jle
mov
mov
repnz
out
inc
cmp
nop
dec
ficoml
xchg
pop
push
insl
cmp
add
dec
jg
mov
hlt
sbb
imul
into
ss
push
fistps
and
adc
adc
mov
adc
lret
incb
and
jmp
mov
int
stos
cmp
or
mov
cltd
faddl
xchg
xor
add
mov
inc
mov
scas
repnz
ret
pop
cwtl
insb
xor
xlat
cmpsl
inc
aaa
sbb
xchg
mov
jns
hlt
rcr
loop
pop
into
popf
aaa
pop
mov
es
insb
xor
jns
or
xchg
fsubrp
ljmp
push
inc
push
xchg
cmp
fistpl
push
xchg
lock
pop
stos
test
jnp
pop
fs
adc
add
add
mov
int
sbb
cmc
lcall
sbb
mov
mov
lods
push
push
xor
pushf
popa
movsl
sbb
inc
xor
aam
clc
dec
fistpl
test
xor
pop
imul
insl
jp
pop
movsl
ret
or
push
ret
pop
and
aam
sbb
lahf
add
sub
bound
aaa
fadds
pextrw
jge
mov
rcll
nop
aaa
mov
xor
cwtl
aam
cmpb
test
fadds
sbb
mov
mov
mov
fdivs
aad
jle
jle
aaa
scas
inc
or
push
cltd
rol
fcompl
cwtl
cmc
mov
push
lea
fsubrp
mov
out
frstor
out
arpl
aad
scas
sbb
xor
sub
sbb
mov
sti
je
fwait
out
push
je
hlt
pop
daa
pop
inc
or
pusha
mov
lcall
les
mov
test
pushl
add
mov
ja
divb
pmaxsw
jo
pushf
sub
lea
mov
mov
pop
pop
push
cltd
add
xchg
jge
sub
mov
std
cwtl
adc
or
add
sub
dec
popf
add
sbbb
xchg
mov
xlat
popf
call
in
subb
push
into
push
add
ljmp
pop
sahf
imul
nop
cmp
loopne
in
cltd
enter
adc
popf
push
pop
negb
ret
insl
cmp
mov
add
repnz
repnz
sti
pop
inc
xlat
stos
call
cmp
pop
into
std
fcompl
mov
popf
mov
out
ficomps
add
xchg
pop
or
pop
cmpsl
pop
xlat
add
push
inc
dec
sbb
sarl
pushf
push
out
adc
movsb
xchg
pushf
ds
mov
inc
addl
cmpsl
mov
popf
push
cmp
divb
mov
or
cmpl
push
out
test
xchg
xchg
in
cltd
shl
xchg
xor
or
adc
pop
fiaddl
mov
inc
xchg
pop
add
int
push
mov
lods
cmpsb
xchg
jbe
xor
mov
movsl
xor
iret
push
inc
sbb
push
inc
pop
push
sub
adc
sbb
shl
pushf
lea
cmp
jne
xchg
aad
int3
add
dec
xchg
pushf
cmp
xor
cmp
push
push
xchg
aad
mulb
pop
movl
jnp
iret
mov
aam
sbb
add
rorl
fwait
add
push
cmp
push
addl
jns
lea
ret
lret
aad
leave
inc
gs
pop
out
inc
or
mov
cmpsb
in
stc
jp
lret
mov
scas
push
and
in
mov
sbb
cmp
push
outsl
mov
or
sbb
lahf
adc
adc
mov
leave
push
xor
orl
push
mov
pop
jno
lret
pop
negl
jae
or
xor
enter
inc
cmp
lea
aas
pop
adc
jg
cmp
mov
in
mov
fisubrl
gs
rorb
lret
jecxz
sbb
sbb
aaa
cltd
add
lds
call
nop
sbb
outsb
xchg
sbb
aaa
add
xor
xor
xor
adc
sub
shll
jge
jp
loopne
dec
lea
sub
loop
out
out
pop
mov
jne
and
push
je
mov
stc
sbb
mov
sbb
aad
inc
xlat
or
add
add
push
clc
mov
icebp
lods
imul
jae
enter
cmp
mov
pusha
stc
dec
xchg
jmp
pusha
notb
shrl
dec
out
ss
into
ret
add
bound
ss
jnp
popf
cltd
and
push
aaa
push
push
cmp
scas
into
divb
mov
dec
icebp
sub
mov
dec
jle
adc
scas
imulb
sub
cwtl
add
pop
sbb
push
test
jp
or
and
mov
xchg
rcrb
xchg
incb
adcb
xor
lds
dec
jmp
jb
lea
arpl
addr16
out
jo
jmp
dec
adc
aam
negb
jno
testl
mov
popf
inc
cli
test
cmp
adc
push
les
les
push
dec
into
cs
mov
test
mov
fucomp
mov
in
cmp
jp
jle
jnp
sub
jo
push
movb
cli
push
xchg
pandn
xchg
sti
lahf
lcall
push
das
jp
adc
xor
cmp
inc
jp
adc
adc
nop
clc
fnsave
call
dec
imul
xor
nop
fwait
push
movsb
adc
test
inc
jecxz
nop
pushf
jge
out
xchg
popf
bndstx
xchg
push
jae
lods
outsb
mov
fstp
repnz
sbb
xchg
pop
pop
mov
push
dec
cwtl
jno
push
ret
and
xchg
sbb
mov
mov
jecxz
adc
pop
or
into
mov
aad
xor
scas
adc
mov
push
fwait
ret
push
push
andb
or
sbb
dec
orl
shrl
pop
xchg
add
ret
flds
pop
sub
add
in
fcompl
std
push
scas
inc
js
outsb
jp
mov
mov
iret
add
fsts
fistpll
add
fisubs
push
mov
push
sbb
iret
nop
inc
sub
xchg
jle
add
sbb
aam
sets
mov
add
inc
pop
cmpsl
fcomps
cwtl
mov
stc
std
mov
mov
rcrb
dec
fimuls
pop
sbb
push
cmp
ret
jle
idiv
or
mov
adc
sbb
xor
sbb
adc
adc
inc
inc
mov
xchg
cs
cmp
ljmp
jecxz
fldcw
jno
hlt
pop
push
je
rolb
fidivs
pushf
pushf
mov
xlat
hlt
pop
adc
mov
repnz
rcrb
xchg
loop
repnz
jbe
cltd
call
js
inc
push
fs
popf
outsb
push
out
popf
fbld
sti
fistl
push
mov
fisubrs
negb
cld
jns
sub
div
out
popf
pop
sbb
cltd
sbb
rclb
xchg
sti
dec
nop
xchg
leave
xchg
sub
adc
insl
shll
test
setns
mov
popa
mov
adc
aam
bound
jne
xlat
jb
sbb
scas
push
cltd
mov
inc
push
or
pop
out
xchg
sahf
sbb
sub
mov
xchg
cmpsl
add
and
sbb
inc
in
sub
push
xchg
sbb
jne
sbb
mov
outsb
jno
daa
push
pop
aad
ja
std
or
ja
mov
dec
sbb
pop
mov
frstor
push
hlt
lock
ds
jo
outsb
jno
mov
jecxz
and
das
push
mov
mov
xchg
je
into
iret
mov
bound
jo
fwait
pop
fstl
mov
mov
dec
out
adc
pop
movlhps
xchg
mov
adc
or
jno
outsl
xor
cmp
inc
aam
out
iret
leave
sti
shlb
and
pop
mov
jne
daa
mov
mov
mov
add
sbb
in
jl
inc
and
cli
add
test
or
out
sub
mov
cmp
push
ffree
sti
jb
sti
xchg
ja
xchg
xchg
int
lcall
jmp
mov
ret
fwait
movl
cli
dec
in
push
dec
ljmp
mov
dec
pushf
insl
and
sub
sub
inc
fdivrs
sbb
sarl
das
hlt
aam
lods
jbe
out
test
ficoms
adc
jg
jbe
mov
fwait
jl
cmpb
fisttpll
into
push
mov
dec
out
pop
adc
out
das
loop
mov
inc
sahf
push
lea
ds
cld
daa
ret
pop
ret
jae
fidivrs
mov
jge
pop
test
adc
lret
lods
repnz
cmp
cmp
dec
lahf
aad
leave
fnstcw
adc
ret
push
aad
mov
adc
push
jg
and
ds
popf
push
ss
imul
fistpl
sahf
mov
dec
aaa
sahf
mov
mov
xor
push
scas
nop
fldl
or
mov
mov
iret
mov
int3
sahf
jp
push
jo
mov
xchg
sbb
sbb
jge
lahf
lahf
pop
cmp
xchg
jns
sbb
roll
xor
fiaddl
mov
fnstsw
sub
fistl
sbb
mov
ja
test
mov
mov
fisttps
sbb
mov
inc
mov
pop
cltd
or
mov
xchg
ds
aad
mov
push
pcmpgtd
sbb
or
testl
adcl
mov
sub
faddl
shl
das
jecxz,pt
outsl
repnz
loop
pushf
jnp
and
lcall
js
push
daa
mov
pop
call
std
sysret
fildll
faddp
repz
adc
stc
jp
mov
xchg
mov
fists
pop
pop
fcompl
stc
popf
jnp
xor
mov
sbb
je
jle
mov
inc
lahf
add
pusha
mov
ljmp
pop
loop
inc
add
jno
mov
aad
out
inc
fwait
sbb
and
mov
leave
sbb
sahf
xchg
push
test
fstp
mov
arpl
sub
or
lock
jbe
nop
push
gs
mov
scas
push
push
and
push
or
stc
in
pusha
mov
fdivrl
je
push
inc
or
adc
xor
test
cmc
loop
cmp
xchg
pushl
mov
imul
or
add
bnd
push
subl
aam
jne
cmp
lcall
cmp
sti
inc
cmp
testl
mov
and
cmc
lahf
ds
xchg
mulb
mov
or
push
test
icebp
pop
fnstsw
negb
jecxz
psubusw
cmp
pop
mov
inc
js
sahf
std
mov
mov
outsl
sub
jmp
fstps
insl
pop
sbb
sbb
test
dec
cmpsl
aam
add
cwtl
ss
jns
into
fmull
aam
sub
hlt
sub
pop
cmc
in
icebp
aas
rcrb
mov
lahf
pop
sub
dec
lea
mov
jge
sub
icebp
dec
into
jne
les
push
mov
pop
notb
add
and
repnz
outsw
incb
inc
jnp
inc
sbb
or
fisttps
popf
and
aad
fcmovnu
add
jno
jb
sub
push
je
pop
xchg
inc
pextrw
fs
popf
sub
sbb
mov
add
mov
sbb
or
xchg
jge
ja
sub
fiadds
cmc
sbb
call
mov
cltd
jp
xchg
out
push
loopne
fcmovnu
jae
clc
sub
adc
sahf
adc
push
mov
js
dec
add
cwtl
sbb
mov
jno
out
sahf
pop
notb
iret
cmpsb
jno
pop
jnp
xor
dec
jnp
mov
cwtl
in
stos
mov
pop
in
clc
psubsw
prefetchnta
cwtl
sbb
sbb
mov
push
pusha
push
lret
mov
aaa
pop
fistpl
lods
adc
ret
repnz
aad
xor
aad
pop
roll
popa
daa
add
cmp
jb
xchg
ja
out
test
in
mov
int
add
xchg
loop
setle
ret
cltd
ja
into
mov
lahf
sub
aam
lea
sub
sbb
sbb
sbb
xchg
cmc
mov
pusha
push
push
sbb
je
lock
xchg
clc
inc
fdivrp
mov
jns
clc
or
popa
jp
xchg
flds
negb
fucomip
fnstsw
sub
ret
mov
mov
rcr
and
jae
fwait
push
jl
loop
adc
cld
mov
push
js
mov
xchg
adcb
push
jle
mov
fsubrp
cld
pop
mov
mov
and
pop
pop
xchg
cwtl
cmp
cmp
repnz
inc
push
rcll
cmp
stc
ja
jno
add
sahf
mov
jle
in
cmp
fs
shrb
inc
paddusw
pop
mov
cld
shll
sahf
jbe
rcrl
lret
mov
loope
add
pop
out
mov
mov
mov
or
lea
jle
mov
push
adc
push
popf
ret
mov
xchg
mov
fmulp
out
ss
mov
fstpt
mov
lock
rcrb
jnp
into
inc
flds
push
out
jne
sahf
movsl
call
mov
mov
testb
sub
lcall
pop
fistl
xchg
xchg
pop
xchg
adc
push
pop
push
daa
xlat
sahf
add
movsl
xlat
mov
enter
dec
jmp
adc
sbb
lds
lret
addr16
xchg
outsl
cli
xchg
mov
cmpsb
fstpl
inc
mov
popf
cmp
dec
fmul
icebp
lcall
inc
and
fs
jge
insl
mov
cmp
ds
xchg
cmp
add
sbb
bnd
mov
mov
gs
jmp
in
fiaddl
ss
sub
inc
test
outsb
adc
es
lret
fwait
jmp
dec
push
sub
pusha
vpmacsdd
sbb
mov
cwtl
mov
int
sub
shl
xor
cmp
xor
shlb
mov
jnp
lea
xchg
push
push
pusha
or
and
sahf
outsb
push
xchg
cmp
cmp
inc
movsb
inc
popf
cld
cmp
jns
loopne
mov
mov
push
mov
sub
cmp
xchg
outsb
mov
into
push
mov
cmp
cmp
addl
outsb
stos
pop
sbb
or
xchg
push
jmp
cwtl
fcmovnbe
pop
in
xor
lods
mov
test
fxch
pop
xor
mov
mov
loopne
push
movsb
fists
add
pusha
pop
pop
and
stc
shrb
mov
dec
cwtl
dec
dec
or
aaa
jle
out
dec
pop
cld
push
fstpl
arpl
sub
pop
pop
pusha
mov
fmuls
mov
mov
ds
adc
into
pop
loop
mov
lea
sbb
pop
sbb
sbb
sbb
in
cwtl
sbbb
mov
push
idivb
inc
and
cmp
out
sub
fnstsw
gs
mov
jo
ja
in
inc
xchg
std
sti
xchg
ss
sarl
xchg
int3
insl
inc
add
sub
dec
adcl
cmp
ret
xchg
jge
in
insl
rclb
adc
test
int3
pop
lahf
push
cltd
lret
cmp
add
sti
pushf
push
cmp
int
dec
cltd
cmp
sbb
dec
incl
pop
xor
add
sbb
divb
ret
bound
in
scas
adc
adc
adc
xor
test
stos
and
cmp
insb
es
ljmp
std
fistpll
jae
ret
mov
jmp
sbb
sbb
aas
xchg
test
je
sbb
xor
es
enter
pop
dec
shrl
xchg
sahf
pop
data16
pop
pop
mov
and
and
mov
call
out
push
hlt
scas
add
sbb
pop
adc
jnp
test
push
cld
aad
cwtl
lahf
or
mov
sbb
sbb
xchg
dec
mov
daa
and
dec
pop
xchg
xlat
mov
fildll
inc
pusha
sbb
or
fisttps
divb
mov
jmp
lret
xlat
sbb
add
adc
push
lcall
mov
cmp
stos
sbb
enter
inc
adc
insl
repnz
add
test
sahf
jle
sarl
sbbb
mov
push
jo
lock
jecxz
cwtl
fsubr
mov
mov
lds
cltd
mov
popf
ret
iret
add
cs
xor
jle
and
add
ds
jnp
push
adc
nop
mov
xor
pop
pusha
cmc
push
iret
aaa
adc
xchg
and
mov
xchg
dec
fsubl
xchg
pop
cmc
mov
sub
or
sbb
jno
aam
aas
lcall
push
sti
lcall
jge
push
cmp
scas
pushf
xchg
outsb
ja
cmp
fnstsw
sub
loopne
xlat
add
out
mov
cmp
cltd
jmp
pushf
mov
sbb
test
ret
sbb
iret
push
ljmp
rcrl
or
pop
popa
mov
mulb
es
ret
leave
push
sti
fnstsw
aaa
push
adc
sbbl
dec
out
scas
repnz
in
xor
pop
adc
test
adc
pop
xor
fwait
dec
rolb
arpl
pop
fistl
dec
fstl
aas
pop
jle
push
adc
fwait
fs
iret
fisubrl
mov
inc
mov
fistl
rclb
or
cld
fwait
and
xor
sbb
rcrb
pop
add
mov
frstor
movsl
sti
dec
pop
aam
mov
nop
test
cmc
add
pop
mov
inc
not
out
sbb
mov
xchg
popf
mov
mov
lret
pop
mov
std
sbb
sub
adc
movsl
push
mov
push
pop
adcb
push
cmc
cltd
or
sbb
jl
imul
mov
adc
imul
mov
xchg
fistl
cmp
push
adc
and
test
add
or
sub
push
and
subl
repz
add
stc
or
xchg
iret
sbb
fstpl
jnp
add
xor
or
jo
popa
pop
iret
cltd
leave
xchg
xor
movsl
fstps
pushf
std
inc
mov
jbe
jae
inc
mov
leave
pop
xchg
push
mulb
scas
pop
movsb
fwait
test
mov
mov
test
aas
sub
xor
dec
mov
pop
push
dec
sbb
repnz
mov
sbb
mov
pop
out
les
fdivrl
mov
sbb
xchg
adcb
cmpsb
xchg
pop
jge
fwait
push
mov
adc
js
out
cmp
call
nop
test
dec
pop
xchg
pushf
cwtl
sbb
sbb
add
push
hlt
test
mov
xchg
cmp
and
fstp
xlat
cmc
jne
repnz
in
dec
push
dec
push
rorb
adc
cltd
jnp
outsl
sub
ss
cwtl
cmp
add
fwait
add
outsb
jne
test
lock
andb
sbb
push
xor
cmp
inc
sbb
and
pop
lods
or
pop
int
ret
mov
add
push
xor
sti
mov
je
add
jno
pop
sub
lea
adc
sbb
pop
subl
pop
adc
seto
orb
add
hlt
jno
add
rcr
pushf
mov
sbb
fstpt
add
loopne
inc
sbb
sub
cmp
xor
add
jo
repz
ja
bswap
cmp
jnp
fs
loope
mov
xor
lahf
sub
outsb
mov
fildll
sub
or
sub
xlat
lahf
out
add
aam
inc
jnp
jno
push
push
jae
sbb
sahf
push
lahf
ja
jbe
lods
xchg
pop
sbb
push
popf
aad
cmp
call
lahf
xabort
and
arpl
fisttpl
cmp
xor
cltd
xchg
es
cwtl
popf
sub
sbb
add
fbstp
je
outsb
sar
fsubrp
fisttpll
loopne
scas
sarb
dec
jl
sbb
xchg
cli
xchg
std
out
jge
fistpl
mov
cli
in
mov
adc
mov
cmpsl
pop
cld
fwait
adc
pop
andb
ljmp
leave
pop
les
cmpl
push
into
sbb
jge
sahf
int
dec
cli
pushf
sahf
mov
std
sub
pop
jbe
lcall
aad
mov
mov
mov
sbb
cmp
xorl
repz
jl
fdivs
adc
arpl
mov
jge
mov
mov
inc
inc
pusha
xchg
negb
aaa
ljmp
push
cld
add
adc
incb
mov
pop
ja
or
pop
add
es
inc
jnp
fnsave
mov
or
xorl
jp
imul
jl
ljmp
cli
stos
hlt
cmp
jno
mov
pop
lcall
push
xor
cmp
sub
inc
cmpsl
ret
mov
mov
pushf
mov
jge
sbb
sahf
push
cmc
jno
mov
andb
mov
out
shl
jbe
jno
mov
or
daa
sub
shrl
loopne
insl
push
and
push
cld
xchg
and
mov
push
push
fxch
xchg
js
in
pusha
sbb
cs
cmp
call
dec
sbbb
fstp
stos
pop
mov
sbb
pop
adc
ljmp
mov
call
fiadds
fstps
cmp
imul
sbb
xlat
mov
pop
rorl
push
mov
pop
jno
aam
pop
lods
jmp
fidivrs
pop
xchg
ficomps
cmp
cmp
std
push
into
jbe
xchg
aaa
je
push
je
pop
adc
and
push
pop
sbb
push
sub
sbb
push
imul
adc
push
paddusw
xor
stos
int
inc
fsubrp
lahf
fnstcw
mov
add
xor
sbb
lret
pop
lock
mov
inc
push
inc
inc
data16
pop
lcall
xlat
rcrl
test
lahf
dec
mov
fwait
cmp
rcl
cmp
mov
sbb
push
scas
cmpsb
push
jle
out
adc
pop
jmp
cmp
rorb
push
pop
jge
dec
jge
mov
adc
xor
je
add
test
pop
ja
cltd
test
icebp
test
adc
lret
xor
xchg
ficomps
push
adc
outsl
and
mov
popf
fstpt
lods
or
push
ss
lds
lcall
inc
push
call
ficompl
out
hlt
mov
lods
xchg
pop
mov
jp
mov
pop
jnp
sub
mov
stos
fucomp
and
dec
xchg
addr16
sub
or
jns
pop
mov
insl
lods
out
cmp
inc
fimull
enter
sub
lahf
or
pusha
rcll
cltd
fdivl
push
inc
mov
in
and
xchg
xor
inc
paddusb
rcr
and
rcrl
imul
mov
test
xchg
jle
mov
push
cltd
fistpl
lret
sbb
mov
ret
mov
cmpl
mov
stos
roll
add
inc
mov
pusha
inc
imull
pop
out
mov
sbb
int
inc
lock
pop
outsl
mov
aam
add
aaa
push
sub
das
xchg
js
xor
cmc
aad
dec
insl
or
inc
xlat
xlat
push
testb
dec
mov
popl
out
mov
cs
mov
mov
into
lahf
jnp
and
fldenv
push
or
lea
lret
cld
in
jno
nop
inc
clc
mov
lcall
cmp
ror
xchg
cld
pop
test
movsl
lods
mov
lret
push
pop
pop
jne
mov
push
add
sub
jb
xchg
bound
mov
test
xorl
mov
int
sbb
addr16
scas
or
fcompl
movhps
xchg
mov
fcoml
cwtl
mov
fisttpl
push
sti
iret
adcb
in
push
sbb
lahf
aaa
mov
imul
sub
push
stos
adc
pop
or
push
in
mov
pop
xchg
out
mov
outsb
iret
sbb
push
xor
bound
out
jae
popf
cmp
fstl
stos
push
sbbb
cmpl
lcall
pop
dec
sub
gs
push
cmp
out
dec
loopne
jnp
sub
push
xor
pop
popf
or
dec
test
ds
sbb
xchg
push
or
cli
ds
mov
cmc
shrl
fstpt
jns
scas
pop
adcb
dec
sub
les
pop
cmpsl
out
imul
cmp
mov
xchg
out
mov
mov
dec
cmc
jmp
xchg
pop
out
mov
cmp
xor
jno
imul
cmp
pop
adc
hlt
inc
sti
push
jns
shlb
sahf
ret
lods
push
rcr
popf
pusha
sub
cs
fs
push
fistpl
mov
mov
xchg
sbb
ret
scas
fcoms
lcall
lods
or
aad
and
scas
pop
add
rorb
jle
shl
stos
decb
xchg
jnp
mov
mov
insb
imul
jl
lcall
insl
ficoms
push
cmp
or
rcr
ss
in
scas
jo
sahf
jno
inc
outsl
mov
jp
test
scas
push
lahf
lds
mov
jl
jno
mov
jp
and
push
cmp
outsl
xchg
insb
jb
or
lret
sbb
adc
js
sub
lea
and
xchg
xchg
mov
dec
cwtl
lcall
xor
mov
test
push
pushf
and
jle
add
out
pop
mov
stc
stos
std
xchg
negb
mov
daa
into
jle
sti
fadds
add
push
insb
and
inc
jns
or
in
pop
dec
ss
pop
cmp
ja
pop
in
mov
dec
mov
in
cmp
adc
cwtl
pop
enter
xchg
mov
ret
leave
push
push
sub
fwait
shrl
dec
pop
jns
outsl
sbb
add
in
in
pushf
adc
adcl
shrb
mov
popl
cmp
xchg
lret
push
in
cwtl
mov
sarb
mov
in
xchg
mov
mov
pushf
xor
insl
push
pop
sahf
pop
sub
dec
leave
dec
fisubrs
sub
adc
fistpll
pop
clc
cld
data16
or
outsl
cs
rcrb
andb
icebp
xor
pop
sbb
hlt
sub
push
xor
lea
dec
and
popf
add
movsl
out
mov
ds
add
jmp
push
pop
push
fdiv
arpl
xchg
out
movsb
mov
loopne
push
in
or
push
pop
cmc
scas
adc
fidivrs
push
push
aad
jge
sbb
jle
loope
sbb
mov
movsl
mov
mov
test
fistl
rclb
xchg
nop
ss
push
mov
std
movsl
loopne
or
leave
or
or
pop
movsl
iret
aaa
sti
jo
outsb
cli
nop
cld
mov
or
cmp
sub
cli
scas
or
cmp
mov
and
ret
mov
lods
paddsb
or
test
sub
pop
out
adc
xchg
lods
push
arpl
xlat
xchg
pop
xchg
jo
sub
sbb
mov
rclb
jmp
and
out
insb
mov
sbb
sub
jo
xchg
test
and
push
xchg
adc
into
adc
lods
fadds
jne
femms
push
jns
sbb
aam
cli
xchg
jae
out
fsubs
ja
jo
dec
cmp
bswap
cwtl
fldl
fsubs
cwtl
push
out
mov
or
mov
fldcw
xor
sbb
out
sbb
sbb
xchg
loopne
cmp
out
push
in
xchg
clc
outsl
sbb
xlat
mov
mov
xlat
clc
clc
add
sbb
outsb
or
addb
cld
adc
iret
sbb
iret
enter
add
dec
or
mov
add
aad
mov
out
mov
sbb
imul
gs
loopne
or
cmp
adc
pop
rol
mov
loopne
jge
sahf
ud2
insb
adcl
shr
fidivl
lahf
dec
ds
fxch
xchg
adc
aas
fadds
inc
mov
xchg
pop
pop
mov
or
lahf
xorb
frstor
andl
into
aam
push
or
jbe
mov
push
inc
jp
sub
xchg
pop
cs
pop
jp
popa
cmc
scas
sbb
jae
push
movsl
sbb
add
fnstsw
jae
pop
js
test
xchg
xchg
push
xchg
cltd
fistl
cmpsb
inc
cs
addb
mov
pop
daa
add
pushf
repnz
jl
movsb
fs
push
sbb
jmp
mov
scas
jl
mov
js
ds
pop
add
sahf
jne
sbb
mov
pop
sub
sbb
fidivs
fcomps
sub
lds
sahf
cmp
and
test
add
inc
push
xlat
pop
js
fildll
mov
adc
pop
jecxz
outsl
push
cmp
fs
mov
fsin
ds
fs
and
sbb
xchg
sub
fwait
mov
es
cmp
adc
loop
test
outsl
cmc
js,pt
sub
push
stos
dec
xchg
push
fldt
dec
cmpsl
jmp
sti
mov
pop
bound
sbb
pop
mov
push
pop
mov
sbb
or
mov
push
in
mov
mov
xor
push
gs
test
fwait
lock
lret
pop
outsl
mov
loop
in
popf
stc
or
inc
inc
mov
jle
mov
lea
mov
clc
mov
add
movsl
pop
int
adc
mov
jge
mov
mov
rclb
mov
outsb
fisubrl
lret
sbb
mov
les
std
add
loope
push
xor
dec
subl
insl
out
sub
iret
roll
xchg
imul
inc
scas
mov
jno
fwait
mov
out
pop
inc
jo
and
sti
sub
adc
mov
outsl
mov
or
mov
xchg
out
in
pop
rcrl
pushf
mov
pop
jne
daa
scas
mov
push
xchg
popf
das
leave
mov
sbb
cmp
lcall
or
fcmovbe
and
or
pop
xor
sahf
cmpxchg8b
mov
sub
icebp
xor
pop
mov
adc
or
mov
sub
dec
sub
sbb
pusha
insb
test
add
nop
lea
rcrb
lret
and
imul
mov
clc
add
imul
jl
call
jno
add
or
sub
mov
dec
or
add
cmp
scas
or
push
or
xchg
cmp
xchg
int
mov
sbb
and
mov
sbb
fisttps
add
inc
or
mov
pushf
popf
inc
mov
and
fistpl
ret
pushf
cmp
push
pop
aam
pusha
dec
pop
sbb
xchg
adc
or
iret
shrb
imul
jb
rclb
jbe
or
cld
loope
mov
cmp
lock
inc
xlat
orl
mov
fs
adc
in
daa
xchg
repnz
cmc
ds
mov
xchg
add
pop
addr16
dec
loopne
dec
cmp
shl
pop
lahf
pop
cltd
fimuls
gs
sbb
xchg
iret
dec
and
mov
fisttps
outsb
jo
pop
mov
loop
fsubrl
jne
jge
add
inc
sub
mov
inc
cmp
icebp
testl
cwtl
fs
and
push
sbb
xchg
out
jp
push
iret
and
xor
xor
pop
xchg
add
inc
mov
lret
and
mov
add
pop
enter
addr16
ja
ljmp
ja
and
sti
imul
add
xchg
cmpsb
cltd
xor
stc
xchg
sahf
mov
add
test
sbb
into
dec
movsl
jae
pop
mov
int3
wbinvd
push
inc
js
sub
nop
movl
pop
mov
out
sbb
pop
add
in
pop
in
popf
push
xor
aam
rorb
popf
pop
jbe
repz
into
sbb
idivl
jne
add
sbb
or
ss
cmp
pop
xchg
sbb
or
sbb
xlat
add
sahf
jp
fnsave
addr16
lahf
aad
and
lahf
cmp
popf
pop
mov
icebp
pop
cltd
cmpb
push
leave
mov
cmp
or
pushf
lea
add
and
pop
mov
sbb
mov
xor
inc
pop
inc
mov
pop
mov
fisttpl
cmp
hlt
jp
sbb
jp
xchg
push
es
pop
push
fwait
rclb
sbb
xchg
mov
adc
lea
xorb
pop
sti
negl
js
mov
ljmp
adc
jle
stc
rcrb
enter
in
insl
stc
pop
movsl
mov
push
test
and
xchg
jl
imul
leave
aad
fisttpl
sbb
ss
mov
add
xchg
pop
pushf
add
cmc
pop
lahf
enter
add
fistpl
add
std
push
aad
cmp
lret
lea
mov
out
pusha
loopne
mov
in
shrl
in
pop
aam
jns
iret
and
mov
mov
repz
popa
hlt
das
mov
xchg
ja
mov
sbb
mov
stos
pop
ret
add
sub
inc
aaa
sarl
mov
and
mov
add
out
dec
mov
outsl
sbb
ret
fchs
pop
mov
push
cld
push
into
xchg
fisubrs
cmp
mov
enter
ja
jg
pop
cmp
xor
fucom
lds
cld
jno
scas
or
mov
mov
jmp
ja
ja
sbb
cmp
cs
jge
push
popf
in
push
push
xor
push
es
movsl
pop
stos
shll
add
fimuls
sbb
pop
sub
nop
testl
pop
out
test
loop
stos
cmp
stc
mov
push
cmpsl
adc
mov
out
shl
out
js
ficoml
add
into
pop
xchg
popf
mov
in
dec
pop
adc
dec
add
sbb
add
inc
xchg
lock
mov
ds
sub
mov
xchg
fidivl
xchg
imul
push
ljmp
aaa
push
pop
out
push
fimuls
mov
roll
pusha
popf
pusha
addr16
pop
call
cltd
movsl
pop
add
cli
pop
mov
jmp
dec
dec
pop
insl
popf
sbb
mov
popf
xchg
loop
sub
popf
pushf
insb
arpl
jnp
adc
mov
aad
mov
sub
test
subb
test
fs
orb
cmp
cwtl
push
rcrl
mov
mov
jbe
pop
adc
pop
adc
jmp
lret
mov
sub
nop
jge
ja
mov
add
push
sub
adc
sar
push
into
lods
cs
jae
push
stos
fisttpll
daa
rol
pop
cs
bound
es
popf
ret
xor
mov
adc
mov
sbb
movq
cmp
out
jno
xchg
int
gs
mov
sub
xchg
rorl
negb
mov
fnsave
int
fs
mov
addr16
ret
mov
or
xchg
mov
loope
shlb
lahf
push
je
or
inc
inc
jnp
sbb
outsl
mov
into
pop
jge
stos
into
scas
fimull
inc
jns
dec
sbb
int3
add
dec
jp
push
push
imul
fcmove
inc
and
pusha
arpl
sti
imul
into
fmuls
aas
jmp
out
jecxz
sub
iret
push
fwait
cwtl
jns
mov
xchg
jno
push
push
adc
es
mov
mov
xchg
ja
int3
into
pop
xchg
inc
dec
in
xor
mov
lret
and
aas
negl
sbb
xchg
pop
into
test
fwait
push
and
nop
xor
sbbb
les
xor
and
cmc
mov
push
inc
mov
ficomps
and
gs
cld
adc
lods
ds
add
stc
out
hlt
inc
and
pop
adc
and
mov
pop
xchg
sub
sub
insl
mov
addl
inc
add
test
test
pop
jno
sbb
mov
cld
pop
pop
shrl
fwait
fwait
sti
inc
push
loopne
scas
ret
movsb
cs
mov
jle
cli
lods
cmp
les
cmp
and
mov
shll
pusha
jbe
jp
push
sti
cs
xlat
fmuls
xchg
adc
jne
mov
pop
dec
lods
jnp
xchg
inc
and
jecxz
cmp
lret
adc
mov
xchg
mov
fnsave
sbb
popa
loopne
cs
mov
clc
in
jo
dec
xchg
sbb
mov
mov
inc
shll
jge
mov
lahf
jno
sti
jo
fdivs
adc
movsb
popf
fisubl
mov
mov
jbe
cmp
or
loopne
repnz
je
and
inc
imul
push
adc
into
pop
xchg
jle
fsubrl
fiaddl
mov
out
pop
ret
jbe
cltd
add
adc
lahf
adc
inc
sbb
imul
sbb
cli
xchg
add
xor
aad
pop
push
hlt
scas
pop
sbb
mov
shll
xchg
mov
and
add
into
sbb
rcrb
add
pop
xchg
xor
andl
subps
lsl
repnz
icebp
push
sub
cmpsb
xchg
push
imul
cltd
pop
into
fmul
scas
or
dec
jle
movsl
xchg
lcall
jae
and
mov
jnp
fists
imul
mov
pop
lret
sbb
push
cmp
xchg
cmpsb
pop
invd
pop
jne
flds
imul
sub
sbb
out
and
cmpsb
inc
add
sbb
pop
in
pop
xchg
mov
sti
or
leave
jle
push
sub
outsl
add
in
xchg
enter
lret
mov
or
cs
pcmpgtd
lea
dec
out
xor
xor
movsl
outsb
xchg
lret
sbb
scas
xchg
push
xchg
xor
inc
out
fcom
adc
adc
push
out
lret
and
sub
stos
xor
sub
into
push
lahf
and
adc
repnz
jl
xor
push
push
push
mov
enter
xchg
ljmp
adc
jp
mov
jp
push
cltd
enter
pop
add
aad
imul
mov
xor
and
sbb
inc
insl
xchg
sub
fsubs
jp
in
int
outsb
mov
mov
pop
push
mov
mov
sahf
and
lea
lods
push
in
xchg
testl
dec
fdivl
nop
mov
pop
outsl
dec
xchg
rorl
jle
push
jno
icebp
sbb
mov
mov
add
cmc
dec
ds
stos
sub
lret
imul
pop
and
push
mov
and
scas
outsl
xchg
stos
xsavec
xchg
ret
dec
sbb
test
cmpsl
scas
add
jo
into
cmpsb
fidivl
jae
lahf
out
popf
mov
dec
or
dec
push
pop
aad
enter
dec
enter
in
out
test
cli
jnp
sahf
ret
xlat
xchg
ret
les
push
test
aam
sbb
das
push
mov
adc
outsl
sti
add
xchg
xchg
fsubrs
out
push
inc
mov
call
push
jmp
pop
fcomip
sbb
dec
cmp
sti
ret
je
aaa
test
pop
lock
sbb
push
outsb
jmp
addb
add
dec
xchg
sub
cmp
add
mov
out
outsb
fidivs
jnp
or
pop
sbb
mov
fidivrs
cmp
inc
lds
movsl
in
pop
jno
rcll
jle
xor
adc
mov
mov
sub
into
add
xlat
cmp
mov
mov
jne
jb
xchg
shrb
in
lret
jnp
adc
xor
jbe
lahf
ljmp
fbstp
stc
movaps
xor
cmp
xchg
fcmove
mov
jmp
jnp
ficoms
popf
repz
mov
hlt
xchg
ja
mov
lea
mov
imul
testb
into
iret
mov
scas
sub
sbb
adc
sub
xor
stc
jno
pop
cmp
bound
mov
push
xlat
dec
repz
or
mov
test
cmp
in
sbb
push
jp
lahf
lds
out
mov
xor
pop
sub
lds
xchg
jb
cwtl
sbb
push
insb
xlat
inc
xor
andb
lea
xor
jle
mov
mul
push
sarb
pop
rcl
sub
mov
lcall
loope
fstpl
fwait
setp
pop
sub
add
adc
or
xchg
daa
shll
pop
sbb
cmpsb
dec
mov
lds
dec
in
mov
push
push
mov
jl
leave
sbb
sbb
jge
inc
in
push
in
insb
int3
sbb
lahf
add
jo
pop
push
mov
imul
imul
nop
xor
ss
pop
cwtl
xlat
into
leave
sub
sarl
lock
stos
lcall
pop
xor
aam
je
pop
jp,pt
jle
inc
adc
fidivs
mov
lods
addr16
or
fidivrs
out
mov
adc
xchg
xchg
pop
insw
ret
cltd
pusha
lock
into
out
je
sahf
cld
sbb
sbb
pop
cmpsb
test
sbb
xchg
ret
xlat
pop
fimull
js
or
sbb
arpl
dec
xchg
adc
int
xchg
lock
inc
int
gs
in
push
sbb
xor
jge
lea
nop
iret
cld
sarb
aaa
fsubrl
test
jp
push
xchg
sbb
cmp
pop
jns
imul
rclb
xchg
jecxz
or
push
add
dec
imul
mov
ret
fsts
mov
sbb
dec
mov
jnp
push
pop
or
mov
in
pop
aaa
pushf
cmp
in
mov
into
mov
lcall
popf
cmp
cltd
enter
sbb
mov
pop
cmp
stos
in
pop
scas
fsubl
mov
in
mov
pop
in
inc
inc
mov
cmp
ret
imul
out
cltd
pop
and
lret
xor
mov
mov
dec
sbb
cmp
mov
push
xor
in
xor
cmpl
mov
faddl
lahf
or
pop
in
or
lcall
mov
outsl
scas
je
sbb
sub
and
pop
in
test
std
mov
or
pop
dec
push
push
fsts
cltd
push
lahf
scas
add
and
scas
cli
cmp
sahf
cmpb
fcmovnu
or
xor
jp
sub
adc
inc
jg
lahf
sub
ljmp
imul
das
jmp
add
dec
sahf
xchg
pop
pusha
cli
mov
sub
mulb
sub
adc
push
add
jae
daa
rorl
popf
std
mov
jno
scas
ja
sbb
pop
scas
sub
mov
mov
fdivr
cltd
stos
xchg
std
or
adc
aam
pop
pop
xorl
inc
pusha
int3
mov
mov
js
fcmovnbe
adc
insl
int3
aam
push
orb
mov
cli
xchg
pushf
fmul
inc
decl
cltd
lret
out
loopne
or
cld
fwait
mov
push
jp
inc
push
mov
popl
cwtl
sub
sbb
xchg
mov
pop
jmp
mov
popf
fs
and
jmp
out
cmpsb
mov
bound
and
pop
lods
mov
test
lcall
dec
jle
sbb
xchg
dec
jno
lea
cmp
int3
pop
stos
mov
jnp,pt
xorb
fcomps
push
pop
jp
test
mov
leave
movsl
addb
sbb
bound
lds
mov
push
push
ret
ja
mov
push
insb
je
imul
roll
mov
jecxz
je
add
cmpsl
loop
ret
pop
jne
orl
sub
jecxz
and
cmpsl
adc
pop
adc
orl
mov
mov
nop
mov
pop
leave
fsubl
pop
bound
xlat
add
inc
adc
in
fcoml
ds
xor
lods
sbb
stc
push
jno
fisubl
imul
sub
sbb
pushf
mov
mov
add
call
add
andl
mov
lds
aam
xlat
push
cltd
push
mov
pop
insb
xchg
lods
movsl
add
in
push
addr16
sbb
xor
inc
rorl
inc
push
leave
ffree
or
mov
in
sbb
and
xchg
push
shlb
aas
or
cwtl
pop
pop
or
decl
xchg
sbb
push
jo
outsb
pop
push
lcall
outsb
dec
push
push
in
adc
jne
outsb
ficoml
fwait
lea
cmp
mov
das
add
jo
adc
lods
push
mov
pop
imulb
jmp
dec
ret
testl
and
push
popa
dec
or
pop
jge
push
scas
ret
xor
insb
fwait
sbb
add
leave
push
sahf
mov
scas
mov
pusha
out
scas
lcall
cmp
sbb
sub
sbb
sbb
testl
popf
lods
icebp
fsubr
pop
dec
adcb
cltd
fcmovnbe
add
mov
inc
or
fsubrs
bound
mov
xor
sub
and
loopne
pop
repz
pop
pop
jbe
mov
xlat
adc
daa
or
cmpl
pop
and
add
dec
in
inc
lahf
sub
mov
aam
adc
cld
pop
test
cmp
loopne
cmc
add
pop
or
je
sbb
mov
ror
pop
aam
in
inc
int3
jno
xchg
jne
adc
cmp
jo
xor
xchg
mov
mov
rorl
adc
jle
sahf
xchg
sahf
jecxz
fstpl
call
xchg
mov
jg
sub
mov
mov
cmc
lds
imull
xchg
xchg
pop
mov
jmp
jg
or
sub
das
mov
xlat
xchg
pop
inc
fldl
xlat
scas
xor
add
push
hlt
jg
js
nop
mov
ret
sub
inc
xor
pop
mov
dec
cmpsb
sahf
xlat
sbb
xchg
sub
leave
les
mov
ret
jne
insl
sbb
lcall
cmp
enter
push
mov
sbb
pop
pop
es
pop
test
out
jnp
and
fistpl
pop
popf
out
repnz
enter
push
stos
jb
loope
adc
fdivrp
push
popf
repnz
into
pop
xchg
cltd
mov
loopne
fsubrl
dec
std
lcall
mov
icebp
addl
cmp
xorb
insl
data16
sub
push
adc
push
cmp
mov
sub
popf
rolb
daa
sub
adc
fsubl
lea
xchg
inc
rcr
push
xchg
jae
jg
dec
xchg
sti
xchg
pcmpeqw
push
punpckhwd
sbb
sbb
mov
push
pop
mov
push
xor
cmpb
negb
jl
lea
sarl
js
push
mov
push
mov
pop
cmp
cwtl
aaa
xchg
inc
popl
or
fdivrl
mov
inc
dec
mov
mov
push
sub
push
push
jmp
pop
ror
fstpl
daa
xorb
lcall
lahf
outsb
enter
cmpb
mov
inc
jge
pop
bound
stos
ficomps
and
pop
rolb
or
hlt
iret
inc
sbb
xchg
push
jle
jae
mov
xor
cld
stos
xor
xor
std
fistpl
rcrb
jnp
int
loope
in
xchg
xor
sbb
and
sub
lret
cltd
push
fsubs
lcall
jmp
cmp
mov
xor
cmp
cmp
or
pusha
dec
aam
mov
add
pcmpeqd
repnz
cmp
push
aaa
mov
scas
and
out
cmc
shl
sbb
std
dec
in
push
and
ljmp
cmp
mov
popa
mov
jp
mov
lret
jle
cmp
fwait
test
push
inc
mov
pop
mov
divl
push
pop
mov
xchg
sbb
sahf
out
in
xor
xor
fwait
mov
imul
cmp
xchg
mov
insl
out
sbb
mov
daa
pop
addr16
pop
sbb
andl
adc
sbb
and
add
xor
or
xor
pop
xlat
out
mov
fnstsw
daa
aas
jmp
or
adc
mov
mov
jmp
push
rolb
push
inc
les
push
popf
sbb
jno
daa
xor
shr
adc
ss
adc
sbb
pushl
filds
mov
andl
shll
dec
push
push
andl
push
arpl
inc
lock
out
fsubl
sbb
outsl
cwtl
inc
mov
push
out
sahf
fistpll
push
add
out
mov
ds
idivb
popf
push
jns
cmc
and
pop
inc
inc
mov
push
sbb
icebp
mov
dec
inc
test
or
mov
jnp
cmp
inc
xor
ja
insb
pop
inc
mov
int3
cmp
jge
or
or
out
inc
inc
or
pushf
ds
cmp
jle
or
int
push
or
jbe
pusha
mov
in
pop
add
fs
add
dec
sbb
push
xor
adc
add
dec
push
loope
add
sahf
jl
lahf
cmpb
and
sbb
insl
shll
and
xlat
jg
std
test
xchg
push
test
xchg
cmovbe
cmp
lahf
mov
ja
mov
addb
js
push
jge
mov
imul
push
cwtl
inc
push
add
pop
aaa
fists
pop
or
inc
ja
in
sub
adc
fdiv
fstpt
stos
ljmp
jno
lret
cmp
cmp
xlat
data16
lret
sahf
dec
and
fimull
test
fiaddl
fdivp
jecxz
mov
in
xchg
pop
xchg
push
xchg
pop
sbb
dec
pop
or
xlat
or
mov
cwtl
sahf
out
pop
push
fimull
inc
jb
fiaddl
jbe
subb
xor
fwait
repnz
and
fsubrl
jbe
sub
fstl
pushf
push
gs
sahf
sbb
fidivs
xchg
dec
fnstsw
push
mov
add
push
pop
decl
push
pop
xchg
lcall
mov
fisttps
mov
fstpl
popf
inc
fstl
data16
rolb
push
sahf
loope
xchg
test
ficompl
decl
rolb
imull
shr
es
push
push
sbb
push
test
jo
xor
sbbl
popa
cmp
in
xchg
ret
jle
pop
jge
xchg
push
out
pop
filds
jle
pop
test
xchg
pop
and
sbb
pusha
cld
jle
dec
xchg
sbb
sti
xchg
lods
pop
xchg
call
inc
sbb
cmpsl
loop
out
lret
mov
pusha
ret
xor
movsl
pop
mov
call
std
mov
lcall
adc
and
push
mov
iret
scas
sub
popa
hlt
fsubrs
inc
ja
das
sbb
sbb
leave
lcall
mov
nop
mov
push
xchg
lods
aam
stc
fidivrs
shlb
xchg
dec
decl
dec
cs
mov
shlb
jae
fcom
or
push
cmpsl
call
fildl
pushf
push
xchg
fs
or
rcl
pop
jp
mov
pop
mov
pop
xor
std
subb
jp
imul
adc
aam
push
sub
movsl
pop
xor
inc
adc
mov
pushw
sub
in
pop
cwtl
setns
aad
lods
test
dec
push
mov
mov
push
loop
sub
pop
aam
dec
mov
into
push
inc
push
jne
sub
test
add
xor
clc
mov
test
push
sbb
call
shr
jge
push
pcmpgtw
out
add
xchg
mov
add
push
cwtl
sbb
xlat
push
sti
sbbl
cmp
es
ljmp
scas
dec
jg
and
inc
add
add
jle
repz
jnp
xchg
cmc
cmc
popa
push
pop
mov
out
in
pop
fwait
or
and
loopne
js
xchg
fisttps
sub
mov
sahf
insb
jecxz
bound
cmpsb
test
fnsave
loope
xchg
iret
dec
mov
xchg
sahf
cmp
jmp
imul
and
icebp
mov
lods
loopne
aaa
fisttps
test
loope
movsl
and
rcr
rcrl
mov
test
jle
push
add
arpl
test
sbb
cmc
std
sahf
mov
test
cli
mov
mov
push
fdivp
mov
test
in
std
fistpl
fidivrl
repz
cld
mov
jge
fwait
jge
rolb
pop
lret
xorb
pop
pusha
negl
inc
adc
push
xchg
je
test
sti
fistps
add
inc
test
iret
inc
sbb
das
iret
popf
jmp
sbb
and
incl
std
add
push
mov
pop
add
ds
pop
dec
cmp
popf
int
push
mov
sbb
std
pop
sbb
lahf
and
fnstcw
sbb
mov
push
mov
push
dec
stc
or
fldl
test
incb
jae
xor
pop
pop
insl
int3
sub
pop
xchg
lods
ja
and
inc
xchg
xor
inc
lret
push
iret
add
push
aam
imul
inc
jmp
add
enter
jno
and
mov
cld
push
pushf
gs
pop
mov
jne
clc
mov
iret
daa
add
dec
mov
sub
jns
dec
fwait
stos
inc
push
stos
lcall
lcall
cwtl
mov
sub
pusha
ja
fisubrl
sbbb
add
cld
mov
jns
fisubrs
pop
cld
add
shll
mov
cmpb
fadds
inc
jecxz
test
pop
mov
ja
dec
sub
jl
ret
add
das
mov
loop
add
pop
sub
xchg
lss
jne
out
jb
pop
mov
mov
imul
sbb
inc
push
aas
xchg
mov
stos
enter
fisttpll
in
scas
mov
inc
sub
jle
or
sti
rorb
loop
gs
nop
xchg
testl
dec
out
mov
sahf
pop
mov
pop
jb
pusha
mov
addr16
inc
xchg
pop
stos
pop
clc
imul
xor
fstp
in
js
mov
sub
cwtl
push
call
inc
pop
jbe
sbb
rcl
ds
cmp
test
dec
xchg
popa
jae
fiadds
lahf
mov
sbb
fisttpl
or
sub
or
jo
out
jmp
jmp
scas
or
fistps
xorl
ret
popl
xor
sti
out
mov
xchg
adcl
test
popa
es
adc
nop
negb
sbb
cli
dec
pop
imul
outsb
stos
addr16
xlat
jns
add
iret
xor
lahf
and
pop
push
push
add
pop
out
loopne
pushf
cld
les
lcall
mov
pop
xchg
fnstcw
ja
mov
rcrl
xchg
inc
mov
push
fdivrp
jle
or
push
cmp
mov
out
adc
outsb
xor
sub
nop
mov
inc
outsb
in
into
pop
mov
lea
scas
pop
vmwrite
jae
push
fwait
stos
in
mov
lahf
in
add
add
dec
pop
movl
add
sub
mov
and
pop
add
je
inc
jl
or
fldl
add
inc
repz
xor
add
scas
cmp
lahf
xchg
jo
xor
fidivrs
mov
add
mov
cli
adc
mov
sbb
fwait
xchg
pop
addb
cmp
push
fiadds
cld
lcall
push
push
and
rclb
enter
sbb
xchg
sti
mov
ret
push
push
sahf
cmp
jl
lret
push
pushf
ret
int
fistpl
mov
loop
lret
add
loope
imulb
mov
xchg
jmp
inc
mov
pop
call
shl
mov
dec
out
pop
or
inc
sahf
fnsave
loop
shrl
jno
mov
mov
scas
pop
es
pop
jp
fcomip
inc
imul
add
push
jno
pop
aam
xor
mov
ret
cmc
dec
jb
ret
jge
and
or
add
call
mov
aad
ror
xlat
loop
rcll
ss
cwtl
push
addr16
and
xchg
fistps
dec
aad
ja
sbb
out
xchg
mov
sbb
sbb
sub
fistl
popf
dec
adc
hlt
mov
and
or
xchg
aad
add
jle
aad
xchg
lcall
lods
sahf
data16
cmp
add
mov
xor
movnti
push
mov
xchg
aas
pop
out
mov
fnstenv
xchg
jle
sahf
in
lahf
xor
pop
inc
lock
aam
dec
outsb
push
mov
push
sub
jnp
ds
sahf
jo
mov
jmp
push
or
ret
pop
adc
ja
push
inc
or
pusha
iret
cli
push
push
mov
xchg
fisubs
adc
xlat
insl
in
int3
xor
mov
cmp
dec
aas
imul
mov
mov
hlt
fsubrl
addr16
add
sar
mov
cltd
sti
into
sbb
inc
out
xor
mov
or
mov
mov
aaa
xchg
ror
std
pop
and
stos
xchg
movsb
insb
icebp
push
jp
pop
add
pop
mov
popf
sbb
xchg
shlb
mov
jle
mov
push
sbb
fwait
xchg
mov
add
or
imul
pop
shl
ss
test
dec
int
aas
mov
pop
sbb
add
sub
adc
mov
mov
xor
xchg
shll
fnstcw
mov
inc
fisubrl
push
mov
pop
inc
imul
pop
std
sbb
mov
xlat
lods
rcrl
dec
add
mov
pusha
psrlq
adc
xchg
cmp
roll
in
shrl
addr16
push
and
pusha
icebp
sbb
adc
aad
popf
cwtl
mov
adc
cld
pop
sti
scas
shl
or
sub
jmp
into
nop
pop
add
sar
push
lahf
call
arpl
sahf
cmp
push
cmp
adc
or
andl
dec
pop
adc
push
jno
and
mov
pushf
mov
or
popf
into
push
cmp
loopne
add
enter
xchg
jno
in
cmpsb
xor
mov
fs
pop
mov
insl
dec
scas
adc
pop
inc
aaa
lods
pop
scas
add
fiaddl
and
inc
mov
dec
fdivr
jno
scas
adc
pop
popf
sbb
pop
or
imul
jle
mov
call
jp
int
ror
push
xchg
pop
dec
out
fiaddl
aad
adc
std
inc
adc
mov
jno
cmpl
inc
mov
ret
shlb
jp
in
inc
jecxz
mov
js
mov
popf
push
inc
sbb
arpl
insb
mov
mov
add
test
sbb
push
popa
pop
bound
leave
adc
ja
sbb
xchg
sub
into
aaa
pusha
mov
pop
frstor
jo
clc
and
adc
xor
bound
xchg
mov
pop
in
and
push
adc
mov
xor
push
loop
movsb
fcmovb
lock
jne
cld
adc
in
push
outsl
xchg
inc
pushl
jno
je
lcall
ja
add
insb
nop
aas
imul
adc
add
out
xor
daa
mov
pop
xchg
add
sahf
and
pop
push
int
sbb
lock
xor
fcompl
ja
addb
sbb
in
popf
in
push
outsl
cmp
mov
add
stos
das
outsb
add
cmp
cmp
dec
xchg
imul
dec
pop
movsl
sbb
xchg
cmpsb
mov
mov
and
icebp
pop
sbb
and
jg
pushf
scas
rclb
xchg
push
das
pusha
stc
push
femms
fisubl
push
dec
xchg
jnp
int
dec
add
scas
push
add
mov
xchg
jg
ficoms
mov
ficoms
jae
or
fwait
scas
lock
div
xor
sahf
xor
clc
outsl
leave
fstpt
lods
lcall
mov
pop
adc
nop
fistl
lods
pop
pop
xchg
xlat
jge
mov
test
or
das
sbb
xor
loopne
xlat
push
imul
xchg
lret
cwtl
cmpsb
aam
xchg
shll
cmpsb
fistpll
push
lahf
mov
sbb
std
sub
inc
cs
fadds
pop
imul
cmp
jbe
and
xor
iret
outsl
adc
mov
pusha
jg
popf
jbe
adc
lret
fcmovu
ficompl
inc
mov
out
stos
call
loope
orb
mov
es
incl
scas
jns
or
cs
adc
pop
inc
roll
mov
leave
sbb
orl
stos
sbb
push
dec
cmpsb
mov
pop
jg
jmp
outsl
loopw
cli
andl
add
repnz
sub
or
in
mov
cmp
les
inc
mov
ja
and
pusha
sbb
sub
add
sbb
dec
divl
mov
mov
push
repnz
add
add
dec
sbb
hlt
hlt
pshufw
movsb
into
xchg
xchg
in
xchg
ds
aaa
push
lahf
pop
stos
ret
sbb
xlat
sub
push
mov
in
mov
and
notl
xchg
pop
pop
sub
adc
xor
out
push
addb
mov
test
inc
cmp
fbstp
mov
sbbl
adc
xchg
jle
nop
cs
and
sbb
dec
pushf
mov
sub
andb
mov
jo
push
push
cwtl
pop
cmp
pop
jae
outsl
push
xchg
add
xchg
inc
out
dec
mov
mov
ja
lahf
and
pop
and
aad
std
push
jp
or
add
mov
outsl
lds
daa
xchg
dec
popf
movl
test
push
jle
mov
cmp
sbb
insl
mov
dec
int
xchg
sbb
jmp
test
jae
insb
fimull
fwait
cs
cmp
pop
pop
faddl
cmpsb
fnstenv
test
call
pop
ret
fstpl
mov
mov
adc
sub
mov
jle
adc
xchg
inc
popf
xchg
insl
xchg
or
outsl
dec
sub
mov
mov
xchg
and
and
adc
xor
sbbb
fimull
fnstsw
test
fistpll
cmc
ror
sub
add
sbb
pop
into
xor
sub
inc
pop
jne
iret
add
rcll
adc
dec
jbe
xchg
jo
pop
mov
add
into
jno
adc
and
mov
fistps
mov
or
mov
inc
push
dec
pop
lcall
stos
in
mov
ret
mov
leave
mov
int
push
jne
repnz
decl
andb
jg
mov
sub
cltd
aaa
push
jle
mov
push
scas
cmp
dec
pusha
adc
xchg
mov
out
mov
cltd
mov
mov
out
pop
sub
sbb
inc
mov
xchg
shlb
sti
mov
sub
sbb
pop
pop
fmul
push
dec
test
aad
popf
faddl
popf
sbb
aad
or
imul
test
xchg
andb
sahf
add
sahf
movzwl
push
jmp
negw
push
adc
rclb
sub
jl
pop
inc
xor
and
imul
add
insl
xorl
mov
inc
cli
scas
mov
xchg
sahf
sbb
out
sbb
push
xchg
mov
lret
iret
mov
and
add
nopl
mov
mov
sbb
rcll
xlat
jo
xor
icebp
push
sbb
jno
jb
jmp
es
les
sub
xor
xchg
xor
bound
jle
int
adc
cmp
fadds
xor
movlps
aaa
add
adc
mov
cmp
mov
test
jmp
arpl
jae
into
test
add
out
or
pop
mov
popa
cmp
into
mov
push
pop
rcl
pop
sbb
stos
fisubl
sub
out
ds
adc
pop
pop
mov
push
xchg
aaa
add
push
mov
lock
fdivrs
cmpsb
lahf
jno
and
pop
xor
sbb
pop
add
cmp
jp
push
jae
sahf
incb
loop
dec
lahf
popf
mov
fbstp
mov
js
push
cmp
cmp
stos
ret
popf
ret
push
cmp
stos
js
mov
inc
mov
cmc
sti
pop
mov
arpl
psllq
inc
cltd
inc
outsl
sub
sbb
pop
out
mov
mov
inc
insb
fisubrs
push
jo
mov
popf
mov
mov
repz
xor
aas
in
jg
xor
jp
bound
sbbl
mov
addr16
pop
jns
clc
out
out
pop
aad
scas
ds
fidivs
sahf
sub
sbb
lar
and
nop
insl
cmc
popf
ret
fstps
pop
dec
popa
popf
outsb
xor
inc
adc
sbb
sub
mov
sbb
fisttpl
aas
xor
iret
push
adc
add
fnstcw
or
add
add
sahf
mov
jge
mov
jne
mov
push
lds
jne
push
and
in
jnp
dec
sbb
inc
and
insb
add
inc
icebp
daa
popf
int3
outsl
mov
xchg
scas
push
jnp
push
push
xchg
sbb
pop
cmp
xor
ret
adcb
add
dec
mov
cli
cmp
mov
js
sbb
cwtl
ss
push
fcoml
sub
clc
jbe
mov
ret
add
xchg
insb
outsl
and
dec
jae
or
notl
popf
sub
add
sbb
test
inc
or
xchg
sub
push
scas
xchg
mov
jno
stos
pop
inc
jne
orl
loopne
mov
xchg
cmp
jge
sbb
pop
rcrl
pushf
mov
mov
stos
imul
fisttpll
xor
outsb
push
adc
adc
in
fadds
sub
dec
das
shll
jg
adc
out
std
icebp
xor
fidivs
mov
ret
jle
adc
iret
inc
lret
cmp
inc
popa
test
or
jp
xor
repz
xchg
loopne
xchg
jno
outsb
jno
gs
movl
mov
shr
out
sbb
jo
mov
mov
push
pop
fwait
push
push
jp
dec
or
dec
mov
sbbb
aas
mov
scas
pop
shrb
pop
pop
popa
jmp
xor
and
out
mov
mov
inc
xchg
add
hlt
call
adc
jp
inc
add
sub
sbb
jge
and
or
cmp
aam
push
lock
inc
mov
lods
inc
xchg
and
xlat
int
and
neg
out
nop
fdivrl
filds
cmp
pop
push
sti
mov
pop
comiss
push
push
mov
xchg
sbb
mov
cmpsb
adc
xchg
je
dec
dec
mov
jl
xlat
cmp
sub
xchg
sbb
fadd
mov
xor
out
data16
mov
aam
pop
pop
mov
fsubl
imul
sbb
int3
mov
mov
xor
or
in
jbe
jnp
arpl
popf
add
in
pop
cmovnp
test
scas
xchg
or
push
loopne
daa
cmpsl
pusha
jge
call
sbb
add
and
jge
cmpb
sti
add
repnz
add
jno
fmuls
sub
scas
dec
clc
jnp
sbb
loope
and
mov
add
not
pop
dec
jbe
sub
pop
sub
fdivrl
cmp
rcrb
ret
mov
push
ret
pop
add
add
pop
pushf
cmpsb
mov
push
pop
pop
add
mov
mov
stc
mov
lahf
cmp
cs
hlt
imul
mov
add
clc
pushf
mov
jle
addb
mov
movsb
xchg
fstp
mov
int
or
and
ds
outsb
sub
out
and
mov
fstpt
aas
aad
push
int
inc
mov
sub
dec
ror
push
xchg
pop
cmp
jl
clc
test
clc
mov
sub
stos
sarl
cli
loop
sbb
push
cs
sbb
mov
fidivs
gs
add
and
fsubrl
ljmp
cwtl
jb
lds
out
pop
jno
pushl
nop
pushf
xor
in
push
sahf
fistpll
es
mov
rcr
cmp
in
jns
fisubs
test
dec
push
jle
loopne
orl
ret
fwait
adc
js
adc
xorb
xchg
aas
test
sbb
and
push
cli
out
mov
mov
mov
push
xchg
test
push
add
int3
iret
xchg
jne
add
std
fwait
mov
mov
cmp
inc
dec
mov
mov
or
mov
enter
sti
inc
insl
div
mov
push
sbb
add
sti
xchg
add
fstps
cmp
adc
sub
lea
sbb
or
std
orl
clc
cmpsl
mov
sbbl
cmp
or
imul
sbb
pop
inc
sbb
push
cmp
adc
outsl
fildl
xlat
testb
cmp
sub
and
nop
fmuls
fwait
addr16
out
adc
scas
adc
dec
sbb
add
pop
insl
jne
pop
das
mov
xchg
cwtl
outsb
jne
popf
mov
sbb
cmc
jo
or
push
and
mov
inc
aaa
rcrl
mov
inc
push
loope
push
xchg
adc
js
add
loop
lods
nop
push
je
pop
dec
scas
divb
xor
aad
scas
in
movntps
lods
mov
xchg
sahf
pusha
jns
jno
ds
fimull
ds
jb
sub
dec
inc
scas
adc
orl
jbe
fcmovnb
imul
adc
negl
mov
jle
jp
jmp
xor
pop
inc
push
push
add
sbb
lea
push
pop
ss
repnz
insl
pop
add
mov
ljmp
jno
xor
into
das
or
jmp
pop
cmp
add
mov
cmp
lahf
mov
xchg
in
faddl
sbb
xor
dec
fistps
test
xchg
xchg
into
push
fstpl
inc
sbb
xor
loopne
in
data16
cld
outsl
aaa
adc
inc
lods
sbb
pop
add
into
push
push
pop
and
jp
fisttpl
xchg
and
in
xchg
pop
addr16
or
xchg
gs
cld
int
imul
sti
les
loopne
sbb
xor
or
mov
mov
or
sub
xchg
dec
int3
xchg
dec
sbb
push
push
mov
std
mov
incb
dec
rcpps
stos
out
sbb
pushf
jbe
push
push
shll
daa
push
add
test
jo
sar
mov
mov
sti
fwait
pop
lret
and
ja
push
pop
in
sub
xlat
add
jle
sbb
cmc
lret
sbb
insb
and
xor
push
push
repz
outsb
push
adc
adc
lods
insl
jnp
mov
lret
mov
leave
inc
xchg
cmpl
inc
inc
sbb
fwait
cmp
cmp
mov
mov
xor
cmc
cltd
inc
rcrb
insl
imul
adcl
xor
or
dec
outsb
jo
add
add
jl
sbbb
mov
mov
cmp
dec
cltd
repnz
cmp
or
sti
sarb
and
pop
dec
sub
push
rcll
lock
fnstenv
cmp
jmp
hlt
loop
frstor
in
jnp
and
dec
lds
pop
addr16
sub
add
pop
add
push
test
enter
repnz
ret
je
bound
xor
pop
mov
push
out
pop
iret
adc
ja
fucom
inc
xchg
out
pop
mov
xorb
mulb
push
jo
xchg
push
decb
popf
add
out
mov
adc
sub
add
mov
adc
push
cltd
xchg
loopne
add
hlt
mov
inc
cmc
rcrb
mulb
pop
in
pop
int3
push
or
roll
xchg
loop
iret
gs
mov
push
rol
pop
fstl
mov
sub
in
mov
push
pop
out
ret
fwait
dec
mov
push
mov
out
and
gs
lahf
xchg
fistpll
scas
pop
ds
aad
lock
fwait
jno
cmc
out
adcl
mov
outsl
inc
pop
ds
in
rcr
mov
xchg
out
inc
add
ret
iret
and
lcall
dec
pop
adc
sbb
inc
add
cmpsb
aaa
mov
sub
xlat
mov
push
popf
aam
mov
imul
jbe
sbb
add
add
fdivl
sar
xchg
je
or
bswap
xchg
cmc
mov
aad
sbb
pop
push
ficoml
sarl
jg
jo
ffree
cli
xchg
xchg
jo
loopne
mov
dec
ja
add
nop
cmc
pop
jno
movsl
push
sbb
or
jo
hlt
mov
dec
adc
fwait
jne
push
in
cwtl
add
lock
pop
push
scas
in
ss
psraw
or
and
sbb
or
or
cmc
out
xlat
aaa
mov
add
movsl
cltd
lcall
cmp
ret
daa
add
je
jne
jmp
ljmp
xorl
repnz
out
negb
sub
faddl
mov
mov
mov
rcrb
xor
jnp
shl
imul
dec
jle
inc
leave
mov
aaa
loope
pop
xor
add
ja
mov
imull
xor
adc
mov
mul
sbb
cmp
pop
push
outsl
pop
mov
adc
adc
fwait
scas
inc
cli
cld
pop
push
sbb
or
jns
mov
mov
xlat
xchg
nop
test
dec
out
pop
cmc
notl
test
cs
mov
xor
mov
adc
mov
push
mov
shlb
fdivrl
or
adc
les
lods
test
dec
mov
xor
push
pop
lods
lcall
add
add
jl
inc
or
cmp
pop
dec
push
pop
outsl
push
pop
frstor
mov
or
stc
push
fdivrs
pop
ss
mov
int3
loop
push
mov
adc
fdivr
jle
flds
pusha
mov
jno
sbb
jmp
sbb
push
sbbl
dec
sub
aad
std
loop
jmp
pop
in
repnz
stc
cwtl
and
leave
out
dec
push
lahf
daa
push
sub
jo
add
stc
sbb
ret
popa
push
or
insl
sahf
orl
pop
aad
ja
frstor
je
ret
cld
add
shlb
xchg
je
out
shl
adc
jg
and
add
hlt
sarb
frstor
test
jp
and
cltd
mov
les
loopne
jp
cmp
outsb
push
jp
jbe
and
mov
lret
add
push
cmp
jno
xchg
call
and
sbb
mov
fstps
out
mov
inc
push
aad
push
mov
mov
adc
ss
stc
ret
fdivs
leave
loopne
xchg
mov
mov
mov
pushf
and
xor
pop
xor
jge
jmp
jmp
or
sbb
sbb
sub
outsl
in
lahf
paddusw
shrb
dec
rolb
pop
sub
push
xchg
mov
loop
sbb
cmp
mov
loop
out
jp
or
pop
lahf
push
cltd
and
arpl
out
test
push
sbb
lods
popa
cs
or
add
test
shlb
xchg
mov
movsl
out
inc
and
hlt
mov
mov
and
mov
sbbl
addr16
add
leave
sbb
xchg
movsl
fisttpl
and
pop
stos
adc
les
out
mov
mov
cwtl
add
push
lret
pop
or
add
repnz
mov
mov
sbb
call
imul
popf
add
lahf
jo
popf
mov
in
pop
repz
xor
clc
ss
jo
or
push
jle
hlt
inc
fnstcw
gs
bound
xor
testl
cmp
popa
pop
inc
lock
ficomps
jecxz
adc
mov
outsb
sbb
sti
sub
xor
dec
sbb
sarb
mov
nop
xchg
ret
shlb
pop
andps
sbb
aam
xchg
push
cmp
push
sahf
adc
add
dec
insl
xor
xchg
cmc
dec
int3
xchg
outsb
mov
add
out
pushf
add
in
sub
sbb
insl
rorl
leave
sbb
je
adc
xor
rorb
and
cwtl
cltd
mov
fidivs
xchg
sti
mov
sub
jge
pop
outsb
mov
mov
sbb
popf
mov
in
mov
jne
mov
mov
sbb
xchg
pop
lahf
or
and
cmp
jle
sbb
insl
mov
imul
js
mov
out
pushf
adc
push
sahf
dec
nop
add
sahf
es
shrl
nop
sbb
and
inc
sbb
mov
sbb
nop
sbb
fwait
push
sbb
xchg
pop
jmp
std
ljmp
push
fimuls
add
ljmp
jge
xor
or
outsl
insl
xchg
test
pushf
cmpsl
mov
push
sbb
mov
push
movsl
mov
pop
jge
mov
mov
iret
arpl
jle
mov
nop
pushf
fldcw
loop
or
divps
inc
je
mov
cmp
push
lahf
dec
daa
pop
xchg
loope
cltd
dec
mov
aad
repz
xor
sub
jbe
jle
and
xchg
mov
aaa
jae
sub
adc
aaa
aad
push
repz
jl
dec
shll
xchg
sbb
adc
fldl
lcall
mov
adc
sbb
notl
leave
ds
notl
dec
sahf
stc
push
xor
push
lock
cmp
add
push
and
mov
std
fiaddl
cs
cmp
mov
mov
inc
stos
adc
stos
mov
sub
sub
pop
out
in
push
or
jge
nop
xor
fdiv
xor
cmpsl
xchg
push
out
mov
mov
push
mov
xchg
and
scas
add
iret
dec
movsl
popa
pminub
mov
xor
pop
mov
loope
pop
sub
xchg
pop
mov
xor
sub
xor
nop
dec
dec
stc
push
xchg
cmp
push
stos
sahf
cmp
in
movsl
mov
mov
sbb
insb
or
repz
jle
icebp
mov
jo
add
rclb
test
sub
mov
insb
aam
or
bound
or
stos
push
cmc
mov
sbb
ds
pop
cltd
out
sbb
lcall
push
mov
push
fwait
leave
lahf
lahf
mov
js
into
pusha
and
gs
cmp
in
jmp
ss
negl
xchg
ds
pop
cltd
cmp
inc
fsubrp
fistps
mov
lea
sbb
ss
add
cmpsl
pop
call
enter
push
mov
jmp
and
xor
inc
stc
fwait
jnp
bound
ret
push
mov
push
fstpl
xor
mov
push
fwait
imul
repz
or
lret
pop
push
aam
adc
int3
sub
dec
repnz
xor
in
mov
out
and
pushl
xchg
pop
sti
jnp
mov
push
scas
add
jmp
jo
sub
cltd
xchg
repz
lret
xchg
cli
push
xchg
xlat
pop
xchg
in
push
mov
add
mov
ret
or
lahf
push
sarl
repz
push
push
std
lahf
pop
or
add
pop
or
stc
jmp
fistl
inc
xor
sti
add
xchg
sub
jmp
fstpl
jbe
mov
sub
cs
rcr
sub
jp
mov
xchg
cs
sub
jae,pn
xor
lock
adc
lcall
cltd
cld
aam
stc
dec
or
fwait
jecxz
sub
popa
cmc
sbb
xchg
jmp
clc
rcr
mov
adc
pushf
leave
fistpl
loopne
dec
dec
adc
cmp
jecxz
fisttps
adc
lea
xchg
push
xchg
out
adc
mov
xor
mov
jns
xor
pop
adc
lods
and
pop
sub
or
jle
mov
aas
push
sti
and
adc
mov
stos
cmc
push
sbb
lahf
add
xor
xchg
dec
xchg
loop
xchg
nop
repz
adc
loopne
pop
xchg
leave
mov
xchg
or
xchg
cld
add
cmpb
pop
fistpl
sbb
jo
push
mov
push
xchg
dec
mov
cmpsb
repz
cmp
fsubl
sub
int
cltd
push
xlat
pop
dec
lea
add
push
lcall
js
out
mov
jns
inc
dec
and
sbb
inc
pop
mov
inc
add
or
jmp
push
out
cmpb
add
xor
leave
mov
dec
repnz
scas
fcmove
and
rcll
cmp
fwait
jo
or
cmp
xchg
and
stos
sub
lock
das
nop
pop
add
pop
outsb
mov
mov
mov
sbb
or
xchg
sar
jb
adc
or
pop
sub
mov
mov
out
aas
sbb
leave
rorb
push
flds
sbb
fldcw
aad
call
sbb
cmpsb
fsubrl
fmuls
or
mov
and
adc
adc
in
adc
cmp
nop
push
sub
xadd
push
sbb
xlat
pusha
mov
dec
adc
mov
cmp
xchg
xor
repz
jns
sbb
sti
or
std
jle
iret
adcl
aaa
sbb
sahf
sub
sbb
xlat
divl
xor
mov
stc
testb
arpl
push
pop
mov
outsl
xor
cltd
sub
push
and
adc
mov
sub
pusha
add
xor
jo
mov
xchg
ljmp
je
les
out
mov
xchg
scas
adc
sub
aad
xchg
out
std
fisttpll
ja
or
push
loope
pop
push
repnz
movsl
xchg
adc
repz
add
xchg
daa
or
dec
push
jmp
jecxz
outsl
stos
movsb
mov
xlat
setbe
bound
sbb
gs
mov
mov
add
and
cmpsl
movsl
or
cmc
xor
adcl
cmc
movsb
icebp
les
sub
and
aaa
bound
sub
imul
aaa
sbb
popf
scas
dec
stos
test
mov
out
fstps
pusha
mov
sti
jle
popf
stos
jns
ret
adc
xor
stos
aaa
mov
lcall
and
mov
push
std
loopne
ss
fisubs
and
mov
adc
adc
sub
sbb
sbb
xlat
mov
int3
fwait
je
outsl
push
cmp
xlat
mov
mov
shll
fldenv
xchg
cmp
pop
or
rcrl
xchg
mov
push
cld
push
push
lcall
hlt
cmp
pop
xchg
lods
mov
add
dec
push
int3
push
lea
adc
adc
out
cs
je
mov
inc
or
xorl
xchg
sub
out
loopne
sti
jge
in
hlt
push
dec
or
xchg
xchg
jge
fsts
or
xchg
fwait
inc
xchg
push
pop
adc
mov
jmp
sarb
adc
inc
xlat
pusha
insl
nop
mov
ret
addr16
xchg
into
adcl
pop
inc
inc
sti
pop
add
pop
sub
addr16
sub
and
pop
lds
mov
out
imul
fdivs
insb
adc
ja
xor
pop
mov
repz
push
bswap
iret
mov
hlt
loopne
fdivrs
fcomps
aam
sbb
or
in
adc
dec
dec
std
xlat
xchg
cmp
iret
arpl
mov
psrld
cli
pop
xor
arpl
cltd
xlat
cmp
push
stc
adc
or
xchg
nop
sti
and
jae
cwtl
repz
xlat
clc
into
xchg
or
leave
adc
sbb
adc
adc
fwait
sti
shlb
notb
xchg
fdivr
fidivrs
lret
fidivl
sbbl
jnp
jle
std
fcmovu
and
mov
cmp
push
sbb
rcll
push
andb
fstl
ror
sahf
adc
adc
mov
imul
dec
mov
adc
jmp
js
and
mov
xorb
orl
push
push
pushf
sbb
xor
pop
sti
insl
sbb
push
add
outsl
out
mov
push
sub
or
aas
xchg
mov
xor
mov
leave
ficomps
mov
xchg
js
xchg
loopne
pop
pop
push
xor
jb
repz
jle
xchg
adc
ss
test
pushf
mov
xchg
cmp
xchg
jo
jne
and
cld
jns
push
inc
add
or
cmp
out
fstpt
fsts
lahf
cmc
adc
pop
js
call
push
sbb
insl
jge
cmpsb
and
push
loope
sub
rolb
and
and
inc
jle
cmp
cmpl
shrb
cmp
stos
push
out
insb
adc
cmp
cmp
xchg
outsl
cmp
ljmp
mov
sbb
mov
sbb
je
adc
mov
dec
push
push
sbb
pop
xlat
fwait
ss
xchg
mov
xor
sub
cld
loope
add
repnz
ljmp
out
daa
divb
inc
cld
rcrl
xor
scas
xchg
fidivs
add
testb
sub
orl
mov
fisttpl
mov
std
sbb
xor
xchg
dec
cmp
or
fcoml
popa
xor
sbb
dec
outsl
cmovb
and
pop
out
test
movsb
rorb
pop
mov
mov
fmuls
inc
nop
jle
sub
jecxz
sbb
push
dec
xchg
or
push
insl
adc
arpl
fildll
es
fistl
jecxz
dec
fists
xchg
pop
jle
cmp
sbb
xchg
cs
pop
cwtl
xchg
xor
sbb
idiv
test
inc
and
dec
cwtl
pop
movzbl
xor
popf
mov
in
pop
jno
mov
xor
mov
push
ret
testl
aas
sbb
jno
pop
mov
xor
cltd
sbb
ds
jl
sbb
push
pusha
dec
cmp
adc
jo
push
pop
dec
in
xor
add
inc
pop
mov
rcl
pop
sti
push
lock
bound
sbb
jle
gs
mov
pop
mov
icebp
sbb
pusha
jp
xchg
pop
ret
cmp
aad
aas
or
fadds
ds
mov
add
add
out
fldenv
cmc
movsb
insl
push
add
mov
cmp
mov
popf
aas
cltd
inc
aaa
ret
fnstsw
out
xlat
fwait
jno
in
pop
iret
lcall
das
lahf
and
adcb
xorl
roll
push
sbb
sbb
insl
leave
call
mov
sub
mov
sbb
sub
inc
mov
cmp
xor
pop
mov
decb
xor
jnp
loope
cwtl
dec
xlat
mov
push
xor
adc
dec
movsb
mov
jo
addr16
fs
cmp
sub
xchg
mov
ret
das
dec
popf
pop
scas
mov
push
clc
pop
into
stc
jecxz
push
outsl
psubusb
push
int3
and
dec
mov
out
mov
sub
jp
cmp
adc
sarl
sbb
in
scas
mov
dec
dec
pop
push
nop
push
mov
leave
lock
cmp
xor
lcall
push
flds
std
pop
mov
cmp
jnp
xchg
sti
cmp
hlt
es
adc
call
cmpsb
fiadds
jp
hlt
pop
xor
repz
gs
xchg
jl
push
add
push
seta
xchg
repz
xchg
adc
out
add
cwtl
add
xchg
sub
adc
mov
lods
cs
scas
xlat
sub
or
mov
ret
sti
imul
add
pop
jmp
sbb
jnp
cmp
sbb
fstpt
test
shll
jno
lcall
sahf
dec
inc
sti
push
jno
sarb
xchg
sbb
xor
rcll
pushf
inc
jb
sbb
pop
dec
xor
xor
mov
xchg
sbb
xor
cltd
fisttpl
sub
xlat
mov
jno
push
or
xor
fbstp
pop
xor
cmp
loope
icebp
sbb
enter
fidivrl
repnz
sub
loopne
mov
mov
mov
aaa
ds
and
adc
inc
jge
mov
sbb
fwait
xadd
stos
jnp
xchg
fld
mov
jae
xlat
push
mov
push
fwait
jnp
mov
sbb
sbb
add
xor
lods
mov
fwait
push
pop
mov
outsb
sub
xor
movsl
fmuls
icebp
xlat
mov
xchg
push
mov
or
pop
std
xchg
lret
mov
xchg
inc
iret
push
sbb
cmp
sti
ficompl
insl
xor
insb
xor
xchg
cmp
scas
insl
xorb
sbb
mov
add
dec
xlat
mov
push
mov
cmc
lods
push
jl
mov
jne
adc
sbb
mov
xlat
insb
fs
aaa
ja
ficomps
das
adc
cmpsl
call
enter
pop
xor
popf
aam
xchg
sbb
in
pushf
out
xor
add
jo
lods
lea
mov
mov
dec
pop
push
out
cld
and
mov
ljmp
and
xor
push
xor
scas
push
push
adc
int3
movsl
and
mov
popa
jmp
jmp
dec
iret
push
sbb
repz
jns
popf
cmp
repz
orb
mov
leave
xchg
movsl
dec
sub
shll
mov
mov
cwtl
sbb
insb
xchg
sub
push
xchg
pop
push
cmp
pop
pop
in
jae
jg
inc
add
cli
jmp
inc
loop
shrl
pop
and
insl
sub
sti
mov
sbb
test
cld
cltd
add
in
sbb
and
lret
cmp
iret
mov
lock
pop
xchg
add
aam
out
jmp
in
pushf
adc
fbld
cmp
jmp
push
push
mov
aad
mov
sub
push
pop
jbe
orl
cmp
xchg
pop
rcr
push
push
std
cmp
ss
xchg
cmp
adc
aaa
push
in
cmp
mov
push
aas
hlt
ret
insb
out
addr16
popf
cmpsl
cmpsb
call
push
xlat
inc
sbb
mov
pop
faddl
mov
fs
inc
or
insl
jnp
cmp
pop
cmc
xor
or
or
push
gs
ret
cmpsb
jo
pop
into
cltd
aam
cld
push
rcrb
notb
das
mov
cmp
sbb
xlat
jle
lods
daa
pop
adc
push
aaa
daa
insb
cmp
mov
jge
lock
mov
mov
fnsave
add
insl
push
fists
pop
out
push
jnp
mov
mov
out
jecxz,pt
mov
sti
push
pop
cld
adc
jp
adc
insb
push
sbb
and
push
dec
scas
mov
aas
sub
push
std
push
jmp
or
outsb
push
sub
lahf
scas
es
or
jno
adc
popa
push
and
add
sbb
push
cmp
or
sbb
insl
cmc
loop
or
cmp
push
jns
mov
sahf
cmp
sahf
push
cltd
jp
leave
call
andl
sbb
cmpl
cmp
dec
loopne
insb
outsl
sbb
or
sbb
xlat
cli
cli
loope
setnp
xor
hlt
stc
into
nop
push
sarb
mov
xor
xchg
push
shr
sbb
jmp
stc
pop
mov
leave
out
jb
xchg
into
adc
pop
mov
cs
test
cltd
sahf
pop
mov
ljmp
mov
hlt
test
out
xchg
stos
clc
insb
inc
push
push
mov
sahf
push
lcall
dec
add
lcall
xlat
icebp
rcl
mov
dec
pop
xchg
cltd
sbb
pop
mov
push
movsl
or
jmp
cld
xchg
imul
add
xchg
lcall
sbb
sub
neg
push
jecxz
outsl
cli
add
adc
pop
jno
jae
aam
test
adcb
and
xor
fwait
sub
push
mov
pop
dec
ss
fistpll
jno
fimull
sbb
fwait
mov
mov
cltd
pop
cmpsb
push
out
jp
out
and
fstl
mov
xlat
push
mov
xlat
push
push
clc
es
cli
xlat
pop
cwtl
pop
test
in
test
cmp
mov
ja
insb
mov
popa
ja
and
or
adc
loop
test
adc
cmp
jmp
dec
loope
adc
jno
push
clc
jmp
mulb
cmp
stos
ds
ss
add
fstpl
and
je
pop
into
sar
xor
fisubl
jl
shlb
sub
inc
xchg
inc
add
scas
jno
cmp
negb
cmp
lret
xchg
sbb
cmp
inc
pop
jns
fstpt
sti
sbb
sub
pusha
aaa
pop
cmp
add
cs
and
mov
lock
fwait
push
xchg
xchg
sbb
mov
xlat
aas
repnz
jb
adc
stc
mov
jb
ss
movsb
call
mov
enter
ds
adc
rcrl
xlat
es
inc
fdiv
push
repz
lret
imul
mov
mov
xchg
sbb
add
addb
push
jge
cmp
mov
bnd
stos
mov
mov
sub
std
cld
mov
mov
int3
lcall
mov
aas
mov
es
cmc
jp
fnstsw
insb
adc
push
add
add
enter
adc
cld
ficompl
inc
fsts
std
cli
imul
scas
xchg
or
and
or
dec
jge
in
iret
inc
aam
gs
cwtl
imul
hlt
ret
xlat
push
or
outsl
sub
std
popf
fistl
mov
aad
jbe
in
sbb
add
and
xorl
jge
sbb
lret
pop
inc
inc
repz
push
xor
ret
jae
push
adc
mov
add
sti
mov
mov
lods
cmp
add
sub
rol
add
jmp
inc
sbb
out
push
sti
in
es
xchg
cmpb
jae
pop
enter
cmpsb
out
out
mov
push
or
or
push
enter
imul
cmp
push
mov
cmp
inc
push
sub
cmp
fwait
idivl
or
adc
push
dec
pushf
fwait
adc
mov
out
pop
inc
and
xchg
sbb
jp
in
call
mov
mov
xchg
and
inc
rclb
mov
test
sahf
add
int
push
push
out
inc
fistpll
ret
dec
pop
aaa
fsin
lahf
cltd
sbb
push
sti
ja
ret
mov
sbb
xchg
mov
push
sbbb
adc
js
mov
or
sahf
sti
les
xor
mov
sub
lahf
mov
subl
popf
mov
adc
push
fcomps
add
jns
xlat
mov
mov
cwtl
in
mov
inc
subb
xchg
sbb
jb
fidivs
jae
push
jno
shr
xor
push
mov
inc
sbb
cmp
or
pop
jb
rol
scas
jle
xchg
pop
pushf
fisubs
test
pop
push
stos
sbb
out
xor
push
bnd
enter
pop
notb
aad
rcll
xchg
lds
lahf
or
insl
and
int
imul
xchg
push
fistpl
iret
push
jg
xor
into
insb
cmp
mov
sbb
notl
xchg
ljmp
aam
push
adc
mov
into
push
adcb
jge
movsb
pop
notl
mov
jg
push
cmpsl
in
mov
mulb
aam
inc
mov
xor
or
repz
ret
sbb
push
loopne
into
push
xchg
push
jle
sbb
adc
xchg
pop
adc
cwtl
mov
adc
and
or
push
xchg
negl
xor
in
fisttpl
xchg
or
push
decb
fldl
fwait
add
pop
in
adc
andnps
daa
push
leave
fwait
outsl
mov
cld
xchg
sbb
fldl
sub
push
loop
add
inc
insl
xor
add
bound
push
push
xor
int3
or
test
xchg
shl
push
adc
pop
mov
push
inc
xchg
fwait
adcl
insb
loop
loopne
pop
inc
or
push
pop
pop
pop
adc
xchg
xchg
pop
mov
aas
imul
and
arpl
mov
pop
pop
and
xchg
cltd
sahf
fstps
ret
cmp
and
cmp
mov
pushf
pop
enter
lock
pop
sbb
sbb
loope
out
aad
jae
aas
xchg
ret
adc
pop
fldenv
dec
mov
jg
xor
xchg
cwtl
popf
lods
adc
iret
dec
inc
push
dec
mov
or
enter
aad
test
cld
sub
int
mov
add
xchg
xchg
call
push
movsb
stos
adc
jno
rcrl
lds
loop
pop
fistpl
mov
movsb
dec
fnstenv
fistpl
xchg
jle
mov
xchg
xchg
xchg
ja
pop
mov
xchg
inc
sahf
mov
shll
fstl
mov
pop
and
sbb
add
cli
sbb
je
fcmovnu
mov
jb
adc
aam
movsl
addl
jle
cs
repz
xlat
pop
xchg
cli
xchg
fwait
dec
xchg
out
cltd
lea
push
jp
adc
rcll
fnstcw
or
push
fldl
push
clc
repnz
loopne
sbb
sbb
and
mov
mov
push
mov
vmread
pop
dec
inc
push
into
popf
or
fs
mov
cmp
jge
test
stos
jp
add
or
idivb
inc
mov
mov
cmp
pushf
in
xchg
inc
pop
loopne
push
std
sbb
xchg
jmp
sbb
cmp
notb
rorb
sbb
mov
mov
pushf
pop
lcall
fwait
mov
mov
bound
add
sub
xchg
jg
fidivl
pop
mov
push
pop
add
push
cltd
xchg
enter
xchg
cmp
or
lret
aam
adc
or
aas
std
pop
stos
push
sbb
xchg
mov
je
adc
jmp
pop
adc
xadd
scas
push
pop
shll
or
cmc
lcall
inc
add
add
dec
pop
sub
mov
ja
ljmp
pop
sbb
invd
sbb
sbb
ss
cli
fisubl
in
inc
imul
in
sbb
fisubrs
into
push
pop
mov
in
inc
gs
jb
hlt
inc
push
sbb
pop
adc
inc
arpl
lcall
scas
bndstx
cwtl
sbb
in
pop
sub
mov
jle
rorl
fnstcw
jle
adc
sub
repnz
mov
push
int
xor
fisttps
cmp
adc
xor
pushf
xor
pop
jge
data16
pop
pop
dec
pop
lahf
jl
in
jp
push
cli
jbe
mov
xchg
in
push
mov
ja
pop
mov
notb
insl
add
mov
roll
sti
or
fsubrp
scas
pop
mov
mov
mov
jecxz
push
cmpl
cltd
push
and
cmp
int
jecxz
pop
lods
jg
lahf
mov
cmc
repnz
je
pop
ja
in
jg
or
lret
aas
pushf
call
popf
xchg
sub
call
cmc
popf
fwait
pop
hlt
fs
lahf
shl
jle
shll
xlat
sahf
sub
push
mov
mov
sti
pop
out
mov
in
jp
mov
xchg
fwait
cmp
xchg
inc
sbb
cmp
pop
mov
push
cmp
mov
xchg
inc
xchg
or
aaa
test
pop
xchg
sbb
jecxz
xlat
sbb
shlb
adc
fnstcw
cmp
clc
sbb
xlat
mov
add
aaa
pop
not
mov
add
ss
cmc
aad
xchg
fbstp
xor
adc
popf
pusha
loope
scas
ret
fidivs
rcl
and
mov
xor
pop
fildll
insl
loopne
inc
sbb
in
push
add
iret
pop
in
jg
inc
adc
loop
jne
fimuls
sbb
add
push
out
cmp
inc
mov
fildl
sbb
jmp
ret
sbb
jge
fistpl
mov
jp
push
or
loope
and
rcr
or
add
mov
pop
inc
daa
sbb
mov
push
sbb
lahf
ds
fbld
loop
push
sbb
lret
jno
dec
js
out
scas
and
push
and
mov
push
fmuls
pop
outsb
insl
inc
mov
aad
lcall
or
add
xchg
adc
jp
or
jne
jnp
ret
inc
sarl
je
aad
scas
ret
mov
cmpsl
test
push
rcll
mov
pop
test
xor
cmp
mov
push
loop
call
mov
in
mov
xchg
sub
xchg
and
sub
lret
test
sahf
sbb
sbb
inc
imul
pop
scas
popf
insl
mov
mov
push
sbb
mov
je
sbb
cmpsl
mov
idiv
xchg
push
ljmp
sbb
dec
std
mov
clc
ret
mov
leave
aam
jne
div
xchg
push
popa
mov
rcrl
xor
mov
sub
out
sub
enter
add
mov
sahf
cltd
mov
or
add
lods
stos
add
push
repnz
mov
ja
ja
mov
xchg
sbb
sub
addl
cltd
andl
rcrl
outsl
dec
les
xor
mov
cmpsl
pop
add
xchg
inc
std
cmpsl
mov
cld
adc
pop
mov
push
and
mov
loope
sahf
test
in
push
pop
das
enter
push
push
ja
jnp
mov
and
jnp
mov
xor
cmp
inc
jmp
xchg
lahf
mov
xor
inc
aas
push
xchg
out
pop
sahf
sbb
and
add
mov
fdivr
orl
std
sti
ds
in
sbb
cmp
mov
stos
inc
push
inc
mov
pop
mov
xchg
cmp
mov
push
push
push
adc
je
enter
add
xchg
pusha
or
sub
std
mov
fwait
cmpsl
sbb
pop
inc
inc
into
mov
cmp
divb
push
mov
into
sbb
xlat
and
fwait
jl
rcr
push
jmp
xchg
test
xchg
or
mov
push
lcall
pop
jmp
sbb
push
add
xchg
and
cmpsl
ljmp
out
inc
inc
pop
mov
add
out
ret
push
sbb
pop
mov
add
add
mov
sbb
sbbb
mov
pop
mov
sahf
xor
test
cltd
ret
pop
sbb
push
jns
lods
ja
and
mov
jae
sbb
push
push
inc
pushf
sub
mov
frstor
add
sbb
jb
es
fnsave
stos
test
sbb
adc
cmp
mov
sbb
mov
push
mov
or
cs
inc
dec
mov
imul
pop
fistl
out
int3
adc
lcall
push
hlt
pop
jp
xlat
pop
leave
sbb
xlat
mov
ret
pop
clc
sub
adc
xor
mov
xchg
pop
cltd
push
push
dec
sti
mov
rcll
pop
loopne
xchg
mov
xor
sub
mov
faddp
lock
pushf
mov
imul
fwait
inc
add
sub
test
leave
lcall
and
pop
mov
sub
jnp
cltd
sbb
imul
sbb
das
sub
sbb
cmp
adcb
stc
cmpsl
mov
adc
sahf
mov
lcall
jp
cmp
out
sbb
add
xor
fidivl
xchg
cltd
push
sub
xchg
rcll
xchg
movhps
mov
mov
mov
inc
dec
xchg
fidivrl
add
sbbb
adc
test
rolb
sbb
and
cmp
mov
fnstsw
sahf
in
push
xor
and
jmp
xchg
jecxz
mov
xor
ds
sub
mov
movsbl
in
jg
cmp
push
pusha
fdivrp
mov
xorb
sbb
lcall
dec
dec
sti
call
adc
jle
in
shlb
cmc
push
xchg
popf
jl
dec
push
sahf
cmp
cmpsl
movsb
mov
xchg
jg
and
jge
lcall
jb
pop
in
pop
lcall
add
adc
out
jne
xor
xchg
add
data16
dec
push
lret
sbb
mov
iret
pop
adc
daa
ja
lcall
xchg
fisttpl
enter
push
cltd
inc
sti
cmp
sbbb
negl
mov
clc
pushf
push
sbb
fwait
enter
nop
in
lea
jno
into
xlat
xchg
cli
jno
stc
adc
sbb
mov
mov
push
jns
mov
jecxz
xchg
negb
and
cld
nop
sbb
insb
not
lcall
cmp
cmp
out
and
jg
std
mov
das
leave
pop
mov
push
push
fiadds
mov
popf
daa
and
add
fisubs
pop
push
xlat
sbb
jl
jnp
cwtl
dec
fwait
scas
enter
and
push
cmp
jnp
shlb
xchg
insl
fistps
inc
push
push
iret
mov
pop
mov
mov
push
mov
mov
mov
sbb
push
std
ja
add
in
push
hlt
dec
std
sub
add
cmp
push
sbb
imul
es
cmp
mov
add
enter
mov
adc
loop
cmp
and
xchg
popf
and
dec
ds
lahf
add
ljmp
push
xchg
or
or
rcrl
or
bound
in
mov
inc
dec
jnp
inc
mov
push
and
sti
sub
nop
int3
aad
xchg
adcb
out
lea
mov
adc
scas
movb
add
negb
mov
adc
mov
imul
jno
subl
pop
bound
adc
inc
lahf
push
repz
xchg
pop
adc
sahf
inc
adc
mov
test
subl
inc
sub
push
mov
shll
pop
xor
rcll
divl
sub
out
pop
imul
inc
and
mov
and
push
or
adcl
mov
xor
stc
fcoms
jmp
pusha
add
dec
adc
mov
pop
in
jb
paddd
jno
jo
xchg
push
add
fistps
fs
ficoms
jne
lahf
ss
pop
xlat
shll
outsl
fsubrp
fwait
pop
mov
lret
jmp
cltd
sub
cwtl
jl
sbb
adc
imul
or
inc
imul
out
jo
mov
inc
adc
cmpl
loope
xchg
imul
pop
ret
repnz
pop
loop
outsb
ss
mov
sub
cmpsb
fisttps
pop
jo
xchg
dec
push
pop
fwait
mull
out
or
dec
movsl
sub
andl
xchg
mov
fcmovne
std
sti
adc
pop
icebp
add
pop
adc
or
sbb
xor
xchg
jle
jmp
sahf
jno
icebp
ds
outsl
stos
xchg
or
add
cld
cmc
scas
pusha
add
insl
push
xor
mov
pusha
std
sbb
loop
popa
sub
xor
ja
mov
sbb
jb
fistps
out
dec
popa
sti
sub
jge
leave
data16
jp
stc
out
inc
sub
xlat
int
pusha
cmpsb
arpl
mov
pop
xchg
sahf
sub
mov
pop
xchg
shlb
xchg
mov
jle
dec
mov
call
shr
clc
fxch
sahf
jne
xchg
lcall
pusha
add
outsl
push
inc
cld
nop
mov
xchg
xchg
push
mov
xchg
pop
movntps
popf
mov
mov
out
pop
loope
pop
inc
not
out
adc
sbbb
mov
scas
sbb
pop
movsl
std
lret
jnp
and
int
push
scas
or
mov
jecxz
cmc
inc
xor
mov
mov
ja
inc
mov
sbb
movl
fsubrl
add
add
add
in
fwait
aaa
cwtl
jnp
je
shll
in
movsl
or
jl
test
jae
mov
push
xor
xlat
movsl
push
xchg
in
cwtl
add
jp
xlat
add
jle
stc
sbbl
sbb
xchg
cli
jno
xor
loopne
fsubl
add
push
in
hlt
pop
out
loop
lahf
xor
mov
or
mov
sub
adc
sarl
sbb
mov
inc
adc
inc
xchg
fwait
cmpsl
mov
xchg
stc
adc
ds
mov
cltd
pop
or
lea
lcall
mov
xor
dec
popf
andb
push
mov
ds
call
sbb
and
ja
pop
pushf
add
jge
pusha
and
fisttpl
pushl
jl
lds
ds
shr
outsl
jnp
out
lea
add
nop
mov
mov
aad
mov
push
mov
mov
out
sbb
fmull
xchg
jo
sahf
adcl
jp
ficoms
sub
rolb
jmp
mov
jge
and
and
add
shlb
data16
xchg
cli
ss
xchg
je
jmp
adcl
stos
sahf
fwait
pop
sbb
enter
fisubrs
or
xchg
adc
sahf
icebp
cmpl
xor
aad
cli
lcall
mov
pop
mov
fldl
mov
sahf
sbb
pusha
pushf
cli
sti
out
inc
sti
imul
cli
pop
das
out
adc
fnop
or
fisubrs
mov
push
pop
int3
les
subb
add
fmull
adcl
adc
push
xor
dec
mov
or
mov
and
add
pop
repz
scas
jns
inc
cmpl
add
in
fiaddl
pop
xchg
subl
in
jnp
fstp
adc
popf
sarb
sbb
fs
cmp
clc
pop
or
popa
add
mov
repz
push
pop
sti
xchg
ja
idivb
add
sub
mov
pop
pop
lea
jp
push
adc
cmc
pop
mov
or
mov
iret
insb
xlat
jbe
and
fdivrl
mov
xchg
pushf
pop
ss
loope
sahf
push
cli
sub
push
adc
ret
mov
sahf
xchg
incb
fisttpll
cmp
int
add
sub
cli
or
in
sub
mov
ljmp
or
push
pop
pop
lcall
xchg
popf
shll
into
jge
bnd
dec
pop
adc
arpl
imul
insb
xlat
pop
fwait
and
inc
and
mov
xchg
and
mov
dec
push
mov
das
fnstcw
pop
lret
cld
ja
pop
push
inc
xchg
mov
push
lea
into
xchg
popa
xor
mov
add
jne
ficoms
xchg
leave
sbb
ds
shl
shll
mov
cwtl
xchg
je
and
dec
lods
push
pop
sbb
dec
mov
xchg
fbstp
xchg
jmp
clc
jns
loope
pop
mov
movsl
into
adc
or
xchg
filds
mov
cltd
xchg
lock
int
jmp
fistps
add
sub
cmp
xchg
leave
or
mov
mov
int
push
pop
andl
jmp
add
rorb
js
inc
sbb
jbe
mov
pop
mov
lods
cmp
in
outsl
packsswb
pop
add
sbb
pop
push
cmp
pop
and
jmp
mov
das
stos
dec
in
pop
push
dec
dec
mov
xlat
sbb
or
nop
int
inc
loop
jb
jle
sub
out
push
data16
nop
in
mov
aaa
data16
cmp
aam
jnp
pop
aad
out
inc
mov
push
cmp
loopne
push
mov
mov
sahf
cwtl
out
addb
pop
xchg
xchg
jmp
bound
inc
mov
jno
jg
fsubrs
sbb
bound
arpl
sub
daa
mov
pop
rcll
fadds
mov
lods
push
mov
add
sub
test
lret
xchg
pmullw
xlat
sbb
sub
pop
add
out
jne
data16
mov
gs
insl
pop
test
ret
xchg
jp
call
xor
add
outsl
fidivs
jl
push
pop
dec
jae
or
adc
pop
cltd
mov
repnz
fs
mov
dec
in
mov
push
imul
cmp
rcrb
imul
jne
repz
aaa
sub
lods
push
into
jle
fistl
jge
add
pop
hlt
data16
jne
movsl
sti
imul
aas
paddusw
inc
sub
mov
pop
movsb
xor
adc
leave
mov
rclb
sbb
andl
pop
adc
adc
out
xchg
outsl
pop
jp
xor
stc
cli
sahf
cmp
mov
jmp
pushf
mov
jbe
notb
pop
sbb
pop
int
dec
add
pop
add
aam
mov
pop
xchg
push
mov
ljmp
test
push
hlt
insl
adcl
xor
push
pop
xor
push
push
fwait
enter
jle
clc
sarl
aad
pushf
xor
mov
scas
mov
sbb
push
cltd
rcrl
pop
push
pop
scas
icebp
jnp
sbb
lods
cmp
dec
call
mov
pop
and
jno
jbe
imul
jle
hlt
mov
xor
adc
pop
cmp
scas
aad
ficomps
idivb
cli
dec
jnp
outsl
insl
lret
push
jmp
cli
ficompl
jg
xor
push
adcl
push
leave
adc
fsubrl
test
add
stos
ss
fwait
sar
jg
ret
add
roll
sbb
mov
add
aad
enter
add
sbb
imul
dec
int3
mov
sub
add
repz
test
xchg
sbb
add
cltd
iret
cmp
lods
cmc
push
cmp
sub
fcoms
cwtl
neg
fsubrp
aaa
sbb
sub
add
xchg
outsb
sahf
xchg
cmp
test
test
iret
sbb
cmp
adc
sbb
lahf
ds
push
mov
pusha
sbb
mov
pusha
loopne
xor
imul
add
popa
add
fbstp
sti
sbb
mov
push
movl
jmp
pop
inc
fldl
sbb
xchg
jle
push
stc
push
sub
aam
xchg
jp
divl
inc
arpl
jnp
outsb
fmull
jle
sub
sub
sbb
adc
out
setnp
sbb
inc
lahf
cwtd
clc
mov
mov
fstpl
add
inc
adc
outsl
inc
pop
lods
popf
mov
test
sub
xacquire
mov
ss
out
std
sbb
xlat
pop
and
mov
fistl
movb
xchg
push
sbb
dec
fs
sahf
inc
rclb
add
fldcw
push
cltd
movsb
sbb
mov
scas
jae
into
pop
jle
out
out
xchg
fists
enter
out
cltd
fiaddl
adc
es
lahf
shl
and
cmp
cmp
in
mov
push
fildll
push
sub
jecxz
sbbl
cld
mov
and
or
leave
ret
sub
test
dec
cmp
adc
xor
push
sbb
xchg
sub
bsr
inc
stos
mov
nop
cli
jnp
push
fstps
push
ficomps
xchg
push
inc
sbb
lret
inc
cmovg
pop
addr16
adc
push
cmp
cmpsb
adc
mov
psrld
push
lods
ds
icebp
xchg
fwait
sbb
and
pop
push
int3
mov
pop
or
add
inc
sub
push
xchg
mov
xlat
pop
xor
push
popf
sub
mov
sub
xchg
fcmovnu
adc
nop
daa
cmp
jnp
test
rolb
jns
movhps
cmc
lea
inc
mov
cmc
or
add
xor
push
mov
ret
dec
gs
sbb
arpl
xchg
adcl
pop
nop
dec
adc
push
outsl
icebp
jnp
add
xchg
jae
or
mov
sub
cmp
adc
jecxz
jecxz
sbb
mov
pop
mov
push
das
sti
jbe
pop
sbb
push
push
shl
dec
adc
xor
pop
movl
mov
jmp
cmp
popf
cwtl
push
dec
cltd
nop
out
mov
les
push
or
fdivr
mov
cli
je
add
xchg
xchg
add
pop
adc
adc
push
ror
push
xchg
mov
xchg
push
mov
gs
push
sub
ss
int
mov
sahf
adc
xchg
inc
jecxz
push
sbb
xchg
mov
mov
jnp
repnz
jmp
mov
int3
sahf
inc
xchg
jbe
sti
repnz
lahf
sub
mov
xchg
fwait
pop
lcall
add
cmpb
ss
jmp
and
testb
mov
xlat
sbb
mov
xchg
adc
mov
scas
test
subb
jmp
hlt
and
ja
inc
sub
arpl
cld
cmp
outsl
aas
test
ret
ficomps
xchg
pop
fstpt
daa
sub
inc
adc
mov
ret
xor
fcompl
sbb
jnp
pusha
hlt
out
mov
jl
lret
pushaw
cmp
sbb
fcmovb
xchg
cmp
adc
xchg
fdivrs
xchg
cmp
fdivrp
add
sub
pop
insl
popa
dec
cwtl
inc
lret
sbb
push
dec
xor
movsl
ror
xor
fistl
popa
inc
scas
sti
out
add
pop
inc
jge
std
into
xor
jp
std
hlt
std
jnp
cld
push
adc
push
repnz
push
xchg
cmp
outsb
mov
dec
adc
pop
jp
xchg
jnp
loope
repz
fistpl
or
adc
inc
loopne
mov
push
loop
xchg
mov
test
das
pop
out
push
xor
adc
repnz
popf
jl
xor
iret
cmp
pusha
movsl
mov
pop
sbb
fwait
rcrl
in
sbb
xor
sti
pop
aad
cbtw
wbinvd
cmp
mov
mov
test
fisubrl
xchg
pop
adc
fwait
xchg
subl
jnp
mov
inc
arpl
mov
xchg
mov
sub
aam
or
popf
adc
and
jae
sub
inc
inc
mov
adc
add
adc
movsl
ja
xchg
pusha
aam
adc
insb
sbbb
jg
xchg
inc
sbb
mov
or
add
lods
sbb
pop
push
cmpsl
mov
push
enter
or
aaa
xchg
xchg
add
mov
leave
stc
std
cli
scas
xor
pop
inc
shrl
pop
push
xor
dec
mov
jecxz
cld
popf
xchg
shl
idiv
pop
pop
pop
stc
out
movsb
xchg
jge
or
sbb
and
fwait
ss
xor
mov
add
insb
add
jb
fldl
dec
adc
sub
fstpt
xchg
mov
btcl
pop
sub
scas
pop
push
into
xchg
fcomp
jle
out
out
ret
and
ds
std
mov
and
jno
lret
add
mov
inc
inc
leave
push
jbe
add
scas
ret
inc
fsubr
or
add
shll
xchg
pop
lcall
lcall
mov
sbb
adc
mov
sbb
cwtl
pop
pop
lret
mov
cmp
std
jge
pop
ja
int
out
loop
sbb
idivl
xchg
add
fstl
sbb
mov
popf
or
sbb
cli
mov
xchg
sarb
divb
outsb
das
pop
lret
xor
dec
cmp
and
pop
push
jp,pt
lahf
ret
test
aam
leave
or
lret
push
out
fdivrl
psrlw
xlat
add
xchg
mov
inc
inc
lds
rcr
in
xorl
xchg
push
dec
inc
xor
stc
adc
fnstenv
adc
mov
testb
std
das
ficompl
xlat
xchg
lahf
imul
push
jmp
cmp
outsb
jne
push
fstpt
ja
pop
test
icebp
adc
fidivs
jnp
xchg
push
fidivs
fdivrs
add
jo
adc
loopne
sbb
xchg
jmp
adc
sub
aad
into
cli
jg
jmp
pushf
scas
cwtl
push
adc
mov
push
paddw
out
push
lahf
xor
test
xor
or
fdiv
sarb
xchg
jno
push
jne
xchg
pop
sbb
addb
push
cli
in
mov
mov
add
sahf
push
test
mov
sbb
jnp
ja
fbstp
cmp
flds
popf
add
scas
out
xchg
js
adc
lods
mov
xchg
imul
push
cmpsb
dec
jbe
jg
js
pop
lret
fwait
or
scas
aaa
mov
cmp
xchg
sbb
cmpl
push
sub
aas
mov
jnp
cmp
cwtl
jge
add
popf
mov
lcall
cmp
pop
mov
pop
push
push
outsl
xor
ret
out
mov
test
lret
jle
imul
fwait
in
rorl
jno
sbb
daa
movsb
rolb
ret
ds
cli
mov
push
dec
mov
add
push
jge
inc
push
and
jnp
pusha
out
push
xchg
cmp
mov
xchg
push
in
lock
dec
sbb
jne
mov
in
fcomps
fwait
sbb
cmp
enter
fucom
mov
jl
add
dec
push
cmc
rcrl
adc
push
cmp
inc
pop
jmp
inc
mov
add
cld
and
sbb
call
or
pop
lods
or
mov
lods
lret
int
xor
cwtl
lret
xor
inc
into
lcall
int3
or
fcoms
cmp
adc
je
enter
mov
arpl
or
sub
or
popf
call
fdivrl
jb
fwait
jno
fists
and
sbb
mov
gs
xchg
mov
xor
cmp
pop
test
gs
mov
sub
ss
dec
cmc
xlat
popl
cmc
xchg
scas
cld
outsl
bound
inc
ja
js
pop
jae
dec
addr16
jle
nop
addr16
sbb
fstpl
mov
daa
or
aaa
jnp
xchg
xor
mov
mov
ds
ret
inc
sarl
ffree
inc
mov
into
push
sub
adc
cmp
cmp
push
pop
push
or
add
into
adc
push
aad
lcall
mov
push
jo
iret
cmp
adc
jo
jl
pop
inc
ret
dec
pop
xchg
push
rcrl
mov
fisttpl
scas
es
ljmp
sbb
and
fcomps
sbb
sub
out
xor
mov
movsl
xchg
sub
jle
mov
loop
rcl
insb
pop
lcall
dec
test
dec
in
int
push
lock
jnp
lcall
pop
xchg
sar
repnz
arpl
pop
mov
push
mov
add
mov
lret
add
aam
add
in
out
cs
jp
ja
sub
mov
inc
xor
mov
mov
cmp
cmp
xchg
cmp
fdivrl
sahf
fsubr
adc
fnstenv
int
xorb
pop
fwait
sarb
pop
test
push
iret
test
inc
push
mov
jnp
add
imul
add
test
out
stc
hlt
jne
sbbb
jne
push
icebp
push
ret
test
imul
mov
mov
mov
sbb
out
adc
clc
cmpsb
inc
gs
xor
aad
mov
adc
mov
daa
aam
add
lds
lods
add
inc
data16
insl
jmp
sub
adcl
insl
sub
cld
sbb
inc
das
call
xchg
pop
push
sbb
jmp
lret
pop
mov
dec
xchg
fstpl
fmuls
leave
push
inc
xchg
ja
decb
xor
ret
push
vpcmpeqw
outsl
lds
repz
ret
rcll
or
inc
xor
push
jp
call
or
push
sub
std
fdivrp
lcall
pop
inc
push
leave
add
push
pop
xchg
jecxz
xor
ret
mov
fwait
jmp
sub
sbb
insb
in
lahf
mov
jecxz
inc
add
jg
out
mov
mov
mov
stos
xchg
or
dec
xor
bound
js
cmp
add
lret
jl
sti
out
idivl
push
aam
enter
fnclex
je
mov
mov
mov
icebp
pusha
jb
adc
xchg
les
out
cmpsl
rorb
push
add
inc
fisubs
push
outsb
fdivs
sub
sbb
sbb
std
add
or
inc
mov
mov
adc
jne
sti
jp
jnp
jmp
imul
inc
xchg
jp
fldt
in
pop
add
pop
sub
mov
pop
stos
jp
mov
ja
xlat
movsb
add
pop
ljmp
fists
les
jns
pushl
and
adc
xor
push
jle
lahf
fwait
lcall
mov
dec
pop
ret
sti
sbb
fwait
xchg
stos
testb
rcr
jne
xor
pop
cmpsl
and
fwait
pop
out
ret
stos
pusha
mov
aad
sbb
mov
or
sbb
mov
xchg
rcrl
aad
rcrl
push
decb
test
or
xchg
cltd
roll
cmc
les
xor
andb
stos
xor
mov
adc
inc
pushf
jg
cmpsl
push
enter
rclb
andb
ret
add
add
pusha
add
push
push
cmc
fwait
or
aas
inc
mov
pop
sbb
mov
aas
mov
jo
je
rorl
and
or
adc
mov
cmc
outsl
aas
adc
inc
loope
or
cmpl
loop
hlt
adc
dec
jl
sbb
stos
outsb
insl
cmp
xor
jp
mov
cli
sbb
fucomp
ret
add
xchg
dec
mulb
cld
add
xor
add
cmpb
xchg
and
addr16
mov
jne
cwtl
aad
xchg
xchg
push
sbb
cli
adc
jbe
testb
mov
sub
mov
sbb
sbb
int
mov
out
aaa
popf
fldl
out
mov
lcall
jno
fsubl
adc
mov
ds
clc
mov
push
les
mov
xchg
mov
icebp
mov
jle
frstor
sbb
shlb
orb
stc
test
push
push
jmp
add
adcb
sahf
into
xor
push
les
pop
dec
adc
mov
sbb
add
xchg
mov
xchg
adc
add
xchg
fistl
movsl
shlb
xchg
cmp
in
div
add
adc
mov
pop
out
insl
mov
pop
insb
and
xor
or
push
mov
xrstors
xchg
pop
cld
cmc
dec
jg
pop
pop
rcl
add
jmp
add
pushf
scas
mov
scas
pop
cli
xchg
push
pop
sbb
jne
ds
xor
neg
jne
cmpb
sbb
xor
jne
mov
ja
sbb
push
push
fnsave
rcll
mov
push
mov
adc
add
add
in
addl
mov
fs
lahf
add
lea
push
shr
mov
into
fldl
cltd
sub
sub
jnp
xchg
ror
std
jno
push
inc
jb
xchg
mov
outsl
sub
in
xchg
rorl
mov
xlat
std
mov
xchg
sbb
jne
xorl
jnp
inc
dec
inc
leave
pop
add
cmp
ljmp
jno
stos
inc
xchg
push
xor
std
push
sbb
stc
and
dec
add
ret
sti
imul
add
push
and
fisttps
jnp
push
inc
cmp
daa
inc
into
mov
out
dec
pushf
daa
add
mov
adc
cltd
xchg
incb
subb
add
repnz
cmc
insl
add
loop
in
push
mov
mov
pushf
pop
mov
repz
sub
insl
lret
fwait
push
mov
in
xlat
stc
mov
mov
pop
or
gs
inc
fwait
xor
stos
adc
xchg
or
sahf
adc
mov
dec
repz
outsl
mov
insl
or
pop
fwait
cmpsl
outsl
ss
mov
jg
ud1
pop
cli
xchg
pop
or
inc
popa
addr16
sbb
ss
cmp
add
loope
pop
lret
fcomi
sahf
cmp
adc
movsl
sbb
or
fiadds
fbstp
and
cmc
fwait
cmp
out
cltd
push
jnp
enter
mov
faddl
inc
mov
insl
xor
out
out
mov
or
cli
mov
xor
comiss
sbb
mov
into
adc
popf
notb
dec
int
cld
add
mov
sbb
sbb
clc
jno
jmp
lcall
adc
or
aad
sbb
imul
out
add
pop
mov
xchg
lcall
fnsave
aaa
sbb
mov
sbb
jle
testl
mov
shlb
fs
fisubl
jbe
adc
rcl
mov
loopne
add
xchg
mov
mov
pop
push
ret
test
sbb
cmpsb
sbb
cmpsl
pushf
call
fnsave
pushf
addr16
inc
mov
sbb
and
xchg
push
push
dec
cmp
daa
xor
stos
lcall
mov
mov
test
xor
icebp
jne
js
adc
xor
xchg
pop
scas
add
pop
stc
pop
pop
mov
cmp
addr16
jp
mov
aaa
ficompl
ret
mov
cmp
jno
sub
jnp
mov
mov
dec
fcomp
dec
daa
stos
aaa
out
push
lahf
int
mov
vmread
mov
jno
loop
pop
in
adc
jns
pushf
mov
std
ret
loop
aam
cwtl
inc
push
pop
cmpsl
mov
and
nop
xchg
xor
sbb
ret
mov
dec
pop
or
sti
lret
daa
popa
xchg
pusha
mov
push
lahf
xlat
jnp
fistpl
loop
fwait
lock
inc
push
cmp
loope
pop
xchg
jg
stos
inc
jecxz
shlb
loop
mov
jge
dec
push
sbb
into
add
movsb
mov
mov
pcmpeqb
add
xlat
sahf
shrd
clc
pusha
or
fst
xchg
repnz
jg
sahf
daa
sti
lds
dec
int3
lret
jno
or
fwait
xchg
push
sbb
out
mov
fnstsw
repnz
cmp
fsubl
add
adc
adc
out
pop
pop
lods
mov
sub
add
push
push
fists
and
insb
gs
rolb
dec
sub
or
jmp
leave
pop
xor
imul
popa
dec
inc
push
fbstp
cwtl
lods
xchg
addr16
test
int3
pop
mov
ja
cmp
int
stc
mov
cmpb
push
sbb
mov
pop
pop
cmp
sbb
ss
inc
sbb
bnd
nop
pop
sbb
pop
mov
ljmp
in
popa
and
adc
rclb
push
icebp
ficompl
xor
mov
icebp
fidivs
lcall
dec
xchg
jl
add
pop
jge
dec
decl
add
lods
xlat
xchg
lock
insb
xor
push
sub
in
dec
popf
andl
jnp
sahf
shr
push
lcall
jmp
fsubrl
ror
cmp
xchg
adc
mov
rcll
sbb
repnz
gs
mov
mov
call
clc
gs
mov
mov
popf
loopne
sbb
fs
rclb
ja
unpcklps
cmpsb
inc
xchg
adc
sbb
pusha
or
test
sub
inc
negl
inc
dec
scas
pop
mov
addr16
and
sti
shr
in
add
push
sahf
imul
lahf
jp
jne
add
add
dec
pop
xor
mov
orb
pop
pop
fstl
out
lsl
fistpll
push
std
in
icebp
fsubr
pop
mov
mov
push
gs
lcall
das
jg
and
nopl
loope
add
pop
lret
in
xor
cmp
popl
cwtl
addb
enter
test
cmc
bound
jmp
shlb
out
cmp
test
jmp
jb
stc
hlt
insb
or
push
mov
out
pop
jo
pop
mov
mov
pop
rorl
std
out
push
mov
cmp
add
mov
add
fisttpll
fnstenv
push
icebp
and
int3
and
mov
pop
sbb
scas
push
xchg
pop
mov
pop
pop
dec
lods
xchg
cli
iret
xchg
int
sarl
rcl
sar
scas
push
mov
ret
sti
aas
push
fwait
mov
popa
mov
lahf
stos
add
loop
adc
xchg
mov
push
xorb
ljmp
push
adc
adc
pop
sub
ja
or
pop
cmpsb
ja
into
adc
jne
lods
inc
test
nop
sbb
inc
push
pop
cltd
sarb
ja
jp
sub
sbb
popf
outsl
push
mov
mov
dec
xchg
out
pop
jne
push
iret
xchg
mov
in
out
add
mov
bnd
dec
sub
jmp
cmp
stc
push
pop
pop
into
decb
daa
xchg
cmp
sub
push
cmp
add
xor
and
pop
inc
ret
je
mulb
add
mov
cltd
mov
pop
and
sbb
rorb
mov
jg
fwait
xchg
daa
sti
gs
xor
xchg
sbb
mov
xchg
aad
dec
shlb
addl
add
cli
jne
fmuls
mov
sbb
shlb
std
outsl
fidivrs
sarl
jg
out
jecxz
int
jnp
pop
cwtl
pop
jno
mov
xchg
pop
pop
scas
mov
or
push
cmpsl
popf
inc
mov
pushf
adc
sbb
cmc
cli
arpl
int3
or
or
xchg
jl
cmp
sbb
mov
stc
add
addr16
decb
int3
jno
jle
fs
mov
pop
mov
cmp
cli
push
dec
mov
pop
loope
das
into
pop
leave
mov
mov
xchg
and
mov
shlb
scas
add
rcl
orb
xchg
outsb
cs
or
inc
mov
in
sahf
aam
add
fldl
fnsave
les
jnp
mov
data16
xchg
sbb
popf
std
pop
in
push
push
mov
sahf
xchg
sbbb
xchg
out
lahf
mov
adc
adc
repz
push
xor
out
add
xchg
push
add
push
in
out
cmp
in
sti
add
xchg
std
test
cmc
xchg
add
setle
jp
mov
push
xchg
xchg
lcall
fnsave
mov
sti
xchg
or
sbb
mul
sti
jl
and
ret
inc
mov
cmp
cmp
xor
push
add
xchg
cmc
scas
jp
mov
mov
or
jg
cwtl
out
jns
pop
stc
stos
sub
xchg
xchg
gs
jae
test
inc
sbb
std
sbb
jns
pusha
fdivs
xchg
sbb
mov
mov
shll
xchg
inc
and
cmp
inc
fdivp
nop
adc
xor
jnp
shlb
jp
fidivrs
push
jae
inc
adc
cmp
jle
cwtl
notb
mov
add
and
in
test
mov
aad
cld
xor
sbb
popf
push
pop
xchg
fisubrs
scas
fwait
pop
jle
cltd
xchg
pop
mov
pop
pop
out
or
js
popa
pop
add
add
push
xor
adc
xchg
sub
add
cld
xlat
scas
fcompl
jg
push
fistps
pusha
or
cs
rolb
jae
cmp
sub
cltd
push
lea
popf
sbb
int
ljmp
int
sbb
fstps
jae
rolb
xchg
adc
fwait
xchg
sbb
in
jp
repnz
adcl
popa
mov
cli
mov
ret
sahf
sti
jbe
inc
std
sbb
mov
dec
cltd
mov
or
mov
pop
jne
xor
aad
add
mov
mov
xor
sub
xlat
negl
fwait
lcall
pop
cli
ret
cmp
cmp
decb
outsb
mov
seto
or
roll
out
popl
jl
aaa
mov
pop
push
ds
mov
mov
or
je
push
pop
add
dec
out
fucomi
xchg
cmp
xor
fnsave
cmp
and
sbb
arpl
xchg
lahf
insb
fwait
xlat
xor
negl
xchg
rcr
add
and
jl
mov
push
mov
xor
adc
adc
jb
cltd
psllw
xor
fwait
addl
cld
popa
sbb
and
push
fistps
mov
pop
adc
incb
xchg
out
jle
addl
std
cwtl
sbb
out
add
pop
repz
mov
mov
cld
lahf
mov
mov
iret
adc
in
sbb
or
jge
cwtl
or
daa
lods
cmpb
sti
fwait
je
test
lret
push
push
repz
push
sbb
aas
mov
test
enter
test
adc
add
sub
mov
jnp
shrb
out
mov
fsubrp
leave
mov
jg
push
xchg
cmp
jmp
in
pop
jg
ret
cmp
adc
push
jae
pop
pop
mov
insb
fcomp
ja
pop
and
inc
add
xor
sbb
mov
jle
sti
jns
out
push
test
mov
mov
push
cwtl
clc
inc
pop
push
pushf
fsubs
sti
loopne
cmp
pop
pop
pop
xor
pop
shll
inc
fwait
pop
xor
mov
adc
add
fidivs
cli
sbb
sti
sbb
cmp
iret
sub
and
stos
inc
cwtl
jg
xchg
dec
add
sbb
testl
fistpl
mov
mov
push
push
imul
xchg
and
popf
jle
ss
sbb
xlat
popl
xor
jecxz
jge
mov
and
cwtl
ss
push
lcall
cwtl
testb
jo
add
xchg
mov
push
sub
and
cmp
std
movsl
xchg
idivb
mov
mov
pop
xchg
outsl
add
adc
or
loop
not
lds
dec
les
jno
int
adc
sti
scas
enter
popf
push
push
jnp
xchg
pop
cltd
aaa
jbe
adc
jge
les
lcall
test
aam
xchg
adc
int3
mov
lds
cmp
cmp
sbb
push
adc
sbb
push
xchg
xchg
mov
adc
or
je
mov
jns
inc
adc
cli
std
ficoml
mov
adc
dec
fwait
mov
pop
push
pushf
mov
in
add
out
jl
repz
pop
int3
cmc
into
fstpl
int3
int
mov
inc
xchg
jb
in
out
rol
jbe
jbe
out
xchg
pop
test
pop
and
pop
shll
lea
pop
test
push
mov
sbb
ss
xor
xchg
xchg
add
or
pop
fisttpl
aaa
jle
test
test
xchg
cwtl
push
mov
push
lds
dec
push
fwait
aam
pop
clc
repz
aad
push
rcl
ret
cli
cltd
pop
gs
mov
jnp
hlt
popf
mov
dec
fisttpl
or
cmp
pop
fstpt
sbb
ja
or
sbb
fnstsw
std
jbe
aam
nop
mov
sbb
push
scas
imul
sbb
seto
mov
jnp
cli
repnz
mov
push
je
sbb
in
sbb
xorl
fcoms
cs
mov
rcrl
lea
mov
dec
jnp
jp
repnz
outsl
xchg
xchg
push
rcrl
xor
mov
or
xchg
shlb
xchg
test
fisttpl
in
mov
adc
negl
xchg
mov
sbb
sbb
cmp
xchg
testb
xor
call
adc
mov
xchg
jno
jae
imul
or
fmulp
add
and
adc
xchg
dec
idiv
je
daa
jns
sahf
icebp
xor
sub
push
xchg
lods
pop
push
cld
cmp
add
pop
pop
in
mov
loop
sub
sbb
lods
stos
pop
orl
add
cmpsl
xchg
sbb
ja
dec
pop
mov
insl
in
add
ljmp
jne
repz
sbb
and
ds
mul
out
mov
add
lret
call
dec
stos
mov
sub
adc
js
iret
les
pop
pop
divb
push
sub
sbb
jecxz
fbld
aad
leave
dec
dec
cwtl
stc
push
or
sbb
test
jb
lea
ficomps
xor
fmulp
mov
popf
cmpsl
lock
aam
in
push
add
jp
sbb
dec
notb
repnz
filds
mov
fcoml
inc
cmp
pop
dec
push
aam
xlat
xchg
inc
sahf
imul
mov
negl
add
stc
mov
lret
push
xchg
aas
cwtl
stc
ficoms
xor
iret
dec
mov
push
je
or
mov
xor
pop
fstpl
dec
add
and
jp
ds
mov
sbb
sub
mov
add
fisttpll
or
xchg
aam
ja
add
hlt
test
xchg
jb
xor
bound
lock
popf
mov
sahf
pop
xor
jmp
pop
jb
or
insb
repz
xchg
icebp
fwait
lea
iret
aam
test
ljmp
pop
sbb
hlt
add
sti
xchg
lcall
imul
push
pcmpgtd
pop
or
xchg
sti
jge
inc
sub
fcomip
call
dec
jnp
sahf
pop
sti
jle
or
mov
aam
sub
pop
jmp
cmpsb
adc
sbbb
add
adc
mov
pop
xchg
xor
aas
pop
scas
aad
xchg
fs
push
push
adc
ja
add
lret
rcrb
cwtl
sahf
or
push
mov
sub
ret
cld
push
or
stc
mov
or
cmp
out
sti
mov
push
std
or
xor
xchg
and
add
sbb
inc
pop
or
std
imull
dec
pop
mov
leave
xchg
divb
add
sti
add
sbb
mov
jp
out
inc
xchg
cmpl
out
sbb
std
adc
xchg
insb
adc
adc
jbe
push
pop
std
cmp
mov
aas
frstor
sbb
enter
nop
add
or
adc
cmp
cmpl
pop
cmpb
cmpb
fldl
pop
orb
imul
mov
test
push
pusha
push
or
push
gs
rclb
lds
push
sub
sbb
or
mov
push
sbb
lret
rorl
pop
or
push
ficompl
inc
xor
pop
imul
fisttpl
sbb
sub
or
add
cli
ljmp
or
cwtl
repz
das
push
pop
cld
add
sbb
cs
nop
xchg
cmp
lret
in
sbb
adc
repz
std
sbb
mov
nop
push
add
adc
sbb
push
xchg
adc
xor
xchg
mov
xchg
or
sbb
adc
pop
push
enter
outsb
jo
pop
mov
mov
gs
aaa
movsb
sbb
pop
inc
push
sets
jne
lock
adc
jle
cmp
xorb
push
aad
ss
pop
add
push
xchg
dec
mov
xchg
xor
lods
prefetch
mov
jle
outsl
pop
xchg
or
adc
mov
xchg
ds
nopl
xchg
push
into
adc
gs
aas
mov
aaa
out
int
std
jbe
js
fwait
mov
xchg
lcall
jae
jae
rorb
mov
and
pop
aaa
leave
jge
addr16
cwtl
cld
xchg
mov
xchg
jo
out
pop
scas
sti
rorl
gs
ja
inc
pop
adc
imul
sbbl
outsl
repnz
loop
cwtl
int
lret
and
mul
xchg
push
mov
jne
test
out
loop
clc
gs
cld
or
into
inc
dec
pusha
repnz
aad
aas
imul
cmpl
or
cmp
sbb
imul
jg
sti
test
rcr
cmp
js
jg
dec
cmp
pushf
loopne
imul
lret
and
ss
dec
pop
in
and
sub
daa
mov
mov
jae,pn
notb
sub
jge
lahf
mov
mov
popa
push
out
xor
mov
push
mov
mov
pushf
xchg
cmp
dec
sub
mov
aam
xchg
mov
fnstenv
cli
aad
sbb
icebp
loope
fimuls
cwtl
mov
lea
xchg
fistpll
repnz
mov
out
jnp
and
jmp
xchg
jnp
or
outsb
or
arpl
pop
push
jl
loop
pop
pop
decl
pop
aam
mov
push
add
jnp
cmp
push
jnp
jnp
and
sbbl
cmp
outsb
repnz
popl
jg
pusha
jae
push
mov
addb
loope
out
push
cmp
fidivrs
inc
out
jmp
enter
lea
not
scas
std
adc
setns
ss
xchg
fadd
lea
push
jnp
jns
lcall
lcall
mov
fisttpl
mov
and
ret
loop
sbb
mov
push
jno
mov
sbb
push
or
mov
out
sub
mov
or
in
add
or
imul
ret
into
xor
fwait
std
setno
mov
sahf
out
repz
cmp
sbb
icebp
icebp
neg
cmp
in
push
mov
lds
sub
nop
aas
ja
cli
scas
push
pop
pop
adc
ja
lds
ljmp
popf
test
nop
int
mov
push
sub
ja
lds
pop
mov
xchg
cltd
sbb
mov
cmp
xor
jmp
xchg
cli
ljmp
pop
pop
icebp
xchg
mov
xor
push
inc
sti
ss
or
scas
mov
mov
mov
fucomi
cmc
in
jae
int
or
nop
mov
add
iret
push
jns
pop
mov
shlb
xor
repnz
loopne
pop
jg
or
sbb
sbb
test
xchg
sbb
push
mov
enter
xchg
push
aad
lcall
xrelease
cmpsl
out
push
adc
sbb
mulps
add
clc
ds
mov
pop
xchg
into
aas
jge
scas
out
inc
ret
aaa
sahf
sbb
cmp
mov
jmp
sbbl
sahf
out
pop
push
xor
xchg
dec
in
push
xchg
cli
push
push
adc
lds
or
cwtl
adc
int
and
pop
sub
sub
ss
outsb
out
mov
xadd
loope
jnp
xchg
sbb
ss
xor
div
sbb
push
add
pop
cld
sbb
mov
ljmp
movl
cltd
aas
pop
or
sahf
xchg
notl
mov
js
push
mov
cwtl
mov
gs
mov
inc
xchg
js
addb
shrb
fdivl
jle
popa
sahf
into
cld
xchg
jp
jnp
outsl
test
int
lret
or
mov
push
mov
scas
fwait
test
repz
mov
pop
push
or
mov
fistps
je
mov
lcall
xor
mov
imul
daa
jbe
push
sti
adc
lds
ljmp
shlb
addb
add
inc
subl
sti
mov
mov
mov
icebp
mov
mov
insl
jmp
scas
ja
xchg
pop
adc
cmp
push
fs
pop
int3
xor
and
xchg
jnp
hlt
push
push
add
jo
loop
roll
fcoms
dec
cli
dec
sub
fldl
sbb
jg
shlb
push
jge,pt
add
mov
mov
add
adc
mov
hlt
and
adc
pop
test
xchg
push
pop
movsl
mov
nop
adc
fstps
std
scas
js
jae
cmpl
xchg
fisttpl
fstps
stc
mov
test
lret
mov
cwtl
div
mov
leave
or
dec
push
popf
xchg
pop
jmp
mov
ud2
jl
mov
sub
adc
mov
cmp
or
sahf
loop
js
cld
mov
dec
inc
negl
xor
adc
cmp
lret
sub
adc
filds
shlb
fs
jne
test
fsts
popa
cli
sahf
or
mov
jmp
sti
je
ds
sub
jnp
xor
fiaddl
les
fcomps
mov
pop
cltd
xchg
add
xchg
pop
or
and
pop
sbb
sahf
popf
out
ret
scas
xchg
jb
xchg
jg
cmc
push
test
mov
inc
sub
fwait
scas
cmp
xchg
rcrb
adc
movq
inc
repnz
add
jmp
or
out
pop
outsb
push
lahf
fwait
or
stc
lods
call
xchg
jo
cwtl
push
jg
inc
sbb
xchg
push
fiadds
mov
sbb
aas
fidivrs
cmp
cmpsl
jle
sbb
out
nop
movsb
out
jns
aad
cmpl
jnp
cmp
sahf
sbb
mov
repnz
pop
sub
stos
pop
pop
xchg
js
pop
jne
jnp
cmpb
push
add
into
stos
test
imul
data16
cmp
imul
ret
repnz
enter
adc
cmpl
cmp
xor
pusha
aas
cmpl
jl
push
jnp
in
jns
test
lret
add
sbb
lock
add
pop
xchg
popf
insl
in
mov
test
xchg
andb
cmc
shlb
ja
fsts
sbb
clc
add
inc
out
mov
bound
sub
sbb
into
jl
out
push
and
scas
fdivrs
jge
in
lahf
push
dec
xchg
pop
fisttps
push
sbb
add
lcall
in
mov
je
lret
lods
push
mov
xor
mov
lahf
int
mov
xchg
cwtl
mov
push
adc
leave
cld
lahf
cld
cld
pop
aas
pop
xchg
push
pop
lahf
push
sbb
sub
add
sub
mov
sbb
push
mov
data16
mov
mov
movsl
test
lcall
jno
test
sbb
fwait
xchg
test
push
fmuls
mov
fdiv
xlat
push
in
sub
mov
mov
loopne
push
aam
sbb
dec
adc
cli
popl
sub
adc
push
mov
push
xlat
mov
pop
cmp
mov
getsec
sbb
sub
ss
cmpsb
out
push
rclb
pop
inc
or
sbb
mov
xchg
mov
lcall
xchg
lds
stos
lds
cmp
jmp
add
pop
popf
cltd
movups
xor
add
xor
mov
sbbl
sahf
xchg
sbb
ds
xchg
into
sbb
loop
inc
ds
jmp
xchg
ja
stos
inc
mov
adc
xchg
sti
jmp
repnz
jmp
fldenv
insl
bound
push
jno
enter
xchg
popa
std
dec
fsubp
fistpll
push
loope
mov
add
or
orb
fcmovnb
cmc
sbb
jge
adc
fadds
jno
mov
sahf
mov
sbb
iret
addb
dec
and
insb
sbb
push
andl
xchg
adc
rcrl
xchg
aaa
adc
adc
cltd
fistps
in
cwtl
movsl
add
xor
pop
fcmovb
push
pop
add
pop
adc
decl
dec
mov
int
mov
fwait
dec
xor
jg
jmp
mov
stc
ficoml
adc
cmp
jno
push
fnsave
into
mov
es
mov
dec
out
loope
inc
out
aad
ja
fsubl
jnp
xchg
mov
and
sahf
jp
dec
movb
pushl
in
cmp
out
rolb
std
or
cmp
mov
add
add
in
xchg
ja
cmp
icebp
test
shlb
fwait
aaa
add
sbb
pushf
pop
int
test
push
js
fimull
cs
xchg
lahf
in
ficoms
in
rolb
add
add
cld
test
daa
push
jne
xchg
sub
adc
mov
jno
pop
icebp
xchg
jge
imul
sub
ret
xlat
mov
inc
out
out
stos
popl
sub
add
adc
movsb
sbb
jne
enter
add
xor
in
stc
mov
sbb
xor
adc
iret
inc
pop
fstpt
imul
shr
jbe
mov
mov
push
add
pushf
roll
mov
aaa
je
jno
push
adc
sub
inc
out
mov
rcr
inc
inc
out
jmp
pop
and
flds
adcb
pusha
in
xlat
adc
into
dec
dec
idivl
xchg
add
movsl
fidivrs
aaa
xor
hlt
adc
int
sbb
pop
test
mov
loope
fsincos
out
sbb
mov
cli
pop
jl
dec
pop
out
sahf
out
xchg
inc
jno
mov
and
xlat
std
cmpsl
mov
sbb
xlat
cld
das
dec
push
out
jg
shlb
popa
mov
pop
pop
xchg
cmp
and
mov
lods
fidivrs
dec
loop
cmp
mov
cli
fwait
pop
adcl
pop
aam
sub
cmp
push
aaa
lods
jae,pn
gs
lahf
imul
cmp
xchg
jnp
pop
aaa
loop
subb
pusha
mov
push
mov
lcall
test
cltd
jns
inc
xor
aas
test
fwait
inc
sti
and
outsl
out
xchg
jmp
fwait
xlat
pop
mov
lods
fildl
hlt
lea
push
jecxz
outsb
pushf
push
mov
aad
dec
dec
mov
ret
cmp
jmp
mov
sub
pop
mov
add
sti
cli
scas
push
jg
adc
mov
inc
adc
sbb
mov
lret
aad
std
and
xor
std
cmc
clc
stos
ret
sub
xchg
fsubrl
xchg
int
sahf
pop
xchg
movsl
popf
out
add
icebp
fimull
pushf
loope
mov
rcll
mov
xchg
notl
push
mov
push
ret
sub
inc
dec
lret
push
pusha
xchg
sbb
sbb
lcall
or
mov
std
movzbl
mov
mov
shll
sub
or
lahf
sahf
loop
out
mov
push
lahf
add
pop
fisubrs
jo
out
in
lcall
cmp
je
push
jns
xchg
push
xor
loope
fs
pop
mov
add
xlat
sti
push
ds
xchg
jl
and
popf
scas
or
fcom
adc
xlat
xor
inc
mov
mov
enter
in
stc
adc
cld
pop
mov
sbb
sbb
sbb
aam
das
push
sbb
ret
ds
xchg
hlt
sbb
stos
ficomps
pop
mov
lds
xchg
push
push
sarb
inc
out
mov
int
gs
jae
sbb
adc
pushf
das
jp
sbb
xor
pushf
and
movsb
mov
fidivs
mov
lcall
cmp
mov
insl
loopne
fbld
push
mov
sarb
popa
ss
sti
pop
xchg
mov
ret
mov
outsl
push
fistps
sbb
add
sbb
sti
test
std
pop
jnp
and
lea
outsb
lcall
mov
pop
lock
fwait
into
call
adc
add
ljmp
out
insl
cmp
jo
fadd
daa
ja
hlt
lret
movnti
fildl
jg
mov
ret
cmp
das
jae
fildl
sbb
cld
rcrl
mov
cmc
js
xchg
pop
inc
pushf
pop
dec
fsubrl
and
inc
inc
push
jmp
jbe
xor
leave
xchg
dec
mov
xorb
jmp
or
jl
outsl
adc
loope
push
out
adc
mov
sbb
cltd
jp
pop
xor
lahf
aam
mov
inc
xor
enter
mov
out
ret
shrb
pop
mov
mov
nop
cmp
iret
xor
mov
pusha
cmc
mov
js
sub
pop
loope
imull
sbb
mov
inc
fsin
scas
mov
xorb
inc
sarb
loopne
pop
add
inc
out
push
mov
in
dec
movsb
mov
and
pop
cmp
ljmp
xchg
rclb
mov
insb
cmc
xchg
mulb
sub
adc
dec
sbb
lcall
cs
jne
adc
movsl
or
insl
aad
mov
cltd
inc
lock
inc
cmp
mov
lahf
inc
shrb
out
xlat
iret
addr16
lock
push
cmp
movsb
xor
xor
xlat
popf
add
sahf
pop
sbb
iret
insb
jne
sub
orl
clc
xor
mov
xchg
fdivp
fmul
repz
mov
fiaddl
or
jmp
mov
rolb
cmpsl
loop
push
out
push
xchg
shlb
mov
orb
js
js
testl
fsubrs
setne
int
dec
ret
xchg
leave
sbb
leave
ret
fcomps
mov
sbb
cmpsl
aad
sbbl
outsl
movsb
mov
and
xor
data16
mov
push
mov
mov
addr16
adc
pop
jmp
shr
pop
ja
insb
jmp
ret
fsts
mov
cmp
sbb
add
xchg
xchg
jbe
outsl
xchg
je
lock
stos
pop
lahf
mov
testb
imul
sbb
mov
jg
pop
mov
sbb
push
sub
fstpt
and
shrb
mov
aaa
pop
and
subl
sbb
dec
jo
xchg
fdivrl
cmp
xchg
mov
aas
jle
bound
pop
jne
or
cld
ficoms
enter
inc
cmp
jo
fwait
lock
and
xchg
mov
pop
pop
mov
xchg
dec
mov
pop
in
into
mov
shl
xor
push
adc
xor
sub
jno
out
lea
dec
popf
xchg
jle
iret
xchg
mov
push
mov
in
mov
scas
xchg
adc
inc
xchg
jo
push
mov
in
inc
adc
dec
fsubrp
sarl
mov
pop
out
stos
testb
push
jne
add
jnp
addr16
add
sahf
sbb
mov
xor
mov
int3
cwtl
hlt
in
enter
repnz
fsubs
out
cmp
dec
repz
gs
das
vmptrld
or
fisubrs
iret
mov
pop
or
scas
fwait
aad
mov
cmpb
je
mov
push
pop
sub
stc
addr16
insl
adc
add
jb
pop
mov
add
xchg
outsb
jno
jmp
push
pop
ja
into
xor
push
scas
iret
jno,pn
out
mov
lock
ficomps
pop
lds
and
and
fnclex
fnsave
mov
fwait
mov
mov
lods
sbb
aad
jecxz
insl
pusha
mov
addl
fisubrs
fadds
lcall
add
popf
mov
xchg
popa
mov
or
ljmp
shr
insb
test
shll
aaa
fld1
jge,pn
sbb
cmp
in
jno
pop
mov
cltd
rorb
fiadds
xor
sbb
dec
push
lahf
pop
push
lret
rcll
add
sub
aam
test
sbb
arpl
push
sub
mov
leave
adcb
enter
test
dec
add
mov
pop
fistps
fiadds
pushf
jnp
pushf
adc
add
into
scas
out
pop
jecxz
sbb
push
add
nop
mov
add
and
sarl
pop
out
push
lahf
clc
push
xor
sbb
jp
push
lahf
fmuls
out
pushf
xchg
mov
outsb
xchg
pop
jmp
cli
push
pushf
cmc
push
mov
imul
cwtl
xor
mov
xchg
nop
pop
sub
lcall
out
insb
imul
xlat
dec
dec
in
cltd
pop
in
adc
xchg
outsl
jmp
rcrl
xchg
xchg
cmpsb
cmc
int
pusha
out
dec
or
mov
jg
arpl
jle
adc
xchg
cmp
push
idivb
dec
and
inc
jno
outsb
insl
add
cmp
leave
call
add
clc
pop
lahf
loop
shrb
loopne
cltd
sbb
sbb
pop
pushf
lds
xchg
imul
mov
out
scas
adc
pushf
xchg
ja
inc
in
or
and
jb
mov
cmp
sti
pop
xor
out
mov
in
js
sbb
sbb
cmp
push
jg
adc
rcl
addb
inc
dec
push
sub
xchg
repz
test
insb
or
sbb
dec
popf
aam
ret
pop
into
mov
jmp
push
lret
out
sbb
adc
incb
enter
push
inc
sahf
add
sahf
rorb
or
sbb
fnsave
sarl
lcall
insb
inc
lods
std
jle
pop
ja
in
jl
fwait
mov
negl
sub
pop
add
test
stc
hlt
cltd
out
mov
rcr
popf
inc
scas
push
mov
out
adc
divl
dec
lcall
pop
xor
out
aad
lea
cwtl
or
xchg
sub
jg
push
sub
enter
fwait
popl
sahf
xchg
and
fwait
sub
jnp
pop
in
outsl
sbb
dec
xchg
test
push
add
pusha
mov
push
mov
mov
pop
sti
sbb
test
xchg
cwtl
inc
mov
cmp
fcompl
xcrypt-cbc
cmpsl
xchg
xchg
or
dec
sub
insb
jo
jmp
shll
push
cli
push
sbb
xor
xchg
xchg
pop
or
fwait
call
sti
mov
adc
mov
inc
adc
idivb
fwait
jle
cmp
lret
sbb
pop
mov
jg
mov
shll
cmp
push
fwait
cwtl
fptan
adc
mov
pop
and
push
xchg
imul
adc
add
enter
pushf
xor
ret
scas
mov
jmp
loop
int
push
in
jno
adc
sub
in
xchg
fidivrs
mov
and
xchg
pop
xchg
mov
stc
adc
sti
xchg
or
lret
enter
pop
subb
sbb
je
push
notl
imul
jle
orb
xor
outsl
xchg
dec
leave
jno
pushf
sbb
sub
xchg
jo
jne
stc
jo
cmpsl
lcall
cmpsb
sub
pop
push
xchg
dec
sbb
scas
sub
divb
loope
repz
fildll
outsb
jge
push
pop
add
jno
dec
jns
outsb
jbe
setb
lcall
mov
xchg
cmp
xchg
or
mov
imul
adc
sbb
add
int
mov
cmp
pop
fistpl
icebp
xchg
sahf
pop
das
std
cmp
or
das
jle
call
push
shlb
out
in
shll
push
mov
fsubrs
sbbb
adc
movsb
or
or
push
stos
xchg
sub
jmp
xchg
pop
jge,pt
pop
cmp
inc
fdiv
xlat
movq
mov
fwait
jnp
or
push
push
sub
mov
mov
mov
ss
sub
jmp
and
adc
outsl
out
iret
xchg
repz
xlat
pop
add
sarb
push
ret
mov
pop
imul
andl
imul
push
ret
adc
xchg
fcoms
jne
mov
adc
add
sub
cmp
pop
icebp
xchg
sahf
cs
xlat
aaa
mov
mov
rcl
jl
ret
popf
cmp
jge
fisttpl
femms
scas
mov
out
push
fwait
call
sbb
out
iret
cltd
fnstsw
ret
adc
sub
mov
adc
jnp
je
dec
aam
and
orl
nop
add
mov
adc
dec
mov
cmp
lahf
pop
sbb
leave
sahf
push
lea
unpckhps
mov
lret
xor
mov
jno
enter
fimuls
xchg
jae
adc
xlat
popf
fcmovnu
push
idivb
push
cs
fbld
neg
add
inc
ret
notl
inc
pop
pusha
sbb
sbb
sub
and
sbb
testl
sbb
aaa
std
sti
rolb
cld
pop
jl
lret
add
sbb
lds
xor
push
jo
cs
andl
inc
fnstcw
mov
push
push
cmp
pop
out
dec
mov
sbb
xor
mov
sub
sub
movswl
xor
push
and
push
rcr
lcall
test
cmp
sbb
adc
sar
adc
lock
into
jle
sarb
loop
aas
mov
dec
or
fiadds
pop
mov
jne
lahf
lock
dec
jb
sbb
in
sarb
rcrb
xlat
push
loope
dec
pop
adc
add
lret
push
push
sbb
dec
and
pushf
into
int
xor
mov
scas
out
jo
push
imul
adc
nop
sbb
mov
data16
idivl
sub
lcall
lcall
xlat
or
and
xlat
cmp
int3
dec
push
roll
call
scas
test
and
cmc
xor
add
es
into
sbb
pop
shrb
lds
sub
push
mov
sbb
aad
ss
andl
mov
loopne
imul
ss
shl
sbb
cmp
or
push
pop
and
roll
loope
rcrl
and
and
mov
jno
outsl
sti
xchg
mov
push
jno
sahf
xor
pop
inc
xor
hlt
sub
push
ret
pop
adc
xchg
lods
mov
int
cli
or
daa
cmpsb
pop
pop
mov
inc
and
repnz
rcr
cmp
leave
xor
sub
fsub
gs
push
int3
mov
cmc
fmull
mov
dec
in
inc
pop
mov
xchg
jl
leave
clc
iret
movsl
test
ja
jno
inc
add
inc
add
xchg
pop
xchg
cld
jnp
lods
cmp
cld
inc
lcall
aad
stc
and
arpl
sbb
xchg
push
push
add
mov
pop
push
rcll
cmp
adc
push
mov
pusha
adc
aaa
sub
jg
pop
ds
fwait
out
add
rcr
sti
pop
icebp
out
ficoms
jno
shlb
mov
in
inc
mov
pop
repnz
xchg
pop
pop
mov
aam
add
gs
int
push
add
outsb
inc
dec
cmp
sbb
adc
imul
fildll
sub
mov
cmpsb
jb
mulb
xchg
sbb
popa
adc
imul
std
mov
adc
push
pop
xor
insb
xchg
insl
dec
mov
fcmovnu
push
lcall
pop
shll
scas
loop
add
xchg
jns
cmc
pop
sahf
xchg
xor
aam
adc
inc
sbb
idivb
mov
outsl
xchg
fldcw
mov
sbb
add
ficompl
aad
mov
push
pop
dec
jmp
mov
xchg
into
mov
mov
sarb
inc
sub
push
xlat
popf
popl
push
int
call
fsubp
sub
in
ficomps
xlat
pop
mov
sub
mov
jecxz
pop
jge
aas
fidivrs
pop
cs
jle
mov
mov
cltd
adc
cltd
sbb
lcall
cli
rcll
push
stc
jmp
cli
sub
jns
adcb
sbb
popf
cmp
jne
push
out
pop
push
pop
fdivrl
add
sub
sbb
call
insb
popa
or
xlat
xchg
shlb
out
aas
mov
pop
into
push
jl
jo
mov
std
sbb
push
nop
or
aad
scas
ss
clc
dec
sti
dec
and
inc
mov
lds
sub
std
jge
push
push
mov
clc
jmp
movntps
aam
xchg
ljmp
push
sbb
mov
cwtl
arpl
push
mov
popa
sti
movsl
dec
xchg
shl
out
pop
inc
loopne
adc
outsl
sub
fcmovb
ret
pop
ja
rdmsr
outsl
icebp
add
into
std
cli
aad
notb
lahf
xchg
push
dec
pop
push
xchg
ds
sub
lods
sahf
xchg
aas
sti
cmp
inc
pop
outsl
cmc
or
popf
cmpsl
flds
or
jecxz
mov
xlat
sbb
adc
xor
idiv
pmaxsw
sub
xchg
imul
sub
ret
mov
jmp
mov
ljmp
push
add
sbb
sahf
dec
cli
popf
std
fwait
add
jae
pop
lret
push
and
pusha
jno
lahf
xchg
inc
mov
sbb
sub
adc
popf
xchg
xor
mov
jg
dec
cmp
arpl
and
sahf
cmp
pop
testb
mov
jo
loopne
pop
lret
pusha
insl
and
sub
pop
ljmp
pop
incl
mov
sete
je
cltd
std
cmpsl
inc
cld
lods
pop
sti
ljmp
gs
xchg
mov
aas
insl
xlat
mov
cmc
mov
rcll
pop
mov
idivl
rcll
mov
fdivrl
mov
xor
in
xchg
mov
mov
cmp
mov
pop
xchg
fs
js
stos
xlat
mov
push
pop
or
adc
push
fisubs
sub
roll
repz
push
aad
jl
xor
push
sahf
xlat
mov
hlt
jae
jp
pop
bound
pusha
sbb
mov
test
dec
cmpsl
mov
jno
aam
lock
outsl
jno
or
push
sahf
jnp
lret
add
andnps
adc
adc
push
add
fnsave
ret
arpl
mov
xor
mov
ss
ficoms
lods
jl
fwait
daa
ficoml
dec
xchg
sbb
bound
add
xchg
fsts
and
sub
dec
push
aam
fcomps
dec
std
jnp
ficompl
cmovg
cs
daa
push
or
cmovno
clc
cltd
fsubrl
shr
pop
and
push
int
out
test
push
addr16
adc
sub
mov
xor
adc
mov
mov
cmp
push
fstl
xchg
push
jnp
jno
pop
into
scas
adc
mov
pushf
ss
call
sub
adcl
ret
add
scas
lea
cmc
push
jnp
popf
scas
mov
pop
cmp
ret
fmuls
imulb
mov
in
cmp
test
sbb
jl
aad
pop
fldt
or
aaa
imul
sti
test
xchg
cmc
fstps
shl
xchg
jg
lods
shll
and
jno,pt
adc
sar
push
lahf
in
mov
bsr
sub
xor
xor
aam
dec
xchg
add
fists
jmp
push
mov
dec
inc
pop
sbb
dec
out
popf
dec
push
mov
ja,pt
into
das
loop
xchg
lea
popf
sub
mov
call
mov
mov
pop
sub
dec
adc
into
xchg
mov
in
lods
aam
cli
jnp
xchg
ds
mov
test
xchg
sbb
cwtl
push
pop
ss
push
jp
call
push
inc
and
mov
loopne
cmp
xchg
in
mov
xor
xchg
sub
scas
notl
fst
dec
sbb
pusha
out
xlat
dec
ja
andnps
jge
fnstenv
adc
sub
sbb
mov
mov
push
inc
pushf
sbb
mov
sub
orl
adc
jp
jae
or
outsl
ror
push
sub
cs
sbb
sub
xlat
mov
call
incb
inc
xor
pop
fidivs
xchg
or
shl
jle
fstps
sub
out
or
fstl
jp
xchg
pusha
ja
fidivrs
jge
pop
jnp
rclb
dec
xor
jne
adc
and
icebp
lock
dec
fidivs
pop
adc
loop
repz
xor
mov
not
popf
mov
add
sbb
add
or
jo
pop
mov
paddq
jl
inc
jbe
jno
int
popf
xlat
adc
jg
test
dec
andb
mov
fnstsw
fcoml
int
jmp
cwtl
or
ficoml
inc
inc
enter
ficoml
daa
movsl
lss
sub
dec
inc
xchg
aad
pop
and
jl
jl
push
jle
insb
mov
sub
mov
mov
pop
out
push
xor
outsl
sbb
jns
jns
fldenv
pushf
ds
hlt
dec
sbb
cmp
push
pop
int3
pop
xchg
pushl
cmp
pusha
stos
jbe
sub
aam
mov
jb
cmp
int3
sti
ss
fs
sbbb
and
pop
aas
sbb
inc
fwait
jp
jge
cmp
dec
test
mov
loopne
xchg
sbb
cmp
int3
and
xchg
xor
test
inc
and
pop
fadds
jp
shr
cmp
leave
pop
add
xchg
test
scas
sbb
les
out
addr16
pusha
lahf
outsb
or
add
lea
jl
dec
clc
cwtl
les
and
sbb
enter
fucomi
rorl
adc
int3
inc
xchg
rcrb
sahf
inc
daa
ss
aam
adc
pusha
and
mov
pop
and
ja
push
xchg
pop
mov
push
test
cmp
idiv
lcall
imul
movsb
aas
jg
lock
ret
std
lcall
rcrb
adc
jns
sti
or
popf
fwait
mov
jge
or
sbb
mov
lahf
aad
aad
cwtl
jg
mov
in
xchg
push
movb
mov
jle
int3
add
gs
jnp
jecxz
pop
pop
dec
into
and
ja
sbb
cmpsb
movsb
cli
push
fcomps
mov
cmp
mov
mov
je
es
fisttps
in
ret
jbe
mov
daa
sti
sbb
jmp
lds
adc
scas
ljmp
fldl
addr16
push
into
aad
xchg
sti
cmp
fcmovnbe
pop
mov
fsubs
fdiv
adc
and
loop
incl
and
xlat
mov
fcoml
ds
mov
dec
lcall
mov
stc
lcall
mov
sbb
sbbl
xor
cwtl
outsl
int3
lea
fstp
dec
into
in
pop
pop
sub
shll
jmp
push
lea
mov
sti
out
push
sbb
std
sahf
psrlw
out
sahf
hlt
cmp
loopne
sub
push
pop
cmpsl
mov
push
cwtl
pop
out
jp
cli
pop
pop
sub
push
cmp
mov
xchg
push
das
lods
adc
xchg
fwait
popf
mov
notb
inc
sub
sbb
cmp
nop
xchg
imul
mov
add
mov
sysret
inc
sbb
push
pushf
add
subb
test
push
mov
xchg
xchg
fstpl
jp
push
das
mov
into
das
and
pop
xchg
sahf
fnstenv
into
sub
lock
pop
std
fwait
movntq
cmpsb
ds
sarb
and
sub
push
sbb
ds
dec
jb
iret
repnz
adc
out
dec
mov
xchg
xor
imul
syscall
gs
shrl
mov
fnsave
outsb
lcall
sub
jp
mov
addr16
jle
jno
cltd
and
fstps
jmp
sub
lock
hlt
insb
ret
out
inc
xchg
out
test
mov
fcomi
adc
scas
int
neg
fmull
ja
mov
aaa
adc
mov
in
pop
idivl
cmpsl
mov
sbb
addr16
sbb
call
inc
iret
sbb
popf
loop
push
pop
jle
sarb
inc
sbb
xor
cmp
cld
pop
jbe
or
sti
adc
adc
adc
sbb
sbb
xor
rcr
xchg
add
mov
insl
adc
and
scas
xchg
js
sbb
pop
std
add
jmp
fwait
xor
push
pop
pop
rcrb
inc
mov
and
test
jle
pop
add
loop
mov
and
loope
scas
test
inc
nop
adc
mov
jb
std
jl
sbb
xchg
into
loope
sbb
stc
mov
jns
cmpsl
sahf
out
add
shr
ret
adc
xchg
rcl
subb
xlat
jnp
jnp
fcoml
mov
mov
jecxz
repnz
popf
movb
aad
cmp
movsl
cmp
xchg
sub
push
filds
add
xlat
sub
fisubrs
clc
popf
lods
popf
sub
jae
test
add
pop
stos
or
push
mov
sbb
xchg
fiadds
loop
sahf
push
sahf
add
sbb
sbb
push
add
jns
outsb
adc
lcall
imul
push
pop
loop
pop
adc
mov
insb
sbb
stos
push
aam
sbb
in
sub
stos
sti
imul
scas
pop
fstl
out
adc
adc
mov
pop
pusha
push
sub
hlt
or
inc
clc
or
aas
es
sti
pop
jg
jl
inc
adc
lret
jne
dec
dec
iret
push
addr16
sahf
mov
enter
pop
pop
cmp
mov
adc
ljmp
gs
push
sbb
or
dec
pop
setno
push
outsl
add
and
sbb
dec
jp
fildl
jno
adc
or
mov
fsubrs
push
loopne
push
mov
in
sbb
cmc
std
cwtl
mov
sub
and
or
daa
sub
cmp
addr16
xor
outsb
je
push
roll
sbb
fcompl
lahf
add
inc
sub
out
out
das
cmc
popf
sub
dec
insl
xchg
mov
insl
sbbl
and
frstor
ret
sub
movsb
and
jecxz
mov
sbb
gs
mov
popf
and
scas
push
ret
push
adc
xchg
dec
hlt
cmp
xor
add
int3
cmp
sbb
mov
adc
shll
mov
aam
cmp
xchg
sbb
out
sub
jg
mov
mov
push
movsl
push
pushf
cmp
jbe
dec
dec
pop
xchg
cmp
push
add
add
push
enter
pushf
std
cmp
sbb
rorl
out
xchg
dec
call
push
adc
ds
lcall
adc
push
push
sahf
addr16
out
idiv
scas
fsubrl
std
add
add
sqrtps
dec
mov
iret
mov
dec
clc
mov
scas
sub
xchg
inc
add
test
xchg
push
fildll
xor
jl
in
imul
xchg
or
movsb
int3
out
jmp
fimuls
jno
add
mov
pop
xorl
jae
xorb
fisttpl
insb
xor
inc
fldenv
iret
pop
dec
xchg
sahf
or
mov
jmp
mov
mov
rcrb
jge
lds
push
out
pop
sbb
mov
in
jecxz
jmp
fisubl
mov
sbb
push
or
push
pop
sub
or
scas
les
roll
nop
xchg
mov
pushf
or
aas
jl
and
inc
mov
xor
add
rcr
dec
enter
into
cmpsb
enter
repnz
hlt
lret
jb
scas
inc
daa
cmpsb
test
mov
shrb
addl
mov
aam
lret
xor
and
stos
into
push
mov
pushf
lock
lret
sbb
in
lahf
ja
pop
std
add
movsl
insb
call
test
outsl
pop
cmp
fistl
push
jno
push
pop
mov
ret
nop
mov
xor
push
repz
idivl
pop
xor
call
mov
fwait
push
mov
idiv
adc
pop
fildl
sbb
cmpsb
sarb
stc
out
sahf
mov
jno
push
and
adc
xchg
je
pop
imulb
sub
cmp
mov
stc
inc
negl
inc
out
dec
repnz
jne
add
mov
pop
xchg
cmp
sahf
aaa
or
lahf
push
psubd
jecxz
sub
push
pop
mov
repnz
jnp
mov
sti
sbb
into
pop
sti
mov
js
mov
sti
or
inc
dec
fs
nop
pop
xchg
fisubs
imul
xchg
lahf
cli
lahf
shll
pop
out
sub
xlat
pushf
repz
les
pop
push
outsb
cmp
pop
test
adc
pop
push
or
pop
push
dec
pop
icebp
jae
xor
sub
cli
dec
scas
arpl
jnp
cltd
or
pop
mov
dec
cltd
add
add
loopew
loop
dec
mov
pop
scas
nop
sbb
scas
popf
jb
clc
jl
rclb
ss
jge
pop
xlat
aaa
lret
mov
mov
aaa
jmp
and
test
add
jmp
inc
aad
lahf
cli
and
jno
jno
adc
ficoms
rorl
push
adc
or
xchg
out
pop
cmp
jne
push
cli
push
popf
jmp
or
push
fdivrs
mov
inc
mov
jmp
cmp
xlat
cld
sahf
mov
or
fucom
jne
add
dec
lds
lahf
fstpt
sbb
ret
sbb
jae
in
daa
pop
fidivrs
ret
cmp
xor
or
pop
cmpsl
lock
push
sbb
movsw
xchg
sbb
push
mov
mov
es
daa
pop
cmp
mov
xchg
shll
andb
stc
js
xor
push
mov
sub
inc
bound
and
lret
mov
incl
pop
xchg
push
fs
pop
call
add
out
ss
mov
cmp
jno
je
adc
loope
in
fcoml
mov
sbb
dec
sbb
cmc
fistpll
add
cs
push
jle
dec
fidivl
test
dec
into
push
cmpsl
scas
jge
mov
jno
sar
dec
sbb
adc
cmpsl
leave
lahf
or
dec
mov
dec
adc
push
sbb
scas
xchg
add
sbb
gs
imul
lahf
inc
mov
inc
inc
push
setb
dec
mull
mov
loop
add
push
int
aam
adc
nop
inc
daa
fmull
int
fildl
adc
repz
out
mov
pop
scas
test
lods
cmp
icebp
mov
mov
nop
cmp
out
mov
xchg
jnp
stc
arpl
ret
xor
gs
push
jae
dec
mov
inc
jae
or
sub
dec
pushf
adc
mov
sbb
xchg
adc
jle
cs
out
jle
outsl
out
mov
xchg
adc
push
cld
cmpsl
adc
in
push
pop
inc
int
jge
mov
notb
xlat
stos
mov
xchg
mov
rcrb
lret
orb
cli
test
jnp
cmpsb
inc
insb
and
sub
test
sbb
add
mov
lea
popf
das
call
stos
sub
inc
adcl
xchg
add
sbb
arpl
mov
and
lret
mov
aad
push
orl
cmp
xchg
pop
pop
outsl
xchg
jle
mov
insl
fldl
xchg
lcall
cmovge
out
adc
iret
out
mov
sbb
rolb
roll
and
inc
and
dec
push
inc
adc
add
shll
mov
jmp
pop
mov
adc
adc
xchg
pop
sbb
adc
das
cmp
lcall
jp
divb
aas
jne
clc
sub
lahf
adcl
dec
inc
sbb
lea
or
fmulp
fld
call
call
jmp
fsubrl
mov
push
js
test
add
pop
cltd
std
xchg
mov
out
mov
repnz
push
jne
nop
mov
in
gs
cmpsb
sbb
cli
incb
scas
popf
in
mov
hlt
jo
cwtl
mov
mov
dec
popf
push
pop
push
imul
jl
mov
shlb
rcr
popf
adc
pusha
or
repz
pop
cmp
cltd
sbb
add
popa
and
fsincos
mov
sub
lahf
repz
leave
lcall
outsl
mov
cmc
ret
mov
jg
clc
mov
inc
cmpsl
inc
cmpb
scas
loopne
mov
mov
inc
mov
inc
add
daa
cltd
jmp
mov
sbb
dec
mov
mov
test
sar
je
xchg
or
sahf
mov
mov
xor
xchg
sub
loop
dec
in
outsl
push
scas
adc
sahf
or
pop
mov
inc
pop
pop
push
call
ljmp
sub
mov
loope
imul
xchg
mov
in
pop
data16
lret
mov
inc
dec
cld
jns
lahf
hlt
dec
push
scas
jno
pop
fwait
push
xchg
lods
sti
push
mov
jg
bound
sahf
inc
outsl
pop
add
nop
jbe
enter
or
mov
fnsave
ficoms
cmp
jne
or
cltd
inc
loope
mull
xchg
scas
cli
inc
out
push
xchg
outsb
out
adc
fucomip
cld
pop
fstpl
dec
mov
sbb
sahf
fdivrp
pop
not
sbb
push
pop
fwait
mov
push
push
jne
jmp
aam
loope
loop
jge
push
pop
jno
cmp
or
insb
mov
scas
jno
cltd
xor
jmp
imull
xlat
adc
ds
pop
popf
xchg
cwtl
test
lods
ret
iret
int
add
lods
ljmp
mov
pop
int3
ljmp
add
out
inc
ficompl
movsl
inc
test
dec
sbb
dec
iret
jmp
test
cwtl
sbb
out
lcall
push
cmp
pop
icebp
sti
aaa
mov
jle
inc
pop
add
jl
xor
cmpl
insb
push
pop
push
idivl
nop
mov
aad
push
jge
mov
out
push
mov
push
sub
scas
mov
rorb
jmp
fmulp
jle
add
out
jmp
add
cmp
mov
cld
cmp
mov
loope
daa
scas
pop
repz
test
add
add
fisttpl
sti
mov
or
add
mov
outsl
mull
pushf
xor
incb
xor
mov
idivb
js
xlat
push
jmp
shll
adc
clc
out
jecxz
popa
mov
sbb
in
pop
inc
pop
fcoms
loope
fcoms
mov
mov
mov
mov
call
pop
adc
scas
inc
js
or
jge
outsb
cmp
cld
xlat
sbb
cltd
movswl
jnp
push
fcoms
fwait
rorb
in
mov
sub
sti
dec
adc
fucomp
insb
sbb
andl
mov
fsubrl
loop
add
scas
aam
into
mov
or
jno
sub
repz
stc
scas
lea
mov
push
sbb
scas
push
cwtl
sub
daa
sub
adc
outsl
inc
pop
xor
jne
test
or
push
dec
push
dec
jmp
jbe
fstl
push
and
or
mov
fnsave
push
imul
pop
rorb
fwait
inc
mov
aas
mov
les
and
mov
push
adc
mov
push
push
fidivrs
int
leave
out
ret
push
mov
jg
fidivl
jae
inc
push
cli
mov
rcll
cltd
sub
test
fidivrl
pop
mov
pop
repz
aas
scas
jg
sbb
dec
outsb
push
leave
std
cmp
jmp
test
ss
push
xor
mov
cwtl
cmpl
and
vcvtsi2sdl
rcll
pop
xchg
cmp
rorb
into
cmc
xor
in
xlat
pop
pop
inc
in
js
shll
bnd
push
add
jno
fmulp
sti
mov
sub
in
pop
jno
xlat
fstpl
pop
mov
sub
hlt
pop
sahf
jbe
pop
mov
or
mov
inc
jmp
scas
cmp
ret
mov
clc
cmp
popf
test
sar
jb
push
dec
outsl
sub
add
xchg
js
lock
jne
push
sbb
push
aas
push
shrb
adc
clc
outsb
adc
pop
pop
mov
rcll
mov
mov
inc
or
adc
call
xchg
adc
push
inc
roll
mov
mov
jb
testl
or
outsl
bound
repz
std
ljmp
and
ds
data16
or
sub
xchg
xchg
mov
cmc
jge
inc
inc
dec
or
fwait
mov
pop
inc
lret
cmp
push
test
xor
int
adc
repz
mov
clc
sub
cmp
out
mov
dec
mov
in
int
aam
sbb
cmc
sub
pop
mov
and
pushf
ss
pushf
leave
mov
or
and
inc
scas
xlat
test
push
sub
and
lea
sub
mov
mulb
adc
ret
lea
mov
inc
sbb
push
shl
out
xchg
lcall
mov
cltd
dec
jmp
pusha
mov
pop
fnclex
adc
jmp
testb
push
fxtract
sub
imulb
sar
pop
xchg
add
loope
mov
cmc
push
inc
push
fisubrl
mov
push
and
pop
cmp
iret
or
lcall
test
das
push
xchg
je
aaa
mov
inc
cld
cmp
stc
out
dec
lahf
adc
sahf
sub
mov
lock
test
inc
stc
leave
subl
add
out
jno
or
imul
sbb
lcall
mov
out
fstpt
popf
fldt
cmp
out
mov
mov
cmp
out
in
adc
jmp
adc
sub
sub
sub
sbb
scas
pop
xchg
lret
cmc
xor
push
sarb
fcoml
push
inc
dec
xor
std
bound
cwtl
dec
popa
adc
out
mov
inc
jno
test
xchg
push
out
mov
cld
mov
outsl
shl
lcall
fstl
pop
mov
aas
push
fisttps
sub
daa
xchg
mov
mov
sbbb
call
push
xor
std
xor
div
or
cmc
jl
addb
aas
arpl
cmp
jmp
and
fisubrl
ja
shlb
ja
adc
mov
imul
jno
fdivr
jne
stc
popf
pop
pop
in
xchg
mov
mov
adc
inc
push
fildl
fnstenv
fadds
adc
xchg
pop
inc
push
or
inc
mov
xchg
scas
jo
and
adc
stos
add
push
and
divl
gs
xor
cpuid
imul
sti
stos
xor
clc
sub
int3
in
rcll
mov
movsb
adc
pop
enter
inc
mov
adc
aas
out
adc
mov
mov
mov
or
add
mov
je
adc
xchg
aaa
and
sbb
es
ss
dec
fwait
loope
cmp
sbb
shl
lret
jg
cmp
lods
cmp
pop
and
or
lods
push
pop
push
jge
pop
xchg
dec
dec
dec
addb
pop
sub
je
jno
bound
lock
cltd
or
or
cmpb
arpl
mov
fucomip
push
loopne
rclb
push
xlat
je
lock
adc
xlat
negb
fisubl
and
std
adc
int3
addr16
enter
shrl
jne
lret
pushf
mov
jns
mov
dec
cmp
xchg
jnp
fstpt
jle
ja
pusha
mul
adcb
ss
add
loope
xor
movups
add
outsl
jne
movsb
lcall
mov
sti
pop
testb
pop
enter
loope
push
ret
push
out
cmp
xchg
inc
and
cld
and
add
push
mov
or
fs
cltd
cmc
mov
clc
mov
mov
fimuls
push
iret
ret
aaa
fldenv
dec
stos
push
lods
sti
adc
dec
or
enter
aas
bound
fidivrs
sti
ja
mov
daa
out
mov
inc
add
xor
pop
test
pusha
mov
call
sbb
jmp
xor
mov
int
or
into
and
jp
paddd
enter
rcrl
sub
cmp
dec
pushf
fisubl
or
test
cmc
cmp
cmp
sahf
add
xchg
sbb
inc
pop
mov
sbb
mov
and
xchg
sbb
xlat
test
out
int
mov
jno
pop
sub
outsb
dec
add
rolb
fcoms
iret
imul
push
es
hlt
rol
xchg
inc
mov
mov
mov
out
into
xchg
inc
add
loop
or
cmpsb
fidivrs
lods
add
add
inc
sub
pop
xor
adc
cmp
clc
cs
outsb
sub
adcl
sahf
mov
push
mov
addr16
arpl
push
test
dec
lcall
lods
stos
clc
mov
xchg
in
inc
ds
dec
xor
adc
inc
gs
lcall
jno
mov
iret
addl
test
mov
push
in
and
jno
mov
sbb
xor
sahf
outsb
jo
imul
stos
stc
lea
repnz
push
jno
aam
mov
jecxz
add
xchg
push
dec
lahf
mov
in
push
push
rorb
je
mov
push
aad
lds
xchg
das
cmpb
or
fsubrl
aas
push
inc
ds
cmp
push
mov
js
leave
sahf
daa
shlb
aam
addr16
cld
jns
mov
call
out
clc
decb
sbb
mov
sub
sub
jnp
sbb
je
js
xchg
imul
lahf
rclb
orb
dec
xchg
cmp
clc
adc
inc
div
sahf
xchg
mov
or
xchg
push
aaa
mov
add
aam
mov
imul
pop
add
loope
ss
pop
out
xor
call
not
mov
nop
call
rcll
mov
push
loopne
inc
out
dec
hlt
xchg
prefetchwt1
lea
push
xchg
push
test
mov
xchg
or
pop
jno
pop
mov
sub
cmpsl
cmp
mov
out
imull
lahf
jle
out
fcomp
or
fwait
xchg
sbb
xchg
push
cmp
in
inc
xor
add
sbb
std
adc
outsl
sahf
mov
fstp
shll
in
leave
dec
pop
jnp
sub
xor
adc
mov
mov
cmp
adc
xlat
pop
xchg
xchg
sbb
daa
ja
cmp
cmp
push
jmp
sub
adc
fs
arpl
test
push
adc
sti
dec
push
nop
lret
xor
xchg
cmc
mov
pop
fnstenv
adc
roll
outsb
push
xchg
popa
test
jae
icebp
popa
movups
mov
push
pop
nop
xchg
cmp
jb
das
nop
addr16
pop
adc
sub
mov
sbb
pop
sbb
dec
sbb
xor
adc
xor
insl
and
add
mov
pop
bound
fcomps
and
je
mov
sbb
pushf
add
mov
cmp
into
sub
adc
push
jbe
xchg
pop
mov
pop
push
shll
or
insl
and
adcb
or
shr
ficoml
jb
fwait
mov
js
out
pop
je
xchg
cmp
mov
mov
repnz
ficoms
jg
int
addr16
jp
popf
mov
push
adc
mov
dec
mov
adc
nop
lcall
jb
dec
dec
sub
repz
sub
sbb
sbb
into
cmp
pop
or
add
mov
mov
mov
xchg
loope
xchg
fwait
push
sahf
ss
pop
stc
fsubp
xor
pop
fbstp
test
adc
sbb
mov
fiadds
out
js
sub
popa
pop
push
xor
popa
fiaddl
test
addr16
testl
mov
xchg
dec
xchg
add
mov
xchg
mov
mov
mov
leave
aas
mov
xchg
popf
push
jno
insl
stos
mov
xchg
mov
sbb
or
cmp
arpl
jg
mov
jno
mov
xchg
fisubs
test
adc
out
aaa
pusha
leave
mov
pop
jmp
rcll
pushf
pop
pop
sbb
jp
push
xorb
adc
mov
test
or
jecxz
fidivrl
insl
mov
cmp
adc
out
xchg
lcall
lahf
ror
sbb
cmp
or
insb
hlt
imul
push
fiadds
clc
xchg
idivb
lea
push
cld
add
sub
dec
fidivrs
out
outsl
mov
insb
inc
lods
or
pop
or
enter
sbb
mov
inc
xchg
lds
rcrl
sub
mov
add
sbb
je
push
out
pusha
push
popf
cmpsl
adc
jns
scas
mov
mov
fmuls
jno
ret
inc
cmpl
movsb
mov
xlat
outsb
cmp
popa
int
inc
ret
mov
lret
jg
jno
xchg
add
clc
sbb
sbb
lods
or
fistl
iret
lahf
call
inc
xor
repnz
sbb
cmp
sar
mov
push
push
dec
incb
dec
jno
ficomps
xchg
das
lods
xor
sbb
shl
xchg
and
xchg
jbe
ret
and
sub
add
xorb
mov
jnp
sbb
jg
negb
jno
lds
jbe
fwait
mov
pushf
jno
mov
fists
jns
xchg
rcrl
add
arpl
out
shlb
mov
fucomip
outsl
shl
cmc
mov
int
xchg
mov
fwait
div
pop
out
cltd
sbb
neg
push
mov
cmp
sahf
ljmp
sbb
setnp
idivl
push
dec
or
bound
mov
add
fwait
dec
mov
das
sahf
negl
ja
mov
sbb
shlb
sbb
rorl
ds
xor
and
sbb
mov
fiadds
mov
xor
sbb
leave
sbb
faddl
xor
rcrl
mov
fidivrs
je
in
jle
orb
mov
lea
cld
sbb
testl
xor
cwtl
das
cmp
ret
fisttpll
or
iret
sarb
out
mov
lock
mov
rcrb
popf
sbb
mov
sbb
outsb
fwait
mov
cmp
outsl
mov
push
adc
call
push
inc
cmp
lret
mov
add
fisubs
jl
sbb
iret
push
ljmp
push
push
push
setnp
aad
jecxz
jno
inc
inc
iret
out
push
filds
jecxz
js
inc
lahf
jp
test
cmpl
into
je
inc
cmpsb
xchg
pop
pop
jge
fwait
add
cltd
mov
sub
inc
cmp
mov
les
pushf
pop
cwtl
sbb
sbb
and
sbb
sahf
adc
jp
hlt
test
shl
and
insl
imulb
std
push
repnz
sbb
mov
into
add
insb
pusha
ljmp
rolb
mov
add
mov
pop
xor
pushl
fwait
test
jbe
sbb
adc
or
mov
data16
subl
sbb
mov
jne
call
lahf
arpl
mov
cli
rcrl
cmp
pop
lcall
loop
pop
fdivrp
push
adc
push
dec
sti
test
xor
je
nop
ljmp
cmp
sbb
repz
mov
jbe
xchg
push
gs
adc
jg
and
out
cld
inc
in
fwait
test
daa
in
test
sarl
fbld
call
sahf
mov
insl
fisubrs
sahf
addr16
cmp
xchg
fdivrl
jb
fcmove
js
nop
mov
paddd
fnstcw
push
cmp
cmp
pop
popf
lock
aad
mov
int
je
pop
sahf
cmp
or
sbb
fsubrl
push
adc
xchg
ss
rcrb
add
add
cmp
mov
add
sti
add
repz
mov
xchg
hlt
cmc
loopne
mov
cwtl
jnp
mov
xor
mov
cmp
popf
add
es
add
jbe
jo
jo
nop
into
xchg
and
ja
daa
fiadds
bnd
or
int3
fdivrl
es
test
fnstcw
cmp
xchg
vmovlpd
jmp
xchg
inc
ret
cltd
inc
addb
mov
divl
fwait
mov
push
xchg
sub
adc
cmpl
enter
fcmovnu
shrl
xchg
or
fstp
arpl
mov
xchg
decb
sbb
loopne
and
mov
pop
or
jp
repnz
fldln2
lcall
xchg
jge
jle
std
bswap
pop
push
mov
andb
push
insb
imul
mov
lcall
jae
sbb
dec
insl
mov
and
fwait
insl
adc
ret
arpl
mov
scas
or
imul
jg
popa
mov
in
icebp
push
jle
sbb
fneni(8087
ds
pop
mov
gs
cli
out
push
mov
and
xchg
leave
fcomps
outsl
jnp
idivb
push
loop
jae
loope
sti
cmp
aad
fmuls
adc
inc
mov
adc
cmp
lcall
mov
xchg
inc
imull
clc
arpl
or
pop
jl
ljmp
xchg
jmp
or
lds
aas
add
fcmovu
dec
xchg
cmpsl
mov
inc
in
cmp
pop
das
cs
push
addr16
xchg
mov
nop
movsb
nop
jge
mov
stc
xchg
mov
jge
xchg
cmp
jno
rcll
cmp
faddl
pusha
repnz
mov
dec
adc
cmc
stos
jl
push
mov
fstl
push
push
cmp
add
mov
xchg
xor
mov
or
pop
pop
aam
mov
jge
mov
sbb
outsl
xchg
cmp
popa
aam
aas
stos
dec
sbb
sbb
xor
and
xchg
add
inc
pop
jecxz
mov
adc
push
cmpsl
jb
or
pop
mov
out
sti
pop
add
sub
lds
dec
popf
mov
sbb
lea
sbb
negb
mov
push
push
push
push
jle
iret
popa
sub
xor
push
or
jbe
cmp
leave
add
inc
imul
repz
mov
adc
jge
jecxz
pushf
dec
ja
sub
jg
xchg
daa
jg
sbb
adc
cmp
xchg
sarb
xchg
push
sbb
out
jmp
push
xlat
jb
push
cmp
adc
addb
cmp
ljmp
shll
push
jb
popf
mov
outsl
and
adc
cwtl
decb
pop
cli
test
mov
or
push
aad
popf
cmp
mov
pop
pop
stos
jp
mov
adc
loope
sub
dec
dec
ret
iret
xchg
jmp
pop
xor
pop
sub
ret
xchg
pop
out
mov
scas
dec
test
loopne
push
pusha
mov
loop
aad
adc
in
mov
lds
xchg
pop
add
adc
xchg
push
add
scas
add
pop
or
and
sahf
pop
push
fwait
jg
jl
dec
lea
cmp
pop
mov
scas
je
bound
dec
outsb
ficomps
mov
inc
mov
fs
out
sbb
call
hlt
std
mov
lcall
aad
fcomps
ds
in
pop
push
fcmovu
std
adc
xor
ret
out
cltd
rorb
and
xor
xchg
mov
jno
flds
dec
test
int
imul
movsl
pop
mov
mov
xlat
out
or
mov
sub
cmp
inc
add
shld
jmp
push
lret
adc
test
jecxz
sub
mov
stos
ds
pop
fdivrl
or
out
fimull
lret
xchg
xchg
cmp
pusha
incb
andl
mov
lock
cmpsb
jno
es
mov
into
shlb
mov
or
mov
incb
outsb
lret
rcr
fwait
xchg
pop
adc
inc
lock
push
cltd
xor
sbb
dec
call
addr16
xlat
cmp
lret
sbb
ss
test
sbb
or
shlb
mov
fsubrp
add
inc
jl
in
rcll
negb
xchg
inc
jle
mov
cwtl
push
push
test
push
xchg
rdpmc
mov
cli
lods
mov
cmp
adc
mov
push
mov
mov
and
or
mov
jns
and
inc
mov
xchg
pop
pop
es
aas
into
adc
jge
mov
dec
vdivpd
jmp
sti
mov
jecxz
inc
sbb
lahf
or
xchg
iret
mov
xlat
fwait
jno
rorb
adc
pop
xchg
push
cltd
mov
mov
ja
adc
lahf
pusha
adc
add
mov
mov
mov
iret
cmpsl
xor
jo
iret
negl
and
divl
mov
jp
xchg
lods
sti
movsl
test
leave
adc
push
jo
shlb
test
mov
jge
mov
addr16
push
adc
cltd
lret
dec
addr16
pop
xor
mov
push
xchg
push
jle
jnp
popf
xchg
lods
sti
sbb
add
orb
xor
das
lret
nop
popf
cmp
lods
out
adc
or
jmp
cbtw
or
push
fnstsw
repnz
sbb
pop
mov
jns
imul
sbb
and
scas
add
jno
ret
ds
test
into
pop
ret
add
in
sub
adc
jmp
xlat
inc
mov
xchg
subl
loopne
mov
sbb
add
pop
outsb
ja
cmp
cli
xchg
xor
int
sbb
pop
hlt
enter
jb
sbb
lods
and
cmp
pop
in
pop
xchg
cmpsb
sahf
sub
iret
inc
iret
jp
fmuls
cmp
popl
aaa
lahf
sarl
fsubp
jg
push
mov
imul
fldl
cmpl
dec
popa
sub
push
inc
scas
add
xchg
invd
loopne
pushf
jle
das
jmp
xor
and
test
lahf
ficomps
in
aad
lahf
push
insb
notl
popf
xchg
dec
adc
dec
mov
jg
mov
fstpl
repz
sbb
pop
cmp
mov
cli
cmp
mov
xor
sti
mov
jg
inc
es
out
pop
loope
daa
aad
cld
out
icebp
loope
js
pop
or
mov
xlat
cmp
cli
and
std
jg
jg
or
sti
int
lret
mov
dec
push
mov
fisttpl
jp
lock
das
xor
test
add
fprem1
outsb
mov
adc
lods
mov
cld
jne
clc
adc
add
leave
sbb
fs
sbb
sbb
push
adc
cltd
mov
daa
scas
cmp
jge
jae
fsts
pop
jne
out
loop
inc
jo
ficoml
sti
sbb
hlt
sahf
test
dec
sbb
push
in
sbbb
push
dec
outsb
jge
pop
scas
add
cltd
sti
test
lahf
xor
outsb
orps
sbb
xor
dec
sbb
rcrl
fidivs
stc
pop
test
outsl
and
or
jmp
push
and
mov
nop
sti
popf
pop
stos
adc
lds
daa
sbb
cmp
sub
xchg
xchg
push
add
push
mov
dec
imul
mov
mov
push
or
mov
fisttps
jmp
movsb
xchg
jle
sahf
fwait
mov
cmp
xchg
loop
pop
out
sbb
outsl
enter
or
cmp
jno
adc
enter
int3
in
add
add
lea
sbb
xchg
dec
cmc
adc
mov
ret
les
pusha
inc
mov
mov
sub
mov
add
pop
dec
or
adc
loop
in
mov
xchg
sbb
negb
xchg
push
or
cs
in
add
xchg
loope
mov
add
jmp
pop
cmp
cmp
adc
and
into
daa
pop
cmp
mov
dec
mov
jg
push
mov
popl
jl
fidivrs
fildl
jo
mov
sahf
in
insl
repnz
and
lea
lahf
enter
pop
jns
dec
jmp
daa
decl
cwtl
push
ret
fstpt
adc
popf
outsl
in
ret
movswl
sbbl
sub
sahf
xchg
fisubl
fcmovnu
daa
mov
dec
jo
test
or
leave
repz
loop
fnstsw
xor
in
add
or
jmp
or
and
loopne
sbb
sti
jl
jmp
xchg
popf
adc
iret
pushl
push
pushf
ja
adc
ffree
fwait
ret
mov
jmp
enter
jecxz
jns
jnp
loopne
adc
xchg
pop
sbb
jnp
lods
fistpll
aas
push
jp
mov
sbb
inc
xchg
aad
mov
xchg
xchg
jae
inc
mov
test
aad
xor
fsubrs
xor
in
dec
leave
or
xchg
lsl
push
cmc
std
pop
sahf
sub
in
loope
jnp
lret
cld
mov
jns
add
out
add
dec
adc
mov
cmc
mov
add
scas
cwtl
rcrb
ss
push
lods
push
fistpl
cltd
negl
or
xchg
fcoms
pop
mov
aam
dec
dec
mov
enter
dec
shl
jne
pop
adc
outsl
mov
cwtl
adcl
lret
jp
inc
call
adc
cmp
or
mov
aaa
push
pusha
add
push
pop
mov
and
pop
inc
mov
jge
icebp
jae
or
outsl
imul
pop
inc
sti
mov
std
test
mov
adc
sarb
scas
rcl
push
loope
xchg
add
das
push
addb
mov
sub
or
mov
lahf
popf
ret
fmulp
psllq
pop
adc
jle
pop
leave
xchg
das
out
xchg
cmp
push
xchg
sbb
int3
inc
push
dec
mov
jns
lea
dec
push
popf
out
xchg
test
loope
dec
cld
mov
insl
and
cmp
and
jae
xchg
cmp
and
js
jnp
sbb
sbb
add
xor
cmc
jge
lock
hlt
mov
xchg
jge
jmp
mov
lods
xchg
and
lods
push
sbb
jnp
into
or
in
rcll
aad
mov
lret
cwtl
jns
test
xor
jp
hlt
loop
lods
jno
dec
rcl
adc
lods
sahf
imulb
scas
adc
and
dec
icebp
or
loope
jp
mov
nopl
lahf
js
idivl
iret
in
push
fldt
dec
fldl
xor
xchg
sub
ds
mov
popf
add
out
nop
shrl
iret
jae
pop
add
lcall
push
loop
fbstp
loopne
dec
jg
mov
xchg
push
xchg
inc
sbb
test
rol
sbb
xchg
adc
jno
insl
cmp
dec
push
xchg
fistps
or
ffree
mov
sbb
xchg
cmp
sub
or
dec
out
fcomps
mov
int
sahf
mov
dec
pusha
aam
sar
mov
mov
push
inc
xchg
jle
das
int3
adc
push
test
sub
add
push
in
inc
ud2
imul
stos
out
stc
icebp
adc
out
add
adc
scas
xor
das
adc
outsl
push
and
or
data16
xlat
cmp
pusha
jae
ss
push
pop
popf
fmull
sbb
mov
ficompl
xchg
cmpsb
hlt
in
xchg
mov
shl
aad
adc
popl
dec
cli
or
push
addr16
or
pop
pop
aad
mulb
adc
jg
xor
xlat
sbb
and
xchg
mov
dec
sbb
sahf
push
int
lret
mov
nop
push
je
aaa
jge
ret
cwtl
jp
ret
add
push
ss
and
push
jno
sti
movsl
push
adc
cld
enter
mov
pop
fsubr
mov
daa
dec
popa
mov
and
stos
mov
mov
add
xchg
cmpsl
pop
jp
cld
sbb
mov
add
lcall
ss
aad
sbb
aam
push
inc
mov
dec
dec
push
arpl
bnd
xor
pop
out
or
inc
adc
insl
sub
sbbb
adcl
pop
xchg
xor
lds
popf
sbb
clc
or
pop
fidivrs
push
push
rorl
pop
pop
mov
stos
test
sbb
je
xchg
cmp
push
mov
inc
pop
push
mov
jg
pusha
jnp
stos
jae
mov
dec
pop
or
cmc
sub
jnp
add
xchg
lds
adc
xchg
nop
adc
pop
add
jp
lock
lds
pop
adc
shrl
fiaddl
xchg
xor
xchg
ja
inc
sbb
push
enter
mov
add
fistpl
add
cmp
icebp
cmp
stc
mov
aam
in
cmpsb
inc
mov
or
in
pop
repz
pop
add
mov
movsl
faddp
jp
push
fwait
subb
add
lds
daa
movsl
or
subb
fisttpl
bound
or
sub
jbe
jbe
lods
jne
mov
jl
adc
xchg
push
mov
shlb
jg
push
shrl
xor
ltr
inc
xchg
cld
push
sbb
sbb
xlat
inc
sbb
fdivrp
mov
push
clc
out
or
pop
ret
nop
in
jmp
mov
mov
out
aaa
sahf
dec
cld
add
in
shr
jle
out
fldt
fstl
and
sub
fildl
pusha
push
and
cltd
jg
out
outsb
mov
mov
xlat
and
lahf
push
sbb
imul
dec
push
outsb
shrb
jb
fbstp
pop
mov
add
pop
or
and
test
rcrb
test
jne
inc
lds
cmc
outsl
jle
cli
adc
add
hlt
cmp
xor
xor
mov
jne
push
std
inc
std
xchg
push
jp
push
mov
lcall
xchg
mov
aad
fisubl
xchg
xchg
movsb
test
pop
incl
jnp
xchg
cmp
or
pop
outsb
cmp
sub
jns
and
stc
mov
std
pushf
cmp
dec
xchg
sbb
xlat
fcoml
nop
pop
xor
xchg
enter
nop
hlt
int3
cld
clc
inc
fwait
sahf
sbb
mul
jb
sub
add
mov
lock
inc
cltd
cmpsb
mov
jns
push
sub
cli
idivl
add
sbb
ret
mov
jp
xchg
cli
jno
jp
adc
sub
xchg
cmpsl
insb
jo
ljmp
cmp
out
aam
arpl
out
movsl
stos
cmpsb
cwtl
sbb
mov
jno
push
imul
insl
sahf
jne
lcall
mov
mov
cmpsl
cld
mov
ja
push
sbb
stc
jp
sub
mov
mov
sub
add
lea
mov
xchg
xor
pop
nop
pop
push
mov
inc
decb
pop
push
add
sub
loopne
mov
adc
and
jge
in
imul
xchg
pop
dec
out
cmpsb
push
xchg
iret
xchg
mov
mov
scas
mov
cmpsl
leave
lahf
imulb
decb
jno
loop
fbstp
or
mov
add
loope
cmp
mov
hlt
aam
lret
out
add
or
mov
pop
daa
ret
push
lcall
out
std
jge
adcl
enter
in
push
ret
dec
jbe
test
ret
push
sub
and
cmp
std
mov
cmp
push
add
sub
popa
add
aaa
xlat
pop
addr16
shr
lods
mov
ss
rcrl
cmp
test
inc
ret
loop
aad
xchg
mov
jp
sahf
or
mov
and
lahf
int
das
sti
lret
xor
lar
orl
or
sbb
jno
mov
std
test
inc
mov
mov
int3
fiaddl
pop
dec
or
les
jmp
sub
arpl
aad
xchg
push
outsb
sahf
push
or
mov
mov
test
push
out
mov
jmp
daa
insl
and
outsl
je
aad
out
or
pusha
mov
add
adc
les
fcmovnbe
mov
sbb
loopne
stos
mov
jg
jg
add
pop
jno
popf
jl
cmp
sbb
sub
cwtl
js
dec
add
pop
mov
lcall
mov
mov
inc
popa
movsl
sub
jns
cmp
pop
xchg
call
xor
sub
mov
and
inc
mov
subb
dec
mov
inc
fsubrs
test
or
jg
xor
adc
mov
cli
push
mov
sub
aaa
rorb
xor
lock
mov
sub
or
lret
shrb
loopne
push
pop
repz
sbb
xlat
sbbb
add
aam
or
aad
or
das
mov
jnp
xchg
aaa
push
out
pusha
cmp
notb
and
fldenv
je
lret
cmp
arpl
loop
jl
push
push
mov
adc
out
cli
inc
mov
popf
lahf
outsb
push
xchg
dec
cmpsb
ficomps
nop
loope
pop
inc
lahf
adc
xchg
push
aam
ljmp
adc
sub
pop
enter
shll
fistpl
fcmovbe
cmp
into
xor
cltd
out
or
ret
lret
sub
jl
mov
lret
insl
loopne
lahf
add
out
mov
call
into
mov
and
fdivrl
cmpsl
xor
cmp
jecxz
fldt
stos
repz
pop
into
jp
jnp
push
std
push
sub
pop
mov
jecxz
xor
insb
movsb
ficomps
fistpl
xchg
push
pushf
mov
jae
bound
decb
cmp
das
cmc
cmc
out
in
rcrb
adc
inc
and
jnp
pop
arpl
inc
lods
push
add
mov
les
mov
imul
jg
add
sub
out
mov
orb
movsb
mov
jno
jbe
cltd
fsts
xor
adc
jno
imul
sbb
push
loopne
sub
pushf
scas
cmp
ret
add
lds
jbe
aas
mov
jne
mov
jo
out
mov
ficompl
push
dec
test
jno
rclb
mov
pop
lds
fwait
mov
add
in
and
push
fidivrs
cli
and
mov
xor
mov
sbb
adc
ret
sarb
pop
sbb
push
or
jle
add
out
divb
rorb
push
mulb
jl
dec
sarl
pop
ja
cmp
int3
cwtl
rolb
pop
testl
xchg
pushf
pop
lret
sbbl
ret
mov
mov
outsb
aad
add
out
jo
imul
push
aam
lahf
jecxz
cmc
cmp
jno
bound
inc
sbb
mov
jl
sbb
sbb
add
add
bnd
and
mov
jmp
loopne
daa
movsb
cli
fs
push
mov
movsl
leave
xchg
sahf
or
sub
push
mov
push
sbb
lds
mov
lea
cli
sbb
xchg
mov
ficoml
cltd
pop
add
jmp
dec
fisttpll
stos
in
push
sbb
xor
adc
jnp
add
andl
mov
and
cmp
js
cld
icebp
mov
push
or
pop
pop
mov
inc
pop
xor
inc
hlt
pop
xchg
notb
pop
jae
xor
lret
outsl
adc
xchg
pop
fstl
ja
inc
sbb
fstps
ret
cwtl
pushl
jns
add
testb
cld
xchg
push
test
out
in
push
mov
jge
testb
sbb
add
mov
lea
mov
lahf
cmp
fcmovu
fld
sbb
mov
std
sahf
mov
cmp
je
mov
pop
pop
xchg
data16
jg
add
lcall
pop
rol
push
sub
jnp
pusha
xchg
sbb
lods
sub
jbe
pop
jne
cltd
sbb
xchg
jp
or
insb
sbb
aas
jne
shl
or
xchg
fxch
pop
jne
cltd
push
shll
scas
or
stos
sar
xchg
sbb
repz
pop
popf
pop
insl
adc
xchg
fstl
push
or
adc
xor
mov
in
pop
mov
cmpsb
pop
daa
xchg
push
daa
xchg
mov
ja
dec
mov
sub
fwait
sahf
mov
test
mov
popf
aas
cmp
inc
push
mov
outsb
adc
cwtl
xor
dec
jae
jns
sti
jp
neg
les
aam
fcompl
add
mov
and
add
jl
mov
bound
pushf
addr16
add
mov
xchg
inc
test
mov
mov
fmul
push
mov
jno,pt
adc
xchg
fistps
add
or
into
xor
bound
mov
lea
xchg
or
add
sbb
mov
lds
jnp
xlat
and
test
push
imul
xorl
add
xlat
mov
mov
jne
dec
xor
mov
imul
mov
or
adc
jmp
sub
xchg
jne
adc
jns
aas
ret
fimuls
cwtl
xor
or
lret
adc
cmp
sti
jl
xchg
adc
inc
loope
adc
sbb
xchg
push
fld
sbbb
sbb
rol
pop
pushf
add
das
push
rcrl
sti
movl
xchg
sbb
sub
pop
sahf
and
cmp
cli
pop
add
push
cmp
sar
in
sbb
rorb
pop
pop
or
ja
cmpl
popa
sti
in
mov
or
mov
cld
mov
mov
std
sbb
inc
xchg
and
push
mov
outsb
push
or
pop
test
and
push
int
std
pop
pop
fmuls
hlt
outsb
sbb
popl
mov
aas
lcall
xchg
mov
imul
push
push
xchg
mov
push
mov
push
fnsave
mov
in
lret
mov
mov
jle
divps
push
gs
mov
pop
adc
std
jg
stos
and
push
xchg
xchg
repnz
xor
ret
fnstsw
or
imul
fisubrl
add
repnz
and
sti
popf
push
mov
lods
ret
adc
cmp
movsb
mov
lahf
mov
and
push
shlb
loope
icebp
cld
mov
cmp
and
cmp
pop
add
pop
jge
cmp
cmp
in
mov
or
ja
sbb
fs
push
inc
mov
inc
mov
loope
push
push
jnp
scas
or
cmpb
push
into
jae
pop
xchg
sub
mov
jmp
jae
inc
xchg
pop
popf
aad
xchg
mov
maxps
or
jg
xlat
xor
aas
sahf
push
movsl
cld
xchg
outsl
xchg
sbb
xchg
or
sbb
jle
fisubrs
cmp
mov
repz
push
push
pusha
cli
or
dec
push
xchg
add
ds
push
mov
mov
jge
pop
mov
aas
cltd
jle
add
test
pushf
mov
rcr
mov
push
mov
int3
insl
pop
or
in
outsb
call
lret
jle
xchg
xchg
das
sbb
loopne
mov
loopne
rorb
sti
ds
xchg
and
lahf
into
or
hlt
in
cld
mov
cwtl
sub
xor
nop
popl
xchg
repz
faddl
or
popf
aas
jle
or
pop
jg
arpl
cld
divb
leave
fcomip
out
ja
sub
fldt
pop
not
xchg
fstl
xchg
lods
sbb
sti
aaa
pushf
add
push
nop
adc
ja
popf
cli
adc
push
push
sbb
push
xchg
pop
add
aam
rcl
cmp
mov
inc
push
pop
fdivl
push
sbb
xor
xchg
lahf
mov
add
cwtl
jns
idivl
pop
mov
dec
pop
pushf
pop
sub
fstp
push
mov
sbb
fsts
push
fwait
nop
pop
push
setl
mov
sahf
mov
add
push
xchg
outsb
sbb
mov
jge
aad
xchg
jecxz
mov
add
cmp
outsl
mov
adc
or
cmpsl
xchg
push
and
mov
jle
sbb
pushf
pop
je
or
inc
loopne
aas
fists
or
sub
fmulp
scas
mov
dec
or
sahf
jecxz
xchg
sbb
lock
push
lods
pushf
adc
jnp
fstl
jnp
ss
xchg
test
sub
jnp
and
ret
push
pushf
mov
in
fistpl
ss
mov
sbb
ja
and
xchg
pop
outsl
shlb
in
cmpsl
sahf
jl
test
xor
add
or
dec
xchg
mulb
fstl
cmp
imul
mov
loop
sbb
push
cld
enter
xlat
mov
push
jg
iret
mov
mov
pmullw
push
sbb
cmpl
sbb
cwtl
push
cmp
xchg
aam
xchg
icebp
mov
push
sbb
imul
mov
or
lock
faddp
cmp
sbb
pop
cli
jne
fisubrl
lcall
imul
loopne
loopne
mov
fstps
mov
into
push
jns
xchg
pop
fimull
cmp
sbb
fadds
mov
sti
js
mov
lods
out
xchg
fiadds
jle
mov
daa
dec
aaa
xchg
push
mov
iret
repz
pop
je
mov
pop
pop
sub
pushl
mov
shrl
mov
jmp
mov
rcll
je
ljmp
divb
push
cmp
inc
inc
xchg
ds
mov
xchg
stos
push
cmpsb
jns
push
pop
xlat
loope
adc
movsl
adc
sbb
lea
push
add
push
sti
shufps
sbbl
das
nop
sbb
mov
add
les
in
dec
out
gs
rcrl
add
loope
testb
and
or
add
std
mov
ret
sahf
jl
mov
lcall
lea
push
repz
ja
jp
adc
inc
dec
pushf
cmp
int
fs
in
lods
mov
in
fwait
adcb
in
scas
sbbl
jbe
sbb
mov
les
lahf
mov
in
mov
aaa
mov
pop
in
adc
hlt
stc
sar
mov
pop
in
shr
adc
cmp
pop
ss
rcrl
shll
push
lahf
scas
cmp
mov
inc
and
jne
les
rcrl
mov
sub
pusha
add
push
addb
xlat
cltd
ss
fwait
inc
iret
push
mov
inc
ror
je
cwtl
fwait
pop
add
fwait
push
sahf
flds
cld
cmpl
sub
xor
je
lcall
dec
sub
pop
sahf
push
pop
sub
rclb
jne
mov
imul
cmp
add
cmpsl
popf
fnstenv
and
pop
lret
sbb
push
pusha
outsl
jno
or
xchg
sub
popf
mov
decb
in
sub
xor
fstl
jge
push
lcall
sbb
adcb
mov
test
pusha
popa
sahf
imul
mov
imul
insl
mov
or
inc
push
push
pop
ret
ret
xchg
sti
cltd
push
cmp
jo
adc
jo
out
test
push
push
add
sbb
std
sahf
push
and
fistpl
pop
bnd
scas
ja
jl
jg
push
push
fnstcw
cli
jno
or
aad
sbb
sbb
pop
incb
push
movsl
iret
xor
popf
shll
push
xchg
pop
movsl
insl
mov
xlat
add
push
xchg
pop
mov
push
mov
pop
cmp
inc
xor
popf
jge
mov
testb
ss
sub
mov
into
test
mov
dec
pop
inc
inc
lret
push
sub
and
aam
sarb
imul
mov
insb
jmp
add
mov
popf
mov
cmpsl
loop
fwait
mul
addb
jne
pop
aad
or
adc
lock
inc
jno
outsl
and
inc
adc
push
fcompl
jne
push
repnz
dec
pop
pop
int3
push
cmp
popa
sbb
sub
jp
ds
aas
sbb
adc
in
dec
lods
fisttpll
and
movl
fwait
int3
stc
fldl
cld
es
sub
ljmp
xchg
nop
test
inc
int
aaa
je
dec
fadds
cmp
and
lods
ja
rorb
mov
sub
mov
fnop
pop
jg
ja
push
mov
shll
pusha
inc
insl
or
push
cltd
out
sbb
xchg
mov
jle
pop
push
adc
xchg
das
fsts
sbb
mov
mov
cld
adc
xlat
push
mov
or
cltd
dec
ds
xchg
mov
push
sahf
push
cmc
xchg
inc
mov
jmp
orl
nop
xchg
pop
push
in
pushf
imul
mov
movb
cwtl
lret
addr16
insb
push
arpl
sbb
add
add
pop
mov
jle
fiaddl
mov
pusha
push
push
fisttpl
cmpsl
pop
das
outsb
jp
fisttpl
jno
xchg
aad
mov
and
out
jno
add
cmp
pop
fnstcw
xchg
sbb
into
fsts
mov
mov
pushf
fistpl
lcall
pushf
mov
add
pop
jle
inc
fimuls
popf
ret
push
push
jae
inc
xchg
js
pop
cli
push
enter
outsl
add
ud2
sub
ja
outsl
repnz
jecxz
lahf
sbb
frstor
negb
cli
jbe
ret
pop
push
mov
or
add
push
push
sbb
xchg
or
outsb
jbe
add
xor
mov
sub
xchg
adc
sbbl
mov
mov
mov
sbb
fiaddl
xchg
fsubl
rclb
test
daa
jnp
nop
jmp
cmp
mov
into
sahf
fcompl
insb
shll
lahf
sub
fsubrs
push
aad
int3
dec
movzwl
xchg
and
jbe
mov
out
test
shrb
fs
lret
xorb
out
std
pop
cli
out
pop
jno
leave
push
pop
sub
pop
fdivrp
sbb
test
jle
cmp
add
fs
and
mov
fucomp
scas
pushf
cmc
out
loop
push
ret
sbb
push
lahf
fisubs
rorl
push
cmpsl
in
repz
dec
in
ss
jbe
and
pop
sbbl
inc
cltd
fstps
sub
pop
or
sti
cmp
in
and
fstps
pop
push
push
outsb
mov
div
outsb
pop
out
xchg
cli
jmp
pop
jbe
insl
dec
mov
sub
or
push
aaa
dec
fcom
xor
loopne
mov
fldcw
xchg
outsl
cltd
sub
loop
sarb
mov
push
push
mov
les
cmp
out
faddl
push
lea
aad
ficoml
pop
pushaw
dec
das
cmp
pop
jl
iret
or
mov
test
jle
les
jo
cwtl
je
popf
rcrb
xchg
cwtl
faddl
xchg
lahf
mov
pop
mov
cmp
popa
adc
ret
std
repz
and
push
sbb
xchg
daa
fwait
aaa
inc
push
adc
fcmove
lahf
push
mov
aam
sbb
mov
testb
ja
pop
test
rol
lcall
sbb
addb
or
jno
dec
cmp
pop
cld
shlb
push
ja
pop
das
pop
mov
push
mov
jecxz
cmpsb
enter
iret
mov
pop
mov
mov
sbb
and
ret
add
mov
mov
hlt
repz
mov
sbb
xor
stos
fdivs
push
push
fucomi
sti
and
adc
sub
fcomp
mov
fildl
cli
mov
inc
mov
mov
or
push
fcoms
jle
xchg
pop
pmaxub
mov
pop
pop
or
into
fiadds
xor
sbb
std
rcrb
lret
sbbl
xor
in
cmp
insl
sbb
loopne
or
neg
mov
int3
pusha
xor
xchg
aas
scas
insb
inc
rcrl
fstps
scas
rcrl
and
sbb
mov
icebp
push
and
mov
adc
cmp
lahf
sbb
inc
mov
stos
scas
loope
subb
sahf
jecxz
rcrl
push
push
xchg
int
adc
xorl
inc
lahf
and
fistps
daa
xlat
insl
lock
and
loop
iret
adc
cltd
ss
jmp
outsl
xor
sub
loop
dec
js
test
or
andb
xchg
fwait
push
xchg
push
sti
cwtl
mov
mov
and
pop
fldl
ror
sub
push
es
dec
push
xor
icebp
pop
jecxz
lcall
push
pop
xor
loopne
in
sti
das
pushf
filds
aas
cld
sub
xchg
or
sbbb
ficomps
push
xchg
fiadds
out
sbb
pop
jnp
pushf
dec
subl
adc
xchg
pop
sti
std
pop
mov
in
sbbb
mov
mov
cmp
sbbb
js
ss
loope,pn
sahf
fcoml
lods
in
xchg
popf
aad
cli
pop
mov
loopne
pop
cs
aaa
fldt
adc
push
popf
adc
push
orb
inc
xchg
mov
cli
shlb
pop
adc
jge
sbb
xchg
cld
pushf
push
popa
fldl
mov
test
cs
sbb
scas
cwtl
outsl
jbe
pop
nop
fwait
es
adc
inc
ds
add
xchg
jmp
and
push
stos
xor
aas
xchg
and
sbb
fwait
pushf
paddsw
cmp
xor
inc
jno
stos
cmp
out
loopne
in
inc
xchg
pop
xchg
ret
in
rcrb
sbbb
xchg
push
nop
fcoms
add
ficomps
into
adc
cmp
lea
scas
xchg
frstor
add
push
push
add
sub
cmp
mov
pop
mov
push
aad
push
xchg
push
rcr
and
sub
popf
fistl
lahf
jne
fld
fistps
std
fcmovnbe
add
push
pusha
hlt
into
cmp
mov
jno
je
rcr
sti
fnclex
int
push
and
outsl
fdivrl
jne
mov
in
cli
mov
xchg
fstp
add
mov
jge
cltd
jle
sbb
mov
js
cmp
fstpt
cld
fwait
sub
flds
cmp
jle
pop
pop
mov
sbb
pop
mov
lcall
mov
lret
mov
loopne
jge
inc
fyl2xp1
xchg
mov
cmp
ds
dec
lods
xchg
inc
and
int3
repnz
pop
pop
ret
push
adc
cmc
sbb
push
lcall
incb
sbb
testb
cmp
dec
jae
ss
shll
adc
and
cmp
mov
in
icebp
pusha
out
std
fstpt
lcall
push
cltd
mov
adc
mov
sbb
dec
inc
std
test
mov
jno
xor
push
cli
xchg
outsb
xor
lahf
mov
sbbb
enter
lea
test
jae
mov
mov
dec
push
jbe
leave
jge
mov
outsl
push
xor
sbb
inc
sti
cltd
into
nopl
add
mov
mov
sbb
test
or
inc
mov
mov
mov
jle
pushf
cltd
loop
std
cmp
test
cwtl
pop
je
dec
fistpl
jg
shl
mov
aas
xor
dec
xor
dec
aaa
pop
pop
jo
popf
sahf
push
inc
xor
sti
or
int3
lcall
idiv
mov
push
pop
mov
sub
stos
jo
push
fistps
mov
out
sbb
loop
sbb
sahf
jmp
ljmp
mov
shrb
sub
inc
sar
scas
fnsave
test
sbb
push
rorb
arpl
imul
add
addl
popa
sub
out
pop
mov
popf
fstpl
popf
and
inc
outsb
or
loope
xor
hlt
repz
pop
mov
sub
imul
adc
aam
adc
jle
jno
sbb
jnp
jae
sub
pop
push
sbb
and
mov
fsubrs
jnp
xchg
clc
repnz
ja
pop
add
cmpsb
adc
xchg
push
pushf
lret
mov
xchg
mov
dec
cltd
jmp
into
mov
cmp
cmc
call
mov
push
xchg
stos
mov
pop
fistl
mov
pop
dec
loopne
mov
push
inc
adc
pop
icebp
out
cld
mov
pop
or
inc
inc
pop
rolb
js
jnp
aas
sti
push
push
xchg
inc
fmuls
ficoms
add
out
xchg
inc
jno
adc
add
js
mov
arpl
mov
fsts
xchg
jle
and
out
xchg
inc
pusha
pop
std
xlat
out
fwait
stos
out
addr16
jg
int
pushl
pop
jecxz
adc
lahf
scas
push
sub
test
cmp
cvtpi2ps
lods
rcr
fnsave
jle
negl
out
pop
xor
mov
xchg
sarl
xor
xchg
in
adc
mov
orl
jbe
inc
and
movsb
sbb
lahf
sub
mov
outsl
mov
mov
pop
cmp
out
outsb
jbe
aam
xchg
add
and
jbe
pop
sbb
mov
test
lods
les
repz
lock
mov
cmc
pop
sbb
jp
mov
push
cli
xchg
dec
aas
push
mov
pusha
pop
ret
lcall
std
inc
inc
lods
push
cmp
mov
hlt
sub
hlt
mov
xor
outsl
std
cwtl
int
push
out
inc
inc
data16
test
and
push
cmp
fbstp
push
insb
sbb
sub
out
push
or
lods
adc
sahf
xchg
cmp
frstor
adc
pop
into
scas
adc
or
xor
fadds
popa
push
sbb
push
fnsave
inc
iret
sarb
aad
sti
ds
aad
das
pop
xchg
ficompl
fwait
adc
cmp
lahf
insb
fdivl
clc
cltd
xlat
add
cmp
jge
mov
add
popa
xchg
in
push
sub
ja
cmp
aas
mov
add
cltd
add
xor
jl
std
sti
aad
push
aad
adc
mov
inc
lahf
jl
loop
jle
outsb
cmp
mov
sahf
sbb
daa
cltd
add
loopne
sahf
mov
sub
push
ljmp
and
jmp
ret
add
sahf
into
and
roll
pop
shr
imul
add
sub
inc
or
fcoms
pop
out
frstor
test
pop
push
push
sbb
xlat
pop
into
cwtl
sbb
pop
clc
push
sbb
aas
mov
fisubs
mov
pop
cwtl
mov
mov
lds
mov
sub
pop
aam
mov
adc
add
xchg
ds
cmp
sbb
mov
jnp
loope
mov
inc
add
inc
shlb
pop
xchg
lock
adc
inc
sbb
lds
in
jno
push
imul
add
xchg
fsts
push
pop
lds
insl
in
loop
subb
mov
inc
add
roll
sub
into
mov
xchg
in
jo
mov
sti
dec
cmpb
movsl
jg
cmp
add
clc
mov
xchg
mov
aam
aad
into
push
movsl
lea
cmp
sbb
femms
aam
or
ljmp
jmp
sbb
push
hlt
xchg
in
pop
je
in
mov
xchg
cmp
sbb
rcr
jne
cwtl
xchg
mov
popf
pop
cld
mov
pop
sbb
ja
push
fdivp
sahf
xor
mov
cmc
sbb
mov
pop
push
rorl
mov
fwait
lcall
es
iret
lahf
mov
flds
out
test
std
add
sbb
filds
iret
mov
cli
mov
incb
or
jb
jns
mov
pop
mov
push
sti
es
scas
adc
std
ja
jecxz
cmp
adc
pop
mov
xchg
filds
sub
xor
cltd
int3
pop
and
out
cmp
add
ret
cmp
jo
movsl
push
in
mov
jne
dec
cmp
adc
pop
and
push
adc
xor
jae
push
xchg
mov
cmp
xor
inc
test
and
aam
fwait
and
sub
and
and
jno
xor
push
outsl
cld
push
mov
xor
fdiv
lret
xor
jb
mov
sbb
push
mov
pusha
xchg
and
sbb
mov
inc
fdivs
jmp
push
and
xchg
push
mov
xor
sahf
xor
fidivrs
ret
fisubrs
cwtl
xchg
mov
ja
clc
cmc
std
mov
xor
ss
xchg
insb
push
xor
or
xchg
xchg
insl
orl
or
mov
and
sub
mov
pop
jno
adc
pop
xchg
pop
sub
pop
xchg
xor
lahf
fstpl
sahf
adc
mov
in
repz
push
xchg
stc
pop
push
std
dec
pop
insb
pusha
lea
ss
push
mov
push
aad
popa
aas
jns
and
adc
add
sbb
adc
push
fistl
push
or
xchg
mov
mov
loope
ret
cmp
pop
jmp
push
pop
lea
adc
mov
lock
lcall
add
ret
pusha
sbb
adc
push
in
fsts
arpl
lcall
push
fst
aam
sahf
mov
and
dec
rorl
les
imul
xchg
jnp
push
mov
sti
fwait
add
mov
pop
pop
daa
repnz
test
sub
nop
cmpsl
dec
dec
xor
push
xchg
xor
sub
stc
mov
dec
lds
dec
pop
xchg
mov
mov
sbb
fwait
jp
mull
and
nop
leave
xchg
fnstcw
mov
and
or
jle
xor
fists
xchg
lahf
sub
inc
cmpb
push
ds
std
dec
imul
inc
jg
adc
sbb
xlat
cmp
push
mov
cmp
arpl
inc
and
xchg
adc
mov
insl
xor
ret
sub
test
push
add
adc
fcmovb
cltd
lret
cmp
cs
add
daa
sahf
mov
cmp
pop
mov
sbb
call
and
sbb
mov
mov
lds
in
mov
mov
mov
jmp
and
inc
mov
movsl
adcb
out
mov
jmp
mov
xchg
sbb
scas
jp
cltd
popa
sti
stc
push
jge
fsubl
clc
popf
stos
xorb
mov
jecxz
mov
push
push
scas
fistpl
insb
adc
out
orl
adcb
fwait
mov
cmp
arpl
sbb
arpl
ror
add
mov
jge
sbb
fs
pop
pop
repnz
push
xchg
push
cmpsb
push
lock
fnstsw
jno
insl
mov
stos
push
int
outsb
imul
mov
sbb
jmp
cmp
push
xlat
add
mov
mov
repnz
cmp
xor
jb
shlb
imul
push
stc
jp
and
lahf
jne
repnz
roll
mov
cmp
into
fstpl
sbb
pop
inc
loope
or
add
test
fimuls
mov
fisubl
repz
scas
cltd
push
test
daa
xchg
dec
iret
pop
dec
jmp
jo
xlat
cmp
dec
add
push
aam
xchg
loopne
xchg
mov
faddp
in
inc
aaa
xchg
xchg
adc
pop
loop
dec
popf
fs
mov
repnz
sti
mov
or
fcomi
and
mov
sbb
in
pop
popf
push
leave
xchg
jg
add
jmp
loop
dec
xchg
cwtl
out
mov
xchg
adc
mov
out
adc
add
cld
fisubrs
mov
jno
pop
out
xor
sub
mov
jle
roll
rorb
fwait
cmpb
hlt
push
loopne
pop
add
pop
addb
sub
add
rclb
cmp
jns
ds
adc
xchg
daa
movsb
xchg
xchg
aas
ret
jnp
jge
popf
test
in
std
sbb
xchg
pop
jae
push
out
sub
push
hlt
and
inc
xchg
mov
cltd
arpl
sete
pop
shlb
scas
mov
xor
adc
push
test
js
neg
pop
inc
aaa
push
jg
and
subl
mov
and
adc
lcall
popf
stos
lahf
rclb
cmpsl
out
adc
fistpll
sbb
decb
popl
and
mov
movsb
inc
xchg
cwtl
aaa
sbb
loopne
mov
xlat
inc
xor
add
hlt
jle
bound
adc
sbb
scas
cmpsl
dec
sbb
cltd
adc
fidivrs
fwait
rclb
sub
jmp
ret
cli
and
inc
cmc
out
jo
call
xor
cwtl
pop
int3
jecxz
fldl
aad
movsb
mov
aaa
iret
jae
fwait
sti
test
clc
addl
cli
into
sbb
and
rorl
push
int
sub
fiaddl
test
cmp
adc
stos
movsb
in
repz
pusha
ror
sub
cltd
adc
pop
pop
sbb
je
add
cmp
ja
sub
inc
pop
movq
or
cmp
call
add
xchg
mov
rcrb
nop
fdivl
push
inc
adc
cmp
xchg
fdivl
enter
push
mov
xor
mov
jne
mov
frstor
mov
add
daa
pop
lahf
sahf
ret
jnp
pop
fnstenv
and
icebp
push
out
lcall
mov
xchg
sbb
cwtl
inc
adc
les
scas
adc
leave
addl
icebp
push
clc
ja
decl
or
mov
add
loope
std
mov
outsl
jl
pushf
dec
cld
jbe
aad
sbbl
adc
fwait
mov
fimull
push
mov
jg
xchg
add
jg
iret
add
mov
sbb
pop
inc
mov
push
adc
sarb
scas
ret
xor
fwait
stos
mov
add
pop
jne
xor
or
jno
push
lcall
add
test
jnp
aad
pop
scas
mov
sahf
or
and
add
pop
cmp
sti
stos
pop
fstl
ror
add
push
insl
sbb
add
xchg
sub
int
jl
add
sti
mov
cltd
xor
jbe
xchg
xchg
subb
outsb
jbe
dec
push
xor
jb
add
popf
stos
push
and
jge
lahf
test
pushf
sti
pop
mov
xor
push
xchg
pop
scas
push
mov
inc
scas
xchg
int
xchg
lret
mov
cmc
movsl
mov
std
mov
push
inc
and
push
loopne
mov
cli
push
push
pop
into
push
push
mov
popf
push
scas
std
sar
lcall
cmpsb
mov
sub
scas
cmpsl
xor
popf
sbb
shrb
fcmovnb
out
hlt
inc
rcrl
push
xor
mov
and
in
out
int
or
jno
sub
or
xchg
mov
xor
loopne
cwtl
ret
xchg
xchg
and
xchg
add
filds
aad
jmp
jp
std
add
push
fnstsw
adc
fdivr
push
stc
fistps
outsb
lahf
lret
faddl
xlat
mov
shll
pop
into
push
and
stos
ja
sysret
mov
std
adc
loopne
imul
adc
xchg
xchg
jmp
mov
test
daa
das
cwtl
psrad
popf
jg
inc
sbb
jp
ljmp
sbb
fisubl
xlat
pushf
push
add
int
popf
inc
pop
in
xchg
pop
mov
invd
push
scas
or
push
rolb
sti
std
fisubl
push
jae
jns
mov
push
mov
cmovle
icebp
scas
inc
fildl
je
add
arpl
lods
stc
mov
xor
fbstp
adc
aaa
gs
jg
fists
mov
dec
xlat
mov
xchg
cs
sub
pop
bound
test
sub
xor
mov
mov
scas
jae
sahf
cmp
outsl
aam
daa
add
inc
extrq
jns
or
xchg
mov
rolb
jge
sub
dec
pop
jmp
adc
adc
and
adc
ja
ret
sbb
sbb
pop
xchg
insb
int
jecxz
pop
dec
sti
dec
pop
xchg
xor
sbb
mov
sbb
xor
mov
aaa
xchg
push
imul
loopne
cmpl
aad
addr16
inc
xchg
sbbl
dec
push
stos
jae
lret
add
scas
jg
mov
cltd
add
aas
xchg
lods
lcall
pmaxub
xlat
sub
fdivl
out
xor
lcall
adc
push
xor
aas
jg
call
out
xor
pop
bound
push
fistl
push
aaa
and
jne
sahf
aad
dec
jg
repz
popa
ss
mov
ljmp
sub
xor
aam
je
call
test
and
or
and
adc
jo
loop
inc
xor
mov
repz
loope
shlb
test
int
xchg
or
add
hlt
call
push
xor
pop
mov
or
push
adc
not
jmp
xchg
lea
insb
mov
cli
sbb
add
shll
sahf
aas
push
xchg
xchg
jne
into
pop
adc
std
pop
sbb
sbb
lret
push
xor
popf
xor
push
loop
loopne
or
jmp
push
ret
sbb
fildll
pop
ja
out
and
loop
insl
fs
movsl
fsubl
jge
shll
test
mov
out
aad
push
mov
mov
mov
std
pop
je
mov
pop
testb
popf
sub
fistl
fidivs
sbb
and
push
or
out
add
mov
ds
imul
add
adc
mov
ds
xchg
fildl
ja
mov
pop
pop
lahf
jno
rol
cmp
add
jle
idivb
xchg
jl
xchg
pop
mov
insl
pop
mov
jge
pop
add
sbb
enter
mul
das
push
mov
add
mov
mov
pop
out
pop
and
mov
cmc
outsl
mov
lods
adc
mov
in
sbb
dec
pop
add
inc
in
test
addb
cmc
push
lea
pop
scas
adc
push
xchg
mov
jnp
aas
sbb
mov
fs
and
mov
adc
mov
sub
icebp
jmp
pop
std
push
daa
xchg
test
fwait
outsl
xchg
ds
push
jne
orl
ds
add
enter
pop
jl
pop
loopne
jl
push
out
int
xchg
popf
mov
pop
jne
fdivrp
sbb
mov
mov
add
and
push
mov
xchg
xchg
sbb
popf
push
outsl
sbb
pop
and
in
pop
test
adcl
push
in
mov
subl
push
xchg
imul
cwtl
in
popf
mov
arpl
xchg
adc
out
sbb
mov
mov
cmp
lods
dec
xor
pushf
pushf
jge
mov
push
sbb
cmpsb
js
enter
mov
jmp
jg
xor
pop
cmp
xchg
pop
aam
cmp
sbb
into
mov
insb
xchg
xchg
pmullw
sbb
pusha
push
add
sbb
daa
mov
pop
pop
cmpsl
fldl
push
mov
jge
mov
pop
lret
cltd
rorb
mov
adc
icebp
fbstp
popl
ljmp
insb
jo
mov
and
lock
aaa
sbb
aad
jge
lds
inc
sahf
sbb
mov
fbld
adc
lahf
xchg
sti
pop
fimull
pushf
xlat
fists
xlat
push
sbb
movl
adc
xchg
popa
ret
xor
or
mov
xchg
or
adc
mov
pop
pop
mov
mov
pop
add
mov
in
test
cmp
mov
loop
iret
fadds
push
fdivs
jno
leave
adc
lods
pop
dec
scas
jle
inc
adc
mov
fildl
fstps
adc
xchg
clc
xlat
clc
push
repz
pop
pop
cmpsl
shr
sahf
mov
or
sbb
lods
cltd
dec
or
cmp
pop
aam
xchg
scas
push
enter
jp
popa
fisttpl
adc
pop
pop
mov
or
pop
jl
call
insb
int
jecxz
inc
mov
pop
addr16
mov
jecxz
push
pop
jns
cli
aaa
mov
push
loope
pop
sahf
adc
fwait
xchg
jg
sahf
je
push
out
pusha
xchg
ja
xchg
push
aaa
mov
faddl
cmc
mov
das
fwait
aaa
paddq
push
fs
jg
fistpll
std
jne
add
xchg
cmp
add
add
jmp
xlat
inc
sti
ret
pop
sbb
notl
lahf
aaa
push
inc
insl
mulb
jge
add
shll
dec
out
and
jge
inc
into
je
sbb
xor
xchg
out
inc
and
or
cmc
mov
jb
and
mov
lahf
test
push
mov
mov
imul
add
mov
cld
mov
loopne
sub
xchg
mov
jne
lret
jo
xchg
mov
cmpsl
nop
out
inc
imul
lret
jae
mov
pop
call
or
mov
add
bound
jnp
sbb
inc
jo
or
sarl
push
cmp
in
cmp
popf
js
push
mov
xorb
add
inc
and
call
iret
push
mov
aam
loope
xor
mov
xchg
js
or
xchg
sbb
mov
nop
stc
push
sbb
mov
mov
pushw
mov
cmp
mov
aam
sti
jge
ja
cld
push
repnz
pop
in
mov
popa
mov
outsb
add
sub
pusha
inc
out
sbb
in
clc
pop
adcl
jne
adc
in
lcall
add
pop
add
sub
dec
das
pop
cmpsb
aas
jecxz
mov
add
add
rclb
stos
insl
ljmp
outsl
testl
hlt
fistpll
ds
xchg
repz
mov
out
and
pop
jno
mov
mov
push
iret
mov
dec
jp
and
add
scas
repnz
mov
push
mov
sub
insl
in
iret
inc
inc
std
xchg
neg
mov
mov
or
sbb
jb
mov
sub
ds
pop
pushf
out
sar
in
enter
dec
hlt
sbb
pop
lcall
enter
ds
lahf
add
inc
rclb
push
stos
cld
push
enter
add
xchg
xor
or
repnz
xor
ss
scas
xor
dec
dec
xchg
jmp
pop
sbb
ds
test
fadds
pop
adc
clc
stc
xchg
mov
sbb
xchg
xchg
xchg
fisttpl
or
sbb
mov
aaa
xchg
fisttpl
xchg
mov
cli
add
in
xchg
cli
cltd
fwait
in
adc
call
sbb
push
scas
js
cmp
jmp
xlat
lcall
daa
call
push
shl
sar
xchg
fisubrs
pushf
outsb
lret
insl
or
push
scas
push
jp
mov
or
mov
sbb
inc
and
adc
ja
das
js
mov
aaa
xlat
addl
push
psubusb
xchg
xor
int3
push
jne
scas
pop
adc
and
insb
adc
gs
insl
pop
sub
push
imul
adc
push
or
xchg
fidivrs
inc
adc
nop
fcoms
sub
test
push
jnp
jbe
mov
push
push
push
cmc
or
inc
and
aad
test
mov
mov
ss
test
jnp
add
jmp
fld
jl
mov
icebp
lahf
repz
outsl
cmp
or
adcl
int
xchg
sbb
pop
xchg
or
insl
and
lret
mov
sbb
clc
fldl
jge
pushf
pop
popf
out
adc
push
sti
or
xchg
dec
incb
xor
leave
int3
or
push
xorb
mov
ja
sbbb
and
dec
adc
xchg
sub
mov
pop
cwtl
fstl
pop
xchg
cli
pop
jle
and
push
aas
push
cli
mov
pushf
jne
ljmp
jecxz
testb
or
sahf
inc
cmp
xor
js
push
loope
mov
filds
jae
inc
jl,pt
inc
or
mov
cmp
fldenv
jg
enter
cld
mov
cmpsl
pop
sbb
and
movq
push
xor
inc
scas
jp
jmp
roll
add
js
int3
xchg
loope
push
sbb
popa
inc
adc
xorb
pop
mov
push
aad
sahf
xor
cli
loope
cld
inc
std
sahf
xor
mov
sub
pop
in
outsb
je
and
xorb
cmp
aad
je
add
mov
sbb
insl
mov
push
in
cmp
ficomps
std
push
adc
sub
adc
mov
aam
mov
fldln2
add
sbbb
sbb
mov
jp
mov
sbb
test
add
int
ss
ljmp
push
loope
lahf
outsl
arpl
pop
sbb
rorl
mov
sub
sub
xor
push
jo
adc
pop
stc
mov
inc
xchg
fdivrl
inc
lret
ds
jnp
fs
push
push
mov
dec
sbb
xchg
idivl
arpl
data16
test
sbb
xchg
lods
lods
clc
in
aas
cli
fildll
mov
leave
xchg
ja
pop
inc
inc
adc
loopne
push
and
ja
and
shr
loopne
cmpsb
inc
adc
out
mov
adc
adc
jbe
stos
xlat
cmp
jecxz
mov
outsl
push
popa
and
add
push
fsts
ror
push
int
ret
sbb
std
mov
jle
cwtl
cwtl
sbb
stos
jno
lcall
adc
ds
pusha
and
jle
pop
mov
rcr
mov
aas
mov
cmp
push
fistpll
xchg
cwtl
flds
jne
dec
fdivr
sbb
mov
mov
pop
subb
jecxz
inc
cmp
and
add
jmp
scas
pop
cltd
pop
pop
push
sbb
aam
imul
xor
imull
inc
push
jge
mov
aad
cwtl
lahf
sbbb
pop
outsb
cmpsl
add
scas
add
mov
pop
and
adc
repz
lret
pusha
cmp
insb
das
cmp
in
jne
mov
lahf
adc
mov
adc
loop
and
sti
pop
jle
insb
testb
decb
es
icebp
push
aas
add
pop
fisubrs
push
cli
je
jo
movntq
bnd
xorb
roll
cmp
or
test
cmp
fiadds
lock
call
push
add
addr16
pop
mov
std
ds
dec
ljmp
fisubl
mulb
jmp
push
into
jns
xchg
cmpsb
out
and
sub
lahf
jo
push
daa
int3
sbb
pop
mov
pushf
fistl
xlat
mov
loop
pop
jnp
xlat
push
jo
push
mov
cmc
aas
jbe
pop
add
out
int3
in
pop
lahf
scas
out
inc
nop
loop
sar
xchg
push
pop
mov
mov
popl
adc
arpl
mov
neg
stc
jle
std
fnstsw
cwtl
mov
mov
sbb
push
push
test
cwtl
cmp
and
jno
inc
std
call
jmp
inc
mov
shrb
leave
mov
push
push
add
inc
xchg
jns
xchg
sti
push
movsl
pop
fcmovnu
dec
pop
sti
cld
xor
xlat
xor
mov
std
jnp
jecxz
jno
add
inc
lcall
scas
mov
lea
push
adc
sub
sub
sub
pop
xor
inc
popf
outsb
out
adc
sahf
adc
adc
pop
sti
pushf
fistl
cmpl
sahf
or
jmp
repnz
sbb
mov
jae
std
push
imul
js
pop
int3
test
jecxz
cmp
mov
rcrl
je
lret
arpl
jmp
cld
jge
mov
adc
jo
mov
pop
jnp
jbe
pop
pop
cld
xchg
in
cmpsl
addl
mov
cmp
sub
push
rcrl
mov
outsb
jg
mulb
gs
adc
insl
jo
movsl
iret
or
hlt
ss
popf
pop
push
test
testb
and
cld
fwait
sar
mov
cld
sbb
xchg
adc
jle
scas
push
lret
adc
aas
bnd
lods
or
and
in
mov
pop
add
lea
decb
jge
xchg
mov
fwait
and
fstpl
sarl
pop
fildl
paddq
lds
nop
insl
jge
repz
leave
fmull
mov
test
std
mov
adc
add
sarl
pop
push
fwait
adc
jns
mov
fistpll
data16
sbb
mov
sbb
pop
cltd
out
push
std
pop
test
sbb
adc
mov
add
xchg
test
int3
rorl
adc
aas
std
test
xor
sub
aaa
fstpl
test
adc
popf
in
sbb
and
sbb
imul
fwait
jno
fs
ret
ljmp
insl
fs
mov
sub
push
xlat
push
add
outsl
icebp
fstp
ret
mov
jecxz
mov
mov
je
xchg
or
and
pop
out
sbbl
sarl
inc
scas
cs
cld
and
sbb
bsf
iret
orb
imul
mov
jb
xlat
xchg
int3
mov
popf
dec
pop
lret
pop
push
pop
mov
pop
mov
pusha
shlb
movsl
sub
adc
shll
pop
mov
shl
jle
jmp
lea
loopne
mov
outsl
hlt
fcmovnu
leave
mov
je
pop
enter
ss
hlt
jecxz
fistpll
push
in
ret
cli
xor
cmp
push
xlat
fiaddl
cmp
xor
jnp
popf
sub
jns
pop
faddp
cmp
lock
jns
sbb
mov
adc
sti
adc
popf
xor
xchg
mov
daa
jbe
cmp
adc
enter
pop
pop
ss
adc
jg
or
adc
stos
clc
ja
pop
cmp
or
jp
sbb
xor
sub
fcomps
or
sbb
push
es
pop
sti
hlt
sahf
pop
cmp
aas
sub
fisttpl
xchg
cli
sbb
imul
push
xlat
faddp
mov
movsl
loopne
mov
pop
mov
mov
or
lahf
xchg
xchg
in
aas
xlat
rcl
data16
hlt
push
mov
fucomi
add
mov
xchg
std
cmpsl
cmpsb
jbe
sbb
or
repz
stos
in
sub
in
shl
or
popf
fmuls
jge
cwtl
fstl
mov
insl
and
insl
or
leave
cmp
dec
mov
push
pop
fmulp
sbb
adc
ljmp
mov
jl
sbb
cmp
lret
sbb
arpl
lret
ret
fstpt
mov
fwait
outsl
in
mov
xchg
push
xlat
cmp
sub
push
jmp
insl
fs
xchg
mov
xor
sbb
pop
std
jp
push
mov
mov
sbb
jns
push
cmc
addb
repnz
mov
jns
aas
xchg
mov
mov
xchg
pop
je
idivb
fs
xor
xchg
stc
mov
sahf
mov
popf
mov
jns
push
mov
rolb
fnsave
inc
sub
sbb
add
adc
loope
ret
mov
jge
fstp
dec
sahf
cmp
fwait
xchg
jge
imul
cmp
inc
jmp
pop
xchg
push
dec
divl
or
orb
rcrb
lret
sbb
adcb
add
cmpsl
ja
adc
loope
cmpsb
jle
jmp
in
cmp
mov
repnz
fisttpll
mov
unpcklps
sbb
sbb
std
test
aas
xchg
pop
jl
add
xchg
sbb
pop
dec
ficompl
pop
push
add
cmp
imul
inc
sub
fidivs
lods
xchg
mov
dec
stos
pop
jp
fldl
jle
fstpl
pop
ljmp
mov
jg
sahf
bnd
inc
sti
loop
inc
dec
mov
xor
push
push
sbb
loopne
pop
sub
cs
out
hlt
dec
xchg
push
popf
fisubrl
fstpl
xchg
cmp
mov
hlt
cli
lock
fmulp
fdivrl
mov
push
jl
mov
sbbb
enter
pushl
mov
ret
xor
adc
sub
out
daa
ja
mov
pop
pop
xchg
push
out
inc
popf
syscall
inc
xchg
and
mov
sub
push
scas
push
or
aas
sub
mov
ja
loop
mov
insl
sbb
dec
scas
pop
and
adc
sub
outsl
mov
or
pop
pushf
ja
xchg
cmpsb
cmpsb
push
mov
faddp
fwait
lret
or
xchg
imul
iret
add
mov
ja
sti
in
mov
movsl
test
or
notl
incb
aas
sub
pop
xchg
insl
mov
cld
add
test
loope
int
sahf
js
ret
rcrl
jnp
aas
js
jg
mov
sub
lds
lcall
lds
out
mov
adc
imul
setb
fwait
inc
in
loopne
les
pop
push
enter
xchg
push
add
movsb
out
fidivs
push
xlat
xchg
aas
dec
std
push
add
push
nop
jae
cld
xchg
mov
or
in
test
mov
or
dec
xor
test
sbb
aad
ds
lea
push
or
xchg
push
push
pop
pop
xchg
and
fidivrs
xchg
xchg
ficoms
xchg
add
out
stc
mov
xrelease
push
enter
adc
mov
cmp
repnz
pop
sahf
inc
mov
addr16
xchg
push
push
into
shll
mov
lea
bound
or
jge
orl
sbb
mov
std
or
pop
ficoml
pop
std
fdivrp
mov
std
push
cmpsl
xorb
scas
or
dec
mov
loopne
xor
es
popf
push
mov
mov
icebp
xchg
stos
sahf
pop
cmp
outsb
pop
pop
pop
pop
xorb
sbb
inc
loopne
inc
xchg
xchg
mov
adc
fmul
lahf
xchg
push
xor
xchg
inc
jno
enter
imul
outsl
xchg
jno
and
xchg
negb
negl
add
jae
jbe
jo
stos
add
pop
adcb
mov
jp
xor
pop
jmp
dec
pop
jns
popa
arpl
pop
or
outsl
mov
scas
mov
xchg
inc
into
loopne
push
sbb
xor
mov
sti
cmp
mov
sbb
push
nop
xchg
push
outsl
sti
in
lahf
mov
decl
and
xchg
mov
jnp
rclb
cli
pop
fwait
jnp
cld
push
sbb
out
popf
mov
mov
xchg
pop
jne
aas
incl
jbe
nop
fwait
repz
cmpl
jg
stc
addl
push
and
std
add
push
push
or
push
adc
push
pop
fwait
mov
xchg
adc
add
test
sbb
lahf
outsl
jnp
xchg
xor
cs
push
mov
add
lds
mov
ja
push
or
or
mov
cld
jo
pop
push
jg
xor
xor
clc
popf
or
popf
lock
xchg
in
sub
leave
cmc
add
push
ja
mov
pop
xchg
cld
in
loop
xor
jg
mov
sbb
fimuls
rclb
fsubrl
xchg
push
shlb
xchg
xlat
lahf
fnsave
jge
xor
jmp
pop
pop
gs
mov
sbbl
mov
pop
pop
jno
or
push
or
std
dec
sbb
mov
cwtl
jge
mov
fmuls
sti
mov
lahf
jl
lret
mov
cmc
ficomps
jge
or
mov
mov
mov
push
out
loopne
cmp
mov
jnp
inc
mov
loopne
rcrl
dec
std
lds
pushl
nop
fiaddl
test
imul
popf
xchg
jo
pushf
bnd
sbb
sarl
jbe
fsubr
xor
mov
adc
push
scas
or
sub
dec
hlt
fwait
push
in
xor
pusha
cld
popf
jnp
out
jp
or
repnz
std
aas
sbb
mov
dec
nop
addr16
push
xor
mov
arpl
ja
iret
mov
mov
push
movb
adc
popf
add
and
mov
mov
sbb
cmp
sbb
std
fwait
add
xchg
xchg
adc
sub
aaa
pop
adc
mov
cmpsl
and
mov
frstor
or
mov
xor
or
ret
and
and
and
rcrl
incb
mov
pop
pushf
fstpl
out
add
sbb
pop
adc
mov
add
xchg
pop
pushf
sbb
out
or
in
sahf
incb
pop
lcall
jge
arpl
cmpsb
inc
int
or
adc
push
lret
adc
xorb
stc
cmp
div
cltd
pop
fwait
aas
imul
mov
popf
mov
aam
aam
jae
cmc
push
fists
fisttpl
shll
mov
jle
xlat
lock
fisubl
stos
jp
sahf
jno
sbb
cmp
ja
jle
lock
push
push
pop
and
test
jg
fidivs
shll
adc
shlb
add
mov
out
aas
movsl
pop
sbb
xchg
ficomps
sub
pop
mov
pop
jnp
jne
dec
sbbl
jge
xlat
pop
or
inc
push
lods
dec
test
incl
subb
cmc
arpl
popa
push
push
mov
pop
roll
push
in
push
mov
xchg
out
iret
or
rcl
andb
fwait
aaa
sbb
cvtdq2ps
pop
push
jae
ret
xor
sbb
adc
loope
mov
call
nop
cmp
test
jb
xchg
pop
hlt
iret
cltd
adc
loopne
mov
aad
push
scas
xchg
lcall
test
mov
inc
jecxz
rcr
sahf
int
notb
or
jecxz
sbb
mov
call
pop
sahf
push
in
int
xchg
lahf
xchg
xor
icebp
mov
fistpl
notb
xchg
or
sbbl
fwait
insl
or
sarl
addr16
sbb
xchg
jnp
cs
pop
imul
fistps
lock
out
xchg
mov
aam
cs
sbb
aad
xor
cli
mov
out
pop
mov
lcall
arpl
fdivrp
aaa
lcall
cwtl
mov
push
xchg
lcall
push
mov
pop
stc
cmp
in
mov
mov
fxch
test
negb
shll
xchg
jle
add
jnp
add
outsl
icebp
jns
push
movsl
pop
popa
mov
push
pop
iret
push
mov
sub
sahf
shlb
inc
and
jbe
push
popf
xor
ja
adc
test
sbb
popf
jnp
ja
addr16
arpl
inc
dec
push
dec
sub
inc
and
xchg
movsl
adc
ret
lret
into
fidivrs
sub
push
js
test
out
and
ds
xor
aaa
mov
lahf
ds
jno
add
ja
insb
lds
jae
fnsave
and
aam
push
test
mov
pop
loopne
fisubrs
mov
int3
pop
cmp
test
xchg
jecxz
lock
ret
fsubs
push
cmp
pop
push
in
xor
lcall
mov
xor
sbb
loop
add
mov
xchg
mov
std
fmulp
mov
insl
dec
jl
mov
mov
sti
pop
sbb
push
jo
add
pop
adc
push
std
xor
pusha
pop
es
push
adc
xchg
mov
in
jle
aad
iret
je
push
or
mov
jnp
xchg
jle
cltd
addb
push
enter
int
push
out
or
ja
lds
push
push
imulb
ss
push
mov
aad
test
imul
flds
ja
int
jbe
sbb
dec
ficoml
xchg
mov
es
push
stos
shll
push
adc
aaa
out
fnstsw
xchg
mov
je
adcl
mov
pop
mov
inc
adc
pop
inc
mov
out
mov
loope
rcrb
add
push
fiaddl
xchg
in
rcll
imul
repz
pop
roll
pop
dec
sub
cwtl
jne
cld
xor
xchg
lahf
xchg
xchg
popf
xchg
shll
adc
outsb
mov
mov
insb
pushf
pop
sub
repnz
add
or
test
xlat
adc
adcb
xchg
mov
and
sbb
xchg
adc
sahf
nop
sti
push
xchg
adc
stc
xor
repz
std
xchg
fsincos
test
lea
push
psubq
sbb
popf
push
flds
and
jge
aas
push
add
and
push
sbb
lea
push
xchg
pop
sti
mov
test
add
ficoml
std
pushf
cmp
mov
stc
mov
mov
or
test
add
lahf
clc
or
fcomp
mov
inc
aad
pop
add
addb
jnp
jb
adc
jo
fwait
pop
or
cli
imul
dec
pop
pop
hlt
lret
xchg
or
cmp
mov
aad
cli
aas
mov
ljmp
shl
mov
mov
add
int3
mov
cli
fisttpll
es
int
es
movsbl
lahf
ja
or
ja
sahf
pop
lahf
inc
divb
mov
adc
push
pop
push
push
sub
scas
sahf
std
nop
xchg
jge
leave
scas
fs
jno
cmp
mov
bound
adc
xchg
je
and
aad
movsl
dec
sub
mov
pushf
lcall
sub
loope
add
std
sbb
jle
sbb
add
shl
xchg
stc
cmc
or
pop
mov
cs
test
ror
inc
fadd
clc
adc
popa
mov
cmp
out
push
jns
mov
enter
movsl
mov
sub
pushf
jno
inc
push
jne
xor
pop
push
pop
imul
sbb
xchg
sti
mov
out
mov
jae
stos
mov
in
cmp
sbbl
xlat
faddl
pushl
ja
or
inc
cmpb
out
mov
mov
and
mov
mov
loope
xchg
das
pop
cmpsb
in
orl
jl
adc
add
sbb
add
int
jg
sub
lods
mov
mov
or
into
cld
push
in
push
cmc
inc
fisttpll
fistl
test
push
es
lock
and
mov
mov
ficoml
sbb
pop
ljmp
inc
sbb
repz
mov
xor
sbb
lahf
fistps
add
add
or
pushl
sti
jnp
pop
fnsave
or
pop
loopne
sahf
sarb
dec
mov
push
add
push
mov
bound
lret
enter
mov
xchg
test
mov
std
cltd
mov
std
xchg
decb
push
sahf
add
test
pop
push
sbb
sbb
cmc
or
cltd
in
sbb
push
xchg
std
adc
xchg
adc
sbbl
call
xor
add
cmc
add
mov
sahf
push
pop
xchg
lock
xor
mov
jo
fiadds
ds
adc
test
push
outsl
dec
pop
shll
cs
aad
cmp
cmp
inc
dec
popf
lock
push
stos
fadds
fstp
push
test
xchg
xchg
sbb
fisttps
xchg
repnz
jp
fsubrl
cmp
mov
je
lea
shrb
mov
and
sub
xor
mov
push
test
lahf
pop
dec
arpl
fistps
leave
fmul
fwait
xor
add
inc
push
push
mov
pop
cwtl
adc
jo
pop
cmpl
in
nopl
ficomps
call
sub
jp
loop
xchg
pop
jmp
fwait
popf
ud2
cmp
fdivrl
pop
push
lcall
sbb
jno
xchg
pop
mov
nop
addr16
iret
inc
mov
pop
fcmovnb
pop
loop
mov
jg
mov
hlt
iret
aaa
push
imul
stos
cmp
lock
test
cs
mov
outsl
or
xchg
std
in
adc
fwait
lcall
jnp
ja
xchg
fcom
mov
ljmp
fistl
loop
pop
pop
sti
cmp
xchg
mov
sbb
pop
pop
sub
mov
push
adc
pop
adc
push
fisttpll
sub
add
mov
xchg
push
pop
enter
xlat
sbb
fmulp
mov
pop
js
push
pop
test
cmp
icebp
sbb
shll
mov
sub
in
push
add
cli
sbb
pop
pop
dec
xchg
mov
push
hlt
xchg
mov
adc
std
adc
pusha
and
addb
sbb
jp
mov
cmp
pop
scas
or
push
stos
mov
mov
pop
adc
and
add
insl
dec
mov
iret
add
ret
cmc
xor
push
imul
cmpsb
push
popa
and
insb
jg
sub
fwait
movhps
sbb
insb
sti
dec
ds
lea
dec
lds
fstps
notl
xchg
notb
sar
sbb
jg
ds
repnz
adc
test
push
jno
pop
jne
leave
loopne
out
xchg
fimull
adc
lds
repnz
sbb
jb
cwtl
stos
daa
xchg
and
roll
cld
push
pop
jbe
inc
add
sbb
add
pop
repnz
aaa
add
cmc
jp
pop
push
aam
ss
pop
lret
fwait
or
adc
sbb
lahf
inc
push
addl
xchg
xorl
jg
fwait
push
aam
jnp
inc
sbb
sbbl
cmpsb
sbb
andb
push
push
xchg
xchg
sti
fimuls
sbb
std
push
mov
pushf
dec
mov
dec
jae
sub
cmp
negl
jb
xchg
nop
lds
cmp
orl
mov
sbb
xor
pushf
rcll
sbb
outsb
movl
add
out
outsb
movl
lahf
push
outsb
push
lcall
jne
jg
push
xchg
pushf
mov
cs
ss
jnp
dec
jecxz
enter
xchg
add
pop
pandn
popf
into
pop
nop
fldl
idiv
pushf
pop
xchg
in
adc
mov
xchg
clc
pop
mov
rcll
push
adc
aas
ds
push
lahf
mov
psubw
mov
xor
mov
and
pop
or
ficoml
ds
mov
mov
jne
cmp
jle
int3
rcrb
ljmp
xor
out
cmp
ds
aaa
jne
aaa
pop
push
dec
fs
xlat
mov
jge
ret
pop
cmp
ds
cmp
cld
outsl
lock
fnstsw
sbbl
sub
sub
xchg
iret
cmpb
sbb
lret
sti
jge
pop
sbb
std
or
ret
int
stos
mov
pop
clc
fistpl
jnp
mov
aaa
or
insl
pop
loop
pop
bound
cmp
mov
push
sbb
addr16
and
push
cmp
fimull
sahf
sub
mov
pop
je
pop
enter
xlat
sbb
xchg
push
fldcw
sti
mov
jns
lock
faddp
cmp
clc
les
xchg
adc
and
loopnew
xor
shl
mov
mov
loop
popl
jno
and
mov
aam
xor
pushf
cmpsl
and
sbb
jno
lret
jle
clc
ret
sahf
and
ja
mov
testl
cmp
or
cmp
inc
push
mov
inc
sahf
mov
enter
add
mov
dec
lret
sub
mov
cmp
inc
repz
outsl
loop
xor
test
loopne
mov
movsl
and
aam
imul
into
sub
jecxz
add
pop
sub
sbb
inc
out
push
fdivrl
sbb
stos
xchg
pop
mov
mov
sbb
cmpsl
loop
outsl
test
in
sub
add
gs
mov
push
push
aam
mov
rol
mov
pop
and
inc
adcl
out
mov
mov
lcall
cmp
fdivs
mov
and
sti
cwtl
out
hlt
push
mov
xorl
sbb
arpl
std
sbb
xbegin
in
popf
sbb
fistpl
enter
mov
pop
xchg
pop
repz
inc
sbb
std
stos
in
cmpsl
into
mov
sub
sbb
xchg
negl
inc
jno
adc
add
push
inc
jg
and
mov
out
outsl
popf
pushf
ds
xchg
jae
sbb
mov
add
pusha
dec
push
mov
inc
mov
and
cmp
push
cmp
je
sbb
mov
mov
je
leave
sbb
mov
sbb
push
xchg
inc
mov
push
pop
add
fistpl
xchg
adc
push
adc
mov
add
xchg
xor
xor
popf
mov
add
aaa
mov
mov
rclb
jne
xor
aam
sbb
cltd
sbb
pop
int
sub
dec
jno
inc
ja
scas
pushf
pop
repnz
xchg
aas
cltd
mov
push
rcrb
pusha
push
xchg
test
or
adc
and
mov
sbb
push
stc
leave
fistpll
mov
nop
std
mov
dec
lcall
lods
stos
ret
pop
fisubl
shll
scas
divb
xchg
scas
leave
push
pop
push
inc
xchg
jl
lret
loopne
in
ja
mov
test
jns
mov
jno
loope
dec
shlb
add
enter
xlat
pusha
dec
pushf
push
inc
stos
repz
lahf
add
mov
test
push
cmp
popf
inc
pushf
fistpl
in
fcoms
test
inc
stc
sbb
xor
mov
sar
jnp
adc
sbb
outsl
cwtl
lcall
pusha
insb
xchg
scas
xlat
jb
cmpsb
movsb
stos
xor
mov
mov
push
sbb
mov
xor
mov
mov
out
lcall
shll
mov
mov
lahf
outsl
scas
test
xor
lret
add
stos
ss
imul
cltd
addr16
xor
bnd
mov
cmp
jge
pop
push
mov
fdivrp
popf
sbb
lahf
pop
and
xchg
fwait
sti
fisttps
jmp
lahf
jle
cli
fwait
push
in
add
xchg
movsb
pop
sub
adc
sbb
mov
fstl
mov
xchg
jl
or
into
push
scas
jge
imul
mov
lock
mov
adc
jecxz
sahf
sbb
inc
outsb
xchg
ja
fmull
xor
cmp
movsl
call
imul
push
mov
jno
jne
jb
fbld
sbb
decb
xlat
fbstp
mov
imul
sar
push
outsb
dec
pop
cmp
ss
les
lea
fildl
inc
mov
out
jbe
mov
fwait
jle
movhps
outsb
mov
xor
sub
cmp
outsl
push
outsb
repz
testb
movsl
xchg
mov
sub
pop
aad
jo
mov
ret
jno
xor
pop
dec
cmp
lcall
ret
xchg
inc
adc
or
fisttpll
ja
inc
adc
and
push
das
mov
inc
and
adc
inc
aam
sbb
aam
loopne
push
adc
into
into
adc
xchg
mov
xchg
dec
push
repz
jmp
lcall
repz
cmp
mov
inc
adc
in
cld
ds
sbb
imul
call
popa
or
fisttpll
rcrl
xchg
and
fidivrl
in
adc
cmpsl
shlb
sub
in
wbinvd
hlt
clc
aam
popf
add
pop
aad
lea
cmc
ret
sarl
rcll
icebp
rcl
or
loopne
mov
pop
mov
jbe
pop
push
fsubrs
lds
jge
stos
fidivs
push
pop
loopne
out
lret
pop
imul
inc
ljmp
test
fdivs
pop
in
or
inc
cmp
sub
jecxz
mov
add
movsl
xchg
pop
add
repnz
sbb
mov
std
inc
pop
pop
aam
or
movsl
xchg
push
aad
lods
jnp
sbb
jno
inc
mov
cld
incl
xchg
xchg
hlt
push
fwait
mov
pop
dec
sahf
insl
sbb
aas
pop
loop
in
mov
cmpsl
pop
leave
sub
iret
ret
mov
leave
jge
inc
shl
mov
xor
xor
jp
and
jb
out
xchg
fcomp
jno,pn
pop
push
int
add
ret
lcall
sbb
data16
into
mov
popf
loopne
in
mov
sub
sub
mov
sbb
call
out
scas
mov
and
xor
cmp
inc
xor
sub
and
xlat
enter
adc
jnp
inc
adc
mov
setle
adc
lods
push
pushf
loop
mov
mov
push
out
nop
sbb
pop
daa
xchg
in
fisubrs
cwtl
cmp
jle
outsb
std
push
mov
cld
cmpsl
add
rolb
shl
pop
adc
enter
xor
sbb
pop
scas
xchg
addr16
bound
lods
sbb
push
xchg
fisubrs
and
and
mov
aaa
mov
jno
xor
aas
pop
aam
insb
dec
push
mov
iret
pop
mov
test
and
fnstenv
lar
jg
iret
cmp
jae
jp
clc
ret
in
insb
sarl
lahf
jnp
scas
add
pop
loop
cltd
fcmovnbe
and
dec
shll
cmp
cmpsl
ret
aas
outsl
push
push
into
pause
gs
cmovae
mov
fstpt
les
adc
xchg
hlt
pop
leave
popf
adc
iret
add
push
mov
dec
cltd
iret
in
mov
pop
pushf
and
inc
jno
lcall
sbb
inc
mov
pop
icebp
jb
mov
scas
cli
insb
in
xor
and
movsl
jmp
pop
lahf
out
push
sti
lock
popa
lock
neg
push
cmc
adc
add
rorl
inc
sbb
sbb
mov
pusha
repz
outsl
pop
cwtl
insl
popa
dec
orl
test
cmp
adc
mov
jno
sahf
inc
testb
pop
jnp
cmp
sbbb
lods
cmp
xchg
sbb
pop
aam
ss
jle
push
in
cmc
xor
icebp
mov
fcmovbe
int3
pop
cltd
mov
jmp
xchg
repnz
inc
insl
jle
jp
lods
cmp
sbb
sahf
je
pop
push
lret
mov
shl
int
xchg
sub
and
mov
fsubrl
sbb
push
adc
gs
add
pop
jge
push
rol
push
jle
jecxz
or
movsl
insl
xor
mov
mov
or
scas
lock
popf
sub
lea
add
into
jle
sub
pop
xchg
pandn
cmpsb
add
xor
imul
push
mov
out
sbb
xchg
or
jle
adc
xchg
fildl
sbb
xor
movq
imul
js
das
pop
inc
dec
push
mov
mov
ret
enter
adc
mov
ss
jecxz
shl
adc
out
lods
das
cmp
outsl
push
fisubrs
jge
sbbl
xchg
mov
insl
out
and
sti
adc
xor
mov
pop
ss
aam
aad
push
jo
dec
fsts
mov
sbb
dec
addr16
xchg
push
mov
in
push
ret
adc
pop
dec
pop
shll
lret
push
addr16
add
scas
lods
mov
orb
ja
xlat
fidivrl
mov
xchg
sbb
cmp
sarb
testl
jno
jb
mov
aad
or
aas
push
ljmp
dec
pop
xchg
arpl
mov
icebp
and
adc
in
add
aad
clc
pop
mov
lds
daa
pop
ljmp
shll
mov
sbbl
inc
pushf
out
out
pushf
mov
inc
mov
mov
or
outsl
lret
jle
xchg
dec
xchg
lahf
shrl
pop
jmp
popa
adc
add
lret
push
jne
jbe
dec
and
ljmp
inc
ja
mov
sbb
xor
and
sahf
push
adc
mov
hlt
pop
jno,pt
cmp
icebp
out
mov
inc
sti
aam
pop
xor
ja
sti
mov
mov
lahf
test
sbb
in
xchg
sti
adc
in
rcr
nop
icebp
jp
enter
gs
jmp
out
pop
inc
orl
bound
lahf
inc
jge
and
fmull
in
lock
dec
jl
push
xchg
std
mov
andb
and
push
sub
cmp
jns
insl
orb
xchg
lcall
mov
mov
pop
cmp
pusha
xchg
sbb
seta
jnp
setbe
sub
int
mov
mov
xchg
push
outsl
popf
mov
cmp
xchg
cli
sbb
pusha
adc
jecxz
loopne
jns
cld
repz
lahf
inc
adcl
xchg
pminub
mov
add
mov
seto
in
loope
push
daa
ret
xchg
idivl
cmp
jae
pop
mov
push
mov
inc
outsb
add
xchg
mov
or
int3
jle
xor
xchg
imul
adc
mov
lock
rcll
xor
lea
into
scas
loope
iret
mov
push
pop
rcl
mov
pop
push
or
jl
into
lods
mov
adc
push
xchg
lock
ja
xchg
out
jno
adc
cld
sbb
push
js
lahf
xchg
popf
in
jo
or
mov
push
push
mov
pminub
test
mov
rcr
popa
mov
in
icebp
ret
ret
mov
push
mov
dec
outsl
pop
xchg
call
icebp
mov
in
or
pop
push
adc
aam
mov
add
je
inc
sbb
addr16
in
lods
mov
out
sub
and
out
pop
loopne
sbb
movl
adc
lea
test
mov
and
popa
add
mov
es
outsb
pop
inc
pop
sbb
jo
rcr
push
sub
cmp
aas
test
add
jg
pop
ds
add
inc
or
add
xchg
push
fisttps
cltd
stc
mov
xchg
out
mov
scas
mov
movsl
mov
cmp
and
iret
jg
adc
inc
push
jnp
and
out
ds
pop
ja
add
add
addr16
adc
xlat
sbb
fbstp
adc
lahf
mov
incb
mov
jbe
mov
jns
push
inc
sub
jg
dec
jle
filds
sbb
adc
adc
lods
test
push
xor
lods
jecxz
std
shl
cltd
nop
or
mov
out
imull
daa
dec
fwait
leave
stos
xor
clc
pushf
daa
ja
and
mov
mov
and
ja
and
xor
sbb
in
cld
xor
xor
adc
cwtl
and
out
cltd
andb
lahf
repz
jb
sbbb
sub
lahf
or
ja
pop
hlt
js
jmp
in
ja
sbb
jnp
push
dec
adc
daa
lods
rcl
dec
stos
push
or
sbb
jge
cmp
insl
xchg
sahf
xchg
xlat
scas
mov
adc
dec
out
enter
repnz
cmp
imul
outsl
pop
or
fs
adc
stos
cld
add
or
sbb
sub
rcrb
adc
or
inc
rcl
or
mov
js
xlat
out
sbb
hlt
xor
xchg
out
dec
adc
outsl
stos
sbb
adc
repnz
and
pop
adc
push
fidivrl
test
divl
andl
cld
mov
pop
and
adc
lahf
cmp
andl
push
insb
sub
push
out
mov
cltd
add
test
inc
mov
cmovge
cmpl
xor
sbb
or
add
cmp
mov
fcoml
popa
stc
pop
scas
adc
or
insl
loop
lcall
scas
mov
pop
pop
fcompl
call
dec
sbb
mov
std
mov
int3
jb
jno
loopne
xchg
sti
adc
fcomps
jl
push
cmp
push
dec
ja
sar
flds
xchg
or
cmp
jnp
lahf
pop
cmp
sub
sbb
movsb
andl
dec
jo
int3
mov
dec
sbb
out
push
and
sub
imul
xor
movsl
jle
ret
pop
cmp
scas
push
mov
mov
jno
lahf
sahf
mov
add
push
orl
mov
jp
sti
mov
add
mov
mov
inc
pop
add
ljmp
pop
push
sbb
jo
outsl
lds
jle
popf
and
lahf
pop
mov
mov
int
xchg
push
sahf
xchg
fldt
pop
or
mov
lcall
sub
xchg
sbb
jl
push
in
repz
pop
pusha
or
jmp
xchg
in
sbb
pushf
mov
add
pop
push
out
xchg
hlt
sbb
incb
outsl
jnp
sahf
imul
push
out
pusha
mov
mov
loopne
mov
push
add
sub
mov
pushf
in
popf
in
popf
fisubrl
outsb
push
fisttpll
enter
in
cmp
sub
add
push
add
xor
adc
outsl
pop
push
adc
jae
dec
sbb
xchg
jp
push
jae
jns
lret
hlt
cmp
jae
sbbl
mov
mov
psrlw
xchg
fsts
xchg
insl
and
cmc
popf
rcrl
lds
scas
push
jg
sbb
lahf
and
stc
bound
cmp
push
mov
lcall
cmp
lahf
fs
push
jns
xchg
cld
sbb
adc
push
fwait
paddw
out
adc
mov
jnp
mov
lret
or
loop
adc
xor
stos
mov
mov
push
sbb
mov
cmc
fnstenv
sub
add
mov
xchg
sub
lock
repnz
xchg
pushf
jbe
cli
mov
adc
xchg
pop
pop
push
inc
xchg
mov
pop
xchg
mov
es
andb
fwait
jecxz
push
hlt
daa
in
jg
movsl
and
jp
adc
sahf
inc
std
outsl
scas
lods
cwtl
enter
std
sbb
lea
sbb
pop
mov
outsb
adc
lret
jge
pop
mov
jb
dec
cmp
cmp
xchg
xchg
adc
lret
jno
pushf
not
dec
push
shl
mov
inc
mov
out
push
es
mov
xorl
ss
push
or
push
ja
pushf
adc
out
mov
pop
or
xchg
xchg
mul
sbb
ds
cltd
push
nopl
adc
mov
in
mov
sahf
mov
or
mov
mov
negb
pop
xor
pop
aas
cmp
adc
orl
pop
xchg
add
mov
or
sbb
std
mov
and
dec
add
lods
lds
and
aaa
cltd
jecxz
outsl
repz
jno
lret
xlat
or
adc
xlat
repz
lea
hlt
loope
clc
xchg
scas
stc
fidivs
fsubrl
loopne
sbb
mov
mov
das
je
pop
sbb
pop
xchg
andb
or
or
in
mov
cmp
out
fiaddl
adc
sbb
lret
iret
test
dec
mov
sbb
sar
fildl
cmp
jmp
mov
dec
mov
xchg
movsl
ja
sbb
aaa
mov
mov
jmp
movsl
cmc
mov
shrb
invlpg
repnz
inc
movsb
pop
mov
mov
mov
notl
leave
fcomps
sbb
push
lahf
lret
mov
iret
lea
push
pop
jecxz
pushf
mov
mulb
mov
lock
rcl
dec
push
testb
sbb
lods
mov
mov
test
and
out
push
loopne
sbb
xor
int
sub
sti
fwait
test
lds
sbb
inc
mov
rcl
mov
lret
sbb
adc
enter
jle
or
cmc
cltd
lock
add
cmp
push
add
sti
jmp
adc
sbb
fwait
mov
insl
fstpt
lahf
repnz
test
adc
cli
iret
cmpb
add
into
push
fimull
aad
inc
jl
xor
arpl
adc
pop
cli
pop
cmp
mov
icebp
xor
cmpsb
or
into
cmp
repnz
push
and
fistpl
lea
jg
add
cmpsl
in
xchg
cld
rolb
fcomp
pushf
fnstcw
cmp
testl
in
pop
sti
in
xchg
adc
ja
push
sbb
add
push
fsubr
xor
sbb
fdivrs
lret
jmp
adc
jb
lahf
push
lcall
cmp
out
lds
mov
sbb
stos
mov
stos
in
aad
xchg
or
lahf
and
aam
mov
shl
out
adc
test
addr16
pop
push
lock
cmp
shrb
cs
int
fistps
add
adc
sbb
dec
lock
outsl
add
adc
repnz
jmp
movsl
fwait
les
jecxz
dec
insb
mov
pusha
pushf
inc
sbb
inc
jge
push
jb
adc
xor
leave
xchg
idivb
out
add
orb
loop
ret
pop
xchg
push
ds
in
scas
loop
outsl
mov
ret
push
jns
fstl
es
popa
jle
xchg
je
test
filds
mov
ljmp
xor
in
loopne
leave
mov
jno
adc
mov
add
adcb
in
hlt
test
loopne
pop
mov
mov
sbb
xchg
push
nop
adc
mov
jno
cld
push
les
pushl
clc
mov
outsb
popf
adc
pop
mov
fstps
mov
jp
sbb
jae
cmp
cmp
out
in
mov
pop
neg
push
std
out
xchg
and
jo
std
lcall
sbb
mov
ja
stc
pop
inc
mov
movsl
mov
jge
icebp
jo
cmp
std
cmpb
add
out
lea
xchg
mov
stc
pop
xchg
xchg
jnp
push
xchg
cmp
cmp
pop
push
pushf
sub
pop
sti
jg
cmp
in
into
inc
cltd
popf
push
mov
pop
loopne
scas
jmp
xchg
test
xchg
xchg
push
sbb
leave
in
jno
stos
sahf
mov
leave
andl
insb
out
xchg
icebp
data16
rcl
lahf
fld1
fsts
int
and
jno
add
shrb
iret
xchg
lcall
std
add
or
rcrb
or
loopne
leave
pop
ljmp
stos
insb
xchg
sub
ds
sbb
xchg
in
or
or
fisubs
sub
jp
bound
lahf
inc
jl
adc
call
mov
push
xor
push
mov
sbb
or
sbb
rclb
push
add
cmp
fstpt
jg
sti
scas
mov
or
cwtl
xchg
cwtl
xor
loop
push
divl
inc
pop
jne
bts
add
push
mulps
std
lea
sbb
filds
sbb
dec
cmc
fs
out
dec
xlat
repnz
dec
push
push
test
imul
cmp
shrl
sub
lds
cmc
jae
int3
jmp
add
xor
in
stc
xchg
std
xchg
jge
fwait
pop
sti
scas
xchg
sbb
cmp
lods
sar
inc
addb
into
in
test
std
sbb
mov
out
leave
cltd
iret
scas
mov
xor
mulb
sbb
popa
in
movsb
jnp
mov
dec
push
repnz
stc
loop
stc
hlt
cld
cli
ror
cltd
sti
mov
pop
mov
mov
mov
xchg
sub
add
imul
xor
cwtl
pusha
aad
repnz
pop
push
dec
xor
lods
mov
test
jp
sbb
jl
decl
mov
lret
xchg
ja
imul
mov
sbb
add
xchg
adc
adc
sbb
stc
xchg
mov
lcall
loopne
jge
dec
sbb
je
sbb
outsl
movsb
aad
push
stos
movsl
pop
insb
pusha
xlat
iret
popfw
mov
idivl
jno
add
sarb
and
cld
jb
push
cmovs
xchg
hlt
cwtl
rcll
enter
and
xchg
mov
ljmp
jne
stos
lods
add
or
sti
test
cmp
mov
andb
inc
pop
cmp
in
push
notb
ret
xor
pop
frstor
dec
push
and
stos
mov
xor
pop
pop
fsubp
fnstsw
add
lea
add
repnz
cmp
jmp
jge
jbe
pop
rcll
out
das
in
bnd
mov
nop
push
sbb
rcl
adc
pop
push
cmp
test
mov
or
add
popf
fsubrl
scas
push
adc
bndldx
hlt
scas
pop
fcmove
pushf
cmp
fmuls
pop
leave
adc
fbstp
arpl
imul
stos
mov
pop
mov
es
ficoml
sub
mov
add
sub
adc
inc
xchg
stc
add
scas
jbe
scas
sbb
lahf
pop
subb
push
hlt
jmp
inc
or
and
xchg
pop
ss
lahf
pop
push
xlat
mov
lods
ljmp
pop
pop
cmp
cmc
iret
add
scas
popf
add
lods
push
dec
sub
sub
and
cltd
and
xchg
cmp
sbb
pop
addr16
push
ficomps
mov
outsb
adc
mov
add
adc
addl
rol
mov
pushf
call
add
xor
ds
sbb
adc
iret
outsl
or
jae
push
mov
addb
cmp
hlt
popf
add
std
jnp
xor
repnz
inc
sub
xor
rolb
shrl
insb
fwait
jae
popl
in
jnp
cmp
mov
mov
incb
clc
pop
sarb
bound
jge
ja
xchg
pop
add
mov
xor
repz
add
js
push
jg
aas
pop
xchg
lret
pop
push
sahf
loope
xchg
sbb
jecxz
sbb
pop
add
shl
add
out
add
mov
nop
insl
xor
mov
mov
xchg
add
jl
push
cltd
outsb
inc
movsl
fistpl
jecxz
sahf
push
out
out
push
js
ljmp
add
and
add
movsb
adc
rcll
jl
or
xchg
or
add
or
cmpsb
add
lahf
mov
jae
popf
gs
sbb
popf
mov
mov
out
or
xchg
add
popf
push
cld
aad
sub
add
xchg
call
xchg
jne
out
fistpll
pop
pop
sahf
sbb
lahf
fstps
inc
sahf
int
mov
cmp
fisubl
sbb
fcomp
fcompl
xchg
test
test
jnp
andl
mov
dec
cli
mov
sti
mov
stos
and
and
in
cmp
and
or
orb
and
jge
les
sub
jne
addl
ret
add
jecxz
pop
sbb
mov
or
sarl
ljmp
cmc
daa
rol
xchg
out
xor
daa
dec
xchg
pushf
sbb
sbb
ret
or
push
xchg
mov
mov
enter
mov
ret
mov
out
fcomps
out
ja
or
aad
das
ja
or
repnz
inc
push
xchg
mov
xchg
sbb
mov
fisubrs
or
outsb
pop
or
dec
sbbl
iret
gs
pop
mov
push
popa
into
lock
jns
imul
sbb
jo
cmp
jbe
orb
mov
out
pop
sbb
push
cmp
out
pop
cmp
cmp
or
adc
pop
push
fdivr
test
sbb
ljmp
sub
scas
shl
out
in
jge
mov
lock
pop
mov
inc
pop
xchg
mov
cltd
sahf
cmp
rcr
jo
add
sub
push
push
hlt
ficoms
daa
scas
jnp
addr16
out
test
popf
mov
stc
orl
xchg
fwait
pop
mov
bound
popf
mov
xchg
rcr
sbb
orb
fcoml
fadd
push
ret
jno
mov
sbb
arpl
xorb
mov
or
pop
mov
sbb
xor
out
sbb
std
or
fisttps
cltd
xchg
sbb
inc
mov
sbb
ret
aaa
pop
sti
adc
sbb
xchg
outsb
imul
or
insb
add
adc
sbb
dec
xchg
xchg
push
adc
xchg
or
cmp
fnsave
mov
lds
test
in
pop
notb
aam
ljmp
sahf
sti
or
popf
punpckhdq
sbb
sub
mov
adc
out
xchg
sbb
inc
and
mov
sbb
addl
sub
xchg
leave
fwait
xchg
scas
les
mov
adc
cwtl
mov
add
out
pop
popf
ret
fnstsw
out
inc
jne
adc
add
or
mov
pop
or
pop
std
mov
xchg
mov
mov
lahf
out
aas
neg
mov
je
mov
cmpsl
out
sbbl
pop
jnp
dec
sti
push
inc
cli
xchg
ds
xchg
xchg
rcrl
xchg
cld
xor
outsl
ja
pop
sub
ljmp
dec
lahf
sbb
push
pusha
pop
movsl
enter
push
fstpl
jnp
jmp
lock
stos
cmp
cmpb
fs
add
lahf
jp
sti
out
sbb
fdivrs
dec
cltd
push
stc
pop
mov
pop
pop
xchg
xlat
and
pop
add
das
cmp
jbe
cmc
fstps
mov
mov
sbb
and
push
jge
mov
ja
sub
dec
cltd
inc
fwait
adc
int
push
cmpsb
or
sub
inc
adc
std
mov
shl
push
adc
pop
aad
sbb
mov
push
pop
ror
xchg
int
lahf
popa
sbb
in
fiadds
shl
and
inc
int
and
dec
mov
push
frstor
stc
jne
sub
mov
xlat
sub
mov
sbb
divb
adc
jno
out
fcoml
arpl
sti
sub
pop
mov
push
ja
inc
ja
ret
or
pop
ja
adc
call
xchg
rcrb
inc
cld
or
mov
mov
pop
in
jp
xchg
pop
inc
stc
andb
movsb
mov
fcmovnu
sbb
mov
inc
std
imul
pop
fcomip
dec
fcoml
ja
les
out
cli
int
mov
sub
negl
cltd
out
lcall
xor
jno
add
adc
orl
push
sbb
adc
or
sti
adc
jg
and
popa
sub
sbb
jnp
shr
leave
push
out
cmp
aaa
inc
int
test
arpl
mov
inc
cwtl
xchg
jge
push
jle
cmp
inc
jo
mov
inc
leave
inc
xchg
push
lods
or
mov
push
jno
lahf
sbb
pop
fisttps
call
xchg
shll
pushf
xchg
mov
bound
mov
addl
xor
jle
fistpll
add
cmpsl
adc
jne
push
mov
repnz
and
lods
aaa
inc
ds
mov
xchg
mov
das
sbb
leave
push
inc
jno
faddl
std
pop
pop
aad
fidivs
mov
fstpt
popf
popf
or
outsb
arpl
roll
leave
dec
push
sbb
or
cmpsl
mov
stos
sbb
scas
into
sbb
jno
pop
neg
call
shlb
jae
mov
in
push
dec
mov
sub
popf
inc
jp
or
ljmp
xor
ret
mov
adc
daa
mov
and
adc
inc
es
mov
repnz
sbb
cmp
mov
xor
sbb
mov
jmp
adc
aaa
stc
lahf
cld
loop
ja
test
inc
jg
loopne
add
js
or
xor
xor
popa
push
dec
jnp
xorl
fsubl
xchg
pop
popf
xor
jbe
xor
stc
mov
push
fwait
cmc
push
dec
std
mov
outsl
fisubs
fstpt
push
popa
inc
insb
notb
push
cltd
mov
xchg
ret
inc
std
aaa
fdivp
sbb
adc
jp
mov
lods
xchg
mov
fstps
jnp
enter
mov
aam
iret
or
jo
add
cwtl
push
pushf
xor
decl
sbb
aam
sbb
jne
pop
nop
out
in
xor
pop
push
jmp
hlt
sbb
inc
scas
hlt
out
decl
or
mov
and
stos
fstpt
cld
sbb
push
cli
adc
outsl
jge
sbb
pop
push
jno
jnp
fcompl
and
outsl
lods
dec
inc
and
push
xchg
and
fcoms
test
scas
lcall
adc
sbb
jne
rcll
jp
push
into
popf
fwait
pop
push
mov
mov
jge
ficoml
std
pop
fs
mov
ja
cmp
cmpb
pop
jle
arpl
inc
adc
lcall
xor
inc
rclb
cmp
fisubl
test
xor
out
sarb
mov
adc
fs
ret
xchg
fistps
cltd
inc
push
aaa
lea
add
mov
in
stc
cmc
pop
popf
lcall
inc
sub
cmp
out
adc
std
sub
and
movlhps
int
aad
iret
mov
or
push
outsb
jae
in
cli
adc
lods
stos
inc
adc
or
pop
lods
aam
stos
or
fwait
ja
inc
ja
mov
mov
dec
cmp
push
jnp
ret
std
outsl
or
nop
aaa
aam
cli
orb
jne
sti
popf
out
andnps
push
punpckhdq
cmp
jns
pmaxub
push
into
sti
popf
xchg
pop
xor
xchg
jle
add
push
loopne
push
ret
or
adc
outsb
mov
pop
or
push
or
je
jl
sti
jge
lods
sbb
dec
rclb
ja
and
test
out
push
pop
jbe
gs
ja
mov
xor
push
or
xchg
xchg
fldcw
in
pop
fiadds
jo
repnz
cmpsb
push
mov
sub
jp
inc
xor
cmp
pop
andl
pop
or
sub
or
bound
jnp
scas
jmp
outsl
insb
xlat
std
push
lahf
movl
scas
add
jge,pt
stos
dec
repz
js
shrb
scas
xchg
adc
push
push
pop
push
sub
test
or
mov
jg
fcompp
mov
dec
pop
pop
mov
xor
sbb
loop
ljmp
mov
sbb
ja
fisttpll
jg
aas
test
stos
jns
xor
mov
xchg
fldl
pop
aad
loop
cld
jp
push
mov
mov
jg
sbb
add
pop
add
cmp
test
push
cmpb
movsl
mov
pop
mov
mov
pop
loope
mov
leave
pop
fstpt
sbb
or
jp
rolb
or
mov
adc
ss
or
jnp
lahf
mov
jno
pop
xor
outsl
push
stos
bswap
outsb
iret
pusha
fistl
fstpl
aas
stos
out
nop
fsubl
adc
les
dec
cmc
jbe
loopne
mov
rcrb
mov
loope
mov
xchg
mov
push
xor
rclb
push
mov
push
pop
mov
push
fcom
xchg
xor
sbb
sbb
out
sbb
push
jne
xlat
sub
insb
cmp
mov
fmul
sbb
jmp
notl
cs
push
outsb
test
aam
into
mov
dec
movsl
andb
xchg
lret
out
mov
mov
nopl
mov
xchg
rcr
pushf
mov
jmp
scas
inc
mov
in
push
popa
lcall
cltd
outsl
mov
push
aad
push
sbb
pop
clc
sub
stos
fwait
notb
mov
mov
sar
mov
cmp
scas
push
adc
fwait
test
xor
out
jmp
rolb
and
dec
scas
lods
sbb
cld
xchg
sub
mov
or
lret
add
push
mov
xor
sbb
daa
ja
pop
xchg
mov
mov
sbb
push
nop
into
xchg
sahf
pop
loopne
mov
orb
cltd
inc
loopne
jp
xlat
cwtl
lahf
xchg
rcr
call
imul
adc
adc
mov
cld
mov
iret
setle
ret
lret
dec
or
jl
add
and
push
ljmp
fbld
push
mov
dec
loope
push
fadds
lock
mov
adc
xor
call
imul
rcrl
add
lds
jnp
pop
enter
mov
pusha
leave
ljmp
jge
push
mov
xchg
mov
mov
or
sbb
cltd
push
mov
jle
cmpsb
dec
xchg
sbb
subl
scas
jp
fwait
sub
mov
sahf
pop
mov
pop
cmp
push
fistpl
icebp
add
popf
xchg
jge
pop
aam
subb
push
mov
int3
mov
aad
sub
mov
scas
lds
push
mov
nop
adc
adc
divb
je
inc
inc
pop
insb
xor
loop
fsubp
sbb
mov
push
sbb
sbb
js
mov
nop
lcall
filds
out
xchg
xchg
dec
into
sbb
add
int
pop
pop
push
jl
dec
fwait
clc
or
scas
add
pop
and
push
pop
dec
fstpt
adc
std
jno
movsbl
xlat
pop
sbb
sbb
aas
enter
insl
dec
sbb
pop
ljmp
lods
pop
add
cld
or
pusha
xchg
pop
aas
clc
mov
fldt
loop
jne
orl
cltd
mov
stos
dec
fadds
popf
inc
pop
dec
pop
jne
aaa
xchg
adc
mov
jnp
in
cmc
into
push
ds
xlat
push
aam
add
jecxz
popa
ficoms
ds
arpl
cwtl
pop
cld
mov
or
mov
call
push
lret
insl
mov
pushf
mov
ljmp
cmp
data16
jge
xchg
fsub
fnstsw
in
aas
xor
loop
jg
rolb
shl
gs
mov
sbbb
fcmovne
stos
int3
pusha
xchg
popf
into
push
or
adc
repnz
xchg
inc
mov
or
cmovnp
and
jnp
xchg
outsl
jg
daa
in
test
and
xor
mov
add
lahf
pushf
loop
clc
imul
jnp
or
jmp
jge
xchg
ficomps
icebp
jg
cld
aad
aas
sti
scas
pop
sahf
in
sarl
sbb
jmp
in
pop
pop
dec
push
push
mov
arpl
sbb
push
xchg
jb
inc
adc
adc
adc
dec
aaa
xchg
mov
mov
dec
push
mov
sbb
insl
fwait
ja
pop
clc
add
xchg
pop
insb
and
dec
sbb
fcmovnu
add
int
cmp
dec
shll
mov
lcall
lods
pop
or
and
cmp
or
mov
cli
sbb
call
push
push
add
sbb
lea
aam
push
adc
push
push
decl
and
movsl
mov
cmp
mov
dec
test
aam
je
das
out
adc
xlat
pop
adc
and
mov
loop
sar
xchg
lahf
jp
push
scas
mov
jne
xchg
jne
jns
jmp
lods
sbb
push
sbb
mov
jle
adc
xchg
mov
lods
inc
fistps
repz
aam
in
mov
imul
or
out
fldcw
mov
popf
mov
xor
sbb
xor
sbb
sbb
xor
mov
js
lods
outsl
adc
mov
rcrb
hlt
imull
push
addb
lcall
add
maxps
sbb
test
fadd
xlat
lahf
jmp
xchg
dec
std
ret
inc
pop
push
sbb
lret
sbb
adc
pop
mov
daa
xchg
mov
loop
push
xor
cli
jne
push
jge
fwait
ljmp
push
enter
xchg
cmp
dec
loop
mov
aad
int3
aaa
push
and
mov
ljmp
rcr
clc
je
addr16
jnp
sub
ljmp
dec
push
pop
ret
pop
or
inc
imul
mov
iret
add
xchg
sub
mov
arpl
sbb
loop
enter
cmp
sbb
jne
out
pop
fs
repz
lock
ret
pop
and
mov
push
out
out
and
xchg
scas
xor
jg
loop
adc
sahf
lsl
mov
mov
mov
mov
mov
outsl
adc
sbb
add
sub
xchg
test
mov
jp
mov
lock
lock
jge
fstl
xchg
cmp
adc
pop
jge
add
ret
scas
scas
out
jno
mov
sahf
shrl
cmp
add
mov
aad
fwait
sbb
add
and
insl
lock
testb
mov
lods
push
jo
pop
adc
sub
loope
push
add
pop
notb
pop
dec
fwait
push
fdivrs
push
jb
adc
inc
push
xchg
cmc
lahf
xchg
sub
mov
or
cmpsl
repnz
mov
je
xchg
push
inc
or
sbb
repnz
fdivs
das
fs
mulb
aas
fwait
mov
sbb
popf
pop
in
add
cmp
ja
loop
int
pushf
bound
mov
into
scas
add
pop
xchg
pop
pop
std
mov
ljmp
jle
setg
mov
jae
jno
inc
nop
or
push
sbb
aam
or
popa
mov
movl
loop
clc
jg
je
fidivs
inc
jae
lds
lea
add
mov
inc
push
cmp
imul
fiadds
adc
vprotd
and
sbbl
dec
adc
jecxz
les
cltd
inc
push
sbb
lea
cli
add
loop
mov
fisttpl
xchg
popf
jb
or
lock
mov
into
push
push
nop
mov
subb
popf
adc
test
mov
cmp
std
lock
and
out
cmp
rclb
mov
pop
les
movsl
mov
pop
mov
daa
fcmove
sahf
fbld
push
mov
pushf
pop
dec
in
cmovno
adc
sahf
popf
test
subl
jmp
sbb
jb
fwait
jno
push
xchg
repz
sar
in
pop
mov
mov
mov
inc
fwait
xchg
jae
xchg
inc
pusha
stc
icebp
lcall
ficomps
rcl
push
jg
add
pop
pop
outsb
and
fadd
add
fwait
arpl
jo
add
cmpsb
add
and
sbb
popa
aam
in
jns
push
lahf
fwait
cmp
jne
inc
pushf
mov
xchg
stos
cld
mov
jl
int3
jae
push
cmp
insl
fbstp
push
jno
xor
mov
push
push
sub
cld
mov
ljmp
imul
enter
jp
mov
push
cwtl
push
cwtl
and
sbb
push
push
sahf
notb
scas
loop
push
mov
adc
hlt
lock
push
adc
cmc
outsb
jl
fwait
lahf
mov
jge
jae
or
shl
popf
mov
icebp
cmp
pop
mov
sbb
scas
les
jp
adc
je
dec
push
add
sbb
inc
cmp
xor
enter
fdivrl
inc
in
sbb
pop
inc
clc
or
pop
push
sub
push
pop
mov
insb
xchg
fwait
xchg
test
mov
psrld
mov
stos
ja
lcall
leave
pop
or
aaa
push
or
fs
add
pop
jno
and
lods
push
adc
push
add
push
in
testb
pop
out
and
inc
js
pop
push
xchg
mov
xlat
imul
cli
pop
or
stc
pusha
mov
test
ds
pop
xor
push
scas
andb
push
ds
ljmp
xchg
cmpb
push
adc
push
in
inc
xchg
push
xchg
addb
fsubrp
orl
cmp
mov
xor
mov
pop
jae
insl
push
jmp
add
es
cmp
lea
loopne
jb
inc
repz
or
cmp
mov
pushl
adc
fdivl
pop
fwait
scas
lods
fwait
jnp
sub
adc
inc
dec
mov
mov
push
pop
lods
cmc
sub
repz
jp
mov
push
sub
insb
cmpl
daa
xchg
push
adc
lahf
jno
push
sbb
loop
and
sarb
pop
mov
rcll
out
aaa
xchg
imul
pop
and
xchg
mov
mov
sbb
iret
fmull
add
loop
add
in
jnp
mov
pusha
xchg
stc
sub
sbb
or
jno
in
lahf
sti
jmp
sbb
sub
xchg
call
xchg
adc
scas
std
pusha
adc
adc
aaa
out
inc
rcrb
sub
inc
and
adc
mov
mov
xor
xlat
jl
dec
sub
or
push
inc
dec
xchg
pop
out
rorb
xor
test
jbe
add
imul
cmp
and
out
cmpl
push
push
push
jbe
out
dec
popf
jne
outsb
sub
lea
cltd
mov
cmp
add
jl
sahf
js
push
xor
jns
dec
aas
aam
insl
cmpsl
sub
or
mov
ss
xchg
jne
enter
jle
add
loope
mov
nop
fsubrs
xchg
add
xchg
cmp
pop
fcmove
pop
or
adc
mov
jno
movsl
testb
sbb
jg
add
xor
fs
cmc
mov
out
int
add
pop
sub
pop
lea
sbb
cmc
pop
push
fcmovbe
xchg
fwait
cmp
mov
cmp
mov
lods
push
xchg
cli
ljmp
mov
inc
pop
movsl
cmpsl
jo
call
dec
or
in
hlt
out
subl
mov
rcll
cmp
sbb
mov
push
adc
fstpt
sub
mov
sbb
push
shlb
adc
add
pop
nop
xchg
sbb
mov
test
and
daa
mov
mov
fnstsw
xchg
mov
shrl
xchg
fsts
cwtl
fimuls
adc
fnsave
dec
movsb
mov
dec
imul
repz
jge
pop
push
mov
mov
mov
cmp
xchg
sahf
mov
xchg
sti
jns
fldcw
pop
and
jnp
addb
cwtl
mov
cmp
push
pusha
lahf
dec
jle
stos
pop
test
or
repnz
les
sub
popa
addr16
push
fwait
pop
sbb
gs
xchg
jbe
inc
xlat
enter
enter
pushf
lret
pop
inc
xchg
lahf
xor
sbbb
fnstcw
cltd
fwait
cmp
pop
in
mov
xorl
pop
cmp
adc
sbb
call
scas
or
pop
filds
sti
cmp
std
fstpl
std
fbstp
lock
and
xor
ja
pop
icebp
out
inc
jl
fs
dec
mov
add
ret
add
pop
in
push
push
xchg
lahf
mov
popf
lea
std
sbb
pop
cmp
pushf
pop
fldl
pop
xlat
pop
push
jmp
lahf
aam
dec
lods
enter
add
subl
xchg
xchg
push
ljmp
and
mov
xor
xor
pop
sbb
es
filds
addr16
pop
mov
or
jo
aaa
mov
into
popf
insl
add
rolb
xchg
rcrl
sarb
fbld
jb
iret
mov
shlb
push
divl
xchg
lods
inc
pop
pop
lcall
sub
insb
fwait
jno
test
jge
aaa
pushf
pop
cld
pop
mov
or
pop
jle
jnp
shl
adc
and
repnz
inc
jno
test
aaa
sahf
outsb
lahf
sbb
jne
imul
mov
scas
jecxz
and
lods
jge
pop
mov
rclb
fwait
pushf
dec
push
jp
xchg
add
mov
enter
sub
inc
pop
inc
push
or
aam
and
mov
pushf
sti
shlb
or
jno
jns
pop
pusha
fstpl
mov
jno
fisubrl
sti
cmc
adcl
ljmp
cwtl
mov
sbb
out
paddsw
out
push
xchg
addr16
push
inc
add
aad
and
adc
jg
push
or
aad
sbbl
xchg
testb
lahf
stos
cmp
mov
sub
ficomps
xor
pusha
jno
outsl
cmp
out
inc
cmp
out
mov
std
scas
out
mov
cmpb
xchg
push
xchg
mov
imul
sahf
pop
xlat
sbb
loop
aam
shll
push
xor
sbb
or
xchg
fwait
loopne
fidivrs
cwtl
push
sub
fistps
xchg
xchg
xchg
std
shl
adc
sbbl
aaa
sub
mov
popf
xlat
fdivrp
pop
popf
stc
inc
loope
sbbb
sahf
sbb
mull
mov
daa
sbb
rclb
movsb
xor
xchg
fsubrl
push
pop
in
jge
mov
jmp
and
sub
addl
clc
dec
jns
movsb
enter
mov
jmp
loop
pop
adc
negb
dec
mov
daa
jns
stc
and
cli
dec
mov
xor
adc
popa
jg
pop
xchg
jl
and
popf
jne
faddp
inc
xchg
jnp,pn
push
xchg
movsl
or
dec
movsb
jmp
jno
pop
jo
mov
ja
jno
nop
cltd
sbb
pop
push
mov
pop
std
xchg
rcr
loopne
int3
or
pop
xchg
in
in
mov
xchg
and
sub
je
adc
sbb
ret
mov
cli
cld
shrb
scas
fsubs
sbb
lods
out
jno
mov
inc
mov
ss
mov
dec
ja
stos
repz
cmp
pop
shr
push
pop
shl
out
xchg
adc
pop
sbb
pop
pop
stos
cwtl
adc
cmp
addl
in
fstpt
xchg
push
mov
push
adc
pusha
std
sbb
outsb
push
pushf
imul
sarb
fwait
mov
sub
test
adcb
pop
push
adc
inc
leave
xor
loope
jo
dec
mov
pop
cmp
hlt
push
mov
dec
jmp
out
push
and
je
out
les
int
aas
mov
loop
mov
cmp
push
mov
into
dec
mov
mov
pop
stc
mov
sbb
iret
dec
xor
xchg
sbb
lahf
cld
mov
imul
mov
fisubs
xchg
cwtl
adc
sbb
sysenter
xchg
arpl
xor
xchg
in
mov
lret
pop
movsb
in
lds
or
xchg
sub
mov
jl
pop
dec
pop
jle
mov
cmp
xor
sbb
fdivl
shll
fists
jbe
loopne
out
je
inc
ja
xlat
rcrl
adc
ja
pop
push
outsb
pop
lea
jbe
mov
test
push
mov
into
mov
leave
mov
bsr
push
ficoml
pop
jbe
xor
and
sbb
les
sub
sti
and
xchg
test
add
dec
sbb
mov
pop
lea
xchg
xor
push
stos
add
insb
scas
mov
cmp
xor
mov
adc
sarb
mov
hlt
pop
push
in
mov
mov
es
fwait
pop
fwait
cld
scas
filds
div
push
mov
xorl
fidivrl
push
pusha
sub
jg
jge
pop
xchg
es
lcall
adc
xchg
out
ds
cld
pop
add
xor
jnp
and
mov
inc
adc
xchg
xor
stos
das
mov
cmp
pushf
jnp
mov
push
mov
stc
out
xor
xor
lahf
fldl
sar
test
ja
and
mov
sti
add
add
inc
mov
mov
mov
lret
mov
cs
and
mov
addr16
push
fmul
mov
test
lea
pop
push
and
shll
jnp
into
cld
sub
sbb
test
std
add
pop
mov
out
aaa
xlat
out
sbb
mov
sbb
dec
faddl
pop
lahf
or
xchg
out
into
lds
stos
or
sahf
add
cmp
pushf
ficoms
ds
es
lds
xchg
in
test
outsb
jne
out
push
aad
xchg
cmp
pop
inc
sbb
out
notl
sub
dec
add
jne
scas
imul
fisubl
add
mov
or
adc
leave
adc
repz
add
jae
outsb
shlb
pop
fwait
adc
dec
pop
mov
and
pop
push
mov
fwait
and
ljmp
and
arpl
fcompl
cmp
pop
pop
add
xor
cmc
int3
mul
jecxz
cltd
mov
loopne
push
cmp
or
cwtl
ja
outsb
jecxz
mov
mov
mov
mov
pop
into
adc
dec
cltd
pushl
sub
jo
cmp
and
xlat
xchg
mov
pop
test
ss
push
xor
addr16
rcr
and
xchg
out
dec
ret
aam
sti
clc
lock
jge
fldt
fstpl
jge
mov
mov
mov
loope
idiv
test
jo
push
sub
add
cmp
leave
mov
jnp
sbb
lahf
sbb
jl
into
xor
test
inc
cmp
xchg
test
sub
repz
mov
and
or
jmp
jl
sahf
rcrb
jnp
cmp
movsb
int3
addr16
fistpl
lcall
js
gs
mov
jecxz
mov
popf
ficompl
ret
push
add
cltd
fbstp
cmp
and
adc
out
scas
xchg
push
cmp
fdiv
movsl
cli
and
sahf
leave
cmc
and
pop
push
fiaddl
test
dec
xlat
repz
aam
subb
jecxz
fmull
cmp
test
pop
cmpsl
xchg
add
idivl
filds
addr16
lahf
imul
mov
mov
sti
out
jl
adc
jp
inc
rorl
leave
jae
add
jp
xchg
jnp
stos
les
jno
dec
lcall
fwait
mov
scas
stc
lcall
cltd
pusha
fucom
pop
mov
mov
mov
lea
mov
jae
lods
scas
push
dec
adc
or
adc
ds
add
pop
cmp
sahf
add
push
dec
adc
xor
pop
adc
mov
pop
mov
loop
sbb
mov
mov
jecxz
sub
mov
jl
jmp
outsl
int
adc
cmp
mov
fldenv
dec
push
add
scas
sti
jmp
fwait
jae
imul
xor
inc
ret
sbb
hlt
stc
jo
xor
xchg
cwtl
fbld
hlt
sub
insl
jg
ss
shll
sahf
mov
add
dec
cmp
fdivl
push
repz
div
aaa
mov
ds
mov
rcrl
push
mov
or
fwait
or
pop
rcrl
add
and
pop
pop
sbb
jle
push
dec
fs
test
mov
and
sbb
sbb
cmp
ljmp
fistl
ret
mov
ret
cmp
fndisi(8087
push
sti
jle
fcompl
cmc
cmp
jle
pop
sti
fsubrl
jl
sub
xchg
or
stos
sbb
sub
push
dec
sbb
pop
cmpsb
lock
ret
sti
add
fwait
rclb
add
pop
sti
or
test
or
cmc
stos
addr16
stos
xor
daa
scas
add
out
xchg
out
js
cmpsb
and
mov
push
aaa
cmp
cltd
insl
pop
pushf
nop
adc
sbb
in
push
push
adc
js
outsl
sbb
inc
or
xorl
xor
leave
les
add
sbb
and
inc
dec
pop
fwait
stos
push
mov
push
cmc
testb
aam
sbbl
add
iret
lock
pcmpeqb
sub
fcomps
add
fcoms
pop
mov
xchg
fcomps
hlt
stc
imul
mov
inc
data16
mov
popf
sti
fs
cmp
and
pop
mov
dec
pop
out
xchg
cmp
pushf
pop
fidivrs
notb
dec
ljmp
cltd
cs
jge
xchg
sahf
adc
xor
jecxz
jnp
sti
dec
sbb
cmp
push
sti
cwtl
xchg
fstp
stc
popf
ja
pop
pop
sub
jns
jns
paddw
pop
lea
test
ret
pop
inc
test
inc
mov
mul
push
sbb
jns
xchg
or
pop
pop
ds
out
add
shll
cmpsb
lcall
fcoms
jne
sahf
lahf
inc
fs
xchg
rcl
adc
fsts
into
cmp
xchg
ds
out
in
push
mov
or
mov
adc
mov
rorb
popf
push
push
sub
sbb
add
repz
xchg
sbb
mov
xchg
hlt
repz
sbb
repz
andb
into
psllq
adc
pusha
rcrb
xlat
scas
cmp
call
add
pop
dec
jg
xchg
mov
lret
hlt
mov
push
lret
outsb
popa
out
xchg
shrb
dec
mov
fwait
add
stos
mov
pop
adc
sbb
ficompl
out
pop
pop
outsl
lds
lahf
int
adc
xchg
fmuls
cmp
nopl
mov
lcall
pop
xchg
inc
mov
sbb
push
mov
add
mov
mov
push
push
outsl
jno
into
aad
inc
scas
sbbl
adc
loopne
data16
fmulp
pop
adc
ret
loop
sbb
sbb
sbb
test
sti
int3
sbb
adc
push
insb
sbb
cltd
scas
xchg
pop
jp
fsts
fsubs
xorb
popf
into
pop
lcall
hlt
jmp
adc
mov
cmpsl
cltd
sti
cmp
push
mov
xchg
push
out
lret
ja
or
js
inc
lret
rcr
mov
stos
cltd
pushf
insb
arpl
xchg
clc
repz
cmp
cld
jmp
lods
adc
jp
push
mov
aas
add
xlat
sbb
xor
mov
jmp
leave
cmp
cltd
cmp
add
cld
scas
xchg
adc
push
mov
mov
rcrl
pop
cs
notb
int
aad
fisttps
daa
sarb
into
adc
jp
int
xchg
pop
nop
icebp
fstpl
mov
push
push
insl
mov
fistpl
addr16
dec
jbe
jge
pop
adc
cmc
jns
fisubrl
sub
lret
imul
and
std
adc
push
push
sbb
cmp
nop
sbb
outsl
divb
mov
int
rcrl
pop
pop
inc
adc
sub
cmp
repz
mov
cmp
nop
iret
div
xchg
lods
cmp
mov
jmp
ja,pn
and
or
mov
xchg
leave
xor
pushf
into
xchg
lods
rolb
jns
inc
mov
mov
xchg
push
shlb
cs
js
pop
lea
mov
into
dec
cmpsb
scas
push
sbb
das
inc
cmp
xchg
cmpb
push
out
fists
mov
insb
jp
data16
cmp
pop
mov
icebp
shlb
xchg
lcall
pop
fildl
std
jl
pop
sub
mov
jge
sbb
xchg
daa
scas
scas
adc
jo
jnp
inc
lods
ss
mov
lds
leave
rolb
fistps
sbb
fisttps
cmp
sti
sbb
sbbb
or
sbb
jno
adc
or
jae
dec
fwait
adc
outsb
dec
push
push
stos
sbb
out
notl
addr16
imul
in
imull
pop
xchg
iret
aam
cltd
xor
ja
add
fstl
mov
jg
cmp
push
xchg
stos
or
fildll
orb
add
jg
roll
xorb
ljmp
sbb
add
adc
sahf
or
mov
dec
and
xchg
sti
sub
adc
cmc
fistpl
inc
mov
cmp
mov
aaa
loopne
xorb
mov
ljmp
aam
inc
xchg
sbb
out
xchg
nopl
sbb
call
pop
xor
pop
push
jno
out
xor
fisubrs
cmp
cld
xor
pop
ds
cwtl
or
mov
mov
sub
jno
ja
push
out
rcll
mov
pop
jne
sbb
jnp
out
xchg
clc
cmp
jne
lret
ret
sbb
ljmp
jecxz
fcmovnu
sub
push
mov
sbb
fisubrs
push
stos
mov
add
lods
jns
loop
inc
mov
js
xor
lret
fwait
xor
mov
or
scas
dec
xor
cmp
mov
repnz
mov
adc
ljmp
and
lahf
jne
in
push
inc
fistpl
jo
sub
fiaddl
and
xor
jp
aam
pop
or
mov
leave
subb
popf
push
mov
xor
js,pn
lret
push
and
push
cmp
mov
lds
orl
cmp
jnp
popf
push
cmp
adc
and
popf
cmp
aam
sbb
mov
scas
fstl
push
test
shr
sti
add
or
imul
pop
sbbl
or
ss
gs
hlt
movsb
out
mov
cmp
jmp
ja
arpl
int
std
pop
cmp
loop
jg
xchg
add
mov
ss
dec
push
ja
fsubr
dec
mov
lret
pop
outsb
cmovb
xchg
add
imul
xchg
aad
add
loop
cmp
mov
enter
jns
push
jecxz
faddl
push
and
mov
fwait
ret
loope
sub
scas
fnstsw
movzbl
jns
cld
pop
out
jnp
popf
mov
jno
ja
fwait
xlat
pop
mov
xchg
pop
movl
inc
out
cmp
mov
mov
aas
cwtl
mov
loope
add
inc
mov
jbe
add
jo
lea
cmc
mov
mov
pop
mov
mov
bswap
stc
adc
clc
fwait
mov
dec
mov
iret
sahf
lahf
jnp
sub
out
les
decl
scas
or
cmc
xchg
cmp
std
hlt
std
das
inc
stc
push
pop
cmpb
xor
xor
aam
mov
iret
push
mov
rorl
pusha
fiadds
xor
mov
in
mov
or
dec
fscale
or
cmpl
fadds
out
jle
mov
je
loop
or
in
xchg
divl
pop
push
shrb
jg
cmp
stos
sbb
inc
sbb
inc
shll
sti
jno
dec
mov
fs
outsl
mov
mov
cmpsb
mov
rcrl
push
lcall
mov
xchg
and
pop
pop
cli
add
push
pcmpeqw
xor
cs
mov
dec
cmp
xlat
inc
test
push
mov
aad
push
sbb
ret
cli
sub
pop
mov
xor
arpl
clc
ficomps
jge
mov
stc
mov
popf
test
xor
push
jns
jg
adc
push
xchg
mov
pusha
jge
jl
add
jle
dec
lods
xchg
xlat
aaa
popf
outsl
mov
xchg
popf
jp
sub
fisubrl
mov
adc
int
test
xorb
xchg
hlt
xchg
add
jp
lahf
out
push
shlb
inc
daa
or
and
push
jle
cmp
ret
frstor
sbb
push
push
addr16
dec
adc
xor
or
mov
cmpl
ljmp
inc
xchg
jne
or
es
mov
leave
sub
lcall
xchg
into
out
lds
cvtdq2ps
and
mov
ja
mov
mov
and
iret
dec
shlb
jbe
push
in
into
inc
push
movsl
std
cmp
mov
mov
outsl
sbb
outsb
insl
test
mov
add
jle
lcall
cmp
pop
lcall
lea
cmp
pop
addr16
and
inc
popf
jg
clc
xlat
pop
pop
bound
pushf
movl
mov
or
push
aaa
popa
jge
pop
lds
or
shlb
ljmp
out
mov
movsl
outsl
add
imul
jnp
cmpsl
cmpsb
pop
ficompl
out
push
add
dec
mov
std
aas
cld
adc
lods
loopne
divb
mov
adc
push
in
push
inc
sti
dec
sub
mov
mov
outsb
xlat
call
and
movsb
xchg
testl
loopne
pusha
pop
sbb
add
das
movsb
fists
add
jbe
ljmp
add
and
call
push
inc
mov
insl
inc
nop
pop
push
mov
inc
movsl
sbbb
cs
mov
ss
sbb
enter
fcomps
addl
pusha
mov
cmovne
pop
mov
stos
inc
nop
sbb
fidivrs
and
sti
negb
inc
lods
fwait
cmpsb
pop
arpl
mov
mov
mov
inc
cmp
jne
mov
ficompl
fcompl
clts
jne
lahf
pop
in
fadd
std
sbb
jne
xorl
push
xlat
out
push
sbb
out
and
lcall
dec
xor
cmp
xor
sub
cmpsl
and
fistpl
fcomps
and
mov
inc
cmpsb
arpl
xor
pop
popf
jge
mov
or
mov
xchg
sub
pop
pushl
and
loopne
call
push
cwtl
and
fcoms
inc
int
into
lret
mov
test
sbb
outsb
jle
sbb
cli
testl
lods
xchg
aas
xlat
jle
out
and
cld
push
fstpl
xlat
dec
mov
adc
jne
or
je
dec
cmp
fiaddl
mov
fcomps
mov
mov
movsb
or
and
mov
pop
push
popf
or
lcall
xlat
pop
outsb
or
jmp
jbe
jp
movsb
mov
rcl
mov
ret
inc
dec
push
mov
imul
out
push
rolb
pop
xchg
xlat
rcl
lret
adc
adc
in
iret
add
int3
lahf
fmul
xchg
lret
sahf
jnp
cld
sub
loopne
pop
add
scas
add
aam
lret
lret
popf
pop
enter
addb
xchg
mov
lcall
mov
popf
or
mov
lret
dec
jae
and
lahf
icebp
jle
pop
pop
cltd
push
inc
push
push
pusha
es
mov
out
shlb
shrb
mov
cld
fdivrs
pop
inc
es
iret
jl
cmp
jbe
ret
std
sbb
popa
ja
sbb
cmp
push
fwait
je
out
jno
push
pop
sub
decb
call
popf
fildll
inc
jecxz
fwait
std
jmp
lahf
pop
pushf
das
fstl
loopne
and
xchg
xchg
sub
xchg
mov
call
add
add
dec
push
cltd
sub
mov
cmpsb
pop
in
out
xchg
dec
inc
bound
sbb
adc
pushl
jno
loope
es
fcoml
xor
dec
jp
inc
inc
or
sbb
push
cwtl
sbb
lods
ret
xor
dec
xchg
xor
push
in
inc
sbb
mov
dec
out
mov
xchg
js
lds
enter
inc
push
xor
mov
mov
add
mov
add
xlat
dec
sti
cmpb
push
sub
aad
loopne
addr16
add
pop
jo
adc
sbb
aad
int3
inc
xor
adc
add
cli
out
test
mov
mov
sbb
orl
hlt
sub
int
pop
lods
mov
xchg
pop
sbb
pop
sbb
fidivrs
pop
mov
inc
cmp
std
inc
cmc
subb
jg
push
push
call
push
cltd
pushf
ret
xchg
popf
sti
mov
mov
test
jge
ss
std
js
or
je
pop
pop
mov
xlat
ds
push
mov
scas
xor
fwait
push
aad
sbb
addb
lods
sub
pop
out
into
sub
dec
cmp
cmp
repz
imul
shll
mov
push
loope
sub
sets
pop
rcrl
cmp
pushf
leave
sbb
arpl
mov
pushf
in
mov
popa
sbb
movswl
push
and
ret
cltd
sbb
sbb
adc
or
mov
mov
xchg
mov
sbb
inc
add
andl
or
xchg
arpl
cmp
xchg
pop
mov
jge
bound
gs
pop
mov
notb
push
repnz
fstl
and
cwtl
inc
cld
push
mov
hlt
mov
jle
test
aaa
push
out
inc
dec
push
xchg
push
scas
push
xor
xor
jno
xchg
mov
or
cwtl
pusha
jp
push
xlat
pop
je
adcl
flds
sub
push
pop
mov
xor
lea
pushf
ficoms
sahf
and
hlt
adc
je
push
mov
cltd
andb
leave
push
popf
or
add
mov
xor
fwait
sahf
jae
enter
pop
loop
lds
xchg
into
xchg
and
ficomps
pop
cli
jno
xlat
mull
pusha
cs
jne
cmpsb
xchg
xor
mov
push
pop
adc
loopne
push
mov
push
dec
add
movsl
push
sub
pop
out
orb
xchg
leave
pop
jl
sbb
je
adc
std
pop
mov
pop
jne
sbb
fwait
xchg
sti
mov
lods
repz
xchg
inc
mov
xor
fwait
sbb
ja
test
cmp
add
div
mov
callw
loop
add
movsb
jge
pop
pop
fstpl
sub
mov
xor
imul
stos
and
ss
mov
adc
dec
mov
into
pop
lcall
add
adc
pop
aam
pushf
in
mov
mov
jl
inc
out
lcall
sbb
mov
mov
mov
add
push
ds
mov
ja
rorb
xchg
je
push
add
sbb
aad
mov
jge
cmp
mov
jno
add
outsb
aaa
ljmp
dec
jbe
mov
mov
jno
cmpsl
xor
xchg
in
ja
push
addr16
push
sub
arpl
in
sub
sbb
dec
jmp
xchg
lret
pushf
fstp
lods
ljmp
popf
stos
scas
lret
add
out
jne
nop
imul
jecxz
in
fsubrs
vmovaps
jmp
loope
mov
mov
cmp
and
mov
rorb
insb
add
adc
push
sahf
out
xchg
popf
cmpsl
pop
cltd
pop
or
sbb
sti
mov
int
cmpsl
xor
jecxz
jge
jns
scas
sbb
mov
sub
in
mov
ss
or
addl
into
pushf
and
cmp
pop
fwait
jno
mov
lock
mov
adc
jo
loope
jns,pt
xor
insb
test
loop
leave
pushf
sub
cwtl
pop
jg
cli
iret
outsl
jno
push
roll
mov
and
fs
pop
jp
dec
add
cmpsl
fwait
neg
sbb
inc
clc
adc
in
shlb
loopne
push
cmp
xor
jl
dec
shrb
aaa
sub
xchg
in
lcall
cmp
mov
push
pop
xchg
lock
mov
lahf
xor
adc
in
cwtl
pop
inc
pop
add
test
leave
fstl
inc
sbb
jno
fcoms
cwtl
ret
dec
aad
lret
cmp
out
mov
aam
adc
mov
mov
add
arpl
inc
jp
inc
cli
jecxz
ds
cmp
scas
jno
pushf
cmc
and
mov
xchg
push
mov
jns
sbb
flds
leave
int3
stos
aam
scas
xchg
cltd
sub
sti
fistpl
jbe
ds
scas
lret
add
stos
fisubl
test
lds
mov
pop
lcall
mov
push
push
sbb
dec
aaa
inc
jmp
add
mov
mov
add
out
scas
lcall
test
divb
mov
mov
sbb
inc
xchg
mov
lea
xchg
jo
cmpsl
push
mov
sbb
scas
add
push
add
lea
fs
dec
fcmovb
xchg
loop
mov
push
push
push
cmp
cmp
inc
add
das
repz
xchg
lea
or
mov
sub
je
and
inc
adc
push
inc
mov
repnz
add
jnp
into
xchg
incl
fwait
jecxz
arpl
xchg
mov
cwtl
and
pop
mov
sbb
inc
clc
cmc
shlb
cmp
scas
cwtl
outsb
mov
fidivs
xchg
pop
sub
pop
ds
sub
add
pop
jae
fldenv
inc
dec
sub
ds
in
xchg
pushf
adc
mov
jnp
or
sub
out
cltd
cmp
sbb
lcall
xor
mov
ds
xchg
mov
sbb
ds
sbb
push
cli
mov
aad
ss
xchg
mov
sbb
jg
pop
adc
ss
repnz
mov
out
push
jge
inc
sbb
iret
pop
xor
imul
imul
pop
cmp
xchg
fldl2t
call
xchg
lods
stos
sahf
mov
ljmp
or
sbb
dec
sarb
ja
mov
jnp
in
repz
testb
mov
scas
mov
mov
pop
movsl
push
jnp
arpl
jae
add
popl
jae
mov
lods
xchg
leave
pop
mov
adc
mov
jo
pop
pop
jmp
or
inc
cmp
push
shll
mov
or
sub
jecxz
stos
mov
hlt
loopne
pop
mov
mov
cmp
cmp
mov
sbb
push
std
lods
sbbl
xlat
xor
jecxz
cmp
pop
jle
scas
sahf
cmp
js
adc
and
mov
cmpl
pushf
push
push
cld
or
push
mov
or
mov
fiadds
push
or
xor
mov
add
loop
cs
dec
push
sahf
add
filds
mov
int3
fsub
lds
pop
std
test
adc
pusha
insl
fs
in
insb
rolb
enter
loop
cmp
jno
cld
add
std
sbb
sbb
clc
mov
jns
pop
fwait
pop
clc
push
fisubl
sbb
ja
lahf
add
xchg
pop
mov
jnp,pt
mov
cld
sub
inc
add
sbbb
adc
sub
ds
ds
and
cmp
cltd
insl
push
icebp
adc
add
lahf
aaa
inc
mov
pop
fnstenv
nop
fisttpll
inc
push
mov
sbbl
sbbb
cmp
aam
testl
sbb
jno
sbb
fs
out
das
adcl
scas
inc
xchg
push
stos
int
add
ror
je
push
scas
mov
mov
cbtw
ret
cmpsl
push
xchg
into
sahf
xchg
mov
sub
nop
cmp
inc
jo
fnstsw
cld
xchg
add
test
push
dec
inc
mov
pop
fstps
push
test
mov
adc
dec
mov
push
cmp
and
gs
pop
inc
loopne
xor
adcl
mov
push
pop
lds
jno
push
xor
insl
ds
test
push
add
ds
sbb
jle
mov
jno
push
pop
adc
jg
pop
pop
test
xchg
push
push
adc
lahf
int
aaa
push
imul
gs
sti
aad
outsl
lock
push
push
fcmovu
mov
aam
out
addl
mov
popa
add
mov
ret
jecxz
push
out
unpckhps
sti
leave
cmp
xchg
xchg
fwait
jns
add
xor
imul
idivl
mov
test
sbbl
into
pop
notb
lods
lret
pop
dec
js
cwtl
mov
sub
sbb
push
insl
imul
mov
ret
dec
inc
sbb
iret
jnp
sub
sub
enter
into
and
sbb
sahf
mov
movb
gs
loop
jb
out
int
xchg
pusha
pop
cmpsb
mov
inc
adc
jge
loopne
lds
xchg
iret
sti
scas
dec
sbb
test
and
insl
in
sub
daa
aaa
out
out
mov
pop
aaa
cmp
push
jp
jg
cld
xchg
dec
fucom
lret
sbb
cmp
xorb
mov
insl
mov
int
inc
and
xlat
xchg
inc
sbb
loopne
fstp
jno
add
dec
iret
scas
gs
xrstors
nop
cmp
test
in
lock
iret
mov
push
scas
inc
jecxz
push
xor
xchg
adc
xchg
mov
lret
or
mov
out
ret
test
dec
push
enter
mul
xchg
jg
xchg
sub
mov
enter
aaa
push
jg
mov
lret
sbb
jmp
sbb
int
out
push
jno
or
mov
pop
sarl
mov
xchg
loop
outsb
jne
orl
adc
int3
pop
sub
adc
mov
in
or
adc
divl
pop
fistpl
pop
rcrb
and
or
inc
pop
icebp
fwait
sbb
loop
lahf
mov
lock
sbb
mov
mov
imul
sbb
js
cld
pop
scas
test
sub
outsl
js
je
xchg
xlat
loop
add
mov
pop
pop
mov
jg
les
andb
mov
push
cli
stos
sbb
pop
ja
pop
ret
push
jns
mov
cli
mov
fidivrs
inc
fisttps
mov
jnp
inc
inc
and
and
cwtl
inc
add
aas
fdivrl
and
pusha
push
adc
push
aas
xchg
mov
lret
mov
mov
cld
pop
fmulp
sti
dec
pusha
xor
inc
cmp
jns
cmp
add
js
in
push
and
or
sbb
cld
and
repz
inc
mov
or
inc
ja
out
sahf
sti
fildll
js
sti
lahf
adc
pop
mov
fistpl
pushf
and
mov
leave
sbb
in
sbb
cltd
and
sbb
insb
push
push
xchg
mov
or
jo
scas
pop
bound
clc
add
jnp
mov
rcl
js
push
negb
sbb
adc
xchg
adc
out
sbb
inc
mov
fisubs
filds
jae
adc
push
into
fs
mov
out
sbb
mov
rcr
cmp
mov
push
dec
rclb
iret
add
fcmovnb
xor
bswap
dec
pusha
fldl
cmp
out
das
das
mov
cmpsb
xlat
inc
mov
add
mov
fwait
stc
mov
orl
hlt
ficomps
add
negl
jg
sbb
fnstenv
cmpl
inc
dec
mov
subl
mov
test
test
mov
cmpl
test
ret
fisubl
pop
dec
test
fwait
mov
popf
push
pop
pop
pop
push
cmpsl
addr16
mov
iret
sbb
jno
fistl
outsl
mov
fwait
or
fstpt
mov
je
pop
fisubl
and
aaa
in
jge
loop
mov
pop
or
adc
cmp
out
in
mov
loop
push
insl
imul
adc
jno
aad
or
sub
fcmovnu
mov
sbb
out
adc
scas
adc
cmp
pop
loop
shr
adc
sbb
pop
pop
filds
add
into
loop
scas
push
lds
adc
xchg
sbb
fwait
pusha
sub
jae
out
jle
dec
push
jno
add
push
pop
inc
jnp
imul
iret
add
aad
jg
push
mov
add
js
mov
jno
repnz
and
insb
cli
push
scas
or
xchg
jle
cltd
sti
popl
push
pop
push
mov
arpl
ss
sub
dec
jl
ret
mov
adc
mov
inc
push
xchg
pushf
subl
dec
xchg
popa
fdivr
sbb
pop
ret
stc
mov
pushf
iret
xchg
push
in
adc
sub
fcmovnbe
and
mov
xor
or
outsl
sbb
lods
xor
mov
cmp
lods
xor
jae
sbb
push
add
and
push
fsubrl
mov
push
pop
rol
sbb
inc
mov
pop
adc
inc
fcmove
out
insl
cmp
mov
add
adc
enter
outsl
push
aad
xor
mov
int
aam
sbb
outsl
jmp
icebp
mov
cmpsl
adc
pusha
mov
enter
ja
inc
cli
xor
pop
in
aam
xchg
cld
adc
xchg
fsts
jge
sahf
cwtl
shrl
xchg
sahf
cmp
leave
jne
cli
push
xchg
and
test
sub
or
xchg
pop
mov
loope
sbb
das
por
jno
pop
add
fs
pop
clc
mov
jmp
mov
fmuls
xchg
popf
clc
fiaddl
sub
mov
jns
rcrb
push
jecxz
jo
aas
jbe
lods
jp
mov
push
adc
pop
jecxz
adc
rcrb
sbb
pop
incb
into
dec
pusha
fs
xor
cmpsl
sub
add
push
daa
push
cmp
outsb
mov
jl
jnp
inc
xor
adc
loope
fisttpll
outsl
xchg
fildll
ja
sbb
adc
js
jp
sbb
inc
jg
xor
adc
rol
arpl
inc
lahf
jp
push
pop
mov
cmp
xchg
push
jp
scas
stc
sbb
cmp
rdmsr
mov
jge
cwtl
push
js
and
sub
push
xchg
ja
in
add
mov
fldt
xor
popf
mov
jmp
pop
mov
add
sbb
push
xchg
fildll
fnstsw
sub
or
pop
add
arpl
sti
leave
pop
fstpl
into
aaa
mov
mov
shrl
ficoml
inc
in
add
dec
xchg
outsl
add
leave
stos
out
sbb
std
xchg
mov
fs
pusha
lcall
fldt
adc
xchg
je
or
outsl
pop
pop
js
in
sti
lahf
add
jne
cmp
inc
mov
sbb
mov
fwait
pop
inc
mov
or
mov
cmp
xchg
push
push
ret
adc
sbbb
mov
sub
pop
adc
xchg
pop
jno
or
xchg
je
scas
sbb
out
dec
inc
div
test
jecxz
push
inc
es
and
out
jg
out
xchg
push
adc
jecxz
ja
cmp
or
jae
in
xchg
int
jno
sarl
lcall
cltd
dec
sub
push
dec
insb
sbb
clc
inc
adc
sub
xor
sti
jno,pt
xchg
fcomps
or
sarb
inc
iret
test
sbb
cmp
je
xchg
pop
adc
adc
mov
xor
adc
cmpl
or
push
jmp
in
aas
xlat
data16
flds
pushf
jecxz
aas
jge
add
mov
pop
jge
sub
out
pop
inc
adc
test
pop
xchg
sahf
or
dec
and
int3
sub
xchg
inc
sbb
movzwl
les
or
inc
inc
leave
gs
jae
sbb
cmpsl
mov
jecxz
mov
jp
dec
in
sbb
sbb
add
mov
cmp
int3
mov
sub
pop
jg
imul
dec
pusha
dec
mov
out
jnp
add
loopne
push
pop
jle
pop
aaa
xchg
fistl
insl
addr16
test
out
fisttps
xchg
jnp
lods
sbb
push
lds
xchg
pop
imul
loop
sbb
adc
shll
add
mov
xchg
aad
adc
std
call
mov
xchg
std
jnp
push
shrb
xchg
adc
pop
fcompl
inc
out
pop
out
sbb
mov
cli
dec
push
loopne
cmp
cmc
jp
out
stos
fsts
or
adc
xlat
sbb
lret
adc
outsl
pop
inc
je
fwait
in
cmp
icebp
push
xchg
xor
loop
cmpsl
push
xor
stc
fcmovbe
push
xchg
scas
push
in
mov
idiv
mov
inc
adc
sbb
mov
decb
gs
pop
stos
test
sbb
add
popa
sbb
movsb
mov
lret
mov
xchg
fmull
mov
insl
sub
ret
pop
faddl
popf
adc
daa
cmp
nop
out
inc
je
test
lock
add
notb
sbbl
dec
add
cmpsb
int
aam
aam
jg
sbb
cltd
into
in
jmp
iret
jg
and
es
fstpl
and
cld
rclb
icebp
scas
std
pop
xchg
lret
mov
push
sarb
out
neg
in
lahf
out
mov
icebp
dec
push
mov
scas
hlt
push
mov
pop
mov
rcll
cmp
cmp
sahf
sbb
fucomi
adc
mov
enter
jno
sub
lret
push
sub
cmp
sbbl
xor
adc
mov
sbb
and
lahf
push
dec
push
test
aaa
jmp
jp
sbb
cmp
jle
pop
jno
xor
ss
mov
cmpsb
fidivs
add
orl
lock
fimuls
pop
movsl
cmp
hlt
je
pmuludq
adc
cmp
es
mov
lcall
lret
sbb
notl
push
push
test
pop
iret
iret
fwait
cmpl
xchg
cmpsb
test
push
decl
notb
out
jns
sub
mov
cmp
andb
mov
pushf
mov
loopne
fmuls
mov
mov
fistl
xchg
jno
imul
int
in
add
adc
add
outsb
dec
movsl
popf
fcomps
sbb
pop
jno
fstpt
dec
sub
sbbb
xor
stos
in
js
cmp
fcoml
jne
dec
xchg
push
sbb
add
dec
pop
sbb
sti
pushf
repnz
xchg
aas
or
lock
xchg
and
mov
pop
fimuls
outsl
adc
mov
fsubl
jo
std
mov
xchg
mov
into
adc
cmc
push
or
jge
mov
test
mov
mov
sbb
ds
dec
pop
or
mov
arpl
push
out
shrl
pop
sbb
insb
inc
xchg
pop
fwait
sbb
adc
sbb
mov
jl
ljmp
cmp
movsb
add
inc
mov
pushl
insl
aaa
ds
mov
leave
push
es
outsb
shl
push
pusha
sbb
out
mov
and
movsb
leave
daa
mov
nop
push
add
ljmp
xorl
fiadds
arpl
fisubrl
lret
aam
or
fwait
mov
cmp
cmp
out
cld
or
adc
stc
sub
gs
outsl
movsb
dec
cs
push
push
dec
pop
mov
lahf
adc
stos
mov
fdivr
out
inc
mov
pusha
xlat
adc
push
incb
xchg
gs
frstor
enter
into
or
ja
push
lcall
std
pop
aad
pop
mov
xchg
test
popf
std
popa
aad
pushf
std
int
sbb
xchg
sub
mov
lcall
movsb
fs
in
loop
aad
sbb
dec
or
sbb
test
int3
sti
cmp
adc
pop
push
into
call
mov
sbbl
stos
scas
mov
into
jmp
mov
pop
ds
and
and
pusha
sbb
push
leave
inc
and
or
push
cmpsl
mov
jnp
jge
mov
sub
mov
or
push
mov
sbb
add
ror
mov
lods
mov
out
ret
adc
pop
adc
fisttpl
and
push
sbb
push
lea
lahf
sahf
xchg
ficomps
xchg
add
xchg
cmpsl
sbb
mov
xchg
hlt
sbb
lahf
std
inc
sbb
push
inc
adc
mov
jbe
or
pushf
out
in
jnp
decb
jl
into
adc
sbb
std
xor
xchg
and
test
bswap
fisubrs
mov
ljmp
popa
popa
je
fmuls
sbb
into
adc
xlat
dec
lcall
push
mov
xchg
negb
lahf
nop
lock
mov
push
out
xor
inc
out
jecxz
gs
sub
adc
xchg
stc
mov
mov
nop
mov
sbbl
pop
mov
or
popf
or
xlat
cld
xchg
sbb
mov
xchg
mov
fadd
loop
adcb
es
cli
jmp
rcll
lret
clc
cwtl
loopne
ds
inc
loopne
inc
sbb
xor
rclb
or
movsl
or
mov
lret
inc
pop
sub
and
out
sarb
popf
repnz
cmp
add
adc
mov
fucomip
mov
dec
or
mov
push
pushf
adc
adc
xchg
cwtl
adc
mov
fdivs
iret
xchg
shl
xchg
popf
sahf
mov
lcall
mov
sbb
jle
dec
mov
mov
lods
ficomps
sbb
out
dec
incb
inc
aaa
cmp
lock
leave
roll
mov
jo
push
or
out
cs
sub
or
jno
jmp
adc
pop
xchg
aaa
sbbb
pop
bsr
shrl
sub
sbb
xchg
test
and
pop
pusha
cli
push
xchg
push
movsl
jnp
jno
fsub
push
xor
mov
sbb
fucomp
out
pop
loop
xor
adc
dec
pop
fsts
cli
xchg
imul
fdivrl
push
cmp
sbb
loopne
xor
adc
mov
mov
rcrb
push
add
js
std
add
sbb
and
pop
imul
jle
push
rorb
jmp
jne
sbb
call
fwait
ds
fsts
clc
std
sbb
ds
jl
adc
test
xor
fwait
scas
add
lods
or
sbb
adc
xlat
insl
loopne
data16
fcmove
lds
and
jo
fstps
jl
scas
pop
sub
sbb
adc
pop
dec
stos
sub
xchg
push
or
lods
int
test
cmp
nop
xchg
mov
lret
daa
lds
xor
and
mov
rcrl
out
jecxz
add
ds
add
xor
clc
push
cmp
push
push
mov
jae
pop
addl
outsl
sub
mov
sbb
loopne
add
aaa
mov
mov
js
outsl
jne
imul
cmp
mov
mov
pop
lret
sbb
data16
adc
jge
mov
lahf
cwtl
outsb
xchg
lcall
mov
pop
pop
adc
in
push
pop
cmp
adc
jne
xchg
sti
std
in
ds
and
repnz
fbstp
scas
mov
imul
inc
ficomps
aaa
loopne
mov
mov
mov
or
sbb
pop
loop
out
fidivrs
mov
mov
mov
jmp
mov
or
xor
imul
mov
das
inc
push
ds
mov
int3
test
outsb
not
add
insl
xor
imul
mov
push
adc
addb
push
inc
mov
jp
xchg
gs
dec
push
add
xchg
loop
mov
push
popf
sbb
mov
adc
push
call
movsb
lods
mov
out
ds
daa
jnp
fwait
and
imul
cmp
popf
pop
jnp
pushf
cwtl
lods
jle
loope
jg
cli
fidivrl
sbb
xchg
repz
add
fs
dec
fs
inc
js
movsb
sbb
add
in
push
push
shl
sub
push
nop
jno
dec
sti
mov
adc
outsb
testb
cmp
pop
sub
push
or
pop
sbb
ffree
fwait
sti
inc
cmp
je
inc
and
scas
jno
jmp
fdivs
push
insl
mov
hlt
xor
std
dec
sbb
outsl
lcall
lahf
incl
dec
mov
xchg
ja
fnstcw
cltd
adc
into
int
adc
fiadds
xchg
stos
jne
jns
xchg
fs
mov
jne
aad
outsl
mov
jb
add
stc
lods
jb
popa
pop
pop
mov
jmp
cmp
push
outsl
sub
xlat
mov
xchg
sahf
xchg
push
in
cmp
push
nop
xchg
pop
sahf
mov
stos
mov
mov
std
mov
std
les
cmpsb
sbb
std
and
fsts
daa
push
sbb
pop
jne
enter
fwait
add
pop
sbb
cmp
jno
dec
mull
scas
pop
fcoml
cltd
push
mov
lret
jnp
add
ret
pop
popf
sti
pop
mov
rcll
incb
xchg
pop
roll
add
mov
jno
xchg
test
fnsave
fdivr
mov
fcmovnu
pop
xchg
jl
or
pop
mov
adc
ljmp
push
mov
mov
in
sub
adc
movsb
xchg
cmp
mov
mov
xlat
je
ret
sbb
orb
push
pop
inc
ja
adc
inc
pop
xchg
jnp,pt
ja
jle
push
aad
lds
cli
xorl
dec
mov
cmp
loope
lcall
shrb
aad
sub
inc
add
ret
imul
add
cmc
in
fidivrs
gs
sub
inc
in
sti
or
jp
xchg
sbb
pop
jnp
adc
jg
lods
lcall
jo
inc
aaa
sbb
cmp
div
fcomps
jmp
dec
sahf
sbb
add
loope
divl
xor
sub
lea
and
push
inc
push
aad
ds
fwait
inc
icebp
aaa
sarb
and
pop
sbb
fists
push
dec
pop
das
cwtl
mov
sti
pushf
xchg
adc
pop
iret
out
mov
test
pop
cmp
mov
mov
ss
inc
bound
fwait
ret
pop
adc
pop
dec
lahf
xchg
scas
and
movsb
add
fmulp
je
in
add
jl
popf
push
hlt
test
into
std
test
pop
pop
sub
dec
sbb
mov
mov
cld
adc
div
mov
cwtl
outsl
ret
jp
push
jnp
cltd
adc
insl
sbb
mov
loop
pop
mov
test
pop
pop
loop
cmp
les
jecxz
sbbl
leave
push
rcr
add
push
ds
inc
push
insl
les
inc
pop
repz
aad
xchg
and
call
punpcklwd
mov
cli
popf
lret
add
inc
adc
mulb
cwtl
mov
idiv
arpl
out
orb
ret
add
sti
popl
es
hlt
mov
into
lcall
sub
in
push
xchg
sahf
xchg
and
inc
sbb
jnp
mov
pop
xchg
out
or
ds
loopne
das
lahf
outsl
adc
cltd
jne
jl
pop
or
adc
xchg
sahf
adc
sbb
or
mov
pop
scas
mov
add
jle
adc
xor
scas
clc
xchg
daa
int
cmpsb
cmc
push
mov
and
mov
dec
cwtl
mov
into
pop
inc
loopne
mov
mov
dec
sarb
mov
ss
jmp
pop
sbb
scas
addr16
fcoms
sbb
xor
xor
clc
jb
or
add
push
cmp
incb
popa
stc
mov
arpl
or
jle
scas
pop
push
pop
mov
outsl
cwtl
cmpsl
addl
or
pop
xchg
sbb
aas
adc
into
scas
jbe
lahf
jnp
mov
add
inc
or
mov
adc
ret
xor
jle
sub
test
mov
bndstx
add
push
sub
punpckhbw
dec
popl
push
stc
stos
xchg
inc
push
cld
mov
or
add
loopne
in
dec
std
xor
add
int3
idiv
or
cld
pop
mov
mov
inc
int
and
sub
jg
stos
inc
aad
movsl
leave
push
fisttpll
sbb
add
cld
add
and
les
and
jnp
jg
rorl
jp
cmp
cmp
outsl
in
stos
jbe
mov
aad
bndldx
aaa
and
movsl
add
push
adc
in
addb
jo
mulb
inc
cld
sbb
pop
decb
fdivl
cltd
int
fstl
sahf
addl
sbb
and
lcall
push
dec
cmp
dec
std
jbe
testl
inc
jle
fiaddl
movsb
cmp
ja
sbb
adc
jle
out
fsubrs
je
in
jno
cmp
rcll
xchg
cltd
cmp
fdivrl
into
adcl
pop
or
call
fists
dec
cld
mov
nop
push
inc
iret
and
int
and
jl
bound
sti
or
mov
lcall
pop
mov
inc
or
rclb
push
out
ret
loopne
fwait
imul
loope
adc
mov
xchg
push
jl
out
sbb
repnz
aad
aam
mov
sub
clc
add
fistl
out
call
aad
inc
rcrb
imul
xchg
mov
shl
sahf
call
fstpt
shlb
push
mov
and
cmp
jl
fcmovbe
mov
ficomps
xchg
int
xchg
mov
pop
inc
lock
jp
jae
ret
jecxz
loop
ss
xchg
fildll
mov
jae
jecxz
mov
aam
sbb
popa
sti
mov
ljmp
aas
add
sub
pop
fst
add
or
test
ja
cli
int3
cli
int
fwait
adc
loope
jg
jg
test
into
jne
stos
cltd
xchg
test
mov
popf
out
xorl
stos
cmp
outsl
dec
mov
rorb
mov
std
movsb
loop
dec
mov
jno
push
xchg
shrl
xlat
cli
clc
jg
xchg
data16
sarl
jo
insb
popf
and
mov
fidivs
pop
icebp
xchg
jo
or
add
xchg
xor
ficoms
mov
cld
int3
fstpl
dec
repz
dec
mov
cld
into
outsl
je
mov
je
jg
enter
adc
jns
out
jno
add
clc
sbb
xchg
mov
es
pop
mov
loopne
nop
repnz
pop
sub
jb
lahf
push
inc
adc
icebp
add
lock
mov
aaa
cmc
add
jo
sbb
sub
scas
jo
adc
jne
out
lods
decb
test
push
pop
pop
test
mov
pop
push
mov
mov
enter
adc
sub
mov
mov
mov
add
clc
adcl
insl
pop
and
ror
and
xchg
test
jle
adc
sbb
fldcw
add
aaa
fldl
cwtl
push
dec
mov
add
mov
inc
hlt
and
arpl
xor
push
mov
pusha
xor
mov
ret
aas
push
lret
xchg
jo
outsb
ds
cmp
aas
inc
add
xchg
ret
sbb
inc
or
daa
sbb
mov
in
shll
ficoms
xchg
mov
ds
nop
fwait
adc
add
cwtl
fucomp
mov
jo
insl
xchg
push
mov
sub
add
xchg
enter
fwait
lods
xor
mov
fmul
bound
loopne
fistpl
sahf
cltd
push
push
test
push
popf
fistl
sub
sub
jno
xchg
incb
in
fstps
jl
mov
addl
add
loopne
mov
ds
cltd
fstps
fwait
xlat
xchg
sbb
das
jl
push
sahf
sub
stos
or
pop
mov
fidivrs
jmp
lahf
sbb
leave
mov
mov
nop
addr16
nop
push
fs
and
mov
rcll
pop
fdivp
fs
icebp
js
jmp
lahf
fistl
sbb
popf
add
pop
sbb
jg
fnsave
or
adc
push
aaa
and
jg
cwtl
or
stos
or
pop
ud0
mov
cmp
test
mov
cmp
mov
mov
dec
jne
pop
mov
loope
fisubrl
int
sbb
lahf
rol
mov
or
sahf
xchg
pop
or
scas
pop
mov
imul
sbb
mov
cmp
ja
sub
sbb
jg
mov
push
mov
xor
mov
fisubrs
push
jp
out
notl
add
cwtl
lds
rorl
xchg
in
push
mov
outsl
sti
xchg
inc
mov
mov
enter
pop
ljmp
hlt
mov
add
or
push
out
ret
sub
hlt
popf
fwait
popa
out
xor
xchg
aaa
je
jb
jge
inc
int
sub
hlt
sbb
ffreep
cld
insb
jno
mov
mov
js
and
popf
pop
dec
fcmovnbe
loopne
mov
ficomps
cld
xchg
sti
ret
xchg
pop
aaa
cmp
ret
pop
pop
add
fwait
mov
stc
or
mov
fsubs
mov
jle
in
lods
jle
or
jg
lahf
or
mov
xchg
push
into
push
sub
mov
loope
cwtl
xor
pop
ljmp
sbb
pop
and
mov
out
sahf
fildll
stos
fwait
subl
sbb
pop
inc
xlat
push
mov
xlat
inc
mov
cmpsb
mov
fcmovnbe
ficoms
jno
mov
fistl
idiv
and
sub
mov
cmp
mov
fcomps
push
xor
imul
xchg
mov
pop
std
mov
or
xchg
push
xor
mov
xor
xchg
mov
int3
jge
sbb
aam
int3
xor
sbb
pop
pop
jmp
ret
push
sarb
inc
out
push
cmpsb
popf
sub
add
cmp
pop
inc
fldcw
xchg
les
cmp
inc
xchg
sbb
ds
or
dec
mov
sbb
enter
mov
cli
lock
xor
mov
fs
add
jno
lea
int3
out
popa
repz
mov
inc
jns
sar
stos
test
push
aaa
xchg
push
add
jno
pop
mov
sub
add
sbb
daa
cltd
cmp
inc
stos
iret
ja
mov
sarb
add
push
push
aam
sarb
sub
sub
lcall
push
xchg
push
lret
mov
pop
pushf
mov
fs
movsb
pop
repnz
sbb
mov
adc
repz
pop
sti
dec
sbb
add
ljmp
add
pop
or
fiaddl
push
sbb
xchg
imulb
push
or
mov
pop
das
push
add
leave
cmc
jno
xchg
jmp
popf
movsb
ret
outsl
push
and
adc
pushf
hlt
add
outsb
cmp
pusha
jg
pop
push
add
and
pop
jno
dec
push
lcall
pop
xor
test
pushf
push
xor
sub
test
mov
cli
std
lahf
push
lcall
dec
xlat
add
adc
out
cmp
cmpsl
shl
push
mov
sahf
int3
mov
cmp
insl
insb
int
push
xor
pop
adc
pop
adc
js
inc
xor
psrlq
cmpsl
sarb
fstp
pop
mov
jbe
dec
push
adc
mov
push
bsf
pop
mov
or
fldt
push
add
push
jp
incl
adc
jp
jle
pusha
hlt
sarl
xchg
repz
mov
clc
mov
adc
adc
xchg
jae
push
inc
dec
sahf
insl
xor
sbb
jle
xor
jle
mov
fiadds
lds
outsb
pop
cmp
xor
xchg
jae
xor
mov
pusha
xor
adc
cs
ficoms
mov
mov
adc
push
imul
cmp
lret
mov
and
pop
xlat
adc
xchg
xlat
lret
addb
inc
pop
xchg
and
jae
testb
add
fistps
fs
dec
fstpl
mov
and
push
adc
pop
xchg
incb
or
or
or
orl
cmc
pop
lahf
sub
pop
mov
sti
mov
into
xchg
xchg
bswap
sbb
sbb
ss
aad
popf
pop
mov
std
jnp
pushf
jne
cwtl
in
fstl
shlb
call
cmp
cwtl
fstpl
lret
push
pop
jmp
lret
lret
pop
jnp
pop
fimull
das
inc
lret
mov
mov
xchg
add
outsb
call
std
sub
cld
adc
mov
push
ret
jg
fsubrp
outsb
cld
mov
aam
pop
sub
data16
pop
dec
jb
fisubrl
ficompl
push
and
xor
jno
repz
cmp
jne
dec
nop
xlat
cld
imul
ret
fdivrl
mov
out
leave
pop
adc
aas
scas
popa
repz
xchg
xor
pop
sbb
lods
lahf
addr16
rol
pop
sub
cmp
inc
test
push
sti
sbb
in
ds
scas
or
lea
mov
out
mov
imul
mov
push
dec
push
lahf
fstpl
ss
insb
and
mov
sahf
adc
pop
hlt
or
out
xchg
movsb
repnz
std
rcll
test
push
sub
xor
pop
add
insl
lea
cld
add
sti
pop
cmp
push
lahf
popf
dec
push
test
xchg
and
xchg
imul
leave
push
dec
push
nop
sub
xlat
and
in
sbb
pop
lds
sahf
fstpt
addb
mov
call
xchg
push
or
aas
push
ljmp
ds
jne
cwtl
int
jns
sub
and
aad
int
in
fcompl
loopne
sbb
jnp
enter
mov
negb
adc
xchg
sbbb
and
xchg
pushf
repnz
insl
jne
hlt
xor
mov
cld
fwait
lock
jmp
xchg
inc
out
pop
xchg
mov
xchg
lea
enter
lcall
adc
mov
mov
pop
enter
outsl
adc
lods
pop
arpl
mov
fidivrs
push
sub
lahf
fldcw
or
pop
je
stc
shll
outsl
inc
dec
push
test
lods
sbb
mov
cwtl
or
lea
in
mov
jnp
xor
cmc
pushf
pop
inc
xor
lea
and
cli
icebp
fmulp
jnp
icebp
xlat
add
mov
push
jae
xchg
mov
push
pop
adc
xchg
mov
push
mov
fwait
cwtl
xchg
in
mov
std
imull
aad
std
and
outsb
divb
xchg
jmp
fwait
jle
xchg
scas
pop
push
sub
int3
fidivrs
xor
pop
idivb
jno
movsl
adc
pop
fsubrs
pop
mov
sahf
push
popf
popf
jp
add
mov
jl
jge
add
mov
jo
flds
stos
or
dec
jns
in
out
lods
mov
cli
mov
add
xchg
add
ud2
lea
mov
mov
or
sbb
sbb
pushf
jnp
xchg
adc
iret
and
sahf
xchg
pop
pop
adc
mov
mov
or
xchg
push
mov
mov
inc
mov
inc
dec
xchg
lods
sbb
pop
sbb
pop
mov
and
dec
fwait
insb
push
aad
mov
mov
adc
insl
adc
push
xchg
and
and
cs
pop
in
cmp
xchg
mov
and
pop
pusha
and
icebp
popf
std
push
adc
mov
mov
shlb
push
data16
pusha
in
sub
pusha
jp,pn
push
stos
push
aam
mov
aad
hlt
rcrb
lahf
mov
enter
cmp
pusha
mov
fistpl
adc
pop
sahf
dec
sub
sbbl
stos
idiv
jne
inc
and
negl
pop
push
je
ljmp
imul
imul
pop
or
test
push
mov
xchg
mulb
stos
lahf
mov
pop
cs
sti
xlat
push
lea
sub
xor
cmp
add
lahf
fwait
add
cmp
in
jecxz
push
in
aad
adc
push
add
push
inc
out
lahf
sub
movsl
pop
and
into
cmpsl
aam
aam
aad
pop
cmp
std
pop
rcrl
out
dec
fcmovnb
aam
push
ljmp
push
lods
mov
inc
subb
jmp
gs
push
lahf
push
sub
push
mov
inc
andb
ret
into
push
daa
xchg
lods
enter
cwtl
lahf
jno
mov
in
pop
std
std
sbb
pop
stos
cli
push
lods
xlat
loopne
sbb
cmc
lods
in
push
imul
sbb
sbb
xchg
cmp
negl
add
mov
jo
out
sti
mov
xor
aam
adc
movsb
cwtl
fdivrs
mov
xchg
dec
jne
test
xchg
mov
stos
notb
aaa
lahf
daa
dec
sbb
sbb
pop
mov
dec
pop
popf
out
cmpsb
xor
lea
pop
mov
mov
pushf
cltd
int3
mov
imul
sbb
dec
test
mov
jns
imul
ljmp
inc
or
push
jbe
and
xor
push
pushf
jge
lcall
jo
jns
cli
fadd
add
lahf
push
jg
sub
inc
xchg
inc
inc
js
mov
xchg
sbb
popf
xchg
rolb
movsl
sbb
mov
or
rorb
or
or
fbstp
loope
ficomps
and
inc
insb
and
je
in
xchg
iret
sahf
and
mov
scas
enter
sbb
jo
sub
jmp
cltd
dec
dec
cli
add
xlat
jno
jae
shll
sub
cli
mov
mov
cmp
std
mov
cmp
sub
and
sbb
push
mov
xchg
xchg
jp
xlat
xorl
mov
mov
out
fwait
add
sbb
sbb
je
mov
nop
filds
in
xor
adc
into
cmpsb
idivl
aas
and
outsb
or
repz
cmp
xchg
xor
and
pop
outsb
sahf
leave
lahf
mov
dec
and
adc
hlt
adc
mov
sbb
sahf
ficoml
pushf
fst
pop
mov
pop
mull
add
fists
mov
call
ret
shl
jge
cmpsb
loop
fdivr
mov
cmp
js
push
cmpb
pop
ljmp
popl
ficoms
ds
xchg
add
sarb
sbb
mov
pop
and
sub
dec
adcb
enter
cmp
sbb
mov
mov
adc
push
xchg
xchg
push
adc
pop
lods
jnp
jbe
mov
ljmp
shrl
out
mov
xor
aas
cmc
adc
or
maxps
push
push
inc
xor
jl
dec
xor
popf
push
pushf
adc
ficomps
sarb
adc
xchg
adc
scas
mov
pop
push
xchg
rcrl
push
push
ret
cmp
aas
cs
cwtl
bsr
push
mov
xorb
pop
cs
aam
sbb
aaa
jns
cmp
repz
push
outsb
mov
pop
vpshlq
loope
jge
fwait
loop
ss
mov
push
push
ja
mov
pop
int
jge
test
jne
stos
adc
cltd
jmp
aad
sbb
add
xchg
cmp
std
out
pop
popa
xor
sbb
cmp
push
sbb
les
arpl
fwait
xchg
ja
pop
test
inc
push
cmp
lret
add
mov
jnp
sbb
ret
mov
dec
lahf
jne
sbb
or
test
adc
xlat
aas
pop
xor
xlat
xchg
mov
jp
cmp
lcall
shrl
cmpsb
inc
pavgb
jg
std
cmpsl
loop
add
mov
cmp
dec
dec
xlat
dec
cwtl
lar
enter
xor
push
mov
test
adc
jbe
scas
mov
dec
xor
mov
push
mov
into
imul
sbb
xchg
push
rcrb
int
adc
or
mov
pop
jle
lret
adcb
pop
inc
js
clc
and
pop
add
fnsave
pop
push
mov
or
aaa
pop
cmp
filds
into
jg
icebp
adc
xor
xchg
cmc
xor
mov
jo
sub
or
and
lret
dec
sub
idivl
jge
movsb
sub
data16
mov
adc
cwtl
out
daa
scas
pop
jg
xchg
pushf
or
int3
cmc
dec
lcall
push
or
inc
fldt
shl
lret
lahf
negl
mov
in
sarb
es
fnstcw
mov
cmp
xchg
insl
pop
fisubs
jl
sub
mov
insl
loopne
xchg
push
mov
in
xorb
xchg
and
jno
fbstp
mov
fs
mov
jmp
fistpl
mov
pop
mov
in
aad
push
lahf
mov
out
push
daa
out
xchg
add
jae
mov
dec
sub
or
mov
cld
mov
mov
sub
outsb
jno
ret
pushf
pop
jle
mov
push
popa
idiv
ljmp
aad
add
sbb
push
cmc
xor
cmp
std
add
enter
sub
xchg
faddl
xorl
sub
xlat
jo
jl
out
push
lahf
add
sbb
mov
xorl
mov
xchg
add
rcr
pop
sahf
add
xchg
xor
cmc
popf
lods
pop
sbb
mov
pusha
std
mov
pop
ret
add
push
add
dec
xor
imul
std
push
int
mov
movsb
fisttpl
loop
mov
es
push
sti
cmp
pushf
insb
pop
or
pop
mov
mulb
pop
xchg
push
mov
hlt
inc
out
inc
test
mov
frstor
filds
int3
testb
add
rcrl
loop
fdivrp
clc
mov
mov
mov
pop
pop
add
fdivp
popf
jmp
test
ja
jge
mov
cmpb
cmpl
or
jmp
fwait
push
imul
xlat
bound
pop
cwtl
push
adc
add
aad
mov
inc
or
push
pop
sbb
jecxz
test
push
or
jo
shlb
ror
pop
shr
sbb
xchg
pop
sahf
sub
or
or
pop
push
sbb
sbbl
xchg
lcall
fwait
insl
cwtl
add
dec
mov
cmp
movsb
rcll
sub
adc
pop
xor
fisubl
dec
inc
sarb
sub
hlt
jmp
stos
sub
subb
push
sbb
test
inc
inc
cld
or
cmp
popf
cwtl
jno
insl
cmpl
sbb
dec
push
xor
test
insb
mov
sbb
and
dec
lcall
jmp
outsl
jle
add
test
xor
stc
pop
sahf
dec
mov
push
outsl
cs
xlat
fstps
mov
test
push
jno
in
fstpl
sbb
decb
aas
decb
sub
push
lea
out
mov
inc
ds
inc
stc
ret
mov
loopne
pushl
dec
push
sbb
pop
into
cmp
inc
jne
sub
mov
push
pushf
jae
pop
loop
popf
cmp
mov
cmc
pop
mov
jbe
fwait
push
into
ss
sub
fwait
pop
add
cli
ds
cmp
and
pushf
cmp
push
repnz
adc
bound
fbld
into
jno
pushf
mulb
ljmp
je
loop
setl
lahf
pop
loope
mov
jmp
lahf
push
bound
jp
mov
xchg
repz
fwait
jae
xchg
add
sub
pop
test
jp
js
pop
orb
outsb
addb
pop
dec
sti
call
inc
or
aad
aas
sti
cltd
fldt
aas
xlat
sbb
sub
lcall
flds
adcb
dec
pop
test
loop
xlat
mov
fnsave
pushf
add
aad
sub
testb
icebp
mov
xchg
add
mov
dec
cwtl
lret
test
mov
repz
and
sti
push
popf
or
subb
maxps
hlt
aam
cwtl
icebp
xor
popf
xchg
adc
xchg
adc
pcmpeqd
je
mov
mov
sahf
shll
imul
xor
loop
jno
inc
dec
std
cmp
pop
mov
call
add
xor
repz
lds
lahf
sub
scas
ss
in
mov
sub
pop
cmp
xchg
push
add
mov
push
mov
pop
fmuls
mov
push
loopne
xchg
fistpl
out
mov
inc
enter
dec
adc
sahf
mov
jecxz
pop
dec
dec
dec
fdivrl
ret
xor
imul
outsb
rorl
pop
push
popl
push
into
jae
add
push
cmp
xchg
addr16
into
jmp
js
adc
mov
dec
sbb
push
cld
rcr
jecxz
pusha
mov
sbb
notl
mov
mov
mov
sbb
xor
sub
pushf
mov
and
popa
lea
clc
test
sub
mov
int3
sbb
pop
cmp
inc
je
stos
push
push
fwait
into
sbb
lahf
pop
mov
addr16
sub
rolb
fdivrs
add
sbb
pop
cltd
repnz
leave
in
std
xor
push
jnp
adc
dec
pop
sbb
cmp
pop
fadd
jge
push
xor
xor
lea
rcr
push
ja
cld
fstp
sahf
cwtl
jne
fdivl
xlat
loope
popf
int3
call
inc
aad
les
pop
and
xor
dec
add
into
stc
enter
insl
sbb
pop
mov
add
push
rcrl
mov
jo
dec
cld
stos
adc
sbb
push
leave
adc
sbb
dec
mov
ds
leave
push
mov
imul
in
add
sub
std
flds
pop
cmp
push
dec
add
idiv
std
mov
sub
mov
lcall
fstl
test
adc
lahf
mov
out
rcrl
addb
xor
pop
das
push
jge
jne
cli
cmpsl
in
int
sbb
into
sbb
and
shrb
out
int3
test
mov
push
jbe
popf
stos
push
pop
sbb
pusha
sub
lcall
sbb
popl
aam
loop
mov
pop
dec
push
jmp
out
addb
das
pop
xlat
out
mov
les
or
xchg
pop
flds
insl
aas
mov
xlat
jle
fldl
sub
dec
or
mov
xchg
stc
mov
sbb
push
xchg
jl
jecxz
add
sub
aad
ficoms
adc
pop
pop
mov
pop
jnp
fsqrt
mov
xor
add
popa
xor
pop
add
mov
out
xchg
push
xor
ficoms
and
xchg
xchg
and
cltd
and
sahf
lcall
pop
pop
inc
call
mov
call
fists
sub
push
insl
xor
pusha
inc
and
or
sbb
jo
inc
mov
xor
dec
dec
ror
jnp
aas
cld
into
mov
outsl
xchg
clc
scas
mov
mov
pop
adc
out
xlat
imul
mov
xchg
push
fnsave
insl
push
adc
scas
jmp
and
mov
mov
loope
outsl
jp
sti
das
lahf
fistps
in
sbb
jl
add
cmc
add
adc
filds
rcrb
inc
fistpl
pop
incb
sahf
jnp
ficomps
push
xchg
imul
inc
xor
pop
addr16
ja
leave
adc
jmp
std
xlat
jb
lahf
inc
xor
sbb
mov
adc
rorb
cld
sbb
mov
xchg
loop
xchg
push
in
scas
fdivl
sbb
pop
pushl
push
stos
pop
popf
into
scas
test
lcall
test
stos
sbb
lods
pop
mov
mov
mov
pushf
mov
mov
mov
scas
pop
or
or
add
xchg
cs
adc
int
stc
inc
in
push
push
std
movsb
and
out
aad
sarl
enter
xlat
push
push
add
ja
into
adc
mov
rol
pop
imul
outsl
jnp
idiv
in
mov
cmp
and
pop
add
test
jl
mov
fidivs
xor
cmp
ja
mov
fistpl
push
decl
sub
out
jbe
mov
inc
cli
push
lahf
jle
das
mov
xchg
xchg
xchg
push
or
mov
in
sarb
add
test
or
sub
cli
shlb
iret
lret
sbb
push
in
ret
adc
push
fidivs
repz
adc
outsl
xchg
sbb
mov
aas
imul
fists
into
fidivl
and
mov
cmp
std
sub
fidivs
movsb
pop
dec
lods
jle
pop
mov
mov
or
mov
dec
xlat
ficoml
ja
add
arpl
ret
fdivl
aas
sahf
cwtl
scas
push
mov
cmp
push
mov
jo
lock
cwtl
mov
mov
pop
push
jl
mov
dec
cmpsl
mov
in
push
inc
mov
loope
rorl
adc
in
ret
mov
jae
push
sub
push
inc
insb
mov
aaa
mov
popf
rcrl
fstps
cmc
pop
lahf
xlat
or
push
lods
push
in
xchg
xchg
mov
in
xlat
pop
arpl
dec
jge
lea
xlat
xchg
xchg
sbb
fadds
lea
aad
pop
lret
inc
fnstsw
mov
pop
add
xchg
aam
xchg
cltd
adc
sbb
adc
fstps
imul
stos
cmp
fisttps
gs
jmp
dec
dec
enter
loopne
icebp
lods
out
xchg
push
inc
in
sbb
ja
rcr
or
cmp
enter
mov
pop
or
ret
jno
leave
pushf
xor
or
cmp
mov
sub
fmul
mov
push
mov
jge
call
lcall
divb
insl
xchg
cmp
cmp
int3
push
push
sub
push
data16
imull
sahf
dec
add
clc
ljmp
js
shrb
cmpsb
loopne
inc
outsl
mov
ja
ret
mov
fildl
dec
adc
out
popa
daa
mov
out
jmp
add
jns
inc
pop
xlat
loopne
mov
popf
insl
in
pop
pop
mov
insl
jge
pop
aas
inc
lret
into
aas
mov
sbb
jb
push
push
mov
inc
adc
dec
xchg
fs
jp
pop
and
sbb
ret
xor
adc
outsl
psadbw
pushf
outsl
nopl
push
mov
clc
int
mov
jnp
dec
loope
ds
add
inc
lahf
inc
cmpsb
jno
loope
cmp
adc
sbb
je
add
test
push
sbb
roll
std
cltd
clc
sbb
fwait
or
xorl
or
jle
dec
inc
test
and
data16
push
scas
jp
cmp
mov
sbb
add
leave
aam
mulb
and
add
mov
jns
cmp
sbb
je
sub
ret
push
mov
fistpl
push
sbb
sbb
xchg
dec
fstpl
xchg
xchg
xchg
mov
xchg
jg
push
pop
cmovle
cltd
pop
in
test
push
jnp
mov
test
or
xchg
push
adc
pop
add
cmp
add
mov
aas
out
cmp
out
in
mov
fistpl
or
jb
ja
stc
fnstsw
adc
add
sbb
pusha
sbb
or
in
cltd
pop
add
in
cld
sbb
test
mov
sbb
clc
je
add
mov
daa
repz
clc
xor
leave
push
jmp
adcb
xor
push
xchg
pushf
pop
and
cltd
fwait
sub
push
outsb
rcr
mov
ret
xor
push
pushf
pushf
sbb
lcall
icebp
mov
jbe
jb
lock
pop
cld
cmp
push
xlat
mov
mov
jmp
push
dec
cmp
mov
rorl
xorl
repz
pusha
shrb
loopne
jecxz
fistl
inc
mov
mov
outsl
cmp
add
pop
cwtl
ret
gs
push
mov
sbb
push
mov
iret
push
jp
cmp
dec
cmp
pop
pop
divl
jo
adc
mov
inc
mov
ficomps
xchg
lahf
adc
push
jle
xchg
mov
dec
pop
pop
mov
cltd
mov
xlat
mov
aas
adc
stc
pop
xchg
xchg
xlat
xchg
lock
ds
pop
fsts
mov
fisubrs
loope
sti
xchg
mov
push
sbb
fdivl
push
and
xor
in
cmpsl
sahf
xchg
ss
and
add
es
sub
repz
sbb
rolb
push
mov
xchg
xchg
push
or
dec
cwtl
mov
sahf
xchg
pushf
mov
jmp
clc
ja
push
mov
adc
incl
cld
xchg
test
push
stc
jg
add
mov
or
add
sbb
sub
xchg
mov
sbb
inc
mov
mov
ja
daa
xchg
sti
xchg
repz
mov
add
dec
popf
adc
lea
dec
mov
std
repz
pop
or
mov
in
or
inc
pop
inc
mov
adc
mov
shll
cmp
push
repz
jp
popf
out
xchg
aaa
outsb
lahf
leave
jle
pop
jne
leave
cmp
xchg
aaa
addl
sahf
test
imul
fdivp
xchg
sbb
lea
mov
push
xchg
sbb
push
iret
jp
test
xchg
pop
into
sti
mov
fnsave
insb
push
cwtl
mov
jne
push
adcb
stos
mov
fidivrs
fnstsw
jb
push
or
nop
pop
aaa
sbb
test
mov
lods
div
xchg
les
or
arpl
pop
repnz
cwtl
wbinvd
lahf
sti
add
jle
mov
imul
pop
jg
nop
xchg
mov
aad
mov
cltd
mov
addr16
jle
and
pop
ljmp
aad
or
pop
xor
push
cmc
repz
mov
lods
add
dec
pop
neg
mov
xchg
nop
mov
xchg
movsl
inc
add
popf
pop
jp
mov
xchg
cli
xchg
int
unpckhps
add
dec
lea
fadds
sarb
repnz
scas
dec
daa
pop
pop
pop
aad
mov
ds
add
mov
cmp
testl
lret
xchg
xchg
nop
xlat
xor
mov
aas
pop
add
jg
shll
pop
out
xorl
sub
xor
test
cmp
jnp
lcall
mov
scas
out
jb
mov
repnz
mov
pop
xchg
xchg
addr16
outsl
lds
sub
xor
lret
jmp
mov
pop
cmpsb
mov
pop
push
xchg
cmc
lods
mulb
inc
addr16
sub
adc
out
mov
lea
inc
aas
adc
data16
fwait
rcll
mov
mov
aam
stc
pushf
bound
add
or
outsb
popl
cmp
pop
out
jb
inc
icebp
push
adc
stos
or
push
fucomip
mov
pop
pop
jno
sub
aaa
adc
sub
rorl
sahf
push
mov
push
push
adc
mov
mov
test
adc
add
jns
xchg
popf
xchg
out
loopne
lahf
es
adc
das
adcl
push
gs
pop
jnp
mov
xchg
out
idiv
jecxz
jge
popf
in
prefetch
adc
nop
fcoml
push
sbb
divl
cmpl
or
or
mov
jmp
pop
sub
cmc
mov
inc
outsb
js
test
or
incl
mov
clc
push
and
stos
icebp
mov
jle
ds
scas
popf
out
iret
mov
mov
fsubrp
lea
xor
sbb
push
lret
sti
pushf
dec
cmp
out
popl
lahf
xchg
xor
mov
sbb
pop
loopne
jbe
bound
cli
cmp
cwtl
push
or
fwait
mov
lea
xchg
jnp
insb
roll
outsb
outsl
mov
scas
jge
and
adc
pop
dec
pop
adc
call
pushf
mov
outsb
push
sbb
aad
and
iret
addr16
aas
adc
push
out
mov
mov
add
inc
push
mov
push
sub
xchg
add
xor
jb
hlt
adc
dec
ret
add
rcll
xchg
fists
adc
andb
and
jno
sti
jne
push
ljmp
sarb
adc
sub
fwait
xchg
into
mov
ds
mov
scas
push
cmp
sbb
cwtl
popf
mov
pop
sbb
adc
pop
out
inc
adc
sahf
mov
flds
add
scas
negl
cltd
push
pop
mov
fsubr
jmp
sbbb
adc
lret
add
sbb
mov
leave
test
lret
subl
jle
leave
add
cmp
mov
sti
outsl
push
test
mov
loopne
pop
addl
lods
inc
pop
jp
jg
decl
sub
out
and
and
jno
pusha
lds
stc
xchg
mov
cmpsb
rolb
jns,pt
xchg
ja
lahf
inc
cmp
adc
cmp
aad
cwtl
popf
add
outsl
stc
fistpl
lcall
fsubrs
cmp
push
mov
xchg
aad
jecxz
sub
sub
lret
iret
arpl
fsubp
mov
movsb
xchg
inc
frstpm(287
lcall
push
mov
mov
pop
icebp
sti
sub
and
push
addr16
sbb
xlat
sti
sbbb
mov
xchg
fisttpll
adc
fstl
jno
xchg
mov
popf
pusha
sbb
sub
mov
pushf
pushf
pop
adc
sar
mov
mov
xchg
mov
cltd
je
sti
push
xor
inc
ret
mov
jl
pminsw
mov
cmpsl
pop
dec
push
cmc
mov
fwait
in
push
fstpl
dec
pop
or
sbb
decb
cmpsb
and
std
mov
shr
adc
xchg
fbstp
lret
jnp
mov
cmc
cmp
pop
inc
scas
or
jno
das
or
xchg
pusha
aad
xchg
pop
rcll
or
out
repnz
pop
cmp
repnz
xchg
ret
dec
dec
or
scas
mov
adc
pop
mov
dec
sub
fisttpl
sbb
outsl
xchg
xchg
add
push
push
pop
outsb
push
jp
pop
nop
mov
xchg
movsb
inc
or
add
loope
xlat
stc
loope
adc
add
lahf
cli
add
inc
imul
ficoms
pop
mov
fwait
pop
mov
sbb
or
dec
push
fdivr
loop
ljmp
pop
mov
gs
ror
xor
aas
adc
pop
pop
clc
test
mov
repnz
inc
mov
pop
jecxz
mov
mov
pop
jne,pn
add
xchg
fsubl
adc
sbb
add
dec
push
adc
mov
or
dec
sbb
sti
imul
scas
mov
dec
shrb
xor
fiadds
popf
mov
repz
xchg
sbb
add
adc
fcomps
into
pop
into
push
dec
ror
rcrl
into
xchg
std
ficoms
pushf
and
not
or
loop
jmp
outsl
popf
dec
pop
push
fcomip
push
and
jmp
pmaxsw
test
jbe
insl
sbb
out
mov
jge
xchg
jg
into
or
cld
fcompl
sbb
pushf
lcall
mov
xor
iret
lahf
push
mov
mov
xor
sbb
in
popf
inc
aad
aas
call
mov
sbb
out
mov
movsl
repz
adc
inc
adc
and
add
xlat
dec
repnz
sbb
leave
imul
fcompl
pop
pop
inc
lcall
lods
cmc
insb
push
scas
out
mov
shrl
hlt
sbb
movsb
test
popf
sbb
mov
xchg
sbb
ljmp
push
outsb
std
cmp
adc
ret
xor
fiadds
enter
inc
xchg
add
push
aaa
ja
mov
imul
arpl
pandn
adc
lods
imul
mov
aam
psubq
out
dec
stos
stc
xchg
push
fwait
hlt
movsb
jl
sbb
push
jmp
cmp
cld
inc
cltd
push
cmp
adc
push
add
mov
pop
push
leave
xor
push
mov
dec
dec
sti
dec
xor
sub
pop
xlat
mov
xor
xchg
adc
repnz
test
mov
std
test
mov
in
xor
fildll
lcall
nop
push
test
mov
jmp
call
jne
jns
out
or
decl
xlat
aad
jno
sbb
sti
push
repnz
pop
sbb
push
xchg
fildl
pop
sti
mov
js
sbb
leave
dec
push
or
mov
mov
flds
sti
sbb
xchg
aad
std
insl
sbb
cltd
das
repz
aaa
addr16
fstpt
cmpl
mov
fs
mov
dec
cli
movsb
sbb
push
fisubs
sahf
mov
add
ficomps
icebp
dec
xchg
pop
mov
rcrl
mov
sub
jg
enter
mov
js
cmp
jle
cmpsl
jbe
std
cmpsl
loop
xchg
xor
sub
clc
sbb
cmp
test
pop
pop
mul
push
inc
sub
insl
pop
cmp
add
adc
lret
adc
loope
test
and
popf
pop
cmp
and
in
sti
push
sbb
shlb
mov
jae
lret
lcall
in
sbb
imul
xlat
les
inc
dec
push
inc
into
pop
cvtps2pi
fcoml
insb
pop
rclb
add
cmp
ljmp
mov
sahf
orb
lods
add
xchg
adc
xlat
sti
xor
adc
mov
xchg
xor
push
push
aaa
pop
sbb
sbb
std
cmp
movsb
xlat
cmp
mov
adc
les
pop
mov
inc
cmp
dec
add
jbe
popf
fstpt
ss
mov
jae
xchg
xor
ja,pt
adc
sbb
push
jnp
push
test
xlat
mov
sti
std
pop
mov
mov
push
inc
ss
pop
mov
fstpt
mov
mov
xor
push
popf
or
movsl
test
out
or
fiadds
imul
out
sub
and
cwtl
les
popl
xorl
mov
loope
xor
cmp
scas
fst
xor
nop
outsl
push
sbb
sbb
xchg
sbb
xchg
cmp
dec
push
fidivrs
xchg
movsl
or
xor
cmp
or
in
jbe
movsb
loope
daa
cmp
xlat
out
xor
sbb
out
xchg
test
mov
je
xchg
pop
sti
xchg
push
adc
adc
je
pop
fstl
xchg
pushf
inc
pop
cmp
lock
mov
pop
lods
inc
pop
enter
stos
push
dec
or
stos
ljmp
cmp
rcl
xchg
in
sbb
shrl
pop
xchg
mov
mov
cli
insl
adc
js
xor
fucomi
lock
mov
out
sbb
sahf
pop
adc
jno
pmuludq
enter
mov
add
repz
pop
repz
ret
mov
popa
imul
stc
clc
popf
adc
loopne
insl
fmulp
or
add
pop
stc
pop
push
mov
sar
rcr
iret
push
data16
mov
ljmp
add
jge
adc
insl
pop
fildl
popa
mov
ds
outsb
adc
xchg
iret
fistpl
xchg
sub
add
pusha
js
and
lahf
adc
mov
scas
push
xchg
inc
popl
lret
jns
mov
push
adc
fcompl
int
mov
into
push
mov
sbb
xor
jnp
jg
enter
out
pop
int3
cmp
xor
lahf
jle
push
icebp
fidivrs
insb
es
ss
push
adc
pmuludq
aam
out
adc
sahf
inc
loop
jo
push
inc
lea
pusha
xlat
lret
push
clc
jae
mov
pushf
xchg
dec
dec
negb
xor
out
xchg
fimuls
fcmovu
daa
or
out
adc
cs
lods
and
mov
sbb
notb
mov
popf
hlt
adc
or
popa
add
fdivs
fcom
jb
aaa
mov
pop
testl
dec
push
mov
sbb
cltd
mov
fsubl
mov
pop
pop
popf
scas
daa
imul
pop
xlat
push
jnp
or
xchg
lret
imul
unpcklps
jno,pt
inc
and
dec
popa
notb
dec
pop
mov
mov
mov
mov
pop
mov
roll
dec
idivb
mov
xchg
jp
jns
xor
dec
sbb
cmp
outsb
mov
sbb
xchg
scas
test
mov
sub
push
int3
enter
dec
outsb
xchg
or
xacquire
inc
jnp
aam
cmp
xchg
mov
mov
stos
jg
scas
mov
in
gs
aam
call
lcall
add
inc
mov
push
out
mov
test
mov
std
cmc
fs
rcl
adcb
xchg
xchg
sti
adc
loop
cltd
popa
mov
popf
add
inc
ret
mov
xor
cmpsb
nop
fcmovbe
loop
push
and
inc
in
fcmovnu
pop
xor
test
pop
mov
fsubl
outsb
push
inc
mov
or
mov
scas
mov
test
orb
aam
out
xor
pop
das
pop
test
test
or
mov
pmaxub
addl
mov
push
lret
inc
aaa
push
iret
pop
lret
ficomps
jno
or
ss
xor
not
sbb
push
jne
lds
xchg
push
jbe
pop
fs
xchg
xchg
mov
sbb
cmp
or
sarb
dec
movsb
lret
push
push
dec
cli
test
icebp
sub
sahf
pop
push
add
sahf
fstpt
gs
or
mov
pushf
shlb
adc
ds
jecxz
pushf
or
mov
xor
mov
mov
dec
push
mov
lods
ds
enter
cld
xchg
inc
pop
mov
repz
sub
add
mov
jo
movsb
mov
push
outsl
mov
lcall
rolb
sbb
xadd
shrl
pop
in
mulb
subl
jo
xchg
ret
xchg
movsl
sub
pop
cmp
mov
mov
push
or
mov
or
xor
add
aam
rclb
test
out
mov
popf
nop
xchg
rorb
pop
lods
jge
stc
or
mov
mov
push
daa
adc
mov
fidivs
dec
fs
cmpb
mov
repnz
sub
or
jae
push
mov
xchg
adc
or
int3
and
add
insl
push
push
xor
adc
and
mov
shll
loope
fcompl
inc
lret
das
jno
inc
push
nopl
repz
xlat
out
test
sbb
or
or
sti
pop
sahf
pop
cltd
jle
sbbb
out
lahf
and
andl
rcrb
lret
je
xchg
cltd
jnp
push
jns
xchg
jne
jbe
cmp
sub
out
cli
xchg
insl
ljmp
idiv
xor
xor
cs
xchg
pop
cmp
or
adcb
mov
mov
sti
rorl
outsl
jbe
adc
orl
or
jno
mov
iret
imul
mov
and
push
xchg
in
pop
loop
fidivrs
adc
fistps
ss
or
fxch
orl
aas
outsl
test
jns
mov
push
or
ja
mov
or
jno
or
stos
xlat
in
push
jnp
mov
jnp
jmp
xlat
jge
ds
rcrl
sbb
scas
pop
cmp
xor
pop
dec
rcrl
pop
orb
fistps
cmpb
loopne
or
daa
cmp
cmp
jnp
lcall
xchg
sbb
push
push
pop
cs
push
fists
rclb
push
aaa
outsb
inc
outsb
pop
dec
movsb
fildl
pop
xor
hlt
push
or
in
push
push
out
inc
ljmp
mov
pop
xor
loope
popa
je
pop
push
mov
mov
aaa
and
loopne
push
pop
stos
fistpl
pusha
neg
shlb
or
cmpsl
jg
xchg
std
jae
dec
jo
add
jl
fisttps
js
mov
rcrl
cmpsl
js
pop
cmp
test
jecxz
mov
mov
mov
jmp
lcall
adc
sbbl
icebp
std
out
fimuls
inc
ficomps
xchg
push
repz
mov
inc
cmp
jno
jb
push
xor
mov
faddl
pop
sbb
mov
inc
sbb
jmp
std
loop
clc
pop
pop
pop
popl
movsl
fmuls
sti
mov
mov
sarb
jl
fistl
mov
roll
mov
pop
push
xchg
icebp
lahf
xor
pop
or
and
lea
adc
xor
fdivrs
mov
add
stc
or
xor
ret
cmc
lods
out
rcrb
jae
movsb
push
mov
int
push
sbb
sbb
push
cmp
dec
adc
jp
lods
cltd
int
mov
push
andl
or
jb
sub
lods
cmp
jnp
loop
filds
cwtl
push
cvtps2pi
das
push
fisttps
push
mov
mov
jbe
mov
std
in
and
cwtl
sub
xchg
jb
sub
xor
inc
mov
xchg
xchg
jb
pop
xchg
rorb
std
ret
pop
push
and
das
mov
scas
pop
jo
jl
pop
sub
cmp
sti
cmp
dec
loope
cmpsb
rcrb
xchg
test
into
sbb
mov
iret
push
mov
rcr
sbb
adc
add
sbb
sub
call
sbb
outsb
loop
xlat
xchg
ds
rorb
jns
clc
cwtl
or
cmp
or
pop
fisttpl
pop
pop
push
mov
mov
jl
sbb
in
stc
test
hlt
jne
enter
leave
cmp
cmp
jmp
je
dec
mov
push
lahf
je
mov
std
dec
in
push
jae
movsl
or
sub
or
incl
sarl
or
cmpl
ffree
sbb
pop
fdivr
xchg
pop
fs
or
mov
adcl
inc
popf
xchg
push
adc
mov
sbb
scas
inc
jbe
sbb
sbb
push
sbb
cmp
xor
jecxz
ja
xchg
stos
hlt
or
std
adcl
mov
stos
iret
sub
jecxz
popf
popf
ljmp
pop
add
adc
mov
push
pop
prefetchw
aad
inc
dec
mov
ficoml
and
add
std
add
mov
pop
add
mov
out
aas
les
cwtl
cmc
imul
imul
in
jge
out
dec
fsubp
ffreep
jmp
pop
dec
dec
xchg
push
dec
dec
adc
lcall
xchg
aad
push
mov
out
repz
loop
mov
fsts
std
jle
jle
xchg
ds
mov
push
push
shl
push
movsl
mov
outsl
setp
sbb
pop
rep
push
test
mov
ds
push
es
sbb
aad
outsl
sbbb
cmc
insl
lcall
dec
subl
pop
jne
out
repnz
add
jg
int
xchg
push
sub
fwait
add
ficoml
fistpll
push
mov
xchg
mov
leave
ds
jae
lahf
out
adc
mov
add
fbstp
hlt
fistpl
outsl
xchg
sbb
dec
pop
push
add
lea
push
mov
pop
pop
test
pandn
push
push
mov
pop
dec
dec
aaa
dec
pop
sahf
xchg
mov
jg
jl
fdivrs
subl
or
dec
push
sti
adc
cs
mov
mov
cli
stc
pop
push
ja
filds
mov
add
into
dec
mov
testl
jno
popf
imul
pushf
fisubrl
mov
mov
inc
pop
std
out
int
leave
mov
outsl
mov
add
sti
sbb
dec
or
xor
mov
push
pop
cmp
cmp
xchg
clc
xchg
jo
into
sbb
mov
mov
inc
cwtl
mov
mov
push
sub
lahf
ficoml
push
mov
sar
push
pop
ss
mov
int3
pop
shl
and
loopne
insl
fxch
std
std
adc
daa
neg
sarl
and
fstpl
cmp
dec
sarb
or
mov
xor
cmc
xchg
xchg
push
fcomi
shr
out
enter
sub
iret
cmp
mov
rclb
cmp
sbbb
out
sbb
jmp
fs
xchg
dec
pop
outsb
mov
subb
mov
pop
test
add
sub
aam
cwtl
cvtps2pi
or
push
push
pop
lea
fs
sti
sub
pusha
sub
pop
outsl
outsl
pop
push
sub
sub
decb
int3
inc
xchg
fwait
xorl
data16
out
in
dec
jmp
into
cmc
add
out
dec
xor
fwait
mov
bound
sbb
push
repz
push
inc
setb
adc
cmpsl
test
push
cmp
xor
mov
pop
nop
leave
in
sti
add
loop
clc
popa
repnz
imul
ja
cld
popf
cltd
mov
aad
push
xor
pop
mov
movsl
pop
idiv
add
jge
imul
cmp
mov
push
fcmovnb
fiaddl
dec
frndint
dec
std
jmp
dec
stos
lods
outsb
xor
sub
js
inc
fstpt
sbb
mov
fildl
cmp
or
inc
cmp
sbb
sar
mov
stc
adc
inc
das
pop
xchg
jno
jge
imul
push
adc
inc
xlat
xor
fdivs
adc
adc
mov
sbb
scas
xor
push
pop
ja
jae
jne
rcl
out
mov
xchg
push
pop
adc
lea
pushf
xor
sahf
es
and
add
push
pop
xchg
mov
sub
push
xlat
out
pushf
jno
scas
mov
jle
lock
test
push
or
mov
jo
fstl
mov
mov
push
in
fnstsw
mov
cmpsl
fistps
lahf
pop
mov
push
and
test
add
cwtl
mov
in
mov
sub
jo
xor
int
adc
daa
push
sbb
bound
insb
dec
or
test
jg
js
icebp
fmul
je
test
insb
cmc
movsl
imul
sbb
out
sub
adc
call
sahf
pop
push
lock
mov
push
ljmp
ret
mov
fs
pop
fcoml
popf
ficoms
mov
inc
mov
sbb
mov
and
dec
push
or
xchg
inc
and
enter
pop
dec
shl
lea
lahf
shl
idivb
out
dec
fwait
insl
repnz
and
imul
mov
pusha
rolb
xchg
dec
testl
sbbb
xchg
ss
outsb
and
jmp
ret
jne
push
dec
jno
outsb
pop
sub
sbb
or
into
mov
or
jp
pop
push
jmp
ja
inc
mov
pop
jmp
sbb
pop
mov
pop
call
inc
lcall
scas
push
sti
inc
mov
ret
push
or
jno
lret
cld
push
pop
jbe
mov
out
nop
jns
mov
jne
add
clc
sub
repnz
mov
in
add
rcll
and
mov
xchg
lahf
push
and
into
xor
push
push
fiaddl
or
rol
fwait
rclb
pop
sub
xlat
push
and
paddsw
dec
test
xor
cmp
xrelease
mov
push
sbb
pop
movsl
push
data16
outsl
and
xor
icebp
xlat
cld
gs
dec
ljmp
mov
xor
aas
rorb
mov
cli
mov
bound
cmp
arpl
push
fistps
orb
lods
jns
dec
cmpsb
aas
push
jnp
sbb
mov
xor
adc
lahf
int
and
push
add
add
add
inc
lcall
fwait
sbb
adcb
inc
ret
fdivl
mov
xor
add
in
imul
sbb
push
push
mov
loopne
inc
sub
sbb
xchg
mov
pop
mov
scas
inc
aam
insl
sti
imul
rolb
jnp
xor
dec
add
shll
jg
xchg
pushf
sbb
loop
push
mov
pushf
xlat
out
push
test
repz
test
mulb
push
lahf
adc
mov
sbb
fistpl
sbbl
into
adc
cmc
pop
in
cld
push
xchg
scas
mov
xchg
sahf
pop
aaa
xchg
push
rcll
test
pusha
jbe
repz
mov
aaa
mov
jae
push
btr
pop
or
jle
rclb
js
incb
mov
jae
xchg
mov
mov
add
sub
popf
rcrb
pop
xor
repnz
jg
add
adc
movsl
xor
in
adc
push
xor
push
xchg
and
fwait
jecxz
mov
je
leave
rorb
push
dec
in
jge
movaps
xlat
mov
add
ficompl
ficoms
sbb
push
inc
jmp
sti
adc
into
dec
fidivrl
fs
test
inc
and
out
lahf
xchg
cmp
pop
mov
add
fldenv
je
push
cmpsl
cmp
pop
inc
pop
jae
sub
lods
cmp
pop
pop
mov
mov
cltd
dec
movsl
push
inc
mov
pusha
pop
pop
jp
pop
xchg
std
lahf
aas
aaa
push
into
pop
ret
push
fcompl
std
popf
lret
cwtl
cld
aad
sti
popf
int3
xchg
stc
adc
xchg
idivl
pop
jbe
mov
jno
testl
add
sbbl
cli
xor
sbb
cltd
and
cli
scas
lahf
mov
mov
or
mov
mov
sbb
push
xchg
jl
decb
sbb
add
dec
pop
jl
xchg
repz
xor
cmp
aad
sub
cli
jg
sub
or
out
mov
ljmp
aaa
outsl
fbld
add
push
jge
push
add
pop
push
repnz
ret
scas
movl
fs
ds
jg
scas
sbb
jno
imul
rcrb
ret
les
sub
xchg
mov
jl
cmpsb
sbb
mov
cmp
inc
jg
pop
scas
ss
mov
sbb
xor
jmp
decb
mov
repz
subb
mov
sbb
inc
in
push
or
aaa
outsl
popf
insl
pop
sbb
push
jge
push
out
outsb
outsl
div
call
push
xchg
aas
push
adc
fwait
jmp
sbb
xor
rorb
outsl
negl
mov
mov
pop
add
push
insb
and
or
add
mov
pushf
dec
mov
jae
test
add
lods
sub
or
daa
and
enter
ret
adc
sbb
or
mov
sbb
fbstp
push
xchg
xchg
pop
inc
or
push
xchg
pop
es
sub
xor
cli
and
push
or
adc
mov
sbb
lock
cs
push
inc
test
notb
push
or
mov
xchg
pop
xor
out
xchg
push
int
or
and
cld
push
icebp
call
decl
dec
pop
or
insl
std
sub
test
mov
inc
push
lahf
mov
sbb
jb
push
mov
xor
sti
add
push
jmp
xchg
xchg
test
mov
push
call
xchg
sbb
sub
ljmp
adc
loopne
outsl
call
cmp
cltd
or
xchg
bound
ss
roll
or
jge
jp
pop
lea
xchg
mov
sbb
sbb
or
addb
push
lcall
push
jp
sti
or
fstpt
loopne
pop
fs
lods
repz
mov
outsb
dec
xor
aam
or
fildl
push
fsubr
dec
sub
sbb
add
jle
std
outsl
std
leave
lahf
neg
xor
jbe
add
push
cmpsl
push
enter
ss
das
lret
outsl
push
test
cltd
ficomps
push
jnp
sbbb
ljmp
mov
repz
mov
out
scas
sub
adc
push
push
test
insl
repz
pop
xchg
movsl
fsubrl
js
cmpl
xchg
sub
addr16
aad
lods
dec
lock
push
inc
fsubrp
js
daa
inc
into
popf
cmp
push
aaa
rcrl
pop
inc
scas
mov
jg
mov
add
dec
xchg
fucomi
mov
sbb
xlat
cmp
pop
scas
popf
addr16
sbb
push
mov
rcl
mov
jae
movsl
xchg
icebp
jo
mov
pop
popf
enter
inc
ret
fdecstp
aam
push
insb
cli
loop
loope
out
add
sub
aam
inc
rorl
ficoml
mov
jo
jmp
outsl
sub
cwtl
inc
push
bswap
push
lcall
shr
xor
or
jo
xor
sahf
xor
adc
int
xlat
xchg
jecxz
cmpb
shl
ret
in
outsb
pusha
inc
adc
or
fistps
xchg
cmp
cs
loopw
jno
outsb
fistpl
or
xchg
xlat
mov
outsb
loope
das
outsl
pop
int3
mov
lods
mov
cmp
fldcw
pop
std
xor
xchg
mov
push
fdivrp
mov
mov
in
imul
inc
jno
nop
aam
mov
xchg
add
int3
fimull
es
mov
push
xor
mov
mov
cmp
icebp
xlat
pop
lret
stc
sti
rclb
mov
ret
orl
stc
sbb
push
dec
movsb
pop
jge
pop
xchg
cmc
sbb
and
lret
loopne
pop
fcmovnb
jo
xchg
mov
fistpl
call
mov
loope
fsubrp
scas
shrb
sbb
scas
stos
mov
xchg
pop
jg
jno
fisttpl
sahf
jne
jle
sbb
imul
stos
shrl
loop
push
fcmovne
mov
mov
or
or
fsubr
inc
pop
xchg
into
jg
pop
rcl
sbb
cwtl
fwait
inc
inc
cmp
dec
shll
decb
add
adc
sbb
push
mov
push
popl
cmp
hlt
ja
mov
push
cmpsl
xchg
loope
icebp
sbb
adc
jmp
shr
popa
arpl
imul
sub
rorb
cmc
out
adc
pop
popa
push
scas
adc
daa
or
or
pop
cld
fwait
push
cmp
fiaddl
jge
scas
scas
pushf
xchg
pop
mov
fists
cli
jnp
in
pop
pop
fisttpll
in
enter
loopne
pop
jnp
cwtl
int3
lcall
outsl
addr16
fsts
xorb
mov
xlat
xchg
push
push
subl
psubd
xchg
sbbl
mov
lret
or
mov
repz
jmp
pop
cmp
cmp
and
out
and
sahf
into
icebp
rol
sti
test
sti
or
push
push
cmp
push
mov
sub
insl
add
pop
ret
add
mov
sub
mov
mov
xchg
rol
fildll
pop
xchg
out
out
push
in
sub
shrl
mov
mov
mov
bound
mov
adc
enter
gs
jnp
xor
xchg
pop
pop
std
pop
sbb
inc
xor
cmpsb
fs
push
fcoml
push
lahf
stc
push
pop
pop
push
cmc
adc
pushf
popf
pop
into
add
test
xor
leave
mov
icebp
sets
pop
lret
int3
or
dec
enter
aas
mov
mov
dec
into
out
lret
sub
imul
or
xorps
lods
mov
ljmp
test
or
dec
push
dec
nop
push
nop
and
ss
mov
lret
xor
enter
mov
pop
and
fsubrp
or
sub
insl
xor
outsb
mov
dec
adc
or
leave
ret
sub
mov
or
mov
xor
bound
fstps
push
shrb
or
jmp
mov
fwait
icebp
call
adc
test
scas
in
sbb
dec
or
popf
pop
ficompl
cs
int3
add
push
mov
int
inc
jo
sub
push
or
dec
imul
cvtps2pi
or
push
dec
fwait
sub
call
loope
cpuid
sbb
dec
int3
push
lods
out
or
dec
dec
imul
aas
mov
lock
xor
lods
dec
lret
insl
in
xchg
pop
jge
xchg
test
iret
pop
or
sub
or
xchg
push
loopne
negl
sub
dec
sbb
sbb
gs
pop
imul
mov
xchg
std
sub
stos
dec
mov
pop
add
ljmp
lea
and
test
fmull
ss
dec
and
insb
dec
shlb
push
push
push
imul
rorl
fisttpll
push
shl
jmp
mov
xchg
stc
pop
std
dec
or
test
sbb
xor
testl
mov
lcall
add
popa
fistpl
cltd
cli
fimuls
clc
fwait
or
mov
sub
call
push
mov
sahf
dec
mov
mov
jmp
enter
inc
fbld
push
or
mov
jnp
lahf
sub
ror
lret
loope
bound
sub
dec
fiaddl
mov
push
and
test
nop
sbb
lret
cmc
aas
enter
dec
sti
cmc
pop
imul
sub
scas
cli
adc
leave
cmc
or
dec
das
mov
test
imul
dec
test
or
sar
cltd
mov
mov
mov
fmuls
aad
pop
pop
cmp
insb
push
dec
jae
push
add
popw
int3
xchg
stos
xchg
xchg
std
xchg
add
push
dec
int
outsb
or
dec
call
jg
push
notl
add
dec
sbb
lret
xorl
sub
test
push
ds
dec
out
mov
push
or
imul
cmp
shlb
cmp
mov
or
pop
pushf
dec
imulb
add
cwtl
dec
cs
lea
sbb
mov
clc
push
dec
test
in
or
js
sub
lret
xlat
or
add
pop
push
test
addl
xchg
sbb
lret
call
sbb
push
dec
test
int
outsb
mov
add
addr16
jp
mov
sbb
fidivs
pop
or
div
out
hlt
and
or
loope
mov
add
adc
call
adc
test
mov
and
dec
mov
fiaddl
das
or
pop
cli
add
bound
xchg
push
pop
xor
shll
outsb
cmp
cmp
push
in
insb
movsl
std
cwtl
mov
or
mov
or
out
repz
push
sti
clc
and
scas
pop
das
and
sbb
dec
fists
mov
aaa
dec
inc
xchg
dec
sahf
mov
push
mov
fcompl
push
jecxz
mov
mov
mov
jbe
lahf
add
add
xchg
pushf
sbb
fwait
les
push
xchg
loopne
add
shlb
mov
add
xor
in
xchg
ljmp
xor
mov
outsl
cmp
pop
pop
xor
cld
mov
dec
movsb
adcl
in
iret
bound
fldcw
ja
filds
or
pop
out
jno
sbb
or
filds
xchg
lcall
jne
push
sbb
hlt
sub
popa
add
loope
lret
xor
cmp
sbb
fcmovnu
push
push
sub
sbb
subl
lcall
scas
mov
xchg
loop
out
mov
push
ljmp
imul
outsl
xchg
or
loope
leave
icebp
dec
ret
adc
int3
cltd
and
pop
cmp
dec
aas
sub
mov
cmp
pushf
xchg
stos
dec
jno
lret
scas
cltd
dec
push
pop
push
lss
orl
call
mov
orl
sbb
pop
cld
cltd
adc
mov
ret
sub
scas
sti
jp
xlat
inc
mov
pop
mov
xchg
lret
pop
mov
jo
adc
pop
push
mov
add
xlat
rcrb
lock
mov
sti
inc
lods
sub
mov
mov
pop
sub
pushf
push
sbb
xlat
cmp
push
outsl
pop
sbb
xlat
fistpll
mov
aaa
ret
mov
addr16
cmp
push
sahf
out
sbb
xchg
inc
mov
jnp
test
push
add
mov
adc
xchg
loopne
adc
stos
rcr
xor
outsl
xchg
aas
jp
pop
popl
push
cli
xchg
lods
jge
sahf
xchg
inc
sti
ficompl
lahf
fisttpll
add
push
mov
sub
pop
pop
push
jae
xlat
xchg
sbb
mov
cld
aaa
xchg
xor
repz
lods
popf
enter
mul
cmp
lea
insl
inc
dec
sbb
sbb
push
sbb
pushf
jle
sub
insb
cmp
sti
mov
rcrb
cld
sbb
mov
adc
int
sbb
push
std
xlat
outsb
cmp
pop
lahf
mov
sbb
add
in
add
aas
push
dec
add
xchg
mov
mov
xchg
in
adcb
add
add
dec
xlat
addr16
push
scas
mov
scas
xchg
int3
testl
mov
test
aad
aaa
jle
ret
inc
and
inc
push
fisttpl
pop
inc
sbb
jbe
mov
or
mov
inc
cmpsl
icebp
sarl
mov
sahf
pop
mov
push
aam
cmp
push
mov
add
pusha
push
pop
sbb
cmp
sbb
mulb
fnsave
je
lea
sbb
lret
inc
add
testl
gs
sbb
mov
lcall
inc
push
xor
lods
cmp
movsl
fstp
jge
inc
aaa
pushf
sbb
pushf
pop
xchg
push
xchg
movsl
xchg
ret
add
pop
loopne
cmpb
inc
mov
mov
pop
push
pop
fsubl
cmc
jb
loopne
push
jecxz
pop
fnstsw
iret
jbe
push
jnp
or
xchg
lret
lock
fiadds
pop
popf
add
mull
xchg
nop
ficoms
xlat
rorb
test
mov
xor
cli
add
pop
sub
clc
insl
pop
outsl
jno
jae
in
or
movsb
xor
repz
popa
mov
test
or
xchg
xchg
inc
xchg
pmaxub
insl
test
and
lds
int3
fwait
push
incb
aaa
and
negb
test
or
mov
cmp
sub
pop
sti
repz
cltd
fwait
rcrb
scas
push
sbb
scas
in
pop
vpmacsww
pop
xor
add
call
cld
adc
jbe
mov
mov
imul
iret
dec
das
push
inc
sub
enter
aaa
mov
sti
jge
ret
je
fadds
sbb
fcomp
ss
mov
dec
pop
adc
fnsave
popf
adcb
xlat
jnp
fnstcw
lahf
xor
cmc
mov
into
add
push
out
rolb
mov
inc
mov
sahf
negl
aad
jl
jne
bound
xchg
out
push
cmp
jle
negl
push
fsub
jbe
xchg
cwtl
jp
jae
push
push
sbb
inc
lret
and
cmc
rcll
push
or
add
pop
mov
sbb
jg
aaa
pop
inc
imulb
sahf
pop
aaa
xchg
iret
sbb
idivb
stc
dec
or
xchg
jae
push
xchg
push
xchg
cmp
push
popa
lods
idivb
test
xor
lea
sbb
push
cmc
ret
fwait
subl
adc
or
test
push
sbb
adc
sets
sbb
and
addb
xchg
pop
or
xchg
adc
jle
loopne
cmpsl
mov
shl
lock
divb
aas
mov
jp
in
sti
cmp
fistl
ret
or
xor
roll
inc
iret
xor
and
fsubrp
pop
idivb
jnp
mov
popl
sub
cmp
cmpb
jg
add
xchg
in
rcrl
push
cmpsl
aad
stos
sbbl
enter
daa
aaa
int
aas
ret
pop
push
mov
pop
mov
testb
aaa
seto
mov
jno
mov
movsl
pop
xor
jg
fnstsw
in
in
jbe
xor
lods
mov
xor
and
imul
test
cwtl
mul
aam
adc
jle
add
adc
pop
lahf
mov
xchg
sbb
xorl
sub
mov
mov
sbb
mov
divb
orl
push
popa
pop
mov
js
fcmovne
std
xor
mov
mov
pop
test
mov
jl
fndisi(8087
cmp
mov
xchg
adc
popf
dec
stos
pop
out
out
es
and
cltd
sub
pop
fisubrl
jmp
aas
mov
pusha
xlat
gs
pop
pop
pop
fwait
int
pusha
xor
add
lahf
mov
mov
in
aad
pop
cli
mov
mov
outsl
scas
or
mov
cmpsb
popf
or
test
add
adc
and
arpl
out
or
and
movzbl
mov
inc
push
jl
leave
push
cltd
sbb
into
xor
push
jno
and
lock
and
pop
push
call
daa
loope
nop
icebp
jae
sbb
dec
or
stc
test
pop
inc
loope
es
inc
jge
repnz
and
sbb
fildll
scas
sub
jp
jmp
pop
jle
call
adc
mov
pushf
inc
sbb
and
cmp
incb
lcall
sbb
or
sub
imul
std
inc
fcomp
das
cmp
pop
insl
pop
fistpll
mov
jg
sbb
shlb
mov
jmp
sbb
pop
xchg
push
scas
ljmp
cmp
test
inc
fmull
jge
jg
cmp
subl
push
icebp
sti
test
xlat
pop
scas
iret
inc
jno
xor
sbb
test
and
ss
in
fstl
push
enter
mov
xchg
das
xor
sbb
in
int
fnstsw
cltd
xor
xor
xchg
into
xchg
push
insb
sti
pop
xchg
or
sub
cltd
mov
mov
lea
sti
or
sti
or
enter
cltd
sub
inc
enter
mov
jp
sti
cld
fwait
aas
int3
mul
lcall
outsl
jb
lcall
lea
mov
cmpl
mov
mov
sahf
clc
fnsave
adc
and
add
push
imul
stos
fmuls
clc
lahf
mov
adc
adc
pop
iret
push
nop
ljmp
add
adc
addl
decb
mov
jl
xchg
lahf
rcrb
ficoml
test
mov
addr16
lahf
mov
je
mov
mov
xchg
jp
pop
sub
idivl
outsl
and
lahf
dec
mov
add
das
repnz
pusha
dec
fldl
pop
setle
std
movsb
fldz
cld
xor
xchg
stc
lahf
inc
pop
insb
dec
adc
mov
shrb
rclb
or
xchg
xor
sub
stos
mov
fmulp
xchg
sahf
and
loop
push
adc
mov
xlat
sub
lahf
cmp
out
inc
ljmp
bound
sar
rclb
mov
adc
push
loop
arpl
add
std
cmpsl
rcrl
scas
sti
scas
mov
std
lods
jle
pop
inc
mov
jge
adc
push
xchg
jne
clc
inc
add
rcl
mov
sbb
mov
jno
imul
loop
jge
sti
mov
in
aas
das
xchg
jo
adc
mov
cwtl
mov
fcoms
pop
ja
push
add
jns
or
daa
jl
scas
push
dec
adc
dec
jno,pn
add
subb
xchg
ficoml
sbb
sbb
pop
or
mov
dec
dec
fcmovnu
add
stos
gs
adc
std
jno
insb
inc
cmpsl
shll
xor
lret
mov
mov
rclb
mov
sbb
xchg
add
xlat
adc
sbb
std
cltd
movsb
fdiv
nop
pop
sar
push
pop
add
mov
mov
in
dec
insb
in
in
add
push
lret
add
push
pand
mov
pop
pop
scas
clc
adc
mov
jnp
mov
mov
dec
adc
cltd
out
mov
adc
pop
mov
fiadds
nop
ds
mov
pop
xchg
cwtl
mov
imul
jl
mov
leave
inc
outsl
leave
sahf
mov
outsb
push
mov
in
or
jmp
cmp
popf
sub
test
negb
mov
popa
push
pminub
cltd
fisubrl
sbb
in
xchg
jle
in
jge
push
push
nop
shr
lcall
cmp
mov
pop
fcmovnbe
cltd
pop
pushf
cltd
loopne
sbb
pop
push
outsb
dec
mov
push
call
xchg
data16
dec
frstor
nop
push
fwait
call
repnz
cmp
and
xchg
out
or
push
push
lcall
enter
jae
pop
lea
mov
mov
movsb
clc
cld
mov
popf
das
lahf
mov
jg
into
adc
out
cwtl
lahf
filds
push
cltd
pop
adc
aaa
inc
int3
xlat
outsl
into
aas
cmp
decl
cli
pop
pop
jp
fcoml
test
push
pop
mov
addr16
ror
inc
nop
nop
xor
enter
testl
mov
jle
xlat
xchg
pusha
mov
jne
cmpl
xchg
sbb
sbb
push
adc
gs
cltd
repnz
rcll
mov
xor
push
icebp
adc
push
sub
adc
inc
xchg
pop
das
push
lahf
andl
rolb
xchg
jl
pop
mov
fistl
ret
lcall
sbb
adc
lcall
and
sbb
push
cmp
fimull
push
iret
push
hlt
aam
mov
dec
adc
aam
and
sti
xchg
xchg
mov
sub
cmp
inc
sahf
pop
insb
jne
push
fnstenv
mov
pop
sbb
aaa
adc
jmp
sarb
fst
leave
pop
aad
adc
adc
insl
sbb
adc
iret
outsl
sahf
into
gs
sahf
push
push
iret
mov
aad
pop
inc
sub
mov
inc
fs
adc
jmp
xor
or
jnp
push
fwait
sub
pop
lahf
movb
fwait
sub
std
pop
mov
jmp
test
xor
mov
popf
xchg
les
push
add
inc
pusha
out
inc
mov
stos
mov
mov
dec
fbld
sub
xchg
inc
outsb
xchg
out
dec
test
arpl
xlat
gs
bound
inc
sub
pop
bswap
loop
lds
add
push
data16
push
or
add
jecxz
xlat
mov
or
mov
aaa
cmp
fcom
mov
pop
mov
adc
fnstcw
clc
pop
mov
jge
sbb
pop
xchg
pusha
in
mov
lods
cwtl
stos
js
sti
lretw
xor
fldt
xchg
sub
test
imul
mov
xchg
jmp
in
out
sub
repnz
add
lock
push
pushf
push
push
sbb
inc
sbb
pushf
cmpsb
stos
and
pop
xchg
fisubs
jmp
mov
cmpsl
mov
ljmp
jmp
xchg
rcll
xchg
fs
divps
bound
push
aad
mov
popl
out
cmpsl
subb
mov
negb
popf
popf
cmc
aad
push
xchg
int3
mov
sbb
pop
adc
out
push
inc
or
push
pop
mov
push
pop
push
add
inc
leave
push
add
inc
pop
push
int
mov
pop
inc
push
sbb
mov
mov
pop
faddl
test
add
pop
sbb
mov
or
mov
dec
or
pop
jmp
mov
mov
add
pusha
cli
cmpsb
xchg
mov
xchg
pop
movsb
sti
xchg
sbb
test
dec
sub
rcrb
shlb
dec
adc
cltd
clc
enter
push
push
xlat
or
data16
sub
dec
dec
inc
mov
inc
mov
les
pop
push
cltd
xlat
cmp
out
insl
sbb
into
enter
jmp
adc
push
dec
es
mov
addr16
mov
mov
push
fwait
add
pextrw
jae
mov
fiadds
and
mov
cmpsb
add
or
or
das
popf
cmp
add
stc
sbb
jp
sbb
xchg
mov
fmull
lret
add
inc
inc
and
dec
push
popf
xchg
mov
adc
mov
fisttps
or
xlat
out
pop
imul
push
cmp
mov
andl
in
sbb
sti
dec
les
inc
xchg
es
imul
mov
mov
jbe
push
jmp
test
adc
mov
jae
cmpsl
pushf
push
fdivp
shll
mov
outsl
sub
jnp
xchg
test
mov
mov
xchg
or
lods
sbb
xlat
repz
outsl
std
mov
xchg
inc
xchg
loopne
xchg
in
pop
daa
mov
mov
rorb
dec
addb
xor
fcomps
lds
xlat
fwait
push
and
or
pusha
xchg
fistpl
fistpl
xor
adcb
xchg
and
xor
sub
pop
push
jno
addr16
mov
mov
fs
add
adc
xchg
push
mov
cmp
add
cmp
out
xor
sbb
xchg
xor
xchg
push
in
push
inc
push
pop
dec
sbb
adc
repnz
xlat
or
sbb
jae
rorb
fldcw
nop
ds
shl
xor
dec
mov
mov
sbb
xlat
test
xchg
add
xchg
sbb
cli
shll
jp
push
mov
sbb
out
xchg
call
insb
cwtl
adc
xor
nop
push
push
fwait
pushf
sub
jp
jge
jne
jle
repnz
or
sbb
int3
popf
lea
xchg
push
mov
in
add
mov
nop
xchg
mov
pop
push
lock
and
or
repnz
lods
pop
shll
daa
popf
std
std
idivb
jmp
mov
push
and
int
add
out
icebp
jno
xchg
mov
xlat
pop
adc
icebp
sahf
mov
mov
fnstsw
pushf
add
ss
out
xchg
pop
sub
jb
fucomi
mov
out
cwtl
adc
or
add
pop
sbb
push
pop
adc
sbb
aad
test
in
sbb
or
into
sbb
push
adc
fadds
jmp
mov
mov
xchg
int3
cmc
adc
mov
cmp
sbbl
pop
jl
lods
testb
dec
pop
xchg
ror
jl
xor
xchg
fstps
subb
into
jno
imul
stos
sbb
cli
xchg
loop
pushf
pop
in
add
sahf
lret
fsubs
mov
jb
fistpl
sbb
xchg
mov
push
sbb
pop
sbb
lods
xchg
xchg
jbe
xorb
add
sbb
in
popf
lea
sub
hlt
xchg
or
pop
iret
mov
cmp
repz
orl
mov
push
or
jbe
rcll
outsl
mov
pushf
push
cmp
aad
or
hlt
jmp
rcll
hlt
out
push
jnp
fsubrs
or
xchg
repnz
jge
push
aam
xchg
int
xchg
sbb
lcall
arpl
or
dec
jo
ljmp
aas
mov
dec
mov
fldt
add
push
and
imul
xor
push
fimuls
or
jne
adc
fisttps
rorl
imul
aad
stos
jge
leave
jbe
addr16
mov
mov
repz
lcall
jmp
add
inc
stos
mov
push
out
dec
or
leave
lret
xchg
sbb
dec
ror
xchg
addr16
aaa
mov
notb
test
std
mov
jbe
pop
mov
push
push
iret
fcmovne
cmc
xchg
sbb
dec
push
fimuls
orb
fsubrl
shrl
in
mov
mov
cmpsb
push
sbbb
sub
fsubrs
pop
es
jb
mov
rorl
adc
sbb
jecxz
pushf
mov
pushf
cltd
add
imul
negb
sbb
in
or
add
repnz
sbb
fisttpll
pushf
popf
ljmp
add
repnz
add
sbb
pop
pop
ljmp
cltd
lcall
ja
cli
cld
pop
xchg
or
testb
das
push
imul
push
rorl
mov
rcrb
adc
lock
pop
pop
sbb
adc
fstl
imul
lret
xchg
mov
sbb
xor
iret
sbb
adcl
mov
sbb
les
daa
mov
push
or
rorb
out
sub
movsb
or
call
xchg
mov
movsl
jp
xchg
xchg
xchg
mov
enter
push
adc
loope
in
cmpsb
insb
neg
add
ljmp
leave
pop
outsl
popf
imul
es
mov
lods
fisttps
orl
jmp
mov
popf
out
sbb
and
sbb
insl
pop
sbb
imul
rcr
insl
adc
push
push
mov
daa
mov
xor
jmp
xchg
add
push
rcll
pop
mov
lds
mov
sbb
cltd
add
inc
ret
pop
sbb
notb
or
jnp
ret
jg
sbb
insl
xchg
popf
imul
lret
or
test
push
sbb
xchg
inc
sar
xchg
cmpsl
xchg
repnz
adcl
pop
mov
or
stos
sbb
lret
push
stos
xchg
pop
cwtl
cmp
dec
out
ss
je
xchg
fldl
pop
push
or
inc
mov
mov
add
xchg
lea
scas
push
lcall
lret
imul
or
or
add
mov
sbb
iret
sbb
pop
push
lea
adc
inc
inc
sub
lret
leave
push
jecxz
xchg
add
test
mov
dec
js
imul
aad
movl
or
inc
jnp
pop
or
es
xchg
add
mov
js
mov
cmp
sbb
clc
sub
call
lock
lahf
sti
insl
sbb
jae
push
add
inc
sub
add
fistpll
push
push
or
sar
movsl
cwtl
add
cmp
incb
push
add
pop
push
sub
add
inc
dec
daa
or
es
push
movsl
mov
adc
addl
or
add
pop
adc
mov
ss
outsb
push
popa
or
cltd
or
xchg
packuswb
inc
jl
test
pop
mov
mov
xchg
test
loope
dec
rcll
addr16
add
mov
popf
cmpsl
mov
test
popf
cltd
stos
enter
popf
data16
xchg
sbb
pop
clc
sbb
dec
lret
lods
pop
into
fdivr
sbb
push
cmp
movsl
popa
fwait
popf
lea
js
sbb
pushf
jge
imul
fstp
inc
pop
jmp
popf
out
stos
gs
lods
mov
loop
cmc
stc
sbb
aad
aam
gs
jmp
sbb
mov
dec
lret
movsl
inc
push
popf
sbbb
fldlg2
adc
xor
rcll
fwait
aam
orb
dec
mov
fadds
mov
je
lds
cli
lcall
mov
cld
cmp
or
cltd
in
cmp
ja
jns
and
mov
pop
je
xchg
jns
imul
ja
mov
pop
lods
imul
daa
sub
adc
cmpsb
sub
inc
jp
pop
or
push
mov
fst
rolb
fstpl
enter
sahf
popa
sbb
adc
addl
rcr
fstp
sbb
movsl
cmpsl
push
mov
int
mov
imul
mov
cmpsb
xlat
stos
roll
sbb
or
xchg
sub
and
lds
sbb
mov
pop
sbb
xchg
cli
cmp
fwait
lcall
push
in
xchg
push
mov
test
ret
mov
mov
sbb
jmp
clc
adc
sbb
fld
and
fwait
into
jmp
ficomps
pop
cli
mov
icebp
inc
xchg
and
fwait
sub
inc
ret
daa
ret
iret
movb
xchg
int
dec
out
xlat
filds
jp
adc
mov
push
jg
push
fwait
push
and
cmpsb
aaa
outsb
cli
xchg
or
jp
nop
xchg
push
fsts
test
arpl
xchg
inc
mov
xchg
adc
add
add
cmpsb
push
aad
das
push
inc
es
pop
sbb
xchg
ss
jg
jmp
jp
sbb
fwait
inc
aas
aad
add
cmp
push
sbb
and
mov
clc
xlat
pop
mov
pushf
sahf
or
ljmp
xor
or
push
cltd
test
mov
bswap
mov
xchg
int
cmp
xchg
loopne
ret
fistpl
cmp
lcall
sti
or
aad
push
dec
popf
sub
fldenv
test
or
loop
mov
enter
test
ljmp
das
lcall
fbld
mov
push
sbb
sahf
cwtl
push
xor
cmp
mov
mov
dec
nop
insb
lea
mov
jae
repnz
sub
icebp
mov
push
leave
outsl
jo
push
xor
fsts
xor
dec
jns
inc
test
sbbb
pop
ss
lcall
adc
push
insl
xchg
dec
aam
cld
out
cmpl
adc
mov
add
mov
adc
xchg
xchg
lret
mov
cmp
shrl
sub
push
jecxz
xchg
xchg
fwait
addl
sti
subl
adc
insl
mov
rcll
outsb
cmp
repnz
outsl
jb
push
lock
in
jmp
xorl
push
or
adc
dec
rolb
cmp
rorl
in
cltd
push
data16
and
cmp
sahf
arpl
cmp
cli
sbb
cltd
sbb
cli
or
fwait
xchg
lcall
push
add
or
and
jnp
stos
jnp
xchg
lds
fcoml
fwait
push
in
push
or
push
ljmp
lcall
sbb
cli
lea
mov
mov
inc
sub
orb
pop
mov
push
mov
aas
pop
sub
pushw
stc
dec
mov
xlat
xchg
mov
xchg
sub
xchg
add
push
adc
sub
pop
movsl
mov
fnsave
movsl
and
mov
sti
mov
ficomps
or
or
jge
repnz
repz
ss
xlat
popa
xor
insl
cmp
pop
int
mov
xchg
sarb
aam
jnp
rorb
mov
adc
cmc
cs
mov
shlb
int
push
cmp
push
push
cmp
into
inc
push
inc
and
rcrl
push
sbb
cltd
cld
sub
pop
inc
mov
push
mov
fwait
push
pop
sub
cli
rcl
paddsw
into
xchg
stc
pop
mov
pop
adc
push
mov
pop
jne
js
push
adc
lcall
lods
in
repnz
pop
cli
pop
fiadds
loop
jmp
sbb
mov
fstpl
int
adc
out
push
roll
testb
xchg
inc
pop
or
lods
or
push
pop
inc
movsb
inc
mov
cmpb
stos
loop
cli
pop
sahf
xchg
testb
rcll
ja
stos
pop
enter
sbb
int3
mull
jo
loope
push
jno
push
add
adc
lcall
mov
clc
pop
mov
inc
mov
mov
cmp
pop
sbb
aad
adc
sub
adc
pop
movsl
sar
add
pop
push
mov
push
in
and
mov
xorb
push
adc
mov
xchg
push
imul
lock
test
or
mov
shl
ja
sti
mov
cltd
mov
xchg
push
int
jp
std
repnz
ljmp
xor
popf
outsb
push
and
cli
mov
push
dec
fmul
or
or
mov
mov
mov
lret
dec
push
pop
in
jns
lret
jg
xchg
mov
insb
clc
movb
pusha
sub
dec
movsb
mov
imul
inc
add
pop
sbb
loopne
stos
or
mov
mov
and
imul
jne
loopne
or
shrb
add
movsl
stos
sub
lret
out
dec
out
add
fmuls
xor
stos
negl
popa
dec
pop
sbb
pop
leave
mov
xchg
pop
or
test
decb
rolb
mov
or
incl
call
aam
out
or
xchg
or
orb
push
mov
aaa
imul
inc
or
push
inc
xlat
imul
dec
xchg
or
push
mov
jae
imul
mov
push
or
jle
js
pop
lock
imul
or
mov
cltd
adc
xchg
mov
add
movsl
lret
dec
pop
add
aad
sar
xlat
stc
sbb
adc
fstpt
jne
add
ss
jnp
pusha
xlat
add
test
popf
fisubrs
in
push
sbb
pop
cli
sbb
push
int
push
or
jo
mov
lea
pop
movsl
mov
pop
cltd
xchg
and
jmp
push
sub
mov
adc
aam
jne
dec
sti
push
pop
sbb
pop
roll
xchg
sub
or
arpl
sub
imul
iret
into
xchg
fwait
sub
sub
mov
xchg
in
sbb
mov
ret
mov
pop
clc
or
cmp
lcall
or
sahf
stc
jns
or
inc
and
mov
sbb
or
lret
sti
sarl
data16
mov
test
xchg
mov
movl
push
or
fisttpll
ja
jmp
rcr
mull
fwait
popf
pop
pop
jbe
aam
testl
dec
xchg
dec
xchg
popf
xor
jmp
int
fisubrl
aam
sbb
fwait
mov
test
dec
mov
sti
loopne
imul
fistps
mov
cmc
outsl
cmpsb
movsb
xchg
inc
in
pop
jnp
sub
loope
shll
sub
lret
xor
sub
cltd
or
cltd
push
loop
xchg
les
or
in
xchg
cmpsb
int3
adc
sbb
out
es
jmp
fstps
incb
into
std
imul
pop
outsb
inc
sbb
inc
xchg
push
adc
jle
stos
ja
xchg
cmp
add
push
pop
lret
inc
sub
xchg
call
adc
int3
adc
mov
mov
pop
xchg
adc
or
dec
adc
in
pop
push
sbb
iret
xchg
dec
or
jnp
cmc
in
cwtl
sahf
sahf
insl
arpl
popf
testb
jle
add
fisubrl
or
fsubl
out
outsb
pushf
jmp
ret
sti
push
sti
push
cmp
mov
xchg
call
pop
fwait
pushf
pop
add
pop
iret
pop
outsb
nop
xchg
ret
cld
xchg
mov
test
mov
adc
xchg
adc
test
dec
test
pop
loopne
rolb
mov
arpl
inc
scas
sbb
xchg
cs
icebp
lahf
jmp
sub
mov
or
neg
dec
in
sbb
in
inc
sbb
or
push
jnp
cltd
rclb
popf
loope
out
cwtl
pop
dec
jmp
shlb
push
aaa
nop
adc
popf
subb
mov
fstpl
mov
jae
dec
pop
notl
sub
sub
test
ja
xchg
inc
test
popa
mov
mov
or
push
mov
cmovge
mov
sub
or
xchg
aam
iret
push
push
in
scas
or
or
cld
sbb
add
in
dec
jo
mov
repz
or
cltd
sub
adcl
in
test
imul
add
ficompl
call
adc
and
stc
pop
mov
out
addr16
pushf
mov
mov
out
pop
outsb
cwtl
push
fwait
inc
in
push
scas
jbe
and
push
ficomps
xor
leave
enter
test
dec
and
nop
cli
fwait
sbb
cs
popf
mov
movsb
outsb
mov
test
outsl
subb
fistps
add
lods
addb
stos
gs
rclb
mov
sbb
nop
repz
xchg
psraw
pop
cld
pushf
sbb
sbb
jmp
outsl
and
add
scas
xchg
mov
pop
pushf
cmp
jge
out
ret
push
jo
xchg
cwtl
sti
dec
mov
pop
and
lret
push
push
or
lahf
xchg
cmp
push
inc
clc
shrb
ss
add
xor
jg
imul
cli
dec
xchg
stc
setp
sbb
aas
xchg
pushl
das
adc
das
nop
cmp
les
int
mov
dec
xchg
negb
hlt
into
mov
lock
ret
lcall
pop
pop
out
lcall
ret
jb
push
xchg
pushf
or
mov
ja
cwtl
or
mov
cmp
cmp
xor
mov
test
pop
add
sbb
cwtl
add
divl
xor
repz
xor
aas
jge
test
push
mov
out
jnp
push
aam
pop
xor
ret
push
aam
fdivs
and
push
aam
fistpl
dec
adcl
or
add
aam
xlat
test
xorl
sub
jnp
xchg
xchg
xor
xorb
call
pop
out
adcl
rclb
and
mov
pop
or
push
add
and
outsb
xchg
push
rorb
pop
imul
testb
add
jmp
push
mov
cmc
xchg
adcb
pop
ljmp
mov
imul
scas
jmp
lret
pop
out
scas
cmc
lods
cmp
shl
add
sbb
adc
jnp
xchg
adc
adc
mov
add
insl
push
sbb
scas
fbstp
sbb
lahf
mov
in
cltd
cmpsl
push
rcrb
stc
in
mov
or
and
mov
add
cltd
sti
lahf
adc
sbb
popf
adc
sahf
xchg
push
fs
mov
fnstsw
mov
repz
mov
pop
lahf
sub
and
mov
js
jp
inc
push
xlat
mov
xor
popf
sbbb
test
das
jo
pop
xlat
add
in
or
sbb
xchg
xchg
pusha
cmc
pop
pop
adc
mov
aad
std
push
or
and
out
cmp
popf
arpl
mov
out
push
dec
jo
in
cmp
pop
outsb
push
adc
add
in
cltd
ret
inc
sbb
cmpsl
sbb
loopne
bnd
jno
gs
and
cld
add
push
daa
and
imul
sbb
adc
test
inc
subb
xchg
ret
jne
hlt
out
jg
add
sub
dec
imul
negl
sbb
adc
lret
cmp
repnz
mov
or
adcl
and
lea
in
inc
out
sub
cld
lfs
push
push
sahf
out
shrb
sbb
jl
jns
fidivrs
mov
aas
filds
pop
mov
and
test
fisubl
jmp
sbb
clc
push
push
mov
and
stc
push
cmc
sbb
sti
cld
adc
cld
sahf
xor
std
push
rorb
in
mov
push
pushf
pavgb
ss
sahf
rolb
and
mov
shll
scas
xchg
adc
fstp
push
sbb
insb
jnp
cmpsl
in
xor
jo
dec
cmpsl
pop
outsl
or
orb
jno
cmpsl
push
addl
xchg
rcrl
loopne
mov
xchg
int
sub
movsl
sbb
sti
xor
sub
arpl
mov
cmpsb
xchg
adc
adc
movb
out
inc
mov
rsm
lret
sub
call
mov
mov
cli
sub
xchg
adc
lds
mov
lods
leave
pop
jno
icebp
mov
xchg
xchg
repnz
pop
push
mov
nopl
stc
cmpb
test
roll
sub
push
sbb
inc
add
out
fs
sub
ja
out
or
sbb
cmp
cmp
shlb
push
test
pop
mov
adc
xlat
jle
adc
clc
mov
gs
and
repnz
hlt
pop
mov
adc
popl
rcrb
stos
js
out
jno
cltd
push
sbb
xchg
sbb
adc
sbb
ret
or
dec
aaa
dec
cwtl
xchg
cs
mov
add
adcb
mov
pop
cwtl
jns
mov
pop
nop
sbb
stos
mov
sbb
push
jno
stc
or
aas
mov
fs
sarl
out
pop
fldl
subl
aas
jno
cmp
xlat
xchg
cmpsb
vpcomq
gs
subb
aaa
push
enter
adc
divb
adcb
clc
jle
jno
mov
fucomip
mov
aaa
mov
and
aad
push
push
push
sbb
cltd
ja
mov
dec
mov
mov
mov
insl
in
sbb
sub
sub
inc
or
stc
xchg
cmp
mov
fnsetpm(287
std
sti
dec
rorb
cmp
rolb
cmp
fisttpll
insb
push
shrb
xchg
mov
xchg
mov
lret
mov
xchg
outsl
addr16
or
int
idivl
xor
mov
push
cmp
adc
push
int3
inc
and
in
fstpt
sbb
adc
lret
sbb
push
sub
jbe
jecxz
inc
push
sti
sbb
add
rclb
sarb
add
pop
mov
ret
out
ljmp
push
repz
inc
ret
pushf
jl
xor
arpl
mov
xchg
cwtl
sbb
adc
xor
negl
fmuls
mov
sti
or
je
push
cmp
adc
cmp
mov
enter
mov
ret
ret
jnp
xchg
pop
cli
mov
add
outsl
mov
ja
xchg
inc
into
cmp
cli
shlb
add
xor
fidivrl
stos
add
fisttpl
loop
sbb
xchg
fwait
or
lcall
in
mov
pop
mov
dec
mov
mov
loop
sti
pop
jbe
aaa
sub
test
rcll
adc
push
lea
imul
scas
loop
negb
frstor
pop
scas
or
aaa
jo
sti
lahf
sbb
sub
push
scas
sbb
or
outsb
sbb
mov
nop
cld
ficoms
dec
adc
xor
xchg
aad
pop
push
aad
push
push
xor
push
dec
adc
mov
nop
cmp
arpl
sti
push
mov
scas
pop
pop
xor
jne
push
dec
out
jno
outsb
jo
cmc
xchg
pop
hlt
sub
add
arpl
jmp
add
sub
jg
ja
push
rcrb
pop
aas
mov
cwtl
sarl
mov
lods
out
dec
mov
sbb
sub
call
mov
sub
pop
jb
sahf
cmc
or
jg
setg
dec
ret
cmp
mov
lods
sbb
faddl
cwtl
mov
xchg
movsl
adc
lock
stos
xor
cmp
adc
sahf
stos
pop
cmpb
cmpsb
mov
test
fldl
aas
fwait
push
pop
mov
push
inc
movsl
outsl
faddl
push
addr16
add
jo
in
jp
add
pop
into
cs
jle
cmp
add
sbb
or
int3
faddp
pop
jnp
hlt
or
mov
mov
inc
popf
mov
cld
fnsave
rcl
cld
add
and
lea
jp
test
xchg
cwtl
aaa
dec
jl
mov
sbb
xchg
jge
xchg
mov
jg
jae
jle
cmp
mov
fnstsw
neg
clc
add
ss
fiadds
sbb
loopne
testl
fdivrl
jle
jg
in
ss
jae
mov
cld
repz
cmp
xchg
hlt
xchg
cmp
push
mov
dec
adc
mov
ret
jle
subl
outsl
popf
mov
xor
imul
sbb
inc
dec
imul
out
sbbl
rcll
dec
sahf
push
add
ljmp
ds
daa
test
mov
testb
cmp
push
out
pop
out
sbb
xor
xchg
ss
aad
jecxz
icebp
and
jecxz
popf
mov
add
add
inc
dec
jns
jno
decb
repz
dec
aad
mov
lret
mov
outsl
jp
popf
out
aaa
push
cmpsl
mov
mov
lret
adcl
sarb
xor
out
push
call
enter
and
cltd
jb
sbb
pop
mov
adc
cmp
xor
daa
mov
sahf
dec
andb
cmp
and
loop
jns
push
xorl
jmp
sbb
jns
cli
in
movsl
or
nop
add
sarb
mov
mov
cmpl
sbb
sbb
aad
data16
pop
mov
out
xchg
gs
gs
or
jge
int
add
inc
jnp
aad
add
or
popf
inc
adc
mov
push
add
sub
std
scas
aaa
repz
ret
fadds
sub
mov
push
dec
add
and
and
cmp
stc
inc
add
clc
sahf
imul
addr16
sbb
xchg
and
popa
dec
ret
add
cltd
and
xchg
sbbb
icebp
and
jmp
sbb
test
push
sbb
pop
jl
sub
imul
dec
popa
rcl
shrb
push
fistpl
popa
cmp
adc
push
in
jb
add
xor
xchg
js
ljmp
mov
and
clc
add
jae
loopne
mov
push
call
test
scas
push
push
pop
in
jb
xchg
cmp
and
fwait
mov
mov
xchg
mov
xlat
pop
pop
add
shl
xor
pop
ud2
xchg
jmp
shrb
xorl
cmp
cltd
cmpsb
mov
cli
dec
fs
sub
xchg
add
pushf
fmuls
aam
cmp
decl
or
pop
stos
cwtl
addr16
popa
mov
dec
xor
cwtl
mov
popa
enter
mov
xchg
sbb
mov
sbb
sub
pop
pop
or
hlt
nop
rdpmc
stc
cld
daa
sub
mov
ret
cltd
mov
sbb
xchg
leave
popf
cwtl
ficoms
in
les
adc
cli
push
mov
push
mov
push
stos
call
pop
aas
pop
jae
pushf
stos
jae
pop
push
fisttps
in
sbb
in
push
cmp
cmpsl
jl
scas
sbbb
js
mov
call
push
fistps
push
mov
lods
dec
orl
push
push
inc
push
pop
cmpb
mov
mov
and
push
fwait
scas
aam
sar
rolb
lahf
xor
pop
add
inc
sbb
cli
test
xor
xchg
xor
test
mov
adcb
repz
cmp
jle
cmp
jecxz
xor
ret
mov
sub
mov
xor
in
jns
sahf
cmc
push
xchg
mov
and
push
pop
inc
jl
scas
xor
cld
mov
jae
sbb
mov
add
les
cmc
sbb
iret
dec
mov
push
pushl
pop
jae
dec
jp
mov
fidivrs
mov
je
mov
scas
pushf
push
cmpb
mov
fwait
mov
daa
pop
stc
cmpl
sbb
or
cwtl
sub
into
fistpl
pop
repz
mov
cmp
add
xchg
sbb
daa
and
mov
dec
pop
hlt
and
xorb
ror
cmpsb
cli
sbb
adc
out
xchg
test
pusha
sbb
enter
pop
mov
xchg
xor
movsl
in
out
dec
mov
aaa
mov
std
or
popf
sti
mov
or
xchg
push
pop
pop
dec
mov
jl
aas
adc
xchg
inc
jno
and
test
jge
ja
and
outsl
dec
scas
push
jne
or
scas
adc
jae
mov
sbbl
scas
inc
sahf
lahf
pop
jo
mov
fs
ficoml
lcall
cltd
pusha
push
mov
mov
scas
push
or
push
fstps
jmp
lds
pushf
les
sbb
dec
push
sub
rcll
mov
sbb
push
sbb
sbb
fwait
lods
jo
and
test
fidivrs
pop
lahf
cmp
mov
add
jno
push
mov
push
dec
fwait
not
mov
mov
mov
or
call
aad
test
cmp
inc
inc
shll
adc
mov
cwtl
lret
pop
xlat
repnz
mov
mov
sub
pop
pop
mov
mov
negb
xor
in
or
shrb
xchg
test
loope
jb
mov
jnp
sbb
cmp
sub
mov
push
test
dec
clc
arpl
cmp
jecxz
xchg
call
mov
adc
add
outsb
sbb
in
in
xor
jge
mov
pushf
sbb
xor
ss
sbb
and
mov
push
sbb
xor
subb
js
push
pop
sbb
adc
je
jnp
cli
pop
popf
sbb
clc
dec
fistpl
scas
ror
scas
mov
in
xlat
test
add
sbb
push
outsb
xchg
enter
jae
xchg
jb
pop
fcoms
mov
pop
mov
pop
addr16
rorl
jne
fstpl
or
repnz
push
jmp
push
leave
nop
notb
leave
lcall
push
sbb
int3
clc
insl
or
movl
sti
sub
cmc
std
add
test
jno
insl
and
loope
jne
addr16
dec
ja
adc
fiadds
cwtl
pop
inc
mov
push
call
mov
popf
test
dec
mov
cmp
mov
sbb
xchg
jae
push
sbb
push
dec
adc
pop
cwtl
aas
xor
jg
add
ds
lret
mov
mov
scas
mov
hlt
rorl
pop
scas
mov
mov
inc
add
push
pop
or
scas
and
popf
xorl
sbb
movsb
xchg
jae
mov
jne
aad
fmul
negl
std
jno
xor
jge
add
fcom
push
sbb
shlb
and
jge
and
jns
inc
jne
test
xor
rcrb
std
push
adc
xchg
das
incb
sbb
enter
add
pop
and
mov
add
mov
out
mov
bnd
out
sub
adc
fistpl
ret
mov
int
pop
lcall
cli
sbb
jno
jp
mov
jmp
jl
add
fildll
pop
negb
fs
repz
jle
xor
push
mov
lret
test
in
sbb
fcmovne
daa
sbb
dec
cld
mov
scas
cli
xchg
dec
pop
mov
mov
adc
cmp
std
movq
xchg
sbb
setb
rclb
push
jle,pn
scas
inc
xor
lcall
or
lds
mov
sti
xchg
jle
lret
cmc
xchg
push
push
popa
lock
lret
xchg
out
mov
jge
leave
pop
sbb
xchg
ficompl
lds
add
or
jno
mov
mov
pusha
pusha
or
popf
fwait
adc
xchg
mov
fdivr
sbb
xor
fimuls
xchg
pop
mov
push
dec
xchg
bound
pop
inc
sbb
mov
and
out
sbb
push
and
add
fwait
mov
sbb
in
xchg
outsl
lds
mov
fsubr
test
out
xlat
lret
fwait
cmpsb
ljmp
aaa
mov
inc
cmc
fisttpll
dec
sbb
sub
dec
push
movsb
pop
pop
scas
inc
pop
es
sub
out
out
mov
inc
mov
jecxz
pop
adc
ds
ds
lret
aas
in
and
inc
mov
hlt
aam
nop
mov
sub
xchg
jmp
pop
push
xor
xchg
fsubrp
xchg
repz
xor
xor
mov
sti
iret
adc
scas
jne
or
cltd
das
movsl
or
pop
jo
xchg
test
out
mov
mov
pop
xchg
idivb
sbbl
dec
xor
cmpsb
stos
les
jae
mov
scas
sti
neg
xchg
sbb
push
lret
insb
into
out
dec
adc
mov
into
mov
or
lret
pop
jae
xchg
mov
aad
fs
mov
add
and
cltd
mov
mov
sub
out
mov
cmp
in
es
or
popa
sbb
mov
rclb
and
pop
mov
jle
inc
fsubr
xor
mov
sub
not
jge
xor
lods
jecxz
mov
mov
setp
cld
jle
sbb
adc
out
or
iret
add
hlt
or
push
sbb
jmp
movsb
sbb
mov
xor
ret
push
push
sti
rcrb
lcall
std
adc
add
aam
add
mov
fstp
scas
mov
xchg
ficompl
pop
insl
clc
push
aas
xor
sbb
ljmp
ljmp
or
rolb
pop
add
aad
pop
pop
xchg
xchg
cmp
mov
pop
and
stc
sbb
xchg
pop
xor
mov
sbb
cmp
divl
test
and
mov
sahf
out
dec
xchg
std
jno
pusha
push
in
mov
jno
adc
push
insl
psrlq
cmpsb
std
mov
aas
out
xor
xchg
jbe
inc
dec
mov
and
fucom
repz
jno
inc
ja
sbb
loopne
out
int
lock
lahf
xor
jecxz
jbe
cmp
cwtl
sbb
loopne
out
mov
lret
das
call
lret
insl
mov
push
jbe
mov
ja
arpl
cli
scas
lcall
xchg
push
xor
call
adc
mov
mov
inc
test
cmc
setle
movsb
or
sub
jno
cmpsl
and
sahf
mov
jge
js
rcrl
popf
mov
push
pushf
jge
cmp
rorb
pop
cli
popa
aad
sbb
dec
ss
pop
daa
pop
shrl
push
push
movb
sbb
aam
hlt
int
fstpl
add
mov
mov
stc
lea
xchg
mov
xchg
cld
sub
sbb
inc
dec
pop
mov
leave
insl
test
jecxz
rcl
adc
rcr
jo
fidivs
pop
xor
mov
push
push
and
xchg
mov
lods
pop
mov
mov
xchg
outsl
inc
sbb
rcrl
mov
scas
xchg
in
push
mov
mov
add
sub
aam
gs
cmp
not
jno
inc
xchg
xchg
fsts
frstor
push
jp
ret
outsl
fmul
jg
orb
and
cwtl
mov
push
jns
mov
ja
pop
xor
pop
jp
add
notl
sub
fwait
in
je
mov
pop
cli
push
lods
sbb
mov
lret
add
mov
dec
pop
fbstp
stc
test
ljmp
sbb
flds
out
mov
stc
mov
pop
outsl
flds
lcall
jg
add
stc
add
fcompp
cmpl
xchg
stc
xor
mov
jb
loopne
test
stc
push
rcrl
jmp
lahf
push
sub
mov
lea
fstps
imul
popf
mov
pop
loopne
into
stc
sbb
imul
sbb
gs
fwait
popa
xchg
push
fnstenv
pop
test
xor
add
adc
push
dec
ljmp
sub
fwait
push
in
insb
pop
pop
mov
jae
or
mov
cwtl
xchg
adc
mov
sbb
fnstcw
dec
sbb
cmp
mov
mov
cld
sub
mov
cli
pop
pop
fisttpl
mov
xlat
mov
lahf
xchg
fimuls
sub
shlb
cmpb
sbb
xchg
add
filds
push
rcll
out
insb
jno
mov
mov
cmc
out
sub
xchg
jle
jmp
cmp
sbb
dec
lahf
xchg
or
or
ret
push
sti
push
jge
std
sti
sahf
push
test
jl
push
cmp
cld
cmp
dec
xlat
add
pop
test
cs
add
dec
add
mov
sahf
pop
jmp
stos
sahf
mov
sahf
sti
int
lea
sbb
cld
pushf
pop
adc
vmovdqu
xchg
mov
shrb
inc
adc
sub
lahf
scas
push
sbb
add
cwtl
xchg
push
push
loope
mov
xchg
cmp
push
and
pop
orl
xchg
lcall
jnp
add
movsl
iret
and
outsb
jbe
mov
mov
pop
add
dec
xchg
push
and
rcrb
outsb
mov
push
sahf
push
add
sub
push
add
scas
fistpl
and
mov
mov
cwtl
fwait
lods
gs
fldl
int
mov
pop
jge
clc
out
int
lea
dec
cmp
push
jge
xor
and
insl
push
aam
add
lds
les
in
dec
ja
push
sbb
cmp
popf
cmc
xchg
popf
leave
fwait
popf
lea
mov
sub
in
repz
lods
add
jns
les
lcall
pop
call
divb
and
pop
outsb
outsl
or
jae
fsubrl
imul
jae
fmuls
fldl
mov
cli
cmpsl
insb
adcb
nop
filds
jno
mov
push
xlat
les
and
popf
loopne
cmc
add
pop
push
mov
inc
fstenv
jp
test
mov
int3
jmp
adc
sbb
pushf
das
leave
test
xchg
arpl
fucom
lret
mov
pop
add
inc
xor
push
sbbl
rcpps
mov
jb
lods
mov
lfs
loop
xchg
pop
rcrl
filds
sbb
imul
fidivrs
or
jbe
sarb
jl
out
sbb
xchg
cltd
sti
add
lret
pop
and
cmc
fldt
aad
rcr
popl
std
fwait
xchg
inc
fwait
pop
clc
xlat
pop
int3
cwtl
in
mov
mov
pop
movsl
push
jnp
enter
iret
out
xlat
pushf
mov
fwait
sbb
mov
mov
out
fisttps
cli
xchg
cmp
pushf
popf
xchg
sbb
push
test
sbb
cmp
and
sti
xor
mov
jnp
stos
pop
jnp
imul
aad
xchg
adc
xchg
xlat
fistpll
inc
cmpsl
cmpsb
lahf
jg
iret
repz
inc
cmp
add
push
sbb
scas
cmc
push
mov
jmp
lea
jle
arpl
call
sbb
outsl
daa
movl
cmp
test
mov
enter
mov
jp
fsubrs
lcall
pushf
mov
mov
sbb
inc
mov
inc
jno
jmp
mov
cmpb
sub
lfs
movsl
popf
std
mov
pop
cld
and
lods
mov
insl
pop
iret
outsb
push
aad
mov
jno
fdiv
inc
lahf
imul
adc
fnsave
add
nop
out
sub
cmp
out
js
xchg
lea
fiadds
cld
push
pusha
jmp
movb
pop
adc
jno
popf
push
mov
adc
pop
cld
sub
fisttpl
jg
add
add
lods
sbb
push
repnz
xor
cmpsb
push
pop
ss
add
in
mov
xchg
pushf
add
mov
pop
sbb
mov
or
fnstcw
cmp
cmp
clc
out
push
jmp
mov
and
lret
fisttpll
insl
adc
add
std
sbb
je
pop
das
sbb
in
jg
adc
movsl
cli
add
sahf
adc
stos
push
xor
or
mov
in
cmp
push
popf
inc
cli
mov
lahf
mov
cs
sbb
dec
jne
xor
insl
cld
sbb
pop
fisttps
xchg
push
push
seta
push
pop
pop
dec
xor
push
mov
mov
push
insb
mov
in
mov
aas
xchg
jae
cs
or
fisubrl
mov
sub
lret
add
dec
ja
dec
scas
test
mov
cli
add
into
icebp
pop
mov
pop
mov
mov
adc
pushf
push
mov
sti
aad
pushf
inc
fsin
push
aam
pushf
aaa
xlat
out
sub
daa
push
addr16
pop
mov
leave
popf
or
repnz
jb
mov
adc
sbb
cmp
js
cli
nop
aas
in
sbb
std
and
movsl
sub
mov
adc
pop
add
aas
mov
pop
cmc
xchg
and
sub
cwtl
sub
mov
xadd
stos
xchg
dec
push
call
push
popf
shl
inc
loope
sub
dec
aad
movsl
std
shrl
addr16
mov
mov
addl
stos
in
rcrl
inc
fwait
push
or
xchg
rorb
mov
in
addb
popf
mov
jmp
sub
pop
call
lret
insb
test
push
cli
into
xchg
adc
sub
ds
sbb
mov
repz
jle
adc
rcrl
nop
add
push
shrl
sbb
bound
ret
sbb
orl
xchg
cmp
xchg
ljmp
lcall
out
add
sarb
sub
mov
int
inc
mov
sub
xchg
test
cli
out
adc
sbbb
stos
jle
fidivrl
mov
mov
std
inc
stos
sub
xchg
rcrb
ja
out
cmpsb
xchg
adc
mov
sbb
frstor
sub
fstpt
xchg
mov
jnp
jne
cmpsl
mov
fwait
test
mov
jnp
jae
in
data16
rclb
int3
fnstsw
shll
scas
clc
mov
jl
mov
add
cwtl
arpl
stos
ret
pop
cltd
sti
lea
pop
mov
mov
inc
fucomip
decb
jg
xchg
xchg
sbb
mov
sub
add
pop
jle
lret
inc
sub
adc
jae
push
lds
popa
aam
jl
push
pop
jge
xchg
pusha
mov
fwait
aad
push
cmovo
sahf
jnp
xor
adc
sbb
lea
mov
push
arpl
or
sbb
xchg
notl
repz
push
outsl
cmpb
pop
add
aas
cld
rorb
popf
mov
fimuls
fsub
adc
insl
test
loope
xlat
sti
cwtl
xor
jp
repnz
xchg
sarl
adc
xchg
mov
add
movsl
inc
test
xchg
xor
out
lret
xchg
fwait
or
fsubrp
mov
movsl
push
cmpsl
jo
xor
in
cli
cld
push
cmc
mov
sbb
sahf
insl
popa
leave
xchg
xchg
jae,pt
mov
xchg
mov
lds
xchg
jp
mov
adc
jae
xchg
jno
adc
adc
mov
jge
xchg
jnp
jb
out
inc
iret
jne
cwtl
mov
mov
push
jnp
xchg
sbb
rcr
cld
cwtl
fistpl
insb
notb
sbb
push
hlt
icebp
repnz
idivb
jnp
sbb
daa
fcmove
fnstcw
scas
ret
pop
in
sahf
sbb
and
jae
enter
add
rcll
push
push
sahf
jg
push
daa
test
mov
cltd
adc
inc
pop
outsb
cltd
leave
fsts
mov
dec
sbb
cld
sbb
add
arpl
sbb
add
inc
pop
fcmovne
push
jecxz
or
sub
ud0
outsl
push
lcall
mov
insb
repz
sbb
stc
testb
pop
cmp
es
mov
les
into
xor
test
xchg
jno
xchg
cmp
mov
lea
stc
fidivs
rorl
add
pop
cmp
cli
push
xchg
dec
mov
mov
adc
loope
sahf
nop
xlat
pop
in
jb
int
mov
movsl
push
fwait
repnz
sbb
push
add
cwtl
sbb
lods
jl
xchg
incb
rcll
mov
xchg
lret
mov
out
sti
cmp
sti
sbb
inc
mov
lahf
mov
sbb
mov
fbstp
mov
popf
pop
dec
cltd
xlat
test
jle
cmp
pop
jo
aaa
fmull
jecxz
sbb
out
aam
xor
mov
mov
std
push
ret
mov
mov
push
lods
push
sbb
push
aaa
insl
mov
insb
inc
cltd
fidivs
mov
out
adc
shrl
jno
enter
xchg
push
sbb
lds
cmp
int3
aad
fcmovnbe
sarl
fdiv
into
int3
popa
je
mov
or
mov
stos
or
jno
pop
push
add
imul
ja
cmp
inc
jbe
mov
outsl
mov
sbb
call
cltd
icebp
jmp
ja
aaa
xor
in
xchg
xor
jne
fstl
or
dec
das
insl
jno
movsb
adc
lods
out
pop
xchg
pop
xlat
inc
test
int3
and
cmp
inc
fwait
mov
sbb
bound
ja
pushf
les
pop
sbb
mov
imul
xchg
and
push
xor
cwtl
push
mov
daa
pop
xlat
cwtl
pop
push
push
rorl
dec
pop
jae
gs
aaa
jbe
outsl
pop
mov
popa
pop
or
loopne
pop
out
inc
mov
and
cmp
pusha
mov
pusha
mov
adc
xchg
idivl
int3
sbb
sbb
std
lahf
jg
scas
adc
pusha
and
jmp
popa
ficoms
leave
dec
sahf
call
insl
jae
xchg
cmp
fsubs
adc
pop
popl
ljmp
cmp
pop
bound
faddl
xchg
mov
popf
sbb
or
mov
push
cld
sub
scas
mov
mov
jne
fwait
mov
sbb
add
jbe
inc
repnz
cmc
nopl
repz
sbb
sbb
adc
add
loopne
fmul
sub
emms
clc
cmp
pop
cs
xchg
sarb
jnp
loop
jge
push
xchg
jnp
out
push
mov
mov
sub
clc
push
xchg
xadd
cwtl
fdivr
mov
ss
mov
mov
scas
push
add
mov
aas
pop
sar
fildl
std
pop
sub
sbb
pop
inc
shlb
adc
out
dec
dec
and
ss
aaa
testb
pmulhw
jo
xor
imul
push
xchg
popl
pop
sti
xchg
out
pushf
sub
sbb
loope
out
add
push
jne
pop
or
insl
jbe
out
flds
pop
pop
ss
mov
push
leave
push
mov
lret
inc
fistpll
sbbl
sbb
mov
fstpl
jge
cmp
loop
popf
fstpl
out
call
adc
std
incb
cmp
push
adc
sbb
xchg
stos
fwait
lea
mov
lahf
pop
xchg
pushl
sbb
pushf
cli
aas
cmp
cwtl
mov
in
pop
push
pusha
imulb
or
mov
unpcklps
or
pushf
xor
cmpsb
insb
cli
in
cmp
jmp
call
adc
mov
push
scas
movsb
bnd
cmpsl
dec
fldt
call
dec
aad
lret
xchg
pop
adc
push
test
pop
scas
lret
jmp
aad
mov
test
push
repnz
enter
mov
push
rorl
enter
push
xor
pop
into
loopne
mov
mov
ret
bound
lea
test
push
push
xor
sbbl
xchg
add
xchg
mov
sbbb
add
das
jle
lahf
mov
pop
pop
jecxz
sahf
fstpl
xchg
fistps
xchg
dec
scas
sub
xchg
lcall
push
pop
addr16
lods
popf
std
packuswb
xchg
xchg
out
andb
or
push
jnp
mov
pop
mov
dec
jnp
enter
pop
pop
fisubrl
lock
xor
push
lcall
sbb
imul
dec
inc
ficoml
sbbl
out
push
xor
aam
std
sbb
std
xchg
dec
xlat
add
sbb
pop
mov
cmp
std
pop
sahf
push
insl
arpl
std
fisttpll
mov
stos
cwtl
data16
fsts
pushf
xchg
xchg
fcmovbe
in
push
mov
loope
add
jae
ret
xchg
test
and
ret
and
mov
add
and
and
xchg
imul
idivl
mov
dec
pop
cmc
jae
pop
pop
dec
nop
shrl
sub
cmpsl
int
arpl
mov
adc
pop
push
pop
addr16
leave
mov
fists
scas
jno
and
mov
add
or
loop
aad
out
add
dec
das
pop
push
and
fisttpll
pop
push
dec
out
and
imul
pop
maskmovq
negl
pop
xchg
add
push
ljmp
push
aad
mov
and
push
addb
mov
push
xchg
aas
cmp
inc
fdivrs
jg
mov
and
xor
pushf
scas
imul
cmp
rcl
sbb
jno
imul
cmpsb
scas
pop
inc
and
mov
dec
push
xchg
or
lock
pop
push
xchg
pand
test
nop
jp
negb
xchg
pop
fiadds
pop
push
sub
push
andl
sub
pop
iret
adc
mov
mov
lahf
fisttpl
and
fbld
ds
sub
sbb
cmp
push
inc
cmp
psubsw
xchg
nop
push
pop
enter
inc
push
iret
and
mov
addr16
pop
lock
add
inc
xor
inc
std
sahf
cmp
ljmp
or
inc
lock
and
and
jbe
fsubp
mov
mov
mov
sahf
ljmp
lcall
test
repz
mov
mov
fisttps
push
push
mov
adc
mov
in
mov
push
adc
push
pop
sbb
fwait
push
and
pop
adc
fidivrl
xor
sar
fldenv
test
movsb
incl
xchg
add
decl
mov
push
mov
call
jae
jno
pop
sbb
lcall
lock
xchg
sub
std
xchg
inc
iret
enter
mov
mov
dec
std
push
sti
sbb
xchg
mov
pop
mov
inc
mov
sti
stos
lods
add
out
dec
dec
xor
and
mov
push
fs
sti
pop
test
mov
movsb
sbb
mov
push
inc
rorb
mov
icebp
mov
mov
xchg
aaa
pop
mov
ret
jno
xor
mov
adc
adc
inc
pop
ficompl
and
adc
fstpl
jecxz
jno
sub
repz
add
and
inc
insb
outsb
mov
or
and
pop
adcl
stos
fs
test
or
cld
mov
xchg
scas
inc
xchg
xchg
mov
sub
je
mov
add
enter
lcall
inc
pop
jne
cli
dec
orb
imul
add
xchg
jl
icebp
sbb
push
incl
pop
sbb
loop
sti
mov
sbb
popl
outsb
jmp
cld
xor
xor
mov
sahf
subb
jnp
sub
adc
jmp
out
fidivs
pop
xchg
xchg
lcall
xchg
dec
mov
xor
lea
jmp
lds
or
out
mov
stc
call
rcll
mov
sub
mov
into
xchg
mov
add
mov
sahf
mov
push
push
push
nop
mov
sti
mov
std
mov
fistps
or
loop
add
push
or
add
xorl
pop
add
adcb
pop
jle
push
push
cwtl
fistl
push
out
imul
xchg
fs
fcomps
popf
in
cmpsb
out
popa
aas
outsl
xor
add
sbb
daa
lcall
or
fwait
loop
xchg
jmp
loop
mov
movsl
adc
mov
mov
mov
imul
sahf
mov
push
int
pop
popa
adc
dec
dec
push
mov
jns
pop
stc
repz
jbe
push
mov
xchg
push
push
jno
dec
or
or
mov
mov
mov
out
jle
cwtl
sub
jno
sbb
pop
ja
sbb
jmp
in
adc
or
pop
aaa
dec
pop
lea
outsl
push
and
out
outsl
push
sub
stc
je
loope
xchg
lcall
ss
ror
lahf
and
push
jnp
adcb
mov
sti
pop
jp
fidivs
jg
daa
orl
or
aaa
popl
ds
mov
sahf
sub
ds
mov
jle
test
pop
in
mov
pop
fildl
into
add
fstps
arpl
subl
mov
push
or
cmp
andb
inc
and
sahf
ret
jns
orl
data16
sbb
imul
cltd
mov
leave
pop
into
fnstcw
pop
scas
nop
sbb
push
das
push
sub
ffreep
jb
xchg
mov
pop
sbb
aas
add
mov
outsb
and
cs
push
scas
adc
cltd
pop
pop
sbb
imul
or
xor
adcb
sbb
sti
test
lret
std
dec
adc
std
xchg
sub
adc
xorb
std
nop
pop
lcall
lcall
lcall
push
dec
or
sbb
xchg
sub
mov
fldl
and
pusha
aam
and
push
push
into
test
inc
flds
incb
add
test
data16
xor
pop
out
add
rcll
in
adc
add
pusha
mov
ret
subl
push
sub
lea
insb
xor
div
push
cmc
daa
in
or
cmp
ficoml
add
push
adc
cmp
sub
shrb
push
scas
mov
in
fldl
pop
popf
jg
sbb
outsl
pop
add
mov
test
sub
xlat
test
lods
stc
iret
add
cmp
pop
cwtl
stos
mov
or
cli
shlb
faddl
add
lcall
pop
movsb
dec
sti
push
mov
mov
dec
subl
cwtl
vmovapd
ficoms
lcall
mov
scas
enter
push
xchg
xor
das
cmp
aam
inc
lcall
mov
insl
inc
call
enter
fwait
insb
out
daa
pusha
cmp
cmp
mov
jge
jb
divb
adc
cmpsl
jg
cli
sub
xlat
cld
gs
std
cmp
fsts
setl
stos
jae
sbbl
add
xchg
test
lea
jmp
dec
sbb
pop
jge
mov
dec
fsts
push
mov
xlat
aas
setno
add
dec
stos
add
fstpl
dec
pop
mov
fdiv
jge
or
sbb
pushf
jle
sar
fld1
sbb
repnz
lea
push
es
mov
xchg
and
rol
in
pop
pop
out
in
roll
jle
add
xchg
pop
orl
sti
jl
cmp
jge
iret
or
mov
dec
rcrl
mov
jo
push
pop
push
adc
or
hlt
add
cmp
mov
mov
push
pop
mov
push
push
cmp
in
push
ss
inc
sub
xlat
xchg
rcrb
daa
ret
ret
push
daa
shrl
in
add
std
mov
movsl
mov
mov
out
daa
enter
jecxz
push
lds
fs
add
mov
jnp
push
sub
mov
out
sbb
push
gs
outsb
push
mov
push
push
xchg
aam
sti
ret
add
jno
pop
bswap
or
sbb
push
sub
dec
adc
les
jmp
mov
and
cmpsl
xor
xor
push
sahf
pop
nop
push
jmp
cwtl
jmp
test
add
jno
jge
pusha
push
addr16
pop
mov
jmp
cs
sbb
pop
inc
push
testb
test
popa
cmp
xchg
xlat
dec
insl
test
rol
mov
sbb
inc
imul
xchg
sbb
adc
xchg
xlat
mov
and
xlat
nop
and
adc
pop
lahf
push
xor
sarl
repnz
or
in
repz
or
or
or
pop
std
lcall
rcr
insl
fs
popf
lock
mov
ja
mov
incl
leave
mov
sbb
or
or
sub
dec
sbb
adc
push
sbb
sbb
add
pop
jmp
loope
sahf
push
incb
fildl
xchg
insb
mov
or
or
pop
push
jp
lahf
mov
add
sub
incl
fwait
enter
test
mov
xchg
pop
jle
pop
popa
push
divb
sbb
push
cli
gs
stc
aas
push
loop
sub
scas
nop
add
adc
scas
lods
and
sub
mov
out
pusha
fistps
ds
or
sbb
out
fdivrs
pop
cltd
loopne
xchg
lahf
fsts
sub
jo
test
hlt
ficoml
sti
fsubr
aam
ficompl
cli
sbb
icebp
mov
adc
mov
cmp
xor
xlat
aaa
cmp
sub
xor
cmp
mov
hlt
mov
in
pop
jg
jge
sbb
xlat
std
fs
test
shrb
into
jl
add
jmp
stc
xlat
xlat
push
add
jno
adc
lock
push
cld
mov
mov
negb
sahf
cmp
xchg
pop
cmpsb
sub
test
jl
pop
sbb
lahf
ja
and
imul
ficompl
shl
leave
test
ds
jle
fucom
push
mov
sub
je
ljmp
mov
stc
inc
aad
pop
test
pop
roll
insb
test
cmp
cwtl
nopl
inc
pop
ds
ret
pushf
cmpsb
xchg
imul
pop
mov
ljmp
sub
scas
mov
xor
dec
push
pop
test
jne
add
filds
out
fadds
mov
stos
cld
inc
pop
xor
sub
idivl
test
xchg
pop
in
test
jae,pt
adc
sbbb
stc
mov
iret
add
bound
cmp
cmp
push
mov
mov
loop
mov
pop
push
fimuls
out
xlat
leave
adc
xchg
mov
sbb
add
orl
adc
or
mov
test
and
test
xlat
jae
test
push
inc
mov
fnstcw
mov
out
in
insl
sti
into
cmp
xchg
sbb
in
add
cld
adc
sti
movsl
iret
sar
and
mov
cmp
orl
add
les
adc
mov
mov
in
jg
int
fildl
xchg
jno
xor
mov
scas
enter
lods
pop
addr16
pop
jno
ret
dec
add
or
mov
shrl
outsl
dec
mov
pop
jo
fsubs
sub
adc
xchg
std
or
into
xor
cltd
add
add
rorb
clc
repz
push
push
cld
ja
fs
shll
clc
cmp
fs
or
pushf
mov
testl
cmpsl
lret
lods
jnp
ret
pushf
push
sub
pop
lcall
pushl
push
mov
add
fwait
les
lret
rep
dec
ror
mov
fisubl
fnstcw
test
aam
outsb
cwtl
out
incb
and
mov
sti
call
or
sub
ds
test
jae
pop
cmp
int
mov
push
xchg
lahf
mov
in
les
lcall
pop
insb
adc
push
outsb
aad
in
rcl
mov
pop
jbe
inc
fstpl
pop
or
jle
mov
mov
imul
inc
sbb
fsubr
bound
sahf
add
jo
jge
lods
iret
and
sahf
sub
mov
scas
and
mov
into
jno
ret
pop
dec
int
xchg
dec
dec
sete
in
adc
mov
cld
mov
push
xchg
mov
and
test
aam
push
add
hlt
jmp
mov
jae
fcomps
cmp
out
add
dec
pop
mov
sti
add
inc
dec
and
mov
or
pop
mov
cmp
inc
xor
push
lret
add
filds
imul
mov
rorb
adc
rorb
and
xor
cwtl
xor
pop
mov
push
andb
clc
testb
mov
lret
push
cmpsb
mov
sarb
cmp
pop
mov
or
pop
adcl
mov
xchg
jg
out
jo
nop
cmp
out
stc
mov
mov
pop
push
fcoms
push
stos
shll
add
mov
es
sub
mov
inc
jne
xor
add
fsubr
aaa
or
xchg
and
std
lcall
mov
lret
ja
pop
mov
xchg
add
xor
imulb
jnp
cli
rol
push
adc
jno
jge
cmp
movsl
cmpsb
scas
push
std
std
xor
adc
lcall
cli
inc
xchg
dec
jno
xchg
jmp
sti
sub
popa
lock
mov
or
out
mov
sub
fistpl
sub
push
js
aad
aam
je
cmpsb
cmp
pusha
pop
mov
sbb
mov
mov
push
mov
fistpl
xchg
lret
outsl
sub
jae
jle
frstor
dec
jg
mov
jle
leave
shll
fldenv
lcall
out
fwait
sahf
mov
mov
push
sub
sbb
pop
jno
xchg
xchg
pop
pop
add
inc
test
test
mov
pusha
xchg
jl
sbb
aam
xchg
add
lahf
outsl
xchg
cmp
test
cwtl
inc
jle
test
notl
mov
out
mov
sbb
xchg
sbb
repz
sbb
lahf
stos
cmp
fldt
mov
pushf
mov
and
rcr
pushf
movsl
clc
lret
cmp
pop
xchg
lods
and
xchg
out
cmp
test
jg
and
fldl
idivb
mov
shrl
mov
test
cmovle
movsb
xchg
push
mov
inc
mov
sbb
icebp
insl
adcb
cmp
xchg
iret
cmc
fs
pop
je
clc
outsb
xchg
pop
jne
idivl
addb
xchg
adc
push
enter
lahf
lock
icebp
push
nop
aad
lock
cmp
mov
loope
cmp
jbe
sub
and
pop
xchg
lds
inc
pop
fwait
mov
int
jl
xlat
xchg
std
mov
ret
ss
inc
mov
test
dec
popf
cmp
pop
mov
push
adc
mov
xor
cmp
adc
fiaddl
sti
pop
in
cs
insb
mov
push
and
fbld
scas
push
xor
addb
adc
rorb
andb
jmp
sbb
mov
cmovno
fnstsw
inc
sbb
movsl
jle
imul
add
dec
test
cmp
lcall
out
daa
jno
pop
jne
aam
sbb
stc
xlat
cmpl
in
dec
cmpsb
sti
pop
je
int
dec
inc
lcall
bound
inc
dec
fst
cmp
enter
mov
nop
add
in
pushf
sbbb
arpl
lahf
jnp
fstpt
or
dec
jne
mov
pop
push
xchg
scas
movsl
fstpl
jge
add
xchg
mov
stos
out
loop
je
mov
std
jbe
pop
xor
popf
in
pop
xor
fcmovnu
pop
test
xchg
fwait
jmp
xchg
xchg
orl
popf
lds
clc
xchg
mov
js
insl
or
rcl
mov
jle
push
pop
int
mov
out
orb
lret
or
cmp
mov
dec
sbbl
std
popa
xchg
sahf
aad
xchg
lcall
jl
andl
inc
mov
jno
daa
jecxz
movsl
push
mov
insb
cmp
jmp
int3
insl
add
lds
and
loopne
iret
mov
ljmp
loope
mov
jle
and
jle
stc
inc
inc
xlat
adc
pop
mov
adc
pop
push
scas
shlb
sti
pop
push
jle
jle
inc
cmc
fisttpll
jo
rcr
cmp
add
mov
mov
sbb
xchg
cmp
xchg
sbb
in
outsb
inc
sti
xchg
test
data16
and
adc
dec
jl
arpl
adc
sbb
xor
cmc
jmp
fs
or
andl
dec
es
adcb
mov
push
xor
idivl
jne
mov
adc
cmp
pop
movsl
adc
out
sub
out
je
jle
mov
jp
push
lock
andl
popl
push
pop
push
pop
mov
mov
pop
mov
aaa
cmp
or
insb
loop
dec
or
xor
mov
mov
mov
mov
mov
cmpsb
mov
pop
mov
xor
sahf
or
movb
std
push
stos
inc
fstpl
jno
and
pop
js
outsl
jb
test
lahf
das
adc
mov
lahf
ja
cwtl
sbb
jg
popf
out
mov
mov
xlat
aaa
inc
adc
idivl
add
adc
orb
push
in
xlat
jp
inc
push
nop
decl
in
mov
inc
sbb
loop
xor
sbb
jnp
sbb
adc
mov
mov
adc
sti
sbb
inc
inc
push
mov
mov
cmp
jle
std
push
pop
jno
or
push
xchg
cmc
cli
mov
mov
push
cmc
sbb
mov
roll
nop
shlb
pusha
mov
cmp
fnstenv
mov
sbb
adc
gs
jle
test
jp
pushl
mov
adc
std
sbb
outsb
push
mov
rcrl
adc
and
add
and
push
cld
sub
ja
pop
push
into
mov
mov
mov
cmc
and
bound
push
mov
dec
hlt
pop
sub
enter
pop
pop
push
hlt
jge
adc
stc
cmp
adc
xchg
sbb
push
fldt
lahf
mov
loop
jle
shlb
sbb
sbb
movsb
ja
jg
mov
push
mov
add
sub
pushf
ds
add
xlat
inc
add
dec
pusha
das
pop
movsl
imul
emms
jo
imull
inc
xchg
dec
filds
into
mov
pop
lret
push
add
cmp
pop
aad
add
mov
adc
js
mov
in
arpl
fcomip
sub
mov
jns
es
xchg
fcomi
popl
mov
mov
pop
loope
in
sbb
lods
std
xlat
std
lcall
dec
test
add
or
pop
insb
jne
push
and
das
push
jnp
rorl
inc
cmc
inc
int
lahf
decb
cmpsl
out
adc
cmp
pop
jle
or
inc
cmp
inc
add
sbb
cmp
jne
clc
mov
mov
xor
mov
cmp
cltd
cmp
scas
or
negl
pushf
int3
pop
sbb
jne
pop
dec
es
push
insb
mov
out
inc
jne
or
ja
popf
xor
sub
sub
add
pushf
popa
int
sti
in
into
lahf
push
cmp
cli
daa
dec
push
mov
add
push
xchg
aam
add
aad
adc
addr16
pop
dec
cmpsb
lods
xchg
mov
sbb
lret
fstps
out
popf
addr16
lahf
pop
mov
add
outsl
into
cmpl
std
jo
fmul
mov
std
cli
aaa
add
jle
xchg
andb
out
aaa
repnz
clc
andl
push
mov
add
bound
xor
pop
fidivrl
sub
hlt
mov
pop
push
lock
mov
pop
push
loopne
pusha
sbb
les
dec
push
and
mov
fdivl
aam
mov
sbb
repz
sbb
ljmp
loop
vcvtss2si
lods
pop
mov
in
jnp
add
insl
in
rcrl
pop
ss
cmp
sar
mov
xor
ds
xor
adc
jns
mov
fwait
pop
pop
push
ja
aas
iret
ljmp
fstpl
shll
mov
scas
inc
and
xchg
dec
testl
outsl
jp
pop
repz
std
add
dec
sbb
aas
pop
xor
loopne
xor
cmpl
jnp
cmp
sub
leave
addr16
mov
rol
in
into
cli
shll
jnp
ficoms
rcrl
ss
cwtl
cmp
scas
push
xchg
icebp
push
xchg
dec
fdivs
pop
push
push
out
ljmp
scas
push
mov
movsb
cmp
fldt
sub
pop
mov
int3
xlat
and
ss
cmp
mov
mov
fsubrs
es
sti
push
fst
ss
bound
sub
push
inc
mov
iret
in
in
pusha
jl
push
gs
out
jmp
lods
fsub
push
addb
negb
xchg
and
mov
cltd
shr
outsb
aam
add
data16
fldt
fstpl
dec
in
popa
dec
es
add
xchg
out
popa
sti
loope
loope
cltd
dec
dec
sti
inc
mov
cmp
gs
or
testb
push
lahf
mov
xor
cmp
aas
insl
cmc
inc
xor
cmp
out
cmp
jnp
xchg
push
cmp
and
sub
xchg
pop
rcr
lds
rcll
scas
jge
ret
push
in
cmpsb
xor
jo
push
sub
sub
mov
adc
call
push
stos
and
pop
popf
add
data16
rcll
call
adcb
aas
add
cmpb
mov
arpl
imul
popf
unpcklps
test
push
nop
aam
mov
or
jno
xor
dec
dec
arpl
mov
out
pop
mov
fsubr
xor
jns
sub
push
pop
popa
imul
sti
cmp
aaa
fadds
xchg
ss
mov
or
in
cld
cmp
in
ret
push
fsubl
pop
mov
and
add
rcr
mov
sbb
mov
je
aam
dec
push
negb
sbb
sbb
or
xor
pop
ja
add
aaa
mov
sub
out
mov
xchg
cmpsl
add
cmc
mov
std
jl
pop
into
xchg
sbb
paddusw
aas
mov
jecxz
rcll
mov
test
mov
mov
inc
je
insb
push
cmp
mov
daa
add
lahf
fildll
cld
jge
sub
mov
loop
imul
or
sbb
cwtl
mov
sub
and
xchg
jp
cwtl
mov
in
fnstenv
stos
mov
mov
repz
dec
test
lcall
test
shll
inc
cmp
inc
aad
push
or
insl
mov
cmp
sub
pusha
add
pop
addr16
xor
xchg
stc
js
clc
ds
pop
out
sti
push
or
sysexit
pop
sub
mov
mov
inc
add
mov
and
pop
or
lcall
dec
cmp
iret
jno
scas
inc
push
scas
sti
enter
pop
in
enter
cltd
arpl
sbb
xor
insl
jne
mov
adc
repnz
imul
sbb
push
push
or
sbb
mov
pop
jno
jle
int3
xchg
addl
cwtl
fists
sbb
jmp
aaa
cld
lock
jnp
out
in
xor
push
pop
sub
lcall
xchg
adc
push
loopne
scas
jmp
push
outsl
mov
mov
pop
rcrl
jecxz
call
cmp
out
push
in
inc
sub
scas
inc
mov
xor
add
xchg
xor
ds
pop
mov
aaa
loop
aam
cld
xchg
pushf
xorb
or
xchg
xor
loop
or
out
clc
ds
sub
jl
pop
pop
dec
in
mov
sbb
push
sub
dec
sbb
mov
ja
adc
or
jne
add
jb
sbb
xor
hlt
inc
iret
xchg
popf
loopne
fisttpll
shrb
push
jns
adc
xor
inc
mov
mov
dec
ret
or
sbb
inc
cmc
mov
xchg
inc
std
fcompl
adc
int
arpl
xchg
xchg
xchg
pop
iret
jge
inc
call
xlat
sbb
jae
cmc
pop
mov
push
cmpsb
pop
xor
aas
outsb
jno
scas
mov
mov
inc
notl
repz
fistps
xor
sti
jmp
sbbl
std
push
xlat
lret
add
movsb
xor
cmc
dec
lds
jnp
inc
stos
sti
lods
negl
cwtl
or
lds
add
pushf
sti
sub
stc
out
pop
ljmp
jmp
imul
dec
shrb
jnp
mov
ficoms
sub
push
jl
nop
test
sti
pop
rcrl
icebp
cmp
fisubl
or
xchg
lds
sti
arpl
outsl
cli
cmp
and
xchg
mov
xchg
pop
ja
fbld
push
jno
outsb
into
jns
mov
scas
push
or
push
orl
push
lods
push
mov
mov
das
addr16
pop
jg
sti
sub
nop
cmc
popf
xlat
add
sbb
dec
pop
push
xorb
ja
fistpll
lcall
mov
setne
sbb
add
adc
jne
xchg
int
stos
pop
stos
scas
xchg
enter
stos
fmulp
add
shl
adc
popa
or
mov
dec
add
arpl
mov
cmp
jnp
lret
les
adc
mov
je
inc
xchg
or
out
pop
in
jg
jp
into
addr16
ret
or
std
mov
into
mov
and
popf
sbb
rclb
xchg
fdivrs
pop
pop
pop
mov
psadbw
ficoms
adc
mov
mov
cmpsb
stos
push
lret
jae
lock
cmp
cs
rorl
pop
or
xchg
inc
push
movsl
sahf
push
lret
movsb
imul
sub
rcr
sbb
sbb
fstl
fisttpll
repz
mov
mov
sti
mov
outsb
insl
call
inc
pop
mov
xchg
push
es
mov
xchg
test
cmp
ret
inc
mov
mov
xchg
lcall
sub
in
jmp
push
jecxz
test
jb
dec
cmp
mov
rcrb
adc
imulb
mov
jne,pn
outsl
pop
mov
hlt
cmpsb
aaa
fs
int
aad
es
dec
cltd
pop
sbb
insl
loopne
cmp
mov
je
rclb
lcall
loope
scas
out
js
add
pop
and
lods
mov
pop
push
push
ss
lods
sub
in
xor
cs
push
dec
iret
into
xchg
fcoms
movl
inc
insb
pushl
mov
pop
cmp
das
nop
mov
dec
or
adc
in
sahf
cmp
pop
sbb
xchg
inc
mov
inc
inc
mov
pop
aaa
mov
pop
xchg
dec
mov
add
sbb
pop
repnz
pop
xchg
sbb
aas
jne
negl
xchg
xlat
pop
stos
pop
xchg
sbb
xchg
adc
fiadds
sbb
das
pop
filds
inc
out
pop
cmpsl
lahf
sub
push
mov
mov
sbb
pop
pushf
outsb
rcrl
decb
jg
xchg
dec
sahf
xchg
int
popa
sbb
adc
das
sbb
data16
mov
mov
xchg
sub
nop
or
cmc
pop
mov
xor
push
inc
ficoml
xchg
lock
mov
xor
sti
rcl
push
ficoms
adc
aad
ljmp
pushf
xchg
xchg
sub
pop
push
sub
push
xor
repnz
jl
sub
jbe
push
mov
sahf
pop
sub
repz
shll
fstpl
lock
adc
sbb
into
or
add
cld
out
lea
pop
inc
ficomps
add
mov
mov
stc
push
xchg
stc
pop
push
in
mov
sahf
movsb
inc
fstpt
jge
lahf
testl
jl
pop
out
mov
and
aas
xlat
xor
pushf
push
mov
adc
ficoms
jg
push
push
mov
pop
cltd
xchg
sub
iret
xchg
sti
ds
xchg
sbb
sti
nop
ret
adc
pop
sbb
mov
fwait
pop
gs
push
push
xor
sbbl
hlt
xchg
mov
xchg
pop
xchg
mov
pop
dec
push
mov
push
pop
cmp
std
dec
ds
popf
pop
pop
pop
inc
lret
mov
lret
jge
or
dec
clc
dec
loop
loope
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
add
icebp
stos
iret
or
ret
jno
sahf
push
aas
cltd
pop
test
mov
stc
stc
std
cmp
xor
push
fwait
xorb
or
jmp
lods
cld
xchg
notb
notl
push
cld
sbb
nop
ljmp
xchg
mov
pop
mov
adc
inc
xchg
or
adc
in
hlt
fwait
adc
cmp
pop
xchg
in
adc
mov
mov
lods
lahf
fwait
adc
fidivrs
mov
xchg
cmpsb
xlat
lcall
add
outsl
sub
or
pop
pop
jle
cmp
lock
and
pop
fsubrs
push
adc
inc
sbb
lcall
mov
push
lahf
push
ret
xor
jg
add
das
cld
mov
lds
push
adc
adc
sti
adc
dec
out
leave
xchg
pop
jmp
test
pop
decb
out
jnp
adc
sbb
aas
ds
xor
xchg
sub
pop
je
and
ficomps
negl
sbbl
adc
dec
notl
adc
inc
scas
xor
nop
ja
pop
inc
add
inc
and
sahf
in
xlat
repnz
dec
mov
sbb
xor
xchg
mov
jnp
sbb
lock
xchg
sub
pop
ss
adc
jg
ds
pop
mov
das
pop
push
dec
sbb
shl
repnz
jmp
adc
mov
xchg
mov
push
adc
and
fstl
mov
sbb
fidivl
js
ss
xor
ss
loop
test
mov
je
out
jge
fwait
adc
loop
jnp
and
push
xchg
mov
shll
aaa
scas
sbbl
leave
lea
jecxz
ds
cld
outsb
mov
in
hlt
sbb
test
cmp
jnp
mov
dec
fldl
rclb
push
movsb
or
repnz
aaa
pushf
xchg
cmc
mov
cs
pop
jl
mov
lcall
mov
add
or
inc
dec
cmp
and
sbb
cmp
divb
push
in
jecxz
push
xchg
mov
out
sbb
addb
mov
jg
sti
inc
sub
push
adc
std
fwait
mov
fcmovne
pop
xchg
lock
pop
test
add
pop
in
sti
push
pop
cmp
sbb
fwait
push
xchg
jge
sub
mov
fwait
xlat
fiadds
mov
fldenv
pop
addl
xlat
out
mov
aaa
and
cmp
decb
cli
pop
xchg
cwtl
test
pop
push
addr16
into
adc
hlt
ficoms
jbe
subl
xor
lcall
jnp
pop
dec
adc
add
bound
jle
sbb
cwtl
lret
cmc
pop
sbb
inc
nop
mov
cmp
std
cmp
sbb
push
stc
out
or
or
jns
leave
ss
xchg
test
add
mov
xor
mov
lds
ret
jne
pop
lret
mov
lds
pop
cmp
lods
in
rolb
enter
shlb
ret
in
loope
ds
pop
or
and
xor
cwtl
outsb
imul
js
pop
subb
das
jo
lods
cmp
adc
daa
xor
jno
mov
adc
push
pop
int3
or
pop
adc
neg
ficompl
repnz
or
sahf
shll
je
xorl
mov
add
sub
adc
loope
mov
jecxz
dec
xchg
pop
push
popf
dec
dec
pop
lcall
xchg
push
pop
mov
xchg
adc
push
in
or
popf
cmp
pop
and
xchg
adc
scas
sbb
test
sahf
sbb
cwtl
xchg
lahf
sbb
push
sbb
xchg
pop
mov
and
loope
sbb
fwait
jg
pop
xchg
repz
sbb
inc
push
aas
pop
mov
sub
xchg
inc
jo
jmp
fidivs
mov
in
imul
scas
or
cld
sbb
push
movsl
scas
mov
xchg
rcll
das
je
adc
cs
lahf
clc
leave
fucomi
mov
or
ret
sbb
hlt
test
push
dec
xchg
insl
cmpl
jmp
test
mov
inc
adc
pop
imul
or
ljmp
shll
mov
mov
popf
mov
inc
pop
lods
mov
jo
jbe
dec
pop
push
inc
xchg
or
jae
fstpl
sbb
dec
adc
lahf
or
insl
ja
stos
pushf
rcll
jnp
cmp
andb
inc
mov
jmp
add
sub
jle
mov
push
inc
and
in
xor
lods
shrl
nop
inc
sub
push
push
pop
jmp
jno
jns
push
push
out
mov
mov
lcall
xchg
pop
mov
adc
or
ss
xchg
iret
cmpsl
mov
sbb
pop
fs
fcoml
sub
mov
push
ja
jno
popf
push
or
jo
push
mov
loop
or
cmp
aas
rolb
jbe
cmp
loope
add
and
sbbb
popf
xor
sbb
xlat
test
fistpll
pushf
inc
mov
cmp
out
mov
pop
divb
inc
notb
push
inc
testb
call
push
sti
in
xchg
fldt
out
sub
popf
sbb
xor
push
sbb
xchg
pop
sbb
jg
idiv
or
iret
mov
int3
jnp
fs
sbb
cltd
xor
aaa
xchg
mov
cmp
xor
pop
pop
fadds
sbb
add
jl
or
jecxz
popl
add
xchg
enter
push
xlat
in
out
sbb
inc
andl
cmp
mov
push
mov
xor
mov
mov
nop
lock
jmp
jne
cmp
in
repz
push
call
inc
fiaddl
xlat
cmp
jmp
fwait
add
add
imul
scas
lods
sahf
iret
fidivrs
push
arpl
mov
push
fwait
jg
loop
cmp
repnz
mov
push
push
fsub
cmc
test
mov
and
loope
sbb
xchg
ja
cwtl
lock
cmp
pop
dec
pop
out
fistps
adc
mov
insl
fimull
mov
lahf
or
mov
add
mov
cmc
in
cmp
movsl
or
cmp
jl
xchg
add
sub
adc
push
jo
mov
jno,pn
jle
push
cmp
jg
repnz
roll
cltd
add
xchg
mov
push
fcompl
pop
jo
in
mov
int
jecxz
aad
and
inc
sbb
mov
fsubrl
add
push
scas
mov
lahf
xchg
push
dec
test
addb
inc
adc
out
pop
mull
push
sahf
pusha
iret
mov
movsl
or
adc
sub
sbb
lret
shlb
shll
or
jno
outsb
jo
imul
jne
in
aad
stos
pop
pop
push
inc
fisttpl
subb
pop
jbe
adc
into
jnp
and
cld
cli
or
mov
jge
and
inc
xchg
das
fimull
push
or
cmp
insl
mov
adcb
rcl
mov
inc
dec
clc
aad
xor
ja
add
pop
push
dec
daa
and
insl
jne
mov
jecxz
pushf
pushf
inc
jge
and
daa
xchg
push
mov
adcl
pop
and
sbb
insb
push
pop
and
das
out
hlt
push
xor
das
ljmp
jecxz
pop
mov
ret
jb
mov
popl
mov
mov
jbe
sub
cmp
sub
sbb
fcom
mov
adc
mov
loop
ficomps
rcll
pop
pop
inc
addr16
xchg
add
add
xor
pop
push
cmp
xlat
mov
xchg
cwtl
xchg
jp
push
ficoms
clc
mov
add
cld
or
cmp
fdivs
jno
sti
lcall
outsl
pop
test
lret
push
mov
adc
cltd
and
andl
je
enter
mov
shl
jno
insl
pop
fmull
call
loop
imul
jns
jns
push
add
scas
mov
mov
fldl
pusha
cld
adc
xchg
pop
mov
push
aam
popa
ficompl
mov
outsl
in
pop
pop
sbb
cmp
cmp
aam
es
fbld
or
aad
mov
fbstp
repnz
pop
jno
cwtl
rcrb
pop
cmp
pop
xchg
mov
mov
in
xchg
ret
popf
xchg
popf
push
insl
int3
mov
jno
and
das
lahf
jnp
into
pop
lahf
add
xorl
sbb
aad
push
fiadds
mov
loope
fildll
mov
pop
xor
xchg
push
out
pop
mov
push
lahf
mov
mov
push
fidivrs
mov
shll
mov
add
daa
add
rcr
fmull
cwtl
je
xor
pop
loopne
jns
dec
imulb
mov
or
sbb
mov
xchg
aad
or
hlt
aam
push
xchg
sub
mov
xchg
sub
push
sbb
add
jp
test
pop
mov
inc
xlat
jnp
dec
jge
cmp
mov
cwtl
pop
dec
in
and
andb
pop
sbb
mov
loope
adc
mov
daa
cmp
lcall
pop
adc
rcl
hlt
adc
cmp
mov
paddq
daa
jo
add
imull
sub
lret
xchg
std
mov
cld
pop
aad
xchg
push
jl
xchg
cmc
lahf
rcr
sub
add
sbb
sub
std
add
jae
in
cmc
sbb
out
aas
jno
cltd
pop
push
xchg
cmp
mov
xchg
adc
cmp
jp
cmp
das
aas
mov
stos
mov
popa
dec
pop
repnz
je
mov
notb
mov
xlat
xchg
sahf
fwait
jo
loop
mov
sbb
jno
jns
sbb
jno
add
pop
mov
sahf
mov
sbb
std
cli
sbb
xlat
xlat
enter
mov
es
loope
mov
dec
fldl2t
sti
stc
jle
jns
jns
jge
fstpl
insb
adc
mov
test
or
sbb
jg
add
xchg
scas
lds
arpl
arpl
mov
pop
pslld
movsb
sbb
mov
das
add
incl
loop
std
mov
xor
popf
sbb
fdiv
cltd
jle
cmpsl
pop
cmp
bound
int3
popf
cs
pop
push
sub
push
or
xor
or
push
rcrl
ss
or
stc
jle
sub
sbb
mov
sbb
jg
mov
sub
fmuls
pop
std
push
sbb
cmp
notb
lock
fiadds
out
mov
mov
fidivrs
scas
ljmp
sub
mov
popf
cltd
outsl
in
sbb
decl
fwait
leave
lcall
inc
pop
adc
leave
fcoml
push
ret
imul
xchg
fistpl
pusha
pop
pop
xlat
xchg
xchg
pop
xor
jno
sahf
enter
mov
jecxz
iret
dec
shll
lcall
stos
shll
stos
out
jbe
push
cltd
pop
jle
repnz
mov
je
mov
xor
cmp
sti
mov
out
je
fisttps
enter
push
fdivrp
xchg
fistpll
scas
pop
not
pop
add
cmp
sbb
xchg
icebp
xor
fidivs
imul
pop
xchg
dec
sbb
sahf
mov
cmp
pop
scas
xor
int
loope
pop
xchg
push
add
and
std
sahf
aas
repnz
sbb
in
xor
test
sar
ss
jbe
lods
testl
pusha
sub
push
or
andl
mov
pop
xorb
stc
aas
mov
jp
out
fnstsw
lods
xor
mov
cltd
jmp
jne
xlat
out
ss
mov
mov
rcll
mov
and
jnp
and
cmp
cmpsb
outsb
push
repnz
js
neg
out
into
mov
pop
incb
jno
test
dec
sbb
jbe
push
pop
lcall
cltd
add
pop
and
xchg
lret
fbld
pop
mov
jne
cmp
sbb
pop
iret
pushf
sub
hlt
push
cmp
or
xor
cwtl
imul
sti
pop
push
lahf
pop
sbb
add
sbb
sbb
sar
outsb
cmp
push
clc
mov
fadds
add
mov
cmp
lahf
cwtl
push
cmp
mov
js
sub
jb
jg
xlat
imul
adc
imul
lahf
out
mov
sub
pushf
xchg
push
push
ret
jbe
stc
mov
sbb
fwait
xor
clc
sbbl
popf
jae
xchg
jo
int3
fbld
scas
mov
out
outsb
sarl
xchg
enter
inc
bound
xchg
xlat
inc
fwait
jno
xchg
fistpl
cmp
pop
push
xchg
jbe
xor
mov
push
gs
shrd
adc
cmp
iret
lahf
je
leave
imul
push
mov
pop
sbb
stc
sub
mov
test
sbbb
and
cmp
jmp
popf
jmp
jmp
sub
and
test
loop
call
sbb
lahf
call
add
test
and
int
lock
pop
enter
xor
out
push
jo
xchg
sub
lret
dec
push
xchg
adc
push
jge
pusha
xchg
add
push
repz
fdivrs
fiadds
test
add
xlat
push
pop
incl
add
mov
fsubs
xchg
sub
cld
rorb
sub
std
addr16
pop
stos
icebp
adc
pop
loope
leave
popf
xchg
sbb
stos
lds
stos
addr16
pop
loopne
sub
into
popa
or
cld
mov
inc
xchg
push
or
negl
jp
inc
mov
jecxz
jg
cltd
xchg
dec
xchg
cli
repz
adc
fistpll
dec
cmp
lods
mov
sbb
mov
push
pop
sti
mov
dec
xlat
cltd
lret
dec
popf
mov
cs
adc
cmp
inc
daa
push
xchg
fisttps
xchg
and
push
je
xchg
xchg
sbb
inc
std
jne
nop
xor
xchg
bnd
fcomps
mov
xor
rclb
cld
arpl
sbb
in
or
and
lahf
cmp
adc
daa
sti
sbb
mov
jne
or
mov
xchg
mov
or
jae
xchg
nop
sub
ss
cwtl
mov
add
pop
pop
push
sahf
ss
bound
cmpsb
int3
dec
push
cmp
dec
push
cmp
aas
mov
pop
pop
cmp
cmpsl
pushf
daa
test
cwtl
mov
xchg
lahf
scas
mov
out
pushf
xor
sbb
idivl
fsubrp
sbb
lcall
daa
loop
pushf
dec
adc
sbb
mov
fldcw
ficomps
jb
pop
xor
pop
push
xchg
aaa
jbe
mov
push
into
pop
nop
or
push
pop
sahf
cmp
pop
subl
andl
es
jbe
jno
iret
aad
xchg
push
sub
push
cmp
sahf
sbb
and
push
push
sbb
push
fstpl
push
lcall
pusha
arpl
scas
mov
sub
xchg
rolb
mov
subb
pushf
xor
mov
hlt
aas
ret
scas
or
movb
ficoms
out
sbbb
push
jp
add
lock
aas
cli
sahf
xchg
add
ss
fdiv
cmpsl
hlt
inc
xchg
push
ds
clc
xorb
loop
test
test
test
cmp
rcrb
push
push
repnz
iret
cld
mov
insb
mov
cmp
inc
lock
push
popf
icebp
sbb
pop
push
pop
ja
mov
pop
push
mov
push
notl
movsb
push
mov
in
mov
int
cltd
xor
fildl
inc
xor
call
or
aaa
out
fstl
add
mov
sbb
into
fcmovbe
popf
and
leave
mov
loop
es
ror
orl
outsl
lahf
and
test
pusha
into
mov
clc
mov
xchg
fistpll
xchg
lahf
pushl
outsb
push
pop
hlt
jle
mov
outsb
popa
pop
repnz
popf
das
cmp
inc
subb
mov
fildll
nop
pop
scas
pop
sbb
mov
ss
push
cmpsl
or
idiv
cmc
jae
cmp
pop
mov
pop
mov
push
add
jo
out
fbstp
push
xor
test
or
hlt
push
cmp
int
in
xor
mov
ficomps
lahf
pop
sub
int
or
lcall
insl
hlt
mov
xorb
sub
sbb
sbb
xchg
adc
ficoml
cmp
popf
cmpsl
jge
data16
mov
jbe
push
fnstenv
inc
jno
movsl
sbb
xchg
add
outsl
jo
lret
mov
push
lock
mov
pop
mov
loop
sahf
pop
pop
stos
fsubr
popf
push
jg
mov
ds
outsb
push
icebp
jle
pop
icebp
jle
adc
ljmp
push
cmp
pop
rcrb
and
dec
sbb
xorl
push
mov
into
xchg
outsb
pop
fsubs
mov
shlb
sbb
filds
mov
sub
or
push
push
add
xchg
xlat
jno
mov
fiaddl
dec
sbb
push
jmp
sub
std
mov
push
js,pn
inc
mov
mov
enter
or
xchg
pop
jle
xchg
push
fsubl
mov
test
test
mov
ds
imul
popf
test
lret
sbb
xchg
lods
cmc
and
mov
push
mov
sbb
push
out
or
inc
xchg
push
mov
sbb
sbb
or
jge
pop
jno
cld
or
xchg
jne
sarb
lahf
outsb
mov
stos
adc
add
mov
into
inc
mov
stos
jno
outsl
outsb
fbstp
adc
xor
push
dec
push
popa
xor
pop
ss
dec
sbb
and
xor
add
ss
lods
lahf
xlat
fstpl
jmp
int3
mov
mov
pop
jne
push
popf
jo
lahf
outsl
mov
cmp
test
popf
push
jo
jbe
cltd
sub
subb
outsl
mov
fwait
sub
and
std
jno
pop
jo
test
mov
or
pop
loope
and
insl
xchg
jne
ljmp
sbb
sbb
lock
or
daa
outsl
xchg
xor
fisttpl
push
xchg
push
lds
mov
sti
or
pushl
push
hlt
mov
jnp
sbb
popf
jae
jmp
daa
inc
loopne
sar
or
jno
xor
jne
jle
movsl
cmpb
add
rclb
dec
push
pop
js
jb
fsubrp
lock
movsb
dec
lcall
ja
in
ret
lahf
fstpl
sbb
mov
mov
in
loopne
ds
test
add
jb
test
pop
inc
stos
mov
in
lret
sbb
stos
out
adcb
repz
cmp
mov
mov
in
mov
xchg
push
lahf
rcrl
cmpsb
fildl
sub
cmpsl
mov
pop
adc
ja
lret
add
outsl
nop
shl
adc
popf
mov
popf
daa
cld
xchg
sbb
jmp
xchg
pop
scas
outsb
call
pushf
outsb
cmp
cltd
negb
pop
or
jns
mov
pop
loopne
lret
pop
sub
lahf
mov
cmp
push
add
jns
cmp
je
cmp
pop
movsl
cmpsb
movb
hlt
pop
ficoms
rorl
outsl
shr
add
fdivrl
adc
pop
aam
outsl
jmp
lea
pop
inc
mov
lret
add
insl
in
out
xor
jle
inc
xchg
mov
inc
xchg
sti
jno
dec
xchg
xchg
adc
sbb
imul
outsl
xchg
cmp
jmp
ss
xchg
sahf
lods
xchg
cltd
mov
inc
xlat
adc
sarl
mov
jge
adc
sub
sub
mov
mov
mov
stos
lods
xchg
nop
mov
sti
push
cwtl
lock
sahf
cwtl
das
mov
pop
xchg
mov
or
std
mov
test
cmpsl
add
lea
ss
pop
add
cs
mov
insl
loopne
mov
pushf
push
sbb
jno
mov
push
sarb
push
inc
data16
mov
sbb
mov
cmp
dec
adc
cmp
lcall
roll
jnp
adc
mov
mov
cmp
xchg
push
sbb
cmpxchg
mov
ss
mov
aad
jae
cmp
flds
out
inc
loopne
push
ret
out
aas
mov
mov
hlt
outsl
sbb
push
sbb
rcr
jno
xor
mov
cltd
sub
or
pop
xor
dec
xor
out
sahf
arpl
pop
out
pop
popf
fistps
es
mov
movsl
pop
fsubs
push
in
test
gs
nop
mov
and
icebp
push
jp
lods
imul
into
mov
mov
xchg
dec
sbb
add
inc
nopl
addb
cmp
jae
lds
mov
lcall
pop
add
mov
push
std
jmp
and
push
pushf
fistps
lahf
sbb
test
mov
mov
jmp
inc
popf
inc
pop
rcrl
mov
lahf
xor
adc
push
insb
mov
push
sbb
inc
sbb
pop
xchg
xchg
lcall
fcmovu
leave
xor
test
not
dec
xor
add
dec
push
adc
mov
push
jno
lods
sbb
cmp
lods
adc
cli
mov
leave
inc
push
jne
popa
fwait
enter
std
mov
xor
dec
incb
push
and
inc
out
aaa
repnz
adc
lods
and
adc
xor
xor
push
adc
nop
mov
mov
mov
and
scas
sbb
adc
push
iret
imul
sub
cmpsl
fidivrs
in
std
daa
test
xchg
sbb
jne
mov
cmp
fsubl
lods
pop
subb
push
xchg
mov
xchg
xor
sbb
mov
fidivl
sbb
push
mov
and
push
sahf
xchg
pop
popf
and
push
mov
jbe
xorb
sahf
mov
or
mov
nop
mov
mov
movsl
sbb
outsb
or
fstpt
pop
push
xchg
sbb
lea
sbb
dec
dec
idivl
or
lahf
cmp
sub
enter
jge
pop
fcoml
loope
sbb
xchg
data16
ret
insb
pop
nop
out
xchg
adc
xor
aaa
lahf
popf
daa
lahf
and
mov
or
stos
addl
adc
iret
adc
mov
push
into
testb
mov
out
xlat
cwtl
xlat
pop
pop
popf
insl
out
add
inc
cmpsl
adc
lret
mov
jne
mov
pop
pusha
cpuid
cli
mov
sbb
xchg
sbb
and
jno
mov
scas
or
jmp
insb
mov
jnp
leave
popf
push
xchg
rorl
pop
out
sub
mov
or
xchg
fwait
jne
jg
shl
and
cmp
fistpl
loope
ror
ret
jno
jg
jl
cmpsl
cmovg
mov
loop
adc
movl
push
push
cmp
dec
sahf
mov
adc
mov
xor
sub
or
jg
xchg
sub
jmp
cmp
fisttpl
daa
inc
cmpl
adc
pop
add
or
cwtl
xchg
test
popa
pop
xchg
in
sbb
inc
push
ja
lock
mov
inc
mov
push
lds
mov
inc
and
outsb
ljmp
sahf
nop
addl
fwait
mov
call
or
call
out
fidivs
cmp
sbb
faddl
lcall
cld
dec
cmp
fucomp
mov
lea
mov
adc
push
jecxz
popl
sbb
imul
pop
popf
repz
mov
fwait
and
push
push
dec
shlb
int
inc
fldenv
lcall
inc
mov
js
jbe
int
jge
xor
notb
push
aad
jle
xchg
aad
adc
mov
or
adc
rorb
sbb
push
repnz
out
mov
sbb
xchg
aas
jmp
pop
in
cld
jns
or
outsb
sbb
pop
in
pop
mov
inc
push
jge
pop
push
test
mov
cmp
push
negl
lea
pop
xchg
int
adc
and
popf
mov
xchg
ds
jne
xor
mov
xchg
dec
pop
mov
push
lea
test
or
or
xchg
sbb
fcmovu
mov
loopne
mov
jne
fidivrl
pusha
mov
cmp
jl
pusha
jge
into
xchg
jl
loop
mov
ret
jb
ret
fsts
xchg
aad
jae
mov
mov
xchg
push
repnz
sub
ljmp
repz
lahf
and
std
scas
sbb
mov
xchg
mov
mov
mov
fisubrs
xchg
int
popf
in
test
cmp
adc
sti
push
divl
xchg
out
pop
mov
push
lds
mov
outsl
adc
mov
push
inc
ret
out
sub
popf
arpl
sarb
cmpsb
mov
jge
push
negl
xchg
aaa
dec
lods
cmp
mov
pop
push
push
fnstsw
rcrl
leave
ffreep
xor
jle
pop
test
jp
sub
add
lahf
ss
lcall
jno
scas
addr16
ficompl
xor
dec
adc
push
push
ss
push
aam
sbb
mov
cli
push
sbb
ss
int3
jns
inc
jno
mov
mov
andl
push
aad
test
cwtl
cmp
push
push
mov
xor
add
add
push
je
xlat
add
in
or
rorl
or
push
push
ret
mulb
pop
pop
xchg
mov
push
fstpt
cmp
aad
fidivs
jle
dec
dec
push
sti
lahf
jno
rorb
unpckhps
ret
mov
adc
pop
iret
xchg
scas
push
jg
mov
fiadds
add
mov
mov
mov
fisttpll
mov
push
std
xor
scas
faddl
sti
sub
daa
add
sbb
push
jmp
gs
into
fcomip
les
loopne
sbb
ja
mov
push
cmpsl
xlat
and
sti
dec
cmpsb
rcr
pop
jne
pop
fcoms
xchg
add
sbb
sar
sub
lods
pop
sti
imul
sarb
xchg
xor
push
mov
sub
lods
in
push
nop
mov
mov
mov
rorb
sbb
mov
mov
push
imul
fnstenv
jo
xor
mov
jns
cmp
mov
jg
xor
mov
push
pop
cmp
pop
jmp
shlb
imul
pop
and
adc
mov
cwtl
jp
cld
cs
pop
sbb
cmc
cmp
push
in
test
popf
stos
cmp
int
inc
ret
in
notl
jl
mov
push
jno
jp
push
out
aas
ja
sub
pop
pushl
jo
mov
shrb
stos
gs
sub
stc
scas
pop
fcmovbe
push
push
mov
jno
xor
sti
test
pop
addb
leave
sub
add
movhps
loope
sbb
or
cmpsl
mov
in
xchg
add
adc
ljmp
pop
mov
push
mov
movsl
add
jne
fcompl
or
scas
add
in
aaa
inc
mov
das
xchg
jns
dec
shll
pop
out
mov
iret
out
mov
jle
int
and
test
pushf
sbb
and
push
sub
fwait
sahf
sti
xchg
push
sbb
push
xchg
xchg
fstps
xlat
sti
popf
in
xorb
fstps
in
mov
mov
xchg
pusha
test
pop
cmp
pop
lret
leave
lea
fildl
rorl
loop
pop
xchg
xchg
jnp
je
ss
fisttpll
popf
stc
pushf
mov
mov
aam
xor
jno
pop
mov
adc
pop
fcompl
bound
adcl
movsb
xchg
xchg
lcall
sbb
xchg
aam
sbb
xchg
mov
xchg
or
mov
testb
mov
mov
setge
jg
mov
popf
xchg
cld
add
cli
mov
in
fiaddl
aas
ds
cmp
outsl
xchg
aaa
cmp
cmp
pop
fwait
js
push
in
mov
mov
mov
mov
arpl
push
inc
fsts
and
add
mov
and
push
mov
pop
call
divl
mov
fwait
xor
inc
rclb
or
xchg
xor
adc
jle
push
sbb
or
adc
mov
mov
ds
daa
pop
gs
mov
mov
cld
loopne
cmc
pop
test
fsubrs
dec
xchg
add
ret
or
push
mov
mov
leave
jno
shl
mov
jb
addr16
nop
pop
add
addl
sbb
push
mov
loopne
lds
rorb
ljmp
hlt
mov
out
lods
loope
hlt
sahf
int
push
adc
pop
insb
repz
lahf
movsb
subl
fldl
inc
imul
lods
cmp
push
pop
mov
movsb
nop
into
mov
mov
cs
scas
inc
gs
dec
fisttps
push
imul
ficoml
aad
stc
int3
in
sbb
mov
incb
icebp
cltd
repz
mov
test
icebp
add
lahf
cmpb
mov
mov
jno
mov
mov
aaa
adc
jbe
sbbb
add
push
stc
xchg
pop
mov
add
outsl
cwtl
cmpsb
mov
add
sbb
push
mov
jecxz
sbb
jl
add
imul
test
add
pop
repnz
repz
jno
jl
in
cmp
fnsave
or
ja
jo
lcall
inc
stos
fcomps
movl
dec
add
jge
mov
inc
add
dec
cmp
lahf
lock
test
int3
inc
mov
addb
pop
pop
mov
jno
xor
xchg
xor
fisubrl
mov
mov
js
xor
add
mov
jecxz
je
leave
cmp
cmp
rcrl
stc
lahf
jge
leave
cmp
enter
or
add
in
out
mov
push
sti
imul
sbb
aas
fcmovu
sub
in
xchg
jo
xchg
scas
fnstenv
push
mov
push
pop
out
mov
mov
aas
mov
mov
jmp
nop
pop
popf
fcoms
sbb
imul
fiaddl
mov
xchg
and
fmull
inc
cmp
in
xchg
addr16
xor
and
mov
lahf
add
out
std
xchg
out
loope
mov
sub
adc
dec
push
mov
popf
mov
mov
jge
mov
add
pusha
sarl
sub
cmp
sbb
dec
pop
test
xlat
in
in
xor
dec
cld
shlb
xchg
pop
cwtl
dec
jne
xchg
lods
fnstsw
or
inc
push
mov
sbb
xlat
mov
cld
adcl
mov
dec
fnstsw
loopne
xchg
dec
std
push
mov
xorl
in
lret
xchg
jbe
and
mov
xchg
add
fwait
int3
popf
mov
pop
mov
fwait
push
cmp
out
jno
sbb
in
xchg
xchg
fprem1
mov
lahf
fwait
hlt
pop
ss
jp
jne
mov
mov
adc
insl
push
sbb
into
xchg
sahf
repnz
push
out
mov
mov
lock
push
hlt
out
pusha
adc
popa
scas
cmp
sbb
hlt
outsb
mov
cmp
xchg
add
rorb
mov
add
ret
je
pop
addr16
nop
ja
or
dec
pop
outsb
jg
pop
aaa
divb
movsb
pop
pop
pop
jecxz
mov
mov
push
insb
iret
insb
in
fbld
mov
and
icebp
fstps
faddl
shlb
and
pop
push
sub
fldl
push
popf
adc
lods
push
fisttpll
mov
and
jo
and
shll
fwait
outsb
cwtl
mov
mov
adc
dec
push
sbb
jg
imul
pop
sub
ret
add
jo
std
sbb
test
std
leave
lods
or
or
mov
jecxz
nop
pop
xchg
dec
jb
adc
push
hlt
push
inc
xchg
popf
sub
add
cmp
xor
fwait
jbe
push
int
xor
xchg
loopne
mov
xor
call
pop
orl
sub
xchg
mov
pop
adcb
push
seta
scas
mov
incl
pop
mov
imul
addl
or
pop
test
and
and
xchg
sub
test
ficompl
dec
sub
add
cmp
push
add
and
mov
ss
add
pop
xchg
xor
lods
cwtl
pusha
mov
arpl
inc
and
xchg
mov
pop
xchg
jo
nop
outsl
cli
jno
sbb
mov
mov
mov
xlat
sbb
mov
add
sti
test
mov
ror
push
cld
xchg
xor
mov
scas
xor
cs
out
out
cli
call
xchg
cwtl
mov
orb
add
push
mov
daa
inc
sbbb
sub
jp
add
inc
mov
pop
mov
push
lcall
outsl
mov
out
roll
push
push
pop
mov
sti
add
mov
subl
sarl
mov
jne
insb
repz
sbb
and
inc
sbb
stos
mov
mov
jmp
int
xor
mov
mov
fidivrs
push
push
or
lahf
lret
pop
clc
fwait
xchg
add
or
jae
mov
fwait
lret
mov
arpl
incl
mov
rcll
enter
xchg
cli
push
enter
popf
lea
lahf
jge
scas
mov
jge
pusha
pop
fsts
scas
mov
jge
aam
pop
movsb
test
jg
movsl
loopne
xor
push
pop
xchg
fiaddl
jle
les
dec
adc
leave
lds
push
sarl
into
sbb
std
mov
sub
xor
insl
icebp
adcb
lret
push
and
sarb
jl
loopne
xchg
movsl
outsl
pop
addr16
push
push
paddb
mov
sahf
iret
jnp
lahf
lds
jge
push
std
ss
inc
notl
ret
sub
das
pop
mov
mov
loop
mov
lock
lds
push
std
jg
xchg
jle
icebp
dec
movsb
mov
loop
adc
mov
xor
pop
xchg
popa
cmp
hlt
cmp
outsl
ret
outsb
sete
mov
xor
popf
xchg
mov
cmp
push
sti
xchg
xchg
mov
lea
jmp
stos
cmp
xor
or
sbb
sbb
mov
imul
mov
repnz
push
add
mov
cltd
cmp
nop
dec
push
cmp
dec
jo
jns
lcall
cld
mov
adc
loope
jne,pn
mov
push
mov
add
mov
mov
fnstsw
dec
cmp
xor
push
cwtl
jg
data16
femms
xchg
cmpsl
loop
sbb
orb
mov
in
int
jno
pop
push
xchg
cmpsb
mov
jnp
push
ja
pop
mov
pop
push
sub
mov
or
hlt
movsb
cmp
cmc
mov
jle
ljmp
jge
push
lahf
daa
push
fwait
pop
subl
je
and
add
push
lahf
push
xor
mov
ja
or
sbb
test
or
iret
xchg
out
or
adc
mov
jge
add
seta
lea
popf
and
pop
lea
paddsw
ds
sbb
push
fildll
sub
inc
xor
adc
mov
mov
xlat
mov
out
xchg
jbe
add
sub
into
out
aas
add
out
outsl
xor
idivl
pop
mov
mov
push
and
cli
sbb
mov
xor
pop
adc
sbb
shll
inc
ja
xorb
pop
mov
fistps
adcl
in
fwait
jb
popf
in
lahf
fstpt
jbe
loop
cmp
ja
xor
sub
adc
adc
and
pop
psrad
cmp
cmc
ud0
xchg
dec
lods
push
sbb
jge
loop
sbb
add
mov
mov
and
loop
push
aas
sbb
inc
pop
ud1
loop
dec
lcall
push
pop
sti
xchg
xchg
mov
mov
push
adc
dec
test
loop
jmp
mov
pop
xchg
dec
loop
scas
jge
pushf
xchg
popf
pop
in
pop
pop
or
out
sarl
jl
sbb
pop
out
xchg
ret
dec
inc
sahf
xchg
pop
cli
je
ss
cwtl
push
adc
fistpl
ja
adc
iret
pop
lret
xchg
xchg
mov
fidivrs
lea
pushf
pushf
loop
fwait
cmp
mov
loop
jecxz
cmp
jl
adc
or
lods
fimuls
push
jge
push
ficoms
stc
rcrl
adcb
sbb
mov
pop
and
push
jns
cli
xor
ret
cltd
stc
scas
xor
jb
cmp
hlt
adc
pushf
fldenv
push
sbb
xlat
insb
mov
inc
mov
mov
test
outsl
aam
loopne
outsb
xchg
xchg
add
insl
cmp
add
fnstenv
nop
ljmp
in
setnp
je
shl
cmp
lret
cmp
xchg
sbb
mov
push
lretw
sub
imul
dec
dec
mov
sti
adc
inc
xchg
scas
sub
sahf
adc
adc
dec
shll
fsts
inc
in
imul
or
and
pop
jle
jp
test
js
pop
int
insl
dec
sub
insl
adc
mov
shlb
mov
and
je
mov
jno
cmp
inc
mov
loope
sub
mov
mov
in
jbe
addr16
shrl
add
out
or
loop
mov
lods
ret
mov
loop
push
push
mov
fistpll
js
push
pop
xlat
xor
and
insb
xchg
outsb
rcll
xlat
xchg
sub
fisubrl
and
cmp
inc
repz
sub
xchg
fsubrl
insb
mov
iret
xchg
add
data16
fstp
adc
mov
mov
test
add
fists
je
add
pop
cs
fwait
gs
mov
or
lret
add
xor
out
or
cmp
push
daa
cmp
cmp
jne
mov
cmp
push
pop
das
mov
in
decl
std
inc
adc
cltd
cwtl
xchg
pushw
cmp
pop
mov
in
loop
push
repnz
sti
movsl
std
in
fsubp
lock
rcrb
xchg
sub
mov
push
in
mov
sub
pop
imul
push
mov
movq
popl
and
test
jmp
cmp
dec
push
sbb
ss
mov
rclb
push
ljmp
dec
cwtl
ret
fistps
outsb
add
loop
repnz
cli
lea
in
cmp
into
sub
xor
shlb
scas
leave
sub
andl
pop
pop
test
jg
sti
mov
ret
mov
fidivrs
adc
sbb
scas
loop
ljmp
pop
scas
jl
add
dec
pop
sub
cmp
nop
aam
xchg
sbb
xchg
and
sub
test
pop
adc
xchg
ror
mov
sub
out
push
pop
inc
addl
aaa
testl
or
mov
push
push
mov
push
jl
lcall
push
mov
add
add
ds
add
int3
xchg
mov
into
ret
mov
pop
rclb
xor
shll
push
test
pop
mov
popf
xlat
movsl
and
sbb
lahf
dec
mov
push
loop
push
std
mov
outsl
mov
fscale
stc
aam
sub
cwtl
pop
outsb
mov
xchg
lds
mov
mov
pushf
dec
sbb
lea
push
mov
push
adc
imull
mov
xchg
lds
mov
movsb
xchg
fcmovnu
pop
into
adc
sbbl
pop
das
cmc
mov
rcrl
lahf
xor
sarb
lods
xchg
lahf
loope
rclb
and
sbb
mov
xor
pop
das
movsl
iret
sbb
inc
sbb
lahf
data16
sbb
push
mov
inc
or
lret
push
xchg
shrl
sbb
pop
setno
std
enter
cmp
pop
sti
lret
xchg
cmp
outsb
aas
loope
ja
fstpt
jnp
lods
push
push
ret
std
push
ds
xchg
pop
hlt
dec
or
xchg
pop
mov
sbb
cmp
decb
xchg
adc
mov
outsb
adc
mov
cmp
cmp
cmp
lret
jmp
fmul
scas
sbb
mov
frstor
jge
pop
sti
clc
leave
cmpsl
adc
lret
mov
push
jge
mov
mov
stos
xchg
xchg
add
push
push
pusha
sbb
mov
jle
sbb
icebp
xor
jmp
dec
adc
incl
aam
sub
fisubrl
mov
sbb
mov
sub
push
cmp
jo
rclb
sahf
push
andl
adc
sbb
aaa
pushf
xchg
mov
repnz
xor
ja
lcall
add
jo
cmp
push
dec
mov
mov
pop
ds
push
popf
aaa
or
inc
ja
out
adcb
clc
add
push
imul
out
jno
mov
jnp
mov
out
inc
jo
jne
push
dec
mov
or
pop
ret
pop
outsl
out
cmp
add
inc
xchg
mov
sti
sbb
xchg
cltd
rcrl
outsb
lods
cli
xor
push
aaa
add
push
stos
mov
jno
mov
jmp
shl
push
in
es
imul
adc
pop
adc
icebp
sbb
cmpsl
sub
add
outsl
mov
pop
xchg
jle
aas
setge
pop
stos
sbb
aam
jmp
xchg
pop
scas
inc
insl
jecxz
dec
in
fwait
sbb
xor
push
mov
es
push
fdivrs
and
popf
mov
xchg
sub
xor
mov
sub
jbe
lock
push
cli
sub
add
dec
dec
fxch
inc
sbb
or
and
cmp
xor
jmp
xchg
or
insl
add
inc
outsb
pop
mov
ds
or
nop
scas
fisttpl
and
xor
outsl
stc
outsb
insl
imul
test
fisubrl
xchg
jnp
xchg
popa
mov
push
dec
add
push
mov
sbb
pop
mov
nopl
aaa
pushf
sbb
push
jbe
ret
test
or
xlat
mov
out
mov
std
xchg
repnz
gs
xchg
and
sbb
xchg
ljmp
cmp
stos
jl
mov
lret
jp
movsb
lcall
fnsave
imul
enter
stos
test
orb
ret
sbb
mov
xlat
cltd
push
jl
mov
fistpl
mov
jl
scas
cmpsb
pop
aam
mov
jno
mov
test
xor
mov
rorl
test
jl
push
je
cmc
push
push
lret
sub
xchg
sbb
je
aam
out
ret
pop
push
out
and
and
or
or
sub
aaa
test
ds
inc
jecxz
and
in
push
add
popf
lcall
cmp
cmpsl
addr16
in
inc
sub
xchg
out
sub
fwait
ss
or
xor
add
or
orb
xor
cmp
sbb
adc
ret
movaps
lret
or
fucomi
cmpsb
dec
push
sub
in
lea
mov
lods
incl
cmp
jle
das
clc
pusha
or
add
jmp
scas
out
push
dec
test
js
sbb
out
iret
lret
aaa
lahf
push
popf
rcll
lret
sti
cmp
dec
add
lret
jno
sbb
adc
or
xchg
fwait
in
and
cmp
adc
and
mov
xor
std
rol
fsubr
cmp
jge
fldl2t
or
xlat
das
lret
and
mov
adc
int3
jnp
cmp
fs
or
adc
jno
push
inc
push
popf
pop
xchg
mov
cli
xor
jp
inc
subl
xchg
cmp
pop
popf
roll
clc
cld
cmp
cmp
push
cli
and
xor
inc
jb
scas
test
push
xchg
pop
popf
into
or
call
les
jb
gs
jp
int
push
jmp
jg
mov
and
cmpsb
ret
push
data16
into
jo
loop
clc
jno
out
push
add
cmp
adc
pop
dec
mov
xchg
xor
je
repnz
jl
into
adc
insl
jg
aaa
pop
jno
das
and
mov
xor
push
lock
jne
mov
pop
mov
fdivr
imul
cmpl
push
or
and
test
rcrb
jge
ror
push
gs
arpl
pusha
insl
loopne
cmp
or
mov
jg
or
push
dec
ja
pop
out
add
cltd
mov
xchg
and
push
cmp
rcll
lods
stc
or
fwait
cmp
adc
ss
xchg
push
pop
dec
push
adc
pop
pushl
into
aam
mov
cmpsl
pop
sbb
push
mov
insb
mov
orb
inc
add
and
insl
or
mov
fbstp
and
sbb
decb
adcb
jns
cld
cmp
xor
cli
sbb
nop
mov
jnp
lahf
push
xchg
pop
push
testb
xchg
mov
js
and
mov
stc
icebp
push
inc
cmp
std
jno
rcrl
xorb
xchg
adc
jmp
push
arpl
mov
push
lret
xchg
add
ds
pop
cmc
sar
cmpsb
ds
xchg
shll
sbb
push
movsb
or
cli
icebp
dec
enter
xlat
mov
mov
movsb
add
push
mov
orl
lret
lret
xor
ljmp
jmp
jmp
sub
push
pop
dec
fdivrl
xor
and
sbb
mov
or
xchg
inc
imul
xchg
dec
pop
jne
imul
mov
adc
dec
dec
sbb
inc
sub
adc
dec
les
movsl
addr16
cmp
ficomps
loopne
xchg
xor
sub
xchg
mov
out
mov
lret
in
mov
cltd
rol
aas
notl
push
push
out
jno
addr16
dec
clc
cmp
divb
addb
push
xchg
test
repnz
pop
sbb
lret
and
xchg
push
test
xchg
leave
add
lods
xchg
nop
xchg
outsl
std
push
sti
pop
std
subb
pop
mov
jno
adc
jnp
ss
mov
popf
adc
fstl
lret
pusha
xchg
mov
out
push
ficomps
sbb
xchg
add
out
outsb
dec
inc
adc
sbb
int
rol
mov
nop
sub
test
dec
or
sahf
xchg
pop
stos
imul
fs
xchg
pop
aam
push
adc
jp
ds
push
jle
sbb
jmp
sahf
aaa
pop
pop
in
push
push
mov
popf
loop
jnp
xchg
lahf
lcall
sbb
popf
fnsave
std
in
popf
fs
aam
mov
adc
cwtl
mov
cmp
adc
or
add
mov
inc
popf
rol
push
aas
in
pop
mov
push
mov
pop
mov
pushf
sub
ds
bound
dec
lret
fucomp
xlat
hlt
xchg
sbb
dec
in
out
sub
popf
into
shrl
fdecstp
cli
mov
repnz
shll
or
cltd
or
pusha
pushf
je
inc
int
lods
cmp
xor
out
mov
cmp
mov
and
mov
scas
lock
aad
push
add
push
loope
nop
mov
imul
nop
into
or
lods
adc
xchg
sub
dec
mov
fcomp
xlat
cmp
pushl
lret
jmp
xchg
mov
ja
in
gs
lods
fwait
mov
sbb
push
outsb
sahf
rorb
shl
xchg
adc
add
adc
dec
push
mov
rorl
push
movsl
fnsave
xchg
pop
loopw
push
test
cld
jge
or
int
ja
scas
lea
push
test
aam
pop
and
sbb
pop
xchg
int3
leave
mov
or
lret
orl
je
aad
mov
mov
pushf
fimull
out
aam
xchg
lahf
mov
fnstcw
scas
mov
jp
popf
lret
mov
sbbl
icebp
mov
lahf
xlat
call
cld
loope
pop
mov
sahf
mov
loope
andl
stc
loopne
psubd
aam
cltd
jae
in
insb
movsb
or
mov
punpckhwd
inc
cli
std
scas
adc
and
leave
gs
enter
push
or
mov
push
imul
inc
mov
or
in
add
mov
or
jg
in
and
out
mov
int
mov
pushf
mov
mov
cwtl
adc
sbb
ja
push
test
addl
sub
push
lret
xor
divl
cmp
mov
fistps
insl
adc
xchg
mov
nop
lock
xchg
xchg
sbb
push
xchg
pop
inc
add
push
adc
push
testl
sub
mov
adc
push
cmpsb
xor
sbb
sbb
lock
or
ja
push
and
std
fcomps
aas
cld
push
and
cmc
sub
ret
jg
inc
and
fwait
xor
mov
mov
fwait
outsb
lahf
out
and
out
out
inc
adc
pop
out
out
fisttps
inc
scas
mov
mov
xchg
jne
bound
sbb
sub
insl
lahf
adc
inc
adc
mov
ds
test
push
popf
dec
adc
outsl
dec
into
scas
adc
pop
sahf
xchg
xlat
sbb
jae
int
fst
movsb
pushf
pushf
add
mov
popf
out
fbld
call
jmp
sbb
popa
add
mov
pop
mov
pop
nop
ret
js
sbb
add
sub
inc
fbld
je
idivl
leave
pop
pushf
mov
xchg
adc
lahf
lret
jo
test
shrb
jae
fidivrs
fistpll
jl
pop
out
or
sub
pushf
ss
xchg
rclb
xchg
and
mov
rcr
outsb
push
jmp
adc
je
or
nop
mov
out
pop
xlat
xchg
outsl
jo
xor
je
adc
xchg
insl
push
pop
mov
xchg
and
mov
or
fwait
inc
dec
lcall
fistpll
mov
loope
ljmp
clc
inc
sub
sahf
inc
lcall
insb
rorb
cmc
cmpb
dec
sbb
push
push
mov
pushf
xor
lahf
add
mov
sahf
pop
add
add
and
popa
mov
cmp
out
jno
sbb
hlt
scas
scas
cmpsl
lahf
push
aaa
gs
jl
mov
sub
int
add
pop
aad
fnstsw
jmp
bnd
mov
push
shl
cmpb
das
fwait
mov
lds
cmp
sub
test
enter
test
cltd
push
push
xchg
and
and
in
js
or
or
imul
add
mov
in
jns
aas
leave
incl
jbe
mov
ss
into
les
iret
mov
ficoms
add
push
cmp
aas
jne
lock
adc
push
pop
adc
pusha
and
leavew
minps
inc
jnp
repz
and
pop
cmp
cli
xorl
loopne
xchg
divb
sbb
jecxz
sbb
pop
js
out
test
outsb
lahf
loop
lods
pop
js
pop
adcb
push
pop
fdivs
lahf
mov
pop
les
or
xchg
adc
movsl
jnp
add
cmp
mov
ficoms
dec
std
rorl
sub
or
xor
lahf
push
or
std
add
inc
es
loopne
xchg
push
fstps
push
rclb
push
xor
push
pop
into
push
mov
nop
andl
jmp
js
push
pop
jae
or
loope
imul
popl
add
and
mov
push
adc
cmp
cltd
sbb
fnstsw
cmp
mov
adc
cmp
loope
xor
dec
lock
pop
lcall
sub
setno
aad
scas
dec
xor
pop
adc
lcall
lods
out
pusha
sbb
out
test
mov
rorb
inc
inc
jmp
test
std
loop
pop
sahf
sub
sbb
aad
nop
or
loopne
and
push
std
xchg
xchg
xchg
sbb
push
lods
xlat
cmpsl
jmp
roll
inc
xlat
xor
popf
mov
hlt
pop
lds
ret
jmp
or
push
push
pop
push
jl
nop
inc
pop
hlt
mov
xchg
xor
lcall
enter
clc
mov
andb
inc
lds
ljmp
and
jb
cmp
rorb
enter
cmp
fisubrl
enter
into
je
lahf
cs
adc
hlt
nop
sahf
mov
cmp
inc
enter
testb
xchg
xchg
repnz
in
in
xlat
imulb
sbb
dec
fcmove
adc
mov
add
xor
mov
sub
push
imul
push
mov
adc
hlt
sahf
mov
std
fcmovbe
repz
pop
iret
shll
xchg
inc
cmp
xchg
pusha
mov
cmpsb
add
fdivl
adc
cmp
push
ret
adc
addr16
sbb
lahf
out
sbb
mov
aam
andl
pop
pusha
mov
jg
mov
xchg
mov
frstor
jnp
out
mov
cmc
jg
sub
scas
mov
fwait
mov
mov
ficompl
movsl
dec
mov
push
popa
push
cmp
sti
dec
mov
sbb
insb
cmp
stos
jae
inc
addr16
repnz
xchg
mov
xchg
xor
dec
lods
loope
xchg
cmp
pop
cmp
xor
data16
push
stos
xchg
movsl
sti
dec
and
rcrl
adc
xchg
push
data16
test
add
mov
data16
add
jo
add
mov
pop
rcrb
pop
mov
xchg
xlat
addr16
nop
fdivs
sub
movsl
jo
call
sbb
sub
pop
icebp
jge
mov
jbe
insb
push
adc
inc
scas
mov
jae
mov
lahf
push
jmp
lret
nop
fmuls
pop
out
adcl
fsubrl
cmc
sub
cltd
scas
adc
pop
daa
mov
pop
mov
inc
jno
out
clc
stc
mov
push
and
cld
addr16
and
xor
fistpl
andl
clc
inc
mov
data16
shl
inc
sbb
popa
cwtl
loop
dec
das
scas
jno
jo
and
call
mov
xlat
adc
ds
jno
stos
dec
lea
pop
cmp
out
lcall
mov
fsubrs
not
add
in
sub
jns
leave
test
lahf
push
popf
inc
xor
cmp
mov
or
mov
leave
in
orb
push
jo
cs
pushf
scas
mov
mov
push
sbb
or
add
insb
xchg
lcall
sahf
cmp
cltd
lds
cmp
mov
pushf
cmpsb
sti
out
stc
fidivrl
xlat
sub
jnp
sub
loope
push
mov
pop
sbb
inc
jmp
fildll
std
mov
jnp
pop
popa
ljmp
mov
push
add
push
jno
add
pop
push
mov
mov
cli
xor
dec
pusha
and
shll
mov
jne
adc
jecxz
dec
outsl
shll
pop
mov
mov
orl
jp
btc
cmc
scas
gs
rcrb
mov
fildl
or
mov
xlat
lret
cmpsb
lahf
push
bound
xchg
pop
dec
and
push
addr16
scas
dec
xchg
pop
adc
pop
fldl
popf
addr16
pop
pop
jb
push
add
out
mov
pop
pusha
pop
xchg
mov
jne
out
in
and
icebp
fld
ljmp
pop
push
jg
adc
stos
les
enter
dec
xlat
repnz
cltd
pop
mov
jb
xchg
xor
jle
stc
sti
xchg
inc
out
scas
push
inc
xor
lea
ret
hlt
jbe
xor
lcall
fidivl
mov
lret
outsl
xor
roll
shr
push
shll
sbb
je
mov
add
imul
ljmp
jnp
aaa
dec
push
pop
sub
add
cmp
push
mov
flds
mov
inc
inc
push
imul
out
sti
std
into
notl
test
mov
xorl
pop
cmp
adc
cmp
pushf
sub
pop
xor
sbb
xchg
adc
cmp
and
adc
inc
addb
mov
sub
sbbb
jno
lock
cmc
lahf
mov
and
aam
dec
loope
popf
outsb
imul
rcll
cli
jno
cmp
cmc
and
jecxz
loope
sub
leave
push
out
sbb
add
out
cmp
pop
lret
les
enter
push
sti
test
repz
xchg
mov
clc
fildll
fcmovbe
mov
jno
popf
test
pop
jo
push
xlat
push
pop
push
inc
jbe
or
lcall
mov
pushf
fwait
outsb
pop
mov
pop
addr16
gs
pop
roll
pop
and
mov
inc
ds
and
jae
mov
inc
mov
fwait
dec
in
ja
dec
pop
stc
out
test
repnz
or
or
enter
insl
inc
cmp
stc
std
jnp
iret
jnp
pushf
xchg
dec
cmp
loope
and
arpl
sahf
adc
cmpsb
and
cld
shl
outsl
push
mov
arpl
fcoml
push
dec
sarl
xchg
and
add
stos
inc
jno
into
sbb
nop
sub
hlt
shll
out
ss
mov
pop
aaa
fwait
sti
mov
ss
and
pusha
mov
xchg
cld
and
jno
jg
mov
lahf
pop
push
or
adc
xchg
addr16
adc
xchg
je
sub
das
add
push
add
xchg
insl
nop
and
sbbb
aas
jo
pop
sbb
fstpl
mov
fmull
push
lret
and
jp
mov
push
or
add
pop
push
lahf
popa
ja
sbb
xchg
xor
sbb
and
mov
cmp
mov
test
in
push
repnz
fwait
mov
sbb
cmp
daa
xor
ds
das
adc
ret
cltd
and
xlat
jmp
sbb
pop
scas
je
rcrb
adc
pop
js
sbb
mov
mov
jno
push
repnz
xchg
pop
loopne
or
xor
sahf
ja
aas
loope
mov
mov
push
and
inc
xor
jb
jno
sarl
stos
lcall
lret
aad
jns
pop
or
ja
dec
repnz
bound
adc
mov
push
dec
in
xor
clc
add
das
or
adc
inc
xchg
cmp
sarl
enter
dec
xchg
aad
scas
mov
mov
aad
cwtl
xlat
popf
fldt
insl
lock
mov
pushl
std
dec
and
cs
mov
dec
pop
cld
jno
fdivrp
gs
mov
ja
addl
cmc
mov
mov
testb
pusha
pop
orl
in
and
std
sbb
sbb
pop
push
mov
nop
paddsw
adc
pop
fldt
sti
jp
insl
xorb
aam
pop
xchg
dec
leave
push
dec
enter
inc
push
dec
and
mov
xchg
mov
shlb
sbb
mov
xorl
pop
imul
mov
rorb
xchg
sbbb
inc
xchg
hlt
fsub
mov
dec
sub
dec
aam
test
adc
sbb
repnz
or
in
pop
stc
ret
or
fsubs
pop
popf
std
subl
cltd
cmc
sub
das
fisttpll
mov
dec
adc
pop
pop
sbb
jl
adc
rcll
in
mov
adc
xchg
push
popf
test
sbb
jns
add
popf
sahf
out
jle
push
imul
pushf
sti
in
cli
jge
jae
push
sub
cld
fmulp
sub
sbb
push
orb
cmp
cwtl
jnp
fmul
fisttps
js
adc
adc
sbb
fimuls
test
test
in
sbb
out
pop
push
jl
adc
addr16
fstl
and
sti
stc
jmp
dec
ret
adc
aas
std
stos
fistps
jne
and
jb
test
lcall
and
sbb
xchg
jns
mov
xor
cs
popf
pushf
pop
cmp
sbb
test
cmp
cmpb
mov
pop
std
mov
sti
sbbl
pop
xorl
lmsw
push
bt
lds
mov
out
push
sbb
push
jmp
lcall
adc
pop
sbb
mov
lock
das
faddl
add
scas
mov
and
mov
pusha
and
xchg
popf
sbb
sbb
aad
enter
fcoml
inc
push
add
stc
negl
fiadds
add
add
arpl
cld
sar
sbb
sbbl
xor
int
test
out
dec
dec
out
push
fidivrs
jle
sub
call
scas
in
std
mov
sbb
sub
sbb
popf
iret
out
lahf
jo
inc
pop
mov
pop
sub
mov
sub
sub
mov
mov
cli
mov
test
and
xlat
or
outsb
sbb
cld
movsl
cmc
jge
aam
add
std
jmp
inc
mov
xchg
xlat
rcl
repz
sbb
mov
push
mov
sar
pop
loopne
fbstp
xchg
outsl
stc
pushf
stos
cltd
fwait
push
enter
scas
jle
repz
out
pop
add
scas
cmp
incb
into
daa
jg
cmp
sub
cmp
mov
imul
popf
dec
popf
jge
xorl
pop
mov
push
xchg
imul
inc
pop
mov
sarb
outsl
or
test
fadd
jbe
stos
jp
aas
hlt
or
sub
cmp
xchg
add
mov
mov
subl
enter
cld
add
push
xchg
or
test
and
jae
test
push
test
sub
frstor
fsubl
lret
sbb
mov
testl
std
xor
lcall
pop
imul
in
jg
enter
jo
push
dec
outsb
cmc
std
test
mov
cmp
movsl
shr
mov
jo
dec
int3
or
sub
fistpll
pop
push
push
imull
push
rcrb
mov
stos
inc
and
addl
add
pop
loop
lret
jge
jmp
sub
and
pop
adc
lcall
sub
fsubl
pusha
in
int3
sub
fistps
push
sti
push
fldl
repz
lret
es
ss
fistps
jecxz
shlb
cmpsb
pusha
dec
adc
je
cmpl
adc
fmuls
fidivs
popa
enter
sub
jl
test
std
pop
inc
lods
jae
enter
stos
sub
lret
loopne
jns
stc
inc
cld
loope
cmpsb
dec
cmc
push
adc
outsl
loopne
fildl
or
mov
adc
dec
pushf
aas
pop
movsl
add
pop
push
dec
mov
negl
es
mov
xor
ret
lds
les
nop
add
aam
cld
icebp
out
loopne
test
clc
jle
sub
push
xlat
in
cmc
mov
inc
cli
xchg
pop
mov
xor
shll
add
sti
mov
pop
push
cli
push
jbe
add
or
adc
fidivrs
xchg
xchg
bndstx
into
mov
mov
mov
inc
sahf
mov
sbb
add
mov
jle
mov
lods
lret
mov
cli
ds
adc
aas
dec
out
xor
pop
push
jecxz
pop
and
test
movsl
sbb
movsl
mov
fisttps
push
movl
xchg
pop
cmpsb
gs
icebp
popf
add
jns
jle
mov
sub
push
lds
sbb
outsl
idiv
lods
push
pop
cmp
test
push
pop
add
adc
sub
cmpb
ret
mov
scas
in
pusha
push
xchg
add
cwtl
xchg
sti
into
adc
notl
or
jns
scas
lret
clc
aaa
insb
jno
ret
adc
mov
movsl
or
mov
sarb
pusha
and
scas
das
mov
add
xchg
mov
les
scas
arpl
jg
xlat
lock
insb
pusha
enter
gs
pop
xchg
dec
std
mov
push
push
sub
pop
or
mov
xchg
inc
add
lods
incb
loopne
lods
daa
lods
testb
cwtl
repnz
jge
in
enter
cmp
lea
jmp
outsl
push
mov
mov
scas
test
aas
push
pop
push
in
fisttps
ret
mov
or
loopne
and
dec
in
cmpsb
outsl
fldt
js
stos
mov
inc
pop
push
or
or
loop
lds
jmp
pop
sbb
mov
ds
push
shlb
add
fcmovnu
call
mov
aad
imul
xorb
out
jnp
mov
mov
jmp
pop
out
std
inc
pop
pop
mov
psrlq
dec
popf
pop
jl
and
rcll
pop
mov
xor
in
cli
push
push
push
sti
pushf
fimuls
push
jmp
sub
xchg
out
out
dec
add
jecxz
ror
sti
leave
mov
arpl
pop
test
xchg
mov
in
fstpl
cmpsl
sub
fnsave
int
outsl
std
add
push
sub
push
mov
into
push
xlat
and
les
lds
incb
flds
out
mov
fcmovne
fnstsw
fiadds
mov
popf
push
xchg
pop
ja
mov
mov
ficoms
popf
sbb
cmpb
fst
lret
inc
fcomps
inc
or
xor
xchg
add
dec
xlat
xchg
andl
insb
push
xchg
add
dec
mov
fildl
or
xlat
imul
push
mov
jle
scas
aas
and
into
scas
dec
sub
shlb
cwtl
pop
shl
out
insl
sbb
outsb
outsl
subb
inc
jecxz
int3
and
daa
lds
add
filds
stc
sub
enter
add
aad
pop
jg
mov
insl
imul
jg
scas
sti
mov
xchg
inc
pop
orb
hlt
insl
ljmp
lcall
in
or
adc
emms
pusha
mov
inc
mov
inc
cwtl
lock
das
push
orb
adc
push
pop
and
sub
mov
stos
jp
mov
sar
sbb
cmp
dec
jmp
mov
dec
jno
test
loop
adc
imul
dec
bound
dec
xchg
push
out
movl
mov
push
xchg
push
mov
pop
xchg
xchg
shll
pop
insl
pop
cmp
fistl
arpl
inc
or
pop
xchg
test
cwtl
mov
xchg
aad
ficoms
subl
jp
mov
std
pop
dec
and
or
add
push
adcb
sahf
idiv
jecxz
add
sbb
sub
xchg
jge
jo
jp
pop
iret
aam
and
iret
fcmove
sbbb
repz
popf
sbb
cmp
enter
or
jmp
pusha
sbb
aad
xor
xlat
jno
dec
sbb
jnp
sbb
mov
lods
xor
mov
cmp
push
cmp
push
mov
dec
jmp
clc
into
mov
lods
cmp
jmp
popf
pop
dec
imul
mov
mov
jle
or
lods
or
mov
dec
stc
lea
pop
outsl
push
adc
div
cmp
out
mov
or
cmp
sbb
mov
shrl
aam
add
cmp
ljmp
xor
lcall
xchg
idivl
dec
jmp
sbb
or
cmp
out
fisttpl
jnp
and
sbb
fimull
daa
mov
sbb
add
hlt
rcll
or
jmp
cmp
call
dec
jnp
mov
push
jb
inc
sbbb
cmc
cmp
je
push
sbb
jl
or
flds
fs
jnp
fnstsw
inc
sbb
inc
imul
or
sbb
out
outsl
fucomp
fwait
lds
inc
push
cli
cli
cmp
ret
sbb
loop
daa
sub
std
mov
xchg
or
rorb
xchg
fisttpl
jo
add
xchg
inc
mov
cpuid
adc
adc
cli
add
mov
cli
aaa
fs
add
ret
xchg
push
mov
push
add
lahf
inc
pop
test
or
roll
push
inc
rorb
or
lcall
lahf
orb
fwait
sarl
stos
push
stc
arpl
xlat
fistpl
leave
mov
lcall
jne
xchg
rcll
clc
pop
lret
lock
sub
roll
adc
sub
push
pop
out
adc
lret
add
add
inc
imul
frstor
inc
stos
and
sbbl
jg
xlat
push
fnstsw
scas
sub
adc
adc
repz
mov
pop
scas
add
xor
fnstsw
sbb
pop
mull
fdiv
mov
sbb
sahf
push
push
cld
or
mov
xchg
push
lcall
mov
mov
stos
das
js
push
jnp
fiadds
pop
loope
or
sbb
push
into
ja
movhps
adc
xchg
push
out
push
fldcw
std
test
xchg
jne
out
addr16
pop
mov
jmp
and
rcll
jge
push
mov
and
testb
xchg
push
mov
gs
or
aas
fldt
cmpsl
stos
lret
sbb
push
cwtl
out
adc
pop
lret
lret
scas
or
inc
push
iret
xlat
les
hlt
sbb
sub
pop
sbbl
pop
aad
cmp
sbb
rcr
sbb
fldl
or
mov
hlt
mov
repz
push
jle
aaa
jg
adc
clc
jecxz
sbb
push
das
int
add
pop
fistl
push
adc
int
test
pop
pop
pop
xchg
push
repz
inc
push
addr16
fstps
sahf
clc
fwait
std
adc
pop
popl
test
adc
xor
add
aaa
pop
push
test
pop
stc
mov
push
fnstcw
aam
int3
pop
sub
xor
lods
sub
pushl
push
push
cmp
xor
mov
stc
add
in
xchg
sub
pop
jge
je
test
idivb
clc
rolb
and
mov
outsb
int
sub
pop
nop
mov
cmp
mov
ficomps
stc
sbb
xor
push
clc
sbb
jle
stc
sbb
sbb
lcall
fsts
std
xchg
fists
cwtl
xchg
fnstenv
sbb
mov
icebp
jns
pushf
pop
aaa
push
std
cmp
hlt
cltd
aaa
xchg
push
clc
adc
mov
mov
sbb
aad
mov
cmp
mov
inc
cs
cli
adc
cmc
mov
cltd
push
jns
outsl
pop
pop
mov
cmp
lods
inc
sarl
or
mov
pop
sbb
ret
mov
int
mov
cltd
or
fwait
sbb
imul
clc
or
outsl
jecxz
repz
pop
fidivs
jns
adc
or
shl
scas
sahf
xchg
xchg
fwait
xchg
add
sub
mov
xchg
push
dec
pop
setbe
mov
flds
push
xor
cmp
inc
fnclex
xchg
and
out
cli
fucomp
enter
dec
stc
hlt
pop
pop
mov
test
ja
adc
xchg
mov
and
cmp
xor
mov
divl
mov
adc
ss
push
sarl
xchg
mov
stos
fdivr
fistl
xchg
aaa
stos
jl
repnz
jno
cld
pop
in
mov
lock
call
nop
in
fsts
in
adc
sbb
mov
insl
jnp
lds
xchg
rcll
repnz
or
ret
add
mov
mov
test
sbb
std
movb
jns
dec
popf
test
movsb
int3
mov
mov
test
mov
loope
jle
int
movsb
mov
out
int
mov
push
sub
into
cltd
fsubl
fisttpl
shl
lea
cltd
std
sbb
mov
mov
cli
sbb
fnstcw
rcll
rcrl
sbb
cwtl
aaa
cmp
popf
sbb
ret
pop
jle
mov
lcall
ret
fwait
subl
sbb
ja
mov
cld
pop
push
add
aas
ret
inc
sbb
aaa
pop
push
add
sbb
cwtl
sbbb
seta
jl
movsl
les
cmp
jb
mov
push
test
pop
popa
push
dec
pop
push
or
fldt
or
adcl
pop
lods
jmp
inc
mov
inc
jmp
pop
xchg
and
push
pop
or
and
push
fnstcw
clc
daa
in
sbb
clc
pop
aaa
sbb
sbb
jl
push
fstpl
scas
stos
jl
jmp
adc
aas
ja
mov
xchg
les
cmp
mov
pushf
add
jmp
xchg
nop
mov
loope
ds
cwtl
add
icebp
ret
adc
xchg
loope
insb
pusha
mov
xchg
fldenv
sahf
mov
scas
adc
and
or
int
xlat
or
dec
jb
test
or
mov
mov
das
stos
xchg
mov
pop
mov
sub
push
enter
pop
sbb
mov
nop
je
bound
shl
popa
into
sti
mov
xchg
xchg
aad
aaa
orb
rcrl
push
cltd
mov
push
add
cltd
test
jae
fnstcw
adc
cmp
pop
sbb
pop
mov
stos
sti
push
das
cmp
or
pop
mov
xchg
and
sbb
clc
clc
add
fstps
pushf
xchg
mov
mov
repnz
pop
or
sbb
pushf
mov
ja
or
push
adc
in
mov
mov
mov
adc
mov
pop
xchg
jae
mov
outsl
lock
fwait
test
and
and
xchg
jbe
push
das
mov
dec
ja
pushf
xlat
pop
jbe
subl
mov
push
ja
adc
add
inc
pop
sbb
sbb
pop
adc
aaa
mov
xchg
sbb
or
dec
push
pop
pop
sbb
adc
lea
je
adc
es
negl
cmp
rolb
je
mov
scas
fistpll
pushl
push
mov
stc
les
cmpsl
pop
jno
jge
out
mov
int3
repnz
sub
dec
mov
mov
out
add
xchg
cmp
aas
push
clc
push
sbb
test
xchg
dec
adc
adc
js
pop
idivb
outsl
inc
in
adc
dec
stc
add
or
out
mov
fwait
pusha
daa
sbb
scas
jle
movsl
cmp
mov
out
sbbb
sbb
scas
mov
adc
xchg
fnstcw
xlat
cwtl
mov
pop
sti
sbb
daa
pop
fisttpl
push
xchg
setno
xor
mov
xchg
into
and
jnp
inc
popf
lcall
loope
bsr
cld
sbb
shll
jns
in
jg
adc
push
xchg
push
fwait
inc
add
and
or
fmulp
sti
pop
dec
cltd
lret
adc
mov
cmp
hlt
faddl
sub
stos
mov
outsl
outsb
jbe
fisubrl
call
mov
push
sbb
xchg
aad
rorb
pop
adc
or
jg
mov
jo
fisttpl
ret
xchg
nop
pop
lcall
call
xchg
adc
and
ficomps
mov
mov
sbb
xchg
ret
jae
cld
scas
cmc
xchg
inc
jecxz
push
mov
xchg
pop
adcl
addr16
mov
jmp
xchg
xchg
out
sbb
add
test
insb
cmp
scas
fisttps
mov
adc
add
dec
mov
int3
jl
push
xor
movsl
push
cltd
mov
test
push
cltd
repnz
pop
call
dec
shr
inc
divl
call
clc
pop
in
mov
das
push
xor
jp
div
sti
push
inc
xor
mov
pop
and
xchg
dec
pop
sahf
pusha
mov
push
fists
out
adc
xchg
dec
push
sbb
push
jp
xchg
test
je
pop
xchg
pop
frstor
lret
ja
cwtl
pop
push
sbb
sbb
xlat
mov
sbb
sbb
or
fldl
cltd
push
sbb
lahf
xor
and
lcall
popa
xchg
insl
out
cwtl
add
mov
ret
or
std
sbb
sbb
iret
xchg
add
pop
add
mov
xchg
push
add
jbe
push
std
ret
sbb
pushf
ret
loopne
mov
nop
cwtl
fidivs
movsb
pop
dec
adc
test
push
fimuls
mov
sub
lahf
pxor
xchg
out
flds
pop
adc
mov
pop
mov
pop
popa
pop
fimull
adc
xchg
jecxz
push
pop
mov
push
inc
fsubrp
adc
pop
xchg
pop
jg
mov
cwtl
nop
sti
add
or
or
add
xchg
mov
cwtl
push
dec
pop
setae
fldt
mov
std
nop
sahf
push
dec
xlat
pop
sti
mov
lea
mov
adc
testb
sti
xchg
push
sbb
or
push
fstpt
cld
mov
sti
or
xchg
movq
xorl
mov
or
sti
mov
or
or
sub
xchg
or
dec
push
pop
pop
xchg
pop
pop
xchg
and
xchg
test
add
jle
sbb
sub
sbb
jne
cld
in
jge
cltd
push
pushf
or
or
mov
push
jg
sar
fcmovb
pop
mov
enter
xor
push
mov
mov
inc
aas
test
xchg
cmp
filds
pop
push
sbb
push
jmp
jg
jecxz
ficoms
int
sbb
int3
hlt
xor
aam
mov
pop
add
shr
xor
sbb
push
adcl
sub
cmpsl
xchg
ds
and
mov
mov
ja
aas
sub
mov
imul
mov
and
pop
ret
movsl
add
sub
mov
jns
dec
sahf
jle
mov
inc
std
mov
repnz
or
int
sbb
and
mov
xor
sub
test
cmp
mov
loopne
div
sub
sbb
push
outsl
pushf
adc
jmp
addr16
std
xlat
mov
fcmovnb
xor
jp
sete
xor
xor
or
orb
hlt
repz
push
daa
pop
pop
push
nop
inc
push
in
test
fsubrs
jmp
jl
xor
js
lock
jg
dec
add
loopne
or
pop
popa
idivl
aam
pop
movsl
add
pop
fmulp
push
fstl
sbbl
mov
sub
mov
add
dec
jmp
add
xchg
divl
incb
fcmovbe
pushf
mov
jnp
sbbb
scas
mov
or
addr16
pop
jno
ja
fcmovnu
ret
mov
pop
pushf
out
in
push
push
cmp
pop
mov
ffreep
jle
fcmovne
adc
mov
std
mov
pop
mov
sbb
ljmp
jecxz
loopne
jno
jne
push
sbb
mov
mov
jecxz
stos
repz
cld
push
dec
mov
sbb
xor
fwait
xor
add
xchg
adc
shrb
lock
fistpl
jae
push
adc
mov
cwtl
in
or
mov
mov
sbb
push
movb
add
mov
setle
pushf
and
cltd
add
sahf
or
inc
enter
call
inc
in
mov
xchg
add
rol
mov
fimuls
xchg
push
test
fbld
and
sub
call
and
sub
xchg
out
xchg
jno
sbb
add
and
mov
sti
adc
sysret
xchg
mov
push
cld
fisubrl
ret
enter
enter
jo
addr16
into
fwait
mov
pop
mov
jae
sub
out
add
adc
dec
xchg
xlat
cmpsb
dec
outsb
cltd
push
popf
enter
and
pop
cli
out
push
push
out
mov
enter
cli
push
data16
push
inc
pop
push
xchg
sub
mov
cmp
cld
shl
pop
push
bound
push
jl
mov
or
mov
jnp
fstenv
outsb
mov
add
inc
ja
popf
mov
movsb
decl
xchg
je
or
mov
xchg
or
mov
or
mov
sbb
mov
cwtl
add
das
xchg
inc
mov
mov
inc
stos
sub
push
jg
loopne
subb
push
add
repz
lods
lahf
mov
lods
mov
jge
cs
into
pop
test
dec
cmp
jge
jno
add
add
sub
test
jnp
xchg
cli
enter
das
int
ds
adc
popf
fwait
sbb
inc
or
fwait
sbbb
jae
sbb
xlat
sahf
popf
xchg
adc
nop
xchg
sar
push
insl
nop
into
daa
adc
add
pop
pop
sub
enter
cmpsl
sub
pushf
enter
sub
sub
popf
add
xor
sbb
adc
aaa
sbbb
pop
push
mov
in
rorb
lahf
jne
pop
xor
stos
aad
movsl
pop
fwait
stos
pop
lahf
sbb
mov
pop
xchg
push
xorl
out
add
rorl
lock
je
insl
pop
mov
cmpsb
jns
inc
push
xcrypt-ecb
cmpsl
dec
xchg
add
mov
xlat
add
iret
mov
jb
sahf
or
jnp
repz
cmp
pop
xchg
loope
in
psllw
inc
add
mov
inc
adc
mov
pop
mov
popa
enter
xchg
and
and
scas
rcrb
mov
push
sub
pop
in
clc
fistpl
xor
jl
leave
fistps
lahf
lahf
pop
jg
pop
fstl
into
scas
add
pop
outsl
adc
jo
scas
fwait
out
pop
cs
insl
out
or
sub
mov
pop
pop
xchg
sti
outsb
sbb
cmpsb
addl
dec
cmp
and
addb
push
jp
stos
insb
dec
test
jp
xor
add
sbb
pop
enter
stc
xlat
ret
stc
and
mov
daa
sbb
in
std
popf
rcl
aam
mov
xchg
fwait
mov
fidivl
fstpt
xlat
mov
pop
xor
into
push
fistl
cmp
push
sete
jl
xor
mov
jo
sub
lahf
and
and
popf
sbb
adc
push
xor
cli
jmp
fiadds
mov
push
js
fwait
mov
out
ljmp
stos
imul
or
mov
add
mov
xchg
cmp
movsl
xchg
fimuls
nop
cli
cmp
jg
adc
cmp
push
les
jle
and
sbb
lret
lds
push
addr16
int3
jge
je
popf
add
xchg
jae
jge
adc
sbb
sub
cltd
or
mov
cli
add
sub
push
push
in
add
out
fstpl
sti
test
loop
loope
pop
leave
mov
mov
dec
mov
scas
js
jp
jno
push
fstl
lods
stos
pushf
mov
iret
in
dec
xlat
repnz
sahf
xchg
addb
movsb
xchg
ds
xor
xorl
mov
sbb
insl
subb
iret
aaa
jae
mov
sbb
pop
cltd
pushf
ficoms
stc
xchg
add
mov
repz
cmpb
push
sub
scas
ret
ficomps
addb
or
pop
adc
loopne
mov
mov
push
cmp
insl
and
jecxz
xorb
sarl
push
mov
cld
into
cmp
or
addb
push
mov
sahf
and
push
xchg
dec
mov
push
loop
pusha
mov
push
adc
add
addb
insl
and
into
sbb
fiadds
mov
pop
xchg
test
add
xor
loopne
loope
rep
mov
fistl
cmp
mov
repnz
hlt
cmpsb
aam
scas
rcrl
ljmp
std
adcl
or
sbb
aad
and
and
adc
inc
std
cmpl
and
dec
jne
mov
xor
subb
inc
mov
or
cwtl
fidivs
jmp
mov
lahf
mov
sbbb
xchg
subb
pop
pop
adc
jnp
sahf
and
andl
push
loope
pushf
xor
outsb
adc
out
and
push
xchg
sub
sub
fiaddl
or
pop
std
leave
in
push
adc
pop
andl
ja
mov
test
popf
mov
add
into
frstor
fbstp
loop
xchg
ljmp
or
mov
jmp
or
idivl
jnp
xchg
mov
ss
jne
dec
add
inc
xor
aaa
rorb
cmpl
aam
mov
adc
lret
push
adc
ret
mov
mov
or
es
push
pop
push
bnd
or
inc
std
cmp
jle
pop
fstps
fisubs
push
repnz
cltd
dec
add
inc
lret
dec
es
inc
je
pop
mov
xchg
pop
outsb
lods
or
sub
mov
xchg
pop
ret
faddp
inc
dec
pop
jp
push
imul
or
jbe
pusha
outsl
out
xor
int
mov
lods
nop
cmp
xchg
ja
ljmp
das
mov
pop
xchg
jno
subl
js
mov
sbb
mov
lahf
sar
mov
xor
movsb
add
push
mov
dec
loop
test
loope
dec
and
xor
leave
sahf
pop
in
inc
mov
push
out
addr16
jmp
jl
stos
mov
jmp
aam
pusha
cmp
loope
mov
stos
in
flds
cmc
push
add
inc
and
enter
gs
testl
add
pop
out
aaa
pushf
daa
repnz
mov
es
repz
dec
repnz
mov
mov
mov
pop
add
jmp
jge
fstl
mov
or
sbb
push
pop
rorb
les
and
cmp
jb
fldcw
pop
cmp
push
push
xor
inc
sti
push
jae
ret
jg
fistpll
bswap
adc
sbb
mov
testb
aaa
inc
aam
inc
cmc
jmp
dec
fwait
ds
mov
mov
shl
frstor
inc
mov
shlb
aam
mov
and
ja
sbb
dec
test
push
cmp
stc
clc
imul
push
loope
scas
je
out
fiaddl
mov
or
cmp
in
pop
ljmp
push
push
lea
stos
lods
scas
int3
out
sahf
cs
pop
clc
insl
shll
jne
cwtl
dec
ljmp
inc
repnz
jno
pop
xlat
xor
sahf
subb
cltd
pop
rcr
cmpsl
and
pusha
pop
sub
lahf
push
mov
adc
cmp
mov
mov
adc
fs
add
cmp
stos
inc
data16
push
cmp
sub
mov
fs
pop
jg
aam
call
loop
or
jp
jp
sbb
ret
loope
xchg
push
lahf
into
test
inc
fidivl
popa
dec
mov
push
xor
cmp
xor
aam
adc
or
mov
add
iret
adc
mov
std
and
jge
fs
pusha
cld
lds
sahf
sti
mov
xor
ret
inc
mov
sbb
inc
popf
out
pop
push
push
cmp
orl
jp
in
jbe
in
inc
fildll
dec
sti
test
or
int
shr
mov
push
cltd
adc
mov
iret
in
push
ret
mov
xor
dec
pushf
jmp
cmp
dec
je
sbb
xchg
adc
pop
out
mov
jp
mov
in
pop
sbb
fnsave
aad
call
pop
inc
mov
pop
push
pop
sysexit
add
adc
xchg
mov
xchg
pusha
addr16
out
adc
je
mov
lret
or
mov
je
xchg
fwait
inc
and
mov
fcompl
push
popa
sub
sub
or
xchg
cmpsl
insl
add
lahf
add
filds
pop
outsl
xor
xor
pop
xor
jmp
fidivl
leave
mov
push
jne
cmp
lahf
sub
mov
cmpsb
das
dec
fwait
sbb
xor
mov
pushf
xlat
jnp
xchg
addr16
notb
mov
and
daa
add
pop
jno
popf
push
sahf
pop
out
push
xor
sbb
loop
ja
lods
jnp
loop
ljmp
cmp
jp
hlt
ret
inc
pop
pusha
inc
lret
push
xchg
jl
add
incl
ja
add
mov
fdivr
jle
pushf
sti
cmp
lods
dec
dec
pop
loope
cwtl
hlt
pusha
xlat
and
test
push
in
jne
dec
lahf
dec
cwtl
sbb
movsb
sbb
aaa
sti
int
xchg
add
pop
mov
out
push
mov
adc
pusha
or
lea
dec
pop
nop
xchg
in
mov
scas
test
adc
mov
std
pop
sub
jecxz
into
xchg
fnsave
mov
push
hlt
mov
mov
incb
nop
pushf
sbb
dec
mov
or
and
xor
dec
stc
arpl
sub
or
std
enter
mov
mov
repnz
xor
lcall
adc
cli
xchg
das
adc
mov
cmp
lock
int
flds
shr
jl
sahf
andl
mov
jbe
pop
pop
ret
pop
mov
sbb
mov
pop
jnp
mov
push
xor
leave
stc
push
sbb
outsb
pushf
jp
pop
mov
xchg
add
andl
mov
fdivs
ret
les
arpl
push
repz
aam
sahf
mov
test
aad
jl
pop
sub
lahf
sbb
push
inc
fstl
inc
mov
inc
aam
bound
ds
test
test
adc
mov
sti
inc
xor
aad
adc
push
sub
cmpl
dec
inc
dec
mov
fst
mov
rcrl
inc
xchg
mov
xor
cmp
jl
fmul
mov
sahf
fidivs
loope
popa
fnstsw
pusha
cli
mov
addl
pop
cmc
xchg
sub
or
popf
pusha
dec
cmpsb
xlat
jge
jne
xchg
jnp
pop
ret
mov
movsb
or
pop
mov
addl
shrl
fidivs
mov
push
sbb
orl
push
rorl
in
pushf
jno
clc
add
adc
incb
xchg
out
pop
hlt
jne
xchg
addr16
in
popf
or
lar
and
push
adc
mov
jge
jnp
mov
lidtl
and
mov
mov
xchg
addr16
lfs
xlat
xor
add
cmp
and
divl
shl
sbb
push
sbb
lret
rorb
inc
xlat
sbb
loope
jge
fisubrl
adc
sbb
pop
xor
pand
jl
push
imul
ss
int
jne
cmp
add
ret
adc
icebp
fsubrl
add
add
lret
ljmp
cmp
add
xchg
add
cmp
jne
cmp
das
sub
pop
les
ss
jecxz
cld
cmp
push
add
mov
cltd
cmp
add
jnp
das
std
mov
jecxz
cmp
cmp
xor
sbb
mov
and
xchg
xlat
fidivrs
sub
iret
inc
push
add
inc
xor
push
stos
lock
roll
into
xlat
push
repnz
add
push
mov
inc
add
push
push
sahf
pop
jge
or
jne
xor
xchg
pop
dec
orl
adc
popf
fucomip
xchg
fcoml
sub
pop
stos
adc
int
cmc
sbb
cmc
adc
dec
add
dec
mov
cmp
in
and
loop
cmc
mov
mov
into
outsl
scas
das
loop
ss
sbb
sbb
test
lcall
cwtl
jl
aad
daa
mov
inc
fwait
aad
or
loop
rclb
or
jge
mov
push
dec
loop
dec
xchg
popl
outsb
loop
orb
addr16
lahf
fildl
push
lds
mov
fwait
inc
push
mov
inc
aad
rcll
test
pandn
xchg
add
sub
jnp
fs
fists
or
pop
sub
and
push
xchg
fldl
mov
xlat
loop
xchg
jae
out
xchg
pop
int
add
cmp
test
mov
sub
push
aam
xor
adc
sub
jo
dec
add
fistpl
push
jnp
movswl
adc
mov
mov
sub
int
fnstenv
mov
sbb
jge
ficompl
orl
test
int
test
cmp
fmul
mov
cmp
data16
test
inc
gs
cmpl
cmc
xor
mov
in
jns
xchg
add
lret
in
lds
out
add
dec
xlat
pop
add
mulb
lods
mov
push
sub
push
sbb
mov
cmp
jnp
cmp
xchg
inc
test
test
and
inc
subb
repz
jle
fwait
lcall
insl
out
jecxz
sti
mov
pop
pop
push
mov
leave
daa
jno
push
cmc
adc
rcrl
lret
orb
mov
arpl
push
std
ljmp
ds
movsb
loop
fs
popf
jae
or
incl
dec
push
jns
xchg
xchg
adc
sbb
mov
pop
adc
nop
inc
repnz
ret
add
sarb
call
add
test
mov
add
addr16
pop
fwait
adc
negb
arpl
movsb
xchg
movsb
pushf
sti
add
cmp
pusha
cmp
adc
jb
fcoml
test
mov
jb
test
outsl
jne
test
sti
clc
aaa
ds
addl
cmpsb
cld
hlt
fidivrs
sub
ja
inc
inc
pop
mov
outsl
xchg
mov
adc
adc
nop
pushf
ret
imul
pushfw
aad
push
shl
add
xchg
sbb
fdivs
sbb
lret
push
insl
push
sbb
into
mov
add
out
add
dec
xchg
pop
or
jno
fs
or
cs
mov
negl
scas
cwtl
or
nop
pop
or
xchg
cmpsb
mov
lcall
fs
mov
xchg
push
sub
or
sbb
mov
xchg
sbb
pop
ret
pop
movsl
push
adc
sub
mov
stc
or
scas
mov
mov
pop
repnz
hlt
or
add
jmp
sbb
push
ret
or
in
pop
mov
adc
push
add
pop
cltd
mov
bndldx
clc
cmpsl
mov
ds
addl
pushf
push
or
push
ss
setl
mov
subl
std
and
orl
rorb
adc
add
push
test
mov
push
mov
jne
xor
pop
iret
add
jnp
pop
std
xchg
and
push
pop
xor
jg
lahf
mov
add
lds
mov
paddw
push
mov
lcall
cltd
adc
xchg
dec
mov
inc
repnz
jp
popf
push
jl
push
movsl
idiv
or
cmp
cli
inc
popf
lar
in
mov
roll
outsl
mov
aaa
fadds
xlat
or
cmp
sub
lret
mov
sahf
bound
maskmovq
idivl
andl
sub
mov
fcomps
ss
add
add
aaa
ljmp
fildl
aaa
pop
sti
addb
xlat
not
cmp
mov
idivb
rcrb
xchg
outsl
mov
mov
add
sbb
push
jb
cli
mov
adc
test
and
test
pop
fstl
or
push
aam
inc
or
ret
cmpl
or
mov
aad
push
adc
insl
ss
addr16
sahf
enter
stc
adc
test
movl
pop
xchg
push
xlat
leave
sbb
lret
lea
mov
lahf
into
or
insb
push
cmpxchg
sbb
adc
inc
mov
outsb
push
call
in
out
push
and
scas
inc
ja
lret
nop
cmc
cld
lcall
add
fildl
dec
outsb
div
adc
jne
rolb
sahf
sub
mov
jno
push
jmp
adc
sbbb
mov
sbb
sbb
add
cmpsl
sti
xchg
mov
test
ja
mov
outsl
sbb
push
jl
mov
nop
mov
or
aam
mov
pop
jl
mov
sarl
inc
roll
adc
xchg
prefetch
or
mov
call
popf
xlat
pop
sti
push
push
sbb
fstps
sahf
sbb
xlat
inc
sti
pop
push
fwait
cmovne
inc
cmp
loope
pop
xchg
push
imul
rcrl
xchg
pop
inc
pop
add
dec
xor
xchg
pushf
xlat
cltd
dec
pop
out
mov
xchg
mov
clc
repnz
mov
push
push
shld
jecxz
sub
popl
pop
mov
pop
inc
lcall
sub
sbb
mov
into
pop
sbb
pop
push
sti
pop
outsl
jg
sub
aas
incb
jno
lcall
rcrl
jb
dec
fidivs
mov
stos
push
loop
xor
fdivl
or
and
aad
mull
sbb
or
call
iret
pop
ficoms
pop
loop
pop
sub
xor
arpl
aaa
movsb
arpl
pop
xchg
or
call
std
stos
and
xlat
jp
fbld
arpl
fnsave
adc
jbe
inc
sub
cs
sarl
or
push
fnstsw
jno
push
fsubrl
xlat
xchg
pop
aaa
fidivs
ds
cmp
cld
lea
je
sahf
std
insl
jo
test
xchg
sbb
jne
cwtl
cltd
enter
mov
cmpsl
es
fidivrs
inc
cmpsl
jne
cltd
les
push
aas
aad
fcmovnu
lahf
xchg
adc
mov
inc
push
pop
repz
cmp
scas
shl
add
xor
repz
mov
xlat
sbb
and
leave
or
adc
sti
scas
xchg
mov
push
jmp
and
jne
mov
dec
push
push
cmp
lds
push
ficompl
push
cmp
mov
ljmp
adc
adcl
or
lds
rol
adc
add
sub
popf
insb
inc
add
or
jmp
jge
push
xchg
or
clc
push
push
cmpb
pop
and
loop
jns
add
mov
push
scas
shrl
push
push
aaa
sahf
lods
jg
sub
int3
fidivrs
ljmp
xchg
leave
sub
sub
hlt
lcall
xchg
ljmp
daa
faddl
push
push
inc
scas
jns
aaa
jne
mov
cmp
dec
shll
pop
scas
pusha
cmc
sub
mov
mov
test
and
mov
dec
insl
inc
mov
int3
out
cld
adc
dec
cli
cmp
inc
dec
int
and
dec
cltd
jg
rcrb
dec
int
sbb
movsl
pushf
loop
insb
fmull
fistpl
mov
cli
mov
mov
push
sub
push
out
jg
mov
jnp
mov
fistps
lds
ja
xlat
inc
pusha
xchg
les
loop
outsb
int
inc
inc
push
sahf
sub
push
cltd
cmp
clc
imul
and
jmp
add
pop
aaa
dec
mov
jg
lods
fwait
sysexit
data16
pop
pop
inc
lahf
fscale
push
sbb
fwait
pop
js
fidivs
mov
outsl
popf
or
ret
jbe
lock
test
push
sub
ljmp
dec
pusha
aaa
pop
fwait
outsb
mov
or
imul
push
lods
cltd
mov
xor
inc
int
test
push
cld
push
adc
jmp
sbb
add
jno
insb
push
xchg
cmp
pop
add
sbb
sti
push
xchg
xchg
add
enter
test
dec
adc
insl
pusha
mov
mov
xlat
js
loopne
dec
dec
mov
pop
cltd
xchg
push
mov
sbb
xchg
dec
and
or
mov
icebp
push
inc
fldenv
leave
mov
pop
leave
lcall
leave
out
lock
pop
mov
bswap
mov
in
stc
inc
adc
dec
sarl
add
inc
adc
cltd
xchg
std
pcmpgtd
test
cmp
dec
cmpsb
fcom
push
data16
cmpsb
pop
loop
push
mov
int3
shlb
mov
sbb
test
cltd
pop
fldl
push
mov
scas
out
pop
or
cli
aad
pusha
push
es
rorb
sbb
in
lock
cmp
pop
mov
adc
dec
push
or
popf
pop
push
jnp
xorl
cld
enter
dec
ficompl
dec
push
dec
stc
push
in
or
call
or
push
mov
xchg
cwtl
fwait
outsb
jnp
xchg
nop
push
emms
pop
xor
ficomps
outsb
add
xchg
lcall
sbb
adc
pop
std
dec
and
paddw
pop
sti
imul
xchg
test
fldcw
insl
and
xchg
fistps
clc
xlat
or
pushf
sti
xchg
filds
lcall
js
icebp
push
test
idivl
jle
neg
adc
and
test
mov
add
mov
out
sahf
inc
mov
mov
add
jno
outsb
outsl
test
xchg
inc
call
push
fsubs
push
popf
pop
or
sbb
std
dec
cwtl
ja
mov
rol
add
sub
xchg
outsl
mov
aad
fcmovnbe
sarb
xchg
or
arpl
adc
push
gs
cmp
fisubl
push
gs
clc
dec
pop
daa
cmp
jg
and
xor
fisttps
xor
mov
std
add
loope
test
mov
cmpsb
xor
clc
and
clc
cmp
inc
cmp
mov
pop
add
sub
jnp
andb
adc
or
push
scas
nop
mov
imul
fsubrs
pop
je
not
and
pop
repnz
dec
inc
pop
adc
jno,pn
fidivrl
mov
sbb
into
sbb
cmp
mov
mul
and
lock
hlt
xchg
lret
pop
adc
add
mov
les
sbb
ja
jmp
cmp
xlat
lock
int3
push
jne
shrl
aad
lods
pop
cld
xchg
xlat
mov
out
push
idivb
mov
adc
hlt
decb
sarb
adc
pop
loop
idivl
xchg
sti
adc
sub
in
add
lahf
pop
fsubrl
sbb
xor
jmp
mov
add
jno
xlat
inc
add
popa
in
sub
push
nop
pop
testb
xlat
adc
std
aas
mov
inc
push
popf
jb
adcb
gs
adc
dec
and
mov
mov
pop
sub
loopne
rol
push
arpl
jne
mov
pusha
loope
sub
data16
int3
mov
andb
pushf
xchg
mov
pop
xchg
sbb
add
mov
inc
sbb
lcall
inc
push
xchg
aas
pop
fsts
mov
xor
lods
xchg
xchg
into
jg
test
data16
iret
inc
dec
mov
fldcw
pop
add
test
dec
xchg
or
fiadds
mov
iret
xchg
lea
sbb
push
fldl
sbb
push
mov
mov
xchg
xor
jne
cli
ret
pushf
xlat
fstps
pop
add
inc
pushf
xlat
pop
add
mov
mov
mov
dec
sub
sti
jnp
loop
sbb
fnstsw
in
cwtl
dec
fs
sti
fcomps
cmp
test
ja
lods
fs
xlat
pop
jnp
lock
test
fstps
pop
or
cmp
or
imul
pop
leave
mov
fmull
and
pop
mov
xor
and
sbb
sub
sti
out
push
push
bnd
mov
add
outsb
addr16
mov
ljmp
inc
dec
ret
ljmp
push
cmp
adc
sub
aam
jo
fisttpll
fmulp
stos
pusha
adc
rcrb
imul
and
scas
dec
frstor
cmpsl
jnp
push
fisubl
sub
stc
cmp
cld
sbb
fsubl
es
cwtl
inc
mov
xchg
add
fdivp
outsl
unpckhps
pushl
or
push
iret
imul
std
jo
ds
xchg
icebp
mov
adc
dec
pop
ja
fstpt
push
sub
add
scas
push
jp
incl
xchg
jp
jecxz
sahf
mov
mov
sbb
leave
or
mov
sbb
fs
aad
pop
flds
cltd
subl
lar
jle
insb
and
push
testb
sbb
mov
std
idivb
int3
negb
ss
add
lcall
mov
xchg
sti
repnz
mov
mov
scas
or
cwtl
aas
cmp
mov
mov
inc
jp
mov
adc
push
sbb
mov
push
xchg
std
add
call
push
ud2
xchg
add
adc
addr16
dec
mov
call
dec
xchg
dec
xchg
or
cmp
test
jl
inc
enter
adc
mov
cltd
stos
mov
in
pop
push
dec
push
xchg
jmp
cmc
lds
lods
xchg
ja
lds
xlat
ja
sbb
and
adc
jno
fsubrs
test
mov
cmp
push
xor
push
ret
incb
subb
flds
imul
cmp
jnp
das
dec
jbe
lea
cmpl
jp
mov
mov
jne
stos
insl
cmc
test
imul
sar
sar
xchg
jno
lsl
push
outsb
test
sub
add
xor
lds
rcrl
movsl
fxch
push
enter
add
xlat
add
das
pop
pop
jne
adc
sbb
push
push
jbe
sub
xchg
push
repnz
push
pop
ja
sbb
jmp
lea
addb
mov
repnz
insl
mov
testb
xchg
and
cmp
inc
or
mov
sbb
or
sub
sbb
movsb
nop
pop
pop
std
les
jnp
into
jno
push
je
aas
adc
aad
dec
aas
int
xchg
push
inc
out
mov
aad
xlat
pop
fnstcw
cmp
hlt
push
adc
mov
xor
cmp
jno
nop
xchg
xchg
jp
fcmovb
xor
mov
pop
lret
jp
pop
cmp
pop
pop
mov
pop
imul
sbb
add
push
dec
sub
out
int3
popf
xor
xchg
mulb
nop
rcll
mov
imulb
addr16
std
adc
xchg
pop
xchg
into
lock
roll
mov
xchg
mov
inc
push
aaa
mov
xlat
aam
sti
push
js
jl
es
hlt
xor
popa
sbb
stos
loope
lock
push
mov
adc
lcall
fnstsw
mov
cltd
pop
sahf
mov
fbld
sbb
or
pop
jno
test
inc
mov
or
xlat
mov
bound
cmpl
mulb
sub
in
push
fistpll
sbb
gs
lods
mov
sbb
sahf
adcb
clc
rol
sbbb
mov
ds
mov
and
adc
sahf
sbb
stos
dec
test
ja
rorl
jnp
repnz
pop
mov
nop
pop
add
pop
or
cmp
paddd
or
or
xchg
inc
negl
lcall
sbb
pop
add
inc
lahf
andl
adc
rcrl
std
mov
mov
fsubr
mov
xchg
cmp
adc
sbb
fwait
decb
add
mov
lahf
adc
pop
test
ficomps
test
cld
or
adc
incb
sbb
push
popa
xchg
inc
adc
adc
sbb
add
decb
in
push
sti
or
push
and
push
fstl
sbb
or
mov
push
sti
sbb
fwait
xor
dec
push
push
shrl
mov
xchg
xchg
add
pop
or
mov
nop
push
popf
inc
sbb
stos
sbbl
pop
aas
push
add
push
push
decb
pop
fistl
pop
adc
adc
pop
out
or
std
decb
pop
adc
xor
sbb
or
or
adc
xchg
sbb
fwait
nop
movsb
lock
test
movsl
sti
inc
scas
mov
pop
pop
rorl
lahf
xchg
pushf
stos
lahf
add
lahf
add
pop
lods
adc
idivl
adc
loope
mov
or
stc
adc
pop
popa
cwtl
icebp
sub
cmp
lahf
ficomps
js
cmpsl
jno
xchg
jge
sub
incb
push
les
cwtl
sbb
nop
aas
pop
je
and
scas
outsl
frstor
cs
idivl
jg
dec
fisttpl
push
out
dec
pop
cli
add
cld
jbe
mov
mov
andl
push
call
arpl
cmp
call
cmp
mov
pop
push
call
jl
fadds
mov
pop
adc
lods
cmp
sbb
or
mov
bound
cwtl
mov
lret
call
jne
fdiv
fildll
sbb
fistl
roll
xchg
cwtl
pop
rolb
fcmove
shrb
test
stos
jl
push
lock
lret
adc
mov
mov
mov
imulb
add
out
jb
call
adc
cmpsb
pop
fistpll
dec
ret
pop
out
jp
push
jmp
jecxz
xor
dec
test
xchg
jne
add
fidivl
out
pushf
dec
fwait
sahf
mov
mov
mov
pushf
adc
aam
jns
out
mov
pop
pop
or
in
frstor
jb
pop
jmp
out
rcrl
in
subb
ja
mov
dec
jbe
cld
jno
push
mov
popf
mov
in
icebp
int
int
aad
cmc
pusha
std
dec
icebp
pop
xlat
cli
ljmp
call
cmp
sub
cmp
cmp
pushf
lea
ja
cmc
imul
bt
cmc
bt
cmp
add
pushf
mov
pusha
pusha
lea
jmp
push
call
testl
je
add
jg
lea
xor
addb
sti
jmp
jne
gs
xor
fs
insb
add
add
call
lea
je
push
pusha
lea
jmp
enter
and
lahf
mov
jns
enter
sbb
jecxz
and
sub
cmp
dec
sbb
jp
es
in
mov
insb
cli
sti
out
ret
mul
sar
mul
test
addr16
cmc
pop
jmp
xor
jg
fcmovbe
dec
cmp
dec
cmp
dec
sbb
ret
andl
adc
ret
test
nop
fwait
cmpsl
scas
daa
scas
or
dec
lret
ljmp
jnp
dec
loop
testb
icebp
repz
mov
bswap
pop
movzbw
push
pop
pop
pushf
movw
pusha
push
mov
pushf
call
xor
mov
mov
stc
cmp
add
dec
push
insl
jl
push
pop
js
inc
cmc
dec
fsubrs
jmp
sub
mov
xlat
outsb
jns
xchg
add
and
dec
fwait
xchg
pop
divl
repnz
nop
mov
dec
sub
mov
scas
push
movb
inc
loop
mov
push
add
xor
mov
outsl
adc
xchg
fisttpl
mov
adcb
add
adc
out
push
call
and
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
jb
push
push
jbe
push
push
push
data16
jnp
fnstsw
pop
xor
jmp
out
or
mov
shl
dec
ja
mov
cmp
jb
mov
lock
inc
sti
inc
adc
push
adc
cmpl
shll
mov
dec
aam
ja
imul
mov
int3
pop
rclb
int3
inc
shrb
aas
aad
push
sahf
push
call
xchg
leave
sti
mov
in
loopne
enter
fisubrs
cmpsb
adc
cmp
mov
inc
adc
mov
or
sub
aam
clc
in
test
or
dec
jp
data16
push
inc
pop
inc
dec
inc
push
rol
inc
stos
mov
aad
xchg
orb
mov
push
xchg
scas
adc
mov
push
shr
sbb
cmpsl
and
inc
jbe
or
fistps
mov
cmpsb
pop
push
mov
enter
loop
jmp
dec
jmp
dec
sub
out
arpl
pop
cltd
or
pop
fucomi
dec
fmulp
fs
into
repnz
mov
imul
mov
enter
cmpsl
lcall
add
aas
aad
inc
jnp
pop
jns
cmc
inc
xor
mov
mov
sahf
mov
mov
lret
mov
mov
rolb
push
and
and
push
lock
fcoms
lahf
test
push
divl
adc
mov
mov
lods
sbb
cld
sbb
and
pop
sahf
or
push
push
shl
inc
sbb
push
or
icebp
or
lods
and
test
aad
aad
leave
inc
jmp
insb
icebp
push
push
sub
aad
add
adc
add
sbb
aam
inc
movsb
cwtl
mov
cltd
mov
pushf
mov
fs
dec
addb
jle
das
stc
cmp
ss
jno
loopne
sub
xchg
pop
aam
inc
divb
sar
dec
lds
hlt
push
or
aad
iret
outsb
mov
scas
jecxz
fs
push
fisttpl
into
repnz
jb
scas
mov
or
dec
jb
jb
pop
repz
jb
push
inc
shll
lahf
push
call
jp
int3
push
call
sarl
adc
ret
jo
add
inc
mov
scas
push
lea
jne
bswap
mov
movb
setae
lahf
mov
movzbl
push
pusha
lea
call
add
dec
gs
popa
addr16
outsl
js
add
aad
fsubr
and
add
cmpsb
push
test
movsl
push
daa
or
out
cli
xor
add
adc
xor
or
stos
pop
movsl
cltd
cmp
mov
adc
pop
push
mov
test
movsb
xor
loop
bound
sub
call
imul
pop
rcl
xchg
sub
fcoms
cmpsl
cmp
pop
imul
xor
push
jae
pushf
mov
setne
not
pushl
inc
mov
mov
jmp
or
pushf
pusha
pushf
lea
jne
lea
mov
mov
pushf
pushf
popl
clc
jmp
xchg
jmp
jmp
lods
test
lods
test
xchg
sbb
mov
ret
or
mov
sti
dec
fcoms
xor
outsl
lods
pop
shlb
mov
iret
fdiv
xor
out
out
pushf
mov
ret
pusha
cmp
add
inc
dec
test
and
ja
test
push
shrl
dec
mov
daa
jb
mov
inc
cwtl
mov
cmpsl
push
mov
aas
add
mov
cs
xor
xor
dec
push
call
andl
jns
push
clc
pop
push
rcrb
pop
jnp
push
pop
jae
push
dec
dec
inc
inc
repnz
dec
in
cmpsl
or
cmp
test
push
adc
pop
push
out
jno
js
fisubs
lret
sub
and
fdivl
data16
pushf
daa
daa
icebp
jl
lods
sbb
fwait
js
out
stc
call
dec
push
jecxz
fxtract
inc
rol
mov
fidivrs
mov
ds
xlat
jae
push
pop
cltd
pop
out
adc
mov
or
out
ret
popl
and
stos
add
sbb
cwtl
sbb
aas
rorl
sbb
pop
dec
xchg
dec
pushf
bt
shl
push
pushf
pushl
lods
cmc
cmp
neg
push
lea
ja
push
pushf
dec
pushl
cmc
push
pusha
rol
pushf
mov
inc
call
xor
cmp
adcl
inc
push
inc
jae
lret
jp
aam
lahf
fsts
ja
mov
aam
jne
adc
imul
shlb
push
lret
icebp
movsb
dec
mov
fcoml
ret
mov
cli
jl
sti
subl
sti
mov
imul
mov
pop
inc
xchg
rcrl
repz
pop
cmp
mov
xchg
xchg
cmpsl
ds
sub
rclb
shr
push
call
push
aas
insb
push
call
mov
jmp
xchg
loop
rorb
inc
pop
pusha
cmpsl
inc
xchg
mov
mov
mov
add
sbb
or
out
fisttpll
jmp
ja
cmp
addr16
je
cltd
mov
test
pushf
movsl
and
or
fucom
jge
lock
nop
mov
loopne
dec
hlt
addl
subl
std
push
out
rcrb
mov
cmc
hlt
jne
mov
lea
pop
cli
inc
fidivs
pop
lret
pop
into
xor
mov
outsl
pushf
pop
fisttpll
fs
pusha
imul
lret
xor
cmpsb
xor
jae
daa
adc
push
sarl
lea
push
das
es
xchg
and
je
je
out
stos
clc
subl
cmp
push
sbb
sbb
jecxz
dec
adc
xor
insl
enter
andb
hlt
sbb
cmpsb
jb
jnp
inc
mov
mov
ret
ret
addr16
imulb
pop
decb
outsl
xor
aaa
dec
clc
pushf
stc
pushf
rol
movb
pushf
inc
bt
cmc
mov
cmp
pushw
popfw
jmp
xchg
in
fcoms
imul
sub
xor
or
and
ljmp
lea
pop
outsl
lret
sub
orb
stos
imul
xor
and
call
sbb
jo
insl
rolb
cltd
ds
ss
cs
push
adc
rorl
fdivrl
nop
mov
mov
and
cwtl
cmp
add
cwtl
xor
fisubrl
sarb
call
cmc
and
xor
jl
adc
mov
pushl
ret
jg,pn
imul
mov
dec
mov
jg
push
bound
dec
pop
pop
loop
dec
jg
js
cmp
cmp
push
mov
lahf
pop
arpl
push
subb
pop
inc
push
loope
xchg
cmc
and
in
gs
cltd
mov
sti
jb
mov
push
loop
fwait
popf
std
clc
cltd
movsl
add
cmp
jne
aas
push
sahf
jnp
outsl
cmp
enter
fld
pop
hlt
jmp
mov
xchg
adc
cmp
xor
aas
int
imul
push
call
push
call
lahf
shll
push
call
jmp
add
call
pusha
jmp
xorps
push
pop
dec
pop
pop
jb
inc
push
lret
mov
scas
mov
xchg
loope
stc
andl
mov
xorl
repnz
xor
adc
mov
mov
jne
pop
cmp
gs
ljmp
adc
and
jle
mov
pop
inc
mov
imul
or
mov
mov
pop
scas
and
cmp
inc
push
call
adc
aad
addr16
das
arpl
or
add
pusha
add
mov
movb
pushl
lea
jmp
push
call
ja
push
enter
sbb
js
push
jecxz
add
xor
sbb
cmp
cwtl
ret
popa
in
sahf
mov
mov
mov
loop
nop
lods
lcall
mov
and
sti
cmp
loopne
cmpsl
dec
sahf
ret
xor
int3
cld
lea
incb
ret
enter
sbb
pop
sub
inc
sbb
mov
aam
gs
lcall
adc
aaa
scas
aaa
push
inc
fiadds
ficoms
mov
xchg
sbb
mov
xor
sbb
test
rol
bswap
and
movzbl
mov
neg
lea
cmp
ror
sub
shrd
and
pushf
btr
shr
shld
movb
bsf
mov
or
add
bsr
xor
adc
add
shl
shr
shl
ror
mov
pusha
shr
clc
call
mov
in
pop
dec
test
mov
sti
ffreep
sar
repz
push
rcll
mov
inc
sub
sbb
cmp
int
mov
jnp
outsl
aam
push
idivb
pop
cmp
jb
sahf
fdivrp
push
cs
subb
push
movsl
mov
and
inc
insl
xchg
lods
xor
cmp
dec
lret
inc
xor
push
lahf
push
dec
int
fisubrl
inc
in
dec
clc
dec
sarb
les
aas
lret
jecxz
cmp
add
mov
mov
not
call
lea
call
cmp
cmp
push
call
jmp
pushf
call
stos
or
sbb
sbb
aad
cmc
shl
rcr
in
sarl
push
fsubrl
fxch
rorl
cmpsb
mov
mov
push
test
out
add
pop
xor
inc
lcall
out
clc
inc
and
pop
int3
subb
push
imul
jge
sub
in
aaa
or
cld
loope
in
dec
sub
pop
push
repz
outsb
iret
jp
push
out
retw
outsb
sti
jp
inc
xor
int3
push
call
inc
nop
fsubrl
shrb
call
jmp
mov
test
out
rcrl
in
out
add
mov
es
inc
enter
ret
jno
cmp
pmullw
int
or
pop
insb
mov
les
inc
and
es
pop
add
call
fwait
cmpsl
nop
adc
sub
mov
sbb
leave
fcomps
sub
sub
aas
leave
cmpb
push
pop
add
shll
cli
mov
jmp
push
or
adc
mov
call
ror
xor
inc
fdivrl
gs
mov
dec
pushf
pop
loope
mov
push
ljmp
sbb
push
pushf
xor
jae
lea
rol
jl
bound
cmc
pusha
or
cmp
or
push
pop
xchg
add
clc
jns
mov
add
cmp
out
data16
xchg
outsb
mov
jbe
push
lret
outsb
xlat
pop
out
fists
xor
or
imul
sbb
push
or
xor
lcall
push
popf
inc
cmpb
je
mov
mov
mov
scas
mov
mov
sbb
ffree
enter
inc
imull
push
adc
dec
add
jne
call
fadd
cld
lret
cmp
scas
sub
stos
mov
repz
jae
mov
aaa
fcmovnu
inc
jg
jnp
inc
cli
outsl
push
out
rcrb
xor
mov
sub
ljmp
lods
adc
and
ja
sub
not
sub
or
inc
ror
cmc
add
test
bswap
sar
push
mov
shl
shr
neg
shl
mov
bt
add
jle
stc
repnz
call
push
call
sti
cmp
imul
add
dec
sbb
pop
add
insb
gs
iret
out
hlt
int3
ss
sub
or
mov
sbb
sub
and
sbb
xor
cmp
rorl
push
lahf
push
pop
aam
imul
mov
inc
dec
hlt
enter
out
aam
adc
lahf
ds
sub
in
inc
in
mov
xchg
jge
mov
in
dec
dec
cmpl
cwtl
cmp
xchg
dec
fwait
add
xor
cmp
mov
loope
in
icebp
push
cmpsl
add
xor
ljmp
ljmp
mov
xchg
mov
cmpsb
mov
test
sub
xor
repnz
insl
call
xor
in
pop
fst
push
cmp
and
xchg
lea
xchg
insl
lahf
or
push
adc
xchg
es
add
dec
icebp
fs
push
aad
loope
stc
push
fnsave
pop
test
push
cmp
stc
test
pusha
pushf
pushf
lea
je
jmp
push
call
bound
aam
adc
add
movsb
cltd
adc
in
mov
scas
cmpsl
mov
cmpsb
mov
mov
addr16
pop
addb
repnz
cmp
sti
jle
ljmp
mov
test
mov
lea
sbb
and
andl
xor
lea
jae
setbe
jmp
push
call
sub
arpl
in
popa
add
jne
push
push
call
insl
sbb
fcmovne
cmp
cmpsl
inc
jle
push
fnstcw
js
mov
push
pop
movsb
or
jae
out
ret
repz
pop
or
xlat
cmpl
outsl
dec
ja
jae
dec
jp
jp
adcb
add
das
xchg
add
clc
dec
popf
sub
sub
test
cmp
in
hlt
push
out
mov
imul
fldl
xchg
loope
cmpsl
push
dec
mov
or
into
mov
xorl
xor
add
xchg
push
lahf
push
call
movsb
jmp
cmc
cmc
cmc
cmp
call
xor
mov
fstpt
mov
mov
cmpsl
mov
scas
jp
add
adc
or
sub
push
xchg
adc
cmc
jo
lcall
js
cmpb
and
clc
pop
or
leave
movsb
ja
jmp
cltd
jg
das
jp
imul
imul
xor
cmp
push
dec
rolb
ror
cmp
add
es
push
fwait
adc
lds
ret
or
shr
pop
cli
ljmp
shll
call
xor
and
test
lea
jmp
push
call
cmp
aad
sub
add
add
repz
call
and
dec
or
add
push
call
out
cmc
pop
push
call
mov
movsb
pop
sbb
mov
mov
test
xchg
mov
mov
cltd
mov
adc
sub
push
je
std
mov
btsl
inc
adc
mov
mov
imul
or
push
popf
push
les
push
rorl
sub
imul
lret
pop
jl
fcomps
xchg
cmp
cli
sub
test
nop
sub
xchg
and
sti
jmp
clc
push
rol
push
inc
clc
shr
pushl
lea
je
jmp
add
push
imul
jb
add
mov
pushf
sete
lea
pusha
jmp
push
call
cli
je
ffreep
jmp
push
call
mov
aad
pop
call
inc
xchg
or
stos
jmp
adc
pop
jmp
je
dec
je
fs
inc
pop
jge
gs
push
les
push
in
popf
lods
mov
stos
ljmp
push
ror
fcoml
into
fwait
sbb
nop
xchg
cmp
and
xor
push
addb
cmp
int3
pop
mov
add
xor
cld
es
inc
pop
inc
adc
jmp
sbb
push
push
nop
adc
sbb
scas
js
mov
imulb
dec
ret
jnp
shll
sbb
xchg
mov
movsl
cmovnp
jecxz
mov
fidivrs
fidivrl
inc
outsl
xor
jb
negb
outsl
clc
mov
cld
shll
popa
xchg
sbb
movsl
cmovl
idivb
lods
jno
icebp
fistpl
add
daa
adc
push
xchg
dec
push
pushf
orl
mov
lods
mov
in
mov
in
adc
scas
orb
test
insb
pushf
push
xlat
push
inc
jecxz
out
jb
jp
jae
xchg
push
mov
sub
dec
or
push
jge
inc
shlb
xor
leave
push
call
in
sbb
cmp
push
insb
jge
push
push
inc
imul
je
xor
hlt
inc
js
xchg
mov
pop
cmpl
or
cmc
lahf
das
jg
adc
clc
cmpsl
std
ret
dec
pop
adc
decl
cmp
fisttpll
std
js
js
fldenv
testb
or
lds
dec
inc
fisubs
outsl
fidivl
pop
imul
fidivs
pop
stc
or
lea
jns
je
xor
shl
mov
shrd
shr
mov
pushf
lea
jp
pushf
sub
push
cmp
mov
shr
sub
pusha
cmpl
movb
movb
push
pusha
lea
je
and
push
mov
sbb
dec
stc
sub
clc
stc
shr
or
bt
mov
btr
pushf
shl
rol
add
movzbw
rol
add
lea
call
lret
lcall
inc
movsl
cltd
lods
test
lods
pushf
movsl
test
cmp
stos
aas
hlt
out
mov
sbb
jmp
mov
push
mov
dec
mov
int
pop
std
or
push
aad
cmp
cltd
pop
sub
repnz
add
xchg
cmp
jmp
outsb
mov
xchg
shll
sar
and
roll
mov
add
mov
cmpl
fiadds
arpl
jg
xor
scas
imul
adc
or
into
repz
ljmp
dec
jecxz
insl
push
mov
mov
sub
pop
fistpll
adc
xor
jle
xlat
dec
jne
inc
out
mov
xor
push
ja
cmc
and
sub
call
sbb
pop
into
cmpsb
icebp
jmp
out
adc
rcrb
jge
fcomps
xor
inc
lock
je
sub
sbb
ret
pop
roll
outsb
out
pop
out
incl
push
xor
adc
add
jp
ljmp
aad
and
or
add
push
je
add
in
dec
call
push
sub
fs
setp
not
call
lea
jae
cmp
push
clc
jmp
sub
pop
lds
pusha
jno
jne
push
inc
inc
inc
popa
inc
push
faddl
sti
sbb
mov
setge
jge
imul
loopne
push
in
aad
mov
xor
mov
ror
or
push
addl
shlb
and
jno
ficomps
sub
mov
or
inc
ja
mov
sub
sbb
out
addr16
ret
in
fstpl
fs
roll
fisttpll
xor
and
sub
js
push
inc
dec
insl
inc
pop
js
jo
in
imul
repz
nop
inc
pop
repnz
insl
aam
scas
sub
insl
inc
or
inc
ret
mov
dec
add
or
outsb
out
and
sbb
push
aad
add
push
pop
mov
cmp
cwtl
fmull
in
cmpsb
dec
fcmove
xchg
stc
ss
add
cwtl
jnp
mov
push
lahf
lret
mov
inc
or
out
addr16
jg
push
lret
xor
lods
push
call
out
or
rcrb
ja
add
mov
push
call
adc
cmpsb
mov
mov
mov
and
sbb
int
mov
lea
adc
sbb
add
mov
test
test
or
or
push
call
sbb
dec
pop
ds
mov
or
fmull
adc
add
or
or
mov
sahf
push
data16
pop
lahf
jle
clc
lods
xchg
mov
push
pop
lcall
into
jp
addr16
push
jecxz
loope
shll
sub
outsb
pop
fdivrs
mov
test
xchg
pop
push
mov
inc
ret
sbb
fs
ja
inc
lret
data16
push
jns
sahf
daa
sahf
add
sub
aas
mov
add
aas
lods
call
repz
sub
dec
sbb
add
int
stc
cld
shl
jnp
ret
pop
push
out
mov
mov
dec
xchg
cmp
fcoml
cmpsb
mov
mov
mov
sub
es
mov
mov
mov
shlb
mov
jmp
mov
inc
popa
popf
outsl
push
out
jb
addr16
outsb
or
mov
or
es
xor
xor
imul
outsb
pop
ret
imul
push
popa
dec
popa
fs
jne
dec
push
mov
push
push
outsb
mov
out
and
push
push
mov
rcrb
ret
xchg
mov
mov
out
sub
popf
xor
pop
jb
cld
pop
inc
in
pushf
mov
and
sbb
shrl
mov
push
repnz
pop
fisttpll
out
imul
pop
movsb
jb
xchg
mov
xlat
jbe
ficomps
fsubs
mov
adc
push
sti
jp
inc
ret
push
out
lcall
aas
mov
adc
call
jp
fs
jb
pushf
cmp
pushf
lea
ja
jmp
test
test
cmc
or
push
pushl
lea
je
bswap
jmp
call
lea
ja
push
pushl
cmc
cmc
imul
test
bt
clc
jmp
push
call
js
mov
and
xor
inc
and
repnz
movl
pushl
ret
jo
fildll
cmp
das
mov
sahf
scas
mov
mov
mov
sahf
or
lret
mul
dec
mov
dec
lret
nop
mov
aad
xor
clc
push
mov
stos
ds
inc
ror
pop
lret
pop
adc
pop
outsb
mov
adc
jae
mov
or
cmp
jnp
jecxz
cmpsl
mov
dec
rclb
sbb
jl
ret
add
scas
add
mov
subb
imul
ljmp
aas
mov
and
adc
cmc
hlt
and
push
cmp
aam
scas
cli
cmp
jge
lret
pop
lcall
push
mov
sub
das
and
js
test
mov
mov
mov
sbb
mov
xlat
inc
movb
aad
pop
inc
iret
push
adc
lea
xor
jg
lods
push
in
lea
pop
xchg
cmpsb
out
call
pushf
sub
mov
mov
inc
mov
pushf
inc
cmp
jmp
push
call
daa
into
lahf
jb
cmp
and
sbb
imul
repnz
pop
cmp
out
aas
incl
mov
fistpll
fcmovnu
sti
lret
xlat
inc
lret
test
jecxz
jbe
add
mov
pop
pop
mov
cld
jns
nop
fs
orl
das
dec
jb
out
inc
adc
sbb
add
pop
xchg
cmpsl
fwait
es
xchg
scas
push
mov
aas
mov
ffree
int
cld
pop
nop
test
mov
mov
mov
xchg
or
mov
pop
pusha
mov
and
sahf
adc
std
loopne
jo
je
mov
in
inc
mov
divb
or
pop
mov
adc
jno
call
inc
inc
ficompl
bound
xlat
cmpb
jb
es
adc
inc
mov
leave
lret
std
mov
or
pop
outsb
lahf
inc
mov
xor
pop
int
stc
fs
mov
stc
in
sbb
dec
jo
jno
ret
ljmp
notb
xor
add
mov
mov
scas
xchg
add
inc
fwait
cmpsl
cmpsb
pop
jne
rcll
lret
addb
dec
push
lods
dec
orb
mov
mov
pop
lods
mov
faddl
adc
sub
xor
jbe
add
add
enter
out
jne
add
scas
pusha
mov
pop
jne
jns
jne
imul
fs
mov
sub
adc
fisubs
int3
xchg
xchg
mov
icebp
xor
ret
push
into
xchg
movsb
cmp
adcb
pusha
adc
shl
and
add
xlat
subb
jno
jno
aam
ja
sahf
sarb
cmpsl
push
xchg
cltd
data16
and
nop
sub
xor
cli
mov
xlat
decb
push
jnp
mov
or
and
or
sbb
daa
cmp
lcall
push
fs
aad
aad
inc
lods
jnp
fldenv
jle
or
and
pop
ficomps
xor
push
sbb
sbb
sub
and
mov
pop
pop
inc
imul
aad
mov
pop
adc
sub
jge
jge
push
hlt
pop
int3
imul
xor
pop
adc
jae
dec
pop
push
bound
arpl
fwait
stc
push
mov
movsl
jle
in
xor
dec
lods
xchg
inc
push
jns
inc
leave
pushf
xchg
push
das
in
imul
repnz
ret
ja
jnp
xor
xchg
pushf
aas
or
mov
dec
sbb
and
adc
sub
cmp
mov
push
ficoms
add
cmp
sub
iret
lock
cmp
xchg
lods
xchg
pop
rcl
xlat
jg
mov
dec
xorl
clc
xor
ret
fsubs
sbb
jb
xchg
pop
xchg
repz
mov
mov
lock
cmp
add
daa
xchg
xor
xor
xor
cmp
add
loope
xor
add
mov
imul
imul
push
jmp
xchg
xor
sbb
mov
jns
cld
jmp
imul
int
push
push
mov
loop
lods
std
inc
mov
pop
cltd
sbb
jmp
xadd
les
fxtract
outsb
test
jns
shl
push
rclb
push
rclb
lock
call
popa
shlb
test
shr
dec
add
dec
dec
cli
jl
lea
jbe
push
clc
pushf
mov
movzbw
bsr
add
rcr
inc
neg
setge
mov
push
test
add
shld
movl
stc
neg
mov
bt
test
call
push
call
cltd
inc
add
insl
cld
mov
scas
jns
push
jo
pusha
jns
insl
fs
jmp
out
sub
ret
sti
push
push
pop
jmp
and
push
fwait
lods
shll
xor
xchg
pop
pushf
push
fistpll
les
jo
jl
jns
mov
shll
fs
mov
imul
jg
sbb
sbb
imul
int3
or
add
mov
xor
xchg
test
inc
outsb
jae
pop
jle
inc
imul
shrl
push
test
jge
sti
leave
lret
mov
jle
scas
fisttpl
adc
mov
sahf
xchg
pop
rorl
leave
fisubs
out
dec
enter
pop
mov
jns
mov
test
lods
or
cmp
aad
cmp
adc
xorl
stos
add
rcl
outsl
pop
ja
outsb
arpl
jp
mov
mov
push
lods
xchg
pop
in
add
fbld
cmpsl
fsubp
jg
jbe
scas
cltd
or
add
mov
inc
mov
jmp
xor
in
sbb
pop
out
arpl
movsb
add
jmp
xchg
cmp
sub
mov
mov
pop
mov
add
jle
push
pop
stos
testl
fsubr
in
adc
sbb
icebp
insb
sbb
stc
cltd
mov
push
add
test
fdiv
fsub
hlt
int
inc
fcoms
dec
inc
jl
clc
push
fs
mov
addr16
push
insl
adc
sbb
xor
hlt
data16
pop
into
jg
fisubrl
add
outsl
push
push
jb
into
mov
mov
xchg
or
cmp
mov
or
push
call
lcall
std
mov
xchg
push
shl
aad
or
add
cs
sub
mov
gs
out
add
jecxz
loope
xor
aad
push
lret
and
jns
in
cld
mov
jge
push
inc
jns
dec
jo
fs
aam
dec
ret
jge
inc
lret
mov
inc
adc
or
dec
loope
cmpsb
lcall
out
std
je
or
or
mov
inc
and
xor
jns
stc
dec
adc
or
xchg
mov
das
mov
xchg
aas
mov
repz
dec
sbb
test
push
imul
sbb
add
adc
or
xor
mov
or
sub
add
arpl
inc
insb
push
rol
imul
je
add
in
jl
loope
or
inc
in
shrb
fdivrl
lret
or
and
out
sbb
lods
subb
dec
pusha
js
and
fdivl
push
add
cmc
pop
es
ja
mov
mov
inc
cmc
push
int
fstps
inc
in
shll
push
call
mov
and
call
jmp
sbb
inc
in
ja
mov
in
outsl
xor
in
insb
lods
xchg
insb
faddp
hlt
cmc
aam
lock
in
cmc
lock
js
xchg
adc
rolb
adcb
scas
xchg
test
push
pop
pop
test
std
push
das
loope
xor
sub
nop
insl
fistpll
xor
imul
jnp
std
mov
cltd
cmp
or
or
or
adc
adc
pusha
insl
push
iret
xchg
stos
pushf
xor
jmp
mov
out
or
hlt
jmp
test
nop
ret
lret
enter
aaa
or
lret
xlat
pop
popf
call
insb
les
nop
cmpsl
xor
in
lret
imul
arpl
pop
addb
or
js
insb
xor
ror
subb
sbb
cld
dec
cld
int3
andb
pop
inc
repnz
ljmp
jae
push
lret
mov
jo
mov
push
pop
outsb
outsl
pop
addr16
pop
jle
data16
loopne
hlt
adcb
cmp
push
je
mov
xchg
push
sub
push
sbb
loop
and
jp
jno
dec
mov
into
daa
out
mov
jge
and
shr
movsb
mov
les
in
addr16
or
push
dec
addr16
adcl
pop
xor
scas
cli
push
inc
leave
xchg
fwait
pop
fbstp
sub
fwait
nop
outsb
clc
jge
mov
imul
je
js
dec
fldl
js
jo
pop
addl
lds
cmpsb
push
pushf
xor
in
xchg
push
xor
inc
pusha
mov
jmp
repnz
jo
clc
lods
or
lahf
push
fistl
sub
sub
adc
pop
adc
inc
jae
xor
movzbl
cmp
sbb
inc
jb
sahf
test
jb
push
icebp
and
sbb
inc
test
fsubl
xchg
cld
in
xor
ds
inc
sub
lret
stos
inc
sti
rep
es
lar
dec
pop
std
dec
inc
push
xor
pushf
cmp
test
pop
cmp
push
or
sar
lea
mov
subb
out
push
loopne
push
popa
in
int
sub
mov
mov
push
mov
fwait
add
add
je
sbb
jle
cli
ljmp
aad
repz
ds
push
call
movsb
xchg
push
call
mov
shrl
call
movsl
mov
push
call
pop
jb
mov
lret
dec
sahf
mov
mov
mov
and
lret
push
cmp
jmp
pop
dec
cwtl
xor
das
sahf
mov
test
dec
adc
repnz
xchg
sahf
int3
out
sub
scas
pop
dec
stos
imul
test
sbb
mov
xor
inc
or
mov
sbb
mov
jmp
arpl
fildll
sbb
push
push
push
ljmp
cmpsb
imul
jno
push
fcoms
imul
cmp
stc
jl
ss
add
es
pop
push
pop
push
adc
or
popa
add
pop
arpl
and
or
push
pop
cwtl
sbb
fst
add
push
dec
mov
adcl
stos
fisttpl
cmc
cmpsb
rorb
adc
push
pop
movsl
push
icebp
sub
or
mov
outsb
dec
loop
lret
push
arpl
outsl
out
xor
stos
push
call
fs
insl
push
call
lds
pop
out
xchg
pop
loop
adc
sub
xor
adc
adc
and
test
push
mov
jb
into
pop
push
les
das
imul
je
xor
cli
int
ret
add
sbb
jno
int3
lcall
sbb
jle
xlat
jb
sbb
pop
cs
dec
dec
test
dec
mov
dec
je
cmpsb
pop
mov
enter
fistps
cmp
repz
pop
ret
jnp
pop
cli
arpl
pop
loop
xor
data16
jecxz
dec
out
push
dec
addr16
cmc
leave
in
stc
enter
aam
fdiv
rclb
iret
pop
dec
xlat
xchg
fildll
test
xor
jmp
jl
fildl
call
cmpsb
out
outsl
cmp
leave
pop
or
push
lahf
daa
leave
loope
cmpsw
add
jle
dec
jecxz
and
xchg
push
cwtl
sbbl
xchg
movsl
and
gs
mov
xlat
add
xor
mov
pop
fsubrs
pop
lock
pop
xor
loope
adc
int
sbb
add
pop
inc
fsubp
ja
sar
push
mov
or
add
sbb
or
adc
aad
bound
adc
cwtl
call
ljmp
adcb
jmp
js
mov
xchg
lahf
jmp
mov
cmpsl
nop
sub
loopne
insl
cmc
or
popa
xor
leave
push
shll
es
aam
test
sub
inc
jle
pop
loop
arpl
jnp
push
pop
lret
lods
insb
js
push
call
pop
int
lea
jae
pusha
cmc
pushf
cmp
jmp
pop
or
mov
sub
cmp
sbb
cmp
add
and
sbb
pop
fs
sub
loopne
divw
test
rolb
das
pop
pop
test
lcall
jnp
out
mov
roll
lods
enter
or
enter
rcl
nop
cmpsl
jb
dec
inc
mov
push
add
add
je
or
repz
jmp
adc
push
cli
inc
outsl
loop
pop
fiadds
push
xor
sub
add
cmc
addr16
arpl
add
pop
dec
mov
stc
das
and
sbb
push
sub
das
push
adc
aas
addb
cltd
int3
sti
inc
adc
push
rorb
imul
fstpt
imul
test
add
adc
push
mov
fnstsw
cli
inc
cltd
std
cmp
mov
stos
out
dec
icebp
or
add
mov
cli
pop
mov
fistps
addl
or
sub
bound
xlat
dec
pop
int3
dec
mov
cmpsl
mov
cmp
ds
mov
insb
xor
cs
insb
add
push
dec
jo
pushf
and
mov
cwtl
test
or
stos
sub
mov
fsubrl
mov
jmp
loop
dec
fmuls
mov
add
cmc
jae
mov
xchg
adc
mov
adc
fidivrs
cmp
sub
das
xchg
cmp
call
inc
decb
xchg
xor
sub
jbe
push
mov
mov
mov
jns
sub
sbb
aas
stos
je
dec
icebp
loopne
outsl
clc
movsl
mov
lods
adc
xchg
sbb
or
jno
xor
int3
inc
aad
movsbl
mov
inc
hlt
cmp
lea
test
sbb
sbb
mov
mov
pop
in
cmp
mov
lcall
bswap
inc
and
jnp
jnp
aas
test
adc
xchg
call
ja
push
call
orb
push
call
adc
rolb
or
jp
mov
mov
mov
mull
xlat
cmc
xchg
inc
repnz
jb
mov
popa
pop
nop
push
mov
xor
mov
rcll
pop
out
jp
push
insl
pop
mov
and
outsb
jbe
add
mov
dec
cld
pop
adc
loope
dec
jne
jno
aad
mov
fstl
lds
js
insb
fnstenv
jo
aas
stos
aaa
lods
jnp
mov
xlat
xchg
mov
test
xor
test
arpl
out
add
add
pop
lahf
sbb
jmp
dec
inc
push
push
cwtl
and
ljmp
mov
pop
xchg
or
and
adc
stc
and
lcall
addr16
cmpsl
push
or
jns
xor
repnz
xchg
fisttpl
stc
adc
subb
roll
pop
mov
hlt
popa
shlb
hlt
pop
int3
inc
fdivl
xor
and
loop
clc
cmc
hlt
and
adc
ds
sub
es
add
cmpsb
das
cmc
dec
pop
add
hlt
xchg
jnp
dec
inc
jl
dec
decb
jecxz
out
adc
aad
aam
push
faddl
lret
inc
inc
mov
aam
scas
sub
xor
les
cmp
ror
push
add
inc
nop
mov
inc
stc
push
mov
jnp
test
dec
sahf
popa
shrl
mov
mov
push
push
daa
mov
fcoms
aaa
mulb
push
int3
xchg
and
xchg
fsub
je
ret
mov
pop
leave
fsubp
cmp
cld
xor
cmp
xlat
testb
xchg
fldenv
adc
push
add
lods
imul
and
cltd
or
xor
outsl
jl
bound
inc
ror
out
popa
mov
rcrl
and
mov
lahf
sbb
daa
xchg
sahf
mov
jnp
push
out
push
push
lcall
or
cwtl
fldenv
jl
xchg
daa
cmp
mov
mov
adc
stc
rolb
div
iret
test
sbb
call
lods
sub
jae
ret
pusha
xchg
loope
mov
insb
int
add
xchg
imul
pop
int3
inc
les
dec
in
aas
cmpsl
push
xchg
scas
jo
xor
cwtl
cmp
push
mov
pop
dec
pusha
inc
js
jl
push
js
cmp
push
in
pop
adc
lock
outsb
or
lea
mov
in
arpl
rcrl
es
es
std
test
mov
mov
xor
pop
stc
int3
xor
shll
daa
and
or
movsb
popf
sub
and
xor
add
add
aas
cmpsl
mov
pop
cs
mov
cmp
xor
inc
loope
mov
repnz
mov
push
jl
xchg
dec
call
orb
adcl
or
jge
jne
jge
push
dec
mov
sub
sti
dec
mov
mov
pop
jne
mov
repnz
sub
cld
jne
xchg
sub
ja
xchg
push
or
xor
adc
lock
push
mov
or
aas
cmpsb
movsb
inc
xchg
sub
jbe
rorl
jp
pushf
cltd
xchg
cltd
orb
mov
adc
mov
adc
dec
mov
outsl
jmp
js
xorl
lds
mov
mov
dec
fldt
stos
lods
ss
repz
pop
xchg
and
pusha
xchg
cmp
pop
gs
mov
lret
xchg
push
pop
jmp
push
icebp
mov
outsl
repnz
xchg
jbe
jbe
xchg
pop
in
push
sbb
call
andb
pop
sahf
xor
add
cltd
dec
ja
adc
pop
call
cld
adc
call
add
cs
push
call
fists
fistps
dec
inc
ja
mov
test
mov
cmpsl
sahf
js
push
cwtl
pop
ja
aam
push
sbb
sbb
mov
out
jmp
cmc
xchg
add
adc
sbb
cmp
add
pushf
sub
filds
dec
inc
jge
and
push
jnp
cmp
es
add
pop
sub
mov
mov
pop
cli
or
cmpsl
mov
stos
gs
ljmp
dec
iret
outsb
out
inc
sti
push
iret
push
repz
aas
movsl
fmull
xor
add
dec
call
hlt
push
call
dec
mov
movzwl
clc
mov
bt
jmp
push
call
xor
lds
daa
push
pop
cmp
add
cmp
or
xor
incl
leave
hlt
gs
push
int
iret
inc
rolb
pushf
cltd
or
sahf
repz
pop
pop
pop
psadbw
mov
dec
mov
mov
fsubr
rcrl
sbb
jo
insl
jp
xchg
movsb
sub
out
push
outsl
stos
shlb
and
test
jbe
data16
inc
out
jmp
and
push
inc
jg
cmp
out
jb
repnz
jge
aas
movsb
jecxz
xlat
add
pop
pop
enter
push
xchg
scas
scas
mov
xchg
imul
and
ss
imul
jmp
jg
and
into
repnz
inc
xchg
jae
sahf
add
xlat
adc
inc
xchg
cmp
fucomp
int
lds
das
cmp
shlb
dec
jo
test
sbb
movsl
mov
rcrl
setle
int
add
popa
pop
clc
jno
and
pop
push
jb
mov
cmp
mov
and
es
xor
aas
movsb
test
push
and
mov
repz
adc
sbb
mov
fisubl
cmp
adc
lret
jl
in
ljmp
in
push
fadd
cmp
ffreep
pop
loop
push
adc
adc
repnz
add
jmp
je
pop
les
xchg
stos
cmp
cmpsb
stos
xchg
icebp
scas
xchg
adcb
out
cmpsl
add
adc
sub
sub
and
shr
push
call
lods
mov
adc
and
jne
sub
cwtl
sub
cmp
not
clc
shrd
mov
shr
adc
add
and
mov
push
pushl
test
test
push
pusha
push
pushf
lea
je
pusha
jmp
push
call
repz
cmpsl
repnz
pop
lea
mov
xchg
cwtl
cltd
add
adc
mov
aad
dec
call
ret
aad
dec
hlt
div
mov
jbe
dec
call
push
repnz
jle
mov
lods
xchg
adc
mov
mov
mov
mov
push
push
mov
sbb
test
repz
in
shlb
out
push
sub
out
fucomi
fcomi
jmp
repz
inc
aam
roll
sbb
pop
cld
data16
into
pushf
out
shl
dec
adc
fwait
out
popa
rclb
pop
cmp
push
daa
xchg
ret
jg
adc
xchg
push
fsubrs
popl
sti
cmp
push
push
push
pop
fnstcw
mov
testl
rol
in
jle
jb
dec
ret
addr16
jnp
pop
lret
xor
pusha
stos
loop
xlat
add
loopne
out
jmp
sti
repnz
ret
sub
mov
icebp
cs
mov
and
inc
je
xchg
fsubl
xor
in
ds
incl
int
repnz
in
in
push
das
in
pop
ss
mov
jmp
stos
imul
cmp
aaa
cmp
mov
ret
cmp
ss
push
ljmp
adc
scas
jns
push
clc
jge
out
mov
cmp
nop
and
cmp
into
add
int
dec
lahf
mov
mov
mov
push
lahf
mov
inc
sbbl
cmp
push
lret
ss
xchg
scas
push
pop
fbstp
pop
decb
cmpl
cmp
push
test
das
stc
fs
cmp
rol
mov
push
or
lock
addr16
inc
push
ljmp
test
cltd
rorl
dec
ljmp
push
testb
ja
outsl
xor
mov
daa
call
cmp
scas
cmpb
mov
pushf
lea
jne
or
setge
bsf
sub
pushf
mov
sub
push
neg
add
push
mov
movb
stc
clc
test
pusha
jmp
dec
cmp
mov
adc
add
adc
or
cmp
xchg
jne
sbb
in
iret
pop
jne
sub
enter
cmp
outsb
push
xchg
push
ja
insl
and
mov
and
in
inc
mov
fisttps
inc
in
inc
idiv
ret
call
xchg
cmpsb
adc
test
scas
push
lahf
es
mov
push
lahf
xor
jne
add
es
call
out
jb
test
pop
jb
ficoms
push
aaa
mov
adcl
xchg
mov
xchg
xchg
aas
stos
loope
add
es
cmp
ret
add
and
add
rorl
sbb
mull
mov
sbb
pop
dec
insl
int3
mov
pop
mov
mov
adc
cmp
mov
aas
lahf
push
cli
pusha
lea
jae
jmp
push
test
sub
or
xor
sbb
sbb
daa
es
cs
xchg
mov
dec
cmp
dec
stc
lods
jae
xor
jmp
mov
sub
mov
push
scas
jns
lods
das
inc
out
mov
xor
rcrb
leave
ja
sub
jmp
lods
ss
sbb
or
mov
testl
cltd
dec
outsb
fbld
jbe
jb
jp
jle
push
iret
xor
js
add
dec
addr16
stc
scas
jecxz
push
repz
shrb
adc
sbb
and
xor
fimull
lret
pop
xor
rcrb
and
movsb
in
jns
ret
add
dec
lods
fwait
or
cmpsl
mov
outsb
int3
stc
adc
xchg
fsubrs
jno
popfw
fisubrl
and
sub
or
test
nop
test
sub
pushf
sbb
xor
mov
aas
popf
imul
cmp
sub
sbb
loopne
data16
push
pop
fisttps
dec
mov
test
sbb
loope
push
sbb
arpl
adc
leave
call
loope
icebp
clc
popa
int3
adc
mov
inc
repnz
or
cmp
rcrl
push
xchg
xlat
dec
lods
fwait
cmpsl
nop
inc
or
push
cmp
dec
iret
lcall
movsl
cmp
push
test
or
stos
cmp
adc
xor
xchg
xchg
call
push
mov
pusha
lea
jmp
push
call
mov
adcl
lods
inc
movsl
jae
ja
inc
jb
jle
data16
ret
push
inc
jbe
mov
cmpsl
and
mov
fbld
aaa
sbb
mov
outsb
xchg
arpl
mov
iret
repz
sbb
bound
adc
mov
xor
stos
mov
cmp
or
cmp
jge
push
dec
inc
jne
fwait
or
xchg
cmp
or
push
mov
pushf
aam
hlt
dec
mov
pop
scas
mov
out
repnz
xlat
nop
repnz
inc
jmp
fisttpl
xlat
data16
jbe
xor
inc
push
call
xchg
aam
sub
mov
dec
jmp
std
bound
and
add
addl
sub
lods
addr16
mov
imul
jmp
rolb
xor
cmpsl
ds
int3
adc
xchg
or
dec
xor
out
push
dec
add
mov
and
data16
pop
mov
test
dec
sub
gs
xlat
data16
xlat
push
testl
aas
xchg
int
std
clc
loope
rcr
lock
inc
mov
mov
outsb
iret
clc
pop
std
cmp
pusha
imul
mov
lea
repnz
mov
jno
pop
ret
add
outsl
xor
js
enter
call
out
ss
mov
xchg
lods
nop
cmp
add
inc
and
push
leave
inc
std
push
aas
pushf
push
lea
fs
jo
push
insl
insb
imul
inc
int3
jge
lods
add
aam
mov
fs
stc
or
jne
dec
cmp
xlat
jmp
shll
jb
pop
fbld
jp
jp
aas
fwait
sub
aad
mov
leave
cmp
add
roll
add
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
aam
out
mov
adc
cmc
call
ficomps
inc
fwait
call
scas
iret
lds
aad
xchg
call
psadbw
push
call
cwtl
call
cmp
mov
adc
sbb
sub
sub
cmp
mov
imul
pop
movsl
adc
xchg
push
pop
or
data16
iret
aas
mov
mov
dec
cmpsb
gs
push
inc
mov
mov
imul
out
inc
inc
outsb
les
movsl
push
xchg
dec
xor
sub
shlb
lods
in
fcoml
aas
lds
loopne
rorb
mov
or
clc
les
jno
jge
pop
int3
les
pop
xor
adc
aad
xor
dec
aaa
add
mov
lea
je
cmc
cmc
call
pusha
movw
stos
movb
pushf
lea
jmp
push
call
ds
call
sbb
or
cs
call
adc
sbb
dec
lods
ret
mov
into
rcl
lret
sar
fcmove
out
outsl
rol
js
test
cmpb
pop
nop
and
std
cmp
scas
jg
pop
xor
lds
test
push
mov
gs
repz
mov
fcomps
jno
out
add
je
xchg
adc
xchg
ret
xlat
mov
scas
hlt
insl
dec
fs
subb
es
xchg
fcoml
scas
adc
and
shll
push
call
inc
stos
add
pop
push
call
iret
addb
mov
lock
nopl
cmp
xor
xor
scas
cmp
jnp
xlat
cmpsl
mov
fwait
inc
mov
inc
mov
lret
cmp
pop
jmp
xchg
xchg
lea
bound
call
fdivl
push
fsubs
xor
pop
push
call
les
in
loope
fxtract
rol
inc
lock
cld
jno
jge
insl
int3
push
aam
call
xchg
out
adc
and
inc
xchg
aas
sub
korw
insl
cld
imul
push
subl
aaa
lcall
and
sbb
xor
xor
mov
mov
lods
stc
in
movsb
or
inc
pop
add
push
xor
fidivrs
and
and
out
shrb
cmc
mov
xchg
push
stos
mov
cltd
fiaddl
leave
pop
ja
xchg
fisttpll
js
adc
xor
cmpsl
repnz
pusha
pop
pop
cmpb
push
ret
bound
push
pusha
push
jge
mov
and
adc
arpl
pop
in
fldt
add
or
jnp
sbb
sbb
and
sub
adc
add
pushf
xor
xchg
jl
in
shll
add
mov
mov
jge
pop
scas
sti
mov
push
outsb
pop
int3
xchg
test
jae,pn
dec
cld
mov
int
push
inc
sbb
int
sbb
fisttps
jp
cmp
nop
lods
inc
test
and
pop
mov
or
out
sbb
sub
xor
sar
inc
stc
pop
inc
mov
cmp
mov
xor
lds
insb
int
in
pusha
jmp
inc
xor
jmp
push
call
sub
adc
dec
call
lds
sti
ret
clc
add
add
adc
jg
and
loopne
rcll
ljmp
cmpsl
push
push
repz
out
add
push
cltd
and
xchg
push
xlat
jmp
sbb
or
arpl
sbb
xor
mov
aad
test
in
push
pop
pop
xlat
movsl
lret
das
push
scas
push
push
out
rorb
adcl
and
xor
xchg
inc
lahf
mov
push
pusha
cmp
sub
stc
test
pushl
popl
stc
cmp
call
in
mov
adc
aam
adc
jmp
gs
sub
aas
mov
sti
jnp
fmuls
cmp
dec
jmp
cmp
lock
sbb
push
cld
add
test
mov
hlt
iret
incb
mov
scas
das
cmp
out
xchg
stos
sub
xchg
inc
rcrl
sub
setb
inc
inc
mov
fstps
dec
sbbl
cwtl
xor
xchg
jb
dec
push
call
ljmp
xor
cs
imul
arpl
jle
push
roll
push
xor
fdiv
stos
jl
push
inc
imulb
and
mov
and
insl
push
loopne
sahf
stos
pop
sub
xor
mov
or
inc
test
and
push
pop
sbb
dec
pop
mov
dec
mov
shrl
iret
push
pop
into
cwtl
arpl
loopne
sub
sahf
or
icebp
int
jmp
js
dec
cmc
js
push
xor
fisubrs
and
pop
es
cmp
xor
adc
aam
mov
je
outsl
scas
sahf
dec
sub
sbb
jg
sub
data16
and
push
dec
jg
dec
pop
pop
mov
push
pop
push
pop
xor
fistps
sub
push
jg
pop
sub
lcall
inc
jp
fs
pushf
sti
ss
inc
hlt
enter
mov
daa
push
cmpsl
cs
lods
mov
cld
jne
gs
hlt
inc
fmuls
pop
fdivl
lods
cmp
outsb
fisttpl
ffreep
lret
repnz
sti
loop
push
jecxz
jp
repz
decl
xchg
mov
push
aas
push
sub
adc
push
stos
or
xor
dec
les
add
out
xor
arpl
pop
xchg
test
aad
adc
sub
inc
pop
lahf
insb
mov
clc
cmp
call
sub
mov
dec
jecxz
jg
add
xorb
inc
in
clc
in
in
pusha
rcll
leave
insb
cmc
dec
icebp
inc
xor
cmp
adc
inc
call
mov
dec
ljmp
jecxz
jmp
repnz
js
js
fs
fs
movsl
out
cs
cmp
mov
test
and
addb
aaa
sahf
daa
xchg
add
cltd
dec
ja
hlt
push
push
lea
jmp
ror
mov
jmp
push
call
insb
ret
sar
push
call
adc
shll
call
aam
add
movsl
call
shl
jb
cli
scas
jecxz
nop
or
or
cmp
pop
adc
gs
cwtl
or
rclb
xlat
nop
outsl
xor
ljmp
arpl
loop
push
in
lret
cmp
ljmp
fnstenv
inc
addl
int
xorb
in
add
jp
dec
jo
jo
sbb
push
pop
pusha
dec
enter
lock
pop
lock
rcrb
aas
xchg
push
xchg
pop
movb
lea
jae
bt
stc
jmp
push
call
and
dec
push
call
je
shl
jnp
xor
aad
jmp
addr16
and
pop
inc
push
jnp
push
inc
dec
jp
pop
inc
inc
or
cli
jecxz
push
stc
sarl
pop
dec
sub
into
pop
add
test
aam
aad
loopne
push
fdivrl
pushf
push
sbb
cli
decb
jb
jp
mov
xchg
lock
mov
ljmp
js
icebp
in
jno
jmp
jg
inc
js
in
fdivrs
jno
insl
fdivl
jge
xor
and
or
hlt
mov
aad
ret
iret
out
imul
jl
cmp
jnp
xlat
enter
cs
push
mov
inc
pop
xchg
and
rclb
pop
fstpl
lods
divb
inc
push
pop
jns
in
push
pop
sahf
or
stos
sbb
testl
jl
xorb
add
jl
jecxz
inc
jne
insl
cmp
xor
lret
jb
and
mov
jecxz
xchg
stos
mov
and
cmc
fs
inc
cmc
push
lds
in
je
xor
test
cmp
add
lahf
sti
push
call
and
icebp
in
fists
lcall
sbbb
roll
add
cld
pop
inc
jge
iret
or
inc
nop
xchg
mov
mov
push
push
jne
ret
inc
test
pop
test
test
lret
testl
fsubp
aad
lock
je
mov
dec
jmp
pop
add
mov
pop
sub
call
push
add
lods
add
inc
popl
scas
add
sbb
aas
xchg
push
popl
jnp
push
ljmp
push
dec
pop
imul
jae
push
bound
arpl
dec
rcrl
jnp
sbb
aad
fdivrs
mov
icebp
sahf
cmp
mov
adc
push
xlat
mov
adc
cmp
push
iret
lods
push
hlt
mov
pop
jl
pop
ret
andl
out
mov
push
mov
mov
aaa
sahf
cmp
mov
shrb
add
pushf
adc
aas
nop
scas
xor
cmp
test
mov
mov
subb
or
push
insl
je
pop
cltd
sub
jl
adc
mov
dec
mov
aad
addr16
jns
jl
mov
push
pop
inc
ds
cvtps2pi
lret
addl
jle
fwait
in
test
jno
pop
aas
add
loop
mov
mov
std
cld
in
jl
pushf
lods
xor
mov
xlat
jp
push
outsb
repz
jecxz
aas
nop
push
pop
daa
test
pop
jle
push
bound
inc
dec
outsl
inc
ja
push
push
arpl
arpl
icebp
icebp
ja
cwtl
xchg
lret
int3
add
push
fisubl
insl
clc
mov
pop
pop
lret
fistpl
stos
xchg
adc
das
fs
fldl2e
jmp
icebp
ret
fcompl
mov
jnp
imul
ficoms
arpl
fsubrs
js
pop
icebp
lods
cmpsl
gs
xor
addr16
addr16
pop
jle
ljmp
sti
fs
aam
enter
mov
cmp
inc
xlat
notl
lret
adc
leave
out
shll
mov
mov
std
cmp
cmp
mov
test
cmpsl
add
pop
jne
out
rol
fildl
je
mov
adc
das
mov
stos
aaa
xchg
daa
xor
ja
shl
stos
setnp
not
not
call
mov
movw
stc
call
push
call
pop
inc
sbb
add
xor
cli
jmp
add
pushf
rcrb
cwtl
sub
incl
fs
call
xchg
xor
cltd
push
xchg
adc
stos
jecxz
outsl
mov
xchg
sbb
and
mov
sub
inc
mov
xchg
stos
mov
sub
jne
push
cmp
jne
mov
cwtl
stos
rcrl
mov
jl
inc
mov
inc
fistps
mov
aad
lods
xchg
add
add
sub
jb
ljmp
cmp
sub
ficoml
in
lds
iret
or
das
push
adc
movhps
push
aaa
and
push
clflush
sub
xchg
cli
xor
sub
adcb
mov
or
loopne
int
lret
sbb
inc
sub
out
jg
icebp
test
rol
testl
push
fstpl
dec
lds
stc
dec
shll
push
call
add
dec
cli
scas
cmp
mov
cwtl
popf
mov
mov
jbe
in
mov
xchg
ret
daa
sbb
mov
pop
push
sbb
jnp
int
out
addl
fwait
loop
fwait
xchg
sbb
jb
sub
fcoms
sahf
pop
sbb
xchg
jecxz
or
rcrl
add
or
lds
fs
push
sub
stc
insb
std
pusha
jmp
push
xor
or
jo
pop
int
xor
cmp
push
pop
jbe
inc
ja
cmp
scas
push
mov
xor
ret
jns
cmp
inc
test
loop
fs
shlb
shll
loopne
jl
rclb
mov
fisubs
add
dec
push
mov
dec
outsl
inc
sbbb
cmp
jb
lahf
lret
into
cmp
cmc
or
jmp
sub
loopne
repz
pop
int3
dec
fsubrs
adc
dec
and
decb
out
sbb
lret
push
jmp
jecxz
rcrl
dec
jecxz
jp
aas
mov
or
bswap
mov
pushl
mov
push
push
pushl
ret
inc
lea
push
lea
call
pusha
push
pushf
adc
jmp
push
call
or
adc
out
push
call
imul
movl
pushf
pushf
pusha
call
push
call
sbb
cld
mov
lret
repnz
add
mov
jl
outsl
sarl
sub
cmpsl
pop
xchg
in
lret
xlat
lret
ror
repnz
fcmovnbe
arpl
inc
lret
addb
stc
mov
pop
mov
lock
aam
push
fimuls
mov
xchg
mov
repz
xor
jbe
mov
out
pushf
fcomi
jge
outsb
xchg
lcall
leave
push
ffree
popf
xchg
jo
jo
gs
loop
or
adc
adc
xor
out
add
adc
adc
jne
mov
lea
mov
pop
push
lea
jmp
pushf
stc
add
jmp
fldl
mov
mov
dec
stos
dec
std
mov
stos
lods
pushf
mov
iret
or
aad
dec
orl
fs
js
shlb
jecxz
repz
and
pop
mov
out
clc
sarl
fstpl
insb
cmc
dec
xor
pop
leave
push
inc
xchg
inc
xor
out
out
into
shl
out
lret
fists
inc
jns
inc
leave
pop
pushf
sbb
add
and
sub
xchg
test
pop
ljmp
test
loope
orl
clc
or
mov
xchg
cmp
out
dec
sti
jbe
int3
aaa
popf
repnz
adc
jno
fldcw
cmp
or
cmp
add
mov
add
push
call
cmp
add
lock
lods
cmc
pusha
push
cmpb
jmp
pusha
jmp
inc
jecxz
jmp
cmova
test
jge
dec
jl
jo
pusha
jno
popa
pop
stc
pop
int3
jns
cltd
cltd
and
sbb
cmp
enter
add
sbb
imul
and
add
aas
rcrl
mov
inc
lods
outsl
adc
repnz
cld
shlb
sbb
jne
sub
int3
lods
mov
mov
fxrstor
or
lods
or
push
pop
dec
fsts
fidivl
xchg
and
sbb
aas
mov
pop
inc
bound
push
inc
jg
push
outsb
mull
push
or
add
aad
repnz
or
insb
ljmp
push
xchg
outsb
mov
jnp
in
in
repnz
xor
push
push
loope
ret
dec
push
rolb
arpl
push
inc
loope
xchg
sub
xchg
std
shrl
mov
xlat
std
cmp
shlb
cmp
inc
call
shr
jmp
sti
stos
xchg
lcall
mov
mov
mov
add
aad
inc
push
fs
mov
cmc
mov
popf
enter
das
icebp
shlb
out
cmp
xchg
or
lods
mov
dec
test
cmp
ds
mov
cld
mov
add
mov
sub
or
lret
movsb
sub
nop
adc
mov
sbb
outsl
fidivs
xchg
xchg
lcall
xchg
lcall
daa
xor
xor
mov
jecxz
jb
pop
cmp
pop
aas
int
ja
data16
loopne
xor
fildll
fdivrs
jmp
and
popa
loopne
or
adc
imul
jnp
adc
pop
adc
pop
push
pop
sahf
sbb
subl
ret
lea
mov
in
fdivl
gs
int3
rorb
xor
jns
push
int3
jmp
inc
and
fwait
and
call
call
sub
xchg
push
jb
fmull
imul
repnz
sub
popa
mov
mov
mov
mov
cwtl
jmp
or
pop
call
mov
out
rcrb
addr16
inc
and
xor
mov
inc
jle
das
popf
ret
imul
insb
loope
push
test
xchg
hlt
sub
out
loopw
inc
xchg
stos
mov
xorl
mov
xor
cmp
jb
stc
call
push
call
jmp
cmp
pop
mov
push
ret
add
lds
cmp
lcall
add
add
add
adc
sbb
inc
aam
lods
aam
and
popf
ljmp
sub
outsl
aaa
dec
jb
jecxz
jb
es
dec
mov
adc
adc
jecxz
arpl
shlb
mov
mov
add
adc
xchg
daa
push
outsw
lret
jne
sbb
push
xor
sub
push
add
leave
sbb
push
or
mov
pop
add
or
xor
ds
es
and
ror
adc
cmc
push
sbb
lock
lret
fsubrl
js
loope
arpl
or
push
das
shll
mov
and
pushf
adc
push
sahf
dec
lahf
mov
cmp
add
leave
sbb
xor
fs
loopne
rorl
sub
and
add
and
and
lcall
mov
mov
pop
cmc
dec
orl
jns
or
jo
addl
mov
sbb
cmpl
lret
push
stos
outsb
xor
insl
hlt
cmpsl
xor
adc
shll
mov
andb
mov
sbb
jb
in
cmp
push
mov
mov
or
test
mov
pop
out
outsb
sbb
pop
dec
stc
xchg
sti
sbb
pop
pop
add
jno
xchg
bnd
jae
sbb
call
repz
rcrb
out
ja
cmp
add
fnstcw
cmp
clc
not
mov
xchg
ja
pop
fistps
mov
dec
pop
jne
stos
add
lods
not
xchg
add
fs
ret
and
pop
jg
sub
rcrb
js
decl
sbb
jle
comiss
in
out
in
pop
push
faddp
jl
sbb
arpl
pop
cmc
adc
call
fucomip
mov
xchg
xchg
adc
xchg
fistl
nop
fisttpll
in
mov
mov
fldl
in
test
adcl
lahf
lock
in
fistpl
xchg
fstl
in
xchg
fistl
fists
lahf
mov
jae
rclb
popf
jo
dec
aaa
xchg
mov
xchg
icebp
sbb
sbb
mov
cmp
out
mov
iret
into
mov
xchg
adc
mov
xchg
nop
sbb
scas
mov
fwait
mov
pop
addr16
sbb
jle
sbb
cs
jg
or
mov
lahf
nop
dec
into
stc
cld
sahf
lahf
movl
out
jle
mov
pop
repz
repnz
iret
outsl
repnz
xor
testb
xchg
nop
xchg
divl
xchg
push
mov
pop
std
or
sbb
lahf
or
push
xchg
sbb
test
std
and
cltd
jo
jle
push
std
inc
fwait
sbb
std
sbb
sbb
push
adc
stos
sbb
dec
adc
lcall
mov
mov
add
pop
pop
in
sbb
sbb
push
xchg
pop
sbb
fstpl
ficoms
adc
xchg
sahf
mov
jle
mov
fildl
xchg
push
sub
fldl
fstl
in
sbb
popf
xchg
sbb
adc
pop
cmp
ja
std
push
cmp
ret
fdivrl
adc
push
aas
sbb
push
sahf
push
std
jbe
adc
out
xchg
or
dec
fwait
pop
pop
paddsw
jmp
or
popf
out
out
jmp
pop
xchg
in
enter
xchg
fwait
inc
data16
repnz
negb
test
mov
pop
inc
push
sahf
mov
pop
negb
dec
shlb
shl
lahf
mov
outsb
pop
jg
mov
mov
jle
sbb
fwait
lret
roll
push
pop
movsl
movb
lahf
lret
imul
aas
ja
lock
xlat
fidivrs
pop
xchg
sahf
push
orb
push
notl
xchg
mov
sbb
movsl
push
sti
push
arpl
lock
stos
mov
nop
aad
jmp
in
xchg
pop
ds
inc
push
jnp
movsl
push
xchg
pusha
sbb
sbb
fwait
rclb
in
loopne
xchg
xchg
add
out
and
nop
fwait
inc
pop
push
in
popa
fisttpl
mov
pop
test
loope
add
std
lahf
test
and
lcall
push
frstor
in
xchg
pop
call
sub
mov
out
push
clc
adc
sbb
cltd
xchg
mov
and
sti
or
iret
mov
mov
add
lahf
pop
xchg
push
push
sbb
movsb
mov
adc
sbb
jmp
jecxz
movsb
fisttpl
mov
popf
pop
in
pop
bound
fistpl
adc
adc
data16
fwait
jge
cmp
lahf
xchg
push
fistps
outsb
sbb
hlt
loop
push
adc
xor
mov
add
dec
mov
popf
je
inc
push
push
pop
lahf
test
jmp
sbb
pop
nop
mov
decl
cli
mov
pop
call
dec
xor
loopne
scas
fcmovne
xchg
xadd
mov
pop
and
inc
fcmovnu
xchg
lahf
out
iret
scas
pop
adc
fstpt
loope
es
jmp
dec
subl
mov
fwait
nop
lds
stos
jge
sbb
add
sti
cmpl
push
cmpsl
push
xchg
pop
push
pop
adc
xchg
dec
sbb
pop
xchg
in
adc
pmaxsw
pop
pop
in
adc
adc
adc
adc
fisttpll
or
or
adc
pop
stos
xchg
out
orb
adc
in
lods
ret
push
xchg
push
adc
orl
sahf
add
fwait
lcall
dec
mov
xchg
dec
fbld
dec
clc
hlt
adc
sarl
in
mov
xchg
pop
sbb
cs
fbstp
ret
jmp
mov
xchg
push
pop
xchg
push
add
add
lea
and
lods
loop
jno
or
adc
pop
stos
jecxz
jne
sub
xchg
aad
cld
nop
in
push
cmpsl
add
decb
xchg
or
or
xchg
pop
decb
or
out
or
or
pop
sbb
sub
fbstp
adc
cld
mov
pop
das
sahf
lahf
aaa
lahf
sbb
orb
cmp
fstl
fwait
xchg
pop
adc
fisttpl
xchg
test
pop
push
in
adc
seta
out
pop
fldl
setle
std
pushf
sbb
xchg
out
adc
adc
or
push
xchg
add
into
mov
cmc
popf
mov
sbb
fstl
fwait
lea
or
mov
xchg
pop
test
lcall
sbb
pop
loopne
pop
xchg
xchg
adc
out
or
inc
or
xchg
test
adcl
into
xchg
push
sbb
xchg
pop
xchg
pop
adc
in
decb
fisttpl
iret
js
push
pop
fwait
in
sbb
lcall
out
mov
mov
add
sbb
fstl
fwait
xchg
pop
in
fisttpl
add
cmp
mov
mov
fldl
sbb
sbb
and
std
push
xchg
popf
jl
mov
or
test
add
pop
popf
sahf
cld
xchg
pushf
lcall
xchg
adc
out
or
or
test
add
incb
sbb
xlat
ja
mov
xchg
aad
mov
decb
stc
xchg
mov
lcall
sbb
cwtl
sbb
in
adc
adc
or
xchg
or
out
add
sbb
xor
sbb
xchg
nop
decb
pop
or
pop
fildl
fstpl
in
adc
adc
fldl
in
cmpb
xchg
nop
push
out
or
pop
fwait
add
add
inc
call
out
xchg
fstl
adc
fldl
push
pop
out
sbb
sbb
or
sbb
xchg
push
adc
adc
adc
or
test
add
mov
xchg
fstl
mov
mov
or
xchg
xchg
sbb
xchg
popf
cltd
pop
xchg
in
adc
adc
std
paddd
or
test
add
sbbb
xchg
fwait
sbb
push
in
xchg
fistl
out
lcall
fldl
xchg
repz
sbb
xchg
fistl
pushf
jbe
lcall
in
mov
mov
push
in
xchg
fstl
fwait
mov
or
pop
fildl
pop
pop
ss
xchg
pop
adc
fisttpll
fwait
push
pop
add
push
out
xchg
fistl
cmpb
bswap
xchg
fwait
xchg
pop
paddsw
nop
in
xchg
fstl
sbb
push
in
adc
seta
out
cwtl
fstl
in
or
push
xchg
sbbb
jne
out
test
in
push
fisttpl
out
lcall
fisttpl
xchg
add
in
adc
push
fwait
mov
pop
in
cmpl
xchg
xchg
push
out
xchg
add
pop
aam
sbb
pop
in
adc
ja
out
leave
cli
adc
in
fisttpl
add
pop
xchg
fistps
in
adc
mov
or
mov
sbb
pop
adc
or
add
xor
lcall
in
or
sbbb
xchg
push
mov
add
pushf
fwait
xchg
pop
xchg
in
mov
xchg
shr
cwtl
fstl
in
xchg
add
mov
pop
out
adc
push
fwait
or
xchg
add
leave
mov
fisttpll
fwait
mov
xchg
cmpl
xchg
mov
mov
xchg
popf
push
std
sbb
cwtl
xchg
push
adc
push
fisttpll
fwait
xchg
orb
xor
or
or
repnz
xchg
out
fisttpll
repnz
lcall
mov
add
xchg
fistl
xchg
in
xchg
jp
pop
sbb
mov
fnstsw
or
inc
jecxz
adc
pop
roll
decb
push
pushf
sbb
push
add
ja
push
fwait
and
addl
dec
add
cli
xchg
sahf
adc
cmpsl
xchg
jae
cwtl
fwait
dec
sahf
aaa
push
cmp
xchg
push
xchg
cmc
sbb
test
mov
sti
xchg
adc
sbb
sbb
adc
or
cld
pop
add
push
dec
lsl
jae
cltd
push
mov
sbb
pop
sbb
ja
out
fwait
inc
adc
or
push
mov
cmc
xchg
in
lahf
icebp
loopne
or
push
stos
mov
cwtl
add
push
mov
sti
or
inc
sbbb
out
add
sub
push
jp
test
cmpsl
imul
sbb
cmpsl
mov
stc
test
push
or
pushf
in
decb
cld
or
or
xchg
mov
mov
sahf
xchg
or
or
cwtl
mov
pop
xor
jns
ljmp
adc
add
mov
push
sahf
xor
pop
mov
jmp
or
andl
repz
nopl
xchg
cld
push
outsb
testl
mov
sbb
xchg
negl
aam
xchg
cli
out
popf
push
or
mov
sahf
xchg
in
add
ja
jp
xchg
xchg
repnz
cli
xchg
incb
sub
popf
or
cmc
sbb
push
in
clc
nop
aam
adcl
adc
icebp
sbb
or
sbb
fwait
xchg
push
cld
andb
sbb
or
xchg
add
fwait
pop
xchg
sbb
or
xchg
push
sti
popf
and
push
pop
push
int
xor
int
sbb
mov
pop
mov
stos
add
or
xchg
cli
lahf
xchg
sbb
cwtl
out
add
sbbl
or
jae
ljmp
xchg
cmc
push
cmp
xchg
in
lock
clc
adc
aad
xor
cli
add
mov
add
push
std
mov
testb
insl
in
add
jae
jbe
sbb
cmpsl
sbb
add
addr16
fwait
pop
sbb
push
stc
mov
ss
xchg
adc
or
testb
lods
clc
mov
xchg
adc
test
cli
add
mov
fsin
sbb
or
xchg
push
push
in
ret
add
sbb
aaa
push
add
ss
adc
xchg
call
xchg
mov
add
imul
mov
add
jb
call
fnstenv
dec
jo
cld
add
mov
jg
xchg
mov
xchg
test
mov
pushf
and
cmpsl
push
addl
push
lcall
and
jl
bswap
iret
xor
test
sbb
xchg
movsl
xor
jnp
adc
xchg
add
dec
stc
push
testl
rcrb
xchg
or
pushf
imul
mov
gs
clc
push
cmc
mov
pop
movsl
jae
pop
bnd
ja
jnp
outsl
into
imul
aas
js
mov
fucomip
ljmp
pop
adc
arpl
dec
mov
shrb
sbb
movzbl
btr
mov
call
not
mov
pusha
pushl
mov
pushf
lea
jmp
pusha
pushf
push
mov
push
movb
mov
lea
jmp
jmp
test
add
pusha
mov
mov
movb
movb
mov
lea
jmp
push
pushf
pushf
mov
pushl
pushf
lea
jmp
pusha
jmp
push
push
mov
pushf
movw
pushl
lea
jmp
add
cmc
mov
test
stc
shld
mov
pushl
movw
pusha
mov
lea
ja
pusha
movb
pushf
pushf
popl
call
pushf
lea
jle
pushf
pushf
pusha
push
pushl
popl
pushf
pushf
pushf
pushf
lea
jmp
cmc
not
cmp
stc
cmc
xor
stc
xor
jmp
lea
cmp
jmp
jmp
bt
test
add
jmp
jmp
rol
neg
bsr
mov
rol
mov
pushf
clc
pushf
add
pushf
mov
pushl
lea
jmp
mov
pushl
mov
push
mov
lea
jmp
movl
jmp
pushl
popf
pusha
push
push
lea
jmp
mov
pushf
pushl
push
pusha
lea
jmp
std
xadd
lea
btr
mov
lea
dec
pusha
mov
movzbw
mov
or
bsf
mov
cwtl
bt
mov
bsr
sar
sub
mov
movzbw
bt
bswap
pushl
popf
pushl
lea
mov
mov
push
movzbw
call
stc
sub
cmc
test
add
movb
movb
sub
call
mov
pushf
call
btr
mov
pusha
cmp
stc
call
mov
bsf
call
call
mov
call
cmc
call
sub
cmc
jmp
lea
jb
add
pushf
mov
pushl
push
movb
mov
lea
jmp
mov
cmc
sub
clc
shr
pusha
lea
js
mov
push
lea
jnp
push
pushf
popl
jmp
jmp
pushf
cmp
cmp
shl
call
pusha
stc
stc
add
jmp
bsf
mov
shld
ror
setge
mov
mov
stc
mov
call
pushf
pusha
pushf
mov
pushf
mov
pushf
popl
mov
pushl
popl
pushl
pushf
pushl
movb
lea
jmp
call
pusha
movb
pusha
mov
pushf
pushf
pushf
mov
lea
jmp
pushf
popl
mov
pushl
popl
movb
pusha
movw
pushf
lea
jmp
add
pusha
push
stc
cmc
cwtl
stc
cmp
sub
push
movl
pushf
mov
pushf
mov
lea
jmp
pusha
sub
jmp
mov
fildl
test
fiaddl
enter
cmp
fiaddl
xor
fiaddl
call
push
fildl
adc
fiaddl
test
fiaddl
dec
add
add
push
fildl
and
add
sbb
add
push
fildl
test
fiaddl
cmp
fiaddl
xor
fildl
test
fiaddl
loopne
fiaddl
clc
and
add
add
add
add
add
fildl
enter
test
fiaddl
rcrb
add
add
add
push
fildl
call
and
add
test
add
mov
add
in
add
cmp
add
mov
fildl
test
fiaddl
rclb
adc
add
fildl
test
fiaddl
pusha
out
add
js
add
add
add
sbb
add
js
add
adc
add
in
add
loop
add
or
add
sbb
add
add
add
push
fildl
mov
fildl
enter
cwtl
sub
fildl
pusha
adc
fildl
clc
and
add
pop
fildl
pop
dec
fildl
cmp
fiaddl
lock
add
fiaddl
xor
fildl
dec
add
add
fildl
cmp
add
fildl
push
mov
add
neg
add
fildl
lock
add
fiaddl
push
sub
add
fildl
add
add
adc
add
call
fildl
and
add
cmp
add
push
fildl
pusha
adc
fiaddl
mov
fiaddl
or
add
loop
add
imul
add
inc
fildl
pusha
out
add
mov
fiaddl
cmp
fiaddl
jo
fiaddl
cwtl
and
add
icebp
fiaddl
add
fildl
cwtl
sub
fildl
mov
fiaddl
loopne
fiaddl
mov
call
fildl
jo
fiaddl
call
neg
add
add
add
inc
fildl
loopne
fiaddl
cwtl
pop
fildl
fadds
fildl
enter
mov
fildl
enter
jo
fiaddl
enter
enter
mov
fildl
enter
shl
add
in
add
xor
fildl
or
fildl
clc
and
add
inc
fildl
push
add
add
inc
fildl
enter
and
fiaddl
enter
mov
fiaddl
lock
add
inc
fildl
xor
fiaddl
push
sub
add
inc
fildl
cmp
fiaddl
xor
fiaddl
enter
enter
call
stos
fiaddl
enter
adc
add
xor
fiaddl
enter
mov
fildl
enter
mov
fiaddl
enter
enter
loopne
fiaddl
cwtl
sub
fildl
mov
fiaddl
adc
fiaddl
adc
fiaddl
enter
adc
add
add
add
fildl
mov
add
or
add
call
fildl
dec
cmp
add
sbb
add
add
add
cmp
add
cmp
add
fiaddl
add
fildl
shl
add
fiaddl
mov
out
add
call
fildl
add
fildl
or
fiaddl
push
mov
add
and
add
imul
add
and
add
fiaddl
mov
fiaddl
enter
mov
fildl
pop
dec
fildl
loopne
fiaddl
mov
fildl
lock
add
fiaddl
cwtl
pop
fildl
lock
add
icebp
fiaddl
or
fiaddl
pusha
adc
fiaddl
and
fildl
adc
fiaddl
pusha
xchg
add
dec
fildl
jo
fiaddl
push
mov
add
sbb
add
add
add
push
fildl
loopne
fiaddl
pusha
xchg
add
sbb
add
push
fildl
pusha
out
add
sbb
add
add
push
outsl
inc
mov
pusha
push
movb
lea
jmp
movb
jmp
xchg
call
call
pushl
popl
movb
lea
jmp
movw
call
pushf
jmp
shr
shrd
stc
mov
add
rol
and
add
jmp
call
pushf
cmc
add
push
mov
pusha
movb
pushf
pushl
ret
sub
pushf
cmp
cmc
call
call
rep
xadd
cld
not
mov
rol
cld
pushf
mov
sub
jo
pushf
pushl
popf
mov
lea
jmp
aam
cmc
mov
push
stc
bt
cmc
sub
lea
jns
pushf
pushf
mov
pushf
mov
pusha
pushf
lea
jmp
bsr
pushf
bswap
movzbl
dec
or
bsf
and
xor
and
shld
add
ror
not
bsr
pushl
and
or
bt
sbb
mov
bt
sub
movb
push
mov
push
push
lea
jmp
lea
or
dec
btr
and
not
bt
mov
pushl
sub
pushf
mov
mov
pushf
pusha
std
movzbl
movsbw
xchg
pop
mov
movsbw
not
pusha
pushl
lea
lea
jne
std
push
std
movzbw
mov
push
pusha
cld
cld
movb
rep
inc
call
pushf
inc
call
mov
push
mov
movw
pushf
lea
jmp
push
call
pushf
call
pushf
push
call
push
pusha
pusha
mov
bts
rcl
movsbw
shl
mov
cmp
test
push
movl
add
push
push
mov
movw
movw
movb
lea
jmp
cmc
bts
cmc
btc
mov
pushf
sar
sbb
mov
push
bt
bt
sub
movb
clc
cmc
call
pushf
call
sub
and
jmp
or
mov
push
pushl
sub
call
mov
pushf
pushf
lea
jmp
bswap
mov
movb
lea
lea
setp
mov
movzbl
mov
mov
mov
pushl
ret
mov
push
lea
js
pushf
pushf
popl
push
push
pusha
pushl
popl
movb
lea
jmp
jmp
call
jmp
mov
mov
push
lea
jmp
pusha
mov
mov
movl
movb
lea
jmp
push
pushf
popl
pusha
pusha
call
jmp
push
mov
push
pushf
lea
jmp
push
pushl
popl
push
lea
jmp
shl
shrd
mov
sbb
mov
btc
add
shl
shrd
bts
mov
rcl
bt
rcl
xor
add
btr
sub
neg
jmp
cwtl
movzbl
not
push
not
lea
mov
pusha
lea
cpuid
jmp
pusha
pushl
popl
pushl
pushf
mov
mov
lea
jmp
mov
pushl
pusha
push
lea
jmp
shrd
rdtsc
cmc
bt
sub
pushf
call
rol
movzbl
pusha
stc
test
push
xor
pushf
not
stc
push
pushf
ror
clc
call
jmp
pushl
popl
pushl
lea
jmp
test
cmp
add
push
push
push
lea
movb
pusha
call
call
jmp
rcl
adc
rol
mov
dec
shr
cmc
add
jmp
dec
shrd
clc
movzbw
lea
cmp
jmp
pushl
inc
movw
not
pushf
cmp
test
lea
push
pushf
bt
neg
jmp
not
bt
push
stc
not
call
pusha
pusha
mov
pushf
lea
jmp
add
pusha
std
stc
bt
pushl
popf
movl
pushf
lea
jmp
pusha
mov
pushf
pushl
lea
jmp
inc
pushf
mov
pushf
mov
cmp
xchg
call
cld
test
jmp
add
mov
mov
jmp
pusha
call
call
pushf
bt
pushf
add
pushf
pushf
mov
movl
pushl
call
clc
sub
jmp
mov
mov
movb
lea
jmp
mov
pushf
bt
jmp
test
inc
xor
clc
bt
btr
call
inc
cwtl
not
sub
mov
clc
clc
pusha
bswap
cmc
pushl
jmp
bt
stc
xor
mov
call
call
inc
bswap
movzbl
bsf
dec
bt
pushf
setne
pushf
xor
push
pusha
pushl
inc
dec
or
sub
neg
not
btc
add
xor
adc
xor
sbb
xor
cmp
mov
pushf
add
call
mov
movb
call
clc
cmc
stc
pushf
pushl
popl
pusha
call
call
pushf
cmp
cmc
sub
clc
cmp
call
mov
je
push
add
pushf
mov
pushf
pusha
mov
jmp
jmp
push
movb
pushl
popl
pushf
lea
jmp
clc
sub
cmp
shl
jmp
shl
shld
or
bsf
mov
bt
clc
test
add
push
pushf
mov
lea
jmp
movb
movw
pushl
popl
mov
pushl
pushf
lea
jmp
add
pusha
mov
mov
pushf
movw
push
pushf
lea
jmp
and
push
mov
call
mov
pushf
mov
pushf
mov
mov
pushf
lea
jmp
pushl
popl
movw
lea
jmp
push
jmp
pusha
mov
ror
add
add
mov
pushf
cmc
cmp
not
call
jmp
inc
jmp
cmp
neg
cmc
mov
add
jmp
divl
mov
call
aam
not
mov
sar
push
mov
call
clc
movsbl
mov
clc
mov
jle
pushf
cmp
pusha
add
pusha
mov
pushf
pushl
lea
jmp
push
setae
mov
push
movb
mov
jmp
pushf
pushf
call
pushl
popl
pushf
pushf
lea
jmp
mov
pushf
pushf
pushf
pushf
popl
call
mov
push
lea
jmp
add
add
jp
sub
push
pusha
mov
pushf
pushf
movl
push
lea
jmp
sub
mov
pushl
push
mov
pushf
pushf
lea
jmp
call
mov
pushf
bswap
push
mov
push
push
mov
movzbl
mov
not
pusha
mov
jmp
shr
call
pushf
popl
pushf
pushl
popl
pushf
pusha
lea
jmp
or
mov
call
call
pusha
cld
xchg
pusha
mov
call
push
movl
movb
mov
pushf
pushf
pushl
pushf
lea
jmp
jmp
and
ror
bsr
mov
clc
jb
test
add
pusha
movb
push
pusha
pushf
popl
call
rcl
not
movzbw
sbb
mov
neg
pushf
mov
call
pushf
pushl
popl
mov
lea
jmp
cmc
xor
pushf
cbtw
stc
clc
pushf
cwtl
pushf
sub
push
dec
jmp
pushf
ror
jmp
jo
pusha
pusha
pushf
popl
call
cmp
sub
pushf
movb
mov
pushl
lea
jmp
neg
mov
mov
jmp
pushf
popl
call
mov
pushf
clc
pushf
bt
sub
movb
pushf
movw
dec
mov
movb
pushf
call
jmp
pushf
push
push
mov
pushf
mov
pusha
movb
lea
jmp
movw
pushf
movb
pushf
popl
movb
pushl
popl
movb
pushf
lea
jmp
pusha
mov
test
inc
inc
mov
mov
movb
sub
cmc
call
mov
mov
pushf
pushf
mov
movb
pushf
push
pushf
lea
jmp
jmp
push
jmp
bsr
mov
clc
pusha
sub
movl
jmp
call
pushf
dec
jmp
neg
pushf
stc
sub
jmp
jmp
pushf
rcl
mov
lea
ror
xor
pushf
mov
clc
jmp
cmc
stc
or
cmp
clc
stc
xor
push
jmp
mov
mov
mov
pusha
pushl
lea
jmp
pushf
mov
pusha
pushf
pushl
pushl
lea
jmp
lea
jne
call
push
lea
js
pusha
push
mov
mov
lea
jmp
pushf
mov
cmc
xchg
cmc
pushf
cmc
add
push
call
pushf
popl
movb
pushf
call
mov
pushf
pusha
mov
pushf
mov
push
pushf
lea
jmp
pusha
mov
call
cmp
sub
call
xor
mov
adc
mov
rcl
mov
pushf
clc
push
add
mov
cmp
pushf
shrd
pushf
mov
lea
jnp
pushf
jmp
jmp
mov
inc
stc
not
stc
bt
call
jmp
push
dec
movzbw
stc
movsbw
shl
xor
btr
ror
not
cmc
ror
sbb
movzbw
and
bt
mov
cmp
add
pushf
pusha
push
mov
push
pushl
push
lea
jmp
call
call
pushf
popl
pushf
jmp
jmp
pusha
not
jmp
movb
pusha
mov
pushf
pusha
lea
jmp
pushl
mov
not
movzbw
not
dec
neg
add
bswap
shl
sub
neg
pusha
ror
mov
pushl
pushl
add
push
push
pushl
movw
mov
pushf
movb
push
push
lea
jmp
mov
cld
cld
jmp
mov
call
mov
not
call
push
bt
not
test
test
jmp
jmp
call
das
shld
mov
shr
cmp
test
mov
jmp
pushf
jmp
push
pushf
push
mov
pusha
mov
push
pushf
lea
jmp
bswap
shl
xadd
shld
movzbl
mov
movzbw
sub
not
inc
pushf
jmp
push
jmp
push
pushf
mov
mov
push
pusha
movw
lea
jmp
pusha
call
jmp
mov
pusha
pushf
push
mov
lea
jmp
push
mov
movb
pusha
lea
jmp
lea
ja
das
bts
cmp
mov
bt
aad
lea
not
adc
shld
sub
das
call
rcr
pusha
das
dec
mov
sub
dec
mov
bt
call
mov
movb
call
pushf
push
mov
push
pushl
lea
jmp
rol
adc
shl
inc
mov
pusha
xor
pushf
not
push
movw
clc
clc
ror
jmp
mov
jmp
pusha
mov
jmp
mov
pushf
push
push
mov
lea
jmp
clc
cmp
push
pushf
call
cmp
and
pushf
pusha
jmp
cmc
rol
push
test
mov
lea
lea
jp
push
clc
cmc
add
pushf
push
movb
call
pusha
mov
pushl
mov
pushf
push
pushf
lea
jmp
mov
mov
mov
movb
pushf
lea
jmp
mov
btr
stc
cmc
clc
add
rol
shr
xor
sbb
lea
neg
mov
pusha
cmp
shl
clc
cmp
test
cmp
shr
jmp
pushf
popl
pusha
movb
pushl
popl
pushf
lea
jmp
rdtsc
setbe
mov
not
bsr
rol
stc
mov
jmp
pushf
movl
pusha
add
jmp
neg
cmp
add
bt
pushl
cmc
sub
lea
jno
pusha
push
mov
pusha
lea
jmp
pusha
mov
movw
mov
lea
je
mov
mov
pusha
mov
not
lea
bswap
jmp
pushl
popl
pushl
lea
jmp
call
jmp
popl
pushf
mov
pusha
lea
jmp
movsbw
mov
call
pushl
popl
push
lea
jmp
cmc
cmc
cmc
mov
cmp
mov
push
mov
cmp
cmp
sub
cmc
shl
push
push
pusha
mov
push
call
movb
pushl
popl
pushf
push
push
pushf
lea
jmp
pushf
pusha
setl
dec
lea
rol
not
rcr
call
sub
call
pushf
pushf
popl
jmp
aas
btr
bsf
mov
seta
bts
xor
mov
pushf
clc
stc
push
add
pushf
lea
jns
pusha
mov
mov
push
pushf
pushl
lea
jmp
lea
rcl
mov
clc
pushl
popl
lea
xchg
pop
movl
movzbw
adc
shrd
not
mov
inc
neg
seta
ror
bt
pop
bswap
lea
bswap
ror
dec
mov
shl
lea
shld
call
pushf
popl
pushf
lea
jbe
popl
pushf
pusha
pusha
pushf
lea
jmp
call
cmc
shr
jmp
mov
jae
push
mov
pusha
mov
pushf
pushf
lea
jmp
call
add
push
pushf
lea
jge
pushf
call
mov
pusha
push
lea
jmp
jmp
pushf
popl
jmp
jmp
jmp
movsbw
movzbl
movsbw
pushf
popl
sbb
rcl
xchg
rcl
cmc
not
jmp
mov
mov
lea
jmp
sub
mov
push
mov
push
pushf
movl
lea
jmp
call
push
mov
decl
movl
movb
jmp
mov
pushf
pushl
ret
cmp
jmp
bts
clc
mov
add
and
mov
bt
push
jmp
ror
sbb
mov
pusha
cmc
add
pusha
mov
pushf
jmp
jmp
pushf
movb
mov
pushl
pushf
pushf
mov
lea
jmp
add
mov
pushf
push
lea
jmp
movzbw
pusha
bswap
call
call
and
jmp
mov
push
movw
jmp
pushf
jmp
sub
jo
add
jmp
mov
bts
lea
cmp
add
mov
movb
cmc
clc
stc
pushl
popf
pushf
mov
lea
jmp
push
mov
push
movw
lea
jmp
xor
cmc
pushl
stc
call
pushf
pushl
popl
pushl
lea
jmp
call
ror
pusha
mov
pushf
stc
xor
jmp
pusha
mov
movw
pushf
popl
pushl
pushl
popl
pushf
lea
jmp
call
movb
movb
pusha
pushf
popl
pushf
push
pushf
pushl
popl
mov
lea
jmp
bt
add
push
pushf
jmp
btr
not
mov
setb
mov
pusha
jmp
call
add
cmp
aaa
notl
shrd
rol
shl
add
mov
cmp
pushf
jmp
pushl
movb
call
pushf
cltd
rdtsc
mov
setp
mov
call
aam
ror
mov
pushf
push
cmc
sub
push
mov
movb
lea
jmp
push
add
pushf
mov
mov
pushf
pusha
pushf
lea
jmp
mov
pusha
pusha
movb
lea
jmp
add
add
pusha
pushl
popl
movw
mov
pushf
lea
jmp
jmp
