push
call
jne
mov
and
cmc
and
jmp
not
not
mov
lods
movl
push
bt
cmc
xor
clc
rol
pushf
push
call
push
call
cli
push
stc
filds
add
je
je
jb
jne
dec
outsb
outsw
inc
add
and
add
test
bts
bts
rcl
movsbw
mov
bswap
xchg
jmp
cmp
mov
call
and
subb
data16
hlt
mov
scas
inc
cwtl
fldenv
frstor
push
inc
jmp
push
cmp
sarl
data16
xor
pop
jbe
adcb
add
fs
imul
add
not
movzbl
bswap
pop
pushf
pusha
movb
pushl
ret
push
shlb
test
sbb
into
stc
mov
mov
or
cld
mov
sub
cmpsb
clc
call
pop
incl
shrl
xchg
pop
aam
fsubs
jne
lods
pop
scas
dec
pusha
mov
aad
jnp
or
fwait
sub
or
push
movsb
push
daa
enter
ret
push
movsl
into
and
gs
pop
or
mov
nop
lahf
sub
shlb
addl
xchg
sub
push
cmpsb
fs
push
cwtl
pop
jbe
mov
mov
adc
mov
mov
into
sub
cmp
push
leave
insb
jge
add
adc
cld
fistpl
dec
daa
insb
ror
adc
mov
movsl
sub
daa
mov
mov
repnz
or
test
fnstcw
jns
imul
jne
fwait
push
shlb
jns
adc
hlt
mov
mov
add
lods
sbb
mov
repnz
mov
movsb
repnz
inc
cpuid
out
shlb
xchg
out
in
mov
sbb
jo
sub
or
or
in
pop
pushf
popa
pop
add
inc
int
mov
adc
notl
imul
pop
jbe
loopne
in
pop
mov
push
jmp
clc
imul
stc
add
pushf
pushl
pushf
pusha
lea
jmp
or
cmp
int
sub
jge
in
add
nop
es
addr16
sbb
mov
or
sti
pop
cwtl
test
insl
cmp
push
dec
or
pusha
cwtl
mov
push
push
js
add
outsl
movb
lods
push
fs
shrb
pop
xchg
mov
in
in
enter
rorb
sub
and
inc
inc
out
imul
out
push
cmp
push
jnp
mov
push
fsubs
into
iret
cmp
sti
jnp
pushaw
inc
pop
test
bound
mov
shlb
jbe
shrl
repnz
push
and
inc
adc
and
ljmp
cmp
idivb
cmpl
aad
pop
jae
pop
dec
ljmp
imul
push
cmpsl
or
and
loope
mov
outsb
push
sub
xchg
inc
xor
jmp
cmp
xchg
dec
jle
cmp
sti
movsl
out
mov
repnz
scas
rcl
add
mov
push
test
aam
cmp
imul
out
xchg
inc
lea
and
xchg
paddq
test
out
dec
stos
pop
push
sbb
jae
icebp
mov
or
stc
inc
mov
push
lea
mov
cmc
jge
mov
jbe
aaa
es
inc
incl
pushf
not
mov
mov
not
mov
lea
jmp
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
xchg
add
add
ret
pusha
inc
inc
lea
pusha
jmp
add
dec
gs
jo
imul
lret
mov
add
data16
movb
pushf
lea
jne
pushf
pusha
lea
jmp
in
cltd
push
push
push
xchg
sarl
pop
loope
sahf
dec
push
adc
stos
sbb
decb
push
xchg
in
and
jp
cmp
push
jnp
xlat
xchg
clc
mov
cmpsl
aaa
inc
les
pop
and
mov
sbb
jp
test
adc
sub
or
mov
sub
and
mov
or
inc
les
mov
push
jle
pop
jbe
cmp
dec
jle
call
rcrb
add
push
call
rcrb
push
imul
and
movw
xchg
rol
sar
mov
rcr
bsr
mov
sar
mov
adc
mov
sub
lea
pushf
not
lods
call
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
les
mov
jno
add
or
stos
repnz
clc
adc
ds
lock
push
add
in
scas
mov
stos
jno
cld
imul
out
push
sub
push
xor
stos
xchg
jb
and
aas
mov
xlat
sbb
jmp
fdivr
or
nop
sub
pusha
or
mov
popa
push
iret
data16
loop
xlat
inc
nop
push
int
mov
pop
sbb
fnstcw
or
jbe
cli
mov
bt
sub
pusha
lea
jne
call
pushf
call
lea
jae
jmp
jmp
cmp
push
sub
lea
call
adc
jmp
add
inc
push
insb
addr16
jne
je
outsb
add
add
je
jne
jb
outsb
je
push
dec
add
jl
push
mov
lea
jne
jmp
mov
lea
call
call
or
sub
sarb
nop
adc
jns
rcrl
nop
adcl
push
sahf
outsb
push
fdivrl
xchg
in
pop
call
cmc
scas
jns
or
jae
mov
jae
cmp
mov
mov
cltd
xchg
ljmp
cmp
pop
jbe
in
add
outsb
out
push
enter
xor
mov
test
mov
ss
lods
pusha
xor
lcall
xchg
inc
mov
and
jns
aad
add
xor
jbe
mov
mov
jne
cs
adc
stos
lret
sti
sbb
pop
insb
adc
sarb
insb
lds
pop
mov
cmp
decb
xor
mov
xchg
pusha
push
mov
xchg
cmpsl
cmp
es
rclb
insb
sbb
push
add
jae
xor
bound
bswap
imulb
loopne
nop
xchg
or
xchg
shlb
push
sbb
icebp
in
fincstp
cmp
or
push
dec
cmc
push
inc
sbb
and
jbe
sbb
es
jmp
mov
jmp
mov
add
cmpsl
jns
push
mov
jge
sub
hlt
mov
push
jno
and
push
add
pop
jbe
cmp
dec
mull
call
xor
cmp
or
test
into
cmp
call
stc
cmp
add
pusha
call
test
pushl
pushf
lea
je
cmc
sub
stc
cmp
pusha
pushf
jmp
xor
stc
rol
pushf
inc
inc
clc
ror
mov
push
seto
stos
pushf
not
mov
mov
lea
pushf
lea
call
push
call
add
inc
gs
gs
imul
ror
test
pushf
pushw
popfw
pusha
pusha
inc
call
add
push
jo
popa
je
push
imul
add
jae
popa
arpl
pushf
push
lea
jne
shl
xor
neg
aam
dec
bsf
mov
test
rcr
pusha
add
dec
jmp
inc
inc
lea
cmp
xchg
call
add
dec
imul
add
jmp
add
inc
imul
outsl
ja
add
add
outsb
push
jb
arpl
jae
outsb
lods
inc
loop
enter
lods
test
gs
push
ljmp
pop
jbe
js
fsubr
xorb
cmp
add
cmp
mov
call
push
call
add
stc
bt
mov
bt
test
pushf
lea
je
jmp
add
dec
inc
dec
popa
jo
je
imul
data16
arpl
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
add
testl
add
adc
test
lea
jmp
btr
mov
jmp
push
call
push
inc
test
lret
call
push
mov
push
push
mov
movl
lea
jmp
add
inc
outsb
popa
bound
imul
pushf
lea
ja
jmp
add
inc
gs
outsl
fs
gs
imul
add
add
popa
jo
insb
insb
outsl
arpl
jmp
add
dec
jae
popa
fs
outsl
fs
je
add
push
inc
push
push
cs
insb
add
push
pushf
xchg
pushf
dec
bt
test
test
bt
shl
jmp
push
call
add
into
or
mov
gs
lret
add
sarb
jb
jl
inc
lret
cs
aas
imul
jbe
mov
push
shl
dec
fwait
subb
test
pop
adc
stos
xor
repnz
lret
sub
xchg
jnp
inc
dec
clc
test
sub
cmp
ret
mov
add
sbb
fidivrl
pop
dec
or
shrb
and
jecxz
xchg
push
pusha
mov
faddl
pop
mov
push
inc
arpl
rcrl
aam
insl
aam
jmp
pop
jmp
dec
fistpll
push
aam
cmp
xchg
mov
add
imul
test
outsb
subl
jmp
in
out
pusha
sub
movsb
movsb
jle
stc
popa
jnp
mov
ja
xor
sub
sub
mov
xorl
stos
jae
scas
addr16
sub
xchg
insl
popa
in
daa
mov
mov
mov
mov
jl
mov
cmpsl
stos
in
push
test
insb
popa
icebp
daa
imulb
cmp
loope
sub
and
daa
call
repnz
hlt
popa
js
jge
jmp
loopne
movsl
imul
popa
jbe
je
jp
jns
mov
mov
movsl
sub
jb
mov
mov
stos
bound
addr16
sub
loopne
mov
cmpsb
xor
xorb
lods
or
cld
daa
out
and
mov
mov
das
xchg
xchg
lods
mov
mov
fmull
rep
add
xchg
dec
repnz
mov
mov
adc
mov
mov
sbb
mov
mov
mov
fsubs
mov
aam
jno
stos
xor
sbb
push
mov
xchg
push
push
test
rolb
cltd
mov
inc
mov
mov
call
cmpl
test
mov
mov
mov
lods
dec
test
mov
cs
xchg
subl
cmpl
ja
xchg
cmpsb
cmpsb
and
and
es
cmpsl
cmp
adc
pusha
cmpsl
xor
xchg
repz
sub
movsb
xchg
je
add
repnz
repz
adc
mov
nop
cmp
mov
and
sub
rorb
cmpsb
je
fldenv
cs
daa
cmpb
shrl
adc
and
xor
movsl
shll
jmp
movsb
push
mov
dec
mov
cmpl
movsb
std
fisubl
mov
cmpsl
scas
dec
loop
icebp
test
and
loope
and
scas
stos
movsb
shll
aaa
xor
xchg
cmpsb
ret
and
ljmp
out
mov
movsb
mov
cmc
mov
cmp
and
sti
pushf
or
dec
aas
into
or
lods
dec
dec
scas
sub
pop
lods
test
dec
push
bnd
mov
add
mov
jp
xor
pop
and
cmp
and
mov
mov
jg
mov
mov
cli
mov
add
andb
xchg
fs
subl
pop
ret
cmp
sub
or
lret
loop
lret
lock
or
stos
testb
lock
sub
movsb
in
or
hlt
imul
les
test
mov
stos
into
dec
in
fcompp
push
jmp
mov
mov
dec
dec
or
gs
mov
arpl
xchg
add
inc
mov
or
and
stos
xchg
test
call
sbbb
icebp
inc
push
sbb
int3
inc
cmp
lds
inc
ret
push
ret
xor
or
xchg
fstl
daa
mov
sbb
mov
xorl
mov
xor
mov
xchg
sub
mov
subl
stos
daa
sub
movsb
sub
xchg
es
cmpsl
daa
daa
stos
mov
or
std
inc
cmp
mov
cmp
gs
stos
ds
mov
cmp
mov
cmp
mov
xchg
mov
ss
mov
mov
xor
sub
and
sub
xchg
xorl
stos
sub
sbb
xchg
mov
xor
xor
daa
and
mov
sti
cmpl
lods
mov
test
sub
outsb
clc
dec
inc
imull
data16
inc
daa
xchg
sbb
decb
mov
paddusb
dec
scas
lea
aam
scas
shrb
imul
pop
dec
test
stos
and
xchg
fisubrs
sub
test
jl
push
inc
push
lret
adc
dec
or
xchg
into
dec
add
insl
loope
stos
test
out
das
mov
push
iret
lret
popf
imul
out
cmpsl
int
push
test
dec
mov
dec
outsl
stc
dec
ret
lret
insl
or
mov
daa
and
mov
sub
stos
mov
push
add
test
xor
movsl
aad
jb
add
ret
inc
out
or
mov
sub
mov
xchg
in
sbb
adc
cmc
das
xor
inc
or
adc
add
jmp
nop
test
pop
inc
fnstsw
dec
sub
mov
mov
pop
jge
inc
dec
lods
mov
ret
test
lds
and
mov
das
mov
into
out
sub
lret
sti
xchg
outsl
js
and
mulb
gs
out
and
in
inc
mov
addl
inc
xchg
sub
mov
sub
cmpsl
xchg
es
mov
out
andl
in
in
lods
jae
add
inc
pop
inc
data16
add
xor
aaa
inc
orb
push
push
in
loopne
mov
es
ret
and
scas
and
outsb
and
inc
mov
lcall
mov
imul
mov
stos
lret
fists
mov
push
cmpsl
movsb
and
mov
es
mov
test
fsubrs
std
sub
popa
into
das
iret
cs
aaa
and
and
and
rol
or
pusha
mov
out
dec
or
scas
aaa
mov
insl
scas
into
ljmp
in
or
orl
sbb
test
fucomip
das
and
push
xchg
das
scas
adc
push
cmpsb
cmp
aaa
stos
jmp
or
add
popa
das
outsb
andl
jp
mov
cmp
adc
push
xchg
sub
arpl
mov
int
mov
cmpl
and
ljmp
int
scas
push
sub
dec
and
xchg
movsl
mov
xorl
xor
or
addl
into
mov
and
cmp
add
imul
and
nop
pop
dec
jae
xchg
stos
pop
aaa
jmp
jno
clc
mov
imul
jle
adc
cmp
lret
mov
dec
mov
or
and
mov
aaa
cwtl
push
cs
add
xchg
sbbb
push
addl
mov
adc
mov
lock
xchg
push
cmp
xor
mov
add
mov
sti
jno
loop
shrb
ljmp
or
in
push
xchg
mov
push
jle
fstp
adc
and
jnp
jno
and
pop
cmpsb
punpckldq
orb
mov
int
pop
test
pop
movsl
xlat
movsl
stc
jo
adc
stos
test
out
out
mull
dec
daa
dec
out
imul
pop
enter
lods
je
jne
ret
cmp
lret
test
xchg
pop
inc
mov
fdivrs
out
repnz
sbb
popf
push
mov
jmp
dec
cmpsb
pop
out
mov
push
enter
xchg
sub
inc
mov
dec
mov
mov
sub
imul
and
pusha
clc
test
stos
or
push
mov
xchg
scas
bnd
push
inc
pop
lret
data16
cmp
repz
nop
fs
lock
dec
inc
rorb
outsl
scas
imul
mov
cmpb
sbb
mov
jae
push
xchg
pop
jecxz
dec
loope
or
aas
fisubrl
dec
dec
mov
and
outsl
or
cltd
insl
and
jp,pn
arpl
scas
lret
ljmp
lods
sub
mov
adc
stos
shll
scas
or
and
shl
in
addl
or
mov
and
scas
cmpsl
mov
jae
int
cmp
cmp
std
lods
sub
push
pop
out
mov
xchg
ljmp
jmp
xchg
mov
mov
push
ss
cmpsb
inc
mov
orl
out
ret
test
daa
mov
and
mov
insl
xor
jbe
imull
jbe
aas
xor
push
or
stc
or
xor
push
test
mov
lea
push
and
das
add
call
sbb
scas
jl
outsb
cmc
andb
jb
mov
mov
mov
and
and
inc
and
dec
shll
push
cmpl
xchg
mov
mov
movsb
mov
push
xchg
popa
mov
mov
andl
mov
mov
sti
mov
xchg
xor
mov
mov
push
and
xor
scas
sub
jb
test
inc
xchg
and
mov
movsb
add
mov
push
mov
xchg
xchg
jp
mov
addr16
je
sbb
jl
xchg
xchg
fsts
xchg
mov
test
movsl
inc
stos
orb
cmpsl
movsl
or
xchg
and
movsl
stos
popa
and
and
divps
aaa
jg
xchg
movsb
pop
mov
out
cmp
icebp
jnp
pusha
movsl
dec
popf
ficompl
and
mov
imul
outsl
ljmp
jge
outsl
sub
subb
out
movsl
inc
inc
mov
xor
sub
mov
ljmp
das
mov
iret
mov
pushf
outsl
popf
lcall
test
mov
and
mov
stos
mov
lods
cltd
test
jl
aas
adc
pop
xchg
jg
xchg
cli
pop
cmp
cmpl
imul
stc
incl
cmpsb
inc
stos
pop
subl
mov
inc
xchg
lahf
inc
xchg
mov
adc
mov
arpl
mov
adc
mov
jmp
add
sti
faddp
mov
andb
mov
arpl
mov
add
leave
mov
mov
push
mov
and
inc
add
mov
insl
mov
mov
and
movsb
lret
add
xchg
ret
lret
repnz
addb
inc
mov
loope
shrl
mov
mov
jp
movsb
das
add
test
add
andb
repnz
inc
inc
daa
xchg
pop
mov
lret
movl
aas
inc
insl
test
and
repnz
movb
xchg
and
repnz
lds
xchg
test
and
add
in
lret
les
mov
mov
or
test
and
push
dec
mov
ljmp
mov
xchg
dec
mov
jmp
repnz
mov
xchg
dec
mov
call
repnz
mov
aas
das
xor
out
mov
lret
iret
xchg
mov
xchg
popa
jnp
dec
xchg
sub
out
inc
into
shrb
aas
insl
insl
dec
test
in
inc
int
lods
mov
dec
test
or
lret
in
inc
int3
adc
jae
push
movsl
xor
dec
adc
mov
jb
push
and
repnz
adc
xchg
sarb
mov
outsl
xchg
test
push
repnz
xor
xchg
icebp
mov
xchg
movsl
jo
frstor
push
mull
adc
mov
cmp
and
dec
aaa
cmpsl
xchg
mov
jg
popa
cmpsb
xchg
add
dec
jbe
xchg
xchg
ss
test
mov
xchg
xor
insl
aad
mov
lods
xchg
mull
xchg
xor
adc
hlt
insl
aam
mov
xor
xchg
cmpb
pop
mov
cmp
sbb
mov
fucomi
mov
xchg
pop
xorl
lret
cmp
mov
mov
mov
inc
cmp
stc
lcall
dec
mov
xchg
js
pop
aas
cmp
test
and
repnz
cwtl
aas
jg
pop
cli
mov
pop
mov
pop
mov
test
lods
xchg
adc
mov
push
mov
test
mov
pop
mov
sbb
gs
mov
mov
mov
cmp
lret
sbb
cld
mov
and
xchg
and
jecxz
icebp
mov
popa
lods
repnz
mov
loop
ret
aas
subb
inc
and
repnz
add
xchg
sarl
test
and
lret
add
xchg
rcrb
aaa
cmpsl
pop
xchg
mov
lret
cmpsl
inc
xchg
es
push
test
and
repnz
cmpsl
xchg
inc
aas
and
sub
movsl
inc
test
and
add
in
repnz
movsb
mov
imul
aas
jmp
lret
test
push
dec
xchg
sub
lret
sub
imul
aas
jmp
and
dec
xchg
sub
enter
lock
mov
out
test
and
outsb
xchg
dec
jp
test
out
xchg
mov
mull
insl
mov
cmpsl
or
int
popa
xchg
mov
sub
or
in
mull
mov
mov
jae
push
and
repnz
adc
xchg
sarl
jb
push
and
repnz
adc
xchg
sarb
mov
xchg
mov
xor
lret
adc
xchg
sarl
jo
push
and
repnz
adc
xchg
sarb
mov
outsl
nop
test
push
mull
pop
imul
sbb
clc
inc
xchg
imul
inc
xor
lods
repnz
add
cmp
mov
sbbb
je
scas
push
test
adc
lret
hlt
inc
aam
mov
xchg
pop
jnp
stos
pop
xchg
mov
lret
sti
xchg
cmpsb
adc
das
jp
pop
test
and
repnz
cli
inc
fidivl
mov
mov
mov
xor
adc
stos
mov
xchg
mov
mov
aas
mov
aas
fildll
test
mov
lock
icebp
mov
imul
jp
mov
xchg
mov
mov
mov
mov
mov
cld
repnz
fsubr
sub
sbb
mov
mov
cmp
mov
sub
popf
movsl
in
sub
insl
and
xor
outsb
imul
dec
faddl
lret
push
pop
xor
adc
fdivrs
push
cmpsb
mov
ss
mov
dec
fwait
pushf
ja
sub
add
sub
inc
outsl
xlat
add
mov
dec
xor
xor
jae
loopne
leave
and
sbb
mov
mov
popa
hlt
ljmp
mov
push
insb
xchg
scas
lea
les
jnp
xchg
pushf
inc
addr16
or
push
in
fistps
andl
jno
pushf
ss
movsl
jns
icebp
aaa
or
in
cmp
jg
xor
movsb
loope
mov
ud0
pushf
mov
inc
test
push
divb
jmp
and
or
push
inc
sbb
sub
jle
es
add
adc
fcomps
cmp
imul
pushf
push
jl
cwtl
dec
mov
push
mov
push
pop
dec
mov
sbb
inc
mov
test
test
int
mov
pushf
xchg
stos
xor
pushf
pop
xchg
adc
adcb
add
daa
popa
stos
inc
xchg
and
xchg
sbb
roll
mov
mov
mov
xchg
andl
mov
mov
xchg
ret
sub
inc
sub
and
subb
loope
jp
and
loopne
xor
stos
ret
push
popa
test
add
shrl
xchg
xor
mull
leave
ret
mov
shrl
jecxz
jp
test
inc
xchg
aaa
inc
sub
inc
ss
xorl
cmp
bound
add
xor
xor
scas
cmp
jp
scas
punpckldq
adcl
divb
scas
icebp
loope
and
mov
incl
inc
mov
hlt
pushf
and
mov
sbb
xor
add
or
cltd
pushf
loope
inc
pop
lea
lcall
add
aad
pusha
mov
pushf
icebp
in
out
or
int3
es
lret
stos
nop
daa
pushf
xchg
push
jg
mov
repnz
ljmp
aaa
in
add
cmp
add
repnz
mov
push
jae
aaa
sub
mov
test
cmpsb
xor
mov
sbb
adc
fisubs
cmp
repnz
fs
stos
lock
int3
loopne
xchg
int
fld
dec
xchg
js
lods
test
mov
pop
pop
incl
lods
jbe
mov
leave
movsb
and
mov
mov
ret
and
mov
mov
ret
insl
sub
and
push
data16
into
dec
or
xchg
inc
std
xchg
cli
loopne
inc
rcll
je
mov
mov
insb
int
adc
xchg
dec
arpl
mov
and
cmp
cmpl
test
sub
stos
lods
or
xor
xchg
or
pushf
out
mov
divps
ss
pop
pop
into
push
ret
imul
pushf
and
mov
shl
scas
sti
sbbb
and
pushf
mov
mov
outsb
pushf
scas
sub
in
inc
pushf
push
cs
fsubrp
aas
inc
loop
inc
stos
mov
pop
in
pushf
add
sahf
nop
in
mov
mov
mov
dec
jae
xor
into
or
call
or
xchg
adc
sub
pusha
movsb
imull
jmp
pushf
jecxz
in
fdivr
inc
pushf
add
push
imul
mov
bound
jle
pop
mov
fwait
insl
dec
ret
dec
inc
xchg
lods
pushf
mov
clc
mov
cld
pop
inc
sub
shll
and
cmp
jb
pushf
xchg
sub
mov
pop
mov
test
pop
lods
lahf
dec
jnp
test
aaa
jae
jno
call
jbe
mov
mov
pop
or
or
cld
xchg
clc
lods
xlat
jecxz
push
mov
aas
inc
repz
hlt
fdivrp
adc
and
into
es
push
jbe
pushf
sub
sub
pushf
popf
in
imul
movl
aam
inc
mov
sbb
dec
jp
iret
xchg
aad
movsl
addb
push
ret
inc
add
dec
push
pushf
outsb
in
out
jnp
adc
popa
insl
jno
pushf
mov
dec
out
pusha
mov
scas
push
pushf
jnp
mov
fildl
daa
jecxz
stc
adc
mov
mov
andl
adc
and
ljmp
arpl
scas
jae
insb
mov
pop
lods
and
arpl
xor
mov
pop
cs
aaa
fstl
aas
jge
arpl
fldcw
and
inc
mov
xchg
and
pop
xchg
mov
mov
pop
and
mov
mov
push
js
movsb
imul
xchg
daa
arpl
into
scas
or
cmpsl
xorl
aas
ljmp
sbb
jge
and
inc
sub
pop
mov
fisubl
sub
sbbl
movsl
popa
stos
test
xor
sub
xor
int
stos
orl
push
aas
daa
imul
test
adc
sub
dec
adcb
adcl
mov
xor
fistl
mov
fdivp
scas
movsb
jnp
mov
xchg
sub
lods
ret
inc
jne
sub
out
loop
bound
xor
out
jno
mov
stos
push
adc
addr16
clc
dec
push
mov
mov
jne
and
mov
negb
stos
lret
xor
mov
das
inc
sahf
sub
imul
xchg
sarl
cmp
sub
mov
mov
mov
stos
or
leave
addr16
mov
push
gs
mov
cmp
mov
fdivs
stos
cwtl
mov
sbb
and
test
mov
int
mov
jne
addr16
or
stos
dec
mov
nop
and
pusha
mov
cmpsl
popa
loopne
inc
mov
stos
clc
mov
jne
cmp
inc
dec
insl
pop
mov
out
cli
in
jp
pushf
jnp
sbb
repz
or
jle
cmp
lret
je
shrl
jnp
jecxz
jmp
dec
testb
lods
and
inc
add
les
push
daa
pushf
hlt
add
and
add
add
imul
cld
cmp
sbb
in
xor
pushf
stc
fs
into
pop
enter
lret
push
subl
xor
roll
popf
mov
lds
dec
sub
hlt
hlt
sub
bound
lods
imul
movsb
inc
xchg
cltd
xorl
cmp
outsl
lods
inc
popf
daa
mov
xor
inc
sub
sbb
xor
stos
rorl
out
mov
call
gs
mov
mov
jns
add
ss
xchg
in
sahf
jo
xor
add
lock
rcrb
notl
xor
xor
mov
gs
xchg
insl
cmp
shll
andb
inc
mov
cmp
mov
shrb
mov
jo
fstl
and
inc
and
movsl
test
icebp
and
sbb
repnz
push
mov
mov
or
jp
shlb
and
and
mov
xchg
mov
xorl
mov
mov
and
xchg
ss
nop
jmp
jl
cwtl
dec
mov
inc
mov
movsb
cmc
xchg
dec
jle
gs
sub
stos
and
cltd
dec
stos
mov
mov
mov
xchg
fbstp
cltd
test
or
in
mov
test
jnp
pop
rcll
mov
popf
in
xor
sbb
xor
inc
mov
inc
mov
or
adc
scas
sbb
das
fwait
leave
adc
mov
stos
and
mov
mov
outsb
stos
or
mov
push
cmp
into
cmp
dec
mov
in
mov
cmpb
into
and
mov
push
daa
sbb
jbe
mov
jl
xor
shll
xorl
lods
popf
rol
lock
cmpsb
repz
jnp
popa
inc
sahf
xor
mov
inc
and
mov
xor
mov
xor
sub
sysenter
stos
scas
and
inc
xor
roll
in
inc
mov
mov
dec
or
ss
scas
add
mov
and
sub
jecxz
mov
sub
repz
inc
dec
loopne
bound
fidivs
addl
stos
scas
inc
cmpl
fildll
ret
lcall
and
xchg
and
jl
pushf
mov
jg
dec
imul
pushf
cmp
add
sbb
mov
push
mov
pushf
jns
lods
xchg
sbb
lods
pushf
scas
fwait
nop
dec
or
jno
gs
xchg
mov
pushf
in
jmp
ds
mov
pushf
pop
ss
dec
push
mov
sbb
clc
adc
and
ja
bound
xlat
mov
outsb
push
lcall
fdivrl
leave
orb
adc
pusha
jp
pushf
js
popf
fwait
dec
fistpl
sbb
mov
lea
lock
sbb
pushf
xchg
loopne
repnz
adc
in
mov
cmpsb
ficompl
add
ret
jecxz
jle
in
loop
pushf
jae
imul
mov
das
mov
mov
aam
and
adc
loop
test
jb
jge
ss
insl
mov
pop
aaa
pushf
mov
mov
push
ret
jl
xorl
xlat
jge
ret
lahf
lea
jno
arpl
inc
dec
popf
mov
add
push
aas
mov
pushf
dec
add
pop
leave
and
lds
hlt
mov
stos
jp
mov
push
pushf
sub
push
daa
pop
pushf
pop
arpl
lahf
cmp
jecxz
pop
test
add
pushf
xor
movsl
pushf
mov
hlt
jmp
pushf
dec
test
rcl
subb
mov
nop
enter
aas
mov
shll
pushf
mov
fwait
xchg
jle
mov
mov
inc
pop
mov
jmp
xchg
loopne
sub
xchg
sbb
ret
mov
repz
push
pop
out
mov
add
sub
inc
jo
or
adc
loop
fidivrl
lods
sub
jns
insb
xchg
cmp
outsb
in
mov
pushf
les
dec
pusha
shrl
pop
popa
jg
clc
add
pushf
xadd
cld
mov
inc
or
mov
adc
cmp
loope
mov
pop
xor
xor
test
cmpsl
ja
adc
fdivrl
in
pushf
fsubrp
es
pop
cmp
xor
or
sbb
in
test
xor
lods
test
lcall
cmpsb
mov
adc
mov
es
push
cwtd
jns
mov
inc
clc
dec
push
in
test
lea
movsl
xorl
pushf
stos
xchg
testl
dec
ds
xchg
add
inc
loopne,pn
or
lods
mov
mov
add
movsl
dec
push
lret
sbb
dec
aas
pop
pushf
jmp
jbe
mov
cli
shlb
mov
jp
inc
loope
stos
scas
into
loop
cmpsb
daa
xchg
pushf
dec
and
sti
arpl
pop
mov
or
add
cmpsl
pushf
roll
dec
inc
imul
es
sbbl
lds
mov
and
out
jae
mov
mov
lods
xchg
pushf
push
mov
mov
fdivs
imull
add
and
cmp
or
dec
jne
enter
push
xor
bound
test
sub
jbe
ja
lods
mov
icebp
divl
sbb
std
daa
push
cmp
cwtl
and
jecxz
adc
pushf
ljmp
xchg
pushf
pop
inc
push
mov
pushf
mov
push
lret
xchg
pushf
mov
popf
jge
pushf
xchg
inc
push
dec
or
push
pushf
test
cmc
add
mov
xchg
sahf
pop
cmp
sbb
sbb
loopne
pop
push
pushf
push
outsl
fdivl
fwait
lea
pushf
int3
pop
addb
xchg
pusha
popa
div
aas
in
mov
pop
mov
add
or
ds
xor
xor
in
jne
sbb
and
pushf
std
aas
push
jae
jecxz
test
adc
pop
lods
mov
jb
cmp
xor
rorb
movsl
rol
pushf
daa
nop
xchg
loope
mov
pushf
fisttpl
push
in
flds
pushf
pop
outsb
mov
jp
pop
dec
pushf
lods
lret
cs
insb
add
ret
lock
fbld
jbe
pushf
lcall
rcrb
sub
pushf
enter
out
fs
pushf
sub
ret
sbb
sbb
in
stc
movsb
push
rolb
mov
pushf
sub
fcoms
pushf
hlt
stos
cltd
push
in
ffree
ret
pop
mov
or
sub
icebp
jae
mov
imul
insb
scas
int3
cli
mov
and
sbb
hlt
xor
mov
pop
adc
lahf
pushf
stc
push
js
push
int
pushf
imul
out
pushf
lcall
lods
pushf
nop
cmp
loope
push
orb
xchg
icebp
ror
sahf
js
jno
or
ds
mov
nop
mov
and
jmp
pushf
icebp
ret
mov
jo
push
push
outsl
push
pushf
sbb
and
in
pop
pop
pushf
jns
jmp
fldt
lret
clc
jne
mov
cwtl
sub
cmpsb
les
pop
or
popf
and
add
mov
lods
push
pop
outsb
loope
jecxz
aas
jne
sub
pushf
popa
or
mov
scas
xchg
data16
ret
dec
inc
hlt
mov
cltd
fidivs
jg
pushf
lahf
popa
adc
mov
inc
scas
pop
push
jecxz
mov
in
add
mov
sbb
sub
push
xorb
sub
aad
fwait
ret
pop
repnz
shll
pushf
mov
inc
pushf
fidivrs
popf
or
jecxz
mov
ss
push
pushf
jge
cmp
loope
mov
push
xchg
mov
pusha
ret
aam
insl
bound
sbb
add
mov
cmp
push
js
lret
pop
cmp
push
cwtl
test
test
repnz
shll
pop
shll
mov
cmp
cld
ficomps
mov
int
pushf
fildl
push
mov
aas
cmp
sub
mov
push
sahf
sub
pushf
fucomp
mov
sub
mov
xor
mov
sub
pushf
add
je
add
call
xor
xorb
dec
aam
addw
adc
pushf
test
gs
and
sbb
mov
pushf
jl
inc
cld
lock
add
cmp
lods
mov
sub
jp
inc
mov
jb
mov
movsb
push
cli
pushf
hlt
icebp
ret
test
pushf
clc
mov
pop
test
popa
in
jne
loopne
adc
int
pushf
lahf
dec
mov
cmp
xchg
in
test
cmp
scas
pushf
sarb
orb
jns
lods
loopne
jb
cmp
iret
icebp
mov
xchg
pop
orl
cmp
dec
jmp
add
mov
lahf
mov
rclb
inc
mov
int
xchg
xor
rcl
jp
lods
iret
insb
outsl
cld
les
sbb
push
decb
xor
mov
mov
mov
pop
sub
add
and
push
out
test
jge
lds
mov
inc
xchg
add
xor
pop
pushf
add
mov
push
hlt
xchg
mov
cmpb
sub
mov
stos
push
mov
rcrl
mov
jo
loop
bound
and
out
pop
pushf
stos
aad
inc
or
rclb
fistpl
inc
and
xchg
lret
jl
test
or
repz
pusha
xchg
mov
sar
pushl
pop
add
fisttpl
xchg
sbb
pushf
insl
incb
push
push
movsl
jl
xchg
xor
loop
gs
inc
rcrl
mov
pop
in
loop
imul
enter
cwtl
cmp
sbb
mov
loopne
sub
push
rcrl
or
adc
inc
pushf
xor
cmpsl
test
stos
out
pushf
pop
jae
fistpll
aad
pushf
int
fs
sub
dec
cltd
in
cmc
xchg
ja
pushf
jle
mov
cmp
fbld
rol
imull
lods
push
test
xchg
pop
movsl
add
add
mov
xor
adc
xchg
test
and
sbb
rolb
and
push
pushf
gs
sbb
scas
pushf
jle
sahf
xor
in
testl
mov
out
push
repz
sbb
inc
pushf
int3
add
jle
maskmovq
negl
mov
repnz
je
add
pushf
push
pop
loopne
aaa
loop
bound
push
sub
jg
inc
je
mov
pushf
dec
push
call
ret
movsl
pop
cmp
pop
pop
pushf
push
fidivl
mov
mov
filds
stos
cmp
and
loopne
popf
cmp
mov
jge
les
sbb
pushf
adc
addr16
sub
pushf
add
in
dec
pushf
ret
jmp
rol
dec
int
pushf
pop
int
add
loope
jmp
enter
inc
cs
pushf
mov
jle
fbstp
sub
sti
aam
ret
cltd
inc
inc
sbb
xchg
xchg
icebp
ss
mov
jns
arpl
xlat
push
movsb
sbb
scas
push
inc
loop
mov
sbb
sub
add
ret
pushf
orl
xlat
mov
xchg
test
scas
sbb
hlt
aam
pop
sub
lret
mov
popa
inc
pushf
dec
pop
sub
fmull
mov
and
add
jl
xchg
call
mov
mov
iret
sbb
das
daa
lcall
fistps
xchg
mov
lea
lods
push
in
pushf
arpl
addr16
pushf
dec
xchg
jnp
push
ds
pusha
pushf
dec
outsb
test
out
shl
pop
lods
jp
in
jmp
push
or
add
les
jecxz
pushf
sub
mov
sub
call
fisttps
mov
movsb
hlt
paddw
rcrl
pop
dec
loopne
insl
outsl
cmp
xchg
pushf
inc
scas
xlat
cmpsb
ficomps
jmp
inc
and
adc
cs
lods
in
pop
push
shrl
or
lahf
std
int
orb
popf
out
jecxz
mov
pop
into
mov
idivb
fstps
sub
cmp
jl
subl
repz
mov
loopne
pushf
mov
imulb
outsl
in
in
xchg
cmp
pushf
jle
mov
hlt
jo
ret
dec
ret
imul
dec
push
jb
fcmovnb
mov
xchg
xchg
mov
adc
lret
je
andl
inc
cwtl
push
adc
mov
push
mov
setl
test
daa
pop
lods
es
popf
pushf
fstpt
and
cmp
hlt
cltd
pushf
lret
or
mov
in
sbb
dec
into
or
mov
adc
xchg
mov
pop
imulb
lcallw
out
mov
inc
or
mov
pushf
add
xchg
fisubl
xchg
pushf
ss
lret
cld
push
xchg
mov
pushf
std
mov
xor
sub
aaa
mov
lds
sarl
int3
ret
sbb
inc
push
popf
sbbl
popa
movsb
push
mov
and
jg
cmp
cli
dec
xchg
out
movsb
adc
mov
adc
pop
push
mov
inc
or
movsb
stc
je
or
cld
sar
in
push
mov
xchg
ret
xor
mov
push
orl
fstps
inc
add
mov
lods
pushf
mov
push
xor
cmp
xor
xchg
inc
in
adc
sarl
jo
xchg
adc
aad
sub
rolb
out
mov
mov
lcall
incb
mov
inc
imul
arpl
jne
xor
pushf
sub
lock
mov
ljmp
mov
stos
cmp
pop
mov
dec
jno
cmp
ret
lods
or
xchg
sub
add
das
fnstsw
aam
pushf
dec
insb
imul
pop
xorb
cmp
pushf
repnz
stos
jno
pop
pushf
cmp
ja
cld
pop
xor
mov
shrl
pop
mov
inc
cmpsb
push
pop
pushf
push
test
test
cmp
pushf
scas
imul
jmp
pop
pushf
jecxz
stos
cwtl
adc
repnz
mov
cmp
add
inc
xchg
inc
mov
mov
push
jne
inc
jns
xor
inc
mov
mov
jge
pushf
and
xchg
popa
xchg
jle
pushf
cmc
ffreep
mov
ret
pop
pop
dec
inc
sub
cmpl
dec
cmp
mov
negb
sub
pushf
jae
cmpsb
or
ret
sbbl
rclb
xor
arpl
xchg
mov
mov
dec
add
out
and
aam
nop
add
test
pushf
xchg
clc
insb
cltd
xor
ja
leave
cs
mov
mov
dec
xor
mov
sbb
xchg
pushf
ss
sub
xor
fs
pushf
sbb
and
pushf
imul
pushf
jne
imul
mov
rcrl
xchg
stc
sub
daa
cmpsl
ds
or
pushf
decl
xchg
mov
cmp
movsb
lock
add
or
jae
mov
xchg
sub
loopne
repz
aas
fstpl
sub
adc
mov
out
aas
clc
pushf
push
xor
pushf
pop
xor
xchg
setbe
scas
inc
je
inc
pop
adc
sahf
push
push
bnd
add
xor
loopne
rclb
jo
and
mov
pushf
mov
jge
cmpsb
pushf
mov
lret
das
pusha
xor
arpl
scas
imul
fiaddl
and
dec
lods
mov
mov
pushf
js
xchg
movsb
xchg
jge
rcrl
or
jp
clc
call
add
xchg
fadd
inc
lds
cmp
loope
arpl
repz
push
xchg
icebp
loop
mov
scas
adc
iret
jns
lods
and
cmp
mov
cwtl
jb
cmp
push
nop
mov
add
push
ds
loope
sbbl
mov
sub
pushf
rorl
js
or
ja
addr16
and
test
enter
lods
mov
pop
pushf
dec
mov
fst
pushf
repz
jae
jne
mov
adc
jnp
insb
xor
jl
jo
xor
fwait
cmc
sti
ret
test
test
mov
pushf
addb
dec
and
and
pushf
add
sub
xor
cmp
outsl
repnz
pushf
jle
daa
in
cli
pop
push
pushf
popf
jns
pop
ret
loopne
sub
push
mov
mov
dec
loop
inc
jnp
lods
dec
pop
inc
icebp
incl
ds
mov
mov
and
daa
mov
xlat
out
idivl
ficompl
dec
push
push
mov
and
dec
arpl
or
repnz
pop
push
pushf
jns
test
adc
out
movsl
sahf
clc
push
pushf
pop
stc
repz
push
pushf
or
ds
pushf
jno
lahf
scas
mov
mov
push
fsub
lret
mov
arpl
rcrb
push
in
dec
push
push
pushf
xor
pushf
movsb
jns
js
xchg
popf
dec
pushf
sbb
jl
sub
in
and
dec
pushf
mov
lods
fs
cmp
push
in
adc
insl
pushf
rcrb
aas
fisubl
ds
cmpsb
and
gs
addr16
or
cmpb
pop
mov
pushf
and
cltd
push
pushf
gs
sub
pop
jecxz
pushf
das
fwait
or
or
rcrb
sbb
repz
bound
and
jl
ret
xor
xchg
mov
xchg
aad
mov
shll
loop
adc
pushf
jl
push
pop
js
cmp
into
sti
sbb
cmp
jecxz
push
mov
pop
dec
push
es
push
pop
push
mov
je
scas
cld
jns
nop
cmp
jg
movsb
mov
aas
mov
ds
hlt
frstor
test
xor
call
aad
mov
movsl
pushf
mov
adc
cmp
sbb
jg
inc
jno
icebp
insl
xchg
push
out
pop
mov
cmp
subb
pushf
and
pop
out
cmpsb
mov
pushf
sbb
adc
mov
or
in
addr16
pop
ret
sbb
dec
ds
and
sbb
adc
or
test
mov
lret
push
sti
jns
aas
push
loop
ret
mov
mov
xchg
cmp
inc
or
mov
add
pop
dec
repnz
pop
inc
or
dec
mov
sub
push
lret
cmp
dec
pushf
jbe
iret
mov
ret
jns
daa
div
inc
fidivrl
out
pushf
ret
das
stos
mov
sar
aad
mov
cltd
pushf
cmp
inc
jb
jns
scas
stos
pop
in
js
pushf
das
jecxz
aam
scas
or
cld
sub
inc
dec
mov
or
mov
fnclex
jecxz
pop
inc
mov
xchg
pushf
jns
aas
pop
imul
jae
pop
jno
sub
mov
cs
sub
pushf
iret
dec
xchg
hlt
adc
shrb
mov
mov
ja
inc
das
rorb
jmp
adc
mov
xlat
pushf
pusha
repnz
int
movsl
ret
jbe
inc
sbb
clc
add
pushf
and
jmp
pushf
push
xchg
sti
movsl
xor
pop
sbb
pushf
xchg
loope
lret
rcll
xor
loope
fs
lods
lods
add
push
push
pushf
inc
enter
or
ja
mov
ljmp
cltd
mov
and
cmpsb
mov
out
int3
add
into
mov
xchg
stc
sbb
loopne
mov
cli
out
mov
pushf
inc
fmul
jae
mov
and
pushf
adc
cld
add
dec
test
and
imul
jb
push
lock
pop
ret
andl
jno
pop
or
mov
lret
mov
lock
inc
sub
xor
cmp
push
sbb
mov
inc
xor
pushf
lock
sbb
cmp
push
inc
out
orl
fnsave
fs
lods
fiadds
cmp
pop
xor
or
xchg
outsl
in
fstl
pushf
dec
add
add
pushf
rcrb
mov
iret
jmp
mov
mov
pushf
lods
ret
xchg
mov
stc
in
cmp
pop
out
xchg
leave
cmpsb
mov
les
ss
loop
jbe
pushf
sbb
mov
fcmovbe
inc
test
out
rolb
jle
loop
popf
mov
mov
outsb
push
out
imul
pushf
sub
push
imul
mov
fwait
pop
rcrb
mov
xor
xchg
fstpt
ret
jecxz
and
mov
int3
push
pushf
xlat
sub
pop
clc
jle
movswl
pushf
fidivrs
xor
dec
or
xchg
push
cmpsl
pushf
and
into
jmp
icebp
movsb
dec
adc
enter
pop
dec
insb
mov
push
cmpsb
dec
popf
add
mov
mov
mov
xchg
mov
in
jmp
and
arpl
xchg
aam
pushf
mov
mov
mov
cmp
xchg
xchg
sahf
xchg
mov
push
pushf
cmpsl
in
lea
adc
rcrb
pop
vpacksswb
jl
cmpl
nop
sub
push
mov
les
pushf
les
xchg
shlb
mov
dec
movsl
lret
in
xor
fistpll
pop
shrl
addr16
sbb
shrl
out
mov
pushf
cmp
inc
mov
inc
ds
xchg
fmuls
scas
gs
sbb
adc
mov
outsb
leave
rcrb
pushf
js
lcall
loop
inc
dec
mov
ret
orb
jecxz
pop
cmpsb
repnz
imul
loop
mov
sahf
in
push
in
push
xchg
pushf
cmpsb
cmp
filds
xor
pushf
out
imulb
dec
jecxz
les
push
test
adc
add
fwait
mov
xorl
cmc
insb
daa
lcall
pop
cmp
pushf
out
pop
loopne
hlt
cltd
lcall
movsb
add
jb
pushf
cmp
push
mov
ret
rorl
lret
mov
adc
imul
pushf
leave
lods
int
sub
inc
out
push
pop
ret
mov
mov
jge
xor
adc
cmp
mov
mov
xor
jns
adc
sub
int3
adc
repnz
mov
mov
enter
loop
jp
pop
addb
pushf
add
shll
mov
jp
xor
add
mov
ss
xor
das
jnp
in
mov
lods
lret
pushf
daa
or
rcl
ja
pop
mov
push
push
iret
call
xchg
shlb
inc
repz
mov
fistl
jae
fcomps
ljmp
je
loopne
enter
adc
dec
mov
sahf
pop
mov
pushf
dec
call
jle
pop
ret
mov
subb
pushf
leavew
test
lahf
jb
pushf
cmp
pop
andb
mov
sbb
xchg
ret
movq
xor
aaa
sub
in
inc
add
insl
fs
mov
pushf
fsubs
pop
repz
in
cmc
inc
or
sbb
cmpl
pushf
push
stos
jo
pop
cmc
shr
pushf
jle
call
xor
lds
jnp
sbb
add
push
xchg
data16
out
divb
lods
mov
popa
sbb
mov
add
pushf
cli
mov
add
mov
pushf
inc
leave
int3
mov
pushf
fbstp
repnz
in
jbe
lcall
jecxz
cwtl
jb
mov
fs
jno
inc
and
dec
mov
addr16
dec
mov
mov
popf
mov
mov
divb
sbb
mov
dec
ret
mov
add
or
sbbb
stos
mov
jne
xor
adc
inc
add
jge
lea
cmpsl
cwtl
jbe
testb
fs
fsts
scas
test
dec
fcoms
popa
pop
mov
cmp
cmp
scas
mov
pushf
mov
lds
ret
les
imul
adc
and
and
jae
movsb
pop
ds
mov
jp
cwtl
imul
lods
xlat
ss
mov
ret
mov
lds
push
cld
inc
lcall
pushf
cwtl
push
stc
stos
lods
jmp
pushf
stos
out
addb
jo
dec
std
daa
insb
data16
pushf
lods
fucom
xor
ficomps
cmp
xor
adc
mov
inc
out
mov
push
aaa
jmp
popl
mov
arpl
jg
enter
ret
out
das
push
cmp
test
pushf
or
dec
cmp
mov
mov
or
add
sub
stc
pushf
mov
push
pushf
xchg
rorb
movsb
add
xchg
mov
mov
and
xor
fiadds
xor
leave
pop
pushf
aad
push
or
gs
mov
mov
add
sub
or
fstps
jp
jnp
add
add
add
inc
xchg
in
fstpt
add
mov
dec
mov
ja
mov
sbb
mov
cmp
call
mov
in
xchg
cmp
pushf
sbb
xor
addr16
inc
mov
sbb
shll
pushf
xlat
jp
fs
mov
mov
add
mov
mov
push
or
push
and
push
pushf
cltd
push
mov
sbb
push
xor
xor
lret
pushf
cwtl
pop
mov
fldl
push
mov
and
js
aaa
and
gs
adc
pusha
in
movsb
sbb
sub
fstp
fs
push
mov
xor
sbb
mov
cmp
ljmp
mov
jle
xchg
add
mov
imul
sub
adc
xor
addr16
cmp
aas
inc
pushf
adc
and
movsl
daa
pop
pushf
enter
ret
cmp
test
stos
and
cmp
int3
test
jg
mov
pushf
int
lods
orb
adc
mov
aad
dec
insb
aaa
stc
cltd
mov
loop
xlat
int3
das
ret
ret
jecxz
test
or
pushf
fdiv
ja
jge
aas
pushf
outsl
jnp
fwait
or
enter
add
ret
cld
adc
lret
je
inc
fstps
dec
std
xchg
pushf
add
xor
aaa
popa
aam
stos
jbe
inc
fadds
jge
lret
loop
lods
dec
adcl
fisubrs
fcoml
lcall
data16
inc
ret
nop
loope
and
mov
pop
test
mov
lods
and
out
mov
pop
mov
mov
in
dec
sldt
push
scas
lods
in
xor
fwait
xchg
jnp
mov
jne
mov
std
imul
jecxz
shrb
movsb
cmp
pop
mov
ret
scas
mov
inc
dec
pushf
fnstcw
mov
loop
push
iret
add
mov
push
sbb
insl
xor
pushf
mov
sarl
mov
or
add
cmp
mov
mov
xor
add
cmp
xchg
mov
mov
test
pushf
inc
out
outsb
sbb
adc
movsb
rol
jno
cltd
jne
int3
aad
data16
mov
imul
mov
pushf
xchg
xchg
outsl
jle
adc
out
repz
pop
or
dec
mov
mov
les
mov
jno
mov
out
mov
mov
xchg
xlat
sbb
sub
in
and
jb
mov
inc
fwait
pop
cmpsl
ret
cmc
int
out
test
negl
sbb
pushf
pop
outsb
and
jnp
popa
cli
pushf
cwtl
cmp
push
cmc
lds
iret
push
pushf
sub
loope
aam
and
xchg
pop
add
cmp
pushf
into
ret
dec
push
mov
pushf
fisubrs
aad
pushf
cmp
rcll
inc
mov
mov
jno
lds
outsl
imul
std
push
push
pushf
das
out
ja
add
mov
lock
in
cmpsb
mov
cmp
int3
add
sub
stos
dec
out
mov
rcl
sarb
lret
lods
arpl
test
jne
cmp
lcall
push
in
cmp
loop
ds
xchg
pop
add
mov
cld
jo
inc
dec
jns
inc
notb
mov
pop
addr16
test
and
add
jns
scas
call
sarb
sbb
insb
cwtl
inc
dec
cmc
sub
nop
lods
iret
xor
je
push
pushf
jl
fcmovnbe
mov
inc
mov
xchg
inc
inc
mov
xchg
push
cmp
and
jne
test
pushf
push
xor
cmpl
mov
jge
es
inc
dec
lods
lods
inc
or
outsl
xchg
loope
and
cmp
orb
xor
lcall
imul
mov
mov
in
rolb
sbb
dec
pushf
adc
loope
dec
cmp
pushf
push
sahf
and
xor
rcll
or
in
adc
mov
xchg
xor
pushf
scas
mov
mov
pushf
inc
icebp
add
and
or
jmp
clc
movsb
out
add
xchg
js
ljmp
mov
pushf
adc
mov
lcall
xchg
in
repnz
call
loop
jle
pushf
mov
bt
out
mov
jmp
mov
pushf
insb
mov
push
mov
adc
fiaddl
mov
adcb
fnstenv
mov
pushf
imul
pop
sbb
and
xchg
add
dec
jbe
lods
lahf
push
pushf
adc
inc
mov
xchg
jl
aad
push
mov
sbb
or
or
popf
mov
pushf
sti
push
in
jle
cmp
pushf
les
stc
jge
mov
pushf
test
push
bound
add
std
add
push
insb
ja
pop
mov
pusha
pushf
and
xchg
test
pushf
and
inc
repz
ret
pushf
pusha
jmp
adc
pushf
lock
popf
scas
sub
lods
loopne
push
shrd
pop
inc
int3
xchg
mov
pushf
cmp
popa
outsl
in
pushf
inc
or
jo
dec
int
pushf
jae
push
mov
and
shlb
test
jecxz
sbb
into
add
movsl
repz
mov
lcall
pushf
sbb
daa
sub
insl
pop
jg
ds
pop
cmc
std
push
mov
or
mov
rcrl
mov
lret
pushf
xor
data16
dec
push
mov
mov
jle
pushf
cli
es
and
je
pushf
xchg
or
push
pushf
sbb
int3
popa
aas
jno
sti
pushf
push
inc
js
xor
jnp
pushf
mov
xchg
ja
cld
std
jae
or
test
pushf
mov
and
mov
loop
mov
mov
addl
mov
mov
cmp
pushf
fisubrl
dec
pushf
mov
fstpl
inc
mov
call
add
pushf
fstps
push
pushf
cmpsl
arpl
std
call
cmc
cmpsb
cmp
mov
inc
loope
or
pop
xchg
icebp
arpl
int
inc
sbb
xorb
iret
mov
mov
test
push
in
sub
dec
fdivs
pushf
push
lock
mov
test
jns
or
jp
pushf
divb
xchg
imul
pop
dec
mov
mov
mov
fwait
test
xor
data16
out
repnz
pop
push
cmp
inc
adc
jno
andb
dec
mov
pushf
add
inc
jl
lods
sub
pop
sub
cmp
cli
ret
push
mov
mov
inc
mov
lods
xor
in
mov
inc
mov
sti
repz
movsb
xchg
or
xlat
push
jb
insb
sbb
sbb
pushf
sub
add
pushf
xor
leave
mov
pushf
lods
pusha
fnstenv
pushf
je
rol
push
das
xchg
xor
lcall
call
and
pop
mov
dec
mov
stos
sub
mov
pushf
jb
in
shrl
pop
xor
xchg
sbb
mov
dec
jp
xor
mov
pushf
les
mov
aas
or
pop
scas
cs
inc
or
push
in
cmp
pushf
ret
and
test
lret
and
cmpsl
mov
dec
cltd
jmp
add
ficomps
mov
dec
into
test
imul
and
mov
add
mov
inc
xchg
incb
daa
popf
loopne
xchg
or
dec
push
mov
hlt
mov
cmp
xor
int
adc
add
fcoml
dec
and
xchg
into
lret
clc
sub
adcb
adc
repnz
or
inc
jmp
outsl
fnstcw
movsl
call
or
inc
or
rclb
jae
shlb
or
jl
out
ficomps
push
jne
lret
mov
inc
mov
jg
movsl
iret
cmp
push
sbb
inc
enter
or
xor
movsl
fnsave
repnz
icebp
insl
inc
aas
dec
mov
push
jnp
jg
movsl
and
cwtl
notb
add
out
sub
jg
movsl
test
repnz
arpl
inc
sbb
sub
pop
push
mov
shl
lcall
mov
dec
mov
xchg
outsl
les
inc
data16
mov
imul
inc
bnd
pop
inc
adc
icebp
jg
movsl
ret
bound
ret
mov
in
jg
movsl
push
lods
repnz
add
inc
fsub
pop
mov
pop
jg
jle
jg
movsl
rorb
inc
popa
lock
mov
sub
out
repnz
jne
mov
push
mov
dec
std
imul
mov
jg
movsl
cli
push
repnz
xchg
in
mov
mov
jg
movsl
shll
repnz
sbb
lcall
push
repnz
test
inc
loop
cmp
pop
mov
dec
xchg
cmc
hlt
scas
sbb
jmp
lret
in
iret
dec
test
xor
mov
and
cmp
lret
adc
adcb
sbb
mov
mov
repz
ret
dec
or
out
xor
cmp
jb
popf
lret
lahf
jecxz
andb
int3
cmp
mov
sub
lods
je
addb
mov
dec
pop
mov
lret
or
cmp
push
mov
les
lret
subb
cmp
xchg
mov
and
or
subb
cmpsb
mov
pop
loop
jg
movsl
push
jns
aam
sbb
and
mov
add
ds
cwtl
enter
rcl
pop
cmp
mov
test
jg
movsl
leave
cmp
push
jge
inc
or
mov
lret
add
insb
movsl
ss
repnz
inc
xorl
repnz
mov
repnz
push
out
addr16
movsl
in
shrw
push
inc
push
push
mov
inc
jp
jg
movsl
xchg
repnz
inc
dec
and
mov
clc
jg
movsl
jg
repnz
inc
inc
loope
pop
mov
inc
mov
jg
sub
cltd
loop
loopne
and
mov
jno
jecxz
and
daa
mov
aas
sub
movsl
or
shr
pop
inc
adc
ss
imull
cmp
aaa
adc
lds
mov
push
lea
movsl
gs
sbb
in
mov
inc
out
aad
mov
xor
jg
movsl
das
sbb
xchg
jns
inc
xor
jg,pn
movsl
jl
bnd
cmp
mov
movq
repnz
cld
movsl
lahf
div
lret
mov
je
into
mov
jg
jle
jg
movsl
insl
out
sub
and
sahf
divl
dec
movsl
mov
repnz
inc
pop
sub
mov
xor
jg
std
dec
jg
movsl
cmp
mov
push
inc
add
jb
ret
jg
movsl
imul
sub
adc
mov
mov
add
jecxz
std
inc
frstor
mov
push
mov
movsl
enter
popf
leave
inc
idivb
repz
movsl
test
add
fs
lock
movsl
cwtl
inc
cltd
inc
mov
jg
movsl
inc
xor
push
popl
scas
cltd
mov
xchg
bnd
movsl
xlat
xor
inc
cmc
push
inc
push
loopnew
and
sarl
movsl
mov
cli
in
fmull
inc
jbe
cmpsl
mov
insb
fdivrs
movsl
shlb
repnz
mov
xchg
mov
roll
pusha
movsl
js
bnd
imul
movsl
pop
test
jae
xchg
inc
xchg
push
mov
add
loopne
pop
cmp
movsl
cmp
repnz
push
inc
push
fs
fcoml
popa
xor
xchg
stos
adc
xchg
sub
xchg
stos
or
andl
or
daa
movsb
stos
rcll
fwait
inc
xchg
ds
iret
daa
sbb
jle
aam
icebp
dec
xchg
jnp
and
imulb
test
arpl
xchg
sub
mov
sub
xchg
dec
popa
les
and
call
ret
daa
subl
sub
push
cmp
lock
jne
stos
pop
xchg
std
or
mov
xchg
dec
popa
in
mov
scas
cwtl
popa
es
test
rclb
jmp
cltd
popa
dec
daa
clc
stos
cmp
popa
data16
pop
stos
loope
cmp
xchg
or
daa
fisubrl
mov
mov
pop
daa
pop
stos
cld
xchg
mov
jb
push
xor
stos
popa
and
fsubrs
xchg
cmpsb
popa
pusha
daa
loop
push
xchg
sub
sub
ja
cmp
jge
jae
xchg
ss
fbld
inc
stos
adc
lcall
push
stos
push
xchg
jp
xchg
pop
and
lea
daa
add
jmp
pop
shll
or
xchg
fisubs
daa
mov
aaa
xchg
lds
sub
xchg
mov
daa
xor
mov
ret
popa
pop
daa
stos
repnz
lahf
addr16
mov
cmp
sahf
sub
mov
xor
xchg
repz
adc
mov
imul
add
push
stos
enter
mov
popa
xchg
daa
movsl
stos
inc
xchg
push
addr16
sub
xchg
popa
xlat
daa
cmc
stos
addr16
jno
mov
lods
popa
insb
daa
shrb
shrl
xchg
pop
stos
mov
int
subb
cmp
stc
popa
fs
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
xchg
pushf
neg
test
cli
out
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
outsl
ffreep
movsl
xchg
sbb
out
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
jg
shll
dec
push
xor
outsl
pop
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
enter
mov
xchg
pop
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
sub
shll
mov
dec
addr16
sub
int
xchg
jge
dec
daa
into
stos
sbb
iret
inc
xchg
cld
popa
fldenv
push
stos
in
xchg
jp
jae
fwait
or
jl
mov
lret
stos
mov
sub
xchg
xor
daa
insl
stos
mov
aad
sbb
push
out
in
les
pop
sub
sahf
xchg
mov
daa
xchg
fldt
inc
pop
xchg
mov
stos
jo
ret
addr16
sub
daa
jne
or
sub
pusha
xchg
inc
popa
out
daa
push
addr16
sub
push
xchg
xchg
daa
stos
xor
pushf
arpl
daa
dec
stos
outsb
xchg
pop
addr16
sub
test
xchg
fisubs
sub
or
daa
adc
arpl
int3
stos
xchg
and
shlb
mov
mov
shlb
adc
daa
sbb
addr16
andb
jns
sbb
ds
sub
shrl
sub
xchg
or
daa
dec
stos
test
mov
sub
addr16
popaw
mov
mov
jmp
addr16
and
xchg
call
stos
mov
sub
xchg
jecxz
daa
daa
sub
sub
xchg
adc
daa
lea
lds
push
adc
xchg
stos
cs
jmp
setae
daa
mov
addr16
sub
and
sti
stos
mov
sub
dec
xchg
adc
push
daa
jb
scas
xchg
in
adc
inc
popa
std
daa
loop
mov
xchg
repz
xchg
popa
add
lock
cwtl
xchg
mov
xchg
cltd
popa
repnz
xor
shrl
lahf
cli
xchg
or
daa
fsubrs
xchg
sub
aam
jmp
daa
scas
stos
test
ret
sub
daa
loope
stos
xlat
cmp
test
pop
aaa
shll
call
push
inc
fs
sarb
mov
pop
dec
or
cmpsb
mov
push
xchg
cmpsb
cmp
sbb
mov
sbb
push
outsl
adc
clc
iret
inc
je
pushf
mov
jle
cwtl
mov
or
mov
shr
adc
popf
pop
dec
pushf
rolb
xor
mov
js
imul
cmp
sub
mov
repnz
xchg
loop
or
dec
in
xchg
pushf
sbb
cwtl
hlt
pushf
rcll
mov
pushf
xor
push
dec
pushf
jae
pusha
pop
test
mov
pushf
or
dec
outsl
mov
xor
dec
push
and
inc
mov
scas
mov
shrl
clc
cmp
mov
pop
dec
push
jg
mov
rcrb
or
pushf
ret
cmpsl
pop
jne
jnp
pushf
jo
sbb
pop
mov
shll
inc
je
pushf
inc
arpl
jae
push
inc
and
xlat
mov
nop
jg
ljmp
hlt
add
shrb
lcall
out
mov
pop
ja
cwtl
mov
std
aaa
test
push
inc
jbe
pushf
test
jecxz
mov
mov
jb
in
cmp
add
or
or
mov
add
mov
rcrl
dec
movsb
xchg
int
cltd
iret
cmp
mov
test
movsl
dec
sbb
lret
bound
add
loopne
mov
rep
subl
and
ljmp
sbb
jmp
sbb
add
test
push
in
cltd
test
xor
scas
inc
lcall
daa
xchg
iret
cld
and
icebp
xor
inc
lret
lods
pushf
ja
cmp
pushf
loope
popa
and
push
jg
pop
data16
dec
mov
roll
add
push
jge
mov
push
pushf
mov
sbbl
xchg
pushf
sbb
int3
push
shl
mov
insl
sub
inc
out
sub
xchg
pushf
cmp
inc
pop
scas
cmp
cmc
ret
dec
sahf
aas
mov
mov
cmp
roll
cmp
rorb
push
mov
gs
negb
lock
ds
xchg
int
loope
inc
xchg
xchg
pushf
scas
xchg
jl
xor
lret
cmp
cmp
pusha
les
jmp
addr16
mov
xchg
lcall
xor
inc
pushf
cmp
cmpsl
clc
pushf
insb
pop
out
aad
aaa
aam
push
les
adc
jno
lods
stos
push
cmp
outsb
outsl
jmp
in
sub
adc
mov
call
pushf
pop
jae
lods
or
sub
pushf
mov
into
push
popa
mov
ss
jo
xor
pop
subl
mov
dec
mov
lret
rcll
in
mov
and
subb
je
cli
in
push
adc
pushf
stc
sub
xchg
jne
xchg
pushf
les
xor
sti
mov
pushf
ja
lds
sub
cmp
mov
pushf
xlat
inc
push
and
test
stos
sbb
std
inc
xchg
rcll
or
mov
fimuls
sub
aas
pop
adc
mov
sub
int3
mov
jmp
jle
call
mov
jl
test
push
imul
mov
push
xor
and
mov
pop
inc
pushf
xchg
cli
add
pop
les
cwtl
lods
xchg
lret
insb
mov
jns
pushf
les
or
aam
fldt
jbe
sbb
pushf
into
add
repz
sub
jp
cmp
daa
movsl
enter
pushf
insl
pop
add
and
jg
pushf
push
mov
test
add
pushf
mov
mov
pushf
add
xor
sbb
imul
mov
dec
daa
pop
stos
icebp
xchg
pop
addr16
sbb
stos
std
xchg
xchg
addr16
or
daa
lods
stos
rclb
mov
xchg
arpl
daa
push
stos
sti
xchg
fbld
sub
xchg
push
popa
pop
daa
xchg
lods
sub
xchg
cmc
popa
shll
stos
xor
sub
xor
and
subl
popa
jg
leave
stos
xchg
ret
addr16
sub
xchg
jge
jne
je
sub
mov
sbb
shrb
sub
xchg
test
daa
jecxz
mov
imul
xchg
adc
fsubrl
daa
rcll
lcall
lret
popa
lahf
daa
fwait
sub
push
stos
xchg
ss
ljmp
addr16
sub
adcb
stos
ret
addr16
ja
popa
loope
bound
add
inc
push
xchg
xchg
popa
mov
xchg
push
addr16
shlb
sbb
daa
in
stos
cmp
jp
xchg
movsb
popa
mov
aam
push
xchg
dec
popa
pop
daa
ds
mov
sub
cmp
daa
mov
addr16
sub
in
fisubl
daa
out
aaa
xchg
aas
add
push
outsl
xchg
jnp
mov
xchg
hlt
addr16
xchg
push
xchg
inc
popa
xlat
daa
out
stos
dec
xchg
andl
mov
in
daa
mov
cli
xchg
cmp
daa
or
cmpsb
mov
lds
daa
mov
add
loop
xchg
adc
scas
xchg
sub
sub
xchg
mov
int3
daa
and
out
push
inc
daa
xor
xchg
sub
add
daa
mov
aam
jle
xchg
and
daa
mov
enter
xchg
push
popa
test
mov
mov
mov
daa
xlat
stos
setb
addr16
test
addr16
fisubs
daa
fldcw
push
sub
xchg
loop
mov
or
addr16
sub
xor
push
stos
adcb
lea
lret
xchg
ss
xchg
inc
popa
int3
daa
int
notb
scas
sbb
cs
mov
xchg
shr
xchg
cmpsl
popa
jnp
dec
stos
mov
outsb
popa
jae
and
jg
cmp
cld
daa
dec
stos
or
ficoms
jb
outsl
sub
adc
adc
daa
cmp
lahf
sub
xchg
imul
dec
stos
xchg
bound
or
jnp
rep
push
xchg
scas
insl
sub
movsl
xchg
sbb
daa
cltd
stos
notl
iret
fists
sbb
pusha
sub
mov
stos
fistl
add
daa
out
sbb
sub
sahf
xchg
adc
adcb
daa
gs
nop
xchg
cmpsb
sub
xchg
loope
xchg
daa
stos
stos
das
xchg
xor
sub
mov
ljmp
xchg
mov
sub
aam
adc
daa
cmp
mov
fst
xchg
lods
popa
push
daa
push
stos
popa
xchg
xchg
addr16
dec
push
xchg
lods
popa
mov
sbb
scas
xchg
fisubl
sub
xchg
andl
jne
inc
xchg
xor
sub
xchg
mov
stos
js
stos
addr16
sub
mov
cmp
mov
rorb
sub
addr16
jmp
and
and
fwait
sub
xchg
xchg
fsubs
daa
cli
stos
lds
into
pop
xchg
pop
popa
cmp
and
addr16
sub
push
daa
aas
stos
xchg
xchg
xor
sub
leave
xchg
cmp
stos
xchg
push
adc
jl
xchg
cmpsb
popa
in
daa
cmp
sub
je
jle
cld
xchg
sub
jmp
xchg
shlb
daa
push
stos
imul
shll
cwtl
mov
mov
stos
pusha
xchg
mov
sub
dec
xchg
mov
daa
stos
stos
or
dec
dec
xchg
shlb
pop
stos
adc
sub
loope
fisubrl
sub
xchg
and
stos
pop
aam
std
xchg
push
popa
test
mov
sbb
popa
jmp
sub
stos
sub
cltd
daa
mov
mov
daa
xor
sub
andb
loop
adc
popa
sub
dec
stos
in
bound
sub
push
xchg
mov
cmp
int
popa
xchg
push
addr16
addr16
xchg
andl
cmc
stos
loopne
sahf
addr16
mov
stos
pop
xchg
dec
addr16
sub
aas
xchg
xchg
mov
shll
sub
xchg
popf
popa
xchg
lock
jne
repz
sub
xchg
xor
daa
cmp
mov
sub
cmp
sbb
addr16
sub
enter
adc
pop
sub
mov
daa
ss
mov
out
mov
jo
lret
fsubrl
xor
xchg
fbld
daa
shrb
les
pop
ja
ljmp
xchg
and
sub
xchg
xchg
or
daa
jbe
icebp
xchg
lcall
call
stos
inc
xchg
iret
addr16
sub
nop
daa
mov
mov
and
xchg
jns
jge
and
sbb
add
xchg
popa
scas
daa
daa
stos
push
xchg
add
sub
xchg
mov
and
xor
sub
xchg
mov
mov
movsl
adc
xchg
sub
stos
jns
adc
xchg
jns,pt
rolb
xchg
mov
mov
and
faddl
stos
and
sub
cmp
pop
stos
sub
notl
add
xchg
sub
sub
xchg
jl
pop
daa
ljmp
sub
cmpsl
xchg
cltd
popa
daa
daa
jne
in
xchg
dec
addr16
mov
xchg
push
popa
lcall
addr16
sub
repz
scas
popa
mov
loope
cmp
cmp
xchg
punpcklwd
daa
jno
cs
scas
stos
sub
xchg
daa
js
call
sub
xlat
xchg
adc
daa
xor
push
cwtl
popa
xor
xor
pop
xchg
bound
sub
test
daa
push
stos
or
es
shlb
daa
les
xchg
sub
adc
inc
popa
mov
xchg
dec
sub
test
daa
iret
stos
cmp
jge
xchg
cli
popa
mov
xchg
dec
addr16
sub
sub
daa
push
stos
add
sub
and
or
addr16
sub
add
xchg
into
sub
outsl
xchg
loop
jbe
mov
addr16
jmp
sti
daa
jns
lea
pop
mov
cld
popa
lods
daa
sbb
shrb
mov
inc
popa
mov
ret
stos
fistl
popa
mov
daa
lods
dec
frstor
lret
sbb
lret
popf
scas
lret
popf
and
cmp
lods
xchg
xor
xor
mov
mov
das
sbb
push
lret
sbb
lret
push
ss
xchg
xor
mov
sub
sub
sbb
push
mov
cmp
mov
mov
stos
lret
popf
sub
sbb
ds
xchg
mov
mov
ss
aas
aam
shlb
pop
lods
push
mov
xchg
mov
addr16
popa
bound
inc
inc
inc
inc
inc
inc
inc
inc
pushf
and
es
pushf
rol
ret
in
out
pushf
loopne
loop
add
push
pop
pushf
add
add
and
and
aam
iret
jecxz
lods
bound
roll
ret
add
ret
inc
lods
movsb
pusha
mov
pushf
add
and
pushf
loopne
inc
push
andb
addr16
add
mov
xchg
adc
jg
add
int3
jecxz
out
pushf
and
inc
loop
arpl
icebp
imul
cmpb
mov
rep
out
jnp
jne
push
popa
xor
dec
add
mov
jecxz
dec
inc
stos
mov
and
scas
mov
xor
inc
and
test
movsl
cmp
jg
movsb
cpuid
mov
loop
cmpl
mov
daa
or
daa
and
mov
scas
insb
and
cmp
ja
mov
jmp
and
and
lods
scas
aaa
movsl
fldenv
mov
subb
sub
xor
cmpsb
inc
test
test
inc
mov
cwtl
mov
repz
into
cmpsb
or
and
push
adcl
xchg
mov
and
ret
lods
es
and
sbb
xchg
gs
xchg
and
scas
test
and
inc
cmpsl
pop
bound
stos
push
inc
and
icebp
jp
and
stos
mov
fstpl
mov
mov
add
xorb
clc
cmpl
xor
xor
jb
add
andl
pusha
sub
scas
cmpsl
and
and
mov
xor
fwait
mov
sub
imul
fs
xor
mov
sub
mov
outsb
cmpsl
nop
imul
pop
aas
push
popf
add
sub
mov
xor
inc
movsl
inc
stos
xorb
sahf
or
inc
aas
das
data16
mov
or
loopne
andl
add
and
mov
aaa
and
xchg
js
movsb
inc
and
es
stos
jns
xor
jo
inc
and
lds
jp
packsswb
push
and
repz
xor
cmpsl
and
leave
movsb
das
scas
xchg
xor
mov
cmpsl
stos
mov
loopne
fnstsw
scas
adc
xor
shlb
and
ret
and
es
sub
and
test
loope
lcall
jmp
mov
xorb
sub
and
stos
sub
mul
packsswb
inc
or
inc
and
cmp
daa
mov
adc
jg
and
andb
push
rorb
scas
and
aad
push
sub
push
imul
sub
jae
gs
mov
sub
dec
imul
jo
loope
xor
mov
sub
sub
mov
aaa
xchg
pop
xchg
daa
pop
into
jno
out
jg
and
cmp
xor
sbb
push
mov
jno
iret
dec
fadds
movl
lods
and
movsb
das
aaa
daa
and
je
xor
repnz
mov
push
ja
ss
repz
or
popa
hlt
mov
adcb
hlt
mov
cmp
inc
addr16
lret
inc
and
mov
gs
insl
push
inc
incl
imul
dec
jle
and
mov
mov
and
jb
insl
stos
sub
test
mull
inc
mov
and
cmp
shlb
arpl
addr16
mov
mov
cs
cmpsb
mov
movsb
sub
push
stos
mov
mov
add
cmpsb
ret
dec
stos
xchg
mov
jp
test
xor
mov
mov
xchg
xor
mov
add
in
mov
mov
mov
lea
and
cmpsb
aaa
rolb
scas
jnp
mov
dec
mov
xchg
mov
sub
stos
daa
mov
cmpsl
cmpb
mov
fs
addr16
mov
cmp
xchg
and
mov
scas
jg
cmc
and
dec
pop
mov
stos
pop
inc
stos
cwtl
mov
lea
jmp
xchg
and
cmpsb
xchg
scas
clc
xchg
mov
add
mov
and
sbb
inc
mov
mov
cmpsl
push
and
scas
mov
sub
mov
xchg
sub
mov
adc
inc
mov
and
inc
mov
scas
arpl
and
xor
and
leave
mov
sub
jg
popa
xchg
mov
cltd
scas
subl
arpl
jo
enter
aaa
imul
stos
inc
and
mov
lods
icebp
cmpsl
fldl
mov
arpl
lods
xchg
inc
mov
lds
cmp
loope
lret
mov
into
inc
movsb
xchg
stos
mov
test
cmpsl
xchg
mov
lods
imull
sub
cmp
xor
jmp
jne
lock
mov
cmpsl
inc
movsb
lea
inc
cmp
int
mov
sub
mov
xor
icebp
cmpsl
jmp
jge
add
mov
mov
lods
cmpsb
xchg
cmpsl
mov
mov
jecxz
test
mov
mov
cli
mov
pushf
pusha
stos
jp
mov
mov
jl
and
xchg
imul
fildll
cmpsl
fiadds
push
mov
mov
jge
mov
stos
popa
dec
mov
dec
sub
lsl
shll
and
stos
icebp
xor
and
in
jb
sub
scas
adc
scas
mov
pusha
mov
inc
lods
dec
loopne
daa
mov
mov
cmpsb
mov
mov
aas
mov
mov
lds
mov
inc
xor
sub
scas
mov
adc
pushf
pusha
cmpsl
mov
mov
leave
scas
mov
lods
cmpsb
aam
mov
mov
imul
mov
sahf
dec
stos
mov
push
andl
popa
mov
cmpsl
movsbl
lods
mov
xchg
lods
push
xor
loope
mov
inc
mov
mov
or
mov
push
cmpsb
das
cmpsb
insl
movsl
and
loope
mov
stos
mov
add
mov
lods
pop
cmpsl
xchg
mov
mov
xchg
mov
mov
loopne
or
arpl
and
ljmp
negl
cmpsl
jne
lds
xchg
mov
ret
xchg
mov
dec
cmp
mov
xchg
and
jg
icebp
cmpsl
jmp
jge
loopne
lods
jge
loopne
mov
aaa
inc
xor
mov
sub
fstpt
clc
jmp
xchg
and
sub
push
push
mov
sbb
cltd
mov
sub
stc
cmpsl
test
mov
daa
inc
cmpl
mov
mov
loopne
cmpsb
cmpsl
jne
loopne
test
mov
cmpsl
stos
add
shll
sbb
subb
sub
inc
mov
mov
jge
fstpt
mov
and
cmpb
xchg
cmpsb
addr16
loopne
mov
jne
ljmp
insl
ss
scas
jmp
jge
loopne
mov
pushf
xchg
cmpsl
ss
dec
lods
jb
cmpsl
stc
or
and
cmpsl
mov
scas
mov
daa
mov
sub
es
push
movsl
lss
test
cmpsl
movzbl
mov
cmpsb
jmp
jge
test
mov
and
xchg
xchg
mov
lods
out
and
movsb
test
cmpsb
stc
imul
cmpsb
das
mov
inc
mov
mov
jge
lds
out
inc
mov
movsb
adc
test
cmpsb
dec
dec
inc
cmp
mov
mov
mov
xor
scas
inc
mov
repnz
and
pop
stos
insl
inc
cmpsl
xor
arpl
repnz
sbb
mull
mov
test
mov
scas
mull
lods
and
mov
sub
cmc
mull
xchg
mov
cmp
mov
orl
cmpsl
mov
fbld
adc
sub
cmpsb
pop
or
cmpsl
xchg
movsb
xor
imull
lea
in
scas
nop
stos
xchg
ds
jmp
addr16
jmp
test
arpl
test
cmpsl
scas
mov
ret
cmpsl
bt
lds
inc
stos
lea
add
inc
lods
lods
mov
jmp
xchg
sbb
dec
cmp
cmp
cmp
mov
lods
ss
mov
mov
cmp
movsl
inc
out
mov
adc
mov
mov
fnstsw
xorb
inc
mov
andb
mov
push
scas
cmpsb
iret
shll
push
scas
imul
mov
dec
cmpsl
cmpsb
mov
movsl
jg
stos
outsl
mov
js
fs
icebp
pushf
jmp
cwtl
scas
leave
into
test
scas
inc
mov
mov
leave
mov
mov
pop
loopne
jmp
lahf
imull
jmp
jg
xchg
cmpsb
cmpsl
add
daa
movsl
into
inc
movsb
xchg
stos
imul
ret
mov
xchg
stos
ss
stos
test
cmpsl
xor
xorps
mov
mov
icebp
cmpsb
jge
adc
mov
mov
xchg
mov
mov
mov
jo
outsl
and
roll
mov
movsb
jb
mov
mov
jb,pn
stos
inc
mov
jg
cmp
mov
cmpsl
cmpsb
mov
mull
sub
mov
loope
mov
xor
push
jp
mov
mov
cmp
movsl
mov
mov
xchg
mov
aas
stos
int
hlt
jmp
test
scas
and
mov
movsl
mov
jmp
xchg
test
and
sub
outsl
scas
pop
xchg
scas
pop
add
mov
mov
std
mov
pushf
aas
gs
andb
mov
push
cmpsb
das
movsb
insl
stos
inc
pusha
mov
fldt
scas
repnz
lods
addr16
sub
mull
mov
mov
mov
pop
mull
sbb
mov
pushf
cmp
popa
mov
mov
mov
movsb
and
mov
ljmp
movsl
push
jo
sbb
mov
lea
pushf
pusha
cmpsb
jp
cmpsl
test
lods
insl
bound
movsb
into
inc
mov
xor
mov
push
sbb
stos
pop
aas
stc
stos
jecxz
clc
addr16
dec
jmp
mov
xchg
or
jb
cmpsl
stc
or
pushf
lods
inc
xchg
mov
dec
stos
movsl
inc
test
xchg
lods
rsm
dec
movsb
addr16
mov
stos
sub
loop
scas
add
jb
lods
clc
dec
mov
and
dec
repnz
inc
in
mov
dec
jae
xchg
test
andb
and
scas
lds
dec
stos
arpl
fildl
xchg
jecxz
mov
mov
mov
lret
push
inc
notb
cmp
pushf
lds
jnp
call
cmpsb
mov
xor
xchg
cmpsb
mov
and
mov
movsb
test
ret
das
dec
xchg
and
scas
test
insl
repnz
mov
mov
dec
mov
mov
scas
jmp
mov
loop
mov
mov
and
aas
dec
cmpsb
xchg
mov
test
andb
fimuls
mov
mov
sub
adc
mov
xchg
mov
adc
cmpsl
mov
mov
pop
movsb
dec
cmpsl
inc
mov
mov
mov
pushf
andb
sahf
mov
mov
adc
mov
lods
scas
adc
mov
mov
nop
cmp
push
andb
mov
lea
rcrb
test
xchg
stos
pop
mov
cmpsb
xchg
scas
dec
outsl
lock
xor
rcll
sub
adc
lods
stos
mov
mov
inc
mov
mov
jge
lds
scas
pushf
add
cmp
mov
mov
jge
lds
xchg
test
ja
mov
movsl
sahf
out
movsb
xchg
into
cmpsl
in
lret
mov
mov
pop
pushf
cs
pop
lcall
into
pop
inc
hlt
add
mov
inc
or
push
xchg
cmp
mov
movsb
pushaw
cmc
push
pushf
stc
pop
push
insl
dec
lds
pushf
fucomp
cmp
rcrl
add
ja
daa
icebp
out
dec
jbe
lods
hlt
and
mov
lahf
shl
mov
pushf
mov
pop
sub
and
rclb
mov
shrb
adc
testb
ds
mov
sbb
loopne
sub
xchg
imul
jno
inc
sbbl
ficomps
imul
and
shr
arpl
xor
xor
mov
rorl
ds
pushf
xor
lret
inc
inc
or
jne
lods
shl
ret
pushf
outsl
adc
jp
imul
sbb
mov
mov
add
and
cmp
add
add
dec
movsb
es
fstps
imul
jno
insb
add
mov
and
inc
pushf
mov
mov
and
sbb
xor
jecxz
mov
pusha
add
inc
std
push
xor
movsl
mul
jle
pushf
mov
int
test
mov
pop
pushf
xchg
dec
cli
push
clc
and
mov
cmp
je
aam
pop
loop
pop
xchg
sub
cs
pushf
adc
pop
loopne
and
stos
gs
lret
mov
xchg
cmpsb
mov
cs
pop
in
mov
adc
push
inc
or
jle
sub
stos
jl
jnp
inc
insl
ret
addr16
jle
add
or
insb
in
cmpsb
scas
cmp
xchg
lret
xchg
aas
movsb
sbb
dec
mov
pop
fsubrs
jae
sbb
inc
mov
xchg
test
gs
adc
dec
mov
ret
xor
test
cmp
xor
mov
adc
or
and
repz
pushf
push
mov
dec
decb
xor
pushf
lods
lods
rorb
pushf
xchg
js
repnz
popf
daa
and
outsb
jnp
mov
xchg
sbb
sub
add
and
xor
das
scas
nop
movsl
out
negl
push
mov
cmpsb
cmp
push
mov
pushf
pop
and
pop
jns
inc
xor
jnp
cmp
cmpsl
aaa
mov
mov
adc
test
sarb
inc
popa
xchg
dec
jb
or
enter
cmp
insb
fwait
mov
out
cmp
add
leave
lcall
push
cld
jns
lods
daa
ss
popa
mov
jge
xchg
mov
fcomi
mov
inc
ret
ret
sti
pop
shlb
and
push
mov
mov
rcrl
xor
jb
popa
cmpsl
pushf
or
adc
in
lds
scas
push
mov
leave
dec
inc
cmpsb
popa
ds
mov
xchg
fcomp
addl
sub
test
push
outsb
dec
stos
mov
pushf
sub
mov
xlat
xchg
mov
out
test
ljmp
inc
dec
add
and
push
or
mov
add
jmp
mov
cmpsl
lods
mov
aas
xor
xchg
mov
mov
pop
dec
cmpsl
out
mov
ss
mov
outsb
inc
sbb
lea
repz
sub
jge
jg
and
sti
insb
xor
push
push
cmp
and
andb
neg
jne
lret
mov
enter
or
pop
mov
pushf
scas
push
stos
loopne
mov
dec
and
push
and
cld
fdivrs
pushf
cmp
push
dec
xlat
add
pop
sub
and
pop
jae
xchg
pop
loope
pushf
sbbb
dec
ret
push
mov
clc
rolb
lahf
pushf
movsl
and
lfs
test
inc
cmc
lods
or
popa
in
cltd
inc
fucom
or
xor
cwtl
cmp
fs
lods
lods
cltd
repz
push
mov
sbb
aad
jne
pushf
lock
xchg
xchg
mov
mov
jo
std
and
sbb
pushf
sub
cmpsl
add
imull
xchg
shl
pushf
push
or
lods
jb
test
pushf
shlb
test
xor
push
mov
dec
push
ret
pushf
mov
lock
ret
xchg
dec
jmp
int
pushf
int3
outsb
xor
adc
xor
and
ljmp
cli
or
jne
xchg
add
popf
pushf
adc
xchg
sub
dec
pop
loop
mov
loop
data16
lods
out
sbb
jp
les
mov
aas
pop
arpl
adc
out
sub
mov
loop
sub
pushf
fsubl
cmpsb
idivb
sub
sbb
lahf
stos
jge
mov
out
imul
adc
cmpb
push
stos
jp
xchg
pushf
and
xchg
clc
fdivp
insb
push
and
scas
jno
shrl
pushf
jae
sbb
mov
mov
fmull
adc
ret
es
pushf
inc
imul
and
popf
mov
inc
jecxz
mov
add
xchg
adc
frstor
fwait
aam
sbb
movsb
cmp
jo
push
in
add
lds
inc
ljmp
mov
jo
arpl
lahf
cmp
adc
lods
iret
pop
test
movsb
xchg
pop
mov
std
pushf
arpl
loop
ret
popf
les
mov
aam
aaa
repnz
frstor
movsb
aad
out
ss
inc
ljmp
mov
adc
pushf
nop
mov
add
stc
xor
jp
inc
jo
icebp
xor
xor
or
es
pusha
pushf
sub
sbbb
mov
push
add
loopne
push
in
lods
cmp
xor
std
or
dec
xchg
insl
adc
test
cltd
jp
movsl
popa
mov
loope
sbb
pushf
cs
jle
mov
ret
push
test
das
cltd
or
out
and
cmpsb
mov
xor
mov
pop
ficoml
mov
fistpll
pop
mov
add
fs
popf
cmpsb
clc
lock
mov
xchg
xchg
pop
movsb
scas
dec
adcl
jg
hlt
es
mov
movntps
xchg
repnz
lret
jo
int
mov
xlat
into
pop
fidivs
xor
push
rcrl
xchg
out
and
pop
mov
mull
test
mov
es
dec
cmp
pushf
cld
out
outsl
xchg
or
popa
leave
and
test
mov
lds
sbb
pop
push
push
mov
mov
cmp
imul
ficoml
sub
ret
dec
mov
sti
mov
mov
mov
pop
add
repnz
pop
sahf
pushf
shlb
daa
or
je
sub
outsb
xchg
adc
pushf
xchg
rcrl
adc
cmp
jne
cli
inc
jl
adc
lods
call
movsl
out
pushf
lea
neg
xlat
sti
popa
add
pushf
xor
xchg
aas
pushf
icebp
call
xchg
mov
mov
jmp
push
mov
push
push
scas
pop
jg
jl
sub
xchg
std
sub
xor
sub
test
movsl
jecxz
stos
sub
shlb
int3
sub
pusha
pushf
jle
push
pcmpgtd
mov
pop
sbb
adc
pushf
mov
jbe
lods
or
testb
adc
sbb
mov
jp
call
in
push
mov
add
and
jp
or
mov
xchg
rcrb
or
shr
pushf
mov
movsl
mov
push
pushf
call
adc
pushf
fwait
mov
cltd
ja
jno
and
dec
ret
xchg
mov
pushf
cmp
js
and
fmul
cmpsb
pushf
push
call
cmp
aaa
jl
fcomi
in
ret
std
fisttpl
sbb
xor
push
add
test
mov
mov
and
dec
xlat
mov
cmp
push
sub
into
scas
mov
test
into
and
jbe
das
ds
mov
pushl
pushf
push
lea
jmp
push
call
cs
jg
popl
add
sbbb
mov
pop
xchg
cli
int3
xchg
lret
push
xchg
stos
pop
cltd
push
push
push
jbe
frstor
ror
xlat
push
sub
stos
in
sbb
mov
ds
mov
out
mov
in
insb
xchg
addr16
pop
imul
inc
jge
ljmp
inc
sub
pusha
frstor
xchg
loopne
loop
repnz
xlat
mov
shrb
mov
or
jbe
sahf
dec
fsubl
lea
jne
movsbw
movb
pusha
mov
call
cmc
repnz
pusha
call
pusha
lea
jne
push
bsf
btr
mov
rol
sub
add
rcl
or
lea
lea
bt
jns
push
sub
pushl
pushf
pushl
popl
pusha
test
movw
cmp
movb
lea
ja
xor
xor
cmp
sub
sub
and
mov
shl
add
rcr
mov
jmp
push
call
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
outsb
fs
gs
popa
addr16
add
out
adc
bsf
bswap
call
add
push
je
push
outsb
ja
outsb
fs
popf
or
data16
shr
or
mov
add
mov
lea
stc
pusha
mov
test
xchg
shl
add
bsf
mov
jmp
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
popa
jo
jb
add
mov
shl
movsbw
sub
shrd
shr
and
mov
dec
add
neg
add
rcr
jmp
add
inc
gs
inc
push
add
pop
pop
add
push
call
add
imul
add
add
je
imul
add
push
gs
fs
imul
sbb
je
sahf
xchg
lods
testb
or
add
fildll
add
popa
pop
jo
push
shrb
or
repz
push
fwait
adc
dec
orl
jno
into
test
sbb
je
jnp
cmp
xchg
addl
loope
loopne
adc
sbb
aam
aas
in
aad
inc
push
imul
xchg
rcrb
test
cmpsb
add
push
sbb
xchg
cmp
sbb
cmpsb
mov
icebp
cmp
xor
imul
shrl
and
or
pop
pop
stc
daa
es
push
les
in
add
pushf
or
pop
sbb
cmpsb
loope
cmp
pushf
lret
fstpl
pop
inc
push
pushl
push
sbb
test
mov
test
ret
shll
push
mov
mov
and
jle
jecxz
nop
jns
push
std
pop
jbe
mov
push
call
or
pusha
mov
pop
xor
movsbl
and
lea
cmp
mov
movb
mov
cmc
movl
pushf
mov
cmp
jmp
lea
ja
jmp
mov
call
pushf
movw
movl
pushf
mov
push
pushf
pushl
ret
add
push
outsb
jb
imul
je
gs
mov
pusha
jmp
fs
mov
mov
jecxz
sub
xchg
adc
pop
shll
shl
aam
mov
sbb
cmpsb
xor
jl
mov
jg
rcll
push
outsl
mov
stos
xor
outsb
xchg
sub
nop
int3
lock
or
repz
sub
data16
jbe
rorb
not
pusha
mov
push
mov
lea
pusha
call
add
lea
and
cmc
rol
pushf
mov
bt
shr
test
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
gs
je
inc
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
push
gs
js
gs
imul
gs
and
pushf
cmp
stc
clc
add
mov
push
pushf
pusha
lea
jmp
add
insb
jae
jb
jo
inc
add
add
popa
insb
jo
popa
add
cli
setae
push
bt
sbb
push
bt
push
bsr
shld
mov
btc
das
push
ror
shl
rcr
aam
push
aam
push
daa
push
sbb
push
call
cmc
cmp
test
add
pushf
pusha
lea
jne
push
pushf
pushfw
popw
shl
xor
not
mov
cmp
call
lea
je
push
mov
jmp
adc
pushf
push
pushf
lea
jmp
lea
call
push
lea
jl
pushf
push
mov
pushf
lea
jmp
add
inc
gs
je
imul
push
add
add
jb
jne
insb
push
jne
jb
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
adc
cwtl
lea
cmc
neg
inc
mov
clc
test
push
lea
je
bswap
bsf
bt
movzbw
mov
rcr
add
sbb
mov
cmp
call
add
push
insb
jae
jb
gs
sti
sub
mov
pop
fwait
orb
popa
mov
jbe
icebp
aas
add
clc
inc
sbb
cli
mov
sbb
insl
lret
addr16
pop
into
mov
gs
in
xchg
into
ret
loop
jo
addr16
scas
mov
pop
outsl
dec
in
jp
jne
cmp
andl
xchg
cmpsb
xchg
ljmp
mov
std
mov
dec
rorb
test
rclb
decl
ds
cmc
ss
pop
jbe
out
mov
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
push
call
pop
cwtl
add
inc
jb
popa
je
push
push
add
jp
sti
repz
adc
xchg
xor
aas
arpl
dec
das
mov
xchg
dec
pusha
xchg
mov
inc
push
push
test
xor
pop
jbe
mov
add
movb
pushl
pushf
lea
jmp
bt
test
jmp
add
inc
gs
push
dec
outsb
outsw
add
lods
rorl
cmc
cmpb
lea
je
push
mov
lea
jne
movzbw
sub
push
das
mov
cmc
add
pushf
add
mov
stc
test
pushf
mov
jmp
push
call
test
clc
cmp
jmp
fsubrs
in
push
jae
sbb
mov
cmp
nop
xchg
dec
dec
jno
lret
add
sub
test
test
outsl
sub
push
jae
pop
cli
adc
ds
out
test
cld
int3
ja
cmc
inc
jp
notl
or
inc
stc
dec
sbb
les
movsb
mov
jne
xlat
pop
cld
push
fwait
insl
out
sub
cli
stos
outsb
push
test
std
repz
mov
imulb
fisubrs
jbe
push
lods
xchg
push
call
mov
xor
and
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
fadds
add
cmpb
call
add
push
gs
popa
outsb
fs
gs
outsl
jne
je
clc
jmp
and
jmp
pusha
lea
ja
cmp
add
rcl
shr
inc
movzbw
bt
jmp
add
inc
gs
imul
add
inc
gs
gs
inc
imul
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
mov
bt
clc
jmp
stos
pushf
pushf
lea
jmp
rcl
sub
bt
clc
shr
bsf
sbb
mov
adc
add
sub
clc
call
mov
out
leave
mov
xchg
scas
mov
aas
pop
hlt
test
dec
lret
rorb
jns
test
inc
idiv
rclb
xchg
jbe
xchg
inc
push
test
add
mov
pcmpgtd
lods
fisubs
into
push
mov
sar
xor
shl
mov
stc
xor
stc
clc
shr
stc
cmpl
pusha
lea
je
stc
clc
test
jmp
add
push
gs
popa
jae
inc
jb
outsl
jb
xchg
jae
sub
adc
ret
adc
jnp
je
fs
in
pmulhw
es
insl
sbb
pop
hlt
cmp
lret
mov
bnd
mov
ja
ss
test
mov
pop
and
rorl
int3
dec
mov
push
pop
mov
sbb
adc
stc
pop
fsubrl
inc
outsb
mov
jbe
dec
xchg
not
lods
call
pusha
pusha
cmp
jmp
bts
mov
jmp
lea
jne
pushf
pusha
jmp
movw
pusha
pushf
inc
lea
push
movw
lea
call
jmp
shr
cmp
stc
clc
cmp
movb
pushf
pusha
lea
je
jmp
add
dec
popa
jo
imul
insb
add
test
incl
call
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
popa
jo
gs
jb
jns
lea
je
pushf
pusha
pushf
push
lea
jmp
add
inc
gs
jns
je
insl
inc
imul
jns
add
popf
adc
add
add
je
outsl
arpl
push
imul
cmp
bt
add
call
push
mov
lea
jne
sar
movzbl
sbb
jmp
push
call
add
sub
push
lea
jne
dec
btr
not
mov
cmc
test
sub
xor
stc
movzbw
mov
test
clc
sub
test
test
pushl
clc
cmp
pusha
stc
cmp
pushf
pusha
push
call
add
insb
jae
jb
outsb
inc
add
pushw
popfw
pusha
movb
inc
mov
push
adc
lea
pusha
pushl
ret
cmpsb
lods
arpl
out
mov
mov
test
inc
push
jp
rol
dec
adc
cmp
mov
mov
ljmp
add
popa
in
bound
cmpsb
out
jge
out
cmp
mov
js
pushf
lea
jae
test
cmc
sub
pushf
lea
call
pusha
movb
movb
jmp
add
inc
gs
popa
jae
inc
jb
outsl
jb
jmp
push
call
and
or
mov
rcrb
add
sub
jge
xchg
cmp
jae
xor
push
cmpl
test
sbb
jp
jbe
lcall
in
stc
and
aaa
ds
adc
xor
imul
push
test
into
inc
dec
pop
jo
pop
jo
mov
dec
adc
scas
jle
call
daa
xchg
inc
add
push
imul
je
gs
push
call
xchg
lret
add
dec
gs
popa
addr16
outsl
js
add
rorl
xchg
ret
pushl
movzbw
mov
movsbw
mov
pusha
mov
bswap
mov
movsbw
bswap
xchg
push
mov
movzbw
bswap
call
adc
mov
mov
mov
pushl
ret
bt
sub
jmp
add
inc
gs
gs
je
jo
imul
mov
mov
push
mov
pushl
ret
inc
lea
je
pusha
clc
cmc
ror
jmp
jmp
add
push
imul
jb
je
arpl
mov
or
dec
outsb
lcall
and
pushf
pushf
movl
lea
jmp
add
data16
je
add
add
je
inc
dec
inc
push
add
shll
mov
js
jle
adc
gs
call
adc
xchg
pusha
jae
daa
rorb
sti
push
lret
cmp
call
in
sbb
add
icebp
pop
cmpl
mov
jmp
push
cvtpi2ps
jo
mov
cmp
ficoml
mov
pop
jbe
inc
adc
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
das
sub
cmp
add
push
add
mov
xchg
ror
ljmp
push
ret
mov
fwait
add
popf
jle
mov
aam
fisubrs
aas
mov
cmpsb
pop
lcall
inc
mov
cmp
and
cmp
cmp
lret
fists
lahf
jns
jo
out
sbb
adc
loopne
mov
push
ja
cmp
sbb
pusha
lea
call
push
pushf
movw
lea
jmp
push
push
inc
push
xor
cs
insb
add
add
add
imul
aaa
leave
out
xchg
mov
aam
xor
in
ja
arpl
shlb
les
jae
stc
lcall
frstor
pop
jbe
hlt
sub
xor
test
pusha
cmp
pushl
jmp
sub
dec
repz
icebp
test
sbbl
xor
cmp
pop
repz
cmpsb
add
adc
outsb
mov
jmp
aad
mov
push
nop
sub
cmc
pop
mov
sbb
push
add
push
data16
std
sbb
dec
call
jb
loop
inc
scas
mov
js
inc
hlt
in
dec
es
fmuls
pop
sbb
addr16
ljmp
cmp
cs
sti
divl
dec
movsl
push
push
and
jmp
outsl
jg
pop
jbe
cmpsb
mov
xchg
adc
clc
dec
jmp
nop
mov
fisttpl
xchg
scas
roll
lret
pop
jl
adcl
dec
cmpsb
add
addb
mov
popf
pop
xor
inc
repnz
jo
insl
sub
jmp
dec
arpl
adc
fwait
into
iret
gs
mov
rcl
and
insb
inc
xor
dec
xor
xor
cmp
std
dec
clc
int
dec
or
push
dec
xor
cmp
jbe
dec
sbb
mov
addr16
jno
cld
jmp
push
jnp
ljmp
cmp
decl
xchg
or
adc
les
inc
xchg
push
or
dec
add
test
out
pop
push
cltd
pop
or
or
imul
pusha
les
adc
push
sub
clc
mov
mov
out
fs
call
sub
or
and
ja
shl
sar
shr
cmp
sub
rcr
rcr
add
and
shrd
shrd
mov
cmp
mov
push
repnz
call
imul
add
mov
or
aam
add
fisttpll
add
aad
add
fisttpll
add
or
sarb
add
or
mov
push
add
add
add
xchg
pop
add
jne
daa
rcr
stc
sub
cwtl
mov
shl
mov
add
cmc
clc
setl
mov
pusha
push
jmp
add
inc
js
je
jb
arpl
jae
call
lea
call
jmp
add
pushf
cmc
clc
movzwl
sub
add
mov
cmp
add
pushf
mov
mov
test
call
bt
test
push
lea
je
test
jmp
call
push
call
ja
mov
je
jns
je
insl
push
imul
imul
jb
gs
clc
jmp
out
inc
ret
andl
mov
je
loop
jb
fadd
stc
mov
mov
test
mov
ret
cld
out
clc
inc
mov
sti
jns
pop
xor
xchg
cmpsb
pop
cmp
jl
mov
mov
das
daa
mov
and
mov
fsub
and
scas
sub
jge
in
sub
cmp
and
push
stc
jge
xchg
mov
sub
std
inc
faddl
mov
bound
mov
mov
je
repz
lahf
mov
inc
pop
jge
pushf
loop
push
push
and
enter
out
cld
mov
test
sahf
adc
dec
in
loope
mov
and
mov
inc
mov
jbe
nop
add
sbb
cltd
subl
mov
sub
mov
add
daa
xchg
faddl
je
xor
stos
lahf
in
mov
pop
sub
or
fisttpll
mov
xchg
ret
sub
and
mov
inc
mov
out
cmpsl
mov
cltd
mov
std
inc
out
xchg
jle
scas
push
rcr
popa
js
and
and
mov
mov
fcompl
arpl
push
lahf
cmpsl
pop
xchg
xchg
daa
sub
cmpsb
arpl
stos
std
sbb
pushf
fildl
or
inc
mov
in
and
mov
fsubs
lahf
lret
mov
and
push
push
lods
xor
or
imull
and
add
mov
mov
dec
fisubs
mov
jecxz
cmpsb
lahf
aas
jecxz
addr16
arpl
sbb
loope
movsb
inc
ret
lcall
jg
cmc
pop
mov
sub
add
jp
fstl
popf
adc
ss
mov
mov
scas
out
pop
xchg
push
andl
cmp
sbb
mov
adc
xchg
fucom
cmc
mov
pop
cld
xor
dec
pusha
cmp
out
scas
orb
sub
xor
mov
fistl
aas
mov
or
js
arpl
xchg
insl
mov
stos
or
mov
xor
int
lods
mov
pop
fs
push
inc
and
ss
movsb
mov
inc
lods
mov
in
fwait
stc
arpl
arpl
int3
sbb
mov
cmpsb
xor
xchg
out
test
jae
cld
xor
xor
aas
stos
shrl
outsl
loope
les
and
rol
jg
pop
outsb
add
popf
xchg
loopne
adc
jge
mov
xchg
mov
aad
ljmp
xchg
cli
mov
into
sub
out
clc
add
out
test
movsb
xor
orb
xor
leave
jb
jns
mov
and
enter
stos
iret
loop
out
arpl
out
push
and
jae
jle
aas
rolb
jb
inc
mov
je
sbb
sub
fldl
aam
xchg
jecxz
std
lret
fildll
lcall
xor
mov
test
test
mov
out
xchg
and
in
andb
out
push
out
mov
aaa
and
lds
outsl
jl
or
mov
push
es
and
inc
mov
or
pop
subb
les
and
daa
dec
mov
mov
out
mov
gs
stos
mov
scas
mov
stos
mov
jge
jne
arpl
push
cmpsb
jno
cmpb
stos
mov
loopne
test
stos
cmpb
adc
xor
and
movsb
mov
cmpsb
das
or
movsb
scas
lahf
movsb
xor
xor
mov
mov
add
stos
xor
jbe
mov
ljmp
out
inc
dec
mov
out
mov
mov
fisubrl
mov
data16
sub
inc
imul
imul
xor
mov
test
cmp
mov
cs
mov
movsb
jo
jne
xchg
ds
mov
movsl
mov
nop
mov
insl
and
mov
subl
and
xor
mov
and
pushf
stos
cmp
mov
cmpb
push
out
mov
mov
xor
push
cmp
out
mov
mov
aas
mov
mov
pop
push
adc
add
sub
xchg
pop
lds
and
mov
scas
mov
mov
ret
and
mov
std
jne
or
inc
lahf
mov
jg
mov
and
dec
test
int
inc
and
insb
ret
mov
fs
stos
mov
push
stc
dec
xchg
xchg
lock
call
and
push
out
xlat
and
mov
mov
outsl
jnp
hlt
jle
xchg
in
and
xor
inc
lret
shrl
out
pop
ss
loop
std
mov
mov
pop
call
dec
jns
pop
mov
adc
ret
in
pop
cmpsb
fisubrl
jg
mov
adc
pushf
adc
and
mov
cwtl
ret
loopne
push
pop
pop
pop
mov
js
test
mov
jle
jns
std
mov
add
xor
ret
sti
cmpsb
push
jle
adc
es
leave
sbb
movsb
imul
jae
jp
mov
mov
aaa
es
jnp
ljmp
test
inc
popf
xchg
add
inc
mov
mov
mov
mov
add
mov
mov
fsubs
mov
and
int3
cwtl
cmpsl
shll
daa
subl
loope
mov
mov
fstpt
test
mov
lods
inc
cmpsl
std
cli
xor
dec
push
mov
cmc
jno
out
cmpsl
xchg
and
loope
ljmp
gs
stos
sti
adc
sub
add
std
shll
xchg
enter
aas
arpl
mov
jnp
leave
popl
scas
jle
jns
test
push
inc
arpl
push
in
lods
imul
jnp
mov
lahf
rol
adc
jb
push
push
and
xchg
loop
push
ds
push
push
mov
inc
xor
dec
repnz
aam
cmp
aaa
enter
inc
frstor
incl
lahf
push
xor
pop
scas
andb
shrl
stos
push
ljmp
dec
movl
ret
cmp
es
adc
sbb
int3
and
rcll
dec
repz
jmp
mov
dec
adc
sub
mov
sbb
inc
mov
test
pop
push
adc
arpl
mov
cltd
mov
sub
mov
fs
dec
shrl
sub
int
and
xor
inc
pushf
pop
xchg
inc
xchg
push
mov
rol
pop
daa
mov
into
mov
xor
out
ret
cltd
movsl
mov
xor
es
test
cmpsl
ret
push
rcr
sbbb
movsl
inc
ret
lods
sbb
adc
adc
sub
mov
ret
out
mov
cmpsb
push
cmpsl
dec
sbb
imul
mov
and
std
cmpl
xchg
mov
scas
xchg
jne
cmp
popf
add
cwtl
dec
cs
into
push
xchg
aas
popf
add
popl
mov
rcll
and
cmp
lods
dec
rcll
mov
add
sbb
ss
jb
cmp
cmpsl
loope
mov
sbbl
loope
rclb
jae
fisttpll
movsb
cmp
jo
js
mov
pop
push
sbb
jbe
xchg
js
popa
lods
shll
mov
ljmp
or
enter
push
enter
ss
jecxz
jecxz
movsb
shl
cmp
cld
and
and
and
in
std
aaa
cmp
daa
jnp
sti
mov
scas
cmp
mov
sub
sbb
add
xor
pusha
imul
mov
jne
cmpsl
jge
lea
hlt
mov
addr16
inc
adc
stos
dec
stos
sub
mov
test
push
and
fstpt
lcall
sti
mov
adc
bound
inc
mov
adc
xchg
andl
xchg
mov
data16
ret
sub
popa
add
pusha
inc
pop
daa
and
add
mov
mov
into
mov
popf
inc
mov
mov
mov
push
cmpsb
jno
mov
push
loop
jp
cmp
add
stos
mov
ret
andl
or
or
arpl
xor
push
jnp
loopne
mov
cmpl
cmp
call
es
lret
arpl
pop
dec
sarb
fnstenv
dec
sbb
and
jns
or
adc
daa
fidivs
test
push
scas
inc
mov
mov
sti
lods
sub
pop
sub
test
ss
fidivrs
mov
daa
inc
and
lods
push
fidivl
lods
and
mov
les
leave
daa
add
mov
or
ljmp
popf
orl
pop
pop
fisubrs
cld
arpl
push
arpl
sub
mov
scas
fs
imul
xor
repz
nop
ret
lods
lahf
loopne
xchg
lcall
jp
push
js
mov
mov
jno
adc
pop
xor
adc
aad
sbb
scas
and
movsb
divl
dec
imul
jp
insb
sbb
dec
subb
add
sbb
sub
mov
std
inc
outsl
pop
jg
jecxz
and
arpl
mov
mov
push
cmpb
cli
lahf
inc
push
pop
cmp
mov
xchg
mov
jl
and
fdivrs
sbbl
in
and
icebp
sub
xchg
addr16
mov
mov
or
mov
xchg
mov
lds
xor
pop
cmp
loope
sahf
lds
mov
ret
cmpsb
mov
loop
push
xor
mov
inc
mov
jo
rcll
mov
inc
test
mov
leave
mov
insl
sub
adc
test
ljmp
inc
jmp
sub
inc
addr16
mov
lahf
data16
mov
daa
call
cmc
pop
lret
pushf
fdivr
std
xchg
jp
mov
addl
fadds
xchg
mov
arpl
jb
out
sub
sbb
clc
cmpsl
pop
mov
pop
and
xlat
cmp
lcall
test
cmpsl
das
mov
push
mov
mov
inc
test
int3
mov
dec
pop
lahf
mov
adc
movsb
es
out
and
add
sti
xor
xor
mov
inc
and
jbe
stos
cmpsb
das
insl
pop
mov
mov
cmpsb
jno
pop
or
xchg
loopne
jmp
test
and
fwait
mov
inc
jb
lret
mov
adc
pop
mov
adc
push
cmpsb
jb
movsb
and
xor
xchg
and
stos
daa
out
cmpsl
cmp
movsb
mov
stos
fwait
js
sub
clc
andl
pop
cmpsb
icebp
mov
mov
mov
cs
dec
adc
sub
pop
scas
push
add
sahf
popa
jl
ds
dec
fldl
sub
fimuls
hlt
stos
jle
int3
std
mov
scas
repnz
and
cmc
xchg
ljmp
scas
and
shll
cs
xor
mov
aad
cld
in
mov
adc
stos
ret
hlt
lcall
mov
lods
test
cmpsl
xor
xchg
adcl
mov
and
mov
cmp
shrl
movsb
stos
mov
and
mov
xchg
mov
pop
sahf
jno
dec
and
sbb
add
mov
je
jno
mov
sub
inc
sbb
pop
je
mov
ret
sub
mov
aas
in
add
inc
imul
adcl
sbb
outsl
pusha
cmpsb
inc
orb
ja
jb
jno
xor
mov
push
jp
popf
or
or
loopne
mov
or
add
jge
lds
mov
xor
std
mov
cwtl
stc
lret
aad
sti
lods
popf
and
and
cmp
shll
push
mov
xchg
loop
xchg
aad
and
in
out
aam
cs
mov
je
and
jo
jb
test
cltd
outsb
inc
or
das
or
sbb
data16
aad
mov
lahf
mov
inc
jae
mov
fistps
push
jnp
cmp
cltd
dec
jl
push
sbb
mov
insl
and
mov
les
dec
and
into
mov
and
dec
pop
and
pop
pop
mov
jnp
adc
inc
xlat
cld
pushf
sarb
cltd
jle
sub
cmp
jne
hlt
pop
mov
xchg
fstps
int
fcmovbe
jl
sub
mov
mov
lahf
mov
xchg
into
testl
and
shr
je
sbbl
mov
sub
xor
daa
popl
xor
mov
lret
push
popf
adc
mov
mov
and
test
cmp
or
dec
lods
sbbl
cmp
mov
adc
sub
sub
xor
es
xchg
xchg
pop
or
mov
fmuls
mov
and
jl
xor
movsl
sub
mov
js
jns
mov
sub
dec
mov
pusha
pushf
out
mov
out
xor
enter
sarb
and
mov
lahf
cmp
mov
mov
mov
jnp
mov
xchg
fwait
arpl
rolb
ret
jmp
jno
pushf
sbb
mov
mov
inc
sbb
cltd
sub
xor
or
std
pop
mov
cmp
scas
and
adc
pop
xchg
mov
add
cltd
pusha
je
das
dec
movl
pop
test
popf
ss
pop
mov
test
mov
std
jnp
loop
mov
jne
dec
insl
hlt
and
bound
hlt
mov
fstpt
push
sti
cld
dec
fldcw
add
cmp
xchg
ja
sub
divl
inc
cmpsl
movsb
xor
outsl
ds
jge
xor
mov
and
xor
mov
or
xchg
in
repnz
neg
popf
pop
jmp
xor
cli
int
pop
mov
jp
xchg
aaa
sub
dec
inc
mov
jnp
mov
hlt
cmp
xchg
cltd
outsb
xor
outsb
dec
ds
test
xchg
mov
push
les
scas
rorl
pusha
out
sbb
leave
adc
sub
pop
adc
mov
jecxz
xor
pop
nop
aad
nop
iret
pop
popa
test
movsb
push
ds
jb
int3
sbb
stos
xchg
xor
subb
and
push
out
add
and
aad
aaa
xor
pop
loopne
hlt
setg
repnz
cwtl
add
subl
aas
add
gs
lret
les
mov
add
xlat
jnp
test
repz
aaa
mov
add
mov
fisubl
movsb
outsl
inc
inc
jb
xchg
jne
mov
mov
mov
add
inc
scas
loopne
scas
pop
popf
xchg
add
sbb
sbb
xorl
adc
out
fidivs
adc
gs
xchg
popa
and
push
hlt
mov
lret
mov
adc
mov
mov
ja
js
movsb
sete
pop
cmp
jae
push
adc
sub
test
cmpsb
push
push
pop
popa
xor
decb
inc
adcb
mov
in
fwait
lods
sahf
push
pop
movsb
jecxz
stos
inc
mov
mov
and
add
mov
sahf
ss
jno
mov
xchg
push
mov
in
clc
adc
fsubrl
scas
xchg
ja
xchg
mov
xchg
arpl
and
xlat
xchg
mov
inc
fdivs
mov
push
lret
mov
mov
push
lahf
add
adc
pop
mov
cmp
outsl
cmpb
scas
mov
aam
mov
icebp
xchg
leave
in
fs
push
and
xlat
mov
mov
lods
popf
fsubr
popa
mov
and
out
popa
addr16
adc
add
xor
fdivl
subl
sbb
xchg
jae
or
dec
pop
push
loope
imul
not
cmp
std
pop
jo
sbb
leave
dec
inc
adc
dec
xchg
ds
xor
pop
pop
mov
imul
lods
cmp
repz
pop
jo
shll
cmpsb
push
clc
lahf
fimull
jno
loope
mov
mov
fidivrs
das
sub
jge
push
ret
inc
shll
out
inc
cmp
es
or
leave
out
bound
mov
imul
add
add
sbb
sbb
and
aad
push
push
lahf
pop
sub
xchg
mov
adc
daa
clc
clc
test
mov
jae
xor
pop
sub
mov
and
pop
or
out
xchg
pop
daa
mov
movsl
xor
cmpl
jecxz
enter
inc
mov
aam
push
sbb
and
rol
mov
cmpl
sbb
and
ret
mov
fdivl
fstp
lock
sti
movsl
mov
ss
and
adc
add
sub
adc
xchg
jns
leave
es
add
leave
xchg
imul
xlat
icebp
pop
lods
scas
in
je
in
mov
nop
rcll
inc
movsl
lcall
sbb
or
cmp
pop
int3
push
inc
dec
or
pusha
xor
mov
test
and
pop
mov
xor
dec
push
xor
adc
mulb
ljmp
aaa
adc
mov
les
rcl
mov
and
inc
pop
test
mov
fwait
xor
or
mov
fsubrs
mov
test
scas
mov
or
cmp
and
mov
xor
cmpsl
xchg
and
add
es
sbb
xchg
ficomps
loop
dec
test
xor
mov
dec
jp
or
or
mov
outsl
scas
xchg
xchg
push
pop
sbbb
test
jmp
mov
ret
std
cltd
enter
arpl
pop
mov
push
scas
cmpsl
nop
xor
lahf
leave
cltd
push
push
jl
mov
pop
fwait
cmp
xor
jnp
add
sbb
sub
mov
push
daa
insl
aas
xlat
mov
jg
loope
jle
dec
je
cmp
es
and
adc
mov
push
lcall
pushf
lods
jl
add
in
adc
je
sub
gs
ja
dec
sbb
sub
sub
adc
xchg
outsb
rcrb
cmc
rorb
adc
fwait
dec
out
aad
sub
popf
sub
loope
rcrb
sbb
clc
lfs
stos
mov
fstl
jbe
nop
jno
mov
orl
mov
jp
mov
gs
stos
xlat
jae
cmp
jbe
mov
int
push
les
out
jp
lahf
jg
scas
lods
scas
inc
mov
repz
jp
inc
pop
mov
std
cmpsb
sbb
mov
stos
scas
mov
xor
fwait
into
pop
cmp
stos
xchg
xor
pop
outsb
out
adc
xlat
insb
outsl
pop
inc
out
bound
jge
aaa
mov
xor
dec
push
mov
and
in
xor
mov
loope
lods
daa
dec
push
mov
mov
dec
cwtl
daa
mov
jns
std
cwtl
or
add
test
push
sub
nop
les
cmpl
xlat
jbe
mov
adc
test
sub
pop
or
std
clc
arpl
stc
push
sti
push
mov
mov
cmp
test
rolb
cli
ds
cmp
dec
mov
ret
inc
mov
imul
push
add
filds
xchg
test
mov
jg
and
pop
push
fdiv
pop
mov
ret
mov
fs
cmpb
stos
xlat
sub
test
and
mov
mov
xor
jp
mov
xor
ss
jae
cmp
push
test
out
add
cld
pop
dec
fs
nop
out
inc
mov
xor
jle
test
daa
or
sub
movsl
mov
inc
push
ja
add
mov
out
jmp
push
jns
mov
std
icebp
scas
pop
dec
int
andl
ljmp
gs
mov
mov
jns
loopne
clc
add
push
sbb
push
imull
sub
scas
pop
xchg
test
hlt
daa
jns
pop
pop
lahf
dec
das
mov
push
push
es
sbb
jae
mov
lea
mov
xchg
inc
mov
sbbb
mov
cmp
and
or
mov
mov
ret
ret
fwait
jl
cmp
add
stc
add
mov
push
jp
jbe
mov
lahf
imul
sub
mov
mov
rol
lahf
popf
dec
cmp
in
xchg
dec
mov
repnz
mov
cld
out
lds
jmp
sub
enter
icebp
lea
fmuls
jns
or
jb
movsb
jmp
daa
clc
ljmp
stos
xorb
mov
dec
and
push
adcl
daa
adc
clc
push
sub
adc
xchg
mov
lock
fcmovnu
cmp
and
roll
or
mov
and
mov
xchg
nop
add
outsb
adc
pop
dec
lods
pop
cmpsl
pusha
call
int
cwtl
outsb
sub
stos
mov
scas
cmpsl
push
xchg
fcomp
jmp
out
mov
scas
and
mov
mov
mov
insl
jmp
push
fsubrl
jl
push
ret
pop
adc
stos
mov
scas
jmp
sub
mov
jns
shrb
shrl
jno
test
test
bound
std
dec
mov
or
popf
adc
xchg
mov
es
mov
push
mov
lahf
jl
sbb
add
cmpsl
dec
adc
ss
adc
inc
cmp
clc
popa
lds
push
mov
loopne
and
jae
and
pop
fcoml
or
loop
mov
das
sub
cmp
push
dec
jg
cmpsl
icebp
cld
mov
cmpsl
clc
jno
aaa
pushf
icebp
enter
rorb
jecxz
ds
adc
cwtl
mov
call
pop
xor
movsb
test
bound
pop
add
pop
push
popa
repz
xlat
out
inc
fisttpl
js
into
push
std
xor
jecxz
mov
aaa
sub
and
leave
jle
push
and
mov
ret
in
cwtl
sbb
lahf
pavgw
dec
cmpsb
cmpsl
mov
add
or
stos
adc
mull
pop
inc
iret
mov
cmpsb
scas
addr16
xchg
sbb
stos
mov
pop
test
and
add
push
jg
xor
pop
jp
and
in
mov
pushf
or
popa
sbb
xor
mov
lods
decl
mov
and
sahf
or
mov
xor
rcrb
xor
cmp
and
jl
push
pop
xchg
add
mov
mov
adc
cmp
call
subb
jmp
fiadds
pop
andl
pop
rcll
xchg
fsubs
subl
cmpsb
dec
mov
fdivrl
lods
decb
call
add
movb
ds
lahf
inc
inc
sub
ja
pop
shr
jbe
jge
pop
call
and
adc
mov
test
push
mov
cmp
xchg
and
mov
lret
mov
lahf
scas
test
lods
or
inc
cmp
sbb
dec
imul
mov
loope
jnp
add
and
jle
mov
lods
lods
cmp
and
jns
xchg
and
int
gs
cmp
cmpsl
push
fwait
nop
push
fildll
int
or
add
pop
lods
repnz
push
ret
std
rclb
test
dec
sub
pop
js
sarl
adc
cmp
imul
jae
cli
pop
ds
and
clc
xchg
sub
andb
cmpsl
add
cmp
xchg
mov
iret
mov
out
daa
mov
sub
ret
sahf
test
dec
cmpsb
and
xor
insb
in
mov
push
cmp
jb
or
scas
and
cmp
sub
repnz
mov
sbb
sti
lahf
imulb
shlb
xchg
and
jns
mov
cmpsl
lahf
popf
pop
divl
ret
sbb
xchg
test
mov
pop
mov
jns
lahf
mov
pushf
scas
add
mov
mov
scas
incl
ror
cld
jbe
imul
push
clc
loopne
add
mov
mov
shll
add
mov
cmp
lcall
icebp
mov
xchg
push
mov
or
ret
cmp
pop
cmp
pop
jecxz
inc
mov
cmp
in
jg
jmp
and
stos
mov
sbb
adc
iret
or
dec
pop
cmp
sbb
xchg
mov
mov
aaa
aad
rorl
outsb
fisubs
xchg
mov
test
xchg
in
subb
clc
mov
adc
adc
pop
andl
shlb
gs
mov
cmp
fdivl
inc
stc
mov
inc
call
out
xor
mov
pop
sti
pop
mov
lods
dec
inc
push
incl
fldt
mov
jmp
jecxz
inc
jbe
add
cld
vmwrite
xor
subl
popa
push
loope
es
inc
pop
mov
fsubl
sahf
sbb
movsb
dec
lods
sbb
fs
cmp
pop
dec
movsl
lahf
arpl
stos
stos
pop
and
test
xchg
and
inc
in
xchg
inc
push
aad
gs
jae
inc
popf
inc
and
loope
fcomps
mov
orl
out
test
scas
dec
jno
sbb
and
outsl
pop
fnstcw
mov
scas
mov
imul
ljmp
popa
imul
mov
jo
and
mov
or
xlat
daa
enter
pop
mov
sub
pop
push
xchg
or
mov
adc
js
test
scas
loop
out
xchg
les
lret
xor
pop
faddl
lods
sbb
mov
or
xlat
sub
mov
insl
leave
cmpsb
fsubl
fisubrs
adc
out
cmp
dec
fsubs
clc
cmp
jl
gs
int
js
adc
adc
jne
popa
push
jg
cmp
cld
popa
clc
push
das
das
negl
int
scas
dec
add
loop
mov
popf
xor
and
xorb
mov
scas
dec
and
cmp
jno
xor
insb
mov
mov
cld
cli
lods
js
daa
mov
add
jno
xor
in
repnz
gs
enter
lods
cld
and
xor
xor
outsl
outsb
cmp
popf
sahf
jmp
in
cmp
idivb
mov
shlb
mov
mov
xchg
inc
das
xor
scas
pop
mov
pop
pop
xor
inc
enter
jnp
mov
imul
add
jmp
mov
jns
sbb
mov
test
cmpl
lods
scas
sub
cmp
lock
aas
jnp
fistps
scas
scas
sub
push
cmp
pop
and
andl
ret
mov
mov
inc
ret
xlat
mov
mov
dec
movsb
scas
pop
cmp
mov
cmpsb
inc
mov
rolb
mov
lods
mov
roll
inc
xor
mov
fsubl
push
aas
adc
adc
movsl
fistl
mov
fsubs
adc
scas
xchg
inc
adc
xchg
test
pop
inc
cmpb
cmp
jbe
jo
int
roll
mov
stos
out
or
add
rol
pop
xchg
or
adc
mov
movsl
testb
enter
mov
mov
mov
mov
test
das
jo
xchg
jecxz
sti
ret
xchg
mov
mov
ret
jle
inc
pop
adcl
and
and
add
pop
loop
rcrb
mov
inc
and
rclb
or
test
pop
jne
outsb
pop
sub
cmp
jnp
or
cmp
and
bound
cmpb
sarb
or
out
add
xchg
or
rcl
xchg
jmp
xor
or
xor
jae
or
inc
scas
inc
xchg
and
out
shl
stos
mov
stos
test
sbb
rcl
jno
and
rep
dec
push
movsl
or
lods
fimull
test
xor
mov
lods
inc
in
jp
lret
mov
addr16
or
xchg
pop
pushf
xchg
stc
cmp
or
cmp
mov
mov
xlat
xor
mov
or
in
scas
pop
ds
in
ss
out
inc
mov
mov
pushf
sbb
adc
sbb
adc
insl
mov
sub
jge
pop
sbb
es
pushf
scas
sbb
popf
add
dec
lret
sub
jmp
lock
mov
inc
jl
jle
adc
push
cmp
and
aaa
sub
ja
sub
and
jge
push
cmp
mov
ds
sti
mov
in
gs
es
and
js
pop
and
je
fdecstp
daa
xor
bound
lods
push
stos
cwtl
testl
stos
and
push
insb
pop
lahf
cmp
movd
stc
ficoms
cmp
sbb
mov
sbb
xor
and
mov
push
mov
inc
pushf
pop
or
dec
cmpsl
push
mov
ret
sub
orl
pushf
pop
into
inc
aaa
hlt
int
std
mov
pop
jnp
push
mov
js
push
arpl
cwtl
pushf
add
fld
xchg
pushf
jo
jns
add
call
jae
ss
ret
jecxz
sarb
repz
adc
push
add
pushf
push
mov
sbb
pushf
and
repnz
mov
and
pushf
sahf
stos
sub
or
cmp
fnsave
mov
mov
movsl
mov
sbb
mov
cmp
out
push
subb
repnz
mov
or
test
push
leave
add
loop
jnp
rcl
fcomps
out
out
mov
movsb
leave
call
pop
xor
mov
pop
and
bound
pop
pop
test
pushf
subb
cmp
pop
push
lea
daa
and
pop
mov
sbb
adc
aam
cmc
xor
mov
jbe
movsl
scas
xchg
jecxz
sbb
lods
mov
lods
popf
lahf
cmpsl
pop
fs
fnstsw
sub
add
bound
dec
arpl
inc
jae
jnp
pop
or
mov
popa
call
dec
daa
imul
loopne
mov
cmp
test
pop
add
testb
add
imul
jecxz
scas
mov
dec
lcall
cmp
xor
pop
or
jae
xor
cmp
lahf
inc
loopne
push
jg
pop
negl
arpl
sti
mov
mov
add
ret
cmp
jge
push
lcall
into
and
push
adc
xchg
pop
popf
negb
jmp
mov
mov
aas
leave
cwtl
cmpsb
sbb
ss
sub
pushf
and
mov
ds
pop
add
dec
lret
dec
jns
fs
pushf
pop
enter
je
pushf
rcr
push
mov
xlat
sub
and
shrl
mov
shl
push
popf
test
je
out
mov
rcl
dec
adc
mov
fs
sbb
loop
mov
inc
fcoml
adc
jg
mov
dec
shrb
sti
fmull
pop
aas
outsb
cmpb
aaa
dec
cltd
std
aas
es
lods
testb
dec
frstor
ljmp
pop
mov
js
aaa
xor
movsb
mov
xor
fsts
insb
jg
into
xlat
daa
fwait
ljmp
loop
and
mov
mov
pushf
adc
in
mov
mov
pushf
add
xor
push
or
mov
mov
xchg
aaa
shll
mov
xchg
mov
xchg
pop
xor
xchg
sti
xchg
dec
pop
ret
dec
push
mov
out
aaa
sub
cld
and
dec
aam
sbb
lcall
mov
test
mov
lods
scas
sbb
scas
repnz
arpl
cwtl
mov
mov
jmp
cmp
add
adc
cmp
pushf
imul
mov
mov
clc
sbb
test
fs
fidivl
ret
bound
fnstcw
mov
mov
daa
and
idiv
xor
rolb
mov
insl
loopne
movsl
std
dec
push
add
xor
arpl
pushf
mov
cmp
xor
ret
mov
mov
sub
jbe
icebp
orb
and
cmp
push
and
mov
test
pusha
in
jno
push
cmpsl
jne
leave
movsb
arpl
aaa
pop
add
shrb
pop
test
push
lock
push
clc
mov
dec
pop
xchg
pop
add
jns
pop
incl
mov
adc
cmpsl
and
movsl
adc
mov
and
test
es
loope
or
sbb
repnz
outsb
xor
pushf
scas
imul
cmp
add
xchg
xor
bound
outsb
mov
loop
ss
or
fwait
pop
cmpb
pushf
cmp
jmp
stc
pushf
push
add
pop
pushf
jns
jo
xchg
ljmp
jmp
push
inc
es
icebp
mov
or
push
cli
mov
lods
es
push
cltd
lret
mov
movsl
bound
and
fidivrl
push
aad
push
ret
push
stc
push
stos
clc
lock
pop
inc
stos
mov
jmp
scas
fs
lcall
lahf
adc
dec
xor
sbb
jle
sbb
pop
adc
andl
mov
sbb
leave
jno
mov
scas
int3
imul
pop
arpl
rolb
out
sahf
xor
shrb
ret
sbb
inc
ljmp
sub
add
xor
add
push
inc
or
arpl
dec
mov
pushf
xchg
push
xchg
repz
mov
and
add
mov
mov
lea
mov
jno
inc
xor
test
dec
xchg
std
mov
out
sbb
pushf
fld
xor
leave
lods
and
sub
push
pop
mov
pop
daa
cmp
sub
test
jl
js
add
and
push
pushf
rorb
adcb
aas
jmp
jns
or
sub
sti
adc
jl
mov
scas
or
mov
xchg
xchg
and
add
mov
clc
mov
xor
add
dec
xor
xchg
xchg
inc
fsubl
add
add
sub
push
ret
insl
sbb
add
mov
pop
ljmp
repz
cmpsb
or
or
lds
add
and
lods
mov
fstpl
and
push
jl
inc
and
in
mov
out
test
popa
mov
jge
test
lods
sbb
adc
loope
pop
fbstp
ret
mov
xchg
shr
push
pop
daa
inc
inc
fisttpl
lahf
fdivl
sub
mov
es
mov
jb
or
mov
xchg
push
xchg
add
mov
std
lcall
mov
adc
notb
out
mov
sub
sbb
leave
push
mov
xor
sbb
daa
push
movsl
dec
mov
movsb
mov
icebp
fwait
xor
xor
daa
negl
clc
addr16
test
dec
adc
xor
xor
in
lret
pushf
or
sbb
sbb
into
movsb
mov
xlat
rorl
scas
mov
add
sub
leave
mov
pop
fadd
mov
pushf
outsb
lock
xchg
mov
dec
sub
mov
pushf
mov
or
xchg
cli
scas
jecxz
bound
sub
sbb
fbld
dec
xor
fsubrs
scas
js
dec
or
mov
mov
loope
xchg
test
lds
sarb
mov
sti
cmp
push
loope
xchg
inc
faddp
jb
sbb
dec
shlb
cmpsl
ljmp
test
cmp
test
xchg
pushf
mov
and
mov
ss
loope
lods
fldt
cmpl
pop
imul
pusha
mov
shll
scas
rorl
icebp
mov
subb
mov
ljmp
push
test
punpckhbw
pop
shlb
sub
pop
push
mov
dec
mov
stos
pusha
cmpl
lret
pushf
outsl
lea
add
dec
lock
mov
xchg
add
xlat
lods
cmp
cmpsb
mov
stos
mov
mov
mov
jp
aas
fadd
add
mov
mov
mov
jmp
sub
sub
jo
repz
mov
movsb
ret
mov
cmpsl
mov
nop
test
xchg
call
xlat
popf
cmp
mov
sarb
sub
push
mov
dec
lret
jo
xchg
pop
int3
adc
out
andb
movsb
pushf
call
or
cmp
dec
mov
add
cmpsb
mov
xchg
loop
inc
iret
mov
in
pushf
std
ss
ret
cmp
pushf
xor
cltd
lret
sbb
xchg
mov
sbb
adc
cmpsl
pusha
mov
mov
out
dec
pushf
out
and
push
hlt
sub
subl
orl
popf
movsl
cmp
cli
add
mov
test
testb
mov
fsubl
jmp
std
xchg
mov
or
notb
stos
and
mov
subl
pop
mov
jp
adc
mov
sub
fdivrl
dec
inc
clc
xchg
xchg
call
jl
xor
push
shrb
imul
mov
pop
sbb
mov
stos
cmpb
jge
cmpsb
mov
cmp
arpl
test
dec
push
inc
dec
adc
xchg
ret
rolb
adc
shrb
dec
xchg
pop
mov
mov
imul
test
popf
xorb
xor
out
dec
jb
or
adc
js
int
pop
or
loopne
int3
dec
fs
pop
mov
pop
test
lea
push
lods
out
addb
mov
sub
sub
scas
movsb
cmpsb
mov
lret
fscale
push
jge
les
fistpll
mov
mov
cmp
arpl
adc
dec
pop
pop
pushf
ret
rcrb
sub
xor
mov
xor
movsb
pop
xchg
cmpsb
dec
dec
sub
inc
je
fistps
mov
jle
test
lahf
mov
je
es
mov
les
mov
xor
dec
arpl
pop
mov
or
dec
mov
out
lods
adc
inc
mov
into
cmpsb
loopne
sub
lea
cmp
movsb
push
imul
sbb
mov
fwait
lret
mov
jg
pushf
inc
mov
cltd
in
dec
lods
ja
and
sub
mov
insb
jge
fstps
pop
faddl
addr16
add
adc
adc
in
ret
rorb
mov
mov
insb
divl
loopne
adc
jno
ja
mov
hlt
and
xchg
cmpsb
mov
outsl
push
xchg
jg
rcrl
cmp
mov
aas
scas
pop
mov
pushf
add
push
outsb
insl
popa
jo
imul
insb
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
dec
incl
add
inc
insb
addr16
jne
je
outsb
inc
push
add
inc
lods
arpl
cwtl
jmp
sub
mov
push
js
loopne
and
dec
andl
mov
stos
add
and
and
lods
out
adc
and
mov
mov
mov
push
mov
xchg
xor
and
inc
addr16
mov
sti
jge
mov
in
scas
arpl
xchg
sbb
scas
mov
pushf
bt
cmp
pushf
push
push
pusha
lea
jae
push
movb
lea
jmp
mov
pusha
lea
je
clc
adc
add
rcr
bts
and
clc
mov
test
jmp
push
push
lea
jae
test
test
cmp
call
pushf
pushf
pushl
mov
pusha
pushl
mov
call
add
push
imul
insb
insb
outsl
arpl
add
jb
outsb
popa
insl
add
add
je
je
dec
popa
outsb
fs
add
add
je
je
dec
popa
outsb
fs
add
add
addr16
arpl
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
pushf
nop
mov
cmpl
mov
cmpsb
cmpsl
arpl
lods
addr16
mov
push
pop
test
xorl
sbb
popa
insb
daa
hlt
sub
mov
scas
xor
ret
movsb
adc
repnz
jns
loope
mov
mov
jp
lds
jecxz
or
into
ljmp
scas
arpl
mov
mov
mov
sti
mov
je
mov
stos
xorl
arpl
mov
and
inc
mov
ret
and
mov
mov
mov
movsb
imul
lods
lret
and
and
mov
and
adc
mov
and
push
mov
and
and
sbb
cmc
mov
and
insl
into
das
mov
mov
and
xchg
mov
sbb
inc
stos
add
dec
enter
jbe,pn
mov
dec
int3
mov
gs
adc
stos
lahf
mov
daa
stos
int
mov
les
mov
sub
pop
lret
or
popa
movsl
stos
decb
movsb
mov
add
sub
adc
das
push
shrb
loop
mov
ljmp
std
scas
out
push
mov
or
int
dec
xchg
dec
fwait
lea
iret
mov
enter
ret
adc
scas
push
loopne
outsl
outsb
cld
fbstp
out
mov
push
insl
ret
and
loopne
dec
scas
mov
insb
mov
aad
nop
stos
mulb
inc
movsb
pop
jmp
jnp
mov
sub
outsb
test
shl
push
std
cli
mov
movsl
or
inc
imul
dec
and
outsl
inc
test
mov
in
mov
das
aas
insl
iret
stos
or
xor
and
dec
lds
ljmp
xchg
out
xchg
lea
in
decl
dec
jmp
sub
movsb
pop
insb
aaa
das
mov
outsl
or
and
test
jmp
mov
inc
push
jg
sub
in
andb
cmpsb
mov
push
sub
insl
push
aas
pop
stos
and
fildl
dec
dec
jp
mov
add
out
jnp
lods
or
sub
test
xor
or
adc
inc
sub
cmpsb
test
and
jg
fcompl
cmpsb
pop
ficoms
gs
xchg
fstl
test
jecxz
and
sub
inc
movsl
dec
outsl
fisttpll
imul
inc
dec
xchg
cs
jmp
repnz
fimuls
and
and
imul
xor
test
push
mov
jg
mov
jno
jle
divl
xor
mov
cmp
cltd
inc
imul
sbb
scas
mov
or
push
test
or
and
lret
jns
adc
inc
shr
dec
ja
mov
inc
test
jge
mov
imul
push
aas
shll
aam
cmp
test
stos
bound
xchg
cld
add
sbb
cmp
hlt
jno
jmp
or
mov
pop
inc
fdivr
xor
clc
outsl
fdivp
cmc
popa
idivb
sub
sub
je
jg
shrb
add
fwait
mov
ds
gs
push
out
cmp
test
sbb
inc
popa
cmpsb
vpsrlvq
hlt
mov
mov
adc
ret
repnz
insl
and
mov
push
push
mov
pop
into
cmp
imul
test
jl
mov
sbb
sbb
lock
add
nop
xor
mov
clc
imul
jno
imul
out
out
gs
loopne
cmp
xchg
sbb
push
sbb
rcl
insl
push
popa
jecxz
and
aas
dec
mov
pop
jecxz
and
call
jae
in
lds
ficomps
loopne
xchg
mov
lds
sub
adc
jl
in
js
push
mov
jmp
dec
insl
mov
inc
or
popa
sbb
aaa
lds
addr16
pop
cmp
or
in
mov
xor
or
shll
mov
xchg
lds
mov
in
xor
aad
sti
cmp
sub
cwtl
jae
adc
or
js
cmc
into
lock
jmp
movsl
js
cmp
test
xchg
push
push
je
push
and
subb
jecxz
jge
mov
inc
push
fisubl
or
in
jne
sbb
cmc
sbb
fwait
inc
out
lods
ja
js
sub
mov
popf
adc
jbe
sahf
pop
popa
add
ss
pop
call
out
iret
cmp
mov
and
aaa
xor
jge
aam
push
push
dec
mov
dec
mov
imul
add
clc
sti
lds
int3
xchg
mov
xchg
xor
push
pop
mov
sub
and
push
mov
or
push
divb
pop
mov
fdivl
movsl
inc
aaa
lcall
push
mov
sbb
xchg
xor
xchg
test
jae
mov
aam
out
cmp
enter
mov
push
mov
call
xchg
call
aaa
fiadds
pop
adc
in
mov
test
cltd
icebp
lods
js
loopne
mov
fldcw
out
loopne
add
adc
jbe
mov
jg
push
mov
out
icebp
mov
daa
test
ja
sbb
in
jae
dec
sub
mov
pop
stc
xchg
pop
jae
or
outsl
cmpsl
scas
mov
outsb
das
out
inc
nop
arpl
and
jbe
jae
dec
jmp
mov
lret
jo
and
pop
loop
jo
dec
popf
test
fldcw
cs
push
loopne
aam
pop
je
ja
loop
adc
rorl
rorl
push
repnz
stos
imul
jmp
inc
cmp
cltd
mov
inc
xorl
repz
mov
mov
dec
sahf
jmp
imul
or
push
mov
leave
pop
lods
movsb
cmp
aad
jbe
mov
addr16
movsl
and
loope
cmpsl
fmul
pop
jmp
push
pop
arpl
mov
bnd
pusha
add
stc
mov
pop
push
mov
pop
and
insl
mov
les
push
or
push
sub
popa
mov
sbb
js
mov
pop
or
sbb
gs
mov
dec
jmp
jp
das
je
movsb
das
pop
in
jb
dec
insb
xor
push
loope
add
mov
and
mov
cwtl
pop
pop
scas
add
cmpsl
inc
jae
add
and
mov
test
loope
mov
arpl
add
or
je
push
mov
ss
inc
push
cmp
negl
jle
aaa
xorb
pop
movsl
movsb
push
jge
push
hlt
test
cs
xchg
fldenv
and
mov
jae
jl
outsb
adc
pop
and
nop
cmp
lcall
pop
stc
adc
mov
imul
mov
lods
mov
scas
popa
xor
sbbl
push
cmp
fdivl
jp
mov
mov
sub
cmp
pop
and
into
insl
and
push
cmp
inc
lds
xchg
mov
mov
aam
test
jmp
mov
fstpt
pop
jae
ss
and
mov
mov
push
pop
push
mov
lea
fsubrs
mov
xchg
jne
cltd
int
pop
cmpsl
int
add
pop
cli
test
cmp
loope
add
jne
loope
cmpl
xchg
and
jo
stos
repnz
insl
decl
leave
stc
and
dec
jge
icebp
mov
mov
xchg
addb
int
mov
push
pop
jne
xchg
cltd
pop
mov
movsl
flds
dec
mov
jne
lahf
add
pop
pop
xor
and
in
or
cmp
imul
xor
imul
push
popfw
mov
sub
push
push
push
jo
mov
lods
ficoms
sbbl
into
sub
stc
dec
sub
push
mov
loopne
push
jl
iret
and
push
mov
xlat
pop
andb
xor
xchg
dec
mov
neg
orb
sahf
lahf
cmpb
insb
es
dec
popa
aam
mov
dec
cmc
or
push
xor
push
fldt
ljmp
aad
and
cmp
push
add
sti
in
dec
jmp
add
test
xor
add
rcr
jno
sbb
imul
push
hlt
mov
mull
push
mov
pop
dec
pop
sbb
xchg
mov
fcompl
and
jns
sti
jl
jno
sbb
ljmp
or
mov
cld
and
mov
sub
idivb
notl
cli
scas
or
outsb
test
popf
and
sbb
cld
dec
jo
repnz
push
loop
mov
jecxz
jnp
out
xor
or
out
hlt
aaa
inc
cmc
mov
push
or
sub
imul
push
jb
stos
pop
mov
jle
ss
push
stos
inc
adc
jle
add
fldcw
sbb
popa
movsb
and
or
lcall
pop
or
cmp
mov
sub
fs
sub
shrb
push
jp
and
and
push
add
adc
inc
lahf
push
lock
sub
es
add
imul
cmp
and
stc
imul
and
mov
sub
cmp
sbb
xor
fsubr
outsl
jne
pop
bound
pop
push
sub
adc
in
inc
adc
mov
jne
stc
and
sbb
adc
jle
mov
dec
inc
out
data16
adc
bnd
hlt
loopne
mov
jbe
shll
scas
in
cmp
and
and
pop
je
dec
cltd
push
add
sub
pushw
jmp
push
or
lds
and
inc
ljmp
push
add
pop
testb
lds
std
push
jle
xor
jmp
es
jbe
fwait
push
dec
faddl
sti
test
jnp
xchg
insl
pop
push
cmp
push
fidivl
jg
mov
bound
xchg
mov
cltd
sbb
sbb
imul
lret
aas
mov
ja
fcmovnu
push
and
decb
rorl
fcmovb
xor
hlt
fcompl
add
nop
and
lods
cmp
push
test
and
mov
xor
cmc
mov
mov
or
test
or
fwait
call
and
jb
push
push
pop
cmpsl
sti
js
mov
loope
flds
mov
jb
flds
lods
adc
xchg
push
test
fstpl
ss
xor
outsl
sbb
les
ja
ret
insl
jne
cmc
mov
adc
push
mov
inc
cmc
push
je
pop
cli
mov
xor
lds
lcall
xlat
fisubrl
imul
scas
mov
dec
xor
sahf
call
into
mov
or
push
pusha
icebp
stos
lods
enter
sti
mov
sar
mov
stos
inc
lret
lock
lods
mov
fdivr
jle
xor
jb
push
test
mov
fwait
push
repnz
fs
inc
lock
call
lret
cmp
jp
scas
jmp
push
insl
cmp
inc
inc
adc
mov
and
mov
sbb
out
xchg
dec
jbe
insb
pop
pop
leave
daa
ror
call
test
clc
subb
fldz
push
push
insb
fbstp
jmp
push
lds
cwtl
aaa
jmp
cmp
stos
and
pushl
fsubrs
cmp
mov
das
out
ds
push
idivl
fs
pop
or
cmp
je
icebp
jnp
xchg
pop
jg
jp
scas
sbb
xor
out
adc
stos
xchg
or
sti
adc
out
popf
sub
or
pushf
adc
out
ss
in
dec
in
popf
cmp
xchg
stos
fs
and
loopne
jb
ficoml
adc
out
adc
or
cwtl
jb
outsb
cwtl
push
add
cwtl
dec
mov
in
arpl
mov
out
ds
sbb
add
dec
cmp
cmp
or
sbb
sar
repnz
lods
icebp
and
sahf
mov
sbb
sub
dec
mov
in
xor
mov
push
mov
add
test
es
push
push
aam
adc
repnz
mov
add
lods
mov
jl
push
dec
or
cmpsb
not
jecxz
push
or
mov
mov
pop
jno
stos
std
jbe
jecxz
add
stc
insl
mov
cmc
push
xor
cmp
movsl
pop
rdpmc
mov
cmp
jne
test
mov
fnsave
dec
jo
sbb
xchg
xor
sbb
mov
shll
in
in
xor
dec
push
das
push
push
dec
enter
hlt
and
outsl
addb
mov
out
jne
xchg
jno
clc
loopne
sbb
pcmpgtd
out
loop
pop
and
clc
inc
test
sahf
inc
pop
cltd
pop
jb
ds
pop
in
out
inc
mov
mov
fwait
cmpsl
lods
push
int3
je
ds
ja
jle
push
sbb
push
idiv
jns
adc
pop
push
push
mov
icebp
fdivp
fiadds
insl
ficomps
fwait
jp
adc
cltd
or
sub
mov
pop
cs
addr16
and
push
dec
mov
aam
or
inc
push
imul
pop
mov
movsl
fimuls
in
push
mov
sub
jo
mov
pop
jnp
idivb
jbe
or
jae
js
cmc
xorl
cmpl
inc
dec
jne
mov
fnstenv
xchg
cwtl
aas
xchg
mov
cmc
mov
pop
ss
or
xlat
in
loop
xchg
das
sbb
nop
inc
scas
out
dec
cli
mov
ljmp
xchg
insl
ljmp
lods
pop
rorl
sbb
xlat
shlb
inc
dec
jge
pop
enter
pop
push
or
dec
imul
repz
inc
cmpsb
daa
movsl
divb
loope
jae
push
pop
stos
fs
add
fnstcw
popl
or
test
adc
popaw
and
stos
sbb
jmp
sub
push
testl
out
icebp
and
sti
mov
xchg
mov
jmp
push
fstl
jge
outsb
hlt
xchg
xlat
push
jl
mov
lods
pop
inc
sub
mov
push
mov
out
loopne
flds
mov
test
mov
pop
jl
shr
sub
fwait
or
inc
jmp
inc
mov
scas
ds
faddp
xchg
jae
xor
mov
aaa
pop
inc
imul
int
mov
movb
cmp
aas
pop
sti
sub
hlt
jecxz
in
push
inc
mov
or
mov
add
addr16
mov
jnp
xchg
je
pop
or
mov
movsl
pusha
insl
xor
xor
inc
mov
push
cmp
mov
sub
mov
cmc
push
repnz
enter
es
movb
pusha
lock
repz
and
or
ds
jo
sahf
pop
stc
fisttps
bound
sahf
adc
jb
push
loop
adc
cmp
aam
sbb
mov
mov
movb
mov
dec
in
jnp
lods
adc
pusha
mov
ljmp
das
adc
cmpsb
in
imul
push
mov
movl
cmp
jnp
adc
mov
ficompl
pop
jg
in
xchg
lret
js
jp
cli
rorb
hlt
test
in
mov
lret
lret
cwtl
dec
lahf
test
mov
pop
mov
aaa
aaa
jnp
pop
lods
xor
rcr
sbb
and
dec
scas
call
push
cwtl
popa
cmc
stos
jae
fldenv
and
xor
or
and
adc
pop
sbb
sbb
push
pop
push
xor
out
mov
mov
imul
mov
push
lret
fdivrs
xor
icebp
stos
sbb
sub
int3
xor
sbb
lds
push
es
fwait
dec
or
dec
cmp
into
repz
mov
sub
out
outsb
pop
outsb
call
cmp
mov
jbe
and
adc
es
arpl
xor
pop
aad
push
pusha
cmpsb
sub
jae
fwait
scas
xchg
test
cmc
ljmp
mov
push
push
outsb
enter
cmp
icebp
sbb
sbb
stos
scas
movsl
and
mov
stc
sub
pop
jae
fwait
lds
xchg
int3
lret
adc
adc
push
ds
xlat
jg
jno
imulb
out
insl
jmp
lahf
addr16
adc
outsb
pop
jge
cmc
jecxz
push
das
mov
mov
clc
sahf
xchg
xor
jbe
adc
daa
int3
and
lock
sub
xchg
cmp
and
dec
enter
stc
mov
popa
mov
mov
test
inc
and
pop
mov
or
xlat
cld
adc
dec
xchg
repz
js
loop
xor
adc
mov
js
and
js
and
cli
scas
sub
div
jno
sarl
cli
xor
pop
in
mov
rcll
int3
jb
xchg
in
adc
pusha
fisubl
jne
and
add
cmc
jno
movsl
fldenv
lret
mov
daa
adc
push
xchg
sbb
xor
or
xor
nop
in
inc
loope
sti
shr
fcomip
mov
nop
push
rcrl
pusha
jp
in
cmp
inc
aam
test
fisubrl
in
pop
or
call
repnz
imul
cmp
cmpl
sub
pop
pop
les
jns
or
cmp
mov
ss
es
fsubs
fldcw
ljmp
loop
out
cli
dec
cmpsl
mov
sub
inc
sti
push
mov
lods
popl
add
leave
stos
mov
and
stos
inc
add
nop
cmpsl
sti
icebp
jne
adc
xchg
sbb
fidivrl
or
imull
xchg
push
dec
cmp
std
call
jl
repz
lea
mov
add
jge
popaw
mov
inc
inc
adc
icebp
pop
cmpsb
cmc
scas
and
cmp
sbb
xor
or
or
cmp
adc
add
fwait
hlt
add
imul
pop
jno
push
outsb
popa
adc
and
sbb
mov
loope
adc
gs
mov
addl
and
call
xchg
imul
popa
test
xchg
lods
push
aas
leave
pop
mov
or
mov
iret
xchg
daa
mov
movsb
jmp
pop
pop
mov
mov
jmp
and
or
out
ja
cmp
adc
in
movsl
cmc
es
loope
lods
hlt
xchg
xchg
in
mov
cmp
ja
lcall
loopne
pop
shlb
jno
cld
sub
mov
ja
andb
aam
vmwrite
cmp
out
pop
sub
mov
mov
dec
sub
sub
or
aaa
sub
enter
adc
pop
mov
fmul
lret
mov
xchg
in
xorl
ds
sub
lahf
jmp
out
hlt
test
sub
mov
test
lea
xchg
mov
jmp
ljmp
mov
or
es
mov
ja
out
stos
xor
or
pusha
pop
daa
es
loop
sbb
add
hlt
cmpsl
mov
mov
cmp
test
mov
stos
add
add
popa
mov
enter
daa
mov
je
mov
mov
dec
addl
cmp
mov
je
xor
mov
mov
mov
movsb
scas
mov
mov
fs
sub
mov
mov
jmp
mov
adc
ss
mov
sbb
cmpl
add
loope
and
inc
mov
xchg
add
sub
adcl
insl
addl
xor
and
mov
mov
popa
and
add
dec
insl
stos
xchg
and
mull
mov
mov
scas
sub
insl
divb
dec
jecxz
inc
lods
xor
jae
das
push
insl
xor
pop
lock
sub
mov
cli
mov
ret
mov
fdivrl
pop
lds
shll
ret
sub
daa
mov
mov
xchg
cmpsb
add
lea
popa
mov
sarb
mov
xchg
shll
mov
fwait
lods
movsl
cmpsb
jg
mov
jae
mov
arpl
lea
xor
adc
mov
mov
jae
arpl
sub
mull
push
addr16
addb
scas
pop
popa
sub
subb
jae
inc
sub
mov
daa
das
stos
pusha
xchg
es
mov
cmp
lea
xor
cmp
xchg
fsubl
lods
scas
mov
mov
stos
dec
sub
movsb
jl
xor
cmpsb
cmp
and
loopne
inc
es
adc
popa
xor
cmpsb
subl
push
jb
and
int
and
daa
pop
sub
mov
or
and
jne
lods
add
lods
pop
inc
andl
int3
xchg
lea
cmp
xor
ja
daa
aaa
and
pop
addb
nop
jmp
and
in
lods
xrelease
jp
movsb
imul
pop
cmpsb
cltd
test
cmc
mov
ja
aas
mov
in
pop
lods
mov
in
nop
mov
add
cmpl
mov
cltd
outsb
cwtl
gs
lods
pop
mov
xchg
mov
lock
loope
repz
sub
stos
daa
sub
movsl
sub
mov
cmp
mov
stos
ds
mov
cmp
cmp
mov
xchg
mov
mov
mov
xchg
xor
daa
cs
scas
xchg
das
sub
stos
movsb
push
adc
mov
mov
mov
sub
mov
and
mov
and
pop
ret
daa
cmp
mov
loope
mov
and
aam
inc
repnz
dec
cli
sarb
pushf
mov
inc
ret
mov
sbb
mov
or
mov
sbbl
fsts
dec
loop
adc
popf
aam
sub
mov
pushl
xchg
std
and
sbb
fcmovu
mov
lods
hlt
insb
pushf
into
sti
mov
pushf
lret
je
mov
xor
dec
pushf
or
test
pushf
sbb
clc
popf
adc
pushf
jbe
dec
nop
in
pop
cmp
out
cmpsl
ret
mov
stos
pop
sbb
jl
pop
loop
cmp
mov
push
adc
pushf
or
cmp
xchg
loop
testb
pop
push
jmp
mov
mov
lods
in
fwait
stos
or
push
test
jne
or
cmp
sbb
push
push
lock
fdivrl
mov
lds
push
xchg
popf
pop
pushf
iret
jbe
mov
or
pushf
sbb
mov
test
pop
or
cmp
mov
add
fsts
add
mov
fmul
adc
shr
popa
push
sbb
bsf
lcall
xor
inc
test
sbb
mov
cs
add
inc
add
imul
rcl
jnp
mov
int
cmp
pushf
sub
or
ret
hlt
xor
lcall
inc
or
shlb
clc
iret
je
test
loop
loopne
fcmovu
mov
xor
inc
xchg
mov
fs
or
sub
popa
push
enter
adc
hlt
jecxz
adc
pop
sub
test
jle
mov
mov
aas
xor
sub
mov
dec
dec
jecxz
inc
sub
ret
push
fcoml
subl
ss
mov
lret
shll
inc
cmp
mov
inc
lods
sti
xor
imul
cmc
xchg
or
inc
ret
jns
pushf
decb
not
hlt
mov
js
lods
jae
ja
gs
jne
xlat
pushf
imul
es
pushf
mov
push
in
lret
add
dec
lods
rorb
jnp
or
mov
mov
push
stos
push
addr16
mov
sbb
rcl
jecxz
xor
sub
rcrb
idivl
mov
adc
rorb
mov
mov
push
mov
and
ret
into
movsb
sbb
les
mov
shll
leave
xchg
lret
mov
jge
movsl
stos
movsb
fadds
xchg
movsb
xchg
cs
iret
repnz
insl
in
mov
out
iret
sub
mov
nop
cmp
fimull
imul
jnp
out
ss
or
sub
into
rcrl
and
in
scas
push
addr16
leave
sub
jmp
out
cs
cld
lea
mov
stos
xchg
in
lcall
ret
mov
push
mov
jmp
jle
dec
test
mov
sahf
aaa
scas
movsb
out
lods
pop
mov
dec
and
cltd
dec
in
dec
mov
jmp
push
and
mov
outsl
daa
pop
movsl
xchg
add
xchg
mov
shl
xor
in
mov
add
les
das
ja
int
or
adc
hlt
sahf
fmul
sub
push
sbb
mov
pop
cli
pushf
xor
aaa
mov
jl
and
aaa
mov
jecxz
bound
mov
out
mov
mov
xchg
mov
aaa
push
and
jbe
and
xor
mov
mov
xorl
daa
sub
cmp
addr16
mov
xor
cs
and
mov
push
cmpsl
cmpsb
xchg
sbb
clc
lret
or
jmp
add
insb
sbb
pop
das
fwait
mov
movsl
das
mov
adc
scas
jle
lock
mov
pop
pop
sub
addr16
out
and
mov
inc
shlb
mov
ja
rcll
sbb
fs
pusha
inc
in
cmpsl
test
arpl
dec
adc
lret
clc
shr
jno
addr16
jmp
sub
push
stos
add
xor
test
mov
dec
sub
jmp
xlat
stos
xchg
mov
and
stos
push
test
pushw
lds
sbb
sbb
popl
fdivs
leave
cwtl
pusha
ret
in
sbb
cmova
lods
pextrw
pusha
out
push
dec
sbb
push
mov
scas
outsl
xor
mov
jmp
mov
lea
mov
mov
mov
xor
imul
in
test
psadbw
and
xor
adc
imul
xor
mov
mov
mov
int
pop
mov
mov
out
mov
mov
push
xcrypt-ctr
cmpsl
fiadds
mov
ds
daa
dec
push
adc
hlt
push
push
dec
loope
ret
inc
aaa
outsl
ror
push
out
std
cmpsb
div
mov
fidivs
loopne
sub
sub
pop
jge
stc
xor
imul
mov
adc
mov
stos
fwait
jns
nopl
daa
sbb
hlt
push
in
lods
in
fs
in
lods
popf
in
int3
push
mov
push
jo
repnz
outsl
jo
push
call
dec
mov
and
stos
imul
orb
outsl
or
dec
scas
ss
movsb
fsubl
xchg
movsb
ja
jno
or
mov
out
lods
lret
pop
test
jo
out
dec
outsl
test
sub
stos
mov
dec
filds
lods
faddl
jle
mov
xchg
dec
push
inc
inc
dec
inc
ds
cmc
orl
sub
outsl
in
jne
xchg
enter
mov
push
shlb
cmp
fnstcw
push
inc
mov
pop
das
xchg
test
sub
das
dec
lock
cltd
xorl
jmp
test
stos
dec
dec
dec
or
pusha
mov
lret
jg
enter
cld
repnz
aaa
jbe
ret
popa
or
cmp
stc
test
daa
test
push
xchg
adc
cmp
ja
or
sub
lds
and
dec
push
movsb
mov
sbbl
xor
leave
sbb
lcall
lret
stos
xchg
ljmp
fiadds
sub
orb
pop
popa
cmp
dec
movsl
mov
shlb
fs
cmp
push
cmc
inc
and
push
add
mov
dec
and
add
sub
sub
lcall
mov
xor
lret
pop
push
dec
sub
imul
xchg
xchg
out
mov
lret
mov
or
test
mov
lcall
pop
add
enter
mov
xor
push
int
mov
push
dec
cs
test
call
movsb
movsb
and
or
das
into
jb
mov
cmp
das
in
lret
loopne
and
pop
add
cmp
mov
or
xor
shl
scas
roll
ljmp
lock
gs
adc
sbb
mov
push
jne
mov
xchg
cmpl
xor
xor
lods
in
insl
test
pop
sarl
pop
cmp
sub
aam
cs
popa
add
stos
cmp
stos
mov
lret
mov
mov
push
xor
test
push
daa
xchg
stos
push
icebp
adc
aaa
addr16
push
mov
out
outsl
mov
daa
xchg
sub
sbb
xchg
fadds
sbbl
lahf
ficoms
sub
xchg
ret
addl
ret
stos
adcl
popa
add
dec
stos
mov
mov
xchg
into
popa
or
xchg
adc
sub
pop
daa
stos
xchg
xchg
aad
push
sub
daa
pop
stos
fcoms
pop
fstl
arpl
add
inc
sub
dec
daa
mov
enter
xchg
dec
popa
int
mov
adc
push
adc
push
stos
push
xchg
adc
sbb
fcmovu
xchg
sbb
daa
fildll
popf
mov
inc
xchg
add
daa
inc
stos
add
sub
xchg
or
daa
dec
stos
enter
mov
dec
int
push
popa
shlb
shrl
push
sub
xchg
daa
lcall
sub
sbb
ret
and
subl
sub
xchg
push
popa
les
dec
stos
or
or
xchg
dec
popa
daa
int3
stos
mov
adc
xchg
popa
xchg
daa
adc
xchg
xchg
sub
sbb
sbb
fdivl
addr16
sub
inc
daa
stos
xchg
leave
or
mov
adc
xchg
rclb
push
stos
push
xchg
aam
fwait
sub
xchg
lcall
xchg
pop
addr16
mov
adcb
stos
inc
xchg
addr16
test
xchg
mov
daa
dec
stos
or
int3
xchg
push
popa
adc
adc
push
sub
sbb
pop
stos
cltd
xchg
fsubs
sub
pop
xchg
sbb
add
inc
daa
shrb
sub
xchg
mov
daa
leave
stos
mov
lea
adc
daa
shrb
pop
sub
pop
daa
pop
stos
cwtl
xchg
pop
addr16
sub
add
andb
stos
xchg
xchg
sub
test
mov
sub
shlb
pop
stos
push
xchg
adc
aam
pop
pop
xchg
pop
popa
sbb
cwtl
stos
lahf
xchg
fisubs
sub
xchg
add
daa
pop
stos
inc
xchg
addr16
or
daa
or
dec
sub
xchg
daa
shrb
xchg
sub
fistl
pop
stos
ficoms
sbb
movsb
rclb
stos
add
mov
sub
into
daa
or
mov
adc
push
popa
shll
xchg
stos
rclb
adc
fisubl
cltd
stos
pop
xchg
fbld
sub
mov
stos
inc
xchg
xchg
sub
lret
xchg
mov
daa
or
dec
sub
xchg
daa
push
stos
aad
xchg
addr16
sub
xchg
sbb
daa
lahf
stos
sbb
and
xchg
andb
stos
xchg
enter
popa
dec
daa
int
push
xchg
xchg
addr16
sub
adc
xchg
stos
push
xchg
sub
pop
xchg
sahf
popa
frstor
pop
sub
addr16
sub
adcb
stos
les
lea
shrl
push
sub
xchg
adc
fwait
stos
sbb
pop
pop
xchg
fbld
daa
sbb
fdivl
add
add
popa
add
xchg
leave
mov
or
mov
daa
or
rcll
push
xchg
xchg
aad
xchg
daa
pop
stos
lcall
ficoms
arpl
add
xchg
xchg
lret
popa
or
lret
xchg
mov
sub
dec
xchg
int3
popa
adc
nop
stos
push
nop
mov
rorb
imul
clc
lods
and
mull
mov
mov
cmpb
mov
cmp
mov
int3
in
mov
add
inc
js
je
push
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
lret
movsbl
pop
jmp
xchg
fwait
repnz
aad
aad
sahf
insl
int3
test
or
fistpl
dec
adc
cmc
lods
ljmp
inc
ljmp
arpl
mov
cmp
fucom
out
cs
shlb
lret
movsb
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
ret
inc
xor
xor
jecxz
outsl
sbb
pop
mov
pop
dec
and
packsswb
in
add
or
mov
pop
enter
mov
sbb
push
imul
ss
lret
xchg
jecxz
je
xchg
shll
pop
cli
gs
jle
cltd
inc
xor
jmp
xchg
int
fwait
in
mov
loope
jmp
dec
fisubrs
pop
xchg
mov
loop
cltd
dec
adc
rolb
imul
add
jne
repz
mov
stc
mov
add
inc
cmp
outsl
mov
lea
pop
or
rorb
or
pop
cltd
fwait
shll
movsb
jo
sub
ficoml
stc
adc
pop
int3
adc
cwtl
inc
stc
popf
nop
and
fcmovbe
test
xor
popf
mov
jno
sbb
lahf
sbb
pusha
and
push
mov
xorb
push
out
push
xlat
divl
stos
xchg
fld1
in
aad
nop
test
push
pop
aaa
repz
rorl
movsl
lods
mov
in
pop
jne
sbb
sbb
mov
add
ror
bswap
not
mov
call
add
push
insb
gs
add
inc
outsl
insl
jo
jb
push
je
imul
dec
inc
dec
popa
jo
je
imul
cmc
stc
cmp
pushl
pushf
pushf
jmp
add
dec
jae
popa
fs
jb
je
push
je
add
add
je
jb
outsl
arpl
fs
js
push
add
lret
call
in
pusha
sub
clc
pushl
popl
clc
movw
movw
pusha
cmp
jmp
cmp
pushf
pushf
call
add
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
pop
sub
xor
jns
shll
loopne
xlat
cmpsb
ficompl
lock
in
js
mov
cmp
xor
pop
mov
repnz
shl
add
and
mov
pop
inc
xlat
insb
sbb
xchg
test
mov
xchg
xor
lcall
stc
cmp
cmp
push
push
lea
jb
push
clc
test
cmp
lea
jp
pusha
lea
jae
bts
and
mov
shl
sbb
bt
mov
test
shr
cmp
stc
mov
cmp
stc
sub
clc
repnz
jmp
pushf
mov
lea
call
call
add
push
gs
outsb
fs
inc
imul
and
je
push
pusha
lea
je
bts
mov
movsbl
dec
mov
sbb
mov
push
sub
cmc
jmp
mov
lahf
loope
sub
pop
and
mull
aas
mov
mov
mov
movsb
push
xor
cmpb
inc
sub
outsb
fsubrl
jecxz
inc
mov
stos
xchg
stos
pop
mov
jb
daa
inc
dec
or
aam
test
out
push
faddl
mov
pop
outsb
mov
mov
lahf
adc
ds
or
mov
imul
xor
es
sbb
movsl
xchg
lahf
shlb
pop
jp
cwtl
inc
push
aaa
hlt
jo
mov
call
mov
stos
mov
jb
mov
and
sub
mov
mov
imul
jbe
mov
in
scas
mov
hlt
mov
and
cmpsl
mov
xchg
in
or
dec
mov
adc
test
mov
jle
jmp
leave
lods
popf
sub
adc
sti
mov
into
mov
loop
jns
scas
or
and
mov
jo
push
xchg
pop
mov
inc
pop
dec
arpl
or
inc
in
add
lods
sbb
mov
sti
dec
mov
cmpsb
pop
repz
js
pop
incb
dec
mov
mov
inc
clc
test
pop
popa
daa
cmp
inc
jmp
stc
int3
sub
push
xchg
adcl
ret
jl
out
fdivrl
dec
jb
call
add
pop
add
sub
mov
add
idivb
arpl
dec
mov
ret
test
ljmp
and
jb
mov
pop
push
mov
jae
adc
hlt
inc
jg
ret
pop
sub
mov
mov
xorl
push
imul
in
lds
fs
inc
stos
into
jge
sbbl
daa
jle
cmp
popa
pop
mov
into
sbb
orb
fs
or
out
test
into
popa
daa
adc
cwtl
or
xor
mov
mov
jb
popf
dec
and
jmp
mov
into
mov
push
scas
push
cs
sub
mov
stos
popa
sahf
ret
or
stos
pusha
inc
cli
cmpsl
loope
jne
testl
mov
jecxz
imul
or
jmp
stos
das
and
mov
and
and
andb
ss
ss
and
jecxz
lret
add
ss
imul
aad
test
std
jb
mov
imull
xchg
rcrl
mov
or
aam
fisubrs
jecxz
out
cmp
cltd
push
pop
sbb
mov
or
mov
fiadds
aam
and
xor
cld
mov
pop
lret
inc
xor
enter
add
pop
pop
lds
adc
lret
add
int
pop
dec
add
push
rcll
out
xchg
lcall
cmp
ja
mov
push
xor
xchg
movsb
mov
stos
lds
inc
ret
mov
xchg
aam
mov
mov
or
mov
xchg
mov
push
dec
mov
mov
cld
lds
push
add
jmp
xchg
mov
loop
mov
jnp
jno
xor
xchg
ss
cmp
mov
cmpsb
or
push
mov
adc
stos
xor
andb
imul
adc
sub
push
add
gs
cli
jae
mov
mov
js
subb
nop
jae
bound
mov
inc
cmp
push
mov
mov
bound
cmp
add
mov
sbb
or
pop
mov
adc
mov
setns
cmp
push
scas
lds
pop
ljmp
lods
sti
add
push
ret
ljmp
cmpl
cmp
imul
ljmpw
in
pusha
fwait
sub
fsubl
outsl
enter
pop
ljmp
cltd
or
jmp
movsb
andb
xor
fistpll
stos
fsubl
push
mov
mov
xchg
stos
and
mov
jnp
and
movsb
aas
mov
repnz
cmp
xchg
xchg
data16
repz
mov
and
mov
dec
repz
xchg
repz
test
adc
cmp
adc
push
pop
push
stos
imull
inc
cmpl
ja
and
adc
sub
cmp
enter
andb
dec
lock
pushf
mov
nop
inc
push
cmpsb
adc
cmp
stos
mov
mov
je
fst
out
sbb
cmpsb
jecxz
fldcw
sub
mov
sti
mov
jecxz
ds
or
stos
daa
mov
lods
inc
arpl
stc
cli
inc
in
inc
jo
jo
aaa
and
and
in
mov
outsb
jmp
pop
mov
notl
sbb
pop
mov
lods
jg
and
push
imul
in
mov
inc
xchg
jae
inc
xor
push
and
mov
xor
add
pop
enter
in
xorb
push
and
lods
or
xchg
sti
pop
inc
data16
lods
push
test
es
xor
data16
mov
mov
dec
nop
jb
pusha
clc
mov
mov
jno
popa
cmpb
sbb
fsubl
jecxz
push
dec
adc
shlb
ror
movsb
mov
adcl
lea
stos
xchg
pusha
push
int
lods
and
clc
inc
std
mov
mov
scas
inc
mov
mov
test
ret
std
mov
mov
popa
mov
sub
movsb
xchg
add
xabort
shl
add
xchg
icebp
mov
sti
test
xor
xorl
pushf
mov
jns
xor
xchg
mov
mov
test
ss
sarb
adc
pop
push
cmp
popa
jbe
mov
ljmp
test
mov
aam
mov
daa
fwait
mov
popf
stos
mov
dec
add
test
popa
scas
or
std
nop
andl
out
mov
test
test
scas
cli
std
jno
stos
scas
jne
mov
sub
jge,pn
es
mov
outsb
out
and
clc
and
lret
pop
movsl
jl
mov
sub
and
scas
push
dec
push
jo
rep
int
mov
cmpsb
push
add
addl
mov
push
imul
stos
mov
cmpsl
xchg
inc
sub
imul
int3
insb
cs
xor
mov
mov
iret
and
or
cmp
enter
and
xchg
sub
test
cld
adc
lcall
fsubrl
dec
scas
hlt
out
repz
popf
fld
push
jo
dec
mov
xor
test
xchg
mov
std
fsts
add
jb
jbe
add
imul
mov
rcll
cld
mov
mov
push
mov
stos
test
mov
xrelease
sub
cmpsb
mov
es
jmp
fldenv
xchg
pop
cwtl
arpl
inc
mov
jo
and
xchg
sbb
mov
inc
and
mov
mov
out
imul
mov
ret
mov
mov
mov
jo
mov
xchg
fidivrl
stc
mov
inc
test
das
mov
sub
push
jns
cmp
ficoms
scas
xor
xor
subb
stos
sub
int3
xor
in
scas
call
imul
aas
mov
subb
ret
in
scas
jge
xchg
and
mov
adc
jns
scas
aas
mov
es
stos
xchg
daa
das
das
in
scas
jge
xchg
mov
mov
and
cmp
shll
frstor
sub
cmpsb
sub
shll
and
mov
xchg
mov
scas
sub
scas
push
jnp
icebp
pusha
and
mov
mov
inc
mov
jge
loope
into
jmp
mov
inc
mov
sub
lods
xor
xchg
fcoml
add
imul
cmpb
das
ret
das
shrb
in
scas
dec
xor
adc
ret
ret
and
movsb
inc
jnp
sub
mov
push
pop
jmp
xchg
jmp
inc
mov
scas
cmp
and
inc
fxch
orl
pop
insl
ret
loop
xchg
cmpsl
jmp
mov
adc
dec
pop
das
pushf
addb
dec
xchg
or
incb
popa
clc
mov
faddl
and
push
cld
xchg
mov
xor
xorb
arpl
mov
loop
and
cmpsl
jne
outsb
repz
and
movsb
adcb
aas
sub
les
push
and
inc
fcoms
inc
stos
or
rorl
data16
push
and
outsb
sub
mov
push
xor
cmc
adc
les
jb
fwait
cld
es
test
fs
pop
mov
jns
mov
mov
sub
ret
cmp
push
sti
and
test
stc
stos
test
int
scas
shl
mov
subb
xchg
sub
push
ds
mov
dec
leave
decb
gs
dec
std
pop
ljmp
hlt
stos
add
cs
add
mov
or
mov
mov
or
mov
cmpsb
test
xor
cmp
stc
lahf
shl
and
cmp
pop
mov
add
mov
mov
cmp
xor
mov
outsb
cmp
fnstenv
ds
or
push
mov
ret
sbb
or
popa
scas
mov
xchg
js
and
mov
xlat
cltd
xchg
mov
ds
mov
mov
mov
xchg
and
dec
popa
or
mov
jle
mov
in
push
mov
stc
cmpb
cmp
adc
mov
xchg
sbb
bound
add
mov
mov
dec
and
pushf
stos
clc
push
popf
push
jns
xchg
mov
daa
adc
ret
push
cmpb
out
stc
rorb
and
dec
lcall
out
sbb
mov
push
loope
lock
pop
pop
xor
jno
push
rcll
scas
aaa
xor
mov
mov
orl
push
repz
ret
sub
int
and
or
pop
xchg
sbb
mov
cwtl
mov
mov
jmp
pop
pop
fldt
inc
adc
cmc
adc
stc
iret
rcrb
stc
add
push
bound
jns
mov
add
inc
hlt
xor
adc
mov
pop
pop
out
stos
add
aaa
jp
repz
and
push
cmp
pop
mov
mov
stc
cmp
mov
sub
add
jmp
bound
mov
pop
das
jbe
fwait
mov
jb
sbb
in
fs
xchg
sub
mov
and
dec
es
add
cltd
in
mov
xor
mov
mov
mov
mov
and
cmpsl
sub
jo
sub
xor
cmp
inc
ja
push
mov
pop
ret
mov
jns
movsb
adc
mov
adc
xor
rolb
nop
mov
dec
popa
cmp
es
and
out
inc
and
ret
in
xchg
cmp
jno
inc
mov
cmc
sub
cmpsb
cmp
jbe
in
call
add
xor
bound
or
and
das
jl
popf
test
pop
stos
mov
sbb
inc
or
das
mov
or
jg
movsb
inc
sbb
notl
aas
and
dec
jnp
jl
and
push
enter
jb
insb
sub
sbb
xor
lret
jp
cmp
inc
ss
je
xchg
xor
je
in
xchg
ljmp
or
movsb
sub
out
sbb
cmp
shlb
inc
ret
mov
mov
jp
test
mov
xor
adc
ficoml
stos
cltd
mov
cmp
stos
xor
lock
or
jmp
insl
movsl
jns
mov
fildll
jbe
pop
and
and
aam
jmp
sbb
inc
add
adc
andb
adc
gs
sbb
das
mov
addr16
outsb
in
mov
lahf
scas
test
mov
inc
add
jmp
popa
mov
popa
movsb
mov
imul
adc
mov
pop
jg
test
or
mov
xor
movsl
xchg
std
and
outsl
mov
popf
xchg
scas
das
mov
repz
or
loop
lock
test
inc
lret
addb
push
and
rcll
add
mov
cmpsb
pop
dec
scas
dec
gs
fnstsw
jnp
xor
mov
popa
mov
mov
cmp
mov
cmp
subl
fisubl
mov
lods
or
mov
cltd
adc
mov
and
lock
xor
mov
pop
dec
scas
mov
call
mov
or
mov
pushf
xor
xchg
and
cmp
mov
or
loope
ror
sub
and
adc
xchg
xor
in
xchg
pop
add
push
cmpsb
push
mov
or
pop
push
cmp
je
imul
xchg
in
pop
or
popa
cld
push
adc
cmc
inc
movsl
jp
and
rcrb
and
jno
jo
dec
pop
fidivrl
mov
sub
mov
xchg
sahf
clc
orl
lods
lret
ret
add
pop
addl
andb
in
je
xchg
enter
imul
pop
and
imul
xor
or
out
add
add
jne
in
mov
mov
imul
inc
leave
imull
ret
xchg
jl
push
rorl
cmpsl
xor
enter
lahf
stc
pop
inc
jmp
out
xchg
jmp
shll
sbb
add
imul
mov
lods
sub
cmpsb
lods
std
push
mov
adc
les
inc
andl
mov
jno
mov
dec
sub
and
sub
mov
fucomi
jge
hlt
test
xorb
ss
stos
test
mov
add
enter
inc
mov
xor
mov
scas
xor
shl
imul
shll
sub
push
jae
inc
and
xor
sbb
sub
dec
jb
dec
nop
or
mov
ret
push
pop
xchg
and
xor
mov
inc
mov
xor
inc
xchg
leave
stos
arpl
bound
aaa
aam
pop
and
shrb
and
jp
jo
dec
scas
mov
mov
xor
pop
movsb
add
sub
or
adc
call
and
jns
test
stos
push
cmpsb
mov
add
xorb
push
sbbb
mov
sub
pop
std
testb
dec
sub
mov
pop
lock
cmp
out
fwait
sub
sub
stos
mov
stos
sub
out
ja
mov
jne
pop
inc
mov
repz
pop
pop
add
inc
pop
loopne
adc
and
leave
ret
and
or
and
loope
test
stc
rorl
dec
add
xorl
ret
xor
stos
xor
mov
stos
xor
cmpsb
lds
insl
mov
inc
cltd
or
jne
mov
lcall
pop
dec
data16
add
mov
cmp
inc
dec
mov
enter
test
jp
jno
sub
pop
jge
mov
xor
daa
mov
xchg
xor
xor
mov
add
dec
mov
xor
pushf
rdpmc
mov
adc
and
mov
mov
mov
xor
pop
mov
xorb
xor
dec
mov
adc
sbb
sub
mov
mov
icebp
sahf
jl
and
jb
sub
imul
sbb
mov
aaa
xchg
jge
scas
push
jns
roll
mov
aad
mov
ds
flds
in
ret
cmp
movsb
lcall
push
enter
xchg
inc
loope
icebp
jle
inc
std
add
pop
xor
gs
mov
das
outsl
and
inc
sti
mov
dec
or
mov
jb
loope
outsb
and
adcb
leave
data16
sub
enter
leave
fcompl
nop
push
outsb
jnp
inc
stc
xchg
or
cmpsl
mov
rorl
mov
es
lods
cmp
mov
leave
push
pop
mov
cmp
lret
jle
mov
std
lret
cmp
cltd
sbb
mov
mov
int
popf
loop
xchg
dec
push
add
cmp
add
mov
das
cmp
bound
or
add
fwait
enter
enter
inc
imul
pop
mov
addb
inc
or
or
out
or
and
sub
bound
shll
inc
insb
push
bound
jle
fisttps
push
imul
cld
insl
outsl
push
popf
vpdpwssd
pop
arpl
loop
fildl
mov
imul
pop
lds
adc
push
mov
cmpsb
stos
outsl
fsubrs
ja
dec
pop
lret
inc
jns
les
adcb
testb
bt
and
ja
sar
dec
arpl
data16
in
lods
fwait
imul
mov
lds
mov
mov
mov
fsubs
xchg
mov
shll
ds
mov
sarl
sbbl
sub
jb
mov
adcb
daa
mov
negl
sub
in
aam
inc
sub
sub
mov
jl
mov
and
jnp
in
pusha
mov
lahf
sbb
std
test
mov
xchg
xor
and
mov
add
rcrb
sahf
add
sti
fcompl
xor
mov
inc
push
out
daa
enter
and
adc
das
mov
lahf
rcrb
lods
inc
xor
add
shl
pop
in
shl
in
add
cmpsb
jl
scas
cmp
fisubrs
push
sub
mov
movsl
shll
movsb
ret
push
mov
mov
adc
or
and
ret
inc
mov
jge
adcb
pusha
je
ret
ret
mov
add
lahf
pusha
pop
jae
lret
xor
xor
enter
jno
xchg
mov
xor
scas
xchg
pushf
xchg
sti
popa
ret
mov
dec
fisubs
lahf
sub
and
subl
outsl
mov
das
jecxz
aas
inc
and
test
pop
push
xchg
and
testl
loope
jb
out
sbbl
repz
xchg
loope
hlt
jl
sahf
imul
mov
in
jmp
mov
popa
add
inc
mov
cmpsl
push
rorb
shll
sbb
inc
scas
jns
push
add
mov
pop
or
roll
add
dec
mov
sbb
mov
fmuls
out
les
mov
xor
ret
pushf
cmc
loop
sub
inc
or
jle
test
pop
jb
mov
lahf
in
adc
mov
push
inc
adc
bound
sahf
lods
mov
dec
mov
shl
nop
out
mov
aas
mov
jecxz
xchg
pop
cmp
lods
aam
dec
mov
dec
mov
pop
mov
rol
gs
int
ds
mov
mov
xchg
pop
jecxz
sahf
jbe
and
rcll
aas
ret
aam
test
stos
pushl
popa
sub
xchg
stos
lock
inc
cmp
enter
adc
scas
sub
sbb
inc
mov
xor
cli
int3
ja
pusha
mov
adc
mov
aam
leave
push
and
dec
and
xor
das
mov
mov
xor
sbb
rep
aas
aam
cmp
dec
scas
mov
bound
and
and
pop
mov
loope
fs
jp
stos
ret
xorl
movsb
or
inc
push
xchg
out
daa
mov
stos
sub
mov
and
aam
dec
jecxz
cmp
nop
mov
mov
mov
add
loopne
cs
nop
mov
jnp
loopne
divb
shrd
mov
lods
std
cmc
jno
and
jmp
xor
mov
sbb
es
outsb
daa
or
repnz
xchg
inc
lret
aas
xor
jg
jne
addb
sbb
jae
mov
or
iret
testb
inc
push
jne
pop
push
mov
lret
shlb
jno
out
out
mov
mov
cwtl
cmp
addr16
push
ja
inc
sbb
sarb
movsl
push
insl
faddl
cmp
mov
sub
mov
and
clc
inc
mov
dec
int
dec
sub
or
imul
or
jmp
sub
movsl
je
sub
cmpsl
sub
jmp
subb
into
ljmp
pop
test
dec
mov
int3
cmp
mov
int
cmpsb
lcall
and
mov
es
scas
not
jae
mov
andb
mov
or
lahf
movsl
mov
xchg
and
imul
xor
scas
jmp
fldt
dec
lcall
jl
sbb
stos
shll
mov
add
repz
sub
in
jne,pn
fisubs
or
int3
push
popa
add
das
insl
movsb
mov
or
les
into
dec
subb
andl
sbb
sub
stc
dec
mov
incb
imul
mov
lea
xor
test
lahf
xchg
lock
ret
out
adc
ret
mov
je
loop
dec
and
and
mov
ret
mov
and
pop
jge
das
ret
add
adc
movsl
pop
and
xor
jne
das
pop
inc
mov
sub
mov
xor
or
pop
fldenv
lahf
inc
aas
pop
mov
push
test
mov
jmp
scas
int3
ds
adc
mov
pop
rol
or
xor
sbb
sub
pop
bound
cmpb
push
cld
enter
jnp
sub
cmp
cmpsl
or
inc
imul
or
popa
xchg
mov
out
xorl
mov
or
insb
inc
int3
mov
inc
add
and
push
mov
jle
ret
jno
stos
sub
or
ljmp
fsubs
inc
popa
aas
insb
mov
pop
mov
sub
pop
insb
xchg
or
or
mov
pop
xor
mov
or
lods
push
adc
cmp
mov
cmpsl
jbe
xor
jb
pop
sahf
insb
andb
lds
cmp
mov
mov
insb
xlat
mov
scas
in
xor
inc
sbbb
imul
imul
ror
jae
push
jne
movsb
dec
xor
test
push
sti
jge
mov
push
icebp
arpl
aas
loop
and
imul
scas
cmp
xor
push
mov
addr16
dec
outsl
or
inc
test
push
cmp
adcl
mov
out
pop
add
mov
cmpsl
add
inc
xchg
cmp
sbb
fimull
call
mov
arpl
fsubrl
std
stos
insb
daa
stos
fwait
and
mov
sub
inc
push
jmp
jno
mov
mov
xor
adc
cli
lea
popf
gs
mov
call
into
jmp
xlat
mov
inc
xchg
out
out
shlb
addb
jb
xchg
test
cmp
test
inc
out
or
jmp
inc
xchg
inc
mov
mull
insb
repz
pop
sub
cmp
inc
mov
sbb
out
jecxz
sub
inc
adc
xor
cmp
stc
ret
add
in
mov
mov
adc
push
das
in
inc
mov
add
mov
int3
shll
sbb
in
mov
jnp
mov
mov
pusha
push
sub
lcall
mov
jnp
sub
push
xchg
jg
mov
or
lret
xchg
das
js
dec
xlat
scas
test
test
mov
sub
nop
fcmovnu
jl
mov
mov
mov
outsb
outsl
inc
lret
and
lret
fwait
scas
add
dec
jb
ret
sub
mov
mov
mov
jb
xorb
lahf
cmpsb
sub
loopne
fstpt
daa
add
fildl
or
add
inc
mov
pushf
out
sti
dec
out
mov
fsubl
fs
mov
sahf
fs
lods
mov
pushf
xchg
scas
lods
gs
cld
xchg
mov
mov
mov
jge
mov
in
outsb
dec
scas
xor
sub
inc
pop
sahf
mov
inc
pop
mov
pusha
xchg
sub
pop
cmpsl
sub
aaa
add
cmp
or
fisttpl
in
mov
inc
jb
mov
scas
idiv
int3
jecxz
mov
out
and
popa
mov
pop
and
loopne
or
ja
xchg
aaa
add
inc
xor
addr16
daa
std
cmp
addl
push
jno
mov
mov
mov
inc
or
dec
xchg
jecxz
or
xchg
pop
jge
add
xor
mov
or
adc
mov
subl
or
out
imul
pop
lock
int3
negb
mov
dec
sbb
cwtl
sub
mov
outsb
imul
jmp
cld
dec
or
sub
cmpsl
fcmovbe
call
add
mov
mov
dec
aaa
mov
aaa
je
fidivrl
and
cmp
pop
jle
lods
fsts
scas
lock
or
jae
mov
xchg
call
pop
add
lock
stos
jb
andl
cltd
daa
push
push
pop
and
pop
sub
lds
mov
jno
push
lahf
hlt
ret
dec
inc
adc
pop
mov
inc
inc
call
nop
xor
loope
mov
inc
mov
ss
out
mov
mov
mov
mov
mov
sahf
rsm
andb
mov
pop
gs
xor
dec
add
and
loope
xor
movsb
imul
insl
aad
stos
mov
add
sub
loop
dec
outsl
sbb
add
mov
std
cmpl
mov
mov
mov
sub
mov
imul
mov
xor
push
add
outsb
mov
pushf
inc
jmp
outsl
dec
jmp
xorl
das
ret
andl
iret
mov
popa
add
mov
cmpb
scas
add
loop
inc
add
stos
popa
loop
mov
enter
sbb
xchg
mov
and
xor
push
dec
loopne
mov
pusha
adc
aad
mov
mov
sub
push
and
cmp
pop
imul
push
nop
int
stos
add
fwait
bound
das
jle
xchg
outsb
xlat
mov
mov
shll
mov
add
jmp
xor
mov
ret
xchg
out
push
pop
mov
fdivs
adc
imul
mov
jne
cmpsb
daa
and
xchg
or
add
cmp
mov
test
mov
popa
inc
addr16
inc
loope
addb
andb
pusha
out
inc
packsswb
mov
mov
sub
dec
mov
loop
shll
jg
xchg
mov
and
add
and
push
sub
shll
cmc
jb
out
or
cmpsb
add
lahf
and
xor
scas
inc
ret
xchg
jno
or
popa
insl
addb
pushf
push
mov
mov
daa
dec
jmp
insl
inc
push
inc
and
sbb
mov
flds
mov
and
ret
ret
pop
jg
or
pushf
lcall
sarl
bound
xor
jno
and
sub
cmpsb
xchg
xor
hlt
mov
xchg
packuswb
adc
gs
mov
scas
dec
or
pop
adc
adc
je
push
lods
fwait
xchg
jbe
sub
cwtl
or
mov
add
cmpsb
and
xchg
xchg
jge
push
pop
xchg
jge
cmp
and
xchg
xchg
out
or
orb
mov
xchg
subl
addr16
mov
stos
fdivs
cmpsb
mov
mov
mov
mov
mov
in
xchg
nop
cmp
imul
lods
stos
and
imul
sbb
leave
add
add
pop
orb
jg
mov
stos
scas
mov
sbb
orb
rorb
mov
jns
push
xor
inc
jp
jp
cltd
ret
xchg
aas
jo
hlt
popa
fnstcw
mov
out
jne
daa
jo
xorl
loopne
add
jo
mov
jo
sub
dec
xor
nop
xchg
test
outsl
lcall
lret
and
jo
cmp
pop
int
ja
stos
dec
jnp
imul
mov
cmp
jle
imul
and
sub
and
cmc
mov
cmp
cmp
lret
mov
inc
stc
andl
ss
add
ja
mov
test
sub
sbb
jmp
decl
dec
enter
lods
and
int
stos
sub
movsl
mov
add
gs
sarb
and
scas
cltd
adc
and
andb
cmp
sub
ljmp
movsl
roll
sahf
test
loopne
push
pop
je
popa
lret
loop
push
mov
mov
mov
test
stos
cwtl
mov
and
mov
mov
dec
xchg
insb
xchg
jecxz
add
enter
add
pop
loop
mov
in
cmp
addr16
mov
push
fld1
addr16
mov
lcall
daa
test
dec
sahf
adc
andb
shlb
enter
rclb
mov
mov
jne
add
and
adc
test
add
cmp
xor
lock
dec
mov
loop
sarl
test
movl
or
subl
mov
ja
shrb
inc
andb
dec
and
hlt
mov
or
lret
ja
and
pusha
mov
popf
loop,pt
mov
add
mov
aaa
mov
nop
and
out
cmp
in
xorl
mov
in
stos
cli
inc
rcrb
dec
xchg
cmp
mov
leave
and
in
push
add
rol
inc
filds
sbb
ffree
add
add
and
in
stos
fstpt
xchg
mov
in
add
add
into
in
mov
or
mov
add
stos
mov
mov
add
sub
in
mov
adc
aam
cwtl
repz
dec
scas
imul
test
sub
out
jne
call
mov
push
mov
ljmp
and
sub
inc
cli
je
leave
and
lcall
push
in
ret
sti
inc
sahf
sub
popf
pop
sbb
add
jp
push
out
stos
push
and
pop
mov
je
inc
mov
stos
jl
mov
sti
xchg
andb
repnz
leave
add
pop
and
aas
hlt
mov
jmp
mov
adc
inc
cmp
aas
addl
pop
push
cmp
mov
fs
int3
js
mov
push
push
xlat
mov
mov
xlat
mov
mov
sahf
cmp
in
imul
test
mov
cmpb
mov
sub
jne
dec
mov
test
cmp
sub
push
mov
mov
dec
push
dec
mov
rolb
outsb
mov
xor
mov
mov
add
mov
fadd
addr16
imul
mov
popa
jns
addr16
adc
lret
mov
loopne
outsb
movsw
mov
lods
mov
sub
mov
clc
cwtl
jb
in
outsb
mov
mov
jge
jnp
dec
push
xor
dec
cmpb
pop
or
mov
push
mov
mov
imul
daa
out
sahf
mov
xor
jg
aaa
rol
lods
jp
dec
add
cmpsb
out
mov
mov
cmp
ret
xchg
sub
xchg
loope
sti
xchg
cmc
jge
xlat
pop
addl
sub
jb
ret
sbb
popa
mov
scas
mov
das
inc
lods
cmp
lds
add
aas
jns
cmp
and
js
xor
nop
mov
add
cmp
inc
push
cmc
jge
push
mov
bound
or
mov
ficoms
test
mov
and
ds
add
scas
aaa
outsl
jmp
pop
pusha
add
sub
mov
sub
mov
lret
stos
fwait
xchg
insb
dec
dec
mov
out
sbb
mov
pop
jmp
xor
mov
cmp
mov
and
jle
jbe
xchg
or
out
adc
scas
mov
xor
aas
cmp
aas
repnz
pop
ret
stos
pusha
insl
hlt
mov
mov
es
push
and
adc
mov
or
shlb
addr16
and
scas
mov
jae
aaa
pushw
or
roll
or
daa
adc
mov
mov
jnp
inc
mov
xor
xor
pusha
cmpb
outsb
add
jno
and
sti
in
push
inc
mov
jbe
or
sub
dec
adc
inc
or
jl
aas
outsl
jp
daa
aas
test
push
add
sbb
popa
scas
dec
cwtl
lahf
fnsave
inc
out
lods
or
mov
imul
add
mov
mov
dec
or
scas
push
cmp
cmp
dec
mov
cmp
and
pop
pusha
test
imul
iret
cmpsl
sub
mov
jnp
cmp
ja
shrb
cs
jnp
adc
insl
and
adcl
push
and
mov
jecxz
mov
sub
mov
mov
scas
bound
mov
cmp
adc
cld
scas
stos
int
xchg
cmp
insl
dec
in
mov
cs
les
cmpsl
cmp
clc
inc
mov
jl
mov
jle
cmp
aam
cmp
faddp
sub
inc
je
frstor
or
mov
mov
mov
push
sub
xor
push
scas
sub
or
add
adc
pop
subl
mov
lret
add
add
pop
lods
cmp
out
cmpsl
jb
lahf
adc
sub
mov
xchg
mov
mov
mov
push
jns
test
addr16
lods
sarb
or
inc
mov
sub
push
in
into
mov
les
fadd
sbb
dec
aaa
movl
fldenv
lcall
mov
mov
movsl
repz
es
loope
data16
mov
push
or
sbb
ss
hlt
stos
xor
lret
mov
mov
mov
scas
mov
mov
cmp
add
cmpsb
mov
jae
and
xor
scas
or
push
mov
mov
dec
mov
push
mov
xor
mov
in
out
scas
scas
jecxz
hlt
sub
dec
repz
stos
nop
cmpsb
mov
and
loope
stos
enter
mov
xorb
insl
xor
push
nop
mov
mov
out
ret
jno
ds
sbb
sub
imul
and
or
arpl
daa
mov
add
dec
xor
and
mov
inc
mov
lea
data16
aas
pop
add
xchg
push
sbb
jno
arpl
mov
loope
fdivrl
mov
mov
xor
icebp
cmc
cmp
stos
or
add
out
xchg
test
mov
jbe
push
stos
mov
lret
mov
rorl
push
es
outsb
mov
popa
stos
movsb
arpl
insb
push
and
movsb
test
int
xchg
and
jnp
jmp
ret
add
lock
adc
stc
xchg
pop
stos
repz
jo
ljmp
xorl
mov
daa
rcrl
pop
gs
fnstenv
mov
testl
mov
push
movsl
insl
sub
and
je
pop
add
das
mov
or
addr16
clc
int
dec
cmpsb
or
addr16
mov
add
cmp
js
out
popa
inc
shll
xchg
fisubs
imul
or
sar
sahf
mov
movsb
inc
fwait
jb
cmpsl
jo
add
daa
adc
ret
icebp
ret
pop
cmp
jns
sub
xchg
mov
mov
push
sub
test
mov
jo
and
pusha
pushw
fldl
addb
sub
in
in
in
cmp
es
xchg
mov
popf
xor
lea
push
addl
xchg
or
or
pop
xchg
jecxz
mov
testb
jge
mov
jmp
leave
or
addr16
daa
add
jmp
add
lds
arpl
sub
daa
andb
and
dec
es
xor
pusha
imul
push
mov
fimuls
das
mov
cld
daa
jmp
imul
mov
icebp
jae
scas
jge
in
add
cs
dec
stos
repnz
fiaddl
push
mov
imulb
addb
das
sbb
inc
jmp
mov
push
sbb
pop
and
lods
rcrb
mov
cmpb
into
lahf
sub
mov
dec
inc
cmp
adc
xor
fsubl
add
xor
ja
dec
mov
jp
call
popf
add
jae
into
and
and
add
mov
scas
mov
aas
mov
cltd
lcall
cmp
add
add
and
inc
aas
in
addr16
imul
das
test
or
mov
pop
daa
jb
loopne
and
jge
xorb
xor
in
jns
dec
sbb
ss
mov
inc
mov
mov
cltd
adc
mov
cltd
enter
mov
imul
aaa
mov
sub
mov
mov
inc
int3
arpl
cmc
mov
xchg
roll
sti
inc
std
into
jge
pop
aam
js
imul
hlt
jnp
mov
fs
pop
icebp
add
inc
xor
aad
mov
add
aad
cmp
cmp
clc
stc
rcrb
add
xchg
jno
bound
mov
dec
in
add
icebp
loop
push
sti
clc
cmp
insl
or
mov
lea
nop
sbb
pop
ss
lret
adc
dec
nop
incl
mov
push
mov
test
sbb
stos
xchg
test
mov
test
mov
in
and
cmp
hlt
das
and
sbb
adc
stc
xchg
in
insb
subl
out
xchg
sub
es
in
inc
mov
fidivrs
inc
mov
cs
mov
and
ficoms
xchg
mov
mov
inc
mov
and
jle
cmpsl
test
out
inc
mov
pop
cmp
mov
lock
rcrl
rorb
int3
xor
mov
mov
sub
jg
and
mov
ljmp
sub
addr16
popa
and
ljmp
xchg
les
pop
jmp
outsb
fdivrl
sbb
aas
insl
std
mov
inc
iret
push
add
loop
int3
adc
mov
push
cmp
loopne
pop
cmp
lcall
mov
leave
orl
jmp
mov
pop
test
movsb
jnp
popa
adc
scas
sbb
jle
popa
repz
repnz
mov
lret
mov
in
mov
in
xor
cld
jb
push
jnp
and
lods
std
loop
fdivl
dec
pop
andb
or
dec
and
jmp
ret
mov
pusha
mov
sbb
sbb
jp
pop
sahf
xor
push
fidivs
inc
loopne
mov
sub
sub
and
mov
sub
push
adc
sahf
cmp
ret
in
mov
loope
xchg
jno
adc
lahf
xor
pop
out
stc
shrb
inc
mov
inc
testl
jmp
dec
rorb
lock
ja
pop
movsl
std
rclb
scas
push
inc
sbb
scas
pop
mov
out
xor
stos
adc
mov
add
stos
adc
sub
mov
arpl
bound
ret
xchg
lods
stos
nop
lods
pop
hlt
packsswb
movsb
push
add
lret
cmpsl
movsl
xor
sub
jnp
inc
lods
incb
fs
test
jmp
mov
aaa
popa
arpl
push
into
sub
shlb
test
push
hlt
shrl
fsubrs
rcrb
inc
pop
mov
jp
cli
cmpb
int3
and
mov
lret
mov
jmp
shrl
and
xchg
mov
or
outsl
mov
mov
fsubl
icebp
mov
dec
add
jbe
mov
popa
test
mov
inc
mov
stos
sub
cmp
push
mov
negb
jecxz
stos
imul
pop
sub
cmpsb
ja
xchg
mov
arpl
lret
sahf
in
and
std
dec
dec
jbe
or
mov
inc
sbb
test
sub
or
inc
add
test
aaa
jbe
pop
inc
leave
test
jae
add
into
out
stos
sbb
fisubl
or
aam
stos
js
inc
jp
add
test
jnp
lods
imul
or
jns
pop
push
xchg
push
inc
mov
push
int3
and
mov
imul
cmpsl
mov
add
ret
jmp
faddl
lds
arpl
out
pop
stos
jmp
xchg
outsb
popa
mov
out
icebp
lahf
inc
add
stos
or
mov
and
sbb
mov
jb
push
and
xor
cli
in
arpl
mov
and
jbe
test
pushfw
mov
and
jns
and
jg
jae
dec
add
cld
jno
cmpl
stc
or
enter
sub
jmp
dec
ljmp
inc
sbb
dec
ljmp
addr16
xchg
cmp
popa
sti
pop
daa
andb
enterw
mov
repz
scas
pop
outsl
mov
and
aas
mov
inc
cli
mov
adc
mov
mov
sub
ljmp
push
inc
lret
int
int3
inc
fldl
inc
inc
frstor
test
jae
ljmp
sub
in
cmp
xor
xchg
xchg
inc
mov
lods
lret
mov
sub
xchg
movb
sbbb
adc
xor
ljmp
imul
out
pop
test
out
mov
in
mov
orl
lds
data16
jmp
sti
inc
mov
movl
call
pop
xchg
loope
or
xchg
push
xchg
mov
hlt
dec
stc
in
notl
arpl
mov
and
dec
jg
jnp
push
pop
mov
sbb
ja
mov
add
mov
or
and
xchg
mov
pop
add
push
mov
or
mov
daa
into
gs
sub
shll
xchg
dec
jbe
and
xchg
hlt
mov
jne
jp
enter
mov
add
pop
stos
mov
je
call
mov
jb
push
ljmp
and
sub
mov
xchg
in
sub
sbb
add
stc
ret
add
pop
dec
sbb
leave
arpl
movsb
push
popa
mov
adc
mov
sub
addr16
mov
sbb
lret
adc
in
jo
inc
in
sub
mov
add
jae
sub
jge
push
jg
arpl
jb
sbb
cmp
push
insb
jne
das
push
int3
les
cmp
mov
sub
leave
push
sub
stos
and
sbb
andb
es
repz
sub
mov
jl
add
inc
mov
jmp
mov
push
push
out
and
and
inc
ljmp
xchg
cmpsl
bswap
dec
stos
mov
mov
xor
sarl
out
dec
push
add
scas
mov
das
in
sub
ljmp
push
movsl
sahf
enter
sub
or
mov
dec
and
adcl
jmp
out
ljmp
and
fldt
movsl
mov
ja
es
sub
and
xor
enter
inc
les
outsl
dec
sub
inc
out
dec
iret
ja
dec
jnp
xchg
push
in
dec
inc
sbb
mov
mov
addr16
imul
add
es
push
lret
xchg
xor
push
and
dec
test
jnp
out
int
mov
pop
enter
stos
xchg
rol
jmp
adc
mov
lret
addr16
jecxz
cli
dec
mov
mov
imul
inc
or
sbb
mov
inc
and
movl
lods
lcall
mov
mov
std
mov
jmp
addb
and
shrb
inc
cmpsb
add
int
mov
inc
fmull
mov
popa
xchg
lret
data16
out
inc
subb
and
dec
in
mov
jns
inc
xchg
call
aam
sahf
jg
and
mov
orl
mov
popf
insb
lcall
mov
and
call
stos
fwait
aas
es
mov
and
and
cmp
sub
aas
jp
cltd
adc
imul
fiadds
ret
fwait
std
test
leave
test
ret
and
mov
and
out
test
sub
fdivrl
ljmp
movl
dec
mov
mov
out
add
and
call
out
pop
rolb
in
pop
dec
adc
in
rorl
xchg
jmp
addr16
xorb
lods
jae
dec
push
sub
in
mov
dec
negb
jle
sub
jno
call
xchg
das
orl
jmp
pop
out
ret
lret
outsl
pop
inc
mov
lret
bound
mov
pop
stos
mov
cmp
es
mov
in
and
scas
hlt
repz
push
mov
test
mov
out
push
stos
sbb
jb
mov
stc
gs
adc
lea
out
je
mov
test
jmp
shr
imul
push
cli
mov
inc
out
lea
sar
add
mov
adc
sbbb
mov
cmc
insl
mov
and
adc
mov
mov
mov
mov
jnp
push
jg
push
mov
adc
faddl
fidivrl
sub
cmp
sbb
bound
push
enter
xchg
inc
stos
aaa
jge
sarb
push
arpl
sahf
xor
movsl
adc
mov
mov
push
aam
mov
out
into
ret
loopne
sub
add
out
mov
mov
data16
hlt
mov
icebp
add
in
push
mov
incb
int3
aad
mov
lret
loop
ss
dec
sarb
xor
loopne
push
ret
and
xchg
test
bound
mov
push
lods
and
mov
adc
xor
inc
scas
and
add
orb
cmp
mov
ss
dec
jg
fnstsw
or
mov
mov
push
insb
loope
jge
stos
sub
and
or
lret
or
out
test
andl
adc
stos
add
xor
pop
orb
jne
and
dec
sub
mov
shll
pop
inc
pop
mov
popa
or
and
xchg
jecxz
and
mov
mov
repz
xor
psubsw
test
aad
or
push
push
mov
daa
in
mov
mov
dec
xchg
fsubl
sub
mov
adc
test
addr16
lret
inc
daa
enter
shll
mull
or
mov
xchg
sarb
mov
lock
stc
and
loope
or
das
loop
cmp
push
mov
mulb
sbb
mov
daa
fidivrs
ljmp
or
push
bound
daa
dec
popa
lret
jb
xchg
pusha
mov
cltd
jb
or
xchg
xchg
cltd
movsb
push
dec
mov
pop
inc
cmp
inc
push
orb
ss
xchg
and
jnp
push
cltd
pop
mov
mov
fisttps
lods
in
xchg
fs
cld
cmp
pop
or
dec
mov
xchg
and
enter
xor
test
add
jmp
imul
lret
lods
xor
sbb
mov
cmp
push
mov
cli
push
clc
stos
mov
inc
into
test
and
cmp
mov
adc
xchg
pusha
add
xor
scas
sub
out
mov
rcll
insl
repnz
cli
mov
jmp
mov
test
sti
mov
sbb
mov
xor
mov
adc
jge
dec
pop
adc
rcll
aam
aad
mov
xor
mov
adc
sub
mov
pop
mov
vpshufd
jnp
enter
test
mov
js
add
adc
cmp
xor
adc
mov
cmpb
xor
movsb
jb
xchg
cmp
lahf
pop
stos
mov
insl
push
adc
dec
sub
pop
push
xchg
andl
pop
pop
jge
adc
jno
push
lods
xor
imul
mov
or
test
jmp
js
and
enter
push
mov
lods
jmp
or
cld
mov
inc
mov
enter
dec
sbb
daa
mov
xor
and
and
arpl
push
sub
mul
and
adc
cmp
sarb
add
pop
lret
cli
sbb
xchg
data16
ss
in
push
js
xchg
push
and
mov
mov
jecxz
rcrb
in
ret
dec
aad
cmp
into
cmp
ret
cmpsb
leave
add
push
mov
test
inc
add
xchg
push
jg
xor
adc
add
ret
mov
mov
cmp
cmpsb
and
pop
inc
mov
loope
jmp
inc
int
arpl
lods
paddsb
mov
xlat
fistpl
in
fisttpll
andl
imul
push
dec
cmp
dec
xchg
cmpsb
lea
dec
outsb
andl
jb
sub
bound
ljmp
pop
cmp
xchg
push
adc
out
lret
stos
leave
mov
mov
cmp
add
jmp
sub
inc
ds
aaa
movsl
xlat
sti
xor
mov
incl
jge
lret
mov
sarl
pop
jp
imul
pusha
vprotw
ja
or
call
cmc
test
les
call
xchg
inc
cli
pop
xor
dec
lods
push
loopne
jns
aaa
bound
add
sub
popa
mov
shll
test
or
or
or
push
mov
jg
jmp
add
shlb
stos
and
outsl
in
jne
ljmp
jp
mov
mov
or
paddusw
sbb
push
mov
mov
or
mov
mov
adc
sbb
cwtl
loope
xor
sbb
repnz
push
call
pushf
jnp
test
push
aaa
out
xor
inc
stos
lret
and
jmp
xor
cmp
add
cmp
outsl
loop
in
andl
jno
sarl
fbld
mov
int3
scas
sbb
mov
repz
outsb
or
scas
jmp
push
mov
scas
pushf
add
inc
lods
fsub
loopne
cmp
js
cld
fwait
jns
aam
push
aam
push
jle
repz
and
inc
or
or
subl
mov
dec
enter
add
inc
mov
andb
imul
adc
jp
and
add
dec
mov
in
mov
outsb
xor
inc
gs
xor
inc
cmp
and
ljmp
mov
xchg
cwtl
xchg
arpl
mov
jecxz
sahf
mov
adc
pop
cltd
jle
ret
mov
xor
pusha
daa
loope
push
test
lods
imul
fwait
push
loop
or
mov
rcll
jbe
jmp
mov
mov
jmp
xchg
xsavec
push
push
out
lret
scas
outsb
lock
rolb
cmp
loop
outsb
push
sbb
imul
fsts
pop
xor
sbb
push
jecxz
pop
jno
sub
sub
fs
insl
dec
enter
jge
or
mov
jbe
or
stc
in
xor
xlat
test
pop
add
push
outsl
hlt
pop
arpl
push
push
jl
mov
sbb
movsl
inc
sbb
sub
cmp
bound
and
loop
movsb
dec
jnp
insl
sti
add
xlat
and
mov
jo
sub
mov
mov
mov
jae
xchg
xor
mov
lods
sbb
adc
jmp
jmp
aam
out
xor
add
mov
inc
stos
sbb
out
adc
xor
xor
pop
inc
pop
popf
incb
test
cli
sti
mov
stos
add
sbb
adc
call
lcall
and
jne
jmp
dec
lods
hlt
sub
mov
jmp
imul
lret
mov
mov
subb
and
dec
ret
xor
jb
into
outsl
mov
fadds
lcall
mov
das
aam
gs
sub
sub
gs
fildl
repz
popf
mov
push
xchg
ds
cmp
adcb
repz
ljmp
mov
dec
xor
adc
scas
test
dec
add
mov
adc
xchg
andb
jl
mov
xchg
sub
mov
jnp
jge
sahf
popf
push
rcrb
pop
lret
cmp
into
cmpsl
shll
in
pop
fiadds
inc
dec
pop
sub
enter
mov
lods
popa
jbe
fwait
js
mov
mov
das
adc
push
mov
jp
pop
push
rcrb
jle
fdivp
mov
dec
ljmp
adc
sbb
arpl
xchg
mov
mov
inc
xchg
and
aad
ret
imul
leave
jle
push
mov
mov
push
sub
arpl
scas
loope
sbb
or
or
arpl
cmp
add
push
faddl
dec
mov
loop
dec
mov
sti
adc
std
fisubl
dec
mov
adc
mov
adc
cs
push
mov
movsb
pusha
inc
cld
xchg
scas
stc
cmc
cmpsb
ds
and
cli
xor
dec
dec
jge
stos
enter
sbb
cmp
sarl
test
stos
xchg
and
mov
mov
and
data16
mov
loope
cltd
pop
sahf
mov
arpl
inc
rcrl
rcrl
mov
and
cmp
push
cs
jnp
push
cmpsb
scas
mov
xchg
in
mov
xchg
shlb
mov
jmp
sub
cmpsb
fbstp
xchg
cmpsb
mov
call
pop
mov
aas
jb
arpl
pop
imul
lds
mov
inc
cmpsl
mov
or
cmp
push
xchg
inc
jnp
popf
jae
inc
fstpt
mov
mov
es
nop
mov
xor
out
imul
adc
lcall
push
fldenv
jbe
loop
push
aaa
iret
psubd
aaa
add
jns
das
invd
mov
lock
dec
popf
ss
inc
sti
call
inc
inc
rolb
cmpsb
xchg
sti
mov
push
fs
mov
mov
ds
jb
pop
inc
sarl
pusha
xchg
push
outsl
icebp
and
std
pop
movsb
push
inc
pop
shlb
test
jmp
mov
xchg
outsl
fstpt
ja
xchg
mov
dec
dec
pop
scas
dec
sub
and
mov
ret
adc
xchg
cmp
stos
cmc
sarl
aaa
daa
xor
add
mov
fcoml
xor
mov
call
sbb
stc
mov
mov
mov
addr16
mov
inc
scas
mov
cmpsb
inc
and
mov
and
push
xchg
ljmp
jge
xchg
sub
and
lea
push
rep
mov
and
pop
addr16
sub
xchg
push
cmp
leave
popf
scas
dec
jb
shl
mov
sahf
call
mov
test
scas
mov
inc
jp
shll
imul
xor
jle
sahf
imul
mov
jnp
mov
xchg
pop
lods
scas
dec
add
cmpsl
sub
pop
pop
and
mov
fdivrs
mov
inc
mov
xor
xor
push
and
mov
mov
lea
outsb
and
mov
mov
lea
mov
sti
test
pop
add
ljmp
jbe
leave
popf
lds
add
nop
xor
sub
je
ja
hlt
cwtl
cmp
das
cmp
add
inc
jae
mov
lret
sbb
xor
xchg
out
mov
imul
xor
ret
mov
push
pop
bound
jno
fisttps
jae
jnp
and
cwtl
mov
movb
aam
jle
push
mov
ja
pop
sbb
lret
sti
and
push
sahf
int3
loop
sub
sbb
push
das
mov
add
fistl
dec
icebp
push
adc
push
fnsave
dec
mov
lahf
cmpsb
nop
out
push
cmpsb
jne
movsl
dec
xor
les
cld
cmp
stos
ds
cld
cmpsb
fistl
cmp
lahf
scas
push
cwtl
addr16
imul
out
daa
push
lret
dec
add
lahf
popa
in
enter
lahf
fsubrs
lahf
movsb
jle
data16
int
adc
pop
es
mov
decl
popa
cld
call
shrb
and
and
jnp
loopne
jne
sbb
mov
mov
mov
cmp
cs
mov
hlt
and
mov
stc
out
inc
add
push
aam
dec
push
cli
scas
push
mov
mov
out
stos
movsb
out
bound
inc
test
inc
jp
xor
push
and
fs
sub
pop
or
loope
stos
mov
mov
sbb
es
cmp
mov
xor
mov
scas
js
jae
mov
jp
sub
daa
mov
cmp
xor
mov
or
xchg
inc
jp
fisubl
mov
fisttps
lods
mov
inc
fidivrs
nop
pop
adc
mov
cmc
and
adc
and
jl
mov
loopne
xor
test
pop
dec
mov
ret
push
and
popa
mov
fs
dec
cmpsl
arpl
cmp
aad
ja
gs
lcall
orb
and
ret
sbb
push
sbb
shll
ljmp
xchg
cld
and
or
xchg
and
xorl
jne
xchg
hlt
mov
sbb
test
and
addr16
out
shrb
inc
mov
mov
adcl
and
inc
cld
movsl
mov
scas
out
pop
xchg
std
push
mov
sbb
out
out
nop
stc
imul
repnz
push
out
inc
shl
les
push
cmpb
subb
imul
sub
mov
pop
mov
or
sahf
xor
int3
fnsave
insl
sub
int3
lea
mov
inc
mov
ret
out
aam
push
mov
dec
mov
sti
jnp
mov
cmp
cmpsb
aam
subb
stos
aad
xor
inc
and
imul
enter
loope
add
outsl
add
add
hlt
cwtl
jmp
cmp
add
and
cmp
mov
mov
sub
sbb
cltd
sub
inc
or
adc
aaa
xchg
push
mov
xchg
repnz
and
xor
xchg
outsb
mov
xchg
dec
mov
jl
adc
sti
mov
and
mov
add
pusha
sbb
stos
rolb
xchg
mov
stc
inc
std
xor
scas
and
mov
push
lods
sarl
add
or
out
divl
jae
mov
mov
arpl
inc
test
sub
adc
inc
fisttpll
call
sbb
test
das
aas
adc
mov
mov
jo
js
mov
mov
movsl
faddp
inc
push
leave
sub
stos
fidivrs
xor
add
inc
jge
push
dec
mov
mov
inc
jne
jmp
add
lods
pop
aam
je
mov
data16
lahf
ret
or
clc
out
jb
xor
int
mov
pushf
faddl
out
shlb
adc
fisttpl
ret
loope
adc
pusha
imul
push
jb
pop
movsb
mov
inc
std
pop
es
xchg
imul
push
add
mov
stos
mov
and
push
lcall
sbb
daa
insl
pop
testb
testb
addl
add
mov
nop
mov
push
mov
sub
cli
push
repnz
test
mov
xor
add
push
subl
or
popa
dec
jnp
push
or
or
fwait
cmovae
dec
and
test
dec
pop
sbb
repz
jnp
mov
out
dec
add
xchg
mov
outsl
sbb
or
mov
mov
cmp
sub
or
insl
push
xor
adc
push
sub
adc
mov
rcrb
iret
ss
jmp
stos
sti
minps
or
jb
mov
or
jo
nop
add
adc
xchg
int3
jp
cwtl
mov
mov
dec
mov
pop
or
xchg
mov
xor
and
mov
pop
jecxz
out
mov
and
mov
inc
imul
cmpl
mov
decl
imul
mov
mov
cmp
popa
stos
add
or
and
mov
shl
xor
subl
iret
repz
aaa
outsl
sbb
out
pop
cmp
lret
jbe
into
es
test
inc
and
dec
mov
add
add
inc
movsl
lods
daa
popa
or
mov
adc
mov
pop
or
dec
movsb
xchg
and
out
int
enter
adc
test
cld
lods
add
or
test
loop,pt
add
inc
stos
mov
and
dec
push
stos
push
jp
daa
sbb
add
jmp
xchg
movsb
sub
and
inc
xor
inc
mov
loop
cmp
hlt
imul
mov
or
push
mov
jecxz
pop
sahf
cmpsl
loop
nop
dec
insl
andl
int3
mov
outsb
cld
scas
cmpxchg
repz
cwtl
out
jp
nop
jecxz
mov
shll
adc
push
fsubr
xor
mov
mov
cmp
into
fsubrl
mov
pop
das
rolb
inc
sbb
push
adc
cmpsl
cmp
bound
stos
mov
mov
push
push
cltd
push
mov
bound
dec
jecxz
xor
mov
xor
xor
mov
cmpsl
int
pop
jno
push
or
pop
cwtl
das
mov
cmp
mov
mov
stos
je
stos
add
sti
sub
mov
enter
xchg
jno
sti
enter
lret
adc
adc
arpl
mov
ret
xchg
sub
mov
jecxz
lret
nop
xchg
push
divb
fmull
xor
leave
cmpsb
sti
subl
inc
cmpsl
shrl
or
mov
std
jns
pop
clc
movsl
add
push
call
shlb
imul
sbbl
mov
fnstsw
movsb
inc
jg
loope
and
stos
mov
data16
stos
xor
adc
pop
pop
cmp
cmp
sub
inc
mov
adc
test
gs
leave
xchg
icebp
xchg
inc
mov
sti
loopne
cld
in
cmp
jae
xchg
fstp
jno
jnp
stos
xchg
add
jg
and
faddl
adc
je
add
mov
mov
adc
adc
cmp
xorl
js
mov
lret
sbb
arpl
jne
xor
or
test
es
inc
test
xor
xchg
lret
imul
movsb
out
sub
and
and
xor
xchg
add
cmpb
popa
mov
lahf
popa
mov
ja
outsl
cld
das
mov
mov
sahf
test
subl
lods
mov
mov
lock
inc
jl
popa
ja
push
loop
inc
xor
pusha
adc
aaa
xor
aas
mov
xor
fstpl
mov
outsl
inc
cmpb
mov
movsb
sbbl
sbb
xor
leave
xor
xchg
andl
imul
dec
dec
dec
ss
ss
jno
jmp
mov
sub
xorl
ss
xor
fsts
shrl
mov
je
mov
je
mov
je
mov
iret
mov
andl
mov
jb
lock
mov
inc
mov
jmp
sbb
pop
cmp
mov
nop
and
ljmp
cmpl
dec
shr
lds
jnp
sbb
fistpl
mov
or
lret
or
mov
mov
cmovo
sub
arpl
dec
imul
add
mov
sub
inc
push
out
jo
cmp
test
mov
stos
dec
inc
das
cmp
add
and
pop
xor
ljmp
stc
adc
lahf
in
mov
or
push
mulb
mov
inc
and
add
lcall
aas
mov
inc
stc
ljmp
and
mov
ret
push
les
inc
inc
and
and
push
lds
inc
fnsave
mull
mov
out
add
mov
inc
outsb
cmp
xor
dec
popa
mov
push
sti
pop
xchg
mov
icebp
call
push
jmp
data16
mov
xchg
push
test
mov
lods
out
sub
dec
sbb
aam
aam
andl
push
push
leave
test
std
jmp
and
cmpsl
pop
sarl
mov
rcr
aaa
mov
push
dec
iret
and
stos
movsb
mov
test
xlat
frstor
popa
adc
imul
lods
push
fdivs
sub
in
pop
push
jle
xchg
arpl
mov
loopne
flds
mov
xor
pop
lock
arpl
fstl
lret
inc
and
pop
leave
fmulp
mov
push
scas
or
pop
cli
pop
pop
loopne
cwtl
shlb
mov
cld
out
inc
and
lods
sub
push
cwtl
inc
fwait
test
gs
or
pop
ds
mov
mov
rolb
cmp
fsubrs
lret
and
dec
dec
mov
shll
jnp
xchg
roll
add
mov
push
add
pop
and
das
arpl
jecxz
outsb
in
mov
cmp
pop
jae
imul
inc
or
mov
movsl
or
add
cmp
gs
jae
arpl
xchg
pushf
and
sbb
sbb
mov
in
lods
push
iret
test
imul
xchg
cmp
xchg
movsl
cmp
scas
hlt
loope
popa
lods
sbb
lds
daa
or
mov
pop
into
jp
leave
test
bound
or
faddp
adcl
fildll
sub
enter
sahf
mov
push
ret
daa
cmp
or
xor
mov
idivb
and
mov
int3
and
movb
out
ret
xchg
mov
pop
loop
xchg
in
repz
out
mov
mov
leave
cld
dec
jmp
in
test
hlt
xchg
dec
and
lds
mov
mov
iret
cmp
sub
scas
or
stos
cmpsl
fisttpll
mov
adc
sahf
cmpsb
mov
mov
mov
add
mov
movsl
shlb
insb
rorb
or
and
sub
inc
mov
inc
lods
and
or
stos
cmp
jmp
inc
mov
mov
or
pushl
and
inc
iret
and
sub
push
and
idivl
ja
pop
xchg
mov
or
push
xchg
mov
daa
push
aam
and
lret
adc
scas
pusha
adc
sahf
mov
shrb
test
fwait
sbb
scas
inc
ret
mov
inc
inc
pop
inc
mov
movsl
adc
mov
mov
xorb
jne
and
test
cmpsl
enter
inc
mov
ljmp
subb
bound
sub
mov
scas
nop
xchg
ret
adc
dec
pop
jnp
push
sub
pop
sub
popa
out
push
jmp
pop
jge
mov
inc
pop
push
inc
mov
or
pop
jb
enter
call
shlb
add
cmp
jge
lods
xor
ss
mov
shll
mov
inc
xchg
fincstp
imul
add
pop
jg
shll
mov
outsb
and
in
es
loopne
and
movsl
frstor
and
mov
push
movsb
icebp
inc
pop
stc
mov
ret
cmp
push
je
lods
cmp
enter
sti
fmuls
cmp
or
push
xor
fdiv
dec
ds
jae
push
dec
mov
and
mov
mov
lds
fldcw
lods
mov
mov
jmp
sbb
cmpsl
xor
inc
lock
sub
leave
imul
pop
cli
icebp
loop
and
push
jns
xchg
jg
outsl
je
inc
daa
fmuls
push
arpl
fnstsw
jnp
sub
in
mov
push
rcl
jecxz
add
cwtl
mov
jmp
loopne
inc
mov
inc
mov
mov
xchg
and
scas
or
pop
jmp
inc
or
insl
jne
lods
inc
arpl
aaa
jecxz
or
mov
arpl
jns
mov
pop
inc
jl
sbb
nop
idivl
clc
ljmp
xchg
inc
mov
in
and
xchg
inc
mov
out
jp
pop
or
xor
add
push
outsb
xchg
sti
cltd
mov
dec
or
inc
or
test
leave
outsb
sub
mov
and
in
js
int
mov
insl
stos
and
sub
mov
scas
pop
pop
xor
outsl
mov
sub
clc
add
ja
xor
adc
loopne
leave
sbb
adc
imul
sub
movswl
add
mov
xor
inc
pop
sub
cmp
sub
mov
loope
jb
mov
out
mov
andl
add
daa
xor
xchg
jecxz
and
mov
arpl
lret
xor
stos
xor
jnp
jnp
or
cmp
fbstp
jg
xchg
or
mov
pop
ja
int3
jbe
outsl
mov
mov
nop
leave
mov
push
das
scas
and
lods
rorl
leave
and
addr16
test
and
cmp
jne
pushf
jb
adc
mov
push
add
jo
cmp
cmc
in
mov
stos
fmulp
adc
adc
adc
cmp
mov
push
stos
jecxz
and
mov
loope
xchg
test
cmp
jnp
lods
xlat
andl
ror
out
test
cmpsb
sub
bound
and
lods
xchg
sub
xor
test
or
sub
test
rdmsr
mov
mov
addb
mov
and
arpl
mov
nop
aaa
xor
xchg
scas
ret
lods
push
mov
lahf
cmpsb
jg
and
jmp
xchg
push
pop
and
in
jg
mov
adc
mov
mov
js
adc
xor
mov
and
mov
ja
stos
push
push
pop
add
jb
lahf
das
adc
mov
adc
sub
cmp
mov
ror
int3
or
arpl
mov
or
cmpsb
arpl
outsl
test
pop
mov
sub
sub
pop
mov
std
jmp
inc
sti
ja
mov
fisttpll
dec
gs
and
mov
mov
faddl
and
add
test
pop
out
lret
push
add
and
fwait
pop
sbb
xor
inc
sub
fdivl
fs
xchg
stos
xor
pop
jle
dec
mov
in
out
xlat
jmp
xchg
inc
repz
out
pusha
movsl
movsb
xchg
cs
and
fadds
and
push
enter
jnp
add
push
addr16
hlt
enter
add
and
and
and
ret
in
sub
ljmp
jecxz
jmp
andl
das
test
movsl
mov
mov
mov
push
fiadds
jns
ja
or
scas
pop
cwtl
xchg
cmp
sub
push
ror
mov
es
cmp
cwtl
sbb
dec
mov
adc
imul
ret
mov
pop
pop
adc
adcl
xor
arpl
insl
orb
scas
cwtl
sbbb
pop
dec
jmp
mov
fwait
cwtl
test
dec
and
and
jnp
mov
pop
jb
rcrl
mov
pop
sub
mov
mov
jno
ret
fildl
fwait
jnp
cmp
in
pusha
insb
stos
or
mov
add
push
loop
in
imul
mov
sub
call
xchg
bswap
dec
lock
xor
std
ja
es
rcr
test
pop
pop
in
jmp
repz
cmp
mov
dec
inc
imul
jp
push
lds
insb
dec
pop
jmp
lods
popf
arpl
in
cmp
pop
in
mov
leave
stos
test
stos
lods
jbe
fisttpl
cmp
sbb
fnstenv
dec
mov
div
call
sub
popf
pop
push
and
mov
loopne
std
mov
in
sub
and
enter
in
mov
adc
cwtl
pop
jno
cmpsb
xchg
cli
test
or
and
mov
add
or
test
imull
xor
or
imul
addr16
sbb
jmp
or
xor
repz
out
shrb
outsl
popf
push
int3
scas
repnz
scas
scas
out
cmpsl
in
add
test
bound
lret
subl
jb
xor
cmp
imul
movsl
inc
mov
jne
sbb
inc
gs
xchg
fcmovnu
xchg
xchg
lret
cmpsb
push
pop
stos
add
adc
xchg
mov
cwtl
aad
inc
mov
adc
lret
mov
sub
or
mov
and
nop
ret
push
add
xchg
push
ja
lods
adc
xchg
add
mov
mov
cmp
lea
push
test
rcll
adc
gs
pop
dec
push
addb
mov
addr16
in
inc
xchg
cmpsl
inc
cmpsl
add
add
adc
mov
mov
xchg
and
inc
fsubrs
loop
cmp
and
pop
ret
call
mov
jnp
in
lahf
imull
push
mov
mov
add
inc
sub
jp
sub
nop
and
rcll
fdivrl
mov
sub
or
and
xchg
test
or
xorl
xor
cmp
mov
outsb
pop
jnp
xchg
mov
push
jp
adc
push
mov
sub
jne
cmpsb
rcrb
adc
or
inc
mov
fsubrl
xchg
and
repz
nop
lret
ret
sub
lds
popa
ret
rcrb
repnz
popa
mov
and
inc
sbbb
add
cmp
add
cmp
or
mov
and
jnp
or
xchg
add
lea
test
and
sahf
or
insl
inc
jecxz
cmp
mov
push
call
or
sarb
sub
gs
inc
pop
dec
sub
stos
xchg
imul
repnz
or
push
daa
outsb
add
xchg
je
arpl
mov
dec
add
mov
mov
pop
stc
mov
cmpsl
imul
into
push
mov
mov
in
inc
sub
jae
jmp
dec
xlat
out
sub
mov
or
ret
aas
mov
and
push
sbb
and
or
inc
lcall
xor
or
or
pop
movsl
out
xchg
shl
movsb
sub
cmp
loope
mov
out
mov
push
xchg
push
xchg
test
sbb
jl
dec
xchg
mov
xchg
mov
sub
ficoml
mov
imul
sbb
or
jne
cmp
jmp
cmpsl
push
push
jae
mov
andl
mov
sbb
lahf
push
mov
mov
rol
rolb
add
int
mov
sti
fucomi
popa
and
mov
cmp
mov
sub
inc
fdiv
and
dec
sub
xchg
lods
pop
mov
or
mov
push
sub
in
in
sbb
in
mov
ret
mov
das
and
adc
inc
addl
shlb
test
outsb
jnp
scas
jne
add
xchg
jns
lret
mov
pop
stos
inc
mov
imul
or
sub
ljmp
stos
adc
inc
sub
xchg
mov
push
adc
cmpb
sti
fisttpll
insl
mov
dec
jp
push
push
lar
mov
ss
inc
push
in
test
cli
popa
mov
sbb
pop
mov
xchg
push
jge
movsb
dec
pusha
xor
fists
test
xor
cmpsb
xchg
pushl
leave
dec
push
mov
leave
addr16
scas
mov
dec
mov
mov
add
addl
std
movsb
les
out
push
shl
cmp
cmc
and
popa
stc
pop
addr16
out
lret
jmp
mov
mov
in
push
test
cmc
xor
mov
or
imul
jmp
mov
pop
shlb
mov
adcl
push
push
jnp
stos
subl
jle
jae
mov
mov
and
addl
sbb
mov
test
mov
iret
and
or
mov
leave
mov
lods
mov
test
faddp
push
int3
scas
mov
fisttps
xchg
ret
mov
test
icebp
sub
imul
test
xchg
and
mov
or
mov
adc
leave
mov
dec
and
push
mov
mov
sbb
sub
dec
and
int
aaa
mov
repz
mov
pop
lret
push
adc
mov
in
inc
inc
lds
cmp
cld
or
mov
in
cwtl
lock
cmp
aam
push
jnp
daa
daa
imul
mov
mov
rclb
sahf
adc
pop
and
jno
daa
sub
mov
adc
add
cld
and
pop
sbb
xor
jecxz
push
lods
scas
mov
add
mov
clc
andb
mov
hlt
dec
out
mov
mov
mov
sub
dec
mov
int
xor
icebp
ljmp
cmp
lea
push
xchg
stos
into
cwtl
mov
lahf
sti
and
pop
xchg
stc
test
data16
lret
roll
bnd
stos
jno
shr
push
add
fcomps
sub
addr16
jecxz
dec
and
push
mov
lock
js
popa
inc
out
push
push
dec
sarl
bswap
xor
mov
inc
loope
or
sub
pop
push
hlt
jmp
scas
and
mov
xchg
clc
push
cld
setp
pop
ja
mov
mov
or
mov
lahf
sti
adc
insb
cmpsl
cwtl
out
adc
mov
daa
jle
push
and
and
xor
sub
nop
jmp
jno
scas
es
jb
leave
mov
rcrl
imul
inc
jmp
scas
inc
mov
cmpsl
cmp
daa
sub
adc
es
cli
ret
jle
test
and
insl
insb
xchg
mov
xor
jg
popa
jmp
lods
loop
and
aas
push
shlb
mov
sbb
push
cmp
xor
dec
icebp
outsl
sub
xchg
xor
out
jp,pn
cmp
or
dec
or
imul
shrb
shlb
mov
cmp
fcmovbe
cs
mov
test
arpl
adc
inc
mov
mov
pop
dec
inc
fisttpll
and
stos
shl
and
mov
sahf
mov
ss
inc
xchg
or
dec
pop
pop
andl
mov
adc
into
pusha
ret
pop
sub
data16
test
ret
dec
sub
mov
fisubrs
in
call
rol
insb
cmc
mov
lret
test
popa
loopne
in
nop
xchg
ret
jnp
outsl
fs
mov
addr16
cmc
mov
and
imul
xor
xor
mov
mov
xchg
ret
jb
push
ret
inc
xorb
pop
shll
bound
pop
xor
sub
and
subl
mov
pop
out
cmp
jmp
stos
jl
and
sbb
sbb
jae
adc
mov
out
lret
sti
das
pop
mov
pusha
mov
test
jmp
mov
sbb
sub
out
les
cmp
pop
fnstcw
movl
sub
mov
scas
jle
pop
adc
pushf
add
adc
subb
pop
pushf
mov
inc
sti
adc
add
addr16
loop
jp
xchg
jnp
idivl
adc
lds
or
push
jnp
push
into
mov
xchg
pop
mov
add
movsl
loope
or
add
add
scas
xchg
mov
ja
stc
dec
mov
and
adc
jecxz
call
int3
cmpsl
xlat
nop
cmpsb
jns
cwtl
enter
jb
imul
mov
movsb
stos
sti
cmp
jb
cmp
rsqrtps
dec
les
fsubs
movsb
xchg
je
rcll
outsl
xchg
cmp
sub
dec
aas
mov
sbb
sub
cmp
mov
test
daa
pop
xchg
ret
inc
cmp
in
or
cmpsl
aaa
loop
incb
cmpb
movsb
xchg
mov
lea
fisubs
lock
ret
outsb
adc
cmpsl
aam
inc
inc
std
test
out
mov
rolb
mov
outsl
test
pop
inc
out
je
movsl
stos
les
lahf
xorb
arpl
nop
daa
sub
bound
das
mov
cmp
jne
loop
outsb
adc
cmp
or
fdivrl
test
inc
sub
test
nop
nop
ret
sahf
mov
fdivr
sbb
cmp
out
jnp
andl
bnd
mov
ror
inc
loopne
sbb
cwtl
adc
mov
pop
sbb
fstl
sbb
bound
inc
gs
and
cmpb
and
inc
pop
xchg
pop
imul
pop
subb
cwtl
cli
mov
fnstsw
outsb
popa
mov
insl
jns
and
pop
out
adcl
arpl
in
add
mov
imul
mov
arpl
aas
das
gs
daa
cmp
test
pop
and
mov
mov
xchg
mov
and
lret
add
or
lods
jae
mov
jb
das
mov
sub
inc
test
ret
cmp
es
psubusw
dec
jb
into
and
push
pusha
jmp
and
and
bound
and
leave
jbe
add
rorb
stos
adc
out
jnp
jp
inc
push
in
xchg
leave
or
xchg
xchg
cmp
imul
enter
cmp
xchg
or
es
mov
mov
arpl
and
bound
out
mov
cmp
add
rclb
addl
icebp
outsb
repz
cmp
imul
mov
mov
push
inc
lahf
test
or
xor
mov
jne
mov
jns
jp
fwait
inc
xchg
stos
icebp
xchg
xor
aad
jecxz
addb
inc
in
sbb
mov
and
inc
sub
pop
mul
sbbl
add
push
mov
add
mov
stos
popa
hlt
sbb
test
push
scas
out
jmp
cmpsb
or
push
stos
and
out
inc
add
jb
pusha
mov
jle
or
adc
pusha
clc
iret
adc
sub
fistl
push
cmp
adc
data16
add
sti
jle
lahf
arpl
in
cmp
inc
scas
mov
testb
scas
ss
mov
mov
inc
pop
adc
jae
movsl
adc
inc
and
sub
mov
mov
adc
loope
in
test
ljmp
mov
popl
dec
sbb
inc
xor
movsb
inc
stos
aaa
dec
nop
or
mov
pop
inc
lcall
push
out
pusha
int3
jae
movsb
push
mov
lods
test
sub
jge
outsb
call
mov
inc
jbe
add
mov
adc
pop
loop
push
mov
pop
ja
enter
mov
ret
stos
mov
and
test
rsqrtps
dec
dec
or
sub
pop
fstps
in
and
dec
ret
aas
mov
pop
cmp
sub
lods
pusha
test
cmp
and
sub
nop
mov
inc
adc
xor
aaa
pusha
fnstcw
and
xor
sbb
sub
mov
test
and
dec
pop
mov
addr16
insl
add
or
and
inc
push
in
ss
push
ss
icebp
scas
jbe
adc
call
ret
pop
mov
xor
xchg
add
push
add
cmpsl
mov
lods
in
mov
and
adc
mov
mov
inc
or
movb
inc
lea
insb
inc
fwait
and
sub
mov
or
std
xchg
scas
popa
cmp
adc
test
and
and
cmp
mov
jnp
or
mov
and
mov
outsb
push
mov
mov
mov
pop
pop
adc
arpl
fnstsw
subb
mov
cld
orl
add
adc
mov
cmp
orb
orb
pop
inc
nop
mov
insb
and
xchg
leave
adc
imul
lods
mov
xchg
sarl
inc
int3
or
and
in
outsb
dec
call
subb
xchg
test
inc
stc
pop
ljmp
and
movsb
push
pop
arpl
hlt
mov
subb
or
xchg
cmp
mov
xor
je
push
shll
xchg
imul
andl
stos
jmp
xor
mov
jae
sub
xor
addps
sub
cltd
push
and
or
imul
fucom
orl
loop
test
push
addl
les
xchg
stos
mov
jmp
jle
xor
popl
mov
and
frstor
nop
sbb
xor
out
mov
cli
xchg
cwtl
or
push
daa
jg
movsb
dec
and
inc
dec
sub
stos
mov
movsb
jmp
aaa
mov
xor
dec
push
inc
fistpl
lea
inc
mov
sub
cld
popa
ljmp
divl
cmc
dec
inc
and
pop
push
mov
add
cmp
adc
xor
sub
push
mov
leave
lcall
add
inc
lods
pop
push
push
mov
dec
or
ja
in
rcrl
subb
xor
dec
jae
je
hlt
rcll
jne
ret
and
loop
xchg
pusha
addl
xlat
lods
sub
call
mov
nop
imul
mov
sub
inc
cmp
mov
sub
cmp
insl
test
orb
nop
movl
pop
jmp
dec
addb
dec
movsb
xchg
or
movsl
and
add
loope
mov
sti
cmove
sub
rorb
mov
fcompl
xchg
add
idivl
data16
jl
mov
call
sbb
sub
inc
scas
mov
jns
push
ret
dec
inc
in
mov
xor
popl
pop
enter
fldenv
mov
mov
mov
dec
add
mov
adc
lret
pop
fisttpll
dec
sub
or
sahf
call
ljmp
idivl
add
orl
mov
ficoml
or
loop
sub
ret
movsl
scas
xchg
roll
and
jb
xor
rcrb
into
mov
sub
jns
jecxz
mov
ficoms
pusha
mov
xor
and
sahf
xor
mov
lea
div
test
sub
inc
es
jnp
roll
jne
sti
aam
xchg
cli
pop
add
addl
in
stos
sub
pop
imul
ljmp
aaa
jne
xor
dec
out
repz
mov
bound
jae
cmp
and
lcall
cmp
mov
loop
adc
lea
add
lods
into
popa
xchg
in
and
scas
test
xchg
mov
sbbl
add
sub
in
arpl
xchg
or
stos
jne
lahf
movsl
stc
fucomip
xchg
sub
xor
and
mov
jmp
xchg
dec
mov
cmp
sub
mov
add
das
and
and
ljmp
addr16
loop
jp
dec
push
xor
addr16
mov
cmpsb
test
sbb
mov
movsl
std
das
jae
push
dec
inc
frstor
ds
shrb
sbb
and
lods
jae
xor
fwait
lea
adc
mov
and
insb
and
lret
mov
mov
ret
fucomp
cmp
inc
loopne
iret
in
mov
inc
bound
add
out
add
mov
daa
xor
and
mov
lret
adc
push
popa
js
mov
das
lock
or
jb
dec
and
mov
dec
mov
ljmp
je
jo
jle
jns
stos
mov
sbb
mov
mov
fsts
subl
cmp
ret
jp
xchg
lret
inc
invd
test
sub
pop
mov
inc
std
pop
call
inc
cltd
add
pop
pusha
rorb
add
cmp
in
jecxz
lret
push
sub
aas
dec
mov
rclb
mov
jge
mov
inc
xchg
daa
imul
and
in
lret
xchg
andl
cmp
xchg
cmpsb
mov
mov
jbe
mov
and
xchg
enter
and
or
cmc
popa
and
cmp
inc
loopne
test
sub
inc
xor
hlt
movsb
adcb
mov
jae
mov
ficompl
pop
andb
xor
je
out
lret
or
adc
gs
mov
daa
fsubrp
les
addr16
mov
add
out
cmpsb
dec
ret
fs
add
xchg
adc
sub
pop
std
mov
inc
push
adc
mov
xchg
aaa
mov
mov
inc
out
or
sub
sub
loop
cs
ljmp
insb
int
mov
mov
xchg
inc
rolb
mov
mov
dec
mov
sub
ljmp
divb
pop
insb
xor
mov
arpl
or
ljmp
sub
or
dec
add
sub
jmp
mov
scas
mov
mov
mov
lret
push
mov
imul
das
lret
js
and
inc
dec
mov
adc
sarb
sub
mov
bound
dec
cmpsl
push
mov
and
sbbl
arpl
stos
add
adc
mov
xchg
and
ljmp
nop
push
xchg
sahf
push
push
sarb
sbb
ret
push
dec
lcall
xor
mov
arpl
sub
mov
jo
sub
inc
sarl
mov
push
mov
ret
pop
cmp
or
std
jae
leave
bound
fsubs
out
xchg
enter
in
mov
add
inc
adc
mov
cltd
loop
xchg
icebp
and
jbe
pop
jae
add
xchg
pop
les
enter
fmull
hlt
jl
or
scas
mov
je
or
or
hlt
fs
sbb
push
ret
add
push
addr16
and
fldt
shlb
stc
and
mov
loopne
fidivrs
pop
or
aas
inc
mov
adc
stos
sub
mov
test
mov
and
sub
jno
enter
cmp
add
daa
pusha
shrb
je
std
pushf
sti
jp
test
in
outsl
add
insl
rcr
sbb
sub
inc
ret
inc
leave
je
jecxz
mov
sbb
fs
mov
jg
out
xchg
loopne
jnp
das
mov
sti
cmp
stos
leave
pop
mov
test
mov
out
cmpb
xorb
dec
mov
imul
jecxz
sarb
std
data16
cld
jne
pop
push
pop
adc
test
xor
std
sbb
mov
sti
push
mov
mov
inc
popf
lods
mov
lock
in
pop
sub
sub
add
add
xchg
adc
test
fmuls
out
mov
mov
pop
xchg
popa
in
mov
adc
ret
and
orl
or
outsb
dec
lret
xchg
mov
inc
or
insl
jns
jmp
pop
xchg
sub
xchg
add
xchg
sbb
lahf
cmpsl
mov
adc
test
dec
and
cwtl
inc
add
les
arpl
flds
mov
ljmp
cld
mov
daa
int
addl
inc
push
cld
mov
sub
fldcw
mov
popf
mov
ret
xor
pop
or
sub
xchg
jns
pop
in
mov
jo
jnp
lods
mov
sti
pmaxsw
daa
xchg
mov
jno
mul
adc
mov
stc
xchg
add
sbb
jno
fsubs
mov
jge
inc
out
inc
jecxz
lret
and
int
dec
enter
icebp
xor
mov
lcall
pop
and
in
sub
mov
sub
js
loope
pop
cmp
shll
xchg
and
std
test
push
iret
lods
bound
daa
adc
xorl
adc
and
mov
idivl
push
repnz
adcl
inc
mov
add
lahf
cli
dec
inc
frstor
or
daa
adc
dec
jb
xor
jle
test
inc
cmp
inc
dec
jmp
ffree
aaa
dec
ljmp
jns
aad
test
test
jae
xor
xchg
pop
pop
add
or
mov
std
loope
scas
mov
aam
fsubs
in
dec
xchg
sbb
jne
inc
repz
daa
mov
jnp
pop
pushf
jnp
inc
xchg
mov
insl
and
idivb
mov
mov
loope
jnp
test
mov
dec
fwait
ret
les
js
pop
imul
xchg
imul
loope
pushf
jae
and
arpl
sub
mov
test
in
ret
cwtl
test
test
xchg
arpl
push
sub
lcall
lods
movsl
cmp
mov
shrb
adc
mov
jmp
and
xchg
cmp
movsb
lods
and
enter
dec
push
mov
xor
inc
push
inc
jns,pt
adc
aas
les
ret
cmp
shl
mov
pop
nop
mov
cmpsl
call
repz
jecxz
dec
or
xor
pop
cmpsb
mov
cmp
mov
dec
mov
bound
add
loopne
subl
inc
fwait
mov
lcall
jb
dec
les
xor
and
xorb
icebp
xchg
popa
mov
fwait
mov
fldl
ror
or
repz
inc
jge
pop
mov
mov
sub
lcall
lods
add
pop
mov
add
lahf
and
std
dec
sahf
cmpsl
xchg
dec
inc
inc
xchg
insl
roll
xchg
int
es
aad
sub
adc
xor
ljmp
dec
inc
jmp
ja
loopne
mov
push
mov
leave
es
sbb
sub
jge
and
mov
add
sub
xchg
xchg
sbb
mov
stos
push
rcl
jmp
adc
addb
pop
jnp
xchg
inc
ljmp
fcmove
xchg
dec
clc
cld
imul
shl
shlb
push
aam
insb
xor
lods
cwtl
jae
popf
outsl
jecxz
cli
mov
adc
push
adc
push
mov
add
stos
fldenv
cmp
mov
jo
incl
lret
mov
mov
xchg
dec
movsb
mov
sti
xchg
stos
popf
jns
and
scas
std
sub
stos
pop
add
in
jnp
push
cmc
insl
mov
adc
add
rcll
dec
sti
int3
adc
sub
pop
orl
in
or
sahf
adc
xchg
lods
add
call
jb
stos
ja
int
out
dec
popa
mov
movsb
add
mov
mov
inc
push
ret
adc
xchg
mov
ret
add
sarl
mov
imul
test
call
pop
sahf
dec
xchg
xchg
add
jecxz
jecxz
outsb
mov
cmp
sarl
fisttpl
cmp
cmpsb
and
sti
add
push
arpl
and
mov
arpl
pop
pop
mov
dec
adcl
jns
xor
add
push
pop
adc
scas
idivb
adc
lahf
xchg
icebp
rorb
or
lods
popa
arpl
sti
inc
add
dec
push
dec
pop
sbb
cmpsl
cmp
add
cmp
in
dec
adc
shlb
mov
pop
xchg
jb
lods
or
hlt
mov
mov
ja
sub
andb
pusha
cmp
lods
mov
push
ret
lret
in
sub
or
cmp
pop
arpl
xchg
inc
in
inc
dec
je
or
mov
div
mov
mov
cmp
rolb
mov
xor
je
movsl
bound
les
inc
mov
andl
and
xchg
cmp
xor
lea
mov
subl
scas
and
mov
mov
mov
andb
push
inc
mov
andl
mov
mov
inc
sub
gs
xor
xor
xor
mov
mov
mov
pop
mov
movsl
out
add
xchg
scas
outsl
jmp
fsub
dec
jl
sub
scas
stc
sbb
sbb
and
pop
cli
loope
ds
lds
in
mov
repz
ds
roll
cs
xchg
ds
and
dec
mov
rcrb
mov
std
lods
das
mov
ret
sub
popa
adc
and
inc
subl
fstpl
mov
and
leave
mov
jns
push
sub
inc
das
addr16
scas
std
insl
sahf
mov
or
daa
int
mov
or
popa
faddl
aaa
aam
test
pop
mov
add
add
jns
jbe
nop
inc
push
cwtl
cmpsl
jne
popa
mov
pop
stos
or
jno
sahf
sub
daa
arpl
sub
xchg
imul
adc
repz
loopne
push
or
int
mov
sti
jmp
bound
daa
jbe
mov
mov
leave
cmp
jle
loop
lcall
inc
and
inc
sub
mov
lock
mov
test
inc
or
hlt
cmp
push
xor
jnp
mov
adc
jmp
stos
imul
mov
ret
and
xchg
movsb
mov
daa
mov
clc
mov
sub
shrl
scas
pushf
in
sub
aas
lahf
mov
lret
mov
push
mov
iret
icebp
sub
mov
daa
insl
subl
xchg
xor
daa
mov
and
fcoml
adc
dec
ret
add
outsb
std
test
stos
jge
insl
mov
into
xor
mov
and
sub
and
fcmovb
mov
dec
push
pop
inc
loope
rcr
in
out
or
and
lods
lds
lea
mov
ret
sub
mov
imul
rcr
ret
imul
dec
mov
sub
pop
lea
xor
mov
imul
loopne
mov
jb
shll
or
sti
pop
push
push
and
xchg
inc
mov
push
push
pop
mov
adc
out
dec
mov
cli
outsl
push
test
test
adc
jns
and
cmp
xor
jecxz
inc
jb
and
or
out
lret
ret
add
xchg
ja
repz
mov
arpl
sti
test
pop
mov
push
fistpl
xorb
cli
in
test
mov
insb
andl
test
popa
push
jb
fnstcw
imul
ja
add
jns
add
dec
ja
cld
repz
std
mov
jae
xchg
out
inc
adc
lahf
insl
out
cltd
ret
and
out
inc
mov
or
mov
inc
lods
sbb
lahf
dec
sarb
addr16
and
aam
lahf
dec
and
add
cli
push
enter
stos
int
rolb
addl
dec
jae
mov
mov
sarl
push
pop
or
mov
test
and
inc
inc
mov
and
stos
xor
xchg
or
push
mov
mov
repnz
leave
out
pop
aad
insl
leave
addr16
jge
mov
xor
stos
xchg
mov
repz
rolb
enter
mov
outsb
movsl
xor
jecxz
xlat
mov
repz
dec
xchg
dec
loop
jcxz
fs
loope
pop
inc
nop
popa
andl
mov
shll
push
jecxz
jae
mov
bound
add
mov
shll
daa
fldl
push
lds
pop
jmp
xor
sub
addr16
aad
push
xor
pop
bound
jmp
mov
ret
clc
xorl
mov
or
dec
mov
and
daa
and
popa
mov
cmpsl
or
push
icebp
lret
xchg
mov
mov
xor
sub
mov
xchg
dec
and
scas
or
rcl
cmpsl
mov
xchg
and
mov
enter
pop
aaa
dec
jb
das
mov
inc
cmp
lds
lret
mov
sbb
mov
pop
push
xor
mov
mov
push
decl
sbb
push
mov
fsubl
mov
jl
fwait
pop
out
nop
xor
sarl
int
rcrl
ja
sbb
pop
lahf
xchg
jo
xchg
push
mov
push
into
mov
pop
es
mov
gs
popa
ret
sub
mov
inc
or
leave
lock
loop
sub
xchg
clc
and
stc
or
pop
out
sub
loopne
stc
daa
ret
inc
fs
loopne
stos
mov
daa
ret
or
and
mov
dec
stos
add
cmpsb
je
dec
xchg
ljmp
lcall
sbb
insl
mov
addl
jo
push
sub
mov
and
fwait
sahf
mov
and
in
test
dec
mov
push
in
jo
cmp
jge
lcall
into
js
xchg
push
sub
es
xchg
test
jecxz
mov
mov
push
and
loope
cmp
or
cmpsb
repz
or
mov
mov
movsl
or
pop
mov
aaa
mov
fsubr
and
cmpsl
inc
fistl
or
sti
int
sub
sti
outsl
or
popa
or
jne
jae
mov
push
pop
mov
mov
xor
adc
sub
and
mov
or
loopne
movsb
call
pop
cmpsl
push
lods
xchg
pop
das
sub
sbb
test
call
clc
and
loop
js
dec
in
adc
sub
ret
adc
fsubl
xchg
roll
jmp
jle
xchg
pop
or
pusha
inc
popa
in
add
jns
loope
jb
std
and
inc
cmpsb
lods
jmp
pop
jno
inc
ret
dec
push
dec
mov
xor
loop
cmpsb
lods
lret
pop
arpl
aam
cmc
in
sub
sub
in
pop
lret
movsb
es
push
pop
movnti
inc
xchg
sbb
test
popf
loope
xchg
loope
call
dec
dec
cmp
jbe
cld
leave
adc
insl
cmpsl
ffree
test
adc
push
mov
lods
or
inc
mov
or
cmp
out
fisttpll
and
ret
lret
mov
cld
or
push
pop
fsubrs
jl
pop
add
daa
imul
push
push
adc
push
xchg
add
addr16
aad
or
ljmp
and
and
inc
lea
sub
dec
inc
out
jno
fadds
inc
sbb
movsb
push
and
loope
sub
daa
call
and
pop
mov
xor
std
mov
mov
cwtl
mov
jge,pt
daa
cld
xchg
loop
cmp
sub
call
xor
addr16
movsb
xchg
lret
mov
inc
dec
scas
mov
xchg
ret
pusha
in
cmp
movsb
jp
iret
adc
pop
or
fidivl
mov
in
mov
mov
pop
in
fisttpl
pop
cmc
add
rcrl
adc
inc
push
mov
xchg
je
inc
cmpsl
dec
push
jb
adc
jg
cmpsl
enter
fwait
test
stos
enter
shrl
pop
inc
int
popa
or
mov
arpl
jg
xchg
adc
xor
mov
pop
xchg
mov
mov
jge
lret
sbb
mov
scas
cmp
and
and
jecxz
xor
jecxz
pop
mov
lods
int3
loop
ret
pop
mov
cwtl
mov
mov
shrb
mov
add
lahf
jecxz
mov
mov
hlt
int
mov
mov
in
sbb
sbb
sub
loope
in
shrb
jecxz
les
stos
andl
xor
lea
adc
popa
arpl
mov
inc
mov
ss
ret
mul
into
fstpl
outsl
push
hlt
pop
or
xchg
lahf
shl
mov
movsb
das
loopne
arpl
movsb
mov
lahf
loope
inc
cmp
movsl
xor
xorl
mov
lahf
movsb
add
cwtl
sub
mov
lea
in
mov
and
fwait
loopne
aas
mov
lahf
cmc
loopw
cmp
xchg
into
xor
je
cmp
mov
icebp
jns,pt
adc
xchg
pop
out
jmp
roll
lahf
push
cmp
inc
shlb
fcomi
xor
mov
jnp
inc
mov
nop
shrb
scas
subl
addr16
adc
and
cmpsb
mov
sub
fildll
pop
fwait
lret
insl
or
aas
add
jns
xor
testb
sub
adcl
fildl
mov
and
cmpsb
imul
pop
incl
movsb
jg
das
fildll
mov
lods
pop
mov
sbb
adc
fwait
pop
xchg
pop
insb
mov
sbb
lahf
jbe
cmc
mov
lea
mov
add
shrb
es
aas
mov
xor
mov
sbb
push
xchg
sbb
lahf
and
lcall
inc
jmp
pop
in
cmp
jle
jl
cmp
jnp
push
stos
fadd
daa
inc
jp
in
rol
mov
pop
movsl
fistps
push
push
mov
xchg
rclb
stos
add
loop
iret
push
in
gs
test
inc
in
inc
xchg
cmpsl
bound
daa
mov
or
cmp
adc
dec
cmp
out
xchg
push
inc
mov
xor
and
in
xor
mov
stos
jne
push
leave
jecxz
es
adc
mov
pop
xchg
sub
inc
sub
movsl
lds
or
cmpsb
mov
jmp
mov
mov
pop
add
add
jne
add
sbb
ret
sub
mov
xchg
jg
mov
cmp
aaa
aas
inc
and
xchg
lcall
subb
sub
loop
stos
xchg
lds
ret
imul
mov
cmpsl
sti
mov
mov
cmp
mov
pop
sbb
sub
xor
orl
sub
add
mov
test
mov
loop
sbb
movsb
lea
mov
sub
sub
cmpsl
pop
test
gs
jno
mov
pop
pop
add
leave
jge
ljmp
mov
stos
jns
sub
movl
jge
ret
cmpb
sbb
add
dec
movsl
fiaddl
pavgb
jl
call
sub
xchg
bound
test
cmp
es
xchg
push
push
fsubl
jne
rorl
lock
xchg
mov
mov
jl
leave
lret
mov
mov
add
mov
nop
popa
add
pop
test
mov
or
out
cmp
pop
push
inc
inc
sub
icebp
arpl
xor
cmpsb
lods
test
add
pop
cmp
cmpsb
movsb
mov
or
xchg
jno
or
dec
fstpt
pop
scas
and
add
scas
inc
jno
stos
mov
aaa
icebp
loop
inc
in
push
jecxz
add
and
popa
je
jmp
push
pusha
test
mov
shlb
and
shll
cmp
jmp
and
push
lcall
iret
dec
xchg
xor
jnp
imul
sub
and
mov
mov
push
fcmovne
xchg
cmp
int3
mov
cmp
data16
sub
sub
ds
push
mov
mov
sbb
mov
jl
sahf
mov
andl
mov
insb
stos
jne
jmp
sbb
mov
and
fbld
xor
push
imul
mov
fs
mov
add
lcall
mov
mov
xchg
jne
and
nop
or
enter
les
dec
insl
movntq
dec
and
mov
jmp
push
jnp
or
jne
into
jg
dec
mov
cwtl
or
out
push
and
add
sbb
and
mov
mov
pop
adc
jo
fwait
cmp
andb
lods
gs
or
test
mov
out
mov
push
xlat
pusha
sub
lcall
cmp
mov
scas
dec
pop
lods
fdivs
insb
lret
or
mov
andb
inc
xor
aam
ss
shll
mov
mov
mov
adc
inc
jp
popf
enter
leave
mov
dec
and
sti
aas
adc
adc
sub
mov
sub
and
jae
mov
xor
mov
sub
in
lods
push
cmc
jno
mov
addr16
rorl
cltd
sbb
stc
mov
cmp
notb
jb
or
xlat
push
xchg
xor
xchg
popf
or
je
movsb
lods
movsl
in
inc
out
jbe
idivl
mov
pop
jns
pop
mov
rcrb
mov
xchg
imul
fwait
leave
and
cwtl
push
loop
pop
arpl
sub
mov
xchg
lods
test
or
inc
add
sbbb
inc
mov
stos
push
push
leave
lcall
out
mov
ret
in
sub
stos
div
mov
dec
sub
leave
das
add
test
mov
roll
jp
mov
sub
dec
imul
fadds
jmp
enter
mov
adc
shr
outsb
popa
mov
lret
addb
popa
jg
leave
sbb
mov
cs
sub
test
dec
out
jne
repnz
push
sbb
or
mov
pop
dec
add
pop
popf
jnp
and
mov
sub
mov
push
xlat
popa
inc
push
insb
cmpsl
adc
movl
cmp
lcall
jbe
sbb
inc
stos
push
cwtl
mov
test
stos
add
add
pop
sub
sbb
mov
popa
or
fucomi
notl
bound
add
mov
add
adc
push
and
mov
jae
loopne
add
sub
mov
sub
jb
repnz
mov
jb
mov
lahf
mov
sbb
inc
jmp
rolb
scas
add
lods
pop
adc
inc
adc
mov
ss
outsb
jnp
adcb
and
jecxz
clc
push
out
orl
cmc
sbb
jb
xchg
nop
loop
insb
add
mov
inc
int3
mov
call
mov
hlt
ss
add
add
daa
add
loope
outsb
inc
mov
ljmp
mov
jecxz
jno
movsb
bound
mov
push
adc
add
mov
mov
ret
addr16
and
test
stos
test
or
cmpsl
inc
sub
dec
mov
dec
sub
pop
mov
cmpb
cmc
test
rol
loop
punpckldq
or
xor
xor
cmp
jne
inc
inc
mov
mov
mov
xor
mov
mov
mov
add
pop
add
push
sbb
cs
mov
adc
fdivl
pop
pop
add
ret
test
sbb
xchg
jo
cmpsl
cmc
lcall
cld
jecxz
mov
add
cwtl
mov
mov
and
arpl
inc
mov
ljmp
shll
leave
das
daa
dec
inc
mov
dec
stc
push
push
imul
jg
or
ds
bound
adc
push
push
pop
popa
or
ja
dec
out
mov
adc
mov
subl
jl
cmp
in
out
fsubs
arpl
ss
pop
fsubrl
iret
sub
clc
rorl
loope
and
mov
lods
out
pop
push
ja
fstl
jns
scas
mov
repnz
pop
or
adc
add
and
fldt
mov
inc
and
push
fdivrl
dec
loope
push
cltd
push
dec
and
ds
and
inc
out
js
or
es
fcmovu
pop
pop
mov
test
cmp
stos
movsl
in
into
out
fwait
xchg
jp
mov
fwait
mov
int3
inc
jecxz
push
and
lods
xchg
and
test
jp
jmp
fdivl
jmp
daa
or
jns
inc
int3
push
mov
inc
gs
test
mov
mov
pop
mov
jp
lahf
jnp
pop
out
lahf
test
bound
scas
lret
enter
mov
mov
adc
mov
push
or
lret
out
lds
push
or
decl
mov
mov
mov
das
js
bound
pop
push
lret
xor
xor
lret
fwait
scas
sbbl
in
imul
ret
icebp
nop
pusha
mov
dec
inc
inc
cld
out
xchg
push
push
sub
comiss
inc
jnp
jnp
pop
jp
inc
dec
loop
jbe
or
cmp
push
or
xchg
inc
add
dec
insl
pop
enter
ficoml
pop
cmp
dec
rorl
das
imul
and
std
xor
in
inc
mov
int
pop
aad
mov
inc
xchg
push
mov
addl
xor
push
orl
loopne
cmp
rcll
das
and
push
in
ljmp
sub
sub
das
or
and
add
cmp
mov
fdiv
call
gs
jnp
jge
out
nop
sub
cmp
aad
cli
shll
cmp
sub
pop
mov
or
xchg
sub
adcb
loope
mov
dec
repnz
mov
add
mov
rol
in
scas
cmp
repz
mov
mov
xchg
cmpsb
pop
mov
daa
out
inc
mov
bound
adcl
xchg
out
push
xchg
push
xorl
ret
inc
imul
and
add
rcrl
icebp
push
mov
shll
in
inc
xor
add
clc
jae
pop
lds
movsb
pop
enter
test
push
xchg
or
and
pop
lds
movsw
jmp
add
lods
pop
adc
mov
pop
mov
xorl
mov
lahf
aas
push
inc
imul
ret
daa
fsubl
dec
jmp
popf
pop
mov
xor
mov
pop
add
imul
les
out
dec
add
imul
mov
outsl
sub
movsl
imull
and
xor
adc
enter
sub
mov
jmp
xchg
loop
cltd
or
call
shrl
sub
push
mov
addr16
mov
xchg
xchg
mov
cmpsb
cmp
add
fsetpm(287
ljmp
daa
pushl
dec
jmp
arpl
mov
rolb
dec
mov
ja
ret
insl
shll
int3
and
xchg
jle
xchg
inc
popa
int3
push
jns
inc
lret
and
daa
in
outsl
pop
ret
bswap
cmpl
and
test
stos
inc
fwait
mov
movsl
mov
mov
inc
arpl
and
bound
testl
sub
push
and
rcrb
bound
mov
pop
aaa
jnp
mov
push
gs
loopne
inc
jae
loop
fidivl
test
shlb
mov
adc
movsl
aas
repnz
addl
subb
hlt
movsb
jae
and
lahf
aaa
arpl
mov
xor
or
andb
js
in
adc
lods
faddl
in
fs
shrl
jae
xchg
lds
mov
or
movsl
cld
gs
cmp
sub
xchg
in
out
xor
push
enter
cmp
dec
push
push
int3
inc
andl
loopne
or
mov
sub
lea
mov
mov
test
lods
push
iret
or
ret
dec
xchg
add
test
lods
lahf
fdiv
inc
push
cmp
and
mov
mov
addl
xchg
js
and
inc
xchg
inc
push
push
inc
lahf
test
dec
mov
fsubs
jae
arpl
xchg
js
nop
sbb
pop
jno
mov
cmpsl
jns
xlat
cmpsb
add
xchg
loop
repnz
mov
xor
push
imul
cwtl
in
mov
imul
mov
xchg
aas
cli
cmpsl
je
dec
mov
mov
nop
xor
jo
mov
xchg
repnz
and
xchg
lods
fiaddl
lahf
xor
popa
cmp
and
testb
mov
mov
lods
outsb
mov
cmp
aaa
ret
sub
cmp
add
push
cmpsl
gs
lods
mov
inc
mov
jb
add
pusha
and
xchg
xor
add
test
lods
push
sahf
add
sub
test
mov
add
mov
xchg
dec
and
jbe
mov
mov
out
gs
hlt
pop
ljmp
movsb
mov
adc
popa
xchg
sbb
or
enter
repz
jmp
outsl
mull
movsb
or
mov
xor
sub
es
imul
mov
fs
xor
addr16
mov
jb
outsb
jp
pop
daa
mov
jle
aas
repz
or
add
xchg
or
das
push
out
je
mov
mov
jl
adc
mov
xor
stos
push
xchg
or
fdivl
or
mov
push
movsb
and
hlt
lea
stos
sbb
mov
outsb
mov
push
push
pushf
push
cmpsl
aad
jb
xchg
mov
addl
dec
jo
jp
xor
jl
sub
popf
push
or
ret
mov
aas
jmp
pop
stos
cmpsl
daa
adc
pop
inc
xchg
and
bound
cmp
inc
cmpsl
sbb
jo
negl
pop
icebp
inc
push
and
jle
inc
inc
ja
pop
in
bound
sub
pop
jmp
mov
mov
arpl
lods
xchg
cmp
and
mov
push
jne
je
pop
das
dec
adc
pop
and
movsl
xchg
xor
les
dec
int3
jb
dec
push
mov
dec
lahf
sub
shrl
mov
popf
cmpsb
sub
bound
sub
mov
pop
dec
inc
scas
jns
incl
push
test
repz
xchg
jg
arpl
aam
dec
inc
mov
pop
and
dec
imul
mov
add
jns
sub
mov
loop
jnp
mov
mov
lds
jmp
popa
sbb
cmpsl
aam
test
fadd
shlb
test
test
mov
icebp
mov
jnp
iret
loope
jp
jns
mov
dec
push
add
mov
adc
jne
and
aaa
aam
mov
fwait
mov
mov
imul
sahf
test
stc
pop
dec
out
sub
lret
loopne
mov
outsl
stc
aad
and
sbbl
and
sub
mov
inc
cmpsb
xchg
xchg
mov
outsb
scas
mov
and
das
imul
mov
pop
mov
jo
sub
aaa
sub
sub
mov
cld
xchg
adc
inc
push
popa
mov
shll
das
popa
out
leave
aam
sub
fdivs
es
push
cmpl
mov
cmpsb
lods
hlt
mov
or
movsb
stos
mov
mov
lahf
and
loope
xchg
test
test
scas
mov
call
mov
sub
roll
int
stos
xlat
xor
popf
daa
sbb
out
arpl
int
jns
lods
and
lea
frstor
mov
test
or
lret
sub
mov
adc
pusha
cmp
cmp
popa
sti
xchg
shrl
push
xorb
lret
mov
cmp
mov
cmp
push
lcall
aad
mov
popa
xor
filds
inc
inc
dec
in
mov
loop,pn
cmp
cli
mov
mov
jae
dec
sub
sbb
leave
cmpsl
push
arpl
loope
scas
mov
cmp
mov
sub
and
aad
mov
xor
popa
mov
mov
imul
out
jecxz
lahf
fbstp
push
adc
lods
mov
xchg
cmpsl
cmpl
and
xchg
leave
adcl
out
dec
add
imul
add
xchg
ja
andl
das
jno
repnz
adc
gs
push
mov
sub
orb
mov
out
mov
pop
ret
cld
mov
mov
sbb
punpcklwd
xor
pop
fs
xchg
push
add
sub
and
jmp
outsl
aam
pop
les
sti
mov
frstor
ja
xor
inc
push
sahf
sub
scas
neg
xor
ja
pusha
movsb
mov
out
repz
lds
fsubrl
mov
and
divl
lods
or
pusha
pop
and
aaa
push
xor
sti
popa
arpl
insl
int3
pusha
mov
ret
mov
jecxz
mov
enter
xchg
and
scas
jl
mov
mov
les
xor
mov
sub
pop
das
add
mov
sti
inc
fildl
add
repz
mov
jmp
or
loope
sub
sti
int3
addb
stos
nop
test
or
mov
int3
enter
lods
or
aas
mov
mov
mov
xchg
cmp
sub
xchg
add
inc
imul
das
and
and
popa
xchg
addr16
sbb
int3
scas
fwait
jbe
aaa
push
popf
push
cmp
cmpl
dec
mov
aam
dec
mov
cltd
cmc
data16
jle
stos
push
adc
sub
jmp
rcr
add
and
dec
imul
and
imul
cmp
mov
mov
add
dec
cmp
lahf
sub
mov
andl
or
dec
ret
pop
and
arpl
rorb
out
ret
sub
sbb
mov
and
loope
in
inc
push
or
imul
push
push
mov
add
and
adc
data16
testb
or
push
daa
daa
pop
xchg
rorl
xor
sub
movl
subb
pusha
bound
push
add
pop
xor
stos
and
cmc
sbb
xchg
inc
div
xor
stos
shlb
jmp
aad
add
inc
dec
xchg
insb
xchg
adc
pop
mov
mov
sub
jnp
cmp
jl
and
mov
lea
and
mov
push
outsb
mov
addr16
nop
orl
rcll
leave
xchg
test
xchg
jne
icebp
or
out
xchg
adc
and
jb
sarb
out
ds
loope
or
scas
and
sub
cmp
xchg
or
push
mov
xor
imul
cmc
lret
pop
test
pusha
js
insb
cmp
mov
adc
mov
jmp
xchg
mov
cmpsl
mov
cmpsl
xchg
cmpsl
cli
cmc
add
dec
push
inc
xor
inc
adcl
add
lahf
sub
imul
add
inc
lcall
jge
dec
into
mov
cwtl
aas
jne
mov
cld
and
test
and
outsl
inc
sbb
daa
mov
pop
xor
stc
popf
and
daa
and
add
loop
loop
mov
mov
sub
es
push
cmp
cmpsl
push
or
flds
pop
fnstsw
jns
lods
cmpsb
adc
popa
daa
scas
xor
jp
lahf
xchg
in
adc
add
dec
gs
mov
xchg
mov
mov
or
pop
nop
imul
lods
bound
test
arpl
and
xchg
inc
stos
xchg
loope
inc
cltd
bound
aaa
and
lret
xor
fildl
inc
jns
sub
jnp
fstpl
or
andb
xor
push
mov
mov
xor
ret
daa
mov
loopne
cmp
dec
pusha
imul
push
gs
pop
divl
pop
loope
mov
inc
jnp
dec
jne
and
arpl
jne
xchg
cld
daa
aad
adc
add
mov
ja
fimull
xchg
push
ret
mov
xchg
mov
sub
pop
push
mov
xchg
movsl
scas
mov
and
or
mov
mov
cmpb
adc
aaa
mov
in
in
shlb
mov
or
mov
lods
sbb
repnz
pop
mov
out
inc
fwait
movsb
mov
test
stos
adc
out
pop
mov
movsb
std
pusha
xchg
sub
test
int
movsl
addr16
cmpsb
repnz
lahf
xchg
mov
shrb
mov
push
daa
rclb
or
add
sub
leave
stos
pop
shlb
movsl
pop
data16
in
pop
stos
mov
push
inc
sar
dec
in
mov
mov
xchg
fidivl
mov
dec
loop
andb
mov
outsl
dec
inc
jmp
enter
out
imul
mov
lods
in
je
testb
sub
jnp
cmp
mov
add
mov
stos
rcr
aam
hlt
lcall
test
inc
xchg
fsubs
add
add
fcoms
mov
cmp
xchg
adc
shrb
sbb
int3
jno
sbb
inc
push
jmp
test
bound
cmpsb
mov
pop
pop
mov
push
mov
aam
es
loopne
test
popa
es
and
and
jmp
push
jg
fdivs
pushf
cmp
push
sub
mov
mov
and
ret
pop
out
mov
movsb
jl
cld
cmp
adc
andb
mov
shll
mov
cmpsb
add
inc
addl
xchg
bound
inc
bound
jns
jecxz
out
sub
std
lods
jno
mov
push
sbb
shl
loopne
add
inc
mov
int3
movsl
add
xorb
inc
xchg
movsl
rclb
pop
mov
dec
dec
pop
add
addl
add
add
loope
inc
push
fdivrl
sbb
test
and
and
mov
mov
data16
shl
push
inc
movsb
fwait
mov
je
xchg
mov
rolb
jmp
andb
xchg
scas
and
sub
insb
cmp
inc
jnp
movsl
adc
daa
aam
or
jbe
lods
scas
iret
mov
mov
inc
scas
push
adc
push
imul
push
subl
std
xchg
add
sbb
addb
add
dec
mov
xlat
cmp
jno
lret
aas
mov
lahf
cmpsb
aam
mov
and
adc
pop
lret
mov
and
movsb
and
inc
adc
xor
arpl
cmpb
scas
and
pop
test
mov
lahf
mov
pop
lahf
jb
or
cmp
stc
ja
inc
or
gs
out
adc
pop
mov
dec
lret
jo
sub
cmp
pop
std
in
add
movsb
or
pop
ljmp
shrb
in
jo
push
das
cmpsl
cmp
inc
xchg
ret
subb
adc
cmp
xchg
lods
xchg
cmc
xor
mov
nop
add
int
bound
cmpsb
addl
mov
pushf
fstpl
sub
inc
cmpsl
inc
mov
subl
and
pop
mov
inc
mov
lahf
stos
int3
and
push
popa
push
loope
mov
xlat
xor
push
test
xorw
ficoms
movsl
popf
jmp
sub
popa
add
cmc
shlb
push
pop
sub
cmp
shll
dec
fs
movb
dec
imul
outsl
dec
in
sub
mov
inc
and
dec
ds
aas
lods
mov
inc
lds
popf
jl
xor
jne
add
movb
fwait
pusha
in
inc
push
outsb
dec
cld
filds
mov
push
xchg
dec
dec
mov
test
pop
inc
sub
and
pop
andl
cmp
mov
movsb
inc
lahf
outsl
call
scas
mov
jns
mov
cmp
xchg
es
push
sbb
jb
add
mov
add
fs
pop
mov
push
adc
cmp
out
pushf
sub
xchg
fs
lahf
adc
out
xor
into
push
add
and
dec
scas
shll
pop
cmpsl
out
sub
aad
adc
out
xorl
sub
imul
scas
movsb
inc
and
and
pop
test
movsb
loope
or
adc
sub
mov
popf
loope
mov
fwait
or
lret
sub
sub
inc
mov
jne
sub
xor
inc
scas
push
adc
test
mov
pop
or
mov
or
repz
pop
add
test
add
mov
rcll
mov
mov
fwait
mov
cmp
shrb
into
add
inc
push
jmp
push
push
xor
cwtl
adc
push
addr16
shlb
mov
jae
dec
xor
movsb
aad
inc
xchg
xchg
ss
push
repnz
cld
ret
mov
test
sbbb
or
or
aas
mov
mov
outsb
test
xchg
aad
push
inc
dec
jne
mov
mov
iret
cwtl
jmp
sub
dec
jns
push
scas
cmpsl
sbb
xchg
add
and
push
sarb
sbb
push
loope
call
dec
jmp
mov
mov
or
pop
add
pop
adc
adc
popf
and
ljmp
inc
cmp
ret
inc
xchg
lahf
xchg
shlb
add
xorb
jnp
aaa
hlt
push
cmp
inc
xor
mov
pop
push
clc
push
push
pop
inc
or
cmp
aas
cmp
or
xor
jns
mov
or
subb
or
fsubl
pusha
mov
dec
sbb
andl
mov
inc
repz
daa
mov
jae
mov
je
repz
add
and
lahf
fnstcw
das
adc
jo
mov
stos
sub
xchg
hlt
mov
sub
cmp
les
mov
shlb
cwtl
rolb
shlb
mov
sub
lahf
and
sbb
push
mov
sub
inc
pop
jno
xchg
push
das
aas
mov
andb
imul
aas
pop
rolb
clc
outsl
test
inc
mov
xchg
inc
xor
push
lahf
dec
mov
enter
loope
mov
sbbl
xchg
fidivrl
xchg
std
dec
movl
mov
push
sub
ret
xchg
xchg
imul
and
sbb
scas
mov
sub
xor
stos
shr
cmp
into
and
push
pop
popa
mov
cmpl
std
and
adc
xchg
out
ss
mov
aam
arpl
inc
test
shll
pop
cmpl
popa
mov
jo
dec
xchg
arpl
xchg
mov
addr16
jmp
std
sbb
lods
sub
mov
insl
adcl
mov
stos
ljmp
cli
jecxz
mov
push
mov
xchg
mov
mov
test
add
subb
xchg
scas
mov
mov
add
xchg
std
sub
add
add
adc
sub
or
cmpsb
nop
scas
jns
pop
mov
pop
cmpsl
mov
adcl
pushf
lcall
mov
in
xchg
mov
pop
cmp
push
popw
cmpsl
xchg
xor
or
mov
ret
popa
popf
push
out
mov
imul
addr16
dec
mov
ja
arpl
add
xchg
sub
inc
popa
leave
ss
mov
mov
mov
lods
test
movsb
or
push
mov
pop
in
and
xchg
popa
or
xchg
roll
mov
ret
mov
stos
mov
adcb
xchg
lock
in
pop
xchg
pop
fsubrl
xorb
imul
push
pop
push
fbld
sbb
idivl
mov
int
pop
add
pusha
inc
loope
fbld
gs
push
xchg
pop
gs
insl
ds
mov
popf
add
outsl
faddl
and
popa
jle
mov
sti
loop
sbb
xor
or
xchg
jnp
addr16
push
jg
dec
adcl
fdivs
fsubrl
jno
out
add
sti
ja
push
pop
xor
jmp
mov
cli
mov
push
pop
sub
outsl
rorb
popa
inc
xor
lds
mov
repz
data16
lahf
jl
xchg
dec
xchg
jge
sarb
sub
daa
popf
mov
mov
cmp
and
popa
sbb
mov
add
or
cmpsl
nop
push
inc
and
ret
das
rcrl
test
and
push
imul
test
sbb
inc
sti
aad
repz
mov
mov
dec
adc
enter
sub
mov
mov
push
cwtl
test
mov
inc
lret
andb
mov
ficompl
out
mov
add
adcb
shlb
sarl
mov
add
cmpb
and
addl
mov
push
or
int
mov
ret
sbb
out
sub
or
push
stos
pop
or
popf
pop
jl
dec
loope
std
jmp
in
mov
mov
movsl
xchg
mov
out
ret
push
sarl
jp
pop
sbb
out
mov
ljmp
pop
daa
push
mov
or
dec
pop
fiaddl
mov
scas
or
mov
inc
in
imul
inc
lret
xchg
cmp
inc
add
sub
out
ret
int
xor
leave
xor
aaa
and
mov
scas
mov
cltd
outsl
mov
cmp
xchg
jp
enter
movsb
sarl
adc
mov
sub
test
or
push
mov
or
leave
sbb
add
dec
mov
movsb
ret
fcoms
fcmovu
sbb
adc
cmpsl
pop
xor
cmp
or
mov
adc
cmpsb
test
int
loope
inc
sub
inc
or
mov
lods
mov
dec
or
pop
sbb
ret
mov
sub
cmpsl
shrb
mov
addb
jnp
loop
jnp
stos
sub
in
int
addb
push
fs
xchg
rolb
popa
pop
pop
jb
addb
es
xor
jns
inc
mov
add
loop
mov
dec
push
cmp
add
or
ds
imul
mov
mov
add
inc
mov
ret
mov
aaa
push
mov
insb
mov
cmpsl
ja
pusha
mov
repz
mov
xor
and
imul
mov
adc
jb
jecxz
mov
stc
mov
xchg
mov
bound
movsb
mov
leave
icebp
xorl
cs
out
test
cmpb
xor
test
stc
adc
cmpsl
gs
test
sub
adc
mov
inc
out
movhps
cmp
ret
xchg
arpl
or
xchg
mov
pop
pop
xor
gs
ret
addl
mov
pop
bound
sub
fs
ljmp
ja
cltd
add
lea
in
mov
test
push
popa
push
dec
mov
xabort
xor
lcall
jecxz
fimuls
xor
pusha
sub
loop
lahf
and
cmp
and
adc
jl,pt
gs
mov
lahf
decb
push
xchg
jnp
mov
dec
mov
xrelease
inc
jl
lds
ljmp
sti
ss
xor
or
mov
pop
push
jns
ret
mov
inc
dec
mov
pop
pusha
mov
scas
test
xchg
mov
mov
loope
es
add
pop
loope
js
and
xor
and
inc
scas
xor
ret
lahf
js
lods
mov
jmp
fnstenv
outsb
stos
test
ljmp
mov
xor
jo
mov
dec
scas
insl
gs
pop
das
mov
scas
inc
cli
add
test
xchg
xchg
rol
cmpsl
scas
test
push
movsl
mov
dec
and
icebp
jns
ficompl
addb
push
cmp
mov
cmpl
in
push
stos
loop
xchg
daa
push
xchg
mov
xor
imul
and
test
jb
ret
inc
sub
sbb
dec
mov
cmpsl
mov
add
fcoml
or
or
movsl
xchg
ret
pop
push
orl
or
and
scas
push
jmp
lahf
in
je
imul
or
insb
nop
push
icebp
push
xchg
js
and
pop
and
sub
xchg
mov
lea
adc
mov
js
push
notl
movsl
insl
dec
xchg
xor
movsl
mov
lahf
sub
lock
cs
flds
cli
or
mov
icebp
sub
or
ret
adc
mov
iret
pop
inc
in
jnp
dec
mul
mov
adc
arpl
or
enter
cwtl
jnp
arpl
leave
fsub
mov
cmp
push
mov
jns
jge
enter
push
out
pop
push
sbb
inc
adc
cmp
loope
xor
rol
xchg
stos
sub
les
pop
call
int
adc
add
and
nop
imul
lds
jle
fucomip
call
xor
mov
loop
and
ret
dec
pop
or
sub
aam
jecxz
cwtl
and
xchg
inc
jp
repz
bound
loop
stos
mov
fistpll
push
in
push
and
xchg
cmp
jmp
sbb
js
mov
add
cmpsl
push
mov
or
daa
sbb
mov
aas
aam
sbb
imul
cld
daa
mov
lods
mov
mov
mov
aaa
addr16
jecxz
cld
enter
mov
sahf
inc
pop
es
loopne
ret
sub
cwtl
jl
sbbl
mov
test
bound
mov
mov
insb
in
add
loopne
mov
andb
out
pop
mov
movsb
xchg
ret
mov
jge
adc
cmp
shll
or
and
loopnew
daa
pop
adc
imul
mov
or
mov
sahf
inc
dec
mov
jge
arpl
xor
or
dec
cld
push
pop
cmp
jo
mov
lods
mov
pop
mov
movsb
enter
mov
fsub
aam
push
lock
or
inc
xchg
stos
mov
inc
cmp
orl
andnps
insb
xchg
movsb
addl
es
mov
push
ficoml
jns
jns
shlb
int
daa
xchg
jp
mov
stc
scas
mov
daa
mov
ljmp
test
aam
push
cs
adc
mov
sub
roll
iret
cmp
in
jmp
sub
mov
lret
or
pusha
jo
inc
mov
leave
imul
mov
sbb
add
int3
jle
test
inc
mov
push
xchg
push
mov
das
mov
cld
fsts
mov
cmpsb
icebp
fcmovu
xchg
mov
push
mov
stos
stos
inc
mov
pop
in
sub
aam
call
mov
xchg
and
loope
pop
inc
icebp
inc
and
adc
fistps
push
sub
mov
pop
jecxz
lea
push
dec
jno
stos
xor
push
xchg
lods
jl
xor
lods
lods
es
lods
cmp
ljmp
and
cmp
adc
roll
das
cmp
jae
shld
jg
sub
int
jnp
inc
das
fs
jp
les
sbbb
mov
jmpw
pop
pop
loope
xchg
es
mov
out
gs
xchg
lds
lock
push
aad
sarb
out
mov
mov
int3
out
sbb
divl
or
jno
push
sbb
mov
xchg
sub
sbb
adc
icebp
cmc
mov
sub
test
xchg
mov
adc
loop
cmpsb
inc
and
adc
xchg
test
pop
cmp
sub
cmp
test
stos
mov
and
daa
or
lds
cmp
nop
enter
in
add
stos
mov
or
movsb
outsl
cmp
push
imul
imul
fadd
xchg
sub
sub
lret
and
xor
add
inc
rcr
jne
jp
rolb
dec
scas
in
or
mov
mov
dec
leave
sti
adc
mov
pop
orb
mov
outsl
ror
jb
and
xchg
dec
popa
jb
mov
jno
cmp
pop
xchg
bound
outsb
and
testb
fwait
push
xchg
imul
mov
lahf
adc
cmp
jl
inc
stc
bnd
adc
rcrb
decb
mov
jae
call
addr16
clc
jle
iret
cwtl
mov
shlb
sbb
loope
inc
or
imul
and
lods
popf
mov
mov
inc
fiaddl
lea
mov
dec
sub
push
xchg
sbb
mov
test
int
in
sub
sahf
mov
push
lahf
movsb
cmpsl
push
icebp
cmp
dec
outsl
adc
and
mov
sbb
add
ret
mov
insl
pop
dec
sbb
or
les
cld
adc
es
adc
or
sahf
inc
add
lcall
lods
cmpl
push
std
add
push
push
ljmp
jg
sbb
je
enter
sub
push
jl
int3
or
push
adc
ret
mov
jo
add
test
inc
push
cmp
fwait
int
jns
cltd
hlt
outsb
xchg
inc
inc
dec
test
xchg
inc
mov
andl
aaa
dec
mov
pop
fdivrs
das
and
lods
sti
add
xor
xchg
dec
and
popa
inc
pop
insl
or
mov
xchg
push
call
xor
jb
sti
add
jecxz
xchg
mov
jne
push
cmp
loop
lcall
mov
int
jnp
push
fisubl
data16
xor
jb
insl
test
stos
mov
outsb
mov
ja
mov
out
mov
pop
xchg
clc
into
mov
leave
leave
xchg
test
mov
sar
mov
cli
xchg
jge
popf
scas
int
mov
pop
gs
in
push
fwait
inc
cld
movsb
test
arpl
pop
test
mov
movsb
data16
mov
mov
inc
pop
jns
pop
xlat
sub
scas
data16
pop
int3
xor
inc
or
mov
daa
add
mov
pop
push
mov
sub
add
mov
mov
mov
sub
cmp
test
jo
pushf
lcall
mov
adc
aas
sbb
mov
out
loope
pop
popa
imul
call
mov
pop
inc
fwait
push
push
cmc
mov
mov
push
ret
test
fmull
pop
popa
sahf
jne
dec
ss
and
pop
lods
leave
arpl
mov
add
inc
loope
jecxz
pop
out
fs
mov
ret
sub
mov
and
cmp
mov
fwait
sub
xor
xlat
invd
inc
movsb
clc
push
and
movsl
rolb
inc
adc
in
in
or
mov
lods
les
addr16
or
dec
popf
push
call
stos
cld
in
aam
or
scas
pop
inc
sbb
scas
or
pop
mov
xchg
add
in
sub
ret
add
dec
outsb
cmc
gs
mov
aam
mov
mov
push
das
rcll
movsl
pop
test
mov
dec
push
shl
std
mov
bound
dec
push
and
pop
add
inc
cmpsb
iret
stos
dec
repz
mov
subl
push
jo
pop
and
push
cmpb
xlat
cmp
xor
add
sbb
push
mulb
lods
movsl
addr16
movsb
pop
jl
sub
pop
ret
std
inc
jae
cmp
rcll
jecxz
jb
jmp
and
dec
add
test
fs
dec
popa
add
cmp
jb
cmp
adc
iret
jmp
mov
popa
insl
or
stos
cmp
dec
out
fcoml
test
mov
jb
add
sub
adc
stos
les
add
mov
jmp
sub
push
es
mov
pop
or
add
add
adc
push
jnp
lods
out
mov
add
and
dec
ja
loop
xchg
xchg
sti
scas
jmp
jne
or
mov
in
mov
out
fs
xor
out
andl
and
and
inc
pop
push
and
push
pop
bound
rol
mov
ror
adc
ljmp
fisubs
movsb
xor
mov
mov
aas
std
lahf
and
sbb
daa
sub
or
sub
sub
push
xor
pop
and
arpl
xor
mov
movsb
ss
pop
out
test
jle
sarl
movsb
and
xchg
inc
sti
shll
mov
repz
inc
pushf
in
pop
sub
mov
inc
loope
or
sub
push
pusha
loop
test
or
push
subl
pop
pop
dec
or
fs
loope
and
mov
fcomi
bound
std
inc
ficoms
loope
jl
sub
inc
mov
mov
pop
xchg
icebp
aas
mov
mov
mov
push
or
pop
pop
sbb
push
subb
inc
daa
nop
and
jno
jl
std
cli
shl
xchg
mov
mov
faddl
mov
jo
sub
insl
faddl
test
jmp
lds
inc
mov
stos
jmp
push
inc
pop
add
call
xchg
in
sub
pop
or
arpl
inc
mov
movb
clc
inc
stos
inc
push
test
adc
mov
bound
xchg
stos
xorl
popa
push
ret
repnz
inc
rclb
icebp
and
data16
add
lods
imul
jg
and
loopne
enter
cmp
scas
lahf
mov
and
xor
pop
out
insl
mov
or
adcl
xchg
into
dec
and
testb
xchg
pop
xor
xchg
sbb
mov
cmpsb
cmpsl
and
outsb
add
jmp
or
fildll
xchg
mov
cmp
mov
dec
pop
inc
mov
fsubs
loop
inc
insl
stos
popa
dec
push
mov
sub
into
mov
bound
imul
mov
inc
and
xchg
lock
pop
xchg
popa
popa
aam
shll
fldl
sbb
sahf
dec
int
sahf
ficompl
adc
rorb
and
ret
subb
je
adc
aas
push
imul
movsl
mov
and
and
and
in
jecxz
xchg
mov
cmp
icebp
lcall
and
sbb
cmp
popa
mov
dec
jmp
outsl
int3
add
add
lret
add
movsl
mov
jecxz
inc
bound
sbb
jae
cmpb
mov
cmpsl
addr16
mov
movsl
mov
cli
pop
jle
cmp
inc
mov
test
jb
daa
lahf
pop
outsl
repnz
jo
add
loope
cld
addr16
cld
nop
ret
mov
jle
inc
jne
pop
call
pop
divl
aam
xchg
int
test
inc
and
mov
mov
mov
adc
mov
adc
mov
inc
mov
cwtl
push
repz
aad
mov
popa
lret
dec
xor
cmp
in
jl
insl
out
push
mov
pushf
xchg
lcall
jl
mov
ret
mov
popa
and
push
int
xchg
mov
faddp
inc
scas
fs
dec
in
push
popa
imul
enter
or
sub
paddusw
arpl
xor
jns
test
aas
dec
enter
or
popf
jno
mov
sub
pop
popa
or
jecxz
push
dec
or
add
lret
inc
mov
sub
outsl
call
scas
jmp
mov
test
push
rcll
inc
sub
xor
xor
lret
push
xor
sub
sub
inc
inc
outsb
cmpb
mov
adc
jmp
in
push
cli
clc
xchg
mov
and
and
popf
divb
inc
mov
cwtl
into
ja
push
pop
aas
push
inc
daa
outsb
daa
mov
loope
mov
push
sbb
sub
mov
mov
mov
mov
pop
ljmp
dec
hlt
xor
in
adc
jmp
rclb
fmul
dec
xchg
addb
stc
pop
aas
ror
fcoms
jae
lret
shl
popa
inc
aam
or
aaa
mov
sub
dec
orl
ret
and
push
push
outsl
cs
xlat
push
and
loopne
or
mov
dec
std
inc
sub
and
iret
bound
arpl
and
pop
and
adc
rorb
mov
adc
test
stos
push
dec
gs
test
stos
cmc
fucomi
int3
subb
push
and
push
xorb
sub
jmp
dec
shrb
sbb
and
add
cmpsl
sub
ja
jmp
arpl
ret
shlb
fists
frstor
push
jmp
xchg
inc
or
sub
pop
adc
inc
xchg
lock
dec
fistps
aam
inc
test
jmp
rcr
aas
push
scas
add
mov
ds
sbb
les
gs
xchg
mov
mov
mov
sbb
mull
add
mov
out
mov
call
into
nop
popa
or
es
mov
ret
xchg
lods
xchg
pop
dec
repz
sub
mov
inc
ja
xchg
mov
pop
add
jmp
cwtl
inc
and
gs
lods
push
lea
scas
je
ret
in
and
inc
inc
mov
data16
pop
mov
fiaddl
sahf
or
inc
in
mov
inc
and
cmc
in
das
add
sub
and
mov
mov
pop
cli
popa
rcll
fdivrl
sahf
add
adc
pop
out
xchg
xchg
add
inc
daa
or
movsl
xlat
stc
and
sti
mov
sub
movsb
fsubs
add
daa
jecxz
adc
jno
mov
or
jae
xor
sub
loopne
test
roll
mov
shll
mov
inc
ja
mov
inc
fst
and
push
dec
arpl
popa
fnsave
mov
or
xchg
pop
mov
pop
nop
lods
addl
mov
mov
sub
push
pop
mov
lds
jb
gs
mov
fwait
mov
or
imul
xchg
add
dec
stc
test
arpl
cmp
mov
int3
sub
or
rorb
mov
mov
cli
repz
adc
ja
loope
or
pusha
int
xor
ljmp
mov
dec
and
or
fisubl
xchg
xchg
sub
jne
ljmp
mov
mov
outsb
inc
mov
mov
ret
jo
ret
cmp
cmp
stos
leave
outsb
out
enter
das
dec
xchg
cmpsl
pushf
and
add
arpl
std
lods
mov
pop
aaa
push
popa
cltd
test
sbb
leave
mov
stos
xlat
mov
fs
and
pop
mov
jecxz
out
test
icebp
add
jb
add
movsb
cld
sahf
dec
out
and
and
push
sub
ret
pop
inc
xchg
stos
xor
and
andb
push
jmp
add
outsb
add
sbb
leave
push
clc
aas
scas
sub
leave
and
scas
mov
imul
loopne
test
cmpsb
mov
mov
sub
xor
arpl
mov
test
mov
clc
add
in
cmpsl
and
mov
enter
xchg
loope
pop
daa
addr16
mov
arpl
data16
ror
movsb
ret
jne
stc
test
push
and
stos
jge
aam
xchg
sub
lret
int3
pop
stos
sbb
fwait
jl
mov
jbe
aas
pop
cmp
rolb
leave
xchg
adcl
aam
jne
cmpsb
mov
fwait
mov
or
sub
ret
pushf
test
inc
jmp
outsb
sub
subb
xor
or
inc
mov
pop
xor
inc
jns
lds
mov
ret
xor
popa
push
jnp
data16
xchg
mov
or
mov
test
mov
pop
mov
gs
pop
add
jae
mov
daa
mov
cmpsl
dec
outsb
or
ljmp
mov
inc
jne
mov
push
jmp
inc
sub
xchg
repz
dec
mov
add
stos
xor
cmp
aad
std
sti
inc
mov
imul
lret
jge
mov
ds
leave
imul
inc
jle
mov
and
stos
sbb
add
cwtl
xchg
sbb
gs
pop
mov
mov
gs
leave
bound
inc
das
icebp
sbb
inc
jle
jb
sarl
xchg
mov
pop
sbb
mov
mov
mov
lcall
repz
nop
es
aad
xchg
inc
mov
ret
pop
pop
mov
mov
inc
or
hlt
xchg
and
in
stos
mov
or
fisubs
fidivrl
fisubl
fwait
mov
jle
or
ret
adc
fisubrs
sub
mov
jmp
cmp
xchg
aaa
xor
adcl
cld
lods
adc
jp
mov
xchg
mov
ret
inc
fdivrs
xor
enter
fbstp
scas
inc
or
int3
stos
loop
ret
shrb
cmpsb
add
daa
aaa
cmpsb
jle
add
mov
push
cmc
and
mov
in
mov
inc
jbe
sbb
and
testl
shrb
daa
sbb
jbe
cmpsl
iret
inc
mov
mov
cmpsb
push
aaa
popf
pop
or
es
stos
inc
dec
xor
add
mov
out
mov
add
je
add
loop
aad
sub
jmp
or
jmp
test
or
mov
mov
fisubl
inc
std
loop
adc
imul
push
push
clc
mov
sub
sti
or
xchg
dec
leave
sub
test
and
mov
mov
mov
add
pop
jmp
xor
sub
adc
dec
sub
push
jg
lods
das
and
stc
loop
xchg
loop
push
sbb
es
cmp
inc
test
xor
pop
or
dec
push
jmp
scas
jb
inc
mov
stos
mov
fstl
push
pop
je
mov
hlt
and
rcrb
cli
sahf
andl
pop
mov
and
lahf
sti
enter
jnp
or
and
stos
test
push
dec
push
test
sub
adc
rolb
jnp
int3
ds
movsb
test
movsb
push
xchg
xor
mov
fsubr
or
test
inc
lock
add
push
icebp
xor
inc
sti
outsb
imull
mulps
pop
xor
fdivrl
cs
and
cmp
test
mov
inc
sti
adc
pop
loope
mov
fnsave
lret
push
loope
and
inc
jp
mov
pop
jg
jns
ret
and
cld
inc
or
add
and
fisubl
mov
inc
sub
adc
mov
jno
pop
and
lret
ja
adc
or
pop
mov
mov
jecxz
lods
and
movsb
mov
fisubrs
or
jb
mov
stc
adc
or
mov
xor
mov
mov
jb
or
dec
inc
jge
push
cli
nop
xor
mov
dec
mov
and
mov
ret
cli
stos
cmp
xchg
cmpsl
jmp
cmpsl
test
xor
push
cmp
pop
movsb
fdivrl
hlt
push
hlt
ja
sub
and
or
and
push
jle
stos
fwait
out
add
popf
push
jb
fidivrl
dec
jnp
xchg
mov
pop
cmp
inc
fimull
mov
mov
sahf
stc
inc
mov
mov
inc
inc
mov
pop
icebp
mov
ljmp
cmp
mov
inc
add
fisttpll
movsb
sub
push
jnp
push
stos
test
sub
imul
lahf
jg
mov
mov
daa
stos
bound
outsb
lods
adc
cmp
repz
mov
out
int3
cmpsb
cli
pop
jp
loopne
scas
xchg
pop
mov
cmp
rcrb
pop
mov
mov
fwait
mov
stos
cmp
xor
xchg
and
pop
jbe
int
xchg
rolb
cmp
inc
lret
stos
cltd
or
add
inc
cmpl
fsincos
mov
xchg
xor
pop
dec
mov
sbb
repz
mov
repnz
inc
sarb
adc
xchg
and
push
adcl
ja
inc
mov
shlb
movsb
addr16
pop
mov
mov
jno
push
lock
movsl
int3
mov
inc
sbb
cmpsb
inc
insl
sahf
and
repz
out
in
mov
and
bound
mov
xchg
jnp
int3
dec
push
mov
cld
jnp
mov
loope
mov
icebp
je
dec
test
adc
inc
jbe
fiaddl
and
daa
dec
fwait
push
sahf
jle
loop
adc
hlt
movsl
push
push
sub
mov
push
pop
fstpt
fsts
add
test
push
outsl
mov
pop
filds
stos
sub
mov
add
repnz
lcall
sbb
mov
mov
das
lea
push
mov
sbb
jns
leave
xchg
adc
push
mov
dec
or
outsl
add
cmp
sub
sbb
cmpsb
rorl
and
add
rorl
js
adc
sub
pusha
and
jnp
outsl
adc
loope
sarl
cs
lret
out
mov
jecxz
fsubrl
int3
mov
xchg
lahf
loope
fimull
out
and
hlt
push
pop
lods
rorl
je
pop
cld
xor
pop
jno
mov
cmc
sub
cwtl
adc
loope
mov
mov
jo
aam
inc
inc
out
and
mov
jae
testb
pushf
inc
push
mov
loopne
sbb
cli
icebp
add
fwait
pushf
js
pop
rolb
adc
popa
xchg
movsb
add
pop
fdivs
gs
fidivl
sbb
in
xor
lea
insl
jle
in
jg
jne
ret
movsb
dec
push
cs
and
jno
pop
cmp
fwait
loopne
push
pop
cmp
adc
mov
adc
xchg
arpl
mov
int
test
in
adc
mov
ja
sub
scas
push
xlat
and
mov
jne
and
mov
rolw
int3
xor
mov
mov
scas
cmpl
and
mov
fcompl
ljmp
pop
mov
fstpl
add
sub
mov
inc
lcall
add
mov
ljmp
scas
mov
repz
jb
es
mov
mov
mov
in
mov
mov
sub
in
sub
inc
sbb
and
js
add
or
xor
fwait
xor
into
and
andl
stos
mov
gs
xor
hlt
insb
cmpsb
jns
cwtl
decb
mov
pop
addr16
imul
add
xor
adc
add
aaa
addb
cltd
ret
testl
fdiv
mov
loopne
push
and
int
dec
scas
mov
clc
cmp
pop
pop
sub
mov
lds
add
inc
push
adcb
mov
add
aas
xor
repz
push
or
jnp
inc
or
loope
sarl
and
push
cmp
inc
pop
inc
notb
shl
ljmp
icebp
sub
mov
sub
jge
stos
idivl
and
jl
je
mov
std
or
inc
movsb
in
and
jne
inc
stc
int3
jmp
adc
aam
lea
xlat
add
mov
and
in
sbbb
repnz
or
pop
notl
sbb
in
jmp
sbb
mov
jecxz
adc
iret
cmp
das
loopne
pop
test
or
sti
lahf
or
cmpb
and
in
fs
bound
dec
xchg
mov
add
jmp
movsb
repnz
and
frstor
xchg
ds
sbbl
shlb
xor
repnz
mov
push
xor
fsubs
pop
inc
adc
decb
cmp
fildl
or
data16
xchg
mov
fs
sbb
out
mov
int3
sub
sbb
add
push
dec
xor
lahf
mov
pop
daa
or
lahf
mov
repz
mov
sbb
aaa
adc
push
xor
pop
adc
fidivrl
sbb
xchg
fsubs
lods
mull
loop
or
cmp
adc
loope
insb
fiadds
aaa
sub
jb
flds
pop
or
push
adc
push
hlt
and
fdivrs
test
sub
clc
mov
mov
fmull
cmp
jmp
ret
push
mov
pop
jns
es
cld
push
push
dec
cwtl
test
xchg
hlt
push
add
mov
lods
push
fmull
lods
sub
push
stos
push
mov
jmp
mov
pop
fisubl
stos
arpl
clc
test
gs
jle
fcoml
adc
pop
int
lock
mov
scas
adc
pop
xchg
cmp
loop
test
cmpsb
imul
adc
insb
rorl
ds
sti
inc
push
fs
and
cld
stos
mov
push
or
jbe
imul
repz
insl
mov
jne
add
dec
push
daa
push
jecxz
test
mov
cmpsl
shll
out
mov
or
movsb
pop
decb
scas
imulb
mov
aas
lock
xor
es
mov
daa
jecxz
xor
push
jb
mov
stos
mov
mov
shr
mov
mov
xchg
xor
arpl
add
pop
or
pop
test
cmc
orl
jns
pop
outsl
imul
lret
jmp
xor
call
mov
addb
pop
ret
andb
cmp
lea
loop
jnp
mov
cmp
inc
lahf
xor
or
adc
cltd
dec
jne
pop
icebp
int
jb
mov
mov
jae
pop
stos
leave
sub
adc
ja
mov
inc
mov
push
aaa
mov
push
mov
add
jnp
sbb
dec
ds
push
jecxz
mov
leave
repnz
or
add
pusha
lcall
das
add
mov
add
adc
mov
inc
mov
add
lahf
mov
sti
insl
loop
jb
jge
adc
int3
xchg
das
lds
pop
xchg
inc
int
add
xor
inc
test
cltd
fsubrs
dec
pop
movsl
imul
mov
imul
stos
adc
jae
movsb
xor
sbbb
leave
jmp
and
mov
loop,pt
cmpsl
cmp
jae
sub
adc
out
push
or
shl
in
sub
xor
addr16
xchg
in
sub
jae
pop
pop
lods
mov
add
xor
pop
mov
loope
rclb
bound
push
mov
dec
mov
and
insl
inc
bound
loop
inc
and
xchg
pop
mov
hlt
sbb
movl
outsb
sbb
mov
add
in
mov
pop
mov
and
inc
iret
or
rcl
add
mov
or
adc
add
call
loope
movsb
jg
int
sub
nop
loope
imul
fdivrl
mov
nop
sub
andb
shrb
loopne
ljmp
arpl
and
int
adc
pop
cltd
test
and
dec
sti
xor
dec
pop
or
xor
push
xor
xchg
mov
out
lahf
mov
subb
adc
jns
out
call
jb
popa
ja
xchg
or
andb
stos
inc
cs
inc
call
call
int
test
dec
sub
cmpsl
loope
sti
repnz
es
loopne
and
cmpsb
or
mov
jg
movb
shll
sub
bound
mov
aaa
pop
cli
jmp
stos
dec
jmp
int3
add
jmp
xchg
test
mov
mov
jmp
jo
add
and
pusha
sub
pop
mov
stc
mov
dec
in
and
mov
cmp
pop
das
add
stos
daa
inc
add
loope
mov
test
loope
cmp
mov
cmp
sti
mov
dec
mov
cltd
mov
shlb
or
and
sbb
or
in
pop
movsb
dec
and
sub
xchg
mov
and
cld
jnp
cmp
es
cmp
push
add
nop
outsl
cmp
xchg
cmp
jecxz
arpl
stos
mov
call
add
test
inc
mov
arpl
sub
pop
jo
sbb
insl
fiaddl
inc
aad
pop
arpl
scas
in
lods
out
jmp
mov
xchg
mov
adc
insl
lds
popa
mov
xor
ret
inc
sub
mov
mov
jae
inc
std
xchg
jno
jl
or
scas
pop
push
enter
mov
and
daa
inc
xor
lret
jbe
ljmp
bound
dec
jecxz
mov
inc
mov
pop
jl
cld
stc
or
pop
or
fldt
ss
xchg
jp
or
sub
sarb
add
add
sub
inc
ds
jno
lret
xor
stos
or
outsb
bound
cmp
mov
fsubr
pop
jl
dec
sub
mov
ljmp
xchg
int3
cmpsb
jne
sbb
xchg
movsl
pop
rep
sub
in
std
es
aam
pop
pop
int3
incl
inc
test
mov
jg
adc
mov
sbb
mov
stos
mov
aaa
in
push
mov
in
into
xor
leave
jns
enter
mov
mov
mov
shll
inc
movsl
add
ret
and
cmc
cltd
or
pop
pop
movsl
leave
add
xchg
outsb
adc
hlt
popa
gs
jp
fadds
dec
push
call
fcomi
sub
lock
adc
andb
rcll
and
leave
aad
pop
inc
lods
pop
jae
enter
rcl
xchg
sbb
daa
shrl
das
sarl
aad
lahf
ret
adc
les
sahf
sub
jg
jle
lcall
mov
sbb
call
jmp
inc
cli
xchg
add
sarb
fucompp
push
xchg
sub
popa
cmp
loope
sub
ljmp
mov
in
mov
dec
cmpsb
inc
imul
mov
mov
and
mov
push
cmp
xor
and
and
mov
mov
mov
cld
or
xchg
dec
shll
pop
cwtl
push
inc
jns
dec
ret
mov
inc
mov
dec
hlt
ja
sub
das
mov
add
dec
or
or
pop
pop
shrl
xor
xor
mov
push
mov
mov
mov
mov
ret
call
mov
inc
sub
add
or
outsb
and
jb
push
xchg
ror
mov
daa
adc
pop
xchg
and
int3
ret
scas
mov
iret
add
cld
fcmovnbe
aam
aam
jp
cmpsb
sub
loopne
lods
mov
adc
arpl
jl
adc
sar
lods
test
sbb
movsb
shlb
xchg
pop
in
testb
inc
jb
bound
jbe
ret
cmpsb
aaa
imul
movsb
popa
dec
mov
push
shrb
inc
outsb
jecxz
or
cwtl
mov
mov
testl
mov
adc
in
sbb
test
aas
xchg
inc
add
pop
ja
repz
jl
test
pop
loop
clc
gs
cmp
stc
mov
out
dec
icebp
cmp
cmpsb
fldenv
fsubl
fildl
mov
push
inc
jno
mov
jnp
cld
xlat
pop
aam
jecxz
or
or
or
aas
and
and
lret
xchg
xor
cmp
push
popa
sub
or
mov
jns
push
lds
leave
adc
cld
xchg
xor
push
mov
aas
mov
pop
pcmpeqw
push
std
jnp
ret
jmp
mov
rcrb
xchg
subl
or
mov
mov
pop
xchg
fstl
sub
fcoml
push
and
enter
ret
test
mov
lret
pop
imul
inc
lahf
into
mov
fmuls
pop
jno
push
mov
or
push
pop
pushf
mov
lock
and
ljmp
cld
stos
mov
int3
negl
hlt
dec
mov
pop
cmp
movsl
mov
popf
jns
mov
jp
movsl
aaa
sbbb
lods
mov
add
inc
cld
fmuls
stos
jo
int3
pop
pop
inc
mov
repz
outsb
and
inc
jge
cmp
mov
aas
cmp
test
cs
stos
and
mov
and
add
xor
cmpsb
push
lcall
xor
adc
mov
arpl
jns
aas
cmp
ds
jl
or
cmp
insb
push
adc
jno
mov
inc
jp
pop
pop
adc
vmovhpd
bound
and
add
pop
xchg
ret
and
or
mov
xchg
mov
xchg
mov
jo
punpckldq
jns
cmpb
das
lea
or
cmpb
arpl
sub
inc
mov
jo
out
xchg
fistpl
or
hlt
adc
mov
rorb
fwait
leave
pop
mov
pop
xchg
jmp
sub
pop
daa
ds
push
mov
pop
inc
faddp
fdivl
jecxz
dec
arpl
pop
and
adc
mov
mov
jns
loopne
rol
pusha
test
mov
inc
and
pushf
and
out
jmp
dec
lods
cmp
les
int3
fstpl
movsb
jae
scas
movsl
mov
shl
sub
jbe
adc
and
scas
cmpsb
pusha
gs
inc
mov
scas
cmpsl
sbb
xor
add
jg
in
outsl
out
pop
scas
mov
jecxz
mov
ret
xor
test
lahf
mov
or
aas
mov
or
ljmp
fwait
or
or
pop
xor
dec
sub
xchg
cld
xor
ret
fisttpll
call
cmpsb
or
jecxz
jl
les
nop
inc
jmp
sbb
std
and
mov
sbbb
push
inc
lods
cmp
mov
and
inc
add
inc
outsb
ja
lods
repz
cld
repz
and
mov
sub
mov
rcr
mov
mov
in
sub
add
xchg
ljmp
js
lods
jo
in
test
xor
pop
scas
pop
ds
nop
sbb
jnp
fstl
jb
xchg
lods
jns
push
shlb
mov
mov
jb
outsl
pop
cli
int3
mov
adc
and
inc
xchg
insl
ret
shl
rep
pop
sahf
loopne
dec
and
pop
es
mov
sub
das
mov
mov
push
jge
cmp
xchg
add
aas
mov
loopne
jno
call
mov
mov
mov
push
and
pop
pop
dec
mov
jb
movsb
add
ret
dec
jge
push
xchg
imul
movsb
sub
loopne
add
and
pop
cmpsb
enter
inc
mov
addl
fstpl
and
push
inc
aaa
bound
sarb
dec
cli
mov
daa
push
mov
sub
xchg
pop
inc
mov
lods
cwtl
int3
pop
add
mov
pop
fwait
xor
pop
loop
inc
in
sti
loop
pop
fisubs
imul
shll
in
sub
add
mov
pop
ret
jns
into
int3
push
sbb
fidivs
mov
mov
adc
outsb
fmul
stos
pop
push
pop
in
mov
and
in
or
addr16
push
sbb
jae
inc
lock
or
pop
mov
pop
sbb
sahf
xchg
shr
dec
xchg
or
push
ds
aas
shl
jmp
mov
je
lods
inc
and
mov
mov
out
mov
adc
mov
ret
pop
add
push
mov
inc
shll
popa
int
sbbl
loope
je
cmp
call
fwait
jp
test
les
jecxz
sub
mov
dec
pushf
loope
dec
cli
adcb
dec
or
push
jecxz,pt
lahf
dec
mov
mov
arpl
daa
push
and
je
pop
mov
push
push
cmp
pop
xor
push
jecxz
mov
cmp
call
xchg
jecxz,pn
fmul
stc
pop
jmp
cmp
or
popa
mov
mov
xor
sahf
xchg
push
in
pop
scas
fisttps
and
dec
rolb
stos
loopne
int3
jg
or
flds
je
int3
mov
xor
sahf
int3
aas
mov
popa
dec
test
xor
ds
jl
stc
movsl
or
lods
lea
int3
mov
pusha
bound
add
fldt
jbe
gs
add
cmp
repz
mov
and
and
loop
out
mov
jns
add
xlat
dec
inc
mov
fstpt
pusha
loop
push
inc
ljmp
loopne
mov
lahf
addb
push
push
fdecstp
js
shr
movsl
aas
and
sbb
cmpsb
outsl
pop
test
movsb
loope
dec
enter
push
movsb
nop
add
rol
mov
mov
pop
mov
test
sub
push
pop
pop
sub
out
mov
sub
mov
mov
mov
test
xor
pop
xor
testb
in
int3
adc
cli
mov
mov
add
add
jae
inc
mov
adcl
push
test
lret
movsl
cmp
mov
jo
cwtl
mov
repz
or
mov
or
jge
pop
clc
fwait
jecxz
ss
add
jbe
outsb
repz
cmpsl
imul
aas
pushf
jmp
das
fstl
inc
inc
pop
mov
imul
rolb
cmp
sarl
and
sbb
pop
insb
mov
js
ss
es
xchg
pop
bound
push
pop
sbb
sub
or
rcll
int3
mov
pop
lods
ljmp
mov
bound
xor
jmp
cmp
insl
jecxz
cmp
arpl
ljmp
mov
sub
ljmp
inc
std
jae
mov
fstpl
xor
xacquire
shlb
or
sbb
ja
mov
inc
fsubs
mov
nop
sub
outsl
mov
movsl
addl
insl
arpl
aaa
test
stos
pop
fwait
xchg
and
push
mov
lret
test
movsb
leave
mov
pop
frstor
das
scas
or
out
inc
cmpsb
jg
pusha
xchg
inc
jl
popa
fildl
cmp
and
push
js
push
mov
jge
aam
int3
and
out
lock
icebp
push
inc
nop
cmp
roll
enter
scas
scas
and
mov
or
add
sti
subl
and
dec
and
or
jns
ss
addr16
inc
test
push
pop
popf
call
ja
clc
or
mov
jp
dec
or
sub
fs
testl
mov
in
push
movsb
dec
jns
lcall
xchg
sub
stos
hlt
xchg
cmp
xchg
arpl
repz
lahf
insb
shrl
sbbb
sub
inc
mov
sti
push
pop
stc
jp
push
cmp
cmpsl
pop
lcall
rclb
lods
push
inc
popf
jecxz
sub
aad
add
lea
mov
insb
mov
sbb
out
ja
push
into
stc
pushw
imul
cli
pop
enter
pop
sub
sub
or
pusha
loope
cld
adc
inc
cmp
aas
xor
jbe
push
jns
adc
fnstenv
sahf
ljmp
call
push
stos
jnp
imul
shlb
aad
mov
fst
inc
fwait
mov
enter
scas
lods
xchg
movsl
call
pop
sti
add
inc
push
imul
jno
and
and
cltd
aaa
arpl
aas
ljmp
mov
mov
outsb
mov
xchg
test
sub
and
int3
lcall
fs
cmpsl
leave
dec
inc
movsb
mov
cmp
dec
push
les
jle
xchg
gs
fsubl
mov
stos
add
test
jmp
addb
push
sti
in
sahf
lret
adc
cmpsb
pop
and
sub
lret
sahf
and
repz
or
clc
mov
dec
adc
xchg
movsb
push
lahf
or
sub
mov
das
lds
bound
jmp
push
out
add
or
jecxz
pop
fisubs
xchg
mov
sti
push
inc
mov
mov
pop
inc
je
pop
inc
mov
dec
je
stos
push
and
inc
add
incl
push
sub
adc
stos
mov
mov
aad
outsb
mov
movsl
jb
movsl
mov
aad
jne
pop
mov
cmpsl
inc
add
xchg
mov
mov
xlat
inc
fwait
adc
stos
pop
enter
stos
adc
mov
std
dec
or
push
add
ljmp
out
or
xor
push
pop
mov
xchg
jecxz
inc
mov
popf
pop
lahf
cmp
jbe
call
aam
shlb
or
mov
in
mov
pop
add
ret
mov
push
popa
pop
std
lods
jbe
push
mov
sub
inc
pop
out
xchg
cwtl
mov
push
insb
pop
dec
or
and
pop
sti
popa
push
andl
sbb
cmc
daa
in
mov
adc
cmp
pop
mov
paddd
gs
in
push
and
inc
ja
leave
add
nop
int
sbb
mov
lahf
inc
imul
sbb
dec
mov
mov
imul
dec
mov
addr16
sub
push
out
dec
jmp
ret
mov
stos
sub
imul
and
outsb
mov
jl
aaa
fldt
add
scas
jae
lea
pop
mov
jmp
dec
xor
xor
xlat
sub
pop
sub
imul
jge
mov
cmp
pop
out
enter
movb
adcb
push
out
enter
sub
adc
mov
push
inc
xchg
or
or
repnz
cs
ja
bound
faddl
mov
or
cmp
je
sub
dec
pop
pop
mov
repz
out
sbb
xor
cld
test
fidivrl
push
sub
and
sub
test
mov
hlt
jae
daa
or
lcall
aam
jno
jmp
xchg
dec
loop
mov
dec
pop
cmp
sub
outsb
lret
int
sub
es
or
dec
jge
jmp
addb
imul
mull
push
loope
add
xor
arpl
xchg
jecxz
push
outsl
mov
mov
xchg
xor
sub
dec
cmp
jbe
hlt
jns
sbb
mov
mov
faddl
xchg
sub
add
daa
cmp
dec
mov
push
dec
and
dec
and
pop
mov
dec
mov
mov
shrl
push
mov
or
sub
jecxz
fwait
ds
movsl
pop
cmp
js
sub
adc
push
cmpsb
out
subl
sbb
cwtl
jae
outsl
mov
mov
popf
and
mov
bound
cmpsl
pop
mov
es
mov
xor
and
imul
sub
aam
pop
lea
and
and
inc
hlt
adc
arpl
adc
sti
xor
mov
xor
push
ret
std
setns
xor
push
jne
and
mov
mov
inc
pop
xchg
add
orb
xchg
aaa
adc
cmp
cld
mov
inc
pop
int
mov
adc
inc
push
pop
jae
inc
in
mov
mov
iret
mov
inc
dec
dec
stos
add
jnp
push
subl
mov
lods
daa
movsl
xchg
cmpsl
xlat
call
dec
sub
shlb
in
inc
pop
ret
cmp
inc
and
jle
inc
ljmp
sarl
fisttpll
inc
mov
out
popf
addr16
inc
inc
xorl
std
add
ret
lods
add
and
dec
ret
sbbl
js
fnsave
pop
mov
and
or
pop
ja
sti
pop
arpl
and
or
push
sub
xor
inc
dec
loopew
arpl
mov
mov
stos
push
mov
aas
mov
repz
xorb
cmp
inc
cmp
out
imul
cmpsl
cmpsb
stos
dec
pop
cmpsl
and
adc
mov
inc
sub
movsl
and
arpl
orb
popf
and
mov
inc
cmc
daa
add
out
xchg
xor
fildll
pop
pop
or
nop
mov
pop
xchg
adc
es
outsl
mov
fildll
cmp
add
adc
xchg
arpl
out
pop
xchg
loope
dec
bound
orb
push
sti
adc
sub
inc
dec
jecxz
sbb
xor
popa
and
jns
push
nop
stos
xchg
mov
hlt
mov
sub
lahf
jg
add
dec
in
into
dec
mov
cmp
lahf
nop
add
cmp
popa
cmpsl
movsl
sub
xchg
cld
jae
add
repz
cmpb
repnz
mov
shll
lahf
fbld
mov
loop
xor
xchg
inc
ja
ljmp
jnp
mov
outsb
and
in
imul
and
mov
or
mov
and
adc
xchg
cmpsb
shll
daa
lret
jne
icebp
dec
imul
hlt
subb
mov
popf
bound
enter
jns
mov
enter
jmp
cmp
jle
es
cmp
jo
sub
xchg
cmp
sti
and
push
addr16
popa
and
and
dec
add
pop
jl
or
shlb
sub
outsl
xor
ret
mov
out
dec
mov
test
fnstcw
ja
lret
and
sub
repnz
imul
inc
insb
lahf
decb
popf
mov
addl
xlat
xchg
mov
adc
and
pop
mov
and
xchg
push
test
xchg
out
rcr
jb
lret
sarl
aaa
adc
stc
push
adc
lds
pop
faddl
loop
jne
in
popf
jmp
fsubl
sbb
mov
push
fsubl
cltd
or
mov
cwtl
lods
push
and
xor
inc
mov
stos
mov
mov
stc
ret
lods
in
stos
andl
mov
sub
ja
les
xor
cmp
push
gs
leave
ret
sub
loopne
movsb
push
add
mov
cmp
dec
mov
sahf
cmp
pop
imul
adc
test
xchg
inc
loopne
ljmp
stos
mov
popa
jo
addr16
test
pop
adc
xchg
or
lahf
pop
addb
loop
sbb
ljmp
stc
pushl
sub
xchg
shrb
jno
xor
cmp
push
and
and
jl
adc
adc
inc
xchg
test
movsl
into
push
adc
andb
cmpl
movsb
aas
xor
hlt
lahf
push
mov
push
scas
das
faddl
xor
adc
lods
inc
or
iret
test
xor
lcall
push
cmpsb
xor
dec
and
mov
sbb
shlb
popf
and
inc
fistl
sub
and
sbb
dec
sbb
dec
xor
push
lahf
js
or
sub
cld
or
or
lret
loop
movsb
push
pop
in
xchg
out
sahf
cmp
test
in
or
das
mov
loop
or
jmp
enter
daa
movsl
out
xor
adc
and
pop
call
push
xor
pop
outsb
push
and
and
adc
and
mov
enter
jl
mov
push
pop
add
inc
or
addr16
mov
jge
icebp
in
ret
imul
lahf
jle
sbb
loope
js
flds
inc
stos
mov
sbb
lock
mov
lahf
xchg
xchg
xchg
hlt
adcb
lods
stos
fildl
mov
dec
shrb
cmpsb
add
cmpl
sub
loope
aad
aam
loop
add
subb
imull
movb
enter
xorl
sub
cwtl
arpl
jae
bound
mov
outsb
arpl
jae
cld
pop
orl
mov
jl
clc
pop
imul
outsl
pop
loop
pop
push
mov
cmp
orb
pop
push
aas
cmp
cmp
adc
inc
mov
mov
ljmp
cmpsb
cmpsl
out
pop
mov
jmp
adc
push
sahf
dec
push
mov
pop
nop
scas
or
das
mov
ljmp
leave
mov
xchg
shll
jno
mov
das
inc
je
adc
xor
sbb
mov
and
jg
clc
shll
pop
sbb
inc
inc
fwait
mov
aas
add
das
js
and
xor
lahf
xor
data16
adc
xor
jmp
movsb
mov
jecxz
aam
adc
sbb
frstor
mov
das
in
mov
sub
mov
push
jge
and
enter
mov
lret
mov
push
and
frstor
pop
mov
adc
push
mov
xorl
sbb
addl
jmp
cmpsl
dec
faddl
push
push
cld
in
add
leave
mov
inc
mov
addb
add
xor
mov
cmp
inc
or
popf
mov
fisubrs
sbb
movsb
rcll
es
lods
mov
gs
rorl
jl
rolb
nop
mov
mov
jno
imul
fsubs
hlt
xor
mov
loope
insl
mov
add
xor
andb
es
sub
loope
data16
mov
loope
jne
pop
or
lods
dec
mov
xor
adc
cmpb
in
in
adc
out
xorl
pop
inc
scas
mov
cld
stos
repnz
mov
mov
es
pop
stos
mov
mov
scas
push
and
or
jb
mov
mov
fdivl
dec
jns
fldenv
cmp
fwait
jbe
inc
xchg
and
mov
mov
scas
mov
arpl
sbb
out
sub
sarb
cltd
out
pop
xor
mov
xor
out
fdivrl
cld
adc
or
jnp
cltd
xor
aam
outsl
inc
push
jb
and
lods
int
negl
repz
inc
insl
cltd
jnp
stc
lds
scas
or
shl
daa
shll
inc
data16
and
lock
sbb
pop
mov
jno
test
mov
mov
or
adc
popa
ss
andb
mov
dec
mov
dec
xor
outsl
in
scas
mov
pop
add
push
in
mov
dec
jl
cwtl
mov
aaa
imul
andb
pop
mov
xchg
jnp
pop
cs
into
je
pusha
and
pop
cmp
std
xchg
and
pusha
inc
hlt
and
xchg
mov
pusha
arpl
cmpsl
add
adc
ret
mov
jo
lods
hlt
xor
push
call
and
adc
pop
sbb
scas
movsb
addr16
or
sti
fdivr
sub
dec
adc
movsl
jg
mov
int3
push
push
stos
cs
pop
loop
je
lods
jb
pop
mov
xchg
mov
pop
outsl
mov
mov
mov
imul
add
sahf
stos
mov
mov
fnstenv
cmp
jae
sbb
add
jns
mov
or
daa
in
mov
sbb
stos
mov
movsb
imul
cld
mov
mov
inc
mov
or
lea
jno
mov
ds
mov
stos
cmpsl
adc
and
mov
leave
push
inc
addr16
std
mov
popa
sarl
lahf
and
in
and
mov
rcll
sub
dec
popl
or
lock
add
movsb
sub
pop
aad
mov
in
push
repz
mov
jmp
adc
inc
fisubrl
cld
in
mov
and
jecxz
and
shll
into
mov
push
mov
cltd
adc
mov
mov
mov
movsl
push
call
fs
jmp
xor
out
cwtl
adc
nop
mov
outsb
into
arpl
ds
cmpsb
ret
scas
mov
das
push
jae
or
inc
inc
faddl
sub
nop
pusha
dec
fs
cmp
adc
push
cmp
push
addr16
pop
xchg
jecxz
add
test
sub
push
test
mov
jne
jmp
and
outsb
jns
jns
adc
int3
adc
mov
ja
popa
sub
das
mov
jp
mov
adcb
leave
xchg
stos
data16
jmp
popa
in
push
add
mov
outsb
cmpsl
add
shlb
testb
inc
test
andl
jns
dec
pop
lods
dec
leave
scas
gs
pop
jnp
push
in
inc
cmpsl
sbb
mov
jmp
or
mov
psrlw
int
add
inc
ja
lods
mov
xchg
enter
nop
and
push
ret
add
divl
adc
and
jp
popa
ret
cld
ja
xchg
sbb
outsl
and
fidivs
int
cmp
or
sub
dec
call
sub
mov
sub
pop
mov
inc
adc
lret
push
clc
mov
xor
enter
mov
ss
stos
js
lret
push
scas
mov
adc
mov
sbb
cmp
iret
fwait
cli
cltd
sbb
push
es
imul
movl
xchg
pop
pop
icebp
movsb
push
test
mov
in
loopne
mov
jno
cmp
testb
cmpl
testb
adc
lock
or
mov
mov
fwait
iret
bound
fldenv
push
mov
std
shl
loope
pop
push
cmpl
mov
sbb
mov
test
jbe
pop
shll
or
mov
mov
iret
addr16
xor
cmpb
in
inc
add
inc
addr16
leave
jecxz
jp
ffree
jno
pop
enter
loopne
dec
in
jmp
pop
inc
fwait
jnp
inc
ret
mov
xchg
jno
cmp
add
xchg
loopne
out
pop
push
popa
imul
leave
fildl
arpl
push
add
sub
sarl
add
nop
les
pop
jno
popf
je
inc
push
add
jnp
addr16
icebp
sub
imul
lods
add
mov
out
mov
aaa
push
or
mov
loope
sub
push
mov
sbb
popa
sbb
icebp
fidivl
push
pop
and
jne
in
ret
dec
fadds
cmp
aad
xor
mov
das
mov
lret
xor
leave
leave
std
orl
push
mov
cld
pop
adc
xchg
cmp
xor
mov
sub
aaa
mov
pop
xor
subl
sti
rcrl
pop
js
sbb
shl
mov
es
inc
sub
inc
mov
add
enter
bound
dec
lahf
jo
sbb
dec
sub
inc
or
outsl
cmpsl
sub
and
adcb
mov
xor
jbe
xchg
jb
leave
shlb
jns
inc
out
sub
and
xor
test
or
shrl
mov
inc
mov
ss
cmpsb
imul
adc
scas
adc
cmp
ret
add
insl
shll
push
lret
arpl
push
ret
in
out
mov
loop
mov
or
sbb
mov
cmpsb
je
andl
fcoml
inc
shrb
push
push
adc
mov
add
adc
inc
mov
pop
mov
movsl
popf
pop
out
and
xchg
lret
mov
inc
jns
lock
repz
fcomps
pop
inc
mov
mov
xor
push
loope
mov
stos
lods
call
stos
mov
stos
xchg
xor
xchg
pop
or
sbb
sub
sub
hlt
jmp
jno
pop
sub
sub
cmp
adc
add
mov
in
popf
adc
out
in
mov
inc
nop
mov
adc
dec
mov
mov
arpl
pusha
sbb
or
or
leave
pop
dec
stos
sbb
fadds
daa
shrb
fimuls
fldenv
jg
add
mov
push
imul
fnsave
mov
nop
sub
icebp
inc
mov
or
jne
fs
xor
xor
enter
loope
dec
xchg
xor
in
mov
clc
fwait
cmp
stos
leave
repz
out
in
or
and
scas
dec
nop
aaa
cs
add
out
movsl
stos
cs
insb
jmp
ret
and
dec
jnp
sub
stos
xchg
ss
inc
in
and
and
and
or
imul
mov
std
inc
mov
in
pop
fisubrl
insl
push
cmp
fs
dec
arpl
inc
jns
and
sbb
adc
loop
fidivrs
mov
out
int3
inc
jno
push
xor
add
outsl
dec
cs
jp
push
dec
and
addr16
mov
leave
cmp
stos
mov
pusha
shll
inc
xor
add
adc
mov
lea
mov
outsl
push
sti
cmp
or
cs
jle
lds
dec
shl
adc
bound
aam
mov
lods
mov
gs
aas
jno
mov
adc
push
dec
iret
mov
mov
mov
inc
and
lret
inc
mov
sub
jbe
pop
xchg
push
test
jmp
mov
das
mov
je
fstps
cmp
mov
addr16
and
cld
sbb
into
ja
arpl
adc
aas
pop
pushf
inc
jb
cmpsb
lods
popf
out
jnp
movsl
or
mov
cld
inc
sahf
or
lods
sub
and
mov
scas
inc
xchg
inc
mov
movsl
push
inc
sti
icebp
xchg
mov
inc
movsb
jmp
cmpsb
inc
or
sub
xlat
fiaddl
scas
test
cmp
cli
ds
and
pusha
push
add
inc
imul
fwait
in
fildll
push
addr16
mov
adc
in
nop
sbb
subb
addb
mov
lret
outsl
jge
mov
imul
ja
mov
pop
cld
testl
mov
and
popa
mov
and
or
xchg
jnp
addr16
mov
dec
shll
or
mov
and
daa
daa
xchg
test
dec
jb
cld
shrl
pop
enter
xchg
lahf
aam
addr16
jecxz
test
mov
daa
mov
out
fwait
cmc
popa
jecxz
stos
and
mov
cmpsb
cmc
popl
or
movsb
and
jle
fadd
mov
inc
imulb
and
mov
scas
adc
in
inc
into
mov
stos
mov
mov
in
push
cmp
popa
mov
pop
pop
sub
push
sbb
cmpsl
enter
mov
push
mov
fucomi
in
mov
dec
cmp
mov
fninit
ja
inc
jne
lahf
loopne
or
loop
pop
sub
adc
mov
call
int3
lret
jmp
jp
adc
jnp
xorb
or
roll
mov
mov
fadds
test
jp
mov
mov
and
ja
test
add
data16
mov
push
and
cmpsb
cltd
xchg
imul
loop
mov
pop
push
cmp
push
ljmp
inc
adc
sub
ja
stos
lods
cmp
jmp
jmp
loop
mov
sub
in
xor
push
mov
test
jl
fists
icebp
daa
jl
cs
xor
imul
imul
pop
icebp
sub
gs
lods
sub
mov
xchg
ljmp
cmp
sub
mov
fiaddl
adc
inc
loopne
psubusb
mov
pop
sbb
jle
and
inc
jecxz
inc
orb
out
fwait
xorb
mov
call
xchg
test
xor
mov
push
lret
movsl
and
adc
mov
pop
or
imul
adc
out
rol
push
outsb
and
aam
mov
and
cmpsl
repnz
ror
mov
into
mov
ret
inc
mov
cmpsl
bound
loope
bound
or
inc
sbb
mov
outsb
nop
das
out
ja
xchg
aaa
call
mov
cmpsl
mov
std
xchg
das
mov
scas
xchg
and
leave
scas
mov
ja
sub
and
arpl
lods
and
xchg
mov
inc
fwait
and
sbb
mov
sahf
push
jg
scas
jg
shll
add
pop
add
ss
cltd
daa
jecxz
jo
and
push
mov
pop
gs
jecxz
add
cltd
or
scas
pop
dec
adc
jae
cltd
in
mov
sbb
xchg
leave
mov
lods
ljmp
inc
jnp
stos
scas
xor
inc
in
movsb
push
dec
das
adc
and
sub
daa
sbb
lds
push
and
je
sahf
int
mov
sub
xlat
int
add
outsb
pop
int3
jmp
dec
and
push
lods
and
push
pop
scas
jae
xor
inc
orb
lret
adcb
inc
icebp
lods
jge
loop
pop
cmp
popf
stos
dec
stos
xchg
adc
or
mov
test
xor
shr
jae
xchg
es
xor
inc
dec
mov
inc
xlat
xorl
push
xor
or
sbb
int3
dec
test
mov
mov
inc
dec
imul
pop
xchg
addb
add
jne
and
mov
and
fadds
dec
je
mov
jp
mov
sahf
scas
mov
mov
or
push
cmp
addr16
or
imul
rolb
aad
lret
popa
sarl
adc
lcall
ljmp
jo
and
andb
mov
mov
mov
mov
stos
and
jl
cmpsl
cmp
jle
mov
mov
mov
fcompl
and
scas
xor
push
lret
ret
mov
dec
bound
addb
loope
andb
in
loope
cmp
fnstsw
xor
mov
dec
mov
push
push
js
pop
jmp
push
cmp
pop
jne
imul
xchg
leave
jae
das
in
push
loope
call
mov
mov
stos
push
sbb
fs
mov
mov
in
xchg
mov
stos
sahf
xor
test
push
push
push
xor
cltd
movsl
add
and
dec
aam
icebp
sarl
push
jae
imul
jg
sub
lret
and
loopne
cmp
push
xorl
imul
mov
movsb
sub
sub
aas
paddb
sahf
stos
faddl
movsb
mov
icebp
mov
cltd
push
iret
outsl
mov
dec
aaa
inc
or
push
xchg
test
lahf
mov
jp
push
fisubl
jae
in
cmpsl
mov
mov
popa
ja
jge
xlat
and
inc
mov
pop
fucomp
jp
and
sub
xchg
mov
scas
enter
sbb
cmpsb
mov
jno
push
inc
cwtl
mov
or
and
mov
lahf
sub
adc
out
pop
sub
or
movsl
scas
xor
pusha
lcall
and
mov
mov
mov
cmpsl
xor
adcl
mov
or
shr
lock
mov
repz
adc
ljmp
mov
jmp
and
mov
sahf
mov
mov
popa
scas
sub
mov
lea
sbbl
addr16
mov
out
movsb
lret
pusha
mov
lret
outsl
fsub
mov
ja
pop
lahf
out
out
xor
mov
mov
lahf
or
in
mov
aam
xchg
xchg
cltd
push
inc
in
cmpb
sbb
mov
sbb
sub
cmp
pop
sub
inc
jp
adc
fnstcw
in
stos
hlt
mov
scas
cmp
jmp
adcl
mov
pop
mov
cmp
add
xorb
push
push
mov
imul
cltd
xlat
popa
mov
mov
fcmovnb
cmp
scas
sub
in
test
out
data16
xor
mov
imul
int
pushf
stos
mov
dec
mov
push
pminub
loop
jno
inc
outsb
xor
xchg
cmp
xchg
scas
xchg
jbe
adc
insb
or
std
xchg
mov
sahf
repnz
mov
mov
cmpsb
push
sub
lret
js
sub
movsb
imul
mov
movsb
mov
arpl
cmp
es
xchg
jecxz
shll
mov
sbb
mov
xchg
lahf
pop
movsl
in
addr16
sbbl
and
mov
int3
jb
imul
stos
jmp
movsb
out
mov
stos
xor
sub
repz
sub
scas
mov
popf
aas
imul
icebp
push
js
mov
mov
in
push
adc
xchg
xchg
lret
fwait
jae
scas
sub
jge
sarl
xor
mov
sub
scas
and
das
cmp
gs
and
scas
daa
xor
movsl
inc
xchg
stos
cli
mov
adc
cmp
imul
imul
jmp
movsb
mov
pop
push
adcl
push
in
subl
adc
pop
and
lods
in
outsb
add
sbb
popf
mov
and
movsb
mov
subl
fs
mov
dec
pop
data16
mov
test
movsb
sbb
push
testl
mov
xchg
adc
rcrb
push
insb
xchg
fstpl
scas
stc
push
and
xchg
push
mov
jg
stos
inc
mov
bnd
jg
sbb
jno
repnz
icebp
out
inc
fnstcw
and
sub
test
sahf
cmp
es
cmp
ss
xor
jmp
xchg
fs
and
stos
jecxz
rcll
fwait
xor
stos
pop
in
jp
lea
bound
adc
inc
stos
data16
in
mov
or
jecxz
aaa
pushf
sbb
inc
add
xlat
pushf
adc
mov
icebp
dec
xor
test
mov
test
rol
or
sub
dec
xchg
dec
xchg
icebp
icebp
imul
popf
lods
hlt
and
xchg
mov
jl
pop
inc
and
xor
mov
and
cmp
or
mov
and
jb
mov
and
imul
and
dec
mov
push
jl
int
dec
fcompl
jb
stos
and
mov
xchg
lahf
jecxz
loop
in
call
in
lcall
aaa
cli
xchg
mov
inc
fmul
rorl
add
push
mov
and
dec
ret
mov
mov
add
add
popf
mov
pop
mov
dec
mov
or
jge
push
mov
inc
mov
loope
jl
fiadds
int
dec
insl
mov
roll
adc
pushf
jmp
jl
or
sub
rolb
mov
xchg
in
movsb
cmp
dec
mov
or
xor
iret
or
arpl
jns
ljmp
or
inc
inc
pop
loopne
and
mov
loop
add
mov
sub
push
pop
cltd
jge
fadds
mov
ret
sti
xchg
lret
hlt
movsl
inc
or
mov
das
movsb
addl
mov
add
mov
inc
adc
or
jle
ret
sub
jb
hlt
mov
aam
cmp
dec
inc
ret
or
inc
lods
in
incl
dec
mov
addr16
out
and
xor
jmp
adc
xchg
pop
and
pop
leave
pop
mov
and
ret
fxtract
jge
and
xorl
xor
dec
inc
pop
or
imul
mov
cmpsb
out
sti
xor
push
pop
test
mov
adc
or
ret
sahf
lret
cld
jae
adc
jl
out
fsub
add
add
mov
and
push
popa
ret
cmpsb
and
sub
clc
mov
push
ds
mov
fsubrl
dec
popa
mov
outsb
inc
test
mov
pop
add
push
mov
imul
mov
mov
fisttpl
or
mov
dec
push
neg
mov
adc
mov
addb
mov
and
xchg
test
xorb
adc
nop
loope
and
addb
mov
inc
adc
out
fwait
or
paddq
lahf
adc
bound
pop
outsb
inc
nop
fisubrs
shrl
ljmp
inc
sbb
negl
push
and
sub
bound
mov
pop
pop
pusha
mov
and
int3
add
lcall
stc
inc
js
frstor
test
int3
push
xchg
xchg
repz
inc
cltd
rclb
or
jg
cltd
fdivl
mov
enter
jle
popa
call
sub
fucomp
sarb
scas
les
push
cmpsb
dec
add
adc
test
sbb
addr16
enter
bound
cmp
mov
pushl
negb
inc
fdiv
cld
mov
push
ljmp
mov
push
fwait
repnz
mov
xor
add
mov
mov
cs
popa
adc
int3
jle
outsl
daa
jb
out
test
ss
lret
fstpt
xchg
mov
or
cltd
sub
or
sbb
out
cmp
shll
ljmp
and
lods
inc
mov
inc
jecxz
sbb
mov
add
and
mov
push
mov
pusha
das
cmp
pop
fistl
dec
jno
xor
dec
enter
bound
mov
call
sti
sbb
add
icebp
push
push
and
xchg
push
mov
sbb
pop
gs
addr16
mov
mov
add
cmpsb
insl
add
leave
jns
es
sub
daa
xchg
xchg
test
dec
jne
imul
leave
mov
adc
dec
inc
test
add
sub
nop
inc
add
jo
sti
jmp
and
dec
add
data16
imul
subl
sub
push
jp
dec
and
mov
cltd
loope
and
imul
xorb
jg
cmp
mov
inc
addb
in
lea
xchg
dec
xchg
jg
push
or
lods
jl
cmp
jl
out
leave
xlat
cmp
xchg
popf
pusha
inc
or
data16
mov
mov
lock
stos
jmp
mov
and
mov
dec
xchg
sbb
mov
dec
daa
mov
mov
inc
std
or
imul
add
cmpsb
or
pop
mov
add
jecxz
cmp
ds
jns
lret
or
jg
and
mov
and
pop
xchg
add
cwtl
and
mov
faddl
cmp
pop
addr16
movl
adc
add
inc
enter
dec
xchg
stos
popa
sar
jl
inc
es
hlt
mov
dec
push
add
aas
and
loopne
jmp
lds
mov
pop
arpl
cmp
daa
fwait
pop
addr16
xor
mov
sti
xchg
bt
insl
call
js
sub
test
and
or
mov
pop
mov
sub
sbb
sti
sbb
mov
cmpsb
jecxz
out
inc
cmpsl
inc
cli
ret
adcb
mov
jmp
mov
sbb
stos
lret
add
and
js
mov
or
jno
ret
dec
add
std
mov
mov
bound
inc
cmpsb
or
jo
mov
pusha
jmp
mov
jmp
mov
inc
loopne
pop
leave
dec
sbb
out
call
mov
testb
jmp
or
pop
lods
in
and
jne
sub
in
stos
hlt
mov
pop
movsl
enter
cmp
jae
lret
arpl
add
gs
sub
mov
jb
mov
adc
pop
leave
jb
xchg
test
lahf
fbld
or
lock
leave
adc
adc
mov
xchg
cld
movsl
aad
mov
nop
popa
jbe
mov
loope
fdivrl
rcrb
aas
lret
ror
xchg
mov
sub
xchg
jmp
leave
mov
lods
fstl
cmp
and
dec
outsl
inc
cmpsl
add
sbb
nop
std
jnp
mov
stos
pop
dec
out
sub
push
mov
jns
jbe
out
xchg
mov
sahf
aas
scas
std
push
ds
sub
movsl
das
loopne
adc
xchg
jl
imul
pop
dec
ficompl
and
push
aam
sub
call
pop
ret
mov
mov
xor
mov
bound
dec
in
rorl
cli
sbb
add
movsl
stos
xor
icebp
dec
jg
mov
insb
and
not
pop
sub
add
jb
mov
mov
das
lret
mov
test
jns
xor
hlt
imul
mov
movsb
cmp
xchg
mov
mov
addr16
addr16
mov
mov
pop
ss
jle
dec
cmpsb
fwait
jmp
fbld
xor
xor
ljmp
mov
mov
or
fimull
das
add
push
adc
into
cmp
cld
popa
dec
imul
movsl
inc
pop
add
call
add
gs
and
or
mov
into
sbb
xchg
sbb
jle
jge
mov
xor
outsl
arpl
cmp
dec
sti
mov
aad
pop
sbb
vmread
arpl
enter
fs
lods
pusha
add
adc
sub
mov
pop
iret
loopw
and
fnsave
stc
cld
mov
mov
jb
and
jle
jbe
test
add
fs
add
dec
and
mov
cmp
xlat
mov
pop
and
lcall
jo
cmpsl
adc
loope
lcall
cmpsb
sub
fsubrl
adc
iret
imul
xchg
mov
inc
test
repnz
ja
push
xchg
jae
insb
fmulp
xchg
aaa
xor
add
xor
mov
lahf
addr16
push
repnz
mov
movsl
enter
loop
fisubl
imul
or
es
or
mov
lahf
test
imul
fs
adc
and
jae
lahf
fdivr
mov
or
sahf
add
xorb
aaa
mov
mov
cmp
dec
inc
mov
call
mov
push
daa
ds
xor
jp
mov
aam
mov
sbbl
or
dec
inc
and
imul
data16
dec
ja
mov
sbbl
popa
in
stc
dec
in
cmp
cmp
shrb
mov
or
out
pop
lahf
or
pop
insb
rclb
ds
mov
sub
scas
add
inc
sbb
jo
pop
scas
mov
mov
and
xchg
stos
sub
js
lcall
lcall
mov
jg
pusha
fildll
lds
add
dec
dec
push
pop
sub
adc
dec
repnz
stos
and
hlt
jnp
jbe
out
add
out
scas
cmp
in
rcrl
sbb
out
and
mov
daa
pop
jg
daa
in
stos
pop
and
or
daa
mov
or
pop
mov
fldenv
imul
xchg
jmp
xchg
xchg
ljmp
and
ljmp
and
mov
subb
and
mov
pop
mov
lea
adc
sub
push
or
mov
pop
push
or
ret
jb
sbbl
cld
or
popa
or
jg
xchg
rcll
repz
dec
pop
arpl
mov
stos
dec
lret
out
test
add
cmp
pop
push
mov
andb
mov
icebp
mov
orl
mov
imul
pop
and
imul
fstpl
adc
or
cmpsb
jb
jg
das
or
xchg
jb
int
mov
insl
add
lret
rol
mov
outsl
sbb
imul
jge
jmp
jmp
inc
mov
stos
sbb
mov
leave
mov
mov
stos
pusha
xchg
mov
outsb
inc
mov
loop
mov
inc
rorl
stos
cld
repz
mov
cmp
sbb
jb
jge
mov
mov
mov
popf
test
push
shrl
xor
or
inc
int3
jle
fwait
sbb
and
mov
xor
out
inc
mov
push
or
xchg
movsl
mov
mov
pop
int
std
popf
pop
xor
int
repnz
movsl
int3
jns
inc
mov
stos
out
fldt
adc
popa
mov
and
addr16
andb
cld
dec
lods
sbbb
outsl
adc
jp
or
sub
sub
ljmp
mov
jmp
or
and
lret
loopne
dec
rol
les
inc
lret
add
jmp
andb
xor
jne
xor
mov
inc
aaa
and
jmp
sub
lret
pop
lods
mov
fimuls
mov
imul
mov
add
jg
sub
push
jno
mov
lea
jns
mov
jg
mov
es
daa
xor
jb
inc
test
clc
inc
lock
mov
ss
add
daa
xor
push
sar
push
cmp
add
jnp
sbb
mov
inc
xor
out
js
call
incb
xchg
gs
push
xor
mov
sbbl
xor
mull
xor
add
loopne
mov
movsb
cs
and
jae
mov
into
leave
push
loope
cmp
jp
mov
mov
jnp
notb
mov
and
popa
test
and
cmp
cmpsl
cmp
out
subl
sub
mov
cmp
xor
fs
xchg
negb
imul
jmp
lods
jge
pop
sub
iret
mov
stos
and
faddl
xchg
sub
xchg
dec
pushf
adc
arpl
loope
jl
movd
jbe
loope
or
add
incl
mov
and
leave
arpl
daa
cmp
mov
push
mov
ret
xor
sbb
fwait
or
pop
inc
push
enter
or
lea
xor
mov
lret
shlb
popa
mov
out
ljmp
repnz
pop
push
addr16
mov
jno
outsl
jl
out
es
mov
cld
sub
movsb
movsl
inc
mov
subl
fisubrs
mov
imul
inc
xor
and
movsb
repnz
or
cld
aas
mov
sub
repz
add
mov
mov
sbb
jg
sub
sub
bound
cltd
orb
imul
push
add
jb
xor
add
xlat
jmp
sub
iret
mov
mov
loop
outsb
xor
xchg
cmp
cmp
push
xchg
jle
jecxz
mov
fldenv
fcoml
mov
dec
add
and
clc
out
mov
bound
push
sti
pop
xor
div
call
inc
mov
dec
dec
das
rcll
pop
testl
dec
dec
mov
pop
std
mov
push
push
rcll
mov
les
stos
jnp
leave
pop
xchg
lahf
cmp
mov
mov
adc
mov
xchg
cmp
mov
into
xorb
insl
insl
ljmp
outsl
lods
ds
leave
and
xchg
and
cmp
xchg
adc
cltd
lret
out
mov
sbb
jmp
in
aas
dec
cmp
sti
mov
stos
push
ljmp
mov
ljmp
jo
inc
pop
dec
jo
repnz
pop
mov
adc
and
inc
sub
dec
cmp
dec
inc
mov
sub
mov
icebp
sbb
sbb
aam
jmp
inc
sub
test
ret
xchg
inc
mov
jnp,pn
jg
popw
sti
xchg
inc
icebp
jns
mov
mov
push
xchg
cmc
jl
mov
jns
add
and
cli
mov
nop
jmp
and
xor
inc
inc
and
or
or
push
cmpsb
sbb
or
stos
enter
popf
sbb
mov
mov
cltd
pop
popa
mov
imul
aaa
or
jmp
xchg
adcb
xchg
inc
mov
xchg
cld
dec
and
adc
add
sarl
popf
div
xchg
xor
adc
mov
ret
addr16
or
int
sti
sub
lods
mov
pop
imul
test
jl
mov
decl
enter
enter
xor
shrb
out
mov
leave
test
xchg
inc
jg
mov
cmp
shll
iret
sub
sti
aam
cmpsl
lods
ds
fwait
mov
stos
gs
das
in
shrb
or
mov
mov
xor
loop
mov
and
mov
xchg
add
adc
cmp
jecxz
mov
dec
mov
inc
push
pop
scas
mull
pop
or
mov
inc
lret
hlt
mov
mov
cmc
int3
xchg
push
jns
mov
mov
lock
cmp
pop
enter
pop
aam
lods
xlat
scas
loop
scas
mov
stos
dec
ljmp
xor
push
sub
cmp
out
repnz
mov
stc
shrb
outsb
call
mov
movsb
inc
mov
sahf
stos
jnp
adc
std
inc
cmp
scas
ds
cltd
aas
push
lea
jo
enter
bound
add
std
or
std
dec
cmp
or
pop
add
inc
inc
mov
mov
jp
add
push
shlb
xor
mov
add
push
add
sbb
adc
ret
int3
popa
cmpb
jo
cmp
les
mov
xchg
inc
mov
insb
add
push
out
daa
test
cld
jo
aad
lods
cld
sub
pop
inc
clc
js
in
push
cmp
lret
imul
sbb
cld
xor
orb
cld
adc
ljmp
xchg
fs
jmp
jns
xchg
sub
mov
and
nop
movlps
pop
adc
lret
dec
cmp
pop
mov
lods
out
ret
jns
pop
mov
xor
add
mov
mov
adc
test
jne
test
inc
popf
cmp
xchg
xor
dec
jl
outsb
ret
pop
push
cmp
mov
mov
push
popa
xchg
addb
nop
repnz
adc
lret
jecxz
add
inc
nop
dec
and
xchg
shlb
pop
shll
jbe
jno
int3
and
into
mov
jns
idivl
clc
sbb
ds
lods
cmp
repz
inc
pop
mov
sub
arpl
rcrl
in
dec
mov
adc
aad
xor
jo
cmpsb
jo
rol
imul
mov
je
out
aam
or
mov
cltd
cmp
stos
sbb
adc
movsl
jl
inc
xor
out
jl
stc
inc
mov
mov
jecxz
or
jl
xchg
pop
push
sbb
mov
sbb
xor
jb
xor
cld
xchg
and
dec
push
inc
push
pop
aam
inc
popa
imul
add
out
adc
rcrl
shlb
xchg
inc
and
mov
sarl
movsb
pop
xchg
leave
ds
pop
pop
jmp
mov
nop
xor
mov
scas
mov
and
into
lds
sbb
inc
das
out
imul
orl
mov
test
dec
ljmp
jnp
ret
mov
and
or
pop
popf
jp
imul
and
mov
scas
dec
push
push
jne
in
jmp
cmc
mov
xchg
inc
leave
inc
jg
lock
add
and
fnstenv
pop
sub
mov
adc
andb
jnp
mov
and
std
adc
pop
or
dec
jecxz
xchg
sub
jbe
add
sub
push
push
and
nop
mov
repz
cwtl
lret
mov
and
mov
and
aas
mov
mov
mov
mov
loopne
mov
mov
sub
test
sbb
sub
sarl
mov
bound
aas
push
call
jo
fcoms
mov
jle
adc
mov
or
mov
and
lea
dec
push
out
sbb
mov
and
imul
mov
mov
ds
cmpb
mov
outsl
pop
out
push
jbe
jo
mov
lods
mov
movsl
scas
es
in
dec
lds
or
ds
adc
loopne
jb
and
add
cmpsl
pop
subb
cwtl
jnp
lret
dec
cmp
pop
out
std
mov
es
movsb
and
xchg
inc
add
orl
cmovs
or
mov
pop
xchg
bnd
dec
mov
jge
pop
jl
leave
je
sub
sub
loop
or
jb
mov
mov
adc
daa
fs
mov
dec
add
mov
imul
xor
int
ficoms
mov
ret
xor
pop
sbbb
inc
push
mov
jl
mov
push
pop
mov
insl
mov
xchg
popa
sti
sub
cmp
jns
ja
aas
inc
mov
imul
xchg
lret
hlt
lods
jbe
push
jge
xchg
adc
add
cwtl
fstpl
push
xchg
sub
cmp
cmp
cld
or
lcall
inc
mov
es
jns
scas
insb
or
inc
icebp
addb
add
jae
add
dec
mov
movsl
stos
jae
xor
mov
and
mov
dec
mov
and
leave
sub
xchg
and
push
sbb
adc
xor
pushl
add
adc
in
jb
cmpb
lahf
cs
movsb
and
jns
loopne
popa
sub
les
imul
xchg
jo
leave
call
dec
es
fwait
movsb
xchg
mov
push
aas
mov
stc
jo,pt
aad
aam
int
insb
push
mov
mov
lock
dec
stos
push
lcall
dec
shl
dec
jl
mov
mov
stc
fwait
push
mov
jl
andl
popa
cmp
cmp
adc
mov
mov
or
lahf
stos
jno
pop
bound
dec
iret
mov
push
pop
xchg
lcall
loope
test
movl
stos
outsb
jnp
enter
jae
pushf
push
jl
fcoml
arpl
adcb
jge
cmp
fsubrl
adc
and
cmp
xchg
add
xchg
subb
ja
xchg
mov
jb
and
in
and
mov
adc
scas
sub
outsb
mov
sub
pop
push
mov
mov
inc
fwait
jle
pop
popa
pop
enter
repz
test
pop
addl
mov
mov
mov
loopne
pop
and
inc
dec
lds
and
jl
push
out
mov
mov
xlat
inc
insl
sarl
xchg
mov
or
xor
xor
imul
and
xor
outsb
mov
aas
pop
movsl
xor
adc
or
bound
aaa
mov
fs
outsl
out
mov
lahf
cmp
jne
movsb
add
mov
jg
les
push
mov
int
daa
mov
xchg
scas
daa
jge
test
xchg
ret
cvtpi2ps
in
and
push
outsl
cmp
sbb
inc
adc
adc
cmp
es
pcmpgtw
je
add
cld
xor
cmp
inc
fcompl
test
add
jmp
mov
adc
fwait
push
mov
insb
xchg
dec
dec
cltd
sub
or
outsb
cltd
xor
or
repz
add
xchg
mov
mov
add
jl
mov
jp
call
incb
popa
inc
mov
lahf
pop
adcl
sbb
mov
loope
mov
int3
adc
out
arpl
in
movsl
adc
fs
adc
pop
aaa
jl
movsb
sub
mov
xor
orb
lret
mov
mov
jnp
sub
mov
hlt
xchg
imul
xchg
jb
adc
hlt
xor
cmpsl
inc
mov
stos
mov
jnp
and
sub
mov
mov
aam
int
pop
xor
mov
xlat
daa
mov
cltd
test
inc
mov
xor
out
arpl
in
cmc
lret
imul
jno
push
mov
mov
shrb
mov
xchg
fwait
cs
cld
stos
and
jnp
scas
and
test
scas
mov
sbb
cmp
pop
cmp
cmpsb
fidivl
lods
mov
dec
pop
lret
xchg
lods
xor
mov
imul
jne
jl
leave
bound
mov
popa
cmp
popf
push
jecxz
aad
pop
fsubr
cltd
cmp
or
jne
xchg
cmp
lahf
shll
and
xor
addr16
adc
cld
ret
xlat
and
mov
sbb
ja
and
aaa
or
lahf
das
jae
inc
popa
lea
xchg
imul
mov
inc
pop
inc
in
ret
inc
sbb
xor
sbb
addr16
scas
xchg
jecxz
mov
mov
sbb
data16
pop
cmp
xor
andl
push
sahf
dec
adc
fldt
mov
bound
add
sbbl
popw
push
adc
or
cmp
lret
push
xchg
mov
enter
inc
cmpxchg
test
movsl
add
xchg
mov
adcb
cli
mov
andb
jne
and
and
and
insl
inc
jmp
jne
dec
mov
roll
cld
xor
add
jmp
dec
jg
lret
and
stos
add
dec
and
xor
cmp
jne
and
mov
loopne
andb
cmpl
xor
add
cmp
or
jnp
jb
lahf
sub
push
mov
sbb
xchg
add
mov
or
and
movsl
xchg
sub
jecxz
inc
psllq
and
and
jae
sbbl
and
hlt
imul
stos
outsb
and
cmpl
ret
repz
mov
adc
daa
cld
mov
loope
imul
adc
sahf
jne
lods
movsl
pop
loopne
jbe
mov
notl
andb
cmpl
jnp
mov
addr16
mov
clc
inc
addr16
sbb
sub
gs
jmp
mov
push
in
or
popa
ret
in
ss
push
lahf
pop
int
xchg
adc
push
and
cmp
inc
mov
arpl
mov
fwait
arpl
jns
adc
addr16
inc
repz
nop
push
mov
and
xchg
dec
bound
push
fwait
mov
mov
or
mov
and
pop
or
push
cmpsl
sbb
sbb
jno
dec
arpl
sbb
icebp
arpl
mov
lds
inc
sub
popf
dec
push
cmp
cmc
cs
mov
imul
incl
mov
mov
imul
imul
mov
xor
mov
iret
mov
ret
pop
inc
les
mov
movsb
add
xorb
popa
and
mov
mov
sub
sbb
mov
repz
xor
leave
addl
lcall
add
sbb
xor
cmc
jp
loopne
inc
mov
stos
stos
mov
dec
fs
push
lahf
xchg
loope
test
sub
xlat
cmp
inc
adc
and
xor
lods
stos
adc
xor
in
sub
mov
cmp
jnp
shrb
mov
ret
outsb
and
mov
sbb
mov
outsb
cmpb
mov
lret
push
andb
mov
pusha
mov
inc
push
xor
jmp
call
fisubrs
rol
rclb
adc
xlat
sub
and
incl
daa
inc
test
pop
push
mov
xor
dec
bound
shl
dec
das
std
adc
hlt
aam
leave
jo
pop
scas
fwait
scas
mov
mov
insb
or
stc
cltd
adc
faddp
mov
mov
fld1
jmp
fisubrl
add
mov
push
mov
adc
mov
mov
mov
insb
lods
fcmove
add
or
push
stos
mov
xchg
and
fcmovnb
stos
mov
vprotb
hlt
pop
add
jb
xor
inc
jecxz
dec
or
mov
inc
stos
bt
les
clc
and
mov
lods
and
xchg
mov
pop
outsb
inc
xor
lcall
push
jae
or
subl
xchg
push
movsb
rcrl
enter
test
lret
adc
pusha
orl
mov
shll
xlat
shlb
loope
pop
xor
in
iret
ljmp
loop
mov
xchg
inc
push
sub
jp
frstor
pop
ret
stos
push
js
in
rcrb
in
out
sub
in
in
and
add
icebp
mov
inc
cmp
js
arpl
sub
mov
push
imul
and
clc
mov
ljmp
push
mov
mov
lds
jae
pop
or
mov
push
jmp
xchg
push
cmc
dec
mov
mov
jno
inc
outsb
lods
fiadds
lahf
in
inc
cvtps2pd
notl
push
popa
jno
jne
dec
adc
pop
jle
jno
lahf
mov
daa
adc
mov
out
sti
pop
pusha
test
call
loope
popf
xchg
bound
rolb
cltd
xchg
jmp
and
and
aas
xor
pop
outsl
fistpll
loopne
inc
mov
inc
clc
mov
sbb
or
inc
mull
fstp
arpl
decb
cmp
imul
cwtl
fildll
cmp
dec
dec
popl
mov
jle
fdivrl
mov
lahf
stc
push
cwtl
jbe
xchg
xchg
mov
push
mov
dec
mov
adc
xchg
xor
cltd
imul
xor
aaa
and
sti
sti
add
jmp
es
imul
outsl
xchg
push
imul
aaa
sub
fst
sub
mov
and
lds
xchg
dec
cmpsl
dec
mov
inc
xlat
xchg
jb
out
sub
inc
imul
jp
cmp
imul
push
pop
mov
negl
mov
and
pop
and
std
cli
decl
sub
gs
sub
sbb
push
scas
icebp
in
scas
and
mov
xchg
mov
xor
hlt
sbb
subb
mov
xchg
inc
lods
or
sti
sub
popa
call
adc
add
stos
fcmove
mov
pop
outsl
ljmp
xchg
push
mov
push
dec
fs
adcl
loopne
add
push
movb
xorl
and
js
test
sub
std
xchg
cmp
arpl
mov
popa
test
mov
scas
xor
jb
test
data16
mov
outsb
jbe
test
add
jp
int
mov
cmp
std
and
out
lock
das
cmpsl
nop
fsubrl
lcall
pop
jbe
mov
sub
and
pop
pop
adc
mov
lods
pop
repnz
mov
fstp
mov
imul
and
andb
xchg
outsb
sbb
std
cmpsl
mov
dec
outsb
add
xor
push
mov
jne
mov
cmp
xchg
and
sub
mov
or
dec
mov
hlt
jecxz
xor
inc
mov
cmpl
shrl
es
mov
les
in
and
mov
arpl
mov
notl
insl
dec
out
fwait
xchg
lcall
stos
xor
or
mov
outsl
push
xorl
and
or
mov
aad
and
jl
loope
mov
xchg
movsb
jecxz
or
clc
loope
jb
les
add
push
jae
mov
xchg
mov
mov
and
sub
sub
andb
sub
outsl
and
or
or
mov
mov
xchg
xchg
push
jnp
scas
xchg
orb
jg
loop
enter
in
leave
mov
push
jb
test
ja
out
and
pop
or
divl
sub
xlat
lret
xor
jnp
pop
cmp
sub
xchg
mov
jmp
cmpsl
cmpsl
adc
iret
imul
movsb
and
pop
add
lods
mov
xor
cmp
test
addb
movsb
rep
push
bound
xchg
or
push
xchg
lock
inc
mov
jbe
xchg
loop
stos
cltd
daa
mov
push
and
add
jns
shll
mov
data16
xor
adc
cmpb
and
pusha
in
mov
jno
idivb
push
xchg
pop
scas
loop
mov
xchg
cmpsl
push
sbb
ret
xchg
or
shlb
mov
mov
mov
dec
mov
cmp
and
daa
enter
pop
push
stos
sub
mov
xchg
and
gs
push
lods
ljmp
jbe
leave
rcll
orb
fwait
pop
cmpsl
jecxz
cmpsl
addr16
mov
and
mov
pop
sub
lahf
ljmp
rolb
push
xchg
inc
and
sub
addr16
subb
ds
daa
mov
hlt
adc
and
sub
push
xchg
lea
addb
adc
xor
xor
rolb
sti
jne
xchg
adc
sbbb
pop
movsl
sub
mov
cmp
lahf
jmp
repz
pop
loop
test
test
and
mov
dec
xchg
mov
mov
xchg
jno
or
dec
pop
cmp
xchg
inc
imul
and
pop
adc
jo
dec
out
out
jb
xchg
mov
aaa
xor
jge
xchg
addl
sub
or
lret
jns
xchg
xor
push
dec
sbb
cltd
jg
push
push
stc
inc
xchg
xchg
xor
jge
frstpm(287
popl
mov
mov
rorb
sbb
sbb
add
mov
inc
movsb
and
jb
jge
enter
jb
add
xchg
add
sub
pop
cwtl
and
lcall
push
inc
in
xchg
jae
or
xor
jmp
imul
lds
aad
cmp
es
add
loopne
mov
in
add
shlb
sbb
aas
inc
add
subb
scas
test
mov
xorb
aas
pop
rcrl
out
xchg
js
and
fistpl
xor
bound
mov
addr16
inc
push
adc
jne
jb
pop
lock
pop
push
fstpl
sbb
jo
adc
aad
repz
inc
mov
dec
dec
mov
loop
pmullw
adc
xchg
ret
repnz
adc
inc
pop
pop
mov
or
in
and
jnp
jne
xor
mov
loopne
int3
sub
inc
xchg
xor
dec
mov
pushf
xor
inc
icebp
imul
cwtl
inc
ljmp
inc
add
jae
adc
mov
and
pop
dec
movsl
ljmp
or
mov
add
xor
call
adc
xor
xor
shll
xchg
cli
imul
inc
pop
add
loope
jge
enter
xorb
mov
cmpl
xchg
testl
stc
xor
mov
and
dec
iret
xchg
js
arpl
shrl
mov
stos
mov
dec
jle
ror
inc
stos
mov
push
ret
andb
pop
cs
outsl
xchg
pusha
mov
aas
jmp
xchg
pop
mov
mov
adc
cmp
lods
mov
adcb
out
fistpll
cwtl
stc
imul
fimull
mov
fisubl
add
pop
fildl
jne
pop
fadds
addb
and
in
aam
in
sbb
jmp
aad
sub
loopne
loopne
adc
mov
mov
cli
repnz
adc
outsb
enter
adc
out
or
in
arpl
mov
mov
cmp
insl
int
stos
ret
jo
out
mov
adc
xchg
add
iret
inc
fsubrs
dec
in
push
lcall
sub
mov
daa
mov
xchg
scas
and
scas
mov
inc
mov
test
ds
pop
fwait
les
mov
dec
lock
es
pop
xchg
adc
inc
jo
aad
cmpsb
adc
mov
add
adc
mov
pop
push
stc
fsubrl
adc
adc
shll
mov
cmpsb
mov
call
mov
cmpl
mov
xchg
xchg
inc
scas
stos
xchg
lcall
or
loopne
mov
and
xor
and
mov
pop
and
nop
shll
adc
mov
adc
add
out
stc
mov
mov
jge
mov
pop
mov
push
faddp
jge
mov
insl
mov
cmp
xchg
enter
ret
arpl
fwait
stc
jl
mov
inc
mov
mov
mov
sbb
mov
adc
mov
fs
aas
and
cmpsl
fistps
pushf
xchg
jle
push
jg
adcl
ret
sub
in
jb
bound
or
ret
xlat
ja
scas
sbb
std
pusha
sub
mov
out
les
cmp
or
inc
jl
add
jns
jo
push
aam
jecxz
mov
fisttpll
and
shrl
or
adc
or
out
and
and
push
inc
lret
scas
imul
mov
add
cmpsl
xchg
loopne
jge
mov
mov
pop
lods
dec
mov
jne
daa
popa
leave
cmp
cltd
loopne
push
ds
out
stos
in
mov
es
fcomp
jge
clc
dec
mov
sub
loope
xlat
add
stos
cmpsb
ficompl
scas
repnz
inc
xor
testl
or
bnd
mov
sub
and
cltd
aas
push
mov
sub
mov
cmpsb
pop
imul
aas
add
mov
mov
inc
jo
mov
test
arpl
arpl
shll
push
es
mov
imul
inc
adc
out
dec
movsb
mov
in
pop
inc
popa
mov
mov
jb
mov
mov
and
jno
stos
pop
sub
fbld
inc
mov
shrb
lods
icebp
rorb
xchg
and
jmp
mov
mov
adc
sbb
movsl
lods
or
std
dec
mov
nop
or
fstps
xor
jmp
mov
imul
andl
imul
fst
imul
popf
add
das
or
or
icebp
popf
loope
iret
inc
sbb
shlb
mov
stos
mov
jg
fadds
sub
int3
mov
loopne
int3
mov
cmpsl
or
lods
cmp
mov
cmp
xlat
mov
add
add
arpl
sub
cmp
mov
imul
jns
pop
or
xchg
loop
pop
or
in
and
out
lods
mov
inc
jmp
push
loopne
and
mov
hlt
imul
adc
rcrl
mov
xor
pop
push
or
into
sbb
lods
sbbb
mov
scas
cmp
cmp
rcrb
ret
test
or
scas
loope
fs
aas
xor
out
rolb
mov
and
out
inc
lds
rorb
movsb
leave
sbb
inc
daa
jb
pop
jmp
stos
popf
or
xor
outsl
jecxz
and
mov
inc
jp
add
and
push
in
mov
test
xchg
sub
mov
cmp
loope
mov
sbb
lahf
mov
jecxz
lock
mov
mov
mov
inc
lea
lods
sub
adc
push
cmp
and
sti
lret
daa
and
test
sbbb
int3
imul
jp
andb
sti
call
pop
xor
stos
and
fs
adc
lds
push
mov
in
mov
jns
je
or
jno
insl
lret
and
inc
mov
test
and
mov
jp
mov
jo
sub
or
mov
test
inc
lcall
jge
add
mov
mov
pop
mov
pop
insl
int3
adc
mov
pop
in
fwait
mov
xchg
aam
xchg
jp
xchg
sbb
and
inc
cli
xchg
mov
add
scas
push
mov
xor
scas
mov
xchg
sub
test
inc
pop
xlat
gs
xchg
sbb
and
shll
js
and
mov
xor
test
daa
jp
clc
mov
xchg
je
inc
pop
call
daa
cmp
sbb
aaa
pop
dec
cld
and
or
loop
xchg
push
arpl
pop
or
test
inc
inc
fadds
inc
push
xchg
inc
add
jle
je
lods
dec
xor
mov
jbe
and
pushl
pop
jb
aas
mov
adc
mov
sarb
ret
inc
jp
push
lcall
jp
sarl
rorl
nop
adc
mov
stos
jae
add
inc
mov
mov
loop
test
data16
ljmp
jg
popa
sub
add
or
cmp
xor
enter
dec
roll
sbb
lahf
out
pop
mov
jae
ja
std
cmp
lods
push
sub
jle
nop
add
and
mov
imul
orb
add
test
pop
and
jb
aam
jbe
in
and
ret
cs
fs
pop
bound
outsl
fildl
xchg
out
mov
xchg
bound
and
mov
loope
xchg
mov
dec
mov
scas
cmp
xchg
pushf
inc
mov
mov
popa
mov
cmp
sbb
outsl
mov
imul
scas
add
mov
aam
lods
scas
sbb
stos
cmp
dec
les
lods
dec
adc
jb
add
dec
and
mov
in
push
push
imul
jae
and
mov
inc
pop
andl
stos
mov
mov
ret
jmp
test
push
jns
test
add
stos
adc
aad
pusha
or
sub
mov
fistpll
pop
adc
out
inc
and
adc
ss
sarb
mov
dec
fs
addr16
mov
and
mov
test
scas
inc
mov
in
imul
movsb
nop
push
mov
jbe
lods
sarb
icebp
lock
pop
stos
or
out
out
push
mov
aam
mov
mov
push
lahf
mov
or
jp
jbe
mov
xchg
xchg
enter
or
hlt
pmaxsw
sub
jge
andb
repz
sub
inc
repz
or
insb
std
xchg
fdivr
sub
mov
inc
dec
push
sbb
roll
clc
mov
jno
sti
mov
enter
loop
jns
inc
cld
jne
out
jecxz
in
mov
inc
adc
out
mov
inc
sbb
int3
lahf
les
movsb
in
add
mov
cld
jle
fcoml
fsub
sbb
adc
fdivp
fmull
jle
adc
jmp
shlb
outsl
inc
test
test
scas
daa
daa
add
iret
mov
imul
lcall
sub
mov
leave
cltd
xor
lods
lods
fdivr
dec
out
rcrb
mov
cmp
leave
pop
fsts
cmp
es
sti
stos
dec
pop
jmp
dec
stos
sub
sub
in
sahf
sub
adc
pop
imul
rolb
dec
cmpsl
aam
xchg
or
mov
push
xchg
lock
adc
xchg
pushf
mov
jns
push
mov
dec
sub
stos
adc
leave
mov
cmpsl
push
and
sub
jl
leave
push
or
adcl
xor
mov
cmp
xor
mov
sbb
mov
bound
andl
int3
adc
xor
mov
aas
popa
movsb
jae
movsl
jmp
mov
movsl
mov
stos
push
movsl
addr16
mov
mov
mov
xor
xchg
movsb
mov
sub
mov
mov
cmpl
and
mov
pop
ret
cmp
jecxz
mov
test
fdivl
lea
popa
xchg
adc
jle
jmp
fwait
sub
scas
jbe
test
mov
into
outsl
or
jbe
pop
cvtpi2ps
mov
inc
cltd
mov
or
jl
xchg
sbb
into
mov
imul
js
inc
mov
mov
cmp
test
cwtl
push
daa
and
mov
mov
loope
lret
add
lds
loope
adc
repz
or
scas
insb
xor
add
or
pop
scas
pusha
aaa
xchg
mov
movsb
jnp
jle
cwtl
test
sub
pop
andl
dec
jno
aas
ret
jo
shr
sbb
mov
and
sbb
movsb
mov
mov
in
stos
das
jmp
fwait
cmpb
cmp
xchg
jp
mov
sbb
enter
adc
jmp
xlat
jo
loop
nop
inc
mov
test
fldl
movsl
xacquire
and
xchg
inc
pop
pushf
pop
sub
aam
test
add
lret
insl
stc
loope
or
mov
rcrl
ja
adcb
into
jbe
ja
and
stos
mov
mov
out
mov
aaa
mov
adc
dec
dec
test
mov
mov
pop
mov
stos
xchg
xchg
outsl
into
in
or
mov
lods
inc
and
addr16
cmpl
in
add
jge
sub
fadds
stos
sub
or
dec
mov
outsl
stos
and
pop
and
cmpsb
sub
leave
xchg
adc
adc
call
sub
inc
mov
sti
imul
ret
adc
sarb
mov
dec
je
lahf
test
push
sub
cmp
jl
fildl
inc
xchg
test
dec
mov
mov
clc
xchg
xor
inc
test
sub
adc
mov
scas
movsl
sbb
mov
mov
sub
mov
popa
cmpsb
xor
xor
test
clc
pusha
or
mov
xchg
pop
scas
gs
pushf
out
mov
loope
xchg
scas
and
mov
push
xor
cltd
jg
cmp
push
test
jnp
mov
ljmp
fsubl
mov
mov
xor
sbb
or
daa
mov
andb
ret
inc
mov
mov
inc
inc
xchg
sbb
xor
and
sbb
adc
scas
xchg
lahf
mov
inc
or
js
mov
decb
mov
dec
cmp
imul
ss
scas
popf
inc
mov
sbb
mov
push
mov
xchg
dec
mov
cmp
fiaddl
pop
adc
aam
jnp
add
cmp
xor
call
lds
push
adc
add
out
jno
jmp
or
mov
add
andb
xchg
cmc
outsb
add
movsb
addr16
jmp
int
add
outsl
enter
daa
mov
rorl
aaa
ds
jae
xor
fcomi
xchg
mov
push
xorl
in
mov
xor
call
shrb
imul
mov
outsb
mov
dec
stos
adc
andb
loopne
adc
ret
lret
loop
pop
jmp
mov
mov
bound
push
std
or
jno
loop
jb
mov
mov
rcrl
std
cmc
adc
and
std
pop
orl
or
lods
stos
jb
push
test
movsb
inc
or
mov
call
les
mov
out
mov
stos
fs
jnp
outsb
mov
push
mov
mov
mov
and
mov
das
es
xchg
or
push
jg
and
mov
mov
mov
cmp
fisubl
jno
lock
push
and
cs
andb
or
dec
mov
sub
lcall
push
enter
mov
sub
insb
xor
aas
sub
cltd
aaa
inc
in
adc
sahf
mov
xchg
addr16
lcall
out
iret
push
cmpsl
jns
mov
ja
inc
xor
fs
sbb
mov
mov
mov
and
repz
popf
pop
cmpsb
mov
and
sub
mov
into
sbb
imul
ds
loope
in
test
mov
mov
jl
call
aaa
movsb
int
scas
xchg
jl
add
fs
mov
cmp
mov
or
les
lret
pop
ret
sbb
xor
mov
bound
jo
pop
out
xchg
in
dec
cmpsl
fdivrl
dec
xchg
xchg
push
movsb
mov
ror
lock
dec
mov
jno
mov
xchg
add
adc
test
jge
push
nop
sbb
cmpb
jae
lret
pusha
add
xchg
xor
mov
cs
jmp
test
or
pusha
or
sbb
lods
hlt
daa
sub
jb
scas
xchg
mov
dec
mov
sub
dec
cld
and
and
fdivrs
comiss
sub
sub
mov
jnp
mov
stos
xor
mov
leave
out
inc
or
pop
cmpsb
das
cmp
add
mov
arpl
in
cli
bound
mov
sub
inc
inc
pop
jb
jge
inc
xor
push
out
xchg
in
jns
fidivs
sub
add
mov
adc
adc
sub
sub
mov
add
jge
mov
add
mov
mov
out
gs
jno
xchg
pop
cmc
lgs
mov
fcoml
mov
hlt
dec
mov
imul
mov
sbb
daa
pushf
leave
jb
xchg
in
call
and
lret
in
in
bound
and
movsl
mov
inc
mov
sbb
mov
and
mov
movsb
adc
iret
mov
lahf
leave
aad
aam
push
inc
iret
stos
pop
std
adc
push
pop
subb
sbb
push
sar
andl
push
push
sub
sub
add
and
xor
cmp
and
mov
adcl
adc
pop
or
out
fimull
and
mov
in
ljmp
sarl
movsl
fisttpl
ljmp
mov
lods
bound
cmp
movsb
mov
pop
loop
or
dec
jne
daa
sbb
daa
pop
adc
arpl
inc
fdivl
fwait
jecxz
daa
int3
nop
cmp
out
sbb
jno
mov
test
fidivs
push
dec
int
pop
mov
addr16
mov
sbb
xchg
mov
es
or
fimull
cmp
and
fmuls
dec
jae
or
xchg
popf
add
lret
cmp
xor
dec
and
sbb
adc
jmp
aaa
xchg
and
pusha
xor
lret
jmp
push
pop
sbb
addr16
cli
sub
shlb
dec
jno
and
test
pop
gs
cltd
xacquire
sti
orl
pop
je
dec
mov
pop
dec
add
push
sub
sahf
jae
aaa
add
daa
jge
mov
sbb
lea
ret
cmc
pop
mov
sbb
movsb
shr
jmp
and
xchg
ret
fsubrs
fsub
mov
mov
fiaddl
daa
mov
nop
mov
mov
ja
xchg
sub
imul
and
or
mov
mov
mov
push
sti
negb
inc
ds
ret
pusha
mov
cltd
and
arpl
lods
push
scas
mov
xor
enter
insl
mov
push
jmp
outsb
ret
push
iret
push
subl
pop
xchg
jbe
add
mov
popa
xchg
call
sub
mov
leave
pusha
mov
adc
pop
fs
adc
fcmove
addr16
adc
pop
stos
stos
es
in
dec
sbb
pop
cmc
and
call
adc
scas
nop
adc
movhps
cld
xchg
lret
adc
mov
pop
inc
inc
sbb
stc
add
imul
jge
pop
lret
divb
sahf
cmp
cli
mov
sbb
addr16
pop
mov
fs
push
das
test
imul
sbb
cmpsl
popf
movsb
loop
dec
call
enter
xchg
cmp
leave
pop
or
in
mov
jmp
inc
sbb
jecxz
andb
or
jp
inc
lcall
js
and
pop
or
push
arpl
xchg
mov
adcb
icebp
sbb
xor
clc
or
ficoml
and
shll
mov
lahf
shll
cmp
add
mov
sub
mov
sub
mov
popa
mov
pop
mov
imul
and
and
shlb
jmp
mov
dec
imulb
and
das
sub
mov
and
pop
xchg
push
cmpb
jle
in
mov
mov
mov
pop
cmp
inc
mov
scas
stos
and
pop
jmp
mov
add
subb
mov
dec
test
out
out
pop
mov
test
in
and
lcall
dec
mov
mull
mov
je
cmp
cld
dec
xor
adc
push
test
or
pop
mov
popa
imul
sbb
pushf
inc
movsb
mov
mov
and
out
xchg
mov
or
xlat
insl
sub
xor
stos
xchg
je
fdivrs
inc
iret
js
and
bound
inc
xchg
sbb
inc
sbb
mov
adc
jecxz
xchg
lea
dec
add
or
adc
xchg
pop
stos
sub
test
lea
inc
pop
mov
loopne
xor
test
dec
clc
jmp
inc
sbb
add
mov
add
push
lret
cmpsl
dec
mov
das
inc
das
sbb
cmpsl
mov
mov
add
xchg
and
lock
lretw
addb
test
inc
xor
xchg
popa
popa
push
cmpb
test
lret
das
jl
mov
and
pop
daa
add
mov
scas
loop
and
xorb
jnp
inc
decb
jp
lock
js
insb
add
testb
xor
data16
lock
jo
lret
repz
cmp
jb
lock
and
or
adc
jo
cmpsl
xchg
mov
add
jo
lret
andb
test
in
repz
xor
andb
mov
add
sub
in
dec
dec
xchg
subb
xor
stos
and
sti
sbb
inc
jge
fstl
pop
and
stos
das
mov
push
mov
or
xchg
test
push
subl
testl
adc
repnz
sub
lods
pop
xchg
outsl
push
xor
and
sbb
gs
xchg
adc
rep
inc
mov
fcmovnb
test
cmp
fmuls
add
inc
sbb
frstor
xchg
adc
jmp
add
clc
mov
mov
andb
lcall
mov
lds
sub
mov
adc
xchg
test
shlb
adc
imul
in
repz
jo
movsb
inc
clc
xchg
test
ret
add
movsb
cmpsb
imul
imul
iret
and
popa
jecxz
xchg
lods
das
sub
lds
pop
jle
mov
and
es
and
xor
andl
es
popl
push
adc
inc
sub
imul
cltd
out
dec
stos
push
xchg
adc
cmpsb
jecxz
repz
pusha
cmp
loopne
xor
sti
mov
sub
loopne
xchg
mov
out
push
and
mov
xchg
loop
mov
imul
lds
sub
mov
cmp
xchg
jb
data16
clc
subb
and
loopne
sub
sub
cmp
stos
cmpsb
mov
test
cmp
loopne
mov
xor
lcall
addr16
lods
adc
xchg
popa
mov
ljmp
movsl
cmp
xor
sbb
mov
inc
loope
and
cmpsl
inc
sub
fildl
ja
divb
mov
popf
or
arpl
fst
and
mov
sbb
and
test
jge
stos
sub
cli
fidivrs
mov
mov
push
mov
imul
daa
out
lea
inc
movsl
lcall
daa
shrb
mov
sbb
push
mov
stos
hlt
lcall
push
add
sbb
ds
jno
adc
sub
adc
mov
mov
mov
mov
add
mov
push
mov
rcl
out
out
pop
xchg
mov
out
das
xchg
jle
cs
repnz
negb
stos
addl
lcall
test
shlb
mov
inc
pop
jo
stos
shlb
inc
loope
pcmpeqw
es
and
fcmovnbe
pop
jo
ret
repz
cld
outsb
icebp
and
das
subb
sub
call
mov
stos
mov
cmp
stos
xchg
add
movsl
pop
and
scas
adc
push
sub
and
cmpsb
subb
test
add
shr
jmp
addr16
and
mov
fwait
andl
and
pop
out
pop
xchg
movsb
jno
lods
jb
push
or
pop
test
gs
imul
rolb
test
out
or
addr16
jae
sbb
sbb
dec
sbb
and
out
outsl
sbb
cltd
loope
mov
ret
stos
xchg
sti
repnz
inc
rcrb
test
enter
sbb
xchg
movsb
inc
mov
jno
sti
add
addr16
out
cmp
jns
inc
or
cmp
xchg
movsl
xor
xchg
hlt
es
mov
inc
movl
fimuls
lret
mov
div
shrb
stos
jne
aaa
or
hlt
adc
push
jno
daa
mov
jl
lea
popa
jge
lret
movsb
mov
push
sub
lods
push
das
hlt
icebp
adc
stos
stos
sub
mov
mov
cmpsb
jo
stos
mov
mov
mov
xor
lahf
xor
addl
jmp
out
inc
addr16
repnz
add
push
inc
jnp
jne
dec
pop
dec
rcll
cwtl
jg
sbb
lea
sarl
jb
gs
inc
mov
and
or
sbb
and
int
and
outsb
leave
or
movsb
push
int
cmpsl
adc
das
and
andb
cmp
es
pop
mov
or
int
std
in
or
hlt
mov
cmp
cld
mov
popa
das
andl
dec
cmpsl
inc
and
and
or
dec
mov
rclb
cmp
movsl
jp
sahf
popf
cmpsb
out
jne
sbb
and
and
leave
mov
arpl
xor
loopne
push
mov
sub
lahf
mov
jne
or
sub
test
enter
lock
jle
push
pop
xchg
gs
lcall
imul
jno
sub
sub
das
sub
cmp
mov
add
pop
xchg
dec
xchg
cmpsl
xor
and
and
cmp
pop
test
pop
pop
movsb
mov
pop
daa
mov
stc
xchg
outsl
das
jp
mov
arpl
shll
movsl
addr16
stos
das
jle
sti
pop
push
call
cmc
add
jmp
sub
cmp
mov
call
out
cld
cli
test
flds
mov
fs
dec
out
cmp
mov
cmpsl
test
cmp
movsl
dec
pop
jnp
loopne
out
and
sbb
push
mov
pusha
popf
push
or
mov
mov
sahf
adc
mov
movsb
cmc
xchg
cmp
ljmp
add
or
in
pop
mov
sbb
xorb
mov
fldl
daa
cmpsb
mov
push
rcll
imul
sbb
pop
mov
mov
or
cld
pop
adc
aaa
xorl
mov
or
xor
loope
ds
shlb
xor
sub
movsl
push
dec
push
pop
jb
test
pop
pop
repz
mov
add
mov
jno
ja
lcall
jmp
icebp
xchg
jb
mov
mov
smsw
cmpsl
repz
outsb
data16
andl
add
ljmp
xchg
out
pop
push
sahf
popa
mov
xor
ja
je
sub
fndisi(8087
fs
jle
jnp
jecxz
sub
sub
jmp
and
adc
push
sub
in
push
pusha
xchg
mov
subb
popa
cmpsl
lcall
mov
mov
sbb
mov
push
fidivs
icebp
outsl
les
imul
mov
je
xor
mov
mov
dec
mov
mov
pop
addr16
jmp
xchg
sti
cmp
sbb
add
and
movsb
and
in
loop
or
lods
mov
pop
ret
adc
adc
shrl
inc
or
mov
fs
test
jnp
push
cmpsl
and
fs
mov
int
jnp
jge
popa
shlb
popa
js
and
call
inc
pop
or
jl
mov
push
mov
xchg
add
xchg
hlt
add
test
jecxz
jbe
in
repnz
mov
mov
fmull
movsl
mov
cwtl
scas
push
bound
scas
mov
add
dec
mov
fstpt
and
ret
sub
dec
add
fs
xor
push
addb
ds
fcompl
mov
pop
ljmp
push
mov
fsubl
xchg
in
loopne
mov
cmpsb
mov
inc
fwait
pop
xchg
push
aam
and
mov
or
ljmp
clc
movsl
mov
push
flds
fwait
mov
or
mov
mov
imul
dec
dec
xor
es
mov
jne
jno
cmp
add
jnp
inc
pushf
add
call
mov
out
ljmp
cmp
jo
ja
in
insl
mov
mov
movsb
bound
enter
push
outsl
shll
out
inc
xchg
in
mov
icebp
ds
ljmp
inc
cwtl
test
or
aad
insb
xchg
jmp
daa
jno
repz
adc
jmp
sub
in
loope
and
enter
jecxz
xchg
dec
outsb
sti
xor
pop
mov
mov
jmp
or
mov
add
cmpsb
and
xchg
ljmp
push
loop
pop
scas
enter
pop
inc
notl
stos
mov
and
inc
sbb
and
aaa
mov
bound
inc
jbe
inc
movsl
mov
inc
enter
inc
sbb
enter
inc
dec
jno
test
mov
mov
push
jmp
inc
ljmp
and
or
insb
popa
testb
insl
daa
mov
mov
adc
movsl
inc
pop
inc
xchg
mov
int
scas
inc
fisttpll
dec
sbb
imul
xchg
test
jl
out
adc
pop
stos
aad
push
frstor
cmp
lods
cmc
rolb
arpl
sti
mov
inc
mov
and
jl
sub
mov
mov
or
jns
xchg
loop
pushfw
xchg
dec
and
adc
and
mov
mov
add
call
mov
mov
push
mov
fldt
lods
push
add
and
imull
pushf
lods
mov
ja
ret
lcall
ja
or
lock
sbb
rcrb
sbb
call
jl
and
inc
outsl
sbb
dec
and
inc
jge
repnz
pop
adc
stos
or
sbb
and
jge
xor
jb
mov
cmp
out
mov
sahf
cmpsl
jecxz
xchg
ss
cmpsl
aam
cmp
xchg
test
inc
cmp
mov
xor
data16
adc
sub
or
cld
inc
pushf
and
adc
outsb
outsb
mov
inc
push
inc
sub
sbb
aas
mov
insl
mov
mov
imul
pop
movsb
push
xorb
test
and
xor
insb
popf
add
sarl
cmpsl
popa
mov
xchg
inc
or
add
adc
cmpsb
mov
sbb
fisubl
dec
lds
movsl
shrl
mov
jae
ret
out
clc
pop
pop
lods
outsb
xchg
lret
mov
mov
sub
in
xchg
es
adc
push
and
mov
sahf
sbb
cmp
ret
sbb
mov
scas
pop
push
in
lret
stos
scas
and
in
mov
mov
mov
or
adcb
insl
out
or
adc
mov
mov
popa
sti
hlt
orl
pop
jb
xchg
out
mov
xchg
leave
jp
xchg
andb
fimuls
inc
gs
outsl
popa
in
xchg
addr16
sbb
add
test
or
adc
lds
push
test
daa
lret
das
mov
adc
dec
mov
mov
push
icebp
daa
cmpsl
movsb
dec
fs
arpl
ret
or
mov
sub
mov
sub
ljmp
inc
inc
aas
mov
pop
sbb
imul
jp
daa
test
xorl
daa
mov
cmp
sub
ret
repz
cmp
aad
cld
cmpsb
addr16
shl
movsl
in
test
scas
add
jb
mov
xchg
and
inc
or
or
cmpsb
mov
aad
fiadds
int
add
adcb
cltd
nop
aas
and
inc
movsl
ljmp
flds
dec
sbb
pop
es
dec
and
mov
inc
adc
stos
mov
in
mov
mov
sub
jns
or
fwait
pop
movsb
mov
out
mov
imul
push
or
pop
into
nop
ljmp
xor
adc
and
call
or
mov
mov
fldcw
fs
dec
fsts
pusha
loope
loope
cltd
in
cs
out
xchg
test
push
cmpsb
mov
sub
inc
jns
aad
cld
fstpl
mov
jge
test
inc
cltd
inc
mov
and
add
es
es
adc
in
test
adc
cmp
inc
mov
scas
adc
push
mov
loope
in
cmpb
jl
int
stos
movsb
ret
mov
fiadds
mov
mov
test
dec
adc
fiaddl
add
andb
out
and
inc
popf
insl
xchg
and
stos
mov
mov
add
pop
mov
add
cmpb
push
inc
aam
cltd
in
es
scas
cmp
push
jns
mov
sub
jmp
mov
inc
popf
mov
adc
outsl
mov
push
jge
pop
test
mov
or
cmp
ljmp
loope
jle
addb
mov
cmp
fstpt
movsl
jae
jl
and
mov
mov
inc
aad
sub
jecxz
outsb
mov
cmp
in
rclb
std
leave
mov
cli
into
in
add
stos
jae
fs
in
outsl
and
ds
imul
cmp
xchg
aam
iret
pop
shrb
pop
rorb
pop
add
sbb
nopl
sbb
or
mov
js
enter
jb
stos
jnp
insb
lods
inc
cmp
and
daa
mov
adc
loop
mov
lahf
inc
sbb
sarl
sarb
cmpsb
outsl
iret
or
cmpl
add
ret
addb
mov
mov
loope
xchg
mov
stc
sbb
stos
lock
mov
pop
jmp
adc
addr16
lahf
pushf
dec
out
push
inc
in
data16
mov
lret
rolb
push
and
pop
mov
dec
mov
pop
jge
mov
in
out
dec
inc
mov
scas
cmpsl
inc
and
je
push
dec
cmp
push
jae
pop
in
pusha
popf
inc
mov
mov
aaa
arpl
inc
mov
mov
mov
jge
push
insb
xor
jnp
test
mov
iret
push
repz
jmp
mov
sti
fwait
add
ss
mov
ret
leave
outsb
cmpsb
stos
push
sub
scas
sub
arpl
xorl
jge
mov
mov
push
cmpsl
ds
cld
dec
xlat
ljmp
loope
mov
lret
mov
outsb
mov
push
jp
lock
xchg
push
jo
xorl
js
arpl
cltd
inc
fwait
inc
cli
sub
imul
ret
mov
and
bound
jns
mov
xchg
cmpsb
jge
and
and
testl
mov
gs
cmpsb
rclb
jp
mov
test
xor
enter
lcall
enter
leave
ds
jno
js
xchg
or
mov
movsb
or
in
scas
inc
mov
gs
test
addr16
loopne
jle
jne,pn
adc
sbb
push
cltd
lret
and
fldt
and
jb
ljmp
mov
ljmp
lcall
jmp
fdivl
andb
pop
mov
ja
sub
daa
cmpsb
jecxz
mov
std
push
jmp
jns
sbb
stc
jmp
mov
xchg
cmpsb
jmp
xchg
gs
andb
push
mov
shll
or
imul
mov
in
and
xor
jne
ljmp
leave
adc
adc
mov
adc
insl
movsb
mov
loop
mov
jb
push
cwtl
dec
inc
jnp
inc
in
push
mov
lret
jb
fsts
bound
test
movsl
pop
rcll
out
cmp
pop
scas
movsl
testb
ret
test
mov
pop
ret
cmc
pop
enter
and
cltd
iret
jnp
push
andl
push
adc
mov
xchg
push
call
sar
sbb
push
mov
andb
movsb
mov
sbb
jne
push
data16
fldenv
call
mov
and
movsb
sub
and
push
call
fwait
and
fs
flds
inc
cmpsb
sbb
pop
or
addb
sub
test
popf
repz
ret
fsubrl
and
sar
gs
inc
jp
inc
push
clc
test
mov
mov
jne
stos
mov
sub
add
subl
ret
addr16
jo
insl
xchg
test
pop
or
popa
je
subl
cld
jns
into
mov
shl
mov
gs
inc
aaa
adc
clc
dec
inc
inc
pop
or
inc
adc
stos
mov
das
not
popf
in
xor
aaa
shl
or
fwait
mov
add
sub
xorl
leave
test
je
mov
xor
mov
fsubl
and
adc
jno
and
jne
xchg
stos
sub
dec
push
or
mov
xchg
movsb
jg
inc
in
mov
sub
rorb
sub
in
push
adcl
inc
pop
dec
cmc
jp
push
orl
sub
and
call
adc
push
mov
lret
popf
pop
adc
xor
into
mov
mov
sub
sub
loop
adc
cmp
add
adc
int
mov
rcr
mov
cmp
aad
shrb
sub
mov
xor
mov
inc
sbb
mov
mov
out
cmp
sub
lahf
leave
mov
aas
icebp
and
dec
das
out
dec
mov
mov
or
dec
imul
and
ret
inc
sti
lods
inc
jge
pop
and
mov
adc
lea
inc
outsl
fwait
mov
or
in
xchg
sub
sti
aam
mov
out
xor
enter
pop
mov
repz
xchg
inc
and
fiaddl
leave
adc
mov
sarb
shrb
test
inc
ret
mov
loope
cmpsb
lcall
xchg
xor
push
xor
jno
push
stos
or
jp
mov
push
andb
lcall
repz
testb
mov
inc
fnstsw
and
inc
mov
pop
jne
and
fldl
pusha
fisubl
jle
bnd
imulb
or
cli
aaa
push
and
rcll
mov
inc
cmpsl
xor
pop
inc
cli
adc
and
hlt
xchg
inc
pop
sub
adc
in
std
push
cs
data16
movsb
cmc
addr16
xchg
jb
inc
xchg
pusha
stos
mov
mov
pop
mov
rcl
stos
mov
jae
hlt
mov
and
cltd
mov
decl
xor
xchg
inc
mov
jecxz
lahf
imul
add
out
xlat
movsb
sbb
mov
ljmp
iret
pop
sub
sub
mov
push
cmp
fucom
mov
mov
lret
lcall
mov
arpl
mov
and
cmpsl
cs
push
cmp
vmwrite
push
jecxz
scas
test
sub
jl
or
or
push
or
mov
shlb
mov
roll
mov
xchg
subb
jns
cld
leave
lahf
sub
jmp
push
xchg
push
pop
es
scas
push
out
sub
mov
cmp
push
sarb
pop
sbb
jl
ljmp
cmpsl
data16
int
inc
jp
cmpsb
leave
sahf
mov
repz
out
and
xchg
pop
pusha
mov
sti
and
sub
and
push
popf
mov
imulb
jae
and
and
push
test
xor
jle
das
test
test
mov
ja
ret
mov
dec
cmp
ds
cwtl
inc
push
out
test
arpl
xor
adcb
imul
flds
stos
mov
testb
sub
adc
xorl
lods
popf
mov
pop
insl
inc
fdivl
int
loop
adc
hlt
sub
cmp
or
or
mov
out
into
lret
repnz
xor
scas
pop
repz
jl
push
cwtl
loop
adc
mov
iret
and
fiadds
mov
xor
add
and
loopw
outsl
mov
inc
repz
or
int
add
and
ret
mov
into
or
xorb
mov
fistpll
xchg
cmpsb
inc
and
das
cmp
adc
and
or
push
dec
sahf
aad
xor
adc
cwtl
mov
pushf
cmp
arpl
xor
movsb
xchg
mov
and
test
imul
and
bound
xchg
fstp
cmp
fsubl
sbb
mov
xchg
xchg
in
fcompl
fidivs
jae
xor
add
lret
cmovns
ljmp
xor
xor
jae
shlb
cmpsl
mov
ljmp
jecxz
daa
enter
imul
and
ret
add
cmp
enter
arpl
mov
mov
cmpsl
loop
push
pushf
inc
pusha
fildl
mov
cmpb
popa
sbb
cltd
jnp
sbb
insl
imul
cmpsl
inc
es
in
mov
lahf
jmp
adc
aaa
push
sbb
and
arpl
mov
xor
jbe
in
xor
imul
xchg
sti
mov
cwtl
sub
and
roll
push
push
and
jmp
xchg
call
fstl
mov
fdivrs
daa
dec
sub
mov
pop
mov
push
mov
mov
inc
cmp
add
dec
test
inc
lcall
jbe
mov
and
sub
dec
pop
movsb
pop
or
das
and
fdivrl
mov
pop
call
repnz
std
movsb
cmp
sub
leave
out
lret
add
sbb
push
dec
aad
mov
es
mov
popa
pop
dec
es
adc
xor
or
and
leave
jle
xchg
jo
jb
daa
xchg
shl
repz
pop
and
sbb
aaa
icebp
jne
jmp
ficoml
mov
sub
mov
mov
sahf
lds
test
push
mov
dec
or
pushf
pop
mov
ss
dec
mov
pop
lret
sbb
scas
mov
mov
xchg
sub
or
xor
push
xchg
mov
jecxz
mov
out
cmpsl
stos
jmp
sbb
int
mov
outsl
lods
roll
sahf
lods
sub
cld
pusha
cmp
pusha
mov
aam
mov
sbbb
jp
clc
lods
add
push
inc
popf
sbb
stos
scas
mov
aaa
cmp
jbe
outsb
jecxz
lcall
fbld
enter
mov
adcb
dec
jp
cltd
roll
and
dec
stos
xchg
movsb
bound
xchg
data16
push
mov
mov
aam
mov
scas
hlt
out
insl
push
push
fistl
lea
jmp
icebp
cld
cmp
ret
adc
scas
repz
popa
leave
mov
aaa
jo
sbb
jle
mov
cmp
in
inc
jle
in
mov
popf
cmpsb
sbb
fucompp
jne
cmpsl
loope
adc
add
fidivrs
sti
iret
gs
fs
xchg
add
popa
inc
or
mov
cmp
mov
loop
or
fiaddl
dec
bound
aaa
es
fimull
jne
pop
mov
dec
mov
cmp
inc
xlat
and
in
sahf
xor
adc
hlt
sti
xor
jbe
push
mov
cmp
stos
pusha
mov
jne
inc
or
div
out
add
xchg
bound
imul
jbe
jne
aaa
imul
or
push
or
test
std
sub
clc
addr16
mov
popf
ss
adc
mov
inc
in
xchg
rorb
mov
dec
and
or
add
pusha
sub
imul
imul
fdivrs
aas
adc
and
adc
cmpsb
jns
mov
push
insb
and
int3
sub
jo
pop
mov
and
mov
mov
and
mov
sbb
out
mov
adc
xlat
das
call
or
sub
xchg
and
repnz
cmpsb
sub
repz
and
jle
mov
dec
aas
enter
loope
enter
and
add
fs
vhaddps
mov
xchg
pop
popa
jg
pop
mov
and
hlt
inc
sbb
pop
addb
loope
or
sub
lea
adc
cltd
lods
mov
adc
out
mov
xchg
jae
adc
and
xchg
lret
mov
fidivrl
dec
add
mov
enter
enter
sub
rorb
fidivs
sbb
mov
inc
mov
and
shlb
push
mov
push
popf
mov
je
pop
mov
cmc
mov
pop
mov
popf
cltd
add
xchg
and
jp
sub
rcrl
scas
xchg
push
jmp
adc
lock
push
xchg
stos
or
and
stos
ret
popa
aam
mov
mov
mov
mov
sbb
int
mov
mov
mov
aam
pop
jmp
orl
pop
stc
popa
cmp
mov
cld
scas
push
mov
out
aaa
xor
and
movsl
sub
test
cmp
out
mov
mov
shr
push
inc
out
fsubp
lret
mov
je
xchg
popa
enter
mov
mov
xor
test
sti
outsb
sbb
jnp
lahf
xchg
imul
out
scas
dec
ja
cld
lods
add
ret
xor
movsb
dec
cmp
lock
notb
dec
push
outsb
jae
jle
ret
jg
mov
mov
ja
mov
pmaxsw
cltd
jmp
xor
mov
es
adcb
cmpsb
stos
aam
movb
push
adc
dec
sbb
push
mov
jno
mov
pop
or
popa
xor
push
in
add
xchg
mov
cld
adc
or
das
pop
mov
aad
shlb
mov
subb
pop
movsb
jns
pop
sub
test
es
pop
sub
sarb
and
ficoml
push
mov
scas
mov
inc
push
jb
cmpsl
xor
in
cmpsb
psubd
pop
and
push
xchg
loope
mov
jecxz
mov
stc
sarb
subb
out
inc
xchg
inc
xor
std
and
mov
inc
pop
pop
push
dec
xor
jnp
out
sub
addr16
mov
or
stos
daa
jmp
sub
and
inc
cmc
sbb
mov
sub
mov
and
push
jmp
and
sbb
outsb
or
test
stos
sub
js
out
daa
push
in
das
or
negl
or
les
xchg
inc
pop
pop
movsb
mov
lock
push
sbbb
or
pop
mov
mov
sub
out
mov
movsb
outsl
call
push
lods
mov
lea
dec
jmp
mov
dec
lahf
in
cmp
testb
repnz
jmp
stc
and
mov
aam
pusha
dec
into
or
mov
sbb
sbb
or
inc
or
jns
stos
lret
inc
or
hlt
cmp
mov
push
mov
jns
jb
jns
out
mov
xor
mov
andb
mov
rolb
pop
mov
sahf
mov
outsb
pop
in
arpl
test
mov
cmp
cmp
jo
test
pop
xchg
push
out
jae
mov
push
sahf
scas
dec
sub
pop
nop
sti
sahf
mov
and
inc
fdivr
jne
fldcw
lods
mov
adc
sbb
cmp
cmpb
inc
push
in
in
idivl
mov
ret
fnsave
ja
mov
mov
ret
mov
inc
int
adc
xor
xchg
push
fs
jecxz
pop
xchg
cwtl
arpl
push
mov
repz
mov
rcrl
ds
push
data16
es
and
mov
jge
mov
mov
stos
test
jnp
ret
and
mov
inc
add
loopne
subl
std
daa
fs
sti
add
push
ret
inc
roll
xlat
cltd
shl
xor
daa
push
xor
mov
ret
mov
sub
mov
mov
cmp
mov
xchg
xor
sub
js
and
inc
lahf
sbb
or
test
popa
sub
mov
inc
es
dec
outsl
jae
scas
fldcw
scas
sub
dec
scas
fsubrl
mov
enter
stos
mov
iret
xor
xor
mov
adc
divl
inc
mov
xor
rcll
and
push
divl
xchg
jp
and
pop
into
cmpsb
sahf
jg
jp
mov
push
sub
stos
jp
or
loopne
add
sahf
jp
aas
std
adc
mov
cmpb
imul
mov
inc
mov
jmp
les
shlb
xor
mov
lods
lods
lea
push
jp
mov
xchg
dec
and
xchg
hlt
mov
inc
jnp
mov
xchg
in
cmp
jle
cmpsb
pop
stc
add
jp
sahf
mov
and
mov
cmp
xor
cmp
dec
lret
les
std
xlat
mov
mov
fucomip
or
cmpsb
fucomi
lea
idivb
mov
xchg
movsb
stos
test
mov
gs
icebp
fisubs
movsl
mov
insb
push
js
push
push
pushf
mov
shrl
repnz
fadd
push
sti
sbb
shlb
xchg
out
lods
xchg
filds
ret
sbb
subl
imul
xchg
repnz
jl
inc
dec
stc
loope
out
daa
adcl
ljmp
xor
dec
lret
or
and
into
shr
mov
mov
mov
xchg
mov
in
jg
mov
pop
sbb
daa
mov
cmc
bound
jno
movsb
pop
mov
xchg
jb
cmpl
shll
mov
jmp
notb
ficoml
out
loopne
lahf
fcomi
sub
stc
hlt
sub
push
pop
popf
imul
in
clc
outsl
dec
pop
int
int3
or
xor
and
roll
clc
xor
js
and
mov
jecxz
daa
lahf
fisttps
sub
cmp
dec
mov
dec
daa
push
dec
dec
call
imul
adc
leave
movsb
inc
lahf
sub
faddl
mov
mov
dec
mov
or
imul
test
mov
xchg
jbe
jno
addr16
in
inc
in
push
mov
adc
and
test
repnz
cmp
xchg
jmp
xchg
loope
stos
rcrl
sub
insl
insl
jl
mov
lds
cmpsl
mov
push
push
xchg
bound
and
imul
lcall
xchg
imul
imul
cmpb
jl
inc
mov
mov
cmp
mov
jae
adc
mov
mov
dec
xor
ja
mov
dec
push
mov
pop
or
ja
icebp
mov
mov
ret
or
mov
inc
dec
inc
mov
sub
mov
mov
dec
call
cmp
mov
sbb
push
movsb
mov
and
adcl
fmul
arpl
sub
jl
mov
jmp
jne
gs
mov
movsb
sbb
and
inc
pop
pop
add
insl
push
mov
mov
mov
mov
inc
sbb
mov
adc
fs
stc
loope
jmp
push
and
clc
and
stos
push
mov
and
xchg
jecxz
jb
lods
test
sbb
push
test
sub
or
and
daa
stos
pop
mov
stos
idivl
orb
pop
pushf
mov
popf
inc
jle
sbb
data16
mov
cmpsl
fdivs
pop
jecxz
and
xor
jno
pop
fimuls
leave
adc
fbstp
push
sbb
adc
outsl
mov
inc
mov
scas
popa
test
addr16
mov
fidivrs
jne
and
enter
pop
mov
cvtdq2ps
sub
jecxz
dec
and
push
sub
xor
sbb
scas
imul
push
push
inc
and
loopne
lods
fsubs
inc
fsubrs
testb
addr16
jle
xor
mov
out
mov
and
adc
pop
or
xchg
adc
arpl
mov
mov
or
jae
nop
ret
jae
sbb
mov
sub
sbb
and
stos
insb
popa
or
in
fcmovu
add
fwait
cmpsl
sub
test
adc
xchg
movsb
and
push
jle
lock
popa
or
inc
fs
sub
out
sbbl
out
dec
scas
popa
xor
mov
adc
mov
cmpsb
call
inc
std
stos
xchg
cltd
outsb
mov
mov
fdivl
ja
add
sbb
mov
sub
ret
cmp
aam
mov
or
cmp
push
mov
dec
sub
inc
and
in
popf
and
stos
jne
lret
and
and
mov
mov
ret
outsb
cwtl
out
adc
in
hlt
mov
data16
and
outsl
movsb
xchg
test
jg
sbb
shlb
das
jmp
fs
addl
cltd
imul
jne
imul
shr
fildl
cmp
stos
fisubs
lahf
pop
mov
pop
in
stos
adc
subl
fcompl
ljmp
in
mov
pop
mov
into
stos
inc
cmpsl
test
cmp
push
test
pop
lods
js
in
dec
cmpb
sbb
xchg
leave
cmpsl
pop
mov
stos
jl
mov
pop
ja
pop
jo
stos
fnstsw
mov
repnz
jmp
inc
call
mov
cmpsl
shl
fwait
fwait
lahf
lea
dec
nop
pop
dec
mov
imul
mov
mov
subb
dec
cmpsb
shl
shlb
sbb
mov
lret
and
push
fbstp
mov
outsl
ljmp
mov
adc
or
dec
call
les
mov
sahf
inc
sub
shlb
out
popf
jmp
mov
jle
addl
xchg
imul
and
imul
jae
hlt
xor
dec
outsl
jecxz
pop
xorl
arpl
inc
cli
fdivrs
mov
push
mov
inc
xchg
lea
cmp
in
pop
ja
sbb
fsubl
aaa
roll
fildll
movsb
repnz
xor
repz
mov
add
push
pop
adc
mov
push
lret
movsb
stos
mov
cwtl
les
push
xchg
ja
insl
mov
jb
pop
xor
mov
mov
aas
scas
mov
inc
outsl
mov
adc
push
jmp
inc
mov
call
sub
andb
jg
jne
pop
dec
adc
sbb
pop
cmp
add
xor
loopne
pusha
std
sbb
pop
scas
jne
jge
mulb
or
loop
push
sbbb
mov
cwtl
cmp
sub
ret
mov
setp
and
mov
jne
daa
mov
leave
mov
add
cmp
aam
and
popf
sbb
or
xor
and
stos
jl
sarl
mov
inc
jle
mov
ss
sbb
inc
out
test
and
loop
mov
pop
jp
mov
mov
mov
movsl
cmp
xorl
movsb
sti
cmpsl
xor
mov
roll
call
addr16
aaa
stos
arpl
nop
add
jmp
pusha
inc
dec
cmp
jge
aas
leave
push
add
aaa
repnz
mov
mov
or
andb
xchg
and
stos
sbb
cltd
mov
inc
mov
adc
movsb
jecxz
mov
test
and
sbb
gs
fnsave
sub
dec
sub
cmp
add
adc
lret
pop
movsl
cmp
dec
or
cmp
sub
push
cmpsb
test
popa
pushf
cmp
xchg
push
push
scas
in
pusha
push
mov
imul
adc
push
mov
mov
imul
mov
xor
jb
mov
int3
inc
out
fwait
int3
scas
cmpsl
repnz
mov
pop
mov
cs
idivb
ret
push
push
lods
mov
fisubrs
cmpl
ja
push
jge
sub
jne
xchg
imull
mov
push
mov
mov
adc
fldenv
cmpsl
test
add
jnp
repz
insl
stos
sub
xor
nop
stos
aas
push
das
lods
sahf
cmpsl
lods
cmp
cmp
mov
mull
aam
mov
into
pop
cld
test
sbb
jae
sbb
imul
jns
imul
fimuls
sahf
adc
shrb
add
lcall
push
mov
jg
sub
fldenv
mov
mov
jp
push
cwtl
mov
mov
es
outsl
and
cmpsl
adc
ret
lahf
das
sub
sbbb
lds
add
mov
add
mov
cmc
int3
fwait
cmc
ja
and
cltd
lret
and
fildl
mov
mov
adc
sti
lds
sub
daa
mov
pushf
call
dec
aam
fnstenv
push
popf
inc
sbb
fdivs
fstl
mov
mov
shr
data16
push
sub
pop
int3
jnp
and
movsb
and
je
andb
xchg
movb
dec
jmp
jmp
lcall
lret
cmpsl
mov
mov
test
mov
fs
aad
stos
sub
or
mov
mov
aam
mov
or
rolb
movsb
sbb
dec
hlt
out
or
fwait
leave
jg
xchg
scas
xchg
hlt
lea
sub
mov
pop
lea
jge
push
xor
jmp
aas
ds
mov
pop
les
xor
scas
mov
std
rcl
adcb
pushf
mov
xor
shlb
fidivs
imul
das
cmp
jle
cs
push
aas
push
lahf
or
retw
adc
cli
aam
fdivs
xchg
ret
and
call
sbb
bnd
push
push
xchg
cli
sarb
fisubs
sub
mov
add
cmpb
jle
pop
sbb
cmp
int3
jge
cmp
movsb
mov
cmp
xchg
mov
dec
mov
cmpb
cld
jbe
pop
cmp
cmp
cmp
dec
lcall
mov
or
out
lods
out
adc
mov
scas
out
mov
sbb
jge
icebp
pop
sbb
mov
sub
mov
dec
xor
mov
cmpl
das
xor
dec
sbb
pop
sbb
jecxz
icebp
stos
mov
inc
push
repz
das
sbb
fwait
inc
mov
push
jmp
mov
xchg
into
and
hlt
dec
mov
inc
xchg
dec
daa
sbbl
repnz
xchg
sbb
imul
xchg
cmp
dec
and
mov
pop
sub
pop
sub
sahf
push
into
das
xlat
mov
jno
popf
cltd
dec
test
pop
int
jae
jno
ljmp
dec
cmpl
or
dec
pop
loopne
xor
or
cld
ret
dec
dec
stos
sub
cmpsl
sub
repz
movsb
inc
loop
sbb
sbb
dec
lods
outsb
ret
in
push
jno
mov
and
adc
sub
add
and
in
and
js
hlt
cmp
insl
mov
push
lahf
and
cmp
mov
mov
mov
or
sub
push
shlb
into
or
int
xlat
dec
test
jecxz
pop
sbb
repnz
cmp
mov
sub
mov
xlat
cltd
ljmp
out
push
scas
sahf
adc
xchg
and
and
xor
cmpsl
adc
fs
jl
fs
and
scas
mov
adc
xor
movsb
sti
sbb
stos
add
adc
inc
mov
mov
fldenv
xor
aam
dec
enter
and
stos
es
mov
fsubrl
loopne
mov
ror
mov
stos
fsubrl
mov
xor
mov
dec
inc
es
xorb
movsb
cmpb
push
fistpl
fisubrl
shlb
lret
mov
es
mov
push
and
add
mov
mov
and
lahf
ficoml
push
mov
push
popf
and
loope
hlt
out
dec
imulb
fptan
sub
xor
inc
popf
in
stos
enter
or
ja
pop
out
mov
cmp
ja
sbb
int3
dec
lods
fsubrl
xchg
mov
cld
loopne
jle
pop
arpl
jb
nop
in
mov
int
mov
and
ret
mov
xchg
jb
jecxz
mov
push
pop
mov
lcall
jmp
mov
arpl
das
cld
jo
jp
mov
mov
pop
outsb
fwait
and
jae
inc
and
sbb
scas
fisttpl
xlat
mov
fcoml
movsb
cltd
add
adc
ret
mov
pop
fmull
clc
push
sub
xchg
add
insb
stos
or
mov
mov
inc
js
mov
insb
fmuls
mov
cld
imul
or
loopne
inc
pop
sbb
push
dec
jge
gs
cs
jno
ret
cmp
mov
and
xorl
ds
test
mov
aam
incb
cmpsl
scas
ss
mov
test
cwtl
scas
imul
movsb
and
jmp
push
add
test
repz
movsb
enter
jb
jmp
lret
jne
imul
mov
or
push
lock
add
cli
repnz
mov
mov
scas
mov
pop
ja
dec
lcall
and
inc
pop
ficoml
jnp
clc
sbb
call
adc
cmpl
inc
xchg
mov
xlat
xor
dec
mov
cs
lea
and
adc
fidivrl
loope
xor
enter
mov
dec
sub
fldl
fcmovne
and
movsb
jns
nop
pop
bound
rep
ja
mov
fistl
mov
subl
inc
pop
xchg
push
mov
push
dec
ret
mov
cmc
gs
lret
push
jp
xor
xlat
lods
cmpsb
cwtl
jl
loopne
pop
les
jb
fldenv
in
test
mov
lss
aaa
repnz
rclb
and
dec
lock
xorl
jg
ljmp
es
sarb
repz
fcomi
or
and
xor
ljmp
mov
setp
loope
ja
lret
dec
sti
lret
orb
out
inc
mov
rcrl
adc
mov
aas
icebp
mov
mov
imul
sbbl
addr16
jno
mov
xor
orb
mov
in
mov
pop
daa
cmc
scas
pop
lods
mov
repz
sarl
scas
sub
cmpsb
jmp
xor
aad
and
push
mov
in
xor
loope
mov
adc
rorl
push
orl
cwtl
stos
jb
jns
adc
movb
popa
call
mov
cmpsb
xchg
or
inc
cwtl
outsb
movsb
out
xor
in
or
adc
xor
test
fnstsw
mov
sub
repnz
enter
and
push
mov
xor
push
in
sub
and
arpl
jbe
adc
push
jl
pop
inc
adc
enter
fsts
fwait
call
js
ds
inc
hlt
mov
je
dec
xchg
push
pop
sbb
push
ret
test
and
stos
test
ds
dec
addb
cmp
scas
push
jecxz
mov
inc
mov
adc
or
imul
ss
enter
hlt
pop
rcrb
xchg
push
sarb
cmp
sub
cwtl
mov
jne
cs
xor
push
in
std
xchg
out
mov
sahf
mov
cmp
sub
imul
jmp
mov
mov
cmp
loope
and
push
adc
mov
bound
in
mov
mov
sub
mov
ds
das
je
mov
push
scas
sub
subb
andb
mov
pop
movsb
push
mov
enter
push
mov
push
cmp
andb
pop
xor
xor
insl
mov
cmp
andl
inc
mov
sbb
in
mov
rcr
xchg
mov
add
ljmp
cmpsb
inc
mov
popa
xchg
movsb
sbb
mov
aad
or
jle
pop
inc
jp
mov
add
and
mov
jno
movsb
icebp
and
cld
imul
lods
popf
mov
dec
bound
sub
push
mov
sbb
sbb
mov
mov
and
pop
push
adc
cmp
mov
popa
outsb
mov
xchg
cmp
xchg
jmp
insl
sahf
in
cmpsl
pop
jno
sbb
ljmp
jmp
popf
sub
sub
mov
fnstsw
stos
cmp
push
or
sub
inc
and
inc
mov
jecxz
add
sub
sub
adc
aad
leave
decb
or
inc
fldcw
enter
nop
cmpsl
xlat
jno
sbb
jmp
sahf
xor
out
popf
fadd
xchg
dec
mov
cld
inc
jp
and
ljmp
pop
xor
adc
out
mov
mov
mov
mov
mov
and
pop
lahf
negl
lea
mov
and
mov
and
jg
je
es
je
mov
mov
mov
adcb
adc
rclb
adc
test
and
push
adc
mov
dec
movsb
leave
sub
xlat
cld
xchg
arpl
adc
adc
test
movsl
test
fldl
outsb
mov
pop
arpl
ret
xchg
ljmp
xor
outsl
xchg
pop
xor
ret
xchg
and
jg
cmp
xor
mov
cmp
jmp
roll
and
test
inc
jne
jno
cmp
andb
es
cmc
cmp
shlb
minps
push
es
loop
lea
push
inc
test
int3
movsb
push
ret
push
adc
pop
jecxz
imul
sub
sub
fs
or
and
mov
inc
and
aam
jge
popf
inc
mov
add
jns
mov
dec
push
outsb
jnp
xchg
mov
adc
dec
xchg
stos
cmpsl
dec
mov
cmp
pop
aas
and
mov
das
jp
push
lcall
cld
jae
xor
cmc
add
mov
mov
or
je
mov
add
dec
addb
addr16
add
pop
pop
mov
mov
inc
pop
ret
add
or
sub
movsb
pop
stc
pop
sub
insl
ret
rorl
in
sarl
addr16
enter
subl
outsl
lods
stos
or
sub
push
outsb
fdivrl
test
fimull
inc
mov
and
iret
sub
in
jmp
jbe
or
fimuls
and
enter
jae
call
dec
call
xlat
int
gs
dec
mov
or
iret
out
xchg
jns
push
or
push
pop
mov
jge
mov
and
insl
jecxz
jg
das
daa
and
lods
std
repz
imull
mov
lods
inc
mov
mov
inc
inc
repz
cmp
lret
cmpsl
cmp
mov
stos
orb
testl
jns
xchg
fwait
ds
shlb
flds
mov
icebp
test
and
in
nop
jno
fistl
in
aaa
xor
icebp
out
imul
mov
test
dec
lahf
mov
inc
popf
inc
lods
fcompl
cwtl
mov
or
push
xorl
shrl
and
mov
decl
int
mov
pop
xchg
mov
loope
cmp
sbb
fidivrs
insb
cmp
mov
mov
in
and
mov
mov
in
xor
mov
mov
xchg
and
and
test
lret
sub
push
adc
inc
sbb
shll
out
pusha
loopne
loop
test
ljmp
jb
mov
ss
pop
pop
xor
push
adc
xor
in
movsb
jbe
jns
imul
mov
push
and
ljmp
cmp
fadds
bound
inc
cli
or
xchg
push
int
sub
test
xchg
mov
fldt
mov
add
sub
sub
mov
xchg
xchg
jne
or
jl
sahf
hlt
pop
aas
stc
jg
add
sbb
xor
push
push
jno
daa
addr16
mov
movsb
pop
cmpsb
aas
cmp
pop
mov
fisubrs
and
dec
dec
dec
push
sbb
daa
jae
cmpsl
mov
repnz
call
adc
sbbl
daa
out
mov
sarb
push
fcoml
inc
sbb
mov
aaa
push
adc
xlat
insl
inc
popl
div
mov
sub
push
fcmovnb
push
leave
cmp
mov
rcll
sub
and
imul
xor
cs
dec
push
adc
stos
mov
loope
or
or
xor
enter
mov
push
imul
jae
dec
mov
dec
jb
mov
imul
sahf
dec
test
lods
mov
fidivrl
mov
push
out
mov
fwait
inc
sti
push
outsb
std
jl
int
mov
or
sub
cmp
enter
stc
push
jmp
mull
lds
mov
in
inc
adc
fisubl
inc
popa
stos
test
cld
push
test
cltd
dec
call
jge
outsb
add
mov
daa
adc
jns
sub
arpl
filds
stc
movsl
popf
and
ljmp
lret
daa
sub
aam
inc
push
std
push
mov
fisubs
mov
add
lods
out
sub
mov
test
sub
sub
aad
mov
inc
fldt
cmpsl
lcall
mov
adc
shll
sub
outsl
loope
subl
or
mov
sub
andl
enter
cmp
repnz
imul
and
and
shlb
sbb
push
mov
repnz
or
repz
fwait
dec
and
push
mov
cmp
sbb
into
cmp
or
int3
and
xchg
mov
arpl
lahf
pop
ja
in
mov
inc
lret
or
outsb
jge
into
xor
push
stc
xor
mov
inc
lcall
sbb
sbb
arpl
add
mov
xchg
or
movsb
jmp
in
test
int3
fisubl
pushf
fisttpll
pop
enter
mov
test
jg
xchg
ret
and
es
mov
jne
jb
or
fwait
inc
xchg
and
dec
dec
test
pop
inc
mov
mov
pop
sbb
mov
enter
bound
loope
outsb
dec
sbbl
pop
and
stos
push
fstpl
int
out
mov
stos
repnz
adc
xchg
cmovl
idivl
aaa
pop
scas
test
pop
hlt
mov
mov
mov
jae
dec
mov
sbb
jge
int3
xor
mov
add
adc
add
inc
jp
les
sub
idivl
xor
and
jmp
and
shrb
push
and
mov
push
sub
sub
or
mov
jmp
mov
mov
mov
into
cli
xchg
or
adc
lcall
pop
movsb
cld
arpl
bound
lret
cmpsb
and
inc
jnp
jo
inc
push
add
adc
out
jae
movsl
mov
pop
movsl
and
popa
jnp
xchg
add
or
xchg
stos
and
andl
insl
inc
arpl
leave
imul
lods
mov
mov
movsl
sbb
outsb
pop
adc
aas
xchg
and
xchg
jo
adc
inc
cmpl
popa
lret
jg
dec
imul
stc
leave
lret
lcall
leave
jmp
mov
loope
lds
aad
int3
xchg
stos
sub
and
push
pusha
add
sub
inc
enter
gs
pop
push
mov
mov
jnp
daa
push
ret
pushf
es
mov
inc
jns
das
dec
ja
lods
outsb
lock
dec
ja
cmp
enter
jo
test
inc
inc
sti
or
int3
jmp
fisubs
roll
xchg
shrl
sbb
subb
mov
ret
inc
loop
mov
ja
jp
pop
jnp
ret
push
mov
mov
mov
icebp
mov
in
ret
xchg
lret
dec
cmp
fs
fidivl
mov
pop
outsl
cmp
dec
in
jae
lods
cmpsl
cmp
cmp
cmp
rorl
cmpsl
dec
outsl
adc
inc
mov
aas
or
jne
sbb
pusha
jae
xchg
pop
mov
push
pop
or
stc
test
inc
sub
cmpsb
dec
cmp
leave
int
xor
push
or
into
mov
push
jg
push
popl
rcll
push
addr16
lods
das
mov
and
arpl
dec
dec
mov
mov
dec
jg
or
pop
xchg
mov
jecxz
pop
das
out
call
sub
test
add
mov
iret
or
movb
fldt
scas
jl
add
cmpsl
and
pop
out
stos
sbb
or
in
mov
mov
daa
or
pop
push
and
sti
arpl
or
mov
mov
cmpsl
or
xchg
outsl
daa
loope
sti
mov
add
pushf
jecxz
or
adc
aas
and
pop
sub
sub
jg
mov
lret
loop
or
mov
sbb
inc
and
pop
rcl
lret
sub
mov
cmpsl
stos
cmc
sahf
mov
jbe
in
push
sub
movsl
bound
aaa
adc
leave
in
inc
sbb
ret
cwtl
popa
call
jmp
mov
fwait
inc
loop
sub
jnp
iret
imul
mov
call
loop
ds
adc
mov
pusha
and
ret
int3
roll
or
sub
push
sbb
sub
stos
cmp
pop
call
jmp
aam
inc
test
jnp
mov
mov
push
sub
push
cwtl
fst
sbb
ja
sarb
xchg
and
pop
sbb
jl
mov
jl
sbb
pop
xchg
int
aad
mov
enter
sub
fwait
int
inc
push
push
mov
adc
sbb
pushf
outsl
adc
and
mov
or
push
pop
test
movsbl
or
jb
and
out
das
mov
dec
sti
popa
mov
cmp
pusha
mov
and
pop
dec
call
daa
pop
jle
jb
add
daa
xor
cmpsl
and
enter
sub
xor
imul
lret
pop
and
movsb
xchg
push
lea
jle
push
cmp
int
add
mov
mov
addr16
xor
lret
cmp
sub
ret
mov
in
mov
les
mov
leave
xlat
add
ret
lahf
stos
es
lret
call
mov
dec
or
pop
in
lea
xlat
lahf
jmp
jp
mov
jo
inc
add
jno
or
fsubs
or
add
mov
dec
cmpsb
leave
gs
adc
sbb
jns
test
or
arpl
addr16
jb
rcll
sbb
mov
xchg
sbb
ret
jle
cmpsb
cmp
je
mov
push
std
add
ret
insl
cli
fmull
cmc
mov
stos
mov
jecxz
mov
dec
aam
or
jno
xorb
fcomps
stos
pop
sbb
movsl
leave
addl
mov
out
out
adc
cs
ljmp
fs
xchg
xchg
iret
mov
das
or
nop
ds
pop
adc
mov
test
jle
inc
lcall
fcmovnb
lea
leave
inc
mov
movsl
inc
cld
cmp
inc
loope
cmp
jb
mov
mov
jecxz
ljmp
mov
sub
sti
jge
call
lahf
mov
fimuls
mov
or
fs
adc
mov
push
cld
lcall
pop
lock
lret
int
inc
jp
jae
int
lods
pop
or
sbb
daa
or
adc
mov
inc
push
enter
mov
scas
jno
int
outsb
mov
mov
ret
mov
mov
adc
inc
sbb
sbb
out
xchg
stos
xlat
les
inc
mov
sbb
pop
sbbb
mov
aas
xchg
out
int
into
and
xchg
stos
lods
jo
adc
cmpsb
mov
aad
stos
icebp
mov
or
pop
xor
std
cltd
sub
test
mov
jmp
ljmp
mov
mov
mov
fdivp
sbb
dec
cmc
cmpsb
cmp
sbbl
mov
out
push
push
rolw
aas
and
inc
lods
inc
fldl
stc
daa
or
mov
mov
jecxz
stos
scas
clc
out
sbb
call
push
out
and
fstp
mov
das
std
mov
std
jg
mov
sti
fld
fcmovnu
adc
and
call
imul
push
sub
push
inc
cmpsl
mov
call
aam
add
mov
or
mov
dec
call
testl
xchg
and
lods
pop
cmpsl
pop
pop
dec
ja
push
and
mov
dec
lea
and
jae
fldl
mov
fstpt
stc
aam
in
push
xor
popa
mov
test
xchg
cmpsb
hlt
or
dec
lods
jle
icebp
or
ljmp
jmp
add
dec
xor
and
jno
jge
movsb
sbb
mov
mov
out
rol
xchg
or
out
and
scas
mov
mov
pop
lahf
mov
leave
and
mov
aam
outsl
cmp
icebp
cmpsb
mov
cmp
fcoms
gs
and
or
jno
push
pop
add
inc
stc
mov
fndisi(8087
and
gs
into
in
in
inc
jge
xor
sub
sub
in
xchg
loopne
sbb
mov
mov
mov
out
xchg
and
out
and
xor
outsl
cmp
fldt
test
sub
jle
pop
shrb
fimull
push
pop
add
test
xchg
push
cmp
mov
repz
mov
jge
adc
or
lahf
scas
and
mov
imul
xchg
pusha
stos
js
pop
mov
add
movsb
lahf
in
xlat
cld
sub
lods
fisubrs
ret
cmp
hlt
or
cld
mov
xor
jb
stos
pop
fbstp
inc
pop
notb
stc
in
gs
test
sub
andl
inc
xchg
mov
inc
js
movsb
mov
inc
enter
adc
or
sbb
fwait
scas
xchg
scas
mulw
imul
sub
in
das
into
or
stc
inc
cli
xchg
dec
and
clc
fs
stos
and
ret
enter
lods
int3
cmc
mov
mov
push
xchg
cmp
jge
stos
movsb
lods
pop
cs
cmc
and
and
stos
xlat
test
mov
repz
imul
adc
ljmp
jae
sub
cmpsb
popf
outsb
pop
loopne
xchg
mov
daa
movsb
and
fs
adc
mov
and
gs
dec
mov
jecxz
mov
jno
pop
out
inc
data16
stos
push
fldcw
xor
imul
sti
mov
ffreep
and
lcall
mov
adc
cmpsb
pop
movsb
xchg
outsl
cmc
pop
lret
mov
cltd
aaa
push
inc
lcall
xchg
je
and
push
ljmp
mov
add
and
cmpsl
mov
xchg
push
adc
inc
ret
das
je
add
in
jp
andb
jo
cwtl
xchg
lret
xchg
leave
fdivrp
and
cmpsb
mov
int3
adc
movsl
and
xchg
aas
test
jge
mov
mov
icebp
repz
bnd
js
and
and
mov
jl
inc
jno
std
xchg
mov
or
movsb
nop
mov
cwtl
insb
fbld
shlb
inc
mov
int3
roll
cwtl
jne
enter
stos
in
mov
fs
adc
and
fucomp
pop
movsl
mov
sahf
push
mov
sub
jne
cmp
mov
and
jae
inc
jns
test
ds
stos
xor
inc
adc
leave
es
dec
mov
adc
ret
mov
icebp
push
outsb
dec
pop
aaa
out
fldt
sbb
xor
xchg
out
ds
push
and
out
or
sub
and
xor
mov
mov
jge
in
adc
xchg
inc
call
inc
mov
adc
mov
cmp
xor
pop
xor
jae
in
and
int3
imul
dec
lods
cmpsb
dec
adc
mov
xor
sbb
mov
and
dec
mov
mov
jmp
std
xchg
push
jno
mov
mov
aam
push
es
inc
sbb
push
sbb
movsb
inc
insl
add
jp
movsl
or
inc
imul
cld
dec
shlb
xchg
loop
push
xchg
testl
in
pop
sub
sub
and
mov
sahf
mov
out
jnp
pop
subl
adc
add
imul
cmp
inc
mov
mov
mov
imul
and
and
andl
cmp
inc
enter
popf
xor
cmpsl
sub
add
cmpsb
sbb
jmp
popf
aas
mov
or
lods
imulb
pop
sub
xor
and
cmp
sbb
sar
mov
jne
cli
pop
fwait
mov
dec
lods
push
or
fcoml
hlt
faddl
mov
decb
imul
jecxz
ss
and
and
and
into
sarb
cli
pop
lds
push
andb
sbb
jecxz
mov
fimull
movsl
adc
cmp
subb
out
adc
push
sub
ret
push
into
push
pop
push
jle
stos
jge
mov
test
push
sar
fnstsw
movsb
cmpsb
push
stc
sub
pop
cmp
xchg
stc
lahf
xchg
pop
stos
mov
fldt
bound
sub
mov
das
sbb
sub
cltd
fwait
popa
test
xor
stos
ss
lods
mov
ja
movsb
popf
sbb
rcr
test
inc
push
mov
mov
add
repz
test
loop
or
scas
xor
std
cmp
fmuls
mov
shll
add
mov
inc
and
add
push
scas
and
xchg
test
das
jne
adc
mov
loopne
xor
mov
call
mov
filds
outsb
cmpsl
cmp
inc
xchg
daa
icebp
mov
jno
nop
inc
mov
lcall
mov
loopne
mov
mov
jle
fs
sbb
xchg
rcll
imul
mov
dec
mov
enter
mov
and
push
inc
test
enter
push
scas
loope
addl
xchg
popf
call
xchg
mov
mov
les
clc
add
adc
jnp
mov
cmp
addr16
mov
mov
es
test
cmpsl
mov
jne
xchg
out
dec
adc
into
adc
cmpb
inc
stc
repnz
jns
addl
jne
and
push
mov
rorb
mov
pusha
in
pop
mov
adc
xchg
hlt
jae
mov
sub
sub
mov
inc
pop
lea
nop
into
and
int3
pop
in
std
xchg
rorl
mov
push
stos
imul
mov
int
mov
imul
lahf
out
gs
loop
scas
aas
movsb
xor
xchg
loope
daa
out
lret
imul
sahf
ljmp
push
cli
xor
cmp
test
push
lea
lea
mov
pop
sbb
xlat
ror
fldenv
jge
and
and
pop
shll
mov
in
inc
cli
adc
mov
xlat
cmpsl
and
fists
test
mov
insb
rcrl
cmp
pusha
cmp
mov
loop
ja
test
bound
push
imul
jmp
sub
es
andb
enter
xor
jbe
pop
jge
or
or
mov
outsb
cmp
addr16
xor
pop
pusha
and
js
push
push
inc
jno
enter
dec
fsubl
jmp
ret
jne
loope
cmpsl
testb
mov
jb
inc
add
and
jecxz
movsl
and
mov
out
or
cli
mov
jns
mov
daa
pop
mov
mov
es
jnp
icebp
movsb
or
inc
and
jle
jge
sub
xor
cs
sub
cmp
pop
mov
cmc
xchg
mov
scas
sub
cli
stos
jns
mov
jae
ds
dec
nop
cmpsb
call
cs
xchg
loop
loope
sti
orl
aas
cmp
in
fs
stos
cmp
jnp
sub
mov
and
inc
and
cltd
test
inc
push
and
sahf
cwtl
pop
and
adc
cmp
stc
aas
pop
fisubrs
xor
mov
mov
imul
fistpl
insb
popa
ret
inc
dec
mov
adcl
lds
xchg
ss
outsb
mov
xchg
in
in
push
dec
and
mov
mov
shll
adc
lea
lcall
sub
push
bound
push
sub
jne
and
ffreep
lahf
adc
mov
sub
mov
inc
push
and
cmp
add
xchg
dec
mov
xchg
ljmp
mov
cmp
adc
es
loop
sub
sbb
dec
and
jle
inc
inc
mov
inc
das
lods
fldt
xchg
test
test
stos
pop
scas
mov
pop
das
leave
cwtl
lea
push
add
push
jecxz
inc
in
and
xor
ret
inc
pop
outsl
mov
push
bound
mov
adc
loope
xchg
int3
cmp
xor
cmp
arpl
rcll
les
mov
push
in
das
inc
pop
out
stos
out
mov
mov
inc
ljmp
pop
scas
std
adc
lcall
inc
subb
cmp
cmp
js
or
sub
mov
cmp
or
mov
xor
scas
inc
mov
test
dec
pmaxsw
add
xchg
adc
or
out
and
scas
sarl
add
jmp
sti
sbb
notl
and
sub
or
cmc
xor
in
push
addb
add
sub
mov
and
les
jmp
jnp
fdivr
clc
frstor
dec
into
movsl
sub
out
fdivrl
sub
test
insl
inc
mov
popa
and
mov
cmp
mov
inc
sub
mov
ret
inc
or
leave
xchg
xchg
mov
xor
push
int3
xchg
pop
and
dec
jp
ja
jns
pop
adc
nop
cmpsl
imul
loop
push
xor
cmp
cmpsl
push
fcmovnu
dec
ret
leave
cmpsb
lret
lret
enter
mov
inc
insb
jge
call
cwtl
push
int3
xchg
cmpsl
sub
xor
xor
push
or
popa
jmp
dec
out
shl
inc
pop
mov
loope
jnp
ljmp
arpl
adc
xchg
jae
mov
xor
push
xlat
mov
daa
sub
sub
mov
mov
xor
data16
jns
jmp
movsb
or
jno
scas
outsb
hlt
pushf
sub
outsl
mov
movaps
push
mov
hlt
mov
jno
pop
jmp
test
cmp
loop
fsubrs
mov
and
addl
enter
ret
push
inc
xor
push
sub
push
imul
xorl
sti
pop
push
push
adc
sub
xchg
sbb
jmp
and
ja
pop
jne
aad
mov
test
pop
cmp
es
push
xchg
sbb
incl
or
aaa
fldenv
push
xor
add
sub
jne
dec
test
push
inc
add
jmp
dec
dec
insl
jns
or
xchg
mov
ljmp
pop
addr16
jmp
cs
dec
jo
in
mov
xor
push
std
add
and
mov
jo
dec
push
hlt
ja
adc
sub
jmp
mul
xchg
lock
sbb
sub
test
enter
ret
test
pop
xchg
mov
pop
js
and
jge
pop
pop
pop
jae
sbb
xchg
lods
and
inc
cld
pop
adc
pop
inc
es
scas
xchg
mov
inc
sbb
movsl
sub
in
sbbl
gs
enter
lods
loop
subb
mov
shll
ljmp
or
insl
and
push
fsincos
pusha
sbb
dec
cmp
add
pop
loopne
mov
cmp
mov
dec
inc
mov
leave
imul
cmpsl
sbb
out
or
mov
xchg
es
stc
daa
pusha
or
mov
inc
cmpsb
mov
int
push
cltd
int3
push
jne
inc
and
addb
imul
testb
andb
push
sub
movb
sub
dec
add
mov
xchg
cli
add
enter
test
cmp
test
test
fildll
fmuls
and
xchg
imul
pop
popa
sub
push
fcom
cmp
mov
pushf
ret
inc
mov
imul
add
adc
push
mov
add
sub
jle
aas
adc
in
adc
pop
imul
jmp
mov
push
and
test
das
inc
push
test
sub
sub
and
cmp
loope
lcall
push
fwait
movsb
stos
push
push
xor
sub
sysret
stos
hlt
add
pop
stos
cld
add
or
mov
addr16
ret
stos
sub
in
jle
jno
das
clc
push
and
std
dec
push
adc
inc
scas
divl
mov
mov
pop
mov
hlt
or
scas
dec
popa
cmpl
lret
cmp
fdivl
xchg
jmp
sbbl
or
inc
xchg
sbbl
and
arpl
rolb
sub
jp
mov
loope
pop
les
dec
xor
and
sub
popf
in
andb
fwait
sbb
test
out
les
loopne
movb
lods
pop
jns
xor
push
jno
cmpsb
outsl
sahf
test
ss
and
lcall
bound
lds
xor
mov
movsl
push
xchg
idivl
and
pop
adc
xchg
dec
sub
stos
add
cmpsl
xchg
shrb
add
icebp
incl
fs
into
dec
mov
ljmp
ret
call
xor
mov
adc
outsl
test
ljmp
xchg
test
je
pop
dec
js
jp
out
js
sub
stc
lock
or
xor
sub
out
hlt
or
test
sti
and
mov
cmc
mov
sub
fistpll
xchg
pop
in
jecxz
xchg
lret
mov
loope
xchg
inc
push
sbb
insl
sbb
and
push
adc
xchg
lret
mov
mov
pop
insl
xor
bound
popa
loopne
sub
jno
daa
xchg
sub
lret
loopne
jmp
jg
in
pusha
pusha
hlt
and
lcall
sub
aam
cs
sub
add
add
mov
xor
xor
icebp
and
xchg
or
jb
xor
xchg
stos
xchg
shrl
aas
mov
xor
dec
jecxz
xchg
stos
xchg
mov
mov
movsb
das
mov
lods
outsb
enter
dec
movsl
adc
inc
movsb
test
shrd
lcall
add
pop
fsts
and
in
add
pop
inc
int3
sub
cli
pop
mov
adc
push
movsl
or
scas
jle
xchg
fidivl
mulb
push
mov
sub
enter
push
jmp
cltd
out
or
testb
inc
inc
dec
leave
gs
and
mov
cmp
cmpsl
push
les
fldenv
imul
mov
mov
push
lcall
inc
ret
shrb
and
outsl
scas
jecxz
fwait
lea
jle
das
loop
mov
daa
enter
into
mov
mov
mov
xchg
leave
das
ljmp
adcl
popa
mov
mov
sti
and
inc
stos
inc
mov
out
dec
xor
sub
mov
or
dec
decb
or
dec
call
jnp
push
out
sbb
outsb
xchg
lds
sub
push
aad
fisttps
mov
mov
xchg
arpl
push
sbb
inc
mov
or
xchg
data16
add
js
out
imul
ljmp
loop
cmc
xchg
mov
inc
ret
push
pushl
test
call
jne
or
enter
lods
filds
jb
cmp
popa
lea
fwait
pop
pop
fs
enter
repnz
orl
jecxz
pop
hlt
icebp
xor
stc
mov
in
hlt
sbb
adc
leave
test
mov
mov
xchg
outsl
cmp
andb
mov
mov
lret
push
jae
leave
insb
scas
int
adc
jg
xor
mov
stos
cmp
lods
push
lretw
scas
jge
enter
and
inc
adc
inc
adc
jo
sub
mov
dec
ficoms
pop
and
add
pop
sbb
in
out
js
xor
xor
jno
adc
movsl
stos
sub
adc
mov
ret
notb
stos
jmp
xor
mov
xor
inc
jle
mov
and
and
outsl
pop
stc
xchg
in
je
stos
loopne
xchg
ret
add
leave
and
add
and
pop
inc
scas
cmpsl
sbb
aad
or
jmp
sub
enter
cmp
push
push
cwtl
inc
push
icebp
xchg
jge
add
dec
daa
and
insl
cwtl
pop
add
out
out
sbb
cmp
cmpsl
mov
lea
jbe
movsb
xlat
test
xor
pop
mov
pop
shr
nop
inc
jmp
or
rorb
mov
jnp
or
aam
mov
je
mov
ds
test
xchg
ja
and
jmp
dec
mov
adc
mov
xor
call
movsl
and
and
add
subl
popf
xchg
mov
or
icebp
jg
movsb
lcall
mov
mov
pop
jno
loope
sbb
sub
popa
das
xchg
push
scas
test
mov
mov
rorb
loopne
cmp
jmp
movsl
mov
xor
fld
in
mov
mov
ftst
mov
mov
cmp
aaa
jecxz
inc
dec
int
push
ds
rol
jmp
jne
jns
loope
stos
out
je
and
test
mov
stc
arpl
xor
and
inc
cld
pop
fstl
into
in
sub
enter
adc
or
inc
pop
push
push
cld
and
inc
fldt
and
cmp
xchg
mov
imul
in
mov
mov
enter
push
mov
leave
sub
into
and
sub
sub
insl
cmpsl
in
mov
or
int
mov
mov
das
mov
cmp
inc
mov
cmpsb
or
imul
dec
imul
pop
push
push
mov
mov
mov
or
push
inc
fmuls
das
movl
loopne
jp
push
int3
cmp
fdivp
nop
mov
xor
lahf
adc
xchg
addr16
jmp
jno
jmp
daa
inc
jp
es
or
pusha
xchg
add
pop
gs
outsb
mov
pop
mov
xchg
inc
icebp
iret
je
in
movsl
testl
push
movsb
or
int3
add
sbb
jne
je
js
shrb
sub
lods
mov
es
and
xor
and
adc
mov
xor
out
push
mov
mov
cmpsb
adc
arpl
fmul
jns
in
push
push
loop
bound
jb
adc
inc
popf
and
adc
xchg
jg
pop
xchg
movsl
inc
aas
sub
mov
sbb
sub
pop
sub
nop
sub
mov
dec
inc
sub
cmp
inc
mov
jbe
push
jecxz
pop
fstpl
inc
mov
fs
cld
pop
cmpsl
jb
dec
cmp
mov
int3
scas
stos
bound
cmpsb
sub
push
mov
sbb
loop
arpl
mov
mov
repnz
jecxz
mov
and
inc
mov
lret
add
lret
jg
cmpsl
jnp
data16
mov
push
sbb
xor
inc
mov
jg
inc
or
dec
aad
add
sub
mov
mov
sar
sbbl
xchg
mov
sub
xchg
stos
loopne
jnp
pop
dec
fsubl
inc
adc
loopne
fadds
popa
xlat
jge
sub
jp
or
mov
daa
sbb
hlt
mov
pop
les
push
pusha
and
mov
lret
inc
lret
ret
and
test
mov
popa
xor
adc
inc
ret
ds
sbb
sti
inc
pop
lods
scas
or
movsb
mov
inc
andb
dec
dec
in
mov
add
das
cmp
adc
loopne
lret
ds
or
out
sti
push
std
lret
jp
icebp
ficoms
shrl
mov
in
sti
fwait
loop
call
cli
cmpsl
sbb
push
add
pusha
fadds
mov
xlat
cmp
and
jb
aas
xorb
and
or
sub
jbe
inc
push
cld
addr16
mov
lcall
leave
cmp
cmp
or
fcmovnu
ljmp
jp
es
les
gs
xchg
dec
and
jp
jmp
sub
xchg
insb
popa
inc
popa
and
lock
inc
and
jnp
popf
inc
in
aaa
and
jns
stos
arpl
fbld
pusha
ret
daa
jecxz
pop
pop
ret
mov
cld
dec
xchg
stos
xchg
jecxz
mov
push
popa
enter
aad
inc
outsb
mov
sti
push
arpl
popf
mov
mov
lea
outsb
pop
jp
cld
cmp
mov
fildl
test
adc
mov
stos
adc
sub
jmp
inc
xor
rorl
mov
fwait
sbb
sahf
push
push
lcall
pop
scas
inc
jb
popf
cmp
aaa
adcb
jb
popa
subb
fwait
pop
sub
punpckhdq
xchg
pop
mov
pop
mov
scas
and
ficompl
sbb
imul
pop
mov
stos
decb
push
mov
adc
clc
nop
or
cwtl
pop
xchg
sub
outsl
pop
adc
iret
pop
popa
andb
stos
xchg
arpl
fsubrs
sub
loop
call
pop
enter
cmc
inc
repz
mov
mov
jb
cmpsb
or
xor
subb
pusha
mov
aaa
rcrl
jmp
add
jmp
add
adc
les
mov
jne
call
jb
fsubrs
popf
das
pop
mov
jle
and
movsb
jecxz
add
or
inc
mov
mov
sub
ss
in
and
sbb
adc
or
xlat
or
popf
shll
add
fistps
sub
mov
and
call
jns
stos
sub
jl
push
in
mov
mov
and
aaa
sub
jnp
pop
int
cmp
jns
outsl
jns
push
sub
shl
xchg
aaa
add
mov
jbe
nop
stos
popa
popa
xorl
sub
add
mov
movsl
or
inc
mov
inc
pushf
add
and
enter
outsl
daa
orl
mov
sbb
push
ss
movsb
mov
xchg
leave
test
out
dec
xor
testb
mov
add
sub
cmpsl
rcr
in
mov
push
addr16
jp
sbb
imul
cmp
add
stos
mov
stos
sbbl
or
adc
cmp
test
or
dec
cmpsb
imul
or
inc
mov
dec
inc
mov
cmp
xchg
or
dec
ljmp
mov
daa
lods
sub
and
aas
sub
mov
mov
and
ds
add
lds
or
sbb
inc
push
mov
mov
pop
sbb
es
cmp
cmp
pusha
movsl
test
fwait
rolb
mov
and
or
mov
inc
cmp
inc
lahf
shlb
jne
jae
xchg
sbb
dec
call
mov
arpl
or
jp
es
rclb
into
mov
adc
es
data16
leave
pop
rclb
popa
insl
push
pop
fmulp
mov
fwait
or
push
icebp
lahf
mov
stos
or
pop
pop
stos
rcrb
add
faddl
xor
sbb
dec
sub
lods
mov
mov
scas
subl
inc
dec
add
mov
ret
mov
cwtl
dec
cmp
sarb
mov
test
mov
cmpb
test
test
out
add
mov
mov
test
ret
sbbl
jo
xor
mov
cmp
push
mov
sub
imul
sub
lods
push
andl
lahf
mov
fldenv
sarl
push
jne
sub
lds
push
xor
mov
xchg
add
loope
arpl
mov
subb
cmpsl
mov
mov
lods
mov
mov
and
mov
mov
xor
imul
loope
lcall
bound
mov
mov
mov
mov
mov
mov
mov
call
cmpsb
cmp
adcb
fstpl
mov
mov
and
mov
inc
mov
subb
scas
mov
xor
popa
fwait
int
mov
mov
xor
push
cmpsl
mov
cmpsl
lcall
mov
jp
lods
mov
stc
mov
or
loope
push
add
xor
jl
movsb
sub
imul
adc
sbb
punpckhdq
mov
add
lea
mov
add
mov
shlb
sahf
dec
in
mov
mov
pop
adc
mov
or
movsb
pop
mov
add
cld
stos
mov
adcb
jnp
lds
pusha
mov
in
adc
mov
add
scas
xor
das
cmp
mov
mov
in
add
mov
sub
imul
dec
mov
arpl
notl
pop
outsl
jns
fisttpl
mov
mov
ja
test
mov
and
inc
jnp
in
pop
addr16
stos
mov
dec
pop
sub
inc
movsb
test
jb
mov
lods
jmp
xchg
xchg
cmpsb
xchg
jecxz
lods
aaa
imul
mov
mov
sub
sahf
out
mov
mov
dec
mov
and
mov
mov
sub
lods
scas
nop
mov
sub
mov
test
mov
mov
lcall
mov
inc
adc
xchg
test
mov
inc
xchg
xor
mov
mov
dec
jae
or
xor
and
aad
or
xor
daa
scas
addr16
add
sub
stos
mov
pop
out
inc
mov
mov
mov
xchg
lret
xchg
inc
movsl
xchg
xchg
jp
mov
js
das
xchg
dec
mov
add
dec
mov
mov
shlb
xor
movsl
addr16
shlb
xor
shll
xorl
xchg
test
jo
cmpsl
mov
jmp
scas
mov
mov
stos
lahf
jae
mov
pop
sub
aas
cmp
mov
sbb
jg
cmpb
mov
xorb
xchg
scas
das
mov
and
cmpsl
mov
mov
sub
jae
stos
addr16
or
mov
bound
and
jmp
or
imul
mov
andb
mov
xchg
movsl
imul
inc
outsl
popf
test
and
adc
rcr
arpl
int
mov
imul
rorb
lcall
jne
mov
mov
jbe
fdivrs
cld
adc
scas
mov
mov
mov
inc
mov
das
mov
adc
mov
cltd
scas
mov
and
xorb
sbb
cmp
inc
jg
and
ljmp
sub
imul
add
into
imull
jae
jecxz
notl
adc
pop
or
mov
mov
adcb
mov
call
repz
lods
dec
fisubl
mov
pop
mov
test
xchg
or
mov
inc
push
jnp
arpl
out
icebp
mov
mov
nop
icebp
inc
loopne
lcall
xor
cmpsb
cmp
cmp
mov
xor
mov
cmp
mov
mov
lods
sti
push
repz
loop
mov
pop
movsl
jo
insb
mov
shlb
jmp
nop
addb
jmp
pushf
jae
lods
or
insl
mov
mov
scas
mov
shrl
mov
mov
movsb
mov
mov
mov
lret
mov
lret
inc
sbb
bound
loope
xor
subb
mov
mov
inc
push
mov
xorb
sbb
loopne
push
mov
lods
add
bound
cmp
cmp
mov
jb
pop
add
sub
xor
adc
mov
addr16
xchg
shll
data16
mov
mov
mov
xor
imul
mov
xor
mull
addb
rep
movsl
xchg
stos
test
mov
add
and
jmp
push
and
jmp
inc
xor
mov
lods
dec
hlt
test
into
mov
mov
movsb
jge
xor
pop
andb
fsubl
xor
mov
call
xchg
mov
mov
mov
outsl
jg
pop
mov
cmpsl
cwtl
outsb
repnz
stos
test
mov
movsb
mov
mov
jae
daa
xchg
push
out
test
std
popl
mov
sti
push
mov
stos
mov
stos
js
addb
pop
mov
addr16
lods
xor
mov
mov
test
mov
popa
mov
and
imul
xor
js
xorb
test
imul
cmpsl
add
mov
xchg
inc
xor
sub
ds
add
mov
ljmp
mov
and
mov
mov
jnp
jg
jge
xchg
push
add
pop
cltd
xchg
mov
dec
stos
or
push
cmpsl
jg
xor
sub
dec
xor
test
xor
mov
mov
dec
iret
add
and
pushf
addb
mov
mov
movsl
xchg
cs
scas
mov
movsb
pusha
mov
scas
fbld
pushf
orb
cmpsb
mov
cltd
cmpsl
add
mov
mov
jne
mov
cmpsl
sub
mov
xchg
sub
das
xor
xcrypt-ofb
cmpsl
scas
fisttpl
mov
or
inc
imul
testl
es
fcmovnb
mov
andl
xchg
ljmp
mov
mov
xor
mov
mov
mov
and
out
and
mov
adc
mov
push
add
gs
or
adcb
cmpsb
sub
lods
adc
shrl
outsl
test
out
arpl
ret
jl
xor
ret
mov
xchg
ud1
jno
push
push
sub
dec
jbe
arpl
dec
sbb
jo
aam
and
fdivs
mov
lods
inc
faddl
cmp
mov
adc
out
jns
cmpsl
mov
jmp
dec
movsb
cmpsl
je
imul
stos
mov
jmp
xchg
mov
mov
or
sbbb
inc
pop
mov
pushf
das
in
inc
dec
mov
mov
icebp
xor
in
jg
lea
lods
xor
jb
pusha
and
movsl
aaa
or
imul
out
inc
loope
das
inc
mov
mov
cwtl
mov
sub
xchg
testb
inc
test
rolb
ds
mov
mov
orb
pop
lods
jnp
scas
pop
mov
cmpsl
mov
movsb
mov
das
sub
repz
ss
mov
je
jae
push
xchg
inc
insl
add
enter
jmp
cli
mov
mov
xchg
inc
aaa
push
and
inc
rorb
popl
mov
xor
jp
or
jb
repz
daa
aaa
dec
mov
nop
mov
test
jl
mov
xchg
mov
mov
mov
mov
lds
mov
mov
xchg
and
push
add
add
cmpsl
lods
inc
jmp
movsb
cmpsb
cmpsl
cwtl
dec
mov
cmp
xchg
push
movsl
mov
and
aaa
mov
movsl
adc
mov
stos
imul
mov
mov
dec
mov
mov
popa
mov
subb
lods
cmpsl
mov
fwait
dec
mov
movsb
sub
xor
movsb
aas
mov
xor
mov
mov
mov
or
and
pop
xor
mov
mov
out
fs
mov
andl
cmpb
and
lods
movsl
cld
cmp
xor
das
xchg
imul
mov
mov
test
inc
orb
sbb
xor
dec
enter
jmp
movsb
mov
add
or
movsl
mov
mov
lret
std
mov
test
enter
movsl
xor
mov
dec
mov
cmpsl
scas
mov
inc
mov
sub
dec
call
jmp
movsl
mov
xor
addb
sbbb
xor
cmp
mov
mov
xor
push
imull
cmpsl
cwtl
sbb
jl
in
loopne
mov
push
mov
mov
addr16
mov
pushf
test
pusha
sub
clc
cmp
jmp
pusha
lea
je
clc
cmp
jmp
clc
shr
lea
clc
cmpl
push
jmp
add
inc
outsb
fs
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addl
sbb
sub
dec
mov
or
dec
push
cmp
arpl
arpl
js
loop
cld
jle
aam
subb
and
mov
test
pop
data16
insb
add
je
adc
andl
dec
lods
push
movsb
mov
jg
and
sbb
cwtl
add
mov
lcall
inc
out
jle
push
mov
out
pop
je
xchg
lea
lea
ja
call
add
dec
jae
popa
fs
gs
fs
je
add
push
add
rolb
cld
int3
push
add
push
add
ret
push
add
push
add
inc
push
add
enter
dec
push
add
add
and
add
mov
push
add
dec
push
add
les
add
dec
push
add
mov
push
add
push
add
or
test
rolb
jle
or
imul
push
add
pop
or
pop
mov
push
add
daa
pop
add
int3
push
add
push
add
push
add
push
add
push
or
js
pop
add
enter
aad
add
push
add
sbb
add
push
add
rolb
sbb
push
add
or
jge
push
add
add
or
fstpt
push
add
lds
add
sbb
add
mov
push
add
push
add
ret
push
add
push
add
adc
or
cmc
mov
push
add
roll
sub
or
cmc
and
or
sbb
push
add
mov
or
xchg
dec
push
add
push
add
pop
add
sbb
add
pop
add
dec
push
add
fimull
add
rolb
stos
roll
push
mov
push
add
sub
add
add
add
push
add
push
add
push
add
or
loopne
push
add
and
add
mov
push
add
or
mov
movl
add
pop
or
cmpsl
rorb
add
movl
add
add
or
pusha
incb
add
dec
push
add
push
add
enter
dec
push
add
dec
push
add
fimuls
add
fimull
add
add
add
inc
push
add
push
add
push
add
push
add
add
add
push
add
add
add
mov
clc
bt
stc
bt
shr
pushf
call
add
inc
gs
gs
imul
ljmp
test
adc
data16
adc
std
fimuls
fs
ret
mov
dec
and
mov
fildl
mov
or
pop
sub
out
mov
std
push
add
xchg
lcall
adc
sbb
and
icebp
sub
xor
lcall
sbb
adc
lea
inc
sub
leave
sub
xor
je
addr16
adc
lret
cmp
sarb
xor
xrelease
sahf
cmp
lcall
adc
int
addl
sbb
fxch
mov
mov
sbb
mov
and
inc
leave
mov
sahf
sub
mov
mov
adc
fs
sbb
xchg
mov
push
or
mov
push
pop
dec
xor
mov
pop
xchg
jb
lahf
pop
mov
add
sub
je
lea
lahf
mov
mov
mov
push
test
xor
enter
out
pop
cmp
jl
adc
sub
sub
sub
jo
testb
push
push
jmp
mov
aaa
mov
xor
mov
xchg
ret
and
ret
js
rolb
sub
je
dec
pop
xchg
lea
jae
test
stc
xor
pushf
pushf
call
lea
ja
push
movb
imul
pushf
pushf
add
movw
pusha
lea
jmp
pushf
bt
imul
stc
add
pusha
pushl
movb
lea
jmp
cmp
jg
or
push
inc
icebp
dec
cmp
pop
push
outsw
pushf
loop
fdivrl
shll
das
sub
xchg
imull
lods
movsl
bound
pop
xlat
cmp
jno
jnp
incb
shrb
sub
fidivl
es
fistpll
and
xchg
and
imul
mov
dec
xor
data16
jecxz
push
test
sub
cmp
out
cmp
mov
xchg
ljmp
loope
pop
je
adc
pop
lea
bswap
not
pop
pushf
pop
not
pop
push
call
outsl
or
cwtl
mov
cmpb
jecxz
sbb
mov
pop
mov
outsl
mov
xchg
pop
push
pusha
sti
jns
and
lods
movsb
pusha
xchg
xchg
mov
sarl
repz
orl
cmp
test
shrb
cmp
jno
je
roll
outsl
insl
jo
jb
push
je
imul
add
cmc
jmp
lea
jbe
xadd
mov
xadd
mov
and
adc
add
pushf
bts
bts
mov
bts
cmc
movsbw
add
xor
xor
sbb
movl
sar
movzbw
bt
shl
mov
stc
mov
push
cmp
test
mov
movb
lea
je
clc
sub
push
mov
add
shrd
rcr
mov
cmc
call
add
push
gs
outsb
push
gs
js
gs
imul
gs
mov
pop
orb
dec
fsubrs
out
xor
jbe
enter
xor
fimull
hlt
push
adc
out
mov
and
jmp
pop
cli
inc
aaa
push
push
mov
loope
inc
stos
push
pop
dec
fimull
je
or
dec
xor
dec
or
pushf
sub
insb
add
arpl
test
ret
push
pop
sub
lcall
push
mov
dec
adc
je
xor
sahf
mov
iret
rorl
inc
mov
lahf
je
xchg
mov
jl
pusha
aaa
fldl
pop
aas
sti
jns
scas
inc
aaa
pusha
adc
or
leave
sub
push
sub
pop
je
xchg
adc
add
imul
jmp
cmc
push
imul
stc
add
pushf
pushf
push
pushl
lea
jmp
add
dec
outsl
jbe
push
imul
pusha
movb
rep
jmp
fldt
iret
mov
jge
mov
repnz
pop
sub
add
arpl
sub
ret
lcall
inc
add
aam
test
pop
fdiv
pop
je
adcl
jmp
jl
and
add
jne
mov
mov
push
pushf
pushf
lea
mov
mov
movw
movb
mov
pushl
ret
add
inc
gs
je
imul
inc
add
add
jne
ja
add
cltd
test
jg
xor
mov
pop
frstor
sub
xor
lret
jae
and
dec
add
jmp
cmc
shrl
jl
inc
sti
add
mov
cmpsb
gs
sbb
add
outsb
push
mov
mov
dec
call
push
call
movl
loop
repnz
mov
mov
jmp
call
or
push
dec
inc
in
xchg
xchg
clc
or
push
and
cli
sbb
sbb
or
int3
or
incb
fmull
add
clc
fwait
testl
mov
sbb
push
add
int3
push
add
push
add
ret
push
add
push
add
inc
push
add
enter
dec
push
add
add
and
add
mov
push
add
dec
push
add
les
add
dec
push
add
mov
push
add
push
add
or
test
rolb
jle
or
imul
push
add
pop
or
pop
mov
push
add
daa
pop
add
int3
push
add
push
add
push
add
push
add
push
or
js
pop
add
enter
aad
add
push
add
sbb
add
push
add
rolb
sbb
push
add
or
jge
push
add
add
or
fstpt
push
add
lds
add
sbb
add
mov
push
add
push
add
ret
push
add
push
add
adc
or
cmc
mov
push
add
roll
sub
or
cmc
and
or
sbb
push
add
mov
or
xchg
dec
push
add
push
add
pop
add
sbb
add
pop
add
dec
push
add
fimull
add
rolb
stos
roll
push
mov
push
add
sub
add
add
add
push
add
push
add
push
add
or
loopne
push
add
and
add
mov
push
add
or
mov
movl
add
pop
or
cmpsl
rorb
add
movl
add
add
or
pusha
incb
add
dec
push
add
push
add
enter
dec
push
add
dec
push
add
fimuls
add
fimull
add
add
add
inc
push
add
push
add
push
add
push
add
add
add
push
add
add
add
sub
jmp
shlb
cmpsl
adc
pop
jno
pop
aas
leave
xchg
push
lods
sar
out
xchg
aas
aaa
xor
push
pop
aad
push
clc
or
in
aam
cltd
push
xor
out
pusha
or
fcom
pop
mov
or
jp
mov
je
dec
xchg
inc
loop
insb
mov
arpl
leave
xor
test
push
jno
sbb
in
dec
adc
daa
ljmp
push
add
inc
mov
mov
jl
loope
push
je
pushf
das
pop
je
fcompl
add
pop
popa
arpl
jae
add
push
aaa
or
in
aad
mov
daa
inc
je
test
mov
push
cmp
and
push
xchg
xor
xlat
or
lret
cmp
div
fwait
pop
je
test
gs
ljmp
lret
call
popa
les
pop
inc
fcmovnb
lret
push
mov
aam
std
fxch
ja
stos
std
in
popa
dec
lcall
jl
arpl
mov
shrl
js
loop
pop
je
sbb
jae
movsbl
mov
jmp
sar
sub
bsf
rol
mov
pusha
cmpb
pushf
lea
jne
bswap
xor
bt
xor
rcr
shld
mov
adc
call
mov
sub
push
dec
push
jge
inc
dec
fucomi
test
scas
mov
or
jecxz
pushf
inc
pop
pop
push
inc
iret
fldl
sub
into
mov
pushf
rcr
repnz
lea
sub
and
pushf
add
pop
pop
push
subb
xchg
shlb
stos
jg
adc
insb
imull
add
xor
ret
xchg
call
and
adc
daa
aad
arpl
fcoml
pushf
cs
push
jecxz
das
daa
pushf
mov
fsubr
pop
dec
fistpl
push
cmp
ret
inc
mov
rcr
adc
mov
sub
push
sub
and
out
ret
pop
cmp
cmp
test
loope
pop
adc
pop
dec
push
sub
test
adc
dec
fsubrl
xchg
lds
sti
sub
jmp
pop
psraw
pushf
adc
jo
mov
ret
or
sti
and
das
fcoml
jnp
movsw
and
xchg
mov
or
iret
nop
repz
adc
test
loop
pop
adcl
and
add
xchg
aas
rorl
imulb
xchg
enter
jno
popf
mov
pop
push
and
cmp
jp
mov
test
push
decl
test
jge
popf
mov
fcmovu
lcall
mov
movsb
subb
aas
stos
sbb
lds
pushf
outsb
mov
cwtl
arpl
enter
pop
mov
das
xor
cmpsl
mov
fcomps
rcr
push
jl
mov
mov
mov
jecxz
mov
lods
leave
cmpsl
data16
push
ja
ret
std
scas
mov
xchg
movsb
fcoml
xchg
and
lahf
daa
or
pushf
xchg
aaa
and
sub
sbb
jns
data16
jbe
stos
add
or
mov
mov
enter
xorl
fisubs
push
mov
mov
sub
jecxz
inc
lahf
pop
call
mov
cmp
xchg
and
daa
sbb
cmp
pop
test
mov
ds
in
mov
inc
pushf
ret
push
or
and
sub
data16
movsb
mov
push
lea
sub
gs
arpl
lods
pop
sbb
dec
push
int
ret
sub
mov
mov
sbb
jno
sub
add
sbb
pushf
inc
mov
pushf
pop
repnz
rcrb
sarl
sub
or
push
and
mov
test
pushf
adc
mov
fsubl
iret
cmc
xchg
aas
fwait
andb
scas
and
test
mov
movsl
stos
popa
scas
jl
pushf
jnp
fcoml
and
mov
pushf
jg
fnstsw
addr16
mov
daa
incl
lahf
xchg
push
call
and
mov
jge
sti
mov
jnp
popf
cmpb
jl
jle
mov
xchg
jge
jl
pop
pushl
sbb
mov
ret
mov
lret
fnstsw
and
cmp
sub
xor
pushf
and
arpl
add
out
dec
fdivs
add
pop
pop
insl
xor
fwait
mov
mov
jp
and
shll
xor
daa
outsb
in
lods
adc
xchg
in
push
cwtl
addl
cld
inc
mov
mov
pushf
ret
mov
and
and
aaa
cltd
add
fwait
sbb
and
jge
mov
inc
jle
iret
mov
mov
lds
mov
jo
pushf
lahf
xchg
bound
or
popf
xor
test
call
test
mov
push
cmp
hlt
and
pop
es
sub
jo
xor
das
call
ljmp
adc
mov
pushf
xor
nop
mov
add
inc
dec
pushf
test
aam
xchg
popa
rol
pushf
cmpsl
in
jp
fbstp
add
xchg
xchg
in
cmp
pushf
mov
add
rclb
adc
dec
mov
sub
loope
pop
ds
pushf
stc
mulb
paddw
stos
cmpsb
pushf
xor
addr16
mov
rcrb
cmp
mov
dec
stc
sub
and
jecxz
sahf
sbb
out
out
inc
mov
xlat
into
mov
jmp
push
lea
daa
cmp
iret
jns
dec
stos
pushf
loop
jb
add
leave
in
inc
pushf
lahf
int
push
sub
arpl
mov
fnstcw
subl
or
pop
pop
and
rorb
shrl
mov
pop
sub
movsb
pop
cmpsl
adc
or
push
lods
mov
jecxz
aaa
out
stos
jno
mov
mov
ret
xchg
test
rcr
cmpsb
pop
lahf
mov
shrl
xchg
or
mov
stos
popf
lods
mov
notb
rcll
test
cmpsb
mov
mov
pop
arpl
shrl
jle
shrl
jp
out
pop
sub
fldenv
popa
mov
cmpsl
jge
stos
pop
and
jb
lods
fsubrs
hlt
rcrb
jecxz
test
mov
call
lods
mov
xorl
mov
stc
mov
add
lods
shlb
jno
ja,pn
mov
adc
mov
test
or
cmpsb
fcmovnu
mov
ljmp
jge
lahf
or
cmpsl
sub
test
in
dec
mov
adcl
gs
stos
mov
push
popa
test
pop
leave
out
adc
dec
das
push
aas
and
aam
popa
es
pusha
xchg
sti
mov
dec
xorb
fisubrl
jno
push
or
mov
cmp
xchg
or
jg
lahf
das
mov
push
sahf
call
pop
push
xchg
outsl
mov
mov
das
ficomps
cmp
aam
jne
fstp
or
mov
out
test
popa
leave
cmp
xchg
pop
mov
ret
sti
sbb
out
push
lret
leave
mov
fisubs
test
mov
mov
les
les
lds
xchg
mov
jae
mov
pushf
mov
xchg
or
pushf
std
stc
mov
jecxz
jnp
mov
sub
pop
fwait
insb
stos
lods
xchg
or
push
cmp
andb
push
mov
pop
push
pop
aaa
pop
cmp
pop
inc
push
stos
push
scas
push
dec
pop
push
mov
into
mov
pop
cmp
fs
inc
clc
loop
and
push
push
inc
push
dec
pop
xor
mov
movsl
mov
ss
mov
xor
mov
and
and
add
loop
fs
ljmp
mov
and
aas
scas
mov
add
fs
ljmp
jecxz
inc
push
test
pop
push
pop
jnp
mov
jecxz
xor
dec
sub
inc
lock
push
cld
jb
push
cmp
imul
popf
loop
inc
jns
pop
push
das
and
xchg
push
cli
mov
add
push
test
inc
fs
push
and
add
in
loop
xor
jp
xor
rorb
shrb
int
mov
jno
push
shlb
rcrb
sarb
sahf
xor
sub
add
jmp
or
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
aas
sbb
out
insl
push
sub
test
dec
in
scas
in
push
in
icebp
in
adc
ja
xlat
in
xchg
in
jnp
pop
cmp
cmp
test
popa
inc
shll
gs
les
les
jae
rol
xchg
les
push
les
les
les
fucom
mov
repnz
fiaddl
ret
or
outsl
fcmove
fimull
fidivl
ficompl
fidivrl
cwtl
fidivrl
inc
and
push
add
push
push
pop
jl
mov
mov
fidivrl
inc
aas
xchg
dec
shrb
mov
adc
xor
ja
mov
adc
rcrb
inc
les
pop
imul
pop
fistpl
pop
aas
ffree
cmpsb
loop
daa
dec
lock
ret
loop
and
inc
lret
iretw
mov
iret
xlat
popf
cwtl
and
lret
dec
iret
sub
pop
xchg
add
fwait
lcall
sbb
insl
dec
sub
js
fsubp
mov
in
cmp
les
ljmp
xchg
lret
out
rcrb
inc
fs
jno
gs
cwtl
mov
sub
and
and
shrl
sub
dec
ljmp
ret
hlt
sarb
ficompl
loop
add
add
addr16
ret
jmp
ror
push
fidivl
mov
ret
jnp
push
and
pop
mov
sub
jecxz
arpl
shll
arpl
and
mov
in
les
loop
test
lock
in
inc
xchg
rep
xor
xor
bound
dec
jo
fisttps
inc
inc
insl
aaa
sub
xchg
insb
fisubrl
in
mov
and
and
mov
or
shlb
add
insb
push
cmpsl
rcrl
pop
negb
pop
je
fistps
mov
sarl
adc
in
pop
in
jg
fucomip
and
add
shlb
sarb
std
push
shlb
adc
gs
mov
ja
rclb
pop
test
ja
mov
fistps
outsl
sbb
daa
push
cmp
pop
cmp
cmp
test
test
jb
sarb
fst
lds
adc
jne
xchg
shl
xlat
sbb
lcall
xchg
sahf
sbb
insl
fs
aam
ds
mov
lock
rclb
xchg
sar
rcrb
test
aaa
ret
push
cmpsb
add
dec
lret
jo
xlat
rcr
push
mov
lret
iret
out
rorl
aas
pop
mov
jo
in
insb
lods
jb
pop
sub
in
fnsave
adc
in
out
push
test
mov
xchg
les
mov
and
call
lret
lods
fidivl
fidivl
ficompl
dec
ljmp
pop
or
repz
jno
mov
pop
cmp
daa
fwait
jg
lcall
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
data16
es
mov
sarb
push
and
xchg
out
add
fucomip
fisttps
fists
aas
bound
jmp
imul
jg
cld
cwtl
addl
lcall
mov
int3
popf
xchg
popf
nop
popf
imulb
neg
cmp
jno
and
and
adc
add
lock
loopne
push
pop
dec
jnp
add
push
and
push
push
pop
nop
pop
pop
pop
mov
leave
mov
mov
sarb
movl
or
sarb
sahf
sar
mov
scas
scas
mov
loope
loop
call
lret
lcall
ficompl
fwait
mov
cltd
scas
cwtl
push
lahf
adc
hlt
popf
pop
popf
sbb
fwait
outsb
lcall
icebp
sahf
push
popf
clc
mov
sub
call
in
mov
ret
fidivl
and
lds
jnp
jne
popf
mov
cmc
popf
jle
sahf
popf
cld
cmpsb
cmp
mov
roll
clc
les
les
sahf
loop
in
ljmp
cmpsl
lret
cmpsb
fisubrl
fisubrl
jno
fists
xchg
aas
fistpl
jle
ficomps
mov
cmpsb
inc
jno
mov
and
mov
xchg
lahf
sbb
mov
jae
or
add
in
daa
pop
sub
mov
mov
mov
cltd
jno
and
xor
jno
push
rclb
fwait
mov
addr16
xchg
and
adc
popa
mov
daa
shrb
pop
add
mov
jne
lahf
fs
aad
sti
popf
fidivrl
sub
test
rorb
ret
ficompl
and
add
and
add
in
es
rclb
mov
rolb
inc
jmp
xor
popf
fwait
popf
cmp
in
sub
stos
mov
mov
cmp
adc
sub
pop
and
inc
rcll
pop
jle
cltd
add
xchg
jno
mov
mov
inc
mov
in
add
loopne
rol
inc
cmpsb
movl
dec
dec
cmp
cmp
in
repz
push
xchg
bound
push
pop
hlt
push
sahf
mov
test
mov
adc
add
aas
mov
jno
xchg
cltd
inc
das
xor
fists
and
cmpsb
out
aas
int3
mov
sbb
or
test
test
mov
add
adc
inc
pop
sub
std
mov
les
mov
mov
lea
out
ficoml
nop
lret
addl
stc
and
in
lock
popa
pop
pop
popa
dec
push
lock
fwait
push
fdivs
test
iret
out
cmp
ret
cmp
in
xlat
lods
xor
sbb
inc
dec
and
fisubrl
push
xchg
jecxz
es
sub
adc
imul
push
pop
mov
lret
cs
rclb
add
arpl
inc
and
loop
repnz
or
xchg
inc
mov
cmp
ret
mov
xchg
xchg
mov
add
out
gs
in
xor
adc
insb
lods
inc
addl
add
lods
loopne
loopne
divl
add
and
lock
loopne
jno
push
cs
pop
sbb
stos
out
in
aas
or
cmp
movsl
stos
ljmp
lahf
sbb
ds
mov
test
inc
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
movsb
mov
add
inc
jge
idivl
insb
lods
sub
in
mov
rorl
mov
bound
stos
out
daa
sub
xchg
loopne
rclb
je
fwait
sub
xchg
stos
lock
dec
scas
into
test
jae
cmc
in
aas
sarl
sbb
pop
rcrb
inc
daa
pusha
mov
sar
push
add
push
lret
testl
and
mov
je
ret
fcmovb
ret
jmp
test
out
fwait
in
insl
aam
lcall
lcall
test
jns
clc
les
les
add
call
gs
es
lock
push
jge
lods
in
mov
sub
lahf
inc
outsl
rol
cmp
or
into
jnp
imul
adc
sbb
jns
pop
mov
mov
in
jno
stos
lock
fs
sub
shlb
rclb
rclb
xchg
push
les
fsubr
mulb
xor
xor
test
cs
cli
add
ljmp
mov
in
push
xorl
xor
insl
popf
rcrb
mov
lock
cmc
mov
cmp
sub
cmpsb
or
dec
lret
xor
push
xchg
ret
out
leave
out
lret
xchg
das
rclb
pop
xchg
pop
aam
lcall
pop
jl
arpl
aas
xchg
dec
cmp
cs
icebp
cmp
lods
shlb
jno
push
loopne
ja
movl
shr
xlat
test
fildll
mov
cmp
cmp
xor
mov
loopne
in
out
mov
dec
loop
inc
dec
loop
inc
fiaddl
inc
mov
scas
fucomip
fists
add
fwait
negl
pop
stos
jg
in
aas
inc
mov
push
cmp
jnp
clc
sarb
sar
sarb
adc
add
dec
loopne
jno
loop
mov
xchg
cmp
test
loope
loop
das
dec
leave
and
jo
mov
push
jns
fwait
bound
aas
popf
sbb
sbb
xor
movsl
out
les
loop
in
mov
insl
jmp
repnz
imul
scas
jno
scas
loopne
lret
in
lret
insb
test
in
push
in
sbb
cmp
mov
cmp
cwtl
gs
fwait
and
sub
mov
sub
inc
mov
das
ds
mov
sub
mov
in
jp
mov
cmp
repz
add
cwtl
jae
cltd
fsubs
adc
lock
popa
adc
jp
ficompl
ficompl
adc
scas
scas
mov
cmp
mov
mov
gs
inc
sub
daa
jae
shlb
shll
or
into
lret
xchg
iret
xchg
shll
mov
cmp
cmp
cmp
test
scas
and
daa
push
aaa
xor
mov
bnd
fnstsw
mov
test
test
hlt
sub
loop
add
dec
cs
mov
dec
cmp
cmp
cs
mov
cwtl
xor
ficompl
cli
inc
stos
dec
or
es
jmp
outsb
repnz
fwait
mov
loope
jae
xlat
repnz
cwtl
mov
lcall
loopne
jno
add
pop
mov
test
fs
lret
imul
cmpsl
mov
loopne
shrb
dec
shrb
shlb
lret
pop
addb
scas
ja
cmpsl
ss
les
sbb
imul
mov
jne
test
lcall
or
add
in
les
aad
fcmovb
jmp
and
stos
push
scas
xor
adc
cli
jno
xchg
mov
cmc
jno
jnp
mov
jecxz
pop
roll
lret
ror
push
rcl
xlat
push
fcmovnbe
fists
xlat
lret
fwait
jp
pusha
lret
es
aam
pop
arpl
add
fnstcw
mov
xchg
jle
mov
lcall
jno
jnp
xchg
lods
pushf
sub
push
inc
adc
shlb
inc
test
push
popa
push
inc
push
mov
mov
fs
gs
xchg
mov
ss
out
jo
mov
adc
mov
lock
pop
sbb
cmpsb
test
mov
test
adc
mov
mov
inc
add
out
dec
xchg
xor
js
repnz
mov
int3
mov
test
jmp
push
ljmp
in
rcrl
pop
lcall
mov
aas
xor
aaa
jne
mov
pop
mov
cmp
and
mov
pop
mov
lret
xchg
repnz
scas
out
and
iret
out
or
lods
fistl
mov
cmc
fidivrl
or
jmp
xor
jne
sbb
in
cltd
ficompl
push
jp
cmc
inc
stos
mov
inc
fwait
mov
imul
test
popf
popf
es
test
fs
push
lret
jns
repz
rorl
push
test
popf
lea
xorl
jg
fbstp
cmc
fbstp
aas
cmp
aaa
test
in
das
iret
shr
xlat
push
cmp
ret
jecxz
add
and
or
adc
jb
xor
mov
xor
xor
dec
lods
lret
cltd
iret
mov
in
mov
lods
clc
and
pop
sarl
xor
xchg
jge
test
packsswb
mov
dec
add
aas
or
loopne
mov
sub
pop
xchg
mov
inc
lods
insl
sub
test
dec
sti
daa
gs
lock
and
mov
inc
pop
pop
sarl
add
bound
cmpsl
cmp
inc
shr
jo
mov
bound
mov
sub
cs
ret
sbb
cltd
pop
fists
ret
fcompl
sbb
inc
scas
mov
mov
rolb
or
xor
ds
fsub
add
lret
push
scas
mov
xor
ficompl
aas
dec
mov
nop
cmp
in
loop
and
mov
jbe
aad
xor
fwait
mov
add
stos
rorl
adc
inc
jnp
inc
call
lock
mov
dec
sub
jle
cmp
inc
fs
cmp
lahf
jl
daa
cltd
jle
lock
je
fsubrs
pushl
push
rcll
push
add
shrb
lret
lahf
mov
fs
fbstp
les
jns
jno
jnp
ret
jmp
outsl
mov
aaa
aas
fwait
mov
sub
jmp
add
test
in
mov
rcll
ret
xor
mov
out
stos
jno
push
std
std
jge
cltd
xor
mov
mov
data16
js
icebp
jg
or
das
push
push
push
jae
mov
insb
mov
xchg
jne
mov
mov
insl
loope
push
ret
jmp
cwtl
push
lahf
push
ficoms
jnp
sub
push
mov
outsl
cmc
sub
mov
mov
cmc
xor
cwtl
jno
arpl
sub
jne
lods
xchg
insb
push
sub
in
adc
in
cld
and
add
adc
add
lock
in
int3
or
jno
push
scas
xor
cmp
ret
pop
mov
stos
jnp
mov
insl
cmp
add
jnp
cld
or
cmp
xchg
adc
mov
movsl
repz
arpl
out
jg
mov
xlat
ret
ficoml
mov
and
inc
cwtl
xchg
mov
mov
outsl
testl
rcl
aaa
lods
aaa
icebp
pop
jle
pop
xchg
pop
jg
fldl
loop
add
push
and
or
test
out
push
jnp
dec
lahf
cmpsl
roll
sbbl
push
inc
jnp
bound
inc
inc
jmp
nop
je
test
lcall
out
add
adc
call
in
mov
pop
aas
add
les
xor
mov
mov
mov
mov
mov
imul
insl
mov
and
and
ds
pop
out
mov
jl
mov
js
out
aaa
iret
mov
mov
movsl
sub
push
hlt
add
mov
in
ds
loop
cmp
loop
test
lret
mov
jno
jno
jnp
add
jmp
ljmp
les
mov
xor
jno
adc
pushf
popf
addr16
ret
and
incl
in
stos
or
lods
test
repnz
xor
aam
pop
les
les
dec
fs
outsl
outsl
shrl
xor
mov
inc
mov
aas
adc
arpl
adc
ret
loope
mov
adc
xorl
mov
insl
and
lods
push
ret
hlt
sarb
fwait
jge
call
push
in
jne
out
fisttpl
aas
mov
jae
pop
cwtl
pop
ds
mov
adc
sub
sub
call
hlt
les
pop
shrl
inc
mov
ds
mov
xor
fdivrs
pop
movsl
addl
lea
mov
scas
lret
ja
jmp
insb
jne
cmp
cmp
xor
loop
ficoms
pusha
in
fwait
test
andb
and
insb
ds
pushf
and
inc
ret
mov
cmpsl
sub
in
pop
mov
test
aas
mov
sub
dec
cmp
push
cwtl
mov
sahf
ret
and
test
jne
fisubrs
fs
dec
movsl
mov
or
ret
fidivl
fwait
push
test
and
out
addr16
ret
jo
insl
pop
popf
cmpsl
sub
xor
pop
sar
mov
mov
je
lods
xchg
inc
mov
inc
xor
loopne
rorl
mov
insb
push
in
pop
mov
lock
mov
movsl
out
adc
push
mov
jle
and
ljmp
ror
or
xor
xor
mov
jp
jnp
and
stos
data16
cmpsl
mov
lcall
out
sahf
int3
popf
rcrl
mov
inc
call
push
das
cmp
es
jp
insb
fxch
hlt
les
pop
mov
faddl
sub
in
xor
das
xor
xor
or
and
cmpl
loop
cltd
sbb
cld
push
shl
jno
push
shll
xlat
dec
adc
pop
inc
mov
push
lcall
sbb
push
inc
cmp
stos
add
lock
push
sarb
add
cmp
inc
mov
add
push
cwtl
cmp
daa
and
sub
les
xchg
jmp
lods
inc
cmpsb
ljmp
and
imul
loop
imull
jnp
sub
ljmp
mov
mov
shr
jnp
mov
mov
sub
hlt
lret
and
test
ja
outsl
adc
in
fidivrl
fstpl
test
or
addr16
dec
enter
fwait
mov
sahf
jge
and
and
and
push
mov
push
mov
roll
jo
mov
loope
pop
imul
cmp
cwtl
scas
and
test
mov
bound
dec
cmp
andl
addr16
cltd
inc
and
and
test
cmpsb
cmp
add
roll
sbb
mov
cmp
aaa
in
test
pop
arpl
xor
pop
stos
cmp
xchg
mov
mov
loope
mov
loop
or
outsb
xor
loopne
add
add
hlt
mov
aas
mov
xor
test
lds
adc
sti
ffreep
ds
popf
pop
lds
bswap
mov
out
jg
cmc
popa
mov
lahf
pop
mov
sub
mov
les
mov
xor
xchg
cmc
insl
cmp
mov
inc
dec
and
lret
mov
cmp
es
jp
daa
mov
test
addr16
les
mov
xchg
mov
out
mov
stos
lret
ja
xchg
lahf
insl
popf
mov
arpl
aaa
and
arpl
push
fs
rolb
push
movsb
cld
inc
xchg
xor
gs
pop
xorb
inc
mov
push
mov
push
dec
movsb
arpl
cmpsb
popa
mov
je
fisubrl
mov
lds
mov
dec
ret
pusha
fs
out
sub
test
jno
nop
mov
loop
outsl
fcmove
ret
jae
mov
popa
ljmp
dec
mov
sub
lret
pop
mov
stos
jmp
int3
jo
push
or
mov
ljmp
xchg
dec
test
fwait
ljmp
shl
sbb
loope
lods
dec
stos
pusha
inc
add
ds
mov
xor
loop
lahf
fwait
push
outsb
xchg
lret
aam
mov
and
es
xor
lods
mov
mov
dec
mov
loopne
xchg
cwtl
out
mov
enter
scas
jle
ja
jg
mov
cmp
ret
jbe
jmp
and
loopne
pop
add
mov
adc
out
fwait
sub
pop
jp
xor
push
push
cwtl
arpl
cli
adc
inc
in
jl
repnz
jnp
inc
push
sub
add
and
cwtl
pushf
mov
aas
popa
xor
inc
xchg
scas
sub
call
test
outsl
popa
scas
jnp
jno
arpl
xchg
ret
fwait
cwtl
sbbb
xor
cwtl
stos
clc
push
mov
aas
movsb
loop
xchg
and
dec
fldcw
jmp
daa
in
mov
and
mov
jecxz
mov
test
jp
mov
cmp
ret
daa
push
iret
xor
xor
ds
mov
pop
in
mov
pop
pop
adc
jecxz
cltd
test
adc
mov
enter
xor
sbb
push
and
adc
or
ja
jo
lock
les
xor
mov
and
imul
mov
es
pop
mov
xchg
adc
xor
insl
stos
push
jg
test
inc
in
in
push
mov
lahf
sbb
sar
adc
in
pop
clc
mov
jl
scas
mov
mov
sub
insb
xor
fidivrs
aaa
jb
cmp
xor
call
cmpsb
in
jne
mov
push
inc
xchg
cwtl
xor
mov
mov
jns
andl
dec
add
inc
out
xor
insl
adc
jnp
push
imul
pop
dec
out
pusha
mov
insb
inc
in
mov
outsl
sub
in
clc
push
pop
jno
ds
int3
ds
jae
mov
les
les
mov
repnz
mov
jl
mov
mov
and
int
mov
cmpsb
arpl
les
fcoms
xor
inc
adc
jb
daa
push
jecxz
xor
jmp
mov
fwait
cwtl
stc
in
inc
scas
fs
and
push
push
aad
mov
mov
out
pop
pop
test
mov
sti
inc
stc
out
popa
jno
push
movsl
pop
mov
in
aas
out
mov
sub
mov
push
outsl
add
and
mov
mov
pop
lock
popa
dec
mov
pop
mov
sarl
push
or
mov
test
scas
addr16
fwait
push
sub
out
mov
mov
add
nop
mov
dec
daa
and
test
jb
in
ret
fidivl
pop
inc
pop
inc
repz
add
aas
out
push
mov
arpl
popa
cmpl
or
arpl
inc
xchg
lods
sarl
cld
cwtl
mov
mov
jne
stos
aaa
insb
mov
gs
lcall
cwtl
push
sub
arpl
stos
movsb
xor
insl
sub
mul
adc
mov
fwait
push
wrmsr
mov
lock
insl
cmp
add
pop
cwtl
jmp
ret
or
jnp
bound
icebp
stos
jae
mov
mov
lcall
inc
sbb
stc
or
jg
mov
ds
mov
mov
in
scas
loope
mov
dec
xchg
ja
fwait
inc
daa
mov
mov
add
movsl
mov
ja
cmp
jecxz
pop
mov
daa
dec
in
roll
cmp
cmp
sahf
add
mov
cmp
loop
ljmp
cmp
dec
subl
cmpl
shll
mov
lods
lret
cmc
ud1
clc
jecxz
mov
sub
mov
movsl
popa
adc
mov
push
sbb
in
or
jb
dec
jnp
adc
gs
dec
out
insl
shll
cmp
mov
imul
in
add
xorl
ljmp
inc
outsl
lods
jg
dec
lods
push
mov
inc
mov
jno
jo
mov
mov
lcall
lods
jg
stos
push
lret
dec
mov
and
xor
inc
sub
xor
data16
mov
xchg
adc
popa
mov
jne
mov
cli
push
outsl
mov
in
and
mov
mov
mov
in
shll
hlt
mov
test
mov
dec
loopne
xor
cmp
fwait
imull
je
mov
xchg
mov
les
ret
out
pop
shlb
sub
push
out
pop
fsubrl
movsl
add
xor
loopne
shrb
inc
mov
jp
loop
and
jnp
mov
mov
push
aam
js
rclb
jnp
sbb
jge
stos
mov
pusha
mov
out
inc
stos
mov
mov
jmp
mov
xchg
mov
fwait
push
lahf
stos
jo
das
loop
ds
xchg
jge
mov
inc
jmp
mov
lcall
dec
dec
shll
cltd
sahf
daa
mov
add
pop
jg
in
jne
add
mov
rcrl
aas
push
nop
cmp
mov
push
mov
aam
imul
and
cmpl
xchg
xor
cwtl
jo
shll
inc
mov
mov
aas
fs
mov
aaa
sbb
lods
mov
sub
mov
mov
pop
mov
and
push
xchg
pop
xchg
adc
mov
xor
xchg
xchg
js
add
push
adc
and
pop
sub
call
xchg
bound
incb
rcl
loop
and
das
xchg
mov
xorl
lcall
popa
xchg
and
testl
test
jno
add
test
stos
push
lea
cmp
cli
popa
xchg
mov
cmp
mov
fwait
mov
xchg
inc
xchg
test
lahf
mov
mov
scas
fidivl
dec
scas
cli
mov
scas
pop
mov
jae
cmp
nop
cmc
dec
and
ljmp
pop
daa
pop
cmpsl
pop
adc
and
movsb
dec
movsl
repnz
cmpsb
push
scas
mov
dec
xor
xchg
xor
mov
idivl
shlb
mov
sub
xor
mov
push
cmp
cmp
jno
mov
in
aas
in
mov
in
cmp
inc
xchg
je
ds
jmp
in
daa
in
cmpsl
call
pop
movsl
pop
and
movsb
mov
popf
sub
je
mov
in
das
in
scas
lret
stos
sub
lods
popf
xor
mov
lods
sub
mov
ss
in
xor
sbb
jae
mov
sarb
sarb
jno
jae
ds
popa
cmp
daa
jg
pop
mov
lods
mov
lods
cmpsl
cmp
cmp
xor
popa
mov
sub
test
das
xchg
test
outsb
cmp
lods
bound
jnp
xor
sub
mov
ss
mov
xor
and
ss
cmp
mov
cmp
mov
mov
mov
movsb
loop
mov
ret
mov
in
daa
call
pop
and
movsb
das
ja
adc
jns
mov
call
scas
not
scas
push
sub
lods
aad
out
mov
xor
shlb
enter
xor
shlb
mov
cmp
mov
out
loop
fwait
cmp
mov
mov
adc
xor
mov
and
sarl
aas
stos
jbe
repnz
jl
aas
cs
pop
sub
mov
xor
mov
jle
mov
push
mov
bound
mov
mov
cmp
mov
cmp
mov
push
inc
addr16
in
sub
je
sub
or
scas
les
out
outsb
jno
adc
mov
ljmp
cs
fs
push
and
jne
stos
jg
scas
fisubl
pop
stos
sahf
imul
test
daa
scas
xor
scas
sbb
mov
mov
test
das
mov
cmp
adc
mov
cmp
mov
cmp
rol
je
fistpll
ret
fs
mov
and
mov
ds
pop
xor
mov
cmc
jp
sub
das
pop
scas
pop
cs
scas
pop
sub
in
lods
lret
mov
aas
mov
aaa
and
ss
xor
lods
xchg
mov
cmpsl
aaa
sub
jno
pop
test
loope
mov
lock
andl
scas
enter
lods
lret
insl
xchg
out
cmp
cmp
movsl
cmp
cmp
xchg
sub
sub
ret
test
cmc
shrb
sub
lods
push
repnz
xor
loop
fwait
mov
mov
inc
push
lods
xor
cmpsl
lock
cmp
mov
lock
std
mov
test
popf
scas
popf
sub
in
mov
shlb
shlb
shlb
shlb
mov
mov
cmp
repz
mov
cmp
jo
aas
jno
xchg
loop
mov
insl
and
mov
and
mov
mov
in
movsl
std
mov
shrb
das
aad
jnp
xor
xor
in
ss
es
cmp
xchg
cmp
mov
and
mov
and
mov
movsb
das
popf
cs
sub
popf
xor
xor
xor
cmp
cs
cmp
jno
and
daa
mov
subl
das
and
in
es
cwtl
mov
inc
aaa
sub
sub
mov
xor
xor
adc
cmp
sub
cs
xchg
mov
sub
es
jo
or
loop
das
bound
mov
xor
lods
aaa
mov
xor
idivb
test
cmp
xor
cmp
je
xor
and
es
jbe
and
imull
test
popf
das
int3
addr16
xor
cmpsl
jb
xor
repz
popa
jae,pt
cmp
lods
popa
and
and
outsb
and
out
sub
call
xor
popa
xor
xor
push
test
cmp
in
mov
cmp
scas
popa
and
and
data16
out
cmpsl
addr16
sub
loopne
mov
sub
loope
xor
xor
bound
jecxz
inc
cmp
aas
cmp
cmp
cmp
pop
ds
mov
sub
or
shll
dec
mov
jns
cmp
aas
je
or
shll
dec
mov
pop
ss
sub
shrl
imull
cmpsb
xor
xor
cmpsl
xor
mov
jne
push
jne
mov
bound
icebp
sub
sub
and
jno
sub
mov
ss
xor
xor
pop
cmp
repnz
cmp
repnz
lret
es
and
stos
std
addr16
mov
sub
xchg
xor
or
out
aas
push
cmp
and
jns
and
and
test
popf
sub
or
out
jnp
xor
ss
je
jns
cmp
je,pt
mov
or
aaa
out
mov
imul
dec
mov
pop
xor
xor
sub
mov
in
xor
cmp
cmp
cmp
stos
sarb
cmp
and
and
es
jae
and
cmp
cmp
cmp
adc
sub
xor
es
adc
xor
and
cmp
pop
stc
aas
jge
sub
popa
cmp
je
adc
es
iret
arpl
fildll
aas
sub
in
pop
das
mov
sub
xor
jge
sub
xor
cmp
cmp
cmp
adc
bound
lods
and
mov
cmp
sub
jnp
sub
cs
mov
xor
std
shlb
xor
adc
inc
jb
les
in
mov
daa
lret
xor
add
mov
mov
mov
mov
out
loop
mov
mov
jns
mov
loope
sub
or
sarl
addr16
cmp
jae
mov
mov
cmpsb
or
shll
movsl
stos
jns
stos
lahf
and
sub
or
shrl
stos
mov
push
lahf
sub
stos
or
shll
test
lahf
sub
and
lahf
outsl
mov
out
shll
mov
aas
mov
outsb
out
shll
scas
arpl
or
stos
dec
insb
test
in
scas
lahf
lods
scas
sub
or
mov
jb
pop
xor
mov
sub
or
jb
inc
mov
pop
ja
fnstenv
inc
repnz
dec
mov
stc
loope
add
cmpsl
cmp
xor
mov
push
mov
xor
ja
and
cwtl
xchg
mov
mul
mov
jne
aaa
xor
mov
and
or
and
mov
jo
or
push
mov
jns
aaa
cmp
mov
jp
out
mov
mov
incl
aaa
jle
jns
mov
mov
cmpsb
cmp
movsb
mov
jns
test
pushf
scas
jne
mov
icebp
lods
ja
push
inc
and
mov
das
and
mov
mov
loopne
jno
mov
daa
mov
mov
cmc
xor
and
movsb
pop
movsl
stos
push
fs
cmp
test
mov
jno
lods
fwait
jmp
das
stos
mov
push
mov
es
icebp
mov
stos
mov
imul
dec
scas
stos
mov
outsl
es
out
loope
inc
scas
mov
mov
scas
cmpsl
jne
mov
icebp
movsb
dec
lods
stos
pop
insb
stos
jno
test
lods
scas
jne
mov
sub
sbb
ret
sub
lock
shlb
fs
and
mov
in
cwtl
movsb
mov
imul
xor
mov
jmp
lock
inc
mov
push
lods
sub
mov
mov
mov
stos
mov
test
xorl
cmp
pop
or
pop
fbstp
pop
mov
mov
popf
cmp
xchg
inc
pop
jb
cmp
test
ss
test
cmpsb
popf
and
mov
stc
das
cmp
hlt
js
sub
lods
sub
shlb
pop
mov
jg
in
sub
stos
jmp
sbb
inc
mov
fidivrl
add
cmp
mov
addr16
cs
mov
jnp
mov
idivb
mov
and
repz
test
pop
aaa
xchg
test
es
icebp
mov
mov
andl
jne
jg
dec
cmpsl
popa
aaa
mov
fstpt
cmpsl
cmp
push
addr16
mov
xor
mov
pusha
mov
sub
test
mov
imull
pop
cmp
imull
lahf
movsl
xchg
push
inc
mov
jge
sbb
jno
sub
mov
je
mov
mov
mov
out
dec
lahf
jbe
data16
mov
lock
mov
stos
xor
sarl
mov
cmp
repz
mov
icebp
cmpsl
mov
mov
xor
data16
sub
jmp
sbb
mov
cwtl
stos
movsw
cmpsb
mov
andb
out
push
mov
mov
xchg
lods
mov
out
lods
mov
mov
movsl
jo
or
stos
les
mov
mov
out
icebp
movsl
jae
test
addr16
fwait
cli
mov
mov
scas
loope
jae
mov
hlt
jbe
stos
scas
daa
push
scas
add
mov
and
cmpl
mov
mov
mov
adc
push
mov
sub
arpl
stos
std
in
dec
jno
lods
lods
outsb
dec
mov
das
mov
jle
lods
gs
movsb
mov
fwait
insl
stos
lret
pushf
mov
jae
cmpsl
dec
stc
pop
fwait
in
movsl
jnp
lods
aas
gs
mov
mov
and
and
dec
scas
mov
sub
movsl
and
stos
cmp
dec
lods
mov
mov
cmpsl
lahf
push
clc
stos
icebp
mull
jg
pop
mov
cmp
jg
push
mov
test
movsb
sub
popa
mov
jbe
mov
movsl
lock
mov
mov
les
inc
stos
sub
aaa
jo
jmp
scas
cmpsl
roll
aaa
push
scas
pop
mov
outsb
sub
call
mov
imul
and
stos
pop
mov
in
sub
jno
out
hlt
and
jg
pop
mov
cmpl
pop
sub
and
mov
cmp
jne
jmp
outsl
mov
sub
cs
cmpsl
push
js
scas
cmc
cmp
mov
stc
inc
mov
cmp
mov
addr16
pop
mov
aas
xor
in
cmc
ljmp
jbe
and
lock
ljmp
ljmp
repz
mov
outsl
icebp
scas
jb
ljmp
mov
icebp
cmpsl
inc
outsl
out
xor
cmc
jmp
stos
movsl
adc
push
lods
xchg
aaa
xchg
mov
aas
sub
in
es
shll
lods
adc
and
mov
jne
lea
stos
lods
lods
das
pushf
lret
pushf
mov
ja
cmp
cs
subl
inc
test
mov
mov
movsl
cmp
mov
sub
cs
lods
ja
pop
mov
mov
outsl
sub
jge
add
out
push
mov
stos
jno
scas
mov
mov
jmp
xchg
mov
popa
stos
loop
xor
jno
out
shll
call
lcall
mov
pop
test
mov
inc
mov
scas
andl
mov
mov
daa
and
shrl
scas
mov
mov
lret
xchg
mov
es
push
mov
push
jne
mov
sub
jle
mov
sub
data16
enter
mov
stos
sbb
mov
cmp
ljmp
mov
cmpsl
clc
test
mov
mov
sub
cli
lds
das
mov
loop
loop
add
es
out
ja
pop
mov
jge
movsl
insl
adc
mov
inc
sbb
push
mov
push
cmp
or
aas
shl
cmp
repz
stos
or
mov
and
je
cld
jle
and
movsb
stos
test
inc
cmpsb
jl
xchg
imul
pop
add
mov
loopne
mov
dec
or
lods
out
test
cmpsb
pusha
sahf
jmp
mov
lods
out
in
jne
lock
cmpb
insb
and
pusha
xchg
jmp
xchg
jb
mov
fdivl
fwait
mov
lcall
add
mov
fbld
mov
movsl
add
icebp
scas
or
and
mov
xor
cli
cmp
int
mov
pop
imul
test
push
scas
out
xchg
fldt
adcl
mov
addr16
lret
sub
ret
insl
push
fistps
lahf
xchg
imul
xor
addl
mov
aam
std
insl
pusha
stos
xor
adc
jl
xchg
dec
xor
jo
lret
jmp
mov
sbb
cmp
jae
out
mov
cmpsl
xchg
mov
ljmp
repnz
ja
dec
mov
std
push
sbb
add
xor
std
or
jnp
push
sbb
xchg
jl
movsb
scas
xlat
in
bound
mov
shrl
xchg
pop
aas
cs
lods
mov
dec
in
xor
scas
xor
repnz
lock
loopne
ret
jl
movsb
cmp
adc
sub
ds
mov
dec
xor
cmp
dec
sub
and
inc
aad
mov
pop
cmp
lock
fwait
xchg
pop
mov
dec
bound
jae
repnz
add
push
gs
imul
gs
push
call
shll
pop
data16
dec
xor
call
leave
ret
sti
lea
ja
seto
sub
clc
shr
sar
add
rcl
sbb
mov
pusha
mov
movb
clc
repnz
call
lea
push
movl
jmp
add
add
mov
pushl
pushf
call
push
call
incb
pop
lea
push
movl
mov
mov
movl
pusha
pushf
push
pushl
ret
jmp
add
add
ret
dec
add
add
sti
push
or
add
add
pop
add
add
add
add
push
or
out
or
loopne
or
and
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
or
cmc
push
or
clc
push
or
inc
xor
inc
xor
inc
xor
pop
dec
inc
cs
insb
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
mov
out
sldt
cs
add
push
push
outsb
outsl
ja
add
push
popa
imul
jo
imul
mov
mov
adc
in
imul
das
add
movsl
fistl
xchg
pusha
shl
push
sbb
sub
or
gs
int3
out
cld
into
add
popf
rorb
cmp
movsl
in
repz
xchg
mov
and
hlt
mov
inc
cmp
lret
xlat
es
jnp
inc
ss
fcmovnb
mov
or
xlat
je
adc
dec
orb
mov
mov
jp
mov
cmp
jae
in
xor
fwait
shrb
or
pusha
dec
lahf
dec
out
xchg
cmp
inc
jne
adc
test
in
sub
movsb
and
push
cmp
sub
bound
iret
inc
xor
push
xorl
adc
jg
cld
ja
jp
lea
cmp
jle,pn
mov
dec
xor
pop
pop
xor
pushf
aaa
aas
mov
test
repz
nop
test
adc
jae
and
xor
fiaddl
mov
adc
xchg
popl
insb
or
or
adc
inc
cmp
mov
fwait
outsb
push
inc
adc
xor
and
jno
dec
adc
ds
into
orb
ljmp
cmp
mov
icebp
mov
nop
push
test
sbb
jge
xor
jae
sub
roll
dec
gs
jo
gs
insb
insb
outsl
arpl
xor
pushf
rol
jmp
push
clc
cmp
movw
lea
je
bt
pushf
pushf
cmp
pushf
pushl
pushf
call
push
call
pushl
lea
je
jmp
push
lea
jno
dec
push
pusha
movb
lea
jne
push
push
lea
jmp
sbb
dec
aam
daa
lret
pushf
sub
jae
xor
add
or
icebp
sbb
call
decb
ja,pt
fcomps
mov
jmp
rolb
es
gs
aad
push
testb
popa
push
lock
imul
pusha
imull
and
out
and
cmp
fsts
clc
mov
lret
popa
out
or
or
xor
jae
and
nop
enter
sub
out
es
dec
in
lods
out
mov
sbb
nop
mulb
into
mov
add
or
sbb
or
jae
cmp
mov
hlt
pushf
pushf
pushl
pusha
lea
jmp
bt
call
adc
cmp
push
mov
aaa
jb
or
test
dec
cmc
cli
push
pop
xchg
inc
out
and
inc
push
push
notb
adc
sarb
add
movsl
mov
stc
mov
scas
push
aaa
mov
mov
out
add
push
sub
or
lods
adc
arpl
cs
arpl
repz
cmc
stc
push
lock
cmc
ret
mov
cmp
out
inc
dec
xor
idivb
imul
roll
in
pop
jae
jnp
sti
fs
cmp
outsb
pop
mov
or
push
jmp
mov
mov
inc
mov
pushf
repz
cmpsb
gs
add
sub
pop
add
lods
pop
ja
les
pop
mov
xchg
aaa
jmp
cwtl
mov
addr16
jge
stc
daa
into
push
adc
cs
in
loop
iret
dec
xchg
idivl
inc
aad
jo
pop
jae
jo
dec
pusha
mov
push
push
lea
jae
mov
not
test
test
mov
sar
mov
cmc
bswap
movzbw
add
mov
cmc
call
pushf
pushl
lea
je
stc
cmc
call
push
call
out
add
push
imul
popa
bound
add
add
popa
jo
jb
popa
je
add
add
insb
je
inc
jns
gs
outsl
push
imul
out
xlat
pushf
jmp
iret
sti
cld
cmp
clc
jae
rclb
jg
mov
cli
popa
lahf
and
inc
sub
inc
sahf
scas
subb
xchg
js
adc
cmp
stos
sar
push
sahf
enter
add
stc
ss
ds
nop
pop
lahf
fsubl
xchg
or
lock
jae
subb
aas
sti
jg
shr
sbb
cltd
jle
or
loope
movsl
add
aad
out
sub
ljmp
xor
movsb
xor
mov
jmp
inc
sbb
mov
pop
es
addl
imul
fdivrs
or
pop
lcall
push
enter
push
push
enter
arpl
push
jns
push
mov
icebp
enter
test
and
xor
inc
xchg
or
push
pop
je
into
inc
mov
inc
adc
pop
add
lock
jae
push
add
lea
jae
dec
dec
mov
pushf
jmp
push
pushf
lea
jne
clc
xor
mov
mov
sub
shl
add
add
adc
mov
cmp
pushf
push
test
pushf
pushf
call
lea
ja
push
pushl
imul
test
mov
movb
add
pusha
pushf
lea
jmp
inc
push
stc
ror
pushf
movb
movw
lea
call
clc
cmc
push
pushf
cmp
push
lea
jae
jmp
imul
cmp
jp
aad
jg
aaa
xchg
cmp
push
dec
and
js
btc
jecxz
dec
lods
jae
and
shl
jb
cmpsb
ljmp
pusha
test
pusha
std
xor
aad
dec
test
out
push
inc
or
add
mov
jmp
pop
jecxz
pop
gs
cmc
fwait
jg
repnz
sbb
iret
xchg
rorb
dec
mov
fisubrl
icebp
jmp
jns
fcmovbe
mov
mov
inc
sbb
pop
jae
xchg
insb
jae
gs
popa
insb
jne
add
add
insl
imul
outsl
arpl
jae
add
inc
gs
insb
addr16
je
insl
add
or
mov
add
push
push
call
sub
sub
or
sub
adc
add
mov
insb
jae
gs
popa
insb
jne
add
mov
aaa
call
clc
insl
negb
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
out
push
sub
cmc
sub
jo
bt
cmp
push
lea
jae
pushf
mov
pusha
lea
jmp
push
call
pop
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
xor
lea
jne
pusha
movb
not
mov
movzbw
call
call
enter
ret
add
or
pushf
shll
fstps
adc
aas
mov
and
dec
es
pop
rol
inc
push
js
cmpsl
push
ljmp
outsl
or
mov
add
mov
jno
add
les
cli
js
xor
outsl
movsl
adc
scas
aad
rep
loop
ret
stc
outsl
cmp
sbb
sub
or
mov
pop
jae
pop
imul
mov
call
je
bt
add
jmp
mov
mov
bswap
movsbw
mov
mov
movb
pushl
ret
call
jle
xchg
push
loop
cltd
test
ljmp
and
push
scas
dec
cmp
cmpsl
mov
jb
loopne
mov
bnd
daa
lea
push
les
jmp
loope
loope
jns
in
xchg
in
pop
jae
sahf
dec
or
add
inc
insb
insb
outsl
arpl
push
lea
jb
pushf
stc
cmpb
jmp
stc
add
neg
mov
stc
cmpsb
push
push
lea
ja
call
aad
rcr
cwtl
stos
or
sbb
jge
mov
add
orb
call
mov
jle
inc
and
hlt
mov
arpl
in
adc
mov
jg
jno
cmp
mov
mov
sub
pop
sbb
fcomip
pop
lea
pop
dec
loop
scas
and
jb
mov
movsl
cltd
xchg
dec
mov
pop
dec
shll
jmp
imul
jae
popa
movsl
xor
cmc
loope
pop
mov
aam
inc
stos
out
sub
ss
test
add
and
dec
adcl
add
push
dec
jo
pop
outsl
pop
scas
mov
test
mov
sub
divl
jle
push
fbstp
mov
and
dec
push
adc
push
pop
fldt
sbb
jae
ds
xlat
call
add
inc
imul
js
popa
jb
insl
inc
add
add
je
insb
ja
add
icebp
xchg
clc
in
sub
inc
push
jbe
mov
jo
lock
xchg
dec
xor
sub
aam
data16
lock
bnd
pusha
xchg
push
mov
out
mov
out
jae
jbe
js
add
jne
push
inc
jne
data16
add
xchg
ret
call
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
dec
clc
aaa
call
popf
jmp
movb
mov
adc
pushf
lea
call
pusha
pushf
lea
jb
pushf
pushf
push
pushl
ret
add
inc
gs
jb
arpl
fs
jae
add
xor
pushl
lea
jmp
push
mov
pushf
push
mov
pushf
push
call
pushl
mov
push
mov
pusha
call
pusha
mov
call
mov
pushf
movb
call
stc
bt
not
shl
mov
pusha
jmp
pushf
mov
push
call
mov
mov
pushl
jmp
dec
call
lea
ja
pushf
pusha
mov
pusha
mov
pushf
mov
jmp
pushf
pushf
mov
jmp
add
stc
stc
push
rol
jmp
jmp
mov
pushf
mov
lea
jg
pusha
pusha
push
mov
pushf
pushf
popl
shrd
bswap
mov
cmp
rcl
pushl
popl
jmp
call
stc
rol
cmp
bt
push
sub
movb
call
sub
pushl
movl
lea
jmp
pushf
movb
mov
call
sub
call
pusha
movb
mov
call
pushf
bt
mov
inc
bsf
push
or
inc
jmp
add
stc
pushf
xor
bt
bt
cmc
cwtl
clc
sub
lea
jge
push
pushf
mov
pushf
movl
lea
jmp
pusha
push
call
mov
movzbw
and
rcl
jmp
not
pushf
clc
sub
movb
pushf
cmc
pusha
and
call
pusha
add
call
rep
inc
ror
xadd
mov
rcr
mov
pusha
movb
cld
call
call
mov
mov
pushl
pusha
pushf
pushl
ret
push
call
jmp
pushl
shr
sar
push
cmc
ror
dec
mov
pushf
cmc
add
pusha
rol
pusha
cmp
sub
mov
pushf
lea
jmp
pushf
mov
mov
jmp
lea
jns
mov
call
movb
mov
movb
jmp
call
bswap
lea
or
neg
shrd
sub
rcr
sbb
bswap
jmp
jmp
call
call
pushf
pushf
push
mov
pushl
mov
lea
jmp
jmp
pushl
movb
mov
movw
mov
movb
pushf
lea
jmp
pusha
movb
pushf
mov
pusha
pushf
mov
mov
pushf
mov
jmp
lea
rol
ror
mov
neg
mov
pushf
cmc
movb
add
pushf
mov
pusha
jmp
shl
cwtl
mov
pusha
pusha
sub
jmp
pushf
mov
mov
mov
pushf
popl
and
shld
pop
cmc
mov
shl
pushl
popl
lea
movl
rol
cmp
add
rcr
mov
cmp
stc
clc
test
add
mov
clc
push
rol
jmp
pusha
mov
movw
jmp
clc
xor
jmp
clc
shrd
bsr
mov
stc
call
cmc
shl
pushl
jmp
bt
mov
add
pusha
jmp
push
mov
pushf
mov
pushf
mov
movsbl
jmp
add
movb
pusha
push
lea
jmp
jmp
mov
jmp
pusha
call
neg
call
add
pushf
call
push
add
push
pusha
pushf
mov
movb
mov
pushf
lea
jmp
aas
mov
pushf
bsr
ror
jmp
lea
pushf
popl
lea
jae
push
movzbw
mov
not
push
lea
std
jmp
pushf
movb
mov
pushf
pushf
mov
pushf
call
mov
mov
mov
lea
jmp
mov
pushf
mov
pusha
pushf
mov
mov
movb
call
mov
movw
pusha
movb
movw
lea
jmp
call
pushf
push
push
mov
call
bswap
or
mov
and
xchg
pushf
setp
mov
pushf
mov
bt
jmp
pushf
mov
movb
pushf
pushf
popl
movw
call
or
mov
pushf
add
clc
clc
rol
jmp
jmp
pushl
mov
push
pushf
mov
pushf
xchg
bswap
pushf
popl
shrd
mov
bsf
ror
sar
pushl
popl
add
movl
rol
movsbw
mov
bt
cmp
add
bt
cmc
rol
jmp
bts
movl
bt
cmc
sar
dec
mov
cmc
add
cmc
push
cmc
push
rol
jmp
call
mov
pushf
movw
divl
pusha
pusha
mov
pushf
pushf
pushf
mov
call
dec
jmp
pushf
movb
pushl
popl
pushf
movb
pusha
lea
jmp
call
jmp
push
mov
push
pushl
mov
push
pushf
mov
call
call
stc
shr
push
call
bt
push
add
movb
lea
jb
mov
push
lea
jmp
movb
mov
push
pushf
pushf
lea
jmp
mov
pusha
pushf
popl
pushf
jmp
pushl
popl
movb
pushf
pushf
pushl
lea
jmp
mov
pushf
mov
push
lea
jmp
mov
mov
mov
jmp
jmp
rol
not
rcr
rcr
ror
sub
clc
xor
movzbw
dec
pushl
jmp
push
lea
jbe
push
push
pushf
mov
pusha
mov
movb
call
call
xchg
not
push
pop
jmp
rol
cmc
call
test
movzbw
clc
add
bt
push
btr
bt
ror
rcr
clc
pushl
neg
not
and
shl
mov
bt
lea
jne
pushf
sub
call
pushl
popf
push
pushf
mov
lea
jmp
pop
pushf
popl
bsf
cmc
mov
movsbw
movsbl
pushl
popl
adc
movl
movzbw
bsr
mov
cmp
mov
call
pushl
popl
pushl
movb
lea
jmp
rdtsc
rol
test
mov
shl
mov
jmp
mov
movb
call
mov
call
sub
jmp
add
jmp
mov
push
push
pushf
lea
jmp
mov
movb
mov
pushf
push
call
push
xadd
mov
test
mov
bt
add
pushf
pusha
mov
call
mov
clc
mov
cmp
clc
sub
test
mov
jmp
shl
add
clc
mov
sar
or
cmp
mov
jmp
pusha
pushf
pusha
mov
mov
mov
lea
jmp
push
jmp
test
add
movb
rol
cmp
sub
push
pushf
lea
jmp
push
add
call
or
test
movzbl
test
xor
clc
ror
pusha
inc
stc
jmp
bt
sub
pusha
pusha
lea
jmp
ror
cmp
movw
cmp
jmp
call
pushl
mov
sub
clc
bt
not
clc
push
add
cmp
bt
movb
stc
xor
call
jmp
jmp
jmp
pushf
movb
call
push
push
pushl
call
push
mov
jmp
mov
mov
setb
pushf
call
pushf
bt
cwtl
pushf
test
jmp
push
sub
pusha
lea
jmp
pushf
push
pushf
popl
pushf
pusha
movb
pushl
popl
pushf
pushf
movw
pushl
lea
jmp
test
cmp
test
sub
call
pushf
mov
pusha
mov
call
cmp
add
jmp
pusha
bt
pushl
popl
cmp
stc
add
bt
cmc
pushl
popf
pushf
mov
pushl
pushl
lea
jmp
pushf
mov
mov
mov
bswap
jmp
movw
mov
mov
lea
jmp
call
jmp
mov
call
pushf
push
pushf
mov
call
xchg
mov
pusha
call
mov
pushf
pushf
mov
pushl
mov
mov
pusha
call
call
call
xor
bswap
sub
mov
ror
call
btc
mov
setbe
movzbw
btr
mov
stc
jmp
mov
call
mov
sub
je
push
not
push
pusha
cmp
clc
not
cmp
call
pushf
movb
mov
pushf
pushl
mov
jmp
add
add
jmp
pushl
mov
movsbw
pushf
popl
btc
mov
shr
btr
mov
bsr
xor
pop
bsr
pushl
popl
shld
cmp
movl
sbb
dec
jmp
pushf
popl
pushf
pushl
pushl
popl
pusha
lea
jmp
call
sub
call
rol
stc
clc
bt
sub
pushf
pushf
lea
jmp
rol
pushf
pushl
sub
mov
push
pushf
pushl
lea
jmp
push
pushf
pusha
mov
pushf
mov
jmp
pushf
popl
pusha
call
pop
not
mov
pushf
pop
movzbw
mov
lea
movzbw
pop
mov
pushl
lea
jmp
movb
mov
jmp
push
sbb
and
or
movzbl
cmc
sub
push
dec
movb
pushl
pushf
rol
mov
pushf
inc
call
shl
shr
mov
btr
btc
mov
sar
adc
neg
clc
mov
cmp
push
add
cmp
shld
call
dec
clc
clc
sub
jmp
inc
stc
jmp
shr
pusha
pushf
call
movzbw
call
test
mov
test
sub
call
mov
pusha
pusha
movb
movb
lea
jmp
cmc
call
pushl
mov
pushl
mov
mov
pushf
call
push
pushl
lea
cpuid
cmp
call
push
pushl
mov
mov
mov
call
pushf
push
mov
mov
pushf
pushf
pusha
lea
jmp
lea
jnp
push
mov
pusha
pusha
push
pushf
lea
jmp
mov
call
mov
mov
pusha
mov
mov
pushf
lea
jmp
clc
jmp
jmp
inc
bsf
and
cwtl
mov
cmc
mov
stc
cmc
cmc
add
pusha
call
pushf
lea
jno
mov
pushf
lea
jmp
mov
call
jmp
not
movsbw
pushf
popl
rcl
mov
shr
test
lea
pushl
popl
btr
movl
shl
mov
cmp
cmc
cmc
call
rol
pushf
bt
test
pushf
sub
push
lea
jmp
stc
add
mov
bt
jmp
pusha
mov
push
pushf
lea
jmp
test
stc
clc
test
sub
cmp
shl
pushf
mov
movb
call
mov
mov
pushf
lea
jmp
stc
jmp
pushf
movb
movw
dec
clc
bt
movb
cmp
not
jmp
jmp
shr
neg
not
mov
test
sub
push
jmp
not
bswap
call
mov
pushf
lea
jns
push
pushf
popl
jmp
call
xchg
call
jmp
call
jmp
leave
cmp
adc
and
adc
or
cmp
adc
or
pop
sub
or
dec
cmp
adc
or
and
or
fiadds
adc
dec
or
nop
inc
or
lea
adc
xor
adc
aas
or
mov
aas
or
pop
or
sub
adc
or
out
and
or
and
sub
adc
and
or
out
and
or
and
or
nop
inc
or
outsl
or
pop
sub
or
jnp
or
pop
or
pop
cmp
adc
inc
or
loope
or
movsb
sub
adc
adc
or
add
sub
adc
xor
adc
inc
or
sub
sub
or
jnp
or
dec
cmp
adc
cmp
adc
dec
or
pop
cmp
adc
sub
adc
aaa
or
es
or
cmp
adc
or
es
or
mov
or
pop
sub
or
dec
cmp
adc
or
cmp
adc
or
mov
inc
or
sub
or
mov
cmp
adc
dec
or
ljmp
adc
aas
or
outsb
sub
adc
cmp
or
ljmp
adc
dec
or
push
inc
or
xor
or
outsb
sub
adc
inc
or
and
or
stos
or
subl
adc
xor
adc
or
outsb
sub
adc
or
jbe
or
lock
or
mov
aaa
or
push
inc
or
outsb
sub
adc
or
and
or
jbe
or
nop
inc
or
and
or
fiadds
adc
inc
or
outsb
sub
adc
sub
adc
cmp
adc
cmp
adc
aas
or
add
or
outsl
or
outsb
sub
adc
inc
or
and
or
xchg
inc
or
jecxz
or
and
dec
or
pop
cmp
adc
or
test
adc
cmp
adc
or
jecxz
or
les
adc
inc
or
out
and
or
repz
or
and
or
ljmp
adc
xor
adc
or
rolb
outsb
sub
adc
aas
or
and
or
subl
adc
inc
or
mov
or
ljmp
adc
or
mov
or
and
or
ljmp
adc
inc
or
sub
adc
or
lock
or
and
or
fiadds
adc
or
leave
cmp
adc
or
outsb
sub
adc
cmp
adc
inc
or
leave
cmp
adc
dec
or
xchg
inc
or
outsb
sub
adc
sub
adc
cmp
adc
sub
adc
aas
or
es
or
outsb
sub
adc
sub
adc
cmp
adc
or
repz
or
and
cmp
adc
or
and
or
pop
cmp
adc
inc
or
sub
or
lea
adc
and
adc
dec
or
pop
cmp
adc
or
movsb
sub
adc
inc
or
xor
or
lea
adc
inc
or
nop
inc
or
repz
or
out
and
or
or
mov
sub
adc
and
adc
dec
or
outsl
or
out
and
or
pop
sub
or
cmp
inc
or
pop
cmp
adc
inc
or
sbb
or
jecxz
or
and
or
mov
cmp
adc
sub
adc
dec
or
lea
adc
or
movsb
sub
adc
sub
adc
inc
or
and
cmp
adc
aas
or
adc
adc
inc
or
test
adc
and
adc
or
adc
adc
mov
add
push
pusha
mov
mov
pushf
push
lea
jmp
pushf
mov
pusha
pushf
push
mov
pushf
pushf
mov
jmp
call
mov
pushf
mov
push
lea
jmp
pushf
popl
pushl
movb
pushl
popl
movb
lea
jmp
call
pushl
push
call
add
movw
rol
clc
sub
pushl
movb
lea
jmp
sub
pushl
pushf
lea
jmp
xchg
pushf
pushf
pop
pushf
popl
movzbw
mov
inc
test
clc
ror
pushl
popl
inc
test
movl
shl
btr
mov
pushf
cmc
cmp
add
pushf
rol
jmp
mov
call
mov
pushf
call
mov
pushf
mov
mov
pusha
lea
jo
push
jmp
inc
sbb
mov
clc
cmp
pushf
clc
add
stc
rol
movb
movw
sub
pushf
pusha
lea
jmp
jmp
call
mov
pushf
lea
jmp
mov
sete
xor
mov
mov
test
pushf
add
cmc
clc
not
movl
bt
rol
pusha
push
call
setbe
pushl
xchg
lea
bswap
xchg
pusha
push
mov
movsbl
jmp
call
sub
push
pushf
mov
lea
jmp
call
movb
add
stc
mov
rol
bt
bt
sub
pusha
push
pushl
pushl
lea
jmp
mov
pushf
mov
jmp
lea
jae
mov
jmp
movw
pushf
popl
jmp
movb
call
pushf
cmp
jmp
jmp
stc
jmp
push
mov
pushf
popl
call
call
call
jmp
lea
jne
push
push
call
mov
pushf
lea
jmp
mov
call
call
jmp
mov
push
mov
pushl
call
call
pusha
inc
neg
mov
push
add
lea
jo
push
pushl
mov
movb
jmp
dec
push
mov
cmp
clc
mov
cmc
clc
push
test
sub
call
mov
call
call
mov
mov
call
mov
movb
pushl
pushf
lea
jmp
cmp
test
not
pushl
call
mov
mov
pusha
pushf
pushf
lea
jmp
mov
pushl
popl
mov
movb
movb
mov
lea
jmp
stc
not
add
cmc
pusha
not
cmc
ror
sub
neg
shl
bsf
dec
and
lea
jp
bsr
clc
mov
pushf
clc
cmp
lea
jae
add
pusha
mov
pusha
lea
jmp
pushf
pushl
pushl
popl
mov
lea
jmp
mov
bswap
mov
movzbw
mov
pushf
movsbw
call
pushl
popf
movb
movb
mov
lea
jmp
jmp
mov
push
call
bts
call
lea
jo
push
lea
cpuid
call
sub
mov
mov
push
mov
push
push
lea
jmp
mov
mov
pushl
movb
call
pushl
popl
pushf
pushf
lea
jmp
std
cld
pushf
mov
jmp
jmp
pusha
call
call
mov
push
pushf
pushf
lea
jmp
mov
stc
clc
pusha
sub
test
cmp
clc
test
shr
pushf
jmp
pushf
pushf
jmp
test
add
pushf
mov
jmp
mov
pushf
mov
movb
movb
lea
jmp
rol
clc
clc
pushf
sub
pushf
pushl
mov
lea
jmp
pushf
popl
and
dec
pushf
mov
mov
test
movsbw
pushl
popl
or
movl
or
cmc
inc
mov
movb
mov
add
cmc
bt
rol
cmp
test
sub
pushf
movw
push
movb
lea
jmp
test
add
call
add
mov
mov
add
mov
setle
mov
jmp
cmp
movb
test
add
jmp
jmp
jmp
jmp
pusha
call
cmc
or
mov
dec
add
pushf
mov
pushl
call
push
pushf
pusha
movb
mov
call
bt
lea
clc
call
mov
shrd
bsf
pushl
popl
shr
bsf
mov
movl
movsbw
shr
inc
mov
jmp
mov
pusha
mov
movb
pushf
pushf
mov
lea
jmp
bts
xor
dec
aaa
mov
push
pusha
xchg
call
bsf
movzbl
push
sub
sar
test
shrd
pushl
adc
bsf
push
dec
jmp
pusha
pusha
mov
pushl
pushf
push
lea
jmp
pushf
popl
bt
ror
ror
mov
stc
adc
bt
pushl
popl
not
mov
rcl
movl
stc
stc
add
mov
push
movb
cmp
cmp
add
call
add
movb
pushf
call
pusha
pusha
call
mov
pushf
pushf
call
xchg
lea
pushf
popl
ror
sub
jnp
shr
pushf
mov
neg
clc
clc
not
pushl
sbb
rcl
btc
bsf
push
test
shl
jmp
push
mov
pushf
push
xchg
bswap
mov
mov
call
pushf
jmp
mov
mov
movl
pushl
pushf
pushl
ret
pushf
pushf
mov
pushf
mov
call
clc
movb
sub
pusha
test
cbtw
cmc
jmp
bt
jmp
call
mov
movb
push
movb
push
lea
jmp
call
pusha
pushf
pushf
mov
pushl
pushf
mov
push
pushf
call
pushl
popl
pushl
pushf
mov
lea
jmp
mov
call
clc
shld
adc
ror
mov
jmp
inc
mov
dec
dec
rcr
shl
mov
cmp
jbe
cmc
pushf
sub
jmp
pushf
push
movl
mov
jmp
jmp
pusha
mov
movsbw
pushf
popl
rcl
mov
mov
neg
neg
sub
pushl
popl
shrd
pushf
movl
push
call
push
xchg
call
bswap
push
rdtsc
mov
pop
lea
seta
jmp
mov
push
mov
jmp
not
pushf
popl
movsbl
shl
mov
movsbl
pushl
popl
sbb
lea
jmp
rol
movl
neg
dec
bsr
jmp
pushf
pushl
xchg
pop
pop
pushf
popl
btr
mov
movsbl
shr
pushl
popl
btr
clc
movsbw
movl
push
bswap
cmp
mov
jmp
pushf
popl
call
pushl
mov
mov
call
pusha
btc
sub
mov
sar
call
sub
pushf
and
pushl
pushf
mov
pushf
pushf
pushf
popl
jmp
mov
pushl
lea
jmp
pushf
push
mov
pushf
pusha
mov
lea
jmp
sub
mov
jmp
call
jmp
cmp
clc
add
pushf
call
jmp
pushf
sub
pushf
mov
call
push
pusha
mov
push
jmp
xchg
lea
call
mov
jmp
sbb
mov
cmp
pusha
dec
stc
sub
jmp
lea
jl
mov
pushf
mov
pushf
pusha
mov
not
setb
movsbw
call
mov
mov
call
clc
cmp
pusha
lea
ja
adc
rcl
mov
shrd
aas
cwtl
lea
test
sar
sub
sub
and
push
lahf
lea
sub
adc
and
and
clc
btc
sub
sub
lea
mov
pushf
call
cmc
test
pushl
add
pushf
jmp
mov
pushf
lea
jmp
add
clc
jmp
not
bswap
pushf
popl
rol
lea
mov
shr
sar
push
bsr
pushl
popl
btr
xor
rcr
bsf
movl
clc
bsf
cmp
mov
jmp
push
mov
push
mov
pusha
mov
push
call
or
shl
xadd
btr
mov
sar
rol
mov
cmc
add
call
add
pusha
mov
movw
lea
jmp
mov
pushf
mov
jmp
bswap
movzbw
mov
call
rol
pushf
xor
call
jmp
pusha
pushf
push
mov
call
pushf
mov
push
movb
call
pushf
pushf
jmp
jmp
jno
lahf
mov
cmp
cmp
sar
mov
jmp
lea
mov
push
pushf
pushf
lea
jmp
pushf
rep
not
mov
shl
inc
mov
or
sub
movsbl
test
mov
pushf
call
xor
jmp
mov
sub
clc
add
bt
pusha
shl
mov
call
mov
pushf
jmp
mov
jmp
sub
movl
call
stc
cbtw
mov
cwtl
call
sub
movb
pusha
add
pushf
call
mov
movzbw
movsbl
jmp
bt
bswap
and
mov
pushf
adc
mov
cld
and
not
mov
xor
daa
inc
mov
btc
pushl
popf
setae
not
bswap
cwtl
mov
push
mov
pusha
rdtsc
pop
bswap
mov
cwtl
bswap
mov
xchg
lea
lea
mov
bswap
mov
pushf
movsbw
pop
lea
mov
mov
pushl
ret
push
mov
mov
lea
jmp
mov
mov
xchg
movzbl
not
not
pushf
popl
and
ror
and
rol
mov
inc
bsr
bts
pushl
popl
movsbl
shld
inc
neg
movl
shr
mov
push
add
clc
pushf
call
pushl
popl
push
mov
pushf
movb
lea
jmp
lea
jae
inc
test
clc
add
jmp
dec
sbb
shl
mov
cmp
call
jmp
jmp
call
pushf
push
pushf
popl
jmp
jmp
bswap
pushf
popl
call
call
movzbl
bsf
movsbl
pushf
mov
jmp
movzbw
cwtl
setae
push
setb
mov
push
call
dec
call
sub
pushl
pushf
pushf
pushf
lea
jmp
pusha
mov
mov
jmp
mov
mov
push
mov
mov
push
lea
jmp
rol
push
sub
cmc
mov
stc
cmc
bt
sub
pusha
cmc
pushf
add
push
pushf
popl
jmp
pushf
mov
mov
push
mov
pushf
pushl
ret
pusha
pushf
mov
jmp
jmp
movb
push
mov
pushf
movb
call
bts
mov
test
test
add
bt
jmp
movsbw
call
pushf
bt
setns
mov
pusha
pushl
add
bt
not
lea
jae
rol
pusha
cmp
movb
pushf
sub
call
test
shrd
push
call
pusha
mov
push
mov
mov
lea
jmp
pushf
pushl
pushf
popl
call
mov
call
call
pushf
popl
pushf
pushl
popl
pushf
push
movl
lea
jmp
lea
shrd
adc
aad
mov
btc
rcr
sar
jmp
pusha
mov
jmp
pushf
push
bswap
call
mov
lea
push
jmp
pushf
push
pushl
popl
pushl
mov
lea
jmp
mov
jmp
movzbw
mov
shld
sub
movzww
call
pushf
pushf
mov
pusha
movw
pushf
push
lea
jmp
shr
push
jmp
pusha
pushf
inc
jmp
pushl
popl
mov
pushl
lea
jmp
shr
mov
jmp
push
pushf
jmp
push
pushf
popl
call
rol
bt
clc
cmc
sub
pushf
lea
jmp
pushl
mov
push
pushf
jmp
pushf
mov
pushf
push
lea
jmp
xchg
std
pushf
pop
mov
pushf
cld
std
cld
call
movl
pushl
mov
pusha
jmp
call
jmp
dec
clc
xor
call
cmc
rol
mov
sub
push
pusha
pushf
pushf
lea
jmp
rol
shr
das
pusha
mov
dec
adc
cmc
shr
mov
clc
pushf
sub
test
shl
mov
jmp
call
bt
not
push
not
cmp
clc
and
movb
pushf
call
cwtl
pushf
mov
pushf
pusha
jmp
push
xchg
movsbl
pushf
movzbl
push
shl
btr
pushl
movsbw
btc
rcr
clc
push
inc
mov
pushf
cmc
call
mov
mov
push
call
pushf
mov
movw
pushf
lea
js
push
mov
pushf
mov
pusha
mov
call
pusha
mov
push
call
pushl
call
movb
mov
mov
push
mov
call
pushl
popl
mov
lea
jmp
sub
or
shld
rdtsc
cmp
call
pusha
mov
mov
push
mov
jmp
push
sub
mov
push
pushf
lea
jmp
test
sub
cmc
test
mov
cmc
add
pusha
pushf
pusha
mov
pushf
lea
jmp
sbb
notl
push
bts
bsr
sar
mov
stc
pusha
sub
pushf
stc
push
and
pushl
pushf
popl
push
movw
movw
pushl
popl
pushf
mov
pushf
lea
jmp
mov
add
movb
pushf
mov
call
shl
mov
shl
mov
clc
sub
push
call
pushl
mov
movsbl
pop
movzbl
pushf
pushf
popl
bsr
clc
pushf
bsf
mov
stc
sar
pushl
popl
shr
test
inc
movl
movzbw
or
rol
lea
mov
lea
jae
bt
stc
add
jmp
cmc
sub
pushf
lea
jmp
call
shld
adc
bt
btr
mov
add
clc
setg
xor
setge
pusha
ror
bswap
bswap
inc
rcr
rol
setno
rcl
setl
not
xor
rol
btc
mov
clc
add
lea
jg
pushf
pusha
dec
call
btr
rol
push
bswap
bswap
lea
movsbw
movzbw
inc
shl
rcl
cmp
sub
shrd
movzbw
mov
pushf
test
add
call
bt
cmc
sub
push
call
pushf
popl
movzbl
call
pushl
popl
mov
mov
movl
lea
jmp
pushl
popl
pushl
movb
lea
jmp
bt
jp
cmc
sub
bt
push
shl
jmp
lea
cmp
bt
push
push
add
jmp
call
mov
pushf
pusha
pushf
pushf
mov
push
movb
push
mov
pushf
pushl
pushf
xchg
pop
lea
bswap
pushf
popl
rcl
neg
bsf
mov
or
shr
pushl
popl
bsf
xor
and
movzbw
movl
rcl
test
mov
mov
cmp
cmc
add
bt
cmc
pushf
cmc
rol
mov
test
call
add
bt
push
push
sub
call
btc
or
mov
push
pushf
movb
add
bt
bt
rol
cmc
cmp
cmp
sub
pushf
pusha
mov
lea
jmp
jmp
bt
cmc
clc
rol
cmp
test
cmp
bt
sub
pushf
mov
pushf
pushl
lea
jmp
push
mov
not
pushf
pop
mov
pushl
mov
mov
movsbw
pop
mov
pusha
mov
pushl
pushf
push
pushf
lea
jmp
daa
shld
xchg
mov
jno
mov
pusha
pushl
sub
jp
add
push
push
pushf
mov
mov
lea
jmp
push
mov
pushl
call
cwtl
mov
rcl
shl
mov
pushf
pushl
pushl
cmp
add
call
pushf
popl
pusha
call
add
call
mov
pusha
pushl
popl
push
pushl
push
lea
jmp
pusha
call
mov
bswap
movzbw
pushf
popl
stc
sar
pushl
mov
ror
sub
bswap
xor
pushl
popl
shr
dec
pushf
btc
movl
ror
movzbl
and
and
mov
test
add
bt
mov
stc
rol
bt
sub
pushf
pusha
push
movb
lea
jmp
bt
pusha
rol
rol
sub
shld
pusha
jmp
mov
call
pushl
mov
movb
mov
pushf
jmp
mov
clc
add
push
mov
pushf
mov
pusha
pushf
mov
pushf
push
push
lea
jmp
pushl
mov
pushf
jmp
neg
sub
mov
call
stc
sub
jmp
mov
pusha
call
bt
cmp
sub
pushf
pushf
push
lea
jmp
pusha
mov
pushl
pushf
popl
mov
pushl
movb
pushf
pushl
popl
push
movw
push
lea
jmp
mov
pushf
mov
mov
mov
pushf
movb
push
mov
call
pushf
popl
pushf
pushl
popl
movb
mov
movb
lea
jmp
pushf
test
sub
test
push
shr
mov
mov
jmp
movl
mov
movzbw
lea
pushf
popl
dec
rcr
pop
mov
not
bsf
cmc
rol
pushl
popl
test
movl
shld
mov
clc
add
movw
movw
rol
bt
sub
movb
lea
jmp
xor
mov
pop
and
pushl
popl
shl
xadd
movl
xadd
mov
add
pop
setp
movsbw
add
lea
je
xchg
movzbw
rol
bts
or
xadd
and
sub
adc
sbb
lea
seto
mov
ror
bt
sub
lea
neg
mov
bt
shrd
mov
sar
and
rcr
xchg
add
bts
rcr
not
mov
mov
pushf
ror
xor
mov
setne
btc
bsr
sub
cmc
stc
pushl
push
not
bts
push
bswap
ror
bswap
movzbw
xor
movsbw
pushl
inc
pushf
dec
bsf
movzbl
jmp
call
mov
mov
pushf
pushl
push
mov
call
push
call
mov
call
