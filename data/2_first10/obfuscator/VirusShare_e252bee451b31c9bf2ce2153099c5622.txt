jmp
push
call
bound
idivl
shrb
push
pushf
pushf
movl
pushf
jmp
mov
cmp
test
cmc
or
call
sub
shlb
jge
jp
jo
clc
pop
jbe
das
cmpsl
arpl
popf
sbb
test
cmp
rdpmc
xchg
mov
dec
push
sahf
push
insb
fmull
mov
mov
pushf
mov
insb
faddl
add
clc
adc
mov
stos
pop
aaa
rolb
mov
push
sub
and
xor
sahf
lods
jge
adc
clc
pusha
add
xor
and
dec
daa
xor
sub
inc
mov
enter
fcom
pusha
imul
or
shufps
in
or
xor
adc
pusha
adc
and
sbb
clc
call
sbb
xor
shl
mov
ds
pushf
loopne
push
aad
hlt
push
cltd
cld
or
xchg
test
cli
pusha
mov
xor
lods
lock
scas
cmc
xchg
xor
mov
ljmp
fstpt
lods
pusha
lsl
lret
push
pop
sbb
aaa
test
xchg
jge
push
dec
xor
popf
imul
mov
and
add
pushf
pop
clc
and
xor
adc
in
and
xor
and
hlt
aad
add
out
shll
scas
sub
inc
sti
lock
sbb
subl
xchg
gs
jae
call
lahf
cmp
xchg
je
mov
xchg
adc
xor
lods
out
aaa
cmp
mov
fcomp
pop
int3
repz
popa
mov
jb
mov
lea
add
xor
gs
arpl
hlt
xchg
imul
adc
jae
jnp
lds
cmpl
lahf
mov
ret
sbb
push
lods
jno
popa
pusha
push
in
mov
lods
imul
lea
ljmp
cli
adc
insb
sbb
fcoml
sub
inc
xor
insl
adc
outsl
adc
sbb
shll
in
pushf
sbb
in
xor
pop
incb
pop
lret
adc
xor
call
adc
xchg
or
jnp
imul
popa
dec
cmpsb
cwtl
lret
push
lods
add
cmpsl
xchg
xor
lock
cmpsl
gs
xchg
ljmp
scas
and
aaa
mov
pusha
aam
dec
adc
sbb
pop
jno
inc
adc
mov
xor
out
sbb
sahf
addr16
cmp
xorb
pop
mov
xchg
pusha
mov
out
or
test
lret
cmc
pushf
out
mov
or
lahf
mov
mov
adc
jo
pop
inc
cmp
mov
mov
pusha
mov
popf
inc
adc
lds
jne
sti
push
mov
inc
xchg
xchg
mov
or
xor
xchg
sub
or
mov
mov
cwtl
mov
out
inc
push
cli
clc
add
loopne
sub
inc
clc
shrb
jnp
xor
imul
mov
cmpsb
out
pop
push
pop
sub
shrb
loopne
leave
and
stc
lock
and
xchg
cmpsl
cmpsb
jecxz
sbb
mov
insb
dec
fcomi
and
mov
xchg
dec
and
fiaddl
mov
xor
stos
xor
andb
jmp
cmp
and
sub
fadds
enter
xor
test
loopne
outsb
xchg
cli
mov
xchg
or
add
jbe
das
stos
imul
or
mov
movsl
pusha
mov
call
lods
push
orl
add
lock
mov
mov
xor
int3
xchg
outsl
add
aad
adc
xor
sub
lock
jns
add
xor
push
xchg
cmpsb
sub
and
inc
xlat
test
mov
jne
cmp
xchg
lock
aam
jmp
jp,pn
in
stos
xlat
and
std
add
shr
rcll
movsb
fsubp
add
xchg
xchg
std
pusha
mov
sbb
mov
popa
scas
out
mov
ds
push
mov
adc
pop
adc
out
sub
adc
aaa
xor
jne
dec
push
test
pop
mov
shlb
or
jecxz
or
adcl
sbb
imul
push
sbb
hlt
daa
sbb
loop
and
data16
stc
mov
in
adc
sub
pushf
or
jmp
lods
sbb
fadd
xor
mov
mov
xor
add
mov
mov
pop
xor
or
fcoml
pop
mov
icebp
in
and
xchg
stos
pop
xchg
hlt
cmp
add
imul
mov
sbb
lock
ret
adc
imull
mov
fisubrs
or
popf
adc
push
add
adc
push
add
loop
lods
out
jnp
and
dec
repz
cmpsl
dec
loopne
nop
es
adc
mov
lret
adc
ja
mov
cwtl
push
dec
or
sub
sbb
mov
int3
sbbb
dec
jecxz
std
lret
pop
sub
sbb
in
andw
xchg
xchg
xorb
mov
mov
sub
ss
or
sbb
shll
outsl
cmpsl
mov
xchg
sbb
jg
rolb
cs
es
sub
lds
sbb
sbb
call
add
lods
cmp
pop
push
imul
scas
neg
and
outsb
and
add
add
and
out
mov
mov
fldenv
mov
stos
adc
xchg
and
rcrb
fmuls
xor
push
hlt
mov
pop
sub
adc
mov
lock
sub
lret
cmp
negl
lahf
pop
fadds
xor
add
bound
icebp
pusha
ja
and
mov
inc
lea
fcomps
sub
stos
ljmp
xchg
adc
cwtl
aaa
ja
out
jno
stc
stc
stos
sbb
lods
jae
lret
add
cmp
aam
pop
xor
int
ja
pop
cmpsw
cli
sbb
arpl
xchg
insl
jno
and
and
stc
xlat
pop
and
adc
imul
pop
insl
sbb
jno
call
push
push
insl
es
xor
out
xchg
data16
and
lahf
mov
pop
mov
and
push
out
xor
shll
cmpsb
out
mov
or
clc
cmp
inc
push
sbb
out
cmp
repz
in
mov
xor
mov
pop
sub
shrl
push
sbb
stos
dec
push
adc
adc
xchg
jge
sub
pop
or
jno
ret
jae
jno
and
cmpsb
nop
push
push
xor
mov
stos
loop
cmp
in
jno
dec
xlat
rcll
pop
pushf
popf
es
adc
and
ss
scas
mov
popa
aaa
fwait
cmp
mov
call
daa
in
sbb
mov
mov
jmp
dec
data16
sub
pop
insb
es
push
imul
adc
or
push
mov
push
mov
or
inc
cmp
pusha
sbb
stos
adc
sub
pusha
mov
hlt
movsb
stc
subl
mov
js
sub
gs
test
rcrl
pop
or
push
lods
sub
lods
test
add
aaa
xor
lahf
and
dec
icebp
loopne
mulb
loopne
dec
sub
rolb
dec
or
push
int3
data16
pop
cld
sub
notb
pop
xlat
adc
divb
imul
push
mov
inc
add
mov
or
rcl
in
mov
fmull
aaa
in
jno
rcl
shr
xchg
test
aam
sbb
mov
rcr
inc
sbb
stc
mov
cmc
xchg
movw
shl
mov
movb
stc
test
pusha
sub
push
mov
call
push
call
cld
fldl
bound
add
pushf
push
repnz
pushf
push
lea
jne
pushf
movzbw
not
push
movb
bswap
lea
not
mov
movzbw
lea
pusha
call
pusha
cmp
movb
lea
ja
jmp
push
call
repz
lea
je
clc
pusha
bt
cmp
sub
mov
call
clc
bt
pusha
add
jmp
push
call
xor
dec
movb
jmp
pusha
stc
cmpb
pusha
lea
jne
daa
cmc
xor
bswap
setl
mov
rcr
shl
inc
add
stc
rol
mov
test
cmc
cmp
test
pusha
jmp
push
adc
push
push
cmp
mov
aam
data16
lret
shr
mov
inc
in
ja
cli
sbb
mov
add
mov
mov
xlat
pushf
cwtl
jl
pop
movl
pushl
mov
movsbw
pop
push
pusha
push
pushl
ret
stc
cmp
popf
push
pushf
push
lea
jmp
sub
cmc
test
call
call
jmp
pusha
setne
mov
movw
pushf
pusha
push
lea
jmp
push
call
popa
ja
std
push
lea
pushl
call
push
call
sub
lea
jae
clc
cmc
bt
pusha
cmp
jmp
lea
call
test
cmp
push
pushf
mov
call
jo
aam
les
ret
sbb
imul
or
scas
mov
stos
and
aam
decl
add
bound
ds
inc
jmp
pop
iret
jecxz
xchg
addl
clc
shll
jp
cmp
das
jns
incb
es
enter
mov
mov
mov
pop
outsl
rcrl
repnz
out
insb
xlat
out
popa
push
outsl
push
call
xchg
push
jp
jmp
mov
mov
pushf
movl
pushl
pusha
pushl
jmp
dec
inc
inc
xor
cs
dec
dec
add
jbe
dec
call
jns
jb
or
jg
add
xchg
cld
xchg
lea
je
jmp
test
repnz
pushl
jmp
test
push
std
pushl
popf
movl
mov
lea
jmp
adc
mov
and
dec
arpl
mov
lea
daa
xchg
and
dec
pushf
incl
pop
and
jg
movsl
adc
pop
mov
pop
and
or
xchg
pushf
push
js
js
aam
push
mov
xor
shrl
xor
mov
mov
cmp
xlat
pushf
xchg
inc
sbb
rorb
add
add
cwtl
repnz
mov
push
mov
mov
push
pushl
ret
push
mov
lea
je
test
cmp
cmp
call
into
out
lds
xor
pop
call
jnp
xchg
aaa
pop
aas
push
aas
adc
repz
mov
push
call
decl
adc
shlb
jo
outsb
push
int3
push
fsts
imul
call
clc
shr
mov
out
cmp
mov
xchg
mov
xchg
sub
pushf
xchg
and
movl
movb
adc
lea
jne
push
lea
call
call
push
rol
pushf
sub
clc
test
xor
clc
add
push
shr
pusha
pushf
jmp
cmp
pusha
pushf
pushf
lea
ja
or
add
inc
mov
pushf
cmp
pusha
pusha
call
mov
mov
mov
lea
jmp
push
call
std
loop
xchg
bt
clc
clc
add
push
call
jmp
jo
sbb
sbb
call
inc
loop
arpl
inc
cmc
dec
mov
pop
and
popf
daa
dec
pop
and
jno
push
fisubl
ror
lret
xchg
mov
dec
cwtl
iret
into
imul
and
push
mov
push
sbb
in
sub
imul
jnp
movsb
xor
pusha
ljmp
inc
jns
add
aaa
cmpsl
xchg
stos
scas
repnz
repnz
xchg
sub
mov
push
xchg
loop
cmpl
or
sbb
pushf
xchg
addr16
mov
jle
mov
loope
jb
sbb
push
push
push
sahf
sub
mov
inc
xchg
sahf
xor
cli
pop
dec
incb
aas
divl
and
stos
adc
push
out
fstl
loope
inc
call
sar
cli
xlat
pushf
xchg
lret
bound
and
xlat
push
dec
addr16
push
hlt
push
mov
es
push
insb
neg
test
or
pop
dec
cmc
aaa
inc
dec
repnz
fisubs
in
out
imul
icebp
mov
out
jnp
shl
into
mov
nop
pop
das
pop
xor
xor
pushf
xchg
add
pop
pusha
lea
jne
shld
xor
mov
rcl
bswap
shld
sub
or
rcr
mov
push
sub
call
add
add
add
add
add
add
add
add
add
loop
add
loopne
add
add
add
add
out
add
lods
stos
xchg
pop
xor
inc
mov
dec
ljmp
aam
sub
out
popa
out
jnp
mov
outsl
loop
imul
aad
mov
dec
fsubs
jmp
outsb
cmp
je
mov
jae
jge
insl
popf
inc
lds
push
aas
inc
scas
pop
ficomps
sub
inc
jns
mov
sahf
loopne
ret
arpl
adc
mov
add
in
mov
pushf
mov
hlt
stos
imul
sbb
and
ja
inc
push
fisubrl
mov
push
jb
mull
lds
pop
insb
and
jnp
sarl
inc
jbe
fsqrt
mov
scas
stos
fists
jbe
les
out
daa
inc
adc
out
jbe
out
pop
arpl
adc
mov
fcmovbe
sbb
push
in
mov
and
xchg
lds
push
in
sub
jl
or
mov
lods
movsl
lock
xor
xchg
push
and
adc
and
repz
pop
pop
mov
inc
adc
push
and
inc
push
enter
inc
adc
push
cmp
test
or
lods
cs
scas
mov
push
xor
pop
inc
roll
orl
out
inc
scas
stos
cmp
outsb
iret
addr16
inc
out
inc
xor
aaa
sbb
loope
mov
mov
das
in
mov
movsb
loope
aam
fs
cli
fimuls
jl
imul
movsb
out
jo
inc
or
add
test
js
add
and
jmp
orl
in
test
push
and
or
in
into
xchg
aaa
lods
or
fnsave
cmpsl
arpl
and
xchg
adc
xchg
sbb
insl
adc
xchg
mov
and
mov
mov
rcrl
testl
insb
stos
std
sub
adcl
bswap
xlat
mov
popf
inc
and
cmpsl
xor
cmpsl
add
or
aas
outsb
jl
insl
dec
push
mov
pop
xor
test
cld
test
or
mov
mov
or
ret
aaa
mov
das
xor
mov
imul
pop
cmpsb
stos
mull
into
popa
pop
sub
cmp
ss
add
imul
mov
scas
lods
test
push
arpl
mov
popf
loop
sbb
xchg
mov
and
into
sbb
test
sub
out
sbb
into
and
sub
mov
cltd
inc
call
sarl
into
xchg
sti
mov
sub
pop
push
mov
add
add
adc
xchg
hlt
lretw
insl
clc
lret
inc
arpl
hlt
mov
dec
add
mov
sbb
ret
inc
add
push
and
ljmp
mov
bswap
movsb
popa
mov
mov
cmp
test
adc
pop
arpl
cmp
test
lret
push
sub
jne
mov
push
add
mov
mov
mov
sub
movsl
add
jo
push
xlat
cmp
dec
and
pop
rolb
mov
inc
mov
movsb
cmp
cld
int3
push
jmp
fisubrl
sahf
lea
pop
lcall
dec
xchg
subb
cs
outsl
add
ja
scas
aam
clc
shr
xor
cmp
popf
jl
repnz
jl
xor
mov
fsub
or
sub
push
rcl
jmp
pop
and
lret
mov
lret
in
and
into
in
testb
xor
cltd
push
and
pop
inc
mov
scas
sbb
push
mov
sub
ret
mov
sbb
mov
xor
or
sbb
fdivl
and
punpckhbw
xchg
jmp
inc
pop
mov
jbe
adc
in
popf
mov
and
outsl
mov
sub
bound
mov
out
sub
xor
add
scas
fiaddl
lock
sub
in
out
scas
and
pavgb
test
cld
mov
int3
jb
sbb
nop
ja
adc
cmp
cmp
mov
cmc
dec
das
movsl
cld
xchg
jnp
int
xchg
dec
testb
call
inc
and
sub
dec
or
ja
xchg
mov
jg
mov
mov
mov
add
lea
bound
inc
int3
xor
sub
lret
inc
mov
push
imul
cltd
fldl
insw
mov
sub
xor
cmp
inc
jle
sbb
inc
adc
pop
pop
jp
sbb
mov
or
or
fs
aaa
js
cmp
shrb
pop
jnp
dec
pop
mov
mov
mov
xchg
dec
leave
mov
inc
mov
jg
sbb
orl
cmp
mov
in
xor
fistl
mov
mov
into
inc
cmp
sub
dec
mov
shll
xchg
and
scas
dec
mov
push
insb
pop
idivb
pop
into
jno
inc
adc
xchg
mov
fs
outsb
xor
sahf
and
insl
scas
xchg
aad
cli
mov
in
adc
js
pop
sbb
adc
sub
pxor
add
inc
test
adc
or
mov
and
mov
pusha
leave
outsl
mov
out
or
sbb
adc
movsb
jno
mov
push
in
push
mov
stc
dec
shll
in
mov
leave
dec
ja
lcall
nop
or
pop
cmp
lret
stc
and
aad
inc
ljmp
xchg
aad
leave
std
shl
jge
jmp
cmp
sub
addb
out
mov
shrb
sbb
jns
xlat
lock
out
mov
push
jae
call
jecxz
out
push
sbb
out
mov
mov
sub
dec
sbb
inc
pushw
inc
push
xchg
test
test
inc
mov
inc
out
inc
cltd
leave
out
je
xchg
xchg
bound
insl
nop
jmp
pop
adc
pop
in
imul
jbe
test
mov
ss
fildl
sub
mov
push
cmpsl
mov
ja
ret
lea
lock
push
rcr
pop
test
jge
mov
xor
add
add
jb
push
mov
push
int
out
pop
ljmp
mov
shlb
sbb
insl
movb
push
imul
or
jne
or
xchg
ret
sti
bound
add
sub
mov
das
insl
push
xor
dec
inc
aas
jge
sarb
aaa
jmp
andl
adc
jle
roll
mov
nop
rclb
test
daa
scas
mov
lea
outsb
testb
mov
or
dec
ds
sbb
or
sub
mov
dec
and
sbb
stos
test
adc
hlt
mov
rorl
out
mov
addl
cmp
enter
inc
imul
lea
sbb
test
or
or
cmpb
testb
mov
addr16
out
mov
call
push
adc
das
xor
lcall
pop
in
or
popa
xor
mov
push
pop
mov
push
sbb
and
push
sbb
mov
push
loope
fs
lds
shll
out
mov
aaa
filds
out
or
mov
int3
mov
xchg
das
pop
sar
jne
scas
or
mov
movsl
inc
lea
push
mov
pop
cmp
ljmp
in
mov
loope
mov
daa
inc
mov
lds
sahf
jecxz
lahf
jl
xchg
sub
sub
push
imul
push
jecxz
fsubrs
mov
xchg
nop
cwtl
fisubs
shll
push
mov
sbb
pop
and
jge
push
push
addb
mov
push
rcr
mov
es
xchg
loop
stc
scas
mov
hlt
clc
xchg
imul
add
or
xchg
mov
pop
mov
xor
mov
imul
cmp
pop
call
dec
fbstp
cltd
push
pop
sub
push
mov
arpl
xchg
or
mov
ficoms
dec
mov
mov
imul
pop
mov
xchg
es
imul
data16
mov
jp
int
or
ss
sub
mov
stos
scas
sub
mov
push
jg
pop
fmuls
xchg
xor
lods
push
mov
cmp
add
sbb
jns
je
movsb
stos
ja
fbld
xchg
xor
roll
imul
mov
jns
mov
cmp
rol
add
xchg
pop
sbb
mov
imul
cld
insb
or
push
test
lods
ljmp
sbb
sub
fcompl
mov
xchg
ljmp
cmp
mov
mov
hlt
sysret
sbb
ds
cmp
or
pop
cs
xchg
cmp
sbb
adc
and
inc
aam
sbb
cli
inc
sub
mov
push
in
in
jns
push
std
sub
ret
lds
pusha
mov
cli
mov
xor
cmp
inc
in
lea
inc
rcl
xchg
fildll
jb
jno
jno
mov
dec
imul
jne
or
or
frstor
in
daa
add
push
mov
or
rol
mov
mov
lea
mov
and
adc
xchg
aam
mov
aam
lock
pop
nop
lret
pop
repnz
mov
jl
jb
sbb
into
jecxz
shrl
repnz
cmp
shrb
ficoms
ret
sbb
popa
sub
mov
sbb
push
mov
jno
mov
sbb
pop
scas
sti
in
push
adc
stos
and
jbe
pushf
dec
clc
int
mov
cmp
lods
xor
mov
in
leave
dec
sbb
pop
push
jb
shr
sbb
fisttps
inc
mov
notb
je
lock
xchg
ja
lock
or
mov
leave
pop
push
pop
stc
jae
and
cwtl
ljmp
or
rcrl
loope
out
cmp
jecxz
stc
push
nop
aad
frstor
xchg
lds
add
pusha
lea
je
pusha
pusha
pushf
mov
jmp
movw
pusha
bt
rol
bt
cmp
sub
clc
bt
jmp
call
pushl
popl
pushl
pushl
ret
pusha
movw
lea
jne
pusha
pushf
pushf
lea
jmp
cmp
pushf
lea
ja
pusha
inc
inc
sets
mov
mov
pushf
inc
call
push
lea
ja
push
push
imul
pushf
bt
pusha
stc
add
pushf
lea
jmp
movw
call
mov
pushf
setnp
cwtl
movsbw
pushl
popl
movsbw
mov
mov
sets
movl
movsbw
lea
lea
pushl
movl
pushf
pushf
mov
movb
pushl
popl
pusha
push
mov
pushl
ret
push
call
push
pusha
lods
lcall
mov
or
add
imul
fldenv
lods
xor
sub
inc
lods
dec
adc
push
xchg
lret
sbb
push
inc
cmp
mov
mov
in
mov
add
inc
sbb
add
int
iret
incl
into
ja
je
xlat
pushf
test
and
je
push
pushf
adc
pushl
lea
jmp
test
jecxz
push
icebp
push
notl
push
ja
ja
cmp
mov
arpl
nop
movsb
popf
and
mov
je
fsubrl
pop
int3
jge
frstor
lahf
mov
cmp
cmp
jno
insl
push
std
shr
es
or
sub
dec
je
fmull
cmp
cmp
inc
jb
int
cmp
stc
int
cmp
outsl
fldln2
shr
pop
outsl
in
pop
shl
leave
decb
out
fcompl
mov
rclb
adc
mov
add
pushf
test
test
in
inc
cli
and
subl
subl
loop
inc
call
movb
inc
enter
scas
popf
lcall
aas
subl
and
daa
sbb
stc
ljmp
lods
xchg
and
scas
aaa
mov
cwtl
mov
mov
mov
mov
inc
imul
popf
mov
dec
arpl
ret
aad
lock
clc
sarb
jge
jge
jmp
xchg
mov
aad
iret
jb
lea
or
jg
lock
shlb
push
in
ds
cmpb
sub
mov
insb
push
call
pop
outsb
xlat
insl
push
xlat
pushf
andl
cmp
lea
je
pushf
lea
jns
pushf
pusha
add
jmp
cmp
push
rorb
mov
cmp
cwtl
es
jne
inc
dec
xchg
sbb
shll
out
cmp
int3
lret
icebp
pop
pop
test
dec
ljmp
jle
out
push
jle
clc
xlat
loopne
mov
mov
outsl
nop
lea
dec
in
jae
jnp
push
push
out
repnz
xchg
sahf
popf
xchg
mov
push
jle
dec
sbb
dec
xchg
dec
mov
lret
stc
dec
sti
dec
je
clc
inc
std
rcl
xorb
fs
jnp
jne
bt
cld
jmp
call
lea
jne
call
push
call
mov
mov
sbb
mov
pusha
jmp
push
call
push
cwtl
mov
sub
mov
les
les
sbb
push
xchg
mov
push
xor
inc
cmpb
pop
jp
aas
xchg
mov
andb
cltd
in
jp
into
testl
push
jns
shrb
push
cmp
xchg
xor
jmp
lret
insl
ret
mov
or
xchg
and
and
sub
es
xlat
pushf
sbbb
push
call
loopne
xchg
sub
mov
jmp
mov
lea
pusha
pushf
call
lea
bswap
call
jmp
jmp
add
push
imul
insb
insb
outsl
arpl
int3
popf
push
call
ficoml
ljmp
pusha
mov
mov
pop
bswap
movl
mov
lea
lea
pusha
call
test
inc
lods
cmp
stc
sub
and
and
and
xchg
and
xchg
and
divl
lock
jbe
fiadds
lods
sbb
sub
push
leave
clc
shl
jmp
mov
cmp
lahf
sub
ljmp
mov
shr
aad
fbld
jmp
in
shl
push
loope
pushf
adc
inc
jmp
xchg
fidivrl
call
mov
lahf
hlt
xchg
inc
xlat
mov
dec
popf
cltd
mov
pusha
mov
add
mov
jb
aas
xchg
cmpsb
xchg
xor
adc
sti
mov
sbb
jge
loop
push
jge
cli
enter
inc
jb
repnz
xlat
pushf
jg
mov
and
je
push
add
movw
pushf
push
pushf
lea
jmp
lea
movzbl
mov
call
mov
lea
push
movsbw
pushf
call
jmp
cmp
js
adc
mov
mov
gs
mov
xor
loopne
push
leave
jecxz
pop
push
cmp
add
add
pop
inc
movsb
cltd
ds
out
xor
das
lahf
or
xchg
xchg
in
dec
std
stos
cld
dec
stos
in
inc
fbstp
jl
push
loopne
imul
cmp
mov
or
arpl
popf
push
lea
jmp
push
call
jge
lds
std
push
cli
inc
outsl
notb
xchg
mov
or
xchg
fbld
inc
lods
in
adc
sbb
es
mov
jl
sti
jge
out
std
inc
cld
cli
sti
call
dec
lret
gs
fcmove
mov
xor
cmp
xor
mov
push
xchg
mov
xor
lds
push
imul
cld
in
addl
movsb
cltd
flds
xor
out
push
jge
jge
cld
dec
jns
test
mov
push
dec
call
stc
shlb
cmp
pushf
pushf
lea
jae
call
ja
push
add
movb
cmp
bt
cmc
cmp
pushf
call
call
jb
pop
stc
lds
repnz
repz
hlt
pop
sbb
sbb
fidivrl
lock
push
sahf
xor
pushf
inc
cmp
gs
clc
add
insb
jno
mov
or
inc
fcmovu
insb
aad
sub
arpl
sahf
mov
and
mov
ljmp
xlat
jnp
mov
into
gs
fs
insl
dec
arpl
out
rcrl
enter
in
xchg
stos
fbstp
fsub
dec
dec
imul
jl
ljmp
cmp
cmp
in
movsl
inc
rorl
jge
sub
or
in
arpl
push
out
push
pushf
jle
dec
imul
cmpsl
push
lea
jb
clc
clc
clc
cmp
jmp
push
call
mov
dec
mov
xor
lea
call
pushf
pushf
pusha
lea
jae
jmp
lea
je
sets
mov
test
sub
shld
btr
cmc
sub
shr
mov
or
pusha
bsr
mov
neg
sub
add
bswap
bswap
xor
add
add
bswap
mov
call
movl
or
call
push
call
sbb
dec
mov
jmp
mov
lea
jb
test
push
pushf
test
cmpb
pusha
call
test
pushl
pushf
jmp
pushf
pushf
lea
ja
cmc
pusha
stc
imul
pushl
add
push
pushl
pushf
lea
jmp
std
inc
pusha
lret
scas
push
cmp
sbb
pop
call
js
add
insb
rolb
add
add
pop
xor
dec
sti
adc
pop
add
adc
sti
fcoml
test
mov
imul
xchg
test
dec
sub
aaa
inc
decl
call
jge
jne
out
jmp
in
jo
add
test
push
aaa
and
inc
jns
jns
sti
inc
std
les
repz
xchg
sub
out
nop
stos
fistpl
xchg
insl
add
inc
jl
stc
xlat
pushf
jl
outsl
mov
xchg
ljmp
sbb
cltd
mov
cmp
test
cmp
rorl
jno
test
out
roll
and
jecxz
incb
sbb
xor
sub
mov
mov
xorl
xlat
pushf
jl
movsb
fildl
mov
xchg
inc
insl
stos
xchg
bound
imul
popf
fdivrp
dec
ljmp
subb
fistl
push
jmp
pop
aas
stos
pop
adc
and
dec
push
push
mov
movsl
mov
mov
hlt
test
mov
push
fiaddl
mov
insl
outsb
fildl
cmpsb
sbb
jno
push
xorb
cmp
mov
mov
pushf
jnp
and
xor
lea
jne
cwtl
mov
mov
mov
mov
push
push
pusha
push
lea
jmp
adc
repz
sahf
xor
jo
push
imul
call
clc
adcb
dec
in
loopne
in
inc
sahf
adc
and
sahf
dec
jb
data16
stos
xor
jmp
in
pop
dec
aaa
sbb
out
sbb
cltd
stos
adc
sahf
stos
adc
mov
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
fs
je
pushf
lea
jmp
push
mov
pusha
lea
ja
pusha
pusha
jmp
popa
mov
xor
pop
cmc
push
lock
lock
ds
jnp
fcmovu
iret
jmp
fcomp
sahf
aaa
and
ret
adc
add
xchg
xchg
mov
cmova
out
adc
jnp
addl
mov
enter
mov
shl
pop
jmp
push
out
pop
insb
push
insl
xlat
pushf
jns
sti
fldt
cmp
ss
pop
fmuls
dec
call
push
xor
mov
lea
push
bswap
movsbw
movzwl
jmp
push
call
loop
push
cmp
lods
repnz
jl
nop
ljmp
jle
jbe
jle
outsb
push
mov
xor
pop
repnz
push
and
mov
fincstp
jmp
mov
mov
push
cmp
jnp
sbb
mov
sub
sar
in
jp
out
mov
insl
cs
jnp
sbb
and
pop
dec
push
ds
jae
xor
das
adc
mov
xchg
and
pushf
jns
into
push
jmp
push
call
push
push
call
xor
adc
imull
pushf
ss
cmpsl
icebp
sub
jnp
jp
sti
sar
cmp
mov
mov
push
jmp
add
sub
add
xor
pop
dec
inc
jmp
add
test
dec
or
ret
mov
sahf
cmp
or
mov
adc
popf
loop
cmc
push
xchg
inc
cmp
xchg
aas
xchg
das
xchg
cmpsl
pop
sub
out
repnz
call
jge
mov
sahf
mov
jo
call
dec
insb
pop
jnp
jno
push
daa
pop
ret
dec
test
movsb
add
add
mov
mov
and
stos
lahf
addr16
ljmp
data16
mov
loopne
gs
lods
and
jno
jecxz
std
les
cld
jnp
jo
testb
je
testb
js
and
test
cmp
push
pusha
movb
push
lea
ja
add
rcl
rol
test
sub
push
adc
shl
add
add
add
xor
shrd
mov
and
mov
jmp
push
lret
andb
movsl
add
and
dec
jbe
xchg
das
inc
ret
xor
insb
dec
mov
arpl
inc
cmp
scas
ret
cmpsl
aaa
or
jno
cltd
lcall
int
xor
mov
fldcw
out
out
pushf
ja
or
arpl
and
mov
xor
push
fs
push
int
xor
mov
inc
inc
push
sub
jbe
ss
jbe
nop
aaa
ja
test
sub
sbb
and
pop
icebp
enter
fidivrl
loop
gs
in
in
pop
xlat
pushf
ja
int
call
test
clc
repnz
call
mov
pushl
popl
movb
pushl
ret
push
call
scas
ret
and
cmp
dec
call
pop
test
push
call
or
inc
negb
scas
push
cmp
adc
ljmp
dec
ljmp
cmp
dec
cld
or
int3
push
clc
cmp
insl
in
imul
leave
clc
sub
add
ja
mov
push
loope
adc
test
or
mov
add
test
and
lea
ja
stc
jmp
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
lock
loop
push
iret
mov
repz
neg
cli
push
jb
sahf
xor
cmpsl
sbb
xchg
fwait
sbb
add
in
fsts
mov
sbb
cmp
sar
mov
ljmp
inc
jp
sub
cmp
mov
add
cmp
cmp
ficompl
push
call
rcrl
and
ja
add
sub
stc
push
add
add
rol
bt
mov
sub
sbb
rcl
stc
mov
call
bt
test
sub
pusha
lea
jnp
pushf
pusha
rep
not
mov
pushf
lea
jmp
cmp
popf
aaa
or
push
rcl
lret
jmp
jecxz
in
inc
loopne
out
inc
jmp
adc
inc
dec
xchg
sub
lock
add
out
dec
leave
mov
popa
jge
in
dec
out
out
imul
std
cmpsl
sahf
scas
push
push
fucomi
cmp
lods
cltd
in
xchg
mov
push
gs
jmp
pop
arpl
shl
xlat
pushf
jne
jno
pushf
mov
movl
pushf
pushf
call
sbb
in
cli
ss
pop
jbe
not
jae
repnz
repnz
js
rorb
imul
inc
add
cmp
dec
push
sti
inc
jmp
call
cmp
xchg
jle
imul
pop
and
jo
push
mov
sub
mov
ret
inc
es
out
mov
sbb
adcb
or
sbb
cli
inc
mov
scas
xor
test
ss
pop
jne
gs
jno
clc
dec
mulb
testl
ret
mov
xchg
daa
adcb
add
sub
fbld
sti
add
fisttpl
mov
or
mov
mov
add
dec
ja
cltd
push
movsl
push
out
mov
repnz
mov
pop
out
cmp
out
push
xchg
jne
xchg
sar
or
sbb
sbb
adc
rclb
pusha
outsb
roll
push
addr16
mov
rcrl
imul
js
popa
scas
movsb
xlat
jo
inc
jb
loopne
in
mov
adc
or
inc
xor
cmpb
jmp
insb
push
into
jno
sbb
add
ja
aad
or
mov
test
xchg
sub
pop
jp
mov
pop
cwtl
not
cwtl
lea
push
pusha
jmp
pushl
lods
mov
jmp
mov
pushf
lea
jb
stc
push
cmc
cmp
pusha
call
push
movzbl
movb
mov
sete
pop
call
push
call
sub
dec
call
inc
cmp
stc
sub
jmp
push
call
jne
pop
fisubrs
in
imul
pop
jnp
js
icebp
mov
stos
lea
jg
jge
push
test
stos
int3
loop
out
out
arpl
out
loope
jp
mov
push
shll
fcoms
std
pop
int
xor
lret
mov
push
mov
dec
js
ja
sti
int3
jne
jbe
test
mov
pusha
cmp
pushf
call
jmp
push
call
hlt
rorb
je
add
inc
and
add
add
movzbw
call
push
lea
jne
seto
sete
call
rol
mov
rol
shr
inc
btc
add
sub
add
sbb
mov
pusha
cmp
pushf
cmpsb
movb
pushf
lea
ja
call
call
movl
pushf
pushf
call
pushf
movb
pushf
test
sub
lea
cmc
cmc
clc
stc
or
call
cmp
jmp
setno
cwtl
lea
pusha
push
movl
jmp
xor
ss
adc
and
push
aam
and
mov
push
shll
jbe
cmp
and
and
divb
lods
xor
aam
fmull
das
ja
cmpsb
inc
lret
cwtl
ret
pushf
push
int
rclb
push
dec
sub
ss
sbbl
xor
xchg
add
test
jmp
and
pusha
add
push
pushf
movb
push
lea
jmp
inc
jmp
cs
int
fisttps
sbb
dec
popa
int3
retw
jle
mov
mov
insb
stos
xchg
inc
add
push
push
cmp
dec
jb
cmp
lods
and
mov
add
pop
sub
loopne
xlat
jns
mov
xchg
cmpl
or
or
jo
shrb
dec
call
mov
std
push
call
jecxz
inc
and
setge
pop
call
outsl
addr16
out
scas
push
xor
dec
xor
pop
lock
jne
cli
pop
jno
jae
out
or
std
incl
lcall
clc
aad
rol
repz
xor
cltd
cwtl
scas
adc
dec
jecxz
add
ljmp
cmpsl
xchg
sub
mov
adc
loopne
daa
lea
jne
shr
ror
shld
bsf
mov
call
pusha
cmpsb
movb
push
lea
ja
pusha
jmp
popf
sub
and
jg
lahf
mov
mov
inc
decb
mov
scas
push
and
sbb
push
push
sub
pop
fs
outsb
push
xor
fnsave
or
cli
aaa
mov
insb
jae
mov
jbe
hlt
jg
scas
or
sub
push
mov
addb
pop
mov
dec
xor
outsb
sub
sub
lock
subb
sub
cs
xlat
pushf
outsl
pusha
jg
not
cwtl
movl
movb
lea
pushf
jmp
jmp
lea
jne
add
add
pushf
ror
sub
bsf
lahf
mov
clc
add
ror
movb
mov
cmc
test
call
push
call
mov
pop
or
add
js
out
shll
mov
in
gs
fs
push
insb
mov
dec
xor
mov
shrl
pop
loop
sbb
and
adc
idivb
mov
dec
inc
jl
outsb
jl
pop
cld
icebp
fdiv
outsl
adc
movsl
sbb
or
lcall
mov
mov
pop
jecxz
cmp
mov
xchg
inc
in
inc
jg
rolb
jp
jns
jge
adc
into
or
mov
int
into
jp
jno
test
lret
jnp
pushf
outsb
dec
adc
inc
mov
jae
mov
shll
sbb
cmpxchg
nop
pop
dec
scas
repnz
xor
lea
pop
sarb
inc
add
xor
inc
dec
insb
sbb
fcomip
jp
scas
sbb
stos
mov
sub
leave
jo
jnp
jp
jne
sti
inc
jnp
jg
std
dec
testb
outsb
add
jle
add
add
test
pop
lahf
add
ja
push
clc
pushf
jmp
sbb
and
or
mov
inc
add
subb
lods
push
jmp
imul
fdivs
daa
and
jl
fldl
roll
ret
sbb
cs
mov
jnp
jno
sub
shr
shl
push
in
push
insl
pop
out
xlat
pushf
insl
xchg
ss
push
call
mov
pusha
mov
pushl
popf
pushf
push
pushf
lea
jmp
lea
call
pushf
call
clc
cmpb
pushf
push
push
lea
jne
movzbl
lea
pushf
and
sub
lahf
bts
jmp
jmp
push
call
call
pushf
movb
push
push
pusha
mov
setne
lea
call
lea
jne
bt
rol
mov
clc
sub
bts
shl
movsbw
shrd
mov
test
clc
sub
test
pushl
call
push
call
and
idiv
pushl
in
jns
fldt
lds
sbb
adc
xchg
or
mov
es
cld
mov
repz
fwait
xchg
in
inc
mov
test
lock
shrl
loopne
inc
jno
addr16
lods
sbb
jnp
push
data16
andl
mov
mov
xlat
pushf
insb
aaa
and
push
movb
pusha
lea
jne
call
push
rep
jmp
fs
loope
out
aas
addr16
xchg
mov
mov
cmp
inc
jae
fadds
mov
outsl
sbb
repz
or
cli
cld
aaa
inc
test
outsl
inc
jmp
hlt
sub
inc
ja
repnz
nop
loope
pop
xchg
and
adc
stos
xchg
and
xchg
and
and
sbb
pushf
push
mov
lea
je
call
pushf
pushl
mov
push
rol
pusha
clc
movb
call
ja
insl
jl
cltd
js
xchg
in
inc
push
in
rorl
add
mov
dec
js
scas
adc
xchg
fidivl
pusha
arpl
repz
jmp
mov
sti
fsubrp
pop
jge
lea
cli
std
jecxz
mov
push
bound
subb
add
aas
sub
flds
sbb
sbb
sahf
sub
ja
in
jmp
scas
mov
jg
jb
jae
icebp
pop
call
lea
xor
mov
out
jne
or
or
pop
lods
jp
xchg
test
pushf
push
rcrl
push
call
inc
fstpt
mov
and
pushl
push
push
pushf
pushl
ret
push
call
enter
stc
sbb
stc
mov
pushl
repnz
jmp
movw
push
push
lea
jbe
not
ror
xadd
mov
shld
add
dec
test
sub
stc
mov
adc
add
shl
movsbl
movsbl
sub
movl
sbb
mov
bt
cmp
test
pusha
jmp
push
add
clc
mov
movzbl
add
shl
lea
mov
and
add
mov
or
sub
push
setbe
pushf
setbe
lods
push
setle
setnp
sets
rol
shl
neg
clc
sub
neg
xor
bt
add
mov
setle
jmp
pusha
lea
jne
not
pushf
pusha
mov
pusha
pushf
pushl
mov
pushf
popl
stc
stc
cmp
call
stc
stc
cmpb
push
lea
jne
add
not
add
neg
xor
pusha
mov
and
clc
add
or
ror
bt
mov
bt
test
pusha
jmp
push
call
iret
jmp
push
push
dec
call
rolb
std
lea
lea
not
push
pushf
movzbw
movzwl
pop
call
push
call
push
push
call
leave
mov
add
shlb
mov
and
fistl
cmp
pop
std
aam
sarl
jle
sti
insb
pop
cmp
ret
arpl
inc
inc
es
mov
lods
push
or
jnp
xlat
out
fucomi
pop
pusha
pop
jecxz
loop
loopne
int
scas
mov
lds
aam
mov
mov
add
scas
adc
popa
push
jge
adc
add
mov
add
data16
addb
add
leave
fiaddl
add
cwtl
push
add
add
add
add
add
push
add
push
add
icebp
add
pusha
lods
push
add
push
add
incb
add
add
add
insl
inc
jge
out
inc
mov
inc
jmp
out
dec
jge
xlat
out
dec
adc
xchg
shr
dec
jnp
push
jne
out
repz
ret
jmp
pop
mov
xchg
push
mov
test
pusha
xchg
sbb
sbb
enter
push
pop
mov
jg
mov
cmp
lret
push
and
mov
in
gs
sbb
xchg
movsb
pop
sub
cld
iret
push
imul
shl
pushf
push
movb
lea
call
bt
sub
push
movw
jmp
lret
dec
fsubrs
aas
push
aas
jo
jns
jns
hlt
aam
inc
clc
arpl
daa
inc
dec
hlt
adc
out
push
add
dec
push
test
xor
cmp
sub
mov
xchg
lahf
icebp
cmp
add
dec
inc
xor
test
cmpsl
mov
push
cltd
inc
and
lods
xchg
and
sub
lods
xchg
movsb
lahf
cmpsl
adc
pushf
data16
es
lea
jne
stc
stc
cmp
shl
not
setle
jmp
test
setbe
mov
xor
bts
add
stc
rol
inc
movl
dec
bsf
sar
push
mov
push
push
jmp
pushf
movl
push
pushf
lea
call
pushf
lea
jb
pushf
pushl
pusha
mov
pushl
ret
cmp
lahf
fsub
pop
scas
pop
sbb
int
inc
insb
dec
in
imul
ret
imul
push
xlat
or
jno
pop
fsubl
daa
enter
lret
arpl
fs
sub
fsub
jne
scas
or
sar
pop
xchg
shlb
xchg
sub
outsl
aad
push
and
add
mov
push
and
adc
sbb
inc
inc
push
mov
add
dec
imul
dec
mov
mov
stos
mov
xlat
fbstp
js
mov
mov
push
mov
data16
ds
call
sbb
out
and
fisubs
mov
cmp
bt
and
shl
test
add
call
sbb
std
xlat
push
jge
cmpsb
add
jmp
push
call
lahf
int3
add
mov
push
stos
shr
xor
shr
mov
jl
imul
cmc
jb
je
in
popf
pop
lcall
and
cmpsb
pop
cmpsb
mov
aas
xor
fsubr
push
fs
push
in
fsubrs
out
xlat
pushf
gs
inc
ds
call
sarb
int
push
dec
call
pushf
mov
xchg
lea
lea
movsbw
not
pop
movsbw
movzwl
movzbw
call
fcmovbe
jo
imul
xchg
xor
xor
aaa
adc
inc
inc
cmp
and
sbb
pop
repz
loope
dec
jbe
lret
mov
xchg
test
dec
nop
cmpsl
divl
push
push
mov
leave
mov
or
test
cmpl
add
pushf
test
mov
mov
jmp
movl
pushf
pushl
pusha
pushl
popl
pushl
pushf
pushl
ret
clc
neg
call
lea
jne
bswap
mov
pusha
push
movb
pushl
lea
jmp
add
inc
add
inc
add
rolb
push
inc
add
add
add
idivb
dec
call
mov
push
rolb
lods
pop
cmp
add
xchg
push
call
and
je
stc
pushf
add
test
stc
test
cmp
pusha
mov
lea
jb
jmp
inc
neg
pushf
xchg
stc
mov
and
jmp
mov
mov
pusha
mov
call
pushl
lea
jne
stc
test
cmp
popf
pusha
pusha
pushf
pushl
lea
jmp
or
inc
in
rcl
mov
fidivrl
lock
repz
push
ja
cld
dec
jne
push
int
mov
mov
icebp
cs
pop
jo
pop
push
arpl
jle
out
pop
inc
inc
pop
sub
fiadds
testl
xchg
clc
out
in
iret
out
pop
rorl
loope
lret
je
sbb
sahf
and
shlb
mov
mov
jge
jmp
mov
sbb
fcmovb
insb
push
push
sbb
pusha
pop
icebp
insb
xchg
jmp
andb
mov
daa
xchg
movsl
sbb
xchg
sub
and
pushf
arpl
push
out
jg
cmpsl
cmp
sbb
shr
cmp
shll
adc
xchg
sub
testl
fcomps
das
sbb
icebp
out
xlat
out
jmp
jbe
dec
adc
jg
pop
sub
lret
fmulp
push
dec
out
repnz
jae
ja
popf
pusha
pop
icebp
imul
or
sbb
imul
jne
ja
decb
pushf
bound
push
dec
call
cs
add
into
in
and
push
or
adc
fwait
mov
mov
pop
jo
je
push
inc
inc
inc
pop
pop
and
xor
inc
rcl
incb
cmp
ds
xchg
mov
xchg
popf
sub
cmp
pusha
jb
mov
inc
jnp
std
inc
clc
into
jle
std
inc
jge
ja
pushf
bound
adc
adc
neg
out
es
repnz
lea
or
dec
addr16
inc
aas
cmp
push
dec
rol
lcall
xor
bound
lock
dec
cli
sar
inc
stos
dec
jp
jmp
push
insl
sub
ljmp
xchg
mov
mov
push
mov
xchg
pushf
popa
outsb
adc
pushf
call
pushf
bt
sub
call
mov
test
loope
sub
sub
sub
popa
leave
addr16
in
out
mov
sbb
out
push
or
add
sub
mov
jne
push
das
fwait
dec
data16
adc
test
adc
loopne
mov
or
xchg
add
mov
pushf
popa
mov
dec
out
cmc
mov
movl
insb
inc
jmp
inc
shl
bound
imul
incb
rcrl
jnp
pop
cmp
clc
loope
xor
jnp
xor
sar
icebp
mov
sub
andb
lods
lahf
fcomp
push
adc
hlt
and
xor
sub
adc
push
mov
xor
push
imul
xlat
loop
call
pushf
pop
mov
and
xor
movl
add
stc
pushw
popfw
jmp
pusha
movw
call
lea
ja
inc
sub
pusha
test
sub
add
cmp
mov
sbb
ror
test
mov
bt
clc
bt
repnz
push
pusha
lea
jne
bswap
not
movb
pushf
mov
call
jmp
adc
mov
and
shl
push
xor
loop
outsb
dec
inc
in
or
push
jp
push
push
xor
fs
in
andl
lods
ret
jnp
arpl
and
lahf
mov
jae
cld
aaa
mov
push
jae
in
dec
lods
cmc
pop
xchg
push
out
shr
push
popa
pop
loopne
jecxz
pushf
pop
shl
sub
test
or
outsl
push
call
arpl
dec
call
push
adc
nop
ljmp
iret
jecxz
add
shr
hlt
in
inc
sub
mov
repz
push
call
fsub
pop
sub
jo
out
mov
xchg
mov
pop
out
jno
jle
lret
inc
daa
nop
mov
jmp
movsb
jecxz
mov
mov
enter
lahf
jno
popf
es
inc
cli
inc
jp
cmc
ret
jg
testb
pushf
pop
jnp
addr16
shr
cmp
cmp
call
push
call
insb
cmp
mov
dec
call
add
add
push
call
push
in
pushf
lods
push
call
pop
cwtl
pushw
push
dec
call
cltd
and
mov
test
movw
pusha
push
lea
jne
pushf
jmp
fcoms
fdivp
pop
je
lahf
cmp
daa
or
pop
sbb
divl
and
jmp
inc
dec
jo
jae
cltd
and
mov
jne
ja
mov
push
jns
insl
fsubrs
shl
push
push
fcom
pushf
pop
xchg
inc
cwtl
pushf
jmp
and
or
mov
fwait
mov
adc
pop
push
jge
jns
pop
roll
mov
int
ja
stos
xchg
icebp
ret
aad
inc
jl
popa
pop
mov
imul
or
mov
cmpsl
push
mov
push
adc
pop
js
jns
jge
jnp
lock
sti
int3
jno
xlat
pushf
pop
cmp
or
enter
imul
mov
call
std
push
lcall
cmc
and
or
push
and
inc
jecxz
arpl
repnz
sbb
addr16
xlat
inc
adc
pop
negb
les
sub
mov
in
ret
ljmp
xlat
jle
fs
loopne
mov
int3
js
jae
std
iret
jnp
incb
inc
xlat
pushf
pop
xor
incb
lods
test
fs
popa
inc
add
or
pop
sbb
xor
scas
adcb
push
mov
mov
cmp
mov
or
cmp
jmp
out
fldt
dec
sarl
lahf
stos
ja
mov
mov
mov
or
xorb
xlat
pushf
pop
xchg
dec
rcr
jge
bound
mov
fs
loopne
in
fs
jecxz
loopne
fs
mov
dec
mov
adc
or
inc
cmp
pop
jle
sub
sbb
mov
mov
sbb
int
dec
fmulp
mov
mov
aas
jge
xchg
call
iret
js
cld
inc
stc
lret
jne
pushf
pop
hlt
fwait
call
dec
call
fisttps
and
mov
jp
clc
mov
aas
xchg
mov
cmpb
in
jl
xchg
cmpsb
sub
xchg
xchg
ja
jae
push
add
out
in
sti
dec
js
cmpsl
ret
and
cmp
cmp
arpl
and
pop
dec
jg
and
sbb
rorl
cld
enter
inc
jb
jg
jne
cli
icebp
xlat
pushf
pop
outsb
imul
call
es
pushf
lea
jae
not
mov
pusha
push
pusha
inc
push
mov
lea
push
jmp
test
stos
or
js
xchg
mov
pushf
mov
xor
lods
rorl
mov
xchg
dec
ja
or
adc
adc
or
or
mov
js
test
add
sub
fucomp
jp
repnz
push
mov
jmp
mov
pusha
inc
fldenv
mov
scas
jle
pop
repnz
addr16
loope
push
aad
sbb
or
add
sub
xor
adc
adc
cmp
cmpsl
xchg
sub
movsl
lahf
and
movsb
sbb
pushf
pop
jmp
movb
sets
mov
pushf
setbe
jmp
pop
mov
add
add
add
subl
cmc
cli
mov
sbb
mov
cwtl
xor
cmp
sub
push
in
dec
inc
mov
push
push
movsb
and
push
xchg
out
aam
xlat
sub
xor
dec
inc
jae
stc
push
push
xchg
sar
iret
mov
xor
das
out
and
clc
pop
int3
jl
sbb
cmp
sbb
addr16
mov
bound
inc
call
insl
xlat
loope
data16
xlat
pushf
pop
xchg
cmp
sbb
add
call
pusha
cmc
push
sub
mov
push
jmp
movsl
test
stos
and
dec
pop
nop
mov
xor
inc
out
push
xchg
fwait
cmp
shl
leave
clc
das
adc
fcmovnb
add
add
mov
and
repnz
stos
mov
mov
fiadds
pop
in
out
imul
push
xlat
pushf
pop
sbb
shr
out
decl
test
movsbl
jp
push
mov
push
movl
call
orb
jbe
mov
mov
xor
xchg
ds
and
pop
jae
cltd
mov
mov
cmpsl
test
jge
shl
push
sbb
or
lods
mov
xor
sub
add
cltd
out
fimuls
add
or
fmuls
sbb
jae
cld
inc
ja
stc
dec
hlt
dec
cli
into
lock
xlat
pushf
pop
add
adc
xor
mov
in
fcmovu
mov
push
jae
icebp
fdivs
cltd
mov
daa
push
cmpl
lods
xchg
jbe
testb
pop
inc
jecxz
jmp
cmc
iret
popf
pop
call
pusha
fcmovnb
shlb
inc
test
andl
sub
mov
dec
repz
cld
inc
ja
js
jne
js
xlat
pushf
pop
xor
jmp
push
push
inc
push
xor
cs
insb
add
call
lea
je
pushf
cmp
pushf
lea
jne
je
clc
cmp
push
call
push
call
sub
push
movl
push
movl
lea
push
pusha
lea
lea
pusha
call
mov
neg
cmc
rcr
btc
add
btr
shl
dec
movl
bt
btr
mov
pusha
pushl
jmp
push
call
mov
add
push
int3
add
push
call
jg
loop,pt
cld
cmc
pushl
popf
pushl
pushf
lea
jmp
jle
popf
cmp
adc
push
sbb
mov
pop
cmp
incb
cltd
mov
addb
mov
je
jle
or
cmpsb
dec
imul
and
adc
and
outsb
dec
inc
enter
ret
or
mov
cmpsb
mov
stos
outsb
popf
mull
mov
mov
mov
mov
xlat
pushf
push
ja
mov
jmp
es
lea
jmp
rcl
push
mov
call
pop
xchg
xor
test
rcl
add
or
mov
daa
or
mov
push
push
lock
test
push
ljmp
test
xor
jmp
repz
inc
push
pop
mov
fnstcw
sub
fcoms
gs
cmp
dec
jo
cmc
lock
ja
jle
xlat
pushf
push
xchg
mov
jmp
movsb
mov
sbb
mov
push
jno
repz
fidivl
cwtl
mov
mov
xor
adc
xorl
popf
loopne
aam
sbb
pop
mov
mov
fld
and
sub
jmp
and
arpl
pop
gs
in
out
out
push
in
xlat
pushf
push
lea
dec
mov
pusha
push
lea
jmp
push
call
jle
shrl
ds
call
fcoml
rorb
pushl
ret
adc
jmp
cmp
adc
adc
xor
push
dec
and
pusha
enter
dec
shl
xor
mov
jne
jle
mov
jb
mov
xor
mov
mov
mov
xchg
jp
push
scas
lods
cmp
in
nop
stos
test
and
aad
scas
sub
andb
mov
xor
test
pushf
push
ret
in
push
jmp
cmp
push
pushf
call
mov
clc
jmp
jmp
lea
jne
mov
inc
shl
and
mov
clc
bt
add
pusha
stc
movzwl
jmp
movl
call
lea
call
mov
pop
not
pop
bswap
bswap
mov
pop
movsbw
mov
call
lea
je
cmp
jmp
mov
lea
mov
btc
cmp
mov
pusha
pusha
test
cmp
pushf
push
pushf
push
lea
ja
xadd
add
cmp
bsf
push
shr
ror
rol
mov
movsbl
pop
ror
add
shl
mov
cmc
stc
cmp
cmpsb
jo
ja
call
movsbw
push
mov
push
lea
jmp
push
call
sbb
lea
pusha
movl
call
jmp
lea
jne
push
inc
pusha
pushf
jmp
pop
pop
cmp
in
cmp
in
andl
loop
mov
data16
jl
cwtl
adc
push
lea
call
push
out
pop
inc
ret
and
push
test
mov
orl
cld
lret
jno
jnp
stc
lret
jl
std
xlat
pushf
push
lds
xchg
dec
call
mov
addr16
dec
call
mov
andb
movsb
mov
gs
repz
adc
push
call
pop
out
pusha
fisttps
subb
mov
int3
fsubrl
shl
xor
adc
subb
aas
dec
call
sti
sub
and
je
add
call
adc
pushf
pusha
jmp
call
inc
cmp
cmp
cmp
xorl
test
in
mov
xor
scas
ds
push
pop
mov
in
testb
js
lcall
inc
jl
lahf
mov
lods
adc
mov
xor
mov
mov
mov
pushf
push
mov
cld
pop
movl
lea
jo
ja
pusha
add
lea
pushf
push
cmp
jmp
mov
ljmp
scas
cmp
and
rcll
xchg
jle
cwtl
cmp
xor
xchg
and
sub
scas
jp
sti
dec
int3
fsubrl
dec
bound
ljmp
dec
xlat
pushf
push
add
cld
jmp
push
call
xchg
out
add
aad
bt
pushl
popl
stc
cmc
test
cmp
movw
jmp
push
movb
movl
sete
lea
mov
movb
movl
mov
call
push
call
mov
inc
and
sbb
jmp
push
call
fs
lea
jae
jmp
cmp
sbb
mov
bound
je
xchg
cmp
cmc
push
jge
jnp
or
jne
mov
andl
jecxz
inc
fsubl
adc
icebp
aam
shll
popa
jno
add
fcmovnb
mov
or
push
imul
scas
sbb
adc
xlat
pushf
push
pop
add
je
and
stos
and
insl
es
andb
jbe
mov
dec
repnz
jno
sbb
aam
es
scas
cld
and
lods
sub
cmp
enter
das
and
dec
xchg
sub
mov
pop
lahf
xor
stc
sub
and
push
sub
inc
xchg
pusha
je
jno
xchg
nop
push
call
rolb
sub
aaa
popa
cltd
pop
inc
mov
les
sbb
xor
clc
popa
jp
mov
subl
dec
pop
ss
xor
sub
shl
xor
and
xor
xchg
push
popa
jae
mov
enter
and
jo
or
push
pop
jbe
inc
nop
sub
in
push
sub
and
adc
pop
mov
sub
adc
lods
mov
pusha
repz
hlt
lea
inc
out
test
clc
jno
lock
bound
pusha
pop
lret
rorb
push
out
or
inc
mulb
and
in
and
fcmovnbe
dec
mov
loopne
aas
out
xchg
movups
and
pushl
xchg
jp
aaa
mov
nop
and
push
dec
mov
inc
xchg
and
mov
mov
pusha
sub
shlb
insl
jno
in
jmp
push
scas
sub
popa
jle
test
xorb
add
cwtl
jo
rcr
xor
mov
ss
mov
xor
xchg
inc
mov
mov
adc
jge
int3
decb
mov
cmp
add
xor
xchg
pusha
addb
adc
imul
xchg
pusha
ret
mov
push
push
mov
cmp
sbb
or
daa
stc
in
jb
adc
outsl
adc
cmp
push
sub
sbb
dec
adc
mov
and
inc
ljmp
and
sub
mov
push
enter
pop
aam
data16
sub
dec
mov
mov
popa
imul
rol
mov
mov
mov
lret
out
pop
pop
pop
inc
data16
mov
mov
shll
mov
dec
test
mov
pop
imull
add
and
cmpsb
insl
das
and
fdivr
lods
int
add
test
pop
xlat
rolb
clc
xchg
fisubrs
xchg
sahf
rorl
and
mov
stos
nop
cmp
push
je
lret
mov
xor
push
cmp
mov
jo
mov
daa
mov
in
sbb
sub
xor
loopne
jno
insl
sbb
sub
fisubs
stc
cltd
dec
mov
shlb
xor
add
cmp
sbb
cmpsl
pusha
jno
mov
xor
sbb
lret
xor
pop
xchg
test
mov
scas
test
sub
xor
hlt
jb
nop
popf
mov
mov
test
les
iret
mov
or
push
shlb
xor
outsb
daa
mov
ljmp
xchg
inc
dec
jmp
sbb
mov
scas
stc
and
and
mov
and
loop
sbb
mov
je
mulb
xor
xor
stos
xlat
mov
je
aaa
in
pop
push
inc
mov
sbbb
push
es
mov
pop
loopne
add
inc
data16
mov
jo
shrl
and
clc
dec
js
daa
inc
stc
adc
jo
lods
aas
je
int3
movsb
pop
dec
movsb
or
sub
dec
xchg
mov
xchg
push
lods
inc
repnz
xor
sub
inc
lds
ss
mov
les
mull
shll
fsubrp
loopne
mov
pushf
in
xor
ss
rclb
adc
jbe
sub
movsb
adc
out
pop
xor
popa
adc
mov
bound
dec
sbb
test
inc
jno
jp
fdiv
jns
fdiv
imul
inc
sub
lods
scas
xchg
sub
add
mov
pusha
xchg
rep
aaa
sub
jo
push
push
data16
fidivrs
sbb
addb
lcall
aam
dec
fnstenv
inc
mov
pop
movl
and
dec
cmp
mov
aam
jno
mov
dec
cmp
add
and
inc
stc
cmp
clc
rcr
test
xorb
mov
dec
mov
xor
int3
loopne
xchg
xchg
hlt
loop
mov
mov
push
or
repnz
adc
dec
mov
mov
arpl
xor
or
or
add
mov
sub
sub
lcall
or
mov
and
test
push
enter
mov
scas
daa
mov
xor
popa
fwait
xor
in
sub
mov
fisttpl
and
dec
repnz
mov
xor
inc
cmp
hlt
jno
or
ljmp
adc
aad
add
data16
outsl
lods
adc
popa
mov
or
inc
adc
fisttpl
pop
in
shlb
mov
sub
adc
adc
dec
stc
xor
or
inc
popf
aas
imul
fdivl
cltd
dec
popa
sbb
mov
push
sub
push
mov
fs
in
adc
mov
es
in
cmp
jmp
dec
in
test
std
clc
sub
lods
mov
pop
pushf
daa
popa
aaa
je
and
add
xor
add
nop
shlb
xchg
adc
sub
add
inc
mov
jno
pop
in
mov
aam
cmp
cwtl
jo
sub
shlb
popa
insb
leave
ficoms
inc
or
sbb
jg
adc
mov
adc
in
sbb
aam
cmp
mov
sbb
jp
hlt
scas
stos
cld
sbb
xchg
mov
sbb
or
data16
and
aad
xchg
sbb
stos
nop
adc
adc
push
stc
cmpsl
add
xlat
jno
aam
cltd
cmp
adc
leave
and
decl
outsl
lret
xor
nop
inc
push
xor
mov
jnp
jno
or
xor
outsl
mov
add
fisubs
mov
xorb
cmp
clc
in
pusha
pop
fidivl
into
movsb
fidivl
jmp
sbbb
shrb
or
lods
mov
cmp
and
jl
push
sbb
mov
jno
lods
test
test
out
je
scas
je
mov
sub
adc
xchg
ret
jb
daa
jno
pop
sub
sub
loop
adc
sbb
jne
xchg
insb
aas
pop
clc
add
fld1
js
fstpl
jno
xor
xlat
loope
out
mov
sub
ret
jmp
inc
xor
sbb
xchg
cmp
data16
test
pop
in
insl
dec
out
movsl
and
test
enter
jno
scas
or
xchg
lahf
shlb
cmp
bound
inc
jl
pusha
mov
xchg
jg
xor
sarl
repz
lock
popa
push
out
jne
subl
inc
lret
adc
xlat
or
and
sbb
mov
aam
loopne
lea
fistpl
and
and
ja
icebp
and
jge
pop
or
fs
shl
push
push
adc
testl
mov
dec
xchg
add
jo
icebp
std
mov
lret
mov
lods
in
cmp
push
popa
adcl
jbe
push
mov
and
push
je
test
add
sbb
cmp
mov
mov
daa
stos
stc
call
mov
sbb
lcall
stc
pusha
in
daa
int
mov
push
dec
lods
inc
or
or
adc
sbb
lock
push
mov
fldenv
and
loop
push
cs
jmp
sub
aad
push
outsb
stos
aaa
cmp
mov
mov
test
stc
add
and
or
mul
jo
pop
stc
stc
loop
sbb
data16
xchg
dec
or
test
punpcklwd
test
rol
cli
ja
xchg
sbb
addl
lods
xchg
pop
orb
cltd
icebp
hlt
clc
adc
or
push
lods
dec
cmc
push
pusha
cltd
insb
sub
cmc
mov
test
fisttps
jnp
add
or
cld
or
push
cltd
push
popa
fisubrl
jo
sbb
int3
xchg
roll
mov
shrb
lret
shrb
push
mul
push
mov
push
hlt
dec
adc
loopne
scas
movsb
push
mov
mov
or
imul
lock
jno
subb
mov
cmpsl
popa
jge
data16
xchg
and
fsubrs
add
and
je
call
add
shr
add
test
int3
mov
cltd
jnp
mov
popf
push
inc
lock
test
inc
inc
pop
stos
je
popa
mov
and
xchg
mov
pop
outsl
andb
mov
push
mov
adc
add
sbb
sbb
xorl
shl
mov
jmp
jecxz
insl
dec
or
or
into
jp
cmp
xchg
xchg
sbb
add
mov
inc
orb
adc
not
cmp
insb
popa
lock
pop
cltd
stc
stos
xchg
mull
mov
loopne
mov
inc
sbb
and
mov
out
fisubrl
adc
shll
dec
cwtl
movsb
xorl
mov
test
sbb
xor
sar
mov
mov
and
repz
xchg
or
inc
and
int
push
inc
popa
lret
cmp
xor
xor
sbb
pop
xlat
adc
xchg
cltd
lods
lods
mov
xchg
xchg
popf
dec
mov
sub
push
push
sarb
lret
adc
sbb
ja
mov
loopne
cmpsl
push
adc
inc
pop
push
popa
loopne
cwtl
sbb
jmp
call
mov
inc
mov
xor
ss
ret
jno
mov
inc
pop
xor
jge
sub
or
jmp
popa
pop
inc
out
fnsave
push
jo
cltd
lds
daa
js
mov
shrl
lock
mov
jmp
rclb
dec
mov
inc
je
push
arpl
loopne
mov
pop
inc
mov
sub
imul
sbb
xor
mull
and
jmp
push
or
in
sbb
cmc
shlb
add
mov
inc
fisttps
adc
mov
ret
xor
ss
dec
pusha
pop
sub
pop
cltd
mov
inc
xlat
call
jb
fsubp
daa
stos
orl
sbb
test
cmp
ficoms
dec
jno
jnp
les
and
daa
aas
sub
nop
xor
popa
mov
lret
dec
adc
push
js
xor
or
push
sbb
mov
fcoml
mov
xchg
out
out
pop
lods
mov
dec
shrb
and
je
adc
stc
xor
pusha
movsl
pop
and
test
xor
dec
mov
test
adc
pusha
sub
or
mov
daa
adc
fsubl
xchg
jno
insl
das
mov
icebp
add
pop
mov
outsl
mov
inc
fmuls
int3
dec
xchg
lock
push
and
out
xor
sub
cwtl
pop
sbb
je
hlt
and
or
jno
popa
insb
pop
dec
call
in
sahf
inc
mov
sub
or
sub
jbe
push
jb
jl
cs
sbb
mov
mov
adc
add
mov
inc
mov
ret
and
mov
xchg
sub
lcall
imul
mov
mov
add
pop
in
xchg
jp
lahf
aam
push
mov
adc
or
mov
sbb
jno
xchg
jne
iret
hlt
and
cmpsb
fildll
mov
or
enter
jmp
push
lock
mov
paddusw
and
or
fwait
mov
repz
jmp
mov
lock
imul
and
sbb
mov
or
adc
mov
xor
lret
lock
mov
popa
push
jns
mov
sub
fs
sub
enter
adc
mov
jns
icebp
lods
and
cmp
sbb
movsb
pop
add
adc
mov
and
leave
movsb
cmp
popa
in
and
adc
loopne
sub
adc
enter
or
jmp
mov
rcll
push
sub
enter
push
mul
enter
cli
lahf
sbb
inc
mull
cmp
and
popa
call
add
mov
sub
adc
dec
adc
sbb
pop
rorb
aam
es
stc
lea
rclb
mov
dec
sub
dec
sub
in
clc
mov
out
inc
mov
jno
clc
shrb
loopne
sbbl
xchg
mov
daa
lock
call
adc
mov
or
jmp
out
div
adc
pop
fld
sub
popf
jno
pop
lock
cmp
test
aad
daa
test
movb
movsl
popa
aaa
xlat
mov
cmp
arpl
mov
push
xchg
into
and
adc
xchg
mov
or
jl
or
push
pusha
repnz
orl
xor
addb
fdivp
xor
xchg
inc
fidivs
pusha
jno
inc
xchg
inc
stos
out
daa
shl
std
inc
enter
fucomip
hlt
xor
cmpsb
mov
and
push
aaa
and
inc
arpl
and
xchg
std
jne
stos
xchg
jle
mov
jb
mov
inc
inc
es
jno
popa
push
cld
gs
dec
loop
add
rol
lahf
mov
movsl
mov
sub
daa
rcrl
data16
or
adc
sbb
mov
push
ss
mov
mov
aad
and
cmp
adc
inc
mov
popa
testb
popf
adc
je
inc
fidivs
insb
xor
cmp
and
adc
xchg
stc
sbb
movntps
shr
jle
cmp
shrb
in
mov
lock
xlat
jmp
xchg
jecxz
xor
daa
andl
bound
push
insb
xchg
lea
stos
nop
and
mov
mov
xor
test
jnp
ljmp
adc
test
mov
out
pusha
dec
subb
cmp
ret
fsubs
and
mul
arpl
mov
pop
adc
pusha
daa
push
xor
adc
insl
xor
and
mov
push
mov
fwait
mov
adc
data16
dec
vpsrad
out
dec
push
fmuls
adc
push
mov
cmp
push
data16
or
out
fsubs
in
adc
sahf
mov
rcll
jg
loope
fstpt
les
stc
mov
outsb
cwtl
jb
rcr
mov
insb
lods
mov
aas
orb
clc
popa
pop
fs
cmp
fstpt
and
lret
cmc
pop
aaa
ss
xchg
lcall
sbb
negb
sbb
inc
mov
jle
jl
mov
popa
mov
movsl
and
push
stos
jno
jbe
pusha
sbb
mov
and
adc
push
push
add
nop
dec
daa
fnstenv
sbb
sahf
data16
cmpl
and
fwait
and
pop
lods
rclb
movsb
outsb
adc
and
jbe
and
adc
xchg
dec
mov
adc
inc
mov
pushf
or
mov
dec
jecxz
sub
mov
and
pop
movsl
lock
mov
mov
test
jmp
sub
enter
push
lods
lock
adc
cltd
jne
in
cmp
cmpsl
add
inc
adc
sub
lock
inc
pop
mov
mov
cld
jo
jno
roll
sbb
jecxz
notb
mov
add
ljmp
and
lock
and
xchg
push
lock
add
emms
adc
xor
aad
and
testb
lock
lock
add
adc
or
and
pop
rcl
sub
xchg
dec
movsl
xorl
jg
xchg
sbb
xchg
setne
sahf
lock
punpcklwd
es
mov
mov
xchg
mov
popa
xor
mov
test
and
lock
loope
add
and
dec
mov
fprem1
xor
jns
push
cltd
out
call
xor
fmuls
fldcw
add
aam
and
fdivr
lahf
aaa
adcl
test
test
sub
or
stc
out
pop
mov
adcb
mov
clc
sbb
adc
mov
mov
and
cltd
mov
shll
outsb
clc
outsl
loope
sub
adc
in
rcr
fisubl
cmp
sub
shll
mov
cmp
sub
mov
mov
call
lahf
int
test
aaa
popa
ljmp
loop
scas
and
cmp
data16
sarb
sbb
mov
push
xor
pop
sub
jo
popa
daa
push
dec
jg
xchg
in
mov
jo
ss
mov
jno
movsb
aam
daa
push
cmp
stos
jb
dec
jg
sarb
push
popf
int3
orl
or
or
repnz
jno
ss
xor
shl
cld
addr16
cmp
adc
aam
adc
push
shlb
leave
xor
and
lock
mov
cmpsb
jne
fwait
sub
movsb
icebp
push
shll
lcall
shll
and
lods
ret
data16
pusha
loop
out
shlb
out
jae
jbe
and
fdivl
out
fistl
pusha
pop
iret
xor
jae
inc
or
xchg
faddp
or
loope
jno
pop
cmp
xor
mov
push
inc
jmp
aaa
pop
jb
xor
mov
mov
stc
sub
movsl
add
jno
fwait
mov
gs
sbb
fimull
in
mov
out
movsl
adc
jbe
xlat
or
lock
jmp
jb
pop
push
pusha
jbe
add
mov
andl
inc
aaa
sbb
or
aad
inc
stos
dec
ds
pusha
mov
mov
push
xor
push
add
cltd
pushf
pop
test
add
push
jno
pop
cmp
add
stc
test
add
call
stos
mov
dec
testl
sub
dec
adc
scas
xchg
hlt
cli
fbld
and
mov
jae
ljmp
incb
insl
mov
out
xchg
mov
xor
lea
aaa
popa
cmc
fcoms
xchg
idiv
notl
dec
daa
inc
xchg
cmpsb
xchg
stc
shlb
cmp
test
push
in
aam
and
xor
lock
pop
int
into
cmp
rclb
mov
and
insl
call
imul
fdiv
shl
sbb
lds
xor
xchg
test
push
cmpsb
stos
push
imulb
mov
dec
sub
cmp
add
lds
push
rclb
call
mov
cmpsb
test
add
movb
push
shll
mov
repz
sub
xchg
stc
leave
xchg
out
mov
je
mov
pop
daa
sub
inc
and
sarl
push
fmuls
xor
sub
pop
mov
cmpsb
cmp
stos
and
ss
out
sbb
clc
shlb
or
jge
cmp
imul
push
push
mov
adc
and
dec
movsb
jno
icebp
or
jno
iret
mov
xchg
jno
mov
popa
mov
jp
pusha
dec
push
adc
mov
cmp
rcrb
sbb
adc
and
xor
pusha
je
std
jl
repz
mov
nop
std
inc
das
lock
mov
subl
jno
pop
das
rorl
leave
dec
gs
out
imul
call
enter
sbb
add
negl
mov
loope
mov
mov
cmpsl
xchg
leave
push
dec
sub
pop
sar
pop
leave
divb
or
xlat
and
lods
mov
cmp
cs
adcl
and
sbbl
xor
nop
daa
stos
xchg
insb
es
js
adc
shlb
mov
xor
imul
fdivs
test
rolb
mov
cmp
push
mov
xor
push
mov
sub
xchg
mov
fists
and
outsb
sbb
js
test
fcom
push
pusha
out
repz
push
or
mov
add
inc
add
call
push
pop
or
scas
and
fwait
mov
cmp
xchg
movsb
mov
arpl
out
push
cltd
ficoms
fcomp
xchg
lock
pop
pusha
adc
testb
cmp
or
in
cli
xor
gs
dec
mov
pop
adc
stc
loope
cli
push
adc
lock
movsl
jne
adc
mov
adcb
sub
mov
xchg
sub
pop
or
rcrl
jmp
dec
xchg
out
sarb
fmuls
jmp
rcrl
popa
add
xchg
xor
scas
push
cmp
jle
rorb
stos
or
iret
jge
cld
gs
or
xchg
pusha
add
mov
sub
hlt
popa
sub
xchg
dec
scas
jnp
jo
sarl
mov
sub
push
subl
xchg
popf
cs
out
cli
xchg
jg
push
mov
rorl
rcr
sub
adc
loopne
loope
test
fwait
xor
orb
fsubrl
ss
rcr
lock
jl
fbld
insl
xor
or
mov
add
sti
mov
add
fimuls
xchg
out
fisubrs
leave
cmp
or
mov
shll
fisubrl
popa
cli
xchg
push
mov
je
movsl
push
mov
or
mov
pop
mov
outsb
les
dec
bound
jl
movsl
icebp
mov
data16
jmp
xchg
subb
pop
xchg
cmpsl
adc
or
cmpsl
fadds
insl
into
sarb
cmpsl
popf
push
ficoms
cltd
pop
in
sbb
outsl
andb
mov
xchg
mov
mov
aaa
add
sbb
push
cmpl
mov
lret
push
push
cmpsb
ljmp
mov
popa
mov
rolb
scas
sbb
aam
loop
cli
mov
jns
dec
das
aaa
xchg
and
sbb
sti
xchg
sbb
lahf
push
mov
ss
xor
sbb
adc
lea
push
push
jae
fildll
mov
push
add
dec
mov
mov
das
adcl
jno
xchg
andb
sub
xchg
sbb
mov
cltd
add
out
add
mov
std
jb
popf
push
ss
scas
je
cmp
stos
mov
aaa
inc
mov
inc
jl
push
in
pop
jae
push
test
cmp
loopne
aad
and
push
xchg
add
xchg
popa
mov
push
in
sub
mov
adc
enter
rcrb
bound
call
insl
call
daa
in
pop
outsl
loopne
push
adc
pop
test
push
adc
add
xchg
int3
lret
lea
sub
xchg
mov
fs
addr16
roll
push
rcrb
iret
adc
cmp
adc
xchg
stos
xchg
mov
and
orb
jo
pusha
adc
nop
mov
mov
mov
mov
ss
stos
data16
mov
dec
jecxz
push
arpl
push
cmpsb
or
inc
dec
out
sub
jno
mov
dec
mov
or
insb
icebp
push
adc
divl
sbb
insb
aas
push
xchg
ficoms
mov
and
in
std
stc
sahf
jne
xchg
cltd
pop
lahf
mov
movsl
out
push
bound
mov
in
scas
rcrb
dec
mov
mov
xchg
adcb
mov
cs
nop
stc
xchg
mov
es
bound
jbe
pusha
in
xchg
pop
sarb
adc
xchg
test
addr16
push
cld
movsl
adc
sbb
loopne
pop
mov
addr16
jo
sub
jp
or
inc
inc
xor
push
hlt
fdivrs
mov
sbb
cltd
mov
and
and
jae
dec
je
mov
aam
pusha
aaa
lods
sub
dec
xchg
inc
loopw
test
push
stc
hlt
cld
enter
icebp
push
ljmp
fsubl
cmp
mov
fidivl
in
imul
push
inc
lds
jno
push
mov
jbe
ss
sub
popw
sarl
repz
or
mov
int
push
subb
dec
xor
push
ss
or
push
or
push
jbe
pusha
jb
out
dec
lock
stos
leave
call
out
adc
inc
sbb
idivb
inc
out
add
popf
rclb
inc
xchg
dec
cmpb
mov
pusha
out
arpl
lahf
mov
mov
sub
lods
ror
cltd
xchg
out
sub
pusha
pop
xor
lock
mov
jg
mov
das
pop
push
jno
movsb
inc
test
sbb
sbb
and
adc
sub
sbb
jo
and
adc
movsb
dec
insl
xchg
jnp
popf
adc
lea
roll
pop
add
out
inc
jne
mov
data16
out
pusha
push
aam
cmpsl
dec
js
ss
ja
test
add
xchg
daa
lock
mov
xor
inc
les
daa
fisubrl
lods
imul
repnz
mov
cmp
ja
lock
out
or
xor
jae
mov
fs
mov
mov
jbe
fs
out
mov
jge
adc
pop
adc
lahf
lock
sbb
cmp
sbb
xor
or
inc
cmp
xlat
aad
rcrb
cs
mov
mov
aaa
inc
je
push
out
aas
fbstp
ret
lods
fmull
add
mov
jno
outsb
sub
iret
xchg
xchg
mov
jae
xchg
fcomp
dec
sahf
jno
adc
xor
mov
add
popa
xchg
ror
jns
inc
hlt
int
std
sub
sub
jge
mov
xor
mov
sub
lahf
add
out
dec
mov
popa
es
and
add
mov
dec
dec
and
pop
clc
mov
mov
cltd
cmpsl
xchg
test
movsl
lahf
mov
push
dec
jmp
and
loopne
sahf
int
pop
cmpsl
cmpl
dec
or
sbb
inc
add
aad
adc
lock
push
add
jecxz
outsl
rol
or
mov
xor
xchg
inc
outsb
es
cltd
or
add
orb
jge
xlat
idivb
and
pop
jecxz
data16
push
jno
jnp
out
clc
pusha
imul
fsubrs
inc
xor
and
mov
mov
or
or
mov
out
push
and
inc
and
mov
dec
adc
xor
mov
mov
jmp
inc
sub
cmp
or
lret
icebp
sub
add
inc
inc
push
ss
subl
movsl
test
adc
mov
dec
cmpsb
and
divl
push
sahf
cmp
ljmp
rorl
cld
out
test
mov
jo
fdivrs
dec
lcall
dec
push
mov
jns
loope
jb
xchg
lock
sbbl
adc
nop
xchg
jp
push
cltd
push
pop
shlb
pop
outsb
inc
mov
fwait
data16
mov
lahf
pop
or
sub
mov
push
imulb
jns
sbb
push
ss
pop
mov
adc
nop
mov
cmp
jmp
dec
lret
jnp
test
out
sarb
mov
sahf
sub
movsb
push
daa
pop
dec
xchg
push
int
or
lods
cld
jp
int3
rcrw
mov
mov
xorb
dec
mov
add
into
jo
fimuls
add
mov
insl
xchg
movsl
lret
sbb
mov
ret
xlat
push
xor
ss
push
xchg
out
fdivs
xor
cmp
or
push
push
popa
inc
dec
and
pusha
xchg
push
cld
test
and
adc
sbb
adc
inc
lock
clc
fwait
lods
fnstcw
arpl
lock
add
loopne
hlt
loop
adc
out
dec
inc
out
pop
sti
sub
cmc
and
or
out
xchg
push
and
jp
mov
aad
daa
iret
xchg
ljmp
shlb
test
xchg
test
pop
cmp
in
sub
xor
adc
out
inc
pusha
movsl
and
adc
mov
popa
stos
aam
inc
add
xchg
adc
insl
cwtl
in
rorb
pusha
mov
push
or
xor
addr16
outsl
pop
or
and
test
cld
fiaddl
and
pop
call
aad
xor
rcll
lea
pop
mov
popa
xor
jecxz
aad
mov
push
aaa
push
scas
popa
scas
fwait
and
arpl
xchg
and
mov
imul
add
jl
adc
jbe
getsec
pop
or
sbb
mov
jno
dec
add
push
cbtw
out
sub
and
xchg
out
in
mov
inc
adc
xchg
sub
mov
fsubrl
out
pop
andb
cmp
inc
sarl
pop
popa
jle
loop
fildl
gs
or
mov
sub
inc
scas
rcl
aas
cmp
mov
sub
or
dec
or
cltd
push
jbe
scas
cmc
std
xor
sub
movb
inc
add
mov
je
xor
loop
inc
nop
xchg
add
ds
data16
jae
aam
lods
sub
out
xor
xchg
fnstenv
adc
shl
movsl
mov
jns
inc
cs
pusha
xchg
in
outsl
fisttpll
pop
sbb
lret
xchg
xor
fsubs
les
ljmp
sub
or
push
sar
daa
xchg
jns
inc
push
pop
loop
xchg
test
xor
outsl
pop
xchg
insl
scas
xor
inc
cld
adc
shl
push
add
xchg
call
cmp
pusha
sbb
add
aam
shrl
mov
cs
sub
lods
sbb
xor
mov
gs
test
sbb
shll
push
aad
adc
data16
fstp
xor
cltd
xchg
or
jmp
adc
adc
stc
in
xchg
dec
mov
in
jno
or
cs
sub
scas
fnop
js
mov
cmc
dec
pusha
out
icebp
add
cmp
insl
jne
sbb
out
cmc
pop
cmpsl
mov
push
mov
pusha
loope
mov
jns
sbb
adcb
inc
jmp
add
jno
push
aas
dec
leave
fmul
jne
add
adc
mov
xor
or
mov
xor
mov
mov
sub
mov
aam
pushf
inc
cwtl
in
mov
aaa
add
jo
lcall
xchg
xchg
cli
dec
mov
push
enter
ret
mov
mov
inc
mov
jae
mov
add
out
adc
icebp
lock
call
and
scas
call
scas
pop
aaa
testb
sub
idiv
sub
cld
cmc
imulb
sub
data16
fwait
movsl
js
lcall
frstor
cmpsl
fistpll
je
mov
mov
out
clc
cwtl
shlb
pop
shl
jno
jno
dec
inc
leave
loop
pushf
jmp
nop
mov
pop
ficoms
mov
orl
mov
push
iret
sbb
dec
lods
mov
aad
cld
ljmp
mov
inc
stos
in
push
sub
rclw
gs
stc
adc
pusha
fcmovne
push
push
jnp
sbb
sub
cmp
daa
sbb
pop
out
or
mov
adc
into
jp
arpl
mov
out
rol
mov
jge
fs
repnz
sub
pop
sbb
stc
orl
leave
lods
in
notl
das
or
ljmp
mov
inc
or
andl
dec
push
ss
pusha
int
in
shll
cmpsl
notl
jecxz
and
add
push
adc
mov
push
pop
dec
daa
sbb
movsl
mov
mov
mov
pop
jge
in
pop
ss
push
adc
pop
addr16
test
mov
adc
fisttpl
mov
loop
or
clc
add
add
ds
push
push
xchg
daa
cmp
test
fiadds
adc
add
adc
call
sub
adc
push
inc
sub
xchg
push
imul
add
xor
xor
pop
lahf
push
or
push
in
es
adc
jp
ljmp
mov
cmp
repz
es
mov
fldenv
inc
cmpsl
js
dec
jo
mov
mov
pop
jae
push
mov
push
jg
fwait
ljmp
sbb
adc
int3
sub
sub
outsw
cwtl
cltd
jno
cwtl
dec
jl
cmp
movsb
pusha
xor
mov
push
or
or
rolb
js
popa
setp
cmpsb
adc
add
push
mov
stc
and
lods
adc
inc
lock
fs
dec
aad
daa
pop
inc
addb
mov
test
sub
in
imul
aas
pop
jecxz
mov
je
das
fdivl
dec
bound
stc
stc
out
popa
xchg
cmp
int3
inc
sbb
jmp
test
add
mov
retw
lea
out
ss
mov
or
dec
scas
aaa
add
jo
movsb
dec
test
roll
test
ret
rorl
enter
mov
test
jne
push
xor
test
mov
pop
pop
dec
add
fsub
outsb
mov
iret
cwtd
lea
jmp
jno
in
sub
sbb
xchg
fisubs
cmpsl
sbb
push
cmpsb
sbb
sahf
xchg
leave
mov
jno
adcb
pop
in
ja,pt
fldenv
mov
sub
xchg
imull
xor
addb
cmp
push
xchg
inc
imul
sub
xchg
imul
inc
sahf
faddp
das
call
mov
inc
inc
inc
popf
push
jmp
cltd
shr
adc
test
mov
jo
mov
and
push
push
mov
dec
out
xchg
pusha
xchg
push
or
ss
mov
icebp
pusha
sub
inc
andb
lea
in
sbb
jmp
and
sbb
fs
or
cwtl
rorl
sbb
daa
imul
xchg
imul
daa
fsubs
test
das
cmp
and
xchg
pop
popa
pusha
push
in
mov
mov
stos
aam
daa
adc
jge
mov
sbb
jecxz
daa
rcll
and
mov
sahf
mov
data16
jl
and
cli
mov
mov
mov
adc
shll
push
inc
test
add
leave
ja
mov
inc
xchg
das
shl
stc
popf
pusha
call
inc
push
and
inc
cmpl
push
cwtl
lock
sbb
ljmp
dec
enter
rcl
pushw
pop
xor
jno
cmpb
and
xor
sbb
push
add
dec
pop
xor
aam
push
jl
loop
mov
lods
movsl
sub
mov
or
pusha
fidivs
push
and
or
cmp
mov
inc
adc
popa
ljmp
mov
sbb
mov
add
sti
adc
cltd
pop
xchg
movsl
jecxz
test
xor
dec
mov
inc
not
cmp
int
jne
je
daa
jne
lea
fisubs
scas
xor
jg
and
cwtl
sub
daa
das
orl
aaa
in
adc
shrb
out
push
or
es
test
nop
mov
hlt
dec
loope
cmp
jno
data16
test
add
pusha
lret
add
aad
aaa
shll
hlt
cltd
inc
push
cmc
out
add
jo
stc
fstps
xchg
jb
mov
test
cmp
pop
mov
dec
scas
in
jle
jmp
sub
jl
cmpsl
std
test
andl
sbb
loopne
dec
mov
push
and
dec
xchg
faddl
test
rolb
xchg
scas
and
lcall
xchg
cmp
ja
pop
cmp
sbb
enter
mov
fwait
push
lods
ret
adc
sub
fwait
pop
insl
xor
pusha
or
adc
cmpsb
mov
inc
mov
cmpl
sub
pop
inc
or
add
out
inc
jp
imul
jnp
jns
rcl
cltd
sub
or
adc
xchg
lret
out
cs
inc
mov
push
sbb
dec
mov
lret
or
sbb
mov
adc
fs
jno
adcb
xor
mov
out
xchg
aam
hlt
jle
jns
push
fs
inc
adc
lods
sub
out
sbb
loope
jp
jbe
je
adc
cltd
jns
sbb
out
mov
inc
sbb
and
mov
or
shlb
push
test
call
or
popa
jns
lret
in
dec
mov
push
sbb
and
mov
xchg
or
xchg
xor
mulb
jle
stos
jae
mov
mov
testl
cmc
sti
push
jg
xchg
xor
loope
xchg
dec
add
and
adc
mov
aas
mov
jg
pusha
je
push
mov
jns
test
or
sub
xor
mov
add
sahf
lahf
call
movsl
mov
lea
mov
test
in
es
cltd
mov
adcl
ret
or
shrl
xchg
mov
popa
cmp
inc
loop
xor
aaa
xchg
dec
out
and
add
mov
iret
or
xchg
ds
add
test
jo
lea
and
dec
enter
int
mov
xchg
fiaddl
rclb
fsin
push
jno
iret
adc
and
pop
mov
mov
push
sbb
sahf
aam
pop
inc
and
outsb
loopne
add
insb
sbb
popa
jmp
fimuls
cwtl
lods
ja
hlt
movsl
cmp
dec
movsl
sub
cmpl
ljmp
or
push
ficoms
scas
and
pop
lock
popa
adc
inc
popf
je,pn
adc
mov
xchg
je
ja
in
mov
sbb
cs
cltd
fists
pop
fmull
testb
mov
xchg
mov
or
or
xor
das
lods
sbb
pusha
push
test
lea
jmp
inc
lret
mov
es
jns
scas
mov
repz
cs
rorb
add
sbb
dec
in
arpl
mov
mov
js
int
cmp
sub
subb
scas
shlb
or
jb
xchg
xchg
stos
adc
adc
jno
test
ss
and
or
addr16
xchg
fsubl
daa
aas
enter
inc
pop
cs
mov
pop
add
inc
movsb
movsl
stc
std
cmp
outsb
int
or
ss
repnz
icebp
dec
stos
xor
push
and
test
cmc
adc
push
or
repz
xor
push
mov
imul
adc
into
lods
sub
add
andb
bnd
bound
icebp
dec
mov
push
mov
lret
jp
inc
push
mov
jne
cs
fsts
cmp
mov
sub
bound
fdivl
in
mov
xor
adc
loope
daa
mov
inc
mov
fsubs
push
adc
jmp
xor
pop
push
cmpsl
aaa
cld
and
lods
cmp
inc
nop
inc
push
adc
shll
sbb
fildl
or
enter
nop
pusha
test
or
mov
daa
xor
jp
fldl
mov
mov
out
icebp
sbbb
ror
dec
out
dec
lahf
cmp
imul
lcall
ja
inc
sub
bound
in
dec
jo
sbb
jo
mov
adc
movsl
fsubs
adc
scas
dec
mov
adc
arpl
test
sbb
lea
hlt
xchg
lods
dec
aad
xor
jmp
xor
aaa
and
pop
cmp
jne
jno
sar
add
scas
test
pushw
pop
rcr
jne
add
fnstenv
adc
pusha
add
sbb
gs
add
and
mov
pop
jle
pop
or
mov
lock
popa
dec
xchg
ja
rorl
data16
leave
jbe
xor
xchg
mov
inc
add
dec
js
sub
dec
jno
pop
lret
mov
sub
inc
push
or
in
pop
std
call
push
test
out
cs
stc
divb
push
loop
inc
dec
push
pop
cmpsl
jo
add
dec
mov
scas
jmp
fwait
xor
inc
daa
pop
mov
int
ss
pusha
frstor
jge
adc
xor
sub
xchg
mov
sbb
ret
dec
adc
std
cli
out
sub
or
pushf
orl
aas
xchg
inc
xchg
fisttpl
shr
adc
xchg
inc
sbb
cmp
popa
jno
xrelease
lcall
pusha
mov
insb
xchg
jnp
pop
mov
jns
push
sub
daa
jmp
and
and
cs
les
subl
sbb
xor
cwtl
mov
xorb
add
inc
cld
lods
xchg
adc
cltd
add
dec
jae
adc
sub
call
shll
push
movsl
je
popa
in
push
daa
sahf
test
movsl
xchg
bound
mov
mov
pop
mul
iret
int3
sub
inc
mov
daa
mov
push
insb
xor
out
scas
das
mov
arpl
imul
adc
fcomps
push
in
pop
icebp
or
mov
fdiv
es
fcompl
xor
addl
cltd
and
lahf
std
or
ja
inc
dec
pusha
jecxz
cmpsb
jge
outsb
mov
stos
mov
inc
jge
and
xor
jno
add
inc
xchg
adc
mov
inc
leave
imul
inc
loopne
dec
xor
int3
insl
mov
bound
shr
aas
cmp
sub
sahf
cwtl
inc
sub
mov
mov
sbb
xchg
fsubrs
fmuls
jl
jns
in
sbbl
movsl
lods
and
mov
mov
add
lock
pop
or
popa
pushf
cs
mov
adc
cmp
cmc
mov
or
fdivrs
sbb
mov
push
fwait
mov
nop
out
leave
inc
inc
xchg
or
cmc
inc
orl
push
or
out
inc
cltd
popa
out
or
mov
out
nop
repz
pop
outsl
mov
sub
push
jnp
inc
lahf
push
mov
stc
cmp
or
fisubrs
pop
insl
inc
jp
adc
arpl
popf
mov
sbb
or
jno
or
nop
punpcklbw
mov
outsl
out
sbb
pop
or
aad
jno
jg
addl
xor
mov
es
xchg
jae
popa
iret
pop
mov
das
add
aad
movsb
xor
sbb
mov
mov
aad
xchg
aad
loopne
add
or
xchg
add
push
jnp
jle
cmp
mov
out
cmp
addr16
lock
fsubs
push
adc
test
jno
jmp
pusha
fwait
add
dec
out
dec
lock
xor
fwait
addb
repz
rcrb
and
popa
inc
cmp
cmpsb
and
dec
or
lock
psrad
daa
jo
cld
mov
add
mov
pushf
inc
loopne
mov
dec
xchg
fisubs
cltd
movsl
loop
setnp
mov
insb
lds
and
sbb
gs
push
mov
inc
ficoml
cmpsl
mov
adc
mov
stos
movsb
inc
stc
sarl
adc
mov
out
mov
enter
js
in
aaa
int3
cltd
addb
mov
andb
movsl
inc
cmpsb
adc
sbb
lret
mov
stc
sbb
test
movsw
pop
xor
inc
sbb
add
xchg
cmpsb
out
inc
push
test
sbb
aad
inc
addl
mov
mov
shll
fiaddl
subb
push
loope
subl
xchg
jns
push
mov
popa
cwtl
movsl
iret
and
mov
lret
movsb
dec
mov
mov
in
lods
test
jae
push
and
mov
lret
mov
push
insb
test
or
je
int3
arpl
pop
popf
divb
inc
mov
iret
mov
jmpw
xchg
sbb
dec
cmp
pop
mov
lea
lock
aaa
shrb
stos
pop
shl
jne
adc
and
push
inc
ficoms
cltd
push
inc
pop
scas
pop
je
adc
popa
sbb
push
mov
or
and
repnz
mov
lret
jp
cmp
data16
or
add
xchg
dec
jmp
das
sar
pusha
sub
adc
subb
adc
adc
mov
daa
jbe
and
push
ds
sub
and
cltd
mov
out
fdivrp
xchg
cmp
loop
push
dec
aaa
sbb
in
push
into
daa
xor
inc
ljmp
xor
popf
sub
inc
dec
scas
add
call
lds
shrb
or
or
stos
loopne
xchg
es
push
cmpsb
shl
jecxz
adc
mov
int
daa
sub
cmp
sub
cmp
pop
loop
cmpsl
or
call
xchg
cwtl
adc
mov
pop
lea
leave
mov
jmp
sbb
jge
outsb
mov
sub
xchg
mov
popa
or
sahf
mov
out
lea
adc
lock
and
and
add
dec
loope
mov
repnz
jg
outsb
xor
sub
cmp
ret
es
sub
add
orl
popa
jl
and
mov
push
aaa
jno
scas
cmp
mov
enter
fisubrl
xchg
stos
or
cmpsl
dec
add
ja
push
imulb
sar
pop
sbb
fisubl
dec
xor
pop
movb
sub
das
in
and
xor
in
cmp
or
jno
mov
stos
lds
ja
mov
mov
popa
xor
loop
je
mov
shrb
rorl
fimull
jo
xchg
fldt
test
cmc
mov
out
xor
je
xlat
movsl
fsubrs
sbb
das
sub
ret
mov
fmulp
imul
subb
pop
push
mov
movsb
push
add
inc
and
outsw
pop
jbe
or
xchg
or
xorl
inc
ds
ljmp
push
adc
sub
jp
ror
add
mov
xor
popf
cmp
incl
leave
fsubl
fisttpll
fbstp
fstl
les
cmpsb
rclb
push
jmp
sti
jno
data16
mov
into
ljmp
mov
sbb
jae
xor
sub
fmull
sarl
lock
sub
je
fsubl
push
fiadds
es
push
adc
aad
aad
test
mov
aam
xchg
outsl
pop
insl
out
mov
push
inc
mov
jae
xchg
shr
xchg
cmp
outsl
popa
jecxz
dec
dec
cmpsb
out
js
jecxz
fcomp
fmuls
add
add
add
fadds
sbb
movsb
pusha
repz
aaa
sbb
cmp
mov
add
shrl
pop
lds
repz
dec
or
iret
loop,pn
stc
xor
rcrl
inc
xchg
aas
aaa
popa
mov
xchg
pop
pusha
mov
lock
movsb
pop
cltd
or
lock
pop
stos
add
test
lods
jno
stc
sarb
mov
jo
movsb
imul
out
push
fidivs
mov
lahf
xor
fstps
xchg
push
xor
adc
jecxz
or
fimuls
out
push
mov
mov
xchg
cmp
iret
mov
test
test
mov
dec
ret
sub
xchg
divb
cmpsb
or
stos
rolb
in
cli
ret
andb
mov
dec
pop
fwait
xchg
icebp
cli
xchg
loop
aad
mov
or
cwtl
jge
push
mov
daa
in
xchg
cli
dec
cmc
push
cmp
dec
test
mov
mov
and
inc
cmc
imul
and
sbb
cmpsl
mov
jge
adc
dec
mov
data16
or
cmp
lea
mov
sbb
xor
in
sub
in
inc
insb
or
daa
cmc
pushf
adc
mov
cmc
cmpsb
and
pusha
in
add
jge
test
daa
fdivr
fstpl
inc
xchg
or
mov
dec
dec
out
and
lds
cmp
dec
mov
mov
sbb
adc
cmp
loopne
ffreep
xchg
shrb
rcll
mov
xchg
test
sub
inc
out
lahf
mov
inc
push
inc
sub
sbb
sub
scas
inc
adc
into
jae
cmpsb
cwtl
data16
das
pop
mov
test
jnp
xor
dec
int
js
xchg
mov
stc
xor
pushf
pusha
mov
sub
imul
xchg
mov
push
out
pop
push
push
test
mov
sub
shll
push
ja
mov
jno
or
cmc
test
outsl
roll
xchg
repz
dec
xor
daa
adc
pop
inc
or
adc
dec
outsl
push
xchg
and
fidivs
push
repz
push
xchg
into
mov
sub
jp
dec
push
dec
adc
out
idivb
xchg
lret
cltd
into
or
lods
or
loop
sub
xchg
adc
mov
sbb
iret
pop
mov
lock
stc
push
cltd
call
in
sub
mov
xchg
and
xchg
leave
pop
inc
movsl
mov
push
mov
cmp
cltd
out
dec
jmp
lea
or
ss
clc
imul
outsb
cmp
jo
popa
push
aaa
test
add
pusha
xor
bnd
loop
mov
scas
cmp
inc
inc
cltd
sub
mov
pusha
movsl
enter
pop
jecxz
xchg
ret
adc
cs
and
sbb
call
xlat
lock
jns
dec
mov
xorb
add
in
out
subl
pop
jg
xor
cmpb
sub
add
dec
and
sub
inc
mov
push
call
jno
sti
rcr
es
pusha
mov
insl
lret
ds
sar
sub
add
push
cmp
cltd
shr
jp
jle
xchg
mov
test
test
sbb
insb
sbb
sbbb
push
xor
mov
icebp
cs
test
pop
sub
testl
dec
popa
shrb
jne
je
mov
mov
insb
lea
push
sub
cltd
mov
sub
test
pop
fwait
mov
xchg
push
push
jmp
cmpb
inc
adc
icebp
xchg
shlb
stos
or
out
out
push
adc
sub
adc
jno
and
aaa
fcomps
adc
mov
xchg
add
push
loope
jb
sub
insb
shl
ljmp
lock
stc
loop
and
cld
push
mov
sbb
into
push
adc
pop
cmpsb
adc
xchg
and
out
add
add
daa
jb
sbb
popa
xchg
sbb
inc
push
mov
pop
data16
adc
mov
fldt
pusha
lock
ret
mov
mov
push
sbb
rcr
sub
push
or
js
xor
mov
fsubs
add
mov
stos
insb
dec
and
testl
xchg
push
dec
fmuls
ret
loop
mov
sub
push
dec
nop
test
call
pusha
scas
shlb
dec
xchg
andb
cmc
lret
popa
dec
cmpsb
jns
push
adc
add
mov
adc
daa
and
out
sub
mov
sub
dec
aaa
mov
andb
lock
inc
rcl
roll
mov
es
sub
sub
loopne
cwtl
outsl
in
push
push
pop
shr
mov
mov
push
es
lds
clc
ficomps
out
loopne
jo
add
or
jns
mov
xchg
gs
push
cmp
lret
mov
mov
mov
ja
repz
push
repnz
pop
adc
out
xor
mov
hlt
xor
jns
push
je
xor
push
mov
inc
or
mov
pop
cmc
sbb
mov
and
stc
add
sbb
fadds
lret
mov
and
cli
adc
mul
jns
rolb
jge
xchg
pop
jno
pop
add
lock
mov
xchg
movsb
sbb
inc
cwtl
jns
mov
ss
inc
dec
daa
cmp
scas
pop
sub
clc
mov
imul
sub
lea
cmpsl
dec
lods
lock
xchg
arpl
ret
xor
inc
xlat
and
pushf
jb
adc
xlat
movsl
sub
mov
xlat
imul
dec
nop
dec
mov
lahf
push
ja
in
mov
ret
lock
or
inc
cld
stc
pop
xchg
out
mulb
and
fistpll
loopne
loop
xchg
pop
out
cmp
xor
mov
dec
mov
mov
pop
and
adc
pop
mov
pusha
andl
lds
push
fstpt
clc
jae
ds
adc
xchg
in
mov
popa
push
push
pushl
mov
cmc
idivl
shlb
fsubrs
xchg
pop
push
fwait
mov
cmp
aaa
inc
out
dec
or
inc
mov
add
mov
repz
enter
jmp
xchg
lods
dec
jo
es
sarb
data16
xchg
xor
mov
or
les
cmpsb
adc
push
mov
lods
xchg
test
std
ss
cs
movsl
xchg
das
outsb
leave
jmp
adc
in
xchg
outsb
mov
es
adc
mov
fsubs
xchg
leave
in
int
jno
mov
outsl
lret
imulb
loop
push
cmp
in
loopne
jp
cmp
and
fbld
leave
cmp
sub
jno
sub
mov
daa
add
mov
inc
push
sahf
cld
cmp
mov
fsubrl
cmp
mov
adc
outsl
or
inc
mov
loop
ds
fnsave
fiadds
cmpsl
ret
add
das
dec
scas
aad
push
das
out
in
mov
jae
jne
sbb
ret
cmc
cmp
aam
adc
sbb
shll
mov
sbb
rclb
adc
sbb
adc
xchg
add
ret
test
adcb
ss
mov
cli
dec
imul
out
sub
or
and
loopne
loopne
sub
fcoms
jno
sarb
inc
sbb
lcall
dec
xor
sub
gs
jl
loope
lret
scas
adc
pusha
or
fnsave
xchg
dec
ret
std
dec
sub
cmpsb
cmc
jb
cwtl
je
insb
xor
jno
sbb
imul
inc
fdivrp
adc
pop
xor
aaa
test
xor
mov
add
sbb
xchg
lret
jecxz
and
xchg
out
jecxz
or
mov
fsub
js
cmpsl
rorb
scas
adc
cmp
lahf
shl
push
or
ss
mov
test
dec
jbe
insb
movsl
and
xchg
clc
fbld
int3
or
or
sub
jae
sub
cmp
inc
clc
or
loope
adc
popf
scas
jg
outsl
enter
xlat
imul
mov
fidivs
mov
sbb
cmp
out
and
xor
cmp
mov
xor
andb
fldt
mov
movsb
sbb
inc
popa
jns
jle
ja
xchg
mov
cltd
xor
test
jmp
es
outsl
add
xor
jmp
xor
jp
test
icebp
les
jno
or
push
and
shrb
or
and
pop
jae
mov
jns
fcoml
xchg
sbb
jle
sub
lods
fldenv
sbb
stos
fists
mov
leave
inc
dec
cmpsl
in
xchg
popa
sub
shlb
sub
sub
jl
or
mov
xchg
frstor
aad
jae
std
mov
push
loop
inc
xor
xor
in
pop
mov
cmpsb
hlt
pop
or
pop
lds
loop
pop
or
xor
bound
fcmovnbe
lea
daa
aaa
roll
repz
decb
je
mov
pop
movsb
lods
pop
cmp
mov
subl
ficoml
shll
xor
cltd
mov
into
test
sub
sahf
and
xor
or
xchg
inc
stc
jae
dec
jns
loop
mov
mov
les
fnstenv
inc
xchg
sub
jmp
push
xor
jmp
and
sub
xchg
shlb
xchg
call
or
je
and
call
inc
fisubrs
andb
lea
mov
sub
jge
xor
insl
mov
pusha
mov
inc
jmp
sbb
mov
lds
lock
or
pushf
xchg
cs
pusha
mov
jae
jge
mov
loop
jo
mov
inc
push
inc
clc
mov
test
xor
nop
mov
loopne
lock
icebp
cmp
cmp
lret
mov
test
lock
es
aad
rolb
fs
add
pop
daa
xchg
push
add
hlt
movsb
inc
mov
daa
cmp
lahf
push
pushl
mov
dec
push
mov
mov
pusha
ror
sub
divb
sbb
out
movsb
cwtl
out
inc
lods
jnp
test
push
scas
into
jbe
cs
sarl
pop
test
jns
cmpb
xor
test
repz
jg
data16
out
mov
repz
insl
std
out
xchg
ljmp
add
insl
sbb
sub
pop
inc
or
repnz
xchg
lea
or
shlb
adcb
inc
subl
mov
fwait
add
ss
add
out
pand
sub
ljmpw
pop
pop
fldt
xorb
fcomps
out
fcmovnb
mov
push
jbe
sub
in
fcoml
inc
insl
mov
frstor
mov
stc
jne
fbld
jns
lds
and
xchg
mov
sub
pusha
pop
lret
in
jle
iret
mov
jb
testb
mov
add
shr
sbb
cmpsl
cltd
cmpsl
rolb
pop
adc
dec
rol
imul
mov
pop
adc
mov
scas
add
mov
iret
sbb
shll
aam
dec
push
dec
xlat
cwtl
sub
fs
test
mov
lahf
xchg
out
push
loop
out
inc
enter
inc
or
sub
mov
popa
repnz
fsubs
lock
inc
jle
notb
lods
push
call
sbb
push
scas
mov
fistps
mov
sahf
orl
dec
pop
and
test
cs
lahf
incl
or
jae
xor
addl
push
cltd
xor
push
aam
jnp
sbb
add
loop
movsb
mov
xchg
sub
insb
test
lea
outsb
push
cmp
sbb
dec
ret
fiaddl
enter
arpl
jmp
aaa
es
add
mov
lock
stos
pushl
push
repz
mov
cmp
jbe
push
xchg
inc
adc
popa
xchg
or
pop
mov
add
mov
aas
jne
sbb
sbb
mov
les
xchg
inc
dec
hlt
jns
and
lret
shrl
hlt
dec
call
pusha
jl
rolb
ss
dec
xor
mov
repz
mov
add
pusha
fisubl
and
ja
cld
sbb
mov
cmp
movsb
rolb
xchg
jno
push
adc
mov
in
add
mov
jno
mov
dec
sahf
out
jmp
mov
mov
fcmovnb
cld
cmp
cmpsb
inc
movsl
in
pop
pop
push
jmp
mov
add
out
adc
dec
shlb
xor
jl
push
fstps
mov
fistl
ja
imul
mov
xchg
jno
jb
das
es
fwait
or
nop
inc
loopne
and
cmpsb
mov
loope
xchg
rcrl
or
and
pushw
add
push
xor
or
pop
mov
jbe
dec
dec
ret
pop
push
mov
enter
js
mov
out
loopne
lea
sub
es
add
sti
lcall
mov
fbld
jns
int3
repz
out
or
test
dec
fisubrs
cltd
dec
mov
push
aaa
mov
out
mov
lahf
xchg
loopne
lock
mov
sub
stos
xchg
dec
leave
sbb
mov
adc
or
fisubrs
inc
scas
push
pop
mov
lea
push
nop
mov
rorl
gs
test
leave
mov
pop
es
out
add
scas
and
dec
mov
mov
shll
bnd
jne
mov
adc
data16
adc
movsl
mov
xor
pusha
bound
add
mov
add
xor
movsb
sub
push
sbb
popf
sbb
sbb
lret
xor
aas
aaa
push
in
das
mov
sub
repnz
fisubrs
aad
xor
sbb
shl
sub
xchg
cld
mov
shlb
pop
or
mov
inc
popf
daa
sub
adc
lods
jle
push
and
mov
movsb
mov
pop
aam
xchg
sub
jnp
icebp
dec
add
je
xchg
sbb
sbb
icebp
xor
inc
dec
scas
cmp
rorl
enter
xchg
inc
xchg
or
mov
pusha
push
es
mov
outsl
and
insl
dec
adc
mov
cmpsl
in
out
mov
dec
shl
stos
stc
and
mov
sbb
sub
pusha
lock
pop
fsubr
loopne
lds
sbb
xorl
inc
sub
in
aas
jge
orb
das
and
lcall
mov
dec
and
sbb
or
cmp
push
js
test
popa
cmpsl
push
inc
sbb
mov
outsl
cmc
orb
aaa
popa
jns
loope
fiaddl
inc
push
mov
cmp
cmp
mov
in
out
in
mov
stc
inc
inc
sub
sarl
mov
pusha
mov
in
fwait
mov
and
or
mov
popa
icebp
imul
loop
add
out
or
out
cmp
loopne
add
push
cli
loop
loop
sbb
pop
repz
inc
dec
push
pop
lods
lea
jl
enter
adc
and
inc
hlt
sub
xchg
inc
pushl
push
adc
incb
and
xchg
lea
gs
pop
loop
push
cmc
xchg
es
ja
sbb
mov
sub
fsub
or
jbe
daa
add
js
loop
mov
mov
fiaddl
jmp
in
popa
rcrb
push
cmp
clc
addr16
stos
ficoms
cmpsb
pop
xlat
hlt
mov
push
jno
sbb
ja
lahf
pusha
sub
xor
enter
xchg
xchg
out
lods
and
pop
scas
stc
mov
loop
inc
xor
pusha
lock
jl
jno
dec
xor
pusha
or
rol
xor
insl
sub
pop
addl
je
stos
push
sbb
push
rcll
test
out
lcall
into
cwtl
xchg
out
test
mov
cmc
setbe
aas
cmpsl
xor
test
add
int3
sbb
jne
mov
sbb
xlat
mov
adc
mov
pushf
fwait
inc
xor
mov
mov
rdtsc
lock
mov
stos
or
std
pop
xchg
add
int3
sbb
adc
fldt
cmc
fs
mov
mov
shlb
inc
mov
mov
add
or
push
mov
pop
cmp
fisubs
loopne
push
leave
or
lret
dec
xlat
jg
cli
fcomps
mov
sub
lea
es
inc
aas
es
inc
mov
mov
gs
xor
arpl
lods
mov
mov
loop
mov
cbtw
test
movsl
sbb
pusha
and
inc
fcomps
aaa
outsb
lods
adc
inc
jno
data16
je
rolb
test
pop
faddl
mov
in
subb
pop
pop
inc
jb
sub
inc
dec
xor
dec
aas
mov
mov
sub
and
sarl
sub
fcoms
push
lock
and
imul
adc
out
out
and
fs
lea
in
push
push
jmp
lahf
das
data16
add
in
pop
xchg
or
mov
pusha
mov
push
and
enter
test
xor
roll
sub
cmc
mov
orl
mov
or
mov
mov
xchg
pushf
fld
pop
aad
pop
xor
mov
jne
clc
daa
shlb
fldt
in
mov
and
pop
aas
push
jle
fisubrs
les
notl
ss
pop
dec
sub
movsb
push
pop
xor
aas
cmp
cmp
lea
repnz
adc
xlat
or
inc
xchg
pop
fisubs
negb
xchg
lret
sbb
ja
xor
mov
xor
dec
mov
adc
scas
int
sahf
outsb
pop
data16
pop
xchg
push
inc
fs
dec
add
add
mov
cmp
loopne
stc
test
push
shl
pop
sub
into
f2xm1
lods
popa
add
pusha
jp
out
cmc
pop
xor
or
fcoms
fs
pop
xchg
adc
out
cmp
es
loopne
xchg
adc
pop
mov
xor
rorb
test
cmc
and
push
aaa
mov
das
add
stc
gs
fsub
sbb
push
xor
cmpsb
stc
ret
xchg
xchg
lods
mov
xchg
pushf
sub
mov
mov
pushl
cmp
data16
sahf
fnstenv
rolb
insb
out
and
or
xor
cmp
lret
push
std
sbb
mov
lods
and
loop
enter
loope
xor
sub
inc
lcall
mov
xor
aas
push
mov
jae
js
push
enter
in
repnz
mov
mov
andb
lea
or
rorb
cmp
cmpsb
sub
adc
inc
shrb
mov
add
mov
xchg
out
mov
ss
push
xchg
mov
xchg
call
sahf
xchg
or
or
pop
stc
ret
fisttps
mov
jg
xchg
or
and
and
xor
mov
fsubl
out
jo
inc
push
out
inc
push
adc
lds
mov
arpl
adc
inc
add
stc
out
xor
mov
mov
pop
or
cs
xor
imul
inc
mov
push
mov
and
inc
sub
fwait
xor
mov
dec
lock
sub
and
jmp
nop
and
inc
movsl
out
shlb
popa
into
clc
sbb
imul
rorl
movsb
js
cmp
sbb
mov
loopne
orb
sti
sub
fists
je
xchg
rclb
xchg
and
test
inc
test
inc
mov
xchg
sub
pop
jbe
mov
cld
fs
pop
jno
adc
data16
mov
mov
adc
in
das
lods
addr16
inc
fisttps
lret
inc
fsubr
in
lea
lret
jo
push
sub
out
xor
jg
inc
jae
sub
push
xadd
out
jl
mov
and
jno
sub
add
inc
mov
dec
movsl
mov
inc
in
cmc
xor
scas
test
dec
and
dec
push
or
loope
mov
iret
add
cmp
and
mov
cmp
clc
dec
xchg
mov
jge
test
mov
push
xchg
sbb
lods
or
aas
jecxz
add
add
in
test
jmp
or
and
add
mov
mov
sbb
pushf
cld
sbb
dec
mov
dec
cmpsb
mov
dec
repz
sbb
xchg
cmpsb
seta
rcll
leave
mov
fcom
jl
push
xchg
adc
rclb
repz
or
fwait
jo
cs
jo
xor
mov
insl
jae
sbb
nop
repz
push
push
push
into
js
fsubrs
dec
dec
mov
rorb
mov
jo
stc
xlat
sbb
lock
xor
jo
jp
adc
jb
and
xchg
and
dec
and
jno
xchg
adc
addr16
push
pop
mov
dec
sbb
xchg
inc
add
das
jnp
adc
xchg
lea
push
insl
aad
insb
pop
out
cmp
sbb
add
movzbl
test
lock
data16
mov
xchg
testl
mov
fldcw
mov
dec
jns
fdivl
or
and
hlt
test
mov
lea
sbb
enter
fildl
xchg
lea
xor
faddl
jns
adc
or
and
add
call
push
insl
shll
andb
sahf
inc
pop
icebp
das
add
pusha
sub
loop
or
pop
and
jbe
lods
ret
and
adc
xchg
pop
cwtl
out
loope
xor
mov
jo
add
sahf
adc
icebp
bswap
popf
jno
addr16
mov
shr
enter
cmpsl
sbb
andl
rcrb
sub
call
xchg
fnstenv
add
jmp
jmp
loopne
fnop
xor
aam
daa
nop
clc
jno
inc
call
mov
daa
subl
and
out
aam
mov
adc
test
jle
sub
fdiv
cs
mov
adc
loopne
dec
loope
mov
mov
xchg
cmc
sbb
icebp
mov
lock
pop
inc
out
sbb
dec
sbb
imull
inc
xor
aad
sbb
test
push
lock
es
lret
mov
addr16
in
mov
adc
xor
lock
cmp
add
cltd
rcll
adc
pop
mov
mov
imul
adc
adc
mov
incb
xor
dec
cmp
sbb
jl
xor
pushf
dec
cmc
loopne
jbe
rcll
add
les
std
sbb
in
in
sbb
jmp
xchg
push
aaa
sti
jp
rcl
sahf
fldl
out
mov
and
push
shll
fnsave
or
pop
hlt
repnz
push
out
sbb
xchg
adc
outsl
aad
and
mov
idivl
imul
call
mov
and
or
movsl
push
test
mov
shr
cli
divl
ror
inc
mov
mov
add
inc
cmp
inc
fists
inc
ds
jmp
ss
data16
mov
lcall
jp
lahf
lock
and
lcall
data16
stos
out
gs
cmp
xor
fildl
cs
pop
out
cmp
or
add
jno
or
xchg
loopne
xchg
or
daa
mov
roll
dec
je
les
cmp
dec
int3
pop
adc
mov
adc
loop
clc
lea
cmpsl
inc
xor
test
daa
pop
sub
pushf
imul
nop
xchg
mov
jg
lock
popa
lock
or
add
ja
shll
test
push
stos
sbb
jle
pop
xchg
stc
fldcw
add
mov
in
sahf
jmp
dec
fildll
sbb
hlt
sarb
xchg
or
cmc
xor
or
mov
push
mov
fcomp
test
sub
push
pusha
rol
rorl
adc
sarb
cmp
addr16
sbb
add
pusha
push
jae
repz
mov
mov
and
push
scas
xor
mov
or
mov
cltd
loopne
jae
xor
sub
cld
into
in
add
int
cmp
adc
imul
pop
cld
pop
hlt
jns
jns
mov
cmpb
cmpsb
and
imulb
mov
cmp
or
mov
in
and
jnp
and
push
ret
add
cmp
add
jae
adc
test
lea
xor
scas
es
adc
and
mov
das
je
mov
mov
inc
and
xchg
xchg
je
xor
shll
jne
jl
cli
mov
dec
cmp
pop
out
xchg
jmp
inc
cld
jmp
cmp
call
orb
dec
cmp
loopne
cmp
movsl
mov
mov
jno
mov
test
push
mov
jge
mov
sub
push
jle
and
mov
test
lcall
sti
lret
lods
fsts
hlt
mov
push
in
adc
es
icebp
fwait
mov
add
leave
xchg
fdivs
and
loope
inc
lret
leave
xor
push
adc
jl
insl
aam
pop
fisubs
aam
aaa
enter
in
fcoml
frstor
sbb
pop
jle
fbstp
filds
ret
sbb
mov
sub
jecxz
mov
aaa
stos
loopne
sarl
and
out
subl
test
mov
push
jnp
fisubs
aas
daa
test
xlat
ret
je
test
mov
mov
jns
cmp
inc
cmpsl
cs
jle
adc
aaa
jb
int3
fs
sbb
pop
loop
js
adc
sub
inc
mov
mov
push
lret
hlt
rorl
in
xchg
test
in
add
clc
adc
bound
fwait
popl
testb
jge
lds
pop
sbb
mov
cmpsl
jge
sbb
ss
xchg
int3
repz
mov
sbb
adc
pop
push
fimuls
mov
popa
mov
dec
aam
lods
mov
and
out
sub
mov
cli
add
and
jnp
insb
das
addr16
xor
jmp
and
test
push
adc
nopl
loope
aam
push
fsts
push
loope
jne
in
daa
ljmp
into
jbe
imul
dec
mov
xor
fsubl
jb
mov
xor
mov
popa
mov
push
mov
jno
pusha
adc
call
mov
add
jg
push
dec
mov
xchg
pop
and
mov
popa
test
jg
adc
stos
clc
data16
mov
int3
lods
pop
cwtl
inc
sbb
push
cmp
movb
push
sbb
cld
shll
push
push
push
inc
roll
shlb
adc
push
xor
rclb
xor
push
or
cli
loop
insb
cmp
ss
lret
sbb
mov
shlb
mov
rorb
pusha
shrl
mov
adc
fwait
icebp
push
sub
inc
mov
es
jmp
xor
lcall
fbld
cld
push
jmp
xchg
sahf
pushf
xor
inc
dec
xor
jo
add
mov
test
inc
cmp
ss
and
sbb
jp
dec
and
mov
push
mov
lock
push
cmp
mov
nop
scas
xchg
sub
adc
test
int3
jnp
xchg
jg
push
mov
sahf
jle
mulb
adc
and
xor
aas
cli
into
jge
out
fimull
mov
mov
cmpsl
mov
scas
xor
jbe
pusha
cmp
aaa
pop
mov
mov
test
or
scas
adc
lret
inc
xor
xchg
es
rcrb
rcrl
cmp
push
pop
sub
adc
push
dec
mov
jnp
push
mov
jno
ret
sub
push
or
sahf
repnz
roll
imul
cmpl
fs
into
repz
enter
xchg
sub
insb
add
mov
dec
dec
mov
fwait
dec
test
xchg
and
aad
push
ss
mov
jp
dec
data16
cmp
mov
fwait
or
shll
adc
nop
and
inc
adc
loopne
adc
adc
push
inc
and
mov
shrl
and
pop
inc
add
lock
lock
mov
jo
add
in
sbb
shl
loope
lods
and
inc
lret
sbb
rorl
dec
iret
sub
mov
ret
shll
xor
jns
popa
sbb
xorl
outsl
and
nop
loop
add
adc
adc
scas
jmp
shl
popa
in
and
mov
xor
popa
jo
fldenv
sub
rorb
aas
and
push
sbb
xchg
outsb
loop
mov
add
adc
adc
mov
add
adc
and
mov
xchg
xor
mov
lock
adc
popa
shll
cltd
loope
mov
cmpl
sbb
xchg
adc
push
jns
cmp
in
in
loope
cwtl
stc
test
loope
xor
ret
mov
inc
lock
lock
mov
dec
xchg
inc
xchg
xor
inc
mov
sub
adc
sub
rorl
lock
dec
enter
pop
pusha
sbb
and
push
shlb
and
mov
call
scas
sub
shl
mov
insl
jo
sub
nop
icebp
push
or
nop
adc
adc
adc
in
cs
cmc
cwtl
in
shlb
fsubrs
xor
mov
lahf
popa
xchg
pop
and
or
daa
cltd
mov
lock
insl
or
sub
mov
imul
or
jmp
mov
xchg
popa
inc
test
sti
xor
sbb
sbb
inc
cmpsb
pusha
nop
fdivrs
cmp
dec
outsb
mov
lret
clc
cmp
push
out
push
mov
lretw
loop
shl
xchg
test
xchg
pop
repnz
add
in
lods
sub
data16
cmp
pop
loopne
xor
mov
jmp
adc
jns
insb
lods
fwait
and
repnz
jg
push
leave
and
xor
test
adc
jnp
imul
push
sahf
xor
xchg
sbb
repz
scas
loop
iret
out
nop
les
loopne
xor
xchg
fs
cmp
stos
adc
jno
mov
push
test
sar
or
clc
pop
pop
mov
aaa
fisttps
pop
mov
xchg
clc
sub
test
fsub
mov
adc
adc
adc
mov
mov
rorl
dec
mov
ret
mov
mov
ja
pop
je
push
nop
sub
push
sahf
sbb
sub
dec
mov
sahf
cmp
jmp
sub
pushw
fisttpl
adc
lds
push
sbb
sbb
scas
pop
imulb
pusha
jb
pop
jno
or
push
fstpl
sbb
nop
xor
mov
cld
out
xchg
xor
push
out
jle
mov
add
fisubrs
mov
xchg
jno
shlb
popa
lahf
adc
aad
shll
mov
movsl
push
add
stos
inc
sbb
xlat
xchg
jnp
es
dec
xor
xchg
jecxz
ljmp
xchg
lret
pop
or
aas
aas
ds
stc
pop
mov
xchg
int
mov
gs
rcll
sbb
mov
popa
mov
adc
adc
mov
push
push
lret
push
fwait
push
cmp
repz
sbb
pop
dec
fbld
js
jmp
inc
sub
iret
mov
pop
lds
jo
lock
mov
rol
outsl
dec
outsb
iret
adc
mov
ficoml
adc
xchg
mov
fisubs
inc
xor
frstor
inc
xor
adc
cmp
push
push
fbstp
pusha
out
inc
je
xor
and
in
inc
andb
insb
stos
mov
scas
sbb
pusha
int3
cmpsb
adc
fs
stc
mov
sub
adc
inc
and
xor
js
xor
insb
fidivl
imul
out
mov
pusha
adc
lcall
jne
insb
ljmp
inc
dec
aam
and
pushf
les
sub
dec
xlat
push
out
das
inc
inc
repz
in
mov
mov
das
aaa
sub
sub
rolb
fbstp
add
push
pop
push
add
data16
xchg
push
mov
cmp
sbbb
push
inc
adc
out
fsts
loop
dec
xor
imul
pushf
and
fbstp
pop
popa
and
data16
loope
mov
xor
lret
xor
add
cmp
and
cmp
enter
jo
adc
add
mov
inc
mov
add
lods
sub
jp
dec
xor
jno
xor
int
aad
xor
popf
sub
aam
sub
inc
nop
inc
xor
adc
lods
xchg
dec
fmuls
mov
add
push
ret
loope
aaa
mov
cs
add
pop
cmp
push
movsb
imul
notb
mov
xchg
cmpsb
xor
insl
or
jno
sti
xor
fdiv
xor
testb
rdpmc
imul
das
stc
mov
movups
in
arpl
lcall
xchg
and
adc
out
test
inc
cltd
jae
pushaw
testl
std
sbb
jmp
insl
xor
mov
mov
in
jb
dec
or
data16
inc
stc
lock
and
xchg
inc
mov
sub
xor
mov
vmread
aad
shl
jno
xchg
test
mov
in
lods
or
sub
mov
imul
ret
stc
and
faddl
sub
inc
in
add
sub
jne
push
or
cmp
into
loope
xor
fwait
jle
ljmp
getsec
add
mov
mov
les
adc
shlb
ss
sbb
pop
out
inc
shlb
push
or
fisttpll
jmp
pusha
ljmp
ss
das
xor
sarl
mov
lock
jns
rolb
mov
mov
jg
mov
xchg
popa
dec
call
xchg
mov
jl
popa
xchg
dec
lea
push
mov
in
and
xchg
mov
jae
xor
adc
jno
cmp
adc
fidivs
jecxz
xchg
mov
dec
fs
add
jne
sbb
mov
cmp
pusha
cli
mov
xchg
adc
fldenv
out
mov
sbb
and
inc
inc
aaa
popa
cmp
push
int3
in
sub
add
push
mov
pusha
pop
mov
call
repz
das
std
xchg
mov
push
mov
sbb
cwtl
jns
or
xor
daa
xchg
mov
mov
pushw
add
sub
xchg
imul
call
aas
loopne
add
add
pop
jno
movsb
ret
insl
in
mov
sub
cmp
adc
sbb
adc
mov
mov
fs
xor
iret
insl
out
pop
test
adc
data16
repz
dec
adc
mov
or
sti
add
mov
loopne
cmp
xor
pusha
je
push
out
js
inc
inc
loop
sti
push
fistps
inc
mov
popf
pop
cmpb
ss
pop
insb
fmuls
in
cmp
xor
sbb
or
daa
mov
inc
cs
dec
mov
je
xchg
subl
mov
icebp
lods
fs
bound
insb
popf
and
mov
insb
je
mov
das
std
mov
mov
out
lods
or
gs
sbb
inc
xchg
imul
outsb
sub
push
fildll
jecxz
xchg
inc
into
and
pop
ljmp
aam
sahf
lods
icebp
out
pop
faddl
xor
jecxz
sub
jmp
lret
inc
out
pusha
and
movsl
dec
mov
lret
je
pop
xchg
bound
ret
jmp
mov
mov
imul
mov
out
enter
mov
lock
mov
pusha
or
in
xchg
xor
aas
pop
sub
sbb
mov
leave
xchg
fsubl
and
add
out
int
jge
mov
mov
out
movsb
mov
out
pop
and
mov
and
pusha
mov
pop
and
popa
or
cs
sbb
stos
mov
fwait
dec
imul
aaa
inc
inc
xchg
inc
push
mov
cmp
jne
inc
mov
dec
add
iret
ss
mov
ret
xchg
nop
inc
mov
push
test
ret
jl
nop
fbld
pop
lcall
xchg
add
lea
pusha
xchg
xor
shrb
xchg
mov
cmpsb
ljmp
inc
cmp
stc
dec
out
inc
xor
dec
pop
inc
outsl
adc
pushf
andb
xchg
mov
add
mov
push
sbb
repnz
add
push
push
or
dec
mull
pusha
stos
rorb
daa
call
xchg
adc
repz
jmp
aas
sbb
out
pop
jb
ja
add
in
test
push
cmp
fisttpll
popl
lcall
or
nop
mov
or
lock
enter
jo
push
mov
aaa
je
popa
leave
mov
addr16
xor
mov
xor
jno
out
push
lea
jp
and
push
mov
daa
enter
cmp
mov
mov
loopne
xchg
push
dec
inc
mov
adc
sarb
scas
lods
hlt
sarb
sbb
cmp
movsb
rorb
mov
cmp
or
jecxz
adc
ss
popa
xchg
jbe
push
stc
adc
repz
xchg
mov
iret
xchg
jno
mov
and
ss
sbb
add
ljmp
xor
sbb
fs
sbb
lahf
es
push
mov
xor
inc
lock
stc
push
rorb
cmp
movsb
cmc
xchg
mov
daa
xorb
popa
daa
push
int3
mov
xchg
dec
xchg
pop
fstpt
insb
pop
call
popa
xchg
pop
jle
or
rorl
subb
popa
jecxz
fisubrs
hlt
and
shll
cmp
out
jae
cmp
jns
lret
xor
ss
xor
mov
push
add
and
dec
ja
pop
cltd
adc
repnz
inc
cmpsb
add
sar
iret
sub
add
push
cs
xchg
cmp
test
sbb
mov
lods
pop
xchg
shlb
dec
inc
fiadds
or
mov
test
loopne
not
and
lahf
push
pusha
jecxz
lret
sub
or
xlat
sub
cwtl
xchg
nop
fsubs
outsl
popf
jmp
rorb
mov
sbb
stc
dec
jmp
xchg
mov
cs
repz
pushf
xchg
ljmp
xchg
adc
adc
test
sbb
push
js
in
cld
jmp
adc
xor
sarb
jge
addb
mulb
cmc
outsw
xchg
add
clc
call
out
int
push
push
fdivr
or
sub
add
pop
outsb
sub
repz
jmp
insb
xor
sbb
pop
lods
xorb
push
xchg
push
adc
xchg
jne
sbb
push
lock
mov
push
cmpsl
mov
xor
cmpsl
dec
mov
inc
sti
fisubs
inc
loop
movsb
sub
xlat
dec
mov
je
mov
xor
mov
cli
sub
push
das
fldenv
testb
frstor
cwtl
repnz
sub
test
add
xor
in
cmp
or
mov
mov
mov
popf
cmc
insb
adc
xchg
pop
xor
sbb
dec
imul
icebp
adc
sti
mov
mov
push
pop
scas
mov
out
cmp
pushf
not
mov
mov
sub
xor
jmp
mov
stos
inc
ss
fldl
adc
xchg
jo
fmull
mov
pop
ljmp
out
sbb
xor
xchg
mov
or
inc
lea
int3
movsl
mov
mov
out
pusha
jo
sahf
das
pop
or
sub
es
lcall
retw
fiadds
push
imul
shl
mov
mov
mov
push
adc
imul
data16
leave
cmp
sbb
mov
rorl
inc
xor
repnz
lea
stos
test
ds
sbb
scas
adc
imul
sub
aad
jne
sbb
mov
push
xor
enter
aad
daa
mov
cmp
push
mov
sub
cmp
stos
out
pop
outsb
or
and
popf
rep
cmc
scas
add
std
mov
out
fwait
pop
push
xchg
mov
out
js
sbb
testl
sub
dec
test
pop
jns
xchg
lea
out
mov
jo
or
and
loop
sbb
test
inc
std
add
stc
in
pop
cltd
push
adc
fnstsw
jge
pop
movsb
cmp
shll
adc
jne
mov
mov
cmpsb
gs
ret
jecxz
push
jno
push
pop
adc
mov
mov
xor
push
dec
out
push
mov
mov
data16
cs
cld
and
stos
sub
pop
xor
pop
jmp
xor
inc
mov
inc
hlt
jl
sbb
cmpsl
mov
inc
and
pop
sub
mov
xchg
imull
xor
lret
pop
mov
sub
pop
mov
or
and
inc
xor
and
shll
repnz
sub
mov
test
mov
or
sub
cld
or
mov
mov
mov
xor
cmpsl
jg
lock
test
scas
hlt
mov
adc
pop
mov
stc
repnz
jb
hlt
repnz
jg
test
pop
and
jno
repnz
and
stos
adc
loope
jg
pop
xor
movsl
push
out
hlt
insl
jnp
das
push
xor
mov
cmp
in
sub
sub
test
aaa
cs
push
pop
xor
call
ds
pcmpgtw
add
dec
test
sub
pop
movsl
in
sub
mov
sahf
mov
ret
cmp
xchg
xor
clc
stos
add
adc
xor
push
and
and
push
mov
call
cmpsl
push
aaa
or
lret
adc
mov
cmp
adc
sti
or
out
jl
cmp
xor
adc
and
mov
inc
enter
xchg
sbbl
daa
and
imul
sub
jnp
ljmp
aaa
cmovle
ss
in
pusha
sbb
cli
jl
out
out
inc
lock
and
test
ret
xchg
sub
push
mov
pop
out
scas
lods
sbb
cmp
test
mov
add
test
xchg
pushf
jo
mov
push
icebp
or
sub
xor
inc
xchg
sahf
pop
lock
gs
aaa
or
aad
sub
or
mov
addr16
sub
cmp
sbb
dec
pop
or
sbb
and
jl
stos
repnz
pop
cltd
insb
cmc
hlt
mov
and
or
iret
fstps
lds
icebp
cltd
and
and
push
or
cmc
fildl
daa
insl
mov
add
and
or
loopne
push
mov
jge
call
xor
outsb
ret
and
stos
cmp
outsl
dec
sarl
rcrb
cmp
shrb
pop
push
lss
adc
cli
mov
fwait
xor
test
daa
and
movsl
pop
push
lret
outsb
fimull
or
sub
or
outsb
int
jg
adc
insb
addr16
mov
cmc
bound
xchg
or
or
adc
ret
jo
scas
cltd
mov
shlb
push
xlat
xor
push
and
repnz
xchg
sbbb
aaa
and
loope
cmp
add
loopne
lret
mov
pop
daa
and
add
mov
or
sub
cmp
mov
jecxz
out
or
dec
and
mov
in
pop
insl
stc
mov
rol
mov
mov
jae
dec
sahf
sbb
aaa
adc
sub
adc
lret
fwait
adcl
jns
or
push
sub
aaa
sbb
mov
hlt
adc
pusha
sbb
call
add
rol
aaa
adc
xchg
xchg
or
jae
push
mov
daa
or
or
sub
inc
xor
bound
cmpsl
adc
arpl
mov
pop
xchg
movsb
mov
shlb
test
inc
imul
jecxz
and
hlt
divl
pop
jns
rdpmc
push
and
sbb
or
dec
mov
adc
mov
setno
jmp
xchg
or
hlt
aaa
or
mov
adc
sub
test
sbb
out
shl
jnp
inc
mov
cld
into
aaa
hlt
xor
or
into
mov
adc
inc
sbb
or
mov
loopne
das
pop
outsl
div
pop
jbe
mov
xchg
shll
inc
jno
and
sub
mov
pop
cmp
or
int
aam
sahf
repnz
adc
imul
dec
pop
cmp
loopne
sub
xor
mov
pusha
rolb
outsl
mov
xor
fmul
mov
or
and
imul
jg
aas
out
or
push
jne
cli
sub
add
jmp
jns
movsl
lcall
mov
push
das
aas
daa
adc
adc
jbe
aaa
inc
inc
scas
in
push
inc
loope
cmpsl
or
loop
dec
int3
jb
sbb
je
aam
xor
bound
mov
bnd
sti
push
fcomi
hlt
sbb
stc
rcl
cmc
cmp
or
cmpsl
add
call
xor
loope
sbb
rorl
daa
fs
and
xor
sahf
inc
movsb
ret
imul
je
push
sbb
xchg
shll
fldl
mov
jecxz
sub
sub
sub
int
test
es
dec
adc
test
add
mov
icebp
sbb
ds
add
pop
pop
test
push
shlb
fs
int3
popf
or
pushf
jecxz
sbb
call
sub
pop
mov
mov
or
sbb
mov
dec
fidivs
xor
adc
mov
xlat
lret
cmpl
xor
sub
aas
or
add
pop
sbb
scas
fnsave
xchg
sti
mov
and
push
adc
or
and
add
lock
xchg
fsub
and
mov
xor
adc
pop
pop
orb
lret
inc
xchg
lock
cltd
loopne
sub
into
lea
xor
jmp
ficoms
mov
adc
es
sbb
fnsave
or
dec
mov
lea
dec
pop
sub
add
push
fldenv
dec
push
pop
pop
push
and
inc
xor
sub
xor
adc
divb
lods
push
and
xor
data16
jb
imul
inc
sub
push
mov
inc
jo
and
sub
xor
aas
xor
cli
popf
cmp
int3
push
mov
jo
insl
adc
aaa
or
jmp
adc
xchg
xor
push
xor
jb
xor
adc
add
and
aad
out
sbb
shlb
in
test
lock
arpl
inc
aas
jl
outsb
push
adc
adc
lahf
cmp
push
xor
repz
dec
push
test
lock
mov
mov
hlt
sub
adc
cmpb
out
sub
movsl
hlt
or
into
ljmp
mov
ffreep
adc
mov
adc
push
clc
mov
mul
dec
and
xchg
mov
pushf
imul
or
and
ret
xchg
or
add
stos
inc
mov
enter
mov
sub
mov
pop
xor
dec
and
and
mov
and
fmul
inc
adc
xor
rcrb
js
mov
mov
pop
fwait
icebp
jecxz
daa
shlb
test
push
jae,pn
pop
repnz
xor
pop
pop
aaa
shrb
push
cmp
and
lret
and
lock
rcll
inc
sahf
lock
and
loopne
jo
cmp
or
xor
sti
or
cmp
movsb
lret
xor
loope
xchg
jp
sub
mov
cmp
jmp
stc
sub
jne
call
ja
iret
in
scas
lock
jnp
testb
aad
imul
inc
aaa
jae
mov
pop
icebp
sbb
ds
ret
nop
xchg
les
pop
dec
sub
popf
outsb
and
pop
pop
lahf
xor
sub
cld
xor
mov
push
les
imul
arpl
xor
fsubr
and
push
mov
dec
gs
sbb
inc
xchg
and
int3
fidivs
cmpsl
lods
out
cli
inc
mov
call
jnp
call
xchg
jl
add
in
cmc
addr16
jno
or
push
xchg
aad
jle
hlt
shll
sbb
dec
mov
mov
mov
and
fsubrs
sbb
jo
jg
je
sub
xchg
mov
aad
ret
adc
jmp
adc
outsb
jo
lock
jbe
push
sub
imul
add
and
mov
jne
xor
xor
xchg
and
dec
fcomps
adc
leave
xchg
ds
sub
jl
inc
loope
adc
jno
or
dec
jmp
adc
scas
mov
fs
andb
inc
repnz
arpl
or
jg
imul
stos
aad
pusha
xor
mov
ffreep
push
mov
push
aam
xchg
adc
or
call
xor
nop
lock
add
jp
xor
pushf
xchg
or
nop
add
adc
test
lock
sub
jp
adc
mov
or
add
xchg
sub
test
rorb
or
dec
cwtl
xorl
mov
cmp
cmp
or
jmp
adc
add
cmp
ds
xor
cmp
hlt
push
add
sbb
mov
fidivs
mov
mov
inc
xor
add
sub
mov
or
mov
inc
jno
or
dec
imul
jnp
cmp
add
movsl
pusha
out
add
and
lret
arpl
and
sbb
inc
icebp
daa
test
inc
adc
push
jge
test
mov
xor
int3
stc
jno
push
sub
mov
sub
xor
push
mov
pop
inc
rcl
test
sti
repz
mov
cli
movsl
mov
and
jle
cwtl
xchg
or
dec
jmp
loopne
arpl
push
adc
shlb
clc
sbb
outsb
or
sub
addl
cmp
and
das
aas
popf
outsl
enter
jl
ljmp
cmc
ss
sbb
adc
xchg
into
aaa
pop
push
pop
pop
push
roll
icebp
xchg
mov
aaa
add
mov
ss
test
adc
pop
push
divb
pop
popa
mov
or
cmp
ret
mov
insb
mov
and
adcl
out
test
sbb
adc
pop
sub
pop
xlat
cmp
das
adc
daa
fs
and
mov
mov
mov
xor
loopne
sub
dec
repnz
cmp
rcr
mov
shlb
add
mov
or
in
and
mov
or
faddl
inc
cld
push
xor
aam
push
push
sub
add
cmp
in
sbb
xchg
dec
and
sarl
call
pop
das
xchg
cld
in
xor
fadds
xor
bound
xor
pop
ljmp
pop
fbstp
and
add
mov
cmp
divb
movsl
popa
adcb
and
insb
out
lods
fcoml
sub
std
or
xor
cli
iret
or
or
jno
icebp
fildl
adc
xor
test
mov
clc
mov
in
and
bound
je
xchg
lcall
daa
imul
aaa
or
xor
push
dec
jl
xor
dec
xor
push
sub
or
hlt
sbb
subl
push
push
aas
iret
or
sbbb
int3
cli
mov
loopne
mov
fbstp
pop
fs
or
or
xor
ja
or
adc
aam
ret
cmp
out
sbb
and
shll
repnz
clc
int
data16
or
lcall
test
jno
or
out
clc
sbb
sub
inc
or
or
scas
push
mov
aaa
xchg
adcl
hlt
and
dec
enter
sub
or
and
mov
adc
and
mov
xor
fbld
mov
jecxz
jno
pop
sub
lret
push
sub
icebp
adc
cmp
mov
sub
ljmp
in
rclb
xor
mov
lahf
inc
cld
cmpsb
stc
test
sahf
popa
leave
movsb
mov
push
stc
mov
jne
xor
ds
mov
add
add
hlt
mov
loopne
test
bound
mov
and
sbb
sub
scas
mov
sbb
jmp
insl
mov
push
sub
movl
cli
sbb
sarl
leave
inc
sbb
inc
out
rorl
mov
int3
and
xor
jne
pop
imulb
lock
jge
push
test
fcomps
sbb
mov
and
mov
stos
xchg
ds
xor
or
dec
mov
cmp
clc
and
inc
jne
shlb
mov
lods
or
sahf
cmp
hlt
stos
lea
jmp
out
or
test
not
xor
notb
mov
bound
xor
ret
scas
mov
sub
insb
aad
sbb
cmp
cmp
outsl
jmp
ja
or
dec
dec
ljmp
xor
sarl
icebp
jno
or
and
outsb
add
inc
aas
push
stc
sbb
add
leave
jg
hlt
mov
xor
pop
sbb
daa
aaa
pop
dec
push
shrb
adc
pop
popf
imul
adc
push
xor
lcall
adc
pop
shrl
cld
mov
cli
fidivl
into
gs
imul
mov
mov
push
in
hlt
shrl
mov
dec
or
lock
push
in
xor
mov
pop
pop
cmp
sar
sbb
pop
mov
jecxz
sbb
xlat
ja
pop
arpl
or
shrl
xchg
insl
pusha
lahf
pop
xor
andb
test
xchg
xchg
cmp
test
push
xor
sub
pop
aaa
push
out
lret
jl
inc
add
sub
mov
pusha
roll
xor
std
ss
hlt
sar
fistl
push
ret
test
xchg
cmp
or
jmp
push
pop
adc
push
sbb
sub
addr16
sub
and
sbb
mov
push
mov
imul
add
xchg
jnp
mov
xor
sub
int3
enter
jg
push
mov
das
jnp
mov
adc
pop
fisttpl
fsubrs
iret
or
push
daa
adc
mov
dec
mov
mov
imul
mov
movsb
pop
xor
pop
xchg
rclb
xor
fisttpll
rcll
mov
test
out
ret
test
jp
or
out
xor
mov
enter
loopne
cltd
adc
fiaddl
sub
ud2
cld
clc
je
mov
xchg
pop
mov
mov
sbb
mov
pop
lahf
push
and
aaa
mov
adc
pop
push
cmp
fidivrs
mov
and
aas
xor
cld
dec
inc
xor
int3
sub
xor
je
xchg
xor
ficoms
adc
enter
pusha
aaa
daa
xor
pushf
dec
aaa
xor
mov
pop
jp
lea
jge
mov
sti
test
rcrb
mov
in
push
lock
movsb
push
sub
cltd
out
dec
xor
or
add
push
xor
je
rep
sahf
mov
inc
and
pop
les
aaa
adc
and
add
addl
jl
push
mov
call
jnp
stos
movq
das
adc
and
pop
sahf
push
xor
std
jp
lahf
and
add
rcrl
rorb
loopne
test
lods
movsb
lock
ja
or
xchg
pop
in
popf
xor
out
clc
cmp
jno
push
lods
xor
imul
or
nop
xor
fistpl
mov
xor
bound
xchg
or
mov
cli
rcrl
fdiv
push
scas
xor
les
lock
dec
push
push
hlt
pop
dec
or
sub
push
mov
popa
inc
aaa
or
dec
adc
bound
stos
push
lds
imul
or
xchg
sbb
loopne
mov
in
or
push
inc
pop
shlb
mov
ret
dec
rolb
or
psraw
test
dec
push
je
cmp
inc
rcrb
or
push
jbe
bound
jb
fists
mov
sub
inc
mov
mov
icebp
dec
loop
mov
ds
js
adc
cmp
inc
jb
pop
jle
clc
nop
xor
and
mov
cmp
fdiv
test
cltd
hlt
adc
adc
sbb
rolb
mov
loop
shll
aas
adc
dec
mov
or
sub
subb
pusha
jne
lock
or
pop
or
inc
aam
sbb
orw
ja
repnz
cltd
aas
xchg
mov
pop
rorb
lock
push
pop
fsub
xchg
adcl
xchg
adc
mov
stc
jno,pt
or
sub
inc
add
pop
cmpb
add
adc
lods
dec
push
cmpsl
or
sub
popf
ds
xor
sbb
mov
sub
jae
hlt
pop
add
enter
xchg
fsub
xor
stos
sub
add
and
sub
out
jb
fsubr
sub
mov
add
ret
icebp
xchg
popa
subb
lock
push
push
and
cltd
fidivs
out
test
push
lock
icebp
fidivl
popf
lahf
dec
aas
lock
in
shl
out
xor
fidivl
lock
pop
inc
lahf
mov
loope
lret
or
xor
ss
jo
cmp
push
and
fisubl
adc
outsl
push
loop
or
out
jecxz
dec
sbb
test
lahf
xchg
fs
xor
cmp
pop
sub
lcall
jmp
test
or
fisubl
aaa
push
fsubrl
ljmp
aaa
enter
fmuls
lock
pop
jb
xor
icebp
inc
mov
gs
adc
or
ljmp
push
lock
mov
inc
es
pop
mov
jmp
in
stc
divb
or
pop
or
dec
and
add
push
adc
pushf
pushf
or
mulb
popf
cmp
pop
jg
xorl
mov
adc
fcmovbe
mov
and
dec
pop
in
and
les
hlt
xchg
xor
aas
hlt
fsubrl
mov
xor
sub
add
pop
sub
or
iret
divps
inc
les
or
sti
out
xor
in
xor
mov
push
in
cmp
es
test
xchg
data16
sub
xor
xchg
sbb
or
sub
and
inc
push
xor
sarb
enter
cmp
or
out
movhps
push
aas
add
addr16
lds
ret
loope
push
imul
enter
pop
push
pop
std
aaa
or
icebp
or
jno
or
mov
fdivp
aas
and
sbb
sbb
push
or
sub
roll
pop
mov
lods
cmp
enter
xor
and
xor
insl
pop
sub
xor
pop
fdiv
imul
mov
in
call
shrb
sti
push
lock
mov
dec
addl
dec
insl
loope
jne
jno
or
je
imul
nopl
cli
cltd
and
jecxz
in
mov
fimull
pop
inc
loope
pop
insb
or
xor
lods
and
out
inc
and
sub
inc
loop
icebp
pop
rcrb
mov
stos
pop
mov
add
test
imul
insl
xorl
int3
xor
and
iret
push
lock
ja
aaa
cld
aad
mov
call
xor
cmp
and
jmp
cld
jnp
aam
cltd
leave
pop
adc
sub
jnp
xor
scas
dec
lret
adc
outsb
jmp
add
mov
popa
jp
xor
cmpxchg
rcrb
pop
movsl
test
adc
and
dec
jne
lock
das
aaa
ljmp
xor
push
pop
pop
pop
push
jnp
pop
outsl
jmp
mov
xchg
out
fisttpll
xchg
or
testb
mov
mov
imul
jno
or
push
sbb
inc
icebp
lock
repz
hlt
pop
mov
push
jnp
lock
rol
pop
xchg
aaa
xor
xchg
xor
push
jge
cmpsl
and
xor
mov
stc
pop
and
rclb
scas
jle
aaa
mov
test
fimuls
std
add
rolb
or
push
xchg
pop
sbb
xor
and
xor
shrb
pop
fmuls
xor
scas
xchg
push
xor
popf
cmpsb
test
sub
repnz
in
pop
mov
test
dec
push
mov
cld
inc
mov
ret
lock
es
nop
inc
xor
xchg
xor
cmpsb
push
xchg
hlt
fs
aaa
sbb
rdtsc
adc
pop
fisubs
fistl
inc
adc
shl
or
adc
pop
xor
dec
nop
push
shlb
or
adc
xchg
test
xor
xor
jp
movsb
leave
xor
sub
pop
sahf
sbb
mov
andb
and
inc
or
sahf
or
xchg
mov
cmp
jle
scas
mov
lcall
xor
mov
xlat
lods
or
and
xor
mov
icebp
insb
jno
or
addl
cld
sbb
aaa
mov
addr16
lret
mov
or
fnstsw
add
leave
and
aaa
pmuludq
stc
mov
jmp
imul
es
arpl
pop
jno
fs
mov
loop
dec
insb
icebp
aas
mov
cmp
jns
clc
or
or
ja
imul
inc
call
adc
mov
xor
or
sbb
add
les
xchg
xorl
adc
cmp
cli
jmp
adc
mov
ja
push
pop
xor
pop
xchg
jne
pushf
call
das
push
inc
mov
stc
mull
jae
xor
pop
or
clc
hlt
and
xor
xor
lock
hlt
mov
aaa
rorb
or
and
pop
pop
out
mov
aaa
and
push
adc
sahf
pop
xor
imul
cmp
inc
sbb
sub
jne
loop
xor
jnp
int
mov
not
push
add
or
and
jo
push
xor
cmp
enter
incb
in
aaa
mov
rorl
push
sbb
or
sub
mov
rorb
lock
mov
mov
jge
out
add
mov
in
adc
mov
aaa
ja
add
in
jne
jge
inc
and
test
xor
dec
push
addr16
and
and
imul
aas
mov
mov
jne
stc
aam
push
lods
mov
stos
out
out
das
test
fsubrs
pop
and
dec
sub
jg
dec
pop
adc
pop
sbb
add
aam
cmpsl
mov
or
inc
mov
jnp
cltd
add
jecxz
xor
imul
jl
pop
or
push
xor
xchg
pop
or
and
xchg
xor
daa
push
mov
jg
or
imul
xchg
mov
clc
andb
pop
cld
pop
jecxz
jbe
pop
push
jns
adc
mov
pop
sti
testl
adc
jge
mov
push
pop
cwtl
adc
sbb
pop
adc
aaa
and
lret
sub
jae
sub
mulb
jecxz
subl
or
dec
test
sub
or
jo
lock
aaa
adc
jmp
mov
push
mov
daa
adc
nop
aas
fldenv
mov
and
leave
testl
or
mov
sbb
jne
or
call
addb
jnp
or
jno
or
xchg
push
outsb
hlt
inc
enter
gs
sbb
aad
nop
xor
in
xchg
fistl
test
or
out
xchg
push
sub
jno
or
sti
enter
xchg
shl
push
aaa
and
dec
repz
daa
or
sbb
push
xor
mov
and
push
and
push
mov
sbb
push
cmp
imul
mov
hlt
sub
push
or
or
jbe
jno
adc
adc
pop
insl
adc
ja
pop
outsl
loopne
hlt
clc
or
es
cmp
pop
jne
inc
jg
pop
or
adc
iret
hlt
adc
neg
cmp
lds
imul
mov
mov
cmp
bound
fisubs
negb
pop
icebp
leave
sub
jne
sub
mov
pop
and
out
out
loop
popa
fmuls
adc
mov
mov
popa
sbb
call
jmp
imul
cmp
pop
outsl
rdtsc
call
push
xor
sbb
dec
mov
shrl
cmp
pop
icebp
or
mov
clc
or
fwait
sub
out
mov
add
lcall
stos
clc
jecxz
mov
cmpsl
sub
pusha
inc
xor
fsubr
cmc
add
adc
mov
adc
lods
loop
mov
dec
xchg
jmp
mov
lret
fwait
sub
addr16
loop
or
dec
push
test
test
bound
inc
xor
int3
adc
lods
and
stos
sub
xchg
les
fwait
out
sub
and
adc
imul
sarb
inc
mov
mov
sbb
add
sub
dec
mov
or
jge
dec
jecxz
push
ss
push
add
add
rcl
dec
xor
sub
xor
and
push
and
in
gs
or
mov
cmp
and
inc
adc
cmpsb
or
rclb
lea
push
mov
and
or
loopne
and
xchg
sahf
mov
test
aad
aaa
adc
nop
aaa
adc
cmp
test
mov
clc
pop
and
lcall
iret
aas
mov
mov
call
dec
push
cmc
jo
xor
loop
sbb
lds
lgs
daa
adc
add
nop
push
call
aas
fs
cltd
dec
idiv
in
mov
or
xor
mov
and
push
adc
xchg
ss
sub
sub
adc
push
pop
jnp
sub
and
out
arpl
or
aad
es
or
inc
push
sub
jl
imul
jnp
sarb
pop
xchg
lret
sbb
ss
mov
nop
aam
insl
sub
aas
cmpsl
loop
ret
je
xor
xchg
jnp
sub
mov
data16
sub
xor
pop
push
mov
aam
and
cld
mov
int3
out
mov
push
in
out
push
mov
dec
mov
out
adc
and
pop
and
scas
iret
je
inc
stc
lods
sbb
push
inc
push
or
mov
addb
and
leave
and
jne
pop
xor
push
cmp
or
xor
sub
xor
outsb
shrb
cli
sub
mov
xor
push
mov
mov
stc
inc
in
sti
xor
or
fwait
jmp
or
sarl
xor
jmp
cmp
or
sub
add
jae
aaa
fisubrs
ds
lock
push
and
leave
or
mov
cli
or
rolb
add
icebp
add
adc
daa
xor
or
shll
mov
in
mov
add
ss
scas
cmpl
and
add
xor
lret
data16
leave
and
push
and
call
jge
div
mov
femms
loope
pop
and
xor
sub
cli
sbb
mov
sub
pop
das
mov
push
xchg
jo
test
cmpb
xor
mov
sbb
arpl
popa
xor
dec
repz
adc
jnp
lcall
cmp
andl
mov
hlt
test
aaa
pusha
xchg
mov
add
mov
jmp
shll
adc
sahf
cmp
fnsave
jbe
popf
push
aaa
or
rorl
cli
pop
xor
mov
fnstcw
out
cld
dec
xor
adc
jne
popa
adc
lock
sub
mov
dec
sti
cmc
aaa
or
gs
jp
add
sbb
stos
or
jo
push
and
jb
mov
mov
lahf
mov
imul
in
lock
sarb
or
cmpsl
fistl
sbb
popa
dec
xor
adc
adc
lds
pop
enter
pop
push
mov
ja
loop
faddp
push
lock
mov
bound
sbb
mov
sub
and
rol
or
sub
and
cmpsl
mov
cmp
pusha
xor
and
push
and
sub
fsts
cmp
xor
fisubl
arpl
hlt
or
mov
adc
icebp
sub
cmp
jmp
jle
push
lock
dec
xor
and
xor
sbb
and
je
xor
lahf
push
lock
das
adc
cmc
aaa
mov
test
rolb
push
mov
cmp
or
mov
pop
int3
scas
xchg
adc
inc
add
dec
mov
pop
movsb
lea
ficoms
stos
addr16
rolb
or
inc
int3
and
cmp
mov
mov
loopne
sbb
dec
pop
or
ret
pop
inc
dec
ror
test
mov
add
sti
add
xchg
xor
add
fldl
pop
mov
dec
inc
pop
mov
add
or
lock
les
lret
fdivl
imul
je
in
repz
or
lock
iret
xor
or
mov
adc
leave
aaa
mov
adc
mov
ja
or
push
ret
mov
repnz
aaa
scas
dec
mov
dec
jecxz
daa
mov
inc
inc
dec
dec
outsl
sbb
jne
shlb
insb
xlat
aaa
mov
int3
mov
and
clc
xchg
xor
push
sub
adc
mov
or
pop
mov
sbb
lret
fimull
pushf
add
adc
fs
sbb
push
shlb
mov
cltd
cmp
cltd
rol
cmpsb
adc
cmp
mov
pop
scas
xor
int3
jp
pushf
icebp
mov
fisubrs
inc
gs
or
mov
movaps
mov
insl
push
mov
ja
mov
lds
or
daa
mov
outsl
mov
aaa
pop
lahf
fnstcw
scas
xor
adc
sbb
pop
add
pop
push
clc
lret
mov
or
sub
mov
aaa
or
stos
repnz
or
test
add
and
jbe,pn
aam
adc
xchg
jmp
lock
popa
lods
mov
jmp
insl
call
xchg
out
jle
cmpsl
imulb
leave
mov
and
or
inc
xor
add
push
xor
mov
cld
mov
add
inc
in
and
daa
sub
jo
xor
adc
aam
sub
jl
sub
inc
mov
or
sub
data16
loop
bnd
xor
mov
fsubrl
cmp
or
xchg
das
and
add
mov
lock
pop
cmp
ss
lret
movsb
mov
sahf
jp
pop
rcrl
sub
and
push
and
into
test
test
sbb
xchg
aaa
out
jl
jnp
or
or
and
xchg
lods
mov
in
stos
jno
aaa
adc
lcall
daa
adc
cmp
xchg
cmpl
and
data16
ja
inc
push
or
cwtl
hlt
pushf
into
sbb
test
pop
lods
sub
jbe
xorb
andl
mov
xor
jg
cmpsb
mov
rorl
insb
add
or
lods
hlt
adc
lahf
lock
dec
bound
adc
lock
jle
out
xor
cld
fisttps
sub
dec
shll
icebp
dec
divl
jl
add
cmc
cmp
push
mov
adc
or
std
pop
lods
mov
call
jp
cmpsb
imul
jg
inc
xchg
adc
call
and
mov
imul
inc
stos
xor
dec
movsl
mov
loope
rcrb
mov
or
xor
pop
movsl
add
adc
push
aam
inc
xor
test
jae
jg
jns
mov
mov
jne
sbb
ja
test
jnp
popa
addr16
sub
cmpsl
xchg
pop
cltd
ja
aam
fldl
sub
test
xor
es
dec
or
push
je
and
jo
test
rclb
cli
mov
pop
std
push
iret
mov
sbb
jge
xor
shr
cmp
inc
adc
jo
adc
pusha
mov
inc
sbbl
and
cmp
sub
jns
repz
test
std
sub
or
xor
decl
ljmp
sub
mov
xor
sbb
es
push
or
and
mov
add
ficomps
stos
aaa
xchg
pop
adc
adc
int
mov
daa
adc
insl
mov
adc
ficoms
dec
pusha
ror
test
adc
push
push
jnp
xor
mov
jne
stos
dec
data16
addr16
movsl
shll
and
mov
dec
or
mov
sbb
ljmp
aaa
shl
xchg
movsl
jno
mov
and
insl
mov
in
in
xor
xor
dec
sbb
decb
pop
mov
add
mov
push
mov
adc
mov
dec
xchg
les
add
sbb
sub
test
xorb
jmp
sbb
addr16
andb
add
xor
loope
push
jbe
sbb
cmp
mov
lock
jne
push
push
daa
out
sbb
mov
xor
dec
jle
and
jmp
sbb
outsl
mov
push
xchg
cmp
push
dec
and
inc
shlb
subb
cmp
xor
or
bound
xor
rcr
adc
xor
sbb
sub
mov
adc
cmp
mov
and
fistl
orb
inc
pop
jbe
stos
xchg
ret
insl
mov
sbb
in
and
or
pop
cmc
into
cs
test
xor
and
xor
mov
mov
xor
arpl
lds
in
push
fidivl
xor
cmp
jmp
jae
pop
adc
add
xor
mov
mov
fsts
sbb
icebp
stc
xchg
adc
cmp
ja
dec
dec
icebp
xor
fdivr
in
jnp
cmp
xor
scas
cmc
insb
fs
xor
mov
or
es
sbb
imul
aaa
mov
repz
adc
test
cmp
hlt
dec
or
addr16
push
sahf
aas
xor
and
fldcw
inc
cmc
pushl
jge
cld
inc
mov
mov
and
ficoms
scas
xor
mov
arpl
sahf
xor
into
cld
mov
shll
cwtl
bound
movsl
icebp
fmul
mov
mov
ss
lods
test
sub
and
fildll
lea
divl
loopne
xor
mov
mov
ds
pop
orl
push
dec
stos
mov
or
movsl
shlb
xor
and
adc
je
clc
pop
mov
leave
mov
pop
stos
sbb
sbb
jo
sub
lods
xor
cmpsl
push
mov
orb
xlat
ss
push
lds
addl
loop
sub
sub
adcb
add
jnp
imul
mov
xlat
fisubs
jg
popa
jp
andb
xor
jnp
adc
lahf
pop
xor
add
lods
add
xor
or
int
das
gs
mov
jg
mov
mov
in
hlt
mov
sbbl
das
xor
scas
enter
jecxz
movsb
mov
icebp
mov
add
testl
stos
xor
inc
dec
stos
xor
adc
into
das
pop
sbb
jl
loop
lret
fiaddl
cwtl
fwait
dec
icebp
mov
inc
shlb
daa
jnp
dec
or
imul
sbb
icebp
mov
and
adc
lcall
imul
xlat
cli
pushf
push
xor
leave
call
pop
inc
jle
jo
andl
xchg
fdivr
into
xor
jmp
daa
loope
pop
xor
aaa
push
cmp
xchg
cltd
inc
out
sub
add
push
pop
and
mov
subl
push
adc
adc
xor
loop
fnsave
mov
les
in
push
and
adc
jmp
and
push
testl
inc
push
cwtl
mov
xor
mov
xor
lcall
inc
add
mov
mov
inc
pop
sti
inc
cmp
orl
adc
lods
sbb
adc
push
adc
mov
popa
cmp
jmp
orl
gs
imul
mov
sub
faddp
test
out
xor
pop
push
dec
shrb
mov
arpl
mov
xor
idiv
mov
dec
sbb
loopne
jo
mov
fldt
jae
add
leave
popa
arpl
in
cmpsb
jbe
dec
ret
jecxz
xor
sbb
fnstcw
loop
pop
adc
adc
sub
mov
dec
mov
rorl
loop
mov
mov
push
test
mov
jmp
pop
cltd
lahf
outsb
and
and
adc
mov
mov
cltd
mov
fidivs
push
jae
stos
out
or
and
stos
cwtl
push
add
cmp
mov
cld
aaa
bound
shr
jne
sbb
and
lret
ja
mov
cmp
inc
js
xchg
xchg
or
jno
flds
jg
mov
xor
out
push
xor
mov
call
cmc
sub
sbb
pop
aad
sub
call
fcmovnu
clc
dec
mov
fdivr
inc
ficoms
dec
cmpsl
rorl
out
cmp
and
adcl
xor
ret
clc
mov
xor
jecxz
sbbb
jns
xor
testl
xor
adc
cmp
xor
clc
or
aaa
addr16
ds
xor
xorb
push
pop
insb
jbe
in
xor
stos
inc
xor
jae
push
mov
push
and
push
mulb
mov
scas
sbb
cmp
fwait
and
push
mov
movsb
adc
cmpl
arpl
mov
xor
sub
sub
leave
repz
mov
gs
and
fcmovnu
mov
popa
dec
lret
xor
pop
xor
insb
push
jno
sub
xor
inc
mov
dec
aad
xor
fxch
out
inc
jb
and
xor
nop
cmpsb
popa
jno
xor
mov
cmp
pop
cld
xchg
mov
mov
sub
adc
sarb
sahf
push
xor
mov
xor
int
mov
xor
aaa
sbbl
aam
sub
decl
scas
test
add
fdivp
daa
gs
cmpsl
xchg
xor
xor
push
jl
xor
out
push
lds
movsb
xor
xchg
imul
xchg
cmp
mov
mov
xor
adc
aad
cli
xor
pop
outsl
adc
js
shll
xor
fs
xchg
pop
lods
jge
xchg
jl
mov
mov
inc
pushf
sub
cwtl
pop
jnp
jae
testl
in
xor
add
pop
or
push
jmp
sub
lret
leave
xor
ljmp
cmp
mov
movsl
scas
je
daa
push
inc
sbb
ja
pop
rcrl
xor
popf
lock
push
cmp
xlat
add
and
rcl
dec
daa
test
mov
rolb
mov
cmp
adcb
adc
sub
pop
mov
mov
adc
xor
lcall
jecxz
outsl
and
cmp
repnz
cwtl
bound
cmp
inc
xchg
dec
sbb
loopne
rol
lahf
jl
imul
cltd
and
ss
jnp
xor
fldenv
xor
xor
and
repnz
icebp
clc
inc
jp
rcr
xor
pop
fdivrp
sbb
and
cmp
jno
mov
repnz
pop
jns
fstpt
xor
inc
lret
jnp
fwait
add
cmp
sbb
rcll
xor
xchg
mov
or
inc
xor
and
test
xor
dec
cmpsb
mov
xor
jle
lods
pop
and
negb
or
sub
mov
lcall
dec
xchg
xor
push
mov
or
inc
loopne
ror
nop
push
mov
sbb
popf
aas
sbb
loope
bound
es
adc
inc
inc
cmp
and
or
and
lret
mov
js
sbb
mov
pop
loopne
test
lahf
mov
mov
loop
repnz
nop
shrl
sbb
adc
stos
fdivs
mov
xor
aaa
mov
adc
rolb
push
mov
out
icebp
in
cs
cmp
and
jbe
aad
sub
repnz
imul
sbb
iret
daa
or
and
xchg
xchg
push
ret
ss
lock
adc
sbb
imul
mov
xor
out
pop
xchg
push
push
fs
jmp
add
pop
sub
fimuls
das
sbb
ret
pop
xor
sarb
lods
inc
sbb
push
xor
ljmp
xchg
mov
push
int
into
ret
fs
int
dec
dec
shr
add
sbb
push
and
sub
cltd
cmp
aas
xor
mov
and
in
mov
mov
xor
adc
add
inc
pop
or
test
ljmp
repnz
push
cmp
sub
fsubr
mov
or
pop
add
or
push
inc
popl
sbb
fiadds
mov
lock
popa
xor
outsl
mov
xchg
mov
sbb
push
jno
push
pusha
dec
xor
xorb
push
adc
data16
in
mov
test
xor
popa
xchg
cli
pusha
mov
in
js
cmp
jno
cmp
mov
testb
add
loopne
jbe
sub
es
aam
nop
mov
das
mov
inc
mov
cmpl
sub
adc
sbb
push
xchg
and
xor
test
mov
dec
mov
jle
mov
dec
jmp
xor
movb
xchg
sub
fsubs
sbb
les
add
sub
in
aaa
call
pop
cmp
sbb
in
imul
lret
daa
xor
jp
enter
les
mov
or
sar
xor
ficoml
sub
shll
and
xchg
mov
lods
jge
test
rolb
xchg
adc
stc
in
aaa
pop
add
nop
imul
sahf
mov
jo
divb
sub
out
xor
jo
mov
and
inc
out
cmc
pop
adcl
mov
add
and
add
loop
es
xchg
xchg
insl
pop
jns
bound
int3
sub
or
add
das
out
push
xor
insb
fcoml
sub
sahf
jno
imul
insl
mov
aaa
xchg
aas
jmp
sub
pop
outsb
cs
mov
pop
lahf
sub
cmp
lea
mov
mov
hlt
ja
rcll
divb
sub
and
mov
push
pushf
xchg
pusha
lret
mov
pop
push
test
mov
adc
rorb
sub
sbb
dec
push
push
push
xchg
xchg
inc
xor
or
push
out
aas
xor
jno
mov
nop
xor
mov
lock
sbb
xor
fwait
pop
mov
aam
scas
cmp
adc
add
push
std
xor
in
movsl
xchg
xchg
imul
xlat
push
in
enter
inc
nop
dec
sahf
push
mov
aaa
mov
xchg
test
dec
xor
push
cmp
dec
push
push
adc
sub
xor
lcall
lahf
xchg
push
js
xor
fs
mov
pop
shll
shlb
xor
inc
in
aaa
mov
pop
xchg
xor
out
or
jg
inc
xor
pop
outsb
jns
stc
push
ljmp
mov
adc
imul
mov
adc
mov
push
inc
dec
into
lds
dec
imul
inc
and
ret
adc
leave
and
push
inc
jmp
sbb
xor
jl
decl
xor
pop
mov
add
fneni(8087
xor
icebp
push
mov
aas
adc
mov
cmp
fmul
enter
mov
cmc
lock
insl
xchg
sbb
clc
in
and
cld
jns
shll
pop
xorb
adc
mov
inc
mov
or
add
in
xchg
push
sbb
mov
aaa
sbb
out
inc
cs
jmp
ja
cld
inc
jl
xor
fcmovnu
sbb
out
or
out
call
int3
sbb
daa
xor
xchg
in
aaa
sbb
addr16
push
test
stos
and
sbb
sbb
jno
iret
sahf
jmp
lods
jmp
pushf
test
mov
scas
xor
rcll
lods
imul
push
xchg
sub
popl
sahf
and
sbb
mov
inc
xchg
xchg
xchg
push
fldl
xor
jo
cmp
mov
jmp
mov
pushf
and
pop
leave
mov
xor
mov
add
push
xchg
xor
flds
xor
dec
push
js
dec
in
mov
nop
jno
mov
xchg
xchg
xor
cmp
xor
inc
loope
pop
sub
jl
xor
or
ds
and
fisubs
xchg
inc
out
aam
cmpsw
dec
scas
push
dec
xor
xchg
sahf
loope
push
xor
jle
cmp
bnd
shll
scas
sub
add
cltd
xor
xor
cmp
xchg
maxps
js
jmp
stos
push
xor
lds
addb
dec
pop
mov
cmpsl
cs
xor
push
int
ljmp
adc
cmp
jecxz
or
xor
and
sbb
and
movsl
inc
ss
xorb
push
int3
loope
cwtl
sub
or
add
sbb
xor
xchg
lods
mov
mov
outsl
stos
pop
push
int
inc
loop
jbe
stos
inc
fidivl
mov
pop
inc
scas
jne
aas
xor
mov
pop
and
jo
xchg
dec
xor
mov
cmpsb
cwtl
or
mov
sub
je
cld
dec
lcall
cmp
xor
xchg
mov
out
xor
adc
test
movsb
or
lods
inc
aaa
xor
test
in
xchg
xor
pop
xchg
inc
lahf
insl
mov
test
cmpsl
jl
stos
fdivrp
sub
dec
in
xor
push
loope
mov
xor
out
repz
and
xor
aam
or
js
int
aad
inc
inc
shlb
mul
stos
push
cmpl
xor
js
mov
jge
fsubs
inc
xor
push
sbb
pop
call
popf
iret
mov
dec
xor
sbb
stos
xor
mov
adc
jle
push
jb
xor
or
sarb
sub
je
adc
mov
pop
lret
push
mov
outsb
dec
dec
adc
sub
xor
jp
xor
lahf
add
pop
js
out
mov
or
popf
xor
cmp
sub
mov
stos
int3
mov
shll
mov
aaa
mov
mov
jno
lcall
mov
sahf
xor
and
mov
pusha
mov
and
adc
mov
cld
sub
cmp
dec
xor
xor
pusha
sbb
lcall
lret
daa
xor
mov
and
xchg
das
mov
fsubrl
imulb
imul
jg
pop
push
push
pop
popf
jae
cmp
fsubrl
xor
xor
aad
imul
push
mov
sbb
push
jbe
xor
mov
push
iret
imul
jno
push
lock
mov
and
fcomip
mov
mov
outsl
cld
inc
mov
xor
popf
out
sub
in
xor
xor
fcomps
mov
push
xor
adc
xor
mov
mov
call
jns
scas
and
icebp
add
insb
sar
xor
and
sbb
out
cld
ret
mov
int3
fs
loopne
xor
sbb
pushf
mov
pop
xorb
mov
inc
out
or
test
into
shll
push
out
sbb
dec
mov
xor
jno
mov
insb
xor
test
cmpsl
jb
sbb
xor
adc
xor
frstor
inc
cmp
ja
and
or
or
jg
push
adc
xchg
fildll
sbb
adc
cmp
and
or
dec
jae
xor
mov
xchg
add
xchg
cmpsb
sub
add
xorb
out
mov
mov
xor
stc
jmp
adc
cmpsl
jnp
idiv
mov
dec
jb
xchg
add
sub
in
mov
imul
jbe
adc
xor
bound
aaa
mov
mov
pusha
daa
in
xor
shrl
aad
repnz
loope
mov
imulb
mov
adc
loopne
divps
xor
mov
jne
push
pop
and
xor
lock
push
call
mov
or
and
cmp
daa
ret
loopne
mov
mov
push
push
pusha
jg
adc
or
mov
decb
mov
ds
fcoml
xchg
xor
test
bound
xor
mov
mov
push
mov
test
popa
movsb
pusha
push
and
lcall
lock
sbb
jno
stos
pop
pop
aas
xor
outsb
arpl
xor
and
xor
movsb
jle
mov
push
pop
add
add
mov
fnstcw
icebp
sub
push
sbb
mulb
sti
aaa
xor
sbb
xchg
scas
push
and
inc
lods
orl
scas
mov
jo
nop
out
adc
xor
ret
mov
xor
ds
scas
sub
es
mov
xchg
data16
imul
sub
or
ss
pop
mov
adc
push
push
aaa
and
pop
push
and
and
shrb
pusha
rol
sarb
cli
leave
inc
sbb
push
cmpsl
inc
rcrb
cmpl
sub
jecxz
sti
inc
test
xor
pop
test
jno
test
jge
jae
adc
jae
push
insb
jno
dec
test
or
push
sahf
xor
jl
inc
mov
pusha
push
insl
xor
rcrb
cmp
outsl
adc
cltd
mov
sub
cmc
outsb
dec
sub
add
or
mov
add
cmpsb
jne
xor
shrb
nop
add
mov
in
inc
lds
sbb
push
inc
mov
shll
dec
clc
fs
xor
lret
add
and
jae
daa
jo
inc
xor
xor
ret
sbb
lods
movsb
in
sub
push
mov
mov
icebp
jo
popa
xor
cmp
ja
es
sti
xor
std
inc
mov
xchg
pop
and
push
or
and
out
pop
mov
dec
imul
aas
icebp
push
jno
aad
subb
mov
inc
xor
dec
push
jns
or
ret
and
repnz
mov
mov
ja
sahf
add
addb
lea
jae
fsubs
xchg
jne
dec
test
movsb
jo
mov
subw
aad
sub
adc
lds
xchg
popf
inc
jns
xchg
std
loop
call
icebp
pop
ss
mov
sbb
jmp
dec
popa
adc
les
add
sub
and
jno
cmp
mov
int
int
sbb
or
lock
inc
add
mov
inc
push
aas
cmpsb
xchg
pop
out
das
add
xor
in
repnz
mov
sub
fbstp
add
or
es
out
mov
push
xor
add
cmp
test
filds
xor
in
push
pop
push
jmp
xor
in
push
xchg
pusha
xor
cmpsb
jp
mov
shrb
loop
or
sti
ss
sub
xor
mov
jo
jg
lret
push
xchg
aaa
adc
mov
gs
push
das
xor
sbb
sub
sbb
enter
stc
ljmp
xor
out
jge
mov
add
in
cmp
into
fisubrl
sbb
jg
adc
pusha
xor
xor
jmp
std
sub
fwait
idiv
mov
in
arpl
fcomps
sub
xor
ffreep
cmpsb
mov
xor
aaa
jno
xor
outsl
stc
in
jb
pop
xor
pop
cwtl
dec
push
lea
fdivrl
cmc
notb
jo
adc
jns
xor
inc
xor
jno
add
xor
ja
lods
sub
icebp
repnz
push
hlt
cld
xor
incb
insb
xor
rcrl
out
mov
xor
dec
pop
call
out
xor
out
ret
or
pop
mov
jle
mulb
stos
pop
mov
test
pusha
sbb
push
imul
and
cltd
sub
jl
fadd
imul
dec
xor
inc
mov
sub
sub
mov
xor
pop
cli
stos
sbb
mov
xor
repnz
dec
fwait
bsf
inc
pop
mov
mov
dec
cld
ja
jnp
pop
xor
inc
mov
xor
mov
dec
xor
pop
push
shlb
stos
scas
sub
sahf
sub
sbb
sti
clc
add
fidivs
roll
mov
sbb
cmp
xor
and
aad
inc
pop
add
movsb
sub
sti
push
mov
or
and
adc
aad
jo
adc
cmp
push
pop
xchg
mov
stos
cld
jle
out
mov
ror
dec
popf
xor
lods
dec
stc
xor
cmp
jle
ret
call
testl
decl
push
mov
imul
fstps
xor
or
cwtl
fwait
xchg
mov
cltd
cmp
mov
push
sbb
jo
jne
sub
repnz
mov
push
in
xlat
aaa
add
jmp
addl
jp
in
push
dec
push
mov
adc
subb
and
pop
jns
paddd
dec
jge
cmpsb
std
test
mov
rcr
inc
movl
clc
jp
leave
jmp
aam
sbb
adc
imul
and
andl
and
sub
icebp
addl
arpl
or
xor
add
xchg
xor
xchg
dec
jg
pop
jne
xor
push
sbb
lods
pop
mov
xor
mov
mov
rcl
and
repz
dec
jne
in
pop
and
push
xor
push
clc
test
lret
adc
add
shlb
stos
inc
jge
mov
lret
xor
cmp
push
xlat
mov
imul
shl
repz
add
push
stos
out
push
ret
jo
and
loop
inc
rcr
cld
mov
cmpsb
es
jnp
xor
or
xchg
out
in
dec
and
movsb
inc
cmpb
cmp
push
xor
data16
loope
shlb
inc
xor
pop
ret
icebp
stos
jb
sti
push
adcb
push
xchg
sbb
pop
orb
mull
lock
in
in
jns
pop
lds
test
push
or
imul
xor
fwait
and
sahf
sub
mov
js
hlt
xor
in
notb
pop
and
std
fstps
movsb
popa
and
cmp
test
push
jl
or
sub
push
xchg
lret
push
inc
ds
and
leave
inc
int3
cmp
and
stc
inc
sub
aad
sub
xor
xor
push
ds
call
cmp
std
cmp
dec
sbb
pop
scas
mov
xor
gs
divb
subl
push
out
push
cwtl
xor
call
push
inc
push
and
imul
xchg
out
fcoms
add
pop
bnd
aaa
iret
loope
lock
das
xor
inc
or
add
push
cld
imul
icebp
xor
mov
bound
xor
dec
or
pop
push
fistpl
push
iret
mov
adc
test
xor
scas
jne
outsl
mov
test
add
sbb
cltd
pop
pop
adc
and
icebp
jb
in
scas
dec
pop
das
sarb
lahf
mov
sbb
xor
inc
push
push
js
lds
mov
jae
push
push
mov
arpl
adc
xor
mov
push
scas
lahf
addr16
aaa
dec
add
fs
xchg
xchg
xor
or
mov
dec
data16
aaa
lahf
xor
cmp
and
mov
icebp
inc
stc
cmp
xor
mov
dec
xchg
push
xor
push
xchg
sarb
js
xchg
pop
fcoms
dec
fisubrs
int3
add
adc
out
mov
std
push
cmp
jne
pop
xor
sub
sbb
sub
or
imul
dec
mov
push
push
or
cmp
or
cld
xor
rcrl
xor
out
xor
mov
rcrl
mov
xchg
xchg
lods
fnsave
mov
mov
add
imul
ret
scas
cli
mov
mov
cmc
pop
lds
pop
jle
push
test
dec
or
mov
jecxz
insl
shll
mov
fsub
shlb
es
mov
cmp
pushf
pop
sub
pop
xchg
cmp
mov
sbb
xchg
or
ljmp
imul
sub
es
xor
or
pop
and
ret
xor
test
scas
dec
jno
fs
inc
add
ffreep
addr16
or
or
xchg
cwtl
stos
aaa
xor
push
jne
mov
sahf
fs
xor
das
addr16
jno
xor
out
sub
pop
inc
rcrl
aas
and
fmull
adcb
push
ja
scas
mov
xor
fs
adc
dec
pop
xor
sbb
fadds
in
out
and
das
xor
fldt
push
shll
addl
lods
pop
gs
xor
decb
xor
adc
xor
sub
pushl
jecxz
out
add
pop
loope
aaa
rorb
into
and
sub
sbb
push
mov
xchg
cmp
xor
push
jns
jmp
int
jle
data16
sbb
jmp
xor
call
popa
daa
or
jns,pn
add
mov
cld
icebp
ret
xor
add
sbb
lock
xor
or
sub
test
pop
and
dec
mov
int3
out
sbb
pop
mov
pop
gs
sbb
stos
test
mov
push
dec
pushf
outsb
sbb
cmp
aaa
out
adc
push
out
mov
sub
out
push
test
xor
jb
cld
jecxz
mov
sbb
mov
dec
mov
rorl
xor
loop
mov
xor
sub
in
sbb
ret
xchg
jl
test
mov
stos
adc
lds
stos
or
shll
pop
inc
sub
mov
fcomps
shlb
lea
xor
and
es
std
push
or
xchg
movsb
dec
xor
push
xchg
or
leave
and
mov
mov
ret
xchg
fld
sbb
test
xor
repz
push
dec
clc
xor
stos
xor
loop
loope
idivb
rcl
adc
jmp
xor
mov
cmp
xlat
in
scas
adc
mov
mov
es
mov
les
call
or
mov
cld
loope
insb
test
push
mov
pop
std
mov
pop
mov
stc
jno
mov
fwait
popa
mov
push
fildl
xchg
fs
pop
jg
pushf
loopne
sbb
mov
je
test
sbbb
xor
push
ret
or
push
fwait
xor
cmc
adc
sub
cs
aad
les
mov
mov
cwtl
pop
int3
push
xchg
test
shlb
lret
adc
in
xor
ss
xor
push
xor
je
jns
mov
mov
xchg
dec
mov
ja
mov
cmp
inc
jnp
push
xchg
adc
fsincos
js
xor
cwtl
cmp
fdiv
enter
pop
xor
loope
rclb
inc
nop
repnz
das
mov
mov
inc
push
cld
sub
pop
popf
xchg
mov
out
lock
add
and
pop
sti
fdivl
pop
movsl
hlt
pop
xor
adc
cmp
add
nop
cmp
test
stos
fdivl
xlat
dec
sbb
pop
xor
lds
jnp
orb
mov
sub
xchg
adc
adc
sbb
xorb
loope
mov
sub
cmp
movsl
pusha
inc
xor
sub
and
aad
mov
dec
pusha
mov
insb
into
cmp
push
xor
push
dec
lcall
cmc
cwtl
cmpsb
push
xor
loope
sbb
repz
outsl
jl
loopne
add
xor
jbe
test
mov
xor
sbb
pop
cmp
dec
sub
mov
xor
push
inc
idiv
lret
sbb
leave
sub
inc
aaa
outsb
ds
dec
dec
xor
sub
aad
xor
cwtl
mov
popa
dec
sbb
imulb
sbb
imul
cmp
test
push
sarl
push
arpl
push
popf
je
lcall
imul
push
inc
outsl
cmp
xor
out
mov
loopne
add
faddl
aaa
lea
mov
push
adc
inc
aam
add
popf
sub
enter
setnp
xor
imul
shll
mov
out
movsl
xor
pop
fsts
aaa
in
mov
jo
fdivr
mov
cld
add
xchg
mov
pop
lcall
repnz
scas
mov
sahf
shll
adcl
xlat
ret
push
sbb
aaa
push
cli
sub
sub
lock
pop
mov
xor
mov
xlat
sub
sbb
sbb
call
cmp
jbe
dec
inc
jne
and
xchg
pusha
sbb
pop
adcb
pop
dec
xchg
sub
jne
js
fnstcw
sbb
daa
outsb
sbb
xor
xor
jge
out
stos
rol
sbb
repz
imul
icebp
jecxz
push
add
push
xor
out
mov
sbb
in
ljmp
adc
add
xor
dec
aas
lea
or
push
add
loopne
jb
sub
fsubl
fnstcw
shlb
adc
nop
jl
fisubrs
adc
mov
inc
jmp
xor
adc
mov
mov
in
sbb
add
clc
sar
mov
popf
and
jp
inc
ds
imul
push
or
sub
lret
xor
sub
jbe
mov
ret
jnp
lds
stos
fwait
out
push
sub
mov
cmp
lahf
inc
mov
out
out
pop
xchg
sbb
cmpsb
cs
daa
xor
cld
decl
test
addl
in
mov
inc
clc
xchg
or
mov
jecxz
push
les
fiadds
xor
adc
call
jae
insb
movsb
adc
sub
addl
mov
int3
jl
jg
dec
je
mov
les
clc
andl
rcrl
dec
or
pop
mov
sub
rcrb
cmp
inc
hlt
xor
ss
loope
sbb
mov
adc
inc
movsb
popl
push
lods
stos
jmp
inc
pusha
adc
in
dec
jg
test
mov
mov
jne
add
push
imul
test
lret
mov
lcall
push
jg
lret
sub
fidivl
jae
aam
aas
sbb
pop
lods
iret
repnz
shl
add
test
sbb
ficompl
sub
mov
sub
xor
push
ljmp
jno
push
xchg
call
mov
cmpsl
fidivrs
xor
sbb
add
push
cmpsb
loop
pop
jl
clc
jmp
push
std
sbb
pop
adc
data16
xchg
xchg
xor
sub
jo
outsl
sub
push
neg
adc
in
jecxz
dec
into
xor
cmp
inc
lods
jo
imul
and
dec
xor
pop
cmc
imul
insl
aaa
add
ss
or
sbb
test
ds
xchg
test
and
sbb
popa
or
pop
ss
push
cmp
loope
xor
inc
loopne
or
leave
jl
sub
icebp
call
sbb
or
lahf
xor
pop
cmpsl
or
lock
xchg
cvtps2pi
pop
lds
ret
movsb
cmpsb
lea
mov
cmp
push
xlat
adc
xor
fldcw
cltd
lds
jno
mov
in
mov
sub
cwtl
fdivl
and
leave
dec
jge
xlat
mov
add
xchg
inc
mov
fcoml
shrb
fists
pop
mov
cmp
je
aas
xor
jnp
cs
pusha
inc
mov
test
psubusb
pop
xor
stc
js
mov
mov
imul
mov
xor
in
stos
dec
xor
mov
mov
adc
push
lret
rcrl
and
cmp
push
js
pop
mov
push
es
cltd
sub
inc
xchg
push
mov
out
xor
scas
pop
xchg
mov
jp
arpl
rcrb
cmp
jbe
push
jae
sbb
jo
xchg
stc
push
repz
jmp
push
outsb
jb
hlt
xor
sub
add
mov
dec
js
mov
xor
jns
adc
sub
push
shrl
js
push
push
jns
jp
rorl
jno
xor
and
enter
ljmp
xchg
push
js
xor
mov
or
sbb
fnstsw
mov
das
mov
nop
jno
xor
leave
cmpsb
aas
sbb
movsl
daa
dec
mov
xlat
adc
cld
and
loopne
sbbb
jb
aaa
mov
mov
das
fcompl
imul
push
andl
test
adc
inc
xor
mov
mov
aaa
pop
mov
and
sub
mov
cmp
das
aaa
push
les
sub
hlt
and
cmp
in
inc
mov
pop
mov
sub
dec
mov
xor
cmp
xor
pop
push
cmp
aaa
cmp
sub
cld
jl
scas
jno
ss
hlt
ljmp
sub
cmp
popa
je
pop
shll
rdtsc
and
negl
xor
fstl
sub
in
add
pop
lea
mov
out
push
and
push
sub
adc
sub
cltd
loope
gs
jno
cmp
xor
xchg
dec
shlb
mov
adc
mov
push
push
mov
fisubl
jb
aaa
adc
test
in
jae
jg
scas
xor
xor
sarb
xchg
ret
jns
xchg
data16
test
push
push
test
shlb
sbb
lods
lcall
mov
jmp
int
in
or
sarl
add
inc
xorb
lods
xor
add
test
ds
mov
pop
xor
insl
scas
das
add
xor
sub
dec
rdtsc
call
inc
mov
xor
and
xorb
jmp
dec
js
mov
cwtl
aaa
outsb
call
inc
xor
add
stos
es
cmpl
lods
loope
and
mov
outsl
into
and
xlat
xor
jg
inc
mov
jmp
loope
adc
jo
sbb
xchg
into
imull
iret
jge
stos
inc
jne
clc
aam
in
mov
sub
xor
mov
and
cmp
jno
testb
jecxz
pop
call
aas
pusha
stc
std
xchg
fwait
add
popa
int3
movsl
ret
pop
popf
push
shrl
sub
data16
fcomip
jae
inc
xchg
out
xor
mov
jl
xor
mov
in
dec
and
pop
dec
xor
jecxz
inc
xor
pusha
inc
mov
xor
mov
roll
and
rcll
xor
lock
sub
and
and
inc
xchg
lahf
xor
push
int3
scas
out
data16
xor
call
pusha
and
xchg
jmp
mov
xor
es
incb
mov
adc
jmp
xor
cs
inc
and
jle
and
sbb
pushf
jno
mov
pop
sbb
lods
out
push
stos
loop
xor
jnp
insl
loop
inc
pusha
add
loope
popa
pop
daa
xchg
dec
loopne
rorb
mov
xchg
jmp
add
mov
mov
or
int
sub
push
sbb
nop
arpl
aaa
iret
add
cwtl
int3
popf
es
cmp
dec
ss
mov
jns
pusha
in
cltd
push
mov
daa
sbb
mov
or
shlb
sub
inc
popa
sarb
popa
mov
pop
or
cmp
xor
mov
or
mov
inc
jmp
daa
call
sbb
fsts
xor
adc
xor
sbb
scas
push
cmp
lret
andl
mov
sub
mov
enter
fbstp
inc
sub
add
xor
mov
stos
das
adc
sbb
sub
daa
aaa
rcll
inc
mov
mov
pop
scas
fcomps
rolb
mov
mov
cmc
mov
mov
sub
push
mov
mov
repnz
inc
vcvtsi2sdl
mov
mov
mov
es
adc
dec
xor
push
dec
shrl
or
das
mov
out
inc
add
xor
fiadds
adc
adc
xor
adc
pushf
inc
mov
fcomps
or
ja
mov
xor
subl
xchg
cltd
in
cmpsb
pushf
sub
test
cmp
xchg
xchg
jle
pusha
xchg
test
es
jbe
push
xchg
mov
mov
stos
jp
dec
popa
daa
adc
ret
dec
xchg
loope
movsb
jge
out
inc
out
das
pusha
leave
sbb
sbb
ljmp
inc
cmpb
pop
xchg
das
pop
cwtl
jmp
fsubl
mov
shlb
fdivrp
cmp
push
fs
xor
adc
adc
pop
in
rol
int
fnsave
pmuludq
push
imul
int3
sub
push
rol
js
push
nop
inc
jns
pop
mov
jae
aam
xor
xchg
mov
test
mulb
xchg
fwait
dec
xor
pop
mov
adcb
ss
xor
add
xor
and
jo
push
pusha
push
and
sbb
or
ja
lcall
mov
mov
es
scas
push
jl
mov
and
sub
scas
arpl
pusha
lock
mov
sbb
ret
bound
xor
xlat
sub
pop
jg
testl
mov
iret
daa
dec
sub
or
adc
jecxz
mov
repz
ror
divb
push
mov
out
pushf
lea
dec
lods
outsb
and
xor
adc
jns
or
mov
mov
dec
das
xor
mov
cmp
fdivrs
mov
int3
xor
sti
cmc
mov
aaa
xor
mov
inc
mov
notb
pop
xor
ljmp
push
cltd
mov
mov
xor
imul
jne
xor
add
inc
jp
in
mov
pop
stos
push
addr16
xor
adc
mov
sbb
mov
jns
fidivl
add
pop
jmp
cld
fiadds
mov
dec
sbb
mov
or
inc
sbb
sub
push
sbb
lds
or
xor
and
jno
jbe
and
or
movsl
cwtl
repnz
xor
fsubrs
loope
mov
xchg
inc
xchg
pop
iret
cmc
repz
inc
xor
add
xor
mov
daa
ret
mov
push
adc
das
fdivp
xlat
or
mov
jno
clc
mov
hlt
testb
pop
fiadds
sub
lret
xor
shlb
test
popf
jno
out
inc
jno
cmc
aas
pop
out
push
scas
outsb
adc
insb
jo
lods
and
stc
xor
sbb
and
cwtl
sbb
xor
lahf
dec
add
inc
lea
jae
out
aaa
xor
or
test
clc
call
mov
loopne
pop
cmp
loope
ds
mov
shrl
xlat
gs
stos
pop
jp
orb
mov
pop
cmp
mov
push
lcall
sbb
data16
clc
or
or
fsubrs
and
and
sbb
add
repz
mov
loop
fdiv
popa
sub
jecxz
arpl
push
stc
or
xchg
hlt
mov
sub
test
loop
and
loop
adc
sbb
fldt
sub
data16
cmp
icebp
push
and
push
xor
cld
insl
mov
or
in
inc
fdivs
cmpsb
cmpsl
and
cmc
stos
sbb
adc
test
mov
pop
popf
mov
fistps
stc
pusha
shll
adc
loope
mov
xlat
jno
and
cli
xor
xchg
movsl
lea
adc
jge
daa
cs
icebp
sub
imull
or
and
sbb
lods
fcomip
or
sub
in
xchg
fs
es
dec
pushf
arpl
aaa
cmpsl
into
adc
mov
out
popaw
mov
adc
adc
mov
dec
add
subl
in
pop
lret
dec
xor
pop
and
inc
mov
adc
repz
xchg
sbb
xchg
cmp
jp
rol
jecxz
adc
lock
ss
pusha
jl
mov
enter
xor
mov
xchg
jg
push
movsl
jb
aaa
aaa
jae
pusha
mov
xor
rcrl
gs
insb
sub
ja
sbb
cwtl
mov
and
sub
adc
and
mov
repz
popa
mov
outsb
js
lock
or
xor
jge
lcall
icebp
mov
repnz
xchg
pop
pop
cmp
inc
std
popf
pop
xor
pop
and
in
pop
xchg
jne
jns
adc
or
and
inc
test
ffree
mov
sahf
aaa
movsl
dec
lea
xor
in
xor
repz
inc
scas
jo
and
adc
out
out
pop
xor
sbb
mov
sub
push
cld
xor
addb
shll
push
mov
pop
pusha
sbb
mov
pusha
ficoms
lret
sbb
test
jecxz
xor
cltd
dec
loop
insl
into
pop
adc
add
sbbb
cs
mov
push
sub
sub
sub
xchg
mov
sbb
das
dec
or
shl
pusha
push
enter
inc
icebp
mov
jno
adc
pop
mov
lret
imul
lret
test
cmp
inc
aaa
enter
clc
inc
add
insb
xor
xor
or
adc
sub
inc
cmp
mov
jno
jb
inc
sub
mov
cltd
testl
xchg
loop
jo
mov
loopne
repnz
test
repnz
sbb
xchg
inc
pop
push
pusha
sbb
sbbl
popa
jl
gs
jecxz
and
add
mov
jns
add
ljmp
fcompl
xchg
add
scas
fsubp
jmp
ja
mov
lahf
sbb
mov
mov
adc
sahf
adc
repz
rcrl
rorb
lea
mov
pusha
push
frstor
or
inc
jg
adc
fldz
in
and
cmp
in
fidivs
jno
mov
sub
sbb
sub
cmc
mov
pop
insl
dec
popa
scas
mov
xchg
repz
data16
jle
sub
mov
loopne
xchg
jmp
and
mov
dec
dec
sbb
daa
jmp
stos
cwtl
inc
mov
movsb
add
data16
insb
mov
fcoml
xchg
sub
mov
cs
das
addr16
mov
es
adc
sub
jmp
popf
lock
push
add
lcall
test
daa
sub
pop
lea
sub
fistpl
sub
push
and
repnz
sbb
jle
out
sbb
ja
inc
inc
dec
push
repnz
mov
jno
loop
sub
jecxz
jnp
fldcw
or
cmpsb
sbb
push
loope
cmp
in
cltd
dec
nop
rclb
pushf
mov
xchg
mov
jl
add
xor
stos
sarb
mov
add
loopne
aaa
sub
pop
aad
jmp
adcl
loopne
out
mov
and
jp
std
xlat
aaa
les
test
pusha
hlt
lock
std
push
xchg
arpl
xchg
aas
adc
neg
xor
mov
adc
stc
les
dec
int
mov
sbb
fdivrs
xor
neg
ds
popa
orl
pop
lea
mov
popa
or
sbb
or
push
lcall
and
jecxz
push
mov
fimuls
jns
push
adc
enter
pushf
xchg
mov
mov
push
cs
mov
adc
ret
sub
stc
iret
adc
xchg
add
jg
bound
shrb
adc
and
shlb
pusha
inc
cmc
ret
int
mov
lea
mov
or
jg
fwait
sub
testb
inc
mov
cmpsb
xchg
xchg
inc
insb
cmc
adc
push
sub
cmp
repnz
xchg
sbb
jbe
data16
sub
mov
or
pop
mov
sbb
sbbl
shrb
pop
outsl
sub
aaa
dec
jl
std
imul
punpcklbw
call
xchg
lods
rcl
and
in
aam
jmp
test
mov
les
xor
orl
adc
pop
sub
sbb
cwtl
jmp
mov
fcompl
mov
mov
sahf
fwait
das
sbb
adc
jl
les
stc
and
and
jmp
lret
cmpsl
in
sub
in
add
shr
movsb
push
out
mov
ror
sbb
sbb
cmpsb
lock
sub
addl
fcompl
mov
es
pop
sub
fsubrs
aas
es
jmp
xchg
out
push
mov
xor
mov
in
lods
in
lcall
and
pop
mov
mov
outsl
mov
mov
lods
push
xchg
sti
data16
xchg
mov
aaa
adc
jb
fsts
in
loopne
dec
icebp
mov
mov
mov
call
loop
add
sbb
mov
out
mov
pop
mulb
aad
sarb
xor
mov
mov
loopne
lock
add
xor
daa
push
xor
mov
jo
inc
lods
cmp
xchg
jl
pop
adc
fbstp
cmp
dec
lea
fs
ret
cmp
sti
mov
andl
stos
jno
orl
xor
sbb
imul
lock
int
dec
rorl
sub
mov
ljmp
ljmp
sub
dec
inc
push
mov
xor
pushf
sar
testb
loope
dec
pusha
in
lods
cmp
fwait
or
addl
add
push
pop
mov
or
subl
hlt
or
push
or
dec
icebp
adc
dec
mov
popa
sbb
bound
testb
or
int
xor
mov
out
sub
mov
adc
jmp
xor
ret
daa
and
cmp
imul
aad
inc
xlat
sbb
int
jmp
lods
mov
jno
addr16
sbb
mov
out
mov
arpl
out
xlat
jg
mov
xor
adc
cmc
mov
out
xor
test
dec
icebp
jo
ljmp
xor
xchg
addl
inc
icebp
mov
mov
dec
stos
lahf
inc
ss
repz
pop
inc
data16
cmpsb
rolb
and
push
rcll
scas
scas
push
in
dec
rcr
mov
and
stos
outsl
into
sbb
xor
mulb
das
fisubrl
cmpsl
dec
mov
cmp
lods
add
daa
data16
jnp
sbb
mov
lahf
xchg
adc
outsb
dec
scas
je
mov
mov
es
mov
data16
mov
shr
cmp
sbb
pop
mov
jp
and
or
lock
mov
cmp
sub
into
dec
daa
roll
xor
int
das
imul
iret
lods
test
scas
push
outsb
jmp
pop
divb
dec
jno
scas
add
lods
jp
int
xchg
inc
cmp
fnsave
aaa
popa
scas
or
xchg
xor
pop
and
std
mov
sbb
dec
mov
cmp
pop
rorb
pusha
scas
pop
ror
add
mov
lock
mov
insb
pop
dec
cld
xor
xchg
pushw
adc
lock
mov
fdivr
loope
xchg
in
loope
js
mov
pushf
mov
ds
rcl
mov
inc
mov
test
xor
xor
pusha
push
test
xor
or
inc
shlb
xor
addl
aaa
das
popf
testl
xor
adc
mov
cs
xor
nop
or
jno
shlb
shll
ljmp
sbbb
hlt
call
mov
xor
cmc
loop
xor
sbb
shl
das
adc
dec
inc
xor
incl
push
out
dec
xor
mov
inc
dec
xor
pop
jbe
dec
xor
xor
xor
cmp
cmc
add
jmp
sarb
adc
dec
cld
push
mov
push
popa
cmpsl
pop
lahf
mov
sbb
mov
or
push
popa
cmp
int
jecxz
shrb
das
data16
in
inc
test
pop
sbb
jle
xor
cmp
mov
adc
pop
das
push
dec
data16
mov
inc
mov
mov
ds
jne
and
hlt
add
dec
inc
inc
xor
ss
andl
sub
divl
inc
push
je
sti
mov
adc
js
hlt
scas
xor
ret
and
das
mov
jnp
mov
pop
xor
add
in
xor
adc
call
sbb
fsubrs
ret
iret
inc
adcb
subl
inc
jbe
pop
aam
sub
xor
fidivrs
sbb
out
push
jbe
stos
pop
sub
xor
jae
mov
std
fsts
mov
mov
and
fcmove
sbb
push
cmpsl
dec
push
in
xor
xchg
mov
lret
or
jae
xor
popa
lods
inc
imul
out
test
int
cmp
mov
repz
repnz
aas
adc
jo
sub
fstps
shll
stos
inc
shrb
les
xor
cmc
imul
xor
sub
shll
loop
ret
in
push
xor
xchg
out
inc
leave
xor
adc
cmpsb
xor
xchg
dec
lods
aaa
jg
fmull
mov
nop
pop
xor
mov
aaa
jp
add
cmp
mov
mov
xor
negl
aam
add
jecxz
inc
xchg
xchg
ss
sub
mov
shlb
sub
aas
mov
jno
jne
mov
jmp
ss
cli
sbb
inc
mov
je
push
xchg
push
aam
cmp
mov
mov
xor
cmpsb
and
je
dec
mov
add
xlat
std
ljmp
cmp
push
loop
xor
xor
jno
xor
mov
mov
push
xor
repnz
push
dec
xor
mov
lcall
mov
data16
cmc
add
inc
cmp
cmp
pop
lock
push
fistl
test
mov
inc
ljmp
adc
cmp
sahf
cmc
insb
js
fimuls
xor
popa
stos
xchg
sbb
mov
les
sub
xor
sbb
xor
add
loopne
icebp
pop
jnp
dec
cmp
stos
xor
inc
loopne
dec
mov
jp
data16
jecxz
xor
clc
sub
mov
mov
mov
adc
jle
cmp
pop
and
fs
push
outsb
cld
int3
in
jle
inc
mov
xor
lods
inc
shll
sub
xor
das
fstl
icebp
inc
xor
addb
or
push
xor
push
mov
daa
mov
leave
enter
xor
int
fsubrl
lcall
cmp
and
adc
xor
out
lock
xchg
xor
pop
cli
fwait
mov
sub
inc
xor
xchg
stos
mul
xor
cmp
loop
push
aaa
mov
cmc
lock
lea
jmp
push
enter
dec
xor
jecxz
in
mov
xor
sbb
xlat
xor
sub
mov
inc
push
push
and
or
push
adc
cld
imul
test
cmp
cmpl
pushf
pop
cli
lock
out
sub
or
push
sub
cmp
mov
push
lods
outsl
push
xor
dec
jecxz
add
loop
aaa
mov
mov
aaa
add
fistpl
pop
push
and
or
and
add
pop
fcomi
cmpsb
jne
mov
leave
shll
adc
insl
das
popa
xor
lret
adc
xchg
cld
icebp
adc
stc
jno
sbb
and
sub
sbb
loop
cmp
sbb
adc
add
sbb
sbb
sub
repnz
lret
ja
xor
aaa
cmp
push
push
and
test
divb
jecxz
xchg
je
std
data16
negl
int3
add
and
xchg
jecxz
and
mov
insl
addb
test
jmp
xor
jle
inc
xor
adc
in
fwait
jno
push
mov
sahf
mov
leave
sbb
or
cs
shlb
decb
sbb
lret
test
leave
inc
xor
out
and
mov
pop
adc
inc
leave
das
es
inc
jle
mov
mov
or
push
push
je
sbb
and
jbe
jne
std
jg
out
popf
inc
js
xchg
xor
jge
iret
xor
es
xchg
add
xor
pop
popl
pop
test
lahf
dec
sub
xor
jg
aad
mov
bound
or
xor
cmp
and
in
xchg
push
xlat
xor
pusha
std
loop
jmp
lea
push
xchg
mov
xchg
ja
into
mov
push
ret
pop
mov
cs
cmp
cmp
repz
xor
xchg
mov
call
fidivrl
xor
lret
das
cmp
dec
jnp
push
sub
xlat
mov
data16
popf
adc
daa
test
imul
pushf
flds
aaa
lods
dec
lret
sub
negb
shr
test
mov
sub
rcrb
jp
nop
or
bnd
aaa
fnstenv
cmp
dec
sub
dec
xor
daa
mov
add
and
push
sbb
xor
repz
imull
daa
ds
jle
xor
push
mov
adc
rcrb
aam
jge
xor
dec
pushf
adc
es
xor
add
sbb
cwtl
inc
mov
cmc
adc
fnstenv
sub
mov
repz
push
xchg
cmp
push
enter
mov
or
adc
pop
mov
adc
dec
outsb
xor
mull
popf
fdivrl
fiadds
and
cmp
or
aaa
adc
pusha
shrl
clc
les
addl
and
aaa
nop
shl
ret
xor
mov
pop
test
xor
in
pop
ret
sub
fadd
xor
or
mov
je
or
pop
xlat
lods
push
and
sbb
insb
lock
xchg
inc
aad
wbinvd
sub
xor
clc
sub
pop
shlb
imul
jo
out
xor
jno
xor
loopne
pop
adc
jne
dec
mov
das
push
bound
xchg
mov
xor
testl
fists
ss
mov
mov
cli
lahf
shll
test
and
push
xor
ret
push
mov
dec
xor
pop
cmpsb
mov
mov
pop
xor
or
lret
mov
jno
mov
jae
repnz
sahf
insb
push
aaa
out
rcrl
mov
xor
sub
dec
cmpsb
fildll
inc
xor
daa
cmp
lds
insl
outsb
sbb
pop
cld
mov
incl
xor
je
mov
ds
pop
sahf
scas
dec
leave
aaa
mov
xor
sub
xchg
dec
xor
adc
xlat
das
lret
add
hlt
sub
mov
mov
loop
xorb
inc
xlat
mov
xor
jae
inc
in
or
jmp
insb
js
xor
pop
fucomp
xor
lcall
imul
inc
lods
and
jno
mov
sbb
mov
lods
xchg
push
push
add
and
nop
pop
sarl
xor
pop
cmp
inc
inc
mov
test
je
ds
pop
loop
pop
pushf
or
ret
dec
xor
jae
cs
cmp
xor
dec
les
push
adc
out
mov
mov
and
push
lea
sub
xchg
imul
shlb
and
loope
sub
or
popa
adc
test
push
inc
dec
ret
and
ficomps
cmp
cld
mov
sub
repnz
popa
and
xor
dec
js
test
push
test
sbb
add
das
cmp
lret
sbb
movl
popa
inc
loope
jle
adcl
mov
adc
movsb
jno
daa
popf
mov
fisubl
sub
ret
enter
stos
popa
out
sub
cltd
add
lea
bnd
ret
mov
pop
and
ss
sub
ljmp
inc
shlb
sbb
ljmp
repz
mov
rcrb
mov
pop
out
cli
jecxz
ljmp
adcb
faddp
lock
pusha
push
inc
pop
adc
mov
xchg
push
and
dec
test
mov
cmp
and
mov
daa
mov
ret
push
and
leave
cltd
cld
inc
and
cwtl
ljmp
jmp
add
sub
mov
mov
arpl
in
push
sbb
inc
imul
xchg
jns
mov
mov
and
adc
loope
out
xor
aas
cmp
or
test
nop
push
mov
xor
aas
sub
adc
lcall
inc
mov
jb
cwtl
shll
pop
ljmp
xor
into
movsb
and
mov
pop
ds
xor
xchg
pop
call
jg
sub
xor
or
add
pushl
cld
fwait
xor
jmp
call
dec
pop
or
fildll
jle
sub
sarb
xor
js
dec
outsl
or
and
xor
xchg
adc
xchg
das
push
es
sbb
or
adc
cmp
adc
outsl
mov
shl
jmp
sbb
mov
dec
sub
mov
cmp
arpl
aam
cmpsb
adc
cmp
mov
and
loopne
pop
aam
repnz
in
jne
cs
xor
aas
sub
adc
insl
leave
icebp
xor
inc
scas
xor
ja
mov
sbb
arpl
push
sub
bound
ds
xor
movsl
cmp
clc
sub
xchg
pusha
jo
sub
jg
xlat
ja
fucomp
sub
xchg
adc
xor
sub
fisubs
aaa
and
shll
stc
or
cmp
adc
pusha
jp
ret
aaa
dec
pop
sbb
and
sahf
rorb
out
rcrb
loopne
arpl
mov
sbb
leave
mov
or
dec
in
es
sbb
das
mov
jns
mov
es
arpl
hlt
sub
or
inc
pushf
xchg
daa
push
into
call
jg
es
and
add
jns
cltd
push
lods
jno
sbb
cmp
call
cmpl
pop
jg
mov
iret
dec
jo
cmp
sar
mov
pop
movsl
sub
sub
cli
pusha
xchg
test
in
es
mov
xchg
jmp
cmp
out
ret
cmp
data16
ja
fld
or
mov
lret
adc
mov
and
mov
bound
push
xorl
pusha
aaa
aad
icebp
push
aam
xor
addr16
or
jo
iret
cmp
mov
pusha
aas
repnz
clc
sub
adc
hlt
push
or
mov
inc
xchg
xor
mov
cmp
pushl
xor
subl
push
orl
and
daa
stc
pop
sub
data16
pop
out
cmp
cltd
call
pop
mov
cmp
out
inc
sub
insb
dec
cmpsl
clc
iret
add
nop
fprem
xor
xor
nop
adc
mov
scas
xchg
or
jb
pushf
sbb
movsl
mov
pusha
xor
enter
pop
xor
inc
fs
andl
out
xor
jno
mov
xor
inc
enter
xchg
cmp
popl
inc
xchg
push
orl
xor
xor
jecxz
push
xchg
sub
sub
pop
mov
jbe
jnp
stos
xor
jmp
les
insl
push
pop
mov
rorb
xchg
mov
cmp
jp
cwtl
push
lods
and
ss
mov
push
cltd
xor
int
aam
xor
das
xchg
dec
xor
dec
icebp
sarl
cmovns
sbb
jmp
xor
xor
jl
test
or
aaa
subl
xchg
ja
pusha
cmp
mov
xor
shrl
mov
cmc
push
mov
push
xor
push
out
mov
lock
and
sbb
nop
andl
or
xor
or
push
jae
and
lret
ja
xchg
icebp
inc
data16
sub
or
xor
jge
jmp
shrb
mov
outsl
bound
push
xor
mov
jb
pusha
call
lret
cmp
xchg
fnstsw
repnz
fadds
fucomip
xor
rolb
or
pop
test
rol
pop
xor
xor
pop
cmp
mov
pop
add
xor
ja
adc
xor
arpl
hlt
jne
xor
sti
das
out
mov
mov
push
test
mov
sub
stc
loop
jmp
add
xor
fs
xchg
mov
pop
lds
dec
jno
inc
push
icebp
push
sub
pop
stc
sti
sub
adc
inc
cmovnp
repnz
xor
cld
xchg
pop
mov
pop
xchg
cmpsl
shlb
sbb
or
xor
or
xchg
pushf
xchg
xor
imul
lret
mov
xchg
mov
sysexit
xor
push
pop
sbb
test
pop
sub
add
mov
jbe
stos
movsl
sub
rorl
and
lds
mov
lods
inc
xchg
lods
pop
inc
data16
sbb
fbld
pushl
jp
leave
push
rcll
sti
mov
jno
aad
jb
pusha
stc
dec
pusha
xor
mov
xor
add
and
mov
inc
pushf
dec
and
adc
adc
push
jo
sub
cmpsb
dec
mov
icebp
or
lret
fdivrs
and
adc
sbb
cmp
pop
fdivrl
push
test
xchg
jge
mov
cmp
pop
push
sahf
push
xor
clc
and
fsubrl
loop
xor
xor
jae
mov
or
fadd
sbb
mov
mov
pop
adc
in
mov
mov
lret
pusha
dec
add
mov
xor
inc
adc
into
mov
rcrl
mov
pop
jae
shrl
in
mov
call
mov
jnp
scas
and
cmp
mov
inc
scas
xor
fildll
mov
xor
push
pop
mov
fidivs
repz
imull
sbbl
jp
movsl
xor
mov
jl
sbb
mov
pop
mov
cli
cmp
xor
fcompl
mov
in
mov
xchg
push
xchg
shll
xchg
xor
movsb
cmpsb
and
adc
ret
popa
xor
repnz
jg
sub
mov
mov
mov
adc
mov
xchg
sbbb
pusha
inc
jp
sarb
mov
int
ja
sub
xchg
adc
daa
shl
ja
fmull
fisubs
ljmp
cmpsl
and
aaa
xor
xchg
rcrl
mov
dec
sub
mov
lcall
pop
xchg
and
mov
sbb
and
xor
loop
cmp
or
sub
ja
push
fimull
pusha
xor
mov
mov
mov
out
xor
fwait
inc
sbb
mov
dec
mov
xor
cmp
out
adc
out
and
andb
xor
ds
stos
ss
ror
mov
test
mov
inc
cli
jno
mov
adc
adc
push
ljmp
incl
jno
and
fs
add
call
pusha
inc
jo
stc
pusha
flds
cmpsl
and
xchg
cltd
cmpsb
ffree
lods
rcr
popf
xchg
shl
pusha
mov
sarl
ret
or
les
sub
minps
out
xchg
repz
inc
mov
fcmove
push
pop
stos
jno
fdiv
call
ret
xor
stc
push
insl
xchg
ret
ficomps
or
xor
mov
shrb
xlat
sub
iret
adc
mov
clc
rorl
std
movl
or
mov
lret
insl
push
int3
or
inc
sub
lret
sbb
xor
or
in
or
pop
stos
mov
push
push
push
pop
pop
xchg
xor
cvtps2pi
incb
or
xchg
pop
std
inc
gs
pop
xor
test
ljmp
popa
mov
mov
pop
mov
in
aas
sbb
jo
lahf
or
or
push
ljmp
mov
cltd
les
into
mov
xor
dec
jns
dec
dec
xchg
push
pop
sbb
adc
jg
adc
jecxz
lock
or
pusha
loop
xor
sbb
push
push
adc
mov
fisttpll
hlt
movsb
xlat
adc
fwait
xor
dec
lahf
inc
sub
jmp
fists
push
add
sbb
loop
cmp
mov
xor
cmp
pop
xorb
hlt
or
xchg
push
mov
fcomip
add
out
pop
cmp
je
xor
pop
add
sbb
idiv
xor
push
jns
lea
rcrl
cmp
xor
lods
inc
push
arpl
push
xor
mov
cmpsl
dec
in
jmp
mov
push
dec
xchg
push
sub
mov
adc
insl
jae
xlat
mov
sub
dec
lret
jns
js
lods
inc
jns
mov
cmpsl
dec
xor
das
xor
arpl
dec
icebp
js
aad
ret
mov
pushf
icebp
call
xor
lret
fcompl
xchg
inc
scas
dec
clc
sahf
inc
movsb
sbb
cmp
dec
mov
xor
jge
cmpsb
in
mov
and
adc
and
cmp
pop
or
shrb
pop
xchg
aas
cmp
pop
and
gs
stc
outsl
cmp
sbb
push
adc
sub
rcr
sub
cmp
pop
data16
pop
inc
mov
pushf
pop
mov
dec
mov
xor
jno
es
aam
outsl
lock
pop
sbb
movl
and
cld
into
pusha
lahf
andb
loop
dec
xchg
cmp
stc
jb
mov
test
fcmovb
sbb
int3
aaa
incb
clc
pop
nop
lahf
or
daa
xor
dec
cmpsl
push
and
xor
in
and
aas
mov
pop
mov
test
neg
push
xchg
mov
add
mov
and
sbb
jecxz
xchg
xor
pop
jge
sub
jmp
jmp
int
cmpb
and
dec
mov
inc
lods
xor
shr
xor
dec
cmpsb
imul
dec
loope
xchg
sub
stc
adc
sbb
lock
jl
push
lret
mov
in
divl
shrl
sbb
iret
adc
cmp
jecxz
xor
pop
cwtl
mov
les
xor
cmpsb
xor
pop
and
mov
lcall
mov
shll
popf
push
repz
iret
aaa
dec
xchg
inc
xor
push
pop
mov
xor
loopne
inc
aaa
addl
xor
inc
push
sub
insb
test
les
jp
cmp
push
inc
and
ja
adcb
xorl
xor
add
xor
enter
or
jo
xor
test
aad
sbb
enter
mov
jmp
jno
cmpsl
mov
addb
sbb
sub
loopne
div
es
jns
add
sub
jns
inc
xor
in
cmp
incb
jne
imul
xor
cld
out
xor
iret
data16
jmp
inc
mov
adc
inc
nop
cld
sub
sub
sub
int
push
and
ljmp
or
ss
jno
ss
mov
xor
into
test
iretw
int
sub
jp
test
leave
sub
adcl
add
fnsave
sbb
xor
mov
mov
sub
push
fwait
clc
and
xchg
pop
insb
mov
sbb
cld
mov
aaa
fsubrs
adc
add
sbb
mov
jae
sub
out
out
mov
mov
jp
add
cmp
int
sub
sub
rol
insb
xadd
sub
xchg
adc
push
test
xchg
andl
in
push
and
stc
sarb
fdiv
mov
stc
fidivl
andb
cmc
adc
sbb
jbe
jae
imul
mov
mov
sbb
popa
cmpsb
insb
mov
push
and
jo
pop
jno
sbb
and
push
inc
xor
fcmove
je
icebp
sbb
std
mov
or
lds
add
cmp
lcall
xor
arpl
fs
mov
ss
mov
lret
mulps
adc
movsl
cmp
ret
and
add
mov
xchg
sbb
jle
jno
dec
fistpl
mov
cmpsl
mov
shlw
jnp
out
jecxz
adc
je
shrl
test
cmpl
sub
dec
push
fildll
sub
or
aaa
mov
jne
push
repz
enter
ret
adc
ja
stc
addb
push
fisttpl
dec
fwait
incl
icebp
stos
xor
inc
mov
xor
push
dec
pop
nop
xor
repz
jmp
xor
int3
cli
loopne
push
xor
pop
mov
pushl
lods
mov
and
lock
repz
icebp
push
ret
pop
xor
test
insb
popa
inc
add
adc
stos
ja
ds
adc
iret
bound
xchg
xor
shrl
jle
cmpb
subb
test
mov
gs
std
xor
xchg
lock
inc
cmp
call
and
lahf
inc
xor
sub
xchg
repnz
jns
mov
dec
mov
je
xchg
jp
lea
cwtl
insb
sub
das
xchg
out
or
dec
push
cmp
outsl
inc
int3
data16
push
inc
sbb
pop
popf
and
mov
cmpsb
xchg
fsin
je
inc
out
and
loop
sbb
pushf
xor
push
or
jl
inc
xor
in
aaa
insb
adc
mov
shrl
js
or
push
pop
imul
mov
cmp
loope
dec
fidivs
or
adc
sub
filds
lahf
scas
xor
inc
ret
cmp
xor
bound
cmp
adc
mov
jns
mov
test
je
pop
sbb
xorl
outsb
inc
ljmp
dec
xchg
dec
scas
mov
xor
adc
adc
mov
loopne
push
lods
insl
test
dec
xor
sub
cs
jno
shlb
adc
mov
sbb
xchg
xor
stos
jmp
ja
jbe
or
jmp
rdtsc
out
push
sahf
xchg
into
test
nop
aam
mov
pop
test
xlat
fistps
lret
mov
into
xor
adc
test
daa
sbb
in
xor
sub
in
pop
js
enter
ss
push
push
ficomps
fstl
jge,pt
mov
iret
mov
jno
pusha
mov
stos
in
imul
es
fisubl
jno
clc
jno
xor
add
popa
out
gs
sbbb
xorb
cmp
and
cmpl
xlat
iret
adc
sbb
out
jno
mov
xlat
popf
lds
push
mov
sbb
and
lcall
or
push
xor
push
clc
insb
insb
push
mov
popa
daa
scas
mov
mov
mov
mov
or
xor
add
test
mov
mov
cmp
je
mov
test
jno
mov
out
xchg
pusha
pop
aas
push
dec
popf
push
mov
adc
ret
pop
iret
popf
or
jae
fwait
cmp
or
fwait
dec
dec
popa
and
sub
repnz
mov
pop
shll
sub
icebp
out
cs
xor
mov
vsqrtps
xor
mov
popf
pop
int3
or
xchg
dec
push
dec
ss
xchg
sub
inc
addl
jmp
popf
sbb
pusha
xchg
xchg
je
daa
or
rorb
popa
or
pop
adc
add
in
sub
jecxz
repnz
std
lods
and
test
adc
or
inc
jns
fdivrs
lret
ljmp
data16
xorb
repz
adc
ss
sub
pop
adc
ret
call
mov
stc
stc
pop
push
lds
sub
pop
repz
nop
pusha
nop
aas
or
and
std
roll
test
inc
mov
rcr
mov
mov
cmp
dec
aas
xchg
pusha
daa
add
xor
dec
sti
fsts
cmp
mov
das
inc
mov
or
add
sbb
movsl
scas
stc
push
out
push
jne
out
xchg
inc
imul
in
sarb
xor
lret
mov
mov
sub
or
xor
stc
ss
sub
or
push
add
mov
popa
popf
xor
int
out
cmp
enter
frstor
sub
add
xlat
mov
inc
push
push
data16
leave
jno
sub
fwait
in
jne
jno
add
pusha
sub
popaw
orb
and
xchg
sti
pop
and
scas
daa
pusha
mov
insl
cmpsb
mov
sbb
mov
in
mov
clc
jmp
mov
jge
fnsave
xor
pop
inc
jg
mov
xor
lret
fstp
xor
pop
dec
in
jno
sbb
xchg
mov
push
mov
bnd
xchg
and
push
xorb
enter
inc
and
xor
cmpsb
hlt
adc
repz
xor
fwait
add
repnz
stos
sbb
ljmp
lods
add
add
add
and
pop
sub
loopne
pop
xor
imul
insb
mov
and
es
jmp
mov
lock
bound
mov
push
sub
sub
dec
push
adcl
mov
ljmp
and
sbb
mov
outsb
sbb
in
mov
scas
push
sub
pusha
hlt
lahf
pop
and
add
call
cmp
fsts
fwait
or
idivl
jne
lock
and
inc
sub
sbb
mov
out
adc
or
fwait
sti
test
sub
and
or
mov
movsb
adc
mov
test
into
scas
and
inc
lret
lods
outsl
rclb
adc
in
filds
aas
sub
mov
lock
loope
imul
fdivrs
inc
fcoms
jg
daa
stc
rorb
aad
pop
hlt
mov
inc
leave
repz
inc
in
sub
jg
push
lea
mov
add
mov
lock
es
mov
push
xchg
xchg
adc
cwtl
pop
sahf
xor
rcrb
sub
push
shlb
mov
test
repz
fs
cs
pop
jmp
inc
push
cmpsl
add
sub
sbb
adc
jo
sbb
xlat
cmp
test
lret
in
jo
movsb
popa
pop
fs
icebp
ljmp
xchg
arpl
xor
inc
add
xor
std
mov
data16
loop
xorl
lret
jmp
ss
xor
dec
jno
xor
dec
imul
call
jae
mov
pop
and
push
cmp
inc
rcrl
in
cltd
loop
cmp
rcr
push
repnz
lock
xor
and
mov
and
scas
mov
data16
inc
adcb
enter
xor
and
jo
xchg
out
aaa
adc
icebp
mov
mov
lret
pop
and
lods
out
cmp
or
xor
mov
add
loop
xchg
fs
imul
push
rorb
jmp
xor
sub
xchg
jge
mov
inc
xchg
es
repz
sub
pop
call
dec
aas
sub
cmp
jecxz
mov
sub
pop
clc
lock
pop
add
xchg
mov
jmp
std
jg
dec
loop
cmp
out
xor
cmp
xchg
sbb
pusha
mov
add
shll
sbb
pop
jno
fistps
pop
cmp
push
cmp
and
sbb
scas
rolb
xor
cmc
pop
xchg
scas
inc
fwait
sub
sbb
lds
add
push
popf
out
pop
inc
daa
out
mov
inc
idivl
repz
mov
jo
pop
mov
xchg
repnz
lods
xor
popf
shll
jns
xor
xchg
in
push
xor
xchg
sarb
mov
test
mov
xlat
movsb
xor
imul
lock
push
fs
ret
sub
stc
and
jmp
dec
sub
lods
xor
dec
imul
lock
hlt
pop
sub
or
mov
or
inc
rclb
pusha
push
sahf
pop
lahf
aam
mov
jo
xor
or
mov
push
push
xor
jl
jge
jns
jo
xor
shlb
hlt
out
lahf
sub
stos
mov
call
xor
mov
pop
movsl
mov
add
add
jno
lds
movsl
xor
jg
dec
inc
lcall
adc
or
in
out
xchg
adc
adc
mov
mov
lea
shrb
xchg
loopne
xor
xor
jg
subl
dec
mov
enter
jnp
xor
popf
jg
rorl
loop
push
xchg
dec
scas
jecxz
aaa
stos
js
push
in
sub
mov
push
add
in
das
xchg
lcall
movsl
lds
xor
emms
xor
cli
sahf
xchg
mov
out
and
xor
mov
add
xor
xlat
pop
bound
xchg
inc
and
pushl
jp
movsl
inc
into
xor
sub
jl
mov
xor
outsl
sub
xchg
clc
fidivrl
fcoms
or
mov
es
cld
ds
mov
xchg
subl
fstp
add
pusha
imul
xor
or
lods
jbe
dec
xor
mov
mov
mov
dec
jns
xchg
jne
cmpsb
stc
cld
arpl
push
sub
sbb
adc
push
add
lret
pop
test
js
in
pop
cmp
imul
xchg
xlat
mov
shl
adc
bound
icebp
cmc
out
pop
divb
gs
xor
mov
xor
mov
mov
rcll
mov
pushf
insb
cld
mov
cmp
lea
jne
xchg
cmp
xor
ror
pop
mov
ficoml
std
adc
sti
jns
insb
loopne
insl
dec
mov
sub
xor
jb
test
dec
pop
ds
cmc
mov
mov
negl
push
fcmovnb
mov
adc
shrb
push
adc
xor
std
int
add
sub
dec
add
movb
mov
jg
jae
xchg
adc
sbb
popl
mov
int
pop
daa
cmpsl
push
jo
pop
add
push
jb
mov
ror
cmp
push
jg
sub
adc
sbb
mov
js
test
push
jb
xor
xor
sarb
dec
mov
insb
insb
adc
sbb
push
push
cs
mov
repz
int
in
xor
enter
lods
pop
cld
leave
mov
jg
dec
cwtl
jnp
out
insl
mov
adc
sub
icebp
mov
dec
scas
sbb
xor
xor
stos
push
in
imulb
or
scas
cmpb
push
push
xor
xor
outsl
xor
pextrw
pop
adc
aad
rclb
dec
sbb
movsl
pop
xchg
xor
push
les
fidivrl
adc
xor
outsb
das
xorb
ja
cmp
push
dec
jae
imul
fidivrl
dec
xor
cmp
cltd
cmpb
xor
fdivl
fiadds
mov
shl
mov
xchg
jbe
inc
sub
pop
pop
mov
dec
shlb
xor
jp
hlt
fcompl
fstpt
cmp
sbb
lds
or
xor
xor
cmc
xchg
test
xor
aaa
pop
repnz
xor
sbb
pop
sub
fmuls
add
xchg
push
cld
push
mov
and
in
in
push
nop
fnstsw
dec
inc
xor
xor
sbb
adc
sub
inc
out
sti
leave
stc
divb
pop
xor
mull
push
fldenv
xor
pop
jecxz
fs
mov
pop
xor
pop
js
cmp
notb
push
insl
cld
xor
fistpll
inc
iret
xchg
test
fs
fisubrs
sub
clc
fcomp
es
or
loopne
xor
jecxz
shr
add
out
xor
sub
aaa
or
repz
or
jle
pop
loopne
push
jo
cmpl
les
adc
inc
call
mov
add
adc
in
adc
shr
arpl
jg
sub
push
scas
push
sub
xor
mov
xor
fwait
inc
fcomp
loop
pop
xor
and
insl
and
xchg
or
mov
hlt
stos
test
flds
inc
inc
aaa
test
es
test
jb
xor
dec
pop
incb
ret
push
xchg
add
mov
xor
xchg
pop
mov
in
jbe
int3
cmpl
aad
xor
sub
cmp
js
sub
adc
and
mov
pushf
sti
and
mov
fmuls
push
subl
lods
xchg
xor
ss
xor
or
push
and
stc
sub
mov
xor
dec
daa
aas
xor
push
nop
lds
loopne
ret
testl
or
out
or
pop
imul
cmp
jl
jle
lahf
sub
mov
xor
aas
mov
dec
out
imull
popa
inc
loop
mov
xorl
icebp
aas
pop
adc
xor
pop
cmp
or
add
addr16
mov
and
add
inc
jp
or
stc
lcall
adc
xor
shrl
ret
jae
inc
mov
mov
xor
ja
add
cli
or
lds
inc
inc
ret
aaa
rcll
rcrl
mov
xchg
cmp
sbb
add
cld
inc
aad
stos
loope
into
rclb
push
mov
das
jae
jno
adc
ret
and
push
or
ss
ss
dec
xor
shll
inc
aaa
rorb
and
test
aad
xchg
inc
clc
cs
xor
outsl
adc
cmpsb
inc
jge
jle
orb
xchg
shll
or
sbb
inc
mov
mov
pop
mov
mov
ss
mov
outsl
mov
mov
lds
jmp
leave
add
xor
pop
mov
or
icebp
lret
mov
and
mov
xor
pop
pop
pop
aas
cmp
xor
dec
push
xor
jae
xor
shrb
movsl
arpl
shl
xor
int3
scas
jns
popa
fst
dec
cmp
jns
in
push
lcall
push
adc
inc
test
scas
adc
mov
add
inc
xor
popa
or
jne
xor
xor
sub
fs
xor
gs
int
adc
adc
dec
adc
call
xor
cltd
jno
cltd
push
mov
incl
mov
rcrl
adcb
xor
ja
jo
xchg
push
insl
xchg
popa
xor
ss
mov
fldl2e
popf
adc
adc
jb
sub
and
rcr
popa
stos
xor
pushw
jae
pop
xchg
lds
inc
xchg
mov
adc
data16
mov
cmpxchg
pusha
ret
mov
jns
cmpsl
xchg
pop
or
data16
stc
jno
test
add
xchg
mov
sbb
push
imul
push
sub
movsl
inc
adc
ror
call
loop
lock
imul
dec
and
lock
adc
lods
add
push
es
arpl
sub
jno
stc
or
xchg
movsl
mov
fildl
xor
adc
xor
into
scas
lret
cmp
mov
adc
and
push
sub
rcrl
rol
sub
pusha
fwait
movsb
mov
adc
out
dec
inc
xor
into
add
sbb
fisttpll
xchg
rolb
xchg
dec
mov
sub
xor
in
loope
popf
insl
mov
mov
jo
lock
xor
fnsave
sub
aaa
sbb
movsb
mov
out
inc
adc
pop
xor
movsl
mov
std
out
xchg
mov
js
mov
rol
xor
repz
mov
scas
xor
sarb
mov
xor
fdiv
dec
fsubr
fs
inc
fucomp
movsb
ret
or
js
lods
ret
mov
adc
jnp
push
xor
leave
xchg
popf
lds
jg
jb
dec
pusha
push
mov
or
sub
xor
mov
lea
test
xchg
outsb
mov
ja
sub
imul
shrl
out
aaa
in
lea
and
cld
cli
gs
hlt
repz
insb
pop
xor
scas
add
push
pop
xor
cs
mov
xor
mov
or
cmp
pop
mov
jge
dec
sahf
daa
stos
lea
mov
jmp
add
push
pop
sbb
dec
ret
xchg
xchg
arpl
jno
mov
das
ljmp
aam
in
inc
mov
cmp
mov
dec
jno
cmp
jns
mov
jo
lock
xor
dec
bound
add
cmc
jecxz
or
data16
lcall
xchg
inc
scas
dec
jno
pop
xor
cmpsb
jb
jp,pn
pop
leave
mov
jge
hlt
outsb
cmp
dec
jns
out
add
repz
xor
bound
push
cmp
sbb
flds
test
add
sbb
cmp
pop
or
rcl
sbb
sbb
lahf
int
stos
adc
pop
jae
lret
dec
sarb
test
sbb
lahf
mov
dec
jmp
adc
jb
mov
mov
push
ret
rcrl
imul
jle
ret
push
fwait
push
repz
gs
int
outsl
subb
in
and
add
out
ficomps
push
and
es
lods
clc
add
cmovbe
daa
mov
cmp
stc
stos
fistps
mov
mov
cmp
gs
fsubrs
jae
push
lods
idiv
out
movsb
mov
inc
popa
or
es
cmpsb
lea
push
stc
xor
jge
js
iret
adc
dec
and
inc
xor
jne
push
daa
add
sbb
dec
xor
cmp
inc
fcompl
push
xor
ret
dec
xchg
push
mov
stos
cmp
cmpsb
jnp
fists
stc
shrb
cli
push
jne
push
push
lea
repnz
adc
sub
xor
pop
mov
pop
cmpsl
ret
xor
push
inc
out
xchg
lcall
fwait
xor
lret
std
dec
outsl
pop
cmp
xor
scas
adc
push
xchg
rdtsc
adc
cmp
ja
or
adc
and
push
xor
push
jle
mov
xor
stc
in
mov
cmp
sahf
push
xor
js
in
aaa
ficompl
xchg
inc
dec
lock
adc
xor
sbb
pop
dec
xor
cld
cmp
xor
add
jmp
push
daa
cmc
sub
or
imul
cmp
aam
pop
daa
xor
or
repnz
xchg
inc
xor
ds
test
lret
xor
xor
mov
add
xor
std
ljmp
pop
mov
jns
cli
xor
lock
cltd
mov
in
inc
fimull
mov
cmp
and
divl
mov
lock
sbb
dec
xchg
test
xor
lods
add
mov
outsb
xor
loope
adc
out
fidivs
xorb
cmp
dec
repz
fnstenv
loopne
pusha
test
sbbl
fs
enter
jle
loope
out
fst
or
xor
fwait
dec
jg
movsl
pop
inc
xor
ljmp
mov
push
xor
mov
sti
sub
jl
mov
xor
and
scas
xor
sbb
mov
xor
in
and
scas
add
call
sbb
jb
inc
jmp
cld
les
adc
cmpsl
pop
shlb
cli
and
sbb
jbe
dec
popa
add
add
mov
mov
and
sbb
jb
cmpsb
std
xor
dec
fs
mov
scas
push
add
xor
in
outsb
loopne
imul
fnstenv
lahf
pop
xor
shll
decb
mov
sub
cmp
out
in
popa
sub
adc
outsb
mov
aas
or
or
ret
inc
shll
mov
push
add
imul
enter
jecxz
cltd
xor
ret
and
pop
cwtl
or
movsb
call
cmp
bound
adc
fstpt
mov
rcrb
sbb
cli
scas
and
jb
cwtl
mov
dec
or
mov
icebp
in
nop
mov
ss
push
roll
jle
lret
sbb
and
mov
add
push
imul
add
pop
ja
dec
cmp
sub
dec
insb
stos
fisttps
das
adc
arpl
or
sub
in
xor
or
add
shll
stc
push
ret
dec
pop
arpl
sbb
mov
fwait
push
mov
leave
les
out
jo
ds
sbb
xchg
inc
push
sbb
jnp
mov
sub
xchg
mov
add
cmp
shr
mov
and
sub
cmp
sbb
mov
inc
jo
jmp
cmpb
xor
jle
xor
gs
xor
mov
mov
adc
xor
jae
cmp
mov
adc
fnstenv
ret
adcb
test
fisubs
es
rcl
xor
roll
xor
xchg
and
cmp
lds
in
jle
cmp
shrb
mov
shrb
testb
xor
lret
and
aad
xor
jnp
sahf
xor
sbb
push
inc
insl
shlb
cmp
cs
xchg
subb
xor
shrb
in
std
nop
xor
pop
scas
push
gs
adc
ja
push
test
imul
add
adc
inc
pop
hlt
int
sbbl
sub
and
rclb
xor
fcoml
push
xchg
xchg
lret
test
lahf
dec
jnp
aaa
pop
and
das
and
mov
and
bound
or
imul
shl
out
call
dec
xor
inc
or
or
pushf
iret
sbb
dec
movsl
sub
leave
je
push
dec
and
incb
lock
or
xor
jnp
push
imul
pop
xchg
shlb
and
mov
std
fadd
les
adc
popf
cltd
xchg
xor
mov
or
shll
adc
scas
inc
ss
add
xor
lds
fs
mov
pop
aaa
adc
adc
iret
mov
mov
xchg
xor
sti
and
inc
mov
leave
cmp
addr16
daa
ljmp
sub
adc
jb
insb
outsl
sub
push
jnp
fnstcw
mov
pop
xchg
push
aaa
push
fistps
rorl
stos
sub
xor
shrl
fisttpll
shrb
and
mov
movsb
xchg
xor
rolb
test
in
xor
lcall
xor
mov
aas
inc
les
xchg
addr16
xor
mov
test
cltd
cwtl
xor
adc
lds
ret
pop
js
add
in
jle
mov
les
mov
dec
xor
xchg
inc
jns
sbb
and
jno
adcl
and
mov
fistpll
pop
loope
mov
and
aaa
sub
xchg
out
push
mov
inc
jg
ficomps
xchg
lods
cmp
je
inc
sti
xor
mov
pop
adc
stos
and
or
stos
sahf
sub
test
cltd
lock
sub
cld
xor
add
jb
pop
pop
test
jecxz
add
pop
out
sahf
or
int
push
lea
and
daa
iret
data16
jb
mov
gs
xor
adc
pushl
out
dec
ret
xor
inc
sbb
pop
test
pop
xor
cwtl
stos
jno
pop
in
sbb
out
xor
test
scas
push
scas
sub
pop
daa
stos
push
push
int
cwtl
xor
test
subb
and
sub
inc
xor
and
mov
es
test
inc
add
mov
add
jle
int
cs
movsb
jbe
dec
bound
xchg
push
inc
jb
push
adc
jmp
loop
sbb
jo
imul
dec
dec
xorb
sub
lahf
mov
out
sbb
push
lret
sub
aam
xchg
inc
into
rorb
je
es
pcmpgtw
jp
or
xor
imul
jae
xor
cmp
adc
xor
xchg
mov
pop
xchg
leave
scas
rorl
out
xor
stc
mov
outsb
xor
or
clc
cwtl
insb
jns
mov
pop
cmp
jne
adc
vmovlps
sub
jo
subl
push
sub
mov
or
cmpsl
cli
cmp
shll
sahf
pop
outsb
dec
dec
xor
shlb
wrmsr
inc
loopne
sub
jae
xor
lods
pop
stos
cmp
cmp
inc
jb
das
dec
shl
adc
mov
add
lea
nop
or
lods
js
mov
outsl
xchg
mov
aam
and
outsb
jae
insb
xor
xchg
movl
mov
cmp
out
xor
sub
jo
and
adc
xchg
dec
mov
add
dec
andb
mov
aaa
shl
push
dec
lds
js
fdivrs
fidivl
in
pop
add
cmc
xchg
ja
outsb
mov
jbe
push
out
aam
mov
push
xor
or
imul
fistl
fs
outsb
mov
mov
aaa
roll
jmp
mov
stos
adc
rcl
mov
xchg
pop
inc
lock
cmp
and
inc
adc
xor
imul
push
stos
sub
icebp
sub
int3
pop
out
push
adc
xchg
xor
arpl
fs
sbb
cltd
add
pop
scas
mov
aaa
mov
and
insl
aad
sub
rclb
xor
std
xchg
mov
movb
aaa
sub
inc
mov
es
das
xorb
inc
add
adc
scas
test
aas
or
push
sub
in
cmp
xchg
jno
dec
cli
cwtl
adc
divl
mov
xor
loope
nop
pop
testl
int3
pop
ret
enter
sub
popf
dec
xor
push
scas
cmp
mov
sahf
dec
mov
decl
les
mov
jno
mov
in
pop
leave
arpl
inc
int3
push
insl
sub
lods
push
shrb
xchg
outsb
cmp
ret
out
xchg
cmp
test
dec
nop
fidivrl
cmp
push
and
arpl
xchg
jnp
loop
lods
test
das
jp
cmp
mov
je
pop
shl
and
lods
jmp
cmp
pop
dec
adc
sub
fistpll
fcoml
data16
jle
shrb
sbb
add
xchg
rclb
sub
sub
or
rorb
lret
adc
pop
xchg
movsl
pusha
dec
xchg
das
mov
mov
cmp
add
lea
pop
ss
and
jp
push
fidivrl
jb
sbb
jge
sub
loop
push
mov
mov
mov
mov
out
in
pop
sub
adc
add
xchg
iret
mov
push
fndisi(8087
lods
imul
add
sbb
in
sbb
pop
mov
or
mov
push
push
shrb
push
add
jno
inc
xchg
es
mov
push
inc
lods
add
lock
nop
pop
xor
add
enter
add
inc
and
popa
xchg
mov
adc
lahf
iret
lods
inc
jne
icebp
cmpps
and
dec
inc
adc
sbb
sub
mov
cmpb
pushf
mov
xor
adc
sbb
fs
mov
sbb
cmp
xchg
xor
pop
mov
add
sub
lret
mov
je
xchg
cmpsl
jmp
addr16
mov
popa
jge
dec
test
lret
ret
and
out
push
je
std
lock
cmp
popa
mov
mov
sub
sub
mov
lea
pop
sbb
or
mov
adc
insl
push
test
cmpb
mov
out
mov
or
add
mov
movsl
jl
mov
popa
pop
push
jns
mov
add
shlb
and
xchg
cmp
mov
lds
push
test
pop
adc
iret
cs
xor
lea
gs
icebp
pop
insl
bsr
or
xchg
jno
repnz
fisubs
fsubl
jmp
data16
xor
mov
gs
mov
mov
call
adc
icebp
dec
stos
pop
xchg
cltd
iret
js
stos
dec
in
jbe
aaa
testb
hlt
cmp
mov
leave
clc
test
xor
adc
ds
and
fmull
das
push
mov
sub
sub
imul
test
scas
std
cmp
dec
pop
sbb
push
mov
bound
jge
adc
jne
add
pusha
aaa
fdivs
insb
in
into
dec
loop
lock
fs
jae
push
loop
adc
and
test
push
shlb
push
sub
in
push
imull
shlb
push
imul
xchg
daa
adc
pusha
cmp
pop
pusha
sti
push
mov
scas
popl
xorb
pop
scas
jno
aad
push
jge
movsl
ljmp
mov
sub
stc
pop
fsubrs
jb
and
xchg
jmp
inc
or
cmpsl
and
mov
add
fbld
mov
shl
in
jbe,pn
insl
or
inc
lea
sub
int
incb
adc
out
mov
outsl
insl
mov
cmpsb
mov
les
pop
push
pop
and
call
adc
leave
push
xchg
pop
adc
stos
addr16
xor
jmp
ret
lcall
xchg
or
mov
jo
icebp
xchg
out
adc
stos
repnz
or
mov
arpl
neg
adc
mov
or
out
or
and
cmp
jae
in
out
sti
unpckhps
sbb
in
scas
imul
stc
out
dec
cltd
inc
dec
mov
imul
add
push
insl
cwtl
daa
adc
push
or
jno
sti
in
inc
push
sarb
jmp
dec
into
mov
fdivrl
daa
push
aaa
adc
stc
xor
filds
push
mov
mov
lock
lcall
mov
jns
xor
out
subb
test
pop
rol
xor
ljmp
lods
jns
rcl
mov
jle
inc
es
mov
dec
jb
outsl
xor
push
mov
adc
shlb
sub
aaa
test
cmp
dec
inc
mov
in
scas
out
outsl
xlat
sub
push
pop
push
sub
push
jmp
add
adc
es
jo
dec
hlt
push
dec
pop
fstl
push
scas
lock
inc
lock
push
add
daa
es
sub
mov
loope
fldenv
jb
or
dec
nop
mov
sub
and
jmp
pusha
rclb
shl
push
add
stos
aas
add
pop
leave
xor
mov
rolb
sub
scas
mov
push
push
and
loop
add
rcr
xor
push
daa
outsb
mov
popf
cmpsl
xor
test
xadd
adc
and
std
divl
pushf
xor
lods
lods
cmc
jnp
shr
insb
xor
leave
das
fbstp
stos
adc
dec
jo
pop
adc
outsb
pop
lret
fs
and
movsl
dec
nop
and
popa
fisubrl
xchg
mov
push
out
cmc
ret
or
daa
sub
jo
adc
fildll
fld
xor
or
cmp
ljmp
in
mov
jo
push
or
cmp
lahf
ret
or
je
ss
repz
mov
mov
sbb
hlt
and
adc
dec
adc
xchg
push
jg
or
and
dec
jge
adc
mov
add
adc
divl
or
pop
jl
sbb
shrl
fs
jne
sub
xor
mov
daa
xchg
les
cs
das
das
pop
mov
add
xor
or
jecxz
xor
adc
mov
mov
cmp
push
xchg
inc
mov
hlt
or
inc
lret
sti
adc
iret
push
sub
mov
mov
sub
lock
rclb
icebp
and
fsubrs
fisubrl
mov
pop
adc
sub
jle
es
fs
pop
cltd
xchg
lock
fwait
stc
shr
add
mov
fadds
call
xor
jecxz
movsl
movsb
repz
push
arpl
popa
mov
or
pusha
addr16
and
jo
insb
jne
cld
neg
pop
jne
shll
sub
or
shrl
cmp
push
outsb
xor
test
popa
pop
xchg
mov
aad
mov
or
ds
mov
pop
fwait
loop
fs
add
or
movsb
imul
sub
out
inc
sub
in
or
add
xor
sbb
jmp
mov
pushf
mov
stos
mov
push
push
mov
cmp
imul
ret
cmp
sahf
dec
and
xchg
stc
stos
test
clc
les
pop
popa
faddp
mov
cmpsb
pop
testb
test
or
in
leave
rolb
lahf
lcall
inc
xor
add
cmp
les
xor
sbb
inc
into
push
inc
mov
adc
push
pop
insl
subb
enter
aad
adc
inc
cltd
loope
out
mov
inc
cmpsl
in
mov
and
inc
pop
mov
pop
sbb
jo,pn
icebp
dec
mov
mov
adc
and
shll
leave
jle
cmpsb
push
sub
and
mov
dec
pop
data16
pusha
cwtl
pop
xchg
pop
cmp
pop
popf
data16
mov
addr16
lret
es
sbb
pop
aas
xlat
ss
scas
mov
or
shlb
and
pop
sub
in
xchg
enter
mov
pop
dec
out
cmp
leave
pusha
lahf
int
xor
adc
lret
filds
dec
leave
mov
sbb
xchg
or
movsb
xchg
insl
add
movsl
sub
inc
fsub
add
add
popa
jmp
add
mov
rcrl
inc
outsb
cmpsl
stc
xchg
pop
loope
pushf
inc
jno
lds
insb
mov
les
mov
xor
aas
and
or
lods
adcl
jno
mov
xchg
adcl
stos
push
iretw
lahf
aam
or
mov
arpl
push
mov
cli
cmpl
scas
adc
xchg
loop
jle
fstps
push
inc
lret
in
mov
dec
nop
lods
popa
cwtl
lcall
aad
mov
fdivp
xchg
mov
shlb
stos
stos
popf
call
inc
fmull
int
cwtl
or
jge
and
mov
ret
in
pop
loopne
sub
or
sub
fistps
sbb
scas
std
adc
mov
fsubp
pop
cmpsl
mov
mov
popa
loop
daa
test
ljmp
rclb
lahf
adc
dec
insl
sub
aaa
mov
add
aad
pop
jno
insw
sbb
pop
xchg
fcompl
jp
dec
pusha
stc
mov
xor
outsb
scas
cmp
lods
sub
dec
cmpsb
xchg
pop
nop
or
aam
inc
cwtl
mov
xor
mov
je
test
pop
mov
mov
add
cmpsl
stos
loop
adc
jo
xor
mov
cmp
sub
ds
xor
stos
jns
nop
push
pop
cs
sub
dec
inc
shr
jo
mov
dec
xor
jne
decb
dec
in
xchg
scas
xor
and
lods
rolb
xchg
loop
push
xor
outsl
loopne
out
sub
arpl
cmpsb
push
out
xor
or
sub
dec
adc
cmp
mov
add
add
dec
insb
jb
mov
ss
xor
push
xor
xchg
and
rolb
mov
adc
push
out
popa
push
jo
scas
cmp
in
mov
cmp
push
xor
xchg
stc
cmp
xor
iret
fisubrl
xchg
jae
and
xor
xchg
xor
test
mov
inc
mov
jb
sub
out
sub
xor
aad
ret
mov
or
das
xchg
andl
std
pushf
jle
adc
push
jb
cmp
xor
test
add
lds
imul
sbb
lcall
les
sub
das
fsts
xor
loopne
ficomps
or
xor
test
dec
out
xor
cvtps2pi
or
mov
movsl
aaa
call
or
adc
aaa
xchg
or
cwtl
cwtl
adc
imul
dec
xor
into
cld
int
dec
mov
xor
xor
jae
pop
pop
mov
inc
mov
mov
mov
fwait
pop
jae
sbb
jbe
push
and
jo
xor
sub
adc
lahf
cmp
inc
mov
imul
add
shll
xor
loopne
xchg
push
ret
aaa
and
adc
xchg
icebp
jo
shlb
cmp
xor
call
lods
imul
test
or
stos
aas
fistpl
test
sub
stos
test
push
dec
js
sahf
xchg
iret
jecxz
or
xchg
stos
jb
data16
xor
out
repnz
or
cld
push
rcr
mov
cmc
js
and
xor
lods
add
xor
mov
cmp
adc
leave
in
mov
mov
xchg
pop
xor
sub
sbb
scas
sub
mov
pop
adc
dec
lds
sbb
bound
addl
cmp
xor
nop
xchg
cltd
mov
ljmp
add
idivl
aas
mov
and
jmp
pop
xor
mov
and
repz
mov
mov
fwait
popa
aam
xor
pop
ss
mov
sub
bound
in
repnz
jle
mov
mov
mov
inc
mov
jg
fldl
xor
or
lcall
loop
adcl
scas
xchg
fs
aaa
sti
mov
lahf
mov
xor
add
dec
jmp
push
inc
hlt
xor
cmp
pop
adc
dec
xorl
mov
nop
push
repz
rcll
xchg
sub
sar
mov
sub
enter
fisttps
insb
in
xchg
push
lds
int
xchg
mov
sub
js
icebp
roll
sbb
les
fnstcw
aaa
shlb
daa
mulb
xor
loop
xor
ret
xor
and
cwtl
dec
or
push
xor
mov
repz
mov
mov
jnp
xor
xor
xor
pop
fcomps
xor
pop
test
xor
cmp
ret
adc
aas
add
dec
fildl
mov
test
aam
rcrl
negl
xchg
push
xor
mov
nop
rcr
inc
in
out
xor
cmp
divb
push
xchg
push
test
nop
pop
mov
loope
xor
dec
cmp
dec
xor
pop
repz
into
xchg
push
in
xor
pop
or
pop
mov
lea
xor
jno
cmpsl
xor
hlt
mov
ret
adc
out
arpl
test
out
mov
icebp
adc
adc
frstor
loopne
adc
xor
xchg
ss
adc
lahf
ljmp
ret
enter
aad
xor
xchg
lret
and
jo
xor
out
jl
jnp
fbstp
pusha
fimuls
es
sub
xor
cmp
push
xor
aad
cli
enter
xor
inc
add
movsb
mov
mov
hlt
xor
adc
adc
dec
sbbl
push
pushf
fidivl
fstps
fs
hlt
pop
in
outsl
xor
addr16
cmp
push
ljmp
mov
xchg
popa
loope
andb
lods
mov
pushl
lds
out
mov
push
mov
xor
imul
and
ss
and
cmp
fldenv
xchg
out
loopne
subl
add
jbe
inc
cmp
mov
mov
scas
imul
mov
xor
sti
cmpsl
inc
into
lcall
scas
pushf
movsb
data16
add
push
xor
daa
sbb
rolb
aaa
pop
jae
bswap
mov
sbb
jnp
das
adc
cmp
adc
stos
jmp
mov
iret
pop
ret
dec
xor
enter
arpl
cmp
fidivl
dec
icebp
jb
mov
pop
insb
in
mov
clc
pop
fwait
adc
xchg
dec
jge
push
inc
hlt
xor
enter
cmpl
push
mov
scas
push
fimull
push
inc
sbb
ljmp
imul
lods
out
xchg
bound
sar
xor
pop
ss
xor
lret
xor
aaa
jge
mov
loope
aam
pushf
fisttpl
sbb
fwait
dec
sbb
mov
pop
sti
andl
jbe
popl
repz
aad
push
aaa
and
pop
repnz
test
pusha
add
xor
lret
inc
xchg
push
push
xor
adc
inc
xor
aaa
pop
pop
xor
sub
int
sti
and
xor
incl
jae
ja
sbb
shlb
stc
cmp
xor
xchg
xor
out
add
xor
gs
xor
mov
clc
xchg
pop
sub
pop
data16
fstpl
decb
mov
mov
add
sub
add
mov
imul
sbb
and
xor
and
adc
dec
mov
xor
push
jp
lahf
lds
pop
in
adc
pop
leave
xlat
jb
lods
dec
out
bound
mov
sbb
dec
in
std
and
inc
cmp
push
xchg
scas
xor
xorb
das
hlt
into
leave
pop
stos
cmp
iret
mov
inc
test
lret
xor
jno
orl
mov
loop
mov
push
or
xor
and
call
shlb
fistl
adc
xor
adc
loopne
push
cmc
inc
add
imul
cmp
fcomps
or
pop
mov
mov
adcl
cld
lcall
ds
mov
in
popf
jns
xchg
xlat
xor
push
adc
hlt
int3
movsb
call
pop
sahf
dec
add
es
xor
sub
pop
fildll
popf
or
push
xor
push
dec
fcompl
adc
sbb
and
or
add
addl
sub
je
push
mov
enter
xchg
sbb
aad
xor
lret
lret
xor
sbb
movsl
mov
push
clc
in
nop/reserved
cmp
jo
popf
push
jo
add
dec
cmpsl
fsubs
stos
push
mov
and
push
fdivs
loope
xor
dec
in
xor
jmp
cli
in
sbb
adc
jb
imul
into
aaa
jnp
cmpsb
jno
hlt
pop
fdiv
imul
lods
cmp
stos
scas
pushl
mov
aad
and
and
sbb
xorl
fstpt
pop
fdivl
pop
adc
xchg
add
xor
fimull
or
add
xor
std
test
pusha
xor
inc
inc
test
mov
stos
loop
fistl
jp
pop
xor
not
int3
sub
jecxz
pushf
dec
fcmovnbe
iret
enter
sbb
lods
jne
ja
mov
out
popa
jecxz
xor
sbb
lret
fwait
repnz
mov
cmp
and
in
pop
xchg
mov
jle
mov
repz
das
mov
xor
push
or
push
push
loop
inc
ljmp
mov
fcomps
push
sub
cld
sub
aaa
mov
jne
sarb
xor
add
mov
inc
sbb
xor
iret
mov
and
test
lret
jge
and
xor
jns
push
das
fs
pop
fcompl
insl
jno
scas
xor
inc
fistpll
aaa
pop
sbb
mov
push
fs
cmpsb
sub
adc
daa
in
xor
cmp
push
pushf
xor
inc
std
mov
xor
in
dec
popf
pop
out
xor
dec
scas
je
xchg
mov
fistpll
push
cmp
xor
ja
test
and
addr16
inc
lock
dec
pop
xor
lret
mov
or
jecxz
and
pop
cmp
aaa
test
repz
scas
adc
dec
xor
mov
mov
mov
cmp
jb
or
and
mov
pop
call
pushf
icebp
adc
push
aas
bound
inc
mov
push
ret
cmp
inc
mov
xchg
or
and
aaa
mov
mov
clc
adc
xchg
and
and
je,pt
in
fs
push
xchg
mov
nop
mov
xor
xor
jo
out
xor
inc
cmp
push
lahf
mov
mov
mov
js
nop
imul
xor
adc
pop
pusha
sbb
adc
rcrl
mov
xor
cmp
loop
rorb
test
adc
addr16
xchg
test
fs
mov
mov
sbb
xchg
xchg
adc
flds
push
jne
stos
mov
xchg
mov
xlat
push
aam
jl
mov
jbe
incb
xchg
fmuls
scas
fwait
sbb
daa
push
andb
pusha
xchg
push
stos
cmp
testb
pusha
mov
or
sbb
repz
jle
imul
mov
cmpsb
cmp
leave
inc
xchg
pop
mull
dec
cli
adc
mov
add
ss
icebp
adc
adc
insl
pop
leave
mov
xor
adc
fisubl
and
ret
add
and
mov
inc
popf
cmpsl
shrl
mov
aas
js
rdtsc
loope
insl
subl
dec
jle
std
jbe
cld
leave
sub
in
aad
cltd
xor
imul
and
adc
stc
bnd
xchg
test
lea
test
push
xor
xor
sti
out
inc
xor
data16
cwtl
lock
mov
xchg
adc
xor
adc
fsubp
mov
rcrb
cmpsb
insl
inc
mov
xor
adc
iret
jne
cmp
or
jo
sbb
xlat
out
shrl
mov
xor
jo
mov
inc
mov
add
push
leave
outsb
imul
mov
icebp
pop
dec
insb
xor
pop
mov
jns
adc
rcrb
gs
push
subb
fs
xchg
or
xor
fimuls
scas
xorb
repnz
lret
xor
xor
dec
lods
inc
xor
or
je
and
push
xor
dec
ret
aaa
jmp
loop
push
jge
xor
mov
cmp
pop
and
popf
fnstcw
enter
mov
das
fdivs
incl
sbb
dec
ds
fidivs
pop
xor
add
mov
stos
aaa
ljmp
dec
or
adc
push
mov
xor
test
subb
push
mov
ss
std
popa
push
sub
dec
cwtl
pusha
mov
rcll
bound
scas
inc
insb
xchg
or
rclb
sub
mov
mov
iret
int
push
or
int
pop
push
xor
and
xor
mov
jge
fbstp
adc
icebp
add
pop
xchg
dec
xor
pop
outsb
mov
cmp
lea
xor
test
jl
xor
shr
lods
sahf
cmp
xor
mov
xor
icebp
mov
stos
xor
mov
dec
mov
xchg
ret
out
sbb
add
add
pushl
jl
cmp
dec
xchg
sub
jo
into
mov
mov
xor
dec
mov
pop
xchg
pushf
push
sub
stos
jp
xor
mov
int3
rolb
arpl
xlat
or
xor
mov
add
pop
xchg
ss
adc
xor
push
mov
push
cmp
out
cmp
and
xor
jp
ret
scas
jge
pop
cmp
pop
out
jbe
mov
adc
add
in
adc
lahf
xchg
jo
neg
int
xlat
movsb
pushf
rdtsc
mov
into
push
adc
cmp
mov
xor
mov
aaa
dec
jo
xor
cmp
xor
pop
mov
mov
and
and
dec
stos
sub
mov
popf
shll
xor
mov
dec
push
dec
xor
xor
xor
pop
sar
loop
imul
inc
push
and
pop
xchg
lods
dec
mov
pushf
cmp
add
fcoml
imul
push
lcall
pop
aas
xor
not
dec
out
cmp
jnp
leave
ret
lcall
dec
pusha
aad
sbb
sbb
daa
int3
jo
sub
mov
lods
sub
iret
pop
nop
adc
sbb
xchg
int
cmp
ficoms
jp
out
jl
mov
sbb
loop
or
push
add
push
cmp
sbb
gs
int
pop
dec
lds
add
push
int
sub
test
and
aaa
sbb
mov
test
jne
dec
inc
sub
test
hlt
repz
cmp
push
aas
lock
mov
test
sbb
fwait
jl
xchg
dec
adc
dec
imul
loope
mov
loope
arpl
xor
shll
push
or
movl
movsb
sub
mov
jo
popf
cltd
mov
jno
repz
mov
scas
inc
mov
pop
loope
aad
popf
adc
sub
repz
clc
inc
pop
adc
xor
inc
mov
xor
cmp
cmp
dec
pop
stc
xchg
inc
mov
or
leave
adcl
jno,pn
cmp
and
shlb
jmp
aaa
xlat
stos
ret
movsb
lea
jge
outsb
mov
xor
adc
cltd
add
mov
jbe
movsb
sbb
or
sbb
jp
push
mov
push
faddl
sbb
push
xchg
mov
outsb
lret
and
jmp
mov
fisttpl
call
xchg
adc
add
arpl
push
mov
pushf
rcr
hlt
insl
ss
out
mov
dec
arpl
jb
mov
hlt
rcrl
sahf
sub
outsb
xchg
loope
and
call
xchg
mov
subl
imul
sbb
sub
in
inc
pop
movsb
lret
icebp
dec
scas
xchg
mov
andb
cmc
mov
cltd
add
xor
pop
add
mov
fwait
jo
jg
jmp
push
shlb
mov
shl
int
xor
adc
mov
mov
jnp
push
cmp
xor
mov
mov
jmp
dec
jmp
xor
xchg
jmp
push
push
and
incl
repnz
push
clc
push
shlb
xor
adc
mov
xor
cltd
add
sub
mov
xor
test
push
sti
jbe
mov
xor
mov
icebp
repz
jmp
xchg
sbb
and
fisubrs
mov
movsl
pusha
add
xlat
dec
sub
push
cmpsb
mov
std
aad
pop
pop
jle
dec
sbb
xchg
fs
fiadds
pop
inc
mov
imul
add
addl
loopne
sbb
jae
mov
dec
shlb
sbb
cltd
push
dec
or
xorl
pop
fnstsw
inc
test
mov
pop
mov
cwtl
out
dec
push
push
xchg
pop
sbb
add
mov
mov
popa
sbb
test
outsl
pusha
cmp
les
fisttpll
mov
scas
xlat
lods
imul
insl
sub
data16
enter
pop
test
mov
pop
movsb
xchg
std
and
add
pop
idivl
xor
dec
lret
popa
xor
adc
data16
outsl
pop
icebp
fsubs
mov
add
xchg
jmp
out
push
sub
xchg
sbb
pushf
andb
addr16
pop
xor
or
and
and
fadds
xor
mov
mov
sbb
mov
daa
and
and
loope
outsl
sub
or
aad
sub
mov
das
out
dec
rolb
pusha
push
scas
hlt
mov
test
push
mov
sbb
push
ljmp
pushf
lods
or
pop
fdiv
push
bound
or
aam
cmp
test
lods
xor
xchg
pusha
in
cmp
mov
mull
dec
int
ss
stc
ss
and
cld
xor
xor
pop
mov
cmp
mov
es
aaa
pop
adc
push
mov
iret
daa
sbb
mov
test
xchg
push
sub
sub
rcrl
cwtl
sbb
cmp
xor
popf
lea
pop
movsb
xor
movsl
jle
xor
pushf
shlb
xor
rorb
mov
xor
ret
stc
sarl
add
rcr
jbe
movsb
inc
ja
cwtl
lahf
jg
push
xor
into
jp
lods
add
pop
cmp
lahf
insl
xchg
imul
call
je,pt
test
loope
sbb
cltd
jp
mov
jae
xor
add
cmc
add
icebp
sub
pop
jle
hlt
fidivrs
dec
out
xor
sbb
xchg
ficompl
xor
or
scas
dec
stos
outsb
mov
xor
inc
shl
je
scas
xor
pop
sbb
xchg
insb
inc
popf
addr16
push
xor
xor
sub
xchg
push
xlat
loopne
icebp
lock
ss
in
loop
cmpb
je
test
adc
cmp
xor
and
inc
mov
xor
mov
xchg
lahf
and
out
jbe
mov
imul
xchg
xor
out
movsl
push
mov
fistpll
push
repz
sti
sub
sbbb
addl
jns
mov
cltd
mov
lds
xor
add
add
and
lock
jmp
jns
ret
sbb
jp
pop
and
jbe
lret
add
fstpt
xor
or
sub
xor
push
in
push
mov
or
ja
insb
xor
aas
sbb
icebp
lods
rolb
push
insb
pop
xor
nop
arpl
cmp
xchg
inc
rorl
and
xchg
mov
test
test
loope
out
push
pop
cli
mov
mov
sbb
xchg
xor
movsb
cmpsl
lods
xor
aas
in
add
xor
sbb
and
mov
add
xor
dec
into
das
xor
add
mov
out
stc
mov
dec
test
xchg
int3
lock
mov
adc
xor
mov
outsl
xchg
inc
mov
aad
push
mov
fadds
mov
dec
lds
sti
dec
loopne
es
and
push
or
adc
mov
sbb
sbb
out
sub
push
xor
fiadds
pop
ds
xor
out
fdivl
out
idivb
xchg
imul
jge
out
rdtsc
jmp
and
xchg
lods
test
xor
pop
arpl
mov
imul
push
jo
sub
jbe
outsb
imul
and
mov
xchg
rcrb
lahf
ds
push
and
mov
orl
testl
xor
addr16
sbb
sarl
or
xor
andb
divl
xchg
imul
insb
xor
leave
pop
in
and
mov
push
jne
shlb
xor
and
repnz
stos
out
sub
and
xchg
je
rcrl
or
mov
mov
imul
pushf
mov
mov
push
jns
xor
inc
push
and
repnz
aam
loopne
sbb
sub
lret
repz
ljmp
pop
pop
mov
push
fcomps
shr
icebp
xor
mov
mov
pop
fbstp
test
pop
jmp
mov
mov
sbb
xchg
insb
aaa
std
mov
es
and
movl
sub
sub
push
clc
and
pop
mov
xor
in
je
jge
xor
int
xor
mov
pop
jg
sub
inc
or
inc
iret
cli
lods
push
fsub
add
mov
or
aas
mov
inc
dec
sbb
lret
rolb
test
loopne
hlt
in
je
scas
fdivl
mov
and
adc
lods
int
jp
xor
or
lds
test
ret
repnz
daa
xor
inc
fwait
xor
mov
mov
js
popa
repz
xor
sbb
pop
enter
in
sub
xor
push
xchg
mov
stc
jne
mov
fsubs
adc
push
cli
pop
std
stos
inc
xlat
mov
xor
pushl
stos
mov
xor
sbb
mov
and
jno
jecxz
imul
mov
mov
and
adc
adc
xor
iret
adc
js
mov
sub
loop
xor
add
jecxz
xor
sbb
hlt
xor
mov
xor
les
sbb
xlat
hlt
xchg
xor
call
sbb
icebp
fstpt
lret
das
xlat
aad
mov
aas
xchg
push
adc
mov
cmp
clc
xchg
cwtl
loope
jg
cmpsl
xor
test
roll
add
cmp
mov
mov
xor
pusha
les
xchg
push
xor
cwtl
xchg
jge
inc
mov
xor
pop
lret
out
test
cld
mov
scas
cmovb
sbb
xchg
jo
push
cmp
rcll
jle
ss
scas
imul
push
mov
pop
inc
cs
cmpsl
xor
push
mov
xor
bswap
in
sbb
inc
fwait
pop
xor
and
or
call
in
aaa
push
hlt
and
add
dec
add
pop
ds
sub
popa
imul
or
mov
ficoms
xor
imul
cmp
sbb
js
je
push
mov
movsb
push
xchg
push
push
lcall
jo
ds
xchg
insl
lea
xor
sub
imul
test
insb
and
loope
sub
ret
add
pop
xor
push
cmp
xchg
pusha
mov
xchg
loope
roll
add
jb
aas
xor
mov
ja
js
mov
repz
pusha
mov
repnz
bound
loope
sbb
clc
nop
cli
mov
xchg
insb
adc
rorl
mov
shlb
mov
cwtl
aaa
in
push
add
push
lods
jo
outsb
xchg
adc
xor
jl
mov
repz
cmp
inc
and
mov
cwtl
and
mov
ficomps
mov
or
scas
jmp
mov
test
dec
int3
or
in
lods
repz
jmp
sub
mov
mov
jle
decl
xchg
xchg
ss
lds
push
in
lret
xor
push
sub
popf
xor
xor
fcmovnb
cs
enter
mov
sti
repnz
mov
or
xchg
xor
fbstp
fs
xor
mov
mov
ficoml
adc
daa
shl
scas
int3
xor
mov
fs
mov
xor
inc
push
adc
fldl
sarl
gs
pop
jg
inc
pop
aaa
or
adc
pop
mov
lret
and
icebp
mov
jecxz
cmpsl
xor
rclb
pop
dec
test
mov
in
xchg
pop
mov
push
aas
xor
cmpsl
gs
lret
sub
loope
adc
lock
mov
sub
xor
sbb
cli
lcall
sbb
rol
xor
inc
mov
mov
sub
sub
mov
push
testb
js
jne
lret
sbb
adc
dec
xor
ficompl
dec
adc
jecxz
jnp
cmp
sbb
cmpsb
mov
adc
mov
dec
loop
mov
das
push
cmpsb
xchg
mov
and
icebp
lcall
je
and
or
xchg
push
xchg
push
cwtl
dec
mov
sbb
adc
mov
jmp
js
nop
in
mov
shll
ljmp
pusha
lret
imul
mov
cli
mov
pop
loope
fisttpl
dec
insb
cmp
popf
dec
mov
sub
out
inc
stc
dec
inc
es
jns
enter
fisubrs
out
lds
loope
jle
push
jb
roll
sbb
or
inc
test
sbb
notl
outsb
add
pushf
xor
enter
and
xor
jno
push
or
jnp
jno
lock
add
push
and
mov
fisubrs
mov
ljmp
aam
mov
adc
mov
xor
cmp
push
xchg
sbbb
fcomi
pusha
incb
or
mull
fimull
add
jno
dec
add
sub
sbb
dec
mov
pop
xor
mov
addl
std
inc
push
fcomip
test
add
pop
or
rcr
dec
test
xor
pop
lods
cmp
inc
and
lcall
sbb
or
mov
out
sub
xchg
xor
adc
es
fs
adc
dec
fwait
xchg
push
sub
xor
stos
int
into
xchg
jns
js
in
leave
sub
mov
xor
jne
stc
dec
xor
inc
cmpsb
pop
inc
out
jno
cltd
dec
ljmp
push
xor
mov
js
out
mov
lret
cli
jmp
insl
xor
lahf
sbb
push
mov
xor
push
popf
not
int
mov
cmp
cs
sub
movsb
out
es
out
add
pop
rolb
rol
xor
xor
jge
xor
mov
push
loope
push
mov
mov
dec
jle
xor
in
into
push
stos
xor
lret
add
push
mov
cwtl
xor
fistps
fdivs
mov
xchg
xor
sub
maskmovq
idivl
adc
test
push
jmp
fdivs
mov
dec
mov
dec
xlat
xor
mov
in
xor
adc
stos
clc
lods
sub
sbb
cmp
cmp
scas
xor
stos
ljmp
xor
jno
xor
xchg
push
ror
push
dec
and
out
mov
or
fsub
push
sbb
inc
sbb
mov
loope
jmp
fldt
jbe
das
or
adc
mov
xor
outsl
lret
adc
push
cltd
sub
dec
pusha
cmp
jmp
nop
repnz
mov
jmp
push
xchg
pop
mov
xchg
rcll
in
les
call
push
mov
pop
aad
pop
std
mov
sti
scas
dec
mov
push
sub
pop
xor
mov
int3
out
sub
or
xor
iret
jl
mov
ret
lods
stos
out
aaa
jnp
and
fwait
repnz
mov
test
sahf
and
lods
add
fnsave
inc
dec
xor
popa
cmpsb
ds
push
ret
roll
xor
shrb
rcrl
xor
in
outsl
inc
loop
nop
xor
popa
inc
mov
mov
stc
xor
repz
dec
je
mov
mov
xor
stos
lock
test
adc
fs
xchg
ds
call
leave
mov
loopne
mov
pop
jae
or
xor
or
dec
ss
lods
jl
pop
loope
sub
or
add
sub
gs
xchg
es
data16
dec
mov
lods
xchg
sahf
and
jb
ja
sub
inc
or
fisttpl
xor
lret
xor
aad
outsl
jb
push
incb
xor
jge
add
xor
cli
filds
dec
xchg
and
ljmp
sub
shll
sti
ljmp
dec
out
je
in
aaa
and
sub
jecxz
pop
mov
into
cmpsl
sbb
add
sbb
ffreep
adc
cmp
shl
cmc
cmp
ret
xor
lods
dec
es
outsb
jle
sub
sub
push
fbld
sub
mov
pop
iret
adc
out
test
int3
sbb
fidivl
lock
xchg
jbe
fwait
aas
cmp
xchg
repnz
pop
aas
xor
outsb
lahf
shlb
and
icebp
pop
ret
xor
and
scas
cld
imul
lret
xlat
daa
js
push
xor
pop
xor
enter
mov
mov
push
xor
xchg
adc
sbb
jns
mov
movsb
and
inc
dec
sti
push
xor
int3
cli
xor
jno
sbb
into
sbb
imul
adc
mov
jg
mov
and
jge
fdivl
icebp
ja
inc
xchg
cmp
xchg
rcrb
lret
ss
sub
pushl
sbb
pop
xor
stc
jae
jo
mov
xorb
jns
movsb
xchg
inc
adc
out
dec
scas
xor
mov
adc
cld
sti
daa
xor
insb
mov
pop
loop
and
sbb
insl
orb
or
xor
mov
push
cmc
sbb
ret
push
shrl
xchg
cli
dec
mov
or
lcall
jmp
adc
add
pop
test
out
inc
pushf
cmp
xor
pop
or
mov
pusha
sub
push
lret
hlt
fnsave
mov
inc
sahf
pusha
lock
mov
mov
jmp
stos
xchg
push
xor
adc
cmc
xor
mov
call
pop
divl
add
mov
icebp
jl
shrl
movsl
mov
and
xor
adcb
cmc
sub
add
adc
jecxz
cs
xorl
sbb
cli
les
push
stos
xor
cmp
xchg
add
rcll
mov
add
in
sarb
xor
xor
insb
jns
add
mov
xchg
adc
aaa
pop
mov
in
jns
int3
and
jg
movsl
mov
jno
neg
adc
xor
stc
addb
pop
xor
adc
mov
xor
fbld
xor
test
out
in
inc
adcb
inc
mov
adc
xor
mov
pop
push
dec
mov
loopne
lret
popf
orl
mov
sub
add
push
add
cmp
or
sub
stos
loopne
hlt
stc
mov
jnp
add
mov
sub
pop
sub
add
mov
mov
dec
jnp
iret
xor
mov
mov
lea
push
lcall
imul
clc
cmp
mov
push
int
jmp
or
push
bound
lds
int3
cmpsl
roll
imul
loopne
bound
shlb
push
popa
mov
inc
lods
inc
mov
adc
jns
or
scas
int
mov
sar
mov
sbbb
lods
pop
jae
dec
xor
outsb
sahf
dec
test
mov
jg
xor
pop
xor
ljmp
add
das
mov
fcom
lret
mov
lahf
mov
inc
xor
aaa
icebp
or
sbb
mov
pop
cltd
lahf
dec
dec
sti
xor
dec
xchg
test
or
xor
inc
aad
jno
lods
mov
and
jno
lcall
xor
mov
adc
das
aam
popa
in
mov
inc
inc
or
xchg
xor
lret
loopne
adc
xor
mov
out
insb
push
ror
imul
dec
dec
pop
jno
aaa
clc
frstor
fisubs
mov
xchg
mov
aaa
pop
xchg
cmp
testb
push
gs
out
pop
lret
xor
jns
stos
jl
jb
fdivrl
push
loope
rolb
sub
pop
pop
adc
xchg
and
add
adc
jo
pop
mov
jle
push
xorl
xor
xchg
xor
pusha
rorl
pop
cmp
and
repnz
aaa
sti
jo
aas
pushf
inc
jns
mov
jmp
in
push
ds
inc
bound
and
pop
repz
stc
xor
inc
jl
mov
popa
lds
or
call
movsb
std
dec
xor
inc
cmpsl
mov
jge
xchg
sbb
jo
mov
int
xor
push
push
inc
loope
mov
xor
xor
pop
lret
jl
out
aad
cmp
add
lcall
fsub
lock
adc
mov
iret
xchg
bound
nop
mov
dec
mov
add
inc
cmpsl
movsl
dec
mov
xchg
xor
loope
adc
add
push
test
push
jl
dec
repz
and
push
mov
mov
dec
jo
mov
popa
adc
cmpl
or
out
sbb
xchg
mov
das
push
popf
or
jecxz
mov
into
dec
sbb
jl
mov
add
or
sti
ljmp
mov
push
sub
dec
std
pop
pop
jns
decl
xchg
jnp
cwtl
test
mov
push
and
call
jns
inc
rcl
or
fstpt
stos
jbe
outsl
es
sub
jecxz
test
cmp
shlb
jae
mov
cmp
push
fdivrl
popfw
push
clc
sbb
jbe
lea
inc
xorb
rcll
shl
dec
or
aas
xor
mov
cs
scas
lods
rcl
repnz
roll
mov
pusha
in
cmp
notb
enter
stos
sarb
addb
data16
pop
mov
cmpsb
add
popf
mov
lret
jge
aad
xor
push
pusha
cmp
xchg
andb
mov
add
js
adc
test
xorl
cmp
data16
add
adc
xchg
rclb
mov
pop
jmp
mov
mov
adc
adc
es
cmp
inc
int
and
adc
inc
test
sub
and
or
das
popa
push
dec
pop
or
and
pop
cwtl
ljmp
addr16
pop
jmp
inc
aam
push
add
or
push
pop
xor
adc
aaa
test
andb
imul
mov
add
xor
or
lret
rcl
pusha
fistpl
lock
push
pop
cmpsl
push
ljmp
inc
sub
pusha
testl
and
cld
mov
and
pop
cmpsb
jne
fdivp
and
aas
dec
je
test
cmc
sbb
mov
repnz
sysret
cmp
cmpsl
lock
pop
sbb
imul
push
xchg
mov
push
add
adc
fcomps
push
es
movsb
aam
and
iret
loop
iret
push
lods
sub
adc
hlt
daa
sub
mov
inc
stos
jns
ficoml
int3
loop
adc
and
jnp
arpl
sahf
push
sub
loop
mov
sbb
inc
popa
emms
cmc
aaa
xor
jo
pop
lock
in
xor
add
sub
inc
xchg
mov
push
call
loope
mov
rcr
xchg
ds
insl
xor
movsb
cmp
push
sahf
out
and
inc
fstps
sub
cmp
adc
and
sbb
push
or
pop
arpl
scas
mov
lock
cli
push
sbb
xor
mov
pop
pop
cmpsb
fisubrl
loopne
in
loope
and
and
xchg
roll
aam
or
jne
push
or
xor
fdiv
mov
mov
add
call
lds
fisubl
cwtl
aaa
adc
sub
jno
and
jbe
loopne
sarb
in
and
fsubrl
add
add
jmp
adc
enter
daa
jo
sar
pop
mov
xor
add
dec
xchg
int3
pop
int
adc
fldenv
aam
cli
in
mov
mov
lock
pop
pushf
sub
push
sub
int
pop
mov
faddl
mov
shl
inc
or
jno
jp
fstl
movsb
dec
inc
shl
pop
pop
inc
outsb
call
movsb
decb
mov
sbb
cmc
or
xor
mov
aaa
pop
xlat
shll
adc
loopne
mov
fwait
jb
lock
shrl
lcall
sub
lock
mov
jp
pop
sub
mov
dec
hlt
iret
mov
int3
and
mov
sarb
ljmp
and
jp
pop
outsl
sub
mov
shrl
notb
arpl
inc
xchg
xor
push
inc
fdiv
cmpsl
lds
lret
push
add
ja
adcl
outsl
js
mov
sbb
lahf
aaa
cld
popa
pop
or
sub
clc
cmpsl
xchg
movl
fidivs
and
jg
fcoms
sbb
in
lahf
inc
imul
xor
sub
popf
xor
je
mov
jne
mov
int
or
mov
aas
clc
insb
xlat
pop
rcr
xor
lahf
cwtl
cmp
dec
cmp
stc
inc
xor
inc
mov
mov
push
pop
xor
popa
adc
imul
inc
sub
jnp
jae
or
das
add
lock
cmp
insb
push
adc
cmp
lock
mov
dec
pop
imul
shrl
hlt
xchg
sub
mov
adc
sbb
and
xchg
ljmp
hlt
mov
mov
jge
xor
orl
xchg
and
cwtl
mov
fwait
scas
andb
push
inc
add
icebp
cs
ljmp
fdivs
push
lret
xor
sbb
outsb
inc
fwait
cmp
xchg
add
daa
cmp
cld
mov
loope
mov
adc
popf
sub
dec
push
data16
jnp
jno
push
pop
or
scas
add
inc
jg
out
adc
stc
mov
ja
enter
xchg
lahf
or
mov
sbb
jbe
add
pop
adc
lock
inc
mov
sub
add
mov
or
test
movsb
jbe
cltd
jno
lcall
loopne
add
dec
xor
mov
das
push
adc
and
dec
gs
adc
mov
js
cld
push
fldenv
ss
shlb
lds
pop
push
push
jp
jne
mov
or
pushf
fcmovnb
test
sub
aas
pusha
or
push
jne
mov
scas
adc
sub
dec
inc
cmp
imul
mov
add
mov
and
xchg
stos
mov
outsl
rcrb
movsb
jns
cmp
shlb
ss
xor
arpl
add
sarb
cmpsl
sti
sbb
mov
push
repz
scas
xor
mov
cmpsb
pop
or
or
test
dec
js
daa
test
sbb
lock
add
test
outsl
adc
xor
repz
in
fnsave
mov
gs
jnp
repnz
imul
sbb
ret
out
fwait
add
sbbb
lret
fimull
out
jae
std
cmpsb
inc
mov
lcall
imul
lret
cmpl
mov
mov
mov
sub
adc
xchg
sub
data16
mov
decb
cli
lds
push
mov
mov
lcall
or
mov
fistpll
mov
sub
roll
cmp
arpl
xchg
xchg
and
loope
movsb
fistl
sub
xor
out
and
or
call
add
xor
movsb
dec
push
inc
xchg
push
cwtl
jb
xor
mov
xchg
sbb
mov
mov
add
stos
inc
adc
push
push
outsb
lds
sti
xor
jg
inc
daa
arpl
xor
jecxz
mov
leave
ljmp
sub
fidivl
xchg
imul
outsb
pusha
mov
mov
cmpsl
add
mov
jecxz
sub
push
movsb
pop
xor
aaa
cmp
add
aad
cmpsb
sub
adc
xlat
or
mov
xor
adc
push
push
aam
xor
mov
ds
mov
out
adc
stc
xor
sub
outsl
lods
xor
adc
int
adc
fdivl
or
popf
mov
pop
call
sub
xchg
and
xchg
repnz
loop
xor
or
cmp
push
jo
lods
sub
fsubl
push
test
mov
xor
sub
adcb
sbb
and
push
inc
xor
dec
in
add
mov
adc
xor
push
in
pop
xchg
xor
pop
fcomps
fdivrp
movsb
mov
in
jb
sub
xor
fdivrl
rcrb
push
xchg
sti
hlt
xor
out
stos
dec
xor
ss
scas
push
cld
xor
lds
xor
or
shr
mov
in
ret
mov
and
incl
rcl
insb
mov
setno
xchg
push
dec
testb
push
push
push
pop
lock
cmp
inc
xor
pop
sub
lds
loop
aam
jmp
xor
out
insl
int
aad
add
sub
out
arpl
mov
jo
ss
test
mov
notl
pop
adc
stc
test
mov
shll
add
mov
inc
and
aaa
xor
and
xchg
pop
xor
cwtl
lret
jae
leave
or
out
mov
mov
cmp
jp
test
push
lcall
push
xor
lea
xor
push
loop
cmp
inc
adc
mov
fndisi(8087
dec
cmp
pop
push
nop
inc
inc
mov
mov
test
mul
cltd
xor
ret
daa
xchg
out
popa
xor
pusha
adc
cmp
out
xor
imul
iret
sub
push
or
mov
repz
and
xor
adc
push
or
rol
mov
movsb
dec
xorl
pop
mov
scas
or
imul
pop
sbb
cmp
mov
in
fcomp
pextrw
xor
push
dec
or
cld
inc
adc
pop
jns
xchg
jp
daa
ret
adc
adc
fsubs
dec
xor
jmp
xor
or
lock
jnp
xor
cmp
into
xor
test
repz
imul
xor
mov
iret
adc
in
fwait
mov
mov
pushf
dec
cmc
repnz
test
sbb
mov
xchg
jmp
xor
push
jo
xorl
add
xchg
fsubl
mov
or
stos
mov
andl
add
xor
cmp
sbb
int3
std
xor
ret
adc
add
bnd
mov
xor
dec
mov
aaa
addr16
sbb
test
jno
mov
inc
and
mov
push
xchg
mov
lret
mov
adc
xor
out
es
mov
shlb
aaa
call
jno
clc
cmc
fcomi
sbb
mov
jnp
js
fnstenv
sub
cmp
xor
dec
adc
mov
ss
jg
add
rorb
ljmp
cwtl
mov
mov
xor
out
push
out
cmp
xor
iret
testl
mov
jae
mov
xor
lret
stc
mov
arpl
jnp
lcall
and
xlat
mov
jbe
pop
out
fmul
inc
mov
pusha
push
popa
test
xor
sub
cli
xor
push
sub
and
lahf
repz
and
mov
xor
adc
mov
test
add
mov
fdivl
push
leave
stc
cmpsl
lret
jo
and
pop
push
push
scas
mov
movsb
dec
mov
adc
loope
call
lret
lcall
cmp
jns
repnz
push
fs
lret
pop
xchg
sbb
cli
out
sahf
std
sti
sub
sbb
sub
enter
lret
in
pop
das
mov
xor
pop
scas
pusha
xor
std
inc
cmp
xchg
jecxz
adc
leave
add
aaa
add
out
mov
aaa
sar
repnz
and
cmp
outsb
mov
push
negb
add
xor
xchg
push
mov
mov
mov
xor
or
out
xchg
cs
fstp
std
cmp
cltd
xor
sbb
iret
xor
mov
xor
fsts
mov
test
sub
aad
imul
fistpl
sbb
loopne
sbb
dec
inc
sbb
icebp
pushf
jle
lds
popf
xor
mov
divb
repz
dec
lret
and
les
sub
popa
fnstsw
lret
imul
pusha
mov
push
cld
cltd
sarb
outsb
dec
lds
mov
xchg
aaa
pop
stos
aas
mov
xor
xor
mov
or
outsl
out
scas
xorb
jbe
xor
xor
je
ret
mov
mov
cmpsl
adcb
xor
sbb
pop
push
cmpsl
inc
mov
xor
hlt
ja
add
pop
lret
add
sbb
cmp
xor
in
cld
xor
clc
repz
jecxz
jmp
test
inc
popf
jle
adc
int
bound
mov
fsubr
xor
bnd
lahf
lcall
xor
xor
in
sub
fs
dec
in
pop
xchg
ds
or
xor
loop
jo
cmpsb
movsb
cmpsl
jno
jg
mov
clc
shll
mov
xor
aaa
stos
rcrl
push
xchg
mov
cmp
in
out
paddb
cli
clc
stos
ds
mov
xlat
pushf
arpl
clc
mov
in
xor
mov
xchg
mov
les
xor
cmp
mov
call
pop
fildl
sub
xor
xchg
in
jnp
daa
inc
xor
xor
shrl
pop
mov
jnp
xor
sub
xor
sub
int3
adc
ret
mov
dec
outsl
jp
xor
sbb
popa
xor
adc
push
int
add
fwait
stos
orb
insl
std
xor
sahf
repz
lcall
or
xor
cwtl
xor
fisttps
xor
push
push
lods
pusha
lds
dec
xor
pop
cli
add
outsl
xor
dec
shrl
cmp
std
and
or
or
loopne
xor
sub
jp
push
cmpsl
int3
sbb
xor
outsb
sbb
dec
cmp
faddp
mov
adc
out
xchg
inc
rdtsc
jmp
pop
mov
ret
xor
push
xor
ss
jo
lods
fnsave
aad
movsb
movsl
lret
jno
mov
fs
sbbl
push
pop
cmp
gs
mov
and
in
into
ss
hlt
push
mov
or
fistl
stc
stos
loopne
mov
stos
fs
cwtl
push
dec
sbb
mov
dec
xchg
fwait
mov
fnsave
test
fwait
dec
es
cld
repnz
aaa
popa
shll
cltd
add
pusha
test
push
aam
ss
fmuls
popa
data16
xchg
dec
adc
sbb
ds
or
orl
inc
mov
iret
xchg
lods
inc
repnz
xchg
or
inc
lock
mov
cmp
shl
or
out
sbb
cmc
clc
daa
je
inc
daa
xor
and
dec
mov
insb
mov
mov
mov
scas
xor
xchg
in
pushf
xchg
inc
push
adc
popf
pop
pop
dec
leave
outsb
test
rclb
adc
cwtl
rcr
inc
inc
fidivs
pop
xor
fwait
jns
aaa
lea
pusha
cmp
pop
xor
leave
push
jg
fidivs
fwait
push
pop
xor
cmp
xor
and
mov
inc
insb
inc
cmp
add
add
in
je
sbb
or
subb
xor
outsb
sbb
adc
add
pusha
jb
xchg
leave
mov
adc
leave
jae
lds
mov
lods
nop
sbbb
aas
sbb
xchg
jp
in
loope
jl
stos
cmp
outsl
data16
lea
insb
dec
lock
xchg
or
pushf
mov
mov
out
out
sub
dec
add
pop
repz
sqrtps
push
pop
mov
data16
test
ret
loop
jnp
xchg
imul
cmp
jb
xchg
addr16
sarb
jae
jle
gs
movsl
mov
pop
clc
push
lret
insb
inc
push
inc
pop
call
adcb
pusha
nop
movsl
and
jge
ret
jns
add
orl
test
add
fwait
dec
push
xchg
xor
adc
adc
push
rcl
mov
ret
imul
imul
push
mov
and
mov
xchg
rcll
popa
cmpsb
adc
fsubrl
mov
push
pop
into
cmp
fldcw
je
xchg
and
insl
inc
mov
out
in
xchg
loope
mov
ficoml
cmp
popa
in
in
fsubp
xchg
push
pop
loop
jns
mov
mov
dec
fwait
xchg
shl
sub
out
pop
mov
jge
loop
mov
shlb
jbe
dec
mov
sbb
inc
xchg
std
fistl
adc
icebp
and
cld
push
fnsave
test
dec
push
or
cltd
test
pop
mov
sbb
jmp
and
or
jnp
leave
xlat
inc
push
xor
psrlq
sub
cltd
push
test
out
fldcw
xor
sub
icebp
das
xchg
movsb
inc
imul
cmp
stos
pop
rcr
inc
mov
sbb
inc
push
inc
rorl
pusha
sbb
xchg
outsl
xchg
sub
nop
sbb
push
filds
dec
repnz
sub
add
or
mov
addl
push
add
xchg
aad
jp
jno
sub
ds
dec
dec
xor
fcmovnbe
sti
les
adc
ss
push
jge
xor
push
adc
push
xor
adc
es
lcall
cld
das
mov
or
dec
roll
sti
mov
ret
sub
insb
mov
pop
mov
popa
mov
xchg
jb
fsts
push
xor
mov
pop
inc
lahf
add
mov
sbb
mov
push
push
lea
xchg
popa
inc
cmp
aaa
xor
test
clc
enter
cmpsl
cmpl
pop
push
xor
mov
adc
test
lea
fsubs
xlat
pusha
jb
pop
mov
sbb
xor
fisubrl
in
or
inc
jne
aam
andl
push
inc
cmp
push
rcll
adc
push
mov
aam
cmpsl
popf
dec
loop
push
push
out
ficompl
xor
push
imul
mov
ret
repz
stos
cmp
pop
xor
test
lret
pop
xor
xor
xor
icebp
and
push
xorl
xor
adc
or
jno
lahf
push
popa
stos
xor
pop
cmpsb
xchg
je
sahf
adc
aam
lock
loopne
fsub
xor
adc
lret
das
adc
jge
add
call
jg
std
xor
aaa
cmp
adc
neg
cmp
jo
adc
and
sub
inc
and
xor
add
imul
xor
mov
and
lods
sub
xor
cltd
mov
xchg
and
lods
or
adc
outsl
inc
jle
pop
xchg
xor
pop
mov
iret
pushf
repnz
lods
stc
mov
jg
das
fldl
xor
mov
iret
into
in
or
inc
pop
jnp
ret
rcrl
push
sahf
push
xchg
inc
cmpsl
xor
xchg
dec
mov
test
clc
xchg
or
jge
cwtl
and
clc
xor
aaa
shll
lret
and
pop
leave
gs
dec
scas
cmp
xor
imul
cmc
daa
pusha
js,pt
loopne
jbe
aam
out
sub
jg
out
jp
xor
das
and
inc
sub
push
data16
mov
pop
add
mov
push
sahf
fs
push
mov
inc
lret
outsl
or
mov
push
or
fs
xor
pop
mov
lret
aaa
sbb
sub
fmuls
aas
xor
xchg
add
in
fnstsw
pop
mov
adc
rorb
in
ficompl
dec
dec
sbb
rorb
add
ja
jp
pop
pop
dec
enter
jne
outsl
push
xor
sub
inc
xor
nop
js
aam
xchg
repnz
jmp
push
push
aas
mov
pop
mov
shll
repz
or
mov
xor
adc
pop
dec
icebp
and
test
or
andl
out
jl
lret
pusha
xor
add
mov
inc
push
xor
mov
xchg
cmp
pop
jmp
inc
xor
sub
cld
inc
ds
aaa
add
scas
test
data16
shlb
loope
pop
mov
nop
xor
ljmp
mov
icebp
ret
sbb
adc
call
jp
sub
push
push
add
xor
mov
icebp
and
jle
xchg
dec
xor
out
xor
mov
pop
xchg
inc
xor
dec
cwtl
cmp
lret
xor
xchg
shlb
mov
mov
xor
lret
ljmp
xor
in
jg
ja
add
add
imul
push
pop
mov
push
and
mov
and
pop
lahf
outsb
inc
and
call
dec
jb
sbb
mov
pop
test
pushf
xor
scas
pop
add
pop
loopne
mov
sbb
cld
js
jo
fistpl
in
movsb
xor
jmp
xor
shl
fsubs
inc
pushf
sbb
jge
fistpll
mov
xchg
push
mov
add
jp
cwtl
lea
inc
pop
andb
fiadds
dec
ror
adcl
aam
and
sub
enter
es
fucom
xor
sub
dec
dec
jns
loope
dec
mov
loop
or
ret
add
icebp
lock
repnz
push
xor
jl
cwtl
iret
in
es
cli
out
inc
mov
mov
mov
adc
dec
ss
int
and
mov
push
pusha
loope
jecxz
addr16
es
subl
lret
les
dec
mov
lahf
clc
in
ss
xor
sub
pop
cmp
adc
sub
es
xor
xor
and
adc
xor
xchg
xor
cli
adc
arpl
lods
cmp
dec
push
fs
or
fbld
icebp
adc
mull
adc
jnp
xchg
and
adc
jmp
pop
cmpsl
inc
jge
cmpsb
shrb
dec
xchg
push
ja
add
leave
adc
mov
jmp
xor
inc
xacquire
imull
jnp
sbb
or
dec
xor
xchg
mov
adc
out
push
add
add
xor
lahf
xor
push
or
js
into
adc
fsts
cmpsb
push
xor
loop
in
adc
icebp
popa
lock
mov
and
mov
push
mov
stos
xchg
fistl
cwtl
sbb
xchg
cld
ljmp
test
adc
icebp
jno
push
sarb
push
idivl
push
cmpsb
sahf
push
lods
mov
shll
cmc
addl
clc
push
xor
out
mov
or
pop
cs
popa
cmp
push
push
aaa
mov
jb
mov
pop
jle
fisttpll
aaa
movsb
mov
popf
cwtl
mov
push
lcall
mov
mov
fdivrs
daa
xor
ret
repz
fistpl
sbb
fiadds
lds
aaa
cs
cmp
stos
ds
int3
das
xchg
xor
add
xor
lahf
rcrb
adc
aam
int
mov
inc
sahf
xor
jecxz
clc
jne
aaa
cld
push
xchg
lret
xor
sub
out
sbb
xlat
mov
sar
cmp
ljmp
cmp
xor
stos
out
xor
mov
cmc
add
cmp
adcl
aas
aaa
fdivr
ror
mov
xor
or
ss
or
vpsrad
xor
cld
sbb
xor
jno
xchg
inc
nop
rclb
movsl
dec
and
dec
orl
je
mov
outsl
aaa
popf
dec
js
mov
mov
test
imul
sbb
je
pushf
xor
adc
add
jmp
xor
lods
dec
mov
inc
mov
cmp
in
adc
mov
push
jbe
push
jle
push
push
loope
and
negb
cltd
xchg
mov
scas
inc
jge
out
mov
repnz
cwtl
pop
mov
ja
jmp
xor
cmp
fwait
popa
repnz
mov
and
push
repz
icebp
lret
xchg
sbb
loopne
sub
jo
jg
mov
inc
pop
out
jle
push
lds
xor
ficoms
aaa
mov
mov
xor
add
xor
or
adc
push
xor
arpl
jns
inc
xor
mov
orl
mov
mov
fidivs
mov
push
pop
mov
fwait
add
pop
divl
jo
and
out
fidivrs
and
mov
daa
dec
and
sub
xor
mov
scas
or
daa
aaa
mov
movb
sub
sbb
fsubs
lret
in
push
mov
xor
test
imul
sub
jl
fwait
sahf
sub
data16
mov
pop
xchg
out
ss
out
sub
adc
jno
ss
pusha
jb
rol
push
xor
pop
pop
ljmp
mov
add
lret
pop
sar
sbb
ret
sub
call
int3
add
mov
add
aaa
mov
jg
js
jno
repz
jp
insb
pusha
fidivs
xchg
test
stc
mov
xor
and
pop
pusha
test
push
mov
out
cld
andb
pop
iret
pop
js
push
pop
aaa
xor
leave
outsb
jp
sbb
fildl
inc
lods
cltd
push
mov
mov
pop
inc
insb
repnz
sbb
outsl
idivb
out
mov
xor
xor
cld
push
mov
sbb
inc
dec
aaa
adc
dec
pop
sub
aaa
rcrl
dec
filds
or
mov
inc
sub
push
movsl
add
and
jae
inc
ss
sti
pop
and
inc
scas
outsb
and
sbb
xor
imul
mov
xor
push
dec
es
nop
jge
mov
pop
xor
or
adc
xor
pop
cmp
fstps
into
xor
inc
out
stos
mov
mov
and
mov
sub
mov
iret
sub
xchg
icebp
add
xor
inc
push
xorl
or
push
xor
int3
mov
xchg
xor
cltd
arpl
sahf
push
andl
shrb
sub
pop
push
test
push
jge
xchg
pop
jecxz
mov
popa
stos
sub
push
rcrb
mov
xor
lret
ja
xor
jecxz
dec
sar
push
scas
adc
adc
incb
cmp
push
xor
pop
in
mov
into
movsb
push
mov
cwtl
sub
or
fcmovnu
repnz
push
sbb
ret
jecxz
dec
and
mov
pusha
mov
xor
into
xor
aaa
in
in
cwtl
js
imul
fsub
inc
pop
or
xlat
xchg
mov
push
aaa
xchg
push
test
je
push
jo
sub
fdivr
dec
sbb
sub
cmp
test
daa
xor
mov
fstp
and
daa
adc
pop
clc
call
cli
xor
cmp
pop
inc
jle
xor
cld
sahf
test
ja
inc
jns
xor
xor
inc
cmpsb
popf
aaa
insb
adc
cwtl
xor
rcrl
pop
mov
cwtl
cltd
mov
xor
fldl2t
mov
xor
shll
jae
xchg
mov
call
sub
and
pop
dec
or
in
push
inc
inc
xor
sbb
xor
add
cwtl
fdivr
mov
ja
mov
dec
mov
cs
jns
pop
mov
aas
push
test
pop
xchg
aam
xor
loopne
dec
mov
adc
mov
xor
xor
hlt
clc
lret
test
addr16
mov
mov
out
ds
insb
mov
xor
jbe
mov
xchg
adc
gs
mov
dec
mov
dec
xor
jmp
sub
stos
loop
xchg
ss
pop
dec
xor
jl
stos
mulb
xor
sbb
je
outsl
xor
inc
push
sbb
xorb
addr16
imul
push
clc
pushl
pusha
int3
sub
sti
mov
jmp
fwait
stos
nop
cld
jns
lock
stc
daa
cltd
out
xor
sub
xbegin
ljmp
out
lock
aam
mov
xor
ret
push
xchg
pusha
popf
xor
fnstsw
mov
jb
dec
xchg
xor
movsb
inc
mov
lock
add
sbb
cmp
mov
pusha
mov
movsl
jb
xchg
in
movsl
jno
push
mov
test
xor
mov
mov
adc
inc
cwtl
adc
cld
les
clc
mov
mov
xchg
fs
mov
adc
sti
fsubrs
popa
rolb
mov
xchg
scas
xor
jbe
adc
jmp
jo
les
xchg
xor
mov
xor
fs
into
or
xchg
hlt
call
mov
out
shlb
add
lret
testl
clc
pushf
cmp
pusha
stos
sbbb
push
rorb
insl
xor
subl
mov
fcmovbe
adc
ret
xor
xchg
es
mov
aad
les
mov
lret
xchg
jne
dec
fstp
mov
fs
outsb
mov
add
adc
pusha
xchg
in
push
movsl
inc
push
mov
jo
inc
outsb
fwait
jno
xor
mov
arpl
mov
mov
push
pop
inc
lods
mov
repz
outsb
push
fwait
xchg
pop
mov
xor
in
mov
mov
jo
cmc
sahf
out
stos
sub
sbb
push
cmpsb
ror
xor
loop
xor
jp
cli
pop
adc
popf
out
mov
rcll
jp
cmp
xor
push
rclb
xor
and
push
fnstenv
adc
in
and
xor
jmp
push
sub
xor
bound
inc
inc
mov
push
and
je
nop
mov
jbe
xor
in
mov
xor
pop
std
mov
das
js
in
repnz
push
cmp
jne
and
movsl
in
pop
ret
xor
fwait
dec
adc
mov
pop
cmpsb
pop
lock
bound
inc
mov
sbb
mov
pop
dec
sahf
loopne
jge
xor
sbbb
out
dec
add
xor
aaa
iret
clc
jecxz
fwait
inc
out
lret
xchg
movsb
daa
imul
outsb
cli
jp
xor
mov
jb
int
jae
fwait
call
mov
adc
out
xor
inc
lret
cmp
sub
jo
mov
jp
lahf
aam
divl
mov
test
das
xor
inc
and
in
rcrl
mov
mov
sub
push
pop
dec
mov
pusha
addb
mov
push
dec
shl
repz
cld
mov
xchg
xchg
pushl
into
hlt
insl
inc
cmpsb
xorl
not
inc
xor
jl
and
adc
inc
mov
nop
or
add
das
call
mov
cs
adc
sub
loopne
iret
xchg
mov
mov
lods
orl
xor
inc
cmp
xor
es
mov
mov
repnz
mov
mov
xor
or
xor
xchg
movsb
aam
negb
out
adc
cmp
das
adcb
shll
rcrb
inc
sbb
mov
mov
jo
jmp
mov
xor
inc
lcall
decl
mov
cmp
mov
inc
test
sub
mov
stc
insb
add
xor
in
inc
jle
cmp
inc
mov
cmpsb
les
inc
mov
pop
scas
dec
adc
cwtl
pushf
mov
inc
xor
call
cltd
lret
cmp
cmp
and
xchg
jno
js
xor
ds
mov
or
je
jo
inc
xor
inc
sahf
and
xor
lret
xor
sub
cmp
mov
movb
mov
xor
rorl
fdivrs
fidivs
lds
jmp
mov
insb
fdiv
scas
test
xor
jb
xorl
out
adc
mulb
cmc
insl
jge
clc
jo
lcall
in
ret
jnp
dec
push
add
hlt
sub
call
xor
sub
mov
push
nop
dec
mov
out
xor
jp
mov
mov
lret
push
inc
aaa
jae
aas
mov
sbb
xor
in
xchg
pop
xchg
xor
ret
aam
mov
jge
movsb
jecxz
pushl
xor
bound
xor
hlt
sub
cmc
push
push
xor
sti
mov
or
sub
dec
pop
or
inc
mov
or
mov
mov
outsl
lea
cmp
xor
lret
stos
into
loop
pop
push
mov
testb
cmpb
xor
leave
or
and
xchg
push
xor
test
jl
mov
repnz
push
dec
pusha
xor
ret
addw
xchg
mov
test
movsb
jmp
push
cli
lret
mov
mov
jl
insb
adcl
xor
mov
xchg
mov
cmp
and
nop
orb
test
pop
pusha
mov
jle
out
pop
push
dec
iret
test
mov
pop
push
aaa
jmp
adc
push
daa
or
cmp
cmp
jnp
je
xor
ljmp
xor
rcrb
and
int
imulb
mov
xlat
mov
imul
inc
pop
cltd
push
stos
xor
mov
clc
sbb
int3
adc
jne
aaa
and
loopne
out
sub
push
mov
sub
adc
and
pushf
mov
pusha
xor
xor
cmp
mov
xor
in
sbb
adc
add
sbb
leave
push
inc
popf
outsl
mov
roll
pop
imul
test
pusha
jo
aaa
sbb
mov
jo
and
lods
je
xor
stos
mov
pop
xor
sbbb
in
pop
xor
push
stos
imul
enter
sbb
add
mov
mov
aas
rcll
fcomi
flds
pop
repz
xor
fistps
or
mov
inc
pop
notl
fwait
dec
mov
sbb
orb
sti
fmuls
inc
mov
icebp
xor
inc
mov
xor
out
insb
aam
mov
jl
pop
dec
pusha
ljmp
rol
mov
jbe
adc
sub
leave
jnp
lods
inc
test
scas
dec
jae
int
cmpb
xor
push
aad
push
adc
xor
sbb
xor
mov
out
push
fbld
jle
fidivl
inc
jo
and
mov
cmp
jb
push
or
or
je
std
pop
lahf
dec
popa
cmp
mov
sub
mov
cwtl
push
jne
in
call
push
loop
adc
push
xorb
mov
xor
adc
xchg
mov
adc
lcall
dec
js
cmp
das
gs
fsubp
outsl
sub
cltd
push
cli
lods
mov
mov
and
and
mov
cld
mov
aaa
jge
jg
ret
cs
lock
xor
fidivrs
mov
mov
in
imul
shlb
jl
add
out
xchg
aaa
cli
repnz
pop
mov
jnp
fwait
xor
mov
add
test
fdivrp
addr16
lcall
or
xor
mov
xor
sub
pop
mov
push
int
xor
lcall
flds
push
jnp
adc
jge
imul
xchg
xor
rolb
outsl
movsl
dec
roll
mov
and
and
pop
or
push
lahf
or
iret
or
mov
fwait
jo
sbb
xor
adc
out
call
int
test
jl
push
jo
or
mov
cmp
mov
add
shrd
mov
jo
dec
neg
inc
jecxz
xor
in
lock
call
cmp
cld
cli
loop
mov
adc
inc
aaa
mov
lret
jle
pop
test
xor
mov
dec
mov
cs
mov
das
stc
je
iret
adc
xor
popa
repnz
dec
out
fwait
fcomp
sbb
mov
pop
hlt
jg
xchg
daa
adc
in
xor
mov
inc
daa
xchg
pusha
lret
cmc
add
jl
add
clc
cmpsb
fsts
mov
jl
out
sti
cmp
rcrb
es
sub
sti
clc
data16
outsl
popf
jae
cmpsb
pusha
or
in
popa
add
jae
rcl
push
fdivrs
inc
jp
adc
mov
aam
jno
lods
ret
mov
adc
xor
or
jno
es
loopne
rol
mov
push
xchg
push
mov
xchg
testb
test
xchg
and
aad
adc
popa
sti
pop
inc
dec
dec
mov
pop
add
sub
test
cmp
pusha
pop
jnp
test
dec
mov
enter
inc
sub
pcmpgtd
mov
aaa
lds
or
mov
xchg
sub
pop
cltd
push
dec
ss
ja
cmp
push
pusha
sub
mov
cs
andb
lret
push
aaa
insl
repz
sahf
mov
subl
movsb
xchg
out
and
jecxz
jl
push
rorl
mov
sbb
pop
mov
mov
je
sti
call
in
cmpsl
sbb
sarl
push
ds
sbb
out
jae
lcall
out
cmpsl
or
cmpsl
xor
jns
rcr
fiaddl
lahf
mov
xchg
addr16
std
jle
or
je
xchg
push
pop
outsb
sahf
or
mov
scas
push
jo
jbe
pop
sub
jp
cmpsl
test
xchg
pop
int3
lahf
insb
push
fidivrl
xor
movsb
cmp
sub
popa
ss
sar
jo
mov
push
add
imul
push
stos
mov
xor
and
cli
pushl
pop
sub
das
jge
call
inc
in
sub
mov
cmp
xor
cld
cmp
cmp
aaa
dec
or
pop
outsb
cltd
xor
vmovhps
mov
sub
xlat
xor
dec
cli
xor
gs
pop
mov
pop
and
pop
xor
lds
add
push
inc
bound
je
add
icebp
pop
sub
sub
xor
cs
dec
and
or
mov
mov
out
pop
add
stc
push
xchg
xorb
adcl
and
imul
into
adc
jno
lock
xchg
inc
movsb
jg
cwtl
mov
xor
subb
push
shl
out
aad
por
mov
dec
imul
lods
stos
push
icebp
or
cmp
push
sti
push
jp
std
push
adc
pop
xor
pushf
jg
inc
mov
loopne
sbb
mov
hlt
inc
cmp
dec
mov
xchg
xor
and
mov
outsb
xorl
test
cmp
adc
in
nop
lods
add
ficompl
ljmp
sub
dec
aas
xor
decb
xchg
xchg
jge
mov
mov
or
ficoms
mov
sahf
scas
arpl
pushf
push
ret
sub
cmp
adc
scas
pop
jno
shll
mov
mov
xchg
cmp
push
mov
fdivrs
out
mov
loopne
repz
sub
das
pop
sbb
and
test
inc
cmc
sbb
clc
aas
out
jmp
push
movsl
cltd
mov
lods
xchg
push
add
adc
xchg
sbb
jmp
enter
sub
sub
cmp
data16
pop
cli
cmc
shlb
add
cwtl
mov
mov
lock
popa
pop
stos
rorb
hlt
repnz
in
pop
lock
mov
sbb
loop
cmp
add
jp
dec
movsl
mov
pop
inc
add
add
testl
lods
adc
sbb
fdivl
and
std
dec
out
xchg
sbb
sbb
mov
pop
mov
mov
xor
add
or
mov
mov
ficomps
dec
xor
popa
push
les
das
mov
mov
lahf
sub
pusha
xor
pop
jmp
aad
mov
es
jle
push
xor
and
les
cmp
mov
jl
xchg
inc
mov
lods
xchg
fs
xor
sub
mov
frstor
jmp
push
pushf
and
xor
pop
sub
adc
xchg
pop
movl
mov
negb
jl
xor
push
adc
cmpsl
loopne
adc
mov
test
push
fdivl
aad
dec
push
inc
dec
mov
and
adc
sbb
mov
ret
jnp
shrl
sub
mov
int3
rcrb
fstpl
sub
arpl
lock
push
out
xor
jp
cmp
test
xor
and
pop
aaa
mov
ja
adc
lahf
aad
mov
cmpsl
xor
hlt
cltd
nop
add
iretw
sub
add
pushf
fsubrs
lret
mov
psraw
xor
push
call
jge
mov
mov
inc
adc
sub
jno
imul
sbb
mov
hlt
mov
xorl
mov
push
jmp
push
mov
jl
lods
mov
xor
pop
and
mov
in
aad
fldenv
jle
push
stc
pop
mov
dec
sahf
loop
std
and
lock
jno
fnstsw
push
inc
int3
pop
mov
mov
add
mov
loop
mov
xor
nop
lcall
sub
mov
and
popa
xchg
push
cmp
xor
sbb
ja
pcmpgtb
mov
and
and
cli
push
mov
outsb
push
xor
std
sub
pop
dec
lahf
xor
mov
add
inc
xor
inc
sbb
adc
mov
xorb
das
loope
mov
lcall
push
mov
shrb
das
mov
es
inc
xor
or
mov
gs
sbb
aam
test
jmp
outsl
pop
mov
enter
xor
js
ret
dec
inc
aad
cmp
ja
int
adc
adc
out
push
xor
lds
jecxz
icebp
sub
sbb
push
dec
fucomip
adc
adc
lahf
sarb
jne
jns
sbb
xchg
xorb
adc
sub
push
or
and
insb
and
sub
sub
and
sub
inc
sub
adc
call
ss
pusha
outsl
jns
cmp
scas
push
in
add
ss
mov
sub
mov
inc
cwtl
fimull
out
mov
daa
shll
dec
xor
bound
push
lea
int
sub
sub
movsl
adc
lock
jmp
push
outsl
lret
hlt
cltd
jno
sbb
or
xor
ss
repz
lds
sbb
dec
sub
push
in
pop
pusha
or
push
jno
insl
cmp
adc
cmpsb
neg
in
nop
out
es
xor
cmp
push
pop
xchg
xor
xchg
lock
dec
xchg
movl
mov
loop
dec
fnsave
lea
add
test
dec
es
add
dec
scas
jae
inc
pushf
sub
pop
out
xlat
shr
jl
cmpsl
fs
mov
and
mov
cmpsl
mov
mov
dec
jns
sub
or
or
fs
push
push
adc
xlat
lret
das
rcrl
xchg
adc
or
mov
push
test
mov
jo
stc
dec
sbb
mov
mov
mov
gs
cmpsl
mov
cld
cmp
cld
sahf
fsubs
push
stos
xchg
iret
out
clc
test
jle
daa
adc
xor
mov
jbe
popf
inc
stc
sub
and
xchg
jno
aas
sub
adc
sahf
xor
dec
mov
xor
adc
arpl
stc
mov
and
adc
mov
add
push
ds
push
outsb
xor
popf
cmpsl
add
lods
mov
jns
test
push
xchg
testb
repz
bound
sbb
pop
movsl
daa
sub
vmovdqa
inc
imul
push
cltd
dec
mov
lods
and
xor
xor
sbb
bnd
adc
popa
inc
xor
lods
gs
es
add
lds
out
jb
inc
mov
xchg
test
pop
mov
push
push
sub
cmp
sub
push
test
xchg
pushf
pusha
xchg
jnp
jne
xchg
adc
repnz
cwtl
jo
push
jmp
or
fcoms
add
call
mov
adc
scas
test
sbb
test
jo
push
sub
mov
sub
daa
addr16
dec
pop
jmp
out
push
xchg
dec
xchg
popf
fldt
adc
inc
mov
cmp
push
jle
add
scas
aad
ds
adc
pop
add
rcl
aaa
sub
inc
data16
loopne
hlt
jl
jmp
mov
sbb
or
dec
repnz
push
fwait
jecxz
addr16
mov
sarl
dec
cmp
inc
mov
sub
or
fwait
add
imul
int
mov
add
or
in
jo
arpl
fwait
push
sub
or
adc
pusha
mov
and
cld
mov
loope
inc
cmp
xor
popa
or
and
stos
repz
js
push
or
subb
mov
fcmovnb
jle
xor
add
daa
sub
js
cmpb
fwait
xchg
pusha
xor
push
xor
pop
ficoms
pop
lods
mov
jae
push
push
rclb
sbb
test
mov
jg
and
push
popa
cmp
test
cmp
sub
es
inc
ds
fwait
mov
xchg
int3
int
cwtl
les
and
aad
fwait
jmp
popf
xor
inc
fldcw
clc
decw
test
pop
xor
add
lock
decl
jne
mov
push
nop
xchg
dec
add
mov
jg
stos
repz
sub
dec
or
mov
ss
xor
popa
in
adc
test
daa
dec
addb
ret
mov
orl
test
clc
scas
aas
and
adc
arpl
test
and
cmc
mov
push
pop
fdivs
sarl
and
xor
mov
xchg
cmp
outsb
xor
adc
jl
inc
adc
subb
push
push
fldl
xor
fcomip
dec
loope
sbb
jle
adc
lock
sbbb
xchg
xchg
or
pop
repz
add
adc
cmpsl
pusha
ja
xor
bts
xor
xor
popa
dec
jnp
mov
or
pop
das
adc
push
das
mov
dec
sbb
pop
xor
cltd
dec
icebp
rorb
sbb
in
inc
insb
je
lock
je
xchg
shlb
xor
cmp
into
or
daa
aam
rcrl
fnstsw
pusha
imul
mov
loopne
and
popa
rol
and
cmp
in
and
add
iret
inc
loopne
and
cmp
aaa
add
loop
in
dec
dec
mov
push
sbb
popf
mov
pop
and
pusha
addl
aam
or
adc
mov
ret
rorb
fisubl
push
jae
out
jg
push
popa
and
lock
cltd
pusha
cmp
pop
mov
and
xchg
add
xor
daa
lea
gs
notl
loope
sub
pusha
test
jge
data16
sub
dec
mov
sbb
repz
mov
sbb
push
sub
clc
cs
scas
leave
or
mov
cli
mov
loope
jge
repz
icebp
jnp
data16
pop
dec
shr
lea
sub
out
mov
xor
hlt
subb
xchg
mov
mov
add
push
mov
jne
out
xchg
adc
sub
jnp
jge
sub
xchg
stc
inc
jmp
shlb
in
outsl
inc
or
es
pop
call
dec
fidivs
ret
pop
repnz
add
insl
inc
and
mov
mov
pusha
cmc
jg
inc
out
jbe
fidivl
add
inc
js
xchg
push
xor
sub
pop
cmp
inc
mov
cmp
push
jp
xchg
dec
andb
lcall
xor
ds
cwtl
popf
mov
scas
mov
mov
dec
movsb
inc
stos
data16
test
daa
int
jnp
mov
xor
mov
frstor
jecxz
out
xor
ror
insb
dec
mov
test
cmp
xor
push
fwait
pmaddwd
icebp
jb
sbb
imul
js
lret
sub
inc
xchg
dec
out
aaa
cmpsb
cwtl
push
pop
cmp
inc
lahf
repz
adc
push
inc
movsl
insb
push
out
jp
cmpsl
xor
push
in
shlb
sub
cmp
xor
negb
push
mov
or
lock
subl
test
pop
xor
mov
add
xlat
xor
loope
ret
fdivr
sbb
sub
push
xor
cmc
sbb
push
jg
xchg
les
out
sbb
and
push
sbb
aaa
out
dec
shlb
loopne
pop
and
adc
mov
xchg
pop
cs
rol
shll
enter
add
push
test
dec
xchg
mov
fwait
clc
test
mov
sbb
adc
das
cmc
movsb
mov
repz
lret
xchg
int
mov
flds
lret
pop
inc
push
movsb
inc
mov
imull
ljmp
out
sub
add
rcll
faddl
roll
scas
dec
inc
xor
mov
test
bound
jmp
cmp
or
out
sub
sti
mov
iret
loopne
xor
rclb
add
lock
sbb
cs
addr16
aad
ror
inc
and
popa
xor
test
mov
dec
aaa
and
lds
adc
mov
ljmp
stc
xchg
test
test
and
push
jne
jno
pop
adc
outsl
mov
push
cltd
ljmp
xor
dec
push
aaa
outsl
nop
add
dec
adcb
push
data16
movb
imul
hlt
cwtl
ja
sbb
aam
mov
stos
jbe
notb
pusha
daa
stc
pop
add
stc
mov
mov
push
fwait
sub
mov
mov
mov
mov
pushf
sarl
loopne
pop
jp
lock
fsubrs
adc
jno
sbb
xchg
pop
test
sbb
xlat
mov
add
out
dec
cmpsl
adc
lock
mov
add
mov
mov
and
shlb
jp
add
ja
daa
inc
sub
fsubl
out
jne
clc
adc
test
cmp
xor
sti
stos
sbb
pop
or
jmp
xchg
movsl
mov
jmp
ret
cmp
pop
popf
jecxz
xchg
xor
arpl
shl
push
in
push
sbb
rolb
fcmovne
lahf
rcrl
dec
jp
aad
mov
in
cmc
jmp
out
mov
adc
push
sbb
pusha
rol
jo
sub
cmp
data16
dec
mov
mov
mov
dec
push
dec
fidivs
js
es
pusha
fstpl
mov
loope
test
mov
sahf
jbe
cmp
or
ss
out
pop
in
int3
loopne
rorl
test
push
xor
jge
jg
xchg
xor
and
out
in
aaa
packsswb
orb
das
inc
test
pop
push
pop
stos
mov
xor
imul
lret
aaa
int3
xchg
in
xchg
push
cmp
add
sbb
dec
jmp
rclb
mov
push
in
mov
and
outsb
repz
mov
and
adc
adc
fst
cld
lock
and
jo
pusha
xchg
loope
add
gs
in
lds
fisubrs
int
repz
fcomp
xor
push
outsb
lea
jno
xor
nop
dec
ss
sub
pop
clc
push
lcall
cmp
iret
dec
dec
pop
add
xlat
inc
test
adc
xchg
cmpsb
loop
lahf
fcoml
imul
enter
adc
push
or
mov
fs
aaa
inc
and
sub
sbb
rorl
dec
cltd
daa
pop
push
stos
push
imul
leave
lcall
push
mov
sbb
icebp
fidivl
jle
cld
sub
ljmp
push
xor
daa
aad
jl
xor
and
outsb
inc
mov
xchg
cmp
or
xchg
and
movsl
or
mov
mov
jo
addr16
fimull
push
xor
rolb
lret
es
lcall
pusha
and
in
test
repz
mov
mov
repnz
push
fidivrs
mov
lahf
gs
mov
xor
push
and
push
out
icebp
arpl
xor
gs
xchg
shrl
add
lcall
xor
fcmove
and
pop
cmc
pop
ds
xor
pop
insl
stos
dec
pop
and
xlat
inc
adc
sbb
xor
sarl
cli
jae
mov
js
and
sub
sbb
xor
push
xor
ficoml
and
xor
push
and
pushf
in
nop
dec
xchg
mov
nop
enter
xor
pop
pop
jmp
sub
xchg
loopne
fwait
sar
and
xor
push
int
xorl
dec
jmp
xchg
xor
xor
mov
loop
xchg
sti
nop
shll
movsl
xor
scas
in
js
mov
in
adc
cli
add
ficoml
xor
cmpsl
push
test
pop
fdivrs
scas
or
or
jbe
repz
lcall
lds
jg
or
out
shl
push
xchg
test
decb
insb
bound
int3
add
mov
or
out
and
out
jno
xor
pop
pop
gs
xor
push
aad
call
in
lds
das
mov
pop
nop
pop
xlat
add
aam
or
xor
int3
out
xor
cmc
lahf
insb
mov
sarl
fstps
cwtl
xor
shl
xor
iret
ret
xor
xor
push
jmp
inc
adc
add
mov
insl
pushf
ds
popf
pop
push
mov
in
xor
fsubrl
and
xor
xor
mov
adcb
pop
cwtl
in
pop
xor
sub
and
cmp
mov
mov
or
divl
jg
cmp
stos
les
mov
sbb
fcompl
clc
ret
daa
xor
popa
xchg
xor
loope
mov
jge
jmp
aaa
enter
and
push
mov
mov
adc
scas
in
push
xlat
enter
inc
js
shrl
sub
popf
add
sbb
push
and
fisttps
jmp
sbb
cmp
sti
dec
push
sbb
inc
dec
xor
rorb
mov
xor
aad
xchg
jge
xor
out
jecxz
xor
aaa
fdivl
rclb
inc
adc
and
pop
xlat
call
push
stos
xor
in
lret
xor
sbb
and
testl
cmp
jnp
dec
jne
aas
mov
xor
mov
adc
mov
rolb
or
rorl
fwait
aaa
push
xchg
stos
call
daa
inc
xor
xchg
mov
add
fimull
mov
inc
je
pop
aaa
xor
mov
xor
jge
ja
idivb
stos
repnz
out
mov
sbb
dec
or
xchg
mov
cmp
mov
mov
ja
jns
movsb
insl
push
xchg
xchg
mov
fimull
xor
cmp
lock
js
push
adc
dec
dec
loopne
adc
jmp
ja
xor
xor
sbb
inc
jns
mov
pusha
dec
xor
leave
and
push
pushl
fcmovbe
add
pop
jns
and
add
fwait
pop
and
fs
sub
mov
xchg
je
xor
lods
outsb
icebp
and
dec
xor
adc
push
into
adc
adc
inc
mov
jno
jo
xor
shll
push
dec
add
inc
cmpsl
sub
push
jecxz
xor
lock
mov
lds
rorl
pop
xor
inc
cld
mov
cmpb
out
sbb
lods
xchg
push
xor
cmpsl
aas
fwait
and
fnstenv
sbb
stc
and
cmp
push
push
xor
int
aaa
jae
mov
or
pop
mov
mov
xor
and
add
lock
xor
xor
test
icebp
cld
lds
incb
adc
add
cmc
arpl
in
inc
jbe
mov
ljmp
sbb
out
xchg
sub
jns
test
andb
xchg
xor
cwtl
pusha
mov
mov
mov
jno
pop
inc
cmp
lcall
and
mov
push
into
mov
xor
andl
cmpsb
inc
xor
dec
roll
orl
lock
mov
mov
std
xor
rclb
mov
rolb
dec
or
test
in
jbe
xor
xchg
adc
stos
jns
mov
jl
xor
sbb
daa
sbb
mov
aam
pop
mov
nop
push
cmpsl
pop
inc
stos
push
imul
out
adc
xor
dec
mov
xor
pop
sub
sub
pop
inc
into
pop
xor
xor
out
push
mov
adc
adc
xor
cld
sbb
jl
sbb
xor
lret
movsb
pcmpgtw
cs
sub
aaa
fmulp
push
mov
mov
imul
mov
mov
xor
xor
test
xor
jne
test
icebp
inc
lods
sub
int3
sbb
jge
mov
inc
ljmp
fs
or
mov
jle
or
dec
nop
xor
sub
idivl
or
jb
lret
mov
mov
adc
enter
cmp
sub
in
das
in
xor
lds
dec
dec
xor
mov
cmp
aaa
adc
stc
pop
push
jnp
xor
rcll
fnsave
pushf
data16
mov
sub
xor
outsl
int3
repnz
shl
cmp
mov
mov
ljmp
and
mov
and
cmp
or
or
sahf
fiadds
dec
or
push
push
stc
mov
enter
rcrb
sub
pusha
ja
pop
repz
add
xchg
dec
std
sub
adc
popa
jmp
and
std
or
cs
aas
adc
pop
xlat
sub
sahf
xchg
aaa
mov
arpl
sbb
lea
imul
pop
mov
mov
mov
loop
cmpsl
std
aaa
xchg
sbb
mov
jecxz
adc
jno
xchg
outsl
std
pop
aaa
xchg
shlb
pusha
xchg
cwtl
mov
aam
add
cmp
push
mov
adc
jge
aas
test
aas
adcb
cli
insl
push
push
or
or
adc
push
sub
dec
lahf
mov
les
test
stc
sbb
sbb
out
je
mov
fists
mov
pusha
nop
inc
push
pop
fstpl
xor
sbb
and
je
adc
sbb
push
andl
xor
jmp
dec
or
je
loop
mov
mov
call
out
ret
xchg
les
leave
cmp
pop
rcrl
loop
ret
mov
push
frstor
test
jno
rcll
sub
adc
into
mov
outsb
gs
movsb
or
out
pop
and
sahf
push
out
xor
loop
adc
cltd
adc
roll
iret
jg
sub
incl
cmp
cmpsb
cwtl
xchg
add
outsb
cmp
sbb
xchg
icebp
push
enter
pusha
stc
xor
lds
sub
outsb
and
push
cmp
rolb
push
fwait
dec
xor
in
sub
or
lock
test
popf
cmpsb
mov
mov
xchg
lods
push
sbb
jb
jno
add
jp
pop
jb
sbb
sub
cmp
fisubrs
mov
in
ljmp
test
add
mov
or
loopne
fistl
mov
int3
icebp
xor
cmp
pop
out
insb
or
xlat
push
lods
and
xor
fcmovnu
orl
and
sti
loope
mov
pop
adc
xor
fistl
push
push
scas
inc
fcoml
dec
adc
test
into
popf
inc
fildll
ss
add
les
icebp
inc
movsb
inc
in
and
fildl
mov
int
movsl
fs
fmul
repz
sbb
sbb
cld
sahf
inc
rcrl
xor
ffree
ret
repnz
xor
adc
mov
leave
add
out
pop
sub
pop
push
jmp
repz
adc
outsl
cmpsl
stos
xchg
push
pushf
add
xchg
sbb
or
jo
xor
test
sti
fnstcw
into
aas
scas
movsl
cli
out
xor
cld
cmp
inc
loop
or
adc
pop
and
push
mov
lock
cmp
fbstp
pop
cltd
ja
jp
and
jo
inc
clc
or
lock
inc
adc
mov
fdivl
shll
or
mov
jbe
dec
aaa
movsb
jmp
dec
js
inc
cld
outsl
test
jne
fwait
nop
xchg
inc
inc
lahf
push
test
ret
lret
push
push
outsb
xor
sbb
or
pop
xchg
adc
cld
xchg
mov
add
mov
and
xor
ret
pop
inc
xchg
imul
lds
cmpsl
add
adc
xor
and
std
int3
xor
pop
loopne
pop
xor
cmp
xor
das
mov
push
mov
popa
push
cmp
ja
jns
and
mov
loope
mov
cld
or
enter
popf
inc
mov
fcmove
aaa
adc
cmc
out
cmp
inc
divb
fisttps
mov
in
jle
xor
pusha
cmp
js
and
jbe
or
gs
loop
or
lret
xor
cmpl
repnz
push
adc
xor
xor
sbb
mov
xor
mov
or
in
stos
je
fdivs
and
lds
add
cmp
lahf
push
dec
xor
ret
cs
push
lock
xor
xor
loop
xor
enter
and
cs
add
int3
xor
mov
cmpsb
inc
iret
xor
lock
les
mov
fimuls
mov
pusha
cwtl
mov
dec
daa
jmp
stos
jnp
xor
testl
mov
push
or
push
pop
jb
xor
imull
movsl
xor
or
inc
inc
and
add
notl
and
les
jmp
sarl
fisubrl
sub
shll
xor
mov
nop
xor
in
outsl
mov
outsb
mov
stos
lahf
xor
sarl
xor
xchg
inc
fmulp
std
cli
adc
dec
loop
test
divl
or
sub
adc
mov
push
inc
ja
xchg
pop
jl
rcr
mov
sub
icebp
jge
sbb
stos
js
lock
mov
mov
push
cmp
xor
jno
int
fcompl
xor
mov
fsubrs
inc
aas
xor
mov
insl
repnz
add
test
mov
js
jo
shll
inc
es
and
in
pop
lock
fdivrp
xor
data16
add
insl
ja
out
mov
andl
std
fbstp
xor
mov
sbb
in
arpl
xlat
or
mov
xchg
or
stos
and
and
dec
add
or
sub
imul
inc
into
xor
in
pop
push
inc
push
push
xchg
aaa
gs
cmp
lea
xor
aad
inc
xchg
lods
mov
jb
sub
add
subb
push
rolb
lock
xor
shlb
xor
and
test
xor
les
lea
fldenv
je
dec
jmp
lds
xchg
inc
rcr
jl
outsl
ret
add
xor
je
into
xchg
lahf
in
stos
cs
les
lret
iret
mov
jns
xor
lea
in
or
test
inc
sub
jns
xor
and
idiv
inc
aad
pop
xor
aaa
jl
pop
add
jns
lock
fcoml
les
add
and
icebp
dec
lahf
ficompl
xor
shrb
lods
inc
or
pop
shrb
aad
cld
sub
outsl
adc
pop
cmp
sbb
test
in
inc
arpl
xor
in
ss
inc
xor
cmpsl
lea
push
cs
iret
dec
rclb
adc
dec
jge
call
adc
cmp
sub
pop
iret
xor
lcall
sub
in
and
iret
xor
mov
xchg
pop
mov
andb
xor
cld
xor
nop
mov
ja
jg
or
fwait
mov
inc
xchg
sub
xor
test
mov
jecxz
or
data16
jg
xor
ss
inc
xchg
push
into
lcall
sbb
dec
xchg
xor
add
jbe
inc
xor
add
mov
mov
lods
imulb
or
mov
push
jno
jne
sub
mov
ljmp
js
movsb
mov
mov
xchg
into
lahf
aaa
incl
negl
add
xor
mov
push
popf
cmpsb
pushf
xor
je
out
xchg
inc
push
xor
adc
pop
pop
subb
fisubs
xchg
cmp
and
lods
lahf
inc
loopne
xor
inc
and
cmpl
jl
iret
add
cmp
popf
in
sbb
rol
nop
in
and
mov
fs
jae
xor
cmp
xor
or
aaa
xor
mov
mov
xor
pop
mov
inc
xlat
es
xor
adcl
dec
cs
shll
rcr
notl
mov
rcrb
sti
adc
in
lock
push
loope
loopne
pop
lahf
cmp
pop
push
lea
jecxz
add
xchg
scas
inc
sbb
icebp
add
xor
repnz
mov
mov
adc
sbb
xor
cli
das
lcall
lods
out
xchg
add
xor
inc
xor
into
popf
aaa
jbe
test
pop
mov
jp
xchg
cs
adc
push
pusha
lods
out
scas
xor
fmuls
sbbb
and
and
inc
sub
in
jl
jmp
loop
mov
pop
cmp
shrd
ficoms
sbb
mov
clc
adc
mov
xor
push
mov
jbe
call
add
test
add
sbb
stc
xchg
sahf
cmp
dec
stos
jno
inc
pop
xchg
mov
sub
mov
pusha
xchg
test
fwait
mov
loope
inc
cmp
xor
jnp
pop
mov
and
cli
mov
ss
xor
lods
orl
nop
add
jg
xor
aad
mov
fs
fsubp
roll
dec
popa
jno
lods
xor
mov
or
jae
mov
xchg
xor
movsl
aaa
je
push
jnp
inc
outsb
lcall
popa
xor
aad
adc
fcmovbe
jo
lret
xor
jbe
ret
cmp
add
pop
iret
mov
adc
aaa
sub
sbb
push
cmpsb
cmp
addr16
xor
jno
dec
sub
jo
dec
cmpsb
inc
sti
xor
push
inc
sub
and
mov
pop
xchg
xor
dec
ds
loopne
cmp
nop
inc
sahf
xor
int3
dec
push
lods
cld
xor
dec
fsubrl
adc
pop
xor
data16
dec
pop
xchg
pop
mov
mov
stc
push
popf
push
popf
sbb
mov
mov
lock
cmpsb
cmp
test
mov
pop
arpl
xlat
pusha
aam
cs
jno
insl
jns
push
dec
mov
or
stc
ds
xchg
pop
pusha
imul
out
daa
pop
sub
stos
pop
xchg
xor
adcb
lcall
mov
jne
leave
adc
and
mov
add
xor
shll
xchg
fdivrp
mov
loopne
adc
call
jae
xor
fimuls
and
int3
xor
push
shl
add
in
js
lods
dec
xchg
cld
shll
aam
loope
outsb
sbb
fwait
cmp
inc
lods
and
aad
jno
mov
int
sbb
in
pusha
les
push
shlb
or
outsb
sbb
jmp
xor
xchg
xor
mov
add
cmp
dec
mov
adc
jmp
int
push
push
inc
push
xchg
test
and
mov
or
inc
cltd
out
cmp
cltd
mov
je
adc
mov
add
cmp
je
sub
mov
sub
stc
orl
lcall
mov
rorb
jns
repnz
inc
dec
xchg
sbb
mov
inc
les
lea
jne
jno
rolb
cmp
push
adc
cmc
test
mov
test
js
mov
data16
adc
pusha
pop
es
mov
arpl
rclb
lcall
mov
jnp
sbb
adc
mov
ja
jecxz
ds
test
jge
cmp
and
aad
xor
jmp
dec
adc
cmp
adc
push
xor
ret
call
push
out
xchg
stc
dec
test
negl
xor
xchg
aaa
subl
mov
sbb
dec
xchg
xor
popa
adc
jb
add
lcallw
push
fcmovu
js
stos
mov
pop
sahf
sbb
andb
push
jae
xchg
jg
mov
xor
mov
sub
and
dec
jne
push
es
xor
mov
cmp
pop
ja
mov
in
into
dec
nop
mov
mov
push
out
mov
dec
jae
cmp
icebp
and
or
loop
push
gs
mov
stos
dec
mov
lcall
movsl
cli
adc
xor
aas
dec
adc
or
adc
aam
sub
jle
and
frstor
sbb
mov
scas
iret
dec
pop
lcall
or
add
jl
push
test
sbb
test
mov
repz
fdivrp
pop
rclb
test
jae
mov
adc
jne
mov
mov
pusha
mov
mov
dec
xor
ss
pusha
add
repnz
mov
jg
inc
mov
sbb
sub
add
dec
push
lret
pop
xchg
out
lock
cmpl
mov
stos
dec
mov
cmp
pop
ret
ss
or
daa
inc
nop
inc
xchg
add
add
in
xor
jmp
jg
cmp
fwait
sarl
xor
outsl
push
outsb
jno
jae
das
jge
inc
ja
mov
sub
xorb
fisubrs
in
mov
fwait
jb
and
test
cmpb
jge
pop
shlb
sub
and
rorl
inc
repnz
daa
lret
das
mov
cmp
mov
mov
outsb
out
mov
mov
gs
jle
sub
jmp
inc
mov
ja
leave
es
mov
and
repz
out
mov
jecxz
xchg
adc
pusha
cwtl
out
lods
adc
fwait
adc
outsl
loopne
mov
fld1
stc
shr
cltd
and
mov
jge
xchg
push
or
xor
leave
xorl
repnz
loop
push
jbe
sub
pop
nop
clc
fbstp
sbb
aaa
add
popf
test
xchg
andl
inc
or
add
mov
push
aas
xor
nop
adc
and
xor
call
mov
and
rclb
pop
out
jb
rcl
mov
dec
in
jo
div
jb
into
xor
xchg
mov
punpcklbw
int3
jg
daa
sbb
movsl
lods
jg
icebp
test
insl
mov
xor
mov
loopne
xchg
cmp
lock
adc
gs
adc
mov
add
push
xor
inc
sbb
adc
pop
rol
or
enter
std
cwtl
out
inc
dec
adc
rcr
mov
rol
adc
mov
stc
ret
daa
shlb
addl
out
mov
test
sub
adc
test
jno
test
pusha
rclb
aas
insl
jl
cmp
and
jno
mov
jge
nop
sub
mov
outsl
mov
xchg
icebp
adc
mov
pop
add
jmp
and
int
mov
jg
dec
repnz
outsb
sbb
xchg
andl
pushfw
popl
jp
push
fsubs
add
xor
insl
xor
and
call
js
movsb
shrb
push
and
or
mov
fisttps
das
push
int
push
inc
lret
mov
out
aas
mov
mov
dec
imul
repnz
scas
daa
int
lods
js
out
iret
sbb
lea
test
testb
xor
inc
inc
pusha
shlb
call
xchg
fwait
mov
cwtl
test
jp
add
dec
mov
or
cs
shll
xchg
cmpsb
nop
adc
mov
sub
pop
xchg
push
or
sub
pop
mov
mov
push
cmp
repnz
dec
jmp
or
loopne
jmp
cmp
mov
orb
inc
daa
nop
jne
xor
mov
mov
ret
push
fsubl
cltd
imul
mov
repnz
adc
inc
cmp
xchg
jle
lods
xor
xor
ds
mov
jg
insl
push
in
inc
cwtl
xor
nop
xchg
stos
das
imul
dec
xor
sbb
arpl
mov
mov
or
cmp
inc
fwait
adc
xchg
es
mov
jp
sti
aas
xor
jle
dec
jb
xor
sub
in
sub
sbb
adc
lcall
cmp
in
xor
xor
mov
ss
cs
xor
daa
sbb
mov
and
fmul
mov
cwtl
xor
xchg
pop
lret
jo
movsb
jbe
dec
xor
cmp
loopne
repnz
adc
push
inc
data16
push
lds
cld
mov
push
and
pop
scas
cmp
sbb
and
and
xor
out
pop
inc
xor
mov
inc
popf
xor
adc
dec
xor
mov
pushf
xor
dec
inc
sbb
or
or
cs
xor
leave
jae
xor
jl
mov
sarl
popa
in
pop
gs
int3
das
ljmp
stos
sbb
xor
inc
push
sub
mov
or
add
mov
in
or
idiv
fs
cmp
mov
xor
lods
jle
xor
mov
lea
fnstcw
mov
xchg
push
aaa
movsb
cmp
nop
sahf
inc
add
clc
fs
ss
push
mov
rorl
cmp
push
or
daa
xor
cmpsl
les
into
mov
jmp
movsb
push
pop
pop
pop
adc
hlt
inc
arpl
loop
pusha
or
hlt
sbb
sbb
fidivrl
aaa
movsl
aas
cmp
outsb
cli
in
xor
cmc
jmp
jg
scas
jmp
mull
leave
out
mov
jg
into
and
sti
xchg
dec
out
test
push
cmpsl
fiadds
sub
sub
pop
sbb
cmp
lds
jno
add
lods
jecxz
push
sbb
insb
xchg
push
test
lcall
pusha
xchg
adc
pop
xor
add
loopne
adc
out
outsb
and
adc
fistps
cwtl
sbb
add
fsubrs
mov
scas
das
sub
je
psrad
das
std
adc
sub
sub
cld
mov
xchg
mov
rcrb
xlat
inc
pop
sub
iret
add
orb
bound
push
cmpsb
fnsave
jno
dec
pop
xlat
sbb
mov
mov
mov
test
adc
out
pop
bswap
shll
xchg
jle
sbb
xor
aas
imul
enter
xor
push
sbb
sbb
xor
mov
pusha
fdivs
sbb
lret
pusha
test
popl
test
and
lea
add
int
je
jle
sbbl
add
xchg
out
and
sub
test
insb
mov
add
inc
rcll
mov
data16
jne
cmp
or
dec
aad
test
rorb
clc
mov
or
fwait
fcomps
push
adc
dec
ljmp
jmp
lea
pop
es
out
sub
test
adc
into
xchg
lahf
xchg
pop
xor
inc
shrl
aas
loop
jle
add
sbb
adc
mov
cmpsb
inc
mov
or
in
xor
test
cli
daa
inc
lea
in
cld
test
addr16
xchg
imul
jne
xchg
or
xlat
and
and
fdecstp
icebp
pop
dec
lcall
data16
xor
int3
ljmp
mov
mov
mov
xor
cltd
mull
pop
push
enter
or
mov
xorb
or
lock
mov
fsubp
adc
sbb
push
jo
and
sbb
mov
inc
xor
or
dec
data16
incl
jl
outsb
xorb
add
loope
mov
adc
iret
jl
fwait
jnp
shlb
les
in
and
xor
add
xchg
mov
mov
fnsave
mov
xor
mov
mov
nop
push
xchg
je
in
mov
push
stos
test
pop
mov
xchg
pushf
fistpl
xor
or
cmp
dec
sub
cmp
scas
sub
clc
jg
out
mull
xor
hlt
or
xor
jno
push
insl
push
xor
jmp
in
stos
test
xor
sub
shl
and
add
push
sbb
xor
xor
xlat
pop
in
cmp
dec
das
sbb
in
jbe
inc
das
mov
xor
xchg
pusha
xor
mov
stos
xor
fstps
shll
fs
push
dec
outsb
jns
in
xor
sarb
or
and
adc
in
lods
xor
jns
sbb
jecxz
lret
xor
sti
xor
aaa
testb
push
icebp
jg
cs
lret
pop
js
cmp
mov
and
inc
pop
repz
outsb
mov
js
dec
xor
enter
and
nop
adc
stc
hlt
cs
xor
jno
ret
and
mov
roll
shrl
xchg
rclb
fisttpll
sub
push
jg
inc
xor
xor
xchg
popa
repz
and
mov
and
mov
push
xor
and
fbstp
std
roll
push
adc
sti
vmread
xor
sahf
mov
arpl
pop
adc
pop
into
sbb
mov
fisttpl
cmp
add
dec
or
test
movsl
loopne
out
dec
cmpsl
xchg
add
inc
call
mov
and
adc
mov
add
jl
cs
mov
dec
and
xor
adc
adc
push
mov
adc
push
jno
xor
add
std
lock
and
jmp
jecxz
or
clc
fxtract
test
lds
xor
cmpsl
dec
xchg
mulb
xor
jecxz
and
adc
or
mov
movsl
fsubrs
xor
xchg
pcmpeqw
fldt
jge
imul
and
push
shll
and
mov
inc
mov
mov
mov
xchg
insb
dec
xor
subl
repnz
idivb
loope
mov
ficoms
fildl
xor
fdivr
xor
stos
push
xorb
inc
jl
mov
ja
cli
int
jno
lret
cwtl
sbb
push
fcmovbe
and
aas
xor
xchg
pop
inc
cld
movsl
pop
pushf
mov
xchg
mov
ds
clc
adc
or
and
and
mov
je
bound
push
sahf
xor
jg
sbb
fistl
pop
int
movsl
xor
adc
jnp
jo
fwait
dec
pop
les
mov
inc
xor
or
stos
xor
xchg
jmp
sbb
insl
ja
faddp
repz
mov
or
dec
in
sbb
cltd
pop
add
push
push
and
xchg
mov
and
xor
jbe
xorl
xlat
or
shll
mov
fidivrs
xor
cmp
dec
nop
xor
scas
je
inc
in
add
cmp
cmpsb
shl
test
sub
mov
jno
sub
cmp
pop
add
daa
cld
jecxz
jle
jg
fwait
movsb
mov
addr16
push
push
rcrb
mov
leave
xor
cli
cmp
push
xlat
jecxz
cmp
xorb
sti
push
arpl
inc
filds
aaa
test
push
inc
ja
jae
jo
in
aaa
inc
or
popa
shrb
cld
push
jl
xor
icebp
and
fwait
dec
gs
lock
cwtl
xorl
lea
shlb
push
icebp
inc
xor
repz
scas
or
outsl
or
mov
dec
loop
mov
jbe
cli
xor
repnz
es
mov
popa
lret
sti
sbb
or
ds
stos
push
adc
mov
inc
enter
mov
pop
notb
cmp
loop
sub
lret
or
mov
xchg
ds
loopne
sti
mov
fisttpl
fsubp
cmpsb
lods
in
xor
dec
cmp
out
or
arpl
inc
cmp
mov
push
subl
push
lret
scas
lock
repnz
lods
inc
and
or
nop
out
pop
jecxz
adc
xchg
pop
les
dec
sbb
xchg
iret
aam
fcmove
in
xor
xchg
jns
pop
in
cmp
xor
pop
shrl
lds
mov
or
xor
sub
scas
push
jmp
push
pop
mov
cltd
dec
xor
dec
sahf
fs
fucomp
xor
and
lea
jo
aas
pop
pop
sbb
filds
jg
mov
dec
dec
xor
cmp
lcall
fidivl
cltd
fiadds
rcll
xor
mov
enter
add
fwait
rdtsc
sbb
insl
hlt
out
test
cli
and
jmp
sub
and
jne
xor
lock
sbb
inc
pop
test
xor
xor
jp
mov
xor
jo
mov
xchg
ljmp
xor
and
xor
adc
xor
outsl
adc
push
pop
adc
scas
xor
xchg
xor
mov
lods
adc
mov
adc
xor
test
push
adc
inc
pushf
xor
leave
push
xor
dec
jnp
push
sub
jmp
cld
stos
dec
jae
push
jmp
rorb
aaa
das
hlt
sub
inc
repz
mov
xor
jle
shll
adc
es
pop
push
sbb
jg
xor
aam
inc
sub
in
xor
push
xchg
out
data16
xor
out
jge
movsl
pop
mov
divb
movsb
hlt
adc
shl
xor
enter
xor
xchg
or
jne
push
shlb
and
pop
movsb
xor
push
sti
orl
jo
cmp
data16
outsb
insb
icebp
push
xor
popf
stos
jo
sbb
xor
and
xor
adc
inc
lcall
cmc
cmp
push
pushf
xor
add
mov
mov
xchg
test
icebp
sbb
jecxz
cmpsl
sbb
jns
cmp
arpl
ds
xor
ret
xor
aaa
aam
cwtl
sub
jmp
lret
mov
mov
push
imul
xor
cmp
jo
sbb
xor
paddq
jne
mov
mov
rep
mov
push
xor
jmp
test
addr16
test
adc
pop
outsb
pushf
sub
xchg
push
insb
mov
inc
fcoml
jp
mov
dec
pop
xor
lock
mov
or
mov
cmpl
xor
fcomi
notb
or
or
aas
and
hlt
dec
lods
pop
adc
sbb
xchg
inc
inc
mov
mov
cmp
pusha
adc
cmp
repnz
xor
cmp
inc
mov
arpl
divl
lea
test
xchg
push
jae
xchg
inc
or
aaa
bswap
mov
lock
mov
jns
pop
mov
popf
jg
xor
adc
inc
and
dec
sti
xor
cvtpi2ps
or
xor
jbe
scas
jge
add
xor
in
clc
hlt
sti
in
out
sbb
fisttps
rclb
sbb
xor
inc
aad
aaa
pop
pop
adc
rol
into
das
push
xchg
xchg
scas
add
out
pop
lds
lock
adc
mov
orb
test
mov
fimuls
mov
test
sub
aad
aas
cmc
aaa
scas
int
pop
leave
addr16
add
test
cltd
test
mov
cmp
mov
mov
es
mov
pusha
stos
pop
fucomp
pop
push
fcompl
cmp
cmp
xor
mov
jge
in
xor
mov
and
xor
jne
outsb
lahf
imul
jbe
fimuls
mov
nop
lds
out
ret
movsl
sub
pop
aas
jle
xchg
test
adc
add
jo
push
xchg
cmp
mov
sub
fldenv
cmpsb
mov
aas
repz
xchg
mov
pop
bound
int3
cmc
xchg
cmp
xchg
xchg
pop
xor
xchg
daa
loop
lods
inc
jae
test
shlb
mov
popf
ljmp
adc
xchg
in
xor
lret
push
jge
jmp
xchg
xchg
dec
loopne
mov
adc
xor
mov
in
test
jae
ret
shlb
fs
test
cmp
outsl
mov
insl
ret
aaa
and
xor
mov
mov
add
push
xchg
inc
xor
mov
clc
xor
cmp
xor
les
adc
icebp
add
repz
les
aaa
mov
out
sub
imul
jae
sbb
push
imul
fiadds
inc
cmp
mov
pop
xor
lods
aaa
cmpsb
dec
out
scas
das
je
push
cmp
mov
jmp
sub
fs
bound
push
mov
out
xor
adc
xchg
xor
cld
icebp
ljmp
aam
das
inc
pusha
cmpsb
insb
lahf
aaa
dec
daa
fnsave
les
mov
xor
call
imul
jne
fmulp
cmp
pop
and
jb
xor
fsubrs
in
loop
or
ja
add
cmp
and
push
inc
mov
pusha
sub
or
aaa
jmp
dec
push
ret
aam
int3
and
fnstcw
cltd
cwtl
inc
and
aaa
jnp
jbe
subl
or
ss
xor
ja
aas
test
inc
push
and
sub
lds
xor
mov
es
repnz
or
xor
mov
xor
and
stos
adc
rorl
adc
inc
and
push
xor
std
xchg
adc
fprem
inc
sarl
xor
xchg
call
adc
sti
mov
nop
lods
inc
xor
pand
xor
mov
lea
ret
mov
mov
loop
add
sar
xor
ds
loope
jmp
cld
jno
xchg
mov
jae
cli
rolb
mov
push
mov
cs
fildl
adc
mov
roll
inc
fcompl
xchg
mov
aas
lock
adc
mov
or
inc
adc
dec
and
insb
fwait
mov
ljmp
insl
out
lock
jno
sub
cwtl
in
ret
push
cmp
imul
jmp
popf
sub
pushf
sub
inc
out
fbstp
call
pop
cltd
mov
lods
in
push
mov
insb
decl
and
shrb
mov
cmp
sahf
sbb
push
js
aad
add
add
xchg
push
adcl
pop
and
jge
int
outsl
cmpl
test
xchg
lea
bound
pusha
sbb
mov
sub
dec
stc
fldcw
xor
lcall
adc
stos
mov
outsl
fcmove
jns
movsb
pop
adc
lret
fldcw
shll
mov
sbbb
cmp
mov
xor
xchg
mov
cmc
push
pop
mov
rcll
push
iret
adc
dec
mov
adc
cmpsl
mov
mov
jge
inc
add
ret
sbb
xor
mov
outsl
sub
stos
punpckhdq
adc
notb
inc
pop
mov
mov
inc
fnstenv
jmp
sarl
adc
iret
cmp
call
lea
jae
loop
data16
pop
mov
push
jno
jl
cmp
lret
adc
mov
enter
and
pop
sub
repz
xchg
adc
inc
jae
add
out
pusha
xchg
mov
xchg
in
rorb
pushf
push
aad
mov
adcl
ljmp
jp
inc
fwait
or
push
xchg
xchg
lods
mov
loopne
test
lock
aas
push
movsl
and
movsl
or
aas
sbb
fistps
cmc
push
ljmp
idivb
aad
mov
mov
gs
push
aaa
cmp
jns
data16
stc
cmp
pop
outsl
pop
add
loope
jbe
fwait
sub
inc
lods
fldt
or
mov
mov
cs
lret
sahf
fwait
or
int3
gs
or
fdivr
gs
add
aas
push
pop
js
mov
inc
mov
fists
into
pop
into
cld
mov
das
hlt
notl
add
fsubrs
xchg
in
lock
or
push
mov
jo
jno
add
xor
repz
sub
jmp
push
mov
aad
aad
ret
data16
sbbb
mov
or
imul
daa
data16
xorb
pop
addr16
ja
push
mov
sbb
pop
cmp
test
mov
mov
sub
mov
lea
add
nop
cmp
ret
push
mov
fdivs
faddl
imul
mov
push
mov
shll
lods
pop
js
aas
ret
lods
mov
sbbl
lods
sbb
cld
stos
add
or
add
pop
cmp
test
scas
xor
data16
icebp
ret
vpmulhuw
stc
cmp
dec
pop
mov
fidivrs
push
xorl
leave
and
stos
push
ds
shlb
in
gs
push
cmp
add
jbe
nop
mov
sbb
aaa
inc
cmpsl
outsb
ss
stos
jo
cli
xor
dec
rdtsc
roll
sub
aaa
xchg
popf
pusha
sub
push
dec
in
out
xor
mov
xor
iret
mov
pop
adc
lret
icebp
and
inc
mov
jae
test
pop
xlat
jo
add
iret
loopne
dec
aad
lock
mov
popa
mov
add
push
or
movaps
cmc
popf
cmp
loopne
jbe
xchg
mov
sub
adc
scas
push
sbb
or
loop
push
cmpsb
lock
shrb
mov
ret
sub
jmp
aas
dec
or
stos
outsb
rolb
adc
xchg
lea
fwait
out
inc
adc
cmp
mov
dec
sbb
mov
jno
popa
jbe
popfw
inc
sub
xchg
lods
test
dec
imul
mov
int
pusha
mov
cli
inc
adc
mov
stc
cmpsb
popf
test
test
lods
xor
xchg
lock
mov
out
add
lret
stc
popa
cmp
fmull
data16
xchg
das
insl
nop
xor
lahf
cli
lret
xor
jo
das
add
lea
xchg
cmp
rclb
sub
mov
sbb
sbb
and
enter
jbe
rcrl
lds
and
enter
into
push
cmp
and
cmc
sbb
mov
sub
push
pop
or
add
adc
or
rclb
and
mov
mov
sbb
stc
sub
lret
push
pusha
mov
sbb
negb
mov
loopne
sub
das
cmp
xchg
pusha
and
push
lcall
xchg
mov
loop
mov
into
pusha
mov
mov
adc
pushf
stos
jns
adc
or
shll
icebp
clc
sbb
and
pop
enter
test
lret
push
icebp
fcmove
and
int3
xchg
rol
outsl
mov
mov
sbb
cwtl
mov
sar
hlt
xor
inc
clc
ljmp
std
js
jne
clc
and
mov
enter
in
add
pushf
mov
imul
adc
shrl
sbb
stos
cltd
enter
clc
mov
pop
and
mov
mov
mov
jo
call
adc
lret
inc
pusha
icebp
pop
ret
adc
clc
int3
decw
sbb
js
lock
cmp
popf
lods
and
jno
add
mov
push
xor
add
stos
cltd
in
adc
dec
pop
dec
add
inc
jb
stos
xchg
mov
in
lock
jne
outsl
into
push
scas
and
int3
arpl
iret
loop
mov
shll
pop
adc
in
and
imul
adc
mov
nop
mov
jmp
mov
insl
lock
andl
adc
shrb
pop
icebp
or
adc
push
popf
clc
lahf
mov
cli
mov
ljmp
fsts
push
enter
pop
and
or
mov
or
loope
or
subb
enter
into
sub
int3
jge
xor
or
xor
xchg
mov
mov
or
xchg
push
fwait
rorb
call
add
ret
loopne
push
pushf
clc
fadd
xor
xor
cmpsb
fstl
push
shll
and
jno
pop
and
inc
mov
cmp
test
icebp
sub
cwtl
push
fbstp
xor
xor
mov
cmc
pushf
cmp
mov
xchg
dec
sbb
push
rol
cmc
shrd
jmp
mov
mov
jge
aam
jae
jle
sbb
push
scas
ljmp
inc
sti
sbb
add
testl
add
mov
sub
xor
jae
push
movsl
lret
xchg
dec
mov
dec
dec
fs
inc
push
sbb
lcall
sahf
cmpsl
cwtl
das
xchg
stos
adc
adc
mov
dec
xor
fs
inc
pusha
mov
call
push
call
jb
push
outsb
mov
enter
fucomip
xchg
jne
mov
cltd
jno
pop
push
xchg
jle
dec
mov
pop
sbb
push
mov
mov
bound
jb
mov
cmp
sbb
or
hlt
test
mov
pusha
pop
mov
or
aam
fsts
xor
aas
dec
in
fbld
imul
push
pusha
in
pop
out
xlat
lcall
popl
pushl
pushl
ret
add
pushf
movb
lea
jmp
push
call
lea
jmp
bt
clc
lea
shr
shl
rcr
mov
pusha
sub
push
add
stc
bts
add
add
sbb
bts
mov
call
mov
ss
cmp
shrb
in
add
sbb
mov
jne
sti
jge
and
lahf
mov
mov
sti
rcrl
cmc
test
fbld
test
nop
movsl
adc
cmp
lods
dec
and
add
cmp
sbb
test
nop
shll
lea
mov
pushf
mov
pusha
lea
jmp
popa
imul
es
lods
push
cld
push
jg
jl
std
push
stc
push
arpl
mov
or
mov
jno
scas
xchg
repz
push
fxch
jecxz
ja
and
pop
mov
push
loop
sub
add
xchg
mov
jge
sbb
jmp
mov
push
sub
nop
and
xchg
xlat
lcall
pusha
cmp
cmp
add
mov
mov
add
jmp
jmp
bt
cmp
jmp
inc
add
subb
scas
adc
xor
xchg
jge
mov
xchg
repz
mov
xchg
cs
lcall
call
push
push
mulb
loop
out
loop
jmp
int3
adc
fstl
xor
mov
repnz
jnp
jl
xor
mov
add
sub
sub
push
aas
popf
clc
fwait
mov
cmp
pusha
imul
mov
test
add
cmpb
xlat
lcall
aad
inc
sbb
mov
jo
jae
icebp
push
ja
cld
xlat
jo
js
pushf
sbb
jns
jl
jo
dec
stc
and
add
add
adc
aam
std
ficoml
xor
cltd
xchg
mov
ljmp
push
imul
and
jo
loopne
sbb
xchg
movsl
cmp
jns
ret
pop
push
stos
inc
pop
jmp
scas
jmp
jecxz
ds
push
jbe
xchg
sub
shrl
imul
leave
jle
inc
data16
inc
shlb
fstpl
cmp
xchg
mov
xor
pop
fdivs
popa
and
hlt
push
je
lods
ret
inc
incb
push
sub
shlb
jno
int3
jo
test
movsl
or
movsl
data16
or
movsb
push
daa
adc
sbb
adc
dec
fcmovnu
out
icebp
mov
xchg
test
xlat
lcall
sbb
mov
sahf
mov
mov
mov
push
jb
jle
jae
in
pop
mov
xchg
cli
leave
in
int
ret
pop
call
sahf
in
lret
std
popa
loopne
or
cmovg
hlt
aam
or
pop
mov
mov
jl
lods
scas
std
rol
add
push
cmp
mov
or
mov
lcall
xor
incl
add
push
pushl
push
add
stc
clc
pushf
movzwl
test
mov
bt
test
clc
add
test
stc
mov
cmp
call
push
call
cmp
inc
cld
mov
pushf
movl
pushf
call
bt
stc
clc
repnz
movb
lea
jne
test
mov
shl
bsr
sub
not
mov
push
cmp
sub
push
pusha
pushl
popl
bt
cmp
pushf
lea
jle
ja
stc
jmp
pusha
or
pushl
lea
jne
bswap
mov
push
push
pusha
push
pushf
popl
bt
jmp
sub
pushf
call
lea
jb
pusha
pusha
pushl
ret
push
call
jg
mov
pushf
mov
sub
btr
dec
mov
pusha
cmp
mov
lea
jbe
bsr
shld
bt
mov
sbb
add
clc
jmp
push
call
sbb
sub
jle
int
stc
pop
cmc
pop
lock
jb
ja
neg
push
int
arpl
sti
inc
sarb
test
dec
cmp
and
mov
sbb
push
mov
push
cs
pop
out
xchg
cmpsl
mov
mov
mov
mov
xor
mov
xlat
lcall
cmp
add
bt
test
mov
and
btc
mov
cmc
stc
cmp
pusha
jmp
mov
jecxz
jecxz
in
dec
pusha
dec
in
addr16
jbe
jecxz
inc
inc
aas
popf
scas
test
add
popf
das
cld
add
xor
add
and
mov
mov
add
jns
sbb
shr
xlat
jmp
xlat
out
xlat
lcall
mov
push
ds
shrb
inc
jmp
push
dec
cwtl
stos
push
dec
fbstp
daa
pop
mov
add
pop
ja
inc
daa
push
xchg
push
imul
cmpl
daa
push
pusha
jns
mov
or
jmp
cltd
sub
frstor
jecxz
out
loope
imul
pcmpeqb
aad
push
outsl
and
or
mov
loopne
fs
clc
lret
sbb
jge
daa
mov
cmp
popa
mov
dec
mov
les
add
test
frstor
cmp
sub
popf
repnz
fimull
aad
cwtl
icebp
stos
xchg
push
jge
loope
ret
fsub
pop
jne
and
mov
outsb
loop
xor
adc
cld
xor
movsb
mulb
mov
cmc
push
mov
aas
cmp
js
push
push
jne
mov
mov
mov
push
mov
xlat
lcall
and
call
cwtl
and
cltd
and
and
dec
push
inc
std
dec
xchg
mov
in
sub
loopne
repnz
xchg
aas
xchg
sarl
inc
sar
fisubl
push
dec
mov
fs
sarb
inc
adc
int
scas
pop
cmp
mov
xchg
mov
xchg
xlat
lcall
xor
call
push
lea
jne
push
mov
pushf
pusha
push
pushf
popl
pushl
or
jmp
pushf
mov
mov
pushf
movb
pushl
ret
lea
ja
pushf
call
push
call
sbb
mov
push
call
js
pop
jns
push
call
push
adc
pusha
push
movzbw
lea
mov
movzwl
not
push
lea
pushf
movsbw
mov
mov
lea
call
jmp
pop
sbb
sbb
fsubr
pop
pusha
fsubrl
sbb
and
mov
xchg
scas
lahf
or
jg
cmc
dec
xlat
inc
rcll
divb
xor
sbb
movsbl
mov
pushl
pushf
jmp
lea
mov
or
add
adc
push
cmp
imul
cmp
push
ja
jg
adc
cmpb
cmp
push
movsb
push
iret
cmpsb
adc
outsl
adc
sbb
outsb
shr
fdiv
insl
faddp
xchg
xor
push
lds
stc
dec
cli
sarb
inc
cld
inc
xlat
lcall
subb
cld
cmc
add
adc
add
je
jns
je
insl
dec
outsb
jne
cmp
jmp
and
subl
daa
mov
add
lea
cmp
leave
ficoml
lods
shll
in
lahf
test
pop
inc
clc
pop
popa
icebp
sbb
rclb
mov
popa
imul
fwait
sub
jge
xchg
imul
lahf
loopne
fstp
mov
sahf
jo
hlt
std
xchg
scas
cmpsl
faddl
cmp
pop
sti
push
addr16
mov
std
jg
es
inc
je
repz
hlt
dec
jo
hlt
dec
xlat
lcall
add
call
xchg
xor
clc
inc
imul
pop
sub
lods
sbb
mov
jbe
pop
sub
jne
sbb
add
std
stos
shlb
jnp
mull
inc
cmp
adc
ss
loopne
jne
addr16
cmp
sbb
xchg
lods
adc
lcall
cmc
push
negl
mov
xor
movsb
mov
push
scas
mov
loopne
jmp
insb
shlb
insb
shr
jno
pop
adc
sbb
fisttpll
dec
cmp
lods
xchg
or
lret
test
pop
jo
loop
and
in
xor
jbe
in
aaa
pop
pop
adc
lds
dec
hlt
or
dec
mov
adc
push
test
sub
stos
gs
rclb
imul
mov
sahf
and
scas
and
xor
mov
sub
adcb
int3
fidivrl
leave
loope
stc
incb
xlat
lcall
add
jae
add
push
push
push
jmp
inc
clc
pop
icebp
int3
jecxz
imul
inc
in
into
push
shrw
add
add
lods
cld
fdivrs
adc
or
sarb
out
es
xor
sub
iret
jno
push
addb
clc
push
in
in
pop
cmp
popf
loop
in
test
xchg
mov
sahf
cmpsl
sbb
xlat
lcall
inc
data16
adc
outsl
enter
shr
imul
jl
jl
addb
scas
fdivp
ret
ret
in
mov
sti
sub
sub
xor
int3
xchg
push
popa
pop
out
push
int
out
popf
cmp
jnp
pop
call
out
jnp
addr16
js
js
ja
hlt
leave
ja
jg
xlat
lcall
mov
sub
and
xchg
in
xchg
mov
mov
xchg
mov
and
push
jge
dec
ja
jp
fs
push
gs
dec
rcrb
mov
xchg
dec
and
xchg
mov
and
out
xlat
fsubrl
and
loop
jbe
pop
jno
enter
jp
xchg
test
adc
or
pop
xchg
mov
cmp
dec
sbb
mov
setl
mov
test
mov
cli
xchg
fsubrs
insl
push
loope
out
in
in
pusha
xlat
lcall
movsb
mov
test
xor
enter
dec
loope
or
xorl
int
fistpll
scas
xor
xor
dec
mov
sbb
pop
cs
scas
push
cmpsb
xlat
lcall
enter
add
mov
mov
lea
push
movb
jmp
lea
mov
movzbw
not
lea
pushf
mov
mov
not
mov
pusha
pushf
mov
bswap
pop
push
mov
mov
pushl
ret
mov
pusha
cmp
jmp
cmc
cmc
cmc
pusha
add
call
jmp
lea
lea
call
mov
call
lea
jae
cmc
pushf
call
lea
ja
push
bt
stc
jmp
add
and
mov
cwtl
ss
xor
mov
push
fiadds
lret
mov
dec
sub
lret
sub
loope
jb
xchg
inc
jmp
pop
push
mov
jg
xor
mov
cmpsb
dec
mov
cmc
mov
andl
mov
mov
repnz
jns
sti
enter
movsb
mov
ret
pop
icebp
cmp
push
clc
pop
jg
jp
jns
jg
fisttpll
aaa
in
cmpb
lret
iret
push
addb
iret
jle
aad
in
ret
lret
sbb
push
jb
mov
dec
insl
push
sbb
out
jecxz
shl
out
loope
data16
push
data16
jecxz
gs
lcall
adc
mov
xchg
aam
push
fdivrl
xchg
mov
orb
rclb
inc
lock
mov
mov
lahf
out
nop
imul
or
mov
dec
add
fldcw
ret
sub
dec
jnp
mov
mov
imul
popa
fldz
xlat
out
insl
xlat
lcall
call
sub
or
pop
mov
out
dec
xor
aas
cwtl
mov
ds
sub
nop
mov
mov
push
mov
arpl
stos
outsl
push
repnz
fcomp
into
std
in
sahf
daa
inc
jns
xchg
and
and
iret
fimull
xor
scas
mov
or
mov
lds
add
mov
pop
ljmp
jne
jns
incb
mov
mov
cmp
push
je
sar
shr
push
popa
push
pusha
push
call
movsb
popa
jbe
xchg
and
out
xchg
fdivr
aad
pop
stc
push
out
adc
stc
insl
mov
push
cmp
sar
jns
arpl
icebp
in
lahf
sub
mov
xchg
stos
js
insl
mov
hlt
int
mov
fisttps
movsb
or
ds
xor
mov
test
mov
inc
in
inc
jmp
insb
ror
int3
mov
rclb
mov
push
test
jns
jle
cmpb
pushf
mov
cmp
mov
andl
scas
push
mov
push
test
sbb
lcall
pushf
movb
pushf
lea
jmp
xor
pop
pop
out
ret
test
or
or
push
subl
mov
pop
xorb
ret
ja
push
pop
sbb
sbb
cld
fwait
movsb
mov
daa
not
in
ret
lods
pop
scas
in
aam
cmp
push
mov
sub
and
sub
es
mov
or
gs
imul
dec
out
arpl
movsb
jae
pop
xchg
jbe
or
cmpsl
sbb
pop
bound
inc
dec
icebp
addl
push
pop
in
mov
add
jo
loopne
test
fildll
jge
int3
dec
inc
add
xor
clc
mov
push
and
insb
dec
push
mov
roll
out
pop
pusha
aam
push
gs
loop
jmp
lcall
cld
pop
jmp
adc
aaa
xchg
mov
pop
cmc
fdiv
pop
testb
ss
cs
cmp
enter
xlat
pop
inc
test
cmp
inc
repz
popa
pop
inc
jnp
addr16
outsb
lret
inc
roll
sarl
dec
in
adcb
push
sub
imul
pusha
pop
imul
imulb
pop
stc
insl
stos
imul
pushf
movsl
jbe
jbe
stc
int
dec
xlat
lcall
add
lods
add
cmc
dec
ss
jb
repz
jbe
jns
loope
xorl
push
ret
and
push
dec
loop
jne
jne
addr16
add
outsl
testb
enter
mov
mov
test
dec
lods
sbbb
mov
outsl
inc
cli
popa
int3
je
fsubs
sbb
repnz
push
imul
sbb
ja
sahf
add
dec
insb
aad
jmp
je
stc
inc
jns
jbe
jg
lcall
xchg
cmc
stc
add
pusha
pusha
cmp
call
pusha
clc
cmp
sub
test
cmp
mov
pusha
movb
lea
jae
push
pushf
pushf
push
lea
jmp
rorl
dec
ljmp
cmpb
aaa
pop
add
pusha
js
push
das
add
cmpsl
xchg
sub
mov
cmc
enter
fwait
call
mov
push
lods
sbb
xlat
lcall
and
cmp
pusha
call
add
outsb
dec
call
stos
mov
cmpl
jbe
and
lds
outsl
push
movsb
push
dec
out
inc
inc
jbe
dec
cwtl
pop
hlt
mov
mov
inc
out
ljmp
pop
clc
js
cli
xlat
rep
nop
std
nop
or
mov
lea
sahf
adc
jl
out
add
mov
les
out
adc
inc
incl
inc
jl
dec
cmc
inc
repz
jae
lcall
mov
dec
call
mov
pusha
mov
pushf
push
mov
lea
jmp
inc
cmc
pop
lock
adc
js
lock
fidivrl
jb
js
out
mov
test
mov
push
ret
faddl
inc
jge
into
in
sarl
into
les
push
lods
leave
and
and
adcl
add
or
stc
push
jb
out
sti
jge
add
xchg
mov
icebp
mov
inc
pusha
jecxz
loop
dec
fistpll
cwtl
and
pop
daa
adc
sbb
sahf
fildl
dec
call
pop
cld
pop
xor
test
stc
mov
pushf
pushf
popl
pusha
stc
cmp
clc
or
push
lea
jne
bt
popf
pushf
pushf
pusha
push
lea
jmp
jmp
push
call
sbb
push
push
call
mov
xor
sti
pop
out
jno
push
pop
das
or
mov
cmpsl
or
fildll
adc
es
jle
jno
push
pop
and
into
dec
sbbb
jmp
cmc
pop
jge
sbb
cmp
sahf
in
fsubrp
into
add
pshufw
enter
leave
hlt
ret
jb
xlat
lcall
pop
ljmp
dec
cmp
add
add
lea
cli
add
cmp
subl
xlat
in
add
je
jno
mov
ror
bt
xor
jmp
pusha
call
test
test
pushl
popf
movb
push
pushf
lea
jmp
stc
dec
out
divb
int3
out
inc
sti
rcrb
sahf
ror
push
xchg
std
xchg
in
jmp
push
outsl
mov
lret
pop
pop
cld
std
mov
jecxz
mov
jl
push
adc
loope
ret
jp
pop
sbbl
fs
jne
insl
pop
or
jg
fstpl
in
jmp
push
data16
lcall
and
je
stc
cmc
sub
clc
cmp
jmp
jmp
les
test
mov
push
jge
jns
jb
stc
mov
adc
enter
or
icebp
sbb
mov
lret
insb
jo
sti
inc
insl
push
jmp
mov
test
jno
js
jge
mov
movsl
add
adc
push
jns
jge
adc
or
or
loop
or
loopne
dec
popf
mov
lods
push
shrl
jg
pop
ja
icebp
shl
pop
pusha
insb
js
pop
rclb
stos
mov
xor
cmp
mov
xchg
inc
mov
popf
stos
cwtl
pop
inc
pop
lret
out
fdiv
push
push
gs
xlat
lcall
jecxz
scas
jmp
movl
movb
cwtl
lea
jmp
in
and
sub
xchg
mov
stc
push
call
aad
fisttpl
mov
add
comiss
mov
jg
gs
hlt
out
stos
shrl
pop
jb
shr
addr16
out
mov
cwtl
aas
add
push
mov
mov
or
mov
lcall
and
xchg
sub
test
add
pusha
pusha
movw
mov
lea
jmp
jb
add
btr
mov
test
and
bt
add
pushf
lea
jmp
pushl
popl
pushf
pushl
pushl
ret
movsl
test
shlb
push
sub
fdivr
fdivp
push
rclb
out
test
cmp
jb
sbb
sbb
mov
aaa
xor
shlb
fwait
pop
jl
and
mov
fwait
xchg
jecxz
imul
adcb
dec
adc
gs
mov
mov
mov
mov
lcall
xchg
dec
call
shl
sub
jg
add
adc
cmp
inc
add
insl
push
lea
je
jmp
pop
pop
sti
fucomp
mov
shl
push
jb
jg
jne
repz
ja
bound
sbb
cs
ljmp
rclb
push
imul
add
subl
pop
dec
dec
inc
pop
insb
lret
lods
fnstcw
jp
pop
sbb
xor
shrl
adc
out
pop
fisubs
loope
loope
pop
xlat
lcall
fdivrs
shl
pushf
lea
je
push
call
push
call
std
pusha
setbe
bswap
pusha
mov
lahf
movl
cwtl
cwtl
push
lea
jmp
pushf
movl
movb
call
pusha
movw
pushl
popl
movw
push
push
pushl
ret
movl
call
xchg
cltd
xor
push
adc
jg
sbb
sbb
adc
movsb
jmp
out
lock
dec
mov
andl
pop
fwait
js
loop
in
add
sub
test
cmpsb
fwait
and
sub
lcall
mov
movl
mov
pushl
popl
mov
pushl
ret
push
call
es
pop
push
call
mov
lea
je
shrd
pushf
add
add
sub
mov
movb
add
jmp
lea
je
shl
dec
not
mov
rcl
btr
mov
cmp
push
bt
pusha
sub
test
test
lea
jg
cmc
shr
test
cmc
call
xchg
cwtl
mov
roll
inc
pop
pusha
inc
popa
leave
out
or
sbb
xor
movsb
and
mov
dec
aam
jne
out
push
imul
jno
loop
mov
pop
jne
inc
imul
push
or
cmp
xchg
xor
jge
test
xor
cltd
lcall
les
arpl
les
into
cmp
loopne
stos
push
inc
pop
clc
add
lock
mov
mov
ja
inc
push
add
in
icebp
imul
pop
sub
pop
ror
sar
ret
jns
jge
js
jnp
icebp
xlat
lcall
frstor
fcomi
dec
xor
mov
xor
sub
push
xchg
icebp
imul
fimuls
addr16
ljmp
jb
in
jbe
enter
push
out
out
jno
cltd
jmp
pop
in
adc
jecxz
test
inc
jne
scas
mov
mov
adc
sbb
adc
mov
sub
fsubl
leave
out
inc
addr16
loop
jne
jmp
or
dec
lcall
jecxz
sbbl
fimull
mov
in
dec
stos
imul
xchg
scas
adc
lods
nop
cs
cmp
ret
mov
fcompl
cmp
sti
clc
inc
ljmp
cwtl
daa
dec
aaa
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
xor
inc
imul
inc
pop
and
push
loope
or
fwait
popf
mov
jo
pop
arpl
aad
inc
inc
out
push
jmp
xchg
scas
test
and
ds
cld
jmp
dec
enter
sub
push
sbb
adc
adc
jne
adc
pop
aas
addr16
fistl
push
fisubrl
fldenv
and
and
mov
into
jae
popf
clc
cmp
sub
add
pop
mov
lcall
and
je
pusha
cmp
movw
sub
mov
stc
pusha
bt
cmp
pushl
jmp
pusha
cmp
lea
jle
ja
inc
push
mov
inc
inc
push
call
xchg
scas
push
xlat
or
add
lock
or
add
add
add
iret
push
push
xlat
xor
add
sub
lret
push
xlat
sub
add
jo
mov
xlat
iret
add
add
iret
lds
add
push
ds
xchg
push
push
xlat
pusha
add
add
and
push
add
add
out
push
testl
push
xor
out
stos
add
cs
push
xlat
fs
add
negb
push
xlat
and
add
jno
pop
outsb
xchg
xchg
push
xlat
in
add
add
arpl
mov
bound
add
sub
push
xlat
and
add
or
push
push
xlat
or
add
mov
adc
icebp
push
push
xlat
fistl
add
adc
movsb
int
mov
mov
add
gs
int
pop
push
push
xlat
aaa
push
add
mov
leave
daa
jmp
add
add
aaa
mov
xlat
xchg
or
add
mov
push
xlat
xor
add
test
adc
xlat
cwtl
add
add
sbb
push
lret
xlat
add
in
push
out
adcl
or
aas
neg
bound
or
add
add
push
xlat
wbinvd
add
mov
bound
pop
add
add
xchg
push
add
add
add
xchg
inc
sbb
mov
cmp
adc
je
add
pop
lret
add
xlat
sub
add
mull
fwait
bound
xlat
filds
add
sahf
iret
push
pop
fiaddl
add
rclb
push
xlat
and
add
push
inc
fistl
push
xlat
dec
add
add
xchg
pop
out
mov
call
push
call
mov
ds
call
and
push
dec
call
insb
cld
pop
push
call
jge
xor
fistpll
mov
outsb
ret
in
movl
leave
inc
mov
push
imul
cmp
push
inc
mov
sarl
xor
test
in
fsubs
cmp
mov
sbb
sub
sub
jecxz
lea
jb
stc
cmc
call
pop
lods
push
mov
cmc
dec
pop
jge
not
js
jg
js
jae
outsl
dec
cld
daa
std
mov
nop
imul
mov
push
cltd
and
out
inc
mov
jle
push
gs
cmpb
daa
fwait
mov
mov
lahf
sub
cmpsb
pop
bound
jle
mov
mov
fistpl
push
sbb
pop
repnz
out
jmp
xchg
bound
call
scas
push
out
dec
sub
push
jge
clc
pop
clc
push
cld
push
jp
out
push
cmpb
inc
mov
in
adc
lret
or
inc
adc
lret
or
add
pushf
mov
pop
inc
sbb
xorb
xchg
sub
ljmp
xor
mov
xlat
lcall
sub
adc
mov
pop
jle
jo
negb
cmp
sbb
fld
jnp
inc
push
add
jp
ss
test
add
mov
mov
sub
lahf
mov
and
fldcw
call
adcb
popf
sub
aad
xor
out
data16
cmp
mov
or
lcall
push
jl
jl
jg
call
push
ljmp
or
push
icebp
xor
clc
int3
jne
ja
mov
repnz
loop
iret
mov
sarb
invd
mov
cmp
mov
xlat
lcall
popl
push
pushf
pushl
ret
enter
into
loopne
lds
push
cs
and
sbb
ja
hlt
cmp
inc
std
dec
dec
push
jnp
jg
jno
std
stc
inc
xchg
andb
dec
call
sahf
imulb
jg
shll
xor
mov
pop
es
in
loopne
outsl
dec
insl
lret
je
sbb
fwait
int
push
pop
loop
add
xor
in
lea
inc
mov
hlt
mov
dec
push
mov
lea
jecxz
sub
rcll
and
idiv
adc
add
cs
lods
shll
add
lahf
or
mov
pop
sbbl
mov
sti
inc
jl
and
fs
fisubl
out
arpl
pop
loopne
out
push
xlat
lcall
fstl
call
jne
in
lea
je
cmp
bt
sub
clc
pusha
cmc
mov
btc
dec
call
push
call
xchg
jmp
xchg
sarb
jg
call
js
jns
repz
testb
cmp
mov
xor
pop
sub
scas
adc
or
or
in
push
fldcw
dec
les
or
xchg
pop
mov
mov
lcall
or
and
aam
lds
and
mov
adc
aam
fldcw
push
call
adc
xorb
fcomps
and
test
mov
add
test
and
xchg
sub
pop
adc
xchg
fwait
add
or
test
adc
xchg
jo
inc
lock
and
aam
mov
pop
negb
or
mov
sub
popf
icebp
mov
jns
fcoms
das
xor
mov
xor
push
inc
inc
stos
fwait
mov
daa
xchg
mov
adc
mov
mov
fstpt
add
add
xorb
cmp
adc
add
pop
jmp
call
rclb
xor
cmp
jmp
test
inc
daa
sub
inc
cmp
sbb
mov
roll
js
sub
cmc
jl
xchg
push
dec
fstpt
in
mov
icebp
out
fs
popa
push
fbld
xlat
lcall
pushf
lea
call
call
ja
push
inc
in
xor
mulb
scas
subl
shl
mov
add
test
enter
mov
shl
iret
loopne
adc
sarb
stos
xchg
out
ud1
loopne
or
cmp
xor
test
fwait
mov
cmpsl
jmp
test
xchg
mov
iret
sub
lahf
into
jae
daa
stos
mov
add
mov
lret
decb
pusha
and
or
lret
out
div
int
dec
js
repz
jl
lcall
mov
cmp
fyl2xp1
aam
je
inc
jno
je
jae
inc
jo
adc
xorl
out
out
push
xchg
ss
mov
xchg
inc
jae
rorb
adc
push
pop
mov
cwtl
add
jns
or
add
push
stos
lret
cwtl
dec
jl
sarb
js
pusha
push
mov
mov
push
popf
mov
xor
mov
cmc
repz
js
stc
dec
jns
jge
cli
xlat
lcall
cmp
inc
add
fists
call
mulb
lea
jne
jmp
and
inc
out
push
or
cmp
mov
xor
pop
sbb
cwtl
and
pop
stc
es
test
or
xor
mov
and
mov
mov
inc
or
dec
mov
jno
sbb
mov
pop
loope
or
cmpsl
xchg
movsl
cwtl
lods
sbb
xchg
sub
xlat
lcall
dec
loopne
repz
mov
mov
mov
shll
stc
fprem1
pop
in
mov
lds
dec
sub
aaa
cmp
dec
sets
add
inc
push
xchg
test
xchg
mov
call
inc
sbb
pop
add
ss
es
add
cmpb
sbb
inc
add
dec
jmp
div
ljmp
scas
add
cli
aad
dec
popa
aad
into
arpl
mov
xchg
mov
mov
xchg
mov
or
jae
mov
xor
push
fldcw
xchg
cmpsb
aad
lret
rorl
jecxz
jmp
pop
jmp
mov
add
add
jo
arpl
dec
in
call
enter
leave
ret
std
jnp
iret
pop
pmuludq
and
sub
pusha
jmp
pop
and
xor
rolb
inc
cmp
pop
inc
xor
push
add
iret
scas
nop
aas
outsb
inc
in
loop
popa
shll
in
shl
pop
arpl
xlat
lcall
insb
and
pop
lea
pushf
stc
test
pusha
mov
stc
test
jmp
imul
pushf
add
push
lea
jmp
pushf
pushl
pusha
xchg
pushl
pushf
call
push
call
xor
cmpsb
push
dec
call
sbb
je
or
inc
and
stos
add
and
movsl
add
movb
pushf
pushf
pushl
popl
pushf
push
pushl
ret
sbb
nop
fs
xchg
neg
clc
pop
cli
pop
jae
jae
ja
rorl
cmp
loopne
pop
mov
inc
outsl
inc
out
rorl
xor
mov
and
ret
cmp
fisttpll
push
insb
aam
push
push
push
out
push
xlat
lcall
ljmp
pushf
pusha
mov
pushl
movl
bswap
pushf
mov
xchg
mov
xchg
movzbl
lea
not
mov
movsbl
mov
xchg
mov
pop
mov
push
pushl
ret
push
call
sub
cmpl
mov
push
pushf
lea
je
shld
mov
xadd
dec
jmp
pusha
lea
movzbw
movzwl
movzbw
call
sub
cmp
dec
mov
adc
outsl
push
add
and
push
jb
arpl
ljmp
add
andl
inc
fadds
aad
adc
mov
add
xchg
stos
xor
xor
mov
push
xor
lcall
mulb
mov
rcr
or
mov
test
jmp
fstl
push
jo
cltd
add
dec
out
gs
nop
lods
mov
cmc
leave
sub
jno
xchg
cmp
mov
xorb
iret
mov
xchg
imul
data16
movsl
add
ds
lret
out
sti
pop
mov
xchg
sub
and
xlat
lcall
jmp
push
call
sti
xor
push
call
int
or
mov
mov
lods
add
inc
push
out
arpl
repz
adc
addr16
pushw
stos
inc
pop
inc
outsb
push
hlt
dec
cld
jnp
fmuls
sub
pop
shll
push
pop
loop
mov
in
push
sahf
lcall
dec
jns
aas
subb
push
in
jle
or
add
mov
mov
xor
bswap
jo
adc
xor
mov
dec
dec
lock
dec
xlat
lcall
xor
test
adc
leave
call
leave
xchg
mov
sub
loopne
jae
mov
imul
push
lock
dec
ss
and
fistps
daa
and
add
pop
roll
lods
or
jmp
loop
outsl
push
in
loope
insb
push
xlat
lcall
and
add
add
cwtl
setle
mov
lea
lahf
lea
jmp
push
call
pop
fstl
fs
je
call
push
popf
xor
jns
mov
call
iret
jbe
xor
push
sar
pop
out
cmpb
xor
jmp
cld
push
out
xchg
test
inc
repz
ds
test
das
and
sub
inc
xchg
pop
leave
sub
pushf
lcall
imul
clc
rcrb
mov
xchg
or
or
mov
sub
test
lods
cltd
movsb
jae
mov
lock
out
cmp
mov
out
inc
repnz
jb
xlat
lcall
cmpsb
and
popa
dec
ljmp
sete
xchg
es
jmp
cmpsl
mov
jae
jp
clc
inc
jl
cli
dec
ja
lcall
repz
out
push
lret
sub
cs
lret
out
dec
out
inc
js
adc
call
addl
mov
pop
jbe
adc
ja
popf
dec
in
cmc
mov
ljmp
cmp
das
dec
test
popf
sub
and
adc
xlat
lcall
inc
in
push
adc
bound
dec
in
inc
fs
push
subl
adc
sbb
or
fcomip
mov
int3
pop
or
inc
xor
test
mov
xor
arpl
mov
dec
pusha
cld
fsubl
jbe
cs
cmpb
xchg
out
sub
test
int
add
mov
mov
push
movb
pusha
pushf
lea
jmp
push
lea
jne
btc
shl
clc
and
mov
bt
push
cmp
add
pushf
movw
test
stc
movzwl
lea
cmc
not
mov
bt
add
pushf
pusha
mov
stc
test
mov
lea
je
jmp
push
call
pop
leave
lods
jae
cltd
mov
into
loop
pop
add
gs
imul
pushf
movsl
outsl
stos
out
pop
popa
push
xor
int3
mov
dec
jmp
jnp
sahf
aad
inc
jp
pop
data16
cld
rcrl
shrb
scas
shr
push
fs
push
sarl
es
daa
lcall
lcall
xor
mov
sbb
cwtl
ss
and
jge
xchg
sub
xchg
lret
sti
cmp
enter
mov
dec
push
out
sub
jmp
test
aad
stc
inc
arpl
jle
out
cli
and
jl
cwtl
nop
repz
push
subl
add
fsubl
cltd
ds
mov
and
pop
mov
insl
out
gs
out
pop
pop
gs
fcmovnu
sbb
shrb
sar
dec
fyl2x
fldl2t
push
loopne
in
shrl
lcall
jp
dec
call
and
adc
dec
call
inc
pop
fwait
addr16
aam
dec
gs
movsb
pop
fwait
scas
or
scas
subb
ror
xchg
mov
mov
inc
mov
ret
in
out
stos
inc
xchg
mov
subb
sub
xor
lcall
jb
sub
icebp
in
push
jb
outsb
jae
push
mov
in
push
or
lods
pushf
loopne
jae
dec
jbe
dec
jb
inc
pop
sub
mov
add
or
lea
test
xlat
notl
incb
test
pusha
pushl
popf
pushf
push
lea
jmp
push
call
imul
cmpsb
cmp
lea
jno
push
lea
jae
add
bswap
mov
rol
movsbw
clc
mov
pushf
stc
shr
shl
mov
cmp
sub
pushf
stc
repnz
call
jg
fcomi
int3
adc
jb
divb
sbb
insl
fimuls
out
repz
mov
dec
mov
xlat
js
outsl
aam
outsb
jbe
fwait
cmp
int3
ss
jl
popa
jno
leave
pop
notb
pop
je
cmc
test
push
mov
loope
in
fsubs
imul
xor
jns
movsl
add
jne
rol
sti
ret
stc
dec
clc
lock
test
fs
call
pusha
shl
mov
not
lods
mov
jmp
ret
pop
stos
in
out
push
aad
pop
sahf
jo
mov
sti
mov
aas
fwait
mov
aaa
sbb
movsl
inc
sbb
fldenv
push
pop
push
out
fucomp
xlat
lcall
adc
ljmp
mov
ljmp
lods
pusha
jmp
mov
ds
icebp
xor
cmp
sbb
les
push
cmc
fdivrp
inc
push
cmpsb
xor
xchg
push
sbb
jb
imul
in
test
xlat
repz
jne
sbb
push
imul
popa
mov
mov
jb
sar
xor
pop
pop
in
mov
pop
jnp
adc
dec
sub
jg
pop
repz
mov
mov
xlat
lcall
lock
dec
mov
cmp
clc
shl
jmp
loop
dec
imul
cmp
jge
mov
or
or
mov
pop
push
insl
dec
insl
scas
ss
jp
lea
xor
adc
xchg
das
mov
lea
loopne
loopne
cmp
jle
sbb
or
stos
insl
pop
mov
dec
inc
pop
xchg
xchg
mov
xchg
mov
adc
lcall
pusha
push
or
jmp
pusha
push
pop
pop
and
jnp
repnz
fdivrl
hlt
pop
out
fisttpll
std
mov
cs
jmp
xor
cmpsb
cmp
mov
dec
or
fiadds
cmp
push
xor
cmpsb
subb
cmpsb
pop
cmpsl
sbb
or
out
push
cmc
loopne
push
inc
cli
sub
push
mov
push
xlat
lcall
loopne
dec
call
test
add
and
leave
mov
fidivs
icebp
push
lock
jae
ljmp
ds
pop
stc
push
push
fdivr
shl
inc
pop
in
adc
shrb
push
sub
inc
cmp
dec
jle
jno
sbb
fisttps
fdivr
leave
and
mov
stos
pushf
sub
xlat
lcall
and
jae
pusha
mov
lea
jne
pusha
movl
pusha
stos
pushf
lea
jmp
movl
pushf
pushf
call
push
call
and
mov
fs
jne
pusha
call
call
jo
mov
mov
xcrypt-ecb
cmpsl
push
mov
popf
mov
lahf
stos
lahf
mov
aaa
ljmp
push
jle
mov
add
xlat
lcall
int3
push
dec
call
out
jae
loopne
xchg
enter
lock
repnz
divb
lea
icebp
pop
push
jb
das
adc
cmpsb
push
lcall
subb
aas
inc
js
dec
out
push
repnz
imul
sar
pop
dec
jb
and
cs
sub
adc
xor
daa
xchg
add
mov
mov
pushf
push
lea
jmp
call
clc
clc
pop
jle
nop
jl
add
mov
adc
sarb
or
int3
pop
daa
jl
sub
inc
in
jmp
mov
shrl
mov
js
pop
lock
xorb
js
out
push
push
push
in
fsubp
fsubr
xlat
lcall
subb
sub
subb
adc
dec
ds
addl
pop
ljmp
dec
js
pusha
pop
jns
mov
and
dec
pop
inc
outsl
shrl
pop
fs
negl
or
pop
sbb
push
inc
xor
mov
dec
out
cmp
lods
dec
es
mov
leave
xchg
mov
push
fucom
fbld
insb
xlat
lcall
nop
or
pop
test
sub
pusha
bt
clc
jmp
push
call
xor
xor
xchg
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jb
adc
jnp
ja
jo
jae
repz
je
inc
insl
mov
and
sbb
mov
es
xor
cli
aaa
dec
fistl
leave
pop
xor
sub
scas
add
adc
mov
push
jle
scas
movsb
psubsw
push
or
jge
dec
jns
dec
inc
xor
outsl
jmp
or
lods
insb
js
testl
adc
cmp
xor
xlat
lcall
pop
cmp
aam
add
mov
int3
mov
daa
test
push
gs
aaa
into
push
repz
sub
mov
push
jmp
sbb
xor
mov
mov
mov
mov
mov
lcall
je
and
ror
mov
jmp
stos
stos
mov
popf
inc
pop
iret
pop
or
jbe
clc
push
call
clc
jl
adc
push
gs
adc
pop
loopne
in
stc
lret
inc
cld
add
mov
enter
scas
push
pop
mov
out
and
fadds
imul
jb
call
push
popa
push
in
push
xlat
pusha
xlat
lcall
xchg
cmp
in
outsb
inc
outsb
ljmp
pop
xor
lods
loopne
mov
inc
mov
loop
sbb
call
mov
clc
xchg
jo
push
mov
mov
dec
inc
dec
inc
mov
xor
cmp
add
xchg
mov
or
stos
mov
mov
add
push
call
xchg
dec
inc
out
cld
scas
add
loop
add
loop
outsl
les
jb
nop
das
lock
andl
cmc
inc
jmp
test
jo
dec
sbb
shlb
dec
popl
mov
out
or
shl
fisubl
push
out
outsl
fbld
xlat
lcall
adc
lea
ds
mov
mov
xchg
mov
inc
repnz
mov
inc
dec
insb
and
sub
mov
int3
outsl
pop
push
std
cld
lods
out
out
leave
fisubrl
pop
dec
repnz
js
cmp
xor
int
out
jne
jne
shl
test
lods
mov
xor
and
mov
dec
xchg
cmp
cwtl
pop
and
testb
shll
aam
xlat
lcall
sbb
faddl
add
adc
pop
ja
mov
mov
dec
call
inc
imul
xor
cmpsb
lea
ja
and
cmc
dec
mov
icebp
dec
aam
aam
dec
sub
aad
inc
xor
shrb
rcll
cmc
dec
jne
incb
les
sti
xlat
lcall
sub
and
add
movsbw
mov
shl
mov
pushf
pushf
repnz
pushf
pusha
lea
jne
setae
lea
jmp
lea
jae
shl
mov
ror
movzbw
movsbw
xchg
mov
xor
mov
call
xlat
popa
dec
imul
les
movsb
subl
push
outsb
dec
out
xchg
dec
stos
push
sti
test
fisubl
push
sahf
mov
lahf
arpl
pushf
pop
sub
fcoms
ret
pop
and
mov
and
and
stos
adc
lods
adc
push
mov
sbb
lcall
inc
and
ljmp
and
movl
and
pusha
push
pushf
lea
jmp
push
call
push
dec
mov
sub
test
roll
pushf
bt
cmp
call
jmp
pushl
inc
push
pushf
mov
jmp
lea
jne
cmc
popf
pushf
pushf
lea
jmp
push
call
push
and
std
loop
ret
andl
bound
inc
imul
aam
std
dec
aad
cli
inc
inc
sbb
jecxz
shl
xchg
out
repz
fidivs
loop
ffreep
std
ficoml
mov
mov
iret
xchg
repz
xchg
clc
aaa
xchg
add
mov
daa
add
scas
icebp
lret
pusha
and
cmp
sbb
jmp
push
sti
cld
add
dec
decl
jbe
cld
enter
sbb
icebp
insl
push
and
dec
and
in
xor
xchg
aaa
sub
cmp
pop
mov
dec
adc
pusha
lea
jb
test
pusha
jmp
mov
xchg
xor
aam
pop
jge
push
cld
movsl
cmp
call
scas
jo
pushf
mov
xchg
stos
ja
sbb
jne
mov
cmpsb
adc
adc
cli
push
add
pusha
call
fildll
push
loop
cwtl
push
jnp
icebp
fistps
cwtl
and
inc
cmpsl
loope
mov
mov
mov
popa
pop
loopne
jae
shld
mov
es
dec
jge
jl
push
push
popaw
jne
inc
stc
fstpt
std
out
sbb
fsubs
mov
stos
xchg
sub
and
xlat
lcall
imul
call
cmp
mov
pop
icebp
ret
add
shlb
jle
lcall
sbb
stc
test
arpl
outsb
subb
and
mov
push
imul
lea
jg
sub
sbb
pop
outsl
jnp
xlat
in
mov
movsb
sbb
test
jo
jp
dec
clc
sar
jbe
inc
xlat
lcall
cmp
sub
mov
cmp
jg
pop
xor
xor
pop
fs
gs
out
fucomi
push
arpl
loopne
lcall
and
pushl
push
jmp
add
stc
mov
bswap
sar
rcl
bsr
mov
mov
cmp
push
lea
jbe
xadd
shrd
push
jmp
cmp
nop
mov
lods
pop
popf
dec
push
mov
andl
cmpsb
or
xorb
and
repnz
fcmovu
stc
push
pusha
mov
inc
repnz
mov
lock
fstp
mov
sbbb
sub
lahf
and
js
testl
xchg
mov
lock
jg
je
je
cld
ret
jo
push
pusha
pop
push
mov
rcrb
and
push
mov
mov
adc
xlat
lcall
xchg
push
dec
call
or
fs
je
jmp
stc
sub
jmp
mov
call
js
not
jge
add
xchg
scas
pop
inc
inc
inc
dec
jno
jns
movsb
gs
pop
test
inc
jb
jg
jo
jae
js
jnp
xlat
lcall
and
jno
je
cmp
sub
bt
pushf
cmp
jmp
push
jmp
adc
ss
mov
dec
cmp
pop
icebp
pop
jns
jnp
icebp
fdiv
pop
outsl
filds
fisubrs
outsb
push
push
inc
inc
lret
bound
adc
lds
adc
f2xm1
mov
xor
mov
xor
xlat
lcall
fmuls
pusha
inc
in
roll
test
in
jne
add
xor
jle
jecxz
mov
ja
xlat
dec
mov
push
xor
add
nop
fwait
das
adc
cwtl
es
xlat
lcall
shr
bswap
movsbl
mov
jmp
push
call
sbb
dec
nop
mov
in
aam
icebp
pop
out
pop
aaa
nop
aaa
cltd
cmp
xor
cmp
inc
cmc
xchg
ljmp
jne
dec
out
lods
jge
dec
out
mov
mov
and
jle
in
sub
leave
cmp
cmp
out
shll
enter
sub
xchg
lret
or
fs
je
das
insb
jmp
mov
xor
test
xlat
lcall
aaa
sahf
and
scas
push
pop
sahf
mov
add
mov
or
out
inc
inc
pop
shrl
js
add
cmp
sub
cmp
adc
mov
mov
or
movsl
push
adc
negl
or
int3
mov
adc
movsl
dec
mov
inc
hlt
dec
jnp
jl
sti
inc
jae
jg
lock
lcall
and
fs
jno
jne
not
rcr
test
mov
movzbw
stc
test
sub
shl
or
rol
dec
mov
test
sub
pushf
pushl
popl
jmp
push
call
mov
call
jmp
icebp
sbb
add
cmc
pushf
inc
xor
mov
jmp
push
push
lea
jb
cmp
pushf
call
lea
jne
pushf
mov
pushl
movw
pushl
pushf
pushf
popl
bt
test
or
pushf
lea
jne
test
cmc
popf
pusha
pushf
lea
jmp
push
call
inc
pop
jmp
dec
lret
call
fsubp
add
mov
pop
mov
fwait
testl
int3
pusha
cmp
sbb
pop
jbe
jns
sub
data16
xor
cmp
leave
dec
loope
ret
rolb
xor
push
or
and
inc
fdivs
imul
movsb
push
add
jp
test
sbb
or
arpl
mov
cmpsb
pop
es
stos
xchg
mov
fsubl
in
ljmp
jne
add
pusha
pushf
lea
je
dec
add
cmp
mov
pusha
add
stc
mov
setnp
bsr
movzbw
sar
mov
call
push
call
push
cmc
jnp
test
add
imul
jae
outsl
frndint
fucomip
adc
repnz
jno
hlt
fidivs
mov
xor
dec
out
ss
inc
stc
push
cmp
test
mov
sar
enter
push
or
imul
sbb
jl
xchg
mov
sub
ret
in
data16
icebp
out
adcl
xor
cmp
cmp
lcall
bound
dec
call
xchg
addr16
call
sub
imul
cli
cmpsb
gs
out
insl
negl
call
movsb
push
stc
pusha
or
call
mov
push
mov
bswap
push
mov
lea
jmp
jmp
or
ja
add
test
in
rorb
repz
mov
ffree
sbb
das
sub
cmp
aam
cmp
add
sub
and
cwtl
test
lcall
pop
xor
orb
lods
mov
imul
dec
arpl
int
int3
fsub
jne
sub
mov
inc
xchg
or
adc
xchg
inc
lret
cmpsl
gs
and
stos
nop
push
xchg
inc
and
fsub
xor
xor
outsl
outsl
push
xchg
ret
int3
aaa
or
push
hlt
mov
push
inc
mov
xchg
mov
mov
xchg
and
sub
lcall
loop
cmp
cmc
pusha
cmp
mov
lea
jb
pusha
stc
test
call
pusha
bswap
shl
shl
mov
call
lea
jge
je
or
jmp
lea
jne
pushf
jmp
call
push
call
inc
and
jne
xchg
cmp
pop
repz
ja
insb
inc
ret
xchg
mov
jne
jo
incb
pop
incl
ds
lea
mov
lret
repnz
dec
mov
xchg
movsb
ja
loop
fwait
or
push
push
mov
iret
cld
orl
jns
mov
push
stc
add
and
and
and
lret
pop
xor
in
pop
bound
cmp
aad
adc
xchg
sub
mov
lahf
and
ret
mov
adc
imul
xchg
mov
xchg
aam
decb
mov
add
push
add
in
push
lret
jmp
daa
mov
dec
out
aaa
pop
jns
pop
and
icebp
out
andw
sti
mov
js
mov
sub
and
es
lcall
adc
test
std
aam
push
js
adc
int3
scas
xor
and
scas
mov
jmp
imul
insb
jne
ljmp
je
faddp
mov
data16
mov
or
jae
icebp
mov
add
add
lcall
in
jb
push
sbb
arpl
iret
int
dec
pop
bt
cmp
adc
imul
jp
popf
dec
out
pop
loope
mov
adc
cmpsl
imul
dec
pop
jge
leave
rcr
scas
mov
xchg
cmp
mov
fisubrl
push
lret
inc
insb
pop
jae
mull
sub
ja
or
xchg
cwtl
jmp
jp
jae
incb
int
lret
jg
clc
xlat
lcall
sbb
push
cli
iret
xchg
inc
sbb
mov
or
aad
mov
xor
add
roll
int
dec
outsl
fsub
jns
cli
stos
in
mov
push
loop
mov
call
push
iret
xchg
es
push
adc
bound
pop
popa
mov
mov
xchg
sbb
scas
xchg
xlat
lcall
hlt
ds
call
rorl
dec
gs
popa
addr16
outsl
js
add
popa
imul
aad
add
shr
xor
leave
pushf
jmp
push
call
out
jnp
aam
and
dec
jecxz
addr16
in
je
xchg
fisttps
inc
fwait
xor
cmp
rorl
mov
dec
mov
xor
aas
inc
insl
pop
sub
aaa
addr16
xor
pop
fs
push
data16
lcall
or
call
push
mov
jmp
loop
shl
jae
push
cmp
jno
pop
mov
pop
and
cs
pusha
inc
pop
mov
and
mov
bound
jae
push
loop
sbbb
jbe
push
dec
fs
xchg
cmp
shr
jnp
pop
stos
or
inc
ljmp
pop
arpl
mov
leave
popf
jmp
lret
repnz
inc
lcall
cld
inc
sti
inc
jg
test
xlat
lcall
stc
cmp
or
call
push
call
pop
movsbw
lea
mov
jmp
pushf
pusha
push
call
xchg
fwait
mov
and
cmpsb
aad
pop
repnz
pushf
mov
ss
mov
stc
push
idivb
inc
pop
loope
inc
imul
fisubl
fs
xlat
gs
cmpsb
fwait
es
and
gs
repnz
mov
xor
dec
jmp
xorb
mov
lcall
fdivr
jmp
pop
and
push
push
mov
lea
call
jmp
ja
push
clc
aaa
inc
mov
or
pusha
leave
popa
lret
imul
or
cmp
pop
cwtl
mov
icebp
inc
pop
mov
dec
sti
cmp
ret
inc
pop
iret
ljmp
sti
xor
std
xlat
in
dec
cmp
das
scas
clc
pop
dec
jns
lock
jbe
loope
in
repnz
push
pop
jle
push
xor
or
les
stc
inc
inc
lock
jb
xlat
lcall
inc
xchg
outsb
push
push
push
jne
std
pop
ja
jno
hlt
aad
pop
cmc
loopne
mov
sbb
or
jns
lods
xchg
fwait
adc
sbb
dec
notl
push
jecxz
sub
xor
sub
ds
loop
pop
jno
add
out
jg
fwait
push
fst
lods
cmpl
out
mov
incb
jl
lods
addr16
std
fildl
push
pop
cmpb
mov
or
lcall
fcomip
push
jo
cli
pop
jno
repnz
lds
call
sti
enter
mov
test
push
and
stos
xchg
sub
push
lods
xchg
test
xlat
lcall
pusha
push
dec
call
mov
and
jae
rol
bts
mov
sbb
mov
test
bsf
not
mov
rcl
mov
push
xor
call
pop
nop
cmp
sub
shrl
mov
push
sub
or
adc
xchg
push
sbb
cmp
inc
repz
xor
iret
jecxz
lock
idivb
arpl
ret
in
shl
xor
enter
pop
pop
and
mov
daa
inc
test
push
in
addr16
outsb
push
call
xlat
lcall
popl
pushf
pushf
pushl
ret
push
call
aas
fisubrl
sbb
fwait
mov
les
add
or
xor
ffree
sbb
mov
bound
cmp
pusha
adc
retw
sbb
mov
cmc
enter
outsl
inc
lret
mov
dec
and
aaa
cli
inc
fs
sarb
and
mov
mov
std
scas
addr16
sbb
sbb
pop
mov
mov
mov
push
movl
push
call
push
call
push
jg
push
call
decl
test
int
jmp
repnz
cmc
mov
not
rol
add
add
rcl
stc
not
movzbw
mov
pushf
stc
pusha
test
mov
jmp
xchg
xchg
mov
movsb
scas
xchg
iret
cmc
adc
mov
mov
roll
inc
mov
shlb
pshufw
xor
cmp
mov
int
pop
mov
cltd
mov
loop
loop
adc
imul
les
jmp
je
jae
fisubs
or
add
mov
push
push
push
lods
mov
cmp
mov
pop
xor
xlat
lcall
sbb
cmc
push
movb
add
pusha
bt
mov
jmp
push
call
fidivs
mov
add
add
bt
test
add
pusha
lea
jmp
je
out
dec
clc
rol
xchg
insl
lds
xchg
mov
xchg
cmpsl
adc
rorb
lods
fildll
mov
std
out
cmp
pusha
xlat
or
or
rcll
or
popa
int3
in
test
ljmp
mov
jge
cli
inc
jne
test
imul
cmp
push
jp
js
call
pop
std
xlat
xchg
scas
xchg
bound
cmp
rcrb
ja
xor
sbb
adc
std
xor
dec
ds
mov
push
jge
dec
cmp
fistpll
stos
xchg
arpl
xchg
sub
into
mov
dec
je
jns
jbe
repz
ja
lcall
and
fs
ja
js
pushf
clc
imul
clc
cmp
add
mov
pushl
pushf
pushf
lea
jmp
sub
loopne
movsb
add
xchg
loopne
std
xchg
adc
jge
add
mov
jne
loope
arpl
and
mov
ljmp
sub
leave
in
lock
cmc
dec
jl
js
js
call
lcall
and
movzwl
cmc
mov
cmp
pushf
cmp
pushf
add
push
mov
bt
test
jmp
push
call
stc
pushl
popf
pusha
movw
lea
jmp
clc
pushf
jmp
sbb
cmp
cmp
sub
sub
xchg
pushf
fisttpll
adc
mov
jb
dec
cld
std
loope
ret
enter
stos
mov
rclb
sub
rorb
test
mov
ja
gs
aam
test
and
dec
jb
out
daa
xor
in
stos
xchg
scas
pop
mov
xchg
sub
and
or
push
call
loope
mov
dec
call
lods
bswap
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
test
stc
clc
sub
clc
cmp
jmp
cmpb
xor
xchg
scas
push
xchg
mov
cmp
aam
push
not
repnz
imul
lcall
mov
in
push
cmc
jmp
decb
push
outsb
inc
test
add
push
mov
test
aad
jmp
jbe
jnp
std
lret
sbb
mov
sbb
lret
aam
stc
mov
pop
stos
adc
xchg
sub
into
lock
hlt
ret
rorb
or
stos
cmc
loopne
call
outsb
insl
ljmp
pusha
shl
lcall
in
enter
lea
mov
not
mov
pushf
pushf
movl
pushl
lea
jmp
call
call
jo
jle
or
adc
pop
jbe
jne
jae
fisttpl
ds
mov
shrb
sbb
mov
cld
inc
outsb
in
xor
movb
xchg
scas
test
das
icebp
pop
repz
out
dec
in
pop
cmp
das
cmp
rcl
xchg
test
cmp
sbb
loope
pop
adc
push
iret
add
jbe
js
dec
hlt
addr16
and
jge
icebp
fidivrl
jecxz
adc
jg
repnz
jno
testb
jno
jb
lcall
push
cmp
push
mov
add
lea
xchg
mov
call
inc
cmpsb
mov
addb
sub
mov
jle
push
sar
iret
pop
cmp
mov
ret
test
cmpsb
cmp
aas
sbb
dec
push
mov
jp
cmp
push
mov
push
sbb
test
cmp
pop
arpl
aad
pop
in
loope
pusha
fcmovbe
lcall
pop
jbe
scas
daa
lahf
bound
dec
insb
inc
bound
inc
out
insb
dec
into
xchg
cmp
inc
and
sub
xor
mov
daa
mov
mov
sub
xchg
mov
dec
dec
mov
decl
lock
inc
sti
dec
fs
cld
adc
frstor
in
push
out
push
insb
pop
out
arpl
lcall
push
jg
lds
jmp
add
pop
stos
add
inc
outsl
pop
ljmp
adc
sbb
add
and
subb
dec
sbb
sub
iret
pop
jge
stos
xor
or
xchg
xor
test
movsl
addl
mov
mov
negl
loop
push
cmc
lock
sbb
adc
movsb
pop
mov
xlat
lcall
and
leave
pusha
shl
add
bsf
shl
jmp
inc
cmp
cmpb
pushf
lea
jne
pushf
movb
mov
pushl
ret
stc
stos
jmp
jecxz
mov
sub
fldl
cmp
call
mov
xchg
adc
or
jp
dec
lret
aam
repnz
stc
adc
and
out
cmp
cwtl
lcall
mov
mov
push
scas
xchg
movsl
adc
pop
stos
adc
lcall
and
ja
adc
or
add
inc
shr
bt
not
call
call
push
call
insb
pusha
call
pop
pushf
push
call
js
je
in
stos
xchg
dec
call
and
in
lret
jbe
cmpsl
mov
lahf
mov
sbb
push
int
sub
addr16
push
sub
imul
or
testb
es
or
jae
jecxz
pop
mov
jge
sub
mov
pop
sub
nop
cmp
mov
cli
iret
mov
xchg
ss
push
xor
mov
test
cmpb
pushl
lea
jne
setbe
sub
lahf
stc
add
aaa
mov
rcl
cmp
xor
neg
add
or
cmp
pushf
pushf
mov
mov
pushl
bt
jmp
lahf
roll
sub
push
xor
shlb
pusha
daa
clc
sbb
leave
daa
sahf
test
cltd
mov
mov
dec
lock
arpl
and
pop
repnz
dec
bound
rcll
sub
sub
imul
cltd
test
xchg
es
fidivl
jno
movsl
imul
inc
out
je
imulb
push
xor
rolb
and
and
shlb
ja
sub
icebp
and
xchg
or
lock
scas
cmp
icebp
insb
sbb
xchg
adc
sbb
sub
mov
pop
in
cld
sbb
adc
rolb
movsb
adc
and
shrl
mov
cli
dec
and
fsubs
jo
or
subb
rcll
sbb
test
frstor
sub
daa
jno
push
imul
sub
aaa
lods
mov
xchg
fsub
mov
push
repnz
icebp
dec
stc
imul
push
xchg
out
and
xchg
pop
getsec
mov
jns
xor
sub
out
sub
psubsw
mov
push
cltd
mov
xchg
lods
enter
in
test
xchg
xchg
push
xchg
stc
sub
xchg
or
sbb
aas
int3
cmc
jno
jno
and
sbb
xor
sub
add
pop
push
aaa
xchg
or
cs
roll
xor
jae
lret
jg
test
xor
jle
cwtl
ficoms
andl
popa
popa
push
xorl
mov
mov
mov
sahf
xchg
imul
or
cli
sbb
popa
push
sbb
jne
std
dec
or
inc
test
popa
call
sbb
shrl
ljmp
dec
pop
popa
or
aam
cltd
lods
lea
movsl
arpl
adc
add
je
sbb
popa
mov
neg
jne
es
or
pop
sbb
mov
cs
xor
mov
stos
sbb
fsubrs
pop
lret
push
mov
mov
push
mov
bound
or
and
fidivrs
add
and
sub
aaa
call
xor
fidivl
loopne
xchg
sub
loopne
sub
scas
sbb
cmp
mov
sbb
mov
xchg
pusha
add
fwait
popa
inc
sub
pop
add
mov
mov
in
clc
mov
push
lds
aam
sbb
ret
mov
arpl
xor
fldl
fiaddl
inc
lds
jp
cld
andb
out
adc
repnz
dec
jmp
mov
jmp
fcoml
sbb
cmp
adc
adc
cli
sub
sub
push
call
xchg
in
fsubrl
dec
enter
stos
repnz
and
and
mulb
jg
sub
pop
mov
xchg
adc
lea
mov
and
inc
xor
call
adc
out
xlat
test
lock
hlt
jl
repnz
push
shr
fsubl
test
roll
push
enter
in
xchg
mov
and
inc
xchg
jge
xor
mov
arpl
mov
or
pop
call
jmp
lods
lods
mov
adc
call
or
mov
ss
shrb
rol
fmull
xchg
push
lock
clc
call
shll
xor
flds
mov
and
shll
jge
fildl
stos
ljmp
mov
jge
nop
icebp
push
push
push
in
cltd
cmc
out
icebp
or
loope
loopne
test
and
mov
aaa
mov
jno
mov
lea
xchg
imul
fimull
mov
pop
pop
xor
pusha
mov
push
sbb
mov
aas
push
cmpsb
mov
pop
daa
xchg
jecxz
fdivs
imul
popa
cmp
sub
dec
dec
dec
mov
lods
sub
and
jae
out
add
ljmp
xchg
in
jle
subl
cmp
shrl
add
outsl
aaa
ss
jno
aad
jne
insb
push
xlat
pop
and
leave
mov
cs
sub
mov
cli
into
pop
jbe
fsubrs
out
adc
ljmp
call
xchg
pop
jmp
aam
sbb
sbb
popa
adc
enter
in
jle
imul
or
pop
jge
test
cmp
push
adc
das
jecxz
jns
mov
stos
cmpsb
insl
sub
cltd
decl
push
sbb
add
pop
sub
lock
pushf
fcoms
xchg
scas
aaa
imul
mov
out
adc
mov
cmpsl
push
adc
sub
sbb
ljmp
fisubs
cmp
lcall
hlt
jns
addr16
ja
jnp
jno
cli
gs
insl
push
mov
cli
xchg
xor
lock
pusha
aam
imul
xchg
sub
clc
adc
pop
pop
lock
sahf
xchg
and
add
repz
test
cmp
pusha
loope
sbb
sbb
inc
shl
xor
push
jno
cmp
sub
out
mov
repnz
fcom
and
int
xchg
inc
xchg
scas
xchg
fadd
sub
clc
push
sub
sub
jmp
or
mov
adc
loopnew
cmpsb
aam
fcoms
inc
cmpb
xchg
sbb
loopne
adc
fcoml
push
or
popa
cmp
outsl
jne
not
adc
pop
subl
popa
nop
scas
fcmovnu
pusha
test
mov
add
sub
pusha
rcl
mov
pop
xchg
cmp
jecxz
xor
pushw
mov
scas
or
cld
movsb
inc
test
sub
imul
repz
stc
mov
push
dec
mov
inc
scas
cmpsl
and
xchg
push
pop
rclb
loopne
xchg
in
stc
xchg
push
mov
push
sbb
sbb
add
popf
in
mov
ret
mov
pop
mov
mov
aam
enter
pop
loopne
mov
or
mov
sub
das
sbb
xchg
push
rcrl
js
push
sbb
mov
stc
popa
mov
adc
adcl
out
mov
iret
xor
mov
adc
push
or
sub
popa
outsb
aaa
jns,pn
scas
sbb
add
pop
mov
adcb
jp,pn
dec
into
call
pop
pop
fs
fsubrp
pop
sbb
int
iret
std
addr16
call
iret
ljmp
cmp
loop
adc
loopne
push
rorb
js,pn
insl
push
lcall
dec
adc
jecxz
xchg
xchg
add
dec
sbb
fsubr
js
hlt
out
push
mov
pusha
adc
sbb
jnp
outsb
jg
movsl
jo
out
insb
and
clc
sbb
sbb
in
and
cld
mov
and
lret
mov
cld
sub
lods
test
ljmp
and
sbb
aad
lret
rolb
add
pop
mov
cmp
dec
adc
and
inc
cmp
or
sbb
push
out
pop
rcl
mov
mov
cwtl
mov
das
cwtl
xchg
add
out
in
test
mov
push
mov
in
cmpsl
jg
es
popf
mov
or
sbb
hlt
inc
loope
cli
es
testb
jmp
pop
sbb
leave
pusha
push
shrl
sub
repnz
rorb
xorb
popa
sbb
sahf
hlt
icebp
pop
es
or
sub
ret
push
xchg
adc
dec
push
mov
mov
add
xor
call
icebp
es
sbb
xor
or
sub
mov
cwtl
mov
mov
std
jmp
mov
adc
rorb
andb
addl
rcr
pusha
int
inc
or
scas
add
cmp
pop
sahf
and
and
xchg
and
shrb
mov
sub
loopne
das
icebp
sub
adc
bound
xor
aas
xor
shlb
push
xchg
sets
sub
sub
and
aam
and
sbb
inc
loopne,pn
push
hlt
mov
hlt
and
roll
pop
ret
and
movsb
call
stc
hlt
and
dec
insl
mov
xchg
aaa
pop
mov
and
mov
subl
into
sub
push
cwtl
hlt
mov
je
sub
sbb
fsubrs
adc
sub
or
pop
xor
xor
lret
daa
add
push
test
popf
es
hlt
cld
int3
cmp
pop
push
sbb
stc
push
daa
mov
cwtl
push
daa
shl
test
push
dec
mov
push
out
cmp
xor
lds
or
mov
cmpsb
imul
or
xchg
scas
fidivs
xchg
sub
rcll
mov
cli
movsb
push
cmp
pop
out
lret
or
js
das
fcomp
or
sbb
shll
or
and
xlat
and
xor
out
ljmp
and
aam
test
xor
dec
mov
xchg
pushf
or
dec
jns
adcl
push
push
pop
jo
jo
je
push
inc
jnp
jbe
inc
mov
mov
cmp
jmp
mov
into
lock
leave
inc
mov
nop
mov
addr16
sahf
push
mov
push
mov
insl
repz
mov
push
sbb
lahf
mov
jb
dec
add
lods
adc
cmp
xchg
adc
ja
cmp
add
cmp
push
jno
fwait
pop
sbb
dec
ss
mov
sbb
ljmp
jo
insb
addr16
lock
add
jnp
dec
add
sbb
insl
push
mov
out
ret
pop
mov
sbb
stos
dec
outsl
js
jle
dec
jno
enter
stos
pop
icebp
aaa
mov
imul
xor
lahf
test
dec
pop
ficoml
push
orb
push
out
jmp
ret
cmpsl
lahf
cs
inc
fcoms
xor
lea
lret
and
aam
inc
call
fiadds
insl
pop
insl
lahf
push
pop
into
or
ret
mov
ja
push
cmpsl
pop
adc
in
lods
shl
fsubrs
mov
movsb
pop
mov
sti
inc
lock
mov
jbe
fmull
xor
std
mov
xchg
lea
mov
jno
sbb
xchg
jne
aas
in
sbb
es
idivl
cwtl
testb
add
mov
popl
insl
or
pop
hlt
pop
mov
addr16
or
leave
negb
lock
in
push
or
ljmp
in
inc
xlat
loopne
daa
pop
hlt
xor
xchg
mov
mov
xchg
adc
or
lock
lods
lea
insb
jne
andb
jmp
xchg
adc
adc
stc
or
int3
cltd
lods
adc
jge
lock
cmp
pop
jb
stc
jne
mov
add
stos
sub
in
inc
or
sub
cltd
lret
xchg
das
jb
lahf
cmpsl
sbb
iret
mov
inc
and
xorb
sbb
add
test
push
cmc
cld
call
push
pop
cmpsb
stos
out
mov
xor
test
push
popa
mov
lcall
push
pop
into
fadds
das
sub
xchg
dec
fs
inc
loopne
int3
xchg
cmpsl
jecxz
xlat
lock
test
imul
hlt
pop
stos
lahf
test
push
out
and
std
ficoms
out
cmpsl
movsl
dec
mov
in
add
fwait
outsl
push
pop
aam
lret
fwait
fwait
mov
pop
pop
lret
pop
sub
out
jns
jns
cmpsb
pop
dec
inc
cmpsl
pop
xchg
dec
movl
add
pop
ljmp
ds
pop
ficoml
xchg
pop
cli
push
fdivl
mov
addr16
pop
sub
ss
sbb
cmp
imul
stos
xchg
lahf
mov
lock
sbb
mov
push
inc
cmp
mov
jp
push
enter
loop
rol
outsb
insl
cld
sub
jnp
lahf
jecxz
xlat
jne,pt
inc
sbb
out
imul
movsb
mov
mov
jns
movsb
mov
dec
jns
push
xor
cld
mov
outsb
mov
aaa
inc
dec
out
cmpsl
flds
daa
cld
add
push
add
sub
add
sbb
roll
mov
fnstsw
jno
clc
aaa
testb
insl
push
fimull
push
add
out
xor
pop
adc
add
outsl
and
adc
test
lret
imul
repz
add
sub
out
adc
das
negl
adc
and
push
adc
out
push
shrl
xor
testb
jecxz
lea
push
es
fs
pop
inc
test
sahf
daa
xchg
loope
and
push
aaa
add
ljmp
mov
outsb
inc
push
push
fstp
push
and
dec
sahf
inc
je
sbb
sbb
call
push
add
sbb
loopne
je
adc
dec
popa
icebp
and
push
push
outsl
pop
push
mov
sbb
stos
stc
inc
shl
clc
mov
aaa
dec
xor
cmp
and
cwtl
jecxz
sbb
mov
es
clc
lret
sub
adc
mov
fwait
mov
das
adc
aaa
fnsave
arpl
ret
call
cmp
pop
mov
aam
cltd
xchg
es
punpcklbw
jecxz
inc
lock
test
in
sbb
ljmp
jl
or
das
push
nop
loopne
and
sub
dec
enter
pop
xor
pushf
pusha
flds
inc
xor
jp
aam
xchg
sbb
mov
pusha
ds
in
lock
je
nop
sarb
pusha
arpl
sbb
sub
push
adc
roll
xchg
outsl
mov
or
pusha
loop
repnz
push
fdivr
sub
add
test
fs
mov
and
add
pop
loopne
mov
mov
loop
xchg
xchg
xchg
push
and
bound
sbb
clc
sub
and
add
filds
and
add
loop
mov
mov
and
in
fnsave
xor
xor
push
shlb
rcr
leave
pop
and
xchg
loope
or
imul
and
popa
sbb
pusha
enter
dec
xchg
dec
nop
jg
rcrl
push
mov
pop
mov
jmp
mov
jmp
pop
ds
cmp
jge
mov
sub
dec
stos
lock
notb
pop
mov
out
call
jns
push
pop
popf
sbb
xorl
xchg
jmp
int3
push
lock
cmpsl
int3
sub
cmpb
sbb
push
sbb
pop
lock
daa
leave
mov
pop
jmp
jp
test
nop
xchg
cmc
mov
sbb
leave
sbb
and
stc
fcoms
out
shrb
adc
xchg
pop
and
pop
fs
or
aaa
xchg
aaa
shlb
jmp
aad
aaa
cmp
jle
mov
inc
xchg
enter
fdivl
cmp
xor
sub
dec
pop
dec
jae
sub
rcl
cmpl
sub
sub
adc
pop
bound
pusha
sbb
stos
adc
cmpsl
xor
adc
xchg
addl
mov
mov
jns
aad
clc
dec
mov
fdivrp
push
jae
and
lret
sub
insl
into
adc
xchg
sbb
lea
and
cmp
and
dec
popf
cmp
mov
aad
lret
test
js
add
popa
xor
dec
sbb
cmp
divl
adc
mov
and
xchg
mov
inc
jmp
mov
mov
stos
xor
rcrl
sahf
loop
popa
stc
mov
push
or
movsl
jp
adc
sarl
mov
xchg
sbb
xchg
imul
lods
hlt
mov
out
test
das
adc
push
cmpsl
call
or
out
scas
out
sub
loope
sub
cltd
pusha
call
gs
loopne
pop
xor
push
nop
sbb
scas
and
jns
cmovle
insl
cmpsb
lcall
fiaddl
or
mov
xor
mov
mov
inc
call
pop
sub
stos
andl
out
mov
jno
jno
sub
inc
idivl
lods
pop
sbb
jmpw
pop
jns
add
add
shrb
into
xor
aam
int3
push
shl
lds
addr16
das
mov
xchg
lock
andb
push
negb
sub
cmp
lock
out
shll
pop
fmul
mov
and
cld
or
leave
lods
jne
fsubr
or
cli
xchg
enter
cmpsb
sub
lock
pop
enter
insl
adc
fs
mov
add
fmuls
or
sbb
adc
xchg
mov
andl
enter
add
test
icebp
adc
mov
push
addr16
mov
enter
pop
shlb
pop
mov
ljmp
inc
call
out
cmp
enter
pop
mov
xchg
xchg
xorl
mov
push
cmp
insb
lods
pushf
lock
mov
push
ljmp
and
or
adc
and
shrb
push
mov
add
scas
hlt
dec
fistl
sahf
imul
push
xchg
xchg
in
ja
inc
inc
stc
out
add
and
mov
aaa
jne
or
imul
hlt
xchg
rorl
or
xlat
cmp
cmp
les
xchg
pop
lods
mov
nop
stc
add
aam
addl
hlt
adc
aaa
hlt
cmp
scas
shlb
adc
inc
xchg
fstpl
xor
in
mov
push
xchg
out
inc
jecxz
add
fwait
sub
xchg
lea
jmp
mov
shrb
pop
stos
xor
and
das
faddl
clc
cmp
test
aaa
cmp
out
sbb
mov
sub
xchg
imul
mov
or
mov
clc
dec
lret
daa
sbb
inc
lock
sbb
shr
sbb
fisttpll
mov
into
shlb
inc
or
dec
and
adc
push
enter
mov
test
scas
lret
xchg
bound
je
and
pop
in
mov
or
dec
jle
lea
mov
lahf
sbb
mov
daa
inc
push
jo
xchg
push
jb
or
fstpl
mov
insl
into
sbb
cmp
repnz
lods
xchg
inc
leave
mov
cmpsb
xchg
xchg
call
add
add
in
pop
mov
enter
scas
mov
mov
inc
ljmp
out
jmp
inc
test
lods
hlt
pop
lods
aam
imul
rorl
xor
push
shll
or
dec
xchg
mov
mov
test
sub
cltd
sub
stc
subb
jno
fstps
pusha
add
ret
sti
data16
mov
popa
jns
loopne
nop
mov
push
add
jmp
in
pop
push
aaa
pusha
xchg
dec
dec
pop
or
ss
xor
mov
lock
jmp
imul
adc
ljmp
sub
add
push
and
mov
and
xor
mov
add
xchg
movsb
xchg
push
pop
inc
sti
inc
xchg
out
adc
adc
ljmp
adc
imul
cmp
mov
push
mov
pop
cmc
nop
pop
sbb
ficompl
mov
mov
hlt
dec
mov
sub
test
dec
int
cmpsl
jb
loope
mov
adc
adc
pusha
xor
lea
jge
or
mov
jmp
adc
jbe
test
loopne
movsb
das
and
xchg
cmp
testb
mov
ret
mov
mov
gs
add
jns
inc
cmp
dec
inc
stos
add
mov
enter
sbb
das
dec
cltd
shlb
out
rclb
enter
das
sub
rcr
pop
jno
das
dec
lods
add
loopne
jns
push
lock
mov
jmp
dec
sub
fiadds
inc
inc
inc
or
aas
aam
jb
bnd
dec
stos
popf
dec
lcall
push
rcpps
cmovne
mov
rcl
or
repnz
and
inc
or
ljmp
daa
loope
fs
aad
inc
mov
ljmp
ljmp
addr16
mov
xchg
mov
stc
and
push
jns
outsl
sbb
mov
or
outsb
aaa
ficoml
divb
or
shrl
mov
adc
loopne
roll
shrb
or
shlb
sbb
push
rcl
pop
movsb
jno
inc
push
push
or
mov
mov
jns
or
lock
aas
lret
movsl
sbb
test
or
daa
cmp
sbb
popf
cmp
or
xchg
fsubl
sub
push
cmpsl
push
ja
enter
mov
or
test
mov
adc
pusha
inc
insl
stc
call
sti
pop
push
jne
or
loope
mov
and
mov
popa
or
cmp
push
repnz
jmp
sbb
nop
push
or
repnz
inc
mov
cld
sub
xchg
pusha
loopne
sub
jns
mov
or
dec
je
sub
js
xchg
jp
or
xchg
lret
add
dec
icebp
sub
test
ljmp
imul
jmp
rorb
push
imul
adc
or
pop
in
stc
psubb
adc
fimuls
in
add
push
mov
jle
mov
adc
cltd
pop
out
and
and
and
rcll
out
inc
mov
sbb
adc
sbb
pop
add
push
adc
pop
mov
lret
pop
cmpsb
aaa
pop
jl
mov
stc
push
pusha
adc
cwtl
inc
xchg
dec
xchg
clc
inc
pop
xor
addr16
cmp
push
xor
or
out
xchg
movsb
cmp
clc
sub
decb
nop
aaa
adc
dec
das
jecxz
sub
push
je
jo
push
fldenv
inc
insb
aad
test
test
popa
pop
xor
sahf
popa
dec
cmpsb
xchg
xchg
inc
cld
xchg
and
adc
cmp
push
outsl
and
in
popf
lret
outsl
out
mov
testb
or
inc
fwait
hlt
mov
mov
push
insl
hlt
or
pop
mov
add
add
ret
jne
xchg
dec
test
js
insl
xchg
pop
cmp
jns
dec
dec
adc
jge
out
imul
cmp
mov
adc
aad
mov
leave
rcrb
stos
adc
imul
or
mov
xchg
scas
fnop
xlat
push
popf
adc
stc
fstpl
idivl
inc
out
mov
or
dec
imul
scas
adc
pusha
adc
adcb
and
mov
scas
pop
out
fcmovb
or
fsubrs
xor
scas
sub
pusha
das
mov
adc
iret
push
push
add
pop
sbb
lahf
adc
int
in
adc
mov
mov
hlt
pop
pop
lds
notb
fcoms
inc
loope
xchg
mov
cmpsl
xchg
in
ljmp
aad
scas
add
adc
adc
xor
mov
punpcklbw
adc
sbb
mov
cmp
or
push
int3
cmp
pop
and
mov
cmpsl
inc
nop
inc
pop
add
xchg
mov
test
sub
add
jmp
jne
mov
aam
out
and
daa
push
insb
movb
or
xchg
sbb
add
loop
scas
sub
call
sub
inc
hlt
fptan
pop
pusha
dec
dec
sbb
pop
add
xchg
pusha
jo
mov
pusha
ljmp
addl
adc
add
decb
adc
add
cld
pusha
or
or
repnz
test
lock
push
push
add
mulb
hlt
out
xchg
popf
push
movsb
lods
cli
pop
test
and
mov
pop
ficoml
pop
adc
push
jnp
imul
sbbb
enter
addr16
mov
test
dec
and
jns
and
imul
mov
push
pop
sbb
add
ja
shlb
data16
inc
outsl
jns
sub
cmp
adc
adc
inc
popf
nop
mov
popa
loope
inc
mov
aaa
xor
mov
lock
xlat
add
mov
add
push
jns
test
leave
data16
xlat
add
cltd
loopne
push
lret
les
xchg
dec
fcmovnb
dec
scas
ret
daa
pop
and
lret
insl
out
sbb
leave
mov
clc
gs
inc
or
repnz
and
fists
js
or
test
mov
sub
sbb
repnz
dec
and
test
dec
inc
fisttps
scas
lret
rcr
test
pop
sbb
outsl
push
pop
xchg
jg
xchg
inc
mov
lea
das
inc
jge
lods
sub
and
aaa
lcall
mov
mov
clc
lahf
pop
in
lret
jmp
and
mov
xchg
sub
push
pop
cmp
dec
cmp
pop
nop
out
sti
fists
xor
aas
test
rorl
inc
dec
cli
jmp
nop
mov
sarl
adc
xor
sbb
add
arpl
mov
and
xor
fdivl
adc
cmp
sbb
out
mov
inc
xor
mov
dec
adc
pop
pop
cld
mov
or
mov
sbb
adc
xchg
lods
xor
sbb
pop
mov
ret
icebp
cmpb
mov
aad
mov
ret
test
xchg
sbb
cmp
ret
scas
shrb
mov
nop
cmp
and
xor
sbb
sub
mov
sbb
and
push
pop
sbb
gs
inc
call
pop
dec
test
shrb
xchg
sub
and
pop
popa
adc
mov
push
sub
xor
mov
and
mov
jae
and
jns
adc
mov
sub
cmp
add
test
popf
shrl
mov
lret
add
add
ficoms
jae
pop
repz
nop
rcl
add
xor
xchg
jnp
aas
rolb
adc
inc
jne
push
loopne
daa
mov
mov
lds
mov
push
lods
not
daa
test
sbb
sbb
or
loop
mov
add
adc
pop
mov
mov
sub
fs
shl
lock
loopne
cs
pop
test
aaa
or
cli
sbb
jmp
std
aaa
test
push
insb
dec
jno
stc
push
mov
cs
je
mov
stc
out
rcrl
scas
mov
cltd
and
mov
fwait
std
sbb
movsl
hlt
lea
test
fdiv
rclb
ljmp
fidivrs
and
dec
xchg
push
loopne
or
testb
sub
ja
imul
out
jg
inc
mov
js
pop
shl
push
mov
jne
cwtl
add
mov
sbb
pop
mov
xchg
adc
or
sub
fwait
cmp
in
scas
or
xchg
icebp
ds
cmpsl
sbb
stc
lret
inc
popa
insb
add
enter
sahf
test
lods
cmp
jmp
rcrb
es
loope
adc
xor
js
popa
mov
adc
mov
jno
mov
rcr
or
scas
and
mov
div
mov
adc
cli
pop
jge
add
gs
push
rol
and
jne
loopne
sbb
dec
fcoms
mov
clc
in
xchg
mov
sub
mov
nop
or
add
xchg
adc
dec
loopne
mov
call
xor
cltd
jno
sbb
scas
out
loopne
and
and
loop
imul
sar
pop
out
lea
gs
or
lret
pop
adcb
mov
mov
xorb
data16
mov
scas
js
rcll
movsb
dec
xchg
or
xor
dec
and
fs
mov
xchg
xchg
cmp
push
mov
or
xchg
loope
pusha
cli
lahf
adc
jl
pop
xchg
xchg
lock
mov
push
leave
js
and
ja
xor
jge
pop
enter
stos
mov
mov
add
xchg
ss
jmp
xchg
push
stos
sbb
js
icebp
jmp
mov
mov
or
mov
rclb
dec
xor
lods
gs
and
cmp
cmp
sbb
in
popa
inc
sbb
push
push
sbbb
xchg
and
data16
or
aam
xchg
gs
jo
xchg
mov
adcb
out
mov
das
call
or
js
push
ds
dec
hlt
xlat
sbb
lret
inc
pop
push
sbb
push
lods
testb
dec
enter
mov
push
and
loopne
stos
data16
outsl
cmpsl
adc
sbb
ds
ljmp
dec
pop
es
sbb
subb
cmp
pop
in
lods
sub
mov
cld
mov
sub
call
mov
popf
outsl
aad
mov
xlat
sbbb
sbb
push
sbb
push
pop
lods
cmpl
aaa
and
insl
xor
xchg
jmp
sbb
test
ret
mov
dec
gs
mov
xchg
lahf
jecxz
ljmp
jecxz
in
mov
and
popf
test
jb
mov
mov
pop
push
cmpsl
pop
add
das
inc
xchg
loopne
clc
notl
insl
mov
xchg
lods
lea
test
outsb
fdivrl
inc
xchg
xchg
es
pop
fldt
gs
movsb
test
cmp
cmp
test
pusha
push
cmp
mov
mov
sub
mov
dec
and
mov
shll
in
or
aas
adc
shlb
dec
xchg
lock
cmpsb
push
gs
fsts
inc
sbb
lea
and
mov
sub
repnz
fstps
xchg
mov
inc
repz
addr16
aam
testl
dec
sbb
das
or
lock
push
xchg
mov
push
fsubrp
and
sub
cltd
aaa
fcomp
mov
pop
rcrb
mov
mov
jmp
test
xchg
lret
imul
outsb
jl
imul
mov
sbb
out
daa
xor
cltd
aaa
jmp
lret
sub
imul
xor
push
mov
loopne
adc
mov
sbb
mov
xchg
xchg
pusha
ljmp
stos
mov
xchg
into
mov
into
mov
sahf
into
data16
lahf
dec
hlt
mov
mov
xchg
sbb
jae
jl
or
mov
dec
push
or
pop
rclb
sub
popa
push
js
mov
addr16
xchg
mov
dec
in
inc
pop
iret
jno
or
fldenv
daa
aad
stc
ret
cwtl
xchg
in
and
fwait
stc
inc
push
xchg
dec
cmp
or
mov
lds
movsl
shll
cmpsb
fiaddl
rcrl
fs
pop
test
sub
ss
inc
push
test
add
push
call
xchg
cld
cmp
test
mov
push
imul
and
jae
push
das
mov
push
jmp
xchg
fisubrs
mov
push
adc
xor
push
fsubrs
lods
adc
xor
sub
cmp
xor
pop
aam
pop
cmp
gs
test
mov
cs
dec
mov
stos
pusha
out
mov
mov
sbb
dec
lea
cmp
and
ret
loope
mov
pop
clc
mov
roll
mov
pop
icebp
adc
xor
int
inc
imul
test
or
loopne
or
push
imul
lock
outsb
sbb
aaa
inc
push
dec
pop
adc
lret
bound
into
mov
test
loopne
jo
cli
jb
outsl
sahf
adc
or
or
gs
pop
push
fs
push
mov
subl
popa
inc
mov
sub
mov
mov
xchg
xor
call
mov
mov
jl
jge
clc
in
xchg
xchg
rcl
and
or
lea
dec
int3
adc
cltd
cwtl
mov
fisubrs
xor
dec
or
and
adc
enter
sub
jns
cmc
mov
cltd
lock
mov
or
mov
fiadds
adc
dec
sbb
cmp
sbb
dec
cmpl
imul
testb
xchg
push
or
ret
aad
xchg
jae
mov
fimull
mov
adc
dec
leave
lea
roll
push
loop
in
fwait
scas
popa
push
mov
xorl
lcall
cmp
push
adc
shlb
jg
mov
iret
xchg
push
frstor
mov
mov
in
mov
sarb
test
sub
xchg
mov
addr16
jl
adc
push
pop
fimuls
inc
fwait
inc
in
ds
repz
lock
pop
lret
das
dec
aam
mov
lret
add
jae
pop
dec
add
mov
inc
inc
add
push
xchg
daa
xor
push
push
sbb
xchg
xchg
push
xor
mov
nop
xor
mov
xor
and
icebp
mov
and
pop
fsubrl
cmpsl
mov
adc
xlat
pop
sub
inc
cmp
lock
push
movsb
mov
xor
cmp
loopne
lods
lods
and
dec
scas
jg,pn
stos
int3
push
or
repnz
and
mov
nop
mov
cmp
fucom
inc
mov
push
push
xchg
xor
and
mov
mov
fmuls
out
adc
enter
sub
loopne
xlat
sahf
jo
xchg
pop
dec
mov
das
std
and
add
inc
sub
sub
and
or
rol
and
mov
stos
xchg
sub
jno
out
or
cmp
cmpsb
or
imulb
popl
cmpsl
or
jae
jo
sbb
notb
lock
cwtl
pop
xchg
loop
xchg
push
add
and
pop
mov
adc
inc
cli
push
and
hlt
jnp
sar
stos
sahf
cmp
push
fists
lock
popa
insl
mov
std
sbb
in
cmp
sbb
adc
and
lea
pop
iret
call
cmp
dec
sub
or
cltd
jmp
push
or
lea
sbb
fcoms
mov
pop
sub
push
sub
or
pusha
pop
cs
dec
das
in
and
push
sbb
ficoml
mov
inc
sub
in
rcl
sub
lds
or
mov
popf
call
fdivs
int3
loopne
sub
or
scas
mov
xlat
aam
imul
enter
popa
out
add
mov
push
jge
rclb
pop
shlb
sub
ret
mov
outsl
in
xchg
in
enter
lods
add
stos
clc
popa
sub
repnz
or
cli
lods
mov
mov
pop
pushf
jns
mov
les
jo
mov
sub
ss
pop
sbb
mov
adc
and
repz
mov
sub
repnz
dec
fcmovne
lods
adc
mov
and
sub
movsl
cmpl
xchg
xor
sub
test
pusha
push
or
cmpsl
push
loopne
pop
cwtl
mov
fiaddl
mov
sbb
sbb
xchg
or
push
add
mov
push
sub
jns
int
jnp
movsb
pop
dec
cmp
or
mov
stc
addl
or
pop
jns
in
fistps
pushf
icebp
push
cmp
ret
jns
xor
rcrb
or
daa
mov
xlat
dec
adc
dec
inc
push
mov
dec
out
pop
lock
mov
add
gs
lock
mov
jae
pop
mov
mov
cld
mov
mov
dec
adc
std
stos
sub
or
bound
mov
test
jnp
loop
fistl
inc
sub
pusha
jno
lods
jg
pop
mov
popa
pop
add
sbb
jecxz
addb
mov
inc
arpl
mov
stos
or
sub
fsubl
loope
mov
push
loope
sbb
cmpsl
lock
in
xor
subl
into
lret
pusha
sub
pop
or
add
leave
aam
cltd
and
mov
loope
cmpsl
aad
fists
cmp
inc
out
sbb
mov
clc
xchg
and
dec
xchg
enter
pop
out
xor
sbb
fcoms
stc
sub
jmp
mov
jno
cmpl
das
popa
mov
jmp
adc
jno
addr16
jl
inc
adc
pop
or
jo
and
pusha
xchg
lods
loop
or
adc
inc
das
xchg
and
adc
adc
sbb
in
aad
loope
dec
xchg
pop
add
out
cwtl
fmul
in
xchg
and
sbb
pusha
dec
mov
xchg
xorl
inc
xor
mov
push
test
out
adcl
inc
ss
cltd
cmc
js
inc
push
jb
clc
mov
mov
sub
sub
fsubl
inc
mov
sbb
aad
call
xchg
fwait
push
imul
mov
mov
les
sub
in
scas
push
sbb
xor
rolb
adc
mov
test
xor
and
fnstenv
shlb
adc
mov
sbb
mov
in
addl
push
stos
dec
testl
cltd
negb
dec
and
pusha
xlat
test
mov
test
dec
jne
mov
loop
or
mov
imulb
sbb
out
pop
push
push
sbb
or
cmpsb
mov
and
sub
insl
movsl
lods
movb
mov
roll
outsl
repz
repz
movsl
out
mov
pop
es
out
and
test
shlb
bound
xchg
mov
adc
push
push
cld
scas
jbe
push
dec
inc
xor
ljmp
shlb
popf
mov
mov
add
stos
or
jl
mov
mov
mov
adc
xchg
das
call
call
xchg
and
sbb
mov
cltd
pop
lock
loopne
lods
in
stc
and
enter
shl
cwtl
andb
popa
mov
test
movsb
hlt
fisttpll
mov
leave
cmpsl
bound
ss
shl
fdivrs
push
std
jb
imul
sub
adc
sub
mov
fs
jmp
adc
inc
adc
icebp
lock
sbb
mov
dec
push
xor
mov
add
lods
xchg
notb
jge
or
inc
dec
jmp
dec
mov
inc
cld
sbbl
icebp
sbb
in
stc
pop
cltd
lock
dec
call
stc
in
jmp
mov
inc
daa
ljmp
mov
cmp
jge
pusha
sbb
clc
out
mov
mov
push
cmp
push
rorl
gs
adc
fsubr
xchg
test
repnz
mov
cltd
sub
cmp
cli
sti
fsubrs
mov
dec
fdivrl
andl
and
push
mov
pop
es
push
add
push
cwtl
xchg
fsubp
add
in
loop
fnop
mov
std
pop
adc
andl
add
imul
and
clc
jb
mov
xor
adc
dec
daa
cmp
push
rclb
xchg
sbb
add
rcl
xor
pop
pop
xchg
xlat
mov
sbb
xchg
enter
leave
fstpt
mov
shrb
mov
xor
cmp
adc
in
fs
and
jg
lods
leave
mov
inc
and
stos
mov
or
mov
pop
loope
lods
pop
xchg
fcoml
pop
mov
enter
orb
mov
lods
andl
push
lods
mov
mov
push
mov
int
inc
push
push
int
int
test
ljmp
cmp
and
ret
shl
out
jbe
xor
rcl
ret
mov
and
roll
and
push
popf
or
cwtl
lods
int
xchg
rorl
and
add
imul
ret
neg
lahf
mov
outsb
adc
orb
popa
xor
mov
xorl
sub
fnstenv
cltd
daa
xchg
outsb
mov
addl
outsl
out
rcll
add
push
es
add
xchg
add
push
mov
loope
fwait
insb
inc
ljmp
enter
jp
mov
or
shlb
outsb
and
outsb
pop
pop
in
data16
mov
dec
scas
mov
xchg
or
mov
mov
enter
out
cwtl
popf
out
movsbl
sti
push
dec
mov
inc
flds
leave
sbb
enter
mov
push
and
or
enter
jns
jl
add
scas
mov
ret
mov
push
mov
daa
dec
stos
enter
popf
adc
rorl
add
mov
xchg
je
adc
pop
xchg
jmp
aad
lds
sub
mov
cmp
jmp
cltd
sub
rorb
sub
pop
adc
sbb
cmp
mov
add
mov
cmc
jbe
shlb
jbe
popa
out
jmp
out
ljmp
push
sbb
sub
dec
mov
jmp
sbb
jmp
repnz
xlat
fnsave
idivb
data16
loope
or
test
and
popa
ds
testb
xchg
fcoml
mov
dec
add
cmpsb
jl
stos
push
xor
movsl
and
dec
mov
adc
sub
shrb
jb
sub
stos
push
sbb
adc
adc
cmp
hlt
loopne
icebp
es
movsl
data16
mov
rcrb
sbb
sar
faddp
pop
in
pop
cwtl
sahf
or
icebp
sbb
xchg
lea
jle
xor
sbb
subb
sub
sahf
and
sbb
inc
das
loopne
push
pop
mov
movsb
inc
add
and
outsb
repnz
test
xor
in
fwait
mov
adc
dec
aaa
mov
es
pop
loopne
adc
add
push
ljmp
push
data16
notl
data16
xchg
xor
sbbb
sbb
mov
test
pop
add
jbe
lcall
adc
mov
add
loopne
sub
gs
xchg
shl
pop
shlb
and
lock
sar
mov
into
mov
lahf
pop
in
add
sub
test
ret
xchg
jns
pop
lds
mov
lea
sub
or
test
add
lock
cmc
mov
xchg
jae
dec
in
adc
es
xchg
hlt
gs
movsl
mov
cltd
mov
scas
ljmp
icebp
ds
add
test
push
cmp
fisubl
xor
inc
fwait
data16
adc
scas
sub
cmpl
divb
sub
push
adc
pop
or
dec
or
mulb
mov
out
aas
test
and
ljmp
xor
or
mov
cltd
in
mov
xchg
pop
push
popf
add
idivl
imul
mov
cmp
mov
dec
pop
pop
xor
ficomps
xchg
sbb
jne
mov
addr16
adc
mul
leave
adc
les
mov
clc
dec
sub
pushf
mov
cwtl
push
inc
dec
clc
cs
xchg
aam
popf
cmpsb
mov
xchg
mov
lds
jg
push
pushl
mov
dec
add
mov
and
and
jne
cs
nop
mov
add
int3
add
les
out
addr16
jecxz
push
adc
and
jl
leave
inc
stos
adcb
mov
fld
loopne
and
adcb
mov
mov
cmp
and
jl
popf
sbb
lds
ljmp
aas
or
mov
shrb
push
pusha
imul
jbe
pop
push
sub
into
adc
cmpl
adcl
test
fisubl
pop
push
in
cld
sbb
hlt
pop
cld
xchg
fld
das
sbb
idiv
pop
enter
popf
pop
mov
mov
xchg
dec
fnsetpm(287
push
sbb
mov
mov
sub
popa
add
xrelease
push
lahf
mov
dec
or
pop
hlt
and
sbb
mov
idivb
push
cmp
or
jmp
jno
stc
call
ret
jns
jp
popf
rolb
int
push
or
jbe
ficoml
xchg
into
adc
jp
mov
lcall
cwtl
sub
cli
sbb
movsl
adc
xchg
pusha
lret
dec
adc
mov
sbb
mov
add
nopl
sbb
scas
lods
cs
add
cmpsb
lea
lock
mov
test
adc
jns
dec
mov
adc
mov
xchg
adc
mov
push
icebp
jmp
imulb
jmp
idivb
test
pop
push
and
out
mov
sbb
or
push
das
mov
mov
push
add
sub
pop
das
popa
rcrb
call
mov
out
push
xchg
fucomi
pop
ficoml
sbb
lea
hlt
and
push
mov
mov
mov
fcomp
gs
repnz
mov
mov
mov
enter
mov
int3
mov
mov
pop
push
inc
mov
or
sub
imul
insb
data16
or
sub
or
sbb
push
mov
cld
dec
fxch
jle
and
je
mov
movsb
fmuls
cmpsb
sub
lea
xchg
xor
inc
into
pop
pop
loop
testb
lret
fdivrs
dec
adc
adc
mov
decl
scas
sub
lock
and
test
test
out
sti
sbb
push
stc
pop
je
and
dec
lods
or
mov
mov
hlt
xor
mov
mov
mov
addl
out
lods
aam
std
adc
mov
mov
sub
test
mov
aaa
aaa
pusha
js
lds
mov
add
in
out
xchg
in
pop
mov
addr16
orl
push
and
mov
dec
clc
sub
aaa
pushf
cli
xorl
pop
mov
mov
mov
cli
push
xorb
and
jbe
ss
insb
jbe
mov
or
mov
movl
out
enter
push
and
inc
jmp
ljmp
or
jbe
dec
pop
test
pop
imul
xchg
aaa
adc
mov
ljmp
push
test
imul
dec
jo
jg
pop
pop
jo
or
dec
cmp
sarl
jo
cmc
inc
loopne
test
xchg
push
loop
xchg
cmp
sbb
push
fists
outsl
lcall
sbb
dec
sub
es
mov
lea
jmp
stos
and
add
and
adc
sub
xor
daa
mov
daa
std
les
popf
insl
int
xchg
xor
outsb
shrb
mov
sbb
lahf
mov
test
mov
pop
mov
jae
lcall
loop
adcb
adc
or
mov
xchg
int3
or
testb
iret
scas
into
push
sbb
imul
and
div
and
test
dec
dec
jno
and
leave
pop
lods
pop
sbb
fcomps
mov
pop
fsubrs
adc
xlat
inc
xor
jne
xor
adc
in
imul
test
stos
dec
mov
push
push
adc
mul
je
jb
stos
sbb
dec
stos
aaa
repz
test
clc
lods
leave
js
aaa
je
int3
stos
in
jle
imul
push
popf
imul
cmp
mov
call
and
jbe
ljmp
cli
sarl
adc
adc
mov
push
add
or
loop
jl
push
lods
sub
mov
jl
mov
xor
fwait
inc
push
popa
lret
in
cmpl
sbbl
sub
leave
push
clc
enter
leave
push
clc
add
jne
leave
push
clc
cmp
push
mov
mov
mov
loope
mov
sub
push
and
dec
jb
mov
pop
pusha
jb
sar
nop
jb
clc
mov
mov
and
jmp
ljmp
or
mov
and
inc
adcl
mov
push
mov
inc
pusha
mov
mov
je
mov
adc
lods
leave
scas
dec
cmp
add
negb
adc
push
and
ljmp
xchg
arpl
ret
pushl
dec
pop
xchg
imul
leave
jae
testb
cmp
inc
adc
mov
push
leave
sbbl
test
jmp
fnstenv
mov
arpl
sbb
inc
outsl
add
popf
fstps
adc
push
jmp
mull
sbb
cmpsl
out
nop
rorb
adc
fisttpl
movsl
cmc
push
pop
mov
mov
inc
mov
mov
mov
mov
cmpsl
shll
ss
push
aaa
adc
gs
shl
dec
mov
and
lret
hlt
cs
fchs
xchg
xchg
es
push
mov
adc
cmp
nopl
or
or
mov
loopne
stc
mov
test
mov
sbb
mov
and
mov
mov
mov
call
movsb
and
push
loope
outsb
fisttps
rcrb
mov
cmpsl
in
xchg
or
push
cmpsl
leave
movsl
pushf
test
sub
xor
ret
inc
jbe
inc
andl
rorl
sbb
fwait
pop
int3
push
jnp
pop
xchg
xchg
mov
adc
mov
mov
mov
mov
mov
and
dec
push
clc
mov
rcrb
inc
jae
cs
xor
test
stos
jl
testl
loopne
iret
outsl
pusha
push
pop
add
std
and
sub
shrb
out
add
cmp
clc
mov
pop
sub
mov
inc
push
inc
mov
xor
pusha
mov
sarb
dec
enter
or
data16
test
aam
xchg
cltd
xchg
mov
adc
ljmp
xchg
ljmp
mov
inc
cltd
movaps
sub
out
lods
sbb
pop
call
fstps
scas
mov
jg
mov
dec
mov
insb
sub
iret
and
xchg
sbb
addl
jmp
add
std
xchg
sbb
pusha
out
fmul
xorl
in
cmpsl
es
mov
and
and
mov
xchg
negb
mov
mov
movsl
mov
and
sub
cli
test
or
cs
fadds
pusha
sbb
pushl
mov
les
jmp
fmuls
xor
imulb
mov
cmp
and
fisubl
cmpsl
aaa
adc
lock
sub
wrmsr
inc
xlat
cmp
sub
xor
ljmp
ljmp
fs
test
mov
push
jmp
mov
lea
and
dec
adc
inc
or
pusha
push
mov
ficomps
rcl
xor
stc
jae
loopne
cltd
je
int3
test
cmp
jae
cwtl
mov
clc
rorb
and
mov
mov
pusha
aad
mov
inc
negb
jae
push
push
fsubr
mov
jo
cmp
jge
sbb
popa
daa
addr16
sbb
lret
pop
aas
clc
cmp
aaa
mov
xor
pusha
jg
push
test
mov
jb
xchg
call
test
pusha
mov
movsl
fdivrs
jne
lods
sbb
jne
jl
scas
lea
mov
cmp
push
sub
mov
or
shll
inc
or
mov
xor
fdiv
enter
test
jge
leave
xchg
mov
shl
mov
sub
or
xchg
call
fcomi
jne
jg
outsl
push
shll
sub
movsb
loop
scas
leave
pop
loopne
int
decb
je
mov
icebp
loop
jo
mov
bound
jl
mov
loopne
xor
ljmp
push
outsb
fmull
jne
loop
and
pusha
sbb
inc
dec
dec
add
loop
dec
fs
xchg
out
rcrb
das
or
loop
imul
lea
pop
repnz
fimull
cwtl
in
mov
xchg
insl
loopne
mov
dec
inc
icebp
je
jecxz
hlt
adc
aam
pushf
pusha
repz
testb
in
adc
and
xchg
and
xor
pusha
or
cld
ds
xchg
fdivrl
or
inc
subps
pusha
sub
adc
jns
adc
inc
mov
inc
repz
mov
flds
and
mov
push
mov
inc
push
or
adc
lea
repnz
pusha
repz
mov
adc
add
pop
mov
scas
push
ja
pusha
jno
fimull
dec
mov
inc
push
inc
cmpl
xchg
das
aas
js
stc
inc
xchg
inc
pushf
mov
rorb
cmpsb
mov
add
ljmp
adc
adc
dec
fcomps
adc
subl
cmp
imul
or
sbb
sbb
jo
loope
mov
ds
int3
pusha
add
popa
pop
sub
dec
mov
mov
cmpl
pop
mov
push
shll
dec
cld
pop
int
push
mov
popa
sub
mov
clc
lock
aas
jno
push
jo
mov
icebp
fldl
xor
std
rcl
xchg
or
and
xor
mov
das
push
push
adc
adc
jp
int3
cmpsl
aaa
pushf
mov
push
mov
cmpsl
mov
aaa
adc
fisubrs
or
sahf
mov
les
xchg
pusha
popa
fsubp
fdivs
in
adc
push
dec
push
test
sahf
jle
dec
in
sub
and
add
xor
and
movsl
test
lds
sbbl
jecxz
lock
mov
mov
mov
inc
xor
pop
xchg
dec
mov
push
or
sbb
mov
mov
fbstp
out
and
push
sub
mov
fldt
aaa
mov
pop
push
shl
loope
xor
push
mov
or
jle
mov
xorb
fs
jnp
mov
cmp
dec
jae
mov
push
out
sbb
and
aam
mov
ret
lods
mov
pop
fwait
sbb
mov
inc
inc
cmp
das
lahf
mov
adc
clc
loopne
mov
mov
xor
out
ficomps
jns
pop
mov
jp
hlt
notb
pop
sub
loop
daa
push
sbb
mov
xchg
xor
sub
jge
add
xor
daa
fadds
shlb
clc
popl
jne
push
aad
ds
sahf
aas
jecxz
cmp
enter
cs
test
or
scas
daa
and
cs
push
add
scas
or
xchg
or
xchg
mov
jb
cli
es
mov
in
mov
call
in
jbe
dec
icebp
jnp
push
mov
pop
sub
xor
add
cld
int
sbb
int3
shrb
iret
xchg
fiadds
push
xchg
sbbb
lock
mov
jno
les
stc
aaa
jecxz
dec
inc
inc
lods
mov
xchg
adc
fbstp
aaa
inc
add
mov
add
inc
add
cmp
imul
adc
frstor
adc
push
out
sahf
pushf
cmp
addl
inc
pushf
sti
or
notl
and
push
repz
rolb
dec
into
cs
les
jnp
sbb
std
sbb
adc
test
push
jge
bound
lret
jle
dec
sub
pop
push
mov
adc
gs
jae
adc
loop
push
sub
out
in
les
lea
rorl
loopne
lret
mov
add
out
popf
jg
pop
xchg
enterw
fidivrs
add
andl
add
les
push
inc
mov
aaa
mov
add
xchg
outsl
sub
jg
mov
inc
adc
sbb
or
jge
add
pop
dec
jae
loopne
jl
and
xchg
pop
lret
es
push
mov
outsl
add
push
subb
repz
sbb
out
add
xor
andb
mov
dec
int3
inc
cltd
in
in
xor
in
cmc
enter
iret
and
add
adc
adcl
subb
xchg
jl
sub
pop
push
jae
je
sub
or
push
cmp
xchg
addb
loopne
sbb
out
inc
sbb
or
inc
cmc
imul
xchg
bndstx
mov
lcall
sbb
xchg
cwtl
lods
popa
jnp
adc
jmp
sbb
popf
push
jns
testb
aaa
int3
out
jne
dec
inc
ficoms
xor
cmp
movsl
jecxz
imul
add
mov
xchg
push
cmpb
aam
or
inc
push
pop
adc
lcall
dec
scas
mov
mov
dec
push
add
lea
xor
mov
out
sub
jecxz
fcoml
rorb
mov
shrb
sti
add
mov
dec
jmp
arpl
and
and
into
cmpsl
adc
lahf
enter
push
xchg
push
outsl
fdivr
std
int3
cltd
mov
mov
xorl
dec
leave
xchg
in
scas
mov
data16
jl
out
push
cltd
ljmp
movsl
mov
dec
adc
push
test
sbb
sub
outsl
lods
hlt
es
aad
fisttpl
adc
idivb
pushf
or
mov
in
cwtl
jae
pusha
pop
cmpsb
pop
add
aaa
and
je
clc
orl
imul
or
mov
rolb
xchg
lock
jmp
lock
adc
push
push
les
dec
addr16
nop
iret
dec
mov
inc
xor
mov
popf
fwait
mov
insl
sbb
fwait
adc
mov
in
enter
push
adc
fimuls
lea
or
js
mov
mov
loopne
mov
push
pop
jge
out
ficoml
popl
adc
jnp
bts
and
lock
xchg
push
pusha
dec
or
dec
enter
jno
mov
adc
into
adc
fwait
lods
ds
inc
jno
aam
push
jno
push
shl
data16
sub
jmp
outsb
mov
mov
scas
dec
jmp
fsubrs
mov
das
or
insb
sbb
lds
popf
xor
cs
cmp
rcr
roll
popw
fldt
dec
loopne
popa
aas
add
repnz
dec
pop
pop
fs
mov
adc
rorl
add
lock
xchg
add
xchg
leave
xchg
out
sbb
loopne
jo
pusha
and
jns
popa
mov
jno
mov
aaa
or
xchg
xor
pop
ja
sbb
sbb
pop
xchg
push
adc
imul
popf
mov
cmp
jmp
pop
inc
jle
mov
fucomip
div
test
ficomps
test
push
adc
fsts
cs
cmpsl
xchg
adc
mov
sbbb
sub
sbb
sub
pop
pop
or
test
imulb
add
jmp
xchg
add
pusha
mov
cld
ss
lods
cld
test
adc
scas
adc
repnz
fbld
fstl
cld
cmp
clc
pusha
into
mov
cld
imul
rcl
lock
not
adc
hlt
sub
jecxz
and
lock
jmp
adc
adc
mov
pusha
add
mov
cmp
scas
add
cmp
stos
sub
pusha
imul
shlb
xlat
jmp
lcall
hlt
cld
test
out
xor
in
ss
jecxz
test
test
enter
cmc
cld
test
aaa
sub
xchg
and
fbstp
mov
rorb
pop
or
mov
jmp
hlt
mov
dec
orb
gs
mov
loop
mov
scas
sub
insb
inc
push
xor
lret
sub
pusha
pop
jge
mov
notb
xchg
stc
insb
or
cmp
std
ss
and
cld
imul
pop
mov
into
xchg
out
xor
cmp
daa
call
and
test
and
push
cmp
jecxz
adc
xor
out
jmp
stos
dec
out
sub
push
adc
sarb
cmp
fimull
jne
inc
mov
pop
mov
xchg
mov
testb
mov
pop
mov
push
int
push
shl
jne
ljmp
addr16
lea
bound
push
popa
test
into
mov
rcrl
inc
or
and
andb
mov
or
pop
andb
pop
hlt
jmp
jge
sbb
divb
arpl
sbb
aam
and
loope
repz
sub
or
jmp
add
sbb
gs
xor
sub
dec
jge
lock
wbinvd
mov
and
xchg
mov
xor
rcrb
xor
mov
popa
das
or
int3
inc
sub
stc
call
cwtl
pusha
fs
out
aaa
das
test
pushf
xor
jns
mov
stos
aaa
push
inc
or
cmp
pop
xor
insb
mov
jecxz
stos
sub
xchg
rorb
lahf
sbb
scas
imul
outsl
push
sbb
sbb
loope
push
xor
xor
mov
sub
lods
sub
jo,pn
cmp
pusha
fnstenv
test
add
cmpsw
ret
push
sbb
seta
loop
adc
and
jno
pusha
je
sbb
aaa
xor
pusha
mov
sub
cmp
insb
adc
mov
mov
jno
and
jge
or
cmc
loop
mov
insl
es
adc
arpl
sub
dec
sbb
sbb
push
stc
out
or
pop
pushf
xlat
scas
mov
mov
enter
clc
xchg
jp
xor
cmpsb
cs
sub
fsubrs
pop
and
or
test
cmp
or
sbb
xor
xor
push
les
lcall
and
xchg
sub
pop
nop
xorl
or
movsb
push
pop
movsl
lock
mov
pusha
das
adc
pop
ja
mulb
sub
xor
or
and
or
insl
outsl
not
shrb
cmp
add
popa
mov
xchg
jae
jo
aam
popa
enter
xor
popa
rorb
lods
fsubrp
sbb
jp
lret
test
cmp
sub
sbb
jmp
jmp
dec
xor
adcl
xor
mov
mov
ljmp
and
imul
dec
push
out
sub
pop
push
inc
or
dec
das
int3
mov
pop
adc
jl
das
adc
jo
sarb
das
jle
dec
cmp
pusha
xchg
das
popf
sbb
out
push
xchg
ficoms
or
in
and
or
popa
jmp
scas
shrl
cmpsl
xchg
cmc
mov
mov
out
hlt
xchg
dec
inc
jl
je
dec
push
test
mov
loope
xorl
sbb
xchg
incl
inc
adc
popa
stc
xchg
shll
mov
lret
sbb
sbb
or
repz
adc
add
lret
pop
movntq
xchg
repnz
mull
cltd
mov
lahf
xchg
insl
or
in
and
aaa
mov
sbb
idivl
imul
xchg
mov
push
mov
mov
jnp
test
stc
mov
enter
or
xor
xchg
jl
push
xorl
enter
sbbb
xor
mov
ret
sub
lret
stc
aad
call
mov
cmc
insl
jb
sub
mov
outsl
shll
or
or
mov
mov
enter
pusha
jns
adc
es
xchg
pusha
inc
divb
sbb
push
mov
neg
out
cmp
popa
mov
loop
jns
fwait
jle
aam
lea
mov
mov
sub
loopne
xchg
sub
dec
xor
xor
call
nop
out
adc
lea
popf
push
sub
movsl
imul
xchg
or
mov
push
mov
loopne
call
std
or
sub
and
inc
sub
mov
adc
fsub
daa
mov
cli
js
movsb
sahf
and
pusha
pop
bnd
and
std
ljmp
adc
lds
insl
fsubs
daa
cmp
imul
adc
pop
xor
add
aad
ja
lods
lock
sbb
push
cs
and
scas
or
xchg
add
pop
sbb
enter
add
imul
pop
cwtl
ss
lock
fdivp
xchg
hlt
and
inc
jb
out
cmp
addr16
xchg
or
cli
jmp
sub
adc
enter
push
xlat
aad
movsl
xchg
inc
inc
pop
jne
add
daa
jg
pop
loop
leave
jg
in
inc
add
out
aas
add
inc
out
cmpsl
jmp
push
xchg
and
scas
or
cmp
jo
loopne
rolb
adc
mov
xor
sub
test
mov
and
jmp
pusha
and
mov
xor
mov
mov
cld
sub
lea
in
xchg
andb
and
notl
and
iret
es
scas
das
mov
out
nop
negb
pusha
adc
jo
js
addb
sbb
test
stos
idivb
imul
sbb
sub
icebp
idiv
adc
mov
lock
xchg
mov
and
ss
sbb
icebp
das
cs
loope
dec
pop
pop
fisubl
jbe
xor
xchg
stos
cwtl
xor
dec
lock
mov
mov
lret
jbe
std
pusha
jmp
adc
loope
sbb
cmpsl
xor
fdivl
pop
and
sbb
push
clc
mov
or
dec
mov
popa
xor
movsb
jno
xchg
stc
psubusb
pushf
and
lock
notl
sbb
xchg
pop
rorb
lea
pop
loop
aas
rclb
push
push
cmp
aaa
sbb
xor
sub
das
out
jmp
xor
sbbl
mov
jg
jno
dec
inc
orl
dec
xor
jno
pop
in
adc
and
aas
nop
xchg
outsl
daa
orl
sbb
pusha
pinsrw
add
movsb
popf
adc
in
aas
enter
mov
ret
adcl
dec
xor
and
jo
into
mov
negb
dec
pop
cmpl
sub
jmp
jmp
and
adc
or
push
in
dec
mov
std
adc
and
arpl
loope
xorb
lods
sbb
jo
cmpsb
inc
and
jo
sub
cwtl
fisubrs
out
pop
jbe
pop
shl
mov
xchg
inc
jae
jbe
xchg
aam
mov
sub
push
rclb
loopne
movsb
lock
push
cwtl
jbe
sbb
mov
push
jo
imul
mov
imul
imul
imul
imul
imul
jne
jecxz
test
and
push
xchg
jmp
popa
push
jno
cmp
divb
rcl
stos
div
int3
mov
adc
inc
cmp
test
pusha
test
mov
mov
or
data16
ljmp
mov
test
add
fldcw
hlt
testl
mov
negb
adc
and
push
dec
movsl
xor
jae
xor
pop
shlb
sub
push
idivb
imul
jecxz
or
shl
cmp
arpl
out
xchg
pusha
pop
jp
jmp
js
scas
mov
cwtl
pop
rcrl
test
stos
jmp
mov
fsts
sub
nop
sub
pop
mov
rolb
mov
and
lods
es
or
rcll
fbld
incb
push
add
xchg
xor
jb
inc
inc
fisttpll
jbe
mov
adc
lret
jno
inc
daa
jno
loope
int3
mov
inc
pusha
mov
popf
ss
ret
push
push
adc
ja
test
push
mov
sbb
pop
andl
push
adc
mov
xor
push
iret
push
sbbb
push
je
fsubrs
addb
xchg
cwtl
push
fcomp
mov
add
mov
mov
push
mull
hlt
mov
add
jbe
and
daa
inc
hlt
imul
mov
pop
xor
es
adc
imul
cwtl
daa
or
aad
daa
mov
test
daa
int
in
aaa
cld
imul
sub
and
popl
js
and
and
sbb
lods
cmp
pop
stc
daa
insl
imul
test
lock
push
add
push
addr16
xor
jle
jno
dec
movsb
and
mov
les
sahf
ss
pop
stc
daa
adc
cmp
dec
mov
aaa
push
fstp
cmpsl
shl
sub
daa
daa
add
sbb
bswap
std
cmpsl
dec
aam
or
adc
sbb
adc
sub
and
sbb
xchg
sbbl
mov
rcll
sub
xabort
xor
cwtl
mov
mov
hlt
sub
adc
sub
icebp
popa
test
je
movl
and
add
adc
pop
sbb
pop
and
rclb
daa
push
mov
xorl
in
rorl
mov
inc
push
adc
pusha
mov
jl
jno
cld
popa
ljmp
push
and
adc
add
icebp
ljmp
rclb
push
add
adc
and
xor
and
or
movsb
psraw
mov
cmpb
ljmp
push
push
inc
mov
je
rclb
or
movsb
daa
loopne
and
mov
in
popa
add
jno
js
lock
shr
cld
shr
mov
cld
mov
adcl
and
and
and
mov
sub
push
push
aad
mov
add
mov
push
jl
mov
xor
and
pminsw
lock
cld
mov
cld
cltd
out
cld
sub
scas
jne
and
add
sub
adc
jmp
test
adc
nop
push
lock
jae
jo
lods
mov
sub
popa
dec
das
loopne
mov
sub
xor
out
test
shll
inc
rcrb
sub
and
jns
arpl
and
loope
adc
add
xor
mov
sub
mov
mov
and
call
push
js
mov
icebp
mov
loopne
rol
rcrl
ljmp
cmp
in
pusha
lods
cmp
out
cmpsb
enter
pusha
adc
push
jl
push
testb
clc
movsl
push
loopne
cmp
or
mov
adc
out
xchg
mov
or
fwait
xchg
aam
out
out
mov
lock
addr16
fldenv
fldlg2
shrb
loopne
ret
imul
inc
inc
and
cld
std
out
shl
cld
dec
imul
jge
rorl
ja
out
jge
mov
outsb
pop
jecxz
sbb
pop
scas
sub
adc
dec
jb
aaa
mov
pop
stos
cli
push
dec
pop
mov
pop
push
lods
loopne
jae
int
in
or
adc
cmpl
ds
insl
mov
arpl
xchg
jne
repnz
and
dec
enter
cltd
add
xchg
cmp
sub
test
arpl
movsb
pop
imul
mov
dec
push
mov
ja
aam
xchg
lods
or
adc
lods
addr16
push
push
mov
push
aam
mov
dec
xor
xor
das
xor
lods
shlb
leave
fidivrl
data16
pop
pop
shl
adc
dec
loope
stos
jo
push
and
dec
push
xchg
push
push
popa
pop
ljmp
dec
fidivl
push
lahf
dec
and
adc
jne
mov
mov
movsb
inc
mov
shll
mov
cmp
mov
mov
xchg
dec
mov
hlt
inc
aas
nop
pusha
movsl
icebp
xor
inc
pop
sub
fiaddl
scas
les
xor
ljmp
mov
outsl
in
movsb
add
aam
mov
cmpsl
add
cmpsl
rcrl
insb
jmp
loopne
iret
shrl
and
lock
mov
test
cwtl
cmp
inc
push
jo
and
divl
and
in
cwtl
sub
sub
xchg
shrl
aaa
xor
jle
cwtl
pop
and
ss
jmp
lcall
dec
clc
mov
sbb
iret
sub
movsb
mov
ret
call
xchg
arpl
mov
insl
jecxz
fnstenv
aad
xlat
mov
xlat
sub
lret
lcall
mov
sub
sub
clc
mov
loope
int3
xchg
stc
sahf
cmp
jp
pop
fcmovnu
shl
cli
mov
cwtl
cli
fnstsw
leave
out
mov
sahf
pushf
add
sbb
xchg
stos
sub
jno
mov
jp
lods
jmp
ret
loope
pop
pushf
dec
pushf
sub
and
mov
testl
jo
sub
stc
sahf
or
ret
sub
cwtl
cmp
in
cwtl
xchg
mov
lcall
xchg
add
ss
jl
mov
sahf
repnz
int3
lods
clc
ret
into
rolb
test
cmp
jl
cmp
enter
xor
adc
mov
and
fldcw
jo
mov
int3
shll
daa
enter
scas
testb
ret
xchg
rcr
ljmp
cmp
das
pop
jo
shlb
insl
fsubr
sbb
inc
fidivs
push
pop
mov
sbb
inc
lds
pop
imul
mov
inc
adc
mov
add
or
dec
fisubrs
jl
out
add
outsl
push
shll
mov
imul
rcl
mov
cltd
ja
arpl
inc
popa
dec
imul
bound
adc
rcrl
mov
mov
dec
pop
xlat
mov
dec
push
mov
movsb
lds
rcl
enter
lock
pop
push
sub
pop
outsl
mov
dec
scas
pop
int3
fmuls
cmp
dec
mov
lock
adc
mov
pop
stos
divl
imul
test
rolb
call
inc
insb
xlat
sub
xchg
lods
adc
jecxz
rolb
mov
xchg
test
lock
mov
inc
cmc
push
sbb
mov
fimuls
or
pop
pop
and
xchg
pop
pusha
test
out
in
imul
inc
lock
lret
cltd
adc
sub
sub
xor
mov
movsl
fimuls
lds
xchg
mov
rcl
movsb
shll
mov
xchg
shl
mov
dec
cmpsl
sub
popf
shrl
mov
jecxz
movsb
xor
push
lods
outsb
xlat
pop
insb
inc
push
or
dec
sub
gs
jns
daa
pop
popf
movsl
aad
add
in
repz
or
ljmp
push
sbb
testl
or
xchg
enter
adc
add
in
pop
mov
pop
cmp
aad
lock
adc
loopne
rclb
adc
daa
mov
inc
push
lock
out
dec
cmp
shlb
cmp
shrb
lock
out
jl
rorb
call
hlt
pop
andl
nop
cs
add
es
add
movsl
xchg
je
xchg
icebp
out
pop
xchg
cmp
pop
inc
push
pop
cmp
and
and
xchg
mov
aaa
testw
mulb
mov
gs
jg
loopne
push
mov
into
add
pushf
sub
adc
cld
cmp
shlb
mov
pop
test
pop
xor
xchg
adc
ret
xchg
mov
mov
icebp
mov
xchg
cmp
adc
mov
lcall
pop
rcrl
ljmp
daa
inc
hlt
mov
mov
or
adc
mov
mov
adc
iret
push
xor
shlb
pop
and
sbb
clc
and
dec
xchg
ret
mov
adc
inc
sahf
insb
add
adc
pop
xlat
insb
lods
das
insb
mov
lret
jmp
fsubrl
sbb
rcrb
push
mov
movsb
mov
bound
adc
jnp
pop
mov
leave
icebp
jle
jg
mov
aam
adc
iret
mov
and
pushf
mov
call
cltd
iret
in
loop
xchg
fstps
mov
xchg
add
aam
clc
pop
and
jns
pop
lahf
clc
popf
clc
mov
push
clc
jmp
inc
insb
lock
inc
out
fisubrl
movsl
stos
mov
sbb
testb
and
and
mov
and
icebp
and
mov
movsb
push
xchg
mov
je
lock
popa
loopne
ficomps
dec
fwait
push
xchg
jo
daa
pop
push
dec
dec
mov
outsl
mov
fists
aad
xchg
sbb
fdivs
xchg
mov
sub
test
repz
dec
fsub
push
xlat
loopne
out
les
test
shll
mov
add
xchg
and
mov
mov
xchg
inc
popa
mov
sbb
add
push
and
mov
push
pop
fisubs
in
nop
mov
aam
daa
mov
pop
cmc
loopne
adc
push
mov
xor
or
cmpsb
test
lock
negl
and
daa
orb
lcall
or
mov
mov
mov
and
mov
imul
jp
cltd
rcr
dec
add
cmp
inc
stos
lds
jns
aam
outsl
ja
cmp
pop
jae
loopne
cmc
clc
adc
mov
lds
dec
lock
push
mov
and
mov
mov
test
jns
mov
xchg
mov
popf
cmpsb
xchg
fnstcw
push
mov
popf
jns
push
ss
mov
mov
gs
or
sub
aas
and
std
jl
dec
scas
movsl
adc
aam
sbb
mov
icebp
mov
xor
cmp
lock
inc
push
aaa
inc
dec
or
mov
jno
rclb
push
and
shrl
mov
loopne
push
lea
arpl
scas
sub
push
jmp
pop
lods
test
sub
rcr
pop
jmp
or
xor
xor
in
push
push
addr16
pop
pop
arpl
adc
outsl
xchg
clc
insl
mov
adc
shll
pop
jne
sbb
stos
lret
das
outsl
addr16
xchg
test
push
and
inc
in
inc
in
and
mov
popa
pop
test
xor
xchg
mov
mov
out
mov
shrb
lock
pop
das
aaa
int3
mov
xchg
dec
shll
fdivs
shrb
fmul
and
orb
adc
and
aaa
push
mov
sbb
arpl
daa
xchg
xor
into
call
jge
mov
mov
xchg
test
dec
sahf
ret
mov
mov
dec
adc
negb
add
out
outsb
xchg
ret
andl
fcoml
inc
xlat
push
xchg
lea
shll
pop
subl
arpl
shrb
dec
sti
adc
dec
addr16
lock
push
adc
cltd
and
aad
xor
inc
push
sbb
sbb
push
ja
mov
lods
leave
and
lock
lea
adc
or
xchg
pop
push
jbe
or
rorb
aaa
cmp
es
xor
shl
lds
push
and
pop
mov
mov
fcmovbe
addr16
inc
push
clc
lret
mov
mov
dec
popf
and
xchg
mov
lods
xchg
js
je
pusha
xchg
pop
stos
sub
jmp
lret
and
fs
push
push
adc
fsubrl
mov
sub
inc
rcrl
or
xchg
pop
adc
stos
xor
jmp
lret
scas
stos
insl
mov
dec
dec
xor
dec
out
dec
fisttpll
dec
lcall
dec
inc
push
cld
andl
cs
aad
js
je
pop
mov
arpl
mov
sbb
or
xchg
aad
ret
adc
xchg
nop
xchg
mov
fidivrs
mov
mov
push
dec
or
dec
aad
ret
dec
mov
lods
dec
lcall
dec
insb
push
xor
push
negb
xchg
rorb
xchg
push
data16
lret
inc
sahf
inc
xchg
inc
addb
jbe
or
push
mov
sub
rcrb
jne
arpl
dec
xchg
xor
std
stos
dec
lret
xor
sub
adc
mov
dec
aas
push
xor
pusha
add
into
mov
mov
dec
mov
mov
mov
mov
mov
call
mov
jge
imul
ds
xor
push
xchg
shrl
mov
or
stos
cmp
push
add
dec
movsl
inc
mov
cmp
call
adc
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
imul
nop
movsl
mov
dec
cmc
out
shr
dec
mov
add
scas
sbb
jnp
sub
inc
sub
aam
or
stos
stc
mov
push
dec
dec
mov
push
daa
lret
addr16
addr16
inc
inc
cli
enter
mov
inc
popa
inc
cmp
cmp
cmp
cmp
cmp
cmp
clc
and
ja
lcall
int3
adc
arpl
xor
mov
and
xor
xor
inc
xchg
mov
pop
push
push
jmp
mov
jle
dec
je
adc
dec
mov
cmp
cmp
clc
adc
mov
ja
sub
add
xchg
jo
push
stos
and
jmp
lret
mov
pusha
dec
pop
clc
lock
dec
inc
push
inc
inc
cmpsl
jb
sbb
fcompl
xchg
pop
adc
out
inc
insb
cmpsl
jmp
repnz
int3
sbb
xchg
jg
xlat
xchg
pop
or
mov
cld
ss
scas
repz
and
aam
loop
mov
cmp
mov
and
jnp
jne
xor
or
icebp
jecxz
mov
adc
mov
mov
mov
sbb
popf
leave
sbb
stos
aaa
lds
test
sub
in
adc
jecxz
leave
and
xor
sbb
in
mov
xchg
stc
inc
stos
clc
mov
or
mov
sub
xchg
and
mov
jo
bound
stc
xchg
adc
xchg
loope
adc
and
lret
mov
cwtl
and
mov
lock
or
ljmp
out
mov
sub
shll
xchg
cmpsb
or
push
sub
iret
sarl
pusha
mov
push
in
shrl
pop
out
push
mov
inc
cmp
pop
sub
push
mov
das
mov
arpl
sub
xchg
pop
stos
sbb
jmp
lret
pushl
out
setge
lahf
sbb
xchg
adc
enter
jae
inc
aad
orw
sbb
lcall
ss
enter
jmp
lret
mov
insb
nop
mov
mov
cltd
push
mov
add
mov
loop
mov
daa
shl
ficoms
shll
jno
lds
dec
icebp
dec
int
cwtl
lock
xor
lahf
lds
lcall
mov
and
in
jecxz
xorb
xchg
arpl
outsb
push
pop
dec
or
push
inc
mov
adc
push
adc
dec
rclb
xchg
adc
shl
push
sub
lock
inc
clc
sbb
push
clc
aam
dec
mov
inc
loop
fsubl
xor
enter
sbb
xchg
push
and
into
mov
inc
and
and
loop
mov
scas
loop
mov
adc
in
mov
xchg
outsb
and
xor
xor
and
adc
and
push
aam
cltd
or
xor
daa
lds
loop
mov
push
repz
shl
mov
and
jg
inc
and
jecxz
scas
scas
xchg
pop
inc
cmpsb
or
in
mov
push
mov
push
push
push
cmp
fwait
xchg
outsl
xchg
jbe
lretw
push
sahf
inc
bound
mov
dec
stos
inc
xchg
push
movsl
leave
adc
pop
stos
and
jns
inc
stos
or
pusha
dec
out
fdivrs
gs
mov
cld
adc
fptan
mov
clc
or
cmc
mov
mov
orb
das
and
lock
sar
test
repz
add
inc
stos
and
mov
enter
pusha
in
xchg
pusha
arpl
push
jbe
dec
inc
aas
cmp
int3
and
or
lret
and
xor
rorl
inc
cwtl
inc
xchg
cmp
inc
jmp
and
cmp
or
add
xor
xchg
xchg
sbb
xor
jne
addr16
pop
pop
dec
les
repnz
mov
cmp
leave
stos
rorb
dec
jmp
pop
data16
push
in
dec
scas
dec
mov
test
cmp
js
add
sarb
test
jl
loop
lret
mov
add
sbb
in
xchg
pusha
xor
push
pusha
lret
fisubl
pop
test
add
cmp
cmp
cmp
cmp
cmp
cmp
movsl
mov
sarl
dec
push
popf
push
xor
cmpsl
jmp
lret
int
and
pop
push
xor
mov
popf
mov
sbb
fs
stos
inc
or
lret
xchg
stos
xchg
mov
mov
fnstcw
scas
popf
in
sbb
jl
mov
arpl
pop
lcall
jne
inc
dec
ss
fstpt
aad
repz
dec
das
or
aad
sub
sub
sub
shlb
mov
sbb
push
enter
insl
cmp
jo
push
and
fwait
movsl
or
sbb
mov
bound
bswap
shlb
sub
ja
mov
js
cmp
cmp
fmul
adc
mov
jg
push
mov
subl
jns
repz
int3
loopne
cli
jecxz
xchg
dec
adc
adc
ret
xor
aas
jbe
data16
inc
fs
add
pusha
cmpsb
xchg
imul
dec
cmp
sub
adc
add
pusha
lock
call
sahf
shlb
inc
lahf
inc
inc
inc
icebp
mov
jle
dec
sbb
shl
insb
adc
lock
bound
and
call
sbb
or
xchg
and
mov
clc
arpl
adc
add
dec
cwtl
dec
push
dec
inc
inc
sub
mov
mov
mov
mov
mov
dec
jo
push
push
dec
in
cmp
dec
mov
in
push
shrl
rclb
xor
pop
cmp
xchg
mov
shlb
ja
jmp
les
loop
aam
and
inc
arpl
push
or
push
dec
mov
lret
mov
push
imul
aad
sbb
pop
sbb
xchg
adc
dec
xchg
inc
sub
into
out
or
jmp
aad
mov
push
sbb
inc
icebp
inc
mov
cmp
cmp
cmp
cmp
cmp
cmp
add
ret
add
mov
loop
jge
bnd
popa
repz
repz
repz
repz
sub
sbb
imul
ja
int
mov
mulb
call
adc
xchg
inc
push
xchg
cmp
jecxz
or
jbe
movl
popa
cmp
clc
cmpsl
lds
bound
jno
push
clc
sbb
dec
mov
add
mov
popa
add
cmp
or
enter
adc
mov
push
dec
push
lds
cmp
xchg
or
cltd
jmp
xchg
mov
xchg
adcb
lret
or
clc
lret
call
je
cmpsb
pop
cltd
inc
mov
call
cmp
cmp
lahf
sbb
stc
mov
out
shll
test
outsb
pop
or
sub
dec
call
mov
inc
pop
pop
add
cmp
cmp
bound
stc
push
stc
or
test
cwtl
mov
jo
adc
sub
sbb
or
clc
std
call
mov
push
mov
imul
cmp
cmp
stc
aam
stc
repz
mov
push
mov
push
inc
cmp
int3
push
adc
test
sbb
mov
inc
leave
call
cmp
movsl
js
pusha
cmc
or
ret
sbb
xchg
fcoms
enter
jmp
jno
cmp
or
fsts
sbb
inc
push
inc
cmp
mov
sub
mov
aaa
popl
xor
in
sbb
and
xor
push
popf
imul
rclb
push
and
jnp
sbb
sub
fs
mov
int
and
aaa
sbb
xchg
stos
int3
sub
sub
push
pop
insl
or
xor
popa
xor
ja
and
and
push
repnz
adc
jne
lock
fmull
imul
adc
mov
gs
popf
lds
or
cltd
nop
xor
cmp
rcl
and
in
stc
inc
or
mov
cmp
jecxz
shrb
pop
push
test
or
leave
mov
jbe
daa
aad
and
xorl
add
xchg
xchg
add
pop
loope
pusha
sub
fdivs
mov
cltd
mov
cmp
push
inc
push
jmp
push
data16
gs
mov
outsl
cmpsl
lock
pop
sub
sbb
lock
stc
add
clc
mov
out
fdivl
push
mov
sbb
xor
or
mov
inc
ret
jae
mov
pop
jno
cld
adc
out
pop
jle
std
mov
rcrl
repz
mov
scas
jne
sub
insl
imul
add
ficoms
movsl
pushf
and
daa
fwait
test
lods
xlat
cltd
negl
pop
mov
xchg
jb
mov
pop
cmc
fdivs
hlt
pop
jge
ja
repz
push
jp
jnp
mov
and
jecxz
inc
outsb
inc
xchg
push
or
adc
lret
mov
in
push
outsl
push
popa
push
arpl
push
cltd
clc
xor
mov
pusha
pushf
not
pushl
popl
setge
mov
not
not
cwtl
jmp
imul
bt
push
add
push
push
pusha
mov
lea
jmp
add
add
clc
sbb
push
push
bt
lea
bsr
neg
bsr
sub
add
or
push
cmc
rcl
push
bt
pusha
movb
sub
pusha
lea
lea
jl
pushf
movw
pusha
mov
jmp
movzbw
mov
add
push
add
shr
ror
call
push
call
outsl
push
aaa
push
ss
lea
lea
bswap
xchg
movzwl
push
lea
pushf
mov
pushf
lea
call
push
lea
jne
movzbw
call
pusha
jmp
mov
lods
call
cmc
mov
pushl
bt
pushl
pushl
test
jmp
push
call
es
insl
push
push
dec
call
mov
add
add
in
pushl
ret
mov
push
mov
pushf
pushl
lea
jmp
lods
jecxz
imul
in
dec
imul
outsb
mov
fs
or
in
jb
pop
push
dec
xor
push
out
jae
imul
insl
fcmovb
and
jnp
sub
push
shrl
imul
push
lds
fsubrl
sbb
das
lods
jle
je
fldl
ret
out
shll
lret
xor
lods
xor
mov
mov
xlat
cltd
divb
mov
pushf
pusha
pushl
push
pushl
ret
mov
bsf
pushf
rcl
mov
movb
pusha
and
pusha
bt
call
push
out
dec
jecxz
mov
mov
sbb
cmp
das
mov
dec
inc
dec
stos
xor
out
lock
jmp
bound
mov
dec
jo
nop
pop
pop
das
stc
pusha
mov
aam
je
fidivs
add
push
mov
jbe
inc
pop
imul
nop
mov
iret
dec
or
push
push
xor
mov
pop
mov
sbb
push
sbb
nop
and
test
sbb
xchg
xlat
cltd
hlt
fildl
dec
call
pop
test
bswap
lea
movzbw
lahf
mov
bswap
not
lea
pushf
mov
not
pop
jmp
cmp
xchg
xor
shl
cmp
rcl
mov
jmp
push
call
pusha
mov
push
movl
jmp
lea
ja
push
inc
jmp
push
call
add
scas
ds
pushf
movl
pushf
call
jbe
stc
pusha
or
mov
call
push
call
and
sbb
adc
pop
mov
mov
mov
fcomps
pushf
movsl
incb
mov
in
mov
popa
rcrl
or
push
jp
jp
dec
xchg
mov
mov
std
jl
and
ja
push
fstpl
cltd
add
add
xchg
or
add
push
lea
je
dec
lcall
and
push
out
dec
ror
loope
cmc
in
popa
insl
jle
push
ret
add
mov
pushf
les
mov
bound
iret
stc
dec
shrl
jecxz
test
sbb
popa
test
mov
pop
in
into
andl
lcall
leave
lock
int3
nop
push
jne
mov
dec
inc
push
sub
cli
inc
jns
cmpsb
jp
mov
fwait
movsl
pushf
scas
push
mov
xchg
test
push
jns
push
call
mov
bts
ror
push
jmp
outsl
outsl
lret
outsb
data16
loopne
push
push
mov
or
movsl
subl
jbe
push
sub
adc
jp
loopne
adc
add
cwtl
sub
data16
repz
shrl
ja
ficomps
iret
xchg
push
ret
mov
sub
ljmp
leave
fwait
xor
mov
sub
or
shlb
adc
sbb
outsl
leave
in
mov
addl
or
imul
sub
cmpsl
adc
test
lcall
mov
inc
xchg
test
xlat
cltd
repnz
aas
xchg
andl
test
test
sbb
inc
out
inc
call
jb
jl
stc
shrb
bound
les
and
add
addr16
cmp
out
adc
jns
popf
push
das
push
aas
test
push
mov
bnd
pop
clc
pushl
popl
stc
cmp
movb
lea
ja
jmp
and
add
mov
adc
out
inc
call
dec
in
outsb
push
push
lods
push
pop
into
mov
pop
rolb
test
ss
aas
add
cltd
xor
or
and
xchg
frstpm(287
jnp
cld
leave
mov
mov
into
jne
movsb
popf
mov
cwtl
mov
pop
xlat
cltd
icebp
out
aam
std
sub
lods
pop
add
sbb
mov
jmp
push
call
jo
and
push
call
leave
xchg
cmp
call
pushf
mov
lea
call
push
call
push
push
call
cs
dec
jmp
pusha
movl
movb
mov
mov
push
mov
movb
mov
pushl
ret
stos
stos
lea
adc
gs
inc
push
shr
arpl
lret
dec
jl
fiadds
pop
jo
gs
lret
jo
call
or
adc
push
movsl
sbb
out
pop
pushf
sbbb
addl
sub
cwtl
movsl
inc
aas
or
pop
jbe
push
mov
insb
push
ljmp
aas
jp
dec
out
inc
pop
fstpt
add
test
mov
fnstcw
or
loope
mov
bound
xchg
xlat
cltd
icebp
add
adc
xor
push
es
in
push
cmpl
cmpsl
push
mov
lcall
insb
fdivrl
push
clc
sar
push
jg
call
inc
and
push
mov
fsubl
test
aam
shrl
shlb
mov
or
mov
pop
andl
mov
xor
shrl
dec
outsl
fs
gs
imul
add
out
inc
mov
and
ret
pushfw
popw
call
push
call
pop
mov
push
dec
call
lods
mov
pop
movsl
xchg
lcall
or
pop
mov
test
sub
fisubrl
ljmp
in
lcall
lock
pusha
jns
addr16
push
rol
cmpsb
inc
mov
aaa
xchg
or
inc
jl
push
add
pop
ljmp
inc
repnz
repz
cld
inc
dec
xlat
cltd
out
or
hlt
cmc
bt
imul
test
pushf
add
pusha
pushf
movb
lea
jmp
movl
lea
je
not
movsbw
call
mov
lea
jae
jmp
push
call
push
int
cmp
pushf
pusha
or
jmp
jmp
call
jle
lret
out
mov
mov
or
add
and
in
data16
lods
cld
fsubrl
lcall
cli
hlt
ret
mov
dec
pop
cs
mov
scas
fsubr
les
out
mov
lret
mov
fisubl
in
imul
fldenv
rcl
cltd
out
fwait
inc
pushf
mov
pushf
jmp
cmp
xchg
lea
das
cwtl
das
pushf
mov
pusha
neg
sar
xor
mov
sub
bt
push
clc
bt
ror
mov
jmp
pushl
popl
mov
bswap
mov
mov
setns
pop
movl
cwtl
not
setae
lea
pushf
movl
pushf
pushl
popl
pushf
movb
movb
pushl
ret
push
call
xchg
lea
add
mov
pushf
mov
push
push
jmp
push
call
leave
sbb
out
push
dec
call
and
enter
std
push
jge
adc
fistpll
std
push
repnz
adc
adc
adc
fcompl
jecxz
incb
int
mov
icebp
into
sbb
ds
incl
out
test
in
jecxz
fs
repnz
mov
dec
mov
add
jmp
cmp
inc
inc
out
fld
repz
pop
pop
push
stos
scas
arpl
lea
lods
add
pop
xchg
adcl
outsl
push
call
fldcw
out
xlat
cltd
in
sbb
cmp
movsbl
pusha
btc
clc
mov
pusha
cmc
cmc
cmpb
jmp
push
call
loop
or
jns
loop
std
jmp
push
jns
imul
mull
call
lds
addr16
call
call
cmpsl
and
xor
es
cmp
outsb
pop
pop
sub
jb
push
xor
cmc
repnz
icebp
or
add
aam
iret
in
cmpsl
loopne
pop
hlt
out
xchg
mov
mov
ret
xor
pop
and
and
mov
sbb
mov
push
imul
insl
nop
mov
adc
adc
xchg
sub
cltd
in
pusha
pop
js
adc
addb
add
leave
fiaddl
add
cwtl
push
add
add
add
add
add
push
add
push
add
icebp
add
pusha
lods
push
add
push
add
incb
add
add
add
mov
adc
cwtl
ds
xor
xchg
popa
neg
arpl
push
mov
add
nop
mov
jnp
outsb
enter
sub
scas
sbb
cltd
cs
daa
adc
xchg
daa
pop
xlat
cltd
jmp
cmp
fs
call
pusha
push
lea
jne
movsbw
cwtl
lea
mov
pushf
pusha
pushf
lea
jmp
call
xor
sarl
push
jns
scas
push
movsl
subl
adc
into
hlt
jge
push
and
iret
jne
lods
in
mov
adc
int3
dec
fdivrl
into
push
push
mov
cs
push
jae
sarl
outsl
jno
inc
and
movsb
outsb
sub
stos
cmp
inc
cmp
fwait
mov
mov
dec
insb
inc
jge
jnp
je
hlt
dec
repnz
ja
cmc
xlat
cltd
ljmp
and
rcr
shr
shld
mov
inc
lea
jle
shld
sar
add
cmp
bts
shl
mov
bt
cmp
cmpsb
push
pusha
mov
call
push
call
ret
lret
sbb
adc
cwtl
mov
cmp
daa
cmc
inc
xor
xor
add
or
push
ret
lods
mov
outsb
add
imul
fmuls
xchg
test
sub
rep
and
ja
dec
loope
or
mov
mov
mov
lea
mov
cmp
scas
fdivrl
loope
sbb
popf
xor
sbb
je
std
pop
dec
jae
ret
xor
jmp
fcompl
mov
cmp
jbe
test
or
sub
call
add
and
movsl
pop
sbb
icebp
dec
cltd
xorl
sbb
pop
and
cltd
ljmp
aas
or
sbbb
jbe
je
jle
stc
push
jge
adc
cmp
jge
push
insb
leave
ss
pop
imul
mov
inc
jmp
repz
xlat
not
sbb
out
dec
inc
dec
es
ret
stc
jp
lret
mov
mov
pop
inc
push
sarb
mov
dec
add
jmp
std
shlb
jecxz
mov
mov
insl
push
jp
int3
pop
dec
in
inc
add
or
fsubs
fcmovnbe
jge
push
jns
mov
lret
and
xchg
and
shl
pop
loop
out
arpl
xlat
cltd
call
push
call
lret
jns
cmpsb
push
scas
or
pop
inc
lds
jmp
jmp
into
push
sub
add
rclb
sahf
cltd
pop
push
sub
pop
mov
cmp
repz
daa
orb
popa
sahf
xchg
daa
dec
lds
dec
xor
psrad
inc
pop
cmp
cld
sbb
or
and
dec
push
aam
adc
xchg
mov
adc
lahf
daa
popf
xlat
cltd
jmp
cmpsl
push
test
dec
gs
popa
in
outsl
fcomip
int
test
aam
cmp
xor
test
mov
dec
pop
cmpsl
jg
pop
sbb
adc
mov
test
jmp
in
xlat
sub
sub
add
stc
stc
jmp
lea
pusha
jmp
repz
push
call
les
bswap
mov
push
mov
lea
call
jmp
fwait
sub
push
enter
mov
pop
pop
repz
push
ss
mov
inc
inc
lea
leave
in
into
mov
repz
frndint
inc
lock
jne
out
out
rorl
hlt
inc
sub
mov
mov
into
std
decb
sti
iret
mov
pop
popa
push
push
pop
out
xlat
cltd
out
stc
mov
mov
sub
lret
jnp
jno
jb
jae
je
jne
jns
shrl
xorl
sub
pop
cmc
dec
out
pop
popa
ljmp
inc
inc
pop
jb
pushl
sub
mov
mov
cltd
into
pop
xorl
test
lock
mov
lahf
adcl
inc
imul
xchg
lods
adc
lock
sbb
sarl
xor
jge
imul
dec
jo
js
jge
xlat
cltd
out
movsb
fldt
stos
xchg
dec
call
jg
lea
add
jmp
leave
leave
cmp
xchg
mov
or
popa
lret
insl
dec
call
sbb
sarl
dec
es
addr16
fldl2e
cmp
fnstenv
inc
xlat
push
jle
cmpsb
mov
push
ret
jecxz
paddq
sahf
sbb
cmp
mov
jae
inc
jo
incl
dec
jg
cltd
out
xchg
out
xor
and
xchg
sbb
and
xor
imul
mov
jmp
into
xchg
xchg
and
cmp
xor
cmp
sbb
mov
js
sub
lret
and
outsb
adcb
and
loop
cmc
and
and
dec
pushf
ljmp
jg
sti
xchg
in
add
insb
cmp
adc
add
lds
xchg
cmpsb
pushf
inc
jmp
xor
mov
aad
xor
adc
daa
dec
inc
cmp
inc
jge
icebp
xor
stos
or
sbb
push
out
popf
cld
lock
push
and
jbe
jbe
pop
std
dec
xor
mov
push
xchg
xor
and
stc
cli
repnz
sbb
fdivs
inc
push
pop
insb
push
popf
jnp
sub
cs
repnz
xchg
fsub
sub
test
sbb
pop
xor
inc
test
inc
jg
aam
jl
mov
mov
scas
inc
movsb
mov
xor
xchg
cmp
ds
lret
push
lahf
test
jns
scas
mov
add
mov
push
mov
arpl
mov
xor
xchg
mov
and
adc
xor
lods
in
xchg
shlb
inc
cli
xor
insb
mov
add
loop
sub
dec
mov
add
xchg
sbb
movsb
cmp
and
ja
jnp
loope
dec
pop
or
cs
pop
xor
outsl
repz
sbb
mov
ja
xor
mov
shlb
mov
cmc
sub
cwtl
fistl
jno
hlt
push
sub
inc
sub
xchg
add
cmp
out
loopne
cmp
jb
dec
sub
rcr
divb
lods
rorb
xor
mov
xor
dec
cmp
fidivl
aas
mov
adc
sbb
loopne
jle
dec
in
xchg
fprem
imul
jne
jmp
push
iret
cld
xor
lret
mov
push
jecxz
xchg
jb
cli
dec
sbb
inc
das
sbb
and
mov
lock
mov
aaa
sbb
sub
add
repnz
pop
mov
rcrl
mov
and
mov
daa
in
jmp
push
adc
daa
sub
xor
inc
mov
popa
test
jns
hlt
xchg
test
adc
fadds
in
daa
lock
sbb
mov
rorb
or
lock
adc
lret
rclb
sub
es
ret
mov
pop
jbe
sub
or
pop
sub
std
mov
jmp
adc
or
hlt
xor
cmp
push
adc
jge
xor
nop
add
imulb
call
loopne
hlt
test
push
xchg
hlt
and
testb
xor
js
xchg
or
adc
jb
jno
jns
xor
dec
push
stos
mov
adc
das
or
sub
push
clc
ror
pop
and
xchg
xchg
adc
hlt
xor
loopne
add
jo
movsb
adc
outsl
add
popa
jmp
xor
rorl
loopne
loope
test
addr16
xor
pop
aaa
xor
xchg
dec
and
out
xor
or
and
lock
xor
aas
lock
adc
je
pusha
xchg
mov
pop
cmpsl
mov
sub
les
inc
loope
shlb
add
jae
aaa
mov
inc
dec
jg
inc
fwait
pop
sbb
test
in
in
adc
lea
insl
hlt
inc
jno
mov
xor
jbe
int
lret
and
test
out
xchg
or
fwait
sbb
out
push
pop
sub
out
daa
jne
pop
dec
sbb
push
and
in
mov
xor
shlb
imul
daa
sbb
push
cwtl
xchg
xchg
addr16
sbb
jmp
push
sub
cwtl
pop
xchg
ficoml
jno
aaa
push
out
lret
outsb
lret
testb
pusha
mov
lret
push
mov
ss
xchg
sbb
inc
cltd
call
pop
or
in
pop
cmpsl
lock
inc
and
adc
jns
stc
clc
cltd
jmp
rcrb
sbb
mov
int3
adc
xchg
divl
imul
daa
sub
mov
xchg
out
lret
mov
data16
sub
in
push
inc
or
inc
cmp
les
dec
adc
lods
push
int3
hlt
fsubrs
pop
inc
loopne
fs
fcomp
add
in
pop
out
int
imul
mov
lret
pop
in
xor
ss
fs
mov
fnstcw
mov
in
sbb
jo
dec
dec
mov
and
and
dec
sbb
xor
add
out
lock
pop
and
pop
fcmovbe
mov
rcll
dec
enter
js
dec
xor
aas
ret
mov
cmp
clc
sti
adc
cmc
xor
jg
cltd
dec
lods
and
loopne
mov
inc
das
push
mov
mov
jbe
xchg
jmp
jo
xor
repnz
xor
mov
rcrl
inc
and
sub
sbb
xor
stc
mov
pop
data16
push
movsl
sub
adc
ffreep
cld
jmp
fstps
xor
je
icebp
xchg
out
stos
inc
xor
mov
repz
push
xor
adc
and
lcall
mov
lret
mov
sub
cmpsl
sbb
mov
call
mov
mov
mov
jno
loopne
xor
pop
sub
bound
clc
cmpsb
or
sbb
incb
popa
mov
icebp
jno
stos
xchg
fwait
sbb
xor
xor
andl
jo
xor
xor
lds
fiaddl
es
inc
shll
cli
mov
in
add
xor
out
aam
icebp
cmpsb
testl
and
and
or
adc
dec
adc
inc
sub
xor
lret
iret
addb
loope
xor
xlat
xchg
sub
xor
xor
test
rorl
pop
shll
in
sti
push
mov
and
sbbl
xor
retw
adc
mov
and
sub
cmp
xor
jae
testl
mov
jo
sahf
mov
xor
push
inc
xor
push
es
adc
int
inc
jno
cmp
adc
clc
jbe
dec
xor
mov
in
je
xor
push
sub
mov
mov
pop
mov
dec
add
adc
xchg
mov
das
xor
xor
xchg
xchg
mov
lds
mov
test
adc
mov
sub
mov
ljmp
inc
lock
addr16
mov
icebp
iret
clc
sbb
jno
cltd
cmpsl
lahf
addr16
roll
pushl
lea
call
pusha
jmp
call
pushl
clc
clc
shr
test
jmp
inc
cmp
shr
shr
cmc
xchg
xadd
or
pop
mov
test
inc
rol
mov
pushf
pusha
cmc
cmp
xchg
shl
mov
bt
sub
jmp
push
call
dec
out
push
lea
call
call
jno
cmp
xchg
mov
dec
add
in
bound
inc
insl
inc
in
inc
imul
jno
cwtl
mov
jl
or
mov
repz
scas
push
jp
mov
dec
popa
xchg
cmp
mov
xor
pop
adc
mov
out
outsl
fbld
in
arpl
xlat
cltd
ficoms
and
les
shr
mov
ljmp
or
ret
out
mov
jmp
lock
mov
sub
cltd
mov
push
imul
rcl
ret
jge
cli
inc
jl
lret
or
flds
out
into
fisubl
movsl
aas
and
xor
xor
test
cltd
ffree
popf
inc
push
call
and
xchg
stos
pusha
mov
bt
pusha
cmp
push
pushf
movl
lea
jb
call
outsb
sub
or
and
sub
cmpsb
in
cmpsb
pop
push
mov
mov
into
jne
inc
push
sub
sbb
in
call
popf
ds
jnp
pop
cmc
dec
hlt
dec
jne
hlt
dec
std
inc
not
cltd
fdivrl
push
mov
push
lea
jmp
push
call
rorl
popa
test
movb
pushf
lea
je
bt
push
bt
pushl
sub
stc
stc
cmp
movw
pusha
jmp
pusha
call
mov
xchg
mov
repz
inc
ss
mov
xchg
aas
xchg
cmp
scas
adc
push
sub
es
loop
push
test
mov
jmp
idiv
lret
insl
xchg
pop
faddp
mov
rcr
xchg
jmp
push
cmp
jge
pusha
pop
outsl
xlat
out
fs
in
imul
arpl
jmp
xor
mov
out
cld
mov
clc
aad
inc
insb
push
push
jbe
cld
add
mov
repnz
xchg
cmp
rcll
orb
xlat
outsb
inc
xor
fwait
sbb
ret
cld
imul
mov
add
push
xor
xlat
cltd
faddl
sbb
xor
das
mov
leave
fs
in
out
in
shlw
cli
inc
das
push
mov
pop
mov
out
jns
into
lds
cmp
jb
and
lcall
push
mov
add
subl
int
mov
add
add
fdivrl
mov
shl
fucomip
mov
push
jae
cmc
fcomip
pop
neg
jp
lcall
lods
push
pop
outsl
ljmp
neg
rcl
lds
adc
push
mov
sub
int3
pop
jo
daa
adc
adc
lret
xor
xor
pop
inc
aas
cmp
movsl
outsl
sbb
cltd
loop
jno
popa
test
icebp
fsub
fdivrs
jbe
insl
push
in
fs
in
pop
loop
in
out
cltd
dec
xor
pushf
gs
decl
addl
jmp
out
dec
xchg
btc
cmc
rcr
mov
sete
xor
mov
test
call
add
dec
outsl
popa
fs
imul
add
and
jne
pushf
mov
lea
call
push
pushf
push
lea
jmp
cmp
pushf
lea
ja
cmc
pusha
pushl
bt
imul
call
push
call
clc
ficompl
mov
jmp
add
pushf
push
movb
lea
jmp
bt
cmp
cmp
jmp
push
cmp
cmp
xorl
hlt
pop
call
inc
je
xor
mov
pop
outsl
mov
cli
int
mov
cmpsl
adc
and
fldcw
setae
inc
sete
not
inc
clc
shl
xchg
clc
stc
btr
cmc
mov
stc
mov
call
test
bt
cmp
movb
lea
jae
bswap
mov
call
jo
pusha
pushf
lea
pushf
bswap
movw
lea
movzwl
jmp
push
call
mov
gs
je
jb
jne
dec
outsb
outsw
inc
add
sub
add
xlat
sbb
push
sub
ja
add
test
pop
cmp
add
les
jmp
insl
in
mov
lock
jo
jp
popa
dec
jmp
sbb
mov
sub
pop
or
mov
in
hlt
inc
xchg
arpl
lods
gs
sbb
decl
icebp
fistpl
sub
jg
pop
std
pop
add
mov
les
add
push
xchg
pand
aad
inc
stc
dec
mov
cli
jg
sti
insb
dec
ret
cmpsb
xchg
add
add
xlat
cltd
fdivr
call
lea
jb
test
cmc
pusha
pusha
cmpb
pushf
call
pushf
pusha
pushf
lea
ja
mov
pushf
jmp
pushl
popl
pushf
pop
mov
jmp
movl
jmp
rol
bsr
mov
pushf
test
sub
jl
shl
pushf
jmp
lea
jne
std
clc
cmc
test
popf
pushf
pushf
push
pusha
lea
jmp
pushf
pushl
lea
jne
movsbw
lea
movb
lahf
pushf
cwtl
sete
mov
cwtl
jmp
pushf
lea
call
jmp
lea
je
clc
add
je
test
pusha
cmc
cmp
jmp
inc
dec
jmp
hlt
mov
into
loop
imul
shr
subb
lods
sbb
xor
fdivp
hlt
popf
loop
je
adc
adc
sub
data16
mov
mov
pop
add
mov
pop
test
lods
adc
cltd
fcomps
mov
std
ljmp
test
dec
call
dec
bts
and
bsf
mov
cmp
and
clc
add
cmp
add
push
pushl
mov
dec
pushf
jmp
call
lea
jae
pusha
movzbl
setns
not
mov
lea
call
cmp
popf
mov
mov
xor
in
mov
or
add
orb
es
hlt
pop
notl
pop
mov
out
mov
or
mov
in
decb
adc
ret
inc
mov
sub
ja
icebp
mov
cltd
out
loope
iret
inc
fidivrs
dec
js
cld
shll
dec
dec
xlat
cltd
xlat
add
and
jne
pusha
lahf
pushf
not
mov
pushf
pushf
movb
lea
jmp
movzbw
push
movsbw
not
mov
cmp
jmp
movw
call
push
call
add
enter
shlb
call
mov
add
mov
sbb
xor
mov
lea
jne
add
rcl
xchg
shl
mov
shld
sub
bsr
rcr
mov
test
bt
jmp
cmpsb
scas
add
cmc
or
nop
xchg
mov
lahf
mov
xor
xor
lods
mov
addb
sti
fidivl
imul
xchg
cmp
jecxz
dec
pop
faddl
ret
adc
or
sti
icebp
inc
jo
jbe
push
jnp
pop
xchg
mov
sti
inc
bound
fcomip
sbb
fistpl
clc
shll
dec
or
pop
gs
push
popa
movsb
adc
bound
cli
mov
push
loope
std
into
adc
stc
push
std
pop
popa
mov
mov
lods
xchg
sub
stos
xchg
das
xchg
push
xor
fwait
push
testl
data16
mov
mov
add
mov
cltd
aad
lods
mov
je
add
movl
jmp
push
call
mov
lea
jb
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
mov
not
add
mov
bt
pusha
cmpb
movb
lea
jne
xor
not
rol
push
sub
cwtl
not
cwtl
bts
mov
ror
and
add
rcr
mov
pushf
test
jmp
cmp
pusha
lea
jb
bt
jmp
pusha
lea
ja
shl
cmp
sub
shr
cmc
mov
pushf
add
add
and
ror
add
mov
cmc
setno
push
shl
mov
test
push
test
repnz
jmp
test
mov
out
lret
loop
mov
test
push
cmpsl
add
pushf
loope
and
push
jno
jge
std
mov
mov
or
out
push
pop
in
sahf
push
xchg
test
jo
jp
inc
adc
popf
push
stc
iret
xchg
sbb
fwait
cmp
movsl
adc
cltd
ljmp
add
imulb
sbbb
jecxz
xchg
mov
add
xorl
cltd
aam
imul
dec
call
aam
and
add
add
inc
gs
imul
fsubs
dec
mov
inc
cmc
arpl
cmp
dec
jge
ljmp
mov
mov
push
daa
cs
mov
popa
js
mov
jo
in
push
inc
xchg
add
sbbb
inc
std
and
and
sbbl
xor
out
or
sbb
jbe
shl
or
pop
sbb
ss
popa
and
or
mov
adc
sbb
mov
movb
inc
mov
mov
mov
mov
xlat
cltd
rol
xchg
pop
ljmp
call
cld
iret
arpl
iret
sbb
mov
jl
inc
jp
imul
lcall
dec
add
fs
hlt
inc
repnz
out
into
stc
out
adc
xchg
sahf
mov
data16
fbld
xlat
in
pusha
xlat
cltd
shrb
jno
insb
enter
push
jmp
mov
cli
push
popl
push
stos
xor
push
sub
inc
popa
aad
ja
test
aad
clc
and
mov
hlt
cltd
push
jnp
cmp
or
xchg
xchg
push
xchg
stc
dec
loopne
hlt
int
mov
test
aaa
js
mov
inc
jno
cmc
inc
test
leave
cli
dec
call
cltd
rol
call
mov
imul
lret
pop
jmp
xchg
dec
testb
jp
clc
ss
jne
ds
popa
es
jae
add
or
push
mov
dec
xchg
mov
mov
and
outsb
jle
inc
cmc
into
jge
jbe
incl
xlat
cltd
ror
xchg
mov
cmc
mov
and
mov
pushl
shrd
and
sar
mov
call
push
call
scas
push
call
sbb
push
call
cltd
fstl
sub
mov
push
pusha
lea
jmp
push
clc
add
push
lea
call
cmp
stc
cmc
cmp
pusha
pusha
pushf
movb
lea
jae
pushf
stc
cmp
push
pusha
jmp
push
call
pop
bswap
mov
setno
lea
jmp
lea
jne
movsbw
mov
pushf
mov
pusha
pusha
lea
jmp
push
call
out
adc
sbb
sbb
cmp
bound
cmpsl
mov
add
movsl
daa
cld
add
jmp
fwait
cmp
cmpl
fldenv
mov
xor
push
out
sahf
sbb
and
scas
xchg
es
sub
cltd
rcll
or
inc
imul
mov
je
jne
js
sti
int3
cmc
outsb
aam
loope
cmp
into
push
repz
mov
js
in
cld
and
jmp
pop
and
adc
pop
scas
cltd
add
movsb
or
sub
sbb
out
leave
mov
repnz
iret
in
mov
cltd
inc
cmpsl
imul
jae
js
cli
dec
jbe
cld
lret
cltd
rorb
push
mov
out
cltd
jnp
sbb
sub
stos
call
jmp
push
outsb
xchg
xlat
push
add
aas
clc
push
jae
mov
cld
addr16
addr16
dec
icebp
leave
outsl
rorl
xor
or
xchg
stos
sti
leave
mov
dec
fildll
outsb
mov
mov
aaa
test
stc
out
sub
stos
scas
aad
ds
jecxz
ljmp
ret
sbb
inc
hlt
daa
add
push
sahf
and
lods
push
pop
cld
cmp
xchg
scas
cmp
popf
inc
out
jecxz
cltd
push
stos
push
mov
das
adc
cmpl
dec
xor
cmpsl
sbb
std
jmp
gs
out
push
call
push
outsb
in
pop
loopne
xlat
cltd
iret
lcall
mov
ret
int
lret
jecxz
loope
insl
dec
arpl
testl
mov
rorl
clc
inc
mov
mov
movsb
mov
or
xchg
sub
and
mov
adc
rcl
jge
imul
xchg
mov
xlat
cltd
iret
jne
gs
call
insb
mov
pushl
popl
pusha
pushf
pushl
ret
push
call
lea
je
clc
sub
call
pushf
mov
pushf
mov
movb
pushl
ret
pushf
rep
bswap
mov
mov
pushf
pushf
push
lea
jmp
call
push
call
hlt
and
cmp
call
stos
not
pushf
mov
mov
lea
call
xlat
fistpll
fs
pop
xchg
mov
push
jg
negl
cmp
mov
outsl
push
or
jb
jg
test
ja
popf
sbb
add
mov
lea
or
or
cmpsl
adc
pop
sub
sbb
adc
aam
mov
adc
xor
mov
insb
jl
aad
push
cmp
mov
adc
lods
push
lods
lahf
mov
sbb
pop
hlt
xorb
lea
dec
outsl
jno
xor
dec
iret
sarl
incl
xlat
cltd
int
fisubrl
lods
or
dec
cmp
imul
sub
das
or
int
and
sahf
push
ljmp
mov
pop
jle
xor
enter
mov
mov
testl
flds
int
insb
xchg
mov
ja
stc
movsl
jns
pop
pushf
out
sti
dec
repnz
test
inc
sti
cli
inc
jno
cltd
int
push
xor
mov
ljmp
je
dec
call
inc
stc
pushf
cmp
or
push
pushf
lea
je
not
lea
mov
not
pusha
lea
lea
pusha
xchg
jmp
push
lea
movb
movl
pusha
pusha
mov
push
pushl
ret
lea
call
pushf
mov
lea
jne
jmp
push
lea
call
pushf
pushl
lea
jae
call
mov
jl
icebp
jl
clc
jl
outsb
and
cld
sti
and
call
aad
mov
pop
jnp
lea
mov
rorb
push
jo
push
jae
jae
lds
xor
es
dec
mov
test
or
adc
jecxz
fldl2t
push
outsl
fldz
push
jmp
xlat
cltd
lret
ljmp
lahf
mov
es
rcrl
mov
adc
jno
jle
jmp
mov
mov
in
test
jbe
jo
loop
ljmp
pop
xor
mov
jge
or
jae
cli
push
pop
push
stc
mov
icebp
dec
lock
jo
cld
inc
jle
xlat
cltd
int3
js
mov
dec
call
fstpl
inc
xchg
inc
and
add
add
movw
pushf
mov
xchg
jmp
add
add
call
sub
mov
lcall
lock
cli
shlb
jle
imul
lock
test
loope
outsb
cmpsl
mov
sub
sti
xlat
nop
mov
push
jb
outsb
sub
xor
sub
and
sub
cltd
icebp
dec
aam
test
mov
out
jecxz
out
pop
loop
out
push
in
pop
insl
xlat
cltd
lret
push
add
lea
jp
jae
call
push
mov
not
mov
lea
call
lea
jae
push
cmp
push
lea
ja
call
call
push
call
xchg
dec
mov
inc
push
dec
call
adc
inc
push
push
cs
insb
add
es
cmp
scas
subb
lea
mov
fs
gs
in
push
addr16
pop
and
push
and
push
mov
bnd
lods
shr
mov
mov
pop
sbb
or
inc
repz
dec
jbe
cltd
fcmovne
pop
cmc
dec
fdivl
outsb
aam
push
mov
jns
repz
test
add
scas
or
outsb
fcmovb
push
dec
and
mov
les
jmp
out
shl
shl
fldl
stos
stc
mov
mov
sbb
in
fwait
inc
cmp
clc
dec
jp
inc
xlat
cltd
leave
std
fiaddl
cmp
push
dec
and
pop
cld
dec
lahf
mov
test
jae
push
and
xor
xor
movsb
jg
push
popa
jp
pushf
and
xor
xor
add
rclb
shll
jge
cli
inc
jl
icebp
inc
jg
jmp
lds
ljmp
mov
inc
dec
je
xlat
cltd
lret
or
jns
in
lret
sbb
stos
jmp
inc
outsb
les
insl
push
imul
loopne
pop
test
jo
aaa
in
in
icebp
leave
jae
push
jge
mov
or
sbb
mov
push
ljmp
sbb
jmp
mov
adc
lcall
xlat
cltd
leave
pop
pop
daa
inc
lock
inc
jge
mov
test
mov
mov
lahf
sub
in
ret
out
inc
imul
jg
iret
push
loopne
clc
imul
sbb
fs
loop
ret
imul
xor
dec
fcomip
xorb
add
mov
int3
out
or
neg
out
cmpb
add
ret
mov
push
mov
add
cltd
enter
mov
movsbw
call
jb
cmp
insb
scas
push
mov
test
stos
add
inc
cli
les
inc
inc
sub
ret
add
sbbb
je
push
pop
loope
out
lods
push
mov
mov
aas
in
scas
popa
cmp
jae
mov
call
leave
lahf
in
fsub
pop
insb
fldt
jecxz
out
out
xlat
cltd
enter
jp
xor
pop
pop
arpl
mov
xor
mov
mov
movsl
sbb
shrl
jo
out
mov
sbb
movsl
push
cmp
ror
push
scas
or
ja
sub
or
xchg
fwait
sub
cmp
pop
loope
pusha
pop
out
gs
pop
xlat
cltd
enter
lea
jb
bt
call
cmpb
pushf
jmp
push
call
test
lea
jnp
lea
lea
pusha
push
mov
push
lea
call
call
push
lea
jne
lahf
mov
push
movb
lea
jmp
movsbw
mov
mov
pusha
lahf
lea
mov
push
call
push
push
call
inc
dec
gs
lock
out
lret
je
clc
pop
jge
repnz
jo
jl
hlt
fbstp
scas
xchg
inc
sub
and
mov
xchg
call
cld
das
push
das
imul
mov
int3
xlat
fmull
push
orb
scas
xchg
and
call
or
loop
pop
outsl
pop
lret
jmp
lea
insl
pop
pop
pusha
fsubrp
push
xlat
cltd
aad
mov
in
bt
or
pusha
lea
jne
bswap
call
push
movl
pushf
rep
lea
jmp
push
call
mov
movl
lea
jne
pusha
movzbl
bswap
seto
mov
pushf
pushf
popl
pushf
jmp
push
call
rcl
mov
incl
add
jb
jne
insb
inc
jb
add
stc
push
dec
call
and
or
movb
pusha
pushf
popl
pushl
cmp
pushf
or
push
jmp
push
call
mov
test
add
xor
lcall
inc
or
out
push
std
ljmp
xchg
add
sarl
and
fs
ja
jmp
push
call
inc
push
push
xor
fsubr
ljmp
movsl
ds
call
jecxz
dec
cld
push
call
fstpl
call
pusha
std
movb
pushl
popf
pushf
lea
jmp
push
call
and
insl
mov
sub
add
sub
mov
cwtl
pushl
pushl
not
lea
movb
mov
call
cmp
loop
push
mov
lahf
mov
mov
mov
sbb
mov
into
jb
shll
inc
push
js
dec
cmc
fsubrp
out
enter
sub
mov
sub
pushf
add
adc
clc
pop
add
lea
adc
repz
jmp
pop
ljmp
aam
cmpsl
pushf
jmp
sub
mov
leave
loope
or
add
or
and
push
in
cmp
daa
sbb
lret
leave
hlt
sbb
or
sub
xchg
mov
sbbb
cmp
leave
ret
add
pop
add
sub
fdivrl
cltd
mov
sahf
sub
scas
movsb
xlat
cltd
ret
mov
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pop
cmc
decl
test
stc
jmp
ljmp
xor
iret
adc
decl
mov
xor
xchg
jmp
jmp
pop
and
daa
or
xchg
mov
bound
push
dec
pop
out
sbb
adc
lahf
daa
adc
test
adc
stc
xlat
lock
fadd
shrb
and
and
dec
xor
dec
cltd
add
das
lods
inc
push
leave
jns
xchg
fcmovnb
cld
xlat
imul
pop
leave
jns
dec
add
xchg
call
mov
subl
push
mov
repnz
ljmp
pop
pop
xor
dec
push
fsubs
cwtl
cli
dec
add
hlt
test
stos
mov
jmp
jae
inc
in
cwtl
sub
xchg
and
into
jp
push
push
fs
stc
fimuls
xchg
jmp
and
mov
adc
iret
lock
add
imul
out
insl
std
push
cmpb
pusha
lea
jne
lea
rcl
sub
clc
mov
push
add
test
call
push
call
into
lea
je
pushf
lea
jmp
sub
push
not
bts
bsr
sbb
push
bsr
sar
shl
push
movzbw
bt
push
bswap
btr
not
pusha
mov
xor
btc
bts
pop
mov
bsf
mov
mov
add
cmp
clc
lea
clc
aad
bswap
mov
stc
test
test
pusha
lea
je
call
bt
jle
or
pusha
lea
jo
pusha
push
lea
je
movsbw
mov
push
bswap
lea
pushf
pushf
movw
xchg
pop
pushl
popl
push
lea
jo
push
setns
cwtl
push
mov
lea
push
movb
movl
call
push
call
aaa
loope
movzbl
mov
bswap
lea
lea
jmp
mov
loope
jle
add
sub
dec
gs
jo
jmp
loope
pushf
mov
pop
std
in
clc
add
dec
cwtl
add
jle
or
add
push
dec
or
dec
mov
inc
arpl
fisubl
addr16
in
shlb
popa
push
xlat
cltd
shll
cmp
je
add
sti
add
xor
ljmp
es
dec
call
ret
push
in
loope
pusha
outsl
je
mov
ja
test
xchg
jnp
pop
loopne
inc
mov
stc
xor
pop
mov
lods
popf
push
sub
cmp
xor
rcrl
push
adcl
mov
icebp
inc
jl
jle
xchg
cmp
subb
outsb
push
popa
aad
push
out
je
cltd
add
cmpsl
jge
or
out
int3
mulb
popa
push
gs
jmp
cltd
shll
adc
add
push
fs
jno
in
cmpsl
pop
cmp
ret
or
mov
xchg
xchg
and
aam
int
sub
inc
clc
enter
jp
je
jp
pop
add
cmpsb
mov
jg
imul
cwtl
mov
cli
aad
loope
icebp
enter
cltd
mov
fs
jne
adc
shl
shrd
lea
mov
bt
bt
add
cmp
call
xchg
push
movl
call
or
lods
xchg
inc
cmp
fs
in
gs
in
addr16
jecxz
testl
push
jo
inc
hlt
ja
cmp
stos
aam
cmc
mov
lods
stos
add
mov
sbb
out
inc
rep
ret
aam
or
imul
xlat
movsl
cmpl
sbb
inc
test
in
jle
pop
dec
shlb
cmpsl
jns
jo
xor
nop
sbb
inc
jle
cmp
inc
dec
loop
in
push
imul
insl
pop
insb
arpl
cltd
mov
or
insb
lret
loop
insb
enter
and
into
mov
mov
sbb
mov
repnz
lea
and
mov
xor
dec
push
or
sbb
add
push
sbb
jb
mov
add
gs
subl
push
cld
pop
jecxz
mov
es
dec
jo
and
gs
clc
in
shl
stos
mov
subb
popf
fwait
movsb
mov
adc
mov
xchg
mov
mulb
and
mov
and
xor
pop
test
jmp
sbb
jns
mov
fucomp
push
data16
arpl
cltd
mov
cmp
mov
push
add
pushf
mov
lea
call
bt
clc
stc
clc
cmp
jmp
jmp
pushf
rep
push
movzbw
not
mov
pushf
push
mov
movb
lea
jmp
pushf
push
inc
clc
clc
cmpb
mov
lea
jne
pushf
pushl
ret
clc
or
call
push
call
jns
pop
cli
sub
or
shr
add
not
shl
and
neg
mov
call
call
in
sti
adc
mov
cmp
adc
or
out
shll
jo
imul
cmpsb
mov
mov
mov
push
jg
sti
pusha
fisubrl
ljmp
cmpsl
xchg
mov
dec
mov
sbb
adc
ret
pop
ljmp
cmpb
mov
stos
adc
mov
push
imul
pop
in
fstps
cltd
mov
ss
std
cld
jmp
cltd
fidivrl
not
jne
neg
cwtl
mov
mov
je
sbb
sbb
jo
bnd
lds
jg
push
iret
adc
rclb
dec
jecxz
jno
loope
nop
add
repnz
hlt
mov
mov
out
sbb
cmp
stos
lods
cmp
ljmp
jmp
or
lods
popf
cmp
mulb
jns
lds
jp
fmulp
nop
imul
lods
popf
stos
dec
xor
movsb
lcall
stos
sbb
mov
int
cmp
call
push
call
rol
nop
loope
sub
ficomps
add
shrb
cmp
call
fistpll
jo
jge
xchg
aas
jl
lods
ja
rcr
adc
sbb
cwtl
xor
xor
movsb
std
jne
cmpsb
adc
mov
dec
sub
dec
pusha
pop
cld
dec
jno
or
adc
fildl
es
mov
cltd
xchg
dec
test
mov
sti
inc
xchg
sub
scas
sbb
or
pop
sbb
cmp
incb
repnz
fldt
fcomp
xor
flds
jb
jb
jp
inc
pop
gs
into
imul
dec
cmp
out
sbb
jecxz
fsubl
fwait
mov
mov
ss
mov
mov
cmc
movzwl
shld
rcr
mov
push
pusha
add
test
cmc
cmp
test
mov
push
test
movb
bt
test
push
jmp
mov
sarl
pop
sub
jg
sub
stos
movsl
sbb
addb
cltd
call
jnp
ljmp
xchg
jl
je
xor
sub
out
in
mul
pop
inc
push
decl
cltd
movsb
clc
inc
sbb
es
sub
sub
xlat
cltd
mov
int
and
add
shlb
test
stos
ja
dec
cmpsl
push
and
loope
jmp
int
movsl
pop
roll
dec
daa
or
nop
or
jb
jmp
cmp
lret
js
shlb
fsub
push
jo
int
or
inc
test
ljmp
xchg
mov
loop
iret
sub
lods
inc
mov
cwtl
aad
pop
gs
xchg
lods
lcall
sub
inc
sbb
cmp
xlat
inc
in
push
jg
and
xor
sub
mov
mov
in
ss
call
imul
call
mov
push
in
fstpl
mov
cltd
mov
lahf
fdivl
hlt
fsincos
inc
sbb
mov
and
jae
call
xchg
inc
push
or
test
test
adc
cmc
push
cmpb
and
mov
dec
sbb
int
cmc
inc
jnp
hlt
jge
jns
std
inc
cld
inc
xlat
cltd
mov
adc
xlat
ds
dec
in
outsl
enter
into
loopne
push
jmp
sahf
stos
pop
inc
cmpsb
test
add
fistpll
mov
mov
loope
mov
jecxz
add
push
mov
adc
xorl
iret
clc
das
sbb
das
or
add
sahf
mov
and
rclb
and
mov
sbb
leave
mov
jmp
movsl
push
call
movl
pushf
lea
push
call
push
call
xchg
push
call
xchg
std
out
daa
xchg
sbb
or
daa
sub
in
jbe
pop
sahf
cld
les
inc
js
negb
pop
hlt
push
jmp
sarb
xor
adc
lcall
int3
mov
or
inc
adc
mov
mov
jp
out
inc
js
sbb
or
add
popa
fistpl
shl
push
fildll
gs
data16
cltd
mov
insl
cmp
dec
call
jnp
fdivr
stc
cmc
xlat
jo
popa
mov
rcrb
outsb
inc
add
add
mov
xlat
inc
mov
push
cli
shlb
ljmp
and
xlat
in
lock
jg
outsb
lret
mov
mov
push
pop
jne
push
sbb
addl
pop
jns
and
jecxz
xor
in
fisubs
out
cmp
add
push
dec
ret
stos
ja
push
dec
jge
xchg
stos
cmp
cmpsl
xchg
inc
jecxz
jmp
pop
jmp
pop
popa
cli
ret
pop
adc
icebp
shll
pop
jmp
xlat
jle
test
shlb
jne
push
sub
neg
movzbw
movsbw
mov
sub
rcr
push
neg
add
rcl
sub
neg
mov
cmc
test
jmp
push
call
ljmp
mov
fs
call
jmp
call
call
adc
sbb
push
addb
inc
gs
out
out
inc
add
shll
inc
sbb
insl
dec
mov
sbb
or
inc
cld
das
add
mov
popl
aam
repz
test
inc
push
sub
xor
cmp
mov
cltd
mov
and
hlt
enter
stos
or
mov
xchg
xchg
mov
mov
ss
jb
negl
dec
clc
das
xchg
hlt
je
mov
loopne
push
in
icebp
mov
faddl
es
sbb
inc
jmp
pop
outsl
adc
xor
add
in
outsl
je
ljmp
imul
xchg
or
fsubs
aam
jmp
outsl
xor
sbb
stos
add
cwtl
bound
lods
lcall
cwtl
imul
incb
int3
cld
inc
ja
clc
jle
jbe
xlat
cltd
mov
out
test
leave
jo
rcrb
mov
jg
jno
jnp
jnp
in
popf
dec
shlb
les
add
add
in
popf
and
aam
subb
push
jge
xor
aad
leave
mov
movsl
sub
push
in
outsb
mov
lds
repnz
lock
ja
cld
dec
xlat
cltd
mov
movsl
ficoml
bt
pushl
shr
test
cmpl
pusha
jmp
add
add
add
add
sbb
add
sbb
add
or
add
add
add
enter
and
add
adc
add
add
add
lods
repnz
add
xchg
add
sbb
xor
add
and
add
add
add
lods
repnz
add
xchg
add
sbb
push
or
call
jmp
mov
cmp
test
test
pusha
call
mov
lea
je
bt
jmp
int3
shrb
test
sbb
das
cvtps2pi
cmpsb
or
or
cwtl
lods
jnp
push
ja
fmull
daa
sahf
enter
mov
into
sbb
mov
push
mov
xor
stc
push
inc
cmc
cld
sub
sbb
hlt
lea
add
mov
mov
call
pop
insl
aam
cmc
jmp
dec
repnz
leave
mov
xlat
decb
inc
jge
cld
dec
inc
jge
repnz
out
aas
xchg
das
add
jae
xor
mov
or
cltd
mov
lahf
loopne
shr
inc
std
incl
adc
je
add
mov
lea
jmp
push
mov
movb
jmp
cmc
pusha
sub
movzbl
pushl
jmp
pusha
sub
mov
call
clc
call
xchg
mov
jmp
jmp
mov
mov
push
pushf
pusha
mov
call
movzbl
jmp
push
mov
push
lea
jmp
mov
movb
pushf
mov
mov
pushf
movb
pushl
lea
jmp
shld
movzbl
ror
inc
mov
test
cmc
clc
clc
add
jmp
setne
movzbw
mov
call
call
xor
shrd
cmc
and
adc
neg
inc
clc
pop
movzbw
xor
neg
call
push
pushl
mov
pushf
pusha
movb
lea
jmp
dec
call
btc
rcr
call
movw
sub
movw
call
not
movsbw
dec
stc
mov
pusha
add
pushf
pushf
popl
mov
movb
push
pushl
popl
movb
lea
jmp
mov
pushl
mov
mov
push
lea
jmp
bswap
sar
adc
mov
pusha
mov
cmp
sub
jae
sub
call
or
pushf
xor
mov
inc
call
pushf
mov
push
jmp
mov
pushf
jmp
adc
sbb
dec
add
mov
neg
clc
add
not
push
mov
push
movw
mov
push
pushf
lea
jmp
pushf
mov
mov
jmp
call
add
mov
stc
cmp
pusha
add
pusha
call
pushf
push
jmp
pushf
popl
jmp
jmp
shld
shl
jmp
pushf
jmp
mov
movw
call
btr
clc
btr
mov
call
rol
dec
sbb
mov
inc
mov
stc
add
pusha
jmp
push
jmp
xor
inc
inc
bsr
inc
bts
rcr
btr
xor
xor
neg
pusha
sbb
shld
xor
test
movzbl
and
bsf
rcl
mov
pusha
pushf
stc
pushf
add
stc
jmp
lea
jmp
pusha
inc
cmc
mov
movl
push
ror
call
pushf
test
adc
sub
ror
setge
lea
bswap
sub
and
rcl
add
sub
pop
movzbl
push
lea
mov
call
pushf
call
call
stc
bt
sub
push
pusha
pushf
pushf
div
mov
jmp
pushf
pushl
push
mov
pushf
push
pushf
lea
jmp
jmp
test
jno
mov
stc
push
clc
sub
mov
jmp
bswap
mov
push
push
bswap
lea
mov
jmp
bsf
inc
neg
and
pop
ror
sar
mov
cmc
test
jmp
neg
cmc
stc
add
call
push
pusha
movb
pusha
rep
sbb
dec
mov
shl
mov
bsf
xor
push
test
mov
jmp
mov
pushf
movsbw
mov
movsbw
movzbl
jmp
sete
adc
shld
mov
and
pushf
mov
cmc
stc
add
pusha
movw
push
mov
push
lea
jmp
pushf
dec
stc
add
cmp
pushf
cbtw
call
cmc
bt
sub
pushf
pushf
mov
pushf
pushl
lea
jmp
push
call
cld
lea
jle
rep
and
inc
pop
neg
pop
call
ror
cmp
cmc
clc
stc
sub
cmc
mov
pushf
mov
pushf
call
pushf
popl
jmp
sub
push
mov
mov
pushf
lea
jmp
pushf
pushf
popl
jmp
sub
call
movzbw
lahf
mov
call
rep
sar
pushf
neg
bt
mov
btc
bsf
bsf
mov
pusha
clc
movb
stc
pushl
popf
pushl
mov
lea
jmp
push
push
mov
pusha
lea
jmp
call
mov
push
jmp
lea
jne
pusha
call
add
pushf
inc
pushf
movw
cmc
bt
ror
call
call
das
lea
mov
neg
mov
clc
pushf
add
push
mov
mov
pushf
pusha
pushf
pushl
lea
jmp
pusha
call
jmp
pushf
lea
ja
push
lea
rcl
sub
not
xchg
lea
shr
bsr
sar
add
jl
sub
xchg
bt
lea
push
not
adc
and
bts
lea
add
or
sub
jmp
push
mov
push
pushf
mov
pusha
lea
jmp
lea
mov
mov
mov
pusha
movl
pushl
ret
movsbw
cmc
mov
rcr
shld
mov
and
mov
bt
call
call
mov
mov
pushf
lea
jmp
stc
cmp
movb
neg
jmp
btr
shld
add
stc
bswap
ror
jle
movsbl
inc
rcr
rcr
and
sub
neg
movzbw
mov
pushf
mov
push
bt
add
movw
pusha
jmp
pusha
mov
pusha
push
pushf
pushf
lea
jmp
movw
mov
movl
call
pushf
popl
mov
pushl
popl
pushf
push
pushf
movb
lea
jmp
pushf
popl
pushf
push
pushl
popl
pushl
mov
pushl
lea
jmp
pusha
pusha
pushf
popl
push
jmp
pushl
popl
pushf
pushf
mov
lea
jmp
jmp
pushl
pushl
popl
pushf
pushl
push
lea
jmp
adc
inc
mov
clc
pushf
stc
stc
sub
clc
stc
add
jmp
bswap
cmc
stc
add
mov
dec
call
popa
aas
and
jbe
and
test
and
cmp
sub
sub
xchg
and
repz
mov
ds
aas
and
dec
xor
and
xor
xor
mov
and
sub
ds
dec
and
xor
inc
and
jecxz
and
and
incl
ds
push
and
pop
dec
and
push
inc
and
jbe
and
inc
aas
and
into
cmp
mov
and
pop
dec
and
push
ss
mov
and
dec
xor
and
cmp
ds
and
push
xor
pop
dec
and
pop
ds
pop
ds
pop
ds
pop
ds
pop
ds
pop
ds
pop
ds
pop
xor
sti
aas
and
cmp
and
popa
aas
and
inc
xor
cwtl
xor
sub
rolb
ds
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
aaa
cmp
and
mov
inc
and
lcall
sub
ds
xor
pop
ds
jecxz
and
sub
ds
and
add
and
ds
xor
xor
ds
mov
xor
lcall
imul
and
into
cmp
cwtl
xor
pop
dec
and
mov
and
add
mov
and
incl
ds
xor
dec
xor
and
cmp
and
inc
xor
inc
aas
and
cld
inc
and
sub
xor
mov
incl
ds
inc
and
push
xor
roll
ds
and
repz
cmp
and
pop
dec
and
lcall
ds
dec
and
cld
inc
and
jecxz
and
mov
xor
test
ds
cmp
and
cmp
and
add
rolb
add
ds
inc
and
dec
xor
and
jno
and
into
cmp
xchg
and
repz
push
dec
and
test
cmp
and
mov
incl
sub
ds
xor
repnz
and
pop
dec
and
roll
xchg
and
pop
dec
and
sti
aas
and
enter
into
cmp
pop
xor
lcall
ds
xor
add
ds
aas
and
add
ds
and
sub
dec
and
into
cmp
mov
and
mov
ds
xor
incl
ds
ss
add
and
pop
ds
pop
ds
pop
ds
pop
ds
pop
ds
pop
ds
pop
ds
pop
ds
roll
ds
and
cwtl
xor
pop
dec
and
pop
dec
and
cld
inc
and
daa
dec
and
mov
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
int3
aaa
and
repnz
and
add
and
pop
inc
and
push
ss
mov
inc
and
lcall
mov
ds
xor
cmp
ds
xor
and
enter
jbe
and
sti
aas
and
pop
xor
daa
dec
and
test
and
imul
and
sub
xor
ds
dec
and
mov
dec
and
cmp
ds
xor
and
cwtl
xor
add
imul
and
dec
xor
and
xor
ds
xor
dec
and
sub
xor
aaa
cmp
and
pop
inc
and
imul
and
aaa
cmp
and
xchg
and
inc
aas
and
cwtl
xor
cmp
and
mov
ds
dec
and
mov
and
sub
xor
enter
mov
inc
and
sti
aas
and
pusha
pushf
mov
push
pusha
mov
mov
lea
jmp
clc
not
mov
and
pushf
jmp
mov
pushf
push
pushf
lea
jmp
pushf
add
jmp
rcr
or
shl
shl
mov
test
mov
add
mov
pusha
add
clc
clc
movb
clc
shrd
mov
pushl
mov
lea
jge
mov
pushf
pusha
pushf
push
pushf
popl
pushf
pushl
popl
pushf
push
pushf
pushf
lea
jmp
pushf
popl
push
pushl
pushl
popl
movb
push
lea
jmp
mov
pushf
mov
mov
lea
jmp
pusha
mov
lea
je
pusha
movw
push
pushf
popl
push
push
pushf
pushl
popl
pushf
push
pushf
lea
jmp
mov
pushf
lea
jmp
shr
rol
add
bt
ror
not
call
div
jmp
push
mov
mov
push
pushf
lea
jmp
pushf
call
pushf
pusha
push
mov
pushl
push
push
lea
jmp
shrd
movsbl
xor
cmc
mov
stc
pushf
add
push
pushf
mov
lea
jmp
cld
call
pusha
pushf
popl
pushf
push
mov
pushl
popl
mov
movw
pushf
push
lea
jmp
pushf
mov
call
cmc
not
stc
test
not
pushf
movb
and
jmp
jmp
pushf
push
mov
pushl
push
push
mov
lea
jmp
decl
call
shld
cmc
xadd
rol
mov
bt
sar
setns
mov
shl
push
mov
bt
lea
jne
sub
call
lea
pusha
lea
setne
mov
push
mov
jmp
das
aam
mov
dec
mov
bt
test
sub
pusha
shl
call
sub
jmp
sub
clc
cmp
push
stc
lea
stc
cmc
pusha
bt
neg
pushf
cmc
xor
mov
pushf
cmc
call
mov
movl
mov
push
lea
jmp
pushf
popl
push
pushl
popl
movl
push
lea
jmp
push
pushf
sub
pusha
and
pushf
jmp
shr
sbb
rol
inc
movzbl
clc
bt
call
mov
lea
jl
pushf
pushf
push
pushl
popl
push
push
pushl
lea
jmp
std
mov
test
pushl
popf
mov
pushl
lea
jmp
push
pushf
pushf
xchg
cld
push
mov
pusha
cld
jmp
mov
movb
push
push
pushf
lea
jmp
cmp
stc
pushl
popf
movb
mov
mov
mov
lea
jmp
mov
mov
pushl
movb
lea
jmp
call
mov
pushf
jmp
xadd
test
shr
mov
sar
add
mov
stc
cmc
cmc
sub
test
pushf
test
shl
call
add
adc
rol
mov
ror
adc
add
mov
jmp
bsf
neg
cmc
mov
cmp
test
pushf
not
bt
clc
test
not
cmp
cmp
cmp
stc
sub
movw
jmp
pushf
pusha
pusha
mov
pushf
pushf
lea
jmp
push
jmp
stc
xor
push
bt
push
movl
ror
lea
jge
xor
pushf
dec
test
stc
test
mov
pusha
test
bt
cmc
sub
pusha
movb
call
mov
movw
mov
pushf
pushf
lea
jmp
mov
pushf
movb
movw
mov
lea
jmp
push
mov
push
push
pushf
popl
call
sub
pushl
push
call
bswap
bts
bts
mov
aam
inc
mov
push
cmp
jmp
pusha
push
movw
mov
push
mov
pushl
push
lea
jmp
sub
adc
mov
clc
stc
bt
stc
add
call
add
add
shrd
xor
add
bt
btr
shld
mov
push
clc
shl
cmc
pusha
test
shr
pusha
cmc
pushl
jmp
clc
sub
call
lea
pushf
movb
lea
jmp
call
movw
pushf
popl
jmp
mov
pusha
jmp
pushl
popl
pushf
mov
push
movw
lea
jmp
add
jmp
pushf
and
jmp
jmp
test
bt
xchg
jmp
shl
setp
call
pushl
mov
jmp
push
xor
clc
jmp
pushf
dec
pushf
stc
mov
pushf
cmp
mov
sub
push
jmp
call
pusha
call
jmp
pushf
pushf
mov
mov
pusha
push
push
lea
jmp
test
cmc
add
push
pusha
call
pusha
pushf
shl
call
mov
mov
mov
movsbw
call
add
call
pushl
popl
mov
pushl
lea
jmp
call
stc
stc
stc
mul
mov
call
mov
pushf
movl
pushl
push
mov
pushf
pushf
pushf
popl
push
pusha
movl
push
pushl
popl
pushf
push
pushl
lea
jmp
call
shl
adc
movzbl
cmp
cmp
xor
pusha
pusha
clc
bt
rol
jmp
bt
mov
clc
stc
mov
cmc
cmp
bt
pusha
add
pushf
pushf
lea
jmp
pusha
mov
push
cmc
add
pushl
movb
pushf
pushf
lea
jmp
call
mov
lea
jo
push
bswap
pushf
mov
mov
pushf
rcr
sar
btc
push
bsf
shld
sbb
push
bswap
push
pushf
test
mov
cmp
mov
cmc
lea
push
sar
push
shld
pushf
pushl
popl
not
clc
clc
rcr
push
jmp
push
jmp
btc
push
lea
cmp
pushf
cmp
movw
call
pushf
jmp
sub
mov
call
jmp
movzbw
setae
inc
lea
btr
pushl
call
mov
pushf
movw
lea
jmp
pushl
popl
mov
lea
jmp
call
mov
pushf
pushl
pushl
ret
mov
mov
mov
pusha
lea
jmp
call
pushf
pushl
popl
pushf
pushf
movw
push
lea
jmp
call
mov
setns
clc
not
lea
xor
pusha
inc
bt
rol
sub
sar
xor
not
lea
shl
sbb
adc
sub
call
mov
cmp
jmp
setle
push
movsbw
movzbw
lahf
mov
pusha
push
movb
lea
cpuid
cmp
pusha
push
jmp
cwtl
call
pushl
popl
pushl
pusha
lea
jmp
pusha
mov
push
lea
jmp
pushl
popl
pusha
test
clc
mov
add
cld
clc
pushf
cmc
pushl
popf
movb
pushf
mov
lea
jmp
mov
mov
push
mov
lea
jmp
push
call
add
pushl
jmp
jmp
jmp
pushf
mov
pushf
pushf
lea
jmp
mov
jmp
shrd
notl
stc
rcl
rcl
call
not
mov
bts
and
adc
pop
cwtl
clc
pusha
rcr
mov
aaa
jmp
shld
inc
mov
shrd
bsr
mov
test
clc
add
jle
pusha
movb
pusha
mov
push
pushl
mov
lea
jmp
call
pusha
call
push
lahf
mov
setnp
movzbl
mov
movw
divl
pushf
push
pushf
pushf
mov
jmp
cld
call
pushf
mov
rep
neg
mov
bt
and
mov
cmp
clc
pushl
popf
mov
lea
jmp
call
btr
adc
mov
bt
pushf
test
call
pushl
popl
push
push
pushf
pushf
lea
jmp
sub
stc
stc
movl
pushf
ror
clc
test
xchg
test
xor
cmc
lea
jno
add
call
push
call
neg
or
pushf
shrd
rdtsc
bt
mov
cmc
clc
sub
jmp
rcl
bsf
xor
mov
mov
cmp
mov
jno
cmc
add
push
jmp
bt
bt
xchg
bt
cmp
bt
stc
xor
clc
cmc
bt
sub
push
ror
pushf
push
cmp
pusha
xchg
mov
bt
clc
lea
stc
xor
bt
sub
call
mov
push
pushf
pusha
jmp
shl
mov
neg
rcr
sbb
mov
push
clc
movb
push
sub
cmc
stc
shr
call
pushf
pushf
popl
pusha
movw
pushl
popl
pushf
lea
jmp
rdtsc
mov
not
jp
sar
mov
cmc
pusha
test
not
call
lea
push
cld
call
not
bts
ror
shl
sub
sub
xor
btr
mov
test
push
add
pusha
movb
pushf
mov
mov
pushf
lea
jmp
pushf
mov
pusha
pushf
push
lea
jmp
lea
lea
inc
mov
bsf
btr
add
xchg
call
jmp
sub
push
pushl
call
jmp
add
test
movw
shld
push
call
call
clc
pushf
xor
jmp
mov
pushf
pushf
movb
pushl
lea
jmp
mov
call
cmc
btc
btr
mov
stc
test
bt
sub
call
pushf
movb
pushf
popl
push
pushl
popl
movl
pushf
lea
jmp
test
cmp
add
bt
cwtl
mov
pusha
sub
pusha
call
movl
pushf
popl
push
jmp
mov
call
call
mov
shr
pushf
shl
push
mov
clc
pushf
pushf
test
add
jmp
pusha
mov
mov
movb
pusha
mov
lea
jmp
jmp
pushf
popl
pushf
call
push
call
aad
rcr
inc
das
movzww
pushf
call
mov
movb
mov
call
jmp
test
call
clc
xor
bsr
shl
shr
rcl
sub
stc
jmp
clc
bt
cmc
sub
pushf
dec
call
mov
cld
push
mov
pushf
movb
pushf
lea
jnp
cld
pushf
call
pusha
pushf
popl
movb
pusha
push
pushl
popl
pushf
mov
push
lea
jmp
not
mov
jmp
pushl
mov
mov
lea
jmp
mov
movb
lea
jmp
pusha
inc
inc
xor
movsbw
shrd
and
and
xor
pusha
mov
cmc
clc
test
bt
add
pushl
mov
push
pushf
pushf
movl
lea
jmp
stc
jmp
lea
jmp
btc
bts
bt
mov
cmp
test
add
pusha
movb
lea
jmp
lea
pushf
ror
pusha
pushf
inc
test
add
call
call
movw
pushf
mov
mov
pushf
lea
jmp
stc
bt
cwtl
bt
cmc
pushf
jmp
movzbl
jmp
lea
jne
pushf
mov
push
pushl
ret
mov
lea
jge
mov
push
push
pushf
lea
jmp
jge
pusha
pusha
pushl
mov
movb
pushf
movw
pushl
lea
jmp
pushl
popl
movb
push
mov
lea
jmp
push
pushf
mov
push
pusha
lea
jmp
xor
or
shl
mov
movl
bt
test
add
bsr
mov
and
shld
sbb
xor
lea
jmp
mov
push
mov
pushl
push
call
pusha
mov
push
pushf
pusha
pushl
lea
jmp
bsf
mov
call
mov
mov
pusha
jmp
rol
shr
mov
bswap
shl
add
call
rcl
shld
shld
or
mov
xor
add
call
pusha
mov
mov
pushf
pushl
pushf
lea
jmp
add
shr
mov
test
clc
jmp
movb
lea
call
movl
push
pushf
popl
mov
call
pushl
mov
mov
pushf
mov
mov
push
movb
lea
jmp
xchg
adc
btc
push
btr
shl
push
pusha
not
and
pushl
popl
clc
pusha
movsbw
bsr
movl
sbb
bt
mov
shrd
xor
bsr
inc
movsbw
mov
rcl
rol
ror
pushf
lea
pop
bt
movzbw
shld
sub
bsf
mov
call
mov
movw
pushf
push
lea
jmp
pushl
push
sub
movb
pushf
cmp
add
push
pusha
mov
pushf
popl
jmp
push
cmc
bswap
mov
add
sets
or
setl
mov
call
shl
mov
adc
shl
sub
cmp
neg
pusha
xor
rcl
not
ror
btr
jmp
jmp
adc
dec
rol
mov
bts
and
rcr
xor
not
rol
sbb
call
pushf
jmp
mov
pushf
movw
pushf
lea
jmp
jmp
bswap
lea
pushf
popl
pop
dec
xchg
push
rol
shl
bt
mov
pushf
sub
push
bswap
call
stc
call
sub
pusha
movb
lea
jp
mov
pushf
push
lea
jmp
movw
mov
pusha
lea
jmp
add
pushl
lea
jmp
pop
pushf
mov
pushf
bswap
jmp
pushf
popl
jmp
bswap
bswap
btc
mov
jmp
sub
push
call
bt
sub
mov
cmp
shr
movb
jmp
bsf
mov
mov
rol
rol
mov
clc
pusha
add
jmp
pushl
jmp
clc
mov
rcl
mov
cmp
pusha
jmp
or
daa
mov
setne
test
adc
mov
stc
cmp
pushf
push
sub
cmc
pushf
stc
test
shr
pusha
mov
push
jmp
mov
pusha
mov
lea
jmp
das
mov
xchg
mov
shr
mov
push
xor
btr
rcl
mov
or
or
shld
movsbw
mov
inc
mov
sub
cmp
std
pushl
popf
pushf
sete
mov
lea
movzbl
mov
mov
pushl
ret
