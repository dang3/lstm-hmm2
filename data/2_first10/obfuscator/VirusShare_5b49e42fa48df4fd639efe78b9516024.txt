push
call
ret
ret
popa
pop
in
js
data16
movsl
dec
sbb
sarl
pop
pop
lock
fcomps
es
fst
fwait
loopne
adc
mov
push
js
out
daa
push
mov
test
shrb
adc
dec
mov
lods
stc
lods
push
bound
pop
fcomip
in
adc
sbb
jae
xlat
dec
stos
pushf
jge
cmp
pusha
enter
cmpsb
notl
mov
mov
jle
stc
mov
in
mov
push
insl
sub
fxch
mov
push
cmp
in
or
xchg
iret
mov
mov
ret
fcomps
jecxz
or
popf
ret
jb
es
jg
pop
es
fs
iret
pop
xchg
loopne
ljmp
repnz
push
inc
cs
bound
mov
lahf
push
icebp
insl
loopne
jno
test
lfs
xor
test
cmp
fisttpll
scas
inc
insl
push
dec
dec
gs
test
rcrl
dec
imul
push
fdivrl
jl
stos
xor
mov
xor
aam
mov
xchg
cs
push
lret
adc
sbb
pushf
xchg
out
adc
rclb
add
jnp
ret
lret
lock
fnstsw
xor
and
mov
xor
arpl
or
xor
sbb
push
test
test
loopne
pop
stos
arpl
jae
cmc
out
or
mov
pop
push
add
pop
or
ret
popf
ret
das
les
enter
adc
in
mov
mov
mov
or
push
pop
mov
inc
scas
mov
in
or
xchg
xchg
fsub
scas
jle
adc
mov
ret
shrl
jno
push
rcl
sbb
loopne
push
cmovp
fwait
out
aam
nop
imul
ror
sbb
loopne
in
xchg
cltd
repnz
and
sub
fstps
jb
or
call
inc
hlt
sbb
mov
mov
jae
and
and
arpl
scas
and
or
je
divl
mov
lahf
int
aam
inc
add
in
sbb
mov
add
xor
or
mov
cmp
push
jno
mov
mov
sahf
hlt
sbb
nop
out
imul
cwtl
jo
bound
xlat
push
mov
inc
out
fcomi
lds
aas
pop
add
rol
es
xor
lahf
test
das
xlat
inc
sysret
mov
shlb
cmp
fcoml
cmp
stos
jge
fwait
pop
in
jne
out
add
jo
cmp
jecxz
push
or
mov
lods
dec
cmp
stos
popa
loopne
dec
mov
adc
repz
jbe
out
arpl
inc
scas
pop
dec
stc
bound
aam
shl
sub
pop
xchg
lds
jp
ljmp
mov
mov
roll
fidivrl
call
scas
and
aas
mulb
cmp
sub
add
dec
mov
int3
outsb
add
jno
pop
jo
or
cmp
movsl
fsubrs
mov
sbb
stos
inc
sar
test
mov
sub
mov
or
popa
and
aas
or
js
inc
jl
into
inc
jle,pn
sbb
std
inc
xor
loop
xor
push
mov
pushf
rcll
xchg
mov
scas
fwait
std
jmp
push
in
shl
icebp
add
sbb
cmp
sbb
mov
push
call
sbb
jbe
aad
jle
cmp
pop
outsl
call
push
shl
add
mov
dec
mov
xor
jnp
xsha256
cmpsb
push
popf
mov
dec
push
pop
repnz
inc
ror
or
sub
inc
gs
and
jo
data16
aas
cmp
inc
bound
xchg
js
iret
fwait
les
incb
push
gs
xchg
mov
inc
mov
shlb
adcl
ud1
push
cmp
pushf
xchg
roll
aad
mov
int
mov
lcall
mov
scas
mov
hlt
dec
int3
jne
sbbl
push
es
jp
jmp
push
std
int3
push
cmp
sahf
add
add
fisubrs
xlat
push
push
jmp
cmp
sub
rcl
add
sbb
and
out
and
fsts
loope
popa
push
push
data16
mov
push
imul
orl
loopne
addr16
stc
loopne
f2xm1
insl
std
stc
pop
dec
jbe
dec
scas
gs
lods
outsb
out
mov
shll
mov
cmp
sub
stos
out
sbb
aaa
jnp
mov
dec
aaa
fldenv
mov
orl
fisttpl
add
jo
fisttpl
xchg
mov
xor
dec
mov
outsb
cmpl
and
in
popa
imul
jb
mov
in
mov
push
sbb
test
movsb
fbstp
adc
out
inc
test
mov
mov
out
test
pop
mov
incl
mov
inc
inc
mov
bound
enter
sub
lods
sub
or
cltd
shlb
jge
and
jmp
aam
jmp
lock
or
cmpsl
dec
lods
fwait
lcall
lret
jl
mov
repnz
inc
pop
xor
jecxz
xchg
adc
pop
outsb
rol
adc
jo
cmp
and
bound
btsl
loope
cmc
fsubr
push
push
cmp
repz
inc
mov
imulb
sub
pop
iret
fsubrs
push
insb
pop
xchg
mov
add
inc
mulb
outsb
iret
jnp
cmpsl
jns
adc
jl
sub
movsb
add
adc
push
out
data16
jnp
insl
dec
mov
js
dec
outsb
cmp
out
mov
mov
pusha
je
roll
xor
es
lock
scas
es
pushf
mov
or
cmp
mov
mov
cmp
sub
aaa
xorb
pop
mov
push
fdivp
push
jnp
or
ret
xlat
sub
test
gs
jg
sbb
int
lods
mov
jbe
out
jl
fnstsw
jp
orl
sub
out
cmp
and
repnz
fbld
push
and
inc
push
jecxz,pn
xor
std
dec
sahf
into
dec
pop
mov
jne
mov
mov
lods
fbstp
rcrb
rcpps
subb
dec
sahf
repz
movsb
cli
mov
push
inc
adc
push
out
mov
les
xchg
mov
mov
es
shlb
mov
ret
shll
movsb
into
push
out
inc
mov
fcmovbe
aam
jbe
movsl
pop
out
js
shlb
jo
out
jbe
shll
in
enter
stos
clc
xorl
movsl
imul
into
xor
sub
mov
dec
pop
xor
or
fstpl
mov
es
out
sub
mov
mov
popf
push
or
pop
sbb
stos
xchg
jmp
int
dec
dec
push
jge
cmp
push
mov
shrl
adc
lcall
data16
cmp
dec
adc
jg
inc
dec
jne
insl
sbb
mov
mov
imul
or
or
pop
cmpl
in
sbb
mov
jg
cmpsb
xchg
div
xchg
movsl
mov
mov
or
pop
push
cmp
int3
dec
rol
mov
repz
out
sbb
and
inc
mov
sub
jns
jne
idivb
pop
and
xchg
adc
data16
je
pop
jae
sub
hlt
push
pop
mov
popf
scas
jecxz
out
pop
xlat
out
and
mov
xchg
mov
pop
testb
xlat
xchg
add
imul
call
fwait
scas
insl
sbb
sbb
inc
push
jnp
push
int
ror
push
and
push
outsl
mov
ret
sbb
es
loope
dec
or
mov
cmp
cwtl
mov
pop
cmp
xchg
or
fsubs
xchg
mov
sub
rcrl
jge
inc
sbb
ljmp
cmpsl
sbb
xor
pop
in
or
dec
adc
or
movsb
push
iret
xor
movl
push
add
xchg
gs
insl
or
loopne
pop
ds
jno
mov
sbb
insl
push
jmp
scas
pop
and
rorl
jge
dec
jmp
hlt
xchg
add
lods
pop
pop
sub
testb
inc
nop
out
cmc
pushf
scas
xor
cld
sbbb
call
lock
xor
lret
das
cmpsl
divb
xor
mov
lods
leave
jmp
ss
cmpsb
cmpsl
pop
push
leave
dec
insb
fxch
mov
jg
xor
xor
dec
pusha
and
jg
cli
lahf
into
mov
mov
outsb
xchg
scas
aad
sbb
mov
ja
lahf
mov
jmp
dec
mov
fsubs
xchg
outsl
dec
inc
movsb
push
imull
push
sbb
fcompl
insb
or
jno
adc
adc
adc
inc
std
enter
aas
fisubs
fisttpl
loop
into
fstpl
fwait
in
test
imul
sub
sti
jbe
sbb
mov
stos
in
xor
sbb
fwait
loopne
xor
cmp
hlt
dec
adc
cmc
xor
lret
mov
test
call
mov
dec
adc
mov
fisttpl
inc
pop
into
add
fidivrs
clc
mov
xchg
loope
repz
lds
aad
push
aaa
cli
jae
fnstenv
inc
jne
mov
xchg
int3
bound
imul
push
push
call
out
jmp
inc
adc
adc
call
aad
pop
mov
or
or
cs
ds
loopne
xor
cmp
lock
scas
pop
stos
push
enter
loop
outsl
adc
inc
sbb
xchg
imul
dec
int3
aam
lods
push
loop
pop
neg
add
xchg
fsubs
mov
rorb
test
pop
gs
xor
shlb
ja
int3
push
and
jge
js
adc
cmp
mov
out
mov
jle
in
pusha
push
adc
lock
jo
or
iret
pop
add
movsl
sbb
xchg
mov
popf
loop
call
in
mov
add
pop
arpl
fs
dec
dec
insb
mov
gs
fcompp
push
inc
test
and
ds
ja
push
sub
ficompl
lods
pop
inc
add
rcrb
daa
lea
or
fstpl
xchg
arpl
rolb
leave
push
outsb
add
scas
enter
outsb
pop
inc
test
jns
jne
adc
adc
or
or
cmp
adc
testb
inc
ja
repz
scas
gs
in
sub
sti
mov
adc
arpl
daa
mov
mov
test
iret
jl
pop
jp
lds
sti
incb
jns
in
and
out
jecxz
stos
push
stc
lods
push
dec
mov
push
add
xor
std
dec
mov
insl
push
outsb
inc
stos
push
add
pop
out
mov
test
dec
jnp
loopne
cwtl
xor
fdivrl
inc
jge
aad
lods
movsl
out
adc
cltd
xchg
mov
xchg
rorb
ret
jl
mov
loop
adc
das
scas
ljmp
icebp
aas
sub
inc
adc
sahf
inc
arpl
fisubrs
jge
out
mov
les
jae
mov
mov
lock
xor
mov
inc
or
push
movsb
test
mulb
out
in
push
xchg
mov
cwtl
mov
loope
sbb
call
ds
subl
sub
sub
ficomps
icebp
cmp
pop
test
stos
push
jle
xchg
push
mov
jb
jae
rolb
not
jns
xchg
sub
lods
notb
jbe
lock
out
mov
mov
push
and
addr16
push
dec
test
aam
jle
lcall
ja
pop
daa
in
lds
cmp
lahf
or
cmpsb
xchg
sar
test
xchg
imul
jae
push
pushf
sbb
mov
xor
ja
pop
mov
mov
fldt
andb
xlat
outsl
test
in
rcrl
jne
sub
in
push
mov
adc
jle
into
loopne
xor
pop
push
add
das
daa
xchg
mov
stos
out
ss
clc
sub
push
adcb
xlat
mov
outsb
push
inc
adc
ljmp
dec
jne
into
sub
mov
xchg
lret
dec
int3
sbb
ret
push
js
xchg
out
dec
dec
mov
ret
inc
mov
jbe
mov
cwtl
leave
mov
jmp
dec
pop
ret
mov
gs
sbb
leave
or
pop
cmp
mov
xor
mov
jecxz
cmpsl
aad
lret
push
cmp
cli
dec
adc
adc
cmpsb
pop
mov
add
mov
dec
inc
push
push
shrb
pusha
cmp
pop
or
lcall
shrb
loope
xchg
xor
dec
push
es
pop
test
and
into
fsubs
enter
xor
add
test
test
bnd
dec
or
sbbb
push
mov
or
push
push
filds
and
adcl
sbb
das
xchg
lds
mov
inc
sub
xor
and
xchg
aas
mov
or
sahf
scas
outsb
push
sub
lahf
in
in
mov
or
in
popf
jl
pushf
lcall
imul
xor
insb
cltd
scas
je
js
inc
lret
shrb
repnz
fsincos
ret
cli
mov
popf
sbb
pushf
mov
mov
popl
outsl
cmp
or
outsb
test
mov
push
stos
xor
push
xor
pop
clc
sub
and
fisubs
mov
scas
pop
cmp
mov
xorl
sahf
imul
sarl
push
jge
dec
scas
dec
shlb
push
lds
sub
add
mov
inc
scas
push
outsl
fistl
dec
movsb
mov
ss
les
xchg
mov
test
or
jae
mov
ljmp
mov
daa
jns
dec
xchg
insl
push
bound
xor
push
fwait
inc
fwait
mov
pop
cmp
and
hlt
cmp
mov
fdivrs
mov
xor
cmpsl
shrb
and
inc
ja
out
push
push
xchg
popf
xor
mov
and
mov
xor
sti
jle
mov
fistpll
fsubr
mov
enter
xchg
jp
mov
testl
sub
bound
out
lock
and
mov
decl
xchg
or
movsb
test
and
dec
sub
gs
push
inc
mov
add
outsb
or
inc
cltd
push
das
lahf
aaa
jae
mov
clc
xchg
pop
lods
out
jecxz
sbb
mov
icebp
mov
insb
insl
and
lds
xor
dec
mov
mov
push
sbb
imul
push
lds
enter
mov
sarl
fs
jmp
ret
xchg
stos
inc
mov
icebp
xor
xchg
adcb
cli
cli
jb
push
cmp
outsl
fstpt
adc
cmpsb
dec
leave
sub
lds
hlt
cmp
mov
out
lcall
mov
pushf
mov
stos
xchg
in
or
leave
jge
mov
imul
mov
lret
daa
pushf
int
popa
cs
sti
xchg
xchg
xchg
jne
cli
pop
mov
mov
xlat
repz
mov
mov
sbb
das
cmp
push
mov
mov
jecxz
mov
test
aas
inc
xor
and
cmc
push
test
and
in
aaa
std
test
fidivs
mov
mov
dec
mov
mov
enter
inc
push
js
adc
orb
js
adc
inc
repnz
push
orb
lahf
movlps
rolb
mov
enter
in
shrb
xor
push
cwtl
notl
jnp
fucomp
push
mov
adcb
xor
je
push
mov
or
add
sbb
pop
pop
fdivl
mov
cmpb
daa
or
xchg
loop
sub
cmp
lods
add
bound
les
popa
mov
stos
mov
sbb
mov
jge
dec
test
cmp
cld
mov
jae
repnz
outsl
xchg
bound
xchg
cmp
jmp
mov
scas
mov
jne
mov
mov
xchg
test
jg
out
and
ss
and
in
test
mov
int
pop
cmc
faddp
test
cmp
div
mov
pop
adc
pushf
jecxz
jl
std
add
adc
testl
or
or
or
sbb
pop
rorb
rcrl
lahf
dec
les
stc
movsl
push
cmpsl
or
stos
xor
sbb
jne
mov
or
cmpsb
inc
shrb
rdtsc
ffreep
sub
xor
sub
clc
or
cmovp
leave
lods
nop
pop
pop
sbbl
sub
push
jg
add
xchg
inc
test
in
aad
outsb
mov
repz
sub
lahf
sbb
fidivs
mov
mov
pop
outsb
add
push
jnp
pop
or
aaa
push
sub
add
sbb
push
pop
push
jp
xchg
cmp
xor
mov
shll
push
fisttps
jbe
push
xchg
jnp
bound
push
arpl
adc
cmc
std
sub
mov
test
mov
pushf
ret
cmp
out
loope
xor
in
rclb
arpl
js
leave
or
xchg
fstl
dec
sbbl
mov
mov
out
fs
aaa
iret
inc
pop
pop
push
std
sbb
mov
sbb
pop
jg
cmp
outsl
inc
jl
filds
out
insl
jo
mov
je
mul
dec
or
andl
and
cmp
fistpl
psubq
jle
repnz
sarl
jmp
xchg
xchg
nop
sub
mov
or
pop
mov
shll
cmp
jb
ret
bound
xor
ja
insb
xchg
scas
stos
mov
dec
int
mov
icebp
or
hlt
aad
mov
push
cli
testb
jl
shlb
imul
popl
in
dec
jg
int3
cmpsb
subps
mov
cmpsb
rcrb
sbbb
imul
cmpsl
stc
or
xchg
lods
or
cmp
int
xor
jns
mov
pop
xchg
sbb
mov
mov
mov
lods
and
mov
lea
xchg
lock
jae
pop
xor
dec
dec
xor
sbb
out
adc
movsl
clc
cs
repz
gs
movsb
inc
inc
mov
negb
stc
popf
dec
cli
xor
adc
sbb
repz
fstpt
or
stos
sbb
adc
inc
out
repnz
aam
fadds
push
add
jae
lret
jg
nop
das
idivb
pusha
jle
and
fstps
mov
out
or
sahf
incb
cltd
sub
int
fistpll
mov
and
or
dec
shlb
pop
pop
dec
push
and
ss
fxch
xor
cmp
sahf
lds
push
cmp
jmp
lods
hlt
out
or
pushf
lds
add
sub
and
add
jae
pop
je
int3
repz
enter
enter
xchg
out
mov
loopne
cli
cltd
add
lahf
pop
cmpsl
adc
mov
dec
adcb
mov
divl
sub
outsl
mov
jp
sub
jnp
mov
pop
push
scas
jge
movsb
inc
mov
pop
cmp
xor
faddp
mov
pop
mov
cmpsl
sub
mov
mov
lcall
cmp
jns
lea
insl
lea
jne
mov
mov
jbe
iret
mov
mov
stos
mov
cmp
jnp
enter
push
xchg
add
pop
mov
push
fcmovbe
add
sub
mov
mov
pop
mov
stos
cmc
mov
xchg
cmc
repnz
push
enter
mov
push
rorb
enter
add
adcb
scas
mov
das
mov
shll
lret
xlat
insb
ljmp
shlb
xchg
outsl
movsb
xchg
cltd
repz
dec
rclb
filds
pushf
fstl
insl
rorl
scas
mov
xchg
mov
test
lea
pop
fbstp
mov
mov
fimull
mov
out
stc
inc
cmp
mov
and
ja
xchg
add
jns
cld
leave
and
aas
ret
shl
fs
rclb
ficomps
mov
enter
push
sub
rcrb
xor
adc
je
xor
call
and
add
push
xchg
loopne
xchg
xor
add
inc
adc
dec
cld
adc
dec
pop
xchg
jnp
fs
ret
dec
imul
in
mov
mov
push
aas
movsl
fdivs
loope
xchg
pusha
or
addr16
adc
mov
dec
mov
shlb
pop
push
and
push
push
mov
mov
loopne
sti
in
pop
test
xor
xchg
andb
xor
fdiv
fs
nop
push
or
lret
mov
inc
jne
and
jecxz
cltd
cmpsl
pop
inc
cmp
or
imul
rcll
adc
or
jmp
pushf
fnstcw
pop
fistl
cmp
or
imul
out
pop
cmp
stos
sub
mov
aad
nop
sbb
push
icebp
jbe
xchg
ds
mov
and
push
sub
lahf
cli
add
inc
jb
addl
out
ja
loopne
inc
dec
xchg
data16
lods
xor
aaa
adc
mov
cmp
ljmp
flds
and
push
xor
mov
insl
fimull
pushf
or
lahf
jl
cmpsb
pop
out
mov
stos
mov
push
aas
ficomps
mov
and
sub
cmp
mov
scas
fstps
push
shlb
and
nop
ret
adc
mov
cmp
push
sbb
movsl
dec
mov
hlt
jl
push
enter
lcall
rorb
mov
daa
mov
mov
xor
std
es
jae
in
imul
and
ss
out
in
addl
mov
fs
xchg
xor
mov
gs
fsubrl
pop
rcl
fmull
pop
pop
push
mov
cmc
sbb
sti
popa
mov
outsl
movsl
dec
stos
jo
mov
sbb
out
leave
push
xor
aam
test
in
sti
or
movsb
mov
addr16
pop
add
insb
lods
sar
clc
mov
lods
pop
orb
int3
push
test
mov
mov
pop
mov
gs
mov
xor
hlt
xchg
fisubrl
inc
mov
cmpsl
cltd
adc
xchg
stc
cmp
sbb
pop
and
mov
dec
push
fcom
cmp
jl
iret
daa
data16
aaa
fcmovnu
sub
fadds
pop
mov
shll
add
or
pop
jp
imul
jns
push
pop
pop
mov
push
pop
jge
je
repz
test
mov
pusha
jecxz
mov
lcall
shll
or
movsl
dec
add
pop
imul
xor
sti
fisubl
lahf
pop
xchg
jg
pusha
aad
pushf
dec
sahf
roll
inc
cmpsl
dec
lods
cmc
jo
mov
xchg
push
add
icebp
leave
addl
jb
test
lods
insb
cmc
out
jns
jne
lods
mov
cmp
int3
fwait
repnz
call
add
es
push
mov
pusha
shll
out
adc
inc
decb
faddl
das
pop
sbb
insl
jns
fisubrl
js
setne
aaa
sti
pop
pop
cmp
jg
into
xchg
mov
dec
inc
bound
out
push
les
leave
stos
sub
add
stc
inc
add
cld
jp
lcall
xor
sub
leave
lcall
inc
js
adc
outsl
cmpsl
les
incb
ret
and
dec
sbb
pop
in
jo
les
fildll
adc
cmc
push
jae
in
inc
adc
out
cmpsb
sub
fcomi
or
movsl
add
or
jp
jb
mov
push
loopne
in
pop
popa
cltd
in
pusha
nop
inc
push
lods
les
cmpsb
push
cmpsl
xor
jp
xchg
into
ds
loope
rorb
cmpsl
mov
mov
push
repnz
std
outsl
mov
call
xchg
dec
jecxz
jmp
ret
insb
lahf
ret
mov
sahf
cmpsb
rorl
gs
cwtl
push
mov
aad
popa
or
sahf
xor
divl
mov
inc
cmp
stos
loope
dec
xchg
push
lea
lods
and
sub
out
je
test
pop
repz
clc
aas
lods
in
fdivl
xor
shlb
out
push
into
mov
clc
mov
mov
fmuls
ret
mov
pop
mov
mov
and
mov
loopne
add
insl
dec
push
jecxz
lods
jno
hlt
pop
lret
cmp
xor
cmp
jns
inc
loop
aad
pushf
inc
ret
add
sbb
fistps
cmp
repnz
push
orb
cmpsl
xchg
cmp
or
jno
jp
adc
mov
filds
mov
mov
cmp
adc
jns
clc
push
dec
clc
jmp
jle
pop
call
or
jp
imul
in
or
aaa
jge
scas
mov
cs
xchg
in
mov
sbb
pushf
addb
push
jno
dec
aas
mov
pop
repnz
insl
std
mov
test
inc
scas
adc
mov
lods
sub
pop
mov
jp,pt
jp
mov
rdmsr
push
cld
pop
ljmp
inc
pop
push
sbb
push
arpl
xor
push
aad
push
ljmp
lret
xchg
and
mov
add
lcall
addr16
xor
dec
enter
popf
movsl
jae
ja
outsb
jp
xchg
movl
leave
decl
xor
add
int3
shll
mov
ds
mov
pop
insl
xor
jbe
into
and
fdivp
fucom
arpl
fcomps
ljmp
dec
inc
loop
sub
scas
dec
idivl
pop
sbb
out
sbb
dec
jge
mov
sbb
sti
mov
insl
xchg
imul
jne
popf
adcb
jl
or
push
or
xor
adc
dec
xchg
pop
push
jno
sti
push
jge
lcall
sarb
push
mov
ret
xchg
inc
outsb
cmp
adc
mov
mov
icebp
adc
aaa
shl
mov
add
sub
and
das
and
fdiv
test
repnz
outsl
cmp
pop
cli
sub
mov
push
add
dec
lods
arpl
lods
repnz
lods
cmpsb
aad
adc
inc
cmp
testl
sub
or
sub
ljmp
mov
mov
jle
mov
mov
xor
fisttpll
mov
fsubrs
pop
jmp
into
mov
cmp
shll
in
lret
sbb
in
cmp
and
jne
nop
and
jecxz
inc
or
stos
cmp
jp
and
outsl
xchg
mov
mov
loopne
cmc
icebp
cmp
aas
cmp
jg
lods
mov
inc
sbb
repz
mov
push
or
pop
mov
jbe
enter
out
inc
xor
mov
xchg
mov
jns
xchg
mov
ds
lods
cmpsl
lock
pop
push
stos
cmp
arpl
nop
frstor
push
mov
jns
ja
xchg
and
ja
jle
mov
push
aas
loop
bound
lock
jge
in
ffree
data16
push
and
std
test
add
cmp
daa
in
xchg
dec
dec
sbbb
push
ret
inc
pusha
adc
cmp
fnstenv
stc
punpckhbw
xor
adc
aaa
popa
pop
jecxz
xor
jbe,pn
mov
addl
fs
jge
mov
push
out
adc
adc
loop
mov
int
push
dec
adc
in
nop
ljmp
lock
push
sbb
repz
fstps
inc
mov
xor
mov
mov
dec
pop
jmp
stos
sbb
mov
rol
nop
jb
rcrb
push
sti
pop
rolb
and
lods
loop
mov
mov
cmp
int
xor
and
xchg
movsb
ficoml
mov
leave
bswap
testb
mov
inc
push
cmp
sbb
in
flds
cmp
xor
sub
mov
push
jb
dec
sub
dec
lahf
lret
in
je
imul
fs
movb
stos
dec
or
adc
fstps
rclb
enter
es
stos
fisttps
data16
mov
xor
cmpsl
push
dec
stc
pop
divl
mov
clc
adc
mov
and
and
mov
cmp
inc
daa
int3
lret
jle
js
cwtl
das
xor
sub
cs
add
hlt
in
mov
repnz
repnz
inc
loopne
pop
jg
inc
cltd
xchg
mov
mov
cmp
xchg
rorb
mov
nop
sub
shll
cmp
xor
stc
jbe
outsl
lds
outsb
push
add
iret
cld
imul
cwtl
scas
pop
xchg
pop
push
push
adc
ret
fsub
out
push
push
sub
jecxz
sub
mov
sbb
xor
stc
imul
clc
test
arpl
jge
push
lahf
xchg
pop
shrl
jg
jl
mov
dec
mov
mov
sahf
das
int
inc
lock
and
xor
sub
mov
or
in
lods
add
movsb
cli
jb
ja
je
cmpsl
into
cmpsl
fdivrs
arpl
pop
adc
lock
fiaddl
xchg
mov
neg
adc
jnp
inc
ss
js
or
and
imul
dec
testl
imul
jns
repnz
fucomi
movsb
rorl
push
enter
mov
fadds
push
les
pop
fisubrl
push
sub
leave
fs
lds
jl
mov
rolb
xor
outsl
fbld
pop
adc
cli
sbb
aad
and
xor
push
outsl
cs
xor
dec
pushf
xchg
mov
xorb
push
dec
pop
les
out
fs
sub
lea
mov
mov
rcl
push
pop
push
fcoms
jmp
xor
or
dec
lahf
fnstsw
inc
sarl
lea
mov
out
scas
jae
pop
push
pushf
cmpsl
inc
mov
pushf
enter
mov
pusha
pushl
sub
cli
insb
mov
cmp
xor
fucomip
shll
es
std
fimuls
cmp
lret
flds
fsubrs
clc
inc
xchg
pop
mov
sub
add
push
jmp
mov
repnz
sbb
jge
sbbl
add
sbbb
sbb
or
stc
faddl
repnz
cmp
lret
dec
xorl
roll
adc
adc
fs
dec
decb
mov
push
cs
pop
push
aas
sbb
les
jno
dec
andb
sub
call
popf
shll
popa
hlt
cmp
push
movsb
cmp
mov
cmp
fstl
mov
aas
pop
out
inc
insl
inc
or
mov
jl
test
xchg
aaa
mov
dec
or
inc
ljmp
ljmp
std
int3
jne
adc
loopne
mov
cltd
cltd
mov
mov
in
adc
pusha
and
sub
dec
xchg
shrl
push
mov
mov
daa
sub
mov
das
pop
imul
cmp
mov
pop
mov
jg
push
cmc
sbb
and
pop
sub
sbb
cs
dec
sub
push
xchg
loopne
inc
inc
hlt
and
lea
mov
js
jo
pop
stos
inc
enter
je
dec
push
shlb
loopne
imul
inc
cmpsb
cltd
mov
lret
inc
sub
int
call
leave
dec
popf
movsb
mov
sbb
pop
lret
rclb
pop
leave
jns
clc
fstl
outsb
dec
pop
adcl
idiv
loop
xor
sub
mov
push
pop
lock
lock
popf
sbb
xchg
aas
fcompl
pop
shrb
push
inc
jae
xchg
mov
mov
or
pop
nop
das
fs
bound
jg
sarl
movsl
sarl
adc
scas
sbb
movl
lods
outsl
pop
and
xor
cmc
xor
push
popf
lock
push
loope
dec
outsl
and
stc
stos
shlb
je
pop
aaa
push
xlat
sub
push
mov
movsb
adc
mov
cmp
lcall
fidivl
mov
aas
cmpsb
icebp
adc
add
cltd
iret
insl
rolb
int
enter
cmc
insb
clc
pop
push
movsb
int
and
mov
enter
mov
aaa
mov
mov
hlt
mov
xlat
sbb
ds
rclb
push
pop
xor
xchg
ljmp
mov
adc
pop
jo
ret
sbb
inc
jmp
mov
fistps
jb
es
mov
insb
das
mov
cmpsb
inc
push
call
sbb
or
push
inc
lock
popf
out
pop
xchg
pop
jecxz
xlat
push
xlat
shr
fs
scas
test
icebp
xor
repz
test
jmp
dec
mov
push
in
gs
xchg
fisttpl
pop
lock
mov
enter
push
clc
sub
add
cmp
mov
cmc
pop
jecxz
cmp
xchg
out
xlat
mov
pop
daa
addl
stos
xchg
imul
mov
loop
scas
out
or
aas
je
mov
sti
pop
mov
xlat
sbb
pop
sub
in
test
push
push
jl
jp
add
inc
cmp
dec
cmp
pop
and
or
fidivrs
fimull
movsb
xchg
mov
icebp
scas
cltd
loop
mov
push
and
push
push
into
and
out
pop
in
inc
inc
enter
dec
cmpb
jno
popf
in
in
xchg
push
xchg
sub
shll
cli
xchg
pop
or
imul
add
push
jb
lret
push
js
jmp
fstpl
jo
sub
ret
and
out
fisttpll
notb
clc
loop
dec
stos
sbb
push
shlb
xor
fldenv
adc
pop
push
data16
mov
jae
sahf
mov
inc
lcall
imul
cmp
jnp
mov
call
cmp
out
dec
or
pusha
scas
dec
mov
scas
mov
movsb
push
mov
es
stc
fldt
test
cmpsl
das
dec
lea
out
and
cmp
pop
pop
mov
dec
cmp
mov
movsl
inc
pushf
adc
push
inc
push
adc
enter
sarb
test
outsb
push
mov
repnz
jmp
lcall
pushf
sub
ja
fmuls
fmull
or
shrb
ja
popa
cwtl
sbb
or
enter
inc
dec
xor
jns
ja
push
ja
les
sbb
xchg
push
dec
lods
xchg
bound
pop
xchg
sbb
or
push
jb
ljmp
lret
fdivl
cmp
jmp
mov
and
cmpsb
xor
shrl
add
pop
out
nop
roll
pop
pop
and
sbb
fldcw
sub
jle
mov
mov
add
cmc
jmp
pop
and
daa
aad
iret
lods
pop
fxch
nop
das
sbb
pop
add
xchg
fprem
and
lods
popf
lret
pushf
jbe
mov
lahf
mov
xchg
pop
pop
cmpsb
add
cmpsb
xor
repz
test
pusha
int3
mov
xchg
and
loop
push
shll
xor
mov
pop
iret
std
jg
add
jmp
add
js
dec
lea
inc
mov
lahf
int
out
fstpl
inc
xchg
pop
ret
repz
xchg
aas
jno
lods
sub
in
ljmp
mov
test
cmc
pop
ret
and
loope
int3
sahf
gs
rclb
mov
test
jle
in
aas
cli
shlb
inc
sbb
clc
fwait
cmp
and
xchg
xchg
inc
xor
adc
addr16
sbb
jne
hlt
cmp
jmp
cmpsl
clc
push
pushf
rcrb
inc
adc
test
leave
orl
lret
imul
loopne
imul
dec
xchg
jle
aad
or
dec
fdiv
lods
mov
dec
in
ja
fistl
call
mov
push
pop
sub
xchg
fcoml
sbb
mov
inc
stc
and
ret
add
leave
inc
sbb
cs
mov
into
jnp
shr
outsl
rcl
mov
jns
scas
xlat
push
pop
cwtl
cmp
or
lret
idivl
out
in
int
inc
filds
lret
andb
pop
paddusb
jo
inc
aad
jmp
jge
jmp
movsl
fnstenv
jne
ss
pushf
adc
sahf
in
aas
inc
push
add
push
push
jle
adc
imul
outsb
sub
in
mov
sbb
cmpsl
ret
jb
fisttpll
cmp
mov
in
add
inc
mov
pushf
fldenv
mov
inc
pop
pushl
movsl
dec
sub
in
movsl
inc
cld
fidivrs
inc
inc
insb
and
addr16
fmul
xor
leave
data16
cmpsb
js
jb
jge
shlb
xor
ss
push
cltd
jle
xchg
clc
testb
sbb
std
movsl
add
add
push
fstps
cmc
leave
jle
mov
mov
adc
pushf
test
pop
cli
push
cwtl
dec
sub
insl
loop
cltd
scas
cltd
outsl
test
sbb
jmp
iret
mov
or
fwait
and
mov
int3
push
repz
cmp
pop
adc
cli
adc
mov
sti
jl
jo
sub
jl
xor
xor
mov
out
enter
xchg
inc
in
mov
xchg
movsl
popf
xor
ror
cmp
fsubs
shr
jns
push
add
out
add
lret
inc
mov
inc
sub
jmp
xchg
mov
jno
in
jb
pop
in
cltd
mov
sahf
xchg
repz
cs
and
in
mov
inc
xor
mov
adcl
cltd
test
fcoms
aad
or
add
popa
and
or
or
aaa
push
nop
stos
fistpl
jnp
ss
xchg
iret
hlt
mov
sarl
aam
add
mov
lret
jns
ljmp
out
fsts
xchg
mov
adc
lea
outsl
sti
inc
or
into
xchg
jge
fwait
cwtl
shlb
sbb
dec
and
jb
xchg
pop
stos
loope
fdivl
sub
cmc
adc
test
test
mov
add
aam
pop
sti
add
jbe
movsb
aaa
les
jnp
mov
in
mov
inc
mov
inc
mov
mov
leave
mov
das
adc
mov
in
add
push
sub
mov
loop
icebp
lds
imul
mov
jl
mov
int3
xchg
pop
or
jp
mov
push
xchg
fst
jge
loop
fists
cmp
imul
mov
inc
lahf
dec
sbb
imul
mov
popa
aas
pop
repnz
iret
out
mov
mov
xor
dec
pop
mov
pop
mov
ret
inc
int3
jno
mov
inc
cltd
jge
mov
add
mov
pop
mov
mov
sub
jns
aad
cli
pop
and
push
cltd
rcrl
iret
adc
sub
inc
push
xor
nop
mov
push
jne
enter
outsb
aas
repz
cltd
or
or
stc
sbb
enter
es
loope
roll
jae
leave
cmp
fidivl
jmp
sbb
rclb
mov
daa
inc
lds
popa
popf
sub
pop
lods
adc
mov
mov
mov
sbb
sub
mov
pop
rep
jle
cli
call
xor
jge
dec
stc
xchg
inc
hlt
mov
and
stos
sarb
test
icebp
out
cld
jbe
jns
cmpsl
push
pop
stos
popf
and
popl
iretw
push
sub
add
mov
xor
jge
cmpsb
les
cli
inc
out
mov
test
lds
jne
push
xor
sbb
aas
pop
cld
lds
or
and
into
adc
adc
mov
lock
dec
jge
inc
or
dec
loop
lea
popa
in
inc
ja
jmp
xchg
idiv
sub
mov
jno
push
push
push
lea
xchg
nop
cmp
and
loop
pshufw
andl
inc
cmpsl
dec
and
fdivp
pop
sbb
dec
cmp
aaa
pop
mov
rorb
add
pop
or
jp
ja
imul
rorb
cmpsl
adc
movsb
cmp
popa
ud1
movsl
mov
push
mov
xor
pop
pop
dec
inc
add
pop
mov
pop
push
jo
int
int3
inc
dec
cmp
push
mov
int
pushl
pushf
dec
cmp
sub
cld
mov
aas
inc
add
loope
in
mov
xor
movsl
mov
lret
ds
aam
fs
jo
int3
jp
xchg
cmc
lea
pushl
cmp
and
xchg
icebp
bound
mov
pop
call
cmp
cmp
scas
lds
dec
push
inc
sbb
mov
lock
xor
ror
insl
dec
inc
jb
push
mov
test
out
push
in
sub
push
pop
sbb
arpl
ficoms
mov
jb
mov
xchg
sub
dec
or
dec
daa
pop
jle
push
popf
dec
or
out
mov
cmp
jmp
fisubrs
dec
ret
fs
in
daa
push
jns
cs
gs
mov
popa
repnz
pcmpeqb
lcall
xchg
or
jno
xchg
mov
loop
outsb
jne
lea
sbb
popf
loop
jecxz
pop
add
dec
addb
aam
jo
hlt
lods
lret
arpl
mov
push
daa
insl
xchg
jg
push
push
jns
and
mov
or
jb
leave
push
rcrb
jge
lods
dec
jns
adc
sbb
fs
mov
mov
xchg
xlat
cmp
or
dec
mov
les
mov
sub
out
cmp
mov
inc
test
push
dec
rclb
pop
lahf
sub
inc
sbb
and
jge
imul
inc
aad
shrl
mov
rcl
faddp
popf
arpl
nop
scas
bound
xchg
mov
add
xor
shrl
mov
xor
aaa
testb
add
mov
pop
or
fidivs
mov
clc
cmp
in
pusha
arpl
aad
mov
loop
movsb
xor
mov
lock
jp
lea
jns
addb
push
lcall
pushf
lds
and
jmp
lahf
leave
mov
fs
pop
mov
mov
mov
jmp
or
add
sub
arpl
and
out
fldcw
sub
in
dec
stc
or
inc
mov
popa
repnz
aam
mov
jo
ror
outsl
les
xchg
dec
cli
sbb
test
ret
dec
cmp
adc
iret
adcl
push
es
xchg
xchg
xchg
adc
fwait
pop
mov
xchg
jmp
stos
inc
push
mov
js
sbb
std
jo
nop
addr16
cmp
jo
outsb
push
xchg
in
jle
fsubl
push
fsubrs
mov
aad
je
xchg
test
xchg
adc
adc
inc
sbb
inc
lds
stos
ja
jle
jge
lahf
mov
cs
scas
out
sub
int3
jp
pop
xchg
mov
pop
push
cmc
jmp
lds
mov
outsl
test
inc
xor
xchg
jae
test
sub
imul
scas
push
subl
outsl
dec
push
call
pop
mov
hlt
jl
ljmp
mov
and
mov
lods
lret
and
lds
xchg
jne
add
pop
jb
adc
cld
aaa
in
les
mov
clc
movb
push
cmpsl
jecxz
dec
bound
inc
cmp
sbb
es
fbstp
push
popf
cld
and
pop
nop
cwtl
out
pop
mov
scas
and
dec
xlat
rcll
adc
push
mov
and
mov
movb
mov
jmp
add
jmp
or
xor
ret
cli
pushf
std
inc
xchg
push
fildll
add
push
jno
inc
cmpsl
fstl
dec
idivl
sti
call
add
cwtl
out
or
fisttpl
fnstsw
mov
fsubrl
je
out
ret
sarl
js
aad
or
out
sub
mov
mov
data16
sahf
mov
mov
push
popf
stos
mov
cld
out
push
pop
int
or
pop
ret
jle
pop
push
and
lcall
inc
inc
or
or
cmc
xor
mov
fldl
out
and
in
xchg
fsubp
xlat
loope
aas
js
das
xor
cs
shrl
mov
push
cmc
movsb
xchg
test
andb
bound
jecxz
xchg
and
mov
in
fwait
mov
add
and
cmp
jge
lods
xor
cmp
ss
out
shll
pop
repnz
xchg
fidivrl
xchg
lcall
and
insb
pop
ds
test
fcomi
pop
push
addl
ret
mov
pop
and
je
js
bound
xchg
mov
mov
cmp
lret
das
and
pushf
sub
bound
pop
push
pop
and
fsubs
std
mov
rolb
orl
aad
scas
pushf
call
xchg
loop
push
mov
xchg
cld
mov
ljmp
add
push
mov
cmpb
push
lret
insl
jb
push
test
or
sub
shll
and
jmp
dec
mov
insl
dec
or
sti
jecxz
fcoml
das
and
data16
and
mov
jne
jle
xchg
scas
ljmp
push
js
push
pop
pop
and
dec
push
das
das
iret
add
pop
pop
or
or
daa
inc
fiaddl
add
stos
cld
cmp
fistl
push
xor
and
sub
lea
loope
mov
push
sub
adc
repnz
lcall
fs
hlt
rcll
jnp
push
ret
movsb
mov
xchg
mov
out
rolb
lcall
xchg
outsl
lcall
sbb
dec
cld
sub
mov
shll
sbb
cwtl
psadbw
gs
int
or
in
adc
lret
cmpsl
inc
lret
fdivrs
iret
cmp
inc
add
clc
pop
mulb
fwait
jle
out
xor
test
decb
push
test
or
scas
int3
adc
in
or
mov
std
dec
repnz
test
popa
push
in
push
xor
testl
mov
jg
jmp
jnp
sub
fimuls
movsb
dec
sahf
ret
add
push
xlat
sbb
fwait
ss
push
mov
cwtl
inc
adc
pusha
stos
cmpsl
call
mov
cmpsl
negb
pop
push
mov
pop
pop
pop
jne
or
push
stos
and
into
mov
mov
pop
dec
in
or
lret
sbb
pop
mov
je
push
push
mov
sbb
cmp
add
mov
enter
push
shl
or
dec
in
ret
sub
int3
adc
push
cmp
or
sub
arpl
jmp
scas
xor
cmp
mov
movb
idivl
push
sar
orb
inc
jo
adc
dec
dec
add
bound
push
pop
dec
fwait
mov
mov
adc
add
addr16
xor
dec
test
push
mov
and
mov
jp
xchg
jmp
out
inc
mov
jg
test
xchg
bound
outsb
xchg
out
xor
fxch
pop
popf
and
xor
loope
push
jg
push
in
cmp
pop
jecxz
pop
pop
and
rdmsr
inc
pop
cli
jmp
scas
std
pop
jns
push
push
sbbl
inc
dec
mov
pop
push
lcall
fisubrl
cmpl
fcmove
mov
cmp
pop
sti
repnz
mov
push
xchg
popf
jo
or
dec
push
int3
pop
sbb
les
xchg
jmp
xchg
in
adc
rclb
xchg
adc
jns
xor
sbb
int
sub
sub
adc
inc
dec
dec
test
add
jae
hlt
lcall
cwtl
icebp
adc
push
lcall
nop
xchg
xchg
out
sub
sbb
add
mov
push
insl
inc
or
sub
cmc
cmp
les
jl
dec
fisubrs
shl
mov
cmp
cli
cwtl
sbbl
rolb
adc
loopne
add
enter
test
mov
push
sarb
push
rcl
js
dec
xchg
xor
cmp
rcrl
movsb
jmp
dec
outsb
out
xchg
jb
scas
imul
or
sbb
andb
pop
cmpsl
cld
out
loope
cwtl
inc
imul
lcall
fcomps
xor
shlb
or
adc
xor
loope
xchg
outsl
in
ljmp
les
push
mov
mov
fmul
scas
cli
repz
mov
xchg
daa
fisubrs
adc
jle
cmc
xchg
jle
mov
xchg
stc
push
mov
add
or
adc
xor
inc
mov
push
pop
mov
jmp
lahf
movsl
in
hlt
out
jne
mov
cmp
aas
adc
inc
sub
int3
imul
dec
jp
pop
xchg
shrl
or
fwait
clc
iret
adc
dec
aam
jl
adc
sub
jge
outsl
jge
std
in
insb
stos
sti
add
and
iret
cmp
fcompl
or
popa
in
cmp
mov
sbb
pop
cmp
es
inc
ficoml
lret
mov
push
sahf
cltd
xor
lods
adcl
rcrb
add
jle
pop
mov
xor
movsl
sub
cmc
dec
fld
jns
pop
add
js
ficoms
pop
scas
adc
loope
ja
jb
fs
out
mov
dec
enter
divl
jge
inc
mov
inc
mov
popa
push
xchg
outsl
out
jge
scas
pusha
jnp
fisubl
clc
mov
xlat
aam
sbb
adcl
bnd
jp
jmp
mov
mov
orb
notl
inc
push
xchg
lods
sub
mov
jle
inc
push
pop
pushf
push
or
pop
fsubr
pop
cmpsb
leave
pop
cli
xlat
push
pop
loope
lret
xchg
roll
lret
in
jo
popf
clc
dec
pop
repnz
ljmp
jne
inc
mov
stc
outsb
je
fs
fs
push
js
xchg
ja
data16
mov
and
hlt
push
jp
out
sarl
cli
js
test
and
inc
sahf
lods
sahf
mov
add
popf
es
pop
jnp
xor
in
stos
fwait
inc
jl
xchg
jo
and
js
pop
scas
aam
inc
out
pop
cmp
mov
ds
jp
or
mov
bound
push
push
dec
test
movsl
and
and
insb
add
pop
xchg
data16
and
aad
jmp
mov
movsl
add
push
or
mov
push
push
pop
cmp
jg
inc
push
push
hlt
xchg
and
or
pop
mov
push
jecxz
dec
jge
addr16
js
dec
scas
xchg
imul
addr16
xchg
inc
aas
out
call
pop
inc
aas
cmp
int
add
in
xchg
sbb
cld
jp
sub
out
fs
in
lods
int
lea
push
add
in
mov
jmp
aam
ret
mov
push
dec
add
jnp
loope
sub
mov
pop
scas
push
inc
daa
add
sbb
sbbb
mov
xor
mov
inc
and
sbb
imul
mov
dec
pop
xrelease
aad
in
mov
sub
xchg
xchg
sub
int
xchg
scas
lods
std
jmp
or
sti
mov
jo
inc
push
repz
add
sub
sahf
test
push
mov
jnp
sub
mov
jne
jbe
cmc
cmp
cmp
cltd
jle
sub
push
lahf
outsb
cld
push
ljmp
push
flds
dec
arpl
std
daa
cmp
jae
sahf
imul
adc
fstpt
enter
loope
pop
mov
in
mov
mov
xor
cmp
mov
cmpsl
cli
repnz
ret
mov
test
mov
or
cmp
xor
pop
mov
lods
push
call
xlat
pop
dec
insb
xchg
cmpl
cli
jns
nop
mov
inc
inc
subl
push
clc
sub
jbe
or
add
jl
xchg
push
nop
mov
arpl
and
xlat
icebp
int
mov
lret
leave
fisubl
inc
outsb
ret
adc
lahf
xchg
sbb
xchg
mov
jo
or
sahf
mov
mov
es
mov
into
mov
dec
fidivl
mov
lock
inc
out
ds
loop
out
sbb
jmp
inc
mov
rcrl
jge
mov
jne
xchg
cmp
xchg
xor
mov
adc
jns
pop
push
add
jnp
sub
xchg
dec
mov
rcr
ret
mov
fnsave
cmp
outsl
jl
stc
ret
adc
cmpsl
cmpsl
fxch
mov
sbb
push
rorb
mov
mov
imul
stos
fildll
aad
fisttpll
ss
in
movsl
inc
jnp
inc
push
pop
cld
sbb
cmp
push
pop
add
adc
out
mov
sub
out
clc
ja
in
jo
int3
jge
repnz
arpl
cmc
data16
pop
idivb
pop
adc
mov
ret
ja
call
jg
push
cmp
inc
in
jmp
pop
aam
arpl
mov
mov
cmp
lret
sarb
inc
xchg
fsts
push
call
dec
js
cwtl
add
aaa
inc
mov
or
fldcw
les
and
push
sbb
hlt
in
dec
test
push
iret
push
push
mov
inc
lahf
ljmp
ljmp
ret
jp
adc
lahf
out
movsl
xchg
aas
jno
or
sbb
out
inc
inc
pop
xlat
mov
xlat
shll
jmp
or
inc
add
test
repz
rcl
dec
xlat
fsubrl
scas
insl
iret
push
mov
sbb
std
add
and
jae
lret
stos
daa
push
cmp
pop
test
sub
xchg
shll
and
cwtl
fbstp
and
pop
inc
js
push
cmp
scas
loopne,pn
fs
hlt
sbb
sub
lea
xor
out
or
pop
out
icebp
fnsave
cmp
cltd
adc
and
aad
pop
gs
loope
xorb
popf
test
or
fs
pop
cmc
pop
shll
js
test
fidivs
cmpsb
sub
jmp
xchg
xchg
and
lods
xor
xor
cmpsl
dec
in
mov
xor
das
push
addb
add
push
outsb
xor
cld
xchg
loop
ret
mov
add
push
rcl
push
in
sbb
or
sbb
subl
sub
stc
cmp
xchg
sbb
repnz
js
pushf
sbb
xlat
sbb
mov
pop
mov
xchg
jo
je
jge
lds
aas
xchg
sub
mov
shlb
dec
cs
sbb
cld
sub
in
shlb
aaa
mov
sbb
inc
js
and
popa
adc
push
lods
mov
fists
mov
orl
dec
jb
jmp
xorl
scas
gs
hlt
sbb
or
fwait
sar
jnp
or
mov
and
out
xor
scas
mov
inc
sahf
and
cltd
bnd
fwait
shl
pop
lds
mov
pop
arpl
jb
inc
loop
or
insb
xchg
dec
xchg
rcrb
loop
lahf
sbb
scas
cmp
aam
xchg
xchg
dec
fsubrl
out
js
pop
fidivs
inc
in
xchg
inc
idivl
mov
fistl
mov
fcmovnb
in
xchg
xor
jno
ljmp
mov
nop
mov
jne
rorb
leave
sub
out
inc
pop
and
iret
ret
into
leave
sahf
and
rcrl
inc
arpl
hlt
sub
jg
rorb
rol
push
and
cmp
fistpl
test
mul
jmp
push
cli
int3
pop
mov
subb
lods
jae
rorb
pop
adc
ss
inc
sbb
test
jns
out
sub
addr16
sub
cld
adc
rcr
loop
pusha
inc
xor
push
push
loope
aaa
pop
xchg
and
cmp
adc
xchg
adc
mov
push
leave
push
mov
mov
pop
repz
dec
mov
hlt
jnp
and
add
out
xchg
inc
jb
mov
nop
add
pop
arpl
xor
ret
and
insb
push
cmpsl
scas
out
int
cltd
sub
mov
mov
jnp
das
int
cwtl
pushf
enter
add
dec
mov
jns
or
imul
add
ljmp
xrelease
pop
jg
push
dec
lds
cmpsb
in
inc
movsl
movsl
lds
cmp
fadds
popf
and
in
push
inc
sarl
sub
pop
push
loope
hlt
fldl
andb
sub
push
sub
hlt
add
and
push
add
sbb
push
inc
mov
mov
xchg
ljmp
inc
fsts
or
inc
mov
test
ljmp
cmp
mov
stos
jg
pop
add
xchg
aad
clc
bound
push
jg
repnz
cmc
push
movsl
jnp
pop
mov
outsl
je
push
xor
push
inc
mov
neg
stos
xchg
cmpsl
xchg
inc
daa
mov
bound
sub
lret
fbld
pop
push
rclb
loope
xchg
and
test
aas
testl
xchg
imul
cmpsl
sub
push
test
loope
push
in
jno
xor
jnp
jbe
xchg
or
scas
xchg
scas
outsb
mov
outsl
pop
mov
aad
popa
xchg
dec
imul
inc
push
stc
in
push
das
adc
mov
jmp
or
fimull
push
shll
push
push
fcompl
cmp
add
int
jns
sbb
mov
sub
sbb
push
addr16
test
adc
cli
out
inc
jmp
or
jle
movsl
icebp
push
out
imul
add
lods
and
movsb
shl
mov
les
bound
jo
adc
sbb
pop
loope
std
jne
mov
sbb
loope
xor
push
aad
das
pop
xorl
push
cli
enter
mov
scas
or
cmp
xor
setp
inc
loop
xchg
daa
mov
mov
lods
and
sahf
xchg
cmp
xchg
jno
adc
adc
or
dec
int
nop
mov
or
push
out
imul
fisubrl
dec
mov
mov
inc
pop
loope
test
push
shll
repz
cmp
dec
int
shl
inc
xchg
bound
aam
pop
pause
add
push
add
cmp
mov
imul
jnp
insl
mov
xor
loope
and
jl
aam
jmp
inc
stos
sub
xor
mov
pop
mov
jp
ss
scas
push
xor
dec
sbb
ljmp
sub
mov
sar
clc
push
jne
pop
sbb
movsb
pop
mov
imull
push
mov
iret
push
xchg
nop
xchg
rcrl
add
mov
movsb
fisubrs
pushf
dec
jp,pn
dec
lret
jmp
icebp
nop
cs
mov
int3
xchg
mov
mov
into
jo
and
insl
push
pop
sub
aaa
jle
insl
pusha
popf
xchg
cmp
pop
lods
jg
push
ret
xor
xchg
neg
addr16
fnstenv
push
adc
jae
subl
aaa
jbe
pushf
pop
stc
sub
insl
popa
dec
dec
adc
cmpsb
popa
jnp
movsl
and
xlat
imul
fisttpll
cwtl
fmuls
xchg
lret
hlt
repnz
inc
popf
fs
popf
jge
sub
and
call
lea
fimuls
push
inc
cmp
sub
push
jns
subl
sahf
sbb
stos
mov
pop
or
repz
cld
ljmp
xchg
jg
jmp
popf
adc
xchg
inc
xchg
notb
incb
pop
dec
xchg
cmp
jle
fisubs
mov
pop
adcb
cmp
pusha
jns
mov
imul
lods
mov
addb
in
repz
popa
cli
lds
je
lret
mov
insb
daa
lcall
scas
push
fldenv
fstl
pop
jbe
je
loopne
in
mov
test
or
dec
fs
jno
ret
add
les
lret
shr
out
fisubs
cmp
mov
dec
clc
and
and
std
les
in
stc
adc
cmp
mov
dec
outsb
jle
fwait
mov
xor
jmp
xchg
sbb
mov
bound
jg
daa
in
xchg
pop
out
xchg
mov
jecxz
adc
xlat
jp
cmp
js
nop
inc
insl
xchg
sub
ljmp
shl
adc
outsb
imul
or
jbe
fsubl
nop
pop
sub
xor
cld
scas
add
push
push
sbb
push
jle
sahf
jo
or
mov
or
add
rcrb
jmp
lcall
insl
pop
or
or
nop
sub
cmp
stc
lret
pop
mov
imul
jne
pop
sub
jge
mov
fistl
xchg
leave
out
jnp
out
lods
pop
cmp
cmc
jp
sti
subb
sbb
call
fwait
dec
mov
mov
dec
and
mov
popf
jnp
outsl
inc
push
xor
mov
ds
insb
sub
inc
mov
andb
daa
cmp
mov
data16
inc
mov
fcoms
and
lock
adc
pop
lods
mov
dec
sbb
rorb
mov
frstor
mov
inc
sbb
and
sarb
mov
rolb
mov
jo
add
insb
add
lea
jb
arpl
dec
mov
sbb
push
mov
repnz
dec
mov
jle
fisubrl
shrl
mov
test
cltd
dec
mov
in
imul
inc
jne
cmpsb
jne
and
jl
dec
pop
pop
and
inc
xor
out
add
cltd
dec
rorl
mov
jg
leave
mov
inc
adc
cltd
mov
cwtl
fsubs
cltd
add
sub
sbb
popa
xchg
inc
inc
mov
jo
das
mov
sbb
jle
jmp
xchg
jmp
xchg
add
adc
xchg
cmp
xor
shll
sub
stos
insl
js
enter
sbb
out
and
arpl
aad
sbb
ficompl
fidivs
in
inc
hlt
test
test
or
imul
mov
movsl
imul
cli
aam
call
lahf
clc
xlat
cmpsl
mov
or
xchg
test
adc
stos
ficoms
testl
xor
xchg
getsec
sub
test
cmp
outsl
insb
std
or
xchg
pop
and
bnd
sahf
sub
and
ljmp
jb
popw
adcb
aas
cmp
leave
sarl
mov
inc
jp
sarl
call
lret
repz
pop
xchg
pop
cmc
inc
leave
fildl
fiadds
mov
inc
jmp
push
call
and
std
pop
dec
jbe
adcb
loop
jecxz
push
lret
nop
lods
and
push
sti
jp
in
pusha
xchg
jge
xchg
shl
orl
adc
xor
stc
fldenv
jno
adc
stc
lds
sbb
out
gs
test
jae
or
jp
mov
fcompl
mov
loope
dec
push
cmp
hlt
mov
mov
sbb
stos
cmp
xchg
add
es
xor
push
adc
xorb
and
or
cmp
push
ret
dec
pusha
jb
ficoms
add
mov
xlat
aas
mov
scas
add
ja
and
or
inc
xor
aas
ds
or
ret
clc
mov
lcall
xchg
popa
push
cld
cltd
cmp
push
aam
shll
pop
in
cmp
inc
popa
xor
imul
jmp
xor
pop
dec
push
and
sbb
xlat
out
jb
addr16
imul
dec
xor
mov
lds
pop
xlat
xchg
mov
shll
cmp
xor
mov
sahf
outsl
mov
movsl
mov
cmc
sti
mulb
push
dec
push
dec
scas
ret
lds
pop
addr16
add
and
cld
cmc
xlat
mov
push
test
enter
add
jns
in
or
movsb
jns
mov
pop
mov
insl
add
xchg
xchg
sarb
add
fwait
loopne
push
mov
xor
lds
scas
notb
cmc
filds
xchg
cmp
sub
push
lcall
cli
repnz
adc
xor
aad
mov
xchg
pop
je
stos
in
mov
xchg
ss
popaw
push
je
popf
js
xchg
ret
loop
fisubs
popa
js
push
popa
sbb
out
pop
jge
int3
inc
in
sub
out
loope
xor
or
xor
cld
insb
mov
dec
ret
mov
and
jle
and
ret
fdivs
push
pop
test
call
repnz
into
mov
in
lahf
mov
out
sbb
pushf
hlt
imulb
fimuls
lret
ficomps
gs
sarl
mov
cltd
mov
test
inc
push
shrb
das
aaa
aad
jg
jge
sbb
or
mov
in
push
test
jbe
stc
or
mov
cmp
xchg
ret
mov
push
imul
nop
jae
sti
cli
test
push
cmp
scas
into
jle
pop
push
fdivs
aaa
stos
aaa
push
mov
pop
mov
data16
shr
jno
add
rcll
xchg
push
add
ja
pop
dec
icebp
xor
mov
xchg
movsb
aaa
pop
push
jmp
lea
mov
jbe
incb
push
daa
mov
or
lods
test
jbe
xchg
repz
push
push
sbb
jmp
mov
push
cmp
inc
inc
dec
pop
fwait
cwtl
fs
cmp
jne
cmp
nop
rcrb
lcall
loop
add
inc
xor
addb
mov
mov
call
mov
xchg
rclb
sbb
pop
repz
lds
mov
sti
xor
push
pop
jbe
cmp
cli
aas
mov
xor
leave
and
lods
or
in
or
adc
adc
fisttpll
jmp
mov
cmp
mov
addl
inc
ljmp
sbbl
xor
lret
sarl
jno
outsb
fdivrs
add
bnd
js
adc
test
adc
ds
xchg
cmp
lock
cmpsb
outsl
lea
fdiv
imul
dec
push
lods
jp
aaa
int
and
lea
adc
pop
pusha
test
out
rcrl
leave
shrl
icebp
pop
xor
fs
aaa
sbb
int
inc
dec
les
loopne
cli
cmpsb
xchg
idivb
fnop
data16
xchg
enter
cmp
mov
insb
outsl
push
arpl
mov
gs
xchg
dec
enter
adc
lods
aad
shrl
in
lea
divb
pop
push
shl
sub
adc
pop
xchg
cmp
ja
rcll
in
mov
divl
sub
adc
or
fsubl
out
aaa
add
aad
jo
scas
stc
xlat
mov
pop
mov
std
xlat
dec
xchg
fcmovnbe
mov
gs
push
stc
mov
mov
pop
enter
mov
std
stos
movsb
in
push
prefetch
or
mov
rcrl
shll
sbb
adc
call
mov
loop
add
outsl
mov
xchg
or
adc
mov
mov
and
mov
and
or
lea
into
push
jno
insl
pop
lcall
out
add
cmc
popa
pop
incl
mov
ret
or
mov
push
mov
ss
ljmp
jmp
mov
loop
inc
adcb
jmp
push
lock
addr16
and
inc
call
mov
test
testl
mov
add
mov
cs
mov
jge
mov
push
pop
outsb
xchg
push
xor
xchg
mov
int
cs
xchg
in
clc
mull
dec
sub
push
mov
popf
out
pop
adc
out
test
jns
loop
mov
cmp
out
and
out
sub
cwtl
lock
fildl
mov
xlat
mov
cmc
pop
enter
sub
cltd
insb
pop
inc
pop
xchg
sbb
pop
jbe
incl
xchg
pushf
mov
aam
fs
ret
leave
mov
in
mov
mov
stc
fs
fsubl
out
xor
dec
adc
mov
cld
out
add
mov
lret
adc
mov
ljmp
xchg
rolb
fdivs
pop
and
aaa
mov
clc
outsb
sar
mov
rol
jno
fisttpll
int3
sub
xor
icebp
out
push
jg
fwait
xor
cld
aad
adc
cwtl
and
and
sub
icebp
mov
faddl
and
sti
cmp
sbb
mov
and
xchg
fstl
mov
dec
ds
ss
fisubrl
insb
push
sti
inc
add
out
xor
mov
aad
lahf
xchg
sub
pop
jnp
pop
jo
xlat
inc
mov
sbb
orl
or
mov
jb
push
adc
ljmp
sbb
scas
push
ljmp
adc
push
cmpsb
cmpsl
in
lcall
push
cmp
pop
cld
mov
incb
insl
test
dec
xchg
pop
inc
and
jae
jae
subl
mov
push
adc
inc
fisubs
or
push
bound
mov
adc
into
aam
cmp
mov
test
fstps
fdivp
lcall
mov
pop
rcl
push
sbb
mov
ret
inc
movsb
test
les
mov
jmp
movsl
sbb
pop
loope
xorl
mov
mov
mov
inc
cmpb
jb
ds
outsb
iret
repnz
sarb
cmp
jno
daa
fisttps
dec
icebp
je
or
int3
mov
pop
jb
mov
xchg
mov
adc
mov
movsb
jb
sti
in
pop
testl
or
aaa
mov
adc
test
popa
out
test
ljmp
pcmpeqb
sbb
out
mov
xor
lock
data16
lret
mov
adc
in
movl
inc
lods
es
push
sar
cs
loopne
inc
and
or
pop
andb
or
push
pop
shrb
orb
iret
cmp
pop
lock
cmp
divb
sbb
xchg
mov
xorl
loopne
push
pop
jge
mov
rcr
xchg
mov
ficompl
iret
add
out
cmp
mov
mov
je
loop
leave
or
cmp
sbb
ja
cltd
or
ja
out
xchg
rorb
mov
int
mov
xor
adc
add
in
pop
inc
sub
and
mov
sub
ja
lret
mov
lods
rorb
mov
cmpsl
daa
mov
sub
and
dec
shll
add
js
std
mov
mov
loope
or
outsb
push
mov
dec
ret
test
adc
scas
pop
insb
testl
sbb
push
push
xlat
cmp
add
in
ja
cmpsl
dec
bound
pop
hlt
add
.byte
xor
and
and
inc
push
push
repnz
push
ret
jb
xorb
in
rclb
call
mov
mov
decl
inc
popf
mov
fdivl
adc
xor
sub
aaa
enter
notb
pop
cmp
cli
jmp
je
dec
and
fwait
sbb
cltd
int3
mov
sbb
pop
cmpsl
lock
xor
pusha
adc
push
pop
or
or
cld
adc
adc
mov
inc
fnstcw
and
ss
mov
out
sbb
pop
sbbb
test
test
xchg
sub
jecxz
repnz
je
je
mov
pop
out
addr16
jle
pop
stos
cmp
cmp
subl
dec
xchg
jl
repz
fxch
and
pushf
adc
lahf
inc
aaa
jp
cmpsl
jmp
loopne
lret
daa
bound
and
mov
rcll
ljmp
out
out
outsl
mov
ret
mov
out
stos
mov
lds
push
fisubrl
stos
push
jnp
cs
mov
shlb
cmp
popa
inc
jo
push
lret
in
jne
mov
or
or
pop
xor
fld
or
in
out
or
ret
push
mov
and
or
lahf
es
push
jns
movsb
outsb
call
stc
xor
shrl
xchg
arpl
stos
imul
mov
divb
jmp
mov
fcompl
xor
testl
je
in
movsb
xchg
lret
pop
xor
sub
cs
sbb
pusha
daa
sti
pushf
aam
frstor
std
pop
mov
in
and
push
in
sub
outsl
pop
mov
push
ds
push
mov
push
rcll
inc
inc
rol
stos
or
cmp
jb
stos
push
and
clc
xchg
daa
fucomp
aas
pushf
pop
test
inc
insl
push
push
arpl
movsb
js
addr16
and
mov
xor
and
or
ljmp
int
pop
jmp
fs
add
mov
test
out
daa
cs
dec
push
dec
sti
jp
aaa
push
lds
imul
mov
xchg
and
daa
ffreep
int
push
dec
or
pusha
punpckhwd
sbb
shlb
push
push
and
cmpsb
cmp
sahf
int3
pop
dec
pop
not
inc
pop
ja
icebp
xor
adc
inc
mov
es
mov
pop
inc
add
orb
pushl
and
iret
xlat
push
or
mov
mov
inc
jo
mov
int3
cld
xchg
dec
addl
or
xchg
mov
sbb
jbe
add
mov
ficoms
ficoms
jl
repz
inc
sarl
mov
pop
out
or
push
jns
jg
xlat
pop
je
mov
lods
lock
sahf
stos
enter
rclb
cmp
inc
faddp
mov
sti
push
push
loop
mov
sbb
xchg
pushf
pop
mov
push
sahf
stc
aas
dec
xor
dec
inc
lods
int
loop
jb
adc
xchg
adc
push
fistl
fmull
mov
xor
inc
rolb
and
push
icebp
fisttpl
sbb
into
jmp
inc
mov
mov
movsb
sub
adc
sti
lods
call
scas
aad
movsb
sub
out
dec
inc
movb
sbb
outsb
sub
out
imul
inc
adc
into
cmp
sub
lods
add
fcoml
dec
sub
lret
adc
outsb
sub
xchg
stos
xchg
jns
mov
mov
pop
jecxz
fisttps
add
push
fstps
and
out
inc
adc
imul
mov
cmpsl
push
push
sbb
dec
out
mov
shll
mov
imul
ljmp
dec
in
mov
fwait
ljmp
xchg
ds
add
jno
pop
xchg
jg
mov
test
cmp
lods
xorb
inc
inc
cmp
mov
ljmp
imul
shlb
enter
popf
and
lds
xor
adc
pop
negl
mov
ja
xlat
mov
jae
add
je
mov
or
repnz
movsb
or
cli
mov
jbe
pop
push
lret
adc
mov
xor
shlb
push
outsl
faddl
sbbb
sbb
push
in
popf
shlb
sahf
loopne
fxtract
int
daa
pop
add
int3
pop
les
sub
stos
movsb
sti
xchg
lcall
sub
jbe
jbe
leave
fs
lcall
gs
mov
lea
mov
push
out
js
cmp
loope
jbe
adc
and
shrl
in
nop
mov
pusha
addr16
inc
cwtl
mov
in
cmovl
out
adc
sbb
faddl
push
idivl
dec
and
and
and
cmp
mov
data16
imul
xor
push
fiadds
or
fistps
rolb
fbstp
jns
outsb
or
push
in
xchg
xor
mov
cmpsl
mov
subb
in
leave
fdivs
adc
aam
mov
jmp
dec
sub
jp
ss
sub
push
inc
hlt
pop
push
adc
popf
xchg
inc
adc
shll
ss
ja
movsb
ret
in
rolb
xor
inc
jmp
aam
pop
and
rcrl
mov
jno
xor
pop
mov
je
int3
sbb
dec
sub
adc
mov
loopne
sbb
cmp
adcl
xor
mov
push
outsl
xor
sub
xchg
out
jnp
xlat
lock
jmp
sbb
js
cld
push
mov
iret
pushf
jle
push
mov
sub
mov
call
cwtl
int
js
jl
cmp
jp
push
pop
lret
mov
aam
pop
ficoml
push
lahf
aad
push
cmp
cli
and
jge
jl
popf
ret
and
push
cmpsb
xchg
out
and
out
rcrl
test
fisttps
xor
add
dec
test
fsts
xor
jge
jno
lea
dec
and
test
sbb
mov
sbb
into
notl
movsl
fistps
and
test
push
stos
lods
scas
mov
hlt
loop
addl
xorl
push
mov
jl
test
insb
popa
test
orb
aam
cmp
orb
mov
pop
addl
lods
out
sub
test
jne
xchg
mov
push
out
mov
psllw
mov
xor
pushf
ljmp
adc
fldl
mov
cmp
or
pop
adc
iret
cwtl
loopne
jmp
fbld
fmull
sbb
dec
nop
lret
addl
mov
fstps
cmc
mov
adc
pop
mov
or
dec
pop
mov
out
push
and
sahf
mov
adc
dec
rorl
es
pop
jb
pop
dec
xchg
int3
inc
hlt
stos
sti
or
insb
push
push
inc
pop
xor
mov
cmpsl
stos
pop
push
or
and
push
iret
or
sub
pop
mov
cld
sbb
aam
push
cld
arpl
jmp
xchg
test
sbb
lret
cmpl
stc
xchg
mov
jmp
dec
inc
and
add
es
cmp
gs
in
stc
pusha
mov
push
arpl
test
pop
or
bound
fistl
xchg
fwait
cmp
xor
pop
xchg
push
dec
inc
fisubl
mov
bound
cmp
jbe
call
sarb
enter
ja
icebp
sbb
mov
repz
xlat
aam
test
test
xchg
and
lods
outsb
sti
jbe
movsb
add
inc
sub
fsts
jns
cmp
mov
ret
sbb
sbb
push
jo
jle
scas
cmc
jg
fwait
inc
pop
xor
dec
dec
pop
mov
stos
push
fsub
insl
jmp
mov
les
xor
mov
xor
jmp
ja
inc
pop
repnz
jb
push
popa
data16
test
jl
leave
test
test
cli
mov
pop
pop
jg
or
pop
pop
dec
data16
sub
dec
shl
cmp
lcall
inc
je
pop
push
in
or
fwait
add
jne
test
jbe
mov
int
mov
pushf
out
mov
gs
fidivs
jmp
jnp
popf
sub
mov
add
lea
stc
jg
xor
fimull
and
das
lods
les
test
or
sbb
int3
inc
xchg
cmp
or
daa
addr16
mov
jno
jbe
push
fstl
and
inc
pop
mov
ljmp
mov
xor
mov
pusha
incl
jl
es
sbbl
fstps
inc
mov
out
std
ljmp
push
into
call
pop
adc
mov
das
dec
es
imul
xor
popa
push
addl
js
movsb
pop
mov
fwait
lock
add
cmp
mov
sub
outsb
jne
leave
push
dec
sbb
mov
pop
gs
adc
decb
inc
es
andl
mov
ja
hlt
mov
test
xor
dec
js
in
sub
inc
out
insl
lahf
adcb
outsb
loope
test
sbb
popa
pushf
or
in
scas
jl
add
pop
jnp
out
dec
inc
popa
ss
divb
in
adcl
fildll
in
test
xchg
push
jp
cld
xor
in
adc
push
xchg
sub
push
jmp
mov
movb
test
lea
dec
lret
adc
popa
out
xchg
jnp
push
xchg
pop
xor
clc
icebp
cltd
cld
repnz
aad
mov
push
inc
mov
insl
mov
xor
shrb
jmp
add
ljmp
mov
inc
inc
or
push
icebp
repz
push
sub
fcoml
pop
sub
pop
in
out
mov
mov
leave
fmulp
lahf
xor
mov
pop
scas
sbb
std
add
pop
lret
mov
mov
fbld
fsub
stos
push
loope
ds
jecxz
inc
pop
mov
in
andl
push
outsl
ljmp
lds
mov
sub
in
mov
mov
mov
leave
subl
pop
rorl
jge
pusha
in
adc
aam
cmp
sbb
movsb
or
mov
cmp
lods
xchg
mov
je
nop
lahf
into
mov
mov
rclb
lea
imul
mov
push
lds
cli
stos
xchg
lea
inc
lahf
pop
outsl
inc
imul
cmp
or
jne
mov
pop
jl
and
push
iret
loop
inc
push
sub
out
pusha
sbb
scas
sbb
popf
mov
mov
mov
mov
dec
out
lods
lods
cli
rcr
sahf
xor
jns
out
iret
xor
aam
loop
pop
xor
mov
jb
inc
testl
lahf
lret
out
arpl
outsb
dec
mov
cltd
addr16
sub
clc
inc
fisttpl
xor
sub
inc
add
xchg
hlt
ret
pop
xor
lret
sbb
fistps
pop
jns
rcr
push
push
and
cwtl
cmpsb
out
dec
movsb
test
cmp
mov
test
fsubl
leave
sti
cs
outsl
push
cmpsb
mov
repz
mov
es
pop
out
leave
out
aaa
mov
mov
dec
inc
or
adc
add
mov
out
dec
adc
mov
push
mov
bound
stos
sbb
or
std
xor
lock
add
int3
xchg
ljmp
mov
popa
leave
push
push
jns
inc
xor
sahf
adc
sub
pop
pushf
adc
sub
add
lods
outsl
sbb
mov
loop
push
hlt
jae
xchg
jo
iret
sbb
lret
sbb
lock
dec
cmc
add
fs
cwtl
mov
and
jb
sub
and
cmpsb
test
mov
stos
jle
test
pushf
or
outsb
or
pop
inc
cmpsb
xchg
adc
fs
xchg
cmovp
out
loope
inc
pop
jnp
imul
and
mov
jbe
adc
dec
xchg
sub
and
lea
dec
js
lret
jl
xchg
cmc
xchg
cmp
mov
inc
cmp
mov
jecxz
jnp
and
push
lahf
adc
out
or
push
gs
data16
xchg
dec
sub
ljmp
nop
sub
mov
jbe
in
loopne
test
xor
and
shlb
pop
xchg
shll
xor
dec
dec
dec
adc
cmp
fcompl
inc
ds
movsb
mov
push
sarb
inc
or
cmpsl
popl
pop
push
pop
sbb
lods
xor
ds
sbb
sbb
fstpl
xchg
cmp
je
push
pushf
mov
std
roll
shll
mov
xor
outsl
imul
adc
cmpsb
arpl
cli
adc
icebp
test
inc
sbb
out
imul
mov
notl
repz
push
daa
jne
popa
sbb
into
into
rclb
pop
sub
adcl
outsb
push
adc
addb
movsl
jl
imul
jo
push
out
fdiv
cmpsl
or
lods
sbb
mov
and
or
pushf
pop
mov
and
cmp
jl
or
cmpsl
pop
jnp
jno
adc
in
mov
jno
push
fisubs
xchg
xor
cmc
sub
mov
and
je
mov
jl
add
add
add
add
push
cli
into
xor
pop
dec
icebp
xchg
fwait
push
pusha
xchg
scas
outsl
sub
popa
ljmp
sub
movsb
xor
das
push
sbb
push
hlt
add
inc
push
cmp
out
mov
and
pop
out
pop
cmc
in
ds
and
ffreep
sti
pop
rcll
and
push
push
lods
stos
pop
pop
je
mov
ljmp
out
stos
aam
cwtl
stos
add
cmpsb
cld
and
xor
les
imul
sarb
nop
xor
inc
adc
enter
jle
jle
push
in
int
xchg
and
pop
pop
xor
fdivrl
aaa
or
sbbb
shr
and
mov
xor
and
hlt
out
imull
es
pop
popa
lret
dec
andb
in
loop
fsubrl
adc
or
adc
ret
sarl
add
mov
push
xor
sti
data16
pop
nop
int
adc
daa
jle
sub
sbb
fs
jbe
mov
int
push
mov
jbe
jle
mov
or
and
mov
ret
add
xor
push
leave
mov
test
nop
and
rorl
lods
jg
and
daa
adc
lret
bound
adc
daa
add
shll
add
and
push
iret
pop
rolb
add
push
inc
mov
aas
mov
mov
icebp
mov
sbb
ret
jb
push
ficoml
sarl
testl
push
jp
fadds
pop
jge
popf
jae
mov
xchg
adc
test
mov
dec
insb
push
daa
in
sub
and
loop
jmp
daa
pop
mov
xchg
push
mov
idivb
gs
add
add
add
pop
add
add
addb
add
push
add
add
add
add
add
orb
add
clc
add
sbbb
add
adc
add
sub
add
inc
add
addb
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
addl
add
add
addb
add
add
add
add
add
add
add
add
add
addb
add
dec
add
addb
add
add
js
add
nop
add
addb
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
test
add
fadds
add
add
add
add
add
add
add
add
add
lock
addb
add
or
add
and
add
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
and
add
add
add
add
add
add
xor
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
mov
and
add
add
add
add
add
add
add
add
add
add
add
test
add
in
add
add
add
mov
push
add
in
add
add
add
test
add
mov
add
in
add
add
add
or
add
push
add
add
add
add
add
add
in
add
add
add
add
sub
add
in
add
add
add
or
add
sub
add
in
add
add
add
xor
add
or
add
in
add
add
add
cmp
add
and
add
in
add
add
add
pusha
fiaddl
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
fiaddl
add
add
in
add
add
add
sbb
add
mov
add
add
add
add
fldl
add
add
add
add
add
add
add
fldl
add
add
add
add
add
add
add
fldl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
dec
push
inc
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
decl
add
and
add
addb
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
mov
add
add
add
dec
add
add
add
add
js
add
decl
add
add
add
add
decl
add
add
add
sbb
add
decl
add
add
or
add
add
decl
add
add
push
add
addb
add
decl
add
add
add
decl
add
add
add
add
add
decl
add
add
add
add
decl
add
add
add
pop
add
add
decl
add
add
adc
add
decl
add
add
incl
add
add
decl
add
add
add
add
add
decl
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
add
lods
adc
add
add
add
add
add
add
add
sbb
add
js
add
inc
adc
add
add
add
incl
add
add
add
add
add
add
add
add
pushl
add
enter
add
add
add
add
add
add
nop
add
add
add
push
add
add
add
incl
add
add
add
enter
add
or
add
add
pushl
add
push
sbb
add
add
add
add
add
add
test
add
inc
adc
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
and
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
je
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
sub
add
add
add
add
add
add
add
fadds
add
inc
adc
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
pushl
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
add
add
pop
add
add
add
jmp
and
add
add
add
add
incl
add
add
push
add
add
add
incl
add
add
add
add
incl
add
add
add
test
add
jmp
and
add
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
mov
add
add
add
add
jmp
and
add
add
add
add
incl
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
incl
add
add
add
add
jmp
and
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
add
jmp
and
add
add
add
add
add
add
add
add
aam
add
incl
add
add
add
adc
add
jmp
and
add
add
add
add
add
add
add
add
lock
add
incl
add
add
add
and
add
jmp
and
add
add
add
add
add
add
mov
add
add
add
add
incl
add
add
add
xor
add
jmp
and
add
add
add
add
add
add
faddl
add
add
add
xor
add
incl
add
add
add
inc
add
add
jmp
add
cmp
add
ljmp
add
add
add
lock
add
add
add
decl
add
decl
add
add
pushl
add
add
add
rolb
add
call
add
sbb
add
mov
xchg
iret
adc
jo
jmp
ja
jl
rcll
mov
ja
jmp
jmp
fidivrs
adc
ja
jmp
pushl
add
add
add
add
add
add
add
inc
add
add
incl
add
add
add
add
add
add
add
inc
add
add
lcall
mov
cmc
inc
mov
loop
xchg
push
pop
in
add
add
call
test
rcll
mov
rcll
add
add
jmp
xchg
iret
adc
jo
enter
call
test
rcll
mov
rcll
sub
add
push
cli
fs
mov
jnp
cmp
sbbl
rcr
push
sbb
iret
adc
add
add
test
add
shrb
or
iret
adc
add
add
jmp
xchg
iret
adc
jo
call
jmp
iret
adc
jo
dec
add
add
pushl
mov
adc
rcll
mov
add
lcall
shrb
cmp
adc
add
add
hlt
add
add
add
add
incl
add
add
add
add
jmp
add
add
add
ljmp
add
add
add
call
add
add
incl
add
add
add
add
add
dec
add
add
add
add
add
add
outsl
insb
xor
je
bound
push
mov
add
add
jo
add
mov
decl
add
add
incl
cmp
add
add
add
clc
add
add
add
dec
add
add
pushl
add
add
add
call
add
add
incl
add
rolb
add
push
add
jmp
add
add
dec
add
add
add
rolb
add
add
add
add
add
add
add
add
add
push
add
call
add
pusha
add
add
add
add
lods
add
add
call
faddl
add
in
push
add
mov
pushl
add
ljmp
add
call
lcall
incl
add
add
lcall
call
add
call
add
jl
add
decl
jl
add
adc
add
test
add
jo
add
in
add
add
mov
add
push
push
add
sbb
add
rolb
add
test
add
push
add
pushl
decl
add
add
add
incl
dec
outsl
jae
push
push
push
add
add
incl
lock
popa
insl
gs
decl
add
push
outsl
jne
pop
dec
popa
insl
add
add
decl
add
insb
imul
push
decl
mov
pop
inc
imul
add
add
decl
add
sahf
inc
jne
insb
dec
popa
insl
gs
decl
add
outsl
jne
pop
push
popa
je
add
add
incl
xor
popa
je
add
add
decl
add
gs
arpl
gs
decl
add
inc
outsl
jne
pop
dec
outsb
je
jb
arpl
gs
add
add
incl
cmp
decl
add
inc
js
je
outsl
fs
add
decl
add
push
arpl
jo
dec
popa
insl
gs
push
decl
add
push
outsl
jne
pop
push
arpl
jo
dec
popa
insl
gs
push
add
add
decl
add
imul
dec
popa
insl
gs
push
call
add
add
jne
pop
push
arpl
jo
inc
jne
insb
dec
popa
insl
gs
push
add
add
decl
cmp
dec
dec
inc
jb
jne
outsb
je
xor
add
add
decl
cmp
addr16
outsb
je
push
push
enter
incl
xlat
jp
je
insl
incl
outsb
fs
push
push
decl
add
xchg
outsl
jne
pop
push
popa
insb
jne
push
push
push
enter
incl
outsl
jne
je
push
push
decl
add
outsl
jne
pop
inc
outsl
jne
je
push
push
enter
incl
add
insb
outsb
addr16
push
push
enter
decl
add
pop
dec
gs
outsb
jne
decl
add
pop
inc
outsb
jne
sub
add
call
cmp
dec
dec
popa
insl
gs
jb
jne
outsb
je
push
push
incl
add
jp
ja
je
push
add
cmp
add
push
add
jae
jae
push
decl
add
pop
inc
js
jae
jae
push
add
add
incl
popa
insl
gs
push
push
decl
add
jne
pop
jo
outsb
popa
insl
gs
nop
add
add
cmp
dec
push
outsb
outsb
popa
insl
gs
jb
jne
outsb
je
add
add
incl
add
aas
push
outsb
outsb
popa
insl
gs
add
add
decl
add
ja
jae
addr16
push
push
add
add
and
add
or
push
inc
jb
jne
outsb
je
push
push
push
mov
add
pop
inc
jb
jne
outsb
je
push
push
push
add
add
incl
add
jae
outsl
outsb
push
decl
add
outsl
jne
pop
push
gs
imul
add
decl
and
inc
jne
insb
fs
gs
imul
push
add
nop
outsl
jne
pop
inc
jne
insb
fs
push
push
add
add
incl
add
outsl
jne
push
decl
add
pop
push
imul
add
add
adc
add
or
clc
mov
gs
je
dec
bound
arpl
incl
add
dec
push
jb
addr16
inc
push
push
incl
add
lea
imul
add
add
incl
test
inc
arpl
call
add
add
inc
jb
jae
push
push
add
add
decl
add
inc
gs
bound
arpl
push
decl
add
push
add
add
call
add
arpl
outsb
arpl
push
arpl
incl
add
cs
bound
arpl
add
add
incl
insb
gs
push
push
incl
stos
mov
add
add
decl
outsl
outsb
outsb
arpl
push
arpl
push
hlt
add
add
add
cmp
dec
push
gs
push
je
gs
insl
push
hlt
add
add
bound
hlt
add
add
incl
add
jne
outsb
push
push
hlt
add
add
add
add
je
outsb
fs
push
je
gs
insl
push
push
push
incl
add
mov
push
push
hlt
add
add
add
or
ds
inc
je
outsb
fs
dec
imul
pushl
add
add
cli
mov
dec
push
hlt
add
add
incl
nopl
popa
fs
decl
add
inc
push
je
jb
push
push
incl
in
stos
push
gs
hlt
add
add
add
rclb
popa
fs
imul
clc
add
add
add
push
push
gs
fs
insb
insb
push
hlt
add
add
cs
push
jb
je
push
push
push
hlt
add
add
add
add
add
push
jb
je
dec
imul
add
add
decl
add
mov
gs
insb
popa
outsb
imul
jae
incl
imul
hlt
add
add
testl
hlt
add
add
add
add
add
int3
push
imul
imul
movsb
add
add
insb
outsl
jae
push
push
push
add
add
sub
add
add
je
dec
outsb
push
push
push
decl
add
pop
jo
je
add
add
in
add
push
and
popa
push
je
dec
jne
push
push
incl
je
jo
je
add
add
incl
and
push
je
inc
jb
push
push
add
add
call
add
xchg
inc
js
jb
arpl
jae
jne
arpl
add
add
decl
add
je
push
gs
jne
arpl
push
pop
add
add
call
cmp
push
je
outsb
fs
jb
push
je
gs
insl
push
jns
gs
mov
jmp
cmp
pop
pop
dec
dec
inc
dec
pop
pop
pop
dec
dec
inc
dec
pop
imul
je
xor
xor
xor
push
push
and
add
sub
add
and
adc
inc
dec
pop
pop
pop
dec
dec
inc
dec
pop
imul
jo
pop
xor
cmp
pop
xor
xor
push
push
test
add
decl
cmp
addr16
gs
push
je
gs
insl
push
push
call
decl
cmp
dec
dec
outsl
jae
pop
inc
insb
popa
jae
push
dec
add
add
bound
inc
jb
jne
outsb
je
pop
inc
insb
popa
jae
mov
add
lcall
cmp
dec
push
push
dec
dec
popa
insl
gs
jb
jne
outsb
je
pop
inc
insb
popa
jae
adc
add
lcall
cmp
dec
push
push
dec
push
outsb
outsb
popa
insl
gs
jb
jne
outsb
je
pop
inc
insb
popa
jae
push
push
sbb
outsl
ja
and
jb
jo
and
jae
and
push
gs
xor
sub
push
imul
push
arpl
jo
and
jae
and
jo
imul
and
je
jb
popa
arpl
and
jne
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
sub
dec
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
push
push
sub
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
outsb
je
jb
popa
arpl
sbb
push
imul
push
arpl
jo
and
jae
and
push
arpl
inc
jb
jne
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
push
and
dec
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
add
outsb
popa
insl
gs
addr16
outsb
je
and
insb
insb
arpl
outsb
and
push
arpl
push
sbb
or
add
sbbb
or
add
sbbb
or
add
sbbb
add
add
sbbb
or
sbbb
or
or
or
sbb
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
add
add
jg
add
add
add
jg
add
add
add
inc
push
add
sbbb
or
or
or
sbb
add
add
add
jg
add
add
add
jg
add
add
add
add
add
add
add
rcl
push
push
adc
movsb
add
add
add
add
push
push
sbb
add
add
add
pushl
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
add
add
and
add
or
add
and
add
sbb
sbb
and
dec
add
inc
add
add
add
or
add
push
add
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
jl
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
jl
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
add
add
add
add
addb
add
xor
inc
add
add
add
add
add
add
cmp
incl
add
add
add
add
add
addb
add
xor
pop
add
adc
add
add
add
add
mov
add
and
add
xor
add
and
pop
add
add
addb
add
cmp
dec
add
inc
pop
add
add
add
add
add
add
add
add
add
or
sbb
sbb
cmp
dec
add
inc
or
add
add
add
add
dec
add
add
add
add
or
sbb
sbb
inc
add
inc
or
add
add
jo
add
sub
add
or
add
and
or
sbb
sbb
inc
add
inc
or
add
add
add
add
pop
add
add
add
add
or
sbb
sbb
dec
add
inc
or
add
add
js
add
mov
add
or
add
and
or
sbb
sbb
dec
add
inc
or
add
add
add
add
add
or
addb
add
push
add
add
add
add
add
add
cmp
incl
add
add
push
add
add
addb
add
push
add
add
add
call
add
add
decl
add
sub
add
add
add
or
or
xor
add
or
add
push
add
add
add
add
ltr
add
addb
add
pop
add
add
add
add
incl
add
add
add
add
adc
sbb
sbb
pop
add
add
add
call
add
add
add
add
decl
add
orb
add
add
or
or
xor
add
or
or
xor
add
or
add
push
add
add
add
add
adc
sbb
sbb
pusha
add
add
add
add
add
add
cmpb
add
add
and
adc
sbb
sbb
add
add
add
add
add
add
andb
add
add
add
add
addb
add
push
add
add
add
add
add
cmpb
add
add
or
or
add
add
and
adc
sbb
sbb
insb
add
inc
adc
add
add
cwtl
add
add
add
or
add
and
adc
addb
add
jo
push
add
inc
adc
add
push
add
or
add
and
push
add
add
addb
add
je
push
add
inc
push
add
add
add
push
add
or
add
and
pop
add
add
addb
add
js
inc
add
add
add
add
add
add
orb
add
add
and
sbb
sbb
sbb
jl
inc
add
add
add
add
add
add
orb
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
roll
add
rolb
add
roll
add
aam
add
aad
add
out
add
add
add
add
add
add
pop
add
xlat
pop
add
adc
add
cmp
add
push
add
add
add
add
add
add
add
add
add
adc
add
dec
add
add
add
add
rolb
add
adc
add
add
pusha
add
add
add
add
add
add
push
add
rolb
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sbb
sub
push
add
inc
add
add
add
inc
add
add
add
add
add
sbb
sbb
xor
push
add
inc
add
add
add
pop
add
add
add
add
add
add
add
addb
add
xor
xor
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
sbb
sbb
sbb
pop
add
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
add
add
xor
add
push
add
add
add
int3
add
add
add
add
add
addb
add
sbb
pop
add
inc
add
add
add
or
or
add
add
sub
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
add
add
addb
add
sub
pop
add
inc
add
add
add
or
or
add
add
adc
add
test
add
or
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
adc
add
add
add
xor
add
push
add
add
add
test
add
pushf
add
add
add
add
add
addb
add
sbb
pop
add
inc
add
add
add
add
add
add
add
sub
add
mov
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
sub
dec
add
inc
add
add
add
and
add
sub
add
or
add
add
add
add
add
add
add
cld
lcall
add
add
add
add
add
add
add
xor
add
push
add
add
add
int3
add
add
add
sbb
sbb
sbb
dec
add
inc
add
add
add
sbb
add
call
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
sbb
add
clc
add
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
adc
add
sub
add
and
add
sbb
sbb
sub
dec
add
inc
add
add
add
adc
add
push
add
add
xor
add
sbb
sbb
sub
pop
add
inc
add
add
add
add
add
add
add
add
add
mov
add
and
add
addb
add
xor
dec
add
inc
add
add
add
add
add
add
push
add
add
addb
add
xor
dec
add
inc
push
add
add
add
add
add
add
add
pop
add
add
addb
add
cmp
inc
add
add
add
add
add
add
orb
add
sub
or
sbb
sbb
cmp
pop
add
adc
add
add
add
add
add
add
orb
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
orb
add
add
add
and
or
sbb
sbb
inc
add
add
add
add
add
add
xorb
add
add
add
add
add
add
addb
add
dec
add
or
add
add
add
add
sbb
sbb
dec
add
or
add
add
add
daa
add
out
std
call
daa
add
adc
add
adc
add
adc
daa
add
pop
daa
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
call
add
add
add
pusha
add
add
lods
add
add
aam
add
in
add
add
sub
add
inc
push
add
add
add
and
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pushf
add
add
add
adc
add
push
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
addb
add
add
xor
add
add
add
inc
add
add
push
add
jl
add
mov
add
add
add
sub
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
jns
add
jns
add
insb
or
ss
or
add
jae
add
adc
sub
add
je
add
pop
adc
inc
or
push
jne
add
pop
add
sbb
pop
je
add
jp
sbb
data16
add
sbb
jl
add
add
daa
add
add
cmp
outsl
and
jbe
and
popa
ja
add
js
add
jg
add
jl
add
je
add
jg
popf
ds
add
dec
push
add
push
sbb
test
add
arpl
add
inc
xor
mov
add
dec
and
scas
pop
sub
mov
and
add
jae
add
gs
add
xor
mov
pop
sbb
add
imul
enter
int3
jl
add
jge
add
dec
inc
add
dec
dec
add
push
push
add
pop
pop
add
pop
dec
add
addr16
add
insb
inc
add
jb
add
jp
add
jo
add
push
add
js
add
outsb
inc
add
jae
add
jge
add
orb
adc
pop
add
test
add
and
adc
popf
xor
daa
mov
add
xchg
and
ss
sub
cmp
add
cmpsb
cmp
xor
xchg
add
sbb
jae
and
dec
test
add
cmp
add
mov
add
mov
add
mov
add
push
add
mov
ja
pop
mov
pusha
lea
push
pushf
pop
add
inc
add
inc
add
dec
add
inc
add
add
push
add
pop
add
enter
andb
popf
cmp
scas
subl
add
xchg
xor
add
xorb
aam
aaa
add
xchg
cmp
ficoml
aas
add
scas
inc
add
inc
add
dec
add
xchg
jnp
andl
jl
fcompl
inc
add
scas
dec
add
mov
add
movsl
dec
add
scas
push
add
lods
push
add
mov
push
add
xchg
mov
lea
roll
add
lea
int
jge
xlat
cltd
ja
mov
pop
add
enter
pop
nop
add
xchg
add
addr16
add
jge
add
pop
mov
add
imul
add
jb
add
test
dec
jo
add
lods
add
mov
add
jp
add
jnp
add
orl
add
xchg
add
stos
add
mov
push
xchg
mov
jp
movsb
add
mov
add
or
or
test
add
mov
add
mov
add
xchg
loop
sbb
repz
lods
testl
and
sti
add
mov
add
mov
testb
mov
fadds
gs
add
leave
incb
cmp
incl
inc
incl
push
testb
pop
lret
incl
inc
fdivr
add
add
incl
inc
loop
add
xchg
lea
cltd
lods
addb
mov
add
cltd
xchg
xchg
mov
leave
cltd
mov
fcomps
xchg
add
mov
lcall
mov
stos
add
shrl
mov
std
add
fdivr
add
add
lret
add
inc
inc
inc
inc
inc
inc
dec
push
mov
add
in
and
lock
stc
cli
stc
div
mov
mov
and
test
dec
push
push
test
in
into
mov
add
cs
push
push
cmp
cmp
xor
xor
dec
mov
call
add
add
add
add
cs
push
cmp
xor
daa
es
fstp
fcmovnu
fucomi
sti
mov
add
add
add
add
cmp
cmp
xor
xor
daa
daa
es
and
fucom
fucom
fcmovnu
fbstp
add
and
ss
sub
sub
sub
and
fucom
loope
loope
loopne
jecxz
iret
mov
add
add
ss
cmp
push
lret
fucom
loop
loop
loope
loopne
out
int3
add
add
das
cmp
cmp
ds
add
loop
loop
loop
loope
loope
fcmovnu
rol
add
and
cmp
mov
add
aam
aam
loop
loop
loopne
rcl
mov
cmp
lea
test
add
push
js
xlat
ljmp
enter
add
mov
nop
outsb
add
add
add
out
mov
out
cwtl
dec
add
pushf
popf
popf
mov
pop
add
ljmp
out
inc
add
lea
mov
pop
pop
pop
pop
insb
ljmp
out
inc
add
mov
mov
fs
mov
loop
in
pop
jnp
inc
add
lea
lahf
jo
imul
pushf
aad
loop
loope
mov
add
popf
pushf
mov
imul
mov
rcl
rcl
mov
inc
add
popf
mov
jb
je
je
jg
movsb
mov
xchg
push
push
or
jns
inc
add
inc
mov
imul
je
sahf
mov
lea
jns
inc
add
cmp
imul
addl
mov
adc
add
sbb
push
add
cmp
mov
je
test
mov
lea
add
or
jns
add
add
inc
movsb
scas
xchg
imul
xorl
movsb
mov
mov
or
sbb
add
add
cmp
mov
jae
jbe
addl
xchg
xchg
sbb
sbb
add
bound
jae
jbe
subb
pop
pop
insl
popl
aaa
or
and
add
add
add
sbb
imul
scas
scas
xchg
arpl
add
mov
xor
daa
pcmpgtd
jae
push
xchg
jo
pop
pop
pop
add
xchg
adc
arpl
fs
pop
pop
add
mov
add
add
lods
adc
arpl
pop
pop
pop
pop
add
add
add
adc
pop
pop
pop
pop
pop
pop
add
add
cmc
sub
or
add
add
and
add
repz
pop
cmp
pop
test
add
jmp
add
add
aas
incb
add
clc
add
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
pop
clc
add
aas
cld
add
jg
add
incl
pop
ljmp
add
add
add
add
add
add
and
add
add
sbb
adc
sbb
pop
and
sub
xor
das
das
xor
xor
das
das
das
sub
sub
and
and
pop
pop
pop
and
dec
mov
dec
addl
add
pop
add
add
sub
sub
dec
daa
and
js
daa
jns
xor
xor
xchg
ds
pushf
inc
aas
cld
sahf
inc
inc
lcall
inc
inc
clc
mov
aas
in
cmpb
push
xor
sbb
aam
add
rolb
pop
or
sbb
add
add
add
add
and
ljmp
xorl
lcall
fdivrl
stos
jmp
shrl
fdivs
xchg
call
mov
jmp
jmp
popf
fdivr
add
add
add
add
adc
add
add
add
add
push
add
cmp
pushl
mov
outsl
inc
xchg
jp
mov
insl
inc
pushl
jb
mov
mov
jp
movsb
incl
jnp
jmp
cld
pushl
mov
call
test
incl
inc
jns
add
add
add
or
add
add
inc
sub
inc
jge
mov
imul
pushl
sub
mov
sub
mov
sub
scas
pop
sub
mov
xor
mov
lcall
jb
jmp
lods
idiv
xor
jmp
mov
jmp
call
jbe
incl
cmp
add
add
add
add
add
add
cwtl
cmp
test
insl
inc
mov
push
sub
pushl
and
mov
sbb
scas
push
sbb
scas
push
pop
ljmp
sbb
cmp
lcall
ljmp
mov
ljmp
mov
pushl
incl
pop
lahf
cmc
add
inc
xchg
push
push
push
add
add
add
add
inc
and
mov
cs
mov
gs
mov
bound
pushl
pop
push
pushl
sbb
mov
sbb
stos
push
adc
decl
jg
adc
pushl
ljmp
ret
ljmp
mov
pushl
mov
jmp
out
add
in
add
arpl
add
sbb
add
add
add
add
add
add
inc
push
pushl
imul
mov
addr16
mov
gs
mov
arpl
mov
pop
sbb
pushl
je
decl
std
cmp
pushl
lret
xor
pushl
ljmp
ljmp
mov
decl
xchg
xlat
incl
inc
jns
add
add
add
or
add
add
inc
push
pushl
gs
mov
imul
inc
insl
and
inc
outsb
es
outsb
and
inc
imul
push
or
add
cld
incl
pushl
sar
pushl
iret
pushl
int3
pushl
leave
pushl
ljmp
ret
sub
incl
jg
incl
add
adc
add
add
dec
pop
mov
outsl
sub
ret
inc
jb
inc
je
inc
jne
inc
jbe
dec
ja
dec
ja
inc
ja
dec
jne
decl
js
incl
xchg
cmp
cmp
cmp
cmp
cmp
pushl
sar
pushl
lret
xor
ljmp
mov
jmp
xchg
loop
push
push
xchg
lods
adc
adc
scas
inc
sbb
scas
inc
sbb
inc
outsl
es
jae
dec
ja
dec
jp
dec
jge
dec
jle
dec
jg
dec
xorb
into
xorb
rolb
sub
push
js
incl
js
incl
orl
lcall
scas
hlt
ljmp
fdivr
cmp
pushl
sar
pushl
mov
ljmp
xchg
out
add
pushl
xor
and
mov
sbb
mov
push
inc
outsb
daa
dec
jp
dec
jnp
dec
jg
call
xorl
xchg
call
mov
call
mov
call
mov
call
mov
fimull
and
add
incl
js
incl
js
incl
jg
incl
xorb
jl
jmp
mov
aas
cmp
cmp
incl
pushl
mov
test
jge,pn
call
mov
mov
xor
and
pop
and
leave
jns
dec
jg
call
test
roll
cmp
xlat
cmp
fsts
cmp
fistl
inc
pushl
and
add
incl
jp
incl
js
incl
js
incl
js
incl
test
and
ds
cmp
decl
call
idiv
push
imul
nop
mov
pushl
aas
inc
fsubrs
dec
sbb
into
xorb
rolb
cmp
fsts
aas
ficoms
inc
jmp
pushf
inc
jmp
popf
inc
jmp
inc
call
lcall
add
orl
add
jp
jmp
sbb
push
mov
incl
incl
cmp
decl
call
idiv
or
decl
das
incl
mov
inc
in
cmp
cmp
leave
jne
call
xchg
call
lea
fistl
inc
jmp
popf
inc
jmp
mov
dec
jmp
cmpsl
dec
lcall
sub
or
mov
incl
xchg
incl
sbb
aam
cmp
insb
xchg
incl
incl
cmp
fdivr
call
clc
decl
outsl
stos
incl
pushl
pop
jmp
dec
dec
clc
aaa
aaa
aaa
cmp
xor
xlat
mov
fistl
jmp
mov
dec
jmp
lods
push
out
scas
push
incl
sub
adc
sub
push
xchg
incl
nop
and
leave
xchg
cmp
ljmp
cltd
jmp
mov
incl
aas
fdivrp
cmp
decl
call
stc
decl
je
incl
ljmp
dec
lcall
dec
dec
std
aas
aas
aas
cmp
mov
fistl
jmp
mov
dec
in
lods
push
cli
mov
call
mov
jmp
aas
call
mov
aaa
jmp
movsb
cmp
push
mov
xor
cmp
jmp
inc
fstpl
lcall
cmp
pushl
sar
jmp
clc
call
jp
incl
and
pusha
popl
xchg
stos
jl
mov
aas
aas
cmp
test
fistps
dec
jmp
scas
push
push
mov
ljmp
movsl
cmp
sbb
inc
jmp
lods
inc
lcall
cmpsl
cmp
push
lods
push
jmp
movsb
dec
jmp
popf
inc
call
xchg
inc
lcall
stos
incl
mov
incl
mov
incl
mov
incl
xchg
call
andb
inc
jle
lcall
inc
decl
dec
inc
sti
cmp
cmp
mov
test
jmp
sahf
inc
call
scas
push
stc
mov
ljmp
mov
aas
ljmp
scas
inc
ljmp
mov
ljmp
dec
lcall
mov
lcall
dec
call
mov
ljmp
fistps
ds
fisttpl
sub
cmp
ljmp
jne
pushl
jb
pushl
je
incl
lcall
incl
inc
inc
repnz
push
sbb
mov
dec
push
mov
push
mov
cmp
ljmp
scas
inc
ljmp
dec
pushl
mov
pop
pushl
mov
push
jmp
mov
lcall
dec
call
mov
push
mov
call
sahf
inc
fcoml
cmp
xlat
test
call
ud0
jno
pushl
jno
cmp
decl
sub
pop
mov
mov
popl
fnstsw
cmp
and
push
dec
in
scas
push
push
mov
push
mov
cmp
and
dec
pushl
mov
pop
pushl
arpl
lds
xor
push
lcall
lods
inc
jmp
inc
push
mov
in
stos
dec
jmp
mov
inc
fcoms
cmp
jp
sbb
sub
pushl
outsb
or
decl
sub
incl
cmp
sub
sub
mov
pop
push
jmp
fwait
inc
out
mov
cli
mov
pop
jmp
inc
ljmp
dec
pushl
mov
fs
cmp
lret
imul
das
mov
inc
decl
inc
in
mov
push
lods
push
jmp
movsb
dec
jmp
fwait
inc
fsts
cmp
mov
sub
cmp
ljmp
jno
decl
xor
pop
xchg
mov
jp
xor
push
push
push
add
add
mov
xorl
incl
mov
inc
ljmp
pop
pushl
arpl
cmp
push
cmp
pushl
rcrl
mov
inc
jl
dec
mov
push
out
cmpsb
dec
call
xchg
aas
call
mov
call
xorb
nop
jae
pushl
adc
aas
jae
decl
jmp
cmp
lcall
and
add
add
add
add
pop
and
out
test
notrack
cwtl
sub
sbb
stos
inc
ljmp
mov
ljmp
mov
pop
pushl
rcrl
mov
dec
lcall
dec
jmp
mov
ljmp
cmp
mov
xchg
cmp
xlat
mov
dec
xorb
iret
jns
jmp
and
cmp
decl
sub
jl
incl
dec
dec
pop
mov
jbe
jmp
xchg
and
adc
xor
and
inc
ljmp
mov
ljmp
mov
pop
inc
lds
enter
repnz
pusha
sti
rcrb
movsl
cmp
add
mov
incl
orl
xor
int
xor
mov
jb
lcall
lcall
xor
add
sbb
jbe
and
or
and
sbb
xor
jmp
lods
inc
ljmp
mov
jmp
mov
ljmp
push
dec
dec
fs
inc
jmp
xchg
daa
decl
sbb
incl
jle
jmp
jl
mov
jg
inc
js
inc
jno
decl
inc
decl
add
add
add
add
sbb
dec
jbe
call
fwait
sub
jmp
movsl
cmp
and
notrack
test
call
inc
decl
aas
lcall
cwtl
sub
push
xchg
and
push
mov
decl
orl
add
lcall
jp
ljmp
jle
inc
je
inc
fs
jmp
cmp
jbe
addb
mov
push
sbb
push
ja
call
cltd
sub
sbb
lcall
mov
xor
push
popf
xor
setp
decl
xchg
call
xchg
and
push
mov
decl
xchg
incl
jg
incl
js
jmp
jp
mov
jns
mov
inc
and
cwtl
cmp
outsl
add
add
mov
push
sbb
daa
mov
call
xchg
sub
pop
cwtl
sub
pop
cwtl
sub
push
xchg
call
and
adc
sbb
or
or
add
incl
ja
cmp
jp
pushl
inc
pop
lcall
add
add
pop
sbb
pop
jb
ljmp
test
call
mov
decl
mov
decl
adc
incl
jle
incl
jns
incl
js
ljmp
jno
ljmp
dec
and
mov
cmp
add
mov
push
sbb
test
lcall
pop
cmp
ljmp
jns
call
jge
call
or
sub
incl
or
jb
adc
mov
inc
sbb
cmpsl
inc
sbb
mov
push
sbb
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
scas
inc
sbb
inc
add
incl
add
cld
add
pop
clc
add
pop
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
incb
add
add
inc
pop
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
jge
add
push
add
jp
add
imul
add
or
add
jle
add
jnp
add
push
add
push
add
adc
push
jne
add
sbb
push
sbb
jl
push
add
add
and
add
cmp
add
add
ja
add
jb
add
jbe
add
jl
add
jle
add
ja
lods
push
push
add
pop
sbb
add
ja
add
push
and
lods
pop
daa
add
pop
and
mov
sub
xchg
sub
xorb
xchg
ja
add
popa
and
add
sub
mov
jne
add
xor
add
outsb
es
data16
add
insb
sub
ret
add
jae
add
js
add
jp
add
push
xor
test
xchg
pusha
dec
add
push
inc
add
dec
add
push
add
push
add
jno
add
jp
add
jno
add
je
add
jl
add
jnp
add
jnp
add
jp
add
orl
adc
adc
or
pop
add
mov
add
adcl
add
mov
add
push
add
test
add
sbbl
add
lcall
sub
xor
push
mov
cmp
sub
cmp
sub
cmp
and
cmp
pop
sbbl
push
popf
xor
push
das
add
add
mov
add
inc
add
lods
inc
add
mov
add
mov
dec
add
dec
add
add
pop
add
dec
add
dec
add
inc
add
inc
add
dec
add
js
xor
pop
add
arpl
mov
add
xorb
roll
cmp
fmuls
cmp
ficoml
dec
add
stos
inc
add
mov
add
inc
add
mov
add
mov
mov
xchg
outsb
add
jne
mov
mov
jge
rolb
inc
add
xchg
inc
add
lcall
loop
inc
add
test
add
mov
dec
add
mov
add
mov
inc
add
mov
dec
add
stos
dec
add
scas
push
add
lods
push
add
mov
add
mov
push
add
test
rorl
jbe
leave
cwtl
jb
enter
rcll
add
mov
pop
add
pusha
add
jb
add
scas
add
test
fs
add
popl
inc
jns
add
mov
add
addb
and
xchg
add
mov
dec
xorl
or
rolb
or
filds
das
xchg
iret
add
rolb
and
roll
sbb
jecxz
daa
cmpsl
jmp
add
lods
repz
mov
testl
sub
cld
add
cltd
rolb
insl
fwait
rolb
scas
in
pop
mov
out
fs
add
sar
cs
xor
incb
cmp
std
add
sar
add
sar
add
incb
inc
incb
pop
enter
sar
add
incl
lret
imul
add
cli
add
incb
mov
xchg
add
cltd
test
add
add
movsb
pop
pop
leave
fldlg2
lret
add
push
dec
push
mov
mov
jmp
dec
inc
dec
cmp
sub
sub
inc
in
in
jmp
add
add
aaa
sub
xor
and
daa
enter
in
cli
out
add
add
dec
and
xor
es
fucomp
lock
in
in
sti
movl
xor
cmp
or
lock
cmc
ljmp
cmp
inc
and
repnz
in
add
sub
nop
nop
lidtl
int3
int
hlt
repz
fcmovbe
aam
add
cmp
nop
xchg
xchg
xchg
xchg
test
add
loop
hlt
neg
sbb
push
add
xchg
test
jns
popa
pop
jbe
in
cld
hlt
neg
sbb
xchg
lods
lods
mov
lods
js
imul
hlt
neg
sbb
mov
mov
outsl
jp
lods
mov
iret
or
push
add
mov
mov
jl
popf
mov
test
sbb
inc
add
jl
jg
jle
mov
adc
or
inc
add
nop
mov
cltd
jl
mov
mov
xchg
cs
or
dec
add
cmpsl
mov
xchg
mov
lods
xchg
push
or
mov
xchg
outsb
je
orb
mov
inc
add
add
pop
insb
imul
jg
ret
les
nop
aas
sub
add
add
insb
imul
xchg
add
inc
cmp
add
add
ret
imul
jno
imul
dec
add
imul
cmp
add
add
add
add
arpl
xchg
cmp
dec
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
sbb
add
xor
add
add
and
or
or
sbb
or
sbb
xor
inc
sub
xor
ss
sub
pop
and
or
pop
cwtl
lcall
add
add
add
add
add
or
pop
pop
das
sub
cmp
cmpsb
sahf
push
dec
aad
insb
pop
icebp
mov
xorb
cmpl
jl
clc
stos
outsb
imul
es
icebp
fs
sbb
xchg
aad
adc
add
add
push
xor
mov
mov
test
roll
inc
sbbb
addr16
xchg
jbe
sahf
xchg
xchg
sbb
pop
enter
mov
cld
adc
rolb
push
sbb
add
push
inc
sbb
inc
mov
push
dec
mov
fs
mov
sub
mov
daa
pushl
pop
daa
call
js
ljmp
mov
ljmp
mov
jmp
lcall
in
push
push
mov
add
add
add
cmp
or
movsb
inc
and
mov
xor
mov
gs
mov
and
mov
sbb
mov
sbb
lods
push
push
jmp
insl
test
daa
cmpsl
jmp
ljmp
sub
ljmp
sti
incb
sar
add
dec
lahf
add
add
add
add
add
add
cmp
mov
pop
pop
mov
gs
mov
bound
mov
pop
sbb
xchg
incl
ja
and
std
xor
pushl
cs
sub
incl
js
cli
and
call
add
add
sub
pop
add
mov
push
mov
push
inc
insb
and
inc
outsl
daa
inc
jo
inc
outsb
es
mov
jb
decl
cmp
cmp
pushl
sar
pushl
lret
xor
ljmp
pop
mov
cwtl
ret
add
sbb
scas
dec
push
sarl
sub
lds
ja
dec
jns
dec
jp
dec
jnp
dec
jp
decl
ja
decl
xchg
int3
sub
stc
xor
cld
cmp
ss
xor
ljmp
mov
repz
sbb
mov
xor
dec
sbb
mov
jae
dec
jp
dec
jle
dec
xorb
roll
ss
rolb
xor
dec
jl
incb
js
incl
jle
incb
mov
sub
cmp
cmp
std
jmp
cwtl
xlat
and
mov
insl
push
xor
sub
dec
sbb
dec
jg
call
xchg
call
mov
fcoms
ds
fcoml
aas
inc
xchg
cmp
xor
incl
jns
decl
jle
ljmp
sar
inc
cmp
decl
std
ljmp
xchg
iret
aas
jbe
call
pop
out
inc
xor
pop
mov
push
lret
roll
cmp
fstl
inc
loop
inc
jmp
mov
inc
push
das
call
mov
decb
xchg
or
sbb
jbe
js
sub
stc
incl
cmp
sar
ljmp
jb
incb
gs
dec
cmp
gs
test
fistps
inc
jmp
cmpsb
dec
out
stos
dec
inc
test
call
xor
sbb
and
incl
inc
xchg
cmp
mov
sti
incl
cmp
sar
ljmp
jae
pushl
pop
lcall
inc
imul
lcall
in
stos
dec
out
push
xchg
lods
inc
pushl
cmp
and
xor
call
mov
inc
movsb
xchg
outsb
sub
enter
ret
sti
es
mov
insb
xchg
push
lcall
inc
inc
imul
mov
dec
jmp
mov
jle
inc
and
cmp
sub
inc
pushl
lods
inc
mov
dec
push
lods
push
in
dec
fcompl
jge
bound
cmp
jl
jmp
ja
incb
daa
push
jae
cli
push
cmp
pusha
mov
mov
call
mov
ljmp
cmpsl
cmp
es
inc
ljmp
dec
das
mov
push
ljmp
mov
push
dec
jmp
mov
jmp
dec
loop
inc
ficoml
ss
push
push
sub
jb
incb
and
mov
mov
lock
cmp
push
mov
xorl
jmp
dec
push
mov
dec
jmp
aas
ljmp
dec
pushl
mov
pushl
les
das
mov
dec
incl
scas
push
jmp
movsb
dec
fstl
cmp
pushf
jl
ljmp
outsl
adc
inc
js
ljmp
inc
incl
ss
jne
adc
lret
loope
test
ljmp
and
push
pushl
pop
cmp
imul
das
mov
dec
incl
mov
jmp
dec
loop
inc
fmuls
xor
push
insl
push
pushl
insl
pop
decb
sub
imul
jge
xor
cs
push
rcrb
in
inc
incb
lahf
xor
and
dec
pushl
mov
pusha
xor
mov
dec
call
mov
dec
mov
inc
mov
mov
roll
sub
dec
jo
incb
sub
jp
das
call
adc
adc
add
add
pop
sub
shll
sub
and
adc
mov
inc
ljmp
mov
jmp
mov
incl
pop
in
pusha
inc
mov
ljmp
mov
call
orb
rolb
das
incl
bound
movsl
pop
adc
add
add
add
cs
add
push
jmp
lea
sbb
jmp
stos
inc
and
pushl
mov
xor
seto
decb
xchg
pop
jl
ljmp
sbb
lret
jg
inc
jae
ljmp
and
gs
aas
and
add
add
or
insl
sbb
and
lcall
mov
xor
daa
pushf
sub
decb
pop
incb
orl
imul
leave
jl
mov
inc
and
inc
sbb
cmp
add
add
or
sbb
aas
sbbl
call
xchg
and
call
xchg
and
adc
adc
pop
orl
push
jne
call
pop
and
mov
inc
pop
or
pop
sbb
jne
xor
lcall
adcl
sbb
pop
xor
js
push
icebp
test
sub
push
cmp
or
cs
push
jno
scas
push
sbb
push
sbb
lea
out
mov
out
push
pop
lds
cmp
dec
sub
push
pop
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ja
add
jl
add
jnp
add
adc
pop
jle
add
add
sub
sub
sahf
cmp
add
pop
sbb
add
inc
sub
mov
add
jne
add
and
mov
pop
daa
add
pop
daa
add
bound
add
pusha
daa
add
bound
add
jae
add
je
add
jo
add
jp
add
jo
add
arpl
iret
data16
fsubrs
add
jge
add
jb
add
outsb
arpl
pop
orb
or
push
add
lea
add
mov
add
xchg
and
push
xchg
add
pushf
add
mov
add
and
and
add
mov
cmp
and
push
add
scas
inc
add
mov
add
mov
push
add
mov
inc
add
enter
xorb
rorl
cmp
rclb
cmp
add
lods
inc
add
cmpsl
inc
add
xchg
inc
add
cwtl
inc
add
lcall
fisubrs
dec
add
test
push
add
lcall
out
ja
mov
push
mov
add
add
nop
add
jno
add
jne
add
jns
add
jl
add
jg
add
andb
pop
xchg
mov
add
in
add
mov
add
mov
add
lret
add
int
data16
incl
cmp
incl
ds
add
incl
inc
sar
add
incl
jl
incl
inc
in
add
incl
ja
incl
jp
incl
int3
xchg
xchg
int
test
pushf
mov
fisubs
nop
add
mov
add
jecxz
add
jmp
add
insb
pop
outsb
sub
or
pop
pop
sbbl
add
daa
pop
jle
popa
jb
sbbb
add
jl
es
or
arpl
jne
pop
outsb
add
adc
adc
jo
jo
jo
add
pop
inc
inc
inc
imul
insb
add
inc
inc
dec
dec
dec
sub
imul
add
inc
push
push
dec
xor
ja
popa
or
add
push
dec
cmp
cmp
push
ja
push
push
push
cmp
inc
ds
addr16
imul
dec
cmp
aas
dec
push
push
adc
pop
sub
add
and
cmp
inc
add
add
xor
xor
sub
adc
add
add
jg
push
cs
add
adc
add
add
add
pop
and
pop
and
add
add
add
incl
add
popl
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rorb
add
aas
add
sub
add
adc
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
add
incl
bound
add
add
add
xor
mov
xor
cmc
fwait
xor
call
push
cld
add
jmp
imul
add
add
add
inc
sub
mov
lcall
pop
mov
incl
incl
call
mov
popf
add
add
mov
mov
jae
mov
pop
push
incl
nop
incl
jg
incl
incl
pushl
int3
jl
pushl
imul
add
push
daa
ss
pop
sbb
mov
push
incl
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
incl
imul
lahf
shll
lds
dec
jge
dec
xorb
into
xorb
adc
test
incl
sub
aas
ds
ds
incl
jne
incl
jno
incl
bound
add
pop
daa
out
lret
call
mov
fsts
inc
call
xchg
decl
orb
add
add
incl
pushl
incl
jns
decl
add
add
add
rcrb
call
mov
fistps
dec
pushl
fwait
call
xchg
pushl
and
add
incl
jp
incl
jl
call
add
add
add
aam
es
ficomps
dec
call
test
inc
cmp
stos
dec
incl
mov
incl
incl
incl
incl
jg
lcall
add
sub
add
add
gs
in
inc
push
mov
jmp
cmpsb
cmp
cs
pop
ljmp
mov
lcall
mov
add
icebp
incl
test
jmp
xor
cmc
add
add
add
add
fisubrl
lahf
jecxz
aas
call
test
pushl
mov
ljmp
mov
dec
jmp
xchg
decl
gs
fs
and
mov
and
add
add
push
fdivl
ljmp
mov
lcall
scas
inc
cmp
pop
jl
inc
decl
lea
incl
push
dec
jnp
call
adc
lcall
inc
add
add
xchg
and
sbb
xor
sbb
decl
orb
je
pushl
ds
add
add
add
add
push
xchg
imul
decl
push
incl
orb
push
ja
decl
push
daa
pushl
add
fsubrl
fldenv
lahf
fs
shlb
dec
pop
daa
dec
pop
daa
out
lds
pop
push
daa
add
add
incl
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
rolb
addb
add
add
add
add
popl
dec
add
add
add
js
add
arpl
jb
imul
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
xor
push
add
add
incl
add
push
add
add
dec
add
xor
push
add
add
incl
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
incl
add
and
jae
arpl
jb
imul
and
imul
add
arpl
jb
jns
jo
je
add
add
add
insb
add
popa
add
add
add
outsb
add
add
and
je
push
add
popa
add
jae
ja
outsl
add
add
add
add
add
add
add
add
add
add
incl
add
add
adc
shlb
dec
cmp
jp
pop
sub
inc
add
dec
add
add
inc
add
arpl
outsl
add
add
add
add
jae
add
add
add
subl
pop
add
testl
pop
add
add
add
add
add
js
gs
add
push
inc
add
add
js
add
arpl
jb
imul
and
sub
pop
lds
loopne
aad
sub
mov
or
dec
sub
add
add
add
dec
mov
push
push
xchg
ss
sub
add
add
add
push
add
inc
add
add
or
test
add
add
and
add
add
add
add
xor
add
add
add
push
add
add
sbb
add
add
and
mov
add
add
adc
add
add
or
push
add
and
add
add
add
add
push
add
cmp
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
and
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
or
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
jae
jb
jo
and
je
jo
cmp
xor
and
and
fs
jb
jo
imul
push
arpl
jo
cmp
fs
jb
jo
imul
and
cmp
sub
outsb
je
data16
je
and
jo
imul
and
arpl
imul
imul
jae
and
and
cmp
jae
popa
jae
jbe
cmp
jae
dec
outsb
outsw
and
insb
outsb
jae
insl
jae
popa
jae
jbe
cmp
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
insl
jbe
cmp
arpl
imul
and
and
cmp
jae
popa
jae
jbe
cmp
jno
gs
gs
jb
jbe
insb
gs
or
and
and
and
insl
jbe
cmp
jno
gs
gs
js
arpl
imul
insb
or
and
and
and
and
gs
cmp
outsb
jbe
imul
and
and
and
and
and
and
and
and
and
and
inc
arpl
jae
cmp
jae
and
ds
and
and
and
insl
jae
popa
jae
jbe
cmp
jno
gs
gs
jb
jbe
insb
gs
or
and
and
cmp
insl
jae
popa
jae
jbe
cmp
arpl
imul
cmp
insl
jae
popa
jae
jbe
cmp
jae
dec
outsb
outsw
ds
jae
gs
bound
inc
js
push
arpl
jo
push
inc
inc
and
pop
imul
push
cmc
xor
cmp
out
into
add
fistpll
jae
push
jl
je
pop
and
jb
add
int
xchg
call
mov
aam
or
nop
add
pop
ret
or
lea
loope
jbe
and
dec
out
popa
mul
jne
loop
mov
push
lret
icebp
inc
mov
sti
or
jnp
daa
mov
test
fists
sbb
nop
enter
ljmp
repz
add
popf
and
inc
fisttpll
xchg
jo
sbb
pop
insw
in
xor
scas
adc
dec
dec
loope
inc
cmp
mov
pop
jecxz
into
pusha
push
inc
mov
push
lahf
adc
ret
push
cmp
test
sub
cltd
addl
sub
adc
pop
shll
dec
pop
leave
xchg
in
je
mov
outsl
loopne
push
movsb
or
inc
cli
les
xchg
mov
stos
add
adc
inc
xor
dec
mov
rcll
cld
pop
iret
mov
xchg
dec
out
xchg
sub
inc
imul
mov
je
fcomi
xchg
push
arpl
push
add
add
into
stc
and
pop
mov
test
xor
mov
lea
cmpsl
in
inc
cwtl
movsl
jnp
loop
mov
stc
add
repnz
sub
or
nop
mov
xchg
movsl
dec
mov
inc
push
addr16
inc
or
lock
nop
out
int
fcoms
in
dec
data16
add
in
and
push
and
xor
cs
pop
inc
cmpsb
dec
test
shrl
in
sbb
push
adcb
mov
pushf
xchg
dec
xchg
mov
pop
xchg
adc
std
cld
out
sub
stos
rclb
lds
pop
push
je
adc
cmp
mov
and
or
aam
ret
mov
jle
test
jne
mov
xor
rol
pop
shrl
mov
into
mov
cltd
sbb
cmp
pop
fwait
push
fs
or
and
aam
cwtl
mov
mov
add
in
dec
lret
jge
movsl
stos
jmp
daa
and
and
or
and
pop
call
inc
adc
xorb
bound
mov
jno
mov
loopne
out
outsb
ficoms
popa
psllq
stc
push
xor
pop
mov
das
xor
xchg
adc
push
jae
push
mov
pusha
bound
lret
cwtl
inc
into
push
out
dec
lcall
push
ljmp
popa
movlps
sub
ret
inc
mov
roll
pop
stc
mov
or
pop
dec
test
lcall
add
push
shr
and
adc
sub
pop
pushf
cld
mov
in
jbe
inc
inc
outsl
sbbb
andb
and
dec
jmp
sar
xor
or
push
cld
stos
mov
arpl
fmull
or
push
sbbb
cmp
push
and
sarb
ljmp
inc
pop
push
xchg
in
sbb
loope
push
pop
out
andb
icebp
mov
pushf
push
inc
add
push
std
xor
pop
xor
shl
outsb
sti
jae
or
ror
xchg
add
push
insl
data16
pop
enter
sbb
int
sarl
or
cmp
inc
and
jp
shll
push
jecxz
xchg
sub
xchg
imul
dec
into
mov
test
imul
push
jno
sti
dec
xchg
popf
repnz
jg
dec
popa
shlb
popa
cwtl
les
dec
in
fdivp
es
jb
ret
cmp
in
mov
xchg
pop
jae
adc
int
jb
fwait
dec
mov
sarb
mov
inc
shll
ret
aas
mov
push
jg
jg
jg
jne
repnz
test
lret
xchg
clc
es
inc
outsl
cmp
mov
aaa
pop
cmp
xor
jbe
sbb
movsb
jl
cmp
jmp
jl
xor
ret
add
add
push
lods
repnz
push
ss
cwtl
aam
xchg
cwtl
xchg
sbb
cmp
jo
aas
inc
push
xchg
in
mov
sar
and
rcll
repz
push
pushf
aas
cmp
mov
lea
cmp
jbe
aam
ss
in
ret
fdivrl
and
shll
mov
xchg
ja
cltd
out
add
mov
adc
sbb
scas
jge
pop
repnz
mov
fcompl
mov
loopne
ret
mov
or
sbb
push
sub
nop
xchg
cwtl
pop
mov
jge
sbb
mov
ss
bound
dec
add
adc
pop
scas
add
jle
dec
fdivrl
std
mov
fstp
shlb
in
movsl
mov
cmpsl
fisubl
dec
out
nop
int
lret
dec
mov
and
das
repz
rcrb
popa
xor
sbb
pushf
popf
adc
sbb
movsb
ror
stc
sbb
mov
cs
push
and
test
push
cmp
mov
ret
xor
lcall
add
sub
jg
cli
push
pop
mov
es
mov
fnsave
cli
dec
adc
and
mov
loope
cmp
pop
cmp
mov
imul
and
push
orb
cmpsb
sub
into
fmull
add
inc
int
test
aaa
or
jecxz
cmpsl
lcall
mov
xchg
mulb
rclb
xlat
clc
jns
xor
pushl
xlat
movsb
add
out
xchg
pusha
rclb
mov
fcoml
enter
fisubs
dec
fidivrl
les
aaa
imul
pop
loope
xchg
addr16
pushf
dec
repz
jns
jle
test
push
adc
hlt
mov
or
inc
pusha
or
jge
insl
mov
dec
scas
roll
repz
and
or
cld
sbb
lds
dec
xor
into
jbe
std
xor
mov
cmp
mov
mov
and
push
in
cmpsl
cmp
pop
out
ficompl
sbb
sbb
sahf
mov
in
mov
sbb
cli
loopne
outsl
ljmp
and
mov
out
cmp
ss
push
mov
daa
jo
aas
test
test
int
inc
push
jnp
jae
sub
decl
adcl
add
jno
push
push
mov
xor
dec
outsl
jl
cmp
push
lcall
mov
push
adc
push
add
push
cld
loopne
sbb
pop
mov
lret
int3
pop
add
mov
mov
mov
cld
sub
xor
inc
push
jge
or
test
rorl
std
or
fldt
lods
lds
test
push
in
repz
stos
push
jbe
inc
mov
cmp
cmc
or
std
xchg
in
mov
jl
stos
mov
xchg
pop
xchg
push
xor
pop
mov
adc
lret
sub
cmpb
aad
sub
stc
pop
jmp
sar
sub
imul
xor
sub
mov
fisttps
or
mov
sub
pusha
stos
push
add
and
push
mov
xchg
jb
push
push
xor
mov
push
jno
mov
push
jmp
jnp
push
push
fwait
cmpsb
or
daa
add
jp
fwait
lock
int
popf
rcrl
dec
rcll
lret
stc
arpl
lock
fstpt
adc
mov
aad
sarl
dec
mov
lea
xor
and
pop
push
inc
adc
jg
cltd
in
or
repz
jp
push
inc
fsts
pop
movsl
mov
push
mov
imul
push
lds
lea
ss
xchg
sbb
jp
pop
dec
push
ljmp
dec
sbb
sub
sti
pop
mov
jl
push
ret
mov
aad
xchg
xor
fistps
pop
and
jecxz
fsubl
inc
dec
jp
and
dec
jbe
hlt
and
mov
sub
xor
dec
ret
inc
xor
mov
shrl
stos
int3
std
mov
into
jbe
std
xor
mov
cmp
push
lods
fadds
add
mov
mov
int3
popf
sub
mov
dec
jg
fnstcw
scas
xor
sbb
adc
lea
sub
push
push
sti
mov
insb
repz
push
lods
es
sub
fwait
add
dec
mov
fucomi
js
roll
bnd
sbb
mov
jmp
test
test
js
and
sti
push
push
test
dec
das
testl
pushf
push
aaa
daa
pushw
inc
roll
scas
mov
out
sbbl
addr16
sub
clc
cmp
inc
rorl
iret
stos
cmp
xchg
mov
imul
loope
fists
or
lea
mov
fs
cmp
push
fnstenv
adc
lods
sub
enter
mov
add
push
into
jl
xchg
sti
mov
xchg
cs
add
ret
mov
scas
loopne
cmp
ss
push
sub
cmc
in
out
ud2
push
pop
cwtl
or
jae
push
dec
push
add
jl
pop
pusha
gs
and
pop
je
push
bound
xor
subb
push
mov
lret
sarb
js
push
pop
in
push
sarl
lods
mov
rcpps
cmpsb
sbb
icebp
in
mov
adc
cltd
lock
xor
jmp
cmp
sub
mov
push
ja
and
jge
mov
loopne
jb
cmp
adc
ljmp
add
and
leave
inc
loope
push
inc
scas
mov
fs
push
je
test
clc
push
push
shr
sbb
or
cmpsb
xchg
jg
adc
sti
mov
pop
push
out
out
lock
add
lahf
inc
std
out
aam
push
lret
lret
or
mov
pop
inc
xor
push
ja
cld
inc
repnz
push
test
pop
stc
push
in
aad
das
sti
mov
fiadds
push
imul
in
shl
popf
sub
sbb
pop
sub
or
das
test
gs
popf
or
faddl
or
dec
inc
sbb
fwait
popf
scas
add
aas
lahf
stos
scas
jecxz
outsb
cmc
mov
adc
jo
dec
lret
mov
test
xchg
inc
sbb
iret
dec
xchg
ret
ror
xor
mov
jae
push
mov
mov
cmp
mov
mov
mov
int3
mov
arpl
xchg
mov
dec
push
xchg
adc
in
enter
lods
adc
test
xchg
mov
test
lahf
outsb
xchg
sbb
dec
cmp
xchg
rcrl
xor
mov
daa
jo
stos
adc
xor
xchg
outsb
sarl
and
xor
dec
jne
cmp
in
int3
jae
cmc
orl
int
stos
ret
xchg
jbe
xchg
add
fs
movd
xor
mov
and
daa
incl
add
add
fidivl
cmpsb
jns
xchg
sub
jmp
jnp
hlt
test
lods
sub
das
push
fdivr
pop
into
push
adcl
aad
js
arpl
jne
cmp
xchg
iret
mov
pop
inc
or
loop
ljmp
sub
add
popa
jg
dec
mov
movsl
lods
xor
adc
arpl
push
mov
jnp
xchg
sbb
lds
sbb
ss
cltd
shlb
cmp
jb
mov
idivb
xor
pop
adc
enter
in
shrb
lods
test
lret
mov
jle
jge
shl
adc
cmpsb
lret
pop
or
lock
mov
push
in
leave
add
xchg
test
pop
leave
shl
imul
or
int
mov
lahf
mov
dec
inc
push
xchg
arpl
adc
jg
insl
push
jmp
cmp
xor
addb
or
xor
incb
adc
add
cmpsb
dec
push
aas
sub
cmc
xlat
imulb
pop
push
jmp
outsl
xchg
arpl
mov
and
scas
adc
mov
xchg
mov
out
add
cmpsl
aaa
mov
push
pop
aas
jbe
mov
loop
adc
dec
cmp
fwait
add
add
enter
add
or
sub
mov
mov
xchg
mov
xchg
push
cmp
adc
xorb
in
xor
add
out
xchg
jns
mov
lock
out
sbb
sahf
jne
xor
mov
cmp
and
mov
cmp
leave
mov
adc
add
xlat
ljmp
mov
ljmp
fists
cmp
repz
sbb
xor
jne
mov
lcall
sub
movsl
and
sub
scas
add
jae
xor
int
loopne
cwtl
mov
jne
push
mov
mov
push
jne
mov
cmpsb
inc
mov
cmp
cmp
xchg
shlb
lahf
mov
push
test
mov
mov
sub
cmp
sbb
stos
scas
insb
cmp
xor
andl
push
call
mov
mov
iret
bound
mov
jmp
inc
in
mov
cmpsb
xchg
negl
repz
nop
les
xorl
push
es
movsl
inc
push
fsubl
or
popa
aad
adc
mov
pop
sub
push
lahf
jmp
std
rclb
insb
mov
insl
test
imul
int3
xor
mov
xor
shlb
and
decb
xor
jb
cmpsb
lahf
test
fcomps
sbb
test
and
xchg
inc
out
mov
movsl
add
mov
xor
mov
mov
lea
xor
pusha
lcall
ret
pop
outsl
sub
push
mov
test
mov
out
repz
mov
xor
push
fsts
jo
insb
pop
lahf
lods
fs
add
shll
loope
movsl
imul
mov
push
xchg
rclb
dec
and
and
dec
adc
pop
lahf
dec
jae
cltd
outsb
xor
dec
pop
sub
jbe
mov
add
jl
stc
pop
cmpsl
mov
adc
leave
aas
or
mov
pusha
fidivrs
xchg
or
nop
cltd
inc
decb
mov
jmp
addr16
push
xchg
and
mov
loopne
sbbl
xor
ds
in
xor
push
in
lds
jno
mov
and
jg
xchg
sbb
stos
andl
das
das
jbe
das
ss
add
mov
inc
lcall
sub
sbb
xchg
push
jge
or
sub
fildll
lock
push
std
data16
adc
jne
cld
stos
sub
daa
sbb
ds
std
and
or
filds
pushf
iret
mov
addl
sub
int
arpl
push
jnp
das
call
outsl
push
dec
push
jl
rcrl
and
sub
dec
in
cmp
jp
fadd
cmpsl
mov
pusha
and
in
mov
jnp
adc
jge
push
mov
je
pop
inc
aad
movsl
pop
ds
ret
mov
xor
mov
dec
mov
pop
fldl
clc
sub
test
pop
jge
dec
testl
loop
test
fcompl
sub
movb
das
les
push
jns
lret
dec
je
mov
dec
mov
xchg
aas
aas
call
push
aaa
push
xor
nop
inc
push
sbb
pop
sbb
rorl
inc
push
fwait
gs
addl
ret
cmpsb
dec
inc
xchg
push
jo
and
int3
or
pop
dec
push
ret
xor
call
push
mov
or
inc
mov
mov
in
int
xlat
mov
mov
cmp
inc
std
pop
sbb
lret
lcall
test
dec
popf
xchg
out
and
and
dec
test
pop
mov
outsl
mov
jg
orb
addb
mov
repnz
sti
xor
rcll
cmp
mov
inc
jbe
jbe
loop
add
adc
aam
js
or
adc
inc
sub
movsl
mov
xchg
cmp
repz
cmp
in
sub
fadd
mov
add
imul
out
pop
mov
nop
fidivrl
in
es
sub
add
pusha
movsb
sbb
mov
sub
out
lret
cmp
pop
jns
push
rcrb
and
jmp
cmc
outsb
ljmp
dec
js
xor
enter
divb
imul
lahf
xchg
or
or
imul
rorl
and
fmuls
and
divb
jmp
and
fwait
push
hlt
push
push
out
mov
or
repz
movsb
xchg
cli
mov
add
test
es
dec
fmul
cli
imul
cmpb
jo
mov
out
jg,pt
xchg
cmp
ljmp
stos
pop
jnp
popf
in
loope
mov
out
jle
popa
cmp
xchg
inc
and
jae
sbb
jae
push
nop
push
jg
pop
mov
jl
push
cli
xchg
in
flds
adc
repz
aad
loopne
jns
in
inc
inc
imul
int
andb
ja
rcll
jmp
stos
stos
rolb
push
xor
test
cwtl
clc
xchg
les
roll
mov
in
lods
sbb
daa
xorl
mov
mov
scas
fstl
fcomps
test
aad
sbb
xor
jmp
fs
xchg
mov
xchg
xor
inc
adc
mov
out
in
fcomps
ret
arpl
sti
insl
push
out
add
xor
aam
pop
stos
dec
loope
or
dec
mov
imul
mov
mov
cmp
push
adc
pop
mulb
pop
cwtl
push
sub
xchg
stos
subl
adc
jns
xchg
mov
rcll
push
jae
loope
ds
nop
push
insb
out
xchg
sarb
xchg
xor
cltd
xchg
mov
jno
lods
std
ret
lret
jo
lods
and
int3
clc
or
and
add
adc
cmpsl
andb
xchg
inc
mov
cmp
pop
sub
sarb
bound
cmp
xor
adc
es
pop
push
cltd
lea
sti
mov
stos
jg
jg
dec
shrb
xor
or
push
push
mov
xchg
aas
pop
inc
mov
inc
sbb
sub
pushf
popf
lret
cld
rcl
mov
dec
xchg
movsb
cwtl
xor
lret
sti
outsb
pand
xor
lret
lds
jnp
push
push
jb
push
das
adc
test
stos
movsl
jne
call
sbb
popf
rolb
movsb
mov
mov
adcl
jo
sbb
loopne
xchg
scas
les
push
inc
dec
push
cmc
fcoms
jle
mov
mov
mov
loop
xchg
cld
test
jmp
scas
ljmp
sub
pop
push
fcoml
cmp
xor
fidivrs
sbb
enter
xchg
js
outsb
and
stos
or
lret
movsl
pop
jns
pushf
mov
add
fdivrs
nop
clc
sbb
ds
mov
pop
daa
pop
push
orl
outsb
jl
es
adcb
inc
xchg
rcrb
jecxz
mov
dec
jecxz
mov
jg
pusha
and
je
gs
ret
call
xchg
arpl
jmp
int
pop
hlt
mov
sub
insl
jp
xor
xor
in
dec
xchg
dec
test
adc
divb
mov
cmp
cmp
sub
enter
push
push
fsub
or
sub
xchg
xchg
push
arpl
mov
bound
push
dec
and
sub
dec
dec
loopne
mov
lea
addr16
ss
push
je
out
mov
ljmp
xor
mov
aam
xor
movl
pop
jo
xchg
mov
mov
and
cmp
test
xchg
mov
movsb
sub
mov
shrb
orl
sub
sahf
push
sub
or
xchg
push
mov
outsb
sbb
lds
dec
mov
xchg
mov
xor
test
inc
pshufw
pop
or
mov
roll
cmp
into
jl
xor
loop
cli
push
lds
jecxz
xor
shll
cltd
loop
insl
sub
fnop
mov
sbb
mov
sbb
mov
ja
xchg
cli
add
repnz
and
pop
fisubrs
call
sahf
outsl
call
jbe
inc
fistl
jb
test
or
lods
imul
in
lods
xchg
lret
sbb
pop
xor
dec
call
and
ret
inc
jns
int3
push
mov
xorb
test
icebp
ret
mov
dec
xchg
pusha
or
xor
cmp
inc
xchg
jg
adc
push
divb
and
push
stos
pop
testl
sbb
jne
sahf
pop
out
clc
mov
and
mov
sbb
cwtl
mov
mov
push
push
mov
pop
pop
xorl
mov
popf
pop
cmp
xor
insl
negb
mov
mov
insl
inc
and
push
aam
jl
daa
outsl
xor
repz
xor
aas
imul
cmp
mov
dec
xchg
mov
pop
pop
loop
icebp
in
pop
inc
movsb
lock
push
into
mov
fisttpl
orl
lods
jle
mov
adc
outsb
dec
push
rclb
push
aad
mov
push
loope
pop
jbe
call
cli
loopne
cmp
test
push
mov
jno
and
pop
loopne
and
lret
sbb
push
jmp
mov
fwait
imul
test
mov
in
cs
inc
cmovp
les
or
sub
adc
orl
jp
xlat
dec
dec
bound
pop
jmp
int3
mov
popa
adc
or
imul
std
adc
mov
xor
ja
sbb
add
mov
pop
and
xchg
repz
inc
push
push
sbb
cmp
call
add
inc
sub
add
push
enter
ja
pop
pop
mov
adcb
lret
and
notl
dec
lahf
or
mov
sub
sahf
sub
sbb
jo
sub
push
dec
shll
add
ret
push
mov
adc
out
adc
movsb
incl
inc
xchg
lret
xchg
outsl
add
cmp
fidivs
inc
adc
jns
in
aad
int
pusha
lds
dec
insb
icebp
pushf
mov
mov
xor
sbb
inc
pushf
fstpt
stos
shlb
dec
xor
adc
push
xchg
push
mov
repz
lret
gs
xchg
pop
mov
fdivr
std
xchg
int
cmc
jge
test
movl
loope
jns
mov
cmpsl
mov
dec
lock
xchg
loope
add
js
cmp
test
add
fisttps
daa
sub
sbb
dec
xlat
mov
repz
jae
arpl
outsb
repnz
cmp
gs
movsl
in
sbb
jno
xorb
or
pop
sub
call
add
sub
cltd
pop
inc
mov
jl
lret
lret
jno
and
push
stos
or
mov
mov
aam
loop
adc
ljmp
ljmp
xchg
jmp
lcall
sti
loope
ror
mov
xchg
insl
mov
mov
cwtl
pop
cltd
shll
fists
push
push
push
cld
bound
dec
push
sub
inc
cli
and
sbb
push
ljmp
inc
push
inc
nop
xor
lods
in
push
int
in
dec
mov
out
in
xor
int3
jp
test
insb
adc
add
ss
jbe
in
lds
repz
xchg
lea
lahf
jno
adc
int3
mov
lahf
scas
pop
outsb
inc
divl
xchg
pushl
gs
roll
jne
pop
mov
dec
pop
sbb
inc
push
rcrb
testl
adc
lcall
cmp
enter
xor
stos
pop
pop
xchg
and
mov
push
add
gs
in
sahf
or
ficoml
and
repz
subb
mov
jmp
adc
rorb
stc
scas
popa
ss
fwait
std
dec
pop
xor
ja
mov
pop
cmp
jle
out
cpuid
mov
cmc
xchg
pushf
xchg
pop
inc
xor
jmp
push
push
cmpsl
push
mov
inc
inc
jno
int
das
pop
mov
mov
out
out
xchg
xchg
sub
inc
ljmp
dec
std
push
inc
scas
mulps
pop
xchg
imul
or
andb
push
pushf
mov
add
or
mov
pop
adc
add
int3
mov
sub
push
sub
stos
testl
fstpl
xor
std
pop
stos
and
cld
mov
stos
movsb
and
fwait
cmp
pop
xchg
cli
pop
test
mov
std
jge
sub
std
pop
cmp
jl
bswap
dec
and
add
mov
xchg
add
cmc
inc
loop
imul
pop
jl
xchg
mov
jno
mov
inc
sub
stos
inc
push
mov
cmp
lods
addr16
inc
and
outsb
xor
enter
push
lret
jne
lret
push
sbb
in
xorl
push
cmp
stc
out
cmpsl
sub
lds
fsubrl
mulb
in
and
inc
popa
mov
sbb
add
pop
sbb
pop
loopne
outsl
lea
pusha
aaa
in
test
xchg
es
jnp
lock
pop
jl
and
data16
iret
sbb
stos
nop
jmp
fwait
sbb
push
inc
arpl
xlat
movl
inc
out
mov
cmpsb
jnp
mov
jg
inc
or
push
mov
add
pop
or
ljmp
aas
and
fwait
adc
lahf
jge
andb
cmp
jecxz
mov
push
mov
sbb
loopne
lods
xchg
shl
mov
lea
push
push
lahf
fisubs
cmpsb
and
mov
push
add
gs
in
sahf
or
ficoml
and
repz
subb
andl
mov
repz
fwait
ret
sub
loopne
dec
icebp
repz
sbb
and
into
push
decb
fnstenv
arpl
adc
mov
push
or
jmp
adc
pop
sub
jg
mov
adcb
push
adc
lahf
sub
xchg
arpl
sarb
sar
cmp
jno
mov
adc
dec
iret
mov
inc
sub
cwtl
and
rol
xchg
jae
pop
adc
dec
mov
in
cmp
xchg
mov
pop
pop
mov
push
cmp
pusha
mov
mov
mov
xor
or
sub
sub
mov
push
test
lods
aas
push
or
xlat
cli
mov
sub
sbb
cmpsb
ljmp
push
mov
pop
dec
cs
xchg
data16
adc
cli
inc
mov
pop
out
inc
inc
das
mov
cmp
dec
shlb
adc
xchg
mov
sub
js
into
loope
sti
xchg
int
mov
aas
push
mov
cmc
leave
xchg
movsl
mov
xchg
push
ret
dec
clc
cmpsl
pop
ffreep
or
scas
mov
inc
pop
imulb
sahf
bound
packuswb
cli
idivb
test
push
sub
aad
push
nop
lock
pop
test
fistl
mov
stc
inc
xchg
xchg
jle
jp
loopne
aas
fmuls
nop
das
cld
lods
push
or
lock
cpuid
andb
sub
notl
jns
ds
and
inc
or
mov
test
fidivl
loopne
addl
in
repnz
dec
sub
ror
push
int
sbb
mov
mov
mov
ss
lds
or
testb
sbb
jns
and
gs
stos
movsb
lcall
aaa
loopne
jbe
push
pop
aad
cmpsl
cmp
hlt
stc
cmp
or
repz
dec
mov
cld
out
daa
outsl
add
mov
mov
dec
mov
adc
cmp
fwait
cwtl
and
adc
xlat
gs
insb
movsl
out
push
cld
std
mov
stc
cmpsb
rorl
in
into
add
test
jno
cmp
dec
test
or
cmp
cmpsb
loopne
sbb
popa
mov
out
push
mov
int3
sub
mov
decl
clc
cmp
inc
repz
test
es
movsb
pop
repz
rol
jne
test
and
xchg
push
lods
dec
movsb
fwait
cli
rcrb
mov
sbbb
cmp
add
lods
adc
scas
lret
inc
imul
dec
iret
ret
test
pop
mov
xchg
int
xor
popa
mov
inc
popf
add
mov
adc
jle
lret
or
sbb
adc
adc
push
pop
repnz
movsb
pop
mov
call
test
aaa
mov
mov
cmpb
pop
mov
fimull
cld
in
aam
adc
sub
ficompl
inc
sbb
inc
inc
int3
int3
push
mov
shrb
dec
cwtl
inc
dec
les
hlt
or
out
adc
xchg
push
decb
daa
scas
jnp
test
orpd
pop
pop
test
cwtl
int3
dec
repz
push
cs
rorb
sub
xor
out
loop
fnstenv
in
push
mov
dec
ret
loope
push
sbb
adc
insb
jns
and
in
adcb
sub
sub
xor
add
cli
shrb
emms
movsl
adc
test
in
out
mov
cmc
aam
out
js
push
repnz
js
pop
xor
pop
push
repnz
repz
inc
iret
push
imul
lock
add
cmp
mov
inc
push
push
pop
pop
arpl
jmp
loop
mov
pusha
or
addr16
xlat
and
pop
adc
loope
sub
and
pop
or
add
mov
ret
pop
aaa
loop
jno
fnstsw
dec
xchg
cmpsl
idivl
sbbl
dec
pop
data16
mov
scas
mov
dec
push
rcll
outsl
scas
and
stos
test
and
fstps
cmp
lret
mov
push
adcb
xchg
mov
dec
jge
mov
das
out
and
cmp
test
add
incb
or
mov
xchg
lret
sahf
sbb
movsl
aam
or
cmpsb
into
xor
jno
inc
xor
xor
fimuls
insb
sarl
ljmp
add
lret
cli
aam
cld
sub
dec
sub
call
add
push
gs
inc
inc
and
out
mov
adc
ja
ljmp
dec
xchg
jae
pop
clc
lcall
in
dec
or
imul
xor
jmp
fcmovb
dec
jns
stc
fwait
std
inc
inc
mov
popf
mov
jp
outsl
int
lock
xchg
fmull
dec
imul
pop
sarl
hlt
lret
dec
xchg
mov
movsl
pop
xchg
and
add
sub
mov
in
and
and
test
sbb
mov
pop
fcmovnb
mov
push
call
mov
into
xchg
mov
popa
mov
push
and
add
cltd
inc
push
sbb
mulb
xor
sbb
mov
rorb
lret
repz
and
sbb
fidivl
push
dec
mov
arpl
add
xor
sar
int3
pop
xor
push
lret
mov
jo
in
cli
push
cmp
cs
jp
mov
pop
add
loopne
mov
insl
test
and
mov
xchg
xchg
push
lea
mov
cld
dec
xchg
int
jne
insb
dec
cmp
and
test
mov
or
fmuls
dec
movsb
pop
xchg
shll
mov
clc
pop
mov
cmpsb
sbb
notl
outsl
std
mov
stos
xor
rcrb
and
add
sub
scas
mov
test
sub
add
jno
aaa
mov
cmp
pop
xchg
cli
pop
test
mov
std
jge
sub
std
pop
cmp
jl
bswap
dec
and
add
mov
xchg
add
cmc
inc
loop
imul
pop
jl
xchg
mov
jno
mov
inc
sub
stos
inc
push
mov
sub
stc
loopne
std
loop
mov
xchg
mov
push
lret
jne
lret
push
sbb
in
xorl
push
cmp
stc
out
cmpsl
sub
lds
fsubrl
daa
cmpsb
leave
pushf
das
aas
rolb
xor
inc
out
and
lds
or
lods
stos
mov
nop
mov
jle
outsl
fcmovbe
test
sti
mov
mov
inc
popf
mov
xor
sub
mov
inc
enter
pusha
in
mov
jbe
push
into
pop
imul
push
cmp
or
test
enter
pop
mov
jl
shll
mov
xchg
mov
adc
imul
adc
test
mov
pusha
mov
enter
outsl
push
cmp
mov
pushf
jg
sub
shrb
push
lods
inc
dec
in
pop
ljmp
push
jmp
or
jg
sbb
push
inc
pop
fdivr
addb
lods
int3
shlb
inc
push
data16
pop
fsts
mov
add
cli
negl
aas
mov
mov
jle
insl
mov
dec
data16
jb
jne
fs
push
in
and
idivl
xchg
rcl
push
fcomps
cmp
dec
pop
pop
xchg
sub
mov
mov
adc
push
aaa
sub
pop
sbb
scas
int3
inc
push
aad
push
aaa
mov
xchg
imul
clc
adc
aam
ljmp
js
xor
push
pop
add
jne
dec
sub
ja
cld
jp
sub
cmc
cmp
int3
test
jecxz
mov
out
cli
std
movsl
in
stos
sbb
rcl
mov
cmp
gs
adc
mov
cmpsl
jmp
sbb
lret
or
jecxz
in
dec
shll
pop
jns
sbb
out
adc
outsl
dec
sub
insb
jp
push
adc
stos
mov
inc
push
mov
push
rclb
jge
mov
sub
pop
sub
jmp
testb
add
rol
sahf
lods
adc
pop
repnz
outsb
push
out
sub
pop
js
test
lods
mov
jmp
sahf
int
mov
adc
jle
daa
jp
mov
in
arpl
pop
push
push
daa
rcrb
xlat
ljmp
cmp
or
leave
pop
mov
lock
mov
sub
mov
xchg
adc
xor
out
popa
and
bound
stc
mov
outsl
iret
fldenv
sbb
shll
xchg
mov
cmpl
xchg
lea
add
adc
mov
test
int
in
hlt
lret
mov
scas
cmp
xlat
into
imul
jnp
fidivrl
into
cmp
jb
je
iret
xchg
mov
adc
in
mov
lds
fldcw
aaa
fucomp
roll
and
test
outsl
cli
roll
fistps
mov
rol
xchg
mov
fistl
mov
stos
leave
lock
test
mov
lea
pop
xor
imul
je
jmp
or
adc
pushf
mov
lods
fwait
and
divb
mov
es
ficompl
mov
cli
sbb
mov
les
lret
mov
insb
jl
jmp
pop
dec
dec
or
cltd
scas
jmp
jg
leave
push
ljmp
push
loop
lcall
and
mov
into
mov
push
in
push
cmp
lds
shlb
enter
insb
test
insb
js
lret
sbb
rorb
stos
stos
lcall
lds
mov
fiaddl
hlt
jnp
inc
cs
mov
pop
xor
sarb
xor
mov
add
xchg
rcr
in
pop
aad
jle
out
lock
imul
lods
mov
out
push
jge
push
mov
xchg
or
clc
nop
scas
sarb
jg
or
js
ljmp
add
lret
cli
aam
cld
sub
dec
sub
call
jg
push
pop
push
adc
loopne
data16
icebp
pop
mov
arpl
or
push
inc
push
jmp
inc
cmpb
xor
js
das
or
xchg
dec
cwtl
sbb
sbb
xchg
sub
or
push
adcb
xchg
mov
dec
jge
mov
das
out
and
xchg
ds
punpcklbw
inc
jmp
and
insb
mov
pop
pop
mov
insl
sub
std
dec
fnstsw
pop
sti
hlt
cmpsl
dec
jp
jge
out
xor
movsl
pop
leave
push
and
pop
int
fucomp
inc
xchg
cmp
iret
push
mov
sub
notl
add
dec
mov
push
and
inc
ds
in
int3
inc
ret
dec
adc
inc
js
decl
and
adc
jle,pn
jbe
arpl
popa
lods
dec
mov
or
jb
jecxz
or
out
mov
push
stos
pop
sbb
inc
mov
xchg
mov
sti
test
cmpsl
add
jge
dec
test
inc
jmp
jnp
insl
push
jmp
and
jns
cmp
mov
fsts
data16
mov
stos
mov
out
xchg
mov
xor
adc
fcoms
push
fidivs
xchg
enter
add
sbb
ficoms
pop
and
mov
pop
sub
es
mov
call
mov
mov
sbb
shl
les
adc
stc
inc
xchg
and
jae
pop
sbb
sbb
mov
pop
arpl
lds
sub
sarl
clc
mov
mov
lahf
inc
adc
movl
lret
mov
icebp
loopne
cltd
mov
adc
inc
push
adc
or
mov
push
cmp
jmp
or
lret
test
loope
and
jb
jle
cmp
call
cmp
pop
mov
arpl
and
xchg
test
int
iret
stc
xchg
jb
dec
orb
insl
stc
addr16
mov
xchg
jae
cmpsb
sahf
jmp
loope
repz
jns
test
lods
push
data16
push
nop
stos
or
lds
push
jg
sbb
std
sbb
test
jmp
loop
imul
out
leave
xor
in
xor
xchg
lret
es
out
sub
push
insb
loope
aas
push
cmp
in
jno
cmc
imul
push
ss
pushf
fdivrs
outsl
inc
aaa
push
mov
jmp
ds
and
stos
cmp
jb
mov
out
lods
push
mov
inc
aam
fdivl
push
lcall
in
dec
push
imul
pop
pop
icebp
jae
ja
sbb
ljmp
sub
jecxz
jae
shr
mov
xchg
cmp
movsl
fsubrl
in
jns
fimuls
mov
test
mov
sbb
push
mov
pop
fwait
xorl
mov
repnz
not
sub
sti
fcoml
sbb
aad
inc
push
mov
mov
js
addb
xor
ss
add
rclb
loope
scas
lods
aad
and
inc
mov
mov
push
lods
dec
sub
or
adc
or
daa
jecxz
cmp
popf
xchg
cli
adc
dec
aad
mov
xor
lahf
xor
stc
adc
ss
test
mov
mov
pop
xor
pusha
push
lods
lahf
mov
shl
dec
jae
fisubl
scas
xchg
mov
mov
clc
adc
mov
xor
dec
jg
pop
mov
sub
in
imul
mov
roll
fildl
daa
std
push
lds
es
sti
cmpl
cmp
repnz
ror
cmp
dec
lcall
popf
jp
repnz
in
scas
rorb
fcomps
test
sbb
mov
ss
dec
fadd
mov
stos
adc
cmp
sbb
repnz
dec
js
in
enter
popf
movsb
push
mov
in
mov
jb
pop
fidivrl
mov
sbb
push
scas
adc
jne
dec
mov
xlat
mulb
jb
rorb
sahf
jo
idivb
imul
testb
repz
aad
dec
xor
jb
mov
push
cld
cmp
jmp
into
lds
aam
and
insl
lahf
ja
les
ds
adc
sbb
ret
dec
in
pop
inc
mov
jns
leave
sbb
sub
jl
fbld
dec
pop
lahf
lcall
add
pop
sbb
pop
push
fstps
lock
leave
sbb
cmpsb
das
popa
notb
daa
cmpsl
and
sarb
das
in
add
in
dec
mov
data16
mov
inc
sub
testb
lods
insl
xlat
push
inc
imul
test
test
sub
repnz
mov
dec
fists
nop
mov
sti
lret
stc
or
mov
leave
daa
push
push
mov
xchg
fdivr
loopne
push
enter
lret
sbb
xchg
test
ret
sbb
stc
lahf
pusha
sbb
je
out
and
xchg
in
add
cmpb
jne
adc
sbb
fwait
dec
lret
push
dec
jge
add
push
popf
fldl
lcall
pop
int
mov
push
bnd
cli
cmpl
sub
insb
dec
in
es
adc
daa
notb
mov
lods
xchg
enter
test
cmc
das
mov
jb,pt
inc
mov
mov
movsb
cmp
outsb
pop
push
mov
pop
mov
outsl
clc
imull
cld
xchg
fwait
pusha
jae
push
cltd
and
and
outsl
movl
mov
fisubrl
rcll
sub
dec
repz
adc
mov
push
mov
jge
sub
js
adc
aam
lret
inc
ljmp
iret
jge
push
mov
or
outsb
in
dec
and
push
fldt
mov
test
xchg
dec
push
fisubrl
push
les
mov
xchg
inc
pop
jmp
push
lret
add
xlat
xchg
and
xchg
pop
orl
pop
out
shr
daa
ret
xchg
cmp
mov
out
mov
ret
jp
jbe
sbb
dec
call
fsts
mov
aam
leave
adc
pop
and
inc
loope
enter
xor
stc
stc
mov
clc
xor
test
sub
addb
mov
into
add
in
je
out
xor
xchg
stc
dec
sti
das
adc
xor
pop
in
loop
push
jno
stc
inc
shll
cmp
jbe
xchg
xor
jle
out
or
mov
fdivs
cmp
xor
scas
mov
xchg
mov
mov
add
pop
in
rcll
pusha
cmp
clc
lock
jne
jl
cmp
push
adc
sbb
sub
stc
or
mov
inc
add
mov
sarl
sbb
je,pt
xor
sbb
fcmovne
push
pop
fisttps
es
mov
sbb
outsl
aaa
jo
stos
mov
mov
push
xchg
adc
out
lods
and
movsb
imull
loopne
push
pop
enter
sub
pop
sub
sbb
or
sti
aam
shrl
xchg
out
push
arpl
mov
jl
sbb
add
jge
add
dec
and
lret
test
sub
add
loopne
pop
adc
inc
or
xor
aaa
aas
mov
imul
cmp
pop
pop
dec
mov
or
outsl
ja
out
leave
cwtl
jp
xchg
mov
cwtl
lcall
in
push
enter
xchg
push
scas
mov
or
lds
cmp
pop
add
xor
and
xlat
es
ds
inc
imul
fucomip
pop
loopne
xchg
std
scas
pop
push
negl
cmc
inc
imul
addr16
mov
dec
adc
lds
test
xchg
push
xor
repnz
pop
or
fdivrl
test
dec
popa
xchg
out
sbb
push
pusha
xchg
pop
in
repnz
aad
adc
mov
aaa
bound
add
dec
test
xorb
out
mov
push
add
push
jbe
insl
mov
mov
mov
or
or
xchg
out
mov
ds
addr16
es
or
mov
insl
gs
pop
lea
stos
in
jb
xlat
loope
aam
inc
dec
in
cli
cmpsl
icebp
xor
xor
dec
ret
inc
sbb
lods
orl
cltd
je
testb
out
adc
cmpsl
cmp
aaa
dec
cmp
dec
sub
adc
or
adc
or
lea
sti
inc
mov
mov
inc
daa
jne
arpl
in
arpl
pop
jno
push
clc
pop
ret
xlat
xor
movsb
in
adc
or
out
mov
popf
dec
mov
cmpsl
aam
pop
mov
mov
mov
icebp
insl
das
cld
iret
mov
dec
movsl
sahf
loopne
inc
sub
jmp
add
mov
xchg
hlt
jle
mulb
sbb
cltd
stos
mov
and
insl
repz
inc
cmc
not
jae
xchg
and
add
into
ljmp
inc
cmp
mov
adc
cmpsb
inc
and
or
add
lods
out
das
dec
out
lds
cs
mov
mov
imul
call
outsl
jmp
or
arpl
aad
inc
pop
jbe
cmc
sbbl
fwait
mov
imul
xchg
sahf
scas
scas
inc
ljmp
test
adc
subb
les
imul
pop
adc
mov
mov
jge
pop
das
push
imull
insb
xlat
mov
adc
test
push
ret
push
cld
cmp
in
addb
adc
loope
mov
mov
aam
dec
add
test
dec
jecxz
push
cld
xor
pop
fimull
jp
xchg
push
jne
insl
aas
pop
cld
fs
stos
insb
rorl
add
loop
outsl
jmp
cmp
js
loope
inc
mov
movl
hlt
push
stos
sarl
adc
loope
imul
mov
add
in
adc
jbe
andb
xchg
arpl
cli
xchg
ret
and
scas
adc
popf
inc
scas
mov
mov
pop
dec
andb
mov
xor
inc
pop
sub
cmp
mov
jmp
lahf
and
mov
loope
cmp
add
test
jno
rorb
mov
lret
jnp
arpl
jne
out
loopne
push
xor
jg
test
pusha
mov
lea
in
loopne
pushf
jg
push
cmpsl
mov
jns
add
iret
jecxz
sbb
push
push
mov
negb
lret
jl
std
dec
mov
mov
inc
adc
add
xchg
stos
sarl
or
out
or
inc
pop
sbb
test
adc
shlb
loopne
movsl
push
pop
fcmovnb
bound
push
mov
mov
pop
ret
jle
outsb
mov
fldcw
push
jno
std
mov
jns
and
ret
mov
stc
or
pop
sub
ret
pop
mov
insl
pusha
inc
mul
fdivl
sbb
mov
test
insl
add
sub
jmp
jg
fildl
inc
in
mov
mov
push
cs
mov
push
sbb
fdivl
movsb
dec
cli
pushf
xor
sub
inc
nop
add
inc
add
fcoms
lcall
je
sub
stc
jb
fimuls
sbb
xlat
dec
xchg
stos
pop
add
stc
jb
bound
cltd
mov
arpl
pusha
pushl
xor
sub
fcoml
mov
inc
fdivrs
dec
sub
fidivrs
sti
mov
data16
lret
out
call
iret
fisttpl
hlt
push
and
flds
stc
bound
inc
pop
or
fdivrl
test
dec
popa
xchg
out
sbb
push
pusha
xchg
pop
in
repnz
aad
adc
mov
aaa
dec
push
in
cmp
scas
mov
cmp
out
nop
xor
dec
sbb
xchg
inc
scas
adc
dec
mov
adc
jns
fcom
test
inc
add
adc
xchg
dec
jp
int
and
icebp
insb
fmul
insb
imul
add
ret
jge
xor
sti
out
add
jbe
inc
adc
arpl
xchg
inc
push
out
nop
push
pop
cmpb
dec
and
adc
cmp
stc
jo
xor
push
in
cwtl
popa
sbb
out
and
cltd
jno
les
jno
jecxz
cmpsl
add
and
pop
insw
inc
xchg
xchg
xor
push
xor
jp
stos
push
lea
mov
mov
subl
push
int3
add
repnz
mov
sbb
and
adc
and
xor
sti
enter
fiaddl
xor
lock
popa
jle
mov
add
sbb
mov
xor
xor
ret
clc
int3
inc
inc
rolb
in
or
scas
je
xor
int3
inc
aas
imul
xchg
outsl
or
loop
xor
loopne
sbb
mov
or
dec
in
clc
sub
or
inc
add
add
cmp
cltd
cmpsl
or
stos
sub
std
fwait
sti
inc
sbb
fimuls
adc
add
fadds
lods
popf
or
repz
add
mov
mov
leave
push
xchg
andl
push
in
movsb
dec
push
popf
pop
push
into
mov
call
pop
scas
inc
or
jge
mov
jecxz
and
jae
inc
es
ja
mov
out
mov
imul
inc
pop
dec
jg
loop
in
fistl
mov
push
js
lds
xchg
inc
cmpsb
in
pop
rcl
sbbb
mov
jae
stos
cmpb
sub
cmpsl
mov
pop
pop
ja
sub
push
sbb
stos
rolb
js
mov
lock
mov
push
scas
repnz
and
sub
add
inc
cmp
and
mov
int3
pop
mov
loopne
cmpsb
xchg
mov
sbb
mov
dec
out
test
push
push
scas
mov
sarl
jnp
fcoml
cmp
repz
lock
lcall
loop
add
sbb
shl
fistpll
and
fwait
gs
pop
sarl
sbb
fisubs
xchg
scas
or
mov
fwait
jg
pop
dec
and
adc
loop
cmp
int3
pop
test
outsb
ljmp
test
lahf
push
andb
sbb
daa
lock
hlt
test
std
cmpsl
push
js
push
inc
testl
cmpsl
sub
shlb
addl
cmc
in
jnp
mov
mov
or
stc
loope
mov
jno
xchg
shll
shlb
inc
mov
incl
mov
adc
shlb
cwtl
es
test
cltd
pop
lahf
mov
movsl
add
dec
add
gs
push
push
dec
push
lock
jno
stc
inc
daa
lds
jp
cli
jb
movsl
mov
ljmp
int3
lods
cmp
fcoml
lods
addr16
outsl
repnz
in
mov
es
jns
idivb
cmpsb
xchg
pop
jge
add
out
push
rorb
sub
mov
jne
mov
xchg
add
scas
lea
xor
cmp
fldenv
int
jnp
mov
fndisi(8087
cmpsl
insl
sarb
mov
ljmp
jo
lock
pop
imul
cld
cmp
loopne
imul
in
jp
adc
repnz
push
cwtl
lock
push
insl
sub
mov
ret
jge
iret
jge
jge
outsl
movsb
sti
jle
sbb
and
and
adc
push
cltd
push
leave
cmp
repz
sar
inc
fldl
outsb
pop
sbb
mov
adc
sbb
in
std
cs
test
mov
jnp
sub
lahf
sbb
jmp
jae
cmp
imul
lock
dec
fcoms
inc
js
shll
adc
lock
sbb
out
push
or
cld
and
arpl
rdmsr
and
xorb
or
mov
mov
out
add
subb
idivb
xchg
inc
sbb
pop
std
mov
or
and
jb
pushf
mov
and
test
roll
inc
pop
jl
addr16
jp
pushf
repnz
ret
mov
sbb
sti
hlt
sub
or
sbb
cmp
mov
jg
xlat
iret
dec
mov
bnd
enter
adc
push
add
shrb
dec
cli
or
divb
and
lods
pop
test
pop
daa
fwait
sbbl
mov
and
mov
into
dec
movsl
jbe
in
das
jecxz
cmpb
std
mov
addb
xchg
in
std
sub
sar
into
sub
pop
mov
jge
cli
cmpsl
pop
or
stc
lds
nop
or
ds
dec
inc
or
dec
sti
push
lret
add
xor
nop
fwait
cwtl
jge
inc
push
outsl
outsl
xchg
push
jo
xor
aad
cli
notl
call
mov
mov
sbb
das
int3
into
divb
ss
push
cmp
sub
push
push
shll
cmp
ja
mov
push
mov
movsl
jnp
push
jno
jl
cmpsb
mov
jbe
mov
inc
cmp
mov
lret
cmpsl
add
xlat
and
pop
ret
xchg
jnp
and
pop
adc
push
push
rol
sbb
fbstp
fs
xchg
cmp
add
adc
mov
jp
aaa
addr16
mov
cld
or
roll
pop
jp
mov
or
lahf
bound
clc
cmp
icebp
xchg
repnz
scas
sahf
jb
popf
call
add
fldl
mov
inc
or
sbb
cmp
mov
jg
xlat
iret
dec
mov
bnd
or
or
cmp
push
ds
mov
xor
and
lods
pop
test
pop
daa
fwait
sbbl
mov
and
mov
into
dec
movsl
jbe
in
das
jecxz
cmpb
mov
imul
movsb
cmp
pop
add
and
leave
movsb
jne
aad
sub
xchg
clc
call
dec
jo,pn
scas
lds
sub
pop
adc
inc
sbb
push
out
jp
fiaddl
push
fdivl
mov
and
test
call
adc
xchg
jnp
jle
outsl
and
daa
xchg
loopne
arpl
int
ret
int3
les
in
jb
mov
pop
push
mov
sarb
dec
test
and
scas
fidivs
lahf
scas
mov
cmp
shrl
lock
js
insb
jne
mov
xchg
pop
dec
shlb
jmp
mov
in
sarl
leave
lea
sub
xor
mov
in
pop
test
dec
sub
xchg
cli
das
das
push
mov
add
and
js
xchg
mov
pop
push
jge
xor
jnp
aad
xor
gs
and
cmp
cltd
stos
xchg
sbb
push
adc
andl
sub
aam
mov
aas
dec
pop
dec
loope
inc
jae
fnstcw
lock
jns
xor
dec
sarb
cmp
and
popa
lret
sbb
jle
jne
shr
or
test
sahf
jns
cmc
pop
cmp
das
sbb
outsl
xor
out
lahf
ja
xchg
or
jb
xorl
pop
ret
aaa
adc
jns
loope
fbstp
adc
inc
push
xor
mov
stc
outsb
out
sbbl
nop
or
jmp
cmp
push
mov
es
cmp
sub
jns
dec
dec
and
pushf
push
jne
cmp
sub
incb
mov
xchg
inc
xor
pop
in
push
stc
sub
mov
frstor
mov
ret
aad
push
pop
cwtl
cmpsl
into
inc
mov
sbb
mov
pusha
shl
gs
out
ljmp
cmp
clc
mov
pop
outsb
enter
pop
std
jmp
xchg
push
or
dec
je
push
xchg
xchg
and
gs
jecxz
out
addr16
arpl
xchg
bound
dec
pop
loop
lea
lds
lcall
xor
mov
cmc
ljmp
xchg
into
jnp
fstps
xchg
adcl
cltd
clc
add
repnz
sahf
fdivp
or
insb
mov
nop
jae
dec
jmp
fldt
pop
nopl
imul
in
and
push
pop
test
dec
movsb
pop
lret
push
roll
add
pop
or
cmpsb
insl
pop
jno
or
jl
hlt
xor
clc
jae
jmp
mov
cli
cmpsl
jmp
and
push
repnz
cmpsl
mov
or
dec
pop
out
jb
or
mov
adc
adc
mov
cmpsl
dec
loopne
das
add
loop
out
dec
movsl
cmpsl
jae
mov
mov
or
jb
addr16
cmp
pop
daa
cs
std
add
and
dec
pop
push
pop
ret
pop
dec
cmpsl
loopne
jl
daa
lods
or
mov
jnp
insb
lret
cmp
mov
push
xchg
insb
in
push
daa
or
sub
sarb
lds
les
ss
cwtl
mov
add
fsubrl
in
or
or
pop
dec
mov
pop
xchg
push
inc
mov
lcall
mov
xor
dec
adc
jbe
mov
fldt
fwait
and
mov
inc
and
mov
mov
mov
mov
jno
lcall
xor
ret
scas
cmp
xor
mov
dec
cmp
out
xorl
jnp
sub
xchg
or
sub
pop
inc
xor
fildll
insl
xchg
scas
cmp
js
sbb
pop
sbb
xor
jl
mov
cwtl
lret
xor
mov
rcll
fistpl
inc
aad
or
jo
dec
xchg
sti
popa
enter
aad
mov
hlt
cwtl
cmp
sbb
cmp
jno
mov
mov
sub
cwtl
cltd
ljmp
ficoms
in
int
mov
test
out
shrl
mov
stc
and
mov
aad
sbb
or
into
push
and
lock
div
fdivrl
mov
mov
cltd
push
repz
test
inc
and
dec
movsb
cli
out
fildll
jns
in
lods
and
fs
push
mov
push
divb
hlt
scas
push
adc
pop
out
mov
cwtl
or
cld
xchg
adc
inc
es
inc
out
jl
cmp
mov
and
mov
pop
in
adc
jmp
movsl
dec
mov
mov
orb
inc
mov
pop
mul
jbe
adc
mov
and
loope
cwtl
mov
fcmovnbe
ret
add
xor
adcb
pop
jb
adc
clc
fsts
sub
arpl
out
imul
mov
pop
add
mov
out
dec
fdivs
push
sbb
nop
push
xor
int
or
xchg
aam
aaa
mov
mov
xor
unpcklps
pop
inc
cli
xor
pop
ljmp
and
xor
sbb
pop
jo
insl
out
scas
sub
loopne
push
pop
mov
loop
xor
cs
rclb
lods
inc
insb
addl
cmp
jae
mov
mov
popf
inc
mov
jns
mov
shlb
iret
inc
push
mov
jmp
inc
fwait
jmp
jg
fisubrl
lds
test
pop
ja
aaa
lahf
in
mov
inc
jae
mov
mov
fildll
in
mov
imul
adc
sub
mov
cli
push
cld
adc
mov
add
shrb
daa
les
outsb
das
out
pusha
bswap
lcall
shrb
in
xor
or
fcmove
in
popf
bound
xor
cmp
dec
stc
mov
movsb
das
lea
out
popa
mov
outsb
int
mov
sbb
je
sahf
xor
fs
add
subl
fidivrs
mov
rclb
inc
ja
fimull
stos
push
in
sbb
into
mov
loop
sub
iret
sub
jne
push
and
fisttpl
daa
cmpl
dec
das
insb
ret
out
fisttpll
or
xchg
lea
inc
push
dec
ss
cmp
pop
jns
adc
and
es
sbb
rclb
icebp
leave
jl
pusha
pop
sub
add
movsl
daa
xor
mov
add
push
jb
arpl
xchg
add
pusha
mov
mov
sub
adc
sbb
add
pop
xor
pop
or
xchg
sbb
in
mov
mov
adcb
xor
add
push
arpl
data16
mov
lods
pusha
fnsave
ljmp
push
call
xchg
insl
xor
xor
iret
push
pop
push
mov
daa
push
mov
push
xor
jmp
jae
fnsave
mov
sub
xor
mov
mov
push
xchg
xchg
jg
inc
dec
stc
sbb
je
sub
es
in
xor
mov
cwtl
jg
or
daa
and
mov
jo
mov
and
and
or
dec
ret
popa
mov
loop
jge
dec
ret
test
adc
sub
in
add
andb
rcl
imul
gs
movsb
mov
fistpll
jne
lea
xor
pusha
mov
jmp
fwait
rorl
les
mov
out
test
pop
arpl
cmpsb
jae
or
mov
in
mov
out
or
cltd
mov
sub
ja
movl
scas
push
cmp
clc
and
stos
sbb
cmc
mov
mov
push
mov
ret
xor
jno
mov
inc
stos
test
mov
mov
mov
in
outsb
movswl
jbe
lock
in
fidivl
mov
fisubs
push
mov
push
aam
and
jge
inc
ret
loopne
and
in
sbb
ds
pop
cmp
or
xor
ret
les
push
mov
lret
sti
fdivrs
xlat
lret
loope
mov
clc
mov
pop
mov
hlt
add
mov
dec
call
jne
in
jbe
jmp
and
and
out
aad
or
repnz
insl
movsb
cmp
imul
jae
pusha
cmp
xchg
lret
out
loope
push
jle
lock
loope
scas
mov
xorb
push
and
out
pop
hlt
jno
xchg
pop
outsl
mov
dec
ja
icebp
lds
mov
xor
jge
mov
enter
jns
xor
cmpsb
push
mov
outsb
lahf
sub
cmc
fbld
inc
xchg
shlb
push
push
jne
mov
and
mov
fstps
or
sub
jne
inc
pop
repz
mov
cmp
cmp
ja
mov
xorb
push
shll
or
push
mov
adc
fisubrl
addl
xchg
and
mov
pushf
fisttps
rcl
dec
mov
leave
mov
add
into
lock
cld
xchg
or
jg
or
test
mov
rcll
fnstenv
roll
movsl
stos
stos
jns
add
xchg
inc
xor
sbb
cs
fiadds
cmpsb
test
ja
pushf
jbe
inc
mov
es
pop
mov
dec
lret
lcall
lods
push
add
popf
or
adc
in
or
or
enter
inc
xchg
push
jns
xchg
cs
cmp
mov
sahf
fucomip
and
dec
push
adc
int3
inc
dec
adc
fs
add
cmp
pop
xchg
inc
mul
shl
xchg
inc
ljmp
out
push
push
fwait
adc
testb
adcb
jl
jae
cmp
or
out
fisubs
in
jne
pop
std
pushf
les
icebp
dec
testb
mov
cwtl
fnsave
aaa
pop
lret
xchg
std
mov
mov
fsubl
sub
and
push
outsb
xorl
fadds
push
rcrb
aas
pusha
push
out
out
and
jb
call
mov
cmp
gs
cmp
pop
xorb
mov
push
push
xlat
sbb
outsl
mov
sub
mov
xchg
pop
imull
jp
cltd
xor
pusha
and
ret
loopne
push
negb
jnp
fstl
pop
inc
fnstenv
mov
ljmp
cmp
sbb
cs
roll
jecxz
std
adc
nop
data16
int
and
adc
das
loop
ljmp
loopne
insl
dec
shlb
xchg
xchg
or
lret
imul
rorb
es
iret
push
pop
addb
fidivl
sub
fwait
xchg
or
jp
aas
pop
aad
test
push
shr
sbb
xlat
mov
xor
jno
mov
add
pop
mov
fcoml
pusha
fisubs
jno
test
fsubrl
inc
mov
add
insb
shlb
xchg
cmp
mov
shrb
arpl
xchg
addl
jae
call
imul
cmp
cmp
mov
icebp
jl
ret
sti
dec
jle
dec
shl
inc
daa
pop
jl
sbb
daa
outsb
fwait
pop
xchg
fs
cltd
jle
pusha
insb
mov
and
lods
js
enter
loope
adcl
or
xchg
or
jle
cmp
mov
and
jmp
aas
adc
xlat
js
dec
xorl
pop
nop
jmp
je
insl
aas
popa
or
push
jle
xor
leave
push
cli
lea
mov
and
pop
in
or
ds
mov
orl
push
adc
or
data16
add
insl
outsl
cwtl
xor
sbb
ss
mov
jbe
add
imul
lea
lret
xor
orl
arpl
mov
push
mov
aaa
movsl
or
and
xchg
mov
mov
enter
cmpsl
test
in
jp
lahf
fistl
out
sub
xor
cmp
pop
xor
jle
hlt
stos
pop
xchg
mov
rcrb
into
jg
inc
push
mov
ja
dec
pushl
mov
fnstenv
cmpsl
push
pop
stos
popf
jnp
fdivl
mov
cmp
cmp
je
fsub
mov
in
pop
stos
and
cs
inc
inc
mov
jmp
jg
xor
aas
pop
enter
jge
arpl
iret
cltd
fidivrs
in
and
sub
jno
sbb
cwtl
pop
xchg
jbe
mov
jp
or
sbb
xor
es
je
add
xor
das
sub
add
xor
dec
imull
jae
scas
out
das
jge
dec
mov
inc
movl
push
inc
fisubs
hlt
divl
xor
rorl
enter
xchg
dec
xchg
mov
fnstsw
add
fwait
int
stos
testl
in
in
and
push
add
jb
ss
push
xchg
sub
ja
xor
popa
pop
mov
gs
fldl
sub
mov
bound
hlt
xchg
loopne
cmpl
js
add
jge
std
mov
xor
xor
enter
xor
mov
in
sbb
ret
psubsb
push
scas
fs
push
cld
cmc
insl
xchg
xchg
in
mov
mov
xor
ret
jne
bound
jl
xor
mov
push
cmp
addr16
in
sub
loopne
inc
inc
or
ret
pop
push
jo
test
popa
inc
fsubs
int
sti
fcmovnbe
enter
loop
pop
push
outsl
pop
push
xor
sub
addr16
mov
push
mov
or
cmp
fnstcw
xchg
pop
imul
ljmp
adc
add
inc
jno
push
cmpsl
pop
fbstp
and
arpl
fxch
pusha
pushf
adc
push
mov
adc
cltd
push
jmp
or
mov
mov
pop
jo
push
hlt
cld
hlt
call
enter
mov
xor
les
jge
fstl
xor
cmpsb
jns
mov
mov
nop
andl
in
frstor
jne
addr16
call
fiaddl
leave
xchg
jnp
sbb
shrb
add
movsl
sarb
dec
repz
sub
or
xchg
dec
sub
mov
mov
sbb
inc
rol
loopne
mov
xchg
adc
mov
cmpl
fwait
xchg
xor
pop
pushf
stos
mov
imul
mov
adc
icebp
stos
mov
repnz
cmovbe
mov
push
mov
adc
fists
and
popa
lahf
or
lahf
lock
dec
dec
ficompl
pop
sub
lea
out
rorl
repz
xchg
xchg
mov
shl
iret
cmp
mov
adc
adc
or
jbe
test
outsb
add
fs
add
adc
int3
add
mov
fs
sub
stos
jo
sub
add
or
out
lret
pop
mov
aad
xlat
std
fnstcw
das
push
inc
arpl
or
sbb
and
sub
decl
aad
cltd
jmp
dec
mov
pop
pop
fiaddl
or
fmul
xor
addl
and
imul
xchg
stos
jg
and
daa
cli
dec
and
or
fistpl
movsb
push
loop
sub
shrb
rolb
subb
leave
shrl
scas
sbb
add
stc
stc
test
shll
movsb
jb
xchg
adc
sbb
fcoml
mov
cmp
mov
push
xchg
push
sahf
inc
bound
sub
mov
inc
cmp
pop
ja
jnp
ret
incb
push
xchg
lods
mov
xchg
or
and
or
mov
les
imul
pushf
lods
jcxz
into
test
mov
sbb
xor
movsb
xchg
dec
inc
jecxz
pop
lahf
pop
pop
and
mov
and
outsl
xchg
sub
lahf
pop
popa
addr16
push
add
or
add
dec
in
enter
mov
mov
mov
sbb
jge
and
mov
mov
js
push
jne
mov
mov
mov
out
mov
bound
stos
iret
mov
xchg
mov
repz
jp
shll
sub
in
lret
es
push
sub
or
cmp
adc
decb
pop
fnstsw
xor
add
dec
mov
inc
sub
lods
jne
dec
into
jmp
sbb
aam
inc
fcoml
cmpsb
add
lret
shl
mov
lret
test
aam
test
es
loopne
mov
lock
sti
es
push
in
icebp
stos
test
test
into
gs
adc
push
outsl
cmp
jnp
and
std
lret
cmp
mov
stc
cltd
sub
fsub
repz
xchg
and
pop
movsl
mov
push
mov
pop
inc
call
cld
mov
sarl
mov
inc
pop
cmp
dec
inc
mov
rcll
outsb
outsb
cld
ljmp
in
lret
push
and
dec
gs
cmpsl
movsb
mov
xor
shlb
sbb
adc
dec
push
cli
mov
xchg
push
loop
hlt
js
pop
ja
pusha
fs
xor
cmp
and
jbe
rclb
out
mov
insb
ret
dec
imul
loop
xchg
aaa
push
fdivs
push
mov
dec
cltd
lods
xchg
icebp
fisubrl
adc
jle
xor
inc
rcll
lds
sarb
daa
aas
mov
repz
popa
test
test
pusha
scas
mov
push
add
push
lock
jmp
push
jp
bound
jle
in
pop
jle
in
mov
push
push
sti
lock
mov
mov
inc
inc
mov
inc
scas
and
int3
test
mov
popf
inc
jne
stos
mov
cmp
cmpsb
int
mov
test
sbb
icebp
push
test
adc
add
out
mov
pop
lods
or
rorb
inc
jmp
pop
pop
dec
outsb
and
loopne
sahf
xchg
hlt
sub
or
shr
jmp
mov
out
and
negl
test
inc
adc
and
iret
xchg
push
cmp
inc
fldcw
xchg
scas
test
ds
sub
and
imul
sub
and
push
pop
jbe
js
push
sbb
fwait
inc
inc
rcrb
push
mov
sub
test
shll
xchg
out
jnp
cmp
clc
pop
aaa
mov
or
orb
out
dec
int3
mov
xor
iret
lahf
adcb
push
and
cmp
mov
pushf
xchg
dec
cmc
xchg
loope
ja
arpl
or
xchg
fsubs
bound
rolb
xor
scas
jl
jno
faddp
add
test
mov
sub
push
movsb
adc
insb
mov
sbb
lds
or
lods
mov
dec
pop
add
adc
jp
scas
mov
js
pop
imul
aad
imul
jne
loopne
adc
mov
fldcw
dec
mov
pop
or
fistps
fadds
sbb
test
pushf
sbbl
xor
fisubs
movb
sub
sahf
and
lds
popf
int
jns
mov
mov
push
or
mov
mov
movsb
push
in
push
push
das
sbb
popa
out
stos
fnstenv
int
mov
xor
cmp
rol
adc
das
cmp
adcb
cmp
cmp
data16
test
jne
lock
jno
cmp
mov
lods
mov
out
lods
push
das
gs
lret
mov
je
xchg
lahf
dec
dec
in
popa
aad
jb
sub
mov
cmp
jns
xchg
inc
repz
xchg
orl
or
rolb
ja
pushf
in
or
mov
lods
mov
add
inc
cmp
lret
mov
mov
mov
iret
shlb
mov
xor
add
lods
leave
push
jl
aaa
xchg
iret
hlt
cld
dec
clc
lods
or
clc
pop
lretw
or
repz
or
data16
stos
movsl
dec
xchg
xor
mov
ja
jne
mov
repz
bound
push
dec
add
cmpsl
cwtl
and
inc
xchg
shlb
sahf
xchg
sahf
iret
or
loopne
sbb
sbb
je
or
xor
ja
cmpsb
cmc
fcoms
mov
shl
pop
xor
addr16
or
cli
jecxz
lahf
xchg
in
mov
repz
cwtl
incb
xor
pushf
and
jae
jne
lods
cmp
jmp
xor
push
jg
jae
in
arpl
out
xchg
shll
xor
out
out
data16
into
repnz
push
jmp
popf
fstpt
push
vpmulhuw
lods
test
dec
or
or
cmp
cltd
cmpsb
aas
mov
stc
sbb
cmpsl
inc
lret
jl
cmc
xor
js
jg
shlb
and
mov
xor
jnp
sub
cwtl
bound
mov
clc
fsubrs
aam
push
mov
aaa
jg
xor
pop
lahf
jp
fdivl
cmp
cmp
inc
push
std
jne
loopne
mov
cwtl
cmp
test
dec
cmp
xchg
jg
sahf
shrl
and
imul
ds
data16
pop
pop
or
aas
js
sbb
insl
or
push
dec
stos
mov
push
gs
loop
cmp
leave
xchg
pop
out
push
les
add
add
int
or
pop
adc
or
imul
fstpt
and
adc
lods
sbb
adc
pusha
std
mov
and
aad
cmp
bound
fcompl
push
sbb
std
add
fadd
add
je
pop
jne
aas
push
jo
stc
repz
fbstp
lgs
fsubl
ficoms
gs
push
scas
push
mov
cmpsb
or
popa
fldenv
clc
int
test
sbb
jle
mov
mov
cwtl
lcall
cmc
inc
out
repz
pop
sbb
icebp
mov
or
mull
stc
jnp
cmp
adc
sub
xchg
dec
test
mov
jecxz
adc
xchg
mov
pushf
inc
cwtl
adc
mov
clc
add
pop
dec
stos
cs
or
sub
push
inc
mov
jno
push
es
cmp
mov
dec
mov
test
test
lahf
add
aas
sbb
mov
jb
xchg
cmp
jge
jno
int
rorb
pop
sbb
mull
ja,pt
imul
sbb
in
jecxz
add
js
mov
sbb
idivl
jnp
sbb
push
bound
sub
inc
aas
ljmp
jae
mov
or
in
pop
out
imulb
push
add
xchg
mov
leave
lahf
push
and
xchg
dec
mov
pop
add
pop
daa
push
pop
cmpsb
stos
mov
xor
adc
cmp
data16
andl
pop
dec
dec
fstpl
jge
mov
mov
inc
lret
adc
shl
push
das
cmpsl
xor
pop
das
and
sbb
fdivrl
inc
mov
test
sarl
jge
in
dec
jmp
iret
call
fcomps
rclb
fiadds
jp
mov
add
xchg
push
arpl
test
stos
js
xor
adc
sahf
push
cmpsl
ds
ja
dec
add
rorl
xchg
jbe
mov
loope
add
xor
mov
sahf
hlt
or
cld
add
lea
adc
xchg
push
movsb
sti
imul
pop
adc
cmpsl
out
sub
pushf
pushf
dec
cmpsb
cwtl
mov
lcall
sbb
les
test
subb
loop
nop
out
dec
js
or
flds
decb
add
mov
xor
insb
lret
cmp
add
add
push
sbb
jecxz,pn
adc
add
jmp
sbb
insb
cs
sub
adc
into
and
pop
fistpl
xor
adc
jmp
idivb
sbb
shl
popa
out
xchg
xlat
mov
mov
jl
outsl
push
push
xchg
repnz
clc
xchg
lods
push
xor
cli
or
out
icebp
out
sbb
push
in
sub
clc
dec
add
xchg
dec
imull
mov
jne
test
out
pop
or
or
aad
fimull
fmuls
andl
and
and
mov
jns
mov
cwtl
mov
xor
add
cmpb
fisubl
add
imul
decb
pop
sub
mov
fimuls
and
mov
bound
out
xchg
sarl
cmp
out
jns
test
pop
cmp
sub
xor
add
cs
lahf
mov
mov
ret
ret
inc
dec
std
test
loop
subl
sahf
adc
mov
and
sbb
test
mov
pop
lods
arpl
jge
mov
sbb
insl
jecxz
lret
jp
mov
pop
sbb
sbb
loopne
adc
pop
aas
cmp
xor
xchg
cmp
inc
jp
xchg
push
fxch
adc
push
popa
imul
in
and
iret
or
sbb
inc
adc
outsb
es
jbe
xor
mov
out
movl
jbe
rorl
lret
outsl
xchg
cld
cs
sub
dec
in
xor
imul
ret
imul
rolb
adc
insb
push
shll
cltd
inc
xor
es
hlt
mov
xchg
dec
fidivl
sbb
cltd
pop
jp
jg
jg
jle
lds
and
in
lock
cmp
pop
aam
js
loop
xor
test
mov
jae
cmpxchg
pop
or
ficompl
xchg
jge
lret
adc
jmp
push
sbb
repnz
adc
jne
out
mov
mov
mov
insb
add
lea
pop
leave
shll
xchg
mov
lea
test
jl
xchg
and
jb
addr16
inc
popa
jne
lret
movsb
xlat
out
mov
pop
lahf
xlat
gs
lods
adc
push
fisubs
scas
ja
mov
mov
jle
jl
jae
int3
nop
mov
dec
cltd
repnz
testb
cltd
bound
add
mov
std
sub
inc
mov
mov
lea
pop
adc
mov
incb
push
push
leave
mov
sub
mov
pop
addr16
mov
mov
fldl
fildl
mov
clc
lods
jecxz
notb
jecxz
fs
dec
stos
push
and
lds
cltd
sbb
mov
fucomp
incl
test
stos
jle
lods
sbb
mov
xchg
aad
adc
adc
sub
mov
ret
mov
je
es
jbe
mov
test
push
mov
mov
out
mov
push
sbb
ljmp
loope
dec
test
movsl
mov
dec
std
call
pop
lods
pop
inc
mov
outsb
adc
popf
or
fdivrs
out
add
pop
test
inc
aam
cmpsb
ss
stos
push
movups
mov
mov
mov
pushf
mov
mov
jl
sub
call
jecxz
xor
pusha
addb
stc
fsubl
out
jp
fs
xchg
cmp
loope
mov
mov
dec
icebp
sbb
mov
mov
push
push
pop
add
shrb
and
add
cmpsl
cs
jp
mov
or
sbb
sub
add
cwtl
jns
in
in
lret
add
int
repz
adc
cmp
mov
pop
adc
lods
mov
loop
pop
mov
clc
pop
xorb
int
mov
int
cld
ret
sub
sub
aam
clc
in
sbb
or
cmp
cmp
popf
cmpsl
es
and
stc
in
enter
mov
xorb
push
cltd
jo
inc
addl
inc
mov
gs
mov
stos
stc
xor
insl
enter
add
push
push
push
mov
lds
pop
adc
test
and
sbb
xor
enter
cs
push
inc
cld
addr16
imul
repnz
mov
subb
push
cmc
push
fisubrl
dec
aaa
pop
xor
popa
repnz
and
notl
mov
nop
inc
adc
fwait
decb
test
psubb
fs
sub
push
out
sbb
pop
popa
jle
rcll
push
into
xor
pop
adcb
fstl
lock
in
inc
xor
adc
and
push
push
dec
stos
jns
jbe
addr16
jecxz
sbb
aas
cli
movq
jno
xor
in
xchg
scas
or
push
hlt
jbe
xor
icebp
ds
and
xchg
shrl
jge
in
dec
shl
loope
outsl
jb
je
sbb
jmp
ja
add
movsl
cmp
rclb
fistps
and
sbb
cmp
jmp
xor
inc
mov
stc
xchg
lret
cld
hlt
xchg
dec
sti
movsl
push
jbe
cs
mov
or
adc
adc
cmp
je
add
test
imul
test
adc
dec
sti
es
fildll
pop
arpl
lret
pop
ret
addr16
leave
loope
xchg
jno
into
rorb
pop
int
lcall
xchg
inc
cmp
sub
jp
stos
jno
dec
sahf
xor
sub
iret
adc
hlt
cmp
jle
mov
dec
mov
out
mov
ja
lahf
sbb
dec
aad
das
in
mov
cli
jne
inc
lcall
or
call
cmp
and
mov
in
or
xor
test
or
out
push
mov
outsl
popa
ds
gs
enter
cmp
sar
dec
js
addr16
mov
xor
push
pop
lret
cmp
test
xor
insl
rcrb
fs
adc
jecxz
dec
jae
push
xchg
jbe
aaa
mov
hlt
xor
loope
pop
mov
xchg
fiaddl
ljmp
dec
or
mov
movsl
push
or
mov
int3
loopne,pn
sub
loop
ja
aad
mov
subl
shrl
fcomps
xchg
mov
insl
shlb
mov
cwtl
sub
out
pop
mov
cmp
cwtl
xchg
shl
lods
and
sti
pop
dec
push
jo
out
jno
mov
mov
cltd
jo
xor
testl
enter
arpl
and
lods
aaa
repz
xchg
xchg
fistpll
cmp
ljmp
sahf
cmp
mov
pop
pushf
sbb
shlb
testb
daa
cmp
xor
jnp
pop
jb
mov
repnz
sub
popa
outsb
in
xchg
clc
insl
adcl
aam
loopne
cmp
mov
xor
fwait
mov
jbe
or
jl
cmp
addr16
addb
pop
and
and
jle
sub
dec
pop
js
or
sbb
cmpsb
jmp
mov
dec
test
jle
push
xor
cmp
subb
cmpsb
jmp
cmp
pop
dec
mov
test
ror
mov
mov
push
mov
stc
sub
dec
mov
stc
cmc
mov
adc
xchg
cld
pop
cmpsl
lcall
jne
out
pop
nop
push
mov
call
std
aaa
fldt
mov
je
aad
js
adc
inc
xchg
lds
xchg
xor
pop
data16
inc
mov
jns
adc
sbbl
lret
scas
push
mov
outsl
xor
js
cmp
mov
cld
nop
sbb
sub
shlb
mov
fs
xor
dec
clc
pop
fdivrs
stos
loop
jmp
push
popa
js
hlt
rcll
std
insb
mov
outsl
cmc
mov
adc
es
sub
pop
and
jecxz
pop
pop
jae
test
sub
int3
ret
cltd
fwait
stos
xchg
cmp
jmp
pop
scas
test
and
fsin
daa
gs
daa
inc
inc
shrl
fidivrl
out
pop
xor
test
pusha
cmc
mov
jb
inc
or
icebp
fidivs
dec
jbe
std
or
cwtl
add
cmpsb
addr16
mov
imul
dec
orl
adc
jecxz
popf
xor
inc
ljmp
pusha
bound
in
das
and
lock
and
in
sahf
sub
pop
cltd
sub
je
sub
sub
mov
and
loopne
ret
imulb
add
adc
jno
roll
pusha
sbb
mov
mov
pop
test
pop
rolb
push
mov
sub
xchg
dec
lods
into
cmp
mov
mov
outsb
xor
adc
jl
divb
mov
cmc
push
addr16
sbb
jne
fnstcw
out
dec
add
pushf
xor
dec
rcll
aaa
mov
inc
movsb
or
jno
sbb
pop
lahf
inc
cmc
ret
cmp
xchg
cmp
dec
rcrb
in
out
adc
mov
arpl
into
push
sbb
call
add
shll
roll
das
icebp
mov
mov
mov
push
push
xlat
mov
sti
or
mov
scas
iret
xor
mov
jns
adc
xchg
cmp
cmp
adc
inc
push
in
push
jecxz
jb
jmp
xor
aaa
or
movsb
gs
mov
out
sub
sarl
sub
pop
xchg
mov
sub
xor
shlb
outsb
mov
cmc
je,pn
mov
cmp
mov
cs
sbb
xor
shll
jbe
sbb
and
mov
loopne
and
iret
and
aad
popa
rcrb
inc
scas
in
xor
jnp
ror
xchg
xchg
xor
sub
add
cmpsb
out
mov
dec
jns
out
lea
mov
push
add
pop
loopne
xchg
mov
inc
push
dec
add
ds
or
mov
loop
shrb
imul
fwait
outsl
lods
rcrl
adc
mov
xlat
gs
aam
lcall
add
imul
inc
in
out
pop
popf
push
out
mov
cmp
std
mov
fimuls
jns
sar
cli
aaa
xchg
cmpsb
jecxz
and
enter
notb
pop
daa
fmul
loope
sub
inc
mov
jnp
enter
in
add
adc
rcrb
sub
repz
add
add
movsb
jp
pushf
sbb
scas
jno
sbb
int
and
jmp
shll
cmp
adc
sbb
es
mov
cmp
inc
dec
mov
fdivs
arpl
cmp
dec
adc
pop
cs
push
and
stos
cwtl
xor
inc
pop
or
cmp
movsb
clc
cld
repnz
aam
xchg
mov
lret
pop
aas
test
fwait
sub
xchg
shll
sub
inc
mov
pushf
insb
popf
xchg
test
inc
and
stc
xor
dec
popf
pop
sbbb
xchg
ljmp
adc
cmc
fisubs
pop
lahf
mov
push
mov
popa
ja
dec
push
lea
mov
jl
pop
jns
xor
pusha
mov
fnstenv
ja
push
cmpsb
pop
and
push
mov
and
js
cmp
cmp
mov
mov
or
test
pop
outsb
cmpsb
popa
sbb
jo
repnz
hlt
and
add
hlt
mov
pop
ljmp
in
std
or
sar
rorl
sub
arpl
sarl
ffree
xlat
sbb
push
jmp
roll
maxps
cwtl
jg
insb
sub
es
int3
mov
xchg
fsubl
jo
xchg
pop
sub
stos
out
sub
out
out
push
sbb
push
das
loopne
add
jbe
ljmp
iret
dec
fdivl
lea
in
add
js
mov
xorl
aad
jnp
das
push
imul
sysret
incl
cmp
insb
lret
rcrl
js
jp
xchg
out
loopne
adc
lcall
sbb
fs
jno
xor
loopne
shrl
testl
adc
lret
es
jae
lcall
push
sub
xchg
sub
in
in
notb
cli
mov
xchg
push
mov
mov
out
in
mov
sub
inc
iret
mov
leave
cmpps
push
inc
std
lds
movnti
mov
cmpsl
sub
dec
jl
and
xchg
inc
and
jae
sub
xor
jae
jmp
xor
inc
xchg
push
adc
lret
orl
dec
sbb
adc
clc
mov
adc
dec
dec
adc
push
mov
repz
and
and
push
or
pop
xchg
testl
mov
pop
aaa
mov
and
test
loop
movsb
or
xchg
mov
xchg
mov
ret
sub
aam
dec
pop
daa
shr
sbb
es
and
sub
ljmp
rorl
mov
pushf
push
xor
mov
push
jle
ss
addr16
jbe
inc
bound
test
mov
shrb
test
xor
cmp
jne
push
inc
add
add
jle
lds
int3
mov
cld
outsl
xchg
xorb
fsubl
sbb
adc
imul
xlat
jno
dec
sub
mov
out
lods
fiadds
and
cs
jne
movsl
mov
adc
repnz
fisttps
xor
js
jge
sub
dec
pushf
cltd
sarl
mov
sbb
pop
mov
inc
out
mov
jno
lret
and
dec
jl
ret
xlat
or
cs
xor
xor
lahf
sbb
sti
out
inc
imul
movsl
xor
inc
outsl
ss
cmpsl
and
out
sahf
xor
jmp
imul
dec
adc
in
mov
pop
jae
dec
lods
cltd
jb
iret
das
aam
adc
pop
xchg
jb
pusha
data16
stos
je
hlt
inc
popa
push
xlat
pop
xor
mov
lea
dec
pop
sub
addl
mov
dec
repz
mov
sbb
or
int3
jg
dec
ja
xor
out
mov
data16
inc
sarb
mov
mov
in
hlt
fsubrs
dec
sarl
out
mov
adc
add
gs
xor
pop
fbstp
lret
sti
shll
gs
sbb
fwait
cmc
jnp
out
pop
cwtl
sub
adc
jbe
jnp
out
mov
mov
push
push
mov
mov
fs
es
mov
jmp
scas
sub
push
arpl
and
data16
in
push
out
inc
xchg
cwtl
test
in
xchg
adc
pop
lds
jle
jno
xlat
and
fs
cwtl
sbb
jmp
xchg
add
pop
pop
movsl
inc
mov
jg
notl
out
in
mov
sub
adc
ljmp
out
cli
dec
push
aad
adc
addl
pop
jecxz
jg
inc
mov
and
cmp
outsl
jnp
fbstp
mov
test
or
xchg
push
dec
ficompl
addl
ret
jns
nop
mov
aas
jns
and
or
sub
test
aad
mov
sti
push
jno
loop
lahf
adc
cmp
sbb
aam
jns
popa
jb
mov
push
andl
popa
push
mov
dec
jb
jnp
int3
je
push
adc
xchg
xor
mov
pop
leave
ljmp
dec
das
fcmovnu
lea
or
jecxz
dec
loopne
sarb
cmp
xchg
cmp
clc
leave
aad
shll
std
xchg
xlat
data16
push
push
jp
sbb
lock
inc
outsl
or
lcall
in
or
push
dec
dec
or
jns
divl
fwait
push
xchg
lcall
pop
lcall
xor
pop
ret
jbe
adc
dec
call
js
xor
icebp
cmp
lods
push
dec
sub
mov
push
cmp
test
outsl
dec
fistps
out
cmpsb
in
push
pop
jmp
sub
mov
iret
loop
dec
test
push
sub
insl
sub
test
push
sbb
cmp
mov
and
jnp
rcr
push
cltd
cmp
cmpb
sbb
in
movsb
push
out
out
sub
xchg
ds
jnp
jmp
in
repnz
aam
fisubrs
loopne
pushf
ljmp
iret
int3
testb
stc
dec
cmpsb
xlat
dec
mov
aad
jnp
das
push
imul
sysret
incl
call
mov
data16
mov
push
out
xchg
or
xor
cs
push
cmp
std
push
mov
rorl
lahf
sahf
gs
inc
fsubrs
movsl
int
xchg
insb
mov
scas
sub
mov
push
jle
jecxz
mov
imul
jp
adc
and
cs
mov
cmp
jp
push
stc
jecxz
mov
imul
dec
fsubl
push
pop
jbe
mov
lods
mov
std
jo
fiadds
out
pop
sbb
daa
rcrb
lods
push
movsb
imul
cmp
push
adc
mov
push
cs
jge
sbb
out
cmpsb
imul
jge
jnp
ljmp
jp
xor
imul
sbb
clc
call
inc
sub
lods
stos
ljmp
xor
out
popf
adc
jecxz
pop
push
sub
sarb
ror
jl
cmp
inc
pop
test
jp
loope
jg
es
jle
rorb
cmp
shll
dec
outsl
mov
pushf
jne
or
push
sbb
in
xchg
fsubrs
sbb
insb
mov
int3
jmp
sub
mov
pop
xor
test
or
and
mov
mov
sub
xor
inc
les
incb
mull
xor
ljmp
and
out
lret
adc
cmp
rcl
movsl
sub
cltd
pop
pop
lcall
add
push
popa
lea
imul
lock
cli
daa
test
push
outsl
ljmp
mov
arpl
inc
jecxz
jo
into
pop
sbb
test
pop
mov
sbb
rcll
and
cli
inc
adc
aas
ljmp
inc
sub
leave
cmp
sub
aaa
scas
dec
iret
call
imul
dec
inc
data16
or
lods
sub
jp
or
aaa
jns
or
daa
call
cld
mov
cli
xor
cmp
sbb
int3
add
pop
shlb
dec
or
fwait
shll
sub
xor
sbb
jnp
mov
pushf
call
loop
mov
and
and
jb
dec
sbb
mov
push
cmp
dec
movsb
xchg
loope
insb
pop
mov
insl
adc
lods
idivl
sbb
imul
out
dec
mov
sub
scas
lock
int
shrb
aad
mov
dec
inc
jmp
ljmp
jmp
xor
sub
add
iret
dec
xor
xor
jmp
jl
rcl
push
and
out
imul
and
pop
lods
repz
and
movsl
shrl
repz
ss
push
jno
add
data16
in
loop
sub
and
dec
jl
push
inc
jb
fdivrl
fwait
push
lods
lods
ss
add
loopne
mov
or
mov
das
mov
icebp
jbe
add
xlat
in
rcll
fisttpll
add
rorb
scas
xor
insb
out
dec
rcrl
fiadds
pop
adc
xchg
popf
popf
inc
add
iret
sub
pop
pop
adc
dec
daa
jb
movsb
xor
xchg
push
shrb
call
int3
std
push
mov
mov
in
mov
cmp
pop
ret
andb
jae
cmpsl
ss
xor
ficompl
mov
mov
icebp
and
xchg
popa
fldt
insl
cmc
push
jg
lahf
add
sbb
mov
in
popf
stc
dec
icebp
mov
test
inc
test
test
test
mov
or
int
adc
sub
sub
sub
subb
data16
into
lret
rorb
jnp
aaa
dec
inc
in
adc
push
mov
sbb
vpslld
xor
pushf
scas
and
mov
cs
push
nop
ds
leave
fmul
in
push
cmp
int3
pop
or
sub
std
roll
lods
aam
fsub
loopne
adc
push
rcr
dec
add
adc
jno
lcall
cmp
out
jns
push
xchg
int3
adc
pusha
jns
insl
stos
test
rcrb
dec
or
clc
and
push
mov
or
cmp
insb
call
in
ljmp
lds
lds
cmp
test
or
dec
sbb
iret
dec
xchg
inc
movsl
and
les
insl
icebp
pop
dec
push
pop
loop
push
bound
pusha
mov
std
out
pop
jb
inc
popa
out
mov
lods
icebp
popf
mov
inc
les
sbb
push
jne
fwait
push
xchg
lret
popa
repnz
push
inc
adc
mov
shlb
jne
jge
pop
pop
push
cli
out
xorl
cmp
data16
call
jle
rcrl
test
mov
jbe
or
push
lods
clc
push
pop
cmc
mov
stc
loopne
pop
test
shrl
add
les
daa
adcl
mov
push
push
push
jbe
xlat
sti
mov
xlat
xor
jns
mov
in
mov
aaa
adc
fdivl
xor
jae
jne
jecxz
add
push
cmp
push
pop
bound
imulb
pop
adc
jge
repnz
or
pushf
mov
and
cmpb
addr16
stc
mov
sbb
jecxz
sub
pop
out
fs
and
mov
sub
outsb
add
aad
ljmp
rorb
push
outsb
xor
xchg
dec
sbb
add
lea
subl
cltd
into
insl
ret
fs
daa
imul
adc
push
push
loop
lret
and
aaa
imul
lock
cmp
fimuls
jb
aaa
bound
sbb
mov
mov
adc
jmp
inc
mov
dec
cwtl
adc
sub
nop
cmp
cmpsl
fwait
mov
insb
out
lea
xor
mov
dec
inc
outsl
or
push
xchg
mov
testb
popf
dec
pop
ljmp
insl
mov
hlt
aam
jb
out
loope
dec
xchg
mov
mov
sub
mov
mov
movsl
sbb
jp
lcall
leave
mov
inc
cli
sahf
mov
mov
cmp
sbb
fdivrl
ret
sbb
cs
out
xchg
je
push
mov
insl
aad
sub
daa
fisubl
xor
cltd
mov
cmpsw
pop
sbb
dec
mov
dec
inc
or
test
pop
rcl
int
jo
stos
push
inc
shrb
into
inc
push
dec
aas
movsl
imul
sub
aaa
adc
mov
jns
mov
jl
or
mov
outsl
cmp
xor
lret
testl
dec
pop
repnz
cmc
mov
outsb
inc
mov
mov
js
push
push
push
leave
push
push
or
or
mov
push
sub
fcompl
out
push
popa
push
cmc
jo
dec
xchg
nop
xchg
daa
or
sti
or
test
xchg
lea
fidivrs
mov
aas
mov
int
fbld
stos
add
cs
aaa
cmpsl
cmp
jmp
push
lods
fsub
and
adc
mov
lods
aas
pop
push
addr16
xchg
or
push
sbb
push
lret
pusha
addr16
mov
jb
mov
cmp
sbb
xchg
dec
jp
xor
imul
sbb
clc
call
inc
sub
lods
stos
ljmp
xor
out
popf
adc
jecxz
pop
push
sub
sarb
ror
jl
cmp
inc
pop
test
jp
loope
jg
es
jle
rorb
cmp
shll
dec
outsl
mov
pushf
jne
or
push
sbb
in
xchg
fsubrs
sbb
insb
mov
int3
jmp
inc
inc
stc
lret
or
jg
xor
imull
pop
movsb
adc
push
push
loop
lret
and
aaa
imul
lock
cmp
fimuls
jb
aaa
bound
sbb
mov
mov
adc
jmp
inc
mov
dec
cwtl
adc
sub
sbb
in
sub
cltd
jge
sub
push
test
xor
and
cltd
daa
sub
rcll
gs
dec
ret
sub
jno
incl
sahf
adcl
add
cs
xchg
call
movsl
mov
xlat
xchg
std
das
arpl
sbb
push
stos
cmpsb
mov
pushf
jne
mov
sub
pushf
cmp
xor
or
sub
stos
push
pusha
imull
in
mov
mov
es
es
dec
adc
lret
scas
push
fwait
sbb
outsb
jg
imul
sbb
jmp
cmp
and
movsb
aad
xchg
pop
jnp
jae
out
ret
cmpsl
xor
pop
jo
mov
sub
scas
outsb
fstps
dec
jmp
imul
push
add
jo
jne
adc
aas
mov
lods
add
pusha
adc
jg
pop
imul
mov
dec
stc
decb
loopne
adc
jo
push
mov
jns
sahf
insl
jp
mov
fwait
cmp
jo
in
inc
loope
jmp
nop
fnstcw
inc
jo
in
test
enter
rorl
mov
push
pop
fucomip
outsb
orl
push
lds
mov
sub
arpl
test
ficomps
or
jecxz
and
in
call
adc
jl
les
fadds
adc
cmc
push
adc
cmp
or
push
sub
psadbw
lds
jl
xchg
pop
lods
bound
je
shlb
or
lcall
jle
leave
mov
iret
bnd
in
cmp
ss
addr16
bound
scas
push
es
stc
mov
push
sbb
rorl
jbe
mov
jmp
mov
jge
mov
arpl
ret
add
fnstenv
mov
test
popf
cld
adc
subl
out
lock
or
sbb
ret
lods
pop
push
fldt
call
inc
mov
lds
push
faddl
push
imul
cld
lea
cmp
ficomps
cli
add
stos
rcrb
inc
pop
shl
or
in
nop
sub
fisttpl
mov
jecxz
aaa
xchg
push
cltd
inc
fucomp
jb
scas
fstpt
adc
push
push
and
push
push
xor
mov
rclb
cmc
idiv
cmp
xchg
sub
dec
clc
mov
mov
and
repnz
jns
cmp
mov
mov
or
ss
stos
sti
xor
or
jge
sub
jne
lods
iret
lods
jae
or
mov
xchg
sbb
fmull
push
in
ja
jmp
push
sbb
icebp
sbb
cmp
shll
aaa
xchg
xchg
mov
lods
aam
jae
movsb
insb
pop
xor
testl
xchg
add
popa
inc
mov
mov
into
data16
push
jbe
repnz
out
fldl
addr16
mov
push
inc
movsb
adc
gs
cmp
rcll
xor
and
arpl
xchg
subl
sbb
push
out
aam
inc
aam
outsb
push
or
and
dec
sub
ret
popa
sahf
jg
add
fcmovb
lods
jne
pushf
pop
clc
gs
xor
sub
push
sub
push
in
rcl
mov
mov
xor
mov
pop
push
stos
shl
fwait
cmp
sbb
cmp
fwait
mov
into
jne
lcall
les
fwait
mov
xchg
int
push
icebp
loop
lahf
aam
inc
loopne
stc
jno
dec
mov
shrl
pushf
repz
adc
les
lcall
cmc
mov
out
cmpsl
push
push
test
ja
ja
test
mov
stos
mov
and
js
dec
cmpsb
xchg
xor
loop
pop
or
test
push
push
add
xor
sub
mov
and
cli
push
pusha
lods
cwtl
iret
imul
inc
add
cs
rorb
outsl
pop
add
push
cli
out
pop
aaa
cmp
sbb
call
lock
xor
test
fstpl
and
dec
lcall
add
and
xor
outsb
insl
dec
jb
dec
ljmp
jg
fcmovnb
ljmp
mov
mov
and
xor
in
push
mov
pop
in
cld
int
stos
adc
in
sbb
repnz
and
cli
in
repz
stos
mov
dec
les
clc
fincstp
adc
iret
xchg
push
lods
stc
rcll
mov
pop
test
cmp
dec
lods
aas
dec
les
pop
loope
sub
int3
mov
mov
fcoml
out
fisubrl
mov
je
cwtl
cltd
loope
faddl
push
lahf
in
out
in
or
imul
lea
dec
add
and
testl
pusha
cmp
xchg
cmc
aas
loopne
movsb
stc
cld
mov
je
pop
sbb
dec
clc
inc
mov
dec
inc
repz
push
lahf
dec
loop
arpl
mov
imul
jl
aad
sub
xchg
stos
cld
ror
imul
mov
push
mov
cld
clc
fdivrl
in
push
fsts
push
gs
lret
pop
inc
jo
mov
and
mov
lcall
sbb
mov
and
mov
lea
cmp
int3
cld
sti
sarl
mov
arpl
stos
cmp
pusha
popa
jl
cmp
push
push
jne
nop
lahf
pop
push
jae
or
mov
adc
mov
mov
arpl
jg
mov
sbb
jne
mov
imul
jno
stc
les
pushf
sub
pop
xchg
push
jns
adc
sub
das
adc
lcall
push
shlb
mov
pop
jbe
jle
xchg
sub
xchg
and
xchg
and
pop
push
in
lret
dec
xchg
jae
cmp
xor
xlat
pop
sub
hlt
cmp
mov
rorl
jbe
mov
jmp
mov
jge
mov
arpl
ret
add
fnstenv
mov
test
cmp
cmp
inc
outsl
xor
out
push
xchg
shlb
data16
xchg
cmp
dec
push
push
leave
xchg
dec
shlb
xor
rclb
push
inc
nop
inc
add
sbb
lret
std
cwtl
mov
test
movsl
adc
jne
fisttpll
pop
jle
mov
in
rcll
fidivl
jbe
fmull
push
add
inc
or
les
push
cltd
movsb
jae
xchg
or
dec
daa
jo
dec
mov
stos
jnp
sbb
jecxz
pop
push
pop
jns
bound
lretw
jb
and
mov
cmpsb
jl
mov
xchg
ret
repnz
sub
fwait
aam
sarb
xor
das
es
cltd
xchg
dec
aam
shlb
scas
jp
sub
fimuls
jns
or
inc
js
cmc
lock
cmpsb
pop
fdiv
arpl
ret
and
clc
sub
out
les
cli
cwtl
les
sti
sbbl
dec
add
mov
clc
sbb
imul
pop
lock
or
inc
leave
dec
sub
xor
iret
call
imulb
cmp
aaa
sbbb
flds
and
add
pop
push
add
test
in
sti
ja
ss
jmp
outsb
iret
dec
xchg
pop
sti
fcmovu
cmp
les
jno
out
xchg
mov
hlt
stos
mov
push
cltd
xchg
mov
int3
jnp
xor
es
lret
outsl
dec
push
inc
test
sbb
lcall
push
clc
ja
sbb
adc
jmp
jl
inc
dec
push
jns
fstpt
push
xchg
pushf
jb
bound
in
push
aam
adc
fldl2t
xor
push
xor
pop
test
add
jo
adc
mov
dec
adc
xchg
cmpsl
pushf
and
popa
xchg
imul
dec
dec
mov
mov
repnz
test
xchg
cmc
fcomps
mov
test
mov
mov
mov
hlt
imul
test
test
in
push
sbb
test
jle
cltd
flds
mov
outsb
mov
in
jae
push
xchg
cmp
repnz
popf
cld
xorl
add
mov
hlt
pop
pop
in
cs
cmp
insl
dec
test
pop
push
dec
jl
mov
ret
mov
mov
and
cmpsb
jns
cmpsb
mov
stos
test
sbb
inc
ficomps
inc
mov
inc
inc
push
pop
jecxz
add
shlb
pop
dec
sahf
stc
enter
push
in
lret
lret
pop
xor
adc
inc
dec
lret
aam
or
fsubrs
push
xchg
xor
in
mov
add
aad
add
mov
jg
add
mov
lds
scas
dec
xchg
push
or
daa
in
mulb
in
add
lock
pushf
push
ret
aaa
mov
pop
xchg
sub
mov
js
dec
lcall
cmpl
pop
pop
scas
xor
lret
lret
mov
pop
add
xorl
into
lock
cmp
aam
jg
insl
adc
ja
pop
or
mov
mov
pop
sbb
or
or
loopne
cmc
xor
mov
inc
jns
aaa
add
inc
outsb
in
pushf
out
and
cmp
inc
sarl
dec
inc
out
mov
xchg
push
sbb
mov
imul
mov
testb
imul
pop
mov
imul
fidivrl
mov
cwtl
xor
fcoms
test
and
mov
pusha
daa
dec
call
sub
or
and
call
mov
mov
lcall
insb
aam
mov
rcrb
scas
daa
out
daa
push
mov
leave
mov
push
sti
imul
imul
imul
xchg
inc
in
sbb
push
outsb
lahf
orb
or
xchg
xorb
out
jns
pop
ss
inc
sbb
cld
insl
movsb
sbb
out
adc
cmc
adc
mov
cli
adc
rcll
icebp
fs
aaa
fmull
xor
mov
sar
daa
adc
jns
jl
bound
cmp
sbb
imul
cmp
sub
dec
cmp
mov
fiaddl
add
dec
scas
adc
mov
je
cmpsl
pop
repnz
dec
in
add
stos
mov
scas
push
jl
icebp
add
jb
xchg
jp
movsb
jl
or
cmpsl
jno
sar
mov
mull
or
jb
mov
mov
cmp
pop
fisttpl
jo
out
sbb
xchg
adc
test
jmp
mov
fists
incl
arpl
movsb
dec
arpl
rolb
sarb
adc
fisttpl
sti
lcall
testb
ljmp
and
clc
dec
in
jo
mov
pushf
enter
ljmp
cwtl
int
or
outsl
jbe
cli
or
push
mov
ret
pop
stos
popa
pushf
aaa
push
lock
jle
sti
fistpl
out
mov
adc
cmp
inc
cmp
test
lods
sbb
stos
adc
rorl
add
aaa
aaa
push
dec
xchg
pop
or
repnz
jge
mov
popa
pusha
jnp
aad
call
scas
jne
lods
enter
jo
jp
sbbl
roll
jae
in
movsb
fs
ss
push
incl
ret
dec
push
in
int
lcall
js
loop
dec
add
cmpsl
and
mov
jnp
ja
mov
mov
xor
mov
push
ret
mov
jnp
xor
xor
xor
iret
std
fwait
xchg
sub
push
lahf
arpl
pop
imul
adc
or
push
call
std
pop
in
aad
or
ret
jp
addb
mov
xor
jo
cli
xchg
push
movsb
enter
xchg
sbb
add
decl
test
adc
inc
stos
push
out
mov
fistl
pop
mov
push
xchg
stos
sub
cmp
adc
nop
ss
push
out
sub
pop
movsb
lahf
inc
insl
pop
loope
sbb
xadd
xchg
in
mov
fmull
push
inc
push
cmp
and
mov
mov
push
pop
fimuls
addr16
fsubrl
repz
dec
shrb
test
inc
xor
or
sbb
movsb
aam
mov
add
into
mov
shr
bnd
inc
push
or
pushf
aas
mov
jae
outsb
loopne
xchg
call
inc
bound
je
mov
mov
xor
xor
sub
or
push
leave
fucomip
adc
xor
in
or
sub
sti
arpl
fnsave
daa
test
cwtl
fildl
or
sbb
dec
fsubrl
cmp
inc
dec
mov
fucom
mov
int
pop
sahf
scas
mov
xchg
or
push
mov
lret
adc
sbbl
in
mov
cmp
xor
subb
daa
out
dec
notl
mov
cwtl
xor
jns
xor
adc
xlat
aam
and
add
adc
or
add
pop
sub
cmp
cmpsl
mov
aam
adc
fcomps
inc
ja
mov
jl
out
test
shrl
clc
cmpsl
adc
out
push
in
adcl
xor
lcall
or
xchg
add
push
and
push
aas
ret
dec
or
mov
push
inc
insl
hlt
fdivl
jbe
stc
adc
dec
jb
daa
or
mov
mov
fldenv
pop
and
push
jmp
mov
adc
sub
cmp
pop
and
xchg
jg
insb
dec
adc
imul
sub
cli
push
mov
int
out
mov
pop
jp
movsl
mov
jne
sbb
hlt
and
shrl
ja
xchg
lock
lods
imul
dec
call
add
movsb
es
clc
and
or
xchg
pop
xor
loope
imul
loop
xlat
flds
pop
mov
mov
popf
add
sub
mov
icebp
add
inc
adc
mov
xor
cli
jns
jecxz
sahf
jmp
or
jp
out
xchg
push
sub
jns
xchg
enter
test
xor
icebp
fs
push
clc
xchg
out
push
out
cwtl
cli
lcall
or
jge
sti
aaa
pop
mov
and
out
lock
aaa
icebp
arpl
fidivrs
push
xlat
vcmpps
sbb
out
jmp
aam
nop
xchg
es
shlb
into
out
repnz
mov
jbe
stc
adc
dec
jb
daa
or
mov
mov
fldenv
pop
and
push
jmp
mov
adc
sub
cmp
pop
and
xchg
jg
insb
dec
adc
imul
sub
call
sbb
ret
loopne
jae
xchg
inc
ror
sbb
xchg
push
mov
xchg
fsts
lcall
fidivrs
add
xor
cltd
cwtl
jnp
mov
sbb
clc
mov
or
addr16
sbb
mov
mov
sub
lret
pop
fisubrl
inc
les
mov
sbb
add
out
div
leave
aam
jmp
or
stos
cmc
sub
cs
xlat
inc
jg
adc
fldt
sbb
lret
cs
mov
scas
jbe
iret
repz
movsb
imul
call
and
shll
sub
xchg
xor
fwait
lret
mov
sbb
fsubrs
test
and
cmpb
pop
dec
inc
fcom
cs
cmp
mov
pop
adc
outsb
cmpsl
test
add
push
in
enter
outsl
pop
mov
xchg
sbbb
fs
in
xor
jbe
outsb
shrb
xor
shlb
add
mov
js
sub
adc
loop
cmp
inc
inc
lcall
pop
sbb
dec
sub
xlat
xor
inc
xchg
jns
xchg
xor
dec
in
dec
add
xorps
or
shl
push
f2xm1
das
aas
mov
mov
sahf
ljmp
mov
pop
mov
daa
push
sahf
iret
dec
xlat
add
icebp
arpl
outsl
maxps
cmp
inc
sbb
sahf
xor
xchg
push
jb
hlt
push
sub
xchg
shl
dec
je
js
test
insb
pop
outsb
nop
roll
bound
mov
adc
sub
dec
jns
push
inc
mov
add
in
enter
mov
test
xchg
sarb
iret
insl
jbe
fmuls
out
cli
adc
sbb
ficomps
and
xchg
cmp
aaa
in
insl
push
add
sbb
movsb
fwait
arpl
or
outsl
cli
andl
xchg
lret
loope
xor
lods
jo
testb
mov
add
rorb
aam
in
scas
mov
outsb
sub
xor
mov
daa
in
cmp
lahf
dec
ret
sbb
pop
divb
shlb
shlb
and
mov
pushf
sbb
cmp
sbb
jbe
test
jmp
subl
test
pusha
add
aam
and
ds
dec
repz
rorl
pushf
loope
add
arpl
cwtl
lcall
jg
clc
jne
clc
dec
or
lock
sub
mov
mov
xchg
cs
cltd
pop
movsl
in
leave
lea
dec
lds
or
add
push
sub
inc
aaa
repnz
inc
mov
pushf
jbe
mov
ss
in
adc
pop
mov
call
xor
jnp
outsl
fld
outsb
ljmp
pop
pop
sub
sbb
sbb
jg
push
jg
popa
or
cwtl
out
pop
imul
addl
inc
jl
push
nop
adc
or
mov
mulb
cmp
inc
jbe
and
sub
inc
xor
pop
call
add
add
adc
clc
pop
xchg
lret
jmp
mov
ja
lds
jge
push
cmp
and
xchg
inc
xchg
cmp
sbb
dec
in
in
cmp
arpl
frstor
inc
push
lds
inc
cmp
faddl
mov
add
inc
repz
insl
dec
enter
das
jmp
cmp
sahf
pop
movsb
ja
ret
cmp
adc
push
xor
add
push
mov
adc
lea
cmp
dec
add
mov
or
sbb
loope
mov
fs
adcb
push
out
sbb
lret
xor
test
pop
dec
lret
fwait
pop
lret
lea
push
lahf
daa
inc
push
loop
into
mov
mov
add
loope
stos
sarb
aad
imul
mov
mov
xor
out
enterw
clc
mov
pop
sbb
sub
xchg
add
pop
push
mov
jnp
mov
mov
filds
outsl
les
and
pop
inc
add
push
je
push
jnp
and
xor
or
push
subl
sahf
mov
dec
jnp
sahf
push
mov
sub
push
inc
popa
push
push
dec
inc
popa
imul
std
push
or
stos
fsts
or
int
dec
in
mov
icebp
movsb
cmc
pop
ret
mov
sub
ljmp
jnp
fsubrs
pop
sbb
test
inc
das
jno
push
sbbb
insb
rcll
xorl
outsb
stos
xor
push
out
std
mov
aaa
mov
sahf
sub
leave
stos
movsl
es
into
jnp
fwait
rclb
roll
mov
out
std
cmp
xor
int
imul
sbb
stos
inc
enter
not
sub
es
shr
pop
ret
das
adc
and
fnstenv
sbbb
bound
iret
sbb
push
xchg
mov
loope
push
cmpsb
xchg
ret
inc
pop
sahf
mov
mov
aad
cmp
inc
xor
inc
mov
aad
ja
imul
jge
sbb
push
shlb
mov
lcall
aad
test
sbb
mov
out
xchg
lock
repnz
push
cwtl
popf
add
fists
push
int3
mov
lds
inc
mov
lock
int3
movsb
jae
popa
adc
jb
mov
rclb
sbb
in
outsl
adc
fidivrl
xchg
sub
dec
jne
sbb
call
jo
mov
bound
ret
aas
adc
dec
or
arpl
mov
data16
ret
push
push
pop
aaa
jae
inc
mov
xchg
lret
je
outsb
fisubs
push
lret
lret
mov
pop
int3
mov
js
addr16
lret
push
xor
scas
mov
rcr
or
mov
jge
loopne
notb
fdivrp
cmp
leave
mov
data16
mov
rorl
fbld
jle
cli
lock
mov
frstor
imul
data16
inc
mov
push
fsubr
push
mov
push
addb
or
sbb
fnstenv
out
cmp
sbb
fwait
and
in
divb
sbb
icebp
sub
enter
add
cmp
roll
sbb
ret
movups
stos
add
out
xchg
or
jns
mov
iret
mov
add
sbb
pop
mov
and
sub
sarl
push
cmp
imul
stos
and
push
lock
lea
lret
cli
sbb
xchg
js
test
test
and
xlat
jecxz
and
int3
sbb
in
out
inc
mov
adc
aaa
outsl
xchg
imul
xor
mov
andb
aam
inc
and
cmp
xchg
jle
adc
adc
in
subb
dec
test
push
fadd
dec
xchg
fistpl
mov
adc
jae
mov
stos
insl
movsl
fucomi
jno
or
cli
push
sbb
cld
dec
mov
jmp
clc
lret
mov
movsl
add
lret
mov
int
sub
push
cmovbe
mov
push
lea
imul
insl
loop
add
roll
push
in
add
sbbl
xchg
push
or
sbb
sub
inc
pop
faddl
xor
sbb
out
jg
adc
push
fwait
lret
cmp
test
aam
sub
arpl
repz
mov
into
popf
daa
fwait
and
mov
sti
lret
push
xor
scas
mov
rcr
out
add
jo
xor
fadds
dec
adc
outsl
jae
jne
out
dec
aas
add
pop
stc
or
and
cmp
sub
fnstsw
xor
je
sbb
popa
xor
pushf
dec
lret
pop
jmp
and
and
notl
inc
mov
inc
push
lahf
inc
and
pop
lcall
icebp
in
pop
add
data16
jl
test
sub
nop
in
dec
enter
divb
insl
mov
cmp
shr
inc
std
call
es
lret
mov
adc
push
push
inc
add
adcb
imul
xorl
pop
mov
mov
mov
imul
mov
or
loop
cmp
inc
fs
ljmp
test
pop
fmuls
addr16
push
push
aaa
mov
jne
add
dec
adc
test
dec
pop
repnz
call
aas
lcall
pop
arpl
jnp
leave
cmc
iret
jbe
sbbl
pop
sbb
add
lret
xor
fwait
mov
pop
xchg
mov
aas
dec
test
pop
notb
inc
xchg
dec
lods
and
clc
pop
mov
mov
in
outsb
rclb
add
frstor
sub
ja
xchg
addr16
lcall
mov
ljmp
mov
push
sbb
or
shll
test
call
fadds
sarb
mov
std
or
scas
shlw
lock
mov
push
insl
mov
cli
sbb
mov
mov
imul
add
mov
or
pop
xor
das
out
fimull
lock
fldenv
mul
sub
push
sbb
lcall
sahf
insl
push
add
leave
addr16
jp
pop
lods
push
mov
sub
sbb
loopne
xchg
xchg
sub
xorb
mov
out
aaa
sub
or
sbb
clc
add
xchg
mov
movl
stc
push
cmpsl
mov
sbb
stos
jnp
cltd
loopne
pop
xchg
stc
movsb
fbstp
mov
xchg
shl
clc
std
dec
xchg
xchg
loop
adc
repnz
pop
lock
scas
mov
rsm
mov
call
loope
or
lret
mov
repz
jge
jae
mov
stos
mov
jecxz
ss
ror
dec
fimuls
adc
xchg
hlt
test
lea
xchg
faddp
shr
dec
lods
sub
fld
notl
rclb
mov
and
adc
adc
adc
inc
stc
mov
cmpsb
jmp
andl
jle
fstpl
int
stc
push
sub
std
das
clc
xchg
in
adc
repz
lcall
xchg
movsl
call
pop
lds
imul
enter
xor
idiv
xor
stc
add
out
xor
cmp
ss
loopne
jne
jmp
mov
xchg
sbb
sub
inc
xchg
gs
ret
xor
idivl
ja
dec
in
jle
lock
loopne
jo
rorl
adc
fsubr
add
jle
out
pop
shrb
inc
mov
rorl
lds
add
or
in
push
ljmp
mov
out
ljmp
or
movsl
sahf
jnp
jmp
stos
jge
cmp
faddl
mov
add
cmp
test
pop
leave
pop
jbe
lret
in
imul
jne
cmc
jecxz
sbb
jbe
inc
dec
mov
fidivrs
xchg
xlat
mov
mov
xchg
mov
addr16
pop
iret
scas
jmp
out
add
push
mov
xchg
xor
js
or
stos
mov
inc
mov
push
dec
jo
cmp
ss
sbb
pop
call
cmp
dec
adc
inc
sub
jmp
push
hlt
and
add
cmp
ja
rep
jne
jmp
sbb
sub
xchg
xor
mov
sub
rolb
cs
lock
pop
sbb
ljmp
push
pop
push
xchg
fsubrl
pop
out
pop
mov
pop
fwait
mov
aas
lret
cmp
outsb
imul
int
bound
cmp
mov
jge
jns,pt
imul
or
bound
cmpsl
imul
push
xchg
cs
dec
xchg
xchg
test
jne
aas
scas
add
inc
dec
jb
sbb
lret
or
dec
cmp
push
xchg
in
stc
sub
ret
scas
mov
or
jl
mov
loope
adc
xor
adc
insb
mov
dec
popf
jne
mov
imul
pop
rcl
jg
ljmp
jno
ds
rcrb
aam
lods
in
push
andl
push
mov
pop
adc
jno
imul
and
and
jnp
add
fyl2xp1
popf
dec
frstor
push
add
mov
push
js
adc
pop
mov
dec
nop
push
lds
push
filds
cmpsb
sbb
push
xchg
dec
gs
dec
dec
fidivrs
int3
mov
jp
jmp
leavew
xchg
int3
inc
mov
adc
cmp
mov
jne
nop
cli
outsl
aam
sbb
fs
leave
mov
mov
fwait
mov
ficoms
arpl
fmul
cmp
add
nop
loopne
inc
loop
pusha
popf
nop
sarl
push
jbe
cmp
test
mov
aas
mov
dec
lret
jecxz
arpl
sbb
xor
in
add
or
ret
ret
jge
xchg
sbb
repz
adc
lods
dec
in
inc
and
dec
test
loop
mov
shrl
ror
push
push
sub
jnp
cmpsb
rclb
pop
repz
cmc
subb
repz
loope
ljmp
and
js
stos
sbb
pop
jg
mov
outsl
aad
pop
sbb
int
sbb
push
mov
jg
sbb
mov
xor
je
cmp
cmc
rcr
mov
lock
and
leave
mov
jne
jecxz
sub
sub
mov
inc
or
popf
loopnew
jb
xchg
dec
push
and
nop
xor
fnstsw
fsubrs
push
icebp
sub
mov
xor
sti
call
outsb
jne
adc
mov
pop
loop
jl
jge
hlt
loop
pop
cld
insl
movsb
sbb
out
adc
cmc
adc
mov
in
imul
jb
sbb
imul
fdivr
cmp
pop
add
scas
cmp
mov
out
jno
test
push
aas
mov
mov
inc
testb
movsb
movb
push
imul
aam
mov
rcrl
sub
cwtl
mov
inc
js
pop
mov
aad
jae
push
pop
adc
xchg
sbb
imul
xchg
iret
jl
mov
mull
jmp
in
pop
lods
out
or
sbb
fs
test
mov
out
dec
mov
stos
jb
sub
out
mov
push
fldt
xchg
clc
scas
loope
in
add
aad
ret
xchg
data16
cmp
bsf
clc
into
lcall
cmp
insb
ja
inc
xor
pusha
cld
pop
shll
testl
outsl
or
jg
aam
xchg
add
std
dec
popf
push
push
ds
jmp
notb
mov
fadds
mov
jl
adc
xchg
imul
mov
test
add
repnz
xor
scas
arpl
fsts
test
and
adc
push
jbe
popf
repz
dec
pop
jmp
mov
sbb
cli
aaa
inc
int
adc
movsl
scas
xor
fcomi
out
test
push
mov
stos
emms
lds
stos
sbb
xchg
push
ja
cli
pop
outsb
add
mov
jae
add
fimull
sbb
adc
sti
jge
mov
lock
shll
fs
ss
addl
dec
nop
sbb
es
je
lods
call
sub
dec
mov
dec
xlat
dec
dec
or
cmp
xor
and
adc
pushf
cmpsl
stos
xor
mov
dec
aaa
in
fsubs
dec
pusha
shll
imul
hlt
test
pop
sub
mov
out
inc
sbb
rcr
ds
inc
fwait
aam
jb
lcall
inc
out
mov
push
jnp
out
cltd
adc
lea
push
movb
sub
dec
ss
out
inc
push
dec
push
dec
adc
je
mov
add
mov
shrl
pop
leave
or
mov
mov
fldl
push
xchg
xchg
mov
add
mov
test
lcall
pop
out
jge
out
mov
mov
push
or
ljmp
cmp
fdivrp
cmp
leave
mov
data16
mov
lahf
dec
fldl
dec
out
pop
mul
aam
dec
lahf
movsl
rep
dec
cs
inc
jbe
cld
pop
fs
decb
fistpll
std
outsl
pop
aas
addl
or
out
or
pop
popa
cmp
ds
sbb
xor
scas
sbb
jo
int3
aad
mov
dec
xor
jl
jmp
sbb
dec
fidivs
pop
fldenv
pop
std
mov
dec
and
mov
pop
xchg
cmp
enter
add
mov
mov
push
es
shl
mov
inc
hlt
mov
stc
adc
pop
pop
sub
jns
sahf
in
inc
mov
mov
andl
mov
arpl
test
mov
xchg
add
pop
cmp
dec
push
xorb
je
shrb
sbbb
repnz
in
mov
fistpll
aas
cmc
out
xchg
mov
sbb
xor
dec
pop
andb
ficompl
and
icebp
sub
mov
pop
ja
filds
loopne
mov
adc
jae
arpl
clc
cmp
ss
aaa
in
lds
nop
lret
ret
lret
sar
imul
xchg
stc
mov
xchg
and
sti
mov
ret
stc
adc
stos
adc
arpl
mov
fwait
xchg
jle
out
mov
ret
mov
dec
es
bound
mov
mov
js
pop
loope
xchg
push
xchg
sub
or
push
mov
idivb
dec
lock
lds
and
insb
or
loop
xor
pop
jbe
lods
mov
hlt
and
sub
pusha
rorl
mov
cwtl
iret
subl
lods
das
sub
pop
add
adc
flds
mov
cld
push
sahf
mov
cmp
mov
inc
in
pop
cltd
lcall
add
sub
xchg
dec
test
inc
shll
imul
push
or
sbb
cmpsl
inc
mov
mov
lret
in
push
dec
daa
daa
pop
pop
fadds
xchg
test
imul
shll
lahf
fistpl
popf
mov
xor
out
push
push
and
push
ret
pushf
mov
rorb
aam
add
pop
adc
push
inc
psrad
xlat
jns
jp
jecxz
lods
adc
mov
sbb
push
and
cmp
push
icebp
das
add
dec
fwait
jg
sub
sbb
sbb
pusha
je
stos
jl
ds
addr16
xchg
stos
das
sbb
in
pop
jbe
in
lods
xchg
hlt
dec
pushf
xchg
mov
icebp
in
mov
insb
and
in
mov
leave
div
stc
divb
push
mov
adc
inc
mov
and
jl
xchg
dec
lahf
dec
shrl
cltd
xchg
lods
dec
into
sbb
fs
call
stos
pop
push
orb
jns
inc
mov
push
fldt
popa
push
jae
mov
aaa
inc
jae,pn
ja
xchg
push
mov
push
imul
cmpsl
dec
jge
xor
scas
fwait
xor
sahf
movsl
int3
push
test
mov
and
out
pushf
push
ret
aaa
mov
pop
xchg
sub
or
lret
push
cmpsl
sbb
fldt
repz
stos
push
xchg
dec
sub
pop
insl
insb
cld
mov
xchg
loope
adc
ljmp
pop
popa
adc
inc
or
push
pop
sgdtl
sbb
or
jecxz
inc
mov
notb
pushf
pusha
ret
xor
mov
pushf
adc
adc
sbb
adc
pop
xor
jge
push
and
push
aam
cwtl
fwait
dec
xor
mov
js
sbb
inc
in
add
xor
push
push
in
test
daa
pop
jle
mov
xchg
in
inc
xchg
outsb
jae
jno
es
push
lcall
lahf
in
inc
sahf
mov
add
ror
ss
hlt
ljmp
add
sub
inc
add
nop
aas
fs
or
ss
jecxz
shlb
lret
mov
cld
cmp
jo
jae
nop
je
jne
pushf
lcall
xor
mov
or
mov
es
sub
jecxz
adc
dec
out
data16
push
jne
xchg
mov
jle
cmp
movsb
xor
rolb
aam
lock
xor
or
xrelease
mov
test
mov
movsl
mov
add
pop
daa
fisubl
xor
cltd
mov
cmpsw
pop
sbb
dec
mov
dec
inc
or
test
pop
rcl
int
jo
stos
push
inc
shrb
out
cwtl
aam
es
xor
imulb
cmc
sti
jbe
lret
xor
es
or
pop
ret
std
sub
push
fisttpl
lcall
or
outsb
mov
aam
clc
movsl
push
lahf
add
icebp
jg
and
mov
lahf
xchg
cs
add
into
lods
pop
jp
jb
xor
jp
mov
fs
or
push
or
xchg
cmp
aaa
and
xor
stos
mov
enter
push
data16
xchg
jle
out
add
sub
outsb
mov
repz
xor
mov
repz
push
lcall
sub
sub
cmp
nop
jno
fisubs
in
in
mov
int
stc
mov
xor
pop
sub
stc
aaa
into
inc
dec
test
inc
jnp
dec
pop
or
dec
in
cmc
idivl
pop
xchg
mov
call
sub
sbb
or
sbb
sub
loop
push
sbb
repnz
mov
out
out
inc
aam
int
test
dec
shl
mov
das
xchg
mov
dec
stos
mov
mov
psubusb
outsb
rorb
fs
dec
mov
daa
les
popa
and
dec
je
xchg
mov
jg
mov
jp
out
xchg
adc
sub
data16
sbb
cmp
pop
inc
xchg
xchg
mov
mov
pop
mov
jecxz
fcmovne
jo
or
mov
test
sbb
shlb
jmp
dec
mov
lock
filds
push
inc
test
mov
lds
mov
mov
push
lea
pop
jno
stc
mov
outsb
xor
cwtl
xor
lret
xor
mul
mov
push
stos
pop
dec
nop
mov
leave
pop
add
mov
cli
jnp
repnz
fstpt
mov
jg
lea
sti
das
aaa
hlt
jns
int
inc
mov
daa
jge
fdivrp
pusha
xchg
shr
xor
cmpsb
push
iret
lret
sahf
add
push
adc
mov
shlb
stos
int3
dec
push
dec
fsubl
divb
jl
mov
mov
dec
shrb
dec
jmp
cmpb
mov
pushf
sbb
or
dec
jae
inc
dec
into
push
divb
stos
xor
call
mov
sahf
test
adc
inc
in
daa
mov
out
std
lret
or
push
bound
sbbl
sub
fadd
ret
mov
fsubs
fwait
in
lock
sbb
push
rolb
lods
filds
xchg
test
xchg
dec
xchg
inc
rcll
pop
addl
dec
xor
xor
lea
and
fsubl
lods
sub
addb
dec
inc
lea
dec
inc
lds
imul
stos
sbb
loope
jnp
andl
aas
mov
inc
mov
insl
mov
test
ja
je
rorb
addr16
inc
inc
inc
lods
out
mov
xchg
and
fstpt
stos
iret
mov
sub
sarb
fidivs
xor
jae
xor
or
add
inc
inc
pop
je
jmp
xor
les
data16
or
repz
int
and
decl
pop
enter
jp
jmp
inc
mov
mov
mov
movsb
cltd
std
cwtl
mov
xor
in
mov
test
daa
cmp
fidivs
mov
xchg
loopne
sub
xchg
add
pusha
ljmp
fldcw
insb
sbb
sete
sub
xlat
loope
sbb
enter
cmp
mov
or
lods
pop
sti
jl
scas
or
add
dec
shrl
int
dec
jg
hlt
and
arpl
pop
mov
or
test
dec
cli
and
repnz
xchg
lds
cmpl
and
jne
inc
pop
mov
out
push
pop
popf
orl
mov
dec
adc
pop
shr
popa
sbb
push
cli
mov
mov
test
std
adc
jg
and
leave
sbb
ljmp
mov
repz
js
mov
loop
popf
xchg
push
push
outsb
mov
fcompl
fs
cld
jns
cmpsl
test
mov
popf
out
inc
out
aad
loopne
jo
pop
out
rclb
push
add
call
loop
fs
pop
daa
sti
mov
and
cmp
cltd
push
popf
sbb
movsl
shrl
repz
jo
pop
add
int3
push
loope
mov
sub
mov
mov
in
sbb
dec
cli
sub
jae
scas
mov
frstor
jbe
add
ret
nop
and
xlat
lret
ficompl
jo
mov
outsb
or
adc
pop
rcl
fsubrs
cs
aaa
out
sbb
pop
aas
mov
adc
daa
loope
int3
shr
sahf
jmp
cmp
in
clc
and
sbb
sub
stc
jg
sarb
mov
fcoms
dec
adc
js
mov
mov
fnstenv
sti
xchg
inc
repz
mov
mov
movsl
popf
mov
xor
pusha
and
fnstenv
mov
ja
and
out
xchg
sbb
lock
push
lods
movsl
outsb
xor
arpl
xchg
mov
ret
jmp
enter
dec
aad
push
sbb
testl
cmpsb
fistps
mov
dec
dec
leave
sub
jg
movsl
lods
sub
lcall
mov
inc
xchg
sti
inc
insb
adc
mov
mov
das
daa
scas
pop
add
push
adc
flds
dec
loopne
mov
sub
sub
inc
insl
mov
cli
jge
add
lcall
aam
dec
push
stc
outsb
loope
fdivrs
imul
mov
inc
mov
xor
dec
mov
sub
add
add
push
and
js
fmuls
pop
fsts
and
lods
cmpsb
xor
xor
jno
fisubrs
and
xchg
ds
xlat
mov
push
stos
cmp
sbbb
inc
aaa
bound
adc
push
popf
ret
sahf
jns
jmp
add
ja
push
and
add
adc
icebp
loop
out
mov
sub
push
jl
push
fdivs
enter
sahf
push
rcl
cld
pop
sahf
int3
int3
and
in
icebp
xlat
pop
scas
fsubs
sub
test
ud1
stos
push
push
mov
push
xchg
icebp
int3
mov
out
or
push
xlat
mov
adc
inc
xchg
xor
sub
add
fidivl
pop
pop
jmp
xchg
stos
movsb
mov
push
sbb
jp
jmp
pop
clc
cmp
sbb
pop
mov
jbe
ficomps
dec
fsubs
inc
inc
jmp
ljmp
dec
movsb
out
jb
rcrb
ljmp
push
sarb
add
clc
mov
inc
aad
gs
scas
jp
add
movsb
outsl
push
cmp
repz
addl
mov
or
test
in
jno
aas
inc
lcall
xor
aad
jl
je
mov
or
jmp
das
mov
pop
rcrl
add
push
out
xchg
push
xchg
enter
cmp
stc
movsb
xchg
or
lahf
pop
std
fst
push
test
das
push
cmp
push
add
or
sub
jecxz
sbb
lods
and
fbld
roll
lods
mov
mov
pop
loopne
adc
sub
movsb
mov
movsb
minps
ret
pop
icebp
or
out
or
inc
jb
add
ja
add
jecxz
push
mov
sti
add
das
jb
pop
insb
jg
stos
repz
ret
xchg
dec
pop
fmuls
push
idiv
sbb
fsubs
repnz
add
xor
popa
ret
or
mov
jmp
pop
cmp
loop
imul
js
rcrl
pushf
gs
loope
nop
in
jmp
cmp
cmc
dec
xchg
out
sbb
inc
and
mov
xchg
stos
dec
pushf
mov
lret
jle
mov
cli
enter
jnp
push
insb
movsb
int3
dec
enter
inc
mov
push
pop
adc
xorl
adc
mov
shrb
or
rcll
pop
fmuls
jp
xchg
lods
insb
push
lock
and
add
jle
dec
mov
rcll
loope
popf
pusha
dec
shrb
daa
dec
iret
imul
inc
ret
push
mov
xchg
xor
pop
mov
pushf
ffreep
testl
adc
sbb
or
popa
push
jl
add
push
scas
in
ret
jne
mov
add
sub
jae
lds
inc
xchg
xor
mov
inc
xchg
add
add
sub
push
in
jns
sbb
test
mov
cmc
lret
pop
clc
imul
xchg
mov
outsb
sbb
xchg
xor
sbb
test
adc
sub
inc
adc
push
pop
addl
xor
xor
push
test
fiaddl
ret
pop
jbe
mov
xlat
sub
aad
gs
int
lret
mov
jb
repnz
push
fmuls
mov
cmpl
adc
sub
mov
mov
cmp
mov
lret
loopne
cmc
addr16
std
test
inc
movsb
pop
jo
ds
lds
jp
cli
rcrb
and
and
jmp
xor
lock
pop
pop
sub
xor
outsb
repz
push
push
pop
jb
inc
jp
cmpb
outsb
rorl
dec
pop
jmp
sub
mov
add
mov
fistps
mov
into
dec
mov
jns
hlt
out
mov
dec
ja
lea
lcall
mov
push
pop
or
pushf
jge
hlt
fisubrl
sub
subb
push
nop
inc
stc
cmp
popa
int3
fdiv
and
into
mov
or
xor
pop
je
ja
das
std
fists
stc
bound
cld
pushf
stos
add
push
xchg
lea
test
adc
fldenv
pop
mov
xchg
adc
mov
inc
or
or
cmpsb
inc
and
mov
xor
in
jmp
xchg
repz
faddl
push
pop
push
mov
jnp
repnz
mov
push
mov
push
lret
int3
sub
iret
push
jl
insl
and
add
jp
push
fwait
xchg
inc
loopne
sbb
dec
insb
nop
add
leave
add
xor
cld
addr16
adc
and
push
mov
pop
sub
je
mov
fucomip
push
push
mov
ret
out
sbb
aas
cmc
xor
negb
out
xor
push
shll
mov
dec
and
cmc
loope
aad
adc
lea
xor
or
cmpsl
push
das
push
mov
loop
mov
incb
in
jle
mov
shl
movb
push
mov
inc
mov
sbb
and
cld
mov
xchg
mov
repnz
add
xchg
mov
push
sub
sbb
dec
push
push
add
mov
mov
xchg
ret
mov
inc
repnz
inc
xchg
scas
fidivrs
push
push
popa
popf
pop
jb
movsb
outsb
sub
out
mov
add
stos
sub
stc
xchg
xchg
lret
scas
xor
ret
mov
add
push
jnp
jb
enter
jl
and
jnp
pop
cmp
loopne
sbb
xor
and
out
sub
pop
or
push
loop
jp
add
aas
jo
xchg
sahf
inc
pop
popa
and
jle
push
push
aad
mov
push
imul
shl
imul
outsl
jns
pop
rolb
aad
nop
sbb
mov
out
dec
adc
add
sub
lock
js
fucomip
lcall
das
mov
sbb
xor
stos
add
push
sub
xchg
sub
push
inc
and
gs
imull
rcrl
pop
add
inc
lock
hlt
mov
lds
fadds
icebp
popf
mov
sub
dec
ds
incl
cmp
and
iret
lret
mov
pop
inc
pop
push
xchg
jbe
cmpsb
lods
popl
and
lock
mov
inc
scas
mov
jp
cld
mov
xchg
cmp
lods
imull
leave
sbb
push
dec
jl
and
xchg
inc
and
jae
sub
xor
jae
mov
stos
scas
mov
stos
pop
imul
xchg
dec
cmc
les
sub
cld
testl
bound
mov
hlt
jb
mov
bound
dec
jp
out
sbb
call
pop
jne
insb
aad
imul
cmp
cmpsl
insl
xchg
clc
pop
cmc
xor
clc
xor
out
iret
adc
or
ud1
and
stos
aas
sti
shlb
xchg
xchg
daa
dec
lea
data16
jo
stos
scas
mov
jge
xchg
movsb
shll
lret
push
std
fsubrl
mov
add
jns
jmp
push
mov
dec
or
loop
cmp
stc
sbb
leave
dec
icebp
mov
push
cmpsl
fnsave
adc
push
out
test
xor
dec
xor
push
mov
mov
test
bound
xchg
mov
repz
push
popa
lret
or
mov
stos
cltd
fs
jge
in
repz
enter
dec
pop
xchg
aaa
jmp
lcall
inc
arpl
xlat
test
mov
cmp
sub
mov
push
stos
mov
ja
xchg
xchg
in
xchg
ja
dec
mov
jno
cmpl
loope
jge
mov
mov
insl
movsl
jbe
jl
and
dec
aas
or
jbe
add
loopne
repz
pop
jmp
inc
scas
lcall
jge
push
or
bound
cmp
mov
out
dec
or
push
xchg
push
data16
inc
out
xchg
insb
sbb
imul
xor
sub
adc
popf
xlat
xchg
ja
mov
jge
add
sbb
xchg
jae
sti
fcomps
lret
out
push
push
add
stc
and
fidivrl
mov
jp
mov
jne
jnp
popa
imul
test
rorl
mov
lds
pop
sub
dec
lcall
push
cltd
shrl
insb
mov
push
jle
sub
inc
xchg
test
enter
jl
mov
cmp
mov
rorl
mov
add
cld
pop
ljmp
or
stos
pop
add
xor
repnz
inc
or
repnz
jae
dec
xchg
jle
inc
repz
cmp
daa
xor
cmp
prefetch
or
mov
outsl
push
ja
lds
xchg
mov
jnp
push
movsb
lcall
jp
inc
add
pop
and
xor
lock
mov
mov
or
jne
xlat
xor
std
push
sbb
inc
jmp
and
sub
inc
or
adc
imul
jb
hlt
test
jne
pusha
xchg
mov
stc
lods
mov
or
xchg
mov
in
mulb
test
adc
in
test
xor
fs
sahf
mov
out
fiadds
push
mov
pop
sbb
xchg
in
mov
ljmp
out
out
ror
inc
jmp
bound
movsb
inc
lcall
imul
jno
fwait
jg
cmp
lds
xchg
adcb
ja
jecxz
loopne
cmp
cmp
push
imul
stos
cwtl
aad
rolb
test
xchg
imulb
mov
adc
pushf
jo
movsl
mov
loopne
dec
push
incb
scas
mov
movsl
lcall
lret
inc
aaa
leave
out
or
cmp
stos
mov
lods
inc
adc
pusha
mov
xchg
push
sahf
loop
or
jns
lods
push
ret
fwait
push
out
push
pushf
popf
and
xchg
push
lea
outsb
dec
mov
popf
add
lea
ljmp
fisubs
testb
push
test
data16
int3
sbb
lahf
jno
mov
mov
in
adc
ljmp
cmpsl
cltd
xor
pop
mov
lods
jb
adc
enter
cli
jp
push
ljmp
adc
popa
mov
int
out
outsb
int
jl
cmc
imul
call
mov
aaa
sub
xor
mov
push
and
repnz
sti
xchg
mov
outsb
xchg
xor
push
dec
divl
jnp
xchg
sub
mov
jns
fnstsw
or
mov
rcll
shl
out
fcmovnbe
daa
adc
outsl
mov
push
pop
dec
fiadds
insl
je
xchg
lcall
pop
insb
in
mov
jae
sar
xchg
jecxz
jl
jno
out
dec
test
xor
mov
les
pop
movsb
mov
bound
imul
push
aam
andb
sarl
pop
sti
in
add
rcll
push
out
and
or
push
jmp
mov
js
out
out
adc
sbb
adc
leave
popf
lea
and
mov
and
jne
push
mov
cmpsl
dec
jo
rcrb
mov
push
xchg
cmp
push
test
push
mov
jo
xor
push
jae
adc
dec
cmp
or
sub
mov
dec
mov
mov
int3
xor
fisubrs
adc
xor
pop
cs
stos
xor
jmp
mov
xor
pop
push
imul
xor
data16
xor
scas
inc
cmp
pop
inc
pop
in
inc
jne
mov
inc
push
sub
jp
rcrb
mov
outsl
sub
sbb
inc
cmp
dec
aad
test
pop
aas
fstl
jns
lret
cmpsb
out
mov
insb
mov
test
xor
lcall
mov
sub
stc
push
loope
aad
lret
int3
lds
bnd
pop
cmc
sub
test
sbb
mov
push
stos
ficompl
outsl
in
inc
jo
adc
repz
pop
dec
fsubrs
fsubrl
mov
popf
fisubrs
mul
and
pop
cmp
or
mov
subb
adc
jp
and
inc
pop
decb
inc
mov
out
data16
iret
adc
cmp
fs
cwtl
repnz
jno
test
xor
fmulp
mov
push
sbb
dec
subl
and
ret
push
xchg
cld
xorl
mov
out
cmpsb
jae
inc
popf
loopne
loop
push
pop
adc
sbb
pop
sbb
jle
jl
dec
iret
add
cmpb
pop
ds
fdivrl
fwait
push
lods
lods
ss
add
loopne
mov
or
mov
das
mov
add
push
pop
sarb
push
mov
cltd
data16
stos
gs
fcoms
mov
iret
adc
outsb
and
ds
dec
les
xor
out
leave
ret
add
push
mov
xor
mov
repz
pop
pusha
mov
mov
sub
mov
sbb
push
sbb
mov
inc
jmp
xchg
sarl
fisubrl
xchg
fdivr
xor
jb
jl
adc
mov
push
pop
inc
jle
aam
lock
jp
mov
cmp
push
jecxz
mov
shlb
add
mov
inc
push
ficoml
jecxz
or
pop
faddl
mov
cmp
gs
flds
adc
and
cmp
mov
push
scas
or
cld
movsb
into
jmp
outsb
push
sbbl
jge
sti
inc
mov
push
test
scas
pop
sub
rcrl
mov
push
cmp
ret
push
push
xchg
pop
add
leave
jb
push
int3
les
dec
mov
stos
insb
inc
out
adc
jmp
adc
inc
out
adc
or
int3
inc
int3
addr16
add
icebp
and
ret
mov
cltd
cmp
push
aad
lahf
test
shll
das
lcall
frstor
movsl
jge
cmp
mov
add
pusha
lret
or
fcompl
loop
push
insb
jg
jg
out
cmpl
aaa
fidivl
mov
ljmp
mov
adc
xchg
mov
xchg
sti
sbb
and
xchg
sahf
stos
ficoms
cmpb
lods
leave
xchg
fcom
cmc
rcrb
jmp
js
lock
sbb
jmp
arpl
mov
mov
inc
test
mov
dec
pop
notb
cmp
pop
ret
dec
sbbl
xor
xchg
fisttpl
and
mov
or
xchg
aaa
mov
add
scas
aaa
hlt
out
inc
cmc
enter
addl
mov
std
test
or
imul
sbb
shrb
xor
mov
push
pop
inc
enter
add
pop
and
sub
or
into
int3
incl
push
sbbb
jmp
mov
in
rol
xchg
mov
add
push
pop
inc
loop
popf
mov
adcb
pop
jns
mov
and
jle
xor
mov
dec
and
leave
pop
aad
dec
ja
pop
fstl
addb
jo
dec
mov
ljmp
adcb
push
sbb
cmp
ficomps
fimull
scas
cmp
or
faddl
fdivrs
mov
xchg
jbe
adc
adc
daa
jb
pop
cmp
scas
jge
cmpsl
in
dec
test
pop
or
mov
lods
movsl
add
push
add
mov
fwait
movsb
sub
mov
cld
push
mov
cmp
test
pop
fidivl
js
push
xor
mov
sub
jnp
jns
shlb
rcrl
rorb
sub
add
incl
sti
mov
adc
addr16
das
sbb
or
clc
or
jmp
ss
lcall
fs
insb
jmp
jmp
arpl
pop
xchg
sbb
add
pop
inc
mov
out
out
les
orb
xchg
sti
xchg
fidivl
js
push
xor
mov
and
jno
fnsave
call
lahf
adc
xchg
pop
jno
fcmovnbe
xchg
popf
push
xchg
jb
fsubrp
xorb
nop
hlt
add
ret
mov
mov
push
cli
jmp
dec
addl
enter
cmp
push
xor
sub
and
sahf
dec
sub
mov
out
mov
pop
inc
rcrb
insl
add
insl
xor
lahf
dec
sub
js
mov
addr16
dec
aam
jns
fcomp
and
dec
out
dec
xchg
push
jle
push
lahf
call
jmp
shlb
xor
mov
rorl
lods
enter
cmpsb
xchg
jmp
xor
andl
fs
pop
sbb
scas
inc
stos
sbb
or
mov
xchg
dec
adc
mov
adc
jae
sub
icebp
pop
xchg
scas
xchg
inc
stc
cmp
and
mov
mov
subl
sbb
xchg
jecxz
mov
jbe
mov
scas
jne
into
inc
fsubrs
out
es
clc
adc
adc
add
dec
xor
loopne
inc
mov
cltd
push
push
in
stos
hlt
sub
inc
flds
jp
jge
mov
gs
test
and
ret
sti
bound
cmp
xor
xchg
adc
icebp
sbb
addr16
insl
adc
mov
mov
mov
jle
cmpsb
les
cmc
sub
repnz
or
rorb
xor
xchg
icebp
repz
mov
sbb
in
and
stos
push
into
pop
or
pop
out
lahf
mov
sbb
mov
leave
dec
pop
mov
rorl
out
or
test
jp
std
jmp
jns
imul
push
jno
loop
lahf
adc
cmp
and
out
int3
mov
cmp
xchg
lret
mov
iret
add
add
xor
or
fidivrs
scas
inc
pusha
fdivl
std
clc
cld
cmp
in
clc
popf
call
pop
out
fwait
push
cmp
out
sub
daa
dec
pop
fwait
cmp
mov
jg
movsb
ja
outsb
cmpsl
mov
adc
cmp
pushf
dec
out
lods
js
xchg
imul
hlt
dec
xchg
adc
xor
sub
leave
fists
mov
jmp
xchg
jnp
mov
xchg
in
push
insb
adc
xchg
xor
inc
mov
xchg
addr16
jg
lret
sbb
mov
cmp
push
cli
jne
xchg
pop
cltd
js
and
pop
mov
fisttpll
mov
test
int3
pop
test
cs
loopne
inc
push
jae
cmp
test
push
push
in
or
xchg
cmp
imul
scas
xor
push
cmpsl
and
inc
leave
outsl
out
xor
mov
xor
pop
add
test
mov
insl
jge
mov
fnstcw
add
test
add
loop
xchg
jl
dec
aam
sub
jge
and
mov
out
adc
pop
loopne
and
adc
es
xor
push
in
aad
cmpl
dec
mov
ret
fstpt
adc
cmp
loopne
ss
mov
aad
xlat
lods
incl
xchg
sbb
ret
sbbl
xor
push
adc
push
cmpsl
cmp
incb
adc
add
xchg
xor
cmp
ret
std
lods
xchg
fidivrl
call
shlb
lahf
jmp
push
mov
lea
bound
pop
add
fstps
mov
fnstsw
inc
int
icebp
jge
outsl
push
dec
dec
push
fdivl
jns
add
xchg
push
cmpb
jae
lea
xlat
stos
fsub
sahf
pop
or
out
mov
int3
stos
pop
mov
hlt
lds
or
mov
mov
mov
pop
pop
mov
sub
ficompl
inc
pop
divl
movsb
sub
xchg
arpl
insl
and
mov
mov
mov
xchg
data16
pop
mov
stc
iret
cmp
xor
adc
out
icebp
into
lea
xor
push
das
stos
out
mov
inc
pop
adc
fisubs
sbb
mov
cmp
inc
or
add
cmpsb
lcall
push
inc
sub
aaa
fwait
xchg
inc
in
fsubrl
cwtl
sti
xor
dec
mov
jae
popa
lcall
sbb
hlt
push
inc
adc
pop
push
or
jno
scas
movsl
sub
cmp
rcrl
mov
xor
and
cmpsl
pop
add
ret
pop
xor
xchg
out
aad
add
pusha
add
push
sub
rcpps
xlat
sbb
outsl
hlt
push
stc
or
repz
mov
inc
mov
mov
inc
xor
cmp
sti
cmp
or
pushf
daa
and
sub
test
xchg
ret
dec
xchg
hlt
jg
enter
lds
sbb
ljmp
xchg
push
mov
or
movsl
aaa
xchg
cltd
mov
push
mov
add
andl
sub
repz
scas
xor
jbe
xchg
mov
mov
sbb
push
fbld
in
add
adc
jae
stos
and
push
es
jne
sbb
aaa
lcall
jno
mov
mov
std
pop
xchg
jno
cmc
jp
aaa
sti
dec
inc
mov
lret
lahf
xchg
mov
xor
mov
mov
out
lret
imul
sub
cltd
loopne
mov
pop
cmp
pusha
xchg
push
clc
mov
jge
inc
test
xchg
xchg
push
or
mov
ret
test
aam
jge
call
mov
movsb
add
mov
xchg
push
loop
cmpsl
in
stos
cmp
stc
lahf
les
add
call
aad
cmp
dec
mull
repnz
dec
lret
push
mov
daa
insb
imul
imul
add
js
das
js
inc
std
push
xor
mov
adc
outsb
addr16
popa
hlt
pop
mov
repz
das
roll
lret
adc
int3
and
clc
lods
enter
mov
dec
mov
dec
inc
jmp
push
daa
pop
cmpsb
lea
mov
jo
pop
iret
sub
js
sarl
xor
icebp
outsb
sbb
push
das
and
xchg
cmp
inc
add
pop
hlt
push
and
and
das
insb
loopne
cwtl
jecxz
scas
lock
adc
scas
cmp
xchg
jno
cmp
fwait
add
sub
adc
mov
add
data16
pushf
cmp
hlt
mov
push
bnd
in
xchg
and
gs
cltd
xor
adc
jmp
add
inc
popa
js
das
sahf
test
inc
iret
cwtl
pop
shlb
inc
xor
cmp
sti
cmp
or
mov
mov
adc
xchg
or
mov
inc
fbld
sub
push
lahf
les
in
rol
inc
add
iret
nop
scas
mov
jb
ret
cmp
jno
lock
mov
fwait
mov
adc
out
push
popf
push
inc
jmp
jae
sub
ja
cltd
notl
xorb
je
lretw
adc
push
xor
stc
loopne
push
mov
fucomip
mov
test
dec
sbb
idivb
xor
fdivs
xchg
fstl
call
or
lods
mov
sbbb
pop
sub
dec
test
sbb
jmp
ja
add
movsl
cmp
rclb
mov
jl
dec
fst
jb
cs
jmp
adc
sub
or
mov
dec
push
pop
sbb
push
es
mov
xchg
or
mov
imul
pop
inc
fwait
mov
adc
out
push
popf
push
inc
jmp
jae
sub
ja
cltd
notl
xorb
je
lretw
adc
push
xor
stc
loopne
push
mov
fucomip
mov
test
dec
sbb
idivb
xor
fdivs
xchg
fstl
call
or
lods
mov
sbbb
pop
sub
dec
test
sbb
jmp
ja
add
movsl
cmp
rclb
mov
jl
dec
fst
jb
cs
sub
xchg
ficoms
ss
dec
movsl
out
jge
clc
mov
adc
xchg
inc
or
loop
jo
test
sbbb
insl
or
leave
outsl
and
aam
mov
jns
pop
pop
adc
ret
scas
cli
cmp
insl
cmp
loopne
xchg
ret
mov
fisttpl
adc
adc
pop
inc
lea
fistpl
sbb
addl
cmp
push
imul
jnp
xchg
loopne
pop
popf
pop
jle
or
jae
mov
xchg
push
out
pop
xchg
mov
into
movsl
mov
sub
or
lret
add
push
xor
adc
mov
push
cwtl
notb
adc
repnz
mov
ss
movsl
mov
shlb
repnz
jmp
sbbb
fisttps
inc
icebp
cltd
andps
sbb
mov
outsl
mov
mov
popa
push
idivl
jnp
dec
mov
leave
xchg
inc
push
or
and
inc
das
call
cmp
addr16
loopne
out
sbb
adc
ret
out
mov
shr
out
data16
inc
fldt
pop
std
jle
pop
movsb
jmp
orl
cmp
fwait
add
sub
adc
mov
add
data16
pushf
cmp
hlt
mov
push
bnd
in
xchg
and
gs
cltd
xor
adc
jmp
add
inc
popa
js
das
sahf
test
inc
iret
cwtl
pop
shlb
inc
xor
cmp
sti
cmp
or
mov
mov
adc
xchg
or
mov
inc
mov
test
js
fsubrp
pushf
and
jns
sbb
mov
fidivl
push
fstpt
fwait
mov
lods
or
pop
fdivs
jl
in
or
test
out
outsl
inc
or
inc
xor
sahf
outsl
incl
pop
insb
jo
add
jae
pop
sar
mov
divb
dec
xchg
adc
aas
xor
push
xchg
pop
sti
jge
cwtl
mov
fstl
cs
push
ficoms
pop
jle
add
enter
inc
adc
imul
cs
icebp
aad
ja
push
mov
dec
in
lock
out
into
inc
add
mov
jnp
jl
xor
mov
out
ss
cwtl
lahf
inc
fdivs
loope
jae
lds
xor
cmpsl
inc
push
fldt
mov
jg
xchg
jb
aam
mov
push
outsb
cmp
lea
sub
mov
mov
and
push
sbb
jnp,pt
adc
xor
cmp
pop
push
cltd
xor
popa
xchg
fwait
sub
scas
aas
mov
testb
fldcw
scas
fnstsw
sbb
daa
jb
mov
add
jbe
aas
push
xor
mov
stc
inc
xchg
popf
jno
xchg
xchg
and
mov
add
xchg
cmc
dec
add
lret
mov
repnz
jmp
shlb
test
in
push
ss
xchg
fld
sahf
dec
lods
insl
fidivl
test
leave
pop
mov
lea
jns
jp
gs
sarl
aad
dec
mov
sbb
adc
and
dec
insl
test
adc
cmc
gs
push
mov
push
ja
add
idivb
mov
cwtl
add
repnz
xlat
cmp
jno
aam
sub
inc
scas
lods
mov
mov
lds
int3
dec
jge
push
icebp
add
add
xchg
stc
xchg
dec
cmp
lcall
cmp
xlat
outsb
lret
lret
popa
fbstp
xchg
ds
mov
and
mov
dec
dec
test
das
fwait
sbb
cmpsl
jns
push
into
test
subl
not
aam
cld
ja
adc
cmp
in
lret
mov
ja
or
cli
imul
rcrb
movsb
data16
mov
fistpl
adc
std
cmpsl
pusha
stos
xchg
pop
data16
sbb
xchg
cmpsb
jecxz
xor
adc
add
xor
inc
fmulp
mov
and
iret
mov
ja
sbb
push
js
arpl
mov
mov
inc
mov
xchg
lods
xchg
into
xchg
adc
ret
cmc
mov
or
pop
sub
jmp
jp
jecxz
cwtl
push
ljmp
sahf
out
fwait
mov
int3
mov
add
scas
xor
cltd
bound
xor
leave
out
or
sub
aas
push
ror
pop
or
loopne
adc
mov
mov
adcb
int3
rcrb
stos
mov
inc
dec
ljmp
testb
outsb
ljmp
addl
sbb
mov
lock
mov
pop
xor
movb
fdivr
mov
sbb
jge
jmp
pop
mov
mov
adc
ret
leave
inc
lock
cld
andl
pop
push
or
xor
mov
sbb
dec
adc
and
sbb
mov
jae
enter
popf
sbbl
clc
test
ficompl
sbb
int
lcall
cmp
movsb
mov
repz
cmp
pushf
add
aaa
sbb
add
enter
or
inc
jl
pop
dec
xchg
push
push
ficompl
test
nop
js
daa
push
clc
sti
jnp
jae
mov
data16
incl
cmp
daa
scas
call
jnp
dec
subb
xchg
pop
dec
clc
dec
mov
lret
mov
fsts
adc
repz
in
jae
push
xlat
shlb
leave
mov
xlat
jo
mov
test
push
rcl
and
fildl
mov
cmp
sbb
mov
inc
jge
inc
aas
or
xchg
mov
inc
fisttpll
stos
add
or
sub
mov
mov
xchg
ret
rcl
inc
jl
xchg
imul
ret
leave
sub
mov
cld
add
mov
push
loop
fs
push
push
insl
mov
sub
inc
xchg
xchg
testl
test
mov
icebp
fidivs
inc
adc
sub
inc
test
mov
test
dec
cmpsb
push
sti
popa
into
jae
rcl
lahf
or
fcomps
pushl
jbe
andl
pop
shlb
jb
cltd
idiv
clc
popf
sbbb
jle
mov
outsb
mov
sahf
imul
bnd
call
dec
fdivr
sbb
pop
xchg
and
jno
xor
xorb
mov
add
dec
sbb
bound
imul
in
fistps
push
cmpsb
mov
rol
imul
mov
xchg
sahf
dec
inc
push
pop
xlat
out
adc
in
inc
lods
pop
push
ret
pop
cmp
lea
push
rclb
pop
mov
movsb
jae
mov
xor
int3
les
imul
out
cmpsb
jno
leave
inc
xor
inc
pop
fnstsw
ja
les
sub
scas
xor
inc
ja
cli
ds
cmp
push
mov
test
mov
add
nop
mov
xchg
fisubs
scas
ret
mov
hlt
mov
cli
pop
or
pop
popf
pushf
xchg
hlt
mov
cmp
jmp
push
popa
xchg
sub
jmp
fs
fwait
sub
mov
icebp
fisttps
jl
mov
xlat
cli
adc
push
mov
dec
mov
mov
sub
or
movsl
mov
enter
dec
xor
imull
dec
or
jno
in
loopne
js
pop
sbb
add
test
out
adc
sbb
loopne
cmp
xchg
cmpsb
inc
lcall
adc
jmp
imul
out
lods
push
mov
pushf
imul
imul
push
lods
imul
mov
dec
mov
sub
push
es
mov
xor
int3
jge
popf
xchg
jno
pop
push
aad
inc
mov
add
sub
inc
rorb
cmpb
cltd
xor
xchg
test
push
adc
lahf
xchg
stos
add
out
popa
sbb
dec
sub
inc
jge
loopne
push
cld
stos
mov
loop
adc
out
arpl
mov
jno
iret
jp
sbb
int
adc
into
push
pop
mov
pop
xchg
outsl
push
inc
out
nop
fwait
inc
sub
fs
jae
inc
fs
jno
imul
or
pusha
rorl
into
or
lret
int
das
mov
or
xchg
xor
or
es
mov
ret
clc
test
test
std
add
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
pop
push
inc
inc
inc
dec
dec
inc
push
inc
inc
inc
dec
dec
inc
pop
jo
arpl
xchg
lret
out
xchg
test
movsb
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
in
add
push
dec
dec
outsl
jl
pop
mov
add
pop
add
and
mov
add
mov
mov
sub
mov
xor
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sub
jmp
inc
out
aam
jb
inc
jns
pop
insb
xor
add
add
mov
out
jmp
in
jne
push
mov
pop
sub
jne
push
xor
pop
jmp
ror
into
out
cld
test
or
or
add
out
cmp
jle
sub
jmp
sti
sbb
xlat
les
cs
pop
gs
push
mov
bound
adc
sbb
sub
mov
inc
cmp
mov
stc
divl
not
push
aam
gs
jno
sahf
test
xchg
push
shll
fidivrl
std
xchg
aad
mov
sti
or
xor
rclb
cmpsl
jno
fnstenv
xor
push
mov
cld
testb
imul
dec
ja
mov
dec
or
and
or
cmp
push
aam
out
inc
lcall
cwtl
int3
stc
dec
adc
mov
sarb
test
in
push
addr16
aam
shl
decl
loope
mov
int
ss
push
imul
push
inc
jb
push
jmp
scas
add
xchg
lret
adc
add
popf
in
in
rclb
out
jo
pop
pop
imul
or
icebp
push
xchg
add
rclb
cmp
push
aam
pmulhuw
cmp
cmp
mov
in
rclb
jbe
mov
sub
dec
jne
xchg
test
and
das
fdivrl
and
flds
mov
outsb
icebp
loop
rclb
cmp
lods
pshufw
xchg
and
fisttpl
popa
xchg
fsts
and
nop
push
shrl
jns
int3
shlb
gs
call
or
out
push
repz
lret
cmp
int
cmp
repnz
shlb
shll
ret
test
push
adc
pop
fcmovnu
and
int3
ficoml
inc
arpl
in
add
mov
mov
outsl
stc
jbe
pop
outsl
inc
add
mov
or
xor
jae
mov
xor
int3
shlb
pop
jb
sbb
ja
out
cmp
outsl
adc
push
cmp
outsl
lea
int
xor
ret
sahf
pop
add
fcomp
jb
popa
mov
movsb
dec
jmp
daa
jp
les
cld
pop
push
bound
mov
cmp
lcall
mov
sti
mov
hlt
or
dec
out
sti
loop
pop
call
add
lods
lahf
out
pop
lret
ljmp
lret
out
sahf
fs
movsb
dec
jge
xor
rol
lahf
inc
jne
pop
stc
sub
stos
repnz
mov
out
dec
push
stos
rcrb
dec
cmpsb
jge
mov
sub
ljmp
test
outsb
sbb
cltd
adc
pop
std
or
scas
out
arpl
sbb
imul
xor
mov
icebp
mov
ds
mov
stos
dec
mov
push
jp
icebp
in
mov
sarl
and
or
jns
jnp
scas
fstps
ljmp
jnp
gs
jp
sarl
mov
jnp
xor
jnp
xor
mov
mov
notb
std
lds
les
push
rcrl
xor
fidivs
jo
mov
sub
cwtl
aad
loope
ret
ret
dec
and
cmc
scas
sub
loop
dec
fidivrl
add
lds
sub
pop
xor
push
leave
cmc
push
pop
xor
jmp
jp
lds
xor
out
in
sarl
or
ljmp
mov
lds
cmpsl
xor
cmp
sarl
xchg
xor
jmp
int
adcb
jb
xor
in
cmc
and
and
jnp
pop
and
dec
outsl
sarl
fcomp
int3
adc
jnp
clc
test
enter
int3
xchg
fidivrl
out
xchg
mov
or
pop
xor
mov
rdpmc
les
sarl
lret
gs
inc
popa
pusha
aaa
into
adc
mov
adc
mov
loope
sub
lock
inc
mov
jmp
mov
xor
int
imul
gs
push
pop
xor
push
pusha
loop
push
pop
xor
xchg
in
imull
in
xor
loop
pop
mov
mov
imul
in
cmc
and
andb
int3
sbb
in
push
jnp
add
cmpsl
xor
sahf
in
arpl
imul
cmpsl
xor
fcmovnu
fnstcw
sti
ret
jnp
xor
adcb
jnp
xor
cmpsb
pop
xchg
gs
pop
push
jmp
in
shl
ljmp
push
in
in
and
dec
mov
jbe
xchg
push
in
in
and
adcl
cmp
jbe
data16
pop
jecxz
dec
in
test
lods
stos
cmp
lods
pop
push
dec
lcall
push
in
in
and
imul
and
jnp
lods
pop
push
dec
lcall
push
in
in
and
addl
cwtl
adc
les
lods
pop
push
dec
lcall
push
in
in
and
loopne
push
flds
lea
fbstp
push
shrb
cmp
mov
sarl
jecxz
dec
in
test
lods
stos
and
pop
push
dec
lcall
fcmovb
jnp
xor
les
xor
push
lea
fbstp
xor
xlat
cmp
xlat
stc
pop
mov
xchg
xor
jnp
jns
dec
mov
jge
insl
push
dec
inc
clc
or
pop
mov
xchg
aaa
lds
pop
inc
pop
ret
popf
mov
insl
jnp
xor
jnp
das
mov
adcb
jnp
xor
or
fbld
mov
jnp
clc
adc
cltd
jo
iret
inc
sub
push
jnp
ljmp
xchg
fidivrl
clc
mov
jl
fidivrl
jnp
jl
xor
xlat
xchg
shr
push
fistpl
in
sarl
movsb
jl
clc
xchg
mov
push
xor
aad
pop
in
cld
push
outsb
ret
and
loopne
mov
sub
inc
lock
fisubl
jo
in
push
mov
xchg
xor
jae
add
cmp
pop
bound
ret
hlt
sbb
push
sbb
adc
ds
push
mov
xor
jnp
xor
jnp
xor
jnp
xor
jnp
xor
jnp
xor
jnp
xor
jnp
imul
les
sarw
sarl
les
xor
push
xor
jnp
xor
jnp
dec
xlat
jnp
xor
jnp
xor
jnp
xor
jnp
xor
jnp
lret
push
jge
scas
cmp
sbb
in
loope
pop
daa
mov
arpl
in
pop
inc
and
mov
jge
jns
out
jmp
cmp
ret
xchg
pop
pop
shll
ficompl
jp
mov
int
jno
inc
mov
out
and
hlt
cmp
adc
jl
adc
test
lea
clc
lret
in
sbbb
pop
outsb
sub
pushf
in
push
icebp
dec
jns
enter
scas
jge
ret
enterw
sti
adc
mov
leave
dec
jne
push
push
sub
xchg
into
xchg
imul
insl
add
cmp
mulb
leave
and
pop
xchg
ds
movsl
xchg
cmp
mov
add
pushf
or
sub
push
xchg
pop
push
hlt
pop
push
gs
movlps
lret
pop
add
inc
in
shll
ror
aam
and
push
movl
add
mov
dec
movsb
pusha
or
cmp
cmpl
add
dec
dec
fsubs
sub
jl
and
subb
aas
push
mov
outsl
fprem1
repnz
adc
movsb
inc
mov
add
push
or
in
jl
cmp
cs
or
xor
jl
std
orb
mov
hlt
ljmp
lret
test
inc
aam
stos
rorl
add
add
jno
mov
jns
push
ds
inc
mov
dec
sarl
jne
mov
jbe
loopne
cli
mov
cmp
mov
mov
cwtl
popf
dec
cld
and
jl
fdecstp
push
push
stos
lea
xor
mov
xchg
jle
loopne
sbbl
xor
jnp
jno
jnp
adc
push
xchg
outsl
pop
add
sub
ret
jbe
stos
push
pop
push
cmp
and
pushf
mov
jns
add
sahf
mov
sub
dec
add
into
iret
into
jns
push
das
jnp
lret
adc
mov
pop
pop
loop
push
mov
imul
test
adc
xchg
lret
ret
sub
rcr
jns
mov
cmp
outsb
pop
loope
xchg
mov
sbbl
add
cmpsl
xchg
insl
inc
inc
fnstsw
jno
shl
push
in
jbe
cwtl
mov
imul
mov
leave
add
cmp
xlat
mull
in
data16
loop
mov
add
or
cs
fisttps
shlb
and
add
add
add
int3
add
cmp
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
int3
add
hlt
lret
add
adc
add
jno
add
sbb
add
jns
add
sub
add
or
add
xor
add
mov
add
inc
int
add
add
add
add
cltd
int
add
add
mov
add
add
add
add
add
gs
insb
xor
cs
insb
add
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
int
add
add
add
int
add
add
add
int
add
add
add
int
add
add
add
add
add
int
add
add
add
into
add
add
add
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
add
jb
je
inc
add
add
jo
push
arpl
add
addr16
insb
outsl
jae
dec
gs
add
inc
outsl
push
outsb
imul
imul
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
sub
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
ret
mov
cmp
add
add
add
inc
repnz
adc
mov
es
mov
mov
lock
ds
mov
xlat
testb
stos
in
arpl
dec
cmp
cs
and
addr16
mov
mov
xor
inc
mov
or
cmpsb
dec
mov
loope
mov
test
sarl
mov
jle
out
imul
lcall
fptan
lahf
insb
lods
test
xlat
stc
sub
sbb
sti
adc
sbb
jo
push
loop
mov
lods
mov
leave
sub
inc
stos
mov
hlt
dec
ss
sub
adc
aaa
mov
ja
fs
int3
mov
lds
mov
mov
pusha
sub
mov
xor
push
loope,pn
bound
int3
adc
push
arpl
lea
dec
sub
or
xor
sub
subl
scas
fcmovbe
cmpsl
add
lock
xchg
xchg
mov
das
xorb
sub
scas
fisttpll
aam
ljmp
cmp
push
xchg
dec
pop
jae
lods
fildll
lods
xor
mov
arpl
jae
repz
sbb
jge
lret
aaa
push
mov
xor
enter
cld
add
nop
cmpl
fsts
cmpsb
jp
inc
push
mov
cmp
ret
std
mov
add
mov
cli
popa
inc
cmc
xchg
insb
dec
or
pop
insb
sbb
divl
dec
dec
adc
adc
incl
clc
pop
test
rolb
xor
or
xlat
xchg
xor
sbb
jg
enter
fimull
xchg
jecxz
dec
or
xchg
push
sub
ljmp
mov
cmp
daa
xchg
int
ds
xchg
shrl
mov
jl
push
push
outsl
or
inc
test
loopne
and
inc
ret
in
fistpl
icebp
dec
xlat
jl
xor
pop
jne
mov
test
decl
insb
ss
idivb
jbe
cld
pop
and
iret
and
or
mov
imul
pop
sahf
jae
dec
xchg
and
xor
jo
mov
lret
pop
fdiv
out
pop
and
and
int
push
jmp
jle
inc
jl
pop
mov
movsl
mov
stos
lcall
cmp
and
aam
inc
stos
test
or
xor
cmp
xor
push
inc
mov
xor
or
jg
outsb
jne
or
fiadds
das
mov
pushw
aaa
push
mov
jle
xchg
ret
jl
int3
xor
dec
mov
lods
mov
push
and
stos
lods
sbb
xor
lods
js
mov
and
jp
ss
lahf
cld
stc
sub
daa
fisubrs
inc
add
std
sbb
adc
pop
shll
mov
cld
scas
pusha
adc
push
sbb
lods
outsb
xchg
push
add
or
shlb
dec
add
ret
iret
sub
test
mov
mov
adc
mov
xchg
and
fwait
cld
mov
addl
addr16
cltd
mov
push
sahf
int3
xlat
filds
mov
cmp
xor
push
daa
push
jae
dec
fdivrp
sarb
scas
mov
cli
movsb
outsb
es
lcall
and
lods
cwtl
sbb
cli
setae
lcall
mov
jae
shlb
cmpsb
pop
or
add
lods
int3
sbb
pop
sahf
repnz
lock
icebp
xchg
negl
loopne
mull
and
mov
pop
cmc
fiaddl
fucomi
aas
cmp
xchg
inc
mov
cmp
sbb
stc
lret
scas
push
lods
mov
repz
jge
and
flds
inc
xchg
cwtl
lods
xlat
shll
cltd
hlt
sahf
push
jae
outsl
sahf
out
sarl
dec
aas
pop
outsl
leave
js
das
mov
add
inc
jo
ficoml
in
adc
mov
jb
mov
sub
sub
add
push
shl
pop
pop
add
push
sahf
jecxz
movsb
in
test
xchg
leave
mov
cmp
cmp
nop
sar
pop
mov
hlt
push
add
out
pop
sarb
xchg
mov
pop
dec
xchg
mov
xchg
lret
sbb
add
dec
insb
adcl
or
fistl
inc
mov
and
out
mov
push
adc
sahf
add
scas
or
and
dec
jecxz
cli
out
nop
and
push
jecxz
jp
sbb
mov
clc
sahf
and
jnp
out
adc
xchg
fsts
sbb
adc
jbe
adc
dec
movsl
mov
pop
out
sub
ss
repz
mov
adc
popf
adc
xchg
sbb
out
cmpsl
fmull
in
xor
rorb
mov
xchg
icebp
mov
rclb
adc
sbb
inc
divb
mov
mov
leave
bound
movl
push
imul
dec
ja
xchg
pop
mov
jno
lcall
xchg
and
and
mov
stos
in
sub
pop
aas
mov
sbb
out
xor
lret
cmp
jmp
cmp
sub
ror
push
xor
sbb
dec
ficomps
call
sbb
jns
cmp
adc
repz
push
push
add
mov
mov
sbb
insb
cmp
movsb
push
xchg
insl
daa
mov
idiv
push
push
xchg
insl
jne
or
and
scas
and
push
push
xchg
movsl
test
lret
in
fdivrl
jge
jecxz
add
cmc
test
lret
lods
cmp
cwtl
testl
fistl
daa
jmp
imul
movsb
and
cli
cmp
mov
and
scas
adc
dec
stos
pop
or
je
lcall
ffreep
or
test
inc
add
xor
pop
sbb
je
clc
insb
jne,pn
mov
xor
cmp
push
lcall
xchg
popa
icebp
push
jge
adc
add
fcmovnb
pushf
sub
jle
sub
add
hlt
xor
cmpsl
cmc
cmp
jbe
movsb
xor
addr16
les
cmp
jns
lock
adc
mov
sub
call
scas
outsb
inc
inc
ret
arpl
dec
mov
jbe
out
aam
jp
hlt
push
data16
rcl
mov
cwtl
inc
cmc
or
sub
xchg
push
jnp
mov
xor
in
fisubl
jne
scas
and
jge
fisubrl
sub
pop
or
mov
in
popa
cmp
cmp
adc
cmpsl
xchg
mov
jecxz
in
js
test
lret
out
xlat
bound
pop
xlat
push
stos
aam
in
je
stos
jle
push
inc
or
xchg
sub
hlt
jmp
sbb
xor
loope
jecxz
aam
lea
ja
sbb
push
pop
leave
add
cmp
cwtl
call
and
cltd
xchg
adc
xlat
cmpsl
and
cwtl
sti
push
dec
out
mov
push
js
lahf
insb
jmp
and
mov
int3
inc
cmpsb
loop
add
repnz
inc
mov
or
gs
clc
dec
out
xchg
sbb
shrb
adc
or
fcoml
inc
jns
ret
daa
mov
mov
stos
sbb
pop
jo
push
out
cltd
and
repnz
sbb
sbb
iret
sub
gs
stc
mov
lcall
push
inc
sbb
sbb
jae
cmp
mov
dec
dec
ss
mov
mov
pop
sarb
icebp
call
repnz
lahf
push
jbe
adcb
gs
pop
xorl
push
jo
pop
dec
sbb
insl
jmp
sarb
or
loopne
mov
lods
sub
xchg
push
cmpl
cltd
pop
mov
jmp
and
push
je
fs
mov
sub
pop
incl
scas
shll
enter
dec
adc
push
push
jecxz
push
sbb
out
loop
out
scas
pop
mov
ljmp
popa
into
in
nop
decl
mov
vsubss
sbb
arpl
test
jecxz
dec
and
jmp
cmp
or
cltd
stc
xchg
mov
js
movsl
out
xlat
cli
stos
scas
and
add
pushf
int3
clc
cmp
test
cmc
or
shll
daa
fldt
cs
add
sahf
xchg
xchg
and
jmp
out
cmp
jmp
jge
int3
jg
inc
jae
adc
test
mov
aas
sahf
cmp
adc
in
nop
mov
cmp
inc
sbb
fistpl
xchg
mov
push
adc
cs
mov
sbb
daa
loopne
pop
sbb
xchg
mov
or
sub
push
pop
fwait
sub
mov
and
enter
inc
popa
jmp
jne
mov
mov
cmpsl
push
and
es
push
pop
sub
icebp
xor
adc
sub
lock
shl
mov
fnstcw
rorl
lock
dec
mov
xchg
outsl
mov
and
popf
call
lcall
mov
pop
das
jo
cmpb
sti
loop
cli
sar
mov
int
pop
xor
pusha
mov
fwait
inc
jnp
mov
inc
pop
imul
xchg
push
std
jle
xchg
inc
out
push
jne
aaa
loop
imul
int
dec
outsl
scas
pop
lds
jmp
xchg
inc
ficomps
in
dec
sbb
shlb
bound
cld
out
popa
mov
test
cmp
aas
leave
sbb
imul
int
loop
icebp
dec
stos
aaa
mov
gs
insb
bound
cmp
push
dec
dec
mov
jns
pop
clc
push
push
jno
bnd
jns
sbb
rclb
or
mov
sub
loope
aad
ffree
out
mov
mov
xchg
jb
mov
mov
mov
push
pop
xchg
pop
mov
xchg
scas
mov
xor
ljmp
bound
sti
aas
repz
push
fdivp
pop
sahf
aad
xchg
rol
mov
dec
and
mov
jne
add
les
fisubrs
mov
push
leave
add
sarb
mov
adc
mov
in
inc
loope
jecxz
or
flds
sbb
jae
mov
clc
flds
inc
sub
dec
flds
loop
idivb
repz
and
loope
cmc
mov
dec
gs
ret
mov
mov
adc
mov
xchg
out
mov
subl
in
push
fsubr
ficoms
ret
or
xor
mov
jmp
mov
dec
lock
loop
aas
in
std
movsl
faddl
xor
in
jl
jecxz
fdivrl
pushf
stos
pushl
inc
invd
shrb
inc
gs
cwtl
sub
sbb
add
std
mov
xchg
adc
int3
and
xor
in
popa
xchg
arpl
jnp
jbe
jecxz
pop
stos
or
jg
out
out
adc
ja
ja
cld
jecxz
mov
mov
lods
jne
arpl
in
push
dec
jbe
insl
cmp
jmp
sbb
jmp
push
ficomps
icebp
pop
lret
xchg
rcrl
pop
jp
vpunpckhbw
popa
inc
push
fwait
int
jbe
mov
pop
jno
mov
mov
ret
int3
inc
addb
pop
inc
loopne
aaa
es
mov
add
mov
add
dec
jmp
std
movsl
mov
sbb
or
popf
shll
mov
xor
cs
xor
rcrb
das
fldl
mov
int
hlt
xchg
xchg
out
pop
xchg
sub
cmp
xor
cmp
imul
ret
into
dec
xor
cmc
and
loop
loopne
fists
roll
jg
mov
and
or
xorl
popf
andl
out
mov
call
in
xor
push
or
dec
out
dec
scas
cli
outsl
jno
sub
or
jno
jns
xor
adc
mov
jle
adc
ljmp
lods
sti
sub
adc
xchg
sub
push
ret
addr16
movsl
gs
push
push
mov
inc
insl
add
popf
adc
sub
jbe
sbb
pop
cmp
mov
jg
aas
push
lret
mov
mov
imul
aam
cwtl
lret
mov
js
int
mov
repnz
mov
out
gs
frstor
jge
enter
rorl
mov
xlat
cmp
and
out
cmp
push
loopne
push
cwtl
lahf
mov
fs
lret
mov
jns
lcall
pop
mov
icebp
jnp
mov
iret
xchg
sub
xor
mov
push
sbb
mov
aas
call
xchg
mov
mov
into
xor
mov
jo
int
pop
or
dec
enter
or
adcb
leave
je
or
dec
pop
fldcw
ja
ficoms
inc
movl
adc
inc
push
popf
pop
addl
fcompl
push
ja
out
dec
add
in
and
xchg
movsl
add
insb
js
je
cmpsb
ss
and
jecxz
outsb
lods
mov
test
hlt
pop
sub
and
sarb
out
push
sub
and
pop
add
add
ficoms
or
dec
mov
push
cmp
mov
mov
outsb
stos
insl
mov
pop
in
push
lods
out
fildl
das
insb
test
adcl
mov
leave
cmp
call
mov
cmp
je
push
and
add
filds
pop
lock
cmp
xor
testb
out
bound
loope
xchg
fisubrl
pop
xchg
scas
jne
fadds
cmp
inc
test
sub
and
ljmp
aas
adc
and
add
in
outsb
mov
cltd
idivb
xchg
and
lret
je
jo
daa
mov
cltd
mov
push
jns
jns
out
push
lcall
sahf
push
jle
mov
les
fcoml
sub
test
imul
or
sbb
cmpsl
mov
aas
pop
add
jmp
mov
lahf
data16
xor
and
dec
mov
mov
xor
xchg
sahf
ret
mov
scas
stos
inc
and
jp
push
push
aas
in
push
test
repnz
das
fmul
mov
maskmovq
mov
push
jne
or
xor
xor
cwtl
mov
cmp
fldenv
cmpsb
ja
mov
rcr
dec
dec
dec
andl
push
sahf
cs
jp
pop
push
cld
xchg
add
sbb
pop
xchg
hlt
jne
bound
and
xor
and
xor
nop
xor
cli
push
inc
cmp
cmp
in
fsubl
sbb
addr16
mov
aaa
pop
xor
xchg
icebp
push
push
ljmp
repnz
add
scas
les
out
jge
jecxz
mov
mov
lcall
dec
dec
mov
mov
xor
cltd
mov
jbe
mov
jae
adc
outsb
pop
leave
js
jg
inc
mov
add
adc
xor
out
dec
jno
fisubs
add
xlat
inc
adc
add
filds
xchg
xchg
cmc
xlat
pushf
aas
sbb
outsl
popa
negb
iret
imul
fstpt
cmpsb
xor
push
push
jl
pop
rorb
cmc
dec
lea
int3
and
add
insl
lods
pop
mov
fcomps
adc
mov
adc
xchg
mov
add
push
pop
movsl
int
es
popf
dec
jg
mov
sub
fsubp
pop
stc
xchg
insl
enter
pop
test
sub
scas
dec
cmp
sbb
aas
ss
xchg
xchg
inc
push
popa
int
mov
outsl
out
or
jl
add
adc
jmp
push
xor
and
fsubrs
and
sub
add
jns
mov
mov
cmpsl
xchg
xlat
jle
jae
xchg
stos
mov
pop
clc
mov
pop
stos
je
jb
loop
mov
mov
sub
lds
or
and
dec
lcall
inc
repz
push
mov
sub
cmp
pop
sti
es
ja
lret
fimull
mov
ds
out
lret
mov
xchg
xchg
flds
xor
clc
jb
cli
pop
xchg
fisttpl
dec
push
ljmp
dec
mov
cmp
push
test
cmpsb
add
and
xchg
xchg
in
and
dec
jmp
fidivl
test
popf
fstps
addr16
cmp
testb
arpl
shll
jl
out
pop
aad
push
jge
xchg
or
adc
int3
test
test
aas
aad
fistps
dec
dec
sti
icebp
add
or
leave
inc
add
fidivs
sbb
pop
or
enter
mov
cs
xor
xchg
jb
clc
mov
test
or
inc
and
fistpl
into
xor
adc
push
daa
shll
adc
test
mov
clc
push
or
outsl
in
mov
lahf
call
test
mov
scas
or
dec
jge
push
jg
jecxz
aam
jg
inc
stos
add
jge
filds
orl
xchg
mov
xchg
rol
inc
mov
sub
into
pop
push
jne
mov
popa
and
out
aad
ds
adc
clc
jg
pop
jle,pn
adc
xchg
nop
in
fldenv
jp
stc
in
sub
mov
or
call
jg
enter
in
jl
jb
mov
sahf
jne,pt
add
clc
lret
out
lea
lahf
pop
inc
jo
das
pop
ja
out
hlt
inc
mov
lods
push
and
dec
push
rcrb
push
jmp
xchg
add
inc
lret
js
xchg
add
nop
xchg
imull
movlps
loopne
or
cmp
dec
jl
mov
pusha
out
lods
dec
add
sub
pop
loopne
aad
inc
sti
jge
in
pop
lahf
sbb
and
stos
ja
pop
xchg
adc
shll
xchg
dec
xchg
mov
adc
or
xchg
push
or
xlat
dec
pop
xor
fs
inc
push
mov
ja
pop
jbe
aaa
xor
push
adc
mov
das
sbb
sbb
es
repnz
mov
out
shl
fsubp
push
cmpsb
rol
pop
ficomps
pop
add
cmp
sub
mov
pop
pop
xor
imul
mov
mov
mov
pop
dec
cmp
fadds
sub
add
es
not
fs
cmp
jnp
je
imul
sub
mov
adc
test
fiaddl
jae
scas
ret
mov
cmp
popf
loopne
sub
sahf
or
push
outsb
loope
stos
movsl
insb
std
in
add
mov
xchg
or
mov
rcrl
ret
sub
ljmp
addr16
pop
sub
cli
push
mov
in
jnp
inc
inc
shrb
aaa
pmulhuw
test
push
ficompl
ss
rclb
inc
xor
hlt
shlb
push
or
sub
adc
rorb
insl
fs
lock
cwtl
dec
lods
mov
insl
inc
int
fnstenv
iret
inc
inc
cmp
movsb
and
xchg
pandn
sti
icebp
das
jo
xchg
jne
pop
pushf
addr16
out
repz
xor
xchg
loope
mov
test
or
and
outsl
arpl
fcmovnb
xor
jo
stos
mov
jns
jb
adc
dec
lsl
iret
lcall
pop
dec
sahf
push
mov
imul
pop
lods
pop
inc
mov
mov
pop
sbb
mov
es
jno
lods
pop
ss
repz
dec
js
and
scas
pop
mov
jmp
dec
pop
and
cs
push
add
out
cmpb
jp
sub
nop
lods
hlt
bound
mov
cmc
insb
adc
mov
lock
jp
sarl
je
adc
nop
xor
push
cmp
xor
mov
mov
dec
lret
dec
loopne
aad
xchg
xchg
and
xchg
xor
and
dec
sbb
mov
or
mov
mov
fisubl
dec
shlb
mov
adc
jno
xchg
psrld
and
mov
ret
push
jecxz
push
scas
xor
jge
popa
and
pop
imul
sub
xchg
clc
adc
pop
sbb
pop
std
das
negl
mov
int3
sub
dec
jp
lods
jl
pop
pop
push
pop
or
cli
aas
pop
mull
fldt
sub
adc
stos
xchg
jl
in
mov
ljmp
rorl
cmc
fstpl
pop
imul
xchg
insl
sbbl
push
cmp
neg
je
jge
or
dec
mov
mov
rcr
mov
mov
fldenv
das
sbb
lods
xchg
repnz
mov
pop
mov
sub
or
outsl
lods
xchg
loopne
icebp
pop
fsts
xlat
js
mov
mov
sbb
mov
dec
cmp
or
or
repz
sub
cmpsb
jecxz
mov
or
int
inc
mov
and
xchg
fiaddl
lds
mov
pop
pop
cmp
xchg
jbe
dec
push
loop
test
adc
lods
mov
notb
arpl
ret
aas
sahf
mov
push
cmp
jecxz
rcl
mov
iret
mov
cmc
pop
aad
xor
ds
or
jmp
shrl
aas
fsubl
sahf
aad
je
insb
mov
mov
mov
mov
arpl
push
vcvtss2sd
pop
or
mov
sub
cmp
adc
orl
sub
out
push
push
mov
cmpsb
outsl
rcr
push
xchg
and
xorl
out
or
mov
jnp
in
and
popa
mov
shlb
dec
xor
mov
cltd
jp
scas
or
shll
lahf
jbe
pop
les
and
sti
mov
leave
adc
pop
pop
push
or
inc
add
testl
push
ds
pop
movsl
adc
cs
mov
inc
adc
xchg
mov
push
inc
push
repnz
xor
jb
pop
movsl
push
mov
mov
loop
mov
fwait
decb
inc
pusha
int
scas
add
cs
mov
or
das
mov
inc
push
ljmp
loop
fmul
adc
repz
cld
xchg
pop
imul
adc
dec
fisttpll
push
jmp
fwait
lds
push
insl
lock
pop
cs
repnz
push
inc
xlat
inc
clc
out
xchg
mov
sbbb
lahf
jb
push
mov
pop
jno
adc
mov
push
and
loope
clc
add
repz
rcrb
pop
test
add
sub
enter
adc
mov
mov
add
test
es
popf
fwait
and
pop
mov
jmp
mov
imull
out
insl
mov
mov
aad
xchg
dec
mov
cwtl
jp
loop
inc
xchg
push
pop
inc
and
mov
cmp
adc
clc
inc
mov
out
out
xchg
push
push
out
cwtl
mov
pop
call
pop
cltd
pop
cmp
jle
cmpsl
xchg
add
scas
sar
sub
mov
jae
pop
lds
mov
push
sub
fstp
jmp
outsb
in
dec
adc
cs
sbb
int3
mov
jnp
inc
repnz
cmpb
fstl
push
lret
loopne
movsb
popf
xlat
cmp
xchg
shrb
out
mov
int
xlat
test
imul
and
cs
xorb
fs
mov
hlt
jmp
mov
and
je
insb
xchg
loop
dec
sub
jge
aam
lods
fildl
sti
or
mov
and
sub
add
jge
icebp
insl
aaa
push
add
adc
popf
pop
ret
sub
jns
dec
lcall
mov
push
adc
daa
or
mov
add
xor
inc
jo
test
test
pop
jmp
push
adc
in
push
icebp
mov
cmpsl
and
sahf
dec
cmp
xchg
pop
lcall
aam
push
and
jo
add
mov
cmc
cs
push
mov
loop
in
xchg
sbb
pop
mov
or
lret
jmp
dec
mov
pusha
pop
repnz
or
call
in
mull
lock
mov
adc
pop
xor
mov
std
lds
fstpt
clc
mov
mov
data16
stos
scas
xor
nop
pop
or
loop
stos
imul
mov
fdivrl
and
pop
inc
or
pop
inc
and
cmpsl
and
add
addr16
jno
jae
mov
into
xor
stc
push
cmp
ljmp
je
xchg
leave
xchg
pop
sbb
pop
mov
jmp
sbb
xlat
imulb
rorl
or
arpl
mov
inc
xchg
xchg
shl
sub
mov
scas
cmpsb
das
js
test
add
or
nop
push
cmp
add
and
jl
cmp
std
imul
loop
pop
push
sbb
xchg
sar
pop
dec
and
mov
cmp
pop
lea
push
sahf
clc
rorl
push
imul
dec
pop
xor
out
shll
cmpsb
aam
js
adc
mov
test
jnp
ds
pmuludq
push
dec
ret
dec
lahf
cs
adc
adc
lret
ror
rorb
add
les
sarb
mov
jno
lods
jb
mov
fs
je
or
adc
hlt
hlt
lds
add
lret
outsl
decl
lret
xor
mov
stc
mov
rcrb
xchg
cmp
lahf
mov
enter
sbb
xchg
push
mov
es
mov
inc
adc
jp
mov
call
jmp
lods
cmp
roll
jae
mov
aas
sti
lret
jle
mov
mov
mov
jle
push
jmp
fwait
incb
imul
orl
mov
popf
push
lea
aas
sub
insl
dec
inc
adc
xchg
xor
dec
movsl
push
push
fstps
sbb
aam
fchs
mov
repz
cmpsl
test
cs
cli
ja
xlat
sub
pop
jmp
notb
or
dec
push
dec
push
fimull
inc
enter
xchg
pop
mov
jne
rolb
xor
push
hlt
inc
sub
xor
pop
jnp
sbb
icebp
mov
xor
xorl
lods
mov
inc
in
mov
mov
mov
adc
xchg
mov
push
lea
cmpsb
mov
push
or
rcl
cs
loopne
stc
and
ss
pop
lods
xlat
xor
icebp
ljmp
xchg
mov
subb
rcrb
and
pop
jl
nop
inc
mov
fcoml
push
cmp
cmp
xchg
and
sets
fs
xchg
jne
scas
cmp
adc
adc
andl
jne
adc
roll
loopne
and
insl
jp
and
call
sbb
jns
xor
fiadds
fbstp
mov
adc
push
mov
ret
adc
fnsave
and
mov
cmp
sar
cmp
jo
icebp
stos
add
cmp
dec
inc
mov
pop
adc
add
lcall
mov
xchg
leave
shlb
mov
inc
adc
push
outsl
lahf
cmp
xor
xor
or
inc
lods
and
lods
lea
push
push
lahf
mov
xor
mov
out
cmp
in
xchg
jmp
xchg
aaa
aam
and
int3
sub
push
cwtl
cmp
pop
mov
cmp
mov
adc
lret
lods
clc
sbb
fildll
adc
inc
movsb
movl
sbb
lock
nop
sub
sub
sbb
xchg
xchg
sbb
or
push
sub
cmpsb
cmpl
arpl
lahf
test
movsb
out
into
or
sbb
cmpsl
and
rolb
sub
mov
pusha
or
popf
repz
je
in
fimull
pop
jnp
pop
cmp
adc
sbb
popa
mov
fs
adc
add
insl
jge
cmp
mov
insb
inc
cmp
mov
mov
cmpsl
test
ds
iret
data16
sub
into
xchg
inc
call
push
popf
scas
scas
sub
adc
iret
out
in
and
hlt
ret
movsb
test
test
push
pop
cmp
pop
xchg
mov
dec
add
outsb
dec
push
in
fildll
sub
into
popf
out
mov
adc
cmp
pop
xchg
cmp
mov
std
mov
mov
sub
push
inc
imul
roll
jno
mov
bound
jno
mov
xchg
pushf
notb
dec
popa
in
and
fisttpl
jb
push
ss
inc
sbb
cwtl
or
stc
incb
adc
cli
pushl
shl
lods
pushf
cmc
in
jbe
fildll
cmc
call
xchg
ficoms
cld
pop
insb
inc
or
xchg
push
ffreep
andb
dec
ljmp
arpl
pop
cmp
xchg
test
xchg
sub
xchg
xlat
jno
ss
xchg
stc
bound
jb
dec
cli
es
adc
fwait
adc
lock
dec
dec
les
fstps
xor
fdivs
xorl
adc
cmpsb
mov
iret
bound
xchg
adc
xchg
jp
shll
repnz
or
cmp
sarl
scas
add
pop
sbbb
cmpsb
push
pusha
dec
xlat
push
enter
outsb
jge
or
adc
or
xchg
sub
mov
inc
dec
hlt
sbb
pushf
int3
les
add
push
push
jg
fiadds
push
imul
out
sub
dec
add
movsb
sub
pop
mov
mov
sbb
shlb
jl
cmpsl
push
inc
cmc
cmp
dec
pop
ss
lds
xor
fwait
scas
scas
repnz
fstpl
push
stos
and
adc
pop
fiaddl
decl
clc
ss
pop
add
mov
xchg
les
aas
dec
sub
sub
push
push
mov
push
sub
fucomip
mov
cmp
orb
inc
add
in
decb
and
mov
lods
mov
xchg
stos
ret
mov
add
add
lret
mov
xchg
jle
pop
fnstsw
outsb
lret
dec
push
jle
dec
sub
das
imul
inc
xchg
lods
add
xchg
scas
rclb
clc
mov
loop
fs
mov
add
cmpl
sub
add
test
push
jns
orl
lods
mov
or
mov
fsubrl
or
loope
cld
sahf
movsb
aad
fs
lods
inc
push
sub
pop
inc
cltd
dec
imulb
sub
mov
xchg
nop
nop
arpl
mov
pushf
and
mov
stos
jecxz
test
std
jae
lret
adc
pop
imul
aam
dec
imul
arpl
orl
and
xchg
adc
or
mov
das
scas
sub
mov
inc
pop
test
pop
xchg
test
sbb
data16
test
cmp
xor
je
rcrb
mov
mov
mov
aaa
aaa
and
jbe
jle
stc
adc
pop
xlat
iret
enter
orl
ret
add
xor
ds
rorl
gs
mov
inc
mov
push
inc
add
icebp
ret
dec
enter
pop
sub
sub
pop
xorl
ret
or
std
adc
mov
sub
sbb
imul
int3
insl
jg
mov
mov
jae
popa
sti
dec
cmp
int
cld
and
int3
ret
fcoml
cmp
outsb
pusha
jmp
or
push
push
xchg
in
lea
inc
xlat
sub
cmc
ret
leave
add
cmp
sub
xchg
aas
mov
push
jae
sub
sbb
call
sbb
push
cmp
int
flds
xor
mov
ds
lret
out
mov
add
add
push
scas
movsb
xlat
mov
mov
dec
sub
add
pop
mov
outsb
int
rcr
xchg
push
scas
mov
pop
adc
movsb
cmpsb
stos
push
hlt
lods
and
rcr
test
jae
inc
or
push
xchg
arpl
jp
insl
outsb
aas
xorb
cwtl
xchg
fadds
rcrb
jo
popf
cmp
push
mov
and
test
fisubs
jmp
push
jb
cmc
mov
pop
fs
scas
jb
and
std
dec
ret
dec
fs
dec
mov
xor
dec
dec
add
sub
xchg
dec
movswl
xor
mov
mov
fwait
xchg
xchg
loop
lret
pop
hlt
add
dec
lret
sub
adc
cmc
fsubrp
fcomps
jns
push
addr16
arpl
das
mov
movsb
lds
adc
test
loopne
aaa
xchg
xchg
and
xchg
mov
sbb
xchg
mov
roll
sub
jb
fsubl
in
push
call
pop
mov
jns
jns
scas
in
jb
push
incl
repnz
and
dec
repz
fisttps
cmpsl
out
sub
int3
in
xor
ja
cmp
divl
cmp
mov
in
cmpsb
sub
pop
add
cs
je
call
jo
pop
outsb
add
insb
sub
mov
out
enter
fwait
outsb
in
in
pop
popa
inc
dec
inc
cmpsb
inc
jno
dec
sti
mov
scas
scas
into
xlat
and
sbb
arpl
and
clc
add
stos
leave
push
jmp
mov
stos
testl
std
jl
lret
repnz
insb
cli
mov
mov
jne
pop
icebp
jmp
xchg
xchg
push
mov
mov
popl
and
jbe
sti
xlat
daa
js
inc
push
mov
sub
pushf
bound
ja
mov
popa
fucom
mov
adc
call
fdivr
xor
jg
mov
pop
lds
shlb
sahf
pop
fwait
mov
std
js
jl
pop
sahf
inc
xor
shrb
imul
lahf
mov
leave
or
mov
jo
pop
fldl
test
mov
scas
test
jbe
ret
adc
cmpsb
push
mov
addr16
aad
outsb
push
push
sbb
push
mov
mov
push
and
mov
sub
aas
sti
lods
adcl
call
shr
pop
sbb
xchg
xor
daa
lds
js
or
rorl
pop
push
xchg
xchg
pop
sbb
sbb
cmp
mov
sarl
testb
push
fisubs
aam
lahf
js
out
push
out
jmp
xchg
into
lds
mov
aas
loopne
int
cwtl
dec
inc
sahf
aam
xor
pushf
daa
mov
fs
rcrb
pop
shlb
push
pop
cmp
xor
pop
insb
lahf
mov
pop
adc
roll
inc
cltd
cld
fcoms
sbb
and
movsl
and
aaa
pusha
aad
popa
nop
xchg
fadd
and
mov
cmpb
or
ss
jl
stos
and
mov
adc
sbb
je
incb
inc
and
push
and
mov
fidivrs
inc
mov
sbb
das
popa
sbb
jae
mov
cmp
push
repnz
mov
roll
mov
outsl
repz
xlat
sbb
push
dec
push
pushf
mov
rcrb
call
clc
fs
mov
cmp
pop
enter
mov
xor
das
aad
mov
xchg
adc
xor
cld
jle
addb
mov
add
js
repnz
popa
inc
pop
inc
mov
jne
ret
add
mov
jbe
scas
mov
cmp
fwait
les
dec
push
in
in
bound
cs
sbb
jmp
cmp
daa
xor
call
inc
cs
sbb
pop
sbb
push
lods
fcoms
cmp
clc
inc
mov
cs
mov
cmpsl
bswap
xchg
and
ja
stos
in
call
cmp
inc
mov
push
and
je
outsl
mov
jmp
xchg
sbb
push
add
fwait
out
popa
fdivrs
movsb
insb
or
mov
stos
rcrb
int3
jae
lods
jns
pop
out
out
and
ficompl
scas
stos
in
addl
push
push
rcrb
dec
sti
jno
push
adc
mov
or
dec
jo
dec
jle
jge
loopne
push
xor
jne
sbb
scas
test
dec
mov
fadds
jle
cmpsb
sub
sub
or
fmul
inc
xchg
lds
jbe
ret
or
in
fcoms
pop
fdivrl
inc
popl
test
movsb
les
test
adc
jae
inc
cwtl
scas
jl
pushf
loope
das
pusha
sbb
cmp
andl
arpl
or
pop
sub
jmp
in
shlb
lret
lods
sub
add
dec
sti
jl
call
fistpll
pusha
and
push
xor
adc
popf
add
jecxz
lea
push
pop
imul
mov
gs
mov
in
es
test
jp
stc
adc
xorps
inc
hlt
adc
jecxz
or
aaa
xchg
aad
inc
jmp
cmp
dec
push
jecxz
insl
mov
cwtl
addr16
in
in
dec
popl
stc
adc
sbb
mov
xor
xor
jbe
lcall
mov
pop
or
es
push
movsb
lcall
mov
push
inc
out
mov
xor
imul
jbe
test
insb
outsb
push
in
pop
sahf
int
fsub
in
or
stc
pop
bnd
nop
ss
mov
js
aas
stos
mov
rcrb
pusha
mov
clc
jl
bound
xchg
imul
lods
cmp
imul
cmpsb
jmp
and
cmp
sbb
jnp
inc
out
and
mov
notb
xor
aad
sbb
add
fildl
daa
push
pushf
add
imul
imul
cmpsb
das
pop
mov
orb
lods
imul
and
jl
push
sbb
shrl
xor
or
sahf
addb
xchg
xchg
gs
int
jnp
and
add
insl
outsl
pop
xor
repz
mov
sub
movb
cmp
add
outsl
sahf
addr16
xchg
imul
sbb
xor
gs
es
adc
shll
dec
jmp
adc
inc
subb
test
cltd
push
addb
mov
aas
pop
into
decb
add
std
fstps
jnp
xchg
pop
cli
sub
inc
std
lahf
cmc
aam
or
lahf
les
mov
xor
xor
xor
and
fildll
cmpsl
test
ds
in
or
aaa
push
fadd
pop
inc
sbb
and
fsub
fistps
test
fidivl
cli
mov
fsubs
push
mov
dec
int
sahf
cwtl
pop
dec
lds
push
cmpsl
repz
cld
fstl
movsb
jle
icebp
inc
xchg
fidivrs
sahf
call
stos
fistpl
push
fidivs
outsl
sbb
fidivl
jno
and
dec
inc
jl
cmp
sbb
popa
or
mov
and
fstps
mov
mov
xor
mov
leave
cmpsl
inc
pusha
and
inc
loope
mov
xchg
push
nopl
pop
pushf
push
loopne
xor
popf
mov
fs
mov
push
pop
sbb
lret
int3
push
mov
seta
and
xor
jl
mov
ds
mov
xchg
push
stc
jae
es
gs
dec
repnz
lods
in
scas
or
sub
jl
aad
mov
lods
sbb
push
loope
stos
enter
fistpll
mov
icebp
fsubrs
int
lret
into
push
nop
add
sti
jo
push
add
sbb
fists
into
int3
mov
xlat
mov
mov
push
mov
mov
ret
fsubs
icebp
inc
jecxz
ror
and
cmp
clc
mov
repz
in
jg,pt
pop
ja
cltd
cmc
sbb
sub
pop
push
push
jo
outsb
pop
repnz
sti
add
sbb
adc
push
push
and
test
push
out
scas
inc
int
jg
jmp
add
xchg
xchg
int
dec
mov
in
dec
lret
mov
jns
cs
dec
ljmp
stc
dec
xchg
fwait
sbb
xchg
shll
jg
stos
stos
sbb
pushf
xor
insl
xor
sbb
jbe
inc
cmpsl
fwait
xor
fstpl
and
xchg
fsubl
lahf
stos
imul
daa
aas
sbb
lea
xchg
fldt
call
jecxz
pop
mov
decb
add
nop
mov
cld
je
flds
jg
fnsave
ds
push
pusha
and
mov
mov
pop
cmpsl
adc
movsb
js
mov
fisttpl
test
test
shll
jnp
out
jnp
inc
jo
rol
jg
jle
paddd
insb
ret
push
push
fs
inc
outsb
ss
xchg
mov
ds
adc
inc
jecxz
push
mov
add
cmp
inc
fldenv
outsl
mov
repnz
jno
cmc
mov
jl
daa
adc
leave
adc
cltd
int3
or
loopne
add
jns
int3
not
loopne
xchg
cmp
lcall
in
cmpsl
sub
cmp
inc
cmp
dec
sbb
jmp
add
xorl
movsb
pop
cmp
jg
lds
mov
rcrl
dec
mov
fxch
jno
xor
mov
pop
mov
outsl
cmp
xchg
flds
fsubs
xchg
inc
sub
inc
pop
pop
lea
sbb
imul
or
rorb
and
lds
hlt
mov
scas
pop
scas
loope
pop
das
clc
jo
inc
and
out
adc
or
inc
lcall
es
fwait
out
mov
mov
out
xchg
pop
mov
std
push
lock
outsl
test
dec
jl
xor
jae
out
push
gs
cli
jns
repnz
sbb
das
push
jle
mov
imul
inc
jg
jb
jmp
sahf
test
inc
jecxz
mov
in
daa
xor
popa
jle
cmp
lcall
lods
test
lcall
cld
mov
and
jno
or
xchg
push
js
andb
dec
and
and
jnp
out
jns
repz
xchg
ja
in
or
mov
sbb
js
xor
fistps
fildll
insb
mov
stos
push
mov
and
repz
or
xchg
js
cmp
imul
cmp
push
sub
jge
sti
test
adc
inc
xchg
sbb
jno
jle
xlat
sbb
aaa
dec
ljmp
cmp
ds
mov
jne
std
push
gs
inc
mov
ljmp
lds
push
lret
pushf
adc
scas
imull
adcl
bound
shlb
cmp
pusha
cmpsl
xchg
dec
dec
inc
clc
mov
jae
dec
xorb
and
add
sbb
or
in
ja
out
imul
mov
pop
mov
and
mov
inc
bound
mov
push
inc
rol
dec
aam
xor
dec
pop
int3
insl
cmp
inc
addr16
mov
repnz
mov
or
je
outsl
popf
mov
add
int3
in
push
hlt
loop
cmp
pop
dec
dec
jno
faddl
aaa
and
sbb
pop
fs
out
sbbl
sbb
jns
xlat
aad
jle
in
push
mov
rclb
sbbl
sub
sbb
mov
xor
out
mov
push
mov
mov
aad
add
cmp
sbb
jp
repnz
jecxz
xor
add
loopne
sarl
or
out
shl
push
lret
outsb
pop
xor
dec
xchg
cmp
mov
js
mov
lods
jo
fiadds
jmp
rcrb
pop
pop
movsl
ljmp
jecxz
mov
shrl
dec
xor
in
mov
dec
and
fwait
ds
xor
sbb
or
fstpt
movsb
adc
push
xchg
jecxz
dec
sub
maskmovq
idivl
lret
xchg
movsb
lds
cmp
xor
pop
mov
roll
mov
stos
sbb
push
popf
lret
jg
lea
addr16
repnz
inc
xchg
add
repz
int3
sbbl
pop
lret
inc
js
jle
aad
imul
or
inc
inc
in
adc
push
cli
sub
in
mov
add
push
into
push
mov
out
xchg
call
or
scas
pushf
dec
inc
pop
xor
lea
les
sti
or
shlb
cltd
popf
bound
cmp
clc
jge
int
in
xchg
js
inc
scas
add
cmpsb
pop
mulps
sub
ds
adc
fdecstp
pusha
mov
cmp
push
ds
xchg
sbb
out
add
xchg
jne
ret
popa
adc
xor
sub
mov
es
mov
adc
jl
inc
xor
cmpsb
and
sahf
adc
mov
mov
cmp
xchg
or
mov
push
cmp
and
dec
aas
das
ss
mov
sub
mov
jno
into
dec
add
mov
add
loopne
mov
jp
adc
jnp
scas
dec
jp
aaa
sbb
inc
pop
loop
cld
repnz
cmpsb
pop
sti
cmp
shll
mov
xor
fs
xchg
cmp
rcll
aaa
inc
idivl
roll
inc
push
loope
xchg
int
lods
aad
push
pop
or
jecxz
lret
xlat
xchg
and
and
test
lds
std
pop
dec
sti
cli
ljmp
and
es
mov
sub
cltd
sub
add
je
popl
add
in
pop
imulb
inc
mov
mov
clc
icebp
mov
inc
and
test
test
sub
shrb
dec
data16
cmp
movsl
jmp
dec
sbb
dec
or
mov
jmp
push
movsb
dec
jecxz
sub
inc
lcall
aad
pop
add
repnz
adc
lret
mov
fsubrl
push
mov
jnp
xchg
and
dec
xchg
dec
sub
out
and
and
pop
ja
sub
or
or
mov
or
add
pop
xchg
test
sbb
xchg
jle
jp
add
xlat
jle
out
ret
jne
loopne
mulb
xchg
dec
jbe
cmp
jb
repnz
rolb
iret
adc
mov
mov
dec
in
cwtl
pop
push
or
int3
mov
fcoml
dec
cld
adc
in
jg
xchg
scas
jno
movsb
and
lds
leave
les
lret
cld
xorl
pusha
imul
add
cs
sub
xchg
aas
push
mov
mov
adc
dec
push
ds
jg
roll
add
loop
out
mov
push
mov
push
push
push
xchg
jl
xchg
pushf
out
jnp
inc
int3
xor
hlt
pop
jnp
pop
orb
shll
mov
mov
sbb
insb
out
mov
pusha
loope
pop
sbb
lds
push
mov
jo
add
adc
jne
dec
sub
or
cmpsb
dec
fbstp
loopne
jnp
ds
mov
cmp
or
jns
jmp
hlt
ljmp
mov
jno
xorl
adc
xchg
xchg
mov
rol
cmpsb
jo
call
test
xchg
clc
in
out
insl
add
mov
push
lds
add
movsl
sub
in
ja
out
jp
mov
dec
fmul
mov
out
ficoms
fisubs
dec
push
pop
mov
sbb
rorl
cwtl
lock
inc
sbb
jo
dec
mov
sub
in
rol
fistps
sub
es
sbb
xorl
lods
int3
pushl
dec
in
sbb
or
in
mov
mov
sti
test
cli
cli
das
cmp
movl
cmp
sub
fidivrl
and
aad
pusha
out
jno
inc
mov
jne
fstl
sbb
adcb
xor
in
or
in
and
jae
xchg
sti
jle
in
mov
cmp
jb
cmpsl
outsb
popf
cltd
dec
jecxz
clc
jno
rorl
into
pusha
push
mov
repz
fcmovu
mov
jo
cmp
imul
iret
aam
imul
lcall
lds
int
clc
inc
push
subb
sbb
jb
cmpsb
adcl
out
lret
jmp
xchg
add
push
rorb
mov
lds
pop
popf
pop
sbb
push
pusha
inc
push
adc
movsl
rclb
sbb
mov
xchg
push
insb
inc
fsubl
cmp
xchg
push
mov
daa
incl
sbb
movsb
inc
add
lods
inc
das
dec
lret
sbb
nop
imul
bound
lods
rorb
xchg
push
fistl
xor
jg
pop
cltd
scas
mov
mov
insl
iret
sub
scas
adc
outsl
pop
push
test
loop
mov
inc
push
ret
test
cmp
mov
inc
in
fs
fdivr
inc
mov
push
push
jbe
scas
xlat
rolb
movsb
sbb
scas
xchg
stc
outsb
dec
call
cmp
movsl
fisttpll
cmpsb
sub
outsl
pop
mov
add
inc
pop
mov
fsts
repz
in
dec
or
jnp
shll
inc
leave
cmp
or
mov
ret
mov
out
imul
jnp
icebp
push
jb
add
sbb
adc
adc
sbb
mov
xchg
pusha
adc
aaa
dec
mov
cmp
mov
dec
add
movsb
push
or
cmp
cmovne
xchg
sub
in
cmpsl
push
adc
xor
enter
les
ss
xchg
js
mov
xchg
jbe
pop
enter
das
mov
xchg
scas
and
lret
adc
lock
xor
inc
xor
hlt
fnstenv
loopne
in
fstl
out
rclb
sahf
mov
loopne
add
les
loopne
inc
ds
lretw
fldt
rorb
pushf
enter
lds
sub
dec
jae
out
xchg
cmp
sub
and
stos
aaa
adc
sub
jb
jae
lods
fwait
int3
inc
push
or
hlt
mov
loope
gs
loope
negb
stos
mov
mov
in
lret
cmpsl
inc
fiadds
sub
cli
push
imul
ljmp
ja
lea
mov
adc
xor
repnz
inc
add
repnz
xor
insb
cmovg
adc
icebp
inc
cmp
in
hlt
lahf
pop
lahf
cli
loope
mov
mov
test
adc
lret
loope
push
loope
addr16
incl
mov
bound
jl
jmp
ja
push
mov
mov
outsb
arpl
pop
cwtl
imul
pop
xchg
stos
pop
stos
enter
test
shll
test
jle
aad
sbb
mov
repnz
and
aas
dec
test
add
sbb
movl
mov
enter
leave
pop
inc
in
movsl
mov
clc
clc
xor
out
ret
fists
inc
jbe
incl
xchg
or
adc
shlb
inc
jle
and
jl
mov
mov
mov
fmul
fisttps
mov
mov
and
adc
mov
nop
mov
fsubl
jo
fstpt
xor
fadd
cmp
mov
je
fildll
outsl
stos
jns
dec
test
out
dec
xchg
insb
or
mov
das
dec
push
insb
mull
adc
daa
inc
stos
or
movsl
pop
into
lds
stos
js
cmp
sbb
decl
push
add
ja
push
jecxz
aas
mov
cld
inc
imul
movhlps
loope
fwait
mov
xor
xchg
ja
jno
sbb
dec
lcall
dec
int
sub
adc
xchg
and
xor
xchg
jb
outsb
subl
pop
out
jae
jbe
enter
int
sub
aas
dec
push
popf
shrb
inc
cmp
sti
dec
mov
jne
fs
xchg
mov
mov
add
clc
cld
push
xchg
adc
icebp
mov
lods
inc
rorb
and
pop
or
jnp
sub
push
add
inc
inc
inc
push
hlt
int
ficompl
outsb
xchg
clc
outsl
pop
in
push
mov
scas
cmp
pop
int3
cwtl
arpl
adc
lea
das
jg
inc
rcll
mov
mov
xor
jmp
sub
cmp
mov
mov
aaa
jp
mov
fisttps
movl
addr16
out
cmp
and
push
andb
test
pop
cmpsl
aas
rolb
stos
jae
shl
cmp
inc
mov
push
imul
clc
loope
mov
jns
mov
orl
fimuls
ret
repz
mov
cld
dec
cltd
int
clc
sub
jle
jno
lock
sub
lods
pop
dec
fldcw
mov
movsb
pop
xlat
ret
fadd
mov
out
aad
clc
or
jmp
mov
rorl
cltd
addr16
xor
jecxz
and
push
lea
outsl
ret
xchg
dec
ds
xchg
jnp
ret
or
dec
loop
xor
cld
les
shrl
add
xor
incl
dec
or
mov
or
push
add
roll
inc
dec
push
psubb
stos
mov
stos
lds
arpl
or
push
stos
popf
ret
cmc
cmp
sti
sbb
ds
fcmovne
mov
fldcw
adc
xchg
xchg
shrd
mov
push
mov
stc
sub
test
push
and
push
push
push
movsb
dec
pop
out
xchg
and
pop
pop
inc
jg
or
dec
push
stos
xor
mov
cwtl
dec
push
add
adc
ds
sbb
dec
jne
jbe
shll
js
inc
mov
dec
clc
clc
jnp
mov
hlt
cli
add
mov
std
notl
add
mov
enter
push
push
loop
lahf
sbb
push
mov
aas
fmuls
pop
test
and
cmp
clc
fstpl
xorps
push
aam
xor
inc
cld
xor
outsl
fsubs
adc
push
sub
scas
pop
in
popf
push
ja
outsb
scas
push
sbb
lods
fs
dec
repz
mov
popa
aaa
jns
insb
lock
scas
jmp
xchg
sbbb
gs
xchg
adc
imul
in
xor
push
adc
pop
jo
shl
test
int3
fldenv
push
fimull
cwtl
cld
jge
aam
sbbb
mov
nop
sub
sub
or
push
aam
pop
and
lds
xchg
mov
in
in
jno
mov
inc
out
add
add
mov
jne
mov
repnz
mov
pop
lret
pusha
js
inc
pushf
xchg
sub
lods
loope
leave
shlb
inc
jecxz
jae
aam
cld
xor
std
repz
in
xchg
test
mov
push
lea
add
or
cmpsb
or
mov
int3
inc
mov
aas
sti
mov
push
addr16
push
jmp
adc
cmp
notl
xchg
inc
cld
stos
sbb
out
cmpsl
adc
jl
add
cmp
frstor
cwtl
loope
pop
subb
pop
rorl
push
aaa
into
orb
push
jle
xlat
cmpl
mov
cmp
sbb
inc
scas
sub
jns
pop
test
mov
in
pop
jle
mov
mov
cli
jge
push
lret
mov
and
das
aaa
cmc
test
add
clc
xchg
jmp
push
xor
mov
stos
mov
outsb
mov
push
movb
adcb
mov
std
scas
or
cmpsb
insb
or
or
negl
or
jmp
imul
popf
sbb
xor
pop
fildl
nop
jne
hlt
jnp
and
test
stos
mov
add
fbld
sub
mov
cli
fistpll
hlt
das
lret
stc
div
dec
jmp
aaa
imul
ret
imul
push
je
sub
in
cmp
cmpsl
inc
sbb
jl
mov
lods
mov
es
loopne
into
scas
cwtl
pop
rorb
sub
pop
out
dec
sbb
das
inc
mov
ljmp
lret
sbb
pop
pusha
adc
loope
orl
sub
lret
cmp
pop
insl
jb
lods
jbe
mov
and
jbe
scas
test
sbb
int3
cmp
add
xor
call
mov
jne
push
scas
lret
push
lcall
cmpsb
jo
cmp
fdiv
fdiv
sti
in
xchg
hlt
jecxz
pop
pop
mov
xorl
lea
push
jp
push
pop
mov
mov
fwait
dec
cmpsl
pop
mov
push
cmpsb
adc
cwtl
pop
cmpsl
xchg
jmp
and
jmp
pusha
sti
push
sub
ljmp
cmpsb
add
inc
std
mov
ja
cmpsl
outsl
mov
dec
cmp
lds
mov
adc
ficompl
add
push
xchg
in
jecxz
imul
shr
movsb
js
jmp
scas
shrl
jbe
cli
dec
sbb
mov
imul
in
repnz
icebp
es
sub
xchg
xchg
addr16
pop
sub
int
jmp
inc
sbb
mov
fidivl
andl
pushw
xchg
cmp
imulb
jecxz
mov
adc
aam
fwait
jnp
lahf
shl
sti
rclb
lock
pop
mov
shlb
push
sub
test
mov
push
mov
std
aad
add
lods
lahf
xchg
xor
dec
and
cmp
or
xchg
sti
mov
jno
cwtl
stos
inc
lret
into
out
mov
push
insl
xchg
push
in
sbb
insb
xorl
mov
andl
nop
gs
scas
push
data16
cs
jge
ljmp
mov
jo
lcall
jo
xor
push
sbb
jne
aas
sahf
lret
ljmp
push
push
xchg
daa
int
cmp
fisttpll
out
sub
flds
mov
cmc
cmp
cmpsl
xchg
lods
mov
notl
jle
and
sub
dec
mov
push
dec
mov
imul
maxps
dec
cld
push
enter
pusha
movsb
in
mov
mov
adc
mov
sbb
cmp
sbb
out
xor
fnsave
mov
jp
hlt
and
add
xor
mov
ret
insl
or
xor
cmpsl
fiaddl
dec
inc
es
inc
xchg
fucompp
cmc
fwait
test
aad
scas
repz
sbb
and
pop
bound
pop
mov
xorl
lods
out
les
ds
mov
scas
adc
sbb
test
push
outsb
mov
pushf
and
xchg
push
in
clc
movsb
addl
dec
mulb
xor
popf
hlt
lds
xor
xor
push
jbe
xchg
int
mov
and
lcall
stc
es
sbb
inc
push
jae
cmpsb
faddl
das
jmp
aad
pop
subps
cld
or
repnz
clc
pop
imul
sbb
pop
xchg
xchg
fadd
push
or
mov
cmpb
pop
adc
inc
xor
pop
push
fdivl
xlat
out
dec
adc
mov
xor
sub
notl
and
shl
sub
leave
sbb
sbb
mov
jg
in
sbb
pop
enter
adc
sub
sbb
fistpl
rclb
inc
cmp
push
lahf
sub
addb
cmp
push
cmp
push
pop
sbb
lcall
jno
push
lcall
or
aam
loop
xor
add
or
push
or
aad
sub
inc
mov
es
mov
sbb
mov
jge
test
mov
fdiv
arpl
adc
gs
mov
cmp
jns
lret
fs
or
or
and
xchg
addr16
jmp
loop
add
xchg
push
mov
xor
add
enter
insl
popf
scas
sub
push
popf
fmuls
sahf
lret
daa
and
divb
xchg
adc
and
icebp
mov
ss
mov
lcall
dec
in
loop
shll
daa
fimull
das
xchg
call
mov
addl
sbbl
adc
mov
call
ljmp
jne
ret
mov
add
hlt
repnz
dec
ret
sbb
popa
pop
rclb
out
pop
aaa
lods
test
cmpsb
fdivs
inc
and
mov
iret
fwait
scas
xchg
shrb
lahf
inc
or
sarl
std
dec
xchg
mov
pushf
dec
mov
adc
in
jb
ret
dec
mov
adc
push
inc
inc
jl
adc
jns
sbb
bound
insb
sbb
test
push
es
aam
add
call
mov
ds
subl
or
mov
cs
pushl
enter
ss
sti
pushf
or
aas
sbb
xor
fdivrs
je
inc
scas
pop
mov
in
mov
push
scas
cld
aaa
es
jecxz
fisttpll
pop
dec
in
and
or
sub
leave
pushf
loope
sub
mov
mov
push
push
outsw
pop
pushf
fsubrs
adc
push
xchg
xor
add
pop
in
cmpb
lds
orl
xor
dec
out
xor
mov
fwait
push
je
dec
dec
lds
inc
repz
sub
cld
addb
out
pop
lods
shr
mov
jne
sub
aaa
in
sbb
and
push
test
sbb
lea
dec
popf
mov
cmp
inc
lods
add
fs
push
in
leave
pop
data16
ds
rcrb
dec
pop
ljmp
xlat
shll
jmp
js
mov
andl
fsubrs
out
movsb
lret
test
cmp
push
cmp
push
outsl
or
jne
dec
mov
mov
push
enter
jmp
out
xlat
jne
sbb
mov
mov
aam
sub
test
jle
punpcklbw
mov
ljmp
xor
je
push
call
adc
scas
in
mov
rolb
popa
push
nop
push
inc
mov
hlt
lret
popf
cmp
push
arpl
into
in
aad
mov
pop
mov
push
mov
lock
mov
pop
lea
notb
popa
and
mov
cs
adc
bound
daa
mov
mov
pop
mov
or
andl
adc
arpl
addb
pcmpeqd
jmp
out
daa
cltd
in
sub
fs
mov
inc
ja
mov
jecxz
pop
mov
push
jbe
inc
pop
mov
mov
xchg
xchg
xor
cmc
sub
jb
xchg
ljmp
loop
shr
pushf
jb
adc
pop
divb
mov
xchg
dec
in
scas
popf
dec
add
movsl
cs
je
ffreep
testb
xchg
ja
les
lock
and
mov
xchg
mov
out
mov
dec
adc
jno
push
adc
loope
sbb
push
and
scas
out
mov
or
rorl
loope
test
sbb
dec
adc
jge
es
in
repnz
rcrb
jecxz
insl
cmp
and
popf
loop
xchg
push
xlat
mov
or
cmp
int3
and
repnz
xor
js
fisubl
xchg
or
mov
gs
xchg
dec
insb
test
mov
out
adc
in
add
mov
pop
fildll
and
jmp
push
arpl
neg
inc
xor
mov
fldl
push
xor
pushf
rorb
mov
cmpsb
sbb
in
xor
popf
xor
call
sti
pop
inc
fistps
fisttps
sub
and
insb
aas
sbbl
lods
in
jmp
and
cmpsl
pop
add
adcb
jecxz
insb
iret
icebp
lahf
fildll
jnp
hlt
lods
mov
push
jae
shrl
pop
or
or
in
clc
add
ljmp
dec
xchg
and
xchg
or
xor
ss
inc
inc
or
enter
jmp
inc
push
mov
fs
inc
pop
and
mov
rcl
aaa
out
cmp
rcr
loopne
mov
sbb
xchg
daa
loop
sbb
jl
xlat
and
or
xchg
test
xor
test
ja
jle
xlat
adc
push
in
xchg
js
mov
xchg
mov
movsb
aaa
xor
bound
jne
subb
sub
bound
adc
sub
mov
sub
mov
dec
fnsave
xlat
sbb
leave
fxch
cmpsl
push
sub
xor
xchg
popa
enter
mov
mov
lret
cmp
clc
call
xchg
sbb
dec
roll
loop
push
sbb
mov
js
shlb
pop
inc
fsubr
rclb
leave
inc
loop
test
repnz
jecxz
bound
jns
div
ret
roll
sub
or
fwait
in
clc
mov
xchg
outsl
or
icebp
cmp
push
or
push
fstps
and
testl
mov
add
insb
mov
mov
xor
push
outsb
cmp
lcall
out
cmp
shrl
push
mov
cmpsl
cmp
pop
xchg
mov
data16
in
pop
std
cmp
mov
cs
test
test
mov
adc
push
xorl
nop
sbb
xor
cmp
jl
in
sbb
mov
inc
jbe
lods
rcrl
jbe
daa
fmull
inc
adc
sbb
fstl
xchg
push
rcrl
xor
bound
pop
dec
sbb
jmp
jnp
imul
mov
movsl
fisttpll
test
inc
sbb
pop
or
push
stc
sub
mov
popf
pusha
sahf
pop
test
mov
test
mov
pop
fldenv
mov
ficomps
repz
dec
sbb
fldcw
cmpsl
fsubrl
cmp
cli
or
and
ficoml
in
xchg
ret
add
sbbl
push
out
pop
scas
adc
dec
lock
push
repnz
inc
sub
dec
cmp
jl
dec
push
pusha
xor
repnz
jge
outsb
test
outsb
loope
push
xor
pop
hlt
outsb
stc
sbb
sbbl
mov
fs
mov
leave
out
stos
hlt
ja
add
inc
ret
xchg
cmp
aaa
fmulp
and
cwtl
push
in
cmp
andb
and
loopne
dec
mov
ljmp
sub
jnp
xchg
out
jae
in
int3
jp
xor
mov
fnstsw
data16
cmp
jmp
scas
cs
mov
stos
lds
das
xor
in
imul
pop
aam
or
xor
xchg
flds
pop
ret
clc
into
xchg
add
mov
lock
and
ja
movsl
es
xchg
inc
jmp
into
iret
mov
fs
sub
lock
cmpb
or
kandnb
ret
push
and
lret
xchg
jmp
or
out
fs
scas
pusha
push
push
aaa
xor
push
add
xchg
xchg
scas
lcall
mov
das
pop
cwtl
and
jne
lcall
push
jb
js
rcr
jno
sub
and
xchg
fsubp
into
push
mov
and
mov
ds
aaa
mov
sbb
push
inc
adc
inc
cmp
adc
test
subb
fisubrl
mov
xor
jno
jnp
call
xchg
clc
mov
and
sbb
scas
mov
adc
pop
pop
cmp
shll
jmp
loop
pop
mov
jns
push
cld
pusha
rcrb
mov
lcall
fwait
adc
sbbl
sahf
xor
and
pop
xchg
add
movd
out
sub
or
or
test
mov
or
pop
add
mov
xchg
cwtl
dec
andl
fs
pop
insb
adc
dec
sbb
mov
lcall
test
sbb
aam
ds
mov
xor
scas
cmpsl
mov
cmp
or
ror
push
xor
adc
mov
cmp
into
mov
cmp
out
data16
pop
add
jl
xchg
test
or
fimuls
sub
out
pop
repz
inc
popf
push
ss
cmpsl
mov
dec
mov
mov
fildll
test
add
cmpsl
inc
loopne
adc
jo
rcrl
xchg
fstpl
ljmp
ss
pop
cli
ret
sti
cmp
dec
mov
out
iret
test
jo
or
call
pusha
xchg
pop
xchg
fildll
pop
pop
xor
push
sub
js
test
inc
outsb
in
push
inc
mov
mov
cmpsb
mov
jns
inc
dec
mov
mov
lahf
pop
arpl
dec
add
xor
ds
mov
test
xchg
and
add
cmp
sbb
outsb
mull
mov
lcall
sti
lcall
push
xchg
ret
push
sbb
cmp
test
xchg
xchg
das
test
fcomps
in
mov
fcmovbe
and
xchg
popf
lret
int3
xchg
lods
aam
dec
movb
movsb
or
fcmovne
push
cmc
mov
pminub
push
shlb
sub
xlat
insl
fwait
gs
lret
push
out
insl
pop
lret
out
push
xchg
sti
js
lds
sub
cmpsb
adc
sahf
movsl
shrl
rcll
jl
aas
in
out
push
cmp
dec
in
aad
stos
jg
or
add
jmp
and
in
jno
int3
enter
mov
lcall
sub
adc
fildll
icebp
in
shrb
pop
dec
jb
mov
xor
push
movsb
sub
fnstenv
and
xchg
mov
mov
pop
or
mov
adc
out
xor
inc
jb
xlat
ja
jge
jg
das
ss
incl
test
xlat
das
jl
pushf
inc
adcl
dec
inc
popf
pop
xchg
paddsw
adcb
clc
inc
test
or
inc
sbb
push
mov
xchg
jns
xchg
jbe
jle
das
leave
and
xor
adc
inc
xchg
in
out
faddp
imul
notl
imul
or
xchg
fnsave
add
sbb
out
aad
adc
xor
das
outsl
inc
icebp
pop
dec
fimuls
adc
xlat
pop
andl
cmp
out
mov
cmc
cmpsb
int3
jnp
into
repz
cld
cmpsb
pop
out
mov
cmpsl
ljmp
cmp
outsl
mov
out
or
pop
aad
mov
cwtl
rcr
test
movsl
jbe
cmp
shlb
push
imul
bound
repnz
std
lds
add
dec
pushf
popa
mov
jmp
hlt
jnp,pn
mov
pusha
push
mov
enter
jg
in
fildll
fadd
xchg
or
insb
cld
mov
inc
add
cmp
nop
das
inc
test
insl
pop
in
add
jb
jp
in
into
jmp
mov
mov
ret
popa
rorl
pop
sbb
scas
into
inc
inc
pop
sbbl
sub
jmp
test
mov
sbb
lock
add
out
push
int3
imul
pop
inc
mov
fadd
imul
add
cmpb
xlat
ds
pop
jl
and
gs
movsb
mov
xchg
pop
test
mov
in
lret
pop
inc
call
sub
xor
mov
jecxz
stos
fistps
bound
aas
mov
test
pop
ficoml
xchg
clc
mov
inc
or
into
jg
pop
and
aam
out
add
mov
push
push
movsl
mov
das
cld
mov
sbb
adc
jnp
scas
fmuls
das
aam
and
cmp
mov
pusha
stos
dec
xor
bound
mov
dec
dec
xlat
add
xchg
ret
or
lock
add
aas
outsl
leave
ja
out
mov
shll
sub
dec
mov
sbb
sub
bound
mov
dec
stc
in
loopne
not
jne
call
pop
es
xchg
scas
mov
mov
fs
aas
sbb
cltd
sbb
mov
xor
scas
inc
in
add
pushf
test
in
test
mov
xor
cmpsl
data16
cli
mov
cli
testl
daa
jae
pop
push
mov
cli
aad
push
inc
jae
push
ss
fadds
call
je
jne
and
sbb
push
push
mov
pop
mov
cld
xor
mov
cmc
dec
out
mov
xor
dec
loopne
or
data16
xchg
cmp
push
and
add
xchg
sbb
shl
add
xchg
mov
cmp
lds
push
mov
jae
testb
adc
mov
fbld
mov
imul
pushf
repnz
sub
mov
je
lret
push
adc
add
outsl
mov
push
movsl
fistpl
ret
adc
mov
sub
test
jp
imul
loopne
inc
xchg
sbb
sub
dec
adc
jle
out
enter
mov
push
inc
fiadds
gs
outsl
insl
cld
loopne
movsb
and
sub
out
and
enter
push
mov
pop
sbb
cmp
pop
icebp
mov
lret
inc
mov
xchg
xchg
mov
mov
mov
in
dec
data16
fists
in
xor
inc
sbb
mov
add
adc
aam
dec
sahf
hlt
dec
mov
jae
push
fstps
mov
sbb
fisttps
xchg
sbb
push
adc
in
jns
adc
or
fs
ret
jg
fdivp
sub
inc
shlb
fldenv
add
subb
cmp
jo
sahf
rcl
inc
mov
insb
push
adc
add
in
cmp
cmpl
repz
inc
jne
and
stos
mov
loope
push
jo
pcmpgtb
pop
testb
std
pop
push
sarb
in
sub
repz
mov
sub
movl
cmp
repz
lea
mov
cmp
and
cmc
cmp
jmp
adc
mov
sub
or
jae
fs
pop
das
in
and
hlt
pop
cmp
dec
ds
inc
mov
loope
sarb
sar
or
mov
das
scas
or
scas
and
mov
scas
and
pop
sbb
sub
sti
sbb
in
jbe
cmc
pop
nop
dec
rcr
mov
cmp
loope
pop
pop
mulb
dec
gs
das
jnp
mov
mov
rolb
jbe
int3
lock
movsb
xor
mov
rorb
loopne
pop
sahf
fdivr
jo
sub
in
inc
leave
sub
mov
fcmovnu
int3
outsl
xchg
mov
sub
sub
call
mov
mov
adc
sub
and
mov
xor
pusha
inc
cli
outsb
jb
pop
pop
dec
push
idivb
in
in
loope
pop
mov
mov
call
lea
das
mov
push
jnp
repz
jno
icebp
pop
icebp
xchg
out
xchg
pop
loope
sbb
inc
loop
popa
mov
pop
inc
inc
in
mov
xor
sub
jno
scas
inc
jne
and
ret
fsubrl
imul
std
out
push
aas
adc
movsl
jecxz
xchg
jp
push
in
add
mov
pop
ja
add
push
aaa
mov
jmp
mov
int
test
test
nop
lret
fsubl
inc
neg
mov
pop
cltd
movsb
fwait
mulb
jnp
pop
stc
sub
fstpt
fwait
cmp
stos
mov
and
jp
testl
int
scas
push
adcb
insl
xlat
mov
out
movsb
sbb
pop
dec
sti
cmp
out
xchg
je
repz
sbb
sbb
lods
out
shlb
cmp
fcmovnb
adc
leave
mov
pop
loope
jecxz
test
out
lret
or
adcb
gs
jns
mov
cltd
xchg
loopne
cmpsl
jg
add
add
call
push
push
fnstenv
int3
lret
notl
xor
add
push
into
xlat
push
rorl
in
stos
movsl
push
dec
int
jne
mov
stos
iret
nop
shl
mov
xor
or
lret
mov
les
mov
mov
xor
jl
xor
ret
loop
std
lods
mov
and
fidivl
jnp
cld
push
pop
pop
sti
cmp
mov
and
cld
out
xchg
loopne
mov
mov
mov
out
push
mov
inc
mov
sbb
hlt
in
repz
call
test
scas
pop
jle
icebp
rep
cltd
mov
addr16
int3
push
scas
in
xor
test
mov
shlb
cld
jl
jecxz
xchg
cld
adc
jno
sarl
out
pop
jl
cmp
cmp
pop
int3
fwait
scas
or
or
xor
mov
adc
fldt
sub
call
int3
test
xor
jmp
call
filds
je
fcoms
cld
ffree
cmp
pop
mov
push
adc
repz
sub
gs
fcoml
pop
adc
inc
add
fidivl
mov
cmp
cmp
pop
mov
xchg
ret
out
adc
adc
ja
les
mov
sub
sbb
or
mov
fisttps
stos
je
inc
out
fsubp
jmp
xchg
mov
daa
test
and
sti
sbb
xor
es
inc
mov
test
mov
push
sub
xchg
sub
test
xor
enter
stc
dec
push
iret
or
mov
mov
js
fcmovb
lock
call
lret
cmpsb
ljmp
ljmp
das
flds
fdiv
push
push
mov
out
in
ljmp
pop
push
push
imul
mov
shll
andps
ret
loop
aaa
outsb
stos
cmc
add
fstps
jbe
xorb
ljmp
lock
add
pop
or
es
push
jo
dec
ljmp
push
add
dec
jge
pop
cmp
addb
lret
fistl
dec
lahf
das
mov
sub
fcoml
cmpsb
fneni(8087
cmp
aad
out
cmc
cld
repz
sbb
jns
adc
cmc
mov
daa
cltd
cmc
sub
icebp
mov
fwait
mov
mov
lret
das
add
repnz
or
test
adc
sbb
jge
jns
in
push
in
jp
dec
shlb
push
or
cmpl
add
in
sub
and
sbb
out
in
lahf
pop
mov
cmpsl
bound
or
mov
jle
jo
jb
inc
adc
insl
and
data16
or
fnsave
mov
leave
xor
scas
mov
pop
dec
mov
pop
out
js
cmp
inc
sbb
addr16
fimull
mov
jnp
jne
push
push
xchg
es
cmp
and
xor
mov
pop
imul
mov
xchg
and
mov
and
std
add
or
ret
sbb
sub
or
rorl
outsl
fsubrl
fstpt
cmp
lahf
scas
adc
adc
pop
fstps
cmpsb
jb
xlat
test
adc
gs
add
in
test
fbld
lahf
out
dec
mov
mov
fsts
mov
outsl
xor
xor
dec
mov
fsubl
push
data16
pop
repz
dec
loope
pop
loope
push
xlat
pop
pushl
and
xor
pop
lods
push
daa
xlat
cmp
cltd
pusha
sbb
mov
add
cltd
in
outsl
and
sbb
repnz
shlb
test
nop
sub
roll
ljmp
push
push
cld
insl
popa
and
xchg
add
mov
shll
xchg
loope
lret
aaa
push
push
mov
xchg
ljmp
dec
mull
lock
pop
adc
inc
clc
fistps
out
cmp
lret
call
push
push
out
push
mov
xlat
outsl
xchg
mov
das
mov
shll
dec
mov
insb
xchg
mov
cmp
inc
out
add
out
repz
scas
movsb
adc
popf
out
xorl
das
push
clc
xchg
pop
adc
xchg
push
fcomi
mov
ret
rcrl
dec
sub
addl
jge
lcall
scas
fs
fnstcw
mov
in
push
xchg
add
fistl
mov
jne
jne
dec
push
xchg
mov
or
sbb
mov
mov
repnz
jl
shrl
fwait
insl
cmp
or
ret
fmuls
ja
mov
stos
js
xchg
insb
sbb
or
mov
dec
xchg
add
add
adcl
incl
cmp
outsl
adc
jp
or
nop
dec
or
xor
xlat
sub
test
into
xchg
xor
loope
nop
aas
rcrl
mov
int
push
push
cmp
les
inc
in
sbb
pop
repnz
jmp
push
in
mov
xor
test
rorb
popf
popf
iret
sbb
test
js
mov
es
jle
imul
fs
xor
xchg
xor
icebp
aad
adc
aad
xchg
cmp
cmp
mov
rcrl
or
ljmp
dec
in
test
mov
push
bound
mov
xlat
rorl
std
insl
inc
cmpsl
inc
and
out
push
sub
test
leave
cmpsl
ljmp
out
push
and
repz
dec
inc
inc
aaa
lea
les
push
sti
std
push
cmp
or
push
mov
pop
sahf
sub
imull
pushf
daa
xchg
sbb
and
mov
or
inc
daa
or
cwtl
mov
push
sub
mov
mov
cmc
push
gs
stos
je
movsl
lds
mov
lret
fldt
dec
sub
xchg
test
and
cltd
std
cmc
add
fsubr
rcll
test
in
loope
scas
and
inc
call
rclb
inc
inc
nop
pop
cmp
addb
sub
cmpsb
nop
and
xchg
sti
and
sbb
pop
mov
out
cmp
jnp
adc
mov
pop
addr16
cltd
cli
sbb
jno
lods
stc
fdivrs
lret
mov
mov
adc
jge
cwtl
and
xor
out
or
jb
mov
lods
lds
xor
daa
scas
jg
inc
repz
fidivl
add
icebp
out
iret
jno
jp
pop
inc
out
jnp
sbb
mov
sbb
ret
mov
repz
push
cli
adc
dec
out
stos
jmp
ljmp
pop
mov
lock
rolb
stos
push
lcall
insl
int
dec
fiadds
and
xor
push
arpl
jg
stos
inc
add
in
mov
and
imul
cmpl
mov
mov
lds
daa
mov
sbb
push
stc
fwait
adc
std
cmp
inc
imul
in
and
adc
mov
rcll
stc
sahf
fsts
cmc
pop
out
insl
pop
stos
push
not
insb
in
lock
inc
sbb
clc
push
jae
mov
fs
jp
pop
bound
sti
stos
in
mov
push
dec
pop
fisubl
jg
mov
mov
jp
pushf
lock
lahf
pop
mov
jns
and
xor
cmpsb
loopne
add
jo
imul
xor
aam
mov
clc
imul
push
test
inc
repz
ss
mov
xor
adc
push
sbb
mov
mov
inc
hlt
test
jno
sub
cmpsb
push
into
push
jae
shlb
mov
stos
push
cmp
and
icebp
jp
stos
and
and
cli
ja
and
ret
in
je
clc
rclb
adc
pop
std
xchg
push
jp
adc
inc
adc
jo
in
mov
sbb
cmp
add
insb
lret
adc
fadds
outsl
mov
push
jo
push
popa
mov
xchg
out
mov
push
jnp
lea
ljmp
sub
lret
scas
pushf
mov
orb
dec
jl
sbb
mov
fdivrl
push
or
mov
js
std
add
jno
and
out
inc
mov
add
cmp
add
mov
out
imul
outsb
pushf
in
push
fsubrs
sbb
dec
fmulp
movsb
lea
popf
mov
push
or
mov
xchg
cmove
push
in
jae
inc
mov
xor
cmp
xchg
dec
cld
mov
and
ret
mov
pop
repz
and
jl
jge
out
psubsb
and
xchg
repz
xorb
mov
shl
mov
loopne
icebp
dec
sbb
int
dec
pop
popa
imul
dec
sbbl
test
push
push
nop
das
xor
dec
cld
lock
add
jle
mov
out
adc
adc
add
push
xchg
ret
mov
push
dec
stos
rorb
fmuls
dec
sbb
inc
mov
ja
sti
test
add
add
cmp
add
shrl
aaa
je
sub
pop
inc
das
clc
ja
pop
xor
stc
pop
out
dec
push
push
aaa
jne
pop
jbe
insl
pop
lea
or
mov
es
lar
push
lods
add
scas
daa
mov
adc
pusha
lds
xor
push
lods
mov
stos
cmpsb
and
lret
xor
pop
mov
jae
cmp
jle
aad
jne
int
inc
cltd
mov
out
cmp
int3
loope
lds
push
mov
cmp
push
or
loope
inc
ror
fcoml
int3
cmc
shlb
adc
dec
repnz
mov
rcll
adc
int
push
jno
xor
mov
xchg
pop
loopne
jae
lock
loopne
cmp
in
in
push
mov
or
push
jle
out
hlt
pop
or
shll
or
push
add
jae
setb
outsl
jmp
jmp
arpl
adc
xchg
sahf
xor
push
iret
outsb
movl
dec
rcrb
jge
jle
and
fmuls
js
mov
loope
inc
pshufw
lret
sarl
outsl
js
imulb
ljmp
inc
imul
cmp
xchg
dec
cmp
int
loop
enter
push
pop
in
ljmp
es
call
out
xor
in
mov
pop
add
pop
push
cmp
bound
aad
iret
pop
scas
dec
jecxz
jns
mov
pusha
dec
imul
neg
stos
cmp
cs
sbb
orl
sub
sub
dec
ljmp
jg
sub
in
xchg
imul
fdivs
sahf
jnp
jle
sbb
loopne
cmp
insl
imul
jg
es
xlat
lcall
mov
cltd
pop
cltd
clc
inc
xchg
push
jg
es
inc
int
xor
dec
pop
push
pop
push
jb
subl
cltd
lods
sbb
iret
and
iret
pusha
mov
mov
add
into
or
pop
mov
xchg
cli
add
test
fldz
cmp
fstl
fisubrs
fstpt
nop
movsl
stos
cmpb
ror
cmp
jb
rcr
cmp
cmpsb
sbb
cmpsl
xor
sbb
int
mov
out
repnz
push
test
test
out
cli
dec
xor
pop
aas
shrl
mov
adc
cmp
mov
arpl
mov
stos
adc
pop
loopne
push
xor
dec
dec
or
or
ret
dec
pop
and
int3
jnp
push
inc
inc
pop
out
jb
cmp
inc
adc
pushf
jmp
ss
inc
popf
add
and
test
and
sbb
mov
inc
jle
cld
xor
xchg
adc
pop
fdivr
mov
cmp
dec
mov
out
dec
cmpsl
jnp
lock
js
fwait
push
ljmp
xor
cmp
mov
mov
cmp
ret
cmpsl
xchg
fildl
sub
mov
mov
mov
jge
xchg
push
add
adc
mov
pop
mov
xchg
les
pop
lds
sub
sub
mov
ds
push
inc
jno
pop
inc
test
jp
or
lcall
jp
inc
lods
lea
inc
pop
mov
mov
notl
push
fldt
in
int3
add
dec
mov
inc
in
jae
sub
jp
mov
ljmp
fnsave
hlt
cmp
popf
sbb
les
xor
mov
pop
or
fdivl
add
leave
xor
jmp
not
mov
test
lahf
les
xor
or
pop
aad
add
sbb
lds
push
aaa
loop
daa
es
cmc
test
push
xor
mov
and
sbb
sub
add
nop
test
sub
cmp
or
pop
mov
ja
jecxz
sub
aad
scas
fnstcw
jnp
dec
xchg
imul
out
xor
es
mov
shl
pop
and
cli
cmp
and
fcom
mov
loopne
push
neg
jg
pop
add
mov
mov
pop
idiv
jp,pn
aam
icebp
mov
pop
imulb
sbb
pop
outsb
xchg
mov
adc
sahf
les
lea
cmpsb
out
xor
lods
xor
xor
scas
iret
sub
dec
mov
add
lret
ljmp
mov
out
fwait
pop
lret
stc
cmpsb
sub
mov
loopne
sahf
repz
sbb
xlat
lea
xlat
clc
xor
insl
jb
sbb
cmc
add
jns
fsubrs
test
in
std
push
xchg
bound
xor
mov
mov
xor
pop
aad
mov
or
icebp
cmp
dec
sbb
xor
out
int3
in
xchg
inc
enter
mov
inc
mov
stc
lahf
adc
push
out
pop
adc
setbe
test
inc
xchg
dec
push
call
lcall
mov
lock
mov
call
fsubp
or
adc
js
icebp
jne
dec
std
and
aam
mov
movsb
nop
int
loopne
push
mov
inc
or
stos
inc
in
movsb
cld
js
and
cmp
jnp
dec
inc
imul
test
xchg
data16
test
hlt
push
and
enter
push
nop
decb
mov
lods
pop
xchg
lock
pop
ret
pop
mov
add
push
push
inc
je
sbb
out
incl
mov
adc
or
push
and
adc
cltd
fisubs
call
cmpsb
dec
sbb
jp
in
ret
add
ja
in
mov
out
iret
scas
push
jg
cmp
push
sub
push
inc
sub
lock
into
mov
push
fstp
arpl
leave
cmp
clc
test
pop
inc
xorb
or
mov
call
push
mov
and
insb
iret
mov
aam
stos
imul
add
mov
sbb
mov
jmp
xchg
ljmp
mov
loop
movsl
cmp
push
mov
mov
inc
arpl
xor
int
call
pushl
jmp
sub
sbb
mov
sbb
xor
pop
in
lds
xchg
xchg
push
xor
and
inc
cwtl
xchg
addr16
rcrb
addb
leave
dec
fs
js
ret
mov
mov
out
lds
daa
fstpl
xchg
mov
xchg
xorb
fisubl
mov
inc
cmpsl
cwtl
sub
mov
jle
test
xchg
lcall
ss
xchg
cmpsb
or
idivb
rcll
repnz
or
leave
add
hlt
popa
aaa
movsl
out
inc
test
lock
or
sub
mov
insb
mov
sbb
jmp
popa
cmp
adc
negb
mov
sbb
xchg
or
and
icebp
frstor
sub
mov
jo
fxch
inc
inc
sub
fbld
jmp
and
mov
enter
jo
adc
mov
inc
pop
in
cwtl
int3
leave
inc
jmp
xor
bound
daa
dec
dec
fldcw
rep
in
jp
jnp
jmp
scas
xchg
insl
add
sub
loope
cli
cmpb
mov
mov
push
adc
pusha
inc
test
and
mov
into
mov
mov
inc
sbb
cmp
xchg
push
lea
scas
mov
arpl
in
outsl
movsl
outsb
hlt
pop
dec
shlb
xchg
popa
pop
mov
je
nop
xchg
dec
rcll
testl
jmp
mov
test
add
mov
jmp
outsl
and
filds
xchg
or
adc
xor
ljmp
mov
xchg
aas
cmp
xlat
clc
adc
push
or
push
mov
or
push
jbe
sbb
outsl
xor
jbe
push
push
in
dec
pop
mov
mov
enter
shll
out
pop
daa
subl
cmpsb
in
xchg
cmp
stc
xchg
push
mov
icebp
sub
mov
xchg
mov
and
out
outsl
ds
inc
lds
insb
cs
or
mov
sbb
mov
mov
push
mov
stos
cmp
and
mov
fs
or
outsb
pop
icebp
jp
jae
test
inc
and
dec
mov
xchg
in
int3
movsl
mov
fldl
xor
add
sub
mov
sub
mov
pmullw
mov
movsb
in
mov
push
inc
push
jbe
xchg
mov
ja
pop
aam
dec
shll
xchg
xorl
test
pop
lahf
into
adc
sub
mov
xchg
into
add
jns
stc
xchg
mov
sti
nop
lds
jge
push
addr16
in
cmp
pop
dec
jno
xorl
mov
sbb
inc
scas
fstl
cmpsl
xchg
cmp
add
push
les
repnz
cmp
inc
mov
pop
fdivl
cmp
fadd
dec
gs
mov
or
sub
fwait
pop
aas
mov
rolb
add
pop
pop
lods
mov
mov
lock
rclb
mov
xchg
out
mov
mov
das
adc
dec
fldenv
xchg
mov
test
dec
test
add
cmp
mov
jae
sbb
leave
insl
sub
dec
cmp
sbb
fsubrl
push
data16
ss
ljmp
xor
mov
mov
rcrb
cmp
cmp
or
leave
daa
decl
out
pop
add
pop
clc
fnstsw
dec
repnz
icebp
push
mov
lods
test
fwait
repnz
inc
and
add
pop
sbb
and
pop
js
lret
cmpsl
dec
mov
dec
in
mov
ret
outsl
lcall
xchg
and
sbb
cmp
and
std
clc
add
fwait
cmpsl
test
and
jns
in
inc
inc
pop
mov
fnstcw
adc
fsubrs
negl
insl
fwait
clc
or
dec
loopne
daa
rcr
mov
push
adc
adc
xlat
mov
inc
rcrl
push
mov
clc
ffreep
call
jae
sub
shlb
int3
cmp
mov
repz
ljmp
xor
jne
pop
pop
add
int3
mov
test
addr16
popa
inc
jnp
call
out
jb
ds
push
mov
pop
push
pop
mov
lock
cli
cmp
movsb
and
imul
add
adc
out
push
adc
add
lcall
xchg
stos
adc
aam
xor
jg
cmc
mov
mov
movsl
dec
add
add
aas
or
in
push
jae
les
sub
push
test
les
add
ljmp
or
inc
inc
fstl
push
nop
stos
pushf
fmull
dec
fwait
lret
mov
adc
and
enter
inc
or
push
popf
push
mov
std
mov
mov
pop
inc
xchg
int3
int
mov
sbb
sub
or
jno
outsb
dec
and
les
aaa
ret
xor
rorl
add
dec
dec
je
in
decb
adc
dec
cmp
sub
push
pop
xor
cs
push
iret
ss
gs
into
in
dec
cmp
outsb
icebp
ret
or
mov
or
fsubrs
frstor
int
mov
cs
imul
push
push
inc
fwait
cli
xchg
lret
inc
shll
jne
loopne
lods
push
fisttpl
lret
mov
les
je
jo
xlat
or
in
mov
fwait
pop
icebp
jns
xchg
std
popf
adc
movsb
sub
mov
cmp
xchg
adc
rolb
sub
ja
jne
adc
push
jno
lods
dec
mov
subl
fimull
mov
pushf
sar
pop
ret
mov
out
mov
lahf
cmp
pop
movsl
dec
icebp
out
inc
sub
mov
fnstcw
mov
mov
pusha
or
mov
mov
roll
adc
pop
fmul
bnd
dec
outsl
lds
xor
stos
repz
adc
sub
mov
inc
mov
add
sub
push
adc
repnz
push
stos
mov
inc
lahf
icebp
cmp
mov
dec
arpl
push
pop
sbb
lea
mov
pushf
nop
sbb
decl
in
pop
lcall
mov
sub
cmp
pop
cmpb
je
lahf
adc
xchg
adc
cmpsl
or
pop
add
mov
insl
pop
mov
ret
inc
mov
mov
inc
decl
or
sbb
ss
xchg
inc
cltd
int3
xchg
fwait
divl
jge
pusha
add
dec
add
insb
jne
jl
pop
sbb
mov
and
push
mov
and
push
leave
jge
or
icebp
idiv
inc
ret
repz
adc
mov
imul
sub
inc
mov
imul
mov
in
or
inc
arpl
push
or
repnz
fdivs
loop
add
pop
iret
fldenv
sti
mov
cmp
inc
ss
lcall
mov
jle
iret
and
mov
and
cli
pop
les
sarl
insl
jo
dec
mov
and
nop
ja
add
inc
dec
out
stos
inc
lods
mov
popf
rcl
outsl
iret
out
int
pop
dec
dec
shrl
or
cli
aaa
xor
repz
mov
mov
dec
adc
mov
sti
ja
rcll
adc
pusha
out
pop
jecxz
test
mov
pop
xlat
cmpsl
mov
into
xchg
push
jmp
bound
fdivp
cmpsb
push
aas
scas
mov
pop
pop
jmp
jbe
test
push
mov
imulb
push
cmpsl
pop
add
push
lods
pop
imul
mov
mov
jb
or
add
mov
je
arpl
test
jmp
fwait
cmc
dec
lock
and
xchg
or
or
outsl
sub
rolb
mov
ja
sar
mov
jae
jns
mov
adc
xchg
cmp
xchg
mov
scas
fildl
movmskps
cld
mov
mov
jecxz
cmp
fnstsw
in
rclb
pop
loope
and
fildll
dec
add
outsl
shl
in
sub
jbe
into
jge
sub
js
stos
nop
or
cwtl
fisubs
mov
aaa
sub
mov
mov
jmp
adcb
pop
xchg
popf
fwait
mov
fisubrl
pop
mov
mov
mov
cwtl
push
cmp
inc
xchg
and
jg
mov
mov
add
sbb
test
notb
int
push
addr16
push
add
lods
jl
data16
mov
mov
pop
std
or
pop
scas
sbbl
mov
icebp
aam
jmp
cmp
pop
mov
and
int
ljmp
stos
sar
xor
ret
mov
movsb
out
adc
adcl
ss
inc
jne
jmp
loopne
decl
mov
xchg
movsb
mov
add
inc
loop
lds
shlb
divb
cli
pop
addl
jne
sub
ficompl
mov
fcoms
neg
inc
in
bound
sbb
lahf
sbb
jmp
sbb
add
cld
mov
add
pop
jbe
pop
aad
inc
mov
pop
mov
fidivl
sub
sarl
mov
int3
subb
fcomp
out
adc
enter
es
into
add
inc
into
xchg
je
fisubl
mov
sbb
jge
cld
cmp
mov
jle
jg
jnp
rorl
pop
cmp
inc
fnsave
insl
hlt
out
push
pushf
pop
mov
dec
mov
mov
cli
cmp
dec
mov
mov
ror
xchg
es
lods
mov
pusha
mov
fs
inc
stc
dec
dec
in
leave
and
dec
jae
sub
negl
pop
fists
lahf
and
dec
sbb
ficoml
lds
inc
mov
cli
xor
xor
imul
lock
std
test
call
pop
dec
inc
stos
and
sub
into
mov
xor
les
out
fs
ds
pop
mov
jbe
dec
push
dec
mov
add
outsb
jns
lods
mov
adc
cmp
push
ljmp
adc
lods
in
pop
or
jo
leave
sbb
leave
orl
xchg
dec
or
in
push
or
int
outsb
inc
mov
aam
data16
std
inc
rolb
jno
xor
xor
jmp
dec
push
adc
hlt
push
call
loop
pop
lret
mov
mov
mov
loope
cld
xor
cs
and
loop
pop
xchg
aas
daa
data16
repz
loopne
and
jmp
xlat
sub
mov
int3
xor
add
xchg
scas
jb
fistl
movsb
and
mov
cmp
fists
lcall
mov
shl
pop
mov
insl
xor
aaa
iret
into
mov
nop
push
inc
fxch
shrl
lods
dec
lods
fiaddl
rcll
push
fidivl
pop
mov
inc
enter
into
lods
xor
xor
push
lcall
jb
add
pop
movsb
cmpsb
addr16
jle
movl
lahf
push
and
and
test
inc
scas
dec
adc
xor
sbb
jmp
xchg
push
mov
sbb
in
arpl
dec
imul
inc
pop
cmpsl
faddl
lea
jno
push
or
sbb
repnz
jb
adc
dec
mov
dec
xchg
mov
bound
or
cmp
inc
pop
clc
lret
or
pushf
add
in
fdivr
int
cwtl
cmp
jae
xchg
ret
xchg
jg
fwait
lock
data16
pop
pop
test
push
aaa
or
int3
jns
mov
loope
mov
inc
jmp
mov
pop
or
fstps
xchg
sub
cltd
mov
loop
sbb
sbb
loop
xor
add
xchg
mov
ret
mov
ljmp
gs
jmp
gs
sub
push
mov
js
jo
cmp
lea
cmp
popf
mov
adc
and
inc
dec
jbe
jae
clc
andl
cmp
mov
hlt
gs
push
fnstsw
cmc
movb
fbstp
fists
les
mov
sub
filds
push
lods
lock
push
loopne
int3
inc
inc
adc
insb
ds
sti
cmp
push
inc
addb
jb
loope
rol
aad
cmp
and
mov
sbb
scas
popa
leave
mov
xor
and
repnz
fld
xlat
addb
or
push
jnp
subl
cmp
lcall
cmp
popf
push
cmp
jmp
mov
leave
ds
pop
cmpsb
push
out
push
mov
test
and
xchg
in
and
pop
mov
and
jp
inc
icebp
ds
push
inc
sbb
sub
ret
loopne
inc
test
movsl
jecxz
adc
cmp
inc
call
test
and
ljmp
mov
lea
jecxz
into
inc
cmpsl
test
rorb
fcomp
mov
pusha
roll
xchg
mov
lcall
push
push
cmc
or
scas
cmpsb
pop
aaa
shrl
fcompl
pusha
and
jp
jge
fldt
popa
xchg
add
mov
inc
adc
mov
pop
lea
out
or
jae
repnz
and
lds
mov
cmpl
cmp
pushf
orb
or
pop
in
sahf
mov
insl
aaa
cmpsb
stos
adc
sti
xchg
dec
cmpl
mull
mov
xchg
cmp
mov
dec
push
pop
sub
xor
cmpsl
cmp
xor
out
pop
fnstcw
ljmp
dec
bound
test
mov
out
dec
xor
adc
insb
jb
sbb
or
fmulp
add
scas
lret
popf
mov
xor
int3
mov
std
dec
add
pop
xor
sub
andl
xchg
mov
dec
mov
mov
sub
mov
xor
xor
loop
xchg
xchg
ret
jl
mov
pop
jmp
call
sbb
add
xchg
add
mov
pop
leave
icebp
int
dec
jmp
mov
add
negl
pop
xchg
ljmp
into
xchg
je
jp
std
js
pop
xchg
cltd
aaa
dec
imul
fldcw
add
inc
cmp
mov
dec
push
mov
push
and
cmp
movsb
mov
and
enter
flds
inc
push
bound
mov
pop
testb
mov
push
cmc
std
repnz
fisubrs
loope
or
mov
push
enter
lea
pop
inc
cmp
movsb
cmpsb
jp
xchg
and
int
pop
fscale
pop
add
mov
and
xor
mov
in
mov
pusha
out
push
xchg
xor
sub
sub
and
pop
adc
sti
pusha
and
or
add
pop
dec
pop
mov
dec
jg
test
js
mov
lahf
or
lds
xorl
jge
mov
mov
out
sub
add
sbb
xor
and
or
mov
sub
shrl
pop
mov
mov
pushf
cmp
jg
push
outsb
push
cltd
insb
scas
add
inc
or
xor
xchg
or
cmp
je
insl
repnz
iret
rorl
rcll
cs
adc
xchg
push
mov
pop
out
data16
cli
xor
stos
mov
je
lea
mov
faddl
mov
jnp
push
shr
mov
push
xor
lret
mov
int
rolb
out
fbld
push
test
sub
shll
sbb
and
rcrl
aas
dec
jns
mov
movsb
testl
jnp
stc
push
pop
mov
pop
aaa
cmpsl
jl
mov
push
push
fsubl
imul
xor
lcall
pop
arpl
inc
es
mov
movsl
sarb
subl
and
sbb
mov
pop
popa
pop
test
pop
sti
sarl
xor
andb
adc
inc
sub
mov
aam
xlat
mov
lds
loopne
jnp
pop
jl
pop
roll
adc
cltd
stc
mov
cmp
sub
mov
mov
ret
out
arpl
decl
mov
mov
insl
out
and
mov
jb
cmpsb
not
out
testb
or
lds
ljmp
popf
cli
dec
add
xor
lret
rclb
push
xor
pop
and
dec
sti
mov
lds
jle
popf
mov
inc
nop
adc
add
rclb
add
and
out
lcall
xor
mov
aaa
int
imul
jnp
hlt
jmp
out
fwait
stos
add
pop
or
mov
std
push
sti
push
xor
jecxz
fdivl
stos
xchg
popf
js
in
lcall
js
push
jns
cmc
lret
pop
sbb
xor
mov
aaa
inc
movsb
pop
lret
push
shll
int3
rorb
xor
shrb
mov
and
test
pop
mov
cmp
imul
dec
pxor
mov
mov
cmp
mov
or
ja
adc
push
sub
add
xchg
adc
and
sbb
outsb
push
test
fwait
or
int3
fldcw
inc
pop
js
dec
repz
into
in
out
mov
fnop
xor
push
test
push
adc
jge
jge
and
pop
xchg
jnp
pop
fnsave
enter
mov
inc
mov
js
fisttps
call
pop
je
ret
push
push
rcl
xor
and
sub
ja
out
out
rcl
cmpsl
pop
popf
mov
pop
add
bswap
repz
xchg
call
sub
mov
push
or
sahf
push
cmpsb
rorb
ret
sbb
lret
inc
mov
jl
jno
or
ja
popa
imul
push
dec
jnp
jp
lods
cmc
lret
mov
add
inc
xchg
adc
out
ljmp
repz
pop
inc
lcall
dec
arpl
aad
xor
int3
aam
mov
xorb
dec
fdiv
rcll
cmp
xchg
je
pop
sti
aaa
cmpsb
fwait
add
testb
sbb
flds
jmp
stc
push
lret
repz
cmp
xor
fisttpll
fs
out
push
cs
or
mov
aam
inc
sbb
fs
test
pop
xchg
roll
cs
pop
push
leave
jns
mov
jge
sub
xchg
jno
lds
mov
das
stos
je
pop
mov
sbb
ljmp
xchg
mov
push
mov
in
lret
pusha
sbb
mov
mov
das
mov
sub
or
movsb
mov
adc
cld
mov
fdivr
movsl
les
or
lahf
fstpl
jmp
pop
es
xchg
mov
aad
idivl
sti
test
pop
test
mov
push
mov
jge
push
cmp
adc
mov
sbb
fiaddl
cmc
iret
inc
inc
das
mov
nop
int
and
push
jb
or
das
hlt
jmp
aam
bound
lea
xchg
pop
xlat
xor
aad
push
ret
jno
inc
cltd
pop
xorl
sti
sahf
mov
fwait
jbe
mov
out
push
movsb
inc
dec
pop
rorl
cmp
mov
sub
inc
ja
pop
andl
cld
mov
movsl
cmpsl
daa
popa
mov
cmpsl
jne
pop
pop
inc
test
and
pop
daa
subb
outsl
std
ret
xor
pop
jle
pop
stos
jecxz
jl
idivb
mov
roll
pushf
jb
xchg
dec
mov
or
xchg
sbb
push
lock
cmp
fnsave
lea
psllq
psrld
and
xchg
insb
sbb
adc
sbb
scas
mov
pop
sahf
jmp
flds
dec
enter
fisttpll
mov
sti
ficoms
sub
in
push
push
add
dec
imul
xchg
call
push
dec
mov
dec
mov
lds
pop
stos
mov
repz
ret
jl
scas
and
out
push
inc
fisttpl
xchg
push
or
cmp
add
jge
lods
mov
dec
dec
add
js
mov
mov
push
bnd
dec
fldenv
js
popf
mov
jb
jp
jg
dec
cmp
jmp
std
add
lea
xor
cltd
add
pop
test
inc
inc
dec
gs
adc
data16
jo
hlt
pushf
mov
and
fldl
popf
lret
or
xlat
pop
rcrl
addr16
fstpl
mov
daa
sar
push
je
dec
jp
out
push
mov
aam
cmp
aad
sub
add
mov
push
cmp
inc
lret
lods
ficompl
mov
pop
pop
fidivs
or
jge
mov
ja
fdivr
psadbw
cmp
or
popa
call
pop
cmp
movsl
pop
clc
adc
inc
daa
fiaddl
xor
sub
add
cmp
mov
fucomp
sbb
xchg
ja
jge
mov
scas
addr16
js
jae
push
movhps
pushf
mov
mov
and
rorb
sbb
cmpsb
sub
adc
inc
out
inc
push
mov
mov
in
mov
xor
ljmp
mov
int3
dec
xor
popl
fadd
cmp
jle
push
push
dec
mov
hlt
xchg
repz
and
fildll
daa
jp
mov
shlb
outsl
leave
scas
mov
scas
popa
pop
mov
out
loop
cmpsl
or
shlb
mov
lahf
dec
movsl
add
hlt
ljmp
scas
push
add
jae
and
in
loop
add
lds
and
rolb
lods
jmp
pop
sbb
dec
cli
ja
push
add
and
xor
xchg
push
inc
out
cld
xchg
inc
push
sub
mov
fnstsw
arpl
ja
mov
jmp
adc
fs
or
scas
sti
lds
cltd
xchg
adc
clc
push
nop
insb
sub
pop
imul
mov
add
jns
fwait
ja
xchg
je
ret
pop
add
shlb
ret
ret
outsb
xor
xor
loope
adc
test
mov
jl
inc
or
test
aam
mov
sub
dec
cmp
pop
sbb
popf
dec
jmp
icebp
outsl
xchg
aaa
inc
inc
or
inc
popf
mov
repnz
or
push
outsl
mov
aas
lods
cmc
mov
and
scas
fisubrs
mov
add
lahf
cmp
push
mov
lock
out
mov
test
divb
mov
icebp
inc
shr
cwtl
cwtl
mov
sti
pusha
pop
icebp
dec
test
dec
mov
pop
mov
iret
or
jecxz
rclb
xlat
adc
aam
loop
out
mov
fs
inc
sbb
jmp
nop
and
xor
inc
mov
lds
push
in
mov
adc
ss
mov
jmp
out
mov
popf
sub
iret
call
mov
lcall
shr
das
inc
or
mov
rorl
test
enter
pop
outsb
in
jno
jp
jb
jo
cltd
jge
dec
ss
mov
movsl
cld
dec
sahf
les
add
push
and
and
loope
arpl
fs
and
xchg
mov
jp
fld
xor
pop
lahf
inc
mov
movsb
or
mov
les
out
repnz
pop
inc
call
xlat
rcl
cmp
cltd
adc
adc
cld
mov
or
nop
and
mov
mov
call
je
or
popl
mov
scas
les
int
iret
fcmovnbe
jmp
lea
mov
leave
xor
jb
in
pop
mov
dec
insb
mov
imul
sub
cmp
mov
in
or
fcompl
outsl
repnz
popa
jmp
adc
push
aad
sbb
clc
cmp
jmp
and
adc
jl
pop
sub
and
add
pop
lcall
inc
ss
push
cwtl
test
jo
test
loope
pop
mov
in
jmp
sub
mov
mov
cmp
mov
lds
dec
stos
pop
mov
mov
in
std
repnz
test
out
lock
clc
jmp
in
out
outsb
loope
inc
push
out
xchg
dec
adcl
rcr
call
mov
ljmp
daa
mov
in
adc
notb
std
icebp
aas
sub
das
out
out
dec
lret
push
pop
insb
lahf
push
xor
jno
pop
push
jnp
out
inc
std
stc
xchg
mov
pop
push
cmp
fidivl
mov
push
imul
mov
ss
xor
pop
push
mov
cli
inc
add
pop
sbb
lahf
adc
sub
sbb
xchg
sub
outsl
pop
jle
ret
int
imul
push
aam
ja
cmpsb
in
enter
jle
je
insb
fld
negl
jno
dec
mov
push
cmp
jge
or
mov
mull
stc
repz
xor
in
vmovaps
push
rclb
mov
push
imul
std
cltd
sub
insl
push
dec
push
xchg
mov
mov
mov
in
fidivs
sub
lret
and
out
sbb
xchg
scas
insb
lcall
mull
or
xchg
scas
mov
aaa
push
movsl
sbb
jne
hlt
loope
popa
inc
ljmp
mov
std
cmp
in
sbb
inc
add
andb
xchg
cmpsl
pusha
inc
fimuls
pusha
push
addr16
movsl
pop
mov
popa
jecxz
dec
aaa
aas
xchg
lods
fisttps
pop
push
fists
jns
sbb
aaa
adc
scas
pop
pop
mov
jb
and
dec
sub
dec
fadd
popf
pop
inc
mov
movsb
add
daa
xchg
out
cmp
ss
enter
mov
xor
pop
mov
cld
leave
add
enter
jo
mov
dec
ja
lret
inc
lcall
push
push
outsb
shll
inc
xchg
xchg
dec
icebp
pop
mov
pop
add
mov
imul
xor
sbb
mov
ds
jmp
cmp
imul
mov
scas
fsubrl
jbe
and
xchg
and
dec
dec
dec
jns
loopne
in
pop
ljmp
add
lock
stos
idivl
out
outsl
das
mov
mov
sbb
outsb
mov
pusha
lahf
xchg
jae
popa
mov
push
lea
add
int3
or
test
arpl
lcall
call
stos
sbb
scas
test
movl
cli
cmp
jmp
cmpl
lret
cmp
cmpsl
imul
ja
int3
sub
aad
movsl
sub
jae
loopne
xacquire
mov
sub
iret
xchg
dec
movsl
into
xchg
out
xor
mov
int3
xchg
int3
xbegin
pop
fildl
iret
xchg
aam
cmp
jmp
pop
daa
or
test
sub
bound
and
cmp
shrl
sub
adc
and
dec
pslld
cmpsl
xor
xchg
imul
cmpsl
negb
cmp
jnp
sub
fsubrs
xchg
jp
fwait
dec
fcompl
cmp
pusha
jnp
cs
or
xchg
cmp
je
push
mov
out
repz
cmp
jnp
test
rcrb
imull
inc
xchg
jbe
aad
adc
mov
loopne
out
test
jbe
ror
js
icebp
arpl
shll
adc
xchg
xor
jb
fisubrl
stc
ds
dec
pop
ljmp
mov
xchg
cli
push
adc
xlat
mov
ds
or
lock
sbb
sbb
lret
mov
xchg
mov
pop
mov
mov
shlb
imul
lods
mov
inc
dec
inc
push
lahf
xor
push
mov
push
mov
sub
pop
adc
mov
cmp
add
mov
sarb
mov
jnp
xor
pop
fildl
popf
popf
addr16
push
pop
xor
inc
lds
push
movsb
add
jne
out
cmc
adc
jg
jmp
lds
adc
dec
in
jmp
mov
ds
xor
pop
pop
xchg
push
divb
and
lods
adc
inc
test
cmp
addb
addr16
icebp
aad
subb
out
xor
aaa
and
fdivl
pop
fwait
je
sub
sub
pop
pop
inc
cmpl
push
rcrb
jb
cs
dec
pop
out
test
mov
in
lods
mov
das
loop
jae
stc
fnstenv
xor
cmpsb
add
incb
sbb
ret
clc
inc
push
push
int3
dec
cwtl
loopne
pop
mov
and
lds
cmp
jne
ja
pushf
xchg
lcall
dec
jo
mov
outsb
push
mov
out
sub
pusha
pushf
cmp
addb
loopne
jnp
mov
adc
stos
in
jno
push
mov
imul
mov
subl
loopne
cltd
dec
lods
test
shrl
and
in
mov
cmp
xchg
cli
jno
je
cltd
in
dec
std
mov
jne
xchg
adc
and
inc
sub
and
fdivr
fwait
testb
mov
rorl
adcb
int3
xchg
test
out
imul
push
mulb
push
or
std
xchg
mov
mov
aad
jb
mov
sub
inc
mov
cmp
test
pmuludq
sub
cli
and
lods
adc
push
data16
push
movsb
out
inc
lea
xor
sub
push
testl
ret
inc
pusha
push
pop
out
stos
test
inc
out
mov
mov
addr16
stc
inc
push
pop
adc
or
adc
xchg
outsb
ficompl
out
popf
and
cwtl
add
into
test
cli
icebp
cmp
mov
mov
push
sbb
push
xlat
int
into
es
cmp
andps
adcl
fisubl
push
jmp
fsts
aas
cltd
jne
loopne
lds
xor
icebp
and
cmpsb
xchg
jge
push
aas
mov
lahf
rorb
sub
je
inc
dec
cmp
xor
sbb
sti
inc
clc
fiaddl
sub
add
adc
xchg
cmp
mov
std
jge
and
add
mov
lods
std
sub
push
mov
enter
lea
in
jl
or
xor
inc
addr16
fwait
or
lock
xor
fimuls
jae
ret
xor
addr16
xor
push
cmpsl
dec
inc
mov
mov
mov
cmp
mov
and
dec
dec
rcrb
pop
sbbb
lea
dec
cmp
push
push
jnp
iret
dec
and
aaa
xchg
push
jns
xchg
lods
cmpb
loope
inc
andb
dec
dec
push
test
xchg
or
push
ficoml
ja
shr
inc
adc
xchg
testb
fwait
movsb
mov
hlt
js
popf
sbb
dec
add
adc
dec
mov
push
xor
int
ja
jle
jl
lret
jae
lahf
sti
sbb
sbb
aad
negl
xor
mov
repz
sbb
lock
jnp
adc
push
mov
test
xchg
add
jmp
inc
mov
xor
aam
out
xchg
mov
or
sbb
push
xchg
add
cs
inc
imul
ret
test
out
mov
cmp
mov
imul
fmull
pop
int
pop
popa
jl
mov
mov
cld
sbb
sahf
lods
cmp
jecxz
pop
jbe
mov
and
stc
aaa
popf
dec
xchg
jge
mov
es
pop
std
xchg
leave
and
sub
push
jge,pt
data16
jno
xor
push
lea
js
aam
addr16
xlat
xlat
std
mov
nop
flds
ret
jae
cmp
mov
cmp
loope
or
dec
cltd
dec
jo
rolb
push
adc
jge
std
cmp
adc
or
mov
cmpsl
lea
inc
inc
mov
or
inc
stos
xchg
mov
sub
xor
xchg
pop
dec
popa
cli
std
inc
mov
fwait
je
shlb
repz
pop
insb
scas
sbb
mov
outsl
pushf
popf
lcall
sbb
push
popf
sbb
sahf
fwait
lcall
in
iret
stos
inc
xor
mov
stos
mov
mov
sbb
mov
add
rorb
xor
in
cmpsb
sbb
xor
rcrb
mov
push
cmpsb
insb
inc
pop
and
das
mov
mov
cs
adc
cli
jge
pop
ret
lods
mov
sbb
dec
cmp
mov
sbb
or
push
lcall
pop
xchg
and
fadds
lock
jmp
xchg
pop
inc
ret
mov
shll
movsb
cmp
adc
jb
mov
jo
xor
es
adc
mov
adc
push
and
cld
xchg
xor
cld
insl
jp
adc
adc
pop
pop
mov
mov
imul
add
sbb
jmp
sbb
int
jg
adc
or
mov
and
cmpsl
outsb
orl
out
std
in
scas
inc
orb
dec
sbb
cmp
stc
rcrl
stc
xchg
xchg
and
push
pop
mov
int3
repnz
cmp
pop
jl
inc
icebp
sbb
pop
ljmp
ret
mov
sbb
repnz
jge
sub
xchg
and
mov
inc
and
in
mov
mov
xor
imul
push
ljmp
lea
sti
cmp
push
int
enter
xchg
dec
and
xorl
sub
cmp
arpl
xor
orl
loope,pt
loop
sbb
dec
out
inc
imul
mov
push
aam
add
shll
cltd
pop
mov
xor
outsb
sub
test
mov
mov
mov
inc
add
mov
insl
sub
and
push
adc
fdivrl
shrl
outsl
shrb
mov
mov
jmp
mov
jl
addr16
jno
cltd
push
out
stc
out
or
das
xchg
dec
or
cmpsl
inc
sub
mov
dec
add
fdivrs
dec
lods
ds
ret
ret
mov
jmp
outsl
loop,pn
push
incb
das
xchg
mov
pop
cmpsb
xor
in
outsb
loopne
xor
cmp
inc
cs
cmpsl
and
fsts
insl
dec
jle
out
pop
mov
sbbb
fisttpl
sti
popf
fisubs
sbb
push
sti
xor
mov
dec
data16
mov
or
sahf
xchg
mov
mov
lods
adcb
xor
xchg
lods
mov
xchg
cltd
sahf
icebp
enter
into
adc
jmp
mov
pushf
subb
fucomp
call
cmp
jne
mov
in
fldl
add
ret
fucom
sbb
rol
push
mov
out
add
pop
addr16
fldcw
pop
in
or
ficompl
aam
xor
pop
fs
adc
div
cmp
leave
test
push
scas
push
sub
pushf
pop
sub
inc
js
clc
fsubrl
lds
xlat
push
pop
push
or
imul
xchg
cltd
arpl
add
subl
test
push
pop
shl
fucomi
mov
xchg
shl
sbb
int
xchg
sbb
xchg
mov
and
sti
push
js
mov
push
push
and
loope
jne
push
xlat
add
mov
inc
cld
push
jecxz
or
out
shlb
cltd
jno
mov
xlat
iret
fs
gs
sub
outsb
push
dec
stos
mov
pop
repnz
fidivl
push
aaa
out
cld
out
push
sub
mov
nop
ljmp
xchg
cld
inc
ja
jb
in
sbb
mov
dec
daa
enter
sub
xor
push
sbb
icebp
xchg
add
sbb
xor
int
pop
icebp
and
pushf
lods
xchg
add
nop
adc
sbb
cmp
stos
fwait
cmc
cmp
xor
out
icebp
and
dec
iret
mov
jns
imul
jae
fistpl
sahf
cmp
push
imul
inc
pop
bound
inc
and
in
sbb
dec
push
ds
xor
negb
jnp
sub
fdivrl
das
dec
adc
cs
sub
pop
gs
fwait
mov
leave
aas
sub
movsl
cmpsb
es
jle
call
jg
xor
inc
jge
or
lret
sbb
dec
adc
ret
sub
sbb
or
imul
sbb
add
iret
bound
test
mov
fwait
daa
out
fdivrs
adc
stos
push
xor
fnstcw
sbbl
sbb
inc
lock
ja
xchg
or
es
fisubl
arpl
lock
stos
in
inc
add
cmc
mov
push
jge
lret
adc
mov
cltd
enter
push
jp
pop
test
dec
insb
popa
shl
les
cli
stos
ret
mov
mov
xor
dec
jge
xchg
adc
stos
and
dec
xor
or
leave
mov
pop
leave
repz
add
cs
xor
add
inc
push
and
scas
loopne
and
pop
or
sub
cwtl
lea
test
movsl
pop
out
and
push
daa
arpl
mov
call
adc
pop
mov
jecxz
xorl
test
shlb
xchg
mov
mov
mov
push
enter
js
loope
push
outsb
mov
das
ret
push
mov
in
or
fidivrs
sbb
test
ret
je
clc
mov
sub
fsubs
inc
in
pop
mov
test
ljmp
rol
dec
movb
rolb
ficomps
pop
mov
xor
pop
or
xchg
shr
aas
cli
mov
data16
insl
call
shr
andl
icebp
in
fisttpl
push
lret
xchg
test
out
nop
cld
hlt
push
or
cld
repz
pop
dec
test
pop
insb
jae
fwait
mov
mov
movsl
mov
lcall
cmp
lcall
push
dec
push
xlat
gs
outsl
je
push
xchg
cmpsl
cmpsb
mov
mov
mov
adc
scas
inc
lock
sub
sub
xor
cmp
call
jae
lds
dec
lods
or
dec
pop
shl
cld
into
and
pop
fstpl
gs
xchg
popa
mov
outsl
hlt
fistl
add
mov
lds
xchg
daa
mov
mov
aam
jp
cli
out
movl
inc
mov
ss
pop
mov
push
out
int3
mov
cld
ss
xor
jl
pop
add
int3
jae
xchg
lds
jecxz
push
iret
lret
mov
sub
arpl
cmpsl
inc
pushf
in
adc
inc
and
int
scas
mov
jo
lds
inc
pop
or
stos
roll
repz
bound
pop
lock
mov
fdivrp
adc
adc
lahf
imul
or
idivl
sti
mov
push
adc
sub
fbstp
shrl
mov
daa
ljmp
mov
hlt
and
fistpll
clc
sbb
cmp
jno
lds
xor
cld
cld
popf
lcall
or
addb
mov
es
sti
adcl
inc
mov
fistl
bound
test
cmc
or
aam
cmpsb
xor
les
pop
sbb
xlat
push
shlb
icebp
repnz
add
mov
psadbw
jle
or
mov
jb
stos
aaa
mov
shr
add
inc
aaa
jns
pop
pop
jo
mov
cs
jp
mov
in
addr16
mov
adc
addr16
cmp
add
in
js
jg
pop
sti
outsl
into
xor
sub
cmpsb
cmpsb
cltd
cltd
or
and
inc
xor
push
mov
mov
sbb
inc
scas
push
pop
ja
pop
xor
negl
ja
push
insb
test
mov
pop
iret
ss
push
movl
push
popa
aad
je
add
por
push
pusha
das
adc
out
mov
fidivrs
or
xor
sbb
mov
jbe
adc
jo,pn
mov
push
cmp
and
imul
xchg
and
mov
mov
jne
ds
sahf
aas
out
bound
aas
dec
mov
mov
in
sahf
mov
stos
lret
out
scas
jle
scas
sbb
mov
rolb
pop
mov
sbb
test
inc
jbe
je
adc
fimuls
es
pop
push
ret
cld
data16
movl
dec
push
cmc
js
or
sti
mov
inc
and
inc
sub
inc
scas
lcall
adc
pushf
fdivs
mov
mov
sub
jl
jbe
mov
pop
and
add
cwtl
stos
jecxz
push
ficoml
push
mov
das
push
bound
or
mov
xchg
add
xchg
push
mov
jp
aam
pop
ret
and
scas
test
cmp
mov
clc
pop
pop
jecxz
mov
dec
mov
lcall
cmp
out
adc
test
clc
out
mov
jmp
jno
mov
sub
jg
lahf
sahf
xchg
mov
stos
add
mov
addr16
pop
jmp
mov
push
mov
fsub
aad
xor
dec
out
inc
or
pop
push
adcl
cli
lahf
jmp
aaa
mov
aas
mov
push
xchg
mov
jp
cwtl
ror
xchg
add
out
negb
add
ljmp
gs
and
xchg
cmp
inc
and
add
sbb
mov
pop
xor
mov
lcall
ret
mov
or
dec
hlt
mov
addr16
xor
jmp
push
pop
std
and
bound
sub
in
inc
mov
push
pop
test
dec
add
xor
sbb
orb
rcrl
cmp
ret
sbb
rol
push
mov
jmp
mov
movl
fld
sbb
jb
in
push
les
xor
pop
sbb
loopne
cmp
adc
jmp
outsb
repz
or
sbb
test
xchg
mov
out
ja
outsl
andb
jno
xor
out
mov
xchg
cld
jnp
push
pop
sub
sbb
mov
pop
mov
jg
popf
sbb
int
test
xchg
js
arpl
sbb
dec
test
cmpsl
xor
out
sub
scas
jg
inc
lahf
mov
mov
push
enter
test
incb
add
data16
jbe
cltd
xchg
out
push
arpl
jg
xor
popa
scas
aam
push
sub
jb
iret
outsl
lock
jmp
jle
test
cs
test
jno
xchg
or
movsl
popa
outsl
jmp
fnstenv
stc
or
mov
ss
add
cltd
mov
lea
lds
popf
fldt
mov
mov
jno
inc
ds
icebp
pop
lods
add
aad
aas
sarb
fisubrs
cwtl
cmpsl
xor
dec
or
out
cmp
inc
mov
sub
sbb
mov
mov
mov
aas
sbb
ret
faddl
xor
mov
or
stos
mov
push
js
dec
testb
test
mov
mulb
mov
adcb
mov
outsl
sub
stos
sbb
sbb
out
push
cld
jns
xchg
je
lea
dec
sbb
xchg
dec
jmp
mov
jbe
out
in
push
mov
ror
or
lods
mov
mov
stc
or
pop
push
sbb
push
push
movsb
out
dec
scas
lods
stc
xchg
iret
mov
sub
fiadds
add
inc
mov
mov
lods
rol
mov
inc
loopne
bound
or
inc
mov
xchg
pop
std
xor
and
cld
fdivs
pop
mov
mov
mov
push
scas
popf
add
stos
mov
xor
jl
xor
pop
jns
ror
dec
in
call
incl
and
dec
and
mov
push
push
andb
inc
mov
scas
test
aas
loope
les
add
or
scas
adc
jg
aaa
adc
xor
je
shl
sub
adc
inc
out
jb
jge
test
or
data16
adc
in
adc
inc
cli
dec
daa
xor
inc
xchg
shlb
dec
push
xchg
scas
and
repnz
and
aam
rolb
addb
xchg
sub
cli
cmp
inc
sub
test
stc
cli
xor
mov
fiaddl
insb
or
mov
insb
loop
cli
xor
call
xchg
mov
push
cmp
shll
adcb
mov
or
pop
daa
dec
mov
ret
adc
int3
jl
js
add
jmp
cmp
fsubrl
pop
sbb
cmp
ret
lods
cmc
lretw
test
ljmp
jle
sbb
cmp
jne
cmp
es
xchg
iret
jg
pop
adc
dec
inc
or
sub
and
and
addb
and
loope
mov
push
js
jno
adc
pop
loopne
movsb
nop
jecxz
push
push
add
in
xor
or
xchg
or
or
push
mov
mov
inc
sub
data16
mov
add
fists
fpatan
js
push
sbb
das
sbb
mov
sbb
xchg
stos
loop
fsubs
clc
cmpsl
add
rcll
je
inc
mulb
push
xchg
cmp
xchg
sub
jb
insl
pop
mov
or
cltd
idivb
pushf
stos
enter
pop
and
lock
je
dec
xchg
das
nop
jnp
or
and
cli
int
lods
push
mov
bound
adc
ret
push
mov
push
or
xor
and
cmp
mov
imul
aaa
lea
xchg
pop
nop
cmpl
je
inc
inc
cmp
cli
psrld
daa
and
inc
lds
pop
mov
addr16
jmp
push
cmp
mov
cltd
push
adc
sub
or
outsl
icebp
jp
cli
xchg
fwait
lret
lcall
mov
add
or
xchg
clc
jns
adc
in
cmc
push
fnstenv
jns
push
gs
mov
sbb
fimuls
loope
jge
xchg
aaa
mull
ja
xchg
cmp
cltd
insl
push
mov
jge
fistps
outsb
add
adc
lock
pusha
std
adc
sbb
sbb
push
xor
push
sbb
fldt
aaa
iret
bound
jo
xchg
xlat
xlat
loope
push
jp
out
ds
dec
or
or
mov
fldt
dec
cmp
sub
cwtl
dec
stc
in
cwtl
lret
mov
mov
pop
adc
pop
pop
cld
orl
xchg
call
cmp
sahf
jle
lock
cli
and
sbb
mov
inc
lods
mov
stos
iret
clc
or
ja
sti
sbbb
fmul
push
sbb
call
fnstcw
jle
push
add
pop
push
divb
sbb
test
add
or
sub
sbb
lret
jecxz
mov
inc
inc
sbb
sub
and
push
push
and
pusha
sti
fbstp
add
pop
dec
out
in
ds
mov
inc
xlat
and
sub
dec
scas
xor
dec
add
ret
in
bound
hlt
jb
orb
inc
pop
adc
aaa
mov
jl
xor
repz
int3
dec
add
mov
leave
or
fwait
add
hlt
xorl
push
ret
xchg
lods
dec
lock
into
add
cltd
mov
cs
lret
jbe
push
sahf
insl
in
cmpsb
add
sub
in
lods
fdivrl
xchg
cmp
in
add
push
pop
orb
lods
pinsrw
sub
int
jle
dec
push
xor
dec
push
xchg
sti
test
mov
outsl
inc
adc
repnz
into
xor
xchg
aam
dec
sub
ljmp
stos
loop
push
adc
dec
out
into
je
dec
aas
or
stos
add
test
xchg
mov
mov
loope
mov
call
mov
lahf
je
sbb
jb
dec
sbbl
mov
adc
mov
cmp
pop
ret
add
jae
test
push
mov
es
adc
jnp
mov
pop
fadds
repnz
pop
push
push
mov
push
xchg
mov
sbb
dec
pop
cltd
lods
data16
add
loope
in
movsb
mov
jo
stc
or
repz
orb
leave
insb
dec
lds
or
movsl
test
add
shld
aam
and
xchg
imulb
out
mov
sbb
push
inc
xor
xchg
push
dec
push
mov
xchg
cmp
add
sub
out
pushf
daa
sub
dec
lahf
xchg
or
inc
lret
xor
jl
adc
mov
xor
jno
imul
lods
jmp
mov
mov
xor
js
pushf
push
push
push
sti
mov
movsl
lret
daa
mov
in
data16
loope
mov
icebp
es
dec
adc
ret
pop
dec
xchg
movsb
lret
jmp
not
std
fcoms
inc
scas
cs
loope
mov
in
fs
sbb
push
lcall
sahf
call
rcl
lods
insb
in
mov
ds
mov
ret
jle
sbb
mov
or
mov
inc
in
push
sbb
inc
pop
pop
ja
xchg
adc
and
pusha
push
inc
xor
out
mov
pop
shl
mov
jge
incl
cli
hlt
data16
push
mov
subl
pop
cli
je
mov
xchg
pop
or
add
and
pusha
cmp
add
addr16
ja
leave
dec
cmp
or
enter
shrb
jne
ret
xor
sbb
mov
and
stos
mov
sub
or
mov
adc
pop
sub
aas
xchg
cmp
add
or
mov
dec
dec
jle
sbb
and
mov
sub
jp
int
xlat
mov
leave
shll
mov
movsl
int
enter
js
fwait
and
jbe
xchg
dec
clc
add
pushf
sbb
mov
repnz
cld
lret
or
xor
pop
outsl
mov
jle
pop
pop
xchg
in
mov
xor
leave
nop
sbb
popa
repnz
cmp
cmp
mov
jmp
and
mov
jnp
cmp
adc
inc
mov
mov
and
push
pop
ja
pusha
sub
jnp
imul
mov
pusha
and
pop
xchg
enter
mov
pop
sbb
xor
mov
xchg
rol
fildl
dec
int3
je
adc
mov
scas
jmp
jo
xor
dec
mov
popf
sbb
and
clc
pop
dec
insl
jg
movsb
push
pushf
fildl
mov
outsl
mov
fwait
lcall
loop
roll
iret
fwait
jno
inc
into
mov
inc
adc
fiadds
lods
sub
jg
adc
rclb
scas
hlt
das
add
aam
cwtl
or
mov
mov
add
in
add
jl
add
xchg
movsb
aas
mov
mov
aaa
int
mov
and
or
out
loopne
rorl
popf
jg
arpl
or
gs
sti
sahf
adc
aas
fnsave
sti
bound
mov
dec
jno
mov
jmp
mov
out
push
insl
pop
xchg
call
push
xchg
jmp
negb
add
adc
clc
sti
movsb
shl
dec
decl
pop
jl
sti
scas
pop
sbb
imul
aad
sub
inc
test
loope
mov
mov
nop
sub
jp
pop
add
pop
add
stos
mov
push
test
pushf
sbb
stos
les
das
lods
inc
inc
mov
xor
aaa
and
andb
repnz
xor
int
data16
insb
pop
fimull
and
cmp
test
insb
push
pop
ljmp
xchg
cs
in
loop
loope
jle
xor
cld
ds
xor
clc
hlt
fs
jne
repz
in
fwait
mov
lcall
mov
pop
cwtl
stos
repnz
cli
jecxz
cli
fildl
sub
xor
subl
bound
insl
jne
dec
test
and
enter
mov
jb
mov
pop
aam
in
mov
movsb
fidivs
scas
lret
aas
dec
out
cmp
sbb
mov
sbb
call
push
or
jle
dec
push
pop
mov
bound
xor
arpl
mov
stos
fs
mov
in
adc
pushf
negl
outsb
pop
hlt
xor
fs
adc
in
add
ficomps
aas
andl
pop
rcrb
add
into
movsb
sbb
sahf
ljmp
rol
pop
push
dec
sbb
rcll
xchg
in
and
cwtl
sbb
insl
add
addr16
ret
sahf
or
or
out
movsb
pop
pop
mov
inc
mov
push
aaa
and
loopne
mov
in
cs
inc
mov
nop
or
dec
aaa
xchg
aam
arpl
cmp
in
test
int
xor
clc
data16
adc
insb
fwait
por
lahf
xchg
sbb
cmc
push
push
daa
sahf
push
imull
mov
imul
mov
xor
add
xchg
cmc
adc
clc
repnz
mov
dec
mov
cmp
or
cmp
aaa
out
and
sub
mov
push
jb
sbb
or
cmp
js
lret
out
dec
push
scas
fldenv
or
ret
lock
stos
cmp
jo
mov
cmc
ja
pop
xchg
xchg
les
notl
add
xor
adc
addr16
imul
mov
mov
jg
mov
inc
add
xchg
cmpsl
add
cld
addr16
out
adcl
stos
jb
mov
shr
insl
xlat
jbe
in
pop
push
ss
fdivs
xor
cmpsl
cli
repz
mov
int3
or
pusha
inc
adc
mov
das
lcall
cmp
sbb
cmc
addl
xchg
scas
shll
fs
mov
jae
jae
hlt
push
cpuid
mov
arpl
xchg
add
mov
imul
mov
lods
ret
mov
cmp
into
les
pop
pop
inc
jg
ret
sti
cmp
aad
in
lea
sub
lock
fiadds
out
insb
sub
stc
sti
xlat
mov
jl
xchg
sbb
popf
imul
pop
or
jecxz
punpckhbw
mov
mov
inc
jmp
imul
or
movsl
fs
sub
add
pop
add
mov
call
add
xchg
fisubl
stos
in
xchg
fistl
fdivl
dec
jecxz
std
push
sub
inc
or
sbb
xchg
or
push
fdivrl
shl
call
sbb
fs
enter
jb
mov
sub
jge
or
pop
jns
jbe
popa
popf
adc
dec
in
aad
sub
ret
into
ljmp
mov
xchg
sbb
cmp
popf
div
sub
rorb
push
and
loope
xchg
pop
idivb
add
sbb
xlat
lahf
xchg
dec
mov
add
hlt
mov
add
mov
lret
xchg
int3
mov
push
mov
pop
dec
int
xchg
aam
inc
addb
xor
push
mov
dec
aad
stos
fidivrl
jo
jns
sbb
sti
in
fsubrs
xchg
lods
adc
leave
mov
lahf
jmp
inc
and
sub
sbb
fwait
mov
jo
inc
inc
out
out
mov
outsl
add
mov
out
mov
sarl
fists
jg
fiadds
and
lds
cli
mov
test
jae
cmc
into
xor
pop
push
aaa
push
mov
xchg
scas
fdivrs
into
pop
add
std
out
cmp
loope
enter
fnclex
cmc
or
js
pop
adc
int
idivl
sti
out
xchg
cli
dec
dec
mov
cmp
pop
push
push
enter
fs
lds
pop
dec
out
mov
and
push
or
sbb
pop
and
test
rep
ds
mov
push
mov
mov
mov
mov
insb
mov
cmpl
sub
sub
js
push
jne
cwtl
push
or
mov
rorl
adc
jl
inc
shl
dec
test
fbld
sub
aaa
xor
jle
es
sbb
push
loope
decb
pop
push
xchg
fstp
iret
mov
std
inc
sbb
stos
sub
enter
scas
inc
arpl
cmpsb
mov
mov
add
add
sbb
add
sub
or
rcrl
je
test
add
into
in
inc
jbe
repnz
mov
mov
inc
xchg
incl
jecxz
je
loopne
mov
les
cmp
and
push
jne
aad
sbb
push
pop
inc
sbb
cmpsb
divb
lahf
sub
mov
inc
lret
ja
jecxz
adc
adc
dec
sarl
sub
aaa
inc
out
cld
mov
sbb
dec
loopne
xchg
jecxz
cmp
sbb
je
sahf
aad
subl
shr
fisubs
lods
test
into
outsb
or
adc
cwtl
insl
movsl
xchg
icebp
lahf
rcr
or
or
lcall
mov
pop
fisubl
pop
xchg
jo
test
mov
das
dec
hlt
popf
cli
imul
popa
mov
or
push
loop
stc
jg
pop
test
xor
out
sub
loope
or
fildll
shl
mov
or
xor
outsl
push
scas
lds
mulb
lock
inc
jmp
xor
dec
xchg
iret
inc
inc
dec
lcall
movsl
jl
ja
mov
and
lret
jle
stos
idivl
mov
and
sub
adc
sbb
inc
push
roll
pusha
gs
sub
pusha
add
rcll
fs
add
jb
jp
jmp
or
ds
rolb
mov
stos
sub
sahf
imul
inc
inc
and
testl
aaa
push
loope
jnp
push
pop
push
shrb
pop
cmp
push
jmp
loop
fcomps
xor
xor
mov
cmpsl
imul
sub
adc
sub
sbb
pop
mov
push
fistl
cs
mov
pop
and
push
cld
xchg
call
cmc
mov
fsubrl
mov
fisttps
lods
insb
insl
jo
push
mov
sub
je
es
outsb
aad
jbe
adc
mov
sub
push
mov
lea
pop
scas
cwtl
lea
pop
mov
out
sbb
into
mov
mov
cmp
negl
cli
fstl
jmp
movsb
sbb
adc
inc
nop
and
xlat
scas
mov
inc
and
mov
pop
nop
dec
add
out
push
add
push
fmull
aam
or
xor
jmp
xchg
jno
inc
sub
mov
xchg
stc
shl
xor
jp
int
xchg
cmpsl
cmpsb
hlt
sbb
mov
fdivrs
mov
mov
in
mov
out
mov
pushf
push
sbb
decb
jecxz
ljmp
aam
sbbl
cmp
push
jnp
push
xchg
lds
push
jns
out
or
popa
cmpsl
es
push
mov
mov
adc
mov
push
jge
stos
sub
popf
push
jae
xchg
cmpsl
mov
fistpll
ss
mov
aad
scas
loop
dec
hlt
or
cli
shll
mov
dec
xchg
pushf
addr16
pop
mov
ror
add
adc
push
xchg
push
ds
call
orb
xchg
mov
aaa
sub
pop
cmp
adc
mov
ja
popf
and
mov
les
xchg
icebp
insb
xchg
fwait
js
jne
adc
pusha
fsubrs
jmp
dec
pop
cmpl
adc
mov
stos
outsl
iret
jmp
popa
dec
cmpsl
pop
ja
xchg
iret
and
out
stc
cmp
enter
inc
adc
or
stos
adc
adc
iret
and
clc
pop
add
fucomip
push
xchg
adc
push
adc
cmp
adc
cmp
ret
inc
pop
stc
arpl
imul
dec
inc
ja
mov
insb
jnp
pop
xchg
das
lahf
mov
popl
insb
jg
push
in
inc
fmuls
sub
arpl
loop
int
inc
sti
jg
arpl
test
sarb
sbb
mov
ss
mov
mov
pop
xor
xor
paddb
jge
in
dec
je,pt
and
aad
ret
jmp
test
xor
cld
sbb
push
pop
popf
movsl
xchg
int
repz
push
pop
cmpsl
aad
fbstp
arpl
cs
pop
shll
xchg
mov
dec
push
mov
pop
leave
imul
into
icebp
je
pusha
popa
in
shll
aam
outsb
loop
jb
imul
test
cld
xchg
je
imul
roll
dec
mov
jne
dec
adc
cmp
push
cmp
jns
test
push
pop
xchg
aam
addr16
std
mov
jp
jnp
and
dec
fnsave
rolb
shll
push
imul
out
hlt
stc
ss
outsb
stos
int
lahf
pop
sbb
mov
xor
or
subb
dec
sub
lret
das
in
sbb
test
jp
scas
mov
in
rorl
sbb
aam
adc
xchg
loope
jb
inc
sub
fsubr
sar
push
xchg
rol
mov
decb
lcall
cmp
stc
push
sub
mov
adc
jo
jne
aas
fdivl
mov
inc
mov
push
mov
mov
adc
cs
gs
jns
pushf
pop
lods
aaa
ret
mov
cltd
or
out
inc
push
jo
dec
std
add
adc
and
fisttps
cli
mov
dec
push
dec
inc
inc
int
push
adc
jno
mov
pop
pop
icebp
sub
in
lds
pop
sub
xchg
mulb
pop
ljmp
push
push
cmpsl
and
aaa
stos
dec
cld
jbe
mov
call
xor
aas
mov
fisubs
push
jno
mov
cli
cmp
iret
ss
cmp
sbb
clc
sub
movsl
pusha
imul
inc
xchg
lsl
stos
in
xor
mov
or
inc
or
scas
test
mov
mov
leave
xchg
adc
sub
cwtl
imul
xor
outsb
mov
test
fwait
inc
xor
dec
lods
repz
enter
push
mov
dec
scas
lock
lods
repz
int3
jmp
fcoms
cmpsb
int
inc
jne
flds
rolb
mov
fwait
adc
popf
in
xor
sub
mov
pop
outsb
pop
icebp
ja
in
push
push
jnp
add
sahf
inc
mov
data16
xchg
sti
das
popf
into
fstpl
inc
pushl
xorl
stc
nop
stc
mov
clc
enter
cmpsb
mov
push
imul
push
lcall
lahf
lcall
pop
sbb
xor
sbb
shll
aas
movsb
cmp
xchg
lahf
cmp
dec
scas
fidivl
mov
xor
insb
sahf
ljmp
cmp
mov
inc
push
andb
pop
ljmp
ret
or
shll
mov
xor
scas
dec
mov
rcrl
adcb
int3
fcmovb
imul
sbb
icebp
push
lret
push
ret
adc
mov
xchg
in
jne
nop
imul
sbb
jbe
mov
lret
sbb
add
pop
call
or
mov
aam
inc
mov
aas
dec
or
xchg
adc
lret
push
push
loopne
test
outsb
out
inc
pushf
inc
cmp
push
dec
aad
mov
je
sub
add
ret
and
jns
ret
mov
dec
pusha
jne
push
or
sbb
testb
movsb
adc
jne
mov
pop
outsl
sbb
add
leave
fwait
bound
in
inc
mov
pop
cltd
incb
inc
into
daa
push
mov
js
sbb
ljmp
decl
sub
out
xor
or
pushf
jmp
xor
push
loopne
arpl
into
jecxz
xchg
push
pop
pop
pushf
push
cmpsl
jae
push
pusha
cwtl
and
sub
sbb
inc
mov
shr
pop
cmp
test
int
popa
out
cs
cmpsl
std
sub
jnp
or
stc
loop
pop
mov
mov
js
xor
mov
cmp
pop
jle
xchg
shrl
das
aas
xchg
adc
xor
pop
jo
sub
push
xchg
xchg
jnp
sbb
pusha
fadds
imul
xorl
push
int3
jl
lret
push
mov
jecxz
inc
ds
cli
cs
xchg
enter
or
lret
xor
lahf
jl
pop
pop
inc
mov
push
addr16
stos
repz
sub
cmp
push
addr16
es
sarl
in
out
clc
push
aam
insl
je
mov
scas
aaa
aaa
mov
push
push
or
or
dec
in
mov
je
insl
pushf
lahf
xor
inc
inc
mov
sub
dec
mov
shrb
jg
add
clc
outsl
das
inc
fwait
lods
fistpl
or
lahf
pop
cmp
cmp
in
shll
scas
dec
sarb
jnp
cmpsl
in
shll
push
inc
jge
out
test
fsubr
rcll
icebp
cmp
sub
stos
pop
and
jns
lock
fsubs
push
lods
shlb
test
and
xor
dec
repnz
imul
mov
mov
xor
sarb
cmp
ret
and
cmp
dec
and
ret
lahf
lret
loop
mov
packsswb
lea
push
mov
aam
cli
scas
mov
jae
faddl
and
insb
fs
xchg
lds
enter
imull
and
imul
fbld
pop
and
test
cmpsl
pop
cmpsl
std
fsubl
jo
dec
and
test
pop
rcl
clc
sarl
sub
or
xchg
fstpl
test
cmp
jge
mov
mov
fdivr
call
or
mov
jb
test
rcrb
data16
bound
ljmp
inc
nop
jb
fldcw
pop
inc
fnstsw
or
xor
stc
push
fwait
cmp
sbb
mov
add
std
pusha
cmp
pop
sub
movsl
mov
fsubr
pusha
push
mov
in
lea
inc
into
and
inc
mov
pusha
pusha
pop
adc
xchg
pop
test
es
jge
adc
lahf
outsl
jo
out
mov
and
inc
jae
inc
mov
mov
cli
xor
rcr
ret
sbb
bnd
dec
sti
fwait
loop
arpl
ja
lahf
mov
mov
iret
mov
movsb
xchg
or
sub
mov
sbb
sub
mov
das
icebp
bound
in
mov
es
dec
fwait
scas
jg
cmp
pop
mov
push
movsb
mov
xor
sbb
sub
jnp
into
push
sbb
sub
add
lds
cmp
leave
shr
cmc
mov
mov
sub
xorl
xchg
mov
xor
loopne
inc
push
push
fmull
mov
add
cmp
dec
xchg
ficoml
popf
jecxz
into
bound
cmp
cmp
inc
outsl
arpl
jecxz
pop
push
mov
std
jae
push
std
mov
imul
stos
sub
cli
jbe
push
addr16
scas
cmpsb
and
inc
cmp
push
inc
hlt
outsb
adc
push
mul
push
ret
xchg
jp
adc
add
ds
push
test
xchg
ret
sti
jp
fwait
movsb
in
pop
adc
pop
push
insl
cmp
mov
sbb
pusha
lods
add
data16
mov
or
jmp
mov
or
shlb
push
scas
add
pop
fmull
sub
sub
inc
inc
inc
out
mov
dec
movsb
loope
sub
mov
inc
enter
lahf
lahf
js
dec
cli
in
jecxz
xchg
roll
inc
add
movsb
xchg
int3
and
in
and
bound
rcrl
test
daa
in
jno
ljmp
pop
out
cmp
push
loope
xchg
mov
add
nop
push
cmp
aam
je
or
and
push
icebp
testl
adc
pop
fsubrs
sub
lds
aad
pop
jne
daa
inc
push
insb
int3
xchg
repnz
fistps
xchg
sub
cmp
rcll
jnp
inc
outsb
cld
dec
in
cmpsb
aam
test
hlt
xchg
dec
mov
jne
and
mov
sbb
dec
into
scas
shlb
movsb
arpl
cwtl
pop
out
push
jge
in
mov
push
pushf
bound
sbb
popa
lods
adc
cmp
mov
sub
iret
outsb
fadds
paddd
mov
sub
outsl
push
movsb
jle
lods
mov
jnp
cld
and
pop
insb
sbb
ss
jb
sub
dec
lock
aam
pushf
mov
ret
filds
aaa
mov
fnstsw
dec
cmc
dec
push
iret
adc
sub
jp
popf
add
pop
pop
sbb
pushl
shll
cmpsb
or
mov
jmp
das
into
mov
pop
and
sbb
std
adc
or
mov
dec
repnz
sub
add
add
lock
subb
push
lea
jecxz
insb
mov
iret
repz
dec
dec
lahf
pop
les
frstor
mov
in
mov
xacquire
pop
lods
orb
les
aas
testb
in
loopne
pop
adc
out
mov
data16
or
cli
lods
iret
jae
pop
leave
add
sub
mov
mov
and
jmp
test
pop
sub
mulb
in
enter
mov
scas
pop
jnp
test
fsubs
imulb
into
inc
or
jae
stc
xchg
xor
xchg
daa
cmp
shrb
movsl
jmp
lock
and
dec
test
jge
add
adc
push
pop
sahf
mov
adc
out
adc
jo
sti
xchg
lcall
mov
popa
fs
scas
shlb
push
rorl
arpl
mov
adcl
xchg
arpl
std
mov
sub
cld
enter
inc
pop
sbb
cli
and
out
mov
sub
dec
sbb
and
pop
aad
pop
out
xchg
push
mov
stos
aaa
xchg
mov
sub
ljmp
iret
mov
repz
ljmp
sub
mov
rcrb
lret
roll
adc
icebp
sub
fwait
xor
ror
jb
jle
js
mov
cmc
cmp
add
sub
ljmp
add
mov
pop
adc
stc
mov
xor
push
pop
loopne
push
mov
jg
insb
dec
sbb
mov
mov
repnz
repnz
xor
xor
push
push
inc
mov
mov
lret
sti
push
push
sub
leave
mull
pop
lock
nop
or
mov
cmp
dec
mov
or
xor
cwtl
xchg
stc
dec
pop
in
sbb
das
xchg
out
add
jae
add
mov
fistpl
dec
mov
nop
imul
mov
stc
dec
ja
push
push
xor
cmp
mov
sbb
mov
pop
pop
fildll
ja
inc
inc
scas
push
push
inc
mov
sbb
fs
jns
loopne
in
popf
or
loopne
mov
mov
mov
cmp
aaa
cmpsb
jmp
rcl
cmp
call
push
push
outsb
xor
cmp
repnz
pop
sbb
ja
sbb
fs
add
xchg
neg
sub
xchg
testb
hlt
adc
daa
testl
sbb
rolb
mov
test
xor
jnp
or
push
sbb
lret
jecxz
nop
sbb
jb
and
pop
pop
lods
ret
jl
cmp
aad
cmp
into
inc
jg
push
daa
lahf
push
pop
pop
adc
mov
ret
jp
jne
adc
fistpl
fldcw
lahf
fcoms
fs
addb
out
je
xchg
jo
push
out
in
pop
sarl
in
and
in
cmp
inc
ljmp
hlt
leave
std
xchg
mov
int3
out
repz
rcll
cmp
in
mov
rcl
lods
mov
inc
inc
dec
dec
add
add
inc
addr16
loop
jmp
xor
xor
mov
mov
mov
pop
adc
pop
lcall
jns
or
dec
mov
out
mov
push
fsts
dec
pop
xorb
adc
jl
mov
stos
mov
inc
or
movl
jbe
sbb
mov
lods
es
push
mov
aad
in
std
push
iret
xchg
js
pop
lds
mov
ja
dec
or
push
shrl
cltd
and
incl
xchg
ret
sub
inc
or
mov
fsubrs
daa
adc
xchg
or
lock
scas
dec
inc
xchg
and
idivl
in
sbb
xchg
cli
xorl
lahf
sub
adc
xor
mov
cmp
xchg
lds
mov
sti
xlat
sbb
rorb
jbe
jnp
xchg
xor
je
add
pop
icebp
cmpsl
or
out
shl
mov
int3
mov
adc
sti
adc
adc
pop
ljmp
dec
mov
dec
xor
pop
pop
mov
popf
and
mov
cmp
push
push
popw
xor
cmp
jmp
cmp
pop
scas
call
add
loope
je
jne
push
adc
cmp
or
xchg
xchg
fisubrs
mov
pop
or
mov
inc
js
ljmp
xor
jle
adc
add
addl
or
xchg
iret
inc
jnp
fildll
lcall
mov
jge
jb
mov
xor
int3
stos
xchg
mov
icebp
sub
jmp
aas
sbb
ret
and
imul
std
dec
push
xchg
mov
fcomps
sbb
in
std
outsl
cmp
xchg
adc
jmp
je
stos
cltd
pop
test
addb
je
lcall
repz
xchg
cmp
mov
cmp
dec
sub
jg
js
jne
cmp
fwait
add
stos
rorb
fstp
xor
aam
push
dec
mov
jle
lahf
xchg
loopne
sub
adc
frstor
sbb
fs
cmp
mov
cmp
icebp
insl
jecxz
or
scas
popf
or
repz
pop
cmpsl
mov
sbb
test
movsb
pop
lret
sti
or
xchg
jg
popa
push
cmp
lea
loopne
push
adc
rcll
jae
pop
jo
mov
cmp
xor
sbb
test
hlt
cmpsb
and
mov
lods
leave
test
xor
mov
push
cmp
pop
push
ja
xchg
es
mov
push
add
push
add
dec
jge
mov
stos
movsl
fldt
adc
mov
test
aaa
jne
jecxz
jle,pt
mov
inc
mov
push
fabs
cmp
mov
sahf
ja
mov
subb
out
out
fdivp
insl
std
mov
cmpsl
int3
movsb
pop
mov
sub
testl
mov
push
pop
ja
push
mov
in
push
ja
call
aad
ss
fwait
dec
mov
aad
lret
leave
int3
add
cmp
aam
int3
test
mov
cmc
nop
in
mov
push
rcrb
dec
sbb
leave
aad
fcmovu
sbb
lret
movsl
cmp
mov
fldt
xor
push
mov
cmp
xchg
nop
push
pushf
loope
push
or
xchg
cmp
fbld
dec
add
adc
movsb
cmpsb
jle
inc
sbb
addr16
andb
xlat
pop
push
jmp
adc
xchg
movsl
les
xor
rol
push
xor
out
cmpb
jo
dec
mov
outsl
mov
push
inc
imul
aam
or
fisubl
ret
mov
pop
pop
imul
cmp
fisttps
mov
jb
sbb
psrld
je
aad
xor
jp
pop
push
cmpsb
and
test
sub
and
cmp
scas
push
out
js
or
adc
in
and
call
and
cwtl
sahf
dec
lods
ljmp
sbb
dec
jbe
roll
aad
add
adc
push
neg
in
mov
xor
and
mov
js
shll
and
dec
jb
dec
dec
mov
mov
stos
mov
bound
lea
jns
mov
fbstp
jle
sbb
xchg
sub
push
mov
or
or
sbb
pop
mov
push
add
adc
inc
xchg
inc
ss
jg
lcall
jns
test
sahf
mov
or
shlb
into
aad
mov
lret
xchg
inc
rclb
push
or
cmpsl
rorl
call
pop
push
mov
orl
arpl
iret
insb
push
adc
std
cmp
in
jmp
cmpsb
cmc
xchg
pop
sbb
icebp
je
std
dec
ljmp
or
and
jnp
stos
movsb
push
sbb
leave
sbb
leave
inc
loop
dec
mov
movsb
js
mov
sbb
mov
les
push
and
inc
fmull
pushf
dec
std
cs
mov
mov
sbb
dec
mul
dec
xchg
mov
cmp
mov
push
dec
jnp
aaa
mov
inc
ret
mov
push
scas
mov
inc
mov
or
xor
mov
subl
sub
syscall
add
add
std
insb
andb
xchg
scas
push
test
xor
lods
stc
and
adc
lahf
xchg
mov
divb
xchg
movb
jmp
jno
andb
mov
sbb
das
loop
sbb
ret
mov
sbbb
mov
jo
mov
movsb
jmp
mov
test
jne
jge
inc
jns
cmp
and
add
dec
mov
adc
inc
stc
add
jnp
les
dec
jns
int3
adc
out
fidivs
cli
movsl
mov
mov
mov
mov
pusha
jns
add
xor
pop
fdivr
sub
sub
insl
sbb
ret
or
jle
lcall
clc
or
sbb
scas
pop
mov
or
mov
shrb
fmuls
and
js
movsb
mov
sub
insl
pop
pop
xor
enter
loope
or
adc
add
lds
ret
mov
add
loop
inc
jmp
jo
jno
scas
insb
in
out
xchg
xchg
dec
pop
adc
xchg
inc
inc
mov
cwtl
test
jae
sbb
fwait
and
cli
push
inc
ds
add
or
sbbb
adc
or
xlat
stos
pop
xchg
and
jecxz
popf
mov
add
jbe
push
out
sub
xor
roll
lods
leave
push
mov
out
jb
push
sbb
lods
or
aaa
add
sbb
leave
movl
out
sub
cli
xchg
adc
adc
fdivl
nop
cmp
dec
xor
shlb
xchg
cs
xor
outsb
sahf
xor
mov
xor
mov
sahf
sub
dec
cmp
cmp
pop
mov
jecxz
shll
repz
mov
push
icebp
sti
xlat
mov
pop
sbb
push
xchg
ficompl
xchg
or
std
sarl
rcrl
js
add
xchg
rcr
scas
ljmp
pop
fimull
ja
xchg
jno
pop
scas
std
out
xchg
jmp
adc
out
loop
xchg
sbb
xchg
cltd
mov
pop
fsubs
push
stos
dec
cld
in
icebp
inc
mov
lods
daa
sub
push
in
lock
daa
pop
dec
add
cmpsb
add
lea
cmpsl
push
out
ret
loope
push
mov
fldl
pop
out
jg
out
cmp
dec
jae
dec
je
xor
test
scas
in
inc
adc
cmpsl
mov
xchg
inc
fcoml
sub
int3
les
les
lahf
arpl
jmp
ffree
push
sbb
pop
mov
dec
divl
inc
sbb
negl
clc
xchg
and
mov
sub
pop
sbb
mov
popf
hlt
aam
outsl
inc
add
out
scas
shlb
test
scas
mov
aaa
hlt
andl
rcr
push
push
sub
mov
mov
movsl
lods
leave
or
xchg
or
rcl
mov
lds
push
mov
pop
out
jno
mov
xor
jne
in
clc
addr16
adc
or
and
xor
jo
aaa
xor
xor
pop
insl
iret
inc
jb
jmp
jle
lahf
inc
gs
and
xorb
pop
in
in
popa
xor
shll
and
loop
aas
pop
add
les
or
push
mov
lock
andl
jle
adc
jg
orl
mov
pop
lfence
sahf
xor
cli
pop
mov
test
bound
imul
leave
aaa
test
push
mov
xor
sbbl
mov
aam
sub
mul
adc
dec
addr16
xchg
je
xor
test
insb
mul
jno
push
jo
test
fwait
dec
or
mull
dec
cmp
inc
testb
push
cli
call
pop
popa
stos
lds
xlat
hlt
int
loop
mov
adc
and
in
jnp
jg
mov
pop
decl
lret
or
outsb
dec
test
sub
sub
popa
mov
mov
lcall
in
mov
sbb
rcl
das
cmpsb
cli
fs
cs
movl
into
shrl
jecxz
mov
call
loop
mov
and
mov
ret
movsb
adc
shll
test
sub
adc
push
lock
out
lds
push
xchg
mov
pop
sahf
cmp
lret
adc
and
inc
fsubrs
push
sub
cmp
sub
add
inc
test
jno
mov
cmc
dec
imul
dec
push
or
jns
mov
pop
bnd
xchg
movsb
jne
jecxz
clc
add
pusha
incl
inc
loop
lret
enter
sub
jge
and
test
sub
rorb
insb
lods
xor
cmpsl
out
addr16
sbb
test
movsb
or
sub
sub
adcb
fldl
faddl
add
mov
cmc
push
test
outsl
cld
repz
mov
push
arpl
push
cmp
jns
hlt
jb
inc
mov
je
enter
jne
push
lahf
jnp
jg
shl
lods
loop
cmp
or
loopne
loope
cli
rcll
and
movsl
jle
or
mov
fsubs
sub
pop
sbb
push
mov
dec
ljmp
adc
insl
pop
out
lock
mov
leave
push
cmp
ljmp
roll
dec
pop
jg
mov
enter
lods
sbb
xchg
shl
lds
enter
xor
inc
mov
adc
shll
into
mov
pop
sar
mov
pushf
adc
or
cs
and
aas
mov
xor
push
jl
xchg
sbb
repz
out
push
mov
and
jmp
loope
xchg
mov
fildl
jmp
popa
mov
jge
sub
inc
mov
call
or
addr16
pop
adc
outsb
fisttpll
movsb
call
into
mov
fcmovne
dec
jmp
lret
mov
pop
iret
out
jno
jge
repz
inc
stos
mov
xchg
addr16
jnp
imul
and
mov
xchg
into
xlat
push
or
dec
pop
lds
or
movsl
dec
xchg
jae
ss
scas
mov
fstpl
test
scas
push
popf
sub
mov
xchg
scas
and
fldcw
call
cmp
cld
negb
lods
jl
imul
popf
sbb
rclb
std
cmp
lods
stc
in
push
outsb
and
push
sbb
lahf
insb
jns
in
cwtl
inc
outsb
test
add
ljmp
jns
sbb
nop
fnsave
test
fadd
cmpsl
mov
push
adc
imul
adc
scas
xor
into
icebp
rorl
push
ret
or
pop
fwait
dec
xor
and
and
cltd
lods
lods
sbb
out
cltd
cwtl
pop
lock
cmpsb
jae
cltd
push
push
pop
mov
int
adc
sahf
dec
mov
cmp
faddp
inc
test
insl
push
push
addr16
dec
cmovl
mov
jp
mov
lahf
mov
add
adc
in
adc
mov
bound
cmp
sub
clc
push
xor
mov
or
sbb
push
aaa
fimuls
push
enter
cmp
sbb
inc
lret
mov
xchg
cltd
xchg
fbstp
or
mov
dec
fsubp
add
jl
adc
xor
les
cwtl
inc
nop
dec
stos
add
pop
in
mov
mov
stc
add
push
cli
pushf
jo
add
movsb
ja
lds
dec
popf
lock
in
or
pop
ret
push
movsb
add
dec
push
dec
arpl
in
enter
cwtl
fisttpll
cmc
dec
cmp
in
inc
xor
adc
fldenv
and
jno
pop
inc
push
cmp
cmp
cmp
jle
and
xlat
gs
gs
mov
xlat
dec
mov
sbbl
push
jl
div
xchg
sbb
cmp
test
mov
lret
and
mov
sahf
pop
stos
sbb
cmp
add
sbb
aas
push
jne
test
aam
mov
fwait
andb
mov
scas
jp
xchg
scas
push
out
sub
mov
mov
mov
icebp
or
das
xor
jge
inc
dec
js
fld
cmp
adc
or
adc
pop
int
jbe
push
cli
imul
mulb
xchg
push
dec
dec
addb
int
cli
aas
cli
adc
fldl
sbb
ds
mov
xchg
rorb
xchg
mov
mov
sub
mov
arpl
call
imul
sbb
xchg
push
shrb
xchg
testl
or
sbb
and
inc
sbb
jno
fisttpl
sub
jns
pop
xor
dec
jl
imul
inc
sub
push
mov
aad
jne
pop
pushf
sbbb
jg
cs
mov
sahf
daa
in
nop
outsb
sarb
scas
mov
xlat
ds
mov
mov
insl
or
subb
ret
jle
out
push
or
push
movsb
inc
mov
aad
dec
cwtl
fimuls
test
outsb
mov
ret
xchg
pop
decb
sub
stc
sub
mov
outsb
mov
shll
sbb
sti
jbe
add
cltd
or
pop
xchg
xchg
pop
aas
fwait
dec
jne
add
mov
imull
xchg
scas
mov
jne
mov
fidivrs
inc
lcall
cwtl
aas
adc
dec
sub
xor
adc
lahf
pushf
pop
push
mov
fisttpll
ficoml
leave
filds
pop
and
adc
and
mov
std
mov
lock
inc
push
lea
sub
les
cld
mov
pop
sbb
inc
insl
aad
fnstcw
lds
jecxz
daa
stos
lahf
mov
rclb
mov
pop
inc
popa
mov
ret
add
lea
add
inc
add
inc
jns
repz
inc
cmp
mov
and
lret
push
pop
sbb
mov
mov
mov
push
les
fimull
sarb
and
cmp
dec
mov
loopne
mov
out
sub
lcall
jne
xor
push
adc
adc
lock
xchg
and
cmp
dec
mov
sysenter
js
xchg
add
mov
dec
repz
in
jp
aaa
or
test
idivb
mov
pop
in
fstpl
cmp
in
xlat
mov
mov
imul
aaa
pop
xchg
sub
and
xchg
push
mov
xor
outsl
mov
push
out
fcmovu
jmp
loop
pop
sarl
mov
lea
in
int
stc
add
adc
daa
sub
pop
sbb
scas
push
test
das
mov
cli
adc
mov
loop
enter
xor
mov
adc
mov
xor
cwtl
mov
mov
arpl
lret
xchg
int3
stos
xor
add
outsl
shll
push
push
inc
enter
cmp
push
and
shll
mov
dec
jmp
push
sahf
scas
loop
push
repnz
sti
mov
pop
push
push
shl
lcall
aam
mov
mov
add
xchg
aad
push
aad
xchg
adc
aad
cld
dec
or
shll
adc
xor
adc
adc
and
repz
sahf
test
adc
pusha
push
or
or
data16
mov
sahf
aad
dec
aaa
les
mov
es
mov
mov
decb
pop
andb
xor
fbstp
out
sub
or
add
rcrl
aaa
adc
sbb
and
testl
jecxz
and
leave
mov
pusha
rcrl
xchg
gs
adc
imul
test
inc
push
out
stc
mov
ret
insb
jl
pop
xchg
mov
mov
pop
lods
in
inc
fdivrs
sti
xchg
pop
xchg
pop
aam
pop
add
in
xchg
loop
dec
filds
xchg
popa
dec
mov
mov
push
mov
daa
clc
adc
xchg
mov
push
lahf
arpl
roll
adc
lds
sub
jge
rclb
cmpb
sub
sub
cmp
pop
push
mov
repz
lods
leave
adc
in
int3
push
into
andps
andl
in
loopne
jmp
cmpsl
xor
pop
shl
pop
js
repz
fwait
into
sub
mov
scas
and
sub
mov
out
or
pop
js
push
jmp
mov
xor
pop
xchg
and
movsb
sbb
enter
test
or
mov
hlt
mov
cmpb
adc
mov
enter
jmp
outsl
test
lcall
add
arpl
inc
ftst
jp
pop
js
ret
or
xchg
mov
in
jae
into
lock
out
jno
pop
inc
movsl
aas
xchg
orl
pusha
daa
cmp
test
pop
out
fnstsw
and
mov
lods
pop
ljmp
mov
sub
ror
jl
movsb
lea
cld
push
mov
test
mov
sub
mov
jne
mov
jno
std
call
adc
cmp
mov
scas
sbb
mov
imul
sbb
inc
push
mov
xchg
adc
iret
push
pop
dec
push
jmp
dec
push
aas
std
inc
mov
mov
jle
inc
mov
dec
adcl
push
repz
sbb
mov
xchg
subb
test
jecxz
call
push
ljmp
cmp
fimull
jae
xor
mov
lret
mov
clc
push
push
mov
cmp
inc
ja
enter
pop
cmpsb
fisubs
lret
std
fistps
jp
andb
mov
pop
imul
icebp
push
rcll
aaa
xor
dec
mov
xchg
push
mov
addl
mov
jbe
add
xchg
jg
pop
movsb
in
push
roll
adc
lods
cmp
repz
jb
and
cmp
cmpsl
mov
adc
stc
mov
cmp
and
scas
adc
jb
or
inc
fmuls
outsl
push
xchg
jmp
xor
jns
jbe
mov
insl
sub
int
and
jmp
inc
pop
xor
inc
pop
or
push
movsb
arpl
push
arpl
mov
sub
xchg
shlb
jmp
mov
push
mov
popl
or
popa
rcll
xchg
pop
adc
into
mov
sub
cmp
or
mov
clc
and
sub
imul
subb
fldt
lods
data16
das
cmpsb
and
jns
bound
pop
add
ss
mov
dec
mov
icebp
sbb
mov
mov
jb
xchg
mov
mov
inc
jmp
sub
loop
fistps
dec
cmpsl
sbb
in
inc
aas
rcl
fsubp
sub
pop
or
sbb
in
fdivr
test
fnstenv
mov
lcall
divb
mov
mov
cmpxchg
out
enter
aaa
sub
pop
aam
sbb
xor
dec
push
in
push
adc
cmpl
pushf
hlt
fdivrs
cmpl
and
je
push
arpl
cld
adc
jae
dec
daa
sahf
stos
pushf
push
mov
cltd
mov
mov
cmpb
hlt
rcrl
push
es
ja
fadds
mov
stc
fisubs
fwait
clc
test
pop
inc
mov
add
outsb
mov
jp
cmp
aam
into
outsl
in
lds
inc
mov
pop
inc
lock
lds
xchg
cmp
lcall
lcall
cmpsb
pop
xchg
inc
fsubrl
sbb
dec
out
dec
sub
jl
push
mov
mov
adcl
out
and
pusha
cld
lods
stc
xchg
mov
jg
jmp
jp
inc
insl
fildll
aad
xlat
insl
lcall
jnp
pop
loopne
xchg
sub
xor
movsl
stos
pop
xchg
sbb
subb
rolb
jno
push
or
outsl
mov
inc
mov
das
shrl
push
jnp
jecxz
out
cwtl
stc
pop
cli
movsb
stc
inc
andb
in
dec
movd
nop
jge
into
fdivs
jb
leave
inc
fcoml
insl
insb
mov
xchg
fnop
adc
mov
push
imul
fs
lea
adc
stc
iret
enter
mov
adc
or
pop
jbe
shl
jb
adc
jle
imul
inc
push
fistps
mov
xchg
loop
lret
sub
ds
mov
sbb
pop
add
pop
xchg
push
je
addr16
push
outsl
in
ret
push
adc
fdivrl
sahf
sbb
mov
jbe
scas
stos
popa
addr16
push
sub
idivb
ja
loop
loope
cmp
lods
jmp
push
add
pop
mov
push
inc
mov
ljmp
xor
pushf
in
sti
sbb
icebp
or
xorl
ret
xchg
sub
gs
test
test
mov
xchg
xchg
gs
stos
ret
mov
lahf
inc
mov
in
negl
out
mov
fs
out
jmp
in
mov
in
idivl
pushf
imul
adc
or
mov
push
lret
push
out
jb
pop
xchg
inc
incl
cmp
shlb
cmp
in
arpl
mov
mov
mov
mov
mov
push
or
ficomps
rcrl
dec
xor
jecxz
mov
add
aam
and
mov
or
test
loope
aas
xor
or
xor
inc
jno
push
push
adc
cmp
stos
mov
inc
pop
pop
ljmp
out
out
mov
jl
pop
push
test
jno
xlat
adc
add
loop
inc
test
add
imul
mov
in
add
mov
fwait
sub
mov
in
test
xor
fdivl
sub
shll
loopne
fldt
ss
add
ss
int
inc
cmpsb
jno
cld
xchg
mov
out
popa
dec
cli
fimull
arpl
mov
fwait
aam
pop
movsb
sti
sbb
cmp
movsb
pop
ds
orl
adc
dec
aas
dec
pusha
dec
into
std
and
clc
pop
xchg
jle
aad
bnd
fdiv
in
cmp
pop
push
mov
jns
dec
cmp
xchg
repnz
jbe
test
mov
stos
push
or
test
pop
sti
jbe
mov
in
lret
sbb
mov
xchg
mov
cld
jge
adc
shll
sub
push
add
dec
xchg
add
or
out
popa
les
repz
hlt
push
out
xchg
mov
mov
repz
adc
pop
add
add
out
mov
shrl
or
sbbb
or
mov
lcall
cmpsl
lods
jo
dec
xchg
pop
adc
push
pop
cmp
into
fwait
out
nop
jmp
jns
mov
jp
xrelease
cmpsb
xchg
mov
push
sub
push
out
add
push
adc
movsl
popa
push
shll
test
daa
data16
das
xchg
dec
or
or
popa
mov
aam
out
cwtl
pop
mov
addr16
inc
insb
ljmp
pop
fwait
push
xchg
test
les
add
cmp
mov
scas
mov
jp
xchg
mov
mov
int
xchg
mov
lahf
pop
mov
es
adc
xchg
lcall
lret
cmp
leave
push
out
inc
jge
out
imull
jl
sub
lea
mov
imul
stos
push
cmp
mov
loop
or
call
inc
lcall
imull
lret
mov
subb
mov
out
dec
test
stc
cmp
fwait
add
cmp
mov
test
push
pop
movsl
sub
lods
fldln2
push
ret
pusha
into
sub
add
push
jb
fwait
add
or
sarl
jae
xchg
inc
aam
in
push
and
adc
sub
xchg
iret
xchg
insl
aas
sbb
lahf
in
jo
in
rolb
xorb
mov
jo
fdivrs
loopne
fsubs
xchg
aaa
lods
jmp
shl
inc
jmp
outsb
shr
cs
lea
aad
scas
jmp
dec
xchg
jnp
test
hlt
adc
fisubl
imul
push
shl
pushf
js
push
jecxz
sub
lods
lds
mov
add
add
popf
or
xchg
fcmovnbe
or
adc
sbb
adc
orl
sub
dec
and
sbb
out
lret
bound
dec
enter
lods
and
out
mov
icebp
insl
and
cmp
movzwl
lret
stos
and
dec
and
add
add
adc
xor
jmp
mov
out
int3
shrb
add
dec
xchg
mov
adc
nop
out
fdivrl
aam
xor
and
popa
mov
pusha
imul
cmp
and
cmp
sbb
sti
dec
mov
mov
push
rcll
push
int
imul
call
jp
lods
ret
outsl
inc
or
lcall
sbb
out
push
xor
xor
mov
push
lret
dec
push
xlat
add
pusha
push
pop
xor
pop
push
or
fwait
push
xchg
or
fsubrp
adc
mov
cs
add
add
or
rorl
xchg
mov
cs
adc
pop
push
inc
ds
ror
fucomi
mov
xchg
ret
cmp
divb
lea
imul
out
jp
inc
xorl
lods
push
cmp
and
xchg
aas
mov
xor
push
mov
sbb
scas
sahf
adcl
dec
pop
xchg
push
ficoms
js
push
adc
add
or
mov
sub
std
cmp
inc
je
pop
jbe
data16
rol
out
repz
fwait
lods
mov
adc
test
sbb
movsb
fstps
ds
jo
hlt
nop
cmp
pop
iret
mov
push
sbbb
sub
push
inc
xlat
cwtl
loop
daa
bound
aad
inc
adc
xor
pop
pop
hlt
imul
mov
imul
fisttpl
pop
push
jg
popa
testl
arpl
xor
inc
enter
push
out
repnz
pop
jno
add
mov
push
fnstsw
inc
sbbl
clc
arpl
cli
add
and
fadd
adc
movsb
ljmp
in
lret
sbb
pusha
xor
xorl
lcall
mov
lret
dec
nop
sbb
cmp
push
xchg
icebp
and
imul
stos
repz
imulb
or
or
xchg
test
push
inc
cmp
add
cmc
push
es
sahf
adc
je
cltd
aaa
inc
cmp
movsb
cmc
cmovnp
test
leave
pop
dec
movsl
loope
mov
sbb
sahf
fnstenv
dec
jp
pop
jo
rcll
cmpsb
in
xchg
mov
stos
rolb
cmp
push
shl
loop
cmp
adcl
and
je
enter
xor
dec
inc
and
jns
inc
xor
sti
add
mov
mov
imul
xchg
aam
call
shrl
test
sbb
sub
in
lods
jge
push
sbb
add
aam
mov
push
mov
nop
jnp
cmp
mov
movsl
and
xchg
sub
add
repz
roll
xchg
mov
sti
ljmp
cmc
lea
jg
sbb
popa
in
push
sti
inc
xorl
lcall
adc
jno
pop
not
mov
mov
cwtl
pop
imul
leave
outsb
pop
cmpsl
jae
cmpsl
test
mov
cltd
cmpsb
sbb
mov
rol
adc
ds
enter
mov
jo
out
xorl
inc
push
leave
cmp
cmp
push
icebp
or
lret
cwtl
dec
push
adc
and
pop
popa
insl
popa
jbe
jns
aad
ja
mov
sub
adc
gs
jb
mov
ja
add
lods
call
push
add
pop
repz
cmp
bound
jle
mov
cs
scas
push
mov
fwait
mov
call
add
add
or
test
mov
xchg
fcom
ret
cmp
stc
inc
enter
in
das
pop
daa
dec
sar
and
inc
cmp
push
mov
scas
fsubrp
xchg
shl
xchg
cmp
cli
out
cwtl
leave
pop
std
xchg
in
ficomps
fstpl
adc
jbe
jge
mov
pop
fdivr
xchg
cwtl
icebp
or
sarl
outsb
out
rorl
xchg
sub
mov
cltd
push
mov
std
ret
std
je
into
add
push
mov
pusha
and
pop
ficompl
lock
adc
mov
mov
pop
lcall
outsl
mov
call
aad
mov
inc
sbb
or
pinsrw
and
decb
push
inc
jns
xchg
vpxor
mov
xchg
pop
push
inc
fs
pusha
sbb
mov
fisubrs
lret
movsl
aas
adcb
adc
cmp
or
negb
jle
fdivrp
or
cli
cwtl
in
popf
cli
mov
sbb
cmpsb
mov
lret
daa
mov
icebp
sub
push
mov
fmuls
loop,pn
pop
outsl
mov
dec
add
dec
jl
in
loop
les
sbb
jp
push
adc
popa
outsl
add
dec
xchg
orb
nop
add
scas
aam
pusha
mov
push
aas
test
pop
fstpl
jp
lods
add
pop
fs
stc
mov
sbb
jle
jae
jecxz
loopne
jne
cs
jbe
repnz
scas
cld
stos
pop
or
pop
iret
push
mov
insl
lock
or
pop
jne
out
stos
clc
lods
push
xor
add
out
iret
and
movsb
xorl
mov
and
mov
fs
pop
dec
sbb
rcll
sbbb
sbbl
push
icebp
roll
push
scas
mov
test
sahf
out
movsl
outsl
sub
shlb
and
sbb
nop
jp
fwait
sarl
jb
fldt
clc
dec
andl
cs
xchg
xchg
clc
js
mov
fwait
mov
in
add
xchg
test
fdivs
cmp
sti
rclb
fsub
in
adc
mov
outsl
hlt
ds
lods
add
int3
addl
lock
push
test
rclb
push
push
out
cmc
test
mov
adc
jle
push
mov
and
into
xchg
mov
pushf
bound
sub
mov
bound
fistps
fidivrs
mov
nop
xor
and
arpl
pop
mov
popa
rcrl
adc
jle
dec
xor
cwtl
dec
repz
lds
jl
aas
pop
jmp
movsb
scas
imul
fidivrs
adc
jmp
fwait
punpcklwd
cmc
mov
pusha
outsl
mov
mov
int
cmc
cmp
pop
cmp
test
rcl
inc
sbb
js
fcomp
and
es
mov
clc
pop
jl
or
and
fnstcw
popa
insl
adc
mov
and
xchg
inc
add
outsb
cmp
mov
sub
std
in
cs
mov
stc
mov
mov
cmp
push
nop
xchg
jb
fsubs
insb
into
dec
cmp
es
or
sbb
or
jl
js
cld
idivl
ret
insl
outsl
repz
jae
mov
dec
lret
mov
js
dec
jns
inc
imul
int
sbb
repnz
pop
ja
mov
add
in
movsl
lds
stc
test
push
cmpsl
or
lds
das
xchg
jae
mov
stos
add
jge
inc
inc
iret
fwait
lcall
in
lods
xorl
sbb
cmpsl
sub
add
sub
and
mov
adcb
mov
pop
adc
imul
sub
inc
push
nop
or
cli
push
xor
mov
iret
fiadds
jo
leave
stc
or
xchg
rclb
imul
stos
aas
test
fidivrs
xchg
or
dec
mov
and
pop
mov
fs
and
push
jne
fisubl
test
stos
add
outsl
shll
std
ficoml
aas
mov
fneni(8087
out
mov
stc
adc
jmp
sub
push
xchg
insb
call
adc
and
subb
rcr
sbb
and
fisttpl
int
mov
shrd
push
insb
int3
insl
inc
pushf
test
adc
mov
cmpsb
fldl
popf
push
xchg
cmpsb
movsb
aaa
scas
mov
add
loop
ljmp
pop
jmp
pop
dec
jmp
daa
mov
dec
lods
lods
mov
add
mov
shrl
push
shr
jnp
xchg
out
stc
addr16
xchg
and
lret
and
push
pop
and
data16
out
int
in
push
leave
popf
clc
imul
push
xor
cld
cltd
arpl
adc
call
and
inc
popf
arpl
lds
test
unpcklps
push
xor
cmpb
icebp
mov
xchg
cli
inc
call
int3
ficoml
and
cmpsb
sbb
mov
inc
push
stos
push
imul
sti
or
adc
dec
data16
add
adcl
push
fucomip
xchg
arpl
pop
int3
jl
jcxz
lea
sub
es
aas
mov
xor
cmp
loop
adc
movl
mov
push
add
adc
or
xchg
and
fsubl
inc
sub
dec
push
jmp
cmp
mov
mov
es
sub
mov
mov
and
pop
imul
cmp
push
repnz
repz
push
dec
mov
ja
stos
jp
pop
sub
ss
sahf
mov
scas
and
mov
adc
sbb
and
dec
arpl
fcoml
and
push
pushf
je
xor
ja
pop
xlat
cmp
mov
fwait
rolb
mov
fwait
cmp
aaa
pop
mov
xchg
enter
ss
cmpsb
push
adc
scas
lea
popf
inc
mov
pop
loopne
rorl
arpl
lds
leave
xchg
sarb
jbe
ljmp
xor
mov
ficoml
into
popf
rclb
cli
xor
add
outsl
in
enter
fucomp
jno
jne
cmp
lds
ficoml
movsb
aam
rorb
mov
sbbb
fstpl
int
sbb
in
dec
and
das
jge
jnp
jbe
jnp
lret
xchg
in
adc
mov
mov
cmp
mov
and
addb
iret
mov
add
sub
lea
ja
gs
bound
inc
inc
insl
fistpll
test
mov
mov
into
in
loopne
xchg
arpl
test
mov
jns
sub
aad
mov
and
mov
jno
arpl
shlb
insb
test
enter
sub
push
movsb
lret
cli
inc
inc
insb
in
cmp
push
sbb
dec
sbb
int3
mov
mov
lret
push
in
nop
add
inc
icebp
jno
test
pop
jmp
hlt
int3
pushf
rol
sbb
shlb
xchg
sahf
pop
test
and
mov
dec
add
jge
mov
fsts
test
push
inc
dec
mov
jle
paddq
repz
mov
adc
adc
bound
and
pop
pop
or
sub
rcr
push
push
std
outsb
shll
adc
sbb
lock
hlt
xor
push
pusha
pop
data16
xchg
push
and
xor
push
fidivrs
or
xchg
outsl
bound
imul
jl
pop
jnp
mov
dec
xchg
dec
jno
loopne
rolb
add
bound
mov
loopne
lods
idivl
rcr
push
push
fmull
pushl
xchg
mov
xor
lcall
push
push
mov
les
xor
test
sub
adc
leave
scas
outsb
das
xlat
dec
sub
jb
or
leave
dec
cmpsb
or
xchg
subb
aam
lcall
clc
repz
hlt
sbb
cmp
lea
imul
xor
clc
jae
sarl
in
push
sbb
add
push
loopne
mov
or
in
xchg
pop
and
and
lret
pop
push
adc
lahf
mov
rsm
mov
movsb
cli
lock
mov
out
adc
add
push
stos
jmp
fcmovnu
pop
ja
fimull
push
div
pop
mov
fucomi
enter
inc
imul
xchg
repz
pop
dec
inc
pop
mov
rol
sbbb
mov
xchg
or
dec
xchg
sub
test
xor
push
insb
pop
outsb
sbb
mov
dec
or
adc
cmpsl
movsb
xor
dec
fldl
decl
sbb
cmp
loope
enter
pop
mov
sbb
dec
aam
iret
testb
xchg
push
adc
mov
movsb
dec
into
daa
mov
outsb
mov
and
ds
sbb
stc
dec
les
push
mov
dec
shr
cmp
cwtl
jne
mov
add
xor
test
inc
mov
cltd
insl
popa
aam
jge
lahf
jns
incl
ret
xchg
dec
cli
sub
lret
movsl
lahf
pop
mov
and
inc
sub
push
shl
fwait
arpl
mov
mov
lret
scas
sbb
ljmp
fisttps
sub
ja
sbb
loope
cmpsl
cli
jns
jp
les
loopne
push
inc
inc
mov
xor
fdivl
js
sbb
mov
sbb
xorb
xorl
pop
repnz
xchg
nop
fs
mov
adc
mov
rorb
and
mov
dec
js
mov
cmp
nop
movsl
inc
scas
add
arpl
lcall
sarb
test
jge
pause
loop
fsubrl
and
inc
xchg
inc
mov
mov
pop
xor
sbb
lcall
js
adc
or
lods
jno
icebp
aad
push
sub
das
cmp
xor
stc
pop
adc
cmp
mov
mov
adc
lret
cmpsl
push
repz
mov
push
mov
sub
mov
loop
xor
hlt
adc
rcr
addl
lcall
lret
xor
mov
push
mov
dec
push
xor
int3
test
cmpsb
es
sbb
dec
rcrl
lcall
mov
pop
enter
fadd
movsl
jae
lret
mov
jp
jbe
pop
std
and
test
bound
nop
or
push
xlat
aas
iret
mov
nop
or
in
jecxz
repnz
movsb
sbb
sub
fnstcw
enter
and
mov
pop
out
clc
dec
xorb
lcall
inc
dec
test
dec
scas
or
add
test
and
int
jae
and
add
jp
xchg
lods
jmp
sub
pop
ficoms
xchg
mov
les
das
out
dec
mov
mov
adc
insl
decb
xchg
jb
int3
push
fs
jns
aad
xchg
filds
push
dec
subb
sbb
jnp
inc
shlb
mov
lods
pop
adc
cmpsb
sub
enter
popa
or
pop
lret
fxam
into
or
pop
inc
sub
icebp
aas
test
xchg
mov
sbb
cmp
xor
add
dec
ficoms
test
cmp
popf
push
cli
or
enter
leave
lret
insl
mov
dec
push
mov
jg
push
loopne
xchg
ds
ja
js
jge
roll
repz
fistps
xchg
rorb
xchg
xor
pop
sub
dec
dec
loopne
mov
jo
rcrb
in
cmpsb
inc
lods
flds
mov
dec
fiaddl
sub
lea
das
push
pop
arpl
stos
lods
cld
lret
popa
cmp
insb
mov
mov
sub
outsl
xchg
gs
hlt
pop
cs
mov
mov
mov
pop
or
outsb
xchg
xor
mov
pop
ja
inc
lods
push
rcr
js
lcall
addb
sub
adc
cmp
fildl
aad
mov
int3
push
dec
mov
mov
mov
xor
xor
pushfw
add
dec
add
lds
adc
mov
xchg
adc
and
aas
push
cmp
out
cmpsl
test
mov
adc
pop
rolb
fmuls
insb
mov
imul
in
jecxz
mov
sub
les
push
out
mov
ja
scas
in
leave
sub
xlat
in
mov
push
aas
mov
mov
cltd
xchg
scas
dec
add
sub
push
sub
or
cwtl
cmpsb
leave
sbb
mov
xor
xor
loop,pn
into
add
inc
mov
jp
je
push
test
jmp
and
test
frstor
sbb
pusha
xchg
sub
xor
popf
push
sbb
fs
jmp
xor
cmp
aam
pop
stc
cli
imul
jo
fwait
xchg
addb
jl
jmp
arpl
dec
clc
int
fsubrs
mov
dec
mov
mov
insb
dec
mov
dec
imul
jg
daa
jo
mov
jmp
xor
sarl
data16
mov
xor
std
iret
pop
jle
xchg
cmpsb
xor
xchg
push
jne
cs
mov
pop
leave
pop
imul
add
pop
loopne
cld
bnd
jp
sub
mov
in
and
add
lods
dec
adc
xchg
dec
xchg
lret
or
es
mov
jge
xor
add
sbb
add
and
push
push
gs
lahf
test
pushf
xchg
mov
push
sbb
rorl
jb
js
ds
sbb
scas
rep
push
pop
es
add
loope
imul
sbbb
in
fwait
es
push
mov
xchg
jae
mov
mov
pop
js
shll
lcall
jecxz
ss
and
lods
in
fwait
sub
jp
push
negl
jbe
movsb
lea
out
movsl
lret
lods
pop
jge
fbstp
daa
and
and
push
cmc
unpcklps
mov
jl
mov
adc
and
ljmp
xor
cltd
mov
out
sbb
dec
fs
int3
je
xor
jg
std
adc
fadds
ljmp
mov
mov
and
jbe
pop
aam
inc
movsl
test
popf
or
addr16
enter
adc
pop
fwait
rcrl
sbb
fisttpl
mov
gs
sbb
cmp
and
jbe
push
jnp
xor
fbstp
jecxz
add
dec
mov
fiadds
dec
jp
imul
clc
call
sbb
push
pusha
movsl
sbb
mov
mov
shll
test
jecxz
mov
mov
jmp
pop
dec
dec
push
push
lretw
jle
sbb
inc
out
adc
xchg
xlat
inc
je
out
or
rcrb
jge
inc
jg
xchg
mov
addr16
test
pop
jnp
inc
mov
lods
nop
or
or
jmp
out
aaa
mov
or
mov
jae
scas
jne
mov
repz
xor
pop
out
xchg
jbe
out
jbe
or
add
dec
test
les
daa
fidivrl
pop
daa
xchg
jl
xor
pop
or
jmp
decl
mov
out
in
ret
pushf
bound
das
inc
outsl
dec
ljmp
inc
sbb
pop
jg
in
push
in
inc
gs
sbb
push
loop
popa
fcoms
rcrb
dec
pop
adcl
cmp
imul
or
lock
fwait
aaa
rolb
or
xchg
xorl
fldcw
pusha
lret
xor
leave
mov
mov
jge
sbb
aas
lret
or
inc
es
and
fstl
mov
fiadds
xchg
pop
js
fists
xor
leave
sub
nop
dec
leave
shlb
lods
in
xchg
loope
test
sub
lods
out
ror
out
cld
jnp
inc
dec
mov
or
in
sahf
and
cmpsb
fsubrl
sub
movsb
sbb
lods
mov
jns
lods
mov
jne
dec
mov
xor
dec
mov
add
dec
js
ret
fwait
test
enter
adc
sti
cwtl
sbb
cmp
adc
mov
cli
or
jne
mov
pop
pop
subl
lret
cmp
mov
inc
inc
scas
ljmp
xchg
sub
sub
xchg
xchg
sbb
pop
dec
mov
jo
mov
push
mov
adc
add
fs
fs
xor
cmp
fsubrs
sbbl
jne
mov
mov
push
ret
aas
fstpt
pop
push
das
punpckhdq
adc
je
xchg
add
dec
pusha
or
popa
xor
add
push
mov
sub
add
aas
inc
cld
repnz
jmp
cld
and
call
gs
lret
mull
push
cli
jns
mov
leave
jb
clc
movsl
rolb
or
mov
xor
push
jns
aad
jnp
mov
fnstcw
les
mov
lret
scas
in
popa
pop
leave
mov
mov
jp
repz
fwait
dec
mov
mov
ss
xchg
add
in
test
lahf
xlat
or
call
jne
popf
sub
movsl
into
xor
dec
stos
inc
pusha
test
jge
aaa
imul
mov
test
mov
xchg
jbe
sti
mov
push
rcr
inc
std
jge
inc
loop
bound
hlt
lock
and
dec
in
arpl
xor
repnz
mov
and
xor
xlat
and
mov
push
sub
cltd
addl
mov
cmp
int3
std
adc
sbb
dec
outsl
adc
sub
call
clc
pop
adc
cmp
ja
into
jb
roll
pop
adc
mov
fsts
mov
aad
mov
movsb
call
clc
push
lods
ss
xchg
cld
cmp
inc
inc
stos
sub
sbb
adc
insb
push
inc
inc
sahf
loopne
jae
sbb
ret
cs
xor
and
shll
pop
jmp
jnp
loope
mov
clc
je
xchg
stos
sub
mov
pop
lahf
mov
pop
lock
stos
bound
sbb
cmpsl
mov
inc
xor
mov
sub
ja
xor
inc
adc
negl
cmp
sarb
es
dec
sub
mov
rclb
mov
push
sub
xchg
imul
test
jge
and
cwtl
cli
xchg
mov
in
push
inc
inc
mov
out
dec
data16
dec
cld
cli
dec
imul
xor
inc
mov
into
push
pop
rep
push
cmp
arpl
test
stos
dec
mov
inc
loop
push
adc
mov
mov
je
xor
or
cmp
popf
in
lcall
jne
lea
in
sbbb
jmp
xor
adc
test
jno
sbb
je
out
mov
add
add
sub
xlat
stos
adc
sub
xchg
mov
dec
in
jmp
push
data16
mov
mov
loopne
lds
scas
fisttps
push
jo
icebp
xchg
add
jp
jp
rol
lea
mov
cmp
inc
js
inc
dec
call
adc
mov
jb
subb
sbb
push
shr
sbb
jecxz
sub
fstl
mov
ror
test
aas
push
sarb
fucom
push
mov
pop
sbb
sub
fs
sub
lods
xor
cmp
bound
lea
addr16
push
pop
mov
cwtl
ror
scas
or
outsl
in
movsb
sbb
adc
loopne
es
dec
sub
cmp
insl
jae
jmp
mov
rclb
out
xchg
dec
aas
adc
in
push
xor
inc
in
into
cmp
adc
lret
dec
xchg
fcomps
int
das
call
sub
aam
add
adc
popa
xchg
adc
xor
fnstsw
xchg
int3
dec
lret
mov
lea
ficoml
sub
mov
mov
movsl
sarl
les
rcrb
cmp
outsl
imul
mov
aad
mov
lcall
xchg
xchg
pop
pop
imul
or
jge
ljmp
fbstp
jp
inc
stos
jns
fistpll
mov
push
adc
or
pop
insl
add
outsb
mov
pop
or
pop
sub
mov
test
sbb
add
or
push
das
sti
push
popl
xlat
rolb
and
fnstsw
adc
jns
fnsave
movl
jne
in
xchg
mov
sub
mov
es
xchg
aaa
jle
std
int
in
aam
dec
lods
addr16
test
push
pop
sub
inc
and
mov
loope
lock
or
mov
push
push
mov
push
inc
cltd
mov
xchg
lcall
cmp
out
mov
pop
rclb
push
sbb
jmp
stos
fnsave
sub
pop
in
push
mov
pop
cltd
mov
mov
cmpsl
pop
mov
stos
stc
fs
push
jbe
out
les
cwtl
stc
sbb
ljmp
outsl
test
push
in
lods
mov
pop
or
dec
orl
jge
xlat
popa
jmp
dec
sub
mov
repnz
mov
jno
std
hlt
test
cmc
jmp
orb
push
mov
jp
testl
rcl
or
mov
push
dec
pop
lcall
sti
sbbb
add
adc
test
jl
fbstp
mov
fnstenv
adc
pop
xchg
and
call
pusha
std
mov
pop
movsl
cmpsb
jge
into
mov
cmpsl
or
pop
imul
ja
xchg
or
subl
loopne
xor
jb
xchg
js
mov
or
push
inc
sub
and
xchg
outsb
lock
es
adc
inc
push
shll
aad
out
fidivrl
lock
sbb
ficompl
sub
push
fcmovnu
stos
cmp
stos
sbbb
dec
and
jb
or
push
sbbl
jb
mov
movsb
adc
sbb
je
inc
addr16
pop
test
xchg
mov
rorl
mov
lahf
xchg
sub
out
imul
xor
xchg
shrl
ds
add
push
stos
dec
xor
jno
mov
movsl
xchg
xchg
loopne
and
ficomps
insl
mov
in
cwtl
or
testl
ret
pop
decb
loopne
cs
shl
xchg
lret
js
ljmp
popf
dec
and
fs
subl
push
and
fcomi
add
add
imul
and
push
adc
inc
or
xchg
mov
pop
sahf
icebp
add
andl
inc
out
dec
add
sub
lret
or
dec
lret
into
sbb
xlat
mov
xor
xor
das
or
ds
incb
int3
adc
mov
or
out
push
bound
das
fimuls
sbb
rorb
popa
test
insb
scas
out
pusha
and
cmpsb
lret
mov
std
out
clc
bound
xor
push
xchg
pop
push
ds
shrb
jge
jge
and
rclb
sar
or
fcompl
jbe
push
add
fdivl
dec
inc
jle
dec
pop
xor
call
xchg
in
in
stc
or
xchg
and
imull
jnp
push
push
mov
orb
fistpll
cmpsb
cmc
ffreep
ret
mov
out
and
pop
scas
jo
out
mov
push
xchg
and
mov
mov
xor
xchg
cmc
xchg
xor
add
dec
pop
out
outsl
push
fcomi
sbb
mov
fsubrl
das
lret
push
nop
sti
fstpl
sbb
ror
fistl
sub
aam
int
mov
fimuls
mov
xor
mov
push
xor
and
sbb
shrb
mov
lea
imulb
sbb
sbb
imul
iret
push
pusha
popl
dec
out
in
mov
sub
mov
bound
rcr
dec
sbb
push
xor
lret
push
out
jne
sbb
rcrl
mov
mov
mov
sub
in
arpl
fs
insl
rcrb
or
bound
inc
sub
xchg
inc
frstor
pop
gs
or
test
es
cwtl
fs
aam
test
or
jmp
mov
inc
sbb
rol
push
dec
sub
inc
es
mov
ds
test
xchg
inc
cmp
dec
inc
ret
dec
adc
jmp
mov
add
and
call
aam
xor
mov
jb
loop
add
jne
jmp
es
js
or
stos
jle
mov
cmp
in
dec
xor
shr
cmp
arpl
mov
dec
cs
mov
push
fs
lret
jo
loope
movsb
adcb
or
ds
push
inc
cmp
dec
es
add
sbb
dec
popa
and
out
sbb
push
pop
sub
int3
outsb
test
sub
xchg
ljmp
in
js
insl
dec
cmpsb
test
jge
lock
add
out
xchg
dec
cli
mov
jl
push
negb
add
in
lea
cmp
dec
pushf
sub
cli
icebp
sbb
aam
pop
cmp
jg
xchg
sub
sbb
dec
mov
out
imul
fildll
xchg
xchg
out
hlt
ret
dec
or
roll
add
inc
sub
add
mov
pop
and
mov
outsb
and
mov
cld
icebp
add
lret
mov
mov
cmovnp
jle
roll
fnstenv
xchg
addr16
adc
jnp
dec
rolb
out
mov
mov
cmp
jp
cmp
mov
in
add
jo
roll
loope
call
xchg
add
push
lahf
adc
ret
jp
cmp
sahf
sub
dec
sbb
jbe
iret
sub
mov
jmp
inc
scas
insb
adc
jmp
out
sbb
sbb
cmp
jmp
adc
push
cmp
jge
jg
pop
cwtl
ret
push
pop
mov
xor
out
inc
pop
cltd
lcall
pop
ljmp
xchg
xchg
pop
mov
or
adc
sbb
and
rclb
add
insb
shr
push
mov
movsl
jbe
scas
repnz
xchg
sarb
push
pusha
sub
fsubs
in
sbb
xor
shll
dec
sbb
or
icebp
sbb
sti
sub
fbld
loope
mov
xchg
pop
psllq
jnp
fwait
cmpb
push
aas
add
xchg
scas
mov
clc
jp
movsb
cmpsl
mov
sbb
lods
fcoms
mov
addr16
std
lock
pop
and
add
fstpl
pop
push
jecxz
sub
push
and
sub
ret
pop
pop
and
inc
addr16
stos
inc
out
test
movsl
or
jne
lea
insl
mov
push
ds
mov
pop
pop
mov
and
adc
insb
adc
adc
inc
and
mov
nop
adc
add
add
aaa
aam
cmp
pop
shlb
outsl
jl
or
mov
lret
xor
add
xchg
int
out
push
lds
loope
or
jns
dec
cmpsb
cli
jae
outsl
int
les
pop
add
out
mov
mov
ja
testl
inc
cmp
fwait
or
ds
add
clc
rcll
push
xchg
sarb
loop
and
dec
xorb
sub
dec
xchg
add
or
or
cli
rclb
stos
bound
push
adc
jo
in
fcoml
std
adc
lahf
lahf
iret
stos
xchg
lods
xor
stc
inc
jge
jge
stos
in
fdivrl
xchg
cwtl
ja
cmp
sub
jp
mov
add
loope
shr
and
ljmp
jge
mov
jmp
xlat
mov
leave
add
mov
out
adcb
les
stos
pop
push
mov
mov
cltd
inc
sub
mov
sbb
out
cli
aas
push
iret
clc
jnp
addr16
stos
sbb
call
push
andb
mov
shlw
lds
psubd
mov
and
and
lahf
movsl
sbb
ja
insb
cmp
into
and
add
and
fisubs
popa
pusha
pop
push
stos
jmp
sub
xchg
pop
in
push
add
repz
lods
push
mov
out
cmp
lock
flds
mov
movsl
cwtl
cld
ret
fs
sub
inc
call
xlat
cmp
cli
in
dec
pop
pop
or
ret
inc
jle
out
sbbb
cs
pop
cld
jle
nop
jge
lcall
mov
lret
add
pop
loop
push
jbe
xlat
fldt
sub
push
inc
nop
cltd
scas
push
movsb
in
imul
push
add
pop
aaa
and
ret
dec
jg
jbe
fisubrl
cmc
ss
cwtl
gs
arpl
pop
cmp
shrb
scas
fcomps
xchg
cmp
aaa
jb
adc
dec
mov
shrl
jns
xor
outsb
mov
push
or
mov
aam
push
adc
jbe
mov
cmp
mov
jecxz
jmp
pop
mov
cmc
stos
add
inc
jbe
roll
xor
sbb
subb
inc
mov
push
scas
clc
jae
pop
pop
mov
cwtl
push
lds
cmpsl
sub
xchg
orl
mov
mov
xchg
mov
push
mov
nop
push
outsl
mov
pushf
fwait
push
test
fists
aas
test
fistl
xchg
adc
mov
lea
pop
or
xchg
das
scas
xchg
test
adc
push
inc
cs
add
test
in
or
aas
fprem1
sbb
cmpsl
xlat
pop
inc
cld
pop
pop
mov
sarl
cs
xchg
in
les
pop
cmp
jb
fmull
mov
sbb
inc
int
add
dec
lret
scas
movsl
cmp
push
pop
lcall
xor
pop
out
inc
cmp
mov
dec
and
adc
add
mov
sbb
fisttpl
test
jg,pn
iret
xchg
inc
push
in
into
jmp
dec
pop
cmp
xchg
repnz
aaa
add
outsb
pop
fmul
or
and
xor
sbb
adc
iret
es
mov
aad
test
enter
jecxz
ficompl
push
lcall
rol
loop
fstl
les
outsl
xchg
and
imul
push
lcall
ja
or
out
mov
pop
push
lds
das
mov
lods
jmp
xchg
xchg
pop
jno
or
mov
jmp
test
ror
pusha
xor
push
sub
mov
xrelease
inc
pop
lahf
sbb
popf
mov
fs
xlat
or
xchg
add
mov
mov
insb
arpl
rorl
add
mov
fisubrs
dec
and
mov
test
or
aaa
popw
lea
jmp
dec
ret
jle
dec
mov
push
enter
mov
or
and
mov
sbb
in
and
dec
push
in
adc
test
and
add
cld
mov
mov
fwait
pop
mov
mov
negb
push
mov
sbb
aas
jns
mov
xchg
psadbw
mov
push
loopne
dec
sbb
push
mov
idivb
add
cltd
cli
test
mov
push
out
movsb
loope
or
pop
xchg
xor
mov
sub
lahf
or
stc
sbb
jns
jmp
jge
pop
pop
jb
jmp
arpl
repz
addr16
jge
cmp
mov
push
jmp
pop
adcl
gs
xchg
jne,pt
les
cwtl
cwtl
stos
aaa
jo
inc
lds
xchg
fldt
or
cmp
pushf
mov
mov
adc
xorb
cli
pop
leave
pop
stos
dec
test
push
push
es
xor
push
sbb
imul
dec
pop
lds
dec
jbe
lock
sti
inc
test
cmp
pop
xchg
or
scas
cmp
mov
mov
inc
pop
mov
jno
jo
lods
mov
gs
cmp
cld
dec
jns
gs
enter
call
scas
in
inc
sbb
call
inc
sbb
aaa
ljmp
fmull
inc
dec
xchg
daa
inc
mov
push
andl
mov
faddl
mov
jmp
jns
cmp
cmp
out
lock
ljmp
cmovae
xchg
lock
sahf
repnz
inc
sbb
dec
jne
in
jp
cmpsl
cmc
pop
xchg
jp
jo
jmp
inc
mov
push
loop
sbb
popf
cmpl
mov
and
lret
pop
paddw
xor
add
fs
adc
leave
movsb
roll
sahf
xor
sbb
mov
out
or
gs
inc
dec
and
sti
sar
cmp
or
dec
lret
stos
cli
clc
movsl
repz
outsl
or
aas
roll
mov
add
xlat
add
fistpl
fisubrs
add
mov
movsb
sub
mov
mov
push
xchg
mov
adc
es
outsb
push
imul
pop
and
mov
adc
or
xlat
clc
push
inc
aaa
fbld
mov
lcall
inc
lods
pop
rorl
mov
cmc
mov
inc
fisubl
es
pop
fisttpll
mov
cltd
loopne
insb
aam
adc
fldcw
data16
inc
adc
loopne
mov
pop
hlt
js
mov
jg
fists
xchg
addr16
popa
fcmovb
dec
xchg
add
push
sbb
push
pop
mov
cs
pop
mov
fisubrs
add
clc
inc
mov
arpl
push
shrb
cmc
inc
pop
sbb
inc
out
xor
xchg
js
sub
inc
jl
fwait
lret
lods
inc
dec
xchg
movsl
mov
fsubrs
ror
sub
frndint
xchg
add
fldl
jne
sub
mov
inc
js
aaa
lds
sahf
andb
fsubrs
xchg
sahf
dec
js
hlt
aas
xchg
adc
xlat
jmp
daa
je
rorb
mov
push
data16
cmc
sahf
test
adc
cmpsb
pop
popf
pop
or
adc
mov
mov
testl
jmp
mov
pusha
dec
daa
mov
add
subb
aam
or
jmp
loope
jge
cmpsb
xor
pop
pop
dec
cmp
and
adc
mov
jge
mov
dec
sub
mov
loopne
int
insb
pop
xor
in
mov
or
push
pop
add
push
jmp
in
mov
xor
add
sahf
sbb
cmp
iret
xor
in
mov
inc
xchg
sub
repnz
movsl
ja
in
jbe
sub
or
add
jno
rorb
or
push
pop
sub
outsb
aaa
pop
stos
inc
add
std
in
add
dec
jae
xchg
mov
cmp
xor
adc
pop
push
in
ficoms
out
test
add
punpcklwd
jb
xchg
sub
add
arpl
inc
js
and
cmp
imul
jbe
lcall
pushl
adc
insb
iret
jmp
jg
mov
roll
push
ljmp
out
fisubrl
cmp
adc
sbb
jl
inc
div
push
cwtl
dec
add
dec
sub
ja
jb
inc
xchg
out
lock
das
sub
and
addb
int3
lods
or
test
mov
adc
dec
jp
lea
mov
xor
add
pop
pop
mov
and
roll
dec
cmpsb
dec
jecxz
add
lock
jbe
out
iret
pop
pop
or
sbb
inc
dec
scas
fwait
mov
aaa
push
lahf
test
aas
lock
mov
arpl
or
inc
ds
xchg
icebp
test
pop
cmp
mov
rolb
xchg
xchg
cwtl
or
xchg
jle
ds
lahf
sbb
leave
out
std
loop
stos
sbb
mov
mov
das
iret
popf
dec
sbb
pop
fldcw
inc
daa
push
jmp
xchg
adc
cmpsb
test
jno
fdiv
jg
hlt
stos
mov
sar
add
test
push
pop
sub
aas
and
in
scas
xor
pop
das
push
icebp
mov
xchg
fisubrl
cmpsb
stos
movsb
add
push
sub
cmpsl
mov
push
xchg
add
mov
push
pushf
das
xchg
dec
dec
fadd
fisttpll
sar
mov
out
and
out
test
arpl
inc
add
mov
jne
push
cwtl
cmp
cmp
mov
cmpsb
mov
or
sbb
adc
pop
insb
dec
rorl
adc
repnz
push
mov
or
mov
cli
subb
dec
shrb
test
arpl
mov
xchg
ret
dec
movsl
stos
into
in
xlat
jge
stos
test
mov
add
xchg
arpl
xchg
dec
cmc
cmpsl
pop
jae
jmp
int
shlb
jge
scas
jo
jge
mov
hlt
mov
in
xchg
jmp
lahf
push
mov
mov
push
fimull
in
cmp
pop
dec
into
test
stos
data16
pop
gs
inc
test
xor
cwtl
ss
or
jecxz
jmp
ret
das
jns
jecxz
xchg
mov
push
push
pop
mov
pop
push
aas
pop
push
xor
cmp
mov
into
mov
addr16
pop
in
pusha
cwtl
mov
stos
icebp
int
sbb
shl
int
add
xchg
stc
call
lea
add
pop
jg
call
int
xlat
pop
and
out
add
andl
aas
add
adc
mov
cmp
cli
pusha
addl
insl
aad
xchg
jmp
repnz
mov
inc
pop
dec
sbb
jb
cmpl
imul
mov
sahf
or
lcall
cltd
popa
mov
cmp
sbb
mov
andb
lcall
inc
dec
push
push
mov
in
stos
add
pop
and
fstpt
lea
pop
jl
xlat
gs
popf
push
mov
inc
push
stc
push
dec
xchg
test
jns
pop
outsb
cld
fildl
add
xchg
jecxz
mov
add
mov
pop
mov
push
lret
jl
pop
inc
nop
add
inc
cmp
jmp
cmpsl
in
mov
into
les
jg
sbb
sub
inc
leave
out
mov
sub
stc
imul
dec
mov
or
add
mov
push
into
aas
jne
mov
mov
arpl
loopne
pop
enter
push
mov
xchg
pushf
call
add
mov
jmp
sbb
lock
sbb
lahf
push
lods
or
test
sub
mov
sbb
xor
jo
out
loopne
mov
imul
cld
mov
aam
icebp
out
lret
std
sbb
std
incl
jno
xchg
lea
rorb
fsubrs
stos
pop
cwtl
jmp
xchg
adc
idiv
out
rolb
aas
lret
lret
bound
cli
mov
mov
cmc
bound
pop
fsub
inc
outsb
pop
fsub
jge
outsl
fdivrs
call
jg
mov
xchg
mov
test
add
es
sub
cs
mov
jle
adc
ret
jns
addr16
jmp
xor
add
int3
push
sbb
inc
test
jecxz
dec
fsubl
cmp
jo
xor
push
lods
and
fists
mov
xchg
dec
push
dec
lret
addr16
sub
fs
mov
sti
div
sbb
mov
movsl
psllq
je
mov
jp
mov
cmc
stc
imul
pusha
arpl
leave
out
pop
arpl
cmp
sub
shrb
iret
adc
gs
sub
jmp
sub
ror
adc
lods
jle
cmp
jl
mov
cwtl
or
and
sub
mov
leave
lcall
mov
out
inc
add
in
cmp
mov
hlt
bound
lret
test
cmp
ret
xor
xor
in
push
jmp
repnz
pop
sbb
and
jns
lods
into
push
lock
push
scas
adc
fildl
addr16
cli
pop
cmp
jmp
mov
cmpsl
push
hlt
movsb
in
inc
jg
and
mov
out
mov
in
lret
lcall
stos
pop
sbb
mov
scas
pop
xlat
pop
adc
dec
push
xlat
add
inc
stos
jecxz
mov
and
jge
fsubs
sub
mov
mov
stos
xor
outsl
jne
mov
jns
cmp
mov
std
testb
add
jbe
mov
fwait
scas
pop
sbb
divl
repnz
mov
ja
lret
xorb
sbb
dec
sub
xor
insl
cmpl
stos
push
pop
jne
mov
lcall
jmp
js
or
popf
sarl
fiadds
or
mov
mulps
orb
aad
xchg
jmp
fdivs
cmc
js
add
popl
imulb
les
mov
in
mov
adc
add
jo
mov
mov
cmp
mov
mov
seto
pop
gs
push
xchg
adc
repz
and
or
imul
or
je
sbb
sbb
lret
in
mov
push
dec
jne
lock
cmp
xor
or
clc
stc
movsb
cmp
push
int3
arpl
jo
jl
iret
shlb
sbb
aaa
inc
std
cmpsb
mov
insl
mov
lret
mov
add
lcall
or
jae
fdivrs
clc
fists
sub
xchg
dec
ja
movsl
adc
in
mov
pop
xchg
nop
dec
sub
adc
adc
jle
push
mov
shrb
les
dec
lret
ss
dec
test
outsl
jns
sbb
xchg
sub
mov
sub
cmpsl
xlat
adcl
aam
mov
mov
cwtl
push
gs
lock
cmp
lea
sub
aas
push
inc
inc
add
movsl
stos
add
fsubs
cs
movsl
sarl
insl
inc
adc
jle
sbb
push
call
sub
sub
adc
sub
cld
imul
jb
mov
push
jp
into
xor
mov
prefetcht2
and
mov
mov
test
lret
dec
add
jmp
push
and
mov
dec
mov
mov
int
cmp
mov
dec
test
orl
lods
fldt
mov
and
lods
inc
xchg
jb
movsl
sbb
dec
push
stc
cmpsb
add
cmp
dec
dec
adcl
inc
pop
ret
cmpsl
sahf
clc
mov
data16
pop
rolb
out
push
dec
add
or
pop
sti
xchg
out
sub
jl
aas
add
loope
or
into
mov
std
xorb
and
jb
and
movsb
push
aas
scas
icebp
mov
push
jg
jp
ja
xchg
jl
stc
ja
jecxz
adc
js
ljmp
mov
jmp
cmp
inc
cmp
lcall
rcrl
cmp
cmp
add
fadd
xchg
push
call
xchg
std
stos
push
jecxz
xchg
adc
jno
jge
sbb
out
icebp
popf
ljmp
push
shll
inc
loop
mov
popa
cld
outsb
inc
test
inc
test
cmp
dec
jb
bound
outsl
sub
es
jo
loope
sbb
outsb
scas
js
inc
into
xor
out
js
add
loop
sub
mov
cltd
dec
jo
jae
push
imul
pushf
cwtl
adc
insl
lds
popa
mov
movsb
out
stc
or
in
js
ljmp
add
cwtl
stc
fdivrl
ret
xor
sbb
jmp
mov
mov
icebp
sahf
stc
adc
add
mov
push
mov
mov
jg
imul
sub
mulb
fsub
ret
cli
lods
imul
andl
es
push
pop
cli
scas
repz
xor
bound
mov
adc
call
scas
push
cmp
pop
ss
outsl
ror
cmp
data16
mov
pop
add
push
mov
popf
fs
pop
ret
ja
sbb
bound
inc
negb
lods
pop
push
cltd
std
xor
pop
lds
push
mov
pop
push
inc
or
xchg
sbb
mov
shr
imul
out
jl
mov
enter
in
inc
pop
sarb
cmp
fs
out
mov
dec
and
pushl
dec
mov
out
stc
mov
aaa
or
mov
cld
or
push
sarl
mull
sbb
sub
jns
pushf
inc
stos
inc
data16
fbstp
pop
cmc
lods
jmp
xor
jle
xchg
adcl
mulb
inc
pop
popa
sbb
fnstsw
add
pusha
xchg
mov
sub
notl
dec
fisubl
stos
mov
xchg
cwtl
mov
cmp
sbb
cmp
push
mov
sbbl
sub
jle
fisubrs
pop
int
cltd
fcompl
and
je
popf
pop
ss
mov
outsb
aaa
dec
mov
repnz
and
push
jl
out
iret
dec
adc
ficoml
sahf
push
test
lds
mov
push
loopne
sub
mov
push
sbb
test
movsl
push
mov
scas
mov
mov
test
cli
jo
adc
out
lcall
mov
or
push
fists
dec
test
lret
pop
inc
mov
cwtl
stc
xchg
lea
sti
pushf
dec
cmp
sbb
clc
sbb
fwait
mov
std
test
int
js
push
push
adc
popf
dec
ss
mov
and
test
pushaw
shll
repz
mov
sbb
sub
fwait
imul
sub
fwait
addl
jl
fsubl
cld
xor
daa
push
sub
or
sub
cltd
cmc
addps
inc
outsl
xchg
mov
mov
clc
popf
das
push
ja
push
decl
cs
addr16
lds
popa
loop
iret
mov
mov
push
ja
push
inc
mov
cmp
xlat
fisttpll
insl
mov
out
sbb
fstpl
inc
xchg
mov
dec
mov
imul
insl
das
push
mov
fdivrl
jmp
out
popf
cmp
and
cmpsb
inc
mov
jnp
jmp
xchg
sub
ds
icebp
mov
and
xchg
push
in
jmp
add
push
mov
fwait
inc
pop
shrb
inc
and
mov
xchg
js
adc
sub
pop
imul
sarl
add
in
jo
and
or
pushf
hlt
mov
clc
out
ffreep
lea
jb
xor
lods
xchg
adc
sub
sbb
pop
xchg
rcrb
sbb
es
scas
dec
addr16
sbb
mov
iret
jecxz
ss
cld
or
int3
and
aaa
add
xor
xchg
aas
ret
jae
jno
lods
mov
jp
stos
mov
stc
aaa
and
lcall
xchg
imul
or
push
or
lea
sbb
arpl
imul
cld
fadds
stos
adcb
add
insb
testb
dec
sbb
sub
incb
add
ret
mov
sbbb
idiv
push
sar
or
js
outsl
or
cmp
insb
dec
hlt
inc
xlat
xlat
jne
jns
mov
mov
adc
es
mov
xor
nop
aaa
xlat
movsl
push
or
je
not
mov
dec
jns
aad
cmp
mov
lret
jae
xchg
sbb
fwait
lock
cmc
sub
aas
dec
adc
mov
cmp
jne
add
dec
mov
dec
mov
fmuls
xor
mov
jl
lock
in
sar
adc
js
xchg
add
lods
ljmp
inc
inc
inc
bound
data16
mov
ds
mov
jp
in
in
sbb
dec
or
test
mov
mov
mov
and
and
and
sahf
loope
lahf
arpl
push
xor
lock
clc
inc
lods
sub
xorb
mov
adc
or
aas
loopne
ja
push
mov
cmp
je
adc
popa
push
add
adc
rcrb
push
jb
mov
insb
repnz
or
sbb
pop
and
inc
mov
out
nop
jecxz
push
cmp
aam
pop
inc
in
xchg
lds
outsl
in
xchg
cmp
mov
jmp
jg
sbb
cvtpi2ps
loope
cld
sub
push
jmp
xchg
mov
mov
out
xor
mov
popf
out
pop
mov
adc
das
inc
adc
out
mov
ja
add
and
std
inc
lret
hlt
sbb
jl
xor
in
jo
or
in
cmc
adcl
divl
mov
inc
pop
mov
pmaddwd
mov
jl
int3
nop
push
and
pop
fucomi
push
lods
xchg
call
pusha
out
and
clc
sti
outsb
out
ret
lods
daa
mov
jle
pop
fisubrl
xor
mov
inc
test
ret
pop
sahf
ret
popf
sub
cmp
aam
xor
and
sub
lods
dec
dec
lea
xchg
inc
fistps
sbb
add
inc
cs
popa
psubd
mov
xor
jo
cltd
mov
xchg
pop
shrb
adc
mov
out
xchg
cld
sub
ja
add
out
fs
add
and
rcrb
call
pusha
loope
xchg
in
sbb
clc
xchg
rorb
popa
addr16
lret
inc
mov
imul
sbb
mov
fmull
movsb
cmp
mov
cwtl
ja
scas
mov
aam
int3
lahf
push
popl
jb
push
push
fidivrs
lods
cmp
popa
jne
scas
jnp
out
jae
int3
js
sub
lds
jb
ret
push
sub
loopne
and
rorb
in
stc
sbb
fsubl
pushf
inc
sbb
loope
jnp
repz
into
mov
inc
jmp
inc
adc
mov
push
mov
ja
frstor
in
mov
cmp
xchg
inc
push
daa
lret
xchg
xor
nop
or
xchg
dec
add
xlat
mov
dec
push
shlb
mov
add
xchg
shrb
pop
pop
lea
inc
mov
jle
xchg
adc
into
imull
sbb
push
lock
sub
cmp
mov
shlb
fnstcw
sbb
adc
roll
adc
pop
cmp
lods
mov
pop
pop
xor
mov
call
xlat
aas
push
cs
cmpsl
in
xchg
sbb
push
inc
inc
orl
int
fstl
pop
mov
mov
jl
jb
mov
inc
popa
mov
add
sub
popa
mov
js
pop
les
xchg
inc
repnz
pop
ret
fnstcw
xchg
mov
or
xor
data16
notb
push
jb
arpl
stos
dec
mov
in
mov
pandn
outsl
out
dec
gs
adc
xor
fdivs
dec
shrb
pop
xchg
neg
mov
and
fistpl
pop
inc
xchg
mov
loop
imul
or
cwtl
movsl
push
jo
movsb
mov
xlat
mov
cmp
add
adc
cmpsl
stos
push
in
in
jnp
je
and
mull
ja
gs
mov
sahf
mov
lds
fsubs
cmp
aas
dec
xor
add
mov
lods
mov
mov
call
aam
push
insl
std
dec
pop
gs
in
fnstenv
mov
lret
mov
daa
push
dec
and
subl
gs
loopne
pop
xchg
faddl
add
adc
inc
std
loope
jbe
add
sbb
ja
lret
lock
movsl
mov
add
sub
inc
jns
xchg
push
arpl
clc
dec
imul
add
lods
lret
ja
leave
mov
imul
lock
mov
push
fs
lret
adc
dec
cli
fildll
pop
adc
clc
mov
cmp
or
cmpsb
or
les
push
call
push
mov
cmp
cmpsl
xchg
xor
hlt
or
fimuls
das
pop
mov
ss
adc
or
jmp
inc
ljmp
jb
xorl
mov
mov
sub
adc
xchg
sub
jae
jle
xor
repnz
mov
xchg
gs
lahf
adc
test
sbb
stos
xor
mov
popa
xchg
add
scas
xchg
mov
dec
xor
jecxz
mov
std
xor
rolb
fnstsw
call
mov
dec
out
sbb
pop
or
popf
test
xchg
adc
push
cmp
hlt
cmp
stos
pusha
pusha
test
adc
outsb
insb
jnp
loopne
cmc
movsl
mov
pop
mov
or
pop
xor
test
test
in
jge
mov
mov
scas
lahf
sub
and
and
dec
rcrl
ds
mov
or
xchg
ret
sbb
clc
daa
cmpsb
icebp
scas
adc
dec
xchg
mov
stc
or
sub
cmc
cld
arpl
jnp
lds
mov
repz
loop
cltd
hlt
add
mov
add
and
loope
adc
mov
cmp
add
and
popa
sahf
inc
int
xor
fucomip
inc
mov
pop
inc
cld
ror
cmp
pop
mov
or
sbb
movsl
jg
inc
jo
lcall
insl
aas
mov
jbe
out
ja
les
je
xchg
aam
push
mov
addr16
gs
lret
sbb
test
sbb
jle
adc
mov
mov
mov
fmuls
fcmovne
mov
adc
xchg
push
mov
dec
icebp
inc
mov
sub
xchg
loope
lock
jno
ret
icebp
repz
pop
cmc
popa
inc
rolb
fiadds
sbb
add
jl
xchg
xchg
xchg
hlt
aam
data16
jp
or
pop
cmp
mov
fnsave
xchg
jne
sbb
push
bound
fstl
mov
gs
mov
rcll
inc
out
mov
pop
and
cmpsl
outsl
fmul
cmpsl
jno
push
sub
insb
rolb
enter
lret
inc
lcall
jl,pn
mov
jle
fistpll
pop
lcall
leave
cmp
push
mov
pop
cmp
jae
jecxz
jo
push
lcall
fidivl
cltd
inc
out
fisttpl
fisubs
lcall
out
or
hlt
dec
out
loop
aam
in
jp
mov
ret
in
rolb
stc
inc
lret
inc
mov
iret
sar
push
sbb
sti
xchg
adc
xor
ror
ss
dec
fcoms
popa
int
dec
dec
push
lahf
sbb
in
cltd
push
sub
fs
ret
and
xor
mov
lea
or
push
adc
divb
or
inc
sub
test
out
inc
cmpsl
imul
aaa
outsl
movsl
xchg
inc
loopne
outsb
popa
mov
roll
mull
pop
in
sub
pop
in
fsubrs
add
xor
imul
test
inc
xchg
or
sbb
jp
and
jbe
pop
cmp
lret
push
jp
mov
ds
out
or
sbb
push
jbe
out
add
pop
femms
pop
mov
sbb
outsb
pop
cli
adc
dec
jae
out
or
xor
incb
sbb
push
or
push
cld
shlb
jo
cmpsl
mov
das
jne
cld
or
lret
cmc
push
adc
xor
dec
in
into
addl
jbe
in
dec
loope
cltd
fistpl
mov
int
mov
jle
pusha
pop
pusha
xchg
sbb
and
lcall
and
loop
rorb
mov
mov
popa
les
hlt
mov
adc
fxch
cmp
push
jge
std
lret
xchg
or
mov
dec
push
xchg
xchg
test
and
cld
xor
xchg
or
xchg
jbe
mov
inc
inc
rorl
sub
inc
cmpsl
pop
adc
cs
mov
insl
xor
leave
jno
add
mov
lods
sbb
int3
shrl
ja
inc
cmc
push
xlat
rcll
sbbl
ljmp
push
pop
stos
rep
add
pop
icebp
xchg
push
jp
jg
ret
adc
mov
in
int
mov
sbb
shll
fwait
lcall
push
scas
lea
mov
cmp
mov
dec
mov
inc
sbb
out
xchg
out
and
add
lea
push
push
subb
sbb
dec
inc
jle
sbb
sub
hlt
pop
push
mov
push
test
and
addr16
jo
in
xor
sub
popa
jno
dec
andb
xor
lods
or
out
add
or
adc
aas
test
test
inc
sahf
in
sub
cwtl
and
test
cmp
xchg
xor
jp
in
mov
pop
ffree
jle
clc
cmp
in
push
in
loop
in
pop
ret
xlat
and
in
sbb
aam
xchg
push
adc
mov
sub
cmp
movsb
in
pop
mov
cld
cmp
jbe
dec
jo
adc
mov
xor
mov
lods
je
mov
arpl
movsl
stos
mov
nop
js
jmp
add
jbe
pusha
sbb
enter
sahf
dec
and
sub
xor
mov
adc
fcomi
inc
bound
iret
lar
lcall
stc
pop
in
sub
mov
imul
fidivs
cmp
add
xor
jle
mulb
dec
push
dec
cmp
sbb
jno
jg
shlb
cmpsl
jnp
cld
mov
mov
xchg
xor
xchg
pusha
mov
xchg
mov
cltd
popa
rsqrtps
cs
mov
mov
dec
add
cmp
push
ficoms
test
out
std
in
fwait
xor
push
negl
or
xchg
test
cmc
lahf
push
pop
div
ret
push
or
xor
adcl
leave
test
inc
insb
dec
rclb
fsts
xor
xorb
test
popf
push
xchg
mov
in
sbb
pop
stos
or
xor
mov
sub
leave
and
or
adc
out
ficoml
int
xlat
pop
mov
fadds
je
out
nop
add
pusha
ficoml
mov
or
mov
push
or
and
push
cmp
and
cmpsl
or
orl
sub
les
adc
pop
xor
int
push
sub
cmp
xchg
push
lods
cltd
addr16
fsubs
sbb
movsb
cs
sarl
push
daa
pushf
out
int
repnz
mov
int
mov
push
das
push
movsl
into
stos
xor
push
jne
in
dec
pop
xlat
out
sub
sub
aam
pop
sub
pop
xor
dec
add
popa
dec
in
arpl
out
pop
les
outsb
movsl
mov
pop
mov
mov
movsl
push
inc
ret
sti
pushf
scas
dec
andb
lret
jae
jo
push
stc
inc
mov
loopne
pop
lods
inc
out
cmp
rclb
mov
xchg
xchg
mov
cmc
mov
mov
mov
and
fidivs
push
nop
xor
out
pop
cmpsb
sub
call
daa
out
sbb
fistpll
stc
adc
or
adc
sub
fwait
pop
jno
jnp
mov
mov
dec
xor
iret
cld
mov
call
add
aad
add
lahf
cmp
jg
in
test
sub
out
fidivrl
xorl
ret
jmp
cmp
sarl
ret
lahf
ljmp
pop
xchg
push
into
scas
jne
sarl
hlt
popa
cld
popa
mov
bound
cwtl
inc
fisttpll
jle
mov
xchg
sbb
aad
jne
out
scas
fwait
gs
popa
xor
push
mov
test
icebp
jbe
pop
push
jp
out
ljmp
mov
lret
shlb
repnz
mov
leave
nop
or
cmc
rorl
sbb
daa
pushl
pop
cmp
mov
push
mov
jns
jmp
mov
lcall
subb
iret
div
mov
inc
cmp
jns
jns
mov
insl
push
add
adc
xchg
repnz
aam
js
loop
add
lods
jg
push
movsl
sbb
and
mov
dec
scas
sub
xchg
pop
pop
lret
mov
jns
data16
mov
shrb
mov
dec
cmc
scas
mov
xchg
repnz
in
sti
jns
enter
xchg
sbb
scas
cmpsb
int
test
xor
push
scas
inc
outsb
adc
call
cmp
jno
pop
pushf
iret
loope
jle
mov
xor
iret
rcpps
es
repnz
lahf
mov
les
call
cmp
inc
cmp
sub
inc
cmp
lret
jns
cmp
cmpb
add
fs
jne
out
sbbl
dec
cmp
cmp
xchg
mov
cmp
sbb
dec
leave
fimuls
pop
add
fwait
mov
push
inc
dec
mov
je,pn
xchg
incl
xchg
and
mull
fsub
sbb
sti
test
mov
fcom
push
inc
imul
lret
cmpsb
lahf
mov
cmpb
sub
jmp
rcrl
in
adc
dec
and
jge
pop
inc
xorb
push
fs
push
push
mov
jo
sbb
int3
jns
inc
sbb
in
mov
movsl
and
push
or
xor
rcl
xor
push
dec
adc
pop
and
mov
orb
ret
and
inc
pop
ret
fwait
sub
cld
cmpsb
adcl
out
ljmp
mulb
pop
lret
imul
and
mov
lret
clc
stos
fisttpll
sbb
cld
xchg
fistps
xchg
outsl
insl
and
jns
fs
into
rcrl
les
pop
mov
jne
mov
cmp
setno
mov
mov
ja
loopne
rolb
cwtl
sbb
add
in
inc
cmc
rcl
imul
cwtl
mov
dec
add
stc
mov
jns
stc
push
lods
mov
popf
inc
mov
push
dec
push
aaa
dec
mov
stos
in
lahf
cmp
cs
cwtl
stc
cltd
inc
js
lock
cltd
inc
rclb
cld
clc
hlt
mov
addb
or
int
mov
dec
outsb
fbstp
inc
xchg
or
bound
jge
mov
xchg
ss
loopne
out
icebp
dec
push
arpl
jne
hlt
shrl
addr16
dec
jmp
jl
xchg
test
add
addb
add
inc
sarl
int3
mov
sbb
mov
mov
inc
push
push
add
shlb
sarl
int
stos
sub
mov
ljmp
fucomi
xor
xchg
fisubl
sbb
jb
mov
mov
dec
aas
popa
add
cmp
sub
in
xchg
test
add
je
lds
xor
jnp
pop
mov
into
rcll
xor
push
xor
push
adc
sub
mov
dec
pop
inc
mov
iret
in
xchg
mov
repz
jb
mov
loopne
dec
xchg
bound
lods
arpl
xchg
fs
add
push
pop
mov
call
into
jae
lahf
inc
inc
dec
subb
mov
loop
mov
sbb
loop
pushf
fcmovne
hlt
cltd
popa
movsb
mov
and
jle
inc
adc
cld
outsb
cli
mov
rol
les
jno
daa
pusha
icebp
es
mov
xchg
sub
cmp
push
push
add
lahf
push
mov
loope
sbb
pop
nop
test
jnp
adc
jno
lahf
push
mov
and
test
fistl
cmc
push
popa
imul
cmp
jmp
inc
pop
insl
inc
stos
scas
push
scas
and
dec
aam
es
repnz
hlt
pop
daa
enter
enter
mov
pop
shll
lahf
in
mov
jb
sbb
mov
lods
test
xor
out
cmp
out
shrl
insb
dec
pop
fisttpl
jg
loopne
leave
in
sbb
jmp
stc
add
mov
push
add
xchg
in
out
ret
fwait
aaa
cmp
or
sbbl
mov
xchg
dec
js
xchg
pop
cmc
inc
jae
push
mov
push
dec
add
repnz
hlt
adc
lock
mov
mov
and
test
sbb
pop
das
jbe
add
fimull
push
scas
aaa
push
ret
in
out
stos
in
add
pop
jl
repnz
insl
sahf
mov
aaa
je
add
dec
push
aaa
sbb
pop
stos
sub
scas
cmp
cmp
je
add
and
das
jmp
loopne
in
mov
dec
inc
mov
sub
sahf
push
xor
mov
fisubl
cmpsb
fistl
jns
shlb
aad
pop
leave
icebp
mov
push
sbb
dec
jbe
push
es
adc
fisttps
jbe
or
shlb
lods
pop
shlb
nop
mov
clc
out
fcompl
ret
mov
cmp
sbb
pop
pusha
shr
daa
push
pushf
mov
out
in
cs
stos
push
icebp
dec
cmp
pop
mov
jbe
mov
popf
lds
sbb
jno
pop
pop
aam
sarl
stc
and
test
int
jecxz
push
mov
cmp
icebp
sub
gs
daa
ss
test
mov
push
flds
stos
fidivs
pop
out
mov
xor
ds
fists
inc
mov
enter
test
lahf
inc
popf
mov
xor
test
ja
or
dec
punpcklwd
push
bound
int
fiadds
gs
cmp
gs
dec
aad
clc
test
es
or
outsl
sub
jp
dec
testb
mov
outsb
fsubrp
ja
push
jge
adc
insl
int3
cli
mov
jle
lods
leave
ss
nop
cmc
xor
mov
adc
inc
cmp
xchg
lcall
stos
arpl
add
mov
in
data16
adc
stos
adc
dec
movsl
shlb
sbb
xor
push
push
jae
in
aaa
push
js
pushf
lods
leave
mov
mov
stos
imul
std
lea
dec
pop
jg
stos
add
jle
or
push
jbe
cmpsb
xchg
pusha
cmp
test
xor
sbb
rorl
pop
jae
mov
into
mov
mov
icebp
push
stc
mov
rorl
out
aas
sti
push
or
mov
jb
sti
or
push
mov
test
add
in
pop
clc
dec
sti
mov
sbb
dec
mov
decb
mov
lea
fld
mov
int3
sarb
sbbl
push
xor
xor
outsb
jl
fs
lahf
xor
cmp
dec
pop
cmpl
pop
dec
mov
ljmp
pop
js
and
sub
in
out
inc
lcall
int3
jl
sub
mov
addb
aaa
fsub
dec
stos
inc
mov
loopne
ljmp
and
fwait
jno
nop
cwtl
or
enter
cld
add
cmp
loopne
xchg
pop
jno
das
dec
xchg
add
jle
cmp
pop
outsb
int
xor
mov
in
pop
outsb
sbbl
jns
je
mov
xchg
andl
pop
push
ds
lret
pop
mov
aam
in
lret
or
mov
add
mov
cmpsl
aam
leave
adc
int3
jl
inc
sbb
pop
les
xchg
mov
and
xor
or
lods
pop
pushf
xchg
xor
int3
loop
mov
ds
jp
outsb
shlb
test
push
out
andb
pop
sbb
push
sub
orb
inc
imul
pop
adc
nop
adc
sub
sbb
mov
jns
cmp
pop
in
adc
ljmp
outsb
mov
sti
outsl
icebp
rcl
icebp
movsl
in
dec
stc
or
mov
mov
loopne
dec
call
loope
aad
mov
cmpsl
cmp
mov
cmp
repz
or
sbb
xor
push
push
xchg
stc
aad
push
dec
fmulp
add
aaa
fisttpl
incl
stos
rcr
jp
mov
cmp
popf
jae
gs
std
sbb
xlat
adc
repz
fists
xchg
in
pop
in
xchg
clc
mov
scas
stc
mov
out
jp
sbb
mov
inc
xor
mov
lods
fidivl
xor
addb
repnz
push
jle
out
pusha
push
sbb
in
xlat
jmp
roll
sub
jecxz
sbb
mov
icebp
leave
dec
xor
push
cmp
push
int3
mov
scas
or
push
sbb
sbb
test
cmp
das
mov
lods
mov
dec
jne
cmp
or
test
out
xor
stc
loop
dec
ret
cmp
lea
lods
xchg
loopne
jae
xchg
inc
jns
or
xchg
dec
inc
int3
gs
fisttpl
flds
mov
xchg
lods
pop
or
push
dec
dec
fs
ds
loop
mov
sahf
mov
iret
cmp
xchg
rorl
and
cmp
push
std
les
adc
inc
jae
mov
xor
repz
adc
daa
fildll
arpl
loopne
inc
and
imul
push
and
push
pop
bound
xorl
sbb
mov
bound
mov
jns
js
jb
xorl
in
jl
mov
dec
add
mov
int
cmpsl
sub
add
stos
and
push
icebp
cmc
push
pushf
fldz
pop
push
imul
xlat
sti
xor
fadds
sarb
mov
or
jno
and
xor
dec
push
push
push
cvtpi2ps
outsb
arpl
adc
mov
push
xchg
mov
cmp
pop
shl
aam
sbb
into
dec
aam
nop
rorl
mov
mov
fwait
mov
xchg
xorb
xor
xor
xor
mov
or
mov
pop
bnd
cmp
mov
sub
cmc
or
test
adc
push
jns
cmp
cmc
es
mov
cmp
mov
cmp
push
shrl
outsb
mov
insl
xlat
leave
roll
xchg
mov
cmp
lock
ja
movl
sbb
insl
imul
sub
in
lods
stc
leave
cwtl
add
out
subl
adc
and
adc
lret
pop
push
leave
cmp
mov
das
jo
jo
dec
in
hlt
mov
inc
scas
loope
rcrl
adc
rcr
sub
or
fmull
out
ja
es
inc
insb
or
call
push
mov
or
mov
andb
aam
lods
lret
hlt
push
lret
sahf
pop
notl
lea
mov
mov
sar
ror
aas
ret
cli
adc
movsb
cs
stc
ljmp
je
adc
mov
es
cmp
icebp
cltd
aas
inc
jg
jno
loopne
push
or
sub
dec
lret
xlat
arpl
mov
stos
cmp
stc
push
or
nop
xchg
fnstcw
adc
adc
out
aas
aam
inc
xchg
push
cmpb
dec
sub
ss
imul
rcll
fwait
mov
scas
into
push
cli
ficompl
mov
jno
push
cmp
inc
or
add
in
lods
mov
test
fistps
push
xor
sub
je
ja
mov
insb
loop
mov
push
inc
mov
bound
and
and
cwtl
push
add
dec
xchg
loop
pop
mov
rol
movsb
jb
ret
mov
les
xchg
sub
inc
adc
sbb
aad
fxch
mov
xchg
shll
subb
outsb
mov
pop
sbb
adc
out
lea
loope
test
inc
insb
xchg
mov
ret
push
xchg
shrl
adc
sbb
pop
pusha
into
pop
jle
scas
pop
add
sub
repz
les
mov
inc
mov
adc
hlt
or
pop
out
shll
inc
sti
sbb
add
shrb
xchg
push
push
jl
push
cmc
and
pop
out
popf
mov
xchg
push
insl
sbb
scas
popa
arpl
pop
fbld
jmp
iret
add
jecxz
flds
mov
mov
rcrl
push
sbb
outsb
enter
out
lock
pop
xor
pop
out
mov
int3
iret
lock
into
xor
jae
adcl
jge
sbb
into
dec
mov
pop
cld
mov
dec
mov
pushf
cmpl
sub
sbb
je
arpl
push
cmp
fsubr
iret
inc
out
fcoml
and
in
sub
and
mov
fdivrl
cmp
ret
adc
or
mov
popa
popa
ret
hlt
pop
out
mov
subb
xchg
cmc
xchg
lods
cmc
jnp
dec
jl
fistps
je
cmc
pushf
cmpsb
nop
test
xchg
adc
lods
push
or
dec
aad
cmpsl
insb
inc
adc
add
ja
outsb
ljmp
iret
sbb
in
loop
xchg
push
pop
pop
sti
cmp
ffree
or
adc
lret
mov
jbe
xchg
mov
cmpsl
sbb
push
mov
scas
arpl
or
in
mull
xor
fscale
loopne
sub
cmpsl
cwtl
fidivrl
enter
xchg
ja
push
rolb
int
pop
inc
loopne
add
sbb
stc
and
sub
stos
aas
push
push
and
jmp
aam
push
lds
jl,pt
test
mov
jl
mov
mov
sbb
outsb
inc
out
std
jo
cmpsb
mov
and
test
sub
inc
stos
icebp
fisttpll
or
imul
cmp
mov
imul
out
push
mov
andl
xchg
iret
sub
std
or
sbb
inc
aas
rcrb
push
pop
mov
jb
iret
inc
xor
cmpb
aam
outsl
test
jle
call
inc
add
fcmovnb
mov
rol
jecxz
cmp
outsb
cmp
scas
insl
add
mov
mov
sbb
leave
sub
sbb
scas
es
out
notl
cltd
aam
pop
cltd
pop
loop
xor
mov
jmp
dec
jne
xchg
out
mov
sbb
shll
inc
sub
xchg
mov
das
jmp
mov
stc
mov
fidivrl
jnp
xchg
arpl
mov
ficomps
add
xor
pop
adc
mov
push
add
push
aam
sub
or
outsb
scas
gs
inc
adc
stos
cs
mov
pop
add
and
test
push
rorb
lock
inc
stos
dec
movsl
je
scas
add
rcl
cmp
fisttpl
scas
and
pusha
mov
jae
jae
inc
icebp
jno
mov
out
lcall
aas
and
push
mov
sbb
mov
pop
sub
sub
cld
lods
adc
add
and
or
jge
dec
sbb
inc
push
ljmp
fmulp
sarb
jbe
je
push
push
scas
pusha
cmc
frstor
and
ja
xchg
xor
repz
mov
push
ds
fnstcw
fnstsw
inc
aas
xor
lea
xlat
in
mov
xor
mov
sbb
jno
mov
loope
cmp
mov
int
pop
fwait
jo
mov
stos
movsl
outsl
jae
cli
xchg
test
xor
xor
je
iret
imul
cmp
pop
jecxz
out
push
mov
in
aaa
xor
add
mov
xchg
add
mov
mov
lret
and
mov
ljmp
xor
cmp
test
lahf
push
dec
adc
lret
loopne
mov
inc
mov
sbb
insb
mov
xchg
pop
sub
inc
add
cmp
or
mov
push
andb
cmp
out
pop
mov
dec
inc
pop
popa
andl
jne
into
sbb
jae
packssdw
mov
jbe
repnz
pop
fcmovne
or
jmp
popa
pop
push
nop
dec
out
push
rclb
mov
pop
pop
cwtl
in
and
movsb
adc
or
ficompl
iret
push
addb
loope
fldt
mov
aaa
stos
cmpsl
rcr
mov
loopne
popa
insl
fcmovnu
sub
in
mov
fnstenv
pop
or
xchg
fldenv
out
sub
mov
sub
in
push
bound
dec
rorl
mov
adc
lock
mov
repnz
jp
lods
xor
std
inc
push
add
fdivrs
sub
inc
pop
mov
or
cmp
dec
test
cmc
jecxz
and
push
lods
mov
push
bound
stos
sarl
push
jae
push
imul
inc
mov
xor
xor
sub
in
dec
icebp
mov
pop
scas
xchg
loop
idivl
xor
xchg
dec
adc
lds
jecxz
data16
mov
dec
les
inc
push
outsb
add
je
lods
rol
sahf
aas
out
clc
pop
insb
test
loopne
push
push
push
jnp
cltd
mov
mov
repnz
or
pop
fidivs
and
xor
mov
xor
xchg
cmpsl
call
popa
fimuls
cmpsb
sub
jae
lock
mov
test
mov
or
inc
jp
fstl
xchg
ja
out
xor
mov
nop
sarb
idiv
pop
xor
in
sbb
fcoms
mov
adc
incb
pop
add
mov
lods
adc
lock
mov
repnz
pop
jp
stos
test
fdivs
rolb
add
mov
add
imul
std
cs
rcll
mov
test
mov
add
jmp
ror
xor
mov
xchg
popf
sbb
mov
and
push
jmp
shll
popf
popa
sub
test
test
push
out
testb
cmp
rcrl
sti
inc
shlb
outsb
mov
decl
jecxz
and
jge
add
ret
adc
mov
mov
gs
dec
adc
dec
jo
aaa
lret
lds
inc
shlb
sti
sbb
xchg
push
jb
add
push
sbb
lret
mov
xchg
pop
sub
stos
mov
int
xlat
mov
jne
in
mov
ds
cltd
mov
jp
add
and
sub
mov
or
data16
jo
fdivs
mov
dec
mov
icebp
js
inc
mov
movsl
lods
icebp
fstps
rorl
popf
dec
inc
dec
test
cmp
sbb
int3
roll
cmp
sub
ja
and
xchg
adc
cmp
popa
push
les
push
adc
mov
mov
dec
or
ss
jae
jae
inc
inc
jp
aam
notl
xor
mov
les
pop
jno
jne
outsw
pop
fwait
imul
xor
out
push
pop
aad
fisttpl
out
orl
push
test
sub
fildl
mov
push
aam
pop
aaa
ljmp
dec
lods
dec
int
rol
cmc
test
outsb
mov
je
gs
cmp
shlb
shlb
inc
pusha
pop
adc
mov
aad
fstpt
jo
mov
hlt
and
xchg
cmp
cwtl
mov
cs
mov
pop
clc
adc
repnz
sub
cli
inc
jl
ss
jne
out
mov
gs
inc
cmp
pop
mov
leave
ror
dec
xchg
mov
push
mov
xor
mov
xchg
pop
mov
cmpsl
test
test
adc
pop
cld
testl
mov
sub
fdiv
sbb
sub
aam
inc
push
jmp
lock
dec
aad
or
ficompl
xchg
les
push
lret
daa
xchg
test
push
mov
and
fcmovnu
loope
loope
pop
call
das
cwtl
repnz
aas
es
mov
sub
jo
jge
fwait
sub
cmp
sbb
test
push
in
cmp
dec
pop
or
hlt
iret
pop
xlat
push
push
rcl
jmp
hlt
pop
and
mov
inc
loope
pop
xor
pop
in
ss
or
clc
dec
xlat
xor
jp
xor
mov
mov
pop
sub
push
test
roll
test
cmp
xor
rcl
lods
lds
jp
dec
mov
jnp
mov
push
mov
push
sub
es
ret
add
repnz
stc
sub
icebp
cltd
jecxz
and
add
cmc
cmp
fisubrs
mov
cmpsl
stc
stos
js
aaa
movsb
pop
sbb
mov
push
sub
inc
xchg
les
dec
mov
mov
xchg
and
push
push
dec
dec
dec
adc
cmpsl
pop
push
cwtl
xchg
repnz
jae
push
xor
cmp
mov
xchg
movsb
call
push
ds
into
pop
add
push
ret
inc
xor
test
js
shrb
sub
pushf
add
loopne
loope
scas
adcb
mov
xor
ret
fxch
push
loope
lret
in
fsubl
js
mov
icebp
pop
fbld
imul
cmp
sub
cmp
add
push
into
jmp
push
adc
dec
ror
stos
loopne
cmc
int3
inc
mov
xchg
std
fwait
pop
pop
repnz
addr16
adc
cmc
push
adcl
mov
outsl
xchg
popl
rorl
fildl
mov
fidivs
imul
pop
xor
xor
xchg
cmp
out
and
xlat
cmp
dec
out
mov
nop
popf
iret
jno
outsb
pop
mov
ret
add
cmp
loope
mov
dec
xchg
xlat
mov
mov
lahf
jb
inc
pop
sub
insb
jae
mov
jge
mov
ror
and
add
outsl
push
mov
mov
jns
dec
push
add
rcrb
ds
xchg
fistpl
daa
xor
mov
into
push
or
add
push
xor
xor
adc
aas
mov
mov
cmp
dec
fmuls
and
popf
jmp
jne
roll
cmp
ret
gs
les
sbbb
adc
lcall
aaa
xor
iret
fldcw
pop
mov
sub
imul
xor
aas
sub
imul
sbb
xchg
stos
inc
push
mov
scas
sub
mov
out
lahf
pop
test
test
rclb
lea
clc
cmp
lret
push
sub
inc
test
xchg
clc
jae
call
in
mov
mov
mov
pop
fs
fldenv
jge
or
outsb
call
add
shrl
dec
bound
pop
rcrb
sub
push
cmc
stc
subb
push
xchg
jne,pn
pushf
out
pop
out
adc
mov
fcomip
fidivs
push
sbb
movsl
inc
cwtl
mov
and
pop
sbb
push
js
bound
mov
mov
pop
cmp
repz
push
mov
jp
ror
es
xchg
in
stos
repnz
jl
sub
add
and
xor
push
insb
jae
and
out
fiadds
dec
stc
ljmp
aaa
jmp
mov
pop
out
pop
jne
cmpsl
aam
out
rcll
jge
push
aaa
add
cld
lds
data16
jb
sub
adc
pop
push
adc
or
cltd
rcll
mov
mov
test
mov
lods
pop
loop
pushf
arpl
jmp
and
and
in
mov
adc
push
jg
in
fdivrs
dec
add
inc
pop
mov
or
loopne
xchg
push
imul
int
pusha
or
rclb
or
push
in
jg
adc
xor
cmpsb
gs
and
std
popf
adc
xchg
cmp
icebp
jle
andb
xchg
jg
insl
or
mov
adc
out
aad
mov
outsl
mov
pop
jns
fidivrl
ficoms
pop
fdivl
push
aam
scas
shr
mov
sbb
jg
sti
mov
aam
inc
std
lret
scas
daa
inc
shll
pop
outsl
les
ret
lods
repnz
cmpsb
fistps
imul
fxch
daa
mov
cld
movsb
out
dec
ljmp
sub
or
outsl
fstps
push
mov
cmp
mov
leave
adc
jo
push
fnstenv
shlb
push
fadd
addl
jnp
hlt
mov
lods
daa
add
outsl
push
pop
pop
insl
jnp
into
lret
fdivs
cmp
xor
xchg
add
loop
je
imul
jmp
call
stos
into
xchg
aam
mov
inc
inc
sarb
sbbl
je
int3
lret
pop
fwait
rcr
dec
sub
add
es
push
fmul
sarb
cmp
fpatan
imull
cwtl
jae
fiaddl
in
mov
popf
fsubrp
movsb
jbe
cmp
jb
mov
mov
mov
stos
dec
push
mov
insb
dec
shl
mov
sub
inc
mov
cmp
aam
imul
vcvtsi2sd
icebp
scas
pop
sub
in
hlt
sbb
gs
rcr
fistps
push
inc
pop
insl
sbb
xor
inc
pushf
icebp
clc
push
pop
outsl
sti
jp
jns
icebp
and
mov
cmpsb
xor
js
mov
pop
push
cmp
xchg
lea
stc
cs
fs
arpl
sti
xchg
xorb
sbb
test
jle
ret
push
jb
lea
das
in
enter
sub
out
lock
sti
jg
adc
andl
push
xchg
pusha
sbb
lahf
adc
aas
mov
push
jnp
pop
ret
loope
scas
jle
daa
enter
arpl
xchg
xchg
aas
cmpb
push
or
ljmp
inc
adc
sub
gs
lock
clc
adc
jmp
jb
mov
sti
adc
lea
cmp
and
pop
adc
roll
outsb
cltd
pusha
test
jle
scas
andb
cmp
repz
push
aam
inc
push
sti
aas
fsts
lcall
sbb
data16
push
dec
ss
jg
cmpb
sub
push
mov
test
adc
push
mov
adc
scas
ret
aad
jecxz
mov
xor
xor
adc
mov
les
test
pop
jle
sbb
inc
pusha
cmpsb
sbb
pop
xchg
stos
mov
jmp
aas
fwait
loopne
outsl
mov
testb
push
out
stc
dec
cmp
movsb
pop
out
cmc
xchg
jge
gs
inc
in
sbb
int3
cmp
stc
jbe
xchg
popf
loopne
pusha
mov
adc
xor
xchg
adc
mov
cmp
out
or
xor
inc
jg
notl
add
adc
inc
add
jbe
out
mov
psubq
loopne
call
pop
cmp
jge
mov
push
in
fldl
inc
mov
shlb
notb
cmp
xor
aaa
ret
cmpsl
cmp
rcrl
xlat
outsb
mov
mov
push
ret
not
cmp
addr16
es
pop
bound
jl
sub
push
in
lods
xchg
add
out
push
rcll
dec
add
into
cmp
pop
jge
cmc
or
movsl
mov
cld
and
xor
mov
adc
enter
pop
cmp
mov
leave
mov
push
scas
xchg
add
jp
pop
push
mov
int3
xchg
ret
repz
fidivrs
pusha
mov
out
dec
icebp
or
sarl
and
inc
and
jle
push
repnz
push
mov
mov
movsb
mov
hlt
jge
fsubrl
mov
test
aad
push
sbb
dec
enter
pop
mov
mov
pushf
arpl
xor
pop
mov
inc
cmp
popa
add
inc
xchg
lahf
cmpsb
in
mov
call
pop
dec
pop
shrl
movsl
xorb
sbb
loopne
sub
lcall
shlb
incb
fwait
mov
test
cli
rcll
in
bound
jmp
mov
fistpl
in
cmp
bound
int3
aam
int
lds
shl
call
push
scas
hlt
push
jb
fdivp
dec
or
stc
sub
lods
mov
imull
rorl
fs
bound
movsl
inc
mov
xor
pop
in
lea
insb
mul
incb
jl
fdiv
cmpsb
outsb
bound
lea
jp
and
cmpb
mov
rcrl
jp
out
add
out
cs
inc
cmp
cmp
xchg
jno
xchg
sti
mov
sbb
inc
mov
stos
xchg
push
or
je
inc
insl
inc
xchg
xchg
shlb
push
jmp
test
sub
sub
push
pop
push
clc
adc
and
stos
insb
pop
inc
mov
or
jmp
push
shrb
jecxz
mov
out
cmp
dec
std
mov
out
pop
imul
vpandd
insb
rol
sarl
popf
inc
imul
arpl
call
lds
in
call
lret
addb
dec
or
push
sahf
jne
out
adc
ret
mov
leave
sub
jns
cld
fadd
dec
test
ficoml
inc
paddsw
pop
aas
push
inc
xchg
jp
add
push
leave
push
add
jle
jmp
mov
jecxz
cmp
lahf
in
fdivl
mov
mov
or
call
stc
push
sbb
inc
xor
jnp
rcr
fsubp
ljmp
push
ss
or
mov
push
fcmovnu
fdivp
push
mov
cltd
mov
mov
pop
xor
fwait
cs
and
je
fdivs
mov
add
mov
lods
test
inc
sub
push
or
gs
fs
xchg
jns
hlt
vsubsd
mov
xor
fbld
dec
testl
mov
pop
js
push
sub
mov
cmp
adc
sub
xchg
incb
pop
scas
lahf
fdivrl
andl
aad
pusha
pushf
lods
imul
xchg
mov
sub
add
stc
int3
test
dec
std
sub
icebp
ss
stos
and
sbb
and
mov
cld
jae
pop
and
int3
scas
clc
push
sbb
rcr
andl
xor
sub
sub
in
adc
mov
and
rcl
addr16
aam
lret
dec
fs
jb
je
mov
sbb
mull
cmp
adc
xchg
xor
add
add
imul
stc
sub
sbb
fildl
ljmp
mov
scas
mov
and
or
pop
mov
stos
xchg
adc
push
jns
jne
hlt
push
inc
mov
and
repnz
mov
jo
ret
scas
pushf
mov
ljmp
inc
pop
outsb
and
jmp
push
sbb
mov
ret
call
insb
lret
lods
dec
cmp
iret
stc
push
sub
adc
inc
stos
pop
inc
cmp
dec
xor
inc
dec
insl
ret
int3
mov
and
popa
dec
inc
in
or
out
and
pop
pop
mov
dec
loop
arpl
sub
xchg
xlat
movsl
out
int
or
and
ds
fidivl
ret
adc
dec
dec
and
gs
ret
nop
mov
aaa
mov
mov
or
push
pusha
ss
jne
dec
les
enter
or
int
fnstenv
cld
and
int
sbb
xor
in
ficomps
cli
movsb
mul
push
cmp
out
lcall
test
lods
add
fsubl
pop
sub
lcall
sti
dec
pop
xchg
jns
inc
lds
jb
jl
aaa
push
push
outsb
or
popa
in
into
lahf
mov
add
call
std
cmpsb
test
jns
imul
hlt
adc
add
pop
sbb
sbb
xchg
mov
and
ja,pn
dec
lock
jecxz
imul
jns
mov
cmp
jbe
sub
pop
xchg
into
pop
and
xor
push
jbe
mov
hlt
in
hlt
push
mov
int
enter
mov
fists
sbb
test
xlat
xchg
dec
loopne
decb
cmp
pop
dec
in
xchg
adc
es
subb
fcmove
icebp
ds
mov
loop,pt
dec
mov
outsl
shlb
xlat
jo
jbe
push
out
in
or
je
imul
aas
fisubl
push
jmp
xchg
leave
lret
xor
dec
jb
popf
gs
mov
rcr
cmc
fdivrs
sbb
int3
ret
push
xchg
xchg
sub
inc
fiaddl
ds
mov
xchg
mov
inc
push
andl
in
fs
jg
out
inc
fmul
outsl
das
decb
pop
add
ret
adc
mov
orl
dec
popa
add
jns
jbe
ss
pop
xor
rol
enter
or
out
xor
push
stos
lahf
into
cmp
xor
fidivl
fists
adc
push
cmp
cs
testl
into
adc
pop
les
sub
cmc
adc
test
sub
ret
jg
cs
xchg
into
out
pop
dec
pop
aam
test
adc
xor
das
fucom
aaa
xchg
push
arpl
pusha
pushf
iret
arpl
ljmp
adc
and
mov
jecxz
notl
test
push
inc
cmp
hlt
and
movsb
jl
sbb
pop
popf
mov
int
inc
sarb
iret
dec
in
idivb
pop
dec
fwait
cmpsb
je
mov
enter
ficompl
loop
std
jl
mov
sub
xchg
les
mov
cwtl
jmp
mov
add
in
sub
fadds
push
mov
add
into
jge
lcall
cli
jne
fnstsw
mov
out
and
repz
aaa
addr16
fwait
cmpsl
mov
outsb
pusha
bound
nop
icebp
popf
jne
jns
mov
das
push
icebp
pushf
test
leave
pop
dec
test
hlt
dec
push
rclb
mov
xchg
repz
mov
das
mov
push
bound
jle
movsb
ds
push
dec
adc
sub
fimuls
pusha
fldl
and
pop
inc
xchg
int3
nop
hlt
sarl
scas
jg
push
stos
roll
testb
cmp
cmp
push
rorl
test
jg
cmp
cwtl
mov
cmp
ss
int3
cld
inc
arpl
pop
lret
adc
cmp
les
cmpsl
xchg
ss
popf
and
das
sub
out
outsl
xor
xchg
in
mov
xchg
mov
dec
daa
rcrl
js
xchg
adc
pop
mov
imulb
mov
mov
stc
inc
sbb
ficompl
xchg
jmp
lret
mov
sahf
es
loop
ret
repz
lock
in
pop
fwait
shlb
insl
sub
cmpsb
sbb
mov
das
das
hlt
out
fmul
adc
dec
ficompl
mov
dec
stc
mov
push
sar
call
popa
mov
popa
adc
cmp
in
adc
mov
mov
es
in
mov
and
ret
insl
sub
pusha
in
and
scas
pusha
or
pop
and
or
in
andb
sbb
inc
xchg
adc
or
aam
pushf
xchg
mov
in
mov
in
sub
mov
jmp
lds
pop
and
cs
cmc
pop
mov
cmpsb
mov
mov
adc
insl
or
cmp
aaa
mov
pop
cmpsl
pop
test
je
inc
push
lcall
dec
insb
fcoml
test
rcr
cmp
nop
xchg
inc
jl
xor
scas
rclb
shr
rcrl
inc
bound
iret
div
fsub
adc
les
dec
inc
and
mov
pop
sub
fisubs
and
test
lock
cmp
mov
stos
jb
popa
mov
jp
inc
cmp
scas
xor
mov
xchg
je
mov
lods
aaa
lret
loopne
and
inc
das
pop
pop
xchg
cmp
shlb
insb
int
arpl
out
fwait
adc
test
icebp
and
sbb
stc
lret
stos
add
cmp
push
pop
pop
add
pop
addb
stos
mov
and
movsb
gs
xor
clc
pop
divl
in
cmp
lea
icebp
loopne
push
test
addr16
mov
outsb
test
movntps
insb
xbegin
sub
das
stos
pop
jg
clc
push
movsl
cltd
and
mov
orb
adc
jmp
dec
clc
push
test
push
xlat
inc
pushf
sbb
ficompl
pop
cmp
mov
cmp
cmp
push
xor
dec
es
test
out
ror
fimull
dec
mov
sahf
ss
cli
in
dec
insl
xor
mov
popa
divb
jae
les
testb
out
push
sub
insl
fbstp
out
movups
loop
or
fisubrl
xor
cwtl
ret
data16
aas
repnz
nop
xor
ss
out
sbb
scas
add
out
in
rcrb
dec
push
dec
jb
loopne
clc
inc
jmp
nop
daa
jno
mov
test
dec
and
inc
jl
test
cmp
push
test
enter
cmp
mov
sub
and
aad
inc
sbb
fimull
test
or
jnp
cltd
hlt
cmp
dec
mov
test
sub
mov
or
add
ss
and
repnz
out
mov
das
xorl
in
xchg
and
into
mov
add
lds
sbb
xchg
xor
cwtl
sbb
push
ret
mov
movsb
lods
enter
pop
rol
pop
adc
push
dec
sahf
sbb
repz
data16
sbb
leave
test
xlat
pop
jns
test
xchg
push
inc
lods
adc
mov
cmp
or
cmp
sub
cmp
fmuls
adc
push
mov
jle
pop
lret
add
fisubl
xchg
insl
or
shl
pop
test
lods
inc
rolb
loop
adcb
gs
lods
or
adc
js
jnp
mov
mov
je
cwtl
repnz
int
imul
cmp
std
xor
dec
xchg
jb
gs
in
test
or
push
xor
sub
sbb
lahf
push
fisttpl
in
push
movsb
sbb
rcl
loop
mov
mov
movsb
aas
addb
xor
out
outsb
popf
int3
or
mov
mov
mov
fnstsw
icebp
inc
and
inc
cltd
jns
negb
rol
or
aam
mov
int3
mov
mov
test
imulb
and
fisttpll
pop
mov
add
inc
aam
ss
adc
push
inc
add
test
sub
pop
popa
jmp
lods
mov
lret
daa
sbb
ds
cli
xchg
jmp
xchg
inc
ds
test
cmpsb
sbb
stos
jle
jns
jb
jno
mov
movsl
mov
mov
repnz
movsb
sbb
dec
scas
gs
jbe
loop
push
pop
mov
inc
aas
ret
popa
jl
mov
sub
lahf
adc
fisttpl
dec
scas
outsb
inc
into
xlat
lods
aad
inc
ljmp
add
orl
dec
mov
cmovnp
sub
enter
mov
xor
mov
pop
push
dec
mov
imul
in
xor
sbb
xor
pop
test
jnp
aam
or
je
mov
int3
sub
or
dec
mov
icebp
rorl
nop
sbb
imul
xor
ljmp
sub
pop
cmp
adc
adc
jns
notb
aam
insb
adc
std
out
xor
xchg
lahf
fs
inc
inc
lcall
mov
movsl
idivb
addr16
out
lcall
test
enter
and
or
das
mov
scas
sbb
aaa
pop
mov
in
cmp
ret
sub
inc
jle
jne
aas
pop
adcb
pop
js
sahf
lret
aaa
dec
jne
int
xor
push
shrl
into
dec
out
mov
popa
shl
sub
push
dec
popa
sbb
xchg
shrb
pop
mov
inc
pushf
cltd
in
jae
cs
pusha
enter
push
imul
mov
pop
repnz
or
xchg
mov
ret
fmull
movsb
xor
add
loopne
mov
imul
cmc
xor
outsl
pop
and
popf
imul
cmp
enter
mull
sub
andb
push
xor
or
dec
adc
and
fadds
adcb
or
lods
in
pusha
pop
es
insb
imul
mov
inc
cmp
or
dec
into
xchg
sub
aaa
add
mov
data16
xchg
int3
pop
ja
js
mov
xor
out
jle
mov
inc
mov
and
and
xor
ret
out
aad
movsb
dec
mov
cmp
jns
and
cmp
pop
jns
mov
cmc
xchg
cmpl
insb
loope
cmp
repz
push
cmp
cltd
jbe
adc
add
test
mov
adc
je
fimull
pusha
fcoms
sbb
lret
pop
pop
dec
jo
jns
hlt
in
imul
lock
dec
or
xor
lcall
xor
push
fdivs
jno
int3
inc
mov
cltd
pop
cwtl
rolb
mull
mov
ret
lods
sub
cltd
out
inc
sub
pop
je
jb
ljmp
sbb
mov
imul
jns
stc
xor
outsb
imul
test
adc
cmc
cs
adc
mov
dec
and
hlt
pop
lds
loop
scas
and
ljmp
movsb
das
push
xor
fisttpll
push
mov
shl
cli
add
sbb
inc
test
xchg
add
jnp
push
andl
stos
mov
ja
mov
or
xor
mov
ds
sub
lret
call
loop
or
sub
clc
and
pop
push
enter
mov
and
out
aam
dec
dec
and
imul
cmp
inc
sub
inc
in
jb
pop
xchg
outsl
sub
jae
xor
cld
fisttps
cmpsb
dec
and
sbb
jle
lret
xor
in
sub
xchg
pop
jmp
jno
inc
xor
sbb
xchg
lahf
add
pop
loope
jns
xor
push
aas
pop
add
int3
outsb
fists
fs
les
ret
mov
gs
mov
in
or
or
jecxz
clc
loop
je
int
out
iret
sti
call
cmp
lcall
outsb
adc
jmp
inc
mov
sbb
jns
mov
int
xor
push
sub
jp
xchg
sub
jmp
jge
cmp
mov
cmp
in
adc
xchg
xchg
fs
mov
test
stos
push
negl
cmp
push
dec
cmpsl
out
dec
cmpsl
ja
or
aam
inc
test
push
cmc
push
jbe
fisubrl
hlt
out
add
rolb
es
pop
cld
xlat
stc
movsl
and
sbb
leave
lret
push
divl
clc
dec
push
mov
test
cwtl
jnp
cmpb
adc
fld
in
aad
mov
or
jl
and
push
jl
shrl
or
sbb
test
cli
sbb
shll
clc
jb
test
push
push
dec
adc
hlt
sahf
into
or
sar
push
popa
jmp
xor
fcoms
cltd
mov
adc
scas
stos
push
adc
mov
popf
pop
lock
shr
pop
mov
mov
fisubrl
scas
das
mov
and
push
jne
iret
jno
jge,pt
lret
icebp
adc
or
inc
pop
sbb
es
iret
pop
inc
rolb
cmp
mov
xor
ja
mov
mov
mov
cli
adc
cltd
test
pop
pop
xor
popa
les
int3
mov
jmp
ffree
mov
or
outsb
sbb
push
cmp
push
movsl
ret
clc
pop
cmp
cmp
add
test
mov
pop
je
call
lds
push
xor
out
lock
push
fisubrl
aas
sbb
sub
dec
push
out
call
xchg
mov
cmp
das
mov
imul
xor
test
jne
shrb
add
and
or
int3
jl
adc
dec
sbb
or
cwtl
shlb
leave
sub
loop
fsubp
int
and
jmp
popa
jmp
adc
nop
mov
pop
test
arpl
xchg
push
fwait
mov
push
cltd
mov
div
push
fstp
push
adc
je
push
nop
inc
jecxz
stc
push
insb
pop
inc
mov
push
push
sub
dec
call
inc
and
xor
enter
adc
cmp
pop
bound
xchg
stos
scas
movsb
mov
and
mov
sbb
pusha
ficoml
xchg
fwait
je
aam
mov
jae
xchg
jmp
jb
clc
fcomip
cmp
addr16
into
dec
scas
bound
add
sahf
pop
nop
sub
xor
pop
pop
lcall
loopne
or
xchg
jnp
scas
or
mov
adc
jae
sub
mov
xchg
sbb
icebp
add
movsb
rorl
ret
inc
ja
xchg
and
repz
sahf
mov
repnz
into
pop
mov
push
add
and
jns
mov
push
xor
test
mov
mov
cltd
pop
pop
out
bnd
lret
jae
xchg
cmp
leave
stc
iret
leave
push
stos
addr16
xorl
or
je
fidivs
pop
sub
lahf
popf
push
popa
add
xchg
mov
and
pop
shlb
aas
inc
sub
stos
leave
jge
sub
cmc
ljmp
out
clc
data16
inc
enter
clc
out
mov
into
sub
in
mov
push
inc
repz
mov
int3
push
shlb
lods
je
orb
les
pop
adc
add
fbld
ficomps
or
in
arpl
dec
rolb
push
mov
jp
pop
fwait
mov
faddl
ret
negb
push
fs
dec
lahf
xchg
xor
or
mov
cmp
add
loop
mov
push
pop
pop
and
movsl
mov
sbb
adc
cmp
adcl
scas
out
fnstcw
push
sbb
pop
and
stos
les
dec
sbb
xcrypt-ecb
cmpsl
movd
hlt
xchg
rcl
ds
andl
xchg
mov
inc
or
add
js
xor
lret
mov
dec
mov
or
movsl
and
ljmp
lods
aaa
movsl
daa
push
jmp
fsubrl
jns
in
je
mov
dec
orb
lcallw
sub
inc
and
pop
ja
cmp
jns
stc
mov
aad
sub
icebp
and
fldt
mov
push
pop
mov
leave
mov
cmpb
or
push
cmp
sahf
incl
xlat
fnstcw
aaa
inc
cmpsl
out
out
insb
inc
notl
enter
shlb
and
ja
insb
inc
popa
dec
xor
aam
sar
hlt
push
xchg
mov
in
aam
pop
mov
scas
iret
or
imul
lock
out
add
xor
mov
test
push
stos
sbb
in
or
jae
mov
scas
hlt
out
fcmovnbe
pop
inc
pushf
jo
sti
mov
mov
sarl
out
adc
pop
clc
mov
ret
sub
in
sub
cltd
pop
xor
push
js
mov
fsub
mov
into
or
bound
fistpll
and
add
repnz
and
mov
jno
mov
inc
and
mov
fs
push
mov
jmp
jp
add
out
shlb
aaa
xor
fildll
insb
dec
enter
xor
lock
rclb
mov
stos
xchg
das
insb
insb
adc
in
jg
xchg
dec
jecxz
cltd
or
inc
mov
sbb
mov
sbb
or
cmp
ffree
movsl
in
xor
daa
adcl
fwait
sti
mov
call
or
jmp
jmp
mov
pop
fildll
mov
fldl
addl
fwait
out
mov
push
test
daa
call
nop
or
cwtl
jg
punpcklbw
outsb
aad
ss
cmp
or
nop
mov
sub
fmuls
mov
pop
fcmovne
cld
std
and
sub
mov
or
dec
je
insl
mov
out
jle
mov
jb
jnp
ret
popf
insb
pop
mov
xchg
mov
mov
mov
mov
icebp
ss
testb
sbbb
dec
add
repz
xlat
dec
test
xchg
jmp
loopne
lock
ret
popa
lock
into
cmp
gs
push
stos
and
dec
pop
push
fdivl
ja
ret
stc
cs
fadds
out
movsl
or
sbb
cmp
shlb
dec
mov
cmp
and
jge
jle
and
push
adc
jb
pop
cmp
dec
nop
das
sub
jnp
popf
xlat
gs
mulb
fsubrl
decb
cmc
ret
mov
cltd
mov
fcmovnb
cmp
dec
daa
jne
sbb
cmp
je
outsb
add
je
xor
imul
in
ficompl
negl
mov
xor
xlat
movsl
inc
jmp
mov
push
repz
pop
test
xchg
aaa
xor
mulb
roll
dec
clc
ja
jne
filds
mov
gs
push
imul
loopne
shl
out
push
and
outsl
inc
add
and
out
push
insb
mov
pop
pusha
push
pop
push
fstl
adc
jecxz
jmp
pushf
push
pop
mov
cmp
das
and
hlt
addr16
int
fs
ss
stos
cli
out
divb
es
dec
lcall
add
cmpsb
jge
addr16
or
sub
inc
imul
mov
pushw
sar
xor
mov
mov
and
aas
js
hlt
add
dec
add
scas
xlat
dec
xor
aas
jbe
pushf
sbb
mov
aas
xchg
cmp
push
or
cli
je
pop
dec
push
mov
test
push
cmpsb
push
pop
dec
dec
mov
lock
test
in
inc
ret
mov
imull
in
clc
mov
negl
ret
jno
pop
xor
or
xchg
icebp
jmp
add
or
sbb
sub
inc
and
out
adc
stc
pushf
shrb
xchg
adc
repnz
adc
mov
fstpl
inc
and
sbb
jmp
insl
sub
or
push
sub
rcll
leave
fcoms
pop
not
jp
adc
out
dec
arpl
pop
flds
dec
arpl
pop
lods
fsubs
in
lods
push
les
fisubs
sub
mov
cmp
test
xor
push
fstpt
mov
pusha
into
fwait
out
imul
dec
fwait
jge
insb
repz
fnstcw
cld
xchg
subl
or
jo
call
xor
sbb
sub
mov
sbb
and
cmp
adc
push
push
popa
cli
insb
add
gs
inc
pop
mov
lds
cmp
aad
mov
sub
ss
sub
movsb
ljmp
test
inc
xchg
pop
fidivl
inc
mov
ficoms
jle
push
stos
fsubrl
xchg
xchg
mov
xor
movsl
lods
icebp
or
fs
pushf
adc
in
call
add
nop
rclb
pop
add
inc
cs
pop
stc
shlb
mov
ljmp
push
dec
nop
fstpt
popf
or
xor
mov
ja
movsb
adc
and
rol
dec
aas
add
cmp
xchg
sub
ss
adc
fwait
mov
inc
or
out
lock
loop
js
insb
les
cltd
pop
outsb
pop
jne
repz
nopl
jmp
or
or
call
mov
and
icebp
add
das
inc
pushf
mov
or
xor
scas
out
loope
es
aas
pop
cmp
mov
mov
xchg
jecxz
loopne
cmpsl
xchg
cmp
insl
jae
rorl
out
sbb
fstpl
mov
inc
cmpsl
jle
sarl
jno
mov
jne
shlb
lods
loopne
gs
int
push
adc
lds
add
mov
cmp
add
out
repnz
or
lret
jle
aad
mov
push
or
xchg
fidivs
mov
imul
test
push
sub
rorl
jle
cmp
hlt
je
push
and
and
or
lret
fistpll
movb
shl
sbbb
mov
pop
and
in
mov
fisubl
xor
imul
xchg
mov
scas
pop
dec
pop
mov
push
daa
into
mov
addr16
out
jl
es
jecxz
sub
sbb
dec
and
jbe
mov
dec
pop
into
dec
pushf
xchg
daa
or
lcall
notl
dec
add
mov
xor
xchg
nop
pop
sbb
popf
cmp
push
addl
xor
jo
xchg
mov
daa
test
cwtl
jo
pushf
cmp
and
shr
dec
popf
cmp
push
xchg
add
jno
imul
pusha
fnsave
and
sarl
js
mov
or
mov
mov
sarl
and
dec
sbb
jl
icebp
out
pop
and
jle
loop
aad
push
mov
xchg
flds
pop
repnz
xorb
cmpb
inc
sub
mov
push
cltd
push
pop
jbe
xchg
arpl
sti
mov
enter
or
dec
test
fs
mov
jns
in
cmp
sbb
jbe
xor
mov
js
fiaddl
dec
inc
addr16
int
addr16
pop
rorb
rclb
test
jmp
addr16
jmp
adc
int
mov
call
lret
in
and
or
lcall
mov
outsl
mov
or
movsb
or
aaa
jmp
mov
jecxz
mov
sub
decb
jb
inc
inc
push
dec
les
sub
and
lods
sahf
sub
imul
scas
stos
bound
xchg
outsl
aad
lret
sbb
daa
scas
pusha
loop
cltd
lea
punpckldq
xchg
jnp
xchg
add
mov
lcall
stc
lret
data16
test
fnstsw
pop
ss
xchg
repz
sbbl
aaa
dec
mov
int
adc
inc
loop
xchg
loope,pn
sbb
push
lcall
cmpsb
xchg
sub
xchg
mov
cltd
mov
adc
js
jnp
sub
mov
push
lahf
test
sub
jb
mov
cmp
add
mov
push
clc
sub
xorb
and
sbbb
xchg
icebp
test
enter
in
or
jg
push
pop
in
xchg
inc
add
hlt
enter
mov
dec
data16
inc
sbb
jns
fisubl
je
jne
mov
sarb
pop
mov
sbb
sub
repnz
scas
fxch
and
shrl
movsl
mov
dec
scas
nop
push
inc
cmc
aam
insl
sub
and
jmp
clc
pop
ds
jg
xlat
cmp
xor
add
and
out
and
inc
or
rcrb
lcall
cmp
and
fcomps
jmp
pop
cli
sub
sub
daa
cmp
cli
aaa
orl
push
aam
in
xchg
mov
mov
iret
cmp
ss
mov
and
xor
clc
xor
arpl
sub
xchg
in
and
leave
imul
rol
je
lcall
fldt
addl
sti
loop
lea
lret
fmul
lret
mov
mov
jge
mov
fcoms
pop
xor
xor
enter
cmp
mov
cmp
gs
lret
jns
outsb
sbb
sbb
xor
xchg
inc
rclb
xchg
movsl
fdivrs
bound
push
pop
cmc
in
mov
pop
loop
push
imul
outsl
cltd
dec
or
mov
pop
cmpb
add
and
out
pop
xchg
out
daa
pop
mov
out
pop
jo
adc
shlb
cs
ja
rep
and
cmp
test
arpl
push
subb
insb
xor
jne
dec
cs
pop
ret
inc
ret
mov
lret
mov
loop
or
js
stos
pop
sub
or
nop
rol
aam
sub
das
xchg
dec
xchg
pop
daa
test
bound
add
rcll
outsl
test
xchg
fdivr
sbb
insl
and
jno
cmpsb
xchg
in
jle
jmp
loope
jp
and
xchg
fwait
inc
mov
mov
dec
push
or
leave
dec
jle
xorl
adc
push
cmp
js
jns
aam
push
in
pop
sahf
jno
adc
cli
pushf
adcb
idivb
add
add
fildl
addr16
repnz
adc
je
test
lcall
inc
cmp
xor
lcall
add
inc
rolb
push
mov
xchg
xchg
stc
orb
sub
shrb
into
sbb
and
out
fld
subl
movsb
shrb
sbb
pop
xchg
dec
jns
movsl
jp
mov
and
shlb
jb
add
clc
js
push
or
dec
pop
iret
fld
loope
dec
mov
adc
xchg
cs
xlat
rcll
and
filds
pop
out
xchg
sbb
es
push
out
and
lds
and
and
fcoms
add
test
jae
xchg
xor
cmpxchg
aas
dec
pop
jge
jp
arpl
stos
adc
movsb
add
mov
sbb
sbb
lret
lret
pop
lahf
fwait
int3
daa
loop
ficomps
iret
test
mov
dec
add
jmp
out
jno,pt
push
sarl
push
out
in
repnz
out
add
cmp
out
scas
or
inc
mov
or
leave
cmp
incl
pusha
icebp
lret
cmp
lds
cli
inc
lahf
cld
inc
sub
dec
cmpsb
test
jp
dec
in
xor
mov
outsb
xorl
sub
das
jl
in
cmp
loopne
cmp
inc
ss
adc
mov
inc
dec
imul
fiaddl
cmpsb
movsl
in
iret
std
rcr
outsb
cmc
lods
and
jg
lahf
pop
lods
jle
or
cmp
mov
cmp
dec
inc
add
pop
incb
push
mov
cmpsl
negl
lret
lcall
mov
xchg
cmp
pop
cmpsl
fnsave
mov
sahf
cmp
cmp
stos
mov
mov
inc
xchg
shrb
lods
fcomps
nop
mov
addb
das
add
dec
push
inc
jnp
icebp
or
jo
xchg
ret
and
cmp
iret
xchg
fs
pop
pop
sti
mov
sub
jo
cmp
scas
xor
cmp
sarb
or
enter
fcomip
add
fstpt
cmc
subb
test
push
adc
stc
dec
cs
iret
leave
sub
push
loope
dec
shll
cmp
repnz
test
adc
mov
push
mov
fistpll
mov
shlb
fwait
pushf
sbb
inc
arpl
add
pop
push
cld
jmp
xchg
xor
mov
insb
sbb
subl
xor
pop
std
push
in
jne
lret
ja
call
pop
push
jne
idiv
mov
add
push
daa
mov
dec
mov
stos
fbstp
push
sbb
cmp
test
out
xor
popa
subl
cmp
dec
inc
fisubrs
insb
push
or
enter
mov
cltd
mov
mov
movsb
xchg
adc
repnz
aam
jecxz
mov
push
shrl
mov
ja
stos
sub
js
push
mov
rol
and
and
ja
push
add
mov
mov
sub
das
int
mov
arpl
sti
rorl
pop
lahf
push
rcll
mov
into
test
popf
push
mov
dec
les
push
lds
sub
cli
aaa
adc
mov
or
mov
cmp
stos
jbe
jnp
into
lds
rcrl
sahf
idivl
mov
ret
lock
add
sbb
jnp
dec
lods
aam
push
mov
adcl
and
mov
cs
leave
loop
pushf
and
test
sti
cwtl
dec
sub
jae
lcall
shlb
mov
clc
and
lods
negb
repnz
pop
mov
mov
icebp
nop
mov
xor
mov
notb
jle
xor
das
mov
jle
adc
xchg
arpl
lods
or
push
push
movsb
mov
pop
dec
dec
inc
pop
add
adc
ljmp
lahf
insb
cli
mov
jmp
inc
repnz
ret
push
mov
divb
sub
rol
loope
sbb
jle
sbb
pop
jmp
dec
arpl
mov
popl
sbb
daa
cmp
mov
mov
negb
mov
mov
data16
jle
adc
fcomps
cmp
cmp
aam
push
jle
inc
sbb
or
xchg
in
push
mov
adc
cmpsl
mov
loop
xchg
add
sub
jp
rcll
fnstsw
adc
fwait
jo
xchg
das
insl
js
push
cmpsl
call
aad
inc
pop
jb
cmp
adc
addr16
pushf
inc
xchg
xor
jne
lea
xchg
repz
ret
dec
loope
bound
xor
xor
repnz
xlat
cs
sbbb
mov
and
and
idivl
sbb
or
addr16
ja
int
aaa
movl
pop
iret
mov
fnstenv
loopne
ret
or
xor
cli
mov
cmpsl
ljmp
jbe
xchg
popf
test
popl
mull
sbb
les
pop
mov
mov
inc
xor
sti
pop
in
inc
pop
repnz
cmc
shl
or
mov
or
mov
adc
popa
scas
lock
cld
sbb
test
fidivrl
incb
loop
cs
rorl
stos
fidivrs
xchg
orl
shlb
xchg
push
data16
sahf
lret
sbb
stc
in
cmp
cmp
add
lods
and
jns
daa
mov
sbb
adc
in
sub
scas
cli
adc
test
loop
fs
xor
shll
out
sbb
fs
or
in
shlb
test
cwtl
jge
push
int
daa
cmp
les
and
cmp
push
mov
sti
jne
dec
ret
or
repnz
in
xchg
jns
push
sbb
clc
push
lods
cwtl
push
xchg
ss
mov
lds
jmp
ljmp
push
out
cmpsb
loop
ljmp
xchg
enter
pop
lods
mov
adc
lcall
das
lret
int3
mov
imul
dec
cs
push
pop
into
test
aam
fsts
in
adc
sbb
push
cld
push
rorb
lcall
dec
sub
cmc
ds
xlat
inc
cs
daa
pop
sbb
data16
lds
cmp
sbb
and
call
xor
mov
mov
jle
pop
aad
cld
data16
pushf
loope
cs
pop
cmp
es
or
clc
sahf
cmpb
xchg
pop
cmp
ficoml
lods
mov
loope
jmp
lret
cmpsb
test
xchg
adc
sti
mov
or
fcmovbe
pop
imul
mov
xchg
fcmovbe
mov
stos
jge
pop
mov
mov
aas
lcall
les
in
push
xchg
lea
loope
and
mov
inc
mov
add
push
push
lret
daa
dec
mov
scas
pop
jmp
insl
add
jge
mov
xor
test
mov
xor
test
cmpsb
cmp
sahf
adc
mov
sbb
xchg
loope
jmp
or
mov
aad
inc
xor
jg
mov
fcomps
adc
fwait
or
mov
and
in
and
aam
cmpsb
sub
add
push
xor
fldl
dec
popf
xor
jne
test
push
lds
dec
repz
xor
clc
xchg
fisubrl
lahf
lods
iret
jb
and
or
fcomi
sub
in
xlat
xchg
lea
fimull
jnp
add
in
cmpb
cmpsb
pop
and
and
rorb
scas
enter
ret
inc
sbb
mov
cmp
out
ficoml
into
cli
imul
pusha
icebp
pop
mov
mull
xchg
scas
loopne
lret
mov
adc
loop
dec
les
mov
mov
inc
adc
xor
fmull
pop
shlb
dec
lret
xchg
leave
shlb
mov
stos
push
cmp
jmp
test
ljmp
cltd
cmpb
lcall
adc
xor
adc
push
stos
repnz
and
inc
adc
mov
mov
jle
inc
and
rorl
mov
cmpsb
testb
jecxz
push
movsl
jge
out
sub
in
and
mov
lahf
adc
repnz
pop
sti
add
cmp
jle
popf
mov
xor
xor
pop
fstpt
push
fildll
mov
aaa
sbb
fsts
mov
in
sub
rorl
pop
das
lods
and
popa
inc
sub
mov
loope
and
xor
int
or
pushf
test
dec
mov
aas
popa
insl
outsl
mov
pop
mov
fbld
cmpsl
jl
and
push
jbe
scas
mov
nop
mov
lods
imul
jge
mov
fs
in
inc
dec
ret
add
jg
xor
pop
stos
xlat
inc
and
adc
push
addr16
mov
push
sub
insb
out
add
cmpl
mov
mov
jle
ja
stos
fistps
mov
push
sbb
shrb
inc
xor
movsl
fcmovnu
out
das
xor
xchg
fsubrl
cmc
sub
push
xchg
cmp
scas
jmp
imul
iret
dec
or
add
cmp
pop
test
push
notl
inc
shl
xor
sub
adc
xchg
stc
int3
hlt
cmp
sbb
call
mov
push
and
mov
cmpsb
daa
icebp
xchg
jge
sbb
inc
adc
sahf
pop
cmp
fsubl
jno
mov
fimull
fildll
cmp
pop
xor
and
mov
xchg
pop
mov
mov
mov
mov
fmuls
sbb
arpl
jne
pusha
out
mov
mov
outsl
mov
mov
cmp
pop
cwtl
push
scas
sub
inc
lock
ja
push
sbb
clc
fnsave
es
sub
sti
pusha
lods
push
jge
cmp
jge
dec
std
outsl
xor
jecxz
and
or
arpl
ret
jb
enter
int3
adc
adc
or
nop
arpl
andnps
push
mov
mov
fldenv
lods
mov
in
cs
mov
fnstsw
mov
or
sbb
xchg
ret
sbbb
sub
push
adc
lock
mov
in
cld
lods
ret
into
insb
push
pushf
js
jle
inc
mov
push
jl
cmpsb
into
mov
pusha
jae
jmp
addr16
jno
add
inc
mov
inc
push
inc
clc
mov
dec
push
xor
in
into
jno
mov
fstps
push
insl
pop
mov
dec
in
loope,pt
cmpsb
int
sub
sbb
les
inc
test
jnp
xchg
jle
loope
xor
int3
xchg
inc
xor
mov
dec
fmulp
dec
adc
cmp
push
addr16
mov
push
pop
xor
cld
xchg
je
ds
inc
mov
pop
xlat
cmp
mov
fildll
push
sub
push
xchg
mov
xchg
dec
push
mov
mov
pop
ja
aas
ss
lcall
cmp
fdivrs
shll
pop
cmc
and
rolb
push
jnp
arpl
mov
testb
jbe
jge
push
lds
dec
enter
add
insb
jp
sbb
js
loope
dec
sub
outsb
add
dec
data16
mov
pop
addps
cmp
inc
xor
xchg
loope
sahf
shrl
dec
in
dec
mov
mov
lret
sbb
mov
jl
aam
sbb
movsl
out
push
add
sbb
pusha
fildl
cs
leave
mov
das
mov
lods
call
adc
xchg
clc
jne
call
lret
movsb
iret
int
outsb
cli
sub
jp
mov
dec
gs
cwtl
imul
jmp
jbe
arpl
bnd
subb
jp
pop
and
dec
icebp
test
into
mov
xchg
in
push
mov
lds
call
sub
fisubl
mov
jmp
push
rcrb
sbb
cmp
lret
jl
add
pushf
insl
mov
mov
addl
and
clc
loope
mov
jb
aad
or
mov
pop
xchg
insb
jl
sub
dec
lret
push
dec
lea
in
add
int3
push
adc
push
xchg
jl
add
mov
mov
xlat
xchg
dec
jnp
ds
xor
inc
stc
adc
loop
adc
inc
mov
mov
out
in
or
je
fildll
roll
push
fiaddl
fcmove
test
in
fincstp
push
hlt
and
mov
adcb
dec
sti
pop
insb
push
stos
mov
aad
scas
inc
xchg
mulps
xchg
iret
mov
xlat
lods
cmp
cmp
push
sub
mov
xchg
inc
xor
gs
push
ret
sub
adc
add
dec
cmp
pusha
addr16
jae
xchg
cmp
cmp
decb
fxch
cmp
cld
imul
lods
pusha
inc
sti
inc
imul
or
pop
mov
pop
nop
lods
sbb
enter
add
add
push
pop
push
sbb
xor
arpl
rep
aam
adc
arpl
mov
test
fistpll
push
add
adc
ret
jmp
test
jle
out
xchg
enter
ss
push
jns
and
insl
int3
jl
push
dec
cmpb
push
aad
scas
mov
jecxz
mov
mov
bound
das
lods
xor
aaa
ds
fsubl
jno
mov
push
or
ja
in
xor
stc
sahf
xlat
pop
std
movsb
ficoms
push
add
stos
psubusb
xchg
popa
mov
dec
out
jge
mov
jbe
mov
sub
inc
cmp
pop
cmp
rorl
mov
pushf
lret
loope
pop
jnp
sub
add
xchg
dec
sub
jl
scas
pushf
push
mov
xchg
and
push
add
mov
das
loope
pop
push
xchg
aad
not
out
sbb
mov
lods
jns
scas
out
or
jmp
cld
push
sub
push
into
into
add
xor
jb
call
and
outsb
jg
jge
lret
inc
pop
loop
lods
gs
sbb
pop
sbb
mov
ljmp
mov
fildl
sbb
fisubl
fwait
sti
pop
scas
jb
adc
mov
xchg
insb
test
lret
dec
loop
add
mov
add
popa
xor
and
jno
and
bnd
lods
lret
cmp
scas
or
cmp
fneni(8087
stos
test
bound
jle
es
out
adc
ret
test
mov
nop
arpl
sarb
sbb
js
and
mov
subl
cwtl
daa
inc
cmpsb
sbb
insl
lcall
sbb
xlat
lock
mov
add
cmp
mov
aam
push
mov
jb
test
cli
sbb
cmc
data16
dec
push
test
sti
popa
mov
adc
jmp
push
pop
call
shll
push
cmp
es
dec
xchg
mov
call
imul
sub
mov
mov
adc
cmp
dec
popa
test
mov
addr16
jne
in
insl
test
rcll
jno
sub
xchg
push
add
test
xchg
dec
movsb
lock
pop
dec
dec
mov
lds
ds
sub
cli
nop
mov
lods
or
or
loope
push
popa
cmp
mov
xor
sub
es
stos
or
xor
sub
lods
push
mov
jae
inc
lret
inc
and
dec
add
xchg
adc
outsb
insl
scas
gs
out
mov
push
movsb
loop
pop
pop
xor
inc
jmp
mov
icebp
roll
stos
leave
shll
jne
das
xor
fiaddl
rclb
rcrl
adc
push
aas
cltd
inc
inc
xchg
cwtl
add
lea
or
in
adc
andb
imul
and
push
mov
fisttpll
mov
cmp
cltd
das
das
xchg
in
sub
dec
iret
sbb
outsb
std
dec
mov
stc
sub
jae
leave
add
xchg
inc
push
push
ret
out
pop
mov
adc
jge
mov
jg
pusha
mov
fmull
inc
pop
mov
adc
ds
cli
inc
pop
push
fsts
nop
lods
mov
mov
push
dec
mov
out
and
mov
push
in
mov
inc
push
sub
or
loopne
fwait
push
push
mov
lods
rolb
mov
aad
xor
lock
jns
and
inc
into
out
mov
xor
lea
dec
in
xchg
jmp
and
js
xor
call
lods
xchg
or
out
fstpl
shlb
mov
sarl
pop
add
lea
lret
das
xchg
push
and
add
fcoml
mov
outsl
cltd
dec
add
push
cmpsb
sbb
pop
inc
pop
aas
test
push
cs
adc
xchg
push
pop
mov
cld
xor
push
notl
in
jle
cli
out
push
ja
mov
popf
and
cli
fists
sub
sti
lahf
add
cmp
sbb
xor
ret
orl
movsb
cmpsb
push
test
dec
cli
popa
jge
mov
push
or
jle
xorb
adc
mov
fwait
testl
pop
cmp
lahf
pop
dec
xor
ficomps
adc
pop
and
jle
inc
js
add
mov
cltd
in
test
push
aaa
mov
aam
scas
sub
aas
push
fidivl
xchg
lret
movsb
or
pop
lea
outsb
xchg
addr16
out
mov
repz
dec
les
pop
and
lahf
fs
adc
mov
xor
icebp
inc
or
ds
clc
adc
cmp
cwtl
jo
sbb
jbe
ffree
xor
push
inc
mov
mov
pop
sbb
or
arpl
mov
ja
xor
enter
mov
pop
jb
mov
shl
sbb
and
mov
js
lahf
xor
cmpsb
jb
jae
sub
daa
cmpb
push
inc
ret
push
jb
inc
les
stos
or
sbb
popf
xor
mov
or
push
mov
sbb
push
push
pop
push
or
or
int3
pop
add
cmp
and
and
xchg
lahf
or
movsb
xchg
sub
xorl
incb
pop
push
daa
pop
sbb
cmp
cld
xor
push
inc
fnstcw
loopne
jp
in
dec
ds
test
rorl
cld
fistps
xlat
cmp
imul
imul
pop
movsl
lea
pop
shl
movsl
ds
xorl
ds
add
sbb
loopne
cmp
jbe
dec
xchg
mov
lds
stc
and
ret
pop
adc
push
je
mov
sbb
cld
dec
cmpsl
inc
jl
sub
repnz
cmpsb
pop
loopne
cli
and
xchg
pop
pop
or
scas
xor
inc
int
or
add
xchg
cmp
lods
sbb
in
jbe
lret
sub
cmpsl
push
in
xor
loop
pop
std
push
rclb
mov
rorb
dec
mov
mov
pop
mov
iret
adc
dec
and
outsl
ficomps
outsl
jle
insl
mov
adc
loope
iret
inc
aaa
cmp
xchg
iret
icebp
cmc
aas
mov
jmp
mov
in
adc
bound
mov
adc
xor
mov
fs
fldl
sbb
sub
sahf
loope
and
xchg
fs
sti
mov
or
adc
push
insl
aad
out
pop
cltd
out
lds
sub
sub
aaa
cmc
popf
mov
pop
and
push
cmp
and
fadd
adc
sbb
inc
sub
pop
mov
test
test
push
andb
and
push
mov
push
mov
mov
aad
mov
jmp
jne
jns
inc
jb
pop
ljmp
add
test
popf
xchg
js
lcall
or
ret
pop
out
push
cmp
mov
mov
testl
xor
push
and
sahf
push
notb
pop
pop
push
jl
or
mov
outsl
fisubs
imul
outsl
or
dec
outsl
adc
mov
pop
jb
test
xchg
sbb
inc
ja
mov
addr16
lods
sbb
outsb
rcl
xor
lahf
fidivrl
push
scas
stos
lock
lods
cs
xlat
jmp
lock
or
pop
jae
popf
ret
ljmp
ss
test
rcrl
sub
push
sti
pop
movsb
adc
cmp
add
jmp
lock
movsb
cmp
mov
outsb
dec
rcrb
jmp
inc
mov
adc
push
in
inc
inc
movsb
xchg
cltd
int3
rorb
fwait
dec
xchg
fisubrl
xchg
add
adc
pop
imul
imul
aas
and
xchg
cld
data16
lock
or
stos
repnz
or
repz
xor
adc
xchg
mov
fs
fisttps
cmp
push
xor
ljmp
mov
rcll
sub
fwait
popf
sbb
and
repnz
xor
loopne
stos
stos
cmc
sub
inc
mov
push
in
stos
xchg
pop
push
fwait
and
lds
leave
jp
fstpl
leave
mov
sti
in
mov
sar
es
dec
push
mov
into
in
rorl
cmp
shl
in
int
outsl
mov
mov
shl
sbb
dec
dec
mov
scas
pop
movsb
shll
scas
mov
int3
andl
ja
mov
mov
xchg
outsl
jg
inc
mov
lods
roll
pop
out
nop
rcl
cmp
lods
cmp
std
lock
add
add
call
and
sub
sbb
sub
leave
ja
negl
inc
or
cmc
movsb
xchg
out
xor
jne
mov
push
dec
sub
add
ja
sub
roll
stos
cmp
push
cmc
cli
imul
xchg
popf
push
mov
xchg
hlt
rolb
add
mov
push
sahf
cmp
frstor
mov
shrl
cmp
mov
mov
ret
in
xor
cmpsb
mov
mov
pop
clc
xor
lahf
outsb
adc
cmp
mov
add
xor
jge
inc
das
adc
ja
pushf
idivb
xchg
xchg
in
dec
ds
xchg
nop
or
sub
mov
pop
xchg
in
push
mov
les
cmp
mov
loope
sbb
mov
addb
lock
fdivrl
cmp
cli
cmp
inc
xchg
aas
and
jp
ds
cmpsl
lret
mov
jb
add
push
or
lret
gs
imul
mov
lods
push
add
lods
sbbl
jae
mov
fcoms
pop
inc
jle
out
subb
fwait
in
test
stc
cli
xlat
jl
push
dec
ja
fs
xchg
add
jmp
aam
inc
inc
stos
fwait
std
jne
orb
test
inc
dec
mov
adc
ds
shll
push
int
mov
dec
sbb
sahf
push
xor
inc
test
xchg
out
addr16
cmpsl
sub
mov
bound
pop
cmp
cmpl
ja
inc
outsl
xchg
mov
pop
sub
push
and
lret
jae
push
lock
xlat
pop
cwtl
jns
les
cmp
int3
movsb
adc
xor
mov
rclb
adc
add
clc
lret
mov
test
hlt
mov
les
adc
jecxz
lcall
push
test
and
cmp
xor
jo
sbb
cmpsl
xor
sti
cli
push
leave
aad
sub
or
mov
shll
gs
int3
mov
data16
scas
pop
mov
lods
cmp
subl
jae
dec
aam
ss
hlt
adc
aas
in
cmpsb
or
lcall
pop
adcl
cmp
push
mov
insb
mov
fisttps
adcb
pop
fists
test
sbb
push
sub
dec
sbb
jbe
fbstp
stc
mov
mov
jg
push
std
orl
mov
mov
sub
std
pop
shll
imul
mov
call
lcall
in
sbb
mov
xlat
adc
add
pop
mov
and
xor
push
insl
add
stos
in
add
popa
mov
mov
int
insl
dec
and
out
daa
add
rcll
or
xchg
aam
ljmp
xor
sub
je
sub
lret
popa
push
rorb
push
shll
iret
in
nop
sbb
inc
add
adc
sbbb
rolb
mov
pop
pushf
roll
in
sub
shll
or
mov
xchg
std
dec
iret
insl
cmp
cli
jmp
fbld
push
and
ficomps
inc
subb
fstl
mov
cmpl
ret
jbe
xor
pop
dec
mov
cmp
push
mov
imul
cmp
sub
aaa
push
insl
push
push
pushf
inc
ljmp
pop
mov
pop
fucom
sbb
mul
pop
in
fldl
push
jp
lahf
mov
rclb
mov
ljmp
mov
iret
pop
sbb
inc
mov
dec
addr16
sti
sub
jb
sub
push
xlat
adc
leave
mov
dec
pop
xor
mov
inc
fsub
add
mov
mov
loop
and
loopne
fisttpl
test
pop
xchg
in
mov
ja
push
mov
push
mov
shl
sub
popf
lods
std
sub
inc
fdivrl
in
dec
mov
jecxz
rcl
cmp
out
adc
sub
mov
or
aad
out
sub
jmp
mov
mov
lret
je
fldenv
jle
imul
inc
lret
push
add
pusha
into
sar
xor
adc
out
sbb
fwait
mov
outsl
pusha
sti
mov
insb
imul
shll
pop
pop
jo
jo
out
jno
jbe
insb
jle
lret
mov
hlt
subb
ja
stos
mov
lret
or
jmp
cmp
fisttpll
stos
ja
mov
nop
ds
adc
outsb
out
lret
ljmp
insl
jne
es
xchg
leave
or
mov
and
sbb
mov
dec
je
add
xchg
in
in
icebp
aas
lods
fstpl
int3
int3
mov
cs
cmp
stos
daa
int
pop
jp
mov
mov
aas
lret
push
jmp
sub
fnstsw
jno
cmpsb
xor
clc
jne
out
pop
hlt
in
jp
loopne
mov
test
add
insb
pop
mov
pusha
fsubr
jecxz
repz
inc
fwait
jge
lds
sahf
ja
pop
mov
mov
pop
outsl
shlb
jle
sbb
popa
lahf
jmp
cli
xchg
cld
inc
ret
xor
push
mov
xor
test
jae
je
movsb
sbb
fists
cli
ret
in
xorb
mov
jae
outsb
into
and
cmpsl
inc
xor
aas
cs
test
xchg
pop
xchg
sbb
pop
add
xor
scas
sahf
push
stos
xchg
jge
push
lds
mov
push
pop
jl
das
pop
jne
mov
dec
aaa
cs
xor
jl
sbb
add
adc
push
ficoms
or
mov
inc
bound
cmp
xchg
pop
popf
cmp
xlat
enter
push
and
mov
iret
lock
in
jge
imul
insb
lret
add
push
xchg
sub
jmp
jg
mov
ja
lea
sbbl
in
test
cmpsl
in
sub
nop
jno
cli
cmc
lahf
lcall
ljmp
cltd
mov
push
bound
mov
xchg
pop
push
mov
jge
push
fdivrl
pop
xchg
in
jle
dec
mov
je
and
test
dec
cld
loopne
dec
lods
sub
pusha
ss
in
insl
pop
jp
dec
and
inc
or
cmp
lahf
lods
fisubrs
sbb
es
push
pop
stos
xchg
out
data16
loopne
clc
sti
ds
sar
ss
in
and
aad
and
xor
cmc
or
into
adc
lret
jne
dec
mov
mov
mov
les
mov
ret
dec
js
ds
and
sbb
dec
test
sub
shll
daa
je
andb
mov
xor
xchg
mov
mov
push
aam
inc
into
inc
les
in
lea
pop
mov
jl
lds
lods
dec
aam
cmpsl
pusha
fimuls
sbbb
call
pop
stc
push
stos
push
cmp
mov
imul
leave
cltd
xchg
ret
movl
add
fisubl
pop
mov
mov
sub
jp
das
xchg
rol
fcoml
lret
cmp
xor
cmp
pop
sub
cmp
cmp
pop
xchg
dec
ss
es
push
add
cmpsb
aas
add
leave
push
std
ret
xchg
inc
rcrl
mov
cs
jl
xchg
test
inc
sub
std
push
mov
je
leave
jae
lds
add
mov
cli
pop
pop
mov
adcb
inc
js
js
mov
arpl
jnp
outsl
shl
stos
dec
push
mov
mov
xchg
daa
imul
int3
xchg
leave
mov
out
sbb
and
push
jno
cmp
loopne
lods
xchg
arpl
xlat
and
and
shrl
repz
push
dec
shr
imul
outsl
je
rorb
jbe
xor
inc
cld
rclb
push
fwait
cmpsb
dec
xor
jae
lods
movsb
fidivrs
movsl
daa
fldl
sbb
inc
call
pop
mov
lods
cmp
int3
push
mov
sahf
icebp
xchg
jb
adc
int3
imull
jl
jns
gs
lock
xchg
xchg
add
lret
shrb
or
cmp
dec
shrl
popa
xor
xlat
dec
xor
subb
cli
and
dec
ljmp
xchg
sti
clc
sbbl
xor
pop
sbb
sub
mov
sbb
fcmove
add
mov
mov
flds
fs
cmp
lods
movsl
cmpsl
push
cmp
pop
mov
je
movsl
jns
scas
mov
dec
sub
in
mov
mov
xchg
add
push
jge
mov
mov
jecxz
add
sub
ud0
sbb
std
leave
xchg
ss
mov
in
add
jmp
pop
adc
test
push
add
xor
movsl
sub
push
or
ljmp
cmp
adc
and
xor
xchg
push
in
lds
and
dec
sub
in
scas
shrb
mov
add
insb
and
mov
jmp
cs
pop
add
xorl
inc
dec
mov
cmp
mov
xchg
sbb
cltd
mov
int3
movsl
xlat
ds
jge
xchg
push
es
mov
push
mov
jmp
jns
incb
addr16
adc
pop
xchg
pushl
xchg
insb
pop
cltd
jle
in
in
adc
loope
mov
call
pop
fadds
adc
mov
or
lret
push
cmpsl
xchg
loopne
dec
stc
xchg
sarl
pop
xor
scas
das
pop
mov
jbe
out
inc
call
es
cmp
jbe
or
lret
push
loopne
mov
sbb
lds
loopne
push
push
add
jl
fnsave
fwait
push
mov
xchg
imul
std
outsb
jbe
inc
mov
gs
jp
je
dec
push
lret
add
cmp
inc
rcrl
mov
pop
imul
aam
int3
mov
and
cltd
add
ficompl
enter
test
cmc
js
shrb
std
pop
xchg
lret
int3
and
lods
mov
mov
inc
scas
divl
outsb
orb
aaa
sbbl
or
xchg
sbb
sub
arpl
push
add
outsl
cmpsl
add
or
sbbl
push
repnz
daa
sub
jmp
and
cld
mov
das
cmp
and
cwtl
mov
inc
xor
jle
xchg
out
mov
aam
pop
xlat
stos
shl
cmp
andb
pop
cmp
mov
aam
fiaddl
cmc
add
rorl
dec
push
cmp
dec
daa
leave
loope
rorb
in
mov
xchg
sub
sub
cmp
add
sub
lods
add
shrl
adc
pop
xor
mov
test
add
xor
push
ud0
js
xor
insl
lahf
mov
cmpsb
xchg
in
aas
dec
inc
mov
pusha
inc
cmc
inc
add
cmpsb
jne
mov
daa
dec
cmp
xor
dec
lcall
push
fwait
jecxz
inc
repnz
test
orl
ds
sub
mov
xor
gs
mov
cmp
out
or
jle
push
xlat
dec
push
add
rcll
xchg
dec
push
inc
test
inc
pop
repnz
out
fsubrs
out
pop
sahf
arpl
insb
xor
outsb
movsl
bound
jnp
ja
mov
add
imul
mov
adc
dec
lret
out
xor
addb
push
mov
xor
or
push
adc
sbb
setnp
es
pop
stos
mov
mov
xchg
or
push
mov
iret
pop
test
pop
or
xchg
imul
push
addr16
test
dec
mov
stos
cltd
xor
aam
pop
mov
mov
cwtl
adc
daa
in
jcxz
sub
lock
sub
and
je
push
insb
out
dec
arpl
jo
xchg
cld
xor
cmpsl
mov
jg
xchg
sbb
jbe
int3
inc
cmp
leave
adc
fbstp
int
push
pusha
mov
lds
inc
fidivs
loop
aad
movsl
rcr
fildl
lahf
mov
xor
xchg
adcl
jb
sbb
call
sub
sbb
mov
sbb
mov
lahf
subl
jo
and
mov
push
jecxz
pop
push
jmp
xor
aad
mov
test
cmp
add
icebp
mov
in
xlat
mov
arpl
mov
test
fmuls
cs
inc
mov
xor
mov
ret
incb
push
ja
aam
jae
mov
sub
fsubl
sub
pop
push
sbb
pop
add
fstpl
lret
fucomip
insb
call
icebp
mov
and
in
test
sbb
jnp
das
fiaddl
adc
fbstp
pop
fdiv
and
xchg
and
ss
jne
rcr
add
aam
adc
icebp
dec
jo
mov
fs
gs
sub
filds
mov
mov
rolb
mov
add
test
std
lcall
lods
loopne
lcall
mov
sbb
jg
xlat
jno
sbb
or
jne
in
add
cwtl
stc
lds
shll
jmp
sbb
push
cmp
lock
pop
mov
and
cmpl
test
push
push
mov
sbb
ss
cwtl
jbe
inc
mov
iret
rcll
insl
test
pop
lods
pop
xorps
mov
test
lea
stc
xor
loop
adc
int3
dec
stos
sbb
xor
rorl
xchg
mov
xlat
shr
xor
pop
jg
iret
sbb
add
call
lcall
jne
bound
push
ja
dec
shrb
test
loop
push
sbb
js
jnp
fcompl
jmp
adc
inc
add
adc
fldt
push
int
add
cmp
mov
cmp
xchg
pop
mov
jnp
cmp
push
sbb
sbb
popf
mov
and
sahf
jl
js
mov
leave
adc
orb
add
lods
adc
imulb
in
push
ret
mov
adc
jl
adcl
cmp
sbb
push
sub
adc
repnz
dec
lea
mov
cmp
cli
and
sbb
fcoml
iret
lret
popf
stos
dec
pushf
dec
les
push
push
pop
aaa
rclb
pop
push
mov
adc
xchg
mov
lods
xchg
out
jp
test
inc
mov
and
std
adc
cwtl
adc
lret
dec
or
int
bound
add
push
int
in
mov
and
std
nop
int3
sub
scas
xor
push
in
push
fildl
movsl
rorb
outsl
jmp
pop
cmpsb
mov
out
repz
cmp
jecxz
ds
mov
xchg
xchg
icebp
cmc
push
decl
les
add
ljmp
scas
dec
aas
fildl
jmp
jecxz
mov
jnp
outsb
cmp
push
xor
cmp
jne
lret
repz
lods
gs
jne
lods
mov
iret
push
xlat
shld
or
xor
ror
lock
mov
loopne
fucomip
and
pop
add
and
insb
out
outsb
xchg
sbb
in
notl
loop
push
adc
bound
cmc
and
push
mov
mov
inc
popa
cmp
pop
imul
dec
out
sbb
xchg
pop
das
xlat
sar
xchg
xchg
mov
jae
int3
std
or
addl
pop
cs
push
dec
insl
movsl
mov
stc
pop
xchg
out
inc
mov
mov
sbb
dec
inc
insb
push
scas
jmp
pop
out
int
lea
jg
lock
push
movsb
inc
mov
mov
in
adc
push
stos
xchg
mov
fsubrs
mov
hlt
pushf
outsb
add
push
pop
sub
and
adc
push
movsl
in
faddl
and
cld
jns
repz
hlt
dec
sti
xchg
xor
pushf
sub
les
js
push
arpl
push
dec
jg
inc
idivb
test
xchg
add
xchg
repz
in
push
jg
cs
dec
sbb
jbe
and
push
rcrl
mov
jnp
ljmp
and
xor
push
dec
cltd
in
out
or
push
clc
cli
add
xchg
adc
and
js
fnstcw
nop
pop
mov
bound
jp
jnp
sbb
jne
std
rcrb
shll
jnp
pop
xor
loop
push
sbb
cmpsl
mov
mov
mov
xor
push
mov
jns
cli
test
fsubs
jns
or
pushf
fisubl
into
dec
dec
push
add
add
das
hlt
bound
rorb
insb
rclb
mov
mov
cmp
cwtl
and
call
test
or
cwtl
mov
pop
fisubl
lods
mov
sahf
rcll
or
and
aam
call
mov
les
in
gs
andl
test
repz
outsl
movsl
pop
jbe
add
aas
mov
std
xchg
mov
scas
cmp
lods
sbb
stos
repnz
das
inc
and
icebp
add
popf
xor
loopne
cmc
aam
dec
mov
push
clc
loopne
cmp
jae
sub
adc
ja
xchg
jo
dec
call
lret
xor
roll
std
push
sbb
sbb
outsl
dec
or
shlb
stos
xchg
jno
xchg
mov
in
mov
int3
mov
pop
xor
ret
shrl
lds
xlat
test
add
lock
icebp
jo
frndint
cmp
test
add
daa
fisttpll
lret
and
add
xchg
adc
loop
fdivrp
lcall
xchg
fnstenv
and
mov
xchg
popw
xor
mov
or
insb
rolb
int3
mov
stos
dec
mov
dec
sub
addr16
mov
fwait
test
xchg
add
out
popf
sahf
mov
jb
mov
out
mov
mov
imul
fildll
cltd
aam
inc
push
inc
and
insl
push
lds
std
pop
or
lods
pop
movsl
jmp
loope
lods
loop
mov
fisubs
xor
lea
hlt
add
mov
movsb
or
adc
rcll
adc
push
scas
xchg
dec
fcmovne
pop
jne
jge
nop
leave
addr16
mov
and
scas
or
and
mov
arpl
xchg
insb
xor
push
lods
icebp
cmp
mov
pop
enter
rcrl
aaa
xchg
sbb
adcb
jno
les
pop
iret
adc
cmp
loope
stos
inc
inc
adc
adc
hlt
pop
adc
test
jle
pop
push
es
xor
mov
inc
in
sub
les
ljmp
fsub
test
dec
sbb
jmp
movsl
data16
lods
dec
push
xchg
out
repnz
jae
dec
and
leave
cmp
jmp
sti
inc
and
clts
xor
lea
filds
xor
call
adc
loop
cmpsl
ret
mov
pop
imul
mov
lret
mov
adc
es
in
es
daa
std
xor
pop
mov
decb
and
push
pop
inc
push
negl
sbb
js
mov
mov
bound
out
add
movsb
inc
flds
negb
pop
mov
push
or
and
cltd
inc
stos
nop
cwtl
std
pop
cmp
test
adcb
adc
fiadds
xchg
sub
iret
ljmp
jecxz
jo
and
outsb
mov
lock
jl
icebp
aad
out
push
cmp
loope
and
fldl
negb
movsb
sbb
clc
outsl
inc
pushf
std
cli
add
jecxz
dec
xchg
lds
enter
repz
inc
lcall
mov
and
ss
pushf
das
aad
sub
pop
xchg
insb
pop
imul
push
sbb
and
mov
fidivrs
loopne,pt
sbb
addb
jmp
addl
int3
in
in
cmp
fsts
xor
movsl
sbb
mov
mov
mov
mov
in
pop
loope
sbb
sbb
mov
mov
fdivl
and
jo
stos
sub
rclb
inc
xor
dec
popf
push
stos
push
aad
loop
or
cmpsl
push
jg
sub
sbbl
dec
sbb
sti
mov
pop
or
lea
dec
stc
arpl
inc
jmp
ja
dec
cmp
inc
clc
mov
repz
stos
mov
cmp
pop
sub
mov
jmp
movl
inc
adc
mov
or
adc
ficomps
push
stc
cli
addr16
in
scas
xchg
loop
lret
xor
mov
or
imul
mov
cld
mov
xchg
sahf
aas
shlb
sub
mov
je
outsb
dec
icebp
outsb
xor
daa
mov
adc
mov
xchg
xchg
jno
or
addr16
inc
sub
lea
pop
push
out
inc
fdivp
cmp
pop
popa
jmp
mov
jg
mov
sub
mov
jo
sbb
lock
mov
pop
pop
and
fwait
ja
fistpll
loop
mov
ret
ds
fwait
xchg
mov
dec
mov
and
dec
jns
xor
adc
xchg
and
mov
int3
rorl
aaa
bound
cmp
notl
jno
in
cmp
loop
dec
adc
cmp
or
and
and
cwtl
xchg
sbb
lcall
inc
iret
jne
xlat
shrl
in
outsb
pop
aas
popf
inc
cmpsb
xchg
inc
inc
jl
fidivrs
pop
mov
xchg
jmp
push
ret
mov
pushf
fs
ja
or
add
xchg
pop
xchg
fidivl
stos
stos
std
adc
push
ja
push
pop
out
jnp
inc
and
pop
lcall
cmpsb
cmp
out
test
sbb
in
cmp
jg
pop
enterw
sbb
mov
pop
push
add
xlat
add
fs
jae
push
pop
push
aas
pop
xchg
fucomi
popa
xor
xchg
sbb
mov
stos
fs
cmp
ljmp
mov
test
adc
outsl
imul
hlt
cwtl
fisttpll
mov
repz
subl
test
aad
dec
xchg
js
test
mov
fisubrs
cmpsl
flds
lret
and
mov
movsb
and
pop
cmp
cmp
out
out
jp
lds
pop
sub
cmp
xor
jbe
push
stos
mov
paddq
addr16
sarb
adc
cwtl
shll
into
cmp
jmp
mov
mov
fisubs
push
mov
test
push
into
push
push
int3
xlat
jbe
lock
xor
push
popf
push
mov
stos
xor
cmp
xor
push
dec
mov
ds
jns
fcmove
fmulp
mov
shr
xchg
add
das
test
icebp
dec
mov
xchg
das
test
fcoms
cmp
mov
jecxz
sbb
xor
jl
sarb
imul
jbe
sub
inc
mov
lret
and
push
cmp
fsubs
jmp
test
add
jae
out
lret
mov
ret
inc
cmp
cs
fcmovnu
hlt
incl
push
dec
popl
xchg
movsb
cli
insb
call
inc
sub
outsl
js
cwtl
iret
loop
inc
fwait
in
adc
repnz
movsb
adc
adc
pop
push
dec
sahf
gs
hlt
mov
call
popa
fwait
jo
jmp
sbb
movzwl
cmpsl
or
scas
jp
mov
or
movsb
pop
cmp
daa
pop
pop
dec
loop
push
mov
add
cltd
js
pushf
iret
lcall
fcomps
lret
scas
push
pop
mov
mov
sub
and
jmp
cwtl
xor
pop
dec
cmc
mov
lock
popf
mull
jle
mov
dec
sahf
outsl
or
jne
int3
push
ljmp
cmp
fldcw
outsb
jbe
ret
dec
inc
jnp
xor
lret
stos
sbb
xlat
inc
mov
inc
scas
xchg
cwtl
sahf
ret
bound
and
into
adc
push
mov
lcall
lea
testb
fdivrs
xor
mov
mov
jae
outsl
roll
lcall
in
dec
push
mov
jmp
std
mov
pop
mov
stos
push
mov
aad
xchg
adc
out
scas
and
pop
dec
repz
arpl
pop
dec
adcl
xchg
cltd
ja
fcomip
xchg
clc
mov
sub
jle
insb
lret
mov
push
dec
adc
pop
push
imul
dec
enter
lret
xor
mov
push
setge
stos
pushf
sbb
jno
fistl
mov
jmp
outsl
jmp
cwtl
das
leave
jp
jecxz
insb
stos
orb
xor
popa
shlb
rsqrtps
outsl
pop
jecxz
dec
xchg
lea
clc
mov
push
notl
sbb
insl
dec
mov
jp
inc
dec
in
or
ret
cmp
pop
xchg
xchg
std
push
pop
xchg
inc
leave
dec
aad
adc
mov
pop
xchg
sub
mov
pop
insl
xchg
push
xchg
cmpsb
lock
ss
xor
push
cs
out
cmp
cmp
cmpsl
pop
add
adcb
push
aaa
scas
adc
enter
lret
add
mov
icebp
pop
add
loope
faddl
cmp
sbb
push
pop
call
aad
or
jno
inc
sub
cmc
cmp
fucomp
push
cmpsb
mov
out
lock
jne
fiadds
add
push
mov
sarb
lcall
cmp
loope
test
cmp
mov
aaa
jmp
sbb
mov
mov
mov
lcall
in
cmp
mov
pop
shrl
in
stc
cmpsl
ss
lods
xchg
fistl
std
or
dec
mov
jp
ljmp
pusha
leave
rcrl
xlat
addb
lods
pop
adc
pop
popa
cmp
in
xchg
cmpsl
mov
enter
push
xchg
fsubr
cmpsl
insl
scas
mov
xchg
lods
jle
out
lods
inc
cmc
fisubrs
pop
fbld
out
lds
pop
iret
test
sar
out
mov
xor
xchg
outsl
inc
nop
movsb
push
mov
cmp
jb
filds
xlat
push
cli
sub
dec
inc
jnp
or
and
sub
addb
mov
mov
mov
pop
inc
and
lods
xchg
popf
pop
icebp
addb
fsubrs
add
sub
cltd
rcrb
jo
repz
mov
bound
push
xchg
push
push
push
mov
push
inc
pop
shl
sub
les
inc
push
ret
add
pop
daa
adc
jbe
lahf
jbe
cmp
cmp
sbb
xchg
pop
adc
adc
push
jne
das
add
adc
dec
jnp
sub
pop
adc
jae
jp
push
fdiv
and
or
and
mov
ljmp
mov
ret
jb
adc
lret
adc
aad
jns
mov
xchg
psraw
ret
pop
jnp
xchg
dec
jge
sbb
add
pop
mov
xor
jne
lea
data16
add
xchg
push
jnp
cmc
cmp
test
ds
ret
jp
ret
and
cmc
add
aad
lds
fmuls
and
sarb
ret
std
ret
cltd
repz
sti
add
push
mov
mov
push
or
int3
call
xor
ret
push
movsb
aaa
pop
mulb
pop
popf
push
lods
inc
sbb
fs
pop
popf
ficoms
push
cmpb
int
adc
cmc
xlat
sti
mov
cmp
pop
jecxz
xchg
cs
test
jmp
sub
loope
sbb
or
lock
pop
mov
inc
push
mov
sbb
sub
inc
sbb
add
fnstenv
movsl
cs
inc
inc
scas
xor
imul
xor
cltd
push
shl
cmp
repz
in
scas
std
test
xchg
scas
jo
jns
push
or
imul
imul
in
pop
loop
pop
movb
inc
mov
push
stos
and
pop
sahf
addb
shl
fsubrs
push
jmp
les
inc
ja
cwtl
js
mov
lods
lock
ja
daa
cwtl
test
mov
lahf
leave
pop
pop
into
pop
jno
xor
push
dec
xor
sub
mov
push
daa
popa
cmp
into
sbb
sbb
mov
push
into
and
outsl
pop
and
pop
inc
repz
rcrl
stos
stc
shrl
icebp
mov
pop
mov
xchg
jbe
test
inc
popa
sbb
cwtl
mov
mov
xchg
sti
jbe
scas
inc
and
or
mov
mov
and
dec
in
mov
add
dec
xor
hlt
cli
dec
add
sub
shrl
cmpsb
inc
jbe
or
adc
arpl
push
inc
mov
inc
lock
mov
clc
push
ss
dec
or
xor
fmuls
add
xchg
aaa
pop
xor
jp
dec
insl
in
pop
add
movsl
inc
jp
pop
mov
add
xor
shl
or
mov
and
or
xchg
icebp
in
cmpsl
js
lods
fdivrs
les
into
cmpsl
daa
and
ss
add
sbb
sub
inc
rclb
mov
sbb
test
push
lcall
push
ret
loop
in
fwait
and
push
and
sbb
sub
sarl
and
pop
sub
into
jnp
cmpl
pop
push
xchg
cwtl
fistl
fnstsw
out
jne
adc
pop
push
adc
jno
inc
cmpsb
jo
push
adc
mov
xor
xchg
push
std
sub
inc
popf
andb
div
ret
lods
jne
push
cmp
clc
or
mov
push
mov
mov
mov
pop
pop
das
mov
into
mov
rcll
pop
icebp
out
cmc
in
dec
pushf
ficoml
mov
dec
push
sbb
push
xchg
mov
cmpsb
ret
imul
adc
jle
outsb
or
outsb
movsb
dec
sub
lcall
icebp
ret
pusha
addb
pop
mov
xor
adc
aam
or
or
loopne
shrb
pusha
mov
movsl
sub
adcb
and
outsb
inc
int3
in
dec
add
push
pop
add
pushf
loopne
or
adc
sub
push
cmp
movsl
xorl
jo
mov
pop
cltd
sub
sbb
or
gs
pop
pop
shll
das
pop
lods
mov
lahf
mov
shl
scas
sub
sti
test
test
enter
cmp
aas
gs
loop
fsubrs
in
sbb
outsl
mov
orl
out
stos
fbstp
mov
dec
outsb
or
stc
mov
pop
mov
hlt
jg
and
mov
addr16
mov
jae
cmp
lods
lret
ret
loop
inc
mov
push
sub
lods
add
adc
in
add
mov
jne
lcall
xchg
rorl
mov
cmp
jno
ficompl
jmp
into
jmp
adc
jno
imul
in
stos
add
or
mov
mov
push
cltd
inc
mov
push
or
inc
xchg
clc
lods
cld
sbb
fstps
jmp
adc
dec
test
push
lea
and
xor
fisubs
shrl
mov
sahf
xchg
dec
pop
rolb
add
sar
sbb
mov
xor
cmc
jle
popf
dec
or
scas
push
cmp
lock
add
mov
in
cmp
mov
xor
loope
leave
aam
mov
dec
ret
add
ret
sbb
dec
or
pusha
or
pop
push
fisttps
sub
in
mov
aaa
mov
and
mov
mov
xor
addb
cmp
xchg
dec
data16
jnp
or
jl,pn
jg
pop
pop
out
aad
idivb
insl
insb
jb
es
push
add
sbb
mov
es
sub
inc
enter
lock
ljmp
loop
or
sbb
dec
sbbl
sti
icebp
lret
xor
cltd
xchg
cmp
fbld
movsb
sub
jl
mov
mov
out
loopne
outsb
fadd
xchg
adc
jg
test
stos
sbb
and
sub
int3
in
outsb
mov
enter
and
dec
daa
fcomps
or
rorb
orl
shrl
add
dec
jmp
aad
ds
xchg
js
mov
sub
mov
mov
mov
jno
stos
loop
fimull
adc
scas
fimull
and
adc
or
scas
sbb
sbb
adcb
bound
pushf
jp
xchg
xchg
repnz
lods
cmpsl
lds
fidivs
jb
cltd
push
es
cmpl
xor
shl
aas
mov
scas
out
mov
mov
mov
out
das
mov
mov
rorl
into
mov
rcrb
sub
cmp
out
cmp
and
fdivs
sub
or
mov
jecxz
js
mov
popa
mov
into
pop
ljmp
xor
loope
mov
repz
jbe
and
in
cmc
int3
pop
int3
pop
in
sub
jmp
arpl
sti
imul
lock
inc
outsl
pushf
push
xor
enter
movd
jecxz
sbb
insl
shrb
jle
dec
mov
push
mov
enter
and
ss
loopne
push
and
lret
mov
ret
push
int3
stos
inc
sahf
sbb
sbb
lods
jno
xchg
mov
cmp
dec
mov
xchg
scas
sbb
push
sti
sub
sub
push
push
shrb
lock
sbb
fsts
and
cmp
mov
mov
vmovsd
fcom
mov
fwait
jo
rol
mov
call
add
aad
xor
call
mov
js
cli
lahf
push
enter
xchg
das
inc
sbb
mov
xchg
dec
cmp
mov
and
dec
pop
sbb
push
arpl
out
push
scas
leave
mov
mov
lahf
leave
out
cmc
aam
jecxz
add
inc
mov
jmp
pusha
daa
cmp
mov
jl
in
push
scas
mov
imul
fcompl
sbb
cmp
addr16
mov
stc
incb
cld
xchg
pop
iret
jecxz
dec
dec
in
mov
vpshlw
nop
pop
out
test
pop
test
arpl
xor
sub
mov
lcall
mov
dec
mov
adc
dec
andl
pop
imul
mov
or
xor
pushf
sbb
xchg
imul
mov
lock
sahf
test
out
bound
mov
mov
sbb
mov
cmc
ret
cmpsb
sahf
mov
in
fistpl
add
sub
pop
adc
iret
stc
mov
cmp
fs
push
into
fmuls
loope
call
mov
sub
add
xchg
ds
ss
bound
sbb
stos
pop
lahf
movsl
arpl
dec
jne
les
xchg
imul
mov
daa
cli
inc
call
repz
andb
jg
xchg
mov
dec
sub
jg
movsl
aam
xchg
xor
aaa
pop
lret
pop
and
sub
sti
jge
aad
dec
xor
nop
sub
loope
add
cli
jns
jno
push
push
cld
mov
sbb
push
ret
dec
jae
sub
clc
ficoml
and
xor
cmp
test
fisttpl
add
mov
pop
xor
adc
mov
push
adc
inc
jae
add
cmp
sti
add
mov
test
test
inc
shrb
dec
push
das
loope
shrb
inc
andl
insl
jb
jg
or
jo
jg
add
push
int
xchg
jp
dec
das
out
or
dec
pusha
out
loop
ret
sub
jle
inc
ret
daa
sbb
mov
lret
pop
and
xor
adc
mov
mov
mov
pushf
inc
xchg
in
and
into
movsl
out
ljmp
jb
js
fsts
and
push
std
xchg
mov
ljmp
stos
jne
mov
mov
test
mov
inc
notl
fimull
bnd
push
inc
fsubs
add
shr
push
push
lods
push
cltd
pop
xchg
lret
enter
mov
or
push
sub
dec
cmpsb
push
jo
inc
or
minps
shrl
int
push
dec
pop
mov
sub
fidivs
adc
pop
out
outsb
iret
sbb
loop
mov
add
pop
xorb
int
and
in
mov
adc
lahf
into
push
dec
or
inc
adc
std
or
cmp
out
cmp
add
dec
jo
cmpsb
xchg
icebp
dec
adc
in
iret
xchg
cmp
adc
loopne
xor
lock
cmpsb
orl
push
jl
iret
aas
pop
jne
cmp
sub
mov
and
sti
sahf
push
lock
and
xchg
inc
jne
xchg
shll
and
dec
pop
mov
dec
dec
sbb
mov
movsl
mov
cmp
inc
fildll
jl
and
sub
cmp
into
mov
cmp
add
pop
outsl
xchg
sbb
or
xchg
mov
cmp
jno
repnz
sbb
in
adc
cmpsb
call
cld
xchg
subb
add
mov
dec
icebp
jo
jecxz
ja
cmp
stc
movsl
cltd
leave
dec
pop
fs
pop
add
inc
sub
cld
into
aam
fistl
movsb
fwait
cmp
jb
lods
adc
pop
ja
sub
inc
fiaddl
test
sbb
jecxz
and
sbb
data16
cmp
das
lret
enter
xor
shrl
cmp
sub
push
adc
or
cmpsb
sarl
fwait
mov
movsl
scas
add
xor
adc
pop
and
cwtl
test
xor
cmp
mov
xchg
fbld
pop
xchg
sub
and
adc
mov
xchg
jnp
ljmp
cmc
jg
insl
cmp
cltd
mov
cmp
push
out
js
dec
inc
mov
push
mov
test
xchg
inc
xchg
xchg
inc
adc
test
dec
push
imul
cld
inc
in
cmp
and
out
or
mov
imulb
inc
mov
aad
fcmove
jb
pop
popf
mov
sbb
inc
rorl
scas
fdivrs
gs
orl
xchg
cmp
xchg
data16
xlat
mov
jl
push
je
sbb
inc
cmp
mov
leave
push
hlt
cwtl
aaa
int
add
push
and
iret
loop
pop
scas
fsubrl
adc
aaa
dec
lods
inc
xor
pushf
adc
pushf
in
movsl
in
dec
mov
sub
sub
fwait
aas
inc
pushf
xchg
inc
cmp
test
or
dec
lret
insb
test
add
rclb
mov
aam
sti
jge
popa
inc
jecxz
push
fistl
clc
out
loope
cs
insb
jle
lea
mov
scas
icebp
sub
aas
frstor
aas
pop
pushw
not
imul
lret
jns
xchg
add
mov
and
push
push
in
je
icebp
repnz
repnz
loopne
daa
xor
xlat
push
aas
dec
out
dec
xor
lods
cmp
jl
int3
shl
mov
push
repz
imul
into
in
xor
cmp
scas
aas
fwait
ds
loopne
bound
cmp
loop
mov
mov
cmpb
inc
clc
inc
dec
sub
xor
adc
inc
stos
sahf
fbld
mov
push
jmp
nop
inc
jmp
scas
xchg
imul
dec
mov
outsl
rorl
dec
pop
jns
imul
fs
inc
mov
mov
daa
lret
xorb
sar
jb
popa
add
pop
xchg
adc
out
pop
xchg
inc
popf
setl
mov
mov
ljmp
out
clc
push
inc
js
xchg
adc
rdmsr
sub
sbbl
xor
adc
aas
or
mov
cld
cmpsl
adc
test
mov
xchg
idivb
add
aam
mov
lock
mov
add
test
adc
es
sbb
sub
fadds
and
cmp
int
cwtl
and
pop
jae
dec
push
add
push
adc
iret
shlb
mov
sbb
insb
jp
mull
mov
repz
insl
pop
pushf
lahf
rcrb
jmp
repnz
push
lcall
xor
loopne
or
sub
sbbb
ret
pushf
and
and
dec
fistps
push
scas
lods
lcall
out
insl
adc
cwtl
push
cmp
jle
push
cmc
sub
adc
jecxz
out
lret
mov
in
and
push
mov
aaa
fistl
fimull
push
jge
pop
jne
pop
cmpb
shrl
inc
out
call
mov
in
push
xor
xchg
sbb
mov
xchg
fisttpl
jge,pt
mov
jae
mov
sti
cmpl
adc
inc
sbb
sub
cli
cmp
push
pop
std
mov
inc
data16
pop
cmp
bound
and
lret
and
ss
icebp
inc
mov
insb
inc
xchg
xor
mov
leave
push
stos
out
or
add
in
dec
sub
pop
xchg
or
fstl
cmp
ret
xor
add
clc
loopne
nop
mov
hlt
test
dec
xchg
xor
bound
stos
scas
pop
inc
inc
dec
xchg
cs
sbb
add
pop
aad
xchg
in
inc
xchg
push
lock
cmp
loop
dec
xchg
xchg
rol
push
test
ja
scas
stos
sarl
into
push
jns
mov
and
or
dec
add
add
rcl
jns
adc
and
cld
pop
addr16
sub
pop
dec
jne
mov
sbb
inc
cld
or
mov
jae
mov
mov
in
jecxz
stos
cmc
mov
xor
xchg
jge
lret
push
jns
inc
dec
fwait
pop
mov
int
aad
pusha
mov
push
push
hlt
int
ret
xor
sbb
cmp
and
add
repz
call
or
xchg
imul
dec
xchg
fisubl
xchg
out
imul
sbb
mov
fcoml
lds
dec
subl
add
pop
jp
adc
arpl
imul
jle
ljmp
scas
shll
or
adc
iret
mov
jbe
push
cs
scas
roll
xchg
cmpsb
push
xchg
aaa
jbe
mov
int
jnp
adc
pop
add
aad
dec
in
in
jge
ret
jge
inc
inc
pop
push
insb
jbe
iret
pusha
add
push
test
clc
pop
xchg
cmp
cld
ds
ja
test
mov
nop
outsl
add
test
in
dec
mov
dec
into
push
sbb
ljmp
or
cld
sbb
ret
sarb
pop
in
or
testb
test
inc
xchg
jnp
imul
scas
sub
fsts
xor
mov
cwtl
stc
lcall
ss
xor
mov
mov
cmp
enter
dec
xor
ds
mov
push
outsl
lcall
inc
outsb
inc
push
xor
test
mov
dec
xor
orl
fs
ljmp
cmc
hlt
adc
int
mov
cmp
and
pop
mov
or
or
and
sbb
lods
test
insb
sub
inc
push
enter
pop
xchg
mov
mov
xor
test
int3
jns
ret
push
ljmp
jo
les
fsubs
pushf
inc
sbb
pop
shlb
roll
xchg
pop
iret
lds
sub
ror
in
stc
aas
mov
iret
fadd
pop
scas
pop
test
mov
frstor
insb
out
push
pop
adc
mov
xlat
pop
test
or
dec
sarb
mov
sub
sbb
fidivs
enter
ds
nop
push
pop
scas
je
fidivrl
sti
pop
xchg
mov
paddusw
push
jle
data16
das
jo
mov
xchg
scas
or
lret
cmc
scas
fadd
sub
in
dec
test
scas
cmp
cmpb
hlt
fwait
leave
inc
mov
mov
lret
push
test
xlat
cmpl
mov
push
xchg
mov
add
pop
xchg
push
push
dec
enter
cmp
call
inc
pop
inc
add
add
cltd
xor
jae
push
jnp
jns
jb
imul
jle
or
aas
mov
loope
leave
lods
pop
addr16
lods
movb
jle
adc
addr16
xor
jp
push
addb
xor
movsl
inc
or
push
out
cmp
xor
sbb
adc
jbe
mov
rcr
in
shll
inc
dec
insb
mov
push
repnz
movb
dec
testb
jbe
push
pop
fwait
shlb
clc
sbb
cmp
out
dec
data16
insl
mov
imul
mov
mov
pop
push
rolb
jge
pushf
mov
inc
imul
aad
or
popa
push
lods
outsl
xor
fisttpl
insl
call
nop
data16
add
test
iret
inc
mov
bound
movsb
push
sbbl
add
adc
pop
push
jbe
roll
inc
stos
xlat
mov
fcmovb
adc
lea
fnstenv
insb
popa
stos
cmc
cmp
ret
pop
test
and
fnstsw
decb
js
aaa
sub
idiv
hlt
stos
shlb
stos
lods
rolb
sbb
in
data16
mov
mov
in
jo
mov
mov
pop
pop
mov
inc
xchg
mov
sub
and
xor
inc
adc
xor
adcl
in
mov
int3
mov
xor
lods
pushf
shlb
sub
xchg
lock
test
sbb
adc
sub
dec
xchg
jns
inc
inc
mov
scas
jo
testl
xchg
inc
pusha
dec
or
add
jge
in
add
push
pop
lds
mov
arpl
je
stos
adc
fcoms
mov
test
mov
dec
test
inc
jp
lahf
imul
or
jg
pop
stos
movsl
ljmp
mov
lcall
es
xor
mov
xor
cmp
and
cmp
cmp
mov
sti
mov
sbb
pop
pop
mov
fwait
adc
icebp
mov
aam
dec
andb
fdiv
imulb
sti
cli
daa
xchg
xchg
daa
push
out
jmp
int
or
int3
or
call
inc
std
jae
xchg
jle
push
ret
aam
inc
frstor
dec
jnp
xor
repnz
loope
sarb
and
cmc
inc
addb
add
in
es
test
ds
fiaddl
xchg
loopne
addr16
xchg
and
cld
test
shlb
mov
sub
dec
gs
mov
icebp
sbb
iret
ret
call
stos
popa
repz
psubq
call
or
mov
xor
mov
lock
aaa
ret
fisubs
push
sahf
in
jne
jg
xchg
test
in
sub
mov
fs
jle
test
arpl
mov
sub
ret
rcrl
jo
loopne
cs
pop
out
xor
inc
push
clc
popa
inc
jg
push
sar
outsb
mov
jnp
icebp
cs
dec
movsl
shl
push
pop
ja
jnp
out
daa
cmp
fwait
in
dec
enter
or
dec
mov
push
repz
fisttpll
add
call
aaa
dec
stc
jl
and
aad
xor
repnz
inc
scas
pushf
es
fnstsw
and
mov
lret
sub
outsl
sbb
das
adc
aas
xor
loop
add
orb
pop
aad
rcrl
out
insl
icebp
dec
movsl
cmp
mov
mov
mov
leave
test
cmp
push
test
enter
sahf
aad
mov
ds
jbe
out
icebp
sub
popf
cwtl
cmpb
cld
stc
xorb
inc
and
xchg
cmp
or
sub
loope
sub
pop
mov
and
xchg
ss
add
mov
aam
adc
push
stos
sub
jl
cmp
cmp
pushf
pop
push
orl
out
negb
inc
sub
sbb
loope
xlat
insb
mov
xchg
jg
ret
movsl
xor
mov
and
nop
das
push
lret
and
and
les
aad
ljmp
movsb
inc
mov
add
mov
fiadds
addr16
scas
sub
jo
mov
cmp
out
dec
adc
and
scas
or
sti
inc
filds
dec
xchg
sbb
mov
dec
dec
loopne
in
push
movsl
xchg
call
add
mov
lahf
daa
mov
fincstp
mov
ljmp
mov
mov
popa
iret
sub
cmp
mov
js
dec
dec
cmp
fimull
iret
aas
insb
imul
inc
lret
and
int3
mov
jno
xchg
push
push
aaa
ss
push
dec
adc
cmp
and
mov
xchg
sbb
fdivp
pop
test
cltd
push
movb
fidivrs
icebp
sti
and
xor
cmp
xchg
mov
scas
fwait
sub
push
int
addl
stc
sbb
movsb
ret
fimuls
mov
arpl
subl
ret
leave
push
mov
fidivrl
loop
adc
mov
in
push
in
xchg
pop
stos
inc
push
push
mov
mov
mov
cli
stos
jl
add
inc
das
sub
mov
fcomp
movsb
fdivrp
sbb
push
cmpsb
fwait
mov
sub
sbb
xchg
xchg
aas
mov
pushf
mov
addr16
xchg
push
fistl
mov
and
in
sbb
iret
negb
inc
nop
aad
cmp
cmc
inc
pop
add
shl
add
add
fbstp
push
mov
cmp
pop
ja
push
sbb
int
shll
js
mov
jge
mov
push
inc
outsl
nop
adc
jns
adc
xchg
add
jne,pn
adc
mov
pop
shrl
push
imul
pop
and
cmp
push
add
jnp
bound
cmp
xor
loopne
or
mov
dec
lret
in
out
popa
test
mov
sbb
push
or
mov
dec
xor
add
enter
xor
lahf
add
cmc
lea
add
and
and
lret
shl
clc
push
out
popa
mov
in
loopne
mov
idivl
inc
and
adc
cmp
les
adc
movsb
jge
sbb
insl
pop
pop
outsl
test
cmp
push
sub
mov
xchg
mov
test
sbbb
cmc
pop
cltd
mov
ljmp
push
out
push
dec
pop
out
les
idivb
jae
cmp
sarb
sub
jl
stc
inc
lret
adc
push
into
les
loope
in
and
scas
stos
sub
iret
xchg
add
les
inc
mov
pop
adc
test
jnp
rclb
and
cmpsb
or
insb
out
or
mov
mov
ror
sbb
fimull
pop
sbb
inc
loope
and
enter
mov
or
ret
lcall
mov
push
pushf
fwait
lret
xchg
out
ficoms
scas
mov
mov
or
sbb
not
mov
aaa
xchg
enter
repz
imul
into
add
mov
popa
roll
or
popf
or
call
sub
push
jne
je
mov
xchg
add
leave
testl
fistl
dec
clc
push
mov
add
pop
sub
sub
clc
lahf
cmpsl
cmp
push
cmpsl
arpl
jbe
adc
and
fidivrl
pop
mov
push
sub
lret
push
data16
dec
inc
loope
es
push
into
push
jo
addb
inc
jge
mov
stos
xchg
cltd
dec
add
or
pop
add
popa
jno
adc
or
popa
cmp
or
imul
in
cwtl
jns
ss
push
movsb
ljmp
inc
cs
arpl
push
sti
cmpsb
fimuls
mov
mov
add
add
mov
xchg
jp
pushf
in
lret
jge
ret
stos
mov
fsubr
push
out
xchg
lret
xlat
in
mov
lgs
inc
jo
loope
and
movsb
jp
mov
sub
lock
sub
popa
sub
dec
push
mov
arpl
pop
add
push
xchg
mov
es
movsb
cltd
mov
dec
inc
mov
inc
lock
dec
jae
ja
push
dec
sub
out
out
bound
inc
adc
push
in
push
nop
into
jmp
adc
xchg
imul
push
jne
ja
sahf
push
test
fildll
cmp
mov
test
sub
mov
stos
sbb
add
xor
push
xchg
mov
lds
cmp
cmpsl
sub
nop
cmc
cmpsl
imul
push
shll
mov
pop
mov
jae
nop
and
adc
and
jns
arpl
or
jb
sbb
rol
jbe
sarl
xor
ds
add
js
jne
inc
push
ljmp
stc
les
jl
xchg
ljmp
add
xlat
aam
sti
pushf
or
sbb
out
stos
sbb
ret
mov
xchg
loop
dec
addr16
adc
outsb
pop
cmp
xor
jbe
sub
xchg
add
shll
shll
xchg
add
loope
inc
inc
ror
das
inc
or
outsb
aaa
mov
xchg
aad
push
test
pop
push
jge
mov
push
cmpsb
adc
or
ret
push
mov
xor
pop
and
xchg
dec
push
aam
incb
mov
and
sbb
loopne
loope,pt
fs
dec
cmp
rorl
dec
jne
push
insb
sbb
dec
add
out
lods
stos
test
arpl
adc
out
sub
xchg
mov
fdivrl
lock
adc
and
mov
std
bound
loope
fcmovnb
lods
xchg
test
in
aad
jmp
in
push
out
or
jg
fwait
push
jae
cmc
mov
sbb
mov
fildl
push
outsb
inc
lcall
mov
mov
stos
out
js
cli
sbbb
arpl
nop
jmp
xor
aaa
cmpsb
addr16
pop
mov
call
add
mov
dec
ret
dec
out
not
mov
sub
push
add
cmpsb
test
jmp
inc
imul
inc
jg
jecxz
fs
mov
xchg
sar
or
pop
push
jmp
cwtl
mov
xchg
por
fwait
jb
out
mov
jg
mov
pop
test
mov
fs
jle
sub
lahf
repz
push
rcrb
cs
rcll
popf
shr
mov
mov
and
push
and
xor
mov
or
int3
jge
dec
hlt
pop
arpl
jmp
in
mov
xchg
mov
sarl
nop
lods
jns
push
jge
jno
add
mov
in
add
adc
push
push
fimuls
inc
cmp
sub
arpl
cmp
stc
repz
aaa
cld
xchg
cmp
and
cmp
cli
sub
sub
xchg
inc
dec
fsubs
sbb
or
mov
std
and
push
xchg
mov
ds
pop
ljmp
inc
in
lret
fbstp
dec
repz
mov
xor
mov
mov
mov
pushf
jge
fidivrs
test
aam
add
pop
jmp
cmpb
and
es
or
hlt
les
xorb
out
mov
mov
cmp
and
sbb
jbe
addr16
xor
hlt
imul
fmuls
lea
daa
cmp
cmp
xchg
repz
ret
mov
repnz
andb
xor
out
inc
pop
dec
sahf
insl
dec
jo
xor
and
in
pop
scas
pop
xchg
enter
sub
cli
sbb
xchg
mov
mov
sbb
xchg
stc
lcall
push
dec
scas
dec
jmp
mov
faddl
push
adc
sbb
cmp
out
adc
loopne
lret
mov
sbb
mov
pop
push
inc
daa
push
idivb
sqrtps
cwtl
mov
call
sub
fidivrl
mov
mov
lret
bound
xor
adc
inc
je
cmp
fwait
andl
cmc
mov
mov
xor
push
fsub
nop
pop
lahf
cmpsl
xor
inc
and
stos
aaa
cwtl
xchg
or
fadd
inc
js
push
adc
repz
xchg
shlb
inc
xor
test
incl
cs
scas
add
loope
adc
ljmp
enter
scas
sahf
jp
xchg
movsl
mov
inc
sbb
inc
test
cmp
sbb
add
rcll
lods
push
pop
lret
and
jo
hlt
and
xor
into
aas
mov
std
mov
inc
lcall
movsb
lcall
mov
mov
ja
mov
lcall
lods
repnz
mov
push
out
and
repz
cmp
mov
pushf
mov
into
pop
sbb
or
mov
sbb
jg
push
pop
inc
mov
pop
or
push
inc
mov
sbb
test
xchg
fimull
pop
adc
mov
push
pop
cmp
repnz
push
xorb
jp
mov
out
jb
mov
mov
pop
outsb
mov
in
lods
xchg
push
mov
adc
jge
mov
iret
lds
cmpsb
int
fwait
jnp
jp
jne
call
std
lea
xchg
cmp
fstpl
test
add
mov
cs
sbb
mov
xlat
push
jg
adc
aas
test
sub
cmp
aaa
pop
fwait
and
sahf
mov
cmp
push
sti
iret
push
cld
outsb
mov
mov
stc
and
pop
data16
mov
iret
xchg
and
insl
mov
inc
fists
fldt
xchg
int
mov
lea
mov
mov
frstor
call
xchg
push
icebp
lods
pop
mov
lahf
adc
mov
cmp
fdivs
lcall
sahf
fldl
orl
icebp
adc
loopne
cmp
cmovns
test
cmpl
mov
cmpsb
jne
je
sarl
push
ret
mov
loope
movsl
mov
cmp
sarb
sbb
imul
aad
outsb
mov
dec
fisubrs
or
mov
scas
pop
stos
flds
enter
jmp
xor
xchg
movsl
outsb
mov
outsb
cs
pop
je
dec
cmp
in
sub
aad
cmp
popa
outsl
daa
scas
xchg
data16
daa
mov
lret
xlat
aaa
jecxz
repz
pop
pop
int3
ds
cmp
or
xchg
stos
jmp
movsb
xor
subl
xchg
idivl
lret
sbb
push
mov
ror
mov
dec
xchg
xchg
and
div
and
les
push
pop
enter
and
insl
lcall
xorb
xor
and
pushf
xchg
inc
pushf
pop
out
cld
pushf
fisubl
jno
rol
mov
test
in
outsl
cmp
ljmp
decl
stc
or
cmp
mov
data16
enter
idivl
sub
int3
insl
adc
std
or
push
jp
mov
or
mov
lahf
and
mov
fcoml
decl
lcall
ret
cmpl
outsl
xor
in
mov
mov
mov
sub
add
mov
pop
xor
sbb
movsl
xor
sahf
sbb
outsb
rorl
dec
and
xlat
mov
das
scas
in
jns
mov
int
sub
test
xor
adc
xorb
imul
movsb
and
imul
scas
sarl
push
mov
push
pop
popa
aaa
or
xchg
rorl
mov
mov
fcmovne
ret
test
fisubrl
sbb
or
push
shll
lods
mov
adc
lds
push
mov
loope
push
and
and
add
fimull
or
push
iret
cmpb
test
dec
loope
cli
aad
add
mov
std
call
repz
icebp
xor
incl
sub
adc
mov
rorb
sti
ja
js
push
cmp
int3
sub
xor
testl
jmp
or
sbb
xchg
cli
test
jp
scas
mov
stc
lahf
push
push
push
ret
popl
in
fmull
sub
jmp
jmp
lret
dec
ja
xor
add
inc
pusha
adc
add
clc
sub
shrl
out
jno
data16
mov
jle
pop
dec
mov
add
xchg
leave
cwtl
xchg
jg
push
test
cwtl
popf
out
psrlq
or
pop
adc
inc
push
push
xchg
mov
aaa
repz
je
sbb
push
ret
cmp
add
adc
dec
int
icebp
or
lahf
adc
mov
test
mov
and
cmpl
out
add
sbb
fstpl
push
fdivs
jecxz
test
mov
test
incl
mov
leave
fs
pusha
addb
xchg
out
xchg
test
push
popa
gs
int3
fists
scas
dec
pop
adc
or
xor
in
mov
lcall
or
mov
iret
mov
rcrb
fwait
int3
dec
mov
cmc
repz
jo
inc
addr16
lret
push
stos
insl
inc
lcall
jl
jno
mov
jne
dec
ret
inc
or
call
cmpsl
into
mov
push
inc
insl
pop
push
mov
xor
outsl
fwait
pop
rcr
sbb
sub
adc
loopne,pt
cmp
mov
test
jnp
inc
mov
scas
dec
loope
pop
add
and
andb
mov
cmc
adc
adc
mov
aam
add
pop
int
ss
pop
enter
pop
cltd
and
int
mov
addl
cmp
cmp
and
dec
in
rcrb
xor
add
jecxz
pop
repz
cmp
and
mov
adc
sub
pop
out
movsl
lds
das
stc
out
push
and
xchg
mov
jecxz
in
xchg
xchg
incl
jmp
jge
or
xor
jnp
sbb
mov
pushf
movsb
xor
adc
sahf
push
or
push
ret
pop
in
sbb
inc
mov
push
cwtl
rolb
fadds
xlat
push
aas
stos
loope
push
sahf
xor
insl
add
stc
jecxz
frstor
cli
and
mov
sbb
mov
sti
dec
fxch
fldenv
mov
jp
push
insb
das
mov
pushf
insb
rol
ret
in
xchg
and
pop
stos
pop
jg
ljmp
jnp
inc
push
rcl
iret
sahf
loop
aad
mov
inc
roll
mov
cmp
repnz
fidivs
pop
and
mov
add
push
outsb
push
pop
pop
pushl
pushf
sub
sbb
sar
lea
jge
popa
out
xlat
mov
inc
lds
push
sbb
pop
jae
mov
push
lds
outsl
ljmp
add
pop
pop
xlat
outsb
push
dec
scas
sbb
icebp
or
and
cmp
loopne
pop
fidivrl
add
frstpm(287
aaa
mov
in
lahf
mov
mov
pop
mov
movsl
test
push
insl
ror
mov
jbe
dec
aad
dec
sub
or
stos
sbb
dec
and
mov
or
in
inc
insb
pop
add
cmp
imul
cmpsb
mov
je
insb
push
hlt
mov
std
mov
es
inc
and
and
mov
testl
jns
imul
or
sbb
add
lcall
push
adc
fsubs
and
rclb
sub
iret
dec
mov
fidivl
enter
repz
inc
sbb
cs
inc
dec
sub
sbb
cmp
lahf
pop
js
gs
mov
adc
fsubrs
int3
push
dec
shlb
clc
inc
sbb
jge
sbb
ss
inc
mov
cwtl
pop
imul
icebp
adc
sub
je
aaa
sub
arpl
fs
lods
sbb
pushf
test
mov
jl
ljmp
xchg
clc
shr
cltd
add
loopne
subb
xchg
ds
adc
sub
mov
or
pop
dec
jp
jmp
cmc
jne
sbb
adcl
xchg
pop
scas
les
push
xor
xchg
outsb
insl
cmp
mov
cltd
add
shll
dec
xchg
cmp
jno
bound
xlat
mov
or
sbb
lret
xor
pop
cmp
jge
adc
imul
mov
lahf
inc
pop
es
inc
cs
lret
adc
lea
rclb
pop
add
mov
inc
add
cwtl
aaa
inc
test
xchg
pop
cltd
fwait
movb
fnstcw
adc
pop
xchg
or
icebp
jb
and
daa
inc
outsl
hlt
or
mov
mov
sbb
lock
iret
gs
fildll
mov
jecxz
aam
filds
jb
push
dec
push
int
jns
jb
ds
xchg
mov
xor
xchg
flds
test
adc
jae
cltd
cmp
repz
mov
cmc
dec
and
mov
sti
imul
or
sub
std
data16
add
pop
mov
or
sar
mov
pop
jecxz
fcomps
add
jmp
add
out
fwait
pop
imul
and
pop
sub
pop
lods
idivb
adc
sbbl
cmpsb
mov
data16
test
out
shll
ljmp
loope
mov
jb
push
dec
outsb
ficomps
cmp
or
xchg
pop
or
lret
and
rorl
xor
jne
add
jg
repnz
ret
cs
test
inc
mov
std
inc
popa
hlt
daa
adc
sbbb
int
inc
and
jae
cltd
xor
adc
enter
ss
ds
mov
jg
push
mov
sbb
or
loopne
fldl
xor
cmp
mov
add
and
sbb
nop
lahf
out
xor
lds
loopne
sub
mov
push
mov
mov
jge
iret
mov
fwait
mov
roll
inc
dec
inc
leave
push
lea
rorb
inc
sarb
mov
jnp
add
loopne
das
mov
xor
push
fwait
test
jl
aas
addb
inc
xchg
shlb
jns
movsl
clc
movsl
lods
mov
fs
jne
cmp
std
out
mov
lret
js
xor
or
dec
sbb
aaa
mov
jnp
movb
mov
mov
add
or
pop
xchg
rcrb
js
jge
loopne
pushf
ja
fmull
jb
or
imul
in
sbb
cmp
jmp
xor
and
mov
sbb
outsl
push
loope
and
jne
pop
mov
jns
fs
xchg
mov
bswap
xlat
scas
adc
in
push
leave
dec
push
in
daa
movsl
pushl
insb
cmpsl
inc
mov
imul
sahf
mov
imul
sub
pop
inc
lret
call
enter
jne
push
call
pop
loopne
movsl
loopne
sbb
leave
mov
int
xchg
push
movsl
popl
cli
push
enter
shlb
lret
imul
repz
lds
call
xchg
lods
push
mov
dec
pop
or
jmp
cmp
nop
or
cld
sbbb
lcall
mov
scas
les
sti
or
rorb
mov
xchg
xchg
push
xor
mov
jbe
adc
pop
hlt
mov
in
movsl
xor
ss
arpl
lret
sahf
scas
mov
ret
int
les
jb
pop
inc
je
jp
ret
jmp
mov
sahf
push
sti
dec
loopne
sbb
ss
pop
bound
push
adc
in
mov
push
test
iret
jp
mov
nop
fsts
lret
sbb
test
popa
mov
mov
sbbl
enter
inc
mov
xchg
xchg
jecxz
lods
je
xchg
mov
pop
test
sub
push
shl
xchg
inc
pop
xchg
aaa
cltd
push
push
rcrb
outsb
shlb
les
bound
jno
inc
xlat
fcompl
sbb
push
cmpsl
lods
or
mov
sbb
cmp
lods
or
or
mov
jbe
shll
popa
dec
out
pop
xchg
add
popf
shl
push
out
jp
fs
data16
mov
loope
test
imul
xor
hlt
jmp
in
sbb
xor
pop
mov
movsl
and
xor
sbb
xchg
inc
inc
popf
movsl
sub
sbb
sub
jo
lock
fstps
test
inc
push
out
or
in
mov
mov
cld
xchg
pushf
mov
imul
sub
test
es
cmp
sahf
sbb
pop
push
xor
mov
iret
je
mov
jle
cmpsb
push
xchg
adc
pop
fldl
div
imull
pop
data16
ljmp
inc
add
mov
leave
movsb
mov
lods
sti
adc
dec
out
lock
cmc
ljmp
adc
js
loop
mov
shrb
sub
pop
lahf
push
push
mov
int
icebp
push
ss
jge
pop
addr16
push
fdivs
std
cmc
xchg
ret
mov
js
or
push
jb
stos
xchg
sbb
xchg
lds
test
jmp
mov
mov
dec
fisubs
subl
jo
xor
int
or
ja
loop
imul
push
push
adc
in
jbe
imul
jae
ds
das
cmp
sbb
popf
int3
sbbb
sarb
inc
mov
jae
scas
add
mov
inc
add
cmp
negb
cmpsb
mov
add
sub
mov
adc
repnz
shr
adc
push
pop
mov
adc
repz
add
out
divb
pop
or
mov
ja
lock
jmp
and
iret
or
repnz
stc
test
cwtl
aam
dec
fwait
sarl
adc
sub
sahf
in
cmpsb
adc
sbb
sub
mov
repz
cli
das
push
and
lcall
fdivrs
jl
push
iret
jne
gs
idiv
xchg
cmp
xor
hlt
inc
mov
dec
cmp
and
add
ss
insb
lret
sbb
sub
xchg
rolb
stc
fldenv
pop
push
adc
sahf
adc
add
inc
push
dec
push
outsl
xor
jle
push
bound
dec
dec
ret
test
testl
pop
aam
outsl
xchg
js
outsb
cmpsb
stos
dec
loope
sub
or
ja
sub
add
pop
pusha
fmul
push
cli
add
jno
shlb
and
cmpsl
out
pusha
mov
inc
pop
add
aaa
jno
cwtl
pop
mov
add
or
push
lods
div
add
add
insl
loope
add
pusha
sarl
sub
mov
adc
pop
jp
ret
mov
daa
mov
fildll
repnz
mov
sbb
ljmp
mov
movsb
fcom
imul
xchg
xchg
mov
shll
cltd
and
lea
iret
je
inc
adc
jg
push
cmc
scas
sar
test
insl
les
adc
dec
jmp
ja
jmp
push
lods
dec
je
xchg
fistps
lock
sub
pusha
inc
call
xchg
xor
lds
dec
imulb
jge
push
adc
xor
aas
outsl
into
jo
shrb
ret
pop
add
lret
addr16
mov
ljmp
pop
add
xor
jne
add
outsb
mov
mov
push
pop
shrb
add
fdivrs
out
xor
push
jp
adc
ficomps
sub
out
pop
std
xlat
outsb
lods
lret
jl
aas
lea
outsl
inc
outsl
pop
cli
loopne
xchg
pushf
lea
pop
fwait
push
sbb
int
mov
je
cmp
out
sahf
cli
jp
mov
mov
fimull
je
pop
pop
inc
inc
cmp
pusha
aas
mov
cwtl
lods
jp
pop
sbb
push
mov
mov
cli
mov
or
lahf
lods
ds
test
add
call
icebp
in
lods
addr16
lret
inc
push
faddl
jle
imul
call
push
fcmove
mov
sub
movsl
fsts
fisubs
jb
sub
mov
cld
cli
test
pusha
cld
fdivs
xchg
rorb
add
rcrl
sbb
xor
jge
and
push
imulb
or
ret
adc
mov
das
lods
xlat
sar
fst
filds
or
popl
cmp
lret
sbb
mov
mov
rclb
mov
hlt
aam
add
push
add
mov
mov
ret
je
inc
fmull
pop
subb
stos
fs
dec
add
fwait
outsb
xchg
or
mov
ret
xchg
negl
sti
out
movsl
jnp
jae
outsb
mov
aas
sub
mov
aas
mov
jl
push
jne
push
xchg
xchg
sbb
clc
arpl
cmp
arpl
adc
popf
mov
inc
mov
push
cmp
std
out
lock
mov
insb
mov
icebp
leave
push
or
jns
lods
xor
jae
and
push
mov
mov
out
pop
mov
test
lret
shrb
dec
shrl
mov
aaa
dec
mov
xchg
aam
mov
movsl
push
cs
mov
jae
call
ret
inc
xlat
mov
sub
stos
jmp
dec
sbb
add
adc
sarl
cmp
imul
stos
mov
aas
vpsubsb
cwtl
xchg
push
std
xor
lock
sub
mov
push
xchg
cmp
imul
add
insl
mov
mov
out
test
aam
inc
push
ficoms
push
or
test
repnz
push
fidivrs
sbb
cmp
das
popf
push
rcl
das
pop
lods
xor
add
inc
test
and
cmp
mov
or
dec
pop
outsl
mov
lods
arpl
loopne
fwait
leave
rol
mov
add
jbe
add
add
sti
xchg
insb
std
pop
ss
pushl
dec
sbb
rclb
or
sub
mov
repnz
es
jmp
stos
and
cmp
cmpsl
scas
sbb
add
cmp
call
movsb
fwait
mov
inc
mov
inc
insl
xlat
call
pop
fldenv
scas
lcall
out
movsb
stc
jl
and
push
mov
addl
ljmp
mov
xchg
mov
das
xor
fwait
jbe
mov
sbb
mov
mov
mov
movl
xchg
std
add
pop
and
pcmpgtd
ljmp
sti
add
movsb
jmp
adc
push
xchg
xor
pusha
dec
dec
ja
lea
mov
cltd
adc
ret
dec
mov
jp
mov
pop
push
or
pop
es
mov
ljmp
aam
pop
fdivl
cmp
scas
lcall
xchg
int3
sub
dec
in
and
hlt
mov
daa
sbb
cwtl
jmp
insb
inc
mov
lahf
or
mov
lock
pop
sbb
and
sub
inc
ja
pop
fnsave
lds
fwait
or
sub
xor
cmp
scas
add
aad
xor
add
rcrl
jle
inc
pusha
out
shrl
inc
cmp
lret
ret
aam
stos
inc
out
out
sarl
ljmp
scas
andl
repnz
mov
cmpsl
scas
out
or
inc
mov
repnz
pop
pop
mov
sbb
out
push
jp
push
bound
xor
jno
push
test
sbb
xchg
decb
cld
ja
cmp
pusha
jbe
rcl
adc
cld
pop
test
jb
dec
adc
pop
sub
push
jecxz
lret
jle
xchg
aas
outsl
adc
int
popf
rcrb
cmp
movhlps
repnz
mov
sub
or
dec
and
mov
cmp
outsb
adc
mov
les
mov
cltd
int
pushf
popa
xchg
mov
int
cmp
push
inc
add
ja
cwtl
aam
je
std
cmp
hlt
imulb
fucomp
jl
imul
sub
out
scas
dec
imul
out
pop
iret
ss
and
out
dec
jbe
cmc
xchg
sbb
cmpl
xor
push
push
push
movsb
cmp
lods
icebp
dec
or
push
xor
inc
je
fisubs
mov
mov
add
cltd
jae
outsl
fwait
push
mov
lret
xor
iret
wrmsr
lcall
adc
loop
fcoms
xlat
aas
out
icebp
jl
add
pop
mov
push
test
xor
inc
push
mov
mov
push
mov
adc
aaa
xchg
into
xor
stos
mov
sbb
pushf
shr
iret
sbb
or
cmp
out
pop
pop
hlt
pop
jno
pop
jb
mov
push
xchg
popf
les
inc
cwtl
jae
or
xor
inc
cs
stos
jne
cwtl
hlt
call
sbb
push
pop
add
fdivl
call
enter
rorb
fidivrl
imul
cmpl
adc
test
data16
das
rcr
fwait
cmp
repnz
pushf
cmp
xchg
sbb
xchg
jb
daa
xor
dec
std
popa
imul
xchg
rclb
push
jbe
loopne
push
in
scas
and
ja
xchg
pop
test
push
repnz
xor
test
jmp
adcb
mov
aaa
sub
in
mov
jmp
sbb
cwtl
sbb
fdivr
sbb
cmp
insb
std
mov
jo
addr16
mov
mov
pop
call
leave
idivl
fmul
mov
adc
adc
or
ja
xchg
add
dec
mov
jb
fnsave
arpl
add
pop
outsl
repnz
mov
mov
jns
pop
adc
pop
out
popl
add
lods
sub
mov
mov
pop
sub
mov
dec
not
cli
push
lahf
pop
sbb
mov
andb
cmp
cld
in
jg
in
iret
dec
frstor
sbb
fidivrl
loope
popl
mov
xor
sub
scas
and
loop
loopne
cmpsl
sub
cmc
inc
or
mov
xchg
jecxz
fwait
push
ret
cmc
mov
loopne
out
sahf
pop
mov
lcall
jb
aam
ds
std
or
xor
loope
mov
out
mov
push
fstp
adc
push
ret
nop
sbb
sub
push
xorb
or
mov
fs
pop
dec
lret
out
sbb
outsw
test
xchg
fwait
stc
cmp
lret
mov
out
sti
jmp
sahf
adc
in
ret
movsl
sbb
pop
push
adc
pop
loope
jne
sub
pushf
push
inc
lret
and
cwtl
es
je
jmp
xor
ss
addr16
jle
ficoml
call
or
leave
mov
ss
lahf
test
shl
and
repnz
sub
mov
jb
movsb
mov
popa
test
xor
cltd
pusha
in
enter
jmp
pop
aaa
imul
or
lcall
cld
test
cmp
jge
mov
xor
movsb
mov
jne
inc
dec
movl
pop
dec
scas
movsb
imul
rcrb
scas
and
inc
jge
loope
xchg
sti
lret
sub
sti
pop
lret
sub
dec
pop
jns
iret
xchg
lret
hlt
lcall
pop
and
jnp
xor
jmp
subb
pushf
shlb
sub
cltd
test
insl
arpl
fwait
pop
mov
out
pushf
pop
dec
cmp
jmp
in
mov
gs
mov
ss
xchg
pop
gs
mov
dec
stc
pop
std
add
inc
add
pop
pop
daa
ja
fs
fists
fmuls
or
sub
adc
xlat
sub
pop
inc
jo
push
xor
add
sbb
std
push
xchg
je
insb
test
mov
jo
das
in
mov
cmp
cmpl
pop
push
lods
mov
or
rcll
xchg
jno
push
cli
scas
mov
mov
or
cmp
scas
or
jl
nop
int
add
shrl
scas
push
movl
xchg
shlb
in
inc
scas
jg
xchg
push
dec
loop
fildl
dec
jbe
ss
xchg
in
jnp
add
mov
add
aam
sbbb
mov
cli
ja
rorl
fisttps
sub
out
out
xchg
dec
mov
fs
movsb
adc
cli
addb
popa
outsl
nop
sbb
jmp
out
test
jae
mov
sbb
dec
icebp
lret
adc
dec
sub
inc
sbb
pop
mov
fnsave
ret
mov
add
loop
nopl
icebp
cmc
stc
sub
pop
enter
push
iret
mov
jmp
scas
mov
sub
cltd
cmpsl
and
jo
out
push
mov
xor
sub
xor
pop
and
or
je
xchg
mov
lret
arpl
xor
jns
push
std
lock
out
xchg
pop
mov
dec
repnz
jne
int3
dec
test
xor
mov
icebp
ret
mov
dec
lahf
es
xor
rorb
je
push
ficomps
dec
fdivrl
or
fadd
orb
lock
xchg
xchg
popa
pop
fisubl
into
or
add
jp
lock
sub
inc
in
mov
aaa
ja
popf
pop
je
sahf
lods
fisubs
or
daa
jne
stc
test
out
fldl
xor
mov
mov
xchg
xchg
inc
adc
add
loopne
pop
scas
inc
in
xor
jae
mov
mov
int3
add
inc
cs
xchg
cmpsl
fldl
out
notl
cmp
inc
mov
sahf
pop
dec
push
int
out
fnstenv
xchg
and
sub
cmp
sbb
scas
incl
leave
add
leave
pop
stos
dec
insl
ds
dec
rorb
rclb
movsl
mov
hlt
mov
push
xlat
push
gs
iret
aad
dec
jbe
jne
inc
iret
cli
call
nop
outsl
inc
stos
push
les
and
es
jne
inc
sti
mov
fsub
mov
mov
mov
inc
adc
cmp
xor
push
stos
test
mov
stos
push
mov
cmp
out
lods
pop
ja
inc
sbb
stos
xchg
adc
je
mov
loope
cs
sbb
lret
xchg
out
fbld
adc
sbb
mov
int
dec
pop
ret
aad
add
sbb
jg
pop
int3
jecxz
add
or
out
out
pop
sbb
filds
jb
or
daa
pop
into
test
inc
call
sbb
inc
arpl
cmpsb
mov
xor
pop
push
outsl
and
xor
popa
adc
xor
xor
popf
cmp
push
outsl
mov
movsl
mov
and
sahf
add
in
inc
adc
ds
and
xchg
xchg
or
fsts
sahf
outsb
xor
mov
and
lcall
shll
incl
loop
dec
cmp
pop
push
stos
jg
scas
cwtl
ret
pop
inc
add
daa
jb
icebp
ljmp
imul
js
lret
jb
iret
push
das
rcrl
movsl
inc
mov
xchg
sbb
jnp
psubw
dec
xor
in
and
pop
leave
adc
push
sub
cmp
out
jecxz
jbe
jp,pt
and
push
mov
jae
bound
and
inc
jle
testl
pop
push
cmp
jbe
add
sub
lods
in
inc
fisubl
mov
fstps
add
pop
in
xlat
fwait
inc
bound
mov
lret
push
bound
flds
pop
adc
push
dec
pusha
jno
or
jl
rclb
insb
lods
sbb
mov
or
xchg
push
clc
mov
dec
pop
sahf
out
sbb
pusha
push
pop
std
or
jns
aam
out
sub
xchg
shlb
aam
mov
mov
loopne
adc
jno
rorb
scas
scas
jne
xchg
xchg
insl
dec
test
xchg
jno
add
popf
jns
rol
lret
jle
popf
push
adc
call
orb
xchg
in
adc
pop
out
xor
or
sbb
dec
cli
xchg
push
arpl
test
sti
xchg
mov
lret
mov
mov
push
inc
adc
imul
std
data16
popf
repz
cmp
pushf
push
call
lock
inc
fdivr
add
shrb
insb
inc
dec
add
push
arpl
outsb
in
mov
mov
out
cmc
jo
xlat
and
xchg
push
lods
out
xor
insl
lods
mov
mov
jl
mov
xor
or
mov
dec
test
sbb
xor
add
jp
lahf
xchg
insl
mov
or
ss
sbb
dec
jmp
lods
cs
or
mov
bound
leave
loopne
cmp
xor
popa
add
neg
sub
bound
sbb
popa
jbe
ror
sbb
adc
inc
push
out
pusha
mov
cmc
loopne
jo
arpl
pop
stos
push
adc
sub
adc
mov
out
dec
push
rcll
imulb
stc
fcomip
jmp
fimuls
in
andb
and
sbb
test
cmpsl
ss
and
jbe
cmp
jg
test
xchg
sbb
stos
mov
mov
mov
into
cmp
popf
jne
xor
loop
cmp
and
negb
cmpsb
push
sub
push
sub
int
fnsave
into
and
in
test
xor
jbe
adc
ror
pusha
test
pop
xor
mov
add
mov
arpl
xchg
pop
jb
or
sub
cmpsb
sbb
das
sbb
cli
imul
daa
jmp
adc
dec
repnz
imul
clc
adc
sub
out
les
mov
add
xchg
xlat
push
std
shlb
outsl
and
fs
dec
sbb
mov
test
dec
sbb
cld
in
lock
popa
xor
push
test
jmp
pop
in
inc
lret
push
mov
mov
je
clc
enter
and
rcrb
out
out
sub
cmpsb
mov
xchg
xchg
pop
out
or
in
sbb
push
cltd
fisttpl
pop
in
cmp
jmp
in
jge
cmp
loopne
pusha
sbb
add
ret
xchg
inc
mov
add
push
cli
push
and
jae
inc
sbb
xchg
outsb
sbb
fdivr
popa
pop
jle
jno
mov
pop
dec
test
add
js
fmull
test
aaa
cltd
std
mov
int3
xor
push
cld
mov
pop
mov
aad
dec
scas
ret
movsl
jl
sub
aas
mov
push
shll
pop
in
push
ja
loop
add
cmp
jbe
sub
dec
inc
pop
inc
lretw
inc
jo
pop
pop
inc
loope
bound
dec
cwtl
ss
faddp
jmp
mov
sub
xor
addl
cmp
jno
push
mov
stos
dec
lret
mov
ja
std
jbe
adc
push
jg
push
add
int
add
cmp
dec
into
dec
fisubs
sub
or
mov
mov
mov
bound
xchg
inc
into
push
test
push
dec
test
es
ds
lods
loopne
sbb
mov
jns
test
jl
fists
cmp
test
gs
lret
jne
hlt
or
cmpsl
inc
add
mov
aas
fstpl
cltd
mov
jbe
cmp
test
shrl
mov
jbe
pusha
cs
push
rcrl
xor
adc
sub
cli
mov
push
add
std
adc
ret
add
xchg
jp
sbb
fsubrl
stos
fcomps
outsl
out
pop
leave
movsb
jns
cmp
insl
xchg
aam
stos
cmp
cmp
mov
ret
movb
ret
lds
inc
jae
in
sub
jecxz
in
dec
jge
dec
jno
repz
andl
cwtl
add
ljmp
jp
cmp
adc
ret
xchg
push
out
aaa
ds
pop
jns
in
mov
sub
and
xchg
pop
je
pop
xchg
int
shl
stc
push
sub
push
popa
mov
sub
imul
add
pop
mov
das
cmpsb
test
adc
inc
pop
adc
xchg
rcr
lcall
dec
mov
push
out
sbbl
push
jecxz
rcrl
jl
xchg
mov
sbb
sahf
repnz
fistps
add
xor
cmp
push
pop
pop
sahf
jne
gs
cmp
shll
xor
inc
imul
jb,pt
pop
mov
dec
in
jg
sub
xor
jle
xchg
inc
stos
aaa
or
pop
cld
int3
loopne
dec
cmp
pushf
fs
mov
push
fisubrl
pop
and
or
call
jl
cwtl
or
jae
sub
test
lods
jle
or
or
add
mov
test
repz
dec
dec
stos
shl
pop
mov
mov
lds
lea
aad
adc
js
cmp
fsubp
adc
mov
fisttpll
aad
sub
jge
fimull
pop
sarl
bound
aaa
clc
lcall
mov
dec
xor
stos
test
xlat
xor
popf
push
xor
pop
sar
lahf
add
fldt
sub
mov
mov
add
out
xchg
and
adc
outsl
adc
fmuls
xchg
idivl
dec
stos
aaa
or
xchg
ljmp
inc
cmp
or
inc
out
mov
negb
dec
repz
jle
adc
mov
xor
cmp
hlt
jmp
cmp
xchg
and
and
icebp
cwtl
inc
lock
jae
inc
movb
call
mov
sub
stos
dec
push
xor
cltd
dec
shll
sub
inc
imul
lcall
mov
testl
into
pop
mov
iret
popa
jns
cli
pop
sbb
sbb
lods
fs
cmp
lea
loope
xchg
loope
xchg
lcall
shr
leave
clc
fucomip
stc
xchg
sub
pop
dec
dec
mov
jo
out
idivb
fld
xor
stos
outsb
dec
sub
arpl
jne
faddl
pop
pop
xchg
pushf
jp
loope
and
mov
andb
jecxz
add
add
push
adc
dec
fisubs
dec
out
pop
and
inc
popf
daa
pop
cmp
addr16
or
mov
sbb
mov
ss
cli
nop
popf
lret
sarl
out
test
push
rolb
cld
sbb
fnstcw
dec
scas
movsb
out
pushf
mov
sub
lea
in
cs
cmpsb
in
xchg
and
inc
cmp
ficoms
xchg
and
lcall
inc
imul
sti
fcoml
xor
notl
test
call
jmp
lret
jmp
sub
and
jle
fsubr
xor
gs
punpckldq
cmc
daa
mov
dec
fwait
stos
leave
sub
mov
cmc
stc
ja
pop
aaa
sbb
cmp
and
sbb
inc
movsb
pop
flds
push
aaa
sbb
push
andl
mov
rcl
sub
or
add
imul
rorl
jmp
nop
in
and
mov
inc
cld
push
iret
jb
pop
into
dec
sbb
aad
shll
push
std
or
jle
xor
pop
push
das
test
sbb
xor
fcoms
xchg
mov
xchg
jmp
mov
adc
call
sbb
das
cltd
out
mov
imul
mov
loop
cs
push
incb
ret
stos
insl
dec
xor
push
mov
and
dec
les
imul
fnsave
ljmp
sub
xchg
cmc
mov
cmpsb
addr16
in
iret
push
mov
lcall
mov
mov
mov
mov
push
addr16
mov
out
xor
cmpsb
movb
insl
and
add
lods
pop
stc
fs
push
pop
shll
xchg
add
scas
fisttpll
cmc
pop
xlat
push
mov
stc
ret
lods
scas
ds
jb
xchg
or
xorl
or
pop
mov
pushf
cli
sub
inc
loope
pop
repnz
xchg
xlat
imul
out
push
pop
movsl
cmc
test
ret
cld
imul
scas
test
out
hlt
mov
push
scas
jb
xor
inc
mov
jg
out
mov
movsb
mov
pop
fcmovnu
dec
add
jl
repnz
mov
inc
dec
js
out
jp
inc
add
xchg
sub
das
bnd
sahf
add
rorb
enter
push
leave
inc
dec
mov
xor
xor
lret
imul
mov
dec
add
jge
mov
dec
mov
add
xor
adc
xor
sub
fnstcw
push
inc
jp
addr16
cltd
push
add
xlat
jg
testb
xchg
fdivl
or
mov
pop
das
sub
scas
mov
mov
sub
mov
pop
loope
stc
cwtl
lahf
or
in
cmp
mov
dec
jb
cwtl
icebp
divb
mov
pop
pop
mov
int3
stos
xchg
xor
lcall
lret
in
ja
xlat
popf
faddl
rorb
cltd
stos
cwtl
mov
cmp
and
mov
xchg
lods
sub
hlt
adc
inc
aas
arpl
test
sbb
mov
add
jno
icebp
data16
pop
mov
into
mov
movsb
popa
fisttpll
stos
xchg
pusha
icebp
outsl
inc
mov
or
dec
inc
lcall
bnd
sub
dec
mov
mov
mov
ds
cli
jle
sbb
push
cmp
sub
add
scas
bound
or
nop
pop
xchg
int3
dec
ror
pop
pop
aas
les
clc
addr16
push
mov
fldenv
orb
pushf
inc
cmpb
fimull
stos
stc
jl
add
rclb
xorl
mov
mov
test
movsb
and
mulb
and
iret
jl
adc
les
or
xchg
lds
xchg
or
mov
add
inc
jle
sahf
lds
rorb
and
add
mov
pop
out
cmp
dec
mov
mov
cltd
rolb
or
pop
mov
sbbl
cmpsl
pushf
ds
imul
fs
fwait
dec
popf
aaa
pop
cmp
enter
push
mov
les
das
xchg
adc
mov
inc
push
bound
xchg
dec
pop
int3
mov
xor
mov
out
jg
jp
loop
lds
fdivr
push
in
add
mov
xor
adc
xchg
insl
jecxz
cmc
ficoms
mov
jne
adc
rcrb
pusha
pusha
or
push
pop
loope
add
mov
dec
xchg
jbe
xchg
loop
mov
fbstp
int
jp
mov
mov
loop
ret
lods
loope
imul
xor
shll
not
sbb
add
mov
or
sbb
ficoml
in
adc
sbb
imul
das
ja
dec
push
sbb
imul
and
sub
lahf
xchg
insb
aam
addr16
popa
push
ja
cmp
and
mov
dec
inc
lock
outsl
adc
fucomp
pop
inc
adcl
int
add
sbb
ret
cmp
fisubrs
fmull
mov
shrb
adc
ror
jo
mov
xor
push
dec
sbb
cltd
decl
jbe
test
loopne
xor
int3
js
popa
jo
pop
gs
lods
dec
jbe
push
jae
sbb
sbb
dec
push
push
ja
inc
fwait
popf
lods
and
and
inc
sahf
scas
sahf
adcb
push
cmp
pop
lcall
sbb
cld
sbb
aad
ljmp
mov
push
pop
cmp
sub
mov
sbb
in
push
jno
jmp
mov
pushf
data16
rcl
pop
push
xor
adc
lods
pop
andl
es
outsb
and
lret
jo
pop
in
int
xchg
push
jecxz
lret
xchg
fsts
fidivl
insb
movsl
pop
add
mov
pushf
loop
push
mov
inc
cltd
sarb
add
test
lods
pop
ds
dec
test
icebp
xor
inc
dec
fcomps
inc
mov
mov
xchg
insb
fstps
cmpsb
xor
or
aaa
aad
pop
sbb
cmpsb
sbb
dec
and
out
fstpt
scas
pop
lds
icebp
adc
jns
cmp
inc
mov
idiv
fistl
test
pop
lds
xor
or
js
mov
sbb
std
xchg
mov
lcallw
pop
sarb
ret
inc
pop
mov
out
outsl
in
test
mov
insb
loope
cltd
mov
xchg
clc
pushf
pop
push
pop
popf
sub
mov
and
jno
jge
adc
xchg
pushf
mov
sub
fcoml
inc
ret
xor
jp
cmp
sbb
push
in
xchg
pop
add
insb
or
or
xor
jnp
push
insl
in
mov
shlb
push
dec
test
lods
and
nop
xchg
ja
stc
inc
lea
mov
mov
insl
inc
out
and
inc
mov
pop
loopne
lret
adc
add
icebp
xor
sbb
shll
cli
sar
mov
loopne
test
stc
aad
dec
les
and
scas
jns
ficomps
sub
push
out
clc
cmpsl
dec
repz
imul
int
xchg
push
push
out
pusha
stos
or
inc
xchg
cmp
int
outsb
jno
cmp
dec
fdivrs
push
jne
mov
fcomi
testl
in
out
mov
insb
fisubs
jp
clc
cmp
shlb
aaa
sbb
in
push
adc
push
jae
hlt
cmp
fidivs
pop
outsb
sub
lahf
inc
call
dec
aam
out
mov
inc
add
sbb
out
mov
pop
std
sub
mov
xlat
cmpl
add
and
fldl
mov
repz
shrl
lcall
cli
and
lret
push
mov
xchg
call
push
clc
and
jbe
push
in
dec
popf
fidivrs
add
lds
loop
ss
jg
pop
mov
sub
sbb
xchg
ret
jmp
inc
push
addr16
ror
sbb
cmp
or
xchg
jl
add
or
dec
jns
imul
lds
je
dec
andl
ret
xor
lods
mov
fildl
jbe
jo
outsl
aaa
xlat
sub
sub
cmp
or
add
ficoml
xor
mov
dec
add
popa
mov
adc
adc
popf
imul
pusha
stc
out
in
xchg
movsb
push
xchg
repz
pop
cltd
mov
inc
test
fdiv
xchg
incl
pop
or
pop
sbb
sbb
jb
jns
xor
bound
scas
add
dec
add
fmulp
xchg
jae
mov
push
push
jnp
sub
push
mov
push
lahf
lcall
scas
idivb
std
xchg
push
out
scas
daa
lcall
sub
mov
in
lock
loopne
ja
cmp
xchg
enter
cmp
outsl
dec
mov
push
shl
sub
sbb
lret
repnz
sahf
and
jmp
push
ja
aas
into
sub
or
cmp
inc
rcrl
mov
mov
rolb
repz
fistpl
inc
test
dec
push
cmp
xor
mov
scas
mov
and
inc
icebp
hlt
stos
js
stc
cs
cmpsl
daa
cli
movsb
dec
push
push
add
cld
cmp
push
jne
jbe
lcall
test
lods
dec
jmp
cli
jb
fists
push
dec
dec
popa
gs
sahf
mov
xchg
push
lahf
jae
test
xchg
insb
and
or
xchg
cmp
sar
mov
std
jp
inc
repz
mov
xchg
jbe
sub
rol
or
sti
test
push
xchg
and
xor
sbb
or
jno
and
push
fsts
push
loopne
pop
fistl
ret
cmc
add
lea
xor
jne
xchg
movsb
jae
nop
sub
inc
inc
cmp
cmpsb
or
push
data16
push
int
cmp
insb
sti
xor
mov
dec
lahf
cltd
aad
sbb
xor
jmp
jge
ror
loopne
sbb
cwtl
mov
lea
int3
insb
adc
add
nop
add
push
mov
in
dec
dec
paddb
push
rorb
frstor
inc
push
mov
addl
outsl
stos
scas
shr
mov
push
pop
add
call
mov
test
jp
add
movsb
sub
lods
mov
mov
sbb
jne
jae
jne
rol
fcoms
mov
std
pop
xchg
sahf
mov
lret
cmp
aam
dec
sub
pop
add
adc
xorl
mov
sbb
insl
mov
mov
insb
sbbl
js
dec
jno
fcmovb
sbb
ret
mov
loop
xor
sbb
je
adcb
cmp
data16
loopnew
and
rcl
popa
dec
test
fwait
cmc
popa
jp
lret
ja
icebp
jns
add
and
das
or
dec
cmp
scas
pop
mov
dec
je
enter
jae
mov
lods
xchg
inc
add
xchg
mov
xor
lds
sub
out
jge
adc
out
sarb
add
mov
pop
fimull
clc
repnz
and
push
sarb
sub
fldpi
fwait
test
sti
mov
lods
mov
imul
mov
shl
std
movsl
nop
add
mov
mov
jae
shl
jg
xchg
and
add
add
mov
xchg
mov
adcl
mov
push
xorl
jle
loopne
mov
mov
loopne
mov
int
inc
sbb
push
pusha
fwait
dec
sub
loope
xor
push
dec
mov
popf
test
popf
push
movsl
shrb
add
sbb
sbb
xchg
push
and
rcll
mov
scas
loop
fwait
sub
pop
popa
ds
cmc
pop
fistpll
insl
stc
movsb
push
cmpsl
xchg
add
jecxz
push
das
adc
adc
add
cmp
push
rcrl
ja
arpl
sbb
and
dec
movsl
adc
cmp
push
dec
out
pusha
push
divl
sub
jnp
xchg
xchg
mov
lods
mov
jmp
data16
insl
pop
inc
pop
xor
aam
pushf
jne
je
add
imul
inc
in
mov
adc
xor
push
dec
or
adc
lods
fnsave
bnd
fcmovne
jbe
test
fidivrs
leave
jp
mov
ja
lret
testl
imul
jb
into
lret
xchg
cmp
xchg
movsl
stos
lods
jo
mov
cmp
mov
pop
mov
imulb
xor
cmp
ljmp
sub
nop
lret
fs
push
mov
xor
push
cmp
jp
xor
pushf
inc
mov
push
ret
cmpsb
out
and
sbb
in
mov
cmc
xor
or
mov
push
xor
fistps
out
mov
shrl
mov
cmc
std
xor
push
mov
std
insl
sub
add
mov
pop
and
fcom
adc
fidivrl
push
inc
test
pusha
les
jmp
arpl
mov
mov
jle
and
xchg
aas
stos
push
mov
xchg
fcomp
adc
dec
or
arpl
fldl
jecxz
insl
mov
pop
mov
lret
mov
sub
cmp
arpl
mov
pop
movsb
test
dec
popa
adc
loope
cli
out
xchg
and
lods
mov
into
xchg
clc
add
mov
dec
adc
enter
arpl
insb
inc
out
nop
xchg
mov
int3
ja
pop
or
lahf
insl
jbe
inc
mov
and
lcall
push
mov
shll
sub
adc
bnd
mov
jle
xchg
test
mov
xor
jbe
inc
lods
test
rcll
shlb
leave
inc
or
mov
xchg
xor
stos
aad
mov
jecxz
cld
adc
xor
fwait
int
ds
fistps
cmpsb
jmp
fwait
stos
lds
push
ret
sub
add
dec
sahf
jne,pt
inc
pop
ss
out
push
jg
cli
subb
cmp
and
push
mov
and
std
sti
or
arpl
rorb
fbstp
aad
sti
lds
push
dec
stos
xchg
xchg
or
orl
xor
cmp
out
fdivrp
cmp
mov
cmpsb
sub
xchg
or
inc
inc
fimuls
mov
sahf
push
test
inc
repnz
sahf
das
mov
mov
pop
inc
jnp
inc
test
and
in
or
mov
inc
jmp
fnstenv
mov
cmp
int
lahf
sahf
jecxz
stos
sti
loop
xchg
mov
adc
cwtl
aas
sbb
adc
aad
push
rolb
push
sub
adc
mov
xchg
push
in
int
rep
push
xlat
cmpsl
out
push
leave
sbb
sbb
adc
cmp
repz
inc
sbb
int3
fs
inc
and
incb
neg
ljmp
xchg
outsb
xor
cmp
out
movsl
adc
addl
movsb
dec
mov
pushf
cld
gs
xchg
mov
test
xchg
pop
mov
sub
stos
ljmp
sbb
lock
inc
dec
filds
lret
loop
cmp
mov
mov
movb
and
mov
js
stos
xlat
mov
cmpsb
and
pop
rcl
or
and
pop
lcall
ds
pushf
and
xchg
fld
xchg
inc
xor
loopne
sbb
fistpll
cmp
inc
mov
insb
cld
mov
gs
cmpsl
frstor
jg
mov
fs
inc
inc
xchg
ljmp
fstps
test
es
pop
ss
jg
mov
mov
out
shll
pop
mov
aaa
lcall
jle
mov
pop
movsl
lods
dec
pop
imul
insb
cs
sub
jg
fsubp
sti
cli
jae
dec
cmpsb
sub
lret
fcomip
aas
xchg
mov
sub
fwait
pushf
stos
fsub
inc
adc
int
bnd
repnz
mov
loope
fstps
test
cmpsb
or
rclb
fsubr
push
rcrb
dec
pop
add
mov
rcl
pop
iret
add
cmpsl
xor
push
mov
dec
test
jno
fwait
xchg
je
popf
adc
mov
outsl
push
and
std
icebp
pop
cmp
je
and
add
push
xchg
xchg
add
dec
inc
cmp
cwtl
imul
add
inc
pop
mov
jne
mov
xchg
mov
inc
in
sbb
xchg
out
arpl
cmc
lahf
mov
lds
and
inc
dec
stc
push
push
dec
xchg
xchg
pop
bound
xor
dec
cwtl
xchg
in
cli
lcall
ret
fidivl
shrl
out
or
enter
insb
fcmovbe
or
jnp
int
imul
mov
jbe
sub
movb
adc
ja
jmp
jmp
or
or
iret
lret
or
inc
stos
loop
aaa
movb
ficoml
sbb
fnsetpm(287
push
adc
sbb
sub
iret
cmp
inc
test
and
adc
js
cmp
jecxz
cld
sahf
pop
lret
push
imul
repnz
ljmp
jg
lahf
adc
sbb
test
ja
out
ss
jbe
insb
jns
jmp
testl
lcall
xchg
push
jg
cmp
mov
jg
sbb
cmp
jle
or
out
dec
lahf
sub
fcmovb
jbe
cmpsb
mov
out
movsb
lods
clc
cmpb
sub
cmp
movb
add
or
mov
loope
enter
sbb
xor
sub
push
sbb
lods
or
aaa
push
out
mull
inc
adc
addr16
push
sahf
ds
in
and
mov
sub
add
cli
mov
fdivl
xor
addr16
popa
pop
movsb
push
in
aam
xorl
icebp
xchg
jae
stc
xchg
sbb
out
mov
test
fs
adc
sub
and
stos
stos
adc
das
add
scas
out
mov
adc
les
xor
imul
enter
sbb
mov
lods
add
mov
mov
add
mov
jbe
xchg
adc
out
int
mov
add
jle
push
sub
xor
ja
mov
push
lods
mov
cli
scas
sub
inc
or
rcrb
push
test
sbb
out
mov
push
inc
jbe
int
scas
push
xor
loop
str
cmp
dec
pop
cs
adc
jl
or
clc
lret
mov
jecxz
pop
sarb
addr16
push
scas
andb
test
sahf
dec
pop
jne
mov
pop
test
cltd
daa
sbb
repz
pop
js
popa
cmc
add
fs
jns
lods
fldenv
fnsave
pop
jge
data16
xor
or
addl
pop
stc
mov
fcmovnu
jge
pop
dec
cmc
inc
sub
mov
inc
lods
xor
mov
jb
add
std
gs
jno
pop
cwtl
sbb
mov
xchg
leave
mov
xchg
js
xor
xchg
add
lock
xor
lcall
inc
or
lods
push
xlat
loop
lea
push
aam
icebp
jae
in
in
push
adc
cwtl
sub
lret
cmp
adc
lea
sub
adc
lds
cmpsb
in
fnsave
loopne
test
push
mov
scas
dec
pop
dec
xor
xchg
mov
std
idivl
add
sub
das
mov
mov
es
pop
fcoml
and
inc
out
cmp
das
hlt
lea
pop
sbbl
mov
je
in
jns
inc
jb
out
imul
jnp
mov
pushf
jb
stos
xor
cmc
pushf
add
orl
sbb
je
iret
mov
sub
dec
addr16
into
xchg
mov
xchg
lcall
aaa
imul
mov
sahf
dec
xor
push
dec
inc
inc
add
std
icebp
pop
and
lods
inc
mov
stos
insb
dec
cli
insl
or
insl
jns
mov
aam
mov
inc
nop
gs
or
sub
addb
cmc
xchg
push
mov
sbb
push
movsl
jge
pop
leave
mov
sub
mov
push
jge
fldt
pop
sub
jle
push
and
lods
scas
mov
cmc
js
inc
mov
shll
pop
xchg
test
jecxz
outsl
xor
xor
insb
fcom
sub
sbb
inc
jne
fimuls
inc
mov
cs
sar
lods
movsb
mov
dec
xor
inc
sub
inc
ljmp
inc
fdivs
and
mov
sub
mov
push
mov
pop
and
cmp
and
dec
pop
rolb
mov
test
and
xchg
mov
cld
dec
shll
clc
cmc
jne
jne
add
mov
outsl
cmp
mov
mov
aas
and
addl
pop
js
jle
js
pxor
pop
inc
adc
pop
mov
inc
inc
test
adcb
cmp
mov
add
mov
add
jle
in
imul
mov
repnz
jne
lcall
shll
add
dec
pop
mov
cli
fwait
mov
inc
stos
dec
fidivrs
adc
rol
pop
hlt
pop
enter
mov
jle
or
fildll
fdivr
outsb
mov
movsb
push
lret
lret
std
leave
xchg
mov
push
cli
sub
cmc
add
filds
pusha
xor
fsubs
aad
dec
ret
mov
push
xchg
outsl
sub
lret
push
or
push
fmul
daa
movsl
sub
sub
scas
imul
jns
push
mov
and
mov
sysexit
dec
inc
or
pop
lds
jecxz
pushf
adc
lret
xchg
sub
jo
xorl
cmpsl
pop
xor
addb
aam
cli
jnp
sub
daa
pop
imul
js
sub
fs
xor
ret
popa
sahf
arpl
mov
mov
daa
sti
dec
xor
and
lods
ja
addl
bound
lods
xor
jno
ljmp
pop
loopne
fs
cmpsl
jg
and
add
stos
xchg
mov
rclb
dec
lahf
inc
shll
mov
fmuls
and
jl
enter
out
mov
iret
dec
add
mov
outsb
lea
sbb
xchg
inc
inc
and
lods
cmp
sbb
xchg
negb
dec
adc
mov
push
dec
testb
cmp
fnstcw
outsl
lret
test
mov
pop
jg
js
fcomps
cmp
into
dec
jne
lods
stos
lds
aam
popf
push
cltd
xor
mov
repz
xacquire
xor
sbb
out
subb
out
cltd
sub
push
ss
sub
sbb
add
pop
test
repz
dec
sub
jmp
roll
pop
ret
xor
iret
test
mov
stc
scas
add
insl
loopne
fnstenv
cld
enter
clc
mov
addr16
sbb
cmp
adc
sub
and
jl
lods
sub
mov
and
mov
test
mov
movsl
sbb
xchg
jae
mov
sbb
xchg
es
xor
test
adc
ja
pop
push
loop
test
mov
dec
ds
test
fists
pop
popa
xchg
fildll
stos
pop
mov
shl
in
cli
ja
or
fcmovnu
sti
mov
les
inc
mov
lods
test
out
test
faddl
test
mov
aas
insl
jecxz
mov
sahf
pushf
ror
push
jge
or
dec
lahf
stos
mov
xchg
pushf
pop
pop
popa
in
add
push
call
mov
cld
pushf
cld
fnstcw
pop
push
adc
pushf
je
int3
hlt
repnz
push
fidivrs
stos
rorb
or
fnstenv
and
outsb
mov
pop
xchg
add
xchg
sahf
pop
andb
aam
push
mov
xchg
pop
xlat
clc
sub
in
or
or
loope
inc
pop
outsl
inc
sub
cld
fcoml
fildl
out
scas
icebp
sub
jge
xchg
mov
pop
fmuls
mov
pcmpeqw
xchg
dec
fimuls
decb
or
call
movsl
in
in
dec
mov
and
push
aas
lahf
aaa
or
xchg
hlt
dec
stos
sti
je
inc
lcall
mov
shrl
mov
mov
addr16
insl
or
mov
jecxz
int3
ds
mov
cmpsb
push
or
inc
mov
add
insb
in
xor
xchg
jo
js
call
cmp
test
jmp
and
jo
sti
cmp
sub
sbb
insl
push
xor
rcll
cmp
ds
push
iret
into
lea
into
sub
scas
sub
iret
pusha
mov
push
repnz
mov
sbb
bnd
jne
lock
mov
xor
je
movsl
insb
nop
jecxz
dec
mov
shlb
jp
bound
xchg
mov
aam
sub
mov
mov
mov
push
inc
or
ret
push
adcb
jo
ffree
sbbl
adc
push
hlt
xchg
mov
pop
pop
mov
push
pop
cmp
aaa
js
xchg
adc
sbb
cmpl
jno
sbb
mov
lret
xchg
fcoms
pop
push
out
xchg
loop
mov
xlat
call
into
xchg
adc
sub
lods
mov
adc
sbb
or
es
out
iret
pop
aam
mov
xchg
mov
out
lods
clc
shll
es
sbb
push
dec
xor
addr16
hlt
imul
popa
incl
int
xchg
and
fwait
rcrl
sub
mov
popf
fmulp
test
fbstp
rdpmc
imul
push
fdivrp
add
imulb
bound
movsb
fstpt
adc
or
xchg
pop
mov
pop
pop
std
mov
icebp
jns
in
inc
sbb
div
jmp
subb
dec
mov
loop
jge
movd
cltd
jl
inc
shrl
push
push
lods
push
dec
jle
xchg
add
lret
enter
xchg
das
dec
or
sbb
and
mov
movsb
jb
mov
in
out
or
cli
add
xor
or
hlt
sbb
imul
and
or
cmp
jne
lret
bound
push
xchg
add
xor
in
push
fsts
xor
vpaddusw
in
fnsave
or
jbe
xchg
mov
into
push
or
pop
mov
popa
jmp
jo
aam
pop
nop
pop
mov
mov
fldl2t
and
sbb
mov
in
pop
popf
mov
jle
in
pop
out
out
xchg
mov
sub
mov
mov
dec
sub
pop
lock
fdivrs
jb
and
mov
and
cmp
mov
std
test
and
sbb
jmp
lea
cmpsb
rcrb
mov
cli
mov
xchg
das
xchg
add
roll
std
out
fstpt
sar
aas
dec
jl
in
nop
jo
mov
dec
outsl
mov
adc
rcrb
iret
mov
lods
das
push
out
add
jl
or
xchg
jno
xchg
rcrl
addr16
lret
cmp
into
adc
imul
lds
popa
cmp
mov
jns
lret
cmp
js
dec
lods
jmp
in
pop
adc
inc
inc
cmp
ret
int
add
rcrl
xchg
les
out
mov
pop
fnstsw
arpl
je
or
orb
cmp
scas
mov
cmpl
iret
daa
inc
es
nop
cld
and
popf
enter
xor
enter
nop
push
stos
xchg
fidivrs
movsb
movsb
loopne
pop
data16
pop
ds
sbb
xchg
in
outsl
sbb
inc
idivl
fs
aas
sbb
shll
and
mov
cmpsl
into
icebp
incb
fwait
rcrl
lods
cmpsb
subl
sub
arpl
dec
in
pusha
mov
dec
jnp
add
hlt
sbb
mov
cld
pop
cli
shrl
add
movsb
insb
int
loopne
or
xchg
imul
xchg
and
push
mov
push
adc
push
jge
push
add
loop
sub
pop
iret
mov
aad
push
push
scas
push
sarl
sub
popa
sub
mov
mov
pop
leave
mov
arpl
sbb
dec
out
pusha
cmpsb
or
or
clc
add
aad
cwtl
mov
in
mov
fadd
fcoml
xor
stos
out
cld
imul
outsb
mov
xchg
adc
pop
dec
fsubr
test
leave
insl
outsb
xchg
pop
sbb
mov
dec
xor
sub
jnp
fdivr
repz
sahf
insb
dec
inc
stos
je
pop
fistpll
fwait
outsl
aam
jp
add
dec
cltd
push
stos
add
push
and
mov
rcl
movntps
inc
mov
mov
mov
iret
mov
dec
in
or
test
mov
pop
and
sub
in
adc
daa
lret
inc
cmp
xor
mov
adc
inc
ret
lea
ds
in
into
fcompl
fwait
cmp
pop
push
xchg
mov
inc
out
fmull
jmp
dec
jae
push
data16
lahf
push
inc
cmp
mov
add
pop
out
fsubs
sub
scas
push
ret
cmp
ljmp
xchg
cmpsb
lret
call
in
out
fidivrs
push
xor
pop
jmp
jnp
mov
scas
dec
mov
cmp
inc
push
mov
dec
sub
push
popf
in
outsl
sub
lcall
push
icebp
cwtl
mov
adc
or
mov
sbb
inc
xor
shll
xchg
xor
xchg
sti
xor
icebp
jmp
sub
ja
jle
cli
sbb
popf
mov
movsl
out
mov
jns
out
cmp
stc
sub
in
cmp
lods
aaa
sahf
add
fdivl
mov
sub
in
int3
mov
iret
sub
inc
mov
xorb
push
in
xor
mov
push
fisttpl
inc
mov
mov
dec
enter
aas
stc
xor
jne
push
cmpsl
je
sbbb
and
lods
outsb
mov
cmp
arpl
pop
cmpsl
ljmp
lret
xorl
xor
lods
mov
pop
scas
pop
leave
mov
and
and
pop
inc
or
pop
xacquire
repz
sbb
stos
nop
je
loope
leave
loopne
dec
cmp
rcll
fidivrl
sahf
pop
push
test
rolb
sub
push
push
mov
sub
mov
test
fdivl
ds
xchg
pop
loopne
mov
push
xor
pop
lcall
sahf
xchg
test
adc
sbb
mov
psllw
jo
pop
cmp
fists
insl
mov
or
out
scas
shll
pop
mov
popf
ror
notb
shlb
cltd
inc
jmp
jbe
sbb
add
jmp
mov
adc
mov
rclb
xchg
mov
mov
ret
and
cs
rorl
mov
mov
sbb
aad
pop
mov
popa
fnstenv
xlat
xchg
push
xor
mov
int3
scas
loope
testb
xor
dec
dec
jge
stc
pushw
fdivrl
push
inc
lea
inc
xchg
in
fisubl
mov
out
loope
mov
fadd
rcll
jbe
sbb
add
aad
fwait
and
in
pusha
addr16
shlb
stos
push
sub
dec
jg
mov
push
jmp
mov
inc
int3
inc
pop
hlt
shrb
mov
inc
push
xchg
jecxz
loopne
sub
mov
jns
out
pop
subl
sub
pop
mov
cmpsb
std
xor
les
gs
mov
aad
mov
clc
cmp
or
adc
cltd
inc
das
adc
lds
push
add
add
push
loop
push
nop
sarl
mov
push
bnd
in
nop
push
jns
mov
divl
test
push
mov
out
xor
pop
add
gs
xor
aas
fldcw
imul
push
call
lret
jb
xchg
mov
arpl
lds
mov
out
shrb
mov
out
pop
jle
out
test
pushf
xor
add
aam
add
jbe
sbb
sub
push
gs
mov
cmp
xor
cwtl
testl
and
movsl
mov
xor
insl
into
inc
imulb
int3
xor
fwait
test
or
mov
xchg
push
ja
icebp
mov
cli
in
lods
aam
test
adc
sub
pop
enter
testb
sbb
jnp
cld
cmp
mov
lret
mov
lock
sbb
push
subl
push
inc
rcr
lods
sti
cmp
inc
popa
or
loopne
xchg
add
cmc
mov
ret
sub
jl
mov
or
dec
sub
jg
ffree
shl
scas
shlb
jg
insb
xchg
insb
pop
cmp
shld
stc
sbb
mov
orl
xor
push
add
xchg
insl
or
stos
and
in
js
sbb
jo
setle
ficompl
push
sub
lods
sub
push
push
xchg
adc
lret
lret
aas
mov
push
lock
or
sbb
mov
fdivl
ss
jecxz
and
jbe
pop
lods
mov
dec
pop
test
xchg
inc
inc
cmc
outsl
xor
int
lock
cmc
and
sub
fsubrs
gs
fwait
icebp
pop
mov
stos
jnp
sahf
or
in
ljmp
dec
enter
sub
pop
imul
sbb
fnstcw
sub
inc
push
dec
jnp
cmp
push
aas
push
push
lea
pusha
mov
push
sbb
insl
lcall
xchg
bound
test
sub
mov
mov
ret
push
cli
std
jmp
popf
inc
imul
jne
mov
xor
fs
imul
stos
or
insb
jo
and
pop
and
sti
pop
inc
mov
ljmp
jno
out
fst
movsl
and
out
ja
push
ret
int
int
dec
or
ja
mov
repz
pop
sarb
movhlps
test
call
lds
mov
xor
jmp
sbb
lds
xchg
xchg
and
xchg
push
lahf
add
or
mov
add
cmpsl
std
int
xchg
pop
pop
xlat
mov
jle
cmpb
mov
xchg
sub
mov
out
fsubrl
sub
push
adcl
mov
fst
mov
sub
xchg
imul
inc
pop
or
pop
cwtl
mov
ss
flds
les
pushf
mov
pop
inc
lret
inc
cmp
xchg
mov
sti
adcb
ja
or
outsb
cmp
jl
loope
pusha
adc
adc
lods
ja
lahf
inc
and
and
enter
xchg
mov
aas
adc
sub
mov
ljmp
fs
cmpsb
push
inc
add
data16
add
or
lds
icebp
aaa
aaa
leave
mov
cmovns
sahf
addr16
xchg
or
push
adc
mov
aas
dec
lds
dec
push
adc
cmp
pop
sub
test
pop
xor
sbb
mov
push
movsb
mul
xchg
mov
jle
ds
jns
cmpsb
cmc
sub
in
shlb
fwait
push
push
in
dec
ja
notl
scas
pop
cmp
cmpsl
dec
xor
sti
in
or
mov
mov
jb
xchg
sbb
enter
or
pop
jecxz
lods
push
mov
dec
push
adc
arpl
subl
xor
repz
in
pop
jmp
out
cmpsl
cwtl
call
cmp
sub
ja
jnp
test
cmp
sub
pop
push
aaa
sub
mov
js
popa
in
cmp
sub
or
addr16
out
das
pop
ret
xchg
jge
sahf
fwait
mov
pop
cmp
lock
cmc
xchg
xlat
or
ret
movl
sub
inc
mov
mov
test
fisubrl
pop
nop
adc
pop
jecxz
daa
jae
cmp
dec
hlt
faddl
xchg
and
mov
aaa
fs
xchg
repnz
cmp
icebp
dec
sbb
enter
pop
imul
dec
fstpl
rclb
push
icebp
lcall
in
mov
inc
mov
push
imul
sbb
out
fdivrs
cmp
add
jge
add
cmpb
xor
pop
arpl
jne
aas
fildl
mov
jno
test
test
les
pop
dec
sbb
add
inc
jnp
adc
jg
mov
jo
mov
mov
mov
sub
sbb
push
fwait
cmp
add
lea
ljmp
pop
dec
popf
lea
mov
cmp
iret
das
insb
inc
out
ud1
add
sbb
fs
mov
adc
cltd
and
sub
or
imul
into
xchg
cwtl
dec
inc
movsb
ss
jmp
pop
cs
cmpsl
hlt
ret
pop
mov
jge
inc
cmc
test
bound
js
xchg
in
cmp
xchg
movsb
fisttps
sbb
test
push
imul
es
nop
loopne
adc
jg
jl
mov
insb
into
and
jge
xchg
mov
out
sub
jg
aas
inc
pop
or
add
ja
movsb
or
mov
mov
add
push
and
scas
cwtl
aas
fwait
xlat
jmp
mov
xor
cmp
add
lahf
cmovl
sub
add
cmp
inc
and
jnp
div
and
jae
push
sbb
popf
push
sub
push
mov
cmp
jo
stc
pop
lahf
cs
mov
test
jp
pop
and
lret
subl
push
inc
pop
mov
or
mov
xor
iret
mov
or
fsubr
xchg
jl
gs
push
xlat
xchg
sub
mov
sbb
pop
mov
out
pop
sbb
xchg
pushl
mov
int3
xor
cld
xor
pop
pop
xchg
mov
pop
mov
adc
call
or
es
lret
inc
xlat
iret
mov
xlat
xchg
mov
dec
mov
jbe
mov
cmp
jo
xor
push
xor
dec
sub
ficompl
inc
lret
jns
les
popf
test
xor
ljmp
inc
push
add
insl
mov
jmp
inc
adc
mov
inc
loop
aaa
inc
mov
push
or
jg
xlat
or
xchg
lods
scas
xor
out
js
loopne
lret
pushf
and
mov
lods
adc
out
or
mov
pushf
in
jne
mov
sub
sti
aad
insl
movl
xchg
push
cmpsl
add
insb
dec
inc
ret
notb
jge
jg
and
lods
int
xchg
imul
pop
fcoms
fistps
add
sub
xor
sbb
mov
stos
sti
mov
aam
orl
pop
jmp
push
mov
dec
test
out
ret
fwait
dec
mov
lods
push
push
mov
pop
push
add
std
nop
xor
les
xor
lret
lods
pushf
jmp
mov
nop
or
cmp
and
loopne
sbb
div
or
jae
xor
into
xor
aas
mov
leave
dec
shl
imul
aas
ffreep
dec
ds
mov
loope
repz
sbb
sbb
decl
cmp
push
cltd
mov
lahf
lods
clc
je
in
cmp
mov
stc
cmp
and
std
fdivs
in
in
jno
cmp
inc
iret
xchg
mov
test
lret
pop
add
stos
xor
mov
cmp
imul
add
cmpsl
das
pop
sahf
mov
leave
es
mov
iret
or
pop
test
push
pop
aam
aam
insl
jbe
test
dec
or
icebp
call
xchg
ja
mov
popf
andl
insl
mov
cs
clc
inc
adc
test
pop
movsbl
xchg
xor
push
dec
add
nop
cmp
mov
mov
sar
lock
jae
mov
clc
outsl
scas
out
xchg
cmp
mov
pop
aas
dec
add
fimuls
pop
dec
inc
orb
push
call
mov
divl
or
in
sub
pop
and
mov
mov
adc
aas
sbb
aaa
sarl
lret
jne
and
ss
push
subb
mov
cmovle
pusha
jecxz
sub
std
popa
in
cmc
adc
add
xor
cmpsl
orl
sub
test
popa
cmp
push
xchg
mov
xchg
or
xor
xchg
or
xchg
cmp
rolb
push
cltd
push
lds
hlt
push
rol
mov
inc
push
sbb
xlat
push
mov
scas
cmp
out
xor
and
stos
jg
ficompl
mov
adc
incl
mov
mov
call
fwait
mov
mov
nop
inc
mov
xchg
lods
gs
stos
in
fsubr
mov
sbb
jmp
out
push
cmp
insb
or
test
jl
ffree
push
cmp
add
daa
pop
out
jb
test
dec
mov
mov
or
subb
pop
xchg
stos
pusha
fildll
xchg
push
jb
cmp
lahf
mov
adc
mov
adc
mov
or
mov
scas
pop
inc
xchg
push
mov
jbe
and
mov
fcmovne
pop
mov
and
jg
dec
sub
cmp
sub
lahf
insb
imul
inc
cld
movb
or
sbb
mov
lods
sbb
xlat
lock
or
lds
pop
cmpsl
lock
push
out
sbbb
mov
mov
mov
in
pusha
sub
int3
dec
lock
mov
mov
popf
adc
xor
sti
data16
dec
jne
adc
dec
jnp
mov
mov
scas
pop
shll
loope
dec
adc
pop
ja
ret
aam
xor
cwtl
shr
ss
xor
aam
xor
jl
popf
xlat
mov
push
or
pop
outsl
adc
mov
cmp
ja
push
sbb
and
add
fsubrs
imul
lea
sub
or
jns
test
sub
lds
fcmovnb
cmpsb
adc
fwait
gs
sarl
jg
mov
mov
aam
fldl
or
in
sub
xlat
add
cmp
push
push
fstl
movsb
push
mov
xor
mov
mov
out
adc
scas
sbb
sub
add
inc
fildll
xchg
repnz
stos
lahf
js
js
stos
push
dec
fisubrs
push
sub
jecxz
adcl
inc
mov
int
add
hlt
stos
inc
loop
rcrb
pop
push
sbb
int
adc
and
cmpsb
push
out
mov
adc
bound
in
mov
call
adc
out
imul
hlt
int3
pop
int
mov
jb
in
test
leave
and
outsb
les
cmc
gs
inc
arpl
or
int
mov
lea
rclb
ljmp
inc
call
in
push
adc
icebp
dec
subb
inc
fwait
les
fisttpll
into
lea
cli
jns
scas
iret
fidivl
mov
sar
scas
jns
jmp
mov
mov
fcmove
xchg
dec
mov
xchg
cmp
insl
fwait
test
sub
out
inc
call
pop
lods
push
and
in
xchg
addr16
jp
gs
aas
mov
sub
cmc
gs
xor
fcoml
fldl
int
jg
aaa
movsl
and
pop
das
push
es
jecxz
jg
xor
in
lahf
test
sub
hlt
or
scas
add
hlt
xor
out
movsl
cmpsl
fwait
rcrb
mov
popa
mov
sahf
add
push
addr16
push
xchg
aad
out
xchg
mov
xchg
les
movsl
cmp
jae
pop
fstps
sbbb
jae
test
lods
sbb
sub
shlb
add
mov
mov
mov
or
jo
ja
inc
test
addr16
and
pop
scas
ret
push
cmp
xchg
and
cmp
lea
or
jne
fcompl
push
xor
mov
mov
mov
mov
xchg
dec
or
xchg
add
mov
test
stos
xchg
testl
pop
adc
ljmp
sbb
in
mov
mov
xor
mov
enter
fwait
pop
xchg
push
xlat
fstl
mov
cli
arpl
sbb
lea
shll
das
icebp
or
xlat
call
in
mov
sbb
sbb
test
orl
xor
cmp
xchg
add
mov
pop
pop
mov
sub
je
sbb
icebp
mov
jns
cld
sub
out
icebp
adc
lret
int
jae
lret
mov
int3
inc
fmuls
fldenv
rolb
adc
ret
or
pop
ret
jmp
mov
das
dec
pop
shlb
je
subl
movsl
and
and
mov
xacquire
fbstp
cmpsb
repz
push
dec
dec
rolb
xor
cs
shl
adc
lahf
or
test
or
add
in
pop
mov
mov
push
aad
jns
frstor
leave
sbb
in
mov
jl
add
dec
cmp
sub
in
scas
xor
aaa
xchg
cmp
stos
push
push
xchg
sbb
mov
xchg
sub
pop
imull
xor
cmp
fildll
add
and
repnz
and
cmp
imul
jo
addr16
das
push
aaa
add
xchg
addr16
mov
loop
addl
int
pusha
cmp
mov
pop
adc
push
mov
and
mov
pusha
mov
scas
std
xchg
sbb
repz
fcmovne
xchg
out
xchg
fisubrs
adc
mov
pop
and
push
push
imul
cmp
or
xchg
fucomp
out
jp
or
idivb
lcall
xor
movsb
fdivrs
sbb
adc
adc
ret
dec
xlat
testl
lcall
leave
call
adc
shl
or
enter
imul
es
jp
cmp
sub
js
in
jg,pn
les
adc
in
mov
int3
xorl
loop
mov
dec
xor
in
or
aam
insl
xor
adc
mov
and
inc
incl
jnp
jecxz
test
add
daa
xchg
cwtl
cwtl
jmp
repz
inc
sbb
imul
mov
xchg
mov
push
xchg
xchg
out
inc
movl
jge
icebp
rol
pop
push
or
bound
outsb
mov
ret
les
adc
xchg
cli
mov
imul
jmp
add
rcr
lret
or
xchg
pop
cli
fisttpl
stos
push
xor
jg
jo
loop
jmp
leave
aaa
and
out
out
lret
or
xchg
add
shll
negb
push
push
out
inc
mov
adc
jge
scas
pusha
mov
xchg
std
test
mov
push
les
push
insb
mov
les
mov
mov
test
cmc
insl
int3
xor
data16
push
inc
dec
repz
insl
insb
and
pop
sbb
mov
xlat
lcall
cmp
punpckhwd
pop
nop
and
es
rcl
dec
cli
mov
imul
dec
out
repz
xchg
pop
inc
lret
inc
outsb
mov
dec
sbb
push
sbb
and
mov
sub
ss
ficoml
pop
xchg
pop
push
mov
and
pop
cmp
inc
addr16
push
movsb
mov
jle
inc
push
ficoms
int3
jo
mov
sti
outsb
je
dec
adc
jno
call
sti
add
lret
push
jbe
arpl
xchg
adc
in
add
sahf
repz
nop
mov
push
stos
ljmp
lods
cltd
mov
arpl
lea
fdivl
stos
push
mov
mov
scas
mov
fwait
push
cmp
mov
pop
jno
mov
lret
sub
sub
lods
xor
fidivs
xchg
push
ljmp
inc
inc
and
sub
jl
in
push
xchg
xor
inc
clc
test
xchg
add
lcall
sbbb
call
pop
lret
xlat
sbb
popa
fnsave
or
add
or
rcrl
cmc
pop
cmpsb
jmp
fdivrs
mov
mov
sub
outsl
mov
pusha
adc
pop
dec
jb
sub
xchg
call
test
adc
sub
arpl
loopne
and
in
mov
and
adc
or
out
insb
or
inc
leave
lret
and
pushf
mov
pop
xlat
imul
sti
call
mov
mov
mov
adc
pop
cld
xor
pusha
mov
imul
data16
mov
lahf
lods
popf
cmp
in
and
inc
xor
aad
ds
push
mov
sub
and
lahf
stos
iret
pop
fiaddl
bound
jg
adc
push
das
je
roll
fnstcw
mov
or
add
pop
test
or
pushf
push
shlb
pop
jb
xchg
mov
xchg
ljmp
repnz
outsl
push
xor
lods
std
fsubp
or
loopne
jne
sahf
pop
push
add
and
push
call
xchg
xrelease
testl
dec
jl
in
mov
inc
sbb
adc
faddl
lock
filds
cmp
add
frndint
cs
cli
out
and
mov
mov
mov
adc
les
lods
hlt
mov
push
fucom
cmp
ret
add
cwtl
or
and
jns
pop
lahf
dec
into
mov
and
adc
ds
push
dec
int
xor
jnp
add
mov
sti
or
sbb
inc
in
mov
xchg
push
std
or
xor
rorb
ds
cwtl
addb
mov
adc
mov
lods
mov
push
xor
scas
lock
mov
outsb
cmp
mov
int
aaa
mov
or
xor
cltd
stos
aam
hlt
inc
cs
sbb
cli
inc
mov
sub
mov
adc
call
push
out
mov
add
cld
pop
jnp
or
rcrl
dec
in
cmpsl
decb
dec
loope
push
pop
jl
mov
push
loopne
gs
ss
mov
test
out
dec
sbb
fs
jmp
fimull
daa
loopne
push
xchg
cmp
pop
adc
jns
add
push
flds
and
mov
jg
lds
mov
fwait
popf
out
arpl
cmpsl
jne
into
mov
cmpsl
push
mov
loope
pop
enter
xor
cmc
cwtl
sbb
push
repz
ljmp
add
cmp
test
fistpll
aaa
cmp
ret
in
es
out
mov
cmp
or
dec
sub
sti
dec
pop
rcrb
cmp
popa
xchg
shld
out
lods
sbb
xchg
xor
lcall
in
test
xlat
fistpll
idivl
sub
mov
aaa
jne
sbb
adc
dec
mov
sbb
xorb
add
fstps
inc
and
xor
push
xchg
clc
out
ret
pop
jg
lcall
shrl
aam
test
cmp
mov
mov
jnp
and
xabort
lret
sub
jle
push
mov
inc
add
pusha
jno
shlb
sub
rcl
pmuludq
add
and
icebp
xlat
fwait
out
mov
and
bound
jmp
es
sarb
insb
cwtl
pop
push
jo
cmpsb
enter
aad
pop
lcall
push
leave
cwtl
in
push
dec
adc
sub
pusha
fsubrs
aam
xchg
stos
test
jae
add
push
dec
das
push
fs
popa
ret
jp
sbb
push
je
ss
or
insb
mov
sub
jle
inc
aas
imul
cmp
mov
dec
add
xor
bound
sub
mov
push
or
adc
or
int3
cmpsb
inc
loope
dec
lret
xchg
mov
sub
pop
and
in
jl
pop
ficoml
mov
jecxz
inc
int
pop
mov
jge
lds
ljmp
push
call
insb
cmc
mov
adc
ja
add
jmp
mov
cli
decl
mov
pop
sahf
cltd
cwtl
mov
adc
add
testl
loope
inc
es
addr16
add
ss
test
pushf
gs
inc
sub
leave
cmc
sahf
xchg
xor
test
test
pop
inc
add
test
cmpsb
ret
sbb
mov
stc
mov
fucom
push
fnstenv
je
jge
loop
sbb
testb
mov
xor
cmp
movsb
or
cmp
inc
lcall
mov
dec
sti
sbb
test
or
mov
daa
adcb
xchg
ret
cmp
icebp
out
sarl
insb
add
sbb
ds
sub
jle
fdecstp
fcomi
insl
daa
mov
test
jge
lock
inc
fstps
test
stc
sbb
cmpsb
adc
sub
cmp
add
cwtl
fbld
mov
push
sbb
cld
enter
mov
mov
mov
and
aad
sub
outsl
ja
je
iret
inc
push
popa
xchg
pop
call
jmp
push
mov
in
or
xlat
out
rcrb
psubsb
fdivs
push
lds
push
and
cs
sahf
dec
xor
mov
xchg
inc
adc
mov
sbbb
aas
jno
mov
scas
gs
test
mov
fistps
inc
movsb
loop
push
and
lds
dec
sub
cmpsb
inc
adc
mov
inc
mov
or
popf
out
fincstp
imul
adc
xor
and
mov
fwait
mov
test
shr
push
scas
mov
sub
cs
clc
push
imull
lret
or
lods
dec
jbe
test
pop
lahf
sub
rorl
std
inc
int3
idivb
mov
sub
js
fwait
in
test
lock
adc
int3
push
or
push
mov
adc
iret
jl
pop
insl
inc
cmp
jge
push
sahf
xor
sbb
ja
leave
iret
pop
jae
jno
pop
xchg
mov
out
sub
mov
push
xchg
popf
cmpb
rorl
dec
xchg
inc
out
test
xlat
adc
test
lea
mov
jmp
out
cwtl
orb
sbb
or
ret
mov
add
cld
push
rorb
pop
lret
mov
xchg
pop
xor
jmp
div
pop
fdivrs
push
lods
iret
test
loop
pop
stc
stos
lods
ja
cmpsb
lret
sbb
push
pop
aas
lcall
adc
into
rorl
sub
lods
sub
mov
lahf
jle
ljmp
mov
jmp
popa
or
or
or
dec
lret
pop
or
inc
test
leave
xchg
ret
push
in
fnsave
jo
popa
insl
fwait
test
iret
mov
pop
aas
repnz
xchg
jl
cwtl
jg
sbb
push
cld
shrb
xor
xor
pop
loop
mov
sbb
mov
add
cmp
sub
xchg
mov
add
dec
fimull
fwait
push
aas
push
cmp
loopne
loop
scas
mov
imulb
inc
repnz
test
xor
cld
jne
lahf
mov
pop
pop
ret
pop
and
int3
fldt
push
or
adc
ret
adc
sub
cmp
lret
rol
int
mov
jge
lcall
imull
or
mov
cmpsb
movsb
inc
aaa
or
es
push
popa
jnp
lods
push
mov
jl
loopne
and
inc
sub
out
sbb
movd
inc
ljmp
sti
push
out
shrl
mov
mov
sarb
mov
adc
pop
adc
pop
sub
and
mov
sbb
es
in
xor
xchg
and
or
rcrb
mov
xchg
mov
mov
pop
ret
test
sar
cmp
rep
in
shl
movsl
mov
xor
das
or
out
rolb
testb
aam
cwtl
xchg
sub
mov
mov
and
int3
adc
addl
outsb
adc
push
jns
cmp
mov
mov
mov
daa
jmp
sub
lret
dec
fwait
adc
in
sbb
fwait
sbb
sbb
repz
adc
xchg
push
ficoms
stc
iret
pop
push
test
xchg
sbb
subl
mov
pop
lea
mov
out
scas
adc
mov
jle
sbb
cmpl
xchg
fdecstp
stos
pop
lods
adc
xchg
sub
xor
shrb
lahf
xor
fsubl
or
pushf
aaa
mov
sbb
repz
enter
fwait
loopne
mov
roll
jge
int3
adc
and
dec
lahf
push
das
pop
pop
mov
or
or
mov
stos
jl
sub
sub
sahf
lods
cli
push
cmpsl
push
stos
fcmovu
in
xchg
push
sub
push
nop
push
xor
cmpsl
mov
add
js
scas
pushf
je
pop
jbe
in
xor
push
mov
push
int3
sti
stc
sub
sub
lcall
cmc
dec
jg
outsl
stos
inc
sub
pop
outsl
repz
fistpll
shr
lods
mov
push
xchg
sbb
fisubrl
pop
aam
inc
cmp
mov
outsl
insb
pop
in
loope
mov
sub
sbb
popf
xor
fdiv
and
arpl
inc
adc
out
inc
and
mov
or
xor
pop
sub
loopne
push
mov
cmp
setb
aad
adc
and
mov
std
pop
jbe
cmpsl
mov
sub
fs
iret
add
inc
add
cmp
sahf
jbe
mov
je
or
lods
inc
push
add
inc
pop
mov
and
mov
mov
cmp
fnstenv
dec
sbb
cmpsb
imul
xchg
push
sahf
mov
inc
movsl
pushf
imul
jg
popa
inc
push
cmpsl
outsl
shlb
mov
scas
push
fs
dec
cmpsl
data16
inc
dec
outsb
stos
push
push
xor
ror
shr
sbb
sbb
or
fstpl
std
lock
mov
shlb
jg
add
lds
pop
inc
lret
inc
mov
jae
mov
pushf
xchg
mov
dec
lahf
cmp
mov
xchg
add
push
dec
mov
dec
mul
sbb
lds
xor
imul
mov
movsb
xchg
popa
fdivrp
lret
je
push
in
mov
xor
fimull
outsl
mov
flds
jmp
jmp
pusha
jae
xchg
test
inc
in
out
mov
rcll
cmpsl
mov
lea
ret
hlt
sbb
cmp
das
cli
fcoml
add
rolb
adc
pop
sbb
arpl
push
jbe
jle
aad
lods
xchg
pop
aas
or
cmp
outsl
pop
dec
test
mov
stos
mov
decl
shrl
adc
dec
and
pop
jae
xchg
rol
and
inc
push
dec
mov
cmpsl
sbb
jecxz
sub
sub
es
dec
lods
xchg
xor
add
or
push
in
outsl
cmpsb
jns
mov
inc
imul
sbb
pusha
mov
mov
mov
fwait
sarl
xor
and
mov
cmp
hlt
pop
cld
push
test
lds
inc
mov
aad
push
aaa
dec
mov
shrl
bound
cmp
adc
mov
sub
sti
fcmovu
js
add
pop
and
jns
cwtl
fisubl
push
loope
xchg
sti
sub
xlat
pop
lahf
add
sbb
mov
std
mov
fstps
in
jnp
fwait
xor
mov
into
sbb
insl
and
outsb
cmpsl
scas
shr
and
xchg
inc
jmp
mov
mov
lock
push
jnp
je
pop
pop
fld
add
adc
mov
cld
scas
jg
push
je
fcomp
cmpsb
cmpl
aaa
jecxz
push
sub
ret
lcall
xchg
sub
jg
push
dec
in
fdiv
mov
xor
sub
repz
xor
cmp
ficomps
add
loop
xchg
aaa
mov
arpl
test
sti
adc
mov
sub
jg
daa
jae
popa
scas
sbb
pop
loopne
mov
mov
scas
pop
aam
xchg
pop
push
jmp
stc
mov
pop
jb
stc
cmp
xchg
cld
inc
adc
idivl
mov
jmp
mov
pop
insb
lret
int
inc
xchg
roll
cltd
mov
sub
nop
sbb
sti
lods
dec
repz
jp
dec
out
sbb
adc
ret
cmpsl
js
xor
shll
lcall
xor
sub
popa
jmp
cltd
call
mov
jle
add
gs
jo
jmp
adc
fmull
cmp
mov
cmc
mov
scas
sbb
mov
mov
or
inc
pop
pushf
push
in
mov
push
add
in
data16
cmpsl
ja
xchg
xchg
xor
mov
leave
mov
lahf
sbb
and
jnp
pop
push
fdivrs
and
sti
jg
pop
sbb
cmc
mov
lahf
mov
sub
outsb
jl
cmp
or
sahf
fldcw
add
repnz
mov
out
pushf
mov
jmp
push
test
addr16
sti
pop
shll
adc
jl
repnz
pop
push
jnp
cltd
jmp
mov
cmpsb
out
cmpsl
or
cmp
sub
inc
mov
jnp
inc
cmp
dec
dec
lock
or
ret
and
lcall
adc
lods
mov
daa
test
sar
cmp
subl
adc
push
dec
mov
inc
sbb
dec
mov
pop
insb
ss
sahf
inc
jb
das
in
and
sbb
pop
and
test
ds
and
and
push
fidivrl
dec
movsb
popa
dec
fisubrs
lods
das
lods
mov
mov
cmc
mov
jne
js
in
push
loope
adc
xchg
mov
xor
jmp
inc
out
lcall
mov
pop
sub
sub
xchg
das
sbb
push
aam
xchg
aad
dec
aaa
mov
adc
dec
cmc
mov
incb
fwait
mov
xchg
mov
in
jnp
test
ds
add
or
loope
jae
test
mov
mov
es
push
add
inc
push
pop
mov
sub
cmc
jg
cs
inc
pushf
add
mov
or
icebp
inc
mov
leave
lret
xchg
cmp
push
shr
roll
faddl
sbb
sti
call
lea
dec
aad
ljmp
in
add
cmc
mov
fs
stc
dec
aaa
jecxz
push
rorl
push
cs
mov
sub
lds
push
lds
pop
scas
add
cmp
jg
adc
push
ja
leave
mov
xchg
mov
xor
dec
lahf
in
mov
aam
lock
jle
frstor
inc
sarb
and
neg
add
daa
cmp
fildll
push
daa
lock
sub
loop
ficoml
outsb
push
outsl
pop
pop
inc
negl
iret
sub
rorb
mov
out
ja
rcrl
mov
mov
adc
sub
or
push
test
aaa
movsl
cmp
stos
repnz
xchg
mov
out
or
fsincos
stos
cmp
push
and
inc
or
shll
outsb
jge
ds
sbb
clc
mov
inc
push
dec
cmp
dec
and
stos
inc
jo
adc
les
fildl
leave
xchg
mov
aam
cmpsl
enter
rcll
in
cld
ret
and
or
push
into
mov
xor
aaa
repz
sbb
daa
xor
hlt
jnp
sti
pop
fucom
xorb
shl
sbb
rcrl
test
sarl
aad
mull
cmp
sbb
jecxz
mov
adc
cltd
mov
cmp
push
jnp
cs
sti
cmc
test
lds
mov
out
ficomps
fwait
sbb
push
sbb
lea
mov
mov
push
jecxz
xor
popa
pop
sbb
jmp
test
mul
dec
stc
sub
mov
xor
xor
lods
xchg
fwait
mov
xchg
fs
es
je
divl
or
xchg
out
insb
jbe
stos
dec
and
add
add
xchg
jno
cmpsb
imul
lods
xchg
push
xchg
jg
scas
inc
push
lods
sub
push
or
inc
lods
pop
sbbl
outsl
mov
lods
dec
addr16
xor
popf
dec
mov
out
dec
cmp
sub
mov
dec
inc
adc
xor
sbb
rorl
mov
in
push
sahf
iret
cmpsl
sbb
mov
cmp
lret
imul
adc
inc
cmp
pop
jmp
mov
sbb
rcll
jl
out
ret
mov
arpl
ret
test
push
lea
enter
pop
stos
leave
mov
je
pop
xchg
push
call
shlb
pop
inc
inc
cmp
and
pop
sub
cmp
add
dec
les
mov
adc
xchg
sbb
aam
push
popa
cmp
and
xchg
cmpsb
jae
push
cmp
push
cmp
dec
cmp
pop
aad
daa
adc
sti
sahf
cmp
mov
and
adc
push
pushl
icebp
imul
loopne
mov
pusha
jbe
cli
leave
insb
ljmp
mov
cs
dec
repnz
push
ljmp
scas
xchg
test
adc
mov
lods
fs
xchg
pop
outsb
jp
stos
imul
loop
cwtl
fs
cmpsl
add
stos
mov
mov
imul
xchg
dec
outsb
xchg
add
dec
fldcw
lods
push
xchg
cmc
test
insb
pop
daa
mov
cmpsl
rorl
mov
fildl
imul
mov
mov
pop
add
dec
loopne
aas
cmc
or
ret
mov
pop
jp
iret
stos
mov
leave
aam
mov
lcall
jno
pop
add
cmp
ss
jle
add
repnz
jge
push
lods
sarb
sub
xor
lahf
pop
cmp
fmull
mov
int
arpl
pop
push
lods
hlt
inc
daa
and
cld
movq
inc
xorb
push
pop
pop
cmpsl
in
pop
cmpsl
pop
mov
mov
rcll
fdivrl
push
mov
out
cmp
loop
adc
adc
mov
push
ljmp
pusha
negb
movsl
xor
les
sub
add
lods
mov
and
mov
xchg
fbstp
ja
jnp
mov
into
lret
push
enter
sbb
pop
dec
mov
jbe
call
hlt
push
and
mov
fdivl
jnp
ljmp
inc
cmpsl
insb
dec
mov
sbb
cmp
in
loop
pop
std
push
clc
mov
push
xchg
cmp
sti
stc
xorps
fadds
stos
jmp
mov
and
cwtl
or
mov
cmp
sbb
loope
inc
mov
mov
das
xor
mov
and
jno
push
inc
mov
int
mov
out
and
js
and
leave
mov
ja
sub
pop
rcrb
aaa
int3
aas
inc
xor
jae
inc
and
adc
test
mov
pusha
mov
mov
fcomps
mov
jae
es
cs
sbb
fcom
fwait
mov
inc
add
add
aaa
sbb
adc
lcall
pusha
cwtl
dec
jnp
hlt
das
cld
jp
mov
in
es
jno
mov
pop
xchg
fcmovb
sti
mov
and
lea
jno
jmp
bound
call
pop
aas
adc
jne
loop
lods
lret
cmc
mov
and
jp
or
mov
or
inc
fidivrs
inc
mov
xchg
dec
bound
and
or
movsb
push
lds
dec
cmp
inc
lcall
sub
jg
int3
sub
xchg
or
push
mov
in
add
xor
sub
mov
xchg
mov
js
jbe
cmpsb
daa
hlt
inc
scas
add
out
jbe
repz
push
icebp
push
ljmp
iret
dec
xor
repz
fisubrs
sahf
rcrl
cmp
sub
jb
dec
stos
cld
jecxz
jmp
sub
pop
or
jmp
pop
loope
push
cs
mov
xor
lahf
push
std
xchg
ret
jnp
stos
insl
dec
mov
pop
jb
jl
repnz
sub
call
inc
dec
inc
sbb
cmpsb
inc
jle
dec
movsl
add
test
sub
push
mov
xchg
sub
jle
insl
jmp
daa
rcl
mov
bound
leave
int3
inc
in
jp
test
mov
stos
jmp
mov
xchg
mov
mov
sub
lea
or
lret
mov
or
les
movsb
stos
inc
jmp
sahf
adc
fsts
add
iret
stos
shlb
sarl
and
clc
cmpsl
jecxz
gs
pop
scas
pushf
in
movsl
cmc
and
ret
pop
je
cmp
jae
or
rcl
loop
int3
xlat
xchg
orl
adc
pusha
and
xchg
mov
lahf
xchg
adc
sub
pop
sti
les
shl
mov
inc
pop
xchg
inc
sub
rolb
xor
and
xchg
fbstp
popa
dec
jns
insb
das
cmp
in
fs
mov
stos
cmc
inc
cld
mov
xchg
jmp
mov
in
xchg
ss
cmpsl
push
repnz
xchg
inc
jae
mov
add
imul
lods
roll
sti
pop
lcall
xlat
sbbb
pop
ret
jne
int3
or
xchg
pop
fidivs
jmp
or
loope
lock
int
ss
sub
dec
es
scas
dec
cld
pushf
add
xor
pusha
dec
pop
cmpsl
and
sub
mov
mov
dec
or
pop
repnz
mov
sbb
xor
dec
fwait
adc
inc
mov
inc
add
shlb
subl
dec
xor
cmp
inc
jg
repz
pop
aad
jmp
outsl
inc
incb
push
mov
adc
mov
mov
push
jb
pop
fists
mov
jo
inc
add
mov
inc
xor
jecxz
inc
cld
imul
sbb
mov
fcompl
dec
imul
orb
repz
pusha
inc
movsb
cmp
inc
outsb
sub
stos
movsb
and
flds
outsl
mov
mov
imul
push
mov
sub
push
sub
sarb
insl
out
sbb
pop
popa
fwait
mov
adc
mov
nop
jecxz
pop
xor
mov
jmp
and
pop
movsb
icebp
and
adc
pop
mov
dec
add
ret
enter
ficoml
data16
lret
inc
add
cmp
sub
sbb
xchg
xchg
pop
push
imul
addl
shlb
push
jecxz
sbb
dec
inc
loope
ret
mov
jmp
jns
mov
pop
inc
lret
or
mov
movsb
or
out
mov
inc
movb
dec
push
add
jge
dec
fldt
mov
mov
shr
lcall
pop
sub
aas
fcoms
xchg
xchg
cwtl
in
mov
sahf
outsb
xchg
pop
das
adc
mov
and
jmp
es
dec
mov
jae
cmp
aas
cli
and
fimull
mov
data16
leave
pushf
in
daa
das
xor
arpl
mov
jb
jmp
inc
dec
call
sbb
jp
cmp
ja
bound
mov
mov
aam
mov
jbe
rolb
xor
mov
pop
mov
dec
sub
sub
jns
decb
dec
inc
push
sub
adc
push
xlat
dec
fiaddl
inc
test
add
xchg
jecxz
sbb
cwtl
movsb
out
adc
pop
sbb
mov
inc
or
or
fsubrl
hlt
pop
sub
push
mov
and
add
dec
jae
xor
jmp
imul
sub
aam
add
jg
jg
cmp
sbb
xchg
cli
loope
cmpl
int3
mov
xor
cmp
dec
shll
lds
rclb
push
aas
xchg
xchg
mov
pop
xor
xchg
out
cli
jmp
lret
iret
in
xor
scas
sub
sbbl
enter
dec
pushf
bound
rcll
in
cli
xchg
out
push
jge
sbb
dec
movsb
mov
into
and
mov
push
adc
mov
and
dec
test
cmc
sbb
sti
popf
sbb
iret
ret
fwait
inc
test
inc
leave
ds
pop
test
xchg
popa
jns
lods
decb
inc
and
push
ret
mov
mov
jcxz
les
in
mov
ret
daa
dec
jecxz
mov
insl
sub
mov
push
mov
adc
out
cmp
leave
pushf
jmp
mov
sub
jg
ret
sbb
jae
sbb
add
shrl
cmp
jle
xchg
and
lock
cli
mov
cmp
mov
mov
pop
push
cmp
and
cmp
test
mov
inc
sbb
jg
mov
jb
push
jbe
addr16
cmc
pop
jns
adc
bound
fbstp
push
int3
or
push
jns
test
jne
pop
mov
aas
mov
rcrl
cwtl
jge
psrlq
mov
ret
mov
test
cmpb
sbb
cli
rcl
sub
loope
je
push
test
daa
insl
lahf
enter
std
mul
and
std
lret
ljmp
int3
fisubrl
dec
xchg
mov
int
clc
push
xlat
push
sbb
decb
aas
cmc
or
out
add
xlat
testb
inc
push
and
scas
ja
jbe
aad
jne
test
jnp
loope
and
xor
clc
xchg
and
jno,pn
mov
jo
scas
xchg
pop
jae
xor
adc
xchg
outsl
sub
mov
and
adc
jle
leave
push
repnz
aam
inc
dec
je
sub
rcll
sub
hlt
push
mov
cmpsb
daa
je
loop
sbb
or
mov
aad
add
sub
sub
push
cmp
sub
imul
mov
stos
mov
mov
std
int
sub
das
mov
adcb
sbb
pop
es
xchg
mov
cmpsb
dec
ja
repnz
imul
icebp
sub
lods
outsb
jns
xor
test
repz
add
divl
imul
scas
pop
pop
jnp
daa
mov
das
int3
scas
lea
and
stos
rcrb
xor
adc
gs
aad
xchg
stos
sbb
stc
adcb
test
and
ljmp
arpl
lahf
es
fucom
or
sbb
xchg
sub
les
cltd
les
fiadds
mov
push
jge
push
mov
adc
adc
mov
push
repnz
push
add
out
dec
push
push
addr16
aam
nop
sbb
jmp
add
stos
mov
push
adc
divb
mov
or
fs
mov
jg
add
test
out
jmp
out
xor
sub
jge
pop
and
mov
out
fwait
hlt
cmp
test
es
xor
jp
stc
cmp
mov
outsl
pop
cmc
loope
shlb
inc
les
dec
push
dec
sbb
aad
cmp
adc
pop
out
push
arpl
insl
call
pop
fbld
out
fisttpl
imul
pop
cs
cmc
add
iret
inc
dec
push
xor
xchg
cmp
pop
std
push
bound
repz
pop
dec
and
mov
icebp
andl
out
mov
sub
sbb
insl
ljmp
lret
sbb
inc
push
add
ljmp
data16
push
mov
nop
movsb
aaa
ja
test
cltd
repnz
adcl
xchg
test
daa
sbb
pop
insb
cmp
and
push
mov
mov
rcrl
ret
pop
je
cmp
in
int3
lcall
xchg
pop
dec
jmp
jle
int3
sub
lods
rol
test
popa
sbb
mov
fistl
mov
in
dec
lds
mov
ss
jno
loop
push
fldt
loope
push
cmp
xor
and
mov
test
loop
mov
outsb
push
fnstenv
decb
or
icebp
dec
stos
mov
mov
int
and
dec
jae
xchg
scas
je
sbb
jae
fcomps
pop
jle
inc
fiadds
fwait
cmp
fisubs
test
imul
mov
cmp
add
fiaddl
mov
loop
icebp
cmp
fs
mov
adcb
sub
out
js
sbb
jg
mov
cwtl
jmp
push
scas
add
mov
pop
sbb
push
pop
push
cmpsb
cmpsl
fsubs
mov
inc
ret
es
ret
fisttpll
mov
cmp
adc
inc
adc
or
imul
ja
fnstcw
jecxz
rol
xchg
cld
rclb
xor
pop
dec
arpl
lret
mov
sbb
or
sbb
xlat
dec
jmp
call
xorl
xchg
adcl
outsl
xchg
sub
xor
inc
shll
dec
push
push
dec
cmpsl
or
nop
dec
or
mov
adc
adc
div
mov
pop
mov
xchg
xchg
popa
popf
jns
mov
xor
sub
push
jp
xchg
decl
mov
sbb
hlt
jle
pop
sbb
and
popf
fwait
insl
mov
fadd
push
mov
arpl
push
sub
out
out
mov
mov
lcall
clc
in
test
cmp
jle
lea
ja
daa
add
aad
mov
sbb
in
add
lds
pop
dec
cmpsl
imul
stos
jge
dec
pop
dec
mov
push
inc
sar
mov
iret
xorl
out
cli
sbb
scas
in
jnp
mov
sbb
xrelease
xchg
push
jp
cmc
xchg
mov
add
cmp
into
mov
push
les
sub
pop
mov
or
and
cs
fistl
psubq
push
jge
pop
std
out
sbb
xchg
mov
es
xor
xchg
call
mov
mov
sti
jl
cmp
xlat
mov
push
fadds
or
mov
xorl
lock
pop
les
rcl
test
fnstcw
lahf
xchg
dec
cmp
ss
ds
sahf
push
sti
sti
stc
icebp
shrl
insl
or
dec
repz
arpl
mov
push
and
lea
cmpsb
inc
pop
mov
or
inc
mov
adc
mov
fs
cwtl
and
jl
inc
mov
mov
sub
mov
push
dec
data16
int3
call
xchg
mov
cmpsl
ret
mov
fdivrs
data16
and
sbb
into
xor
jno
cmpsb
ss
inc
aad
sub
int
test
clc
daa
adc
adcl
loop
sub
xchg
std
add
inc
ret
or
sti
je
or
add
ret
mov
stos
out
pop
icebp
fiadds
jno
cmp
sub
xor
dec
das
or
movl
into
cmp
add
fsubl
cmc
jle
cmpsl
pop
mov
or
scas
ret
loop
mov
inc
mov
xchg
mov
outsl
sbbl
rcll
sarb
lahf
mov
inc
mov
test
repnz
cmpsb
or
jb
jl
in
push
sbb
xor
cmp
pop
fbstp
les
jb
cmc
popf
jo
mov
xor
inc
adc
sub
add
mov
push
jne
mov
inc
cmp
scas
cld
pop
cmpsb
clc
or
in
clc
push
push
imul
popa
sub
jl
insl
lock
inc
aam
popa
adc
repnz
dec
stc
sahf
out
jne
lahf
stos
hlt
test
mov
cwtl
mov
loope
iret
cmp
adc
cmpsl
xorl
mov
mov
adc
inc
push
xor
popf
mov
add
loop
push
hlt
outsb
test
ds
fisubrs
lret
fwait
fs
mov
jnp
cmpsb
jg
push
sbb
add
and
mov
scas
mov
or
sahf
xorb
aam
cld
decl
shr
jae
cmp
iret
mov
add
loopne
enter
mov
push
mov
scas
adc
test
push
cmp
push
outsl
adc
pop
in
xchg
out
sbb
cmc
out
enter
mov
nop
xor
fisttpll
and
lock
outsl
mov
incl
pop
in
or
mov
sbb
mov
testl
ljmp
ficoml
mov
sbb
or
xor
outsl
push
and
jo
shrb
mov
out
dec
mov
aaa
cmp
jle
ret
insl
loope
jecxz
test
std
stos
insl
mov
pop
dec
pop
mov
push
bound
push
inc
mov
ds
pushf
xor
inc
loopne
jle
int3
pop
sub
sti
or
pop
xchg
dec
mov
add
sbb
incl
sbb
adc
mov
push
pmullw
jg
mov
or
mov
scas
shlb
jmp
xchg
pusha
mov
xor
lods
imul
loop
loop
sub
into
div
sub
sbb
aam
test
jb
and
sub
fnstenv
push
xor
repz
das
mov
lods
shll
and
jecxz
sbb
adc
daa
insb
sbb
pusha
push
mov
xchg
sub
sbb
mov
mov
test
icebp
nop
in
pop
bound
out
jge
in
jns
xor
sbb
cmc
testb
xor
scas
fnstenv
xchg
and
call
add
or
push
lock
cltd
outsb
test
pop
sbb
inc
ljmp
in
fsts
mov
push
jmp
and
push
pop
lcall
sbb
inc
mov
addl
fistpl
addr16
jns
pop
mov
mov
or
scas
inc
add
aad
push
test
mov
cld
test
nop
orb
clc
pop
sbb
rcll
adc
enter
lea
mov
popf
adc
pushl
adc
push
mov
stc
neg
in
xchg
jb
imul
dec
mov
sub
out
dec
clc
imul
cwtl
jne
jnp
ss
int3
int
mov
xor
add
ret
in
fsubl
ret
pop
gs
pop
shrl
sahf
sub
sub
ret
fwait
stc
in
adc
scas
jge
mov
imul
imul
dec
add
and
in
jns
sti
lret
negl
sub
int
sub
sbb
mov
or
dec
cmp
xor
in
enter
mov
aas
add
loope
bound
test
lahf
xchg
sub
sub
sub
fs
adc
subl
fsubs
jmp
cmp
lds
inc
arpl
outsl
cmp
mov
push
push
lods
jo
iret
sbb
movsl
shll
adc
adc
xchg
jne
divb
sub
movsl
movsl
cmp
mov
sub
mov
call
in
repz
ss
arpl
orb
and
inc
repz
push
mov
dec
shrl
icebp
add
mov
jle
mov
arpl
insl
xchg
into
sahf
cltd
pop
or
xchg
and
fistl
push
xor
jl
aam
fcmovnu
jmp
jp
js
fs
gs
inc
push
repz
dec
addr16
mov
adc
push
pusha
imul
adc
mov
shlb
xchg
and
xchg
pop
pop
sub
into
inc
fcompl
xor
dec
scas
push
scas
adc
ja
pop
lret
fldt
jae
enter
adc
jp
dec
mov
mov
into
xlat
add
or
push
shlb
std
jl
aad
adc
or
aad
or
jbe
cld
jne
out
cmpsl
ss
mov
nop
push
pop
movsb
enter
sub
sar
adc
sub
xchg
inc
fsubrs
insb
adc
jne
dec
lcall
push
mov
inc
sahf
ljmp
out
push
push
pop
ja
out
dec
lds
lea
xor
pop
add
jp
movsb
out
call
mov
scas
sbb
adc
mov
or
pop
mov
push
out
ja
jno
ljmp
lea
outsb
ja
dec
or
mov
jge
and
arpl
mov
mov
xor
and
in
lret
je
xchg
pop
mov
pop
push
leave
ds
xlat
out
sti
jo
lods
pop
xor
xor
cs
fs
dec
dec
adc
jge
jl
push
mov
ffreep
sub
mov
and
push
arpl
inc
in
dec
inc
mov
cmp
xchg
cmp
lret
cs
xchg
xchg
xchg
mov
mov
and
rolb
repnz
shll
aad
loopne
mov
orl
imulb
aad
ss
xchg
roll
and
mov
inc
and
lods
stos
add
sbb
inc
es
cmp
add
cmp
xor
mov
jnp
push
mov
inc
pop
rorb
cmp
cld
sub
jg
gs
mov
mov
dec
jne
or
jnp
cmp
xor
shr
nop
sub
jge
push
cli
es
sbb
xchg
js
imul
inc
popf
sub
cltd
xchg
ror
out
call
sbb
jle
enter
leave
ljmp
fcompl
adc
or
push
mov
jmp
dec
mov
pop
lcall
lods
and
cmpsb
lahf
addb
mov
lahf
sub
repz
ret
cwtl
xchg
mov
outsl
cmp
cld
leave
jg
push
sbb
push
mov
jecxz
test
lods
lahf
push
inc
dec
mov
mov
int
mov
mov
pop
arpl
fst
jmp
mov
gs
cld
jnp
or
test
jg
mov
xor
pop
and
lahf
mov
int3
add
lea
adc
filds
mov
push
pop
xor
bound
or
dec
ret
add
ret
dec
sub
mov
and
pusha
cmpsl
pop
ret
add
push
test
dec
inc
jnp
xchg
mov
mov
pop
cmp
push
cmp
aam
sub
push
sbb
les
mov
cmp
mov
xchg
push
push
fdiv
pop
add
das
int3
jno
push
cmp
cmp
mov
mov
xor
fcmovnu
push
push
repz
aas
cmp
sbb
mov
out
push
and
cmp
repz
cld
xchg
xor
imul
push
rorl
sub
sub
sbb
dec
push
repz
jle
adc
add
jge
sub
add
pop
push
mov
jo
or
pop
push
or
mov
pop
cmp
or
js
pop
fs
andb
data16
push
mov
jno
mov
mov
jecxz
shll
outsb
sbb
mov
and
fsubl
js
ffreep
or
and
xor
dec
enter
int3
adc
jo
or
aam
test
jo
jmp
test
xorb
jnp
out
bswap
daa
int
leave
lcall
jle
dec
inc
xor
cmpsl
mov
xchg
xchg
lods
pop
lcall
push
and
test
inc
mov
xor
test
fidivrl
push
mov
push
shlb
daa
adc
adc
adc
aas
add
call
sub
mov
mov
pop
inc
xchg
adcl
sbb
dec
enter
jp
fstpl
or
jbe
cmp
enter
cli
add
cltd
fwait
adc
ljmp
stos
bnd
test
inc
or
hlt
cmpsl
sub
jnp
inc
add
or
popa
addb
xor
jns
add
insl
cmp
mov
xchg
push
imul
ficomps
ljmp
pop
push
js
fnstenv
xor
nop
mov
mov
adc
int
mov
or
add
mov
pop
stc
add
sbb
cmpsl
mov
sub
sbb
cld
lahf
insl
out
pusha
call
negl
xorps
push
movsb
mov
jecxz
add
mov
sub
lock
mov
mov
divb
rclb
mov
jno
fimuls
dec
sti
xchg
ds
add
out
test
aaa
cmp
pop
das
add
xchg
loopne
push
jg
pop
and
jecxz
add
xchg
enter
sub
inc
push
imul
imul
fnstcw
mov
jecxz,pt
mov
sbb
pop
or
pmaxub
add
sub
andl
and
sub
push
movsl
and
push
loope
imul
pop
inc
cmpb
jnp
mov
ret
jns
cltd
jbe
cmpsb
ss
aam
iret
mov
jb
popl
fisttpll
js
cld
test
dec
jg
iret
or
push
sub
mov
sbb
add
jg
mov
mov
mov
cli
inc
pusha
pop
filds
push
and
mov
mov
das
pop
mov
mov
je
mov
arpl
push
fildl
cwtl
mov
xchg
flds
push
cmp
add
rcrl
inc
cmp
cmp
pop
jg
lret
inc
cmpl
gs
int
sub
inc
pop
daa
cmp
mov
xchg
jo
sahf
fstl
into
xchg
dec
mov
fwait
popa
push
imul
dec
inc
js
jne
xchg
mov
stos
mov
inc
lock
insl
xchg
aad
inc
adc
in
cmp
mov
ret
ret
aaa
jg
xchg
dec
rolb
pop
adc
pop
xorl
or
sbb
and
lock
cld
adc
push
mov
pop
ret
jp,pn
out
in
pop
inc
xor
xchg
jge
pop
insl
and
les
stc
outsb
pop
fidivrs
pop
aad
add
push
ds
xor
in
loop
cwtl
cmpsl
movsl
mov
movsl
ret
xchg
push
xor
sbb
inc
insl
push
push
adc
xchg
xlat
popa
fidivrl
stos
xor
xor
cs
ds
xchg
mov
enter
xor
adc
fidivrl
xor
loop
sub
mov
outsl
sub
xor
test
xchg
rcrl
repnz
orl
dec
pop
dec
adc
pop
movsl
xlat
pusha
mov
inc
mov
mov
pop
cmpsl
add
test
dec
imul
loope
cmp
sarb
pop
ja
loop
jno
dec
imul
andb
mov
test
int3
cmp
jo
or
pop
loopne
mov
aaa
xchg
cmp
dec
movsb
add
frstor
mov
jmp
in
call
mov
ja
xchg
lea
sbb
xchg
mov
insl
test
sarl
rorl
mov
mov
int
sti
xor
dec
orl
and
repz
pop
arpl
mov
adc
mov
insb
jmp
nop
push
push
dec
loope
add
pop
fdivl
or
lock
jo
pop
cmpsb
shl
jno
push
mov
inc
mov
sbb
or
sbb
jnp
data16
add
push
mov
lock
lahf
jb
jne
xchg
xor
inc
sbb
test
cmp
loope
xchg
mov
cmp
test
inc
pop
xor
or
call
filds
sbb
les
leave
in
add
mov
aaa
inc
and
inc
popw
adc
adc
mov
cs
xorl
out
dec
and
jae
pop
mov
jmp
mov
fs
pop
das
loopne
jae
call
sbb
inc
ljmp
pusha
xor
cmp
mov
fistpll
dec
je
pop
into
dec
iret
mov
ret
dec
shl
inc
jecxz
cltd
adc
push
sbb
repnz
and
fisttps
xchg
or
lods
lret
xchg
jnp
xchg
sub
shll
bound
pop
sbb
sub
aad
push
mov
sbb
ror
insb
loop
ljmp
lret
ret
test
rol
popa
mov
nop
xchg
aam
sub
sub
mov
sbb
or
push
rcr
pusha
and
mov
sbb
xchg
scas
lcall
scas
stc
add
add
aaa
into
js
je
or
pop
pop
cmp
mov
js
sbb
add
mov
test
insl
push
movsl
icebp
cmpb
inc
stc
jae
int3
jecxz
fmull
stc
pop
inc
scas
mov
mov
adcl
or
lds
inc
pop
and
mov
mov
lret
and
cltd
or
pusha
push
sarl
flds
xor
lock
fimuls
pusha
xchg
and
divl
jecxz
test
outsb
or
sahf
inc
cld
fists
jge
ds
aas
imul
adc
fsubr
jmp
pusha
in
inc
or
push
loope
and
push
xchg
mov
dec
adc
aad
aaa
push
pop
jae
mov
sbb
mov
inc
adc
dec
sub
jno
sub
sbb
ds
test
and
cmp
adc
adc
mov
xor
sti
push
in
and
mov
jmp
push
leave
adc
or
sbb
scas
xor
stos
jecxz
in
es
pop
dec
adc
mov
jmp
stos
mov
imul
lods
lret
ja
dec
fucomp
dec
sub
popa
fistl
push
pop
out
xchg
lcall
mov
sahf
mov
fs
mov
dec
ds
hlt
cmp
xchg
je
incl
add
mov
add
jg
adc
mov
fnsave
xor
popl
rolb
arpl
fimuls
int
mov
jmp
sbb
inc
and
xchg
test
fidivrs
dec
enter
inc
jle
sbb
arpl
out
xchg
sub
dec
jle
jb
popa
lret
push
jmp
addb
sbb
jmp
pushw
insl
pop
subl
push
clc
sub
mov
dec
fadd
adc
mov
lock
out
mov
lods
js
loope
hlt
mov
fwait
cli
cmp
stos
shrl
xor
ds
xchg
bound
sub
add
aam
sbb
inc
pand
inc
adc
cmpsl
cmpsb
repz
adc
insl
in
adc
cmc
cli
mov
mov
jae
add
dec
sar
jge
cmp
test
push
inc
fs
imul
call
je
daa
mov
mov
and
leave
add
xchg
and
cmpsb
aas
push
cmp
inc
shll
cmove
jle
dec
in
mov
sbb
cmp
insb
fwait
adc
push
out
std
ret
test
xor
mov
cmp
int3
std
add
or
imul
xor
cmp
roll
pop
xchg
inc
dec
jle
inc
lock
push
ljmp
pop
es
cld
pop
in
pop
pop
pop
out
dec
mov
rolb
adc
jnp
sub
jp
dec
into
lock
sahf
xor
or
xchg
push
mov
fstpt
test
and
or
mov
pop
sbb
jae
inc
scas
mov
std
mov
lahf
pop
in
add
inc
jb
mov
dec
xor
int
hlt
sbb
mov
or
adc
mov
shll
leave
xchg
jnp
add
xor
mov
notb
fimuls
inc
popf
adc
jnp
mov
inc
kmovw
dec
dec
xchg
and
pop
rclb
sti
movsl
outsl
sbb
sbb
lods
sbb
or
aaa
jae
jns
xor
bound
push
rep
insl
test
into
daa
shrl
cmp
bound
rcrb
loopne,pn
and
insl
cmc
in
add
in
mov
mov
pop
pop
xchg
insl
test
push
xchg
cwtl
outsl
pop
and
push
jns
mov
outsl
or
dec
out
js
fcmovb
sar
idivb
cmp
mov
sbb
out
int
std
dec
push
push
cmpsl
mov
scas
js
loope
or
pop
outsb
movsl
je
push
dec
iret
andl
lock
movsb
enter
jl
add
or
pushf
or
jmp
and
inc
sbb
aam
out
pop
je
sahf
bound
mov
cmpsl
mov
nop
dec
and
fldt
pop
icebp
fsubrl
dec
imul
jno
clc
das
loop
popa
fwait
adc
lret
aas
or
imul
rcrl
dec
mov
daa
jns
jns
test
out
cli
mov
fdivl
fs
cmc
loop
dec
and
sbb
pop
hlt
mov
push
mov
ret
push
stc
test
or
icebp
outsb
imul
pop
xchg
inc
inc
xor
or
enter
push
sbb
lret
insb
jmp
pop
aas
or
jae
sbb
mov
xchg
cs
hlt
inc
das
mov
fwait
les
xchg
leave
cld
or
out
or
push
scas
das
rcll
movb
movsb
sbb
adc
adc
insl
ja
fdivrs
test
xchg
lods
or
pop
stc
sub
ljmp
jl
outsb
xor
add
jae
pop
loop
xchg
dec
push
or
mov
push
jo
repnz
cmp
mov
adc
dec
outsl
pop
cltd
mov
data16
cltd
loop
add
mov
xor
lahf
jne
mov
mov
pop
sub
jmp
popf
cmp
dec
in
push
aas
sarb
jl
movsl
xchg
iret
jne
data16
jle
push
adc
xor
cs
xor
fidivrs
in
jns
cmc
loopne
xor
sbb
scas
ljmp
adc
lret
pop
stc
or
leave
mov
mov
push
xchg
mov
in
dec
imul
mov
mov
jle
sbb
lock
in
pop
stc
jmp
aas
mov
cmpsb
dec
push
and
fs
fstps
pop
iret
int
hlt
mov
out
pop
mov
and
xor
cltd
sub
scas
ss
jne
iret
xchg
push
lcall
fdivr
addr16
icebp
adc
lret
int3
cmc
xor
test
dec
lahf
inc
cmpsl
ljmp
imul
adcl
arpl
sbb
push
js
and
mov
sti
faddl
cmpsb
xchg
out
jno
xor
or
sub
mov
or
jg
and
inc
or
fisubl
and
and
adc
adc
cmp
ds
xor
fimuls
jge
dec
dec
xlat
int3
xchg
push
push
xor
scas
mov
mov
inc
cmp
inc
data16
stos
xor
adc
jmp
dec
cli
lcall
inc
out
adc
sub
popf
mov
sub
mov
jg
lds
fcoml
imul
xor
mov
xor
jno
jae
and
inc
push
add
sub
or
jp
pop
xlat
xor
mov
and
sarb
cmpsl
inc
out
fcomip
xchg
sub
das
push
sti
popf
pop
rcrb
in
or
lret
lods
mov
leave
dec
nop
rorl
pop
push
jg
lret
in
or
or
cmc
aaa
mov
loop
test
jle
cltd
mov
mov
fcom
cmp
or
xchg
mov
ljmp
push
cmp
and
loop
mov
and
jge
fldl
bound
inc
sahf
out
mov
test
xor
and
cmpsl
rcrl
inc
lea
adc
mov
mov
xchg
xchg
xor
rorb
jbe
ret
pop
mov
and
cld
cmpsl
pop
pushl
scas
mov
call
fs
xchg
push
jno
lock
or
pop
and
add
loopne
pop
sbb
ljmp
sub
roll
fadds
and
les
mov
xor
inc
jecxz
adc
jo
xchg
call
ret
push
enter
cli
or
push
xchg
aam
push
popa
enter
loop
push
inc
jno
cs
fidivs
jno
add
ret
pushf
pop
insl
fcoms
mov
inc
jo
push
rcll
in
cmpsl
loope
les
testl
popf
out
scas
pop
loop
inc
lret
mov
scas
sub
icebp
xor
xor
mov
jne
xchg
in
pop
loopne
mov
adc
adc
jae
pop
out
sbb
lea
nop
aaa
fldt
pusha
lahf
test
addl
nop
jl
rol
adc
pop
dec
cltd
pop
mov
add
push
scas
outsl
mov
pop
or
adc
and
xlat
xor
cmp
sahf
pop
inc
sub
mov
mov
xor
sbb
test
pop
dec
mov
and
loope
dec
jb
mov
loope
in
sar
cs
aas
push
imul
sub
outsb
sub
in
adc
insl
js
mov
or
mov
or
xchg
push
mov
inc
lcall
jb
or
ficoms
jmp
sahf
pop
in
in
and
inc
dec
dec
sbb
xorb
push
xchg
mov
out
sub
fcompl
testb
mov
push
scas
and
faddl
push
cld
inc
mov
das
mov
sub
mov
fiaddl
sbb
and
ljmp
sub
loope
inc
pop
mov
pop
dec
xor
js
sbb
cld
mov
push
add
gs
xchg
xor
push
push
nop
and
cmpsl
shlb
je
sub
sub
imul
mov
lcall
jne
jo
stos
stc
mov
xchg
lcall
or
or
add
and
aad
rcl
popa
dec
push
lcall
pop
mov
mov
std
mov
dec
add
inc
push
jg
add
in
jl
ljmp
sbb
adc
adc
and
test
and
mov
xor
movsl
lret
sbb
sub
xchg
arpl
dec
jno
adc
cmc
xor
popa
xlat
dec
adc
clc
lock
addr16
and
arpl
jge
push
das
mov
xchg
out
xchg
and
insb
inc
lds
roll
inc
xchg
mull
ljmp
mov
xor
sbb
aaa
xor
push
mov
cld
fnstcw
xchg
pop
in
adc
adc
sub
add
mov
add
jmp
hlt
cmp
jp
mov
dec
ret
inc
adcb
adc
out
fadds
xchg
inc
pop
arpl
call
sbb
das
shll
push
or
and
lahf
xor
fists
aam
test
in
loop
xor
js
ret
test
lods
xchg
sarl
cmpsb
xchg
xchg
fprem
loop
outsb
dec
mov
jno
out
cli
mov
inc
nop
mov
out
push
adc
ja
cld
pop
mov
bound
arpl
push
movsl
dec
sub
fisttpl
aaa
and
in
test
das
mov
js
loop
push
stc
cmp
xchg
push
inc
test
adc
dec
inc
psubsb
daa
fsub
pushl
fwait
je
xor
popf
adc
xchg
fnstsw
sahf
sbb
addr16
mov
jp
arpl
sbb
mov
ret
ret
outsl
lcall
pusha
and
hlt
test
mov
xor
pusha
js
loopne
ljmp
mov
dec
push
lods
mov
push
fldcw
adc
mov
cwtl
mov
dec
ret
filds
dec
jns
in
stos
jns
xor
mov
imul
pop
pop
mov
and
mov
movsb
sub
ficomps
adc
pop
push
rorl
pop
int
xchg
adc
int
mov
xor
sub
inc
or
pop
xchg
mov
or
repz
jg
dec
mov
mov
clc
add
cs
jno
and
repnz
sarl
lds
shr
lahf
push
cs
rolb
or
in
adc
or
pop
mov
test
fstpt
repz
sub
in
lea
into
bound
loope
mov
lods
aaa
lahf
pop
stc
fwait
jae
adc
pop
xchg
repz
and
fstl
in
xor
inc
enter
inc
rorb
or
jae
mov
mov
imul
in
mov
mov
call
gs
lea
dec
push
mov
rcr
inc
rclb
lods
adc
aas
sahf
dec
mov
popf
pushf
das
lods
out
std
dec
test
roll
and
pop
cmp
out
dec
sub
jmp
mov
cmc
pop
jno
dec
push
int3
cmpl
pusha
ljmp
sub
cmp
in
shrl
bound
sar
push
jge
inc
ljmp
sti
popa
in
dec
pop
xor
cwtl
inc
or
push
jne
inc
test
rclb
js
movsl
out
aaa
rolb
push
repnz
jb
mov
arpl
leave
push
pusha
adc
pusha
and
add
filds
dec
or
out
add
arpl
mov
nop
loopne
and
test
xchg
mov
mov
jge
dec
in
add
repz
dec
mov
pop
and
nopl
les
movsb
call
xor
out
adc
dec
je
cmp
out
sub
loope
rclb
imul
mov
push
mov
enter
mov
jns
mov
dec
push
loopne
inc
out
push
xchg
out
push
jb
lock
xor
adc
push
push
fsubl
mov
mov
cmp
cs
rcrl
push
sti
cmp
movsl
popa
sub
cwtl
in
xchg
sahf
pop
jb
pushf
or
popf
mov
mov
inc
mov
iret
arpl
dec
mov
adc
test
push
sub
xchg
xchg
push
outsb
xchg
xchg
repz
mov
fcoms
inc
rcll
fidivl
sbb
jns
adc
insl
mov
fbld
outsb
testb
jmp
ja
xor
adc
xchg
out
shr
adc
mov
mov
fnstenv
sbb
push
nop
or
mov
jno
fstpl
mov
or
ljmp
pop
cmp
or
pushf
jnp
cmp
scas
jo
or
lahf
nop
lods
sahf
cltd
mov
mov
mov
xchg
popa
test
inc
ret
sub
das
sahf
repz
jecxz
aam
add
je
mov
adcb
sbb
xor
cmpb
shlb
xlat
out
icebp
pop
jnp
dec
mov
push
push
and
inc
leave
mov
adc
xor
push
pop
insb
xor
cwtl
cmpsb
or
cmc
sbb
jae
mov
push
int
aaa
adc
jne
outsb
cmp
imul
push
pop
out
mov
mov
adc
popf
test
out
imul
sub
xchg
mov
inc
jne
loope
rcl
popf
lods
mulb
pop
std
and
icebp
fsts
dec
mov
sbb
imul
cmp
mov
push
pop
mov
pusha
or
or
add
mov
xchg
jecxz
and
adc
sti
pop
push
popf
add
cld
daa
push
mov
filds
jnp
fs
xchg
dec
sbb
filds
sub
push
imul
loop
insl
pop
mov
fists
out
addr16
loope
xor
push
push
inc
leave
jmp
es
int
xchg
add
jnp
pop
xchg
lcall
mov
fsts
adc
loope
pushf
mov
jmp
hlt
sub
les
and
xchg
mov
call
aas
mov
aad
xor
mov
jecxz
int3
call
adc
push
jge
fsts
ret
sub
fildll
negb
sbb
cmp
mov
lds
jle
sub
push
sub
and
in
scas
shl
inc
enter
or
xchg
insb
cmp
inc
mov
sbb
jecxz
flds
mov
aad
push
inc
pop
dec
cmpsb
and
popf
jns
push
dec
daa
dec
addl
xchg
les
out
mov
clc
stos
and
std
mov
in
push
mov
mov
test
movsb
xchg
jb
jle
jg
and
jno
cwtl
into
ljmp
imul
push
test
jge
int
adc
lods
aam
mov
and
insb
popf
pop
adc
dec
ljmp
jae
gs
and
and
imul
loop
or
imul
into
xor
rcrb
orl
adc
or
cwtl
xchg
mov
int3
daa
lock
xchg
xchg
xorb
and
dec
mov
popa
gs
js
push
inc
orl
cmp
inc
xchg
mov
xorl
mov
sbb
jmp
and
and
clc
loopne
jmp
adcb
stos
repz
ja
mov
rcrl
push
xor
mov
movsl
in
or
andl
scas
es
inc
in
pop
or
add
std
dec
in
test
out
cwtl
js
cmp
les
sbb
pop
aaa
add
insb
das
int
cmp
repnz
xchg
inc
out
or
aad
jns
in
lea
repz
outsb
dec
ja
nop
mov
mov
dec
repz
pop
popa
sbb
fwait
test
xor
setle
leave
push
mov
adc
push
fldcw
je
repz
push
jecxz
dec
scas
imulw
icebp
into
mov
cltd
add
push
and
mov
jmp
loope
scas
add
loop
mov
aaa
lret
sub
gs
adc
shrb
inc
pusha
mov
add
loopne
sbb
enter
inc
adc
out
icebp
or
jo
lods
mov
int3
mov
scas
xchg
lcall
nop
enter
call
pop
mov
scas
lahf
daa
mov
rcl
inc
adc
repz
daa
pusha
or
jg
mov
rcll
mov
scas
imul
lcall
mov
out
and
jns
bound
or
scas
jp
lcall
mov
jno
dec
das
fsubrp
inc
push
dec
mov
and
mov
pop
dec
pushf
aad
pushf
es
fwait
cmpsl
dec
and
jo
test
lret
push
xchg
xlat
sbb
rcr
sbb
sub
int
push
stos
test
repnz
cmp
notl
ds
sbb
xor
sub
dec
iret
sub
mov
push
insl
add
and
mov
stos
pop
ss
mov
pop
les
sbb
cmp
movsb
lahf
mov
jp
xchg
push
jne
push
sti
movsl
out
jmp
daa
sbb
mov
pop
lea
sub
mov
shr
pusha
jb
mov
bndstx
mov
xchg
sub
pop
imul
testl
xor
out
nop
ret
add
cltd
out
adc
pop
rcl
push
fsts
sbb
sbb
push
jl
insb
or
popf
out
nop
lods
jmp
insb
dec
adcl
arpl
mov
jo
jno
pop
rolb
fs
jnp
fs
mov
stos
mov
xchg
inc
fsubrp
iret
loopne
gs
mov
mov
inc
dec
add
faddl
je
push
sahf
inc
rorb
call
pop
push
roll
jl
shlb
add
popa
fistpll
jecxz
inc
push
dec
imul
pop
jnp
daa
enter
iret
jl
sub
pushf
fistl
mov
jnp
cmp
out
jnp
lds
dec
iret
sub
xor
jg
inc
mov
mov
add
fdivrs
jo
add
loop
add
jno
les
mov
daa
cmp
sub
push
mov
les
jp
mov
jmp
sbb
push
xlat
cmp
xor
insl
cmpsl
xchg
in
aaa
aaa
push
aaa
push
dec
adc
jbe
jne
stc
push
insb
arpl
sahf
pop
xor
jge
daa
pop
daa
dec
sbb
xor
sub
popa
loop
or
leave
lods
jo
jle
sbb
jmp
add
xchg
push
and
pop
mov
xor
mov
mov
fstl
mov
xor
imul
test
std
adc
xlat
test
jnp
loop
cmp
loop
and
mov
pop
int
xor
aad
dec
mov
fnstsw
mov
je
arpl
xor
add
sarl
das
push
lea
jae
imul
arpl
mov
cmpsb
mov
sbb
xor
push
pop
add
push
rcr
pop
mov
out
pop
or
sub
lahf
mov
in
arpl
jl
gs
mov
xchg
mov
jg
ja
movsb
call
decl
dec
or
andl
scas
jae
pop
fxch
sub
leave
xchg
inc
test
mov
mov
fdivr
mov
sahf
data16
popa
es
repz
mov
out
dec
or
dec
in
fdivs
nop
jno
call
frstor
mov
xchg
or
adcl
lahf
cmp
xor
sub
xchg
inc
imul
mov
vmovsldup
sti
sbb
mov
mov
lods
lea
or
in
rcll
sbb
xor
and
xchg
push
and
adc
xchg
ffree
lods
jae
pop
insb
mov
push
adc
or
xchg
inc
xor
lret
mov
cli
xchg
dec
xchg
imul
shrb
and
int3
fs
or
inc
cmp
sbb
mul
jecxz
call
jb
add
orb
xor
imul
gs
jnp
shlb
not
lea
adc
mov
xchg
rcl
pop
cmpsb
xchg
loop
pop
xor
loop
shlb
mov
int3
mov
aas
lcall
movsl
popa
add
inc
data16
mov
pusha
push
pop
jecxz
pop
cli
mov
sbb
or
daa
jnp
out
lock
pop
pop
or
pop
dec
leave
icebp
push
mov
pushf
dec
popa
cld
cmp
lret
ja
dec
fistps
outsl
push
jne
jg
out
jp
jg
or
shll
xor
test
cmpsb
dec
jbe
cld
ret
fs
sub
test
sahf
jge
mov
cmp
sbb
and
ljmp
sbb
aad
or
shrb
imul
out
cltd
orl
push
dec
or
addr16
jle
in
pop
icebp
das
jb
pop
mov
das
jne
pop
jmp
push
jb
inc
add
ds
ljmp
sti
jo
je
inc
sub
xchg
jnp
pop
test
mov
xchg
inc
jne
sbbb
pusha
jge
pop
inc
scas
cmc
adc
fwait
add
enter
cmc
test
sub
loopne
jbe
aaa
add
lahf
shrl
into
jp
cmp
and
add
xchg
aad
popl
fwait
out
ljmp
adc
cli
push
add
pop
jno
or
dec
cmpsl
scas
adc
sbb
push
add
addr16
minps
dec
xchg
fsubl
sbb
stos
aad
dec
or
push
mov
mov
add
rcll
mov
add
push
movsl
loope
mov
imul
fwait
xchg
push
insb
frstor
sbb
shrb
jle
cmc
testl
sbb
lahf
mov
xor
pop
mov
aad
jmp
xchg
sub
pusha
xchg
out
add
push
and
cmp
pop
inc
dec
push
orb
in
imul
lret
enter
pop
xorl
das
and
push
dec
ds
ficomps
shl
lahf
gs
cmpsl
arpl
mov
cld
inc
lods
pop
adc
addr16
rclb
bound
clc
sbb
mov
push
xor
popa
mov
scas
jno
push
jbe
or
inc
out
jbe
mov
cmpsb
in
jb
fistpll
mov
sub
out
push
sub
pop
mov
out
sti
or
mov
insb
sub
cli
mov
mov
push
mov
sbb
leave
xlat
icebp
gs
sbb
shrl
xchg
jns
lods
jo
shll
clc
and
cmp
outsl
dec
xchg
cmpsb
push
or
ret
scas
sub
test
sub
test
adc
and
pop
cwtl
clc
add
cmp
es
sub
rorl
adc
outsl
fiadds
ds
adc
popf
and
or
bt
pop
cmpsl
dec
cmpsb
test
jg
inc
decb
or
std
mov
jnp
xlat
scas
out
mov
shlb
cmp
aas
adc
xchg
stos
push
ret
xchg
mov
jo
test
jae
cld
ret
push
adc
js
push
cmpl
jg
call
push
test
mov
sahf
aaa
cmp
cmp
dec
jge
movsb
lret
hlt
data16
ret
adc
sbb
add
iret
add
inc
adc
addr16
out
popa
data16
add
mov
mov
popf
popf
fnstcw
xor
push
xchg
jecxz
inc
jno
test
inc
pop
outsl
aad
inc
cli
ds
popa
imul
in
imull
leave
rcll
fsubrl
push
ljmp
imul
test
mov
mov
mov
xchg
std
push
pop
lods
fldl
dec
lock
and
stos
cmp
adc
push
hlt
or
sub
es
mov
mov
in
add
sti
pop
enter
aad
gs
test
mov
dec
std
mov
aad
pop
inc
data16
xchg
cmp
das
sbb
push
jmp
loopne
sub
popa
fistpll
inc
jb
xor
daa
inc
scas
mov
test
push
add
sub
and
fs
sbb
fidivrs
negl
pushf
es
jnp
stos
lret
cli
out
imul
cmp
cs
push
jno
imul
pop
cltd
in
adc
mov
test
dec
fdivp
mov
call
jbe
adc
in
test
mov
shrl
and
or
test
xchg
mov
add
imul
cmpsl
adc
add
movsl
dec
cmp
popf
fs
in
and
movsl
xor
data16
lods
cli
lret
fwait
add
add
mov
outsb
cltd
inc
xchg
cmpsl
dec
hlt
cltd
sub
filds
daa
in
pop
pop
dec
test
or
or
mov
inc
aad
xor
cmp
cmp
in
mov
fmull
leave
sbb
sbb
pop
bound
sbb
push
push
iret
addr16
fincstp
dec
into
ljmp
inc
aaa
xchg
daa
add
pop
fs
loope
call
jnp
push
and
pushf
scas
mov
dec
or
xchg
adc
lds
aam
jno
pop
push
cwtl
loope
fldcw
cmp
cmp
inc
inc
shlb
popf
push
adcb
leave
sbb
xchg
fsubrp
mov
xchg
into
mov
test
sbb
or
mov
and
mov
mov
mov
push
hlt
or
ret
orb
cld
cli
sub
in
xor
adc
scas
mov
sbb
push
xchg
cmpb
outsb
mov
adc
ljmp
aas
pop
inc
cs
roll
out
or
or
jmp
pop
and
add
idiv
cmp
cmc
bound
xor
xor
mov
sub
mov
mov
sbb
mov
outsl
and
inc
push
mov
pop
xlat
and
inc
leave
sub
pop
or
fstpl
add
fcmovb
dec
xchg
fdivr
outsb
jns
inc
shl
mov
loop
and
fbstp
pop
push
jmp
push
or
test
pop
std
repz
fcomps
pusha
idivl
insb
testl
pusha
ss
imul
das
lds
roll
cmpsl
pop
sbb
mov
imul
xor
mov
jge
mov
push
add
cmp
and
cli
mov
jae
or
repnz
test
sbb
xchg
iret
dec
fimuls
mov
addr16
and
sbb
inc
or
sub
and
or
mov
sbb
dec
add
inc
mov
sbb
lods
mov
inc
inc
push
jl
mov
fwait
int
out
enter
pop
jl
pop
fnstcw
arpl
and
enter
push
movsb
loopne
jnp
dec
bound
inc
loopne
lds
adc
mov
fwait
mov
inc
inc
or
movsl
add
and
xor
xchg
mov
sbb
jle
mulb
out
ret
pop
xchg
movzwl
mov
in
or
fmull
push
lret
and
sti
arpl
or
pop
inc
push
inc
icebp
bound
popa
cltd
mov
jl
or
adcl
test
push
push
add
mov
dec
cvtps2pd
insb
xchg
dec
lcall
xchg
push
gs
outsb
popa
fcomps
add
pop
push
ljmp
repnz
ljmp
and
cmp
dec
mov
pop
pop
mov
xchg
mov
testl
fimull
nop
push
sub
mov
push
outsl
addr16
pusha
and
inc
test
lahf
scas
lahf
cmp
scas
pop
call
push
or
pop
push
enter
add
stos
jne
cltd
jno
cmc
cmp
sbb
jbe
fildl
js
sbb
mov
rolb
lahf
inc
pop
int
adc
add
cmp
adc
push
loope
lahf
icebp
and
xchg
cld
rcrl
aam
push
push
cmp
cmp
in
shll
jno
mov
inc
imul
xlat
ret
pop
mov
adc
enter
pop
std
sub
cmpl
adc
or
xor
sub
outsb
mov
es
pop
and
fimull
sbb
mov
cmpsb
dec
pop
lds
xchg
lods
ret
js
sub
inc
dec
lcall
ds
clc
and
add
push
ss
dec
cld
mov
add
dec
mov
mov
mov
or
js
jb
sub
sub
dec
push
push
push
lahf
push
sub
shrl
out
lods
sbb
mov
add
cmp
jbe
ds
jg
loope
fbld
les
adc
jns
pop
jae
adc
aam
jnp
fisttpll
mov
int3
sti
lret
xor
std
lret
push
insl
imulb
cmp
mov
imul
jmp
jno
xchg
data16
sub
and
into
xchg
and
arpl
fs
xor
jno
scas
imul
and
arpl
and
int
dec
dec
add
lcall
cmp
mov
iret
inc
xchg
pop
pop
and
mov
jb
push
int3
push
sub
jg
sarl
dec
push
xor
sbb
sbb
mov
inc
jbe
cmp
ret
or
je
mov
inc
cli
cmp
mov
pop
xchg
push
dec
jp
pusha
mov
or
fisttps
mov
test
cmp
mov
out
xchg
pusha
es
push
out
cs
fistpll
mov
incl
cmp
push
add
inc
lcall
into
mov
push
or
mov
pop
in
ja
xlat
hlt
sub
or
mov
or
gs
fwait
mov
adc
xchg
jg
lds
stos
cmp
cmp
jle
lods
and
fistps
push
sbb
dec
jne
mov
decl
sub
in
cltd
xor
test
mov
daa
xchg
shl
dec
call
jg
out
stos
sub
movsb
dec
mov
in
mov
ret
adc
outsl
ficompl
push
stc
insl
cmp
clc
push
add
push
sbb
cmp
ds
ljmp
arpl
shrl
outsb
cmp
lods
xor
jnp
outsl
push
aas
repz
cmc
outsb
mov
test
or
push
loopne
lahf
mov
cmp
out
in
outsl
adc
mov
pop
jge
mov
inc
lds
dec
repz
outsb
ds
sbbb
sbb
aaa
sub
or
stos
int
xor
les
push
lock
cmp
jg
rcll
add
sub
push
leave
dec
inc
lods
inc
or
push
sbb
jne
xchg
push
js
or
mov
mov
inc
pop
inc
repz
sbb
mov
mov
cmc
xor
mov
add
cmc
jg
std
cmp
sbb
iret
xchg
div
dec
arpl
pop
arpl
jo
adc
push
sub
lea
rol
outsl
add
push
inc
sbb
push
pop
jo
mov
cmp
mov
sahf
xor
xor
mov
ds
call
sahf
push
or
mov
sub
jb,pn
aam
ds
mov
test
mov
or
sub
enter
lods
push
out
stos
push
jne
dec
in
inc
push
dec
cwtl
and
jmp
call
aas
cmp
cmp
dec
jo
sbb
dec
in
jecxz
xor
sub
mov
cs
sub
aam
xchg
pushf
pop
sub
push
fidivrs
and
cmc
push
sbb
dec
sub
sbb
fxtract
dec
repz
adc
mov
dec
cld
xchg
adc
sub
cmp
iret
xchg
outsb
xor
stc
test
pop
mov
push
and
jne,pt
loope
flds
rcl
ljmp
les
sub
outsl
sub
sbbl
ljmp
cmpsb
dec
xor
testb
jns
mov
ljmp
xchg
jnp
jecxz
mov
fucom
dec
jno
sub
jle
cmp
leave
or
pushl
mov
xlat
dec
push
cli
add
jecxz
and
nop
dec
push
clc
hlt
sbb
sbbb
xchg
jmp
and
aam
pop
mov
mov
xchg
sbb
mov
lods
rcrb
add
inc
pushw
or
rorb
cltd
add
icebp
inc
mov
mov
lods
sub
dec
fs
xchg
sahf
je
lret
fwait
ljmp
outsb
dec
lcall
sbb
cwtl
lods
adc
fs
sub
imul
ror
sahf
jle
stc
or
insb
jmp
stos
andps
dec
popa
sub
sub
mov
push
bound
add
ljmp
cmp
fdivrl
dec
les
fpatan
xor
pop
outsl
sbb
fsubs
sub
cmovo
ret
sbb
cld
roll
add
jno
jo
fildll
int
ja
jmp
aas
jno
movsl
dec
pop
adcb
gs
out
push
call
jmp
sub
sub
repz
pop
in
into
mov
add
inc
mov
cmp
push
arpl
inc
adc
lds
xor
sub
mov
aam
mov
cli
in
sarl
xor
add
sarl
repz
mov
or
and
nop
lcall
repz
dec
out
test
or
leave
cmpsb
test
cmpb
cltd
sub
pop
jb
xor
adc
fisttpll
test
cmp
stos
dec
mov
cld
sbb
push
push
push
insl
mov
ret
imul
pop
jge
aam
adc
call
mov
sbb
mov
or
jg
out
jmp
push
les
lea
push
push
stos
or
das
and
xchg
loop
jnp
pop
xchg
mov
xchg
sahf
adc
jecxz
lcall
lea
mov
xchg
adc
es
daa
inc
mov
adcl
rorl
lock
aaa
das
cmp
scas
sub
in
stos
pop
aas
adcb
ja
sti
ss
aam
adc
popf
mov
mov
jne
push
jmp
in
imul
sub
mov
mov
jne
xchg
pop
inc
jns
sub
inc
sti
fnstenv
cmp
sbb
mov
repnz
je
imul
das
out
push
dec
adcb
popf
loop
faddl
adc
add
cmc
pop
out
sbb
xor
rcl
ret
jmp
pushf
stos
test
pop
push
inc
xchg
add
in
call
mov
xchg
iret
mov
shlb
mov
in
mov
movl
lahf
xlat
pop
pushf
mov
ss
sub
or
inc
lds
pop
cmp
push
inc
stos
arpl
leave
mov
je
cmpsl
dec
jbe
hlt
add
popf
gs
and
and
mov
fisttps
fldcw
aas
ljmp
in
mov
pop
cmc
xchg
mov
push
push
cmpsb
mov
mov
jp
adc
cmc
rcrb
add
push
out
inc
popf
xchg
cmpsl
and
ret
mov
clc
ljmp
int
ja
test
mov
call
jno
ja
mov
pop
cld
imul
jge
fists
add
dec
cmp
inc
ds
cmc
rcrb
lcall
inc
push
mov
and
emms
adc
test
push
sbb
insb
mov
jmp
inc
or
aaa
loope
pushw
mov
push
testl
push
sti
dec
cwtl
fs
stc
and
push
pop
int
inc
test
jp
movsl
call
dec
jmp
cmp
adc
stos
subl
cli
sub
xchg
cmp
imul
sbb
adc
xchg
inc
outsl
sti
js
call
add
movsb
sub
fcoml
aas
cmp
repz
add
xchg
and
push
fucomip
adc
inc
in
ja
inc
and
imul
repnz
je
popf
pop
or
ds
rcl
dec
jno
jp
mov
push
mov
mov
ja
loopne
in
loope
insb
push
bound
dec
xor
ja
popf
cli
push
pop
jne
shlb
sub
pop
out
lcall
cmp
dec
imul
scas
mov
xchg
stos
jbe
jle
rorb
bound
jo
xchg
bound
addb
cwtl
aam
pusha
push
mov
jmp
xor
leave
icebp
cmp
add
aaa
lahf
xchg
gs
push
imul
hlt
lret
mov
sti
sub
jb
cltd
aaa
or
or
repnz
popa
mov
int3
mov
xor
clc
scas
jb
ret
dec
lcall
inc
imul
sbb
jl
push
arpl
std
daa
jno
shr
in
xor
outsl
mov
sub
sub
jae
lret
fdiv
dec
mov
jb
jmp
mov
in
cli
imul
cmp
rolb
mov
jno
and
xchg
aam
mov
adc
aam
adc
sub
dec
mov
lods
jo
in
xchg
adc
dec
out
mov
jnp,pt
fdivr
sub
pusha
inc
sbb
mov
add
cwtl
xchg
stos
int3
xor
pop
mov
loop
cmp
mov
out
jnp
enter
out
cmpsl
xchg
add
shll
ret
int
daa
jmp
cmp
add
mov
dec
lret
pop
arpl
decl
jle
out
pusha
into
sbb
sub
iret
icebp
inc
lds
enter
and
adc
rolb
stos
dec
fmuls
pop
mov
sub
shrb
outsl
mov
mov
fimull
cmp
mov
in
jge
push
cli
stc
and
lods
pusha
int3
jnp
dec
and
in
popf
dec
andl
loop
cmpl
dec
xchg
sub
call
dec
dec
jae
xor
pusha
std
out
enter
jns
push
cmpl
add
icebp
adc
mov
lods
mov
jae
mov
adcb
imul
scas
das
icebp
insl
mov
bound
inc
mov
inc
jecxz
std
jnp
nop
sbbb
xor
test
cld
push
push
sub
xchg
mov
dec
cmc
sub
in
push
ret
jo
loopne
cwtl
and
out
lahf
shrl
sbb
jecxz
idivl
sbb
icebp
mov
test
jmp
jecxz
dec
add
mov
shrl
in
xor
xchg
push
and
out
cld
xor
mov
out
sub
ds
sub
pop
orb
jl
add
or
imul
sub
test
outsl
cwtl
mov
or
mov
outsb
psllw
sbb
js
hlt
push
jo
stos
jg
mov
daa
ret
testb
fst
mov
test
orb
mov
jp
pop
add
ud1
shlb
int
sahf
test
cmp
lods
out
push
lret
or
mov
sbb
orb
pushf
add
loope
jbe
or
out
nop
out
das
lds
xchg
xor
pop
inc
shl
sub
sahf
in
dec
push
mov
pop
andl
cmp
jecxz
pop
outsb
outsl
jmp
mov
add
subb
shl
dec
push
jo
push
jge
mov
scas
in
push
dec
dec
arpl
dec
inc
mov
xor
movsl
pop
into
jns
mov
and
pop
jbe
pop
ret
in
inc
mov
sarl
in
adc
push
or
and
imul
inc
mov
xor
add
mov
idiv
fsubr
bound
popf
mov
out
xchg
aam
push
sub
add
xchg
and
xchg
jo
insb
int3
sbb
daa
or
test
jns
push
int3
test
sti
js
fwait
sub
cmpb
mov
lret
or
fidivs
lret
inc
and
pop
and
jl
ret
gs
std
in
dec
xor
jl
mov
sub
dec
jl
mov
repnz
movsl
fcompl
ret
push
iret
fdiv
pop
fisttpll
lods
call
or
push
scas
mov
sbb
jl
push
jbe
sub
push
sahf
pop
je
sub
mov
popa
pusha
push
jge
sbb
and
inc
movsb
popa
outsl
das
pushf
push
lahf
aaa
subb
mov
xchg
in
inc
test
leave
test
pop
adc
gs
xchg
xchg
mov
icebp
inc
push
xchg
aaa
ss
popa
dec
mov
mov
jmp
xchg
out
inc
mov
je
xor
testl
pop
aam
inc
xchg
mov
nop
popf
sub
pop
xchg
aas
mov
xchg
add
sub
sub
xlat
pop
mov
push
adc
cmpsl
pop
out
sub
mov
adc
imul
mov
in
or
in
out
push
outsb
xor
loope
pop
ss
mov
cwtl
sbb
xlat
mov
or
cmp
std
cmp
add
jp
lahf
cmp
ss
xchg
pushf
mov
cmp
pop
inc
mov
ja
add
movsl
jbe
test
iret
fiadds
in
ret
sbb
stos
dec
leave
jnp
push
cmp
and
popf
and
testl
inc
and
push
mov
in
gs
mov
fnstcw
loop
nop
xchg
push
xchg
cmp
repz
cmp
shrb
jecxz
xchg
dec
cli
sbb
in
fwait
adc
ret
lock
lcall
lcall
adc
push
lahf
inc
ss
xor
push
repz
or
sbb
jbe
ss
mov
pop
dec
je
aad
les
dec
addr16
loop
sbb
adc
sbb
xchg
popf
ja
cmp
inc
and
push
mov
and
out
mov
insl
cmpsl
repz
neg
test
and
call
cmp
fisttpl
pop
ss
or
xor
push
push
les
xchg
push
lret
or
addr16
sbb
sub
fiaddl
xchg
jle
xlat
xchg
arpl
in
pop
add
mov
sbb
cmp
cmp
in
dec
pop
call
mov
mov
xchg
icebp
dec
imulb
lret
adc
pop
call
fisttpl
push
mov
sub
sbb
cmc
sbb
jnp
jmp
cs
popa
movsl
push
and
and
les
mov
stos
and
orb
outsb
lods
lcall
ret
lcall
cmp
xor
lcall
dec
test
insl
pop
push
arpl
cmp
sbbb
add
js
inc
mov
xor
in
lret
dec
inc
or
sahf
cmp
clc
xor
pop
xchg
inc
lret
mov
sti
lea
repz
mov
outsl
inc
fucomp
and
pop
and
nop
inc
add
stos
pop
mov
sbb
push
inc
loop
andps
testb
mov
test
nop
push
adc
mov
pop
xor
or
adc
mov
jmp
xchg
pop
cmp
sub
test
or
cmp
fmul
cld
ljmp
jbe
lock
into
fcomi
push
ss
jge
aaa
dec
outsl
ficomps
test
aas
xor
inc
mov
or
in
scas
hlt
rclb
mov
cwtl
cmpsb
xchg
xchg
sbb
sub
jns
and
xor
and
or
out
adc
insl
inc
or
push
out
mov
nop
push
xor
fwait
scas
add
cli
stos
imul
sub
xor
cs
repz
pop
pop
push
in
stos
test
inc
and
lcall
jb
dec
sbb
enter
cmp
xchg
inc
mov
push
dec
or
arpl
fs
aaa
or
testl
inc
aas
daa
mov
sbb
xlat
mov
mov
mov
xor
mov
mov
in
pop
inc
xor
lods
js
fwait
orl
dec
popf
or
push
pushl
test
add
inc
xor
and
mov
mov
mov
dec
push
in
dec
sbb
jecxz
clc
ljmp
lea
lret
arpl
pop
pop
test
push
cmc
enter
sbb
lods
sbb
add
xor
test
cmpsb
sub
ja
adc
adc
in
fmull
jl
int3
jo
pop
aad
lods
pop
xlat
aas
pop
test
mov
jb
mov
mov
dec
ds
shll
scas
cmpl
and
add
push
pop
jg
cltd
lret
fwait
iret
add
test
popf
push
xor
fdivp
es
inc
into
enter
cmpsb
sub
or
stc
rorl
insl
insb
test
fxch
jo
call
ds
and
xor
popf
lods
aaa
xor
filds
subb
dec
mov
into
jge
cwtl
arpl
pop
push
nop
dec
out
shll
lahf
dec
ja
sahf
scas
mov
xchg
adc
or
adc
ret
adc
push
mov
shll
mov
add
in
shr
mov
pop
inc
lods
push
jp,pn
adcl
xor
mov
notb
push
inc
test
lods
mov
push
shld
jno
xchg
inc
xchg
jo
push
das
pusha
in
scas
inc
fstpt
xchg
mov
cmp
dec
and
hlt
daa
sti
cmp
inc
lret
cs
aam
mov
pop
dec
pop
out
sub
out
sbb
aad
out
test
sbb
cmc
loop
rorb
fnstenv
mov
std
dec
test
pusha
pop
lods
xchg
scas
inc
xor
daa
enter
dec
imul
dec
dec
xchg
dec
inc
dec
outsb
sbb
shrl
add
sub
adcb
dec
push
sub
push
add
dec
test
sbb
fbld
lret
data16
and
cli
sub
outsb
sbb
push
test
jge
scas
fdivrl
adc
out
and
repnz
add
sbb
lahf
in
push
push
inc
add
pop
or
jmp
cs
and
mov
loope
push
lock
pusha
popa
lcall
jnp
lds
out
push
inc
xchg
mov
xor
jg
imul
cmpsb
cli
inc
rcrl
add
stc
sti
add
pop
cmpsb
test
adc
ret
xchg
jmp
sbb
dec
inc
xor
adc
aaa
in
pop
jmp
add
sbb
ja
adcl
mov
xlat
pop
loop
push
outsl
sub
in
pusha
xchg
push
ljmp
gs
cmpsl
inc
jo
push
nop
dec
ss
movsl
jbe
cs
pop
shl
push
push
dec
cmp
or
mov
out
jno
mov
outsl
jae
xchg
push
ja
lret
sbb
popa
or
add
mov
mov
aaa
aad
mov
mov
and
jmp
sbb
xchg
push
mov
maskmovq
divl
mov
mov
sbb
push
jno
nop
insb
xchg
jo,pt
dec
fsubl
xor
scas
mov
in
ret
xor
int3
mov
aaa
inc
xchg
inc
pop
mov
pop
loope
shll
in
nop
ficomps
movsb
into
pop
or
cmc
fidivl
test
adc
scas
int3
sub
fsubs
xlat
sub
fimull
mov
sbbb
mov
stc
movsl
leave
xchg
rol
mov
jnp
sbb
sub
push
in
inc
or
inc
ds
lods
scas
scas
add
adc
call
rclb
fstpl
jp
movsb
or
push
daa
ljmpw
insb
sahf
jmp
lds
or
stos
xor
pop
xchg
andl
popa
in
cmpsl
shlb
std
lea
pop
stos
popf
cmc
pop
je
hlt
loopne
scas
mov
mov
cmp
lock
je
xchg
fimuls
mov
cmpsb
jno
push
push
jnp
pop
popa
jg
inc
dec
or
in
popf
pop
and
pop
inc
sbb
push
repz
scas
inc
or
or
mov
jmp
mov
cli
addr16
sbb
xor
call
or
mov
xchg
les
or
cmp
scas
cwtl
xchg
repnz
pushf
or
pop
or
outsb
pop
cs
lret
movsl
xchg
mov
movsb
addr16
rolb
sbb
mov
in
sub
outsl
ret
cmp
add
sahf
push
xor
jne
xchg
dec
mov
dec
inc
dec
jbe
outsb
xchg
lods
push
sbb
mov
cltd
test
mov
or
test
sbb
mov
inc
call
test
and
adc
cmc
enter
pop
sub
xchg
jecxz
jb
ss
cmc
cmp
jb
pushf
jl
or
rolb
add
xchg
aad
aad
out
loopne
fstpt
jp
jl
jle
arpl
bound
xor
test
pop
mov
xor
int3
mov
jb
push
mov
dec
mov
clc
repz
into
jbe
inc
rcrl
sub
or
cli
mov
xor
lahf
loope
mov
or
sub
mov
insb
mov
add
mov
push
negl
cltd
stos
xor
sub
sub
cmpsl
adc
sub
adc
out
mov
rcl
into
clc
mov
int
mov
sbb
scas
and
mov
clc
xchg
sahf
fs
icebp
je
inc
fstps
mov
or
mov
mov
shlb
lock
push
add
pop
out
jl
lret
and
arpl
cltd
or
int3
in
sarb
das
pop
jp
into
pop
aam
outsb
lock
cmp
insl
aam
pop
lret
aam
scas
lret
std
mov
addr16
pushf
adc
icebp
mov
and
jg
lret
aam
and
mov
pop
imul
mov
push
stos
lock
inc
fcmovnb
ljmp
decl
stc
dec
popf
push
jae
pop
mov
jp
mov
mov
lcall
lds
adc
mov
insb
arpl
xchg
sub
add
in
lea
test
out
and
daa
shrb
ljmp
inc
dec
or
jle
test
cmp
int3
mov
dec
adc
loop
popa
dec
jmp
mov
xchg
fadds
jle
jmp
adc
adc
mov
or
fnstcw
mov
pushl
ja
jbe
jno
leave
sub
push
jle
push
dec
and
nop
mov
push
cmp
push
or
mov
xchg
iret
sbb
inc
nop
jae
lret
xchg
sbb
dec
pop
or
insb
xchg
ljmp
and
mov
mov
push
sub
sbb
cmpsb
in
add
push
xchg
pop
push
or
xor
ss
nop
movsl
sub
test
out
dec
sti
call
out
cmp
lds
insb
push
lret
popa
stos
shll
aad
mov
dec
pop
imul
or
or
insl
pop
psrlq
mov
xor
and
push
lds
mov
add
aam
and
jae
ret
sbb
jp
xchg
ret
iret
cmpsl
and
daa
dec
outsb
cmc
test
mov
mov
jle
dec
js
lods
lahf
scas
adcl
test
sub
sub
jne
rcl
into
push
test
mov
push
xsavec
xor
mov
jp
hlt
ret
insl
dec
fwait
push
jle
jno
and
dec
jle
add
cs
loope
addr16
sarl
dec
push
mov
inc
enter
outsl
mov
pusha
adc
stos
cmp
and
cltd
and
sub
cmp
dec
xor
xchg
arpl
call
pop
lcall
mov
jmp
mov
fcmovnb
fnsave
cmp
mov
xor
mov
imul
ret
stos
in
cmpl
lret
cmp
pop
and
sbb
sbb
push
cwtl
inc
outsb
cmp
push
jmp
add
mov
xchg
pusha
rcrl
push
out
xorl
enter
es
mov
cld
outsl
shrb
mov
ja
inc
jne
inc
mov
leave
sub
jne
and
cmc
daa
xchg
mov
cld
push
cld
adc
mov
sbb
das
dec
mov
jecxz
incb
adc
cmp
cmpsb
fwait
test
movsb
pop
pop
or
mov
mul
faddl
loope
cltd
vmread
pop
mov
inc
lds
inc
add
dec
ss
mov
push
repnz
mov
ret
leave
ds
in
lret
enter
das
mov
test
jmp
pop
fiadds
les
mov
gs
cmp
sub
loope
xchg
int3
in
loopne
fstl
ja
jge
lcall
pop
adc
call
and
jb
inc
cs
and
mov
hlt
cld
jmp
adc
push
movsb
loop
lds
cld
pop
inc
insb
and
sbb
out
subl
scas
insl
rorl
fwait
cmp
dec
lret
adc
add
out
adc
cmp
scas
sub
jle
push
mov
push
mov
xchg
fidivs
cs
xchg
movsl
mov
pop
push
inc
dec
push
push
js
movsb
cmc
insl
aas
adc
popf
sbb
aam
popa
jne
loop
in
or
lcall
pop
insl
inc
cmp
call
jecxz
mov
std
adc
add
and
xor
fstl
xchg
icebp
push
movsl
mov
adc
lock
aas
ja
mov
aam
mov
lods
jno
adc
aas
loope
out
and
lcall
mov
sbb
js
aam
adc
push
out
insl
xor
inc
icebp
hlt
push
ljmp
rolb
and
popa
ss
dec
xchg
aaa
cmpsb
aad
cmc
fnstsw
or
mov
lret
call
xor
ja
pop
adc
mov
add
in
mov
fwait
dec
ret
mov
and
jnp
adc
lcall
cmpsb
scas
fistps
mov
es
stc
add
xor
aas
xor
jl
mov
jmp
shll
sahf
xchg
or
fdivr
pop
imul
scas
loop
in
xchg
mov
xchg
pop
fildl
into
in
aam
mov
ds
push
movsl
js
mov
leave
jecxz
dec
cmpsl
in
fs
xorb
pop
sub
and
mov
lods
ret
mov
hlt
cltd
cmp
add
dec
out
adc
ds
sahf
mov
lods
or
insb
pushf
adc
ss
xor
jae
mov
aam
mov
lcall
or
fiadds
push
pop
mov
fcmovnbe
dec
inc
fisubrl
or
pop
stos
fsub
jb
repz
add
jmp
mov
fmuls
xor
sub
inc
inc
cld
mov
push
pop
sti
push
push
stos
mov
es
mov
cmpsl
arpl
or
and
mov
mov
jne
jp
in
add
fwait
and
lods
fcmovu
insb
or
nop
mov
push
aad
lret
xchg
scas
popf
pop
jge
cwtl
adc
xchg
in
mov
jae
jmp
xchg
inc
fwait
sbb
insb
add
mov
movsb
popa
sbb
pop
enter
subb
xor
mov
fwait
int3
xorb
out
ja
rcrl
mov
pop
add
pop
pop
push
aad
ja
adc
ss
in
das
nop
xchg
movsl
cmp
add
inc
mov
xchg
pop
clc
adc
add
shrb
xchg
push
mov
rclb
sub
subb
insl
ja
push
sub
rcll
cmp
pusha
in
pushf
jbe
sbb
xor
jbe
popa
xlat
mov
cmp
popf
loopne
ljmp
movsb
xor
dec
xchg
xor
ret
xor
dec
adc
cmp
clc
jns
out
cmp
lea
stos
aam
cmp
push
testb
add
fisttpll
adc
xor
ljmp
fs
mov
or
xchg
das
add
nop
outsb
xor
ljmp
dec
mov
cli
add
mov
pop
test
insb
cmp
aaa
mov
dec
dec
xor
mov
sbb
cmpsb
sbb
dec
fists
fcomi
dec
add
pop
jne
and
mov
sbb
mov
hlt
cmp
fwait
xchg
test
inc
movsb
jge
call
je
ret
xchg
push
nop
or
sbb
xor
movsb
cmp
dec
dec
cmp
pop
sti
es
add
cltd
mov
cmp
pop
mov
lock
and
es
imul
fcmovnb
sti
ljmp
sti
pop
lods
pop
adc
jns
xlat
push
and
sub
mov
sahf
movl
adc
jo
sub
push
popa
sub
cmpsb
or
pop
mov
fadds
loope
icebp
mov
in
cmp
xchg
inc
es
adc
cmp
aaa
into
in
or
push
icebp
mov
test
mov
inc
push
push
enter
or
scas
mov
push
adc
mov
xor
scas
jbe
sbb
adc
cld
pop
push
ss
xchg
sbb
testl
and
pushf
loop
inc
das
enter
pop
sbb
push
icebp
sbbl
xchg
add
inc
repz
aad
int3
inc
cmpsb
call
or
xchg
sub
popf
push
addb
cmp
mov
xchg
sub
clc
dec
imul
adc
or
scas
push
out
jo
cmp
clc
xor
jne
inc
push
sbb
jns
and
sar
xchg
push
int
fsubrs
xchg
push
sub
fnstenv
and
mov
mov
xor
cltd
cwtl
daa
mov
gs
stos
cmpb
cmp
mov
sbbl
nop
loope
repnz
andl
mov
mov
repz
out
mov
xchg
stos
aam
mov
cltd
cmp
cld
push
imul
mov
inc
mov
xchg
popl
mov
adc
outsb
sub
xorl
dec
inc
or
and
cmpb
out
cmp
insb
cmovnp
xor
sub
pop
sub
nop
cmp
xor
mov
lahf
lock
xor
mov
movl
pop
cmpsb
add
mov
out
jnp
clc
jle
fdivrs
xchg
mov
insb
pusha
ss
mov
ret
mov
incb
push
mov
mov
xchg
mov
jne
gs
mov
popl
pop
xchg
sbb
adc
or
jne
das
inc
loope
ss
push
add
mov
aad
push
lods
loope
outsl
ret
jae
jnp
mov
daa
sub
jmp
cmp
lea
inc
mov
xchg
jae
scas
lods
aaa
cmp
cwtl
cli
ss
andb
jne
push
les
imul
mov
jne
mov
jno
jmp
mov
out
add
dec
push
fisubrs
or
push
pop
lahf
pop
mov
std
out
pop
insb
mov
cmp
cmp
lahf
and
mov
mov
add
je
or
lds
mov
addr16
jno
das
add
daa
into
fsubrl
pop
push
mov
pop
notl
cld
pop
mov
aam
sub
jecxz
rcrb
inc
pop
jo
movsl
std
loopne
jmp
sbb
lret
je
dec
and
pop
jae
push
mov
jle
lea
sbb
arpl
push
imul
xchg
call
sahf
inc
push
xchg
and
cs
int
sbb
mov
add
aaa
andl
imul
cmpl
and
xor
sti
add
add
subl
cmc
push
sub
insl
fsubrl
sub
mov
cs
push
or
popl
sarb
jmp
fdivr
fwait
cmp
call
jb
hlt
stc
out
mov
xor
pusha
out
scas
mov
rcl
push
pop
mov
and
push
ret
jne
fbstp
lahf
jl
mov
mov
dec
adc
adc
sbb
adc
jecxz
out
test
psraw
fsubl
pop
rclb
and
das
inc
mov
mov
inc
add
mov
push
in
mov
push
xor
pop
pop
movsl
cwtl
sbb
mov
jo
push
and
cli
or
and
repnz
cmp
and
dec
mov
push
push
mov
and
cmp
push
cmp
and
push
lret
gs
dec
mov
movsl
dec
shll
xchg
mov
pop
enter
mov
sub
cltd
lahf
test
test
sub
mov
pusha
or
shrb
outsb
mov
mov
xchg
in
ljmp
int3
les
test
mov
jle
outsb
or
sub
mov
pop
cmpsb
adc
sub
jo
cmpsl
into
xchg
bound
cmp
pop
cmp
or
mov
arpl
xorl
push
lret
aas
ja
call
sbb
jp
dec
outsl
cli
cmpsb
adc
test
xor
in
in
cmpsl
rcr
and
push
not
xchg
lret
bound
inc
xchg
pop
dec
cmpsb
push
sbb
cs
rcll
and
jb
dec
sbbl
fcompl
xchg
int
push
arpl
dec
pop
loope
out
adc
jnp
lock
inc
sub
cmp
stc
adc
mov
and
repnz
jbe
neg
add
inc
loope
jbe
cli
ljmp
push
movsb
rclb
inc
bound
in
fcmove
arpl
jb
inc
hlt
xor
stc
aad
fs
pop
cltd
mov
pop
xor
es
mov
jbe
ljmp
pop
jnp
shrl
fxch
xlat
push
sub
sub
repnz
sbb
pop
gs
nop
out
mov
adc
fstl
inc
mov
dec
jns
xchg
sub
xor
and
dec
sbb
add
sub
sbb
lea
lahf
cmpsl
cmp
jmp
xchg
out
sbb
or
in
movb
sbb
loopne
and
mov
jge
mov
orb
jl
hlt
sub
pop
pop
xchg
jbe
push
jbe
cmp
ja
aam
loopne
dec
mov
dec
push
inc
imul
stc
inc
imul
dec
jno
dec
arpl
jle
push
test
or
dec
pop
jg
jl
ljmp
jecxz
cmp
or
cld
nop
pop
mov
sub
or
adc
inc
xchg
push
dec
int
pushf
jg
daa
pop
xchg
cmpsl
inc
test
insl
insb
push
cmp
or
mov
lds
scas
fcomp
ljmp
or
push
push
mov
sub
imul
call
mov
dec
or
cmp
adc
xlat
sbb
shlb
in
mov
scas
loop
cli
and
cmp
fistpl
push
das
xor
cltd
pushl
int3
pop
aam
stc
lret
popl
xor
and
mov
adc
dec
aas
add
push
xor
xor
pop
and
jno
es
addr16
inc
xor
sub
push
xchg
pop
incl
mov
xor
hlt
dec
inc
adc
sbb
xor
flds
test
sbb
mov
xchg
sarb
dec
in
and
loop
add
mov
adc
add
repz
imul
or
sti
sahf
in
test
mov
dec
js
fmul
popf
lds
jo
lea
daa
xor
sub
shlb
adc
lods
loope
lea
push
stos
sub
and
incl
lret
nop
xchg
fcmovb
incl
push
pop
ret
lret
push
cmp
inc
xchg
add
cmp
and
push
sbb
sti
cmp
scas
jne
add
cmp
inc
js
dec
scas
jae
adc
negl
shll
pop
fdivrp
loopne
roll
mov
and
je
test
lret
test
pop
dec
sti
iret
fadd
and
jb
pop
lcall
add
jecxz
adc
push
out
or
clc
ret
sarb
mov
push
addr16
pop
cmp
add
fdivrl
sub
cmp
imulb
sbb
adc
ret
das
fsubs
aad
sbb
cmp
jge
jl
pushf
mov
out
into
addr16
sbb
and
fimull
mov
xor
loopne
sub
mov
lret
xor
xchg
cmc
sbb
mov
mov
push
mov
push
out
or
jl
jne
xor
and
mov
mov
xor
loop
xchg
mov
adc
orb
jle
lret
pop
stos
xor
mov
call
push
mov
mov
lds
jle
loop
out
orb
sub
popa
insl
aas
push
mov
lock
cmpsb
jnp
or
fildll
fcoms
push
addr16
mov
scas
pop
adc
inc
push
dec
cmpsb
rclb
rcrb
push
gs
lret
sub
lods
lahf
test
imul
mov
stc
xor
ds
cmpsb
gs
cmpb
sub
repz
jp
es
into
add
cmpsb
jle
out
push
ljmp
push
xchg
jbe
movsl
push
mov
out
ja
in
js
sub
jl
xchg
cltd
xor
cmp
insl
stc
mov
mov
lahf
repz
lods
xorb
jg
mov
test
test
adc
cmpsl
xchg
and
xchg
xchg
outsb
int
fldt
sub
sub
jl
pop
loop
enter
mov
int
bound
sbb
sub
popf
ds
scas
mov
mov
in
fdivrl
cmc
mov
js
jns
xor
push
mov
jp
insl
push
mov
pushf
mov
cltd
cmp
imulb
jecxz
test
jl
lock
pop
bnd
mov
stc
fildl
jns
inc
jae
outsb
test
mov
repnz
cmpsb
bound
je
lods
mov
cld
nop
cmp
dec
dec
js
sbb
fisubrl
dec
mov
xor
xchg
fcoml
inc
rolb
fstpl
popa
or
mov
mov
xor
sbb
xor
mov
je
imul
loop
sbbb
pusha
aad
popf
and
scas
mov
stos
jmp
cltd
or
fldenv
cmp
adc
loopne
and
dec
cmp
add
gs
push
test
call
out
leave
mov
outsb
sub
aam
dec
je
ffree
and
ljmp
addl
adc
in
popa
lods
gs
repnz
or
outsb
mov
and
gs
les
loopne
sbb
orb
aam
repnz
xchg
scas
mov
inc
add
or
xor
das
pop
xchg
pop
dec
sbb
adc
sbb
add
cmp
sub
shlb
shlb
dec
jle
ds
mov
push
stos
fisttpl
lahf
inc
adc
es
jne
push
je
popf
out
shl
pop
repz
adc
push
fmul
in
xchg
push
les
mov
cmp
or
sbb
sbbl
sbb
jo
out
jb
xchg
aam
dec
shlb
in
aad
frstor
mov
lahf
roll
jmp
dec
cmp
sti
pop
mov
cmp
cmp
pop
mov
cld
addr16
push
sbb
cmp
icebp
add
test
or
shrb
xchg
adc
je
int
pop
sub
das
pushf
mov
hlt
and
nop/reserved
repnz
push
push
xchg
and
mov
dec
xor
push
adc
adcb
fsubr
imul
pop
jno
sub
pop
sbb
xchg
outsl
jge
and
inc
fstpl
in
jle
cltd
js
rcrl
push
aam
dec
addr16
cmp
sub
xor
test
or
sub
push
cmp
imul
mov
dec
cld
cwtl
lret
mov
loope
aaa
bound
xor
xchg
jnp
inc
nop
mov
or
mov
stos
repz
xchg
cmpb
push
inc
jns
or
xchg
stos
xchg
sbb
lds
sarb
scas
mov
pop
pop
mov
pop
jp
xor
test
xchg
pusha
pop
lcall
add
inc
adc
pop
rorl
insl
lods
icebp
cli
imul
xor
mov
dec
push
adc
mov
aad
add
ja
push
mov
inc
xchg
bound
lahf
cmp
push
fisttps
popf
xchg
mov
jle
and
push
and
pop
mov
dec
imul
cmp
cmp
lahf
xor
cwtl
mov
aad
ds
sbb
push
jp
mov
cmp
and
xchg
arpl
and
jl
inc
int3
pusha
fidivrs
dec
js
sub
ja
sub
cmc
hlt
cltd
addl
sti
xlat
negl
sti
int3
into
js
adc
mov
or
int
repnz
jecxz
jge
ja
aaa
int
cmp
test
loope
or
insb
in
xchg
outsb
adc
inc
gs
push
add
jnp
inc
mov
sub
scas
es
stos
xchg
lock
repnz
dec
fs
cmp
loop
fcom
add
mov
cmp
arpl
sbb
push
dec
shll
jecxz
mov
adc
movsl
push
notl
add
fnstcw
mov
sti
xchg
cmp
or
push
mov
cmpsb
sbb
mov
in
mov
pop
insl
cwtl
std
cmc
rclb
push
out
mov
and
in
sub
andl
push
push
or
push
outsb
sbbl
cmpsb
pop
sarl
fcomps
fstps
mov
pop
pop
ror
pop
pop
clc
ficompl
clc
mov
or
sahf
and
outsl
and
rorl
sub
xchg
inc
adc
je
pop
cmp
xchg
jns
sbbl
pop
add
cld
in
ds
sub
jo
jne
out
mov
inc
movsb
lcall
add
xchg
and
lods
pop
gs
jo
inc
ret
int
lahf
mov
xor
ljmp
push
fidivrs
mov
sbb
cmp
loope
add
push
lret
mov
add
arpl
dec
xor
jle
mov
cmp
or
xor
loop
pop
ja
ror
gs
adc
out
adc
mov
fldt
pusha
pusha
ret
sbbb
mov
lret
fwait
nop
stc
dec
sub
aad
add
inc
push
mov
test
ret
xchg
mov
or
mov
jl
mov
fnsaves
rcrl
push
pop
stc
push
in
outsb
subb
jecxz
movsl
aam
and
pop
imul
lahf
fstpt
insb
and
and
ret
shlb
push
insb
scas
xor
mov
mov
aaa
cmpsl
push
push
hlt
insb
xor
adc
push
loop
jne
cld
sbb
lret
cli
aad
mov
dec
cmp
shlb
mov
add
or
stos
je
fstps
pop
and
xchg
push
adc
mov
dec
mov
test
fldt
inc
aam
dec
shll
int3
es
sbb
fsubrs
xchg
add
imul
xchg
mov
ljmp
ja
push
rcl
add
fidivrs
or
dec
mov
push
hlt
inc
cmpsl
addl
xor
pushf
push
fdivrl
jo
adc
js
sbb
sar
shll
incl
enter
subl
fsubl
inc
aaa
xchg
repz
xor
and
imul
les
test
jg
mov
cmp
xorl
xor
pop
or
idivb
idivb
pop
faddl
scas
pop
mov
repz
xchg
test
xor
leave
add
xchg
orl
mov
fldcw
push
dec
testl
rorb
arpl
andl
xor
insb
push
int3
pop
test
add
sub
xchg
pop
rsqrtps
xchg
lahf
sub
jp
add
or
loopne
jmp
out
adc
iret
pop
mov
mov
fcom
sub
mov
jnp
xchg
in
or
fiaddl
fwait
xchg
aad
mov
inc
xor
sti
adc
out
cwtl
or
pop
cmp
and
and
jmp
pusha
push
stos
stos
xchg
notb
adc
pop
and
jb
jl
movsl
loopne
fstps
xor
sbb
lods
mov
pop
mov
cli
test
adc
insl
mov
and
call
insl
cmc
clc
cli
xchg
xchg
fdivrs
mov
mov
cs
fdivrs
je
ljmp
or
sbb
jg
xchg
mulb
test
aam
or
adc
pop
lahf
ja
bnd
sbb
out
or
rcrl
mov
or
push
fcoms
fiaddl
sub
adc
rclb
cld
push
pop
xchg
and
ret
xchg
scas
in
jp
lds
inc
mov
sbb
mov
pushf
jae
insl
les
jbe
orl
pop
shll
push
sbb
pop
sahf
push
test
sub
add
push
es
dec
add
gs
xchg
jle
add
push
insb
or
jbe
cwtl
rep
lcall
stc
clc
fcomps
into
cmp
repnz
popa
mov
jl
sbb
cmpsl
out
leave
xchg
jmp
in
jle
lods
dec
ja
jne
psrlq
jne
fstpl
mov
pop
or
xor
inc
add
mov
pop
rorl
mov
fidivrl
lea
sbb
jge
xor
and
mov
arpl
ss
xchg
loopne
and
mov
rorb
hlt
push
outsl
std
sub
mov
adc
or
mov
outsl
outsb
inc
mov
add
sti
lcall
je
sbb
mov
jmp
inc
movsl
adc
and
loopne
cs
cmp
mov
std
mov
inc
xchg
test
mov
mov
stc
xor
or
dec
scas
jmp
stos
sub
push
icebp
ljmp
call
cmpsb
sub
push
inc
mov
decl
ljmp
std
insl
adc
or
inc
mov
int3
mov
test
popa
int
in
jecxz
ja
out
push
bnd
pop
push
or
xchg
xchg
dec
xchg
test
lock
fisttpl
out
fdivrl
pop
sub
cwtl
jl
push
mov
popa
and
adc
sub
inc
pop
testb
das
cmp
xchg
popa
sub
pop
cmp
pop
push
fs
add
aas
icebp
adc
insl
push
jecxz
insb
mov
in
divb
push
ret
mov
es
addr16
push
xlat
cwtl
pop
mov
mov
or
mov
dec
out
cmp
fwait
push
cmp
adc
aad
push
push
cmc
sarl
inc
or
repnz
jecxz
aaa
ror
push
daa
jbe
lods
scas
jne
sub
push
jmp
inc
ret
dec
add
sub
and
push
aaa
es
mov
cld
popf
rol
mov
cmp
jo
xchg
mov
adcb
mov
dec
imul
or
arpl
jbe
xchg
pop
scas
xor
ja
lods
je
xor
loope
outsl
out
fsubl
sbb
jmp
fldcw
push
fcompl
sbb
xchg
test
xchg
jmp
shr
andl
mov
mov
lahf
cwtl
aad
scas
outsb
sbbl
scas
inc
das
dec
in
roll
lret
popa
push
xor
aad
push
dec
clc
inc
ficoml
int3
push
xor
int3
xchg
sub
mov
lahf
shlb
insl
xchg
jg
cmp
push
pop
or
lret
jnp
enter
sub
pop
inc
in
and
or
xor
fcomps
dec
xor
push
dec
dec
fcomi
mov
or
je
mov
repz
int3
fisubrs
fistpl
pop
imul
outsl
add
pop
stos
cmc
fsub
rol
or
stos
pop
xchg
addl
xchg
mov
icebp
inc
xchg
fs
push
cli
adc
xor
or
pop
sbb
fldt
dec
adc
push
std
mov
mov
hlt
jae
and
rcrb
push
mov
push
mov
loopne
lcall
arpl
push
sbbb
dec
or
int
lcall
and
add
mov
add
mov
scas
xor
dec
xchg
lcall
out
pushf
push
mov
int3
test
cs
cwtl
in
movsb
pop
lahf
std
push
in
outsb
xor
imul
pop
push
scas
scas
stc
inc
sbb
icebp
ds
add
into
les
push
test
push
pop
dec
int
in
xchg
lret
clc
jecxz
inc
sbb
sub
cltd
pop
in
fldcw
push
mov
inc
mov
push
fsubr
into
rcrb
push
ja
dec
call
insb
int
int
fisubl
out
dec
mov
push
mov
inc
mov
jmp
aas
pop
paddsb
pop
into
stc
pusha
push
movsb
outsl
scas
adc
popa
lret
ret
cwtl
lahf
stos
add
cmp
cli
lock
jbe
jg
or
mov
sti
notb
pushf
xor
mov
insl
xor
push
lcall
mov
in
in
push
add
add
movsb
xor
das
mov
sbb
in
ret
lcall
ljmp
test
push
aas
mov
mov
inc
adc
jge
add
and
outsb
sub
fcomp
jl
pop
mov
inc
es
icebp
and
push
dec
mov
movsl
pop
outsb
pop
jle,pn
cmp
in
daa
lods
or
jg
int
cltd
idivb
cmp
stos
lock
out
inc
out
mov
or
mov
addr16
cmc
lods
inc
mov
xorb
outsb
and
jne
ret
inc
xor
mov
ret
mov
mov
sbb
inc
mov
daa
psubsw
jecxz
add
mov
add
js
pop
mov
sbb
push
adc
call
fistpll
fs
mov
lock
adc
dec
or
pop
lea
and
leave
cmpsb
mov
xor
inc
push
push
mov
or
mov
pop
add
fnstenv
and
jmp
inc
sub
loop
mov
inc
push
loope
lods
jl
stc
out
insl
mov
inc
lret
pop
mov
mov
imul
stos
pop
inc
inc
adc
jle,pn
icebp
inc
cmp
add
jo
in
add
scas
iret
fs
ja
int
mov
leave
pop
mov
stos
lock
dec
in
in
movsl
jmp
lret
dec
push
xchg
cmp
cmp
mov
pop
and
clc
mov
add
xlat
lret
xchg
sti
fmuls
test
cs
mov
xchg
sarb
sub
in
outsl
cld
dec
mov
sub
add
and
out
test
sbb
mov
mov
xor
aam
inc
xor
xor
push
sysenter
ss
dec
loopne
push
xor
mov
xchg
sbbb
pop
cmp
cli
lds
dec
inc
hlt
xchg
std
or
in
outsb
test
into
pop
std
dec
cwtl
push
cld
or
mov
jnp
mov
je
loopne
jo
insb
push
sbb
test
jns
sbb
or
pop
lahf
pop
cmp
addr16
push
ret
mov
and
std
ljmp
ret
mov
xchg
repz
roll
xor
data16
dec
push
out
cmc
xchg
mov
sbb
dec
sub
shlb
fildll
cmpl
inc
mov
add
pop
popa
mov
call
lods
push
mov
xor
js
sub
lret
jae
pop
cmp
sahf
rcrb
adc
sbb
pop
scas
cmp
cwtl
dec
pop
ret
das
pop
add
aam
add
fptan
xchg
mov
push
or
mov
sti
out
push
dec
sub
and
out
addr16
mov
fidivl
adc
or
adc
scas
adc
push
fsubr
sub
cld
lock
mov
nop
loop
sbb
and
mov
stos
nop
bound
adc
shl
lock
mov
xor
or
xor
arpl
lcall
int
jmp
inc
cmpsb
lcall
insb
push
jo
pop
mov
xchg
cmpsb
sub
inc
test
mov
sbb
lcall
mov
lretw
stc
fwait
rcll
loopne
sbb
jno
sbb
inc
int
cmp
imul
loop
mov
mov
xchg
sbb
jb
lock
jb
lock
fcoml
dec
jnp
add
das
mov
test
xor
scas
cmc
mov
hlt
mov
jo
lods
fstp
pop
nop
lahf
aam
fcomps
popf
xor
jmp
in
rol
outsb
imul
mov
scas
ljmp
test
xor
pop
adc
jo
inc
popa
out
loop
cmp
in
xor
or
arpl
scas
inc
out
cmp
sti
popf
mov
pop
aam
jo
mov
movsl
scas
dec
mov
rolb
pop
bound
xor
cmp
fdivrl
jno
out
pop
stos
arpl
mov
cmp
lret
fst
mov
add
inc
jle
jl
fimuls
sub
jmp
out
test
sbb
pusha
test
jle
negl
in
xchg
jb
push
sbb
loopne
jns
add
dec
mov
or
mov
les
lret
daa
call
fsubs
loop
mov
mov
dec
mov
push
mov
aas
jae
test
xor
pop
jge
push
and
lret
adc
and
mov
lods
insl
xor
mov
out
push
movaps
and
xorb
mov
out
mov
mov
push
push
xor
dec
lods
out
inc
fldl
push
adc
hlt
les
push
lcall
and
pop
add
xchg
imul
adc
xchg
push
mov
popa
pop
shlb
jecxz
cmpsl
in
cmp
jmp
fcompl
xchg
pusha
pop
dec
pop
push
in
faddl
fcmovne
std
sarl
int
push
jl
loope
mov
and
push
dec
pop
cmpsl
imul
out
shr
fistps
jno
mov
inc
hlt
lret
add
lret
jmp
insl
jne
bound
stc
xchg
xchg
test
fdivrl
xchg
push
enter
ret
add
fstpl
test
fcmovb
mov
aad
pop
bound
imul
xlat
scas
fwait
or
dec
add
loopne
push
iret
scas
aaa
cmp
sub
sub
or
dec
dec
dec
outsb
or
jb
jle
cld
mov
test
call
in
pop
lahf
cs
in
test
cs
movsl
jge
cmp
ljmp
push
mov
clc
jg
inc
cmp
faddl
jne
inc
dec
pushl
xor
push
out
mov
mov
xchg
std
adc
arpl
sub
mov
mov
int3
pop
mov
aas
lods
add
ret
cmpl
sti
or
lret
cmp
xchg
ss
sub
shrb
les
imul
and
scas
mov
and
ljmp
shl
movsb
mov
ljmp
mov
sub
rclb
mov
xchg
pop
mov
cmp
dec
add
xor
push
and
pushl
push
and
mov
pop
mov
push
xor
fwait
mov
outsb
mov
jl
push
add
dec
divb
mov
or
mov
sar
loopne
pop
stos
and
test
inc
je
add
adc
mov
pop
fnsave
std
ret
or
inc
shll
scas
xor
and
sub
pop
xchg
mov
inc
in
out
pop
mov
and
lock
mov
iret
scas
push
xor
out
insb
mov
ret
adc
fbld
mov
or
jle
ss
bound
mov
jb
inc
sub
and
mov
add
mov
add
push
pop
int
inc
jb
mov
sub
mov
sbb
cwtl
jns
and
inc
add
lds
arpl
sahf
jg
jge
mov
mov
fwait
jns
xchg
xlat
into
add
mov
test
sub
loope
or
dec
mov
popa
lods
jno
test
mov
aam
pop
xor
pop
inc
mov
and
mov
and
jmp
mov
fldt
idivb
push
scas
lcall
out
out
gs
cmp
xchg
imul
mov
jmp
fdivr
mov
add
sbbb
rcll
std
call
ret
push
xchg
jnp
mov
mov
ja
cmpsl
inc
loopne
xlat
repnz
out
adc
gs
in
or
jl
push
clc
loope
pop
ss
call
cmc
hlt
sbb
stos
orb
jbe
cli
sub
inc
sub
data16
xchg
addr16
cld
mov
outsb
mov
aas
and
pop
cli
insb
xlat
scas
adc
jmp
push
sbb
mov
and
call
jns
fisttpl
leave
xchg
arpl
fdivl
xor
jns
and
imul
cld
push
popf
xchg
mov
or
pop
lds
cld
cld
pop
enter
mov
mov
dec
sbb
push
sarl
mov
loop
aaa
mov
inc
in
dec
inc
push
xor
xchg
and
lods
inc
test
inc
jl
ljmp
adc
and
or
push
add
push
xchg
aad
pop
lahf
cmpsl
in
xchg
scas
jb
bound
test
sbb
dec
and
xchg
mov
push
mov
mov
pop
cwtl
bound
bnd
xchg
xchg
jne
lret
jbe
mov
add
call
imul
jnp
or
dec
jbe
test
pop
cmpsb
add
stc
arpl
push
ret
jecxz
andb
aaa
inc
adcb
mov
dec
ljmp
les
mov
pop
call
subb
and
push
enter
outsl
out
add
lea
cld
add
fildll
loope
outsl
gs
aam
es
sahf
sub
lock
sub
push
pop
imul
call
jl
push
sbb
sub
push
mov
inc
or
lods
aam
fwait
outsl
sub
xchg
addps
out
mov
cmc
aas
test
outsb
or
movsb
lods
sub
loopne
mov
fwait
mov
pop
hlt
push
sarb
add
sbb
mov
mov
aaa
lret
mov
cmp
nop
lret
mov
lods
arpl
fwait
cmp
dec
movsl
adc
mov
adc
loopne
jg
fwait
ja
inc
stc
cmpsb
sbb
insl
xor
out
jo
arpl
shr
cmp
fdivrs
mov
