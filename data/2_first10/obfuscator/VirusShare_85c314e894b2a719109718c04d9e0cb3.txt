push
call
ret
ret
jnp
jmp
add
mov
add
add
mov
push
fldl2t
movsl
xor
cmp
je
add
sub
adc
add
pusha
div
daa
je
test
lods
nop
sub
jmp
push
pop
mov
movsb
sbb
jle
hlt
addr16
and
mov
and
pop
test
adc
nop
cld
cmp
mov
in
xchg
jae
mov
push
dec
cmpsl
sbbb
or
ret
mov
cmp
shr
and
mov
inc
lods
lret
notl
and
shlb
mov
std
push
in
fcmovnb
and
jmp
in
xlat
stos
cmpsl
cmpsb
into
pop
pop
into
or
lret
pop
movsb
leave
sbb
xor
jbe
leave
adc
je
xchg
fsubrl
xchg
notl
jno
data16
add
push
in
adcl
and
sbb
dec
mov
js
outsb
insl
jae
ljmp
fwait
mov
xchg
push
adc
rcr
mov
sti
sub
fiadds
xchg
das
lea
push
dec
fistps
hlt
addr16
lret
dec
add
or
jg
sub
out
jl
push
addr16
add
ja
loop
xchg
clc
push
sub
cltd
sub
pop
das
xchg
mov
jp
popf
sub
jmp
jbe
jnp
push
ss
and
cmpsb
int
arpl
or
cli
adc
sti
lods
or
mov
xchg
andl
cltd
pusha
jmp
sbb
mov
jnp
loop
lret
dec
mov
inc
into
jle
cmp
inc
loop
fldcw
and
pusha
mov
rcrl
adc
jecxz
push
insb
push
pop
push
cmp
mov
js
mov
lods
decl
dec
out
push
jp
sti
mov
inc
mov
dec
ret
movsb
daa
or
rcrl
std
adc
sub
pop
rorl
pop
cli
add
mov
cmp
jb
mov
movsl
stos
stc
fiaddl
je
mov
rorl
mov
pop
and
call
int
cmp
mov
imul
push
stos
jmp
dec
push
lret
pop
stos
dec
jo
sbb
adc
inc
jo
ljmp
push
repz
jno
xchg
daa
jo
stos
push
nop
les
dec
pop
imul
jl
int
pusha
ret
stos
adc
insl
enter
repnz
fdivrp
and
pop
xor
or
cmpsb
js
scas
jecxz
in
and
aam
and
cmp
aaa
rorb
push
mov
das
and
and
sti
in
jb
js
cmc
sbb
loop
imull
out
roll
es
sbb
dec
mov
cmpsl
shrl
mov
or
mov
je
cmp
xchg
mov
xchg
out
cli
fisubs
jg
insb
in
sub
das
pop
lea
imul
inc
repz
cmp
jne
cld
lods
mov
jp
std
jmp
pop
sub
push
and
mov
adc
fucomp
shll
mov
clc
adc
push
ljmp
add
fsubrp
das
leave
pop
out
push
loop
xor
cld
in
jbe
iret
test
ss
notb
sbb
stos
push
test
test
pop
xchg
stos
dec
sbb
imul
add
pop
lcall
sbb
mov
test
cmp
inc
and
and
nop
jno
add
mov
mov
xor
inc
les
mov
stos
mov
or
in
shll
in
xor
adc
popl
ja
mov
lret
pop
ror
push
cmp
dec
mov
and
ja
jbe
and
cmp
mov
dec
jno
xchg
add
pop
xchg
dec
lods
pop
inc
test
dec
xchg
shll
adc
lret
pop
or
loope
fadds
sbb
push
fdivrs
mov
iret
insb
sbb
rcrl
fwait
mov
test
push
mulb
push
inc
stc
inc
cmpb
pop
or
iret
pushf
adc
sbb
insb
jp
mov
aas
shlb
lock
cmp
and
mov
nop
push
out
jge
pop
adcl
mov
inc
and
int3
outsb
mov
pop
shl
adc
xor
push
add
or
jmp
in
push
jmp
lods
movsb
cs
and
loop
and
pop
xorb
fsubs
mov
ret
cltd
and
test
cmp
sub
sahf
movsl
sbb
ds
jb
or
fsubr
popf
xchg
jp
insb
pusha
cltd
sbb
or
dec
xchg
cmp
lret
or
shl
dec
jg
jnp
pop
or
dec
scas
hlt
mov
fstpt
jecxz
mov
push
push
ljmp
sbbb
mov
test
xorl
or
scas
xchg
jae
icebp
das
xor
lret
add
pusha
repz
daa
mov
adc
mov
jge
cmp
lea
sub
jne
int3
and
inc
dec
mov
mov
mov
mov
dec
mov
repnz
mov
ficoml
cmp
call
ja
xchg
mov
pop
mov
or
aas
inc
lret
fwait
repz
pop
nop
imul
mov
adc
cli
sahf
into
pop
jae
mov
cmpl
xchg
fxch
fdivl
rol
cltd
rol
fbld
and
ss
mov
je
pop
push
daa
push
sub
push
mull
lods
lea
adc
pop
insb
ficoml
pusha
loop
scas
cmpsb
mov
test
inc
daa
std
xlat
cmp
fistpl
ret
push
pusha
pop
jecxz
inc
fnstenv
xchg
xchg
fimuls
jp
mov
jmp
data16
or
imul
inc
dec
addr16
xchg
fadd
in
lds
call
aam
sub
test
xor
nop
fidivs
xor
pop
jle
mov
cli
aad
lock
sub
fstps
orb
mov
ljmp
inc
lods
out
mov
or
movsb
push
jo
pop
mov
inc
inc
dec
and
clc
mov
outsb
xchg
scas
fdivp
clc
neg
xchg
sbb
mov
dec
lea
test
sub
mov
gs
testl
leave
in
mull
and
and
movsb
popf
and
adc
adcl
iret
jge
into
mov
cmpsb
sub
pop
shlb
inc
xchg
divb
inc
mov
scas
or
and
mov
rorb
in
rcrl
push
cld
push
pop
cmpsl
add
xchg
xchg
pusha
jb
shrb
scas
popa
push
dec
pop
xchg
jl
sbb
iret
in
popf
test
jmp
jnp
fsubrp
fldcw
dec
sahf
push
mov
pop
cmp
call
pushf
lret
push
test
add
push
fwait
xor
inc
fisttpll
and
jp
cmp
push
sub
loope
loopne
lea
jnp
dec
out
aaa
ljmp
test
in
cs
sahf
add
enter
cli
add
cmp
lret
xchg
sub
mov
stos
cmp
and
int3
add
push
fldpi
lahf
orb
scas
add
ss
imul
ret
pop
gs
fwait
lods
xchg
movsb
into
mov
pop
xor
jp
data16
fs
fwait
sub
imul
and
dec
lods
ja
out
or
cli
cmp
cmp
fbstp
mov
mov
lds
movsl
cmovno
cmp
fcoml
popa
xchg
pop
daa
and
fiadds
mov
pop
xcrypt-ofb
xor
scas
push
mov
adc
mov
mov
add
push
add
pusha
sub
arpl
xchg
fcmovnb
loop
push
mov
jl
mov
add
ja
xor
fistpll
cs
cmp
arpl
inc
adcl
arpl
xchg
mov
aas
mov
leave
stos
jg
pusha
cmp
lar
fiaddl
or
and
xchg
inc
dec
push
and
rorl
lock
sbb
xchg
cmp
or
or
aas
test
addr16
js
sbb
add
push
dec
and
fldt
repz
mov
stos
inc
jbe
test
mov
ret
nop
jns
fstl
xor
andb
ror
xor
testl
je
addr16
inc
hlt
hlt
push
sub
cwtl
jle
arpl
or
sub
pop
xchg
pop
xchg
push
lds
ds
xchg
and
cmp
int3
mov
xor
scas
inc
or
scas
mov
enter
xchg
cmp
into
push
outsb
mov
addb
cltd
enter
jecxz
push
sbb
fwait
test
inc
jmp
pop
int3
in
dec
stos
mov
inc
out
mov
pop
jg
sbb
ffreep
insb
mov
xor
mov
je
sbb
inc
xlat
ds
decl
dec
fidivl
lret
push
pop
mov
sti
and
cs
mov
rorl
sbb
cmpl
repnz
clc
lret
adc
sub
in
ficoms
ret
sub
jne
pop
mov
stos
enter
mov
scas
dec
lret
iret
stos
dec
jmp
cmpl
filds
shrb
pushf
test
fildll
in
das
cmp
aas
sbb
add
idivb
sub
xor
sar
stos
mov
fldt
scas
add
lds
jne
sub
inc
aas
mull
ret
roll
push
pushl
in
pop
aam
imul
js
jp
sbb
sub
xor
fld
or
xchg
cmp
jmp
and
mov
notb
jo
mov
mov
jg
mov
adc
pop
shr
mov
iret
jp
lret
mov
addr16
dec
adcb
out
jno
pop
adc
movsb
jp
pushf
push
and
outsb
push
leave
sqrtps
lret
out
mov
shrb
aaa
and
push
xor
call
mov
mov
cmc
gs
pop
loope
jno
adc
jecxz
lahf
dec
jbe
add
hlt
in
sbb
stos
mov
add
icebp
test
push
movsb
rcrb
adcl
jne
push
ss
xchg
mov
popa
xor
mov
imul
cmp
inc
scas
loope
loope
push
fistps
mov
outsl
mov
in
pop
dec
mov
popf
out
push
lock
push
sub
in
mov
push
xchg
jnp
repnz
into
sbb
adc
in
or
push
push
push
dec
gs
mov
iret
std
lret
xor
inc
dec
jnp
cmp
cmp
stos
cli
aam
bound
cmp
jne
std
movsl
cli
cmp
mov
fs
outsl
idiv
pop
mov
in
filds
push
fidivrs
arpl
mov
fdivs
loop
enter
cmc
ss
cwtl
add
xchg
les
fisubs
fs
stos
jb
adc
lahf
shrb
jg
push
pop
jl
push
cmp
lret
cmp
jg
pop
in
and
outsb
movsb
cmp
sti
xchg
clc
xchg
jmp
das
and
add
xchg
add
push
je
loopne
lret
inc
mov
xchg
sbb
int3
jb
inc
das
jb
test
push
sub
fsubl
dec
mov
mov
mov
mov
imul
cmp
fs
push
push
xchg
dec
jo
sbb
sbb
jnp
out
fs
cmp
mov
pop
pop
decl
pop
lds
cs
jnp
lcall
jae
jle
lea
lods
fstp
sbb
pop
mov
arpl
cli
ja
cmc
push
sub
enter
imul
pusha
pop
mov
orb
cltd
and
test
pop
out
lea
jge
repz
repnz
scas
sbb
mov
cli
cli
xchg
push
js
cltd
cmp
jns
fcomi
add
pop
adc
sbb
inc
scas
mov
pop
pop
sbb
xchg
mov
or
rep
js
and
mov
xor
cmpsl
pop
fbstp
pop
icebp
adc
fisubrl
stos
sahf
fwait
sub
mov
daa
enter
push
loope
rcrb
or
sbb
xor
inc
add
cmc
jg
daa
lret
push
rclb
adc
enter
adc
ljmp
pop
add
mov
ret
adc
mov
dec
push
jno
addr16
ret
xchg
xchg
loop
addr16
stos
add
outsb
aaa
movsb
ss
scas
int
mov
fidivl
push
and
inc
and
sti
add
cld
pop
lahf
dec
and
adc
adc
mov
cmc
adc
pop
push
subb
test
daa
arpl
rcl
push
dec
dec
lret
xchg
inc
add
lods
push
nop
out
fdivrs
sahf
xor
pop
call
rolb
mov
add
xchg
ret
scas
cs
fisttps
mov
or
cli
jb
add
cmpsb
xchg
xchg
lcall
stos
imul
adc
cmp
sti
flds
jp
rcll
cmp
aas
adc
outsl
push
mulb
xchg
stos
inc
xlat
mov
bound
int3
adc
fistpll
mov
imul
into
aad
rcl
sbb
call
inc
xor
in
dec
je
xchg
ja
pop
mov
bound
xor
scas
bound
insb
dec
mov
mov
adc
lds
jo
mov
fwait
sbb
adc
int3
inc
shll
mov
add
xor
pop
pop
sub
dec
mov
mov
jns
lock
fsubl
or
stc
hlt
scas
icebp
mov
jns
inc
xchg
sbb
pop
fcmovnb
xchg
rcr
fisttps
dec
std
mov
sahf
into
pop
lahf
inc
pushl
insb
inc
or
xchg
cmp
jb
xchg
xlat
call
bound
mov
dec
inc
cltd
mov
sub
cmc
sub
in
xchg
in
rclb
adc
adc
aaa
push
jae
add
add
pop
popf
xchg
adc
inc
dec
pop
iret
push
das
jno
xor
xchg
pop
call
sub
popa
and
mov
cmp
adcb
aam
out
fcompl
imul
dec
scas
xchg
and
sub
push
xchg
int3
xchg
push
mov
mov
lods
sub
xchg
mov
mov
cmp
xchg
repnz
jmp
int3
mov
or
and
or
int
inc
cmp
fisttps
fisubl
cmp
je
fdivl
mov
mov
in
mov
lcall
xor
nop
cmpsb
sbb
pop
in
add
enter
insb
mov
les
lock
cmp
cs
pop
in
and
ja
mov
cmp
out
hlt
and
adcb
jb
cwtl
fucomp
adc
or
xor
mov
int
test
sub
ds
sahf
cltd
out
in
mov
mov
add
sahf
outsl
out
out
cmp
pop
xchg
push
adc
ja
sahf
enter
mov
inc
xchg
xchg
push
cmp
mov
repz
subl
cmp
jo
int3
das
and
fwait
mov
popf
cld
repnz
dec
repz
cld
and
insb
pusha
stos
aad
sub
test
push
std
dec
jmp
in
lods
insl
ljmp
push
add
mov
xorb
nop
push
xchg
addr16
pop
cmp
sbb
inc
mov
sti
cmp
sbb
mov
ss
jl
movsb
or
add
cmp
mov
sbb
push
enter
and
inc
stos
in
or
sub
and
fists
sub
pushf
cwtl
aaa
mov
or
ret
add
enter
dec
push
rorl
dec
cld
mov
addb
lcall
mov
mov
mov
lods
daa
xchg
push
jo
add
lods
insl
gs
sbb
push
cmp
mov
xor
popa
sub
adc
xchg
jb
dec
xor
push
mov
test
mov
xor
fwait
dec
shrl
scas
movsb
in
adc
fwait
vhaddps
mov
and
in
in
push
sbb
iret
add
inc
mov
dec
inc
adc
out
into
jl
mov
push
jne
pop
pop
ror
hlt
sti
mov
add
add
and
or
xor
std
xor
aad
jne
mov
xlat
jp
out
ljmp
pop
lods
add
push
daa
add
pop
out
push
xchg
or
sub
inc
test
jno
jecxz
xchg
pop
sbb
fwait
add
jnp
add
sub
mov
fldl
adc
xchg
inc
sahf
jae
mov
movsb
lcall
mov
ljmp
inc
xchg
mov
add
ljmp
push
push
push
or
ss
fs
jo
arpl
pop
loopne
out
mov
test
inc
mov
push
icebp
cmp
insl
jp
sahf
cld
fs
int3
xchg
mov
sbb
inc
stos
add
xor
stos
lret
inc
mov
and
shrl
cmpsb
inc
aaa
cwtl
xchg
aam
mov
inc
aad
jmp
jbe
add
adc
insb
arpl
movsb
leave
lret
int3
cld
push
cmpsl
sbb
and
popf
cld
mov
jle
mov
mov
lea
rolb
ljmp
in
lahf
sbb
sub
aam
test
pushf
xchg
push
pushf
mov
mov
inc
sub
pop
and
stos
mov
inc
mov
mov
stos
cmp
add
fstpt
sahf
dec
mov
jge
vmulsd
je
pop
dec
scas
add
xor
jle
jb
xorb
sbb
mov
mov
or
inc
fdivrs
cmp
sub
add
jno
daa
lcall
add
jp
jmp
fsubl
loope
icebp
cmp
sbb
push
inc
push
push
outsl
xchg
or
fimuls
cmpsl
cmpsb
xor
pop
or
jp
push
imul
push
hlt
pop
cmp
push
mov
cmpsl
mov
into
xor
jbe
xor
xchg
in
hlt
daa
std
lea
mov
adc
enter
movsb
loop
cmpsb
jns
inc
test
stc
clc
add
ret
jno
pop
inc
xchg
sbb
pop
insb
or
lahf
ret
setnp
sub
inc
pop
jns
push
push
xor
xor
xor
or
popa
orl
and
mov
cmp
stc
mov
xchg
sbb
mov
mov
sub
ss
mov
mov
cmp
test
pop
mov
lods
dec
mov
repnz
and
sahf
icebp
cmp
lock
add
xor
sbb
xor
cmpsl
mov
sub
stos
mov
mov
rcll
sti
gs
pop
cwtl
pop
lahf
push
clc
adc
sbb
jge
mov
lcall
fs
cld
popf
inc
cld
push
fisttpl
lahf
or
insl
insl
fcompl
sarl
enter
push
fcmovnb
sbb
sub
jb
cli
add
movsb
ja
ss
jns
xchg
popf
int3
cmpsl
pop
jnp
movsl
xchg
adc
xchg
adc
inc
loop
cs
fxch
test
scas
sbb
repnz
dec
mov
xor
insl
lea
xchg
int
xor
add
shlb
xchg
dec
iret
adc
cmc
idiv
orl
or
push
mov
call
mov
jno
xor
lret
loopne
xchg
mov
cmp
mov
sti
fnstenv
add
out
adc
into
lcall
add
jb
xor
fidivl
sarb
arpl
iret
negl
or
add
mov
ljmp
out
push
out
int
mov
insl
arpl
push
mov
xchg
xchg
push
enter
pop
sbb
push
or
cmp
pop
inc
jo
pop
mov
inc
push
jge
and
js
xchg
jns
mov
sub
rolb
aad
add
das
jns,pn
lods
pop
lcall
jmp
clc
out
adc
mov
addr16
adc
ljmp
into
mov
test
sub
lds
ret
push
push
xor
xchg
pop
push
ss
add
out
mov
mov
filds
sbb
movsl
cmp
add
stc
mov
lods
iret
out
lahf
and
ljmp
jl
jno
fbld
jge
add
cmpb
inc
adc
fists
lcall
out
push
jge
inc
gs
test
mov
xchg
mov
and
jle
add
fldl
cmpsb
pop
rolb
outsl
dec
lcall
mov
mov
shr
mov
loopne
sahf
nop
inc
mov
fbld
mov
mov
ret
ja
fs
bound
lock
lea
and
jge
or
into
push
cmp
scas
js
jno
stos
push
pop
pop
ret
sub
es
sarl
add
mov
cmpsb
clc
xchg
jo
inc
stos
cmp
mov
bound
out
dec
cld
movb
loop
push
mov
cmp
xchg
iret
cmp
pop
xchg
push
popa
sbb
jle
jnp
push
daa
fstpt
sub
fidivrl
jg
adc
scas
sub
outsl
xor
andl
or
mov
lods
test
pop
or
scas
adc
add
xor
adc
cmpsb
adc
jp
jae
jns
sbb
out
out
outsb
jg
ss
jbe
mov
adcl
sti
fadds
popf
push
ss
mov
lds
fidivs
mov
in
cmpsb
shrb
popa
sbb
out
xchg
jbe
jbe
jge
stc
dec
jno
ds
into
aaa
adcl
in
and
cmpsb
out
inc
jp
popf
ja
and
push
loop
dec
add
add
iret
fcmovu
call
jne
into
inc
jle
push
aas
js
call
cmp
inc
sbb
add
jg
incb
xchg
or
mov
hlt
pop
dec
or
adc
mov
movsb
xor
xchg
sti
out
cwtl
int
fs
outsb
fsubrl
xor
inc
lock
out
and
sbb
pop
movb
inc
icebp
insl
stc
out
scas
fs
jo
sub
push
jge
ret
addb
sahf
lea
mov
sbb
inc
mov
fmuls
xchg
jnp
flds
int3
xchg
fstp
and
repz
gs
cs
mov
pop
addr16
fst
and
xchg
jge
pop
xor
adc
int3
mov
ljmp
sahf
cltd
inc
sub
int3
popf
mov
xor
fbstp
and
cwtl
ljmp
and
ret
push
jne
lret
repz
int3
mov
shrb
jle
movsb
jg
sub
pop
push
fstpl
fisubs
enter
adc
jb
sti
sahf
loopne
or
jl
mov
jmp
jno
out
cwtl
lods
pop
ljmp
cmp
lock
js
out
xlat
es
outsb
push
scas
int3
jbe
inc
jmp
std
jle
jge
std
lds
mov
mov
fs
push
inc
insb
xor
cmp
or
and
push
mov
sarb
mov
dec
xor
ja
or
or
es
adc
mov
mov
cltd
cmp
lock
cmp
test
mov
push
push
aam
xchg
mov
aad
cmp
and
dec
ss
add
mov
lret
mov
or
mov
into
add
cs
sti
je
ss
mov
divb
in
aas
lods
xor
iret
call
add
adc
sti
mov
or
sti
repz
push
bound
xor
test
adc
pop
mov
rol
push
push
lret
lahf
call
ds
rcl
bound
cmp
inc
mull
ret
inc
mov
pop
addr16
sbb
push
hlt
sub
outsl
push
cs
pushf
mov
out
mov
movsb
js
pop
sub
nop
outsl
std
ja
mov
sbb
test
cmpsb
repnz
mov
mov
cmpsl
in
repz
mov
dec
mov
add
aam
nop
add
in
push
mov
mov
dec
pop
mov
xchg
ret
mov
push
in
xchg
lea
call
mov
jp
fs
incl
inc
or
xor
mov
push
mov
mov
jle
mov
xor
pop
push
rorb
push
jne
xchg
std
xor
xchg
mov
gs
es
in
dec
push
and
cmp
popa
jmp
push
xchg
fisttpll
sub
adc
xchg
lret
inc
sub
fildll
out
pusha
pop
mov
pop
dec
sahf
xor
jge
add
xor
jnp
xor
mov
imul
popa
mov
xchg
sub
in
fidivs
xor
inc
lret
fidivrs
arpl
leave
push
mull
sub
xchg
sbb
bound
xor
fcoms
or
cwtl
adc
pop
mov
subl
arpl
pop
iret
mov
subl
in
sub
std
stos
pushf
mov
data16
mov
jae
pop
insb
std
out
scas
cli
aaa
add
or
je
test
cmp
jge
mov
test
lods
dec
adcb
ss
push
dec
sbb
adc
dec
mov
shl
dec
push
xor
leave
dec
mov
fimull
push
stos
or
fsubrl
mov
inc
jns
cmp
push
imulb
out
lret
sub
mov
lahf
sub
cmp
jecxz
pop
xorl
enter
pop
lahf
data16
and
add
jo
imul
mov
shrb
ljmp
dec
shrl
cmp
or
shlb
lret
faddl
in
pop
stos
mov
cmp
push
jmp
call
dec
sub
pop
dec
cld
rol
mov
js
ret
inc
xchg
enter
popa
jg
stos
add
jbe
jle
ljmp
xchg
xchg
adc
sub
je
js
jb
out
hlt
push
jb
movb
sub
cmpsl
jbe
push
stos
sarl
cmp
push
push
flds
mov
pop
arpl
xchg
xor
addr16
loop
xchg
das
loope
call
fsubrl
adcb
insl
cmp
sub
ljmp
jmp
inc
xchg
scas
cmp
btsl
test
repnz
mov
pop
movsb
cmp
push
les
shll
jbe
inc
pop
push
cmpb
leave
or
mov
xor
xchg
mul
push
mov
dec
inc
and
sti
mov
fidivrs
jbe
and
data16
in
movb
stc
data16
mov
add
test
mov
push
adc
mov
add
loopne
aas
cmpsl
dec
cmp
push
repz
add
dec
pop
pusha
repz
mov
imul
das
push
aas
sub
pop
repnz
out
into
cmc
hlt
push
jns
cmpsl
sarb
in
jae
int
out
xor
lods
mov
mov
or
xchg
add
leave
mov
push
cmp
xchg
add
ret
push
mov
mov
add
xchg
lret
pop
subl
jmp
arpl
insl
in
cltd
mov
popa
lret
push
xchg
lret
adc
into
xor
inc
dec
cmp
or
and
scas
movsl
nop
in
xchg
in
dec
stos
aad
sar
push
dec
xor
mull
dec
fbld
sbb
cld
xor
fidivrs
lds
hlt
aam
sbb
ret
mov
sbb
ds
into
inc
scas
lods
sbb
pop
movsb
or
stos
xchg
inc
lahf
sub
cmpb
mov
pop
rorb
imul
js
das
xor
mov
xor
inc
cli
pop
xor
push
pop
mov
sahf
dec
inc
mov
or
xor
mov
sbb
hlt
dec
repnz
sub
and
into
dec
mov
inc
inc
and
push
mov
gs
in
dec
push
test
pop
cltd
sbb
daa
mov
cmc
add
dec
push
sbb
ret
jle
in
popa
fwait
add
adc
xor
mov
push
add
loope
cmpsb
bound
pop
inc
xor
loope
sarl
inc
loope
mov
cmpps
xchg
xor
pop
add
popf
ja
mov
sbb
pop
orl
sbb
sub
inc
loopne
lock
push
xchg
cs
mov
pop
cmpb
enter
fdivrl
xchg
aaa
mov
jecxz
fs
add
pop
ss
cmp
lds
jmp
mov
pop
push
jnp
ja
xchg
mov
push
es
cmp
xchg
dec
cmp
sub
mov
and
mov
sbb
imul
loop
mov
les
fwait
lret
call
shl
pop
mov
out
outsb
in
push
sub
ret
hlt
into
inc
mov
mov
nop
mov
push
jp
fwait
cmp
jae
scas
fstpl
add
pusha
popf
into
adc
outsb
arpl
ret
sbb
sbb
add
fstps
sahf
roll
mov
aam
std
xchg
stc
inc
lock
xchg
dec
cmp
es
jecxz
xchg
ljmp
pop
push
xor
cwtl
rcll
test
pop
pop
sub
xchg
inc
dec
mov
cmpl
lods
xchg
sbb
testb
xchg
cli
cmpsb
ja
pop
call
hlt
inc
or
mov
cld
inc
gs
lods
inc
xchg
mov
notb
jl
ret
insl
lcall
adc
jne
fidivrl
loop
cmp
loopne
lds
or
jo
push
push
cmc
adc
sbb
data16
inc
sbb
or
test
mov
xor
test
mov
fldl
cmpsb
and
or
cld
push
cmpb
xlat
mov
out
jmp
dec
cmp
ljmp
push
shrb
sbb
mov
rclb
test
stos
outsl
mov
xchg
cli
jns
xchg
pop
cmp
mov
adc
test
xchg
sbb
jp
addb
push
mov
cmpsb
sub
add
pop
xor
pop
push
add
sub
inc
jb
scas
jae
xchg
or
mov
jg
pop
inc
andl
loopne
sbb
push
andl
loope
mov
dec
je
fbld
into
stc
loopne
scas
out
pop
adc
jnp
sub
das
jb
or
cmpsb
xchg
or
xor
dec
scas
lock
mov
xchg
dec
jno
fadds
xor
jg
mov
addr16
pop
dec
and
push
imul
xchg
mov
or
dec
movsl
rcll
outsl
inc
int3
dec
ja
insb
bound
cmp
shl
jnp
and
lock
push
sbb
pop
ret
std
rorb
shl
sub
call
push
pop
jmp
aas
mov
inc
jb
xor
jbe
sub
or
stos
inc
cld
aas
mov
adc
dec
sub
imul
cs
int
mov
mov
xchg
push
fists
push
into
stos
jl
test
jno
arpl
mov
fs
vmwrite
shrl
sbb
jno
in
dec
mov
adc
or
mov
sub
sub
out
adc
addr16
aaa
mov
stos
and
rcrl
mov
xor
sbb
ffree
lea
sbb
stc
adc
mov
cmc
add
stos
mov
rcrb
sbb
test
sahf
repz
lds
gs
pop
cs
xchg
push
stos
adc
and
mov
in
add
cmp
sarb
cld
pop
out
fwait
mov
lea
dec
cmp
mov
inc
jne
inc
repz
mov
and
cmp
call
pushl
insb
push
xor
mov
mov
call
jmp
std
dec
icebp
mov
lods
fs
cltd
lcall
pop
repz
push
loope
add
aam
sub
sub
int3
xchg
cld
clc
jp
push
sti
push
lcall
sti
push
sub
inc
lret
mov
rorl
js
sub
pop
ret
add
scas
push
mov
inc
adc
out
mov
jno
jmp
jg
fbld
and
es
jns
fdivr
jbe
push
fstps
cmc
mov
mov
or
mov
inc
scas
sbb
popf
and
repnz
inc
cmp
stc
shlb
popa
leave
shl
mov
test
rcll
test
xchg
inc
leave
push
mov
jne
cmpb
ja
gs
xchg
les
outsb
pop
push
dec
rorb
repnz
cmp
insb
adc
stos
xchg
lret
or
jecxz
mov
and
push
mov
or
xchg
dec
lcall
or
mov
xor
mov
rcl
xor
pop
lahf
mov
sbb
dec
inc
sbb
popf
jmp
push
clc
shll
cmpsl
outsl
clc
dec
stc
into
loop
inc
cmp
loopne
pop
pop
in
lods
sbb
lahf
aad
mov
in
add
shl
fisttpl
test
lret
lcall
xchg
push
lods
fldln2
jl
jp
loop
mov
imul
lret
cmp
enter
stos
and
imul
dec
out
and
sbbl
leave
push
in
pushf
dec
repnz
push
cld
int
adc
push
test
mov
jmp
stc
ret
mov
and
imul
cmp
popa
and
push
fimuls
dec
add
in
mov
ja
enter
int
or
mov
loope
pop
andl
adc
add
cld
pop
aam
and
inc
push
jl
mov
add
pop
stos
pop
adc
aad
int
int
outsl
in
je
ret
nop
mov
cli
cmp
cmp
sahf
out
lcall
add
lds
xlat
inc
loop
loop
mov
mov
and
pop
je
aaa
xor
adc
and
mov
popf
scas
nop
fwait
xor
jle
dec
sbb
push
mov
lods
std
ret
push
std
inc
jl
push
and
das
cs
cmp
pop
andl
cmpsl
sub
mov
cli
ficoms
jne
push
loop
mov
mov
pusha
sahf
lods
cwtl
mov
ss
xchg
rol
add
and
lods
xchg
scas
cmp
fmull
inc
ret
mov
imul
lods
add
or
std
inc
xchg
jne
push
lcall
stos
mov
adc
lock
aad
subb
add
mov
adc
int
sbb
scas
enter
ja
mov
mov
adc
mov
adc
pop
clc
aam
pop
add
out
pop
dec
jl
in
popf
sub
stos
test
sbb
in
andl
movsl
inc
test
movsb
or
test
mov
inc
inc
add
aas
add
nop
das
push
jl
dec
loopne
out
out
outsl
dec
lret
out
mov
pusha
xchg
in
jp
dec
mov
pop
mov
jbe
stos
xchg
lock
jbe
cmp
inc
pop
std
jbe
outsb
xor
dec
inc
mov
sbb
adc
cmp
sub
dec
nop
sahf
lea
out
jmp
nop
sahf
push
xchg
fwait
mov
iret
lret
lret
mov
adc
sbb
pop
inc
xchg
push
addr16
lods
or
inc
jae
cmp
cmc
fidivl
lret
ret
scas
fmull
out
loop
pop
sbb
scas
fnstsw
cmp
dec
add
outsl
sahf
scas
nop
out
lret
rcr
pop
push
inc
inc
push
xor
imul
mov
adc
push
stos
iret
push
es
pop
and
shrb
lahf
fdivrl
mov
sub
loope
lods
or
jmp
sbb
xor
ds
jbe
mov
xlat
das
mov
inc
mov
testb
imul
push
scas
mov
adc
stos
aam
mov
movsb
mov
mov
xor
out
xor
jo
out
jae
sahf
dec
rorl
out
mov
mov
mov
sub
hlt
sahf
dec
sub
mov
sub
lcall
inc
inc
insb
push
cli
push
fisttpll
push
fdivr
sbb
push
pushf
xor
cmpsb
adc
sarb
add
inc
cmc
jl
pop
pop
push
adc
lods
pop
xor
dec
push
out
jl
mov
fs
in
stos
jge
ljmp
inc
mov
imul
int
adc
shll
add
lock
inc
jo
test
out
lock
jp
xchg
shlb
pop
pop
inc
xor
out
mov
lcall
lcall
sub
sar
mov
adc
loopne
nop
xchg
scas
scas
dec
out
fwait
dec
rclb
cmp
pushf
mov
and
cmp
imul
rcll
dec
testl
add
in
jmp
dec
or
xor
sahf
addl
inc
out
ret
subl
insb
fs
pop
cmc
ret
adc
jns
aad
adc
into
pop
cmpsl
cmp
mov
filds
roll
push
inc
xchg
dec
push
jp
dec
test
mov
aad
ss
mov
jp
jae
jmp
aaa
add
jns
inc
xor
mov
loopne
inc
mov
lods
ljmp
or
addr16
jmp
fwait
aaa
fmuls
add
adc
test
frstor
mov
xor
sahf
pop
cmp
dec
out
cmpsl
ret
sbb
adc
je
jne
pop
int
or
jbe
insl
cmc
data16
dec
fnstenv
push
subb
aam
ficoms
into
aaa
add
cmpsl
jnp
lahf
daa
mov
xorb
push
test
add
xor
ds
enter
test
jnp
addr16
pop
fadd
sub
inc
sbb
pop
mov
in
jo
jns
or
in
test
cmpsl
dec
sbb
enter
mov
xor
cmp
pop
es
sub
fdivr
cli
mov
mov
rol
aam
repnz
aas
cwtl
aam
mov
pop
scas
clc
push
push
in
loope
jo
push
add
lods
sbb
jae
pushf
push
ds
xchg
idivl
addr16
push
cmp
cmp
jo
jmp
push
stos
aam
mov
xchg
add
inc
pop
arpl
xchg
xchg
inc
nop
shrb
push
push
addr16
ljmp
cs
les
sub
mov
das
cmpsb
pop
into
out
dec
mov
xchg
sbbb
or
xor
aad
stc
ds
scas
lret
jb
in
std
stc
xchg
cmpsl
fstl
std
leave
push
pop
add
mov
add
aas
and
mov
adc
outsb
sub
test
mov
xchg
mov
cmp
mov
imul
inc
arpl
fwait
lret
xchg
mov
cmc
gs
mov
dec
cmp
mov
mov
jne
jmp
add
aam
and
and
lahf
dec
jge
gs
cmp
fists
rolb
dec
repnz
xor
pop
dec
and
repz
push
sbb
inc
xor
push
aam
mov
cld
push
movsl
push
pusha
es
rclb
lcall
sub
stos
mov
sbb
jmp
push
pop
inc
inc
xchg
push
push
xor
or
inc
xor
xchg
or
xor
test
pop
leave
sub
pop
fiadds
mov
inc
xor
pop
cmpb
mov
add
adc
push
lgdtl
mov
pop
mov
push
push
sbb
or
int
movsb
xchg
cld
xor
fucomp
mov
jns
fcom
add
xor
shll
xchg
mov
insb
int
push
inc
cmp
mov
mov
pop
dec
push
sub
sub
jle
test
xor
ret
cmp
in
mov
sbb
cmp
mov
mov
jne
in
xor
je
mov
jbe
stos
jmp
adc
inc
stc
cmp
shll
pop
xor
rcrl
cwtl
add
xchg
mov
les
test
xchg
mov
adc
enter
add
mov
stc
mov
pusha
inc
dec
popa
xor
out
cmc
pop
es
idiv
mov
fildl
mull
and
je
or
in
mov
loope
lea
fsub
icebp
aad
mov
aad
data16
jnp
jecxz
inc
sti
in
dec
push
out
pop
call
inc
push
or
cmp
std
or
jae
adc
sti
fdivrl
pusha
inc
js
push
ds
les
xorb
outsb
jbe
mov
inc
les
data16
cmpsb
cld
mov
mov
mov
enter
jnp
fcmovnbe
in
test
jb
fdivs
jp
orb
lea
pop
into
cmp
ljmp
cmp
sbb
lods
jne
aad
jnp
pushf
inc
repz
mov
mov
int
inc
cmpsb
loopne
mov
mov
mov
xor
inc
imul
jmp
seto
dec
aad
jnp
dec
adc
xor
and
push
cmp
cltd
pusha
mov
cmp
pop
cld
mov
sti
push
shrb
jnp
dec
inc
xchg
loopne
les
jbe
sub
arpl
inc
pop
mov
jnp
dec
imul
mov
push
test
mov
into
inc
lret
roll
nop
xchg
dec
jg
add
mov
push
nop
adc
inc
push
mov
jns
rorl
ljmp
sbb
xchg
mov
push
sub
cmp
int3
movsl
and
ret
shr
adc
jg
mov
inc
inc
jne
jp
in
adc
outsl
and
pop
mov
repz
add
pushf
jecxz
or
lea
dec
adc
movsl
dec
pop
pop
xlat
mov
sbb
lret
mov
in
mov
cmpb
stc
jge
pop
xor
insb
xchg
leave
fs
inc
insl
ficomps
testl
fwait
movlps
push
lock
int3
lahf
or
and
sbb
fisttps
xor
mov
scas
mov
inc
test
dec
xlat
push
fiaddl
ret
jmp
out
fildll
xor
fs
pop
mov
push
push
mov
inc
jb
testl
xchg
stos
shl
daa
mov
ljmp
jmp
adc
push
sti
insl
dec
or
cmp
das
inc
out
cmp
mov
pop
js
sbb
or
in
xor
filds
dec
push
lds
stos
xor
icebp
mov
inc
arpl
push
jle
aas
jl
dec
or
rol
in
nop
cmp
ds
pop
sbb
adc
mov
push
mov
add
fdivr
std
out
insb
sarl
notl
shlb
iret
mov
and
and
leave
int
pop
adc
shlb
sbb
and
pop
xor
imul
ds
pop
hlt
mov
repz
out
add
pop
mov
subl
out
mov
push
inc
orb
mov
stos
call
scas
subb
shlb
pop
mov
lods
mov
pop
gs
mov
rol
mov
pop
sub
xchg
mov
mov
jg
add
cli
xor
stc
jmp
xchg
cmp
xor
ds
dec
xchg
int3
scas
repz
dec
lret
or
xchg
clc
inc
cld
add
or
roll
outsl
sub
dec
push
xchg
or
xchg
scas
push
aaa
sahf
test
xchg
jb
jp
insb
int3
inc
cltd
mov
iret
fwait
pop
or
pop
dec
push
mov
aad
mov
stos
scas
mov
data16
adc
xor
adc
enter
aam
inc
push
and
cmpl
xor
lcall
scas
or
bound
inc
icebp
mov
dec
scas
testb
loope
mov
sti
shll
or
jo
in
xchg
mov
mov
and
inc
test
mov
negl
loopne
mov
mov
js
add
pop
repz
fcompl
inc
cmc
xchg
shll
cmp
mov
les
int
dec
xor
adc
jne
cltd
adc
lock
xor
das
dec
push
ja
push
sbb
imul
sbb
sbb
xchg
sahf
das
adc
sbb
adc
fsubl
mov
or
mov
push
in
lahf
shlb
popf
sub
cmp
inc
push
pusha
push
adc
lret
or
mov
lock
cmp
in
jmp
rol
push
loop
notb
xchg
loop
add
cmp
push
jg
xchg
xorl
or
xor
pop
ud1
mov
sbb
fiaddl
cmp
std
sub
sub
jle
inc
xor
int3
jge
dec
push
test
push
cli
add
icebp
jae
cmc
loope
scas
mov
shrb
jp
xchg
outsl
xor
mov
mov
mov
adc
in
xor
movsl
repz
imul
ja
into
xchg
and
in
stos
xchg
std
je
inc
xchg
cmp
dec
mov
sbb
pop
pop
mov
cmp
scas
popf
pop
xor
cltd
lock
je
inc
mov
mov
cli
lcall
clc
xchg
outsb
shrl
stos
dec
dec
and
jnp
pop
imul
es
pop
fbstp
jg
add
lock
add
push
xlat
fcmovne
insl
and
or
xchg
roll
jae
aad
fstps
xor
and
lea
cmc
push
popa
cmp
out
sub
fisubrs
mov
in
xor
sub
fs
jg
or
xor
push
mov
es
jmp
sbb
mov
jecxz
out
ret
push
pop
push
into
div
iret
lods
pop
jmp
in
stc
xchg
es
in
addb
shlb
call
xor
adc
mov
rcll
or
fsubp
pusha
or
dec
inc
aaa
loop
push
push
arpl
das
mov
lods
jno
sub
lods
xor
or
push
pop
lahf
jp
pusha
mov
mov
jp
and
loopne
cltd
rorl
pop
fs
cmc
mov
mov
in
insl
xchg
mov
pushf
mov
incl
popa
lods
push
inc
xchg
hlt
jl
push
cmpsl
in
lahf
and
mov
outsl
pushf
fadd
or
cmpb
sub
out
je
ljmp
push
mov
ret
pop
lods
ds
cmc
jne
sub
cmp
pop
inc
mov
cmp
mov
popf
xchg
out
xchg
inc
push
jecxz
dec
test
cmp
lock
mov
add
xchg
or
and
cwtl
shlb
fs
mov
mov
adc
cwtl
in
cmpsl
mov
dec
sbb
or
ficoms
cs
mov
adc
jno
push
loope
cmp
mov
mov
mov
mov
push
push
push
push
stos
xchg
push
xchg
scas
mov
pop
sub
dec
pop
xchg
xchg
mov
xchg
mov
sub
jecxz
test
insl
mov
add
ret
data16
ss
scas
push
mov
or
or
bound
call
lret
fildll
nop
rcrb
mov
inc
adc
imul
pop
mov
mov
and
lock
xchg
in
es
sbb
push
mov
push
cli
push
lods
push
cmp
adc
push
xor
fwait
testb
lret
mov
test
cmp
dec
dec
inc
mov
push
popf
pop
fadd
mov
mov
daa
or
cmp
lods
mov
pushf
or
add
sub
or
xlat
mov
pop
and
clc
mov
sbb
xchg
push
jae
mov
add
pop
push
mov
loope
jle
jg
loop
ss
mov
test
fs
jmp
fcoml
mov
out
inc
test
lea
dec
xor
cmp
cmp
sub
clc
les
xor
mov
inc
inc
fsubr
or
push
leave
jecxz
in
fdivrp
fdivrl
or
test
push
pop
sti
out
xor
pop
jg
and
fisubs
icebp
pop
sti
mov
aam
sbb
imul
out
shlb
cmc
popa
dec
sar
lret
pop
mov
dec
repz
pop
data16
subb
cmp
pop
bound
ja
add
cmc
pop
xor
fisttpl
mov
pop
loopne
pop
and
sub
mov
mov
lds
mov
lea
jns
sbb
mov
xor
add
nop
jl
loop
mov
add
cmp
sti
jecxz
movsb
push
and
lock
test
push
sbb
xchg
jo
xchg
mov
inc
jp
inc
jnp
int
ret
lods
std
mov
out
jb
add
pop
pusha
stc
cs
repz
stc
mov
fisubs
pop
sbb
adc
clc
push
or
inc
cmpl
aam
pop
scas
mov
pop
rolb
or
sar
test
xor
out
push
push
mov
std
pushf
cmpsl
push
lock
xchg
and
test
and
push
ja
cwtl
jp
imul
rolb
lahf
push
adc
inc
clc
inc
xchg
jnp
in
enter
jmp
cmp
dec
sub
shlb
inc
lcall
inc
or
inc
mov
adc
lcall
dec
imul
lea
pop
cmp
enter
fidivrl
add
aam
mov
xchg
and
inc
popa
les
inc
xchg
xchg
adc
sbb
add
fwait
lcall
push
lods
mov
xchg
and
addl
sbb
loope
fs
pop
lcall
push
leave
sub
stos
in
stc
ror
mov
int3
dec
pop
mov
jne
enter
test
jp
cld
cmpsl
out
pop
mov
add
rolb
shl
popl
fsubs
cltd
push
inc
push
adc
lret
xor
cld
fisttpll
loope
stos
stos
fadds
push
jne
push
mov
mov
ljmp
inc
movsb
or
xchg
xor
iret
xchg
xchg
outsb
mov
adc
out
cld
mov
xlat
imul
f2xm1
push
fsts
mov
add
lods
xchg
mov
dec
ret
dec
inc
or
or
mov
push
push
push
xlat
push
mov
xchg
in
or
pop
adc
mov
push
pop
out
and
pop
mov
out
mov
mov
cmp
jmp
and
aad
add
push
icebp
out
test
push
test
aaa
fsubr
xor
bound
cmp
shl
movsl
mov
mov
xchg
mov
or
lea
mov
sub
call
push
ret
push
test
cmpsb
arpl
dec
roll
push
movzbl
sub
arpl
cwtl
pop
adc
push
ljmp
aad
adc
inc
test
cmp
fs
std
pop
adcl
pop
push
push
xchg
and
add
jae
jae
pusha
dec
jno
ss
pop
ja
sbb
jb
sahf
push
mov
mov
test
stos
ficompl
pop
out
fists
pop
fisubrs
cmc
add
push
mov
enter
icebp
pop
addr16
pop
pop
cs
jmp
pusha
hlt
test
fcoml
in
icebp
or
add
cltd
insb
jmp
adc
sbb
iret
push
insb
iret
mov
xchg
or
mov
jg
and
xlat
xchg
dec
aad
popf
iret
jb
mov
or
jno
pusha
pop
nop
sti
jecxz
cli
xchg
mov
dec
mov
shrl
imul
pop
and
pop
inc
cmp
and
add
jns
or
imul
shlb
jnp
shrl
mov
fistpl
insb
mov
xor
dec
adc
sahf
jg
pop
adc
in
sub
cmp
xchg
jns
pop
cmp
push
lea
shll
stos
sub
jnp
lret
push
faddl
hlt
lds
jne
inc
lcall
ffree
je
push
mov
mov
lret
jp
pop
scas
shrb
adc
sahf
aad
xor
inc
mov
cmc
push
xchg
hlt
dec
test
sbb
push
addb
push
pop
sub
pop
movsl
jbe
dec
out
mov
aas
scas
into
sub
adc
mov
pop
push
out
sbb
cld
dec
into
cmp
add
loopne
adc
mov
notl
in
outsb
xor
loop
pop
jns
jp
pop
push
mov
and
lea
cmp
jl
ljmp
mov
lret
jno
dec
inc
pusha
pop
jp
mov
popa
clc
mov
jbe
data16
or
pop
mov
pusha
push
mov
daa
pop
gs
fcmovne
jecxz
inc
mov
aas
jae
pop
cltd
xor
lods
pop
or
add
push
pushf
aam
stos
arpl
jg
faddl
imul
mov
cmp
int3
fidivrl
adc
insb
mov
xlat
int
icebp
push
push
and
add
outsl
ds
nop
adc
test
lods
movsl
xchg
in
adc
mov
std
pusha
out
jg
adc
lcall
jns
addb
mov
push
dec
sub
mov
popf
lcall
loope
shlb
int
enter
jb
cmp
sub
cmp
mov
fnstenv
sbb
lods
sahf
mov
jno
mov
aas
jg
and
push
jbe
cmp
sub
pushf
clc
pusha
es
icebp
inc
outsl
cmp
dec
ss
arpl
ret
adc
inc
jmp
jae
push
jnp
push
rcll
xchg
stos
icebp
dec
add
xchg
mov
test
fwait
cmp
fnsetpm(287
repz
jnp
cmp
mov
in
hlt
xor
pop
outsb
out
pushf
test
test
and
gs
into
pop
mov
sub
xor
push
inc
rcrl
aas
ljmp
sbb
mov
jl
xor
fwait
add
dec
call
fildl
jmp
inc
in
push
xchg
mov
cmpsl
mov
push
shlb
scas
lods
outsb
pop
ljmp
sbb
jl
mov
es
movsl
stc
jmp
jecxz
cmp
aad
xchg
mov
int3
addb
ret
dec
jo
add
sbb
and
add
dec
scas
mov
in
pop
jns
test
clc
dec
popa
mov
cmp
add
movsl
mov
and
sbb
inc
imul
xlat
or
ret
out
andl
inc
push
push
sahf
test
aam
mov
or
shrl
sahf
xor
es
imul
adc
es
sti
mov
ret
adc
imul
sub
ret
cltd
add
gs
cwtl
xchg
mov
sub
adc
sub
inc
lds
les
jl
lcall
xchg
int3
add
fwait
ds
int3
and
gs
xor
xchg
sub
and
ret
sar
test
in
insb
lcall
out
or
iret
push
testb
or
mov
sbb
ret
out
adc
pop
mov
loop
shl
sti
and
fstpl
push
je
inc
mov
fisubrs
push
jno
mov
mov
minps
cmpsb
xchg
sub
insl
stos
aam
and
repnz
gs
in
sbbb
loopne
push
icebp
xchg
pop
test
dec
addr16
in
rcr
repz
aad
mov
inc
push
dec
subl
xchg
cwtl
sbb
in
mov
cmp
adc
scas
bound
xor
sbb
popf
pop
repnz
mov
sub
aad
popf
mov
ret
test
push
or
mov
push
lds
cmp
dec
mov
adc
push
push
sbb
mov
out
pop
add
pop
loopne
jp
bound
inc
lods
aas
adc
or
adc
mov
add
ret
sbb
addr16
das
dec
mov
cmpl
pop
aam
ljmp
subl
xor
sbb
sbb
sub
xor
orb
add
cmp
nop
adc
mov
test
inc
dec
xor
pop
mov
arpl
pop
xchg
adc
dec
div
bound
loop
adc
inc
ret
cmp
mov
xchg
das
std
jecxz
pop
mov
arpl
adc
xchg
ret
sbb
mov
sahf
dec
cmp
jge
dec
clc
outsl
xchg
daa
aas
sub
lret
gs
mov
cmp
pushf
mov
inc
pop
insb
adcb
jno
ds
daa
and
xor
jle
add
leave
push
sub
adc
iret
jge
sbb
movsb
das
sub
mov
jmp
repz
mov
bound
ljmp
or
fisubrl
dec
inc
and
je
pop
jge
jns
push
dec
xor
fwait
push
mov
pop
jns
jb
pop
cmp
jbe
sbb
mov
mov
insb
pop
es
push
cld
lods
jmp
out
test
sbb
cmp
add
ss
outsb
ja
rorb
and
and
jge
outsl
and
push
mov
pop
lahf
pop
std
or
clc
cmp
addr16
insb
adc
jl
shrb
test
pop
popf
xchg
cmp
mov
mov
sub
xchg
mov
mov
mov
fdivr
or
dec
mov
enter
sub
rolb
stc
dec
roll
mov
stos
or
inc
pop
loope
mov
pop
mov
call
push
fldl
jmp
mov
jnp
push
addr16
sub
rcrl
cmpsb
cmp
lea
pop
jmp
int
mov
cs
jle
sub
loop
scas
adc
imul
mov
call
inc
call
cs
cmp
mov
into
inc
lret
iret
mov
sbbl
xor
test
cltd
out
lods
xchg
call
adc
adc
xor
repz
nop
out
or
jge
jp
lea
sarb
gs
ret
push
sbb
jo
inc
ljmp
sbb
arpl
fcomps
sbb
adc
xchg
adc
mov
sub
mov
push
cmp
push
dec
out
jno
and
cmc
js
and
das
pop
mov
mov
push
mov
sarb
and
sahf
jle
andb
push
pop
imul
cmp
sbb
outsb
add
jbe
jmp
mov
ss
cmp
lcall
sbb
cmpsl
jae
or
pop
aas
add
lret
add
je
inc
push
daa
into
repnz
jno
xor
gs
jnp
xlat
aam
inc
push
jbe
movsb
pop
fwait
add
lea
add
jo
fs
cmp
jmp
jl
push
adc
xlat
arpl
rorb
mov
push
insb
mov
call
fnsave
mov
scas
inc
jp
in
js
adc
pop
scas
pop
mov
js
lock
jl
call
mov
fistpll
shlb
sub
mov
loopne
dec
sub
dec
repz
out
imul
cmp
mov
loopne
dec
adc
sub
cltd
mov
std
push
push
aaa
xchg
in
sbb
incb
inc
sbb
xlat
sahf
fdivl
xchg
mov
jb
arpl
outsb
push
mov
xchg
hlt
sahf
mov
push
lds
cmp
jno
rcr
pop
push
mov
mov
dec
inc
into
push
sahf
cmp
sub
jp
subb
dec
mov
mov
cmp
xor
dec
and
cli
sub
add
stc
aas
je
mov
mov
xchg
inc
cmp
shll
cmp
sbb
inc
out
aad
add
add
pop
ret
sbb
scas
jp
sbb
push
lods
lret
lds
jnp
mov
dec
jp
mov
popf
les
cmp
jmp
lods
cmp
add
cmp
jo
cltd
inc
addr16
lcall
or
xor
fisubrl
loopne
jne
ljmpw
lock
push
xchg
dec
jp
stos
xchg
pop
mov
push
cmp
inc
xlat
pushf
cmpsl
scas
fcmove
or
mov
das
dec
cmpsl
jo
cmp
xor
jo
pushf
xor
sahf
push
test
mov
fidivl
inc
mov
lahf
roll
pop
jae
movsl
ret
pop
movsl
pop
xchg
cmc
push
cmpb
std
gs
jl
cmpsl
xor
les
das
fcompl
sbb
mov
inc
jg
push
cmpsb
xchg
lock
cmp
inc
mov
push
clc
dec
sub
fidivrs
jno
or
add
imul
add
lods
aas
cmpb
adc
lods
sar
mov
shlb
out
xor
mov
push
jle
lret
gs
sub
iret
mov
sub
repnz
inc
sub
aam
pop
inc
aad
lret
std
lret
div
lcall
aad
lea
or
lds
sub
sarb
mov
in
mov
mov
inc
leave
divb
mov
mov
or
dec
xor
std
mov
xchg
jle
clc
xchg
inc
je
scas
cmp
fcmovu
cmpsb
movsl
push
mov
adc
xchg
mov
sub
inc
cmp
lahf
cltd
mov
xchg
or
aam
fldt
out
dec
insb
jae
mov
imul
adc
mov
filds
xchg
and
popf
dec
outsb
adc
into
inc
cmc
push
les
dec
adc
testb
jmp
out
and
loope
pop
dec
and
aam
into
rcrb
add
jecxz
gs
sbb
movsl
cmc
inc
test
sub
jnp
sub
movsl
push
shll
inc
sbb
sub
jmp
cltd
test
mov
mov
addr16
dec
jmp
push
push
subl
inc
lock
and
xchg
add
test
mov
lea
mov
outsb
sbb
pop
inc
mov
icebp
or
dec
jecxz
addr16
leave
xorb
sbb
int
cmp
mov
addb
push
mov
outsb
and
pop
gs
lds
cmp
xchg
lock
pop
lea
jl
lock
cmpsb
push
and
mov
lock
xchg
sbb
in
sub
outsb
imul
pop
aas
xchg
inc
loopne
fs
sbb
mov
aad
lods
adc
sbb
inc
mov
mov
jg
xchg
aaa
xchg
fwait
inc
sub
sti
clc
inc
fiadds
inc
in
jge
push
sub
dec
subl
add
pushl
mov
jb
cmp
cmpsb
pop
cli
cmp
or
clc
or
sbbb
cwtl
mov
into
xchg
fstpl
sti
jle
xchg
call
stos
lcall
imul
rorl
push
daa
xchg
js
insl
ret
inc
add
pop
out
lret
out
mov
xchg
dec
xlat
dec
lods
sbb
sarb
in
je
test
fcmovu
sub
imul
or
ror
xchg
sbb
pop
mov
insl
pushf
ss
inc
xlat
ljmp
movsb
ret
les
jmp
mov
xchg
lods
fbstp
dec
outsl
lods
xor
mov
mov
mov
sbb
mov
les
push
push
dec
mov
cmp
test
mov
jle
add
cmp
xor
inc
jl
js
addb
xchg
cs
xor
jle
movsl
and
mov
fs
popa
xchg
jl
sub
jnp
fistpl
movl
adc
sti
popa
test
lahf
sbb
mov
xchg
xor
in
inc
loop
cmp
jl
push
and
jp
out
sbb
fsubp
rcr
sbb
int
out
fs
cwtl
adc
xchg
fdivp
rcl
jns
xor
test
clc
inc
add
lods
sub
cmp
out
jp
adc
imull
fildl
push
xchg
mov
mov
rcrb
push
loop
je
xor
and
scas
pop
mov
jbe
bound
xor
arpl
lods
push
cmc
js
or
arpl
aad
inc
pop
push
out
mov
in
or
mov
mov
mov
fwait
sarl
adc
cmp
pusha
dec
pop
aaa
orb
cmp
mov
repz
xor
push
xor
mov
cmp
int
cmpsl
fcoms
lods
sbb
das
jge
pusha
mov
mov
sub
add
add
gs
sub
int
lahf
aad
xor
pop
add
pop
xchg
mov
jb
sbb
ljmp
xchg
xchg
fstpt
or
jmp
xchg
or
ret
addr16
out
cwtl
adc
stos
movsl
loope
sbb
push
clc
movsl
inc
aam
dec
jge
jmp
mov
leave
pop
sbb
lds
xchg
or
pop
ss
nop
insl
das
jg
cmpsb
jno
adcl
xchg
push
dec
sub
bound
les
rcrl
test
ja
adc
sbb
das
sub
and
lods
adc
jno
cmp
out
pop
jmp
inc
pop
out
aaa
jp
mov
outsb
movl
loopne
shll
fwait
scas
pop
les
xchg
clc
add
fstps
jae
mov
dec
add
or
cmc
sbbb
std
cli
cs
mov
cmp
jmp
out
jno
sti
mov
xor
and
mov
aaa
mov
not
xchg
mov
push
outsl
out
ljmp
mov
cmpsl
xchg
dec
sub
pop
out
stc
pusha
orl
js
shl
dec
test
mov
lret
and
test
push
in
adc
lahf
xchg
lahf
sbb
ret
add
and
adc
nop
inc
jg
into
mov
mov
mov
pop
add
mov
nop
out
inc
mov
out
fimuls
mov
inc
jmp
ret
adc
sub
add
inc
iret
dec
push
push
inc
sbb
dec
xchg
sub
jle
cli
dec
je
rcrl
push
aad
push
sbb
adc
pop
add
sub
xor
aam
iret
mov
mov
loope
mov
ja
jbe
dec
sub
cmc
inc
and
enter
daa
es
cwtl
or
dec
fs
lea
loop
dec
ja
insl
inc
inc
mov
xchg
dec
sbb
loope
lahf
sbb
das
mov
pop
mov
cmp
fcmovbe
ret
dec
jne
cld
test
fildl
mov
notl
stos
jae
mov
mov
add
sbb
cmpsb
dec
mov
pop
aaa
pop
sbb
outsl
or
add
add
sub
jns
fidivrs
call
faddl
pusha
movsb
clc
xchg
sub
mov
push
mov
repnz
in
xor
dec
ret
push
sbb
gs
xchg
stos
test
jp
jp
cld
or
mov
push
or
mov
xor
je
push
xchg
push
inc
mov
shrl
std
ljmp
mov
lea
or
mov
jmp
mov
insl
inc
divl
stc
outsl
test
sbb
out
sbbl
repz
mov
add
test
in
decl
icebp
shlb
jne
scas
int3
pop
imull
loopne
arpl
cmc
or
mov
xchg
inc
fisubs
mov
adcl
cmp
pushf
jnp
mov
adc
xchg
gs
loopne
adc
and
daa
mov
incl
add
mov
out
loopne
sahf
out
pop
cli
mov
cmp
aaa
pop
push
test
fadds
aad
pop
lahf
int3
inc
xchg
cmpsl
popa
sub
in
ret
popa
enter
aas
arpl
or
jae
cs
stc
out
ljmp
lret
or
push
lods
aas
cmp
jne
pop
inc
fs
inc
aam
fistpll
inc
add
xchg
sbb
push
xchg
fidivrl
push
sub
or
out
std
lock
pushf
pop
mov
pop
insl
outsl
and
pusha
stos
into
adc
mov
outsl
adc
test
ja
ret
sub
adc
fistps
adc
mov
cwtl
icebp
xchg
add
jmp
and
xor
mov
sbb
cli
xor
aad
movsb
cmp
je
scas
lds
sbb
jnp
scas
sub
aaa
ret
dec
cmp
xorb
shlb
loopne
mov
push
stos
mov
aas
pushw
mov
lds
out
push
sbb
and
adc
or
movb
inc
lods
jbe
mov
mov
repnz
mov
sbb
xchg
dec
add
lea
pop
xchg
dec
mov
mov
je
xchg
dec
stos
adc
imul
dec
xor
stos
sub
mov
inc
and
mov
and
test
mov
mov
mov
and
dec
cmp
inc
std
push
stos
insl
adc
clc
loope
mov
lods
xor
xor
mov
fdivrs
out
sub
ja
pop
mov
pop
popl
add
xchg
xchg
mov
jge
insl
std
mov
fs
ds
jno
fs
mov
cmc
lret
cltd
popf
into
cltd
inc
imul
mov
arpl
mov
mov
or
shl
xor
das
xchg
movsb
mov
loop
out
incl
ret
callw
push
adc
push
sub
jl
and
cwtl
std
mov
cltd
sarl
xor
push
movsl
jecxz
pop
insb
inc
lcall
lds
sti
and
insb
push
pop
add
rcll
mov
push
push
insl
push
lret
mov
lods
adc
repnz
pop
test
cmp
stos
pop
and
mov
pop
jg
sub
sub
jno
popw
test
sbb
inc
push
add
jns
insb
dec
pop
ds
cs
pop
push
popa
push
cmp
ds
cmpsl
repz
push
jne
dec
ds
pop
shll
dec
mov
fisubrl
or
iret
sub
imul
inc
xor
and
sahf
test
jae
hlt
mov
mov
push
pop
xchg
jo
test
subl
ljmp
test
sub
loope
js
inc
icebp
popa
mov
pop
dec
cltd
dec
iret
cmp
das
sbbl
sbbl
sbb
push
push
xchg
sbb
sahf
xor
test
cmc
pushl
hlt
in
pop
subb
sbb
mov
int
test
push
pop
xchg
mov
mov
incl
mov
fwait
mov
cmp
xlat
pushf
mov
fnstenv
ja
sub
stos
add
pop
sub
rcrb
mov
inc
movsb
mov
rol
movsb
int
loopne
mov
push
sub
mov
lea
xlat
aaa
xor
fsubp
pop
pusha
sub
dec
mov
xchg
push
adcl
sbb
sub
xor
shlb
insl
outsl
addb
stos
andb
and
sub
sahf
jle
xchg
out
scas
mov
sahf
xor
inc
cmp
dec
and
sti
insl
jmp
icebp
data16
inc
out
mov
in
bts
cmp
xor
mov
adc
or
fmulp
cmp
shrl
and
in
arpl
sbb
ret
fiadds
jae
scas
cmp
push
sbb
xchg
push
dec
inc
insb
ja
outsb
xchg
imul
add
loopne
bound
jnp
test
sti
push
idivb
ret
mov
and
push
add
fdivl
and
add
shll
jecxz
cmp
pop
xchg
cmpsl
rcrl
into
std
mov
test
xchg
aas
divl
in
add
loopne
test
mov
fsubrl
test
sarl
cmp
mov
xor
jne
test
sub
dec
mov
or
lea
or
sub
test
jae
mov
xchg
mov
push
push
cmp
mov
cmp
push
lods
shll
dec
ret
jecxz
adc
cmpsl
push
inc
inc
lock
lods
je
jo
lret
outsb
add
mov
gs
sti
mov
iret
sbb
lock
test
shr
pop
test
and
mov
mov
loop
int
push
mov
push
and
xchg
fmuls
ret
pop
push
pusha
mov
adc
dec
xchg
call
inc
aas
mov
push
mov
jl
pop
in
and
mov
mov
jmp
insl
pop
xor
into
aaa
sbb
bound
add
pop
test
loopne
sub
movsl
clc
add
loope
xor
jge
cli
into
xor
push
adc
pusha
jbe
test
lret
mov
jnp
ret
mov
mov
jnp
imul
fcompl
cld
dec
rol
ss
mov
pop
cmpsl
inc
shll
dec
add
inc
popa
loope
mov
jmp
push
and
mov
rorb
andl
mov
mov
push
cmp
movsl
arpl
je
sbb
bound
mov
or
cli
daa
loopne
ffreep
scas
stos
xchg
and
add
shlb
outsb
out
inc
sub
pop
xchg
aaa
and
ror
jl
lret
imul
mov
dec
mov
inc
dec
dec
adc
push
dec
cs
inc
cmp
inc
aas
pushf
lret
out
add
out
fisttpl
mov
imul
mov
arpl
loop
fwait
rcr
jbe
repnz
inc
cwtl
sub
in
outsl
cmp
cmp
mov
lods
cmp
xlat
inc
sub
mov
cmp
inc
and
jp
mov
mov
sub
adc
cs
jbe
xchg
push
sbb
xor
sti
cmp
pop
ret
fisttps
clc
ret
dec
xor
cmp
adc
test
adcb
cltd
outsb
xlat
int3
or
sub
cmpsl
aaa
rorb
push
repz
mov
xchg
push
mov
mov
mov
adc
int
push
cmp
or
xchg
ret
push
or
inc
mov
xchg
clc
jge
sub
mov
sbb
mov
sbb
adc
pop
hlt
in
xor
xchg
push
addr16
rcl
or
int3
test
or
xchg
mov
xchg
std
mov
or
in
dec
adc
xchg
sbb
adc
pop
jnp
mov
out
call
cmpsl
xchg
or
loope
mov
cmpsb
aam
sbb
fbld
sub
mov
mov
lock
sbbl
xorl
test
bound
test
xchg
dec
sub
inc
or
shll
jge
sti
sbb
pop
xor
mov
mov
fadds
xlat
stos
daa
or
sub
pushw
enter
mov
mov
sub
sti
movsl
lea
sub
lods
cmpl
jae
subb
mov
mov
lcall
mov
jle
mov
enter
and
mov
jne
pushf
mov
pop
inc
xor
sbb
out
mov
inc
mov
dec
in
bound
jg
push
sub
jb
in
insl
jnp
out
xor
repnz
add
mov
aaa
mov
xor
ud0
testb
outsl
in
and
jl
outsb
pop
mov
jge
mov
xchg
adc
popf
lahf
sarb
mov
and
add
lods
pop
shl
cmc
sub
or
cmpsl
out
mov
ss
xor
sub
mov
xchg
push
xor
imul
inc
inc
fwait
mov
fiadds
ret
mov
push
cmp
xsaves
repnz
push
mov
cwtl
daa
xor
sub
sub
int3
xor
and
nop
rol
mov
jg
push
push
push
mov
loope
mov
mov
fiaddl
or
xor
mov
shlb
into
cmp
sbb
rcl
mov
ja
decb
inc
sbb
cmp
jg
int3
js
xor
push
xor
shrl
cmpsl
addr16
lret
mov
out
cltd
decb
add
xchg
aas
nop
and
sbb
subb
in
pop
sti
hlt
xchg
mov
les
stos
or
sarb
mov
mov
and
push
shrl
in
lret
adc
repz
add
imul
cmpsl
in
jno
out
adc
insl
add
movsb
sti
xchg
inc
jb
gs
aad
loope
xor
or
test
lahf
jmp
ja
insb
lahf
test
pop
xchg
or
cmp
mov
push
inc
and
mov
cmp
mov
push
or
mov
rcl
leave
in
xor
xchg
mov
mov
mov
mov
mov
push
cmp
scas
jecxz
or
push
xchg
or
fisubrl
nop
outsl
jp
cmpb
xor
lcall
push
inc
dec
push
xchg
andb
sub
dec
in
subl
push
jne
int3
sub
or
jg
jbe
in
xchg
daa
movb
int
clc
cmp
or
cmc
repnz
push
push
popf
adc
andb
push
imull
cmp
jb
cltd
adc
jmp
inc
push
mov
cmc
fbld
ret
pop
gs
inc
jo
in
sbb
inc
mov
lock
add
lds
mov
jbe
testb
xchg
fstpl
sbb
out
mov
lds
cs
fcom
test
xchg
xlat
fxch
sbb
sbb
mov
stc
hlt
gs
or
int3
pushf
int3
nop
mov
mov
shrb
div
pop
cmc
les
iret
scas
out
ret
movl
imul
mull
scas
adc
and
cmc
aad
push
outsb
inc
sbb
std
lods
xchg
push
add
pusha
gs
pop
sahf
in
clc
pop
sbb
clc
mov
ss
jb
jno
push
repnz
in
insb
xor
push
cltd
sbb
jb
xchg
pop
adc
mov
mov
ret
repnz
push
insl
cltd
sbb
mov
mov
fmulp
je
sub
imul
inc
imul
in
test
shll
cmpsb
xchg
in
stos
lcall
jge
mov
mov
or
mov
addr16
iret
paddb
js
xchg
add
imul
repnz
ret
out
jle
repz
pop
pusha
insl
xchg
out
cltd
push
daa
pop
mov
testb
fiaddl
dec
inc
add
out
or
mov
out
js
outsl
negb
xchg
sarb
pop
and
and
sahf
xchg
js
add
pop
push
repz
out
shl
dec
mov
jl
xlat
enter
mov
mov
dec
and
das
ljmp
fsubr
sub
ret
add
cmc
dec
in
cmp
sbb
cs
dec
inc
sbb
xchg
dec
and
or
cmp
mov
lds
dec
fwait
clc
and
rcrl
cltd
lock
clc
sbb
xor
lret
pop
or
ja
add
cmp
scas
pop
jae
repz
das
sub
in
shl
push
xorb
fistps
dec
jle
imul
test
repz
sub
movsb
jp
loopne
xor
rolb
lahf
cmpsl
push
dec
imul
mov
mov
imul
jo
cld
mov
and
and
popa
mov
xchg
cmc
rol
std
adc
into
adc
xchg
rol
in
in
pop
push
xchg
rolb
mov
xchg
fdivp
push
jp
add
dec
and
xchg
dec
or
xchg
and
out
xchg
shlb
fisubs
pushf
je
pop
pusha
dec
inc
mov
test
mov
aaa
mov
sub
popa
add
in
jecxz
fstps
mov
add
out
fnstcw
sub
movsl
ret
or
into
pop
sub
shl
xor
fcoml
ljmp
lods
adcl
dec
xor
xor
popf
sbb
iretw
pop
mov
popa
push
adc
js
stos
repz
mov
cmp
daa
les
mov
inc
aam
sbb
out
xchg
cmpsb
xorb
cmp
mov
cmpsl
icebp
das
pop
mov
push
sub
mov
push
cmp
inc
lock
enter
push
cwtl
cmp
mov
xchg
das
daa
mov
sub
dec
xchg
movsl
iret
and
sub
add
sub
lret
rcrb
aas
push
lods
sbb
and
xchg
rclb
xchg
cltd
mov
mov
jno
push
sub
arpl
shll
xor
and
mov
shll
jg
push
xchg
mov
sbb
stc
loop
mov
icebp
jmp
mov
addb
mov
xor
push
cld
stos
mov
sub
icebp
cld
call
pop
push
add
mov
adc
mov
jne
pop
fwait
leave
adc
pusha
or
or
pop
test
js
sbb
movsl
and
cmp
push
xchg
dec
das
fcomp
arpl
test
fldenv
add
repz
das
sahf
mov
pop
push
and
stos
aas
mov
cmp
xor
popa
cli
mov
add
cli
push
rcrl
cmp
cmp
inc
pushl
outsl
xor
xchg
dec
mov
test
in
pop
cmp
sbb
push
lahf
dec
outsl
pop
loop
and
lds
addb
mov
and
or
std
cmp
and
or
and
sbb
xor
into
jmp
dec
ja
in
jge
das
mov
daa
out
lret
outsb
sti
push
out
cmp
mov
inc
lods
xor
sbb
sbb
notb
cmp
outsl
add
fs
cltd
psubd
mov
push
int
inc
frstor
shrb
andl
test
je
mov
loope
icebp
imul
sysexit
adc
shr
fists
push
fs
sbb
rep
in
mov
adc
jnp
sbb
adc
popf
sub
jp
ficomps
or
inc
ret
or
call
pop
add
push
and
and
rorb
shll
fisubrl
mov
jbe
fistl
pop
imul
sti
add
call
pusha
mov
sub
xor
inc
jbe
or
jne
push
aas
xlat
dec
and
or
fsubl
std
sbb
int
dec
push
mov
in
imul
pop
lods
adc
push
movsb
movsb
ret
loope
mov
xor
pop
lea
ss
rorb
inc
in
or
jae
pop
xor
hlt
xchg
ljmp
adc
fs
add
cmp
jle
mov
and
xchg
xor
int
aas
add
adc
lahf
lock
sub
fs
sarb
loope
mov
add
imul
test
int3
rcrb
rcl
out
add
add
cmpsb
and
cmp
mov
fistpll
pop
scas
mov
sbb
sbb
mov
loop
dec
bound
cmp
lea
sub
xlat
mov
aas
mov
push
fisttpll
popf
icebp
xor
push
push
int3
test
and
or
scas
sbb
mov
pop
arpl
push
scas
insb
and
xor
cmc
xor
pushl
or
stc
pop
aam
shr
addr16
cmc
xor
in
fdivrl
cmc
and
or
xor
sbb
iret
cltd
outsl
clc
in
out
enter
pop
or
scas
cmpsl
aad
setae
cltd
scas
pop
ds
or
jns
pop
and
fwait
jns
cmc
cs
sbb
lods
mov
in
sbb
cs
movsb
adc
sub
push
push
out
xchg
insb
mov
add
mov
orl
lods
rcrb
jl
jns
add
shl
jno
dec
inc
pop
repz
push
in
adc
sti
xlat
pop
mov
xor
call
jle
mov
hlt
xchg
jp
sbbb
inc
mov
fmull
lret
pop
or
iret
pop
adc
xchg
sbb
insb
jns
aas
sub
lret
outsl
jmp
cmp
add
shlb
or
push
xchg
dec
push
adc
mov
inc
inc
scas
jns
lods
push
cmp
xlat
inc
out
sub
in
and
and
sub
cmpsb
insb
insl
ds
aaa
inc
fmuls
sub
fnsave
jmp
mov
jg
adc
dec
xchg
sbb
ss
jge
imul
xchg
cmpsb
lods
sub
lods
jo
push
or
shll
xchg
divl
test
aas
mov
pusha
dec
repz
adc
inc
sub
mov
xor
push
jecxz
test
mov
cld
or
lcall
cmpsl
pop
adcl
inc
cmpb
stos
rorb
add
cmp
mov
adc
loop
pop
xchg
and
mov
adc
inc
add
xchg
ja
lret
sbb
xchg
popf
lret
inc
mov
jne
sbb
ja
push
adc
sub
icebp
push
dec
std
jnp
xor
sahf
jno
mov
ret
dec
imul
repz
rcrl
inc
insl
xor
or
and
push
scas
fdivp
aad
das
xor
xorl
or
mov
dec
shl
sbb
push
test
pop
fcomi
in
outsl
jne
je
jns
pop
out
lock
loop
cmp
aas
inc
frstpm(287
pop
idiv
scas
adc
inc
mov
sbb
and
mov
pop
jmp
push
rclb
call
add
or
jbe
arpl
lds
pop
cmc
lds
xlat
les
jae
jmp
fsubr
cmp
outsb
or
imul
inc
pop
and
mov
push
shlb
cmc
jmp
inc
sarl
stos
pusha
cwtl
mov
call
mov
dec
clc
and
cli
mov
aam
push
sbb
ret
movsb
sub
les
jae
movsl
repnz
cmc
cltd
mov
mov
or
cmp
scas
pop
mov
repnz
scas
ds
negl
fisttpll
es
add
mov
cli
stc
dec
in
or
into
scas
jle
add
add
xchg
cmp
push
and
loop
mov
ljmp
scas
shll
addr16
add
mov
popa
scas
lock
popf
cmpsl
mov
jns
and
notl
mov
mov
nop
lret
jle
movsl
pop
mov
cmc
int3
bound
or
or
dec
call
pop
pop
xor
sbb
sbb
gs
loope
pop
inc
push
add
pop
gs
lret
int
xchg
mov
fdivs
pop
and
xor
lea
jp
dec
mov
and
jge
mov
jg
lds
out
test
sub
sub
jle
cs
push
mov
jns
sarl
mov
xchg
mov
dec
add
mov
in
stos
xchg
add
nop
cmp
add
and
adc
pop
cmp
lods
push
mov
jnp
xchg
pusha
lea
divl
mov
add
and
jge
push
pop
xchg
loop
xchg
mov
insb
jno
sub
imul
loop
je
mov
mov
xchg
sar
cmp
jo
cmp
push
xchg
mov
test
xchg
xlat
mov
jecxz
jecxz
cs
adc
pop
lret
hlt
fbstp
and
pop
out
sti
shl
inc
xor
sub
jnp
inc
fucomi
popf
mov
adc
jp
pop
mov
cltd
cmp
addl
pop
sbb
addr16
enter
push
clc
dec
and
insb
ret
stos
sbb
fcmovnb
iret
enter
inc
frstor
aam
int3
mov
ljmp
insl
adc
repnz
test
xchg
insl
jmp
mov
xor
cmp
mov
test
push
stc
sbb
mov
xchg
mov
sarb
pop
in
out
jmp
movsl
in
imul
fwait
push
jb
iret
pop
into
jnp
adc
add
mov
adc
push
mov
loope
sbb
out
in
pop
test
jb
hlt
push
imul
cmpsl
imul
or
sarl
xor
es
xor
dec
inc
xchg
push
dec
jbe
jnp
jbe
pushf
insb
push
decl
mov
lahf
scas
std
dec
cmpsl
xchg
push
xor
push
in
fmull
jge
cmp
cmp
pop
call
out
popa
movsb
adc
test
xor
inc
out
or
pop
pushl
negb
loop
inc
sbb
jg
scas
hlt
sbbb
pusha
iret
sub
int3
xlat
fcoms
gs
stos
push
mov
sub
pusha
sbb
mov
push
stos
rorl
test
stc
and
push
lret
sbb
sti
jle
sbb
aam
xchg
push
mov
push
adc
sbbb
and
lods
sbb
das
aaa
sub
mov
mov
js
int
xchg
ret
push
xor
cld
push
mov
sbb
add
xor
inc
jmp
hlt
fnstenv
rol
mov
dec
push
loop
lcall
add
mov
jae
std
add
pop
push
mov
sbb
jne
ret
push
jmp
out
jge
mov
inc
loope
add
lret
jb
cmp
sbb
stc
xor
scas
outsl
push
pop
out
cmpsl
mov
or
xor
das
push
rolb
lret
xor
scas
paddsw
xor
iret
stos
xchg
pusha
inc
lds
pusha
int3
nop
pushf
sbb
mov
add
mov
cmpsl
dec
xchg
decb
int
mov
mov
xlat
cmovg
pop
in
enter
into
lcall
mov
and
push
test
jecxz
je
xchg
shl
repnz
push
clc
pushf
div
ss
insl
test
je
aas
roll
data16
sub
sbb
cmpl
or
push
jmp
push
ljmp
xchg
xor
pop
and
ror
or
lock
fwait
mov
repz
push
jl
xorl
scas
jle
test
les
pop
adc
jo
adc
and
subb
push
fidivs
add
pushl
fadd
lock
loopne
loop
adc
pop
add
movb
stos
xor
out
lahf
shlb
pand
ret
sub
cs
mov
jb
std
jp
cmp
sub
mov
daa
ret
mov
out
aaa
test
mov
jle
loop
push
jg
push
hlt
push
dec
mov
repnz
cld
pop
fstp
aad
xor
push
mov
out
xchg
dec
mov
pop
shll
ds
mov
into
pop
insb
sub
ret
shlb
and
mov
sbb
mov
inc
adc
push
mov
pop
cmpxchg
push
mov
mov
rcrb
arpl
mov
or
insb
mov
lret
decl
mov
pop
fnstcw
loopne
out
sub
insb
aam
sbb
xchg
cmp
icebp
mov
out
pop
add
xor
jne
sub
mov
mov
jle
movsb
cmp
or
dec
xlat
iret
mov
cmpl
cmc
inc
ljmp
push
push
xchg
xor
int
lods
and
in
push
lds
push
cmp
fs
mov
lock
mov
sub
in
lret
jno
add
icebp
in
cwtl
mov
mov
or
imul
xchg
mov
int3
fstp
subl
mov
ljmp
arpl
dec
add
lret
test
mov
sbb
pop
push
leave
adcb
int
sti
lcall
es
dec
into
jecxz
call
test
cmp
sbb
sahf
jmp
push
and
dec
push
cmpsb
xor
sahf
mov
lods
dec
test
cmp
lock
pop
neg
push
lret
movsl
add
mov
xchg
mov
ljmp
cmp
std
lahf
call
pop
push
mov
jne
dec
xor
jo
test
push
inc
lret
dec
xor
cmp
or
sbb
push
hlt
and
push
pop
push
jge
ret
mov
int3
enter
popf
add
push
or
pop
push
and
jb
add
cltd
sarl
hlt
push
lahf
shlb
aas
dec
icebp
fwait
das
inc
push
cltd
bound
stos
lods
or
sub
sbb
stc
mov
inc
sub
adc
xchg
in
mov
pop
and
mov
mov
sbb
outsb
add
fimuls
outsl
sbb
mov
aad
adc
cmc
imul
sbb
push
rolb
out
jmp
mov
iret
mov
adc
pop
adc
push
int3
in
jmp
rcl
icebp
inc
mov
sub
int3
outsl
push
lcall
push
jae
xchg
mov
test
out
dec
mov
jae
out
stos
pop
test
cmpsl
iret
outsb
xchg
lea
and
hlt
test
cmpl
mov
jne
pop
movsb
or
inc
mov
scas
push
jnp
in
mov
sbb
mov
push
mov
or
movb
mov
mov
cmpsl
jne
or
cmp
jbe
sbb
test
adc
shll
or
add
frstpm(287
inc
rcll
pop
inc
stc
cmp
push
xchg
jecxz
adc
inc
cs
shlb
mov
or
mov
xchg
jmp
adc
jmp
xchg
xor
push
clc
pop
ss
and
pop
fs
mov
inc
cltd
add
mov
add
lods
xchg
aad
dec
push
jnp
enter
and
sbb
dec
or
or
pop
mov
dec
or
push
lds
dec
pop
adc
outsl
or
mov
sbb
push
ds
mov
dec
ljmp
scas
flds
jne
xchg
jne
mov
movsl
mov
outsb
push
aas
call
nop
mov
mov
push
jb
dec
outsb
push
clc
insl
in
lea
push
or
mov
inc
push
pusha
add
xchg
xchg
mov
and
out
sahf
stos
ret
adc
push
mov
cmpsl
loope
jmp
pushf
inc
in
mov
push
test
lret
addb
rcl
in
mov
xor
ror
push
sbb
hlt
mov
dec
pop
test
push
xchg
into
stos
jns
fs
movsl
push
int
push
in
pop
sar
xor
adc
mov
add
jecxz
inc
mov
jecxz
jge
xchg
mov
jae
pop
xchg
pop
movsl
push
mov
sbb
nop
add
xlat
jbe
popa
push
stos
data16
mov
push
and
mov
jo
inc
insb
push
out
sti
aam
andnps
inc
js
out
inc
dec
aas
jnp
push
dec
mov
pop
pop
mov
jmp
sbb
or
inc
int
mov
faddl
loop
jl
shl
mov
fwait
cmpsb
pop
pop
mov
insl
fidivs
in
ret
daa
and
loop
ja
out
mov
leave
ror
fs
inc
sbb
subl
mov
push
test
pop
inc
in
jae
or
or
or
xor
lret
int3
sahf
lds
call
test
add
mov
lret
mov
pushf
jns
sub
popa
jo
jmp
clc
xor
cwtl
sbb
mov
in
inc
idivl
xchg
inc
sti
inc
scas
cmp
sarl
jns
cmp
lret
cmpsb
sbb
cmp
mov
cmp
fwait
add
dec
popl
lret
mov
fldl
call
lea
fldcw
mov
inc
dec
push
xchg
pop
xor
mov
adc
stc
and
negl
or
mov
fnstcw
mov
sarl
sub
stc
outsl
divb
fldt
xchg
push
fistl
lcall
jecxz
pop
sbb
xor
mov
imul
imul
dec
inc
xchg
cltd
pop
in
test
jmp
mov
test
push
xchg
aam
jo
sub
scas
dec
jb
inc
imulb
push
popf
add
icebp
imul
push
add
fsubrl
or
jbe
imul
cmc
jae
dec
xor
xchg
pop
or
mov
aad
xor
xchg
shll
ss
daa
add
or
jo
jne
pop
outsl
mov
cmp
hlt
test
add
popa
testl
movsl
fwait
cli
lods
sti
test
test
jbe
ret
push
push
adc
pusha
mov
ss
mov
and
sbb
and
mov
pusha
jno
push
jp
inc
in
fadds
push
out
ljmp
test
sarl
dec
outsb
int3
sbb
add
jecxz
sbb
imul
fmull
sbb
adc
xchg
jb
xor
aas
inc
test
repz
pop
addr16
stos
femms
mov
leave
loop
xchg
cmp
xor
outsb
sahf
mov
fcom
sub
pop
xchg
scas
jns
pusha
out
and
stos
mov
inc
into
sub
jecxz
in
outsl
out
je
mov
test
lds
xor
xor
xchg
ds
adcb
dec
cmp
sub
int3
inc
and
lods
xchg
enter
mov
cltd
stos
sbb
mov
jecxz
push
dec
sub
adc
cld
mov
repz
sub
xor
push
add
sti
repz
cmpsl
neg
jl
xchg
and
jecxz
jne
cli
xor
out
cwtl
test
inc
test
repnz
xor
loopne
sub
aad
pop
jmp
inc
int3
shlb
add
pusha
push
xor
jae
xor
or
nop
loopne
lret
sbb
shll
adc
imul
pop
jo
jae
xchg
iret
mov
enter
xlat
es
stos
out
jb
pop
jle
pop
mov
stos
lock
test
mov
add
adc
or
test
push
push
mov
pop
rep
repnz
jo
inc
out
cmp
add
push
xchg
sarl
rorb
add
cmc
sbb
xchg
adc
cld
imul
clc
sbb
dec
sbb
test
shlb
lock
push
jne
mov
ret
mov
fs
sub
mov
sbb
sbb
int3
mov
gs
mov
adc
jg
mov
mov
dec
imul
add
addr16
cmp
jb
or
jnp
outsb
xchg
int
jne
cmpsl
mov
mov
loope
jne
popa
or
lret
in
dec
aaa
sqrtps
rcll
lock
and
outsb
cmp
sub
shlb
out
stos
imul
inc
lret
test
xchg
xchg
adc
adc
jecxz
dec
icebp
cmp
clc
adc
sbb
int
out
ljmp
lret
sub
movsb
int3
lahf
out
cmp
push
mov
adc
or
xor
mov
or
aad
test
xlat
int3
insl
hlt
stos
xchg
loop
in
adc
push
mov
sbb
push
stc
xor
xchg
test
pop
sub
dec
and
mov
cmp
mov
cmpsb
pop
fstpl
push
push
lahf
lds
xlat
push
xchg
inc
lcall
rorb
jmp
mov
jp
aaa
fistps
xor
shl
iret
mov
leave
push
xor
add
mov
arpl
aad
lahf
and
dec
aad
mov
pop
jo
stos
pop
mov
jmp
or
inc
addr16
jnp
hlt
call
or
mov
sbb
push
fisttps
sub
rcr
push
and
cmp
push
stos
add
add
jmp
inc
jns
jl
and
popf
sub
xchg
cmpsl
push
inc
pusha
inc
js
sub
mov
jecxz
cmp
lcall
or
test
out
mov
sbb
adc
mov
adc
pop
cmpsb
es
in
xchg
adc
and
data16
push
mov
jge
lret
push
cmc
add
fdivs
jne
mov
ret
lea
pop
imul
pop
xor
inc
js
lcall
mov
push
jb
leave
in
jb
mov
cmp
xchg
xchg
xchg
imul
test
sbb
lea
push
stc
fbld
cmc
cmc
test
cmc
stos
push
imul
mov
push
push
pop
idivl
mov
mov
xchg
pop
test
jns
cmp
iret
mov
lret
into
rcll
pop
addb
mov
fldenv
xlat
call
cmp
sbb
pushf
imul
mov
lret
mov
inc
cmc
jno
in
add
bound
es
test
mov
jo
fdivp
adc
bnd
cld
pop
popa
jecxz
mov
mov
in
sub
add
xchg
inc
clc
mov
push
and
sub
repnz
push
mov
or
jmp
pop
or
or
sub
add
adc
mov
lahf
negl
pop
lcall
loopne
or
lea
fdivp
pop
and
mov
out
shrl
stos
sbb
lret
in
sub
inc
cmp
icebp
xor
lock
or
negb
lea
mov
jl
pop
sub
push
xchg
fists
cs
sahf
xor
out
cltd
stc
test
test
bswap
sbb
push
push
popa
fildll
pusha
adc
jb
fs
xor
mov
push
xchg
movsb
int3
xor
call
and
xor
sub
scas
cwtl
mov
hlt
pop
fwait
je
sbb
add
arpl
sahf
push
mov
mov
sbb
sbb
test
test
push
jbe
outsl
leave
pop
inc
les
fmull
loope
jnp
xor
je
mov
pop
push
test
shrl
sti
mov
add
jbe
jns
xlat
push
jne
nop
xor
xchg
in
xchg
push
mov
or
inc
sbb
imul
jnp
mov
jb
xor
outsl
lock
sub
in
lcall
push
nop
pop
loop
mov
nop
jl
inc
xchg
pop
or
mov
test
xchg
inc
gs
popf
sbb
inc
mov
fwait
mov
dec
sbb
punpckhwd
cmp
outsb
and
sbb
dec
add
int
mov
mov
mov
data16
jecxz
cmp
or
or
dec
mov
test
push
dec
mov
lahf
out
cltd
jb
loop
sbb
mov
in
ret
adc
idiv
add
bound
push
jno
pop
inc
xchg
or
xor
push
cmp
dec
or
xor
pop
dec
repz
inc
and
pusha
adc
push
push
lahf
stc
xor
cltd
lods
mov
ss
xchg
dec
mov
fdivrs
lahf
xchg
in
mov
cmp
cmp
xchg
ss
jmp
out
pop
xor
sub
je
dec
cmp
dec
fwait
lret
imulb
movsb
xchg
mov
repz
jne
cmp
lods
xchg
cmpl
or
shrb
sbb
iret
add
fisubrl
and
dec
mov
in
lret
cmp
mov
push
cli
testb
cld
sub
and
xor
sub
mov
adc
lea
xor
jne
push
adc
adc
sub
pop
in
jle
push
xchg
push
pop
cmc
jae
data16
icebp
cmp
scas
mov
xchg
std
pop
aad
push
inc
out
xor
adc
movsb
out
sbb
pop
ja
es
xchg
and
je
scas
imul
mov
mov
cli
pop
ja
cs
out
sub
or
ds
cwtl
xchg
mov
test
or
clc
and
scas
int3
push
inc
inc
out
insb
mov
xor
gs
leave
push
addr16
rcrl
xor
fisubrs
add
mov
lcall
nop
dec
imulb
adc
test
xchg
js
mov
lret
inc
cmc
fildll
xchg
repnz
xchg
popa
inc
pushf
and
xor
or
cmpsb
pop
imul
push
add
jg
lret
movsb
pop
dec
popa
mov
fisttpll
mov
cwtl
adc
push
out
test
outsl
xchg
repnz
mov
xlat
les
mov
adc
scas
push
sbb
out
nop
jno
add
adc
sub
ja
and
cmp
imul
mov
js
sbb
movsl
inc
clc
loope
jno
mov
add
jne
je
lods
insb
sti
inc
repnz
cmpsb
mov
xchg
sti
push
mov
daa
mov
pop
pop
xchg
inc
bound
data16
pop
add
mov
stos
decb
push
add
add
int3
ss
jo
movsb
lds
push
jb
ret
and
popf
sub
cld
imul
dec
adc
cmpl
or
decl
mov
adc
mov
inc
cmp
repnz
out
fsubl
or
or
mov
fisubrs
pop
push
les
jbe
mov
inc
pusha
scas
dec
repnz
or
jmp
or
adc
push
jl
loop
jne
add
in
pop
cld
jo
mov
out
mov
out
in
mov
shl
sub
loope
insb
int
sbb
fmuls
ret
fcomip
orl
ss
gs
je
fdiv
mov
add
rcll
jle
je
xchg
push
in
pushf
lock
mov
jnp
js
xchg
jne
jne
lds
or
cmpsl
mov
dec
xchg
repz
jmp
daa
fildl
add
mov
sbb
test
dec
insb
sbb
inc
jp
push
inc
mov
repz
aam
add
mov
popa
dec
ljmp
test
or
loope
repnz
sbb
mov
out
dec
das
jne
push
xor
sti
repnz
pop
sub
mov
cmpsb
fisubs
nop
xchg
ljmp
flds
cmp
and
mov
pop
popa
aad
insb
cltd
inc
fs
movsb
mov
mov
inc
jne
cmpsw
ffree
idivb
jg
mov
lock
fildl
sub
mov
test
xchg
push
test
and
xchg
sarl
cwtl
sbb
ret
cmpsb
or
dec
push
in
je
mov
cwtl
cs
xor
xor
and
add
rclb
xchg
mov
shlb
cmp
or
and
loop
mov
and
cltd
xlat
mov
push
pushf
xchg
sbb
push
rcrl
xor
dec
jl
andb
mov
pop
cli
fildll
mov
mov
call
out
sub
sbb
cli
sub
out
push
add
mov
push
into
mov
or
cltd
push
adc
fs
lcall
leave
shlb
popf
push
ret
fdivrl
and
stc
sahf
xor
inc
lcall
push
jno
lea
movsb
add
fidivs
ss
mov
sub
insb
andb
add
mov
testl
xor
adc
jecxz
je
xchg
das
pushf
pop
outsb
and
and
leave
clc
jmp
add
in
roll
pop
lahf
cs
andb
daa
stc
push
cmp
mov
imul
les
cmpb
mov
and
fistps
shlb
aas
cmp
cmp
in
mov
in
mov
add
inc
add
xchg
mov
mov
mov
pop
adc
pop
mov
add
xchg
inc
mov
cmp
clts
cltd
inc
sbb
aam
sti
jns
pop
rcr
sbb
daa
push
scas
xor
mov
sbb
data16
in
or
lret
mov
stos
stc
insl
leave
lods
lds
pushf
sbb
fisubrs
enter
and
aad
xor
das
adc
cld
mov
pop
xchg
lret
repz
sub
fmuls
adc
into
dec
pop
adc
outsl
lea
dec
xor
jb
ret
addr16
cmp
daa
popf
outsl
data16
ja
add
rdpmc
adc
subl
inc
or
test
mov
mov
mov
add
cmp
or
mov
jb
sbb
mov
insl
adc
repz
push
push
adc
int3
cmp
pop
jae
icebp
pop
out
mov
mov
mov
jae
arpl
fildl
xor
add
mov
lock
mov
mov
mov
sti
sub
imul
outsb
cmp
repnz
sub
jno
jno
mov
cmp
adc
das
sahf
adc
lock
inc
lock
xlat
shrb
push
sub
cmp
and
and
loopne
sub
or
cmp
stos
mov
bound
jl
push
pop
fsts
dec
mov
push
mov
outsb
jle
pop
cmc
aaa
adc
jp
push
pop
jno
cmp
and
imul
jge
int3
fistps
inc
jbe
sub
mov
push
lock
pop
mov
in
jle
jle
inc
push
insb
mov
jo
out
mov
leave
mov
adc
movsl
adc
mov
pop
adc
loop
or
test
xchg
and
xchg
and
icebp
ror
jmp
xchg
movsb
and
xchg
inc
out
push
scas
push
pop
in
inc
lea
frstor
sub
sub
add
cltd
and
mov
push
mov
xor
loope
jno
mov
push
bound
ljmp
mov
sahf
in
pop
add
test
pop
fs
dec
xor
xor
fstl
mov
ja
mov
icebp
je
adc
cs
iret
jg
in
js
repnz
jae
jl
adc
int
mov
pop
clc
lds
lret
push
jbe
ljmp
bound
lahf
pop
adc
in
add
rclb
adc
cld
mov
out
test
lock
lahf
and
sbb
into
mov
mov
lds
pop
mov
cmpsb
mov
mov
ja
imull
cmp
jbe
xchg
dec
push
insl
inc
sub
ds
sbb
lea
cmp
pop
imul
pop
aad
sbb
mov
ljmp
mov
iret
mov
pusha
jg
jo
fs
add
xlat
sbb
jne
rcrl
in
lahf
cltd
je
fdivrs
adc
cmpl
mov
lods
or
push
fidivs
mov
or
jae
inc
pop
fistps
dec
and
andl
pop
push
and
scas
aaa
cli
test
outsl
rcrb
pusha
pushl
std
sbb
popa
push
jp
cmp
add
movsl
or
sti
shll
int
in
out
mov
push
loopne
clc
cs
nop
mov
jmp
insl
xor
cmp
iret
push
repz
in
arpl
incl
call
mov
inc
hlt
mov
jmp
push
test
mov
mov
fidivl
pop
push
adc
jnp
add
mov
push
sub
orl
push
mov
sub
xor
mov
les
loope
repz
push
int3
jmp
pop
aas
mov
add
out
xchg
pop
dec
in
and
and
loop
sbb
lock
cmp
mov
stc
push
sbb
outsb
aas
int3
pop
lret
push
cs
in
mov
loope
mov
fisubl
insb
addr16
fstps
lret
int3
xor
std
sub
and
pop
fisubrl
jbe
jb
aad
sbb
mov
pop
and
ret
loopne
dec
xor
inc
stos
dec
pushf
mov
and
jo
imul
jb
adc
inc
dec
and
mov
mov
bound
leave
jl
sbb
and
mov
jmp
pop
xchg
jl
mov
mov
jmp
and
push
int
in
adc
add
inc
sbb
es
xor
pop
addr16
mov
xchg
mov
test
gs
fiaddl
pop
out
cmp
movsl
scas
adc
mov
loope
mov
xor
cmpb
sbb
fiadds
sub
mov
hlt
pop
jge
test
pushl
aas
divb
call
sbb
sbb
cmc
add
sub
test
jecxz
cmpsl
sbb
jne
lret
repz
pop
push
cmp
cld
ljmp
inc
fwait
or
inc
cmp
mov
cmp
mov
inc
sbb
dec
cli
cltd
in
pusha
rol
aad
mov
sub
cmp
mov
insl
xor
xor
lret
lcall
ret
adc
xor
adc
sbb
shlb
test
pop
test
out
das
or
pslld
pop
div
or
add
ljmp
inc
add
add
inc
sbb
pop
adc
out
cmp
pop
dec
lods
rclb
jecxz
mov
sbb
push
dec
rcrl
test
xchg
fimull
mov
xor
inc
and
xchg
loope
divl
or
dec
notb
inc
ds
adc
pop
jl
push
ret
hlt
subl
and
in
or
fsubp
loopne
loopne
xchg
and
jle
cmpsl
mov
pop
pop
cmpl
fistps
les
fstpl
mov
gs
adc
cwtl
clc
inc
inc
jg
divb
loopne
shll
lds
dec
mov
aad
imul
sbb
jp
std
pop
stos
push
add
sti
lahf
into
sub
xor
inc
out
movsl
rol
mov
mov
cmpsl
imul
pop
movsb
push
mov
iret
ss
ja
fldt
fwait
push
fcom
sub
enter
andl
xchg
jl
push
inc
adc
or
in
push
stc
fdivrs
leave
mov
and
xor
xor
xor
push
ficomps
aad
push
mov
xor
or
lock
ds
lcall
adc
fs
loopne
dec
pop
adc
sbb
sti
cmp
and
mov
ljmp
cld
hlt
sbb
jno
mov
mov
add
shrb
aad
nop
movsb
pop
pop
adc
lock
aaa
ret
sbb
mov
clc
ljmp
fisubrs
inc
cwtl
dec
cmp
loopne
sub
push
mov
call
mov
sub
push
pop
outsl
mov
adcb
out
xlat
mov
jp
ficompl
roll
pushf
add
adc
mov
mov
push
inc
or
les
fisubl
pop
inc
push
mov
xchg
mov
in
pop
jge
dec
das
pop
int3
test
pop
cmpsl
cmc
cltd
mov
sbb
xor
and
cmp
add
nop
popf
push
dec
mov
push
arpl
jmp
jb
aam
lea
out
and
sbb
icebp
push
xor
test
push
xlat
lcall
out
cmp
fsts
sti
pop
lret
loop
ss
or
sub
leave
xchg
pushf
cmp
fmull
inc
pop
jmp
jl
xor
clc
mov
pop
imul
adc
hlt
and
repz
ljmp
jnp
stos
outsl
or
xchg
pusha
pop
mov
lret
test
push
jb
sub
cmp
xor
push
sbb
and
xor
cli
jnp
rcr
rorb
jb
jp
popa
rorl
scas
jbe
xor
test
pop
mov
aas
xor
andb
mov
and
sub
pop
xlat
push
arpl
and
icebp
add
mov
orl
jg
pushf
jmp
sub
push
enter
push
push
push
jns
push
jne
sarl
shll
fs
enter
popa
fs
repz
inc
inc
xor
add
add
into
xchg
cmp
push
pop
out
lahf
inc
push
call
in
xor
stos
pushf
div
mov
sbb
mov
in
popa
ret
push
aam
xor
sub
jge
sbb
mov
xchg
inc
or
mov
test
and
xor
ds
inc
dec
xor
mov
push
jnp
jns
xor
adc
fldenv
and
xchg
jmp
fimuls
xor
call
mulb
push
test
mov
sbb
inc
sahf
ret
add
faddp
add
cli
stc
push
cwtl
stos
test
push
fcompl
imul
outsb
jl
mov
mov
arpl
xorl
or
repnz
add
out
call
or
outsl
sbb
cld
jp
insb
pop
add
inc
and
xchg
ljmp
scas
out
pop
es
popa
add
bound
aaa
cmp
or
cld
and
sbb
cltd
cmp
jg
jb
lcall
adc
movsb
mov
or
jl
frstor
popa
pop
inc
xchg
inc
lret
js
ss
test
cmp
mov
pop
scas
mov
cmp
inc
jne
cwtl
jp
out
push
leave
mov
fldlg2
adc
xchg
add
or
pop
aaa
out
sbb
test
pop
loopne
lods
sub
imul
ret
test
aaa
addr16
iret
lret
fstp
cmp
repz
xchg
addr16
daa
lcall
je
sbb
pop
movsb
leave
testl
dec
dec
data16
cmp
addr16
test
mov
cmp
xor
inc
gs
jge
scas
je
adc
stc
push
out
mov
xor
call
push
xchg
mov
aad
dec
aam
xor
fwait
mov
scas
xchg
fsts
cmp
sub
cmp
pop
sbb
cwtl
pop
adc
es
stc
sahf
ss
xchg
shr
inc
stos
loopne
test
add
cmpsb
movsb
pop
pop
inc
stc
sbb
in
loopne
jnp
xchg
jno
jmp
push
mov
mov
jae
sub
les
xlat
cmp
stos
push
mov
cltd
mov
outsb
push
add
std
jnp
imul
outsb
mov
adc
push
inc
lods
adc
loopne
and
push
adcb
xor
lock
or
movsl
mov
outsb
or
daa
aaa
pop
mov
idivl
out
out
cmp
nop
push
mov
scas
into
popl
dec
repz
cmpsb
ror
or
outsb
into
jnp
mov
mov
xchg
in
dec
das
pushf
aad
add
rcrl
jge
add
jnp
lret
adc
dec
cmp
shl
push
sti
mov
add
jo
sub
test
repz
add
lock
fcmovbe
inc
add
shrb
mov
mov
add
pop
fwait
into
mov
cmp
loope
xchg
inc
bound
imul
sub
and
pushf
inc
pop
xchg
cltd
inc
push
fimuls
push
adc
add
dec
cltd
mov
xorb
jno
cmp
mov
das
mov
pop
mov
outsl
sbbb
mov
icebp
fisttps
ficoms
jecxz
xchg
into
outsl
pop
inc
dec
xor
or
movsl
insl
fs
sub
sti
mov
aaa
jns
adc
mov
xchg
sbb
mov
sub
lods
mov
outsb
cmpsl
xlat
pop
dec
fisubl
loop
dec
movsb
push
jg
sub
imul
insl
repnz
fldenv
xor
dec
popf
ficoml
sbb
jae
outsl
inc
cmp
xchg
int
cmp
add
mov
decb
cld
mov
out
shrl
loope
add
aam
inc
mov
in
and
mov
shlb
fucomp
test
in
xchg
jnp
xor
inc
mov
cltd
es
dec
add
test
inc
dec
sbb
xchg
jg
xchg
inc
or
xor
xchg
ss
pop
cli
clc
movsl
lock
std
lock
lret
pushl
mov
mov
repz
lea
dec
or
shrb
mov
es
jmp
sub
cmpsb
pop
cli
jle
shl
out
or
gs
cmp
and
sbb
inc
adc
call
mov
ljmpw
sub
mov
shrl
dec
daa
cmp
fwait
movsb
and
mov
push
js
adc
sti
fwait
mov
out
es
popf
pop
repnz
sbb
jbe
cmpsb
loopne
xchg
lock
or
into
xchg
jmp
adc
hlt
adc
leave
pop
xchg
push
sbb
push
sbb
stos
popa
pop
jp
aas
xlat
mov
fcmovnb
jl
ds
hlt
in
dec
inc
fldl
pop
xor
test
andl
mov
ret
call
xchg
aad
and
lahf
pusha
outsl
stc
pop
sbb
push
jnp
mov
sbb
jg
mov
pop
push
and
fstpl
rcll
mov
and
push
mov
and
sbb
cmpsb
test
inc
loop
rorb
cmp
pop
sahf
divl
xabort
mov
xor
push
loopne
cwtl
sbb
addr16
sub
pushf
mov
icebp
cmp
cs
sub
jae
inc
leave
in
pop
idivl
mov
xchg
push
lret
xlat
jp
test
dec
clc
popa
or
mov
add
push
movsb
ja
sub
ds
int3
cmp
dec
pop
push
push
int3
out
push
dec
cmp
xor
sub
xor
inc
repz
xor
xor
orb
insl
std
mov
cld
pop
mov
sub
hlt
scas
mov
fcoml
or
fidivs
int3
jge
push
or
push
push
dec
push
ret
inc
cwtl
jb
adc
gs
push
adc
lds
call
xor
stos
inc
scas
add
int3
pop
repz
repz
fnstenv
imul
dec
ret
push
mov
imul
adc
mov
mov
dec
dec
mov
test
cmpl
ljmp
fcmovb
lds
mov
push
mov
lret
aad
imul
fucomi
mov
imul
popa
loop
add
js
push
push
insb
jg
jae
pusha
out
mov
cmp
lods
mov
mov
push
push
mov
aam
mov
jne
je
cmpsl
into
and
adc
xor
push
dec
pop
cmp
and
xor
rcrl
push
sbbb
mov
es
aaa
shl
jecxz
lea
rolb
rorb
xchg
jmp
jge
dec
scas
push
roll
fisubs
cmp
push
inc
pop
pop
cltd
or
adc
fists
int3
pop
pop
push
cltd
outsb
fsubrs
std
xchg
ds
outsb
fs
fdiv
shrl
and
fimull
sub
dec
aam
sbb
std
call
out
test
fisttpll
stc
arpl
imul
loop
push
out
jecxz
add
sbb
inc
inc
flds
in
mov
cltd
repz
inc
dec
cmpsl
jne
popf
sub
outsl
iret
mov
loop
push
sbb
add
mov
push
pop
lods
fs
shlb
jle
shrb
inc
add
call
add
xor
jmp
mov
fildll
repz
add
ret
cmp
inc
scas
popl
xor
into
or
or
jl
das
xor
je
pop
mov
inc
mov
add
xor
add
inc
xor
fistps
mov
out
dec
ss
mov
mov
dec
adc
and
xchg
adc
jo
testl
pop
dec
inc
icebp
push
loopne
ljmp
and
xchg
lret
mov
into
incl
sbb
sbb
or
daa
test
loop
cmpsb
test
sbb
jnp
jmp
lods
les
mov
push
lods
fcomps
mov
push
arpl
sub
add
add
fnstcw
pop
jecxz
popf
bound
insb
gs
lret
inc
sti
lret
cmp
ljmp
mov
movsl
sub
adc
clc
jmp
jnp
mov
clc
stc
mov
rcl
sub
subl
daa
push
cwtl
testb
imul
push
jne
out
sahf
jp
rorl
unpcklps
push
jno
xchg
bound
popa
rorl
das
or
sub
mov
adc
push
sarb
loope
mov
cmp
aas
jp
movsw
cmpsb
int3
out
lret
imul
ret
fnstenv
rcrl
pop
jnp
pop
mov
popf
fcoml
cmp
loope
out
dec
jl
pop
subl
xchg
adcb
cmp
je
and
xlat
and
shrl
movsb
jmp
sbb
mov
xor
or
iret
roll
popa
leave
xor
push
mov
dec
jno
pop
ficoms
cmp
jne
test
dec
int3
push
xchg
adc
lods
push
mov
or
inc
out
clc
gs
js
mov
sbbb
and
aam
std
cmp
test
cs
mov
jmp
gs
cli
jns
mov
adc
pop
or
in
sub
jl
add
push
fsubrs
sbb
dec
sub
or
dec
nop
dec
imul
sti
cmp
jo
das
ret
dec
sub
fsubrs
inc
imul
mov
and
and
out
shlb
arpl
in
adc
pop
ds
fdivs
jecxz
movsl
out
mov
jbe
xchg
mov
add
aaa
les
mov
dec
xor
aas
cmpsb
xchg
mov
jmp
add
sarl
inc
adc
movlps
out
aad
out
push
push
test
sbb
into
orl
sbb
out
pop
ljmp
jns
and
pushf
pushf
push
lcall
out
lock
push
or
cmp
fwait
sub
or
outsl
std
ja
push
out
popf
sbb
fildl
in
ljmp
xchg
inc
pop
jle
cmpsb
enter
aad
out
loope
dec
cmpsl
notb
ficoml
pop
cmpsb
cli
out
sahf
aad
inc
jg
hlt
sub
rcrl
in
out
cmp
test
gs
nop
loopne
inc
test
sub
fldl
push
cmp
push
mov
ftst
sub
inc
push
jge
xor
lret
andb
lock
fwait
lock
bound
or
jp
fists
cmpsl
leave
daa
shl
cmpsl
gs
push
jo
imul
cmp
or
cmp
push
hlt
xchg
jecxz
shrl
mov
mov
addr16
test
outsb
or
xor
mov
pop
cmp
pop
and
xor
cmp
cmp
ljmp
mov
repnz
repnz
sbb
in
rcll
sub
jns
inc
rep
mov
push
sbb
mov
ss
jecxz
leave
sbb
xor
cli
cmp
inc
push
add
xchg
cmpsl
aas
fwait
lahf
sbb
repnz
popa
xchg
mov
and
cmp
sti
add
int3
adc
lahf
sbb
int
fadd
jp
bound
out
ja
into
jo
xchg
sarb
push
mov
jns
jne
jle
jo
and
cmc
psubsb
shlb
rcr
sub
dec
test
insb
dec
push
sbb
and
mov
nop
aad
int
lret
mov
xchg
pop
dec
add
ja
pushf
xchg
stc
jp
adc
pop
in
ss
add
mulb
jbe
cmp
mov
outsl
aam
lods
adc
jne
mov
insb
lcall
jno
ret
bound
push
stos
pushl
cmpsb
and
int
je
dec
hlt
fldt
cmc
loop
ss
xor
adc
fucomp
lahf
sub
test
pop
push
mov
dec
aad
cmp
cmc
or
testl
xor
xor
mov
int
lret
inc
push
das
xchg
inc
scas
push
mov
mov
inc
add
push
gs
mov
cwtl
loopne
inc
pop
out
push
mov
and
xchg
jg
fs
xchg
cli
iret
push
mov
pop
inc
je
les
es
sub
or
je
into
orb
shrl
rolb
and
js
cmp
xchg
mov
xchg
mov
jge
and
jb
pop
outsb
cmp
push
jb
jmp
ss
out
adc
or
push
dec
push
xor
push
iret
and
loope
hlt
iret
inc
stos
sbb
xchg
add
add
sub
sbb
js
dec
jb
jg
call
data16
lock
jecxz
inc
movsb
adc
mov
shlb
andb
xlat
loopne
mov
in
inc
outsl
jns
jle
pop
mov
lods
jae
dec
int3
xchg
pusha
call
sub
inc
dec
mov
adc
cmpsb
inc
std
cmp
es
cwtl
push
dec
jne
and
xorb
mov
inc
out
sub
gs
mov
das
ja
pushf
test
ret
ret
inc
loope
in
jecxz
jne
sub
aam
jae
pop
or
and
push
mov
mov
xchg
mov
push
sub
loope
daa
jb
es
cmc
iret
test
mov
sub
test
xor
adc
pop
pop
push
xor
testl
insb
inc
mov
in
jnp
mov
arpl
lock
lret
mov
push
std
inc
push
sub
jg
sbbb
testl
cwtl
dec
sub
int3
xchg
roll
into
cmp
imul
and
mov
les
int
mov
push
xchg
sbb
test
sub
inc
lods
outsl
inc
add
out
imul
dec
or
fdivl
mov
or
push
daa
test
sub
pop
dec
add
divb
xor
cmp
push
ret
cmp
les
pop
lret
outsl
push
inc
lcall
lock
sbb
shrl
rcll
shr
inc
repz
push
lret
jbe
cmpsb
jecxz
lea
xchg
test
dec
mov
pop
pop
rcrl
ljmp
mov
sub
icebp
cmp
inc
mov
mov
aad
mov
repz
hlt
jmp
mov
or
scas
scas
cwtl
jns
mov
and
jl
leave
loopne
and
and
adc
insb
aas
loopne
lcall
pop
jl
sub
call
ljmp
cmp
loopne
xor
lock
mov
outsl
fdivl
bound
pop
sti
dec
or
aaa
andl
mov
loopne
stos
add
es
jmp
mov
int3
les
jns
xchg
clc
fistl
dec
sti
inc
push
push
push
jo
cmpsl
incb
popa
int3
outsb
cli
pop
aaa
or
xor
cli
push
paddsb
cld
inc
sbb
pop
push
inc
pushf
lcall
and
lods
pop
ret
inc
test
cmc
aad
mov
add
fldl
add
mov
outsb
jmp
mov
es
mov
ds
shlb
xchg
sub
add
push
mov
mov
xchg
iret
call
roll
jns
mov
repz
shl
add
push
andb
les
mov
fdivs
dec
adc
and
shll
and
add
fidivrs
dec
inc
loop
mov
mov
sbb
iret
filds
push
xchg
fcomps
dec
mov
scas
mov
or
in
in
notb
loope
dec
repz
inc
fsubrl
fwait
inc
push
icebp
lsl
mov
cmp
in
ljmp
cld
fiaddl
cmp
dec
lea
daa
adc
rclb
and
or
ja
nop
adc
jno
lds
cmc
push
pushl
and
add
xchg
lea
mov
pop
roll
fdivrs
push
inc
xchg
mov
adc
add
in
gs
adc
outsb
insb
fbld
pop
lods
sub
insb
arpl
pop
in
or
ja
fildll
loop
mov
cld
jecxz
jo
dec
add
sbb
fnstenv
pushf
pop
cmp
push
pop
xchg
mov
insb
in
pop
inc
loop
push
xchg
or
loop
movsl
insb
aas
xchg
insb
enter
inc
addr16
and
fidivs
push
cli
test
fs
sub
fldl
mov
loop
shrd
scas
fdivl
out
inc
ret
inc
test
add
imul
lret
add
or
xchg
dec
adc
add
sbb
outsl
fstl
in
mov
shrl
negl
mov
repnz
aaa
shrl
sub
dec
sbb
aas
add
roll
inc
lds
stos
cmp
lahf
dec
jo
aam
inc
rclb
mov
mov
mov
dec
aaa
daa
dec
mov
mov
gs
adc
push
adc
movsb
mov
fiadds
mov
gs
or
imul
in
sbb
push
mov
ret
cmpsl
add
xor
pop
ss
in
fildll
adc
mov
push
fsubs
adc
or
add
pop
pop
jbe
popa
pusha
sbb
loop
lcall
push
in
and
mov
add
std
pop
fucomip
mov
push
iret
jne
gs
push
and
fstl
and
in
mov
stos
mov
imul
mov
pop
xchg
mov
jo
adc
test
mov
xchg
xor
imul
pop
mov
imull
xchg
inc
in
xlat
loopne
js
xor
jg
sub
inc
aam
or
aam
lcall
sbb
ret
xor
xchg
cmpsl
and
sar
repnz
loope
movsl
jge
xor
imul
mov
mov
rolb
notl
xchg
pop
mov
leave
or
outsb
out
add
pop
lahf
or
jb
fidivrs
mov
mov
mulb
loop
sbb
sub
adcb
cmp
test
pop
mov
sub
xor
test
fcmovu
inc
xchg
lods
mov
lcall
imul
ficompl
pop
popf
sub
sarb
rorl
jb
mov
leave
mov
pop
aam
xor
shll
outsb
add
rcr
or
ds
jnp
xor
mov
jl
in
xchg
dec
divb
loop
jp
or
pop
pop
popf
es
aas
mov
mov
push
fsubl
fdivs
jmp
ficompl
jmp
fcomps
dec
movsl
jae
dec
lret
push
xchg
lret
out
cmp
push
dec
lret
push
sub
sahf
sub
xor
push
add
push
lahf
xor
clc
mov
aaa
mov
cmp
popf
mov
jno
sub
stos
in
adc
shrl
in
xchg
inc
cs
mov
insb
sahf
ja
sub
outsl
cmp
xlat
lds
testl
mov
push
pop
leave
mov
add
hlt
xor
push
imul
mov
filds
dec
adc
nop
adc
stos
xchg
test
aas
dec
insl
xchg
mov
in
xchg
push
das
arpl
enter
lea
inc
cmpsl
jge
mov
neg
mov
mov
jb
repnz
mov
add
cmp
fnstenv
into
cmp
jle
lcall
pop
mov
xor
in
cmc
inc
jge
jle
sbb
mov
mov
mov
mov
js
es
cmp
out
fstps
movsl
cs
or
add
es
stc
adc
pushl
in
push
mov
mov
dec
pop
insl
test
rcrb
lods
popf
pop
imul
push
cmpsb
std
ficompl
mov
jo
xor
insl
xor
push
aas
imul
bswap
cmpsb
sub
testb
push
push
mov
in
dec
aad
imul
sbb
mov
mov
xchg
imul
sbb
aaa
rep
pop
bound
pop
xchg
sub
mov
adc
cmp
in
out
clc
mov
mov
repz
mov
in
push
cltd
stos
push
movsb
mov
cld
fistps
insl
pop
push
cwtl
push
sbb
add
cltd
sub
cltd
add
lock
mov
jl
sbb
mov
in
lods
xor
mov
or
test
popa
lret
jp
negl
pop
add
xchg
push
push
inc
jg
sbb
scas
clc
fsubrl
inc
cmpb
lods
adc
fstp
cmp
and
push
mov
in
pushf
inc
push
inc
xchg
cmp
pop
adc
das
popa
ja
pop
push
jns
rolb
out
fs
xor
popa
pop
adc
and
cmp
dec
cs
pop
sti
mov
adc
mov
ljmp
mulb
jle
rolb
inc
xor
js
xor
repz
out
xor
pop
inc
cli
xchg
pop
mov
sub
fstps
sub
xchg
pop
fidivs
dec
xor
test
mov
xor
les
icebp
sub
movsl
push
adc
xchg
popa
faddl
xor
jecxz
stos
cmp
inc
xchg
xlat
jl
sub
loope
push
xor
or
into
xchg
mulb
sbb
out
jle
aas
pop
int3
outsl
loope
sbb
aad
iret
jns
xor
imul
test
test
insb
jle
cmpsl
lret
sbb
fcoml
rclb
movsl
fsub
and
mov
movsb
cmc
and
repnz
pop
add
xchg
leave
jns
and
rcr
push
adc
icebp
lods
shlb
mov
and
mov
je
imul
cltd
push
ljmp
ja
in
push
loope
mov
or
push
push
jae
out
sub
in
add
addr16
movsb
xchg
pop
fcomps
and
adc
pop
cmp
fistpl
das
sub
call
push
scas
xor
xchg
movsl
movsl
fwait
push
int
xchg
cmp
xchg
fldcw
fbstp
ja
cmc
aaa
push
cs
mov
and
mov
jo
les
sub
out
sub
or
push
aad
fs
and
das
push
push
fwait
sbb
mov
cmp
sbbb
imul
in
movsb
and
cwtl
dec
sub
mov
cld
xchg
cmpsb
add
or
popf
cmp
fldcw
xchg
jo
test
or
pop
add
lock
movsl
add
leave
push
push
or
outsl
mov
and
loope
sahf
js
mov
lock
ss
inc
cmp
out
in
adc
xchg
mov
sub
mov
mov
jecxz
pop
sub
cmpsl
mov
push
in
fisttpl
aad
cs
sbb
add
mov
dec
out
into
hlt
lahf
xor
nop
push
mov
andb
aas
ss
andb
mov
sarl
push
push
push
pop
push
mov
aas
out
hlt
roll
xchg
jb
jp
stos
add
mov
insl
mov
test
inc
xchg
cmp
jl
jns
jecxz
sti
sbb
repnz
dec
inc
cmp
jnp
bound
mov
dec
xor
inc
fldt
push
xor
and
pop
mov
xor
mov
pop
divb
mov
das
sbb
mov
scas
fdivs
jo
xchg
pop
mov
pop
stc
add
mov
in
das
jmp
mov
cs
das
test
js
lods
aas
lea
loopne
push
repnz
std
cmovns
mov
sbb
mov
outsl
addr16
jl
push
xlat
lods
test
fbld
xlat
dec
mov
xchg
cmpsl
lcall
pop
stos
incb
push
jae
enter
lahf
mov
movsb
jg
and
outsl
sti
mov
mov
out
cmpb
inc
cmp
loop
and
subl
jp
mov
lds
hlt
into
cltd
pop
loope
mov
cmp
cmp
lret
xchg
js
icebp
out
pop
mov
test
mov
icebp
add
jp
rol
dec
ret
movsb
jg
mov
lds
adc
mov
push
jae
and
js
xorl
cmp
push
or
mov
pop
and
jg
outsb
int3
inc
xor
pop
arpl
mov
shll
or
mov
ret
lahf
mov
cmp
jecxz
sti
pop
inc
sub
inc
jmp
jo
push
cmp
fs
lods
add
mov
add
sbb
dec
cmpsl
sub
shrb
jp
dec
out
add
lahf
jl
mov
dec
into
aad
rorb
imul
and
push
jae
add
pop
sub
int
lcall
dec
out
jnp
mov
dec
xchg
lcall
loopne
add
stos
jl
cmp
cld
repnz
aas
repnz
push
fidivs
xchg
movsl
lahf
jnp
xor
or
jae
pop
cmc
pop
mov
pop
bound
iret
sbbb
lret
test
mov
cld
or
xor
data16
mov
std
sti
lret
sahf
xchg
mov
ja
in
mov
jb
or
ljmp
shll
popf
mov
mulps
fisubrl
ja
lods
xchg
mov
adc
mov
cmp
dec
lods
out
mov
les
pushf
pop
hlt
cmpl
js
mov
lds
imull
repnz
or
pop
pushf
mov
mov
or
jb
sbb
repz
repz
daa
nop
cmp
pop
test
cmp
hlt
cld
push
leave
pop
xchg
push
xchg
arpl
or
aas
xor
adc
mov
rcrb
push
mov
out
push
movsl
or
dec
sbb
push
fisttps
arpl
fldt
or
mov
push
dec
or
sbb
adc
cmp
mov
mov
xchg
xchg
ficomps
test
xor
insb
and
sbb
or
cmpsb
jne
mov
and
loop
adc
movsl
or
cmpsl
push
inc
and
and
fxtract
mov
testb
mov
test
into
das
inc
pop
imul
cmp
sti
movsl
in
mov
or
fnstenv
aam
rorl
cld
xchg
push
inc
ret
cmp
daa
mov
mov
mov
sarl
test
cli
xor
sbb
les
mov
sub
mov
aaa
jecxz
sbb
test
cltd
daa
repz
stc
fwait
iret
cmp
push
mov
loope
push
add
mov
mov
ljmp
jns
inc
fistl
cmp
icebp
pop
lret
jmp
scas
mov
or
jge
or
or
in
jge
cmp
adc
pop
mov
shl
sbbl
cmp
push
ds
fcmovnb
test
or
sarl
in
mov
cmp
pop
and
and
adc
out
cld
pop
outsb
or
push
pop
repnz
repnz
fdivr
pop
sbb
cs
cld
clc
iret
mov
cmp
test
or
adc
outsl
push
push
sub
xor
and
push
imul
jle
subb
imul
cmp
sub
and
dec
mov
pop
scas
sahf
xor
or
dec
imul
jle
out
sbb
push
outsb
divl
adc
testl
nop
jmp
sbb
and
adc
sbb
into
and
pop
cmp
pop
imul
gs
mov
cmpsl
xchg
push
jmp
mov
and
lahf
mov
adc
push
and
andb
in
outsb
jne
pop
jle
ja
pop
cltd
sub
iret
lds
and
jo
mov
enter
mov
stc
and
dec
pushf
mov
inc
xchg
cwtl
push
fisubs
pushf
nop
mov
gs
xlat
mov
jo
dec
out
int
cli
lcall
cs
push
push
jae
jbe
ret
movsb
xor
fnstcw
inc
out
mov
fdiv
sbb
xchg
mov
aad
jae
shrb
pop
mov
xchg
fwait
sub
lahf
flds
push
push
or
cld
aaa
mov
xchg
or
push
sub
sbb
cwtl
dec
arpl
insb
clc
xchg
mov
mov
test
lods
push
add
or
xchg
or
pop
and
fildl
pop
lods
in
popf
pushf
rclb
add
arpl
cld
cltd
mov
xchg
adc
in
xlat
test
sahf
mov
cs
xchg
ja
imul
sbb
out
and
clc
pop
addr16
ja
sarl
pop
cmp
lods
popa
mov
scas
mov
test
loopne
cld
sbb
leave
mov
xchg
xchg
and
subl
fnstsw
jne
inc
inc
scas
js
add
jb
mov
xor
add
sbb
addb
and
leave
cwtl
mov
dec
mov
jne
mov
push
enter
scas
push
dec
pop
pop
mov
add
cmpsb
pusha
or
or
xor
sti
and
les
cmpsb
sub
inc
pop
push
cli
mov
mov
sbb
in
das
sub
div
dec
call
or
pop
out
cmp
adc
dec
iret
roll
cs
sub
cs
jecxz
pusha
adc
movb
movsb
jg
cwtl
xlat
es
lret
pushf
fs
test
fidivs
js
cmp
bound
iret
pop
and
ss
enter
ds
repnz
sahf
adc
fs
into
xor
mov
flds
inc
sahf
rclb
daa
out
jge
stos
xchg
lret
push
je
nop
sub
lds
push
xchg
rcrb
cmpsl
mov
and
in
xchg
and
adc
popa
cmp
xchg
outsl
repz
pop
mov
mov
leave
stc
andb
pop
mov
lds
cmp
mov
xchg
sub
js
push
cltd
call
mov
call
in
mov
sar
inc
sub
sbb
into
les
movsl
divb
pusha
jecxz
addb
das
sub
push
insl
cs
cld
dec
cld
loop
shll
jnp
arpl
test
or
sub
cld
out
adcl
jg
adc
add
and
test
mov
out
dec
sahf
mov
sbbb
mov
gs
cmp
fcmovbe
push
loop
test
test
or
or
cwtl
pusha
and
cs
arpl
adc
push
mov
dec
lret
cmpsl
sbb
rorl
sub
dec
js
ds
push
jl
lods
add
xor
sub
adc
adc
cmp
dec
mov
sti
sbbl
movsl
popf
adcl
test
nop
outsl
mov
fmull
ss
mov
sub
pop
xchg
jmp
pop
sub
xor
inc
fs
jno
les
add
add
sbb
push
in
repz
aaa
mov
scas
pop
pop
dec
xchg
into
imul
cld
bound
push
out
pusha
out
xchg
nop
ret
push
in
dec
sbbb
jnp
mov
push
clc
hlt
sub
xor
mov
bound
push
add
mov
aas
inc
gs
into
add
dec
pop
insl
mov
or
xchg
pop
call
pop
and
stc
jnp
movsb
daa
add
cltd
cmp
push
data16
sti
dec
andl
ljmp
cltd
and
push
xchg
lcall
xchg
out
add
aam
fistl
jp
out
andb
or
arpl
les
xchg
arpl
lea
test
mov
lcall
fwait
push
and
ror
and
pop
arpl
iret
pop
test
pop
mov
pop
adc
xor
xchg
pmaddwd
lret
iret
dec
movb
dec
push
stos
pop
fs
add
add
imul
dec
jb
cwtl
idiv
jp
jmp
cmc
aam
lock
mov
push
test
jle
pop
in
fisttps
and
lret
mov
lock
jns
adcb
mov
jge
jnp
add
fisttpll
repz
xchg
add
data16
add
ja
fiaddl
jmp
lods
frndint
inc
jmp
dec
sbb
clc
sub
pop
inc
fmull
clc
das
cmc
jle
dec
or
jo
data16
fs
frstor
movsl
push
jecxz
subb
imul
test
push
xor
sbb
insl
les
jle
repnz
out
je
fcompl
pop
lcall
sub
dec
sti
sbb
sub
jl
notl
leave
mov
in
inc
xchg
idivb
lods
std
pusha
das
cmp
add
in
mov
add
add
jbe
fnstenv
add
ds
dec
sbb
jg
mov
popl
mov
push
les
sbb
adc
sbb
jl
pushw
faddl
fwait
pop
icebp
int3
in
std
mov
xchg
mov
pop
sbbb
fwait
pop
xchg
push
xor
call
out
mov
inc
test
mov
adc
mov
sub
sbb
mov
mov
jno
or
out
inc
mov
xchg
push
dec
ss
leave
dec
dec
adc
lret
fcoml
leave
push
xor
xchg
insl
sbb
out
mov
clc
add
jecxz
hlt
mov
mov
into
adcl
fdivrs
lret
lock
inc
jno
addr16
and
out
out
sbb
inc
insb
in
ret
cmp
dec
fldt
and
jg
fists
sub
cmpsb
or
lcall
jl
cmp
push
sub
push
mov
xor
inc
fstpt
lahf
push
dec
decl
mov
fsubrl
fadd
xchg
add
sti
adc
popa
repnz
imul
and
js
xchg
cmovg
enter
cwtl
mov
pusha
gs
pusha
addr16
cli
bnd
jno
mov
popf
xor
cmp
adc
call
jb
lahf
cmp
int
cmp
push
lods
out
popa
xor
cmp
das
jmp
jnp
iret
inc
mov
and
dec
push
andb
push
add
jl
push
lock
daa
hlt
xor
pmulhuw
mov
out
or
loop
mov
sub
imul
xor
cmpl
inc
mov
lods
addb
loopne
pop
fldenv
push
rcll
gs
dec
ret
pushf
test
dec
aas
push
or
fdivrl
aad
icebp
fsubrs
popf
addr16
lock
xlat
mov
xor
dec
stc
cmp
mov
icebp
ret
pop
sub
rcl
sub
xchg
fcompl
test
repnz
xor
dec
inc
stos
xlat
xor
jno
test
xchg
jb
popf
sbb
jle
xchg
push
cs
popf
nop
mov
iret
pop
add
cltd
test
jo
mov
dec
inc
jg
inc
lcall
and
xchg
popa
lret
push
je
sbb
xchg
or
xchg
mov
bound
xlat
cmc
lcall
in
sbb
cli
lods
sub
and
dec
jge
hlt
mov
inc
adc
mov
aad
cwtl
xchg
movsb
mov
out
dec
leave
std
jno
iret
and
add
clc
mov
mov
mov
inc
pusha
xor
add
xor
jae
add
enter
or
loopne
call
mov
popf
lcall
sbb
in
sub
xchg
mov
and
add
xchg
stc
ret
les
jnp
mov
ds
push
push
xchg
and
outsl
add
ret
fwait
stos
jle
hlt
sub
mov
scas
lods
jmp
or
icebp
cli
mov
stos
pop
pop
je
mov
scas
jg
cltd
sti
sbb
iret
mov
mov
in
std
gs
incl
mov
pop
imul
mov
xchg
push
scas
arpl
jno
sbb
pop
shll
int
movsb
lahf
mov
out
lret
mov
add
push
inc
in
and
cmp
call
inc
adc
add
popa
mov
aas
shrl
stos
int
mov
fcompl
add
arpl
sub
dec
jmp
dec
adc
imul
inc
shrb
imul
loopne
ss
nop
mov
push
sub
xchg
or
sub
lahf
adc
ds
sahf
dec
data16
jns
sub
outsb
mov
lcall
rolb
cltd
call
sub
pop
lods
lret
jmp
lcall
pusha
nop
cli
pop
in
xchg
mov
mov
pop
add
stc
lahf
xchg
jmp
jae
jo
inc
add
and
addr16
xor
repz
mov
cmp
fnstenv
mov
mov
inc
call
mov
inc
or
push
push
xor
fnsave
cli
sub
pushl
xchg
loop
aaa
cmp
xchg
push
insb
cmp
aad
mov
ret
test
stc
std
xor
insl
push
ljmp
ss
dec
shrb
push
mov
lea
push
xchg
rcrb
in
stc
fstpt
loop
jmp
xorl
xchg
pushf
cmp
clc
adc
stos
call
jo
cld
sub
fs
xor
jge
cmp
jg
cli
pop
lcall
pop
add
cmpb
es
push
stc
inc
adc
scas
les
in
outsb
addl
xor
xor
pop
je
sbb
sbb
mov
movsl
ss
cmp
iret
pop
inc
inc
jnp
pop
push
ret
jge
mov
push
push
xlat
movsb
jg
dec
sbb
mov
sbb
pop
enter
out
ret
js
cmp
inc
negb
lods
mov
test
xchg
adc
test
in
subb
loop
or
ret
xchg
jo
mov
and
insb
mov
adc
stc
je
dec
mov
push
xchg
xchg
loop
mov
je
sahf
adc
call
xchg
jbe
icebp
push
mov
inc
jl
loop
lock
mov
jne
push
xchg
mov
jl
sub
shl
push
das
and
or
push
adc
xor
pop
inc
inc
inc
xor
xor
mov
jl
and
in
sti
xchg
sub
fwait
es
sub
imul
lcall
insl
pop
call
pop
test
out
movsl
or
cmp
mov
fiaddl
cmp
sbb
imul
pop
jmp
fidivrl
shll
ss
testb
xlat
jmp
out
fwait
test
or
adc
inc
ret
mov
push
js
sar
adc
xchg
mov
cli
mov
mov
popf
dec
stos
shll
repnz
push
repz
ds
test
mov
inc
xor
mov
mov
jle
or
dec
ja
fstps
inc
mov
outsl
or
sbb
cmp
ljmp
adc
cwtl
or
fcoms
stos
mov
movsb
inc
mov
inc
xchg
sub
pop
cli
arpl
adc
sub
sbb
scas
fnsave
es
aas
xor
inc
jle
add
jg
and
push
mov
arpl
fstps
mov
rcrl
pop
dec
int3
nop
outsl
fidivrs
fucomip
stos
jns
mov
out
out
mov
pop
pop
pop
push
add
dec
shlb
out
inc
scas
add
rcrl
ja
mov
pop
mov
xchg
jmp
jo
js
or
pop
daa
cmp
jns
lahf
outsb
imul
rep
adc
les
popf
out
pop
repnz
insb
mov
xchg
jb
imul
xor
fisttpll
mov
fisubrl
push
scas
and
xchg
cwtl
leave
loope
xor
cmpsb
scas
mov
xchg
popf
inc
andl
sarl
xchg
pop
mov
fcmovne
adc
test
es
pusha
pop
push
fsubr
iret
in
out
repz
and
dec
xlat
jge
cli
lret
dec
movd
mov
ss
hlt
in
rcrb
in
stos
pop
lock
in
shl
icebp
sub
mov
pop
inc
ret
addr16
jns
push
inc
je
and
filds
dec
movsb
or
pop
movsb
jge
xchg
cld
sbb
cs
jle
xchg
fwait
aam
js
jbe
cwtl
and
mov
fdivr
gs
stc
pusha
mov
addr16
sbb
imul
and
lds
cmpsb
jae
pop
xchg
out
aad
xchg
sub
and
add
repnz
jecxz
mov
mov
inc
xor
clc
jo
pop
adc
pusha
sbb
jo
sar
fnstcw
and
jne
ret
or
cld
jle
lock
test
sbb
mov
jbe
jo
mov
mov
cmp
sbb
sarb
mov
int
mov
pop
push
mov
stos
in
test
xchg
out
rcrb
and
cmpsb
clc
mov
lea
push
fildll
cmp
cmp
jle
adcb
jl
add
xchg
out
das
fcoml
add
movsbl
pop
ds
mov
pop
jl
hlt
inc
xchg
or
jb
sahf
mov
sub
push
roll
enter
fistps
mov
aaa
dec
aas
pop
aaa
shl
dec
add
in
cmc
cmp
jns
adcb
addr16
adc
in
adc
mov
jmp
fists
push
inc
inc
nop
movsl
adc
xchg
test
sub
push
pop
out
sub
cs
jp
cmp
sub
clc
test
mov
pop
mov
mov
loope
xor
pushf
daa
xchg
inc
enter
std
push
std
mov
adc
sbb
andl
cmpsb
loopne
jbe
jecxz
sahf
cld
mov
stos
add
mov
icebp
gs
lret
cmp
xchg
bound
pop
addr16
push
outsb
test
aas
repnz
stos
and
and
pop
mov
and
mov
shlb
or
mov
cs
fldcw
lods
sub
add
sub
addr16
push
push
mov
imul
std
popf
sub
or
dec
aaa
repz
aas
xchg
in
out
cltd
or
fcompl
pop
add
push
cmp
js
jl
repz
scas
add
sbb
xchg
sbb
lea
fucomp
das
and
lods
lret
xchg
ss
jb
cmp
push
push
mov
sub
xchg
xor
pop
xor
ljmp
testb
mov
ret
aaa
cmp
les
mov
push
lock
aad
outsb
scas
or
movsl
cld
fbstp
fisttpl
cmp
xor
pop
sbb
xchg
cmp
inc
mov
pop
dec
jno
fsubs
push
and
mov
call
cld
enter
jmp
fistpl
aas
test
shll
mov
jecxz
dec
jne
cmp
xchg
push
add
int
lock
sbbl
pop
xor
pop
mov
mov
push
sbb
dec
push
inc
insl
sti
xor
pop
mov
jo
mov
popa
stos
jge
lock
cmc
push
addr16
xor
andl
fcompl
daa
mov
push
loopne
and
add
out
jg
lahf
mov
add
std
jnp
pop
loop
imul
lcall
loop
call
mov
outsb
inc
mov
jp
test
ss
add
pushf
jo
notl
or
inc
xchg
imul
ret
lods
mov
js
ret
lds
lds
mov
xchg
or
icebp
xchg
sub
xchg
das
mov
and
pop
mov
jae
cmpsb
pop
fsub
xchg
inc
es
jns
dec
pusha
leave
addr16
pusha
adcl
bound
pop
loopne
mov
mov
dec
cmp
test
fwait
cli
cmpsb
inc
gs
fisttpl
xchg
ss
sbb
sub
aad
xor
inc
push
add
cs
and
sbb
sbb
sti
ret
lods
jecxz
cmp
mov
cltd
jno
fistl
test
mov
jno
mov
jne
adc
sub
jl
mov
lods
add
aam
push
push
mov
jg
ss
ret
rcl
xchg
aad
jne
sub
mov
lcall
inc
lcall
sbb
clc
pop
push
loopne
cmp
ret
xor
sbb
cmpsl
jo
repz
clc
adc
call
push
jge
adc
add
pop
xor
xor
mov
ficoml
jbe
stos
lock
push
das
mov
push
dec
mov
xor
daa
mov
jp
adc
movsl
int3
jns
dec
shl
cmc
mov
cmp
jge
jns
mov
cmpl
pushf
pop
or
loopne
fcomps
call
pusha
mov
lods
jnp
pushf
pop
iret
push
or
sub
popf
fimull
mov
aad
sbb
enter
fildll
fistpll
cmc
xchg
insb
iret
cmp
lret
dec
mov
mov
sbb
or
aas
test
cmp
popa
sub
pop
or
mov
mov
arpl
dec
xchg
shl
js
fistps
hlt
shrl
and
cmp
sub
cltd
add
xchg
sbb
arpl
clc
mov
ja
or
cmpsl
pop
push
int3
les
mov
jne
xchg
sbb
call
mov
sbb
call
dec
inc
outsb
out
push
lods
out
ret
movsb
aad
test
std
adc
mov
jae
sub
cmp
push
pop
xchg
mov
orb
jne
lahf
jb
loop
jb
leave
jg
jbe
rclb
adc
mov
adc
out
roll
decb
lea
rorb
push
push
mov
mov
sbb
inc
add
imul
leave
cwtl
mov
addr16
adc
mov
adc
addb
ret
fiaddl
inc
fidivrs
pop
fsubl
in
pusha
adc
add
lock
out
dec
out
shl
inc
push
inc
push
pop
scas
in
or
mov
jbe
xchg
fimull
faddp
xchg
andl
outsl
mov
xchg
lea
fxtract
fsubs
sub
mov
jb
jl
push
popa
sub
adc
jp
push
repz
frstor
js
pop
aam
jg
aam
or
dec
cmp
push
es
sub
dec
leave
lea
jmp
mov
push
mov
dec
das
push
mov
vcmpps
inc
sub
xor
pop
push
cmp
mov
cmc
push
repnz
mov
rcrb
aas
jnp
add
pop
cmp
xchg
inc
gs
push
push
adc
mov
mov
cs
push
cmp
pop
jecxz
xlat
xor
cmp
cmp
inc
add
and
add
cmpsl
clc
mov
inc
inc
sub
adc
insb
dec
test
jne
js
mov
lret
sub
push
and
and
insb
neg
sub
push
je
jns
subl
in
leave
mov
test
movsl
lods
icebp
xchg
cltd
movsb
pop
fsub
daa
in
mov
fldcw
arpl
loope
mov
in
sub
cmc
sbb
cmp
icebp
iret
and
sbb
jecxz
ret
mov
mov
lret
inc
mov
pusha
sub
add
mov
js
ret
push
lea
push
inc
jg
in
cli
push
sahf
sbb
or
test
data16
jno
mov
mov
icebp
sbb
xor
or
rcrl
xor
rcl
fistl
jle
pop
es
ret
arpl
hlt
cmp
mov
insb
xor
leave
fldt
inc
lods
adc
cwtl
push
in
pop
push
pop
mov
mov
mov
jl
xchg
cmp
xlat
jmp
lods
aaa
xchg
fldenv
xor
int3
cmpsb
pop
mov
mov
pop
fidivs
lods
imul
mov
dec
sti
in
and
pop
fcoms
cld
sbb
sbb
mov
sub
das
xchg
adc
push
stos
icebp
cmp
rol
loope
add
dec
xor
call
sub
cmp
cmpsl
adc
cmpl
or
push
adc
leave
hlt
mov
outsb
clc
pop
mov
out
loope
lods
xlat
mul
adc
jmp
cltd
insb
jecxz
dec
cmpsl
sbb
sub
sub
cmp
fcmovnu
adc
cmp
rorb
lods
negb
or
inc
pop
jge
movsb
mov
inc
lahf
dec
mulb
xor
das
inc
pop
daa
scas
push
mov
mov
xchg
xchg
dec
add
xlat
xor
dec
testb
cmp
jecxz
sub
mov
dec
xchg
pop
pop
mov
fwait
cs
mov
mov
dec
inc
push
mov
clc
cmpsb
rcrb
xchg
push
pop
cwtl
das
clc
aas
or
movsl
enter
es
das
aad
and
push
sub
aad
jae
rorl
sub
xorb
pushf
test
mov
cmp
mov
arpl
test
lods
mov
push
xor
cmpl
dec
jnp
mov
setle
inc
pop
add
leave
jo
fidivrs
ja
aam
sbb
idiv
jne
mov
stc
cs
mov
mov
mov
xchg
adc
sbb
pop
jo
mov
pop
mov
push
pop
dec
jl
test
cltd
enter
inc
mov
idivl
mov
es
outsl
arpl
into
adc
sbb
out
mov
call
add
mov
roll
sbb
sub
pop
cmp
lock
mov
test
repnz
je
sbb
and
rol
adc
ds
mov
and
fs
out
scas
mov
dec
xchg
hlt
lret
repz
dec
repnz
sub
adc
das
pop
loope
je
enter
push
pop
sub
mov
xchg
insl
sbb
lea
pop
add
shll
out
subl
sub
outsl
jp
jecxz
xchg
and
xchg
ret
stc
sbb
or
dec
aad
popf
icebp
sar
loop
push
cwtl
xlat
pop
adc
xorl
sub
aaa
mov
test
sub
fcmovnb
hlt
cltd
jnp
dec
js
pusha
push
dec
icebp
imul
aas
mov
jmp
pop
test
and
into
jae
push
dec
call
hlt
dec
jo
jl
subl
xlat
movsl
lock
test
test
jnp
xor
mov
adc
sti
repz
lret
mov
or
lret
imul
jno
push
xchg
das
push
xchg
imul
pop
mov
fmull
mov
jmp
sbb
ret
cmp
xchg
insb
out
adc
std
js
xor
cmpsb
jbe
jmp
jo
packsswb
in
test
xchg
mov
ja
ret
fdivrl
or
dec
daa
or
mov
adc
rcll
push
xor
call
xor
movq
xchg
adcl
std
and
lcall
outsb
mov
fsubl
jo
xor
sub
insb
adc
jl
xor
rcll
jmp
inc
cmc
fists
cmp
ja
and
adc
pushf
xor
adc
cmp
aad
repnz
or
push
dec
push
outsl
push
and
sub
mov
sar
or
orl
sub
ss
sbb
or
subl
daa
jp
ja
mov
lds
xchg
push
xchg
popl
out
into
mov
rol
insl
fwait
adc
inc
mov
mov
xor
jmp
gs
rcr
lds
mov
jg
mov
and
cld
subb
pusha
inc
jne
pop
mov
mov
neg
inc
mov
rcrl
fisubrl
sarl
push
test
mov
pushf
or
sbb
inc
pop
xor
cmpsb
pop
cmp
data16
adc
icebp
nop
lea
mov
fdiv
dec
pusha
sub
sbb
subb
lea
sub
jae
xor
mov
nop
xchg
mov
pop
cwtl
inc
jnp
loopne
je
dec
mov
fildll
sub
mov
scas
aam
out
stos
jp
xchg
insb
cmp
push
cmp
xor
cld
adc
jp
sub
push
xchg
xchg
test
pop
adc
xchg
sbb
ds
fs
lret
inc
xchg
and
xor
into
pop
or
lods
xor
jg
inc
and
pop
lea
push
xchg
adcl
add
cmp
lock
push
mov
sarb
shll
sub
loop
aas
jmp
xchg
sub
jno
sub
mov
pop
jmp
sub
pop
je
out
sbb
xchg
adc
xor
jp
push
rcrl
cmc
ljmp
mov
jge
sub
test
cs
add
test
push
or
mov
lahf
movswl
mov
or
jmp
fwait
jae
push
fs
dec
aaa
jo
in
push
movsl
cmpl
jecxz
add
lock
pop
lret
fadds
xchg
mov
aam
fistpll
in
clc
fs
mul
push
jp
cmpb
outsb
add
mov
daa
xlat
add
cli
ss
fstpt
dec
bound
add
negb
cmp
je
add
lret
add
scas
lds
mov
daa
pop
mov
dec
mov
add
adc
sub
notl
push
notl
shll
jo
aam
test
adc
scas
pushf
sbb
pop
fisubl
test
jmp
and
loopne
repnz
push
push
orl
into
mulb
rcrb
mov
ja
jmp
mov
pusha
jmp
mov
hlt
adc
cmp
lds
pushf
adc
jnp
call
nop
aas
mov
inc
repnz
scas
add
xchg
jns
push
or
mov
and
sub
cmpb
push
mov
pusha
out
sub
push
push
push
pusha
mov
mov
lea
stos
dec
test
mov
mov
sbb
cld
xchg
out
enter
imul
lcall
dec
sahf
cmp
rcll
xor
mov
xor
popf
pusha
or
scas
mov
enter
push
jb
xor
xchg
mov
imul
fnstsw
popa
addr16
dec
aam
shrb
je
imul
das
scas
xchg
cmp
mov
add
push
push
mov
pop
in
fs
idiv
aas
push
int
mov
pushf
push
int
scas
outsb
aam
cmc
aas
data16
insb
dec
dec
sub
or
mov
sbb
pushf
cwtl
mov
pop
test
mov
shrl
js
xor
insl
cmpsb
adc
divb
jo
je
lret
lcall
sbb
ret
push
in
adc
sub
xor
mov
outsb
push
cli
push
sub
pop
out
je
daa
xchg
adc
jge
adc
inc
aaa
jbe
stos
pop
mov
add
push
pop
xchg
push
dec
cld
pop
adc
jle
rorb
pop
sbbb
mov
inc
enter
lahf
dec
movsl
mov
sbb
or
or
sub
outsl
das
xchg
int3
jo
cmp
fwait
adc
aam
jno
pop
pop
pop
xor
or
inc
ret
xchg
in
ret
mov
adc
js
fcmovbe
dec
fwait
aad
and
decl
sbb
pop
xor
mov
test
imul
pop
inc
push
sub
sbb
adc
pop
in
add
in
mov
in
dec
cmp
inc
subl
or
pop
xor
jns
arpl
in
sub
insb
dec
data16
xchg
lret
push
jge
test
inc
out
loopne
ds
cmp
setge
and
rcr
iret
icebp
ficoml
inc
mov
std
lcall
jne
jae
inc
repz
sub
call
xchg
mov
out
xor
cli
js
test
loope
in
scas
cltd
les
sbb
and
xchg
dec
and
fiadds
sbb
sti
call
dec
mov
add
add
iret
dec
pop
cmp
cmp
ret
popa
loop
dec
ds
dec
mov
mov
mov
fidivl
out
or
movsl
pop
xlat
popf
in
pop
pcmpeqb
xchg
push
fs
fadds
sub
adc
faddl
pop
sub
or
mov
faddl
cli
xchg
mov
mov
mov
xor
scas
dec
pop
loop
cwtl
xor
inc
jno
dec
xor
jg
push
cmp
repz
enter
push
insl
mov
sbb
cs
xor
add
fprem
fimuls
mov
jae
popf
dec
roll
cmp
xor
sahf
addl
add
hlt
sbb
out
dec
insb
xchg
shlb
gs
arpl
rorb
pop
inc
mov
xor
xchg
stos
pop
push
add
inc
rcrl
test
out
cld
fistpll
add
sarl
dec
lds
lods
xchg
add
xor
stc
in
or
les
push
fwait
loopne
repz
in
jae
pop
addr16
ss
cmpsl
push
and
or
and
fstl
imul
rorl
mov
pop
ficomps
leave
lret
xchg
jbe
add
test
xorb
cmp
add
pushf
mov
cmpsb
insb
push
ds
daa
scas
mov
push
jb
jae
aad
xchg
sbbb
nop
shlb
lods
enter
xor
dec
shlb
addr16
mov
sbb
insl
jo
xor
mov
pop
mov
jbe
mov
add
cmp
sbbb
pop
sub
xor
xchg
push
movsl
mov
insl
jle
loop
and
icebp
outsb
adc
shl
dec
in
xchg
loopne
inc
cmp
pop
add
in
pop
pushf
aam
sub
add
out
call
xchg
pop
mov
repnz
ret
mov
jae
mov
mov
mov
imul
inc
xchg
inc
mov
pop
jns
pop
xchg
int
sbb
sahf
cltd
and
stos
mov
rol
out
stos
repz
push
iret
mov
add
dec
or
ret
push
mov
or
mov
jae
cmp
jnp
cmp
shrl
shlb
xor
data16
jne
ljmp
mov
in
mov
test
fimull
mov
jp
xor
and
inc
cmp
fnsave
shl
xor
loop
mov
pop
or
imul
fwait
sti
cmpsb
add
test
in
sbb
add
clc
adc
sahf
shll
mov
adc
mov
int3
and
adc
popa
in
add
xchg
mulb
xchg
jno
in
inc
dec
cmp
xchg
xor
cli
xor
sbb
inc
and
adc
leave
push
push
inc
test
cmp
pop
add
insl
shlb
mov
lods
ss
outsl
inc
push
ret
pushl
sbb
mov
sbb
stos
jl
repnz
popa
enter
sub
cmc
pop
insl
mov
decl
hlt
pop
jnp
xchg
in
mov
jl
jnp
push
lea
add
sbb
pop
pop
sbb
xchg
lock
mov
lret
ja
push
in
cmpsl
push
mov
jae
pop
add
or
outsl
cmp
mov
vandnps
outsb
add
or
sbb
imul
mov
or
jle
mov
in
and
out
jmp
mov
test
sbb
xchg
lea
nop
insb
sub
xchg
cmp
or
imul
add
adcb
fwait
push
jno
cmp
lcall
sbb
pop
or
stc
mov
lods
addr16
scas
add
stos
xor
jge
sbbl
loop
jp
aad
sbb
addl
pop
xchg
in
push
inc
rolb
inc
jb
mov
pop
lcall
xchg
or
add
adc
out
pop
sub
test
arpl
jo
das
mov
xor
dec
mov
ljmp
push
sti
aad
je
and
mov
add
mov
add
push
or
testl
push
aaa
adc
and
sbb
or
jne
push
push
xor
loopne
out
jno
mov
adc
xchg
sbb
jecxz
stc
and
jge
insb
inc
and
or
in
lea
push
out
sub
insl
int3
outsl
inc
stos
inc
and
sub
outsb
xor
push
fnstsw
pop
adc
into
shl
push
cmpl
inc
shrl
add
cmpl
loope
popa
pop
and
xchg
push
push
lcall
cmp
cs
movsl
inc
cmp
shll
movsb
pop
loopne
jno
icebp
pop
dec
push
lea
sub
mov
fstp
add
movsl
inc
or
mov
or
js
outsl
cmp
mov
add
scas
cmp
cmp
cld
sub
test
inc
into
pusha
outsb
push
cmp
mov
test
jmp
pop
mov
call
stos
mov
mov
cld
xor
or
lret
sub
sub
add
repnz
sub
add
xchg
or
imul
loop
sti
and
clc
mov
xor
mov
lcall
hlt
cmpsl
mov
or
mov
push
bound
xchg
xchg
dec
jmp
push
jmp
mov
test
nop
xor
and
mov
lock
sti
scas
mov
mov
jns
jne
rcr
cmp
or
lock
fnsave
lcall
or
push
dec
ljmp
imul
mov
cmc
roll
mov
or
sahf
sub
outsl
in
test
sbb
add
jg
out
test
xchg
push
in
xchg
sti
jl
cmp
inc
sarb
jmp
pop
sub
mov
cs
jecxz
leave
outsl
nop
scas
ficoms
jae
xorl
xchg
loope
mov
cmp
movsl
and
or
mov
cmpsb
adc
push
int
add
cld
imul
shrl
xor
inc
mov
das
clc
sbb
push
inc
int3
mov
xlat
ljmp
shll
xor
push
cmc
push
loop
lcall
je
arpl
daa
ljmp
fisubrl
test
adc
ljmp
rcr
push
xchg
jbe
in
sub
lcall
xchg
push
lret
adcl
mov
jle
leave
or
cmp
cwtl
fildll
mov
cmp
or
push
xorl
add
cmp
sti
sbb
movsb
mov
mov
enter
in
add
es
xchg
fimull
xor
aam
sbb
pop
shll
out
js
scas
mov
cltd
add
push
jno
mov
dec
xchg
xchg
cmpsb
out
push
sbb
sub
lahf
sub
int3
inc
xchg
repnz
cmpsb
inc
pop
ja
push
rcll
jb
pop
adc
addb
shrb
cld
je
lea
add
fsub
sbb
xchg
push
and
sti
ja
lds
xchg
cmp
movsl
sti
daa
cs
imul
jnp
sbb
inc
ret
cmp
xor
jo
inc
push
popf
xlat
mov
jnp
rorl
or
xchg
test
test
xor
adc
sub
mov
jb
sbb
je
xor
mov
outsl
pop
xchg
sub
cmp
xor
dec
jnp
call
xchg
shr
sub
sub
nop
bound
loop
mov
mov
cwtl
cmp
xor
push
sbb
dec
pop
inc
dec
sub
nop
arpl
jge
inc
mov
lahf
shll
push
mov
into
pusha
xchg
push
lret
int
push
pop
in
fdivs
jns
pop
rcr
mov
ffree
imulb
sub
jno
pusha
cmp
add
ret
mov
mov
cwtl
lret
mov
xor
xor
sub
rcll
jb
sbb
rcrb
imul
push
jns
jne
sbbb
mov
and
pop
out
out
adcl
add
sbb
mov
ret
in
std
imul
test
mov
dec
shll
das
lods
xor
adc
les
xchg
cmpsb
sbb
inc
lahf
inc
cmpsb
jle
js
movsl
pusha
dec
jle
movsb
add
in
aad
loope
mov
sbb
xchg
dec
cmp
jns
enter
arpl
js
xchg
pop
mov
adc
idivl
rorb
cmp
jmp
push
cmp
xchg
dec
mov
lock
or
scas
orb
xor
sbb
arpl
pop
and
adc
fnstcw
mov
add
and
sbb
dec
pop
jp
or
sbb
incb
int3
push
adc
mov
add
dec
popl
push
scas
and
repz
jmp
fwait
xchg
push
arpl
das
pusha
aaa
idivl
aaa
jae
adc
sti
rclb
fs
jecxz
add
scas
ja
mov
add
inc
jp
mov
loop
jmp
fcompl
mov
insl
pop
and
pop
es
mov
repnz
adc
lods
or
lret
gs
in
fwait
or
xchg
sub
push
jnp
outsb
adc
cmc
movsb
dec
mov
push
cli
inc
push
aam
add
out
mov
hlt
stos
rol
xor
imul
sub
aam
mov
test
pop
ds
xchg
or
ret
add
mov
imul
mov
sbb
jl
sbb
in
dec
enter
mov
inc
jo
xor
and
and
or
and
mov
pop
push
pop
pop
push
in
inc
push
xor
dec
loopne
imul
xor
mov
out
adc
aad
xor
push
es
js
sbb
mov
pusha
fbld
sbb
fidivrl
xchg
sahf
xchg
cmc
pop
mov
insl
or
jo
jbe
mov
and
add
les
into
jge
aam
cld
outsb
mov
dec
aas
mov
mov
aaa
xor
dec
push
icebp
jl
scas
je
mov
ficompl
std
and
stos
mov
stos
stc
movsl
push
ss
mov
adc
test
dec
adc
setle
xor
cmp
fsub
fisubrs
mov
nop
sub
enter
jns
shrl
sbb
xlat
mov
push
mov
push
scas
pop
int3
inc
push
xchg
dec
xor
dec
xchg
dec
loopne
mov
mov
mov
lods
xchg
loope
insb
add
xchg
pop
xchg
jge
ret
loop
js
jbe
lret
and
test
xchg
push
mov
jge
stos
stos
out
mov
mov
xor
fnsave
mov
data16
adc
sbb
out
sbb
insb
call
dec
push
pop
dec
movsl
lds
repz
sbb
sbb
jp
lea
mov
int
mov
repz
in
xor
inc
add
les
pop
fwait
dec
cld
or
xchg
sub
sar
mov
cltd
test
mov
fists
sbb
fdivl
imul
cmp
mov
loop
cmpsl
lods
xchg
or
cmc
test
movsb
int3
mov
jg
or
push
cmpl
insb
cltd
pop
hlt
push
pop
inc
test
sahf
std
xchg
hlt
mov
test
rcll
into
adc
or
inc
pop
or
jae
ficoms
jge
lahf
sbb
xchg
mov
push
pop
movsl
sbb
jmp
scas
loopne
dec
jno
popf
jp
add
or
test
dec
mov
sub
sahf
xchg
adcl
jnp
es
enter
mov
jnp
cwtl
scas
jb
jne
fsubr
jae
divps
sub
pop
lods
sbb
mov
inc
jmp
sub
pop
stc
mov
push
ss
jp
nop
daa
pusha
add
and
pop
xchg
sbb
push
or
mov
mov
and
add
mov
dec
loope
jo
insb
jbe
les
push
fdivrl
push
sbb
push
scas
sarb
cmp
cmp
inc
fiaddl
ds
inc
inc
adc
mov
out
inc
std
sbb
mov
cmc
outsb
xor
loopne
js
aas
lds
test
daa
inc
cmp
shlb
mov
add
dec
push
add
add
nop/reserved
push
pop
push
outsw
daa
gs
mov
sub
stc
mov
lods
mov
xchg
fisttpl
cmp
loope
adc
enter
prefetchwt1
insb
daa
hlt
shlb
les
pop
imul
in
sub
fs
and
lahf
lret
sbbb
or
ret
jo
jbe
lcall
adc
divb
scas
sbb
push
mov
add
addr16
xchg
aad
xchg
mov
add
mov
mov
jne
mov
ljmp
push
xchg
jle
push
push
or
mov
inc
out
aad
cmp
stc
inc
pop
std
pop
inc
lret
xor
pop
dec
scas
add
into
dec
jnp
pop
fdiv
das
repz
repz
arpl
pop
in
add
ss
or
pop
bound
mov
pop
mov
xchg
les
adc
or
je
call
dec
xchg
aas
aam
mov
jo
inc
aad
mov
sub
or
data16
mov
push
pop
fidivrs
mov
fcoml
test
aas
and
test
je
fidivl
mov
mov
jge
out
add
loopne
sub
or
fcomps
cmp
cmp
imul
dec
pop
dec
enter
jnp
shlb
xchg
adc
dec
xchg
pop
add
fildll
mov
das
in
and
or
sub
mov
lahf
pop
xchg
int3
mov
pushf
jmp
es
cmp
enter
fists
sbb
int3
test
push
ss
cmp
lcall
scas
cmp
mov
aam
sahf
sarl
int
cmpb
jns
and
pop
fiaddl
daa
ficomps
jl
push
mov
adc
mov
xchg
lds
pop
fnstenv
adc
test
sub
jbe
movsl
xchg
loope
push
cmp
add
pop
add
inc
sahf
and
mov
stos
xchg
jl
lahf
aad
or
xor
xchg
or
sbb
stos
xor
adc
das
cld
in
lcall
xchg
sbb
xor
mov
xchg
pop
cs
test
push
fwait
js
mov
adc
orb
or
xchg
mov
pusha
mov
fbstp
mov
imul
pop
ffreep
push
pop
aad
adc
dec
mov
iret
lods
insl
fisubs
fdivrl
add
icebp
xchg
push
ja
frstor
andl
inc
jmp
and
je
sub
adc
jns
sti
shlb
inc
add
gs
mov
jno
pop
scas
pop
stos
fstpl
dec
and
out
adc
xorl
inc
sbb
xor
cmpb
daa
fnstsw
lods
xchg
mov
and
rclb
popf
push
movsb
out
xor
les
repz
movsb
cmp
stc
inc
sub
ds
add
negb
mov
or
fisubrl
push
and
stos
lcall
sub
xchg
fistpl
push
loop
stos
sti
jecxz
fnstenv
xor
push
lret
jmp
cltd
fcomp
ljmp
mov
mov
iret
and
popf
fs
into
pop
xchg
movsb
lock
cli
repz
movsb
push
fcoms
pop
scas
jl
adc
or
pop
lahf
adc
les
mov
ret
dec
cmp
das
xchg
in
test
mov
popf
cmc
loope
fwait
lcall
mov
sub
daa
fwait
ds
pop
sbb
jl
cmp
loop
imul
sub
pop
xor
fimuls
das
out
xor
xor
fwait
sub
inc
jo
inc
jno
cmpsb
cmp
icebp
aaa
xor
inc
xchg
stc
add
ljmp
stc
cmc
inc
xchg
add
stos
add
add
and
push
jmp
test
fsubrs
movsl
es
fcmovnbe
loop
lods
pop
and
xchg
jb,pt
push
xor
fimuls
aas
mov
sarb
xchg
addr16
dec
aam
rol
pop
push
mov
in
shlb
lahf
mov
fcomps
idivb
int
pop
sahf
das
lea
pop
iret
mov
leave
mov
fmuls
add
insb
enter
lret
jge
or
xchg
ret
pop
jecxz
or
out
mov
xlat
fadds
repz
xchg
sti
out
pop
jl
push
push
sbb
add
lret
movsl
adc
pusha
shrb
pop
outsb
xbegin
rcr
mov
add
dec
fsubs
shr
test
into
sub
stos
adc
mov
out
scas
test
imul
mov
inc
push
pop
mov
push
mov
sub
cmp
mov
out
or
xchg
mov
mov
in
dec
mov
xchg
xchg
ret
je
adc
add
js
mov
add
sub
pop
push
faddp
jle
icebp
in
add
mov
imul
subb
dec
hlt
movsl
fstpt
int3
pop
cmp
addr16
test
jb
mov
add
add
xchg
sbb
in
movaps
mov
pushf
push
cmpsl
dec
imul
and
cli
xor
sbb
push
mov
scas
cmp
or
lea
cltd
lret
push
std
and
and
sbb
push
aaa
fneni(8087
mov
lods
pop
xchg
and
or
repnz
rcrb
push
jnp
outsl
mov
popf
push
addl
mull
xchg
cmp
inc
jne
jo
mov
mov
pop
jns
cld
pop
mov
enter
stc
mov
lcall
loope
lahf
inc
das
stos
insb
xchg
std
adc
popf
pop
jp
pop
pop
fisttpl
call
jge
loope
mov
cwtl
mov
into
shlb
xchg
lods
lock
cmpsl
adc
cli
push
cmpsb
jns
pop
push
icebp
stos
and
mov
ficomps
subl
mov
or
or
in
sbb
adc
mov
xlat
and
sbb
cmp
roll
or
arpl
mov
xorb
scas
mov
or
mov
push
jg
fnsave
lcall
pop
lcall
js
push
faddl
lret
cmp
mov
sbb
rcrl
repnz
xchg
add
sub
pop
lret
js
add
jns
movsl
ds
xlat
xor
enter
jne
xlat
cwtl
loope
xchg
cmp
sbb
int3
in
mov
push
orb
jne
subb
mov
xchg
pusha
add
nop
mov
cs
sbb
push
cmp
fwait
cld
mov
scas
push
inc
push
jle
jp
test
add
lcall
les
pop
andb
aaa
push
ja
repnz
icebp
pop
sub
inc
int3
out
xor
scas
cmp
lds
xor
out
mov
adc
inc
bound
lret
popf
mov
sbbl
aaa
jo
pop
mov
incb
cwtl
loop
cltd
cmp
push
idivl
das
push
dec
pop
adc
mov
mov
xchg
jno
out
in
insl
clc
testb
stos
arpl
out
ret
dec
lods
into
cmpsb
xchg
rclb
and
jmp
cmp
mov
mov
data16
cmpsl
int
dec
adc
jge
jecxz
das
pop
and
data16
in
scas
jns
imul
es
movsb
jge
xchg
dec
cmpsl
lds
xor
sbb
lret
scas
in
sbb
std
and
bound
movsl
mov
push
lds
mov
adc
fdivrl
xor
sahf
dec
lcall
movl
inc
mov
fcmovnbe
pop
pop
aaa
imul
mov
sbb
pop
add
aas
mov
in
xchg
rclb
lods
adcb
shll
notl
dec
stos
dec
mov
add
cmp
adc
gs
je
lods
jle
push
cli
xchg
rorb
lret
orw
push
testl
pop
inc
nop
fstps
mov
mov
mov
test
adc
cwtl
push
mov
cmpb
dec
inc
push
cmp
rorb
cltd
cmpsl
jnp
or
push
daa
pop
test
jne
or
fwait
loop
test
push
add
xchg
pushf
shlb
jbe
or
lahf
mov
lock
outsl
and
pop
sub
dec
inc
jmp
adc
inc
lds
repz
push
xchg
push
fldenv
pop
pminub
add
cltd
mov
pop
mov
cmpsl
lcall
mov
cmp
fsub
dec
insl
jbe
pop
ret
pop
jae
jl
ja
xor
popf
pop
mov
mull
jo
out
jmp
ds
cmp
punpckhbw
ja
push
out
pop
scas
inc
rcll
mov
loop
in
push
call
out
jl
repnz
icebp
shll
mov
mov
mov
xchg
xchg
dec
aas
mov
cmp
xchg
cmp
xor
cmp
mov
mov
mov
and
in
sbb
insb
fisttpll
clc
xor
in
in
fld1
push
xor
lods
jg
pusha
inc
sahf
stc
pop
mov
mov
mulb
add
fists
cwtl
and
adc
xlat
push
clc
scas
ficomps
pop
dec
mov
popa
lds
in
inc
test
clc
fucomip
gs
mov
add
push
pop
lret
std
fwait
arpl
inc
cmpsl
dec
cli
test
icebp
testb
mov
push
and
sahf
rclb
ret
inc
cmpsb
adc
lods
aaa
es
pop
pop
jp
lods
int3
sahf
fisubs
rorl
cmp
pushf
sbb
ss
push
add
notl
mov
insl
out
mov
test
iret
jp
js
aad
lds
scas
ds
dec
lahf
in
cld
and
pop
fistpl
mov
int3
mov
pop
mov
inc
iret
sti
repnz
loopne
cli
fnstenv
popf
pop
cmp
add
aaa
sub
filds
dec
push
xor
or
xor
loop
jmp
adc
nop
push
sbb
out
pop
pop
je
std
push
xchg
push
mov
loopne
xor
leave
dec
or
or
repz
fs
orb
push
dec
mov
inc
or
lea
push
out
adc
pop
or
sbb
mov
adc
push
mov
lods
mov
sti
test
out
sbb
sbb
mov
popf
ljmp
mov
add
push
inc
sarl
xchg
scas
sbb
pop
aas
out
addr16
pop
je
add
subb
mov
das
fiaddl
xchg
push
jmp
mov
icebp
ds
cmp
dec
and
daa
aas
mov
mov
imul
jl
xchg
push
mov
xchg
repz
out
arpl
mov
add
aad
out
inc
addr16
sti
iret
cli
out
iretw
insl
jmp
sub
test
lret
in
and
test
xor
sarl
pop
popf
int
jnp
adc
mov
mov
rcrb
jnp
push
insl
add
out
jbe
and
das
rcrb
sbb
inc
and
jecxz
fnstenv
cltd
push
inc
dec
inc
repnz
adc
dec
xor
iret
pop
shl
pop
jge
sub
jg
cmp
idivl
or
lret
rcrb
push
jg
orl
push
cmp
movsb
subl
sbb
stos
jl
xor
mov
ljmp
inc
mov
mov
loopw
test
icebp
push
push
pushf
dec
pop
add
inc
jb
and
adc
outsb
mov
rol
bts
jge
mov
inc
cmpsl
mov
cld
scas
xor
in
call
mov
sti
adc
lahf
jbe
mov
outsl
pop
fcomps
jp
loopne
sbb
or
or
sbb
cltd
pop
outsl
js
or
add
les
movsb
fucom
dec
sbb
fistl
shrl
cmp
mov
cmc
jne
mov
and
dec
scas
cld
mov
popf
jmp
xor
incl
insl
arpl
outsl
inc
loopne
popa
negb
xchg
pop
lods
or
pop
cmpsl
leave
in
clc
mov
jmp
mov
in
fsub
xlat
mov
inc
mov
pusha
sub
inc
pusha
sub
out
push
jmp
lret
mov
imul
cmp
iret
rorl
repnz
xbegin
adc
push
inc
ret
xchg
cli
fdivl
pop
pop
pop
sti
ljmp
dec
aad
pushf
push
ds
mov
aaa
jno
pop
outsb
arpl
pushf
pop
push
pop
add
xchg
sbb
aas
nop
dec
jnp
scas
inc
cmp
cmp
imull
and
sub
mov
cs
sub
and
jge
mov
dec
lcall
arpl
mov
hlt
xchg
mov
jmp
inc
or
push
rcrl
jg
add
repnz
push
pop
je
ret
sti
push
xchg
and
add
fcomip
pop
shlb
fdivr
mov
mov
repnz
mov
push
outsl
pop
adc
ficoms
fidivs
sub
cwtl
push
lidtl
push
mov
push
imul
scas
rorl
movsb
mov
cltd
lock
jb
push
repnz
pushf
jmp
xchg
repz
fdivrl
jmp
add
mov
or
cs
bound
dec
insb
or
inc
push
dec
int
xchg
inc
out
test
leave
xchg
test
xchg
mov
cld
xor
and
lods
lret
orl
jecxz
clc
insl
mov
je
cmp
inc
lods
push
inc
jo
push
test
jmp
inc
push
jge
cli
push
sbb
push
jecxz
pop
jno
cmpsl
lods
scas
imul
mov
dec
inc
sub
add
sbb
fs
ljmp
or
sbb
push
mov
cld
xor
adc
push
adc
iret
xor
sti
and
outsb
mov
mov
in
inc
leave
outsl
inc
call
jns
vmaxps
mov
fs
test
fimull
inc
and
fimuls
fmuls
sub
mov
hlt
and
xor
test
jge
decb
pop
sbb
pop
inc
cli
addps
aad
xchg
xor
outsb
jp
arpl
std
and
xor
lahf
jns
fcmovne
push
loope
jb
shrl
mov
je
outsb
ljmp
xor
push
sub
jp
and
jge
inc
jmp
stc
lcall
fxch
inc
pop
cs
loope
mov
jns
inc
dec
inc
mov
rcrb
lods
jbe
cs
xchg
popf
sbb
nop
mov
sub
jnp
cmp
cltd
mov
mov
movsl
inc
es
pop
xchg
dec
das
sub
push
add
scas
shll
movsb
and
adc
mov
out
push
xlat
jo
jbe
into
pop
dec
cmp
adc
mov
or
add
stos
outsl
pop
jg
cltd
xor
or
jg
pusha
cmpsl
jge,pn
jbe
frstor
ss
rclb
adc
mov
or
and
pop
jp
jns
or
dec
push
addl
sarl
jbe
push
cltd
hlt
pusha
mov
adc
dec
stc
cmp
xchg
sub
loopne
lock
mov
in
jne
pusha
aas
in
imulb
cld
jp
dec
adc
leave
inc
hlt
fs
adc
repz
push
orl
adc
ret
sbbb
adc
lds
mov
cmp
fidivs
sbb
dec
cli
scas
loop
enter
dec
or
stos
mov
mov
pop
mov
add
mov
pop
inc
ret
test
push
stc
movsb
xor
scas
scas
adc
fisttps
mov
sbb
xchg
or
dec
lret
std
shll
pusha
lods
lcall
adc
repnz
pop
cltd
ds
cmpsl
sbb
xor
jo
mov
sub
inc
or
cld
xorb
rcrl
lods
pop
mov
push
addr16
clc
fnstcw
cwtl
decb
jae
stos
fst
jno
ficomps
and
jp
adc
popf
retw
mov
out
mov
mov
jge
scas
mov
add
jmp
jne
aam
xchg
test
push
js
mov
cmc
mov
sti
push
cwtl
pop
lcall
data16
clc
cmc
xchg
int
xchg
adc
in
pop
cmp
shll
mov
jl
inc
or
fstl
sbb
shll
nop
pop
mov
pop
mov
adc
inc
add
into
mov
in
loop
lds
aad
scas
sbb
xchg
cmpsb
jge
int3
push
ret
sub
jns
mov
lock
pushf
stc
pop
dec
cmp
jno
ret
lock
scas
fsubl
subb
mov
stos
test
lods
mov
scas
sbb
in
add
dec
arpl
outsl
stos
adc
fdivr
lea
dec
clc
mov
xchg
call
add
sbb
mov
mov
mov
mov
mov
push
jmp
ret
out
lock
mov
adc
adc
pushf
or
cmp
cmpsl
movl
push
add
mov
pop
inc
ret
pop
xor
add
orb
add
daa
jecxz
inc
fnstcw
xchg
inc
scas
jle
div
mov
daa
xlat
adc
push
test
sub
js
mov
jl
inc
mov
mov
inc
fnstenv
fs
add
ljmp
insl
pop
mov
arpl
pop
dec
out
xor
int
mov
push
mov
adc
adc
push
stos
pushf
lock
mov
shlb
push
cmp
test
sbb
int
mov
jg
cmp
sub
inc
es
cmp
ficompl
pop
incb
aad
cmp
ret
sub
or
in
sub
data16
lahf
scas
into
adc
dec
data16
mov
call
stos
jnp
stos
adc
inc
dec
out
push
lcall
clc
mov
sub
mov
inc
and
push
mov
cmp
lods
sti
dec
aas
pop
test
js
pop
sub
mov
lock
nop
add
pop
repz
lock
in
mov
loop
xor
mov
or
daa
jmp
mov
xor
lahf
sbb
adcb
rorb
xor
lahf
add
int
outsb
clc
jnp
xlat
inc
lods
push
jo
mov
pop
add
popa
adc
sbb
jle
cld
inc
gs
xchg
lea
push
inc
iret
filds
data16
movsl
scas
mov
mov
mov
inc
xor
out
cli
lods
rcr
cmp
js
std
stc
lds
lcall
inc
xlat
add
scas
fdivrs
int3
in
jbe
jge
pop
jbe
fdivs
pushf
mov
iret
sbb
and
and
xchg
or
dec
hlt
stos
shlb
push
dec
sbb
lods
add
flds
addb
or
sbb
and
dec
cmp
mov
xchg
cld
mov
xchg
test
push
aam
ljmp
adc
add
mov
fs
shll
lods
sub
push
xlat
jge
and
ds
xchg
add
and
in
addr16
sub
xchg
loopne
jae
cmp
adc
push
pop
pusha
lcall
js
xchg
mov
sub
cli
add
push
out
out
cmpsl
mov
stc
ret
xchg
cmp
imul
sbb
push
call
mov
mov
cltd
cmc
subl
mov
lahf
mov
mov
mov
mov
mov
cmp
rcl
andb
jno
movsl
xor
add
lahf
in
lahf
add
sbb
adc
mov
push
in
imul
sub
decb
pop
xor
xchg
cmc
stos
shll
out
aam
sub
enter
mov
xchg
add
ja
cwtl
mov
sarl
js
sub
rorl
mov
and
mov
outsl
pop
mov
rolb
test
pop
and
sti
loopne
pop
pop
inc
pop
stos
pop
sub
repz
js
ret
or
xlat
and
fs
int3
rcl
enter
mov
mov
push
fs
bound
movsl
dec
sahf
pop
loopne
imul
ljmp
cs
test
lret
mov
gs
push
lods
adc
cmpsl
inc
and
inc
push
into
xchg
daa
sub
add
adc
jnp
mov
xchg
mov
mov
test
jo
fsubl
lea
inc
mov
fisttps
ss
cmp
xchg
les
adc
inc
add
adc
mov
aad
sbb
or
cmp
cmp
push
sbb
dec
lret
jns
out
dec
inc
add
iret
lcall
or
xchg
jnp
gs
or
cmpsl
mov
leave
dec
dec
push
test
test
push
dec
jmp
test
xor
cmp
push
or
movsl
xor
lods
fbstp
fs
add
aam
jge
jmp
mov
pushf
jl
dec
cmp
pop
out
imul
adc
xor
pop
or
std
ss
adc
imull
jno
sub
push
js
sub
mov
pop
push
add
xor
push
adc
pop
aam
mov
movsb
xor
dec
in
out
stc
sbb
mov
ja
mov
sub
mov
test
pop
mov
aam
mov
mov
sahf
add
ret
nop
cmpsl
or
lods
mov
lret
les
popf
fcomps
push
mov
jp
bound
scas
mov
mov
shll
push
push
and
adc
cmp
mov
inc
push
jl
mov
xor
test
jbe
rclb
add
inc
cmc
dec
cltd
std
adc
iret
xchg
call
and
enter
addr16
pop
push
sti
adcb
push
aam
xchg
mov
imul
shl
loopne
inc
std
cltd
arpl
pop
stc
cmp
push
mov
xor
adc
mov
fildll
shrb
xor
mov
xchg
xor
xor
shr
movsb
pop
add
lret
ljmp
arpl
xchg
push
fucomi
jno
imul
out
dec
repz
dec
cli
jae
mov
sbb
lahf
push
push
xchg
xchg
sbb
and
arpl
sbb
cltd
std
cs
repz
bound
xor
jb
loope
add
ljmp
stos
bound
in
mov
arpl
xchg
ljmp
or
pop
pop
pop
or
imul
and
outsb
xchg
leave
jecxz
addr16
stos
repnz
pop
fdivrs
pop
rol
test
ljmp
xor
sar
sbb
loope
jno
mov
adc
pop
dec
sbb
jb
dec
adc
mov
jecxz
repnz
inc
push
mov
aam
fcmovbe
xchg
aad
popa
mov
mov
adc
mov
xchg
add
adc
test
rol
test
imul
shll
in
push
or
xor
and
push
sub
outsl
in
inc
add
mov
jl
jle
movsl
pop
cmp
push
std
push
add
adc
fiaddl
add
aas
sbb
xor
sub
ss
sti
jo
jg
pop
lcall
dec
cmp
lods
into
callw
les
negb
pop
and
pop
out
adc
shl
scas
clc
jge
dec
push
xchg
jne
iret
les
pop
ret
mov
test
aad
loop
dec
lods
mov
mov
xor
cmp
hlt
add
push
fbstp
test
rcll
in
xor
outsl
aam
inc
pop
sub
and
outsb
jle
xchg
xchg
adc
mov
push
cmove
pushf
mov
lock
pop
test
dec
sub
jl
pop
mov
rcl
int
fiaddl
push
ss
loop
sub
add
sbbb
sub
fstl
stos
test
mov
dec
and
ret
sub
pop
mov
daa
outsl
aaa
movsl
aad
popf
xchg
fiaddl
fcompl
out
jecxz
ficoms
scas
dec
or
dec
pop
mov
sarb
pop
cmp
fistpll
jg
and
sbb
jl
xchg
jb
jbe
mov
out
xchg
xlat
out
push
inc
adc
push
dec
nop
dec
sbb
mov
out
and
xor
fisttpll
sbb
test
repz
dec
push
out
int
pop
into
mov
xchg
inc
and
insb
popf
xor
lahf
mov
enter
andl
cmp
push
cld
test
and
fiadds
ds
lods
add
adc
sub
jge
dec
mov
shl
lods
popa
mov
push
int3
push
inc
insl
ljmp
inc
dec
push
jne
sbb
cmp
and
push
test
loope
outsb
sbb
mov
add
cwtl
hlt
insl
xlat
push
je
or
lods
mov
lock
mov
cmp
testl
rorb
addr16
xlat
fmulp
std
cwtl
outsb
lahf
fs
imul
fwait
in
hlt
cmp
push
out
push
xor
cmp
arpl
mov
mov
scas
push
ja
fcoml
xchg
jmp
ljmp
sbb
dec
cmpsl
insb
mov
shl
sub
mov
xlat
mov
sti
daa
and
inc
fldenv
cmc
cmp
fwait
mov
xchg
or
xchg
idivl
loopne
outsb
and
ret
pop
sahf
mov
pop
in
jno
les
inc
jecxz
ss
or
int
cli
adcl
dec
jno
das
test
mov
adc
ss
cwtl
mov
lods
addb
cld
out
movb
jp
adc
add
cmp
sbbb
pop
das
scas
push
and
out
fdivr
cld
daa
mov
icebp
cmp
jb
sub
mov
in
sar
jae
push
fisubrs
addr16
and
das
out
mov
or
jl
movl
push
mulb
and
test
or
xor
popa
push
es
dec
fcoms
mov
shrl
mov
add
cli
xor
and
insl
loop
mov
xchg
adc
xchg
sub
or
out
cs
inc
in
push
jmp
sub
xchg
mov
es
fucom
out
xor
test
inc
fs
out
call
pop
stos
sahf
and
xchg
lods
ljmp
and
xchg
jmp
mov
adc
dec
sahf
scas
sub
loop
das
mov
xor
pop
mov
cmp
in
pop
lar
sahf
sub
inc
cmc
jo
jno
mov
int
sbbb
pop
xchg
sbb
and
ficompl
js
jb
jno
faddp
bound
ret
fwait
jo
mov
adcl
mov
pop
in
mov
jbe
rcr
cmp
lea
add
mov
mov
push
jo
mov
pop
cmp
add
sbb
enter
call
inc
sbb
addr16
shrb
mov
pop
sub
pusha
xor
mov
lods
mov
shl
xchg
mov
sbb
movsb
leave
or
xchg
mov
push
cmp
cmc
mov
cmp
cmp
pushf
cmp
and
jge
mov
cmpsb
push
in
push
test
jne
mov
xor
lret
cmc
or
inc
and
leave
scas
sub
rorb
shll
lods
popf
cmpsb
jecxz
mov
sbbb
xchg
push
hlt
loop
dec
xor
sarl
and
pop
sti
mov
cmpsb
roll
andb
push
xchg
out
cmpsb
jmp
xor
adc
mov
dec
shr
mov
pushf
sbb
js
pop
sub
dec
or
add
into
xlat
push
bound
dec
clc
fimuls
loopne
repz
xchg
or
ds
jo
add
test
ret
call
stc
hlt
jge
mov
sub
outsl
mov
xchg
stc
rol
sbb
add
and
mov
fisubl
mov
fs
push
dec
jnp
je
ret
sub
pop
jbe
stos
outsl
inc
sbbl
mov
fwait
pop
call
push
add
sbbb
loopne
std
add
xor
lods
mov
xchg
imul
sbb
ret
out
pop
pcmpeqb
xchg
into
stos
pop
push
repz
into
jno
sti
mov
mov
arpl
and
in
jle
push
mov
pop
les
cltd
or
in
jmp
into
cmp
push
jno
push
mov
push
int3
jge
popf
xor
xchg
add
push
mov
mov
xchg
mov
mov
in
push
jns
hlt
daa
outsl
mov
loop
jecxz
in
inc
push
and
mov
pop
cmp
fwait
cmp
shrb
mov
jg
into
js
xchg
movsl
cmc
pusha
push
in
pop
divb
mov
mov
mov
push
in
or
jl
int
xchg
lahf
scas
test
fildl
int
outsl
mov
push
enter
jo
jne
sarl
xchg
sbb
mov
sub
adc
cmpb
push
xchg
fadds
frstor
out
mov
jg
popa
jne
pop
xor
test
xchg
sbb
push
shrb
jo
mov
xchg
cmpl
or
out
xchg
xor
ja
pop
push
sbb
mov
sarb
pop
inc
les
sub
mov
sbb
pcmpeqw
mov
mov
lods
pushf
jmp
std
add
call
sahf
xchg
insb
andl
push
pushf
or
inc
outsl
outsb
add
and
lock
aas
fsubrp
std
adc
inc
pop
xchg
iret
cmpsb
push
lcall
scas
adc
cmp
cmp
lahf
jne,pn
jns
jae
xchg
lret
loopne
cs
sub
out
clc
call
imull
adcl
aaa
decl
jmp
mov
cwtl
pusha
sub
sbb
sub
or
test
or
and
insl
sbb
and
sbb
ds
repnz
jl
xchg
adc
iret
pop
ret
in
dec
and
push
xor
cld
mov
lock
stos
lea
out
and
xchg
jmp
aas
pop
enter
rclb
or
inc
inc
mov
mov
sbb
pop
mov
sarl
sub
leave
xor
aam
mov
in
rol
mov
mov
lret
pop
mov
rorl
les
rcrb
jmp
dec
inc
and
push
pusha
mov
or
add
dec
je
sahf
cwtl
push
insl
ljmp
push
cs
lret
aad
xor
or
mov
cmpsl
xchg
nop
ficomps
push
sti
pop
mov
stos
pop
fsubrs
cwtl
ja
pop
psrlw
and
push
ss
xor
cmpsb
loop
aam
jg
dec
inc
push
add
aas
mov
dec
xchg
aad
mov
movsl
pop
mov
dec
xor
push
mov
es
pop
fwait
pop
stos
lds
inc
movsl
push
enter
mov
dec
push
push
jg
fldl
dec
push
rclb
xchg
lods
inc
in
adc
daa
pop
dec
lahf
insl
popf
rcrl
cmp
xchg
ds
insb
aam
inc
pop
subb
jb
dec
mov
repz
add
push
mov
sbb
leave
bound
or
xor
xor
cmp
push
cmp
nop
add
rorb
or
pusha
adc
addr16
pop
outsb
mov
push
pop
mov
int3
mov
fstpt
mov
dec
int3
adc
or
mov
adc
popf
mov
adc
lea
push
xchg
add
add
repnz
pop
cmp
push
mov
fcomi
pusha
aam
mov
push
inc
sub
mov
icebp
int3
jne
fidivrs
leave
xor
test
pop
mov
sbb
lahf
xchg
dec
pop
mov
stc
push
lods
ss
dec
dec
adc
sbb
popf
jo
pop
adc
fisubl
sbb
hlt
and
pop
push
lret
adc
lea
dec
pop
repnz
lahf
movl
mov
outsb
or
sub
add
mov
push
push
jo
test
mov
xchg
lahf
dec
push
ds
ret
jae
test
mov
add
or
out
jl
or
insb
sbb
leave
and
dec
sub
lea
xchg
rcrl
pop
xchg
adc
mov
xor
insl
test
movsb
je
sbb
out
loop
stos
dec
jl
and
aam
outsb
mov
mov
dec
out
lahf
data16
leave
test
xor
sub
push
xor
pop
jo
lods
lock
jle
inc
xchg
jle
je
je
pop
icebp
mov
xor
mov
sub
mov
push
jecxz
or
pop
mov
inc
enter
sbb
jnp
pop
and
ss
aas
mov
inc
sti
sbb
inc
idivl
inc
inc
xor
es
popf
xor
ja
inc
push
mov
mov
into
sbbb
add
lock
aaa
and
int3
das
popf
cwtl
fldenv
jp
pop
jb
add
or
dec
dec
adc
pop
mov
cltd
xlat
xchg
fdiv
cmp
in
pop
sbb
mov
aam
ja
sti
sub
fildl
stc
mov
leave
add
insl
add
sub
push
mov
push
test
xlat
mov
add
lds
aam
ret
adc
mov
xlat
mov
pop
dec
rorb
imull
cmp
mulb
cmc
push
mov
add
xchg
add
out
mov
inc
insb
mov
cmp
inc
cltd
adc
mov
je
xor
add
in
fists
test
aam
inc
inc
fs
in
push
mov
mov
sub
add
fimull
dec
std
lea
fdiv
and
mov
call
js
adc
sbb
pop
cs
insb
xchg
fs
std
mov
xlat
xor
mov
xchg
push
imul
gs
ljmp
pop
mov
jmp
push
cltd
aas
jo
jne
or
jp
cltd
xchg
jmp
lret
mov
fnstsw
hlt
or
adc
fistpll
sub
add
dec
test
xchg
push
scas
daa
push
sub
mov
mov
xor
fcompl
clc
das
insl
and
cmp
lea
jge
add
inc
cld
lea
cs
mov
shrl
sub
jmp
pop
jno
test
mov
js
cmp
pop
and
call
shll
scas
xchg
sbb
aam
lods
sbb
sub
cld
mov
dec
push
stos
jl
sbb
iret
icebp
lea
addr16
int3
push
inc
or
das
jmp
repz
or
push
sub
add
jp
cmc
dec
xor
orl
movsb
sahf
fnstsw
or
in
and
pop
ljmp
cs
jmp
jne
or
test
je
ret
cmpsb
dec
stos
cmpsl
leave
add
mov
xor
cmp
mov
stos
cld
addr16
sub
cld
push
mov
jb
dec
xor
mov
orl
loop
test
mov
nop
mov
adc
adc
mov
xchg
out
pop
or
jge
aas
ror
ret
test
xchg
shll
jge
cmpsl
add
jp
jb
cmp
inc
wbinvd
shlb
inc
js
scas
mov
cmp
xchg
fsubs
jb
iret
pusha
sbb
jmp
pop
outsl
into
jmp
pop
in
inc
xor
inc
sub
add
mov
pop
or
pop
dec
je
fwait
xor
lods
iret
add
data16
and
inc
ds
and
repnz
cmpsb
negb
push
lods
mov
cmpsl
lcall
das
mov
std
adc
push
jp
rcll
jbe
xlat
push
in
rorl
ja
push
mov
scas
mul
and
stos
hlt
jb
cmp
push
xchg
mov
lods
test
xor
adc
cmc
cmp
jmp
roll
imul
sub
xlat
dec
shll
pushf
or
lods
sub
das
sti
xor
cmp
pop
test
int
ljmp
jae
decl
aas
bound
dec
ja
cmpsl
lock
mov
push
cmpsl
mov
mov
pop
in
push
adc
and
dec
jnp
js
inc
or
and
and
scas
cmpsl
xchg
jo
pushw
xor
add
je
hlt
scas
mov
insb
lret
test
pop
lds
insb
iret
popa
xchg
xlat
push
cmpsl
pop
sbb
testb
loopne
clc
xchg
push
das
imull
lea
ret
ret
jecxz
test
scas
bound
ljmp
imul
pop
pop
jbe
push
jp
or
shll
in
mov
mov
pushf
ljmp
pop
out
or
mov
outsl
add
or
inc
das
push
cld
sub
pop
mov
pop
movsb
sbb
movsb
sbb
test
add
cmp
adc
ds
mov
ja
push
test
shlb
xchg
mov
push
arpl
and
stc
outsb
int3
xor
jle
lret
orl
pop
sbb
fldcw
jl,pn
mov
inc
addr16
out
ret
sub
add
outsl
clc
pop
xchg
dec
mov
add
xchg
roll
stc
mov
mov
lea
and
xchg
and
test
and
mov
inc
or
data16
jo
aaa
lret
icebp
sbb
inc
scas
jne
jns
insb
inc
cmp
inc
aam
or
arpl
int3
movsb
cwtl
mov
outsl
cmpsl
jecxz
out
in
incb
aad
ljmp
xchg
mov
xchg
ds
mov
and
lods
push
lcall
jns
gs
cmc
lods
and
pushl
rcll
ja
or
popf
ret
add
dec
mov
push
push
ret
adc
jo
bound
sbb
stos
push
enter
popf
in
mov
mov
push
push
aam
rorl
mov
adc
mov
or
sub
jecxz
test
leave
xchg
cmp
jl
sub
cmp
or
ret
sbb
or
test
push
inc
repz
sub
or
xchg
add
scas
xor
int3
push
pop
add
lods
jnp
aam
pop
and
push
out
ret
sub
fucomp
mov
loope
dec
loopne
inc
add
test
lea
jns
sahf
icebp
pushf
rorb
ficoms
mov
test
cmp
sbb
lock
jmp
lods
daa
outsb
dec
xchg
mov
rcrl
arpl
sub
std
in
fsubs
push
adc
push
sbb
pushf
pop
negl
sahf
pop
push
push
or
int3
int
andl
cmp
push
cmpsb
mov
rcl
jg
outsl
pop
ljmp
hlt
jle
fstpt
inc
and
icebp
in
dec
or
xor
enter
push
test
and
in
mov
ljmp
hlt
loop
ja
daa
ficomps
or
xchg
inc
mov
fistps
das
pusha
pusha
bound
adc
jl
push
je
pop
es
jle
push
jecxz
aas
add
aaa
mov
inc
mov
repz
lahf
stc
in
inc
adc
push
popf
xlat
lcall
mov
push
lock
cltd
push
adc
pop
int
and
push
mov
pop
mov
cltd
roll
mov
leave
clc
rep
in
lea
lret
stos
dec
loop
adc
out
lret
and
jge
add
pop
in
mov
or
in
or
mov
popa
ret
pushl
ljmp
leave
insb
daa
jmp
sarl
movsl
aaa
loope
push
fmuls
int3
iret
dec
movsb
mov
adc
es
aas
xor
cmpsb
aad
nop
iret
inc
push
jne
mov
cmp
lret
sahf
les
bound
mov
or
push
lea
out
loope
rcl
stos
xchg
jp
int3
rep
addl
cs
cmp
and
sarl
xchg
pop
ljmp
push
loope
gs
dec
cld
fldt
push
ds
adc
sbb
lods
push
insl
xchg
xchg
hlt
mov
xchg
inc
es
xor
hlt
mov
adc
lahf
mov
xlat
jl
sar
inc
in
divb
xor
test
sub
mov
pop
jae
fists
inc
out
pop
cs
outsl
dec
sbb
enter
int3
imul
or
pop
and
adc
or
add
sbb
mov
cld
je
cmpsl
cs
jno
or
cmp
loop
pop
add
scas
mov
std
sbb
js
es
mov
call
cmp
pop
adc
mov
popa
push
add
jo
jl
push
inc
vmovsd
adc
ss
sarl
aas
sub
cmp
xlat
stos
mov
scas
xor
mov
fwait
pop
add
add
aas
mov
xor
les
pop
add
fsubr
dec
dec
xor
outsb
aam
imul
call
add
pop
dec
adc
addr16
mov
dec
fcompl
xchg
dec
sti
shlb
ret
and
jge
pop
fstps
pop
movsl
js
popa
jl
test
push
cmpb
scas
push
pop
jne
dec
pop
push
insb
xchg
jmp
lret
lock
decl
dec
imul
mov
and
mov
sti
jnp
xor
dec
push
inc
cmp
sub
xchg
xor
popf
into
imul
loop
mov
scas
idivl
stos
lds
add
loope
popa
mov
xchg
cmp
sbb
push
inc
test
lods
fs
dec
jbe
pop
fsub
pop
sbb
aaa
or
cmp
ja
lahf
jmp
mov
and
add
out
nop
aas
jb
shlb
push
mov
testb
or
es
rcrl
fimuls
inc
pop
out
push
sarb
movsl
mov
jno
sub
lret
dec
pop
sub
mov
arpl
cwtl
in
push
pop
aas
and
pop
clc
mov
insl
sub
ret
xor
mov
ret
cwtl
xchg
push
jg
addl
out
repnz
out
ljmp
pop
aas
inc
ja
mov
pop
xor
fimull
mov
pop
mov
jl
xchg
data16
mov
cli
push
cmp
test
xor
add
adc
movsb
push
push
pop
and
adc
rcl
cmp
fdiv
insb
data16
fldcw
or
fsub
pop
sbb
dec
cwtl
rolb
pop
push
iret
and
out
pop
adc
std
arpl
jp
inc
mov
pop
mov
in
fbstp
dec
int3
adc
shll
cmp
adc
mov
mov
add
inc
js
ret
cmpsb
jbe
sub
fs
add
push
test
js
fsubs
ja
adc
scas
int
imul
lea
jge
push
int
and
pop
fldl
jl
fistl
imul
cmp
push
push
lea
orl
cwtl
cmp
sbb
pop
xor
mov
sbb
lods
insl
adc
xchg
inc
out
push
mov
imulb
push
push
shll
mov
lds
not
ja
decb
stos
cld
mov
adcl
lds
add
out
inc
xor
sub
in
jo
lds
and
fnstenv
xchg
mov
cmp
xchg
xchg
test
mov
jbe
cmp
or
shl
jbe
cmpl
inc
or
pop
rcll
aam
out
jecxz
insb
ljmp
add
push
or
mov
ficomps
push
jnp
in
out
push
or
xor
push
or
cmpsw
pop
mov
or
or
clc
mov
jmp
testb
pop
xchg
int
das
lcall
adc
add
mov
idivl
aam
jp
mov
out
inc
push
jo
sub
add
sub
fildll
add
jl
hlt
mov
jbe
sbbl
dec
addr16
mov
std
add
shrl
push
int3
xchg
rcrb
ljmp
jno
jmp
les
add
dec
outsb
repz
daa
push
xor
insb
leave
jge
xchg
mov
add
push
loopne
mov
outsb
out
adc
push
pop
and
adc
or
jb
in
shll
fsubrs
mov
or
rorl
jmp
jae
clc
push
inc
int3
inc
sub
mov
mov
mov
test
inc
push
int3
pop
mov
cmpsb
or
gs
pop
cmpl
subb
fimuls
or
test
add
bound
andb
sub
xchg
pop
pop
cmp
jns
cmp
jne
nop
in
shll
sti
dec
pop
int
das
into
mov
add
iret
sub
jl
out
mov
xchg
push
daa
sti
arpl
aaa
adc
add
scas
mov
addb
stos
lock
mov
mov
sub
je
dec
aam
and
ficoml
mov
dec
les
lcall
imul
stos
xor
fs
stos
in
dec
push
cmp
cmp
mov
dec
pop
int
insb
mov
imul
pop
and
jge
push
lea
popf
mov
jmp
mov
fdivrl
mov
add
add
pop
test
cmp
mov
ljmp
fistpl
out
xor
cli
in
cmpsb
movsb
mov
push
mov
stos
js
pusha
jne
add
into
dec
icebp
test
or
fldcw
jns
jbe
repnz
int
nop
pop
mov
push
push
notb
push
shrl
or
mov
cmp
and
rcrl
add
out
sub
adc
lock
xchg
leave
ret
pop
xchg
inc
add
add
dec
outsb
add
pop
mov
dec
fbstp
popa
sub
mov
scas
sbb
inc
jge
sbb
sub
xor
sub
pop
dec
push
mov
pop
ljmp
test
xor
push
jecxz
in
mov
mov
out
pop
and
adcl
fcompl
xchg
xchg
mov
bound
stos
lods
lcall
sbb
lds
or
test
inc
stos
mov
mov
scas
aas
test
push
push
sub
jp
scas
adc
and
add
pop
push
incl
xchg
dec
add
xchg
lock
add
test
aaa
mov
fimuls
mov
call
inc
subb
mov
mov
rcll
scas
jp
pop
gs
mov
sar
mov
mov
cmpsl
cmpsb
not
push
lret
mov
sbb
cmp
fdivp
mov
loope
cs
mov
mov
sbb
js
mov
xor
mov
jno
mov
pop
outsb
mov
lret
xor
adc
dec
mov
out
cwtl
int3
mov
sub
and
add
adc
rcrl
fcmovnu
addr16
daa
lret
fsubrl
mov
pop
popa
xor
jg
push
aaa
adc
dec
cmp
outsl
mov
lea
test
lea
dec
ss
xchg
aad
shrl
bound
test
and
int
xchg
and
fstl
jbe
inc
cmpsl
mov
jne
pop
xor
fs
inc
out
stos
add
std
jb
enter
inc
out
or
xchg
jo,pt
in
jp
ret
xor
pop
mov
movsb
sub
pop
cmp
outsl
in
or
jnp
and
outsb
push
or
xchg
js
jns
nop
mov
pusha
test
jbe
cli
cld
jg
lock
stc
xor
mov
ret
leave
pusha
outsb
shlb
sbb
out
repz
mov
in
std
pusha
fld
repz
cs
test
in
pop
popa
aam
add
and
out
and
and
mov
dec
into
test
pusha
das
lcall
add
jae
sub
in
xlat
sub
xlat
pushf
push
push
add
rcll
sti
shl
cs
jl
insb
mov
mov
sbb
inc
sbb
pop
mov
xorb
mov
imul
jnp
mov
jp
inc
xchg
dec
enter
pop
ja
inc
mov
es
inc
shlb
fwait
sar
xchg
push
stos
sti
rcll
mov
xchg
insl
hlt
mov
add
ret
shrl
inc
pop
mov
and
sub
cmp
pop
push
pop
mov
jne
jge
cmp
loopne
test
mov
inc
xor
in
or
pusha
fs
out
jge
enter
mov
xor
xchg
dec
xchg
adc
xor
andl
inc
loopne
mov
xchg
std
xchg
inc
imul
lds
aam
fwait
or
test
rep
dec
out
mov
mov
out
jg
add
mov
sbb
inc
mov
mov
push
das
dec
rol
push
out
or
adc
jns
inc
xchg
jb
cmp
ljmp
repz
aas
xchg
inc
add
inc
jnp
cld
sbb
cmpl
dec
xchg
adc
lret
adc
scas
subl
mov
or
add
clc
mov
xchg
fsubrl
pop
push
ss
push
cmp
jecxz
jge
lods
std
mov
cmp
es
lcall
les
repz
mov
shrb
sti
lds
sub
enter
push
xchg
dec
jnp
dec
sarl
aaa
add
push
sub
inc
cmp
xchg
and
daa
aad
das
fld
stc
mov
inc
popa
xor
mov
es
arpl
insb
xor
adc
aaa
rorl
cmp
in
or
mov
pop
mov
je
xor
sub
lret
jmp
addr16
mov
enter
xlat
jecxz
iret
jmp
jge
add
fdivs
sahf
cmpsl
or
into
mov
bound
pop
cmp
addr16
test
add
test
sbb
loope
lods
in
mov
sahf
nop
sbb
xchg
mov
cmpl
xchg
add
push
popa
dec
sub
add
adc
pop
sub
outsl
aaa
push
sbb
ret
pushf
scas
in
sub
jb
adc
int
ffree
ja
xchg
push
scas
ret
pop
and
sbb
lds
popf
in
in
shl
xor
inc
scas
lods
das
cmp
sub
out
add
or
push
pop
dec
pop
jb
xor
adc
dec
push
mov
add
dec
in
addl
jnp
add
cmp
int
cmp
pop
or
mov
cltd
arpl
lret
add
mov
je
aad
push
mov
test
mov
cld
int
ljmp
jo
xorb
mov
je
daa
je
fstps
xchg
xchg
sahf
cli
mov
mov
push
incl
fs
jge
sub
or
test
fs
lea
push
rcl
out
arpl
cmp
andb
mov
fimuls
cmp
jle
cli
jg
popa
popf
dec
in
or
popa
loopne
movsl
pop
sbb
push
xor
cmp
pop
push
out
and
pusha
xor
fisubs
data16
adc
pop
out
sbb
jbe
int
sbb
cmpsl
push
rcll
xor
sbb
dec
sbb
xchg
add
sbb
pop
pusha
cwtl
insl
in
mov
jg
rcrl
fldenv
dec
cmp
stc
inc
xchg
scas
out
fsts
pmaddwd
ficoml
jne
xor
je
jge
push
sbb
insl
jae
fsubrl
cmp
addr16
cld
cmpsl
adc
repnz
inc
xor
mov
movsb
dec
and
shlb
inc
lea
roll
jle
jo
imul
or
adc
in
imul
fbstp
push
lds
js
shrb
jge
push
push
mov
clc
mov
les
or
jno
dec
iret
xlat
ret
lea
pop
pop
push
xor
sub
adc
xchg
rclb
mov
mov
dec
lea
orb
and
pop
repz
clc
lds
jmp
or
out
pushf
pop
xchg
clc
sbb
pop
aaa
add
sti
stos
addl
cmp
add
jb
adc
jecxz
jl
push
repz
fisubrs
dec
ljmp
push
dec
mov
push
mov
pop
jle
cmpsl
js
mov
pop
ret
jmp
data16
inc
or
adc
add
cmp
push
aaa
hlt
movsb
sub
out
cmp
and
jb
fisttpll
mov
aaa
outsb
mov
enter
bound
jmp
or
xchg
dec
repz
stos
push
cwtl
jne
sbb
or
or
push
int3
sbb
jae
pop
lret
lret
mov
shrb
mov
gs
push
or
arpl
sti
mov
imul
xchg
out
inc
test
mov
fdivrp
ffree
cmp
jmp
adc
mov
mov
mov
out
sub
test
stc
adc
jmp
pushf
repz
cmp
cltd
mov
popa
dec
mov
leave
add
sbb
sub
cmc
mov
es
dec
mov
mov
push
mov
in
xchg
test
nop
xor
adc
sbb
push
sbb
js
jbe
xor
sub
enter
int
sar
xor
mov
jecxz
add
mov
or
add
sbb
test
dec
xchg
pop
ja
push
inc
aad
out
mov
or
das
out
ja
aam
add
clc
enter
xchg
add
xorb
inc
inc
inc
inc
dec
leave
push
push
mov
roll
push
outsl
adc
insl
aam
mov
mov
scas
outsl
cwtl
sbb
loop
pop
mov
xchg
inc
stos
cmp
leave
cmpsl
in
adc
in
fs
ds
xchg
dec
dec
rol
add
dec
or
out
aam
xor
cmpsb
and
daa
inc
sbb
lahf
les
jns
scas
sbb
std
leave
lcall
int3
hlt
nop
adc
in
notb
fwait
add
lods
lods
xchg
mov
xor
dec
bnd
or
in
adc
or
and
mov
stc
mov
mov
decl
cwtl
jl
ret
neg
sbb
fidivrl
out
sbb
or
dec
notl
xor
aaa
pop
lahf
mov
mov
ds
pop
scas
xor
sub
pop
loop
push
xlat
dec
sbb
jb
push
iret
pushf
movsl
fucomi
out
or
insl
je
out
pmuludq
mov
push
jecxz
dec
sbb
mov
icebp
fldenv
cmp
sub
sbb
inc
adc
xchg
lock
inc
mov
cmpb
and
sbb
mov
fwait
outsb
push
add
mov
fistl
push
aam
or
inc
push
repz
dec
hlt
xlat
leave
xchg
add
xchg
or
leave
imul
lods
roll
cmc
cmpsb
sub
cmpsl
mov
mov
lods
test
ja
in
notl
push
in
les
and
add
mov
mov
mov
cmp
push
dec
mov
les
lret
jle
pushf
or
les
jnp
into
dec
jg
in
add
jae
testl
repz
mov
out
mov
push
inc
sbb
aam
jne
jbe
mov
cmp
sbb
push
jecxz
repz
jb
dec
test
xchg
sub
or
mov
or
jge
mov
loop
loope
xchg
push
popf
lock
sub
aad
push
ja
and
xor
add
dec
ret
outsl
call
pop
mov
and
or
mov
orb
add
cmc
int3
sub
dec
test
call
inc
mov
sbb
sbb
lea
push
nop
jne
and
pop
filds
or
movl
in
sub
sbb
lock
lods
dec
aad
sub
arpl
in
aaa
and
adc
mov
pop
fwait
xor
cmp
mov
pop
mov
pop
xchg
xor
clc
hlt
in
cli
out
lret
cmp
mov
addb
or
jns
cmpsl
ljmp
push
sub
in
xchg
data16
mov
out
inc
xlat
push
adc
mov
aas
loope
nop
xor
test
mov
sti
rcrl
lock
lods
les
add
mov
mov
rcrb
sbb
stos
outsb
mov
clc
movsb
and
sbb
dec
xor
ret
enter
xchg
jmp
sbb
lea
mov
imul
into
cmp
stc
and
and
sub
or
aam
inc
jns
and
inc
scas
cmpsl
or
pop
addps
lcall
sbb
lret
xchg
test
jnp
dec
cmpsl
scas
push
leave
addr16
mov
push
movsl
into
movl
es
ljmp
test
xor
sub
jl
cmc
mov
dec
int3
jno
pop
xchg
sub
cmp
insl
cmp
pop
pop
notb
lds
xor
mov
lahf
push
xor
fcomps
xlat
mov
cmc
popa
push
leave
adc
cmp
js
out
iret
ss
inc
sbb
adc
das
cmp
pop
scas
jno
add
cmp
es
aaa
std
popf
push
das
pop
mov
sbb
mov
and
mov
movb
stos
adc
dec
repz
sbb
jmp
adc
mov
pop
rcrl
push
lods
lds
xchg
or
jl
fnstenv
loopne
pop
mov
and
addr16
lahf
imul
sub
push
movsb
jbe
fcmovnbe
mov
leave
cwtl
cmpsl
sub
mov
jmp
or
xchg
or
int3
jecxz
sbb
addr16
insb
lcall
pop
mov
jle
lds
jae
sub
sub
fxch
lods
cmpsb
es
mov
outsb
inc
inc
stos
mov
cld
jo
push
push
pop
sbb
lods
adc
adc
lahf
jns
out
fcoms
shrl
sub
mov
mov
push
es
mov
pop
mov
jge
out
sbb
int
push
lcall
cwtl
lock
insl
outsb
out
icebp
clc
iret
and
in
xor
add
mov
outsb
adc
fisubs
in
xor
mov
hlt
pop
insl
jecxz
inc
mov
cmp
int3
stos
stos
stc
adc
gs
cmp
cld
xchg
ret
faddl
pop
mov
inc
insl
fsubs
or
sarb
sbbb
movsl
in
lahf
popa
insb
mov
push
mov
imul
push
aas
and
add
pop
dec
push
iret
xor
imull
xchg
inc
add
sub
hlt
imul
xchg
mov
sbb
mov
loope
repz
rcrb
sahf
test
inc
clc
or
xor
xor
inc
jge
js
scas
cwtl
and
les
inc
inc
das
adc
ljmp
addr16
jmp
lock
ds
int3
outsl
daa
addl
sub
mov
inc
sbb
sbb
and
mov
imul
imul
xchg
pop
push
add
aas
dec
pop
mov
add
dec
enter
push
es
push
out
sarb
aas
addr16
out
ror
mov
stos
hlt
cmp
xor
sti
xor
shrb
and
jo
pop
cmc
jno
lods
xlat
outsl
ds
cmpsl
sub
loopne
mull
fmuls
mov
xor
aad
inc
add
adc
dec
cmp
mov
ret
into
mov
popf
sub
mov
push
fnsave
loope
mov
push
xorb
repnz
ds
sti
lds
lea
sub
xchg
fdivrp
push
mov
daa
stc
push
ljmp
je
add
xchg
pop
fsub
jbe
sbb
je
mov
ss
arpl
cmp
mov
fcompl
jne
shlb
jecxz
mov
and
xchg
jg
cmc
out
dec
jo
nop
cmp
pmuludq
pop
and
and
add
push
imul
adc
ret
mov
lret
dec
in
push
adc
sub
cwtl
mov
jo
add
mov
jns
cli
data16
out
push
dec
jns
dec
and
pop
adc
inc
jmp
pop
xor
int3
inc
mov
mov
sub
mov
subb
xchg
sub
sub
inc
sub
shlb
pushf
mov
mov
iret
addr16
clc
and
mov
mov
cmpsb
adc
add
sbb
fucompp
push
xchg
push
push
lods
inc
jno
mov
jo
dec
jmp
std
dec
ds
mov
shll
jnp
adc
mov
lock
push
nop
xor
pop
bswap
push
stc
sbb
cmpsl
clc
jns
dec
stos
pusha
lret
out
stos
push
mov
jecxz
push
sarl
sub
leave
adc
mov
pop
stc
das
lds
sub
fdivrl
stos
stos
inc
lcall
mov
insb
cmp
dec
rcll
mov
push
and
sarb
xchg
or
ret
ja
pop
pop
sbb
repnz
shld
xlat
ljmp
ret
js
hlt
mov
cmp
push
mov
xor
cmp
cld
call
ror
pop
sahf
xchg
imul
sub
mov
mov
pop
push
clc
cmp
push
mov
pop
fs
add
divl
mov
pop
cld
in
xor
into
mov
enter
lcall
add
les
ljmp
sarl
out
gs
inc
mov
call
xchg
xchg
data16
fisttpl
inc
push
xlat
idivl
pop
push
sti
in
mov
bound
fstps
inc
xchg
pusha
dec
xchg
xchg
es
movsb
xchg
push
pop
repz
in
mov
lcall
lods
mov
gs
jns
jnp
xchg
xor
pop
pop
sbb
out
test
cmpsl
mov
or
inc
out
or
repz
add
mov
in
xchg
icebp
or
daa
in
cs
pop
cltd
cmp
sahf
pop
and
mov
mov
xchg
xchg
out
cmc
mov
das
loope
jle
dec
jno
daa
xor
jg
xchg
pop
test
js
cmp
es
pop
add
imul
iret
inc
push
pop
movsl
jmp
cmp
lahf
stos
js
fs
mov
add
or
xor
cltd
pop
incb
scas
pop
fistps
insb
sahf
sbb
xchg
xlat
nop
add
lods
jo
sub
lds
int
cmp
cmpsb
in
aas
push
lea
sahf
sbb
mov
xchg
xchg
add
cmp
cld
add
sbb
out
xor
xor
out
loope
ret
fwait
xchg
cmp
bound
das
in
push
mov
and
pop
lret
add
add
xlat
push
cmc
pop
es
je
stos
sub
fisubrs
mov
pop
mov
sbb
pushw
xor
sub
cltd
inc
addr16
or
fldenv
push
push
or
repnz
in
aam
pop
divl
dec
inc
lea
aaa
mov
add
sbb
jle
je
aam
xor
mov
sbb
push
lcall
dec
sub
push
movsl
iret
mov
jae
xchg
xchg
daa
test
adc
lahf
leave
mov
push
xchg
enter
pop
sub
lea
add
inc
mov
push
mov
sub
push
fsubrl
mov
mov
add
pop
jne
and
cmpsl
gs
nop
push
push
mov
aas
test
push
jge
fwait
in
and
adc
dec
jbe
stos
xor
xor
push
popf
xchg
pop
adc
leave
fsubr
insl
fimull
sub
les
cmpsb
scas
cmc
xor
xchg
aas
insl
mov
addr16
clc
mov
pop
les
mov
insl
push
pop
std
add
iret
cmp
call
dec
dec
mull
cmc
rcll
add
addr16
or
data16
sub
xchg
in
mov
mov
into
sbb
xor
lea
test
mov
or
repnz
repz
ds
inc
popf
inc
inc
add
mov
movsbl
mov
sub
fcomps
imul
cmpl
mov
fs
dec
lea
in
push
cmp
push
push
sti
push
sub
sbb
and
jp
subl
push
mov
fsub
cmp
les
xor
out
ljmp
daa
jno
mov
inc
pop
and
imul
push
dec
mov
dec
clc
das
es
xchg
pop
sbb
jg
sbb
repnz
daa
xchg
dec
scas
xor
jl
jbe
adc
out
cwtl
insl
mov
inc
xchg
fmulp
inc
ljmp
xor
push
test
jl
sbb
xchg
push
mov
arpl
push
clc
adc
insb
jg
and
outsb
xchg
aaa
mov
mov
shl
push
stc
xchg
cmp
mov
cld
add
sub
add
cli
pop
movsb
ja
push
push
sub
and
clc
sub
push
push
or
int3
popa
adcb
lcall
mov
out
sub
addr16
mov
pop
jp
xchg
pop
jl
fsubl
fcmovnbe
dec
pusha
adc
mov
sbb
inc
sbb
into
sub
jp
sub
push
xor
iret
or
inc
loope
and
dec
mov
ljmp
pop
mov
out
outsl
push
mov
ds
outsl
inc
cmpb
addb
push
sub
cmc
push
sbb
clc
insl
loop
out
out
jbe
sbb
push
popf
sub
popfw
ljmp
notb
jecxz
mov
mov
xor
movsl
cld
jo
xchg
int3
sub
imul
and
movsl
sbb
mov
cmp
mov
sub
sbb
and
test
sub
xorb
sahf
inc
mov
stos
sbb
pusha
das
jl
hlt
xchg
test
sub
mov
mov
pop
xor
inc
pushf
xchg
and
inc
inc
push
dec
push
pop
xchg
jbe
push
mov
inc
in
jnp
leave
mov
cmpsb
filds
sti
test
jns
enter
xor
push
mov
test
inc
push
aad
in
out
ja
cmp
jge
shl
sti
pop
jno
xor
out
pop
clc
lods
sub
mov
movsl
lcall
mov
lret
jle
push
or
insb
aas
cs
in
sbb
pop
cltd
jmp
sbb
sbb
xor
jbe
orl
push
sub
in
clc
jae
sti
gs
out
nop
xchg
xchg
insl
into
sbb
fcom
jne
xor
mov
push
shrl
fimuls
stos
aam
fcompl
sbb
imul
cmpsb
jno
pop
cmc
in
test
fists
sub
lcall
out
stos
xor
xchg
cmp
push
and
test
or
sub
js
loopne
inc
xchg
lods
sub
and
sub
adc
push
mov
aas
inc
xchg
sub
mov
popa
add
gs
xor
pop
add
scas
push
imul
xor
iret
mov
sbb
pop
xor
push
adc
sub
ljmp
ficoml
or
iret
xchg
imul
ja
mov
mov
mov
inc
push
int
mov
cmp
js
adc
loopne
mov
inc
fstps
out
mov
dec
xor
push
loopne
loope
call
rcl
repz
push
xchg
lods
leave
adc
out
cmpsb
scas
loopne
lods
mov
jg
mov
pop
ss
imul
out
push
push
xchg
mov
shrl
pop
in
adc
xorb
and
hlt
sbb
cmc
nop
aad
lcall
mov
jb
adc
mov
outsb
and
lock
rcrl
pusha
sahf
pop
push
hlt
xchg
andl
sbb
or
fs
dec
pushf
das
js
push
stos
mov
dec
pop
outsl
or
mov
int3
cwtl
lret
in
les
dec
xchg
xlat
iret
and
test
xchg
scas
loopne
mov
les
popa
cwtl
and
push
test
cld
inc
xchg
outsl
stc
jecxz
rorb
xchg
push
sub
push
rcr
jne
stc
aaa
in
push
xor
fldt
jecxz
jne
mov
mov
cmp
inc
sbb
aad
popa
ja
test
dec
xor
movsb
xor
std
sub
roll
lock
jns
mov
jle
insl
inc
xchg
mov
mov
cltd
cmpsb
nop
pop
js
lods
lds
cld
inc
push
push
mov
jge
mov
roll
pop
movsb
or
cmp
jmp
into
pop
insl
out
ljmp
idivl
mov
into
cmp
dec
daa
adc
and
je
cmp
stos
out
and
sbb
clc
cmc
sarl
lahf
mov
xlat
xchg
imul
mov
shl
lea
push
call
add
ret
sub
cltd
stc
mov
xor
lahf
int3
xchg
cli
cld
test
sub
cmpsb
xor
aam
je
dec
lret
arpl
fsubl
pop
lds
jo
sbbb
clc
sarb
add
int
test
cwtl
push
leave
lret
je
cmp
lahf
cli
movb
inc
pop
mov
cmp
inc
aad
addb
mov
xchg
sbb
cmpb
test
repnz
mov
adc
sar
iret
xchg
sti
xchg
or
xlat
js
shll
sub
push
push
cmp
jmp
jbe
pop
das
test
fisubs
dec
pop
imul
mov
xchg
imul
and
jge
frstor
cmp
in
or
ljmp
stos
mov
xchg
or
xchg
popf
andl
lahf
mov
jecxz
les
cmp
mov
cmp
dec
pop
mov
mov
das
data16
dec
testl
sti
pop
fiaddl
sbb
lock
lret
dec
test
clc
mov
andl
and
inc
push
inc
cmp
addb
iret
push
xchg
ret
popf
jmp
lods
jmp
mov
out
mov
mov
push
je
cmc
notb
mov
mov
mov
inc
push
jge
movsl
push
sub
sub
rcl
sbb
imul
add
shlb
or
pop
sub
cwtl
int
mov
sarl
dec
cmp
mov
enter
mov
bound
popa
xor
fisubrl
or
dec
popf
arpl
xchg
stos
inc
mov
filds
xchg
mov
in
divl
mov
jae
sbb
lea
enter
fisttpl
pop
jbe
sbb
mov
dec
stc
les
adc
shl
pop
xor
repz
xchg
add
sbb
fwait
sbb
call
ror
xor
cmp
add
xlat
lods
insl
fwait
jo
xchg
and
rclb
add
xor
pop
addr16
jp
xor
xor
cmpsl
sub
adc
aam
sub
mov
fmul
int
sbb
cmc
inc
lahf
mov
fidivl
push
dec
mov
sarb
or
or
jge
rcll
inc
pop
jns
sub
out
aaa
push
rcll
pop
imul
dec
bound
lret
into
sub
jne
sbbb
iret
std
jno
dec
adc
nop
mov
test
push
mov
in
add
inc
xchg
ret
idivl
daa
mov
mov
mov
fdivr
cmp
pop
cmp
lret
mov
lcall
out
mov
rolb
sbb
daa
es
into
adc
and
cmp
ret
inc
sbbb
push
inc
mov
sub
out
mov
ret
xchg
mov
jle
push
mov
scas
add
dec
pop
push
xchg
xor
addl
iret
outsl
jl
pop
xchg
mov
aad
repnz
mov
int3
adc
movsb
sbb
sub
insl
inc
stos
repz
ret
lahf
adc
push
repz
cli
pop
into
push
cmp
push
out
mov
jmp
sub
mov
shll
ds
cltd
push
add
sub
arpl
mov
xchg
dec
xorb
or
ret
ret
dec
test
out
lfs
mov
mov
mov
pop
or
add
pop
jecxz
dec
or
and
pop
sti
popa
clc
cld
aam
jp
lods
addr16
lods
out
cmp
dec
cld
fimuls
in
cmpsb
sbb
aam
in
push
je
or
push
cmp
xor
sub
scas
sti
pop
lods
psrld
orl
out
jae
cmpsl
mul
int
je
movsl
push
and
cwtl
jg
add
fs
clc
sbb
jae
sbb
das
lahf
cwtl
mov
push
subb
int
je
subl
xchg
out
mov
dec
ret
inc
push
scas
xchg
enter
das
outsb
fistpll
and
or
test
lahf
and
sub
and
dec
je
cmp
fstl
xor
sbb
adc
jp
mov
pop
push
fisubs
movsl
loop
ficompl
pop
push
cmp
xchg
inc
fnsetpm(287
push
xchg
push
push
shlb
shrl
daa
adcb
sti
pop
es
jo
mov
pop
jmp
sahf
mov
adc
aam
adc
ljmp
clc
mov
rolb
leave
or
dec
push
mov
mov
xchg
push
fisubs
sbb
daa
out
ljmp
add
fistpl
mov
dec
ret
mov
jl
adc
std
lret
jecxz
lret
mov
test
lods
outsb
out
repnz
dec
inc
mov
hlt
jmp
push
dec
pop
test
test
cmp
and
pop
pop
and
jns
movsb
add
mov
push
shrb
sarb
rclb
orl
mov
pop
testl
mov
and
push
cmp
mov
lcall
or
mov
movsl
aad
test
shll
loop
jb
mov
rcll
cmp
sbb
ret
adc
test
mov
push
push
push
fwait
dec
pop
mov
out
fldt
fs
icebp
clc
iret
or
ss
stos
jae
fnsave
pop
push
test
jo
icebp
fdivrs
sub
push
mov
sbb
adc
and
fists
sbb
sub
push
cld
leave
dec
sbbl
cmp
mov
mov
mov
pop
jb
mov
out
fmulp
fsubrp
shlb
xchg
sub
fs
mov
inc
push
movsl
and
adc
adc
pop
inc
lds
cld
loope
lods
add
stos
fsubrl
xor
jno
dec
ja
dec
xchg
lds
in
sub
fcmovnbe
or
shrb
inc
adc
cltd
sub
mov
cmp
int
xor
xor
mov
loope
or
mov
jecxz
xchg
lret
loop
mov
stc
stc
or
inc
movsl
push
popa
push
ffreep
imul
jmp
jns
inc
cmp
pop
jmp
in
out
outsb
dec
insb
rol
pusha
popa
add
clc
hlt
adc
adc
leave
fimuls
sbb
loopne,pn
imul
push
mov
fwait
pushl
jg
dec
dec
cmc
and
jns
cltd
xchg
mov
cmp
xchg
popa
mov
daa
mov
jmp
test
arpl
xchg
jo
outsl
jne
enter
data16
mov
fldenv
cld
ljmp
sbb
insb
mov
popf
xchg
push
mov
out
sub
push
pop
lock
jmp
movsl
xchg
fisubl
inc
pop
xchg
stos
stos
frstor
sbb
test
insb
imulb
and
fld
sbb
jae
fwait
dec
into
loope
js
dec
or
xchg
lret
movsb
pusha
in
jmp
xor
sbb
sub
shl
push
les
daa
cmp
or
dec
ficoml
imul
shld
imul
add
xor
pop
cltd
push
cltd
add
mov
in
mov
sub
pop
and
jb
jbe
pop
and
shrb
and
push
jns
sbb
loop
mov
stos
outsb
shlb
fld
jae
mov
jno
decl
push
jmp
sbb
rolb
and
lods
jle
adc
lcall
jne
xor
cmp
insl
cld
cmp
lods
ficoms
imul
cli
xchg
sub
mov
adc
pusha
dec
mov
mov
lcall
cmpsl
pop
ds
push
sti
mov
xchg
add
rcll
aam
push
pop
xor
in
push
mov
cld
jp
jecxz
cltd
or
insl
inc
cmc
repz
mov
mov
jmp
adc
jnp
andl
jae
pop
lret
mov
or
dec
inc
pop
incl
adcl
adc
pop
sbb
mov
subl
jno
movsl
movl
push
jbe
sub
shrb
sub
js
mov
mov
nop
popl
mov
fcompl
subb
stos
addr16
out
mov
shl
repz
popa
fs
push
shr
inc
lret
test
xlat
scas
imul
nop
cmp
data16
inc
sbb
mov
mov
popa
mov
lods
cld
lea
mov
out
and
nop
fimull
mov
sbb
fcmovnbe
push
jg
sahf
aaa
jbe
out
xchg
lods
push
ja
xor
fildl
in
aaa
ret
ss
imul
jle
jge
test
dec
sbb
jns
lret
push
sbb
roll
pop
add
orb
cmpsl
jbe
pushf
lret
mov
cmpb
bound
gs
pop
dec
into
sub
inc
mov
jecxz
add
pop
in
xor
dec
mov
loop
movntq
cmp
xlat
lret
in
ret
pop
vpmaxsw
push
cmp
adc
dec
daa
push
sbb
in
xchg
add
jle
test
je
pop
mov
rorl
dec
or
popf
mov
loop
mov
adc
repz
test
iret
call
cmpsl
add
jno
sti
aam
xor
xor
test
cmp
xchg
and
dec
aad
icebp
sbb
adc
pop
notb
cli
mov
cmp
insb
lods
arpl
mov
icebp
out
mov
mov
mov
stos
mov
push
mov
jl
add
lret
test
int3
sbb
lahf
xchg
pop
cmp
lods
cmp
sti
lret
pop
sbbb
ret
jp
dec
xchg
inc
and
mov
cmpsb
aam
or
clc
rorb
jbe
mov
cmp
sub
into
loopne
xchg
pop
imul
loop
jb
arpl
movsb
push
xchg
aad
loop
out
lcall
inc
sub
div
call
int
dec
in
pop
sub
cmp
dec
cwtl
inc
movsl
test
cltd
cmovl
data16
outsl
or
fcoms
rcrb
es
cmp
sbb
mov
push
dec
call
add
popf
in
dec
mull
cmp
sub
add
jp
mov
push
mov
mov
push
mov
cmpsb
push
or
sub
ret
add
std
xor
leave
jns
stc
or
test
mov
or
adc
jae
out
sbb
push
dec
movsb
repnz
cs
leave
push
enter
push
pop
push
inc
hlt
enter
adc
ret
mov
movsl
das
push
jo
loop
aam
aaa
test
dec
mov
add
sub
inc
add
jns
jae
mov
mov
in
and
scas
les
js
lea
sub
ds
in
pusha
mov
push
test
add
jnp
aam
out
lret
rcl
xor
inc
fs
es
les
data16
movsb
fs
mov
int3
aad
inc
sub
xor
inc
shrl
sub
xor
lock
or
or
cwtl
xorb
mov
negb
pcmpeqb
jae
xchg
xchg
outsl
sub
cmp
inc
shll
push
cmp
jne
imul
aas
ret
push
sti
into
je
stos
inc
mov
and
push
pusha
lds
clc
dec
outsl
push
dec
cmp
in
dec
stos
mov
adc
lods
stc
jle
sub
mov
push
lds
xor
and
loopne
pop
cmp
sub
stos
push
inc
pop
sub
push
pop
orl
loopne
xchg
icebp
xchg
outsb
mov
fistps
pusha
and
pusha
cld
xchg
push
xor
into
fnstcw
push
dec
ffree
push
ffreep
fcoms
sbb
mov
xchg
in
cmp
shll
pop
xchg
push
inc
mov
push
mov
inc
jmp
scas
movsl
nop
inc
stos
xor
ror
xor
lods
popf
int3
and
jg
and
adc
adc
insb
push
movsl
add
fcmovnb
loopne
jnp
pushf
daa
pop
cwtl
daa
pop
pushf
outsb
lods
ficoms
in
adc
jnp
pusha
outsl
jae
stos
jge
and
and
aaa
cmpb
push
pop
dec
shll
pushf
pop
stos
scas
lahf
pop
or
and
adc
cmp
jo
bound
adc
lds
pusha
aaa
dec
sbb
std
jmp
xor
sarb
nop
outsb
call
data16
push
pop
and
inc
mov
mov
inc
leave
jmp
std
and
sahf
jbe
xlat
lret
mov
add
cli
xor
xchg
xchg
xchg
dec
scas
jecxz
adc
dec
push
xchg
and
push
dec
imull
gs
ficompl
rolb
stc
or
xor
pop
daa
roll
mov
std
sarl
mov
mov
mov
in
fwait
lcall
addr16
test
add
pop
mov
out
cli
xchg
out
scas
jo
movsl
adc
jnp
cltd
loopne
sbb
aas
and
cmp
aam
call
push
sub
sub
stc
mov
dec
xchg
sbb
cmp
cs
mov
jae
push
mov
xchg
sub
rcrb
jmp
stos
dec
stc
sarb
or
push
imul
sarb
push
sub
scas
mov
sahf
test
mov
dec
jo
pusha
add
dec
sbbb
frstor
ds
mov
mov
ss
lret
clc
pop
repz
sarl
mov
adc
mov
arpl
cmpsl
test
leave
jmp
jno
gs
adc
in
outsb
aas
push
cmp
lods
mov
pop
insl
ret
call
xchg
add
xor
cmp
or
fists
fcoml
cmp
dec
addb
loop
mov
in
filds
dec
xchg
lods
in
loop
mov
pop
push
add
push
pop
js
jle
les
ljmp
pushf
mov
out
xchg
sbb
or
inc
loope
sti
mov
les
sbb
scas
jno
pushf
shlb
lret
push
rcl
pop
and
nop
push
dec
cmp
mov
push
lods
push
rcll
adc
in
dec
dec
lret
push
xchg
cltd
mov
fildll
jae
aam
and
sub
mov
fisubrl
xchg
shlb
dec
xchg
jae
inc
push
jbe
and
mov
push
cltd
cmpsb
int3
cmp
push
mov
mov
jl
jmp
mov
mov
outsb
cmc
pop
sub
sub
mov
xchg
stos
mov
mov
mov
push
in
fs
adc
cmp
jne
call
setle
ljmp
cmpsb
inc
add
outsl
stos
mov
adc
mov
pop
push
fmuls
aad
outsl
and
inc
push
pop
clc
outsb
sub
jecxz
dec
jmp
sub
add
dec
inc
push
xor
or
cmc
rcr
push
and
lret
fcmovb
lock
outsb
jge
inc
and
xchg
sub
or
daa
pop
movsb
shl
test
xor
sahf
push
sbb
jns
cmc
fbld
stos
or
sub
inc
adc
inc
mov
mov
and
out
cmp
call
xchg
jp
mov
sbb
sbb
loopne
xor
popa
xchg
mov
pop
and
dec
mov
int3
inc
gs
out
push
test
sbb
xor
mov
mov
cltd
pop
mov
sti
sbb
xlat
pop
ret
mov
cmc
xor
mov
insl
xchg
mov
in
jmp
adc
lret
pop
ss
dec
xor
pop
es
mov
cwtl
mov
jecxz
orb
repz
push
aaa
addr16
mov
and
pop
cmp
imul
sbb
lcall
je
cli
shlb
inc
sbb
mov
arpl
push
cmc
jne
jo
push
outsl
inc
scas
arpl
shlb
add
sahf
adc
push
test
test
add
pop
fcmove
dec
outsb
mov
aaa
nop
rorl
pop
inc
iret
cld
sub
mov
push
push
xor
cwtl
sub
jge
cli
lret
movsl
and
mov
movsl
and
xchg
leave
cltd
adc
mov
inc
ret
stos
scas
incb
jle
bound
or
jnp
in
lds
jle
xor
jne
clc
mov
pop
add
sub
push
loope
mov
sti
arpl
loop
adc
stos
add
and
xchg
fsubs
jecxz
fsubrp
aam
fimull
fwait
jb
dec
dec
in
jns
outsl
push
pop
mov
add
scas
lret
xor
mov
cltd
ret
or
orl
and
mov
push
shll
push
outsl
in
mov
mov
mov
outsb
xchg
mov
mov
aas
add
icebp
and
xorl
cmpxchg
xor
add
arpl
inc
jb
sti
pop
xchg
pop
xchg
adc
test
xlat
inc
xor
sahf
sbb
sbb
xchg
std
fmull
sub
das
fcoml
into
and
pushf
cs
jno
ja
jmp
inc
dec
mov
out
cvttps2pi
jl
mov
inc
jmp
mov
addl
dec
add
cs
mov
inc
aaa
pushf
mov
mov
jne
adc
lret
jae
sti
jno
pop
ret
gs
pop
add
je
and
mov
mov
adc
xchg
rclb
mov
adc
lock
insb
xchg
enter
enter
ror
adc
es
loopne
rcr
sarl
mov
ret
fisubl
cmp
push
cwtl
shlb
loop
cmpsl
mov
sbb
mov
fcoms
lock
outsl
and
outsb
std
lock
adc
inc
sbb
fists
fildll
xor
aad
push
or
out
mov
rol
fwait
fs
add
jns
mov
insl
mov
loopne
xor
push
scas
enter
inc
push
cmp
stos
rclb
add
lods
or
or
jo
addb
mov
push
and
push
sbb
add
pop
add
push
int3
jbe
pop
pop
add
in
mov
arpl
insb
sub
or
ljmp
push
mov
mov
pop
std
sbb
or
cmp
mov
add
add
sub
addr16
push
jnp
pop
mov
push
jp
and
jl
sbb
push
or
nop
dec
lea
dec
mov
mov
iret
pop
and
pop
sbb
syscall
sti
sub
or
and
cmpsl
ficoml
or
leave
xchg
fdiv
cmp
jno
push
test
jno
stos
add
fwait
xchg
mov
and
push
add
lret
ret
jb
pause
sbb
jo
aaa
stos
mov
sti
xchg
mov
shrb
sub
and
cmp
pop
lds
or
lds
add
rcr
lock
jge
inc
pushf
inc
sub
ficomps
and
mov
inc
mov
sbb
add
in
push
bswap
pop
mov
repnz
dec
shrb
popa
adc
clc
push
push
sti
sarl
pusha
jle
push
and
aam
in
push
or
into
xor
pop
xor
aam
xchg
scas
cld
push
cmp
pop
mov
mov
jo
xchg
ds
test
mov
fwait
aad
loope
stc
stos
gs
decl
jle
adc
add
mov
jecxz
sub
mov
and
jno
xchg
adc
call
fdivrl
iret
cmp
adc
sar
hlt
cmp
cli
mov
inc
inc
vmwrite
add
jo
js
add
and
cmp
int
mov
sub
cmp
bound
jae
js
inc
ss
test
inc
fistps
pusha
xchg
inc
xchg
shl
out
rcrl
mov
subl
cld
inc
iret
sub
sbb
mov
dec
add
addr16
xchg
popf
xor
jl
stc
fstps
adc
jns
lods
sti
xor
lods
fsubs
jns
cli
mov
mov
xor
lea
pop
inc
orb
sub
mov
call
jo
test
aad
fwait
pop
movsl
push
adc
ljmp
xor
xchg
dec
push
out
sahf
pusha
sub
aad
repnz
xchg
sub
je
or
lret
push
push
jb
sbb
add
dec
cmpsb
out
cmpsb
jge
and
and
xor
mov
mov
std
sahf
cli
dec
jmp
fistps
lret
in
daa
imulb
mov
jle
fnstcw
jne
adc
jge
int3
lods
psrld
mov
sti
add
push
adc
bound
cld
push
mov
icebp
mov
mov
cmpsb
shlb
je
mov
mov
jns,pn
mov
clc
mov
mov
fildl
sub
cmpsb
popf
mov
sub
repnz
or
push
test
jecxz
jo
daa
icebp
stos
adc
test
imul
daa
mov
jmp
lahf
movl
repnz
sub
add
cmpsb
mov
mov
push
xor
mov
xchg
out
cmpsl
adc
ret
mov
push
fs
enter
lret
mov
push
sub
xchg
mov
mov
out
fimuls
lahf
sbb
sbb
adc
mov
add
adc
mov
mov
mov
rorb
jb
inc
dec
sti
inc
outsl
cmpl
jb
insl
xchg
or
push
scas
xor
or
rclb
in
mov
shlb
imul
add
adc
cmp
pop
ja
cmpb
xorl
loop
jae
cmp
mov
rorb
repnz
dec
mov
push
and
into
dec
outsl
mov
int3
cld
movsl
cmp
inc
mov
adc
xchg
pusha
test
mov
dec
push
dec
xor
int
push
push
lret
mov
push
sbb
adc
adc
scas
pop
xchg
adc
pushl
pop
xor
lods
lea
and
inc
and
imul
sbb
sahf
inc
outsb
push
scas
ljmp
out
adcb
rcr
aam
add
inc
push
scas
es
les
and
xor
or
das
push
int3
repnz
xchg
push
fisubl
jg
enter
js
scas
adc
mov
cmp
lea
jecxz
mov
std
jno
pop
in
sbb
jl
test
loop
mov
mov
push
aaa
ds
cmp
xchg
cmp
mov
call
push
push
mov
nop
xchg
loop
leave
mov
rorl
out
sbb
lods
loop
and
mov
or
xchg
in
fs
sbbl
fs
sbb
jb
std
mov
jae
push
push
movsb
icebp
mov
sbbl
pop
pop
in
dec
sub
mov
or
xchg
loope
fcoml
adc
mov
lds
lds
lea
pusha
pop
je
std
hlt
stc
mov
pop
pop
jbe
mov
nop
jl
daa
dec
stc
push
outsb
aad
cmp
filds
dec
repz
flds
int3
xlat
push
in
push
or
jmp
cmp
sub
bound
in
xor
sub
pushf
and
imul
cmp
mov
pop
aam
mov
ja
les
popa
adc
push
mov
and
test
lods
in
xchg
and
xlat
test
cltd
mov
out
lds
pop
lods
jp
cmp
mov
lahf
lret
and
insb
dec
std
push
cmp
aas
add
es
sub
sbb
push
fbstp
or
sub
mov
stos
mov
sahf
out
jno
in
mov
push
test
push
cli
cmp
add
mov
fiadds
adc
loopne
inc
jge
sti
dec
jo
lret
jp
call
jo
xor
or
imul
cmp
in
mov
pop
add
or
pop
aad
pop
rorb
push
cli
call
sti
stos
je
and
xchg
out
mov
or
scas
jl
pop
sahf
mov
push
icebp
test
mov
mov
sub
cli
orb
adc
hlt
cs
testb
loop
dec
in
daa
dec
mov
jno
int
adc
mov
mov
pop
inc
nop
push
xchg
icebp
iret
test
cmp
test
jnp
fistl
and
out
jge
xor
int
roll
and
cvtpi2ps
or
xchg
xchg
xlat
xchg
negl
mov
sub
mov
sbb
repnz
in
pop
pushf
sub
pop
adc
dec
dec
cmpsb
ds
sbbb
sub
in
jp
ret
push
lahf
fisttps
or
pushf
cwtl
xchg
or
sbb
int
insl
adc
addr16
jg
cmp
ret
cltd
jne
fistpl
push
mov
out
outsl
cs
cmc
fcomip
cmp
int
or
xchg
testl
jg
cmpsb
sahf
pusha
mov
in
insb
fst
or
rcl
mov
sub
dec
into
jp
lock
clc
stos
adc
pop
mov
add
or
ds
pop
scas
mov
mov
loope
popf
nop
jnp
pop
bound
push
and
mov
mov
imul
wrmsr
sub
les
xchg
mov
cmc
ds
xchg
adc
jg
cmp
mulb
push
push
inc
pop
fmulp
jge
add
jecxz
jmp
outsb
mov
stc
mov
inc
jmp
fidivrl
mov
pop
inc
sbb
mov
and
test
push
imul
sub
adc
outsb
fwait
sbb
inc
test
add
pop
aam
fcoms
jns
and
mov
or
scas
into
mov
daa
les
std
scas
lock
cmp
or
lock
inc
sbb
sarl
jecxz
ss
pop
pop
lea
clc
popf
rorl
xchg
aam
or
mov
jno
jae
and
jnp
xchg
inc
cmpsl
or
ja
mov
sahf
pop
sub
cmpsb
mov
sarl
popf
push
in
ficomps
xchg
lret
decl
mov
sbb
xchg
jno
mov
mov
jg
pusha
xorb
cli
movsb
add
jno
jl
out
push
sbb
testb
push
lds
add
jb
pop
pop
lahf
cmp
xchg
and
movsl
loop
out
mov
inc
mov
repz
and
mov
jg
cmc
sbb
sub
xor
mov
jbe
das
cmp
xor
push
cld
pop
adc
lret
inc
dec
out
in
insl
sub
xchg
adc
repz
xchg
dec
add
scas
cmpsb
fidivrs
jae
cmp
popa
jg
mov
or
push
sbb
jle
xor
cmp
dec
jae
xchg
cmpsl
jae
push
notl
int3
xor
jns
inc
and
lret
adc
push
cmp
cmp
mov
mov
out
aaa
rolb
adc
push
test
cmc
sub
jae
int3
jmp
pop
dec
aaa
int
pop
test
push
pop
inc
fldenv
in
mov
mov
mov
leave
fwait
sbb
push
shll
les
in
subb
lods
dec
outsl
sub
pop
xor
push
xor
sbb
pushl
aam
sub
scas
and
sub
mov
dec
rclb
fstps
loopne
stos
mov
and
rcl
mov
mov
movsl
add
cmpsl
sub
sbbl
loope
or
xor
divl
ret
pusha
sbb
cltd
repz
xchg
jae
push
testb
shrb
jecxz
inc
sbb
movsb
mov
cltd
subb
int3
jo
xchg
hlt
ret
ror
out
insb
ss
dec
jl
lods
rol
loope
push
adc
fdivp
shlb
fcoml
popa
ljmp
daa
mov
jecxz
out
pop
sbb
lods
or
cmp
pop
repz
mov
push
iret
sub
and
loop
and
xchg
hlt
xchg
inc
ss
xor
aas
nop
xchg
push
mov
lods
bound
ss
inc
int
loop
jmp
fiaddl
and
inc
push
sbbb
ljmp
daa
pop
scas
cs
and
sub
xor
outsb
add
xchg
adc
ficoms
out
xlat
sbb
lret
orl
mov
adc
adc
push
push
repz
cmpsl
in
sub
push
dec
lods
mov
mov
xchg
xlat
das
int3
fisubl
jae
out
mov
mov
loopne
xchg
mov
add
jle
and
call
fs
pusha
sub
or
jg
mov
movsb
sub
lahf
pop
sub
ret
sub
test
mov
pop
xchg
fmuls
lds
mov
mov
dec
popa
sarb
or
add
push
cli
inc
and
aad
out
movsl
cmp
sub
into
push
imul
lock
std
pop
js
in
scas
cmp
fidivl
push
inc
adc
imul
xchg
xorb
push
sbb
pop
xor
mov
ror
icebp
cmp
cwtl
cwtl
mov
xor
in
xchg
popa
outsb
dec
icebp
fldl
or
test
jle
or
jge
xor
jge
cwtl
sub
cmc
icebp
pop
jl
lcall
gs
sub
int
jno
mov
in
xchg
adc
sub
popa
scas
dec
mov
ds
cmpsl
fistps
inc
fwait
cltd
pusha
outsl
jg
scas
dec
mov
xchg
push
es
xchg
pusha
pop
or
insl
or
jbe
ja
dec
loope
das
mov
lds
fsts
mov
mov
std
fmull
pushf
test
pop
pop
repnz
shll
xchg
lahf
jb,pt
sbb
mov
sub
adc
mov
dec
rorb
xchg
in
pop
cmp
scas
stc
fmull
dec
adc
int
add
addl
add
or
cwtl
insb
and
xor
inc
repnz
or
push
outsb
js,pt
stc
fmull
scas
aas
fwait
out
pop
ret
mov
jb
sub
and
fcmove
sahf
pop
fimuls
push
add
cltd
lcall
xchg
fdivp
cmpsb
add
roll
sbb
inc
mov
adc
enter
mov
push
imul
pop
push
sub
add
jae
cmp
gs
in
gs
xchg
sbb
pop
jno
aad
adc
int
dec
push
mov
or
push
and
int3
pop
sbb
dec
outsb
scas
repz
jne
rolb
or
pop
insl
test
mov
mov
sub
gs
outsb
jl
pop
pop
out
ds
cli
rolb
cwtl
mov
out
movsb
mov
add
shrb
int
sbb
or
aad
sub
mov
adc
cld
push
mov
or
xor
fiadds
xchg
mov
xor
xchg
mov
sbb
into
mov
mov
lea
pop
call
cmc
mov
mov
test
nop
lcall
mov
test
insl
or
sub
jp
or
mov
cmp
movsl
inc
stc
iret
or
jg
cs
or
fcoml
arpl
cmp
fs
jg
mov
fdivrs
aad
push
cwtl
and
repz
pop
cmp
sbb
movsb
xchg
xchg
cltd
push
enter
js
inc
scas
push
pop
imul
rol
push
dec
cmp
arpl
mov
cld
pop
push
dec
lea
mov
xor
fisttpll
cmp
roll
test
fsubr
enter
icebp
add
sub
pop
cmp
lea
les
cmpsb
lret
cs
out
cwtl
dec
icebp
jo
adc
pop
push
mov
out
and
push
inc
mov
push
sbb
aad
pop
imul
rcll
out
sbb
xchg
aas
jp
sar
imul
imul
or
fldt
decb
push
ds
adc
jle
iret
mov
aaa
bound
xor
dec
xor
icebp
movsb
scas
xchg
pop
nop
mov
xchg
mov
in
int
movsb
push
adc
out
xorl
adc
lods
sbb
adc
sub
inc
sub
into
cltd
push
or
mov
es
gs
jno
out
mov
push
jecxz
adc
inc
mov
push
inc
sub
aam
test
std
dec
lret
int3
iret
xchg
sti
clc
cmpsb
sbb
ds
jo
push
fsubs
fildll
arpl
insb
test
push
add
in
loopne
xchg
inc
pop
mov
pop
mov
gs
dec
xor
loope
inc
outsb
mov
fcoml
sub
stc
mov
jns
lret
notb
mov
lds
or
xchg
mov
lods
inc
scas
and
addr16
mov
ret
insl
mov
cli
icebp
mov
jmp
test
mov
jnp
inc
pop
pop
add
pusha
movsl
and
imul
or
and
loop
inc
lcall
pusha
push
add
sub
dec
lret
addr16
outsb
lods
add
scas
stos
xchg
or
sub
inc
mov
adc
aam
call
jo
jge
movsl
int3
mov
cmp
lea
aam
and
inc
gs
lock
mov
mov
in
orb
pop
xor
in
out
hlt
jo
and
repnz
movsb
aas
mov
inc
push
inc
xchg
jmp
movsl
mov
add
and
std
sub
mov
fistl
daa
jecxz
mov
xchg
xor
push
fwait
lret
stos
loopne
out
clc
sub
cmp
add
imul
sub
sti
xor
sbb
push
bound
fcmovne
cld
aaa
das
clc
xchg
xchg
pop
hlt
shlb
sbb
test
xor
mov
enter
cmp
cmc
in
out
sub
out
fmulp
pushf
subb
and
xchg
call
adc
xor
pop
adc
cmp
pop
movsl
dec
pop
inc
inc
dec
dec
sub
shrb
lock
aas
ret
sbb
mov
dec
and
jg
aam
sub
mull
xchg
xor
cmc
lret
jnp
test
nop
mov
jle
cmc
xor
ja
gs
fwait
add
dec
lea
sub
testb
dec
cmp
ret
xlat
pop
out
jg
inc
imul
imul
push
jbe
dec
xorl
sbbl
outsb
mov
push
je
mov
lds
xlat
scas
dec
pop
pop
mov
or
repnz
gs
xor
jae
ss
xor
push
nop
das
push
adc
in
mov
sahf
push
mov
das
xchg
dec
or
jno
mov
push
xor
fs
in
or
cmp
mov
loopne
stos
insl
sbb
sbb
sbb
mov
sub
rcl
inc
popa
mov
fsubrl
push
jg
pop
popf
lods
mov
adc
iret
dec
sbb
repz
xorl
arpl
jmp
xchg
cmpsl
mul
in
pop
fistpl
push
das
push
cmp
adc
jo
mov
cmp
ret
std
sub
loope
imul
movsl
lock
imul
inc
mov
call
adc
mov
dec
gs
jne
lods
pushf
sbb
je
fs
lcall
sarb
lods
jns
ficompl
push
inc
jns
jg
arpl
lret
call
push
negb
in
push
icebp
insb
and
mov
cs
add
pop
mov
cltd
xchg
shlb
mov
dec
icebp
shrl
sub
cld
jmp
mov
push
inc
push
enter
hlt
sub
or
adc
xchg
mov
push
push
push
jp
shrb
pushf
jmp
pop
push
test
and
aaa
lahf
cmp
pop
cmpl
jbe
test
adc
fistl
inc
cli
cmp
push
dec
lods
xor
mov
and
lret
es
js
xchg
sub
sub
stos
nop
lret
popa
and
ss
cmp
les
loopne
icebp
xchg
jae
arpl
test
call
pop
in
mov
xchg
cli
pop
mov
cltd
adc
add
push
xchg
push
loope
out
iret
jge
mov
sbb
push
add
idivb
and
js
mov
jb
fadds
shl
push
inc
int3
pop
push
cmp
inc
fisttps
in
mov
negl
dec
jns
lods
push
pop
sbb
pushf
sbb
push
sbb
js
and
inc
outsb
cltd
inc
andl
int3
idivl
mov
mov
dec
xchg
adc
xor
xor
dec
mov
dec
xor
insl
sbb
mov
cmp
adc
test
popf
adc
mov
lds
scas
inc
leave
lock
std
sbb
out
out
pop
dec
das
fstpl
cld
push
jo
push
push
insb
js
mov
and
arpl
mov
in
orb
incl
scas
lea
push
lahf
orl
out
mov
enter
mov
leave
jbe
adc
and
andl
addr16
out
push
int
aaa
ds
mov
in
cmp
jns
sbb
pop
fcoms
adc
aas
lret
mov
push
jmp
rcrl
lcall
sahf
mov
mov
iret
test
into
jne
test
dec
pop
push
mov
fistps
dec
xor
test
in
popf
or
stos
aas
iret
sub
inc
test
jl
cmp
push
push
loope
or
fidivs
repz
leave
xchg
jo
jae
inc
data16
pop
loope
out
idivl
or
movzwl
out
cltd
mov
jl
and
dec
out
mov
fidivrs
ret
das
mov
and
pop
es
ss
adc
mov
add
pusha
in
push
cmpsl
repz
jp
pop
or
rcrb
cmp
jg
loopne
movsl
cwtl
add
pop
jmp
jg
aam
adc
nop
rcl
jne
adc
dec
lcall
push
dec
push
ret
xor
dec
pop
cli
rclb
adc
dec
mov
xchg
shl
mov
pusha
ja
ljmp
mov
dec
std
or
xor
pop
dec
add
push
out
or
outsb
cmp
jg
ss
inc
sub
jb
add
inc
shlb
or
or
push
lcall
int3
scas
shrl
out
movsl
xchg
pop
and
icebp
jl
push
inc
cld
inc
jnp
mov
mov
rcl
movsb
xor
in
pop
cltd
mov
into
ljmp
dec
sub
loope
orb
cmpb
jge
stc
insb
mov
movl
pop
hlt
cmc
repz
and
test
lds
jmp
dec
push
mov
cwtl
cmc
orl
dec
ret
push
push
cmp
lret
mov
js
xchg
fists
xchg
mov
xchg
push
clc
dec
rclb
push
mov
xchg
orb
adc
shr
outsb
cmpsl
lock
adc
rorb
or
xchg
add
jle
iret
pop
cmp
jo
les
cld
mov
sbb
loop
mov
addb
addr16
mov
pop
cmp
jl
xor
in
fsub
mov
in
mov
out
push
pop
mov
and
mov
sub
notb
sub
mov
push
mov
push
mov
popa
and
push
stos
sub
repnz
lods
shlb
or
and
int
xor
stc
xor
std
or
jge
inc
push
inc
push
das
add
pop
lds
movsb
mov
push
out
call
test
shll
aad
fdivp
in
sub
fadds
mov
imul
lods
jae
and
in
push
xor
in
sub
sub
dec
icebp
nop
xchg
pop
pusha
cmp
fisubrs
cli
push
dec
mov
and
pop
les
out
out
ja
or
enter
push
into
in
ss
pop
or
add
cld
loopne
mov
or
adc
lds
mov
fs
fists
test
in
inc
dec
jnp
sub
jp
scas
sub
sub
sti
in
jg
out
sbb
mov
fsub
rcl
stos
arpl
out
ret
xchg
add
and
pop
fnsave
mov
push
add
push
sub
push
outsb
sub
jo
iret
scas
out
push
jecxz
lock
cmp
add
ljmp
jp
and
out
mov
cmpl
adc
jns
add
fcompl
mov
mov
jne
cmc
jo
sbb
sbb
and
divl
movd
mov
xor
xchg
mov
pop
and
ret
push
fbld
xlat
jl
mov
enter
push
sbbb
mov
push
jmp
lods
or
push
mov
movsl
xor
inc
aad
int
ret
xchg
mov
fs
cmp
jmp
loop
xchg
jg
hlt
adc
xlat
pop
sbb
cmp
lds
sub
xor
pushf
call
jl
into
mov
inc
iret
cmp
dec
xchg
cmc
push
shr
sti
sahf
loop
call
loope
push
sbb
mov
imul
mov
cmp
cmp
fiadds
ja
cmp
ficompl
js
xchg
jg
or
xor
lret
andl
and
popa
mov
dec
adc
sbb
fists
or
push
fmulp
or
scas
xchg
loop
jle
pop
fcoms
mov
push
dec
xchg
testb
jmp
bound
dec
add
jmp
xorb
lods
sti
mov
mov
jmp
rorl
push
popf
aaa
mov
mov
dec
dec
xchg
mov
inc
fdivl
push
rolb
cmp
lcall
cs
mov
dec
addr16
insl
push
mov
outsl
xchg
ss
jno
movsb
clc
jmp
gs
lds
and
xchg
loope
out
add
or
shll
std
sub
pop
mov
push
rorb
fiaddl
lret
and
out
call
sbb
cmp
mov
nop
and
stos
test
fsubp
jbe
sbb
cmp
xchg
pop
out
lret
mov
push
jae
xchg
popa
stos
sbb
out
lea
pop
call
and
inc
out
movsl
or
push
jmp
je
iret
mov
jo
cmpsb
loopne
pop
sub
xor
mov
fbld
cmpsl
cli
imulb
test
iret
push
push
stos
fists
add
push
mov
sub
sbb
mov
in
inc
push
fnstsw
sahf
movsb
shl
repnz
adc
insb
sbb
adc
mov
sahf
lods
sub
pop
xor
dec
rorb
fisttpl
mov
add
fxtract
inc
xchg
dec
and
push
pop
sub
push
stos
jns
ja
into
js
inc
lcall
jg
loop
inc
addl
loop
sub
addr16
sub
lods
mov
insl
cli
inc
mov
movsl
sub
mov
and
inc
or
cmp
xchg
push
in
jnp,pt
cmp
ret
xchg
popa
and
sbb
and
sub
repnz
mov
ja
ss
out
xchg
xchg
ja
aad
sub
sub
or
sub
inc
sub
mov
loopne
jg
test
cmp
shll
xchg
loopne
lds
lcall
rclb
xor
into
push
cmp
push
inc
add
xchg
lock
pop
daa
cmp
insl
mov
adc
cmp
jne
loope
mov
lcall
ror
cmp
dec
nop
aaa
sbb
pop
aad
pop
mov
or
shrl
scas
fbstp
mov
or
jmp
mov
jecxz
pop
and
jl
cmp
push
xchg
loopne
fs
pusha
pop
testl
lods
fmull
test
mov
andl
movsl
pop
imul
cmpsb
fwait
das
sub
xchg
xlat
pop
sti
fmuls
xchg
and
fbld
xchg
mov
sbb
daa
sub
repnz
adc
push
pop
arpl
movsl
adc
inc
leave
add
xchg
pop
mov
test
enter
lds
sub
jb
add
xorb
xchg
mulb
loop
lods
out
add
mov
pop
xchg
push
mov
cmp
add
addl
out
jne
inc
pushf
inc
jg
fmuls
dec
outsl
aad
fucomp
mulb
dec
sahf
cmp
sub
fldcw
inc
jo
xchg
movsb
stos
clc
jle
xor
mov
xchg
xchg
mov
rol
test
fistpll
sbb
arpl
iret
sub
inc
sub
fwait
int3
inc
je
es
cmp
push
inc
sub
loope,pt
xchg
rep
bound
cs
adc
pop
outsl
xor
sub
lods
pop
xchg
aas
outsb
mov
sub
cmp
imul
fisttpl
in
lret
icebp
sub
pop
add
leave
out
push
xor
call
out
xchg
sti
repnz
lret
mov
lds
push
rclb
js
or
xchg
jae
cld
cltd
testl
push
ljmp
gs
jae
outsb
mov
iret
nop
xchg
dec
repnz
xchg
lcall
cmp
push
inc
push
and
xchg
pop
dec
ficoms
adc
orl
push
in
mov
mov
arpl
in
test
or
fwait
das
jle
enter
xor
mov
cli
add
mov
rolb
insl
inc
or
mov
mov
lea
push
cmp
enter
xchg
cltd
pop
out
xor
test
pushf
imul
mov
cmp
pushf
mov
adc
loopne
stos
cmp
jl
jp
hlt
rolb
test
wbinvd
hlt
or
mov
inc
in
sbb
insl
shrb
lea
loope
add
add
mov
iret
ficoms
xor
int3
test
and
pop
fnstsw
subb
and
sbb
jle
std
or
inc
dec
and
roll
adc
decl
jo
imul
jecxz
test
mov
outsl
cmp
cmpsb
cmp
das
xchg
push
lods
sarl
rorl
aad
push
repz
push
adc
pusha
clc
jb
sub
add
rcr
mov
clc
decl
push
das
ja
add
xchg
cmpsl
xchg
cmc
jae
pop
push
incl
loope
out
div
sbb
xchg
and
or
in
jnp
cli
pop
popa
cmp
arpl
sbb
into
dec
lea
mov
cli
lahf
outsl
shl
xchg
in
adc
sbbl
shrl
jg
repnz
cmp
hlt
sub
inc
in
mov
ret
mov
sbb
sbb
jmp
aas
mov
cmpsb
rcrb
jnp
cltd
push
adc
test
pop
xchg
or
push
jl
jnp
es
out
adc
imul
test
les
pushf
mov
and
mov
cmpl
lret
aaa
shl
inc
bound
mov
jg
inc
lods
out
sub
out
ds
outsb
xchg
pop
test
mov
sbb
push
sbb
lock
sbb
and
mov
aad
js
sti
mulb
sub
dec
push
loopne
pop
or
sbb
dec
inc
pop
icebp
sahf
mov
cmp
cmpsb
push
enter
cmp
cmpl
sub
test
mov
daa
inc
add
rclb
sub
in
and
cmpsb
add
push
inc
rcrl
inc
inc
jbe
mov
cmp
xor
nop
fwait
sub
push
jle
fdivs
in
dec
inc
lods
pop
xor
daa
mov
adc
xchg
stos
or
insb
pushf
test
cwtl
sub
dec
inc
sbb
mov
and
lcall
add
jno
mov
or
inc
xchg
adc
adc
rcr
inc
cmpsl
lods
xchg
add
insb
in
pop
addb
jge
add
enter
cmp
mov
cmp
call
cltd
mov
dec
iret
scas
jae
mov
xor
test
fwait
arpl
pop
xor
cmp
push
daa
daa
out
fnstcw
mul
lods
jne
mov
sub
imul
cmp
pop
outsl
das
mov
cmp
push
mov
xchg
and
jl
inc
pop
adcl
mov
mov
enter
dec
test
inc
lods
sbb
sbb
cmpb
or
cmp
jae
test
lcall
enter
jge,pn
test
es
pop
sti
adc
jo
outsl
cmc
arpl
dec
inc
fs
leave
jnp
jb
cmpsl
mov
push
dec
into
and
test
dec
bound
xor
mov
xor
sbb
inc
idivb
push
fs
mov
fmul
cmc
dec
pop
daa
mov
out
js
sub
les
aam
in
jp
loop
aas
aam
mov
loope
sbb
daa
dec
sub
mov
aas
mov
mov
dec
mov
imul
test
shl
fnstcw
mov
pop
notl
lods
cmp
pop
dec
scas
push
xor
mov
aaa
cmc
bound
cmp
jns
call
push
dec
push
arpl
outsl
sub
push
adc
jo
mov
fwait
cmp
rorl
cmp
pop
sbb
test
and
inc
mov
pop
int3
jbe
rcl
in
test
lods
mov
dec
xchg
xlat
cmp
int
push
xchg
mov
jp
repz
in
orl
mov
mov
dec
mov
imul
fst
enter
pop
or
dec
stos
scas
aad
int3
mov
imul
aad
call
xor
sbbl
imul
or
addr16
push
or
push
mov
jne
cmp
pushf
adc
mov
push
imul
loopne
lds
stos
sbb
das
aaa
dec
repnz
es
scas
aad
movsl
cwtl
fs
adcb
aas
add
rolb
into
imul
dec
rcll
jmp
popf
push
in
mov
jge
xor
fidivs
xlat
rolb
scas
movb
mov
outsb
movsb
shll
add
lods
mov
xchg
into
jo
into
mov
mov
dec
loop
dec
mov
fwait
mov
cmc
and
add
testl
hlt
jle
fs
sub
pop
repnz
cltd
data16
xchg
frstor
sub
pop
mov
popf
es
pop
and
jae
mov
in
lds
bound
adc
sbb
sub
push
push
and
lods
into
flds
sub
fistl
mov
fwait
mov
pop
into
test
xchg
clc
fcomp
ds
mov
cwtl
sahf
or
mov
lretw
cmpsb
sarl
cld
xor
sbb
push
call
xor
mov
lock
xor
inc
xor
or
cmp
pop
xchg
sbb
test
push
inc
int3
inc
bound
test
scas
in
ret
enter
sub
fwait
mov
cmp
mov
std
sub
scas
imul
add
loop,pn
mov
in
in
dec
fstpt
mov
mov
xchg
or
mov
out
icebp
pop
pop
jp
xor
inc
push
aaa
imul
adc
mov
test
dec
outsb
sbb
shl
cmp
or
cmc
xchg
arpl
out
and
imul
popa
mov
cmp
loopne
mov
mov
cmp
aam
lods
movsb
adcb
stos
lods
push
pop
lds
mov
stos
push
and
adc
adc
movsb
movsb
in
in
cmp
movsb
lcall
ss
ja
dec
and
lods
mov
xlat
xlat
call
inc
out
andb
test
into
shr
inc
dec
sub
cld
mov
inc
movsb
dec
dec
nop
daa
rcr
jecxz
lret
mov
ds
and
jbe
test
and
jge
out
ret
xchg
sti
mov
int
fldcw
sbbb
addr16
movb
insb
mov
pop
imul
xchg
outsl
mov
mov
out
leave
inc
aam
scas
ja
dec
int
rol
and
and
jne
imulb
cmpsl
jne
mov
inc
inc
addr16
cmpsb
inc
in
shlb
inc
mov
sub
adc
dec
sub
mov
pop
mov
es
add
xchg
out
mov
outsb
call
mov
xchg
dec
pop
cmpsb
imul
jae
xchg
xor
popa
bound
int
test
into
lods
gs
cmc
adc
loope
scas
in
daa
cmp
push
or
fs
das
div
jo
int
rcl
inc
pop
rcl
sub
dec
cwtl
mov
dec
movsb
cmpsb
bswap
or
sbb
fmul
xchg
sbb
xor
pop
fists
into
or
gs
cmp
mov
fistl
in
push
sub
pop
out
dec
icebp
adcb
rcr
jmp
pusha
into
push
adc
lock
push
ja
dec
fistpll
std
std
xchg
setp
jmp
into
push
mov
or
imul
lods
jle
xchg
movzwl
or
je
fnstcw
push
out
jnp
mov
jle
push
mov
mov
push
lea
add
jo
cmp
mov
push
stc
or
lahf
ret
mov
mov
adc
fildll
sbb
orl
jmp
mov
daa
jecxz
mov
aas
mov
and
xchg
jg
lret
lahf
in
inc
mov
dec
ss
imul
je
rcrl
dec
jmp
out
mov
inc
pop
pop
mov
dec
stos
int
test
sub
lds
sub
pushf
xor
jge
das
sbb
push
jmp
int
stos
xlat
fisttpll
mov
inc
call
xchg
sbb
cmp
fdivrl
test
idivl
enter
inc
and
cmp
mov
in
pop
inc
xor
adc
cmp
cwtl
xchg
es
idivl
and
scas
clc
dec
mov
xchg
mov
jle
push
scas
mov
ret
push
inc
and
cmp
out
inc
adc
mov
insb
mov
popf
adc
inc
inc
ret
xchg
jmp
lcall
jo
add
loopne
int3
xchg
lahf
sahf
jnp
jge
jmp
mov
cmp
mov
cli
push
sub
xchg
ds
imul
out
inc
test
add
ret
dec
mov
cli
add
xchg
fxch
cmp
jge
xor
out
filds
loop
push
jne
mov
and
inc
repnz
inc
sbb
dec
inc
das
nop
inc
sub
and
imul
mov
jecxz
dec
mov
xchg
mov
push
lret
repz
mov
cld
pop
mov
adcl
shlb
hlt
fstpt
xchg
adc
mov
cli
fidivs
imul
aaa
and
inc
repnz
and
jno
mov
dec
mov
hlt
bound
fwait
push
pop
lahf
xchg
nop
dec
sar
lods
insb
push
sti
jnp
stc
push
dec
scas
in
aas
jne
call
loop
ret
dec
addr16
pop
pop
test
pop
andl
mov
lcall
xor
std
pop
hlt
mov
sub
or
xor
sub
and
mov
push
mov
cli
xchg
xorb
pop
push
insb
jnp
notl
sbb
add
mov
outsl
pop
dec
mov
xchg
movsl
xchg
xchg
cmp
inc
mov
pop
sbb
inc
repnz
add
les
je
lock
outsl
push
add
jmp
clc
push
int3
add
mov
jns
je
pop
mov
lahf
jae
or
negl
sahf
dec
pop
inc
jl
or
mulb
stos
fbld
sub
gs
sub
dec
sub
cmp
aas
cmp
sub
mov
mov
sub
xor
jb
gs
add
int
call
into
mov
pop
mov
push
icebp
je
fadds
xchg
or
nop
fs
scas
pusha
jecxz
push
imul
sub
add
out
adc
scas
loopne
mov
aas
test
test
arpl
xor
lret
pop
int
jbe
push
mov
repnz
and
int
enter
outsb
lcall
scas
or
jge
out
push
and
push
testb
and
scas
mov
dec
icebp
mov
mov
xor
or
mov
or
dec
fwait
aad
outsb
pop
repnz
cmpsl
mov
popa
mov
fsubl
js
push
jno
mov
push
mov
push
enter
out
mov
lock
jl
mov
cmp
repz
jne
inc
xchg
dec
je
push
loop
mov
sub
cmp
roll
adc
popf
pop
lods
cmp
ret
mov
sub
sbb
lods
fwait
xchg
mov
adc
mov
arpl
sbb
push
jo
imul
push
lcall
pop
movsb
js
cs
jge
mov
ret
mov
lock
insl
xor
ljmp
mov
xor
stos
das
mov
push
orb
loope
sarl
xorb
lods
xchg
push
rorb
jb
mov
ret
pop
movsb
sub
inc
shl
mov
jb
sahf
fs
lods
out
call
fcmove
nop
pop
imul
mov
sub
mov
ret
in
cmp
pop
dec
out
fs
add
inc
sub
add
jns
mov
mul
sahf
sub
lods
xor
iret
lds
shlb
mov
jg
inc
shr
sbb
dec
movl
and
sbb
xchg
add
cs
dec
outsl
lods
pop
mov
xchg
int3
int3
out
shll
mov
cmpsb
push
push
xchg
cmp
and
mov
movl
lcall
cmp
lahf
std
and
aam
ret
imulb
push
mov
test
pop
stc
mov
outsl
pop
mov
int3
sub
stos
sub
pop
mov
fnclex
test
pop
mov
div
sub
push
les
jecxz
jbe
and
mov
mov
or
fidivrs
mov
jg
and
sbb
xchg
jp
pusha
inc
pop
adc
xchg
mov
push
cmp
scas
jg
andl
jae
popa
adcl
sub
push
mov
sbb
out
mov
in
sub
test
scas
xor
add
mov
das
loop
es
mov
lods
aas
imul
xchg
cmp
ja
call
push
pusha
xor
outsb
mov
mov
xchg
sbb
pop
orb
lea
dec
push
enter
mov
aas
ficomps
gs
iret
jns
adc
sbb
gs
inc
jl
lods
shrb
push
test
inc
xchg
fwait
xor
or
das
xor
and
int3
and
xor
and
aaa
mov
pop
sahf
add
add
mov
mov
adc
fdivrl
jae
pop
add
gs
xor
pushf
sub
lahf
into
mov
push
hlt
repz
jns
jae
sub
stos
out
xchg
jge
fucomi
pop
sub
arpl
test
push
pop
pusha
push
in
mov
pop
mov
inc
ss
int
fwait
pop
ficoms
rcrl
lods
xchg
or
imulb
adc
mov
cwtl
xor
jge
test
jo
into
dec
scas
dec
push
cwtl
sbb
xchg
lret
pop
stc
inc
or
lret
push
in
push
dec
push
mov
xor
outsl
push
pop
sbb
aad
fwait
dec
pop
cmp
cmp
cmpsb
jecxz
mov
xchg
mov
sbb
sbb
scas
sti
pop
push
dec
in
mov
out
pop
dec
add
xor
iret
pop
adc
dec
pop
mov
mov
sahf
mov
out
das
mov
mov
sub
mov
orl
ficomps
fcmovnb
jecxz
pop
mov
aam
cmp
imul
sbbl
ja
push
push
and
in
add
popf
std
popf
jmp
mov
add
jge
mov
adc
cmpsl
pop
inc
lret
imul
addl
faddl
icebp
call
aaa
jle
das
cld
inc
fldcw
and
pop
js
push
sub
enter
cwtl
aaa
icebp
cwtl
mov
add
xchg
sub
into
adc
aam
shlb
adc
or
push
ret
test
adcb
or
repz
mov
loopne
out
cmc
js
xor
push
push
xchg
dec
pop
fs
jle
out
adc
sub
inc
and
dec
aas
pop
test
cmp
dec
mov
out
outsl
repnz
add
bound
mov
pop
notl
clc
es
or
popf
mov
and
pop
subb
lock
leave
mov
sub
inc
jno
mov
ret
add
jle
inc
aaa
repz
pop
call
pop
cmp
icebp
mov
pop
cmc
cmp
iret
and
cmp
lahf
lcall
cmp
dec
sbb
shlb
adc
std
adc
add
dec
push
mov
insl
cmp
loopne
xor
add
lds
pop
jns
mov
jnp
dec
imul
xor
cmp
jge
call
xchg
sbb
ret
fsub
fildl
ficomps
xchg
mov
mov
insl
dec
gs
sub
lret
aam
and
loope
nop
xchg
jno
mov
idivl
clc
and
adc
outsb
into
xor
mov
bound
sub
xchg
jae
movsl
int
and
lock
pop
cmpsb
mov
icebp
testb
mov
popa
xchg
mov
or
jmp
adc
pop
imul
or
std
ljmp
les
ja
xchg
jg
aad
loope
loope
jmp
sbb
cmp
adc
mov
mov
data16
sbb
out
adc
ret
inc
and
ret
in
andl
mov
add
jb
addr16
mov
mov
xchg
push
inc
cmp
fcom
jge
pop
xchg
inc
xchg
push
jle
push
int
in
mov
pop
push
imul
inc
cmpsl
jl
rcrb
cwtl
psllw
cmp
sbbl
dec
movsb
fs
out
gs
add
insl
pop
adc
out
int3
fsub
mov
leave
daa
in
push
push
lock
stos
mov
jnp,pt
adc
adcl
cmp
mov
aam
add
cld
mov
push
xor
test
cs
and
mov
push
pop
and
mov
arpl
inc
inc
lcall
dec
cmp
jmp
out
cld
xchg
mov
outsl
out
xor
mov
cs
xor
aaa
and
into
cmp
mov
fcoml
sub
rcll
push
add
jns
out
sbb
ja
pop
lcall
or
cmp
fldl
cmc
nop
xor
xor
sbb
mov
xchg
movl
mov
ret
pushl
add
or
push
dec
cltd
mov
push
dec
in
insb
addl
xchg
iret
or
scas
ss
sbb
add
jae
out
mov
inc
insl
sbb
inc
pop
inc
scas
inc
adcb
mov
fsubr
lcall
fstp
mov
mov
mov
out
loope
outsb
das
in
and
inc
sbb
dec
mov
mov
iret
scas
out
icebp
je
and
mov
jns
nop
xchg
cmpsl
jmp
mov
cmp
xchg
inc
jbe
adc
cmp
xor
sbb
subl
pop
cmc
nop
fimuls
loopne
into
mov
jmp
mov
fwait
mov
in
cmp
mov
sti
dec
subl
mov
adc
dec
and
mov
xor
aad
inc
loop
push
add
sahf
fidivs
test
out
mov
loop
jnp
xchg
movsb
fldcw
insl
push
mov
std
mov
in
cmpsb
jno
lret
mov
mov
push
pop
fs
dec
or
int
jp
out
jb
xor
dec
fcmovbe
jmp
in
pusha
and
imull
lds
repnz
fsubrl
dec
mov
add
mov
fisubrl
int3
ret
xchg
dec
xchg
push
lds
stos
and
mov
daa
cli
xor
jg
push
popa
xor
cli
sub
sub
mov
ret
js
pop
ss
xlat
sub
mov
xor
xor
enter
mov
mov
hlt
jmp
notb
adcb
loopne
adc
mull
dec
inc
in
adc
aad
inc
mov
push
inc
push
xchg
aam
gs
xchg
mov
add
push
int
xchg
sub
sub
int3
mov
fs
pop
shrl
jle
repz
popf
push
xchg
je
in
mov
push
aaa
lock
sub
pusha
pop
cmc
dec
ja
or
fnstcw
test
mulb
mov
outsl
enter
pusha
andb
nop
cmpsb
inc
data16
xlat
or
mov
or
mov
mov
ja
into
imul
xchg
dec
repnz
loope
mov
push
sub
inc
lock
push
push
loop
mov
pop
cmp
mov
push
not
xor
popf
push
adc
sub
popa
cmp
aas
dec
dec
imul
pop
cmp
push
scas
aaa
repz
shll
sub
mov
icebp
sub
xchg
mov
adc
dec
les
es
pop
nop
arpl
or
popa
lods
cld
inc
pop
jae
mov
in
fists
inc
orb
sarb
divb
inc
xchg
push
aaa
shr
xor
cmc
dec
cmp
out
adc
pop
dec
mov
ds
leave
push
xlat
adc
or
mov
mov
mov
je
mov
arpl
xchg
cli
cmp
mov
roll
fistpl
push
and
sub
lahf
imul
xchg
jb
bound
aam
es
les
push
mov
nop
notl
dec
xor
and
test
xor
fisttpl
add
push
in
and
sbbb
mov
mov
sbb
stos
cmp
sbb
adc
lea
arpl
xor
movhps
push
enter
and
aad
rorb
testb
adc
gs
notb
inc
bound
or
xchg
sbb
ds
aas
cmp
js
add
push
loopne
xchg
hlt
aas
aas
pmuludq
add
gs
pop
test
shl
test
dec
adc
mov
outsb
test
mov
dec
add
add
popa
jl
push
imull
fwait
push
or
fstps
pop
jns
push
pusha
repnz
lock
out
in
sub
jl
adc
cltd
pop
or
and
inc
call
add
dec
and
fucom
cli
push
pop
mov
mov
push
cmp
ror
movsl
imul
xor
into
inc
pusha
pop
fcmovb
sbb
inc
fadds
test
sbbl
jge
jge
sub
fstl
or
rcrb
test
inc
mov
ljmp
pop
mov
sub
int3
js
pop
mov
or
pusha
jns
mov
out
lock
xchg
movsl
jl
clc
mov
cli
fsubl
adc
es
pop
pop
xor
mov
and
sub
mov
ret
dec
push
sub
shlb
pmullw
xchg
es
mov
lret
or
leave
jmp
dec
repnz
jle
push
mov
dec
andl
mov
inc
enter
mov
les
mov
xor
pop
cmpsb
std
xchg
cmp
scas
mov
xchg
stc
push
test
inc
sbb
scas
shlb
jp
and
sub
push
sbb
frstor
ret
adc
ret
int3
sub
fucomp
out
inc
and
xchg
adcb
test
mov
or
push
sti
shlb
clc
nop
test
cli
cmp
int
popf
punpcklwd
jge
mov
ret
push
ret
or
jmp
jl
repz
fnstenv
sbb
sbb
push
pop
sbb
lods
scas
out
and
insb
adc
outsl
dec
insl
cwtl
jg
cli
mov
cmp
cwtl
mov
mov
pop
add
scas
xchg
sahf
inc
cmp
adc
hlt
faddl
mov
out
xchg
jl
adc
mov
pushf
adc
stos
mov
cmpsl
jne
jne
mov
sub
insl
xchg
add
add
mov
lret
fst
xor
mov
loop
cmpps
cmpsb
cs
push
sub
lahf
add
aaa
lcall
iret
inc
lret
imul
jg
sbbl
jmp
gs
rcrb
icebp
mov
add
dec
pop
cltd
pop
mov
rcrb
mulb
and
lcall
add
shrl
movsb
dec
add
dec
iret
hlt
cli
mov
scas
mov
fdivp
cmp
push
sbb
into
mov
jmp
sub
push
lods
imul
cmp
aam
jge
out
jae
aas
lds
ja
addr16
fnsave
les
adc
pop
jb
mov
add
xorb
cs
daa
ret
jmp
mov
test
dec
pop
int3
pop
pushf
lahf
mov
mov
mov
jnp
mov
jge
jbe
shl
xchg
and
movsl
fidivl
pop
mov
or
sarl
jns
mov
jnp
imul
icebp
push
in
cmp
out
mov
xchg
fcmove
sub
xchg
push
add
call
jnp
sub
leave
mov
sbb
inc
dec
or
adc
icebp
stos
push
fcoms
lods
mov
imul
sbb
cmp
dec
hlt
xchg
mov
xor
sbb
mov
push
data16
jecxz
fmull
fisubs
int
mov
cmp
and
sub
fs
inc
fisubs
push
fbstp
add
sub
sbb
cmpsl
test
cwtl
jns
cmpsb
push
cmpsl
es
mov
loop
sbb
fimull
push
mov
push
rorl
cmp
and
sahf
sysexit
hlt
lret
rorl
in
xchg
xchg
mov
mov
cmp
inc
adcb
rclb
mov
sbb
stos
jbe
aad
cmpsl
test
adc
in
jbe
jae
pushf
pop
int
sbb
sub
test
add
bound
lods
jns
jae
test
js
test
jo
pop
jne
jg
jmp
sbb
gs
mov
ss
cmp
xchg
push
ss
jbe
add
or
mov
jb
insl
or
mov
adc
cmp
cmc
inc
lods
stos
cmpsl
test
fcoml
xchg
sub
and
xchg
xchg
mov
jp
out
aam
push
addps
adc
in
mov
xor
stos
dec
ret
sti
xor
sbb
dec
mov
cwtl
aaa
sarb
fwait
mov
std
scas
jle
mov
mov
in
adc
fnop
xor
inc
mov
xchg
xlat
dec
or
pop
cmp
inc
push
and
fstpt
dec
into
sbb
fists
and
push
sbb
xlat
lds
sbb
xorb
rolb
mov
fwait
sub
mov
pushf
xchg
mov
movsl
subl
cmp
push
ss
in
inc
xlat
repz
pop
ljmp
repnz
fiaddl
repnz
adc
pop
mov
pop
shl
adcb
pop
iret
mov
cmp
push
adc
mov
mov
push
or
push
push
ds
add
insl
inc
stc
jle
les
vphsubbw
inc
push
aam
xor
cmpsl
test
inc
sahf
dec
xchg
pop
sbb
insl
not
push
cmp
aad
jge
mov
mov
jecxz
frstor
sub
test
pop
sti
insl
mov
out
popa
mov
pop
fistl
mov
repz
outsb
mov
jae
add
cld
outsb
sbb
ja
jo
xchg
iret
mov
push
out
aam
cmp
orb
lods
jl
adc
js
cwtl
popf
inc
inc
sub
daa
clc
cmp
call
mov
add
mov
mov
mov
inc
imul
pop
hlt
fisubrs
xchg
mov
leave
cmc
add
out
and
fisubrs
cmpsl
mov
xor
jp
adc
bound
das
call
xchg
jns
andb
add
loope
and
or
addr16
pop
ficomps
cmp
mov
pop
sbb
neg
sub
iret
adc
sub
test
fistpll
insb
adc
push
jbe
sahf
and
xlat
daa
push
imul
cmpsl
icebp
bound
and
mov
addb
stc
aad
pusha
ret
aas
xchg
aad
in
push
sub
mov
push
xor
jo
adc
cmp
idivl
adcb
cmpsl
cmp
mov
movb
sub
add
enter
push
xor
imul
loopne
jl
outsl
adc
into
shlb
insb
aaa
add
add
cmp
rcrb
push
sbb
lock
dec
ret
dec
push
cmp
or
jnp
jae
repz
jb
and
dec
xor
xlat
cs
mov
mov
mov
mov
out
sbb
and
push
push
xchg
dec
pusha
ret
jns
sti
movsl
and
in
add
xchg
addb
sbb
stos
mov
pop
rorl
push
stos
mov
jne
mov
push
jecxz
icebp
xor
inc
push
out
test
imul
sbb
cltd
cmpsb
mov
xchg
in
jge
insb
lahf
movd
mov
mov
iret
xchg
dec
jo
movsb
xchg
into
jb
cld
das
xor
lcall
add
xor
xchg
or
shlb
pop
fstpl
push
cwtl
mov
test
push
push
lcall
in
fimull
test
jl
or
mov
lods
xchg
clc
sbb
dec
test
test
mov
mov
repnz
cmp
test
sub
leave
or
jns
push
incl
jno
lea
sbb
stc
adcl
cmp
loop
ja,pn
push
jge
ret
sbb
pop
sbb
adc
mov
sub
sarl
xchg
dec
unpcklps
jmp
pop
xchg
or
push
jle
in
fsubrs
and
cmpl
mov
in
add
shrb
inc
neg
fwait
ljmp
adc
cmp
fdivrl
fcmovnbe
lods
jb
sub
add
je
aaa
cmc
repz
rclb
xchg
sub
cmp
aas
inc
sti
sub
rcl
bound
mov
xchg
lods
scas
nop
pushf
mov
jns
mov
arpl
subb
push
andb
cmp
xor
cmpsl
fisttps
bound
addr16
xor
push
idivb
rolb
jmp
std
sub
add
mov
sub
jne
jb
and
testb
cmp
movb
popf
rcrl
ja
ficoml
stos
test
xor
pop
pop
jle
jp
lods
scas
mov
mov
loopne
add
mov
dec
or
mov
cwtl
cmp
push
cbtw
sti
ret
xchg
pop
ss
pop
push
pushf
mov
cmpsb
mov
cmpb
outsl
mov
xor
jae
fnstsw
cmp
and
xor
cmp
push
jp
sbb
out
out
fisubl
xchg
push
scas
std
jbe
fistpl
adc
mov
mov
inc
sbb
icebp
mov
xchg
mov
fdiv
dec
faddl
jnp
jne
push
inc
or
leave
jne
out
jp
ss
popf
aas
mov
test
rorl
mov
nop
or
xorw
fsubp
cmp
sbb
into
imul
iret
sub
pusha
mov
in
cmp
mov
add
vmovupd
mov
lods
and
iret
sarl
jae
pop
sub
inc
cmp
cli
scas
inc
shll
cmpsb
mov
jg
das
lods
or
xor
sbb
pop
or
pop
shll
xor
sbb
leave
iret
roll
mov
stos
push
cmp
out
push
aaa
int3
push
out
pushf
jnp
mov
pop
mov
cmpsb
mov
les
out
jmp
rclb
daa
push
into
pop
ret
push
or
xlat
je
in
cli
lahf
sarl
push
dec
scas
mov
xor
push
mov
insl
data16
iret
fnstenv
cmp
in
das
fiaddl
fldl
xchg
push
pop
scas
sti
mov
lahf
dec
cli
filds
push
hlt
cld
inc
or
lods
xor
inc
bound
lret
fxch
adc
popl
cmp
je
test
rorl
pop
cli
fwait
mov
dec
sub
push
out
pop
cli
daa
orl
jae
scas
sub
test
ret
mov
push
sub
sub
mov
push
shl
nop
cmp
ljmp
pushf
mov
cmpsb
push
pop
icebp
cmp
cmp
mov
sub
scas
movsb
insl
sbb
add
in
mov
sbb
pusha
adc
or
dec
push
adc
imul
mov
cltd
adc
cld
pop
in
lahf
xlat
inc
jo
lock
lods
leave
outsb
icebp
nop
std
call
inc
test
sbb
pop
fmuls
mov
mov
notl
pop
mov
mov
xor
test
rorl
leave
pop
inc
das
ret
mov
mov
das
sti
sub
sarl
insl
flds
setno
and
gs
mov
mov
push
pop
call
imul
xchg
mov
jmp
pop
xor
in
dec
sbb
in
icebp
fsub
call
out
lods
cmp
or
jecxz
subl
mov
add
or
cltd
cmp
leave
fnstenv
cmp
xlat
jbe
out
mov
xchg
inc
dec
insb
bnd
repnz
or
or
inc
es
dec
sub
loope
bound
jae
pop
push
xor
stos
sub
push
loopne
xor
sub
fistpll
cmc
out
xchg
adc
stos
in
lods
push
dec
mov
inc
enter
ret
pop
sub
mov
outsb
inc
sbb
aad
fnstsw
jnp
push
cmpsl
push
xchg
lret
jae
daa
rol
add
out
dec
imul
push
cmp
jb
and
cmpsb
sbb
xor
or
cmpb
daa
adc
ret
into
adc
cmp
xor
orb
cmc
mov
in
daa
mov
pop
sbb
lret
stc
mov
inc
push
cmp
mov
jmp
stos
xor
sbb
dec
ljmp
mov
lret
push
xor
rorb
dec
and
sub
adc
jno
aaa
adc
cmpsb
das
pusha
arpl
pop
insl
lahf
mov
int
xchg
test
xor
hlt
insl
aam
call
loopne
scas
sbb
sbb
pop
idivb
and
cs
lahf
add
ja
sub
lods
mov
inc
rcl
mov
ret
mov
pop
push
stc
cmp
mov
jnp
daa
xchg
lret
outsb
psrld
jle
dec
decb
pop
inc
negb
movsb
inc
sbb
iret
loope
ja
dec
add
in
cmp
mov
mull
out
pop
push
xchg
inc
pop
jecxz
cmp
sub
js
test
xchg
adcb
pop
lret
in
je
push
xchg
lahf
pop
xchg
repnz
shll
ficompl
adc
in
repz
mov
movsb
mov
cltd
cwtl
cmpsl
sub
xor
sarb
dec
cmp
or
sbb
cmp
std
pop
xchg
sub
mov
xor
lret
push
adc
and
cmp
mov
aam
clc
jb
dec
inc
cmp
cmp
nop
jle
add
outsl
cmp
xor
imul
stos
jl
out
dec
adc
mov
in
into
pop
pusha
push
push
pop
xchg
roll
xchg
push
cmp
lods
mov
xchg
ds
popf
mov
pop
lods
and
nop
adc
mov
mov
sub
mov
pushf
pop
and
pop
lds
push
mov
sbb
dec
or
fdivrs
add
push
ljmp
xor
pop
jge
in
fmull
cmp
fidivrl
mov
push
dec
inc
mov
add
aas
pop
lret
xchg
xlat
or
and
inc
mov
mov
xchg
test
xchg
shr
outsb
mov
test
sbb
mov
daa
jnp
xchg
push
mov
ret
mov
clc
xor
mov
mov
cltd
sub
xchg
mov
push
xor
aam
sbb
call
xor
aam
pop
push
push
loop
and
and
nop
xchg
sub
lods
sti
fcmovne
sbb
inc
outsl
out
jle
push
sbb
mov
cltd
je
cmpsl
out
jge
popf
aas
in
fidivs
aad
rcrl
lea
bound
loopne
push
push
bound
xor
outsb
cmp
cltd
add
mov
je
daa
negl
clc
mov
lods
sub
inc
fsubs
js
mov
or
je
jmp
daa
pop
dec
lret
and
outsb
mov
leave
movsl
mov
rclb
cmpsb
pop
jl
mov
adc
sub
or
test
orl
or
push
mov
adc
sarl
insb
daa
inc
add
movsb
and
inc
cli
push
bound
xor
into
lret
repz
dec
div
xchg
push
fs
clc
in
adcl
test
sub
and
repnz
leave
mov
mov
ret
lods
ljmp
jmp
insb
ds
pushf
iret
out
inc
js
xor
jmp
mov
add
or
lret
push
adc
dec
and
movsl
shrd
inc
lds
es
cmp
adc
loop
or
mov
xchg
and
adc
xchg
aam
mov
ss
jo
pop
cmp
ret
cs
adc
xchg
cmc
ljmp
in
lods
je
fisubs
scas
cmp
test
sbb
je
popf
icebp
test
lods
arpl
iret
or
xor
sbb
dec
add
ds
out
or
fldenv
sub
orb
mov
icebp
stc
aam
adc
dec
push
gs
push
jne
adc
inc
lods
adc
fwait
pop
cmp
ret
js
subl
cmp
pop
adc
push
cmp
or
push
outsl
adc
push
jno
add
addr16
aas
mov
adcl
mov
dec
inc
cmpb
jecxz
mov
and
jl
scas
ja
fildll
push
fidivl
sbb
xchg
push
popa
orb
mov
and
iret
mov
or
mov
sub
or
je
hlt
aaa
stos
aad
xor
loopne
mov
lock
xor
xchg
push
stos
pop
mov
divl
rcll
rclb
pop
cmc
stc
push
fidivl
daa
outsl
adc
inc
jae
add
mov
stos
cmp
xlat
push
xor
mov
mov
and
jo
rol
orb
mov
fidivs
int
pop
sub
rcrb
imul
stos
ret
or
or
or
pop
push
push
mov
pusha
shll
aam
aas
mov
xlat
push
mov
xor
lret
jno
adc
xor
lods
gs
enter
cld
or
mov
in
and
js
lcall
scas
xlat
mov
mov
and
sbb
mov
loopne
mov
divl
callw
adc
push
test
jp
sar
add
scas
je
jmp
mov
popf
sbb
in
and
lret
sbb
mov
dec
in
and
je
xor
fstpt
aaa
cmc
out
je
sbb
incl
iret
leave
fildll
push
sub
mov
fiaddl
jns
mov
dec
or
adcb
rsqrtps
outsl
add
shlb
mov
imul
push
mov
or
cltd
xchg
and
dec
xchg
and
lcall
sub
js
stos
mov
ja
inc
sarl
cwtl
xor
ror
out
and
cltd
lcall
xchg
jl
dec
pop
cmp
nop
enter
dec
jb
inc
rolb
mov
push
scas
lods
cmp
push
out
xchg
mov
out
loope
mov
dec
aad
dec
jge
fmull
mov
inc
pop
push
inc
pop
enter
ljmp
shld
test
sbb
mov
shll
sbb
add
xor
inc
push
popf
mov
jmp
push
cmp
outsb
aaa
hlt
and
push
cltd
push
mov
lea
cmp
or
mov
xor
mov
cltd
orb
push
sub
shlb
lea
adc
cmp
fidivrs
lods
in
adc
out
or
cmpsb
dec
dec
in
sarb
fcoml
cmp
pop
out
push
mov
or
ret
or
add
dec
add
push
xlat
inc
fbstp
icebp
aaa
les
gs
std
stc
push
cmpsb
pop
sti
cltd
ss
jl
add
jp
loope
into
jns
xor
call
add
inc
aad
lods
flds
in
out
sub
hlt
dec
add
mov
test
sub
or
mov
cld
ja
popf
pop
push
outsl
push
lods
cwtl
jmp
push
adc
mov
dec
pop
in
into
fs
xor
clc
jne
jb
xchg
sbb
pop
pop
mov
xor
addl
pop
fnstenv
rol
jae
mov
cmp
test
into
pop
mov
iret
aam
enter
frstpm(287
push
insl
inc
es
ficoms
sub
stc
and
scas
pushf
xchg
lds
adc
mov
enter
push
imulb
insl
adc
mov
sub
fwait
jmp
mov
orl
cld
cld
pop
dec
mov
mov
es
ret
jns
ja
fs
adc
loope
rorb
sub
out
push
push
fucomi
add
daa
push
cmpsb
dec
xchg
mov
xchg
int3
idivb
scas
in
mov
ret
xor
hlt
or
mov
hlt
xor
xor
xchg
xchg
cmpsl
adc
jo
sbb
ljmp
xchg
mov
mov
xor
pop
mov
dec
pop
push
lret
push
ret
mov
fdivs
lods
daa
xlat
incb
in
inc
xor
stos
aad
cmp
testl
popf
adc
les
imul
pop
mov
xchg
lahf
inc
sbb
gs
sahf
push
jg
push
mov
stc
dec
jno
pop
xor
nop
sbb
mov
push
sahf
sub
aam
in
movsb
int3
dec
orl
shlb
jmp
dec
push
or
push
mov
mov
jae
add
int
fstps
mov
enter
out
iret
pop
ret
pop
cmpsb
cli
testl
mov
push
push
or
mov
fstps
jecxz
pop
and
mov
cmc
inc
das
xor
lock
or
and
mov
stos
ss
aad
aad
dec
and
call
dec
or
scas
loope
xchg
rcr
dec
int3
sub
jge
lea
repz
sub
iret
lods
nop
rcl
ret
add
cld
add
push
inc
adc
arpl
mov
testl
loopne
movsl
leave
das
mov
out
mov
pop
xor
inc
cli
pop
fadds
mov
sahf
mov
jg
leave
subb
aaa
xchg
pop
sub
fstp
dec
and
loope
sbb
call
cmp
mov
enter
lods
mov
pop
xchg
push
xor
mov
subl
push
xor
ss
in
xchg
mov
lods
and
jle
inc
clc
pop
loope
fcmovb
mov
addr16
jnp
ds
or
rolb
aam
push
daa
dec
fadds
sub
insb
push
stc
outsb
mov
xchg
aam
sti
dec
mov
pop
loop
push
pop
or
xor
pop
addb
daa
adc
mov
insl
out
out
fmull
push
testl
push
ret
repnz
fbstp
push
mov
repnz
xor
pop
xchg
mov
test
lahf
inc
or
das
fmuls
ss
popf
xchg
fidivrl
shl
push
ljmp
daa
dec
inc
vpunpcklbw
gs
xor
popa
iret
jns
rcrl
int
int
adc
xchg
jp
cli
pop
pop
lret
arpl
push
faddl
push
sbb
cmp
out
cli
xor
test
aas
iret
jmp
shrl
mov
jo
hlt
mov
mov
sub
out
ljmp
test
cmp
mov
and
rorb
popf
ret
mov
mov
lds
push
in
fs
fs
rolb
adc
jg
mov
cmp
push
cld
dec
clc
jg
je
pushf
mov
xchg
repnz
pop
sbbb
andb
mov
test
cltd
mov
sti
fdivrs
ds
ret
hlt
push
jl
fadds
sahf
jmp
cwtl
adc
scas
jmp
push
push
or
adc
rolb
fcoms
push
inc
iret
test
jbe
xchg
pushf
mov
mov
adc
jge
sub
adc
cmp
adc
test
cli
test
shll
mov
cs
gs
mov
ss
or
mov
push
nop
lret
and
lahf
pop
xchg
mov
cld
cmc
push
lret
loopne
sub
sub
sbb
popa
jb
mov
jnp
nop
push
mov
pop
pushf
jo
lret
vpshlq
rorb
cmovne
out
jnp
pop
outsb
out
jp
pop
clc
sahf
imul
mov
data16
out
lcall
dec
push
pop
jb
cmp
add
pop
jne
sub
ffree
jl
scas
sub
mov
push
xchg
mov
negb
xchg
pop
xchg
jno
sub
xchg
mov
leave
mov
gs
mov
clc
xor
insb
pusha
aam
xorl
push
pop
cmp
je
mov
dec
push
mov
push
inc
test
fbld
pop
push
fldcw
sti
xorl
xor
and
shufps
mov
lea
cmpl
loope
popf
push
btr
inc
pop
ljmp
cmpsb
sti
mov
push
ja
mov
aad
push
dec
and
mov
in
sbb
mov
xchg
and
outsl
fldcw
mov
jl
pop
xor
cmp
pop
mov
mov
clc
shrb
cmpsb
mov
notl
cwtl
fisubrl
mov
add
adc
pop
ja
in
pop
repz
test
ds
and
cmp
imul
mov
mov
repnz
aaa
inc
pusha
inc
adc
inc
jo
dec
lret
cmp
test
jbe
fidivrs
incb
fmul
dec
nop
repnz
enter
add
mov
inc
enter
mov
push
ja
gs
ret
loopne
pop
adc
push
fcoms
fcmovne
mov
mov
jge
inc
insl
mov
push
data16
lret
mulb
mov
sbb
push
addr16
stos
pop
dec
xlat
xor
into
cwtl
sbb
ficoml
pop
xchg
jle
or
mov
insl
xor
sub
dec
inc
mov
stc
aad
shrb
and
push
pop
mov
push
out
ja
cmp
pop
push
mov
xorl
add
jb
sbb
xchg
lods
pop
sbb
sarl
stos
xchg
sbb
mov
movsb
data16
js
leave
jns
arpl
fs
pop
xor
loope
adc
push
jp
lahf
xchg
inc
nop
stos
jecxz
push
jnp
in
rcrl
cmp
jno
jns
xor
loopne
jae
in
xchg
adc
repz
int
pusha
scas
mov
enter
fdiv
jb
in
sub
sbb
pop
xchg
je
pop
push
xchg
scas
xor
lret
xchg
xchg
lcall
decb
push
push
mov
fcmovu
fildl
inc
cmpsl
push
mov
ljmp
pop
inc
pop
dec
mov
cltd
fcom
cmp
mov
sbb
pop
das
sbb
add
subl
sbb
cltd
je
push
cmp
push
sti
je
inc
push
addr16
adc
fisubrs
out
jns
stos
subl
xor
xorb
mov
fiadds
adc
stos
or
insb
arpl
add
mov
hlt
cmp
inc
roll
arpl
stc
mov
repz
pop
and
shl
or
fwait
mov
fidivs
sub
hlt
mov
fisttpl
orl
mov
inc
fwait
adc
test
cmc
jl
ret
cwtl
dec
and
mov
ja
push
xchg
leave
mov
add
loopne
ljmp
or
in
repnz
aam
mov
faddl
mov
dec
loop
testl
cmp
mov
daa
imul
stos
mov
out
sbb
mov
test
jle
addr16
daa
call
call
inc
mov
cmp
scas
and
or
ret
ljmp
xor
jmp
mov
std
dec
push
push
pop
sub
sub
hlt
pop
ret
cld
inc
push
mov
cmpsl
jmp
out
je
sub
push
decl
adc
dec
inc
sbb
pop
mov
loop
cltd
mov
jge
aas
int
out
fdivrl
outsl
js
js
icebp
cmp
enter
clc
setl
outsl
fcmovne
add
pop
rcrl
mov
lods
sbb
and
sub
push
mov
sub
jecxz
or
rclb
mov
xlat
mov
lock
jp
repz
add
push
and
inc
inc
and
xorl
shrl
add
push
pop
xchg
test
movsl
sbb
push
push
push
aaa
fs
or
ror
dec
jae
adc
arpl
dec
in
xor
push
rcll
cli
mul
xor
push
pop
inc
xchg
mov
aad
or
sub
fs
jae
ljmp
int3
testl
out
xor
fldcw
inc
mov
dec
mov
shr
test
mov
adc
xchg
adc
fs
je
jne
pop
les
das
xchg
mov
xor
cmpsb
aad
inc
pop
addr16
inc
dec
call
out
addr16
movsb
dec
mov
divl
push
shlb
std
out
and
cmpsl
xor
dec
sub
ja
lds
fsubrs
mov
mov
cmp
xchg
adc
mov
imul
adc
sbb
xchg
mov
es
test
das
leave
mov
inc
inc
jg
pop
sarb
xor
push
mov
adc
xchg
pop
sub
popa
sub
into
je
in
sub
inc
pop
and
lcall
or
jecxz
mov
sbb
cmp
call
bound
dec
xchg
jb
inc
mov
push
nop
ljmp
sub
out
pop
stos
clc
mov
mov
sub
xchg
outsb
xchg
imul
push
sti
setl
inc
cmpsb
repz
mov
scas
mov
fiaddl
xor
mov
adc
add
test
mov
fwait
push
mov
lods
push
xchg
jno
add
aam
push
leave
test
jge
imul
es
or
mov
in
pop
dec
add
pushf
data16
movsb
sarb
pop
sti
push
or
les
dec
jecxz
mull
pop
leave
cmp
scas
in
in
xchg
mov
mov
push
ljmp
mov
xchg
jnp
std
xor
cmp
fwait
pusha
jmp
inc
sub
loope
and
pop
lahf
pusha
shl
call
push
xorl
icebp
lcall
ficoml
mov
lcall
push
sbb
in
les
push
cmp
rep
sbb
jg
call
and
cmp
enter
adc
outsl
aad
rol
fidivrl
mov
xor
push
out
mov
les
jns
mov
and
or
xchg
sub
inc
stc
rcr
shl
add
es
outsl
jb
jb
fcompl
add
sbb
or
pop
aad
ljmp
icebp
jne
pop
or
rolb
fadds
imul
or
adc
push
sub
jecxz
fsts
dec
ja
push
mov
icebp
insl
hlt
int3
jbe
or
mov
mov
insl
dec
mov
int
in
imul
pop
call
adc
lock
push
shl
or
jmp
jmp
cmpsb
push
pop
jae
sbb
das
inc
xor
js
adc
cs
mov
jg
aaa
or
xor
jne
mov
loope
jae
or
movsb
pop
lds
xchg
sub
push
mov
xor
ds
sub
mov
cmpsl
mov
or
inc
stos
test
fwait
jle
add
or
dec
iret
and
sub
decb
push
jns
adc
in
dec
pop
fwait
xchg
sbbl
adc
xchg
xor
popf
sbb
fistpl
dec
pop
mov
popaw
lds
fcoms
cmpl
mov
int3
or
mov
iret
arpl
mov
jbe
movsb
jmp
enter
pushf
fldt
mov
aad
jnp
fidivs
sti
insl
push
jb
mov
add
popa
add
mov
mov
movsl
mov
pop
adc
stos
mov
pop
lods
imul
adcl
dec
mov
xchg
dec
lea
jae
mov
mov
outsb
stos
sbb
pop
lret
lahf
insb
or
cmp
jbe
pop
fmuls
scas
or
adc
in
aam
pop
and
mov
popa
das
dec
aas
or
dec
xor
cmp
cwtl
dec
repz
inc
push
lods
sub
mull
mov
or
fistpll
cmpsl
jnp
cmc
jno
pop
cld
xor
pop
or
dec
cmpb
push
mov
sbb
leave
sbb
xchg
mov
push
jp
repz
push
mov
jl
cmp
xor
xchg
idiv
orb
push
jecxz
mov
mov
sub
aaa
fnstsw
add
iret
test
sbb
xor
jge
sbb
cld
dec
and
adc
cwtl
sbb
jb
fisubl
mov
or
push
push
pop
jl
sbb
dec
jne
pop
ret
jnp
incl
popl
lock
xchg
push
or
cs
or
adc
das
adc
pop
mov
nop
test
out
mov
sbb
push
movsb
and
mov
dec
aam
mov
es
cmp
cwtl
andl
mov
mov
cmp
loope
mov
das
jno
cmpb
xlat
jno
cwtl
lea
out
rorl
daa
adc
icebp
aam
lock
mov
mov
stos
ret
aaa
dec
pop
pop
cmp
iret
cli
xor
int3
jne
mov
pop
test
inc
mov
push
out
fsubrs
cmp
mov
sahf
lahf
xor
inc
dec
sbb
sarl
add
inc
and
ljmp
add
rorb
int3
ja
ror
fadds
and
bound
inc
jns
mov
gs
das
inc
aad
aam
popa
mov
cmp
xchg
in
jl
xchg
outsb
mov
lea
aam
or
pushf
iret
jl
push
repz
xor
in
insl
push
fwait
aaa
int3
flds
mov
mov
lcall
or
pop
mov
ret
mov
push
sti
adc
fwait
cmp
add
lods
add
mov
xchg
cmc
xor
inc
scas
gs
push
test
jb
pushf
and
enter
addr16
push
rorb
addr16
cs
mov
pop
addb
lcall
ljmp
rolb
popf
add
subb
hlt
jnp
dec
insb
bound
sbb
pushf
lahf
or
outsl
cmp
jp
cmc
out
adc
lret
cmpsb
mov
jl
or
fildl
add
les
mov
icebp
out
das
add
cmp
filds
push
sti
dec
dec
push
adc
int
or
rorb
adcl
hlt
test
mov
mov
sub
sub
cmpsb
cs
movsl
ret
xor
int
dec
mov
jae
xchg
loope
dec
pop
xchg
pop
icebp
and
leave
ret
mov
pop
test
mov
lret
sub
push
or
lret
add
pop
into
jae
aam
pop
lods
lds
call
and
mov
sbb
es
ret
sbb
das
pop
ja
test
or
adc
ss
add
popa
lret
je
repz
pop
push
add
pop
or
xchg
inc
xchg
aaa
xchg
xor
in
scas
sahf
inc
add
mov
shll
inc
es
in
add
xchg
push
xchg
pop
push
je
aaa
pushf
add
dec
cld
mov
pop
dec
outsb
and
and
sbb
orb
rcrb
ret
mov
test
fdiv
cmp
dec
stos
mov
add
inc
not
dec
fcoms
aaa
mov
jo
cmp
adc
loope
sarl
clc
inc
mov
mov
adc
xchg
sbb
xor
std
sbb
xor
loop
xor
test
xchg
jmp
imul
sti
adc
adc
inc
xor
pop
dec
sahf
mov
mov
pop
inc
rcll
mov
bound
push
jmp
cmp
rcr
scas
in
fstpl
fnstenv
cmovbe
and
repz
push
mov
push
vmovaps
enter
jne
add
imul
rolb
fadd
insb
lods
sbb
shrb
test
aam
sbb
in
bound
jns
in
or
imul
mov
aam
or
insl
cmp
inc
test
iret
pop
out
or
xchg
inc
shrb
movsb
sub
cli
aad
scas
call
arpl
adc
in
leave
hlt
mov
or
mov
call
jl
dec
ds
add
fnstcw
fs
bound
fsubl
clc
frstor
or
or
and
rcrl
inc
stos
pop
cltd
fdivrs
subl
pop
lret
nop
loopne
les
popa
sub
nop
cmpl
xchg
mov
jbe
jae
je
arpl
jmp
pop
sub
jo
xchg
jbe
add
or
dec
test
and
sbb
push
mov
xchg
call
iret
outsb
testb
dec
das
mov
ja
jne
push
mov
imul
inc
mov
insl
cmp
ret
push
pop
hlt
xor
fldl
inc
xor
out
xor
jecxz
test
mov
cwtl
out
popa
cwtl
mov
cli
movl
add
push
or
out
movsb
cltd
mov
mov
adc
mov
in
adc
in
push
es
jge
popf
xlat
xchg
xchg
arpl
repnz
lods
pop
popf
jle
cmp
ss
cli
mov
mov
xor
push
dec
shrl
adc
stos
rcrl
push
sub
sbb
sbb
sahf
pop
ret
push
jnp
add
aam
lds
in
insb
push
inc
insb
imul
popa
cltd
pop
dec
imul
ljmp
popa
and
int
xchg
sar
dec
aaa
mov
scas
mov
mov
or
je
dec
jge
js
scas
xchg
add
insl
add
dec
pop
shrl
sub
stc
ljmp
outsl
and
jle
mov
inc
adcb
add
add
push
out
in
xor
sub
aaa
in
xor
xorb
adc
call
lea
sub
inc
sti
cmp
mov
test
and
shll
cmpl
sbb
cmp
lock
mov
mov
cmp
mov
or
xor
mov
enter
dec
imul
and
bound
cmp
mov
or
insl
cli
inc
xlat
jbe
in
imulb
mov
and
pop
iret
out
out
adc
pop
mov
cmp
movsw
stos
mov
cli
repnz
cmc
xor
outsb
add
in
add
test
jae
lahf
movsb
sub
loop
inc
cmp
mov
adc
lret
xor
fwait
aam
sbb
iret
xor
xchg
push
dec
pop
lds
daa
mov
or
out
lds
daa
mov
adc
inc
aad
mov
mov
xchg
inc
ret
mov
cwtl
int
push
stc
xor
sub
aam
repz
roll
xor
xchg
mov
mov
lret
add
test
or
js
or
mov
repnz
lret
dec
data16
sahf
xchg
sbb
jecxz
push
aas
addr16
fstl
shll
adc
stc
add
loopne
push
adc
add
iret
dec
lret
in
fidivrs
dec
jmp
xchg
mov
lea
and
call
cld
pop
inc
fdivl
pop
jo
cmp
flds
daa
or
sbb
mov
xchg
out
mov
xor
dec
fidivrl
imul
fldenv
sub
add
xchg
and
adc
inc
xchg
subb
inc
push
decb
pushf
jns
mov
mov
ss
sbb
jg
into
pop
xchg
mov
ret
cmp
lods
ret
rcr
lods
jmp
mov
xchg
xchg
mov
jne
pop
push
dec
enter
popf
mov
ficompl
mov
xchg
mov
mov
sti
ret
pusha
push
sub
mov
jp
ss
stos
mov
xchg
addr16
sub
js
and
sarl
push
jne
in
in
cmp
cmp
xchg
test
mov
push
std
push
out
ss
push
lcall
mov
add
push
rolb
adc
mov
movl
or
sarl
mov
fisttpll
out
aaa
push
mov
cli
push
adc
and
xchg
mov
mov
and
aad
sbb
inc
or
mov
push
enter
adc
repz
lods
mov
popa
test
cltd
test
mov
roll
movsl
pop
repz
mov
fsubrl
subl
mov
fstp
aam
jl
xor
add
loopne
push
movsb
ja
inc
adc
push
sbb
adc
cmpsl
iret
mov
jns
sub
cmpsl
movsb
shl
rclb
xchg
mov
aad
cmpsl
add
je
jno
xchg
das
stos
or
ss
sub
dec
mov
cmpsb
lret
sub
and
inc
insl
adc
jbe
cli
daa
mov
mov
cmp
ds
sahf
dec
pop
xorl
lock
repnz
jne
or
loope
mov
sbb
rol
jno
xchg
lock
mov
xor
or
out
xchg
ja
jle
clc
push
fcoml
cmp
mov
push
cmpsl
add
pop
or
out
mov
or
pop
pop
cmp
pop
add
xchg
movsl
and
sub
ja
sub
repz
mov
xor
jge
nop
and
cmp
imul
and
mov
iret
adc
addr16
stc
dec
pop
push
add
jecxz
xchg
mov
sbb
jne
mov
hlt
aad
dec
sub
pushf
mov
pop
sbb
jecxz
mov
push
jmp
into
inc
fucomp
dec
mov
jns
inc
push
mov
mov
imul
cld
xchg
adc
lods
test
push
mov
dec
cmp
lock
imul
or
dec
push
pop
out
lds
pusha
into
repz
mov
inc
aad
in
pushf
push
xor
les
pusha
pushf
jne
jno
fldcw
xor
scas
test
nop
orb
es
mov
xlat
or
loopne
test
in
setns
aaa
mov
stos
jg
jecxz
adc
mov
sahf
pop
cmc
mov
in
sbb
ss
hlt
jbe
imulb
mov
imul
inc
inc
mulb
mov
std
test
push
and
fadd
pusha
cmp
iret
mov
jp
clc
ret
inc
pop
mov
out
sti
fldt
mov
cmp
xchg
or
dec
sbb
pop
adc
xchg
jno
leave
in
cs
push
adc
mov
jge
arpl
popf
call
aaa
inc
and
jecxz
mov
repnz
rcrb
movsb
std
push
xchg
xor
das
mov
imul
cli
mov
dec
hlt
sub
push
xor
aad
or
iret
jp
rcr
xchg
and
fsubr
lods
add
mov
int3
jbe
ret
sub
inc
or
lock
pushf
cmp
or
stc
movsb
xchg
push
adc
xchg
xor
sub
stc
fwait
es
aam
cmp
xor
or
movsb
movsl
mov
pop
addl
dec
or
xor
adc
xchg
add
xchg
loopne
inc
jno
or
jno
xlat
cmp
sti
int
movl
adc
mov
rorb
cmpsl
fs
dec
push
stos
sahf
and
sti
stos
cs
pushaw
bound
rorb
js
pop
mov
sbb
test
push
testl
fistps
fadd
or
pop
pop
jmp
pop
mov
fwait
sub
ret
cmp
adc
rcrl
adc
pop
stos
pop
push
jp
cmc
out
push
jmp
cmp
xor
pop
fimull
adc
and
in
or
lds
popf
xchg
rolb
mov
cwtl
xchg
sub
aam
divl
pop
add
int
cltd
jne
jmp
rcll
xchg
insl
ljmp
leave
scas
daa
cmp
dec
and
mov
adc
ret
lret
mov
cmp
xor
sahf
in
js
sahf
xchg
sahf
out
popf
mov
mov
mov
into
dec
mov
arpl
or
push
inc
cltd
cmc
outsb
xlat
fdivrs
xor
mov
in
cmc
lods
cltd
xor
sbb
mov
aas
cltd
ja
cli
cmp
dec
inc
aad
xchg
subb
das
out
cwtl
and
inc
fucomip
jl
bound
pop
addl
mov
adc
and
mov
imul
cli
dec
lret
sbb
ret
iret
imul
jl
mov
imul
xor
leave
mov
fwait
xchg
push
data16
repz
mov
out
adc
pop
aas
fmuls
lea
mov
mov
mov
mov
cltd
mov
clc
mov
scas
into
imul
bnd
and
ljmp
add
pop
add
stc
divb
in
push
mov
leave
push
out
out
mov
mov
mov
xchg
cltd
push
cwtl
lcall
mull
mov
stos
jo
roll
mov
cs
inc
jmp
sbb
daa
cwtl
rcll
js
jne
jle
fidivs
cmp
lea
lods
in
mov
sbb
movsl
jne
jae
data16
mov
repz
out
out
xchg
lcall
pop
push
sub
cli
mov
mov
add
sbb
xor
cmp
insl
inc
out
out
pop
sub
fbld
aaa
daa
mov
stos
mov
dec
stc
mov
xor
daa
lcall
adc
into
mov
mov
xor
sbb
jp
xchg
sub
ret
je
data16
sub
jmp
in
insb
testb
mov
xchg
sti
stc
in
das
mov
inc
daa
xor
subl
adc
mov
daa
adc
mov
fbld
flds
adc
push
inc
daa
jp
cmp
fimull
inc
sub
into
push
aad
push
pusha
aam
cmp
call
push
lea
out
inc
hlt
jbe
pop
sub
lcall
inc
notl
jmp
lret
into
sarb
shlb
add
jnp
add
mulb
rcrl
jo
cmp
movsl
jmp
ret
sub
add
adc
fldcw
mov
adc
push
fwait
mov
and
xchg
orb
ss
mov
fists
ljmp
ror
pushf
jo
dec
cmp
lcall
gs
repz
insl
sub
or
or
sub
inc
insb
jge
out
inc
std
ret
pop
sbb
and
mov
aas
push
lock
jb
hlt
cs
xchg
or
push
das
dec
add
gs
push
xchg
pop
mov
stos
insb
lahf
loope
in
fsubr
stos
push
mov
scas
or
lock
cli
push
or
pop
out
mov
sub
ja
mov
mov
js
out
ret
orb
inc
repnz
fcmove
cmpsl
mov
push
pop
in
xchg
stc
and
inc
outsl
gs
pop
ret
cmp
and
mov
cmp
loop
cmp
inc
std
cmc
sub
lods
lds
sbb
sbb
push
adc
mov
in
aad
mov
insl
dec
adc
cmpsl
fisttps
push
pop
test
xchg
popf
fwait
stc
test
bound
test
sub
imul
xor
adc
fwait
lcall
jge
inc
or
cmc
iret
ss
mov
xchg
testl
leave
sub
push
pusha
sarb
and
out
jbe
inc
imul
xorb
sbb
adc
dec
enter
mov
jnp
push
cmpb
dec
cmc
push
cmc
pop
inc
lods
mov
add
cld
icebp
lock
pop
xlat
je
jle
mov
int
pop
incl
aas
rorb
dec
add
mov
pop
adc
cmc
in
inc
add
push
cs
popl
sub
adc
adc
mov
shlb
mov
aad
pop
mov
enter
cli
add
popf
adc
xor
mov
or
mov
out
loop
sub
dec
sub
movsl
cmp
pop
inc
push
sbb
dec
cmp
cli
hlt
mov
test
pop
lods
adc
add
testl
mov
dec
mov
in
lret
pushf
pop
sbb
sbb
jnp
jae
dec
mov
ror
mov
cltd
xchg
xor
xor
bound
cmp
or
jle
sub
sub
je
test
lea
add
shlb
and
rorb
lods
pop
cmpsl
add
aam
jne
cmc
mov
xchg
in
test
aaa
lret
fcompl
xchg
adc
sti
lock
shl
loop
mov
divb
push
cmp
jge
xchg
or
xchg
xchg
xchg
lods
aas
lea
fidivs
pop
xchg
xchg
or
xlat
in
in
shl
clc
mov
pop
sbb
lods
sarb
out
sbb
sbb
ljmp
adcb
iret
adc
push
mov
cmc
loope
fldl
and
cmp
xor
and
sub
adc
inc
lock
cwtl
and
sbb
inc
cmpps
dec
jo
roll
lcall
inc
inc
movsl
mov
jae
stc
or
out
jmp
xor
pop
fstl
mov
daa
mov
pop
arpl
in
xchg
fiaddl
mov
cmpsb
and
nop
cli
lcall
jg
test
push
mov
xor
sbb
in
sub
mov
lock
sub
sbb
jle
fs
out
dec
cmp
gs
test
sub
sub
dec
in
or
lods
gs
addr16
push
push
mov
lea
shrb
sbb
out
jns
loopne
inc
mov
adc
mov
scas
clc
adc
call
insb
jnp
sub
push
inc
in
mov
jge
test
dec
mov
cld
leave
popf
subb
jno
mov
popf
loop
outsb
ret
insb
cmp
pop
cmp
mov
jne
test
ljmp
cmp
jnp
sti
add
cwtl
mov
test
mov
loope
inc
mov
sbb
ret
movsb
sub
cmp
jns
es
cmc
ds
jbe
clc
cmpsl
dec
test
jp
push
xorl
sti
movsb
xor
aas
inc
gs
mov
mov
add
inc
push
mov
negl
mull
mov
mov
fwait
dec
std
inc
ss
gs
or
and
xchg
aas
ficoms
rclb
aaa
in
jecxz
pushl
je
into
or
sub
adc
rcrl
inc
fcomp
and
mov
negl
dec
stc
jo
mov
sbb
ss
sub
add
in
pusha
stos
fidivrs
nop
fisubrl
dec
mov
or
sub
mov
ljmp
pop
repnz
in
push
std
cmpsb
inc
add
stos
loopne
or
mov
cld
pop
mov
pushf
popf
aaa
add
mov
xchg
cmp
sbb
jne
xor
shl
xchg
lds
push
mov
sub
cmc
add
mov
rcr
jae
fldenv
fimuls
hlt
adc
pop
jo
test
popf
insb
xlat
inc
adc
mov
and
or
iret
stos
xchg
adc
or
jb
lds
insb
add
rcrb
mov
shl
enter
lret
sbb
pop
aaa
cs
out
push
or
inc
cwtl
cwtl
push
nop
sbb
out
insl
ja
or
mov
xchg
sbb
stc
ss
mov
pop
add
jmp
dec
sub
popa
jbe
push
jp
lods
pop
push
jo
dec
jmp
into
aam
sar
adc
push
mov
jno
cmp
or
or
inc
loopne
mov
xchg
pop
mov
mov
dec
faddp
test
mov
pop
cmc
and
adc
jno
adc
mov
mov
cmp
test
cli
test
int3
and
test
icebp
lahf
push
pop
mov
call
movb
add
mov
cltd
push
jp
bswap
pop
into
sub
add
movsl
mov
sbb
sub
call
inc
xchg
lret
flds
ret
dec
mov
jae
test
lods
jp
xor
mov
popa
jle
lcall
mov
mov
subl
outsl
movsl
dec
add
dec
test
icebp
sub
movsb
mov
cmp
pop
aaa
inc
fisttps
pusha
ja
movsl
ret
loop
fdivp
push
aaa
sbb
incl
jno
mov
loopne
out
mov
add
shlb
mov
xor
je
icebp
xchg
pop
sub
stc
push
push
lods
dec
stos
mov
xchg
mov
gs
in
or
insl
arpl
xor
pop
cmp
pop
xchg
enter
adc
in
lahf
pop
insb
add
fwait
ja
fadd
loope
repnz
sti
xchg
cmp
cmc
mov
cmp
sbb
orl
xchg
ror
icebp
cmc
xlat
notl
gs
sub
sbb
test
rclb
xchg
fbstp
push
jae
inc
fsub
sbb
lret
jns
fmuls
ret
mov
jb
jmp
pushf
cmpsb
aad
mov
lods
push
es
addr16
ljmp
ret
xchg
cmpsb
xor
out
jg
mov
test
and
je
rcl
loop
mov
add
pop
lods
mov
in
icebp
pusha
fcomps
fisttpll
movsb
jmp
add
loope
incb
adc
lcall
push
push
jno
pop
les
xchg
jns
cmpsb
jns
in
ret
xchg
cmpsb
pop
mov
jecxz
loope
stc
int3
add
xor
pop
mov
mov
adc
cmp
cli
push
mov
gs
adc
mov
scas
out
jne
sbb
push
sbb
es
pop
cmp
or
lahf
dec
xor
aam
insb
mov
fisubl
das
xchg
mov
loop
inc
sbb
pop
in
aaa
sub
js
xchg
mov
fisttpll
test
mov
imul
xor
scas
and
dec
push
int
ljmp
add
fld
mov
ret
cmpsl
fmulp
fwait
mov
mov
xorb
mov
cmp
or
lock
xor
cltd
pop
lock
add
mov
inc
push
cmp
ret
or
lock
js
dec
inc
jbe
fs
cmc
movsb
sbb
xlat
push
lahf
mov
dec
pop
cmp
loopne
stos
andl
sbb
or
or
sbb
imul
mov
push
arpl
orl
xchg
lret
sub
lahf
inc
lds
mov
and
arpl
add
push
sub
outsb
imul
adc
cmpsl
lea
arpl
mov
fdivl
dec
push
mov
movsl
and
push
mov
loope
jp
shlb
mov
mov
pop
outsl
popa
lcall
imul
cmpsl
xchg
inc
and
mov
jb
or
lds
adc
or
ret
jg,pt
out
xchg
adc
sbb
or
cmp
add
mov
fnstcw
sub
test
scas
jb
and
dec
push
sub
dec
xor
jb
rorl
xor
dec
scas
jns
cmp
ret
lcall
lea
js
aaa
and
dec
fs
stos
data16
push
jns
in
std
orb
xor
dec
mov
pushf
daa
push
mov
in
or
out
iret
loope
inc
stos
push
popa
add
xchg
pop
or
ret
sub
xchg
arpl
sub
fidivrs
clc
xchg
test
mov
push
sbb
and
leave
movsl
cmp
sbb
add
punpckldq
scas
or
imul
xor
adc
es
cmpl
cmpl
cmc
divb
mov
int
xchg
mov
mov
or
cmp
shll
dec
xchg
insl
xor
loope
push
pop
cmp
push
insb
push
jg
xchg
or
push
adc
lahf
mov
lret
jb
flds
pop
arpl
jp
cmp
mov
mov
push
scas
cmc
lods
adc
inc
xor
js
mov
sub
cmp
jmp
add
xchg
push
push
popf
inc
arpl
dec
inc
in
sub
cmp
subl
adc
fs
xor
xchg
aad
cmp
push
fcmovnu
cltd
sub
push
std
cltd
mov
inc
iret
xchg
push
dec
sbb
in
jecxz
imul
pop
ds
hlt
ja
out
dec
push
push
scas
jecxz
pop
ja
mov
push
sti
fildll
mov
mov
xor
repz
mov
andl
repnz
into
ljmp
xlat
mov
lahf
fisttps
mov
rep
xchg
sub
pop
adc
ret
sub
loop
testb
in
jnp
lock
push
les
cwtl
inc
mov
jns
pop
add
dec
xor
push
fnstenv
push
roll
outsb
stos
xor
or
dec
xchg
jne
mov
nop
dec
sbb
pop
dec
imul
cmp
sarb
inc
add
xor
ret
jl
mov
lock
sbb
cmc
stos
ret
adcl
enter
fdivl
out
outsb
bound
inc
stos
arpl
dec
pusha
aad
cmpsl
jecxz
clc
adc
cmpsb
push
nop
mull
and
negb
aam
testb
into
mov
push
cvtpi2ps
jp
movsb
in
sbb
push
inc
push
lahf
adc
cmc
inc
repnz
adc
mov
push
add
std
and
push
jecxz
shll
sbb
sbb
inc
pusha
inc
clc
xchg
dec
pop
add
xor
xchg
lods
dec
cmpb
je
loope
js
cld
pop
outsb
divb
dec
test
shrl
repz
rol
xor
es
pop
in
int
sbb
add
cmc
lods
xchg
fsubr
or
mov
adc
shll
inc
rcll
xchg
pop
sub
sub
enter
mov
lds
rcl
ds
repz
in
ret
int3
divl
fdivrp
add
jge
jg
std
fstps
dec
cli
xor
push
fldenv
into
cmp
push
decl
xor
pop
sub
xchg
pop
adc
xor
adc
mov
inc
push
push
adc
mov
xchg
adc
jle
xchg
loope
sub
inc
add
inc
mov
movsl
xor
mov
push
out
repnz
push
cmp
jmp
pop
sub
mov
leave
inc
es
enter
fistpl
rolb
daa
push
shrb
aaa
stc
out
lcall
cmpsb
mov
and
mov
mov
sbb
jns
cmc
ret
cld
adc
inc
and
xchg
rcll
inc
push
shlb
ret
cltd
sbb
lods
pushf
loope
leave
push
mov
lret
mov
mov
cmp
cltd
lcall
loopne
stc
xor
xchg
xor
inc
or
mov
xchg
inc
popl
add
jbe
nop
lret
je
push
testb
mov
adc
jnp
jg
pop
imul
push
fcmovnu
push
or
or
jg
fcmovnbe
adc
adc
mov
stc
fbstp
sub
jns
sbb
insb
adc
mov
arpl
fimuls
and
add
gs
lcall
loopne
jp
call
ficoml
arpl
inc
sbb
mov
inc
sbb
dec
into
jb
jp
inc
loop
xchg
cmp
xor
dec
iret
loope
sar
mulb
lods
mov
and
push
pusha
push
mov
clc
cmc
scas
jl
sub
shlb
aad
scas
in
shrb
out
gs
mov
imul
xchg
push
sub
ljmp
inc
andl
dec
rolb
pop
xor
inc
cmc
stos
fwait
xchg
enter
lods
fsts
lret
jno
push
adc
cmp
mov
adc
or
xor
sbb
fwait
inc
mov
pop
mov
enter
mov
icebp
xchg
aas
push
pop
notl
pop
out
fsubl
or
loopne
jne
fistl
dec
mov
ret
in
rcll
scas
shr
test
gs
mov
mov
dec
dec
or
loopne
push
fcmovnb
repz
imul
mov
or
shrb
fistpl
inc
sbb
ss
xor
in
dec
stc
stc
out
jecxz
cwtl
sarb
xchg
cltd
mov
fwait
inc
and
jne
out
sbb
or
jnp
push
scas
insb
inc
arpl
push
cltd
pop
lds
inc
int
pusha
jle
lods
test
xchg
jne
arpl
or
and
xchg
mov
jnp
jp,pn
call
ret
stos
fidivrs
dec
inc
outsb
mov
xor
mov
aad
push
fisttpll
jns
call
pop
in
mov
or
inc
sbb
out
arpl
mov
fimuls
mov
xor
fs
mov
test
mov
pop
testb
push
jae
lods
mov
mov
clc
aas
nop
xchg
fnstsw
mov
push
adcb
cltd
mov
js
ljmp
aaa
test
dec
add
dec
pop
mov
and
mov
orb
xchg
sbb
pop
fsubs
loop
cli
test
add
sbb
out
lcall
repz
in
mov
scas
jno
es
rcll
xorb
or
fucom
cmc
mov
adc
aas
or
stos
mov
pop
lods
cli
mov
sub
sub
outsl
inc
jl
add
jbe
mov
out
cltd
sbb
fs
leave
inc
sub
adc
mov
sarb
daa
jge
jmp
decl
out
adc
sbb
cmp
pusha
cmpb
movsl
lea
pushf
inc
sti
clc
sub
sbb
mov
outsl
mov
call
jmp
mov
xchg
and
dec
or
cmp
and
xchg
inc
mov
insl
cmpsl
sub
aas
test
adc
clc
dec
mov
or
cwtl
cmpsb
dec
scas
sbb
pop
and
dec
call
aam
sbb
cmp
mov
pushf
adc
xor
arpl
and
lea
push
add
push
or
je
push
mov
ret
mov
movsl
rol
fstl
out
loop
dec
adc
pmaxsw
pop
lret
mov
aaa
or
hlt
cmc
mov
mov
push
leave
nop
and
adc
xorb
fbstp
cmc
iret
mov
mov
pop
jle
jne
cmp
shr
js
insl
jge
sbb
clc
dec
jecxz
out
sub
lock
mov
cmp
add
sub
sbb
pushf
stos
in
imul
mov
loope
pop
or
push
inc
pop
aas
fstps
pop
push
fwait
mov
jp
cld
inc
push
jle
pop
sbb
push
call
ficomps
mov
xor
mov
inc
mov
stos
push
inc
mov
xor
mov
cmpsb
pop
push
push
xchg
iret
lret
push
clc
mov
pop
dec
mov
pop
cmp
jnp
xchg
mov
int
sbb
loop
rorl
push
cmpsb
sub
and
sub
popf
loopne
and
sub
fisubrs
mov
pop
xchg
std
cmp
xor
jle
or
inc
sbb
pop
mov
sbb
cmp
mov
or
popa
xchg
outsl
jecxz
fimull
dec
fs
cmp
jo
test
lahf
pop
pop
push
int3
fsubrs
fisubl
dec
inc
push
lods
outsl
adc
dec
mov
or
adc
mov
rorb
shl
pop
ret
xchg
fisubrl
shrb
mov
andb
fistpll
pop
lock
popa
roll
lret
movsl
das
jnp
sub
lods
add
lret
jecxz
xchg
sti
outsb
dec
mov
push
pop
push
and
fprem1
push
adc
jb
jo
dec
shr
cmp
lods
mov
mov
xor
pushf
movl
loopne
cmpsl
push
mov
imul
fmull
out
jnp
insb
repz
int
dec
fwait
jo
ret
mov
imul
dec
sarl
shll
push
jno
pop
inc
sbb
orl
mov
adc
shl
adc
sbb
adc
mov
rorl
add
sbb
pushf
int3
js
mov
daa
shll
outsb
jno
or
call
add
fsubp
inc
sub
pop
ss
jmp
dec
dec
inc
pusha
aaa
fcomip
ja
jae
jbe
pop
jmp
inc
mov
je
dec
dec
out
or
repz
into
scas
sbb
push
popf
sub
stos
or
inc
jmp
sub
xchg
sbb
js
xchg
in
mov
int
jge
insb
adc
out
dec
ja
cmp
mov
pushf
aas
and
lahf
jb
xor
test
or
mov
cmp
jle
mov
insb
or
mov
jbe
pop
sub
sub
out
push
fwait
insl
daa
addr16
jae
pop
cld
and
lock
add
push
pop
mov
out
jae
add
cld
ret
fildl
pop
movsl
sub
pusha
or
lahf
movsl
scas
in
scas
sub
jno
mov
push
rolb
adc
cwtl
cli
jae
loope
jbe
out
jns
ja
sub
sub
push
mov
mov
int
xchg
fbld
inc
inc
loop
rcrl
inc
pop
aam
nop
shll
repz
cmpsb
cmp
dec
xchg
int3
pop
inc
fwait
imul
pop
jb
andb
adc
lock
xlat
mov
js
or
mov
fcoml
mov
xor
jbe
loop
sbb
pop
andb
scas
incl
arpl
sub
pop
scas
pop
rcrb
clc
popa
sbbb
into
loop
call
sub
subb
lea
dec
mov
mov
xor
imul
or
jo
pop
xchg
mov
loopne
in
pop
sub
lahf
jb
dec
test
cmp
mov
shl
pop
xchg
push
fldenv
pop
out
ss
fldcw
push
mov
roll
jecxz
fs
or
leave
in
cli
stc
push
inc
adc
add
dec
inc
shll
mov
push
icebp
outsb
mov
decb
dec
cltd
sbb
out
popa
call
in
ss
loop
out
mov
fsubr
cld
xlat
stc
fbstp
add
jae
mov
sub
out
mov
cld
fwait
mov
pushf
mov
xor
push
adc
mov
jge
pop
fildl
loopne
mov
sub
sbb
ljmp
cs
sub
sbb
lds
fadds
xchg
popa
push
mov
cmp
adc
jge
inc
fistps
idiv
in
jns
out
cmpl
repz
jg
jne
xor
movsl
jbe
js
cwtl
sub
fidivrs
fsubrp
mov
fmuls
sub
xor
xor
cmpsb
jnp
sti
pop
iret
push
adc
sbb
dec
push
fdivl
lret
jmp
jbe
push
add
push
ds
fcoml
inc
inc
popf
ffreep
cltd
ret
add
and
add
hlt
sub
pop
xchg
adc
dec
pop
cli
mov
movsl
fwait
or
ss
cli
pop
sub
cmp
stc
pop
je
add
mov
xor
push
and
out
adc
shrl
xor
inc
pop
adc
or
jg
dec
test
ds
imul
in
sbb
shrb
aas
xor
inc
icebp
xchg
jmp
xor
jne
loopne
or
mov
int3
xchg
and
fidivrl
adc
dec
adc
pop
jg
add
add
ja
sub
jnp
test
pushl
enter
ret
insl
int3
ljmp
stos
push
push
lods
aam
or
cmp
cmc
pop
loope
fisubrl
jbe
add
pop
js
xor
mov
inc
pop
sbb
push
inc
mov
jp
pop
mov
stos
cmp
nop
jmp
lds
sbb
jmp
push
cmp
js
inc
fisubrl
cmp
adcl
mov
mov
and
dec
mov
int3
movsb
jno
pop
inc
popf
and
and
sbb
xor
movsb
cwtl
ss
stc
ret
inc
movsl
insb
sub
pop
cmp
adc
xlat
jb
cltd
cmp
cmpsb
or
adc
jg
fdivl
mov
sub
lar
lea
inc
mov
in
adc
mov
stos
loope
sbbl
pushf
testb
adc
lods
bt
and
sbb
jge,pt
insl
pushf
pop
or
dec
clc
and
lods
inc
or
pop
xor
inc
jno
scas
mov
push
test
xor
jnp
xchg
inc
cmp
bound
lcall
and
fstp
pushf
mov
ds
gs
sbb
dec
fnsave
sbb
sub
push
enter
lods
cmc
lods
lret
loop
xchg
push
jnp
mov
inc
nop
xchg
mov
sbb
pop
cld
js
mov
mov
or
adc
cld
sbb
hlt
fldenv
aaa
and
ret
std
ficomps
jno
dec
jae
lods
repnz
or
lds
addr16
xor
pop
stc
dec
int3
imul
jge
mov
sbb
ds
push
mov
shrl
bound
jo
out
mov
inc
aad
sti
xchg
mov
cs
and
mov
loopne
mov
cmp
jns
dec
out
test
jns
insb
icebp
push
and
mov
fstl
shl
sahf
movsb
ret
mov
cmp
xchg
faddl
xchg
rcrb
lret
fsubrp
ret
fwait
xchg
sub
xchg
pop
jo
xchg
rorb
mov
mov
pop
fldenv
inc
jbe
or
cltd
xor
mov
das
or
insl
mov
ret
std
shrl
add
sub
sub
ss
rep
repz
mov
pxor
pavgw
leave
sbb
add
cmp
push
jnp
mov
cmp
dec
and
rcll
sub
hlt
push
movsb
dec
dec
xchg
pop
pop
incb
dec
lret
loopne
lods
jbe
das
push
jmp
fucom
fcompl
dec
push
pop
ret
adc
pop
lret
lock
scas
pop
xchg
imul
js
mov
pop
scas
jo
jg
adc
mov
add
jmp
mov
shll
imul
enter
or
imul
jnp
sbb
mov
mov
jge
insl
int3
fmuls
call
inc
shlb
cmpsl
cmc
aas
in
mov
dec
scas
or
cli
jle
pop
dec
pop
in
inc
leave
mov
mov
cld
sbb
push
aam
jl
popa
adcl
jnp
mov
inc
jno
xchg
pop
enter
inc
dec
ficomps
sub
mov
cmpsl
dec
in
add
inc
stc
mov
mov
cmpsb
ret
sbb
mov
xchg
pop
push
ss
inc
fstpt
push
dec
or
out
js
jg
test
cmp
or
mov
lcall
cltd
cmp
cli
push
mov
jo
je
testb
in
sbb
or
jg
in
les
and
add
inc
nop
mov
js
sbb
int3
sub
syscall
fwait
add
mov
aad
lock
mov
fdivs
xor
mov
dec
inc
les
jg
lahf
pop
adc
es
mov
pop
pop
xor
shlb
mov
pusha
les
push
add
pop
iret
insl
nop
inc
adc
lret
int
sbb
adc
mov
push
mov
lods
jle
pop
ficompl
adc
outsl
xchg
push
fistpll
push
jnp
cld
sbb
add
pop
mov
stc
add
in
ljmp
push
xor
or
adc
mov
or
pop
rcrb
jecxz
sub
in
xchg
jno
dec
lcall
cmp
fdivr
xor
sarb
js
add
or
ss
pop
push
lods
and
mov
sub
lds
lret
sarb
mov
pop
sub
addr16
ret
stos
adc
sbb
jge
xor
incb
cltd
mov
loop
mov
dec
outsl
lret
in
fmulp
and
push
xor
and
jge
in
or
xchg
std
ret
psubusw
dec
lods
int3
out
test
ret
sub
imul
aam
js
and
das
mov
fucomip
imul
popf
xchg
xchg
push
aaa
rcrb
adc
mov
mulb
cmp
xorb
popl
fs
xor
dec
cld
lods
add
mov
lahf
cmpl
fs
fwait
jae
lahf
popf
inc
inc
ja
pop
lcall
std
rol
xor
push
loope
jp
jbe
pop
mov
data16
xor
lea
xlat
lock
sub
jae
dec
add
out
into
adc
ja
push
sbb
out
jno
pop
push
and
mull
xchg
and
icebp
fsubs
sbb
insl
pop
jp
iret
out
call
mov
dec
mov
fcompl
ret
iret
ret
and
fldt
addl
test
sbb
xchg
sub
popl
insb
xor
call
sbb
mov
push
test
leave
mov
xor
or
xor
and
push
ret
xchg
mov
xchg
sub
sarl
ja
mov
mov
xchg
push
push
mov
mov
adc
pusha
lea
mov
leave
jg
xor
cli
ficoml
lret
insl
pop
add
and
out
neg
daa
ljmp
shl
dec
aad
mov
mov
adc
cld
addl
imul
add
adc
mov
jns
aaa
rclb
pop
push
das
jns
in
shlb
mov
mov
cmp
sti
dec
loopne
dec
push
jne
mov
gs
pop
sar
sahf
and
ds
outsl
adc
aad
xchg
int
xchg
inc
arpl
andb
cltd
xchg
lods
sbb
std
or
sbb
pop
or
sub
mov
mov
cmp
out
movsl
lahf
and
sub
cli
cmp
ffree
xchg
xlat
out
or
testb
mov
fwait
sti
into
push
inc
in
repz
ficoms
mov
and
test
sub
jmp
nop
adc
in
jns
jne
mov
sub
ficomps
pop
and
sub
jo
leave
cmp
mov
outsl
push
cvtps2pd
shl
cmpsb
sub
fcmovu
push
aas
mov
xor
dec
xchg
lcall
movsb
lret
push
push
cmp
inc
pop
lock
pop
mov
leave
dec
jbe
jmp
mov
xor
cmp
jmp
add
movsl
jl
in
dec
or
fnstenv
xchg
fdivrp
mov
and
mov
popa
cmp
and
sub
and
aam
or
pop
pop
mov
outsl
leave
inc
mov
xorl
ljmp
cmp
cmpsl
pop
in
lahf
ret
and
aad
mov
xor
test
dec
add
shlb
out
lret
shlb
push
popa
and
jl
xor
in
sub
sbb
fmull
jle
loop
repnz
push
scas
bound
mov
and
adc
shr
add
and
pushw
movl
in
sub
mov
jno
sbb
mov
xchg
xchg
imul
jo
mov
mov
addr16
mov
inc
or
aad
mov
inc
push
xchg
push
sub
sbb
in
push
add
cwtl
scas
subl
cmc
inc
ret
cmp
xchg
inc
test
cld
aaa
mov
imul
jns
xor
out
xlat
lods
inc
dec
push
mov
jae
popa
test
inc
dec
es
lods
enter
out
mov
pushf
xchg
rolb
shlb
pop
je
cld
xor
mov
outsb
adc
aas
mov
sbb
xchg
xor
jbe
aaa
stos
shl
jmp
cmc
in
xor
xor
push
enter
popa
sub
inc
mov
stc
movb
insl
mov
sub
cs
xchg
aas
loopne
rcr
cmpsl
jl
in
hlt
jmp
mov
loop
mov
test
mov
cmp
dec
js
daa
incl
loop
cltd
pop
jne
call
xor
cmpsb
cmp
xchg
mov
lahf
lea
lret
ja
negb
dec
lea
push
mov
sbb
fidivs
push
andl
jle
jne
pop
repz
and
test
scas
pop
movsl
pushf
xchg
cld
sti
inc
scas
fcmovbe
js
and
lea
add
jecxz
adc
pop
jae,pt
cmp
cmpsl
out
pop
dec
sub
cmp
das
inc
ret
push
cmc
xor
movsb
adc
ja
aad
mov
cmp
fwait
orb
ds
sub
std
aam
lods
cmpsl
bound
popf
scas
movsl
jne
scas
movsl
mov
push
push
stc
cwtl
mov
fisubl
jb
outsl
add
inc
xor
int3
js
mov
daa
data16
xchg
xor
movsb
xor
push
cmp
inc
and
aam
jno
dec
shlb
pop
push
mov
movsb
movsl
pop
loop
xor
clc
in
push
mov
ljmp
dec
and
loop
insb
ret
sub
ja
cmp
sbb
rolb
adc
sbb
push
jp
mov
add
mov
dec
pop
jb
mov
repz
enter
imul
pop
mov
cltd
jno
fs
std
sub
shll
mov
testl
rcr
das
cmp
push
mov
cli
ret
cmp
and
lcall
jbe
push
add
cmp
fwait
push
popa
aam
mov
cmpsb
mov
xchg
sahf
xchg
aad
repnz
push
lret
fstl
or
jge
enter
lret
sti
inc
in
aad
push
pop
jnp
jno
xchg
and
test
jne
mov
mov
cmc
daa
call
into
cmc
jo
shl
cs
je
ret
test
mov
leave
inc
and
repnz
rolb
push
lods
mov
dec
jle
pushf
sbb
dec
cmp
jo
test
lods
sti
dec
adc
rcrl
mov
inc
add
loopne
test
jo
aam
xor
push
push
dec
shl
stos
pusha
cmc
ss
inc
mov
inc
xchg
jb
es
and
sbb
loope
xor
mul
aas
rcrb
cmp
xchg
push
sahf
or
je
lods
adc
push
scas
pop
xchg
sub
pop
jbe
sub
sub
arpl
mov
test
add
imul
repnz
addr16
xchg
inc
mov
xor
push
ret
pop
int
fldl
adc
dec
lcall
lods
inc
inc
imul
xchg
pop
dec
inc
and
jmp
xor
fnsave
inc
push
mov
data16
negb
inc
mov
rorb
sarl
push
cmp
loop
idivl
jge
add
sub
std
jo
add
pop
insl
adc
fistl
shl
outsl
push
jnp
rcrl
xchg
sbb
orb
cltd
aas
cltd
aam
cmp
and
xchg
roll
loopne
inc
aam
out
rcrb
leave
arpl
notl
lret
test
ret
rcrl
jnp
jp
mov
dec
xor
xor
stos
call
push
sbb
pusha
mov
scas
out
sub
inc
rcll
cmpsb
lds
pop
push
imul
and
jb
jle
popa
jns
jbe
fwait
mov
ds
mov
fsubs
mov
sbb
inc
push
inc
add
push
cmp
fbld
jbe
push
test
cmc
jb
popf
inc
fwait
or
stos
test
push
xchg
jmp
xor
adc
inc
cmpsl
repz
push
mov
movsb
test
mov
imul
outsl
jns
dec
push
lods
nop
cltd
cmp
jbe
mov
jmp
roll
es
neg
xchg
xchg
es
ja
dec
mov
jbe
lahf
negl
pop
rolb
mov
inc
aad
dec
stc
dec
lret
fs
faddl
mov
and
mov
rol
jo
sub
aaa
int
mov
mov
cmc
cs
out
dec
dec
push
xchg
mov
std
shlb
lea
xchg
ds
addb
cmp
popf
mov
ret
lcall
mov
mov
mov
pushf
fidivl
mov
jl
inc
pop
xchg
or
cltd
cmpsb
adc
sbb
jne
sbb
xchg
xor
int3
shl
bound
xchg
jns
scas
pop
push
inc
push
pop
mov
and
cmp
xchg
lds
push
mov
push
cmc
push
xchg
lret
mov
movsb
js
cmp
push
cmp
rcr
xchg
ret
pop
push
aaa
pop
movsl
pusha
lret
adc
ss
shll
movsl
cmpsl
adc
sbb
aad
sbb
jo
cmpsl
mov
mov
fs
sbb
pop
sbb
mov
jmp
lret
insb
lods
mov
or
dec
or
push
dec
jmp
mov
push
sub
dec
pop
sub
pusha
imul
adc
and
mov
mov
fs
jae
add
adc
adc
dec
sbb
and
pusha
cmp
cmpsl
sub
arpl
xor
jnp
jmp
sub
ret
adc
push
add
pop
arpl
mov
jno
xchg
out
iret
mov
faddl
mov
fsubl
test
mov
adc
mov
sbb
inc
jl
xchg
rorl
mov
rorb
and
int3
add
fwait
or
xchg
and
mov
lret
inc
fisubs
test
addr16
insl
mov
test
sbb
mov
in
loopne
pusha
pop
inc
test
sti
xchg
xchg
repz
mov
lds
jno
and
sub
mov
xchg
push
aad
ret
gs
xchg
mov
out
dec
ret
mov
ficompl
pop
cwtl
fscale
les
pop
movsb
call
adc
popa
les
int
ds
repz
out
adc
xchg
xor
or
into
loopne
mov
leave
xchg
shrb
add
xor
add
xor
cmp
push
cmpsl
ret
mov
shlb
int3
into
adc
mov
in
jge
repz
xor
das
xchg
push
jb
mov
xchg
jae
xor
mov
jns
xchg
jg
xchg
pop
sbb
push
mov
xor
cmp
outsb
push
shlb
scas
int3
jp
fidivs
mov
mov
ds
hlt
xchg
in
push
int3
xor
movsl
loop
ret
test
pushf
faddl
mov
bound
aad
lahf
dec
push
out
int3
pop
cmp
sahf
cmc
mov
call
dec
or
and
jo
jns
sbb
cld
clc
clc
rorl
add
xchg
fwait
cmp
jae
fldt
cltd
aaa
jnp
mov
push
movsl
jg
mov
dec
lock
cmc
mov
cld
test
lock
or
pop
sub
out
movsb
ss
cmp
xchg
pop
mov
subl
xor
repz
mov
jno
scas
daa
cwtl
cmp
dec
iret
loope
adc
jl
or
jbe
and
mov
pop
fists
fnstsw
adc
rclb
dec
fidivl
jo
cmp
dec
push
cwtl
ret
out
xchg
cmpsl
pop
jns
test
sysenter
dec
repnz
mul
cltd
out
pusha
mov
mov
aaa
xor
into
sbb
mov
sub
dec
add
movsl
ret
jle
pop
fldl
pop
imul
negb
dec
and
test
sahf
xchg
call
push
xor
pushf
stc
jmp
subb
out
cld
nop
mov
sub
cmp
push
adc
cmp
jg
repnz
call
int3
adc
mov
mov
sub
sub
pop
loope
imul
cmpsl
and
ljmp
out
aad
fsubs
in
sbb
out
sbb
movsl
add
mov
mov
adc
add
pop
mov
jno
sbb
adc
fcoms
push
fadds
mov
jg
push
xchg
xchg
add
push
mov
sahf
cmp
ret
sbb
cmp
sbb
mov
adc
enter
faddp
in
xchg
mov
or
leave
jbe
mul
or
cmp
int
pop
fstps
js
test
mov
mov
stos
mov
jnp
bound
adc
mov
jo
mov
add
xor
jg
lea
mov
sub
int
push
jmp
xor
mov
fs
lds
adc
test
xchg
cmp
loope
jno
clc
dec
add
mov
adc
or
lods
outsl
fnstcw
and
int3
push
pop
dec
adc
mov
int
rcr
sub
xchg
iret
test
insb
ret
mov
sti
inc
loope
add
cmp
movb
adc
test
scas
imul
lds
int
adc
dec
pop
ja
lods
xchg
cmp
or
lcall
adc
cmp
sbb
or
mov
mov
in
xorl
push
adc
mov
xor
jg
ds
mov
inc
mov
add
popa
repnz
xorb
push
cwtl
mov
jno
dec
ja
xor
xor
insb
test
mov
jae
cmp
or
or
sarl
pop
xor
lods
cmp
sub
jns
jl
fiaddl
pop
mov
in
xchg
lcall
push
xchg
mov
mov
lods
jmp
stos
mov
test
sbb
ja
mov
call
or
mov
nop
pop
or
cmpsl
xchg
aad
cmpsl
scas
int
jmp
xchg
mov
mov
out
pop
adc
mov
cmc
mov
shlb
mov
or
pop
fisubs
clc
shr
xor
push
stc
js
pop
push
cmp
shrb
lcall
outsl
nop
cmp
es
sbb
in
mov
cmp
xor
sub
ds
or
outsb
sub
fwait
pop
pop
push
sbb
or
mov
cs
inc
movsl
cmpsl
fistps
xchg
in
lds
jns
fstl
sub
cmp
popf
mov
stos
in
pop
cmp
fstpt
pop
js
inc
mov
xchg
loopne
mov
int3
mov
push
push
cmpsl
adc
mov
or
repz
cmpsb
lea
lret
push
sub
mov
nop
je
add
jns
insl
out
add
pop
adc
rcr
popl
cmp
fs
insl
enter
dec
pop
xlat
bound
enter
out
lret
inc
pop
imul
fdivs
jg
int
lea
dec
ret
addr16
fs
out
mov
ss
or
sub
sbb
sbb
adc
pop
daa
fbld
mov
leave
cmp
in
push
push
lods
jg
cmpsl
out
cmpsb
icebp
inc
cli
mov
rorl
inc
sbb
rcrb
inc
pop
pop
clc
mov
sti
adc
or
and
loop
mov
repnz
push
xor
push
loope
dec
lahf
test
roll
mov
sti
mov
fwait
xor
into
and
jg
out
inc
mov
ljmp
into
push
pop
pop
inc
xlat
mov
insb
mov
jge
adc
nop
je
aas
test
xlat
fdivl
aad
orb
test
lcall
sbb
mov
sub
lds
push
mov
stc
sbb
in
pop
xor
xlat
lret
cmpsl
icebp
xchg
sar
jecxz
sbb
or
call
cltd
jmp
in
inc
jno
fldenv
sub
shrl
daa
sub
inc
lcall
loopne
push
inc
orb
sarb
inc
xor
cwtl
or
rcl
outsb
jb
outsl
call
sbb
subl
lret
out
ljmp
dec
movsl
pop
pop
cmpsl
pop
or
push
imul
test
xor
in
or
aam
aaa
rolb
fsubs
cmp
cwtl
sub
inc
inc
test
jecxz
pushf
dec
jmp
and
jbe
data16
dec
inc
jmp
jg
or
mov
packuswb
inc
inc
out
sub
dec
mov
adc
jbe
sbb
mov
loop
mov
push
xlat
mov
je
pop
mov
insl
mov
sub
loop
push
sbb
push
int
sub
ja
out
and
andb
push
in
or
xchg
mov
fdivrl
lret
mov
leave
xchg
sub
pop
xchg
insb
and
dec
dec
enter
insl
cmpsb
rcll
xor
std
sub
lods
push
lods
mov
inc
rcll
mov
adc
mov
push
aas
or
mov
mov
or
aaa
hlt
sbb
mov
xchg
and
popf
adc
fisttpl
fnsave
mov
in
lods
inc
int
sub
inc
push
cmpsb
call
push
sbb
or
hlt
mov
shll
jbe
jns
push
lock
add
push
mov
add
push
push
ret
push
fwait
push
push
sub
arpl
xchg
sahf
in
gs
ret
lods
das
cmp
call
nop
cli
pop
inc
add
rolb
jecxz
mov
cltd
cmp
imulb
jecxz
adc
in
cltd
ret
push
inc
call
inc
scas
and
scas
in
cmp
push
add
inc
iret
insl
fsubrl
push
inc
add
push
xor
int3
xor
jns
aaa
pushf
push
inc
in
push
mov
mov
mov
xchg
jno
sbb
mov
and
xchg
lea
jge
clc
subl
aad
sbb
in
adc
int
fs
pop
xor
sbb
mov
and
jg
outsl
jle
jmp
jbe
in
add
add
mov
xchg
push
mov
push
push
icebp
and
pop
fsubs
icebp
push
lds
or
popa
in
sbb
xor
mov
adc
adc
push
sbb
xchg
jle
pop
in
dec
xchg
and
mov
cs
push
xchg
push
popf
push
sub
ficomps
lods
mov
sbb
jo
jo
sbbb
stc
or
pop
cmpsl
mov
jb
pop
xor
mov
ss
dec
lods
pmovmskb
mov
stc
or
push
jg
mov
jne
xor
and
in
sub
mov
fwait
mov
adc
sbb
mov
mov
dec
cwtl
test
pop
xchg
mov
fcmovbe
xchg
add
cld
scas
lahf
jae
mov
inc
iret
les
pop
cmp
inc
jge
pusha
cwtl
jl
xchg
cmpsb
sbb
inc
mov
jae
into
pop
jne
es
cmp
cs
and
popa
lret
enter
rcr
test
popa
inc
mov
mov
adc
or
pop
std
enter
add
in
in
cmp
je
sub
push
lods
stos
pop
push
stos
jmp
jge
mov
ret
out
adc
popf
sti
push
aaa
cltd
mov
cmp
push
adc
es
sub
push
es
jns
sub
cmp
jl
cmc
insl
outsb
lret
xor
imulb
xor
ss
mov
fadd
xor
gs
pop
mov
iret
test
pop
pop
push
ret
daa
cmp
and
imul
lds
popa
pop
sbb
jge
jmp
mov
shll
and
add
je
and
dec
push
push
pusha
arpl
mov
inc
sub
dec
nop
sti
enter
int3
cmpsl
aam
pop
and
mov
nop
aaa
push
cli
dec
fdivs
mov
enter
dec
push
cwtl
into
sub
xor
mov
insl
jl
imul
xor
lcall
call
or
xor
out
push
xlat
dec
pop
fs
insl
mov
cli
mov
xchg
inc
ds
cmp
mov
xchg
loopne
mov
popa
pop
mov
insl
jo
mov
inc
scas
sub
and
mov
inc
stc
rcl
popf
pushf
dec
lahf
lock
aam
repz
lock
sub
mov
pushf
and
mov
out
ds
cmpl
mov
rcll
jmp
testb
and
cmp
test
clc
out
mov
sbb
std
inc
cli
arpl
push
dec
xor
cmpsb
push
pop
jecxz
ljmp
cli
cltd
lret
jmp
adcb
lret
xor
es
adc
push
dec
adc
jne
inc
outsl
jecxz
push
pop
and
mov
fimuls
jmp
xchg
mov
test
fstpt
lret
and
aad
jne
xchg
push
data16
je
mov
insl
mov
or
insb
pop
ljmp
sub
lret
popa
les
pop
flds
adc
ljmp
popf
lock
push
jle
scas
icebp
push
push
adc
xchg
daa
out
xchg
into
pushf
popa
jns
test
add
mov
dec
mov
int3
push
iret
xor
mov
inc
repz
pop
insl
pop
lods
xor
dec
pop
cli
sub
or
cmp
mov
and
cmp
dec
hlt
add
xlat
and
movsb
nop
xchg
cmp
mov
mov
mov
cmp
cs
push
or
push
ss
xor
popf
rorb
imul
dec
xor
repnz
cmpsb
pop
adc
jbe
jne
test
lcall
inc
stos
sbb
cmp
dec
js
adcb
sbb
imul
fimull
jecxz
dec
hlt
fstps
frstor
insl
scas
adc
je
xchg
adc
cmc
out
xchg
orl
call
mov
sbb
rcll
cltd
xchg
insb
test
cmpb
add
stc
mov
mov
ds
ret
push
call
cmp
ror
jmp
fwait
cmpb
or
cs
pop
dec
sar
cmp
rcrb
enter
pop
in
sbb
adc
sub
cmp
jecxz
mov
add
and
xor
push
cmp
push
pop
adc
lods
aaa
aas
lods
add
aam
push
outsb
pop
imul
mov
sahf
stc
sub
dec
shl
cmpsb
das
fstps
pop
dec
cwtl
and
ja
or
into
cwtl
mov
je
mov
orl
and
lret
mov
jnp
data16
addb
pop
jecxz
loopne
inc
xor
mov
mov
dec
mov
jns
mov
stc
add
lahf
xchg
dec
fists
cmp
xchg
push
mov
aam
shrl
or
inc
pop
and
sbb
shlb
shll
shrb
jno
rclb
cmp
dec
push
adc
movb
pop
shll
fimull
push
add
rolb
icebp
cwtl
xchg
mov
arpl
and
add
ja
test
call
xchg
sub
mov
xorb
enter
pop
data16
push
sbb
sbb
scas
lret
movsb
add
push
repz
inc
ds
call
or
rcrb
ret
sub
and
hlt
in
jmp
inc
arpl
push
cmpsl
cwtl
cmpl
sbb
shlb
sub
mov
bound
push
jmp
ja
popf
rorb
das
xchg
push
scas
mov
pop
push
mov
mov
mov
subl
in
mov
icebp
fnstsw
stos
xor
fwait
sbb
in
sbb
stc
aaa
push
inc
shl
mov
fimull
mov
lds
xor
cmpsb
lret
mov
dec
pushf
push
or
xor
into
outsb
jle
xchg
and
int3
sbb
and
push
pop
xchg
push
cmp
lret
mov
ss
push
lock
inc
insl
addl
popa
dec
dec
dec
js
cmp
pop
jge
cwtl
xchg
push
jo
jno
sub
push
xlat
cld
push
test
jcxz
in
in
inc
rcrl
imul
lahf
aad
cmp
adc
cmp
jp
mov
dec
jecxz
test
pop
xchg
sbb
mov
mov
imul
cltd
jnp
add
adc
or
mov
sbb
popf
push
adc
into
add
cmp
jae
xor
pop
push
add
es
in
fisubs
imul
adc
mov
push
jbe
leave
pop
popf
and
sbb
mov
loopne
push
in
std
negb
inc
jnp,pn
dec
and
pop
cmpb
xor
dec
imul
push
jbe
pop
aam
dec
cmp
jle
imul
mov
xchg
xchg
es
inc
cwtl
mov
mov
mov
push
adc
dec
and
outsb
fcomps
inc
fldz
cli
mov
lret
aas
out
lret
xor
lahf
inc
int3
dec
and
push
sub
jbe
push
or
jg
mov
xlat
sbb
xchg
adc
push
and
imul
cmpl
jb
jns
sbb
enter
push
stos
lds
fwait
mov
or
arpl
addr16
arpl
insb
imul
into
popf
cld
push
push
popl
jo
push
sti
mov
pop
ret
sub
sbb
repnz
fbld
xchg
cltd
inc
push
mov
andb
adc
sti
xor
shll
adc
gs
push
mov
xchg
sub
sub
loopne
sub
push
xor
mov
inc
mov
jecxz
jmp
icebp
jmp
popf
cmp
andb
rolb
and
ret
cmc
push
or
mov
mov
out
popa
mov
pop
test
sub
xchg
ds
and
lock
pop
push
mov
shrb
inc
outsl
mov
or
adc
shll
xor
ret
lret
jnp
inc
scas
div
jmp
popf
shlb
mov
adc
push
adc
sbb
insl
mov
pop
in
das
ret
cmp
dec
push
jns
dec
xchg
push
push
out
push
in
or
jbe
repnz
pop
or
and
pop
jb
add
adc
inc
mov
rclb
or
cmp
jg
jg
xchg
cmp
test
loop
outsl
js
loopne
cmp
mov
mov
and
xchg
or
es
mov
jmp
outsb
pop
loope
adc
jae
xchg
mov
xchg
jp
xchg
xchg
sbb
ja
pop
dec
sbb
jmp
ljmp
xor
mov
cmc
xor
jg
cmp
mov
pop
and
cltd
aam
shll
or
xchg
dec
inc
jmp
fistl
call
pop
pushf
xor
pusha
cwtl
in
psubsw
daa
jg
adc
lret
rcl
imul
jg
ds
outsb
and
addr16
push
lods
inc
cmp
mov
cli
ret
out
popf
int
jecxz
dec
rcrl
inc
js
mov
cmp
jo
mov
cmpsl
sti
les
xorb
aad
leave
fwait
mov
add
xor
sub
adc
jl
std
stos
sub
rcrl
scas
cmp
pop
and
or
sub
test
inc
sbb
mov
cmp
sbb
mov
in
clc
inc
test
hlt
mov
jl
mov
add
mov
or
nop
repnz
ds
mov
popa
outsb
pop
cli
test
mov
sbb
pop
jae
push
jae
pop
add
push
pop
sbb
adc
test
testb
loopne
push
mov
pop
push
xchg
mov
sahf
mov
jbe
jne
add
add
outsl
mov
sbbl
cmp
test
or
std
test
mov
stos
and
pop
push
scas
mov
cmp
lods
das
call
sub
add
xchg
add
jp
push
int3
xor
push
stc
mov
test
scas
add
shll
jge
iret
flds
cmpl
dec
push
es
aam
daa
dec
pop
sub
sub
adc
fldcw
cmp
aam
xlat
cmp
frstor
mov
shrb
loop
xchg
dec
push
pop
ffree
or
pop
pop
sub
nop
xchg
ljmp
js
and
cmp
jl
out
push
pop
sbb
or
sbb
lcall
cwtl
lea
pop
adc
in
push
xchg
add
cltd
pop
sbb
cli
movsb
fninit
shr
mov
push
xchg
ss
movsb
fldcw
and
imul
mov
cmp
insb
aad
cmp
ja
jg
out
mov
test
xchg
je
jno
in
mov
lods
add
pop
inc
jl
xor
mov
pop
pop
testl
sbb
cmpsb
loopne
sti
jle
loop
call
pop
inc
push
push
xor
xorb
mov
insl
cmp
mov
sti
mov
xchg
sbb
jb
sbb
adc
test
sahf
pop
nop
rorb
push
subb
gs
call
shlb
dec
ficoml
adc
mov
push
ret
mov
add
mov
stc
mov
aas
jbe
and
daa
push
pusha
fs
leave
repz
mov
adc
mov
arpl
addb
cmp
in
ret
pop
sbb
xorl
mov
xchg
lcall
jnp
cltd
cmp
repnz
pop
push
and
mov
mulb
mov
add
insb
ret
nop
js
je
call
out
push
sbb
and
cmpsb
lock
ret
in
fiaddl
xorl
clc
dec
pop
fidivrl
push
or
rol
dec
mov
les
mov
out
jp
repz
fstpt
inc
enter
loope
or
mov
iret
fdivrl
out
andb
or
mov
push
jae
jge
aad
push
mov
movsb
inc
in
repnz
mov
loop
fwait
push
jg
test
in
xor
push
in
inc
out
add
pop
test
mov
lods
fs
push
movsb
in
aas
mov
pop
cld
stos
mov
push
xor
or
scas
ja
xor
adc
push
out
push
pop
sub
dec
lret
outsb
into
dec
or
aad
mov
mov
and
sub
sbb
aad
push
stos
mov
pop
cwtl
and
jbe
cmp
aam
or
adc
dec
push
push
inc
and
test
cmp
dec
push
sahf
cwtl
mov
sub
addl
and
inc
sub
inc
jmp
adc
push
pop
shrl
sbb
int3
and
xchg
mov
cmp
mov
mov
lcall
in
lock
test
scas
movsl
mov
or
dec
pop
jnp
push
fs
fucomi
jmp
mov
jge
xlat
push
fstpl
stos
pop
fwait
test
stc
stc
sbb
cwtl
mov
cmp
xor
mov
outsb
push
leave
leave
outsb
lret
add
js
int
mov
add
sti
popf
cwtl
mov
mov
loop
jmp
fucom
sub
xchg
mov
mov
loopne
or
jecxz
pop
pop
cmp
frstor
or
fxch
int3
jmp
adc
inc
sub
je
pop
iretw
sub
js
adc
push
sbb
ljmp
and
pusha
mov
mov
in
stos
cwtl
and
mov
scas
pop
adc
es
les
dec
jp
test
adc
loope
stc
inc
arpl
dec
and
dec
dec
rcr
mov
call
mov
out
fldenv
jmp
gs
dec
sbb
push
mov
nop
popl
fisubl
jl
repnz
lea
int
pop
fsubrl
mov
xor
fisttpll
stc
mov
dec
movsl
aam
into
dec
das
iret
add
jb
cmp
int
lea
cmp
push
mov
add
add
arpl
std
int
jnp
xchg
inc
or
xchg
inc
mov
jle
ds
aam
jle
fwait
nop
popa
add
add
std
stc
ret
std
pop
jb
lock
dec
and
jle
xchg
test
sbb
mov
add
out
dec
mov
push
mov
mov
mov
cmp
mov
mov
mov
xor
cmpsl
pop
lods
test
mov
adc
pop
dec
push
sbb
ficompl
mov
fdivs
mov
or
inc
iret
into
loop
push
cmp
lds
ljmp
xchg
lods
arpl
outsl
fcmovbe
pop
std
testl
ret
inc
insl
mov
popa
insl
inc
repz
idivl
mov
hlt
mov
xor
out
insl
aam
ds
mov
hlt
std
jb
pushl
movsb
out
sub
jnp
push
aam
inc
aas
dec
outsl
dec
jnp
lahf
xchg
stc
jecxz
sahf
or
sub
mov
aad
mov
inc
adc
mov
test
out
int3
scas
jge
pop
adcb
xor
adc
inc
xchg
lods
loope
lods
and
iret
dec
jecxz
and
fstpl
push
sub
pop
push
mov
cmp
sub
ds
xchg
sbb
aam
or
xchg
pop
lock
cmp
imul
lcall
ljmp
imul
int
xchg
mov
mov
ljmp
xchg
mov
ja
data16
dec
aas
fwait
ljmp
test
mov
rolb
imul
shrl
pusha
pop
dec
cmpsl
lds
xchg
dec
jns
inc
movsb
iret
popa
addb
pop
gs
fldt
mov
or
daa
xchg
mov
cli
jg
lds
sbb
es
adc
std
sbb
flds
in
pop
adc
test
inc
adc
andb
sbb
jnp
mov
push
jno
jne
out
xor
aad
cmp
pop
add
ja
push
out
aad
out
stos
xchg
sarb
push
leave
test
cmp
dec
pop
or
mov
test
popf
sahf
and
in
pushf
loopne
lds
xchg
imul
insl
mov
or
ja
jmp
jg
pop
pop
lds
push
cmpsb
nop
xchg
cmp
pop
push
xchg
test
add
jmp
ljmp
outsl
sar
jg
xchg
popf
or
xchg
lods
xor
xchg
jecxz
ljmp
into
out
add
and
pop
int
mov
lahf
push
cmp
stos
nop
lea
jl
mov
mov
xchg
pop
stos
add
lahf
mov
fistl
pop
xlat
into
fcmovb
in
push
dec
out
sub
cltd
push
repnz
mov
or
jle
cmp
mov
rolb
ds
sbbb
sub
cmpsl
repnz
push
push
jne
xor
test
mov
les
fbstp
inc
mov
mov
sarb
add
cld
mov
das
lahf
push
lcall
lea
adc
xchg
mov
mov
ds
mov
ret
out
cmp
int
xchg
movsl
inc
xor
jl
mov
push
pushf
out
mov
int
mov
jl
insb
xchg
push
add
addr16
add
out
cmp
test
fidivl
mov
movsl
mov
addr16
movsb
mov
out
jns
sub
mov
sbb
icebp
int3
sub
pop
xlat
es
fnstenv
push
and
imul
fdivrs
push
mov
xchg
inc
mov
outsl
lret
enter
lods
mov
cmovnp
out
in
pop
adcl
dec
adc
les
sbb
adc
push
fdivrl
sub
bound
push
outsb
popa
scas
sbb
outsl
push
test
js
hlt
xor
pop
rorl
push
inc
xor
jle
jo
inc
inc
dec
xlat
pop
push
mov
popl
out
mov
clc
scas
xchg
xor
xchg
jge
test
and
in
mov
mov
push
mov
mov
adc
pop
imul
adc
adc
mov
int3
mov
fiadds
paddsw
test
sahf
addr16
dec
movsb
flds
fldl
test
mov
jnp
push
or
push
movsb
lcall
cmp
in
call
jle
mov
jb
mov
orb
and
daa
xlat
pop
fiaddl
inc
sbb
js
push
es
mov
cmp
sub
sbb
dec
cmpsl
fwait
inc
add
jns
pop
lret
fdivr
out
mov
or
dec
fs
sbb
aad
mov
or
jmp
lods
mov
or
adc
xor
pop
mov
or
lea
out
push
mov
mov
xor
sbb
popf
mov
sbb
xlat
adc
call
mov
inc
jb
or
subl
inc
loope
repnz
aas
mov
jb
xor
jp
cmp
addr16
rolb
push
xchg
pop
mov
fucomp
hlt
addr16
jo
loope
clc
pop
cmp
ljmp
fistl
icebp
fidivrl
mov
xor
cmpsb
push
add
sub
jno
mov
sbb
sub
imul
pop
pop
gs
push
pop
inc
sub
pop
cltd
jecxz
mov
sbb
movsl
bound
adc
loop
pusha
fdivs
jo
push
in
repz
xchg
daa
aad
ret
push
loopne
dec
push
loopne
adc
and
loopne
lret
add
mov
insb
pusha
hlt
dec
wbinvd
cmc
negl
pop
movsl
push
pop
repz
cmpb
popa
sbb
int
pushf
cmp
inc
inc
jmp
aaa
iret
sbbl
daa
insl
sarb
xchg
push
lods
dec
jle
and
icebp
subl
fstp
add
inc
fstpt
add
push
out
mov
push
mov
roll
push
push
and
sub
sbb
scas
outsb
mov
mov
imul
add
sub
or
push
xor
pop
sbb
sahf
xor
and
sbb
stos
hlt
pop
in
xchg
xor
jge
clc
adc
lock
loopne
xor
dec
pop
xor
and
daa
sbb
in
dec
jmp
add
xchg
dec
and
push
andb
insl
pop
or
jae
sbb
les
faddp
mull
data16
mov
ja
jb
js
push
test
dec
sub
scas
pop
jno
push
add
imul
fistl
fiaddl
hlt
xor
stos
lret
dec
pushf
lods
stos
adcl
add
xchg
adc
xor
mov
dec
jb
adc
dec
dec
iret
add
mov
and
cwtl
mov
lods
mov
leave
aam
out
sub
or
movswl
mov
out
lcall
pop
stc
addl
aaa
cmp
pushf
aam
outsl
xor
ljmp
xchg
inc
fmul
jp
js
enter
lcall
idiv
lods
xchg
lret
arpl
or
jp
sbb
xchg
loopne
enter
jo
dec
test
push
and
fcompl
mov
enter
movsb
lea
lock
sbb
daa
stos
push
fdivs
sub
loop
and
into
fnstcw
stos
jbe
mov
xor
mov
nop
sub
or
aaa
and
imul
data16
jmp
inc
daa
lods
xchg
sbb
sbb
mov
lret
cmp
dec
jo
push
out
into
mov
fs
sbb
in
xchg
ret
js
les
cmp
mov
dec
lret
mov
icebp
test
fdivrs
add
das
aas
jle
fs
cmp
mov
sub
repnz
inc
test
jo
xlat
sbb
xchg
lock
add
lock
push
and
jo
push
fiaddl
sbb
fstl
xor
stos
cmpsl
into
mov
jmp
cmc
mov
scas
or
das
xor
test
add
xchg
jno
bound
adc
fwait
int
push
xlat
sub
dec
mov
test
testb
movsb
iret
std
cmc
lea
das
stc
bound
jnp
scas
fistps
aad
mov
enter
test
cmp
call
inc
out
mov
jp
popf
cmp
xlat
imul
pop
test
rcrl
or
xor
or
xor
loope
incl
mov
push
stos
dec
sbb
cmpsb
mov
es
push
pop
sub
loopne
xor
fs
or
in
mov
pop
adc
ss
push
xor
into
mov
sti
pop
ds
mov
lock
dec
cmp
sbb
lock
popa
sub
jp
cwtl
pop
pop
mov
jae
arpl
jnp
sar
pop
xorl
push
dec
sub
jge
mov
mov
xor
enter
filds
xor
addr16
icebp
mov
cmp
sub
insb
lock
push
enter
imul
filds
mov
mov
outsl
mov
subl
cmp
lahf
loopne
stos
fs
sub
xchg
xchg
sub
jp
mov
add
out
mov
dec
inc
adc
std
pop
sub
scas
iret
lret
jmp
test
pop
xchg
shlb
aas
addr16
adc
imul
imul
fimuls
or
leave
insl
pop
hlt
sbb
push
iret
je
das
leave
inc
iret
push
cmp
lock
push
call
inc
push
scas
add
jns
push
mov
adc
pop
nop
sbb
nop
mov
jl
outsl
and
mov
mov
out
dec
dec
mov
add
or
imul
lea
inc
subl
out
out
inc
loope
mov
stos
or
dec
seta
mov
xchg
int
sbb
test
push
insl
fistpl
ss
lret
shll
loopne
xchg
ss
adc
cmpsl
leave
cmpsl
xor
xchg
jae
push
in
jle
hlt
enter
inc
out
or
leave
jbe
sbb
inc
stc
sub
add
xchg
sbb
pop
cmp
jno
sub
and
push
sbb
es
ret
xor
rcl
imul
lret
lahf
cli
gs
divl
addl
leave
scas
jge
mov
lret
lcall
lcall
or
mov
call
mov
shll
aas
jns
inc
mov
and
xchg
inc
sub
mov
jns
xchg
lds
adc
iret
xor
insb
call
and
push
hlt
jp
in
push
aad
pop
xor
xchg
shrb
dec
pop
pop
mov
and
mov
push
mov
sbb
mov
jle
in
xchg
enter
leave
mov
or
insl
stos
mov
push
mov
or
cwtl
mov
ret
insl
idivb
sbb
fldt
sti
in
xor
cwtl
out
shrl
movsb
cmovp
imul
add
es
xor
rcll
pop
push
dec
pop
in
sbb
cmpsb
loop
inc
in
push
addl
sbb
ret
dec
dec
adcl
push
pop
fmuls
cmc
imul
adc
fnstsw
pop
pushf
jbe
sbb
loope
inc
pushf
fs
inc
mov
cmpb
bound
or
add
jl
clc
inc
dec
or
push
jge,pt
jae
jno
popf
mov
sub
fcomip
xchg
jmp
xor
test
repnz
inc
decb
mov
mov
test
mov
loope
xor
stc
add
in
xchg
imul
rcrl
shl
mov
aas
jp
or
jbe
gs
mov
into
lret
xchg
mov
dec
js
je
mov
rcrl
lcall
push
and
je
xchg
push
cmp
mov
dec
stos
dec
inc
fsubr
mov
test
in
fldcw
pop
lret
push
and
sbb
pusha
inc
adc
je
mov
cmp
pop
cmpsb
shrl
mov
push
unpcklps
fwait
int
add
add
xchg
cltd
adc
or
or
cwtl
cwtl
insb
lods
add
shlb
inc
scas
add
in
xchg
fdivl
jo
xchg
sub
mov
jmp
dec
or
out
xchg
sub
aas
sbb
dec
mov
push
jo
cld
push
add
add
cs
outsl
cmpsl
ds
sarl
adc
les
sub
jle
add
mov
mov
dec
rcll
mov
jmp
sbb
mov
jecxz
mov
pop
sbb
jns
add
loopne
flds
mov
jmp
js
es
push
inc
adc
data16
imulb
stc
aad
add
rol
test
idivl
insl
out
xchg
stos
and
or
mov
cwtl
pusha
lea
add
and
mov
loopnew
mov
outsb
jae
xor
jg
shll
xor
in
cld
xchg
outsb
sub
mov
mov
sbb
push
push
f2xm1
sti
add
ja
iret
loopne
divl
mov
inc
dec
lods
dec
lock
push
push
iret
jo
lret
push
pop
addr16
jo
pop
mov
fwait
jmp
fs
adc
and
dec
cmc
jne
jae
ds
mov
pop
and
out
jl
add
in
mov
push
pop
test
in
repz
cmp
cmc
xor
lret
setl
sti
data16
les
pop
mov
cmp
dec
xor
pop
mov
cmp
nop
push
aaa
mov
stos
lret
xchg
xchg
mov
popa
rcrl
outsl
xlat
outsb
std
data16
push
pop
cmp
xchg
sub
lds
addb
add
xchg
loopne
dec
mov
jne
jge
into
mov
mov
push
jb,pt
jne
add
adc
lea
test
pop
mov
mov
jbe
aad
je
jne
loopne
xor
fbstp
andl
aam
repnz
adc
xor
outsl
sbb
mov
andb
mov
fcomps
movsl
call
enter
jae
cli
sub
cmpb
ret
call
mov
adc
enter
mov
or
inc
fcmovb
stos
jmp
subl
mov
xchg
int
adcb
xor
mov
mov
mov
jns
js
xchg
xchg
xlat
inc
xor
sub
out
adc
xor
addr16
jae
repz
pop
push
sbb
repz
xchg
out
add
adc
jae
mov
and
movsl
test
sti
and
stos
aaa
add
cld
mov
mov
out
mov
stos
test
arpl
and
es
cwtl
mov
or
nop
adc
xor
pop
push
flds
push
mov
daa
cmc
jae
jae
add
cmp
xchg
xor
test
cmp
in
jo
mov
mov
push
rolb
sbb
ror
fiadds
cmp
xchg
jmp
add
adc
pop
jne
aaa
mov
add
insb
sahf
lds
mov
rcrl
lret
clc
lret
cmpsl
add
out
sbb
mov
stos
in
mov
ret
adc
mov
pop
std
fidivrl
lods
inc
xchg
xchg
xor
jbe
push
mov
mov
xchg
mov
push
ffreep
and
jne
aas
add
mov
cld
pop
rol
and
int3
ficoml
push
cmp
fnsetpm(287
std
aad
ret
int
jle
inc
ret
test
test
xchg
scas
inc
loopne
ljmp
push
xor
adc
pop
ss
sti
aaa
fldl
pushf
pop
mov
lods
fcomps
push
add
push
filds
loop
lret
cwtd
cli
cmp
out
xchg
pop
cmpsl
mov
cmp
daa
cmp
push
fcoml
call
jae
insl
pop
aas
fsubrs
jle
sub
jle
and
adc
mov
imul
mov
cmp
cmpsb
outsl
pop
ss
mov
movsl
ljmp
negb
add
xor
sub
mov
clc
fmuls
push
add
sahf
inc
and
jg
mov
sbb
negl
fisttpl
insl
test
adc
es
cmp
shrl
add
xchg
sahf
movsl
int
mov
rol
dec
mov
imul
adc
iret
xchg
push
push
sbb
aad
mov
xor
dec
idivb
pop
mov
mov
fisubrs
cld
popa
sahf
outsl
add
iret
mov
mov
hlt
or
and
or
dec
push
push
jle
loopne
cmpsb
and
dec
in
dec
and
outsl
cld
jle
cld
cmp
dec
popl
pop
int
and
cmpsb
pop
mov
popf
inc
inc
sbb
sbb
in
ret
mov
jecxz
push
jne
das
sbb
push
or
pop
ss
imul
ret
jle
jae
jg
inc
push
je
mov
sub
add
mov
adc
negb
dec
aas
divl
insl
xchg
cmpsb
bound
cmc
popf
idivb
pop
sbb
dec
std
jge
scas
into
pusha
nop
repz
and
inc
inc
imul
mov
int3
cmpsb
jle
pushf
addr16
dec
inc
insl
push
lock
adc
xor
or
ficoms
mov
fsubr
pop
in
sub
adc
adcl
mov
ja
dec
pop
aaa
push
leave
dec
jb
mov
or
jmp
adc
cmc
xchg
mov
bound
dec
sub
ret
add
push
mov
pop
stos
aam
jo
imul
push
mov
cmc
arpl
fistpll
pushf
mov
sbb
mov
icebp
movsl
inc
ljmp
stc
mov
mov
out
setg
repz
dec
or
jbe
xor
lds
mov
stc
pop
shl
pusha
daa
push
jmp
add
ss
fbstp
sub
or
lods
jno
sub
mov
call
lahf
pop
popa
mov
negl
ja
outsb
jns
movsb
in
push
adc
push
lahf
stos
les
sub
enter
int3
mov
pop
hlt
jnp
out
scas
push
and
and
or
or
mov
scas
pop
iret
daa
rorl
out
jmp
rolb
pop
popf
out
cmc
pop
imulb
push
add
cld
test
ds
lods
push
cmpsl
loope
cmp
dec
inc
or
fsubl
push
lret
lea
pop
or
aas
inc
rcr
rorb
mov
sub
fmuls
fbld
add
pop
test
push
xchg
in
mov
pop
loop
test
addl
cli
xchg
adc
jecxz
sub
sti
xchg
rorb
sbb
lret
jge
dec
cmp
inc
idivl
icebp
lods
shll
cmp
adc
enter
fldt
mov
cmc
imul
imul
in
add
sbb
pusha
xlat
jae
iret
aaa
sbbl
pushf
or
out
nop
sub
adc
lcall
xlat
fisubl
mov
mov
je
add
shll
movsb
mov
pop
aam
ficomps
sub
mov
movsb
imull
or
int3
add
jo
dec
cmp
add
push
add
in
and
in
stc
xor
jae
scas
mov
push
pop
sahf
lahf
inc
ss
lcall
outsl
enter
mov
es
mov
mov
outsl
push
imul
adc
jnp
hlt
ds
mov
sub
lcall
pop
into
xchg
pushf
mov
adc
arpl
cmpsb
insl
cmp
pop
adc
jl
xchg
push
jg
aas
sbb
stos
outsl
call
pushf
mov
push
andb
mov
dec
and
mov
cmpsb
insl
lods
push
or
cmpsl
push
fsubl
xchg
mov
stc
jl
sti
pop
sub
outsb
jmp
in
or
cmp
in
jbe
into
jnp
or
or
jb
sbb
fsubrl
scas
ja
mov
movsl
imul
lret
inc
mov
aam
push
or
das
pop
mov
sahf
pop
xor
repnz
daa
popf
mov
and
pop
pop
cmp
jle
clc
jge
movsb
jne
enter
add
mov
cmp
gs
lret
xchg
nop
andb
cmp
daa
mov
mov
loop
imul
mov
xor
adc
js
sahf
in
pop
dec
jmp
sub
adc
and
pop
shlb
jno
icebp
cmp
fsts
jnp
fcompl
and
hlt
lods
fwait
xor
fbstp
add
add
cmp
xor
mov
ret
jle
cmp
arpl
dec
imul
fcomp
push
and
xchg
loopne
pop
stos
cltd
loope
movsl
sub
cmpsb
cli
add
test
mov
hlt
nop
cmpsl
jl
and
sub
mov
and
xor
dec
orb
das
xchg
mov
mov
inc
mov
xchg
push
imul
xchg
push
test
outsl
dec
add
imul
xchg
and
insl
push
mov
cmp
movsl
pop
adc
test
in
movsb
cmp
inc
bound
adcl
pop
insl
decb
cltd
movsb
shll
pop
adc
int
mov
add
pop
mov
in
push
fmull
pop
lods
jge
adc
repz
call
cli
jle
mov
mov
sbb
xor
sbb
movsl
in
and
jp
cmp
in
movsl
mov
ja
cltd
stc
add
fs
xor
into
data16
lea
popf
or
notl
adc
mov
dec
cmpsw
xchg
and
push
pop
mov
mov
mov
out
in
xchg
lret
addb
mov
insl
push
pusha
shlw
push
mov
add
add
fwait
dec
push
sbb
xor
add
jnp
xorl
mov
pusha
inc
cli
push
xlat
push
mov
clc
add
out
hlt
mov
jg
outsb
aas
insb
mov
add
scas
ja
aad
lock
xor
roll
subl
and
cltd
jmp
add
or
xor
test
out
pop
aas
aam
fisubrs
pop
int3
mov
imul
lahf
add
ret
and
xchg
cs
xchg
jnp
popf
push
fnsave
push
inc
lret
dec
fisubl
jbe
imul
push
xchg
sub
lock
xchg
sub
in
or
dec
dec
aam
lods
inc
dec
ss
xchg
xchg
mov
pusha
lcall
int
mov
aad
loop
stos
lods
sbb
cmp
inc
test
pop
push
xor
pop
adc
in
mov
das
sti
shlb
push
fisubl
subb
inc
xor
aaa
out
mov
lea
js
testb
insl
ficoml
imul
and
jl
enter
idiv
inc
mov
shlb
loope
sti
cmpsl
push
pop
cmp
mov
pop
in
or
sahf
lds
pop
inc
test
sub
rcrl
rcll
add
mov
jl
fmulp
inc
bound
cs
scas
add
dec
ds
adc
lds
cltd
dec
adcb
pop
es
sbb
jp
sub
in
jg
cmp
mov
cmp
lret
in
fs
mov
aam
push
mov
ljmp
mov
cli
subb
mov
bound
sub
fcmovne
insb
jp
inc
mov
sarb
dec
hlt
jb
sbb
dec
or
xchg
mov
add
ja
xchg
mov
loope,pn
cmp
adc
decl
xorl
ret
not
imul
nop
jae
ljmp
adc
xchg
xor
into
jnp
imul
insl
shrb
popa
pop
inc
mov
jge,pn
push
test
or
outsl
cmp
idivb
mov
add
rorl
sbb
xchg
xchg
add
pop
push
rorl
inc
pop
pop
mov
call
ja
hlt
adc
pusha
cmp
xor
dec
xchg
in
jp
inc
cld
das
lds
std
sar
pushf
push
xchg
pop
sub
stos
sbb
arpl
lret
sbb
mov
ret
fucomi
sbb
jo
mov
andb
jmp
xchg
xlat
sub
sarl
push
fdiv
repz
xor
lods
stos
xor
in
push
adc
sbb
fstpt
mov
arpl
mov
mov
mov
loop
pop
aaa
add
xchg
pop
fldenv
test
push
jbe
movsl
adc
and
lret
sbb
je
pop
les
dec
mov
iret
data16
pop
leave
or
adc
or
sub
loope
sub
add
sti
sar
lahf
adc
test
xchg
mov
xbegin
popa
mov
movsl
cmpsb
lock
xchg
and
jae
sub
aas
popf
or
add
xchg
in
loopne
daa
jmp
pop
and
test
aad
adc
dec
test
out
sub
sahf
aam
inc
out
popa
aas
idivb
cmc
pushf
jno
outsl
xchg
inc
fistps
imul
scas
rcrl
call
push
xchg
out
out
add
cmp
or
or
or
lock
dec
bound
bound
sbb
mov
in
mov
sub
pushf
cmpsb
loope
insb
clc
cwtl
cs
dec
test
fstp
or
and
loope
mov
in
cwtl
xchg
movsl
out
sub
and
push
adc
push
sub
inc
loope
scas
daa
scas
mov
add
mov
out
adcb
xchg
and
testl
icebp
cmc
jge
insl
call
scas
aaa
add
insb
frstor
push
fwait
sub
and
or
sbb
inc
jle
mov
pop
cld
dec
in
inc
xor
and
aaa
in
xor
mov
je
sub
and
dec
mov
pop
pop
lock
hlt
popa
mov
fistl
andb
hlt
es
mov
dec
inc
lods
pop
cmp
mov
jbe
xchg
inc
mov
push
loopne
jge
mov
inc
popa
icebp
mov
test
or
loopne
rolb
sbbb
icebp
xor
movsb
insl
insl
jb
in
inc
lock
or
sbb
pushf
adc
mov
sub
add
loop
imul
sti
es
clc
mov
frstor
lret
lock
xchg
dec
mov
out
imul
cltd
dec
inc
xchg
lea
mov
cmp
add
aaa
pop
cmp
decl
mov
mov
lods
push
jecxz
jmp
aam
sub
ja
xchg
imul
fcoms
clc
inc
ja
add
imul
add
nop
pop
jp
loopne
sub
popf
xchg
pushf
pop
jp
add
int3
mov
jl
jb
stos
push
or
mov
scas
push
sbb
fwait
jns
dec
rol
add
xchg
dec
sti
ljmp
rol
dec
jbe
pop
ds
clc
or
popl
vmovq
inc
adc
test
dec
sub
movsl
popa
jle
push
decl
addr16
pop
data16
jae
add
inc
loope
loope
int3
js
repnz
popf
jb
or
shl
xor
cld
mov
rcl
sub
and
add
inc
or
jp
loopne
sarb
ja
test
hlt
pop
mov
stc
rcrl
jg
mov
push
dec
test
push
ror
call
jp
cld
stc
push
mov
subb
in
pop
mov
and
push
mov
call
shll
and
push
adc
xchg
jl
pop
out
cwtl
hlt
and
adc
clc
push
dec
scas
dec
push
or
std
dec
ljmp
sbb
loopne
cli
test
jl
fstpt
jl
mov
inc
push
lahf
xchg
jo
jmp
xor
pop
sarl
imul
jg
mov
insb
sub
lods
cmpsb
jnp
mov
test
in
add
clc
mov
xor
fldt
pop
ljmp
push
pop
aaa
mov
dec
jne
mov
pop
out
lret
or
out
js
xor
fstp
addr16
push
sbb
cmp
inc
in
jmp
and
jp
test
pop
pusha
stos
pop
fstps
rorl
pop
stos
xchg
cmpsb
fadds
inc
cmp
and
bound
test
scas
adc
jno
mov
mov
lcall
mov
xlat
loop
rorl
loopne
cwtl
sub
std
div
jns
mov
fsubs
fisttpll
and
adc
dec
das
jecxz
test
add
or
int3
shrl
das
cld
or
mov
pop
cmp
or
xor
arpl
mov
cmp
adc
xchg
insl
aaa
arpl
aam
insb
gs
popf
cmp
stos
sub
call
test
jb
call
ja
hlt
ss
xor
cmc
in
insl
outsl
and
mov
cli
mov
xchg
add
mov
pusha
add
cwtl
inc
imul
sarb
lcall
sub
aad
bound
push
mov
push
add
lods
ret
push
mov
out
call
xchg
mov
mov
mov
mov
jp
push
push
mov
call
jne
cmc
add
fisttpl
or
and
insl
push
xchg
jne
dec
fldt
xor
clc
or
jecxz
ja
or
negb
mov
push
xchg
aas
ret
dec
inc
inc
scas
ja
enter
xor
notl
mov
push
fdivrs
rorl
and
stos
dec
xlat
inc
scas
pop
push
daa
std
xor
popf
lretw
popf
add
sbb
aad
ss
movsl
xchg
in
xchg
scas
not
out
inc
je
lods
push
fistpl
inc
fisttpl
daa
jp
xchg
repnz
imul
je
pop
int3
pop
sub
int
sbb
push
add
arpl
leave
or
dec
imul
mov
and
mov
lock
pop
mov
popf
test
add
aaa
cli
adc
lods
fldenv
fs
cmp
pop
add
fisubrl
arpl
outsb
pop
add
imul
mov
rorb
lret
add
stc
xor
pop
inc
xchg
fwait
add
fisubrl
pop
add
adcl
pop
or
adc
outsb
fildll
xor
cli
pop
lods
mov
fwait
cmp
shll
test
push
cmp
lock
dec
mov
inc
cmp
aas
mov
mov
ds
mov
mov
in
or
jo
sub
subb
fcomps
pop
out
aas
mov
mov
lock
ret
cmp
stos
mov
movsl
xlat
testl
in
int
mov
and
xor
sbb
mov
jae
ret
shll
popa
outsl
in
xchg
push
push
sbb
sbb
fs
aaa
cmp
lahf
mul
dec
je
or
mov
push
mov
push
sbb
or
pop
fdivrl
xchg
push
inc
ja
mov
flds
jbe
mov
sub
xchg
push
sbb
sub
lds
or
popa
xor
cs
inc
rclb
fstps
push
jo
ret
add
push
mov
into
nop
sbb
cmp
xor
mov
add
scas
fstps
cmpsb
or
mov
push
orb
push
sahf
or
sbb
sarb
loop
rclb
enter
dec
mov
std
addl
pop
and
dec
sub
std
and
or
mov
cmp
and
fcompl
jp
and
sahf
lds
cwtl
mov
mov
mov
out
xor
jb
push
movsb
aas
adc
fcomps
push
scas
in
mov
dec
cmpsl
xchg
loopne
ljmp
cmovbe
fcomp
mov
daa
pushf
into
add
outsl
sbb
cmp
xchg
popf
push
lahf
xchg
aad
imulb
fisubl
decb
adcb
lods
cmp
sahf
popf
mov
mov
pop
stc
leave
repnz
sbb
jecxz
sub
cmp
negl
stos
sub
xor
jg
or
add
cs
cmp
out
loope
add
call
cli
nop
clc
sbb
repnz
dec
icebp
cs
int3
imul
mov
jl
or
pop
sbb
lds
bound
lret
push
ja
test
lds
mov
add
lcall
insl
outsb
add
mov
cmp
out
popf
subb
pushf
test
aam
mov
xchg
mov
xchg
and
pop
pop
dec
jno,pn
push
add
push
and
cltd
pop
xor
xchg
jecxz
adc
ss
es
push
popa
inc
xor
push
sbb
add
cmp
xor
jns
sbb
cmp
mov
notb
jno
test
inc
dec
mov
pop
mov
dec
in
jg
push
stc
sbb
fmul
and
jae
lods
dec
jmp
addr16
and
mov
mov
adc
dec
test
pop
ror
push
xor
es
int
sub
add
cmp
mov
bound
or
mov
hlt
out
shrl
sub
pop
jbe
xchg
cmc
orl
test
test
das
cmp
and
call
or
sbb
outsb
sub
into
shll
mov
sbb
add
cmp
jne
lods
insb
cmp
push
adc
add
lahf
dec
add
je
aad
xchg
out
xchg
shll
data16
push
mov
das
push
stos
out
sahf
jo
pushf
inc
xlat
std
add
add
outsl
mov
lret
insl
ja
sub
movsb
aaa
jae
popf
pop
mov
add
aam
lds
into
ss
fucomp
inc
add
sbb
xor
popa
fisubrl
push
pop
fstpl
mov
sar
pop
xor
int3
sahf
or
iret
hlt
scas
mov
inc
leave
xor
cmp
xor
jle
pop
xchg
bound
cmpsb
fmuls
xor
jae
lcall
popa
mov
sub
or
out
inc
or
xchg
pop
repnz
adc
idivl
js
lods
mov
int3
push
push
jg
adc
das
mov
mov
sbb
das
xor
in
add
int
cs
push
cld
repnz
mov
sbb
jae
push
mov
adc
out
jno
sub
jmp
sub
mov
mov
dec
aam
inc
outsl
hlt
inc
push
jae
popa
cmp
mov
sub
cli
pushf
and
push
jge
fcoms
ret
dec
and
int3
shll
dec
scas
ret
rcrb
in
es
fs
xor
subb
xor
ss
rorb
inc
pop
adc
pop
mov
jne
cmp
and
push
fdivrp
es
jbe
push
gs
int
sbb
sbb
mov
xor
cmp
jo
xchg
inc
mov
aad
push
loopne
mov
dec
sbb
das
sbb
ret
mov
stc
loope
xor
mov
push
es
imul
dec
inc
jne
mov
les
loope
and
add
mov
test
mov
xor
pop
rcrb
and
add
pop
push
xchg
enter
pop
std
xchg
dec
cwtl
outsl
shl
cmpb
imul
movd
adc
lahf
add
inc
stc
lods
add
lea
les
and
cs
movsl
sub
mov
cltd
out
out
jb
std
neg
or
decl
addr16
dec
dec
jecxz
push
inc
jecxz
mov
add
movsl
psubsw
aaa
scas
adc
mov
xchg
cli
cmp
out
enter
or
mov
nop
daa
fsts
cmpsb
pop
jle
jmp
sti
imul
in
mov
dec
push
daa
out
mov
mov
lcall
mov
ret
fisubrs
sbb
pop
mov
out
into
sbb
or
mov
adcl
pop
ds
adc
inc
pop
pop
mov
bound
fidivl
cmc
push
push
leave
daa
ret
pop
repz
push
cmpsb
sahf
out
xchg
cltd
dec
push
fidivs
pop
rclb
or
loope
popf
lock
cmp
rcrl
movsb
pop
lock
mov
outsb
popf
jne
jp
dec
mov
aas
adc
stos
dec
pusha
or
cmp
ds
xor
sbb
xchg
lret
sbb
jnp
mov
xchg
mov
das
jnp
xor
add
rolb
in
shll
imulb
aas
aaa
inc
jns
xor
adc
and
mov
std
jae
rorl
das
add
jge
fildll
xchg
bound
filds
or
es
cmp
mov
or
nop
pop
sub
repz
add
jo
stos
and
lods
cwtl
push
jno
icebp
mov
inc
jp
shlb
into
cmpsl
shrl
loop
rcll
and
andb
ds
sbb
je
and
pop
insb
call
das
and
pop
add
jo,pt
jnp
push
jbe
ret
mov
xchg
lods
rcll
shlb
push
out
pusha
out
es
addb
fsub
cwtl
add
xchg
mov
push
xchg
dec
out
mov
xlat
xchg
mov
jecxz
lahf
loope
adc
daa
je
insl
and
lods
push
jmp
aam
sbb
jne
rcpps
dec
mov
insl
ds
fistpll
mov
das
stos
add
adc
jmp
lea
adc
into
cwtl
out
pop
test
or
div
add
mov
pop
sub
int3
outsb
shrb
mov
outsl
cmc
daa
push
mov
imul
mov
cmp
or
push
jecxz
mov
cmp
sbbl
or
sub
dec
cmpb
pop
icebp
inc
insb
dec
jl
call
or
and
jp
mov
ss
xchg
adc
test
jg
sbb
shll
pop
mov
arpl
mov
push
and
dec
cmpsl
repz
enter
das
das
or
xor
add
hlt
cmpsl
in
stos
out
dec
js
sub
xchg
ret
dec
sti
fdivs
pop
je
mov
xchg
in
cmp
faddl
sbbb
mov
sbb
mov
pop
addb
movsl
pop
stc
mulb
lret
push
lods
or
jl
in
je
pop
sbb
xor
inc
repnz
mov
cmp
pop
loope
mov
mov
fld
sub
movsl
fiaddl
sbb
push
fmulp
dec
scas
outsl
scas
jo
mov
mov
fsubs
xchg
stos
xlat
js
lods
add
or
jb
daa
mov
jb
sub
orb
push
cmp
or
cmp
shrb
andl
pop
and
sbb
ret
sbb
imul
sahf
test
pop
xor
xchg
xchg
pusha
jne
push
mov
ds
xor
outsl
loope
scas
and
data16
dec
mov
ljmp
in
movsb
clc
add
outsl
adc
push
pop
push
push
push
ret
popf
push
loopne
rcrl
out
adc
dec
rorl
and
xor
pusha
xchg
or
push
xchg
bound
addr16
xor
test
ljmp
jecxz
jl
js
add
loopne
and
roll
fidivrl
pop
mov
testl
pushf
xchg
adc
nop
cmp
xorl
lret
cmp
stos
lds
shrb
data16
jns
sbb
fimull
pop
arpl
and
scas
xchg
mov
jb
jg
pop
ljmp
aas
push
xchg
cwtl
mov
std
pop
pop
add
je
frstor
dec
lods
push
mov
data16
fiaddl
jecxz
popf
dec
arpl
lods
push
cmp
inc
mov
add
lea
mov
adc
push
cmp
xor
mov
insb
xchg
jg
in
js
fs
push
dec
adc
imul
xchg
mov
loop
xchg
test
and
jmp
popf
inc
add
adc
ror
in
add
out
test
xchg
lcall
rcrb
add
or
jge
pop
les
dec
scas
pushf
push
aaa
psadbw
neg
cmp
pop
fldenv
xchg
jnp
mov
cmp
rcrl
loope
mov
xor
mov
jmp
mov
and
pop
dec
mov
inc
sti
test
inc
iret
stos
push
xchg
and
and
je
fmull
popf
and
out
scas
jge
inc
repz
mov
xor
adc
mov
scas
and
test
pop
push
loop
pop
filds
mov
mov
sub
into
iret
mov
inc
lock
pop
xor
inc
loopne
loope
popf
test
jns
stos
jle
dec
dec
test
push
xchg
inc
xchg
in
imul
pandn
nop
pop
aam
push
in
movsb
jns
in
mov
lods
or
rcl
xor
imul
adc
xchg
xlat
aaa
sbb
xlat
jge
cmpsl
push
pop
mov
sub
pop
dec
adc
sub
add
add
and
out
lret
mov
sbb
push
repnz
loope
sbb
mov
push
mov
cmp
lcall
dec
mov
adc
std
into
jecxz
push
ds
stos
inc
jle
push
call
adc
das
sub
or
xlat
mov
inc
dec
mov
idivb
or
pop
fsubrs
into
mov
jecxz
or
in
out
shlb
or
sbb
aas
inc
movsb
es
mov
push
jnp
xor
aas
lcall
cld
fnstcw
xorb
xor
mov
push
stos
shrb
sbb
or
add
push
mov
sbb
cmp
incb
xchg
push
jno
add
xor
dec
xchg
add
pop
clc
std
sub
mov
loope
mov
jbe
cmpsb
cmp
xor
js
clc
ss
scas
add
adc
outsl
xchg
jge
and
cmp
popf
stos
inc
leave
push
nop
jl
inc
add
sub
sub
rorl
mov
mov
push
mov
or
cltd
jnp
xlat
push
insb
xchg
xchg
xchg
or
adc
lds
lods
add
aas
lahf
and
int
jbe
pop
or
jge
scas
xchg
ljmp
lods
mov
stc
in
adc
lods
lods
mov
sbb
aad
or
add
repz
sbb
sub
xor
or
imul
stc
add
xor
jbe
inc
mov
inc
push
mov
push
xchg
xchg
adc
jg
sti
push
es
jae
and
mov
xchg
push
and
mov
and
sbb
sbb
or
std
fs
pop
out
jns
push
xor
mov
add
cmp
scas
xor
lods
inc
popa
mov
aaa
jbe
shll
sub
mov
stc
xchg
fldt
lahf
inc
jno
dec
inc
insb
out
dec
imul
insl
hlt
cmp
cmp
xchg
test
insb
mov
arpl
bound
jbe
jmp
jnp
and
gs
arpl
loopne
cmp
mov
xor
mov
mov
cli
mov
sub
adc
jne
jnp
and
and
xchg
lods
mov
push
sub
aaa
out
and
fsub
and
dec
mov
push
pop
pop
inc
or
lds
pop
mov
int3
out
mov
sbb
xor
ret
test
jmp
sub
roll
andb
iret
push
and
call
loopne
pusha
xchg
jnp
mov
mov
dec
ja
xlat
ret
push
popa
and
test
and
dec
jnp
popa
cmpsl
into
or
popa
jns
aam
push
sti
bound
aam
je
stos
int3
outsb
mov
inc
mov
ud2
pop
cmp
imul
sub
dec
enter
and
arpl
jp
loope
adc
mov
jle
add
aaa
push
and
scas
fists
stos
aaa
arpl
pushf
popf
mov
test
jne
out
jp
rorl
fcompl
clc
xlat
jns
sbb
testl
and
addb
pop
mov
lret
rcrl
or
into
int
jecxz
aad
add
pop
lds
sub
dec
mov
jb
sbb
ficoml
mov
sub
or
and
stos
xchg
push
negb
movsl
std
push
pop
and
jge
divb
sub
xchg
fists
aam
mov
or
push
aam
call
jg
sti
jmp
inc
test
icebp
mov
cmp
stc
jmp
dec
movsb
shll
and
cltd
cmp
daa
jno
out
cmp
xor
jne
add
andb
pop
je
nop
dec
jae
or
mov
push
xchg
adc
dec
fsub
mov
cmp
xchg
adc
xor
mov
mov
clc
popa
xchg
insl
inc
les
aam
in
fimull
cmp
lea
sub
popa
icebp
add
mov
push
ss
lcall
inc
and
add
and
mov
or
add
loop
ja
and
je
rclb
das
cmpl
loopne
mov
add
inc
cmpsb
fisubrs
mov
shrb
inc
arpl
pop
lret
mov
iret
imul
mov
lcall
dec
sbb
and
hlt
jb
call
fnclex
sti
in
mov
mov
or
add
jmp
and
out
mov
loopne
sub
lret
cmp
out
je
mov
mov
sub
lahf
jmp
push
cmp
dec
aam
adc
data16
aam
aaa
imul
pop
cwtl
aaa
adcl
jle
dec
out
repz
xor
pop
push
leave
xor
std
xlat
es
pop
fstpl
cld
sti
jns
xor
sahf
and
loop
sub
orb
dec
divl
pop
into
ffreep
sub
orb
ficoml
xor
and
mulb
pop
lds
jbe
pop
xor
push
jecxz
lods
sbb
test
or
out
scas
inc
mov
inc
fwait
sbb
movsb
sbb
mov
mov
sub
xchg
cmpsl
fmull
mov
jle
stc
xchg
popf
mov
and
xchg
rorb
or
push
sbb
dec
mov
loope
aas
jne
add
cmc
inc
insl
sbb
adc
jg
test
pushf
sbbl
pusha
negl
mov
xchg
cs
fsubs
pop
rcl
scas
dec
mov
xor
clc
mov
lods
jnp
sti
mov
icebp
and
loop
mov
in
cld
clc
mov
push
or
jno
push
imul
sahf
adc
pop
jmp
fs
inc
pop
jmp
into
loop
lret
dec
adcb
xor
push
lret
iret
out
clc
adc
mov
xchg
adc
jns
cld
daa
lock
xchg
sbb
cwtl
daa
lea
and
cli
pushf
jns
nop
gs
dec
loope
sub
outsb
imul
push
xor
mov
dec
or
adc
cmc
dec
inc
pop
test
mov
mov
dec
or
cmpsl
mov
leave
cld
jae
les
cmp
cmpsb
lahf
ficoml
pushl
pop
add
iret
shlb
push
mov
fadds
mov
cld
cli
xchg
lock
stos
out
xchg
fdiv
xor
movsb
mul
pop
lock
inc
je
pop
pop
mov
xchg
ret
dec
adcl
add
inc
mov
outsl
inc
subl
sub
add
rolb
pop
jns
xchg
mov
cmp
inc
ficoml
dec
lods
push
jg
mov
int3
mov
xor
stc
dec
xchg
inc
jno
scas
outsl
movsl
gs
imul
or
imul
jp
insl
clc
cwtl
stc
repnz
push
or
and
in
test
dec
or
sti
mov
inc
lret
int
mov
jecxz
dec
jb
jle
cmpsb
jl,pn
adc
int3
mov
inc
adc
xor
aam
cmp
clc
adc
fidivrl
cmc
das
rcll
push
aas
pop
iret
lock
fdivr
jge
mov
sbb
add
xor
sar
aas
xor
divb
mov
fs
loop
out
adc
stos
push
imul
jnp
cmpsb
pop
or
pop
jmp
adc
lar
sbb
jne
into
cmp
fistpll
dec
ljmp
sbb
stos
pop
and
add
cld
cmp
adc
lahf
leave
jecxz
sarb
inc
outsb
pop
cs
inc
jl
inc
cmp
ds
jle
cmp
fwait
jp
ret
scas
and
sbb
lcall
repz
leave
mov
jp
cmp
jno
rorb
add
jno
pop
gs
sub
dec
push
lock
rclb
popa
jle
enter
paddd
and
in
push
int
mov
mov
cltd
xchg
sbb
sbb
cmc
hlt
cmp
stc
cmp
cmp
lea
imul
mov
jns
and
pop
mov
cli
js
or
sbb
cmp
or
and
or
movsbl
push
pop
icebp
sbb
dec
cmp
dec
sbb
stc
mov
mov
out
sbb
pop
adc
iret
ljmp
in
inc
xor
popf
and
rcl
mov
or
test
jnp
sbb
sbb
cwtl
aaa
iret
cmpsb
lret
lret
sub
pop
jg
lret
pop
pop
imul
cmp
jle
jae
or
gs
sub
or
dec
out
jbe
notb
mov
rolb
adc
in
pop
dec
loope
scas
cld
adc
aad
push
xchg
sub
adc
mov
pop
pop
fdivrl
xor
xor
das
aam
push
jge
jle
fcmovnu
dec
and
sub
xor
jg
and
push
fidivrl
push
cmp
pop
lea
pop
enter
addr16
dec
out
mov
leave
imull
mov
jbe
jnp
inc
lea
sbb
xchg
or
ss
mov
and
fnsave
sbb
scas
cmpl
scas
jecxz
push
jg
mov
cmpsb
xchg
std
scas
je
fnstsw
adc
cmp
insb
rorb
add
clc
fwait
push
sahf
jp
and
jns
sub
insb
dec
jbe
mulb
ss
cmc
xchg
or
pop
xlat
fidivs
sbb
in
je
xor
in
mov
jl
mov
add
bound
add
stos
xlat
je
in
jmp
outsl
andl
movsl
mov
sub
jmp
jg
lret
aad
cmp
mov
pop
iret
arpl
out
ja
enter
clc
movsl
xchg
pop
adc
mov
xor
inc
adc
mov
sahf
push
sbb
and
xor
or
mov
dec
stc
inc
nop
fidivrs
bound
sub
adc
xchg
mov
ret
sub
xorl
insb
inc
xchg
push
jno
add
nop
jle
test
cmp
fcompl
cld
mov
sub
das
sbb
inc
push
or
mov
mov
mov
jmp
cmp
enter
fbld
inc
cmp
cld
sbb
lahf
dec
jbe
and
movsb
and
fwait
mov
shlb
leave
cltd
sbb
inc
lock
cmp
pop
jp
jmp
aad
out
push
lods
mov
lock
add
subb
ljmp
mov
in
aad
int
add
pop
pop
mov
push
mov
popf
popa
ds
aas
sub
loop
inc
ljmp
xchg
addr16
add
jne
aaa
sbb
insl
adc
movsl
pop
and
rcrb
icebp
add
mov
xor
pop
stos
orl
mov
lods
jno
in
aas
adc
ret
pop
push
adc
lds
popf
lods
xchg
or
gs
bound
sbb
ja
mov
xchg
or
mov
outsb
xchg
push
into
mov
adc
pop
dec
mov
lods
mov
and
or
movsb
inc
mov
and
lcall
adc
movsb
cltd
movsb
dec
xor
adc
out
xor
les
xchg
fistps
push
cmc
cltd
das
add
sub
cld
cmp
flds
in
pop
fcomps
and
rclb
mov
dec
outsb
sahf
push
bound
jo
jb
pop
stos
xchg
xchg
or
ds
push
and
sub
lcall
fs
push
lds
push
lea
and
push
adc
mov
jl
movsb
sbb
sub
ss
add
into
or
imul
push
idivl
dec
insl
and
fildll
ds
mov
aas
fmuls
mov
dec
shlb
repnz
push
and
int
ds
rorb
scas
inc
pop
mov
and
inc
jno
add
mov
or
lahf
push
ljmp
lea
mov
js
es
pusha
ret
mov
jge
call
pusha
jle
leave
ds
push
or
dec
ffreep
mov
sbb
mov
mov
dec
std
lods
ficompl
outsb
lds
add
xchg
dec
mov
add
sbb
dec
cmpsb
clc
xchg
shl
andb
fdivs
xchg
add
mov
jno
call
push
mov
movsb
jle
or
iret
add
fwait
xor
nop
test
inc
test
lcall
not
push
mov
or
pop
leave
or
fbld
into
ljmp
fcmovnb
mov
jecxz
in
jg
jno
das
jo
inc
aas
je
cld
jae
cmpsl
mov
ljmp
insb
xor
flds
inc
jp
imul
imulb
mov
push
int3
je
movsw
mov
jmp
or
insb
or
cmp
outsl
jl
aaa
or
sbb
pop
call
aad
pop
and
pop
sub
lcall
sub
push
xor
inc
rol
adcl
add
in
adc
ss
mov
mov
push
mov
and
push
cs
cli
cli
push
unpckhps
test
xlat
retw
sub
aam
ds
mov
xor
add
decb
loopne
cmpsb
lret
jecxz
nop
shl
andl
jo
mov
cmpsb
je
jmp
sbb
sbb
movl
xor
lcall
xchg
out
sub
mov
mov
inc
mov
cwtl
dec
cmp
addl
sub
mov
addr16
in
mov
push
clc
lahf
xor
mov
mov
jns
jg
xor
cwtl
int
imul
std
test
mov
lahf
xchg
insl
xchg
out
mov
loope
lcall
jmp
bound
mov
stos
cmp
cmp
enter
lret
addb
sub
or
in
sbb
out
cmc
dec
mov
jbe
shrl
xchg
mov
std
cli
je
das
xor
push
inc
hlt
push
xor
jmp
fwait
pushf
push
negb
adc
jmp
daa
sub
sub
enter
jecxz
xor
inc
lds
roll
ljmp
out
cld
xchg
loopne
cmp
aaa
cmp
dec
fsubr
testl
adc
xchg
adc
and
add
addr16
in
jae
stos
fisubrs
es
or
test
loope
lret
stc
fmuls
loopne
arpl
out
dec
in
jmp
push
fldl2t
fistpll
jns
ficoml
loope
ds
iret
ss
dec
jo
icebp
fisubrs
pcmpeqd
sub
mov
dec
test
out
jl
pop
and
and
imul
adc
mov
pop
pop
pop
or
push
es
iret
sbb
xor
in
mov
popa
dec
fisubl
int3
push
mov
jne
in
lea
sbb
sahf
sub
add
rcrb
adc
dec
jle
das
hlt
adc
aaa
lret
inc
push
mov
jl
mov
sbb
gs
cmp
mov
bound
or
aas
mov
or
call
movsl
pop
xlat
dec
ret
jns
andb
les
jmp
dec
inc
xchg
and
adc
imull
lret
add
dec
pop
xchg
add
jo
popf
fisubl
pop
inc
ret
mov
fists
cmc
mov
mov
pop
je
hlt
movsl
mov
pop
adcl
adc
lea
fucomip
or
mov
fcomip
add
fs
add
jmp
mov
cmpsb
push
nop
test
cli
js
ret
scas
loop
push
nop
rcr
or
lds
aaa
pop
adc
gs
hlt
cmp
stos
mov
add
out
in
dec
call
cmp
adcb
sub
clc
daa
leave
inc
fisubs
pop
and
jl
and
sti
jmp
iret
pop
pop
shrb
mov
push
mov
jno
fdiv
push
xorb
sub
das
mov
push
xor
lret
push
mov
js
repnz
ret
sbb
scas
arpl
sbb
jnp
std
jecxz
sub
loopne
out
jge
and
leave
ljmp
inc
push
idivb
xchg
inc
jg
xchg
es
lds
add
in
pop
out
inc
jo
and
xchg
fnstcw
push
mov
pop
push
inc
pop
cvtps2pd
aaa
or
fldt
mov
in
shrl
fbld
cmp
sbb
adc
sar
dec
xchg
dec
mov
xchg
aas
adc
inc
adc
loop
mov
enter
pop
and
movsb
push
push
jae
sub
xchg
es
sub
fildll
pushf
or
xchg
jp
lock
mov
pop
pavgb
sub
xchg
lcall
dec
std
sbb
imull
jo
pusha
ds
mov
test
add
jne
add
cmp
scas
mov
jbe
bound
test
pop
dec
xchg
or
in
out
fcom
push
dec
push
test
leave
ss
addr16
inc
aam
jo
shrl
emms
daa
aad
insl
repz
lods
call
repz
imul
mov
mov
mov
mov
lcall
mov
push
inc
add
loop
cmp
mov
jmp
sbb
mov
pop
pusha
mov
jl
scas
stos
mov
in
mov
test
xchg
xchg
dec
lcall
aas
and
sub
push
xlat
hlt
jg
ds
xchg
scas
sarb
bound
sub
push
xor
mov
cmpsl
clc
xchg
jge
nop
sub
or
pushf
mulb
pop
jg
sahf
push
mov
jns
insb
clc
push
or
dec
xchg
mov
or
push
jle
js
sub
jnp
jmp
push
mov
fucom
mov
cmc
movsb
add
xchg
ss
mov
aas
popa
loopne
jl
mov
pop
lock
sub
jg
fstpl
push
aad
fmul
scas
lahf
sbb
dec
sahf
cwtl
out
mov
xor
mov
fnstsw
pop
test
sub
xchg
testb
push
outsl
scas
bndldx
jmp
pop
daa
rcll
stos
pop
test
inc
test
fwait
div
js
sahf
pop
inc
int
cmpsl
sbb
repnz
push
lods
js
clc
jle
or
mov
jge
pop
inc
mov
jp
jno
xor
stos
jae
stos
popa
jb
repz
jmp
enter
insl
jnp
inc
cltd
push
es
jnp
lods
dec
and
icebp
outsb
addr16
xor
push
inc
sbb
jmp
xor
mov
and
sub
inc
je
popf
aam
dec
fsubrs
xchg
cld
pop
mov
je
push
xchg
sbb
andl
addr16
iret
and
jmp
and
push
sub
shl
mov
pop
in
adc
cmp
mov
call
ffree
stos
scas
sub
test
pop
push
dec
adcl
pusha
jnp
mov
js
bound
and
cmc
push
cmp
push
sub
sub
cmp
and
pushf
mov
jle
lret
imul
push
adc
mov
xchg
jp
mov
cld
sti
xchg
sti
mov
or
cmp
inc
mov
lcall
das
outsl
inc
or
xor
insb
xor
cmp
jp
subl
mov
cmpsl
dec
jb
into
xlat
nop
cmpsl
leave
mov
jns
lods
stos
sub
pop
daa
lods
or
js
hlt
mov
mov
push
and
adc
mov
push
popf
test
ss
int3
sub
out
inc
or
sbb
push
or
jp
ss
data16
pop
mov
push
lcall
mov
pop
ljmp
stos
fdivrs
and
dec
xchg
xchg
push
push
lcall
add
cmp
jp
sarl
and
cmp
add
mov
pop
repz
cwtl
dec
add
xor
cs
and
and
mov
popf
idivl
mov
pop
sbb
bound
jbe
and
inc
mov
push
push
hlt
pop
loope
sahf
addl
add
xor
daa
jl
cli
andb
mov
insb
and
jmp
add
fidivs
popf
bound
cmpsb
and
or
test
lret
leave
dec
pop
pop
aaa
xor
or
bound
repz
daa
lret
mov
cmp
in
stos
pop
in
adc
pop
mov
loope
out
jnp
lret
movsl
fbstp
es
loopnew
ds
jle
fisubl
dec
repnz
insb
and
pop
sbb
xor
and
insl
fidivl
xchg
dec
push
int3
pushf
add
dec
mov
xchg
fwait
inc
out
cmp
rorb
xchg
ds
in
mov
mov
sbb
xor
fiaddl
and
push
xor
adc
mov
mov
dec
testb
and
aad
lods
mov
call
mov
add
dec
mov
push
jns
cmpl
iret
xor
test
cmp
pop
mov
js
adc
popa
cmpsb
and
mov
cmp
iret
inc
dec
inc
dec
adc
stos
jnp
push
pop
sub
jae
and
add
rcrb
xchg
dec
jmp
jno
int
fs
in
pop
movb
pop
push
sti
push
repnz
pop
out
in
add
ja
pop
iret
mov
mov
cmp
dec
stos
ss
int3
inc
pusha
test
push
or
es
inc
pop
push
pop
mov
add
or
arpl
into
dec
and
idivb
cmp
loope
cmp
rclb
stos
stc
aam
sbb
fbld
mov
pop
add
xchg
mov
int
loopne
mov
dec
mov
cmp
and
sbb
push
dec
mov
js
sub
mov
addl
push
ja
jl
adc
add
pop
xchg
es
fwait
icebp
iret
pop
or
int
inc
dec
in
cmp
adc
shrl
jno
mov
sub
push
add
inc
lods
mov
pop
push
outsb
fcmovnb
or
mov
mov
xor
mov
mov
fnsave
cmp
cmpsb
sub
sbbb
cmp
sbb
jmp
lock
xor
bt
popa
pop
push
ja
mov
cs
lods
enter
mov
jecxz
pop
jbe
push
and
mov
mov
dec
incb
leave
scas
cmpsb
push
pop
scas
in
mov
icebp
pop
cwtl
jmp
xchg
pop
testb
xchg
add
cwtl
std
mov
dec
cmpsb
pusha
cmc
adc
xchg
je
sbb
lea
xchg
loope
fisttps
mov
push
int
test
jb
into
lcall
add
shl
adc
rcll
pop
mov
ret
in
or
push
sbb
icebp
daa
or
ljmp
popf
sbb
mov
jno
mov
shlb
rorl
outsb
cmpl
pushf
xchg
jge
or
mov
and
stos
lret
cld
cmp
or
ja
or
sbb
in
cmpsb
orb
mov
jae
popf
inc
add
jbe
cld
mov
mov
mov
movsl
nop
sub
insb
lcall
fidivs
sbb
inc
or
in
aas
xchg
sub
shr
dec
rcrb
dec
sub
or
add
aam
push
push
mov
cmpsb
neg
xchg
xor
mov
das
fcoml
ljmp
lds
lds
test
add
sti
outsl
imul
repnz
inc
adc
shll
jecxz
subb
xor
sbb
inc
in
pop
jne
fwait
cmp
test
add
push
push
pop
repz
xchg
in
sbb
sbb
pop
mov
les
lea
mov
cld
jecxz
ficoms
mov
dec
ja
adc
icebp
setae
push
pop
lods
mov
daa
jecxz
add
pushl
movsl
adc
test
adc
push
dec
test
sub
iret
fcomps
out
bsf
push
shrl
scas
jg
sbbb
and
in
dec
pushf
into
fildll
xchg
jmp
mov
je
jle
fnstenv
lret
aaa
popf
inc
pusha
daa
scas
cmp
pop
xlat
arpl
mov
out
loopne
insl
arpl
sahf
pop
insb
dec
push
dec
cmp
jno
cmc
mov
ficompl
sub
push
test
ja
test
or
nop
ds
sub
xchg
cmc
stos
shll
shll
pop
fsts
and
mov
jge
pop
xor
loope
sti
pusha
popf
pop
jo
dec
mov
negl
xor
sub
out
mov
icebp
ss
push
ror
imul
es
xchg
pop
gs
jae
sub
xor
scas
pop
sbb
ljmp
out
fnstenv
pop
mov
cmp
sbb
push
push
repnz
fsubrs
inc
lret
ja
push
ret
sbb
xchg
cmp
sahf
inc
jg
pop
mov
je
push
stos
xchg
cwtl
mov
jle
insb
scas
repnz
out
fwait
mov
jl
mov
adcb
rcl
ss
shl
push
xchg
rorl
sahf
mov
ret
mov
dec
ss
enter
mov
mov
xchg
call
push
in
decb
ss
push
pop
add
movsl
lds
iret
ss
movsbl
enter
jo
push
lret
and
xchg
pop
ljmp
outsl
out
jecxz
mov
add
arpl
loope
mov
addr16
and
scas
sub
jp
test
or
jecxz
out
stos
cmp
and
and
iret
jnp
adc
cmp
sarl
sub
shlb
rcrb
push
idivb
dec
loopne
cmp
pop
mov
js
mov
repz
ja
in
sub
adc
and
in
pop
add
pop
pop
push
or
add
fldenv
sub
addr16
xor
jne
dec
fcomp
mov
out
pop
sbb
lret
ffree
loopne
stos
and
push
and
and
bnd
mov
imul
into
leave
add
cmp
add
popf
push
sti
mov
iret
xor
jle
imul
adc
fldl
add
aad
xchg
or
lods
add
xor
mov
inc
repz
stos
mov
push
add
and
pop
mov
es
jg
lret
jne
pop
xchg
fs
rclb
mov
xchg
sbb
or
lods
sarl
sub
std
ss
cwtl
push
divl
jle
jne
sbb
call
pop
arpl
stos
pop
aad
pop
inc
xorl
insb
inc
push
and
xchg
fcmovb
jbe
sub
dec
jmp
and
das
push
add
xchg
nop
add
sbb
pushaw
lods
mov
push
and
and
call
nop
add
mov
dec
test
cmp
int3
icebp
ja
inc
jmp
repnz
lea
rcll
sbb
pusha
lds
imul
push
cmp
push
pop
and
lds
sub
sbb
lahf
adc
daa
add
push
xchg
subb
or
sti
mov
imul
and
mov
sub
add
loopne
aam
cmc
and
lods
lds
mov
pop
pop
pop
inc
out
sub
das
cmp
sub
std
fnstcw
aad
sti
inc
push
sub
dec
aaa
push
leave
push
push
into
test
jmp
jno
push
adc
addr16
xchg
outsl
sub
stos
out
aaa
loopne
sbb
adc
adc
pop
iret
mov
sub
xchg
sub
mov
jl
or
repz
push
mov
mov
cmp
cmp
mov
movsl
mov
int3
xchg
cmp
sbb
add
jmp
lret
or
out
add
mov
push
ja
fists
mov
roll
in
scas
xlat
pop
pusha
lea
xor
cmp
loope,pn
inc
jp
sub
mov
sbb
into
xor
gs
push
inc
pusha
add
imul
inc
into
push
dec
mov
cli
sbb
cmpb
scas
iret
add
xor
cwtl
push
push
cmp
outsb
rcrb
push
push
cltd
pop
mov
dec
and
sub
sbb
inc
repz
jbe
cmp
stos
cmpsb
mov
andl
cwtl
fisubs
mov
adc
push
inc
les
daa
or
sub
cmp
push
sub
mov
xchg
cmpsb
in
mov
popa
dec
gs
cmp
or
adc
push
pop
xor
aad
xlat
pop
mov
and
lret
int
out
mov
xchg
mov
or
pop
mov
out
test
xchg
ret
jns
icebp
xlat
pusha
je
inc
sub
sub
pop
mov
je
add
xchg
test
xchg
mov
sbb
cwtl
sub
sbb
dec
inc
mov
cltd
aaa
addr16
adc
orb
add
xchg
arpl
cwtl
js
es
push
add
mov
add
xchg
ds
inc
out
jnp
aad
xchg
fildl
test
stos
xchg
or
lahf
out
test
sub
adc
pop
jle
lcall
cmp
xchg
aas
inc
cli
add
sarl
dec
fadds
jno
out
and
insb
xchg
icebp
dec
mov
inc
movb
fisubl
xchg
xchg
or
or
jns
mov
fisttpll
loopne
ret
or
push
pop
mov
bound
bound
into
iret
adc
cli
dec
add
pop
and
mov
dec
out
repnz
lcall
adc
outsl
add
cmpb
cmp
fidivrl
leave
xor
mov
je
into
jno
adc
cmpl
xchg
mov
add
mov
lss
or
push
lea
sbb
outsb
jo
test
pop
shlb
adc
icebp
cmp
xor
push
movsl
mov
movsl
les
insb
xlat
xor
fcomps
lcall
jl
pop
cmpsb
mov
push
aam
in
dec
mov
adc
test
inc
lret
add
sub
dec
sbb
stc
imul
data16
pop
inc
out
sbb
dec
xchg
repz
insb
mov
sbb
xor
and
fsubrl
addr16
push
lea
or
sub
mov
xchg
fiaddl
ljmp
pop
push
dec
jne
repnz
daa
int
data16
cs
xchg
adc
cmpsl
jne
inc
lods
outsb
adc
lock
pop
sub
push
pop
outsl
popf
xchg
in
sub
lret
pushf
xchg
fs
or
ja
sub
ljmp
adc
mov
pop
push
ja
sbb
pop
mov
loope
js
pop
push
mov
sbb
xchg
neg
fdivr
loop
data16
add
sbb
mov
movsb
push
inc
adc
ss
scas
push
jmp
int3
popa
mov
ret
or
ljmp
dec
loopne
jne
sbb
xor
cwtl
xor
imul
pop
jns
sub
mov
dec
stc
sub
js
loopne
je
and
je
or
nop
pop
jmp
insb
jecxz
jg
cwtl
mov
fadds
cltd
imul
outsb
popa
mov
sbb
lahf
fst
add
mov
repz
push
lret
loopne
je
aad
xor
jo
xchg
inc
mov
loopne
adc
push
xchg
mov
js
in
lret
dec
xlat
ss
push
fidivrl
mov
adc
lds
sbb
in
ds
pop
rcl
mov
imul
sub
mov
fxch
xchg
jp
mov
dec
dec
repz
pop
sub
dec
insb
js
xlat
push
loopne
inc
icebp
fsubrs
mov
mov
lret
and
xor
jge
mov
xchg
add
jns
sbb
aas
cltd
xor
test
sbb
sub
pop
add
xchg
mov
fmul
jnp
orl
mov
ja
adc
sahf
xor
repnz
inc
lea
or
pop
imul
cli
int
jp
xor
adc
movsl
je
cmp
jmp
sahf
movsb
and
inc
and
rcrb
stc
stos
int
xchg
push
mov
cwtl
xor
movsb
gs
push
into
or
fwait
xor
jnp
ljmp
adc
pop
pop
pop
andb
push
xchg
loopne
sbb
dec
sub
push
jecxz
push
dec
push
and
xchg
ret
jp
int3
jl
test
pop
add
push
fwait
pop
and
xchg
int
mov
or
mov
push
sbb
jle
push
push
fistl
shlb
jnp
mov
popa
mov
adc
addr16
push
pushf
mov
sar
testl
leave
push
test
fdivr
inc
dec
popf
in
aaa
insb
ss
in
sub
sbb
fsubrs
shrb
nop
pop
inc
mov
sub
jno
push
aam
or
rolb
mov
popf
dec
imul
out
lret
incl
clc
outsb
in
jl
hlt
rcrb
add
cmc
xlat
lods
bound
adc
xchg
inc
add
lahf
mov
and
sahf
rorl
lds
ljmp
movsb
clc
loop,pt
shrl
lods
cmpsb
adc
sbb
cmp
sbb
or
cmp
std
daa
repz
addr16
insl
mov
or
cmpsb
sbb
add
lds
mov
add
repnz
lods
lret
mov
imul
addr16
xchg
mov
sahf
mov
mov
cmp
dec
fwait
and
dec
xor
mov
dec
cltd
cli
jg
dec
jne
js
push
outsb
dec
test
mov
xchg
inc
testl
es
dec
in
fadds
cmpsb
sub
inc
sahf
cmpsb
jmp
jp
adc
mov
or
pop
push
fisttpll
ds
xor
inc
enter
adc
pop
insl
icebp
dec
in
mov
out
jecxz
xchg
push
outsb
push
rcl
xor
cmp
push
xchg
imul
and
mov
in
push
or
xchg
inc
repnz
lods
mov
xlat
pushf
dec
xchg
jae
outsb
popf
push
push
sbb
jmp
xchg
jo
jp
xor
fmul
jne
int3
xor
push
and
fmuls
pslld
inc
pushf
testl
loope
leave
and
cli
dec
jnp
mov
xchg
call
xchg
jmp
inc
or
push
add
loop
aaa
push
push
mov
push
aaa
xlat
xor
test
fwait
cmp
inc
ja
cmp
add
adc
mov
sub
popa
xchg
out
adc
cmp
orb
out
sub
in
mov
ljmp
movl
test
pop
or
lahf
push
mov
dec
out
iret
lds
xor
dec
or
inc
jle
mov
stos
dec
push
push
cmpsl
pop
lret
mov
push
mov
jge
rcrb
repz
xor
xor
inc
repz
xor
xchg
or
mov
xchg
xchg
lods
pop
lahf
ret
aaa
dec
push
xchg
pushf
or
push
add
xor
repnz
push
imul
popa
add
pop
push
les
push
outsl
iret
lret
movsl
pop
add
mov
jp
push
xlat
sub
and
push
popf
push
push
inc
jbe
pop
scas
pop
push
push
jle
sub
into
mov
xchg
or
dec
out
fsubl
add
cld
testb
sbb
xchg
mov
test
mov
imul
cs
xchg
fists
add
rol
mov
xor
ljmp
mov
adc
sub
sbb
push
stc
add
pushf
pop
rcll
adc
mov
xchg
and
and
pop
jle
clc
loopne
xchg
dec
push
lcall
mov
cmp
pushf
pusha
mov
push
mov
ss
lods
test
push
repz
push
jbe
scas
dec
sbb
out
ret
das
mov
jge
push
push
test
cs
xor
jecxz
icebp
add
ss
out
in
inc
xor
scas
xchg
rol
and
cmc
jmp
insb
notb
mov
mov
inc
mov
dec
rcl
inc
xchg
sub
push
mov
xchg
jge
sub
out
dec
out
cmp
push
jb
mov
jae
cwtl
shl
mov
rolb
data16
pusha
rorl
rorl
adc
xchg
lahf
inc
orb
and
cmpsl
or
inc
xlat
aas
inc
mov
repnz
cmp
push
mov
icebp
mov
mov
jmp
bswap
add
sub
insb
repz
cs
inc
inc
push
cmp
scas
and
or
cmp
sbbl
mov
adc
push
pop
ja
aam
sub
pop
lods
cmp
jnp
in
inc
add
leave
sub
jne
cmp
std
mov
test
push
lea
add
icebp
clc
xchg
pushf
sub
xor
jl
jnp
sub
lahf
lea
push
mov
iret
add
aas
out
xchg
xchg
scas
bound
sub
add
andb
sarl
xchg
test
sub
rcll
enter
pop
cli
popf
mov
es
fs
repnz
fstpl
xor
cmp
and
fisubrs
cs
mov
sub
int
add
nop
adc
ss
or
popa
mov
divl
loope
xor
dec
dec
mov
cwtl
jl
movsl
dec
lds
cmp
insb
hlt
and
movsl
push
xchg
or
mov
adc
inc
fdiv
push
adc
xlat
jg
push
push
les
lods
mov
iret
inc
cmp
icebp
mov
push
mov
pop
sbb
lds
inc
fidivrs
sbb
lahf
mov
add
loopne
sbb
aaa
fwait
jbe
dec
jg
sub
xchg
leave
sarb
xor
clc
mov
inc
je
ret
jbe
loopne
sbb
notl
inc
xchg
xchg
jno
dec
test
push
lea
aaa
pushf
sub
ja
fcomip
test
fimull
push
pop
xchg
mov
adc
data16
div
dec
jecxz
mov
fcmovu
or
sub
mov
adc
or
add
inc
mov
adc
pop
dec
xor
jge
fdivs
xchg
jp
pop
sub
es
adc
cmp
lods
icebp
dec
hlt
push
jp
dec
idivb
mov
js
jge
mov
adc
jae
xor
dec
add
hlt
xchg
lea
dec
mov
mov
mov
clc
out
or
clc
add
nop
mov
mov
jmp
fnstenv
jbe
jmp
push
cmc
cld
adc
adc
cmp
adc
cmp
out
imul
or
sub
nop
hlt
stc
xchg
in
pop
push
sub
cmc
dec
push
push
xor
dec
xor
mov
lret
xchg
jnp
ret
sub
mov
loope
dec
cmpsl
adc
mov
jle
mov
jecxz
pop
mov
js
cltd
add
in
push
mov
fisubrl
xchg
push
scas
mov
jbe
push
push
js
xchg
mov
shrl
out
stos
or
jl
pop
out
add
sbb
in
lds
imul
mov
adc
outsl
mov
cs
add
repnz
call
leave
ss
scas
xchg
xchg
add
cli
and
scas
arpl
xor
leave
jmp
aaa
push
lcall
adc
xlat
cmp
cmp
jbe
sub
and
push
mov
pop
cmp
inc
pop
cmp
shrl
add
imul
out
loope
sbbb
mov
pop
and
pop
idiv
adc
adc
xor
mov
cmp
jp
jno
ss
std
mov
jbe
sub
je
push
cmp
movsb
aaa
or
sbb
dec
scas
push
mov
mov
daa
push
push
sub
xor
and
vcvttps2dq
mov
aad
xor
inc
stc
push
cmp
fistps
jecxz
sbb
xchg
arpl
jbe
mov
xor
dec
and
or
adc
imul
inc
pop
ljmp
cmpsb
pushf
jo
mov
xchg
outsb
out
in
jns
popa
push
clc
xchg
dec
ret
push
jl
jge
jle
or
mov
mov
mov
mov
imul
sub
and
xor
loope
stc
xchg
leave
push
or
nop
or
and
mov
bnd
imul
inc
imul
xchg
sub
mov
lods
adc
lret
mov
jne
mov
jb
xor
mov
pop
js
mov
push
shrb
rcl
cli
mov
sub
pop
xchg
mov
and
sarb
xchg
in
xor
outsb
sarb
add
xchg
mov
outsb
mov
cmp
stos
sub
out
add
outsl
xor
sbb
fnstsw
fcoml
aas
std
les
and
lret
cmp
or
sub
in
jbe
ljmp
imul
or
ljmp
adc
in
inc
adc
cmp
add
xchg
lock
sub
inc
push
mov
dec
sar
mov
in
push
sbb
sbb
ljmp
sub
rorl
pop
lret
xchg
xorb
in
int3
dec
add
adc
testb
mov
les
icebp
loopne
cmp
pushl
outsl
jnp
outsl
in
orl
inc
mov
int
pop
sub
lock
cmp
dec
imul
jbe
mov
enter
jmp
cmpsl
adc
sahf
pusha
pusha
sub
hlt
jmp
dec
das
mov
lcall
cmp
mov
push
popa
or
out
pop
add
jge
pop
rolb
inc
pop
sub
hlt
fnstsw
mov
fisubrl
mov
push
cwtl
stc
arpl
mov
mov
das
adc
adc
out
lods
inc
or
cmpb
sbb
dec
mov
dec
dec
test
pop
pop
insl
repz
shrb
push
lods
pop
ds
clc
ret
pop
orl
aad
cmp
pop
fists
repz
cmp
dec
call
sub
rclb
out
movsb
xlat
scas
test
or
mov
sub
int
mov
sub
and
mov
xor
xorl
addr16
arpl
shrl
es
dec
inc
cmp
mov
xlat
pop
fidivl
jns
push
dec
and
sub
clc
adc
ret
idivl
addr16
inc
push
test
stos
je
lret
int
and
loopne
jmp
dec
push
pop
push
cld
icebp
movl
pop
mov
cmp
xlat
adc
fldt
sub
lock
fdivrp
aas
testl
call
test
fsubr
fucomp
jne
jecxz
fisubrl
jle
out
test
lods
in
jae
push
cmpsb
ja
dec
mov
out
and
and
xor
mov
rolb
mov
mov
out
dec
inc
jmp
and
mov
mov
punpckhdq
jg
sub
xchg
pop
test
ja
dec
dec
mov
addl
repnz
test
fisubs
stc
out
test
xlat
dec
sbb
pop
xor
call
lds
test
and
mov
push
mov
and
and
push
mov
mov
inc
xchg
mov
fists
push
jge
add
sarb
adc
cmp
cmp
flds
adc
je
cld
push
xor
insl
lds
aaa
cmp
test
mov
mov
dec
jne
inc
dec
adc
pop
mov
leave
call
data16
std
mov
ja
lcall
ret
int
lds
sbbl
sub
jp
and
lea
mov
rorb
lahf
lods
mov
sbb
jbe
stos
pop
inc
xor
inc
and
jmp
mov
xor
mov
mov
xchg
jae
aaa
or
xchg
out
mov
push
push
pop
xchg
lds
and
out
iret
inc
repz
jl
out
sti
push
pusha
or
rcrl
or
pop
or
sub
or
cmp
sbb
xchg
inc
lods
fwait
movsl
fstp
popf
push
mov
setno
mov
das
push
hlt
dec
pushl
sbb
fldl
xor
adc
mov
adc
or
mov
or
popa
mov
jb
sub
loop
pop
and
inc
lret
fbld
add
mov
cmpsl
ljmp
insb
lods
repnz
mov
jl
mov
sbb
sahf
in
repnz
inc
iret
cmp
and
aad
pop
jb
in
pop
pop
dec
push
icebp
fadd
sub
cmp
and
sldt
shrl
adc
in
mov
and
sbb
lret
cmc
pop
js
pop
push
outsl
push
xchg
mov
int
xchg
inc
mov
jmp
pop
mov
cs
insl
cmc
inc
mov
mov
add
mov
stc
dec
sti
mov
dec
sub
xchg
ljmp
jp
xchg
fwait
and
jb
out
and
mov
mov
push
xchg
scas
mov
aas
lahf
push
mov
jge
dec
sti
jns
outsl
pop
pop
lods
and
push
add
mov
lret
rolb
clc
fdivrs
outsb
inc
sbb
dec
leave
adc
std
mov
xchg
add
mov
jbe
xorb
aam
or
pop
lahf
outsl
xor
mov
int3
jo
insl
ja
adc
shll
and
lods
pop
cld
add
push
mov
pop
add
aam
add
aam
and
sbb
int
inc
push
jg
dec
xor
sub
xchg
in
sti
jle
rorb
mov
cs
sub
xchg
push
sub
mov
inc
test
adc
push
in
mov
addr16
fwait
inc
dec
inc
mov
cli
shrl
dec
xor
pop
inc
push
addr16
and
outsb
in
rcrb
fmull
dec
in
add
and
xor
test
imul
or
loop
inc
cmovge
test
dec
invd
pop
out
fdivl
push
jge
xorl
clc
pop
test
mov
add
mov
cs
fstpt
rcll
movb
out
pusha
popf
mov
fsts
jns
jne
cmp
sahf
inc
jns
int3
sti
cmc
clc
jo
mov
into
adc
inc
lds
inc
pop
dec
sub
rcll
mov
xor
push
add
and
dec
sahf
leave
jb
dec
shr
lea
sti
xchg
adc
adc
push
loop
jecxz
add
pop
mov
push
test
shr
dec
divl
divb
movsb
cs
sub
inc
cs
ss
sbb
and
pop
arpl
imul
clc
insb
sub
or
scas
mull
fwait
cltd
jg
jecxz
sahf
and
cwtl
sub
push
mov
popa
sbb
mov
jle
repnz
andb
stc
jo
mov
femms
movsl
cwtl
cmp
push
adc
xor
loop
cmp
jne
fcomps
mov
push
cmp
sub
addb
cmp
cltd
ret
push
jb
sahf
fstps
jle
mov
inc
push
xlat
test
jecxz
jne
xlat
icebp
addr16
jl
xchg
lea
jns
in
cwtl
gs
or
mov
push
mov
xlat
pop
cmp
push
lods
test
xor
stc
dec
push
sahf
push
fidivl
pop
addr16
dec
insb
cli
pop
movsl
data16
sub
cmp
cs
pushf
lea
in
lea
dec
jne
nop
mov
push
push
das
adc
shlb
sar
push
jge
or
jne
push
xchg
and
negl
ljmp
data16
test
and
and
aas
bound
addr16
pcmpeqw
xor
xor
rorl
gs
sti
pop
stc
xchg
loopne
data16
ds
stos
mov
int3
xchg
f2xm1
ret
and
dec
xor
in
pop
data16
mov
clc
fwait
push
adc
xchg
add
jg,pn
loop
xchg
gs
sbb
bound
aam
pop
sub
roll
lahf
and
sbb
dec
cmp
int
iret
outsl
lods
jle
lret
and
sbb
ret
inc
sahf
xchg
arpl
cmp
xchg
rcll
mov
dec
mov
leave
aad
rorb
mov
mov
and
sub
mov
pushf
sbb
mov
test
fs
inc
jp
test
ret
and
fsubrl
scas
jae
jae
movsb
icebp
dec
lods
push
cmp
cmp
out
jbe
std
js
inc
push
mov
xlat
sub
outsb
popl
dec
cmp
inc
mov
dec
dec
stos
sub
mov
inc
test
addr16
out
mov
add
pop
int
scas
iret
call
or
and
or
gs
pushf
mov
cmc
mull
mov
mov
push
cmp
roll
out
ljmp
jo
fsubl
das
sbb
xor
rcr
xor
inc
in
cmp
seto
movl
add
mov
ficoms
enter
ret
jbe
sub
out
push
mov
movsb
mov
push
scas
jno
xchg
sbb
pop
lret
sahf
bnd
dec
cmpsl
jecxz
js
adc
popa
jo
imul
fsubp
pop
mov
push
ljmp
fsubrs
leave
adc
fadd
sub
imul
and
mov
insb
fdivl
mov
sub
push
mov
push
xor
repnz
sub
lods
dec
addr16
loopne
shrl
sbb
fstps
insl
call
dec
or
addr16
mov
loopne
or
push
decl
dec
loopne
xor
out
jno
and
mov
cmpsb
repnz
sub
fst
adc
xor
mov
fdivl
fsub
push
repnz
sub
test
xor
iret
lahf
dec
jbe
es
adc
add
cmp
xchg
pop
xchg
in
pop
mov
push
int3
cmp
lds
cmp
and
mov
inc
arpl
inc
cmpb
dec
in
jmp
sub
lea
and
inc
lahf
pavgb
inc
jbe
add
data16
mov
cmpsb
popa
or
jecxz
das
push
jnp
sbb
jb
dec
mov
adc
cmp
add
jne
or
or
sbb
inc
cmpsb
ror
mov
bswap
push
xchg
mov
mov
cwtl
ret
dec
or
and
dec
or
addr16
adc
xchg
andb
jg
cli
into
sarb
and
jo,pt
stc
pop
repnz
addr16
and
mov
mov
jnp
cmp
loope
out
sar
repnz
inc
je
ret
in
cltd
cmc
outsb
inc
push
sbb
leave
sbb
push
mov
rcl
and
jne
xchg
pop
sti
fimull
and
xchg
add
cmp
stos
repnz
sub
add
cltd
sbb
or
jbe
xlat
xor
inc
jl
pushl
ja
popf
fistl
cli
icebp
mov
rorb
xchg
arpl
lcall
dec
mov
push
and
jecxz
mov
or
push
mov
shlb
icebp
sub
ja
lea
shrl
fs
jbe
or
imul
jb
int
inc
movsb
or
pop
inc
pop
inc
cmp
push
jmp
jnp
dec
out
cmp
sti
sbbl
pusha
out
ss
ret
push
add
jb
push
cs
jmp
lds
incl
push
xchg
or
imul
dec
push
push
mov
pop
mov
dec
push
ret
add
sub
shl
push
inc
add
call
std
mov
dec
xorb
xorb
dec
cli
sub
sbb
stos
je
pop
push
iret
adc
cmp
pop
push
popf
je
insb
mov
or
pop
mov
mov
push
and
lret
lcall
mov
push
and
sbb
push
adc
push
es
loop
push
adc
dec
inc
xlat
ret
insl
aas
std
mov
daa
pushf
dec
mov
or
ret
sbb
inc
jge
mov
out
cli
loop
fldenv
cmp
and
pop
imul
hlt
call
sbb
xor
stc
je
cld
cmp
xchg
fildl
stos
dec
int
loope
pop
pop
xor
bound
mov
outsb
in
insl
daa
ja
sub
mov
xchg
insl
sarb
arpl
cmpb
cmp
inc
arpl
mov
adc
sahf
pop
xor
loopne
inc
pop
push
movsl
out
or
rolb
in
pop
mov
ljmp
pop
andb
jmp
mov
mov
xor
sub
sub
add
insb
test
or
mov
sub
shlb
insl
xor
in
xlat
imul
and
and
mov
faddl
sub
xchg
mov
mov
push
xchg
or
shll
movsb
xchg
jne
push
sti
adc
mov
push
lret
or
xchg
shrb
add
lcall
dec
cmp
dec
sbb
sahf
les
mov
jl
mov
xor
mov
inc
mov
push
sub
and
js
lds
test
int3
pop
mov
enter
scas
push
lcall
jnp
mov
fisubl
and
loop
mov
xor
adc
xor
data16
jmp
cltd
xlat
shll
ret
test
mov
movsl
push
xor
mov
push
in
xlat
pop
push
and
mov
inc
sub
or
inc
addr16
cld
pop
mov
loope
addr16
jne
and
shlb
cmpsb
aad
dec
call
cltd
in
shll
add
adc
andl
lea
mov
mov
pop
jns
inc
dec
popf
sbb
test
dec
jnp
test
mov
mov
mov
cli
xor
lods
es
jns
std
dec
insl
mov
das
test
push
mov
insb
cmp
pop
das
bound
test
and
outsl
jge
and
and
or
push
mov
add
lcall
fs
fucomp
sbb
fwait
mov
inc
add
shr
gs
inc
mov
sub
les
fstps
mov
call
cmpsb
mov
ds
rcl
in
in
xchg
scas
mov
jle
gs
adc
adc
fisttps
dec
jle,pt
xchg
loopne
xlat
mov
lods
dec
cmc
or
xchg
loop
sbb
hlt
cmp
adc
sbb
out
pop
push
jb
push
pop
push
sub
push
inc
pop
out
stc
push
ficompl
pop
inc
mov
jb
out
daa
mov
sbb
xchg
aas
sub
std
push
xor
cli
pop
and
cmpsb
jo
cmp
imul
les
lea
mov
adcb
xchg
and
hlt
in
xrelease
imul
insb
sub
es
mov
and
xchg
adcl
decb
jle
dec
jns
push
lock
mov
enter
mov
adc
add
xchg
dec
jnp
push
push
popa
gs
ret
inc
les
and
test
mov
xchg
aam
fcomps
adc
sbb
sub
cmp
xchg
adc
mov
mov
aas
into
sbb
fildl
ljmp
ret
dec
add
dec
std
jns
mov
stc
js
mov
aaa
xor
jne
inc
jle
outsl
xchg
cmp
cmp
mov
loopne
adc
push
daa
lahf
negb
iret
mov
mov
jb
adc
cmpsl
pop
adc
xchg
inc
rorl
out
fs
je
fsubrs
fwait
push
aam
inc
andl
pop
mov
stos
aas
cmp
aam
cmp
push
jbe
sti
sub
cmpsb
jge
or
or
lcall
pop
or
mov
mov
into
or
movl
lock
clc
shlb
cmc
int3
loopne
mov
mov
jae
add
push
sbb
lods
cmpsl
das
lds
jg
jae
js
faddl
pop
cld
xor
cmpsb
mov
test
sub
or
sbb
nop
aaa
cmpsl
in
mov
sbb
clc
in
test
dec
pop
jecxz
cmp
fnstcw
xchg
xchg
test
xchg
cs
pusha
arpl
and
and
mov
mov
adc
ds
idivl
inc
dec
je
or
test
xchg
sbb
loopne
lods
jle
cmp
mov
in
rolb
or
test
pop
jmp
dec
popa
or
mov
pop
in
inc
push
lcall
add
mov
outsl
ds
and
mov
pop
ds
fwait
addr16
sub
mov
imul
arpl
lea
add
lds
pop
insl
mov
ret
adc
mov
iret
sub
mov
mov
xor
inc
in
outsb
enter
xor
mov
aam
mov
inc
cmp
jb
bound
out
or
xor
dec
mov
add
popf
and
jnp
imul
sbb
lcall
push
or
fstl
dec
mov
or
addr16
jns
and
adc
jg
lods
xor
jns
and
sub
sbb
emms
pop
cmpsb
cmp
jno
mov
nop
xor
mov
idivl
cmpsl
stc
and
dec
xchg
add
jno
pop
call
and
or
mov
push
ret
inc
push
divl
sbb
or
cmp
push
or
or
cmpsb
insb
imul
ljmp
int
or
cli
lods
fdivrs
push
add
shl
pusha
add
mov
adc
inc
out
movsl
rolb
clc
loope
cmp
dec
inc
jae
packsswb
push
icebp
push
xlat
push
nop
pop
mov
mov
movb
movb
cmpsl
lods
sbb
push
dec
push
and
jp
push
pop
or
push
mov
xchg
push
xor
inc
jb
dec
pop
jo
add
mov
jnp
or
jb
addl
out
jg
xor
aam
lods
lods
cmp
insl
loop
push
sub
or
pop
jecxz
jp
sbb
sbb
nop
xor
and
mov
mov
jl
xor
mov
mov
adc
out
outsl
cmp
leave
nop
outsb
mov
es
test
mov
dec
inc
mov
inc
iret
mov
aas
mov
dec
rcll
cmpsl
xorb
mov
jg
and
outsl
sbb
push
fistpl
scas
call
enter
pop
mov
dec
lahf
aaa
mov
daa
jne
adc
test
mov
cmp
cmpsb
mov
push
aad
pushf
mov
mov
xor
insl
sub
pop
aaa
mov
push
inc
push
mov
addr16
sub
cltd
pop
jnp
sbb
adc
mov
cmpsb
pop
js
notl
stos
inc
imul
fcompl
pushf
xchg
jle
dec
out
call
mov
out
bound
cmp
insb
and
imul
stos
add
jl
ss
add
lods
jne
dec
movsb
xchg
int
mov
stos
lret
inc
hlt
or
daa
pop
pop
movsl
mov
push
adc
das
jecxz
mov
adc
pusha
push
lea
stc
xchg
pop
inc
push
imul
aam
sti
fldcw
add
mov
add
cs
sbb
hlt
xchg
sti
pushf
test
sub
jnp
push
sahf
insb
mov
sbb
mov
sub
push
cmp
shrl
xchg
in
mul
add
loopne
int
movsb
popf
cmp
push
push
pop
cltd
adc
mov
and
xchg
in
push
mov
outsl
das
repz
out
inc
push
xchg
lods
xor
cltd
into
cmc
pop
cltd
xor
dec
cld
cmpsb
repz
lea
je
sbb
adc
repz
scas
sbb
divl
out
push
add
loop
in
jmp
jecxz
add
cmp
sbb
std
out
hlt
xor
cmp
fs
or
bound
sbb
mov
xchg
popa
jge
rcrb
jmp
test
test
jge
roll
popf
fcmovbe
sbb
sti
push
call
adcl
lcall
pop
rorl
mov
lret
dec
mov
outsb
jbe
cs
lcall
mov
dec
imul
push
pop
add
mov
in
add
fists
mov
xor
data16
adc
out
into
adc
in
cmp
fucomip
sbb
xchg
sbbl
pop
mov
shr
repz
mov
mov
and
pop
rorb
push
test
bound
push
insl
aaa
stos
pop
fsubrp
cmp
jmp
or
mov
pop
fcomps
pop
rol
notb
scas
sbb
ss
sub
repz
fmul
and
push
jnp
fs
leave
lods
mov
outsl
repz
insl
cmp
jne
push
sub
mov
imul
cmp
in
pop
xchg
adc
cwtl
pop
loopne
xchg
jge
out
push
int3
pop
pop
call
mov
sbb
cmp
mov
add
jmp
jne
mov
insb
mov
cmp
jbe
pop
dec
xchg
adc
mov
sbb
shll
loop
xor
cltd
sbb
cltd
sub
and
mov
mov
inc
arpl
aas
or
mov
ret
out
xchg
push
gs
xchg
mov
push
mov
pop
daa
jle
jo
push
xchg
xor
insb
mov
mov
pop
and
je
rep
push
daa
mov
pop
inc
jl
push
pop
mov
out
ret
out
jecxz
push
test
and
sti
ljmp
ds
sub
es
xor
rcrb
push
lds
mov
cwtl
mov
pop
outsb
mov
jl
push
loope
mov
mov
mov
push
les
xor
js
mov
jecxz
fstl
cmp
fildll
pop
or
inc
add
iret
js
mov
scas
rolb
ljmp
and
xor
test
subl
jg
xor
mov
js
sti
mov
aad
fsubrl
adc
cmp
xlat
pusha
aam
push
adc
es
shlb
xlat
mov
and
mov
xor
push
push
mov
orl
andl
out
dec
push
mov
push
jo
cs
sahf
std
ljmp
and
data16
jmp
mov
loop
jne
jns
inc
ljmp
or
mov
ja
arpl
mov
lahf
stos
sub
scas
int3
repz
jl
fs
stos
into
cld
lods
dec
test
lds
sbb
xchg
dec
push
push
jnp
lods
movb
es
add
pusha
cmpsl
sbbl
js
faddl
enter
push
and
add
mov
divb
bound
add
imul
push
dec
in
add
pause
xchg
pop
push
cmp
mov
mov
insb
lock
lods
adc
sub
xlat
ret
or
dec
inc
mov
lret
arpl
sbb
mov
push
or
or
fdivrp
movsb
lret
shlb
aad
adc
fs
pop
les
fbld
cmp
pop
pop
sub
std
sbb
les
adcb
and
mov
push
xchg
dec
or
inc
les
imul
outsb
hlt
loope
data16
std
adc
add
fmuls
cmp
sub
enter
pop
fistpl
das
push
pusha
push
mov
sbb
das
sbb
shrl
pop
test
enter
aad
sub
cmp
xor
dec
and
hlt
jl
or
sti
and
sbb
out
leave
sbb
inc
jmp
pop
push
rcll
mov
jnp
sbb
in
popf
popa
mov
add
push
dec
xlat
stos
ret
test
dec
cmp
out
loopne
adc
aaa
out
sbb
mov
inc
fnstsw
dec
std
rolb
mov
cmpsb
adc
test
cmpsb
mov
add
sbb
adc
push
cld
xlat
xlat
xor
xor
test
retw
push
testl
push
icebp
xchg
xor
push
and
clc
jp
cmpsl
xor
xchg
pusha
mov
jg
je
jge
mov
cmp
hlt
push
cmp
movsl
add
fisubrs
xchg
cmp
test
sbb
enter
mov
pop
sahf
adc
and
push
call
imul
les
mov
decb
jl
push
into
dec
pop
add
les
mov
popf
pop
adc
mov
mov
pop
jo
sbb
pop
rcrl
mov
imul
cwtl
lods
dec
cmp
pop
inc
mov
adc
out
adc
jle
outsb
xchg
ret
mov
std
repnz
fnstcw
jge
scas
xor
loope
push
xchg
jno
push
movsb
cli
cmp
mov
fsubrl
fisubrs
adc
xor
hlt
xor
imul
fs
xor
xor
sub
lret
subb
aam
mov
dec
iret
movsb
ret
ror
arpl
pop
ret
pop
leave
jne
mov
aad
loope
cmp
add
dec
mov
dec
test
es
pause
xlat
add
adc
sub
adc
mov
mov
inc
lods
into
je
jbe
add
mov
and
ljmp
ja
adc
jae
inc
push
jmp
outsb
xchg
add
and
push
sub
or
mov
stos
scas
stos
das
pop
loope
iret
jp
xchg
mov
and
test
inc
mov
lcall
sbb
out
ss
int3
push
js
or
and
or
jo
std
push
leave
xor
ljmp
xlat
aaa
fdivl
mov
xchg
lcall
cmp
jo
jl
xchg
jle
pop
xor
mov
les
xchg
push
sub
cltd
lret
icebp
xor
adc
fiaddl
sbb
push
sub
cmp
add
and
fildl
js
and
inc
push
lock
out
scas
push
push
pop
lock
in
mov
addb
arpl
repnz
and
cmp
xchg
push
pop
xor
mov
xor
lret
and
fiaddl
iret
cmp
flds
and
enter
lret
adc
shlb
movsb
in
dec
push
jno
adc
jmp
movsl
xor
inc
lcall
clc
outsb
xlat
mov
movsl
dec
mov
and
adc
ljmp
mov
xor
mov
sti
sarb
dec
dec
out
sbb
clc
imul
inc
jne
pop
lret
lds
imul
lret
int3
and
mov
jns
ljmp
pop
testb
pop
repnz
repz
add
lds
cmp
fisubrs
pop
sbb
fdivr
insb
lret
js
test
test
leave
and
dec
or
mov
mov
dec
sbb
movsb
and
jp
push
push
imul
pop
mov
pop
out
sbb
cmp
fidivl
jle
jo
mov
and
movsl
stos
push
xchg
sub
push
cmp
stos
lea
sbbb
pop
imul
fisubl
data16
fidivs
sub
in
sti
sub
sub
mov
sbb
roll
push
shrb
dec
into
dec
icebp
loopne
jl
mov
add
int
and
popa
adc
jge
shll
mov
and
lret
jnp
mov
jmp
push
and
jl
in
lds
int3
add
std
pop
xlat
fildl
inc
loopne
ss
pop
mov
push
movsl
mov
test
lea
pop
cmp
mov
jo
jle
sub
std
bound
and
cmp
sbb
hlt
in
orl
scas
data16
mov
pop
jo
dec
hlt
faddl
xchg
test
mov
cld
addr16
lcall
js
mov
jle
insb
leave
and
and
xor
ret
aaa
aaa
lcall
arpl
or
sbb
cltd
adcl
std
out
xchg
cli
or
adc
mov
shlb
fildll
mov
fdivs
lods
ljmp
das
jno
pop
out
and
lret
xchg
cmp
fildl
arpl
js
out
sbb
scas
xor
inc
sub
cmp
pop
push
int3
jg
cs
adc
lea
ret
xor
mov
inc
int3
jns
or
sbb
test
iret
xchg
pop
push
jae
xor
sarl
fmul
xchg
jg
lret
mov
in
xor
jg
addl
fldenv
ficoms
mov
sub
leave
ret
cltd
xor
push
xlat
fsubp
imul
pop
and
sbb
mov
sbb
popa
jnp
jl
mov
pcmpgtb
gs
lahf
ja
cmpsl
or
addr16
and
xor
push
jl
sub
sti
fcom
les
mov
sub
popa
call
outsb
sbb
pop
mov
jne
dec
adc
xor
add
mov
leave
and
push
jne
xchg
push
mov
push
test
add
mov
repz
mov
xchg
flds
inc
int3
pop
jmp
mov
shl
xor
mov
aad
dec
jno
dec
negb
cmp
stos
fdivrl
gs
xor
lods
in
inc
rolb
push
lahf
xor
jnp
stos
and
xchg
stc
mov
or
add
sarl
sub
imul
fimuls
sub
jns
insl
sbb
mov
cmpxchg
dec
outsb
lret
test
ss
push
data16
jne
js
inc
xchg
or
sbb
jle
xchg
add
fisubrl
shlb
fs
iret
sbb
xchg
mov
xchg
jnp
push
pop
jecxz
loope
mov
gs
sbb
mov
push
or
xor
lods
dec
mov
shl
fprem
mov
adc
scas
xchg
enter
sub
mov
out
cmp
in
sub
xorb
adc
pop
insl
jnp
bound
scas
push
arpl
jge
sub
mov
xlat
sbb
rcrb
out
lods
scas
outsb
aad
dec
mov
inc
jmp
sub
aas
and
out
xlat
cmp
int3
sbb
icebp
dec
arpl
scas
loop
and
repnz
fmuls
inc
pop
lods
xchg
sbb
and
dec
cmp
aas
add
ret
cwtl
iret
push
mov
mov
jbe
leave
out
bound
cmc
push
cmc
xchg
push
loopne
sub
mov
int3
sbb
adc
int3
sarb
push
filds
idiv
pop
xchg
ja
bound
dec
add
inc
dec
mov
ja
cmp
je
mov
test
rclb
sub
sti
dec
cmpsl
stos
les
fwait
mov
and
movsb
lret
lahf
call
lcall
stos
enter
lret
out
gs
pop
xor
fucom
adc
lods
in
jge
push
adc
outsl
clc
int3
inc
fdivl
insb
ds
mov
vshufps
xchg
sbb
in
cmp
popf
mov
xor
pop
insb
inc
std
pop
sbb
leave
mov
decb
test
test
cmp
mov
pusha
adc
pop
push
mov
icebp
pop
dec
add
pop
out
sarb
mov
cmpsb
jecxz
icebp
mov
cmc
push
xchg
stos
adc
sub
test
cmp
enter
sub
sbb
sti
dec
and
mov
les
pop
sub
addr16
pop
scas
test
and
dec
mov
jae,pn
rcrl
repnz
mov
xor
push
or
test
or
in
cltd
mov
xlat
sub
mov
jge
in
xor
push
dec
sub
inc
in
hlt
jns
pop
loope
call
or
push
pop
jecxz
jl
mov
jno
and
shrl
lahf
mov
into
xor
pushf
jo
sbb
xlat
cmpsb
xchg
xchg
mov
hlt
jb
sub
cmpsb
adcl
push
and
loope
add
xchg
xchg
sti
inc
aam
test
mov
or
inc
xor
dec
push
sub
das
or
and
rolb
aad
inc
sub
push
aas
jns
cmpsl
lods
fadd
xchg
stos
adc
cmpsb
gs
ja
cmp
lret
xchg
pop
popa
cmp
insl
pop
loop
sub
mov
inc
and
outsb
clc
sarb
lcall
cmpsb
movsb
and
adc
jnp
sahf
jb
aam
xchg
jae
jae
mov
bswap
and
xlat
fcoml
outsl
insl
jo
cwtl
test
arpl
mov
mov
sbb
sar
int
enter
push
popa
jo
hlt
inc
xor
loopne
mov
mov
out
shr
jp
arpl
das
and
ret
mov
repz
repz
ret
shlb
or
cwtl
xchg
into
push
ss
jns
xchg
and
adc
aad
ja
jg
dec
movsl
popa
add
mov
int3
mul
xchg
jecxz
leave
pop
lcall
mov
hlt
sbb
add
jle
vmread
and
mov
test
mov
xchg
in
or
les
aas
cmp
jne
sbb
insb
cmp
shl
and
pop
add
hlt
insb
mov
push
inc
and
lods
cmp
movsb
push
push
xor
sbb
push
xchg
bound
mov
inc
loopne
pop
push
stos
bound
sbb
cmpsl
push
loopne
xor
in
or
test
jae
jle
jmp
dec
fs
aad
call
pop
loope
lret
addb
adc
dec
shll
or
jecxz
in
sbb
cwtl
jl
mov
xor
fcomip
pop
inc
xor
xor
arpl
lods
mov
add
inc
fs
inc
adc
and
xchg
repnz
mov
iret
mov
jp
dec
repz
test
jbe
jbe
lcall
xor
ss
dec
xor
pop
imul
inc
xorl
out
mov
push
mov
dec
xor
or
jp
lret
cmp
shrb
cmp
sbb
cltd
subl
fldt
xchg
popa
pop
imul
xchg
mov
ficomps
xchg
pusha
jmp
sahf
inc
dec
fdivrs
xchg
mov
out
sbb
andl
inc
movsb
pop
inc
sahf
or
loop
sahf
in
rclb
fsubs
push
daa
pop
xchg
jns
mov
cs
scas
xor
movsl
lods
lret
add
repz
iret
mov
test
mov
popa
mov
std
inc
in
sbb
sbb
sbb
cwtl
adc
es
jns
dec
imul
pop
dec
mov
adc
psubd
aaa
scas
test
push
test
shl
jbe
clc
in
mov
and
dec
pop
and
jl
aaa
icebp
pop
maxps
and
cmp
std
sub
shrb
lret
mov
ficoms
xchg
lods
ss
inc
sbb
fisubl
cmp
mov
sbb
dec
movsb
cmpsl
and
fbld
shll
sub
shll
fs
out
or
in
loopne
out
es
xor
rclb
jg
push
mov
pushf
jno
pushf
dec
sarb
lret
int
xchg
push
leave
sub
leave
clc
insl
jbe
mov
cmpl
gs
stos
sub
push
outsl
sub
push
add
cmp
jg
mov
cmp
clc
sub
xchg
xchg
rcr
xchg
js
gs
movsl
pop
in
dec
lock
nop
sub
xchg
leave
lahf
in
cmp
xchg
sbb
test
pusha
movsb
mov
pop
repnz
mov
ficompl
xor
cmpsb
cld
mov
jmp
mov
out
aam
div
std
dec
stos
icebp
mov
mov
je
dec
aaa
mov
popf
mov
fnsave
ficomps
lcall
sarb
imul
push
outsl
in
js
rcrb
test
jecxz
mov
out
xsha256
cmpsb
adc
cld
lds
mov
sub
lods
xchg
lods
sub
int3
lods
adc
dec
dec
loop
mov
push
or
aam
sbb
sub
mov
mov
sbb
and
dec
push
jbe
cwtl
and
adc
fxam
movsl
xchg
xchg
and
or
repnz
push
iret
stc
dec
mov
xor
xor
pop
push
das
cmpsl
sub
aad
mov
sbb
insl
loop
and
movsb
aad
mov
adc
xchg
adc
cwtl
push
mov
sbb
fisubrs
fisttps
mov
rcl
mov
cwtl
mov
cwtl
pop
test
mov
loopne
out
pop
push
dec
ds
orb
sub
daa
xor
lcall
sbb
push
gs
push
mov
ds
dec
sub
adcb
outsb
mov
jle
xchg
xchg
shl
decb
cmp
out
outsl
push
arpl
and
or
inc
and
idivl
xchg
mov
sbb
and
out
pushf
add
cmp
dec
dec
push
mov
test
pusha
mov
jnp,pn
inc
sub
inc
push
mov
test
xchg
push
jge
je
je
inc
dec
call
aam
faddp
outsb
xor
sbb
or
fs
aaa
ficoml
loop
rorl
adc
lcall
test
pushf
sti
xchg
fs
out
mov
or
jmp
in
mov
push
stc
ljmp
jae,pt
out
dec
mov
daa
pop
movsb
sbb
iret
dec
stos
mov
mov
inc
in
or
inc
orl
test
add
aad
out
xor
dec
aaa
or
add
pop
pop
jmp
orb
xchg
sub
sti
fcomi
out
push
mov
sbb
jge
sbb
jg
insl
fists
jmp
cmp
jno
inc
jmp
mov
mov
or
xchg
mov
cltd
xchg
aas
lds
dec
fnstsw
adc
mov
adc
lret
add
jmp
out
popa
lock
mov
cli
or
test
sbb
adc
loope
data16
scas
fstpl
add
adc
ss
push
mov
jo
mov
js
jge
inc
mov
and
call
mov
pushf
movsb
in
fsubs
mov
xchg
sub
sub
sbb
sti
lock
bound
adcl
xchg
xchg
add
in
out
mov
ficoml
cmp
lods
addr16
pop
out
cmc
jne
xor
lods
rcll
push
lods
or
cld
lahf
int3
lret
stos
pushf
push
aad
mov
push
and
ljmp
xchg
cmp
lret
sub
inc
xor
repnz
fwait
test
aam
cmpsb
mov
lods
in
push
xor
pop
movsb
dec
pop
and
unpcklps
cmp
pop
mov
insb
xor
dec
shlb
push
lods
insb
dec
push
add
data16
jl
cwtl
and
xor
cmpl
fwait
jle
jg
out
mov
xchg
dec
subb
in
es
popf
cmpsl
aad
dec
lcall
clc
or
outsb
popa
xlat
pusha
cs
cmp
aaa
sub
dec
jb
out
ret
orb
fistps
ffree
inc
mov
mov
fisttpl
sbb
mov
mov
in
sbb
and
lods
mov
xchg
aad
xchg
cmp
movsb
stos
sub
adc
jge
dec
add
fldt
push
inc
push
push
jp
out
fcompl
into
aam
sub
arpl
imul
leave
cwtl
imul
xchg
fcos
dec
pop
cs
mov
in
or
cwtl
sbb
stc
lahf
shlb
push
nop
push
push
push
inc
fxch
and
inc
ret
repz
pop
pop
pop
jne
inc
adc
test
outsb
add
aam
addr16
or
into
arpl
or
ficoms
int3
dec
cmpsb
out
xor
movsl
pop
cmc
outsb
popa
sub
in
or
xchg
sub
insl
cmp
addr16
or
out
in
cmp
les
aas
or
sub
sub
nopl
sub
jmp
or
lcall
xor
imul
xor
cli
cmp
jne
insl
jbe
enter
aam
jb
jb
adc
into
push
jno
cwtl
ret
inc
sbb
and
addr16
int
and
dec
nop
test
stos
sbb
mov
loope
dec
or
popf
gs
inc
insb
adc
fisubs
sbb
ss
call
push
cs
xchg
xchg
mov
ss
sbb
adc
dec
cmp
jno
mov
jnp
mov
cwtl
sub
cmpsb
dec
scas
nop
lcall
out
mov
push
xor
pop
mov
pop
add
scas
aas
mov
xchg
jle
dec
push
mov
push
push
xor
or
test
adc
icebp
scas
rclb
sbb
xchg
mov
and
push
inc
and
pop
sbb
test
aad
and
ficoms
hlt
and
jno
mov
mov
fdiv
stc
pop
bound
xlat
stc
mov
stos
dec
cwtl
inc
add
jmp
xor
negb
dec
fsts
and
push
mov
inc
fsubs
shl
jmp
xor
and
pop
mov
mov
push
pop
outsb
pop
inc
mov
je
mov
dec
in
sub
and
jle
mov
inc
pop
js
imul
or
jnp
mov
push
rorb
add
movsb
out
jne
cld
js
mov
fidivrs
sub
iret
inc
pop
sub
daa
imul
inc
xor
nop
ds
pusha
dec
fwait
adc
mov
adc
push
shrl
rorb
sbb
cli
xchg
mov
movsb
mov
cmp
call
fwait
daa
clc
insl
insb
push
pop
push
lcall
jno
in
cmp
mov
data16
cmp
enter
shl
pop
repnz
ret
inc
xchg
ds
or
mov
daa
xor
dec
adc
insb
dec
jmp
push
jge
dec
pop
in
and
inc
or
aam
rcrb
imul
xchg
data16
xor
mov
mov
scas
rolb
cltd
es
stos
inc
mov
mov
mov
cld
insl
jp
mov
adc
dec
xchg
dec
add
inc
pop
out
push
ljmp
mov
jb
jb
dec
lret
imul
cmc
popa
sub
sbb
xchg
jno
cmp
shlb
cmpl
adc
dec
jle
cmp
xor
cmp
or
or
xchg
mov
mov
pop
test
sub
xchg
cmp
xchg
cmpsb
test
jecxz
push
stos
js
int3
add
sub
mov
cmp
out
fcmovnbe
lret
sbb
dec
pop
push
stc
xlat
hlt
outsb
gs
cmp
popa
icebp
dec
cmpb
dec
out
lahf
test
push
cmp
mov
sbb
push
lahf
sub
out
scas
sbb
ja
outsb
iret
mov
into
imul
or
std
xchg
mov
adc
inc
lahf
mov
mov
rol
mov
out
or
outsb
pop
daa
cltd
jno
mov
push
inc
imul
jbe
notb
xchg
andl
mov
test
mov
dec
xor
fwait
mov
aas
sti
push
syscall
push
jns
mov
jl
notb
mov
ja
rcrb
pop
dec
ret
setno
imul
lcall
mov
aam
mov
ss
loopne
add
jo
cmp
pushf
xlat
sub
cmp
out
test
sahf
jg
iret
fistl
jl
push
popf
mov
fwait
sbb
jnp
sub
jns
in
iret
pop
out
xchg
test
xchg
int3
int3
mov
shlb
push
push
xor
daa
push
jp
je
adc
adc
mov
cmp
sbb
ja
pop
cmp
cmpsl
inc
cmp
repz
mov
shl
inc
pushf
sub
adcl
pop
push
out
sarl
jae
push
push
pushf
push
push
popa
mov
adc
push
outsb
fmul
movsb
dec
and
dec
inc
sub
int
pop
or
mov
jp
mov
into
mov
fiadds
cmpsb
jge
stos
add
cmp
ss
inc
mov
imul
mov
jbe
and
fsubrs
les
lahf
sub
pop
and
je
je
test
sbb
cmp
mov
negb
scas
xchg
jne
dec
cwtl
fidivs
dec
fnstsw
aas
mov
aam
movsl
daa
jnp
lahf
ds
sub
rorb
arpl
jno
rcll
loopne
inc
imul
mov
sub
pushf
xor
pop
mov
jmp
xor
jmp
xchg
sub
xchg
icebp
dec
jno
insl
or
or
cmpsb
inc
push
test
sbb
push
add
push
jl
jbe
cmp
adc
loop
sti
jmp
mov
pop
aam
xor
xor
xchg
movb
in
dec
mov
jnp
pop
cli
testb
imul
jo
rorb
mov
add
jmp
pop
cmpsb
jge
lret
push
and
xlat
mov
rcrb
int3
jmp
cmp
mov
push
dec
cmpsl
mov
cli
xchg
jecxz
sbb
xchg
dec
movsb
imul
pop
jp
mov
fisubl
in
sub
pop
add
insl
push
ficompl
orps
add
dec
xor
push
xlat
add
cltd
cmp
jbe
dec
adc
fdiv
test
sarl
repz
cmc
mov
add
movsl
test
jne
fmuls
orb
mov
outsl
jge
mov
and
ret
push
push
movsb
mov
jmp
fwait
jns
test
loopne
jl,pt
pop
dec
xchg
push
pop
iret
insb
or
sbb
add
mov
in
cs
popf
dec
ret
rcrb
movb
cmpsb
movsl
mov
lahf
aad
cmc
and
sub
in
sbb
pop
fwait
push
or
or
xor
ds
or
or
dec
cmp
xchg
push
cltd
or
mov
push
stc
and
dec
pop
cmp
icebp
jnp
push
fadds
inc
xchg
lret
mov
and
filds
dec
faddl
xchg
stc
push
mov
popf
xchg
data16
int
aad
mov
out
or
or
xlat
mov
adc
push
roll
mov
mov
daa
pop
jle
inc
xchg
inc
inc
mov
sbb
xchg
push
dec
stos
jo
push
std
cmc
lock
push
out
jnp
push
xchg
xchg
and
cmp
add
dec
xchg
pushf
aad
add
lock
fdivrl
inc
xor
loop
gs
mov
add
pop
out
adc
sbb
add
sub
sub
ret
inc
gs
enter
lock
arpl
rorl
pop
insb
aam
add
xor
pop
adc
add
sub
ret
xchg
jmp
or
push
rcrl
pop
outsl
in
jo
shrl
xchg
stos
dec
int3
sahf
daa
fs
cltd
in
mov
pop
sub
lods
mov
pop
push
cmpsb
and
idivb
imul
xchg
ja
and
movsl
ljmp
mov
jns
dec
push
jns
inc
inc
nop
lock
div
sub
lret
imul
inc
test
out
into
jecxz
xchg
push
pop
add
and
dec
push
add
push
mov
imul
dec
testl
cld
dec
xchg
jecxz
mov
sbbl
mov
xchg
loopne
pop
mov
push
dec
out
inc
xchg
stos
xorl
and
sahf
cs
jl
xchg
adc
dec
test
mov
cmpsl
mov
mov
mov
je
cld
or
pusha
jb
sahf
popa
fimuls
inc
ss
lock
les
icebp
mov
mov
pop
repz
sub
add
sti
jbe
dec
fdivrs
test
enter
enter
push
jo
add
fsubrs
xor
negb
loop
cmp
xor
lods
cmpsl
mov
xor
sub
xchg
push
lcall
mov
xacquire
cbtw
fcomps
mov
je
sbbb
adcl
dec
ss
mov
fistpll
jo
push
outsb
adc
aaa
inc
js
push
add
es
aam
push
jb
mov
lret
mov
or
enter
aad
daa
or
inc
ljmp
cli
ret
dec
or
cmp
mov
call
pop
loope
fmull
adc
inc
inc
scas
xchg
inc
out
pop
repz
push
lods
aas
mov
ror
mov
lahf
je
pop
mov
std
ss
fldt
fsubrs
mov
out
adc
and
fld1
inc
leave
fnstcw
daa
mov
xchg
xorl
fiaddl
or
jbe
cmpsl
sahf
ret
repnz
adc
mov
repnz
cld
testb
cmpsb
mov
cmc
call
cmp
pop
xchg
sti
inc
jmp
cmp
out
xor
sahf
imul
jg
loop
popf
sub
or
out
mov
call
int3
mov
sbb
mov
movsb
mov
stc
cmpsl
rorl
xor
or
and
lock
out
inc
xchg
add
into
in
lret
fdiv
cld
enter
mulb
js
jmp
add
insb
fcmovnbe
sub
sti
fnstsw
push
sahf
or
sti
call
rcl
and
jg
outsl
or
fwait
jbe
in
sbb
das
and
ljmp
rorl
and
pop
fldl
pop
je
push
in
into
mov
xor
fmuls
add
mov
add
pushl
cmpb
and
icebp
shrb
mov
lds
mov
jle
mov
notb
fsubrl
xchg
js
xor
cmp
mov
shll
inc
add
adc
int3
div
out
cmp
cmpsb
scas
pop
or
or
mov
aam
cmp
sbb
insb
mov
cli
test
notl
fidivrs
shrb
loope
mov
mov
inc
insb
dec
pop
hlt
mull
jmp
xchg
mov
adc
into
stos
push
gs
test
cltd
sbb
idivb
jo
les
lods
pop
dec
cmp
pop
dec
cltd
dec
mov
push
dec
stos
inc
std
xchg
pop
jp
push
test
les
iret
xchg
cwtl
xchg
jl
jns
add
mov
movsb
popa
jno
xchg
sbb
stc
cmp
fcoml
pop
push
mov
mov
mov
inc
xchg
fimull
in
add
aam
sub
mov
mov
scas
pop
inc
mov
dec
sbb
fimull
enter
jnp
mov
test
jg
imul
add
add
jg
adc
stos
inc
adc
jle
in
sbb
cmp
push
xchg
mov
pop
mov
xchg
adc
mov
xchg
sub
fisubrl
ds
js
repnz
jecxz
xchg
jle
test
fcompl
gs
out
inc
adc
or
sub
inc
iret
test
mov
mov
xchg
cmpsl
lret
lcall
scas
jl
add
mov
inc
loope
in
fisttpll
out
mov
fcoms
repnz
xor
jg
dec
inc
pop
mov
call
loop
jl
jns
lea
add
push
scas
test
jl
xor
sti
add
mov
push
push
lea
cltd
aaa
in
sti
mov
push
push
push
inc
ds
lds
js
stos
mov
in
jno
lods
push
test
lods
push
leave
dec
jb
clc
and
mov
mov
shlb
stc
inc
xchg
push
pusha
in
aam
xchg
lods
mov
or
sub
das
xor
mov
mov
jl
jnp
mov
dec
dec
repz
pop
push
dec
sub
jg
in
push
push
inc
push
mov
inc
int
xchg
into
adcb
sbb
mov
or
add
push
orl
scas
aaa
js
test
cmpsl
xchg
jno
ret
loopne
or
pop
mov
iret
add
scas
xchg
pop
sarl
inc
cmp
mov
push
and
fsubs
movsb
stos
push
cld
loopne
sub
cmpsl
sahf
aaa
js
fstl
xchg
push
sahf
sbb
push
pushf
mov
repnz
imul
push
sub
sbb
ss
sbb
cmpl
movsl
in
push
hlt
mov
shr
lods
pop
xor
out
sahf
test
mov
or
inc
lods
scas
and
push
mov
xor
mov
ret
clc
inc
shr
push
addr16
mov
jae
push
jne
dec
inc
call
dec
adc
mov
cmp
cmp
in
xchg
mov
sub
in
jp
sub
and
cmc
mov
pop
bound
pop
xchg
shr
jp
shll
aam
dec
mov
hlt
test
repnz
push
jnp
lock
scas
mov
sarl
into
add
lods
sbb
jp
sbb
idivb
cmc
movsl
dec
outsb
mov
push
sub
testl
pushl
cmp
mov
jo
or
jmp
pusha
adc
and
jno
ljmp
fidivrs
pop
aas
sub
insl
stos
mov
out
mov
cmp
push
mov
fcmovnu
cmpsb
insb
enter
jecxz
lret
inc
fiadds
lret
xchg
cwtl
jno
pop
js
lock
cmpsl
lock
sahf
jecxz
pop
and
add
xor
cmp
pop
jp
or
int3
pop
ja
dec
sbb
jg
je
and
fcmovu
jp
mov
or
pop
jns
push
jbe
fnstcw
call
push
adc
inc
inc
cmp
lods
std
or
jg
or
pop
pushf
es
jns
pop
lea
sahf
push
dec
or
lock
fbstp
jge
mov
pop
sarb
xchg
lods
mov
xor
or
pop
test
arpl
daa
out
iret
outsl
je
popa
ds
or
push
movsb
pop
sbbb
addr16
jbe
loop
jmp
adc
add
jp
rcll
add
cli
and
push
mov
and
sbb
sub
orps
scas
push
inc
inc
negl
dec
add
push
lret
push
shrb
rolb
rorb
fdiv
fucomi
xchg
loopne
cmpl
test
push
pop
sbb
cmp
mov
cld
push
out
pop
aaa
call
aaa
cltd
xchg
popa
mov
popf
sub
aaa
cmpsb
aad
es
iret
pop
repz
sbb
xor
jecxz
pop
dec
dec
rclb
cmpsb
cmp
ss
cmpsb
ficomps
test
loope
mov
imul
pusha
dec
aaa
out
dec
mov
mov
jo
push
cmp
les
xchg
mov
mov
decb
aad
inc
stos
out
xchg
incb
int
pop
jae
pop
cmp
cmp
mov
test
enter
inc
jecxz
jns
and
test
jae
pop
scas
lds
stos
aas
out
and
mov
sbb
das
arpl
dec
pop
in
out
jns
dec
dec
sub
push
push
cmp
jg
lock
test
and
mov
imul
cmpsb
jb
dec
cmpl
adc
loope
int3
xchg
and
fidivs
cwtl
das
fimull
dec
cmp
dec
xor
push
dec
inc
data16
mov
and
push
out
mov
push
sub
mov
jmp
and
ja
lcall
mov
das
subb
fwait
adc
iret
mov
popf
or
inc
stos
mov
push
and
xchg
test
mov
jecxz
sarb
imulb
rorl
je
aaa
mov
into
push
mov
dec
int
movsb
addr16
mov
adc
loop
xor
push
push
mov
andb
cmp
insl
mov
sbb
roll
pop
jg
jg
cmpsl
xor
lcall
xor
xchg
clc
imul
ficoml
push
mov
ljmp
push
adc
push
cs
test
sbb
mov
sub
test
jno
xor
stos
or
add
hlt
loope
ljmp
ds
jg
int
adc
jbe
cmc
sub
mov
mov
push
stc
hlt
sub
push
arpl
jne
xlat
adc
js
in
mov
sub
adc
sub
jl
repnz
mov
jns
and
lcall
fdivl
dec
cld
or
mov
adc
sbb
loopne
jbe
jo
add
xchg
add
mov
outsb
push
add
or
out
gs
xor
fsubl
sub
fwait
mov
dec
cs
aad
mov
mov
data16
das
pop
out
jecxz
cwtl
xchg
inc
sub
sbb
pop
sarb
or
popa
ja
pop
dec
and
es
mov
outsb
lds
jge
push
jno
xchg
test
loop
dec
mov
mov
mov
inc
lret
pushf
mov
adc
mov
std
aaa
pop
inc
mov
mov
inc
js
adc
xlat
adc
mov
mov
push
imull
add
int
jmp
fsubrs
test
mov
int3
mov
ss
adc
xchg
jbe
jo
icebp
ret
mov
mov
aas
aas
inc
mov
test
and
pop
insl
roll
inc
pop
sub
or
mov
lea
add
cmp
xor
aad
das
rorb
lods
notb
sbbl
scas
sub
icebp
pop
movsl
xchg
fisubl
mov
rcrb
mov
fldt
incb
and
rcl
sbb
stos
cli
jbe
ret
xchg
sub
sub
push
mov
xchg
gs
pop
jl
jle
jge
xchg
dec
dec
cmp
ljmp
fnstenv
loopne
das
les
inc
ljmp
mov
mov
jno
cmpb
iret
loop
mov
nop
dec
cmp
mov
dec
adc
or
cmp
test
sub
fistl
cmpb
add
sub
xchg
pop
inc
sbb
push
fs
out
push
sub
sub
jnp
adc
mov
xchg
sti
cmp
and
cmp
into
les
fists
mov
lea
jne
adc
fadd
jne
mov
and
les
mov
lea
movsb
pop
adc
xor
and
jmp
cmp
xchg
stc
test
subb
pusha
push
sbb
xchg
adc
add
pop
push
std
ja
nop
std
movsl
int3
inc
sbb
mov
xlat
inc
sbb
in
mov
sbb
jle
bound
out
test
mov
stos
ffreep
jle
cmp
fstl
leave
dec
push
mov
pusha
push
mov
xchg
add
out
fimuls
push
out
mov
cld
mov
sbb
add
mov
mov
lcall
jl
insl
lea
sbb
fwait
push
push
out
aas
mov
push
pop
dec
adc
outsl
out
dec
in
subb
and
pop
pop
cld
addr16
xlat
push
out
sbb
loop
xor
push
imul
and
scas
icebp
inc
leave
fs
add
in
jnp
mov
and
dec
test
lock
loope
dec
cs
push
inc
jle
xchg
hlt
scas
pop
je
cltd
and
adc
lret
sbb
or
in
ds
jb
imul
lea
fidivrs
out
adc
dec
leave
loope
and
mov
jle
lods
lods
idivl
fwait
ds
cmp
scas
mov
jb
jecxz
pop
ret
dec
in
les
test
cmp
ljmp
mov
repnz
aam
orl
adc
shrb
data16
imulb
mov
fwait
rol
ja
push
mov
call
add
shl
sub
xor
iret
mov
xor
xor
lret
mov
xchg
pop
outsb
sub
dec
jg
ret
sub
jno
movsl
mov
lahf
mov
push
jmp
movsb
aad
sbb
dec
mov
in
sbb
jnp
cmpsl
addb
iret
sub
movsb
les
out
add
adcb
mov
pop
mov
sub
add
lret
add
cmp
sub
mov
idivl
xor
leave
out
fucomi
sub
orb
gs
cmp
lods
mov
add
shl
mov
mov
and
inc
sub
je
sbbb
outsb
pop
inc
subb
scas
les
popl
sbb
cld
enter
data16
add
outsl
leave
into
inc
call
mov
out
addl
aad
adcb
adc
sub
mov
cmc
std
sub
sbbl
jle
fstpl
lds
mov
inc
cltd
movsb
mov
cmp
sti
xchg
fbstp
sti
out
mov
xor
shr
jmp
mov
mov
mov
or
mov
inc
push
outsl
lock
mov
xor
mov
sub
jge
add
add
fwait
adc
sub
fwait
cmpsb
and
daa
dec
aam
cltd
sub
xchg
lret
mov
add
and
mov
sbb
mov
repz
jg
inc
fnop
into
mov
cmp
push
xor
sub
jl
jbe
add
jl
fs
testl
add
sbb
and
sub
mov
push
cmp
adc
or
in
leave
imul
mov
repz
pop
push
pusha
jb
call
ror
sahf
cld
jne
in
push
lods
mov
iret
popf
mov
mov
outsl
scas
pop
mov
outsb
dec
adc
inc
mov
add
iret
stos
add
leave
hlt
aaa
adc
cld
adc
push
int3
sbb
mov
pop
lock
loop
dec
es
mov
push
sbb
popa
adc
dec
sbb
cmp
imulb
cli
dec
cmp
cmp
jmp
add
clc
in
lods
inc
sub
out
mov
xchg
ja
inc
addr16
lcall
stos
pusha
cmpsb
clc
test
cmc
sti
test
fadds
mov
pop
mov
test
gs
or
insb
sub
add
outsl
movsb
sbb
or
loop
iret
mov
xchg
dec
adc
aas
push
cmp
cmp
out
push
mov
test
xchg
ljmp
dec
pushf
out
in
andl
add
subl
or
dec
lods
mov
imul
out
int3
xor
movsl
ret
mov
add
push
aaa
mov
xor
movsb
add
or
jp
mov
dec
or
flds
nop
inc
lahf
lock
sbb
pop
rdpmc
jp
push
je
into
in
mov
mov
sub
xor
add
lds
scas
jno
pushf
sbb
push
jg
aaa
inc
loop
lods
mov
in
push
mov
in
mov
cld
out
aad
int
je
cmc
mov
std
scas
pop
test
cmp
xchg
jmp
aaa
sahf
scas
out
sub
mov
fs
mov
scas
mov
cmp
and
push
mov
pop
mov
mov
xor
loop
jmp
shlb
push
or
xchg
xchg
adc
and
push
inc
pop
test
sbb
pop
add
xchg
arpl
push
enter
pop
leave
fcompl
negl
xlat
movb
sbb
mov
test
inc
bound
sbb
loope
loop
stmxcsr
scas
jns
enter
decl
sahf
roll
fwait
or
imul
rcrl
xchg
in
inc
jge
pop
fistl
mov
mov
gs
pop
shll
and
popa
mov
subl
das
mov
dec
popf
cmpsb
mov
sub
add
mov
fimull
mov
test
outsb
aam
mov
add
add
mov
pop
mov
mov
dec
cmpsl
xor
lcall
jb
add
mov
cmpsl
push
jle
lret
xor
mov
test
pop
loopne
ljmp
pop
sub
andl
xchg
sbb
mov
imul
xor
adc
jns
ja
pop
idivl
in
pop
orb
addr16
mov
jne
int
dec
icebp
pop
loop
movsl
xor
fwait
inc
jg
sub
scas
pop
xor
stc
sti
je
mov
xor
inc
insl
int3
pushf
dec
mov
xor
jg
rorb
mov
xchg
jp
data16
dec
xchg
xor
push
arpl
das
mov
rolb
mov
add
fisubl
cmp
jmp
ret
dec
inc
xor
mov
cmpsl
stos
test
and
cltd
sti
inc
sub
add
imul
jge
hlt
cmova
mov
dec
ds
test
imul
mov
pop
adc
adc
jne
jbe
mov
out
jo
testb
loopne
faddl
lcall
inc
mov
jle
mov
shrb
and
or
movsb
cs
inc
and
jo
aas
test
ljmp
lock
stos
sbb
les
dec
lcall
ficoml
pop
insb
push
xchg
lds
test
and
mov
inc
std
fsubp
mov
pop
rorb
test
aas
add
sbb
lods
and
mov
jne
sub
xor
iret
int3
in
cs
fsubrp
push
jns
insl
sbb
lahf
repnz
cmp
fnstcw
out
mov
fcoml
xchg
enter
int3
and
xor
xchg
les
jmp
fisubrl
lea
pop
cld
pusha
push
jo
rcrb
shrb
rcll
jo
pushf
jae
cmp
outsl
stc
inc
imul
push
mov
out
fimull
mov
adc
ret
outsl
lret
out
repz
loopne
movsb
jge
daa
xchg
and
or
imul
sub
adc
cmp
mov
andb
ljmp
popa
call
cmp
cmp
outsb
pop
sahf
mov
arpl
xchg
repz
or
loopne
mov
or
jnp
sbb
fwait
data16
popf
incb
out
cmc
loope
or
inc
sbb
aam
dec
push
adc
lods
jb
sub
mov
xor
int
fstps
jp
push
push
loop
outsb
data16
or
sbb
mov
jns
insl
pushl
mov
addl
sbb
fwait
cmp
xchg
idivl
sbb
lcall
cmp
pusha
cli
arpl
lea
in
push
loop
leave
jmp
push
push
xchg
cmpsb
lock
mov
xor
pop
cmp
pop
shrb
negb
sub
mov
ds
pushl
push
divb
mov
xchg
jns
movsb
xchg
xorl
aad
pop
out
insb
dec
leave
mov
enter
shll
sub
js
fldenv
inc
dec
and
cmp
xchg
lahf
ror
or
icebp
mov
and
std
dec
add
jmp
imul
fdivs
jmp
mov
cmp
arpl
mov
lret
ss
pusha
cli
pop
jae
test
cmp
mov
and
jns
adc
push
sbb
push
dec
or
and
test
xor
jno
testb
jne
rcll
std
ja
sbb
ja
shrb
aam
and
mov
shlb
pop
mov
pusha
leave
mov
jo
add
pop
int3
mov
inc
jl
jmp
inc
push
dec
push
adc
out
lcall
pop
sbb
loope
mov
push
sbb
roll
sbb
mov
lret
leave
adc
mov
out
xor
outsb
outsl
sub
sbb
lds
sti
mov
xchg
dec
pusha
pop
adc
popf
inc
aaa
into
lods
jo
pop
scas
das
rclb
sbb
cmpsl
mov
jb
and
and
divb
mov
and
jl
dec
fistpll
xchg
dec
mov
hlt
mov
pop
int
pop
mov
dec
xchg
pop
mov
cmp
jno
add
inc
mov
jecxz
sahf
sub
lock
test
adc
icebp
add
test
fnsave
ja
test
ja
ret
and
aam
push
dec
pop
lea
into
mov
les
out
mov
mov
fdivrs
xor
roll
mov
call
mov
pusha
push
jl
xchg
sub
popa
call
inc
or
lds
andb
imul
in
push
pop
jne
sbb
adc
adc
inc
sub
gs
jmp
cmc
leave
imul
outsb
insb
es
mov
aad
or
or
pop
xchg
flds
gs
sub
es
imul
push
sbb
gs
ret
jne
clc
or
xor
sub
shl
mov
pusha
int3
or
test
enter
shr
mov
out
xlat
cltd
sbb
mov
jl
loop
popa
pusha
pop
xlat
sbb
push
push
add
sarb
int
push
stos
js
push
divb
insb
dec
add
pusha
sti
lods
jge
push
int
jmp
popf
xchg
xchg
xlat
sbb
outsl
xchg
jns
push
push
cmpsl
sbb
mov
cmpsb
add
jl
xlat
aaa
test
fisubrl
cmc
popw
pinsrw
adc
push
xchg
pop
fistl
aam
lods
jne
mov
stos
jns
sub
ljmp
loopne
pushf
push
pusha
hlt
jle
sbb
inc
or
inc
push
daa
hlt
or
and
cmp
js
outsb
dec
push
outsb
mov
gs
dec
mov
out
and
ret
sbb
dec
push
pop
ret
jmp
inc
jns
adc
xchg
test
jle
sarb
stc
in
stc
dec
movl
nop
js
cmpsl
pop
into
arpl
jl
mov
push
jge
stos
gs
adc
fldt
into
xchg
les
cmp
jl
lock
xor
jl
pop
xadd
std
push
jmp
mov
sarb
lock
ret
and
mov
call
adc
clc
and
out
shll
inc
fs
rol
test
mov
dec
sbb
dec
into
add
cmp
ret
push
daa
scas
nop
cmc
push
push
push
test
push
adc
xor
outsl
mov
inc
jp
sahf
dec
cmpsb
mov
aad
xor
dec
dec
pop
flds
sbb
cltd
sub
bnd
int
test
and
aad
cmpsb
mov
cmp
mov
inc
push
sbb
pop
mov
lret
test
outsl
sub
loopne
pop
in
mov
sub
mov
outsl
cmp
outsb
scas
sub
pop
sub
push
test
fstps
xchg
mov
iret
sub
xlat
mov
scas
and
in
and
out
scas
arpl
out
mov
dec
fistpll
cmp
fucomip
ljmp
fmull
cmp
mov
imul
push
xor
enter
jecxz
and
int3
mov
test
add
dec
int3
jmp
jl
cmp
jg
mov
jns
test
cmpsb
mov
popa
add
movsb
xchg
bound
and
pop
lcall
scas
bound
mov
sub
ljmp
iret
jle
daa
push
push
pop
cwtl
and
fmull
add
daa
or
adc
sahf
data16
push
test
pop
stos
and
call
push
xchg
lock
loop
push
rcl
out
mov
rorl
mov
push
inc
xor
ret
fstl
in
cmp
sti
nop
cli
jmp
xor
cli
sahf
mov
push
or
mov
push
inc
addb
in
int
add
insb
sahf
pop
or
pop
insb
jp
sub
lods
mov
fmull
movsl
loope
pop
jg
imul
sbbb
cld
adcl
mov
cmp
cmp
aam
and
push
xorl
mov
mov
mov
adc
xchg
mov
xchg
lret
cli
jl
lahf
push
rcr
sbb
push
pop
mov
sahf
or
je
mov
fcoms
xor
repnz
sbb
xor
push
in
dec
add
mov
sarl
adc
add
mov
outsb
lock
and
popl
pop
sbb
jg
pop
out
xchg
jno
pop
and
mov
xlat
and
cmc
and
rol
movb
push
jle
and
mov
aaa
repnz
adc
jb
mov
cmc
fisttpl
pop
adc
or
fldl
aad
mov
int
inc
out
mov
push
int
cmpl
jnp
mov
rclb
jne
pop
mov
cmp
sub
xlat
movsl
bound
iret
in
xor
adc
addr16
rcrb
mov
dec
push
mov
mov
repz
inc
ficompl
xchg
call
adcl
mov
jno
out
bound
jb
mov
ss
cmp
mov
test
cmc
lret
jp
jns
in
in
repnz
dec
xchg
xor
and
je
push
idiv
xchg
or
jbe
xchg
das
mov
pop
pop
inc
mov
sahf
aad
and
mov
jecxz
addb
daa
cli
adc
sub
mov
mov
or
dec
ds
sbb
es
pop
inc
cmpl
or
sub
cmp
scas
dec
cmc
outsl
add
iret
adc
xchg
cmp
add
stos
xchg
outsl
rcl
mov
rcrl
shl
stos
add
sub
fstpt
into
cmp
rcr
jne
jge
push
jne
add
fwait
js
out
inc
or
jg
fldenv
jnp
lock
popa
xor
popf
sub
pop
int3
stc
std
aas
fcoml
fmull
nop
sbb
sub
in
lret
mov
pusha
jae
fadds
push
fwait
jle
adc
mull
shll
fcmovbe
pop
pushf
sub
and
pop
daa
icebp
mov
xchg
fs
movsl
mov
rcrl
fldcw
cld
add
enter
out
roll
andl
fidivl
xchg
aad
lret
inc
jp
xor
mov
daa
pop
out
jnp
jo
insl
cmp
pop
imul
sub
adc
pushf
outsl
pop
sarl
shrl
push
or
ret
xchg
ja
xchg
shll
sbb
fisttpl
push
cmc
lods
pop
fisubl
add
adc
repz
fdivp
fwait
out
jae
ss
sbb
lret
sbb
aas
std
and
inc
xchg
dec
mov
cs
jne
jnp
inc
dec
and
popa
cmp
pop
repz
loop
test
lret
mov
aam
sbb
lea
pop
fisubrl
xor
aas
mov
lret
fstp
insl
mov
inc
or
adc
mov
cmp
scas
cwtl
loope
les
xor
push
ret
add
mov
cmpl
xchg
mov
nop
daa
ljmp
movsl
into
imul
xchg
push
fstps
cmp
adc
sahf
test
jmp
pop
mov
mov
repnz
add
cs
sub
jg
imul
aaa
adc
das
jnp
and
outsl
inc
push
xchg
jnp
lahf
decl
fisttpll
loope
sub
testb
insl
popf
scas
pop
cmpb
fstl
fstps
pop
mov
mov
stc
xchg
mov
cwtl
or
imul
adc
mov
xchg
ljmp
shll
dec
jno
test
inc
fnstcw
popf
cwtl
das
and
enter
jne
push
cmp
cmp
xchg
out
rorl
cltd
inc
dec
test
pop
fidivrs
sti
sub
lods
mov
scas
mov
pop
stos
test
xchg
add
hlt
push
jns
sbb
push
inc
loopne
nop
test
sbb
call
std
inc
das
test
xchg
inc
or
push
mov
xchg
inc
outsl
stos
scas
jbe
inc
mov
mov
inc
inc
sti
xchg
lret
pop
pop
or
and
test
jle
jnp
dec
jp
ja
test
mov
xor
dec
sbb
sub
cmp
cmpsb
jno
sbb
fwait
mov
push
xchg
xchg
fnsave
loop
imulb
inc
rorl
int
mov
dec
jg
stc
or
cld
ror
sub
int
ljmp
push
fwait
or
xchg
sbb
pop
clc
mov
cmp
push
imul
imul
mov
pop
and
cs
lret
sub
dec
decl
insb
adc
setns
test
mov
sub
mov
sub
jge
pop
ds
mov
add
ja
arpl
dec
mov
mov
test
jge
pop
in
mov
add
xor
fistps
mov
cmp
mov
outsl
fs
aaa
imul
lods
in
sbb
int3
aas
mov
in
test
cltd
pop
lea
jae
fildll
ds
testb
add
cwtl
je
add
ret
int
pusha
filds
hlt
mov
loop
repz
rcl
fdivl
pushl
in
rcl
pop
loop
mov
push
push
xchg
mov
aam
ficoml
pop
loope
je
arpl
push
lret
popf
cmp
mov
sti
inc
aaa
das
xchg
fisubrl
jmp
imul
pop
jmp
ficomps
daa
lcall
pop
nop
fcompl
xor
in
dec
dec
cld
cmp
pop
subl
cmpsl
xor
hlt
jnp
mov
test
pop
add
rorb
mov
jae
mov
sbb
push
call
sbb
jecxz
retw
sub
imul
xor
dec
mov
pushf
cmpsl
mov
int
and
insb
sbb
mov
movsb
cmpl
fcmovne
test
mov
ds
sbb
call
xchg
push
cmc
dec
xor
adc
jns
inc
push
icebp
add
inc
dec
jle
add
add
push
cmp
push
push
enter
jle
cmp
pop
jo
jbe
mov
test
and
mov
jbe
jge
cld
pop
std
jg
inc
adc
adc
cmpl
jecxz
cmc
mov
sub
sbb
xchg
mov
es
mov
lock
push
add
mov
add
mov
cwtl
cmp
xchg
jne
out
aam
adc
add
and
dec
imul
or
cmpsl
pop
stos
mov
mov
lahf
push
sbb
leave
mov
push
or
fildll
xor
test
fsubs
and
sbb
movsl
cld
sahf
lock
xchg
rcr
outsb
das
rcrl
sbb
nopl
sub
stos
idivl
es
imul
mov
or
jp
add
rcll
je
pop
sub
daa
pop
and
aaa
iret
outsb
sti
mov
aas
fsubs
pushf
ficompl
int
loop
mov
divl
xor
iret
xor
out
out
psubsw
or
ret
mov
inc
mov
sub
xchg
testl
xchg
pop
pop
adc
sub
lret
inc
mov
clc
addr16
imul
adc
fld
and
repz
lret
fildll
leave
aaa
rorb
movsl
test
lret
pop
nop
mov
add
lock
out
ds
popa
jecxz
ljmp
into
mov
ja
mov
ljmp
outsb
repz
push
or
pop
pop
adc
jo
test
push
sahf
icebp
mov
mov
mov
dec
enter
push
push
bnd
lock
or
loopne
inc
popf
out
iret
icebp
std
daa
loop
arpl
pusha
repz
popa
inc
lods
outsl
add
xlat
mov
gs
cmpsl
lcall
das
jecxz
mov
popf
sti
pop
inc
movsl
loop
cld
cmp
mov
push
bound
nop
leave
inc
sub
mov
mov
add
lret
mov
daa
sbb
push
xor
outsl
dec
pop
aas
or
pop
xchg
fisttpll
sub
cltd
out
sbb
pop
sub
xchg
orb
mov
std
pop
dec
in
ss
ss
ja
dec
push
push
inc
aas
xchg
cmp
pop
lods
xor
shrl
int
test
jmp
dec
repnz
lcall
inc
or
or
add
jnp
cmpsl
sti
insl
fisubrl
mov
pop
incl
js
es
xor
aas
scas
xor
pop
jge
imul
sahf
add
je
mov
imul
aas
fbld
and
sarl
xchg
inc
push
push
jbe
lea
leave
popa
addr16
xor
fdivrl
loop
or
out
mov
push
xlat
ja
mov
subl
dec
push
mov
pop
xchg
sub
fwait
scas
mov
data16
out
std
call
xor
leave
jmp
add
cld
icebp
pushf
push
mov
cmp
push
aam
mov
sbb
adc
cmp
mov
pop
lcall
cmp
mov
xchg
in
dec
loop
xlat
idivb
ret
xor
push
mov
jns
push
aas
push
mov
inc
or
dec
xchg
pop
push
lret
xor
push
inc
mov
or
and
sub
int3
jne
xor
jmp
idivb
icebp
div
jecxz
inc
js
inc
cltd
mov
daa
stos
cmp
orb
sahf
les
stc
push
shrl
das
dec
mov
loopne
push
jae
xchg
or
xchg
testl
or
and
int
fmul
jne
or
jnp
push
bound
loope
pop
test
outsl
ja
jns
add
scas
out
jae
inc
lds
sbb
ljmp
dec
hlt
aam
arpl
mov
mov
adc
clc
pop
or
sar
mov
scas
and
cmpsl
inc
fs
out
cs
scas
adc
xor
jle
xchg
or
aad
xchg
in
jecxz
test
mov
push
mov
movsb
mov
mov
xchg
xlat
addb
loopne
cmp
outsl
mov
out
mov
scas
xchg
xor
dec
and
add
mov
xchg
add
sbb
jle
sbb
in
lods
loopne
dec
testl
cmp
rcrl
lea
clc
aas
mov
leave
sub
inc
in
jo
scas
data16
ja
inc
mov
add
add
jns
rorl
lea
cmpsl
pop
pop
bound
pop
jg
mov
fstps
movsb
mov
mov
mov
aas
add
pushl
sbb
popa
adcb
mov
call
xchg
repz
je
dec
jmp
arpl
int
and
mov
insb
inc
es
lds
push
mov
mov
sub
hlt
jae
xchg
loop
lret
sbb
es
stos
dec
mov
leave
icebp
xchg
cmp
ficoml
xor
ljmp
add
test
add
jp
pop
lahf
pop
sahf
adc
out
int
or
mov
ljmp
jge
push
dec
bound
hlt
or
adcb
cmp
sub
xor
stc
cwtl
inc
sbb
movsl
notl
add
push
jl
lahf
fsubrs
popf
fimull
dec
cmp
push
cmc
and
inc
or
testl
fmull
add
popf
jge
sbb
dec
nop
sub
nop
dec
test
scas
add
jae
loop
cmc
or
add
lea
kxorb
out
es
adc
adc
orl
adc
jo
mov
dec
ljmp
mov
out
in
das
push
leave
cwtl
cmp
insl
jo
mov
xor
add
and
mov
sarl
xlat
hlt
popa
movsl
xchg
arpl
mov
jo
icebp
add
mov
pop
inc
test
push
sti
lods
and
and
nop
xchg
ret
mov
mov
ds
mov
lret
mov
adc
add
or
leave
adc
jmp
mov
cmp
jmp
sbb
movsl
stc
dec
lret
out
lods
lock
sbb
loop
push
in
call
pop
leave
adc
sbb
jl
mov
adc
repnz
lock
push
push
notl
push
adc
xor
loope
xor
decl
push
jle
movsb
rorl
xor
pop
inc
and
or
fimull
ret
push
push
sbb
std
out
cmp
dec
scas
pop
nop
cmp
mov
add
xchg
sbb
push
in
xor
push
popa
or
and
sti
ds
sub
push
xor
and
in
mov
pushf
cmp
std
adc
insb
jb
test
les
and
stos
xchg
fs
lods
cwtl
lods
popa
repnz
loopne
dec
inc
idivb
mov
or
mov
test
and
and
sub
cmp
sbb
mov
psubsw
lods
outsl
add
cmp
adcb
movsl
cmp
mov
insb
jl
pop
xor
push
push
mov
ljmp
pop
pop
in
push
add
inc
dec
jns
aaa
xor
in
in
mov
sahf
out
movsl
push
cmp
cmp
sbb
mov
sbb
cmpsb
out
mov
mov
cmp
fsubl
out
scas
mov
or
jle
sub
das
cmp
test
push
pop
sti
mov
mov
insb
push
xchg
or
aad
icebp
pop
mov
push
dec
iret
jns
cmp
movsb
test
jo
mov
in
mov
test
sarl
jne
mov
xchg
popf
dec
js
xchg
jl
imul
jmp
jbe
mov
adc
mov
in
cmp
mov
dec
or
fstpl
mov
mov
gs
mov
adc
xchg
insl
sahf
mul
push
or
inc
mov
and
int
or
and
xorl
push
jns
cmp
lock
push
bound
mov
aaa
sahf
push
test
add
mov
jo
std
out
and
mov
xlat
pop
fstl
cld
hlt
sub
nop
sub
pop
push
or
sbb
rcrb
dec
cmp
mov
adc
mov
test
jmp
mov
push
fmul
leave
jl
and
std
cmpsb
fs
scas
data16
in
je
dec
jnp
cmpsl
aad
xchg
lds
out
add
pop
and
mov
es
js
sub
adc
mov
popa
fbld
add
loop
sbb
imul
in
pushf
je
popf
aas
mov
pop
push
clc
inc
mov
dec
mul
xor
pop
cli
xchg
data16
mov
push
enter
cmp
or
add
scas
sub
push
push
shl
and
out
mov
into
call
lock
adc
mov
mov
mov
jg
ja
sub
or
nop
lea
movsb
mov
mov
cmp
and
je
mov
test
jno
mov
pop
adc
insb
mov
lret
dec
rorb
mov
repnz
inc
std
sarl
repnz
call
cmp
cmp
xchg
pop
bound
add
incb
dec
mull
xchg
jp
aas
hlt
pop
cmp
pop
cmp
adc
and
xor
mov
sub
lods
aam
out
xlat
arpl
sub
es
pop
xor
sub
pushf
fadds
test
xchg
inc
test
loop
lods
xor
xor
pop
imul
push
ljmp
je
mov
shl
mov
leave
out
lahf
shlb
dec
das
sub
icebp
or
loope
push
cmp
sub
cmp
nop
add
jne
xchg
stc
std
mov
in
notb
hlt
push
repz
inc
addr16
aas
push
lret
mov
add
mov
jne
push
cmpsl
popf
adc
lret
xor
adc
mov
ficomps
scas
mov
dec
lcall
or
and
inc
or
xchg
mov
fs
sbb
cs
mov
xor
aaa
or
lret
and
push
cmp
int3
popl
lods
xchg
xor
stc
pop
add
inc
mov
dec
or
jmp
imul
mov
fidivs
sti
lock
divb
in
mov
xchg
xchg
dec
push
and
mov
addr16
call
add
inc
add
jmp
js
adc
fldt
push
jecxz
xchg
pop
xor
cmp
inc
adc
mov
mov
movsb
ljmp
nop
xchg
adc
in
xchg
ds
xor
movsb
shrb
repnz
jp
outsb
loopne
mov
pop
and
dec
push
mov
cmc
in
outsl
aaa
jns
ss
jp
sub
jge
aas
mov
inc
xor
loope
aam
and
data16
dec
out
and
mov
das
jno,pn
das
orl
push
cmpsb
inc
fidivrl
popf
mov
outsb
nop
int
sbb
add
cwtl
dec
push
or
dec
lcall
pop
mov
lcall
fildl
int
ja
test
push
sbb
mov
push
lds
and
sti
cltd
mov
xchg
rclb
outsl
lret
call
negb
mov
xchg
mov
inc
xor
cmc
adc
xor
push
dec
leave
fisubl
adc
lock
repnz
dec
push
push
inc
adc
popa
fwait
bound
mov
popa
adc
xor
sub
jge
push
pop
ljmp
or
dec
adc
dec
adc
xchg
mov
xchg
or
dec
jge
push
inc
push
in
jecxz
push
lahf
push
cli
stos
aam
push
sahf
mov
add
ret
add
sbbl
xchg
push
cmp
inc
or
cmpl
out
jmp
mov
mov
jo
imul
aam
in
sbb
clc
jbe
ret
add
xchg
lods
mulb
loope
jb
push
rcll
ret
mov
adc
sbb
mov
add
sub
insl
aam
add
add
sub
mov
adc
dec
stos
push
add
shll
out
mov
lcall
xchg
jl
or
bnd
iret
dec
pop
stc
jo
bnd
bound
fstpt
mov
inc
or
jecxz
in
and
negl
dec
jnp
or
pop
je
push
xor
push
int3
xlat
sahf
inc
xchg
lret
in
lahf
std
jae
into
push
mov
sub
jns
push
cmp
xchg
arpl
jge
shrl
out
repnz
jae
pop
mov
mov
lods
outsl
and
test
cmp
ds
std
in
repz
shll
mov
jl
imul
repz
and
ljmp
out
xchg
cltd
or
movsl
pushf
imul
jg
les
jl
movsl
fidivrs
adc
cmp
mov
movsb
testb
mov
and
ud1
les
cmp
aaa
sbb
push
ljmp
mov
inc
outsb
cli
xchg
gs
adc
in
test
mov
hlt
cmp
lock
mov
lea
ja
stos
mov
test
mov
adc
insb
ss
or
jmp
pop
xchg
xchg
shr
sub
adc
outsl
fcomip
mov
int3
hlt
lds
jle
pusha
jo
scas
xor
stos
push
and
xchg
mov
loop
pushf
insl
xchg
popa
fwait
mov
push
xchg
ret
movsb
mov
dec
push
sbbl
loope
xchg
fldl
xor
sub
fisubs
sar
sbb
clc
pusha
mov
lcall
or
sti
cmpsl
lock
cmc
push
cltd
xor
outsb
arpl
movsl
xorl
sub
push
stos
inc
ss
xor
in
push
push
aaa
dec
ret
xchg
insl
push
aas
cli
dec
xor
fcom
movsb
filds
insb
xchg
jne
sbb
add
std
mov
lock
fsubs
data16
daa
push
aas
jge
repnz
stc
and
mov
sub
ret
test
aaa
stos
enter
lock
xchg
int3
mov
push
cmp
sub
popa
xlat
sbbb
jl
cltd
sub
lahf
je
cmpsl
sub
dec
out
in
lahf
andl
popa
and
or
testl
cmp
movsb
push
mov
test
cltd
cmpsl
push
bound
mov
lret
loope
sbb
stos
fists
addl
pop
mov
lret
push
and
mov
lods
jo
cld
adc
inc
mov
sub
add
out
stos
xchg
mov
or
dec
inc
mov
xchg
insb
cmp
mov
int3
in
mov
nop
mov
sbbb
jge
int
jle
clc
mov
pop
pusha
jae
inc
sbb
pop
notb
fbld
fldcw
mov
sbb
gs
imul
jl
sub
in
orb
or
add
andb
adc
ficomps
push
loope
sub
cmpsl
movsb
shl
or
push
mov
in
inc
jns
jecxz
pop
inc
arpl
xor
cmp
imul
push
jae
sub
mov
sub
mov
dec
call
subl
fwait
pop
cmp
mov
mov
add
mov
sahf
pop
sbb
outsb
lret
in
icebp
es
mov
mov
mov
clc
divb
pop
jp
sbbb
jp
cwtl
dec
std
pop
daa
fs
insb
push
mov
dec
pop
fwait
int
cmpsl
cmpsl
xor
aas
call
or
adc
and
daa
pop
inc
fbstp
jmp
or
pop
mov
inc
mov
cmpsl
imul
adc
in
mov
popa
test
inc
data16
rol
mov
lea
jo
add
mov
dec
mov
add
dec
aaa
ja
and
xor
pusha
addr16
mov
outsb
scas
cmc
clc
xchg
sbb
mov
cmpsl
mov
mov
push
incl
and
imul
ja
test
and
mov
jecxz
xor
lret
or
or
int
out
push
sti
sub
es
mov
mov
or
or
lods
or
or
sbb
test
xorb
mov
out
xchg
sub
or
dec
ds
testb
inc
sub
out
dec
cmp
test
fxch
mov
lods
jp
mov
fwait
insl
repz
imul
outsl
dec
push
dec
cmpsl
scas
lahf
aaa
mov
sub
dec
xor
sbb
add
out
xchg
sub
enter
lods
insb
sub
mov
sahf
push
mov
outsb
push
add
cmpb
insb
sub
xchg
mov
xchg
pop
ljmp
cmp
out
jae
push
mov
fisubl
mov
cmp
dec
jnp
fcomps
repnz
push
mov
sbb
cli
dec
sbb
mov
cmpl
out
sbb
in
sbb
dec
lods
sub
push
xchg
xchg
clc
xchg
mov
adc
daa
xchg
jmp
or
sub
xchg
test
lds
push
dec
pop
sbb
stos
dec
out
mov
mov
lret
adc
fcmovu
lahf
ds
cmpsb
js
mov
daa
loope
mov
pop
ja
imul
loope
test
pop
pop
mov
scas
jl
movsl
int3
or
xchg
dec
fdivs
mov
js
inc
test
outsl
or
pop
xchg
xchg
subb
push
add
outsl
pop
mov
push
mov
mov
and
jae
in
ret
and
pop
jg
scas
sbb
or
addl
sub
arpl
stc
jg
icebp
in
pop
je
shr
out
pop
out
xor
adc
jmp
push
test
mov
into
imul
in
mov
jg
enterw
xchg
fsubr
xchg
arpl
sub
mov
sub
call
jbe
mov
push
inc
xor
inc
and
jne
pop
aaa
mov
cmpb
mov
insb
and
daa
dec
inc
enter
ja
icebp
ja
jg
pop
mov
jmp
and
xchg
sub
pop
subb
jbe
icebp
inc
leave
push
lods
adcl
cmp
and
jno
jg
xchg
dec
test
jmp
sbb
mov
or
inc
cmp
les
into
pop
jecxz
fistps
rolb
jns
std
bound
inc
push
int3
orb
mov
das
pop
xor
inc
loopne
fs
addl
mov
nop
outsb
sarl
movl
test
mov
push
push
sti
ss
popf
jg
subl
in
int
test
icebp
in
adc
mov
cmpsb
sbb
in
divb
dec
adc
pop
int
xor
std
cmp
push
inc
inc
xor
lcall
sub
mov
pop
adc
xchg
aam
sbb
icebp
jne
mov
jge
mov
cli
pushf
stos
cltd
ljmp
add
stc
je
fsub
xor
stos
sbbb
jp
jbe
fisubrs
sub
xchg
scas
xchg
cmp
icebp
push
or
pop
pop
insb
xchg
and
xor
subl
fmuls
xchg
sbb
sahf
into
cltd
popf
sbb
in
andb
pusha
inc
mov
dec
push
imul
movb
int
in
cltd
test
arpl
jne
push
lcall
into
add
lock
mov
sarb
mov
int
or
xor
adc
int
add
cmp
jmp
adc
jl
inc
leave
inc
mov
test
insb
adc
je
adc
jecxz
lods
jns
or
xchg
fcos
nop
fsubr
sub
xchg
je
js
mov
sub
call
or
lret
dec
mov
sub
dec
sub
cmp
push
popa
dec
mov
pop
call
mov
imul
test
add
pop
sub
outsb
jb
pop
cmpsb
adc
mov
icebp
cmp
adc
sbb
ljmp
aam
pop
iret
adc
mov
out
push
push
cld
cmp
jno
add
shrl
das
mov
fwait
pop
mov
jp
or
push
or
push
inc
pop
cltd
test
ljmp
mov
test
sub
orl
xor
jbe
clc
push
xor
rcll
xor
rcl
in
popf
sub
adc
iret
jno
test
lea
jecxz
fmull
rol
dec
mov
push
mov
pop
shlb
rep
jae
jmp
rolb
fildl
ja
ljmp
xor
inc
add
inc
dec
mov
mov
jne
dec
sbb
shl
sub
push
movsl
je
or
push
lock
fstl
or
cmp
out
mov
jns
enter
inc
lods
jb
pop
into
mov
and
and
test
jle
dec
aam
pop
push
adc
adc
push
and
add
mov
push
mov
in
imul
push
cli
rcr
jb
adc
push
cmp
lods
ds
cmpsl
lret
sbb
lret
movsl
cmp
jmp
lods
imul
xchg
test
mov
sbb
hlt
in
xchg
rcrb
aad
rcrl
out
test
mov
xchg
cmc
cs
out
jae
pop
pop
sahf
dec
adc
ljmp
les
xchg
leave
xlat
test
xchg
int
imul
push
inc
in
mov
test
push
push
fldcw
xor
push
int3
push
sti
lcall
ret
push
test
adc
out
and
mov
daa
inc
fstpl
inc
in
arpl
inc
adcl
sub
ljmp
shrl
dec
mov
sahf
sti
or
xchg
aaa
sub
sub
cwtl
and
decl
cwtl
addr16
mov
xchg
pop
aad
movsb
shrl
rcll
xchg
das
lock
dec
mov
pop
pop
xor
mov
xchg
push
cmp
and
fisttpll
xchg
mov
sbb
push
test
insl
and
adc
ljmp
aad
aad
sahf
sahf
leave
cmp
rcll
arpl
cmp
ljmp
add
rcll
and
int
mov
pop
testl
mov
mov
ss
mov
adc
cmp
pop
sbb
sub
pop
mov
mov
pop
mov
ss
es
pushf
cmp
movsb
loope
xchg
sbbl
test
aam
xchg
adc
fbld
repnz
adc
sbb
jbe
xchg
cmp
pop
sub
div
sbb
mov
push
sar
call
xor
mov
dec
cmp
dec
inc
enter
push
fcom
stos
pop
xchg
mov
cs
fdivl
test
nop
mov
mov
push
push
test
mov
sti
shll
mov
cwtl
and
out
xadd
mov
xor
pop
pop
leave
icebp
sar
add
mov
iret
inc
pop
xor
stos
ds
pop
repnz
test
pop
addl
dec
push
rorb
outsb
orl
or
adc
or
in
cmp
mov
fstpl
lcall
lahf
mov
mov
shlb
or
push
incb
rorl
mov
sub
jb
orl
xor
sub
outsl
mov
push
adc
fstl
es
mov
orl
aad
lea
int
mov
push
call
lods
mov
ret
jge
mov
jo
mov
loope
lret
ror
cmp
mov
lods
in
ds
cwtl
add
and
rclb
lods
push
push
mull
decl
sbbl
inc
je
mov
das
test
xorl
push
sub
push
xor
js
jo
add
mov
or
mov
mov
clc
push
nop
add
sub
mov
inc
push
fstps
ds
icebp
repnz
mov
iret
xchg
mov
mov
dec
dec
sbb
lods
into
hlt
aaa
pop
fcompl
jp
leave
jno
mov
scas
aas
or
inc
add
imul
pushl
mov
data16
push
pusha
inc
mov
or
dec
mov
push
xorl
jl
add
rcrl
out
jae
insb
fistpl
in
je
fildll
xchg
mov
fildl
fwait
scas
imul
cli
xchg
or
mov
add
loopne
xchg
lret
out
jnp
jae
out
push
pop
jp
mov
out
and
sbb
shr
cmpsb
fwait
jb
outsl
lretw
mov
ja
fdivrl
push
xor
jns
nop
cmp
into
push
in
mov
cmpb
or
cmpsl
dec
or
test
xchg
bnd
sbb
push
dec
jno
dec
cmpsl
lcall
mov
pop
jg
or
gs
pop
jns
daa
push
pop
xchg
lock
adc
stos
ficompl
sub
fcoms
mov
rorb
jns
imulb
jne
xchg
addb
js
dec
in
pop
cld
inc
pop
add
jnp
mulb
sbb
dec
push
jmp
fwait
mov
cmp
pusha
test
jbe
popf
add
pusha
fiaddl
in
jbe
fidivrs
sbb
lret
fwait
andb
cmc
pop
sub
sbb
shl
testb
dec
sbb
xchg
inc
dec
pop
mov
mov
out
push
mov
jmp
sub
xchg
xchg
pop
out
mov
push
adc
xchg
cld
add
roll
das
jle
dec
leave
pop
push
push
jle
push
les
xchg
popa
imul
jl
dec
and
out
cmpsl
jae
arpl
xchg
frstor
push
loope
dec
loop
js
ret
nop
ljmp
push
xchg
xor
sbb
stc
mov
fistpl
xchg
pop
jb
xchg
ja
inc
test
insb
sub
ljmp
mov
pop
push
addb
cmp
xchg
xor
jmp
xor
pushf
lea
mov
nop
xor
dec
in
inc
ret
cbtw
lds
inc
push
or
add
test
arpl
out
cmpsl
and
fstps
ja
xchg
add
lahf
jle
inc
loop
test
cmp
mov
mov
hlt
xchg
add
inc
mov
std
daa
add
cli
out
int
imul
push
nop
out
push
rol
inc
sub
cmp
push
cmp
add
mov
in
cs
test
jle
repnz
and
dec
dec
mov
leave
dec
mov
daa
jg
adc
lock
add
dec
dec
and
or
lea
lcall
insl
or
enter
push
loop
mov
or
rclb
mov
fistl
mov
mov
int
jnp
mov
cmpb
pop
movsl
in
or
lcall
popf
rcrb
pushf
mov
xlat
in
lea
shlb
in
sbb
fisubl
shrl
or
inc
mul
or
mov
js
push
push
inc
jae
test
scas
mov
or
push
sbb
push
out
mov
xor
dec
adc
lahf
pop
in
sbb
mov
jne
popf
ss
dec
sub
xor
sbb
ljmp
mov
in
cmp
sahf
cmp
push
aad
rcl
inc
mov
fbstp
lcall
nop
push
adc
mov
mov
xorl
sub
loope
data16
mov
sbb
mov
mov
es
push
pop
imul
mov
insl
and
int
mov
mov
ret
xchg
cwtl
ljmp
pusha
js
unpckhps
jbe
mov
sbb
xchg
out
lret
icebp
stos
mov
fsub
sahf
cmp
push
push
xchg
sbb
sti
mov
das
ss
fpatan
call
fs
out
sbbb
sbbb
xchg
jp
push
jb
out
jns
mov
mov
add
xchg
add
add
fs
pop
scas
xor
sub
fsub
mov
lcall
xor
fnop
xchg
pusha
pop
inc
cmp
adc
mov
xchg
jp
stc
test
sbb
mov
andb
xchg
in
dec
mov
fs
push
test
sahf
add
cmp
pop
cmp
nop
aas
bound
pop
cs
les
jo
push
inc
add
xchg
popf
ret
negl
pop
mov
xor
mov
lahf
sub
xchg
pop
mov
xchg
in
jb
and
in
cmpl
or
fldl
ret
jne
push
cli
cwtl
mov
jle
add
xchg
in
test
cmp
jle
aam
and
mov
adc
pop
pop
sub
ret
rorl
push
cmp
push
adc
imul
pop
mov
imul
push
icebp
sbb
sbb
daa
cmc
dec
xchg
inc
push
bound
lcall
insl
adc
addr16
cs
mov
es
pushf
and
leave
mov
test
jnp
inc
and
push
xor
orb
pop
ret
mov
movsl
inc
daa
outsb
rorl
or
ss
add
lcall
xor
int3
sub
pop
sbb
jae
inc
cmpsb
pop
xchg
or
push
aam
sub
into
test
adc
mov
pop
push
xor
xchg
idivl
xorb
jle
ja
xor
sti
adcb
mov
or
xor
mov
add
into
mov
scas
pop
imul
pop
jecxz
inc
xlat
outsl
pushf
xor
jmp
popf
mov
repz
push
push
mov
sbb
push
xchg
gs
mov
mov
movsb
movb
xor
push
rorb
mov
loop
and
xchg
adc
xchg
aas
dec
shrl
jb
pop
hlt
pop
dec
aam
pop
adc
enter
hlt
add
pop
dec
daa
and
or
cmp
push
fwait
js
leave
jg
fwait
mov
rol
xor
push
pop
mov
xchg
ret
lds
jp
cs
jmp
cmp
xchg
xchg
cmp
repz
sub
lretw
jno
sbb
cltd
pop
mov
lock
divl
loop
lret
inc
pop
adcl
idivl
inc
dec
lcall
push
pop
mov
or
or
test
jns
dec
lahf
mov
mov
push
push
nop
xor
loop
in
jmp
negl
ret
hlt
jno
mov
in
xchg
jae
in
nop
fmuls
outsl
fildl
into
xchg
arpl
cmc
es
push
adc
rorb
mull
xor
push
cmp
add
and
pop
decl
shll
sub
stc
fldl
adc
lock
sbb
cmp
xor
mov
incb
and
push
imul
pop
mov
sbb
es
test
scas
pop
add
xchg
cs
cmc
in
sarl
dec
push
mov
cmpsb
push
andb
fldt
xlat
adc
push
sbb
syscall
mov
mov
loop
into
fwait
lds
gs
xchg
xor
mov
ds
mov
pop
out
cmpl
fildl
test
add
inc
lea
mov
mov
jp
test
loopne
dec
sbb
aam
inc
sbb
push
mov
movsb
fbstp
cld
adc
pop
push
xchg
jle
int3
popa
and
rorl
popf
jns
mov
or
sbb
add
popa
mov
push
inc
mov
out
push
mov
repnz
sti
sbb
ds
pop
ret
push
inc
pop
into
sahf
rclb
sub
add
jmp
or
sub
fsubrl
sahf
movb
hlt
in
cmp
aaa
lods
jbe
sbb
mov
call
pop
and
mov
repnz
ja
imul
outsb
adc
call
imulb
mov
jb
or
push
push
add
jnp
push
mov
mov
dec
dec
fwait
mov
mov
lret
orl
fistpll
adc
jmp
mov
lret
ficomps
scas
mov
lea
and
std
mov
jne
insb
fisttpll
loop
loope
xor
es
cmp
enter
xor
xor
les
loop
xchg
or
push
pop
jecxz,pt
add
xchg
xchg
loop
and
cmc
sub
dec
fptan
insb
xchg
xchg
mov
push
push
sub
bound
arpl
cli
push
pop
lret
mov
outsl
mov
mov
cmp
pop
and
scas
lcall
and
movsl
test
add
sub
jl
pop
scas
cld
rorb
mov
ret
jb
pop
dec
mov
mov
jae
outsl
imul
out
inc
cmpsb
dec
dec
out
sub
push
add
cmp
jo
out
das
lea
imul
int
movsl
xchg
and
je
mov
fs
in
and
cmp
rol
push
cmc
mov
cmp
add
cmpsl
and
jns
adc
pop
in
dec
mov
xchg
lcall
das
bound
lcall
fdivrp
dec
mov
jecxz
sbb
mov
in
jo
sbb
dec
bound
cmp
push
pop
xor
jo
push
cmp
inc
repz
or
shll
inc
lret
mov
xorl
dec
in
cmpb
addl
rorl
xlat
lea
xchg
adc
sti
xchg
jns
mov
xchg
or
loope
bound
pop
xchg
mov
mov
addr16
lds
cltd
jge
mov
les
ds
mov
xor
dec
push
movsl
sti
nop
loopne
into
xor
cltd
rcrl
sub
test
push
sub
cmp
pop
lock
or
imul
ja
dec
or
adc
mov
test
inc
incb
in
mov
mov
mov
int3
mov
xor
lret
mov
push
inc
adc
js
jne
jbe
or
incb
mov
jmp
lock
xchg
mov
push
mov
mov
mov
popf
call
push
in
into
lahf
sbbb
cld
dec
inc
insb
lcall
in
cmpsl
jns
pop
xchg
loopne
sub
add
in
icebp
jmp
jae
mov
es
jae
stc
repnz
mov
sbb
sbb
jae
stos
mov
xor
sub
rorl
pop
pop
es
jb
mov
ljmp
daa
mov
xchg
fimull
pop
mov
xor
mov
pushf
aam
fnstcw
push
mov
pop
sub
inc
scas
mov
jno
cwtl
sub
popa
cmp
mov
loopne
andnps
icebp
data16
in
psubq
js
dec
and
adc
jl
adc
pop
imul
inc
std
dec
repz
add
sub
xchg
movsb
or
xor
fs
jmp
lods
bound
push
mov
cmp
out
fidivrl
cmpsl
out
jb
adc
inc
adcl
jns
aas
inc
mov
pop
push
enter
nop
in
push
icebp
cmp
inc
fisttpl
mov
in
imul
cmpsl
or
dec
ret
cmpsb
call
repz
jge
loopne
fisubl
lahf
adc
fnsave
sub
loopne
lods
mov
inc
and
mov
mov
daa
pop
push
ret
je
imul
lcall
lret
inc
cmp
es
xor
rcll
fstpt
push
push
xchg
fs
xor
push
pop
rolb
xchg
inc
xor
inc
stos
mov
cmp
inc
sbb
jge
sbb
sbb
test
neg
loope
mov
sub
int
add
test
mov
xchg
dec
shlb
inc
mov
push
cmp
adc
into
repnz
cmpsl
mov
fbld
mov
mov
int3
push
jge
ret
cmp
mov
jmp
js
ja
and
xor
push
pop
fisubrs
add
gs
mov
cmp
sub
inc
fistpll
and
es
outsl
or
sbb
or
movsb
mov
roll
inc
jmp
mov
sub
cwtl
push
lea
hlt
stos
mov
cwtl
data16
push
mov
inc
lcall
pop
cmp
lock
inc
mov
or
insl
cmpsb
test
fabs
xchg
pushf
or
push
stc
pusha
pop
push
push
out
inc
and
pop
icebp
lods
xchg
ljmp
add
popa
xlat
cmpsl
rorb
lds
mov
lods
pop
mov
rclb
sub
adc
and
dec
imul
and
popf
xor
mov
pop
out
lock
xchg
or
sub
in
loope
nop
jae
jg
mov
sbb
pop
pop
bnd
add
xor
or
sbb
mov
dec
inc
add
pop
jne,pt
test
ja
push
xor
add
mov
pop
pop
lods
cmc
pop
jne
pop
pushl
nop
or
mov
adc
jne
lahf
sbb
cmp
loop
addr16
mov
push
lcall
mov
mov
ret
pop
das
jbe
cmc
or
or
jecxz
sub
aas
sub
xor
fisttpll
or
cltd
xchg
jmp
mov
mov
inc
hlt
jbe
jmp
mov
dec
sahf
sbb
pushf
jge
lcall
sub
insl
xchg
in
cmp
sbbb
lock
jno
cmpsb
sub
ja
cmc
popa
test
imul
xchg
das
andl
ljmp
pop
outsb
xor
add
cmc
xchg
gs
shlb
jp
pop
test
xor
sbbl
sbb
pop
mov
jo
loopne
adc
cld
jo
jl
push
cmc
lods
out
mov
sub
das
js
rorl
jge
xchg
xor
fdivr
sub
jns
shll
ret
fcmovnu
int
pop
into
lret
lahf
xchg
inc
add
mov
or
mov
out
sbb
std
pop
aad
xor
add
iret
mov
sahf
sbb
loop
aaa
jae
mov
cmp
inc
out
shll
frstor
add
in
out
mov
scas
mov
xor
arpl
push
shlb
pop
jns
cmp
sbb
xor
adc
jmp
aaa
add
addr16
cmp
ja
push
pop
cmp
iret
in
nop
notb
shrb
jno
popf
cmp
faddl
popl
dec
sbb
add
enter
mov
in
sbb
je
push
roll
nop
mov
mov
aad
scas
fnsave
pushf
inc
or
pop
inc
fsub
mov
in
pushf
mov
cmp
stos
jle
enter
mov
xor
les
lret
jno
pusha
fdivl
sub
xor
mov
sub
xchg
pop
clc
pushl
xchg
cmp
popa
rcrl
sarb
sbb
rorl
and
lahf
scas
loop
addr16
cmp
add
or
cld
shrl
sub
fs
xor
cmp
mov
push
push
cs
flds
call
push
mov
add
icebp
cmp
lret
sbb
sub
dec
push
jecxz
mov
mov
inc
add
fsubrl
xor
enter
in
inc
cmp
and
mov
call
add
mov
out
mov
xlat
mov
push
cmpsb
fisubrl
fbstp
xchg
pop
pop
mov
or
pop
cwtl
jmp
lock
xchg
outsl
mov
ss
imulb
sub
outsl
cmp
push
mov
fisttpll
imul
xor
out
mov
push
fcmove
lret
pop
sbb
dec
push
iret
insl
jb
xorl
int
roll
into
outsb
push
or
sbbb
mov
xor
lret
xor
in
push
mov
cmp
mov
fcmovu
out
or
push
sub
cmp
shrb
add
cs
inc
scas
clc
pop
inc
in
dec
mov
je
lods
mov
mov
xchg
fildl
in
mov
and
jp
cmpsl
jl
sub
xchg
jno
lahf
and
aaa
add
movsl
xchg
rclb
jp
out
out
fld
push
dec
gs
push
cmc
js
filds
or
mov
pushf
daa
add
ds
xchg
xchg
push
jecxz
pusha
or
movsb
fnstsw
inc
sahf
or
lahf
scas
xlat
fldln2
pop
imul
mov
test
dec
pop
ret
fld
aaa
xor
sbb
jnp
shll
or
repnz
in
lahf
push
pop
xor
cmp
inc
or
into
daa
push
mov
mov
adc
push
lahf
pushf
add
sbb
pop
xor
xor
or
imul
iret
jecxz
addl
inc
xor
divb
cwtl
xor
test
mov
mov
mov
in
jmp
xor
jae
movsb
xor
xor
lret
push
jle
xchg
fyl2xp1
sub
cmp
divl
stos
mov
mov
cmpsl
add
mov
movsb
aaa
adcb
movsl
cli
jo
dec
jns
or
mov
jp
jl
stc
xchg
aas
adc
adc
adc
and
adcl
push
scas
hlt
ret
lock
mov
dec
pop
scas
or
out
xchg
stos
adc
xchg
test
push
xchg
sarb
and
push
sub
data16
mov
push
dec
lcall
adc
in
and
mov
nop
add
frstpm(287
scas
std
int3
mov
lock
dec
xor
add
lock
imul
test
lcall
jnp
pop
sub
sbb
or
loop
and
ljmp
jg
sub
inc
mov
cmp
test
hlt
xor
imul
jecxz
adc
sarb
call
pop
push
test
std
inc
imul
sti
mov
imul
sbbl
idivb
push
add
bound
mov
xchg
xchg
mov
inc
or
std
loop
aam
loope
mov
or
int
popa
div
movsl
js
mov
or
xchg
loopne
icebp
test
mov
scas
cmpb
nop
cmpsb
repz
dec
sub
pop
pop
sub
stos
adc
mov
adc
add
lret
outsl
xchg
out
mov
aas
and
das
xchg
rcrb
sbb
stos
sub
imul
add
inc
xchg
dec
xchg
popf
xchg
jo
dec
arpl
jae
xor
inc
popa
cs
in
pushf
xor
sbb
lcall
stos
mov
mov
cs
mov
es
icebp
pop
mov
mov
test
or
punpckhbw
imul
and
daa
out
pushf
out
xchg
test
xchg
inc
pop
stc
xlat
push
adcb
add
pop
mov
sub
jmp
push
add
or
add
icebp
jno
sbbl
sbb
cs
shl
shrb
inc
xor
cmp
mov
adc
test
pusha
arpl
sbb
cmp
mov
cld
mov
inc
pop
mov
aam
mov
rcr
cmp
sub
sub
in
pop
and
popa
add
add
int3
popf
adc
xor
adc
push
shlb
sub
out
pop
xchg
je
movsb
inc
add
loope
into
mov
repz
xor
out
inc
cmpsb
lods
pop
push
or
push
iret
xchg
test
pop
mov
mov
outsb
in
lods
dec
jmp
js
out
movsb
push
aad
pop
inc
faddl
cmp
push
jb
mov
js
pop
mov
sub
mov
push
sub
pop
subl
stos
sub
pop
jbe
hlt
push
fimull
add
sub
loope
dec
dec
sub
pop
adc
jmp
js
jg
popf
addl
clc
stc
mov
push
sub
mov
sub
stc
loopne
sahf
mov
push
dec
xor
stos
pusha
sub
xchg
out
adc
add
jl
jecxz
xchg
out
cmp
push
inc
js
adc
pop
pusha
and
jp
rcr
or
mov
out
inc
mov
daa
int
stos
popf
inc
pop
addr16
jl
push
bound
fwait
xor
aas
inc
loop
jg
pusha
mov
out
addr16
push
fwait
inc
cmpsl
cwtl
lea
jo
pop
loope
lret
insb
popl
mov
cs
test
xor
insb
icebp
jp
cmp
xorl
adc
adc
adc
clc
jl
js
cmp
xor
stc
int
inc
mov
push
add
mov
and
fsubl
cld
aaa
cltd
fs
cmp
test
repnz
xor
inc
and
xchg
in
or
mov
enter
pop
and
jmp
xchg
stos
mov
cltd
in
pop
sbb
xchg
hlt
sbb
aaa
stos
push
addb
ficoms
not
cs
das
inc
mov
xchg
push
call
call
or
lds
push
cmp
out
inc
into
xor
movsl
out
in
std
mov
push
sbb
push
das
or
dec
rol
fs
pop
lea
jp
or
in
and
in
xchg
mov
cmpsb
call
cmp
mov
jno
xor
add
cmp
mov
fdiv
fsubl
orb
test
mov
inc
rcrl
sub
fnstenv
xchg
xchg
insb
lds
xrelease
out
dec
icebp
xor
and
xor
repz
mov
sbb
cli
loope
scas
scas
xchg
fs
mov
or
mov
jp
adc
add
xor
lea
and
push
stos
mov
and
jg
xlat
lcall
push
xchg
ret
int3
jge
cld
shr
mov
xor
pop
push
mov
pop
fdivrl
push
jnp
push
idivl
stos
js
aad
lahf
or
shr
enter
imul
adc
outsl
lock
or
push
fimull
ret
iret
push
sbbl
ds
arpl
hlt
inc
mov
or
notb
lods
mov
lock
and
mov
icebp
arpl
insl
das
jno
ret
repz
leave
xorl
test
cmp
test
mov
stos
xor
jl
inc
fiadds
sbb
add
lods
mov
jns
xchg
hlt
mov
pop
add
insl
arpl
jmp
jmp
push
xchg
loopne
es
fdecstp
mov
jae
or
inc
dec
push
aas
jmp
into
xchg
mov
movsl
lret
iret
or
jbe
loope
sti
jmp
out
ret
scas
adc
in
fiadds
sbb
jae
add
imul
or
cmp
sti
scas
xor
mov
sbb
imul
ja
shlb
xchg
fucom
sahf
test
and
or
jb
mov
add
icebp
xor
outsb
sub
jb
inc
mov
outsb
movsl
into
ja
push
jge
push
aas
sbb
mov
mov
fiadds
jno
xchg
cmp
das
jbe
adc
fs
test
pop
add
insl
stos
aas
mov
je
xchg
sti
test
pop
popf
push
rorl
inc
gs
pop
push
ljmp
mov
pop
adc
ficoms
cld
xchg
jmp
pop
ja
ja
cmp
lret
push
mov
mov
movsb
push
fildll
xchg
test
shlb
jnp
pop
pop
lret
sbb
adc
pop
rcrl
imul
fldl
add
cs
in
ds
adc
xor
leave
xor
popf
inc
or
jle
jb
mov
pop
xor
mov
push
xchg
clc
testb
dec
cmpb
test
jg
mov
jp
or
xchg
or
and
bound
stc
dec
and
mov
gs
xor
sahf
sbb
mov
add
incb
mov
or
movsl
cwtl
sbb
pop
push
inc
add
cmp
or
je
daa
int3
cmp
or
and
iret
or
mov
cmp
mov
and
fisubl
pushf
jecxz
insb
xor
popf
pop
es
xchg
je
mov
pop
push
scas
repnz
cmp
or
mov
push
pop
push
sub
fs
mov
mov
adc
cmp
jmp
xor
push
stos
aas
add
adc
fsub
sbb
repz
das
test
in
sub
xlat
imul
ret
inc
jge
scas
aas
jo
out
mov
fstps
sub
adcl
adc
dec
jbe
adc
idivb
push
int
loopne
mov
lds
add
xor
push
xchg
lea
rcll
cmp
in
mov
pop
jmp
test
in
fsubrl
aas
lods
adc
mov
add
js
dec
inc
mov
mov
lcall
js
fildll
cmpsb
sbb
lret
xor
jp
andl
xor
ds
mov
adc
les
add
in
push
add
add
dec
and
jb
nop
in
js
mov
rcll
adc
mov
repnz
jg
mull
sub
inc
xchg
jg
fiaddl
pop
inc
push
dec
jge
dec
mov
sub
imul
cmp
push
test
jb
in
adc
add
pop
cmp
scas
into
enter
jge
scas
ljmp
cmp
cwtl
int3
pop
arpl
out
cli
mov
mov
xchg
xchg
sub
sbb
lock
lret
iret
jae
xor
sbb
psllw
and
mov
arpl
pop
mov
xor
mull
orb
or
jp
data16
or
inc
dec
inc
repz
scas
mov
jp
pop
imul
ficoml
jmp
push
sar
dec
fwait
lret
sbb
call
adc
fisttpl
add
pop
inc
js
ss
lods
sti
loopne
jp
idiv
and
sahf
out
adc
ret
dec
dec
addr16
fcmove
imul
mov
insb
and
aas
testb
pop
pop
adc
fmull
cmc
mov
decb
cld
adc
push
mov
mov
mov
jns
pop
jmp
lret
jne
cmpsl
jae
sbb
js
xor
mov
xchg
int3
sbb
icebp
test
xor
jmp
je,pn
lcall
push
scas
jg
jae
and
push
and
jp
inc
adc
push
out
lods
dec
push
arpl
shlb
xchg
adc
mov
sbb
sbb
inc
sub
rcr
add
arpl
inc
arpl
xor
lret
jecxz
or
pop
cmp
cld
or
xor
cltd
and
in
gs
into
jge
mov
mov
sbb
cmp
or
xchg
push
int
dec
out
jecxz
enter
add
push
lock
andb
xor
imul
sbb
pop
mov
out
orl
xor
cmpsl
or
arpl
lret
mov
in
js
jl
clc
mov
sbb
lds
jmp
stos
rcrb
adc
in
je
xchg
inc
add
pop
push
daa
inc
sti
sbb
push
adc
or
push
cmp
xlat
inc
popa
and
std
outsl
lds
fs
lahf
mov
andb
loop
adc
scas
popa
xchg
fwait
push
iret
adc
pop
les
fisubrs
test
push
loop
jge
fnstenv
je
scas
data16
ret
add
iret
jne
adc
cmp
shl
mov
mov
dec
lds
cs
mov
repnz
or
in
loope
jnp
call
push
enter
test
in
in
jns
mov
mov
fwait
push
loope
dec
sahf
or
bound
push
cmpsb
xor
sarb
and
sbb
out
lods
mov
adc
popf
inc
jmp
inc
adcb
xchg
mov
std
fisubrs
pop
adc
and
push
xor
ljmp
jge
hlt
das
je
push
pushf
in
push
xor
loopne
push
cli
dec
int
adc
push
or
sti
push
das
push
xchg
rorl
insl
cmp
shr
or
stc
aad
hlt
and
or
insl
adc
mov
ljmp
out
mov
push
in
cmp
test
xchg
pop
xchg
mov
ds
pop
int3
cmpsb
call
push
adc
ss
jnp
pop
mov
push
shlb
aam
push
enter
imul
divl
jbe
stos
mov
dec
add
push
outsl
cli
mov
sahf
mov
insb
jmp
andl
in
and
sahf
lret
and
cmp
sti
movsb
jmp
xchg
mov
les
inc
imull
iret
mov
add
xor
bnd
or
cmp
das
arpl
pop
bound
jb
and
pushf
pop
jb,pn
cmp
addr16
cs
push
loope
adc
nop
ss
shll
sbb
ds
repnz
pop
sub
lret
jae
push
cmc
sub
cmp
xchg
inc
mov
jp
fiaddl
jge
mov
dec
and
leave
int3
dec
adc
negb
aas
outsb
xorl
jg
inc
test
adc
cmpsb
sbb
jno
inc
sbb
mov
movsl
sub
jo
jle
xchg
mov
sarb
jmp
lret
int3
push
leave
shrb
mov
and
pop
xchg
inc
ja
jl
imul
test
push
loopne
xchg
sbb
jnp
loopne
int
outsb
lret
sbb
stos
push
xchg
cmp
pop
xchg
mov
mov
or
data16
enter
mov
sbb
fs
in
mov
mov
add
jb
test
inc
mov
into
jle
jg
movsl
outsb
hlt
repz
sti
xchg
pop
fiadds
das
push
cwtl
das
fistps
lcall
loope
push
mov
cmc
jecxz
sarb
loopne
aaa
cli
jecxz
in
roll
mov
sub
addr16
ret
pop
div
jb
xor
mov
push
push
fldt
cwtl
mov
fists
ds
pop
pop
lods
rcl
jnp
pop
mov
je
repnz
and
xor
mov
stos
and
xchg
lods
inc
out
pop
adc
adc
inc
pop
sbb
jle
shlb
push
or
fnsetpm(287
std
push
pop
outsl
xchg
or
mov
subb
mov
mov
jge
pop
add
inc
and
sbb
daa
pusha
ljmp
fadds
or
das
pop
mov
fcoml
jo
je
cwtl
fimull
mov
in
bound
in
lods
push
test
xchg
or
xchg
jp
or
jne
popa
movsb
lds
dec
jge
fucomp
call
and
hlt
test
or
scas
mov
pop
sub
adc
jb
icebp
hlt
and
inc
mov
jmp
mov
dec
cmp
and
cs
movsb
or
mov
leave
subb
jmp
and
push
add
mov
sub
das
int3
cmpsb
es
mov
mov
js
sbb
jae
roll
fildl
dec
xchg
mov
sub
dec
in
mov
dec
add
cltd
inc
xor
or
inc
xchg
inc
pop
fiaddl
mov
mov
int3
roll
push
cmpsb
imulb
xchg
dec
dec
xchg
dec
adc
adc
ret
shrl
fsubp
int
xchg
into
incl
adc
out
and
ret
inc
cmp
sbb
xor
mov
repnz
and
fdiv
cli
in
inc
repnz
mov
repnz
shrb
inc
add
jns
adc
adc
aam
jg
mov
xchg
cmp
dec
int
repnz
lret
icebp
mov
fcmovu
fadd
adc
add
jbe
adcb
popf
lods
test
adc
lds
mov
jno
daa
mov
stos
dec
adc
push
cmp
jl
sbb
sti
mov
loopne
mov
dec
mov
daa
sub
add
xchg
ljmp
and
dec
inc
push
and
inc
xor
ljmp
out
sbb
push
jmp
pusha
and
ljmp
xchg
rcrb
in
xchg
fxch
mov
mov
sbb
mov
fs
hlt
scas
jno
and
inc
push
lcall
or
popf
sbb
inc
in
imul
cmp
cs
sarl
shlb
ffreep
adc
ja
int
lahf
push
cmpsl
and
dec
outsl
sbb
insl
sbb
rcrb
sbb
sub
in
adc
out
popf
fwait
hlt
mov
cwtl
add
lods
sub
outsl
mov
ret
dec
ret
mov
add
dec
jnp
cs
in
pop
mov
testb
call
adc
and
cmp
adc
dec
repnz
ljmp
fs
pop
cmc
popf
lds
popa
xlat
sub
sarb
icebp
std
and
daa
add
add
push
sahf
and
mov
notb
mov
xlat
xor
stos
in
push
jmp
cmc
xchg
insl
or
xor
aas
bound
xor
adc
pop
incl
or
mov
fidivrl
sbb
add
dec
and
test
sbb
sbb
xor
inc
fwait
mov
inc
or
div
mov
movsb
inc
or
push
mov
cmp
shlb
push
dec
sub
ss
mov
and
mov
push
out
xorb
jne
mov
movsl
subl
mov
mov
add
push
cmp
mov
notb
dec
lods
lds
jmp
or
xchg
das
fsubrp
repz
inc
push
lahf
pop
fsubl
test
mov
and
decb
xchg
mov
shl
add
in
dec
lret
push
in
mov
cmpsb
ret
les
jmp
jmp
cmpsb
xchg
mov
xchg
orb
jl
xor
in
or
out
rcr
cmpsl
dec
ret
dec
lret
mov
and
pop
push
push
xchg
push
out
fwait
xchg
incb
and
rclb
xor
aaa
lock
data16
arpl
pop
imul
mov
push
out
ja
andl
fwait
rcrb
mov
sub
sbb
adc
js
lret
mov
add
cmp
test
cwtl
mov
push
mov
stos
test
mov
and
jo
push
mov
jp
cmp
fdivrs
sbb
cli
pop
jle
add
add
in
popf
adc
push
push
das
xchg
sbb
lds
insb
add
pop
fcompl
mov
mov
mov
cmp
sarl
or
sub
mov
not
mov
mov
jae
out
mov
or
mov
js
js
xor
fsubrs
repnz
sbb
aaa
mov
jno
leave
add
sbb
ficomps
idivl
repz
dec
mov
aad
jbe
ljmp
test
cltd
push
xlat
fimull
inc
loope
inc
push
cmp
or
sbb
cmp
cmc
aaa
testb
mov
xchg
sub
push
out
inc
xlat
lahf
insl
mov
xchg
sbb
testb
fidivs
addl
xchg
or
jge
sbb
mov
xor
push
add
or
jae
fwait
inc
xchg
or
mov
xor
sbb
clc
sti
rcrl
fisubl
or
sbb
ss
pusha
push
ret
jg
cmpsb
or
ljmp
sbb
arpl
rorb
les
inc
repnz
loope
fcmove
nop
dec
jmp
stos
xchg
mov
add
hlt
repnz
xlat
mov
inc
cmp
int
ljmp
mov
aam
popa
mov
mov
je
lds
sub
jp
dec
or
and
push
pop
cmp
inc
frstor
and
and
and
xchg
xchg
xchg
insl
inc
outsl
cwtl
sub
jno
lods
and
out
sbb
cmp
adc
fimull
fnstenv
pop
pop
xor
inc
mov
loop
loope
or
rorl
push
dec
iret
sbb
aam
push
sarl
or
test
lret
scas
inc
mov
inc
aad
mov
mov
add
dec
add
sarl
push
ljmp
cmp
pop
lret
cs
dec
addr16
adc
mov
enter
in
sahf
or
xor
cmpb
add
add
pop
mov
sub
sub
sub
inc
dec
addr16
dec
fidivl
sarl
mov
pop
sbb
inc
push
push
imull
push
mov
sub
scas
push
xor
aaa
enter
pop
out
dec
jp
ret
dec
or
mov
ret
push
ljmp
xchg
mov
and
inc
fidivrl
sbb
xchg
and
loope
cmp
nop
xchg
cli
sti
pushl
jg
mov
std
fldcw
mov
lods
insb
outsl
popl
std
sub
push
sbb
ds
hlt
jge
lods
jp
hlt
das
or
pop
sbbl
pop
mov
xchg
dec
cmp
jp
scas
nop
fsubrp
add
add
add
jg
or
andb
xchg
push
test
ror
cmc
and
out
push
mov
or
sbb
cmpsb
in
shlb
mov
add
jne
arpl
ret
fnop
cmp
dec
fbstp
aas
dec
xor
and
sbb
inc
jbe
and
das
pop
xchg
cmp
pop
ja
lret
cltd
nop
scas
clc
inc
push
mov
jne
jno
mov
sbbb
pop
outsb
sub
ljmp
gs
and
push
loopne
les
sbb
jp
lahf
fcompl
cmpsb
sar
or
sbb
add
pushl
mov
pop
xchg
or
xor
ficompl
sbb
adc
push
and
xor
mov
xor
jle
dec
add
rorb
or
shlb
shrl
js
scas
add
push
loopne
xor
and
fwait
and
add
js
or
inc
jns
fnstcw
mov
dec
gs
xchg
or
push
and
aas
stos
jae
jmp
pop
aaa
cmp
add
leave
mov
adc
push
mov
or
idivl
mov
xchg
iret
xchg
lahf
jb
add
and
push
pop
rcr
movsb
into
iret
shll
mov
fidivrs
test
aam
adc
iret
shl
call
jo
or
addr16
adc
fstps
rcrb
and
das
fs
outsb
icebp
cmc
or
test
jb
adc
iret
outsl
push
nop
or
inc
push
imul
xchg
mov
push
leave
xchg
leave
xor
sbb
mov
dec
xor
fildll
jp
in
sbb
and
xor
movsl
fcmovnb
mov
push
outsl
in
lret
and
in
aad
arpl
jecxz
cmp
jbe
jne
add
sub
or
mov
cld
jne
add
mov
mov
cmp
fiaddl
and
adc
stos
xor
dec
jae
mov
pop
xchg
cmp
push
jmp
mov
gs
leave
add
adcb
pop
loopne,pt
pusha
mov
xchg
push
adc
mov
rclb
testl
cmpsl
pop
insb
fnsave
mov
adc
lds
sahf
iret
sub
out
add
cmp
add
sar
fld
fwait
push
aaa
push
mov
xchg
cmpsl
arpl
push
es
adc
cmpsl
rcrl
jmp
repnz
dec
js
jecxz
cltd
loope
shll
or
clc
aaa
xor
call
daa
scas
push
pop
cmp
mov
loop
and
test
jno
mov
inc
mov
dec
idivl
and
hlt
insb
bound
and
lcall
adc
cmc
imul
loop
cli
pop
cmpsl
repnz
mov
push
mov
notl
cmc
jns
ret
pop
arpl
jl
cmc
dec
mov
or
sarl
test
jb
in
cmpsl
adc
aad
js
mov
push
mov
push
ficoml
inc
mov
xchg
data16
jmp
sbb
mov
mov
imul
fidivl
adc
imul
jno
mov
into
xchg
pop
cmp
lret
mov
lcall
jae
inc
mov
add
xor
scas
fidivl
sbb
xchg
loopne
dec
push
adcl
rclb
leave
dec
pop
dec
arpl
fwait
mov
mov
mov
sub
mov
dec
cli
sbb
out
dec
and
pop
dec
or
cmp
inc
shlb
pop
sub
icebp
pop
xor
pop
subb
mov
sub
dec
std
in
adc
fld
jmp
out
scas
or
add
jbe
cmpsl
sub
stc
xchg
xor
xor
sub
xlat
or
jae
inc
mov
bnd
and
sarb
in
int
xchg
inc
fidivrl
cmp
test
sub
and
xor
gs
cmpb
je
sbb
dec
test
push
mov
jns
aas
hlt
test
mov
xlat
shll
mov
iret
ja
and
adc
and
pop
shll
ss
lds
shll
inc
iret
mov
testb
outsb
xchg
loop
js
les
outsb
stc
mov
push
test
cmp
shlb
add
scas
push
push
fisttpll
pop
mov
jbe
mov
inc
mov
mov
outsb
adc
dec
lret
cmpsb
mov
jecxz
call
stos
push
stos
cs
or
cmp
pushf
push
xchg
std
gs
je
mov
mov
test
lret
mov
adc
stc
repz
or
push
sub
xlat
pop
int
aas
inc
sbb
or
mov
pop
push
data16
js
jl
pusha
les
mov
push
add
adc
jmp
jnp
adc
dec
ja
xchg
jmp
push
jb
aaa
out
inc
or
xchg
mov
rolb
sbb
repnz
inc
das
es
enter
or
xchg
jae
jae
add
mov
inc
ret
push
add
adc
test
mov
rorl
sbb
jae
pop
aas
pop
push
stos
daa
mov
lret
mov
outsl
push
enter
and
mov
jae
test
cwtl
daa
daa
dec
dec
les
outsb
mov
dec
pop
jecxz
or
mov
stc
out
push
lahf
pop
dec
into
lods
mov
ret
mov
fmull
xchg
sub
adc
mov
cs
arpl
and
inc
adc
xchg
clc
es
dec
and
lahf
and
inc
std
mov
sahf
sbb
aam
mov
sbb
and
mov
cmp
es
in
mov
mov
fsubs
add
bound
inc
dec
ljmp
mov
sbb
scas
jae
repz
add
add
leave
pop
mov
xchg
pop
nop
int3
out
push
mov
or
pop
out
jnp
push
push
xchg
es
dec
pop
enter
addr16
adc
or
inc
paddusb
jg
xor
rcr
dec
mov
inc
repnz
lods
inc
add
ss
dec
in
xor
and
fimuls
inc
lods
popf
push
inc
mov
xchg
rolb
jae
push
push
sub
jle
dec
scas
sarb
clc
add
repnz
mov
adc
mov
pop
subl
mov
push
dec
js
test
add
sahf
xor
xor
fistl
in
jmp
cs
subl
xor
lds
or
sbb
hlt
wrmsr
cmpsb
sbb
cwtl
subb
dec
jo
cmp
mov
popa
mov
inc
dec
sbb
outsl
dec
imul
pop
and
push
repnz
mov
jbe
inc
fldt
lock
sub
lds
and
sub
mov
push
jne
inc
mov
adc
mov
xchg
sar
cmc
adc
jbe
call
and
pop
cmp
repnz
sar
hlt
mov
notl
hlt
adc
pop
sarb
and
loop
imul
pop
movsl
xchg
ds
xor
add
or
push
inc
xchg
sbb
leave
arpl
ljmp
iret
cmp
popf
enter
iret
rcr
adc
add
sbb
dec
subb
out
gs
cmp
pop
add
cmp
shll
mov
mov
add
lods
xchg
sbb
xchg
js
and
sub
shlb
mov
bound
lock
push
ds
loop
aad
aam
fwait
xor
mov
lock
mov
xchg
repnz
mov
lock
push
das
dec
dec
mov
pop
jl
test
mov
lcall
js
pop
adc
test
mov
cmpl
xor
je
sbb
repnz
sub
pop
leave
aaa
jno
jle
adc
mov
inc
sub
je
movsl
adc
in
inc
mov
inc
mov
lock
enter
popf
or
cmpsb
imul
lock
aaa
xchg
sbb
ljmp
xchg
pop
pop
mov
push
pop
mov
sbb
dec
xchg
inc
int3
push
pop
stos
ja
xor
in
out
mov
mov
popf
jns
mov
sti
mov
add
sub
mov
test
push
scas
fsubl
lods
push
inc
sbb
inc
sarb
fwait
shll
pop
and
push
push
iret
lahf
jle
in
stos
sbb
emms
dec
into
pop
add
jo
cltd
cmc
xchg
mov
xchg
rcl
lret
frstor
iret
les
sbb
or
cmc
cmp
pop
mov
int3
xor
mov
xor
les
jbe
mov
les
fwait
das
jl
imul
lcall
cmpsl
es
cmp
cmpsl
jns
mov
cli
push
sarl
dec
sarb
mov
xchg
imul
out
pop
cmp
push
add
outsb
push
mov
cmp
pushf
xchg
sbb
jle
inc
adc
jg
push
sub
cmp
cmp
mov
push
enter
stc
outsl
je
and
or
into
mov
aaa
rcr
lods
sub
fistl
mov
mov
lahf
sbb
dec
and
loop
push
ljmp
push
adc
xorb
xor
pushf
push
sbb
xchg
or
pop
js
pop
mov
push
fpatan
pop
push
sub
mov
xchg
es
pop
mov
fdivl
xchg
inc
sub
mov
addr16
idivl
mov
nop
mov
fdivl
xchg
push
mov
mov
xchg
ljmpw
mov
movsl
test
and
add
clc
test
int3
mov
lahf
push
test
sub
cmp
xchg
mov
dec
sbb
mov
mov
mulb
mov
dec
cli
mov
add
jge
pusha
xchg
mov
push
mov
clc
test
push
jmp
iret
dec
in
cmp
divl
jno
dec
daa
dec
mov
mov
adc
mov
int3
inc
fdiv
fisttpll
xchg
sbb
ja
fs
cmpsb
pop
aas
jge,pn
or
sahf
in
int
mov
outsl
sarl
mov
mov
xor
dec
and
loop
insl
mov
xlat
packsswb
xor
sub
jns
out
xchg
jae
cmc
fld1
adc
adc
or
sbbb
maxps
sti
xor
or
inc
sbbb
out
push
dec
xchg
stos
je
pop
sbb
sbb
roll
inc
test
gs
notb
cmp
and
dec
xor
insl
push
iret
out
movsl
imulb
dec
mov
rcrb
mov
or
comiss
loope
xchg
pop
movsb
adc
push
xorl
ja
and
jnp
fmull
int3
idivl
movsb
xor
or
out
in
out
repnz
ret
mov
orl
push
lods
and
jle
jnp
cmpsb
lods
cld
cltd
scas
mov
arpl
add
pop
mov
mov
cld
add
sub
addb
popa
push
addb
mov
push
lcall
lods
mov
ljmp
xor
insb
xchg
sbb
xor
cmpl
sbb
adc
sarb
xchg
inc
push
mov
push
mov
cmpsb
or
popa
loopne
xor
outsl
add
and
gs
das
ret
pusha
push
ret
int3
fildl
ss
dec
vcvttpd2dq
and
out
mov
mov
frstor
filds
movsl
scas
data16
pop
add
sub
mov
push
aam
adc
jecxz
lods
idivl
inc
push
xchg
inc
out
in
pop
data16
sbb
orb
lods
int
insb
lahf
dec
sti
push
add
mov
mov
dec
xor
aaa
pop
leave
xor
dec
cld
cmp
cmp
xchg
adcb
jno
popf
mov
sbb
shlb
mov
lods
jns
mov
test
xchg
jecxz
fildl
add
mov
mov
in
imulb
xchg
mov
push
or
pop
jne
xchg
in
jo
sub
sub
std
test
cwtl
ret
hlt
rorl
ret
ret
push
aaa
lock
push
jae
inc
sub
dec
sub
in
sarl
add
dec
cmpsl
testl
cmp
sbbl
scas
nop
inc
and
push
sbb
flds
push
jnp
xchg
in
fildl
xchg
loopne
sub
call
repnz
mov
push
or
out
fiadds
and
inc
ret
inc
cmp
fwait
repnz
mov
mov
jb
loope
ret
mov
add
cmp
push
jle
pop
jl
cs
adc
idivb
leave
xor
test
lea
inc
dec
pusha
xor
cld
push
insl
and
daa
movsl
push
adc
jno
call
es
push
les
cltd
stos
das
push
or
icebp
divb
add
out
mov
and
push
sub
pop
lods
aas
xchg
add
push
mov
push
push
or
jb
icebp
push
sub
pop
xor
ja
xchg
lahf
pop
sbb
push
pop
scas
daa
daa
enter
xchg
lods
push
cwtl
add
inc
cld
scas
push
stc
mov
dec
dec
rol
std
out
sahf
clc
add
rcrb
xchg
push
add
int
xor
je
pop
fwait
outsb
leave
xchg
mov
sbbb
das
mov
fistl
outsl
mul
xlat
movsl
xchg
ret
jnp
mov
int3
pop
xor
subl
aaa
js
add
insl
adc
in
pop
add
mov
fwait
js
ret
pop
stc
push
fwait
testb
and
leave
or
fisubl
pop
sbb
loop
ja
out
and
cmpsl
inc
sub
fs
mov
popf
cmp
imull
xchg
mov
add
clc
or
sbb
sub
out
xor
jle
aaa
in
dec
adc
and
add
cmp
add
in
test
popf
jmp
imul
jae
push
ljmp
loope
sub
push
bnd
sub
int3
jmp
popf
jno
jmp
xor
mov
pop
pop
add
fxch
push
sahf
out
xchg
repz
imul
mov
bound
dec
mov
aas
subl
sbb
es
mov
test
pop
pop
shrb
outsl
xchg
mov
icebp
and
mov
cs
and
inc
push
pushf
mov
sub
dec
call
jo
iret
insb
subl
xor
sub
jl
xchg
mov
mov
jg
push
fsqrt
sub
repz
or
or
jmp
push
xchg
cmp
lds
xor
cmpb
int
lods
mov
sbb
lock
sbb
aad
mov
mov
arpl
or
ds
imul
in
add
mov
push
add
inc
test
mov
pop
adc
jnp
iret
push
xchg
icebp
mov
mov
mov
and
out
je
jge
gs
push
out
insl
loope,pt
push
push
cmp
jmp
rcrl
sbb
jmp
add
fnstenv
cmpsl
dec
mov
cmp
push
cmp
sub
dec
into
mov
loop
sahf
nop
insl
das
push
cmpsb
sub
xchg
lods
mov
xchg
xlat
cmpsl
sub
iret
mov
mov
dec
inc
int
jb
mov
sbb
repnz
jmp
sbb
lea
inc
fdivl
cmpsb
scas
cmp
jge
add
xchg
jle
std
jno
repz
mov
lahf
hlt
out
push
hlt
pop
insb
aam
ficoml
mov
enter
bound
pop
jnp
pusha
mov
pusha
sub
lret
pop
cmp
mov
and
addr16
or
adc
clc
test
mov
mov
dec
fwait
sbb
xlat
mov
or
xchg
mov
mov
shrb
mov
stos
les
inc
and
jmp
xchg
push
fmul
dec
push
xlat
add
mov
push
repz
mov
push
lock
or
jbe
xlat
inc
push
cmc
mov
lret
fistl
and
fbld
xor
and
scas
fnstenv
popl
call
lcall
push
popf
sub
and
push
push
fisttpl
push
and
or
xchg
out
mov
in
das
scas
jle
out
or
push
push
data16
xchg
add
cmp
pop
push
inc
cmp
mov
movsl
add
call
icebp
pushf
imul
mov
sbb
orl
negl
in
or
andl
pushf
xchg
dec
dec
inc
leave
mov
out
mov
es
loope
cmc
push
push
insb
ljmp
in
sub
jns
outsb
jg
icebp
sbb
xchg
inc
aam
std
out
clc
lret
inc
mov
sbb
mov
aad
enter
mov
xor
xlat
icebp
test
dec
jmp
xchg
pop
jmp
jl
fs
jp
enter
insl
mov
ss
stc
add
xchg
add
sbb
stc
mov
xor
pop
and
push
dec
sbb
mov
ficomps
sbb
xor
sti
mov
sub
sub
pop
icebp
jb
jg
jle
dec
korb
shll
add
cmp
dec
or
mov
ss
rolb
ret
mov
pop
or
sbb
mov
adc
repnz
bound
dec
mov
repnz
sbb
cs
adcb
xchg
dec
pop
shr
into
out
xor
inc
xchg
add
je
xchg
imul
cld
fnsave
mov
mov
dec
aaa
mov
orb
rorl
xchg
cli
mov
addr16
stc
into
sbb
push
rorb
and
mov
lret
lret
in
jno
adc
pop
jecxz
je
hlt
pop
sub
outsl
xor
sub
jbe
popa
sbb
sbbl
lahf
gs
lea
mov
add
xchg
xchg
or
push
push
inc
add
push
mov
leave
jae
inc
mov
pop
and
dec
addr16
mov
cmc
lea
fcom
ja
out
insb
lods
inc
cltd
add
adcb
je
mov
inc
cmpb
lahf
dec
sub
mov
dec
outsl
xchg
in
xchg
jo
pop
in
push
aam
dec
fcmovnu
enter
scas
mull
push
std
jnp
jae
out
push
jecxz
push
pop
cwtl
xor
push
xlat
push
mov
cmp
sbb
ficompl
mov
mov
jecxz
jge
test
scas
or
sub
dec
mov
jle
lret
aad
sarl
loop
in
jne
cli
sub
pop
pusha
xor
aad
or
adc
bound
shll
dec
shrl
mov
adcl
mov
pop
xchg
sbb
pop
movsb
mov
lcall
test
fcmovnbe
push
and
xchg
sbb
test
dec
sbb
mov
pop
mov
mov
adc
or
xchg
push
stos
mov
sub
push
xor
push
rcrb
test
sub
mov
push
pop
loope
xchg
test
jb
ret
push
out
aad
loopne
cmc
mov
test
pop
add
aaa
jl
rcll
ret
or
mov
mov
js
mov
pop
test
xchg
xchg
sahf
jge
hlt
out
inc
fimull
inc
js
mov
mov
jmp
pop
aas
es
cmp
fisttpll
aad
sub
in
aaa
fadd
fists
jp
adc
subb
dec
jbe
aas
fwait
lret
pop
xor
fiadds
jo
popf
lods
cmp
out
stc
ret
inc
inc
scas
jle
mov
mov
or
xchg
jge
outsl
test
rcrl
in
lds
mov
aaa
cmp
pop
xlat
cli
xchg
scas
aam
push
or
je
dec
xor
cmp
ficoml
inc
xchg
and
dec
out
dec
clc
and
pop
movsb
ret
and
cmp
test
mov
push
rcll
mov
xchg
adc
int
xchg
dec
std
test
test
jo
nop
scas
fistps
cmpsl
ljmp
inc
inc
and
mov
xchg
mov
push
loope
bound
add
lret
xchg
mov
sub
in
and
jae
sahf
xor
mov
pop
xchg
popf
popf
sbb
scas
pop
mov
adc
xor
negb
cmp
pushw
jg
loopne
fsubs
idiv
pusha
sbb
imul
dec
les
jmp
or
jecxz
fcoml
stos
imul
dec
jl
mov
nop
scas
adc
jle
xchg
out
sbb
pop
lock
aad
pop
mov
dec
mov
jne
jbe
push
ljmp
jl
mov
mov
push
dec
mov
push
dec
mov
addb
mov
in
cmovno
mov
aam
mov
adc
jns
dec
jp
subl
fiadds
mov
sub
in
dec
xchg
jg
inc
mov
sub
insb
dec
outsl
notb
aaa
imul
je
jbe
shl
lods
cmp
fisttpl
ljmp
jle
cld
ret
adc
sbb
repz
out
cmpsb
es
xchg
fcoms
mov
push
dec
xor
lret
dec
pop
push
push
or
sbb
xchg
sbb
sub
mov
cmp
inc
jle
mov
inc
loop
nop
dec
xlat
dec
lea
inc
pop
aas
push
jae
ds
add
int
cmc
inc
test
adc
sahf
les
andb
adcl
imul
cmpsb
xchg
dec
sbb
lock
sub
and
addr16
hlt
leave
cmpsl
add
adc
int
inc
add
loopne
repz
inc
pop
repz
dec
mov
xchg
xchg
pop
popf
mov
ds
outsb
mov
pop
pop
or
mov
addr16
loopne
pop
dec
fwait
push
sbb
daa
ret
mov
call
rolb
mov
dec
add
sub
inc
ret
push
cltd
jle
push
in
inc
pop
sub
xor
adc
movsb
movsb
cmp
out
stos
fmull
shrb
xor
jnp
dec
cmp
cmpl
mov
sti
ljmp
mov
das
test
movsb
es
int3
add
push
daa
dec
jecxz
std
and
cmp
xlat
xchg
pushf
pop
lods
xor
dec
nop
and
subl
hlt
push
mov
and
cmp
cli
push
jno
cli
inc
fdivr
insl
mov
mov
aaa
aad
cmpb
outsl
push
push
pop
ss
xor
add
xor
pop
mov
xchg
pop
mov
jno
xor
add
in
imul
out
lods
xchg
mov
and
stos
mov
call
int
out
repnz
push
jae
push
or
mov
loope
insb
fcmovu
dec
lret
mov
dec
xlat
mov
out
adc
and
ret
call
xchg
clc
int3
cld
or
jl
fdivrl
stos
loopne
pop
sbb
mov
jge
daa
pop
mov
mov
push
cmp
pop
mov
movsb
jl
loope
xor
mov
inc
ja
sarb
mov
mov
cs
xchg
shlb
add
adc
inc
mov
mov
and
clc
loope
andb
insb
mov
sarl
pop
jl
xor
popf
cmp
movsb
cwtl
fwait
jge
mov
fcomps
test
mov
mov
pop
xchg
jmp
repz
add
add
push
popf
cli
fisubrs
leave
lret
leave
pop
sbb
ret
and
add
xchg
iret
fs
mov
xchg
ja
add
pop
cs
sub
pop
dec
pop
sahf
inc
test
sbb
cld
mov
mov
add
int
imulb
ret
push
sub
add
or
push
addr16
fcoml
imul
xchg
xchg
stos
sbb
or
in
and
push
and
call
sqrtps
in
test
in
sub
mov
mov
jl
mov
or
add
shrl
fldenv
xor
movl
inc
scas
sbb
mov
les
push
mov
imul
mov
jge
xchg
push
dec
gs
in
pusha
adc
enter
fmuls
hlt
into
imul
mov
ds
dec
fcmovu
sub
jp
loopne
mov
dec
popf
xchg
xlat
sub
cmp
mulb
sbb
pushl
pop
insl
cmp
dec
inc
push
xor
push
aam
cmpsb
aad
lahf
cmp
loop
testl
xchg
insb
xchg
mov
fstl
push
mov
adc
jno
pop
fldt
mov
inc
mov
ljmp
lea
lods
pusha
mov
mov
mov
pop
or
adc
xchg
adc
and
xchg
filds
outsb
mov
je
in
and
inc
loopne
pop
insl
das
fisubrs
xchg
adc
test
iret
pop
mov
push
adc
jg
outsl
sbb
lods
daa
mov
outsl
outsl
lods
xor
xchg
enter
sahf
jbe
fs
push
push
enter
pop
xchg
mov
push
aaa
je
xchg
mov
mov
mov
push
mov
mov
and
sub
idivb
or
push
mov
stc
dec
out
and
pop
bswap
pop
sub
rcrb
sbb
jl
in
dec
sub
cmp
pop
fsubl
add
sub
or
adc
inc
add
pop
push
movsl
test
fiadds
js
mov
jecxz
fstpl
shll
inc
sub
push
or
subb
jnp
cmpsl
jne
cs
movsl
dec
mov
adc
mov
cmpsl
xor
adc
lock
lock
dec
addb
adc
lods
in
or
mov
cmp
fadds
out
and
js
mov
outsb
push
or
add
push
xchg
adc
cmpsb
sub
mov
fcomp
dec
iret
inc
and
xor
mov
loop
inc
fstpt
lcall
xchg
das
jg
jb
mov
das
leave
je
adc
xor
add
rcrb
sti
cld
mov
popa
mov
ret
add
push
psraw
and
add
ja
mov
outsl
fcmovnbe
out
shlb
dec
addr16
xor
mov
jo
fcmovne
bound
push
mov
sbb
push
adc
pop
and
mov
pop
ror
lret
nop
sbb
mov
mov
and
into
in
popa
dec
adc
inc
shrl
call
ror
dec
out
sub
lock
adc
sbb
imul
pop
stc
sti
xchg
out
in
loope
inc
and
icebp
aaa
addr16
add
add
xor
imul
ret
cmpsl
xchg
ds
fs
or
sub
dec
outsl
cmpl
popa
nop
repnz
or
pop
push
sbb
xchg
pusha
nop
xchg
ret
in
pop
sbb
mov
call
adc
stc
outsb
or
cmp
fiaddl
push
scas
pop
int
sahf
mov
dec
cmpsl
xchg
rclb
sub
mov
rclb
aaa
adc
jle
or
lahf
push
bound
jl
jno
sahf
repnz
jge
dec
negl
sahf
or
test
stos
insl
aad
fstpt
and
lret
dec
cmc
push
lret
cwtl
pop
xchg
out
or
lcall
outsl
mov
lock
sbb
or
dec
pushf
jae
add
mov
sbb
out
inc
test
mov
push
ja
add
mov
xchg
jge
fmulp
inc
pop
xchg
mov
jae
std
ret
setge
out
ss
jecxz
jle
or
std
mov
imul
popa
and
or
inc
xchg
imulb
add
mov
fcoml
inc
inc
in
mov
or
insl
adc
out
sub
mov
or
jmp
xchg
rcr
cmp
jbe
xchg
insl
int
fadds
lods
jecxz
ljmp
stos
aaa
jbe
add
mov
dec
jno
add
or
inc
mov
pop
jmp
cmp
stc
push
mov
adc
ja
test
rcl
fisubrl
fwait
das
movsl
nop
sbb
xchg
stc
iret
out
cli
outsb
cmp
out
lret
bts
je
imul
cmp
inc
xchg
ficompl
xor
push
or
imul
jae
mov
jp
cltd
jae
mov
call
leave
pop
add
stos
jbe
aad
push
dec
mov
faddl
icebp
stc
jl
jnp
dec
pop
xchg
inc
adc
adc
movsb
test
push
fsubrl
pop
mov
jns
jbe
pop
scas
sbb
mov
cmp
add
xchg
mov
dec
lcall
mov
leave
jecxz
mov
dec
gs
ljmp
mov
mov
or
sbb
into
add
shlb
imul
xor
mov
lahf
lcall
lea
mov
filds
push
sub
in
fistpl
lock
pop
mov
cmc
icebp
mov
jne
ds
sbb
cltd
js
push
xchg
cld
mov
shll
test
mov
jg
stc
fcomps
pop
inc
mov
push
stos
mov
cmp
dec
test
push
add
pop
cld
jne
jl
imul
sub
fidivrl
mov
and
ret
ljmp
jecxz
mov
out
xchg
add
xorb
rcll
ret
es
sub
subb
jle
push
and
push
jge
loop
std
ret
add
push
das
sub
aaa
push
mov
enter
xchg
jle
ret
sub
pop
bound
bound
inc
pop
shr
or
sub
test
test
inc
scas
out
push
test
jnp
xor
popa
popa
sbb
xchg
xor
inc
popa
or
out
mov
movsl
insl
in
or
jo
lock
repnz
shlb
and
test
and
flds
icebp
mov
pop
shrl
sti
xchg
jno
jg
xchg
cwtl
xlat
xor
das
rorb
add
push
add
pop
add
push
lcall
sub
dec
in
xchg
push
les
shrb
mov
xor
lret
rolb
adc
ret
pop
imul
sub
push
push
test
sbb
mov
sahf
cmp
adc
push
jno
in
lret
or
mov
add
sub
inc
push
pop
push
mov
cmp
sahf
lds
movsl
sbb
mov
mov
js
scas
mov
xchg
pop
xor
and
loope
xchg
mov
cld
mov
lods
aad
sub
es
xchg
ss
mov
push
jno
pop
sahf
mov
cld
gs
pop
mov
jae
dec
dec
sub
sub
mov
loop
xchg
mov
xchg
jmp
jo
stc
jl
cmpsl
ss
mov
xor
test
scas
fadd
idivb
mov
xchg
test
or
lcall
fs
in
ss
cld
outsw
xor
stc
cmp
push
fisubs
jbe
adc
fcmovnbe
rclb
stos
pop
xor
std
mov
mov
test
rcrb
dec
inc
xor
xchg
jmp
pop
int
xor
xchg
dec
or
jnp
sbb
movsb
and
xchg
ss
or
jmp
and
aam
mov
ljmp
sub
and
sahf
les
pop
jno
loop
or
stos
mov
std
das
jp
arpl
cld
cmp
pushf
in
stc
jmp
push
adc
pop
add
and
push
cmp
sub
sbb
bound
cmovle
lret
adc
daa
mov
sbb
dec
add
inc
or
adc
mov
pop
in
rolb
addr16
or
shlb
jg
mov
iret
es
movsl
adc
or
ds
push
aaa
int3
stc
lods
xchg
icebp
mov
mov
sub
dec
push
and
and
mov
jnp
push
jge
jl
daa
xchg
ret
mov
addl
add
scas
ljmp
ds
ja
in
lcall
or
mov
and
test
sbb
cs
shr
and
lcall
test
arpl
aam
mov
repnz
cmp
outsb
mov
dec
js
xor
xor
lea
divl
cmp
adc
sub
add
jbe
lods
mov
add
sub
jb
scas
in
fstl
popf
adc
push
movsb
cmpsl
xchg
add
xchg
cltd
and
pop
enter
push
aam
fcmovu
int3
aad
adc
adc
or
push
mov
xchg
jbe
jnp
jne
mov
sbb
orb
and
enter
jo
jle
in
imul
push
xchg
stos
push
push
jecxz
stos
push
ret
dec
mov
cltd
out
cmp
and
adc
into
sarl
sbb
cmp
push
fwait
dec
jmp
pop
js
xchg
inc
sahf
mov
mov
cmc
jbe
int
pop
call
rcrb
call
sub
ss
das
xlat
std
add
enter
ret
push
test
fcmovnu
imul
lahf
adc
dec
js
bound
mov
mov
and
xchg
adc
sbb
pop
mov
push
inc
mov
jns
jecxz
ret
call
je
bound
dec
div
jne
sti
jne
and
or
sub
aam
sarl
jb
xor
std
ss
sbb
iret
sbb
lret
dec
dec
mov
jmp
jl
cmpsl
shrb
mov
int
lods
aam
cmpb
push
stc
and
inc
into
rcl
inc
xor
sub
lods
orl
xchg
ret
rol
sbb
mov
outsb
loop
sahf
add
push
leave
iret
out
push
mulb
mov
xchg
rcll
mov
push
lret
stos
dec
lds
ja
or
pop
sub
daa
das
nop
sbb
add
inc
mov
lods
push
inc
es
rorb
imul
sub
mov
and
out
mov
pop
out
cmpsb
xchg
pop
data16
stos
stos
insb
pushf
mov
arpl
cwtl
xchg
jns
fdivp
fwait
jge
imul
aad
mov
inc
xchg
push
jg
sub
sar
lss
mov
popf
xchg
push
pop
xor
or
inc
pop
sub
imul
pop
jl
add
ja
cld
xor
lock
fsubrl
pop
lds
sub
xor
add
or
int
cmc
and
gs
xor
fbstp
loop
or
bound
outsb
xor
add
clc
out
adc
test
jg
in
add
sub
outsl
xor
xchg
mov
push
sti
repz
jno
gs
push
mov
gs
xor
sub
sbb
idivb
pop
lret
mov
mov
movb
push
and
inc
xchg
cmp
test
dec
pusha
and
cld
adc
mov
popa
clc
mov
pop
adc
add
mov
add
out
shll
mov
pop
adc
or
insb
cmp
fidivs
loope
les
mov
maxps
sahf
sbb
addr16
loopne
pop
cmpsb
mov
bound
testb
cmp
xchg
add
xor
ds
jmp
stos
adc
dec
aaa
test
mov
inc
push
nop
int3
les
mov
or
jp
push
pop
popa
jnp
out
mov
jmp
pand
push
cmp
xlat
pop
push
ljmp
into
jae
cmp
repnz
int3
inc
leave
or
outsb
lret
lret
insb
pop
sahf
lahf
loop
cmc
gs
adc
rclb
into
shlb
dec
nop
sahf
or
lea
xor
call
xchg
jmp
cmp
mov
pusha
push
not
lret
or
add
or
sub
inc
xor
push
xchg
mov
cvtdq2ps
mov
adc
data16
mov
mov
mov
lret
jo
inc
xor
nop
cmp
adc
dec
cmpsl
lcall
fsubrl
scas
fimuls
lock
fdivrs
mov
inc
stc
dec
xchg
ljmp
fwait
or
xlat
lahf
add
in
sbb
jbe
lcall
aad
insl
test
es
insb
jmp
jo
jns
xchg
and
aaa
mov
and
pop
ret
push
xchg
pushf
imul
aam
cltd
inc
or
enter
or
sbb
mov
xchg
sarl
xor
mov
fbstp
lock
js
adc
pop
push
out
fwait
xchg
push
jns
adcb
fdivl
pop
out
ss
sub
cltd
lret
dec
push
pop
push
bound
ljmp
imul
adc
repz
shll
mov
xor
inc
pop
hlt
cld
pop
inc
cmp
out
insl
loopne
test
mov
lock
xchg
mov
mov
cmp
cmp
xchg
sbb
jns
cld
hlt
stc
aad
mov
mov
or
mov
mov
js
ss
out
repz
cld
movsb
jne
ss
mov
js
cmp
repnz
cli
pop
cmpsl
jae
push
jg
sbb
jo
test
loop
test
imul
test
sbb
xchg
jecxz
fstl
push
mov
call
or
sbbl
mov
shl
bound
push
loope
cwtl
xchg
jp
pop
or
ffreep
jne
xorb
lea
loope
jmp
idivl
mov
xor
fisttps
or
push
pop
icebp
jg
pop
fisubrl
cltd
insb
lret
xchg
es
mov
and
jge
in
cmpsb
insb
test
scas
jae
outsl
push
fsubrl
into
jb
add
jo
iret
mov
push
imul
mov
daa
push
xor
lret
int3
sub
mov
add
cld
cld
pusha
cmp
test
inc
pop
push
or
cmp
adc
sbb
pop
out
mov
dec
or
leave
sub
sbb
pop
dec
mov
push
stos
rcrb
lock
add
leave
or
inc
sub
pop
aas
rcrb
lea
dec
dec
push
hlt
addr16
push
shrb
icebp
cmc
add
fucomi
imull
jb
jmp
movsl
sub
arpl
in
inc
add
fstps
shl
xor
xor
jecxz
dec
and
add
cwtl
adc
jmp
inc
push
and
inc
sahf
sbb
push
dec
push
sub
scas
movsb
inc
mov
mov
sub
test
dec
xadd
push
xchg
lods
outsl
xchg
sbb
aam
not
call
scas
pop
cmc
gs
fcoml
mov
ds
jo
test
mov
dec
xchg
inc
js
inc
adc
int
aaa
add
jne
ret
sbb
clc
pop
adc
add
imul
ret
loopne
sbb
and
mov
notb
sub
cltd
popf
push
dec
jnp
scas
shr
in
inc
mov
adc
in
shl
sbb
push
push
sahf
ds
in
rcll
nop
mov
mov
or
aad
ss
xchg
nop
mov
add
adc
je
cmp
stos
mov
mov
sub
sbb
sbbb
fiadds
or
aad
dec
push
xchg
xor
pop
lret
mov
fs
mov
push
jns
lret
dec
popf
inc
jae
shl
sbb
inc
fildll
popf
mov
imul
adc
inc
lret
rcrb
push
dec
inc
out
mov
popf
cmpsl
fiadds
and
sub
mov
mov
pop
xchg
cs
lods
idivb
push
js
call
sbb
ficompl
add
push
inc
outsl
dec
push
push
insb
ret
xor
mov
mov
push
sbb
arpl
pushf
cmp
jae
jnp
mov
sbb
jb
iret
pop
push
subb
loope
gs
fdivrl
enter
mov
or
sub
mov
mov
aam
ljmp
sub
pop
dec
adc
loop
xchg
inc
xchg
gs
sbb
jl
adc
addb
idivl
aaa
cmp
pop
dec
rcl
cmp
roll
add
fwait
xor
ds
jbe
test
es
test
testl
movsl
or
mov
push
fidivrs
xlat
cmpsl
call
stos
aam
adc
inc
jl
orb
jg
adc
sub
jnp
icebp
test
jno
jno
push
fs
mov
fimull
cmpsb
mov
mov
cmpsl
test
mov
mov
cmp
sub
das
loopne
mov
xchg
cld
xchg
rol
pop
js
dec
push
ret
xchg
fistl
mov
mov
in
ja
or
imul
test
pop
sub
mov
adc
mov
es
inc
adc
and
frstor
sub
loopne
push
orl
lea
imul
or
mov
das
pop
imul
sahf
push
adc
mov
ljmp
pop
aad
shlb
dec
in
xchg
daa
sbb
mov
mov
in
scas
test
jnp
in
ficomps
and
repnz
jl
push
adc
push
ja
cli
dec
adc
lcall
add
jmp
sbb
xchg
lret
call
add
fsubs
dec
mov
hlt
loopne
arpl
addr16
call
stos
jnp
stc
dec
jnp
rcrb
add
out
push
mov
ret
inc
push
es
xor
dec
sbb
lods
fwait
dec
jns
dec
add
mov
lret
cwtl
cwtl
cmp
cmp
stc
and
push
push
lock
dec
popa
jecxz
mov
pop
mul
sbb
addl
xchg
ss
int3
xchg
movsl
xchg
stos
fdivrs
test
lcall
sub
mov
ror
push
ret
or
pop
leave
cs
jns
loope
icebp
mov
push
jno
fiadds
pusha
ljmp
inc
add
int
pop
aas
pop
mov
lock
inc
popf
dec
adc
inc
subl
addps
ret
mov
push
insl
adc
hlt
xchg
cwtl
out
std
insl
push
rol
ret
out
sbbb
fistpll
mov
scas
sbb
fnstsw
arpl
cmc
pop
sarl
jnp
test
jo
jecxz
xchg
leave
popf
cmpsl
jbe
ss
and
or
push
pop
inc
int
dec
sub
mov
test
sbb
or
hlt
jge
adc
shll
or
enter
sub
jo
movsl
addr16
add
dec
push
xchg
jbe
cmpb
iret
xor
lea
mov
fsubrs
dec
pusha
jmp
loop
imul
pop
push
movsb
out
sbb
lds
fcomps
das
push
outsl
mov
xor
xor
aad
lahf
adc
mov
inc
icebp
ljmp
mov
lods
lret
xchg
fistpl
out
push
in
xchg
cmpsl
dec
jno
jge
adc
adc
sub
stos
cmc
stos
xchg
dec
test
mov
adc
jle
add
fcomps
imul
jnp
in
adc
gs
xchg
rcll
mov
dec
test
xchg
jle
sub
jae
mull
je
cmc
cmp
inc
lock
xchg
xor
jnp
sbb
pop
popa
movsl
inc
stos
push
add
jb
pushf
mov
loopne
dec
test
pop
in
mov
jae
sbbl
xor
mov
push
test
btr
sbb
cmp
sbb
icebp
stc
ror
addl
pop
ja
jecxz
xlat
nop
jle
dec
and
push
test
jecxz
in
popf
jns
mov
xorb
inc
hlt
jp
pop
adc
pusha
add
cld
xchg
into
mov
enter
push
nop
xor
les
insb
push
outsb
and
mov
pop
out
leave
add
or
insb
xchg
out
mov
push
mov
ret
mov
out
jb
int
fdivrs
dec
cmp
jno
inc
add
inc
aaa
xlat
cltd
xor
mov
push
xchg
xchg
push
shrl
or
cmp
fsubr
xchg
fldcw
pop
add
adc
xor
fstpt
das
lret
adc
imul
nop
cli
addb
sbb
xor
sub
push
push
cmp
mov
xor
push
adc
or
stos
ret
ret
and
push
lock
xchg
ss
xchg
and
testb
ret
pop
cltd
inc
inc
popa
imul
in
inc
xchg
jmp
push
pusha
test
adc
jnp
push
mov
sbb
mov
lods
shlb
cmp
add
sbb
cmp
fldt
xor
add
sbb
inc
cmp
push
jecxz
xlat
cli
fildl
jl
mov
mov
test
push
pushf
jp
jg
popf
xor
data16
pop
sub
popa
aad
pop
push
xlat
pop
out
dec
rcrb
stos
fstp
cmp
in
hlt
add
cmp
cmp
dec
inc
xchg
jo
hlt
test
and
jae
testb
addr16
adc
aam
or
dec
push
mov
push
mov
or
fmul
cmp
out
mov
lods
pop
push
cs
inc
xor
clc
sbb
jle
aam
mov
or
jnp
aaa
push
fbstp
add
push
adc
add
xor
inc
xchg
pusha
stos
mov
lcall
lret
push
imul
lahf
xor
pop
pop
cmp
in
aad
jge
pusha
imul
orl
sub
mov
daa
and
sar
movsl
lods
mov
xchg
sbb
sub
lcall
lods
sub
mov
lcall
loopne
pop
jmp
sbb
std
in
dec
xchg
lock
popa
test
xchg
bnd
pushf
or
fsub
imul
push
jnp
repnz
pop
mov
jae
mov
imul
fsts
loopne
rolb
add
rclb
xorl
mov
daa
mov
sub
mov
out
lret
daa
cmp
js
dec
and
dec
sub
insl
cmp
pusha
jnp
test
jb
bound
xor
xchg
fisttps
jae
push
lods
mov
rcll
inc
pop
gs
jl
dec
adc
add
stos
repz
bound
nop
je
ja
mov
xchg
es
jecxz
cmpsl
daa
js
mov
mov
jae
add
lahf
dec
fucomp
xorl
ljmp
movsl
in
lcall
les
inc
lcall
loop
shrb
pop
xchg
int3
leave
pusha
loopne
push
sarb
ljmp
insl
jae
rcl
inc
data16
sub
mov
add
and
sub
inc
mov
or
and
roll
cmp
sbb
push
jno
cmc
dec
dec
les
repnz
cmc
or
pop
movsb
call
mov
aaa
stos
movsb
pop
pop
xchg
mov
pop
shlb
insb
pop
adc
push
jb,pt
jnp
cmp
movsb
dec
fdivl
jg
lods
popa
add
mov
sub
and
mov
popa
inc
les
lods
cltd
je
leave
sub
cli
xchg
insl
mov
cld
mov
insb
and
pop
mov
stos
mov
jns
aas
mov
scas
imul
and
add
xchg
or
repz
rcr
addr16
push
xchg
adc
in
insb
adc
pop
cmp
mov
enter
aad
sub
int3
daa
jb
mov
xor
enter
lahf
add
jo
xchg
aad
mov
cs
xchg
daa
shll
pop
xchg
mov
stos
xchg
andl
or
mov
in
mov
cmp
mov
dec
add
in
in
xchg
rcll
cmp
xchg
inc
lret
add
mov
fiaddl
inc
mov
sub
cs
or
orl
loopne
and
push
push
pop
mov
pop
mov
cmp
cmp
add
xor
xor
cmpl
cmpsb
repz
add
mov
int3
aas
push
mov
cltd
cltd
loop
pusha
inc
inc
cmp
out
lock
xchg
fldl
jl
jmp
sub
in
jp
sub
lret
out
xor
lock
mov
fcmovb
push
sub
cmp
push
xchg
dec
push
into
rolb
int
sub
hlt
push
xlat
pop
dec
pusha
mov
inc
lahf
pop
ret
inc
sub
cmpb
inc
hlt
add
and
jp
addr16
push
in
cmp
andl
jmp
fcoml
mov
mov
jbe
xor
mov
xor
dec
lods
aam
ret
xchg
pop
loope
aas
push
mov
in
je
pop
sub
adc
shr
jb
dec
cwtl
mov
mov
add
pop
fs
and
idivl
subb
test
movsl
add
push
pop
mov
mov
pop
pop
pushf
jg
int
decb
fmull
mov
and
sbb
mov
cmp
jg
shrb
repnz
ljmp
lock
scas
push
mov
shrb
popf
enter
mov
std
mov
add
push
popa
pop
out
jl
addr16
fistpl
fs
imul
pop
xchg
cmp
jle
fucomip
xchg
scas
mov
int3
xor
aam
or
repz
sub
dec
lahf
mov
fsubrs
bound
inc
daa
mov
sub
xchg
push
cli
dec
jmp
hlt
test
lea
movsl
pop
push
xlat
and
jbe
pushf
test
mov
test
loop
mov
call
add
orb
daa
add
inc
ja
scas
dec
nop
outsb
push
adcb
push
stos
loope
adc
lods
xchg
and
mov
ficompl
gs
outsb
popf
test
jle
or
insb
add
mov
data16
shrb
cmpsl
and
lock
jnp
xchg
in
bound
mov
call
lods
xchg
insl
jl
jmp
sub
cmpsl
fwait
sub
mov
ljmp
ss
dec
pusha
ror
out
adc
cmc
lret
jnp
movsb
outsb
into
jle
inc
lret
push
scas
dec
inc
add
xlat
fwait
cmp
data16
jecxz
xor
in
mov
sbb
jno
inc
cwtl
sub
fst
add
shll
cmpsb
fldenv
xchg
dec
shlb
push
and
jl
pop
xchg
lcall
cmpsl
adc
pushf
fsubs
xchg
pop
sub
pop
shl
dec
xchg
fsts
mov
adc
adc
rcll
sub
cld
mov
xchg
add
cmpsl
stc
and
xor
enter
ret
jbe
jmp
adc
xlat
shlb
roll
imull
popa
push
popa
add
cmp
add
ds
mov
mov
out
imul
out
pop
xchg
xchg
mov
dec
jmp
jns
mov
xor
roll
or
mov
mov
sbbl
and
push
aad
jg
fcomi
mov
xchg
jae
adcb
cld
dec
dec
xlat
les
fidivs
jae
cmp
enter
sub
and
pop
add
cmp
push
mov
subl
mov
cmp
mov
gs
inc
lea
pushf
insb
mov
mov
lret
add
aas
fimuls
xchg
cmpb
pop
adc
iret
jns
mov
sub
movsb
cmp
imul
jmp
fisttps
inc
jge
mov
bound
cmp
dec
mov
jp
lret
jle
lahf
sbb
mov
loop
imul
lds
push
pop
out
hlt
scas
or
xorb
lock
rorl
inc
call
sbb
push
jae
cmp
pop
dec
movsl
std
mov
insl
pop
cltd
push
test
jecxz
mov
push
imul
jecxz
add
test
mov
jg
inc
mov
lods
clc
xchg
mov
fimuls
sub
repz
aaa
mov
pop
pop
xor
addr16
pushf
add
lock
dec
out
loope
jl
leave
aam
mov
cmp
cmp
adc
stos
push
rcrl
mov
sub
icebp
stc
add
je
mov
jae
adc
aaa
scas
adc
popl
push
or
negb
mov
jno
cmp
mov
add
push
push
outsl
cmc
push
int3
sti
addr16
fwait
or
iret
fcmove
sub
push
mov
popf
mov
add
dec
pop
push
test
adcl
fsts
push
ret
mov
dec
cmp
bound
shlb
jecxz
sarb
pushf
and
outsb
or
xor
fcomip
ja
cmp
mov
test
lds
push
xor
sarl
mov
test
mov
and
pop
scas
sahf
hlt
xor
mov
sub
in
jecxz
popf
mov
mov
mov
test
pusha
ret
mov
cwtl
xchg
movsl
rcll
pop
les
sbb
add
xchg
and
lret
and
cmpsl
pop
inc
dec
movsb
xor
jp
adc
and
jae
int
xor
mov
dec
mul
in
out
mov
ljmp
out
pop
pop
frstor
pop
out
rcl
sub
add
pop
shr
stos
cli
fcoml
aas
repnz
addr16
sti
push
mov
cli
test
ljmp
xor
cmp
test
inc
dec
in
xchg
test
xchg
sahf
jmp
fistpll
test
daa
adc
in
add
es
push
inc
sub
and
or
andl
mov
daa
xchg
adcl
imul
push
call
or
lret
fwait
pop
or
mov
shl
dec
and
sbb
jb
and
lods
stos
cwtl
jmp
push
cmp
test
sbb
leave
push
push
ljmp
cmpsl
mull
nop
xchg
mov
sahf
xlat
cmp
fisttps
mov
pop
jae
sbb
push
shll
sub
push
in
add
adc
and
jbe
loopne
enter
and
je
xchg
negl
std
loop
mov
sbbl
arpl
inc
jle
jb
sub
pop
cmp
pushw
or
iret
stos
daa
ficomps
jnp
mov
push
outsb
push
pop
mov
add
popf
std
leave
mov
jae
push
adc
jnp
mov
or
shrl
xchg
adc
xchg
or
jle
dec
pop
rclb
mov
imul
aas
rcl
jb
xchg
push
mov
inc
sub
xor
lods
sbb
clc
in
xor
loope
inc
sub
cmp
sub
pop
int
and
in
popf
inc
sbb
dec
pop
int
dec
leave
inc
add
jno
mov
testb
push
or
cmp
inc
xchg
ret
test
out
mov
dec
int
outsb
mov
or
sub
xchg
mov
rcr
and
xlat
mov
xor
xor
sub
pop
imul
mov
lds
and
mov
or
dec
fwait
imul
add
and
mov
fwait
aad
push
xor
adc
mov
jp
imul
shrb
iret
pop
and
out
push
inc
or
jnp
test
dec
mov
push
gs
dec
mov
out
cwtl
xor
mov
repnz
arpl
popf
pop
dec
xchg
stos
push
cltd
test
inc
out
xchg
sub
rorl
lcall
cmp
cwtl
pop
push
sub
cmpsl
push
js
imul
xchg
icebp
lcall
jmp
movsl
pusha
fisubl
dec
jbe
mov
and
dec
shrl
cltd
push
jbe
aaa
mov
pop
cld
inc
popa
xor
imul
cltd
fs
dec
add
je
lret
jg
add
dec
xlat
pop
mov
mov
mov
pop
shlb
xchg
sbb
lds
sbb
rclb
ret
mov
leave
pop
test
push
scas
test
pop
jo
lods
test
out
jbe
add
popf
lahf
jo
cmpl
inc
jmp
mov
stos
and
or
xor
fisubrs
push
stos
push
mov
jge
out
mov
mov
jge
mov
inc
xlat
mov
dec
in
icebp
out
cltd
movsl
xchg
mov
xorb
in
sub
mov
daa
push
pop
int
xchg
lods
enter
xchg
or
push
fstl
cmpsl
dec
scas
mov
addr16
out
jbe
inc
rcl
daa
stos
call
popf
mov
ja
lds
pop
sahf
cltd
xchg
pop
push
jne
int
arpl
imul
pop
push
int
jge
push
mov
mov
jl
into
mov
scas
out
and
sub
pushf
xchg
cmp
mov
out
sub
ss
popa
into
mov
dec
adc
stos
mov
adcl
pop
mov
xchg
push
shrb
fdivr
sbb
pop
inc
inc
outsl
or
add
sahf
xor
jle
jnp
pop
repz
in
stos
jmp
out
lret
push
notl
cltd
adc
cmp
adc
jecxz
inc
adc
cs
push
xchg
lods
call
ret
lods
cs
xor
add
mov
iret
negl
mov
mov
mov
mov
dec
dec
add
push
sub
outsl
imul
cwtl
add
add
mov
lea
or
fmull
outsl
gs
mov
add
movsl
xchg
repz
ds
jmp
push
and
xchg
jbe
adc
pop
mov
cli
aad
mov
ljmp
je
pop
sbb
cmc
hlt
cld
push
cmp
xor
inc
sbbb
and
fwait
jmp
or
jae
or
nop
imul
push
sbb
ret
mov
mov
and
or
or
xor
ds
sub
das
js
out
shrl
out
push
loop
mov
call
xchg
jl
ljmp
push
jae
cmp
shlb
mov
xor
xchg
mov
dec
xor
xor
mov
cmp
mov
mov
jle
and
cltd
xchg
cs
aad
push
jge
xlat
in
and
nop
xchg
add
mov
dec
push
test
xor
out
xor
sub
adc
mov
add
mov
loopne
lret
xchg
mov
add
mov
clc
out
inc
mov
outsl
inc
push
jae
mov
mov
add
scas
rcr
arpl
leave
xchg
cltd
popf
add
mov
icebp
push
aas
pop
adc
ds
mov
ljmp
fcoms
cmc
mov
gs
jmp
stos
data16
cli
insb
test
mov
test
mov
inc
jo
and
in
pop
push
into
out
daa
or
jecxz
repz
out
mov
xchg
loop
xchg
dec
ljmp
mov
stos
sbb
adc
cmpb
popa
fidivs
cli
mov
pushf
pop
repnz
inc
pusha
fistps
int3
xchg
xlat
lret
inc
push
mov
push
mov
inc
sbb
test
loop
inc
xchg
es
push
push
movsb
xchg
fmul
add
lahf
mov
fstpl
pop
aaa
gs
loope
imul
sub
arpl
insb
pop
push
or
or
test
stos
fucomi
push
shll
mov
mov
aam
std
ljmp
and
adcb
mov
xlat
pop
pop
jae
push
fiadds
xrelease
call
roll
jp
jb
adc
fbstp
mov
and
xchg
mov
mov
aad
mov
and
xor
add
test
add
mov
push
dec
push
das
idivb
and
mov
add
orl
jmp
pop
bndstx
mov
lds
sub
sub
filds
sub
sub
stos
scas
js
sbb
sar
cmp
pop
pop
mov
movsb
ljmp
in
mov
adc
mov
ss
outsl
out
mov
or
push
movb
lcall
push
ret
fidivl
jnp
sub
add
adc
mov
cltd
jns
je
dec
inc
fdivs
popf
stos
rcl
sub
addl
notl
jmp
stos
sub
lods
and
xchg
loope
popf
adc
std
std
lcall
loopne
push
clc
pop
leave
in
sbb
add
mov
sbb
loop
xchg
test
cmp
sbbb
add
enter
or
mov
mov
pop
stos
test
leave
cli
push
mov
mulb
inc
push
push
scas
cld
push
mov
xchg
jnp
xor
pop
mov
inc
inc
and
aad
pop
sbb
jg
sub
dec
rcrb
mov
mov
fld
inc
add
sub
out
sbb
and
es
js
mov
dec
jae
dec
add
push
sbb
jns
fimuls
loop
dec
adcb
mov
mov
aas
xchg
lcall
xchg
and
movsl
push
ret
scas
popf
jl
push
ret
jle
sub
mulb
cmp
out
in
sti
fsubl
aaa
cmp
into
je
mov
in
les
or
pop
xchg
cwtl
js
jp
es
es
mov
xchg
sub
mov
mov
mov
stc
adc
sarb
mov
xchg
inc
test
rolb
movsb
jae
sub
sbb
mov
pop
rol
mov
mov
push
into
repz
mov
push
imul
mov
mov
add
shr
pop
imul
aaa
test
imul
testl
cmp
popa
ret
mov
in
shrb
fidivs
imul
repz
pop
xor
dec
outsb
push
mov
xor
sbb
pop
into
pop
sti
cltd
call
cmp
mov
insl
or
adc
add
stos
pop
stos
mov
insb
addr16
dec
jmp
cmp
divl
cwtl
jns
fidivrs
fdivrl
dec
mov
outsl
cmpsb
in
dec
sti
jmp
and
push
fisubrs
loope
xchg
mov
sbb
out
test
je
imul
imul
and
movsb
pop
cmp
or
data16
cmpsl
icebp
xlat
mov
jmp
std
jecxz
cmp
mov
out
cltd
dec
loop
jns
sub
fldcw
mov
popa
adc
cmp
hlt
lret
testb
loope
cmpsl
cmc
aad
popf
cmc
inc
sub
lcall
push
push
call
rorl
test
inc
mov
stos
es
pop
mov
lods
mov
and
lahf
shll
sub
jge
je
inc
and
push
xchg
cmp
push
loope
mov
test
roll
sub
lea
cli
frstor
mov
nop
insl
adc
xor
pop
andb
dec
push
jecxz
mov
daa
bound
addr16
sbb
dec
test
dec
dec
dec
jmp
lods
jno
push
insl
movsb
idiv
mov
mov
test
out
sub
repnz
sub
xchg
push
sbb
aas
insb
loope
xchg
hlt
imul
lds
pop
movsb
or
icebp
and
add
iret
in
movsl
inc
sbb
inc
jnp
enter
adc
mov
out
loop
mov
add
in
xchg
imul
mov
mov
add
rorl
xchg
ja
jne
stc
mov
dec
xchg
idiv
sbb
pusha
call
pusha
add
mov
loopne
cmp
or
and
mov
data16
es
dec
jo
iret
out
adc
pop
sbb
leave
jnp
stc
scas
jmp
sbb
cmp
popa
int
fwait
scas
cmp
sub
dec
pop
xor
call
das
push
int
lods
and
sbb
sbb
or
xchg
mov
clc
cmp
cld
sti
push
inc
add
and
mov
cmpsb
jl
es
cmp
or
das
jecxz
xor
popf
xorl
dec
pusha
inc
pop
pop
aam
notb
jb
sbb
dec
movsb
add
test
jne
or
adc
jb
sub
cmp
add
xlat
ret
rolb
aam
jbe
cmc
lret
loope
test
xrelease
push
dec
out
sbb
mov
cld
out
pop
mov
insl
lcall
dec
jnp
fwait
sub
testb
sbb
dec
xlat
shll
imul
lea
xchg
out
push
cmp
inc
xchg
bound
xchg
jbe
add
push
pop
addr16
mov
lea
addr16
mov
xor
pop
cmpsl
mov
in
xor
xchg
aad
popf
mov
inc
push
mov
or
jnp
cmp
xchg
cmp
inc
push
jmp
rolb
mov
jl
enter
lahf
cltd
xor
cltd
jae
pop
inc
push
or
icebp
mov
int3
out
mov
push
inc
jns
fidivl
fstpt
mov
fnstcw
pop
es
mov
mov
and
pushf
cmp
test
adc
push
mov
popa
inc
xchg
repz
jge
push
mov
sbb
ds
add
enter
jge
jbe
fcompl
pop
cmpsl
fnstcw
ret
sbb
cmp
and
inc
pop
mov
pop
lret
sub
xor
cwtl
mov
loope
ljmp
fstps
lahf
lret
cmp
and
fcomps
orb
arpl
xor
repnz
jmp
mov
sub
mov
stc
xor
arpl
shlb
or
jp
data16
loop
mov
gs
test
cwtl
movsl
gs
adc
rcrb
cmp
cmpb
jg
adc
mov
int
test
int
jae
jle
fwait
ret
inc
xor
xchg
push
jg
icebp
mov
pop
jns
dec
add
fldcw
mov
mov
shrb
dec
es
push
mov
xchg
dec
outsl
ret
std
aad
sbb
imul
push
sarl
xor
icebp
test
in
fisubrl
mov
jns
popf
inc
sbb
jmp
jmp
jb
or
fisttps
add
sub
test
dec
sub
outsl
adc
mov
mov
lods
sbb
in
lods
mov
jnp
dec
or
push
sub
daa
cmpsl
gs
adc
push
xchg
aas
popa
jg
in
sub
iret
adc
xchg
mov
aad
sahf
mov
lret
mov
fdiv
sbb
mov
xlat
test
test
inc
lret
insl
jge
int
cmp
pop
pop
dec
adc
popf
movsl
jnp
pop
dec
je
out
data16
sbb
xor
pop
mov
cmp
adc
xchg
mov
bound
mov
std
leave
sbb
xchg
or
lret
jae
int3
sub
decb
inc
xor
xchg
cmc
pop
push
sbb
loop,pt
inc
and
in
jl
lods
jbe
or
rol
out
mov
jp
stos
and
cmp
scas
lods
xchg
xor
outsb
call
sbb
int3
outsl
ljmp
loop
jle
dec
sahf
xor
test
arpl
popaw
mov
cmpb
pop
pop
sbb
loopne
stos
into
pop
pop
jl
cmpb
leave
mov
and
mov
xchg
aam
mov
clc
push
cmp
inc
sbb
dec
add
iret
mov
loope
enter
fmul
popf
xchg
and
sbb
cld
bound
rclb
sti
subl
sbb
pop
jne
or
shl
add
in
jbe
sub
stos
addr16
and
loope
mov
jnp
int
pusha
add
push
das
rcl
push
sbb
insb
subl
dec
mov
lret
lcall
jmp
je
jbe
out
call
adc
rclb
out
xor
jg
lods
pop
insl
lock
repz
je
jp
jp
dec
add
cltd
pop
lret
add
cmp
mov
inc
jo
add
push
loopne
dec
mov
divl
and
test
mov
add
jae
js
stos
fcomps
dec
dec
clc
test
and
push
lods
out
mov
dec
rcrb
outsb
clc
add
dec
std
adc
aaa
push
push
cmp
jp
test
stc
push
bound
sahf
out
mov
xchg
xchg
int
cltd
sub
dec
adc
mov
mov
dec
sub
dec
pusha
iret
and
sahf
jmp
sub
cmp
lock
mov
icebp
pop
xor
shr
lds
xchg
xor
lcall
pop
fucomi
mov
mov
pop
sub
jo,pn
sub
pop
jo
jne
push
das
push
push
mov
repz
jl
aas
or
in
inc
ret
jne
movsb
mov
add
out
pop
xchg
xor
enter
mov
push
sub
cltd
mov
mov
mov
lret
call
call
loope
loop
sub
shlb
push
mov
sarb
inc
adc
scas
mov
cmp
jns
scas
mov
out
popa
aaa
das
jl
ds
inc
mov
cmc
out
pop
dec
adc
add
mov
pop
lock
pop
cld
push
fists
lds
negl
sbb
add
call
add
icebp
call
data16
jno
or
jae
push
mov
lahf
xchg
dec
sahf
jbe
cmp
icebp
jb
test
mov
pusha
in
orb
rorb
stos
cmpsl
outsb
pop
xlat
mov
test
mov
inc
test
dec
xor
add
iret
jg
sub
dec
lret
inc
mov
movb
je
das
xchg
mov
inc
ds
mov
out
sub
out
fiadds
test
jbe
cmp
into
mov
cmpl
push
push
into
and
pop
pop
xor
sti
and
in
mov
mov
push
xchg
enter
xchg
xlat
shrl
xor
pop
mov
inc
scas
add
mov
mov
mov
xor
inc
xchg
cmpsl
xor
push
ret
sub
and
aas
xor
inc
adc
cmpsb
call
popfw
jbe
and
push
push
imul
sub
cmp
or
js
test
push
cmp
mov
pop
push
lcall
mov
fidivl
push
das
js
outsb
xchg
icebp
mov
and
mov
jmp
sbb
and
xor
repz
inc
adcl
aaa
push
inc
das
sbb
mov
sbb
sbb
stos
mov
mov
in
fisttps
add
out
mov
rcrl
in
cs
sahf
sub
adc
mov
arpl
jle
add
sbb
xchg
cld
fldl
inc
push
adc
fwait
movsb
dec
and
jno
stc
mov
inc
imul
mov
cs
les
mov
daa
psllw
pushf
in
aam
shrl
out
mov
adc
loope
out
lock
sub
push
clc
mov
cmp
iret
dec
lcall
subb
pop
xor
cs
xchg
shll
lea
mov
jno
movsl
test
jno
aam
test
dec
es
jo
sub
sbb
shlb
fldl
xor
lret
dec
mov
jge
test
cmp
xor
cmp
int
dec
mov
lds
ret
and
dec
je
cld
add
outsl
je
dec
lods
jg
mov
or
pushf
imul
std
enter
push
sarb
mov
inc
cmp
adc
aad
fsub
jae
xchg
into
or
fsubr
movntq
out
and
insb
loop
shll
adc
sbb
mov
dec
adc
sub
adcb
dec
adc
xlat
shr
mov
scas
jmp
sbbb
xchg
add
dec
sub
sbb
aaa
dec
xchg
mov
ret
mov
dec
pop
add
mov
shll
inc
jl,pn
sub
mov
cmp
shrb
pushf
repz
int3
sbb
loop
imul
sub
test
pop
cmp
sbb
cmp
rcl
adc
imul
push
dec
pushf
aam
ss
je
xchg
jnp
mov
in
push
sub
movsb
idivb
data16
cwtl
daa
stos
les
lret
clc
adc
in
inc
and
cmp
mov
fcmovnbe
push
outsl
or
rcll
in
sbb
sbb
push
jae
leave
pop
jge
and
xchg
dec
gs
clc
sti
sbb
inc
xchg
rorl
lock
push
jae
xlat
imul
pop
jg
ret
stc
xchg
popf
pop
cmp
imul
addl
aas
cld
sub
mov
sbb
fisubl
cwtl
fwait
inc
dec
icebp
or
int
pop
cmp
out
popa
icebp
inc
std
add
inc
jp
scas
data16
mov
in
and
aas
into
xor
or
inc
dec
cmp
cmp
ficoms
jl
push
pop
push
imul
push
dec
mov
jb
mov
sub
sbb
scas
push
push
inc
gs
cmc
cmp
gs
fwait
repz
xchg
fs
mov
call
mov
adc
fwait
xlat
add
ret
adc
mov
cmpsl
mov
scas
xor
dec
mov
and
sbb
outsl
jmp
clc
jmp
daa
adc
nop
testb
test
les
mov
mov
faddl
jae
inc
inc
fists
subb
add
movsl
rorb
pop
int
sub
mov
push
or
xor
xchg
push
in
jnp
sbb
lea
jle
and
jge
sub
push
sbb
cmpl
inc
fnstsw
push
ja
cmp
mov
cmpsb
and
sbb
mov
inc
xor
rorb
das
test
jb
cmp
jp
xorb
and
loope
inc
scas
iret
or
cmp
ss
sbb
outsb
lret
into
scas
inc
mov
inc
pop
and
or
xor
fstpl
cmp
out
shr
cmp
pop
xchg
inc
stc
ret
xchg
mov
fsubs
test
repz
sbb
popa
xor
mov
lcall
mov
ss
idiv
mov
xor
fdiv
jg
ret
mov
int
xor
frstor
aam
fwait
mov
fmull
mov
dec
enter
push
bound
sub
fwait
inc
adc
push
or
jl
xchg
sub
fwait
cmp
roll
xchg
loope
out
mov
xchg
outsl
dec
nop
gs
out
ret
sbb
pushf
or
fisubs
pop
cmp
leave
xchg
mov
out
aas
lcall
or
jne
enter
mov
mov
mov
cli
fsubl
adcl
fs
mov
or
xor
push
xchg
mov
xchg
js
xchg
inc
mov
inc
and
std
arpl
xor
sahf
mov
jno
adc
xchg
repnz
mov
dec
out
lahf
shll
jge
inc
hlt
inc
jno
jle
loope
stc
sub
cltd
pushl
sub
ss
jp
sti
pop
sub
shrb
sahf
sub
int
mov
mov
xor
ret
cmp
shlb
add
aam
cmp
sub
mov
sarb
fcoml
mov
ret
jle
mov
popa
daa
adcl
mov
pop
lfs
inc
fdivrs
and
inc
fadds
stos
movsl
adc
xchg
negl
add
push
into
or
pop
out
jne
addb
pop
mov
in
sbb
mov
jl
mov
cld
outsl
test
push
pop
pushf
sbb
fisttpl
jbe
jo
pusha
and
mov
push
pop
or
cmpsb
dec
cltd
inc
pop
insl
mov
aas
in
adc
sahf
repz
mov
xchg
call
sahf
rcr
mov
int
lods
in
outsl
jge
mov
mov
stc
xchg
dec
dec
cmpb
dec
je
mov
pop
pop
arpl
pusha
fsubrl
cmp
out
popa
imul
inc
xchg
cmp
shl
outsl
loop
pop
xchg
insb
cld
cmp
leave
lods
push
xchg
hlt
pop
xor
movsb
test
mov
push
ljmp
push
fcmove
pop
fcomps
sub
inc
dec
xchg
nop
mov
rcr
cmp
popa
dec
int3
jbe
inc
test
in
cwtl
push
test
out
xor
lret
add
mov
sub
sahf
bound
shlb
xorb
out
adc
nop
jo
pop
add
jne
mov
adc
movsl
lods
xchg
test
sub
xchg
std
hlt
or
sbb
lea
cli
pop
lahf
xchg
jmp
inc
lods
jne
cmpsb
jns
pop
stos
sbb
mov
or
sbb
sub
mov
popf
bound
aas
mov
or
xor
xor
xor
xor
sbb
jnp
push
dec
push
movsl
hlt
mov
add
mov
outsb
popa
jp
pop
mov
lret
cmp
into
cmp
stc
cmp
xchg
mov
cmc
and
scas
push
daa
sti
int3
sbb
mov
and
push
js
jb
and
dec
pop
inc
hlt
imul
in
xchg
pop
sbb
in
dec
mov
xchg
sub
andb
popf
adcb
sub
adcl
aas
addb
in
jle
dec
iret
out
negl
push
or
pusha
sbb
fimuls
cmp
sub
dec
sbb
pop
fisttpl
jp
mov
and
dec
or
inc
sub
xor
pop
add
add
sub
out
pop
mov
iret
movsb
sub
in
repz
fcompl
pop
ret
mov
xor
loope
xchg
jne
dec
add
gs
aam
inc
sub
xlat
and
cmc
rcr
push
lahf
or
fwait
lret
and
sub
test
fidivl
xor
mov
mov
test
popf
dec
hlt
clc
sub
jg
cwtl
rclb
xchg
xor
ja
out
iret
add
mov
js
and
aad
dec
jecxz
sub
cmc
das
fs
lea
and
jo,pt
and
fwait
cmc
mov
popa
cmpsl
enter
ret
pop
adc
inc
jp
add
es
xchg
imul
cmp
add
test
mov
test
mov
movd
repnz
ret
mov
sbb
imul
mov
cmp
das
jb
into
roll
push
sub
out
pop
les
xchg
jno
dec
loop
fisubrl
popa
pushf
pop
pop
adc
dec
ret
jp
pop
jmp
fidivs
xchg
loop
xchg
inc
sarb
out
cmpsl
cmp
adc
or
fistl
jae
out
lods
cmpsb
dec
pusha
push
sbb
push
test
cmp
rcll
adc
clc
cwtl
in
lcall
iret
pop
xor
xchg
add
adc
lcall
pop
sbb
subb
addb
cmp
push
ja
push
lock
add
add
mov
out
xchg
and
out
mov
imul
or
mov
ljmp
std
aad
sbb
lea
imul
adc
aaa
mov
ss
pop
std
xor
les
mov
test
fisttpll
loop
out
ror
push
loopne
dec
daa
sahf
sbb
or
sbb
jno
add
xchg
and
jle
and
sbb
and
mov
les
xor
xchg
shll
pop
add
iret
cmpsl
pushf
ja
dec
dec
sub
int3
cmp
mov
scas
push
xor
xchg
push
sbbl
ljmp
fidivrs
movsb
mov
lcall
xchg
dec
imul
xchg
movsb
cmpsl
sub
enter
mov
and
aas
pushl
mov
arpl
popf
xchg
push
popf
aaa
push
sub
and
test
mov
stos
push
faddl
add
pop
push
push
stos
call
subb
fs
or
aaa
lahf
das
dec
and
rclb
dec
lock
in
idivl
add
push
dec
push
data16
lret
adc
add
cmc
int
sbb
jbe
xor
cmp
idivb
lods
or
adc
inc
test
add
lcall
es
std
mov
bound
or
int
adc
pop
pop
push
loop
jbe
rcl
fdivl
push
pop
repnz
ja
xchg
out
dec
out
cmpsl
cmp
test
fcoml
cmp
xchg
in
pop
in
gs
and
cmp
mov
in
cltd
inc
push
push
mov
adc
and
roll
xchg
inc
xor
pop
outsl
xchg
xchg
sbb
dec
data16
xchg
arpl
jb
cs
push
ret
scas
push
sub
cmp
mov
test
mov
sub
cmp
popf
cld
fnstenv
aaa
or
arpl
outsl
mov
cmp
mov
mov
das
push
popa
pop
and
adc
insl
cli
shl
mov
pop
shll
mov
ror
test
in
xchg
in
fsubl
cmp
shll
jg
xchg
push
in
mov
add
xor
push
ja
icebp
and
fbstp
sbbb
arpl
mov
fmuls
roll
sub
push
das
sti
das
xchg
arpl
cmp
lcall
fdecstp
inc
xor
or
jae
mov
cmpsb
fsts
inc
sub
hlt
aam
mov
fcompl
divl
push
add
scas
cmpsb
das
push
and
xor
xor
sbb
stc
xchg
mov
sbb
mov
js
mov
rcll
stos
cmp
cmp
jo
cmpsb
outsb
push
or
ja
and
mov
cmp
xchg
and
sbbb
cmp
lock
scas
in
xchg
sahf
push
rorb
flds
push
and
inc
aas
sar
and
mov
add
add
pop
pop
pusha
insb
sub
scas
push
and
inc
popf
add
repnz
in
stc
dec
test
loop
mov
lods
mov
imul
mov
pushf
cmp
aam
mov
je
in
test
cmp
pop
adc
sub
push
shlw
imul
mov
inc
mov
xchg
sub
or
in
or
sub
xlat
mov
mov
pop
int
imul
call
mov
fmull
jae
xchg
mov
mov
aam
rol
push
test
gs
push
jle
mov
lods
push
and
popa
fdivr
mov
sub
nop
dec
mov
lahf
pushf
out
add
repz
loopne
mov
push
enter
dec
cld
roll
xor
loopne
test
in
cmp
test
jl
int
arpl
scas
lret
leave
sar
xchg
repz
loop
inc
shll
cmp
inc
jecxz
jge
int
movsb
shl
lret
mov
push
mov
push
les
sahf
or
sbb
leave
bound
lahf
fcomp
and
sbb
and
xor
mov
inc
repz
inc
push
dec
adc
and
mov
call
mov
xchg
mov
inc
dec
or
inc
xor
cmp
jns
or
mov
addb
add
sub
insb
psubsw
dec
or
in
mov
and
xor
push
sub
mov
xchg
xor
out
hlt
pusha
dec
idivl
lret
repz
pop
inc
jo
fwait
dec
push
rcrl
mov
outsl
popf
add
push
mov
jno
push
and
push
dec
mov
mov
out
mov
dec
ljmp
mov
cltd
jle
push
inc
dec
dec
mov
cmpsb
mov
pop
dec
jae
call
sub
pop
bound
mov
cmpsb
sbb
lds
add
jmp
add
cmp
mov
pop
lods
jno
dec
mov
cmp
bndldx
test
hlt
jecxz
cmp
or
mov
adc
mov
inc
sub
dec
ftst
cmp
and
xor
mov
xchg
out
pop
sub
fisttpll
aaa
enter
push
jp
sub
xchg
hlt
test
sbb
xor
jge
mov
push
loopne
mov
dec
ret
cltd
push
pushf
add
adc
jns
loope
pop
sbb
arpl
and
jo
int
add
mov
pop
addl
adc
shll
inc
xor
mov
sbb
out
push
shrb
iret
inc
sbb
fs
and
push
pop
and
lahf
xchg
dec
int
jns
ficomps
xchg
sbb
ds
repz
pop
stos
andb
cmp
dec
xchg
cltd
lahf
iret
in
pop
or
cld
dec
dec
pmuludq
in
mov
mov
mov
push
push
xchg
cltd
jge
xchg
mov
xchg
scas
or
cltd
adcl
sbb
cwtl
gs
pop
cmp
push
ret
cmpsb
sbb
sar
cwtl
shlb
xor
fisubrs
inc
loopne
fdiv
mov
scas
fdivp
pinsrw
repnz
xchg
mov
push
outsl
lock
outsb
pop
dec
sub
fimuls
loopne
xor
test
arpl
adc
inc
mov
add
inc
push
push
je
sbb
lret
and
mov
sti
bound
xchg
jg
push
lret
mov
int3
mov
fistl
or
js
mov
sbb
mov
cld
jl
xchg
out
xchg
add
mov
cwtl
dec
adc
mov
jno
bound
dec
mov
bound
jge
sti
sbb
lcall
mov
fxch
cmp
orb
aas
filds
daa
fisttpl
mov
sbb
mov
pop
sti
cmp
jb
leave
mov
in
sub
and
pop
mov
or
iret
or
pop
fidivrl
aas
mov
jb
movsb
insl
bound
xor
outsl
inc
mov
fistpl
iret
xlat
mov
or
mov
jl
in
push
addb
push
push
cmp
add
push
or
popf
in
js
popf
mov
sti
adcl
cmp
shlb
or
shrl
push
jge
dec
cltd
xor
inc
insl
popa
clc
inc
imul
xchg
bound
dec
jnp
xchg
stc
inc
add
xchg
pushf
ss
popf
push
mov
pop
push
in
mov
jnp
mov
xchg
xorb
push
jp
das
sub
out
imul
xchg
pop
fistpll
mov
sub
stc
insl
sub
incl
dec
mov
push
dec
fsubl
xchg
adc
cmp
pop
xchg
mov
inc
pop
imul
es
pop
incb
mov
and
mov
jle
outsb
roll
popa
sub
lret
mov
xor
out
enter
clc
ljmp
enter
fldt
add
outsb
sub
outsb
pop
inc
jae
jno
imul
mov
pushf
adc
push
dec
mov
adc
hlt
out
inc
mov
repnz
lret
mov
xor
aas
mov
idivb
hlt
mov
dec
or
push
jae
dec
mov
int
movl
sub
push
mov
jecxz
and
sbb
cld
cli
xchg
test
pop
mov
test
imul
js
inc
movsl
mov
xor
push
lret
push
inc
mov
pop
mov
inc
cmp
popf
pop
pop
sbb
lods
cmpsb
out
lds
mov
mov
mov
jle
xor
lcall
popf
test
lock
rcrl
inc
imul
fmull
hlt
cmc
bound
les
adc
movsl
add
lds
iret
sbb
fbld
mov
pop
dec
push
mov
adc
outsl
push
stc
insb
aas
push
ret
adc
ret
les
jmp
dec
jae
mov
dec
push
loop
rolb
and
js
jmp
mov
data16
jle
call
ds
cwtl
test
out
mulb
or
sub
mov
cmc
sub
sbb
xchg
shrb
push
cmpsb
stos
test
pop
sti
or
ret
mov
nop
sbb
mov
movsb
mov
les
dec
ret
pop
sub
jb
cmp
mov
ljmp
idivb
fisttpl
xchg
lret
inc
cmpsl
cmp
stos
xor
jp
cmp
outsb
test
dec
jg
mov
loop
int
ss
scas
je
mov
xchg
cmc
daa
push
xchg
push
mov
lock
sti
push
xor
push
loope
mov
push
sbb
into
xor
cvttps2pi
dec
xchg
mov
mov
out
test
xchg
cmp
adc
cld
fs
cmpsl
inc
adc
repnz
pop
lcall
inc
fistl
out
inc
push
push
sub
push
fldenv
stos
imul
stc
adc
repz
dec
push
cmp
cmpsl
shrb
test
test
ret
test
mov
das
mov
jg
adc
movsb
fsubs
mov
mov
pushf
sub
and
dec
gs
push
outsb
push
inc
call
stc
imul
add
mov
xchg
add
adc
iret
fs
mov
ds
jmp
data16
jle
scas
loope
push
or
into
sub
je
xchg
pop
cmp
add
and
xorl
aam
lea
aas
or
mov
std
xor
and
in
xor
movsb
ds
jle
jmp
popf
ror
xchg
test
outsl
iret
int3
adc
fldt
cld
and
popa
dec
ljmp
in
or
fsubrl
lea
sbb
cmc
pop
lcall
je
pop
inc
xlat
jle
push
cmpsl
lcall
aam
lcall
insb
icebp
inc
mov
popa
std
dec
xchg
rcr
in
sbb
in
arpl
das
dec
sub
or
test
stos
das
cmpsb
add
daa
pop
sbb
and
inc
ss
push
xor
scas
gs
hlt
bound
inc
aad
loope
jae
stos
cmpsl
clc
test
sbb
and
lret
push
insb
insb
lcall
push
lahf
pop
ret
in
sbb
xchg
and
mov
stos
jns
pop
or
sub
sbb
cmp
ficomps
inc
das
popa
adc
repnz
adc
lret
int
test
int3
xchg
imul
push
jecxz
iret
aas
fdivrl
fdiv
ret
push
push
insb
inc
pop
int3
psubw
sbb
sti
inc
inc
add
push
aad
or
xor
jnp
or
fwait
pusha
xchg
pop
lods
cmp
or
aad
pop
mov
xchg
adc
push
cmp
mov
add
iret
inc
push
xor
adcb
int
int
std
outsb
fldenv
scas
mov
jecxz
mov
and
lds
test
pop
jb
jp
dec
loope
mov
push
inc
add
test
jne
mov
mov
mov
sub
dec
pop
adc
shlb
enter
ret
test
jl
dec
jbe
pop
dec
fisubs
cmp
movl
out
loop
lret
js
cs
pop
daa
pop
std
xchg
dec
dec
xchg
xchg
stos
push
add
inc
mov
mov
ds
or
cmc
push
jae
scas
inc
imul
jmp
dec
pop
in
lsl
push
daa
adc
cs
or
fmulp
inc
stc
adcl
nop/reserved
adc
hlt
cmpsb
data16
fmuls
outsb
out
xlat
or
scas
mov
addr16
aam
pop
iret
leave
jg
in
insb
push
dec
xchg
daa
fstl
test
xchg
jb
stos
push
lahf
fs
out
pushf
loopne
pop
or
lret
dec
aaa
ret
xchg
inc
sub
lds
cld
data16
jp
sub
cmp
dec
scas
xchg
mov
outsl
inc
into
icebp
mov
inc
aas
pop
pop
frstor
idiv
xchg
sar
mov
and
xchg
jb
mov
sub
pop
add
mov
cmp
mov
movsl
and
test
and
test
inc
adc
das
xchg
jne
add
lcall
cmpsb
cli
pop
int3
leave
imul
cwtl
iret
dec
push
test
leave
scas
cmp
xor
jns
mov
dec
mov
dec
sti
mov
push
popf
jne
xor
mov
xchg
insl
adc
test
or
adc
subb
adc
lods
in
pusha
lret
std
jg
mov
xor
jno
enter
aad
addr16
pushf
dec
mov
nop
push
rcrb
dec
pop
adc
and
out
in
fmuls
adc
cmp
or
leave
jbe
mulb
out
mov
add
cld
sbb
fwait
or
sbb
test
mov
push
int
std
push
or
mov
or
cmp
data16
add
add
movsb
cmp
cmp
adc
sub
xor
mov
dec
or
jbe
rcr
inc
jg
jge
adc
outsb
inc
inc
movl
scas
lahf
mov
pop
xchg
in
aam
inc
imul
stos
jb
pop
scas
out
dec
in
rorb
and
and
adc
mov
dec
loop
pop
xchg
loopew
mov
xlat
xchg
and
sahf
push
inc
xchg
add
lock
pop
lds
jp
lret
arpl
ja
xchg
std
dec
aaa
push
sbb
std
addr16
popa
imul
inc
enter
jecxz
cmp
mov
hlt
pushl
inc
stos
xor
arpl
push
dec
mov
test
aam
lods
ret
jmp
xor
push
das
gs
pop
insb
push
xor
cmp
lods
inc
or
mov
push
inc
rclb
push
sbb
jns
sub
push
and
jbe
and
es
or
jae
arpl
xor
adc
jg
push
andl
popf
out
mov
std
mov
dec
sbb
inc
xchg
test
cmp
ja
push
push
imul
outsl
adc
jb
xchg
data16
ret
dec
test
mov
xor
cwtl
into
into
pushf
jbe
adc
inc
push
push
mov
repnz
cwtl
mov
loope
jnp
dec
sub
stos
add
inc
aam
mov
stc
push
setns
fs
pusha
shrl
sbb
aam
inc
andl
fcompl
add
sbb
pop
cwtl
hlt
repnz
cmp
xchg
jg
cmpsl
xchg
test
mov
inc
pop
in
xchg
push
mov
sub
clc
in
xor
dec
jne
push
push
rcrl
jl
jns
stos
or
dec
push
cmp
sub
push
je
push
sbb
das
cli
xchg
cmp
mov
pop
mov
xchg
sub
outsb
or
add
pop
movlhps
add
lods
push
sub
dec
add
call
shrl
and
add
sti
xchg
pop
cltd
fwait
cmp
inc
xchg
loope
jae
inc
ljmp
stos
leave
pop
rolb
lods
stos
push
sahf
mov
dec
gs
popf
insb
pusha
stos
sub
push
and
dec
dec
int3
das
lds
stos
push
out
pop
aam
sbb
sub
fcmovne
pusha
popa
xchg
add
jl
sbb
sarb
int
and
push
sub
mov
in
jne
fldcw
pop
std
je
es
in
or
jnp
xchg
fs
addl
adc
icebp
lcall
nop
loope
cwtl
xlat
pop
push
fdivl
aas
mov
nop
rclb
loopne
loope
rcrb
mov
cmc
insb
add
inc
dec
cmc
inc
rcl
dec
aaa
dec
lcall
mov
inc
es
mov
cmp
pushf
repz
cltd
in
add
mov
xor
bound
rorb
loopw
and
jle
divb
mov
xor
out
out
pop
xchg
inc
mov
sarb
cmp
xor
cmp
mov
xor
scas
scas
js
cli
rorb
or
xchg
imul
jne
fimuls
jo
out
push
ret
aad
mov
mov
in
cmp
adc
cmp
hlt
test
test
xchg
in
mov
ds
mov
add
out
jo
push
repz
mov
jbe
inc
mov
add
fimuls
inc
in
call
dec
xchg
outsl
mov
mov
pushf
xchg
iret
dec
cmp
add
repz
push
pop
jae
add
dec
outsl
cmpsb
xchg
lds
push
cmp
div
xor
xchg
adc
adc
push
adc
fmull
and
adc
fldenv
add
out
push
mov
mov
xchg
mov
mov
or
out
je
loop
cmp
enter
push
xor
jns
sub
mov
shrl
stos
cmc
mov
dec
push
ss
sub
mov
mov
icebp
jo
iret
repz
sbb
out
test
fstp
and
pop
lock
mov
andb
mov
fisttps
lret
imul
dec
jb
jnp
adc
popa
inc
push
sub
xchg
dec
inc
aaa
loopne
xor
mov
xchg
fists
ljmp
out
outsb
out
fistps
in
xor
jmp
xchg
xchg
dec
dec
ret
ljmp
popf
mov
xor
mov
stos
jp
inc
jne
shl
pop
arpl
xor
lret
repz
loopne
mov
or
ds
aad
aam
js
shrl
cwtl
out
mov
ljmp
in
mov
ficompl
inc
pop
repz
jge
mov
lods
xor
inc
mov
cs
and
cwtl
jnp
dec
fisubl
movsl
lret
cld
sbb
popf
ljmp
xchg
lret
nop
push
bound
pop
xchg
inc
xchg
lds
shrl
in
adc
xchg
sbb
and
cwtl
jmp
jns
and
aaa
push
adc
jo
sub
xor
and
sar
dec
adc
cmpsb
sbb
inc
std
out
inc
mov
xchg
sub
or
mov
insb
mov
xchg
mov
enter
xlat
sub
push
cmp
add
jo
out
sub
notl
icebp
fnstsw
ljmp
pop
pop
push
mov
xchg
cld
xor
dec
or
cmp
lock
mov
cmp
out
outsl
icebp
push
mov
aad
jne
stos
pop
adc
and
imul
sub
push
push
adc
add
leave
sub
test
lahf
mov
lret
sbb
test
pop
xchg
lds
loop
dec
and
xor
fadds
cwtl
js
and
pop
ss
mov
push
mov
aas
sbb
movsb
push
cwtl
pop
adc
push
fsubrl
mov
push
dec
pop
mov
xor
xchg
out
rolb
cmp
jmp
mov
push
sbb
push
cmp
cmp
mov
hlt
or
bound
mov
in
sbb
in
cmp
data16
mov
ja
lea
sti
imul
stos
test
mov
ficompl
cld
out
mov
xor
cmc
bound
loopne
mov
clc
push
test
inc
shl
lods
rcll
add
rcll
xchg
jle
cmp
fs
pushw
cmpl
xchg
push
lcall
inc
lea
stc
adc
mov
addb
xlat
mov
mov
aad
mov
iret
push
xchg
ja
repz
scas
xchg
mov
outsb
or
pop
in
subl
sbb
pop
and
adc
sub
mov
xor
je
daa
push
cld
pop
jle
or
fwait
call
xchg
pop
push
sbb
sbb
int
sbb
mov
roll
jl
mov
mov
pop
inc
mov
stos
push
push
jnp
cmpl
xor
clc
or
adc
les
lods
adc
fldz
dec
pop
fsqrt
add
test
sub
out
lock
mulb
out
push
cwtl
or
xor
push
adc
add
pop
inc
xchg
test
fs
fbld
and
pop
add
push
mov
leave
cmp
adc
data16
inc
mov
cltd
add
ficoms
cmpsb
inc
add
cld
jg
pusha
stc
push
xor
mov
sahf
test
dec
aad
sub
loopne
xor
and
dec
stos
insl
cwtl
pop
testl
test
stos
sbb
int3
divl
fisubrl
imul
int3
clc
popa
cmpsb
test
xchg
popa
pusha
inc
aam
cmp
out
push
dec
or
mov
add
jmp
hlt
mov
sar
fcomps
out
subl
sbb
mov
or
stc
subl
mov
ljmp
adc
repz
adc
xor
inc
sbb
mov
sbb
xchg
cs
sub
cld
lahf
xchg
mov
mov
xchg
sbb
out
cmc
jae
sub
xor
sub
imul
push
inc
cli
jae
xor
out
xor
xchg
xor
cwtl
dec
inc
push
cmc
pop
push
mov
push
shll
jnp
jp
sub
repz
lahf
test
sub
xchg
mov
iret
adc
icebp
sbb
cmc
subl
push
and
inc
andb
dec
xor
inc
outsl
sbb
inc
decl
xor
inc
fs
bound
shll
in
test
pop
int
mov
xchg
push
fists
add
bound
arpl
popf
daa
or
mov
ret
in
iret
aad
xchg
cmp
adc
sub
push
ss
fistps
pushf
test
xlat
cli
ret
mov
jae
jl
xchg
mov
and
jmp
pop
mov
sub
cmpsl
outsl
inc
outsb
cwtl
mov
rcll
cmpsb
mov
in
outsb
or
inc
mov
rol
dec
rorl
lret
inc
jae
ret
mov
pop
push
iret
and
test
loope
mov
imul
aad
jne
inc
paddsb
decl
mov
add
mov
test
inc
shrl
stc
ljmp
jmp
pop
add
invd
xor
lods
inc
jne
inc
cmpsl
or
jl
out
btr
push
xchg
xor
xchg
outsl
xchg
inc
scas
pop
push
inc
int
mov
mov
push
xchg
stc
jp
js
adc
stos
push
movsb
sbb
push
sbb
sti
inc
lcall
push
cwtl
notl
adc
and
bound
sti
pop
mov
fisttps
icebp
cmp
addl
mov
call
xchg
push
fucomip
rcrl
outsl
stos
cmpsl
mov
fcompl
das
cmp
stos
lods
mov
nop
decl
fldl
dec
mov
push
wrmsr
dec
add
data16
push
sahf
push
mov
fstpt
inc
dec
xchg
and
cmpsl
xor
mov
aas
popa
stos
lret
adc
aaa
mov
outsl
mov
lock
movsb
mov
pop
es
inc
cli
insl
push
pop
mov
dec
pop
pop
cmc
pushf
jp
fdivrs
sbb
mov
test
cmp
mov
xchg
or
jecxz
aaa
or
fdivr
bound
ljmp
adc
out
inc
daa
or
in
adc
xchg
movsl
mov
jo
or
push
mov
cmp
xor
mov
sub
cli
adc
add
mov
in
out
pop
repnz
or
ficomps
add
pop
adc
mov
xor
mov
incb
xchg
cmp
mov
imul
loop
cmpsl
jno
pop
pushf
scas
xor
dec
adc
cmp
or
pushf
lock
dec
clc
aas
lods
adc
cli
mov
cltd
aad
cmpsl
sub
orl
movsb
jmp
in
cmp
push
xchg
imul
cli
or
popa
insb
and
mov
shl
jno
mov
push
dec
shlb
cmp
mov
ret
push
sub
cmp
add
mov
arpl
push
adcb
and
repz
push
pop
pop
mov
in
push
add
mov
mov
dec
popf
push
inc
jg
aam
add
mov
int
cmp
xchg
cmpsb
scas
add
je
jo
xchg
and
imul
mov
mov
push
out
aas
jle
dec
adc
jo
cmpl
loop
outsl
ljmp
or
push
ror
push
mov
add
in
sub
pusha
pushf
stos
js
jl
in
xor
enter
imul
and
sbb
ret
or
les
sbb
push
mov
sbb
pop
int3
cmp
and
cmp
enter
popf
popa
sbb
lock
cld
test
push
sub
sbb
or
xlat
sbb
add
mov
add
sbb
mov
enter
cmpsl
imul
cmp
mov
imul
fistpll
push
mov
pop
dec
push
inc
mov
sbb
jge
ljmp
aam
and
pop
cmp
hlt
mov
push
insl
hlt
aas
jg
add
sub
rclb
loopne
push
insl
pop
int3
out
fisttps
sbb
sarb
push
fpatan
lds
pop
mov
fcmove
adc
jo
mov
scas
sarb
inc
js
xorb
adc
sahf
pop
es
inc
lcall
push
loope
sbb
jp
ja
sbb
lcall
icebp
inc
adc
es
aaa
xchg
arpl
inc
loope
out
into
xchg
jmp
insb
jns
in
imul
cwtl
cmp
inc
or
loop
sub
mov
mov
cmp
jb
mov
cmp
repz
pop
fcoml
sbb
sub
sub
mov
fwait
in
or
movsl
in
xchg
mov
fcoml
fwait
push
and
movzwl
test
sub
lea
jae
sub
mov
nop
lcall
lahf
into
in
mov
es
dec
adc
cmp
or
adc
mov
and
movsb
and
inc
arpl
mov
add
adc
push
gs
sbbb
mov
add
push
cmp
popa
arpl
push
into
jno
fstps
movsb
aaa
xchg
xchg
ret
adc
fistpl
mov
xchg
jp
xor
outsl
lret
shlb
adc
jle
cmp
or
jae
enter
cmp
pop
adc
sbb
nop
push
fisttps
dec
imul
testb
aad
nop
dec
int3
addb
sahf
xchg
sub
sbbl
flds
mull
rcrl
loop
xchg
aad
cmp
mov
mov
push
xchg
mov
dec
xlat
ret
xor
leave
or
arpl
hlt
xorb
dec
push
imul
cwtl
sarb
push
lret
adc
ja
inc
push
sub
in
add
sbb
js
sbb
jnp
and
rol
cmp
cltd
xor
das
jge
rcll
xlat
mov
call
call
mov
dec
mov
popf
scas
popa
addl
das
add
ds
lcall
xchg
sbb
add
adc
or
push
push
out
shl
xchg
add
cmc
out
and
cmp
xchg
jnp
inc
mov
out
adc
adc
xchg
es
mov
inc
jg
cmp
adc
int3
in
sub
pop
xor
cmove
aaa
adc
aam
xchg
and
pop
lock
in
enter
outsl
test
mov
sub
xchg
pop
pop
pop
xchg
sbb
rorb
pop
comiss
in
loopne
mov
aaa
mov
mov
push
test
jnp
xchg
das
mov
sarb
mov
lock
das
jbe
and
arpl
test
pop
mov
test
stc
das
dec
out
sbbb
fcomps
push
sbb
mov
ds
cltd
pop
dec
mov
out
and
lds
push
clc
xchg
mov
sbb
addr16
pop
or
stc
add
movsb
rcrb
push
and
mov
fs
push
inc
mov
aas
jecxz
mov
pop
sub
mov
xlat
dec
popa
or
test
fistl
inc
sahf
xor
popa
test
mov
lods
int3
cmp
ficoml
insl
sahf
mov
arpl
aad
outsl
movsl
inc
xor
ret
cwtl
xchg
mov
push
arpl
out
loope
dec
int3
adc
jle
shrl
mov
push
int3
xor
mov
cmp
stos
cmc
ds
inc
decb
call
lods
scas
sbb
das
into
inc
lcall
jp
mov
add
mov
out
mov
push
mov
mov
ds
int3
enter
mov
loop
imul
sti
jae
push
lret
push
int
jmp
ds
sahf
orb
add
jb
xchg
cmp
stos
daa
shl
push
pop
int
cli
dec
and
or
ss
xor
test
mov
ror
mov
aad
addr16
mov
in
dec
lret
sbb
pushf
pop
es
js
inc
movsb
xchg
pop
mov
pop
out
jg
out
rcr
sbb
inc
jle
adc
mov
cmp
lret
lahf
pop
dec
and
das
aas
testl
sub
js
aad
js
loope
mov
adc
mov
enter
sub
sub
mov
xorl
leave
mov
sar
pushf
insb
xchg
sbb
popa
xor
outsl
pop
mov
inc
xchg
mov
lret
mov
in
sbb
mov
xchg
int
loop
sbb
xchg
pop
cmp
shr
or
in
adc
iret
mov
cli
sbb
cltd
mov
push
pop
loopne
or
jecxz
out
test
nop
enter
inc
inc
fucomi
inc
mov
lock
subl
pop
add
jae
mov
mov
or
cs
sub
stos
int
sbb
push
cld
mov
mov
or
and
push
je
pop
incl
int3
or
mov
jo
notl
sub
mov
xor
push
outsl
leave
cmp
xchg
mov
pop
scas
test
aaa
mov
add
inc
push
pop
stos
inc
loopne
push
int3
out
jle
cld
inc
stc
cmp
add
stos
arpl
int3
sub
enter
adc
pop
mov
and
sti
pop
mov
sub
adc
dec
push
rorb
pop
sarl
fwait
cwtl
pop
mov
push
adc
pop
aam
jge
lsl
movsl
pop
imul
pop
lcall
lods
cmp
xor
mov
jecxz
jbe
lret
dec
pusha
nop
std
jne
and
adc
pop
add
push
data16
insb
stc
insb
inc
fiaddl
sub
add
fiadds
mov
popa
test
mov
orl
or
pop
lcall
jns
push
dec
dec
xchg
push
repnz
mov
pop
stos
out
aad
xor
movsb
les
push
mov
dec
push
aam
mov
std
leave
push
push
orb
cbtw
cmp
mov
je
mov
pushf
fwait
xor
inc
jmp
mov
icebp
cltd
jnp
mov
out
mov
push
push
dec
jmp
sub
jbe
mov
in
add
dec
push
imul
call
jns
imul
jbe
cmovne
lock
cmpsl
xorl
push
popf
js
push
xor
nop
ds
andl
cltd
hlt
inc
mov
div
inc
sbb
lds
mov
lds
ss
xchg
lret
inc
data16
jg
arpl
imul
jns
and
loopne
sbb
dec
dec
xlat
lock
popa
out
lahf
test
cmp
inc
or
leave
stc
nop
test
js
and
insb
rcll
lock
cmpsb
jne
adcb
mov
into
jmp
adc
pop
sti
sbb
jmp
jecxz
mov
fdivl
scas
lahf
pop
dec
jnp
les
scas
cltd
cmc
inc
sahf
adc
and
xor
hlt
insl
nop
shrb
out
sub
push
addb
pop
clc
and
mov
movsb
xor
mov
or
jnp
lret
mov
test
and
fwait
test
fnsave
dec
mov
pop
movl
call
mov
and
mov
mov
les
push
pop
add
pop
pop
sbb
jo
fisttpll
mov
and
clc
push
insb
pop
dec
and
insl
std
jecxz
add
sbb
cmp
call
ret
pop
pop
lret
mov
inc
lea
scas
fnstenv
jp
popfw
jno
or
aas
je
jmp
sub
add
insl
mov
fdiv
mov
lahf
inc
repz
mov
roll
mov
and
fldenv
pusha
arpl
in
cs
in
xchg
mov
aas
pushf
pandn
dec
adc
sbb
lock
out
lahf
call
xchg
test
mov
adc
dec
mov
fidivrs
pop
add
and
lods
dec
pop
cmp
and
arpl
pop
shrl
das
inc
shll
pop
push
xchg
js
push
mov
xor
jnp
ret
icebp
in
cmpsb
in
jl
fwait
lods
loop
mov
adc
jo
jle
mov
stc
arpl
out
mov
xchg
icebp
add
inc
push
sahf
lods
jnp
jnp
xor
popf
mov
outsl
mov
dec
fadds
adc
jo
and
ljmp
sub
jle
out
jge
and
iret
or
dec
adc
scas
inc
lods
cmc
cmp
lret
ljmp
inc
insb
idivl
aad
push
loopne
dec
push
arpl
int
leave
enter
ljmp
icebp
mov
inc
mov
push
imul
lds
inc
mov
or
sub
fisubrl
les
ret
aaa
mov
mov
shrl
push
rolb
test
jns
ror
sahf
inc
imul
add
lahf
xchg
loope
cmp
mov
mov
xchg
cltd
pop
xchg
sbb
mov
mov
cmp
jg
xchg
and
add
sbb
add
add
das
mov
mov
xor
pop
cmc
xor
lea
aaa
popf
int3
mov
mov
cmp
test
scas
int
dec
jo
loope
mov
xor
cmp
outsl
jnp
inc
cmpsl
cmpsl
outsl
sti
mov
xchg
push
push
push
ret
sahf
xor
jp
ret
lahf
jl
push
jg
add
call
jb
ret
add
cmpb
shlb
pop
and
in
mov
xchg
cwtl
mov
call
test
jmp
test
insl
loop
fsub
mov
mov
test
test
hlt
scas
lret
ljmp
xchg
jo
fld
jge
push
push
lea
xchg
xor
adc
sarl
mov
inc
inc
mov
add
idivl
popa
jg
fisttps
mov
enter
push
lret
fs
xchg
lahf
mov
lret
imul
mov
mov
inc
in
xor
jae
stc
clc
fidivrl
jns
ja
dec
dec
dec
rorl
negl
ljmp
cmp
jg,pt
pmullw
fisttps
or
aam
lcall
pop
loope
xor
lret
inc
mov
cmp
scas
movsl
dec
push
sbb
mov
pop
pop
mov
and
jo
call
movb
faddp
pop
mov
sbb
jle
cmpsl
clc
addr16
adc
xchg
cmp
sub
jne
inc
in
hlt
pop
adc
lock
mov
cmp
add
cltd
or
and
adc
fstl
outsl
pop
movsb
adc
dec
jle
or
jae
sub
aaa
clc
pop
movsl
cmpsl
mov
jb
jb
test
mov
test
pop
mov
jmp
xorl
insb
negl
or
push
ja
push
mov
call
mov
lds
xor
dec
jae
loop
pop
cs
mov
sub
jg
xlat
or
mov
fs
fimuls
or
leave
lds
jbe
cs
test
test
xchg
lea
mov
inc
sahf
shr
push
test
jns
movaps
in
dec
cld
or
movsl
cld
mov
popa
mov
mov
popa
mov
mov
dec
popf
fsubrp
lahf
mov
cmc
mov
mov
mov
test
push
stc
adc
add
or
aas
push
jae
aad
jnp
and
jg
addr16
push
subl
xchg
out
inc
pop
xchg
sbbb
clc
dec
mov
js
xchg
and
mov
xchg
mov
sub
xchg
push
cmp
clc
push
in
mov
ds
repnz
iret
pop
std
ficoms
lods
ret
scas
xlat
lock
pop
mov
jmp
ss
pop
jno
push
mov
rep
adc
imul
push
push
adc
xchg
leave
cwtl
test
mov
or
add
cmpsb
ret
push
mov
mov
push
pop
stos
dec
repnz
outsl
xor
xchg
jnp
sbb
hlt
scas
in
cmc
mov
cltd
scas
jae
inc
insl
xchg
ret
or
push
js
stos
pop
lods
ss
hlt
or
add
inc
jo
xor
adc
pop
mov
dec
xchg
inc
iret
jno
pop
arpl
lods
orl
sbb
sbb
nop
mov
xchg
mov
lret
fs
push
push
dec
lods
test
shl
jb
jae
inc
shlb
nop
gs
cmpsl
push
adc
cmp
pop
mov
aaa
mov
int
iret
mov
mov
pushf
lret
push
xchg
cmp
les
mov
cmp
shlb
pop
fs
and
cltd
push
adc
mov
push
popf
ljmp
sub
cmp
jmp
out
cmp
mull
and
or
xchg
jp
sbb
mov
js
sub
iret
stc
js
cld
std
mov
fmulp
test
pushf
jle
js
lcall
ret
ds
inc
aaa
pusha
pop
shlb
pop
out
in
call
xor
popf
in
add
stc
adc
ljmp
jb
add
lock
pop
cmc
cmc
adc
sub
pop
fs
jg
repz
xchg
mov
adc
outsb
sub
jne
mov
add
push
outsb
mov
gs
aaa
out
dec
cmc
xchg
cmp
and
and
xchg
outsb
test
cmpsb
call
mov
das
arpl
adc
pusha
lret
jl
in
cmpsb
xlat
es
adc
pop
aad
push
cmp
add
xchg
movsl
into
loope
fists
jmp
sbb
icebp
sbb
push
xchg
sub
data16
push
push
xchg
sbb
negl
push
nop
hlt
aas
dec
mov
inc
and
sbb
aad
jno
dec
js
in
scas
aam
dec
insl
mov
ror
dec
test
les
pusha
dec
hlt
add
in
stos
push
fsubl
xchg
jle
or
add
adc
aam
push
hlt
addl
lds
daa
mov
push
xchg
jae
scas
add
adc
mov
test
jle
ja
adc
dec
push
sti
out
test
stc
or
cmc
mov
int3
jo
nop
shlb
xor
mov
stos
or
jmp
shl
mov
xchg
lds
imul
sbb
sbb
movsl
pop
inc
sbb
mov
lret
mov
aas
jne
stos
in
mov
and
stos
pop
jle
subl
fwait
mov
mov
mov
notl
dec
pop
xor
inc
inc
mov
rcll
imul
cmp
cmp
xor
hlt
and
sbb
int
and
sti
negb
inc
sbb
dec
stc
cmpsl
cmp
in
or
xchg
in
mov
jne
xchg
sbb
sbb
jge
jmp
aad
push
add
mulb
inc
loope
jbe
mov
gs
mov
addr16
pushf
jl
outsb
mov
je
dec
jne
aaa
loopne
xchg
popa
lahf
jno
and
dec
out
es
cmp
xor
out
xor
or
pop
mov
idivl
stc
mov
adc
cmc
movsb
add
mov
jae
cmp
inc
inc
mov
and
clc
add
mov
xchg
adcb
jno
and
scas
inc
mov
or
adc
rorb
jb
stc
mull
scas
xchg
jae
in
notb
xchg
call
jmp
mov
pop
scas
mov
sbb
dec
inc
jecxz,pt
cs
shll
xor
outsb
sub
cmc
ljmp
push
outsb
aas
jns
xchg
cmp
jno
mov
mov
jbe
stc
aas
jae
jecxz
lret
add
movzbl
insl
test
fstpt
stos
xor
xor
scas
pop
loope
lock
addb
cmp
xchg
jle
mov
lock
push
xlat
test
lret
inc
imul
pop
adcb
std
adc
add
mov
pop
es
xchg
or
ds
fldcw
add
testl
std
push
sbbl
ret
rclb
or
or
in
xor
mov
and
cmc
jp
cmp
aam
out
dec
sbb
jmp
in
clc
out
dec
add
push
fcoml
jne
pop
cld
inc
jb
and
pop
insl
das
xlat
mov
lret
xlat
in
data16
fstpl
push
cmp
pop
into
lds
stc
sbb
rol
out
shl
sahf
dec
imul
xchg
sub
pusha
xlat
fisubrs
test
jbe
mov
insb
push
pusha
mov
xchg
adc
push
mov
adc
int
sahf
xchg
add
xor
and
lcall
ljmp
rolb
pop
ja
scas
stos
test
cmpsb
stc
movsl
aad
lret
fs
push
sub
cmp
dec
pmaxsw
mov
notl
cmc
in
nop
jo
sbb
ficoml
stos
iret
add
aam
push
push
popf
push
imul
xchg
push
hlt
pop
fnstsw
popa
xchg
sbbb
mov
in
outsb
jg
pop
ljmp
mov
addb
mov
or
loop
dec
push
xchg
dec
mov
movaps
insl
repz
ljmp
subl
sub
sti
lcall
popf
jge
mov
lods
xchg
bound
popf
adc
lret
or
mov
pop
ds
and
in
subb
clc
jb
into
inc
inc
jnp
mov
cmc
xor
in
xchg
outsb
out
mov
daa
sahf
xor
mov
add
negb
jno
mov
je
shr
mov
cmpsl
push
jbe
mov
pushf
mov
xchg
ss
dec
push
je
jo
jmp
rcll
icebp
mov
dec
sub
jmp
push
sub
xchg
push
fsubrs
stos
dec
loope
and
pop
push
or
dec
jge
xlat
cli
je
dec
jmp
stc
hlt
in
adc
push
out
pop
xchg
fidivrl
sub
fisttps
addr16
jo
xchg
pushf
jns
popl
incb
adc
adc
xor
cltd
ljmp
cld
popf
dec
repz
jmp
add
or
adc
cmp
in
mov
mov
inc
shr
movb
xchg
sarb
or
fwait
push
xchg
adc
mov
push
loop
dec
or
mov
jl,pt
test
pop
test
dec
mov
stc
pop
in
in
adc
inc
mov
inc
push
pop
mov
mov
inc
divl
mov
ja
pop
scas
sbb
in
lcall
add
movsl
aas
arpl
outsl
in
mov
leave
test
mov
cltd
sub
gs
insb
repz
jge
mov
insl
sarb
mov
and
xchg
mov
push
fisttps
shlb
xchg
cmpsb
enter
outsl
or
xchg
cmp
daa
cmp
shrb
leave
lret
push
jns
out
cmpsl
inc
push
cmp
inc
lods
dec
jbe
xlat
sahf
add
add
jb
xchg
and
int
int3
mov
and
dec
dec
imul
sti
ja
jb
out
les
lods
test
inc
cltd
fldenv
les
rclb
insb
pause
dec
inc
fwait
scas
mov
sbb
stos
shlb
sti
aam
mov
dec
mov
pop
push
push
sub
and
leave
clc
cltd
cmpsb
lret
idivl
ja
mov
mov
cld
jl
int
cmc
adc
or
xchg
lcall
cwtl
ffreep
fists
loop
mov
and
sbb
jae
data16
sti
fbstp
fisttpl
psubusb
test
cmp
jno
scas
xor
jae
leave
lcall
mov
cmp
popa
jp
fdiv
and
cwtl
mov
cmpsl
xor
loope
iret
pop
loope
enter
or
push
mov
les
cmc
ret
push
fcoml
and
scas
aas
pop
pop
add
icebp
push
or
mov
add
enter
xchg
test
cmp
lods
fucomip
jg
push
or
and
push
or
adc
lret
aam
sti
bound
add
jle
aam
pop
dec
mov
aaa
lahf
cwtl
out
nop
shrl
test
iret
jne
gs
ror
or
adc
and
leave
lcall
add
lret
mov
pop
pushf
mov
push
roll
xor
in
inc
movsl
bswap
in
adc
xchg
jno
push
mov
lret
push
push
mov
push
aas
push
add
dec
hlt
nop
daa
sbb
jne
cli
jl
stos
sub
sub
xchg
and
adc
adc
enter
dec
test
mov
out
jg
loope
xor
dec
adc
arpl
cmp
cwtl
fimuls
mov
sti
pop
adc
or
je
mov
cmp
mov
pusha
cs
inc
mov
push
call
stos
fcmovne
orb
fnstenv
loop
xchg
ds
mov
lret
ficompl
idivb
outsl
mov
cld
imul
adc
mov
movsb
pop
push
lcall
ds
jmp
lds
testb
arpl
out
cltd
mov
scas
cltd
xchg
movsb
outsl
jne
std
mov
ret
std
cmpsb
mov
xchg
repnz
bound
aad
push
mov
add
aam
mov
mov
jo
scas
int
xchg
or
xchg
jmp
out
xor
mov
addr16
in
movsb
js
push
stos
rcl
enter
movsb
jo
sbb
aam
arpl
out
push
xchg
in
push
pop
sti
repz
stos
mov
repnz
mov
cmpsb
out
push
mov
aas
notb
aad
cs
call
add
lock
daa
lods
in
lods
fbstp
mov
adc
lods
scas
hlt
call
outsb
sbb
adc
aad
xchg
cmp
cld
repz
cmp
mov
icebp
enter
outsl
inc
mov
inc
ret
ds
add
cwtl
scas
mov
jno
mov
xor
ficoms
loope
pop
mov
or
pop
inc
jl
push
inc
mov
push
jg
js
rolb
movsl
cmc
mov
sbb
cmp
jl
mov
mov
sub
and
fmuls
rcll
test
or
rorb
jb
inc
pop
clc
adc
std
sbb
add
xlat
cmp
sbb
addr16
mov
cltd
mov
test
clc
insl
or
aas
or
push
mov
ret
cmp
pslld
insb
in
lds
fwait
cld
movsb
popf
nop
sahf
or
in
pushf
sbb
push
xor
fbstp
sarb
mov
mov
and
adc
push
push
fiaddl
shrb
pop
std
mov
xor
popa
mov
dec
std
mov
cs
mov
adc
jmp
movsb
leave
ds
leave
or
es
test
jnp
testb
push
adcb
outsl
jb
mov
pop
cld
mov
dec
cmp
jnp
inc
sahf
push
repnz
cwtl
lods
popa
in
push
adc
pop
scas
cmp
lock
test
or
pop
dec
stc
int
es
mov
or
add
or
mov
mov
jno
fucomp
inc
fucompp
mov
into
mov
sahf
hlt
xor
xor
mov
add
pop
mov
xchg
push
inc
in
ret
nop
out
shlb
rcrb
push
xchg
repz
es
xor
xchg
rorb
adc
rolb
out
mov
hlt
jb
or
popf
xor
lahf
es
dec
pop
lret
fldcw
in
sub
outsb
inc
push
mov
fadd
daa
cmp
loope
push
shll
sub
adc
add
cmp
mov
xorb
inc
lock
add
mov
adc
rcll
inc
mov
repnz
push
lds
outsb
outsl
dec
repz
cmc
sub
push
and
xchg
cmc
pop
pop
je
mov
fmull
jg
das
cwtl
mov
and
dec
push
sbb
jne
lock
daa
rcrl
out
repnz
sub
std
xchg
adc
orl
cmp
repz
push
add
inc
adc
xor
je
push
call
adc
ss
push
adc
insb
ja
rclb
jl
inc
jl
scas
and
int
sub
clc
pop
lock
sub
movl
mov
enter
pop
mov
in
xor
std
ja
scas
xor
repz
jmp
push
push
in
adc
es
out
and
jg
ret
and
fnstcw
cmc
and
outsb
or
test
xchg
adc
jle
adc
ja
rclb
mov
xchg
xchg
mov
push
outsl
inc
and
in
arpl
int
lea
or
mov
mov
xor
add
fucom
or
rolb
jne
push
out
sbb
xchg
mov
adc
push
xor
pop
lods
fsubp
nop
flds
and
push
mov
mov
dec
mov
bound
xor
push
pop
and
in
or
adc
cmp
xchg
ja
dec
or
pop
in
lret
xchg
loopne
stc
add
out
clc
subl
pushw
cmp
adc
cmp
lods
enter
out
mov
xorb
xchg
mov
pop
add
dec
xchg
xor
cmpb
sub
jg
cmp
insb
inc
and
xor
mov
jge
adc
outsl
lea
mov
and
and
xchg
inc
leave
cmp
movsb
jb
or
pop
xchg
cmp
mov
cmp
add
jg
movsl
loopne
inc
cmc
dec
sbb
adc
push
in
stc
push
pushf
jb
test
mov
dec
push
lock
mov
mov
xor
xor
mov
xchg
mov
ljmp
adc
adcl
dec
out
lock
inc
mov
call
pop
sub
xchg
mov
or
push
cmp
sbb
mov
fs
mov
dec
icebp
xchg
aam
call
or
push
test
fistl
idivb
aam
addl
jns
ret
sub
jl
and
push
popf
insb
lods
daa
rolb
loopne
movsb
cmpsl
lds
mov
mov
xchg
in
mov
cltd
les
xchg
jae
shlb
push
adc
adc
aad
pop
dec
call
cmp
xlat
fbstp
int
stc
jle
out
xor
in
cld
scas
and
xor
add
xor
in
pop
out
pop
loope
fiaddl
xor
cli
les
insb
movsl
push
sbbl
xchg
cmpsl
push
add
jne
fnstsw
sub
cmc
hlt
adc
idivb
or
rorl
jns
repnz
cmpsl
jg
loopne
pop
xlat
xor
xor
outsl
mov
sbb
fmulp
ljmp
fiadds
xor
dec
and
push
adc
lret
les
fldenv
shrl
movsb
or
outsl
pop
xchg
xchg
and
jecxz
cli
xchg
push
cmp
xchg
repnz
jle
rolb
adc
ret
jae
sbb
inc
fisubl
cltd
sbb
sbb
xchg
and
mov
or
arpl
std
lea
bound
call
aad
jg
mov
cli
mov
mov
lods
insb
ror
cmp
rcrl
sub
sbb
xchg
dec
jg
outsb
lret
fisttpl
lret
ja
pop
inc
mov
pusha
pop
sahf
xchg
mov
sub
movsl
and
je
xor
xor
iret
inc
das
in
sbb
jl
jae
pop
mov
jb
lods
mov
xor
push
xchg
or
and
rolb
push
xor
ss
sbb
xchg
andb
dec
jge
push
jl
inc
sbb
pop
dec
jbe
inc
adcl
jp
mov
scas
in
sub
cld
mov
pop
jno
ror
fwait
and
test
sbb
mov
xor
xor
push
cmp
mov
ljmp
ss
mov
scas
fwait
mov
lahf
cld
ret
mov
int3
jbe
loope
adc
data16
adc
std
arpl
mov
mov
ret
loop
mov
pop
xor
xor
out
test
std
mov
push
xchg
mov
add
aaa
inc
arpl
xor
adc
mov
test
jno
dec
sub
hlt
cmp
adc
ss
fnstcw
jge
nop
rorl
cmp
enter
cmp
addb
jae
movsl
xor
fwait
dec
aad
xchg
gs
push
aas
scas
roll
xchg
mov
pushf
sbb
fdivs
jno
adc
arpl
dec
cli
es
and
inc
or
pop
or
xlat
pop
out
imul
hlt
mov
in
mov
es
shlb
nop
iret
pusha
test
testb
jae
hlt
jge
int3
les
mov
mov
dec
xchg
and
jbe
jb
imul
push
sub
or
movsl
xchg
addb
std
jnp
call
sub
sub
push
inc
fs
mov
mov
mul
ret
xor
shll
xor
pop
stos
xchg
xor
dec
xchg
cmpsl
mov
bound
icebp
jge
push
gs
inc
ffree
std
mov
jnp
es
fildl
sbb
icebp
mov
jmp
mov
inc
clc
pusha
push
pop
pop
subl
lcall
divb
cmpsl
jle
jne
push
cs
or
in
outsb
mov
leave
sub
mov
popa
fstl
pushf
add
jb
daa
es
sub
ljmp
icebp
push
fidivl
mov
push
shlb
dec
sub
sbb
cmc
jl
xor
adc
and
test
cmp
popa
inc
jmp
stos
push
shrl
mov
lahf
inc
int3
mov
scas
les
mov
jmp
fisubrs
dec
mov
push
pop
sbb
std
push
adc
in
popf
iret
dec
jns
sbb
dec
mov
lods
lea
pop
shlb
ror
neg
iret
push
mov
and
jmp
jae
int3
sub
arpl
test
pop
in
push
mov
fiadds
sub
xchg
pop
push
rorb
sbb
insl
sbb
inc
das
xor
stc
dec
pop
pop
dec
lea
inc
lods
bound
aaa
push
bound
sub
and
imul
jns
pop
sbb
int
jbe
leave
iret
mov
repz
push
jb
sti
adc
dec
outsl
pop
gs
mov
mov
mov
mov
push
cmp
stc
jnp
ja
jno
stc
jmp
jnp
aad
xchg
ljmp
adc
nop
in
and
add
or
lea
and
sbb
pop
inc
into
es
outsl
sarl
jp
add
clc
or
call
addb
inc
dec
hlt
add
bound
add
add
shrb
and
rcrb
enter
hlt
movsl
pop
out
loopne
push
pushf
hlt
add
mov
int
add
mov
xor
pop
and
add
out
xchg
sbb
or
mov
xchg
sbb
int3
nop
cmp
mov
iret
leave
sub
or
call
jle
fdivl
xchg
and
es
leave
push
cmp
mov
push
dec
jle
jl
mov
cld
pop
lcall
xchg
mulb
sbb
fs
jl
pushf
push
repnz
int3
push
mov
xor
push
xor
data16
mov
pop
xchg
xor
mov
cli
inc
cwtl
cmp
sbb
push
lods
push
or
in
pop
mov
and
sub
mov
mov
lret
mov
imul
mov
imul
mov
xchg
pop
sahf
pop
popa
xor
inc
jns
insl
lret
sub
xchg
into
jbe
sub
mov
push
out
mov
push
xchg
pop
push
out
jbe
stos
repnz
adc
rorl
out
cmp
or
aad
jb
lea
rclb
cwtl
pop
lahf
bound
xchg
mov
aam
out
sbb
inc
adc
out
ja
jecxz
mov
cmp
shlb
sub
pop
mov
pop
lds
or
pop
mov
shll
jp
lds
aam
fildll
xor
pushfw
mov
stc
int
je
push
dec
or
jge
sub
shll
sbb
cmp
inc
lock
test
push
jle
jmp
daa
adc
sub
inc
mov
mov
ret
mov
roll
adc
and
lock
and
test
stos
out
dec
popf
add
add
out
orb
clc
add
fdivrl
hlt
stc
jae
xor
jg
pop
and
stos
sbb
push
out
sbb
pop
arpl
adc
pop
jmp
sti
imul
push
hlt
in
mov
lcall
rcll
cmpb
xor
gs
push
repnz
jmp
or
inc
pop
fwait
loopne
ret
pop
xchg
mov
pop
incb
scas
scas
mov
and
xchg
dec
shll
xchg
fwait
xor
flds
cld
mov
or
sub
xchg
std
addr16
pop
clc
data16
out
repnz
jg
pop
sub
jecxz
and
inc
inc
lock
sub
pop
rorl
lret
iret
jle
mov
fdivs
cld
mov
jns
xor
xchg
sub
adc
enter
pop
notb
sub
imul
daa
xchg
ja
and
test
inc
ljmp
fstpl
test
pop
pop
adc
cmp
ret
sub
std
sti
sarb
mov
outsb
repz
scas
or
popf
fimull
testl
xor
xor
inc
adc
cmp
test
push
shr
pop
shr
add
mov
ljmp
repnz
cmp
jb
into
push
enter
and
lret
imul
loopne
test
test
xlat
mov
xchg
out
loopne
in
lods
dec
lahf
pop
add
div
jns
adc
xlat
xor
or
jae
cmpsb
or
outsl
andb
sub
movsb
std
inc
mov
xchg
rcl
dec
test
jb
jmp
jae
push
cmpsl
jmp
jle
pop
adc
mov
pop
xor
in
fdivs
daa
scas
scas
iret
daa
or
mov
addr16
dec
sub
lcall
ss
into
jne
sbb
cmp
sub
insb
cmpsl
push
pop
jno
cmp
xor
movsb
mov
int3
cmp
inc
dec
es
icebp
add
and
and
mov
sahf
xor
sub
loope
xor
cmp
xchg
jg
int3
shlb
inc
or
lahf
lea
in
adc
cwtl
jmp
pop
and
cmp
pop
stc
in
mov
adc
pop
add
inc
insl
mov
test
lds
jl
fs
call
clc
lcall
aad
adc
or
lret
mov
das
and
testl
negl
leave
fists
outsb
xchg
xchg
jo
fptan
arpl
dec
cmp
push
inc
and
sbb
mov
call
push
je
sub
pushf
sarl
inc
push
stos
mov
int
push
jnp
negl
scas
jl
pop
aaa
inc
cmp
push
mov
dec
push
jge
decb
mov
out
xchg
fwait
repz
dec
loopne
rclb
xchg
cmp
movsb
fs
xchg
icebp
sub
ljmp
ja
fxch
jnp
mov
out
mov
loopne
call
and
lods
icebp
popf
mov
or
sar
scas
jmp
or
divl
mov
fisubrs
mov
mov
mov
xor
sub
sbb
ss
sub
mov
shll
and
jmp
mov
mov
xchg
inc
in
pop
jmp
shrb
idivb
int
fldt
mov
inc
xchg
pop
idivl
adc
outsl
cld
inc
bound
sbb
insb
pop
mov
js
inc
pushf
and
mov
xor
xor
es
jl
ss
push
out
pop
and
and
popl
push
push
inc
movsb
mov
loop
add
push
roll
stos
inc
ljmp
or
mov
add
mov
scas
push
adc
dec
nop
dec
aas
out
cli
ljmp
or
out
push
inc
incl
cmpsb
jmp
mov
movsl
jle
xchg
or
mov
add
scas
mulb
sub
cmpsb
xchg
mov
test
arpl
lret
push
inc
jl
dec
push
and
enter
loopne
clc
iret
sub
pop
fwait
stos
mov
lahf
cwtl
mov
xlat
push
inc
int
lret
icebp
jp
jbe
int3
mov
ss
jg
jb
sbb
jae
and
push
je
lret
sub
sbbl
int3
sub
clc
xchg
out
clc
mov
sbb
or
jne
out
addr16
or
jns
mov
dec
in
pop
dec
sub
inc
test
loopne
int
pop
pop
out
fwait
insb
mov
cmpsb
scas
in
out
jno
gs
notb
and
in
aaa
push
inc
pop
dec
test
sub
push
pop
int3
push
nop
jmp
stos
xchg
loope
ljmp
dec
mov
mov
insb
call
addl
mov
mov
repnz
fldl
dec
jmp
pop
loopne
adcb
jg
sbb
lods
aas
lret
mov
stc
inc
inc
js
cmp
test
push
xor
idiv
gs
and
mov
pop
mov
cmc
fwait
testl
aad
std
pop
stos
test
add
mov
mov
ret
std
and
dec
push
jg
cltd
clc
mov
addl
fbstp
sbbb
call
loopne
lds
scas
dec
dec
jnp
mov
dec
int3
sbb
out
popf
std
hlt
add
iret
inc
mov
test
sbb
or
or
bound
xor
les
or
adc
bound
lods
cld
xor
lahf
xchg
mov
loope
mov
pushl
xor
mov
mov
jb
mov
test
push
icebp
push
jmp
aas
aas
or
push
dec
push
popf
jb
mov
xor
jno
jno
or
inc
dec
or
adcb
out
mov
out
scas
lcall
sbb
mov
ss
gs
or
fbld
sub
add
cmpsl
lds
adc
add
lea
mov
mov
and
or
test
cmc
ret
aad
jne
adc
push
xor
mov
pushf
sub
cmp
lret
cs
push
cmp
stc
push
mov
ja
shlb
jge
mov
movsb
sbb
pop
xchg
repnz
mov
or
cmp
and
mov
test
test
pop
cmp
sahf
aam
mov
sbb
or
je
jmp
gs
das
rclb
mov
stos
push
jb
hlt
sub
sbb
xlat
or
sbb
cmpsb
movsb
push
clc
gs
or
rorb
sti
into
pop
fildll
out
push
popa
or
and
mov
lods
enter
cmpsb
mov
jno
subl
mov
pop
iret
in
into
mov
dec
jnp
leave
int3
mov
int3
imul
int3
cltd
ss
xlat
or
pop
push
addr16
pushf
jnp
sub
jae
js
mov
push
lret
pop
adc
subb
mov
add
cmp
mov
sbb
push
xlat
jge
in
jge
push
mov
jmp
lahf
or
mov
aas
inc
jmp
add
and
je
sub
es
and
mov
add
xlat
bound
mov
push
jle
xor
jl
mov
aad
xchg
push
jb
jecxz
or
or
hlt
aas
sar
outsl
lahf
imul
pushf
mov
es
mov
cmp
rol
andl
ja
dec
mov
sbb
pop
push
insl
cmp
jle
and
mov
xchg
add
test
push
and
or
and
hlt
shl
stos
sub
xchg
call
in
sbb
sbb
leave
push
pusha
jo
stc
popl
mov
jb
inc
repz
push
int3
lds
mov
push
ja
dec
cmc
pop
or
out
out
dec
cmc
mov
test
jg
lods
fwait
call
aaa
out
iret
pop
xchg
inc
mov
cmp
cmp
inc
aas
dec
jns
iret
fnstenv
mov
pop
xchg
jmp
call
cmp
fwait
nop
xor
ficomps
sbb
fidivrl
push
roll
rorb
dec
stos
stos
call
repz
mov
xchg
lret
mov
inc
inc
aam
fildl
mov
and
cmpsl
jg
xchg
fucomp
dec
dec
popa
subl
les
rorb
push
scas
bound
sub
scas
les
cld
ja
or
jbe
lods
lds
dec
jle
das
movsl
sub
insl
sub
mov
imul
pop
bound
pop
inc
test
fsubrs
out
adc
mov
jg
xchg
xor
jecxz
movsl
jno
adc
mov
adc
jne
test
stc
fimull
xchg
push
mov
jge
mov
inc
cmp
xor
in
lock
inc
enter
lods
adc
xorl
cmc
cli
aaa
sbb
and
and
adc
or
popa
fldt
pop
jmp
rclb
cmp
push
orb
sbb
inc
and
jb
lahf
arpl
jnp
int
xor
add
not
xor
inc
out
mov
out
dec
or
or
test
sub
pusha
mov
sbb
adc
push
lret
add
jge
scas
imul
es
mov
fsubrs
stos
out
insb
add
mov
mov
dec
sbb
jne
cmc
fdivs
aad
sub
les
ficomps
inc
mov
sbb
sahf
push
mov
xchg
mov
std
jmp
test
in
mov
jle
les
lret
sahf
cmp
arpl
aam
imul
mov
push
jmp
xlat
adc
cmp
xor
dec
xor
incl
and
xor
inc
mov
and
popf
imul
xchg
sbb
mov
jne
fwait
dec
inc
adc
sub
nop
push
stos
loopne
and
xchg
mov
fiaddl
xchg
jmp
dec
out
test
jge
es
out
xchg
mov
out
es
fistl
sub
test
out
test
dec
pusha
insb
xchg
aam
lods
mov
mov
rcl
mov
sub
dec
push
inc
cmp
lods
mov
nop
lea
and
out
pop
dec
call
sti
inc
jne
pop
dec
testb
divb
shlb
and
mov
pop
cltd
into
andb
push
mov
and
mov
dec
mov
sbb
push
in
jb
push
fcompl
mov
sub
xor
push
es
in
jge
gs
cmpsl
cmpsl
push
comiss
subb
cli
jle
push
out
sub
mov
clc
mov
dec
adc
outsb
addr16
cmpsl
mov
mov
jno
sbb
pop
clc
mov
in
jl
divl
popa
mov
mov
int
movsb
xchg
sbb
daa
and
push
ja
in
mov
push
je
out
iret
cltd
notl
imul
sub
mov
dec
inc
and
add
sti
in
push
or
in
mov
cmc
dec
loopne,pn
xchg
sub
sub
or
in
and
lods
add
mov
xor
loopne
cwtl
xor
pshufw
add
xor
mov
inc
adc
lret
cmp
cmc
clc
and
sbbl
push
push
dec
aad
dec
aas
mov
sar
push
xchg
xlat
push
adc
ss
xchg
shll
ds
shlb
pop
push
mov
cmpsl
pop
dec
repnz
and
pushf
cmp
fimull
bound
cld
or
mov
lods
fidivl
sbb
adc
dec
in
or
push
js
xchg
test
ja
push
fistl
push
orl
cli
fmull
lds
leave
daa
mov
cmpsl
out
enter
scas
lret
mov
mov
jecxz
push
and
loope
cwtl
mov
ss
lret
cli
mov
mov
adc
xor
and
mov
imul
movsb
repnz
repnz
jg
mov
inc
fistps
pop
mov
cmp
jecxz
pop
imul
jmp
inc
pop
cltd
dec
inc
cmp
pop
loop
or
dec
adc
dec
cmp
or
stc
pushf
cmp
ljmp
and
sbb
rcrl
cltd
lods
pushf
mov
xchg
or
jne
jo
pop
ja
inc
dec
dec
cltd
icebp
aas
jp
bound
out
mov
outsl
fimuls
adc
inc
hlt
inc
in
push
fsubl
fdivrs
push
xchg
cmp
sub
push
sahf
mov
xchg
or
xchg
xchg
aam
and
mov
or
cmp
xchg
out
mov
add
cmpsb
cs
lea
movsb
sbb
sub
inc
push
push
ret
out
mov
enter
ljmp
sahf
xchg
test
xchg
mov
xor
xlat
jns
mov
dec
mov
mov
mov
lods
xchg
jp
call
imul
les
inc
test
cmc
lods
out
in
xor
outsl
cmc
dec
adc
js
pop
cmpsl
cmp
xchg
adc
daa
in
cmp
arpl
xlat
movsl
xchg
inc
push
hlt
sub
mul
jns
mov
jp
icebp
and
push
int
jmp
mov
mov
jle
aas
sti
xor
in
push
sbb
stc
cmp
fcmovnb
jl
pusha
stos
sbb
arpl
fdivrs
daa
adcb
fldt
idivb
les
das
movb
int
add
aad
idivl
xchg
pop
inc
fadd
js
roll
dec
pop
dec
bound
jl
cmp
pop
lock
sub
cmc
and
cmpsb
popl
repz
push
pop
xor
mov
mov
adc
or
cmp
sbb
mov
mov
ja
sub
scas
mov
adcb
xor
aaa
push
pop
add
cs
cs
mov
clc
fcompl
xor
sub
lock
or
push
sti
mov
xchg
push
cmpsl
mov
jg
sbbl
shll
test
and
jecxz
cmpsb
xchg
sbb
pop
cmpsb
repz
jns
mov
lods
sbbl
or
adc
fwait
popa
aad
dec
or
xchg
jbe
mov
enter
es
enter
sub
out
addr16
les
jbe
sbb
cmc
add
xlat
or
arpl
sbb
pop
pop
mov
pushf
adc
xchg
lods
aad
pop
mov
in
and
adc
loopne
in
in
ss
mov
int3
iret
sbb
adc
test
jle
sbb
fildll
in
mov
vpcmpeqw
pop
mov
push
enter
push
lock
pop
push
inc
aaa
pop
repz
sbb
cld
lock
fs
stc
and
shl
mov
adc
pop
cmpsb
sbbb
aas
cwtl
aam
xlat
pop
add
add
ja
cwtl
cmp
ss
pop
xchg
fwait
pop
bound
mov
int
stos
mov
or
mov
je
cltd
ss
add
jmp
xlat
clc
mov
cs
inc
lret
cwtl
ja
adc
std
jle
sbb
outsb
push
push
jbe
aad
bound
repnz
cmp
ds
push
or
dec
push
ret
wbinvd
stc
test
push
aam
mov
sub
pop
jo
adc
sahf
pushl
out
adc
cwtl
arpl
lcall
nop
popa
dec
mov
sbb
jo
xor
jl
mov
fbstp
adc
fdivl
jbe
jne
pop
inc
or
movb
xlat
mov
push
sub
in
sub
lods
test
cmp
inc
aaa
gs
movsl
aam
pushf
adc
xor
es
ss
movsb
sti
sbb
push
add
adc
jno
xchg
adc
sub
movsl
mov
data16
cltd
xor
mov
rolb
je
or
rorb
adc
xlat
inc
jmp
cmp
or
mov
push
orb
adc
dec
leave
cmp
sub
jo
pop
and
sub
sub
pop
jle
enter
inc
loope
xchg
jmp
mov
pop
cmpsl
jns
test
outsl
jl
sti
xlat
cmp
in
jecxz
out
addl
pop
lods
aas
fwait
clc
into
and
pop
int
pop
insl
lahf
jmp
fmul
push
imul
cltd
dec
repz
ror
les
inc
or
push
inc
cmpl
ret
jge
in
mul
add
out
push
mov
inc
imul
popa
std
inc
dec
fnstcw
scas
pop
rol
fwait
cmp
pop
add
test
js
fsts
and
mov
lods
iret
xchg
lret
add
xchg
mov
pop
xchg
shlb
stos
int
pop
fsubs
jecxz
push
fistpll
jbe
mov
xlat
add
and
js
je
push
add
lods
xor
jp
fsubrl
orl
cmp
jg
xor
adc
idivb
outsl
aas
idivb
pop
lcall
xchg
mov
int3
mov
pop
or
mov
inc
mov
sub
outsl
pop
mov
ds
add
jne
jmp
sbbl
adc
fwait
ror
ds
inc
inc
jbe
arpl
aas
mov
cld
jnp
popa
pop
imull
mov
and
imul
fwait
cmp
rcrb
cmp
sbb
sbb
cmp
ja
xchg
adc
fstpl
sbb
leave
jg
loope
fucomi
dec
and
nop
jno
jl
orb
or
adc
push
leave
adc
push
daa
xchg
push
fidivs
in
imul
mov
mov
mov
and
fbstp
push
sub
xchg
addb
leave
hlt
push
int
pop
cmp
add
test
mov
push
fs
push
add
in
lahf
adc
cmp
loope
inc
xchg
loop
mov
or
add
xchg
loope
sub
mov
xor
sub
pusha
push
scas
in
roll
sbb
sbb
mov
sub
js
xchg
and
xchg
dec
insb
xchg
cmpsl
data16
movsb
and
mov
add
gs
cmc
xchg
dec
mov
mov
loop
cmp
add
jmp
inc
dec
mov
repnz
mov
jecxz
jbe
or
xlat
aaa
lds
jle
fnsave
je
inc
mov
mov
push
sarb
cmp
pop
mov
pop
sub
xchg
in
mov
lods
inc
sub
mov
push
pop
scas
pusha
mov
pop
pop
xchg
push
push
cmc
adc
negl
repnz
xchg
cltd
push
jle
xchg
ljmp
je
push
shlb
inc
dec
pop
push
inc
and
fs
mov
mov
add
and
xor
popl
aad
adc
hlt
divb
lret
xchg
jo
es
jl
test
rcll
ret
add
shl
sahf
pop
ds
xlat
bnd
ljmp
xor
popa
adc
push
add
jge
jbe
pop
pop
inc
ror
add
sbb
or
ds
fnsave
mov
imul
js
or
push
je
outsb
data16
cmpsl
and
inc
mov
adc
insb
mov
pop
lcall
daa
add
sbb
mov
push
mov
imul
jbe
aaa
jmp
push
hlt
xchg
sbb
mov
jge
lods
test
and
and
test
mov
int3
and
inc
dec
cwtl
aam
mov
sahf
in
dec
push
mov
xor
mov
dec
ret
xchg
pop
lea
cltd
lods
xor
movsl
cli
movsl
loope
outsl
aas
or
leave
int3
jmp
addr16
lret
shrl
sbb
sub
or
or
arpl
mov
xchg
into
lds
leave
aaa
push
les
movb
sbb
repz
xor
sbb
addr16
call
in
fnstsw
sbb
out
sub
adc
push
sti
fimull
mov
mov
lock
ds
js
sti
pusha
aaa
xor
test
jbe,pn
push
fmuls
push
dec
mov
scas
dec
nop
mov
jge
fnstsw
xor
mov
fsubrs
inc
mov
pop
stos
or
les
stos
and
je
mov
mov
adc
jae
sbb
sub
out
decl
pop
test
repz
and
pop
mov
inc
xchg
sbb
dec
sub
xorl
and
add
in
nop
jmp
dec
shll
fldenv
inc
faddl
dec
fs
xor
stos
dec
push
pop
push
ja
push
imul
mov
ss
add
test
faddp
testl
cld
shll
fdivrl
mov
jnp
cmp
out
fimuls
inc
pusha
pop
fisttpll
jmp
mov
pusha
mov
aaa
adc
cmp
je
cmpsl
pop
inc
jns
add
mov
cltd
outsl
movsl
mov
mov
or
sub
nop
ret
insl
nop
sub
sbb
test
js
aaa
test
jg
mov
mov
mov
mov
cld
inc
or
jg
xchg
daa
imul
clc
sbbl
in
ljmp
movsb
rcrb
xchg
imul
xor
aam
out
mov
scas
in
push
rolb
je
jle
mov
pusha
sub
cmp
mov
xchg
mov
push
popf
loopne
mov
mov
rorb
ret
pop
outsb
ss
scas
mov
pop
pop
rclb
mov
mov
inc
or
imul
dec
sub
xor
push
pop
push
push
jbe
mov
inc
and
cltd
insl
jns
pusha
jnp
fcomip
mov
mov
mov
das
imul
adc
mov
jbe
aaa
push
add
xchg
xor
pop
movsl
fwait
negb
mov
loope
cmp
adc
dec
mov
cmp
mov
adc
fdivrl
or
cmpsb
sti
xor
fnstenv
adcl
out
mov
or
rorb
push
cmpsl
outsb
dec
mov
hlt
and
dec
insl
scas
or
ret
and
stc
stos
push
adc
add
out
xchg
das
lds
in
call
movsb
insl
dec
push
fdivl
icebp
cs
jge
inc
outsb
shl
and
dec
popa
pop
iret
push
adc
mov
mov
or
std
fldcw
mov
dec
fsts
sbb
int3
js
fcomps
scas
insl
push
pusha
and
es
jmp
xchg
push
inc
mov
xchg
or
repnz
subl
or
in
or
push
add
and
cmp
aam
jno
pop
cs
and
sbb
fs
out
leave
fmuls
mov
lea
xchg
fs
rep
test
mov
mov
scas
daa
lret
popf
pop
or
mov
xor
out
bound
imul
push
data16
push
pop
jp
cmp
sahf
clc
and
lcall
popf
mov
incl
mov
cmpsb
int3
iret
fimull
push
repz
jns
mov
jae
aas
jbe
repnz
pop
xchg
mov
shlb
std
push
push
mov
jnp
je
dec
or
pop
mov
pushf
inc
push
in
mov
test
add
inc
sub
xor
dec
cli
stc
and
pop
rcr
cmc
mov
cmp
enter
int
hlt
sbb
xchg
shlb
mov
pop
int
mov
jge
dec
pusha
jno
or
ds
fsts
in
sub
cmp
cwtl
adc
dec
sub
mov
or
xor
xor
mov
add
nop
jmp
jno
aam
test
cmc
mov
cwtl
mov
mov
and
inc
mov
std
arpl
or
aad
insb
ret
mov
inc
outsb
jp
add
push
int3
pop
and
xlat
mov
shlb
cmp
mov
add
in
fdivr
fs
scas
or
mov
fisttpl
xchg
outsl
mov
add
mov
aad
aaa
add
lcall
cwtl
popfw
popa
idivb
lret
in
fimuls
out
inc
test
jnp
int
es
jmp
es
mov
ja
push
test
mov
ljmp
ret
into
aaa
test
jns
push
sahf
xchg
out
push
sbb
jae
arpl
aad
push
and
mov
loopne
pop
push
cmp
or
ret
xchg
test
out
adc
scas
jle
cmp
and
mov
loope
lods
ds
pop
js
test
add
pop
call
int
xlat
subl
pop
mov
pop
stos
addr16
pop
mov
adc
loope
pop
les
aas
sbb
sbb
sub
mov
aam
leave
fs
lods
or
push
push
or
aas
lret
int3
pop
leave
mov
out
jecxz
aaa
inc
or
ds
jecxz
cmpl
ds
or
call
cld
cs
enter
add
cmp
ss
jo
inc
jmp
and
push
pushf
loop
fsts
icebp
sbb
mov
jne
movb
cli
add
cld
pop
xor
pop
rol
popf
icebp
sub
or
shrb
int
mov
cld
xchg
push
mov
aad
insb
pop
sbb
xchg
and
filds
push
es
sub
addb
push
push
clc
aad
and
mov
push
cmp
jg
dec
bound
ljmp
inc
mov
add
and
jl
inc
xchg
or
enter
imul
mov
in
or
or
test
or
jae
adc
dec
decb
mov
bound
stos
dec
xchg
sbbl
adc
mov
cwtl
push
push
and
divl
sbb
clc
sbb
and
int
xchg
inc
inc
push
insb
mov
adc
sbb
fisttpll
mov
jbe
movsl
fmul
mov
iret
scas
lock
js
dec
in
mov
inc
xor
or
in
push
or
push
sub
or
je
pop
cmp
push
xchg
sbb
stos
int3
mov
or
add
out
in
incb
jmp
sbb
dec
jne
pop
mov
scas
sub
cmp
push
lret
and
call
push
cmp
aam
iret
dec
call
cmc
pop
fmuls
cmpsl
es
pop
pop
stc
fcomps
insb
jne
shr
fidivrl
and
pop
jbe
sti
cmc
pop
test
fwait
pop
cmp
push
scas
std
jp
dec
mov
lods
std
jno
pop
ret
js
inc
pop
lods
out
test
or
aaa
popa
dec
fcomps
xchg
mov
and
fs
xchg
clc
inc
addl
mov
daa
xor
arpl
push
ja
nop
cmpsl
scas
mov
lds
in
out
lds
call
movsl
jl
mov
jne
lds
stc
sbb
or
cmp
mov
cmc
sub
fs
adc
or
cs
mov
or
into
push
jns
xor
sbb
mov
xchg
xchg
hlt
js
mov
xorb
rcrl
subl
add
pop
sbb
dec
mov
adc
pop
in
or
xor
and
cmp
cld
mov
xchg
int
enter
push
popa
fwait
or
pop
push
push
pop
das
xchg
mov
pop
iret
jno
jge
sub
out
sub
adc
adc
test
push
pusha
icebp
sbb
mov
arpl
dec
popa
sub
sub
push
mov
jge
inc
sti
ret
fisubrs
sub
test
fwait
loopne
sbb
dec
push
incl
ret
inc
cmp
mov
xchg
cmpb
mov
std
pop
jl
stos
mov
sbbl
shlb
lret
hlt
jecxz
or
loop
fs
mov
mov
mov
mov
inc
add
cmp
push
sbb
imul
pop
faddp
in
cmp
cmp
adc
mov
test
jg
out
sbb
sti
arpl
paddusb
xchg
inc
test
jbe
push
jmp
divl
popa
les
lahf
add
inc
cltd
jne
leave
loopne
cli
pop
test
sub
inc
inc
push
insb
bound
int
fwait
xchg
adc
sub
adc
sti
lods
and
push
jno
mov
sub
sahf
pop
lods
fidivs
cli
add
push
ror
in
pusha
out
push
imul
sub
jno
xchg
aad
movsbl
lahf
iret
pop
mov
or
aad
mov
int3
movsl
sahf
clc
jo
xor
orb
scas
pop
xchg
daa
jo
jge
xchg
test
jns
scas
xchg
or
test
scas
jge
jge
dec
add
pop
bound
xchg
dec
xchg
lds
aaa
aam
sub
xchg
fwait
jo
or
enter
and
testl
aaa
jns
dec
jge
and
repnz
adc
mov
jno
in
cmpsl
push
mov
or
popa
icebp
daa
mov
test
into
dec
stos
pop
ja
xor
outsl
jno
loopne
pushf
xor
mov
dec
inc
xorb
xchg
jp
iret
repnz
add
mov
mov
pop
xchg
rcr
inc
icebp
arpl
sti
inc
in
fcoms
inc
and
xchg
push
movsl
jp
xchg
repz
adc
adc
add
addr16
jp
arpl
loop
scas
mov
sub
add
mov
pop
pushf
hlt
mov
cltd
out
mov
stos
jno
inc
add
inc
xchg
jae
movsb
daa
mov
mov
dec
lret
xor
cmpsb
adc
or
and
cltd
hlt
iret
imul
sub
test
sub
xchg
mov
in
pop
inc
inc
dec
sti
dec
jmp
cs
push
push
pop
scas
cmp
fcomip
int
sbb
ljmp
ljmp
mov
xchg
inc
cld
imul
push
mov
adc
mov
jo
adc
xor
aaa
pop
adc
sahf
mov
xor
sbb
ss
fisubs
inc
in
pop
out
or
andl
mov
sahf
fmull
or
xchg
loopne
mov
dec
pop
sub
sbb
out
xor
sub
jl
insl
cmc
fistps
push
pop
inc
adc
dec
sbb
inc
or
pop
frstor
pop
stos
add
push
xor
sbb
movsb
jle
cmp
xchg
or
add
push
jbe
in
adc
inc
iret
xchg
or
outsb
push
daa
sub
test
sub
jge
mov
cs
nop
or
popf
sbb
xor
ret
push
mov
pusha
leave
je
inc
data16
ds
lods
popf
arpl
je
push
push
cmp
loope
mov
jecxz
pop
orb
subb
leave
pop
leave
les
gs
jmp
out
arpl
sbbb
push
das
cmc
fisubrs
mov
jg
and
xchg
xchg
and
mov
int3
dec
jb
sbb
popf
sbb
xchg
ja
inc
jmp
ljmp
fisubs
cld
jp
leave
pop
mov
sarb
scas
sbb
lahf
es
sub
cmpsb
adc
cmp
xchg
loope
push
sbbb
mov
or
jns
or
in
mov
in
pop
bound
pop
stc
test
xchg
movsb
cmpsb
in
or
orb
mov
mov
add
pop
in
jg
and
cmp
cmp
or
ficomps
mov
mov
cltd
outsl
in
clc
popa
pop
cs
cs
gs
xor
jo
aam
cmpsl
std
shll
leave
mov
test
imul
adc
xor
jnp
test
jo
rolb
xor
add
add
add
mov
lods
add
sbb
std
ja
push
aaa
shrb
nop
mov
leave
loope
mov
in
xor
lds
mov
insb
js
int3
push
dec
sub
pop
dec
mov
jp
pop
hlt
mov
notl
ljmp
inc
or
push
dec
mov
push
arpl
push
mov
imul
xchg
fdivs
or
stos
ds
clc
mov
jo
jb
shrb
pop
xor
jecxz
imul
adc
xchg
outsl
adc
lock
adc
sub
loop
or
fisubrl
sbb
testl
mov
push
das
ja
pop
jge
sub
push
mov
inc
scas
cmpsb
jl
mov
inc
jge
mov
ljmp
xchg
jno
fidivrs
mov
mov
xor
arpl
ret
add
ss
lods
lahf
data16
ljmp
sub
pop
push
mov
dec
mov
sub
fsubr
insb
sub
pop
out
mov
sub
sub
xchg
lahf
cwtl
push
add
int
popf
js
ja
ret
sbb
addr16
jl
test
sub
pop
aad
or
gs
lcall
cs
jg
bound
dec
push
sub
push
popa
mov
lcall
push
or
clc
xor
popf
out
rorb
mov
mov
mov
push
fcmovnu
jb
scas
mov
aad
lods
pop
and
xchg
fisttpll
aam
mov
jle
out
notb
ljmp
or
mov
jecxz
subl
jp
sti
sbb
cld
call
imul
ds
mov
xchg
push
ja
cmpsl
push
add
loope
nop
test
mov
xor
jge
les
mov
cmpsl
pusha
call
insb
adc
shll
shrb
mov
xchg
and
das
sub
filds
js
or
out
dec
in
mov
jb
lahf
int3
jp
mov
dec
push
adc
dec
mov
add
lahf
add
ret
cwtl
mov
adc
ja
mov
pop
mov
xlat
or
cmp
addr16
arpl
fs
and
and
pop
adc
push
xchg
rolb
into
jge
push
mov
arpl
pop
enter
cld
dec
adc
sub
data16
jns
fiaddl
push
test
mov
add
push
and
add
cld
inc
mov
leave
lret
mov
popf
icebp
and
dec
cmp
arpl
testb
xchg
sub
mov
nop
mov
lods
test
jb
out
jmp
cmpsb
mov
cwtl
push
out
je
btsl
aad
daa
sub
fmull
xchg
xchg
xchg
mov
adc
sub
sbb
adc
gs
inc
leave
jmp
repnz
xor
mov
out
mov
repz
aad
outsb
mov
jo
fcmovb
int
mov
or
inc
push
sub
repnz
repz
inc
lods
cmp
pop
xchg
xor
dec
dec
int3
je
stos
mov
mov
lods
subl
mov
into
cmp
mov
mov
lret
es
mov
mov
add
push
xchg
sahf
xchg
rolb
mov
outsb
mov
sub
adc
aaa
ljmp
aam
or
cmp
stos
jae
mov
into
push
cmp
xor
add
cmpsb
arpl
adc
pop
dec
and
pop
xor
jae
repz
dec
and
mov
mov
in
dec
fldz
pop
mov
loopne
test
add
push
jbe
mov
je
mov
lcall
push
aad
int
inc
aas
dec
idivb
pop
mov
lret
and
inc
mov
add
jle
pop
and
dec
and
add
dec
fs
xor
push
jnp
icebp
mov
lcall
add
sbb
xchg
hlt
add
mov
scas
insb
lods
ret
test
sbb
into
pop
aad
adc
cltd
mov
mov
xorb
push
adc
pop
xchg
aaa
push
cs
cmp
addr16
mov
jle
pusha
mov
out
or
cwtl
cld
mov
pop
enter
adcl
push
or
mov
loop
insb
push
pop
iret
jecxz
mov
push
lds
rorl
mov
mov
jb
out
out
cs
fstps
mov
xor
xchg
or
repz
sbb
sub
lcall
inc
sbb
movsb
test
mov
and
xor
iret
loop
nop
jb
jno
mov
sti
xor
xor
xchg
pop
mov
inc
mov
sub
popa
jle
mov
push
mov
mov
and
aad
adc
aad
push
cs
jg
out
test
dec
adc
ret
xor
dec
adc
pop
insl
xchg
mov
lds
mov
movsl
rolb
push
pop
sub
pop
ss
pop
movsl
inc
cs
mov
xchg
test
rorl
cld
les
mov
jne
mov
in
loopne
outsl
pop
and
shll
rorl
pop
xchg
cli
dec
sti
int
push
jmp
mov
das
xor
xchg
sbb
lcall
and
push
pop
push
sub
mov
sbb
movsl
movsl
dec
or
lea
rcr
cltd
int3
mov
lea
je
mov
mov
lods
std
pop
dec
sbb
and
or
xor
data16
int3
or
aaa
iret
mov
sbb
mov
dec
sarl
hlt
xlat
pop
je
and
sub
ss
arpl
ret
cmp
cmp
pop
fiaddl
lock
xlat
sub
js
push
mov
inc
push
sbb
xor
loope
cli
push
rcl
mov
enter
jnp
push
loope
adc
ss
xor
cmp
pushf
inc
mov
aam
das
pop
push
xlat
inc
mov
push
leave
repz
in
test
loope
pop
in
xchg
and
pop
push
out
imul
push
mov
test
test
aaa
stc
in
gs
inc
add
sub
xchg
adc
mov
test
jo
xchg
std
mov
repnz
push
push
add
inc
stc
xchg
test
push
sbb
stos
dec
mov
xchg
out
xchg
lahf
aaa
sarl
push
popf
mov
push
push
sahf
outsb
xchg
dec
jp
cmp
into
mov
gs
divl
mov
sbb
add
sub
repz
or
jp
jl
repnz
lahf
or
aaa
lds
scas
cmp
fidivs
xchg
push
aad
sahf
dec
jnp
lcall
nop
lcall
lds
daa
add
ficompl
clc
aam
jge
mov
mov
cmp
fldcw
cmp
push
in
out
stos
and
addr16
mov
mov
adc
mov
mov
xorl
sahf
mov
call
mov
jle
pop
jg
jp
les
cs
and
mov
inc
push
pop
mov
popl
idivb
push
cmp
and
fcompl
sub
into
fnstcw
leave
push
jno
leave
mov
cmc
mov
xor
inc
push
mov
pushf
rorl
mov
push
mov
lret
dec
push
ljmp
dec
inc
insl
cmp
sbb
cmp
add
cmp
scas
int3
inc
mov
add
ss
aas
jge
cli
add
sub
push
or
add
sbb
fdivp
es
push
aam
adc
inc
adc
dec
push
xchg
out
add
stc
rcll
xchg
inc
gs
aaa
hlt
arpl
test
out
inc
sbb
dec
shl
fisubrl
mov
movsl
add
dec
pop
stos
loope
loope
cmp
add
add
inc
jae
test
cmpsl
jecxz
icebp
xchg
and
imul
lahf
mov
mov
add
cmc
repnz
dec
enter
dec
cli
gs
mov
shrl
rorl
lret
mov
cmp
repnz
test
add
mov
sub
sahf
fisubrl
mov
aaa
add
jl
cmpsb
jae
out
cltd
nop
sub
outsb
add
rclb
sti
push
mov
mov
cmp
xor
das
mov
stos
out
clc
adc
les
sbb
sub
out
xchg
popf
pop
xchg
xchg
jge
mov
loopne
lock
jnp
cmc
jp
xchg
push
mov
and
es
jno
add
add
sub
aam
sti
cmpsb
xlat
push
bound
mov
and
pop
les
and
pop
pop
jb
pop
inc
std
xchg
lahf
xor
or
aas
push
xchg
pop
xchg
arpl
cld
sbb
pushf
jp,pt
sub
jg
imul
pop
pop
out
imul
mov
push
mov
dec
sbb
insl
lock
cli
je
push
push
int
loope
jns
ja
pushf
mov
sbb
adc
mov
insb
mov
test
xchg
sbb
jne
adc
push
mov
cmpsb
movsb
jp
xchg
sti
fwait
xor
leave
fimuls
movsb
jecxz
jg
sub
insl
sti
jne
pushf
lock
inc
outsl
cld
ja
ret
loop
inc
jl
adc
aam
enter
dec
inc
sub
sti
sbb
push
push
sahf
ret
addr16
roll
push
cmp
mov
dec
pop
mov
dec
ficompl
cltd
in
pop
mov
lock
fmul
and
and
lock
push
test
and
repnz
adc
pop
mov
outsb
mov
lods
lret
xchg
push
pop
add
outsb
mov
ljmp
pop
aad
or
mov
shl
test
xchg
movsl
jae
gs
test
cmp
cmpsb
jl
cmp
cmp
add
dec
mov
push
mov
je
loop
lods
dec
es
cli
int3
mov
xor
lret
stos
mov
testb
dec
lahf
adc
ljmp
lods
or
imul
mov
mov
daa
cli
jae
cmp
sub
pandn
lahf
xor
ret
nop
xor
push
jge
dec
and
and
stos
lahf
sarb
pop
xor
pop
dec
fsubrs
rcl
mov
dec
out
in
sti
push
scas
fs
sbb
adc
loop
std
inc
xor
push
fnstenv
jmp
data16
sti
ss
xchg
lea
or
sbb
mov
or
es
sub
in
into
xor
cmp
stos
dec
or
out
andb
mov
mov
xchg
ror
pushf
pop
cltd
loopne
incb
fists
push
int3
orb
push
fldt
ret
or
test
orb
ljmp
sbb
push
js
test
mov
cltd
mov
pop
imul
or
jno
xor
or
and
dec
pop
push
iret
pop
ficoml
loopne
fnstcw
jecxz
pushf
rol
and
mov
jmp
and
gs
or
inc
lret
stos
push
lcall
inc
mov
rclb
fsubl
adc
cmp
shll
mov
aad
cmp
jp
jg
mov
incb
push
int3
cli
pop
cli
hlt
iret
sub
outsb
mov
jb
push
ret
inc
inc
pop
push
shl
shr
jo
jb
mov
imul
push
sbb
cmpsb
adc
in
push
xchg
gs
in
out
in
mov
mov
call
outsb
dec
pop
mov
leave
jno
nop
aas
jae
mov
test
les
sbb
lcall
clc
cmpsb
fildll
add
out
imul
addr16
xstore-rng
cmpsl
ret
cs
cmp
jno
aas
sub
out
cli
pop
call
push
ljmp
xor
arpl
push
out
add
sbb
ret
or
js
adc
push
or
push
sbb
lock
stos
dec
add
je
jae
lcall
aaa
sbbl
add
lds
popa
push
jge
sti
outsb
mov
xchg
mov
mov
outsl
mov
lret
std
pop
fsubp
pusha
bound
ja
push
in
in
jle
sub
mov
jge
mov
pop
mov
int3
shll
sbb
mov
pop
pop
mov
loope
xor
test
imul
lea
and
pop
jl
dec
imul
lret
arpl
or
cmp
aaa
cmc
jmp
pushf
jb
in
lea
cltd
jmp
je
cmp
stos
pop
dec
mov
sbb
sub
stos
roll
dec
dec
mov
cltd
das
xchg
icebp
lea
fs
or
cs
lea
jg
adc
icebp
jg
jecxz
js
jne
lea
jbe
stos
jl
lods
pop
pop
ds
out
int3
jge
sub
mov
stos
sub
dec
fists
sub
cmp
xor
mov
lahf
stos
push
sbb
and
sbb
mov
rorb
loopne
sub
and
mov
pop
add
pop
cmp
add
adc
push
add
ret
add
inc
ss
rcll
adc
scas
and
or
sub
xchg
insl
xchg
andl
pop
stos
inc
adc
cmp
push
shll
push
xchg
xchg
jns
and
mov
imul
out
or
or
sub
xchg
inc
inc
mov
int3
push
out
mov
jp
mov
sbb
lock
idiv
mov
mov
testb
xchg
mov
lods
popl
xor
js
mov
xchg
sub
adc
xchg
popa
int3
jmp
dec
jle
lret
stc
mov
mov
adc
inc
ds
rcll
mov
cmpsl
in
loopne
jg
xchg
cld
mov
mov
mov
insb
jp
lahf
ljmp
mov
push
rolb
or
in
aas
xor
push
popf
add
xor
or
shrb
push
xor
outsb
rcl
cmpsl
fists
pop
das
sbb
xor
push
mov
xlat
lahf
pop
dec
add
adc
pop
fstpl
test
leave
packsswb
dec
push
pop
mov
int
xchg
mov
fstps
xor
adc
rorl
shlb
dec
pop
mov
mov
ja
push
cmpsl
loop
pop
mov
lods
inc
int
mov
sub
daa
cltd
stos
aas
push
push
jecxz
cli
addb
clc
lea
mov
mov
aas
pop
mov
xor
rcrl
xchg
cld
out
mov
pop
insl
mov
pop
fucom
and
das
sti
fs
fistpll
lods
pop
jne
cmc
nop
pop
pushf
fnstenv
lea
stos
sbb
add
das
cmp
mov
cmpb
cwtl
push
push
mov
dec
xor
nop
add
pop
sbb
insb
aaa
pop
loopne
sub
mov
das
jg
or
add
mov
dec
pop
fstl
and
decl
pop
mov
repnz
jmp
fsts
adc
mov
xchg
repz
imul
cmpsb
or
or
mov
push
push
dec
aam
or
mov
cmp
imul
aaa
int3
lods
enter
jge
fxtract
mov
add
lret
ds
jo
dec
fidivrl
sub
out
inc
add
lahf
mov
mov
pop
jb
js
std
xchg
int
and
ficompl
adc
or
or
push
xor
rol
cmp
mov
out
stos
ret
lcall
ja
out
pushf
cwtl
jl
push
cltd
mov
pop
push
xor
cmpb
fs
dec
lods
adc
jb
mov
xor
xchg
out
sbb
inc
fistpll
push
xchg
push
pop
enter
cs
ret
leave
icebp
mov
xchg
jne
fwait
xor
lock
xchg
sbb
fists
sbbb
or
xor
rorb
add
inc
insb
loop
mov
mov
pushf
popa
or
inc
call
shlb
addr16
popa
dec
out
enter
sahf
lea
pop
mov
adc
lcall
sbb
mov
fs
adc
fimuls
sbb
loopne
sub
call
xor
jmp
call
mov
push
mov
mov
repnz
jb
or
idivb
pop
daa
sub
mov
jg
pop
test
sbb
ja
bound
popf
cwtl
sbb
inc
xchg
jle
fidivrl
lock
pop
sub
sbb
and
cmovg
pop
xor
mov
in
xor
mov
jo
imul
je
cmp
test
int3
ss
dec
sahf
add
mov
jb
mov
imul
leave
fcmovbe
mov
jmp
imul
ret
mov
xor
sub
push
sub
add
xchg
jl
mov
dec
jo
push
aam
cmp
pop
cltd
sub
push
and
mov
xor
test
push
pop
loop
push
add
mov
mov
loope
jns
pop
sahf
rorb
fldcw
adc
xchg
cmp
adc
inc
pop
in
popa
mov
out
xor
sub
cld
out
xchg
mov
jge
mov
repnz
mov
orl
fiaddl
incb
shr
push
add
push
pusha
mov
in
lds
sub
rcrb
sbb
cmp
gs
mov
fcmovb
push
inc
je
cld
add
loop
aas
jl
mov
test
push
cmp
cmp
adc
pop
dec
pop
jg
inc
sub
and
adc
and
cmp
push
fsubr
mov
lods
dec
es
push
push
imul
cmp
xchg
mov
jno
bound
and
dec
or
fcoms
dec
negl
insb
push
inc
out
push
ss
or
xor
cmp
cs
pop
lret
arpl
out
mov
outsb
sbb
in
xchg
jns
mov
daa
aad
adc
addr16
scas
mov
sbb
imul
pusha
sbb
jp
jne
dec
xchg
and
or
or
push
lcall
outsb
xchg
adc
xchg
lea
cmpsb
push
das
adc
ds
test
cwtl
aaa
cmpsb
inc
jge
mov
cwtl
pop
loope,pn
jmp
jo
push
adc
mov
movsl
push
inc
pop
pushf
insb
fwait
lds
leave
cmpl
stos
test
inc
sbbb
jl
xchg
pop
xchg
pop
es
xor
ljmp
adc
adc
push
sub
adc
mov
test
sbb
xor
push
sub
lock
cmp
sub
nop
jl
inc
add
out
xor
add
dec
and
ja
popa
testl
mulb
shll
aaa
shlb
mov
fcomp
addr16
in
aas
fistpll
mov
lods
mov
mov
je
sbb
fwait
ljmp
xchg
sbb
jns
popl
mov
ret
jg
push
mov
jbe
jno
daa
call
push
lods
enter
inc
mov
push
mov
jg
jbe
dec
jo
scas
mov
sub
out
cmp
out
jecxz
sub
mov
ljmp
xor
push
jno
cli
cs
lcall
inc
sub
into
or
mov
adc
and
aam
out
sub
cmp
mov
add
mov
push
jg
decb
pop
dec
stc
pushf
addl
test
cmpsl
mov
add
cltd
lock
orl
stos
nop
or
jb
and
pop
or
sbb
insl
dec
pop
xchg
dec
std
cmp
xlat
int3
and
in
inc
mull
adc
dec
pop
arpl
cmp
nop
adc
stc
jnp
lret
loope
xchg
sbb
adc
push
enter
and
loopne
adc
or
sti
or
push
xor
and
dec
jne
mov
inc
cwtl
lock
out
scas
dec
cmp
cmp
mov
adc
test
sti
roll
lods
xor
fnstenv
jge
test
lods
cmp
sub
test
xchg
mov
daa
mov
ret
mov
push
inc
std
sahf
lret
idivb
or
cmpsl
jmp
cwtl
jne
fadds
mov
rcll
sub
orb
rorl
add
inc
pop
or
xlat
push
dec
jb
repnz
pop
push
push
push
push
shr
aam
lahf
outsl
jl
inc
pop
or
push
into
push
add
xchg
add
cmp
mov
mov
je
data16
mov
dec
pop
jle
sbb
sub
test
in
aaa
lea
lcall
lods
fisttpll
lock
lcall
negl
fsubl
jno
outsb
rcr
jnp
dec
test
mov
add
fsubl
cmp
lods
cli
xor
push
sahf
push
out
dec
jbe
sub
mov
loop
repnz
xor
cmp
jmp
jnp
push
lods
and
lea
adc
cs
inc
push
das
lahf
cwtl
std
loop
mov
lea
push
lods
les
mov
push
hlt
insl
jmp
call
pop
mov
jmp
pop
sbb
xor
out
add
mov
mov
jl
sbb
xor
and
xor
push
movsl
mov
dec
cmp
and
add
pop
sub
mov
xor
sbb
sub
xor
in
sub
inc
in
mov
mul
test
sarl
arpl
fldt
mov
sahf
jnp
mov
dec
int3
adc
dec
ret
jle
lcall
xor
pop
popa
xchg
pop
or
adc
popa
xor
jb
jge
icebp
sbb
pop
rcll
test
leave
sbb
xchg
aam
out
dec
mov
xor
orb
daa
addr16
outsb
pop
push
and
std
mov
sbb
mov
jl
ljmp
adc
dec
fldcw
ja
test
push
outsl
adc
scas
jg
mov
mov
push
mov
sbb
xchg
daa
test
push
ret
push
ljmp
and
add
inc
and
dec
cld
inc
arpl
scas
mov
addl
inc
repz
shl
sub
adc
mov
or
aad
subl
iret
xor
cmpl
repz
sarb
inc
push
rorl
inc
ljmp
fstpl
aaa
lcall
dec
popl
outsl
jle
nop
icebp
pop
test
fcmovb
pop
pop
insb
jg
pop
adc
mov
pusha
sbb
mov
ficoms
xlat
sub
out
push
pop
push
mov
lret
jecxz
push
jecxz,pn
mov
pop
jecxz
js
aas
imul
mov
call
mov
hlt
mov
lret
rclb
dec
sbb
icebp
xchg
lea
roll
push
push
mov
pop
mov
xchg
pop
mulb
iret
movb
ljmp
lahf
shll
lea
sub
push
insb
fimull
fstps
adcl
xadd
cwtl
mov
ret
jns
dec
sahf
mov
push
mov
xor
mov
std
jge
or
pop
xor
cmpsl
fs
xlat
lcall
pop
cmpl
jg
dec
jmp
add
cltd
subl
repz
mov
mov
jg
pop
aad
jno
add
popa
insb
xchg
push
sahf
inc
jnp
sub
pop
xchg
mov
xchg
push
xor
dec
jl
fbld
mov
dec
inc
sbb
jno
push
mov
outsl
sbb
imul
lret
cmpsl
pop
cmp
xor
mov
sub
add
sbbb
mov
repz
xor
movsl
filds
sahf
std
adc
rcrb
and
xor
mov
arpl
lods
sti
adc
pop
mov
cmpl
jbe
mov
in
dec
icebp
fimull
jge
lods
in
and
xor
lret
iret
test
ljmp
jg
int3
ror
rorl
iret
ss
imul
int3
inc
jecxz
outsl
loopne
push
mov
ss
movsl
test
cmpsl
cs
arpl
push
inc
cld
or
mov
negb
js
push
jg
out
or
stc
in
mov
jbe
jg
addb
repnz
fimull
jmp
xor
fildll
popa
cmp
or
and
mov
adc
imul
rorl
push
or
mov
pusha
pop
bswap
sub
in
push
sti
mov
sbb
adc
pop
pushf
aad
in
jne
xor
fistpll
xchg
dec
dec
and
or
mov
cmp
jae
lret
mov
test
fs
pushf
pushf
lahf
mov
push
xorb
mov
lcall
orl
scas
mov
mov
push
popa
mov
mov
lods
push
mov
adc
inc
mov
inc
inc
scas
or
stos
pop
lret
fnstcw
push
push
push
inc
pop
inc
insl
mov
sub
loopne
aam
pop
sbb
pop
xchg
sbb
outsb
pop
push
push
in
std
adc
mov
dec
je
lock
jne
mov
adc
out
rcl
loope
inc
jns
sbb
push
mov
pop
test
movsl
cmp
inc
jl
cli
loope
xchg
jne
shl
mov
dec
mov
push
imul
xor
or
jbe
lods
je
int
or
adc
add
test
es
cld
sbb
movsl
and
mov
aaa
pop
cli
cmp
hlt
jle
mov
int
inc
ds
fildll
jo
scas
test
pop
xor
xchg
pop
inc
and
mov
popf
and
cmp
dec
imul
add
out
add
xchg
shrl
int
cmp
dec
stos
and
int3
popf
jae
dec
xchg
xor
push
xchg
mov
pusha
cmp
adc
add
push
pop
sub
mov
out
pushf
push
or
add
mov
out
adc
loopne
mov
push
pop
xchg
test
adc
mov
fdivl
xchg
test
jno
cs
je
sbb
sbb
jb
sub
mov
ljmp
jo
repz
add
jmp
jno
test
pop
inc
cs
mov
add
das
aad
xchg
iret
xchg
dec
mov
add
arpl
push
cmp
test
jecxz
add
xchg
inc
jmp
dec
cmp
aam
push
stc
sahf
adc
leave
sub
divb
enter
inc
call
lahf
out
out
mov
dec
in
xchg
lret
or
xchg
lods
daa
cmp
or
jne
mov
pop
outsl
xchg
outsl
inc
nop
insb
xor
test
cli
mov
adc
add
mov
inc
inc
push
jmp
lds
and
and
or
lock
aad
sbb
jae
gs
xor
cmp
push
and
inc
mov
jo
fdivrp
in
adc
and
cltd
clc
out
call
xchg
or
nop
xorb
mov
imul
es
cmp
int3
mov
pop
rolb
push
daa
cltd
outsl
nop
xor
pop
adc
jno
push
dec
in
aas
mov
jge
fidivs
push
icebp
arpl
outsb
mov
cs
pop
and
mov
adc
xorb
jmp
in
cmpsl
test
std
bound
cmp
sbb
mov
push
dec
xlat
pushf
dec
pop
in
mov
xor
cmp
fs
data16
xchg
movsb
pop
sti
hlt
aas
dec
ljmp
testb
or
jbe
movl
and
lods
pop
mov
xor
pop
out
int
dec
mov
sbb
push
ljmp
cmp
pop
and
adc
inc
mov
in
xchg
lods
div
mov
scas
in
cmp
cmc
into
add
mov
insb
lea
xorb
fsubl
xor
fldt
add
stos
dec
xor
xlat
jo
mov
mov
mov
jb
fwait
xor
cmp
jo
roll
scas
fwait
sub
je
adc
popf
frstor
and
dec
dec
and
pop
sub
adc
pushf
pop
sub
cmp
lods
push
lcall
loope
mov
hlt
mov
mull
xor
xchg
and
xchg
ja
ds
andb
and
jmp
add
aam
cmc
inc
mov
mov
sbb
shrb
or
pop
mov
int3
pop
xchg
cmp
add
out
sub
scas
fadd
pop
xchg
xchg
mov
add
mov
push
or
push
jmp
ljmp
je
rorl
xchg
adc
push
sub
mov
stos
inc
sar
imul
iret
ljmp
addr16
mov
daa
dec
jge
in
push
js
cmp
and
push
dec
push
jecxz
test
stos
jg
push
stos
push
notl
mov
gs
xor
jae
push
add
jae
sbb
pop
insl
outsb
xchg
sbb
adc
ljmp
pushf
add
sub
push
jmp
mov
enter
or
inc
push
mov
shll
bound
inc
movsb
rclb
stos
jno
jo
or
aaa
adc
sub
test
roll
iret
fstpl
fmull
push
gs
mov
or
lock
mov
fistpl
enter
faddp
cmp
dec
push
popf
jecxz
lcall
cmp
mov
dec
imul
and
xchg
lds
aas
push
out
cmp
and
ljmp
mov
stos
cmp
xchg
ficoms
mov
cld
insl
es
xor
sbb
pop
jle
push
jl
test
or
shrb
aas
jecxz
sarl
testl
mov
adc
sub
hlt
mov
mov
add
sbb
cli
cld
mov
push
test
es
push
push
sti
mov
fdivr
add
mov
rcrb
inc
or
cmp
lret
mov
mov
icebp
fcomps
daa
into
mov
dec
test
fisttpll
push
fs
pushf
push
jp
xchg
fistl
aad
test
push
outsb
sti
cwtl
fcomp
cld
sti
push
cs
jecxz
fisubl
adc
jmp
rolb
push
jo
lock
lret
sbb
jl
pop
ficomps
add
cmp
loop
ret
cmp
pushf
aas
mov
lods
repz
loop
sub
sbb
push
and
fwait
xor
pop
mov
sub
mov
inc
add
sub
dec
hlt
jno
leave
jnp
or
cld
clc
xchg
insb
stc
aad
dec
mov
sti
stos
jae
enter
mov
outsl
call
sbb
xor
mov
call
cmp
inc
data16
fists
cmc
das
movsl
jecxz
jns
sbb
cltd
pusha
sbb
cmp
stos
sbb
daa
sbb
xor
lea
inc
imul
sbb
mov
lret
addb
sbb
and
shr
inc
or
mov
xchg
imul
outsb
jp
aam
xor
sahf
inc
cld
setns
rorb
arpl
xchg
out
daa
or
jle
inc
push
dec
scas
dec
fs
lret
cmp
loope
cld
cmpl
mov
mov
cmp
cmp
mov
or
mov
shrl
lock
and
cmp
jl
and
dec
stos
addr16
gs
cmp
aaa
or
in
nop
jg
insl
add
fistpl
adc
nop
push
mov
cs
sub
int3
adc
imul
mov
xchg
push
test
dec
repnz
or
jb
shrl
jns
mov
test
mov
sbb
hlt
pop
sbb
sarb
cmpl
in
int
dec
cwtl
lea
mov
inc
sbb
and
mov
pop
lret
mov
insb
out
popa
fbstp
sub
pop
adc
mov
jmp
emms
xchg
movsb
hlt
mov
jle
xchg
fsubs
add
jmp
sbb
push
inc
or
addr16
or
das
je
xchg
popa
xor
cli
stos
xlat
arpl
repz
xor
je
and
hlt
fnstcw
cmpsb
mov
jne
sbb
pop
fcmove
push
mov
sub
adc
sub
stos
adc
clc
adcb
dec
scas
xchg
sub
nop
aas
and
aas
jo
loopne
xchg
sbb
hlt
sbb
negl
adc
pop
paddusw
clc
ljmp
ret
es
push
sub
push
js
and
mulb
rep
sbb
inc
mov
cmp
popa
bound
mov
xchg
lods
mov
pusha
or
cmp
in
sbb
aas
dec
and
test
cmp
inc
push
sti
lea
cld
adc
dec
and
mov
sbb
shrb
xchg
je
push
pop
imul
int
scas
mov
test
jbe
jno
sub
dec
subb
mov
inc
inc
outsb
push
adc
call
mov
xchg
inc
push
xchg
or
dec
scas
or
add
pusha
int3
int3
push
push
fistpl
ror
inc
push
and
dec
rcll
mov
add
add
das
xchg
xorl
mov
dec
mov
cltd
insl
inc
ss
iret
arpl
fldenv
mov
mov
pushf
adc
outsb
sbb
add
fcomp
xchg
jo
add
push
jae
jmp
mov
mov
cmp
das
adc
in
pusha
loopne
test
or
cmp
aas
sbbb
jle
in
movsb
inc
ret
das
xchg
mov
aaa
gs
xchg
sahf
pop
dec
sbb
sub
cmp
repnz
and
cwtl
fcoms
lcall
cmp
pop
or
sbb
inc
push
jmp
sti
gs
cmp
pop
mov
in
out
sub
pushf
shlb
cmpsb
bound
cmp
lcall
mov
loope,pt
inc
cli
cmpl
popf
imul
fistpll
rcll
mov
in
mov
movsl
adc
sub
pushf
icebp
scas
mov
or
push
loop
aam
mov
xlat
das
out
xchg
jb
sahf
enter
cwtl
xor
nop
popf
pop
mov
jp
jle
jle
cmc
jl
stc
push
xlat
jb
lcall
mov
adc
add
scas
pop
or
add
or
insl
and
std
addb
out
lock
jae
test
mov
in
gs
repz
lahf
fists
repnz
sub
mov
rcr
lea
mov
push
popa
aas
adc
cmp
adc
pop
adc
aam
xlat
test
jg
mov
rclb
out
rcr
fs
xchg
xchg
lcall
sbb
push
adc
pop
sub
outsb
pusha
dec
xor
jae
sub
scas
pop
sbbl
mov
sub
xchg
jbe
jmp
xchg
xor
dec
loop
fiaddl
rolb
adc
gs
rol
jecxz
hlt
push
lcall
pusha
out
jns
cltd
scas
leave
idivl
xor
cmp
adc
mov
jge
jl
arpl
outsb
mov
xor
cmp
sarb
pushf
inc
xchg
inc
out
mov
cld
cltd
stc
testb
add
mov
cltd
xchg
loopne
jnp
rcl
xlat
loopne
fucomp
stos
add
fnstcw
lcall
or
and
mov
lret
jle
nop
leave
movsl
jge
mov
dec
inc
les
clc
iret
dec
push
cld
jb
push
mov
leave
or
push
pop
cs
into
fdivs
xchg
sbb
fwait
jns
sbb
ja
xchg
cli
inc
or
adc
cmp
add
push
dec
dec
fistpl
xchg
mov
orl
push
dec
ror
jl
adc
mov
push
dec
lret
test
movsb
subb
stc
mov
adc
inc
movsl
ljmp
addr16
dec
cli
out
mov
in
mov
fwait
jmp
push
push
nop
cmpsl
xor
out
push
lahf
push
test
push
je
jbe
loopne
nop
lahf
push
out
add
outsl
jg
ds
stc
jmp
gs
out
jns
fidivrs
in
ret
xchg
clts
in
js
mov
fcoms
imul
inc
xor
mov
data16
and
cltd
arpl
call
adc
xor
push
andb
mov
roll
iret
ret
push
rcrb
xlat
daa
leave
mov
and
out
mov
jge
in
pop
movsb
dec
test
jecxz
xchg
and
daa
add
dec
insb
insl
sub
xorb
clc
std
or
inc
dec
sub
xchg
out
jo
dec
test
dec
sbb
scas
mov
pushf
test
sbb
es
mov
dec
sub
loop
or
imul
cmpsb
adc
pop
aam
cmp
je
in
mov
cld
mov
and
ljmp
test
lds
enter
std
lods
fs
mov
push
lock
sahf
xchg
lods
outsl
mov
andb
int3
or
xlat
pushf
mov
sub
sub
fxch
push
stos
xor
push
iret
aas
pop
push
ja
mov
add
lds
aas
lahf
andl
faddl
lods
out
cmpsl
clc
inc
mov
mulb
cld
jl
fdivrs
dec
adc
jno
push
cli
adc
rcll
mov
cmpsb
rorl
mov
es
bound
inc
inc
ja
inc
sbb
adc
mov
ret
or
push
fwait
lret
push
in
jnp
xor
cmp
mov
or
jmp
mull
out
and
push
pusha
inc
push
lcall
movsl
outsl
pop
das
rolb
adc
cmp
dec
pop
sbb
sbbb
xchg
or
add
les
lds
ja
les
out
test
and
popa
cmc
mov
mov
cwtl
in
xor
jmp
aam
pop
mov
push
out
fidivl
test
mov
pop
sub
jbe
inc
dec
add
and
or
sub
inc
adc
cmp
mov
sbb
mov
mov
xchg
ds
mov
sub
xor
subl
xchg
fsubr
jno
pop
mov
xor
lahf
cmp
pop
inc
pop
addr16
pushl
jl
and
cmp
jmp
lock
jg
test
or
mov
mov
cltd
es
and
mov
int
addr16
mov
mov
jp
out
sar
into
clc
mov
fisttps
lcall
cmp
xchg
jge
and
adc
notl
ret
jmp
inc
sti
lcall
les
sarb
or
cmpsl
int3
and
out
into
or
mov
addr16
inc
xchg
add
adc
mov
pop
cmp
idivb
fildl
and
sahf
and
ds
loop
stos
pop
add
fisubl
movsl
or
test
pop
pop
cwtl
and
jae
sbb
cmp
sub
cli
loope
scas
hlt
int3
out
add
sub
ljmp
stos
notl
mov
cld
lahf
lock
call
repnz
jnp
stc
fistl
mov
mov
sub
imul
add
add
ss
xchg
push
in
rol
stos
mov
ret
xor
cli
sub
in
loope
lock
fidivl
lods
adc
dec
mov
or
cmp
push
pop
sbbl
inc
push
into
cmpb
lods
add
cmp
mov
std
insb
adc
xor
pop
popl
sbb
in
and
movsb
mov
mov
xchg
pop
cmp
rcrb
jo
shll
and
negb
imul
dec
sbb
dec
adc
jae
sti
sub
cmp
add
mov
mov
jl
pop
in
inc
movsl
dec
sub
push
inc
dec
mov
sub
xchg
cmp
pop
imul
pop
and
pop
pop
xchg
push
xor
rcrb
add
and
dec
sbb
adc
sbb
jns
sbb
imul
mov
cmpsl
popl
das
scas
or
faddl
jno
mov
out
loop
or
lods
mov
test
outsl
jne
cmp
add
fidivl
test
jnp
push
insb
int3
ja
ss
hlt
in
dec
ljmp
jl
push
add
mov
xor
inc
sub
idiv
fs
insb
and
dec
ss
and
std
sbbl
ja
inc
daa
and
inc
and
or
push
repnz
inc
adc
pop
jo
sbb
adc
fwait
cwtl
call
adc
dec
dec
out
push
movsb
adc
jo
aaa
add
pop
mov
lds
rcll
add
test
push
sub
jmp
push
pusha
jmp
cmp
mov
and
jecxz
sbb
and
enter
jbe
insl
popl
cmc
testb
dec
mov
jae
cltd
fisubl
out
mov
dec
fimull
ret
outsl
sub
mov
and
jno
in
movsb
adc
xchg
daa
sbb
fisttpll
jns
mov
xchg
xchg
and
mov
add
cmc
xchg
aam
outsl
mov
imul
mov
icebp
adc
fwait
lds
lret
out
mov
inc
xor
xchg
ljmp
inc
jp
mov
mov
pop
lods
or
cmp
mov
int
push
fistpll
jnp
scas
cmpsl
and
mov
mov
jmp
inc
lods
mov
scas
pop
pop
xchg
sahf
shrb
dec
and
fnstsw
fstps
jb
jns
jle
aam
dec
adc
lahf
or
or
pop
in
pop
cmp
js
add
imul
negb
sti
fidivrs
xor
jbe
adc
mov
add
pop
enter
xor
xor
mov
out
pushf
lret
fs
mov
outsb
outsl
insb
out
pop
addl
cmp
inc
into
add
popf
insl
lods
leave
insb
iret
lea
jl
push
stc
pop
out
mov
pop
mov
push
repnz
inc
testb
in
jb
and
push
popa
cld
lcall
ror
and
inc
lahf
daa
cmp
pop
jle
jne
cli
aas
or
push
lcall
mov
out
je
xchg
fdivl
dec
fs
jb
xchg
out
push
cmc
js
movsl
add
fsubrp
lret
mov
mov
sub
push
add
rclb
cmp
out
mov
int3
outsl
fisubrs
push
int3
mov
inc
xchg
lock
fnstenv
notl
lods
sub
data16
test
ja
push
sbb
mov
test
out
sti
push
sbb
jb
je
mov
dec
xor
fsub
jp
add
movl
mov
dec
and
inc
movsl
rcll
pop
orb
cmovle
sbb
aad
mov
push
data16
xor
test
mov
xchg
repz
push
scas
call
add
push
fisttps
call
mov
mov
cli
fcmovu
sti
aas
xchg
jg
xchg
sbb
out
stos
adc
xchg
cltd
mov
lcall
push
cltd
ret
insl
loop
lock
imul
in
hlt
arpl
fs
das
xor
loop
mov
cmpsb
mov
push
incb
leave
daa
xor
and
icebp
inc
dec
jle
aaa
les
scas
das
icebp
mov
in
test
testb
mov
imul
add
in
lods
dec
scas
jae
rcrb
aaa
cltd
mov
orb
lcall
pop
or
and
sub
cltd
stc
push
repz
js
lahf
cmpsl
xchg
shll
or
mov
mov
mov
mov
shlb
xchg
and
out
mov
jb
jl
adc
sub
add
push
ljmp
inc
stos
push
sti
fidivl
mov
jne
adc
push
pop
add
mov
mov
jge
adc
fsubrs
nop
rorl
std
mov
inc
cmp
mov
outsb
sub
jp
fbld
fistpl
lahf
arpl
xchg
in
sbb
mov
or
inc
fcomip
xor
dec
pop
stc
aad
push
outsb
or
in
mov
ret
add
inc
out
mov
in
push
out
mov
adc
mov
into
aam
sub
sub
leave
add
sbb
xchg
sub
sub
pop
push
mov
test
cmp
imul
inc
or
scas
push
jo
popa
and
mov
js
adc
mov
outsl
lods
inc
imul
xchg
dec
dec
dec
repz
push
or
push
dec
push
xlat
and
dec
add
sub
pusha
pop
pop
fcoml
xchg
sub
dec
xorb
sub
mov
je
push
sbb
movsl
push
sub
popf
clc
pushf
push
dec
jne
cmp
cld
jb
lret
pop
xor
aas
test
dec
xor
scas
inc
shll
loop
dec
mov
repnz
mov
mov
add
jno
daa
das
xchg
push
cmp
or
out
int
fadds
mov
test
dec
fcmovu
sbb
cmp
mov
repz
lods
xchg
ja
pop
fidivl
xchg
rcrl
inc
lahf
cmpsb
sbb
cmp
mov
jmp
mov
fadds
inc
lcall
cld
jecxz
add
mov
adc
jp
xor
push
ret
jge
test
aaa
lret
push
sarb
mov
scas
and
in
loop
in
sarb
cmp
cmp
adc
push
dec
cmp
ss
xchg
rolb
insl
inc
mov
test
inc
adc
jg
add
fmuls
jbe
cli
sbb
mov
iret
arpl
dec
mov
into
dec
pop
fdivl
data16
clc
shrb
inc
mov
jne
sub
adc
gs
mov
mov
arpl
sbb
and
out
orl
mov
cltd
dec
je
rcr
popf
sbbl
xchg
mull
sahf
enter
aaa
mov
pushf
adc
xlat
sbb
cmp
add
fcom
jae
sbb
jne
arpl
pop
jl
imul
sbb
dec
jns
add
pop
pop
dec
cld
jno
push
dec
sbb
mov
cmpsb
mov
fucomip
aam
lods
out
movb
xchg
popa
mov
dec
das
scas
dec
and
icebp
lret
loopne
lret
dec
lret
mov
mov
jo
mov
addl
mov
xchg
ljmp
daa
cmpsb
dec
cmpb
mov
sahf
in
lahf
jnp
push
and
outsl
mov
into
arpl
inc
js
inc
out
or
scas
hlt
test
sbb
daa
movsb
mov
push
inc
mov
sub
dec
std
lret
mov
pop
sbb
cmp
inc
inc
je
rcrl
pop
cmp
xor
jp
jecxz
icebp
out
test
inc
mov
inc
dec
xchg
pop
mov
mov
xchg
xor
in
and
js
mov
dec
xchg
pop
mov
sbb
pop
lret
rcrl
inc
jno
in
push
enter
mov
loopne
arpl
jl
or
scas
sbb
xor
push
andb
outsl
mov
or
lahf
cwtl
pop
inc
scas
or
sti
push
insl
adc
mov
sub
pushf
cmc
out
and
gs
cmp
aam
cmp
mov
cmp
repz
mov
push
std
xchg
mov
data16
mov
xchg
mov
daa
scas
cmp
hlt
lock
jge
push
dec
dec
dec
mov
in
enter
sbb
loopne
xlat
int
cld
cmp
lods
cmp
gs
adc
dec
andl
popf
lahf
out
adc
lods
push
cmp
aad
xchg
test
lods
mov
cwtl
sub
sbb
shrl
pop
cld
addr16
stos
ds
and
out
sysret
inc
in
lock
inc
or
mov
loope
adcb
mov
inc
in
cmp
mov
dec
and
cli
xor
jnp
sbb
dec
dec
scas
xor
test
lock
insl
in
xchg
xchg
js
movsl
add
scas
inc
sbb
fcoml
dec
shll
iret
hlt
mov
pop
jl
mov
mov
aaa
push
filds
or
add
mov
mov
fsubs
lret
sub
push
cmp
mov
mov
mov
and
out
or
out
cld
mov
inc
and
mov
stos
pop
jne
mov
or
testl
scas
cmovle
arpl
mov
pop
jne
adc
cli
and
lods
fs
jbe
incl
mov
xchg
clc
rol
sub
lods
subb
mov
test
mov
xchg
ljmp
or
inc
cmp
arpl
and
cmp
inc
xor
cltd
outsb
jo
fists
add
notl
cmp
inc
or
scas
in
or
in
ja
aas
sbb
pop
mov
xchg
push
mov
inc
mov
lret
xor
xlat
push
add
cmp
adc
or
lock
ja
and
add
xor
insb
jne
xchg
jmp
mov
xlat
or
add
mov
sbbb
adc
dec
ret
add
movsl
imul
pop
dec
fistpll
sbbb
sub
adc
push
pusha
xchg
into
out
push
std
xor
idivb
outsl
pop
xchg
jl
push
push
inc
lcall
fxch
pushf
arpl
fisubrl
sbb
mov
or
jo
loope
pushl
dec
out
pop
jp
arpl
inc
and
les
mov
icebp
jae
fisttpl
push
loop
sahf
xorl
insb
inc
adc
outsb
cmp
sbb
jbe
sub
xchg
push
addr16
repnz
cwtl
xchg
add
repz
xchg
stc
ret
pop
negl
pop
pop
sbb
mov
int3
insb
inc
popf
loopne
out
orl
es
arpl
push
int
add
imul
daa
dec
ss
mov
mov
insl
dec
pushf
push
rcrb
xor
leave
cltd
xor
pop
sub
es
rcl
adcl
dec
or
xor
xor
sti
arpl
sarl
mov
mov
out
outsb
cmpsl
mov
dec
out
jmp
scas
sub
mov
push
jae
sub
in
xor
dec
jge,pn
pushl
pusha
ja
mov
popf
pop
mull
jl
lds
das
mov
and
sub
test
subl
dec
out
adc
add
add
push
jbe
or
mov
sbb
test
xchg
cltd
cmc
mov
ja
icebp
add
mov
stos
xor
fsts
push
stc
daa
add
mov
fldl
xor
aas
dec
outsl
and
in
mov
pop
mov
sbb
stc
xlat
pop
cltd
fidivs
push
repz
add
fnstsw
and
jmp
call
pop
adc
inc
loop
sti
testb
and
repz
inc
les
dec
jbe
divl
push
jl
in
addr16
push
loopne
or
sbb
scas
daa
pusha
shl
cltd
ljmp
shlb
xchg
js
cld
loopne
stos
lcall
fwait
testb
imul
test
test
test
in
sbb
mov
xor
or
fst
mov
arpl
rolb
and
outsb
ljmp
into
fisttps
fs
iret
addr16
mov
ror
ds
sbb
adc
enter
add
sub
xor
or
push
mov
mov
cltd
gs
data16
dec
ret
sbb
adc
push
repnz
pop
xchg
stos
dec
mov
mov
sbb
sub
cwtl
mov
pop
cs
pop
lock
push
in
sbb
scas
push
xor
out
and
mov
je
xchg
xchg
in
lock
inc
mov
mov
decb
out
sahf
loop
stc
jge
push
int
pop
aam
sub
mov
fs
ds
sbb
mov
js
sub
pop
loopne
mov
inc
xchg
jle
xchg
ds
jmp
and
mov
jns
lcall
dec
js
push
mov
stos
dec
out
adc
pop
sub
in
out
repz
cmc
mov
jno
sub
xchg
push
mov
pop
in
jno
mov
cmc
ret
xor
scas
or
dec
movsb
cmp
push
cmp
push
loop
cs
insl
sub
lods
pop
cmp
daa
sub
test
fcoml
out
and
push
cmp
stc
in
xchg
ljmp
mov
ror
sbb
xchg
insl
push
jnp
jno
dec
loop
sbb
outsb
inc
jg
pop
jns
mov
push
lahf
mov
sar
inc
xchg
lods
inc
leave
movsb
popa
mov
add
cmp
cmc
push
loopne
fadds
ss
ljmp
aaa
push
test
mov
mov
testl
push
stos
xchg
arpl
leave
mov
imul
into
aad
pop
aas
stc
std
loope
inc
ret
mov
mov
shrb
add
add
aam
ret
add
jmp
lea
fsubl
fcomps
push
add
mov
dec
adc
sti
and
enter
xlat
out
std
rorl
sub
and
lcall
push
mov
lock
mov
mov
js
cmc
lock
dec
add
mov
dec
and
lock
mov
icebp
inc
nop
cmp
xor
pop
inc
mov
pop
fcompl
filds
mov
ret
push
loop
sub
dec
imul
inc
nop
jmp
jge
inc
out
push
or
imul
fucomip
cmp
insb
or
in
mov
push
xchg
dec
xorb
push
add
ja
jnp
push
iret
xchg
jb
and
daa
daa
xor
test
pusha
les
mov
jl
sub
std
clc
fisubrl
cmc
mov
mov
fdivr
das
mov
pop
dec
jns
stos
ljmp
pop
jmp
mov
rolb
pop
push
ud2
sub
sbb
sub
loop
cmp
cmpsb
pop
adc
mov
add
inc
and
mov
pop
sbbb
testl
in
jb
lds
scas
scas
leave
jle
filds
aas
test
cmpsb
arpl
scas
mov
andb
mov
loopne
imul
mov
pop
enter
cmc
fsubs
sahf
push
cwtl
adc
pop
and
les
cmp
stos
in
xchg
clc
aas
mov
jg
add
push
mov
add
xchg
sti
ja
mov
dec
push
sbb
shlb
test
cmp
lret
xchg
sub
rcl
in
nop
loope
aam
pop
stc
pushf
cmp
mov
xor
adc
lock
icebp
jo
in
mov
push
test
fmul
dec
jne
jl
fs
or
jge
movsl
jl
jnp
mov
mov
stos
cmp
lds
dec
fs
pop
lds
xchg
fistps
mov
dec
or
adc
jle
mov
shrb
add
idivl
fs
lods
push
das
rcl
cmpsl
repnz
test
mov
decb
push
adc
xchg
mov
push
jecxz
sbb
fs
iret
inc
inc
mov
cmpsl
adc
mov
mov
sub
push
imul
jecxz
out
xchg
jmp
jbe
push
outsl
outsb
inc
push
dec
stos
lock
cmpsb
mov
ret
or
mov
adc
mov
out
je
fldt
inc
and
movsl
inc
scas
pop
pop
pushf
lods
lods
loope
inc
lea
mov
mov
icebp
inc
mov
lods
pop
insl
and
movsb
fisttps
sbb
jns
sub
pop
sbb
cmp
mov
xchg
pop
jmp
xor
test
mov
inc
pop
ljmp
fsubrl
fwait
sbb
and
pusha
xchg
lret
hlt
jle
dec
mov
hlt
xlat
aas
cwtl
fwait
ja
inc
cmp
test
lea
rcll
ret
push
aas
jecxz
sub
outsb
pop
mov
add
pop
jg
call
aad
in
push
sbb
fmuls
inc
push
pop
jmp
sahf
cs
xor
ljmp
mov
add
or
xor
hlt
xchg
or
mov
jns
fbld
inc
roll
xchg
dec
shll
fimuls
mov
imul
inc
cmp
cli
fwait
clc
sbb
fscale
testb
int3
or
mov
xorl
jne
js
test
aam
pop
imul
repz
out
and
fisubrl
pop
mov
mov
mov
adc
les
gs
push
sbb
ja
push
iret
fidivrs
in
negl
inc
pop
out
jmp
xor
je
cld
pusha
jmp
push
mov
ret
lcall
mov
mov
ljmp
hlt
mov
test
lods
jb
ds
push
mov
xor
sbb
daa
mov
cmc
inc
hlt
adcl
xor
and
dec
dec
into
mov
popf
jecxz
sbb
insl
and
es
lahf
iret
pop
xchg
faddl
pushf
adc
insl
push
outsl
dec
push
pop
xchg
jns
xchg
xor
cmp
inc
fs
xorl
lahf
pop
pop
cmp
inc
dec
jl
push
loope
sbb
cmp
das
repz
mov
insl
test
mov
dec
popa
inc
pop
sbb
jge
dec
divl
xchg
or
mov
in
cmp
iret
and
insb
jmp
jno
xor
xchg
js
push
cmp
add
add
rcl
sub
fmuls
or
das
xor
mov
mov
orl
scas
in
sub
add
xchg
std
icebp
test
out
push
jns
faddp
insl
sub
arpl
adcb
xchg
mov
ds
lods
jae
dec
std
push
dec
leave
jmp
imul
hlt
lods
mov
xchg
ret
mov
push
push
jle
and
test
mov
adc
sub
mov
idivb
mov
lret
mov
dec
lret
hlt
call
dec
cmp
fwait
xchg
jecxz
pop
fstl
jge
jo
dec
stos
mov
iret
push
pop
movsl
and
rorl
lcall
outsb
push
ss
jge
push
das
and
adc
in
push
ficompl
mov
or
pop
fdivrl
scas
lea
push
push
std
in
jl
pop
sbb
jae
je
fldenv
ljmp
jbe
out
fstps
add
mov
adc
dec
stos
push
and
mov
mov
add
ficomps
mov
notb
cmpsl
mov
and
mov
push
push
das
repz
pushf
loopne
call
jecxz
vpminub
mov
push
mov
cmp
stc
inc
push
jecxz
les
xor
in
or
mov
imul
incb
xlat
lcall
inc
push
ss
in
jle
ret
pop
in
jg
dec
push
xchg
scas
inc
fildl
add
stos
add
inc
sbbb
xchg
sub
mov
out
jl
pop
outsl
into
lahf
mov
lock
sbb
inc
adc
aad
and
lods
pop
push
mov
rcrb
mov
fucom
ret
push
scas
pop
ja
and
movsb
push
cltd
xor
or
mov
push
adc
js
aas
test
call
xor
or
imul
cld
dec
dec
ljmp
push
popf
inc
insl
inc
or
mov
pop
mov
aaa
icebp
imul
dec
jne
loopne
and
nopl
mov
pop
jnp
jge
push
adc
jne
scas
pop
dec
je
sbb
push
fimuls
jle
ljmp
sahf
pusha
xchg
fidivrs
xchg
push
outsl
ret
pop
aaa
out
sti
rcrb
mov
jae
lret
js
shrl
cmp
addb
adcb
dec
lret
fs
adc
and
and
pop
xor
dec
pop
dec
in
pop
rclb
jo
sub
pop
jmp
cmc
fwait
or
cmp
ljmp
push
fwait
add
inc
pusha
cmpsl
imul
adc
fidivs
loope
jns
outsb
mov
xor
jae
dec
in
mov
out
cs
int
jg
jb
enter
call
sub
std
stos
repz
scas
mov
and
rolb
mov
jmp
ja
sbb
jno
aaa
mov
fistpll
sub
inc
xchg
stc
pop
iret
pminsw
push
cmp
mov
rolb
fsubl
and
dec
push
sbb
je
int3
push
scas
outsl
stos
inc
rcr
out
or
int3
fwait
sbb
cltd
push
push
mov
cmp
xor
cmp
pop
leave
aas
mov
pushf
out
inc
pop
aam
cmp
mov
jle
hlt
cmp
xor
outsl
dec
ss
dec
mov
sbb
aad
jp
icebp
leave
lcall
sahf
dec
test
mov
sub
fimuls
cwtl
jmp
out
xor
mov
sbb
sub
inc
pop
fs
fwait
add
and
push
in
std
sub
in
pop
mov
repz
add
mov
fiadds
mov
imul
inc
cltd
negb
adc
jne
or
clc
shrl
mov
jecxz
stos
pop
jle
test
dec
loop
leave
inc
and
adc
dec
xorl
add
dec
xchg
add
sub
adc
punpcklwd
lea
cltd
mov
lock
aas
repnz
push
loopne
je
ljmp
xchg
push
test
mov
sbb
out
sbb
fcompl
jl
out
psubq
mov
mov
daa
lahf
insb
es
ljmp
mov
xchg
scas
outsl
fsubrs
sbbb
lds
push
scas
lret
ds
testl
rolb
adc
pop
fsubrs
pop
addl
lcall
xchg
push
lcall
dec
adc
mov
push
insb
or
inc
sbb
lret
fldenv
iret
ret
sarb
mov
jmp
mov
arpl
je
push
pop
loopne
leave
cmc
mov
jbe
ss
xor
andb
xor
scas
lcall
jmp
mov
pop
shrl
ljmp
mov
aas
xor
pop
dec
movsb
add
aad
into
fs
ficoms
sbb
rorl
sub
pusha
mov
mov
and
pop
pop
mov
add
fidivs
pushf
sub
cmpsl
das
clc
dec
out
mov
lret
sarb
cmp
xor
stos
inc
dec
mov
xor
jg
movsl
inc
mov
aam
pop
icebp
data16
iret
fistl
test
adc
push
inc
jbe
xchg
shr
rcll
test
push
sub
cs
or
stc
imul
std
mov
adc
cmpsb
into
mov
andb
mov
pop
inc
out
icebp
insb
enter
adc
cmp
push
sub
jmp
mov
jle
lret
dec
negb
in
std
pushf
cmpsb
mov
loop
jae
fldl
and
orl
xor
mov
jb
dec
jle
lds
xchg
sbb
mov
mov
roll
shll
dec
mov
xor
push
repz
mov
lods
movsb
xchg
inc
mov
cmpsl
jo
scas
daa
mov
insb
mov
rol
test
addl
inc
xchg
popa
sbb
clc
xor
and
push
enter
fistpll
jp
push
jne
sub
inc
test
or
je
cmc
subb
or
mov
and
push
jp
dec
loope
addr16
jmp
mov
out
and
and
out
and
pusha
sbb
ljmp
adc
rcll
cltd
sbb
push
mov
sbb
sub
leave
sub
mov
mov
and
add
sbb
pop
fsubrs
push
lret
clc
mov
cltd
dec
icebp
cmp
insb
movsb
xchg
add
mov
xchg
testb
rolb
mov
dec
xor
movsl
stos
jno
sub
xor
mov
xchg
sbb
mov
xor
call
sub
test
iret
sbb
mov
icebp
jo
adc
ds
jp
clc
push
jo
fldenv
mov
outsl
xor
sub
sbb
lock
nop
mov
fsubl
jmp
pop
inc
jl
das
imul
or
push
rorl
mov
cmp
int3
cmp
adc
popa
sub
cmp
dec
dec
jge
dec
call
or
cmc
jecxz
mov
bound
out
inc
lock
push
clc
aad
cmp
dec
push
push
and
jbe
mov
dec
mov
lods
js
mov
fimull
pop
rclb
outsb
dec
ss
outsb
or
jne
dec
and
fcompl
aas
jnp
inc
ret
push
pop
pop
out
push
xchg
and
test
ror
sbb
loope
cmp
mov
mov
lahf
fistpll
jne
push
mov
mov
mov
cmc
repnz
jle
ljmp
and
out
jnp
stc
sbb
jmp
rorb
sbb
push
add
adc
hlt
es
dec
xchg
fiadds
rcrl
push
shrb
push
sub
mov
add
ljmp
or
xor
lcall
pop
scas
in
add
int
shrb
rolb
or
sbb
imul
inc
addr16
push
pop
or
leave
popl
push
jne
push
stc
mov
not
mov
adc
adc
pop
adc
dec
mov
inc
fiadds
movsl
dec
cwtl
mov
adc
out
fsubr
stc
pop
fbld
mov
inc
scas
dec
fbstp
sar
xor
or
push
or
decb
adc
aas
mov
adc
mov
pop
aas
into
ret
out
or
push
add
inc
cltd
sbb
insb
decb
ss
outsl
push
xchg
inc
aas
xlat
xchg
mov
lea
cmp
mov
mov
clc
mov
loope
push
mov
addr16
movsb
jno
push
xchg
mov
std
xor
mov
js
jnp
outsb
inc
call
pop
mov
in
out
into
mov
cmpsl
imull
lods
mov
das
cmpsl
pusha
sbb
push
jne
lods
inc
in
push
and
imul
fisttpl
xchg
xorl
mov
addl
mov
jnp
outsl
jp
enter
mov
sbb
push
aad
mov
jmp
push
pop
or
jbe
pop
movsl
pop
das
xchg
add
mov
test
add
movsb
fsub
repnz
sbb
lds
jb
add
xchg
xor
xor
je
imul
incb
sbb
push
push
add
jge
and
or
sbb
mov
loope
test
icebp
mov
and
push
icebp
xchg
mov
xchg
incb
cmp
sub
mov
pop
jl
gs
icebp
mov
je
add
popa
cmpxchg
pop
add
inc
add
imul
inc
hlt
xlat
xchg
clc
aas
dec
popf
fwait
mov
in
xchg
jp
or
icebp
mov
inc
and
gs
lahf
or
xchg
jg
sub
xchg
ss
adc
sbb
mov
mov
lret
xor
push
test
jle
shr
roll
int3
popf
bound
les
pusha
sub
pop
dec
cwtl
imul
adc
std
mov
aam
shl
aaa
in
clc
jne
push
pop
xchg
les
adc
or
mov
fmull
adc
aad
push
jo
das
mov
les
hlt
dec
xor
sbb
add
sub
dec
int3
and
popf
idiv
notl
insl
pop
mov
leave
mov
mov
push
dec
and
clc
scas
loop
pop
or
aad
mov
add
mov
loop
mov
ret
inc
ficoml
in
lods
popf
mov
lock
push
hlt
sbb
repz
mov
cmpsb
ss
cmpsb
add
pop
mov
mov
test
lea
mov
and
lret
fcmovne
mov
stc
ficomps
scas
jle
and
movsl
cli
push
xrelease
cmc
push
aas
cmp
stos
jmp
out
dec
cwtl
pusha
cmpl
sub
bound
inc
out
xlat
inc
mov
cmc
stos
lds
movsb
pop
icebp
or
jno
inc
mov
inc
daa
jl
int3
icebp
push
mov
cmp
add
inc
push
mov
hlt
iret
fs
inc
lea
mov
sbb
int3
cmc
in
push
sub
mov
sub
lcall
and
lret
and
xor
jp
push
mov
test
add
lods
shl
inc
mov
mov
and
sub
push
popf
lea
pop
and
cmp
leave
jno
xor
jbe
rorb
loopne
jb
aaa
sbb
enter
jecxz
push
fwait
add
popf
jecxz
mov
test
in
flds
imul
cli
add
ror
pop
push
xchg
insb
sbb
jae
xchg
jp
leave
iret
jge
xor
js
shll
in
inc
scas
loope
push
push
loopne
shrb
mov
jnp
in
jmp
repnz
cs
loop
fisubrl
mov
negb
lret
pop
dec
stc
out
cmc
sbb
xchg
jp
sbb
pop
movsl
dec
push
inc
push
jmp
je
xchg
pop
test
add
aas
leave
cmc
fimuls
xorl
pop
in
push
and
in
leave
xor
arpl
mov
fistl
sub
test
adc
inc
push
lahf
push
and
outsb
dec
xchg
pop
add
xchg
pop
or
adc
roll
mov
xchg
scas
jecxz
push
loope
lds
cmp
jo
mov
scas
call
mov
cmc
in
inc
add
jge
les
sub
jb
push
mov
fptan
or
sub
jp
rcrb
fnsave
and
mov
adc
lock
insb
xchg
ds
out
push
inc
xor
sub
mov
jbe
scas
pop
je
loop
dec
std
xchg
fs
xor
leave
outsb
xor
inc
inc
lcall
jb
aad
cs
mov
in
adc
stc
mov
and
les
enter
xchg
loop
push
shrl
flds
dec
in
into
ljmp
cmp
dec
and
xorb
jo
or
and
sbb
cli
ljmp
cmp
sub
pop
mov
aam
faddl
faddp
pop
idivb
push
scas
flds
push
stc
mov
lods
xor
pop
cmpsb
mov
pop
or
jo
loop
adc
fldcw
ss
mov
test
xlat
mov
cmp
or
dec
ss
xor
xlat
roll
push
mov
jp
mov
sbb
inc
lds
mov
clc
ss
jecxz
test
pop
imul
pop
rorb
pop
das
js
add
jae
test
cli
sbbl
push
pop
loop,pt
and
test
inc
jno
mov
jl
stos
shl
mov
add
lahf
outsb
leave
in
test
mov
mov
pop
shlb
jle
sbb
add
xor
cmp
repnz
jl
jg
stos
fisttps
neg
push
adc
fstl
sbb
movsb
jmp
pop
mov
mov
adc
pop
dec
pop
js
stc
xor
cltd
adc
and
cmc
xchg
or
mov
dec
inc
scas
push
mov
popf
insb
xchg
sub
sbb
shlb
sub
jmp
jae
mov
das
lock
imul
pop
lret
je
xchg
call
test
push
push
cmp
insb
pop
insb
mov
jne
stos
inc
dec
push
or
faddl
loop
push
xlat
sbb
les
stc
ret
bound
push
pop
push
mov
mov
jne
cld
xchg
jb
loop
xchg
rcll
addr16
out
fisubrl
call
nop
sub
adc
andl
dec
gs
dec
dec
push
int
popa
mov
imul
push
sub
dec
cmp
cmp
scas
add
mov
dec
insl
pop
add
xor
in
lret
mov
test
loope
cmp
sub
pop
pop
ljmp
cs
pusha
xor
push
pop
repnz
jnp
mov
push
add
loopne
popf
sub
mov
and
fldl
data16
cs
mov
int3
cs
sbb
sbb
mov
mov
fs
sbb
test
shlb
mov
and
xor
sbb
cli
lea
jb
push
jecxz
fidivrl
lds
push
push
sub
jbe
lods
jb
pop
repnz
pop
adc
push
mov
sub
sbb
mov
sbb
movsb
xor
inc
sub
xchg
imul
orb
add
jbe
lret
push
clc
data16
scas
mov
xor
push
push
test
daa
push
popa
std
cs
cmp
sbb
jno
and
rcll
pop
ds
or
sub
lret
pop
xchg
shrl
mov
mov
test
cmpsb
pop
stos
add
pop
ds
sti
shlb
sbb
xchg
imul
je
adc
cmp
stos
je
scas
mov
push
or
jns
add
sarb
xchg
repnz
lds
shll
or
pop
and
xchg
mov
mov
btr
lcall
hlt
rolb
into
stos
cmp
jno
aam
adc
mov
inc
xorl
mov
clc
push
cmp
sub
lcall
sbb
add
das
lahf
repz
movsl
inc
test
xor
test
sarl
iret
cmp
xchg
mov
mov
or
add
pop
dec
mov
pusha
ret
xlat
or
jge
pop
inc
add
cmc
test
lret
pop
pop
xor
add
push
jb
add
inc
sub
popf
inc
add
shll
xor
and
cs
pushf
cwtl
adc
mov
xchg
push
fmull
push
insb
push
ljmp
sbb
test
xor
dec
xor
sub
repz
adc
fmul
push
in
mov
mov
call
dec
dec
sarb
inc
xchg
fcompl
getsec
lea
stos
ret
sarb
sbbb
lds
in
vpaddusw
mov
mov
dec
.byte
sbb
xor
cltd
xchg
cwtl
add
mov
fwait
add
test
pop
mov
mov
ret
push
out
out
inc
jp
and
mov
gs
out
jbe
xchg
icebp
pop
aaa
or
imul
sbb
cs
xor
adc
xchg
fchs
add
cld
jns
int
inc
or
cmp
out
and
je
decl
aas
arpl
fisttpll
popl
cli
fistpll
notb
or
ljmp
add
pop
sub
fiadds
lods
ds
dec
sarl
cltd
xchg
push
mov
ds
dec
cmp
pushfw
cmc
out
lcall
jl
daa
xchg
test
icebp
sub
sarl
push
lahf
fnstenv
js
push
mov
mov
enter
add
testb
adc
jno
pop
int
jg
or
fsubrs
xchg
add
addr16
mov
fucompp
inc
daa
pop
sarb
sbb
jp
stos
jp
jle
shll
push
lahf
stc
and
mov
inc
jo
std
mov
popa
mov
xchg
cmp
mov
jns
pop
decl
add
test
sbb
pop
out
or
lret
divb
inc
je,pt
mov
cmpsl
pop
dec
xor
jns
call
out
xchg
ss
jecxz
in
cmp
fwait
pop
inc
out
inc
adc
adc
cmpsl
mov
insb
xor
jle
xor
insl
movsl
adc
xor
cltd
push
inc
lret
leave
and
and
inc
jns
loop
ret
push
xor
repnz
sbb
inc
dec
cmp
adc
ljmp
xor
cmp
adc
in
orb
daa
and
push
fdivrs
mov
mov
xchg
mov
xchg
pop
push
mov
dec
lcall
mov
jge
fs
repz
add
rcrb
push
and
sbbl
out
scas
fbld
jmp
icebp
notb
or
xchg
push
ds
lea
fisubs
push
insl
cmp
xor
dec
in
decl
lods
pop
test
or
jge
jne
dec
fisttps
jae
mov
loopne
adc
sbb
flds
xor
push
dec
jge
pop
icebp
icebp
mov
rcrl
add
test
test
pop
sbb
popf
jle
fnstenv
test
ds
in
shll
scas
cmp
ret
add
mov
pop
in
and
nop
test
xchg
mov
popf
mov
repnz
xor
mov
dec
cmpsb
aaa
loope
mov
loope
popa
or
rol
sti
stos
in
bnd
inc
sti
and
xchg
adc
adc
test
movsl
or
push
mov
pop
xlat
xor
das
push
push
enter
pop
mov
or
or
ffreep
or
pop
xchg
js
mov
int
sub
mov
or
xor
xorl
popa
xchg
pop
ss
test
or
rolb
add
push
gs
in
ljmp
fldcw
enter
mov
cmp
repnz
imul
clc
cli
and
and
pop
jns
ljmp
add
iret
test
push
loop
out
les
frstor
loopne
pop
rcr
enter
loop
cmp
fsubrs
scas
jge
jno
jnp
cmp
enter
cmp
push
loop
iret
lods
dec
xchg
mov
push
sar
cmp
mov
mov
jg
or
mov
xor
or
xchg
imul
arpl
adc
outsl
bound
int
sbb
std
jge
in
xor
pop
clc
push
push
loop
in
mov
push
pop
pop
xor
jb
or
mov
sub
gs
in
bound
xor
pop
rcr
addr16
cmp
push
inc
sbb
lret
js
cmp
pop
addr16
adc
das
nop
adc
dec
in
add
jl
xor
bound
mov
pushf
lock
fs
cmpsb
xchg
xorl
add
scas
mov
adc
cmc
fs
mov
jns
fsub
mov
bound
andl
lret
pop
mov
jb
sub
adc
jp
repz
mov
xchg
push
scas
push
push
das
cmp
sbb
add
lods
pop
imul
ja
roll
xchg
loopne
sbb
mov
daa
pop
movsl
les
xlat
or
sub
mov
fwait
jl
add
into
test
inc
int3
xchg
movb
cs
bound
mov
sbbl
adc
loop
inc
int
leave
jb
add
fmull
jg
add
inc
sbb
and
mov
nop
push
das
push
sarb
push
push
rcl
mov
out
lods
out
xchg
jge
lret
cmp
sub
dec
adc
ljmp
negb
mov
cld
cmc
cmp
fsubrl
push
das
icebp
inc
and
popf
cmp
popa
or
cmp
cmp
or
add
and
out
cmp
scas
add
lods
push
sbb
jmp
jne
icebp
in
mov
lods
out
test
jnp
jle
mov
outsb
xchg
inc
jne
aaa
imul
or
jl
into
pop
sub
adc
lret
rorl
mov
xchg
jae
push
mov
xchg
push
pop
addb
pop
shll
add
cmp
and
arpl
mov
or
lds
nop
or
mov
test
loope
cwtl
outsb
jne
cltd
adc
cmpb
rclb
or
push
dec
or
andb
cmp
fisttpl
jmp
pop
lods
popa
mov
jno
adc
pop
fmulp
test
rol
insl
inc
je
xchg
or
dec
ja
sub
pop
repz
loop
leave
clc
clc
xor
cs
fnstsw
mov
clc
xchg
cmp
sti
lahf
xchg
or
push
inc
outsb
or
push
mov
stc
ror
inc
out
lret
sbb
mov
lock
popa
imul
adc
lcall
jnp
fbstp
sub
push
test
cmp
out
mov
testl
sub
fcoml
sub
fadds
add
call
cld
int3
loop
cmp
lock
push
and
pop
rclb
add
repz
mov
and
lea
test
and
test
mov
mov
std
cmp
into
nop
xchg
fldl
movsb
enter
cmpb
xchg
ret
imul
xor
adc
movsb
mov
imul
pusha
pop
nop
add
movsb
popa
dec
push
adcl
ficoms
mov
lahf
repnz
add
jae
int
pop
xchg
mov
cwtl
push
repz
xchg
jb
cmp
xchg
push
cmp
stc
adc
arpl
mov
push
daa
cmp
inc
scas
jns
mov
in
fldt
mov
sbb
mov
jecxz
sub
push
jecxz
dec
pop
rorl
xchg
mov
add
add
daa
xor
sub
jmp
pusha
or
dec
push
rcr
hlt
aad
fsubr
test
push
or
xchg
adc
dec
into
sub
pop
ret
aaa
fstpl
mov
xor
and
dec
in
push
mov
shll
sbb
sbb
test
inc
push
sbb
inc
cmp
ret
es
inc
ret
fnstcw
out
cmp
or
push
stc
sbb
mov
jecxz
fs
je
pop
insb
mov
xor
bound
bound
cs
ds
sbb
scas
pop
sti
in
adc
pop
das
pop
xor
jle
mov
mov
jno
xchg
ss
popa
movsl
scas
sub
mov
fmull
mov
loop
mov
adc
dec
ficompl
gs
pop
repz
movsl
jb
out
pusha
mov
jp
cmp
xchg
jo
loope
push
xchg
mov
pop
add
aad
stc
mov
lds
loop
push
imull
aam
jns
roll
dec
inc
cld
into
xchg
ret
loope
out
or
cltd
add
in
movb
arpl
inc
ss
push
xlat
insl
arpl
mov
outsl
movsb
pushf
lods
sbb
xchg
or
sti
imul
jle
sub
mov
push
xor
cs
adc
add
sbb
jl
cmc
je
adc
cmp
mull
xchg
out
jnp
and
repnz
mov
sbb
in
pop
cltd
xchg
jge
icebp
and
lea
pavgb
cmp
mov
jecxz
xchg
outsl
and
jne
les
lea
lock
inc
int
pop
ret
lods
loopne
leave
jge
pop
sub
xchg
inc
mov
call
aad
ds
test
mov
mov
movsb
stc
les
xchg
mov
mov
mov
fistps
scas
jl
adc
pop
xchg
or
and
and
stc
repz
xchg
inc
int
clc
cmp
enter
adc
in
dec
and
rorl
inc
lock
dec
aaa
lods
sbb
loop
in
pop
push
mov
dec
adc
aad
xor
cmp
and
dec
outsl
popf
es
rorl
inc
jmp
mov
fidivl
jg
mov
fisubrl
aam
mov
mov
lds
jmp
inc
adc
imul
bound
sbb
repnz
dec
push
jae
pop
jnp
jns
test
sbb
mov
push
pusha
in
push
pop
push
es
adc
inc
add
sbb
outsl
fistpl
dec
sub
int3
sub
loop
xor
dec
mov
mov
aam
decl
pop
sub
imul
stos
mov
mov
sbb
scas
mov
sbb
fdivs
dec
fcomip
stos
push
pop
iret
dec
jge
jl
lret
lock
xchg
pop
inc
aas
stc
xchg
xor
dec
jecxz
cli
sbb
lret
inc
jecxz
stc
xor
rclb
dec
jno
rcr
push
fisttps
mov
cmp
push
jmp
and
jmp
xor
or
pop
dec
bound
clc
push
mov
mov
lcall
lret
xchg
and
or
repnz
mov
xor
shlb
cmp
xor
push
pop
decl
stos
fwait
ret
shll
mov
out
dec
cwtl
fdivrs
inc
ss
call
roll
pop
pop
fmul
loope
push
inc
dec
ret
je
adc
sub
bnd
cmpsl
inc
mov
cs
jnp
sbb
add
les
shl
in
and
cmp
repnz
mov
out
out
sbb
xor
fnsave
gs
scas
inc
mov
je
inc
ljmp
xor
movsl
or
jbe
leave
mov
imul
addr16
lcall
cmp
cmp
ret
mov
push
sub
xchg
sub
mov
into
add
lods
push
call
jb
sub
das
xor
aad
mov
mov
scas
or
or
or
mov
adc
push
inc
cmp
mov
sbbl
shl
and
push
repnz
fcoml
addl
insl
sub
sbb
cmp
add
cmp
dec
inc
fs
out
je
ss
mov
decb
addr16
push
sbb
testl
mov
jl
ljmp
jns
daa
jle
inc
frstor
jmp
add
fstl
jo
aas
negb
insl
add
test
sbb
repnz
pop
mov
mov
ja
pop
jmp
mov
cltd
repnz
loop
repz
mov
test
stc
xor
inc
push
pop
mov
jp
pop
push
lods
cli
or
mov
cmova
mov
or
insl
insb
and
movsl
xchg
mov
imul
pushf
pop
pop
adc
pop
push
cmp
test
mov
adc
mov
mov
fistpll
xchg
mov
shlb
les
sbb
gs
mov
jb
pop
mov
ret
mov
fstpl
fs
call
jo
or
ret
cltd
lahf
mov
into
inc
xor
test
jnp
cmpb
jmp
push
inc
leave
xor
cld
jo
sahf
dec
es
int
mov
mov
lods
cltd
jb,pt
adc
pop
aas
mov
mov
ret
addr16
dec
lods
cmpsb
jge
vhaddps
push
rorb
adc
enter
push
popa
mov
cltd
mov
and
lods
std
xchg
enter
rcrl
jbe
push
cmp
xor
cwtl
lds
shlb
outsb
jp
xchg
push
cmp
mov
mull
adc
and
clc
add
jns
mov
dec
pop
pop
sbb
nop
add
loop
dec
sbb
imulb
or
add
cmpsl
das
sbb
fbld
in
fs
addr16
pop
adc
clc
dec
adc
lods
fisttpll
int3
enter
sbb
mov
cmp
mov
cmp
inc
add
mov
shlb
jg
sarl
add
pop
ljmp
je
fs
je
mov
mov
std
or
mov
ret
dec
mov
sub
lea
jo
xchg
je
mov
lea
pop
xchg
pop
pop
xor
and
repnz
mulb
jo
cmp
mov
es
sub
dec
in
mov
push
sub
cmpsb
fistpl
in
sub
and
sub
push
jnp
repz
pop
inc
mov
xchg
loope
je
imul
clc
mov
out
rcrb
dec
int
orl
cmpsb
sar
pop
sbb
xlat
sub
sti
mov
nop
xor
jge
aam
jbe
ja
insl
jmp
orl
jp
rorl
mov
orl
xor
push
in
mov
out
cmp
mov
call
inc
push
sbb
mov
lods
add
clc
ds
shll
stc
push
popf
or
dec
js
insl
jns
ja
or
rclb
data16
sub
fwait
cmp
and
adc
cli
fwait
dec
imul
insb
inc
inc
mov
or
jl
sub
pop
cld
add
popa
fninit
mov
subb
mov
jns
sahf
cwtl
and
in
popf
cli
dec
add
push
mov
bound
mov
mov
js
jae
pusha
rcr
cld
les
outsb
aaa
int3
jmp
pop
mov
jae
sbb
inc
movsb
push
xchg
clc
jg
aas
mov
std
rolb
inc
pop
mov
mov
ret
notl
pop
into
fistl
sub
sahf
ja
fsubrs
insl
lods
stos
je
into
cmp
mov
aam
pushf
ficoms
dec
leave
in
vandnps
add
cmp
pop
dec
imul
mov
push
mov
in
rolb
mov
jo
arpl
and
decl
xchg
push
mov
jnp
mov
xchg
test
test
rcrl
aas
xor
jb
pop
add
enter
mov
mov
in
cmpsl
nop
mov
lods
and
js
int
stos
gs
adc
add
subl
pop
add
add
iret
mov
je
push
mov
pushf
jecxz
mov
add
push
ss
adc
loopne
jmp
xchg
scas
sub
out
pop
sbb
push
dec
out
pop
jb
and
add
sbb
pusha
out
ret
sub
add
inc
shrl
mov
cmp
dec
mov
mov
scas
push
jne
loop
mov
push
pop
jmp
sbb
pop
cmp
mov
xchg
lods
scas
dec
jne
inc
adc
rorb
lock
mov
sub
push
jecxz
icebp
rcpps
pop
adc
cmpsl
sub
clc
adc
repnz
mov
test
push
cs
xchg
aad
cvttps2pi
loope
add
ss
mov
xchg
movsl
jl
mov
fnstcw
or
psllq
and
xor
hlt
imul
jnp
or
xchg
popa
mov
test
mov
imul
xchg
mov
mov
stc
adc
into
out
data16
loope
gs
push
push
out
stos
or
lret
out
add
fucomip
sub
lcall
leave
and
pusha
cs
mov
dec
pop
mov
int3
rcrl
or
mov
test
adc
sahf
dec
nop
push
mov
pop
mov
inc
cs
pop
arpl
lahf
fwait
insl
mov
pop
and
dec
rorb
je
adc
or
pusha
jb
mov
jl
push
popa
fildll
cmp
sti
mov
mov
mov
ja
and
push
imul
sbb
mov
into
cmp
ret
pop
pushf
sti
sbb
mov
in
scas
orl
push
dec
push
xor
mov
mov
adc
xchg
push
in
ret
shrl
xchg
push
pop
ds
jp
icebp
inc
ljmp
lock
bound
cmpsl
std
sbb
aad
movsb
push
push
fs
or
and
mov
add
cvtps2pd
aas
aaa
rorb
aaa
cwtl
sbb
add
sub
sub
inc
or
fdivrl
xor
popf
mov
mov
out
add
mov
sub
and
jp
cwtl
mov
cmp
push
sti
push
scas
out
shl
js
mov
rep
mov
mov
inc
pop
adc
mov
lret
sbb
cmp
cmp
icebp
fbld
push
pop
sbb
sbb
stos
mov
je
mov
dec
jle
outsl
sbb
push
ljmp
fwait
inc
lods
jmp
xchg
adc
xor
sbb
in
rcr
lods
lret
push
or
into
pushf
mov
cmc
or
nop
xor
adc
pop
sub
xchg
cli
jae
fcmovnb
push
rorb
push
xor
xchg
aaa
imul
push
push
outsl
xchg
bound
sbb
and
pusha
push
dec
mov
sub
push
xchg
cmp
cwtl
mov
jp
fcmovnb
enter
les
dec
cmpsb
into
jb
int3
sbb
rcl
push
push
addb
mov
mov
loopne
ljmp
jp
adc
jb
dec
shrb
ss
mov
cltd
testb
inc
push
aad
dec
dec
scas
movl
sbb
in
dec
mov
xorl
inc
inc
mov
push
inc
mov
inc
ljmp
or
les
sub
loopne
push
es
jnp
fwait
inc
pop
jle
xchg
add
test
or
add
stc
std
movsl
pop
cltd
jle
subl
sub
xor
add
jns
lea
shlb
jl
and
in
lret
pop
or
out
and
add
adc
popf
cmp
and
mov
or
lret
ds
push
popf
or
pop
mov
hlt
push
mov
rcll
outsl
jns
inc
gs
call
xchg
xor
jmp
es
dec
ja
inc
ficoml
fistpll
sub
pop
mov
stc
pusha
out
stos
scas
test
nop
sub
pusha
test
sahf
int
iret
add
ja
xchg
mov
xor
cli
shl
mov
push
dec
test
jle
ret
bound
push
bound
cmpsb
rcrl
mov
push
mov
xor
mov
add
pushf
mov
test
push
or
insl
popf
xor
lods
jp
rcr
inc
test
mov
cmp
negl
js
xor
jo
je
fdivrp
orb
push
sub
pop
dec
pop
dec
sub
jg
and
mov
cmp
lcall
mov
test
clc
push
xchg
jecxz
aas
sub
outsl
jg
dec
mov
pop
mov
push
ficoms
dec
sahf
dec
stc
mov
jne
add
imul
dec
pop
mov
sbb
icebp
dec
and
fsincos
mov
popf
loop
enter
lcall
jmp
aas
dec
sub
xchg
or
mov
cmp
cli
mov
mov
inc
out
mov
dec
xchg
stos
das
in
setbe
shl
ja
adc
inc
sbb
outsb
mov
mov
push
test
push
fidivrl
xchg
das
xchg
mov
test
pusha
pop
arpl
and
aam
inc
mov
fmuls
imul
dec
fs
nop
inc
mov
loopne
and
or
or
pop
jo
je
jecxz
ds
dec
sbb
imul
js
mov
enter
pop
add
das
mov
mov
orl
pop
sarb
test
push
pop
cs
hlt
movl
or
jge
out
inc
into
xor
jle
mov
xlat
lds
in
push
mov
mov
out
adc
movsl
scas
icebp
rol
cmp
insl
ja
cmpsb
sbb
scas
aad
aad
push
addr16
daa
adc
test
iret
fmul
aaa
lahf
stc
inc
sub
sbbl
repnz
xchg
aad
shrl
add
je
pop
adc
pop
gs
dec
cmp
dec
ds
sub
test
pop
and
mov
movsl
jg
sub
push
int
mov
jns
mov
add
mov
jnp
insl
add
out
out
ljmp
or
jbe
loopne
aam
mov
ds
dec
sub
insb
xchg
test
loopne
ret
sbb
pop
ss
cmp
add
add
fistl
ds
add
cltd
cli
cltd
pop
mov
pushf
add
add
dec
mov
scas
sbb
push
inc
push
iret
cmp
xchg
ja
lods
mov
into
inc
in
inc
xchg
inc
movsb
fnstcw
in
dec
sbb
loop
sub
adc
push
or
cmpb
ljmp
xor
push
cmp
cmpsb
shl
lahf
out
xor
lret
dec
out
imul
scas
jno
xor
xor
push
push
int
adc
dec
mov
cmp
test
pop
fcom
pop
test
cld
dec
jae
jl
xchg
ss
stos
or
ds
cmp
xorl
ljmp
out
sub
push
fs
or
xchg
and
jl
push
jmp
or
pop
cli
das
lods
ja
aaa
pop
inc
or
cmp
inc
adc
std
lods
add
enter
mov
mov
adc
inc
jg
pop
pop
xchg
xorl
insb
scas
jg
cvttps2pi
push
fcmovu
push
ret
or
fiaddl
loope
push
movsl
dec
in
inc
enter
pop
adc
repz
fidivrl
jecxz
cmpsl
addl
mov
sbbb
xchg
scas
icebp
inc
pop
mov
fmull
pop
cmp
sub
outsb
imul
jmp
pop
aaa
inc
or
or
xchg
test
cwtl
into
mov
lods
es
push
outsl
xor
mov
push
inc
sti
pushf
aas
push
ficoms
sub
cmp
scas
xchg
cmp
and
scas
or
shll
pop
aad
mov
nop
xorl
testb
aas
and
fmull
push
gs
mov
mov
shl
push
sbb
call
push
xchg
mov
sbb
es
push
cmp
push
inc
pop
adc
pop
jo
flds
jns
pusha
sub
xchg
sahf
fistps
lea
dec
mov
out
jge
dec
add
pop
pop
xchg
xchg
cmp
mov
scas
mov
loopne
test
adc
xchg
jp
jns
mov
aaa
scas
fstpt
test
jae
mov
sti
pop
xor
scas
enter
sbb
sti
pop
mov
andl
cli
divl
out
lahf
out
addr16
clc
lret
pop
add
loope
scas
insb
lods
xlat
push
jae
push
clc
jo
mov
mov
mov
and
adc
add
jg,pn
xlat
cmp
add
out
push
inc
push
not
sarb
mov
xor
mov
cmp
sub
jo
lret
inc
pop
icebp
push
outsb
dec
mov
mov
jge
adc
jmp
mov
inc
add
pushf
mov
cmp
mov
lods
aaa
push
push
inc
inc
cmp
sub
or
testb
mov
sub
scas
addb
out
mov
mov
lds
cmpsl
sbbl
sbb
vmaxps
jae
or
andl
testw
adc
fmul
stc
sbb
push
inc
pop
push
sub
push
xor
pop
push
cli
ret
push
loop
aam
and
in
ljmp
push
out
add
mov
jl
mov
pop
add
xchg
jb
mov
cmp
or
sahf
int
push
push
sub
xor
mov
xchg
xor
push
mov
jno
add
jno
jmp
pop
int
jns
mov
cmp
push
push
or
daa
shrl
xchg
pop
ss
and
mov
push
je
sbb
adc
jne
xchg
xchg
adc
ja
into
inc
mov
push
pop
ljmp
cmpsb
jl
inc
rep
shll
push
subl
mov
loop
sub
je
xchg
rolb
mov
enter
aaa
pop
sub
xchg
jmp
xor
sbb
pop
sahf
adc
pushf
movntq
pop
push
imul
and
movsl
lret
mov
outsb
insb
sbb
mov
and
xor
das
push
jecxz
xorb
xor
fnstcw
setnp
pop
sti
pop
test
enter
pop
daa
sbb
in
push
pop
sub
or
push
dec
out
lcall
lahf
dec
mov
xchg
cmp
lods
loop
mov
dec
mov
je
sbb
cmpsb
call
aam
stc
adc
out
sarl
cmp
fcmovb
cmc
pop
sbb
xor
cmpsl
add
push
lds
jne
loopne
add
pop
cmpsb
mov
or
pop
popf
icebp
es
xchg
or
fistpll
mov
out
andl
jge
int3
popf
repnz
adc
mov
test
push
ficoms
cltd
sbb
inc
mov
movsb
or
xchg
jo
mov
sti
cmpsb
adc
jbe
add
or
sarb
pop
ja
pop
rcrb
repnz
mov
jbe
stos
or
add
add
cld
int3
mov
adc
rcrl
roll
pop
out
mov
arpl
or
in
push
push
lret
sbb
sbb
loope
insb
lcall
shr
lock
fcoml
imul
mov
inc
rcl
cltd
inc
scas
mov
stos
test
hlt
test
movsl
sbb
jo
mov
cmp
int3
sub
mov
mov
jno
pop
ljmp
outsb
and
test
fidivrl
mov
push
lock
pop
cmp
lods
dec
mov
sub
mov
imul
mov
enter
sub
mov
push
insl
and
pop
and
xchg
ret
in
int3
xchg
jae
icebp
or
lods
xchg
negb
in
xor
mov
cmp
dec
cmp
jl
xchg
push
cmp
lahf
sbb
mov
inc
ret
jb
call
cs
pop
rolb
fucomip
mov
adc
push
or
xchg
in
faddp
push
jno
add
aad
das
popf
testb
sub
cltd
inc
fldcw
and
stos
xchg
mov
cmp
negl
add
inc
mov
clc
cmpsl
sahf
ficoml
fisttpl
cmp
loop
jge
add
adc
pop
xchg
push
cmpsb
cmpsl
out
addl
movsb
shlb
mov
cli
xchg
sub
ja
jp
movb
fs
negl
mov
sub
mov
mov
in
aam
mov
bound
call
fldt
popa
xchg
loop
xchg
mov
add
mov
mov
sub
cmp
push
rcr
jecxz
lods
xlat
rcrb
mov
loop
ljmp
into
lods
push
cmp
arpl
cltd
fmull
or
jg
ret
or
scas
adc
and
push
movsl
fisubrs
and
subl
int
addr16
pop
shlb
push
adc
scas
in
rclb
dec
mov
cltd
les
xchg
imul
in
call
std
rorl
adc
xor
out
xchg
aas
test
std
cld
mov
mov
lock
inc
mov
addr16
popl
and
sti
into
js
addl
dec
inc
aam
mov
sub
sbb
inc
pop
out
sbb
bound
scas
mov
inc
inc
or
hlt
arpl
mov
lret
add
inc
int3
jns
nop
cmpb
inc
jno
out
xchg
test
les
adc
pop
stos
aas
xchg
lret
lcall
pop
sarb
dec
mov
stc
mov
int
pusha
fbld
stos
icebp
adc
loope
inc
mov
and
pop
jbe
andb
insb
ficoml
cmpsb
add
sub
ja
cmp
mov
imul
rcr
pop
mov
lea
mov
adc
les
lea
cmp
cs
adc
test
lods
adc
cmp
xor
lret
pop
mov
cmp
int3
and
jae
inc
sub
inc
sub
and
xor
outsb
dec
mov
and
fdivl
push
out
ds
stc
adcl
ljmp
cmpsl
sbb
repnz
lods
and
mov
insl
adc
push
cld
push
push
int3
das
xchg
insl
lret
pop
mov
test
andb
ret
popa
fistpll
pop
push
sub
mov
stos
cmp
jo
sbb
aas
and
enter
mov
pop
mov
cmp
mov
xlat
xorl
jl
in
and
add
add
aas
pop
mov
adc
xorb
std
and
sub
jg
mov
pop
inc
cli
mov
dec
pop
jmp
push
xor
mov
xlat
push
mov
xor
out
lret
popf
faddl
xor
sahf
pop
iret
pop
push
jo
cmp
ror
pushf
sti
dec
sahf
sbb
pop
jnp
xor
add
lcall
push
fsubr
lret
or
shrl
in
mov
imul
hlt
sbb
add
mov
xchg
mov
adc
jnp
aas
sub
cltd
push
icebp
xor
addr16
xchg
push
xor
push
mov
push
mov
icebp
cmc
pop
pusha
cmpsb
test
mov
jbe
jb
and
out
out
sarl
fdivs
mov
cmp
fidivrs
inc
pop
das
call
xlat
dec
jp
and
in
arpl
dec
push
push
das
dec
lret
fildll
leave
in
xchg
in
hlt
cs
leave
add
clc
mov
mov
sbb
xchg
add
mov
xchg
sbb
sbb
adc
in
pop
push
lock
cmp
sub
mov
inc
xor
es
sub
sub
sbb
mov
sub
adc
cltd
or
push
loopne
xor
jp
add
outsb
jae
icebp
popa
js
jg
or
scas
int
push
or
arpl
and
adcb
into
push
push
pop
addr16
and
xchg
xchg
ret
rcrl
mov
andl
mov
dec
sahf
and
jo
adc
movl
pop
lcall
push
xchg
int
aaa
sbb
fstpl
xor
aas
iret
pop
nop
pop
fldenv
dec
sub
pop
push
jb
cmp
mov
jecxz
pusha
repz
mov
mov
hlt
xchg
mov
lods
sahf
call
push
inc
popf
cmp
scas
out
jnp
cmp
cmp
sbb
data16
int
lock
clc
rcl
fstpt
sub
inc
mov
push
enter
add
mov
hlt
cli
inc
xlat
or
xor
sbb
insl
jnp
jge
push
fwait
mov
sbb
ret
xor
mov
mov
xchg
pushf
xchg
insl
lods
push
xchg
loope
icebp
sbb
add
std
cmp
hlt
cmc
pop
xchg
cmp
jg
popf
mov
lods
jge
mov
adc
hlt
pop
mov
sub
pop
mov
jne
mov
je
xchg
xlat
dec
pusha
flds
push
inc
cmc
xor
cli
movsb
cwtl
cltd
incb
xchg
xchg
xchg
add
dec
adc
xor
dec
in
sub
test
and
xchg
sub
and
sub
outsb
dec
loope,pt
sub
mov
inc
xor
push
push
in
stos
std
test
inc
jecxz
xchg
fmuls
clc
loopne
rorl
jle
push
push
inc
xor
dec
andb
xor
loope
xchg
jns
loopne
or
movsl
pextrw
cs
dec
sbb
jecxz
test
adcb
jp
mov
in
sub
aam
dec
push
or
jae
aas
test
mov
adc
and
loop
pushf
aad
pop
imull
dec
ret
fnstcw
aam
dec
xor
addl
sub
push
lret
adc
in
arpl
iret
in
pop
and
cld
or
imulb
push
test
mov
push
pop
jmp
cmp
addr16
dec
sub
jnp
xchg
mov
mov
mov
popa
dec
cmpb
inc
xchg
xchg
cmpsl
pop
mov
cmp
das
push
adc
add
add
sarl
xor
out
xchg
jecxz
push
loop
jmp
repz
ficoms
xchg
aam
xchg
and
add
pop
mov
jne
or
push
dec
push
cld
lret
scas
push
jp
icebp
shll
scas
sub
shll
push
popa
fcoms
rcl
mov
movsb
sbb
add
and
ret
pop
out
xchg
and
scas
dec
test
insb
xchg
adc
xchg
pop
push
mov
insb
fbld
stc
aaa
mov
loop
loopne
mov
and
movsb
pop
xchg
adc
out
lea
xor
xchg
sbb
add
inc
stc
jns
test
incb
subl
xchg
ja
loop
dec
jae
sub
lcall
addr16
iret
popf
inc
in
xchg
jle
and
mov
ficoml
daa
pop
test
pusha
hlt
sbb
jno
sub
jns
jl
ja
jecxz
mov
lcall
push
dec
pop
pop
jns
add
out
add
jo
add
rclb
dec
das
imul
popa
xor
dec
fstpl
xor
outsb
int
in
cmpsb
ret
mov
in
rcll
jbe
xchg
aam
push
or
insl
push
mov
loop
and
mov
sub
rclb
out
inc
mov
ljmp
call
add
cmpsl
and
aaa
pop
push
lea
les
scas
scas
mov
lret
mov
dec
cmc
and
jbe
fisubl
adc
mov
or
js
lds
shll
lods
cmpsl
xchg
fstps
icebp
fdivrs
lock
lahf
cmc
mov
loopne
xor
mov
xor
push
xor
int
push
push
stc
adc
jp
mov
int
loop
cli
in
pop
push
ror
inc
mov
inc
jp
inc
dec
ss
lahf
cmp
lock
data16
push
adc
lcall
std
mov
repnz
xor
mov
push
lock
mov
leave
sbb
bound
pushf
xchg
pop
mov
outsl
xor
shl
shlb
push
xlat
repnz
inc
cmpsb
fnsave
push
xchg
ret
adc
test
jb
inc
js
cmp
mov
je
jo
int3
jge
or
mov
out
add
jno
mov
adc
cltd
jmp
add
aad
daa
dec
pop
aas
mov
sahf
adc
sbb
lods
xchg
in
enter
mov
or
sti
mov
imul
sarl
sbb
sub
movsl
ret
ffree
mov
xlat
inc
cmp
loopne
lret
push
xor
fiaddl
nop
xchg
xchg
rclb
fdivr
data16
mov
jle
out
lock
sub
or
inc
sub
std
loope
dec
mov
xchg
pop
jne
inc
mov
mov
ret
or
mov
add
idivb
aaa
cmp
dec
cwtl
push
fcomps
push
jmp
jnp
jl
outsl
sti
je
mov
lahf
cwtl
mov
dec
add
push
ret
push
ljmp
jb
lcallw
sub
and
inc
enter
pop
pop
cwtl
xor
lea
push
sbb
jno
push
je
imul
adc
push
das
das
dec
jno
pop
fimull
push
inc
push
pop
enter
imul
mov
push
xchg
push
jae
outsl
push
dec
cmpsb
sbb
out
call
and
test
jge
sbb
or
test
leave
pop
cs
pmaddwd
cltd
dec
sqrtps
or
jo
xchg
push
xor
mov
push
push
sti
ljmp
or
cmovo
mov
cs
push
int
inc
lret
es
push
push
sbb
cmp
mov
mov
jle
enter
leave
lret
cmp
test
pop
jne
cld
push
les
xor
pop
mov
xor
xchg
ret
sbb
push
lock
xor
xlat
das
pushf
das
test
jle
inc
cmp
push
jno
mov
mov
mov
xor
andl
mov
rcll
xchg
cltd
in
ds
out
mov
out
dec
add
popa
mov
mov
pushf
xchg
ljmp
push
fistl
adc
sti
in
enter
lea
mov
xchg
jo
lock
lods
xchg
clc
pop
stos
mov
xchg
aaa
xor
out
je
pop
mov
xchg
sub
mov
add
and
sahf
jnp
pop
xor
pop
xor
movsl
xchg
push
sbb
movb
arpl
rcrl
arpl
outsb
mov
push
sub
xor
xor
ds
cld
nop
negb
test
fldenv
aam
ja
je
outsb
dec
jmp
sub
push
sbb
std
rolb
adc
xor
mov
int3
imul
push
adc
popf
mov
or
dec
ret
inc
dec
sbb
in
or
fnstsw
inc
popa
xchg
into
fwait
push
std
adc
jns
fsubrs
cltd
dec
xlat
mov
jge
subl
ds
mov
decl
or
xchg
rorb
fimull
adc
xchg
jno
jge
fcompl
out
sbb
ja
cltd
inc
and
adcl
test
loopne
mov
pushf
fs
dec
jns
sub
lds
mov
and
mov
pop
push
or
loope
negb
cmp
ret
mov
fdiv
sar
pop
adc
sub
cmp
or
lods
adc
jnp
dec
imul
mov
mov
int
and
out
stc
stos
fwait
jmp
mov
sub
enter
sahf
sbb
push
cmp
mov
push
sbbl
loop
aad
rol
inc
mov
inc
jb
je
jnp
test
bound
mov
mov
jl
dec
fwait
mov
out
jmp
sarl
jae
dec
adc
adc
xor
ss
xor
xlat
cltd
loope
jne
and
push
lret
push
fldl
or
rcll
lcall
inc
out
dec
mov
insl
ficoms
adc
pop
mov
aad
jge
andb
push
js
jl
sub
jns
jno
aas
sbb
popf
inc
mov
dec
xor
sbb
xchg
daa
xchg
mov
test
pop
sar
icebp
testl
inc
rclb
pusha
pop
sti
mov
sbbl
dec
pop
sub
enter
add
sub
cmp
mov
sub
cld
insb
sbb
arpl
sti
jl
orb
in
xor
out
mov
cmp
in
pop
aaa
dec
mov
sahf
push
pop
push
rorl
int
jecxz
jae
dec
adc
into
or
mov
movsl
arpl
jp
or
scas
fistpl
sti
orl
pop
pop
loopne
aad
and
push
orb
test
or
cmp
imul
cmp
push
inc
pop
jns
insl
bound
inc
dec
mov
ret
sub
add
arpl
and
ret
jnp
out
push
pushf
adc
jnp
enter
mov
pop
bound
idiv
dec
cmp
pop
mov
lock
test
sbb
mov
repnz
jmp
inc
imul
cwtl
mov
push
adc
into
rcrl
out
adc
call
loop
xchg
push
dec
in
mov
imul
das
cmp
imul
ret
cld
xchg
test
xor
push
cmp
pop
negb
in
and
xchg
jae
fsubs
enter
stos
or
mov
repnz
imul
dec
push
push
mov
or
mov
daa
mov
jmp
cmpsb
jg
push
xchg
dec
int3
test
stc
lods
jae
mov
into
mov
andb
cmp
in
pop
inc
push
inc
mov
cmp
sti
imul
icebp
push
call
xchg
mov
hlt
jle
insl
pop
mov
pop
repnz
lds
xor
cmpsl
add
xor
cmpb
bound
or
leave
les
cld
pop
gs
sbb
inc
movsl
popf
inc
stc
mov
sub
in
icebp
jle
dec
push
mov
js
jns
cmc
pushl
jae
push
ret
xchg
jge
ljmp
sbb
lret
movsl
adc
jne
je
mov
test
popa
sahf
inc
inc
inc
and
mov
cwtl
cmp
push
push
sub
shrl
iret
stos
jo
ljmp
lret
jl
testl
push
je
aas
and
xor
jae
ds
mov
xor
adc
stos
fs
xor
fisttpl
xchg
in
fstl
js
and
mov
cmp
aad
or
lcall
in
cmp
jle
inc
out
jno
sarl
lret
fimuls
inc
cmp
scas
inc
int3
cwtl
mov
outsl
cmpsl
shl
into
or
push
push
push
div
lods
clc
mov
jnp
add
add
push
outsb
dec
sbb
xchg
ljmp
push
ljmp
push
inc
add
insb
stos
pop
sbb
cmpsl
or
sbbl
and
xor
add
lcall
jmp
sub
xchg
fwait
js
or
loopne
mov
xchg
subb
push
test
into
or
inc
and
jle
fwait
mov
fisubl
out
es
xor
sub
shl
orb
inc
call
adc
fwait
ret
pop
add
mov
xor
jp
jbe
jbe
sub
pop
pop
xchg
out
leave
scas
test
stc
fmul
sub
enter
pop
std
push
xor
fisttpl
mov
popa
sti
jmp
or
mov
pop
push
lock
orb
fs
cmp
adc
dec
push
push
push
jae
scas
xchg
scas
test
push
cs
mov
jg
mov
push
pop
notb
les
leave
rcl
shr
stos
test
aam
push
sbb
add
int
add
mov
xor
imul
stc
movsb
jg
in
jmp
jmp
aad
sub
add
adc
popf
cs
sub
fistpl
fcmove
mov
jg
addr16
cltd
jp
mov
jo
xor
lcall
movsb
push
ficomps
adc
notb
lods
out
into
outsb
scas
xchg
into
into
adc
pusha
scas
dec
fcmovb
lcall
inc
lahf
int3
xchg
push
jp
stc
mov
push
pusha
adc
push
shlb
cmp
jge
js
ljmp
mov
repnz
inc
lea
test
mov
aas
adcl
jb
inc
jmp
and
adc
sbb
cld
lret
xchg
les
push
les
xor
and
scas
pop
cmp
jbe
pop
xchg
sub
sub
jge
fists
scas
mov
arpl
add
inc
xor
xchg
outsb
aad
and
sub
shrb
jp
adc
js
pop
ret
les
sub
sub
sbb
into
inc
add
add
fnstcw
adc
xor
or
mov
aas
pop
fdivrp
testl
push
mov
adc
sbb
sub
push
ret
pop
push
bound
cmp
jecxz
jo
cld
push
ss
arpl
scas
shufps
ret
xchg
xor
and
pop
loope
push
es
repnz
shlb
jno
and
lahf
fwait
repz
repnz
dec
pop
jg
pop
cmp
xchg
mov
add
add
daa
mov
test
push
mov
jno
add
les
popa
ret
push
test
in
mov
int3
xchg
out
pusha
ret
mov
stos
sbb
jl
jecxz
jb
in
shr
adc
dec
fistpl
jl
push
xor
in
es
xchg
les
lcall
xchg
push
arpl
lcall
adc
mov
mov
sub
jmp
pop
in
dec
push
xor
push
or
stc
xchg
ds
lret
push
mov
mov
adc
and
stos
pop
pop
lcall
pop
sbb
enter
xor
push
push
push
subb
mov
and
push
xchg
xor
shrl
push
xor
cwtl
jo
and
mov
fisttps
fcomp
cs
mov
fdiv
and
adc
sbb
dec
fldl
dec
push
cli
popa
ja
addr16
mov
inc
and
push
stc
movb
sbb
rolb
iret
jae
xchg
cmpsl
call
cmp
stc
mov
in
mov
ficoms
push
mov
mov
push
jno
push
loope
sbb
std
in
jo
push
sbb
jns
jmp
sub
cli
jns
filds
xchg
daa
mov
mov
sbb
les
out
push
add
xchg
push
mov
dec
xchg
or
lods
mov
jmp
mov
xor
pop
rcl
repz
jle
popf
adc
loopne
xlat
out
pop
stos
jb
imul
mov
jl
lret
enter
pop
inc
leave
add
repnz
inc
enter
stos
dec
cs
pop
adc
ds
popf
xor
or
out
test
popf
ja
fisubrl
test
mov
dec
pop
movsl
mov
mov
mov
addr16
pop
push
int
outsl
dec
mov
sub
in
mov
addl
sub
ror
and
movsb
mov
mov
and
mov
ret
pusha
pop
aam
test
or
pop
mov
repz
imul
cld
and
imul
popa
loope
pop
xchg
sub
push
cli
adc
xor
inc
or
pusha
and
sbb
cmpsb
sbb
je
cmp
lea
stc
mov
push
sbb
pop
add
xlat
fwait
xchg
insl
xor
shrb
xor
cli
adc
push
adc
and
icebp
xlat
jns
adc
xor
rorl
push
ret
mov
push
pop
pop
dec
shl
xor
rclb
push
dec
das
lcall
and
popa
stos
jecxz
xchg
cmovb
lret
push
or
mov
or
adc
dec
andl
lods
fldt
push
push
xor
stc
inc
iret
test
shl
stos
xchg
inc
sbb
pop
dec
aas
mov
ret
lods
xchg
xchg
ss
pusha
xor
pop
sbb
mov
mov
shll
je
pop
mov
call
int
or
mov
pop
sar
lret
in
cs
ror
scas
xchg
xchg
insb
clc
shlb
arpl
xlat
or
mov
sub
ror
fadds
insl
cmp
inc
pop
jb
out
int3
inc
cmp
outsl
mov
mov
mov
mov
andb
lahf
push
movsl
cltd
iret
std
insb
pop
enter
xor
jno
dec
mov
movsl
jg
ret
xor
jle
cmp
icebp
test
add
pop
pusha
add
cmp
pop
es
clc
inc
pop
fcmovb
sbb
inc
push
insb
out
andb
pop
inc
mov
aam
movsb
cmp
cwtl
xor
fmuls
scas
push
add
dec
cs
pop
dec
out
cmpsb
repnz
iret
jns
fidivrl
push
xor
out
pop
rcr
lahf
sahf
adc
push
jo
lea
and
rclb
or
pop
or
adc
mov
push
pusha
or
fcmovne
push
in
stos
xchg
daa
jb
jg
imul
pop
jmp
outsl
cmp
mov
sub
push
push
rcrl
push
leave
inc
arpl
inc
dec
sub
out
jmp
mov
cmp
les
pop
fcmovnbe
aam
sbb
lret
inc
jnp
xorl
pusha
push
popa
xor
mov
dec
push
dec
lods
push
lret
xor
pop
and
dec
popfw
sbb
push
outsb
shll
dec
mov
sbb
rclb
in
sub
lcall
inc
pop
mov
pusha
fsub
mov
inc
outsb
dec
cmp
sbb
int3
into
cwtl
lods
lahf
addr16
ja
mov
dec
push
push
jp
aad
icebp
movl
sbb
data16
and
movsb
sbb
les
daa
dec
pop
je
push
out
out
add
mov
ss
neg
xchg
adc
loop
add
sbb
negb
mov
outsl
mov
or
sub
and
xor
sbb
add
movsb
pop
mov
or
cld
fcomip
push
ljmp
pushf
adc
nop
and
imul
rcrl
mov
add
jge
or
into
sbb
xchg
dec
mov
and
pop
out
rcr
pop
setg
xchg
push
inc
push
mov
xor
add
add
fstl
mov
fistl
mov
jecxz
rep
clc
adc
sub
mov
out
xor
jg
mov
inc
inc
add
pop
xchg
adc
sbb
out
mov
xor
scas
and
add
lods
flds
andb
jb
jno
mov
sbb
pop
sub
pand
movsl
pop
cli
xor
scas
lods
xchg
nop
pop
mov
add
lea
mov
or
into
loope
mov
out
movsb
dec
fs
pop
inc
jecxz
dec
daa
dec
pop
sbb
js
adc
cmc
or
in
push
cltd
outsl
bswap
or
xchg
mov
adc
mov
ficompl
test
fdivl
repz
aas
sarb
sub
in
sub
loop
inc
mov
jg
push
fs
ret
sub
sbb
and
mov
repnz
push
stos
lds
pop
popf
fcomps
je
mov
mov
jns
and
xor
mov
sub
xor
test
fdivl
jmp
xorb
cli
and
pop
enter
or
nop
add
push
jmp
xchg
notb
aam
xchg
out
dec
add
shl
mov
xor
mov
mov
jle
cmp
js
repnz
mov
inc
vdivpd
jmp
insl
mov
jae
xor
jne
xchg
lea
mov
push
sbb
jns
xchg
push
fimull
add
test
xchg
mov
xchg
das
dec
dec
add
fs
inc
add
lea
mov
cwtl
xchg
sbb
jns
adc
lea
jg
pop
mov
gs
sbb
cmp
ja
adc
ds
mov
inc
nop
xchg
jbe
sbb
std
pop
fldz
mov
xor
add
cmc
sub
and
mov
jbe
cmp
mov
sub
aaa
jecxz
xchg
cmpsl
dec
call
lret
mov
cltd
mov
insl
testb
jno
sub
mov
mov
mov
pop
insb
inc
sub
les
push
xor
sahf
jge
push
sub
jnp
and
mov
out
stos
inc
imul
ds
in
fildll
pop
adc
int3
subb
mov
jge
dec
ret
aaa
xor
lret
jbe
fninit
jne
scas
sti
push
movsl
or
dec
cmp
popl
mov
shlb
repnz
push
decb
ja
cmc
rcll
mov
or
mov
out
inc
jns
cli
and
sub
insl
fistl
mov
pushf
stos
mov
cmp
sbb
fldt
mov
aad
insb
scas
mov
outsl
mov
mov
loope
decl
mov
and
out
push
mov
aaa
into
push
jbe
add
cmp
xor
mov
push
add
mov
je
xor
push
fbstp
imul
test
push
mov
cwtl
es
or
sbb
lahf
cmp
ret
pop
out
push
jmp
push
xlat
mov
dec
repz
cmpsl
lods
call
shlb
sub
push
sbb
dec
int
rcll
mov
hlt
mov
sbb
inc
or
cwtl
add
subl
and
pop
push
pusha
jge
jo
mov
jno
testb
xor
adc
clc
gs
push
shl
push
fmuls
jle
mov
lods
rcrb
subb
xchg
iret
cwtl
push
sub
push
shl
sub
pushf
cmpsl
add
fstp
in
add
cmp
leave
popa
sub
cli
jno
dec
and
push
lahf
test
pop
pop
jp
arpl
negl
xchg
shll
jp
popf
mov
icebp
fistpl
pusha
rorb
int
add
sar
pop
in
push
sbb
cmp
lcall
lret
xchg
pop
xchg
push
rcrl
mov
adc
xchg
push
cmpsb
adc
cmp
inc
sbb
cld
daa
orb
in
xor
cmp
outsb
scas
pop
xor
scas
and
cmc
adc
push
flds
in
mov
jne
aaa
sub
add
lret
movsl
dec
dec
jb
push
fidivrs
arpl
mov
mov
je
out
shlb
mul
es
pop
les
sub
aam
cltd
je
stos
loop
andl
mov
mov
in
pop
sbb
daa
cmp
pop
cmp
adc
xchg
mov
repz
outsl
mov
pusha
shlb
push
xor
jle
mov
scas
lods
jmp
cmp
aam
pop
inc
sarb
pop
outsb
or
popa
popf
cli
popa
push
mov
out
inc
aas
ljmp
cmp
inc
jae
inc
jp
sahf
add
lahf
sbb
sub
xchg
dec
sub
push
andb
imulb
rclb
push
roll
jl
mov
sub
lods
sbb
mov
out
dec
or
fbld
dec
mov
mov
imul
lahf
addr16
cmpsb
dec
push
icebp
or
dec
fs
mov
inc
sub
into
cmp
mov
test
mov
adc
aas
cltd
dec
inc
mov
jnp
xor
jne
pop
nop
lods
cs
mov
jecxz
jmp
fimuls
lret
lods
cmpsl
ds
push
outsb
cwtl
push
scas
inc
push
fiadds
ljmp
rolb
inc
addr16
inc
jnp
push
push
loopne
mov
cmp
sti
jge
inc
test
out
xor
jno
stos
rorb
cmp
aas
pop
inc
es
test
mov
dec
or
push
or
mov
int3
jmp
es
or
lahf
mov
clc
lds
sbb
call
xchg
decl
lcall
fsubs
or
mov
movsl
es
mov
and
push
ds
ljmp
push
dec
sbb
cwtl
lds
xor
push
std
push
cwtl
test
cmpsl
leave
cmc
js
sbb
mov
lds
dec
push
ds
inc
xchg
aad
pop
xchg
jae
lea
xchg
aaa
mov
mov
les
mov
xor
out
sbb
pop
out
mov
pop
adc
loop
mov
mov
pop
iret
pushl
mov
mov
jge
inc
mov
cwtl
test
fs
fisttps
and
sbb
test
push
lret
xchg
inc
orb
add
add
sub
lea
inc
aaa
pop
inc
mov
cmp
sbbl
push
popf
xchg
mov
adc
ud1
adc
adc
mov
out
or
cmpsl
in
pop
fisubrl
ja
daa
or
adc
adc
mov
les
bound
inc
inc
jmp
ficoms
insl
outsl
mov
pop
mov
sbb
mov
mov
or
jbe
push
sub
push
and
xor
int3
ret
lahf
das
xchg
pop
inc
movsb
and
test
inc
pop
cmp
jbe
xchg
arpl
in
sub
lcall
mov
sub
pop
and
or
dec
sbb
pop
mov
adc
inc
clc
and
aas
push
adc
and
push
push
push
js
or
xchg
jl
fldcw
in
js
inc
push
in
mov
cmpsb
repz
lds
sbb
test
adc
jno
clc
push
arpl
sarl
and
sub
mov
and
adc
popl
lsl
mov
or
jmp
outsl
scas
jle
mov
sbb
xchg
lods
inc
pusha
add
sbbb
or
pusha
sub
cmpsb
lcall
pusha
mov
xchg
mov
test
pop
xlat
and
cmpsb
mov
push
ret
outsb
jns
inc
nop
test
fwait
lret
cmp
sahf
sub
out
push
and
pop
test
subb
dec
xor
jg
fdivrs
int3
fs
lock
mov
xor
push
aaa
rorl
ret
cmp
inc
cli
push
popl
ds
xchg
push
out
xlat
xchg
cli
xlat
call
mov
scas
xchg
std
push
out
popl
xchg
pop
mov
movsb
or
sub
mov
imulb
mov
jge
in
mov
cli
cmp
xor
cmpsl
xor
and
or
mov
dec
cmc
adcl
cmp
mov
sub
pop
cmp
jecxz
push
mov
arpl
addr16
fcmovne
jno
sbb
stos
stos
add
dec
add
dec
add
xor
adc
dec
push
inc
xor
xor
and
mov
sbb
sub
add
lahf
cmc
lret
das
dec
xor
add
scas
xlat
cs
push
fdivs
push
jmp
xchg
mov
rclb
pop
mull
in
jns
lods
nop
xor
fidivrs
xor
int
aad
jl
dec
das
test
dec
pushf
imul
ss
pop
imul
inc
xchg
shrl
jne
fs
arpl
sahf
fs
test
lcall
and
in
loopne
xchg
enter
outsb
push
lods
mov
mov
jp
mov
xchg
xor
cmp
das
sahf
iret
fsubr
cmpsb
das
std
fwait
aaa
iret
cmpsb
into
sub
and
push
xchg
xor
xchg
pop
lds
mov
push
fwait
jmp
aam
push
push
fnsave
aas
leave
jge
xchg
stos
mov
insl
ja
mov
into
pusha
mov
dec
insl
sbb
loopne
mov
addl
repz
call
jae
cltd
xor
or
xchg
orb
jg
call
jg
mov
ss
outsb
stos
cmp
mov
ret
xchg
add
add
jae
xchg
repz
fimuls
dec
pusha
es
gs
jnp
das
lcall
push
test
inc
nop
cmp
dec
fstpl
jae
push
adc
mov
push
jae
jmp
xor
dec
or
cmp
incl
xchg
divb
sbb
xchg
xor
cmpsl
scas
cmpl
pop
fidivrs
sub
and
jo
pop
mov
stc
push
cmp
prefetchwt1
cmp
mov
cmp
cmp
mov
fwait
mov
cltd
shrl
stc
push
add
daa
int3
int3
xlat
icebp
jl
inc
mov
popf
sahf
fwait
mov
enter
push
leave
fsubl
daa
or
ret
loop
and
mov
sti
mov
push
rolb
sahf
pop
ja
xor
mov
add
je
pop
data16
imul
mov
rcr
out
pop
xor
pop
push
std
ss
popa
orl
sbb
or
mov
in
sarb
lock
cmp
mov
mov
call
dec
loop
jno
ds
iret
mov
jno
push
imul
insb
fadds
cs
mov
scas
jb
sahf
jno
push
pop
cmp
outsl
aad
mov
or
ds
mov
jo
clc
or
push
fcmovu
or
ds
sbb
cmp
imul
mov
mov
insl
shll
out
in
lret
pushf
and
loop
and
sub
sbb
nop
cmp
jp
sub
mov
js
ljmp
lret
push
pop
aam
add
andl
dec
cmp
jecxz
jae
leave
sub
jg
jle
pop
mov
sub
mov
lods
pop
incb
fsubr
aas
dec
mov
cli
jnp
or
adc
ljmp
cli
sbb
xchg
stos
bswap
cmp
cmp
mov
xor
push
rorb
push
lock
into
inc
dec
les
ret
adc
jmp
lds
mov
mov
mov
leave
jl
loope
test
jbe
pop
mov
and
jnp
and
mov
mov
jnp
iret
xorl
or
roll
mov
or
ljmp
add
mov
push
inc
aas
insb
fimuls
cwtl
daa
sub
out
clc
add
xor
cmp
jo
arpl
ss
out
scas
fisttpl
test
xchg
insb
xor
rcrb
jmp
xor
push
fcoml
add
mov
sbbb
mov
xor
xchg
jne
lods
sbb
cmp
push
cmpsb
rcrb
out
test
fwait
aas
dec
or
aas
xchg
bnd
sub
push
mov
stos
mov
imul
mov
lcall
rorl
and
sbb
pop
mov
push
and
push
sbb
adc
cmp
xor
out
in
mov
fisubs
push
push
and
imul
inc
fs
pop
xchg
mov
cmpsb
inc
inc
insb
dec
lret
mov
jp
stc
seto
mov
inc
push
nop
and
fisubrs
int
aaa
inc
add
inc
test
ret
stos
cmpsb
cmp
pop
mov
push
imul
or
in
fsts
pop
repz
pusha
xchg
mov
xchg
ror
sti
scas
icebp
jo
mov
loope
mov
shll
mov
mov
or
jmp
cmp
sub
jae
mov
jne
daa
lea
adc
into
scas
push
test
xchg
jmp
out
push
mov
sub
mov
mov
mov
pop
test
sti
aad
lds
jb
jg
hlt
add
in
xchg
dec
sub
dec
outsl
pop
aaa
dec
and
popf
cmpsb
pxor
mov
mov
xlat
mov
inc
pop
cmp
inc
dec
push
enter
jmp
add
insl
jmp
arpl
adc
jecxz
lods
data16
mov
lahf
adc
rclb
aad
lock
or
mov
outsl
and
cwtl
add
dec
xorb
inc
mov
sbb
cld
or
subb
xor
cmpb
mov
idivl
test
jg
inc
jo
mov
sbb
jne
pop
push
mov
jmp
arpl
loope
xchg
or
negl
jb
mov
into
pusha
pop
dec
jp
sub
mov
add
jecxz,pt
xorl
jp
mov
mov
jp
jne
lret
push
mov
sbb
rcrl
pop
xchg
mov
push
cmp
loopne
pop
mov
test
xor
mov
pop
ret
mov
mov
cmp
cmp
mov
pop
shr
xchg
popa
scas
mov
dec
mov
jne
adc
add
lret
and
dec
xor
clc
push
lds
loop
adc
add
sarb
mov
insl
mov
out
aam
and
out
mov
imul
cmp
inc
cmp
mov
insb
xchg
in
lret
out
xor
pop
push
addb
cmovns
inc
add
cltd
or
and
xchg
dec
pop
aaa
in
mov
fnstcw
rcl
outsl
insb
jmp
pop
cmp
mov
adc
xor
and
test
inc
movsb
inc
mov
lahf
mov
or
dec
xor
mov
push
push
mov
insl
outsb
mov
and
divb
fimull
mov
fwait
rolb
sbb
enter
jae
lahf
enter
push
fdivr
push
jo
pusha
or
inc
push
push
mov
jecxz
out
nop
xchg
idivb
jl
cmp
test
bound
cmp
mov
push
mov
xchg
cmp
outsl
xor
pop
inc
mov
mov
fsubrl
imul
push
in
dec
jb
or
leave
cltd
mov
add
repz
out
pop
sbb
jg
lds
sbb
fs
jle
mov
mov
mov
adc
or
mov
mov
fsubr
into
mov
das
lods
cwtl
pop
cmp
js
gs
adcl
rorl
sarb
push
push
dec
inc
aad
inc
dec
dec
sub
and
add
push
dec
add
outsl
jp
sbb
shll
fsub
ss
mov
adc
push
mov
mov
sbb
mov
cmp
adcb
and
cmc
dec
jb
mov
int3
add
sub
jns
adc
xor
popf
int3
lea
pop
in
mov
xchg
lret
adc
es
jne
dec
test
push
enter
js
jo
bound
jns
ret
or
icebp
push
mov
movsb
dec
das
scas
sbb
sub
es
fcmovnu
and
jp
jns
xchg
scas
int3
das
test
mov
imul
mov
and
dec
enter
or
fadds
lods
add
jo
les
mov
sahf
repnz
mov
sub
sub
pop
pop
test
fidivrl
sub
sub
add
iret
test
dec
dec
arpl
aad
in
in
xor
sbb
push
test
lea
inc
in
mov
jae
or
sub
shrl
iret
xor
or
xchg
outsl
pop
mov
in
dec
mov
insl
sahf
lcall
xchg
cmpsb
outsb
sub
sahf
popf
pusha
sti
cltd
mov
test
outsb
fsub
pushl
in
mov
ds
mov
mov
adc
ret
push
and
adc
mov
pop
sahf
pop
imul
jl
jne
adc
and
cmp
sbb
pop
mov
int
mov
fwait
je
daa
inc
or
lea
fwait
imul
jb
loop
repnz
in
sub
lds
mov
iret
sbb
out
add
mov
sbb
mov
enter
mov
pop
adc
mov
sub
xchg
push
cmp
push
std
mov
jp
or
cmp
fisubrs
xchg
add
xor
ret
ss
add
sahf
sub
aas
add
lds
sub
mov
cli
xchg
fcmovb
mov
fsts
cmp
and
iret
sahf
outsl
fstps
je
push
jge
lock
add
mov
jno
das
sarb
inc
sbb
add
xchg
pop
adc
jmp
push
jp
cmp
jb
xchg
cli
movsb
xor
xlat
cmp
cmp
iret
dec
mov
stos
add
scas
sub
data16
pop
test
dec
stos
mov
ss
adc
jecxz
sub
mov
lds
and
lahf
in
push
xor
push
or
mov
scas
in
jno
inc
pop
sub
xchg
cltd
adc
jns
aaa
fsubrs
rclb
out
pop
mov
push
nop
and
or
out
mov
lock
cmpsb
stc
jo
adc
cmp
subl
sub
in
sbb
lahf
or
mov
cs
jge
cli
out
negl
add
psrad
mov
pushf
jnp
arpl
inc
mov
push
mov
mov
lock
sbb
sub
pop
push
push
dec
fmul
mov
mov
in
aas
ja
in
cmp
xchg
popf
fstps
jmp
fptan
jmp
outsb
ret
sbb
push
cmpsb
pop
push
mov
rol
mov
jmp
adc
adc
roll
push
pop
push
pop
lods
aaa
test
in
scas
rcll
lahf
movl
dec
sub
jle
pop
adc
mov
fucomip
ror
mov
imul
lret
imul
bound
iret
or
adc
je
cmp
inc
inc
jnp
adc
rclb
push
in
add
inc
push
movsl
add
dec
js
js
lret
loope
and
or
fldenv
xor
clc
mov
cs
mov
out
stos
cmp
adc
push
loope
xor
xlat
mov
jl
aam
neg
addr16
fmuls
iret
sbb
push
push
adc
in
sub
jne
cmp
arpl
pop
outsl
int
or
cmpsb
icebp
leave
mov
push
jbe
dec
out
and
mov
lock
jno
push
mov
mov
xchg
leave
add
inc
push
adc
dec
sbb
ja
inc
push
lcall
dec
xor
sbbl
jg
dec
push
fldl
inc
fstpt
add
mov
sub
xor
fbld
pop
mov
add
repnz
test
mov
shl
stc
cmp
outsl
icebp
mov
cmp
cmp
bound
jge
test
test
and
subl
decb
fnsave
dec
mov
mov
cmp
ret
rorl
addb
xchg
pusha
cmp
lods
and
leave
or
lahf
lea
jns
adc
stos
ja
stos
push
pop
imul
xchg
cld
xorl
gs
xor
push
out
or
hlt
test
cmp
lea
scas
mov
sub
movsb
fwait
pusha
movl
mov
lcall
push
mov
add
fistpl
test
push
out
xchg
sub
test
sbb
jbe
xchg
sarl
inc
mov
xor
dec
dec
dec
pop
je
sbb
add
mov
xor
adc
jbe
sbbl
aad
cli
push
pop
stos
outsb
jg
loope
popa
stc
mov
addr16
adc
sbb
xchg
xor
add
sbb
mov
cltd
scas
fidivrl
dec
push
aam
orb
scas
shl
push
dec
fstpl
test
xor
rcrl
cmp
pop
out
cltd
mov
dec
in
clc
add
lea
pop
fists
mov
daa
push
rcll
sub
pop
xchg
test
push
xchg
jnp
imul
inc
cli
add
out
add
fmuls
rorb
sbb
out
ds
inc
mov
mov
dec
lds
mov
jge
lock
clc
push
push
test
arpl
inc
lods
or
cld
adc
xchg
mov
aam
jmp
bound
test
lods
inc
add
lock
jne
ja
add
pop
pop
xor
addr16
mov
jns
mov
dec
or
xchg
push
push
lret
xor
add
cmp
addr16
dec
sub
ret
push
add
xchg
mov
lea
mov
imul
ffreep
in
mov
mov
nop
divl
mulb
sbb
and
fs
gs
inc
mov
cmp
sbb
scas
or
push
jecxz
sbb
xlat
push
inc
stos
addb
mov
push
cmp
je
mov
jae
in
cmpb
dec
loope
mov
mov
stos
movsl
js
out
test
std
dec
ret
sub
mov
mov
loopne
pop
add
lret
inc
cmp
clc
inc
cld
xlat
shrl
sti
addb
mov
pop
adc
inc
out
imul
loope
int3
scas
cmp
ss
mov
xchg
and
lock
lret
dec
scas
adc
xor
and
mov
or
and
faddl
pop
sbb
xchg
mov
int3
mov
mov
in
or
xor
sahf
dec
fxch
clc
sub
lret
adc
push
fcoml
fcmovnu
test
test
jbe
out
bound
hlt
adc
dec
xor
cld
mov
incl
pop
xchg
aaa
aam
aad
psubsb
xor
ss
lods
and
mov
add
push
mov
add
mov
imul
stc
inc
xor
dec
cmpsl
cmp
jns
jmp
popf
jno
mov
out
aad
scas
cwtl
test
daa
mov
psllw
or
cmpsb
jmp
movsb
scas
dec
mov
leave
lods
push
std
inc
xor
out
lcall
insb
sbb
cmpl
sub
iret
out
insl
jecxz
lock
cmp
hlt
shlb
and
lret
push
pop
add
mov
je
jg
cs
orl
push
push
mov
pop
pop
add
add
das
push
mov
mul
mov
cmp
aam
mov
rclb
adc
daa
leave
outsl
bound
push
in
sub
mov
mov
adc
push
sub
stos
scas
cmp
outsl
sbb
shll
aam
cli
push
mov
shll
xchg
fs
inc
cmpb
aad
or
fadds
push
jmp
roll
popf
cmp
fisubs
repz
push
inc
xor
xor
mov
jo
int3
pop
pop
out
mov
in
addr16
xor
pushf
sbb
or
lods
xor
fwait
arpl
pop
mov
cld
in
jge
sub
xchg
adc
mov
orb
xor
xor
adc
and
inc
je
jne
cmpsb
mov
out
xchg
cld
imul
cld
aam
pop
jp
adc
xor
mov
es
fs
lods
push
stc
and
cmp
mov
imul
push
fmull
or
out
pop
int
scas
sti
mov
sbb
adc
addr16
or
lock
loopne
popf
push
das
mov
mov
hlt
inc
add
dec
pusha
mov
mov
addr16
xchg
imul
and
push
push
je
cmp
cld
aaa
adc
xor
push
cmc
fnsave
dec
outsb
lret
test
ss
movsl
and
addb
insb
mov
lods
mov
push
jae
lock
mov
mov
adc
add
mov
mov
pop
pop
cli
fxch
push
add
shl
imul
xchg
mov
mov
and
jecxz
out
fdivl
mov
in
out
mov
test
mov
jnp
push
or
fadd
lock
in
js
jne
pushf
das
daa
arpl
and
fiaddl
stc
fwait
cmp
xchg
sub
fstpl
cmp
cwtl
pop
or
adc
test
aad
fcomps
mov
loop
push
push
mov
sbb
mov
hlt
pop
adc
sub
cmpb
sahf
jge
fidivrl
adc
aam
mov
in
loopne
or
jns
add
sub
jp
subl
xlat
xchg
dec
cmp
mov
xchg
and
mov
movsl
xchg
add
mov
ret
fcoml
add
jo
jo
mov
or
mov
mov
ret
cmp
adc
cmpsl
xchg
lock
add
xor
hlt
test
sbbb
sbb
dec
test
dec
mov
xchg
cmpsb
adc
outsb
jae
cmp
ljmp
jae
push
xchg
pop
fistpl
and
fldl
and
jnp
xlat
mov
shlb
cmp
jg
test
and
mov
pop
mov
xchg
pop
dec
iret
jg
cmp
out
pop
push
push
lret
push
call
inc
dec
ljmp
jne
in
jno
mov
jbe
adc
mov
inc
jnp
mov
arpl
lock
or
cli
jns,pn
test
fcomps
aaa
stc
add
sahf
out
mov
ficompl
gs
mov
sbbb
popf
push
jno
loop
jo
stos
pop
cmp
push
pop
push
lods
lea
add
and
mov
dec
rcll
push
jae
xlat
nop
pop
inc
dec
pop
test
cwtl
push
insl
fcomps
scas
insl
or
fwait
cmp
cmpsb
mov
mov
mov
or
xor
movl
rcrb
stos
xchg
mov
ss
or
inc
sbb
sub
fimull
aaa
lods
cmp
outsl
xor
pop
mov
fistps
mov
ja
push
sbb
push
lret
pop
and
lea
out
and
or
cmpsb
push
lret
xchg
mov
shr
sub
bound
test
inc
xchg
inc
call
push
outsb
imul
pop
arpl
into
das
imul
lds
dec
jno
xchg
icebp
cli
cwtl
jno
mov
push
inc
in
inc
jb
aaa
push
andl
cltd
icebp
sbb
xchg
jmp
fs
mov
push
add
test
insl
mov
cmp
push
and
mov
add
out
call
addr16
jmp
scas
and
ret
mov
movsb
add
sub
popf
aad
mov
inc
inc
mov
sub
jo,pt
sbbb
or
pop
push
cmp
push
jg
lods
testb
xchg
lods
push
dec
ljmp
cltd
lret
pop
mov
dec
or
sub
bound
pop
push
aad
xchg
fisttpl
sub
mov
xchg
mov
mov
inc
loopne
je
ret
adc
addr16
and
xchg
and
dec
es
call
or
nop
sbb
nop
add
adc
xor
out
ret
mov
add
jmp
in
dec
out
xchg
stos
dec
xchg
add
dec
aad
jmp
cs
push
ret
fisttpll
psubusb
das
mov
testb
rcr
scas
jb
jns
nop
xchg
pop
arpl
clc
rcl
add
fidivl
movsl
in
test
mov
test
push
cmpsb
inc
push
into
decb
out
cld
shrl
jg
movsl
hlt
das
mov
sub
push
cltd
jbe
pusha
fwait
pop
test
rcll
and
xchg
xchg
cltd
mov
pop
add
and
adc
sbb
aaa
mov
xchg
das
shl
dec
adc
mov
mov
inc
je
adc
cli
or
lcall
out
mov
sbb
into
popa
xchg
inc
inc
jmp
jmp
dec
jle
mov
dec
xor
jae
dec
push
gs
xor
xor
jecxz
jl
je
loop
inc
sbb
jnp
add
dec
push
inc
je
movsb
mov
and
dec
lcall
imul
adc
inc
fists
repnz
dec
lret
mov
aad
aaa
mov
lea
imul
xchg
mov
fsts
cwtl
imul
sub
ds
xlat
std
mov
push
mov
push
aam
in
loopne
push
mov
mov
mov
pop
fimull
stos
aas
jne
cli
ss
mov
into
mov
add
lcall
push
aaa
das
stos
pop
in
mov
xchg
pop
or
les
ret
jno
daa
fwait
shl
sbb
bound
out
loop
in
mov
push
shl
inc
push
mov
fisttps
dec
inc
or
and
fildll
and
cmp
jg
notl
sqrtps
add
fcmovnu
mov
ljmp
testl
lds
cmpsl
xchg
sti
fdivrl
jno
js
or
inc
jg
scas
cmp
cli
into
mov
sub
je
test
pop
mov
movsb
pop
fnop
inc
daa
int3
cmp
jnp
pop
jl
repnz
daa
in
and
add
pop
cmp
xchg
xchg
mov
cmp
mov
mov
xor
pushl
pop
cmc
adc
lahf
jne
ds
nop
or
mov
inc
cmp
xchg
jne
in
push
cmp
mov
or
lods
pcmpgtw
cmp
xlat
lret
mov
cmpsb
pop
mov
popa
mov
in
add
movsb
insb
stc
adc
adc
xchg
imul
and
cmpl
jbe
add
pop
xor
cmp
sub
inc
dec
sarb
xchg
mov
sub
subl
mov
lret
xchg
dec
push
in
xor
icebp
ret
dec
pop
pop
pop
dec
popf
push
es
push
and
mov
fiaddl
mov
stos
push
push
inc
std
mov
lock
push
push
gs
movsb
jne
sub
lds
jle
test
test
jb
push
in
cld
sub
xchg
sub
movsl
sub
shlb
es
mov
les
lods
lock
rcrb
stos
push
and
ret
into
ja
cmp
cmp
xchg
and
inc
mov
out
imul
push
fmull
orb
fistl
stos
pop
scas
or
and
fsubs
cwtl
xchg
inc
fcoms
leave
dec
cmp
lcall
mov
pushf
mov
adc
mov
jb
jg
into
dec
xchg
inc
in
mov
sub
cmpsb
push
movsl
aaa
pop
inc
jb
sbb
sub
out
mov
testl
pop
push
cmp
xchg
sub
xchg
fsub
cmpsb
cltd
enter
cli
maskmovq
negl
push
mov
daa
mov
iret
jl
or
jbe
ja
into
imul
orl
jbe
push
mov
hlt
mov
sbb
and
push
inc
movsl
ja
dec
popa
push
push
notb
outsb
enter
mov
sbb
out
or
cmc
mov
jne
mov
adc
mov
ror
call
sub
ljmp
pop
mov
enter
cmp
xchg
push
jg
push
xorb
jnp
adc
nop
jge
dec
dec
mov
push
jns
mov
push
xchg
push
pop
insl
push
leave
jg
out
mov
inc
sbb
test
jge
xor
lods
insb
sub
push
pushf
jae
mov
out
cmpsl
xchg
nop
cmovns
stos
pop
out
cmp
and
or
je
daa
hlt
pop
inc
dec
sti
mov
xchg
js
jle
sbb
lahf
jae
push
fidivrl
mov
icebp
jge
sar
stos
repz
mov
add
iret
aad
loop
rcrb
mov
fildl
jecxz
mov
dec
add
push
fnstenv
mov
addr16
inc
mov
sbb
inc
enter
cmpl
clc
int3
mov
repz
sti
sbb
lahf
mov
sub
scas
and
jb
jle
and
cmp
movsb
int
lea
xchg
test
xchg
cmpsb
pop
sbb
pop
adc
cmp
hlt
jne
fistpl
cmc
pop
mov
daa
out
xchg
addl
push
ds
push
cmpsb
sahf
push
fadd
pop
xchg
sahf
out
mov
jmp
fistpl
enter
into
enter
lret
movb
or
xchg
scas
adc
cmpsl
inc
bound
or
jne
inc
ljmp
xor
fnsave
pop
mov
jge
or
fistpl
inc
fmul
hlt
mov
sub
pop
xlat
call
mov
inc
or
lcall
push
jge
wrmsr
in
sti
lahf
xor
jp
xchg
push
jecxz
nop
push
dec
xlat
aaa
pop
fs
cmc
test
std
cmp
imul
enter
mov
xchg
cs
cmpsb
mov
mov
jb
popa
and
or
adcb
in
sbb
test
lcall
pop
mov
xchg
loop
aas
scas
xor
shl
jae
mov
cmpsl
cmp
out
adc
lods
xorb
jae
jb
sbb
iret
adc
popa
push
jmp
addr16
shrb
dec
outsl
or
pusha
aas
idivb
mov
cmp
mov
gs
gs
cli
ljmp
outsl
pop
outsl
mov
mov
es
dec
jecxz
dec
jns
fcomip
jmp
cmpsl
push
dec
inc
int3
clc
iret
lock
sub
inc
dec
into
cs
loope
jl
aad
enter
dec
sub
adcb
mov
pop
lcall
scas
cmp
ss
mov
jbe
xchg
sbbb
aad
push
mov
lret
out
and
or
mov
pop
popa
inc
fmuls
int3
cmp
shrl
and
sarl
fistl
mov
incb
push
out
inc
lea
xchg
or
in
inc
cs
cmp
add
enter
or
mov
xor
loopne
loopne
sahf
xor
in
cs
stos
or
cmp
outsl
mov
mov
mov
add
dec
mov
fwait
je
jmp
negl
fdivs
adc
or
add
cpuid
adc
stos
pop
jmp
sub
mov
aaa
stc
sti
pop
nop
popa
push
gs
ret
mov
data16
stos
enter
out
mov
pop
gs
cmp
jg
jne
lock
lret
adc
dec
inc
scas
int3
inc
dec
mov
and
std
xchg
pop
jmp
xlat
pop
out
leave
pop
jmp
hlt
xchg
sahf
add
lods
neg
hlt
inc
jl
dec
lret
cmpsb
or
das
xchg
cmp
ljmp
pop
ljmp
cmc
mov
jb
cmc
xor
inc
sbb
mov
inc
jecxz
xchg
fs
mov
jl
shlb
imul
mov
jae
fnstcw
fidivrl
xorl
fildl
jae
add
mov
sub
pop
push
lea
and
fcmovnbe
pop
jp
pop
mov
pop
adc
stos
fdivrs
mov
idiv
sub
sub
test
xchg
in
pop
roll
adc
jecxz
bound
addr16
push
jne
mov
cs
inc
sub
mov
mov
andl
and
mov
cmp
loopne,pt
int
mov
or
imul
lds
mov
adc
xor
xchg
push
callw
dec
push
mov
inc
cmc
inc
das
dec
and
mov
pop
repnz
gs
idivb
loop
in
xchg
add
cmpsl
js
test
cmpb
mov
add
fsubs
xchg
mov
push
mov
into
pop
lret
jg
mov
cltd
in
repnz
sarl
xadd
jb
or
mov
lret
lahf
cltd
adc
sub
jmp
imul
cmp
in
jne
push
fwait
mov
mov
jbe
jmp
or
dec
xlat
jo
mov
icebp
pop
das
jecxz
xchg
fs
sbb
les
cmpsb
jno
call
mulb
mov
and
shll
out
int3
push
cmp
sub
dec
mov
xchg
mov
push
fistps
mov
ja
popa
les
mov
dec
lods
xchg
pop
ds
cmp
lods
dec
out
dec
mov
hlt
into
sbb
imul
rcrl
push
xchg
fbstp
cmp
cmp
xchg
int3
iret
fisttpll
push
mov
sbb
mov
jae
std
and
arpl
adc
cmc
sbb
inc
jmp
dec
sub
mov
xchg
ljmp
ds
out
adc
cwtl
inc
out
mov
cwtl
or
in
int
mov
cmp
mov
jae
xchg
push
mov
cwtl
adc
mov
ror
les
out
outsl
mov
cmp
loopne
loop
clc
sub
sbb
js
fbld
cmpsl
in
lret
cmp
loopne
xor
pusha
arpl
mov
fcoml
xor
mov
fisttpl
xor
fsts
pusha
add
jbe
out
pop
lock
shlb
sbb
mov
mov
push
int
jle
push
outsb
xor
pop
pop
hlt
sbb
jbe
lcall
inc
call
mov
mov
popf
xchg
mov
stos
cmp
repz
insb
pop
push
pop
fdivr
outsl
mov
push
xor
add
scas
fwait
rorb
jl
jmp
mov
adc
xchg
xchg
sbb
mov
cltd
out
jmp
ss
iret
xchg
shll
sahf
push
movb
push
jmp
in
inc
rolb
test
inc
jp
or
push
xchg
jmp
mov
push
jle
cmpsb
pop
mov
dec
and
vhaddpd
insb
inc
or
rorl
pop
sbb
jbe
cmpsl
js
int
xchg
cmp
jae
je
add
xchg
pop
and
loope
cmp
sar
push
addb
pop
int3
movsb
mov
or
testl
ljmp
cmc
leave
aam
jge
cli
neg
pop
sbb
jne
incl
push
test
mov
xchg
out
sub
inc
pop
or
int
arpl
mov
inc
int
add
mov
std
pop
jb
sub
int
push
and
sbb
pop
xor
in
daa
shll
leave
lret
jne
push
cmc
lcall
jecxz
adc
pop
cmp
in
cmp
xor
int3
repnz
fstl
aam
cld
and
popl
loope
jb
and
pop
xor
xchg
rcrl
sarl
inc
jb
setno
jno
cmp
xchg
jmp
xor
mov
js
xor
cmc
pusha
jmp
jmp
inc
faddp
mov
data16
fisubrs
test
test
dec
inc
sub
push
mov
leave
outsb
mov
jae
repnz
inc
push
dec
sbb
xchg
decb
jns
jge
add
inc
arpl
jg
xchg
pusha
add
lret
gs
clc
sub
shll
dec
mov
ljmp
shrb
in
jecxz
dec
mov
test
xchg
popa
push
inc
comiss
mov
xchg
inc
mov
xlat
pop
outsl
jb
fadd
stos
inc
outsb
bnd
ret
mov
pop
leave
mov
aaa
fs
cmp
iret
nop
aaa
jmp
mov
ret
gs
mov
dec
sbb
add
jl
pop
jg
xchg
loop
mov
xchg
inc
mov
mov
add
cltd
movsl
loope
jl
pop
fstps
jno
xor
pop
jl
lahf
xchg
scas
sub
movsl
lahf
cmpsl
ja
inc
arpl
jbe
cwtl
lods
sbb
mov
popf
les
mov
mov
fwait
outsl
pop
xor
pop
xchg
iret
js
mov
fadds
jno
push
test
mov
sbb
pusha
aad
pop
adc
sub
adc
aad
repz
shll
ljmp
or
adc
pop
loop
pop
jnp
sub
mov
dec
inc
jno
mov
sbb
ret
mov
cwtl
imul
cmp
rorl
sbb
cmc
cld
ret
outsl
sub
mov
push
sahf
int3
cmp
movsl
fistpl
and
addr16
push
sub
mov
orb
mov
outsl
movsl
mov
push
hlt
dec
xchg
movsl
fmulp
jl
in
sub
addl
and
inc
pushl
imul
std
repnz
aaa
xchg
mov
ret
or
mov
les
push
cmp
shlb
xor
mov
dec
fistps
mov
or
inc
rolb
adc
mov
xchg
sub
and
adc
or
xchg
cmp
sbb
mov
push
pop
call
jp
hlt
sar
and
aas
fucomp
cld
mov
or
push
jbe
jbe
jbe
lcall
loop
pop
jl
pop
fwait
jns
insl
pop
or
jge
add
aas
lock
data16
ret
inc
andb
xlat
xor
lret
dec
stc
comiss
or
sti
mov
adc
push
es
das
cmc
pop
daa
sbb
and
in
jp
adc
jecxz
je
enter
test
add
jb
cmpsl
leave
idivb
cmpsb
movsl
inc
xchg
mov
lret
mov
std
sbb
push
dec
add
jnp
push
cmp
jo
insl
or
sub
add
out
aaa
in
bnd
cs
hlt
mov
sub
push
sbb
testl
scas
addr16
jnp
push
push
xlat
adc
leave
es
inc
adc
inc
lret
iret
fisttps
xor
jg
imul
pop
loope
adc
dec
ljmp
cmp
fs
lahf
sbb
lea
fdiv
adc
scas
jo
dec
repz
mov
andl
das
xchg
je
sub
push
mov
mov
mov
xchg
push
jle
and
ljmp
imul
ljmp
mov
pop
push
pop
xor
xlat
addl
lds
mov
dec
adc
shrl
xchg
mov
xor
push
jl
ret
lock
mov
jp
mov
fmull
sbb
fs
xchg
pop
jg
clc
cmp
cmc
pop
xchg
pop
repnz
or
push
xlat
sti
stc
sbb
sbb
fs
mov
mov
or
mov
and
rolb
lods
pop
outsl
pop
imul
lock
adc
fisttps
push
xor
cmp
popa
or
cli
dec
and
sbb
mov
hlt
xchg
das
idivb
push
std
jbe
add
or
clc
jge
out
cmpsl
add
rolb
mov
pop
add
out
arpl
inc
adc
mov
add
xor
lcall
mov
xlat
aas
pop
mov
push
mov
daa
adc
or
das
lea
mov
aam
xchg
fistpl
clc
pop
adc
cld
mov
aad
adc
in
dec
pop
lock
cmp
sub
stos
cs
xorb
repz
or
icebp
lret
add
lret
repnz
push
movsl
xchg
std
movsb
les
mov
sbb
aaa
and
jge
std
jnp
daa
cs
pop
out
int3
mov
ss
xlat
xchg
adc
popa
lret
daa
aad
cmpl
movsl
push
ds
cs
mov
lahf
stc
add
sbb
jle
xor
adcl
sbbb
pusha
out
lcall
inc
sti
in
mov
test
imul
add
fwait
out
jnp
arpl
mov
scas
sahf
loope
cld
push
and
mov
push
movsl
sarl
and
sbb
into
dec
adc
lock
test
add
cmp
leave
sbb
fdiv
adc
mov
pop
icebp
cmp
xor
shl
shlb
pop
ljmp
test
dec
sub
push
mov
push
cmp
mov
imul
pop
fistl
xor
jl
jns
inc
cmp
adc
hlt
pop
clc
sbb
stc
jae
cmp
jmp
xchg
movsb
jmp
daa
leave
dec
daa
xchg
push
cmp
xor
in
lds
add
add
out
xadd
aaa
or
dec
sbb
and
addb
xchg
jns
cmpsl
cs
xchg
flds
ret
test
jo
jb
xchg
clc
inc
shll
inc
cmp
push
rcll
ret
and
punpcklwd
push
push
lahf
mov
jle
xchg
outsl
xor
insb
pop
fstps
xlat
push
push
jns
adc
cli
sarl
inc
jge
aas
test
fcompl
dec
push
je
pop
das
xchg
push
sub
andnps
cli
inc
lcall
lds
jle
xor
push
rolb
ja
clc
xchg
stos
push
popa
rorl
jno
mov
push
bound
dec
xor
push
inc
dec
aad
mov
sbb
lcall
test
cld
mov
inc
mov
push
es
outsb
stos
push
push
pop
arpl
sub
cli
or
cmp
xor
sarb
mov
shll
jg
cmp
scas
int3
js
test
cli
sahf
dec
ss
adc
sbb
push
mov
frstor
cli
lods
daa
push
push
aad
add
cmp
mov
icebp
push
cs
push
mov
out
leave
push
mov
and
mov
adc
and
cmp
xlat
shrl
pop
imul
sub
in
push
mov
xor
pop
pop
jle
outsl
mov
cmp
mov
test
sti
pushl
sub
loope
jno
cmp
inc
xchg
repnz
rorb
push
repnz
and
test
push
das
aas
push
sub
ss
jmp
jne
lahf
jo
not
outsb
rolb
iret
stos
out
cmp
xchg
movl
leave
jae
cmp
push
imul
mov
mov
push
dec
or
iret
cltd
xor
fldt
scas
inc
push
sbb
sahf
in
inc
imul
jnp
mov
and
adc
dec
sub
xlat
and
decl
push
dec
pop
mov
push
pop
call
xchg
xor
jbe
cmp
jns
mov
arpl
shll
rcrb
xchg
push
bound
sarl
sub
mov
push
pop
push
adc
movsb
clc
in
sub
sbb
push
dec
sbb
xchg
jnp
adc
adc
imul
add
out
pop
std
push
jbe
addr16
mov
jg
neg
jle
and
cmp
leave
test
jbe
scas
out
xchg
or
ss
je
dec
das
data16
inc
xchg
mov
cmp
sub
ret
aam
push
inc
jae
movsb
xchg
inc
mov
jmp
in
sub
jecxz
xor
cmp
pop
mov
stc
push
inc
sbb
nop
inc
mov
mov
mov
inc
inc
addr16
sbb
aaa
adc
mov
pop
and
jecxz
sahf
sub
into
dec
movsb
dec
push
push
pop
popa
xor
mov
loopne
pop
jns
testb
ds
push
std
xor
mov
xchg
iret
pop
xor
jbe
sahf
aad
dec
pop
push
xor
jae
cmp
mov
decl
xchg
int3
sbb
xor
leave
rcll
or
add
flds
mov
and
cmpsb
mov
xor
outsb
cmp
pop
xchg
das
mov
dec
xchg
es
xchg
mov
pop
jmp
jge
cmp
lret
mov
jle
xor
and
adc
clc
ja
xchg
push
mov
arpl
loopne
sbb
xor
pop
sub
dec
pop
xor
in
xlat
cmp
addl
hlt
dec
inc
or
sub
sbb
das
lret
pop
cmp
inc
movsl
mov
pop
hlt
mov
ja
sub
push
cli
enter
sub
loop
jmp
test
pop
xchg
add
mov
mov
cmpsl
and
mov
test
rclb
mov
lret
fwait
jl
inc
andb
dec
repz
and
hlt
nop
xor
sbb
sub
andl
pop
mov
jne
fildll
mov
add
lods
push
xor
mov
in
out
pop
stos
xchg
jae
test
aas
pop
add
or
in
cwtl
jo
push
mov
mov
ja
inc
insb
out
mov
xor
adc
add
mov
sub
mov
insb
fsub
sub
and
jno
mov
movsl
out
arpl
mov
jp
push
fs
out
repz
mov
xchg
jge
and
jns
in
repz
mov
leave
ds
scas
mov
jo
stos
push
sub
cmpsb
sub
inc
and
ds
lods
push
bound
adc
push
push
lods
push
fmul
fnstcw
dec
sub
push
ret
ljmp
and
mov
pop
call
or
das
add
xchg
insb
pop
in
int3
outsl
fnop
testb
nop
imul
fstpt
int
mov
dec
arpl
test
ret
adc
sub
add
cmp
pop
nop
rolb
mov
test
sbb
iret
cmp
loope
jnp
in
dec
sub
sti
sahf
push
dec
add
sti
and
jne
inc
jne
xor
test
aaa
call
pop
cld
mov
xlat
sub
mov
in
shlb
scas
rolb
or
data16
out
dec
xchg
into
pop
bound
lods
pop
insb
mov
mov
xor
sbb
xchg
adc
in
es
inc
push
xlat
js
jle
stc
adc
cmp
pop
inc
and
hlt
jno
cwtl
aaa
xlat
mov
insb
or
stos
xor
test
ja
js
mov
push
imul
ljmp
sarl
mov
insb
push
ret
fstpl
dec
loop
das
inc
sbb
pop
mulb
adc
jmp
jg
xchg
in
movsl
push
out
xchg
std
add
push
into
pushl
test
xor
pop
inc
or
pop
sub
add
or
jecxz
leave
loop
test
dec
les
add
cmc
jne
mov
add
jmp
dec
or
mov
shrb
insb
add
rclb
iret
xor
lds
sbb
movsb
int
cmpsl
or
dec
or
jg
push
es
sbb
push
sub
repz
mov
rep
dec
fsts
fisubl
testl
add
mov
cmpsl
icebp
enter
push
mov
dec
sub
je
cmp
mov
mov
sahf
pop
mov
mov
dec
loop
inc
cli
sbb
push
or
ffree
dec
movsl
push
movsl
push
or
dec
icebp
cltd
lods
int3
add
popa
aas
and
pop
cmp
dec
mov
xchg
sub
loope
sub
iret
mov
call
das
leave
bound
leave
xchg
inc
addr16
fcoml
lret
lea
xor
lret
sbb
sub
hlt
les
lods
test
insb
cs
sub
pop
rep
ljmp
cmpsb
xor
flds
push
clc
adc
inc
stc
loope
nop
roll
es
push
lods
sbb
aam
in
push
xchg
and
add
cmp
and
iret
loopne
xor
mov
push
xchg
clc
and
stc
inc
push
int
pop
aaa
cmp
sbb
test
mov
dec
pop
mov
sarl
aam
mov
jmp
sub
or
xor
sti
sbb
or
loope
das
xchg
mov
cli
ret
jns
and
test
mov
testl
pop
xor
dec
xchg
cli
cmp
loopne
inc
cltd
jae
mov
xchg
pop
dec
lahf
sbb
stos
mov
andb
adc
jno
adc
xchg
inc
adc
push
jns
scas
push
sbb
subl
sbb
inc
mov
cwtl
je
push
fildll
addr16
lock
rolb
or
jnp
push
add
sti
jp
out
dec
std
inc
imul
insl
pop
fstl
rcl
push
mov
stc
es
pop
stc
pop
jecxz
lea
or
repz
pop
fdivl
jno
movsl
dec
js
sbb
jnp
xchg
and
mov
hlt
out
xchg
inc
inc
mov
sbb
shlb
scas
pop
loop
xor
sub
or
outsb
lahf
dec
loopne
dec
xor
mov
push
loope
add
outsl
sub
mov
jo
cs
cmp
arpl
sbb
jmp
and
pop
test
jnp
pop
pop
dec
jecxz
xchg
push
lcall
ret
das
movb
neg
push
pop
jp
and
xor
lea
loope
pushf
popa
add
mov
mov
pop
mov
sub
and
or
ret
and
stc
fldcw
incb
pop
je
mov
mov
sub
add
or
bound
add
out
jp
jl
add
xor
dec
xchg
cmp
cltd
psrlw
pop
xchg
insb
dec
stos
mov
out
mov
cmpb
pop
sub
das
cmp
mov
out
cli
je
scas
jne
fsubl
xchg
mov
divl
jl
stos
sbb
push
xor
lea
aaa
pop
outsl
cmpl
sbb
es
fmulp
bound
mov
adc
imul
and
outsl
ret
push
push
dec
rcl
xor
ror
adc
out
mov
mov
ror
jnp
xchg
aaa
mov
xor
in
sbb
test
out
jae
bound
enter
fbld
sarl
sub
int
push
pop
push
test
jae
or
and
stos
mov
vsqrtps
add
mov
gs
movsl
sub
fs
mov
xor
ljmp
jl
lcall
mov
out
mov
ret
mov
fmul
movsb
aas
ret
in
repnz
shlb
icebp
push
wrmsr
sub
inc
scas
gs
push
mov
bound
jb
dec
jecxz
add
mov
adc
jecxz
ja
mov
or
pop
int3
or
shl
adc
dec
push
add
push
bound
lods
and
xchg
gs
xchg
rcr
call
stos
es
lret
daa
loop
push
ja
sar
or
addl
xor
sub
push
xor
and
outsb
mov
lds
pop
outsb
sbb
or
lock
int
and
mov
cmc
pusha
stc
xorl
popa
push
pushf
shl
push
popa
mov
test
addr16
or
dec
nop
imul
loopne
mov
iret
push
fsubrl
insb
push
sub
loop
mov
nop
hlt
gs
sahf
movsl
dec
popa
dec
inc
sbbb
repnz
and
inc
test
adc
inc
add
les
sbb
imul
call
outsl
icebp
and
outsl
or
frstor
adc
push
sub
xor
out
jge
xlat
pop
cmp
add
dec
mov
fildll
push
rep
rcr
mov
and
icebp
cmpsl
lds
cli
xchg
sbb
lcall
sbb
es
in
pop
adc
loope
jl
leave
xchg
and
cmp
inc
inc
mov
cs
jl
ds
popf
mov
mov
cmp
or
sbbb
jmp
xchg
xlat
adc
das
int
out
cmp
adc
and
dec
inc
popf
fstl
bound
jno
fcoml
ds
mov
cwtl
mov
cld
xor
cmpl
bts
aas
cltd
sub
fwait
lea
and
jno
fiaddl
mov
adc
in
pop
mov
test
ss
sub
movsb
and
push
inc
xchg
mov
and
les
inc
into
fcompl
and
push
push
shrb
loope
and
sub
cli
or
pop
pop
add
cmp
jo
ds
mov
and
cs
pop
and
cmp
push
lods
xor
xorb
stos
in
sub
xchg
xchg
mov
fdiv
lcall
scas
inc
sahf
xchg
or
dec
push
cmp
sub
xlat
or
add
icebp
fdiv
dec
notb
stos
adc
sub
gs
daa
xor
je
lods
adc
mov
inc
and
xchg
decl
fmull
add
rcrl
push
lods
das
lret
adc
jae
ret
xor
sub
dec
mov
out
std
inc
sub
out
int
lock
push
pop
ret
mov
sbb
repnz
pop
mov
ret
fstps
ror
les
sbb
dec
loope,pn
inc
or
sbb
fs
push
push
sub
lcall
push
out
jo
mov
mov
fwait
xor
fistpl
adc
div
enter
or
mov
leave
jge
ljmp
sbb
test
push
das
fsubrs
push
mov
cmpsl
mov
jecxz
and
dec
out
jle
push
sub
dec
pop
sub
cli
dec
mov
mov
in
jnp
jnp
aaa
clc
pop
or
outsb
xchg
jp
stos
xor
test
imul
mov
or
insl
fisttps
cmp
sub
xor
fwait
stos
xor
pop
loope
adc
sbbl
ss
push
in
push
pop
dec
and
sbb
mov
mov
aad
xor
ret
aad
pop
addb
push
insl
add
aam
cmp
xor
push
dec
mov
push
xchg
push
mov
pop
test
or
pop
push
sbb
jle
pop
sbb
rep
insl
ljmp
arpl
das
mov
movsb
call
pusha
mov
inc
jae
call
lods
adc
icebp
jecxz
and
fidivl
outsl
xchg
fistpl
loopne
in
add
aad
adc
pop
sub
std
pusha
cltd
pop
int
mov
dec
mov
aas
mov
mov
mov
test
leave
dec
xor
int3
push
sub
pop
inc
sbb
mov
sub
push
sub
fwait
mov
xchg
xchg
in
dec
mov
push
not
xor
cmp
dec
add
test
les
push
inc
cltd
out
negb
leave
pop
and
add
mov
fs
adcl
xor
outsb
test
jmp
hlt
and
inc
push
dec
iret
jns
cmpb
jl
fdivrl
inc
cld
cmovge
insb
test
in
aaa
mov
aad
lahf
shl
test
test
movsl
gs
lods
outsb
hlt
aaa
mov
xor
ja
stos
aad
jle
jge
movsb
mov
mov
add
jns
add
rorl
lea
and
sub
cltd
cmp
stos
out
and
sub
ja
add
rol
rclb
mov
int3
fdiv
cli
stc
mov
cmp
test
inc
shll
xor
mov
imul
fiaddl
add
ljmp
test
cmp
mov
mov
lods
fisttps
jbe
jbe
add
xor
ret
add
xor
inc
cmp
xor
adc
mov
or
repz
int
push
jecxz
mov
or
dec
sbb
mov
sbb
rcrb
and
or
mov
ds
mov
repz
push
loope
int3
fstpl
jb
push
call
daa
sub
popa
and
mov
push
in
out
bound
push
scas
push
pop
cmp
xor
pop
shlb
mov
inc
adc
ljmp
push
popa
in
and
xor
repz
xchg
lds
xchg
cwtl
dec
gs
xchg
push
jp
orb
xchg
sub
inc
adc
jmp
popf
sbb
andb
in
xchg
cmpsb
rcrb
mov
xchg
push
loopne
jns
aas
pusha
inc
sarl
gs
mov
or
push
gs
sub
pop
test
push
fs
inc
adc
sti
or
dec
mov
sbb
sahf
cmp
fs
mov
rorb
cli
sub
cmc
fsubp
out
aad
cs
or
inc
push
les
jno
hlt
cltd
ja
mov
sbb
sti
xor
mov
pop
add
shlb
lods
popa
sbb
ja
arpl
mov
adc
xchg
xchg
clc
sub
cmpsl
and
inc
push
and
enter
or
ja
inc
in
andb
ret
mov
pop
cmpsb
sbb
jbe
jbe
test
icebp
xchg
xchg
imul
popl
xchg
ret
fistpll
xor
lret
rcl
mov
dec
mov
or
call
scas
cli
rclb
loopne
cmp
mov
adc
sbb
or
add
sarb
push
xchg
insl
inc
out
addb
outsb
roll
mov
jnp
mov
pop
fidivl
out
in
outsb
mov
cli
sbb
pop
call
or
cmpsb
xor
mov
clc
mov
jae
ss
inc
mov
xchg
call
mov
xor
aas
and
stc
sbb
jnp
xchg
dec
push
fidivrl
popf
mov
fadd
xor
mov
adc
mov
mov
sub
iret
loopne
fwait
gs
mov
dec
lahf
leave
cmpsl
xchg
add
fxch
add
call
mov
adc
cmp
ss
test
xchg
dec
mov
jnp
xchg
cwtl
push
mov
pop
and
inc
mov
fidivrl
adc
push
and
or
in
jnp
sbb
cmpsb
aaa
mov
rorb
ja
les
pop
and
incb
ja
mov
push
xchg
xchg
lds
in
loopne
jns
ja
lcall
aam
aas
xchg
or
push
out
das
hlt
repnz
cmp
shll
lea
lods
dec
mov
cld
test
aaa
daa
sub
sti
pushf
push
mov
movsb
mov
in
pop
shlb
sarl
mov
std
jbe
lds
scas
insl
mov
add
les
xchg
add
cmp
les
or
push
decl
fiaddl
inc
jo
hlt
mov
add
push
pop
insl
adcb
cwtl
movsl
mov
jae
icebp
arpl
lods
push
outsl
cmp
dec
xor
push
rolb
rcrl
xor
xor
or
ja
xor
adc
push
mov
dec
xor
mov
push
lods
pop
lret
dec
cmp
jae
add
pop
fs
jbe
cmp
push
sahf
xchg
lods
leave
push
aas
mov
test
sbb
xor
mov
pop
dec
daa
mov
or
testl
roll
and
inc
push
mov
mov
out
movsb
inc
or
mov
outsb
popf
mov
jp
fisubl
pop
out
fsubl
jns
or
inc
xchg
leave
iret
outsb
pop
push
sub
cmp
out
sub
mov
fidivl
add
dec
sti
sub
out
lods
cmp
sub
inc
daa
push
mov
inc
fldcw
cwtl
and
adc
inc
rcll
out
mov
mov
xchg
jo
lret
xor
mov
imul
and
push
stos
int
fsubs
sar
inc
gs
push
add
int3
mov
xor
iret
add
mov
test
ficomps
ljmp
aad
cmpsl
push
test
inc
mov
mov
andb
xor
pushl
cmpl
popf
enter
xchg
push
mov
nop
lods
xchg
lods
dec
in
into
mov
mov
mov
jecxz
repnz
into
adc
pop
cmp
push
push
mov
fcom
mov
and
push
loope
rorb
cwtl
xor
insl
hlt
cmpsl
cwtl
pop
ret
cltd
popa
pop
int
out
or
dec
xchg
inc
enter
std
push
cmpsl
jmp
sub
shll
or
stos
jns
jg
add
inc
jle
push
mov
jb
ret
fisubs
loopne
popl
addr16
and
sti
test
int3
xor
cli
gs
fs
test
push
jp
cmp
icebp
out
rolb
jno
ficomps
sbbb
lock
xor
inc
sahf
shll
inc
hlt
push
lcall
xchg
cmp
shlb
fsubrl
add
mov
daa
ja
add
out
inc
rclb
hlt
out
jmp
dec
shl
inc
mov
mov
jbe
inc
add
rcr
push
outsl
int3
shll
sbb
or
dec
xchg
mov
mov
mov
mov
add
adc
in
loope
aad
push
sarl
imul
out
fistpll
inc
jecxz,pt
sbb
aas
dec
imul
xchg
lret
pusha
cwtl
sub
negb
int
jge
mov
insb
gs
dec
add
decl
shlb
in
or
push
dec
lods
adc
inc
push
movsb
dec
movsl
test
fwait
into
pop
push
push
scas
test
mov
ret
mov
mov
add
in
sbb
ficoms
mov
popf
cmp
push
cmp
dec
outsl
pop
insb
push
icebp
lock
mov
movsl
sub
lods
test
jb
xor
and
lods
mov
pop
stos
scas
popa
dec
dec
fwait
int
popf
sti
mov
push
push
in
in
xor
int3
lcall
adc
jb
out
es
xchg
cmp
xor
inc
repz
mov
lahf
lock
or
mov
jecxz
fidivl
shl
and
sbb
inc
out
fwait
inc
add
aas
xchg
and
push
xor
mov
mov
sub
inc
arpl
and
mov
add
xchg
pop
sub
std
pop
ljmp
adc
loope
testb
gs
addr16
popf
or
lcall
xchg
arpl
jmp
xor
fmuls
out
lret
cmp
sub
jbe
push
js
push
dec
dec
out
mov
in
adc
push
adc
outsb
jb
jge
and
mov
repnz
pop
lock
mov
es
add
js
iret
or
pop
pop
in
lods
xor
adc
mov
push
sub
jl
xor
enter
pop
ja
lods
bound
pop
push
repz
mov
je
adc
xchg
xchg
dec
outsb
call
push
test
push
rcl
cmpb
bound
das
lea
adc
pusha
xor
test
sti
jge
into
add
out
sar
jecxz
loopne
imul
jmp
repnz
loope
xor
lcall
or
sub
push
adc
lcall
ljmp
mov
inc
sbb
fstpt
push
cmp
bound
out
andb
cmpl
jg
dec
negl
popf
lods
repz
push
mov
aas
into
inc
bound
sbb
inc
push
enter
aas
inc
and
stos
or
pop
sarl
sbb
and
xchg
sahf
sbb
and
and
lret
outsl
loop
jae
cs
mov
insl
cltd
ds
adc
adc
mov
aad
cmp
mov
aad
bound
ja
sbb
push
cltd
popf
test
insl
xchg
fistpl
test
fs
pop
cwtl
inc
pop
mov
or
mov
daa
xchg
mov
nop
mov
lcall
in
cmpsb
inc
inc
xor
insl
cmp
pop
jecxz
fisttps
jae
mov
xor
aas
jp
js
xor
ljmp
pushf
pop
pop
sbb
or
mov
dec
lds
ja
inc
jg
test
pop
sbb
mov
sbb
enter
xlat
adc
and
or
push
idivb
mov
cmp
mov
mov
pusha
repnz
push
sub
movsb
cmp
or
mov
pusha
sbb
scas
dec
xchg
cmp
pop
movb
gs
cmp
and
jae
mov
pop
mov
pop
lds
mov
jnp
mov
jecxz
mov
xchg
test
aam
and
jmp
push
loope
pop
xor
testl
shl
jecxz
loop
push
jnp
rep
shlb
xor
push
loopne
cmpsb
mov
xchg
lock
out
xor
fistps
fs
mov
add
sub
dec
mov
in
cmc
imul
add
dec
push
dec
repz
add
sub
jns
adc
and
addr16
notl
and
in
bswap
mov
fmul
aaa
xor
xchg
adc
jo
fidivl
stos
loop
lret
jg
jne,pn
sub
ror
jl
and
ss
or
jmp
add
iret
inc
or
icebp
mov
sarl
mov
mov
jecxz
pop
xchg
stos
cmc
nop
jnp
jmp
in
cmp
fsubr
je
lock
sub
inc
scas
push
xchg
mov
cli
in
pusha
xchg
xor
fdivrs
in
out
icebp
int3
aas
es
jb
xor
icebp
lcall
mov
ret
mov
pop
das
pop
push
mov
push
mov
shr
cmpsb
leave
lcall
xchg
push
push
das
scas
cmp
cmpsb
inc
or
or
test
shr
jne
fildl
into
ret
pop
ss
fstpl
fs
cmp
insl
inc
mov
push
or
insb
cmp
ret
stos
nop
sbb
das
push
and
mov
lea
dec
loop
xor
gs
into
popa
jmp
jno
mov
sub
dec
pop
pop
push
orl
cmc
aam
bound
iret
lcall
adc
or
arpl
arpl
rorb
push
int3
cmpl
daa
cltd
fnstenv
jge
mov
hlt
and
mov
push
sub
aas
fsubr
or
rcrb
lods
xchg
push
push
mov
outsb
pushf
mov
xchg
pushf
push
ljmp
out
dec
cmp
inc
or
dec
fimuls
xlat
sahf
in
lret
jae
repnz
xchg
mov
or
xor
les
xor
psubw
int
dec
mov
cmp
sub
outsl
outsl
stos
inc
sti
lahf
mov
loop
movsl
fcoms
fadds
stos
enter
pop
or
cmp
mov
ja
mov
mov
jae
add
ljmp
imul
jo
jecxz
cmp
cmp
jle
fidivl
jns
les
loope
xor
out
ljmp
test
sub
push
cmc
mov
mov
xor
out
and
xacquire
add
out
pop
aad
das
push
cltd
popf
outsl
jbe
and
fs
les
mov
in
ret
sub
xchg
add
push
add
enter
scas
pop
ljmp
lret
sbb
cmp
fs
dec
xchg
mov
cwtl
mov
ss
pop
mov
loop
sub
shrb
xor
lret
cld
mov
lcall
mov
repnz
xchg
sub
xor
xorb
jae
outsb
xchg
fiaddl
mov
push
in
sbb
in
pop
cs
mov
das
ss
shr
out
sub
jecxz
xchg
push
inc
lea
movb
jb
sub
sub
dec
and
popf
mov
xor
add
fwait
mov
mov
xchg
sub
adc
enter
dec
stc
xchg
mov
xor
out
push
inc
and
into
dec
sti
mov
addr16
jno
enter
cltd
lahf
inc
iret
aas
push
fldt
mul
imul
push
inc
in
stos
es
negb
aam
jae
lahf
dec
jcxz
sbb
push
aas
cmp
xchg
or
loop
or
lret
popf
leave
rcll
sbbl
fidivrs
xchg
xchg
mov
lds
pusha
ret
mov
jae
fldenv
mov
jnp
rcr
mov
repnz
inc
jnp
inc
inc
decb
add
sub
jl
pop
pop
les
popf
out
mov
divl
ror
pop
push
cmp
out
lea
int
lods
into
cmp
push
mov
icebp
sbb
fucom
mov
loop
outsb
out
jb
cli
loopne
aad
xor
mov
xchg
cmp
dec
das
mov
adc
or
out
jl
jnp
andb
sbb
sti
insl
pop
stos
and
push
mov
cmp
jne
cmc
xor
jle
rcrb
add
sbb
scas
and
xlat
mov
jg
pop
cwtl
ret
stos
mov
enter
pop
das
ds
pop
les
les
repnz
movsl
mov
dec
aaa
jae
rcl
xor
pop
mov
adc
xor
pop
jae
mov
mov
ljmp
dec
pop
fdivl
roll
loope
cli
adc
cld
dec
mov
push
shrl
dec
sub
or
hlt
xor
mov
adc
in
mov
dec
pop
xor
adc
popa
stc
sbb
icebp
ret
dec
insl
cmpsl
dec
dec
or
dec
and
addr16
lret
adc
mov
les
xchg
fldcw
jmp
test
push
pop
and
mov
sub
je
xchg
jbe
mov
fldl
inc
mov
and
repz
rolb
fwait
and
mov
adc
jo
jb
sti
iret
jnp
or
jae
mov
inc
stos
pop
xor
pop
pop
jp
aam
pop
ret
cmp
sbb
push
sarb
mov
cmp
test
mov
enter
dec
aas
das
mov
lahf
mov
add
data16
ljmp
mov
or
mov
repnz
stos
fs
repz
or
pop
xor
loop
sbb
sub
clc
fs
arpl
test
jb
dec
es
adc
jnp
data16
je
mov
and
or
lcall
inc
inc
or
push
or
fcompl
mov
sub
outsb
popf
inc
mov
icebp
inc
xor
sub
sub
repnz
ljmp
dec
sub
lods
dec
imul
mov
pop
shll
insl
inc
mov
arpl
sti
rcrb
jbe
push
shll
add
and
add
mov
inc
push
in
ds
xlat
sub
pusha
loope
jmp
test
lock
mov
mov
int3
out
cmp
sbb
das
cmp
jle
cs
mov
mov
mov
fcoml
pop
dec
clc
lds
xchg
testl
and
pop
arpl
lock
mov
dec
mov
nop
dec
push
pop
daa
fimull
repnz
mov
cs
stc
inc
into
sti
lret
mov
sub
scas
push
data16
mov
mov
cmp
mov
adc
adc
lea
adc
daa
mov
in
jae
lret
inc
inc
mov
cmpsl
push
cld
pop
sub
lret
cmpsb
lock
push
adc
iret
sbb
aam
call
xlat
mov
loopne
ja
xchg
jbe
add
xor
sub
shr
pushf
mov
add
dec
jns
lods
aaa
fistpl
and
inc
mov
xchg
mov
nop
xchg
add
push
fnstsw
das
mov
cmp
gs
push
mov
pusha
sar
add
call
adc
icebp
imull
int
dec
rol
jo
inc
movsb
sbbb
pop
pop
push
cmpsb
imul
jge
movsb
cmp
jp
leave
mov
test
add
sub
or
add
mov
push
shrl
or
dec
or
jp
pop
in
lret
push
lods
pop
pushf
or
aas
xchg
shll
push
js
loope
mov
cmp
dec
sub
mov
or
int3
push
stc
cmc
mov
or
out
pusha
fucomip
or
fdivrs
mov
ret
hlt
lahf
aam
lea
jl
lret
pop
stc
mov
and
sbb
xor
pushf
mov
fwait
ja
xchg
push
push
cmp
jo
mov
adc
sarl
and
test
cmpsl
xor
fildll
repz
enter
cmpb
and
popa
mov
sub
mov
cmpsb
imul
dec
sub
mov
std
or
call
jl
or
lock
mov
adc
out
shlb
mov
cmp
test
sub
addr16
mov
jge
jnp
sbb
imul
dec
nop
dec
mov
cmp
push
mov
sub
call
mov
or
cmp
popf
adc
mov
sahf
imul
je
sbb
data16
sub
sub
dec
mov
fldenv
cmp
sti
xchg
mov
lret
scas
and
xlat
outsb
sar
stos
movsl
pop
ret
xorb
fadd
bound
push
or
dec
sbb
fdivl
xchg
insb
sbb
pop
imul
push
adc
adc
rcrb
xchg
inc
adc
mov
mov
jle
fs
loope
cmp
xor
mov
sub
dec
inc
out
sbb
gs
inc
push
inc
mov
mov
repnz
and
jae
jecxz
xchg
jno
mov
ficomps
push
rolb
iret
fwait
push
rclb
cwtl
mov
jns
push
in
jle
das
push
fwait
inc
sbb
and
pushf
fldl
decb
jg
sbb
es
cmp
jns
rorb
addr16
push
mov
je
repz
push
jle
lds
fwait
stos
push
fdivl
movsl
adc
cmp
pop
repnz
sbb
outsb
dec
mov
push
push
lret
inc
ljmp
test
cmp
testb
mov
cmp
nop
cli
mov
enter
loopne
aam
xchg
outsb
sub
push
mov
dec
into
inc
es
sbb
into
add
sbb
cmp
leave
and
sbb
or
aad
push
cmc
xor
pop
mov
loop
and
fiadds
adc
dec
aaa
inc
rol
gs
push
xor
and
pop
loop
out
mov
lods
pop
stc
cwtl
fcomp
or
loop
inc
lret
dec
lret
sbb
pop
and
testb
xchg
loopne
jle
jae
repz
mull
loopne
scas
jmp
dec
ds
popf
jnp
mov
xor
pop
in
or
movsl
push
imul
data16
fstpt
cmp
push
std
push
lods
cmp
xlat
gs
leave
inc
dec
pop
insl
stc
jae
cli
fiadds
fucomi
shl
and
inc
add
and
stos
jae
in
cwtd
das
fsubl
cld
int3
mov
sub
roll
divb
lods
mov
daa
mov
dec
mov
repz
daa
rcll
addr16
jne
outsl
jle
pop
sbb
and
cmp
ficomps
cmp
mov
ret
cld
cwtl
xor
pop
cmpsl
outsl
cmp
out
xchg
enter
jne
sub
pop
cmc
imul
fmull
aam
jp
and
push
jbe
mov
xlat
and
add
popf
sbb
hlt
dec
pop
dec
rcll
push
xchg
ljmp
mov
int3
lcall
test
push
push
xor
rol
or
les
lret
lods
out
push
int3
dec
addr16
jmp
test
xor
inc
xor
rclb
leave
mov
incb
icebp
push
sahf
and
ljmp
bound
xlat
enter
jne
cmpsb
out
jp
aaa
or
loopne
jp
in
imul
pop
mov
in
or
pop
es
add
add
cmp
dec
mov
adc
faddl
mov
jns
lock
and
shll
mov
push
sub
jne
sarb
imulb
mov
lds
add
jbe
cmp
mov
push
xchg
fidivrs
sub
in
adcb
mov
std
fldt
jno
stc
and
out
xchg
mov
shl
jge
es
imulb
out
int3
out
aad
inc
lods
cmp
or
pop
dec
or
push
adc
jecxz
pop
jp
or
sub
jbe
jecxz
lods
fbstp
les
cmpsb
xlat
mov
cs
xor
mov
jle
mov
jge
xor
pop
out
xchg
es
mov
aas
cmpb
js
subb
adc
dec
xchg
jo
std
leave
xchg
xchg
clc
dec
xor
inc
push
push
shll
push
pop
sub
ljmp
dec
jnp
bts
cmc
jg
mov
jne
mov
fwait
aaa
aad
outsb
dec
addr16
pop
xchg
pop
jae
mov
adc
mov
add
xor
jb
sbb
stos
adcl
adc
jno
mov
push
cmp
mov
jmp
adc
out
dec
stos
or
jge
mov
dec
xchg
pop
shll
insl
sub
lea
xchg
pop
lea
pop
lret
push
fildl
rolb
movsl
jns
add
inc
andb
inc
fadds
cmpsl
insb
gs
rorb
inc
mov
pop
ficomps
jae
cmp
ja
pop
push
in
adc
mov
ja
dec
xor
and
and
pop
add
xor
mov
pop
xor
int
inc
cld
sbb
or
mov
fucomip
and
add
xchg
add
pop
jno
pop
mov
pop
xchg
pop
push
and
push
pop
test
inc
sbb
inc
fnstsw
inc
cmp
loope
xor
aaa
xor
ret
shrb
sbb
in
fcomps
push
ja
pop
es
and
xchg
xchg
inc
jl
cld
lea
lock
ret
sub
movl
loope
xlat
mov
jno
icebp
je
sti
lods
sub
daa
out
mov
and
mov
pop
push
xor
inc
adc
jns
or
sbb
imul
sub
adc
or
stc
aaa
cwtl
insb
push
cltd
rep
out
repnz
int
lea
addr16
adc
in
cmp
jne
dec
icebp
out
fnstcw
jae
and
dec
push
inc
inc
mov
rclb
sbb
nop
ljmp
int
and
stos
sub
loope
das
sub
ret
add
lahf
pop
cmp
sbb
movsl
inc
cmpsl
roll
inc
mov
push
jne
push
dec
jnp
pop
leave
iret
adc
inc
or
ds
aas
push
cwtl
scas
lods
in
test
aam
adc
hlt
push
pop
xchg
xor
mov
std
mov
add
cmp
sub
sahf
or
imul
dec
jnp
js
es
pop
push
dec
sti
scas
dec
dec
test
daa
xor
roll
imul
push
aad
outsb
dec
stc
jg
or
xor
sahf
xchg
pushf
mov
lods
int3
das
outsb
js
adc
cmp
int
lahf
andl
test
ret
push
xchg
popa
enter
pop
sub
pop
nop
add
mov
push
ret
out
dec
dec
jle
mov
add
and
push
and
mov
jl
js
add
roll
mov
add
stos
jl
cmp
sahf
sub
iret
shrb
and
test
ret
inc
and
repnz
das
dec
ja
push
sbb
fcompl
inc
out
fwait
sbb
cmpsl
cmc
outsl
shl
lret
jl
fnstenv
sbb
mov
jp
ds
jbe
fdivl
incl
and
cltd
pop
lods
sub
loope
xchg
push
lcall
lods
and
push
addr16
or
or
aaa
sbb
pop
ret
sti
aad
dec
mulb
xor
into
and
sar
sbb
repnz
mov
dec
je
xor
mov
loop
pop
mov
insl
xor
cmc
in
rolb
outsb
dec
ror
lods
in
push
mov
jl
add
in
sub
and
and
xlat
sbb
aas
pop
and
add
daa
icebp
push
stc
adc
and
mov
sub
iret
jmp
sbb
test
insb
test
pop
dec
fidivrl
mov
sbb
or
stos
push
mov
pop
mov
loope
aas
sbb
cmp
mov
test
pop
mov
lcall
int
js
jg
stos
jns
outsb
sbb
cmc
repnz
ds
shrl
mov
enter
pop
add
imul
clc
lea
addl
xchg
mov
xchg
shrb
lahf
outsl
add
ds
daa
push
dec
enter
test
adcl
adc
lea
mov
je
or
jle
fcmovu
dec
or
pop
jne
pusha
ja
sbb
ss
mov
push
imul
cmp
push
leave
mov
aam
shlb
pusha
or
jnp
out
jo
mov
inc
movsb
pop
adc
scas
mov
outsl
stos
fistpl
lret
sbb
std
stos
adc
add
orb
ss
insb
jecxz
sbb
daa
cmp
imul
rolb
push
dec
push
addl
dec
mov
enter
loope
xorl
pop
xchg
outsl
stos
int3
cwtl
mov
cwtl
jo
mov
add
leave
xor
fsubs
and
mov
sarl
pop
subb
shrb
push
push
hlt
xor
inc
cmp
ljmp
jmp
xor
test
fwait
mov
mov
ds
clc
adc
test
out
lods
insl
cwtl
xchg
rcr
dec
push
dec
cmp
xor
jne
adc
push
pop
dec
jg
adc
push
pop
and
bound
push
push
mov
pop
insb
.byte
xchg
.byte
adc
add
jp
cmp
and
rolb
cmp
rorl
dec
jg
cmc
sub
jb
popa
xlat
jmp
lret
lea
in
cmp
cmp
int3
ljmp
mov
movsl
outsb
jecxz
sbb
dec
cmp
aad
cwtl
pop
dec
shrb
mov
or
jno
cltd
add
cmpsb
ret
push
addr16
or
pop
mov
xchg
fidivrl
dec
fwait
std
xor
dec
ljmp
lahf
and
repnz
dec
stc
mov
adc
pushf
das
sbb
xor
fcmovu
mov
push
lock
out
pop
push
add
sub
std
mov
pop
sub
dec
cmp
int3
test
fistpl
push
je
fimuls
lods
or
je
pop
insl
roll
psubusw
or
mov
add
or
cmp
scas
mov
sbb
xchg
jecxz
in
xchg
xchg
mov
test
jge
dec
repnz
lea
and
not
out
cld
test
sub
filds
shll
sub
sbb
pop
pop
addb
adc
adc
mov
cld
xchg
push
ljmp
popf
push
or
lods
lret
push
aaa
cmp
add
jne
cmp
fists
ret
and
shl
jp
aas
sbb
ret
xchg
pop
sbb
add
cld
lods
adc
sbb
es
out
fildll
push
mov
stos
add
iret
popa
insl
inc
add
outsl
lret
hlt
into
lahf
add
outsb
pushf
cmpsb
fldcw
dec
mov
test
outsb
adc
xor
or
test
jns
inc
adc
cmpsl
shr
stc
ds
in
jne
push
cmp
sub
mov
mov
and
dec
sbb
scas
insl
data16
cli
sbb
scas
and
jl
dec
fisubl
in
je
pop
push
jno
rorl
mov
fcmovb
mov
ds
xor
mov
pusha
mov
pop
jb
jp
stos
das
les
pop
sub
jb
std
xlat
test
ret
stos
xacquire
insl
pop
in
movsl
pop
xchg
jns
movsl
insb
adc
mov
loop
outsl
int
xor
shr
dec
sub
nop
jle
xor
sbb
mov
xchg
insl
adc
adc
and
int
inc
cltd
and
movsb
js
aaa
lods
shr
sub
mov
sbb
mov
xchg
xchg
gs
nop
rcrb
inc
shll
cmpsb
xchg
sbb
pushf
sti
jne
jb
aad
das
ljmp
mov
and
adc
push
sahf
out
imul
add
mov
daa
js
daa
mov
lods
pop
sub
insb
jmp
popa
dec
mov
dec
std
roll
pop
sbb
cmpsl
outsl
aam
inc
pop
cmp
aad
sub
loop
shlb
sub
inc
sub
add
cmp
sub
out
sub
adc
pop
add
repnz
stos
and
mov
mov
xchg
divb
jp
bound
dec
lret
std
push
pop
lcall
stos
lret
imul
movsb
jmp
pop
sub
stc
in
fstps
or
out
add
aad
scas
push
das
mov
adc
adcl
fwait
push
pusha
insl
and
pop
insl
xchg
nop
int3
xlat
adc
xor
mov
fidivs
inc
fmuls
iret
mov
lods
sbb
daa
sbb
mov
push
lods
and
sbb
loope
data16
add
add
pusha
cmpsl
cmp
inc
outsl
insl
add
or
add
add
pop
add
addb
add
mov
add
add
add
addb
add
cmp
add
or
add
cmp
add
addb
adcb
add
cwtl
add
addb
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
addb
add
loopne
add
clc
add
addb
add
sub
add
inc
add
addb
add
pusha
cmpsl
cmp
add
add
or
add
cwtl
or
sbbb
subb
add
mov
add
mov
or
cmpb
add
testb
sub
add
add
orb
add
sbb
xorb
add
dec
add
addb
add
add
add
pusha
add
addb
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
inc
or
cmpb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
test
add
rolb
in
sldt
fadds
sub
add
lock
sub
add
or
add
and
add
cmp
add
push
add
add
push
sldt
addb
add
sldt
mov
add
enter
testl
add
clc
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
adc
add
add
add
cmp
inc
outsl
insl
gs
add
pop
or
adc
add
call
or
addb
add
sbb
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
pop
add
dec
pop
add
pusha
pop
add
js
add
nop
pop
add
test
add
rolb
addb
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
mov
add
add
add
jle
mov
add
add
add
add
lock
add
pusha
cmpsl
cmp
add
add
add
add
add
add
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
or
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
enter
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
add
clc
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
add
add
sub
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
or
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
enter
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
add
clc
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
or
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
enter
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
add
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
add
add
call
add
add
add
add
insl
add
add
add
add
clc
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
add
add
jle
mov
add
add
add
add
mov
add
enter
xor
add
cld
cmp
add
xor
or
xor
add
fs
or
xor
add
cwtl
inc
or
xor
add
int3
inc
or
xor
add
add
xor
add
xor
or
rolb
add
add
or
in
add
call
add
add
add
add
add
add
or
rolb
add
sub
add
add
add
push
or
rolb
add
enter
rolb
add
cwtl
push
or
rolb
add
push
add
add
aam
add
add
add
add
add
fs
push
add
add
add
add
add
data16
in
add
add
or
js
add
xchg
insl
or
mov
add
add
add
add
add
add
add
add
lock
add
add
add
add
pusha
jns
add
add
add
jnp
add
add
add
jl
add
add
add
jg
add
add
add
orl
mov
add
add
orl
add
add
xchg
or
add
inc
mov
test
add
enter
mov
add
js
or
sbb
add
add
add
xchg
or
in
add
add
add
fcompl
add
xchg
popf
or
mov
add
and
add
in
or
sbb
add
cld
mov
add
and
add
loopne
or
pusha
add
add
or
adc
add
push
mov
add
add
push
add
add
add
add
nop
mov
add
add
movsb
mov
add
add
mov
add
add
aam
add
add
xor
or
cwtl
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
add
add
push
add
inc
add
dec
add
or
dec
add
push
add
dec
add
dec
add
add
sbb
cmp
sbb
std
sub
add
fdivrs
mov
rcr
sub
push
fstpl
inc
pushf
es
mov
or
mov
add
sub
in
cmp
test
mov
sub
push
stc
adc
mov
inc
lret
pop
dec
daa
dec
mov
cmp
fs
sahf
js
outsl
repz
mov
das
xor
jbe
adc
pop
pop
dec
incb
mov
lds
pop
xchg
stos
push
adc
xchg
mov
sbbl
fbstp
mov
lret
mov
and
push
mov
mov
push
sub
sub
mov
lret
push
scas
jo
mov
pop
xchg
push
mov
mov
cld
xchg
push
ret
icebp
or
push
in
inc
aaa
lahf
xor
lods
popf
mov
xor
test
pop
push
shrb
lods
or
push
pop
push
fmull
push
sub
inc
jmp
or
jp
clc
enter
div
push
jmp
xlat
pop
and
xorl
jno
arpl
xchg
inc
lea
mov
lock
sbb
fistl
mov
adc
push
sbb
ret
stos
ljmp
and
ja
fnsave
mov
dec
add
clc
or
test
push
push
movsl
lods
jo
jae
mov
sti
subl
ret
jl
pop
xor
mov
mov
pushf
xor
push
push
jne
arpl
jns
push
stc
push
cmp
fistps
mov
mov
xchg
push
inc
pop
pusha
iret
xchg
mov
dec
fcomi
ret
aad
adc
fcmovnb
outsl
call
repz
movsb
adc
jnp
lret
jg
sbb
addr16
sbb
jns
push
icebp
ds
jg
js
mov
in
xor
imul
negl
shl
xchg
scas
mov
ljmp
into
pop
loop
pop
xor
sbb
sub
add
call
jno
imul
mov
add
sbb
sbb
pop
mov
xor
sbb
rdpmc
mov
and
mov
xchg
daa
xor
rcl
popf
ficomps
mov
mov
ret
inc
mov
cld
movsb
sbb
mov
xchg
mov
or
sahf
scas
movsb
mov
and
call
nop
in
push
xchg
adc
mov
mov
sbb
loop
lock
push
shr
dec
xchg
aam
repnz
hlt
or
or
je
sar
pushf
mov
mov
ss
xor
cmp
enter
aas
cltd
gs
test
int3
and
jecxz,pt
cltd
gs
arpl
jg
or
mov
xchg
jae
bound
xor
sbb
mov
imul
cmpsb
movb
not
xchg
sti
and
mov
dec
push
fs
adc
nop
ja
push
in
inc
aas
push
xchg
inc
inc
jo
cmc
shll
lds
dec
arpl
pushf
loopne
jle
xchg
lret
push
repnz
not
unpcklps
or
enter
inc
mov
in
aaa
jmp
arpl
repnz
int
push
lds
pop
cltd
scas
in
sub
xchg
jp
imul
call
xor
sub
fldl
mov
xor
loop
pusha
and
add
shlb
jp
sbb
iret
shll
and
in
jl
mov
insl
adc
rcrl
call
mov
mull
sbb
sbb
movsl
sub
push
iret
aas
mov
xor
in
push
daa
jge
mov
arpl
les
add
fadds
xchg
push
cwtl
out
lahf
jle
stos
daa
stc
push
sbb
push
cmp
xchg
rorl
inc
dec
inc
jl
adc
enter
mov
leave
into
sbb
test
lcall
sub
or
lea
movsl
jg
into
xchg
cli
cmp
rep
xor
pop
jmp
addb
insb
cld
xchg
fidivrl
mov
pop
sbb
push
pop
adc
out
psubsb
cmpsb
lcall
aas
les
add
adc
dec
mov
stc
enter
jne
pop
popa
pop
je
push
fwait
pop
jb
jno
and
or
lods
push
mov
push
pop
add
sbb
popa
cmpsb
enter
test
or
decl
mov
fstenv
add
xchg
loopne
rolb
mov
stc
popf
std
mov
lret
dec
and
mov
out
ljmp
inc
xchg
js
call
mov
test
mov
push
mov
arpl
stos
shll
sub
rcll
mov
and
outsl
xor
je
xchg
xor
mov
out
pop
jo
push
and
xchg
push
cmpsb
scas
stos
push
fstpl
mov
dec
mov
mov
xchg
adc
sbb
inc
jbe
add
cmpsb
inc
dec
out
shlb
arpl
xchg
adc
mov
lahf
mov
imul
adc
idivb
inc
mov
or
mov
pop
and
fisttpl
mov
lods
xchg
repnz
dec
xor
addl
cmp
mov
mov
mov
je
xor
sbb
lret
into
sbb
imul
fldenv
lret
pop
inc
pop
fdivrs
pop
out
xchg
xchg
aam
xor
roll
out
jno
arpl
cmc
jl
int3
inc
in
int
push
adc
pusha
jo
pop
xchg
mov
fnsave
ss
dec
dec
xlat
out
lcall
pusha
repnz
add
sub
pop
jecxz
xchg
pop
xchg
stos
int3
xchg
imulb
pushf
stc
lea
enter
push
dec
js
in
cmp
leave
test
mov
aam
inc
inc
daa
js
dec
sub
jmp
mov
out
arpl
pop
shl
iret
mov
in
pushf
adc
enter
outsb
in
xchg
sub
insl
push
repz
fisubrl
cmp
popf
mov
cmc
stos
mov
sub
into
lret
sahf
xchg
cmc
scas
adc
imul
adc
jmp
cmp
daa
adc
mov
lods
outsl
inc
stc
sub
mov
pusha
adc
push
loopne
inc
pop
ss
lret
mov
cmp
jns
outsl
cmp
xchg
and
pop
lret
cmpsl
jle
loopne
xor
aad
xor
jnp
fcoml
aas
adcb
in
inc
fsubl
push
gs
jg
inc
test
cld
js
pop
popa
adc
lahf
out
adc
fdivs
add
and
inc
mov
mov
xchg
jle
xor
imulb
mov
aaa
and
mov
mov
pop
stos
pop
bnd
dec
out
test
cwtl
jge
xor
xor
xor
in
sub
add
dec
adc
in
xchg
cmp
mov
out
orb
pop
scas
xor
test
sbb
xor
dec
je
push
hlt
lret
out
fildl
cmp
sti
lret
sbb
arpl
sbb
insl
fidivl
xor
cmp
imul
jnp
es
out
iret
inc
adc
inc
mov
mov
popf
mov
mov
and
scas
rcrb
pop
inc
les
scas
hlt
mov
push
xchg
sti
call
push
pop
outsb
jl
cmp
cld
jg
mov
insb
sub
lret
mov
mov
push
outsl
shrl
arpl
push
or
and
fcoml
insl
mov
das
jns
pusha
jg
mov
mov
jmp
jns
mov
mov
and
add
lcall
dec
in
xchg
sbb
push
es
xor
sbb
cmp
adc
hlt
hlt
xor
pop
clc
inc
adc
push
cs
scas
mov
lods
sub
pop
loope
adc
out
jbe
insb
push
cmp
jle
pop
lret
sahf
jp
sub
pop
push
dec
dec
jne
add
push
mov
pop
ficoml
les
negl
ret
sbb
in
int3
movl
sub
pop
and
sub
jns
xor
shrl
pop
sbb
shr
xorl
and
dec
push
xor
ret
xchg
adc
cmp
ja
and
insl
push
subl
or
sub
insb
cltd
push
push
aas
xchg
or
stc
push
mov
jnp
iret
and
mov
insb
cmc
in
mov
xchg
cli
dec
sahf
xchg
pop
cmc
pop
hlt
adc
int3
mov
inc
aam
cmpsl
out
clc
add
xchg
lds
mov
pushf
sub
add
xchg
adc
pop
hlt
int3
subb
pop
repnz
aam
insb
dec
testb
int
dec
ljmp
stos
add
scas
push
rcrb
xchg
out
sub
fmulp
mov
mov
stc
icebp
or
in
ljmp
fdivrp
add
fadds
jg
inc
leave
jo
test
xchg
ficomps
jo
push
push
inc
or
adc
mov
enter
enter
push
jge
dec
jno
and
mov
cld
mov
testl
popa
fisttpll
rcl
jno
xor
clc
and
push
or
jnp
mov
jnp
xor
xor
push
lret
int
shl
mov
xchg
pushf
cwtl
test
test
mov
mov
shl
rcr
sbb
push
jmp
mov
loopne
cwtl
addr16
dec
jmp
fsubs
repz
mov
cmpsl
or
sbb
lods
adc
scas
mov
xchg
xor
xchg
cli
sbb
pusha
mov
popa
add
pop
adc
out
enter
rcrl
loop
pop
aad
sub
aad
aas
inc
and
sbb
add
rcll
aaa
xor
and
cmp
mov
xor
push
icebp
or
pop
aas
mov
inc
fcoml
rcrb
mov
inc
pop
jae
cld
xchg
dec
paddq
pusha
nop
out
sbb
fstl
pop
sub
sbb
mov
bound
mov
xor
flds
cld
aad
rcrl
lret
jp
inc
cltd
cld
or
inc
adc
lods
scas
sub
dec
dec
pusha
rorb
sbb
cld
mov
lds
dec
jecxz
inc
xchg
xchg
leave
and
sahf
iret
cmp
fs
jo
xchg
push
enter
mov
mov
lret
jne
pop
jp
cmp
pop
lcall
and
in
xchg
sbb
test
jno
pop
mov
rclb
cmpsb
cli
testl
cmp
xchg
ja
das
bound
mov
inc
xor
mov
pop
jbe
pusha
fimull
dec
pop
mov
pop
mov
loopne
jns
jbe
jbe
stos
cs
jle
sub
cwtl
dec
and
xor
cmpsl
test
rcll
lahf
sub
sbb
leave
lods
int3
lods
pop
int
int3
add
and
inc
lds
ss
into
jne
or
mov
scas
leave
fdivr
mov
sub
aam
mulb
push
jmp
push
xchg
aad
inc
les
add
jecxz
movsl
pop
adc
sub
fisubrs
hlt
cmpl
aaa
and
repz
popf
imul
popf
jge
imul
cs
adc
pop
and
je
lret
inc
leave
mov
sub
subl
in
insl
pusha
mov
push
mov
or
jle
xchg
into
cltd
adc
jnp
jl
sbb
fimuls
fildll
add
fwait
pusha
das
in
mov
inc
sahf
add
mov
inc
jp
out
adc
mov
add
lods
rcr
xor
ret
inc
xchg
scas
in
pop
jmp
dec
pop
adc
iret
pushf
push
arpl
pop
xchg
cs
ss
test
in
jnp
fwait
jmp
cmc
pop
mov
push
adc
mov
cmp
xchg
lds
xor
pop
ror
aas
add
imul
add
mov
push
dec
mov
mov
and
les
fsubrs
fimull
je
mov
lcall
or
fldt
hlt
mov
daa
and
rcrl
jbe
cmp
mov
loope
lcall
mov
arpl
adc
push
ficoms
aaa
lcall
jp
add
jae
mov
pop
dec
jmp
push
dec
xchg
cli
insb
push
mov
out
ret
out
cmp
imul
add
pusha
dec
xchg
cli
outsb
mov
xor
push
jo
mov
repz
jmp
dec
fsubs
cwtl
sub
lds
aaa
dec
fdivs
xchg
sbbl
push
insl
and
sub
outsl
adc
inc
mov
in
mov
aad
jnp
or
stos
pop
outsb
cmp
push
adc
and
out
adc
cltd
inc
pop
mov
mov
dec
add
inc
lods
xchg
and
push
movsl
and
dec
and
aas
sub
inc
andb
out
sbb
nop
rcll
fcmovnbe
mov
inc
mov
push
scas
sbb
dec
xchg
cmp
jl
call
fsubs
sub
rolb
fldl
sbb
xor
jo
jmp
test
repz
lock
les
fiadds
dec
cmp
push
xchg
pushl
movsb
adc
adc
mov
lahf
mov
cmp
test
clc
in
fucom
int
mov
sbb
movsb
mov
jecxz,pn
mov
mov
dec
fnstenv
sbb
pop
aad
cmp
adcl
push
outsb
adc
mov
push
cmp
dec
mov
aas
xor
pop
mov
dec
cld
adc
cmp
push
fisubs
mov
popa
add
sub
lods
sub
jbe
int3
xor
or
inc
or
outsl
mov
data16
movsl
jecxz
add
push
mov
and
mov
xchg
cmp
icebp
jg
cmp
std
pop
int3
test
loop
mov
mov
iret
push
mov
icebp
cmp
scas
popa
icebp
sub
push
jmp
in
out
and
test
call
mov
imul
cli
imull
xor
jnp
cli
mov
outsl
repz
in
dec
out
mov
mov
jl
pop
inc
and
decl
xlat
sahf
push
int3
seta
add
adc
mov
and
or
pushw
adc
stos
lret
lret
loop
xchg
shlb
cmp
das
jo
ss
xchg
je
into
cli
nop
mov
lock
pop
push
loop
std
jecxz
pop
gs
enter
rol
xor
inc
popa
std
mov
or
inc
cmp
fnstcw
pop
cs
xor
inc
loop
mov
or
bound
sbb
push
je
mov
popa
lock
rclb
int
sbb
jns
jle
xchg
in
push
sbb
fnstenv
out
mov
je
loopne
lcall
gs
ror
jb
add
icebp
shrb
cmpsb
enter
mov
pop
xchg
aaa
mov
sub
mov
loop
ds
test
in
or
push
and
nop
push
push
push
sbb
xor
and
scas
repz
loope
js
addr16
fisubrs
sbb
mov
aad
leave
movsl
or
jmp
movq
rcrl
stmxcsr
repnz
mov
out
je
mov
lods
imul
test
leave
in
rorl
add
notl
aaa
cmp
data16
and
enter
xlat
data16
cmp
fwait
loope
mov
mov
jg
inc
pop
clc
lock
sub
dec
jno
mov
in
mov
call
sub
dec
pop
or
lea
mov
pop
imul
inc
jbe
popf
pop
xor
cmpsl
mov
push
xchg
cmp
ss
outsb
and
loope
andb
jmp
lock
pop
cmp
sarl
jns
jno
sub
cmp
fdivrs
push
mov
add
inc
sub
dec
dec
pop
test
xchg
jns
aad
mov
sarb
xchg
sahf
ret
shll
cltd
jnp
xor
add
push
in
xchg
call
mov
jle
outsb
inc
test
mov
mov
adc
rcr
int3
loope
sbb
push
xchg
call
in
sahf
fnstcw
ljmp
mov
fistpll
iret
out
aad
pop
xchg
adc
int
jae
movsb
daa
add
sbb
pop
stc
sbb
xchg
fs
int
mov
rcrl
bound
test
push
push
sbb
pop
test
lds
push
outsl
push
jae
fwait
xor
and
cmpsb
jbe
ficompl
and
ja
fs
pop
das
loope
fcomps
mov
mov
mov
movsl
sub
sub
jne
popa
pop
pop
lret
rcrl
xlat
inc
mov
cltd
jecxz
imulb
fnstsw
das
repnz
pop
mov
push
jb
jb
stc
les
xchg
push
out
out
xorl
clc
outsb
sub
pop
mov
mov
mov
rorl
jo
jge
addb
lods
push
aas
lock
pop
and
pop
dec
mov
dec
imul
mov
insl
test
mov
cmp
jmp
sahf
in
insb
xor
inc
push
sarl
data16
fldenv
inc
push
in
enter
xor
add
bnd
ret
test
in
adcl
mulb
pop
sbb
and
bound
cmp
pushf
inc
sub
sbb
ja
xchg
push
es
pop
mov
or
flds
out
or
sub
push
loop
out
stos
adc
ja
mov
insl
in
scas
xchg
xchg
add
fyl2x
xchg
push
aad
rol
popl
or
push
loop
icebp
dec
inc
mov
sbb
cltd
subb
fcoms
ds
add
cmp
jmp
pop
sub
test
incb
jge
sahf
jp
jo
ud2
rolb
jne
call
adc
scas
out
stos
push
lcall
pop
push
xlat
inc
inc
or
push
adc
jp
scas
lods
add
fmuls
daa
ja
repnz
pop
scas
cmpsl
rol
lahf
dec
fwait
jmp
daa
or
in
add
sbb
push
cmpsb
jmp
js
cmp
iret
popa
mov
mov
out
cmc
add
mov
sbb
dec
les
arpl
loop
lret
and
stos
xchg
xchg
xchg
pop
in
add
jno
sub
xor
push
mov
jl
dec
or
add
mov
push
sub
imul
xlat
aad
mov
mov
testb
hlt
shll
imul
test
aam
loope
sbb
jae
xor
jb
pop
into
mov
mov
ret
cmp
xlat
test
nop
pop
test
aam
dec
mov
sbb
pushf
mov
lock
mov
lds
xchg
int3
cmpsl
or
bound
jne
sub
mov
pushf
ret
lea
inc
icebp
popa
xor
sub
aad
inc
cs
push
mov
in
decb
loope
imul
ret
lds
mov
jl
in
jmp
xchg
es
negb
jp
xchg
cli
addr16
aaa
lea
in
stos
dec
or
sarl
stos
sbb
mov
sbb
imul
repz
stos
or
fwait
cmc
lds
dec
outsl
jle
aaa
mov
das
mov
mov
divl
cli
pop
ja
sbb
xor
cmp
sub
push
adc
sub
movsl
adc
sub
loope
push
xor
xor
cltd
inc
push
xchg
popa
lret
xchg
push
outsl
pop
lret
cwtl
mov
mov
jnp
adc
xor
popa
in
js
lea
nop
popf
mov
cmp
mov
addr16
rcrl
ret
leave
and
out
cmc
subl
mov
iret
pop
in
dec
inc
jae
insl
and
outsb
pop
mov
push
pop
add
fs
dec
mov
mov
jnp
push
cmpl
add
sub
cmp
jg
fadd
dec
es
repz
les
xchg
push
jle
fadd
mov
rcr
inc
push
movsb
inc
cmc
inc
push
xchg
inc
mov
mov
sub
push
std
ss
xor
push
out
and
lcall
cld
iret
sbb
sarb
jno
fs
test
push
pop
das
orb
test
add
std
pop
ds
pop
xchg
mov
push
jo
dec
enter
loop
mov
xchg
adc
cmp
cmp
dec
out
pop
jg
std
and
data16
pop
and
pop
xlat
xchg
add
stos
fucomi
cmp
mov
aad
lcall
into
inc
xchg
mov
push
es
xchg
enter
lahf
push
inc
sarl
out
sbb
or
lock
xchg
mov
gs
data16
pop
hlt
mov
call
hlt
add
or
int
das
mov
push
stos
pop
bound
or
insl
mov
push
insb
or
daa
pusha
mov
lcall
clc
outsb
mov
push
imulb
stos
flds
cli
cmp
push
out
cmp
cmpsl
sarb
xchg
push
movsb
mov
and
mov
sbb
lahf
inc
push
jmp
or
sub
ds
jae
mov
aas
scas
mov
xchg
mov
lret
jns
xor
sub
cmp
fildl
notl
and
adc
lock
pushaw
lcall
sbb
mov
pop
mov
inc
leave
sbb
fcmovb
inc
clc
ds
xchg
xlat
mov
pop
arpl
or
dec
or
add
mov
stos
xor
rorb
add
cmp
out
inc
cwtl
mov
sub
ret
inc
push
mov
pushf
out
js
mov
bound
mov
cli
cmp
mov
mov
gs
pop
pop
popl
xchg
mov
test
pop
inc
sahf
cwtl
outsl
movsb
fidivl
dec
mov
cmp
test
jge
lahf
xchg
outsl
adc
dec
cwtl
or
push
jno
push
aas
cmc
mov
es
icebp
int3
scas
push
add
jne
ja
push
mov
or
sub
hlt
dec
lods
aam
test
inc
mov
xchg
leave
sub
fisubl
dec
cmp
mov
mov
sub
idivl
mov
iret
cmpb
mov
cmpsb
cmp
cmp
movsb
jb
sub
dec
jle
mov
repnz
push
jmp
fstp
cmp
neg
int
dec
jns
shlb
dec
push
rcrl
sub
push
jne
fs
movsb
push
or
pushf
pop
cli
pushf
dec
aas
xor
int3
int
add
outsl
scas
push
pop
outsl
or
xorb
adc
out
and
aam
pop
pop
adc
push
or
and
std
aad
mov
xchg
dec
mov
fstpt
add
js
popf
cmpb
or
jl
aaa
or
push
call
gs
push
sbb
call
mov
daa
pop
ja
mov
cmp
sbb
in
cmpsb
mov
jbe
je
sbb
ja
mov
and
adc
sbb
imul
pop
stos
jmp
mov
sub
js
jnp
or
cmp
daa
jno
push
out
mov
out
cmp
mov
bound
xchg
inc
pushl
inc
jnp
mov
lret
sub
add
test
cmp
mov
into
sbb
sub
cltd
fnstcw
xor
out
loop
pushf
fnstsw
mov
stc
dec
push
adc
outsb
jmp
jg
lods
js
enter
push
incb
xchg
or
or
mov
jp
sahf
cmpsb
loopne
sub
push
mov
imul
in
test
xchg
xchg
movsl
xchg
fidivrl
outsb
jno
add
movsb
xlat
sbb
pop
xchg
mov
iret
adc
shl
or
cmp
inc
imul
inc
shll
push
dec
mov
pusha
xor
pop
cli
stc
dec
lods
in
add
shrd
pop
lods
fwait
mov
push
outsb
roll
push
lret
les
test
cmp
mov
flds
stc
call
push
fisttpl
or
das
xor
mov
cmp
xlat
push
ss
lcall
push
or
hlt
in
mov
divl
popa
push
dec
jnp
ljmp
push
popa
ljmp
mov
sub
xchg
inc
sahf
cmp
test
xchg
sbb
sbbb
adc
and
repnz
enter
cwtl
testb
fbstp
test
cltd
inc
imul
mov
repz
push
outsl
into
movhps
inc
lahf
cmpsb
in
daa
outsb
mov
lret
sti
inc
repz
setne
imul
push
push
adc
imul
enter
mov
sbb
cmp
inc
inc
or
cmp
out
pop
and
xchg
add
gs
in
insl
mov
ret
out
insb
pop
mov
fs
and
xchg
cli
xor
out
rcr
movsl
pusha
hlt
or
cmp
je
lds
mov
jl
in
imulb
cmc
sub
jge
push
movsl
xchg
inc
stos
xchg
outsl
mov
xchg
xor
mov
inc
gs
mov
loopne
jg
fwait
xchg
outsb
cmp
out
pop
jmp
ret
xchg
sbbl
sbb
lcall
ficoml
jae
adcl
lds
out
push
sbb
insb
inc
aaa
cmc
rcrb
das
pushf
mov
xor
or
std
notb
outsl
test
fldl
movsl
jb
dec
pop
lock
mov
iret
cmpsl
jecxz
sub
or
dec
fcompl
mov
loop
cs
xchg
outsl
xor
aas
and
push
xor
ds
pop
push
mov
lock
pop
mov
dec
ljmp
add
out
xchg
icebp
jne
inc
jmp
pop
adc
pop
mov
xchg
inc
faddl
mov
imul
jnp
fisubs
stos
stc
dec
sub
imul
gs
test
sbb
xor
add
xchg
mov
in
stos
xor
aam
cmp
sub
xchg
lret
adc
jge
cmp
test
icebp
pop
pop
or
imul
push
mov
sbb
dec
sbb
in
repz
inc
adc
mov
mov
test
retw
outsl
jbe
pop
scas
mov
adc
pop
dec
and
mov
and
les
test
adc
mov
sub
inc
mov
pop
iret
shrb
pop
leave
xchg
pop
mov
fs
and
outsl
call
bound
inc
mov
xchg
shl
cltd
sub
insb
insl
nop
mov
movsl
popa
mov
iret
cmp
les
push
cmp
jne
test
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
outsb
setl
inc
pop
xor
shlb
pop
sub
add
mov
push
pop
push
call
add
addl
jle
sub
jmp
jno
xlat
les
cs
pop
gs
pop
pushl
movzwl
pop
movswl
xor
sbb
add
jmp
mov
lock
test
dec
push
xor
pop
push
mov
popl
push
mov
pop
mov
sub
or
add
or
cmp
jne
call
jbe
in
add
jbe
pop
leave
jmp
popa
push
xlat
int3
imul
mov
adc
lods
push
aas
cmp
std
and
loop
lods
push
sbb
xlat
lret
inc
and
push
frstor
popa
push
xlat
add
push
pop
jae
mov
pop
mov
push
mov
in
push
in
test
movsb
and
icebp
aas
or
pop
ljmp
xlat
mov
jnp
jecxz
out
in
and
xor
pop
stos
lcall
xlat
hlt
out
mov
mov
mov
pop
jae
sub
cld
xchg
cld
pushf
sub
out
jmp
adc
std
loope
bound
loope
bound
repnz
add
ljmp
bound
fstpt
add
bound
mul
bound
das
popa
add
stos
out
test
inc
rclb
mov
movsb
insl
loop
mulb
nop
sbb
imul
cs
cld
outsl
jp
scas
sub
dec
add
popf
sub
jecxz
sub
loope
icebp
jne
bound
sbb
fildll
shll
and
repz
push
out
aam
clc
dec
mov
xor
std
fdivrp
repnz
outsb
testb
es
into
inc
push
add
xor
add
mov
roll
cmpsb
ss
ljmp
mov
sub
ljmp
sbb
je
mov
sub
push
inc
iret
mov
aaa
test
iret
and
xor
in
mov
inc
dec
rcrb
or
adc
mov
mov
in
rclb
and
shlb
adc
repz
add
inc
sub
sub
mov
jns
or
and
fsubl
in
je
mov
dec
inc
push
push
iret
hlt
shlb
or
mov
adc
fcoml
sub
pop
jmp
loopne,pn
dec
mov
ljmp
arpl
pop
dec
jecxz
adc
lods
jb
mov
push
jno
push
cmpsb
mov
iret
add
loopne,pn
data16
add
sub
daa
dec
scas
mov
popa
sbb
xor
mov
dec
mov
aam
sar
loop
out
dec
sub
xor
lock
jmp
loopne,pn
mov
repnz
dec
xor
out
cmp
jge
adc
mov
lret
pushf
fstps
xor
mov
mov
test
int
add
mov
push
adc
cltd
add
sub
cmp
push
adc
aad
nop
gs
or
add
dec
scas
jecxz
adc
cmpsb
pop
js
aas
orl
sub
roll
sub
movl
in
xchg
insb
or
pop
pop
cmp
scas
sbb
pop
mov
mov
mov
xchg
pop
sub
stos
xor
jbe
in
loope
push
xor
push
inc
or
jbe
test
pop
ljmp
cmp
shll
in
jbe
in
sbb
jae
add
mov
sub
jne
scas
out
xchg
shll
pop
push
int
and
outsl
sub
inc
into
xchg
movsl
rcll
push
loope,pt
ja
push
xlat
inc
popa
sarb
or
cs
shll
daa
fisttpl
in
jno
pop
and
in
cmp
in
or
dec
push
in
popf
adc
shll
push
ss
in
add
scas
es
stc
shll
stc
lods
lods
and
jbe
adc
dec
push
in
cmp
xor
jae
push
sub
addr16
mov
and
shll
xchg
pop
cmp
jmp
aad
pushf
add
jbe
outsb
adc
lock
fldenv
push
sub
es
adc
dec
push
in
or
dec
bound
in
mov
jecxz
jbe
gs
and
pop
jmp
call
orl
pop
sbb
xchg
rcrb
jl
xchg
pop
mov
pop
cmp
pop
outsb
dec
data16
sar
ljmp
dec
push
in
dec
in
adc
dec
push
in
or
pop
adcb
sarl
imull
dec
fldcw
pop
call
pop
pop
cmp
jmp
push
push
mov
dec
test
ret
shll
stc
or
std
aad
push
or
nop
orl
in
in
cmc
aaa
in
ljmp
fistpl
stos
xor
sub
imul
js
xchg
pop
sub
xchg
lods
mov
dec
sub
imul
orl
xchg
pop
sub
xchg
int
inc
or
gs
mov
shrl
mov
aaa
xchg
xchg
dec
sub
imul
mov
inc
push
mov
adc
shrl
mov
aaa
xchg
xchg
dec
sub
imul
scas
adc
in
jbe
shrl
mov
aaa
xchg
lcall
push
xchg
decl
mov
inc
inc
cmp
sbb
lods
stc
fcomp
fbld
and
shll
jecxz
or
gs
jns
shrl
mov
aaa
cmp
adc
add
in
sbb
mov
and
add
lods
lret
es
xchg
and
in
ljmp
adcl
stos
sbb
cmp
dec
add
cmp
ljmp
addl
insb
scas
sub
in
jbe
insl
cmc
push
loop
addr16
xchg
shll
in
jbe
loopne
sbb
mov
rorb
std
xor
push
outsb
andl
pop
mov
push
sbb
bound
in
lods
les
bound
push
fidivl
in
lret
push
xor
cmp
ficomps
test
shll
scas
icebp
dec
xor
dec
mov
jle
push
in
leave
test
jp
lret
fsubrs
into
inc
sub
dec
shlb
cmp
shll
lahf
mov
pop
dec
int
filds
xlat
scas
dec
ret
daa
cmp
shlb
mov
inc
and
scas
in
xchg
out
mov
push
inc
cmp
cld
sub
in
jbe
in
jbe
in
jbe
in
jbe
in
jbe
in
jbe
in
jbe
lods
ror
mov
xchg
shll
xchg
shll
in
jbe
in
jbe
dec
pop
jbe
lock
push
fnstenv
in
jbe
in
jbe
in
jbe
in
jbe
xor
sahf
pop
cs
lea
dec
xchg
insb
div
mov
int3
push
leave
or
add
stos
push
in
and
xchg
sbb
loope
jl
in
xor
mov
scas
adc
mov
in
insb
add
pop
xchg
rclb
pop
movsb
data16
lds
imul
fdivl
sbb
and
pop
sti
sti
cli
xchg
jle
addr16
add
pop
or
imul
inc
sub
rcll
and
sahf
das
rcrl
jp
das
ret
call
dec
in
pop
mov
xor
scas
mov
push
popa
stc
jge
inc
cmp
aaa
pop
stos
mov
std
rcl
adc
je
sbb
inc
dec
cmp
mov
rcl
jne
add
inc
sbb
jmpw
lods
dec
call
xlat
xor
roll
test
fwait
jmp
adc
sub
ret
movsl
adc
pusha
popf
adc
arpl
adc
pop
fisubrs
sbb
fwait
jne
push
mov
aaa
in
dec
fwait
sub
xchg
mov
into
xchg
cltd
rolb
mov
cmp
jge
pop
mov
das
sub
xchg
mov
mov
push
mov
dec
insb
scas
dec
mov
jle
jbe
mov
adc
sub
clc
ret
popf
pop
lods
sbb
pop
mov
pop
cmpl
add
jle
jle
add
dec
sbb
enter
mov
and
aas
cmc
or
mov
in
jae
mov
daa
cmc
xor
adc
std
imul
xchg
xchg
repnz
lods
xchg
cmp
fadd
dec
xor
mov
int
cmp
cmp
stos
popa
inc
adc
xor
out
adc
fbstp
outsl
scas
mov
loopne
stos
inc
testl
cmp
mov
je
call
out
aas
clc
mov
dec
mov
cmp
dec
gs
clc
sbb
jmp
mov
cmp
push
dec
xor
or
jne
dec
dec
not
fadds
inc
cld
daa
call
js
icebp
lods
add
lret
mov
rolb
jno
enter
add
repnz
fadds
pushf
ja
adc
sbb
push
or
sbb
mov
xchg
or
xor
cmpl
mov
jno
dec
jge
aad
in
lock
or
add
mov
inc
mov
jb
xor
xchg
mov
sbb
dec
or
mov
loopne
lahf
pop
movsb
mov
cmp
adcb
add
and
add
add
add
rorb
rorb
xor
adc
dec
push
adc
int3
or
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
int3
or
hlt
lret
or
adc
or
bswap
or
pop
into
or
pop
iret
or
sub
or
pop
iret
or
cmp
or
daa
iret
or
inc
into
or
das
iret
or
dec
into
or
aaa
iret
or
pop
into
or
aas
iret
or
fs
or
inc
iret
or
outsl
into
or
dec
iret
or
jl
or
push
iret
or
mov
or
pop
iret
or
xchg
into
or
addr16
or
mov
iret
or
scas
into
or
ja
or
mov
iret
or
into
or
xchg
or
ror
or
iret
or
fmulp
or
xchg
iret
or
ljmp
add
into
or
cmpsl
iret
or
add
or
scas
iret
or
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
fs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
outsb
imul
insb
add
jbe
jo
xor
cs
insb
add
outsl
arpl
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
imul
fs
insb
add
jbe
jo
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
iret
or
add
add
fmul
or
add
add
in
iret
or
add
add
sti
iret
or
add
add
or
or
add
add
sbb
or
add
add
rorb
add
add
inc
rorb
add
add
push
rorb
add
add
outsb
rorb
add
add
adc
add
add
add
add
add
add
add
add
add
rorb
add
add
fcmovnbe
or
add
add
in
rorb
add
add
add
or
add
add
or
or
add
add
and
or
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jb
inc
jbe
outsb
je
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
je
jb
gs
gs
fs
imul
popa
jb
push
gs
imul
push
push
inc
inc
insb
gs
outsb
jne
add
add
jbe
dec
jne
push
jb
je
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
arpl
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
inc
dec
outsl
arpl
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
testb
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
rolb
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
inc
add
jo
insb
add
jb
add
add
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
js
jo
insb
add
jb
add
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
outsl
add
jns
outsl
add
cmp
cmp
cli
push
rcll
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
sbb
add
add
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
or
add
add
add
jnp
ret
insb
outsb
xchg
cmp
pushf
call
subb
mov
add
jns
imul
adc
popa
repnz
mov
xchg
dec
adc
jle
inc
or
mov
jno
push
leave
cmp
lds
subb
clc
fs
dec
inc
cmp
push
inc
addl
scas
sub
push
dec
ret
out
movsl
mov
jp
push
psubw
imul
std
cmp
int
mov
sbb
outsl
dec
imul
repnz
and
pop
ret
repnz
mov
pop
clc
and
pushf
inc
sub
push
call
mov
popl
jmp
inc
mov
mov
pop
data16
or
push
loop
and
sbb
sti
add
sbb
in
mov
sbb
lods
xorl
sub
dec
scas
nop
sbb
test
mov
mov
shll
in
jp
adc
and
mov
mov
pop
or
mov
into
mov
xor
roll
ljmp
cmc
pop
or
dec
adc
mov
dec
push
addr16
or
lahf
pop
add
fs
mov
aam
std
popa
or
movsl
aas
inc
xor
ror
fst
hlt
out
out
jns
mov
dec
add
daa
cmp
push
cmpsl
and
cmpsb
add
pop
cwtl
sti
or
push
scas
jge
push
pop
add
mov
xor
subb
and
push
popf
xchg
pop
es
ja
and
xor
inc
imul
or
subl
jo
pop
into
inc
pop
mov
js
out
sub
ljmp
int3
test
loop
push
fstp
inc
andl
xchg
mov
jmp
inc
mov
cmp
hlt
jo
dec
mov
call
mov
jae
mov
in
enter
pusha
shlb
nop
stc
push
int
add
lods
xchg
dec
fimull
mov
cmp
insl
stos
xchg
sbbl
mov
pop
adc
or
add
rcl
xchg
loop
adc
fistl
or
lods
test
int3
ss
imul
mov
lods
stos
adc
les
add
div
test
pop
cmp
mov
outsb
mov
sub
fsubr
sbb
inc
insl
cmpsb
mov
outsb
cli
call
inc
in
leave
jae
add
outsl
pushf
into
fnstenv
cmp
ljmp
int
adc
fwait
jge
nop
lds
mov
mov
and
inc
push
xor
shll
stos
insb
push
rcr
das
dec
mov
inc
cwtl
test
jp
enter
jecxz
pop
das
and
mov
lahf
inc
mov
xchg
push
sub
sbb
push
fwait
mov
pusha
adc
cmp
jge
sub
pop
gs
int
popf
jnp
loopne
shrb
jge
idiv
aas
sbb
xchg
pop
mov
xchg
addr16
mov
pop
dec
sbb
add
mov
adc
je
add
pop
bound
cmp
cmc
adc
rorl
ja
jbe
cmpsl
push
dec
cmp
mov
sbb
scas
cmpsb
cmpsb
or
imul
mov
mov
dec
or
divb
jmp
fsubrs
cwtl
add
cli
lods
test
or
inc
jno
jecxz
lds
int
aad
add
mov
addr16
int3
add
loop
ljmp
jae
shll
dec
out
cmpsl
jecxz
popf
mov
ljmp
fs
or
pop
scas
inc
xlat
icebp
mov
cld
das
sub
inc
mov
int
test
add
pushf
jmp
mov
ret
ds
shlb
sbb
push
icebp
std
mov
mov
cmp
push
aad
add
xor
jnp
out
adc
dec
loop
stc
mov
icebp
inc
mov
sub
packuswb
adc
adc
jnp
inc
sub
cs
out
stos
out
cs
cmpsl
xor
arpl
inc
cmp
mov
mov
dec
xchg
lret
clc
mov
mov
xchg
inc
or
jg
idivl
lods
sub
adc
mov
roll
lds
cli
xchg
dec
ja
sub
pop
dec
add
dec
je
jo
or
js
mov
aam
int
inc
and
test
aaa
mov
jmp
ljmp
sub
clc
jbe
lock
cmp
mov
loopne
imul
adc
cs
es
sub
test
repnz
xchg
rorb
fisubrl
into
or
dec
insb
dec
fs
mov
mov
and
fists
psadbw
mov
push
add
js
xchg
subb
ret
out
sahf
inc
xchg
sbb
leave
movsl
adcl
bound
sbb
xchg
push
inc
or
jp
sub
sub
jecxz
jae
jae
xorl
xchg
add
push
push
aad
insl
dec
pushl
test
xlat
sbb
ss
xor
xor
imul
jno
mov
stos
cmp
jle
jp
dec
mov
jb
mov
adc
sbb
ss
cwtl
inc
mov
outsb
inc
xor
sbb
arpl
stos
cwtl
add
stos
sbb
mov
cmp
sbb
fidivs
hlt
gs
push
jmp
in
fsubrl
outsl
mov
sub
out
xchg
shr
je
test
push
inc
rolb
dec
inc
pop
mov
jle
clc
test
stc
aam
dec
push
aaa
aas
aaa
movsb
or
daa
adc
mov
sahf
add
sub
sbb
ret
rorb
nop
clc
cmp
pop
repz
sar
mov
push
or
cltd
mov
je
dec
lahf
mov
pop
mov
roll
loopne
test
cmp
popf
adc
mov
lea
ss
lahf
jae
push
cmp
loopne
insl
cmp
add
add
inc
and
int
dec
cwtl
pop
imul
jbe
das
cmp
push
xor
cmp
iret
push
das
repz
or
pop
bound
jg
ret
and
lcall
sub
movsb
inc
aas
mov
lea
test
decb
xor
inc
mov
jge
lods
jecxz
xchg
pusha
adc
mov
add
inc
inc
sub
and
aas
jge
in
sub
add
lcall
inc
xor
shlb
xchg
or
push
and
scas
lret
popa
push
mov
cld
int3
push
dec
stos
pusha
rol
and
xor
sbb
cmpsl
popa
pop
and
add
xchg
push
sub
add
mov
imul
popf
movsl
int
ret
lods
div
cmpsl
je
outsl
test
pop
cmp
repz
clc
cwtl
cmpsl
je
psllq
fisubs
clc
in
push
sbb
mov
les
inc
push
ret
bound
es
jo
sbb
jp
into
push
cmp
fcom
repnz
icebp
sti
push
shrl
icebp
leave
xchg
mov
enter
insb
test
xor
jnp
ror
pusha
dec
insl
inc
and
push
cmp
mov
xchg
and
push
cmp
pop
adc
adc
cmp
cmp
mov
or
loope
inc
fistpll
mov
test
pop
ljmp
sbb
xor
out
lret
out
fwait
lds
pop
pop
jge
jl
test
enter
push
and
pop
jmp
fmul
cmp
add
mov
fwait
mov
xor
push
xchg
insb
test
mov
test
xchg
mov
pop
nop
hlt
std
hlt
test
test
xor
xchg
lock
mov
ss
imulb
cld
jle
xlat
jge
into
dec
mov
lods
pop
jecxz
fcompl
xor
xchg
in
fwait
sbb
imul
pop
lock
lock
xor
xor
xchg
xchg
mov
iret
dec
cmpsl
sub
lea
mov
and
xor
call
mov
xchg
outsb
nop
inc
cltd
mov
xchg
out
mov
mov
movsl
and
leave
mov
lods
push
xor
movsl
fidivs
jecxz
add
or
mov
dec
mov
cmp
fists
jae
roll
jge
push
stos
mov
mov
cmp
loopne
jp
push
andl
stc
ljmp
sti
or
push
aad
jl
xor
jno
popl
lret
pop
in
movsl
push
mov
sub
ror
enter
pop
pop
cltd
outsl
inc
inc
into
inc
inc
fadds
icebp
es
fst
xlat
jae
call
popa
movl
mov
push
jne
fcmove
mov
rcrb
in
aaa
loopne
mov
dec
jb
inc
sub
test
adc
pop
loopne
ds
push
dec
loopne
sti
dec
arpl
pop
adc
mov
add
jge
imul
pop
xor
rolb
jne
adcl
xchg
mov
lahf
pop
daa
mov
fcomps
dec
sti
pop
sub
push
mov
aas
enter
enter
push
jl
rcll
mov
js
mov
jns
jge
sbbb
scas
add
in
aaa
movsb
and
jg
daa
ret
test
push
inc
push
sub
out
mov
push
fwait
cmpsb
adc
mov
popa
movsb
mov
sti
mov
xor
orl
pop
or
mov
lock
sub
jne
in
testl
cld
mov
cmp
outsl
jg
adc
loop
daa
mov
inc
and
mov
inc
ss
mov
loope
ret
and
lret
imulb
jno
lock
push
nop
adc
xchg
xlat
jl
movsl
sbb
add
adc
pusha
test
cltd
push
jl
loopne
or
cmp
std
dec
inc
insl
dec
leave
data16
out
mov
gs
movsl
dec
in
dec
clc
mov
loope
push
xor
subb
gs
cmp
lods
mov
outsb
and
adc
fxch
pop
insb
add
cmp
xor
xor
pushf
dec
icebp
cmp
adc
jge
pushl
xchg
lea
repnz
dec
mov
adc
jge
and
mov
data16
movsb
test
in
or
shrl
mov
sub
loopne
lds
test
fnstenv
inc
je
flds
loope
ret
insl
jae
aas
out
lcall
and
xchg
mov
ja
xchg
sbb
sub
pop
addr16
repz
jnp
mov
pop
rolb
out
push
loop
add
or
out
cmp
shl
pop
mov
imul
mov
sbb
inc
cmc
dec
mov
mov
add
jns
cmp
jp
ds
cs
mov
arpl
test
push
orl
les
add
xchg
jno
lcall
fs
xor
sub
int
into
xor
xchg
pop
jge
sub
jo
adc
mov
in
inc
xor
lock
and
xchg
lret
push
ja
sahf
mov
cmp
scas
adc
pop
rcr
add
gs
dec
pop
fidivs
scas
push
je
imul
subl
fldl
cmp
cmpsl
nop
xor
fimull
aam
fwait
mov
shlb
or
pop
xchg
mov
jnp
inc
out
push
inc
jle
adc
inc
xchg
inc
add
xchg
sbbb
scas
sahf
call
arpl
jg
push
pusha
jecxz
or
push
push
or
pop
sbb
mov
jg
push
bound
in
push
int
mov
mov
mov
pop
jo
push
add
push
pop
jmp
popf
stos
push
mov
lahf
xlat
xor
scas
insb
dec
cmp
jmp
cld
dec
lahf
sub
outsl
mov
xchg
xor
xlat
je
sub
push
inc
in
xor
out
sub
sbb
les
das
xorb
int3
lahf
loop
je
inc
arpl
sub
adc
or
cld
and
repz
or
jo
loopne
stos
pop
movsl
fs
lret
adc
mov
xlat
sbb
aad
mov
xor
xchg
and
lahf
pop
pop
push
xchg
pop
in
sti
cmp
dec
xor
popa
daa
aaa
lods
int
mov
dec
adc
aas
fs
out
lea
popa
mov
pop
jmp
int
adc
scas
daa
sbb
clc
rclw
lret
in
shr
push
sbb
scas
mov
inc
sub
dec
push
loopne
popa
outsl
xchg
mov
mov
rolb
mov
sbb
sub
imul
push
sbb
cmp
je
or
loop
or
or
and
je
cmp
sbb
push
mov
xchg
xor
mov
push
jno
les
pop
sbb
mov
bound
push
adc
and
push
call
nop
addl
movsl
gs
into
push
imul
scas
mov
xchg
push
faddp
psubusw
lods
fsubs
sbb
jb
test
sub
inc
inc
xchg
cmp
xor
mov
scas
mov
jne
pop
cld
scas
adc
in
ja
jge
push
adc
pop
xchg
mov
sub
sub
insl
pushf
call
repnz
repz
sbb
loop
sub
fsubrs
jo
cs
in
sti
inc
jmp
popf
xor
sbb
dec
mov
fiadds
cli
std
jns
xor
push
dec
jbe
xchg
mulb
jecxz
les
push
mov
mov
iret
pop
in
mov
xchg
xor
sub
xlat
sahf
rorl
in
sarb
jae
ret
push
mov
popa
out
stc
mov
fsts
pop
cmp
mov
and
adc
roll
dec
xchg
frstor
push
push
inc
out
inc
or
push
ret
push
push
mov
jle
jne
lret
shr
popf
scas
repnz
push
sub
mov
push
mov
adc
call
push
sub
aaa
add
mov
xor
arpl
icebp
ret
hlt
fildll
mov
data16
jg
lods
out
adc
call
or
adc
sbb
movsb
or
dec
lock
mov
cmp
ficomps
arpl
sub
xor
test
adc
mov
mov
scas
in
push
add
push
dec
push
mov
or
dec
and
mov
repnz
mov
addr16
push
xchg
into
mov
push
insb
xor
shll
add
sbb
sbb
jns
mov
and
mov
and
shrb
dec
inc
ljmp
mov
jmp
stos
int
fldenv
fucomi
jle
pop
movsb
mov
shll
std
xchg
daa
pop
mov
and
lahf
loopne
fmuls
add
cmc
pop
jecxz
and
cmpsb
inc
cs
je
aas
sub
rcll
inc
test
cmpsb
jg
and
or
or
ja
in
mov
dec
mov
mov
shrl
sub
sti
shl
push
dec
adc
inc
iret
cli
outsl
daa
ja
xchg
inc
mov
add
lock
sbb
push
xchg
push
sbb
push
mov
and
sbb
cmpsl
sbb
mov
loope
jnp
mov
cli
xchg
push
pop
jge
dec
mov
icebp
mov
push
push
sbb
push
mov
sub
xchg
dec
push
lea
jmp
inc
sti
mov
dec
int3
arpl
hlt
xchg
call
adc
imul
mov
pop
adc
mov
outsl
jbe
dec
ret
addr16
cmp
sarl
sub
mov
mov
lahf
cmp
jnp
int3
mov
push
dec
out
jmp
pop
loope
adc
enter
or
dec
js
dec
je
dec
mov
shrl
xchg
dec
add
ficomps
fisttps
cmp
jns
pop
mov
add
repz
fadd
cmp
divl
xchg
arpl
stc
lea
aaa
test
add
scas
pop
push
pushf
xchg
pop
pushf
inc
lcall
in
outsl
jl
sbb
push
mov
cmp
mov
lret
mov
and
dec
aas
xchg
test
or
daa
lea
or
push
daa
adcl
hlt
cmp
xor
jl
outsb
xor
je
fcoml
inc
and
leave
test
mov
sub
inc
adc
movsb
xchg
mov
sub
lea
lds
rcr
mov
rcrb
add
inc
dec
je
mov
and
jge
imul
jns
sub
inc
pop
xor
lods
pop
xor
or
icebp
sub
lret
call
cli
lods
cmp
mov
add
aas
pop
fwait
sahf
mov
out
mov
stos
xchg
enter
imul
sarb
pop
pop
inc
mov
inc
or
sti
je
data16
sbb
in
xchg
call
insl
aaa
push
mov
xchg
add
sti
lds
ret
mov
mov
call
or
fistpll
dec
mov
add
testb
push
xchg
repnz
sub
adc
sub
pop
je
shll
cmp
mov
dec
movsl
aas
lock
push
cltd
test
mov
cmp
lods
lcall
imul
sub
jg
rcl
xor
cmp
leave
movsb
inc
fdiv
mov
mov
xchg
cmpb
sti
and
stos
cwtl
xchg
dec
in
bound
xor
dec
pop
xor
cmp
jge
ret
ja
dec
cli
lods
insb
dec
mov
or
xor
cld
sarl
shlb
jo
lods
pop
mov
pop
mov
adc
sbb
movsb
cmp
cli
je
or
in
inc
fimull
shrl
xor
ret
bound
cli
or
call
fisttps
push
jge
xlat
ds
test
sub
nop
std
adcb
push
xor
or
test
loop
push
outsb
sbb
std
adc
push
leave
repz
mov
add
push
cld
je
sub
jae
enter
lret
sub
adc
nop
inc
outsb
xchg
movsl
or
cmpsb
gs
sbb
or
test
push
imul
lret
pop
icebp
aam
mov
movsb
je
test
push
test
ds
nop
adc
daa
fcmovnu
fistpll
adc
fldl
sahf
and
lock
sbb
push
mov
imul
sub
mov
fsts
pop
sub
jbe
in
test
aad
ret
xchg
int3
aam
mov
push
jno
mov
or
xor
movsb
and
push
stc
jae
out
xlat
mov
mov
movsb
xor
xchg
int3
sbb
movsb
hlt
sbb
cmp
repnz
lahf
daa
sbb
loopne
xor
or
fwait
movsl
sub
add
lahf
sub
mov
xchg
icebp
jnp
jl
pop
pop
pop
ss
call
ds
push
lcall
jb
sub
test
push
in
sbb
jg
addb
je
adc
mov
fwait
out
inc
cmp
sar
xchg
jnp
lahf
sbb
push
jge
cmp
jo
dec
test
push
movb
jge
roll
rcrb
xor
movsb
xor
cmpsb
enter
ljmp
pop
jne
adc
add
xor
mov
mov
xor
pop
mov
push
out
enter
outsl
push
sbb
mov
push
dec
shlb
es
xchg
jne
fsubs
lcall
outsl
cmp
outsl
jl
push
jns
dec
xor
daa
sbb
push
or
aas
ret
mov
or
push
xchg
mov
ret
cmpsb
ficomps
cld
jl
push
lds
dec
insl
add
jae
or
and
aas
orl
lahf
dec
data16
add
mov
ficoms
pop
inc
mov
cli
std
and
xacquire
fsubrp
mov
idivl
push
lds
pusha
insb
fsave
dec
jno
inc
ja
jp
inc
test
test
mov
jne
mov
dec
inc
subl
inc
push
and
mov
in
enter
fsubr
daa
mov
or
mov
add
lods
push
mov
ror
and
and
mov
mov
mov
stos
jmp
adc
mov
cli
icebp
jns
fcompp
xchg
in
addr16
mov
sahf
add
and
cmp
shl
cmp
jge
fldt
sbb
mov
sub
popa
cmp
ljmp
mov
jne
movsb
sub
dec
sbbb
and
divb
out
test
push
dec
rolb
insl
dec
popa
int3
mov
jmp
mov
dec
in
mov
mov
and
jmp
adc
xor
push
add
pop
and
imul
aam
sbb
mov
jae
jbe
pop
ljmp
lahf
inc
cld
dec
leave
and
pop
inc
aas
mov
sbb
movsb
push
outsb
and
add
sahf
sti
inc
add
mov
fildll
clc
ficoms
scas
fdivrl
icebp
lcall
xchg
adc
mov
iret
stos
xor
jmp
and
outsb
fwait
inc
cmpsb
lods
fdivr
xor
jne
dec
and
std
scas
jno
imul
adc
std
inc
int
ret
add
mov
cmp
notb
adc
adc
xor
cltd
int
jmp
xchg
pop
pop
cmp
jg
push
ret
testb
adc
fwait
jae
mov
aas
push
out
adc
sub
sti
frstor
in
scas
dec
mov
js
insl
out
shl
fucomip
pop
and
insl
mov
in
gs
hlt
in
cltd
into
jle
mov
pop
mov
jnp
lods
sub
and
popa
imul
enter
cmp
addb
sub
dec
cmc
xor
add
shrl
adc
push
scas
pop
xlat
je
inc
imul
and
addb
jne
push
push
lahf
leave
cmovb
outsb
lods
jecxz
stos
mov
inc
ljmp
loopne
call
and
sahf
mulb
sbb
jno
repz
mov
inc
imull
lea
jl
out
or
clc
mov
rep
out
movsl
sarl
and
adc
mov
cmp
xor
cmp
fwait
inc
xor
cli
mov
pop
mov
xlat
adc
xor
adc
mov
mov
dec
add
push
xlat
pop
andb
fdivl
js
pop
push
cmp
in
sbb
mov
xor
pop
data16
cmpsb
jle
dec
mov
lds
data16
push
lret
xchg
call
rcrb
push
testb
add
insb
ljmp
leave
clc
mov
clc
stos
xor
stos
lock
jno
mov
rol
mov
imul
inc
cwtl
sti
fsubp
dec
incl
stos
or
stc
test
mov
sub
mov
mov
lret
jb
pop
and
mov
cli
xchg
adcl
lret
into
ja
lea
push
fmulp
mov
jp
xchg
movsb
pop
cmpsb
imul
mov
outsb
push
cld
js
cmp
les
cli
repz
pop
ss
mov
cmpsl
clc
adc
outsb
arpl
xchg
xor
gs
movsb
daa
dec
xor
push
dec
subb
in
pop
sub
xlat
mov
jp
push
jns
mov
sub
and
cmp
ficoms
mov
mov
dec
jb
xchg
sti
int
add
mov
push
into
icebp
xchg
addr16
out
movsl
aad
ljmp
lods
xchg
icebp
mov
dec
in
mov
ss
cmp
in
sbb
push
popa
stos
mov
mov
lods
pop
in
add
rorb
pop
jnp
aas
jb
pop
xchg
into
lods
xchg
sbb
mov
repnz
push
ret
andl
mov
aas
jno
lods
xor
add
inc
xor
cmovge
xor
ret
jbe
popf
pop
pop
and
pushl
sbb
or
sahf
fs
inc
in
dec
xchg
or
ja
loopne
repz
icebp
mov
or
les
xchg
cli
mov
imul
cmp
test
bound
pop
mov
rorb
xor
sahf
nop
mov
mov
cmp
push
outsb
aaa
hlt
fiaddl
pusha
jno
call
sbb
inc
repnz
cmp
mov
mov
adc
mov
mov
insb
add
sbb
sub
push
lds
or
inc
inc
sbb
inc
es
sti
gs
in
add
add
ljmp
hlt
xchg
arpl
movsb
aad
jnp
daa
and
fisttpll
xor
dec
lds
cmp
add
dec
sarb
mov
mov
shlb
xor
addb
mov
and
repz
rcll
dec
mov
inc
aam
loop
cmp
mov
xor
or
sti
mov
push
test
cwtl
stos
dec
aad
adc
imul
sub
fsts
addl
mov
repnz
sbb
push
pop
or
clc
and
xor
sbb
sub
pop
fdivrp
cmc
or
fucomip
xchg
imul
mov
jo
mov
push
cmc
test
stos
int3
mov
push
xchg
ds
mov
negb
mov
aas
sub
or
add
roll
les
push
inc
loopne
out
jbe
repnz
dec
push
sub
sub
mov
dec
pop
xlat
cmp
jle
mov
fidivs
addr16
mov
pop
test
pop
lcall
mov
mov
jp
sbb
mov
mov
or
pop
jp
pop
xor
and
pop
test
repnz
inc
popf
outsl
scas
xchg
sub
lret
lods
jl
pcmpeqb
xchg
fabs
fmull
push
dec
mov
add
adc
pop
cli
shll
cmp
mov
andb
inc
xchg
mov
lret
xchg
daa
inc
xchg
pop
movsl
inc
sarb
loopne
fwait
add
xchg
lcall
and
jl
popf
mov
in
xor
out
rcrl
inc
jl
dec
aas
inc
xchg
jmp
push
test
or
mov
adc
cmp
loop
and
insl
fiaddl
sub
cwtl
scas
mov
dec
imul
sub
pop
sub
jmp
ret
je
or
pop
pop
rorb
inc
outsl
xor
mov
inc
cmp
inc
out
mov
dec
sbb
cmpsl
push
iret
push
mov
inc
stc
and
mov
dec
ljmp
pop
sbb
pop
sbb
clc
lea
data16
out
xchg
pop
push
insl
mov
ja
mov
pop
cmpsl
dec
add
and
shl
sbb
cltd
jp
outsl
fisubrl
call
mov
xchg
cli
inc
sub
mov
sub
dec
and
jecxz
pusha
ja
gs
lods
inc
add
pop
les
xchg
mov
fists
jnp
mov
lahf
jae
call
leave
dec
adc
adc
or
pop
lods
push
jg
inc
fidivs
jo
or
cmp
scas
add
sbb
test
jmp
xchg
jge
xchg
inc
ficomps
ja
dec
dec
lods
inc
or
pushf
dec
mov
jnp
inc
data16
dec
dec
test
lret
add
outsl
mov
lock
shll
scas
xchg
xchg
push
sbb
cmp
sbb
je
icebp
mov
popf
inc
mov
loopne
push
jo
stc
cmpsb
push
cld
scas
inc
insb
sti
fs
cmp
imul
jg
xor
pop
dec
xor
or
jne
test
icebp
daa
mov
inc
scas
adc
cmp
or
push
mov
ds
or
adc
push
cmp
call
cwtl
fildl
std
mov
xchg
dec
fcoms
or
or
pop
lret
sub
cwtl
scas
add
popf
mov
and
push
cld
adc
popf
cs
out
push
clc
es
enter
test
imul
dec
insl
lods
scas
sub
inc
or
mov
cmpl
dec
push
fs
push
ret
mull
mov
mov
mov
mov
mov
pop
data16
fcmovb
mov
push
mov
inc
push
xchg
and
in
xlat
sahf
mov
dec
fs
loope
mov
scas
cmp
jmp
jp
jne
in
lock
push
xor
push
mov
jg
clc
cmp
int3
adc
cwtl
rcr
test
dec
movsb
mov
adc
cmc
jg
push
pop
pop
fdivrl
cmpsb
xchg
or
pop
jmp
push
xor
ja
popf
sbb
rclb
mov
icebp
dec
mov
f2xm1
loope
stos
mov
test
or
js
pop
stos
and
daa
cli
or
pop
lret
sbb
jo
pop
ret
jno
push
roll
inc
sub
flds
divps
pop
fistps
push
cmp
pop
scas
sub
sbb
subb
stos
cmp
mov
cltd
push
xorl
push
clc
xlat
jg
mov
pushf
movb
addr16
dec
mov
mov
mov
popf
into
pop
out
in
sbb
ljmp
adc
incb
inc
xchg
xor
lahf
das
leave
mov
xchg
adc
dec
mov
test
and
sub
mov
shrb
test
push
in
mov
cmp
sarl
and
push
xor
pop
jne
mov
aam
mov
hlt
dec
mov
xchg
cmp
and
loope
icebp
xor
dec
enter
dec
insl
jnp
nop
dec
cmp
push
or
cmp
aam
xchg
es
sub
pop
push
out
add
sbb
or
data16
mov
ficoms
test
icebp
push
and
imul
xchg
jp
cwtl
arpl
adc
fs
popa
repnz
daa
mov
ffreep
lret
push
add
fdivrl
push
nop
neg
loopne
cmpsl
sti
cmc
adc
push
loope
enter
jnp
mov
adc
daa
cmp
fwait
sub
pop
sbbl
int
sub
xchg
or
ss
jne
pusha
loop
insl
mov
lret
inc
fmuls
cmp
pop
xor
stos
shl
lods
scas
dec
test
inc
imul
shll
lret
int
fidivrs
aad
xlat
push
mov
push
fcomps
push
ret
cwtl
pop
push
pushf
xor
and
add
pop
sub
sub
mov
sbb
aad
xchg
pop
cmp
lock
and
push
test
ss
dec
clc
fidivs
loopne
jnp
jo
pop
fcmovb
dec
xor
mov
push
sahf
fsubrl
leave
or
cltd
push
notb
mov
sub
dec
sbb
jmp
filds
xor
xchg
in
insl
lods
adc
and
clc
mov
dec
inc
hlt
je
stos
in
xor
push
fldt
repz
in
mov
push
mov
cltd
sbb
jno
xchg
or
movsb
pop
shlb
out
call
in
cs
sub
mov
jl
addr16
pop
in
sbb
cmpsl
mov
rcr
pop
and
aaa
addr16
ds
loopne
inc
pop
pop
std
xchg
or
sti
add
sub
or
push
ja
add
or
ljmp
loope
add
movsb
ds
cmpb
mov
hlt
push
fwait
pop
out
mov
sbb
jge
in
scas
imul
in
mov
sub
sti
sub
inc
stos
int
repz
mov
test
push
in
test
sub
cld
aam
pop
outsb
mov
pop
or
cmp
pusha
push
mov
sbb
push
popa
jp
mov
push
movsl
testl
mov
out
mov
icebp
fiaddl
mov
das
jb
ret
dec
lods
imul
pop
imulb
cmpsl
push
stos
std
xchg
xchg
rclb
lret
mov
fcomps
xchg
pop
jns,pt
movsb
icebp
jge
push
mov
arpl
insl
and
fidivrs
loope
in
mov
mov
sbb
or
xor
xchg
aad
aam
sub
mov
cmc
fadds
int3
insl
xchg
out
mov
movsl
xchg
scas
jns
cmp
or
push
or
pop
adc
pop
dec
iret
push
ret
pop
out
jle
sub
xor
pop
iret
sahf
xchg
insl
mov
xchg
dec
or
inc
ret
push
push
ror
xor
cmp
rolb
inc
sbb
imul
loop
inc
movsb
cmp
cmp
xchg
pusha
test
pop
gs
mov
jbe
xchg
lds
xchg
int3
outsl
pop
negb
and
test
mov
and
push
mov
and
arpl
addr16
jns
andl
xor
lds
xchg
or
addr16
push
cld
je
adc
and
loopne
aaa
test
repnz
test
insl
push
sti
out
popa
mov
cmp
xor
shll
cld
jae
sbb
ja
out
lea
cmpsb
or
aas
xchg
push
movaps
cld
cmp
int3
test
cmp
rclb
jnp
in
orb
inc
movl
sub
add
jecxz
das
dec
or
xor
cli
shll
jbe
out
mov
xchg
aam
and
pushf
inc
push
and
pop
inc
mov
fisttpl
leave
ljmp
sub
push
shl
sub
mov
js
popa
adc
in
jns
popa
mov
xor
mov
stos
mov
or
sahf
cmp
mov
aaa
fucomip
scas
cmp
mov
mov
push
sti
pop
pop
cs
lret
clc
sub
ret
jno
outsb
dec
stc
push
adc
mov
fimuls
dec
ret
mov
adc
inc
cmp
cmp
mov
xchg
test
negl
pop
jne
leave
dec
or
repnz
jno
and
dec
sarb
in
jle
test
or
fldl2e
xchg
xchg
iret
cmc
movsb
mov
cltd
fwait
and
lods
add
cmp
sub
mov
mov
adc
sbb
adc
pop
pop
in
sbb
repnz
mov
andb
jp
cmp
inc
mov
jno
fsubl
popa
and
stos
push
inc
push
aam
mov
jmp
inc
xor
rcll
mov
add
jmp
push
dec
add
andl
loope
mov
loop
sbb
pop
sbb
cwtl
and
xchg
fldcw
xchg
pop
jns
adc
xchg
add
data16
xchg
or
loopne
fdiv
aas
cmp
lods
sbb
sub
clc
inc
fnstsw
in
xchg
push
pop
gs
push
lods
push
mov
add
xlat
xchg
and
push
std
jae
xchg
jg
and
fisubrl
leave
js
inc
repz
loope
sub
cmpsb
and
mov
cmpsl
insb
psubd
mov
mov
test
repnz
jp
inc
sub
pop
ljmp
pop
inc
jge
out
shll
and
cmpsb
aad
or
stos
pusha
insb
cmp
mov
imull
call
in
jp
fs
or
adc
inc
test
arpl
shlb
and
test
mov
pop
push
mov
and
mov
adc
jbe
pushf
lcall
pop
bnd
mov
out
dec
jno
jns
pop
jbe
loopne
cmp
push
fsts
add
dec
out
mov
lods
enter
ja
popl
or
inc
jno
fcompl
jp
insl
vhsubpd
shll
popa
imul
fs
adc
jecxz
mov
mov
xor
data16
xchg
fwait
and
ljmp
lods
push
stc
lcall
les
and
rcll
icebp
lds
mov
and
ss
shll
je
adc
aam
movl
nopl
std
fs
divl
lcall
dec
fildl
xchg
fildl
test
push
loopne
sbbb
int
jbe
sbb
pop
sbb
sahf
pop
ret
stc
fisttpll
mov
pop
test
cli
xchg
mov
mov
lret
ss
pop
pop
jne
movsl
add
push
les
and
outsl
stc
leave
movsl
cmpsb
mov
inc
mov
daa
xchg
pop
out
jmp
dec
mov
mov
mov
ret
int3
mov
adc
push
mov
pop
mov
cmpsb
insl
jecxz
movsl
in
adcl
xchg
fwait
and
and
outsl
cld
inc
mov
in
inc
in
cmpsb
xchg
outsb
push
xchg
sbb
sub
test
push
movw
add
jmp
sbb
es
pushf
bound
out
iret
syscall
addl
xchg
sbb
dec
daa
xor
scas
dec
out
aas
push
call
setl
push
in
aas
xchg
sbb
bound
int
test
mov
lea
cmp
in
sub
xor
loope
fisttpl
pusha
cwtl
daa
icebp
inc
pop
push
pop
inc
or
subb
mov
xchg
mov
mov
cli
btc
push
jg
ja
ja
xor
pop
shlb
sbb
test
pushf
adc
pop
inc
fidivs
mov
sbb
jge
or
je
dec
pop
cmp
jne
scas
out
icebp
jecxz
mov
cmp
mov
inc
jmp
mov
jg
push
inc
in
aaa
es
repnz
add
into
mov
add
mov
lahf
cmpsl
popl
fxch
inc
outsl
scas
repnz
sbb
cmp
cmp
mov
test
mov
psubd
pop
shlb
aaa
bswap
mov
stos
inc
cli
or
cmp
icebp
mov
data16
test
adc
inc
and
mov
lss
xor
daa
mull
outsl
mov
mov
xchg
loope
sahf
dec
and
mov
lods
push
stos
mov
jno
gs
shll
mov
shrl
xor
out
stos
pop
or
or
hlt
xchg
cld
inc
pop
in
lods
cld
add
sahf
ja
push
fsubrl
pop
jbe
test
ja
addr16
lcall
mov
jae
cs
jp
push
pop
sub
inc
scas
mov
loopne
dec
push
jle
xor
pop
pop
ljmp
pop
jmp
loop
pop
insb
subl
jle
mov
int3
hlt
push
or
sbb
jl
ds
push
inc
and
push
ret
sahf
loopne
pop
pop
jo
cmp
mov
dec
sub
ret
dec
arpl
loopne
pop
dec
idivl
sub
insl
outsb
fcom
aam
movb
jbe
sbbb
adc
stos
cmp
in
fstpt
xor
mov
decl
insl
iret
ror
sbb
jecxz
cmc
inc
leave
lea
jns
daa
fxch
inc
hlt
rcrb
icebp
push
add
daa
add
sub
outsb
cmp
repz
subb
nop
and
dec
push
rcll
outsb
push
add
jns
mov
push
lea
xlat
mov
arpl
lahf
mov
or
xor
xchg
or
daa
lret
in
mov
cmp
test
dec
mov
in
inc
loopne
add
and
adc
mov
sbb
jae
fistps
fistl
adc
sbb
sbb
leave
and
or
fwait
imul
fs
xchg
imul
int
in
ja
aad
gs
jae
out
out
icebp
mov
loop
gs
and
jl
xchg
nop
dec
pop
mov
xor
test
pop
rcrb
mov
cmp
je
lods
sbb
insl
sbb
mov
out
imul
sbb
insb
or
jne
xchg
add
js
fwait
xchg
push
testb
call
je
push
xor
stos
ds
imul
enter
dec
dec
fcomps
dec
in
xor
pushf
fidivrs
xorb
mov
mov
sbb
push
and
out
nop
ret
dec
jbe
adc
push
int
xchg
cmp
or
sbb
gs
mov
push
lock
inc
mov
or
xor
push
neg
into
cmp
jb
arpl
in
push
mov
call
cmp
or
roll
fisubrs
lret
negb
push
jl
cmp
mov
xchg
push
fcomps
ficoms
lods
add
push
stc
cmp
add
mov
popf
scas
mov
out
shlb
sbb
cs
jmp
sub
adc
mov
mov
and
mov
mov
in
in
mov
sbb
or
dec
fimull
push
cmpsb
push
ss
push
nop
iret
cmp
fsubl
xor
jae
lret
call
xchg
and
mov
rcll
and
mov
inc
hlt
sub
sbb
cmp
add
lods
sub
in
enter
sbb
lahf
adc
push
stc
repz
out
sub
in
dec
sahf
test
ljmp
loope
fsubl
pop
cld
popf
sbb
leave
sarb
sbb
sub
adc
out
jp
mov
in
dec
out
lahf
pop
lret
mov
push
sbb
jge
nop
dec
pop
pop
cmp
push
outsb
xchg
adc
and
xchg
movsb
outsl
sar
cmp
fisubl
arpl
adc
ds
inc
test
lock
adc
jge
loope
inc
and
imul
rcl
andl
jne
outsl
hlt
lret
clc
cmc
fsubl
leave
mov
mov
add
sub
notb
je
aam
pusha
or
push
mov
xchg
sub
aam
or
es
and
ret
jmp
add
or
orb
push
loope
test
sbb
bound
jg
pop
mov
std
flds
int3
jg
cmp
or
mov
mov
arpl
repz
out
adc
into
lods
and
cld
jg
xlat
inc
or
mov
mov
mov
lahf
mov
sbb
mov
and
cli
cmpsb
fsubl
push
in
test
test
xor
mov
imul
sbb
mull
or
outsb
and
ds
ret
pop
movsb
popf
int
push
inc
add
aaa
mov
mov
pop
cmp
mov
push
rol
in
ret
call
jmp
pop
xlat
loop
pop
in
push
mov
pop
sub
insl
out
mov
and
or
or
aad
sti
lahf
dec
cmpsl
and
push
emms
or
push
pop
nop
push
in
iret
in
and
adc
imul
clc
inc
js
cmpsb
dec
iret
sarb
or
insb
aaa
cmp
stos
add
inc
xchg
shrl
or
out
loop
pop
push
add
data16
jae
dec
mov
add
in
insb
xchg
sti
sbb
pop
ret
dec
xor
sub
inc
addr16
ss
mov
and
aas
ja
inc
xchg
dec
mov
je
mov
dec
ja
outsb
repz
adc
loope
push
inc
cmpsl
xchg
fsubs
sub
in
and
mov
imul
es
mov
shlb
dec
cwtl
cmpsb
ret
pop
cmpsl
mov
and
iret
andl
subb
mov
mov
push
or
outsb
dec
xchg
bts
or
sbb
mov
ljmp
sbb
rcrb
lret
mov
lret
shll
pop
test
movsb
or
xchg
ret
shrl
adcl
int3
and
sbbb
xlat
pop
jns
add
add
jbe
nop
shrl
inc
jmp
arpl
stos
xchg
lds
cmp
cwtl
mov
mov
mov
mov
or
fsubrl
adc
data16
xor
jno
dec
sbb
cmovne
push
adc
inc
mov
sub
aaa
mov
xor
xchg
shrl
ja
pop
inc
mov
mov
test
inc
ror
mov
pop
pop
aaa
mov
orl
mov
cmpsb
in
ret
sub
outsl
xor
shr
pop
js
ja
call
imul
inc
arpl
mov
push
and
fmull
lret
mov
fisttps
pop
mov
aaa
lds
adc
xor
pop
les
and
sub
jns
int3
jno
cmp
lds
mov
fcmovnu
sbb
arpl
imulb
pop
int3
push
outsl
imull
or
insl
or
lods
loop
adc
lret
rolb
sub
or
pop
outsb
daa
cli
or
jle
fwait
iret
and
outsb
jg
mov
loopne
pop
sub
in
sub
inc
xor
inc
add
push
adc
popa
out
sbb
fdivr
and
lods
mov
shl
mov
and
sbb
add
push
jg
dec
jecxz
fnsave
into
xchg
pop
rcl
xchg
cli
mov
pop
das
xchg
jnp
in
out
jb
xchg
xchg
pop
mov
or
add
jns
mov
push
add
popa
xor
out
add
outsb
adc
das
xchg
xor
inc
adc
mov
add
mov
fwait
push
ds
out
fimull
jecxz
adc
in
ret
aad
rorl
sti
movsl
aaa
and
sahf
mov
add
jo
adc
fwait
cli
xchg
test
popa
outsl
sbb
push
test
mov
sbbb
push
bound
jg
stc
sbb
push
push
rcll
idivl
mov
shrl
cmpsb
cmc
mov
sbb
negb
jbe
arpl
scas
cltd
iret
add
pop
push
cld
xchg
mov
mov
ficomps
shll
ficomps
in
and
nop
mov
push
xor
jmp
jl
xor
mov
dec
sub
call
addb
lret
dec
add
mov
rcrb
cmpsb
cli
sub
mov
icebp
inc
mov
fsubr
adc
mov
ror
push
stos
dec
insl
mov
dec
shrb
xchg
inc
test
jnp
pop
out
jae
imul
pop
in
imul
mov
pop
int3
je
mov
pcmpeqw
pop
mov
push
sub
add
inc
int3
mov
lcall
adc
int3
dec
xchg
adc
mov
dec
popf
lahf
cmpsb
push
inc
or
adc
xor
push
pop
test
pop
cwtl
pop
fsubl
lds
ret
fcompl
mov
sbb
adc
add
insb
sub
hlt
data16
out
mov
iret
cs
stos
int3
loope
in
mov
push
cwtl
or
stc
adc
cmp
std
cwtl
rcll
sub
xor
push
or
mov
xor
sbb
push
adc
adc
shrl
cmp
inc
pop
cmp
sub
sbb
icebp
mov
dec
or
jne
push
mov
ds
inc
cmp
sub
push
pop
iret
fildll
xchg
xor
adc
bound
lahf
xchg
out
dec
jbe
fadds
int3
dec
or
push
lcall
mov
xor
aaa
sub
pop
gs
stc
stos
mov
fdivrs
pop
imul
mov
xor
jnp
insb
daa
jno
and
xchg
dec
fldenv
mov
icebp
dec
xor
lahf
push
sti
out
repnz
or
xor
mov
adc
rcl
cmpsb
cli
repz
aad
hlt
aaa
shr
mov
jecxz
popa
aad
in
xchg
mov
mov
dec
cmp
mov
xchg
mov
out
lret
mov
sbb
mov
loopne
lds
adc
inc
int3
jecxz
cmc
ret
lcall
sub
cmpsb
out
pop
cmpsl
cmpsb
lea
pushf
dec
je,pt
mov
and
in
dec
jmp
sub
adc
mov
subb
mov
jg
sub
pop
mov
lret
outsb
xchg
dec
push
add
testl
xlat
pusha
cmpsl
negb
fisttpll
adc
stc
or
push
mov
sbb
mov
bound
dec
ljmp
and
mov
or
shl
xchg
and
jl
xor
adc
ret
jge
push
mov
xlat
push
fmuls
add
fdivl
inc
dec
cmp
int3
test
push
sub
mov
dec
fmul
mov
pop
les
add
pop
mov
xor
mov
mov
popf
jge
cmp
or
mov
movsb
mov
iret
dec
push
adc
pop
call
sbbl
dec
aad
xor
add
scas
into
push
mov
shll
mov
add
dec
cld
sub
ljmp
xbegin
ss
clc
push
shlb
jae
test
push
mov
adc
xor
cltd
pop
or
dec
push
inc
inc
xchg
xchg
imul
fcomi
aad
and
mov
xlat
daa
je
test
sub
xor
shll
sub
fidivl
sub
clc
push
push
fwait
sub
std
lods
test
mov
lea
pop
ret
shll
adc
mov
jl
int
lods
push
pop
lods
out
push
xchg
lcall
test
push
insb
addr16
in
scas
ja
cmp
sbb
cs
sbb
repz
adc
add
push
cmc
sub
ds
or
sbb
mov
fs
addl
lds
rcrl
js
inc
xchg
fimuls
fdivrs
add
jne,pt
mov
mov
jnp
and
clc
rep
fistps
mov
xor
movsb
leave
adc
inc
cmc
sbb
nop
xchg
sbb
addr16
cld
testl
dec
sub
loope
jge
dec
inc
mov
dec
ret
int
mov
or
lret
ljmp
btc
mov
adc
repz
or
sub
jo
lret
outsl
adc
aas
ret
or
xchg
and
lock
lahf
push
data16
scas
lods
mov
test
sti
dec
lret
pop
pop
jnp
push
cmp
test
adc
mov
add
or
sahf
fs
icebp
sbb
pop
movsl
repz
jmp
mov
mov
add
fsubrl
loop
mov
push
inc
xchg
mov
jno
mov
or
sbb
popf
or
nop
enter
dec
stc
pop
push
in
xchg
xchg
jae
insb
popf
push
xchg
fimull
flds
icebp
jmp
les
dec
mov
aaa
shlb
xchg
inc
sarb
out
mov
pop
xor
fcomps
xor
pop
mov
dec
nop
dec
xchg
lods
xchg
add
and
sub
mov
test
nop
xor
in
les
stc
dec
and
imul
and
je
outsl
sub
xchg
pop
push
jns
test
test
or
mov
sbb
test
jnp
sbb
stos
les
jbe
ret
es
xor
pop
push
push
ret
ja
dec
sub
dec
mov
movswl
leave
mov
pop
xor
leave
hlt
xor
xchg
gs
mov
mov
add
ljmp
enter
inc
push
sbb
popf
movsl
cmp
insb
aad
push
cmp
pop
and
out
fildll
cltd
cmp
fdivrs
mov
mov
cmpsb
aaa
jae
cvtps2pd
fcmovu
bound
sbb
pop
cmp
js
xor
scas
jle
cmp
imull
shll
cltd
mov
rcll
cmpb
setno
pop
sub
sub
lret
movsl
mov
fstl
push
pop
or
add
shl
jmp
or
add
cmc
and
cmpsl
loopne
jae
jecxz
cli
lahf
stc
add
out
lods
fisttpl
fldl
dec
mov
insl
or
sbb
jmp
call
dec
xchg
lods
xchg
pop
es
or
cmp
mov
mov
and
and
jp
mov
mov
repz
testl
dec
push
cmpsl
cmp
inc
addr16
pop
imul
xor
shll
jb
xor
adc
jge
pop
xor
push
mov
das
cmpsl
imul
pop
push
inc
mov
xlat
mov
imul
rclb
push
lds
push
ret
int
and
shlb
dec
gs
out
mov
add
dec
inc
insl
adc
ljmp
lcall
icebp
insb
push
jno
test
cmp
lahf
pop
jns
and
jmp
cmc
xorl
pop
imul
lea
roll
or
push
lret
add
inc
fisubrs
sbb
or
ror
inc
adc
cli
and
arpl
loopne
loopne
fsubs
sub
es
cmc
repz
loopne
movsl
hlt
xchg
jle
jle
or
int3
bswap
popf
int
push
das
add
outsl
sarl
loopne
loopne
sbb
push
repz
xchg
pop
lods
aam
pop
stc
into
in
leave
add
test
out
std
arpl
mov
shlb
in
loope
adc
scas
js
lods
adc
pop
outsl
std
int3
jecxz
shll
gs
add
inc
mov
pusha
mov
out
cld
jle
arpl
push
jmp
ljmp
mov
pusha
mov
adc
xchg
cmp
mov
cltd
fnstsw
lods
mov
notb
fsubl
arpl
cmpsl
inc
mov
in
cwtl
adc
shll
popa
add
push
ret
dec
sub
mov
mov
out
subl
movsb
nop
push
scas
aad
pop
test
mov
mov
sbb
mov
fdivrs
outsl
mov
add
frstor
jg
push
jb
jbe
push
cli
lock
xchg
push
fcomps
mov
into
pop
push
cli
sbb
pop
and
inc
decb
repz
push
pop
aam
movsl
shrb
stos
icebp
jae
add
rcll
sbb
imul
shrl
jnp
shll
pop
lock
stc
es
leave
scas
xchg
test
mov
shlb
icebp
imul
add
inc
xor
pop
int3
imull
mov
mov
leave
int
pop
sbb
lock
icebp
cmp
fwait
insl
icebp
sub
fcoms
dec
or
and
mov
xor
cld
dec
stos
push
movsl
imul
aaa
jp
inc
push
int
and
xchg
movsb
lahf
loope
ja
jecxz
jb
out
mov
xor
aaa
lahf
xchg
addr16
nop
pushf
push
lret
repnz
shll
pop
lds
xchg
sub
sub
jecxz
mov
mov
mov
mov
jg
jb
fistl
fisttpll
bound
lods
mov
pop
xchg
mov
mov
out
push
ljmp
xchg
pop
sub
mov
arpl
insb
jl
or
sub
mov
push
fisubrl
mov
lret
xchg
stc
out
or
enter
inc
or
inc
in
mov
lods
push
xor
push
aad
js
aad
push
lcall
das
pushf
enter
jnp
push
das
mov
out
pop
mov
mov
cs
pop
pop
imul
std
xchg
xor
das
in
mov
inc
addr16
in
imul
das
fiaddl
fcoms
or
jnp
adc
xor
cltd
shrl
pop
cmpsb
mov
or
push
ja
rcll
mov
inc
add
adc
repnz
inc
xchg
sbb
add
cltd
into
jnp
dec
rcrb
add
jl
outsl
dec
xchg
icebp
stc
imul
es
stos
in
adc
lea
xchg
popa
inc
sub
mov
scas
aas
lods
nop
aam
test
jne
leave
pop
repnz
call
mov
inc
int
shlb
out
ss
test
mov
lds
sub
sub
data16
jo
leave
push
push
rcll
aam
adc
sub
gs
cmp
mov
insl
dec
test
movsb
cmp
out
mov
pop
pop
push
outsb
rol
mov
sub
jo
lods
mov
dec
and
lret
push
imul
cmc
sub
sub
cmpsb
jmp
sbb
lods
stos
cmp
leave
adc
test
cs
sbb
js
sub
popa
aad
bound
aas
mov
dec
fcoml
sub
mov
or
cmp
jg
cmp
mov
fmulp
call
and
in
loope
add
adc
ja
mov
adc
rolb
cmp
pushf
adc
mov
jge
lea
dec
xchg
fistps
sub
sahf
out
ret
xor
pop
gs
fisubs
iret
inc
xchg
faddp
push
xchg
cmp
add
lods
js
push
cmpsb
and
add
and
jns
ret
or
das
testb
jne
jmp
fs
mov
stos
mov
sbb
jecxz
and
in
xor
cld
dec
sub
inc
aaa
repnz
test
cmc
sub
cmp
jnp
xchg
rcrb
push
mov
std
shll
and
mov
lock
mov
shll
inc
loopne
dec
pop
mov
das
daa
lds
rcll
mov
pop
jg
shll
outsb
mov
mov
mov
cmpb
dec
jo
or
out
push
pop
or
cmp
loope
cs
jo
sub
mov
push
jno
fdivrl
jecxz
pop
outsb
dec
adc
aad
dec
jns
mov
lret
push
xor
jmp
mov
xchg
loope
adc
mov
imul
stos
in
jge
or
jmp
mov
ficomps
inc
xor
dec
xor
or
jno
fbld
lds
rcr
loope
rolb
out
dec
in
in
clc
jno
loope
sbb
hlt
add
jecxz
enter
insl
cli
cmp
movsl
lret
imul
xchg
mov
scas
sti
xchg
mov
mov
repz
pop
mov
pop
bound
mov
test
xchg
or
dec
ret
outsb
push
imul
popw
pop
pop
aas
data16
icebp
stos
cs
cmp
mov
stos
in
in
adc
cmp
add
adc
xor
xor
cs
cltd
mov
mov
cli
sbb
stc
lods
mov
jns
in
mov
lods
stos
dec
dec
mov
stc
add
xchg
add
mov
dec
mov
inc
xchg
insl
jnp
cmp
xor
out
cmp
lret
stc
jmp
xor
mov
push
dec
or
xchg
bound
lahf
cmp
lret
lods
adc
push
or
xchg
mov
test
data16
pop
ret
ret
lcall
push
lods
jb
jb
int
cli
sub
mov
inc
ficoml
and
outsb
rcll
mov
push
and
popa
cld
or
sub
icebp
dec
xchg
xor
popf
push
adc
push
or
sbb
inc
aaa
pusha
das
out
aad
stos
xchg
xor
mov
jmp
add
movsl
xor
or
jle
imull
sarl
hlt
xchg
sub
mov
dec
dec
or
daa
cmp
inc
and
nop
and
out
testb
decb
popa
lods
insl
aas
das
aas
inc
scas
ja
inc
shll
cmp
fdiv
adc
mov
sub
mov
in
dec
movsl
movsb
xchg
mov
hlt
add
dec
ror
push
test
sbb
inc
push
prefetchw
popf
push
mov
and
stc
mov
pushf
mov
add
adc
jecxz
dec
cwtl
test
cli
clc
out
inc
test
sub
cmp
sbb
std
shll
inc
jecxz
rcrb
nop
jmp
into
inc
jge
cmp
pop
imul
bound
fidivl
mov
int
popf
and
cmp
and
sbb
xor
clc
inc
and
shr
dec
adc
xchg
test
or
adc
lcall
fidivrs
mov
int3
pop
lahf
jecxz
jo
out
mov
das
outsb
enter
pop
test
std
repz
icebp
lods
cmp
icebp
sbb
mov
inc
shll
testb
sbb
jo
cmp
int3
cltd
lret
sahf
fsts
in
xlat
jp
push
jmp
arpl
popf
in
call
pop
je
mov
loop
dec
xor
jmp
popf
ret
or
pusha
mov
aad
bound
fistpll
popa
pop
jmp
testl
or
mov
xchg
enter
or
jnp
bound
sub
mov
loope
ss
push
in
xchg
or
lds
cmp
push
outsb
fsts
mov
or
xchg
mov
inc
test
adc
outsl
adc
xor
lods
or
xchg
stos
pop
stc
adc
out
in
mov
mov
jg
inc
cmp
add
jmp
mov
xlat
inc
add
or
inc
cltd
add
or
enter
push
packssdw
cmp
pusha
sbb
stc
xor
cmp
or
xchg
mov
inc
into
les
xchg
pop
inc
or
test
rorl
sbb
inc
add
or
cmp
out
insb
and
jg
out
adc
rolb
jno
mov
std
andl
mov
jg
pop
inc
stos
mov
push
jne
xchg
loop
gs
lret
shrb
mov
mov
and
lods
ret
imul
mov
push
mov
xchg
pop
test
xor
cmpsl
mul
cmp
loopne
xchg
push
mov
popa
inc
mov
pop
pop
mov
int3
js
aaa
adc
jnp
or
scas
push
testl
out
movsl
popa
pushf
xlat
sbb
scas
fsubrl
stos
je
cmp
jecxz
mov
mov
pushf
mov
repz
les
imul
mov
fldt
pop
in
fnstsw
sbb
in
outsl
jb
js
arpl
jo
cmc
bound
or
push
test
mov
insl
sbb
div
mul
mov
push
xchg
in
leave
pop
out
xchg
add
stos
not
fcmovb
mov
or
push
pop
cmp
cmpsl
divb
int
inc
mov
roll
mov
mov
or
mov
add
or
pop
mov
fwait
jp
jmp
mov
jge
mov
cwtl
adcb
icebp
cmpsb
and
mov
sub
push
mov
lret
test
mov
xchg
cwtl
movsl
or
fildl
sub
mov
jno
bnd
sub
aas
mov
or
rclb
sub
adc
idiv
lret
mov
dec
xchg
int3
pop
sbb
cmpsl
sbb
sbb
leave
cmpl
cs
mov
je
push
inc
mov
mov
outsl
and
imul
jmp
push
pop
stos
xchg
mov
cmp
pop
add
cmc
jmp
cmpsb
aaa
pushf
pop
in
jns
jle
and
fistl
mov
push
add
mov
mov
pop
ficomps
xor
enter
mov
out
iret
pusha
jbe
or
mov
outsb
jnp
es
inc
sub
lock
sbb
pop
loop
push
rorb
jmp
rol
test
sbb
aad
repnz
push
pop
out
pop
or
shlb
dec
hlt
out
cmp
pop
mov
stos
into
fimull
cmpsl
js
mov
mov
mov
ret
imul
scas
ss
and
pop
inc
idivl
or
scas
cmpsl
inc
or
cmpb
jmp
xchg
in
leave
rolb
stc
pushf
xchg
rclb
inc
push
stc
repz
xchg
xchg
sbb
dec
inc
or
cmp
lcall
push
mov
rorb
into
push
mov
outsl
rolb
lret
pop
mov
insl
std
movsl
sbb
jp
lcall
sub
inc
pop
daa
inc
sar
xchg
call
add
add
sub
clc
ja
insb
sbb
std
rcrb
scas
xor
fcomps
sbb
push
loope
sub
ja
push
add
sub
or
adc
xor
inc
mov
mov
push
jae
sbb
mov
mov
fs
mov
nop
idivl
outsl
jge
ljmp
sbb
add
movsl
cmp
push
dec
and
add
mov
insb
das
mov
scas
divl
jb
xor
int3
xchg
mov
shrb
sub
fsts
nop
sbb
out
xor
pushf
sbb
cmp
call
push
dec
or
add
std
test
jecxz
jne
xor
push
shlb
loop
inc
cmp
or
stos
insl
sub
lods
pop
cmp
dec
mov
xor
mov
mov
inc
sbb
les
mov
aad
add
in
movsl
mov
push
push
bound
aaa
je
call
cmpsl
lret
sub
sti
and
sar
mov
fwait
movsb
ds
jo
jp
xor
pop
fildl
mov
mov
mov
pop
cmpsl
insl
sub
daa
inc
fdivrl
pop
mov
clc
jl
lods
sti
xchg
addl
push
mov
lea
and
movsl
pop
outsb
test
xor
cmpb
pusha
push
jg
cmp
inc
fsubrl
jp
jb
mov
mov
stc
aam
ficompl
int3
lret
ja
int3
or
jg
test
mov
mov
mov
lret
xor
push
jecxz
adc
mov
cltd
or
repz
pusha
iret
in
push
ljmp
xor
xchg
icebp
sbb
xchg
jge
fdivl
in
push
cmp
test
fmull
sub
pop
inc
sub
test
lahf
push
stos
inc
sbb
std
ljmp
es
mov
or
mov
mov
pop
fcmovbe
mov
and
mov
out
xchg
push
outsb
pop
pushl
in
movsl
or
stos
dec
xchg
sbb
or
mov
ret
inc
lods
loopne
aam
dec
mov
pop
imul
xchg
jmp
fnstenv
loop
arpl
sub
cmp
mov
adc
bound
inc
push
mov
in
dec
je
lds
cld
in
dec
adc
dec
sbb
aas
push
push
fwait
nop
movsl
and
outsb
add
pop
mov
in
into
pop
adc
faddl
inc
lock
les
mov
popa
in
fcomps
test
outsb
mov
sub
int3
ss
stc
inc
inc
mov
sar
imul
repz
dec
andb
xor
jae
bound
mov
ret
mov
cs
lock
loop
inc
repnz
or
dec
xor
sbb
dec
mov
mov
mov
test
add
imul
call
inc
das
movsl
sub
and
adc
add
sbb
cmp
les
shl
dec
jbe
enter
push
sub
inc
jns
mov
push
cmc
or
bound
mov
stos
into
lret
mov
pushf
push
adc
lds
add
pop
cwtl
shlb
cld
scas
js
pop
push
lret
movsl
jae
in
xor
or
jo
dec
mov
inc
lods
push
adc
notl
push
sub
lods
dec
movsl
out
xchg
lods
pushl
pop
dec
mov
sahf
lret
and
pop
ds
sarb
push
jae
inc
or
int3
sub
sti
jge
inc
lahf
sub
aas
sbb
fs
js
div
pop
mov
mov
test
mov
mov
and
mov
sahf
xchg
xchg
jl
fimull
or
les
xor
mov
mov
mov
xor
xor
leave
insb
scas
and
xlat
or
dec
or
mov
xchg
push
push
es
pop
shlb
out
sbb
jp
sub
xchg
inc
in
cmp
sub
xor
loopne
aam
ret
fsts
jmp
rcrl
mov
or
jb
mov
inc
or
adc
pop
mov
rcr
rcrb
jecxz
push
push
xor
pop
popa
mov
or
mov
sarb
mov
fnstsw
pop
push
adc
sbb
sbb
aad
and
pop
or
in
xor
push
bound
cmp
cmp
lea
aaa
popf
enter
out
aad
pop
dec
in
ds
ds
stc
cli
mov
lock
sub
jo
rcr
mov
mul
in
repnz
enter
pop
ret
push
int3
sub
pop
shrl
fxch
lahf
xchg
test
rcr
jl
ljmp
cmp
arpl
or
mov
bound
into
lods
fadd
jl
push
out
jbe
ja
daa
cli
loopne
dec
fbld
and
adc
push
pop
lock
push
xchg
jmp
cwtl
cmp
add
add
das
imul
xor
ljmp
rcrl
inc
inc
lea
pushf
xor
push
aas
shl
shll
incl
icebp
adc
inc
jge
push
sub
mov
mov
icebp
sbb
bnd
arpl
sub
push
push
test
in
aaa
cwtl
push
mov
inc
clc
leave
iret
inc
int3
push
ficomps
into
test
imull
xchg
jecxz
dec
dec
ljmp
test
pop
jae
and
call
ret
stc
pop
decl
jno
add
cmp
add
popf
stos
sbb
aam
lret
add
les
shl
pop
movsl
push
dec
and
push
cwtl
lods
or
out
dec
jno
sub
mov
into
loop
je
and
mov
sarl
or
inc
fcmovbe
mov
xchg
arpl
movsb
das
push
mov
pop
movsb
sub
sub
pop
pop
mov
push
mov
dec
mov
cmp
je
mov
out
aad
scas
jae
xchg
xor
movsb
cmp
aam
pop
cmc
movsl
mov
scas
iret
addr16
push
and
popf
das
dec
sub
int3
lcall
test
sbb
mov
jne
cmp
insb
mov
vpavgw
pusha
pop
fstpt
stos
shlb
xchg
or
enter
mov
push
std
data16
lea
dec
lahf
adc
or
jmp
adc
in
pop
cmpsb
add
inc
jno
or
xchg
inc
inc
mov
cmp
jp
hlt
mov
addr16
adc
jl
sti
repz
ljmp
aam
mov
lret
xchg
leave
out
sbb
leave
in
and
push
xlat
sub
out
push
or
leave
jne
dec
mov
shlb
subl
addr16
cmpsl
sbb
sub
shlb
in
fiadds
lds
jecxz
or
bound
or
pushf
mov
pop
xor
push
mov
dec
jmp
xor
insb
test
adc
xor
mov
aam
mov
mov
lods
dec
xor
jmp
inc
xchg
aam
jle
push
dec
and
push
sbb
nop
lcall
fdivs
mov
mul
jno
xor
sub
fistps
aaa
ficompl
lahf
lret
add
dec
mov
arpl
test
jns
lcall
test
into
xlat
jne
out
mov
ret
mov
dec
push
xor
cmpl
jecxz
ss
repnz
in
jle
sub
push
mov
fisttps
sub
and
fwait
xor
xchg
push
imul
mov
popa
xlat
int
xchg
push
and
cli
cmc
or
xchg
xor
jns
or
jnp
xor
or
fisttps
dec
jae
dec
mov
jmp
cmp
or
xor
out
pop
cmpsl
loop
jne
cmp
stos
aad
push
and
aas
sub
jno
cs
push
mov
dec
push
mov
or
rcrl
mov
test
lods
add
dec
int
mov
adc
fadd
dec
mov
daa
sub
call
out
cs
or
in
mov
fsub
push
testl
jnp
mov
xchg
pop
rcll
lret
sub
lods
outsl
or
push
push
xor
add
and
dec
jns
in
xchg
push
int
sbb
adc
fistps
mov
cmp
xor
subb
mov
cs
addr16
push
xchg
iret
mov
xchg
xor
xor
dec
pusha
xchg
xchg
enter
std
add
mov
daa
dec
ja
mov
sbb
push
or
adcl
fs
push
or
loop
adcl
jg
imul
enter
cld
add
pushf
push
dec
mov
fldl
test
out
mov
dec
inc
insl
test
dec
icebp
sbb
xor
iret
ror
in
inc
adc
mov
dec
cs
mov
mov
shl
and
scas
out
adc
fdiv
shr
sub
ffree
rorl
mov
or
inc
loope
out
decl
pusha
clc
lods
push
negb
rcr
fsubl
sub
push
js
ret
fwait
push
push
pop
sbb
decb
repz
sahf
frstpm(287
cmp
stc
fidivrl
rcrl
test
mov
xchg
insl
mov
pop
adc
xchg
loope
cwtl
push
cmpsl
or
lea
mov
push
push
mov
in
bound
movsl
je
jmp
add
lea
dec
fcomps
fildll
xlat
stos
sub
jl
push
sub
xor
loopne
popa
fcomps
loope
lods
mov
insl
mov
decb
add
dec
mov
cmp
fcom
or
pusha
xor
add
ret
dec
frndint
adc
pop
dec
xlat
ss
adc
mov
push
sarl
arpl
out
loop
and
fisubl
test
aaa
cmpsb
mov
scas
jb
mov
add
cwtl
fisttps
sub
push
hlt
ja
fstpl
nop
sub
aas
or
add
jnp
push
ljmp
jbe
mov
data16
adc
test
shl
addl
dec
insb
xchg
xchg
pop
pop
jecxz
cmpl
and
and
sbb
aam
and
sbb
int
xor
sbb
add
icebp
iret
cmp
je
loope
pusha
mov
push
sbb
stos
fistps
adc
push
xor
std
shrl
mov
push
pop
cmp
dec
xchg
cmp
les
shll
adc
jne
lods
pop
add
jbe
xor
mov
ljmp
popa
mov
mov
les
mov
mov
pop
cmp
lods
and
mov
cld
inc
adc
inc
gs
movb
das
dec
xchg
sbb
push
leave
lods
mov
popf
or
pop
popa
inc
out
mov
shr
fistpl
add
popa
pop
js
stos
xchg
push
fsubrs
stos
loope
js
mov
or
lret
cwtl
sub
filds
sub
test
mov
pop
cmp
js
adc
cmc
jle
in
das
dec
das
insl
lret
push
and
xlat
cmp
repz
bound
push
mov
test
cmp
mov
xor
addb
mov
insl
inc
aas
or
stc
sub
lea
mov
sub
mov
push
cmp
sahf
divb
enterw
xchg
push
pop
sbb
rclb
inc
addr16
outsl
add
sbb
push
pop
cmpsb
imul
out
lret
jp
loop
add
pop
call
mov
and
lds
push
or
mov
push
stos
cmp
jbe
pop
jge
inc
pop
mov
xorb
fildl
push
sub
jb
lahf
int3
mov
pop
sahf
mov
xor
movl
aas
cmpsb
jb
pop
dec
add
pop
pop
mov
in
adc
jg
push
pop
fwait
dec
mov
outsb
std
aaa
push
mov
bound
int
dec
add
mov
dec
das
popf
and
lods
out
loope
fcom
or
mov
push
adc
arpl
mov
inc
daa
fsubs
push
pop
les
sub
cmp
jecxz
jno
sbb
xchg
lret
dec
insl
dec
jbe
fimuls
or
sahf
jg
lret
cmpsl
dec
xchg
xor
mov
ret
fidivl
and
push
sub
pop
jle
divl
and
mov
ret
jbe
sbb
jle
mov
dec
lods
je
pop
add
cli
push
lret
lahf
sarb
orl
push
xchg
inc
jbe
adc
vcvtsi2sd
ss
xchg
andl
pop
sbb
pop
into
mov
imul
mov
out
nop
loopne
sti
std
add
push
add
fidivrs
btr
or
xchg
inc
push
xchg
mov
gs
mov
push
data16
mov
lret
test
ftst
fsubrl
mov
or
hlt
cmp
pusha
pop
mov
dec
and
popf
sbb
cmp
mov
int
data16
roll
int3
into
mov
je
sub
sbb
mov
imul
int3
dec
dec
jbe
lds
clc
adc
adc
jge
jle
pop
clc
mov
sub
imul
xchg
mov
jne
ret
mov
stos
sbb
inc
fstpl
and
sbb
addb
mov
pop
push
push
cmp
test
dec
dec
sub
pop
sti
adc
jb
sub
daa
add
testb
fcomp
decb
dec
pop
or
and
or
faddp
ljmp
inc
pop
jecxz
arpl
jb
ret
hlt
fnstsw
and
mov
jno
xchg
jne
dec
rorb
aad
add
jae
dec
shlb
mov
ja
in
bound
nop
jg
jecxz
xchg
push
add
sbb
push
mov
xor
and
rolb
movsl
pop
pop
outsb
popf
clc
inc
jbe
xchg
xchg
jne,pt
lret
leave
in
sbb
lret
cmp
mov
shll
pop
test
dec
fwait
pop
xor
push
cmp
int3
test
scas
cltd
cmc
dec
test
sbb
rcll
pop
fwait
js
lds
adc
push
icebp
inc
enter
mov
jo
xchg
add
int3
sub
cli
fucomi
rcl
sbb
gs
mov
dec
jl
pop
xor
les
push
mov
sub
add
push
and
jl
add
sahf
pop
je
sbb
push
adc
jnp
aas
add
je
popl
jo
aam
inc
sbb
inc
aam
into
pop
jecxz
sub
daa
repnz
je
mov
jo
and
mov
fwait
out
aad
fs
test
push
push
ret
enter
ds
xorb
mov
imul
pop
lret
mov
mov
jmp
rcrl
mov
cmp
out
cs
push
ds
mov
out
lds
sub
ljmp
test
pop
pop
movsl
dec
popf
xchg
xor
lods
leave
jnp
ret
in
jle
ret
stos
push
lods
cmp
jle
and
xchg
addb
add
movsl
jnp
inc
pop
mov
cmpb
sub
jle
in
xchg
fistpl
cli
cmp
imul
gs
js
dec
sub
push
jnp
mov
insl
aas
and
mov
adc
repnz
cmp
pop
jecxz
ljmp
push
xchg
jbe
imul
mov
je
test
sbb
mov
pop
call
and
sbb
fildll
stc
ret
pop
cld
imul
mov
jb
sub
inc
outsb
ss
lods
sahf
fsubs
and
mov
mov
popa
fists
sbb
add
xrelease
push
adc
int3
test
sub
rcll
inc
sub
sub
and
fnstsw
pushf
mov
iret
lret
jp
or
sbb
jae
jne
lcall
insl
repnz
mov
inc
jns
ret
and
outsb
jns
adc
mov
clc
dec
sub
mov
sar
imul
cmc
and
out
stc
int3
js
pop
fwait
sbbb
push
jns
fsubrl
pop
stc
xchg
xchg
pop
sbb
ss
mov
pop
push
in
cmp
cmp
cmp
test
pop
int
ds
push
dec
stos
pop
fwait
mov
inc
or
mov
lcall
leave
mov
push
push
aam
xchg
loop
add
fisttpl
cli
lods
fwait
cld
stos
shlb
iret
xor
mov
jne
dec
bound
stos
add
aam
add
sbb
icebp
mov
dec
test
rcrl
cld
dec
pop
fidivrl
add
aam
xchg
shlb
arpl
ljmp
call
cmpsl
xchg
xor
push
iret
testb
dec
jns
jo
adc
mov
cli
sub
sarb
add
pusha
hlt
stos
enter
pushf
out
add
fadds
inc
jne
inc
out
add
push
sbb
fwait
inc
inc
dec
insb
xchg
loope
adc
sbb
jno
ds
into
insl
cld
and
in
std
mov
push
mov
out
iret
outsb
cs
jmp
je
ret
push
int3
adc
daa
pop
dec
cli
cmp
cli
fldt
push
iret
dec
mov
and
mov
inc
mov
push
mov
add
ss
shlb
mov
and
in
jnp
sbb
addb
or
cmp
push
cld
stos
lods
lds
mov
popf
push
lds
test
pop
and
ss
in
dec
xor
loop
sbb
dec
movsb
ret
dec
lcall
dec
mov
test
stos
loopne
das
arpl
adc
scas
sbb
xor
sub
xor
roll
stc
test
sub
fwait
ja
aas
pop
in
lahf
jb
push
aad
dec
add
dec
loope
leave
mov
sbb
fcompl
shll
pop
outsw
jae
xchg
hlt
push
push
lds
mov
push
push
mov
cmp
adc
std
jno
ds
sub
xchg
pop
imul
inc
out
shl
sbb
in
jge,pn
ret
popa
sbb
loopne
inc
movsl
add
xchg
pop
jge
clc
insb
mov
shll
jo
sbb
mov
imul
popa
ds
sub
movsl
and
mov
mov
loopne
scas
in
cltd
xor
cmp
and
sbb
xchg
in
loope
sti
in
jg
sub
fcoms
or
sub
inc
cmp
adc
inc
jo
add
xchg
xor
pop
sbb
push
ljmp
and
push
pop
jmp
mov
mov
cmpsl
lret
stos
sarl
mov
jae
adc
loop
cltd
xor
rorl
adc
mov
add
fildll
bound
dec
mov
out
sbb
xor
or
and
cmpsl
arpl
and
sub
adc
ljmp
sbb
and
pop
mov
repz
cmpsl
mov
xor
aam
scas
xchg
out
ja
scas
movsb
repnz
addr16
adc
or
repnz
jg
inc
adc
sbb
pop
test
or
daa
shll
xlat
sbb
std
test
rcll
cli
stc
or
lods
pop
cmp
xchg
and
xchg
test
adc
push
xor
mov
cmpsl
jo
movsl
and
jmp
add
cmpsb
inc
dec
outsl
sub
gs
mov
out
or
xchg
inc
lahf
push
pop
or
dec
adc
jbe
mov
cmp
clc
cmp
cltd
inc
fsubrl
test
mov
insl
adc
add
leave
mov
jl
sbb
sbb
mov
mov
dec
dec
pop
and
aaa
cltd
cs
lret
sub
jecxz
sub
cli
call
es
inc
les
cmp
sub
hlt
popf
jge
in
add
push
jno
or
sbb
shll
xchg
jl
add
sbb
jb
xchg
pop
mov
lock
mov
push
movsb
sbb
sbb
push
dec
ret
mul
std
push
and
push
jmp
and
cld
fsubrp
es
or
icebp
sbb
es
and
adc
dec
inc
pop
es
outsl
aaa
mov
xor
in
sahf
clc
jbe
xor
fmull
loope
push
mov
inc
push
das
mov
lock
dec
stos
int3
mov
scas
test
popf
filds
inc
loope
aaa
loopne
dec
pop
out
test
adc
mov
sbb
xchg
xor
jge
push
je
and
ss
scas
mov
xchg
xchg
adc
lret
mov
in
lea
call
pop
jmp
cltd
je
sub
jl
dec
jecxz
inc
sbb
xchg
and
stos
cmc
repnz
cmp
cmp
sbb
cmp
sbb
into
iret
and
push
dec
mov
or
inc
mov
sub
mov
scas
addr16
cs
mov
or
mov
mov
pop
sbb
pop
jbe
pop
mov
push
and
inc
xchg
sbb
clc
mov
pop
mov
cwtl
xchg
xchg
fisubs
cmp
stos
jbe
dec
dec
out
mov
dec
mov
pop
out
mov
jle
pop
mov
inc
inc
dec
push
stos
call
insb
cs
imul
outsb
cmp
fs
mov
or
xchg
sarb
scas
mov
cltd
out
repz
mov
xchg
data16
push
stos
stc
lret
fsubr
fs
ss
mov
sbb
test
int3
xchg
cmp
xor
lcall
out
xchg
pop
ds
icebp
mul
push
in
adc
stc
lds
leave
xchg
cmpsb
inc
jae
sbb
pop
ljmp
sub
or
jno
mov
mov
and
out
sub
popa
cmp
bound
mov
daa
sub
lock
into
dec
cmpsb
insb
adc
inc
neg
ret
jge
std
xchg
dec
mov
adc
xchg
testl
sbb
cmp
mov
insl
bnd
mov
mov
and
inc
in
dec
clc
lods
jg
pop
sub
fistps
mov
xchg
pop
push
fwait
aam
push
std
push
cmpsl
psubsb
jecxz
jo
pusha
and
mov
pushf
fs
inc
xor
xor
mov
cmpsb
cmp
pop
es
stc
insl
dec
jo
sbb
jecxz
adc
out
jne
int3
test
loop
jge
xlat
loop
xor
lcall
mov
cmpsl
jno
push
mov
xchg
jl
data16
adc
inc
or
inc
test
scas
mov
out
push
pop
push
cmpsb
mov
inc
fwait
outsb
pusha
shlb
xchg
insl
xchg
call
sbb
das
imul
mov
sub
test
jbe
pop
and
das
fs
push
adc
decl
sbb
adc
mov
leave
sub
into
out
rcrb
sbb
test
repnz
mov
std
mov
out
sub
scas
stos
adc
test
movsb
cmp
fisttps
test
fnsave
mov
cmpl
pop
push
mov
mov
jne
push
adc
cmpsb
add
shlb
and
fisttpll
clc
loope
imul
mov
mov
mov
filds
rclb
enter
sub
pop
mov
nop
addr16
push
mov
or
stos
fwait
pop
call
cmpsb
fs
sbb
xchg
icebp
mov
orl
push
push
mov
jl
scas
cpuid
js
nop
scas
stos
jmp
orl
lods
dec
pop
push
dec
sub
jbe
les
adc
fsubr
lahf
pop
mov
sahf
jb
test
pop
rolb
jg
and
pop
test
orb
loope
jmp
ss
fldl
les
push
push
mov
pop
out
xchg
or
stos
mov
in
rol
fisubs
pop
enter
inc
or
mov
ret
frstor
leave
mov
stc
daa
sub
xchg
cli
movsb
sti
scas
enter
enter
fstps
xchg
pop
sub
add
aaa
neg
scas
mov
movb
mov
mov
jne
pop
mov
xchg
pop
adcb
mov
jle
loopne
jge
hlt
pop
cltd
loope
jbe
orb
popf
xchg
loope
hlt
dec
ja
shll
adcl
sarl
xor
and
adc
fcmovne
push
inc
xchg
add
out
push
add
fidivs
add
xchg
sub
cmp
push
loop
daa
jge
jmp
jp
pop
jge
xchg
jg
push
mov
push
call
push
aas
pop
mov
push
mov
and
mov
xchg
add
mov
mov
mov
xor
inc
pop
bound
movsb
dec
sub
or
les
xchg
inc
scas
call
adc
aam
pop
sbb
mov
jnp
les
fs
orb
push
iret
inc
mov
nop
mov
xchg
enter
dec
gs
pop
in
sub
xchg
rcr
outsb
insl
sub
dec
cmp
jmp
std
mov
dec
jnp
shl
popa
fdivl
data16
cs
mov
push
xlat
test
sub
and
aaa
inc
lods
scas
bound
cld
popa
lds
sub
aaa
jg
mov
lea
lods
jecxz
mov
mov
movsl
int
int3
scas
jg
addl
inc
sahf
nop
inc
out
pop
xchg
xchg
dec
lcall
stos
adcb
out
out
mov
out
push
jbe
mov
xchg
jecxz
pusha
leave
mov
mov
jle
stos
inc
inc
aaa
cltd
ret
dec
push
fnsave
cld
mov
jb
in
out
sub
cli
jb
mov
jle
neg
sub
test
cmp
ret
stos
fsub
int3
test
les
jo
sbb
push
leave
jmp
es
pop
imulb
and
xchg
aad
push
movsl
xchg
cs
adc
sub
rcr
pusha
push
je
aam
add
divb
mov
js
shll
push
dec
xor
jns,pn
stos
lret
sbb
movswl
mov
jo
test
aaa
repnz
dec
shr
fldt
xchg
mov
stos
push
or
jg
aam
mov
fwait
sub
insl
out
fadd
fs
bound
mov
cmp
outsb
push
mov
scas
push
xchg
pop
std
push
lcall
xor
rep
jb
nop
mov
mov
fnstenv
aaa
jne
xchg
adc
sub
call
xchg
ds
hlt
add
xchg
sbb
mov
mov
pop
xchg
loopne
xchg
or
test
test
mov
jle
dec
aam
iret
push
mov
enter
sarb
icebp
sub
fisttpll
mov
icebp
cwtl
inc
lret
aam
leave
add
lretw
xchg
into
jbe
daa
fidivrs
nop
mov
or
int
ficoms
aas
inc
pop
cmp
inc
call
fdivl
pop
mov
sahf
dec
cmp
push
jb
bound
cltd
sbb
movsl
xchg
sbb
fsubs
in
ds
and
push
je
loope
mov
xchg
and
xor
clc
mov
add
mov
push
pop
cmpsb
das
inc
out
adc
daa
mov
dec
enter
push
cs
movsb
incb
add
push
sbb
mov
mov
sub
mov
push
push
or
imul
and
add
push
lea
in
push
repnz
dec
insb
mov
ljmp
and
or
ljmp
test
xor
idivl
xorb
push
shll
xchg
fbld
sbb
jne
cltd
jnp
jns
jo,pt
or
mov
imul
es
cmp
das
push
inc
outsl
lahf
mov
repnz
es
sub
icebp
lret
repz
je
fiaddl
les
and
add
dec
xchg
xchg
jnp
jg
and
dec
cmc
mov
and
faddl
das
xor
jb
jmp
movsl
movsb
sbb
lods
jae
push
clc
mov
call
add
push
lods
jle
push
or
loop
mov
repnz
push
or
ja
cmpsl
leave
fadds
pop
loopne
add
cmpsb
ret
mov
sub
outsl
push
decl
pop
insb
movsl
cmp
ss
push
es
or
int
insl
adc
test
sbb
bound
imul
hlt
fisubl
out
and
fists
add
cwtl
addr16
mov
sbb
orps
jns
js
sarl
pop
stos
mov
push
lods
inc
lahf
aaa
fnstsw
dec
pop
mov
or
aaa
sbb
and
and
dec
and
xchg
add
in
scas
das
jnp
jb
dec
fs
mov
and
mov
add
addb
adc
or
jle
in
mov
ss
stos
mov
daa
int
lahf
push
sub
test
mov
inc
or
popf
rcrl
mov
pop
imul
dec
xchg
out
dec
cmpsl
call
adc
cld
fsub
sysenter
xchg
push
inc
jo
jg
das
das
arpl
fbstp
add
ja
sbb
and
repz
jbe
pop
mov
popa
shrl
cmp
nop
gs
in
das
std
push
test
jb
jne
mov
adcl
jo
xchg
adc
jno
loope
lret
inc
add
clc
mov
insb
xchg
jae
stos
into
pop
iret
sub
sbb
sbb
dec
jb
inc
lods
mov
imul
loopne
int
out
adc
fwait
mov
jbe
scas
repnz
aaa
push
sub
dec
push
icebp
test
dec
xlat
xchg
scas
mov
sbb
rorl
ficompl
int3
sbb
fnstenv
aaa
insb
xor
out
leave
sub
inc
fmul
nop
cmp
lods
xorl
mov
jno
or
push
hlt
jne
push
xor
js
inc
xchg
jmp
lcall
push
mov
sbb
cmp
xchg
aas
lock
xlat
outsl
mov
ret
mov
jle
add
and
mov
and
pop
push
fwait
pop
sbbl
std
inc
or
loop
jns
sahf
int
nop
divb
sub
add
mov
call
mov
mov
lcall
jne
js
jle
pop
subl
push
sbb
xchg
ret
idivl
ret
rcrb
jge
inc
das
fwait
mov
sub
je
cmpsb
and
push
or
mov
je
int
pusha
test
movsl
or
pop
jnp
iret
sbb
fstpl
mov
mov
adc
ja
adc
iret
xchg
subl
lcall
movsl
cli
sbb
repz
jecxz
add
daa
test
jg
push
insb
xchg
push
push
inc
rcrl
cmp
sbb
adc
sbb
jp
nop
int3
mov
mov
push
mov
sbb
jmp
adc
mov
mov
dec
pop
sbb
sbb
mov
pop
in
call
andl
mov
sbb
stos
je
xor
rol
les
dec
add
push
pop
jns
into
jp
xchg
in
inc
hlt
adc
pop
inc
cmp
mov
aaa
pop
jae
movsl
movb
jae
sub
sub
jl
jle
nop
les
popa
loope
call
xor
add
and
pop
lea
mov
cmpsb
mov
mov
add
inc
mov
mov
sub
pop
stc
dec
pop
xchg
cmp
dec
sarl
shrl
sbb
mov
pop
movsb
movsl
mov
lods
mov
es
or
lock
out
fisubrl
push
rorl
xchg
push
adc
mov
das
cmpsb
mov
ret
fmul
rcrb
jl,pn
adc
jne
xor
jmp
arpl
adc
mov
mov
sbb
xchg
push
jg
and
loope
adc
scas
test
adc
add
scas
lret
inc
mov
das
leave
arpl
out
notb
lret
sbb
adc
pusha
outsl
push
dec
test
repnz
pop
pop
rcrb
insb
insl
mov
cli
stos
inc
mov
scas
lods
movsl
mov
scas
cmc
outsb
dec
push
mov
add
pop
or
data16
xchg
cltd
sub
adc
sub
push
sahf
adc
jmp
ljmp
sub
std
fcomps
flds
jns
out
xchg
sub
sub
lods
movsb
push
call
icebp
push
push
xorl
loopne
cmpsb
xchg
and
cmovae
xorl
jo
test
inc
lret
inc
xchg
incb
sbb
sbb
and
sbb
mov
dec
push
cld
sub
popa
inc
sbb
test
andb
lock
mov
popf
inc
ret
push
sbb
out
jg,pt
mov
js
push
test
orb
gs
jbe
lods
movsb
mov
or
sub
mov
ret
fsubl
adc
mov
sub
mov
aad
and
mov
fldl
jno
ljmp
sbb
jg
mov
inc
imul
and
hlt
inc
sbb
push
loope
mov
and
stos
dec
mov
hlt
mov
aaa
pop
inc
mov
loope
int3
sbb
outsl
sbb
mov
pop
mov
sbb
std
notl
sub
outsb
pushf
or
lods
push
inc
adc
popf
gs
xor
jge
xchg
and
clc
sbb
shlb
cmp
jnp
rcrl
lock
out
cld
push
repnz
adc
xor
inc
or
insl
fsubs
js
outsb
mov
xor
cmp
xchg
inc
es
icebp
mov
test
pop
cmpsb
inc
xor
aas
jno
mov
xor
and
fldt
pop
inc
mov
cli
dec
add
cmpsl
insb
xchg
dec
bound
xchg
mov
in
push
jno
dec
addr16
xor
jnp
or
leave
xor
cli
cld
jmp
sbb
sbb
cmc
add
aas
and
push
int3
mov
dec
jmp
pop
pop
and
addb
mov
ret
mulb
dec
and
xlat
movsl
xchg
popa
in
cmp
addr16
cmc
lock
mov
cwtl
sub
mov
mov
xchg
dec
mov
add
adc
mov
xchg
pop
stos
test
sub
das
lods
mov
xchg
mov
ror
mov
cmp
mov
and
push
xor
inc
cs
shlb
stos
in
or
sbb
jl
repnz
fildl
xchg
jg
sbb
sub
pop
call
add
mov
in
add
gs
xchg
imul
mov
stos
adc
in
xchg
out
pop
mov
mov
lea
gs
js
daa
xor
pushf
shrb
into
int3
push
fisubs
or
xchg
cld
push
lds
dec
lds
sbb
incl
leave
jno
push
fidivrl
fld
pushf
imul
cs
push
add
push
inc
lods
in
outsb
push
jo
mov
repnz
xor
dec
dec
mov
iret
loopne
pop
shrl
mov
aad
adc
dec
jnp
addr16
push
cmc
mov
int
testb
xor
cmpsb
pop
mov
lcall
add
xchg
movsl
xor
das
lcall
xor
rorl
ljmp
ja
idivb
lret
inc
movl
test
daa
dec
mull
ret
addb
scas
dec
sub
sbb
xchg
fstp
cmpl
mov
cmp
and
mov
dec
pop
push
xchg
dec
imul
loopne
or
dec
fs
inc
mov
inc
rcr
mov
ret
ds
fistl
pop
outsl
push
sub
inc
ljmp
fimuls
pop
push
stos
sti
aaa
aad
arpl
arpl
sub
clc
sub
pushf
hlt
nop
xor
das
sbb
lahf
repnz
pop
or
jbe
cltd
push
mov
and
push
lret
xchg
fadds
xor
in
orl
call
or
push
sbb
pushw
mov
sahf
or
test
cmp
mov
xchg
int
leave
roll
push
and
in
fisttpll
sti
xor
jle
fidivl
push
sbb
mov
mov
test
xchg
movsl
aad
fcoms
push
mov
mov
sub
or
int
enter
xchg
ljmp
pop
lods
arpl
cltd
gs
sahf
jg
jae
mov
xor
xchg
lret
mov
xchg
and
mov
fnstsw
push
test
outsb
jns
ffree
ss
test
push
jl
xchg
and
rcll
fsubrs
pop
push
ret
fld
push
adc
add
loopne,pn
outsl
jmp
push
rcrb
push
mov
mov
jno
pop
dec
lahf
sbb
jb
xor
into
jle
jbe
lret
aaa
push
xchg
push
ljmp
sub
rdtsc
or
dec
int3
add
xor
inc
push
push
fcomp
test
iret
and
fs
ror
rcrb
dec
mov
add
movsl
out
xor
cmpsb
jbe
ret
andnps
sub
adc
inc
stos
mov
xor
xor
fsub
inc
sti
gs
outsl
push
out
mov
movsb
xchg
cmp
lods
int3
add
lret
mov
fdivrp
jno
inc
loope
std
pop
call
cmp
int
out
js
jge
and
mov
push
pop
and
xchg
roll
int
enter
dec
sub
or
xchg
add
push
stos
sahf
popf
ds
sbb
mov
dec
pop
testb
and
ret
ljmp
or
inc
aad
cli
out
repnz
xor
xcrypt-ofb
cmpsl
sub
fnstcw
subb
xor
aam
insb
push
cli
popa
mov
sbb
sub
outsl
fwait
loope
stc
push
mov
xchg
out
rorb
arpl
in
mov
adc
sbb
or
add
push
jno
lods
fnstsw
loopne
xchg
in
inc
mov
mov
cmp
daa
lods
jne
out
push
rcll
jbe
push
mov
fidivl
cmpsb
mov
jns
lods
and
push
sti
mov
lcall
fwait
xchg
jo
mov
std
adc
mov
jno
rep
aam
and
xor
mov
lahf
adc
aam
dec
cmp
cmp
jno
data16
lcall
setbe
and
pop
jecxz
jecxz
je
jg
mov
loope
sti
call
aaa
stos
sub
leave
int
push
lods
fs
xor
push
iret
mov
pop
mov
ja
push
out
ficoms
and
and
cmpsl
jmp
lods
mov
cmpsl
loope
push
pusha
jns
cld
cmp
test
and
sub
sarl
dec
sub
fnsave
shlb
std
cs
jb
int
inc
out
jg
icebp
lahf
out
add
sub
and
mov
mov
adc
int
popf
cs
ljmp
jmp
pop
push
pop
ss
jno
add
jnp
adc
cwtl
push
aad
sub
sbb
inc
insl
cld
enter
xor
cwtl
pop
cli
mov
push
mov
sbb
push
cmp
mov
add
mov
aaa
les
out
add
jne
push
pop
xchg
mov
push
ds
add
imul
cmp
mov
or
test
add
fsts
pusha
stc
das
pop
clc
cmp
icebp
jnp
push
xchg
and
rcl
int
in
fiaddl
add
pop
inc
inc
in
setae
test
mov
addr16
int
mov
jecxz
lea
shll
inc
xor
pop
cmp
movsl
sbb
aam
mov
mov
aad
das
push
adc
fbld
cmp
jmp
ja
dec
lds
push
push
imul
mov
pop
sbb
leave
insl
jecxz
test
shlb
mov
inc
mov
pop
or
mov
jbe
daa
sub
adc
dec
sarl
into
fcmovnb
sbb
nop
fstpt
cmpsb
lods
movsl
outsl
fwait
jnp
xor
in
mov
jne
cmpsb
lds
cwtl
mov
jno
in
jp
pop
int
push
dec
repz
rol
push
xchg
sarb
add
aas
mov
adc
dec
push
pop
pusha
push
sbb
sub
add
push
mov
cltd
fwait
lret
cltd
aas
sbb
cmp
push
in
fdivl
cltd
fiadds
push
pushf
cwtl
mov
xchg
dec
pusha
inc
ss
andl
jns
out
mov
lahf
xor
add
mov
je
jmp
xor
fcmove
mov
jg
frstor
andb
pop
or
out
fwait
inc
js
ficompl
lret
sub
mov
push
pop
dec
mov
add
inc
push
and
mov
push
push
dec
xor
mov
cmpsb
xor
push
les
push
adc
fiadds
test
mov
lret
xchg
mov
pop
test
outsb
jecxz
mov
cmp
rcll
pop
or
cmp
das
inc
gs
mov
cmpl
test
adc
adc
outsl
pop
sbb
lcall
rcll
outsl
xlat
xor
pushf
adc
mov
pop
leave
fsubl
jo
mov
and
jecxz
repnz
mov
xor
cmc
jo
insl
sbb
mov
call
cmc
movsl
clc
fstpl
xor
shlb
mov
xchg
ret
sbb
push
mov
rcrb
adc
out
sub
xor
lock
mov
in
lret
cs
xchg
mov
ja
mov
cmpl
ljmp
lcall
sub
cmp
mov
inc
mov
mov
out
lods
mov
jnp
xchg
ret
push
imul
out
cs
add
xchg
out
fwait
enter
movsb
cmp
aas
nop
xchg
loopne
sbb
test
je
scas
xchg
push
adc
pop
icebp
pop
xchg
adc
xor
mov
xor
fidivrs
insl
jns
sahf
call
or
sub
sbb
scas
dec
in
mov
mov
movsl
fistl
ja
inc
mull
cli
movsb
jle
int3
mov
jl
xor
repz
repnz
stos
ja
mov
sub
sub
push
push
jmp
push
dec
bound
pop
movsb
dec
aad
inc
mov
add
add
outsl
pop
shlb
mov
xchg
xorl
mov
mov
mov
mov
loopne
imul
mov
cmp
jecxz
jne
add
inc
and
cmp
xchg
pop
in
xor
and
sub
mov
or
loopne
jmp
cli
and
cmp
aaa
pop
jnp
pop
push
mov
loope
inc
hlt
pop
pop
jge
or
mov
loope
lock
inc
xchg
fimuls
mov
pop
mov
movsl
mov
xchg
outsl
fldl
pusha
mov
shll
rorb
or
mov
call
test
push
cltd
add
mov
repnz
lret
jge
aad
lods
mov
jo
or
icebp
xchg
sub
jl
inc
fldl
test
lods
sub
xchg
xchg
mov
rcll
mov
outsb
xorl
push
out
loope
gs
sbb
pop
bound
insl
xor
push
stc
lds
adc
xchg
and
cwtl
gs
hlt
outsl
std
push
jne
pop
push
in
xor
dec
dec
inc
sbb
pop
enter
jp
imul
aad
mov
inc
mov
in
shrb
pushf
jns
daa
jg
adc
cwtl
push
lcall
sbb
jg
jmp
pop
gs
fs
aam
out
cmp
or
push
and
in
lods
pop
lret
mov
jno
cltd
shrb
mov
dec
mov
jb
js
mov
jmp
adc
xor
icebp
jg
sbb
lds
xlat
mov
push
inc
aam
mov
lods
inc
adc
data16
sbb
push
push
jl
sbb
arpl
loopne
ror
cmpsl
rcr
cmc
sbb
mov
xor
insl
cmp
loope
scas
and
jno
clc
out
jl
pop
dec
mov
js
and
cmp
push
mov
int
jo
mov
sbb
mov
push
and
push
jecxz
mov
jp
loope
iret
mov
cmp
aam
cmp
cmp
cmp
jne
mov
cmp
add
lods
pop
out
leave
fdivr
insl
push
push
ljmp
and
iret
cld
mov
in
test
jb
aaa
sar
lret
sub
addr16
addr16
jmp
test
adc
sub
sbb
out
dec
call
mov
pop
cmc
pop
sahf
lret
sbb
inc
sbb
jnp
and
or
sbb
xchg
pop
xchg
sbb
push
fidivrs
push
xor
out
sbb
ljmp
cmc
push
mov
inc
ret
jbe
cmp
cltd
into
lahf
mov
fsubrs
pop
jnp
clc
and
jge
xchg
xlat
mov
mov
cmp
xchg
dec
in
push
repnz
mov
inc
jg
jl
test
cmp
pushf
dec
lock
push
bound
adc
cmp
mov
push
pusha
jns
mov
pushf
pop
scas
insl
aas
es
dec
test
imul
into
xchg
jno
jle
and
push
lret
cmp
pushf
orl
movsl
mov
out
loopne
push
pop
stos
xchg
sub
loop
scas
mov
mov
mov
push
adcl
pop
les
int
cmpsb
or
mov
rclb
dec
add
hlt
or
ljmp
fistl
js
sbb
rclb
je
pop
inc
xor
insl
jns
fwait
xchg
imul
repnz
movsb
push
mov
fidivrl
lahf
mov
adc
repz
cmp
inc
jne
mov
ss
jmp
mov
pop
or
xchg
nop
inc
mov
sti
push
andl
xchg
xchg
int3
and
sub
mov
mov
jge
adc
adc
into
inc
dec
in
jl
jno
dec
mulb
sbb
mov
test
xlat
fmul
in
out
movsb
xor
jb
sbb
fnstenv
sub
pop
cmp
mov
aas
sub
rolb
inc
loopne
jne
leave
iret
xor
mov
repz
mov
into
je
pop
inc
int3
inc
xor
pcmpeqd
addr16
test
aas
mov
bound
js
out
jge
fstpl
gs
pop
das
mov
or
lcall
mov
fsubrl
pop
push
pop
test
dec
fisttpll
push
sub
mov
aaa
lods
xor
into
jae
pop
cmc
aas
mov
dec
dec
out
or
out
out
jmp
inc
or
mov
iret
aas
jecxz
in
sbb
sub
or
hlt
ret
dec
sub
notb
int
fdivl
outsb
dec
cmp
jp
pop
int3
ja
xchg
inc
shll
test
lahf
xchg
push
pop
mov
and
inc
in
push
push
rorb
fwait
sbb
sub
cmp
out
cmp
ret
sbb
sbb
clc
lock
xor
aad
cltd
add
popa
cmp
jg
jp
mov
jg
push
xchg
mov
push
insl
out
daa
or
push
sub
out
mov
mov
mov
inc
mov
divb
sbb
jnp
aad
mov
push
mov
sub
enter
sarb
or
mov
imul
shll
inc
test
mov
cmp
xor
sub
mov
les
fbstp
xchg
mov
loope
loope
cmp
ljmp
test
xlat
adc
adc
add
fisttpl
adc
sbb
or
fcom
ret
push
out
cli
mull
out
outsl
notl
cmpsb
xchg
testl
icebp
add
insl
sub
mov
xchg
int3
or
in
mov
imul
fsts
inc
repz
sarl
sahf
packuswb
sub
or
ljmp
cmpsb
jne
jl
adc
in
addr16
jae
xchg
outsl
mov
sbb
jb
std
jbe
adc
mov
or
je
push
dec
or
jne
aaa
or
add
xchg
cld
dec
lret
in
jnp
fwait
xor
cltd
xchg
mov
ret
mov
and
dec
pusha
stos
in
mov
dec
shlb
inc
jns
xor
push
fsubs
cld
cmp
xchg
inc
cmp
push
mov
test
movsb
insl
cwtl
jmp
pusha
push
jns
stos
cmp
push
adc
xor
je
push
xor
jle
cltd
pushf
movb
lds
mov
push
xorb
xor
insl
push
adc
andb
sbb
push
jg
lcall
add
fwait
mov
sbb
pop
xchg
mov
dec
push
mov
pop
and
xor
xor
fimuls
add
mov
inc
addr16
in
mov
cli
dec
scas
push
bound
insl
cmp
mov
into
jmp
jbe
sbb
mov
lahf
out
jle
std
xchg
dec
mov
fbld
fsubl
or
pushf
in
leave
loope
mov
ret
xchg
inc
loop
fdivrl
ljmp
rcll
xor
fisubrl
mov
stos
cmp
lahf
xor
mov
xchg
dec
fcoms
ret
in
lods
sub
test
mov
pusha
add
mov
pop
movsl
flds
dec
jae
in
cmp
jg
mov
sub
mov
pop
mov
jmp
stos
fs
mov
add
jne
pop
sub
cmp
outsl
es
dec
sub
pop
ret
cmpsb
stc
mov
jl
ds
sub
dec
jns
scas
xor
adc
jbe
xor
jmp
test
sbb
lods
adc
and
add
ss
in
mov
sub
xchg
movsb
push
mov
mov
jno
push
adcl
rol
scas
add
stos
es
add
xor
mov
xchg
push
xchg
ret
mov
inc
in
lahf
test
mov
ss
sub
jae
pop
mov
push
test
add
push
outsb
fildl
adc
dec
enter
addr16
jne
js
loopne
jae
mov
and
cmp
xor
mov
hlt
or
in
sbb
ja
sbb
inc
jl
mov
icebp
cld
xor
les
xchg
repnz
shl
orb
aad
aam
inc
insl
jge
mov
dec
inc
adc
into
mov
jge
xchg
and
lds
inc
and
fisubl
xchg
or
outsb
pop
pusha
in
data16
in
call
inc
das
enter
rcr
mov
in
test
sub
pop
rol
fmulp
mov
sahf
jbe
loopne
fmuls
xchg
insl
inc
cmp
adc
push
xorb
mov
push
sbb
aam
jnp
cltd
inc
cmp
lahf
inc
addr16
and
jns
or
clc
sub
out
sbb
fiadds
shll
add
pop
adc
loope
inc
xchg
dec
insl
sbb
jmp
xchg
push
mov
aaa
scas
call
movl
inc
adc
cmp
sbb
mov
fdivs
jbe
inc
sbbl
aam
subb
xchg
push
sbb
iret
imul
jle
dec
inc
out
pop
shlb
pop
push
into
mov
in
call
sarl
dec
jnp
shrb
sub
lret
mov
xchg
pop
jae
mov
pop
pop
lcall
icebp
in
ljmp
aaa
fisttpll
jg
sub
push
bound
ljmp
mov
fisttpl
shr
in
push
movsb
arpl
dec
push
rcrb
dec
push
adc
sbb
in
movsb
pop
insb
jmp
stos
mov
movsb
mov
dec
sub
enter
shl
or
mov
mov
sbb
sub
sbb
idiv
fistpll
jo
push
and
xchg
add
xchg
shll
cmp
pop
xchg
pop
jg
or
push
dec
mov
iret
xor
xchg
inc
lock
add
outsl
push
cmp
cltd
push
inc
lods
ja
test
push
xor
xlat
or
mov
lea
push
xchg
pusha
ds
xor
cmp
pop
sbbl
xor
cmp
xor
push
dec
sbb
mov
pop
shrb
mov
orl
cs
outsb
pop
sbb
adc
and
sub
insl
popf
pushl
jg
loopne
mov
lret
inc
pushf
add
cmp
cmp
cmp
push
fistps
dec
mov
scas
pop
popa
xchg
je
lahf
cltd
inc
arpl
js
popf
dec
mov
jmp
adc
mov
dec
xchg
clc
psllw
sbb
ficoml
test
mov
push
insb
repz
sub
mov
adc
adc
repz
loop
in
jno
mov
push
imul
mov
add
mov
daa
pop
cmp
jecxz
xor
shrb
rolb
je
inc
add
pop
dec
js
lret
leave
adc
leave
adc
std
pop
mov
xchg
adc
jbe
jbe
gs
faddl
sub
inc
jno
pop
mov
and
ss
pop
mov
and
cmpsl
sub
push
aas
idivl
sbb
and
rolb
fcompl
or
in
cwtl
das
mov
dec
loopne
jbe
dec
jno
mov
sahf
inc
adc
fcmovbe
sbb
or
adc
jbe
dec
or
push
pushf
dec
into
loop
cmpsl
push
push
in
lahf
mov
dec
cli
rcrl
and
cltd
dec
cltd
ficompl
cld
insl
cmpsb
test
push
cmc
xor
push
icebp
fdivrp
adc
rcll
movsl
fildl
mov
daa
dec
pop
mov
fdivr
jns
dec
pop
dec
cmp
push
lock
mov
cmpsb
mov
push
mov
xchg
lret
jecxz
cmp
cs
xor
mov
xor
push
dec
cli
xor
leave
xchg
mov
mov
rcl
cmp
out
fsubl
and
loopne
xchg
cmp
jbe
out
outsb
lcall
fdivl
fcoml
repz
xor
mov
mov
jno
jle
cmpsl
lds
cld
inc
xor
push
mov
and
icebp
mov
stos
inc
fistl
and
cmc
add
je
addb
jl
jge
inc
push
push
fistps
test
test
mov
sbb
jo
inc
test
mov
fs
cmp
sub
mov
imul
lret
repz
mov
mov
aas
jnp
notb
out
popa
xor
mov
xlat
mov
shr
lret
call
jle
mov
push
xchg
jne
push
and
test
es
jp
inc
mov
pop
imul
mov
pop
pop
sub
bound
std
mov
cmp
shrb
xchg
xor
lods
negl
out
nop
out
movsl
cmc
out
shll
or
mov
sub
dec
ja
push
je
arpl
and
xor
bound
adc
adc
pop
sbb
adc
lcall
or
jns
sub
adc
pop
aas
mov
icebp
inc
rcrl
dec
ss
or
lods
lds
mov
mov
jge
pop
outsb
andl
icebp
inc
sbb
xchg
jmp
mov
mov
add
stc
pop
in
ds
fistpl
iret
xor
mov
out
es
xchg
add
add
out
cmpsl
test
shr
addr16
lea
mov
test
shrl
frstor
lods
xor
pop
popa
hlt
addb
jo
pop
xchg
mov
pop
push
xor
out
mov
inc
mov
aas
jmp
pop
push
inc
dec
jecxz
aaa
sbb
sub
mov
and
sti
fldl
scas
arpl
and
sahf
and
mov
sti
jbe
mov
pop
sti
or
xor
fimuls
loopne
sbb
push
int3
idivl
pusha
scas
jle
aas
faddl
inc
and
dec
sbb
ror
mov
push
cmp
sub
push
add
push
adc
cmp
jne
xchg
sub
adc
and
xchg
lcall
cmp
jne
push
jb
xor
push
fcoml
jle
mov
inc
sti
lea
loop
in
push
mov
jno
add
pop
in
jmp
mov
xor
jae
mov
adc
sbb
sbb
inc
ss
mov
fmull
add
jecxz
fwait
loop
idivb
push
ss
xor
mov
mov
popa
or
cmp
jl
imul
mov
outsl
mov
or
iret
mov
out
adc
inc
out
pop
fwait
test
iret
jbe
xchg
icebp
rcrb
xchg
inc
xor
nop
movsb
popa
aad
xchg
rolb
add
int3
sbb
cmp
dec
lahf
mov
jecxz
imul
scas
lods
insl
sbb
dec
cli
jl
orl
daa
loopne
sbb
data16
int
adcl
or
cmp
test
ljmp
sbb
jl
sti
mov
loop
mov
lahf
cmp
negl
adc
dec
adc
orb
cwtl
fwait
push
fs
pop
pusha
dec
adcl
sub
push
sahf
xchg
out
pop
sub
movsb
mov
mov
nop
addr16
cmpsb
xor
repnz
xor
jmp
push
jg
scas
outsb
xchg
mov
push
hlt
rorl
loope
jg
fwait
cmp
xchg
sbb
cmp
sti
iret
mov
adc
push
es
das
push
jno
pusha
adc
mov
movsb
mov
mov
fisubrs
jmp
stos
rcrb
push
stos
mov
jl
push
aas
push
nop
inc
sub
lret
sub
out
in
push
rol
fmuls
cmpl
fwait
add
sbb
in
movsl
std
sub
pop
dec
sbb
pop
mov
adc
push
rol
outsl
lods
xor
or
pop
enter
inc
mov
xchg
inc
and
sbb
rcll
negb
adc
add
jne
and
cmp
mov
rorb
insl
negl
mov
loope
pop
xor
shll
lods
cs
mov
xlat
in
cmp
inc
push
mov
jb
test
or
add
lahf
add
xchg
xchg
movl
test
xchg
iret
je
mov
pop
movsb
ror
gs
addb
loop
decl
daa
insb
out
adc
xchg
pop
movsb
xchg
or
inc
rcrb
mov
push
pop
lcall
cwtl
mov
aad
push
inc
pop
push
icebp
icebp
xchg
cmpsb
mov
adcl
scas
dec
shl
leave
inc
popa
cmp
mov
pushf
loopne
iret
ljmp
mov
adc
ljmp
jb
mov
sti
fisubs
cmc
cmpsb
or
and
add
inc
or
inc
loope
mov
sbb
cmp
in
std
push
scas
cld
add
adc
repnz
addr16
adcl
inc
dec
adc
pop
mov
pushl
aad
je
out
fiaddl
dec
or
clc
push
rol
sbb
pop
push
mov
mov
xchg
js
dec
bound
pop
push
mov
jns
sti
in
inc
rorb
push
lods
cmc
test
cmp
and
sub
cmc
sub
add
out
cmp
int
lahf
fs
ficomps
lcall
popf
and
push
mov
xchg
push
stc
xchg
add
mov
outsl
sub
push
push
sub
int3
hlt
inc
mov
subl
cmc
pop
lea
add
mov
add
lahf
lahf
icebp
arpl
xchg
sbb
sub
cmp
fisubrl
and
ds
fnstcw
push
lret
push
adc
xchg
or
sub
jge
xchg
sti
and
mov
xor
mov
xchg
cmpsb
jg
scas
hlt
lds
sub
dec
sahf
das
sahf
imul
or
clc
push
push
je
xorb
scas
mov
mov
hlt
xchg
int
push
rcll
push
popa
js
mov
pusha
mov
mov
aad
inc
repz
sub
push
call
dec
push
cmc
hlt
inc
fcompl
push
and
nop
stos
jp
inc
hlt
xchg
or
xchg
js
mov
or
in
cmc
inc
pop
and
mov
into
mov
dec
push
adc
inc
faddl
dec
test
rorl
jg
jo
and
out
dec
mov
cmpsl
out
mov
out
xchg
insl
xchg
adc
mov
popf
andb
mov
loope
and
es
fbstp
and
insl
test
lods
xchg
clc
mov
popa
in
imul
sub
push
paddsb
pop
xchg
inc
dec
pop
mov
sbb
pop
sub
cmp
dec
je
jbe
lds
mov
jecxz
pusha
les
loopne
add
jmp
inc
in
rorl
stos
in
push
pop
scas
outsl
outsl
push
movups
mov
and
push
dec
ret
dec
add
or
xchg
rolb
jl
push
mov
cmpsl
ret
addr16
movsb
movb
js
popf
imul
fistl
pop
dec
xchg
outsl
pop
roll
ret
ss
enter
pop
mov
add
sbb
pop
imul
rol
fs
fisubrs
xlat
jo
and
dec
call
xchg
and
mov
dec
mov
inc
jo
fldt
lcall
loope
jle
out
xchg
push
mov
call
jl
pop
xchg
mov
lcall
bound
dec
nop
mov
pushf
stos
fnstsw
fildl
jmp
scas
jnp
lock
and
repz
lcall
cmp
mov
cmp
sub
lods
or
mov
dec
pop
xchg
mov
add
std
jl
mov
xor
push
mov
jmp
dec
pop
lods
jle
add
call
add
inc
mov
cwtl
add
cmp
pop
and
in
sbb
aaa
pop
das
ja
test
inc
sbb
pop
adc
jp
fidivrl
push
inc
out
sbb
sub
adc
jge
imul
pop
icebp
out
sbb
xor
addr16
or
ret
mov
push
jae
and
push
sub
js
mov
mov
ja
pusha
aam
pop
mov
clc
pop
sahf
push
test
jns
lock
pop
mov
jns
test
adc
lcall
lods
movsb
mov
xor
push
jns
arpl
stos
mov
es
arpl
scas
add
xchg
insl
push
mov
add
jge
cwtl
sbbb
stc
lods
pop
fcoms
xor
rcl
rcr
movsl
add
jns
mov
cmpsl
sbb
inc
xchg
jb
js
sbb
push
lret
mov
ror
inc
pushl
call
xor
loope
add
insb
dec
pop
fistpll
pop
xchg
ret
push
incl
mov
insl
daa
pusha
cmp
rorb
out
pop
sub
push
mov
lods
pop
push
cld
adc
in
push
repnz
pop
pop
mov
test
cmp
jp
fsubrs
sbb
outsb
out
cld
sbb
push
xorb
std
xchg
mov
std
add
xor
scas
mov
xchg
shll
out
lock
inc
arpl
dec
outsb
add
xorb
xor
out
cmp
test
loope
inc
int
out
imul
repnz
ljmp
jmp
inc
hlt
aam
mov
fstpl
adc
or
hlt
mov
mov
xor
test
andl
sub
data16
mov
sbb
mov
cmp
add
and
mov
into
dec
lahf
inc
ss
lcall
pop
sub
sub
invd
out
filds
out
add
and
call
add
mov
adc
mov
pushl
movsb
inc
je
add
enter
fstps
dec
fwait
lret
push
xchg
ds
sar
shrb
cmpsl
test
shrl
xor
or
jbe
mov
arpl
mov
cmpsb
sub
rorl
mov
outsl
add
mov
pop
push
dec
sti
aad
sbb
stos
loop
rorl
aam
jb
mov
cmpb
mov
test
mov
rorb
add
lods
in
imul
cmc
lcall
out
xchg
rolb
repz
adc
or
test
mov
call
lods
leave
cwtl
and
loop
movsb
and
dec
xor
inc
add
xor
and
mov
adc
into
jg
jl
je
cmpsl
jmp
jmp
dec
push
out
or
jae
mov
adc
scas
enter
loop
push
xchg
mov
imul
push
jmp
jb
rol
cmc
ljmp
repz
add
enter
les
or
xchg
fnstenv
ficompl
push
loope
and
adc
xchg
in
shll
ret
in
pop
cld
gs
cli
sti
inc
in
push
mov
lea
jno
fisubl
sbb
out
sub
lahf
insb
inc
cmp
sub
les
int
mov
xchg
int3
imul
call
out
adc
pop
mov
push
inc
nop
daa
lods
movsl
jp
pop
pop
inc
add
pop
ret
fwait
lea
and
stos
jns
scas
add
xor
mov
jbe
rorl
add
mov
adc
inc
jnp
push
cmpsb
or
into
jae
jge
ja
in
clc
push
rcl
or
or
rcrl
dec
aam
mov
xorb
pop
jne
and
mov
mov
push
stos
ret
adc
sbb
dec
push
sbb
int
pop
ds
cmp
inc
jge
mov
loopne
dec
popf
push
xor
xor
mov
adc
inc
push
scas
mov
mov
sbb
psadbw
out
mov
cs
xchg
mov
cmc
mov
inc
popa
adc
scas
inc
lods
ss
and
lret
jl
xchg
loope
negb
jne
jns
inc
sub
pop
cmpsl
inc
sbb
xchg
mov
movsb
rorl
xchg
sub
test
push
jecxz
ja
cmp
push
dec
sbb
cmp
andb
mov
test
ror
sub
xlat
inc
cwtl
push
xchg
cli
dec
and
or
xor
ds
popa
insl
imul
push
add
push
testb
js
jmp
les
in
sarl
movsl
stos
shlb
xor
jp
xchg
mov
je
loope
inc
dec
xchg
jne
and
arpl
push
push
test
xor
jmp
mov
loope
shr
or
push
ljmp
inc
scas
nop
pushf
pop
enter
adc
push
es
xor
lcall
jne
into
dec
repz
pop
popa
andl
loopne
mov
jecxz
rcll
ret
test
in
pop
jnp
shr
cmp
je
sbb
push
or
shlb
lcall
ss
add
adc
mov
mov
cmp
add
call
push
jmp
sbb
push
shlb
shlb
xchg
push
mov
push
std
jge
bound
call
cmp
jg
sbb
jne
jge
jb
mov
push
rorb
cmp
stc
jmp
add
mull
pop
pusha
in
pusha
jns
mov
mov
and
sub
push
adc
fdivrl
or
pusha
into
mov
xor
sub
nop
or
cs
inc
mov
cbtw
inc
andb
call
imul
in
mov
mov
mov
fucomi
decb
xchg
sub
gs
push
sbb
cmp
lret
mov
xor
push
jmp
sub
mov
pop
inc
dec
or
in
movsb
sarl
sti
dec
lea
inc
es
mov
insb
mov
jae
dec
imul
adc
jns
jne
mov
into
shl
adc
push
push
in
mov
and
test
mov
loop
push
xchg
push
mov
or
inc
popa
dec
imul
stos
sbb
rcrl
mov
cmc
mov
or
rorb
shll
pop
repnz
inc
scas
fcomip
push
jns
out
dec
sbbl
xlat
fmuls
push
jp
lret
dec
sahf
xchg
mov
sub
addr16
dec
pop
mov
fsubs
pop
adc
insb
aad
or
js
mov
popa
sbb
inc
leave
jge
xchg
dec
pushf
push
mov
add
fstl
repz
int
loope
push
insb
je
out
mov
sub
add
pop
and
sahf
inc
lods
push
loope
adcl
fnstenv
xor
inc
pusha
mov
mov
outsb
mov
mov
mov
fcomip
mov
sub
xchg
jno
int
sbb
mov
inc
jns
pop
xor
or
and
sub
insb
sbb
add
daa
mov
pop
mov
in
sahf
outsl
cmpsl
inc
outsb
aam
mov
js
xlat
push
repnz
icebp
push
aas
adc
add
ret
frstor
addb
movsb
es
fbstp
xchg
pop
ficompl
xchg
sub
xchg
data16
ret
dec
add
xor
mov
dec
sbb
leave
repnz
jmp
out
dec
mov
pop
rcrl
push
ja
xchg
add
dec
lcall
sub
xchg
dec
test
lret
je
add
dec
movsb
or
xchg
insb
prefetcht0
out
fists
les
and
pusha
and
sbbb
std
mov
orb
lret
mov
aaa
pop
inc
sub
xor
stos
gs
fistps
push
imul
cmp
jo
mov
addr16
pop
lods
arpl
push
mov
lret
mov
xor
sti
sbb
in
imul
jl
pop
cwtl
dec
sbb
cltd
sti
into
jp
xchg
subl
cmp
or
and
aas
orl
sbb
add
inc
mov
flds
mov
jne
cmp
das
or
push
mov
subl
inc
mov
sarl
or
scas
xor
xor
push
xlat
adc
push
movsb
or
cltd
inc
push
add
lret
push
in
add
ret
scas
out
sub
dec
aas
movhlps
std
or
dec
xor
out
loop
or
fs
mov
jae
jg
push
or
push
dec
aam
insl
add
jmp
or
out
pop
pop
and
icebp
in
add
in
jo
or
dec
cwtl
xchg
or
movsl
ror
dec
mov
iret
mull
and
adc
mov
stc
stc
addb
ja
movsl
fucomip
lahf
stos
pop
jne
rolb
cs
pop
int
sti
movsb
pop
dec
cmp
ss
mov
inc
stos
or
mov
repnz
jp
adc
les
xor
cmpsl
dec
jg
xchg
or
fs
xchg
dec
fxch
daa
mov
jp
and
adc
dec
arpl
mov
and
mov
cld
mov
int3
xor
sbb
and
pushf
pop
xlat
stc
or
xchg
fcmovb
xchg
les
xchg
inc
cmp
dec
hlt
shrb
pop
pop
push
into
daa
xchg
xor
inc
mov
inc
sub
pop
or
push
cli
jecxz
sbb
das
push
adc
popf
shrl
int
dec
sbb
lods
sub
dec
adc
push
add
out
addr16
daa
adc
std
roll
push
mov
and
inc
je
loope
es
jge
insb
inc
adc
xchg
mov
xor
push
stos
int3
mov
pop
push
rcll
lods
jae
scas
push
jg
or
xchg
sbb
test
adc
mov
cmpsb
loop
cmpsb
cmp
push
popf
ret
loope
testb
mov
mov
sbb
lods
sbb
mov
mov
push
lds
andb
mov
sub
push
mov
movsl
mov
aam
dec
nop
fwait
mov
xor
es
outsb
push
cmp
add
insb
push
in
pop
leave
cmp
cmpsb
mov
sub
jle
jl
xor
pop
sbb
adc
pop
lcall
add
push
jg
int3
pop
lret
pop
test
call
cmp
pop
mov
sarb
mov
jae
inc
push
mov
dec
mov
push
dec
test
xchg
sub
jns
xor
stos
xchg
decb
jne
xchg
lret
push
stos
andb
jl,pn
gs
jecxz
mov
and
lds
aas
cltd
cmpsb
sbb
pop
mov
and
je
push
lret
push
movsl
jl
mov
mov
test
push
aam
mov
cmp
jb
inc
sub
and
fxch
rclb
pop
mov
mov
and
loop
mov
gs
and
jae
sub
ja
xlat
sub
cld
mov
ljmp
lea
mov
push
nop
ds
mov
addr16
adc
add
inc
test
add
out
cmpl
fwait
test
sub
paddq
adc
cld
or
jbe
push
push
pop
and
stc
jg
jle
ret
cld
es
fsubs
sbb
or
popa
cmc
loope
cltd
mov
xchg
lea
ds
scas
or
xchg
or
lds
fsubl
in
fldcw
aaa
test
int
mov
dec
pop
push
jp
inc
pop
inc
repz
arpl
sub
xlat
and
pop
mov
pop
sbb
cmp
sub
sbb
and
lahf
inc
jg
xor
xor
and
test
iret
mov
dec
loop
xor
cld
fnstcw
inc
fisubl
fmuls
das
ljmp
pop
lahf
pop
fxtract
sbb
std
adc
mov
pop
jp
jmp
addb
xchg
adcb
cmp
movsl
and
enter
xor
mov
or
adc
data16
mov
jno
jbe
popf
lcall
movsb
and
sbb
inc
or
enter
adc
push
imul
mov
or
repnz
repz
or
repnz
dec
les
pusha
fisttpll
pop
lods
insb
sub
aas
in
outsl
cli
sbb
dec
sbb
clc
mov
xor
cmp
sbb
pop
mov
or
repnz
or
fiadds
int3
stos
xchg
andb
adc
xchg
add
mov
fstpl
fsts
mov
rolb
xchg
pop
jae
out
sbb
mov
mov
sub
cmc
inc
jmp
add
test
cmp
pop
dec
filds
arpl
or
sub
xor
cmpsb
push
rorl
cmc
in
daa
inc
shrl
push
nop
mov
xor
xchg
push
imull
push
add
and
add
add
inc
cmp
sub
dec
pop
ss
pop
mov
xchg
dec
mov
test
rol
repz
insl
jno
rorb
faddp
mov
adc
test
testl
arpl
pusha
lods
inc
pop
pop
xor
iret
shrl
addr16
adc
das
pushf
rorb
add
test
out
stos
repnz
mov
lcall
xor
insl
fsubrp
xchg
sbb
xchg
les
push
cmp
push
test
mov
pop
daa
inc
xor
clc
and
push
daa
jb
xchg
jl
rcrb
in
xor
mov
sbb
pushf
xor
enter
cli
dec
rol
xor
pop
popa
in
test
test
mov
push
inc
push
out
shl
xchg
stc
mov
mov
sbb
xor
arpl
pop
es
xor
repnz
sbb
or
dec
cmpsl
or
dec
les
mov
pop
add
aad
and
scas
cmp
ja
xlat
add
add
push
notl
dec
imul
sub
leave
lret
adc
sub
and
xorb
bound
cli
ret
je
jl
inc
dec
fucom
jbe
jle
inc
xchg
lods
sbb
cli
xor
add
dec
pusha
lret
lcall
pop
jbe
icebp
push
and
jmp
cmp
es
es
or
sub
dec
addr16
lea
call
sub
jp
pop
mov
dec
in
xor
cmpsl
into
push
and
fldenv
aad
pop
movsb
add
cmpsb
cmp
ret
sarb
mov
dec
pop
mov
sbb
int3
imulb
outsl
cmpsl
jecxz
ss
push
mov
je
dec
lods
std
imul
or
mov
cld
scas
dec
xchg
push
scas
adc
int3
add
movsl
pushf
mov
popa
cmc
xor
mov
jge
outsl
loope
mov
in
and
push
lea
push
inc
inc
push
xor
dec
repz
stos
popa
lds
movsw
loop
or
leave
dec
add
js
je
adc
stos
test
push
fsubp
popf
inc
cmp
mov
jb
or
loop
scas
xchg
inc
in
sub
fstl
fcmovbe
mov
fimuls
xor
ja
cmp
gs
pop
data16
sub
fsts
inc
add
hlt
or
inc
pop
fldt
and
mov
sbb
push
mov
out
xchg
xchg
inc
arpl
iret
pusha
popa
rorb
pop
jns
pop
jmp
mov
sub
pop
stc
mov
push
fmulp
ret
cmp
fcomi
inc
mov
push
mov
stos
lods
sbb
subb
dec
cli
shl
fsts
fld1
cmc
pop
testl
jbe
xor
lods
movsl
mov
inc
xchg
les
inc
out
test
cmp
and
call
pop
cmp
repz
test
and
jecxz
xchg
sub
add
lods
push
xchg
int
cmovnp
pcmpeqw
bound
mov
mov
mov
out
ja
out
movsb
adc
push
sahf
js
or
cs
jg
outsl
packuswb
mov
add
fcoms
add
mov
add
std
fs
push
lahf
jle
lock
fwait
test
xchg
cltd
call
ljmp
dec
add
ljmp
int3
and
fwait
pop
dec
pop
and
push
scas
js
inc
pop
dec
xchg
stc
pcmpeqd
test
sbb
ja
aaa
jg
mov
dec
push
sarb
and
inc
pop
xor
dec
es
push
xchg
and
std
fwait
push
outsl
xchg
sub
pop
pop
cmpsb
ljmp
loopne
mov
imul
movsb
add
fistpl
pop
popf
push
jnp
fmul
loope
push
sub
xchg
int3
add
mov
aas
ds
pop
mov
aam
mov
js
clc
xchg
das
ret
xchg
push
lods
shr
insb
fs
push
lahf
fstpt
out
in
and
cmp
movsb
mov
cmp
jae
jmp
xchg
ja
fwait
in
dec
fwait
mov
aaa
mov
mov
stos
cmp
jmp
cmp
in
mov
arpl
les
mov
jp
mov
mov
xorl
testl
mov
sub
or
movsl
mov
adc
out
imul
repz
adc
add
icebp
and
xchg
loopne
test
in
mov
sbb
push
cs
sbb
mov
inc
pop
sub
pop
sahf
mov
repz
mov
test
mov
test
popa
sub
out
inc
adc
lret
sub
pop
aaa
pop
std
movsl
out
fwait
sub
es
cmp
or
pop
shll
jp
dec
or
inc
dec
mov
sbb
or
negl
mov
pop
add
sbb
adc
cmpsl
iret
hlt
leave
inc
out
and
cli
in
pop
sbb
dec
cwtl
mov
mov
push
mov
sbb
fstps
add
jle
sub
pop
pop
fidivrs
cmpsb
into
mov
sahf
out
lods
outsl
xor
es
jae
incb
stc
fidivs
push
xchg
outsb
cwtl
jbe
shrb
mov
xor
out
push
adcl
sbb
push
shll
jg
mov
repz
int
aas
sub
mov
xor
repz
jnp
cmp
cmp
adc
pop
into
dec
in
test
mov
cmp
ss
je
cmpl
xorb
arpl
popa
jbe
pop
xor
push
sbb
cmp
maskmovq
testl
lds
add
fcoml
test
nop
xor
sub
ds
mov
push
sub
pop
fs
test
sbb
shrb
push
aad
gs
notl
jnp
and
adc
aad
cmp
sahf
sti
jle
cli
and
popa
inc
stos
in
pop
jmp
or
mov
add
idivb
xor
adc
in
mov
cmp
arpl
mov
xor
lods
out
ret
sub
insl
ja
push
and
fs
es
adc
xor
mov
pop
jae
test
add
in
stos
in
or
cmpsb
dec
test
mov
out
popf
or
fnstcw
pop
add
mov
jns
mov
cmp
cmc
jnp
rorl
pop
jmp
and
stc
jnp
adc
mov
lret
in
cmp
push
mov
cltd
pushf
mov
fdivr
insb
lahf
repz
jnp
push
int
sub
xchg
lods
mov
out
into
mov
pop
and
stos
ret
ret
mov
jecxz
inc
pop
inc
jge
out
or
aaa
sbb
enter
mov
sar
fdivl
jecxz
subl
rcll
add
es
les
enter
stos
lods
xchg
in
mov
adc
cltd
cmp
push
mov
pop
pop
testl
push
mov
frstor
push
or
shrb
fadd
outsl
mov
lods
stos
adc
lock
test
shr
jl
pushf
xchg
and
mov
push
lahf
ds
mov
dec
loop
push
sbb
imul
repz
fdiv
push
bnd
adc
mov
stc
xchg
mov
xchg
in
push
mov
in
dec
rolb
add
cmc
addr16
lea
cwtl
addr16
lret
inc
or
test
imul
sbb
test
jp
sar
js
adc
or
iret
jb
mov
mov
enter
out
xchg
jne
pop
fsubrl
div
cld
xor
loope
add
in
push
subl
cmp
hlt
and
fnsave
enter
dec
and
cmpsb
cmpsb
cmpsl
or
ss
aad
inc
inc
insl
and
mov
xlat
fidivrs
or
mov
dec
jnp
sub
fisttps
xchg
sub
cmp
cld
cmp
int3
mov
dec
mov
mov
stc
seta
pusha
jbe
jecxz
imul
in
test
dec
inc
pop
test
loopne
adc
lods
push
mov
and
shlb
imul
lock
ja
cltd
pop
and
and
mov
clc
cmc
lock
int
push
mov
sar
xchg
imul
movb
jge
imul
jb
les
and
push
jmp
jne
insb
mov
sbb
test
cmp
int3
ficoml
mov
xor
jnp
popf
fsubrs
outsb
inc
or
ss
and
sbb
xlat
jno
cwtl
xchg
rorl
ret
jge
pushl
in
mov
daa
inc
inc
add
movb
outsb
lahf
movsb
mov
mov
aam
scas
xor
test
sub
mov
push
aas
jg
xor
ficompl
xor
dec
xchg
mov
cmp
mov
push
inc
lds
jbe
sub
push
cmp
xor
inc
xlat
or
and
ljmp
xchg
push
adc
ja
mov
xor
and
lods
sbb
pop
test
mov
push
enter
movsb
test
mov
stos
mov
pop
mov
jl
push
int3
push
mov
pop
mov
and
cmp
xor
mov
iret
ret
inc
repnz
jecxz
std
pop
and
or
test
fldl
popa
mull
lea
inc
pusha
rolb
imul
loopne
sbb
insl
scas
jge
sub
sbb
inc
imul
cli
dec
hlt
pop
xchg
push
sbb
xlat
adcb
fidivrs
sub
adc
dec
loopne
cmp
cs
test
hlt
or
xor
inc
mov
out
fldenv
push
pop
add
cmpl
lea
cs
rorb
push
push
push
jno
imul
dec
sahf
adcb
jno
loop
push
ficoml
mov
dec
je
adc
sbb
ret
xchg
pop
or
xchg
lea
inc
je
adc
inc
cmp
mov
aad
inc
push
jb
mov
fsts
aam
add
adc
ret
dec
pushf
cmpsb
sub
cmpsb
int
and
pop
call
xor
jle
lods
mov
push
mov
dec
shlb
jne
cmp
cmpsb
jecxz
jb
and
inc
mov
xchg
stos
adc
jno
push
fiadds
repnz
sbb
mov
cs
fstpl
rolb
test
mov
fnstcw
pop
mov
dec
pop
adc
insl
lcall
xlat
sbb
cwtl
movl
mov
pop
cmpsl
mov
cmpsl
cmp
fmull
push
inc
sarl
jmp
pop
pushf
data16
cwtl
insb
cmpsw
adcl
sbb
pop
jbe
xchg
enter
mov
sbb
jae
rolb
loope
mov
incb
and
scas
sub
call
popa
out
pop
adc
cmp
dec
add
sbb
ds
pop
aam
jecxz
inc
out
add
mov
ljmp
push
xchg
pusha
daa
xchg
cmp
add
push
adcb
mov
jnp,pn
loopne
dec
or
push
jno
icebp
xchg
xchg
arpl
cmp
jmp
pop
fwait
sti
xorl
loopne
scas
xor
and
hlt
adc
pop
mov
cmp
or
aad
in
imul
pop
cmc
xchg
dec
inc
adc
mov
shll
jmp
mov
insl
icebp
push
sahf
and
mov
loope
lds
and
int3
out
sarl
cmp
dec
pop
ja
inc
add
inc
imul
cld
sub
ret
mov
dec
int
sub
dec
dec
push
xchg
xchg
mov
push
mov
pop
push
dec
repz
and
mov
pop
dec
into
ret
je
cwtl
out
mov
popf
mul
fdivrl
fs
mov
mov
or
sub
lret
cmovne
sbb
mov
outsl
and
aam
ds
out
loop
out
mov
dec
rcrl
dec
adc
adc
lds
das
jmp
in
je
movsb
scas
lock
ja
aaa
sahf
out
fwait
and
fdivl
sbb
xlat
cmc
lea
rcll
xor
sbb
mov
jle
insb
xor
cmp
mov
es
xor
fildll
push
mov
or
cmp
dec
mov
mov
mov
xchg
imul
push
mov
frstor
mov
xor
push
loop
rorb
adc
js
add
imul
ret
into
mov
and
push
sti
cmp
int
in
aam
pop
sbb
and
jecxz
xor
sub
adc
inc
pop
adc
sub
pslld
in
adc
ljmp
add
insb
addr16
push
fiadds
ret
pop
out
pand
mov
int
div
pop
sub
repnz
arpl
nop
add
mov
inc
dec
popf
sbb
rol
mov
xor
mov
adc
stos
push
stos
sub
or
xor
mov
and
push
test
lds
dec
stos
addr16
jg
jne
dec
lret
pop
je
add
add
xor
out
inc
rcrb
test
mov
push
cmpsb
xor
jp
xor
sahf
fisubrl
or
pop
std
mov
xchg
xchg
mov
jg
sbb
cs
and
add
jl
icebp
stos
add
cmp
inc
dec
pop
lahf
xchg
jno
cs
adc
int
pop
lret
inc
fdivrs
cmp
inc
jnp
mov
in
mov
jmp
enter
xchg
lret
lods
or
push
call
push
flds
fwait
addl
imul
imul
xor
mov
in
aam
cmp
push
add
mov
imul
jnp
fwait
xchg
pop
lcall
sub
addr16
cmp
adc
push
lea
mov
mov
addr16
in
lods
insl
movsb
jecxz
pop
pop
cmp
test
pop
push
push
inc
cmc
bound
out
sub
clc
clc
cmpsb
mov
loope
xchg
jmp
mov
add
dec
imul
icebp
movsl
add
mov
adc
mov
sub
je
mov
cmp
mov
mov
adc
sbb
incl
in
nop
jge
pop
push
imul
hlt
mov
lock
jg
bound
pop
mov
sbb
sbb
pop
sarl
and
outsl
iret
or
lock
dec
vmovups
fsubp
rcl
inc
add
push
xor
ss
dec
out
leave
sub
jge
mov
imul
ss
stos
adc
pop
pop
nop
lods
mov
out
pop
fdiv
push
sbbl
inc
jae
push
in
stc
pop
js
mov
stc
xchg
dec
pusha
add
jno
in
sbb
add
or
leave
jg
fucom
dec
push
mov
out
mov
and
push
or
leave
fisttpl
out
xor
rcl
int3
popa
inc
cmp
inc
xor
inc
in
jnp
icebp
sub
out
leave
loop
mov
inc
mov
call
js
sbb
cmp
xchg
or
lret
inc
xchg
orb
incl
push
push
fwait
lahf
dec
or
inc
pop
dec
lcall
aas
test
jns
imull
fucomi
jp
mov
inc
imul
aam
repnz
and
loopne
xor
addr16
rcll
daa
je
adc
dec
xor
es
stos
push
popa
lea
jo
int3
push
inc
or
xchg
repnz
mov
pop
out
sub
xor
push
xor
stos
or
imul
hlt
loop
push
das
enter
jae
mov
push
iret
shr
xchg
out
sub
lahf
xor
fsubl
loopne
cmp
xchg
mov
push
subb
lea
sbb
xchg
pusha
cmp
scas
sub
fmull
lock
mov
test
fcoml
filds
mov
lcall
fcmovnb
jp
pusha
loopne
inc
push
sub
stos
or
shll
sbb
leave
pop
mov
insb
sub
jo
or
aad
int
xor
add
dec
push
sbb
popa
dec
outsb
and
pop
test
aaa
rorb
mov
rol
bound
scas
cld
fstps
jl
popa
push
xor
or
dec
xchg
out
stos
mov
pop
test
jns
js
sti
mov
cmp
mov
nop
outsb
add
cmp
lcall
ja
or
mov
lock
xchg
in
shl
andb
insl
iret
xor
sarb
dec
jge
clc
jae
push
and
dec
push
adc
test
push
mov
cmpb
push
test
in
rol
sahf
pop
mov
jmp
cwtl
stc
jne
dec
nop
int3
sbb
adc
jno
push
jnp
outsb
sbb
out
rclb
xchg
fldl
lea
inc
popf
jne
nop
aam
pop
push
mov
xchg
jae
repz
dec
and
jne
dec
ja
adc
jge
lods
loop
and
int
out
xor
jne
ds
js
pop
dec
xor
sbb
adc
lea
in
mov
sahf
fwait
cld
mov
sub
or
dec
adc
xchg
les
push
xchg
add
sbb
mov
clc
xor
sarl
jns
and
push
inc
xchg
mov
lahf
xchg
pusha
xchg
mov
ret
test
fisubs
inc
xchg
call
outsb
dec
mov
sbb
jns
mov
push
sub
mov
or
cmp
cmc
and
or
fisubrl
ds
xchg
addr16
dec
sbb
xchg
xchg
imul
pop
or
mov
and
sbb
dec
xchg
sub
out
jno
push
cmpsb
and
push
jg
inc
int3
and
loopne
rcll
adc
mov
dec
shrb
pop
inc
bnd
jecxz
pop
inc
rcrb
dec
xorb
mov
adc
gs
cmp
xchg
outsb
pop
js
push
cld
cmp
sub
bound
or
les
inc
shll
or
inc
adc
jmp
aas
daa
xlat
scas
inc
sbb
cmp
imul
push
lret
push
and
jo
in
adc
out
unpcklps
rcr
jl
repnz
jb
jge
popa
push
lock
mov
ss
loopne
aad
push
test
rorl
repnz
fs
int
push
mov
adc
push
sub
mov
test
outsl
mov
mov
in
push
mov
sbb
das
dec
dec
add
flds
aaa
pop
push
jno
pusha
or
push
daa
inc
mov
mov
fmull
aaa
daa
mov
or
inc
lods
mov
add
xchg
mov
inc
lods
push
ljmp
add
cmp
aaa
test
mov
xchg
das
sbb
mov
push
or
jmp
push
cmp
mov
negl
push
rclb
cltd
sbb
rcrl
mov
sti
sub
lock
xorb
and
mov
push
cmp
fiaddl
lcall
add
outsl
mov
scas
jno
xchg
cli
and
ret
pop
adc
pop
icebp
inc
xchg
cmp
jge
pop
and
xlat
pop
insb
adc
outsl
ds
mov
out
mov
adc
xor
outsb
jmp
jns
rolb
mov
xor
pop
leave
ret
xchg
nop
hlt
fnstsw
iret
addr16
ja
scas
iret
ficompl
cmpsl
notb
into
aas
sbb
pop
pushf
cmp
add
mov
pushf
movzwl
cmpsl
xor
cmpsb
ljmp
mov
fistpll
nop
xor
pop
mov
push
sbb
jecxz
xchg
pusha
fimuls
mov
inc
movsb
mov
push
outsb
lods
les
pop
or
cmp
mov
push
mov
jge
rol
push
and
popf
dec
cltd
jns
add
out
popa
test
jg
jo
ja
in
dec
shll
popa
sbb
mov
push
ss
in
push
int
aam
insb
pop
inc
clc
mul
dec
enter
mov
ficomps
aaa
stos
lea
pop
sarb
popf
aas
sbb
lret
mov
dec
jge
mov
add
fadds
and
add
arpl
xor
int3
mov
push
fld
jo
mov
xor
aas
pop
mov
mov
ds
shll
imul
xchg
shll
adc
mov
stos
stos
lods
stos
dec
clc
test
std
mov
sub
sar
cmp
decb
add
test
adc
cmpsl
cmp
dec
pop
pop
repnz
fisubrs
test
inc
pop
push
mov
xor
xor
lds
jp
je
add
inc
xor
mov
sti
or
fnstcw
ljmp
lahf
xchg
mov
cmpb
sub
push
cwtl
sub
xchg
sbb
leave
jle
sbb
in
aaa
mov
dec
ja
lods
outsl
or
std
sub
cmp
or
ljmp
aaa
lods
dec
repnz
sub
lods
push
and
je
mov
dec
repnz
xchg
fs
test
stc
test
arpl
pusha
sbb
xchg
xor
jp
fmull
mov
inc
call
adc
dec
add
sub
in
cmp
ret
pop
xor
test
mov
jl
stos
mul
fcmovnb
jno
cmp
loope
bound
mov
xchg
fcom
mov
add
dec
loop
push
in
stc
pop
or
pop
rcr
bound
fnsave
pop
xlat
pop
jp
add
in
fsincos
test
push
jbe
popl
and
mov
jbe
sti
aaa
int3
xchg
sbb
gs
cmp
mov
ret
jbe
ret
dec
jbe
adc
pop
lret
dec
xchg
xor
sub
ss
add
cmovs
lahf
js
mov
jmp
jl
icebp
fidivrl
or
mov
mov
lock
dec
mov
lods
mov
repnz
jae
jge
add
lods
push
push
mov
rorb
fildl
negb
push
sbb
fidivl
add
and
test
data16
pusha
in
shlb
daa
cmp
inc
sbb
call
cli
mov
std
pop
std
add
push
xor
js
enter
cmp
sub
jbe
sahf
lret
movsl
jne
xchg
mov
les
jbe
xor
xchg
push
xchg
xor
shrb
or
ja
add
or
cmova
push
xchg
push
stos
push
data16
push
rcll
inc
cmp
pop
sub
cwtl
jnp
out
sbb
cwtl
es
push
test
xor
xchg
xor
and
out
push
scas
push
mov
setg
clc
dec
jne
shl
mov
sahf
aaa
fbld
iret
mov
movsl
and
repz
mov
test
cmp
mov
jbe
and
dec
in
js
iret
pop
sub
sub
jp
gs
adc
jecxz
cmp
je
sti
mov
nop
clc
sti
das
mov
jae
xor
pop
push
lcall
dec
mov
sbb
xorb
mov
jns
cmp
lahf
mov
xchg
sbb
push
andb
push
cltd
mov
xlat
dec
mov
mov
mov
sbbb
push
cmpsl
xor
dec
daa
jl
sub
push
add
rcl
hlt
inc
xchg
mov
xor
sbb
xor
and
mov
and
rorb
push
jne
rcl
cmp
imul
in
add
push
test
adc
testl
or
in
jb
cld
mov
mov
dec
push
pop
and
sbb
iret
cli
push
mov
repz
cmp
in
sub
cltd
iret
inc
lret
cwtl
test
lods
repnz
pop
aaa
sbb
flds
clc
inc
ljmp
xchg
inc
add
js
loope
fwait
dec
or
inc
jl
test
out
loop
fdivs
mov
xlat
and
push
fistpll
imul
cmp
int3
mov
add
pop
push
and
dec
inc
insb
pop
ljmp
les
cmp
call
lcall
and
sahf
dec
sbb
sub
xor
push
fs
or
dec
cwtl
jno
push
jbe
push
mov
push
clc
aad
sar
add
ret
fstpl
pusha
sub
outsl
fidivrl
mov
pop
fsubl
in
add
mov
dec
in
insl
ret
cmc
inc
sub
mov
dec
add
xchg
cmc
fs
inc
hlt
sbb
ja
xor
loop
stc
sub
mov
call
push
jecxz
sub
add
lcall
daa
popa
mov
sub
or
mov
out
mov
xor
cmc
or
iret
sti
mov
adc
push
ret
dec
jg
add
aam
and
jo
add
aam
mov
and
push
lret
jge
mov
loop
mov
push
ret
fidivl
push
ret
stc
adc
or
hlt
pop
inc
dec
push
arpl
flds
xchg
xlat
mov
sbb
add
ljmp
outsb
ljmp
movsb
mov
or
sub
add
mov
jmp
in
mov
test
sbb
lods
pop
push
pushf
dec
push
imul
mov
inc
pop
ja
push
push
adc
ds
push
leave
inc
push
popl
mov
xchg
fmuls
sub
hlt
pop
fcmovb
and
sub
aad
scas
jp
mov
pop
and
jbe
sub
jle
inc
loop
mov
mov
dec
inc
mov
rcl
mov
or
mov
mov
xor
xchg
sbb
ret
std
ljmp
sar
sbb
dec
lock
icebp
xchg
xlat
lret
and
pop
pop
mov
out
xor
fsubrp
push
pushf
les
hlt
fcomps
in
aad
lea
jae
sbb
lods
add
inc
fsubp
pop
mov
out
lret
pop
xor
xor
es
and
jo
xorb
in
jmp
test
fmull
add
jle
inc
push
push
outsb
jg
adc
xchg
add
mov
aad
mov
or
xchg
icebp
les
dec
jb
gs
shl
movl
pop
in
sbb
cwtl
js
stos
mov
sbb
pop
ret
repnz
fs
xchg
xchg
xchg
pop
stos
mov
ficoms
inc
add
jo
aam
inc
cmp
jns
mov
sbb
cmp
adc
test
ljmp
enter
scas
inc
xor
movsb
aaa
mov
jg
mov
xchg
or
xor
adc
jnp
call
xor
jb
into
into
sti
faddl
pop
sbb
lds
sbb
dec
cs
or
scas
movsb
std
movsb
lea
not
lods
jmp
sub
sub
arpl
mov
push
and
push
les
hlt
dec
cmp
icebp
insl
dec
sub
xor
sbb
xchg
icebp
cmp
sbb
movsl
jnp
jle
divl
push
dec
inc
inc
jg
sbbb
ja
hlt
push
push
mov
cmp
add
gs
fbstp
insl
inc
in
int
outsb
call
jae
ret
and
lahf
dec
lcall
lods
fs
int3
xor
add
pop
stos
pop
lea
or
bound
roll
adc
or
xchg
in
or
adc
shl
orb
xor
cmp
and
stc
adc
inc
fisubl
inc
or
adc
lahf
fsubr
call
jno
jnp
mov
cwtl
lds
cmp
xor
mov
lret
mov
jns
stos
mov
mov
rorl
jge
sti
mov
cmp
sbb
fwait
mov
addr16
sub
fldl
data16
scas
out
dec
and
mov
cli
push
mov
bound
jle
pop
mov
les
jle
scas
mov
add
push
ss
dec
shrl
scas
jle
dec
inc
or
fs
add
lcall
cli
jo
int3
xor
stos
dec
and
xor
xchg
mov
jne
loope
cmc
push
lcall
adc
rcl
sbb
aad
mov
rcll
jle
push
sbb
and
dec
es
add
push
enter
xor
bound
fs
les
loopne
mov
jne
fldenv
push
or
xor
jae
pop
mov
add
or
aam
shlb
stos
fcoml
lock
xchg
outsb
mov
rol
into
adc
inc
mov
mov
orl
dec
mov
js
and
outsb
shlb
xchg
lret
test
dec
cmpsl
or
pop
pushw
inc
adc
decb
cmpsb
test
test
std
outsb
dec
insl
sub
inc
fidivl
fisttpl
in
movsb
mov
rcll
mov
and
xchg
pop
jecxz
stos
xchg
sti
pop
dec
sbb
or
adc
mov
pop
adc
sub
in
ljmp
push
push
inc
movsl
scas
in
pop
mov
jl
jecxz
jns
and
inc
pop
adc
pop
ss
sbb
rcrl
in
repnz
jp
arpl
mov
push
movsb
xchg
dec
push
in
or
push
icebp
mov
adc
mov
ret
pop
mov
and
sub
sbb
pop
dec
clc
sub
hlt
arpl
dec
mov
jb
push
lods
jmp
daa
lods
adc
loopne
into
mov
addr16
push
inc
sbb
out
cmpsb
leave
jne,pn
dec
xchg
adc
fcmovne
pop
aaa
xor
xchg
cmp
jp
loopne
jbe
jae
ficoml
orl
mov
cld
push
das
cld
mov
adc
pop
insb
cmp
sbb
inc
mov
insb
scas
in
add
add
fbld
test
mov
mov
movl
fdivrl
fistps
sbb
xchg
ljmp
aad
aad
sub
mov
dec
jle
mov
stos
in
fst
test
into
pop
sarb
pop
ds
dec
ljmp
cmp
xchg
or
jae
jecxz
mov
or
mov
push
lods
inc
mov
push
sbb
pop
loope
in
jecxz
dec
lahf
test
mov
mov
pop
adcb
cmc
test
add
enter
call
inc
xor
pusha
sbbl
pushf
rcl
lret
pop
je
xchg
mov
cmpsb
inc
sub
adc
into
pushf
in
add
jmp
sti
aaa
and
gs
jecxz
stos
test
mov
lock
mov
pop
xchg
dec
xor
xchg
fwait
ja
xor
int3
mov
popa
movsl
fistpll
test
ret
imul
dec
push
ds
std
jno
cmp
stos
and
loopne
decl
add
stc
mov
push
pop
dec
inc
cwtl
push
push
pop
mov
mov
out
or
jle
jb
dec
add
test
divb
dec
jp
dec
loope
add
pop
andb
adc
andb
cltd
xor
xor
out
and
into
pop
push
hlt
pop
xchg
fs
shrl
sbb
sbb
pop
sub
xchg
jo
adc
push
leave
dec
sti
imul
or
jge
shll
adc
cltd
dec
jle
dec
sbb
lods
rcrb
cs
shlb
mov
mov
mov
xchg
bound
pushf
jmp
xchg
mov
repnz
clc
xor
fiaddl
lret
scas
arpl
leave
loope
xor
int3
cs
xchg
outsl
fs
movsl
ret
jnp
movsl
scas
inc
add
mov
fisttps
inc
loope
repz
jmp
ja
pop
sbb
int
pop
cmpsl
sub
std
mov
jae
pop
rcll
imul
xlat
insl
mov
in
dec
fsubrs
adc
into
add
cmp
and
push
insl
mov
push
inc
xchg
xchg
xchg
sbb
jecxz
xlat
pop
xor
push
sbb
popa
out
sub
into
mov
loope
insb
fwait
inc
xchg
pop
mov
leave
xchg
xor
out
pop
push
sbb
and
and
xlat
pop
arpl
add
mov
push
push
movsb
push
sbb
in
pop
mov
daa
pop
jns
test
mov
and
cmp
adc
pop
cmp
outsl
adc
cmp
adc
out
xchg
push
lret
movsb
pop
jnp
es
push
roll
mov
orl
mov
loop
mov
lods
cmpl
sbb
inc
test
and
cwtl
dec
ljmp
mov
xchg
lret
in
aas
xor
mov
mov
aam
mov
das
cmp
sub
add
cs
aas
jecxz
push
mov
ret
and
xchg
cwtl
sub
sbbl
jno
mov
std
inc
insl
shll
or
addb
dec
push
jnp
push
jbe
mov
in
leave
dec
cmp
es
and
iret
orb
es
xor
cmp
sbb
dec
or
lods
mov
pop
inc
push
in
rcrb
dec
ret
xor
clc
inc
mov
popf
add
xchg
testl
in
fsubrs
ja
mov
mov
int
icebp
xchg
cmp
ret
fistpl
xchg
inc
rol
in
mov
jmp
js
mov
das
ja
jle
aam
xadd
adc
and
push
dec
int
std
fst
and
mov
fs
insl
pop
nop
push
pop
mov
jno
mov
es
add
xchg
sahf
push
jae
push
out
sarb
aaa
sti
sbb
mov
lahf
xchg
insl
das
sub
call
arpl
adc
sub
mov
push
mov
push
dec
sbb
cld
xchg
mov
mov
arpl
movsl
cmp
test
ljmp
pop
incb
lcall
jp
lcall
lret
push
cmp
jg
pop
mov
or
xchg
jge
lcall
scas
jb
xchg
std
mov
cltd
movsb
xchg
pop
xchg
pusha
cmpsl
add
icebp
push
ret
aas
enter
shrl
imul
sub
push
sub
and
pop
add
pop
xchg
inc
inc
add
jg
xor
cmp
adc
psrlw
std
pop
test
sti
xchg
jno
push
cld
out
call
pop
addb
ss
lahf
sbb
js
xchg
fldt
lock
pop
cmp
mov
cmp
pushl
shll
call
mov
pop
mov
shll
adc
mov
jmp
cmpsl
mov
pushf
mov
inc
jns
enter
rolb
mov
sarb
ds
pop
test
sbb
mov
adc
fucomi
in
xor
inc
and
movsb
les
push
mov
popf
fsts
repz
add
arpl
inc
popa
rcll
frstor
out
sbb
cs
fcmove
jg
movsb
cmp
pop
xchg
dec
mov
or
int3
mov
in
outsb
pop
roll
loop
les
insl
mov
mov
loop
push
std
fisttpll
int3
jecxz
jecxz
lret
xor
rcll
fmull
sbb
hlt
or
add
pop
add
push
je
jp
push
popf
pop
and
shlb
jno
or
stos
fistpll
out
frstor
dec
mov
dec
mov
xchg
cmp
clc
mov
and
jge
xor
xchg
js
mov
lods
jo
das
cltd
adc
mov
xorl
je
sub
idivl
jbe
rcl
cmp
or
faddl
loop
arpl
add
xor
cmp
xorb
cmc
cmp
cmpsl
inc
push
icebp
inc
test
loopne
rcll
imul
leave
movsl
or
enter
xchg
inc
lock
push
push
lret
les
pop
in
jae
xor
movsb
popa
cltd
jp
lods
cld
dec
mov
imul
lds
push
mov
scas
cld
movsb
inc
add
idivb
icebp
lock
push
call
test
stc
nop
jecxz
sub
push
or
adc
and
scas
and
adc
dec
out
mov
pop
jp
mov
mov
mov
push
fcmovnb
aas
add
cli
imul
mov
push
adc
jo
xchg
xchg
mov
into
outsl
sub
jecxz
adc
sbb
mov
subl
sub
loope
push
test
mov
mov
out
dec
pop
xor
push
mov
and
movsb
add
adc
or
inc
lock
leave
cs
scas
adc
push
imul
fwait
xlat
cmp
leave
loope
lock
repz
rcr
dec
mov
mov
fsubrs
loopne
fistpl
cmp
popa
fildll
sub
mov
in
adc
testb
pop
add
pop
ss
sub
xor
jmp
iret
jmp
or
sbb
data16
lret
daa
pop
or
and
or
inc
inc
inc
cltd
push
cmp
mov
dec
pop
aad
in
jmp
in
inc
sub
pop
add
test
in
loop
or
cmp
pushf
subb
or
ret
inc
adc
xchg
sbb
sub
popf
push
inc
xchg
push
push
add
mov
push
test
xchg
loope
ljmp
iret
xor
sti
mov
and
jle
or
js
mov
push
in
adc
pop
dec
pop
mov
dec
lods
fnsetpm(287
xchg
xor
bnd
mov
pop
fnsave
sub
out
pushf
cmpsb
neg
pushf
mov
dec
frstor
dec
sbb
xchg
insb
mull
dec
outsb
push
call
mov
or
aad
clc
jae
les
mov
pusha
push
mov
daa
jecxz
dec
inc
inc
adc
mov
cmp
pop
popf
popf
mov
insl
mov
stc
pop
sbb
repnz
jp
insb
popf
adc
movsb
xor
mov
inc
sahf
or
add
and
jnp
in
popf
xchg
hlt
push
sbb
fstpt
pusha
std
sub
xor
xchg
jle
insb
out
mov
jae
inc
icebp
ja
ret
sub
dec
push
mov
mov
pushf
fldl
idivb
mov
xor
mov
xchg
push
mov
loop
dec
loopne
inc
repz
cli
xor
cmp
outsb
mov
frstor
jns
inc
mov
stos
jg
mov
mov
or
push
cmp
cmc
dec
int
add
ja
les
xchg
xchg
push
mov
test
cmpsl
aad
aad
pop
jmp
pop
mov
xchg
lock
xor
orb
push
lret
inc
int
int
or
aam
lcall
mov
lret
scas
cmp
dec
xchg
cmp
mov
jb
sbb
cmp
adc
popa
leave
pop
add
incb
jle
xchg
ret
cmp
dec
in
inc
movsb
sub
lods
jg
sub
jg
mov
lock
lcall
ror
lods
pop
push
pop
in
fnsetpm(287
inc
popf
mov
dec
add
and
inc
clc
mov
scas
hlt
push
sbb
fwait
enter
repnz
or
rcrl
mov
dec
inc
cmpsb
test
push
in
jl
push
imul
cmp
push
xchg
ljmp
pusha
enter
push
std
imul
or
xchg
mov
mov
sar
lret
adc
cmc
and
sbb
or
adc
pop
pushf
out
lret
fisubl
shrb
push
fwait
lods
cwtl
cli
cltd
das
jge
push
loopne
dec
xor
and
fs
notb
clc
xchg
fcomp
into
lods
or
jnp
or
addr16
jae,pn
shl
movl
push
leave
add
rorb
xor
mov
and
xor
lcall
sub
test
mov
sub
mov
pop
es
insl
sub
dec
cld
mov
xchg
push
subl
dec
cltd
push
rcrb
js
les
and
jo
push
mov
int3
ss
xchg
pop
fs
xchg
cmp
inc
add
and
mov
faddl
test
insb
cli
xchg
dec
cld
mulb
pop
repnz
pop
pop
and
lret
mov
ret
aas
shrb
loop
dec
out
loop
sub
pop
das
test
dec
or
inc
dec
pop
mov
movl
fisttpll
adc
jle
sbb
fadds
clc
pop
dec
or
push
mov
push
pushaw
daa
or
fildll
jl
xchg
lods
adc
xchg
outsb
cli
pop
jp
mov
add
adc
push
daa
jbe
dec
std
mov
jns
cmc
ds
in
push
push
adc
pop
movsb
subl
or
mov
mov
pop
push
mov
test
cli
jecxz
mull
mov
sub
int3
mov
add
mov
mov
shlb
cmp
cmpsb
sbb
addr16
adcb
add
repz
pop
mov
fcmovnbe
pop
mov
addb
popl
bnd
push
mov
pop
sbb
test
mov
dec
cld
movsb
cmc
sahf
jnp
arpl
ja
faddl
dec
xchg
lahf
adc
lods
sub
mov
inc
pop
sub
sub
xor
jp
cmp
out
lods
pop
push
loope
sbb
nop
outsl
popf
popa
mov
int3
aam
daa
scas
mov
aad
cmc
arpl
add
pusha
mov
setne
inc
dec
push
fiaddl
js
adc
cld
hlt
lds
dec
cltd
loop
cmp
mov
sub
adc
nop
fldl
bound
inc
dec
lods
dec
mov
jnp
repnz
mov
mov
aaa
imul
gs
fwait
xor
pop
mov
dec
jo
rorb
lods
cmp
mov
gs
push
pop
jno
fmul
push
jae
movsl
sbb
mov
pop
test
xchg
xorb
or
pop
out
les
mov
sbb
mov
or
pop
pop
pop
clc
testl
cs
push
sahf
pop
loope
dec
mov
and
mov
or
iret
mov
pmulhuw
add
out
imul
test
mov
dec
cld
mov
pop
cmp
rolb
les
mov
leave
popw
cli
cmp
push
mov
js
mov
dec
mov
iret
lods
sub
mov
jno
sar
mov
lcall
cli
jle
cmc
loope
fstps
mov
add
xchg
std
insb
adc
push
dec
mov
jns
mov
leave
cvtps2pd
xchg
js
aad
mov
cwtl
ficoml
in
fwait
add
imul
aaa
into
pop
adc
mov
ret
loope
cmpsl
jns
cwtl
aam
add
sub
mov
xchg
add
add
sarl
out
pop
mov
push
jne
in
inc
mov
es
sahf
lahf
cmp
mov
jbe
sub
loopne
mov
in
xchg
cmp
clc
aas
mov
rcrl
xchg
mov
push
or
cltd
jnp
sub
adc
pop
add
xchg
iret
bt
cli
mov
sbb
lods
mov
xor
mov
xor
call
movsb
leave
cmpsb
scas
fdivr
fdiv
mov
loopne
push
sahf
or
mov
cmp
outsl
mov
inc
sbb
sahf
shlb
pop
stos
imul
outsb
popa
jp
andl
sub
stc
xchg
cmp
into
ljmp
jae
pushf
mov
cwtl
sub
pop
or
pop
mov
or
and
hlt
xchg
out
in
add
loop
pop
out
or
imul
jl
mov
pop
xor
idivl
and
and
lds
and
xchg
ret
pop
push
and
push
aas
xlat
add
mov
mov
add
insb
xchg
add
dec
das
and
xchg
mov
mov
popa
cmp
out
ljmp
xchg
xor
adc
in
or
sbb
mov
fstps
in
adc
movb
daa
repz
icebp
jns
jo
add
cld
stos
shlb
jecxz
test
push
into
scas
mov
sub
xchg
scas
and
add
js
mov
mov
push
gs
xor
push
mov
xor
jno
jno
fldz
icebp
adc
xchg
cld
dec
jge
pop
nop
imul
scas
pop
mov
push
cmp
lahf
cmp
sub
adc
adc
jne
jmp
push
in
int
pop
test
xlat
pop
push
orb
int3
aas
sub
test
inc
dec
sahf
mov
sbb
xchg
add
xchg
cld
filds
fistpl
cmp
imul
out
ret
in
aad
leave
pop
adc
cmp
xchg
das
add
mov
mov
mov
dec
fs
cld
fcoms
clc
shll
pushf
sbb
lock
and
mov
xchg
fsubrl
add
stos
add
pop
bound
arpl
xor
out
sub
add
mov
fs
movsb
jne
arpl
sbb
sbbl
arpl
mov
mov
mov
cmp
lea
sub
sahf
dec
div
add
es
cmpsb
mov
sahf
ja
in
add
je
push
jle
stc
xor
sub
sahf
js
xor
pushf
test
mov
rcrb
xorb
mov
sbb
xchg
shrb
inc
xchg
test
es
mov
push
jle
insb
bound
inc
cmp
enter
mov
sahf
pop
add
lds
dec
fimull
arpl
xchg
decl
sbb
leave
in
xchg
lea
fsubrs
scas
dec
inc
lods
sub
mov
insb
mov
and
outsl
outsl
cmpsb
mov
pop
or
pop
inc
push
push
in
out
pop
les
add
push
or
mov
xchg
fsubrl
mov
cmpb
jl
fsubl
loopne
in
fmulp
in
dec
push
cmp
sbb
adcb
in
repz
add
jbe
cmp
cmovle
xchg
mov
stc
in
nop
jle
dec
pop
xchg
test
pop
das
push
push
jb
add
dec
push
pop
jmp
cmp
arpl
mov
sbb
aam
add
mov
or
pop
lods
ret
lea
insb
push
pop
jno
xchg
aad
and
leave
test
jmp
sbb
mov
cwtl
daa
fsubrp
dec
mov
movsl
in
jmp
movsl
popf
ret
ja
hlt
ss
push
je
add
cwtl
sbb
mov
mov
mov
xchg
arpl
mov
pop
jge
aaa
dec
add
ret
sbb
out
lods
cmp
stos
arpl
xchg
inc
ss
sbb
sub
xchg
dec
out
jl
pop
mov
jo
adc
dec
add
outsl
push
dec
negl
jbe
mov
pop
iret
pop
xor
scas
xchg
xchg
movsl
pop
movsl
cmp
nop
outsb
xchg
scas
jo
jo
or
icebp
sub
fcoml
sbb
add
pop
mov
movsb
sahf
or
sbbb
jae
ret
dec
aad
pop
mov
mov
ret
xor
aam
sbb
xchg
mov
xchg
mov
push
pop
push
pusha
cwtl
push
push
pop
or
ljmp
dec
xor
outsb
ret
pop
xchg
inc
in
pop
xchg
and
add
fisubs
sub
paddsw
pop
mov
shrb
jmp
mov
inc
pop
into
fmul
cmp
in
xor
pop
and
sahf
stc
test
add
cmpsb
mov
adcl
into
jge
jnp
xchg
scas
or
arpl
push
xor
aad
mov
jmp
fidivrs
push
add
scas
add
jno
fistps
jb
jnp
imul
daa
mov
xor
xchg
mov
ja
dec
add
mov
outsb
cmp
push
jbe
sub
adc
cmp
jmp
xor
das
bnd
cmp
jbe
adc
clc
aam
sbb
les
jp
xchg
xchg
xor
and
ja
pop
int
dec
mov
mul
sti
fcoml
xor
insb
sub
adc
lock
push
andb
pop
or
pop
insl
lods
rolb
fcoms
sbb
dec
sub
js
or
andb
movl
mov
jg
ret
or
mov
loopne
iret
inc
fsts
mov
mov
in
jbe
mov
cmc
pop
xor
sub
cwtl
xchg
int
and
lret
rcl
sub
pop
add
scas
and
lahf
xchg
fadds
dec
adc
ja
popa
std
lcall
add
cltd
shrl
test
test
outsb
xor
ret
test
pop
popa
in
cmpsb
sub
pop
dec
data16
mov
adc
ror
sub
fcomp
jge
jl
inc
scas
aas
insb
lret
lods
lret
lcall
hlt
or
sub
rorl
sbb
adc
mov
into
add
mov
xorb
dec
mov
test
pop
sbb
cmp
and
adc
pop
and
cltd
dec
mov
xlat
sbb
or
fisttpl
push
jl
in
sbb
in
add
nop
push
stc
jae
jo
adc
pushf
ret
push
imul
dec
jnp
dec
jmp
ja
pop
fwait
out
and
adc
lock
lods
cmc
inc
punpckldq
enter
push
inc
aam
cld
and
clc
inc
stc
mov
loope
outsl
mov
ss
int
inc
test
fnstenv
xor
inc
add
xchg
aas
lea
mov
inc
adc
sub
stos
jmp
mov
lock
push
pop
cmc
cmp
xor
xchg
dec
push
jcxz
lcall
shr
in
inc
filds
fisubrs
adc
mov
cli
aam
mov
adcb
inc
sbb
mov
dec
add
inc
add
mov
lret
push
sub
dec
pop
jecxz
stos
outsl
fmull
sub
jg
sbb
inc
outsl
les
sbb
cmp
add
xchg
roll
push
dec
jb
daa
or
outsb
xor
push
pop
fnstenv
jg
je
push
ds
iret
bnd
and
in
xchg
jb
and
fwait
adc
xchg
psubw
in
loope
shlb
fimull
loope
adc
push
jmp
mov
into
nopl
outsb
mov
fcmovnb
mov
mov
daa
mov
stc
out
dec
mov
jg
and
sbbl
stc
mov
rorb
roll
xchg
mov
sarb
cltd
arpl
push
loope
fidivrs
inc
adc
cmp
add
xchg
mov
dec
daa
adc
mov
and
and
int3
cmc
push
je
mov
lret
popa
mov
lret
jge
xor
fwait
into
stc
leave
cmp
mov
jecxz
push
sub
fistpl
testb
test
clc
in
out
out
dec
sub
sub
scas
loope
repz
xchg
xchg
add
movb
leave
pushf
rorb
std
aam
push
mov
or
push
and
neg
mov
imul
popa
jle
push
xor
adc
jp
bound
cltd
jo
ret
dec
sub
mov
push
pop
or
notb
repnz
mov
mov
popf
cmp
je
mov
iret
xchg
dec
ljmp
addr16
add
dec
jns
insb
adc
mov
subl
cmp
mov
cmp
pop
inc
and
and
dec
sub
repnz
popa
jns
sahf
popa
mov
add
push
ljmp
inc
loope
mov
imul
outsb
pop
pop
mov
scas
xlat
clc
dec
pop
insb
testb
out
inc
data16
mov
mov
inc
jb
fcmovb
test
inc
out
int3
movsl
add
nop
cmp
jne
cltd
mov
bound
in
push
or
test
sbb
and
adc
inc
fsubl
dec
pop
cmc
jnp
out
imul
ds
cmpl
mov
add
dec
mov
or
mov
loope
dec
push
test
dec
imul
aaa
sub
cmp
xchg
cmp
in
jbe
mov
daa
or
xor
push
call
nop
xchg
mov
or
add
inc
cmp
adcb
pop
xchg
mov
sbb
xorb
inc
cmp
stos
sti
pop
pop
lcall
mov
inc
punpckldq
xlat
pop
jmp
adc
je
ja
sbb
std
jmp
mov
in
insl
mov
loop
dec
xor
add
test
jnp
in
mov
mov
add
lods
mov
scas
in
idivl
dec
test
data16
ret
push
xor
fs
mov
cmpsb
add
lock
xchg
add
mov
repnz
xchg
fs
call
shll
loopne
push
add
xchg
outsl
sub
mov
lods
cwtl
xchg
jbe
je
mov
dec
cmp
xchg
mov
pop
loopne
adc
sub
lea
xor
cmpsl
sti
in
add
sub
int
jnp
pop
mov
jbe
cmp
and
jecxz
inc
adc
sbb
stos
mov
pop
or
imul
cwtl
dec
adc
xchg
orl
add
fdivr
fldt
mov
pop
sbb
shrb
mov
or
shlb
jne
jbe
and
mov
jns
stos
mov
push
adc
cmp
inc
dec
sahf
aaa
repnz
in
cmp
call
cltd
fcomip
adc
cmp
add
jns
out
in
pop
mov
outsb
xor
repz
ss
iret
sub
inc
hlt
cmp
pop
inc
lret
and
jnp
shlb
mov
or
add
xchg
in
mov
adcb
push
adc
loop
fneni(8087
clc
scas
xchg
in
push
mov
inc
and
xor
sub
movsl
or
push
call
push
mov
inc
sbb
fistpl
pop
aad
movsl
xor
adc
pop
into
inc
mov
sub
lea
ficoml
cmp
mov
xor
mov
loop,pn
scas
jo
mov
lock
sub
into
pop
test
iret
and
scas
sbb
lea
jb
mov
and
sti
adc
mov
scas
lds
sbb
mov
pop
imul
xchg
inc
add
ficoml
fnstsw
cli
stos
adc
adc
sbb
sub
ljmp
or
push
cs
xor
inc
pop
mov
add
mov
fisttpl
mov
repnz
das
les
push
insl
mov
mov
jne
ret
sub
je
in
mov
shrl
xchg
jecxz
repz
cs
dec
pop
or
inc
adc
outsb
push
pop
and
lock
inc
add
aaa
fistps
negl
sub
inc
or
cli
sub
lahf
ja
addl
pop
sar
push
jmp
imul
stc
sbb
cmp
jae
push
cmpsb
pop
cmp
mov
cld
push
inc
aas
push
in
cld
fldt
sahf
push
add
sub
sbb
push
xchg
das
jae
adc
sbbl
out
jns
dec
jle
gs
or
or
push
sbb
mov
test
jge
dec
fwait
gs
cmp
sti
aaa
jp
jmp
xor
pop
jle
stc
dec
cs
adc
ljmp
pop
icebp
outsb
fadds
pop
or
and
adcl
out
mov
push
sub
popa
mov
sbb
cld
ret
push
scas
cmpsb
in
subb
pop
sub
or
sbbl
lock
in
push
mov
outsl
pop
xchg
call
cmc
mov
xor
adc
add
cmc
shll
push
xor
push
cld
mov
loop
pop
dec
inc
add
adc
jmp
jg
push
loopne
and
add
inc
jo
outsb
adc
adc
jns
dec
pop
jae
int
jg
dec
incl
jae
mov
adc
jle
test
out
mov
cltd
dec
fnsave
xchg
sbb
xchg
mov
jmp
push
and
faddl
lret
out
cmp
and
cld
cmpb
lret
cmp
sub
roll
dec
ret
jge
fs
mov
add
sahf
imul
pop
std
inc
loope
or
or
pusha
fcomip
fldt
mov
jae
fsts
shrb
outsb
call
push
mov
pop
jnp
imul
fwait
mov
add
mov
or
repz
icebp
and
push
adc
aas
ja
dec
and
xor
rcl
insl
adc
or
push
sbb
sahf
push
pop
or
mov
imul
xchg
fs
psubusw
jge
mov
sub
jg
inc
xlat
xor
mov
inc
jg
dec
or
dec
into
sarl
push
or
stc
imul
add
cltd
dec
jns
mov
lds
jge
xor
or
cmc
dec
stos
lret
imul
add
mov
in
or
push
or
pop
popa
test
shll
push
push
dec
push
lret
pusha
daa
out
xchg
push
out
xlat
dec
mov
insb
and
cmc
int3
lds
inc
push
arpl
testb
popa
lods
stc
fs
mov
add
jmp
rep
les
cmp
mov
jecxz
popl
jg
out
jbe
shrl
arpl
xor
shll
jle
enter
divb
inc
das
testb
dec
test
cmp
push
jb
stos
push
pop
fisttpl
push
or
nop
sbb
jne
xchg
sbb
aas
setg
add
leave
jp
add
mov
in
mov
pop
mov
std
cmp
xchg
sub
test
dec
jbe
dec
or
xchg
icebp
hlt
and
cmp
sahf
stc
sub
aas
dec
xlat
pop
dec
seta
fisubrl
adc
pop
xchg
cmp
mov
sbb
mov
inc
jae
mov
xor
push
lock
push
lret
cmp
and
shl
inc
movsl
or
popa
xlat
cmp
sub
push
and
jb
xchg
sbb
jmp
mov
xor
add
pop
jmp
mov
jl
sub
out
insb
test
xlat
mov
loop
icebp
pop
inc
xchg
lahf
setge
mov
imul
cs
lds
iret
in
in
int3
cmc
and
insb
cmp
push
mov
aaa
sub
int3
mov
aaa
lods
pushl
mov
add
iret
pop
hlt
insl
inc
lods
pushf
aas
montmul
cmpsb
les
xor
xchg
inc
hlt
push
ds
and
mov
pushf
jecxz
in
clc
cmc
pop
cmpsl
cmpsb
jle
sub
mov
dec
and
insl
dec
mov
and
sbb
adc
push
insb
cwtl
sub
jge
out
sbb
mov
jp
stos
lods
xor
add
mov
cmp
shll
add
pushf
push
sbb
adc
and
xchg
insb
push
or
mov
je
test
lock
clc
mov
dec
mov
pop
mov
mov
cmpsl
dec
fwait
push
shlb
or
js
call
shll
dec
addl
ljmp
std
pop
sub
mov
fisubs
mov
in
ficompl
shll
jge
dec
mov
xchg
pop
adc
or
fisttpll
or
lcall
movl
xor
nop
lahf
mov
adc
cmpsw
movb
xchg
imul
inc
xchg
add
sub
mov
pop
mov
sub
dec
das
inc
cs
jb
fmuls
mov
dec
es
mov
mov
dec
cmc
dec
jl
push
add
aas
pop
jbe
daa
jbe
dec
cld
cs
fdivr
leave
movsb
inc
jns
and
add
imul
out
jne
cmpsl
fwait
and
mov
lcall
outsb
cli
dec
pop
push
xchg
xchg
push
outsb
sbb
dec
int
loop
in
jl
sub
jp
test
xchg
xchg
sbb
or
jg
sbb
test
jnp
hlt
outsb
dec
jecxz
mov
sarb
ret
mul
push
lds
not
out
sbb
out
xchg
fldcw
out
xor
repnz
out
orl
sub
pushf
movsl
push
fs
stc
sub
shrl
pop
sub
cmpsl
mov
mov
in
test
inc
cmpsb
sub
adc
popa
push
in
lcall
aaa
mov
mov
and
pop
into
xchg
push
adc
rcll
ljmp
cmp
cmpsl
pop
scas
add
pusha
popf
sub
add
dec
lds
adc
xchg
fisttpl
dec
mov
xchg
ja
add
adc
mov
adc
mov
rcrb
dec
scas
xchg
testl
scas
out
pop
xchg
inc
mov
dec
in
push
add
das
jnp
or
mov
stc
xor
js
pop
cmc
fwait
jmp
lret
mov
ret
or
lock
mov
pop
sbb
sbb
or
or
sub
in
jns
cmp
fildl
loopne
fs
les
cmp
rclb
jns
push
pushl
pop
sahf
stos
xor
adc
daa
out
sub
xchg
imul
loope
sbb
popf
adc
inc
aad
add
sub
inc
mov
jp
lahf
mov
jb
cmc
jl
lods
inc
xchg
dec
addb
in
pop
loop
cld
rcrb
push
adc
sub
cmpsl
shlb
jae
loopne
mov
sbb
lret
mov
pop
int3
push
xchg
lret
mov
pusha
inc
mov
jp
outsb
ljmp
and
lods
fstpt
cmc
and
dec
adc
pop
imul
es
iret
jae
lock
leave
and
mov
dec
cmp
popf
adc
fcoms
dec
cs
sahf
data16
push
dec
xor
mov
sbb
stc
inc
aad
cltd
dec
sbb
adc
adcl
lds
and
cmc
repnz
xor
xchg
inc
daa
mov
mov
mov
add
mov
push
pop
cmp
movsl
push
lds
mov
sub
adc
push
outsb
ljmp
fildll
xchg
fs
xor
orb
dec
ret
jae
mov
out
int
cmpsl
jmp
aas
aaa
mov
sub
lahf
push
out
test
cmp
aad
pop
shrb
fcompl
or
insl
cwtl
lret
stos
push
fdivrs
push
daa
xor
cld
pop
pop
lea
push
sub
jp
mul
bound
mov
scas
sub
orb
xor
call
fimull
dec
gs
mov
inc
mov
faddl
sbb
lcall
shll
icebp
fcoml
pop
pop
cli
inc
orb
js
lcall
cs
dec
jg
lock
shlb
mov
mov
icebp
adc
or
shlb
add
leave
sbb
movsl
and
lods
cli
movsl
ja
push
dec
jge
fisubrl
fdivs
loop
aas
insb
and
sbb
jbe
adc
mov
sahf
cmp
int
pop
insl
sub
pop
pop
cwtl
dec
adc
pop
stos
imul
ret
cmp
jnp
bound
loopne
out
fnsave
test
adc
roll
int
cmc
shlb
sbb
xor
sbb
in
cmp
mov
mov
fsubs
and
add
jge
fdivl
stc
jo
pop
push
shl
xor
sbb
jg
fs
mov
sub
or
mov
add
inc
sub
jl
cs
xor
or
jo
xor
popf
mov
out
pop
xchg
addr16
dec
jbe
pop
and
pop
jecxz
pop
push
jne
mov
cmp
mov
subl
lods
or
mov
or
das
fmulp
or
xchg
mov
pop
mov
iret
fisttpll
shll
mov
xor
mov
scas
and
test
jg
mov
add
adc
pop
pop
jno
add
mov
cwtl
xor
in
add
sub
mov
push
or
or
pushf
shl
ss
mov
jne
sbb
dec
movsb
test
jg
outsb
out
mov
add
jns
ret
fs
aaa
xor
add
ja
mov
pop
inc
cmp
pop
lcall
pop
dec
push
in
loope
cmc
mov
lods
mov
sbb
push
cmp
sub
in
cmp
mov
mov
dec
xchg
cmp
rorb
fcomps
add
mov
insb
xor
cmp
mov
or
inc
pop
jp
sbb
cwtl
inc
cltd
add
addl
popa
and
add
sbb
push
lea
pop
cmp
daa
cs
mov
stos
pop
out
xor
sbb
lods
sbb
mov
push
mov
pushf
mov
into
loop
sbb
lea
andl
je
rcr
int3
or
test
pop
nop
push
add
iret
daa
fisubl
pop
xchg
sbb
push
aam
cmp
into
jns
cmp
and
sti
cltd
pop
js
loopne
popf
cmp
fnstenv
pop
sub
sbb
ret
outsb
mov
add
fdivrl
repz
int3
in
dec
pop
pop
fldcw
mov
fsubl
movsl
lcall
cmc
xchg
bound
pop
icebp
xor
js
imul
jae
stos
inc
jle
outsb
movsb
push
xchg
adc
test
jp
popf
cltd
jo
test
dec
sbb
mov
add
mov
push
mov
cmp
movsb
mov
inc
pop
dec
xor
add
sti
int3
mov
and
loop
dec
arpl
and
inc
cs
jbe
fmulp
and
inc
cli
mov
pop
and
or
dec
popl
adc
lret
mov
outsb
push
cmc
mov
mov
mov
push
fwait
mov
in
arpl
stos
dec
dec
hlt
stc
sub
fisttpll
jns
inc
mov
sub
cld
xor
jecxz
cmp
nop
and
cmp
mov
mov
sbb
cld
mov
xchg
mov
mov
push
adc
add
popf
stos
jl
jle
fdivrs
mov
add
dec
cmpl
sbbl
inc
sbb
cmpl
jp
hlt
cmp
push
push
push
mov
xor
andb
repz
push
sbb
call
add
pusha
fisttps
outsl
xchg
xor
into
jbe
adc
out
repnz
inc
jp
test
sbb
mov
adc
or
cmp
insb
mov
out
xor
sub
fstpt
push
nop
jp
daa
dec
into
mov
mov
icebp
loop
mov
jge
mov
dec
ret
jg
push
xor
adc
loope
fs
dec
pop
push
fwait
add
addl
cmp
sbb
xchg
stc
dec
xchg
add
mov
stc
scas
in
push
jne
mov
jecxz
sti
and
sahf
call
push
js
cmpsb
das
add
stos
out
call
jecxz
mov
popa
iret
rorb
loop
clc
pop
jge
ja
mov
fsts
aas
cmpb
cli
addr16
xor
push
xor
imul
inc
adc
or
adc
in
xchg
adcl
inc
pop
hlt
cmp
test
decb
lahf
push
shrb
daa
push
dec
add
stc
add
ja
mov
sbb
xlat
ss
mov
dec
lds
sbb
idiv
xchg
jno
mov
test
outsl
sub
sbb
movsb
daa
inc
fs
lods
mov
xchg
mov
sbb
mov
ret
and
test
mov
insb
inc
popf
mov
sub
xlat
sbb
mov
mov
jae
rcll
int
lcall
pushl
or
sbb
sti
jne
inc
inc
fldcw
or
or
cli
sub
pop
dec
push
fiaddl
xchg
movsl
xlat
int3
fwait
outsb
sti
mov
inc
das
test
pop
jnp
mov
inc
mov
dec
xor
xor
adc
sub
or
rcll
dec
mov
pop
xchg
push
add
inc
fldt
jl
pop
pop
mov
mov
addr16
pop
cld
fwait
pop
inc
imul
push
orl
xlat
fimull
lds
arpl
adc
scas
int
dec
popf
mov
mov
outsb
sbb
dec
in
jne
call
or
inc
aad
xor
shlb
jne
xchg
pop
and
lods
ja
xchg
in
movsb
xchg
mov
scas
jae
inc
cmp
lcall
fildll
fldcw
mov
cmpsl
cmp
dec
and
mov
jb
ja
xchg
pop
addr16
lods
les
stos
mov
or
pop
push
mov
subb
scas
mov
popf
js
adc
scas
out
mov
push
nop
mov
push
sub
hlt
lods
jg
std
repnz
ljmp
xchg
mov
sbb
stos
inc
xchg
xchg
add
push
jg
or
fimull
addr16
add
xor
xchg
jg
fistpll
repz
or
mov
add
mov
imul
mov
test
iret
popf
xor
sbb
adc
jle
push
mov
dec
fwait
enter
xchg
popf
icebp
mov
test
popa
or
and
mov
sub
lds
imull
and
push
jae
or
js
or
adc
sub
xor
ret
pop
push
ja
gs
fwait
daa
shrb
arpl
mov
adc
inc
aas
pop
in
push
lret
insb
cmp
mov
lahf
lock
mov
adc
aas
xor
or
mov
cs
mov
jne
clc
cli
push
sub
fildll
je
or
sbb
jb
add
jmp
mov
add
test
adc
mov
xor
xor
ja
into
js
jecxz
dec
jg
push
addb
sahf
js
mov
add
cs
xor
or
cmpsb
cmc
adc
int
dec
testl
fnstenv
dec
pushf
cmp
or
and
mov
push
jge
xor
test
mov
push
scas
mov
cmp
es
and
stos
es
filds
and
movsl
adc
loop
int3
jg
sub
lcall
xchg
sbb
mov
dec
pop
stc
cmp
test
int
push
incb
inc
add
mov
iret
scas
cs
mov
sahf
int3
popa
mov
ljmp
outsl
loope
sahf
or
push
andl
std
xor
push
sti
push
inc
aad
les
ret
dec
pop
xor
and
jae
pop
lahf
rcr
sub
or
scas
jp
ret
lods
push
clc
daa
jns
das
lret
ficomps
cmp
testl
jp
mov
out
xchg
mov
std
movsb
bnd
adc
inc
fs
jns
sbb
das
cmp
jg
xchg
cwtl
fmull
dec
cmp
clc
or
adcl
xchg
or
mov
mov
popa
dec
sahf
jo
xchg
cmpsb
push
adc
sub
jle
pop
jo
xor
aam
mov
mov
sbb
fwait
cmp
icebp
int
andb
ret
mov
cmp
xchg
mov
test
sub
pop
insb
pop
or
jmp
xor
aad
mov
xchg
in
pop
xchg
outsl
loopne
xlat
sbb
sub
mov
add
xor
and
in
mov
and
or
adc
js
xchg
inc
stos
mov
mov
xchg
sbb
les
ja
mov
out
popl
adc
push
dec
rorl
pop
pop
add
sbbl
dec
push
sub
push
mov
pop
jbe
mov
popf
inc
push
sub
cmp
gs
and
or
and
mov
xchg
sub
add
jle
mov
mov
loope
int3
int
fstl
or
add
or
sti
fdivrs
inc
inc
bound
sub
dec
loope
xor
test
cmp
stc
cmp
testb
sbb
pushf
adc
push
add
sbb
stc
xor
dec
adc
dec
int3
aam
arpl
in
idivl
inc
in
insb
cld
cmp
rep
icebp
aam
sbb
push
xor
mov
repnz
fsubrp
and
push
xchg
pop
sbb
and
mov
rol
sub
mov
subb
add
sub
mov
jp
lahf
cmp
fwait
adc
bound
icebp
pop
in
into
push
mov
imul
pop
push
cmpsl
out
cmp
sarb
push
mov
out
mov
mov
mov
dec
imul
push
adc
cltd
daa
jmp
pop
inc
out
add
and
popf
adc
xchg
push
orl
mov
scas
mov
pushf
pop
push
add
or
ds
sub
je
mov
cld
sti
ror
inc
cmpsb
ljmp
pinsrw
rcr
lods
mov
mov
stc
xchg
or
pop
adc
dec
lock
jge
scas
mov
pop
es
or
sub
dec
rcrl
add
orps
add
shl
jg
jecxz
fs
add
mov
in
orb
loop
or
arpl
ja
inc
xchg
movsl
adc
cmp
adcb
ljmp
mov
fs
pop
sbb
loope
add
add
mov
fwait
popf
test
inc
pop
hlt
std
dec
mov
mov
pop
stc
jg
sbbl
test
dec
lret
loop
xchg
pop
aaa
jns
pushf
lods
mov
xor
mov
push
mov
or
and
imul
aas
cmpl
xchg
adc
or
ja
ret
es
aas
pusha
out
or
or
mov
aad
sub
lea
cwtl
lea
pop
or
add
jecxz
andl
clc
aad
pop
test
cmpsl
push
cmpsb
div
push
inc
mov
insl
add
mov
cmpsl
mov
xchg
dec
lcall
call
adc
dec
in
xor
addr16
cmp
in
movsl
stc
add
jle
xor
out
call
jno
das
add
xor
sbb
dec
lret
cmpsb
fst
mov
and
push
inc
stos
sub
or
int
pop
jle
das
pop
push
movsb
jae
cmp
add
pop
xchg
or
aam
cmp
mov
mov
and
add
sets
sub
dec
push
sbb
outsb
adc
mov
xchg
imul
mov
adc
pop
popf
mov
das
xchg
sahf
dec
mov
ljmp
loope
scas
xor
jns
pop
arpl
aam
inc
jmp
lret
mov
iret
push
push
mov
pop
rorl
inc
xchg
cmp
leave
outsb
pop
andl
pop
fscale
xor
std
lahf
lret
fprem1
pop
xchg
ret
add
out
xchg
test
addr16
icebp
lods
mov
pop
mov
push
inc
and
insl
hlt
xor
imul
lcall
push
fdivrl
adc
pop
mov
loope
es
fcoms
pushf
add
inc
add
ljmp
scas
sar
pop
rcll
pop
or
jbe
sub
dec
mov
jp
iret
lods
ja
or
jmp
rcll
popa
xchg
dec
push
lods
out
pop
mov
inc
iret
shll
push
popf
xorb
ret
sbb
or
fnstsw
fidivrs
lahf
xchg
xor
jl
cmp
sub
pop
jno
or
mov
sub
loop
sbb
cmc
sub
adc
fisttps
dec
pushf
out
fsts
repz
rcrl
scas
sahf
fldenv
adc
xchg
dec
mov
jae
add
pushl
jo
or
imul
and
dec
sbb
ja
in
popa
aaa
adc
je
sbb
in
adc
pop
pop
inc
jb
sahf
std
cmpsb
adcb
cs
roll
orl
in
sbbl
popa
jl
gs
dec
jne
fwait
adc
xchg
repnz
sub
cwtl
and
jl
push
stos
mov
ret
ja
fsts
jnp
and
adc
pop
cmp
enter
lret
xchg
mov
cmp
bound
lret
sti
sub
in
dec
adc
fs
dec
stos
pop
jno
into
xor
popf
lea
pushf
dec
jge
xchg
jae
lock
mov
ret
push
leave
add
lods
adc
loop
pop
mov
mov
test
lcall
in
xchg
sarl
stc
adc
add
mov
sbb
aaa
add
dec
mov
imul
mov
pop
lods
dec
xchg
push
les
incl
and
shll
test
xchg
mov
cmp
xor
mov
dec
fnstenv
pop
je
mov
sbb
idivb
push
inc
std
ss
pop
insertq
jl,pt
fsubrs
fisubrl
cmp
loopne
xor
leave
inc
sbb
into
mov
ds
xor
iret
cmp
pop
jne
dec
mov
push
add
jno
test
xor
mov
cmovbe
nop
filds
jno
scas
or
in
sbb
addr16
leave
xor
or
mov
rorb
xor
fs
ret
je
stc
sbb
mov
or
pop
jns
lock
leave
std
xchg
filds
into
fisubl
es
ds
add
or
cwtl
mov
popa
and
outsl
jle
dec
loope
rcrb
je
xlat
lds
and
xchg
jg
pop
lods
je
sbb
sbb
mov
lcall
adc
jmp
scas
mov
movsb
pop
push
pop
sub
fistps
push
aam
sub
push
lret
bnd
es
mov
mov
inc
fisubrl
pop
jmp
fucomi
arpl
outsl
inc
int3
and
inc
pusha
call
sub
lock
imul
adc
roll
cld
xor
scas
push
fsubrs
dec
mov
sbb
pop
adc
leave
clc
add
in
xor
push
test
mov
cmpsl
adc
dec
lahf
repz
adc
push
daa
xor
inc
add
sbb
add
dec
pop
mov
sar
xor
pop
rcrl
pop
jmp
ds
adc
add
lea
clc
inc
out
adc
dec
adc
xor
movl
add
lahf
mov
mov
and
cmp
pusha
sbb
xor
cld
inc
out
popf
in
mov
cld
push
loopne
push
jbe
mov
fcoml
loop
xorl
popf
cwtl
cmp
pop
icebp
rorl
data16
test
je
push
gs
mov
sbb
scas
jns
add
xchg
mov
xrstor
or
imul
cmc
jno
xchg
jae
mov
ljmp
sub
add
pop
loopne
pop
inc
add
lahf
scas
xor
sub
mov
sahf
call
mov
mov
mov
jb
sarb
outsb
xlat
pop
xor
pop
popf
xor
adc
pop
fwait
push
mov
ljmp
and
aam
int
out
sar
scas
sarb
leave
test
adc
ss
fnstcw
adc
adc
jnp
mov
inc
cmove
loopne
rcll
rolb
gs
addr16
xor
push
enter
cs
dec
scas
pop
inc
into
xchg
push
lcall
sbb
sub
or
dec
repnz
out
andb
shrl
in
fisubrl
popa
dec
lock
lods
aam
repnz
add
cmpsb
ret
sbb
jns
pop
jae
sbb
loopne
adc
out
pop
les
out
or
je
adc
or
mov
jmp
xchg
xchg
cld
fadd
popf
xor
inc
mov
cltd
add
mov
cmp
pop
pop
push
inc
lret
xlat
and
jmp
push
movsb
cli
or
cmpsl
mov
es
cli
cwtl
adc
sub
lods
mov
mov
dec
adc
mov
aaa
mov
jecxz
cmp
movsb
adc
test
stc
xchg
xor
mov
in
adc
jge
or
repnz
mov
lock
testb
add
loop
xor
inc
xchg
add
fs
adc
int3
movsl
cltd
push
fnsave
popf
sub
mov
xchg
idivb
pusha
inc
imul
mov
push
add
mov
jle
stc
mov
pop
inc
aam
or
test
nop
sub
and
pop
push
mov
inc
ds
push
dec
rorl
cmpsb
mov
fdivrs
in
shlb
xchg
pushf
jl,pt
mov
insw
movaps
dec
pop
jb
add
push
cmp
clc
dec
pop
hlt
in
test
into
fwait
test
xor
jge
adc
add
dec
xchg
mov
or
popa
mov
leave
mov
add
cmpb
cmp
cmpsl
out
pusha
or
mov
ret
push
es
dec
inc
add
jno
add
add
mov
or
sub
mov
insb
dec
mov
cli
pop
sbb
push
outsb
cli
mov
repnz
cmp
inc
xchg
lds
pushf
das
xchg
adc
dec
pop
or
pop
add
mov
cmp
jecxz
sbb
pop
aas
and
jmp
stos
cmp
xchg
cmp
lret
cmp
test
es
ret
lock
xchg
xchg
aas
inc
aad
mov
mov
cmp
jmp
sarl
fs
pop
fisttpl
cs
mov
sbb
shlb
mov
rolb
or
lock
add
ret
inc
out
popf
in
push
jmp
sbb
es
cld
cmp
lods
add
out
js
cmp
addr16
pusha
jl
sub
andb
push
movsl
add
fldl
xor
add
ret
loopne
xchg
xor
insl
push
push
push
addr16
addl
add
hlt
lcall
sub
test
andl
xchg
sub
test
pop
push
pusha
inc
mov
push
outsl
insl
and
pop
push
arpl
das
mov
test
cmp
ficompl
and
mov
dec
xchg
jle
jns
cmpsb
inc
ja
aas
push
adc
outsl
pop
xor
jmp
cmp
aas
or
fbld
cmc
je
adc
jae
push
outsl
clc
adc
mov
nop
nop
mov
and
jge
xor
mov
lds
roll
jge
cmp
mov
leave
jne
and
pop
mov
sarb
fs
dec
mov
cmp
ror
roll
in
adc
inc
subl
stc
lods
enter
pop
clc
inc
leave
mov
fdivr
mov
mov
jne
sbb
jnp
rorl
negl
das
andps
aad
imul
inc
dec
mov
adc
pop
inc
mov
lret
push
push
or
lock
sbb
mov
bound
lods
xchg
adcb
lret
sub
outsb
mov
stos
out
and
je
xchg
stc
mov
cmc
or
fbld
in
mov
add
fstl
push
sbb
in
fbld
out
inc
fs
stc
pop
test
mov
dec
pop
dec
popf
dec
cmp
fcomps
pusha
dec
nop
cmp
pop
push
popf
push
push
cmp
lea
ss
and
das
mov
mov
dec
pop
adc
push
cmp
mov
in
push
das
xor
cmp
lds
pop
test
xor
data16
add
or
mov
pop
rcrb
add
fimuls
mov
mov
stc
xor
repnz
inc
push
inc
jge
cmp
repz
sub
push
stc
inc
shl
mov
enter
push
pop
in
aam
sub
pop
lock
pop
insl
cmc
mov
push
inc
mov
test
adc
or
xchg
test
xor
aam
push
loopne
adc
and
in
inc
add
shlb
movsl
xchg
lods
ljmp
ds
aam
rcl
pusha
dec
xchg
pop
cli
arpl
imul
mov
jmp
push
dec
dec
inc
shrl
dec
lea
mov
sahf
mov
jle
pop
inc
mov
outsl
adc
test
pop
stos
imul
jmp
sti
popf
fucomip
sbb
cmp
or
loopne
sub
inc
scas
and
dec
sub
rcrb
push
adc
jno
xchg
xor
jmp
loope
jg
jae
shrl
inc
ljmp
mov
mov
fcompl
pushf
push
loopne
jne
add
mov
popf
int3
loopne
aaa
mov
xlat
insb
push
imul
pop
lret
pop
cmp
push
or
jo
mov
xchg
mov
add
shrl
insb
insb
std
dec
lret
bound
cmpl
insb
or
mov
pop
in
test
rorb
enter
pop
ret
lret
cmp
sbb
mov
cwtl
mov
push
movsb
cltd
loopne
subb
lods
shrl
in
aad
dec
mov
lahf
aam
cmpsb
push
out
pop
pushf
outsl
rcl
mov
das
xchg
dec
frndint
fisttps
xchg
xchg
por
inc
sbb
mov
mov
dec
and
sbb
inc
jnp
jecxz
popa
in
lahf
lahf
sar
pop
mov
jae
aad
sbb
sarb
jb
sahf
jnp
ret
push
xchg
out
lcall
fildl
jnp
js
xchg
std
sti
clc
mov
shrl
insl
xchg
xor
cld
arpl
cmc
xor
movsb
add
mov
fcmovbe
push
addb
cld
pop
dec
adc
xor
xor
cmp
add
xchg
pop
scas
bound
movb
mov
adc
rclb
jge
mov
push
sub
sbb
daa
pop
lahf
loopne
sbb
cltd
sub
xchg
mov
hlt
idivb
call
rolb
cmp
aam
cwtl
mov
ja
aam
push
stc
fidivs
inc
lods
pop
ds
enter
xchg
mov
pop
rcll
mov
push
jp
sar
out
xor
cmp
lret
in
pop
cmpsb
mov
bswap
xchg
xchg
sub
push
jno
push
loopne
ljmp
and
sub
pop
loop
or
out
push
insl
sbb
mov
out
mov
inc
leave
sub
xchg
cmp
lret
js
and
sahf
js
dec
js
sarb
cmpb
rcr
fiadds
pop
rolb
cmp
cmpb
cmp
push
jns
clc
lods
add
rcr
lock
mov
mov
xor
mov
mov
rcl
imul
sti
xchg
xor
mov
pushf
fimuls
jnp
pop
fildll
stos
and
inc
xchg
mov
out
repz
js
push
out
xor
sbb
dec
mov
xchg
pop
je
dec
es
pusha
and
mov
shrb
ret
in
xchg
imul
sub
icebp
pop
cwtl
dec
insb
lret
shll
dec
inc
aam
adc
or
fmuls
xchg
enter
cmp
add
xchg
aam
mov
jae
jp
inc
xchg
inc
rep
jp
and
xor
push
inc
iret
xchg
lcall
add
xor
sbb
push
jge
push
xchg
mov
sub
shrl
orl
mov
sbb
cmpl
sbbl
out
cmpsb
icebp
jnp
cmp
sbb
mov
outsl
movsl
cmova
mov
cld
in
mov
adc
stc
and
pop
jb
pusha
fdivrs
movl
jns
cld
rorb
jg
add
enter
push
aas
fcompl
je
inc
aaa
push
sahf
test
inc
inc
or
cmpsb
sbb
lret
insl
add
and
pop
loope
inc
xor
cmpsl
sbb
mov
cmp
and
das
scas
aam
lcall
fimull
fldenv
lret
dec
push
sahf
xchg
orb
xchg
pop
out
in
inc
sub
jns
mov
js
stos
sbb
jl
lock
mov
outsb
call
xor
jo
push
les
xchg
xchg
push
and
insb
sbb
and
cmp
mov
ret
sbb
push
ret
subb
fcmovnbe
aam
and
mov
addr16
aas
lods
adc
pop
pushf
rcrb
addr16
shrb
cld
mov
filds
mov
jbe
add
sbb
xorl
dec
xchg
adc
aam
pop
jno
in
aad
stc
mov
sbb
sub
aad
pop
mov
dec
data16
or
cmpsb
pop
ljmp
fisttpll
pop
adc
cmp
mov
shll
xchg
pop
xchg
mov
ljmp
andb
cmc
mov
mov
pop
mov
adc
repnz
push
dec
scas
enter
sbb
add
mov
mov
xchg
fimuls
in
jmp
lahf
popf
xchg
mov
nop
std
ljmp
mov
rcr
test
adc
idivb
xchg
jnp
lds
lds
lret
jp
mov
sub
rcr
mov
int
mov
jne
xchg
adc
scas
fisttpl
push
int
mov
and
xchg
es
out
in
pushf
mov
test
xor
mov
jb
pop
jmp
mov
add
rolb
mov
call
xor
das
adc
data16
insb
and
lret
stos
ja
mov
mov
mov
shlb
dec
ds
lock
dec
dec
loop
and
fbstp
cli
pushf
in
clc
dec
adc
push
lods
push
jno
push
pusha
jae
or
pushf
js
je
mov
sub
addb
std
ds
and
sbb
lods
lds
sub
xchg
xchg
rcl
pop
insl
push
outsb
repnz
cmp
mov
xor
outsb
sub
jb
and
insb
xchg
and
loope
adc
imul
rcl
cs
xor
jne
or
out
push
jnp
repz
rol
sbb
push
dec
scas
inc
ja
mov
shlb
and
adcb
dec
insl
xchg
push
mov
jle
pop
sbb
xchg
out
cwtl
mov
pop
lods
lret
or
lds
push
pusha
and
mov
add
repz
in
fs
cmpsl
mov
ret
jg
cmpsb
mov
sbb
sbb
mov
mov
sub
pop
loope
sub
rorb
sbb
jno
lea
add
add
loope
nop
pop
add
sbb
push
xlat
dec
fwait
lea
mov
js
mov
jecxz
pushf
imul
cmpsl
cmp
mov
rol
test
jo
push
outsl
jmp
inc
leave
push
jmp
iret
lock
aaa
sbb
mov
sub
push
sbb
inc
rcrl
sahf
scas
xchg
push
outsb
leave
inc
dec
and
ror
ja
push
test
cli
loope
xchg
rolb
mov
stos
cli
loopne
stos
pop
in
xor
mov
lcall
xchg
lea
xchg
push
jmp
and
loope
adc
inc
cmp
test
mov
je
pop
and
int3
and
mov
enter
loop
mov
sbb
hlt
fsubrl
mov
jns
jno
outsb
pop
fabs
popf
pop
add
add
out
out
mov
xchg
fldenv
imul
push
test
sbb
orb
test
int3
out
cs
push
rcrb
aas
loope
xor
xchg
pushf
call
mov
sub
or
in
fbld
jecxz
cmp
dec
lret
adc
mov
sub
inc
pop
das
pop
lahf
orl
ds
inc
cmp
out
punpckhbw
add
sbb
mov
push
add
neg
das
cmp
jo
or
paddd
mov
jg
xchg
mov
hlt
xchg
jecxz
mov
and
sub
arpl
mov
xchg
and
lea
shlb
sbb
pop
ljmp
lahf
jmp
xor
jmp
push
shll
andb
ds
jno
repnz
xchg
jno
imul
or
lods
out
add
cmp
jl
xchg
inc
out
mov
mov
stos
pushaw
dec
adc
pop
inc
ret
jne
lea
and
cwtl
add
fld
push
and
jbe
test
jne
pop
jge
cmpsb
mov
pop
stc
jb
lret
adc
out
push
outsl
jns
push
mov
shll
fcoms
insl
mov
adc
cwtl
lds
aam
sub
push
cmp
negb
and
leave
xchg
and
pop
mov
aas
adc
out
xor
sub
pop
mov
or
sbb
rcll
aaa
fs
int3
shlb
outsl
inc
xor
adc
or
shlb
jl
jle
cmc
in
xor
mov
shll
repz
mov
mov
fimull
into
adc
loope
or
lock
fdivl
test
xor
and
or
inc
aam
fdivs
pop
jne
aad
xor
loopne
pop
add
adc
fs
sbb
lret
or
daa
jbe
pop
or
ret
push
sub
xchg
ret
stos
or
push
adcb
cmp
addl
icebp
and
xchg
cmp
lahf
dec
stos
mov
jns
ficoml
adc
clc
loope
pusha
in
arpl
jmp
hlt
ret
pop
or
ljmp
mov
mov
cmpsb
jg
mull
push
mov
xor
jp
xchg
popa
adc
jbe
imul
repnz
nop
repz
repz
fs
lods
hlt
hlt
testl
fstpt
mov
and
add
out
inc
lcall
or
vmread
outsb
ret
adc
jmp
in
fwait
int3
add
cmp
roll
mov
fstl
sub
shrl
adc
inc
sbb
xor
lods
sub
std
test
das
mov
cmp
inc
pop
in
imul
pushf
adc
cwtl
push
lock
push
dec
push
mov
xchg
add
sub
cmpsb
pop
ficoms
test
lcall
fidivrl
call
pop
sti
rcll
dec
lods
xchg
clc
orl
inc
sahf
sub
mov
inc
sbb
aas
or
sub
lds
adc
mov
cli
push
femms
cwtl
push
push
xor
pop
adc
sub
cmp
mov
arpl
fcoml
dec
pop
push
in
dec
add
push
xor
xchg
popa
das
andb
push
imul
lret
mov
xor
push
mov
jmp
pusha
stc
jge
andps
fdivs
dec
mov
scas
cmp
sub
cmpb
adc
jmp
andl
scas
xor
adc
mov
mov
add
bound
sub
adc
push
push
idivl
xor
pusha
aad
sbb
jb
xchg
sbb
insb
pop
sub
addr16
imul
shl
int
adc
pop
scas
es
rcll
mov
mov
cmp
fmull
and
pop
inc
shrl
mov
cmpsb
cs
out
mov
das
mov
xor
push
mov
push
cmp
cltd
out
into
add
insl
je
dec
mov
sub
add
imul
test
in
mov
pop
pusha
xchg
mov
inc
inc
inc
insb
outsb
lret
sub
ret
mov
data16
jp
add
int3
adc
sbb
and
pop
clc
lcall
in
gs
inc
iret
orl
scas
mov
test
inc
xor
sbb
mov
ljmp
icebp
jbe
ja
mov
test
adc
mov
cmp
cmc
xor
cmpsl
shll
sub
stc
test
lret
mov
test
inc
lock
push
aam
pop
in
mov
cli
lods
sahf
mov
in
int
fs
sbb
jle
xchg
addl
pop
lahf
push
lds
push
fmulp
adc
lcall
into
cmp
sarb
iret
imul
jns
mov
add
jl
or
sbb
cmp
sbbl
mov
js
xchg
imul
mov
mov
or
pop
push
pop
sbb
push
cmp
and
cwtl
xchg
push
in
cmp
fcmovnbe
jmp
jae
sub
ja
cs
pusha
adc
cmp
sbb
mov
test
sahf
lock
outsl
push
or
xor
jnp
jg
loop
sub
pop
dec
in
mov
mull
add
xchg
push
pushf
adc
mov
cltd
shll
idiv
push
cmp
sbb
ret
mov
shll
and
cmp
sbb
xchg
cmp
xchg
dec
test
jmp
ret
or
xorl
xchg
inc
and
cld
daa
sbb
xchg
xor
inc
adc
test
fsubl
out
xor
cmp
dec
mov
dec
loope
lahf
call
test
out
idivl
dec
xor
sahf
fldt
dec
mov
pushf
in
test
add
adc
and
push
inc
jo
or
pop
mov
lds
stc
fidivrs
or
jb
test
scas
js
sub
mov
outsl
test
pushl
rcrb
call
mov
mov
js
mov
xor
cmpsb
popf
dec
fbld
fimuls
pop
xchg
pusha
out
cmpl
jb
imul
call
dec
pop
fidivs
sti
xor
mov
shll
push
scas
idivb
sbb
paddsb
sti
push
jp
pop
popf
jp
jne
mov
in
ljmp
lcall
pop
subl
xor
cmp
pop
fsubl
pop
in
push
and
jp
pop
inc
jge
adc
xchg
jmp
xor
inc
cwtl
mov
frstor
ret
repz
pop
cwtl
sub
and
orb
add
movsl
cmpsb
fnstcw
shlb
aas
out
inc
imul
pop
pop
clc
pop
mov
mov
mov
push
xor
mov
inc
sub
roll
mov
pop
xchg
cmpsl
ret
xchg
mov
test
in
insl
jle
sub
dec
sbb
xor
and
mov
add
add
cmp
mov
fbstp
lods
lret
inc
pop
inc
subl
jl
sahf
mov
ret
cld
xor
loopw
or
imul
inc
and
jo
lcall
add
pop
gs
out
repnz
roll
push
bound
cmpb
cwtl
jne
daa
and
data16
and
dec
inc
push
jno
in
fnstenv
leave
insb
pop
cmp
mov
ljmp
or
inc
fs
call
adc
xor
push
cmp
lret
mov
adc
mov
xchg
pop
hlt
fld
filds
sub
mov
lcall
scas
jno
pop
push
lret
inc
dec
test
lods
bound
sub
sbb
xor
shlb
addb
mov
ret
dec
mov
icebp
mov
push
neg
filds
lds
aad
call
mov
lcall
ret
add
sahf
ret
jge
pop
jmp
std
inc
add
lds
cld
jg
pop
ljmp
adc
pop
pop
inc
loop
inc
xor
adc
mov
mov
ja
or
dec
dec
bound
rorb
xorl
lea
out
or
popa
jns
mov
mov
fcomps
scas
inc
jmp
sub
aad
adc
shll
dec
dec
addr16
mov
lods
fwait
pop
fists
jbe
lock
in
mov
ja
inc
sbb
ds
es
clc
fisubrs
xor
push
aad
jg
sbb
inc
and
dec
daa
mov
sub
sub
cmp
ja
repz
test
dec
and
test
push
test
mov
rorl
ret
fldcw
push
pop
imul
mov
fs
fcomps
or
sbbb
daa
shrl
push
sub
cmp
dec
pop
pop
add
ljmp
in
sbb
shrl
movsl
adc
xchg
stc
rcr
mov
sahf
jbe
ror
popf
ljmp
test
push
imul
ss
xor
jbe
xor
and
jge
mov
inc
and
mov
cmp
lahf
dec
xor
int3
xchg
mov
sbb
xchg
jno
xchg
outsb
adcl
movsb
daa
cmp
dec
sti
push
mov
int3
out
jmp
adc
mov
mov
rolb
scas
outsl
enter
scas
test
loopne
mov
mov
xor
push
test
mov
gs
ret
sar
imul
das
ret
lock
pop
mov
test
or
das
arpl
push
sbb
jge
ds
push
sub
out
xlat
mov
adc
xchg
insl
iret
xchg
push
add
scas
xchg
sarl
ljmp
xchg
sbb
dec
mov
and
xor
and
enter
pusha
cld
data16
sbb
js
cltd
and
xchg
push
and
std
loopne
loopne
sahf
add
int
inc
cmp
cmp
mov
mov
add
lods
into
push
jbe
lret
adc
mov
movsl
cmc
lods
or
cmp
jo
cmp
out
insb
pop
xchg
mov
sahf
xor
cmp
mov
in
out
dec
repnz
or
push
repz
int
jno
jle
int3
sbb
sbb
in
xchg
cmpsb
sti
cmpsb
xor
push
pop
push
mov
jl
loopne
cs
push
fistps
rcrb
clc
outsl
cmc
imul
sub
pushf
mov
dec
cmp
fimuls
js
dec
call
clc
dec
xchg
pop
jne
cld
dec
scas
inc
and
stc
das
xor
in
push
in
pop
jge
je
inc
psubsb
mov
clc
jo
mov
movsl
notl
lods
pop
lahf
xchg
xor
addr16
sahf
xchg
divb
pop
inc
mov
dec
das
jne
sbb
pop
and
leave
fistl
jmp
lret
fisttps
roll
rol
mov
cmp
lret
jb
pop
test
arpl
idivl
pop
pop
mov
sbb
mov
cltd
ds
orb
ds
subb
sbb
xor
ljmp
stos
lret
in
lods
cmp
cmp
xchg
and
les
xor
sub
loope
loope
ret
ja
add
mov
cld
jmp
or
jge
inc
rcll
int
adc
push
inc
inc
or
ja
mov
mov
mov
in
sub
or
fs
fsubs
jle
push
jl
sbb
loope
lea
out
add
in
pushf
xlat
cmp
xchg
inc
mov
rolb
sbb
sahf
dec
data16
movsb
in
enter
pop
rcll
sub
fisttpll
inc
mov
dec
jge
mov
xor
mov
mov
push
push
add
rcr
fdivrl
mov
pop
jle
in
test
jp
sti
cmp
into
clc
ret
jne
mov
mov
pop
in
add
insl
loope
stc
add
fdivs
int3
frstor
mov
xchg
add
or
xchg
adc
mov
sbb
sub
jmp
or
fists
mov
dec
rcrb
call
sub
jns
jne
xlat
mov
cmpsb
negb
mov
xlat
dec
fstl
negb
in
and
popf
xor
lods
jb
cli
add
jo
outsl
scas
push
inc
ret
andl
fisubs
cmp
push
rol
loope
sub
jo
lods
jnp
mov
es
leave
push
insb
pop
jbe
pusha
fnstsw
out
jp
pusha
lea
rorb
jge
jl
add
enter
cltd
sub
mov
inc
adc
shll
ficompl
and
mov
push
jg
mov
outsb
jne
inc
into
mov
scas
ret
add
sarb
jns
or
mov
xchg
arpl
add
std
daa
xchg
push
int
mov
adc
icebp
cmpsl
imul
dec
inc
pop
int
nop
mov
adc
popf
mov
das
cltd
jle
and
scas
mov
ss
daa
ljmp
jb
scas
js
ds
mov
data16
lds
test
inc
movsb
cwtl
loope
dec
sbb
dec
in
cmc
xor
sub
fs
add
repnz
mov
leave
shl
loope
sahf
cmpps
jl
adc
pop
rorb
outsl
add
add
jge
mov
lret
sbb
pop
cmpl
int3
les
clc
shr
pop
clc
repnz
fistl
ss
xor
andb
dec
sti
inc
cmp
inc
cmp
out
cwtl
fcompl
ficompl
inc
and
jbe
jp
add
mov
jo
add
lods
push
dec
pop
cmp
pop
mov
adc
sub
sub
xor
nopl
out
cwtl
testb
or
lods
cmp
xchg
outsl
sub
fistpl
in
cmp
xor
mov
dec
fidivrs
pop
sub
dec
sbb
in
inc
mov
adc
cld
ficoml
inc
pushf
in
cmp
add
repz
repnz
std
ja
pop
lea
cwtl
mov
cmp
inc
mov
inc
repz
sbb
mull
lret
arpl
xor
cmovp
cmp
cmp
pop
ss
sahf
mov
push
cmp
in
push
lret
lods
stos
rorb
mov
jp
jb
add
xchg
push
jnp
cmp
xchg
fidivrl
jb
fs
nop
es
iret
pop
js
fcmovbe
repnz
jg
mov
sti
lahf
popa
cld
inc
xchg
cs
aad
mov
into
and
sbb
xor
nop
lret
fmuls
and
xchg
mov
hlt
mov
cmpsb
cmp
lahf
or
xchg
div
xor
ret
jnp
mov
ficoml
or
jns
bound
insl
clc
mov
cld
mov
sbb
in
push
in
push
jl
je
pop
dec
les
stos
bound
and
pop
xchg
daa
rcrb
mov
sbb
push
movsb
sub
dec
repnz
aad
inc
popa
ja
popa
fnstenv
imul
mov
mov
cwtl
out
fisubs
test
xor
and
dec
stos
add
xlat
xchg
pop
xor
mov
cmp
stc
and
nop
mov
addr16
jp
cmp
xor
mov
add
movsb
inc
xor
clc
incb
lcall
cmp
scas
push
dec
sahf
adcb
push
aas
test
mov
das
or
pop
fwait
cmc
out
dec
push
push
std
cmp
fidivs
cmpb
xchg
mov
nop
inc
stos
xor
mov
in
fidivrs
fidivrs
mov
add
nop
inc
int3
xchg
xchg
cmpsl
pop
data16
ja
adc
push
lods
repnz
mov
ror
jle
fimuls
out
out
ret
je
sub
dec
fistl
pop
cmpsb
and
aaa
fnstsw
js
jecxz
and
out
push
ss
fisttpl
cmpsb
xorl
jne
aaa
and
adc
inc
or
cwtl
push
in
les
rol
mov
jmp
stc
dec
addr16
loope
das
dec
xorl
cs
cmp
adc
sub
in
in
ret
inc
mov
popa
je
cmp
mov
popa
dec
sbb
test
in
mov
ja
pop
xor
dec
scas
pop
sub
xchg
dec
in
xchg
add
mov
pop
lcall
jne
add
movsl
aaa
test
in
pushf
mov
test
pop
in
mov
mov
popa
pop
adc
pop
sub
cmp
sbb
jecxz
add
pop
out
inc
sbb
pop
bound
loopne
arpl
es
add
mov
ret
cvttps2pi
lods
imul
cli
push
jmp
push
nop
or
jge
sub
test
roll
push
lock
inc
sbb
mov
pop
scas
in
adc
rcll
bound
mov
negl
imul
movsb
mov
fsubl
sub
mov
cs
dec
or
jle
fisubs
movsl
cmc
xor
pop
dec
lret
lret
push
jg
cwtl
push
and
or
daa
and
lock
cmpsl
sti
outsl
and
push
cmp
pop
sub
mov
mov
push
inc
rorl
out
pop
add
mov
mov
jnp
jl
xor
jp
sbb
xchg
rcrb
lods
gs
pop
mov
aas
mov
dec
jge
inc
test
dec
jb
cwtl
roll
and
jb
leave
stos
cmc
adc
pop
jb
sarl
pop
das
loop
xchg
xchg
aas
lcall
mov
popf
dec
cld
stos
popf
call
in
fisubl
enter
push
fwait
addr16
sbb
cs
aad
cmc
adc
inc
mov
xchg
les
xor
or
jne
into
test
fwait
jle
call
adc
fldenv
out
iret
clc
out
inc
test
out
jo
bound
xchg
and
add
stc
cmp
insb
test
cmc
jmp
or
repnz
xor
mov
pop
dec
imul
mov
adc
or
outsl
push
mov
out
lock
test
jecxz
jmp
int
lock
divb
in
cs
arpl
pop
std
mov
jns
sub
pop
call
incl
sub
js
xlat
add
leave
fidivl
gs
stos
xor
cmp
push
pushl
loopne
sbb
xchg
fwait
imul
push
cmpsb
sbb
sub
fstpt
sub
add
mov
jl
aas
cmp
cmp
cltd
fistpll
cmp
mov
mov
xchg
fldcw
xorl
pop
pop
lahf
jbe
aaa
mov
dec
sar
inc
xor
push
jno
stc
inc
sar
xchg
sahf
lods
jle
mov
pop
rorl
dec
mov
and
pop
jae
xor
or
popa
push
enter
ret
and
pop
cmp
roll
fwait
sub
test
inc
jle
mov
lahf
into
aam
pop
lcall
aam
fwait
lret
sub
ds
mov
jl
test
fsubrl
stos
xor
daa
flds
insb
sub
insb
inc
imull
pop
dec
ss
popa
int
adc
mov
and
xchg
jns
fstpl
dec
jle
and
loop
inc
inc
std
sub
rcll
mov
or
daa
pop
sub
lods
or
stos
mov
js
add
pushf
mov
shll
pusha
pushf
jnp
jle
arpl
lcall
mov
ds
data16
mov
mov
adc
sbb
adcl
les
lds
mov
jmp
aad
mov
pop
enter
mov
into
cmpsb
xchg
scas
push
dec
inc
fwait
and
popf
scas
cmpb
jp
fadds
or
cmpsb
lret
cmc
lret
xchg
repnz
imul
push
pop
xchg
popf
test
and
mov
cmpsl
outsl
add
jnp
or
pop
add
mov
ret
imul
pop
arpl
std
sti
rorb
repnz
pop
mov
leave
mov
cwtl
into
hlt
ljmp
and
popf
lods
jnp
dec
sub
mov
fstpt
ss
ss
or
jb
lods
es
or
jnp
dec
loop
arpl
jle
sbb
int3
movsb
cmpsb
sub
mov
cs
inc
call
mov
sbb
in
popa
xchg
ficoms
adc
mov
mov
sbb
js
iret
inc
and
xchg
imull
shlb
sub
jl
clc
ret
sub
add
push
xchg
movsb
fwait
push
inc
test
cmp
insl
je
mov
into
divl
xchg
les
ja
mov
push
mov
dec
cmp
jmp
xchg
cmp
je
cs
push
or
ss
and
arpl
adc
sbb
gs
xchg
or
mov
mov
xchg
cmp
push
pop
addl
fistl
jne
dec
out
sarb
ss
dec
jae
lods
das
cli
into
pop
clc
out
sbb
dec
mov
hlt
leave
fisubrl
in
outsl
in
cmp
cmp
jae
mov
std
inc
sbb
daa
jns
mov
loope
daa
and
xor
inc
aad
dec
and
fwait
xor
test
ja
inc
sti
in
xchg
ja
fistl
mov
movsb
xchg
lods
std
lds
mov
push
xor
sub
sub
and
push
in
xchg
fiadds
mov
xchg
or
pop
jnp
movsl
jp
cmp
scas
xlat
ror
push
aad
hlt
add
cmp
add
push
adc
out
xor
daa
jmp
shrl
movsl
push
xchg
ljmp
cmc
gs
cmpl
call
mov
mov
daa
mov
pop
xor
ss
ja
mov
enter
scas
popf
push
das
jp
inc
xchg
ret
sub
xchg
sbb
arpl
lahf
enter
out
ljmp
sahf
mov
xor
inc
call
xchg
fisubrl
jbe
ljmp
int
push
mov
mov
inc
lahf
xor
out
jmp
fisttps
sti
pop
pop
scas
inc
les
in
jno
scas
mov
ret
cmp
jne
fldcw
pop
or
repnz
pop
scas
push
shr
loopne
out
pop
mov
ret
insb
lds
paddsb
pop
cwtl
mov
adc
shrl
xchg
mov
xchg
daa
imulb
cmp
mov
in
hlt
dec
popa
pop
icebp
and
jl,pn
repnz
push
call
test
xchg
xchg
adc
dec
sahf
cli
mov
sub
xchg
mov
xchg
in
gs
test
sub
int
adc
cld
xchg
inc
mov
mov
push
arpl
aas
inc
jns
call
arpl
push
lea
and
cmp
repz
jecxz
inc
cmp
adc
popf
and
xor
shl
adc
mov
ror
and
push
loopne
xchg
inc
loop
lahf
push
repz
cltd
ret
sub
lock
jbe
cmp
mov
fs
xorl
fnstenv
fxch
ret
popf
jae
insb
mov
and
push
mov
pcmpgtw
add
pop
push
inc
out
scas
jns
xchg
in
in
xchg
je
pop
pop
int
jle
out
shr
clc
pop
mov
subb
out
mov
fsubr
enter
add
sub
lods
mov
push
adc
repnz
inc
imul
cmp
imul
aaa
add
jae
movsl
xor
mov
inc
mov
lods
or
test
lods
sub
dec
pop
pop
stos
out
or
push
xchg
xchg
sub
mov
and
movb
loope
shlb
sub
sub
addl
inc
push
aas
or
ss
bound
dec
sti
in
pop
fdivl
mov
xor
ss
inc
jae
mov
or
test
add
test
sub
or
sub
push
jmp
movsl
movsl
jmp
cwtl
hlt
cwtl
mov
adc
cmpsb
add
addr16
push
sti
lea
lret
fcmove
sub
and
lcall
mov
andl
pop
pushf
int3
xor
sbb
inc
cmp
mov
inc
mov
sahf
mov
jmp
outsl
xchg
mov
loopne
jecxz
test
xor
loop
and
mov
add
andb
out
or
mov
movsl
pop
ljmp
and
stos
jns
fstps
sub
mov
sbb
sub
xor
push
jbe
xlat
xchg
mov
jno
sub
sub
aaa
mov
fdivr
pusha
imul
xchg
xor
sbbl
lock
clc
gs
inc
cld
pop
insl
mov
jge
sahf
dec
jg
mov
add
ficoml
mov
fdivrl
das
mov
sarb
fimull
cwtl
jnp
and
mov
dec
pusha
sbb
popf
xchg
mov
movsl
dec
dec
push
sbb
mov
push
stos
mov
sbb
leave
pop
sbb
cmp
dec
mov
adc
outsl
fstpt
push
test
fldl
cmp
inc
xchg
sub
testl
push
add
push
mov
lret
add
push
mov
push
pop
jnp
pop
movnti
fwait
pop
dec
mov
ljmp
mov
mov
repz
js
push
fwait
in
notb
mov
nop
mov
dec
mov
daa
xor
inc
jbe
sub
jbe
bound
loopne
jmp
cmp
xchg
call
mov
cld
or
push
push
push
adcb
je
xchg
sub
mov
int
jno
add
mov
je
cltd
lods
loope
aaa
loope
push
pop
dec
cmc
cld
imul
cmpl
scas
sbb
mov
inc
sub
dec
inc
sbb
adc
xor
sbb
cs
or
push
test
divl
xchg
scas
sub
push
adc
mov
xor
int
hlt
pop
ret
aam
icebp
cs
pop
stos
ljmp
or
imul
sarb
std
mov
cmc
xchg
pop
fisttps
push
nop
add
movl
pop
add
out
push
pop
popa
sbb
xor
push
hlt
cmpsl
sti
and
jp
nop
pop
pop
xor
lret
mov
into
cmp
push
jge
movsl
pop
pop
js
or
or
sbb
pop
jecxz
je
mov
fcoms
mov
and
enter
sub
mov
pop
nop
call
sbb
mov
mov
sbb
lock
and
outsb
shlb
mov
xor
pop
xchg
mov
out
cld
lcall
enter
mov
mov
sub
ret
arpl
hlt
imul
fnstenv
sbb
inc
fwait
dec
mov
jl
pop
or
insl
sub
sbb
xchg
andb
sbb
push
movsl
xchg
out
ljmp
ljmp
inc
iret
test
push
lods
ficoml
rcll
aas
or
pop
sbb
enter
inc
inc
add
xchg
popa
dec
loop
mov
xchg
mov
jbe
mov
lock
jno
sub
xchg
loop
insl
xor
fs
xchg
push
stos
mov
fstpt
sub
lcall
movsb
loopne
pop
jae
inc
and
rsqrtps
mov
shll
gs
or
cmpsb
xchg
pop
push
int3
jl
and
push
leave
lret
sbb
sbbl
xchg
mov
or
loopne
sahf
inc
mov
lds
mov
jg
mov
iret
or
roll
dec
add
jecxz
mov
jbe
jbe
sub
les
dec
cmp
xor
mov
lret
insl
test
xadd
outsb
xchg
push
subl
les
ret
dec
push
jmp
mov
js
mov
cld
loope
movsb
stos
cmp
xor
push
cld
jecxz
insb
adc
add
lret
jae
sbb
movb
sub
inc
xor
pop
cmp
out
push
out
add
in
xchg
xlat
out
cmc
test
lret
popa
fisubrl
adc
in
dec
out
inc
cmp
mov
lcall
sub
sbb
mov
in
std
pop
mov
ss
cs
mov
fidivl
enter
mov
repz
mov
out
dec
idivb
jg
imul
pop
pop
dec
popf
mov
adc
pop
sub
je
xor
jo
add
lcall
daa
lods
sub
push
shll
push
mov
xor
and
sbbb
mov
inc
pop
xchg
imul
ljmp
and
mov
lret
jecxz
stc
and
jno
ja
mov
pop
xchg
pop
in
enter
pop
sbb
or
loop
ja
xor
mov
insb
adc
xor
rolb
lahf
rcrb
dec
or
mov
adc
jne
sbb
movsb
cli
scas
outsb
sbb
sti
cmp
or
stos
mov
loopne
jp
icebp
add
addr16
ja
mov
aam
ja
jne
fsub
lea
pop
xor
outsb
mov
pop
out
jne
mov
inc
pop
aas
xchg
mov
scas
lcall
and
loope
rcr
hlt
mov
cwtl
aam
cmc
adc
sarb
add
mov
test
or
std
cmp
xor
jne
mov
idivl
pop
jge
inc
adc
ficompl
push
test
xchg
xor
inc
stc
lock
cltd
shr
cmpsl
cmpsb
jl
lods
imul
cli
jge
sbb
xor
gs
das
add
and
mov
cli
and
xchg
mov
mov
stos
dec
cmc
push
sub
xor
lock
popf
jnp
lret
jnp
fstl
cmp
scas
out
mov
nop
sub
mov
mov
ds
test
lret
js
jnp
jecxz
fisttpl
fs
movsl
insl
aam
inc
cld
in
push
fbld
dec
jmp
inc
clc
or
mov
xor
pop
cltd
pop
and
push
xor
inc
iret
ret
cmp
jecxz
or
push
and
imul
mov
insb
test
xchg
test
and
jno
pop
mov
int3
sub
mov
sbb
mov
stos
frstor
loope
jnp
imul
xor
inc
loope
out
and
mov
dec
loopne
pop
push
lods
sarb
cli
jl
hlt
mov
shll
xchg
ljmp
aad
movsb
pop
push
mov
cmpsb
flds
push
xchg
std
stc
jecxz
leave
popa
dec
dec
js
fnstcw
ss
push
dec
sub
data16
imull
ljmp
jge
xor
jbe
stos
cmp
lcall
pop
test
inc
in
lret
popf
adc
push
xlat
mov
adc
daa
pop
lods
adc
push
dec
int
cmovnp
cmc
es
sub
or
adc
mov
lods
dec
add
xlat
pop
fwait
xchg
or
inc
repnz
lahf
fwait
and
sbb
arpl
jb
in
mov
stos
loopne
ja
mov
popf
in
repnz
sub
push
pop
hlt
dec
in
sub
pusha
lgs
adc
es
xor
push
xchg
and
cmc
or
dec
mov
jno
shlb
mov
pop
pop
pop
out
or
shrb
fcomi
xchg
and
sbb
in
add
inc
jb
mov
dec
movsl
movsb
pop
loopne
popa
jmp
mov
xor
xor
jnp
and
lock
push
lock
jns
push
mov
mov
ret
dec
mov
out
out
ss
in
into
inc
jge
ja
mov
push
adc
inc
in
and
or
sbb
dec
mov
out
sub
and
lods
repz
push
sbb
sub
insb
push
lcall
pushf
out
or
scas
shlb
push
dec
push
push
add
jle
cmp
jbe
js
pop
or
mov
cmp
dec
xor
scas
mov
sub
inc
ss
lea
ja
add
dec
loope
lret
ret
push
push
xor
lods
mov
in
and
mov
jecxz
sub
rolb
daa
stos
sub
cmp
fistpll
ljmp
sub
out
ljmp
xor
xor
and
popa
sbb
sbb
adc
xchg
xor
mov
es
jp
mov
and
imul
mov
adcl
call
pop
jb
cmp
xlat
jne
sbb
lea
testb
imulb
icebp
nop
pop
outsl
movsl
repnz
insb
mov
adc
rclb
jmp
and
xor
out
xchg
cmp
test
shlb
xor
xchg
popl
stos
repnz
jp
testl
data16
push
adc
test
emms
inc
in
orl
jecxz
mov
int
aam
fsubrs
sub
out
or
rorb
cmp
jle
add
cmp
ss
add
dec
aad
cld
inc
pop
out
pop
movb
les
xchg
enter
imul
addb
cmp
xorb
enter
scas
pop
sbb
dec
popa
jo
popf
cmc
inc
pop
mov
add
ffree
or
jo
mov
scas
pshufw
jno
jne
inc
xor
lods
lods
jmp
rclb
and
or
adc
mov
jecxz
jge
out
inc
or
shll
and
lahf
mov
jle
and
in
mov
add
xchg
or
cmpsl
pop
xchg
mov
xor
jle
rcl
jmp
and
mov
popf
pop
mov
out
clc
adc
xor
mov
aas
ret
push
inc
popf
pop
xchg
sbb
imul
addl
fsts
movb
fdivp
cmc
jecxz
int3
or
mov
stos
es
pop
inc
jmp
dec
xchg
arpl
dec
scas
add
shrd
shrl
lret
clc
daa
das
fldcw
dec
mov
inc
aas
or
notb
cmp
push
cmpl
jns
sbb
cmpsb
fisttpll
test
jle
sub
pop
mov
pop
fdivl
lods
popa
pop
xchg
push
inc
mov
adcl
sbb
adc
fisubrl
add
dec
or
cli
cmp
xor
clc
pop
mov
pop
test
in
inc
pop
mov
push
lcall
push
ljmp
bound
mov
mov
push
cmpb
xor
ljmp
jge
inc
jae
cmc
sar
cmp
ja
mov
ss
out
rolb
inc
mov
pop
mov
push
adc
lcall
inc
mov
aam
andl
inc
and
mov
or
sbbb
fnstsw
js
push
ret
imul
jae
popa
out
out
lahf
push
cli
js
ja
mov
lods
adc
cmp
xchg
mov
aad
or
sub
cmc
out
ljmp
and
movsb
fstps
mov
dec
dec
int3
push
ss
mov
mov
loope
test
in
pop
inc
xchg
outsb
push
into
xchg
or
dec
or
scas
lods
or
pause
push
mov
jle
sub
add
xchg
stc
scas
jecxz
fstps
mov
push
or
xor
cli
fcoms
sbb
and
outsl
lahf
adcb
dec
je
ja
mov
outsb
ds
mov
push
and
xor
in
scas
ljmp
sahf
lret
ret
push
xchg
out
mov
add
ffree
rorl
test
faddl
insl
push
arpl
ja
pop
lock
cmpb
gs
push
inc
and
mov
ss
mov
lods
jno
lea
inc
dec
aam
xor
mov
je
fs
inc
insb
into
lahf
ret
outsb
test
pop
repnz
inc
dec
in
jge
push
push
mov
xor
mov
mov
movsb
lret
test
int3
and
fs
fisubl
jp
mov
ljmp
sbb
dec
loopne
lret
push
xorl
pusha
jo
jecxz
inc
xchg
or
dec
dec
loope
ss
push
pop
insl
mov
add
jle
mov
sub
nop
subb
stos
pop
int
dec
pusha
imul
mov
or
mov
iret
mov
fimuls
xchg
sbb
or
xchg
data16
xor
sub
subl
testb
xchg
or
lock
mov
push
pop
insl
sti
popa
shll
mov
xchg
dec
insl
or
add
popa
cltd
adc
or
inc
shl
sbb
ret
popf
cmp
int3
testl
pop
cli
xchg
test
inc
rorl
sti
inc
scas
jb
insb
fisttps
push
mov
pop
or
cld
or
push
and
jbe
dec
fsubrs
popa
ret
add
add
test
pop
lret
jg
sub
ficoml
sbb
shrd
push
je
jg
loopne
aas
hlt
adc
call
pop
fistpll
outsl
dec
adc
sar
loop
sbb
pop
jae
out
pop
shlb
orl
inc
jp
adc
adc
mov
cli
fbld
imul
mov
inc
movsb
pop
fwait
and
push
or
iret
dec
lods
arpl
repz
push
sub
leave
clc
inc
outsl
mov
outsl
pop
ficompl
jno
cmp
out
mov
movsl
sbb
js
inc
mov
cwtl
jmp
fistpll
leave
mov
sti
insb
invd
nop
sub
xor
test
pop
popf
insb
jle
in
xchg
push
or
lret
lret
inc
je
loopne
dec
jne
in
lods
dec
dec
fimull
pushf
or
add
mov
or
sub
loop
movsb
clc
push
subb
out
pop
pop
lods
cld
cmp
int3
movsl
inc
shlb
mov
addr16
dec
mov
popa
cltd
sub
inc
cmpsb
scas
loop
mov
loope
inc
push
push
data16
insl
pop
out
add
dec
cmp
lds
shl
orl
xor
sub
xchg
aad
cmp
mov
inc
shr
push
sarl
add
pop
lds
or
lret
cmp
jmp
dec
xor
push
sub
pop
aas
iret
jmp
addr16
pop
xor
lret
adc
inc
pop
push
push
das
pop
xchg
loopne
in
inc
or
adc
ljmp
mov
lea
xor
sahf
lds
inc
fnstsw
or
ljmp
dec
dec
arpl
insb
movsl
pop
cmp
out
arpl
mov
add
addr16
int
lds
mov
xchg
je
mov
and
push
outsl
mov
inc
shrb
xor
les
int
lods
push
frstor
mov
dec
pop
mov
test
or
ja
push
pop
scas
or
jnp
and
pop
in
cmp
inc
push
jns
mov
leave
or
lds
pop
aas
movsb
pop
fisttps
and
nop
imul
pop
or
dec
mov
cs
stc
mov
mov
or
and
dec
sbb
dec
repz
cmp
into
pop
in
mov
lods
dec
or
inc
js
sarl
xor
std
lock
faddl
mov
push
cmp
ret
jl
push
insl
jns
sbb
cli
in
mov
xchg
cli
fwait
add
dec
cs
push
push
js
lea
paddb
into
mov
sbb
and
std
fcmovne
cmp
iret
scas
stc
daa
cld
xchg
dec
cmp
mov
push
pop
lret
jmp
loope
js
mov
inc
dec
xchg
aas
push
adc
add
imulb
ljmp
jmp
sti
fistl
test
sti
mov
jno
enter
roll
iret
mov
add
movsb
pusha
iret
scas
data16
into
icebp
xchg
fwait
pop
adc
or
iret
sub
mov
pusha
push
mov
jae
notb
mov
daa
mov
inc
loop
test
cmp
dec
cmp
es
cmp
sub
repz
jbe
insb
add
popa
lds
xor
xor
cmpl
mov
inc
and
sbb
dec
in
lcall
lcall
mov
adc
or
adc
add
jbe
rclb
add
imul
cmp
mov
rclb
jp
add
fidivrl
js
cmp
pop
stc
clc
leave
mov
sub
data16
mov
or
push
nop
fistpll
or
mov
sbb
dec
dec
sbb
loop
push
or
lods
outsl
jg
lret
daa
cmp
aaa
pusha
lret
pop
push
hlt
in
xor
dec
test
jge
aam
scas
push
pop
jmp
inc
aas
pop
pop
mov
pop
cmp
insb
dec
mov
imul
outsl
clc
adc
repnz
adc
fisttps
mov
mov
into
push
out
jne
adc
push
dec
cmpsb
mov
ljmp
mov
inc
adc
or
cmp
test
pop
leave
inc
push
xchg
sub
adc
cli
mov
scas
xchg
out
dec
add
out
cmp
dec
stc
hlt
dec
xchg
les
push
adc
add
mov
jae,pn
enter
xchg
sbb
push
jbe
jl
xchg
ficoml
xchg
nop
fnstenv
jl
out
add
adcb
cmp
add
je
ljmp
int3
or
mov
add
dec
mov
call
add
push
loope
push
div
call
jb
aad
hlt
xchg
or
add
mov
loopne
insl
iret
scas
sub
dec
fwait
mov
xchg
mov
test
fsubl
test
cmp
pop
cwtl
mulb
dec
cmp
leave
incb
fiadds
dec
and
int3
mov
adc
xor
arpl
mov
das
pop
push
push
sahf
mov
lret
adc
sbb
test
mov
dec
mov
rcrb
dec
fistps
std
fnclex
fmull
jmp
std
fidivs
gs
daa
push
ret
out
rcll
mov
cltd
dec
inc
stc
dec
sbb
dec
stos
pop
sub
pop
pop
iret
cmp
pop
insl
mov
xchg
loopne
fcmove
pop
pop
mov
repnz
or
pop
or
pushf
mov
loopne
andb
mov
add
stos
ljmp
jl
lret
pop
mov
lea
add
sbb
aam
cs
rorl
xchg
cwtl
test
das
test
aam
pop
ljmp
jns
add
outsl
xor
movsl
sti
mov
frstor
lcall
minps
lcall
cmc
cld
int
leave
add
in
int3
pop
mov
ret
cs
roll
mov
jl
js
pushf
or
cmp
cld
mov
bound
dec
mov
mov
js
test
shll
sub
xchg
cmp
inc
push
sbb
jno
cmp
jecxz
aad
jo
lods
incl
pop
in
push
cmp
and
into
movswl
jp
add
nop
pusha
inc
sbb
adc
sub
jae
cld
lahf
adc
in
inc
xchg
shll
jns
cmpsb
sbb
fisttpl
xor
test
out
out
divb
pop
mov
lahf
cmp
leave
lcall
inc
adc
hlt
xor
mov
lret
push
sub
xchg
add
mov
lea
inc
pop
lea
popf
add
pop
dec
cli
dec
pop
mov
and
mov
js
mov
loope
add
mov
sub
or
add
jo
lds
mov
in
adc
aam
inc
pop
mov
push
lcall
mov
test
jnp
jb
cmp
fsubrl
pop
jns
lock
mov
aaa
cltd
pop
pop
xor
imul
shlb
or
test
stc
cmp
xchg
jg
push
enter
sbb
enter
iret
lret
jp
stos
adc
cltd
test
pop
cs
dec
mov
push
push
mov
outsl
into
add
test
jne
or
cwtl
jge
sbb
sbb
insb
ror
and
sti
addb
fstps
bound
add
xor
cmp
scas
fs
add
or
aad
or
pop
daa
push
or
xor
push
imul
mov
out
xchg
dec
and
vmread
das
mov
repnz
test
outsl
loope
nop
scas
fs
leave
das
jae
das
arpl
push
xchg
test
inc
xchg
sbb
push
lahf
xor
xchg
lods
push
xchg
mov
or
test
dec
push
pop
mov
cmovo
add
cmpsb
loopne
and
inc
pop
jo
mov
xchg
out
mov
and
mov
add
mov
loop
filds
mov
dec
ss
cmc
cs
jne
fimuls
inc
int3
mov
jo
add
pop
inc
mov
sub
mov
pushf
lods
lret
mov
gs
dec
xorb
inc
movsb
sub
lret
adc
mov
ljmp
push
mov
cld
lds
jae
hlt
clc
out
mov
push
rcrb
cltd
gs
xor
pusha
mov
sahf
into
push
fiaddl
and
fnstcw
add
dec
jnp
pop
jecxz
in
or
jecxz
aam
pushw
adc
out
out
inc
jecxz
push
scas
xchg
sbb
pop
pop
sub
jle
fisubs
dec
cmp
into
or
mov
and
nop
stos
loop
pop
rcr
inc
ret
test
xlat
push
xchg
mov
call
outsb
xchg
pop
pop
aam
ficoms
adc
add
outsb
or
jg
adc
aad
das
int3
jge
xchg
xor
add
shll
mov
mov
fs
dec
test
jle
or
icebp
test
mov
jo
or
popf
in
std
or
xor
push
pushf
stos
repz
inc
repnz
or
jecxz
jp
cmp
popf
movsl
and
daa
mul
loope
mov
enter
in
mov
fwait
mov
inc
lods
fsts
cli
mov
je
scas
dec
xchg
mov
xlat
rcll
sti
dec
inc
ljmp
jg
sbb
repz
xlat
test
mov
pop
mov
pop
xchg
rcll
adc
xchg
in
imul
jp
stos
pop
adc
icebp
or
in
loop
movsb
jg
and
mov
cmp
jmp
std
aam
loopne
mov
jl
lret
xor
ja
call
sbb
cmp
mov
cmp
mov
cmp
cmp
inc
arpl
sahf
push
fnsave
orps
mov
loopne
cwtl
fdivrs
xorl
cmpsb
and
nop
popf
sub
inc
inc
jb
rcrb
sbb
aad
sarl
push
shl
xlat
mov
adc
rcrl
rcl
pop
cmp
xchg
movsb
lret
push
insb
lcall
repz
fildl
inc
and
jg
sub
imul
xor
and
sbb
cmp
pushl
fcmovnbe
push
sbb
adc
jge
sub
fs
outsl
pop
in
test
cs
sub
xor
xlat
fisubs
push
mov
call
jnp
cmc
cmp
fistps
shrl
jne
push
push
rcll
jge
fs
xchg
inc
jg
mov
shll
sub
inc
out
and
cmp
add
push
clc
idivl
jl
and
jno
pushf
dec
lock
lret
jecxz
adc
shll
pop
in
icebp
xchg
out
and
push
mov
fldpi
and
add
jae
jns
dec
cmp
dec
inc
sbb
xor
sbb
mov
fcoml
mov
outsb
loopne
repnz
aad
andl
enter
data16
jmp
sub
add
cmp
dec
das
fnsave
xchg
add
and
mov
inc
and
adc
filds
ret
testw
push
cltd
fstl
stos
and
inc
imul
xchg
jnp
daa
daa
xor
pop
cwtl
jmp
in
lods
clc
icebp
lcall
movsb
push
or
jo
jne
jmp
test
jmp
xor
pusha
xor
test
mov
inc
pop
mov
mov
push
xor
fs
mov
mov
mov
push
jmp
cmp
jae
jbe
jns
pop
push
xchg
leave
loop
add
iret
jg
lcall
fisttps
and
mov
adc
and
lock
les
lcall
cs
and
clc
les
xchg
xchg
cmp
sbb
jb
nop
scas
filds
jp
insb
scas
rolb
sbb
into
subl
and
and
push
sub
icebp
xchg
cli
push
scas
and
shrl
xorps
xor
lods
mov
aaa
test
inc
and
call
xchg
sub
imul
dec
stc
xor
pop
cs
lret
cmc
xor
lods
inc
mov
gs
icebp
pop
and
mov
cmp
clc
and
loop
scas
sbb
js
in
cmp
ljmp
popf
mov
sub
lahf
cli
adc
mov
mov
pop
or
mov
push
pop
push
dec
inc
inc
in
adc
cld
stc
xlat
xchg
jne
mov
aaa
scas
fildll
xor
jno
enter
mov
shlb
fwait
jo
lea
jne
std
jmp
aas
loopne
ja
test
test
aad
push
push
or
and
dec
leave
or
push
repnz
and
shl
inc
call
gs
movsl
jno
mov
mov
aaa
call
pop
push
lahf
pop
aaa
rolb
pop
imul
sub
push
adc
mov
sub
cwtl
mov
ljmp
aaa
pusha
roll
in
inc
adc
test
or
mov
mov
ret
adc
movsl
ja
mov
pusha
and
in
jge
out
es
adc
cmp
or
sbb
pop
jbe
or
mov
adc
mov
jmp
mov
test
and
inc
mov
idiv
mov
out
lods
daa
int
pop
xor
aad
sbb
add
jmp
cmpsl
mov
out
aas
ja
cli
sub
mov
add
or
inc
test
adc
in
xchg
fwait
arpl
dec
sbb
lock
cli
push
std
std
enterw
fsincos
cmp
leave
out
add
pause
mov
pop
fisttpll
fisubl
fdivrp
push
jp
scas
adcl
clc
cld
sbb
push
call
lahf
pushf
push
xor
xchg
push
dec
lds
jae
jno
pop
push
int3
jle
shrb
out
arpl
cmpsb
pop
sbb
push
and
inc
xor
lock
sub
xchg
repz
dec
push
jecxz
lods
or
out
scas
rcrb
test
jo
inc
fs
push
sbb
or
and
stos
xchg
arpl
loope
mov
add
xor
in
jecxz
pop
lcall
mov
sbbl
dec
int
jno
adc
scas
inc
jp
jl
mov
cmp
mov
xor
adc
mov
sbb
fwait
daa
mov
movsl
push
mov
cmp
xor
push
hlt
xchg
xchg
xchg
cltd
or
negb
in
sbb
aaa
xchg
imul
xchg
mov
sbb
mov
adc
or
gs
cmc
jns
imul
into
sbb
movsb
cmp
cmp
pop
mov
loop
xor
lahf
bound
scas
cmp
xchg
xor
mov
cmpsl
aaa
jbe
movsl
jmp
cld
cltd
repz
and
movsb
pop
mov
sbb
sbb
dec
pop
dec
out
inc
xchg
xchg
lods
ss
and
pop
mov
mov
into
rclb
pop
inc
stc
call
mov
push
call
aas
pop
mov
cmpsb
bnd
pop
xchg
mov
and
pop
js
cmp
mov
pop
insb
inc
sbb
ja
inc
jmp
and
sub
cmpl
ss
inc
lret
sub
jno
pop
xchg
hlt
stos
xorl
mov
inc
repnz
subb
ja
adcl
cmp
push
pop
int3
imul
leave
ja
mov
and
inc
das
cli
pop
ja
lock
xor
std
lods
hlt
add
into
insl
shlb
xchg
adc
push
add
outsb
push
ret
dec
call
fsubl
hlt
lods
test
mov
xor
cs
pop
and
inc
mov
cmp
mov
push
cmc
imul
fstpl
and
pop
cmp
xor
icebp
lea
sub
movsl
sub
push
jae
cmpsb
in
hlt
popf
dec
mov
cltd
pusha
addb
test
mov
arpl
pop
ret
or
jnp
push
mov
or
setnp
test
mov
loop
insl
movsl
or
test
lret
xor
enter
cmp
push
jg
push
mov
push
sahf
leave
cmc
push
cltd
dec
xor
lret
xor
or
sub
lahf
push
jno
shll
jmp
mov
or
aas
lcall
jmp
or
lods
fdiv
push
fidivrs
int3
push
enter
in
add
jno
jl
les
pop
mov
fnstsw
xor
dec
mov
jbe
clc
test
jmp
adc
cmp
jae
jmp
mov
sar
ret
lods
fisttpll
scas
add
add
cld
inc
movsb
andl
push
fsubrs
adcl
mov
out
lcall
xlat
lock
test
push
add
mov
jge
fdivrl
fwait
aam
xor
add
sbb
cld
adc
js
mov
in
call
mov
and
into
cmp
rcll
arpl
aad
fidivrs
stc
outsl
adc
xchg
scas
cs
fsubrl
addl
out
fstps
outsb
stos
add
cmpsb
scas
dec
stos
lcall
xor
mov
jp
xor
jo
mov
mov
repz
dec
dec
pop
push
sub
lods
push
lret
testl
nop
jno
testl
mov
int3
and
pop
jle
ret
push
out
adc
lahf
or
pop
adc
in
test
mov
sahf
pop
pop
xor
adc
mov
adc
std
pop
sbb
fs
test
test
arpl
lahf
movsb
and
punpckhwd
cmp
jb
mov
sarb
lea
in
subb
inc
push
add
pusha
inc
xor
arpl
test
lret
es
sub
push
and
mulb
jmp
push
ljmp
cmp
rclb
xor
ret
fcmovnbe
mov
xor
je
pop
pop
jb
fimuls
and
ficomps
rcr
dec
stos
and
outsl
xchg
loopne
and
aaa
sarb
mov
getsec
add
sub
mov
pop
das
mov
call
addr16
es
popf
add
adc
mov
adc
mov
mov
xor
or
shll
push
xchg
cmp
dec
mov
loopne
push
sbb
fcoms
lods
ds
mov
adc
mov
rorl
sub
mov
sbb
mov
sub
sbb
imul
jecxz
adc
push
jns
stos
sbb
js
xchg
mov
pop
int3
push
cli
xchg
fldcw
xchg
dec
sbb
mov
pop
cmp
loope
inc
jg
lods
xchg
stc
sub
jb
pop
clc
sub
cmpl
pop
cmpsw
adc
inc
sub
mov
icebp
pop
fidivrs
cmp
loopne
inc
adc
sbb
addr16
int
sbb
push
sbb
fstl
test
cmpsl
jle
adc
pop
and
xchg
sub
or
cmp
imul
test
aad
and
arpl
push
inc
je
shll
cmpsl
push
push
push
jg
adc
pushf
push
jl
and
sub
test
push
aam
sti
jge
gs
sub
fcompl
sbb
ljmp
cs
out
adc
mov
inc
and
mov
imul
andl
repnz
cmp
and
stos
dec
push
inc
nop
mov
gs
loop
push
add
cmp
mov
das
cltd
pop
pushf
sbb
movsl
fadds
inc
aam
cmp
mov
js
ret
stos
pop
psllq
xor
push
inc
cmp
scas
rcr
mov
js
sbb
xchg
lret
xchg
sub
insb
repz
bound
jns
dec
add
lret
fistl
or
jp
sarb
xchg
dec
xor
cli
push
fnstenv
and
mulb
cmp
loopne
pop
lods
xchg
pop
cmpsb
pop
cli
xor
daa
xor
jno
mov
sbb
and
dec
mov
cld
or
cmp
sub
mov
int3
xchg
nop
xchg
pop
daa
lods
repnz
sbb
in
arpl
xchg
lcall
sarl
pop
push
jp
test
lret
loope
pop
iret
rcrb
test
cmp
add
out
int
sarl
dec
lock
push
les
scas
ljmp
aad
movsb
bound
dec
out
cli
fsubl
inc
inc
adc
xor
bound
add
stos
adc
je
inc
imul
rcr
lds
dec
dec
test
jo
fisttpll
push
stos
sub
pop
sbb
mov
ficoml
xchg
push
mov
push
mov
push
cmp
ds
repnz
xlat
in
push
in
pop
iret
or
xchg
out
fcomps
pusha
lock
pop
bound
sub
int
out
xchg
movsl
and
repz
inc
pop
outsb
or
and
adc
out
aas
lahf
cld
bound
icebp
call
movsb
jecxz
jecxz
lret
pop
fimull
cmpps
popa
cmc
in
jmp
imul
jg
out
and
sbb
test
rcrb
jp
int3
mov
outsb
arpl
mov
in
mov
cmp
std
or
insb
rcr
xchg
insl
add
xchg
cmp
add
and
sub
xchg
bound
ret
out
lock
fisttpll
inc
aas
out
cmp
adc
and
sbb
in
sarl
dec
shr
rcll
in
jge
mov
dec
sbb
push
les
add
adc
loop
inc
les
and
popa
les
int
xlat
sbb
jnp
or
or
ja
or
push
outsl
inc
ret
in
push
es
out
std
daa
stos
stos
out
out
int
add
stos
lock
aas
xor
scas
pop
sti
sbbb
mov
out
cmpsb
iret
jb
rolb
iret
sbb
mov
rcll
xchg
mov
mov
je
inc
lea
hlt
sub
xor
lea
cmpsb
in
cmp
call
repnz
fcoml
aad
add
lret
das
mov
jae
nop
lock
mov
mov
cmc
loop
arpl
mov
sti
loopne
cmpb
inc
adc
jb
fstl
jae
sub
inc
insb
lea
mov
jno
ss
and
jecxz
dec
int3
mov
dec
and
push
mov
mov
sbb
xor
mov
xchg
mov
jle
mov
fistl
dec
test
lods
or
test
cmp
cwtl
cmpsl
sub
inc
dec
leave
pusha
or
repz
pop
les
int3
pushf
dec
test
pop
dec
notl
pop
push
imul
imul
adc
es
insb
pop
push
cld
inc
sbb
repz
negl
mov
xchg
and
adc
or
sbb
adc
dec
in
out
bnd
xor
pusha
jno
mov
sub
mov
roll
js
shlb
popa
inc
xor
in
mov
inc
ja
out
lcall
jns
lds
arpl
mov
push
lcall
jmp
loopne
iret
iret
bnd
fisttpl
stc
ss
lods
mov
pop
lahf
xchg
sti
mov
add
xchg
mov
filds
sub
push
sahf
push
into
sub
andl
ret
add
dec
mov
jnp
in
mov
hlt
insb
cmpb
lock
inc
or
movl
pop
movsl
mov
xchg
sbb
jge
insl
jne
gs
xchg
test
rorl
aad
fidivl
dec
aad
repnz
cmp
aas
fstpt
fwait
test
and
push
fldenv
mov
push
sub
popf
xchg
jl
ret
jb
add
push
enter
stos
sub
mov
fisubs
movsl
xchg
or
sbb
push
or
js
jmp
mov
aaa
push
jbe
mov
mov
jb
push
jl
push
movsb
int
loopne
mov
jmp
add
pop
jnp,pn
or
sbb
push
xor
mov
outsb
push
aas
mov
and
dec
sub
push
sbb
push
mov
aad
lret
icebp
sahf
push
mov
jp
in
mov
loopne
lret
xchg
dec
pop
adc
sub
aad
dec
add
js
lock
lea
imul
pop
fistpll
mov
in
cmp
js
insb
jl
leave
add
inc
inc
insl
stos
or
adc
push
sub
pushf
sbb
inc
fnsave
imul
imul
mov
testb
mov
movsb
mov
pop
mov
cli
daa
xchg
mov
mov
and
push
bound
decl
mov
xchg
ss
popf
jbe
mov
iret
jmp
mov
shrl
mov
adc
xor
loop
test
add
jge
pop
inc
adc
jnp
xor
mov
jno
sub
je
les
and
jecxz
scas
icebp
pop
mov
mov
scas
in
pusha
jo
or
lcall
test
stos
cli
jbe
lcall
enter
mov
leave
scas
leave
inc
divb
xor
xchg
decb
stos
lods
inc
dec
mov
and
and
out
mov
fisttps
dec
xor
dec
filds
lea
sbb
jne
clc
enter
mov
pop
cmpsl
hlt
lods
lahf
lret
cmpb
mov
aaa
sahf
cli
gs
push
push
xchg
mov
aam
cltd
sub
mov
test
lcall
cmc
scas
push
adc
fwait
stos
add
je
jl
add
xor
out
cmc
cli
int
lahf
loop
fcmove
add
fildll
push
hlt
fwait
mov
or
xor
sub
dec
inc
cltd
lahf
mov
push
lret
lret
lahf
mov
mov
sbb
inc
push
popf
xchg
jnp
cmp
adc
push
orl
inc
sbb
stc
mov
adc
imul
ret
std
cmpsl
outsl
cmc
adc
dec
ffreep
mov
shrb
push
sbb
pop
insb
push
xchg
insl
sti
lcall
mov
pop
icebp
cmp
jmp
lods
int3
adc
dec
fldl
sub
cmp
ljmp
push
lgs
outsl
pusha
pop
mov
jg
cli
lcall
mov
cld
sub
xor
push
incb
cli
sahf
inc
jbe
inc
dec
scas
pop
jne
or
cmpsl
sbb
xchg
loope
rcl
xchg
lcall
cld
shlb
push
mov
jmp
add
scas
and
cmp
cmpsl
push
pop
adc
icebp
lods
clc
cs
jmp
ror
sbb
aaa
add
shrl
fsts
divl
jmp
jbe
jb
fldenv
fsub
fstl
and
fnstcw
mov
lcall
jmp
pop
cmp
mov
mov
jb
add
jmp
loope
fdivl
inc
or
cmp
mov
in
push
out
adc
loop
test
add
int3
and
mov
dec
lock
mov
jp
push
sbb
jae
sbb
dec
mov
mov
push
or
pop
outsl
insl
inc
pop
push
mov
std
enter
mov
push
fnstenv
ret
out
xor
pop
sub
lock
sbb
mov
xchg
mov
sbb
inc
flds
mov
test
dec
addr16
push
das
test
fisttpl
je
inc
pop
mov
push
xchg
sarb
pop
ficomps
inc
movsb
cmp
aad
mov
add
mov
or
shlb
fwait
jg
addr16
pushf
inc
dec
in
sub
jbe
std
dec
loop
std
xor
inc
testb
ret
add
mov
xor
jb
sahf
hlt
cs
sar
pop
adc
inc
push
les
lret
js
pop
bound
pop
sbbl
xor
pop
in
cmp
inc
xor
hlt
sub
or
xor
orl
mov
daa
jo
xorb
sti
adc
sbb
xchg
into
subl
cwtl
fbstp
cs
mov
popf
loopne
shr
sub
xor
daa
inc
out
roll
push
cli
sub
sbb
mov
sti
or
cs
push
pop
pop
mov
inc
insb
cmp
loopne
add
add
rcr
xchg
jns
mov
push
repnz
or
testl
outsl
mov
testb
pop
adc
mov
test
cli
ret
adc
movsl
pop
push
pop
inc
lock
mov
mov
leave
ss
int
lods
filds
in
cmp
xchg
add
pop
xlat
mov
cmp
outsb
sbb
jg
fisubl
fidivrl
sbb
xor
std
pop
or
pop
adc
add
mov
popf
test
sub
inc
pop
mov
cmp
or
lods
pop
mov
jle
push
outsl
test
xor
ds
or
jge
mov
mov
lea
bswap
sti
sahf
jl
mov
adc
imul
repnz
lahf
fs
xlat
cmp
adc
fdivrl
dec
jb
jmp
xor
add
fistps
lahf
sti
adc
adc
leave
mov
arpl
adc
mov
mov
loopne
iret
mov
rol
lods
out
mov
mov
loopne
fstpt
neg
fidivrs
loop
pop
pop
pop
add
lahf
xchg
nop
push
insl
mov
inc
clc
adc
in
pop
ret
cwtl
push
lea
jo
push
dec
movsb
add
call
test
or
pop
adc
push
into
rcl
inc
dec
in
repz
loop
adc
shrb
fisubrs
ret
mov
add
out
xchg
cmp
lock
arpl
sbb
jno
movsl
jnp
jns
icebp
jge,pn
jg
sub
xchg
fwait
mov
or
shr
daa
sub
mov
sti
cmp
fwait
mov
xchg
lcall
sbb
ja
imul
jl
cmp
daa
inc
pusha
jbe
movsb
fisubrl
imul
lcall
inc
fiadds
adc
sub
sub
cmp
push
mov
and
sti
in
mov
push
fwait
movsl
orb
mov
inc
fidivl
mov
pop
fdivr
sbb
and
xchg
or
daa
jl
xor
test
xchg
push
or
jmp
pusha
fsubs
lds
out
pop
pop
dec
jp
dec
shl
test
and
bound
xchg
sbb
cmp
js
out
add
std
push
mov
jne
sub
push
dec
loope
pop
xlat
cld
insb
data16
es
xchg
jecxz
push
and
dec
adc
cmp
mov
repnz
sbb
fsubs
or
mov
mov
mov
addr16
hlt
jbe
stos
lods
jmp
mov
ret
insb
and
inc
xchg
mov
mov
xor
je
push
aam
dec
jge
shlb
push
inc
mov
add
repz
xor
ja
cli
jnp
jno
xchg
push
push
insb
movsb
fcompl
mov
mov
or
push
in
repz
push
lahf
aad
sbb
in
xchg
dec
or
in
sbb
test
fdivrs
int3
xchg
mov
and
mulb
sbb
lcall
push
fdivr
lds
add
jo
push
cmc
mov
lahf
addr16
cmc
sahf
push
mov
pop
loop
mov
outsb
jge
adcb
js
popa
je
mov
mov
sub
into
outsb
jbe
lods
sti
pop
cmp
scas
jecxz
hlt
jecxz
movsl
mov
adc
sbb
add
pushf
cwtl
pop
insb
into
int3
fsubrs
dec
fs
push
sarl
insb
cwtl
stos
or
ja
iret
pushl
xchg
fsts
ret
inc
sub
cld
movsb
pop
cwtl
and
lea
fistl
mov
and
rcll
shlb
call
mul
stos
adc
pop
icebp
test
mov
xchg
movl
jecxz
jbe
sub
int3
scas
add
dec
int3
cmp
lahf
cmp
jo
ja
fists
lcall
shl
sbbb
lea
mov
repnz
das
js
push
add
iret
pop
push
lods
enter
dec
shrb
sbb
mov
insb
cmp
xchg
enter
fistl
xchg
xchg
out
icebp
imul
push
or
adc
bound
or
cmp
fsubrl
pop
pop
push
rcll
inc
outsb
and
add
add
fs
adc
loop
inc
and
repnz
lds
mov
test
pop
mov
cmp
rcr
outsl
push
repz
mov
mov
cli
adc
push
sbb
loope
inc
sub
sub
dec
scas
adc
mov
fcompl
mov
stc
cmp
imul
add
in
cwtl
lods
jmp
test
and
inc
aad
push
into
xor
rorb
mov
dec
cld
push
xor
ficomps
cmpsb
inc
sti
fs
call
js
add
jbe
sahf
inc
ds
xor
ret
bound
lahf
daa
rolb
jnp
ficoms
sar
in
ja
je
nop
mov
adc
or
lret
loopne
dec
movsl
call
rcll
push
ss
mov
repz
jb
loopne
fisttpll
sbb
adc
imul
int
xchg
mov
sbb
add
push
dec
stos
mov
aaa
sub
outsb
push
dec
rolb
push
mov
insb
dec
in
ret
int
fcomps
aaa
out
rorb
jb
shrb
cmp
rep
cmp
fnsave
inc
dec
pop
adc
or
out
or
pushf
cltd
cltd
sahf
mov
mov
and
push
add
jg
inc
scas
fnsave
test
mov
mov
mov
cwtl
outsl
mov
cmp
stos
fstpl
add
call
insl
mov
xor
fadd
cmpsl
or
add
scas
cmc
pop
imul
jo
mov
fisubrl
cwtl
pop
jae
mov
push
add
mov
jle
sbb
aad
xchg
xor
test
stos
pop
roll
cmp
adc
std
jae
lods
nop
loopne
adc
and
fwait
aas
sbb
cmp
add
dec
lea
cmp
fidivs
fsubs
mov
test
faddp
outsb
add
cli
adc
add
std
out
push
xchg
mov
inc
mov
add
or
insw
lret
xor
out
xor
mov
cmp
adc
pop
imul
stc
adc
rep
lock
fldcw
sub
in
xchg
sub
xor
lods
pushf
and
out
sbb
popf
adc
ret
sbb
and
push
ret
fldenv
jno
stc
mov
pop
insb
test
in
pop
jnp
and
xor
popa
gs
jmp
call
sub
jp
mov
pop
mov
fistpll
es
loop
sbb
or
inc
add
mov
xchg
lret
fs
push
dec
enter
and
insl
or
mov
cmc
or
pop
hlt
scas
out
das
jg
pop
push
cwtl
outsl
hlt
ja
arpl
sub
sub
dec
repnz
mov
gs
mov
or
cmp
cmp
mov
nop
or
data16
jne
fucom
adc
inc
xchg
in
int3
sbb
fwait
adc
xchg
hlt
sbb
mov
xchg
negl
jge
loope
arpl
shlb
xchg
lret
clc
pop
pop
push
nop
and
lcall
mov
adc
jl
add
mov
fcompl
outsl
cmc
or
mov
or
or
and
pop
sahf
fmull
aad
or
or
aaa
cmp
push
sub
and
test
roll
je
js
sahf
jg
jb
and
fcoml
dec
repz
and
push
inc
inc
mov
pop
imul
fdivs
xchg
out
or
shll
insl
lahf
sbbl
mov
dec
popa
lods
cmp
je
out
xchg
sub
xchg
adc
mov
nop
popa
in
int3
pop
push
or
mov
inc
inc
ds
dec
jmp
pop
dec
outsb
cmpsb
lock
sarl
inc
cmp
sub
xchg
mov
pop
push
adc
out
dec
push
xchg
stos
pop
adcl
enter
repnz
stos
push
mov
cmpsl
mov
es
testl
mov
fldcw
mov
sub
jecxz
in
pop
sbb
fwait
mov
leave
or
data16
leave
jecxz
mulb
icebp
jae
xchg
bound
jb
popl
popa
dec
pop
push
aam
imul
dec
fs
dec
cld
jmp
cmpb
add
xchg
push
pop
inc
mov
xor
mov
enter
sub
jo
push
jns
int
push
mov
xchg
push
jg
push
mov
inc
push
sbb
xor
add
push
jmp
push
lock
mov
dec
ret
inc
jp
mov
mov
inc
in
xchg
push
pop
mov
or
ret
lcall
xor
lcall
pop
imul
push
fwait
dec
ret
mov
lcall
gs
mov
or
dec
dec
dec
sahf
out
jp
sbb
cmc
pop
addr16
lods
les
mov
outsl
mov
pop
xchg
ret
cmc
sbb
into
insb
pop
lret
aam
mov
dec
jp
push
inc
mov
out
divl
mov
add
pop
addr16
jbe
xor
jg
psubd
push
hlt
js
xchg
mov
mov
ja
ds
cltd
fsts
outsb
pop
xchg
lock
aam
xor
js
add
jmp
and
lods
jmp
pop
lods
inc
dec
xchg
lods
mov
mov
jp
mov
mov
push
in
les
jg
jle
popf
mov
and
cmp
jg
es
adc
mov
xchg
push
movsb
jge
rcrb
sub
aaa
ret
jg
cwtl
jb
inc
xchg
pop
mov
sub
rolb
das
mov
lods
ficompl
pop
cmpsb
rolb
xor
jle
cmp
movl
imul
lret
iret
jb
or
aad
sbb
out
push
in
icebp
loopne
push
and
sbb
push
movsb
cli
mov
adc
mov
pop
cmp
push
add
orb
sti
jo
aas
mov
push
loope
dec
mov
aam
pop
lret
sub
or
stos
sti
fstp
xor
ret
xchg
add
or
sbb
popa
xchg
mov
popa
dec
ljmp
imul
mov
cmp
pop
idivb
xchg
push
pop
push
popa
xchg
out
mov
push
jo
fstps
cwtl
cmp
push
xor
adcb
pusha
xor
pop
fiadds
aam
add
sbb
pop
push
imul
les
test
adc
sub
je
out
or
push
in
imul
mov
cmc
xchg
cmp
hlt
ret
mov
mov
xor
cwtl
dec
xchg
fisubl
mov
dec
sbb
cltd
test
jb
pushl
jp
jp
jbe
je
mov
push
dec
add
sbb
sti
add
test
fs
rcrl
lds
adc
lock
lahf
mov
stc
lret
xchg
sti
popf
dec
mov
clc
push
jmp
insb
lcall
inc
ljmp
or
jge
ficompl
fisubs
popl
rclb
loop
fwait
add
fidivrs
sub
cmpsb
adc
xor
xchg
jmp
inc
dec
scas
int
sbb
ror
xchg
lea
mov
shrb
iret
cld
or
out
xor
scas
xorb
xor
xor
mov
cmp
dec
mov
sbb
frstor
stos
test
test
and
cmpsb
int
push
aaa
cld
hlt
xor
pop
push
jne
imull
je
push
dec
sub
lods
jne
loopne
mov
mov
fidivs
call
ret
jmp
push
sbb
jmp
inc
popw
loope
and
jae
mov
loopne
pusha
or
xlat
popa
enter
jae
addr16
add
push
stos
das
adc
and
adc
jno
pop
add
ja
mov
xchg
cmp
leave
xchg
inc
stc
mov
ja
mov
aas
in
mov
rorl
jnp
clc
cmp
add
vunpckhps
jae
mov
scas
lret
es
rcr
or
lcall
mov
into
xchg
adc
cmc
xchg
mov
cmpsb
mov
sti
pop
push
cld
popf
inc
add
in
mul
adc
pop
jge
cld
mov
bound
push
jle
jnp
ret
in
dec
ret
out
pop
dec
arpl
mov
std
cwtl
cmp
xchg
xchg
mov
test
mov
cltd
or
rcrl
mov
stos
scas
pusha
jbe
roll
mov
and
dec
into
int3
adc
imul
push
outsb
jns
jl
jle
dec
cltd
popa
fisubl
dec
pop
stos
or
hlt
aam
loopne
add
mov
daa
dec
inc
mov
or
mov
jnp
daa
cmp
xchg
and
sbb
insb
mov
addr16
cli
inc
mov
aam
sub
dec
fstpl
dec
or
or
mov
call
scas
test
leave
insl
clc
insb
lret
cmp
inc
enter
idiv
push
jno
cmpsl
xchg
mov
mov
test
dec
or
and
leave
insl
cmp
fisttpl
inc
fimull
or
and
call
popa
sbb
clc
pop
lock
xchg
xlat
push
xchg
test
iret
jo
cmp
sub
xor
cli
cmp
das
pop
out
pop
popa
arpl
jae
lods
out
sub
jbe
pop
cmp
ja
cmp
out
ret
les
pop
push
xchg
mov
fidivl
daa
mov
pop
fsubl
and
mov
test
mov
cld
pop
mov
and
inc
cmp
out
inc
dec
or
subl
data16
sub
inc
das
xor
cs
ja
xlat
mov
scas
call
mov
lret
jno
adc
mov
inc
fnstsw
stos
push
inc
or
mov
mov
push
sbb
in
imulb
or
xor
lods
adc
out
mov
and
js
subl
xchg
flds
stos
pop
sbb
xchg
mov
sbb
fbld
cmp
mov
je
cld
neg
push
mov
xor
fmul
fisubrl
xor
pop
int3
inc
pop
test
jg
mov
adcb
add
xor
out
fildll
insl
jbe
and
data16
popa
mov
mov
daa
test
pop
jno
push
fcmovnu
sbb
andl
or
int
sbb
sub
xlat
call
and
icebp
movl
mov
mov
aam
in
push
call
call
xor
popa
rcrl
stc
sbb
cmc
inc
imul
or
loopne
xchg
inc
or
cmp
in
test
add
sub
dec
in
add
push
popf
push
cmp
inc
fists
push
pop
push
and
cs
fwait
mov
pop
lahf
cmpsl
fimull
dec
hlt
outsl
pop
push
mov
adc
sub
xlat
scas
popa
bound
frstor
cwtl
inc
scas
imul
inc
xor
scas
xor
jg
push
push
sbb
lods
pusha
mov
mov
push
sbb
fidivrs
sbbb
in
mov
mov
jmp
xchg
inc
jg
lods
xchg
or
pop
cmp
xchg
inc
push
add
jo
popa
jecxz
subb
sub
xor
add
push
adc
shlb
sub
add
mov
mov
push
pop
push
xchg
pop
sub
mov
nop
xor
fdivl
lahf
loope
arpl
xor
sahf
xchg
das
push
icebp
mov
movb
call
mov
mov
xor
inc
test
mov
cmp
sub
jmp
or
xchg
fnstsw
or
sub
cli
jmp
sbb
insb
sti
test
loop
xorl
pop
fld
sub
lcall
fcmovnb
mov
mov
mov
ljmp
pop
jl
aas
int3
inc
stos
mov
ja,pn
mov
push
sub
subl
pusha
mov
je
negl
loopne
add
std
mov
push
pop
cmp
push
aam
and
ja
repz
inc
addr16
jmp
sbb
xlat
test
adc
sbb
cmp
adc
les
aad
xchg
push
enter
outsl
inc
xchg
mov
mov
pop
xor
imul
and
mov
or
push
or
cmp
or
arpl
fsubrl
inc
xlat
sub
cmp
add
aam
xor
add
nop
daa
mov
adc
addb
push
movsb
dec
mov
in
push
out
shll
pushf
lds
je
dec
jne
cmc
mov
cmp
xchg
jle
adcb
daa
notb
dec
xorb
jecxz
dec
mov
add
mov
into
add
sub
mov
dec
or
mov
lahf
mov
clc
movsb
jae
subl
les
rol
jle
fisubrs
clc
ret
movsl
mov
fsts
out
mov
mov
into
dec
mov
or
adc
jl
gs
insb
in
sbb
adc
adc
cmp
or
xchg
xchg
add
int3
subb
jno
jnp
repz
push
inc
or
std
shr
mov
inc
stos
add
dec
jns
dec
fiaddl
cli
call
add
mov
xor
mov
fistl
mov
push
mov
fyl2xp1
cmc
push
repz
test
shll
mov
inc
shrb
loope
mov
adc
push
sub
pop
stos
xchg
lcall
mov
sub
mov
leave
fcoml
push
jp
mov
pop
sub
adcl
sbb
mov
inc
int
add
mov
xlat
mov
inc
or
mov
xchg
hlt
test
dec
rolb
pop
inc
mov
jmp
iret
cli
xchg
fnstenv
out
les
inc
pushf
xor
jne
sub
insl
jp
test
cmp
lods
cmp
inc
sub
mov
mov
mov
cmpsb
stos
xchg
movsl
push
gs
loopne
je
lcall
sarl
insl
sbbl
into
jae
and
das
and
cld
lds
pop
test
mov
adcb
cs
pop
jae
cmp
add
mov
sub
cmpl
data16
pop
push
leave
shl
out
or
dec
out
nop
cmp
cmc
xchg
sbbl
fsubrl
sbb
nop
sbb
pop
std
or
cli
adc
ss
mov
in
push
fs
scas
xor
or
pop
orb
mov
lock
iret
mov
push
ds
lock
or
inc
mov
mov
int3
push
pop
pop
cltd
jbe
adc
push
ret
loop
cli
mov
aaa
lret
sub
hlt
mov
test
sub
sub
out
lcall
sub
in
daa
js
sub
jge
cmp
sbb
cli
fisttpll
or
mov
roll
fisubl
xor
fucomp
mov
cmpsl
aam
out
cmp
mov
cmp
dec
pusha
mov
aad
xchg
popa
mov
in
xchg
cli
lds
cld
scas
stos
imul
test
mov
inc
push
mov
mov
adc
out
pop
pop
iret
add
and
in
xchg
ret
push
pop
fst
inc
xchg
jne
sub
jg
mov
xchg
pop
pop
inc
mov
mov
sbb
js
mov
ss
test
jmp
icebp
hlt
filds
adc
std
fcoms
fisubs
mov
push
int3
fiadds
mov
and
pop
dec
xchg
sbb
sbb
mov
pop
or
in
mull
push
test
or
or
cmp
jp
mov
ljmp
rcll
dec
and
and
psraw
push
loop
inc
jne
cmp
jne
pop
out
fstps
add
icebp
jecxz
cmp
jo
stos
add
add
inc
xor
pop
jnp
scas
jge
stos
mov
mov
ret
rcr
mov
xor
inc
scas
dec
jle
repz
inc
sbb
sub
jl
inc
xor
int
fstpt
mov
dec
adc
aam
cmpsb
and
xchg
fst
cmpsl
aaa
push
push
xor
dec
jnp
mov
or
sbb
mov
adc
fcomip
mov
add
addb
dec
lds
mov
fisttpl
ds
lret
pop
push
xchg
pop
imul
or
or
sbb
or
ds
sub
jns
int
clc
and
int3
xor
hlt
cmp
inc
std
mov
jp
cmpsl
jle
test
shlb
test
cltd
popa
das
pop
mov
sbb
xor
mov
and
push
mov
clc
dec
jle
mov
sub
aad
push
add
sbb
lds
mov
pop
out
mov
sbb
fstpt
mov
mov
andl
lds
fucomip
jb
mov
add
in
rcrl
fldenv
sahf
sbb
adc
imul
mov
xorb
mov
fdivr
cmp
jg
lcall
sbb
jmp
pop
pushw
loope
icebp
cwtl
ret
popa
pusha
loopne
out
inc
lods
je
js
repnz
neg
adc
rcrl
fs
fmulp
loope
inc
loope
mov
mov
les
orb
divb
sahf
sahf
pop
xor
push
sub
or
ret
adc
pop
das
fldcw
pop
dec
std
fwait
jecxz
sti
add
lret
addr16
leave
ljmp
loopne
xor
xchg
sti
adc
fs
hlt
lock
push
lret
push
pop
mov
lret
inc
push
xor
iret
mov
xor
imul
xchg
and
movsl
push
and
mov
mov
out
cmp
and
movzwl
fisubrl
xchg
push
fwait
loope
xor
inc
cmp
jmp
shr
cmp
add
mov
xor
stos
mov
dec
adc
pop
fwait
ds
mov
jecxz
iret
insl
push
jnp
cld
mov
aam
push
pop
sarb
xchg
scas
jmp
xchg
xchg
pop
mov
jns
inc
leave
cli
insb
inc
dec
stc
or
cltd
cld
sub
xor
dec
ret
cmp
xchg
add
xchg
popf
dec
mov
cmp
fcoms
jmp
sub
xchg
sbb
mov
jp
divb
mov
stos
xchg
adc
jno
and
jb
cmc
jl
loopne
push
in
dec
es
int3
sahf
cld
ret
arpl
push
fcoms
fmull
in
dec
decb
shrl
fstps
xor
mov
pop
lahf
push
or
fsubl
jmp
shl
mov
adc
adc
rclb
sub
lahf
cmp
jns
adc
mov
rcll
sbb
nop
adc
or
adc
mov
in
cmp
sub
data16
cmp
ret
push
cli
loopne
lods
jmp
sbb
pop
sbb
dec
jo,pn
or
push
dec
cmp
rcr
xor
xchg
fisttpll
enter
mov
aam
mov
and
cmp
je
lds
lret
pop
or
xor
repz
or
sahf
mov
into
lret
test
outsb
add
movb
cmpl
sti
mov
jno
in
mov
push
push
ss
and
mov
cmc
into
fsub
stos
mov
out
daa
leave
jmp
rorl
ret
cmc
mov
clc
fs
cvtps2pi
daa
in
out
roll
lret
xor
xchg
push
fstps
es
scas
rcrl
clc
aaa
cmp
pop
popa
inc
out
std
dec
jne
pop
jae
push
cmp
mov
lds
fisubl
and
add
sub
pop
movsb
dec
cmp
aam
mov
adc
jmp
stc
jp
mov
mov
cmp
stc
std
sbb
pop
adc
pusha
fnstsw
mov
lock
or
xorb
inc
pop
out
mov
popa
int
je
mov
dec
loop
ljmp
int
xor
adc
pop
push
mov
int3
push
jo
ljmp
inc
ret
stos
lcall
loop
push
clc
pop
stos
or
in
pop
mov
and
cltd
xor
push
cmp
dec
jae
lods
cmp
fcmovne
inc
jnp
jno
mov
lret
xor
adc
inc
mov
repnz
into
insb
or
adcl
aam
adc
in
pop
mov
stos
add
sub
xchg
std
xor
inc
int3
jae
jmp
lret
fsts
pushf
mov
imul
xchg
and
cmp
scas
or
lock
in
xchg
rcrl
lahf
lock
mov
cmp
scas
sahf
scas
imul
pop
in
and
pop
cmp
insl
out
idivb
pop
loop
repnz
mov
adc
bnd
jg
aam
pop
dec
dec
and
xor
mov
xchg
mov
or
enter
call
ja
movsb
jl
jb
jmp
loopne
pop
cld
mov
jecxz
std
cld
pop
push
out
test
mov
inc
imul
loop
jge
icebp
rcll
mov
jge
push
xchg
jno
xor
arpl
movsl
mov
xchg
dec
in
and
out
xchg
sub
dec
push
xchg
shr
mov
rclb
xchg
das
push
push
addr16
xlat
test
dec
popf
int
pop
dec
push
xlat
push
mov
adc
scas
and
mov
pop
shr
cmc
add
mov
lahf
push
ja
pop
inc
xorb
cmp
or
test
jnp
mov
pop
stos
pop
dec
test
add
scas
xor
fnstcw
adc
inc
sub
aam
xchg
cmpl
je
sub
popa
or
adc
pushf
les
dec
std
shl
and
jge
ljmp
xor
adc
add
push
xor
into
lods
out
dec
dec
outsb
pop
fwait
rcr
arpl
adc
hlt
push
pop
push
mov
dec
stos
dec
das
ja
and
and
jmp
xchg
loop
aad
outsl
cmpl
mov
hlt
fisubl
push
xor
xor
icebp
ljmp
leave
repnz
and
push
insl
mov
mov
xor
imul
rcll
mov
jmp
stc
stos
dec
or
lods
fistpll
pop
mov
aaa
cmpsb
fdivl
fstl
dec
sbb
pop
pop
pushf
inc
test
cmp
mov
das
xor
add
add
das
out
adc
xor
jne
stc
pop
aas
mov
cmc
addl
jbe
imul
sbb
mov
add
lret
fstpt
fisubrl
xchg
rcrl
mov
jecxz
cwtl
aaa
lods
inc
pop
lds
sbb
push
and
dec
andb
jge
xlat
or
push
sub
xchg
cmp
fsubl
add
fs
out
sub
or
lods
push
insl
icebp
addb
in
sub
cmp
xchg
or
outsl
add
scas
push
xor
and
repz
mov
pop
jl
or
stc
jns
rcrl
adc
inc
jle
clc
push
inc
mov
mov
cmp
mov
sbb
mov
imul
pop
xchg
in
pop
adc
pop
ja
sbb
pop
aam
repz
add
clc
mov
cmp
pop
std
test
stos
imul
inc
lahf
cmpsl
pop
cmpsl
data16
mov
loope
mov
arpl
stos
hlt
push
fmuls
lods
sti
sbb
mov
inc
inc
jge
cmp
cmpsb
adc
mov
or
lret
pusha
and
and
or
xor
push
dec
outsb
dec
icebp
mov
in
lock
cmp
inc
mov
xor
and
scas
sub
cmpsb
mov
roll
aad
mov
add
jo
adc
lods
fs
xor
or
cmpsl
pop
or
pop
sub
mov
add
dec
gs
sub
jnp
xchg
xor
cld
mov
xor
test
or
inc
in
pop
lock
adc
cwtl
andb
stos
pop
mov
adc
aaa
pushf
test
std
clc
scas
push
push
mov
test
gs
daa
dec
jmp
xchg
push
fs
mov
imul
repnz
dec
dec
jae
xchg
sub
or
orb
jbe
jl
aas
iret
leave
inc
pop
push
hlt
dec
cmp
jb
mov
push
je
xchg
push
loope
adc
icebp
add
jb
das
mov
add
sbb
pop
inc
cmp
push
push
cwtl
cwtl
sahf
jae
pushf
inc
push
jae
or
sub
xchg
hlt
xchg
xchg
add
orb
cmc
loopne
movsl
fistps
pusha
ret
fwait
adc
adc
jmp
xorb
jp
flds
imul
sbb
adcl
mov
push
cmp
stc
or
sub
sub
mov
dec
mov
sub
sbbb
mov
sbb
lcall
dec
mov
int3
lahf
lods
jecxz
inc
mov
divb
mov
cmp
icebp
outsl
jne
ja
in
xchg
adc
sub
lock
stc
push
or
jg
std
xor
xor
mov
xor
mov
mov
xchg
and
inc
int3
adc
push
fcom
cwtl
fbstp
cmp
imul
inc
fldcw
add
xchg
xor
ret
mov
cmp
scas
mov
out
push
xchg
aas
sahf
mov
outsl
xchg
jmp
xor
rcl
cmp
lods
pop
pushf
sub
sub
aam
push
jbe
sbb
or
test
cmp
mov
pusha
cmp
notb
adc
xchg
cwtl
jle
lret
mov
mov
pop
lret
mov
fsubs
xor
adc
ud2
push
push
push
psrld
mov
add
xchg
fs
ret
aaa
or
push
jnp
test
inc
test
cmp
addr16
or
rcrl
jne
sti
inc
fs
imul
das
sub
out
jae
mov
xor
leave
in
pxor
out
fnstsw
mov
or
jnp
sbb
aaa
add
movlps
adc
or
in
add
pop
out
mov
loopne
add
add
push
lret
enter
xor
mov
and
in
push
std
inc
cmc
ljmp
inc
pop
mov
xor
stos
push
dec
pop
sahf
call
jge
scas
jb
jno
add
inc
hlt
and
sub
jmp
xor
loop
pusha
inc
cmp
jne
sti
test
stos
add
mov
test
mov
push
mov
out
xchg
sub
cmp
mov
fisttps
sub
lds
pop
cmp
es
mov
push
lahf
jmp
ret
inc
and
mov
je
xor
adc
rclb
mov
cwtl
lods
sahf
cmp
rcl
loopne
xchg
cmc
adc
and
cltd
stos
aas
insl
add
jp
jg
dec
mov
push
inc
add
mov
dec
sub
ja
fidivrs
ljmp
inc
xchg
repnz
jl
push
bound
mov
call
or
in
cmp
xor
cld
loopne
pop
pop
or
pop
test
dec
adc
sahf
pop
rcrl
lret
aaa
ret
fistl
addr16
sahf
dec
or
enter
xor
push
mov
mov
and
inc
sbb
cmp
dec
cld
test
sub
mov
pop
adc
xchg
cli
add
xchg
arpl
enter
xor
shl
leave
testb
fs
cmp
xchg
jo
js
stos
jbe
dec
mov
std
jmp
stos
ds
mov
xor
ret
or
rorl
mov
fisubs
movsb
jg
jbe
call
imul
mov
inc
fisttpl
adc
cmpsl
mov
inc
data16
pop
lods
jl
pop
outsb
jmp
dec
mov
lds
je
pushf
lds
orb
faddl
mov
cld
mov
dec
mov
mov
shlb
pop
dec
jnp
mov
into
iret
icebp
pop
addl
jns
xor
outsl
pop
xor
arpl
enter
and
pop
adc
and
jmp
add
mov
push
mov
mov
mov
mov
mov
sahf
shrl
out
mov
cmpsb
aaa
movsb
sub
sti
and
jmp
sbbb
and
xchg
mov
xchg
sbb
jno
inc
popa
sub
adc
ret
shrb
out
push
pop
push
outsb
jnp
and
fsubl
dec
mov
and
leave
rorl
lods
mov
aam
mov
in
or
pop
add
stos
outsb
pop
push
xor
aaa
lds
fldcw
mov
xchg
mov
push
mov
dec
inc
add
xchg
cmc
dec
lret
cmc
je
or
call
nop
out
imul
jnp
cmp
jp
mov
xchg
cmp
into
test
ficoml
fmuls
lret
out
mov
pop
lods
cmpsl
jge
xor
repz
xor
pop
pop
lret
sub
sub
mov
aam
rclb
xchg
push
rclb
stc
in
jecxz
imul
mov
add
or
jmp
mov
int3
rcrl
mov
jle
outsb
or
jmp
int
xchg
sub
lret
xchg
insb
jnp
mov
repnz
jecxz
mov
loope
push
jns
and
push
xor
xchg
cmp
xor
lahf
pushl
stos
jb
bound
mov
jne
xlat
pop
mov
jle
or
cwtl
addr16
iret
push
lods
or
and
xchg
mov
insb
enter
testl
sub
stos
sbb
sub
xor
dec
out
sub
lahf
push
popf
loope
dec
mov
shr
sbb
and
jns
cmp
inc
xchg
jecxz
outsl
repz
add
push
sarb
dec
sbb
xor
adc
mov
push
cmp
imul
into
pop
xchg
xlat
repnz
cwtl
push
movsb
gs
test
out
inc
jmp
pusha
test
cmp
xorl
jno
cmp
inc
xchg
mov
pop
mov
repz
lahf
in
ljmp
jmp
orb
sbb
pcmpgtd
test
lods
jle
or
ljmp
mov
xor
imul
and
loop
outsl
iret
cltd
pusha
std
or
seto
cmpsb
stc
sbb
stc
jmp
mov
imul
inc
aam
push
fcomps
orb
lea
test
push
shr
stos
jl
pushf
or
add
mov
div
repz
fwait
int
imul
rcll
pop
mov
loop
adc
inc
adc
cmp
sbb
dec
jg
fwait
xor
push
sahf
movl
lcall
dec
jnp
daa
xor
xor
mov
jg
aas
mov
dec
sub
cltd
std
fbld
push
lock
jb
jb
aad
xchg
aas
and
lock
fwait
pop
mov
pop
test
ss
mov
popa
xlat
bound
orl
inc
cmp
and
push
mov
bound
jne
or
lcall
jge
adcb
jns
xor
out
adc
sarb
mov
stos
pop
inc
push
popa
dec
push
sbb
clc
call
push
aad
mov
cmp
jl
cli
out
add
repnz
stc
test
int
xor
js
aam
cmp
mov
loop
mov
es
aam
pop
mov
in
pop
ds
rolb
mov
js
jl
mov
lcall
jecxz
enter
aam
pop
lcall
or
mov
js
or
dec
shlb
stos
add
repz
in
neg
bound
xchg
xchg
outsb
ss
mov
pop
testb
sbb
lret
pop
or
test
mov
push
imul
pop
mov
push
std
jmp
jno
aas
xor
mov
cltd
iret
jns
jbe
cmc
popa
xchg
cltd
or
adc
push
fcoms
fsubrl
sub
xchg
jnp
or
pushf
jne,pt
and
pop
jo
stos
cmp
dec
call
ja
fdivrl
out
adc
mov
das
jge
in
aam
lea
adc
jle
out
cmp
push
xchg
stos
jne
xor
lahf
jne
mov
rcrl
jbe
lea
and
add
sub
mov
aam
stos
mov
jno
ss
shrb
or
mov
dec
or
aad
shrb
scas
scas
pop
dec
testb
adc
pusha
push
cmc
jae
mov
shrl
lds
sarl
icebp
mov
dec
sub
cli
lock
cmpsb
mov
ficoml
xchg
lret
inc
and
aas
mov
cmp
dec
test
fs
imulb
jae
sub
xchg
xor
cmp
cmp
jge
push
sti
or
mov
sub
dec
jmp
inc
push
mov
rcll
outsb
aas
roll
je
mov
nop
and
call
or
push
mov
stc
dec
ljmp
and
in
xlat
outsl
pop
ja
xchg
push
push
iret
and
mov
jecxz
adc
add
outsb
or
sti
mov
mov
sbb
outsb
dec
incl
rorl
test
daa
xchg
add
push
or
xchg
in
jae
cmp
jae
sub
mov
xor
aam
xor
loope
imul
and
jmp
ja
cmpb
out
jl
imul
or
pushf
mov
pop
pop
stc
aam
sbb
push
aaa
cmp
and
adc
sub
sub
mov
aas
jge
push
jecxz
pusha
sbb
std
mov
and
jecxz
jle
sahf
lock
and
int3
ja
xchg
sbb
pop
hlt
sbb
xchg
jmp
xchg
mov
xor
adc
ret
cs
aad
fstps
movsb
cld
mov
loop
lods
xlat
icebp
aam
fstps
mov
out
aas
arpl
push
cmp
add
enter
mov
cltd
xor
fldcw
lret
adc
dec
sbb
out
lcall
push
mov
movsl
pop
cmpsb
xchg
mov
jge
push
lea
insl
cmp
inc
lods
mov
pop
push
sub
call
jne
clc
pop
inc
push
out
mov
push
sub
fisubs
daa
push
mov
add
cmp
mov
mov
scas
xor
mov
sbb
mov
cld
stos
add
lds
inc
sarl
and
test
call
cmp
cmp
imul
dec
in
xor
cmp
add
scas
pop
test
ss
mov
xlat
stc
test
std
hlt
xchg
std
jp
fisubs
inc
sbb
inc
cltd
jmp
daa
sbbb
out
ljmp
outsl
dec
fsubl
gs
sbbb
cltd
shll
pop
insb
cmp
ret
push
xchg
roll
jmp
fdivl
lahf
sbbb
fwait
sub
mov
scas
or
mov
dec
push
mov
pushf
xchg
xor
outsl
adc
mov
into
mov
dec
movsl
stos
cs
pop
xchg
sbb
inc
cmc
hlt
les
jo
or
lea
in
pop
push
push
xorl
xchg
jbe
push
aad
leave
mov
inc
mov
stos
lock
cmp
ljmp
movsb
sbb
jae
add
stos
hlt
cmpsl
inc
jecxz
push
mov
adc
test
iret
mov
int3
xchg
xor
mov
add
lret
and
stos
dec
movsb
mov
repnz
movb
iret
push
or
mov
mov
mov
jae
xchg
add
and
xchg
aam
stos
or
push
ret
mov
aaa
sahf
add
js
shlb
fwait
test
pop
cmpsl
pop
mov
pop
mov
cmp
in
loop
and
mov
outsl
mov
sub
fcoml
mov
mov
scas
push
mov
es
aas
xchg
arpl
adc
inc
rolb
xor
inc
lcall
rolb
lcall
sti
fs
std
out
add
mov
iret
xchg
ljmp
orl
mov
shrl
xchg
mov
fbld
add
fisttpll
arpl
test
scas
test
pop
add
xlat
fldt
lock
imul
sbb
mov
out
ljmp
out
pop
jb
scas
movaps
cmp
add
fists
jns
imul
add
mov
enter
dec
in
and
leave
adc
inc
fildll
or
cmpsl
add
adc
adc
sbb
pusha
pop
add
inc
jno
sbb
leave
not
pop
inc
mov
xor
xchg
jno
les
cmp
shlb
push
cwtl
out
jns
jl
jmp
dec
dec
inc
gs
stos
lret
stc
add
inc
adcb
in
outsl
lock
xchg
repz
mov
in
mov
orb
testb
data16
mov
aas
push
ss
mov
lret
cli
lods
nop
lret
cli
add
cmp
lret
mov
aas
or
rorb
imul
test
pusha
adc
and
cmp
adc
mov
mov
jbe
inc
mov
movl
jo
dec
sbb
shll
out
es
lret
pop
jmp
and
jecxz
movsl
movsl
repnz
xchg
sbb
popa
jns
pop
cltd
into
mov
fsubrs
or
subl
les
inc
jmp
call
mov
repz
lret
rorb
pop
dec
loope
cmp
in
inc
cmp
push
jbe
shlb
push
data16
cmp
test
negl
xor
push
inc
jmp
call
aaa
cld
rorb
push
movsl
cwtl
ffree
push
mov
lock
nop
sti
pop
in
sahf
sub
jb
aam
outsl
or
je
xchg
add
shll
outsb
js
ljmp
add
bnd
pop
mov
retw
or
or
mov
and
ss
pop
loope
cmp
sbb
icebp
mov
lds
dec
in
add
fs
aaa
jle
jg
insb
pop
in
cmp
sbb
mov
cmp
mov
bound
push
dec
stos
int
jmp
popa
push
add
dec
cmp
jae
ss
push
js
mov
mov
mov
dec
cmp
xchg
bound
popa
dec
mull
iret
cmpsl
icebp
mov
test
xlat
jbe
xor
das
and
pop
and
mov
mov
out
mov
mov
add
add
jl
sub
mov
sub
in
scas
jnp
sub
or
xchg
xchg
xor
sahf
or
xlat
sub
clc
shl
cwtl
push
push
lret
mov
xchg
and
fimuls
arpl
sub
xor
jnp
pop
pop
dec
sub
dec
pop
jle
fsubrp
testb
into
mov
jp
out
and
stos
addr16
jmp
sbb
push
xor
lods
sub
sub
inc
pop
pop
lahf
movsl
shl
or
rol
mov
in
ret
jl
mov
sbb
push
fwait
repnz
cmovne
arpl
rorl
jmp
xchg
iret
xchg
imul
pop
jmp
scas
int3
jg
cmp
jno
push
and
push
mov
rclb
pop
mov
and
add
add
and
mov
aad
rcr
adc
into
shr
xchg
rorb
je
inc
mov
sti
test
mov
mov
or
push
sbb
add
mov
mov
imul
xor
xlat
in
or
gs
xchg
pop
adc
xlat
out
test
push
scas
jp
cltd
lods
cmp
and
nop
loop
pop
cltd
dec
daa
inc
mov
cmpsb
shll
cwtl
mov
inc
pop
imul
test
aam
outsb
cmp
leave
jmp
cltd
out
inc
stos
aam
adc
sbb
cmp
inc
lcall
fdivrl
or
pusha
jmp
lock
add
outsl
mov
lods
ljmp
sbb
inc
mulb
jo
xchg
and
cwtl
aam
outsb
sbb
sub
lret
sbb
data16
lea
mov
jge
pop
mov
xchg
jmp
sub
jg
int
int3
js
test
pop
sti
add
dec
push
mov
inc
inc
add
hlt
pop
pop
sub
or
mov
test
repz
fbstp
lods
jecxz
mov
iret
and
jmp
rcrb
jmp
mov
mul
cmp
sbbb
sbb
test
cltd
xchg
pop
lods
mov
mov
inc
sub
aas
push
inc
mov
in
mov
fwait
adc
cs
subb
bound
sbbb
or
gs
push
leave
mov
mov
sti
jnp
lcall
cmp
loope
in
jo
inc
enter
xor
fwait
ret
sahf
jnp
push
ficompl
pop
stos
test
sub
lret
sbb
rcl
or
sti
add
pop
mov
pushf
stos
cmp
push
scas
push
dec
push
mov
dec
mov
stos
mov
or
jle
jnp
pop
das
mov
gs
dec
inc
test
jmp
es
mov
sbb
mov
fmull
std
sub
dec
cmpl
out
icebp
stos
xchg
testb
or
mov
mov
cmpsb
repnz
std
nop
decl
shl
pop
fcmovnu
inc
test
cmp
loop
push
pop
je
cltd
scas
icebp
mov
and
addl
and
inc
ljmp
inc
fldl
and
xor
push
and
adc
xchg
movsl
pusha
out
movsl
int3
push
inc
out
cmpsl
cmp
mov
cmc
adc
imul
jmp
arpl
xor
fucomp
sbb
sahf
fidivrl
xor
mov
and
pop
jo
or
jne
dec
sub
jb
lahf
ljmp
cmp
pop
lcall
add
inc
push
jg,pt
rcll
setbe
lods
mov
push
or
mov
push
pop
pushf
mov
push
inc
aam
adc
push
and
sti
inc
mov
imul
mov
jl
dec
shlb
jle
xchg
mov
add
jb
pop
outsl
dec
sahf
lcall
sti
lcall
imul
xchg
adc
cmp
lcall
in
divb
dec
loop
xor
mov
aad
sub
dec
pop
cmp
push
adc
clc
xor
jb
in
leave
negb
nop
mov
int3
rolb
dec
imul
jo
mov
leave
repnz
in
test
xor
cmpl
cmp
ljmp
pop
mov
jge
imul
idiv
xchg
cmp
push
std
sbb
or
shlb
pop
push
out
mov
lret
out
into
push
sub
leave
repnz
loop
xchg
lock
xlat
shrl
cltd
jbe
cmp
mov
imul
or
cmp
aam
mov
scas
loopne
pop
jns
mov
cmp
jb
mov
push
aad
addr16
je
inc
in
or
adc
sub
mov
pusha
in
leave
vmptrld
out
aam
or
pushl
and
inc
clc
std
ror
xor
inc
inc
in
dec
push
dec
mov
sub
lcall
dec
adc
add
gs
imul
pop
pop
mov
and
or
int
mov
cmpsl
inc
push
xor
in
mov
or
into
ficomps
cmp
xchg
jmp
bound
xchg
jo
pop
addr16
inc
sub
pop
sub
add
enter
mov
ljmp
call
in
mov
aad
jmp
das
shlb
lock
cmp
mov
inc
cmpsb
test
dec
mov
lret
dec
aaa
push
je
fs
aaa
mov
adc
sub
cmp
push
inc
sbbl
sub
and
imul
ss
sarb
pop
stos
cld
mov
bound
daa
pop
push
xchg
sbb
adc
flds
jb
lds
popf
xor
push
xor
push
pop
add
jmp
push
adc
inc
xchg
mov
out
inc
out
in
cs
daa
stos
dec
imul
daa
jmp
mov
insb
and
jmp
cmp
divl
add
lods
push
dec
xchg
popa
jmp
xchg
push
sahf
push
cli
movl
and
aam
loope
les
es
imul
cmpsl
std
xchg
mov
pop
fisttpll
inc
int
ficoms
std
cltd
clc
jp
mov
inc
popa
sti
orl
iret
push
sahf
mov
in
test
push
push
mov
test
shll
dec
fdivp
dec
fstps
jecxz
mov
mov
dec
std
incb
mov
push
pop
mov
sub
outsb
leave
inc
xorl
sub
mov
pop
sbbb
test
mov
in
jns
jecxz
pop
cmp
jo
mov
sub
popf
aam
jne
lret
shld
push
add
push
mov
mov
fdivp
clc
xchg
out
popf
fildl
or
sbb
arpl
mov
and
mov
fldcw
pop
jge
xor
cmp
pop
push
rcrl
mov
push
mov
sub
pop
clc
inc
lret
je
mov
mov
pop
pop
fistl
out
les
mov
icebp
fs
cmp
int3
push
push
rorl
sti
pop
mov
fdivr
mov
adc
and
sarb
pushl
mov
xor
mov
xlat
sbb
ret
daa
cltd
inc
pop
push
mov
pop
arpl
mov
inc
push
push
leave
out
repnz
inc
pop
xchg
lret
enter
add
mov
orl
nop
shrb
aam
xlat
xchg
push
pushf
jle
or
cmp
dec
pop
ds
pop
nop
rcrl
mov
pop
test
out
bound
sub
add
mov
mov
clc
push
mov
xor
mov
mov
in
sbb
adc
sbb
test
loop
cmp
inc
test
xchg
testb
xchg
sti
dec
mov
push
adc
sub
loope
jnp
enter
jecxz
scas
loope
mov
add
inc
out
je
push
movl
xchg
nop
mov
lret
inc
pop
push
add
ss
cltd
pop
jno
jns
arpl
mov
dec
and
push
mov
popa
dec
xor
js
fistpl
pop
lods
mov
ljmp
je
lock
add
enter
jo
push
ljmp
outsb
les
mov
push
int
outsl
or
sbb
or
insb
pop
xor
insb
xchg
cs
mov
xor
sub
test
or
or
jbe
rcr
adc
sahf
cmp
cli
andb
arpl
clc
sarl
addr16
mov
int3
adc
shlb
mov
les
mov
call
xchg
mov
sarl
and
addb
push
or
dec
out
je
adcb
shll
movsb
xchg
adc
pop
leave
mov
xor
aam
xchg
imul
mov
sub
push
sub
adc
imul
inc
jbe
and
push
add
pop
ljmp
scas
insl
daa
sub
mov
fsubrs
and
aaa
xchg
or
inc
adc
fcomps
sub
ret
mov
dec
arpl
adc
jns
inc
push
inc
push
jb
inc
or
mov
push
xor
es
cmp
pop
dec
pop
in
sbb
mov
pop
xchg
xchg
jne
insb
popa
xchg
arpl
push
icebp
and
lds
movaps
pop
mov
xorb
mov
sub
pop
bound
dec
mov
sbb
subb
mov
test
sbb
xchg
xor
pop
push
mov
cmpsl
jnp
test
or
jg
pop
xor
test
clc
scas
push
jno
dec
arpl
push
sbb
xor
cmp
rcrl
loope
pop
call
in
aad
mov
ss
int
and
int
add
fwait
sbb
mov
inc
mov
dec
pop
out
cmpb
mov
in
gs
mov
mov
mov
call
andl
pop
jle
lahf
cmp
loop
in
test
into
lods
jg
dec
int3
sahf
and
shlb
sub
push
mov
leave
add
fisttpl
inc
jnp
dec
sbb
or
shr
or
lock
movmskps
rclb
cli
jne
pop
cmpsb
jp
sbb
xor
int3
aam
pop
mov
push
pop
adc
and
daa
jmp
inc
xor
mov
out
jno
bound
mov
xor
lret
and
fbstp
push
stos
clc
sbbb
dec
dec
lock
stc
fcoms
outsb
adc
cltd
jnp
inc
orb
add
aam
popa
in
in
inc
int3
outsl
or
pop
pop
and
ds
icebp
push
enter
sahf
pop
popl
jle
add
and
cmpl
dec
dec
and
sbb
adc
ds
dec
jo
in
mov
repnz
cmp
sub
out
aad
into
scas
jns
fimuls
jle
adc
or
outsb
xchg
rcll
fidivl
arpl
shl
jb
push
mov
jge
sub
shrb
xchg
clc
xchg
ret
sub
mov
xchg
xchg
addb
sub
loope
pusha
stc
cld
and
pop
arpl
add
lret
jp
in
pushf
movsl
mov
xchg
hlt
mov
repz
add
ds
dec
push
rorb
xchg
xchg
enter
ljmp
and
pop
add
and
out
push
pop
scas
fucomi
cmp
stos
es
jbe
dec
xchg
adc
jl
add
mov
scas
ss
sbbl
rclb
sbb
enter
mov
rorl
gs
mov
out
loope
and
mov
repz
into
dec
cltd
add
clts
test
stc
loopne
mov
movsl
mov
out
dec
push
cmp
icebp
aaa
push
outsl
xchg
pop
pop
stos
xchg
stos
stc
jmp
lea
mov
loopne
mov
fcomi
lods
cmp
xor
mov
sub
outsl
sub
ss
inc
insl
adc
lds
inc
xchg
ljmp
into
dec
cltd
mov
or
ds
test
xchg
pop
ds
xchg
and
das
pop
sbb
aad
pop
mov
sbbb
jp
mov
out
fdivs
xchg
lret
mov
push
ja
pusha
cltd
ja
sahf
mov
xchg
or
pop
add
or
andl
dec
cmpsb
pusha
dec
xlat
sbb
push
pusha
rcrl
mov
and
mov
inc
inc
lcall
sub
aas
in
jo
cli
pop
ret
mov
daa
or
fidivrs
jecxz
xor
xchg
sub
enter
inc
fwait
inc
sbb
mov
cmpsb
jmpw
test
daa
jb
jecxz
movsb
data16
push
adc
pop
fiaddl
cli
mov
dec
sbb
mov
fnstcw
outsb
mov
loop
xorl
icebp
rolb
jae
and
sbb
sbb
xchg
cmp
pop
sub
sahf
add
jae
ret
push
push
mov
adcl
pop
xchg
movsb
movsl
pop
xor
dec
mov
or
jae
lret
fsubrl
mov
xorl
mov
push
mov
mov
and
xchg
push
idivl
aam
adc
cmp
mov
sbb
mov
repz
mov
xchg
mov
jbe
aad
repnz
cmp
scas
push
dec
icebp
inc
orb
mov
or
fidivrl
sub
mov
addr16
sub
imul
add
iret
xchg
mov
xchg
adc
lods
xor
sub
pop
sbb
nop
push
add
mov
dec
inc
icebp
jp
rcll
incl
daa
fs
out
dec
cltd
test
push
loope
inc
call
aad
mov
cmp
cmpsb
xchg
leave
call
into
shll
in
aad
sbb
xchg
push
ja
pop
mov
jecxz
xor
bnd
ljmp
cmp
pop
stos
stos
push
push
push
call
cmp
add
stos
push
leavew
cmp
inc
dec
mov
dec
gs
lock
jno
mov
add
cmp
sub
sbb
mov
in
arpl
mov
gs
fdivrs
mov
xchg
mov
inc
jb
push
jae
hlt
mov
sbb
fwait
add
jp
pop
mov
dec
loope
jle
sbb
pop
out
and
fimull
jg
out
mov
rcll
pop
shll
mov
test
shll
cmp
pop
xchg
sub
insl
sbb
mov
dec
xchg
sub
inc
mov
pusha
in
inc
gs
sbb
xor
jp
dec
cmp
pop
push
in
test
out
mov
dec
jbe
push
lahf
cmp
cli
pop
cmpsb
mov
xchg
jp
and
pop
imul
jecxz
subl
ja
inc
test
aad
inc
jbe
cmp
or
mov
scas
out
mov
xor
push
mov
daa
movsl
fdivrs
test
mov
pop
dec
push
lret
adc
sahf
and
push
push
xchg
popa
xchg
cwtl
out
lds
jmp
cs
fstpt
jge
pop
push
mov
iret
fisttps
sti
fsubrs
push
cltd
bound
cmp
ds
mov
imul
dec
mov
sub
roll
jmp
hlt
repz
insl
test
xchg
sub
mov
sbb
out
inc
aad
push
inc
sahf
xchg
cli
pushf
dec
xor
mov
and
mov
and
or
negl
rclb
mov
shlb
mov
mov
mov
cld
std
arpl
sbb
pop
jb
pusha
or
lret
imul
in
addb
mov
out
loop
pop
pop
cmp
iret
out
mov
shr
xchg
mov
inc
cmp
test
adc
push
inc
push
push
add
insb
mov
sub
adc
mov
popa
and
push
lea
sbb
lcall
in
int3
scas
jo
lock
mov
mov
jmp
jge
mov
fdecstp
test
sbb
mov
push
xchg
daa
xor
testb
fmull
nop
aam
lahf
popa
mov
mov
mov
scas
inc
sbb
add
scas
xchg
jmp
jae
mov
cmp
ds
cltd
pop
out
adc
ds
jecxz
cmp
repz
inc
test
inc
jne
mov
pop
xchg
sbb
int3
jne
mov
push
mov
xchg
mov
pop
dec
mov
jge
loope
test
stos
rcll
xchg
sub
gs
movsb
mov
stc
mov
or
jl
mov
push
adc
mov
orb
xchg
jecxz
adc
or
out
les
and
adc
sbb
lods
fists
cwtl
sub
xor
stos
test
or
xor
ret
push
and
push
mov
xchg
inc
jle
enter
in
inc
out
pop
loopne
lcall
mov
aaa
adc
or
les
jb
or
inc
sub
cmp
orl
enter
pop
cmp
add
movsb
dec
out
adc
call
or
icebp
or
mov
movsb
and
in
addb
pop
jo
std
dec
ds
dec
jo
cmp
aas
add
push
rorb
jns
and
loop
or
aam
imul
ret
pop
cwtl
sbb
iret
gs
fstpt
sub
lods
xchg
inc
sub
pop
cwtl
scas
xchg
adc
lahf
jae
lret
sbb
hlt
push
subb
sar
cmp
push
cmp
lret
push
mov
ret
repnz
push
fadds
xchg
fnstenv
nop
pop
inc
lahf
inc
push
aad
pop
rcrb
cmp
insl
inc
cmp
add
pop
imul
inc
xchg
jge
iret
sub
adc
inc
enter
inc
nop
sub
mov
xchg
bound
xchg
lds
adc
xchg
mov
xor
cmp
mov
shlb
lods
xchg
das
fsubl
jecxz
push
in
out
stos
pop
lret
pusha
shll
add
or
xor
test
test
jns
adc
lods
or
gs
js
ficoml
aaa
dec
xchg
test
push
push
mov
cmp
mov
icebp
icebp
push
std
loopne
xor
mov
sarl
or
test
xchg
dec
sbb
enter
icebp
sub
or
sti
mov
test
mov
pushf
mov
push
scas
mov
mov
adc
ss
sbb
nop
xor
sub
sbb
jg
sahf
paddusb
popa
loope
aas
sub
cwtl
mov
mov
lea
sub
pushl
cmp
lea
mov
push
mov
jbe
ss
jg
lahf
dec
xor
movsb
aas
neg
jge
daa
xchg
imull
adc
xchg
or
push
gs
test
pop
xchg
dec
stos
std
shlb
test
jno
ss
push
inc
stos
lea
ljmp
adc
hlt
xor
pop
fimuls
sbbl
int3
pushl
mov
mov
sti
mulb
mov
push
adc
jle
jo
mov
pop
popf
fbld
cmpsb
addl
xchg
mov
mov
and
andl
mov
inc
jle
addr16
call
mov
cmp
subl
out
nop
bnd
lret
pop
divl
outsl
test
sbb
jnp
ljmp
sbb
mov
fldl
ret
sub
pop
jge
lods
jle
ja
or
or
or
pop
jge
nop
cwtl
xor
add
adc
mov
push
movsl
cmpsb
movsl
and
stos
or
xor
pop
rol
out
out
pop
repnz
jbe
mov
gs
out
jle
sbbb
fs
in
jg
icebp
shrb
out
sti
inc
clc
stos
in
add
mov
sbb
push
repz
cld
clc
mov
stos
cmp
cwtl
mov
pop
arpl
xor
pop
int
aam
pop
js
xchg
loop
aam
cmpsb
mov
das
shlb
and
mov
loopne
adc
jne
test
xchg
scas
mov
rcll
push
xchg
mov
movsl
rorb
test
push
movsl
test
xchg
lea
movsb
adc
ret
add
cmp
mov
mov
int3
pop
xor
mov
loopne
pop
sbb
mov
mov
mov
xchg
lea
mov
fsubr
mov
jecxz
inc
aas
jmp
add
dec
or
xchg
inc
pop
int
imul
ret
cmp
loopne
xchg
cli
sbb
aaa
mov
jno
jns
in
inc
adc
std
sub
inc
mov
pop
lret
inc
aas
and
pusha
or
and
pop
mov
cmp
addr16
lods
xchg
leave
addb
cmp
xchg
xor
iret
dec
mov
and
xlat
insb
rcrl
rcrb
jns
fcoml
jg
jne
gs
cmp
loopne
repz
dec
icebp
rorb
push
cmp
adc
je
lret
push
cs
aas
fisttpll
sub
mov
outsb
pop
or
mov
mov
jge
cmp
das
jo
jae
or
push
sub
test
stc
movsl
and
mov
mov
mov
or
cmp
mov
pop
fistpll
fadds
adc
jb
inc
in
shlb
jp
jb
call
jmp
mov
enter
ret
and
add
bound
pop
mov
stos
repz
pop
ret
ret
das
lcall
push
pop
xor
adc
inc
lock
cmp
loopne
mov
dec
add
shl
dec
sahf
call
fsubs
cli
stos
sbb
mov
rcr
add
fisttps
and
pop
sbb
mov
test
mov
xlat
icebp
aad
out
mov
shll
jno
jb
leave
pop
loope
lcall
ljmp
xchg
fiadds
inc
sbb
lret
in
hlt
jp
mov
xor
pusha
fistpl
pop
stos
or
dec
outsb
adc
jnp
test
sti
push
test
fisubrl
mov
loop
push
jbe
jnp
xchg
cmp
popa
dec
xor
in
sub
push
fwait
dec
lds
sub
icebp
pop
jle
inc
dec
movsl
dec
push
sub
jmp
repnz
es
xor
sbb
movsb
jmp
data16
cmc
outsb
loopne
jns
inc
cmpsl
fstps
mov
out
jb
cmp
loop
pop
fwait
icebp
add
dec
inc
xchg
dec
aaa
repz
and
mov
in
and
ret
scas
idivl
and
inc
insb
in
pushf
mov
mov
aam
loopne
cmc
fcmovu
sub
clc
cmp
lds
inc
aas
sahf
push
lcall
adc
or
aam
mov
rcrl
sbbl
pop
sbb
mov
or
or
sbb
mov
int3
mov
inc
cmp
xchg
fs
xor
inc
xor
leave
popa
mov
mov
das
sbb
xchg
nop
push
mov
sbb
pop
out
xchg
mov
and
xchg
xor
push
data16
jle
sar
out
aaa
pop
sbb
dec
lret
in
cltd
fidivrl
cld
add
dec
push
inc
jb
dec
arpl
xor
jo
and
sbb
lcall
or
loopne
jnp
in
or
mov
mov
push
xchg
sti
adc
loopne
xchg
je
aam
cltd
add
sbb
mov
xchg
scas
add
xor
je
cs
sbb
lret
je
cmp
cmc
jg
dec
lret
dec
loopne
rcll
mov
push
xchg
cmp
push
sti
jb
sbb
dec
pop
add
ret
push
lret
inc
dec
inc
pusha
sub
push
xlat
shl
lds
mov
outsb
lcall
xchg
and
add
push
xor
xor
pop
shll
jns
dec
xchg
cltd
ljmp
jge
xchg
push
leave
adc
loop
adc
mov
xchg
adc
ret
and
scas
push
sub
adc
clc
mov
ljmp
sar
roll
lock
sbb
adc
dec
pop
or
add
out
dec
pop
mov
sub
lock
jle
add
mov
jb
mov
popa
pop
mov
repnz
lahf
xchg
in
es
out
inc
gs
test
jns
lahf
jecxz
icebp
pushf
mov
jne
in
mov
adc
mulb
dec
in
add
xchg
xchg
dec
push
add
mov
sub
or
ss
adc
mov
cwtl
stc
das
push
cmpsl
subb
js
add
mov
lea
adc
lods
std
sbb
mov
adc
xchg
jns
and
pop
add
stos
xchg
testl
outsb
xor
mov
dec
gs
and
loopne
les
popf
adc
inc
cmp
jle
iret
xchg
test
dec
ror
xchg
ds
fdivrl
fdivl
test
les
frstor
xor
ret
shl
addl
mov
call
mov
lods
test
aam
jge
pop
rcr
stos
jp
fs
insb
jge
xorl
popf
cli
sub
mov
pushl
jb
inc
hlt
lds
leave
push
adc
insb
bnd
lea
adc
or
out
jle
or
aas
inc
leave
addr16
cltd
and
mov
movsb
addr16
test
cmp
cmp
out
ss
mov
mov
and
pop
aas
push
lea
lods
and
mov
in
and
in
addr16
mov
sub
adc
dec
sti
ret
cmp
sbb
lret
test
sbbb
add
test
mov
add
out
lods
fcmovne
mov
imul
lods
pop
lcall
es
mov
inc
stos
lcall
dec
dec
sbb
out
je
jle
stc
xchg
mov
iret
pop
adc
jg
mov
mov
inc
sub
dec
repnz
pop
dec
sub
daa
xchg
mov
call
jbe
adc
movsl
jo
xchg
inc
mov
xor
out
or
pop
push
pusha
sbb
xor
mov
add
and
ret
cmp
sti
inc
jo
jle
jns
push
cltd
or
imul
jns
fisubl
jecxz
cld
inc
mov
mov
adc
add
mov
push
push
inc
icebp
xchg
jmp
icebp
lea
nop
add
mov
inc
push
sarl
add
sbb
mov
daa
push
mov
mov
out
scas
dec
dec
lods
mov
cmp
inc
les
call
ljmp
stc
xor
push
mov
inc
es
jb
adc
add
imulb
movsl
dec
mov
mov
imul
inc
mov
arpl
rorl
call
jmp
inc
ja
jbe
mov
push
js
cld
mov
xchg
or
mov
aas
or
jbe
mov
sar
xor
dec
add
push
fld
out
fistl
mov
push
pusha
mov
cmpsl
leave
push
shlb
movsl
cld
popf
mov
insl
push
sar
rcll
or
ret
cli
stos
jecxz
and
sub
xchg
sub
xchg
lahf
movq
stc
or
cmp
push
lret
pop
jp
push
out
repnz
in
out
jb
add
cmc
xchg
ret
and
add
adc
cmpb
xchg
inc
lds
sbb
hlt
push
lods
xor
inc
and
add
xchg
insl
cwtl
sub
add
ja
sti
push
adc
ret
sub
test
fistpll
xchg
xchg
mov
mov
rcr
popa
jg
jbe
addb
push
fisubrs
mov
jmp
push
out
js
inc
outsl
pop
pop
add
cltd
repz
jecxz
or
dec
stc
movsl
lds
hlt
iret
aas
inc
pop
jbe
pop
and
add
je
movsb
stos
out
stc
pop
adc
repz
jmp
sbb
inc
push
stos
leave
inc
push
mov
int3
loopne
subb
jnp
lcall
rolb
mov
lret
mov
rcl
test
outsb
push
jo
add
bound
jge
lret
inc
xchg
pusha
lods
sbbl
arpl
in
adc
or
jnp
mov
mov
mov
je
sarb
stc
lret
sarb
lods
jge
addr16
push
ljmp
xchg
jns
cmp
sub
add
scas
das
mov
stos
ret
mov
gs
out
rcr
rcl
dec
inc
push
cmp
add
xchg
jnp
mov
mov
jns
xor
cwtl
add
pop
stos
mov
sub
jnp
lret
add
leave
or
mov
outsb
les
test
adc
or
leave
cltd
xor
aaa
add
pop
adc
movsb
or
push
mov
and
stc
jae
scas
es
and
out
adc
stos
inc
clc
or
mov
ret
add
repnz
cmpb
repz
loop
sahf
pop
stc
or
cmpsb
cmp
xorb
pushf
stos
xchg
stc
ljmp
cmpb
or
shl
adc
inc
test
insl
xchg
popf
xchg
sub
cmp
mov
ret
jl
imul
push
or
nop
cmpsb
and
sahf
sbb
fmull
fs
testb
cmpsl
daa
adc
mov
pusha
es
popa
dec
or
mov
push
cmc
ljmp
xchg
pop
jmp
daa
enter
inc
jbe
iret
cwtl
and
and
mov
push
popf
pop
jg
push
cmpl
sahf
pop
fmul
cmpsb
add
outsl
sub
jl
add
movsb
out
jmp
scas
pop
mov
dec
imul
push
imul
popf
push
mov
cmpb
cs
jnp
dec
mov
xor
lds
mov
inc
les
cmpsl
fcoml
pop
imul
sbb
push
xor
add
cmpb
movsb
and
pop
cmpsl
shrl
cmp
inc
std
mov
cmpsb
dec
insb
leave
ds
cmp
cmpsl
stos
ds
or
mov
stc
and
not
adc
or
mov
call
rclb
test
sub
sbb
ret
jmp
jnp
xor
mov
imul
push
sbb
mov
ja
inc
test
pop
xchg
pop
push
jp
dec
and
or
lahf
inc
add
ret
xor
adc
insl
cs
movb
sub
scas
xor
add
sub
nop
ficoml
loop
hlt
dec
add
pusha
jmp
mov
fsub
stos
pop
pop
inc
pop
icebp
pop
fwait
out
dec
fnstsw
dec
fstpt
test
repz
mov
in
aam
cld
fbld
add
lret
cld
lret
jl
pop
clc
xchg
or
inc
shrb
in
lret
bnd
repnz
pop
inc
xchg
dec
scas
pop
cs
add
mov
add
xchg
sbb
out
cmp
adc
xor
inc
rorb
add
sub
scas
rcll
lds
sub
inc
test
jp
jno
lahf
fistpll
jmp
xor
lahf
sti
lahf
mov
out
add
fstp
xchg
jnp
mov
jb
mov
fstpt
cmp
xchg
cltd
add
sarl
pop
sub
shll
push
movsl
mov
add
cli
ja
pop
xor
push
pop
call
jmp
sarb
sub
iret
popf
cmpsl
loopne
mov
pop
xchg
jnp
movsl
cmpsb
mov
int3
ret
test
mov
aam
mov
mov
push
mov
inc
dec
dec
xor
movsb
frstor
sbb
xor
aas
xor
fldcw
xchg
les
lret
lahf
js
out
or
pop
pop
and
leave
cli
mov
sbb
aam
jg
cmp
insl
push
fcomi
imul
mov
repz
push
and
xchg
mov
out
add
data16
xchg
rcll
mov
jno
add
call
xor
xor
dec
jo
ss
arpl
insb
cmpsb
clc
insl
mov
out
and
mov
xchg
and
push
mov
push
not
jno
cli
stos
shr
fstpl
or
enter
ja
iret
loopne
movsb
lret
repnz
dec
data16
bound
push
push
and
cltd
dec
js
mov
inc
into
push
sub
mov
add
push
mov
push
mov
inc
fsubp
sub
adc
insl
loope
or
into
mov
mov
popf
jge
dec
cmp
out
or
cmpsb
nop
lcall
dec
subb
mov
mov
xchg
in
dec
outsb
sahf
into
mov
stc
dec
lahf
add
fistpll
inc
pop
enter
add
add
xor
out
fistps
outsb
add
mov
xlat
jne
imul
aas
jecxz
and
sbb
push
cltd
movsl
pop
cld
cmpsl
lret
rorb
cld
jb
fidivs
outsl
xor
rcrb
inc
pop
out
mov
out
ret
stos
lods
inc
mov
lds
jmp
xor
add
lds
or
pop
cmc
sahf
and
adc
sub
xor
imul
int3
cmpsb
shrb
in
rcrb
push
xchg
pop
jmp
jo
fsubs
out
in
push
call
sub
mov
out
jbe
movsb
inc
fwait
rorl
mov
outsl
cmp
daa
sti
into
inc
lcall
mov
and
test
push
jns
mov
sbb
mov
das
push
xor
rolb
xor
mov
inc
add
bound
jo
push
xchg
or
movsb
imul
add
xchg
mov
xchg
negl
push
sahf
inc
jo
mov
push
in
mov
std
in
lds
push
push
fidivrl
mov
shlb
mov
sbb
pop
xchg
ret
pop
add
push
sbb
sbb
mov
in
add
mov
add
daa
mov
xor
mov
aaa
push
push
jp
aaa
sbb
movsl
or
call
fnstsw
mov
sub
mov
int
cltd
adc
mov
xchg
cmp
iret
fucomi
mov
xchg
or
stos
aaa
jecxz
mov
popf
rcrl
sbb
fstps
add
addr16
pop
loopne
nop
add
pop
cmp
xchg
insl
gs
mov
aad
push
shll
nop
sbb
inc
gs
in
jge
push
inc
bswap
adc
lret
ret
hlt
push
loop,pt
mov
in
movsl
cmp
add
push
inc
mov
add
jg
sbb
or
xchg
aas
hlt
inc
or
mov
mov
fidivrl
aam
into
xchg
dec
pop
fwait
into
jg
and
push
imul
cmpsl
sub
xchg
jae
ss
shr
xchg
hlt
fnsave
cs
push
pusha
inc
in
or
lea
cwtl
mov
pop
shl
aam
cmp
out
jmp
jmp
test
aas
cmp
std
sbb
insl
sbb
rcll
scas
mov
sub
jg
stc
adc
pusha
or
dec
cmp
cwtl
push
lahf
xchg
inc
xchg
scas
mov
das
stos
xadd
icebp
daa
xchg
xor
xor
mov
imul
inc
push
mov
addr16
das
and
and
addr16
mov
lea
xor
jae
mov
adcl
xchg
dec
sub
lods
icebp
cmpsl
out
xor
rcrb
mov
out
leave
mov
sub
jnp
xor
push
sti
mov
push
sti
sub
add
testb
popa
or
mov
mov
flds
push
int3
push
add
xor
sub
xchg
outsb
loopne
cmpsb
mov
and
cmpsl
jle
xor
dec
das
xchg
sbb
sbb
pop
adc
inc
loopne
mov
sti
mov
jg
jle
lods
sbb
add
jl
fs
icebp
adc
sbb
jmp
mov
push
fadds
movsb
negl
mov
adc
xor
fidivl
lcall
sbb
lahf
fdivrs
movsl
xchg
mov
sbb
add
and
hlt
outsl
imul
xchg
aas
ljmp
das
or
sbb
cltd
popa
and
pop
repnz
lods
ds
jmp
dec
test
mov
nop
ret
ret
adc
rcrl
in
mov
dec
mov
jb
roll
push
cmp
aaa
cmp
xchg
loopne
das
jmp
mov
shrb
pop
decb
xchg
adc
push
fcomps
push
push
cmp
mov
or
add
pop
outsb
cmp
enter
xlat
call
mov
fldenv
mov
jge
sahf
arpl
xchg
scas
xor
je
adc
and
xchg
pop
jge
test
leave
add
stos
mov
push
inc
loope
gs
push
scas
jg
aad
mov
popf
cmp
int
xchg
cmp
cs
lods
loopne,pn
les
xchg
jns
repz
cmp
jecxz
add
cmpsl
mov
cmp
imul
lret
fldt
rorl
not
push
mov
xor
sbb
aam
dec
test
mov
nop
mov
dec
sub
sbb
stos
sub
inc
mov
inc
stc
aaa
rcrl
lods
mov
jmp
pop
sbb
mov
fwait
cmpsb
arpl
jle
mov
xor
inc
pop
cmp
repnz
and
or
imul
stc
cmp
sub
movsb
xchg
cld
mov
insl
xchg
pop
add
es
sub
test
rorl
std
sbb
pusha
jae
test
cmpsb
adc
inc
mov
adc
cmp
add
mov
leave
push
inc
stos
jbe
or
call
pop
cs
sbb
ja
add
and
sub
add
pop
or
repz
adc
adc
push
out
lock
inc
pop
je
xor
mov
or
dec
addr16
jbe
jl
mov
inc
arpl
cmpsb
pusha
inc
rcrl
int
in
int3
enter
dec
mov
jmp
lret
dec
into
jnp
and
push
pop
aad
mov
pop
inc
jge,pt
in
divl
repnz
icebp
cli
das
adc
into
push
in
mov
push
jns
addb
push
rcrb
fmuls
mov
xchg
mov
repz
call
outsl
or
into
and
into
sub
nop
sbb
test
in
fistpl
in
or
out
jp
pop
in
dec
adc
inc
push
leave
outsl
pop
push
lock
sti
ror
lods
and
nop
in
sti
lcall
lret
call
mov
cmp
fildl
cmp
clc
es
int3
movsl
pop
or
enter
pop
jns
mov
cli
lret
inc
pop
out
repz
rcl
gs
scas
xchg
imul
inc
xsaves
mov
xchg
das
mov
sub
out
pop
sbb
mov
jge
and
mov
or
mov
repz
stos
push
or
aad
and
mov
add
mov
adc
xchg
cmpsb
add
lret
or
in
dec
adc
movb
jle
shlb
mov
and
sbb
rol
and
adc
leave
push
enter
lcall
mov
mov
lcall
cld
mov
pop
inc
stos
test
je
shlb
repnz
and
xor
cmp
shll
lahf
dec
jns
push
loopne
inc
and
fiadds
test
and
add
jno
cmp
jo
inc
cmpsl
pop
push
mov
iret
inc
jmp
jno
mov
xor
cwtl
fistpl
cmp
jge
out
xor
aam
imul
dec
push
inc
test
xor
push
insl
and
push
cwtl
pop
insl
nop
aaa
dec
pop
aas
stos
jno
dec
mov
inc
in
sti
mov
mov
iret
addb
mov
mov
stos
aaa
sub
sub
loopne
lock
cmpsb
testb
iret
cmp
inc
cmp
jne
sbb
pop
stos
dec
xor
fimuls
cwtl
hlt
sbb
fimuls
in
cld
rcrb
lahf
orl
mov
stos
sub
neg
out
sub
pop
cmp
xchg
fcomps
xchg
js
shr
lcall
push
dec
jnp
and
imul
shrl
xchg
icebp
cmp
mov
lods
dec
mov
cmp
sub
out
jp
test
mov
sub
outsb
inc
je
bound
xor
dec
lds
enter
je
jnp
sti
out
sub
inc
inc
test
push
or
sbb
js
out
lock
sub
inc
inc
loopne
fwait
mov
movsb
lahf
cld
lods
out
mov
leave
sti
mov
jae
outsb
jbe
insl
mov
hlt
sub
outsb
sbb
loop
sbbl
lcall
imul
xchg
add
or
pop
jg
mov
mov
roll
lcall
cmpsl
jmp
mov
mov
mov
clc
dec
mov
test
pop
sbb
movsl
push
adcb
fs
mov
scas
jae
fld
icebp
jmp
int
cs
xchg
push
push
push
inc
adc
rcr
mov
xor
pop
push
int
fmuls
mov
pop
cmp
aam
loope
xchg
cltd
xor
das
incb
or
cmp
ljmp
xor
stc
lock
test
mov
jge
addb
xchg
lret
sub
jbe
mov
mov
dec
push
nop
xchg
adc
xchg
xorl
inc
lret
xor
mov
mov
aad
fstpl
loopne
mov
mov
out
ds
popf
arpl
mov
sub
pop
cld
sbb
adc
pop
or
or
dec
nop
xor
cmp
lcall
cmpsb
emms
outsb
in
pop
xor
fists
push
sbb
pop
cmp
loopne
push
sub
mov
ret
pop
aad
sub
lods
mov
or
mov
ret
mov
lret
cmp
ficoms
addb
in
lahf
jb
xchg
pop
sub
cmp
cmp
sbb
sbb
lcall
mov
insb
mov
and
je
mov
clc
fnsave
jl
lods
sbb
repnz
mov
sub
jbe
jecxz
mov
arpl
dec
jbe
sti
xchg
add
repz
cmpsb
or
cmc
add
arpl
xor
out
into
pop
out
sbb
push
pusha
push
sar
and
cmp
lods
dec
test
cmp
cltd
fcompl
and
ret
xor
sub
enter
hlt
lea
push
cs
das
sub
sub
sbb
cmp
hlt
adc
mov
xchg
mov
lcall
jae
pusha
mov
xchg
and
ret
gs
out
enter
mov
mov
loopne
push
call
stos
and
aad
test
push
stc
mov
sub
loope
pop
dec
mov
pminsw
xor
sub
fistps
insb
inc
ss
arpl
ficompl
sub
insb
dec
jno
add
ja
loope
push
test
xchg
rorl
repnz
inc
out
std
out
daa
pushl
and
lea
mov
sub
out
inc
adcl
mov
push
ja
push
ficoms
jecxz
sub
cmp
mov
push
lahf
icebp
add
in
cld
ret
pusha
push
or
cli
in
filds
cmp
repnz
push
xor
out
lods
push
cmpsb
test
je
daa
adc
lods
push
cmp
mov
movsb
push
jge
jae
testl
jne
push
dec
or
mov
orb
fldl
ja
xlat
mov
adc
dec
sub
sbb
add
sti
sbb
push
inc
add
add
sub
mov
sbb
add
add
test
jb
cmp
mov
push
jae
mov
stos
orl
push
sbb
pushf
push
xchg
out
loopne
les
das
xlat
xorl
dec
cwtl
bound
pushf
out
sub
jmp
mov
jbe
pop
movsb
bound
bndstx
pop
mov
add
leave
hlt
jmp
sbb
jns
inc
adc
jmp
mov
jle
xor
insl
test
or
cmova
cld
dec
adc
pop
pop
pop
sub
out
shll
sbb
xchg
cwtl
sti
mov
or
in
xor
test
and
push
mov
fisubrs
pop
sahf
jle
xor
add
xor
or
mov
cwtl
sub
js
jo
fisttpll
leave
lds
add
pusha
lock
into
clc
mov
dec
ret
fldt
sub
or
jp
pop
gs
subl
test
jg
and
add
pop
pop
std
ss
sbb
and
inc
in
mov
or
clc
ficompl
xchg
sbb
or
mov
rcrb
jbe
sbb
jne
cld
inc
imul
push
sbb
mov
mov
ret
fdivrs
shlb
loopne
iret
or
jbe
adc
cli
mov
dec
mov
test
xchg
pop
shr
int3
lcall
out
adc
xchg
mov
push
les
testb
cwtl
add
or
adc
inc
and
clc
mov
cmpsb
pop
jecxz
stos
mov
ret
dec
jne
push
xor
inc
pop
sbb
xlat
fdivrs
icebp
sbb
jp
pop
mov
lods
push
dec
jmp
pop
sbb
push
jb
jne
shlb
jbe
test
jae
fsts
adc
aaa
cmpsl
dec
lret
icebp
adc
aaa
inc
jg
dec
loopne
xorps
leave
mov
xchg
cmp
push
or
mov
aas
xorb
xor
xchg
xchg
jne
jecxz
pusha
sbb
push
jbe
push
xor
cwtl
cmc
lret
orl
lret
mov
hlt
mov
push
test
mov
mov
pop
xor
cli
jo
lds
outsb
pop
sub
out
mov
addr16
xor
nop
or
xlat
pop
jb
dec
lret
into
arpl
cmpsl
or
and
cmp
pop
pop
es
push
add
daa
jno
sbb
aad
jbe
and
cltd
lcall
mov
xchg
insb
imul
imul
lret
das
xlat
in
or
insb
add
repz
sub
mov
pop
and
sub
ja
xor
fistps
orl
jge
jmp
push
mov
stos
cmp
add
aad
and
lock
or
and
sbb
dec
push
out
fistpll
out
das
xor
mov
je
cmp
mov
xchg
mov
inc
mul
lcall
imul
cmp
gs
cmp
pop
jmp
push
push
sbb
pop
ss
push
in
adc
or
fmuls
jb
xchg
fs
enter
decb
jecxz
pop
push
aas
cmp
adc
repz
push
rclb
pop
popa
scas
stc
outsb
movsb
ja
repz
mov
dec
xlat
jl
test
loope
clc
sbb
xchg
lock
pop
xor
aaa
and
push
xchg
in
es
adc
mov
or
add
shrl
inc
xorb
stc
add
aas
sbb
add
cmp
iret
adc
lcall
dec
jle
adc
dec
xchg
adc
jecxz
repnz
inc
in
mov
xor
cmp
mov
loopne
outsl
mov
iret
mov
sbb
loop
dec
aam
and
aad
cmp
loopne
lret
fistpll
arpl
aas
mov
or
jns
add
mov
dec
call
stc
inc
insb
cmpsl
inc
dec
push
insl
pusha
inc
xchg
or
add
cmp
in
pop
cltd
icebp
imul
imul
xor
sahf
jo
and
push
sbb
in
jmp
outsl
mov
stc
jb
pop
outsb
inc
imul
push
pop
lock
iret
fistl
stos
sub
pop
cmp
addr16
xchg
pop
adc
and
jmp
add
push
pushl
leave
jecxz
mov
inc
xchg
mov
dec
and
bound
rcll
xchg
pop
int3
jb
jns
rcrl
dec
lret
fsub
inc
loopne
add
es
addr16
cmp
jge
sbb
dec
shl
shrb
sub
cld
adcl
aam
sbbb
aad
out
sarb
pop
test
sbb
daa
mov
xor
add
xchg
in
lock
xchg
and
inc
push
jae
stc
mov
add
dec
mov
out
mov
lods
cmpsb
out
ret
adcb
scas
gs
out
cmp
arpl
pop
xor
inc
mov
sbb
sub
adc
mov
pop
pushf
dec
mov
mov
push
mov
in
xor
sahf
bound
sub
or
add
cltd
dec
cmp
ss
pop
adc
ror
or
addr16
cld
inc
mov
les
mov
cmpsb
sub
mov
xlat
out
push
xchg
push
aam
push
push
push
xor
cmp
mov
mov
sahf
adc
repz
lret
and
cmpsb
or
or
mov
mov
and
into
test
ljmp
mov
lahf
xchg
jp
and
dec
movsl
jp
and
inc
mov
clc
cmp
jp
sahf
push
jne
arpl
xor
jle
stos
xchg
icebp
inc
cld
repz
sub
sbb
andb
sub
mov
orb
das
adc
cmp
mov
jnp
dec
insb
aaa
sub
sbb
cwtl
scas
xchg
dec
loope
jmp
clc
ds
fisubs
inc
decl
and
cwtl
sub
ss
push
nop
xor
sti
aad
fcomip
pop
mov
cli
rorl
mov
push
mov
xor
aad
mov
push
and
jl
dec
in
rolb
pop
sarl
xor
jno
dec
jb
stos
pop
sti
push
fbld
adc
sbb
mov
sti
inc
mov
add
inc
and
adc
mov
mov
sub
fldenv
and
adc
repz
xor
popa
outsl
or
pop
iret
push
inc
fwait
mov
outsb
adc
mov
mov
aas
push
mov
subl
into
lahf
add
inc
fwait
imul
jge
push
ficomps
fists
lods
fs
xor
jecxz
adc
pop
rcrb
add
mov
pop
leave
sub
cmpl
push
mov
xor
mov
xchg
jmp
sbb
cmp
cmp
and
mov
mov
mov
das
push
pop
in
ljmp
xor
andl
sahf
cli
fwait
aas
push
jge
ret
pusha
dec
hlt
xor
lret
mov
and
sahf
pop
cmp
add
hlt
in
sbb
fisubs
cmp
or
roll
js
add
jecxz
mov
jecxz
push
xchg
nop
sbb
inc
push
sbb
add
test
cmp
mov
dec
icebp
int3
pop
ficomps
lock
cmp
add
jp
repz
push
mov
loop
shll
das
push
fwait
cmpsb
jl
mov
enter
dec
and
xchg
testl
xchg
and
sub
mov
sub
mov
outsl
xor
cmpl
loopne
imul
ret
test
aad
xorl
gs
mov
je
jg
scas
frstor
dec
push
jne
in
mov
and
fbld
xor
or
cwtl
scas
pushf
inc
push
push
fistl
adc
push
adc
mov
add
insb
add
add
repnz
icebp
jne
lods
pop
pop
scas
out
sbb
mov
push
call
outsb
pop
cltd
inc
push
add
aam
cltd
fld1
out
cmp
aas
push
js
pop
push
adc
fldz
add
lret
stc
inc
lret
es
ss
mov
pop
test
xor
lahf
mov
xor
push
xor
jge
sbb
inc
add
adc
lret
popa
fistps
jno
adc
lret
push
fstpt
cmpsl
or
mov
rolb
xor
push
push
adc
sarl
ja
pop
ds
pop
sub
imul
jne
push
int
inc
xor
pop
mov
int3
and
popf
mov
xor
fcompl
cmp
loop
mov
add
pop
xor
pop
inc
pop
js
test
cmp
sub
sbb
call
aam
sbb
xor
push
pop
fnstenv
xchg
test
aas
jg
ret
xchg
mov
cld
stc
ja
into
jne
sahf
stc
xchg
or
mov
arpl
cmpsl
sbb
les
imul
aam
in
aad
dec
xor
push
cltd
xor
sbb
movsl
outsb
cwtl
mov
xor
pop
pop
imul
push
push
pushf
dec
rorl
call
mov
lahf
stc
adc
movl
mov
xlat
stc
push
testl
dec
xor
adc
cmp
fisubrs
clc
inc
inc
fisubrl
xchg
leave
stos
lret
sahf
fistl
xchg
mov
push
in
jg
xchg
inc
mov
push
outsl
and
or
gs
cmpsb
mov
xchg
sbb
out
mov
lea
sub
aad
mov
and
nop
jge
xor
push
clc
xchg
mov
mov
push
adc
sbb
jno
aaa
call
pop
adc
pop
jg
jns
scas
bound
jge
es
inc
ret
pop
in
movsb
loopne
pushf
push
or
pop
cmc
popa
test
pop
loopne
and
sub
pop
xor
or
icebp
mov
or
adc
inc
mov
rolb
add
roll
push
mov
jmp
hlt
jmp
lods
mov
clc
xor
imull
mov
mov
in
xlat
or
lret
imul
jecxz
fwait
jne
fists
jecxz
mov
jne
inc
or
loop
stos
dec
sub
ret
cmp
ss
add
int
sub
out
xchg
rcll
movb
mov
out
test
stc
adc
ljmp
sahf
jmp
pop
and
push
loope
or
xchg
in
push
sbb
mov
idivb
out
lds
adc
cmp
sub
out
mov
movsl
xchg
in
ret
mov
or
test
and
and
xor
std
pushf
xchg
test
insb
sub
stos
jp
push
adc
pop
ret
cs
lret
enter
imul
lret
push
jns
add
inc
push
dec
repz
mov
sbb
lea
and
enter
push
mov
xor
lcall
adc
sub
lods
scas
sahf
and
cmp
mov
jo
dec
les
mov
hlt
iret
inc
stos
pop
inc
mov
xchg
popa
adc
xchg
ficompl
shll
das
out
fwait
mov
mov
jmp
sub
dec
push
xchg
and
pop
push
test
and
fwait
push
cmp
or
cwtl
imul
push
jne
push
pop
into
or
pop
inc
int3
push
add
lahf
aam
mov
fisubs
sbb
daa
xor
mov
xor
lahf
fldt
push
inc
xor
add
lods
insl
xchg
inc
scas
mov
and
pushf
icebp
into
jg
cmp
fwait
and
inc
mov
and
lcall
mov
test
fs
and
fcmovnbe
add
add
cmp
cli
fwait
cmp
jmp
and
dec
mov
mov
push
pusha
rcrb
mov
push
pop
test
dec
fdivrp
outsb
mov
cmp
mov
cli
out
ret
stc
arpl
dec
and
scas
aad
sub
xchg
sub
aas
and
sub
outsl
decl
and
hlt
or
or
dec
leave
hlt
inc
or
leave
rclb
ss
push
scas
test
mov
mov
das
mov
push
jns
jbe
jno
push
mov
enter
pusha
pop
dec
fwait
xor
test
int3
rclb
cmpsb
cs
lea
es
in
mov
es
leave
push
std
outsb
jg
shr
out
hlt
xor
and
fdivrl
add
adc
inc
fldenv
test
mov
arpl
dec
push
mov
add
fwait
pusha
mov
fimull
mov
and
sbb
mov
insb
xchg
in
icebp
inc
outsl
mov
loop
sub
or
cmpsl
lret
mov
xchg
push
push
push
mov
or
orl
pop
adc
cmp
inc
xor
sbb
subl
xchg
jmp
insb
les
add
dec
test
mov
out
iret
stos
stc
add
mull
out
lods
mov
idivb
adc
push
mov
adc
hlt
in
lahf
mov
mov
insb
mov
fdivl
adc
in
and
mov
mov
and
jnp
sub
scas
pop
and
imul
pop
rorb
dec
xor
xor
mov
cltd
push
inc
test
cli
loope
jno
cmp
fucomip
test
lret
cltd
pop
xchg
jge
pop
xchg
fnstsw
int3
gs
mov
cmp
add
pop
neg
pusha
xor
xchg
xchg
shll
mov
movsb
fmul
or
or
sarl
hlt
and
mov
cli
sub
dec
jmp
mov
jne
cmp
ret
loope
mov
xchg
pusha
add
hlt
imul
popa
inc
and
mov
push
mov
stos
clc
loopne
lcall
inc
xor
sbb
nop
fbstp
movsl
sub
stos
or
icebp
addr16
mov
inc
cmp
pop
outsb
test
or
test
rcrl
int
inc
jp
movsb
xor
xchg
xor
xchg
cltd
nop
inc
sub
out
sbb
sbb
fstps
pop
push
repnz
fnstenv
mov
cmp
inc
stc
xchg
fisubrl
icebp
imul
iret
add
fistpll
fists
popa
and
into
mov
insb
jge
cmp
xchg
addr16
sub
lock
frstor
mov
out
pop
jl
adc
sbb
or
gs
cmp
mov
leave
das
push
mov
pop
mov
push
lret
or
dec
cli
out
clc
mov
mov
xor
jae
mov
inc
movsb
shrb
push
pushw
pushf
jg
xchg
mov
pusha
pusha
cld
adc
sbb
cmp
xchg
movsl
enter
out
dec
pop
cwtl
xchg
xor
ret
inc
sbb
mov
xor
cmpsl
aam
xor
aas
pop
or
imulb
and
and
adc
push
cld
in
sbb
jp
mov
or
stc
inc
pop
imul
sbb
aaa
push
inc
mov
movsl
insb
incb
sub
test
pop
out
mov
adc
adc
cwtl
mov
mov
ss
out
add
jne
movsl
clc
sub
cmpb
jne
ror
inc
pop
fidivs
mov
lret
and
fs
push
push
outsb
test
mov
out
and
in
call
stos
in
insl
fistpl
je
push
lods
rolb
popf
xchg
test
repz
mov
les
in
sub
push
inc
rclb
add
pop
test
fwait
aad
inc
mov
mov
mov
jns
sub
adc
js
ret
cmc
mov
prefetchwt1
or
mov
xchg
adc
test
adc
insb
test
adc
mov
inc
ret
xlat
lahf
in
mov
add
and
mov
mov
lahf
mov
movl
decb
sti
ret
scas
xor
add
mov
movsl
mov
xlat
or
mov
sahf
loop
push
out
xchg
loop
std
shlb
jmp
mov
or
push
lcall
push
shlb
and
or
icebp
and
ds
adc
hlt
pop
jno
imul
sti
pushf
add
or
hlt
jl
add
cmp
mov
add
pop
lds
and
dec
mov
movsl
fnstenv
ss
js
outsb
mov
inc
push
rorl
xor
aaa
mov
mov
jns
lcall
mov
push
loopne
jnp
lcall
xchg
cmp
mov
pop
in
mov
cmp
dec
or
loopne
inc
mov
push
push
push
inc
push
sar
jecxz
jbe
sub
jg
icebp
push
jle
sub
or
shlb
lock
addr16
add
lds
scas
or
jne
pop
pusha
iret
loop
imul
fdivs
or
sbb
cmp
and
sbb
cmc
sbb
ret
pushl
fldenv
out
repnz
cld
mov
xor
cmp
add
sub
cltd
pop
dec
jp
add
adc
in
rcl
mov
pushf
shll
outsb
jbe
cmpsb
and
sub
out
es
inc
push
daa
mov
fdivs
or
jle
xor
mov
and
enter
sti
add
sbb
dec
iret
adc
or
mov
sub
call
jne
add
dec
mov
inc
adc
in
int
ret
fbstp
or
out
inc
sahf
lret
inc
lea
mov
lret
mov
aas
jno,pt
movsb
cmpsl
sub
jmp
les
lea
xor
in
push
push
jecxz
xor
mov
jno
fwait
sub
in
aas
imul
pop
into
xchg
pop
mov
icebp
pusha
fstpl
stos
test
pop
jae
push
das
xchg
cmp
dec
xor
cmp
iret
cltd
pop
mov
insl
mov
fldenv
ss
jne
arpl
and
lahf
xchg
jnp
inc
movsl
sub
or
add
faddp
mov
jecxz
or
dec
cltd
decl
movsb
push
mov
sbb
lahf
faddl
loope
das
sahf
test
push
rcl
fprem1
and
inc
xchg
mov
add
xchg
inc
dec
mov
jmp
mov
inc
adc
es
test
mov
aaa
insb
or
mov
fwait
push
or
xchg
mov
or
jmp
add
add
movsl
jecxz
sbb
or
fldt
and
xchg
daa
dec
inc
rolb
adc
out
int
jae
jge
mov
push
clc
out
xor
and
xchg
out
adc
push
mov
sub
sarb
mov
ficoms
mov
or
icebp
dec
sahf
cltd
dec
test
sbb
mov
in
push
int3
xchg
out
sbb
insl
popa
in
sbb
sahf
es
and
fisttps
xchg
jbe
jecxz
es
sbb
inc
aas
jns
cmp
stos
adc
mov
int
cmp
dec
test
cs
xchg
xchg
or
push
push
push
jae
and
pop
push
insl
cli
ljmp
hlt
push
aas
loop
imul
cmpl
inc
stos
daa
mov
xor
clflush
out
andb
mov
lods
sarl
mov
inc
xchg
mov
or
adc
mov
lock
push
mov
sub
pop
lcall
sbb
popf
lea
pushf
cwtl
adc
in
mov
pusha
hlt
dec
xchg
sub
xorl
and
int
iret
or
outsb
mov
xlat
mov
push
shl
fdiv
pop
dec
ljmp
loopne
aam
hlt
std
mov
add
add
or
add
mov
inc
andb
sub
fnstenv
push
add
add
fsubrl
mov
jmp
push
cli
daa
lods
idivb
insl
xchg
sbb
inc
push
push
flds
push
call
jl
sub
pop
inc
mov
imul
mov
std
jns
loope
add
push
pop
pusha
mov
es
insl
pop
aad
xor
add
jae
out
ficompl
adc
adcl
push
rcrb
test
and
int3
leave
lahf
stos
add
cmpsb
cltd
lods
cmc
arpl
jp
lret
lea
mov
in
xchg
lea
test
cltd
test
sbb
lods
subb
pop
pop
data16
lods
in
pop
mov
push
inc
cmp
pop
and
lcall
mov
shl
or
jnp
shrl
leave
or
std
outsb
rcll
iret
pop
in
clc
jb
loope
test
call
lret
sub
xor
mov
orl
cmpsl
cmc
cwtl
xchg
insb
inc
jl
or
popf
ds
arpl
sbbb
rorl
jmp
nop
xchg
jb
mov
mov
mov
cmpsl
jno
stc
mov
pop
testb
lret
fidivrl
repnz
daa
test
lock
add
jbe
das
and
push
jne
stc
xor
push
ss
popf
mov
xor
stos
ljmp
xor
lahf
sub
mov
scas
mov
adc
cltd
inc
jnp
jecxz
xchg
adc
dec
shll
mov
mov
lea
movsb
sub
ret
stos
xorl
jmp
sub
sbb
dec
sub
sbb
dec
or
repz
mov
loopne
je
pushf
cmp
inc
mov
or
push
inc
sti
loopne
fwait
call
jmp
les
mov
nop
xchg
insb
movsb
leave
pop
sbb
push
pop
add
jne
pop
arpl
movsb
aad
cmpsl
mov
cmp
mov
mov
js
lds
add
test
pop
push
inc
imul
sahf
idivl
ss
mov
cs
scas
ret
push
addr16
ss
lahf
push
mov
jmp
pushf
mov
push
mov
sbbb
subl
xchg
sbb
lock
jne
ds
push
push
popf
dec
loopne
pop
rcrb
cmp
pop
xchg
ds
sti
out
jmp
lret
sub
int
flds
iret
inc
out
xor
mov
mov
icebp
push
xchg
outsb
and
inc
and
sarb
xchg
cmpsl
pop
mov
sub
call
ret
xor
push
lret
lret
es
arpl
dec
in
xor
jg
out
clc
xor
das
push
push
subl
pop
pop
repnz
movsb
in
mov
insb
cwtl
add
jg
fstps
enter
sub
fstpl
mov
scas
clc
cld
fisttps
fnsave
hlt
pop
jge
test
ret
test
pop
xchg
idivl
jo
mov
jmp
push
rol
ss
mov
out
inc
cmp
xor
test
mov
or
mov
pop
fcompl
mov
mov
push
shll
dec
mov
bound
sub
mov
fldl
pop
dec
xor
lret
lock
mov
shlb
cmp
and
push
lret
and
xchg
icebp
sbb
divb
sarl
jne
int3
lret
decl
ljmp
xor
aaa
push
cmp
out
cltd
inc
aad
jne
xor
insl
xor
cmp
in
jge
mov
pop
mov
fs
jbe
flds
mov
repnz
cmpsl
in
sub
mov
clc
pop
cwtl
jo
out
mov
mov
cmp
clc
imulb
lea
ja
adc
fcomps
mov
data16
xchg
pop
xchg
es
imul
mov
dec
mov
dec
or
inc
mov
jo
movsl
shlb
bound
clc
rclb
jge
imul
adc
into
movsl
je
inc
xor
test
jnp
mov
push
mov
mov
sub
cmc
clc
sar
jbe
mov
dec
dec
or
and
shll
jg
xchg
dec
inc
out
xchg
das
insl
imul
pop
bound
jge
ljmp
push
pop
aas
lods
out
es
jmp
loope
popf
idiv
imul
gs
std
out
movsb
vpsraw
shr
js
sti
or
lods
xchg
rorb
popa
out
arpl
mull
shll
xlat
push
adc
fcmovne
das
sub
in
out
js
jle
shrl
stos
scas
and
xchg
jne
add
in
dec
into
fbld
insl
dec
lret
dec
dec
sub
popf
loope
daa
pop
ret
dec
xor
sub
dec
mov
xchg
cmp
repnz
mulb
and
jmp
mov
and
push
aad
call
loope
dec
jle
and
in
leave
or
pop
repz
icebp
sbb
or
out
out
lret
and
pop
shlb
stc
test
mov
int
mov
imul
repz
aad
gs
dec
or
pop
arpl
inc
add
mov
test
in
inc
lods
adc
mov
into
fisubs
aas
sub
mov
sahf
mov
cmp
fcomps
add
cmp
jg
or
cmp
stos
sub
jl
dec
ficompl
jns
xor
cmp
cmp
sub
test
xchg
sbb
scas
clc
fstpl
addr16
push
call
cmp
lods
adc
push
clc
push
outsl
sbb
pop
inc
mov
sbb
push
es
or
mov
ja
jnp
or
mov
cwtl
mov
pop
or
jno
xchg
and
pop
repz
popa
movb
or
mov
test
and
inc
xlat
push
sub
je
popa
movsl
dec
fcomip
cltd
lret
stos
out
lock
idivb
pushf
das
pushf
dec
mov
inc
adc
mov
dec
stos
movsb
insb
mov
sub
mov
jp
hlt
es
cmp
int3
dec
int
push
xchg
xor
push
adc
mov
push
scas
cmpsb
xorb
testb
mov
mov
stos
adc
adc
inc
aam
xchg
mov
pop
imul
aam
adc
jns
push
cli
movsl
xorl
xchg
leave
dec
filds
int
js
dec
out
mov
roll
sarl
jae
dec
je
adc
xor
ja
nop
add
lret
cmp
pop
cmp
jbe
and
in
adc
popa
mov
or
xor
std
or
lds
xor
test
or
fists
bound
mov
fcomp
ss
pop
push
and
fiadds
and
movsb
and
dec
std
push
out
jg
fs
faddl
xchg
scas
mov
adc
or
sub
xchg
xchg
movsl
lcall
sbbl
lods
std
or
push
ljmp
insb
ja
das
test
mov
ja
test
mov
xchg
xlat
fisttpll
jo
or
fcom
out
pop
sbb
pop
jnp
dec
flds
lds
fwait
jecxz
out
fistpll
in
xor
or
xchg
push
push
pushf
cs
pop
movsl
xor
mov
add
push
push
adc
cmc
movsl
js
lcall
mov
loope
sub
inc
jp
pop
outsb
add
or
jp
jae
popa
out
mov
mov
aam
dec
test
mov
arpl
jbe
mov
mov
add
sub
xor
stos
mov
dec
cmp
inc
rorb
iret
dec
jns
lahf
sub
mov
cld
fnstcw
nop
stos
sbb
push
mov
pop
pop
mov
std
fldcw
mov
mov
inc
pop
daa
sbb
cmp
ret
insb
xor
mov
or
push
and
cmpsb
rorl
cmpb
mov
lea
popf
out
iret
sahf
rcrb
rorl
pop
mov
adcl
lds
aad
decl
mov
sub
int3
cmp
cltd
icebp
mov
mov
jne
fs
das
enter
xchg
insw
cmp
pusha
cmp
xor
lret
cmp
adc
iret
scas
adc
sub
add
mov
xchg
mov
stos
dec
in
adc
decl
gs
mov
roll
es
cmpl
mov
repz
cmpsl
xchg
aam
xchg
ss
xorps
aas
stos
and
fs
adc
xchg
orl
pop
xchg
fcomp
xchg
add
lds
sub
aad
mov
fwait
cmpsb
mov
insb
jae
or
aas
test
mov
and
mov
lods
lods
mov
call
sub
dec
jle
loopne
xor
cltd
scas
shlb
mov
jg
cmp
rorl
lock
lock
lret
fsubr
fwait
out
por
outsl
movsl
or
push
xor
popf
jns
mov
inc
fisubs
jecxz
sahf
aaa
jecxz
and
cli
in
ds
xor
adc
mov
push
or
push
cmc
imul
in
scas
clc
stos
mov
shlb
aad
sbb
cmpsl
aam
push
jo
mov
rorb
jo
arpl
inc
adc
aam
ds
pop
jns
push
icebp
and
imul
inc
xchg
cltd
cmp
inc
fists
mov
and
sub
fcmovnb
rclb
add
add
sub
jne
xchg
sbbb
cmp
jg
pop
sti
jne
dec
mov
cmpl
hlt
mov
adc
mov
fsts
jle
cmp
daa
repz
je
and
add
cmp
mov
sbb
movsl
pop
sub
insl
shl
mov
dec
mull
mov
dec
loope
shrl
stc
movsb
icebp
sbb
and
inc
out
xor
cli
gs
cli
inc
cmp
xor
xor
mov
ret
lret
fdivs
sub
sbb
clc
fstps
cmp
push
mov
scas
push
inc
call
or
xchg
out
adc
mov
sbb
mov
imul
ffreep
pusha
xlat
fwait
addr16
loope
loope
loopne
iret
fwait
sti
jbe
sub
mov
pop
ss
jno
xor
lret
fs
addr16
das
ds
adc
stos
mov
mov
mov
xor
sbb
mov
dec
daa
fwait
in
cmpsb
adc
mov
int3
pop
pop
and
fnstsw
jno
adcl
xlat
loope
jb
lea
scas
orl
stos
gs
cmc
xor
das
or
add
fiadds
clc
pop
dec
jge
and
dec
mov
scas
cwtl
pushf
xchg
pop
dec
cltd
insl
hlt
out
cwtl
jmp
inc
xlat
test
scas
fadd
scas
pop
jle
lret
sbb
pusha
dec
xchg
add
incl
cmc
fisttpll
push
pop
fs
and
shrb
jno
mov
dec
xlat
pop
mov
ret
sbb
test
jb
enter
pop
enter
cwtl
aad
ja
addr16
loop
or
mov
jg
std
rorl
pop
sbb
add
xchg
cwtl
out
or
jbe
cltd
sar
mov
push
mov
orl
sub
cmp
fidivl
jnp
dec
rol
idivb
scas
test
pop
cld
fwait
push
sbb
es
ss
adc
test
lds
into
mov
dec
nop
shlb
mov
or
and
xlat
xlat
inc
movsl
hlt
popf
inc
scas
push
out
xor
pop
rcl
jecxz
mov
cmpb
cmpsl
or
daa
and
xor
sub
dec
inc
es
scas
jecxz
xchg
and
pop
inc
sub
pop
xchg
mov
andb
mov
adc
jge
sti
out
push
mov
js
sbb
repnz
icebp
xor
push
sub
outsl
leave
pop
sarl
xchg
out
xchg
cmp
pop
jae
mov
xchg
mov
pop
insl
sarb
pop
test
jle
jns
movl
jne
adc
sub
xor
data16
ror
mov
xor
mov
hlt
add
xchg
lea
ds
ljmp
ret
jnp
pop
cmpsb
sub
jo
cmp
cmc
sbb
stc
imul
jno
imul
xchg
ss
ret
aaa
push
jbe
mov
fbld
scas
add
test
repnz
mov
cmpsb
push
jecxz
cmpsl
mov
jmp
daa
jo
pop
add
and
add
cmpsl
faddl
push
jno
mov
xchg
dec
mov
icebp
call
cmp
push
fldl
mov
fwait
test
lret
sbb
dec
clc
cmp
or
loop
insl
loopne
sub
into
adc
aad
inc
mov
cmp
jg
int
mov
scas
pop
mov
bound
daa
lock
inc
jno
xor
dec
push
adc
in
enter
loopnew
pusha
mov
repnz
sbb
jo
mov
push
inc
dec
fs
sub
ret
jne
inc
push
pop
cmp
sub
push
sti
or
imul
jns
xorb
sub
mov
pop
outsl
sbb
mov
lcall
int3
xchg
push
xchg
xlat
push
add
pop
es
sub
lcall
stos
cmp
xchg
iret
fisttpll
stos
mov
sbb
pop
xchg
aad
jp
jae
xor
loopne
add
out
lock
ret
es
dec
inc
test
in
push
sbb
pop
mov
xchg
add
pop
je
orl
mov
movsb
adc
pop
xor
xchg
sbb
jp
push
xchg
orb
push
stos
cmp
add
fstps
and
jo
mov
in
je
sbb
xchg
or
cmp
mov
in
scas
notb
push
sahf
test
outsl
fcomps
cmpb
rcl
pop
lea
scas
push
lret
mov
bound
lret
test
dec
pavgw
in
cmpsl
cmp
ljmp
mov
cli
mov
pop
stc
cmc
frstor
lret
xchg
mov
loopne
jl
cmpsb
add
popf
das
mov
mov
test
sar
pop
mov
jp
data16
dec
cmpsl
test
cmp
mov
mov
push
adc
pusha
dec
icebp
jg
hlt
stos
cli
sbb
pop
pop
stos
aas
hlt
mov
lcall
mov
push
dec
call
mov
or
xchg
outsb
sar
cld
add
jg
rorb
fimuls
cmp
iret
mov
out
fsub
lods
cmpsb
enter
add
shl
cmp
call
push
xor
aas
push
loop
xor
or
clc
adc
cmpsb
pop
out
inc
es
dec
sub
jno
int
cmp
in
cmpsb
cmp
pop
pusha
fistps
das
stos
and
mov
xchg
xchg
or
lock
xor
pusha
xor
sbb
stc
lea
push
outsl
dec
add
lods
and
idivl
or
pop
sbb
xchg
lret
dec
push
pop
mov
jae
dec
lods
lret
jns
lret
sbb
sarl
mov
addb
arpl
sub
fldenv
cltd
add
adc
test
mov
jg
dec
popf
out
add
cmp
adc
roll
xchg
outsl
cli
sbb
jno
ret
inc
push
xorl
push
insb
jns
fiaddl
mov
repz
jp
cmp
fildll
outsl
cld
mov
xchg
inc
dec
shl
sub
adc
cld
pop
push
jmp
data16
xor
cmp
and
sub
and
or
pop
arpl
sub
ret
lea
sub
xor
insb
adc
push
mov
lahf
fbstp
mov
shlb
data16
in
movsb
adc
and
jbe
loope
adc
xor
jmp
or
pop
xchg
push
pusha
pop
jle
xor
or
rcl
hlt
sub
xor
cld
test
addb
cmp
push
inc
cmpsl
fnsave
divb
dec
mov
dec
inc
lock
lcall
jb
push
adc
or
hlt
sub
push
jle
jp
filds
dec
jns
mov
insb
scas
mov
adc
sub
xor
add
into
push
xchg
movsl
push
jg
sbb
or
pop
test
lret
fs
and
jl
sbb
cld
ret
push
pop
or
jnp
stos
mov
mov
daa
mov
cld
or
shlb
sarb
xchg
sahf
jne
sub
sbb
xor
inc
nop
int3
cmp
add
xchg
cld
xchg
pusha
cwtl
in
push
push
and
inc
idivb
cmp
sub
xchg
cmp
inc
sti
fs
mov
inc
mov
stos
stc
loopne
push
test
ss
movsl
push
je
pop
push
cmp
out
and
les
fcoms
daa
out
imul
dec
insb
add
dec
test
lahf
jmp
fmuls
repnz
pop
pop
aaa
stos
and
xor
fidivs
push
push
or
adc
xor
movsb
add
or
dec
insl
std
ficompl
sahf
sarb
sbb
pop
jne
divb
xor
fsubrl
jp
mov
aas
jbe
ss
or
rclb
mov
ja
mov
lods
int3
fcomps
mov
imul
cmpsl
das
or
repz
sbb
mov
scas
ss
push
pop
pop
cs
sub
sti
cmpsw
pop
in
fisubrl
mov
mov
push
arpl
dec
jecxz
in
pop
lcall
and
jbe
lock
loop
jge
mov
and
out
pop
imul
mov
notl
mov
gs
pop
aad
jb
ret
lret
lds
sub
mov
shll
mov
mov
dec
and
dec
inc
add
add
cmp
movsl
pop
or
or
inc
lret
mov
out
in
cwtl
mov
rorl
jp
jae
xlat
pop
sbb
inc
lods
rolb
lret
jns
sub
dec
outsb
jmp
mov
add
mov
jp
js
in
jnp
and
pop
inc
fisttps
jmp
sbbl
lods
scas
inc
sub
push
add
out
xchg
mov
in
cmp
add
mov
cltd
xor
test
test
pushf
scas
pop
hlt
mov
mov
clc
clc
xor
ret
push
pop
cmc
in
jp
aaa
arpl
stos
cld
scas
sub
xor
fs
push
jge
hlt
lahf
pop
mov
xorl
pop
jb
insb
sti
or
clc
mov
out
mov
outsl
xchg
imul
pushf
cmp
mov
push
jnp
dec
dec
or
jg
es
jg
mov
xor
cmp
dec
clc
das
dec
push
sbb
shrb
mov
hlt
es
mov
xchg
mov
and
fidivl
pop
push
xchg
and
call
bound
lcall
sub
or
mov
les
std
push
test
nop
xor
mov
push
fsubl
mov
add
pop
sub
push
inc
push
inc
push
add
jmp
je
iretw
ds
fwait
lods
xchg
cltd
mov
mov
mov
mov
clc
or
jge
popf
jle
xchg
cs
jmp
or
pop
sbb
popa
push
imul
fsubrs
pop
adc
adc
mov
jg
fcoms
dec
aad
mov
pop
push
aaa
adc
out
daa
dec
jns
cmp
stos
in
pop
je
mov
out
pop
popf
pushf
dec
dec
in
push
push
jmp
arpl
gs
sbb
sbb
in
fs
push
into
mov
ficoml
sbb
xlat
sub
pop
lret
inc
stc
int3
dec
mov
jl
adc
push
pop
ljmp
outsl
xor
add
sbb
xor
xchg
hlt
les
pop
mov
insb
out
bound
adc
hlt
mov
adc
push
mov
dec
dec
sub
aaa
divb
adc
xor
adc
lcall
push
cwtl
loopne
icebp
icebp
in
dec
push
push
push
jns
mov
sbb
xchg
jl
leave
and
or
or
xchg
call
push
push
sub
fcomip
aaa
leave
ds
shlb
ds
mov
or
loope
jl
dec
cmp
inc
jns
movsb
das
leave
pop
jns
dec
outsl
sti
js
add
jp
movq
sub
cmp
std
cmpl
lods
arpl
cwtl
sub
inc
shrb
mov
out
bound
out
mov
mov
push
inc
push
std
mov
mov
fs
pop
xor
rcrb
sub
mov
bound
aas
cmpsb
gs
out
mov
shlb
adc
jp
aaa
mov
leave
sbb
sub
imul
mov
loopne
sbb
push
dec
mov
loop
add
pop
popa
xor
testb
sbb
orb
lcall
xor
sbb
in
mov
repnz
mov
jae
daa
lret
pop
and
loopne
ljmp
rcll
pop
loope
insb
mov
inc
push
mov
adc
xor
pop
jns
xor
lods
sbb
and
jno
iret
gs
dec
adc
sub
mov
sbb
ja
cmp
push
lea
mov
je
fstpl
test
std
cmp
in
or
lods
sbb
mov
fisubs
bound
xchg
pop
xor
nop
mov
sbbb
jge
sbb
lcall
adc
decb
xlat
pop
xchg
cmpl
dec
call
gs
cmp
push
stos
xchg
mov
or
xchg
fwait
pop
xor
iret
dec
mov
adc
push
xor
mov
lahf
lcall
and
add
mov
fdivrl
hlt
pop
jmp
loopne
dec
push
lret
mov
lds
dec
mov
jnp
xchg
mov
cmpsl
mov
cmp
sbb
fistpl
mulb
pop
cmp
scas
das
lret
cmpsb
lock
mov
and
jo
inc
bound
cltd
adc
pop
mov
mov
jno
jmp
push
or
cwtl
ss
loop
sbb
mov
mov
rcll
xchg
push
push
movsl
mov
loope
add
imul
jns
hlt
jnp
sarl
mov
xchg
enter
imul
mov
int3
push
push
imul
cmp
je
or
jae
xchg
fidivrl
xor
cmp
and
aas
or
dec
out
fwait
sbb
pop
lea
and
dec
adc
int
mov
xchg
sub
insl
repnz
outsb
les
insl
imul
ret
inc
mov
je
add
and
mov
aam
cmp
push
dec
xchg
sbb
je
xor
inc
in
push
loop
jle
dec
imul
inc
sub
mov
das
mov
loop
xor
pop
mov
aad
in
in
pop
lds
pop
push
adc
mov
push
jns
adc
in
pop
xchg
mov
mov
pop
dec
loop
aad
jge
mov
lcall
xchg
jb
inc
cmp
js
dec
inc
or
or
loope
or
addr16
mov
xchg
cli
xchg
mov
add
stos
data16
mov
xlat
inc
fistpl
jns
mov
icebp
or
jg
outsb
fistpll
or
jns
jns
dec
pushl
movsb
jp
fwait
push
xlat
mov
jno
insl
lahf
aas
aam
xlat
push
testb
mov
pop
dec
and
int3
xchg
and
shrl
movsb
stc
fstpl
decl
jl
cwtl
and
sbb
shld
and
clc
push
mov
movsb
jns
aas
enter
inc
fisubl
sub
and
je
mov
xor
aam
out
cli
xor
fwait
pop
cmp
dec
rcr
mov
and
xor
fsubl
cmp
iret
pop
lret
movsl
into
push
inc
mov
cmpsl
push
lock
hlt
nop
hlt
mov
cmp
xchg
xlat
movsl
aam
inc
shl
xchg
or
sub
std
add
jne
sub
divl
pop
std
shlb
js
cltd
cltd
stos
and
jae
jl
out
xchg
mov
lods
pop
iret
sbb
inc
cmp
mov
adc
iret
mov
addr16
cmp
adc
or
or
addr16
enter
rcrb
dec
and
xchg
pop
jg
stos
orb
push
rolb
pop
xchg
inc
push
push
aaa
insb
movsl
xorb
loope
sahf
cmpsl
ret
out
xor
mov
scas
lahf
clc
mov
cmp
push
push
daa
sub
xor
sub
fsubs
mov
mov
arpl
loopne
fsub
rclb
xchg
xchg
pop
imul
mov
cmpsl
daa
std
dec
bsr
lret
add
imul
aaa
cmp
mov
dec
mov
lods
clc
xor
out
insb
lods
stos
out
add
and
adc
jg
bound
data16
jecxz
and
cwtl
adc
mov
mov
inc
mov
cmp
je
jo
fwait
pushf
dec
adc
adc
int
xor
adc
jl
mov
and
dec
out
dec
aas
xchg
rorl
and
adc
adc
or
mov
push
push
or
lcall
cmp
pop
push
adc
divl
aam
inc
lods
lods
nop
jae
mov
sub
inc
adc
stos
dec
jne
push
ret
in
fsts
mov
addr16
test
inc
mov
push
fwait
push
mov
imul
daa
jbe
pusha
or
sbb
jmp
and
mov
fmull
leave
xor
cld
jae
popa
jl
and
fwait
mov
or
mov
and
mov
mov
inc
mov
cs
sbb
push
and
mov
ret
pop
pop
jns
lock
push
aaa
call
pop
sbb
inc
mov
lods
and
pop
sub
xchg
das
pop
cmpsl
hlt
test
xor
in
decl
movsb
push
pushf
dec
mov
and
fisttpll
outsl
negb
and
jl
cmc
lea
stc
cmp
sub
and
popf
push
jne
mov
fimuls
lahf
adc
popf
cwtl
fistpll
out
fcompl
jle
inc
mov
mov
cld
std
adc
cmp
jo
jo
pop
pop
add
sarb
pop
sbb
scas
mov
sub
insb
lock
push
pop
addr16
push
inc
addb
imul
dec
push
shrl
add
lds
xchg
out
dec
adc
xchg
les
fdivl
sahf
fsubrs
push
mov
popa
test
testl
cmpsl
lods
xor
fcomps
pushf
push
ljmp
dec
sub
ret
mov
or
jnp
mov
cmpsb
lods
push
imul
inc
pop
xchg
cmp
pushf
addr16
popa
int3
xor
push
test
bound
jns
sbb
imul
aam
icebp
adc
pop
jp
lcall
outsl
xchg
push
mov
jno
xchg
mov
push
cwtl
aaa
jne
iret
push
mov
mov
mov
add
outsb
push
mov
clc
cwtl
inc
pushf
mov
sbb
sarl
sbbl
mov
scas
div
push
push
mov
mov
fildl
scas
dec
mov
jae
mov
orb
dec
sbb
ja
cmp
add
mov
icebp
mov
ret
lret
lea
dec
mov
pop
dec
test
pop
dec
jae
add
cmc
sub
test
and
aad
cli
pop
orb
fwait
jmp
lret
inc
ret
andl
sub
push
into
lcall
mov
clc
inc
test
pop
jo
scas
mov
inc
add
mov
inc
jb
pusha
fadds
jnp
pop
xchg
pop
test
xchg
cmc
test
mov
repz
pop
cltd
sub
lds
stos
xchg
fcomip
js
push
mov
out
cli
inc
and
daa
mov
je
stos
aad
hlt
test
mov
push
imul
and
cmp
dec
inc
xor
in
mov
cmc
pop
mov
daa
decb
scas
inc
in
cmc
ljmp
jg
jne
mov
sbb
mov
push
lock
pop
js
iret
fimull
cli
jno
push
sub
into
in
outsl
xchg
push
xlat
dec
scas
adc
fwait
mov
pop
push
inc
shr
mov
inc
mov
mov
and
jmp
jbe
movsb
fs
sub
lret
xchg
insb
mov
das
push
lods
int3
cmp
xor
daa
and
push
iret
cmpsl
mov
sahf
mov
mov
xchg
add
aam
clc
aad
dec
insb
xchg
addl
lods
mov
pusha
sub
test
push
pop
fucomp
mov
push
lret
cmp
cs
data16
pop
in
gs
cld
jle
xor
jno
inc
jmp
and
push
xor
insb
inc
push
sti
pop
fisubrl
pop
call
in
icebp
mov
dec
in
insl
dec
and
lret
enter
dec
fldenv
lcall
pop
movl
adc
int3
movsb
jp
movsl
hlt
out
sbb
shlb
jp
sar
pop
icebp
repz
push
mov
dec
das
cmp
js
leave
push
or
int
in
adc
stos
fimull
sub
fstpl
jo
push
orb
call
adc
loopne
cwtl
xor
adcb
xor
xchg
lret
xchg
out
sub
insl
push
or
mov
adcl
and
arpl
imul
sahf
lret
push
mov
ss
dec
jns
pop
inc
inc
jmp
ds
pop
js
add
xchg
daa
xchg
xchg
push
stos
rol
add
push
cltd
ja
cmpsl
dec
sub
out
push
addr16
divb
sub
xchg
push
pop
lods
test
jle
xorl
stos
sbb
cmpsb
orl
dec
clc
cmp
push
fwait
int3
hlt
xor
jbe
xor
hlt
cli
lods
mov
xchg
ljmp
xchg
jle
loop
mov
call
call
outsb
mov
ss
rsm
sub
popf
inc
adc
inc
ja
xor
cmp
lahf
sbb
int3
xchg
mov
sub
xor
insl
mov
xor
icebp
filds
inc
pop
push
cmp
cli
int3
test
in
dec
inc
mov
sub
int3
movq
lgs
mov
pop
sbb
stos
pushf
add
stc
in
gs
and
cli
lods
inc
jg
push
mov
add
and
jno
popa
pusha
xchg
push
testl
lcall
cmpsl
ljmp
xor
fsubrp
pop
add
adcb
and
lahf
mov
dec
test
sbbl
mov
xchg
je
mov
add
loop
lods
or
subb
ret
mov
pop
fwait
adc
jmp
repnz
cmpsb
rcrl
insl
xchg
pop
aaa
dec
push
mov
ret
and
xchg
cmpsb
cltd
jo
inc
mov
cld
sub
xor
leave
cld
out
arpl
mov
inc
adc
lahf
push
sbb
outsl
lods
jae
lret
pop
push
adc
sub
sahf
out
fsubl
test
pop
dec
rorl
stos
sbb
cwtl
jae
push
mov
outsl
cli
jg
mov
xor
daa
cmp
jmp
inc
aad
cmpsb
mov
sbb
inc
and
mov
jmp
pop
loopne
adc
or
add
sti
in
jg
frstor
fcmovnu
jge
and
je
xchg
mov
in
mov
fs
jne
std
mov
and
ljmp
iret
pop
jle
pop
imul
add
rolb
mov
jge
repz
hlt
pushf
jne
mov
aaa
jp
adc
mov
pop
and
xchg
stc
test
xor
sub
push
stos
jecxz
jg
in
or
int
cmp
ja
in
push
and
shll
cmp
push
xchg
inc
inc
andl
in
bound
adc
pusha
sub
jp
fisubrl
mov
jb
jp
bnd
xor
mov
dec
jle
imul
mov
xor
leave
inc
mov
stos
cmc
adc
mov
xor
sahf
out
push
jbe
and
ss
sarb
mov
cmp
xchg
xchg
cwtl
xorb
dec
in
in
push
fs
iret
push
jae
inc
inc
das
dec
dec
fmuls
jle
mov
sub
xor
repnz
lock
dec
lcall
les
repnz
cmp
pusha
xor
xchg
sarb
pushf
dec
push
out
and
repz
jle
repz
mov
testl
sbb
cmp
stos
fs
test
push
xor
pop
pop
and
push
dec
jbe
loop
in
cmp
dec
ret
and
add
lcall
incb
f2xm1
scas
pop
repnz
push
dec
int
dec
fisubs
push
aad
xor
push
pop
cld
inc
or
mov
inc
inc
cmpsb
popl
xchg
and
mov
mov
push
sub
ret
das
adc
rorb
push
shlb
adc
lods
jl
popf
rcll
push
pusha
dec
fadd
adc
xor
insb
in
jb
test
hlt
push
mov
jb
inc
sub
xlat
jne
mov
andb
adc
adc
mov
mov
dec
mov
or
jns
sub
mov
pop
cli
jno
push
or
jecxz
xchg
pop
inc
mov
sarb
xor
in
jb
insl
or
mov
ja
sbb
adc
outsb
adc
pop
xor
stos
and
js
out
mov
inc
xor
mov
xchg
pop
adc
jnp
dec
ss
push
fimull
adc
mov
shll
clc
hlt
mov
sahf
ret
xchg
adc
inc
push
test
mov
and
mov
or
add
cwtl
sbb
mov
xor
mov
pop
push
pop
fstpl
jecxz
mov
or
into
test
or
das
dec
clc
mov
jno
cmp
js
fistpl
dec
jne
sarb
int3
clc
insl
mov
lret
out
loop
js
pop
fs
fs
arpl
mov
arpl
xor
lahf
mov
jp
sbb
cmp
sbb
sti
jnp
filds
mov
mov
test
popa
rorl
mov
jg
inc
push
xor
shlb
jl
cmp
or
cli
add
lock
mov
rolb
cmp
xchg
ret
cmp
cmpb
cmpsl
shl
dec
sbb
or
jmp
iret
leave
xor
and
sub
jp
sub
cmp
ret
aam
shlb
adc
orb
mov
mov
outsl
sub
ret
cmp
ret
pop
test
lret
je
test
add
cmpsl
xorb
stos
jg
outsl
pusha
cmp
adc
jae
test
out
push
cmp
or
dec
sti
cmovbe
in
sub
xlat
movsl
popf
mov
push
or
mov
insl
icebp
xchg
rorl
or
enter
ja
push
jb
xor
out
fwait
cltd
adc
lods
lods
jns
mov
test
jmp
test
or
stos
mov
loopne
popa
lcall
pop
outsb
vunpckhpd
fcom
pusha
add
xchg
in
xchg
loopne
fnstenv
addr16
call
cmp
std
sti
xchg
xor
pop
and
cwtl
xchg
dec
popf
or
jl
shrb
dec
cmpb
addr16
xchg
dec
push
leave
mov
nop
mov
popa
push
call
mov
sbb
xor
push
inc
scas
int3
mov
xor
or
imul
fdiv
xor
mov
pop
mov
lods
leave
sarb
data16
and
inc
fwait
dec
dec
and
inc
test
fildll
pop
rorl
std
ret
xor
xor
test
cmp
or
jmp
fisttps
and
dec
call
sbb
stos
xor
test
mov
movb
int3
loope
cmpsl
lock
add
nop
dec
aad
hlt
lds
and
push
xor
cmp
cmp
xchg
fs
ret
test
mov
mov
inc
mov
sbb
adc
pop
jg
das
popf
out
or
mov
icebp
pop
mov
dec
xor
xchg
and
push
xchg
out
push
xor
insl
mov
dec
jg
xchg
in
inc
scas
stc
mov
imul
pop
cmp
adc
mov
jge
xchg
ds
add
nop
mov
sbb
xor
ljmp
inc
in
in
pop
sbb
sub
jae
sub
push
sbb
nop
mov
mov
popf
lret
ljmp
pop
adc
cwtl
mov
xlat
push
xor
out
or
lock
mov
shl
dec
jne
out
cmp
bswap
stc
je
int3
ret
rol
sar
ss
push
inc
cld
push
lock
lret
pop
mov
push
xor
lods
and
loop
sarb
ljmp
lea
pop
sub
mov
mov
daa
xor
mov
out
loopne
insl
scas
cmp
push
lds
jge
test
out
out
jnp
mov
sub
pop
lock
jl
mov
sbb
test
mov
mov
mov
enter
jo
sub
jo
leave
loop
xchg
out
or
cli
jl
sub
cld
and
imul
adc
dec
lcall
adc
sbb
pop
dec
sub
enter
mov
imul
mov
sbb
clc
cmp
iret
add
xor
adc
push
jle
test
pop
push
lock
inc
sub
push
lods
push
cmpl
cmp
repz
pop
lock
mov
jp
lret
jno
in
cmp
leave
daa
mov
in
mov
cmp
xchg
inc
push
mov
shl
sub
xchg
fisubs
push
outsl
call
out
hlt
mov
sarb
ljmp
dec
xor
xor
bound
inc
pop
sbb
jae
inc
jge
dec
cmp
xor
fidivrs
jnp
pop
or
push
mov
adc
jne
cmc
pop
push
in
je
lret
or
call
ficoms
add
nop
std
add
dec
out
dec
mov
out
mov
cld
jno
pop
mov
push
jae
shrl
insb
xchg
adc
lods
or
pop
faddl
gs
stos
push
xor
xchg
mov
xchg
jmp
clc
cmp
mov
aam
mov
mov
fidivrl
out
sbb
pop
insl
inc
fmuls
rorl
mov
call
sub
mov
arpl
cmp
jmp
inc
clc
nop
dec
inc
rep
lret
loope
or
movsb
sub
mov
in
mov
xchg
push
xor
out
ja
mov
das
icebp
cmp
orl
stos
jne
nop
push
dec
and
lret
push
xchg
adcb
add
lcall
mov
jb
loope
jne
push
xor
push
aas
das
out
pop
sarl
je
push
cmp
jne
loop
or
repnz
cs
mov
dec
add
inc
push
pop
and
push
jecxz
xchg
xchg
loop
mov
or
fdivs
jo
ret
push
inc
fsubrl
nop
add
hlt
inc
jae
std
ds
xchg
and
xchg
jg
dec
stos
inc
ss
cmp
inc
push
add
call
mov
adc
dec
xor
outsb
ficoms
and
push
js
jb
jmp
mov
sub
andl
iret
sbb
int
cmpsb
xor
dec
daa
cli
mov
pop
cmp
in
inc
adc
push
lret
sti
mov
push
pop
rcl
adc
mov
pop
adc
shll
js
fwait
pop
sahf
or
or
jl
pop
cmp
push
enter
adcb
iret
xchg
lods
xor
add
inc
cmpsb
nop
push
lret
movsl
mov
mov
aam
aaa
movb
test
add
test
pop
inc
push
js
outsl
xor
cmp
push
popa
ss
ficoms
mov
fdivs
cltd
int
push
push
in
mov
xor
xchg
testb
outsb
aam
fstpl
inc
pop
xchg
or
push
add
jecxz
add
movsb
mov
inc
push
fdivrl
popf
inc
dec
push
push
mov
add
add
into
fildl
xor
shrb
add
xor
xchg
test
mov
pushf
push
jle
add
or
pop
pushl
cmpsl
pop
adc
arpl
pop
fcmovnb
push
xchg
lret
popf
mov
or
push
inc
xor
inc
or
mov
jle
test
das
sti
push
xor
jb
push
dec
cmp
dec
xchg
mov
fadds
ret
jg
into
pop
in
fisubrs
add
sub
jge
cmp
pusha
mov
jmp
jo
lock
fisubs
and
sub
adc
xor
add
jbe
inc
mov
popaw
out
popa
push
ret
cmpsl
push
es
cmp
movsl
xchg
adc
nop
mov
xchg
data16
sub
loop
mov
mov
inc
lods
add
insb
sub
movsl
cmp
inc
mov
outsb
xchg
enter
inc
test
cltd
fisttps
add
pop
icebp
inc
std
pop
inc
gs
push
push
pop
faddp
loop
stc
mov
adc
pop
push
fidivrl
mov
mov
inc
ret
sub
out
cmc
mov
add
mov
pand
imul
push
inc
out
push
mov
mov
xor
sbb
dec
jns
xor
lahf
scas
push
lahf
sahf
push
xchg
adc
pop
arpl
or
dec
popf
push
fisubrs
jnp
mov
dec
dec
dec
sbb
xchg
cmp
cmp
outsl
sar
out
jae
cmp
mov
in
iret
clc
xlat
cli
fbstp
sub
jno
insb
mov
and
or
jg
mov
in
or
xchg
mov
pop
data16
and
dec
incb
cmp
lret
pop
repz
xchg
data16
int3
iret
in
into
jl
or
push
stc
jnp
adcb
dec
dec
xor
sbb
addr16
aas
ljmp
add
aaa
in
xchg
mov
mov
adc
or
sub
fbstp
jg
sbb
in
sbb
adc
sub
dec
fdivs
jg
inc
stos
shl
iret
mov
aam
jne
ljmp
or
jbe
ffree
subl
sub
je
mov
dec
push
sahf
push
fld
inc
rclb
jg
outsl
cmp
and
scas
or
xor
lds
or
in
popa
inc
adc
fcmovnb
test
es
sbb
cmp
fs
push
push
popf
push
pop
sti
lock
lock
enter
cmp
cmc
mov
int3
xchg
adc
jne
rcr
add
ret
lahf
add
jg
cmp
adc
pop
sbb
test
sub
jle
dec
leave
mov
jp
inc
mov
sahf
mov
mov
mov
jnp
add
xchg
push
pop
bound
xor
ds
jle
cld
jo
sbb
in
or
jb
and
mov
mov
jge
push
cld
xorl
movsl
xor
dec
stos
push
mov
cmc
subb
ret
aaa
pop
clc
aaa
xchg
xchg
cmovle
dec
dec
pushf
aaa
idivl
scas
mov
dec
jne
pop
out
mov
lahf
mov
add
fcomp
jl
cli
test
pop
dec
addr16
imul
into
push
mov
sbb
mov
lret
pop
enter
jg
xchg
or
pop
add
jl
ds
in
mov
test
call
aas
or
icebp
rcrl
or
inc
adc
inc
cli
jns
mov
js
inc
jae
cwtl
push
mov
add
fiadds
aas
cs
push
adc
ljmp
lea
ret
pop
fildll
mov
mov
add
add
sbb
jbe
push
ret
sysexit
aas
ja
notl
xor
orb
jp
pop
cli
inc
fdivs
jle
push
mov
jmp
pusha
iret
into
mov
rorb
ss
jle
fucomp
lret
mov
fsubr
jmp
inc
and
in
test
add
pop
popa
mov
jnp
inc
stos
ficoms
and
adc
mov
out
stos
cmp
push
cmp
mov
push
pop
stc
ljmp
hlt
sub
lret
mov
mov
pop
sbb
sbb
sti
adc
ret
adc
sti
test
or
inc
aaa
idivl
mov
dec
adcl
test
aaa
pushf
inc
sbb
mov
add
fisubl
scas
int
jmp
std
mov
std
xor
call
mov
jnp
lods
sub
ss
dec
pop
in
inc
enter
adc
fsin
sbb
shrl
mov
rclb
jb
es
add
add
in
mov
dec
arpl
repz
jb
dec
mov
data16
adc
mov
mov
inc
jo
out
fsub
cwtl
and
icebp
jp
in
push
insb
into
ret
ret
inc
or
pop
fs
xchg
dec
sub
clc
out
sbb
xchg
das
in
hlt
or
stc
nop
pusha
jne
insl
xchg
rcll
xchg
popl
adc
cmpsb
mov
or
repz
mov
pusha
and
or
push
xlat
cmp
filds
dec
out
or
out
inc
imul
mov
mov
ror
ss
pop
sub
add
mov
bound
js
inc
out
push
mov
pushf
mov
adc
rorb
je
rorb
shll
lahf
inc
rcl
pop
push
pop
insb
and
bound
mov
nop
inc
iret
popa
mov
ja
push
push
inc
addr16
push
sbb
nop
movsb
sti
pop
test
adc
xor
stos
inc
clc
sub
ds
mov
bound
ret
cltd
mov
xor
ja
jecxz
xchg
aas
out
test
ret
push
mov
popa
dec
cmpsl
arpl
cmp
in
sbb
pop
leave
mov
mov
das
sarl
cmp
cmp
and
jne
les
xchg
imul
lods
adc
dec
mov
cmp
add
sbb
jne
jmp
push
push
xchg
and
clc
adc
lea
roll
pop
xor
addr16
addl
dec
cmp
loopne
popf
mov
ret
fisubrs
test
mov
scas
dec
push
xchg
pop
cmpsb
test
or
das
ljmp
loop
cmp
and
mov
sub
pop
mov
push
testl
mov
xor
jecxz
js
adc
cmp
add
jne
aam
xchg
xchg
ds
inc
aad
jno
je
xchg
es
cmpsb
cwtl
repz
fstps
mov
into
jge
fwait
inc
sub
adc
jmp
sub
xchg
push
dec
iret
sbb
loopne
inc
out
cmp
das
jp
xor
adc
pop
mov
fsubl
mov
mov
add
add
adc
stos
ljmp
or
dec
mov
xor
jnp
inc
xor
into
setp
mov
pusha
and
bound
scas
jns
pop
scas
dec
dec
addr16
push
loope
daa
aam
aad
and
xchg
pop
jnp
mov
imul
mov
iret
push
bound
or
sub
mov
adc
add
loop
pop
and
pop
mov
int3
add
inc
pushf
rclb
cmpsl
mov
push
pop
pop
sbb
leave
or
bound
and
jecxz
cmpb
cmp
and
add
dec
lea
cmp
jecxz
mov
std
clc
fadds
pop
je
sbb
pop
xchg
xorb
mov
outsl
out
push
xchg
xor
pop
gs
addr16
mov
adc
sbb
cwtl
mov
and
pop
into
icebp
add
xor
push
mov
mov
jecxz
adc
jne
push
popa
inc
lret
inc
loop
pop
mov
test
fcompl
test
and
dec
mov
add
inc
loop
imul
jl
ss
gs
push
xchg
fsubrl
add
dec
in
adc
sub
roll
test
sub
sbb
gs
movsl
pop
icebp
inc
or
push
cmp
mov
sti
add
outsb
push
outsb
mov
pop
fsubl
scas
js
and
sbb
adc
outsl
adc
out
push
add
in
pop
sbb
mov
mov
imul
jbe
fwait
xchg
ror
sbb
sub
cmpsl
jle
ret
loopne
pop
outsl
xor
dec
aaa
dec
mov
pop
in
imul
in
test
cs
fidivs
mov
fcoml
lea
xchg
push
in
gs
roll
pusha
leave
shll
imul
inc
xchg
out
and
dec
in
mov
add
adc
fldl
es
adc
adc
push
xor
mov
inc
enter
or
cltd
hlt
sub
popa
add
jno
xchg
in
lock
mov
add
dec
mov
inc
pusha
cli
mov
xchg
lret
mov
outsl
movsl
pop
xchg
divl
inc
lret
pop
mov
out
aaa
mov
ret
incl
dec
xchg
bnd
lea
jmp
divl
add
cmp
imul
test
pop
add
mov
std
in
loopne
ret
or
xchg
fbstp
das
aad
inc
les
xor
xchg
iret
mov
repnz
dec
mov
loop
xlat
fimuls
sub
aad
int
pop
mov
sbb
pop
fdivl
xchg
or
dec
mov
pusha
jb
test
sub
lods
xchg
js
mov
mov
jae
lahf
mov
pop
data16
mov
fistps
mov
inc
out
jmp
data16
into
add
dec
dec
popf
add
pop
jne
out
adc
or
repnz
or
dec
adc
mov
jmp
int3
ret
pop
push
sahf
incb
int
lock
mov
data16
or
fnstenv
insl
dec
sbb
dec
cmp
inc
mov
pop
or
ds
das
jb
shlb
lods
inc
into
adc
xor
push
sub
or
lock
or
leave
xor
mov
mov
pop
sub
xchg
pop
cwtl
cmc
adc
lret
int
sub
mov
sbb
pop
and
enter
and
orl
cmp
data16
sahf
insb
xchg
inc
div
push
mov
cmp
aam
test
clc
adc
cmp
fs
or
sub
add
popf
dec
pop
push
pop
ret
and
xchg
and
push
orb
and
add
shlb
mov
cmp
sbb
scas
ljmp
and
shrl
fisttpll
or
lock
rcrb
cmp
push
test
pop
jecxz
sar
mov
std
jns
les
outsb
mov
xchg
int3
or
shlb
fdivs
ljmp
jnp
jmp
or
lahf
and
and
ljmp
test
shl
sbb
lcall
xchg
lret
xor
adc
mov
das
mov
les
sub
jb
sbb
mov
sbb
add
lea
pop
ss
push
sub
adc
out
push
lods
repnz
mov
jmp
stos
push
movsb
sahf
add
pop
xchg
fs
sub
gs
icebp
xchg
mov
leave
sub
rol
push
and
cld
cld
imul
jnp
jae
out
int3
and
aaa
lock
push
add
mov
loope
mov
test
cmc
cwtl
xor
add
dec
outsb
inc
sub
sbb
sub
loopne
mov
sub
test
addb
mov
or
stos
les
xor
xor
sbb
sub
mov
mov
test
and
xchg
push
in
dec
dec
and
jmpw
ljmp
in
pop
sahf
lock
jno
out
dec
daa
das
rcrl
decl
aas
xor
sbb
push
in
dec
pop
pop
pop
arpl
aad
push
pop
mov
faddl
std
adc
mov
add
or
inc
dec
orb
sbb
sub
je
ret
js
lret
add
mov
add
mov
test
fsubrl
test
loope
cmc
lret
int
push
dec
jo
in
sbb
dec
add
testb
lea
rcrl
xchg
push
mov
push
test
add
xor
scas
sub
imul
addr16
and
pop
lock
pop
outsb
addr16
sti
or
xchg
js
adc
xchg
pop
dec
fadd
push
les
icebp
dec
and
xor
fadds
push
mov
ret
mov
js
mov
addr16
and
pop
push
xchg
sbb
mov
dec
in
pop
cmp
or
jg
lea
scas
stos
out
stc
lock
ds
jb
imull
mov
ror
mov
sub
daa
or
scas
loopne
jbe
cmc
cltd
in
scas
xor
test
sti
xor
add
test
ds
je
push
hlt
jecxz
jb
orl
mov
sbb
or
cmp
roll
dec
adcl
jae
sbb
pop
or
inc
push
pop
sub
int3
lcall
mov
popa
xor
jecxz
sbb
pop
pushf
int3
hlt
fidivs
imul
mov
imul
lods
aaa
stos
sbb
das
imul
mov
or
xchg
add
and
jno
push
xchg
in
in
dec
subb
push
sbb
pop
push
inc
mov
shl
aas
sbb
lret
in
mov
pop
bound
mov
je
mov
aam
mov
xchg
and
aam
bound
jge
xchg
xor
mov
int3
sub
lret
test
xor
inc
inc
test
lahf
push
out
jne
mov
popf
pop
pop
sbb
nop
mov
ror
inc
daa
xchg
xchg
into
sbb
adc
push
pop
jbe
inc
addr16
cli
filds
inc
mov
ss
mov
mov
mov
gs
pop
cmpsb
clc
sub
push
push
scas
xchg
mov
or
test
push
call
jg
mov
jns
out
pop
mov
inc
cwtl
add
out
xchg
adc
push
test
adc
fisttpl
jo
push
int
lahf
jecxz
sub
test
sub
cmc
cwtl
pop
adc
dec
dec
sbb
cmp
pop
es
mov
std
add
das
sbbb
mov
adc
insl
pextrw
cmpsl
xor
iret
pop
std
fwait
push
inc
ljmp
and
shl
jle
aad
mov
push
push
xor
mov
mov
jecxz
cmp
shl
inc
inc
je
jmp
push
push
sahf
fildl
loopne
rcll
cwtl
aaa
pop
outsl
mov
in
pusha
pop
ss
bound
push
mov
lret
adc
sub
mov
inc
mov
inc
adc
insb
out
jne
es
das
fnsave
inc
jo
in
jp
test
js
push
mov
xor
mov
mov
mov
out
xor
jmp
xchg
pushw
or
sbb
mov
test
sahf
xchg
jp
sbb
mov
lcall
xor
decb
jb
jnp
sbb
arpl
mov
ret
add
sti
enter
mov
push
mov
xchg
xor
and
adc
lods
out
mov
jae
or
and
xchg
push
gs
imul
test
push
iret
adc
test
daa
aad
push
push
fdiv
pop
mov
in
imul
out
mov
cld
lods
sbbb
or
push
or
mov
pop
cmpsl
pop
pop
mov
popa
xchg
push
sub
sbb
fadds
jnp
into
test
sarl
loopne
jno
mov
mov
xrelease
cs
pop
bound
inc
sbb
xor
inc
test
insb
or
xchg
movsl
mov
push
mov
cmp
aaa
dec
sub
bsr
mov
inc
mov
lret
sub
arpl
ficoms
adc
xchg
adc
lods
xor
and
lret
into
aam
rol
nop
mov
int3
hlt
pop
push
push
test
daa
jl
cli
outsb
je
pop
test
cmp
mov
cmp
mov
loop
xor
cld
imul
jle
lret
dec
jns
movsb
cmpl
mov
sbb
clc
xchg
orl
testb
push
push
cmp
mov
pop
cmp
imul
and
test
and
cmpsb
add
das
jbe
inc
movsb
stos
std
mov
mov
loop
dec
stos
xchg
lods
mov
jae
and
jmp
adc
lea
dec
mov
lods
adc
scas
inc
loopne
imul
push
std
mov
cs
mov
call
cltd
jne
daa
cmp
popa
xchg
insl
cmp
pop
or
testl
mov
push
ffree
pop
mov
in
cld
in
test
xor
add
push
dec
fcomps
lock
cwtl
fnstcw
mov
xor
add
ret
popa
test
into
fmulp
mov
fs
mov
fiaddl
scas
mov
mov
data16
mov
sbb
mov
movsb
mov
push
mov
cmp
cmpl
and
or
xor
jmp
pop
repz
xchg
mov
hlt
fs
int3
icebp
dec
and
sub
shll
dec
mov
inc
stos
sub
daa
xchg
mov
jo
dec
in
push
jae
add
mov
repnz
in
inc
popf
mov
in
sarb
or
lock
mov
scas
and
mov
loope
out
mov
add
fstl
cmc
mov
cmp
aas
out
jno
data16
rcll
jns
dec
adc
repnz
insl
loopne
xor
dec
jnp
sar
sahf
cmpsl
mov
mov
test
add
pop
push
out
lret
or
cmp
mov
cld
fs
or
je
cli
jb
ds
cmp
aad
mov
adc
ss
imul
sti
xchg
inc
xor
imul
mov
and
jne
imul
push
pusha
shlb
jbe
pop
jle
aam
daa
dec
mov
pushf
pop
test
dec
sub
and
pop
mov
jecxz
aam
mull
mov
rorb
loop
mov
cli
std
cld
in
cs
jp
scas
insb
scas
mov
ret
fs
push
cmp
jnp
loope
mov
dec
dec
fisubl
outsb
or
and
out
jecxz
call
les
dec
pop
jle
pop
jnp
xchg
outsl
lods
nop
roll
dec
xchg
lock
cmpsl
mov
or
pop
mov
lock
cs
ficoms
je
cmp
sbb
je
cli
lahf
divl
int3
push
ret
mov
in
repz
push
add
pop
clc
and
mov
ret
test
xor
cmp
dec
xor
add
mov
out
mov
mov
xchg
add
lods
lcall
add
cwtl
in
adc
insb
hlt
dec
sub
jb
pop
addl
jg
add
pusha
push
add
dec
int
scas
mov
adc
push
hlt
cmpsl
xor
pusha
push
movsl
dec
cmp
cmpsb
cwtl
mov
ja
bound
or
and
loopne
sbb
xchg
cmpsl
push
jns
addr16
xchg
push
jecxz
rcl
xchg
dec
xor
or
pop
inc
lret
dec
aam
dec
bound
mov
and
test
ret
dec
daa
jmp
repnz
and
inc
jbe
inc
inc
cld
pop
jns
xchg
jl,pt
cmp
xchg
leave
aad
lret
jbe
scas
in
loopne
jg
cmp
mov
loopne
mov
out
lret
in
cs
aas
movsl
or
fwait
inc
add
divl
scas
ds
mov
dec
js
pop
cmc
pop
dec
ja
rolb
roll
push
sbb
adc
jb
add
lret
notb
stos
mov
outsb
sbb
push
ret
inc
pop
or
xchg
inc
loope
xchg
cmp
add
mov
pusha
mov
insl
pushf
mov
flds
push
mov
mov
jnp
cmc
loop
test
dec
dec
lcall
and
cmc
outsb
fsubrs
movsb
int3
jle
mov
ficoml
xor
rol
push
sti
hlt
cmp
push
mov
sub
adc
push
fildll
sbb
sbb
aam
lahf
add
iret
in
cmp
mov
jne
xchg
ds
lret
js
cmpl
fwait
push
jmp
mov
stos
xchg
inc
aad
xchg
lea
push
scas
leave
out
fnstsw
fcoms
iret
inc
mov
aad
lods
inc
mov
es
sbb
paddb
sbb
ret
loope
mov
and
dec
loope
push
ja
aas
outsb
pop
jo
icebp
mov
or
pop
cmc
ss
lahf
or
and
leave
shll
push
ds
sahf
into
mov
push
mov
mov
push
jo
loope
test
jmp
adc
jno
xor
xchg
and
stos
push
test
cmp
test
imul
or
std
jl
pop
int3
out
mov
push
lret
ljmpw
out
adc
cmc
mov
es
ret
shlb
push
cmp
jne
ret
outsl
inc
xor
les
jbe
and
rorb
inc
xor
loop
mov
xchg
mov
add
mov
pop
jge
imul
add
loope
out
mov
test
insb
fistps
add
test
shr
ret
push
ja
lret
sbb
inc
push
inc
mov
inc
shll
or
cmp
enter
push
mov
in
movsl
aam
xor
addr16
add
leave
arpl
mov
push
outsl
fs
notl
fs
dec
push
cmp
mov
es
lods
xor
out
push
stos
jno
pop
adc
ja
pop
pop
sub
sub
push
popf
int
rcll
sbb
pop
jle
or
out
stos
lret
sub
lahf
xor
xchg
xchg
icebp
push
loop
jnp
xor
adc
shrb
xor
lret
mov
les
addb
jnp
fdivr
repnz
jg
lahf
sub
xlat
mov
arpl
pusha
jno
or
bound
sbb
loop
decb
cmpsl
aam
xchg
xor
sub
push
lret
add
mov
xchg
push
fisubrl
add
repz
sti
add
icebp
stos
mov
ret
or
pop
shll
sbb
cs
jg
mov
out
sbb
jb
sti
iret
lea
pop
dec
lret
and
sub
cmpsb
push
pop
mov
lcall
mov
sub
mov
sbb
mov
pop
sbb
clc
aaa
lcall
repnz
lods
push
add
outsl
call
std
in
andb
ja
lcall
testl
pop
sbb
aas
mov
mov
iret
shl
aam
jae
cwtl
daa
sarl
inc
fimuls
enter
pop
add
and
cmp
mov
xor
mov
xlat
ds
and
dec
mov
push
push
jg
jl
popa
sub
mov
lgs
in
sbb
dec
sbb
push
mov
jbe
repz
pop
std
pop
push
cmp
imul
fcmovb
dec
ret
out
sbb
or
mov
cld
lock
sti
pop
icebp
pop
xor
xchg
loope
cmp
mov
ud0
pusha
or
in
sbbb
repnz
in
dec
xchg
cmp
arpl
mov
dec
jns
dec
and
lods
xchg
aaa
xor
call
in
fsts
sahf
push
push
mov
inc
mov
je
mov
inc
popl
xchg
pop
imul
outsb
adc
fldcw
jg
and
aaa
xchg
push
sahf
ret
push
push
mov
ljmp
xor
test
xor
aas
sbb
mov
loopne
jne
push
adc
and
mov
mov
xor
out
lret
out
addr16
dec
pushf
je
push
insb
into
scas
mov
jae
adc
cmp
lods
mov
std
adc
pop
adc
stc
ja
in
xchg
mov
test
mov
hlt
fstpt
aam
jl
xchg
pusha
mov
push
in
aam
stos
repnz
lahf
fldenv
scas
rcrl
dec
ljmp
int3
pop
aam
insl
adc
cmp
jle
adc
and
scas
sub
add
cmpxchg8b
push
into
arpl
test
je
leave
loopne
adc
pop
lea
xor
mov
roll
xchg
aas
icebp
or
mov
gs
xchg
mov
add
imul
or
adc
sti
cld
cltd
adc
scas
test
std
add
dec
cmp
push
xchg
jmp
pop
adcl
icebp
or
jnp,pn
sub
mov
and
dec
jmp
cmp
jnp
scas
jp
mov
leave
xchg
xor
in
int
mov
icebp
inc
fsubr
ds
daa
jg
aam
test
push
sub
insb
sub
cwtl
jle
lds
test
adcb
dec
fwait
lods
mov
stos
cld
sahf
jne
dec
hlt
dec
cmpsb
es
inc
push
pop
jae
sub
ljmp
xchg
sub
xor
cs
movsb
xor
rolb
loope
xchg
leave
or
jbe
mov
ds
cmp
out
in
js
xchg
idivl
insl
sub
fxch
mov
mov
aas
test
sbb
cli
dec
outsl
outsb
inc
xchg
mov
inc
divb
pop
aad
push
jae
inc
gs
sub
jp
sub
adc
test
sbb
mov
loope
xchg
inc
stos
nop
daa
fs
mov
inc
xor
and
pop
icebp
sbb
push
pop
and
push
dec
mov
xor
sub
imul
in
mov
js
fdivrl
and
xchg
sbb
sbb
xchg
fs
add
pop
ds
sbb
sbb
adc
adc
jp
in
cmp
movsb
or
sub
shlb
addr16
sbbb
lahf
push
in
in
iret
pusha
xchg
out
lods
cmpsl
test
mov
imul
int
int3
or
movsbl
lock
xchg
addr16
jmp
mov
add
out
fistpll
mov
rcrl
ds
push
aam
enter
cwtl
loopne
xchg
sbb
dec
mov
rcr
sub
push
aad
les
or
cld
push
rclb
cmpsb
cmp
in
xchg
mov
mov
ret
mov
jnp
dec
xcrypt-ecb
cmpsl
dec
fs
decb
jns
push
lcall
sbb
xchg
mov
add
test
sbb
pop
les
mov
arpl
push
sbb
fisubl
or
jle
mov
fistps
call
ja
dec
in
push
lea
shll
nop
lcall
mov
xor
lahf
std
stc
jle
mov
cmpsl
aaa
mov
popa
adc
inc
mov
inc
pusha
mov
jmp
mov
add
popf
sub
movsb
xchg
in
int3
ds
dec
mov
into
iret
xor
push
imul
pop
dec
aaa
cmp
lea
hlt
cli
insb
sub
outsl
stos
sbb
mov
shrd
lea
mov
push
test
xchg
fdivrs
fdivs
cmpsb
adc
out
sub
sarl
mov
or
enter
jmp
mov
cwtl
in
mov
pop
dec
cltd
or
or
jnp
pop
rorl
xchg
mov
mov
sub
movsb
mov
mov
pusha
ret
fidivs
jl
fs
xorb
jg
add
mov
fidivl
test
mov
mov
fucom
jno
sbb
sub
pushf
push
iret
dec
mov
pop
int3
sti
push
sub
dec
leave
xchg
pop
xchg
jl
stos
sub
and
or
scas
ja
push
jmp
clc
mov
cmp
xor
bound
adc
xchg
push
adc
dec
out
jp
jmp
cwtl
ds
ffreep
in
adc
cld
mov
scas
jbe
fcoms
ret
insb
and
push
sbb
mov
movsb
sub
mov
add
scas
adc
xor
aas
push
push
push
xor
negl
aaa
fs
add
icebp
mov
dec
jb
imul
jle
test
mov
lods
mov
inc
xor
dec
jae
sbb
call
loop
stos
fcomi
lds
test
test
ja
pop
bound
mov
icebp
mov
into
shlb
dec
daa
sub
jb
dec
mov
mov
jl
or
stos
cltd
stos
pushf
fldt
fstps
out
not
fsts
mov
mov
sub
cmpsb
out
inc
es
dec
jg
push
out
mov
push
pop
sub
xchg
xchg
pop
dec
and
ret
xchg
nop
cmc
mov
xchg
lcall
sub
js
pop
testb
stos
js
jb
push
dec
jo
fwait
in
test
loop
jno
lods
enter
ljmp
lcall
repz
push
xchg
leave
lcall
xchg
mov
cmp
lret
jns
lea
int3
lock
push
pop
ret
xor
call
or
push
sbb
shll
mov
les
pop
gs
into
sub
push
jp
orb
call
pop
loopne
mov
mov
jg
mov
xor
inc
lret
jb
lock
addr16
xchg
dec
repz
and
mov
push
adc
mov
stc
push
pop
fisttps
out
fistl
das
mov
jns
fnsave
dec
pop
jge
jne
lock
push
aad
push
js
loopne
ss
mov
inc
lret
es
push
push
mov
mov
xchg
ret
and
sbb
cwtl
and
lds
jmp
int
pop
cwtl
mov
push
pop
bound
jmp
add
call
out
std
adc
and
lock
pushf
push
jae
xor
sbb
subl
xor
add
sahf
and
pop
sbb
mov
enter
popf
jge
pop
mov
int3
sbb
xchg
push
lods
dec
gs
add
pop
popa
fists
jmp
and
mov
inc
and
pop
stos
mov
add
mov
inc
pop
pop
adc
adc
sub
or
and
stos
fnstcw
or
sub
xchg
das
loopne
mov
pop
fldt
add
fistl
aad
jmp
xor
rolb
out
mov
bound
xchg
xorl
pop
jecxz
add
lahf
sbb
loope
jb
out
xor
push
mov
jge
fmull
mov
or
adc
out
sbb
ja
inc
mov
imul
cmp
push
fstpl
dec
sahf
dec
dec
sub
shrb
fiadds
scas
dec
mov
mov
or
jle
xor
adc
inc
rolb
pushf
insl
xor
movsb
push
sar
test
orb
sub
jl
shll
sub
shlb
lret
adc
stos
mull
jle
daa
sbb
mov
xchg
jle
add
push
cmp
cmc
mov
cmp
inc
jo
inc
clc
cld
popa
movb
mov
adc
pop
jmp
xchg
clc
inc
call
push
xchg
cli
test
sti
inc
pop
or
xchg
clc
mov
rorl
ljmp
adc
inc
pop
or
pop
mov
dec
sbb
popa
arpl
outsb
cmpl
sub
jbe
mov
je
cmp
leave
cmc
int
aaa
adc
push
fsubrs
xchg
shlb
in
xchg
icebp
xchg
and
push
or
or
clc
jp
add
inc
movsl
dec
fadd
into
lds
les
cmpsb
outsl
loope
pop
and
ds
enter
bound
cli
jecxz
ljmp
mov
in
ljmp
add
loopne
cwtl
sbb
repz
pusha
lock
push
xchg
mov
test
repz
es
ror
pop
dec
pop
out
push
push
push
mov
into
pop
movsl
pop
xorl
cmp
aas
adc
mov
ja
mov
addl
fsub
xlat
popl
jb
sbb
int
push
push
pop
jo
or
cmp
pop
push
inc
and
mov
sbb
and
jne
scas
mov
lock
pop
scas
dec
insl
daa
pop
dec
adc
xor
data16
je
push
ss
mov
dec
hlt
rol
dec
aad
lds
mov
inc
pop
add
fisubs
xor
in
and
and
add
cld
ret
lret
sbb
or
push
scas
fiadds
jp
sub
test
jbe
fldlg2
xchg
mov
std
xchg
or
addr16
sahf
pusha
jge
jmp
sbb
addr16
push
pop
push
sub
and
pop
sbb
in
dec
jb
lods
jno
and
andb
push
pop
add
cmp
lds
sub
adc
je
insl
js
nop
cltd
aam
xor
inc
inc
cmpb
pop
sti
call
xchg
sbb
mov
imul
pop
inc
mov
inc
xchg
xchg
js
inc
inc
fldcw
xchg
pop
mov
fcmovbe
push
rol
xchg
out
cmp
fidivrl
stos
jns
aaa
orb
loop
xor
push
mov
xchg
jmp
ss
mov
shrb
fisubrs
cmp
lret
pop
xchg
sub
lea
pop
pusha
xchg
incb
push
push
mov
xchg
ret
mov
sbb
add
mov
aad
fbstp
shlb
scas
imul
or
pop
sti
call
jbe
cwtl
in
and
shrb
rcll
pop
loop
xchg
cmpb
adc
stos
cmpsl
sub
cwtl
ret
push
fninit
mov
mov
je
std
push
pop
xlat
jge
push
pop
add
hlt
pop
xchg
pusha
mov
leave
dec
adc
adc
mov
andl
iret
aas
xor
xor
inc
mov
lds
rcrl
adc
cmc
fstl
sub
mov
mov
jbe
je
iret
adc
jne
sub
xor
inc
test
push
mov
sti
xchg
fstl
push
mov
mov
pop
call
sub
in
mov
lods
lcall
xchg
clc
dec
lock
or
and
mov
push
aas
dec
xor
or
dec
fnstenv
imul
sub
fiadds
popf
lds
and
filds
fnsave
mov
inc
and
add
mov
stos
jge
dec
jmp
cmp
in
pop
mov
ficomps
fimuls
mov
add
addr16
sahf
ja
lods
out
loopne
cmpsb
shlb
push
imul
int
cmp
mov
out
mov
roll
pop
jg
sbb
dec
jae
jge
lret
sahf
pminsw
andl
lcall
aam
or
cmp
and
mov
out
movsl
fadds
mov
xchg
movsl
jmp
shll
mov
adc
in
std
mov
xchg
scas
sbb
in
cltd
and
shlb
add
adc
dec
xchg
or
test
imul
sub
rcr
adc
nop
xorl
adc
xchg
xor
pop
mov
jg
sbb
dec
addr16
iret
adc
cmp
ss
pop
imul
aam
sbb
sbb
and
aad
stos
leave
push
add
lahf
and
mov
leave
jae
xchg
dec
xorb
adc
mov
or
inc
jb
and
xorl
inc
mov
fnstenv
jne
sub
int3
subb
ja
ss
adc
in
lret
das
nop
cli
pop
mov
pop
jbe
inc
xchg
sub
or
inc
ja
outsb
lahf
pop
stc
cmp
stos
lods
nop
xchg
xor
ret
mov
jb
xchg
mov
scas
fldt
cmpb
cld
cmp
push
mov
shlb
lock
scas
jle
and
sub
inc
pop
pop
mov
xchg
jmp
repz
mov
cwtl
push
lock
jne
jp
mov
test
or
sub
mov
xor
cmpl
aam
jecxz
in
adc
xchg
push
pusha
jae
jno
lock
call
jbe
mov
cld
cwtl
cwtl
mov
push
sbb
cmpsb
test
mov
mov
sub
dec
clc
push
mov
daa
or
dec
push
mov
out
out
aad
js
push
subb
push
jle
or
add
rorb
fsubr
mov
int3
imul
orl
sbb
insl
popa
imul
aaa
xor
push
mov
mov
dec
cmp
clc
sbb
in
mov
jo
cmpsb
ja
daa
popf
or
push
cmpb
das
push
mov
mov
mov
jnp
fwait
and
sti
and
sarl
or
push
adc
clc
xor
pop
mov
pusha
mov
jno
jae
add
jnp
adc
js
shrb
dec
stos
mov
mov
or
xor
divl
and
cmc
mov
imul
aaa
jecxz
dec
or
movsl
cltd
gs
sub
scas
mov
and
pop
xor
mov
xchg
mov
jne
fiaddl
mov
mov
push
inc
or
mov
push
sub
mov
jbe
push
or
mov
mov
insl
xchg
lret
mov
cld
xor
pop
dec
mov
dec
xchg
lea
push
xor
lods
std
xlat
sub
call
dec
enterw
pop
out
xchg
adc
cwtl
xlat
mov
sarb
out
rol
insl
add
mov
enter
hlt
ret
mov
inc
addr16
dec
inc
shlb
sub
adc
addr16
js
jl
repz
addr16
and
push
xlat
and
inc
add
into
das
dec
jl
push
leave
movsl
pop
repnz
add
xchg
sar
xor
jne
cmp
cmp
xchg
or
std
sbb
andb
sar
and
iret
and
fnstcw
mov
sub
sbb
push
inc
pop
push
jg
sahf
arpl
subl
loope
cmp
cmpsb
xor
and
js
mov
stos
into
in
sbb
pop
cmp
sbb
xchg
imul
xchg
bound
push
sub
test
sub
cmp
cmp
and
out
pop
jno
and
shll
rolb
inc
mov
cli
lds
ljmp
cmp
jge
pop
or
sbb
xor
arpl
mov
pop
cmp
sbb
sbb
mov
stc
in
xor
cvtps2pd
inc
and
seta
pop
lods
iret
sub
mov
gs
jno
bound
in
add
andl
fdivrp
cmp
pop
fnsave
in
sahf
aaa
push
pop
mov
aam
jmp
pop
sahf
scas
xchg
sbb
sbb
imul
pop
and
mov
in
repz
rcll
hlt
fnstenv
push
fsubrl
mov
fisubs
pop
shl
outsl
mov
jae
adc
syscall
sbb
cli
xor
jge
ljmp
cmp
cmp
rolb
out
imul
and
pop
adc
aaa
cld
stc
insl
adc
sbb
cmp
jmp
mov
into
dec
aam
and
pop
iret
mov
sbb
sub
jns
lret
aam
xchg
je
pop
pop
sarl
mov
mov
mov
popa
push
mov
inc
adc
out
pusha
mov
loopne
mov
outsl
add
std
cs
out
popf
iret
xchg
mov
add
ret
dec
push
scas
cmc
in
jle
iret
mov
pusha
int3
inc
sub
mov
adc
xor
nop
and
dec
or
test
mov
ror
xor
xchg
into
repz
pop
arpl
sbb
and
fisttpl
adc
lock
sti
das
add
faddl
int3
ret
dec
or
or
inc
ljmp
push
or
repnz
jbe
xchg
lods
jg
cmp
in
popl
inc
pop
stc
xchg
out
ja
cmp
in
add
lcall
cmp
loope
pop
and
data16
enter
fmulp
sbb
orb
addr16
cmpsl
loop
aad
inc
or
cmp
faddp
in
insl
cmc
xor
xchg
pop
mov
sbb
inc
popa
sub
sbb
ljmp
in
aas
in
add
push
hlt
xchg
xor
jmp
adc
outsl
inc
fisubs
mov
lret
and
dec
and
push
fistps
lds
ss
adc
shrb
aas
or
dec
shll
cmp
xor
xor
sti
adc
es
leave
fistpll
cltd
mov
or
movsl
inc
and
xchg
out
or
out
jns
xor
cltd
aam
jbe
out
test
jbe
jb
mul
jg
mov
xchg
aas
aam
or
dec
cmp
pop
mov
cmp
mov
rol
add
xchg
insl
mov
dec
jne
inc
inc
pushf
mov
cld
lods
jmp
and
movsl
jecxz
notb
ja
bound
pop
sbb
pop
addr16
lahf
shll
out
lret
in
scas
popa
ret
loop
pop
loope
addl
push
mov
pop
pop
cmp
fistpl
stos
mov
push
test
xor
jg
sahf
push
cmpsl
mov
jne
and
sbb
into
dec
xor
cmp
sub
js
arpl
fdivrl
jne
arpl
and
and
jno
xchg
outsl
inc
xchg
jg
in
xor
dec
lret
push
push
arpl
xchg
lods
adc
mov
addb
jmp
lds
jg
jno
js
jp
xor
or
movsl
sub
dec
pop
shlb
imul
lock
xor
arpl
dec
or
mov
inc
out
and
addb
out
or
inc
jae
popa
mov
ds
mov
dec
push
mov
ss
xchg
imul
inc
in
push
fnstenv
fcompl
adcb
mov
aaa
cltd
in
fisubl
stos
push
inc
cmp
and
dec
add
mov
sbb
dec
xchg
dec
pop
sub
jae
mov
fwait
cmpsb
xchg
push
ret
xor
dec
xchg
dec
mov
and
int
mov
inc
outsl
cmpb
inc
fimuls
push
cmpsb
arpl
andl
pop
xchg
adc
mov
data16
sub
xchg
lea
in
lcall
push
outsb
adc
lahf
inc
nop
cmp
inc
shrl
lret
and
pop
sub
lock
test
pop
mov
or
ja
xor
test
stos
mov
test
movsl
pusha
sbb
mov
iret
repz
lret
mov
js
ss
mov
hlt
addr16
test
out
push
leave
inc
imul
mov
repz
sahf
jne
add
jg
or
pop
jl
xchg
out
pop
or
cmp
in
xchg
cmp
sti
stc
sbb
mov
gs
fistps
dec
lret
sub
add
test
xchg
pusha
xor
repz
push
ret
fwait
test
mov
and
xor
clc
xor
jo
out
xchg
and
ficomps
xrelease
jle
adc
int3
fsubrs
out
or
fnstcw
arpl
xchg
fxch
inc
jge
in
jmp
out
aad
push
push
push
mov
sbb
and
out
mov
das
iret
pushf
mov
outsl
insl
pop
outsl
fxch
dec
adc
fs
repz
xor
xor
mov
pop
mov
xchg
cmc
shll
iret
int
test
dec
loop
or
loope
sub
sbbb
pop
mov
pop
ret
lods
mov
jne
pop
insl
stc
out
fmulp
in
lret
inc
fnstsw
sub
mov
fsubs
mov
or
outsb
cmpb
xor
call
leave
nop
push
cwtl
imul
mov
lret
outsl
xor
cmp
leave
mov
jl
nop
dec
push
jae
outsb
lahf
mov
std
sbb
not
loope
xchg
sub
fdivl
xchg
cs
lret
pop
popa
into
and
cmp
inc
in
cmpsl
test
xor
lock
bound
test
jnp
cmp
xlat
dec
jp
and
or
sub
stc
nop
dec
inc
in
ljmp
xchg
idivl
test
mov
repz
inc
mov
std
shr
push
icebp
aad
das
fidivl
mov
fdivrl
out
push
dec
pop
loope
jb
cld
push
and
dec
push
or
pop
xchg
cmpsb
in
int
jg
mov
and
gs
sbb
or
pop
mov
mov
ret
mov
xchg
mov
out
lock
push
fwait
sub
or
movsb
adc
int3
shlb
xchg
ret
jmp
xor
add
mov
dec
mov
fsubrs
dec
push
xchg
popa
jbe
and
dec
dec
mov
cmp
fsubr
mov
cmp
push
sub
in
push
inc
imull
xor
jle
in
xchg
mov
inc
mov
arpl
mov
adc
and
push
mov
inc
xor
imul
lret
sbb
pop
bound
jo
imul
insl
xchg
mov
cld
popf
adc
or
lret
mov
cmpl
in
repnz
imul
push
pop
jns
add
scas
fwait
mov
inc
aam
add
xchg
loopne
jmp
push
cmp
jecxz
daa
cmp
jbe
lret
push
inc
popf
dec
aas
or
push
js
sarb
stos
in
rolb
addr16
cmp
inc
mov
scas
mov
jnp
aad
es
daa
push
repnz
adc
mov
adc
sahf
cmpsl
cmc
xor
jle
dec
outsb
xlat
xchg
loope
test
mov
mov
sbbl
xor
ffreep
cli
mov
inc
jb
mov
jge
cmp
mov
je
ja
jne
lcall
push
arpl
mov
sub
sbb
in
pushf
add
cmp
iret
sti
iret
mov
ficomps
and
mov
xchg
jnp
outsl
and
ret
aaa
adc
subb
jno
cmc
ljmp
mov
fs
mov
ficomps
mov
jg
dec
push
mov
hlt
add
addr16
push
cmp
add
or
icebp
mov
fmuls
sti
cmp
fisttpll
sbb
pop
imul
sahf
mov
daa
and
int
filds
or
inc
rclb
push
add
xor
jns
cmc
pop
fildll
push
insb
out
subl
std
fcomi
sub
out
jle
sbb
cmp
mov
fwait
out
stos
arpl
hlt
out
fiaddl
aas
xor
mov
sahf
inc
jmp
inc
imul
test
mov
jb
dec
jns
daa
xor
or
sahf
jecxz
scas
in
rcrb
mov
sti
daa
mov
sahf
aaa
dec
lret
lret
jmp
movsb
adc
icebp
fimuls
sbb
pop
sub
push
div
jle
or
mov
jne
mull
loop
outsb
scas
jnp
outsb
adc
jns
sti
sub
outsl
push
dec
aad
outsb
pop
pop
push
jae
bt
and
pop
xlat
pop
push
iret
or
jns
pushf
xor
jo
std
inc
xor
add
push
imul
lock
mov
jae
xor
int
es
mov
xchg
std
inc
in
test
jae
mov
sahf
pop
or
repz
call
popa
sub
std
sbb
mov
repnz
jno
jne
aaa
push
icebp
push
in
cmp
jnp
enter
or
sbb
mov
mov
adc
xchg
lcall
sub
push
jo
inc
inc
cmpsb
mov
mov
inc
ja
pop
mov
inc
inc
repz
rolb
jmp
fisubl
xor
addb
test
pop
repnz
out
pop
ret
aaa
pop
push
stc
adc
or
lea
push
adc
data16
lcall
lea
pop
fstpt
dec
push
adc
cwtl
push
xor
cmc
and
mov
fwait
cli
adc
xchg
fildl
mov
adc
imul
xchg
ljmp
dec
ud0
lods
scas
push
dec
cmp
sub
jle
dec
cmp
mov
jae
jle
pop
inc
xchg
xchg
adc
pop
pushf
sub
cltd
out
call
xchg
jl
sbb
loop
xor
add
cwtl
sti
lds
pop
pop
fsubr
mov
cwtl
mov
mov
jge
inc
dec
ret
mov
mul
push
pop
call
add
add
rcl
nop
inc
pop
fwait
out
cli
pop
pop
pusha
xchg
dec
sbb
cmp
mov
jg
leave
das
mov
jno
pop
scas
mov
xor
sub
xor
loope
imul
pop
push
clc
push
pop
inc
sub
ljmp
clc
clc
pop
mov
pop
inc
popf
and
xor
and
clc
xor
inc
pop
rolb
in
lahf
loopne
mov
and
jo
in
xor
or
sbb
add
ret
int
push
fucomi
aam
out
cmp
xchg
test
xchg
xchg
add
sbb
and
arpl
sub
inc
xchg
sbb
out
dec
roll
std
sar
inc
call
sbb
mov
int
es
pusha
aaa
lret
insb
inc
push
loope
push
pop
adc
jmp
imull
ret
jg
es
sub
aam
arpl
scas
shr
es
pop
cmp
insb
in
jmp
in
inc
mov
outsl
sti
jo
push
inc
jmp
mov
pusha
push
repz
jmp
sbb
xchg
cmp
sub
lret
jo
xchg
jge
ret
sahf
lret
xchg
inc
dec
gs
je
pop
or
inc
add
xchg
pop
xchg
pop
pop
xorb
mov
or
out
ds
mov
xor
rorl
imul
sbb
rep
js
insl
push
incl
xchg
in
mov
dec
cmpsl
pop
leave
mov
out
jne
add
jmp
addb
sahf
sar
aaa
mov
fwait
mov
adc
imul
inc
or
mov
mov
jmp
pop
sub
inc
into
fidivs
jne
sti
in
sbb
pop
fdivrs
dec
xchg
adc
xlat
or
out
push
or
mov
mov
xchg
adcb
xor
sub
mov
testb
dec
test
clc
outsl
cmpsl
mov
idiv
add
and
adc
mov
jge
ss
inc
shll
into
rcrl
cli
loope
int
and
mov
iret
jmp
fstpl
ss
mov
aaa
dec
js
dec
insl
out
inc
add
bound
xchg
arpl
mov
mov
fwait
pusha
lds
dec
data16
pop
in
iret
mov
sbb
pusha
mov
dec
sbb
out
pop
cwtl
hlt
loopne,pt
mov
jg
xchg
loope
pushf
icebp
inc
and
inc
loop
jbe
std
lods
jp
fwait
mov
scas
sbb
inc
outsl
andl
add
leave
or
shrb
scas
xchg
sbb
or
adc
sbb
mov
add
incb
adc
outsl
add
cmpsb
cwtl
and
pop
add
lods
push
outsl
test
mov
adc
pop
jno
lcall
adc
add
pusha
xchg
jle
repz
dec
ficomps
mov
fidivs
jmp
jae
sarl
mov
lcall
arpl
movsb
aaa
ljmp
add
xchg
sbb
xor
gs
sti
jne
mov
push
outsb
mov
mov
pop
shll
push
jp
mov
xchg
ljmp
cs
fnstcw
repz
jb
and
cs
loopne
scas
sub
inc
inc
cld
movsbl
ljmp
out
imul
and
dec
hlt
dec
cmp
movsb
fadds
cltd
in
push
mov
adc
sti
adcb
or
jg
jge
xchg
jne
add
add
or
push
mov
jle
dec
and
inc
push
push
or
stos
mov
xor
in
cmpsl
hlt
lret
xlat
lcall
pop
cmp
xor
cmpsl
dec
cmpsb
sbb
push
pop
inc
inc
popf
test
sub
mov
lock
imull
cltd
xor
mov
addb
ffreep
je
jno
add
inc
inc
jecxz
pop
sti
push
sub
fimuls
sete
clc
movsl
stc
imul
mov
mov
lea
int3
arpl
inc
into
icebp
cmp
and
push
xor
xor
sahf
shll
sub
add
in
pop
data16
out
cmp
inc
call
lods
inc
xchg
fisubrs
lods
rol
in
repnz
mov
xlat
fildl
xchg
cwtl
sbb
and
hlt
loope
and
mov
mov
mov
mov
push
in
lcall
add
movb
stos
les
rorl
cmp
push
pop
mov
into
sub
daa
mov
fdivp
push
mov
and
and
adc
nop
cmp
dec
pop
pusha
clc
out
hlt
cmp
inc
push
repz
or
stos
inc
pop
daa
sti
jmp
std
lock
inc
mov
push
sbb
add
stos
aam
push
pusha
pop
push
push
outsl
sbb
cmp
es
jp
sbb
and
lds
decb
lods
pushf
pop
cmpsb
lea
out
mov
in
adc
ja
inc
icebp
jno
iret
mov
pushl
push
and
jmp
sub
dec
daa
xorb
push
dec
jl
das
inc
xchg
addl
test
mov
scas
inc
push
outsb
shll
ljmp
lcall
popf
lds
inc
mov
push
outsl
popa
fmull
shlb
data16
jmp
cmpsb
mov
rcrb
orl
loopne
and
push
jmp
ret
dec
dec
int3
sub
sub
cmpsl
mov
cmpsl
jecxz
aam
in
test
insb
leave
inc
mov
imul
xor
inc
mov
push
cld
fisttps
mov
inc
arpl
repnz
mov
cli
lret
and
popf
lods
xor
outsb
in
xorb
mov
adc
push
or
mov
lock
cltd
push
ljmp
outsl
out
push
loop
insl
aam
jg
in
icebp
mov
orl
div
out
inc
insl
stc
sbb
mov
push
sbb
dec
push
xor
imul
cmc
cmp
dec
icebp
fidivl
shl
out
test
mov
pop
call
aaa
icebp
out
rorl
fistps
mov
push
sar
push
mov
fnstcw
icebp
mov
push
dec
fcoms
cmp
inc
jae
in
fs
aaa
clc
adc
dec
mov
mov
cmp
out
xlat
cmc
inc
insb
jnp
mov
fs
clc
sbb
mov
aam
adc
jnp
push
addr16
sub
mul
mov
cltd
shr
das
mov
ret
and
out
shlb
xchg
mov
and
in
lods
xchg
popf
jge
aaa
xchg
lcall
jno
scas
push
scas
pop
mov
push
repz
ds
mov
ja
pop
shrb
movsl
fnstsw
mov
not
inc
dec
ret
mov
jl
add
lcall
lea
rorl
lea
xchg
push
or
adc
xchg
dec
in
lea
sub
mov
jle
push
fs
popf
sbb
jp
add
les
push
leave
mov
mov
dec
and
xchg
test
xchg
out
pop
pop
xchg
dec
sbb
ret
mov
loope
dec
lret
cmp
addr16
fdivl
cwtl
xchg
shrl
xor
jp
or
inc
shl
push
repnz
scas
or
and
push
push
or
dec
jge
cmp
push
sub
mov
mov
jp
lods
sub
dec
inc
dec
enter
pop
lcall
mov
ret
dec
cmp
test
jmp
mov
in
mov
jae
jnp
xchg
mov
insl
sti
push
jl
adc
jg
xchg
push
or
sahf
sbb
out
xor
loope
and
js
lds
pop
das
arpl
lret
dec
and
add
in
nop
cmp
scas
cmp
cli
sarb
push
and
pop
sub
adc
sub
sarb
cli
lds
outsb
inc
adc
mov
lods
stos
sbb
dec
das
lcall
ret
inc
sbb
test
out
test
call
push
cmp
lcall
pop
nop
inc
jne
fsubrl
pusha
xor
int
divb
dec
pop
inc
std
push
fwait
dec
test
mov
mov
cmp
in
and
mov
lds
or
fdivrp
xchg
adc
push
cmp
dec
xor
aas
popa
in
push
repz
fistpll
and
sbb
mov
sbb
sbb
push
push
scas
xor
mov
mov
js
sub
mov
ja
mov
jnp
pusha
or
loopne
aaa
cltd
sbb
aad
and
into
lods
lcall
stos
jno
mov
jecxz
sbb
pause
push
mov
sbb
les
cmp
xchg
aad
mov
fldl
push
shll
repz
cmpl
and
test
jmp
sbb
cmp
aam
out
push
je
aas
fdivs
repnz
xchg
data16
lods
ds
mov
mov
add
add
insl
stc
push
sbb
push
and
push
pop
insl
mov
inc
jno
fidivl
cltd
test
dec
mov
cmp
mov
mov
sbb
add
xor
ret
push
lea
into
aam
dec
sbb
cmpsb
loope
mov
mov
or
xchg
mov
mov
jbe
sbb
xchg
roll
lods
push
fidivl
into
dec
out
jmp
push
xchg
mov
adc
or
xchg
mov
mov
fiaddl
mov
pop
mov
testl
insb
cld
mov
int
sub
adc
jne
repnz
repnz
sbb
gs
dec
fbld
repnz
lea
add
cld
and
cld
and
or
movsl
shrb
push
mov
sub
jl
cli
stos
dec
sbb
or
cmpsl
or
xchg
cltd
ja
shl
adc
int3
out
add
pop
in
rorl
stos
arpl
popf
roll
out
mov
jno
mov
and
xchg
shrl
sub
sbb
dec
ss
fcomi
and
adc
mov
push
and
jo
jae
jno
pop
add
mov
inc
pop
mov
test
lret
xchg
jnp
jge
jge
insb
sbb
enter
inc
sti
mov
push
cs
scas
mov
cltd
leave
mov
cmovno
repz
shll
jnp
in
les
push
fdivrl
adc
jne
loop
lods
xor
loop
mov
adc
shlb
mov
sbb
lret
arpl
xor
stc
pop
sbb
mov
jge
ror
lcall
cmpsl
or
and
sbb
mov
scas
cmp
scas
movsb
mov
and
pop
test
sub
cmp
dec
stc
scas
rol
sbb
xchg
fsts
adc
ret
ljmp
inc
inc
ds
cltd
jne
out
mov
out
into
xchg
pop
push
lcall
aam
fwait
jl
mov
setbe
fwait
add
sbb
pop
int
mov
sub
dec
push
out
fldenv
es
inc
shlb
mov
fsubs
pop
inc
rcr
push
into
into
adc
jne
loope
sbb
push
mov
mov
pushf
js,pt
sbb
dec
sbb
cmp
mov
push
loopne
fcomps
aad
cld
aad
pop
cmp
cli
cmpsb
jo
orl
cmp
push
cmp
mov
sti
xchg
iret
mov
insb
jnp
loopne
or
out
mov
add
neg
dec
aam
sbb
call
subb
adc
push
pop
jns
pop
scas
xchg
ret
pop
adc
pop
pop
mov
pusha
shl
mov
xor
out
mov
xor
adc
loop
sub
pop
in
lret
fcmovnb
insb
sub
xor
xor
lret
popf
pop
or
data16
lret
xchg
jo
add
pop
or
push
pop
push
out
or
mov
jo
inc
fisttpll
jg
scas
sahf
imulb
sub
loopne
aam
xchg
add
inc
cmp
adc
mov
mov
push
add
sub
ljmp
mov
out
stc
xchg
mov
aas
jl
dec
hlt
outsb
jmp
cmp
bound
adc
out
add
cmpl
mov
or
rorl
enter
sbb
jnp
stos
mov
movsb
mov
ja
dec
mov
aad
test
loop
test
out
inc
push
pop
lcall
iret
push
cmp
sbb
mov
call
inc
dec
mov
pop
movsl
mov
add
mov
mov
adc
inc
sbb
arpl
pop
insl
out
cltd
pop
stc
mov
mov
sub
xchg
shr
sbb
int3
xchg
mov
cmc
js
popf
cmp
lods
aam
mov
sar
loopne
mov
adc
and
push
xchg
inc
fsts
arpl
cmpsl
test
push
mov
jmp
cs
push
jbe
pushaw
daa
imul
imul
jmp
ficoml
xchg
ljmp
cs
dec
into
mov
in
aaa
bound
cmp
cmp
repz
popf
mov
push
out
dec
inc
test
push
mov
lods
fincstp
rcl
mov
dec
data16
jo
ljmp
jg
vorps
mov
dec
aad
push
popa
mov
dec
mov
into
arpl
adc
dec
jb
sub
popw
dec
test
sub
icebp
cmp
push
arpl
mov
lods
lahf
outsl
cmp
aad
outsb
in
or
add
and
mov
sub
popf
mov
mov
mov
xor
pop
jbe
outsl
fisttpl
ss
lods
adc
xchg
cmp
out
lcall
cmpsl
or
dec
or
push
inc
xchg
out
out
add
dec
loopne,pt
outsb
or
mov
pop
add
shl
mov
fs
andb
sahf
sti
inc
jo
sarb
incl
xbegin
xchg
inc
ss
push
decl
pop
pusha
daa
ficoml
shll
aaa
movsb
in
mov
jnp
stos
jmp
add
lcall
dec
push
fcomps
sub
mov
out
sbb
pop
pop
pop
popf
sbb
data16
jl
clc
pop
sti
add
and
cmp
mov
mov
or
ret
lods
inc
out
jnp
sbb
jbe
rclb
xor
bound
add
sbb
repnz
mov
ret
std
std
xor
xchg
popf
xlat
jp
in
mov
inc
push
mov
pop
xor
inc
jmp
stc
pop
outsb
mov
std
call
outsl
ss
xchg
pop
xchg
xchg
xorl
mov
mov
mov
mov
push
lret
sub
sub
pop
pop
sti
dec
dec
xor
inc
mov
imul
xlat
jns
push
jmp
mov
loop
dec
mov
repnz
lcall
mov
adc
sar
mov
mov
cmp
and
inc
sbb
cmp
push
mov
jp
out
scas
fstl
cmp
push
arpl
lea
lds
mov
xchg
sub
enter
shrb
push
in
cmp
inc
pusha
and
rcrb
dec
push
inc
popf
mov
pusha
stos
scas
orb
sub
mov
dec
adc
nop
adc
frstor
pusha
ret
in
bound
xchg
adc
popa
inc
xor
inc
dec
sbb
xor
push
stos
mov
and
std
repnz
or
jmp
cmc
fmul
jb
scas
insb
das
stos
insb
xchg
int3
xor
sbb
mov
mov
dec
pop
ljmp
dec
scas
or
int
add
adc
outsl
daa
sbb
mulb
mov
lret
add
test
jle
push
push
xchg
jp
inc
xchg
cmpsb
arpl
mov
inc
pushf
test
stc
popa
mov
les
call
or
push
lahf
xchg
mov
pop
test
clc
sub
and
in
add
add
jl
or
arpl
pop
int3
push
sbb
jmp
jge
xor
and
sbb
inc
xor
jle
xchg
loopne
mov
dec
jns
mov
std
scas
shr
aas
mov
repnz
dec
adc
mov
pop
addr16
push
fmuls
in
jg
aaa
std
or
pop
mov
loope
adc
jo
aad
lds
popa
push
xchg
adc
cmpsb
das
push
pop
ds
lret
push
adc
ret
lret
dec
dec
repz
dec
outsl
mov
inc
leave
outsl
imulb
arpl
icebp
push
add
xchg
pop
xor
out
or
bound
dec
pop
add
bound
pop
jl
pusha
mov
mov
jbe
mov
pop
fistpll
clc
or
mov
or
pop
test
sbb
inc
mov
je
push
dec
cmp
imul
push
pop
or
repnz
lock
loopne
cmp
mov
dec
inc
test
mov
sub
inc
mov
jge
ret
or
and
imul
mov
test
mov
das
or
xchg
int
pushf
mov
shlb
ja
sbb
nop
movsb
jnp
repnz
notl
out
add
jge
jecxz
mov
jo
adcl
imul
jne
test
dec
iret
out
add
jmp
add
add
mov
outsb
imul
fadds
mov
cmpsl
sub
pop
add
mov
cmp
bound
out
out
mov
adc
out
xchg
and
sarb
test
in
or
outsb
jmp
sub
inc
sub
inc
outsb
lret
pop
push
push
gs
adc
xorl
sahf
add
and
jg
cmpsl
mov
mov
pop
test
fisubrs
rorb
enter
cmp
dec
movsl
cld
scas
call
pop
push
sarl
sti
stos
mov
insl
lock
cmp
decl
in
mov
xchg
stos
mov
sbb
insl
push
pushf
mov
ljmp
in
mov
mov
out
xchg
pop
adc
pop
dec
lods
and
or
cmp
and
xchg
inc
into
mov
das
xchg
ret
clc
fcoml
lea
int3
adc
jb
into
popf
inc
hlt
sbb
int3
pop
dec
or
popa
mov
inc
fwait
mov
dec
cmpb
movsb
out
sbb
pop
into
jle
push
push
jl
sub
jb
dec
mov
addr16
aam
mov
ss
sbb
mov
loopne
stos
xor
cmp
or
ja
fstl
aad
cwtl
test
icebp
pop
push
scas
xlat
clc
push
iret
xchg
dec
shlb
dec
mov
repz
lret
adc
cmp
repz
pop
jae
ds
aas
mov
adc
das
or
mov
add
adc
loope
xor
adc
test
pusha
shll
sti
out
aaa
cltd
ljmp
scas
test
pop
vandnps
or
adc
gs
lret
gs
mov
fucom
or
mov
sti
in
je
test
xchg
sub
arpl
jns
pop
enter
sub
push
mov
or
dec
mov
push
or
cmpsl
iret
shlb
cmpsb
shrl
xchg
data16
lods
stc
stc
xchg
aad
push
arpl
fstl
lock
pop
aas
pop
and
scas
and
jno
roll
jne
sub
mov
mov
sub
xchg
fmul
enter
cmp
fistl
mov
mov
mov
jnp
addr16
in
lea
in
mov
fiaddl
out
jae
mov
dec
lock
iret
or
dec
shr
adc
jno
sub
sbb
cmp
inc
sub
ss
movsl
pop
xor
inc
mov
stc
sti
mov
pop
add
cmp
aad
pop
movsb
push
movsl
fisubrl
jmp
scas
int3
sub
addr16
and
add
push
dec
xchg
add
sti
sbb
xlat
in
push
pusha
or
fmuls
jns
ret
out
mov
dec
push
push
lret
dec
fcmovb
mov
jmp
in
ja
scas
mov
aas
sarb
or
mov
cmc
in
bound
ret
sub
insb
fchs
notl
jb
inc
adc
jbe
es
or
aam
fiaddl
outsl
clc
pop
pusha
push
jg
pop
call
xlat
xrstor
in
inc
lret
idivl
dec
cmc
inc
fbstp
fdivs
repz
call
cli
push
pop
jg
stc
cmp
dec
or
ds
xchg
int
mov
nop
mov
out
js
lods
mov
push
test
bswap
shrb
std
and
pop
mov
cmp
pop
not
hlt
or
push
push
or
add
clc
aaa
mov
repz
sahf
pop
popa
cmp
adc
xchg
in
andl
push
add
pop
rcll
push
dec
sub
daa
pop
cmp
ret
out
es
ja
cmpsb
outsl
sub
sbb
repz
lcall
outsb
fildl
scas
mov
outsl
xlat
cmp
cmpsb
xor
je
shlb
leave
popf
iret
jmp
jg
jecxz
jae
fbstp
xor
pop
ror
pop
jb
sub
adc
popf
mov
cmc
inc
jb
dec
or
shl
out
subb
inc
pop
lods
fnsave
cmp
mov
xlat
shlb
icebp
dec
adc
out
xor
push
push
ja
dec
cmpsl
jb
rorb
arpl
mov
or
xor
test
imul
mov
addl
outsb
and
enter
pop
pop
cmp
push
adc
push
mov
push
mov
adc
xor
mov
xchg
imul
push
adc
jl
js
lods
dec
daa
and
nop
dec
pushf
js
bound
mov
dec
cmp
mov
outsl
push
adc
fsts
pop
pusha
mov
fs
mov
popa
sub
inc
icebp
jp
test
jnp
lahf
or
popf
mov
imul
or
mov
mov
inc
loop
das
mov
pop
pop
mov
ret
mov
shrl
sub
mov
mov
jne
lods
sbb
jno
cmp
test
jnp
ret
mov
push
cmp
jge
lahf
or
inc
adc
mov
adc
inc
fs
push
iret
and
push
scas
push
inc
mov
mov
or
jno
mov
rolb
sbb
movsl
jne
cli
fcmovb
cmp
lahf
jle
xor
adc
fwait
adc
in
je
imul
scas
stos
adc
lods
jbe
ds
jb
shlb
and
cltd
lds
int
das
mov
xor
add
jecxz
jp
out
ret
stc
or
cmp
mov
sub
inc
sub
inc
cmpsb
mov
inc
cmp
fcomps
mov
imulb
mov
jle
idivl
imul
dec
dec
out
rcl
ffreep
jns
or
sub
shll
pop
mov
out
scas
push
fs
ret
xchg
sub
scas
lds
cs
jns
lret
jecxz
sub
sub
or
dec
sbb
loop
adc
or
ja
pop
shrb
xor
out
mov
lret
test
loopne
ffreep
xchg
mov
gs
dec
cmp
imul
icebp
push
add
xor
iret
pusha
xchg
out
aad
push
dec
mov
and
shll
mov
mov
pop
xor
push
js
mov
dec
mov
sub
adc
and
repz
bound
pusha
jmp
aaa
pop
dec
xor
test
pusha
jns
imul
arpl
ss
or
repz
adc
in
clc
loop
jmp
cmp
push
and
push
mov
xchg
cwtl
leave
mov
mov
pop
shll
and
lret
jns
pop
shlb
pusha
jb
leave
hlt
lea
loop
sub
pop
dec
adcb
out
sub
push
fcmovnu
xor
or
push
ret
mov
push
or
push
cmpsb
dec
fwait
jmp
aas
jge
fnstsw
mov
and
stos
aaa
into
xchg
push
inc
lds
movsb
lock
jns
mov
aaa
adc
pop
pushf
mov
inc
fildll
push
sbb
imul
jns
push
sti
outsb
lret
mov
and
or
divl
fwait
popf
cmp
push
int
push
mov
cltd
xor
aad
inc
push
into
xchg
fisubl
subl
xor
mov
addr16
mov
and
xchg
lcall
add
lods
rolb
mov
rolb
cwtl
int3
stos
movsb
mov
addb
add
das
scas
lods
loope
mov
mov
sbb
cmp
sbb
inc
xor
pop
pusha
hlt
in
cmpb
data16
push
fisubl
jmp
mov
out
pop
mov
inc
and
lods
sub
xchg
repnz
aaa
mov
imul
mov
cltd
into
lahf
cmp
je
pushf
pop
add
cli
jns
test
jmp
lret
inc
test
cmpsl
imul
data16
dec
es
sub
lods
sub
pop
out
pop
cmpsb
add
fimuls
jb
aam
popl
cli
or
push
push
jne
in
and
add
hlt
push
popa
repz
mov
fisubrs
sahf
out
dec
sub
inc
pop
mov
xchg
fiadds
pop
mov
popa
inc
sbbl
ss
pop
mov
push
addr16
cmpsb
nop
xchg
cmp
xchg
int
mov
adc
and
icebp
push
aam
test
jmp
push
hlt
jae
stos
jae
and
sub
sub
push
cmp
negb
fistpl
and
xor
shll
je
adc
lret
cltd
enter
or
mov
test
std
xchg
loope
cmpsb
push
xor
xlat
jp
daa
shrl
add
imul
push
dec
mov
sub
jb
addr16
movsb
int
jbe
stc
xlat
lea
pop
iret
dec
xchg
cmp
push
mov
pop
add
lcall
xchg
jb
push
fiaddl
pop
out
enter
push
cli
mov
gs
jo
fistpl
jp
push
push
lea
push
mov
sub
sbb
pusha
into
mov
cmp
cwtl
jns
xchg
push
add
divl
sub
add
mov
jae
add
adc
push
fdivrs
ja
popf
xor
std
push
out
or
rcr
adc
shrb
das
cmp
adcl
mov
mov
xchg
and
repz
sub
xor
mov
jl
cmpsl
pop
inc
mov
loope
push
adc
push
les
rol
aam
das
and
push
cmp
cmp
mov
fstps
faddl
ss
dec
das
fisubrs
xchg
pushw
jle
arpl
rcll
jne
ljmp
bound
int3
jle
andl
js
je
bound
add
mov
xchg
frstor
xchg
xor
and
add
andb
and
and
rol
jp
mov
xor
outsl
pop
inc
loopne
mov
mov
ljmp
xchg
push
int
mov
jmp
call
mov
xchg
and
lods
mov
sbbb
ret
scas
cmp
sti
fmull
int
pushf
in
and
push
push
xchg
mov
mov
add
cmp
les
cmp
or
xchg
mov
dec
in
sub
mov
mov
andb
stos
out
dec
pushl
push
data16
pusha
or
or
shlb
mov
lock
xor
pop
cld
imul
pop
je
xor
fidivrl
pop
pusha
jp
pusha
mov
scas
cwtl
push
mov
mov
mov
jns
mov
cmp
or
ret
inc
std
and
ds
outsl
or
pop
mov
inc
imul
push
or
mov
xchg
out
sub
popf
leave
sub
out
lea
sub
cmp
scas
mov
rcr
out
rcrb
xor
stos
out
test
pop
sti
sub
lock
sub
add
inc
inc
jns
stos
cmpsl
push
sub
pop
sub
and
push
loop
les
lock
inc
std
fsubl
adc
mov
cmp
jle
pushf
pop
clc
add
stos
stos
cmc
xchg
icebp
cwtl
nop
daa
cmp
insb
insb
jb
cmpl
aaa
xor
test
je
mov
arpl
into
hlt
movsb
push
ret
sbb
xor
mov
icebp
mov
movsb
sub
mov
inc
insl
jmp
out
mov
xlat
xorl
xchg
dec
push
dec
mulb
mov
mov
cmp
int
mov
fisubs
jmp
repnz
jmp
movsb
xchg
push
mov
mov
jle
popf
xor
xchg
pusha
repnz
ret
pop
int
insb
push
xor
out
cmp
lea
test
jno
dec
ficoml
pop
xchg
icebp
scas
sbb
or
push
jp
xchg
xchg
inc
iret
ljmp
inc
addr16
or
mov
jnp
or
push
jecxz
out
xor
pop
rorb
cmp
cli
jge
outsl
or
xorb
lods
mov
or
fdivrl
inc
push
scas
jae
inc
add
out
jns
mov
xor
testb
test
inc
mov
dec
aad
push
outsl
and
pop
arpl
adc
iret
into
and
movsb
out
pop
ja
push
lahf
mov
xor
add
lds
test
inc
jmp
xor
scas
outsl
jo
stos
cmp
das
cmpsl
pop
mov
add
push
pop
out
loopne
xor
ljmp
repz
inc
out
and
mov
jb
es
sti
fs
inc
push
inc
xchg
jmp
push
out
shrl
stos
popa
dec
add
stc
mov
mov
fisubs
frstor
sbb
push
push
jns
sbb
shlb
std
adc
out
sub
pop
pop
movsl
sub
lock
rcll
pop
xor
dec
pushf
inc
jg
call
push
scas
loop
push
lcall
or
adc
pop
mov
mov
dec
add
in
xor
mov
andl
in
mov
or
dec
or
in
pushf
js
cmp
mov
push
jmp
xor
mov
cmp
mov
or
pop
fs
daa
pop
lret
jl
shl
je
ds
inc
push
mov
pop
fwait
popf
loope
cli
xor
ja
nop
imul
enter
mov
add
xchg
xlat
xor
enter
lret
cltd
lcall
dec
dec
dec
fcmovnbe
add
xchg
sbb
add
adc
test
and
pop
xchg
push
mov
or
das
jns
pop
push
jae
adc
pop
sbb
jl
mov
rcrb
dec
and
cltd
pop
outsl
inc
out
sub
push
fs
push
cmc
mov
sbb
cmp
jno
adc
cmc
nop
stos
out
and
cmc
scas
nop
mov
push
daa
pop
fidivs
fs
or
test
dec
jae
adc
iret
nop
push
xor
xor
jge
pop
push
pop
inc
mov
pop
enter
popa
and
repz
shlb
dec
mov
lods
int3
and
inc
hlt
in
adc
leave
int
jb
out
ret
fcomps
testl
lret
mov
cmpsl
push
daa
xchg
lds
cmp
cmp
jmp
dec
jae
arpl
repz
lods
in
fstpt
loop
clc
xchg
inc
jmp
xchg
mov
shlb
cmpsb
push
nop
outsl
rcll
add
out
mov
sti
shlb
xchg
add
dec
data16
lds
enter
pop
cwtl
sub
mov
loopne
xor
dec
dec
repz
pop
sahf
pushf
dec
popa
punpcklbw
nop
std
jl
mov
cmp
outsb
mov
xchg
mov
xchg
rorl
cmp
adc
jle
mov
pop
ss
stc
adc
or
fsubs
inc
int3
ja
inc
imulb
das
xchg
xor
jae
push
leave
or
inc
cmp
xchg
lahf
sbb
stos
test
push
mov
jle
jg
hlt
insb
jns
into
divl
orb
ljmp
mov
lret
mov
imul
xchg
lahf
jo
pop
mov
ret
imul
jnp
add
push
xchg
jmp
and
mov
in
jb
sbb
rcrl
jno
in
test
or
mov
and
pop
mov
sbb
adc
mov
sbb
sti
imul
push
and
out
into
cli
push
cwtl
adc
int
dec
mov
push
cld
sub
xlat
fnsave
sub
jns
pop
fisttpl
mov
push
push
sbb
addr16
adc
scas
push
shll
fsubrs
loop
lret
mov
outsl
xor
outsb
xor
es
cs
push
sbb
xorb
in
sbb
inc
cmp
shl
and
mov
mov
dec
mov
jg
and
mov
jmp
ljmp
aam
inc
mov
das
dec
cmc
cli
jae
fidivrs
xor
sub
js
dec
mov
or
into
dec
rcrb
es
addr16
add
imul
jge
xchg
out
aad
arpl
inc
out
lea
jnp
mov
daa
pop
push
rcrl
bound
sub
mov
lret
adc
outsb
rol
insl
lahf
jg
pop
adc
gs
sub
stos
fdivs
inc
insb
or
mov
mov
fistps
jl
push
cld
dec
es
pop
adc
mov
sahf
arpl
push
dec
dec
pop
xor
jbe
push
aas
mov
stos
les
inc
xor
fwait
test
push
test
sub
loop
mov
dec
in
sub
sub
push
mov
pop
bound
add
mov
jle
push
jno
in
xor
push
lret
inc
push
push
mov
inc
mov
inc
xchg
popf
hlt
ret
cmpl
lods
icebp
in
push
dec
dec
or
data16
mov
or
xchg
enter
outsl
movsb
cmp
test
xchg
dec
jg
fcmovu
dec
test
imul
imulb
jmp
int
jo
xchg
cmpsl
sub
sahf
cmpl
dec
cltd
das
mov
mov
pop
aaa
add
push
mov
mov
adc
pop
cmp
imul
cld
cmpl
mov
xor
ja
dec
cmp
add
lcall
je
cs
loop
adc
sub
scas
outsb
mov
negb
shld
pop
mov
cmp
mov
repnz
cmp
xchg
mov
sbb
shlb
sub
jp
dec
fiaddl
mov
lock
push
inc
xchg
add
int
clc
cmp
daa
xchg
movsl
leave
inc
cmp
xchg
mov
mov
lahf
inc
stos
lahf
out
in
stos
sbb
movsl
fwait
ret
movsb
pop
cmp
mov
mov
push
or
xor
mov
in
out
adc
sbb
dec
dec
popf
mov
push
fcoml
test
loopne
or
dec
xlat
into
pop
or
mov
xchg
mov
jge
std
push
mov
or
fnstcw
inc
stc
addr16
ljmp
push
cmc
fldenv
add
in
popf
mov
mov
bound
jmp
shlb
mov
repnz
idivb
pop
jnp
push
pop
xchg
fmuls
bound
imul
jb
cmp
je
or
push
mov
mov
ja
sbbb
popa
jl
and
or
mov
or
lea
in
mov
jne
lret
mov
xchg
xor
jo
addr16
out
leave
adc
imul
fildll
cmpsb
pushfw
mov
clc
aas
div
xchg
shr
push
mov
push
xchg
pusha
jle
in
jge
cs
hlt
aas
call
fdivrl
mov
and
jecxz
fists
jb
xchg
enter
fwait
push
mov
int3
jge
in
out
xor
dec
sub
popf
into
in
ja
icebp
or
or
ja
lds
outsl
adc
pop
cmp
aaa
inc
iret
xchg
cs
jno
inc
scas
imul
mov
aam
jne
mov
outsb
inc
stos
adc
imul
stc
dec
push
frstor
xchg
fisttpll
push
xchg
xchg
xchg
cltd
shll
out
xlat
cmc
in
roll
add
pop
adc
xchg
and
std
xchg
aaa
push
je
xchg
orl
push
dec
lock
and
dec
cli
push
movl
jl
les
dec
out
ret
mov
fisttps
adcl
es
pop
cli
enter
outsl
mov
divb
pop
orl
scas
mov
push
jns
or
mov
es
xor
xchg
fs
jmp
dec
aas
xchg
dec
push
scas
add
mov
push
adc
addb
cmp
ja
js
pop
pop
mov
int
mov
ds
jnp
xor
mov
outsb
ret
addr16
sbb
cmp
sbb
into
cmc
fwait
cmp
xchg
xor
push
rcl
movsl
in
and
inc
sbbl
repnz
mov
call
shlb
sub
cmp
cmc
inc
and
mov
cmp
fsub
cli
insl
mov
mov
scas
xchg
outsl
imul
xchg
push
pop
stos
sub
cs
xor
fdivs
addl
imull
jp
sti
sbb
xor
pusha
aas
inc
pop
loop
ss
push
sub
sbb
push
pusha
sbb
adc
mov
cli
in
out
in
ret
inc
repnz
fdivrs
imul
ds
cmp
adc
jecxz
mov
mov
out
cmpsl
shll
mov
faddl
lds
sbb
outsl
add
sub
mov
cmp
xchg
rol
jnp
call
mov
dec
js
pop
lods
popa
out
clc
out
xchg
xchg
mov
lcall
aad
cmp
dec
faddp
mov
jnp
lods
cmp
into
or
mov
test
arpl
pop
enter
andl
sbb
pop
stc
cmc
movb
stc
fadd
in
adc
mov
jo
xchg
stos
popa
pop
decb
cltd
inc
push
sbb
ljmp
aaa
inc
xchg
inc
idivb
inc
dec
xchg
or
push
dec
jo
aaa
imul
leave
pop
leave
sub
loop
xchg
sub
sub
add
pcmpgtd
xor
ret
movsl
mov
jmp
dec
in
jno
sub
fadds
lods
dec
lahf
or
std
cmp
jbe
int3
sub
sbb
test
jnp
push
gs
inc
cltd
mov
das
dec
mov
outsb
pop
mov
out
push
sahf
aam
push
sub
inc
int
stc
pop
xor
cmpsb
insb
pop
shll
test
sub
lret
mov
mov
arpl
aam
in
mov
xchg
xchg
sbb
lock
adc
pushf
xchg
mov
inc
icebp
int
pop
xchg
addr16
inc
mov
clc
mov
lcall
imul
lret
push
sbb
call
aam
pop
scas
adcl
lahf
jmp
movsl
ficoms
test
sub
rclb
jbe
lcall
or
or
sahf
sub
add
jge
popa
loop
mov
mov
enter
jo
lret
push
add
xor
pop
inc
in
mov
enter
push
dec
sti
mov
and
test
inc
outsb
rclb
dec
repz
sbb
jo
jecxz
mov
incl
roll
xchg
fmulp
lret
dec
fiaddl
shrb
jecxz
pop
dec
aaa
mov
ret
cmp
lea
mov
mov
xchg
cwtl
fidivl
cmpsl
or
and
xor
shrb
lahf
loop
push
xchg
inc
mov
shlb
fcmove
mov
scas
in
call
iret
xchg
aad
cmp
and
int3
aam
mov
mov
xchg
jle
js
xor
aad
popa
jne
or
mov
jp
mov
mov
sub
cmp
aam
pusha
sub
cmp
popf
mov
lret
loop
test
int3
xchg
or
cmpb
into
push
out
inc
xor
movsl
sbb
gs
test
inc
sub
mov
dec
fcompl
inc
lods
push
out
add
das
movsb
mov
mov
loopne
mov
cmp
std
jg
sub
pop
push
or
xor
jecxz
xchg
add
addl
push
roll
ljmp
imul
aad
dec
and
repnz
pop
incl
cmp
loop
push
insb
bound
xor
mov
sub
testb
cli
jno
sbb
subl
outsb
xchg
cmc
inc
dec
inc
or
cwtl
jmp
mov
stos
add
or
or
out
cmpsl
insb
gs
enter
add
lods
lret
mov
ret
andl
add
xor
shlb
in
mov
sbb
xor
outsb
push
pop
movsl
and
and
jmp
xchg
pop
fs
mov
inc
pusha
mov
clc
es
aas
mov
cmp
imul
inc
nop
cmp
fstpt
inc
aad
cmpsb
in
inc
jle
lea
pop
out
lcall
rcrl
orb
loop
inc
in
fnsetpm(287
decb
imul
cmp
ljmp
js
icebp
sti
sahf
ds
pop
pop
xor
xchg
jmp
pop
mov
icebp
nop
push
cmp
imul
in
xor
sub
in
outsl
pusha
mov
xor
insb
test
mov
cmp
sti
push
out
andl
loope
iret
mov
lods
pop
jmp
xchg
popf
sbb
leave
fbstp
rol
or
das
dec
push
je
in
xchg
fstl
jnp
fstl
cmpsb
xchg
cmp
aas
sbb
and
stc
rorl
adc
and
lcall
fsin
sbb
adc
or
scas
and
out
pop
iret
pushl
cltd
xor
fdivl
mov
xchg
mov
fs
sbb
idivb
sub
pop
sub
jne
insb
inc
nop
aad
pop
push
dec
mov
inc
mov
test
push
in
lds
hlt
fcmove
aam
dec
js
cltd
sub
ret
push
imul
jno
inc
outsl
scas
or
sub
scas
data16
cmp
xchg
dec
stos
jecxz
test
jmp
in
stos
sbb
xchg
scas
jne
in
ja
jnp
dec
aas
out
xchg
push
and
dec
jo
jb
es
add
sub
int
lcall
int
popf
loop
notb
xchg
ss
and
in
xchg
push
mov
popa
adc
mov
xchg
push
jp
lcall
dec
ret
push
jecxz
mov
shl
incl
cmp
movsl
cmpsb
jns
aam
daa
xchg
xor
iret
add
gs
cs
faddp
jnp
jl
add
outsb
jge
nop
dec
inc
xor
add
mov
fsubr
sbb
add
hlt
stc
inc
aad
cs
call
push
into
mov
dec
nop
mov
xor
jmp
cmpl
jbe
mov
xchg
push
lock
xor
push
cmp
lret
inc
aam
cmp
cmc
mov
xor
jo
xorl
pusha
enter
daa
leave
int3
push
jmp
mov
ja
lcall
mov
js
cmc
lods
insl
mov
inc
pop
sub
cs
fwait
ret
dec
jle
add
cmp
sub
fs
ret
jbe
insb
ss
shll
xchg
int3
rcl
sbb
loop
movsl
pop
dec
insl
test
push
imul
test
jno
mov
jae
push
mov
cmp
xor
aam
push
adc
fs
push
dec
pop
push
cwtl
movsl
add
shll
xor
and
test
push
enter
insb
mov
mov
dec
lds
sbb
inc
xchg
xor
aaa
mov
dec
call
adc
fcoms
push
fnstsw
mov
int3
aad
addr16
sbb
enter
push
cmovb
adc
adc
fmuls
add
les
ffreep
insl
cltd
or
enter
loop
add
shll
imul
insb
nop
out
cmp
push
leave
jno
adc
inc
dec
clc
mov
out
xchg
cmpsb
out
xchg
pop
dec
repnz
out
inc
jno
js
lock
fucomip
inc
in
addr16
jns
lds
xlat
xchg
push
stos
std
pop
jnp
pushl
iret
inc
js
call
out
and
mov
mov
lcall
push
push
movsb
push
jae
sti
fiadds
pop
rorl
push
jg
mov
cmpsb
lock
pop
loop
enter
mov
sub
push
push
add
jecxz
cmp
sub
mov
add
lahf
add
outsb
jo
adc
push
rorl
mov
sti
push
fwait
cmc
loop
inc
and
or
addr16
push
ss
inc
popf
cli
jno
mov
pop
xor
cltd
popl
push
push
or
pusha
dec
pop
dec
sub
jp
rclb
arpl
xor
mov
inc
lcall
inc
add
popf
mov
ret
jno
ljmp
sti
push
js
mov
adc
gs
out
and
jb
pop
bound
divb
mov
mov
pop
push
scas
vmovmskps
mov
loope
push
shll
daa
pop
pop
push
adc
fdivrl
sub
or
mov
cmpsb
adc
das
mov
mov
ja
push
lret
pop
mov
movsb
hlt
call
insb
and
mov
sbb
fldt
sub
jp
jp
jae
shr
xchg
stc
jp
dec
mov
inc
xchg
adc
movsl
mov
xchg
rorl
out
or
pop
sub
lret
or
test
mov
xor
cltd
and
or
or
imul
into
inc
cmp
mov
or
call
test
lods
mov
and
lcall
insb
cmpsb
xchg
mov
xor
cmp
or
mov
fwait
and
push
test
dec
leave
mov
push
call
incb
scas
push
js
stos
push
pop
cli
pop
dec
sbb
stc
pop
jecxz
jo
mov
inc
gs
inc
icebp
cmp
or
es
fucomi
test
clc
out
lods
out
ja
popf
xchg
iret
mov
or
aaa
sti
enter
test
pusha
pop
dec
mov
fwait
test
mov
cmp
adcl
lods
test
aad
insl
mov
fsubl
aaa
addr16
add
inc
push
mov
insl
push
fisttpl
xlat
adc
push
lret
imul
add
leave
cmp
out
in
push
iret
pop
fimull
sbb
sbb
xchg
xchg
rorl
adc
pop
aaa
mov
pop
test
mov
or
or
test
jno
in
fidivrl
or
pop
pop
scas
dec
mov
and
xchg
imul
dec
pop
stc
ret
pop
xchg
pop
inc
fs
sub
push
cwtl
faddl
sbb
pop
arpl
loop
mov
jp
or
movsb
jo
cmpsl
push
jp
mov
into
lock
pop
ljmp
cmp
or
icebp
shlb
xor
popa
mov
iret
xor
aas
fimuls
test
sub
movsl
lods
add
xor
push
lcall
xor
movsl
inc
lret
pop
cmpsl
leave
cmpsl
xchg
aas
dec
sub
aaa
mov
mov
xor
add
nop
sbb
jno
pop
jle
fldenv
lods
scas
addr16
aad
inc
xlat
adc
popf
out
nop
pushf
jl
mov
add
pop
es
stos
inc
stos
sbb
sub
jno
xor
or
test
mov
stc
call
inc
int3
and
cwtl
stos
adc
and
sahf
sub
mov
rclb
sub
sub
xchg
shrl
lahf
divb
pop
bound
and
in
stos
mov
std
sbb
insl
es
push
xchg
gs
fiaddl
adc
shr
mov
jo
or
lret
inc
std
xor
sub
je
stc
out
movl
dec
pop
mov
push
mov
ds
mov
in
dec
psubw
xchg
pop
lds
push
mov
shr
loope
lock
lods
out
scas
mov
shll
aad
xchg
push
mov
lahf
sbb
sub
notl
xchg
push
sub
dec
enter
pop
out
les
push
xchg
pusha
and
xchg
imul
enter
ljmp
pop
daa
out
mov
rcrl
push
xchg
jecxz
mov
xor
jecxz
cld
mov
cmp
scas
insl
stc
pushf
push
js
xchg
dec
das
stc
xchg
hlt
andb
pop
imul
dec
sbb
dec
mov
ds
mov
sbb
add
rclb
in
mull
mov
add
inc
sbb
mov
push
mov
inc
aam
repz
sub
mov
pop
dec
imul
pop
lods
ja
push
adc
xchg
xchg
out
or
ja
out
test
mov
outsb
xchg
mov
cmp
sbb
lret
dec
lahf
fbstp
pop
repz
pop
mov
cmp
test
aaa
add
dec
or
jmp
jge
mov
stc
jnp
insb
fsubrp
add
movsb
xor
lock
les
fnstsw
and
js
mov
adc
xchg
fwait
dec
pop
mov
sub
loope
sub
sbb
jg
push
cli
mov
xchg
cmpl
ret
je
test
xchg
push
adc
fstcw
push
in
xlat
inc
sbb
dec
jo
ljmp
in
aaa
out
out
jecxz
xorl
push
lret
sub
loop
int3
push
arpl
xchg
xchg
mov
fcmovb
fwait
inc
mov
in
cmp
jb
mov
cmp
ficompl
adc
int
mov
clc
pop
mov
add
cmp
fs
scas
push
imul
push
arpl
sub
mov
jg
sbb
sbb
test
and
push
mov
add
mov
adc
or
addr16
inc
or
mov
mov
ljmp
xchg
imul
inc
test
fidivrs
aam
xchg
arpl
cmp
mov
jle
fwait
aam
insb
push
mov
ret
sub
mov
xor
fldenv
sti
scas
jmp
ret
in
scas
jno
shl
hlt
pop
enter
in
push
mov
add
nop
and
imul
dec
adc
sar
inc
dec
sub
or
scas
mov
sub
dec
lret
cmp
inc
insl
iret
pop
mov
cmp
cltd
sbb
mov
push
xor
sbb
jbe
jb
jle
loop
xor
ljmp
mov
aad
push
sbb
ss
out
adc
pop
data16
mov
mov
and
xor
outsb
mov
fnstsw
mov
leave
aaa
ss
mov
test
fsubs
outsl
fldcw
and
dec
mov
xor
mov
push
adc
icebp
adc
idivl
sbb
popa
xchg
enter
jo
mov
and
cmp
out
add
loop
pop
icebp
out
fcomps
loope
sahf
cltd
fnsave
shll
push
in
push
push
dec
jne
push
jo
pop
jp
mov
pop
popa
ret
adc
pop
mov
xor
xor
mov
jae
rolb
rcl
jg
inc
gs
lds
add
lods
aad
mov
stos
xchg
fmuls
sbb
sub
mov
stc
out
insb
cltd
push
xor
lahf
imul
sbb
sbb
hlt
cltd
sub
or
or
arpl
cmp
aad
pop
jecxz
xchg
jp
notb
or
push
sbb
push
sti
dec
fisubrl
orb
xchg
sbb
sub
adc
arpl
push
jge
dec
cmp
xchg
mov
mov
shlb
testl
enter
push
in
das
and
in
out
jb
shll
lods
xchg
ds
movsl
dec
cmp
shr
xchg
push
les
push
xor
ret
mov
orl
idiv
xchg
mov
hlt
pop
push
pop
push
and
dec
nop
shll
jnp
dec
cmpsb
cltd
and
push
and
aam
fidivrs
jbe
inc
cmp
dec
mov
mov
jns
and
xchg
inc
in
adc
jo
sarl
sbb
push
dec
sub
mov
adc
cmp
push
jo
mov
push
add
jge
xchg
or
or
adc
out
fsts
mov
lock
mov
out
mov
mov
and
js
icebp
mov
dec
mov
dec
jmp
out
fwait
push
inc
lea
scas
pop
jecxz
ret
and
nop
and
int
sbb
pop
repnz
lret
mov
sub
leave
and
mov
or
bound
inc
dec
fmulp
shr
push
aad
add
adc
adc
and
inc
or
nop
fwait
push
pop
mov
xlat
ja
outsb
lahf
add
jae
loope
xlat
jecxz
jl
inc
cmp
jp
pushf
push
repnz
mov
arpl
mov
jo
pusha
adc
xchg
repz
bound
sub
add
jp
imul
pop
out
cli
mov
jmp
xorl
fstpt
sub
mov
lret
jnp
arpl
push
mov
push
pop
xor
iret
insb
add
nop
add
jo
or
dec
xchg
and
xchg
dec
and
jo
sahf
out
pop
sub
lods
push
xlat
cmp
adc
in
aad
lock
xchg
adc
popa
ja
xchg
xchg
jl
les
mov
popf
inc
sbbl
testl
xchg
pop
mov
sub
orl
cmp
iret
inc
orl
sub
ja
jno
adc
dec
ss
lock
inc
xchg
rcl
mov
mov
fwait
dec
jp
push
cmp
fs
div
test
inc
mov
in
std
int3
pop
inc
fs
cmpsl
jbe
xchg
in
push
add
lcall
lods
insb
daa
aad
add
ds
sbb
fisttpl
sbb
sub
jl
or
xor
testl
inc
nop
add
mov
and
adc
push
stos
lds
imul
xor
dec
sbb
pop
pop
test
sbb
xchg
loop
inc
cmp
cli
dec
push
mov
in
dec
dec
mov
mov
push
dec
cld
repnz
mov
lods
sti
jle
sarb
cmp
cmc
xchg
fwait
xlat
loope
and
stos
xor
bound
jne
lahf
in
xor
aas
outsl
cmpsb
xchg
mov
xchg
int
adc
mov
outsl
out
push
sti
cmp
ja
sti
mov
dec
xor
js
dec
xchg
pusha
inc
push
movsl
or
jnp
ficompl
bound
fcoml
arpl
xchg
ds
addr16
push
push
ficoms
add
mov
test
push
add
shll
push
std
cs
ss
pop
mov
sbb
mov
rcll
flds
sbb
je,pt
mov
cmpsl
and
int
xchg
cs
scas
ss
insl
stos
mov
pop
mov
push
adc
sub
adc
nop
addr16
push
xchg
mov
mov
aam
mov
idivb
xor
inc
cmp
adc
sbb
push
fwait
decb
icebp
or
pop
fistl
bound
orl
mov
lret
pop
loope
arpl
sahf
mov
inc
xor
cmp
in
in
push
jo
andb
pusha
int
jmp
adc
sub
dec
add
outsb
popa
sahf
out
mov
lret
adc
push
dec
hlt
stos
or
mov
xchg
enter
out
mov
xor
and
cmpsb
arpl
push
imul
or
sub
mov
idivl
iret
popf
lcall
adc
fsubl
leave
add
cld
rorl
dec
dec
cmp
insl
gs
lock
xor
mov
ret
or
xchg
jo
dec
andl
push
pushf
dec
pop
jecxz
push
cmp
or
cmpsl
or
dec
ret
xchg
imul
sub
mov
inc
insl
jne
jge
xor
sti
cmc
mov
add
dec
out
scas
lret
cli
pushf
leave
mov
dec
cmc
adc
ljmp
loope
sub
jge
mov
test
scas
sahf
xor
test
push
sub
xchg
mov
popa
shll
pop
mov
das
mov
mov
jmp
mov
loopne
and
xchg
pop
adc
in
sahf
adc
shlb
and
sub
shrb
mov
xchg
rcrl
inc
sti
jnp
jl
push
cs
xchg
dec
das
arpl
out
enter
shrl
jnp
jno
xor
push
bound
stc
cli
push
adc
in
movsb
movb
xorl
push
add
push
xchg
push
jno
inc
sub
xor
outsl
and
cltd
sbb
dec
mov
xchg
cltd
in
negb
mov
inc
cs
mov
lret
lds
cmp
dec
jmp
testb
or
loopne
sti
push
adc
stos
or
mov
or
lret
sub
lods
fsts
insb
sub
arpl
jp
jle
dec
movl
fwait
cmp
push
pop
insb
cmp
mov
cmc
sarl
jnp
daa
ret
pop
adc
aaa
cmpsl
in
add
and
cmp
jmp
cmpsb
xchg
sub
cmpsb
pop
aam
ljmp
xor
test
cltd
test
or
adc
cmp
sub
xor
jle
ret
push
inc
rcrb
mov
xchg
sbb
mov
mov
push
pop
mov
aad
mov
in
sub
into
sub
mov
outsl
jp
push
and
mov
cli
sahf
test
mov
mov
ljmp
leave
addr16
xor
repnz
icebp
outsb
pop
out
push
jno
pop
andb
add
gs
push
leave
or
mov
sbb
adc
and
je
jo
xor
adc
xor
lret
or
negb
mov
fwait
inc
mov
bound
mov
jbe
jo
lock
pushf
inc
jno
push
pop
adc
nop
nop
add
mov
jns
sahf
mov
je
movsl
and
sub
les
pop
fnstsw
int3
into
jo
push
call
pop
pop
bound
or
enter
inc
fistpll
and
pop
fmul
rclb
iret
scas
imul
add
out
popf
cli
ja
aaa
push
and
ficoml
xchg
inc
mov
and
rcl
insl
and
imul
dec
add
cmp
outsl
sbb
xor
loope
or
lea
lret
into
adc
lahf
stc
divl
shll
jmp
xchg
push
mov
xchg
cwtl
jo
hlt
fs
jecxz
and
inc
loop
dec
cmpsb
xchg
dec
adc
mov
lret
xor
push
arpl
sti
lds
faddl
movsb
stos
dec
sbb
mov
fadd
jne
mov
cmp
cli
sti
and
mov
ficoms
movsl
pop
lds
xor
push
xchg
pop
dec
in
xchg
push
lods
jg
xchg
push
mov
imul
pop
jbe
inc
adc
xchg
roll
outsb
xchg
mov
pop
cld
cmpsb
pop
into
mov
jae
xchg
mov
addr16
mov
loopne
into
cs
inc
addr16
popf
xchg
repnz
arpl
xlat
icebp
aam
imul
lret
lea
insb
sbb
fs
shll
scas
mov
loope
push
xlat
into
mov
xchg
popa
imul
push
int
xorl
mov
aas
push
mov
add
das
sub
pop
dec
mov
and
jb
xor
adc
push
mov
and
and
test
leave
sar
or
jg
and
rclb
jnp
jo
in
stos
andl
pop
fstp
sbb
lea
and
movsl
add
test
push
hlt
popa
iret
or
sub
jecxz
std
push
movsl
ret
push
xchg
stos
pop
push
sub
je
sahf
xor
jmp
out
xchg
out
or
imul
scas
or
pop
je
aad
ss
imul
sbb
xbegin
ja
les
nop
adc
cmp
pushf
addb
outsb
push
push
sbb
push
cwtl
xchg
xchg
add
mov
jne
sub
xchg
addl
loop
push
dec
cld
dec
cwtl
dec
lea
mov
cmp
sub
and
adc
adc
adc
dec
loope
aad
ret
incl
inc
pop
addr16
mov
jno
rorb
movl
sbb
inc
out
imul
insl
jmp
mov
xchg
sarb
rorl
imul
pop
dec
int
sub
mov
inc
out
sub
adc
repnz
xchg
mov
fiadds
loop
xchg
fists
inc
add
or
mov
jg
mov
movsb
sahf
push
das
dec
rcll
icebp
fsubrs
push
movsl
or
mov
sbb
jbe
cmp
loope
cmp
lcall
jbe
jno
jb
mov
mov
or
dec
xchg
jge
hlt
dec
adc
add
loop
and
xor
and
out
ja
out
lahf
repnz
cmpsb
jl
xchg
pop
das
test
push
mov
xchg
in
inc
mov
dec
mov
sbb
data16
enter
in
jno
push
xor
nop
test
fwait
mov
inc
outsl
call
jecxz
add
nop
push
mov
ja
pop
out
sti
sahf
jnp
jmp
sub
dec
into
jl
popa
ficompl
jge
in
cltd
cltd
xchg
dec
call
cwtl
cmc
loop
mov
xchg
mov
or
dec
cmpsl
sub
sahf
loope
cmpsl
negl
jecxz
jmp
mov
sub
jp
jge
je
pop
xchg
loope
xchg
fsts
movaps
push
add
mov
xchg
jp
popf
popf
sub
dec
test
inc
loop
nop
sub
inc
cs
cmp
dec
mov
adc
pop
add
in
or
ret
sbb
push
sbb
popa
cmp
cmp
fs
push
pop
out
and
stos
out
nop
pop
cli
adc
outsb
clc
jbe
test
call
jno
add
or
cmp
jno
lret
sbb
mov
insl
loope
das
cmp
loop
aaa
ja
or
stc
mov
lea
enter
testb
or
lea
mov
sahf
sahf
fidivs
das
les
inc
jns
jnp
movsl
shlb
jb
add
sub
inc
lcall
rcrb
or
jle
mov
mov
mov
imul
dec
dec
sbb
jmp
jmp
push
pop
mov
or
sbb
repnz
insl
and
movsl
or
insb
cmp
ret
ja
mov
enter
jns
jnp
cs
scas
sbb
sbb
lods
mov
dec
jp
lods
jl
jo
orb
inc
mov
sahf
int
icebp
lahf
sbbb
fnstenv
iret
in
cltd
sub
sub
xchg
adc
mov
add
xor
jnp
mov
or
lret
pushf
imul
fs
lds
add
into
ret
mov
pushf
push
lea
xor
xchg
and
jb
adc
negl
scas
lods
add
fistps
jae
fmulp
in
insl
xor
add
xor
fiaddl
xchg
aas
cmp
jg
push
scas
cltd
loope
repnz
es
addl
shrb
inc
xchg
xchg
daa
adc
cli
movsb
mov
in
push
jl
xchg
push
push
cmp
aas
sub
movsb
pop
cmp
mov
dec
iret
mov
cmp
xor
mov
mov
sti
adc
xchg
in
loop
outsb
dec
fdivr
lea
popf
stc
or
out
pop
fs
push
xchg
pushf
pop
dec
sbb
jae
xchg
lods
xchg
test
mov
jne
sbb
xchg
hlt
shr
shlb
sbbb
and
ljmp
lock
cmp
stos
sar
in
push
push
sahf
push
imull
mov
mov
mov
in
adc
pop
mov
shr
and
dec
mov
test
inc
push
jae
cmpsl
xchg
test
mov
loop
mov
pop
loop
fldenv
push
jno
push
int3
insb
out
sahf
idivl
rcrb
cmp
cwtl
pushf
and
clc
push
arpl
jp
jle
xor
cmp
orl
adc
xchg
pusha
inc
mov
xchg
push
cltd
add
jb
js
mov
and
nop
insl
js
cmpsb
jp
or
es
jmp
adc
sbbb
mov
scas
je
mov
stos
shrl
push
mov
mov
pusha
adc
inc
or
dec
enter
dec
push
rcll
mov
dec
fstpl
cmp
or
and
insl
and
xchg
push
mov
stos
adc
cs
pop
insb
andl
inc
sbb
dec
pop
mov
pushf
test
pop
cld
adc
sti
sti
and
data16
adcl
pop
lret
sub
sub
shrb
arpl
sbb
das
fcomps
cmpsb
mov
dec
test
sbb
movsl
nop
ss
inc
fmull
popa
ss
and
rcrb
lock
jg
add
pop
pop
and
sbb
pop
push
ret
neg
mov
or
mov
push
jmp
sbb
ret
dec
push
mov
mov
jecxz
int3
jnp
aam
xor
iret
repz
jns
pause
push
add
ds
sbb
mov
enter
add
xor
negl
pop
div
add
subl
adc
mov
pop
mov
and
mov
jmp
push
jo
pop
xchg
in
xor
jne
test
lret
mov
inc
sbb
mov
xchg
push
mov
jne
or
pushl
inc
insl
push
pop
add
mov
mov
std
mov
mov
sbb
sub
pop
xor
jecxz
and
jl
mov
daa
std
data16
pop
stos
iret
mov
mov
popa
or
mov
xor
dec
or
mov
ret
pop
and
push
inc
dec
subl
push
mov
jg
out
hlt
inc
clc
lahf
adc
pushf
bound
and
out
std
adc
popf
dec
gs
push
mov
pop
jae
ljmp
xchg
lret
mov
mov
cmp
fsubs
leave
loop
mov
sbb
out
aad
xchg
insb
add
lahf
stos
ja
lea
xor
stos
push
jb
adc
cli
and
clc
xlat
sbb
in
push
arpl
es
lock
dec
call
jmp
cmp
and
ds
pop
or
xchg
inc
and
loop
enter
aas
aad
lea
xchg
decl
in
cmp
mov
sti
stos
lcall
jnp
std
sbb
out
push
cmp
pusha
pop
jle
cmpsl
aad
stos
sub
ficoml
imul
jae
dec
loopne
mov
call
out
mov
in
clc
xor
mov
xchg
adc
cmovge
ror
dec
inc
lds
cmp
sbb
mov
into
mov
inc
in
lds
sbb
adcl
mov
cmc
xor
fabs
sti
sahf
push
jle
stos
jbe
push
cli
ja
lock
sub
es
pop
jg
pop
sub
adc
sub
fsubs
insl
into
in
nop
sahf
mul
push
cmp
mov
lret
lret
idiv
sbb
into
add
loop
sub
jne
jae
pop
xchg
scas
test
inc
jno
xchg
inc
push
outsb
jno
cs
mov
mov
clc
xor
adc
push
jnp
sbb
addl
fwait
enter
aas
mov
adc
cmp
sti
add
xchg
pop
ret
pop
inc
push
out
cmpsl
in
pop
adc
jecxz
lret
inc
lods
push
sbb
and
mov
inc
ss
push
dec
insb
and
test
je
test
push
nop
xor
loopew
mov
mov
out
lds
lods
cmp
xor
call
lahf
push
dec
ja
inc
fsubrl
clc
in
movl
sbb
lock
xchg
mov
fsincos
add
and
js
xor
repnz
cmp
adc
test
icebp
sub
aam
adcb
loope
push
mov
addl
cmpsl
sarb
lds
jmp
shrb
aam
add
inc
sbb
add
rclb
push
test
fbld
test
pop
jle
clc
ljmp
sbb
mov
jo
push
lods
in
mov
cmp
sbb
mov
push
aaa
fld1
aam
xor
out
rorl
push
cmpsl
mov
pop
jmp
dec
and
mov
xor
inc
in
jo
push
mov
add
sbb
repnz
out
mov
xchg
adc
pop
jle
test
adc
test
mov
xor
test
xor
into
push
cmp
aas
outsl
sbb
mov
ficoms
push
adc
or
sub
call
xor
aaa
mov
ss
push
ljmp
test
addr16
clc
xchg
push
push
test
dec
arpl
outsl
push
cwtl
in
push
xchg
data16
cmp
stc
test
xchg
dec
or
aam
dec
mov
pop
sbb
sub
out
cmp
push
mov
pop
iret
dec
mov
and
push
mov
xchg
je
sbb
sub
ss
lcall
popf
daa
mov
cmpsb
dec
sub
mov
cmp
pop
cmpsl
popf
xchg
test
es
add
pop
leave
clc
mov
inc
ret
mov
sbb
cld
mov
mov
dec
cmp
mov
jno
fsubrl
addr16
xchg
xor
rolb
sbb
mov
stc
xlat
pop
jno
outsl
push
cwtl
scas
sbb
pop
lcall
repz
dec
dec
test
cmp
push
lea
cli
lret
jp
shrl
lods
dec
jnp
sbb
stos
fnstenv
aad
fimull
sub
jge
int
mov
mov
inc
lods
pop
pushf
std
add
push
pop
cs
push
call
dec
sbb
mov
add
inc
inc
into
pop
push
in
movsb
add
loopne
and
cmpsl
push
imul
rorb
jnp
xchg
mov
push
out
xchg
pusha
cs
ret
jbe
cmpb
adc
bnd
cs
push
sti
or
push
xchg
push
ret
inc
cmp
hlt
jne
adc
and
clc
inc
pop
lahf
cmp
xor
aad
fnsave
pop
inc
cs
lock
cmp
cld
and
adc
int
mov
les
pop
flds
xlat
mov
cwtl
xchg
sti
mov
pop
lret
xor
into
cmp
xchg
push
pop
loop
test
pop
jno
loope
xchg
into
push
pop
or
mov
fiadds
mov
fiadds
loope
pop
jl
movsl
add
subl
mov
ss
jbe
push
cmp
mov
push
sahf
fadds
dec
sbb
cwtl
push
cltd
xchg
outsl
mov
jb
mov
push
xchg
xor
lods
lahf
std
ret
das
call
orb
std
icebp
or
cwtl
aas
fldcw
cmpsl
data16
lea
and
loope
cmpxchg
neg
addl
or
rcl
pusha
jl
mov
stos
ss
push
jmp
push
iret
dec
daa
cmc
pop
mov
je
fwait
pusha
adc
jmp
lahf
jae
sub
out
test
dec
mov
sbb
or
inc
push
je
cld
andl
in
xor
test
mov
dec
ds
sbb
insb
xchg
push
jns
or
jmp
pop
sub
leave
les
fildll
or
outsl
fbstp
das
fcmovnb
mulb
ds
bound
add
popf
add
and
faddl
cmpsl
xchg
cmp
ja
pop
jge
fsubl
ret
lret
push
and
mov
outsb
popf
fdivrs
test
icebp
mov
mov
sub
jmp
jg
adc
inc
inc
pop
cmp
cmpsb
orb
popf
dec
mov
pop
icebp
jmp
cltd
cmp
sbb
into
lcall
jns
clc
lahf
inc
push
loope
std
sbbb
std
push
stos
jp
les
xor
adc
mov
cmp
call
outsb
lahf
out
mov
jbe
addr16
push
sub
push
imul
inc
out
lods
iret
xor
in
and
out
testl
fldz
dec
dec
aas
push
mov
sub
test
mov
imul
fidivs
pop
sbb
mov
adc
insb
rol
scas
mov
rol
cmp
je
les
int
adc
data16
jbe
outsl
mov
cli
fwait
dec
ss
lahf
pop
push
add
stos
mov
aaa
cmpsl
push
stc
mov
jno
negl
mov
aam
aam
dec
pop
sbb
cmp
pushf
mov
jle
ja
mov
adc
adc
les
add
lock
insb
decl
leave
pop
movsbl
insb
xchg
xor
ljmp
adc
out
jle
and
push
int3
test
idivl
mov
jae
pop
js
ret
adc
cmp
clc
rorb
cwtl
cmp
pop
clc
mov
xchg
sub
aam
add
mov
dec
pop
adc
or
mov
cmp
jecxz
mov
cmpsb
adc
outsb
jp
add
es
repz
insb
sub
pop
cmp
std
jmp
outsb
sub
into
and
pop
or
cs
fdivl
adc
fwait
add
addr16
shll
xlat
imul
dec
sahf
sbb
cmp
dec
mov
dec
adc
cmp
push
pop
test
das
mov
lcall
jae
pop
jmp
pop
inc
cltd
xchg
push
cmp
neg
rclb
ljmp
data16
and
add
ficoms
adc
jb
outsb
push
enter
pop
lock
das
dec
insl
test
lahf
repz
xlat
sar
das
repnz
insl
int
push
xchg
or
lsl
mov
pop
leave
xor
inc
jns
push
or
sub
or
mov
cmp
mov
mov
inc
xchg
fwait
or
testb
jno
jb
sbb
cli
movsb
push
xchg
push
sbbb
xchg
mov
mov
mov
add
clc
ja
fs
cmp
dec
scas
sahf
mov
mov
out
add
push
hlt
aaa
lcall
jl
out
arpl
add
xor
rcll
xchg
xor
repnz
sbb
fisttpl
lods
into
mov
xlat
cltd
add
sub
int
lea
dec
data16
sarl
call
outsl
ljmp
notb
and
pop
and
fcoml
jbe
pusha
push
push
adc
inc
aad
xor
loope
pop
fwait
inc
xchg
xchg
popa
push
mov
push
sbb
nop
movsb
lock
cs
pop
imul
add
imul
sub
repz
call
fwait
sub
enter
mov
lret
xchg
sub
jo
jb
ljmp
scas
out
lcall
pop
pop
mov
mov
pushf
jl
dec
ficoms
cmc
push
sbb
pop
pop
sti
outsb
repnz
arpl
int
and
lret
out
pop
enter
pop
push
clc
aaa
es
js
pop
mov
dec
pop
mov
push
dec
adc
lret
movsl
lcall
int
add
pop
inc
jne
sub
mov
jg
push
fwait
jecxz
scas
push
imul
out
ds
out
test
xchg
pop
into
sbb
push
dec
stos
or
scas
xor
dec
pushf
or
mov
mov
mov
loopne
aaa
mov
scas
dec
push
dec
xchg
lock
inc
cmp
test
sub
add
dec
movsb
in
cmpsl
inc
outsl
pop
fidivrl
push
xchg
lds
or
xor
jmp
ja
push
xchg
pusha
push
aaa
stc
stos
pop
dec
out
fs
mov
ret
inc
stos
jmp
or
scas
ret
in
jp
mov
mov
sub
mov
movsb
mov
push
jl
test
roll
xchg
cli
bound
in
xchg
mov
pop
fistpl
out
xchg
insb
inc
bound
pop
pop
xchg
shr
fwait
cwtl
sti
push
lock
xor
mov
cltd
xchg
hlt
jp
daa
push
imul
and
mov
pop
dec
popa
jno
push
push
out
jns
bound
dec
inc
cmpb
adc
add
iret
into
ret
test
mov
add
xchg
stc
inc
pop
aam
fildll
push
inc
inc
xchg
push
divb
ja
test
jno
int3
cmpsl
push
lods
and
mov
into
stos
or
testl
loop
pop
cmp
mull
sub
mov
push
rcrl
push
rcl
orl
cmp
pop
fildll
cmp
js
push
mov
test
ret
cmp
aam
mov
shlb
pop
lahf
inc
push
das
mov
pop
sbb
test
repz
decl
mov
inc
ds
and
add
inc
jb
movsl
mov
aas
loop
pop
jb
jmp
neg
inc
inc
cmp
jp
aad
mov
aam
rcl
xor
jle
xlat
add
xchg
fsubrp
adc
insb
mov
mov
test
aas
icebp
test
and
shll
pop
jae
jmp
push
test
pop
pop
pop
int3
mov
ficoms
cmp
dec
imulb
cli
or
nop
lret
dec
bound
ss
sti
xchg
sub
jg
lds
cmp
fcmovne
xchg
incl
in
add
out
out
int3
enter
xchg
ja
in
jmp
xorl
inc
std
adc
loopne
or
mov
in
aaa
hlt
and
sbb
mov
mov
fcmove
imul
sub
jbe
pushf
sbb
push
xor
mov
frstor
pop
xor
icebp
orb
rclb
lds
rclb
pop
xor
fcmovu
and
test
or
lret
jb
push
and
cmpsl
xchg
xlat
ss
shlb
rolb
mov
shll
lret
or
xchg
sbb
mull
pop
fimull
mov
sbb
cmp
mov
mov
iret
jno
rcll
mov
popa
or
cmpsb
test
movsb
jmp
jp
jmp
add
cmp
dec
mov
jno
cmc
adc
dec
mov
test
add
or
xlat
loop
enter
test
cmp
add
or
push
mov
gs
sbb
mov
cli
in
or
pop
jl
rcrl
xlat
in
mov
pop
sub
mov
fmulp
out
push
stos
lret
repnz
aas
aam
cltd
add
jmp
aam
push
mov
inc
in
dec
mov
insl
in
lcall
pop
adc
add
hlt
ja
js
jl
add
hlt
cmp
gs
push
daa
out
dec
outsb
sbb
xor
inc
pop
shrl
sub
fmul
or
mov
mov
mov
jmp
mov
bound
mov
jo
mov
cmp
jl
dec
test
pop
outsl
out
dec
cmpsl
ja
ljmp
arpl
push
mov
inc
adc
popf
xor
push
out
mov
movsb
sub
xor
fidivs
loope
jne
pop
jo
movsb
and
push
mov
jns
pop
movsl
xchg
hlt
icebp
lea
test
pop
fimuls
mov
adc
fiadds
pop
cmc
js
cmp
stos
shlb
xor
jb
fimull
in
lret
add
pop
cmp
lods
xor
negl
int3
repnz
dec
mov
mov
imul
pop
js
fdiv
adc
mov
clc
in
cwtl
sbb
std
out
push
jb
adc
pop
cmp
sub
pop
repnz
les
in
lahf
in
mov
jb
data16
jo
dec
mov
lds
lret
push
stos
or
or
repnz
push
fsts
pop
lret
jo
shll
fldenv
arpl
inc
clc
mov
push
push
fiaddl
sub
and
pop
jg
test
dec
aad
jl
xor
cmpsb
or
aad
cmp
mov
dec
push
rorl
out
mov
cmpb
mov
js
mov
sub
rcrl
stos
loopne
test
xor
mov
sbb
cmc
ret
fstl
push
sbb
adc
or
xor
pop
cmp
xor
arpl
sbb
ficoml
or
mov
pushf
add
mov
xor
adc
mov
xor
mov
cmpsb
cld
sbbb
push
push
xchg
push
xlat
daa
sahf
sti
ds
adc
inc
push
stos
in
push
clc
fsts
cmpsl
dec
adc
xchg
adc
fisttps
outsb
gs
mov
mov
outsb
mov
mov
and
push
mov
lahf
xor
xor
jp
in
popf
jle
mov
je
mov
and
cmp
adc
dec
stos
rcll
pop
pushf
pop
rolb
inc
lds
mov
pop
xchg
sub
or
or
dec
xchg
je
fwait
sbb
test
mov
pop
in
sub
dec
loopne
insl
aaa
sbb
inc
jne
mov
ss
lcall
popa
mov
jl
out
orl
ss
mov
ret
jo
cli
sbb
outsl
cmp
push
std
mov
add
in
bound
push
jo
pop
inc
neg
dec
fnsave
cld
jle
stos
mov
cmp
push
fs
inc
call
sahf
pop
adc
fnstsw
mov
dec
sub
push
gs
shrl
xchg
push
inc
loopne
stos
adcl
inc
lea
push
insb
sub
inc
lods
in
imull
jmp
call
sbb
in
repnz
and
cmpsl
cmpb
aas
shll
push
or
or
fstpt
xchg
in
fidivs
fdivl
cltd
lea
pushf
or
fdiv
insl
aas
js
xchg
in
iret
xor
mov
mov
xor
lret
shll
lcall
lret
sbb
push
lods
ljmp
sub
xchg
sub
repnz
xchg
gs
cmp
mov
push
hlt
sbb
pop
cmp
mov
jg
dec
dec
stc
cmpsb
fsubs
stos
in
lret
outsl
out
cmpsl
imul
sysret
leave
pop
jl
cmpsl
daa
loopne
inc
arpl
test
sub
and
int3
pop
pushf
in
nop
test
cmp
adc
andl
imul
sub
mov
jl
popf
xor
loop
lret
dec
cwtl
mov
insb
dec
out
pushf
pusha
inc
xor
cmp
xor
addr16
loope
lcall
add
imul
repz
mov
ss
sarb
mov
in
scas
stc
and
daa
std
clc
pop
sarb
xchg
mov
jns
jmp
mov
hlt
sub
xchg
ret
enter
push
push
xor
pop
xchg
dec
add
leave
mov
in
push
dec
jbe
adc
lea
outsl
mov
xchg
mov
mov
outsb
out
pushf
in
mov
stos
sbb
into
test
push
loop
pop
jg
mov
int3
push
xchg
xchg
pushf
or
xor
movsl
fistpll
push
sbb
popf
out
add
nop
cmpsl
xorb
into
cmpsb
imul
es
iret
inc
jl
mov
mov
push
clc
lahf
inc
mov
fnsave
add
sbb
subl
dec
iret
pop
sub
shlb
pop
add
add
clc
mov
and
sub
sub
push
xchg
mov
shll
mov
mov
mov
mov
loope
fisubs
push
adc
arpl
xor
lret
addr16
fisttps
into
xor
stos
xchg
jno
lea
inc
jge
ret
mov
scas
pop
xchg
cs
mov
mov
imul
adc
inc
insl
fidivs
aas
sub
pop
jo
test
ret
add
cltd
cwtl
adc
mov
or
rclb
adc
dec
push
adc
es
mov
je
cli
sbb
popa
jl
mov
movsb
ds
add
outsl
mov
cmp
push
inc
das
jns
sub
mov
pop
add
adc
in
outsl
and
hlt
neg
cmp
lods
stc
test
pop
sub
jo
jp
cmc
cmpsb
add
pop
loopne
xlat
xchg
jo
outsb
test
lcall
xor
jns
pop
or
pushf
dec
inc
xor
or
push
fnsave
pop
inc
sbb
mov
push
pop
loope
mov
cld
mov
arpl
dec
push
fdiv
hlt
ja
push
pop
std
xchg
xchg
loop
and
in
roll
and
ds
or
addb
jg
and
or
inc
mov
rcll
mov
mov
push
mov
cmpsb
aas
mov
cld
sub
lods
sbb
insl
into
gs
push
in
repz
add
aam
xlat
xchg
or
fnstcw
mov
cs
fidivl
cltd
jae
imul
jmp
insb
lret
pop
cmpsl
xor
icebp
add
loope
iret
in
or
imul
cmp
sub
inc
arpl
push
lea
int
mov
into
mov
jne
mov
add
jae
leave
dec
test
jnp
stos
cld
lea
mov
push
xchg
jns
inc
inc
btc
sti
inc
lret
jae
sbb
or
add
pop
nop
rorl
int3
push
incl
fdivs
call
mov
test
lcall
mov
and
xor
mov
jo
mov
pop
fwait
jg
sbb
outsb
int3
cmp
pop
setle
jns
mov
jo
mov
dec
or
mov
jae
and
arpl
adc
sbb
pushf
and
mov
nop
xor
jecxz
xor
pop
push
and
inc
xor
pop
sbb
js
push
adc
push
addr16
fwait
cli
mov
stos
pop
sub
lea
fs
and
xchg
push
shll
and
pop
xor
cmc
dec
pop
inc
dec
je
fwait
lods
mov
call
xchg
mov
or
adc
stc
mov
fisubs
int3
add
out
les
mov
cmp
int
mov
in
xor
and
cmp
aas
test
insl
lods
je
ljmp
test
pusha
xchg
push
sub
insl
hlt
dec
adc
stos
lret
fwait
in
sub
jno
mov
jbe
test
and
mov
jle
or
andb
mov
xor
test
sbb
xor
in
inc
fstpt
orl
push
andb
imul
cmc
aaa
push
xor
mov
add
fidivl
mov
push
xchg
ret
mov
fisttpll
jae
xchg
loope
pushf
jns
stos
cmpsl
int3
pop
fwait
pop
loopne
mov
dec
loop
cmp
mull
je
and
ret
stos
mov
jno
sbb
push
xor
iret
mov
pop
sarb
pushf
mov
add
bound
add
add
outsl
int
dec
popf
out
mov
adc
cmpsl
and
xor
loopne
mov
ret
push
dec
cltd
out
shll
and
jmp
push
mov
lods
jl
call
mov
into
sub
or
nop
ret
cld
mov
push
fs
pop
int
aad
xor
pop
mov
push
add
aam
mov
imull
dec
test
adc
cmp
pop
inc
mov
xor
or
or
sbb
dec
enter
jp
imul
sbb
push
cld
aaa
fwait
call
inc
xchg
jge
jl
sub
lahf
jnp
addr16
aam
rclb
push
mov
inc
or
fs
and
cmpsb
sbb
leave
cmp
inc
adc
lcall
sbb
mov
add
loope
xchg
imul
sbb
out
addr16
pop
xor
mov
test
and
test
into
or
mov
dec
lods
in
lock
pushf
adc
in
jle
and
jbe
push
nop
test
mov
pusha
cwtl
fcomp
mov
push
push
dec
enter
dec
xorl
leave
xorl
out
xchg
ss
gs
jge
mov
push
js
jge
xlat
add
out
pop
mov
mov
sbb
jl
leave
int
xor
fdivp
or
notl
sahf
push
and
jle
and
cmp
aas
in
mov
movsb
and
enter
jge
or
jmp
pop
sub
xor
loop
dec
jns
sub
xchg
loopne
cmp
push
ss
inc
or
fisttps
fldt
repz
subb
mov
jae
or
pop
fabs
ret
push
jle
out
add
inc
mov
ja
sub
jns
sub
mov
xor
shrb
mov
bnd
xchg
test
mov
sbb
imul
jb
test
dec
lret
loope
popa
adc
jg
fwait
jbe
jb
or
ret
add
jge
repz
or
out
jmp
les
cmc
mov
movsb
int3
test
xchg
xor
test
cli
cs
cltd
into
movsl
ds
pop
mov
ljmp
mov
lods
jl
scas
les
sub
leave
insl
pop
push
push
xchg
xchg
push
cli
inc
ss
mov
jae
add
xchg
xor
mov
mov
add
pop
adc
or
mov
adc
repnz
insb
icebp
out
je
ss
cmpsb
inc
cmpsb
std
mov
fdivl
add
pop
lds
in
aaa
sti
jecxz
movsl
in
add
les
push
leave
mov
out
cmpsb
ja
sub
inc
stos
rcll
adc
mov
jg
fs
or
addr16
xchg
and
inc
jp
push
sbb
and
dec
adc
dec
inc
call
into
insl
sbb
jge
lret
adc
jae
orl
jg
add
arpl
push
push
inc
xchg
test
fistpll
inc
mov
dec
jno
dec
ljmp
or
sub
nop
cmp
and
mov
push
jmp
cmp
or
xor
leave
sahf
mov
jmp
iret
dec
xor
jg
cmp
fwait
arpl
cmc
cmpsb
addr16
xchg
imul
sbb
mov
push
ret
lret
and
movsb
sahf
dec
das
ss
mov
dec
hlt
js
loopne
dec
popa
adc
jbe
or
filds
outsl
push
aam
repz
sbb
mov
fdivr
mov
push
out
hlt
and
xor
mov
mov
pop
mov
aas
mov
inc
xchg
hlt
js
or
mov
cltd
push
sub
ret
jecxz
hlt
mov
inc
hlt
xchg
out
out
mov
mov
scas
mov
shlb
mov
ljmp
xor
lods
outsb
dec
pop
pop
ja
cld
xor
stos
or
sbb
pop
cmp
mov
addr16
inc
sbb
push
adc
and
cmp
cs
mov
pop
xor
inc
xchg
loop
push
pop
mov
and
imull
adcb
add
sbb
dec
aas
and
push
fistpl
add
fs
subl
xor
icebp
test
dec
add
scas
ss
xor
dec
or
dec
test
mov
sub
xchg
je
lods
add
inc
gs
lock
sti
jg
jbe
cmp
dec
in
fbstp
ss
push
test
loopne
sub
rorl
mov
xor
out
repnz
xchg
mov
mov
pop
rcrl
mov
xchg
aaa
adc
and
sbb
fs
nop
mov
push
scas
pop
cmpsb
inc
fmull
sbb
or
xor
aad
xor
fsubrs
push
arpl
xchg
cmpsb
icebp
mov
ljmp
iret
sub
dec
or
cmp
mov
movsl
pusha
sbb
jns
aad
fwait
data16
cmp
stos
mov
test
pusha
and
inc
sub
jo
fldt
jmp
jnp
aam
adc
imulb
repz
std
popf
adc
inc
and
outsl
dec
sbb
dec
fstps
addb
pop
dec
inc
bnd
je
pop
es
cli
adc
ja
inc
or
in
fwait
movsl
mov
pop
pop
inc
fcmovnbe
push
in
sub
mov
xor
sbb
xor
sbb
lret
pop
mov
outsl
ljmp
bound
mov
cmpsl
xor
jp
movsb
add
pop
mov
insl
pusha
dec
jne
xchg
inc
xor
data16
lea
daa
mov
pop
xchg
inc
pop
mul
rclb
imul
stc
xchg
fnstenv
jae
xchg
jl
push
imul
adc
addr16
push
and
xchg
outsl
dec
mov
and
lcall
inc
xor
scas
sbb
mov
cli
cmc
pop
insl
cltd
out
or
lahf
cmpsb
fildll
add
xchg
shr
xor
inc
or
rclb
inc
in
pop
jle
cld
imul
push
pop
iret
ljmp
xchg
ja
xchg
dec
lret
jb
es
or
shlb
push
in
movsb
fldl
sbb
dec
out
dec
jg
jns
cld
push
pop
and
test
pusha
jmp
in
jns
fstpt
out
sub
andb
icebp
stc
repz
ss
scas
lock
sahf
cmc
sub
into
test
insb
sbb
push
out
mov
in
out
addr16
bound
xchg
out
sbb
mov
cmp
xchg
mov
xor
lock
outsb
dec
and
push
movl
in
arpl
lcall
pop
push
popa
sti
imul
std
adc
and
test
arpl
sbb
xchg
push
aas
sahf
gs
inc
je
fcomps
fdivrs
stos
xor
push
cmc
cltd
dec
fisttpll
xor
mov
ss
andl
adc
pop
addr16
inc
or
cmp
scas
or
jp
aam
or
pop
xchg
outsb
adcl
pop
lea
lcall
xchg
clc
add
addr16
lret
pop
push
mov
add
test
mov
hlt
pop
insl
mov
popa
dec
out
add
mov
sub
jmp
xlat
push
adc
xor
cmp
push
xchg
push
dec
add
or
rolb
add
ret
mov
push
jl
mov
add
sbb
jo
ret
and
push
push
xchg
inc
jo
xorl
pop
setae
ret
ss
repnz
lret
and
mov
sub
pop
jp
mov
xchg
cmp
mov
imul
jmp
add
mov
pop
orl
gs
sahf
mov
cltd
test
int
sbb
pop
mov
or
lds
jbe
pop
out
sub
push
inc
push
dec
xchg
bound
scas
rol
hlt
ljmp
je
int
cmc
jnp
and
mov
xor
imul
cmp
mov
mov
jne
jecxz
xchg
stc
repnz
cmp
rcl
or
pop
and
inc
mov
je
mov
xor
xchg
dec
scas
loope
mov
adc
mov
xor
and
xchg
dec
inc
add
mov
out
or
pop
sub
and
mov
push
popf
jg
push
sbb
test
inc
xchg
iret
paddsw
aas
mov
loope
out
lock
aaa
push
call
jne
dec
fdivr
arpl
lock
mov
stos
aad
aad
push
popa
jecxz
out
fisubs
mov
dec
or
push
or
push
add
insl
insb
ds
add
dec
pop
imul
pop
pushl
xor
mov
inc
inc
mov
xchg
movsb
test
adc
out
mov
mov
jle
push
sbb
mov
or
and
mov
fbld
adc
gs
int
out
in
push
mov
notb
imul
cmp
imul
icebp
pop
movsl
call
mov
dec
movsb
xlat
add
sbb
mov
daa
sbb
and
push
inc
scas
movsl
or
subb
and
lret
mov
loopne
jne
jnp
cmpb
ljmp
or
aad
push
push
mov
mov
push
jo
mov
sbb
lods
pop
dec
mov
mov
imul
add
icebp
shll
stos
add
jle
cmp
sbb
lods
ja
pop
imull
ret
fnstenv
xchg
and
xor
dec
fidivrs
daa
push
scas
cmp
les
leave
sub
sbb
mov
gs
cmp
adc
std
insl
jno
js
or
or
jmp
mov
dec
inc
roll
push
mov
jbe
inc
mov
cmp
loopne
inc
jg
jbe
pop
xor
daa
inc
dec
outsl
xchg
inc
dec
lret
dec
outsb
mov
repnz
jnp
mov
sahf
pusha
sbb
adc
push
sbb
mov
adc
sub
inc
out
test
mov
or
jle
push
stc
test
pop
testl
lods
mov
dec
cmp
rcr
movl
hlt
insb
ret
push
fsubs
shlb
cmp
push
sbb
sub
insb
ret
mov
or
int
imul
mov
or
scas
xchg
sub
mov
push
jae
repnz
loop
lods
jns
inc
cmpsb
std
mov
sub
or
push
das
mov
xchg
dec
mov
mov
test
pop
adc
stc
icebp
stos
xchg
lods
pop
sub
iret
push
cmp
xchg
mov
pop
repnz
fmulp
int
add
ror
push
inc
cmc
loopne
or
cmpl
mov
push
dec
sbb
push
or
aaa
mov
fbstp
dec
mov
dec
jmp
push
xlat
sub
mov
add
or
mov
pop
adc
sub
les
mov
rcrb
ret
sub
out
ret
inc
out
ficoml
xlat
cld
adcl
adc
cmpsl
imul
icebp
dec
loop
std
test
in
int3
stos
xor
and
push
jnp
sti
mov
iret
cmpsl
jae
or
fs
outsb
cli
sbb
pop
fisttpl
mov
xor
lcall
mov
mov
push
je
mov
pop
xchg
sarl
lods
jo
dec
jl
push
ret
cmpsb
add
mov
sti
mov
xor
sbb
sbb
pop
and
scas
push
push
cmpsb
cmp
and
pop
imul
cmpsb
cmp
ljmp
cmp
mov
int3
jge
xor
enter
les
cs
xchg
insl
fisttpl
or
push
lahf
adc
pop
dec
loop
icebp
out
sbb
xlat
fs
movsb
lods
inc
shrb
mov
and
dec
loope
inc
add
and
push
les
cmp
cli
xlat
jno
sub
push
cmp
cmp
outsl
and
sti
mov
xorl
and
incl
mov
dec
scas
fsubrl
mov
and
aad
pop
insl
mov
cmpsl
lret
pop
and
cmp
push
xchg
dec
xlat
mov
jb
or
pop
push
adc
arpl
vmovntpd
cltd
jmp
push
fldcw
movl
out
inc
scas
shll
out
fs
movd
lret
pop
inc
sbb
jecxz
cld
scas
add
mov
mov
pop
aam
leave
mov
push
pushf
and
inc
mov
inc
movsb
out
ljmp
mov
sbb
js
add
xchg
adc
or
pop
jg
lret
mov
jecxz
sub
mov
mov
mov
add
leave
rolb
add
out
mov
mov
movsl
cmp
lock
jo
cmp
mov
outsl
orl
pop
sbb
fcoms
jge
sbb
aam
inc
sub
cmp
pusha
mov
je
icebp
inc
xchg
loopne
adc
and
adc
jp
aam
testl
daa
cmpsl
xchg
fildll
in
or
jo
adcl
mov
dec
inc
stc
mov
das
dec
pop
popf
in
shll
stos
and
call
movsl
das
mov
add
jle
js
jl
ret
xchg
outsb
dec
lds
pop
jnp
xchg
mov
cmc
mov
mov
mov
out
sbb
subl
xchg
push
mov
pushf
xor
and
repnz
fwait
insb
cmp
icebp
test
xchg
pop
xchg
ss
aad
push
loopne
insl
call
sti
fldl2t
add
adc
mov
push
movb
inc
sarb
jecxz
inc
cmpsl
inc
loopne
push
pop
add
xchg
loop
addr16
mov
inc
push
adc
adc
movb
or
test
sub
dec
inc
daa
lcall
xchg
inc
test
dec
addr16
es
mov
inc
mov
inc
jae
adc
bnd
add
cmc
adc
in
cmpb
addl
xchg
mov
ret
mov
das
pop
hlt
dec
in
loopne
add
cwtl
aas
pop
xchg
call
test
fcompl
adc
scas
adc
pop
por
add
add
sub
dec
cmp
push
mov
push
hlt
jg
cmp
sbb
xor
add
adc
stc
mov
and
fwait
dec
lret
fld1
sub
sbb
rclb
cmpsl
sbb
jge
and
push
frstor
dec
and
loopne
cmp
mov
in
loopne
es
sbb
pop
inc
or
mov
xchg
or
fadd
push
push
ds
push
inc
pop
mov
ljmp
add
aam
imul
cmp
outsb
mov
sbb
cmc
stc
add
lahf
jle
push
xchg
jae
insb
lock
shll
pusha
ret
mov
pop
or
dec
xlat
ret
mov
adc
lods
cmp
cwtl
mov
shrl
mov
gs
mov
adc
test
lcall
adc
inc
mov
insb
jns
lcall
mov
lea
cltd
aaa
add
or
out
sbbl
adc
inc
test
cmpsl
add
mov
clc
xor
jnp
lret
in
rorl
fnsave
pop
aad
sbb
inc
mov
push
int3
movsb
mov
cli
add
insb
nop
jecxz
sbb
mov
jg
inc
cmpb
sbb
jp
mov
xchg
dec
push
clc
add
jnp
addr16
lcall
imul
inc
adc
jae
push
and
xchg
mov
mov
pop
cmp
adc
sub
dec
xchg
les
push
and
repnz
jno
movsb
bound
fwait
xchg
push
add
jo
cmp
dec
jns
or
xor
push
icebp
add
aam
gs
sub
repnz
add
pop
aaa
test
push
std
int3
mov
jbe
xchg
lock
lds
xchg
lock
stos
clts
je
cmp
and
out
dec
loope
mov
ja
mov
int
or
aad
test
leave
sbb
sbb
pop
dec
adc
mov
jmp
add
js
sub
mov
ss
xor
add
adc
mov
pop
pop
jge
ret
xchg
leave
dec
inc
loop
xorb
add
or
add
jno
and
jbe
sbb
mov
iret
test
and
mov
jo
inc
cld
loop
testb
lods
add
inc
lea
xchg
fwait
shlb
out
insb
sub
mov
stc
lds
cld
add
inc
mov
and
jle
jnp
and
fisttps
test
mov
fs
sub
lret
sub
aas
add
arpl
and
insl
jb
movsb
lods
test
pop
pop
push
ja
aam
mov
pop
xchg
ret
jg
test
clc
sti
fcmovb
push
in
mov
test
cmp
test
mov
rorl
pop
inc
sbb
int3
and
adc
aas
pop
roll
jmp
jmp
xchg
shll
push
dec
push
adc
mov
es
xor
cmp
mov
push
shlw
lds
adc
mov
pop
xor
clc
push
pop
inc
call
xchg
xor
call
lock
xor
mov
push
jbe
or
xor
ss
aas
lret
xchg
dec
jns
jno
lods
pop
xchg
xchg
mov
xor
push
jge
cwtl
xor
mov
fsubr
lcall
xlat
push
mov
int3
jbe
dec
add
pop
enter
insb
je
jle
movsl
add
popa
mov
movsb
arpl
jno
push
mov
cmpsl
fildll
jno
fadds
add
bswap
pop
mov
cwtl
cmp
sbbb
cs
jp
repnz
or
sti
insb
lret
adc
jmp
arpl
out
or
outsb
bound
adc
xor
adc
adc
fwait
gs
sbb
adc
mov
mov
sbb
out
icebp
fs
std
popf
pushf
sahf
int
and
mov
mov
xor
stos
divb
xchg
enter
push
jg
mov
sti
call
pusha
popf
push
mov
and
push
faddl
mov
or
imul
dec
lcall
mov
sub
push
cltd
and
fst
pop
fldenv
shll
in
jle
mov
repnz
cmc
xchg
adc
push
push
xor
out
mov
mov
cmpsl
popf
fisubl
mov
cmp
inc
stc
outsb
rcl
outsl
and
dec
pop
icebp
jl
lret
lock
sub
xlat
roll
push
sub
aaa
sbb
sbb
push
aaa
jb
repnz
pop
xchg
inc
test
sub
leave
test
add
jge
cmpsb
aaa
or
pop
out
mov
arpl
inc
push
jbe
inc
jge
mov
mov
in
inc
lret
add
xchg
aaa
aas
mov
dec
outsl
repz
pusha
pushf
mov
push
lds
jmp
stos
ljmp
loop
je
mov
dec
in
push
fildl
sbb
ss
fstps
mov
icebp
cli
push
dec
aas
addr16
jecxz
lahf
cmp
pusha
sub
adc
pop
pop
pop
adc
sub
daa
les
mov
xchg
cmpsb
fdivs
stos
stos
xor
fmul
fldt
loopne
enter
stos
lods
and
or
inc
aaa
sbb
insl
nop
add
add
push
inc
lahf
jns
add
jne
pusha
fwait
pop
push
pop
push
and
scas
pop
lea
ss
rolb
cltd
mov
mov
pop
jne
jne
mov
into
add
into
dec
jg
push
dec
mov
int3
icebp
mov
cmp
mov
repnz
outsl
test
test
int3
jne
ret
sti
cmp
or
jp
scas
adc
cmc
push
arpl
das
mov
dec
jae
fs
xor
cmp
and
pop
mov
test
xlat
xchg
loope
mov
pop
add
sti
out
jne
outsl
aam
test
loopne
cli
jecxz
in
xchg
mov
cmp
faddl
and
btc
cmp
loope
xchg
imul
incl
arpl
inc
lret
push
cmp
sub
add
push
dec
repnz
add
mov
mov
imul
sub
in
lahf
pop
repnz
ficoml
into
push
pop
inc
mov
imul
lahf
in
mov
inc
jp
add
mov
mov
adc
jle
jecxz
dec
dec
cwtl
push
pop
jnp
xchg
jne
or
jne
loopne
cmp
pop
inc
stos
mov
shll
mov
pop
mov
jg
ja
addr16
sti
shlb
es
mov
and
pop
bound
and
sti
outsb
mov
and
mov
add
mov
push
cwtl
adc
push
out
mov
pop
push
jo
mov
aas
lods
adcb
incl
scas
and
and
xor
dec
mov
adc
insl
xor
aas
test
dec
sbb
and
or
popf
push
mov
cmp
bound
cmc
and
jno
repnz
adc
add
inc
dec
jo
les
pushf
divb
hlt
pop
bound
push
push
stos
je
inc
bound
xchg
sub
in
sub
jp
sbb
adcb
inc
pop
fcomi
in
ja
push
sub
mov
or
ret
or
es
mov
mov
sar
mov
les
sbb
das
lret
shrb
loop
pop
lds
lcall
xor
les
add
jle
mov
inc
rcrl
insl
pextrw
ja
popl
push
push
mov
jno
mov
xchg
loop
call
cmp
jns
shl
lds
sbb
push
in
jmp
jns
push
mov
fildll
sahf
lret
call
pop
es
scas
sub
inc
mov
add
adc
push
sti
lahf
cmp
pusha
mov
repz
stc
stc
mov
andb
push
mov
push
dec
lret
sti
cmc
inc
lahf
push
mov
test
xchg
test
movd
sub
push
out
sbb
pop
mov
sbb
pop
repz
icebp
pop
lods
pop
push
movsl
ret
mov
cli
inc
or
xchg
dec
cmp
enter
cwtl
stc
lcall
jnp
aam
jbe
pop
mov
or
scas
es
sbb
or
and
enter
ja
aaa
mov
and
add
popa
push
std
ja
push
out
pop
dec
into
jno
mov
call
pop
sti
inc
cmpsl
iret
rorb
pop
mov
mov
std
xor
mov
pop
mov
mov
pop
lea
mov
xchg
inc
cltd
push
pop
test
lock
fsubs
xchg
iret
sub
repnz
mov
or
dec
in
cmpsb
inc
or
orb
mov
loopne
hlt
pushf
inc
pop
add
xlat
mov
fs
mov
push
iret
mov
ds
jl
mov
xchg
inc
push
lock
lret
inc
add
cmp
call
mov
mov
mov
xor
dec
ds
enter
push
icebp
shll
sbb
and
mov
ret
jmp
jnp
movsl
jmp
data16
pop
fwait
dec
inc
fcomps
out
mov
jge
pushf
outsl
in
loopne
or
gs
xchg
sbb
mov
call
jl
add
in
lods
popf
loope
leave
xor
push
add
pop
aam
or
mov
lret
mov
test
adc
dec
ja
jg
sub
sub
sbb
pop
and
add
xorl
pop
lret
inc
iret
lret
lret
lea
fmul
sbb
loopw
xchg
daa
add
enter
addr16
mov
xchg
idivb
dec
mov
mov
in
ljmp
out
orb
lret
movsl
popa
or
outsb
and
shrl
sbb
add
cmp
dec
loopew
testl
xlat
cmp
dec
pusha
push
imul
xchg
imul
inc
stos
xchg
mov
dec
dec
and
fchs
repz
lds
mov
ret
ds
repz
insl
and
inc
sbb
inc
sbb
arpl
jnp
adc
mov
pushw
aaa
sub
movsl
movsl
cmp
and
imul
lods
inc
jae
mov
sbb
test
int
xchg
imull
pop
sbb
sahf
bound
loope
jo
jle
scas
sahf
cmc
jg
test
repz
aaa
popf
push
outsb
cmp
push
ja
cld
add
push
fildll
ffreep
push
je
mov
loop
pop
enter
and
mov
std
jne
push
sti
jmp
ret
bound
sti
mov
bound
inc
or
pop
xchg
fists
test
mov
rolb
sub
pushf
ljmp
jecxz
sbb
sub
xchg
sub
iret
inc
out
pushf
jb
xchg
bound
lcall
fs
rcrl
jecxz
dec
je
sbb
push
int3
enter
fildl
or
fsubrs
push
loopne
mov
lcall
jbe
popf
push
jnp
mov
movsb
xchg
ljmp
xchg
xor
sub
popa
not
push
mov
or
fwait
mov
ret
cmc
jne
pushf
adc
mov
pop
movsb
leave
aam
test
in
pusha
cmp
sbb
add
test
cmp
imul
lds
push
jb
repz
cmpsl
inc
xor
xchg
jno
push
cli
enter
inc
in
sub
sti
sub
pop
cs
mov
mov
outsl
jmp
push
in
dec
sbb
fdiv
jecxz
aas
rcrl
sub
jle
sti
adc
mov
test
in
mov
mov
cmp
fnstcw
jmp
adc
dec
jp
das
hlt
pop
pop
mov
mov
repz
push
lret
cmpsb
movb
mov
xchg
push
inc
fisttps
push
in
push
lods
mov
leave
les
stc
stos
jle
cwtl
fldcw
mov
xchg
or
call
ss
xchg
inc
dec
mov
out
xorl
cmpl
mov
sahf
or
les
and
xchg
sbb
fldcw
aas
mov
sub
lea
push
mov
sti
psubw
mov
jb
jp
dec
xchg
imul
sbb
xor
hlt
jmp
cli
movsl
sahf
jnp
mov
mov
jle
cmp
out
call
aas
add
adc
sbb
cwtl
adc
pop
test
add
out
pop
pop
lods
incl
mov
js
test
mov
loopne
xchg
jl
xchg
enter
iret
mov
daa
jo
and
das
sub
scas
xchg
add
cmp
sarb
movsl
sbb
xchg
mov
push
xchg
outsl
sbb
jne
xor
push
popf
sbb
mov
push
cmpsb
push
lock
enter
sahf
adc
movsb
stos
mov
push
cld
rcll
mov
push
fsubrl
cmp
and
adc
xchg
or
and
push
cltd
fiadds
insl
pop
adc
aad
mov
mov
insb
loop
hlt
call
xor
or
adcb
iret
insl
in
cmp
ss
shlb
jmp
ljmp
xchg
jecxz
dec
xchg
xor
dec
popa
scas
mov
cs
mov
lock
std
xchg
in
pop
xchg
fcmovnbe
int
mov
popa
add
loope
cmp
ret
dec
loope
jns
xchg
or
inc
xor
mov
pop
cld
inc
gs
push
adc
xchg
clc
cs
push
out
pop
mov
and
ror
push
loope
sbb
inc
nop
sub
lock
rolb
jmp
cmpsb
adc
pop
jne
mov
lret
dec
cmp
lds
cmp
cmp
adc
mov
and
adc
mov
pop
das
jge
or
fimuls
push
mov
hlt
mov
test
mov
xor
inc
sub
mov
cs
cld
pushf
fnstenv
jle
ljmp
sub
fldcw
mov
fldl
xchg
cli
xchg
cmpsb
xlat
or
sbb
cmp
mov
repz
imul
in
inc
pop
cwtl
fistl
test
ret
arpl
and
xchg
cli
js
inc
push
add
mov
in
pop
dec
popf
jge
aaa
fwait
dec
mov
mov
shld
dec
xor
and
and
cmp
cmp
inc
pusha
mov
add
and
clc
sti
push
push
cmp
mov
dec
dec
jo
inc
cmp
imul
int
andb
aad
xor
and
ret
sbb
jae
adc
add
and
ds
outsl
pop
xor
push
in
jg
cmp
clc
cmc
dec
inc
fisubs
and
mov
inc
add
mov
scas
pop
aad
test
imulb
rcl
fisubrs
add
ss
sti
int3
test
inc
jp
das
or
add
mov
cmpl
jne
adc
fs
repnz
addr16
shll
mov
add
dec
popf
add
sbb
add
pushf
mov
lcall
int3
adc
out
repz
mov
pusha
pushf
push
sub
add
ret
inc
ljmp
push
rclb
push
in
pop
lret
cmp
pop
popa
pop
push
addl
and
mov
sub
push
lahf
stc
or
mov
lods
mov
lock
lahf
add
pop
jg
xorl
popf
cmpsb
mov
test
cmp
push
insl
sbb
jo
jp
cmp
mov
jnp
dec
sbb
out
jne
xchg
add
xchg
loope
int3
or
inc
and
adc
adcb
push
bound
pop
aad
dec
inc
mov
jo
mov
jg
ds
lock
loop
mov
and
mov
push
adc
stos
dec
dec
push
xor
or
add
sub
cmp
out
je
repz
rcll
push
xchg
ret
hlt
add
scas
jle
pop
mov
movsl
ret
mov
and
cmp
mov
je
add
cmp
inc
inc
out
cs
stos
adc
cld
jmp
sbb
jae
outsl
repnz
fdivr
jecxz
sti
mov
push
xchg
test
repnz
shll
jg
mov
pop
movb
sbb
push
int
std
in
cltd
aam
inc
lret
addr16
in
mov
shr
lret
fcmove
pop
cld
mov
mov
mov
inc
leave
add
and
bound
int
push
jne
das
mov
cmp
mov
push
xlat
in
or
xor
cmp
push
lods
out
mov
cmp
xchg
xor
inc
lea
and
xor
cmpsb
xchg
and
loop
dec
sbb
push
cli
ret
out
sti
shll
roll
fimull
jge
popf
int
outsl
lret
in
loope
in
adc
add
aaa
stos
dec
jmp
adc
jmp
arpl
adc
pop
enter
loop
xchg
mov
arpl
sub
negl
mov
pusha
cld
jne
push
xchg
mov
lcall
adc
cmpsl
dec
or
fmuls
cmp
imull
push
imul
adc
cld
lret
popa
cmp
push
movsb
enter
cmp
fdivr
sub
test
and
mov
shl
mov
push
dec
xor
dec
enterw
sbbb
xchg
shl
inc
stc
lcall
aaa
fstps
scas
movsl
sbb
and
subl
mov
sub
adc
test
cltd
lahf
out
out
loopne
in
cmp
lods
and
jp
test
or
inc
iret
push
push
fwait
lods
add
loopew
movsl
xchg
pushf
cmpl
mov
or
popf
and
pop
mov
mov
popf
js
sahf
jle
lods
ss
xchg
cld
mov
lea
xchg
mov
or
jbe
or
sub
jle
and
sarl
jle
jne
rcrl
dec
mov
enter
or
je
icebp
sbb
and
sahf
mov
and
sbb
push
arpl
imul
nop
cmp
daa
fucomp
add
mov
test
shlb
dec
mov
test
mov
or
mov
lock
sub
and
or
push
pop
dec
frstor
jne
and
mov
jne
mov
mov
cmp
imul
sbb
mov
mov
hlt
stos
in
fcoml
inc
jp
pop
pop
cltd
test
lahf
dec
ss
lret
mov
cs
in
xor
jae
mov
add
mov
push
test
add
test
mov
mov
data16
adc
in
mov
or
jmp
adc
sub
sbb
mov
pushf
sub
pop
jp
cmpb
pop
add
add
jmp
out
lods
mov
ret
call
arpl
push
dec
sti
loopne
push
fstl
xchg
ret
push
data16
aaa
sti
cmp
cmc
fcmovnb
pop
sahf
sbb
data16
repz
dec
jg
push
mov
or
adc
out
xor
push
imul
pop
cld
aad
push
push
xor
sbb
push
push
rorb
lods
bound
cs
movsb
sub
lea
sbb
cmp
inc
clc
adc
out
inc
movsl
mov
gs
cmp
test
insl
sbb
jp
fdivs
xchg
pop
xchg
sbb
pop
fcmovne
es
or
sahf
sub
fildll
mov
fwait
adc
in
sbb
inc
inc
popf
sub
xor
inc
push
xchg
int3
dec
fdivl
sub
push
ja
jmp
mov
jo
ficoms
mov
int
mov
shrb
pushf
push
xchg
std
test
mov
mov
mov
arpl
int
in
mov
push
cmp
sbb
dec
and
les
jbe
into
jns
cmp
push
push
popf
cmp
cmc
sub
or
fcompl
jge
pop
or
mov
out
icebp
cwtl
sbb
pop
aaa
incb
jno
jae
nop
scas
fdivrp
lret
push
insl
mov
out
mov
enter
or
leave
sub
inc
popa
sbb
outsb
xchg
mov
dec
bound
push
pusha
ds
out
les
arpl
mov
jnp
mov
aad
and
sub
jg
dec
aas
mov
cld
jnp
jb
pop
mov
aas
ret
sti
loope
dec
mov
mov
jl
and
popa
fnstsw
outsl
icebp
xlat
pop
mov
test
add
sarb
sub
out
mov
cmc
push
cmpsl
pop
out
repz
sub
subl
and
fs
mov
mov
mov
icebp
mov
xor
xchg
dec
stc
lock
mov
mov
add
pusha
addr16
lret
sahf
gs
fwait
addl
imul
lcall
int3
fldl
fst
mov
fwait
pop
into
sub
addr16
test
sub
call
jmp
call
mov
stc
cmp
fldl2e
push
dec
push
subb
outsb
jmp
push
mov
test
cltd
daa
mov
adc
inc
scas
adc
daa
out
lcall
shrl
fsubl
fdivs
and
xorl
push
xchg
sbbl
fmuls
mov
pop
rcr
sub
pop
outsb
into
loope
notl
fists
in
dec
or
rcll
xchg
testb
or
dec
out
xchg
inc
popl
test
std
insb
scas
mov
cmp
in
jnp
jae
pop
sub
and
or
xchg
sbb
insl
adc
lahf
lods
dec
in
mov
mov
xor
push
cmpsb
stos
int
inc
imul
inc
add
sub
imul
rol
jb
xor
repz
add
xor
out
push
lcall
adcl
cmpsb
loope
mov
cli
mov
negl
fstpl
sub
shl
or
cs
mov
xchg
gs
adc
and
xor
add
call
lret
mov
call
cmp
xor
mov
or
jp
mov
cmp
fiaddl
das
sub
jp
into
int3
add
addr16
out
cli
cmpsb
pop
pop
and
iret
or
gs
add
dec
ja
fisttpll
mov
imul
adc
testb
sbb
jno
out
adc
mov
pop
lods
jae
inc
shlb
pop
dec
test
sahf
test
jg
in
or
xchg
inc
daa
mov
lods
enter
cmpsl
inc
adc
subl
scas
push
es
sub
decb
bound
divb
cmp
cmp
push
add
aad
je
cmpsl
push
jns
adc
ds
or
jae
pushf
enter
fimull
xchg
movsb
test
clc
bound
push
xchg
push
std
shrl
xchg
adc
cld
inc
cld
xor
dec
and
xor
xchg
nop
xchg
loope
das
aas
sahf
movsl
addr16
mov
std
xor
mov
out
in
lock
jmp
pop
aad
lods
fcomps
sbb
das
loopne
loopne
arpl
pusha
lahf
ljmp
addr16
add
dec
xorb
das
mov
cmpsl
xchg
cmp
fs
jo
xor
xor
test
mov
dec
dec
rcll
fnstsw
mov
ret
cmp
mov
push
xorl
movsb
movsl
jb
js
or
mov
adc
fs
pop
xor
push
cmp
mov
and
lahf
call
aad
mov
popf
xor
jg
dec
mov
jb
sub
jge
outsl
popf
mov
jmp
xlat
outsl
aas
jae
jo
mov
sbbl
fcmove
rcll
repz
cmp
lock
jecxz
out
xor
jle,pt
cmp
pop
fiaddl
xchg
dec
xor
cmp
inc
outsl
push
jns
out
loope
lar
mov
pop
cmc
repz
fdivrl
aam
add
mov
dec
push
insl
mov
push
aad
xor
jmp
pop
lods
add
mov
sbb
rcrb
test
das
bound
mov
jno
jne
rcrl
jo
sbb
ljmp
xchg
jg
stos
lahf
push
xchg
rorb
xchg
repz
stc
aas
pop
mov
out
sbb
pop
fs
push
jmp
rclb
push
cmpl
jnp
nop
fstps
xrelease
adc
sub
arpl
enter
test
cmp
in
sbb
outsb
push
rcrl
shlb
mov
pop
subl
xchg
in
xor
jno
inc
pop
cmp
xor
out
ljmp
inc
inc
xor
fdivrl
mov
imul
shl
or
sbb
or
pop
leave
lods
cs
imul
or
adc
sahf
adc
jns
mov
fdivrl
fisttpl
jne
lcall
push
sub
sub
push
std
and
fadds
jns
cltd
lahf
or
rcrb
sbb
jnp
fidivrs
insl
out
mov
ljmp
sbb
sub
into
and
xor
dec
cmpsl
sarl
lods
cs
pop
mov
adc
data16
jno
xor
xor
xor
shll
push
in
xor
cmc
push
jb
xchg
clc
inc
lret
scas
into
sub
insb
fwait
out
lret
mov
outsl
es
subl
ja
stc
mov
push
or
sub
xorl
mov
pop
jns,pt
cmpsl
aas
pushf
fwait
stos
jno
scas
popf
addr16
and
cltd
orb
jae
sbb
or
bound
sbb
xchg
mov
mov
mov
jns
mov
mov
in
out
mov
add
mov
adc
inc
push
xchg
mov
stc
lds
mov
xchg
mov
movsb
js
aaa
out
and
flds
fidivrs
jl
inc
std
pop
int
dec
daa
mov
inc
push
jle
jo
add
jge
int3
mov
mov
inc
add
jnp
movsb
mov
push
push
push
jecxz
pop
invd
shr
adc
cmc
rorb
pop
pop
mov
cwtl
lcall
jbe
sub
jge
shlb
adc
jl
mov
jecxz
lods
loope
mov
mov
jle
ja
add
div
cld
cmovs
mov
mov
shll
in
jle
adc
adc
push
push
adc
pop
mov
dec
jae
rclb
inc
pop
dec
mov
cmp
push
xchg
xor
push
push
dec
push
xor
inc
inc
sbb
psubsb
xor
jle
push
ljmp
and
leave
sbb
xor
into
les
cmp
inc
stos
iret
lcall
jmp
xor
inc
mov
ja
fsubl
cmpl
sub
jbe
jg
pop
xchg
ret
es
sbb
jle
idiv
mov
hlt
add
int3
inc
lret
or
enter
hlt
sbb
dec
jg
pop
mov
pop
jmp
out
gs
in
or
rcll
ds
fnsave
push
pop
inc
cld
sbb
popa
nop
jbe
and
sbb
add
jp
loop
ljmp
inc
fwait
cld
jl
and
cmp
dec
mov
jb
jno
push
push
add
int3
cltd
or
add
or
imull
cld
add
ja
stc
es
sub
mov
roll
test
movsl
dec
jge
into
shll
cltd
or
xor
inc
xchg
ds
cmp
test
push
lcall
inc
out
mov
insl
cwtl
sub
fdiv
rcrb
cmp
test
cmp
mov
or
scas
cmp
cmpsl
nop
bound
cmp
ljmp
push
and
fisubrs
sbb
mov
hlt
push
mov
cmc
ss
xchg
pop
out
adc
xchg
outsl
pop
pop
fwait
popa
fs
cmp
out
mov
sub
loop
mov
insl
mov
inc
cmpsb
ret
mov
or
mov
push
fistps
cmc
jmp
movd
dec
inc
popf
jmp
popl
into
aad
sub
pop
mov
lahf
push
out
jge
gs
pop
dec
popa
pop
fimuls
cmp
hlt
adc
jge
mov
mov
fwait
mov
sub
std
jl
enter
sub
pop
xchg
test
sub
out
sub
fsubl
inc
mov
mov
lret
jne
xor
xor
pop
popf
and
pusha
sbb
adc
dec
loope
std
cmp
jmp
sub
xor
and
bound
mov
sub
dec
mov
xchg
lods
xchg
into
pop
inc
div
jns
rcr
sbbl
cmp
fdivs
add
mov
or
xchg
fs
add
mov
jo
insb
pusha
fbstp
loopne
push
mov
rorl
dec
ret
es
xchg
jge
iretw
arpl
jae
dec
into
testb
mov
rcrb
cld
mov
push
stos
call
rolb
divb
lods
cmpsl
out
and
cmpb
mov
ss
push
scas
dec
movsl
dec
arpl
mov
adc
jnp
and
out
in
out
sar
fwait
pop
adc
xor
pop
jg
sub
data16
xchg
andl
ja
adc
and
ffreep
cmp
and
add
call
mov
outsl
test
lret
mov
xor
sbb
scas
gs
jns
enter
jl
fwait
cmovs
insb
fisubs
xor
fcoml
lods
dec
aas
fnstenv
fs
lcall
adc
push
xchg
fbstp
hlt
push
and
fdivl
mov
test
dec
data16
jns
add
fnsave
rolb
xor
dec
jo
test
inc
iret
push
sbbb
je
push
sbb
inc
xchg
sbb
cmc
or
cmp
loope
xor
sti
mov
fistpll
stc
ljmp
ljmp
xchg
packsswb
sahf
iret
xchg
rcrl
out
or
adc
push
int
dec
icebp
push
xchg
or
pop
ficoms
cld
and
sbb
test
push
outsb
xor
or
xchg
jmp
cs
pop
jle
sub
hlt
mov
xor
or
jbe
lahf
iret
hlt
xlat
scas
push
iret
repnz
arpl
xor
imul
lods
cs
xchg
mov
fs
inc
mov
add
pop
loopne,pt
jae
and
xlat
cmpsl
push
pop
xchg
cwtl
test
out
lds
popa
xchg
leave
insl
test
lahf
mov
in
adc
adc
es
mov
icebp
mov
xor
test
outsl
jne
imul
subb
stc
subl
repnz
xor
inc
aad
add
jo
stc
adc
jp
jns
dec
imul
enter
dec
nop
imul
jo
inc
xchg
lret
addr16
and
popf
xchg
lret
xchg
mov
lock
inc
add
mov
sub
jmp
mov
mov
adc
push
mov
mov
into
ljmp
insb
push
call
jns
setnp
and
sub
shll
sahf
hlt
cmp
and
imul
or
in
xchg
push
fldl
cmp
aam
jge
into
mov
lock
add
notb
jbe
dec
hlt
pop
push
pop
mov
out
inc
std
mov
and
fiadds
cwtl
pop
hlt
mov
push
jle
cld
cmpsl
shlb
mul
iret
iret
in
dec
ftst
push
sbb
out
xchg
or
xchg
pop
dec
sub
daa
add
and
adc
out
fldt
or
aas
mov
cmp
add
fistps
dec
pushf
push
movsl
arpl
dec
int3
cmp
lods
fcoms
xor
xchg
sbb
popf
jecxz
cmp
mov
jae
gs
aam
jecxz
sub
lock
stc
ret
jp
aam
xchg
mov
adcb
or
fadd
cmp
mov
sub
imul
mov
mov
mov
push
xchg
and
cmpsb
inc
dec
aad
rcrl
es
xchg
sub
lret
pop
push
enter
mov
adc
stos
roll
popf
iret
fmull
je
sarb
add
and
jb
or
arpl
xchg
push
push
repnz
adc
sub
outsl
imul
loope
cmp
adc
fsubr
xor
xchg
lret
mov
xlat
xchg
mov
mov
iret
lods
repnz
popf
mov
int
shrl
and
out
cmp
jnp
mov
sbb
or
lds
mov
sti
pop
mov
movsl
and
leave
and
xorl
inc
repz
mov
shrb
pusha
xor
negl
arpl
adc
gs
cltd
sbb
and
ss
cmpsb
dec
ret
outsb
scas
paddusw
and
push
sbbl
mov
dec
daa
outsb
sub
enter
fwait
xchg
insb
into
shrb
adc
fs
or
sti
xchg
mov
inc
xchg
aaa
movsl
xor
jns
adc
xor
js
lods
push
clc
xor
outsb
clc
and
push
pop
add
mov
adc
enter
ds
dec
xor
mov
and
jge
jae
push
xchg
add
xchg
ljmp
adc
in
add
push
aam
pushf
fisttpl
mov
orl
mov
dec
inc
sub
adc
and
cmpsl
insb
sub
fwait
in
ret
xor
or
or
jmp
cmp
mov
mov
pop
fs
jl
mov
jno
sub
imul
and
in
ljmp
mov
js
add
sbb
inc
sub
popa
dec
inc
sub
lcall
ret
nop
sahf
inc
in
mov
dec
sbb
cmpsl
xchg
sbb
ja
jne
scas
insb
sbb
addl
dec
fisubrl
jmp
mov
outsl
jg
xchg
adc
orl
les
cmp
repz
inc
outsl
shrb
outsb
mov
inc
hlt
rcl
dec
jp
popa
rolb
les
push
jmp
mov
leave
push
jo
xchg
negb
push
imul
lods
ja
inc
jge
mov
add
popf
mov
cld
inc
jnp
popa
jns
int3
rcr
jmp
sbb
and
cld
test
js
movsb
xor
gs
mov
pop
orl
mov
xchg
inc
std
mov
out
adc
inc
insb
outsl
sub
mov
stc
movsl
cmp
sbb
sahf
int
adc
daa
iret
bound
fdivrs
test
mov
stc
mov
enter
push
jl
and
mov
das
adc
xchg
xor
test
and
loopne
inc
mov
jns
iret
inc
cwtl
call
push
mov
add
ja
xor
ss
outsb
add
mov
lret
mov
adc
push
pop
sub
push
dec
dec
aas
imul
cmp
or
dec
jge
stos
ret
mov
das
int
pop
jne
cmpsb
or
pop
xchg
loope
andb
xor
mov
out
cld
sarb
push
jae
mov
dec
jne
push
imul
mov
les
sub
mov
dec
int3
bound
fiadds
repnz
fldt
mov
leave
xchg
sbb
lcall
dec
fnsave
sub
cld
jl
mov
adc
mov
xchg
mov
enter
mov
fmul
fnstsw
repnz
das
ss
cltd
fisubl
mov
jb
pusha
mov
mov
or
das
call
subl
movsl
push
shrb
lcall
lds
clc
fiadds
mov
into
sahf
push
jno
scas
ljmp
out
and
lsl
aas
cs
jmp
out
iret
in
lret
pop
cli
insb
fwait
lahf
add
mov
fsub
test
test
pushf
enter
mov
pusha
je
lcall
push
cmp
sub
mov
std
sub
fninit
loop
inc
push
into
cmc
and
pop
outsb
and
cmp
testb
mov
icebp
lds
jg
add
and
mov
push
ret
inc
push
cmpsb
popa
popl
push
loope
shr
int3
and
mov
pop
jns
scas
aad
movsb
cmp
jl
test
rclb
dec
jl
add
and
mov
xor
out
int
add
stos
cwtl
jae
es
cmp
mov
stos
mov
movsl
push
call
jg
pop
xor
lret
mov
out
test
insl
pop
pop
xchg
inc
jb
jno
xor
push
pusha
mov
lea
test
push
stos
fsts
or
inc
in
ds
lcall
insl
xor
sbb
daa
adc
notb
test
andl
das
mov
push
out
icebp
xchg
shlb
mov
push
cmp
mov
dec
pop
fbstp
and
pop
out
int3
pop
fcomps
push
and
jge
gs
imul
loopne
cmpsl
sub
jl
lcall
cmp
sahf
call
roll
cmc
pushf
call
ret
gs
orl
ret
pcmpeqb
out
sti
jg
ret
fbstp
les
pop
in
imul
sub
adc
outsl
adc
inc
pop
out
jnp
rorl
adc
inc
jecxz
adc
xor
xchg
sbb
es
call
lahf
xor
aad
jg
inc
into
mov
movsb
jbe
hlt
fdivrs
sub
gs
and
gs
aas
movsb
popf
mov
sub
outsb
movsb
sbbl
pushf
rcrb
sbb
dec
pop
std
gs
cmp
inc
cmp
sbb
popf
sbb
sbb
mov
jns
js
test
push
jp
and
jge
xchg
clc
je
or
lods
sbb
adc
les
cmp
test
jns
insb
sbb
or
sub
fwait
xchg
mov
jg
lret
in
mov
arpl
sti
cmp
adc
imul
lcall
repz
mov
push
sub
imul
aad
pop
push
xchg
and
mov
loopne
leave
or
adc
inc
mov
mov
lds
push
mov
stc
mov
daa
sub
test
shl
int3
in
rclb
sarb
stos
stos
dec
mov
jnp
movsb
inc
movsl
dec
je
mov
pop
jge
or
clc
and
stc
stos
icebp
sub
jno
movsl
fsubrp
pop
stos
ss
adc
sbbb
xchg
shlb
adc
out
inc
push
push
xchg
jnp
hlt
adc
lea
fisttpl
jnp
insb
dec
mov
.byte
.byte
add
add
pusha
cmpsl
cmp
inc
outsl
insl
add
or
add
add
pop
add
addb
add
mov
add
add
add
addb
add
inc
add
orb
add
adc
add
inc
add
orb
add
mov
add
test
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
addb
add
fadds
add
lock
addb
add
add
addb
add
cmp
add
push
add
addb
add
pusha
cmpsl
cmp
add
add
or
add
clc
or
subb
orb
add
adc
add
es
xorb
add
inc
or
and
add
clc
add
andb
adcb
add
sub
cmpb
addb
addb
add
add
add
add
add
jo
add
mov
addb
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
mov
add
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
rolb
sub
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
sldt
addb
cmp
add
cwtl
push
add
mov
add
enter
add
add
loopne
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
mov
push
add
adc
add
sub
add
inc
pop
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
add
jo
add
mov
add
mov
jg
add
jg
add
pop
add
call
add
add
cmp
inc
outsl
insl
add
add
adc
add
sbb
add
jle
mov
add
add
add
add
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
or
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
enter
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
add
clc
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
add
push
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
or
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
enter
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
add
clc
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
or
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
enter
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
call
add
add
cmp
add
add
add
add
add
add
clc
or
add
add
add
cmp
add
add
add
add
add
add
or
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
add
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
add
add
cmp
add
add
add
dec
or
add
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
add
push
add
add
cmp
add
add
add
add
add
add
js
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
or
add
add
add
cmp
add
add
add
add
add
add
test
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
add
add
add
or
add
add
add
cmp
add
add
add
add
add
add
fmuls
add
add
add
jle
mov
add
add
add
add
call
sub
add
push
add
add
add
shlb
adc
xor
add
add
adc
xor
add
cmp
adc
xor
add
insb
xor
add
add
mov
add
add
adc
in
add
push
cmp
add
add
add
adc
rolb
add
hlt
cmp
add
add
add
adc
rolb
add
xchg
inc
adc
rolb
add
fs
adc
rolb
add
xor
adc
rolb
add
add
adc
rolb
add
aam
adc
call
add
add
add
add
add
fs
adc
test
add
or
adc
push
add
add
adc
in
add
inc
arpl
add
add
add
adc
js
add
test
adc
mov
add
add
add
add
adc
movsb
add
add
adc
insb
add
add
adc
add
add
je
adc
enter
cmp
adc
call
add
add
add
add
adc
loopne
add
add
adc
aam
add
fdivrs
add
add
add
add
in
adc
push
add
add
add
add
add
add
pop
xchg
add
add
add
add
fmull
add
mov
add
movsb
xchg
adc
cmp
add
fcoml
add
enter
sub
add
lock
adc
mov
add
add
add
add
add
add
adc
les
add
clc
mov
add
adc
add
xor
adc
mov
add
add
add
add
stos
adc
rolb
add
les
add
fsubrs
add
in
lods
adc
adc
add
add
add
adc
adc
adc
add
sub
add
cmp
adc
adc
add
push
scas
adc
adc
add
fs
adc
adc
add
js
adc
cwtl
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
add
add
push
add
inc
add
dec
add
or
dec
add
dec
add
dec
add
dec
add
or
dec
add
push
add
dec
add
dec
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
sub
add
and
add
inc
add
add
add
add
add
add
or
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
adc
inc
add
jb
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
inc
add
outsb
add
outsl
add
add
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
dec
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
outsl
add
adc
inc
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
jo
add
popa
add
add
outsb
add
add
imul
add
add
insb
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
inc
add
ja
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsb
add
popa
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
and
inc
add
add
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
add
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
add
add
outsb
add
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
sbb
inc
add
outsb
add
outsl
add
add
jae
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
adc
inc
add
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
push
add
popa
add
add
jb
imul
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
inc
add
add
add
dec
add
add
add
add
add
add
int3
add
add
xchg
add
add
gs
adc
push
imul
insl
jae
adc
arpl
gs
add
push
jns
je
insl
add
adcl
je
sbb
dec
gs
popa
addr16
or
push
imul
adc
jns
gs
adc
dec
popa
je
add
popf
push
jns
inc
outsl
outsb
jae
add
add
jae
je
insb
jae
adc
je
jb
add
movl
add
push
imul
add
pop
inc
insb
popa
jae
gs
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
adc
jns
dec
outsb
outsw
add
sub
popa
jo
imul
outsl
insl
insl
inc
je
insb
add
popl
popa
je
inc
add
fists
fs
arpl
add
mov
bound
add
pop
push
je
push
je
insb
jae
sbb
push
push
push
dec
add
es
outsl
outsb
je
outsl
insb
jae
adc
gs
adc
outsl
insl
inc
je
insb
jae
adc
je
jae
adc
je
jae
adc
dec
popa
jo
add
inc
inc
arpl
imul
outsb
jne
add
xchg
outsb
je
jb
add
int
insl
addr16
imul
je
inc
je
insb
jae
adc
outsl
addr16
adc
je
insb
jae
sbb
inc
insb
addr16
sbb
inc
outsl
insl
insl
inc
insb
add
sub
insb
dec
bound
sbb
push
gs
je
add
push
imul
sbb
push
jb
dec
outsl
outsb
add
mov
js
inc
insb
addr16
adc
inc
jne
je
outsb
jae
adc
push
imul
fisttpll
imul
adc
js
push
adc
dec
bound
add
push
imul
add
xchg
insb
push
imul
jae
inc
arpl
add
movsl
dec
jne
je
dec
outsl
outsb
add
dec
insl
insl
add
movsl
push
imul
imul
push
dec
gs
jo
outsb
je
jae
adc
push
gs
outsb
gs
outsb
imul
inc
push
inc
outsl
outsb
outsb
arpl
outsb
add
mov
je
inc
jb
gs
inc
popa
jae
add
or
inc
js
gs
imul
fs
insb
outsl
bound
add
les
push
je
arpl
imul
adc
push
gs
jne
arpl
je
imul
dec
fs
je
arpl
adc
fs
je
arpl
outsl
outsb
jae
jae
adc
dec
fs
imul
add
inc
dec
fs
push
dec
add
push
dec
fs
popa
jae
inc
outsl
insl
jo
outsb
outsb
je
adc
dec
fs
je
gs
insl
add
mov
fs
inc
push
push
je
gs
insl
add
decb
inc
outsl
insl
jo
outsb
outsb
je
adc
fs
outsl
arpl
je
popa
outsb
fs
add
push
dec
fs
outsb
je
jb
gs
add
inc
dec
fs
dec
dec
popa
outsb
fs
gs
adc
inc
push
gs
jns
adc
fs
dec
dec
popa
outsb
fs
gs
outsl
arpl
je
adc
fs
outsl
arpl
add
in
fs
jae
imul
insl
bound
jae
adc
imul
add
out
inc
inc
push
add
pop
jne
popa
push
arpl
inc
add
pop
jne
popa
dec
push
push
popa
jb
gs
adc
je
insb
jae
adc
insb
popa
arpl
outsl
add
push
insb
dec
gs
jo
xor
adc
outsb
popa
push
jns
gs
adc
outsb
popa
inc
insb
popa
jae
gs
adc
jne
popa
push
outsl
arpl
je
add
push
imul
adc
outsb
popa
push
popa
jbe
add
icebp
jne
popa
dec
jae
arpl
insb
popa
jae
gs
adc
outsb
popa
push
dec
inc
inc
add
xorl
dec
jae
arpl
push
dec
add
dec
dec
push
jns
je
insl
add
in
push
push
jns
gs
add
dec
popa
imul
jbe
push
outsb
fs
outsb
imul
inc
push
inc
insb
imul
push
imul
push
outsb
imul
add
mov
jae
jae
adc
outsl
inc
popa
jo
adc
popa
jo
adc
push
outsl
arpl
xor
jns
adc
pop
dec
dec
push
inc
push
add
lret
dec
dec
inc
outsl
outsb
jae
add
cs
arpl
inc
outsl
insl
jo
adc
dec
je
jo
jb
js
add
mov
push
inc
xor
add
and
jae
jb
jns
adc
arpl
jb
or
push
imul
jbe
imul
jae
add
arpl
imul
popa
push
imul
sbb
dec
ja
push
imul
dec
ja
inc
arpl
je
insb
add
dec
ja
push
imul
sbb
dec
ja
dec
je
je
je
jae
adc
dec
push
inc
inc
dec
add
hlt
push
add
aas
ja
outsb
outsb
je
gs
imul
imul
add
les
outsb
dec
outsl
popa
fs
imul
adc
pop
dec
imul
imul
add
inc
jne
imul
arpl
inc
inc
popa
je
add
mov
push
gs
jne
arpl
gs
imul
imul
add
mov
insl
popa
addr16
insb
jo
adc
dec
inc
js
dec
gs
push
outsb
imul
addr16
arpl
cmp
cmp
cmp
cmp
outsl
jb
push
gs
add
gs
test
jo
and
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
insb
imul
addr16
inc
dec
dec
inc
outsb
je
imul
inc
outsl
insb
outsl
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
push
inc
inc
xor
xor
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
or
jns
jb
jbe
gs
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
push
push
push
popa
outsb
gs
push
push
popa
outsb
gs
xor
gs
add
push
outsl
jo
add
push
imul
push
popa
bound
fs
add
add
dec
fs
inc
push
inc
insb
imul
je
outsl
imul
imul
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
dec
outsb
inc
outsl
outsb
outsb
arpl
pop
sbb
je
outsl
imul
imul
outsb
arpl
add
outsl
jb
add
add
gs
sbb
add
push
push
imul
je
dec
outsl
imul
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
jne
outsl
insb
dec
inc
imul
push
imul
data16
cmp
add
push
push
jns
push
jb
jns
push
jns
push
jb
jns
arpl
push
inc
arpl
or
inc
gs
outsb
imul
outsl
outsb
cs
popa
je
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
or
add
js
mov
add
jo
ja
pop
jo
add
clc
mov
add
mov
pop
ja
jo
add
incl
ja
ja
add
js
mov
add
js
mov
jg
clc
xchg
add
jg
mov
add
ja
pop
ja
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
dec
imul
inc
pop
push
dec
inc
inc
dec
dec
or
jo
jo
outsl
fs
dec
jb
addr16
arpl
or
jo
jo
insb
imul
push
imul
jo
sbb
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
imul
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
outsl
jb
add
add
push
push
push
imul
jb
or
je
jb
popa
insb
add
push
imul
insl
jb
push
imul
data16
push
add
add
add
xor
xor
xor
xor
xor
inc
xor
aaa
ss
aaa
xor
xor
xor
xor
ss
inc
inc
inc
inc
inc
xor
xor
ss
inc
cmp
inc
cmp
inc
inc
inc
xor
inc
xor
xor
inc
cmp
xor
inc
inc
inc
xor
xor
inc
ss
inc
xor
cmp
inc
xor
inc
xor
xor
inc
inc
xor
inc
inc
inc
xor
ss
xor
inc
inc
xor
cmp
xor
xor
cmp
inc
inc
ss
inc
xor
aaa
aaa
xor
inc
inc
ss
inc
inc
inc
inc
aaa
inc
xor
xor
xor
inc
xor
inc
xor
inc
xor
xor
cmp
xor
xor
xor
xor
xor
inc
xor
inc
inc
cmp
xor
cmp
inc
cmp
xor
xor
inc
inc
cmp
inc
inc
xor
inc
xor
aaa
xor
inc
xor
xor
xor
xor
inc
inc
inc
inc
xor
inc
xor
xor
inc
inc
ss
xor
xor
xor
inc
aaa
inc
inc
inc
inc
xor
cmp
inc
inc
xor
inc
xor
inc
inc
inc
xor
ss
inc
inc
xor
aaa
inc
inc
inc
xor
cmp
xor
aaa
cmp
inc
xor
xor
cmp
inc
ss
cmp
inc
aaa
xor
xor
inc
xor
inc
xor
xor
inc
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
inc
xor
cmp
xor
ss
inc
inc
xor
inc
inc
xor
cmp
xor
xor
xor
inc
cmp
inc
cmp
inc
xor
xor
ss
xor
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
testb
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
rolb
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
inc
add
jo
insb
add
jb
add
add
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
add
add
add
add
add
add
add
add
add
add
sub
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
js
jo
insb
add
jb
add
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
outsl
add
jns
outsl
add
cmp
cmp
cli
push
rcll
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
