mov
shrl
fistpl
adc
mov
fnstcw
sbb
mov
ffreep
pop
std
jmp
xchg
xchg
cmp
add
mull
icebp
or
cltd
xlat
lret
add
ret
fnsave
pusha
gs
lock
pop
fucomip
lcall
roll
sbb
fdivrs
push
or
clc
mov
push
stc
cmp
ret
xchg
xor
cmpl
popf
hlt
dec
xor
sub
or
mov
fwait
sub
mov
popf
aas
negb
mov
cmp
cmpsl
outsb
mov
push
dec
shll
shrb
mov
fsubs
mov
xor
pop
test
sub
push
inc
fimull
add
push
mov
test
xor
std
pop
push
lea
and
aad
cmp
jp
xchg
ds
push
jae
out
xorb
xor
test
mov
xlat
sbb
sub
je
push
sbb
arpl
push
addr16
movsl
and
es
xchg
in
js
mov
int3
aam
leave
add
cmc
adc
pop
lret
lods
mov
xchg
bound
jl
pop
repz
sub
xorl
shll
and
push
mov
imul
rcrb
sub
mov
mov
and
adc
cmp
or
dec
in
jl
inc
fs
ret
and
shll
ljmp
stc
mov
enter
or
xor
mov
jb
mov
loope
stos
aam
mov
inc
cmp
rcll
out
ds
cmp
int
fiadds
adc
inc
dec
mov
push
testl
xchg
out
push
xchg
hlt
jge
rclb
jmp
sarb
push
sbb
dec
mov
dec
dec
jmp
fwait
or
push
pop
test
inc
scas
js
push
imul
cmp
int3
in
rcl
loopne
in
mov
iret
sub
loope
cli
inc
pusha
hlt
jnp
add
fisttpl
push
movsb
mov
and
cmp
lods
cmp
mov
into
cltd
iret
fldenv
cmc
fsub
fistps
leave
mov
imul
pusha
cmp
in
movsl
mov
cmpsl
jmp
sbb
push
jmp
loopne
push
xchg
jne
gs
push
jns
jnp
test
ret
fs
mov
call
sub
shrl
cmp
int
aas
adc
stc
sbb
and
jmp
shrl
pop
arpl
and
rcrb
pop
push
push
dec
fists
pop
add
imul
jge
push
rcr
sub
fmul
movsb
mov
jo
sub
cmc
mov
in
or
mov
or
jmp
jnp
sbb
addr16
dec
shrl
pop
test
test
mov
add
sbb
add
insl
out
adc
jp
inc
sbb
jmp
push
imul
lock
sub
int
insl
and
mov
aas
mov
iret
call
filds
lcall
sub
mov
lock
xchg
adc
cltd
push
fldenv
sub
mov
cs
sub
jmp
mov
in
cli
ja
test
or
mov
push
cli
jmp
mov
cltd
cmp
cmc
mov
mov
jmp
fsubrl
ja
flds
pop
inc
cmp
jnp
pop
rorb
mov
adc
loopne
rolb
pop
les
xchg
sar
roll
inc
inc
outsl
enter
flds
fisubs
sbb
unpcklps
test
xchg
fidivrs
cld
xchg
adc
dec
add
cmp
leave
jnp
in
cmp
mov
jns
into
or
push
clc
or
ret
pop
jo
xor
outsb
mov
imul
or
push
mov
add
je
pop
cmpsl
add
jmp
jb
xchg
cmp
push
lea
int
cld
jns
mov
adc
jle
ss
or
aas
cmovb
or
mov
inc
sbb
cmp
inc
mov
fstpt
or
sbb
mov
mov
shrl
jns
test
dec
mov
dec
push
lcall
fisubl
push
in
into
lds
cmp
js
add
daa
lahf
pop
inc
fstpl
xchg
xor
push
push
popf
push
ss
ss
bound
and
sahf
scas
stc
fildll
or
jbe
fimull
loopne
clc
dec
xchg
add
loop
xor
test
jg
xor
cmc
push
std
mov
in
cmpsl
outsb
int
ret
imul
jnp
jnp
pop
mov
imul
cmpsb
cmpsb
cmc
test
dec
fisttps
enter
sahf
sub
sbb
xchg
out
dec
enter
jno
rcll
ljmp
jp
iret
into
lock
fbstp
loope
gs
js
add
pop
pop
jecxz
push
je
sub
cmpsb
inc
daa
int3
in
test
mov
pop
push
pop
inc
jno
sub
popf
stos
pop
fdivr
sbbb
fistpll
je
in
out
in
dec
push
outsb
sub
mov
jl
xor
pop
ja
jns
movsl
pop
dec
sub
xlat
es
cld
xchg
mov
inc
sbb
sub
clc
movsb
fisubs
inc
shlb
push
dec
sub
or
inc
sbb
icebp
loope
lret
mov
mov
push
je
sbb
xchg
push
insl
push
ja
add
xor
push
mov
in
aas
and
or
rcrl
push
cwtl
mov
or
aad
loope
shrb
rorl
in
stos
or
or
pop
gs
aas
sbb
xchg
lcall
leave
pushf
ds
dec
movsl
dec
enter
iret
paddusb
cmpsb
mov
mov
je
push
jb
push
ror
jnp
push
sub
pop
sub
add
cmc
clc
push
push
push
push
lea
push
push
push
push
nop
jg
push
and
pop
ja
lea
or
cmc
mov
cld
or
jo
je
and
xor
xor
cld
mov
xchg
push
jb
push
dec
pop
pop
test
push
dec
inc
pop
push
pop
inc
dec
clc
stc
cmc
cld
push
xchg
pop
cld
call
test
push
cltd
pop
rol
jo
clc
push
shl
pop
rol
inc
dec
pop
cmp
push
test
pop
ror
add
stc
or
push
add
clc
push
add
mov
pop
push
and
pop
push
pop
and
stc
stc
cld
stc
cld
push
add
pop
je
cld
and
mov
inc
dec
testl
je
or
jmp
jo
cmp
push
ret
xor
dec
test
repnz
sub
dec
clts
sub
in
adc
and
push
add
pop
jmp
pop
xchg
in
es
loop
rcl
mov
dec
mov
pop
frstor
gs
or
and
daa
add
inc
pop
sbbb
cmc
pop
je
push
push
add
pop
pop
push
push
pop
pop
jnp
cmp
cld
cmc
js
ja
push
push
pop
pop
push
push
jnp
test
pop
pop
mov
inc
inc
inc
inc
jmp
pop
xchg
repz
and
sub
xchg
mov
jp
orb
lahf
dec
out
mov
cs
sar
test
push
jo
mov
emms
jle
imul
xchg
mov
push
xchg
sub
jo
push
push
pop
add
pop
jmp
inc
sahf
lods
xchg
lcall
jno
aam
adc
call
into
push
jmp
xchg
leave
sti
insl
xor
inc
xchg
fists
jne
cmc
and
push
push
push
xchg
pop
pop
pop
rol
xchg
xor
je
push
movzbl
push
cmp
pop
push
jle
test
pop
lea
jp
cmp
or
ja
push
xor
pop
push
dec
pop
push
push
push
mov
pop
pop
pop
push
inc
dec
pop
push
push
push
add
pop
pop
nop
cmp
nop
loop
pop
add
jmp
iret
adc
negl
or
jecxz
xorl
cmp
lea
mov
sahf
push
jbe
sbb
dec
call
inc
mov
scas
mov
inc
pop
scas
sbb
dec
add
or
fmull
stos
add
out
xchg
jne
jecxz
mov
out
lea
or
ja
sub
add
call
loop
hlt
loope
aam
jnp
adc
mov
xlat
adc
push
sub
mov
xor
xor
mov
mov
mov
and
or
jbe
icebp
fucomip
xor
js,pn
mov
ljmp
test
dec
int3
mov
pop
jmp
xchg
cld
jp
push
hlt
mov
scas
cs
cmc
fstpl
sbb
mov
jle
push
cli
pusha
loope
bound
and
nop
clc
shlb
xor
loope
out
sbb
fnstsw
mov
fidivs
roll
addr16
aaa
int
sahf
arpl
sbb
rcr
jbe
out
xchg
jo
mov
test
fmull
insb
aam
or
jmp
out
sti
push
sbb
mov
arpl
je
inc
stos
in
shl
ss
cld
cmp
rorb
dec
test
sub
sbb
pop
idivb
pop
arpl
adc
sub
jle
push
mov
or
subb
pop
pushf
add
mov
jge
rcrl
in
pop
mov
xor
mov
sarb
sbb
adc
stc
dec
jae
insb
cld
adc
test
lods
insb
pusha
fwait
insb
out
aaa
fildll
inc
testl
je
mov
jg
or
popa
icebp
lret
push
hlt
mov
xchg
mov
mov
jbe
mov
lock
fsubrl
and
and
loop
dec
arpl
mov
cmc
add
pusha
mov
mov
insb
es
jno
xchg
pop
mov
xor
inc
outsb
outsb
scas
popf
sbb
pop
and
lret
jnp
loope
gs
arpl
mov
aam
inc
jbe
sbb
movsb
testl
addr16
test
lock
adc
mov
aad
inc
xor
add
das
mov
mov
cmp
cld
aad
lahf
out
push
push
sub
cs
imul
add
jno
inc
fucomi
xor
jns
cltd
das
stos
push
inc
aad
pop
in
and
mov
push
sub
fsubl
and
idivb
inc
mov
push
out
dec
into
pop
push
jecxz
inc
repnz
xlat
pop
rorb
dec
loopne
pop
mov
mov
adc
pop
das
cwtl
xchg
xlat
cmp
mov
fwait
sbb
imul
jnp
scas
and
in
popf
and
dec
fs
jg
mov
mov
push
in
mov
pop
sbb
mov
imul
cmpb
and
clc
lcall
mov
cld
fistps
fwait
mov
xchg
int3
sbb
add
push
jmp
cvtps2pd
mov
in
sbb
cmc
pop
xchg
xor
sahf
push
cmpsl
push
divl
push
mov
jns
push
xchg
pop
push
xor
and
push
and
imul
js
mov
adc
pop
repz
fs
int
dec
push
fs
xor
cli
jns
lret
jne
sarb
sti
jbe
jns
pushf
aad
aad
mov
cs
inc
cs
fwait
adc
mov
xor
inc
daa
mov
subl
dec
hlt
push
rol
leave
and
or
popf
outsl
xchg
fldln2
in
pop
int3
jae
mov
in
in
jno,pt
pop
out
or
lahf
sbb
outsb
push
inc
sbb
mov
enter
push
cmp
mov
sub
aad
out
imul
scas
je
fcom
xlat
pop
inc
js
aam
jg
outsl
add
jbe
jnp
adc
hlt
push
add
clc
loopne
and
ret
xchg
sub
cmp
adcl
movsb
hlt
inc
ds
jmp
xor
cs
int
push
mov
rorl
fwait
dec
mov
imul
out
cmp
or
loopne
movsl
push
jl
mov
xor
cmp
popf
mov
xchg
xchg
mov
out
cmp
scas
pusha
xchg
jb
fsubrs
shlb
inc
dec
int
mov
shrl
imul
cs
out
xchg
and
in
popa
mov
xchg
and
incl
sub
mov
mov
and
adc
xchg
daa
push
mov
lret
out
dec
pop
cmpl
loopnew
xor
and
adc
mov
dec
mov
dec
push
scas
mov
xchg
daa
mov
jns
mov
rcr
stos
subb
sti
xchg
jnp
dec
das
dec
mov
dec
adc
mov
fwait
pop
loop
out
pop
or
ss
cmc
notl
cmp
cmp
push
test
dec
add
test
jge
cld
push
aas
and
iret
mov
xor
cmp
adc
pop
jnp
fcom
or
jnp
test
repnz
mov
stc
mov
pop
or
dec
daa
jne
xchg
lret
add
push
and
ret
sub
mov
adc
sub
notb
imul
loop,pn
repz
jge
push
add
lods
or
enter
adc
es
lds
jb
inc
mov
push
push
xchg
xor
mov
popa
push
xchg
or
popa
mov
bound
scas
ret
int
test
lock
pop
mov
cs
push
ja
scas
xchg
jmp
cli
sbb
fsub
sti
stos
push
sti
sub
push
pop
cmp
mov
hlt
inc
icebp
jbe
xlat
push
xchg
xor
jb
jmp
xor
call
push
add
popf
xor
rcrl
inc
orl
ja
inc
cmp
jns
sti
jne
dec
insb
mov
out
and
pop
dec
sbb
mov
gs
iret
adc
subl
movsb
cli
mov
out
pop
jge
mov
jae,pt
mov
mov
cs
xor
dec
movsb
repz
sbb
in
shlb
or
out
inc
adc
pop
mov
fisubrs
pop
dec
pop
xor
mov
or
popf
or
iret
clc
stos
mov
mov
bnd
cmp
xlat
mov
mov
fiaddl
xchg
adc
and
loope
inc
sbbl
jbe
inc
fisttpll
sahf
fidivrl
jg
dec
icebp
jmp
adc
push
stos
mov
cltd
es
mov
cmpsb
inc
pop
iret
pop
mov
push
stc
inc
call
inc
call
movsl
enter
pop
popa
jbe
mov
add
xlat
nop
test
mov
mov
and
or
xchg
and
outsl
xor
les
pop
je
sbb
ffree
lret
insb
ss
dec
jb
rcrb
mov
jo
fcomi
or
push
xchg
push
data16
xchg
fimuls
add
cwtl
jmp
xor
mov
jp
ret
aas
repz
add
insl
inc
sbb
xlat
pop
std
outsb
outsb
rclb
sbb
sahf
jge
cld
sub
subb
cmc
or
sub
xlat
jnp
dec
push
sub
or
test
pop
and
mov
jmp
xor
leave
dec
lock
jl
in
rcll
jl
jbe
repz
loop
fbld
cld
push
addr16
xchg
flds
out
pushf
mov
hlt
imul
addr16
dec
fdivs
inc
inc
lcall
ret
jo
loope
popf
inc
jne
cmpsl
out
negb
test
and
loope
orl
push
leave
mov
mov
lahf
or
lods
lock
inc
imul
incb
lock
fcmovb
sbb
ds
mov
cmpsl
fucomip
sbb
gs
loope
cli
push
or
xchg
add
sub
xchg
mov
repz
and
pop
jo
cmpb
xor
jecxz
int3
dec
pop
and
cmp
flds
cld
push
test
mov
pusha
push
push
cld
mov
jno
xor
pop
test
mov
or
push
dec
sbb
sbb
std
popf
add
inc
mov
mov
mov
pop
cltd
sub
mov
mov
and
xor
lea
shrb
push
xchg
push
outsb
icebp
xor
push
sub
mov
std
sti
xchg
sbbl
mov
cld
js
negb
fstpt
shrb
mov
mov
or
imul
daa
imul
mov
pop
stos
xchg
and
test
popf
jge
sub
aas
mov
into
fimull
outsl
inc
xor
mov
int3
or
mov
fucomi
fstpt
jb
daa
call
jns
lock
pop
sbb
xchg
inc
xchg
pop
push
repnz
testl
xor
push
xor
fdivrl
adc
mov
xlat
jg
sbb
fisubrl
scas
jb
pop
pop
call
pop
and
sub
nop
lds
sub
xchg
fcmovnb
xor
stos
out
in
dec
xor
cmp
dec
orl
inc
pop
insb
fldenv
aam
sarb
lahf
shr
push
fdivs
or
insb
cli
inc
sahf
lea
add
push
pop
fsub
fbstp
mov
aad
inc
enter
xor
stos
dec
cld
clc
adc
data16
in
faddp
hlt
cmc
inc
pop
and
mov
push
testl
and
mov
scas
out
jecxz
dec
jae
sub
ret
dec
cmp
ret
lods
jne
pop
adc
inc
into
loope
jbe
fs
sbb
roll
call
jp
mov
test
sbb
imul
or
push
es
insb
divb
movsb
xor
cmp
adc
cmpsb
xor
pop
aam
int3
nop
notb
push
stc
cltd
push
jmp
ret
in
fs
mov
movsl
les
test
mov
adc
push
cmp
jp
lret
test
xor
dec
mov
push
call
iret
mov
fisttpll
mov
add
mov
inc
sar
out
jo
or
or
mov
xchg
or
xchg
jl
scas
sub
ds
sub
pop
xor
ds
pop
pop
leave
stc
jge
inc
xchg
and
filds
pop
shrl
inc
push
and
jo
in
xchg
jmp
xorb
adc
mov
mov
push
jno
out
jnp
sub
pop
mov
cmp
jl
mov
pop
jge
add
mov
std
ljmp
jo
call
insb
mov
js
mov
repz
std
nop
stos
push
gs
xchg
jle
in
lock
sub
sti
inc
mov
mov
mov
imul
out
mov
js
adc
mov
jne
push
sub
jnp
add
repz
outsl
fcmovu
push
loopne
lods
cwtl
dec
inc
js
lret
negb
lods
mov
jne
adc
aam
jmp
or
pop
pop
out
out
lds
andl
fiadds
cmp
loop
jno
inc
mov
shlb
push
pop
cmp
pop
int
int3
mov
dec
dec
and
xor
xor
dec
sbb
pop
and
ror
lret
mov
push
into
and
aaa
pop
xor
test
and
ja
fdivrl
xchg
push
adc
xor
dec
not
test
sub
xor
xchg
bound
or
faddl
arpl
mov
or
push
stc
hlt
mov
dec
outsb
sbb
pop
add
push
xchg
cli
adc
into
sbb
cmp
sbb
test
or
sarl
jecxz
ror
and
aaa
cmp
xchg
shll
pop
lods
mov
insl
sbb
lea
test
ljmp
outsl
pop
enter
xor
and
add
or
push
add
into
jg
adc
aam
hlt
testb
loopne
mov
divb
nop
icebp
out
sub
orb
mov
adc
dec
bound
adc
mov
test
or
ds
adcl
inc
arpl
js
aam
imul
fwait
loop
cs
decl
jo
fsubs
or
aad
jae
and
in
xchg
stos
notb
fs
cwtl
stc
fwait
adc
jb
repz
push
mov
repz
dec
mov
into
bnd
inc
mov
push
cwtl
outsb
ljmp
jmp
jmp
arpl
out
popf
cmp
push
cs
iret
inc
fimull
jl
movsb
mov
xor
add
aam
je
cmpsl
cmp
push
xor
xchg
dec
movsb
inc
mov
mov
pop
jl
and
in
lea
sbb
in
mov
stc
rcrl
pop
nop
cmp
pop
mov
stc
scas
sti
sti
dec
daa
insl
mov
dec
sub
rorb
ret
inc
push
mov
mov
and
insb
jne
jbe
out
jns
cld
push
vpunpckhdq
addr16
add
jno
lret
add
sbbl
mov
pushf
and
mov
leave
inc
dec
ret
xor
fnstcw
dec
adc
aad
mov
cwtl
rcrb
movsl
cli
addr16
mov
sar
push
jne
popf
les
inc
sbb
lods
ds
mov
roll
test
pop
shll
aaa
xor
adc
lods
ret
mov
lods
shrb
popf
sub
mov
inc
outsb
ja
jl
popa
lret
adc
std
cmp
mov
jl
or
adc
adcb
lret
adc
or
cltd
jl
aam
lds
aaa
cmp
jns
int
push
add
inc
mov
push
adc
ret
out
popf
jno
cld
cmp
scas
nop
sbb
and
das
test
nop
outsb
sbb
or
jmp
mov
ss
mov
dec
and
fcmovnbe
mov
fs
add
aam
jl
test
negl
sarl
push
xchg
imull
mov
xchg
and
or
xchg
lea
shlb
jg
insl
sub
fistpl
inc
shlb
pop
dec
xchg
ljmp
pop
insl
leave
test
pop
out
xor
jmp
call
in
jbe
push
pushf
out
les
cmp
fwait
push
aad
jg
jle
or
xchg
inc
orl
sbbb
mov
lret
adcl
popa
cmpsb
rcrb
dec
shl
in
je
or
or
pop
mov
faddl
lret
inc
addr16
pop
ficomps
lods
insl
outsb
mov
lods
call
jnp
in
cmp
dec
mov
xchg
add
imulb
push
and
cmc
sub
pushf
repnz
mov
int
inc
jmp
js
sarb
sbb
test
lods
clc
iret
imul
cmp
xchg
je
pushf
outsb
xor
fnstcw
fwait
xchg
cwtl
pop
sbb
nop
imull
jp
cmp
cmp
pusha
pop
and
mov
stc
subb
out
or
mov
fbld
shlb
addl
push
cld
outsb
cltd
cmpsb
pop
arpl
shrl
cmc
add
ljmp
lods
jae
aaa
adc
inc
lcall
pop
xor
mov
xchg
hlt
lcall
or
cmp
hlt
cld
shlb
rcr
push
pop
sub
pop
xchg
pushl
sbb
pop
je
and
orl
aaa
int
pop
sbb
sub
inc
shlb
mov
out
mov
push
aad
cmp
cld
sub
push
adc
pop
and
mov
vcvttps2dq
cltd
fstpl
in
cmp
imul
mov
sahf
or
insl
sahf
scas
jne
xchg
ret
cltd
cltd
bnd
mov
cmp
mov
aas
repz
lret
adc
js
sub
cmp
or
push
adcl
iret
push
xor
mov
sbb
orl
mov
mov
cmp
push
lea
frstor
add
pop
pop
sbbb
cmpsl
addl
imul
test
ffree
dec
mov
cmpsb
out
loop
iret
mov
mov
sub
inc
andl
cmp
cwtl
js
and
mov
bswap
int3
xlat
and
mov
adcl
push
ljmp
and
aad
push
adc
lea
out
inc
add
sbb
pop
idivb
int
jecxz
lods
inc
jge
sub
push
fdivl
mov
mov
jmp
mov
test
subb
scas
jecxz
hlt
sti
test
fcmovb
jg
jo
jg
push
daa
jno
insl
sarl
popa
in
fcoms
ss
dec
dec
xchg
inc
inc
scas
xchg
jne
cli
xchg
dec
sbb
mov
inc
sarb
aaa
mov
inc
jmp
cmp
rcll
mov
xor
mov
jp
sub
aas
ja
cmp
inc
dec
insl
xchg
pop
sti
rolb
iret
pop
push
xchg
cmovo
test
jp
dec
bound
cmp
mov
and
mov
js
xchg
xor
cmp
sub
inc
inc
testb
je
mov
mulb
xor
pop
add
pop
xchg
lahf
sub
cmp
repnz
repz
adc
idivl
in
pop
mov
xlat
cmpxchg
mov
sti
push
cwtl
cmpsb
jnp
inc
fldenv
cmpsl
mov
mov
sub
add
cs
cmp
fadd
mov
iret
or
pop
or
pusha
xchg
outsb
lcall
sub
mov
sub
orb
sub
data16
cld
dec
pop
test
pop
fisubs
pop
push
lock
mov
inc
mov
daa
mov
gs
fdivrl
sar
xchg
pop
jae
push
jmp
repnz
ficomps
ljmp
lods
mov
adc
int3
int
jae
mov
ja
adc
dec
push
inc
push
arpl
or
xorl
aaa
jbe
mov
ss
mov
inc
push
or
lea
push
jb
push
sbb
inc
fldenv
adc
adc
fsubrs
sahf
movsb
add
in
in
xor
outsl
repz
push
popf
or
mov
fmull
nop
mov
mov
push
mov
mov
jecxz
cmpsl
add
jecxz
loop
les
cmpl
adc
scas
xchg
push
inc
push
jmp
in
bound
pop
pop
pop
push
cmp
ja
mov
adc
rcl
test
sbb
mov
adc
dec
in
sarb
cli
push
adc
mov
faddl
mov
jmp
psubq
mov
insl
push
jge
cmpsb
push
sub
int
add
push
and
and
sbb
aaa
fcoms
cmc
aad
mov
dec
arpl
rorb
pop
inc
outsl
lahf
ss
xchg
stos
sbb
cwtl
add
bound
into
inc
jg
cld
fsubrl
sbbb
inc
cwtl
add
imul
daa
mov
addr16
cli
lods
push
or
and
push
mov
daa
push
push
pop
xchg
add
ficompl
hlt
and
loop
jnp
bound
das
xchg
xchg
pusha
icebp
movsb
outsb
push
nop
mov
icebp
into
je
sahf
sbb
adc
daa
cmp
lret
lret
or
mov
mov
add
sbb
fwait
cmc
fsts
cwtl
imul
adc
testb
xchg
jmp
ficoml
sbb
aad
inc
out
lret
fisubrl
cmp
xor
mov
cmp
cli
imul
jecxz
inc
jbe
adc
stos
push
jge
out
jmp
sub
movsl
ret
mov
mov
jmp
sub
stos
clc
orb
cmp
ret
inc
mov
dec
or
popf
lods
sbb
idivl
outsb
loope
mov
fwait
jns
push
pop
cmp
aam
jg
in
pusha
pop
shl
mov
push
cld
jb
jb
pop
daa
enter
inc
pop
inc
mov
inc
mov
cwtl
lods
inc
xchg
imul
sub
icebp
jmp
and
pop
dec
xor
in
dec
mov
pushf
mov
rcr
and
lods
imul
xchg
adc
inc
les
sub
mov
sahf
push
inc
or
jb
lods
sub
push
jne
sbb
dec
inc
and
cmp
add
xchg
mov
push
daa
pop
hlt
mov
fstpt
pop
leave
xor
leave
cmp
in
pop
ss
std
dec
jl
outsl
cwtl
add
in
aas
xor
or
lock
ja
dec
fstl
pop
mov
jbe
mov
sbb
enter
xchg
ret
pop
psubusb
sbb
fiadds
push
leave
gs
mov
test
and
imul
lods
mov
lret
hlt
out
or
or
cltd
mov
and
repnz
adc
and
mov
jo
jbe
xchg
or
inc
ret
mov
cmpsb
popf
pushf
roll
rep
push
and
lea
lock
mov
ret
stc
mov
lock
cmpb
xor
pop
xchg
or
imul
imul
mov
lcall
daa
sub
sti
push
popa
push
pop
xchg
xchg
pop
rclb
adc
xchg
repnz
and
jns
pop
call
lahf
mov
rorl
xor
and
inc
mov
jno
pop
cmp
mov
dec
dec
add
push
and
and
filds
je
mov
nop
cmc
into
pop
scas
jl
mov
cli
icebp
popa
dec
subl
mov
jae
sbb
xchg
or
shl
xchg
shll
stos
fdivr
mov
adc
sub
pop
sub
cwtl
sbb
imul
cmp
fisubs
arpl
pushf
rolb
adc
jmp
inc
in
add
popl
and
xlat
xlat
test
xchg
ja
ljmp
jle
sub
or
or
pushf
icebp
std
je
jge
jae
adc
and
pop
jbe
cmp
mov
or
jge
popa
sti
sub
repz
adc
sti
xlat
mov
dec
sbb
or
subb
xchg
and
fidivrl
fld
aad
and
xchg
loopne
loop
xlat
add
fiaddl
shrb
cmp
mov
fisttpl
jle
jecxz
js
ljmp
dec
dec
fisubs
mov
in
pop
test
jp
push
adc
loopne
fstps
loope
dec
inc
shll
pop
sub
test
mov
inc
flds
push
add
aam
ja
fwait
add
mov
dec
adc
cmpsl
std
cs
ds
fldenv
cmp
dec
fiadds
fsubl
test
push
icebp
jecxz
or
pusha
out
in
push
mov
arpl
fcomip
lock
mov
lock
cmp
fisttpll
mov
in
hlt
mov
loopne
fstl
and
jno
dec
dec
push
gs
jp
jp
sbb
imul
movsb
mov
sbbb
inc
pop
mov
mov
mov
subb
cwtl
add
rcrb
test
xlat
ds
stos
sbb
push
imul
cwtl
out
mov
hlt
sub
mov
dec
mov
mov
jo
rorb
iret
cmp
cltd
push
fld
sub
loop
fsubrs
fwait
test
dec
push
rclb
sub
sbb
popf
outsb
nop
mov
lea
arpl
scas
loopne
and
jmp
and
push
dec
ds
pop
mov
addb
push
cmp
inc
shlb
imul
shr
mov
mov
icebp
dec
enter
sbb
jne
xchg
test
adc
xor
jbe
pop
in
int
je
sbb
jns
lods
mov
xorb
mov
scas
mov
mov
fucomi
fcmovnu
or
mov
mov
imul
in
or
lea
sub
xchg
sbb
sbb
push
jbe
push
dec
mov
xchg
mov
dec
imul
jb
mov
dec
stos
add
fwait
clc
dec
add
popf
mov
mov
adc
adc
and
lods
enter
cmc
ficomps
dec
cwtl
xor
andb
push
inc
add
test
cmpsb
pop
sub
popf
cli
outsl
popf
xchg
test
sbb
cmp
arpl
lahf
jl
cmc
sub
jg
repz
stc
sub
les
je
mov
fsubrl
orl
lret
xchg
jmp
aaa
shl
mov
or
insl
mov
cwtl
icebp
pop
fstpl
jl
adc
aas
dec
adc
loopne
test
and
mov
jns
shr
mov
lret
adc
push
push
pop
imul
cmp
mov
out
sub
loope
mov
imul
ja
packuswb
jge
cmp
mov
ja
sarl
inc
pop
es
dec
lea
stos
pop
lock
adc
lds
setle
cld
test
aad
cmpl
je
out
or
mov
les
stos
mov
xor
ljmp
ljmp
imul
jl
xchg
jne
sbb
inc
push
inc
push
sbb
pushf
push
cmpsl
ljmp
std
dec
sbb
mov
fs
out
stc
xor
sub
pop
push
adc
cmp
or
push
jg
ficomps
test
pop
jbe
sti
push
sbb
mov
cs
insl
pop
popf
xchg
cmp
sub
cmc
test
fwait
mov
xchg
mov
mov
mov
out
push
stos
data16
enter
bound
ljmp
ficoml
and
out
xchg
xchg
xchg
jns
loope
jl
push
push
mov
jnp
add
or
mov
ss
mov
inc
mov
mov
incb
stos
out
jmp
ret
mulb
and
pop
pop
lcall
scas
mov
cmpsl
stos
push
xchg
loop
mov
jl
and
mov
inc
xor
rcll
ret
cltd
jb
xor
repz
ss
je
out
leave
inc
dec
out
or
push
in
hlt
mov
mov
enter
push
pop
lcall
pop
pop
out
or
and
xor
fwait
adc
clc
dec
pop
cld
pop
je
xor
mov
addr16
inc
and
xor
std
sub
filds
add
dec
sbb
mov
enter
jmp
repz
test
loopne
test
sbb
pop
cltd
clc
mov
jns
ret
cli
mov
ret
push
mov
pop
das
and
mov
push
mov
jmp
stc
popf
sahf
jle
scas
in
ds
push
jl
push
add
popf
loopew
fcmovnbe
xor
pushf
or
push
inc
fcoms
popf
dec
gs
and
sarl
in
repnz
xchg
test
inc
add
fcompl
lret
jnp
mov
in
and
out
out
in
adc
rclb
push
or
clc
mov
and
mov
or
sahf
adc
dec
push
imul
decl
push
pop
into
imul
dec
lds
pop
notb
lcall
sbb
lret
add
pop
xchg
nop
sub
add
xor
sarb
lret
xchg
insb
js
fldt
jecxz
jo
pop
xchg
and
push
arpl
cwtl
frstor
dec
mov
pop
imulb
notl
in
insb
adcl
push
or
inc
cwtl
sub
push
adc
or
jle
es
add
insb
nop
inc
fadds
out
jno
sub
inc
movsl
les
rcll
aam
jecxz
into
repnz
dec
and
mov
lock
movsb
scas
fcomps
movsb
adc
cmp
jbe
sub
lods
rol
es
xor
arpl
cmpb
xor
mov
cwtl
insl
jae
movsb
inc
push
jge
add
lock
loopne
daa
adc
xchg
cmpl
int
mov
scas
mov
adc
mov
pop
dec
out
enter
lret
cmp
out
cmpsl
inc
jecxz
lcall
jae
daa
jns
sbb
add
sti
es
mov
gs
icebp
sbb
nop
xor
xor
dec
or
push
fs
xchg
filds
mov
pop
std
inc
mov
pop
mov
dec
mov
pop
push
cmp
movsl
loope
cld
add
jns
or
mov
lock
dec
ret
xchg
fisttpll
cmp
in
out
mov
xchg
nop
inc
push
lret
cmp
addr16
xchg
dec
jecxz
lahf
fimull
loop
mov
scas
out
xchg
shr
nopl
cmp
pushl
mov
mov
out
repz
push
push
adc
dec
jle
cltd
xchg
fstps
popf
inc
inc
lret
mov
sub
and
pop
pop
jae
cld
xor
ja
sub
subb
sbb
cmp
xor
iret
pop
iret
into
lock
shl
dec
test
imul
ficoml
pusha
dec
adc
cmc
call
add
push
sbbb
or
xchg
test
and
clc
int
push
sub
fstl
jns
leave
pop
xrelease
lahf
pop
hlt
jne
fstl
and
or
hlt
xor
mov
xchg
mov
xchg
sub
insl
mov
ja
cltd
xchg
pusha
mov
hlt
rolb
inc
adc
cmp
push
shlb
daa
jle
cmp
out
movsl
pop
xchg
or
push
fldenv
fadd
or
xor
out
mov
lods
imul
mov
bound
loope
mov
popf
mov
cs
mov
fimull
push
icebp
loope
or
test
xchg
dec
call
sub
aad
bound
sbb
mov
out
ficoml
pop
xor
xor
imul
rcrl
cli
xchg
nop
movsl
imul
push
lret
lret
add
inc
mov
sbb
inc
imul
subl
in
push
insl
leave
lea
fbld
sub
xchg
push
cwtl
xchg
mov
sub
fs
adc
mov
gs
mov
pop
inc
cmpsb
orb
lret
pop
aad
into
das
sub
lock
xorb
ja
push
mov
inc
cli
mov
fwait
outsb
aas
std
clc
stos
push
movsl
gs
mov
stos
jle
pusha
adc
sarb
bound
lcall
xchg
mov
jmp
cmp
pusha
bound
xor
rorl
xchg
fisubrl
in
mov
sbb
and
xor
lods
arpl
imul
xor
pusha
mov
pop
or
and
mov
scas
flds
mov
mov
add
jbe
push
adc
enter
out
jg
push
jp
jo
jle
jge
push
movsb
mov
rclb
adcb
inc
mov
popf
add
scas
hlt
mov
dec
pop
ret
add
jg
lods
mov
mov
loope
mov
sbb
in
int3
stc
adc
push
dec
ret
push
scas
rcll
mov
mov
mov
das
push
push
scas
jmp
pop
mov
leave
xlat
fwait
mov
out
dec
mov
mov
sti
add
xor
lahf
mov
pop
pop
cli
xor
repz
push
push
bound
mov
test
mov
rol
sbb
addr16
std
sbb
and
cmp
data16
jle
gs
bound
out
mov
jns
stos
cmp
dec
jnp
int3
scas
sub
cwtl
pop
mov
dec
ljmp
pop
push
testl
pop
fnsave
cli
aad
lahf
rorb
mov
xlat
cwtl
pop
pop
stos
dec
test
stos
cwtl
add
inc
fisubs
ja
adc
lds
in
jecxz
mov
jns
add
loopne
jno
je
pusha
popa
ret
pop
dec
cltd
add
jae
pop
iret
and
stos
jmp
out
jmp
sbb
test
out
mov
movsl
aas
add
xor
cmp
movsb
xchg
fcmovnu
push
das
inc
mul
jle
loope
cmp
fmul
cmc
xchg
rclb
cmpsl
pop
cmpsb
cmpsl
mov
jl
insb
lods
test
jo,pn
leave
fnstcw
jmp
das
shrl
cmc
add
pop
scas
push
sti
fucomp
aam
cmpsl
dec
sub
loope
mov
addr16
mov
xchg
mov
test
ja
mov
leave
int
add
popf
push
rorl
jmp
jne
push
xorl
xchg
rcll
dec
mov
sub
into
inc
inc
adc
mov
pop
dec
push
or
sub
out
lcall
int3
sbb
fsub
jg
repnz
cmp
mov
test
insb
mov
sbb
add
cs
dec
loope
mov
push
dec
and
gs
outsb
rolb
adc
loopne
cmp
pop
fiaddl
jmp
out
leave
mov
loope
jbe
sbb
mov
movsb
adc
enter
adc
jle
div
adc
xchg
iret
dec
imul
movsb
push
mov
push
sbb
sbb
add
adc
and
xor
paddsb
mov
filds
sub
cmp
mov
cmp
out
jno
mov
jne
xlat
mov
popf
mov
inc
push
lret
mov
or
mov
xor
dec
xchg
add
and
or
add
jecxz
push
sub
lahf
mov
dec
lock
ror
add
lea
and
or
jne
rorl
ret
out
jp
fiadds
pop
loop
xchg
cs
shrb
daa
add
or
das
or
loop
xchg
inc
xchg
test
cmp
sbb
lret
mov
sbb
or
jo
repnz
sarl
push
xor
mov
cli
fcomip
in
adc
lods
or
gs
and
adc
leave
sub
into
xor
das
shrl
rcrl
out
dec
out
pusha
jo
push
push
cmp
inc
in
rcrl
xchg
mov
into
jmp
and
leave
fists
and
dec
cld
fiaddl
lahf
sahf
xchg
std
rorb
sub
mov
fwait
ljmp
xchg
decl
dec
sbb
pop
test
jecxz
inc
sti
add
adc
testb
push
jmp
out
jmp
lods
xchg
les
push
dec
cmp
jge
mov
mov
in
xor
in
mov
sarl
adc
mov
out
mov
popf
gs
dec
and
push
rol
ds
cmpsl
mov
lcall
stos
popa
in
pushf
push
and
aad
or
iret
addb
test
rcll
cli
test
push
pusha
or
paddsb
shr
lods
jg
scas
push
and
or
xchg
fnstcw
adc
faddp
ret
xor
mov
hlt
subb
adc
mov
cmp
and
imul
movsl
icebp
dec
dec
out
inc
ss
lea
rorl
xchg
jmp
push
arpl
mov
popf
test
xchg
in
cmpsl
add
pop
movsb
loope
dec
orl
jnp
das
mov
adc
adc
cld
je
jp
ret
into
add
inc
movsl
xchg
xchg
xchg
dec
repz
or
subl
loope
xor
xor
imul
mov
jbe
cld
and
rorb
mov
pop
xor
xlat
out
adc
xchg
pop
repnz
js
mov
out
clc
clc
pop
shrb
sub
and
or
int3
imul
andl
cli
dec
jb
jns
leave
clc
iret
frstor
rcrb
shufps
pop
sar
mov
shr
das
aaa
dec
inc
pop
mov
sub
inc
aad
cmp
jo
mov
cmc
xchg
dec
ss
jmp
jmp
pop
adc
push
push
fimull
push
fwait
pop
and
sbb
aaa
dec
or
testb
push
daa
add
mov
and
cwtl
xchg
mov
cmp
bound
cli
sub
add
mov
xor
aad
fwait
addr16
push
aad
lret
mov
push
jecxz
mov
or
mov
or
cmp
dec
out
mov
mov
cmc
scas
and
or
jmp
xchg
and
mov
sbb
in
lds
sub
mov
add
pop
dec
jle
rorb
sub
mov
cmp
pushf
jg
cmp
pop
sbb
dec
mov
loop
lret
pop
mov
lcall
cli
shll
dec
jne
repz
pop
test
jo
leave
rorb
xchg
in
loopne
add
xor
and
in
inc
dec
xor
enter
loop
ret
xor
lret
stos
rcll
shll
stc
inc
pushf
ret
repz
into
out
sub
sub
cmc
xor
insl
add
inc
mov
pop
push
jae,pt
add
icebp
ds
mov
jp
cmp
push
call
aaa
ret
or
dec
fisttpll
std
fmuls
shll
add
sub
mov
dec
xor
adc
mov
mov
xchg
or
sbb
push
sbb
or
jnp
pop
rcrl
andb
in
out
mov
test
popa
jnp
or
xchg
ror
push
push
loopne
fs
or
mov
dec
adc
test
lahf
ret
lret
out
cltd
mov
jle
sbb
fiadds
imul
aas
inc
sbbb
lea
xchg
mov
jae
sub
lods
popa
add
mov
adc
shll
inc
adc
inc
cwtl
jecxz
scas
in
xchg
imul
js
loope
jl
xor
add
rolb
inc
xchg
not
dec
dec
arpl
sti
sub
or
test
fcomps
dec
cmp
pop
adc
dec
push
or
fiadds
pop
shrb
addr16
or
sbb
and
roll
cli
insb
lcall
xor
xor
xchg
pop
pop
addl
dec
xchg
mov
mov
fs
insl
aam
xchg
int3
jle
rcrb
pop
or
popf
jmp
dec
shll
add
mov
xchg
aaa
inc
push
mov
in
lret
sub
xchg
adc
or
pop
data16
push
sarb
adc
add
shl
cltd
push
pop
les
xor
inc
cmp
push
mov
loopne
xor
push
lret
push
stos
repnz
jne
add
dec
jecxz
adc
lock
adc
popa
in
pop
or
jnp
fists
sub
cmpsl
push
inc
inc
mov
push
mov
sbb
add
pop
adc
lret
loope
mov
aam
stc
xor
imul
cmp
outsl
notl
sub
imul
sub
rorl
jecxz
cmp
jge
outsb
inc
xchg
ss
aad
sub
xchg
movnti
cs
orb
jo
xlat
mov
mov
stos
ljmp
stos
scas
sub
pop
daa
pop
pop
sub
mov
bound
mov
scas
push
mov
call
add
sbb
adc
cmp
mov
inc
sbb
test
or
mov
pop
sbb
push
loop
sbb
sti
mov
and
add
mov
push
or
rcll
adc
sub
daa
or
push
imul
and
lahf
aaa
leave
and
sub
dec
xorl
jle
outsl
push
sbb
push
and
xchg
mov
in
jne
sahf
test
xchg
and
cs
sub
xorl
fldenv
jo
mov
cmp
or
dec
test
movsl
pop
loopne
and
icebp
in
cmc
jbe
ficoms
mov
and
xchg
jne
inc
mov
mov
mov
or
gs
pop
xchg
sub
push
adc
int
lds
sahf
pop
test
shrl
les
adc
insl
and
xchg
push
mov
nop
aaa
into
scas
insb
je
ret
aad
jmp
setns
fdivl
ret
insb
or
test
add
mov
mov
dec
push
jg
test
sbb
sub
or
mov
notb
lock
test
test
mov
mov
mov
mull
ja
jg
nop
mov
mov
xchg
iret
fsubrl
push
xlat
aad
sbb
dec
cmc
inc
xchg
mov
xor
push
in
adc
nop
jbe
sbb
nop
mov
lock
xchg
adc
rorl
das
push
jno
sbb
in
sar
cltd
call
cmp
insl
xchg
mov
push
aaa
sub
mov
push
pop
ljmp
aam
mov
stc
push
cmp
inc
jno
aam
outsb
xor
adc
inc
fistps
sub
fcmove
xchg
aaa
add
bound
xor
and
sub
inc
enter
cltd
movsl
pop
in
pmaddwd
mov
repnz
push
lahf
in
lea
add
mov
loope
daa
out
lds
dec
ficompl
mov
shrb
lahf
jno
sub
cmp
xchg
test
fistpl
add
daa
pop
fwait
sti
mov
dec
loop
int3
insb
fdivl
rol
loopne
xlat
mov
pushf
scas
push
push
mov
cmpsl
js
arpl
mov
addb
add
mov
jge
shr
dec
jbe
pop
and
xor
cwtl
push
popf
fxch
lock
test
lahf
or
fwait
aad
and
js
xchg
xor
adc
mov
aam
sub
push
push
mov
lahf
adc
lea
jbe
or
inc
test
mov
or
adc
add
clc
popa
pushf
mov
outsl
dec
add
jge
mov
ficoml
cli
inc
xlat
mov
jg
mov
xchg
and
sub
add
into
ljmp
mov
mov
out
sub
mov
fistpl
mov
xchg
cld
sub
inc
jne
fs
in
add
into
dec
pop
imul
mov
push
leave
enter
pop
dec
jge
out
rolb
jnp
nop
push
inc
mov
mov
sbb
repz
push
cli
mov
mov
cmp
push
sarl
cmc
stos
xchg
andb
adc
imul
fsubr
jecxz
adc
mov
jo
rclb
testl
xor
fdivs
push
pop
sar
add
jnp
cli
mov
ficomps
jg
push
outsb
mov
jl
mov
dec
ja
add
icebp
add
lods
js
mov
shl
frstor
ret
mov
add
loop
ds
loope
xchg
sub
and
test
mov
call
sub
in
shlb
adc
jge
scas
jno
repnz
pop
mov
cmp
xor
jb
outsl
xor
les
mov
jne
loopne
bound
inc
lret
sub
jno
mov
mov
add
mov
int
cmp
test
mov
addr16
popa
cmp
hlt
dec
les
add
sub
pop
popf
mov
xchg
mov
or
push
call
mov
xchg
lea
inc
sub
mov
stos
lret
xchg
jnp
stos
add
test
mov
and
popa
and
int
jecxz
xchg
dec
lret
sub
shrl
mov
stc
push
push
imul
and
sti
jg
icebp
xor
mov
push
mov
pop
pop
pop
data16
scas
nop
add
sub
push
repnz
data16
ret
cmp
loop
and
add
push
and
mov
jl
lods
mov
sub
jo
xorb
arpl
add
and
lcall
ja
dec
push
inc
mov
hlt
test
inc
jl
adc
push
cmp
js
add
cmp
mov
mov
cmpsl
lods
cld
sbb
pop
ja
out
rol
in
cmpsl
adc
jbe
out
jp
push
lret
out
sbb
adc
dec
dec
rclb
ss
cmp
mov
push
xor
cmpsl
add
jns
fdivrp
pop
jo
hlt
js
adc
cld
lahf
js
push
add
mov
sub
cmpl
sbb
out
inc
inc
nop
adc
inc
shll
filds
mov
xor
lods
in
cli
cmp
mov
rolb
dec
xor
and
psubd
loopne
hlt
cmp
jg
xchg
lock
push
fcoml
mov
mov
fadds
mov
adc
jns
xchg
out
xchg
insb
pmuludq
test
ljmp
sets
aas
fsubrl
pusha
fistpl
cltd
repnz
sbb
mov
sub
aaa
imull
cmp
sub
xchg
scas
fnstsw
mov
xor
inc
sbb
cwtl
sub
mov
mov
xor
xchg
rdmsr
into
dec
test
mov
lcall
adc
push
loopne
lea
mov
jge
cmpsb
push
cld
loop
sub
aam
popf
and
mov
mov
xor
pop
adc
in
les
sub
or
icebp
or
mov
aas
lret
mov
jmp
pusha
pusha
in
mov
in
sbb
jbe
and
push
in
fidivrl
pop
or
icebp
jno
out
lcall
bound
out
sbb
sub
orl
out
loop
or
stc
faddl
icebp
stc
aad
std
jecxz
jmp
fsubrl
jle
and
and
push
xchg
mov
sub
xor
add
sub
xchg
in
adc
mov
jle
jp
fdivrl
inc
js
sub
loopne
and
fisttpll
inc
out
pop
pop
dec
jmp
test
fdivrs
imul
jbe
or
mov
lahf
hlt
pop
lahf
rorb
dec
outsb
aas
sti
jno
inc
dec
mov
mov
std
mov
out
mov
mov
shlb
push
cmp
xchg
fisttpll
stos
xchg
mov
imul
cltd
pop
mov
mov
pop
addb
cwtl
and
test
mov
pop
enter
ljmp
jns
lret
add
pushf
sahf
mov
daa
cmp
cmp
push
int3
in
arpl
adc
jno
sbb
pop
adc
sbbb
mov
and
jmp
pop
push
aam
adc
neg
xchg
jno
inc
ljmp
leave
xchg
cli
push
inc
test
xlat
inc
sub
push
cmc
icebp
adc
push
lods
test
push
push
in
pop
sbb
push
sti
repz
loop
pop
into
mov
fsubrs
push
mov
lcall
and
jbe
movsb
fcmovb
sarb
nop
repz
iret
lea
dec
imul
cmp
cmpsb
lahf
nop
shrb
add
adc
or
dec
cmc
test
dec
es
xor
jmp
add
popa
mov
xchg
outsl
jmp
mov
inc
mov
cmp
mov
cmp
lock
and
push
or
push
iret
jns
fwait
in
es
mov
imul
test
incb
xchg
mov
in
push
mov
pop
push
repnz
stos
xchg
push
f2xm1
mov
mov
xor
flds
pop
mov
flds
clc
ds
mov
inc
sahf
mov
insb
pop
fdivr
int
mov
mov
jge
xlat
jmp
lods
dec
xor
and
stos
addl
dec
ret
xchg
stc
jp
movsl
sarl
inc
and
pop
sbb
rcr
add
out
mov
lret
jmp
mov
gs
cwtl
mov
adc
ds
sbb
pushf
lret
aam
adc
arpl
inc
sbb
jno
jmp
adc
inc
or
jl
dec
push
mov
xchg
cmpsl
lea
mov
mov
push
imul
ret
add
cmp
and
xchg
pop
arpl
sbbl
clc
clc
jo
scas
call
or
inc
pop
xor
jmp
outsl
int3
adc
adc
mov
adc
mov
lods
stc
sar
std
add
xor
nop
mov
out
aaa
xlat
arpl
pop
pop
ds
inc
divb
xchg
aas
and
and
flds
test
and
test
notb
cmpsb
dec
xor
cmpsl
movsb
or
adc
xchg
inc
stc
sbb
push
test
je
xchg
push
xchg
or
inc
idivl
sub
daa
xor
push
js
lock
dec
data16
lret
xchg
test
mov
mov
dec
popf
das
pop
sbb
js
imul
call
pusha
push
fildll
mov
jne
cmp
sbbb
xchg
dec
mov
sti
roll
mov
or
adc
xor
lods
cmp
jbe
mov
int
mov
jnp
in
pop
sub
ljmp
loope
dec
push
jmp
push
imul
mov
ficoml
call
stc
jne
or
rcll
push
mov
sbb
cmp
testl
mov
mov
test
mov
and
fdivrs
enter
test
ljmp
xchg
xchg
out
jmp
pop
incb
sbb
mov
sub
xor
push
inc
xchg
add
or
or
in
mov
cmp
mov
xchg
or
outsb
pop
jl
fucomip
mov
push
adc
fsubl
mov
andl
mov
test
dec
xor
pop
pop
adc
out
in
cmp
bound
adc
sub
packsswb
push
mov
stos
imul
sti
pop
add
cli
adc
shrl
stc
push
push
loopne
xor
mov
sbb
jno
cmp
xlat
cmp
ds
push
xchg
adc
stos
push
test
add
leave
je
sbb
mov
xor
cmp
outsl
jbe
cmpsl
popf
xor
movsb
jmp
ret
push
sub
test
cmpb
inc
xor
ret
jle
jle
stc
ss
lret
sbb
addr16
in
stos
mov
fisubrs
into
out
xor
adc
lahf
in
pusha
jmp
fcom
fbld
and
repnz
shlb
fcomi
xlat
push
jle
dec
hlt
jo
sbb
and
lods
ret
xchg
je
xchg
out
jb
loop
nopl
stc
out
ja
sub
or
int3
xchg
add
pop
or
cmp
sub
loope
loop
mov
sub
jo
jl
xor
mov
test
pusha
or
fbstp
in
and
pop
jo
pop
lret
dec
pop
in
inc
dec
out
or
fs
and
mov
xchg
jecxz
movsb
xor
sub
fbstp
cli
mov
fnstsw
inc
and
sub
shll
insl
inc
shrb
xlat
pop
leave
loop
sbb
bound
inc
mov
popf
adc
dec
xchg
lea
call
pop
mov
push
mov
jb
clc
mov
add
or
test
dec
push
mov
clc
jg
cs
or
jbe
inc
cld
xor
ret
push
pop
mov
lods
rorl
jmp
mov
inc
aam
filds
cltd
push
mov
sub
inc
mov
cmpsb
ja
lahf
ds
or
arpl
je
lds
call
adc
in
push
repz
xchg
cli
jae
cmp
lds
es
mov
mov
outsb
cltd
ss
pop
in
insl
or
stc
cmpsl
test
ds
and
rcr
jae
xchg
lds
cmp
mov
pop
inc
fdivr
fs
jb
cmp
add
inc
adc
mov
shll
sub
dec
mov
add
cmp
mov
test
xchg
faddl
pusha
jbe
jmp
xor
mov
inc
outsl
jns
fadd
push
in
lret
fisttpll
sub
data16
adc
dec
mov
ds
push
lock
out
dec
test
dec
fstpt
cs
int
aam
lock
push
add
imul
lods
mov
jl
jb
xchg
arpl
and
mov
in
mov
and
andb
in
cmp
inc
or
iret
stos
mov
xchg
mov
mov
mov
lea
out
in
adc
push
arpl
fdivr
movsb
xor
pop
jle
lods
inc
push
daa
ret
pop
jg
in
jnp
add
jmp
mov
sbb
inc
test
and
lret
pop
jp
ret
decb
inc
inc
aad
cmpb
test
mov
std
out
jno
stos
and
sub
mov
cmp
ret
in
test
mov
sbb
jns
leave
adc
and
mov
pop
and
imul
inc
push
cmc
inc
ret
mov
negb
and
push
sub
sahf
or
adc
nop
test
insl
or
adc
jns
or
jp
cmc
cmp
mov
mov
mov
jp
stc
lock
aam
add
and
mov
adc
ret
lds
insl
push
dec
cwtl
dec
fucomi
fsubp
leave
mov
dec
sti
mov
aam
sbb
and
jl
lds
insl
add
pusha
adc
in
mov
xchg
push
loop
dec
pop
nop
movsb
orl
mov
test
in
mov
mov
ljmp
xchg
nop
mov
dec
shlb
sti
adc
mov
movsl
stc
repz
xchg
cld
sub
sbb
xor
cltd
xor
cs
std
stos
fs
mov
jns
mov
sbb
rcrl
mov
ret
fidivrs
and
cmc
mov
bound
clc
mov
inc
adc
add
je
pop
pop
es
cmp
out
pusha
mov
ja
xchg
lods
lock
xlat
mov
cmc
xchg
arpl
fisttps
xor
and
ficoms
popa
mov
test
mov
cmp
or
xchg
fstpl
jbe
and
fwait
lret
push
add
into
sbb
push
int
repnz
inc
jno
sbb
pusha
int
xchg
mov
xor
mov
das
sub
hlt
inc
cltd
jge
xchg
imul
add
or
addb
imul
pop
jo
fmul
and
insb
push
cmpsb
bound
cmpsl
rcrb
add
add
xor
adcb
cmovae
int
es
dec
xor
push
cmpsl
xor
lahf
sbb
adc
mov
sti
inc
push
sbb
push
xor
jnp
xor
in
loope
add
push
aaa
out
aam
shll
xlat
stc
xchg
push
cmp
cli
mov
sub
jns
mov
enter
lahf
cmc
leave
test
cli
pop
and
jp
and
cmp
pop
dec
jmp
dec
xchg
out
in
cmp
outsb
jg
or
xchg
mov
addr16
jo
lret
jbe
xchg
leave
sub
jp
scas
mov
cmpl
xchg
stos
xchg
sub
imull
mov
sub
pop
sahf
lret
lret
jb
sub
xchg
push
add
aad
mul
movsl
subb
inc
xchg
dec
icebp
mov
cld
inc
outsb
cltd
lea
push
loop
pop
cmp
dec
lret
jge
push
rolb
filds
sub
cltd
mov
pusha
mov
test
adc
push
iret
jge
cwtl
movsl
in
jbe
sub
fiadds
adc
test
daa
mov
inc
sub
aas
pusha
fsubr
fsubrl
jle
xchg
enter
or
aam
mov
out
xchg
mov
and
or
xchg
and
mov
dec
enter
outsl
les
or
aaa
jge
jp
adc
pop
movsl
xor
and
in
mov
popf
pop
test
or
mov
pusha
push
lock
add
inc
insb
pop
minps
push
push
or
and
mov
lock
cmp
dec
out
sbb
popf
push
lcall
mov
mov
mov
jge
mov
pop
push
cmp
inc
cld
inc
rclb
fwait
push
test
add
mov
shlb
or
gs
test
jb
mov
aam
outsl
inc
sub
push
hlt
jo
mov
es
sbb
sbb
xlat
imul
fcmovne
sahf
pop
mov
insb
inc
lahf
lret
push
add
inc
insl
push
int3
mov
pop
inc
outsb
ljmp
stc
fidivs
out
aas
dec
loopne
xrelease
aam
nop
fs
push
hlt
push
scas
jp
or
and
inc
movsl
push
adc
push
add
jno
sti
or
cmp
mov
push
call
repz
inc
adc
in
fldcw
jmp
inc
jb
pop
sub
stos
stc
cmp
sar
add
and
mov
test
add
dec
in
or
and
cli
add
xor
pop
lods
lahf
stos
dec
push
jp
cmp
add
lret
adc
outsb
rcrl
lret
js
push
jl
daa
sub
clc
gs
sbb
outsb
xlat
enter
xor
repz
stos
xlat
fstl
dec
loop
scas
ja
inc
push
rorb
inc
fmuls
xchg
cmp
mov
loope
sbb
pop
or
push
dec
stc
inc
lcall
shlb
sub
pop
lods
lahf
push
mov
jno
jne
scas
je
xchg
mov
pop
std
bound
insb
in
addl
lahf
mov
jmp
mov
xor
or
cmp
loopne
int3
stc
xor
jmp
dec
outsl
inc
rorb
xor
push
xchg
push
mov
cmp
loop
adc
ljmp
test
jg
add
add
add
lea
cld
cld
into
xchg
fistl
bound
push
mov
mov
mov
fstpl
test
xchg
sbb
loop
or
and
inc
add
int
sub
call
adcb
mov
filds
lcall
pop
or
xchg
add
out
ret
mov
repz
jb
fwait
test
inc
call
pushf
out
dec
mov
enter
xor
jmp
clc
jge
adc
add
add
out
mov
mov
jp
push
ja
loop
ljmp
xorb
and
arpl
sub
push
sub
lods
iret
and
fistpll
aas
pop
cmpsb
cmp
lds
xchg
fadds
push
push
das
pusha
mov
lods
cmpsl
shll
stc
xchg
adc
call
pop
stos
aam
inc
cmp
ret
mov
pop
addr16
scas
mov
lret
xchg
sahf
add
adc
jmp
xchg
stos
mov
lds
inc
ljmp
jge
into
sbb
movsl
sti
add
fwait
xchg
es
in
les
and
mov
in
or
cltd
xor
fmuls
sarb
add
pop
jae
rclb
pop
mov
sbb
xchg
sub
ret
lahf
sub
leave
mov
les
push
nop
loope
push
xor
push
out
outsb
call
push
nop
and
jbe
or
jge
lock
xchg
aad
out
out
stos
sbb
out
xor
outsl
stos
xchg
jbe
pusha
or
inc
inc
daa
xchg
sbb
and
mov
sbb
ds
pop
jns
scas
imulb
dec
or
pushw
sarb
adc
lret
mov
testl
or
jnp
jg
notb
std
icebp
bound
orb
mov
divl
inc
sbb
pop
std
add
fdiv
mov
imul
add
mov
mov
mov
sbb
xchg
iret
pop
lds
mov
ja
mov
pop
mov
mov
mov
int
fwait
shll
inc
inc
inc
sbb
lock
adc
testb
mov
dec
js
in
lock
ds
mov
nop
fs
mov
mov
int3
and
int
andl
ja
out
xchg
aam
lods
hlt
rcr
sahf
dec
das
lds
or
cltd
push
stc
fldt
stc
mov
lods
loopne
popf
or
hlt
push
out
jmp
pop
inc
out
add
push
shlb
dec
pop
cwtl
add
push
dec
xlat
xchg
jmp
mov
push
xchg
fstps
hlt
sbb
cwtl
push
and
call
mov
inc
into
fcompl
add
fildl
clc
cmp
testl
iret
aad
dec
dec
jl
movsl
repnz
adc
mov
leave
ljmp
mov
jae
sti
push
fstpt
mov
push
jmp
in
pop
jmp
stos
adc
call
pop
dec
rorb
repz
in
cmp
sub
add
cmc
inc
iret
sbb
add
sub
cld
loope
pop
lcall
push
inc
imul
cmpsb
movsl
pop
dec
nop
xchg
jb
mov
mov
push
cli
and
das
subl
cmpsl
xchg
int
mov
jnp
jb
in
pop
jp
pop
iret
add
mov
adc
fcompl
mov
cld
scas
jnp
push
add
mov
fisttpll
adc
xor
rorl
mov
cwtl
mov
inc
stos
out
pop
mov
test
push
ljmp
fdivrl
loope
add
xlat
jnp
imul
imul
addr16
addl
mov
add
xchg
aam
adc
add
pop
add
mov
bound
mov
stc
fisubrl
mov
daa
pop
aam
je
jecxz
fs
test
dec
sub
cwtl
jnp
push
jge
mull
add
aas
es
in
leave
sub
jb
int
sub
leave
aaa
ret
clc
dec
or
subb
das
sti
lods
cmpsl
pushf
data16
scas
push
inc
adc
decl
out
daa
cmp
nop
movsb
loop
dec
pop
dec
fadd
mov
sub
jbe
xor
xor
out
jnp
cmp
sbb
jg
lret
xor
adc
ss
xor
adc
fcomps
inc
ss
push
lret
into
mov
push
dec
into
cmp
leave
push
dec
aad
and
xchg
jns
rclb
mov
pop
bound
dec
pop
and
outsl
xor
js
pop
cmpsb
mov
inc
fisttps
xor
dec
scas
fsubs
mov
mov
pop
int3
loope
inc
pop
enter
adc
inc
cmpsb
jecxz
mov
pop
aaa
popf
pop
in
in
push
add
lret
xchg
sbb
inc
add
std
mov
lret
sti
hlt
movb
dec
mov
shrb
add
cmpsl
stc
daa
xchg
sbb
xor
push
ja
sarb
iret
cli
mov
push
int3
cmp
fimull
arpl
cmpsb
test
lcall
xchg
repnz
cmp
cmp
outsb
test
inc
mov
or
cmpsb
ja
cs
loopne
jns
mov
aam
scas
xlat
dec
mov
sbb
mov
test
leave
fsubp
scas
mov
into
test
xchg
sbb
jge
ret
push
and
sbb
fimull
pusha
or
jne
and
imul
test
jmp
insl
pop
lods
jecxz
mov
addl
mov
adc
sahf
outsb
lea
into
dec
inc
aam
js
adc
mov
adc
cmp
fstps
cld
inc
clc
test
loopne
xchg
stc
popa
inc
clc
stc
lahf
fisubrs
jns
call
les
xor
jmp
gs
movsl
pushf
jbe
pop
and
test
adc
rcl
int3
scas
jecxz
jno
nop
adc
hlt
add
sub
fdivp
pop
lcall
mov
xor
enter
lret
mov
arpl
hlt
pushl
adc
test
dec
mov
adc
mov
stc
adc
ficomps
fwait
orl
shrb
or
mov
lods
pop
out
fxch
clc
call
cmp
push
pushf
push
xlat
and
cli
or
cmp
leave
roll
add
push
mov
imul
sub
imul
js
dec
push
popf
sahf
js
iret
lret
jo
xchg
popf
xchg
sub
pop
cmp
lds
xor
inc
out
sbb
inc
pop
iret
and
insb
scas
add
sub
pop
jns
out
mov
out
xor
push
jmp
ret
fstpt
sbb
insl
inc
xlat
and
and
jmp
out
ret
lret
xchg
cmpsl
sub
jp
jb
dec
fadds
pop
add
lods
loop
std
push
cmpb
jle
ret
outsb
fldl
adc
sbb
lds
bnd
mov
adc
push
mov
sbb
mov
sub
xchg
pop
jnp
pusha
lds
inc
jne
mov
or
bound
fmuls
scas
arpl
out
and
test
mov
out
outsl
pop
pop
mov
lea
fnsave
mov
push
push
jp
inc
out
rcrb
adc
scas
inc
in
cmc
aas
jae
jmp
stos
jmp
xchg
lock
in
xor
lods
and
das
mov
lret
fwait
push
out
das
xor
je
push
es
mov
test
pop
jp
jge
mov
sbb
adc
repnz
shlb
daa
cmc
outsb
shrl
mov
push
adc
cmp
cmp
fstl
in
sti
sar
aam
lea
cmpsb
cmp
pushf
cmp
aas
je
ret
daa
out
inc
in
inc
sub
xchg
inc
and
mov
inc
fcomps
loopne
cmpsl
test
addl
ja
addb
and
int3
sarb
div
dec
adc
xor
outsl
or
mov
and
dec
outsl
aaa
adc
std
mov
mov
adc
imul
xchg
orb
lcall
push
arpl
cltd
mov
cmpsl
ds
pop
gs
mov
cmpsb
push
mov
adc
cmpl
mov
xchg
movsl
sub
push
inc
jno
adc
cmp
addb
pushf
mov
orb
or
andb
xor
pop
ljmp
cmp
xchg
mov
ret
je
cmc
inc
push
sahf
ret
mov
mov
sub
or
pop
mov
pushl
ret
popa
lock
adc
rolb
or
out
ljmp
adc
sbbb
sbb
and
jge
adc
pop
xchg
xchg
hlt
call
xchg
paddd
outsb
mov
pop
and
mov
daa
xor
test
mov
jg
roll
sub
popf
mov
and
sub
ss
mov
aas
xor
mov
rcl
mov
cmp
les
or
dec
mov
cmp
fildll
repz
mov
xor
fsubrs
imulb
ja
mov
ljmp
sub
addr16
adc
outsb
pusha
jl
jle
xchg
hlt
jo
rcr
in
or
and
xchg
enter
andl
mov
pop
mov
hlt
nop
jmp
mov
bound
jo
jno
xchg
cwtl
cmp
fs
mov
movl
ljmp
jnp
je
or
nop
xchg
aas
push
push
dec
fs
adcl
push
sarb
andb
push
xor
insb
jle
xchg
xchg
movsb
inc
xor
jne
or
jae
adc
pop
cmc
ljmp
jo
fisttpl
js
stc
push
daa
lret
dec
mov
add
sbbl
sub
subl
lds
test
mov
cltd
je
test
mov
xor
scas
int3
and
shlb
pop
lods
xor
outsl
cltd
pop
xrelease
bnd
inc
lret
rol
mov
dec
repnz
inc
xchg
cmp
dec
push
pinsrw
pusha
pop
rcrb
inc
clc
fidivs
outsl
daa
fisttps
sbb
jmp
aam
rolb
adc
fildl
out
mov
add
lea
outsl
xchg
lcall
xlat
jo
mov
adc
inc
inc
std
mov
adc
mov
roll
out
xchg
loopne
aad
lcall
idiv
mov
cmp
aas
imul
push
addr16
js
and
call
fcomps
flds
call
mov
push
add
mov
sbb
mov
out
mov
je
xor
push
test
cmp
jns
cmpsl
imul
fwait
lea
cmc
and
dec
and
lods
mov
icebp
mov
bound
aas
sbb
mov
jne
mov
bnd
xchg
test
add
xor
push
pop
and
sbb
jge
xchg
xchg
inc
mov
clc
aad
cld
add
mov
rorl
es
xor
fdivrs
inc
push
aad
pop
pop
dec
mov
insb
sahf
rclb
aad
scas
jg
clc
mov
cmp
pop
inc
adc
into
mov
xchg
push
mov
xchg
mov
jge
add
cs
test
test
or
lret
jge
popa
cld
mov
mov
pop
jns
dec
js
mov
and
test
or
or
pop
in
sahf
cwtl
jno
push
adc
into
addr16
mov
dec
rorb
out
sahf
movsb
adc
imul
pop
jl
lahf
mov
jmp
lods
push
and
mov
addl
cmp
dec
push
pop
sbb
loopne
mov
loop
push
mov
push
mov
scas
fcomps
mov
fcomi
fwait
outsb
in
ffree
mov
push
les
cmpsb
aaa
mov
push
es
sbb
dec
xor
sub
adc
cwtl
inc
loop
or
into
or
xor
lods
call
mov
pop
lock
and
pop
jg
lcall
push
and
pop
lahf
mov
and
cs
inc
aas
addl
fists
push
push
out
fistl
sub
stos
cli
fistps
lds
adc
fimull
pop
add
cwtl
mov
add
lods
dec
jae
mov
pusha
stos
mov
mov
daa
jno
dec
and
movb
pop
shrb
stos
popf
fstp
jns
add
push
bound
pop
ficoml
cltd
jge
fdiv
sbb
inc
add
arpl
mov
out
xor
sub
push
add
add
jo
jecxz
xor
aam
stos
add
xchg
shr
rcrb
add
push
mov
mov
cwtl
cmp
ret
mul
daa
xlat
mov
sbb
icebp
icebp
jge
aaa
xlat
dec
bound
sub
inc
jno
jl
jb
mov
arpl
shl
mov
mov
aam
stos
aam
test
lret
lret
push
xchg
sbb
gs
iret
outsb
mull
xor
and
xchg
xchg
dec
fisttpl
mov
into
sti
pop
data16
arpl
jo
cmpsl
mov
jl
cmc
mov
dec
sbb
dec
mov
test
or
cli
mov
into
arpl
cs
enter
add
ja
dec
dec
xor
sub
xchg
imul
fwait
aaa
nop
popf
sub
sub
faddl
daa
aas
pop
lret
push
scas
push
add
sbb
mov
cwtl
or
addr16
sub
hlt
sbb
dec
or
sti
sub
cli
mov
sub
jns
scas
sub
mov
popl
xor
popl
inc
lds
adc
lock
out
xchg
aas
jp
and
ficoml
scas
gs
jmp
sti
into
rcrb
add
addr16
mov
dec
aad
mov
jecxz
xchg
mov
daa
cltd
pop
fdivrl
sahf
cmp
xor
mov
jae
sub
ret
imul
sbb
je
pushf
out
pop
xor
cmc
test
in
arpl
sub
push
stos
and
xchg
mov
xchg
push
lret
add
jg
call
cld
in
sbb
filds
jp
dec
rcl
mov
shrl
outsl
aad
mov
imul
fidivl
test
fs
push
mov
dec
adc
push
ljmp
stos
mov
dec
loopne
xor
pop
repz
add
popa
and
jbe
dec
dec
dec
fmulp
in
fucomi
push
lock
mov
pop
aam
or
push
or
push
mov
and
pop
fwait
jle
push
jecxz
pop
mov
cwtl
xor
lret
add
incl
sbb
das
push
repnz
jns
xlat
jo
sub
test
outsl
lea
inc
int3
lods
add
ficompl
test
cmp
mov
insl
aad
insb
lahf
js
enter
xlat
add
loopne
fisubl
in
arpl
leave
mov
mov
mov
jae
mov
jp
and
pop
mov
call
push
pop
sub
push
mov
andl
and
or
mov
dec
push
push
cltd
mov
cmp
int3
cltd
and
pop
push
es
push
fwait
or
add
ret
aaa
rcr
mov
in
repz
inc
jge
sti
or
xor
mov
lods
test
cmc
stos
lcall
sarb
fmull
test
je
sub
jmp
repnz
inc
and
inc
shll
imul
test
in
inc
movsl
xlat
orl
insb
shlb
sbb
jp
inc
data16
insl
insb
push
mov
push
inc
adc
jb
jb
inc
sbb
pop
adc
stos
xor
cmpsl
pop
fsubrs
movsb
push
xor
icebp
stos
add
push
shll
mov
dec
or
in
lcall
jl
and
pop
sti
rcl
push
hlt
mov
mov
jge
lds
inc
mov
jo
jbe
push
scas
out
or
or
cwtl
mov
aas
iret
popa
or
mov
clc
out
push
outsb
cwtl
mov
add
lea
xor
jg
push
inc
dec
mov
arpl
popa
pop
dec
lods
jle
aam
add
cmp
mov
add
sbb
call
pop
repnz
cs
add
setb
pusha
add
lods
pop
xor
jg
add
add
jne
push
out
ret
jle
stc
sub
int
jmp
in
hlt
fmulp
cmp
mov
lcall
negb
and
dec
mov
jg
in
xor
ds
mov
lods
push
push
int3
inc
sub
fsubl
in
dec
pop
mov
insl
notb
xor
aas
xchg
rcll
enter
psraw
stos
adc
add
aad
xchg
fsubrs
adc
xor
lds
dec
rcrb
adc
lds
pop
hlt
sbb
movsb
fstp
mov
leave
outsl
push
jae
or
and
mov
in
repnz
mov
test
or
or
sub
sarl
push
pop
mov
pusha
bound
test
mov
adc
cmc
and
jno
add
sub
mov
loopne
insl
lock
pop
movsl
or
addr16
mov
and
scas
mov
mov
xor
sbb
shl
ljmp
test
sbb
iret
mov
repnz
ret
repz
pop
add
and
jae
xchg
std
jne
lods
add
push
cmpsl
jae
cli
add
pop
jo
rorl
enter
dec
outsb
push
cmp
es
xchg
dec
cmp
fwait
mov
add
jle
xor
outsl
cmpsl
scas
or
orl
and
lock
pop
push
fwait
xchg
dec
orl
test
and
xlat
dec
rcr
push
arpl
loop
test
jmp
aad
ret
lock
loope
or
pop
mov
xor
testl
pop
xor
jecxz
push
repz
dec
lock
jecxz
dec
fdivr
jnp
inc
nop
push
in
adc
jbe
inc
cmp
cltd
orb
out
mulb
jns
fidivs
test
shlb
aas
into
stos
mov
jmp
mov
rcl
mov
dec
stos
pop
jp
dec
cld
in
inc
push
mov
lods
fwait
lock
and
or
inc
stos
in
cmc
cli
sti
push
hlt
in
xchg
xlat
xchg
subps
push
dec
mov
out
sbb
xor
push
xor
jo
jge
nop
inc
add
fucomp
in
inc
adc
cltd
jp
sbb
jns
int3
dec
pop
daa
aaa
xchg
mov
sbb
and
dec
sar
and
jmp
jle
dec
cmp
test
cmpsl
and
fistl
and
xchg
incl
in
cmc
jo
xchg
mov
sahf
jae
stos
or
xchg
pop
dec
shrl
inc
mov
dec
scas
loopne
mov
popa
lock
push
sub
arpl
repnz
in
mov
push
sub
push
mov
fcmovnbe
cmp
xor
outsl
fisubs
rcll
call
sti
jae
aam
lcall
lods
inc
push
push
mov
or
push
movsb
sbb
mov
push
jl
or
fnsave
adc
int
bound
cltd
pushf
mov
stos
xor
adc
xor
jnp
popf
outsl
inc
cmp
cwtl
pop
xlat
push
jae
iret
push
jnp
adc
in
fldl
aas
cmp
movsl
aam
inc
push
dec
cmp
fcoms
xlat
and
fcompl
hlt
inc
cmpsb
sub
fnstcw
mov
sbb
jbe
or
les
adc
mov
out
imul
test
aad
ljmp
xor
pop
inc
push
mov
inc
pusha
cmpsl
insb
or
movsb
lret
inc
push
xorl
insb
cmp
gs
cmp
fstpt
rorl
arpl
scas
mov
xor
sub
mov
ret
mov
jns
movl
out
popa
jle
adc
and
jle
inc
ret
out
pop
lret
ret
xor
xor
not
popa
loope
mov
cmpsl
or
dec
icebp
es
icebp
push
gs
dec
jb
cwtl
cwtl
ljmp
movsb
mov
jg
fstpt
xchg
push
jnp
jae
ja
ret
test
pop
add
pop
or
lret
loope
cmp
jl
jbe
and
lcall
orb
enter
sti
popa
mov
test
cmpsl
push
fmull
dec
stos
mov
sub
add
std
and
mov
inc
xchg
xchg
popf
je
push
pop
sbb
dec
add
mov
sbb
mov
and
jmp
sub
shlb
mov
or
mov
push
dec
aaa
cmp
add
test
ljmp
mov
mov
and
xor
imul
fdivrl
inc
jle
iret
stc
cld
pop
sbb
dec
rcr
push
inc
insb
in
dec
ret
cmpsb
pop
lcall
icebp
in
cmp
cmc
xor
xchg
das
scas
push
inc
in
fdivs
or
push
add
mov
andl
ret
enter
pop
cmp
fimull
push
inc
mov
jp
push
jnp
sbb
mov
push
ret
test
test
add
inc
sti
faddl
loop
std
xor
ficoms
lds
cmp
adc
in
sarb
hlt
jno
lods
orb
add
push
cmp
adc
and
movsl
pop
jmp
pusha
cmp
fwait
and
dec
bound
mov
mov
lds
jo
ljmp
sahf
dec
xor
mov
insl
repz
repnz
out
add
iret
pop
jp
into
rolb
adc
rclb
jns
je
test
push
xor
xor
dec
sbbl
out
inc
mov
mov
rcr
repnz
lods
out
dec
jb
out
pop
bound
rcl
gs
add
mov
mov
xchg
mov
nop
aam
gs
imulb
leave
xchg
addr16
repz
scas
mov
jecxz
adc
lret
inc
mov
ret
xchg
out
inc
mov
xor
bound
ljmp
outsl
mov
mov
mov
shl
xchg
arpl
xor
pop
lcall
in
jne
and
rcrb
cmc
add
andb
ljmp
loopne
dec
cmp
push
mov
xor
xor
outsb
gs
loope
daa
frndint
or
addb
push
sbb
mov
imul
outsl
testb
cli
mov
fs
movsl
jecxz
repnz
xchg
aad
fadds
fwait
mov
push
enter
jge
inc
icebp
cmp
in
sub
inc
aas
xchg
mov
adc
lret
int3
fldenv
fs
jns
subl
movsb
mov
ljmp
pusha
incl
das
stos
add
mov
iret
dec
push
mov
mov
pop
loope
push
cs
xchg
test
repz
cmp
fucom
mov
sarb
pop
jnp
pop
add
lahf
and
jbe
ljmp
add
mov
jmp
cmp
imul
xor
pusha
pop
outsl
adc
bound
mov
dec
loopne
sub
sbb
gs
into
dec
mov
loop
adc
out
addr16
incb
mov
cmpsl
mov
ds
dec
or
stc
cmp
lods
inc
or
pop
ss
sub
stos
out
xchg
arpl
addr16
xor
add
mov
andl
mov
lock
in
push
fs
sub
dec
push
daa
fwait
xor
mov
sub
out
or
xchg
rcr
aad
jb
jno
dec
fldenv
sti
and
leave
shl
in
push
cwtl
push
popf
lahf
int3
in
std
mov
add
addr16
pop
xchg
push
int
nop
aam
mov
pop
pop
xchg
sub
icebp
sbb
mov
adc
xor
lods
mov
jp
jo
cmp
dec
aas
xchg
iret
movsb
sub
aad
ret
gs
in
outsb
sub
xchg
shll
inc
roll
sub
lret
cltd
jb
or
and
inc
mov
dec
ds
rcll
shr
lock
in
jmp
xchg
push
insb
pop
sbb
int3
cmp
daa
stos
adc
or
xchg
lcall
sbb
push
ret
scas
ja
jge
pop
or
xor
mov
mull
fwait
cmpsl
pop
ja
pop
lods
xchg
pop
sti
inc
lahf
mov
fdivs
push
and
jno
mov
mul
dec
cmp
add
or
inc
ss
lret
xchg
dec
into
and
sub
mov
pop
cmp
push
mov
mov
fmuls
popf
outsb
iret
div
push
loop
and
mov
xchg
xor
mov
sbb
sbb
stos
in
mov
pushf
push
mov
lods
pop
lcall
loop
mov
test
iret
bound
jecxz
ss
aad
loope
ficomps
xor
scas
pushf
jg
mov
shrl
push
clc
clc
xlat
xchg
sbb
sub
mov
or
add
lea
aad
stos
dec
or
fwait
lret
add
cld
push
enter
cmp
aam
add
stos
jae
imul
add
mov
inc
pop
pop
test
fstpl
movsb
loope
filds
imul
int3
mov
cmp
jl
jb
xorl
dec
and
scas
lret
add
shlb
in
inc
push
enter
cmpsl
mov
shrl
shrl
fmul
xor
rclb
insl
push
jge
sub
mov
call
lret
cmp
ja
inc
nop
and
std
mov
xchg
push
jne
jge
adc
inc
xor
sarb
xor
mov
jge
data16
scas
mov
mov
inc
mov
das
jge
mov
mov
into
ljmp
out
sbb
pop
mov
test
sar
iret
cmp
inc
push
pop
sub
or
inc
imul
push
sbb
jne
js
ret
sub
pop
jns
mov
pop
sbb
cli
testb
pop
dec
gs
stc
and
lods
inc
xor
mov
loope
shl
popf
sbb
pop
xchg
icebp
lods
push
sub
das
icebp
lods
cmp
jle
outsl
mov
cld
push
icebp
mov
xchg
outsl
push
xchg
dec
call
ljmp
mov
imul
adc
lahf
rcll
or
inc
in
adc
add
cli
push
sti
xchg
xorl
iret
lds
out
fs
sub
mov
icebp
sti
std
js
sbb
add
push
int3
leave
jne
jle
add
and
js
int3
xchg
sbbb
or
cmc
cltd
aas
int3
gs
ds
out
imul
push
mov
jae
pop
inc
pop
jecxz
sti
sbb
inc
mov
jbe
mov
xchg
mov
gs
push
sub
dec
and
repnz
and
adc
hlt
into
cwtl
lock
icebp
xor
cmp
es
insb
jle
aad
mov
sbb
ret
xchg
insl
mov
addl
in
sbb
jge
or
iret
outsl
iret
xor
in
cld
iret
add
out
jbe
xor
out
pop
push
sbb
sbb
cmpsb
in
inc
sbb
mov
and
lods
sahf
test
es
loop
insl
and
rclb
dec
or
pushf
and
adc
cmp
or
mov
mov
sub
fcoms
sub
mov
mov
into
and
sub
fmull
xchg
adc
cld
cmovs
mov
push
push
mov
ficoml
mov
dec
mov
stos
dec
pop
add
rorb
fs
inc
incb
sub
lahf
jecxz
pop
scas
and
xor
and
sti
cmp
sub
jns
cld
push
sbb
out
cmp
mov
mov
popf
movsl
ljmp
inc
jne
test
outsl
fnstcw
mov
adc
mov
and
cmp
mov
adc
xchg
push
scas
int3
xchg
outsl
push
paddw
xor
cld
sub
arpl
jb
sbbb
inc
imul
xor
insl
jae
inc
fs
ss
cmp
jb
scas
sbb
imul
stos
out
mov
add
pop
mov
arpl
mov
xor
dec
into
faddp
sub
mov
lret
sbb
cmp
insb
jo
in
scas
incb
movsl
and
dec
repz
pop
sub
out
mov
std
push
icebp
and
je
int3
fnstenv
nop
and
dec
out
out
mov
xor
cmp
out
mov
das
out
out
in
mov
dec
xor
jns
lea
sub
je
loop
pop
es
jg
fimull
sub
jae
mov
and
xchg
imul
ret
add
shr
sub
dec
sbb
fisubrl
mov
xor
adc
push
push
mov
cwtl
pusha
mulb
pop
pop
xchg
mov
or
jp
lock
shll
mov
fucomip
mov
add
xor
and
or
lahf
aaa
mov
jae
shlb
jl
das
add
add
pop
nop
data16
loopne
pop
or
inc
xchg
cmp
adc
lods
xchg
rep
pusha
or
mov
adc
sti
lret
data16
enter
add
sarl
js
mov
imul
stos
dec
sti
cmp
mov
data16
cmpsl
jbe
inc
xchg
enter
jbe
or
fwait
pop
xorl
sub
add
ja
es
aaa
fs
pop
das
push
xor
pop
bound
rcl
sub
xchg
cmp
jb
jns
add
test
push
pusha
fldt
daa
dec
mov
push
or
subl
pop
pop
mov
pop
fs
repz
lret
lock
icebp
add
fidivl
addr16
jns
and
pusha
sbb
pop
int
insl
cli
mov
add
cmpsl
mov
fisubrl
lods
ja
loopne
out
test
add
push
mov
in
loopne
lcall
jns
and
jno
xchg
mov
ret
cli
in
jo
lret
mov
lret
nop
mov
movsb
fwait
aam
mov
std
int
cli
inc
nop
add
dec
aaa
push
sub
pop
pop
dec
jmp
lret
test
inc
xchg
das
pop
inc
insb
cwtl
int3
cltd
std
push
and
jno
or
push
nop
ror
or
push
jecxz
cmp
imul
fisttpl
mov
sbb
mov
fs
movsb
mov
lcall
mov
test
dec
lock
sbb
sbb
std
inc
lret
cli
xor
cmp
pop
leave
and
xchg
inc
fistps
rcrl
das
mov
add
test
mov
lret
jl
adcl
mov
cltd
out
sti
aad
icebp
xchg
loop
mov
aas
or
pusha
out
pushf
jbe
jns
sub
dec
pop
popa
cmp
lds
addr16
mov
notl
insb
push
push
xchg
stos
push
jns
add
pop
daa
sub
sub
inc
rcll
jle
inc
lods
mov
and
add
out
jbe
sbb
xchg
imul
mov
xor
mov
inc
dec
lods
pusha
xchg
pop
repz
xchg
shlb
pop
and
aaa
pop
adc
or
and
daa
sbb
stos
mov
daa
add
adcb
lahf
mov
jl
fs
sbb
dec
out
sbb
lods
jge
pop
push
pusha
or
xor
shll
mov
xor
or
mov
and
test
inc
movsb
push
mov
fwait
sub
mov
popl
jno
mov
pushl
lods
out
lock
sbb
cmp
mov
pop
pusha
xchg
push
repz
or
out
jp
jo
fdivrl
notl
xchg
adc
push
scas
push
and
push
and
adc
gs
dec
es
mov
pop
sbbl
inc
stos
insb
insl
and
mov
loopne
into
jmp
xchg
add
push
sbb
mov
xchg
pop
cmpsl
dec
dec
ljmp
sysret
bound
mov
rolb
jae
push
mov
arpl
rolb
loope
push
adc
int3
xchg
mov
or
xchg
pusha
adc
ja
fstp
sbb
aam
jns
insb
sub
adc
mov
xor
inc
mov
leave
xchg
fucomi
mov
and
inc
sub
mov
sbb
push
mov
xor
das
stos
das
stc
sahf
fcomps
adc
shll
mov
in
add
sbb
outsl
lock
in
lahf
decb
dec
mov
mov
sbb
faddl
fs
mov
inc
sbb
arpl
mov
ds
sbb
fldl
movsl
les
pop
pop
cli
dec
cmc
lods
adc
pop
mov
jbe
pop
jb
or
repz
dec
sub
cs
arpl
push
mov
ficoml
jno
dec
dec
push
mov
test
pop
jns
int3
shrb
cmpsl
into
mov
inc
fchs
mov
pop
lods
xchg
jmp
inc
push
inc
sbb
lahf
leave
fdivrl
xchg
pushf
nop
and
repnz
and
xlat
sbb
test
jb
cmp
clc
mov
test
jns
js
jae
jns
cmp
scas
push
fidivs
cld
adc
stos
jbe
daa
repnz
xchg
push
test
push
jp
in
in
loope
cmp
and
out
popa
mov
mov
std
lret
dec
jns
ds
adc
pusha
pop
pop
iret
mov
add
xlat
repz
push
cltd
fcompl
pop
std
popf
mov
cmpsb
or
and
imul
cmp
lock
cmp
cmp
lea
mov
das
fsts
xor
adc
pop
sbb
cwtl
inc
pop
xlat
aaa
cmp
mov
mov
mov
pop
lods
add
mov
sub
xchg
lods
mov
mov
xchg
xchg
mov
pusha
into
repnz
inc
add
xchg
sub
std
ret
cs
aam
and
sahf
fdiv
mov
adc
popa
or
fistps
inc
rol
xchg
xor
popf
lahf
xor
pop
mov
popf
inc
cmp
xchg
dec
sbb
xchg
sub
adc
lds
das
cmpsl
adc
push
mov
test
fadds
repz
pop
xchg
gs
mov
push
mov
mov
ljmp
push
ret
jae
sub
hlt
roll
fmul
mov
mov
and
inc
out
imul
loope
cltd
add
inc
imul
jnp
and
or
add
and
mov
mov
imul
xchg
lea
or
add
cmp
dec
iret
inc
xchg
mov
pop
test
lock
imul
mov
inc
fisubs
dec
xchg
jge
outsb
lahf
fidivl
jp
scas
mov
xchg
sbb
sbb
mov
into
stos
inc
repz
push
push
es
hlt
fstps
jecxz
cmp
cmp
dec
ret
push
cs
out
xchg
add
out
insb
lret
fisttps
sbb
in
jo
pop
ret
nop
cmp
inc
mov
mov
mov
add
push
push
cmc
jbe
mov
pushf
fs
push
jne
mov
or
cmpsb
loop
popl
in
jmp
js
in
jnp
fnstsw
popf
daa
mov
adc
dec
and
movsb
fiadds
shlb
adc
push
jge
jns
mov
lods
pop
inc
sub
jmp
mov
pop
sub
mov
xchg
aam
inc
mov
mov
enter
lret
xor
mov
sub
push
and
jb
mov
or
test
xor
push
xor
sti
sbb
add
out
add
in
inc
mov
cli
xlat
or
push
dec
nop
into
mov
and
cld
jecxz
filds
mov
mov
sti
mov
mov
push
lock
adc
xor
or
dec
mov
fstpl
std
nop
mov
jp
repnz
mov
pushf
dec
jecxz
mov
push
imul
xor
nop
mov
addl
ja
repz
pop
pop
mov
test
jns
sub
movsl
shrl
cmpsb
in
les
and
test
cmpsl
pop
mov
mov
int
fisttpll
pop
mov
xchg
movsl
mov
movsl
push
inc
adc
in
sbb
sub
cmpsl
jmp
iret
cmc
push
cwtl
and
or
jb
xor
lret
or
inc
or
mov
adc
mov
mov
adc
jp
jecxz
daa
aam
loopne
int3
rol
and
mov
dec
add
lcall
shr
stos
arpl
les
cwtl
cmp
or
shlb
cmp
pop
neg
aam
jle
idivb
bound
add
call
jl
sbb
adc
or
adc
aam
cltd
xor
add
enter
in
pop
je
add
out
sbb
dec
mov
mov
stos
mov
pop
sbbb
outsb
popa
scas
sub
pop
clc
mov
cmp
aam
stc
sub
inc
mov
mov
xor
mov
imul
mov
mov
mov
cmp
jmp
mov
pop
mov
fs
push
test
dec
jne
ja
scas
rorb
and
sbb
mov
or
mov
lahf
in
out
subb
insb
cmp
cmpsb
repnz
fs
push
mov
imul
push
ss
lahf
call
mov
mov
sti
popa
jne
mov
rol
ficompl
add
pop
dec
push
scas
aad
xor
fldenv
add
in
lret
mov
push
icebp
dec
or
lds
mov
cmp
ret
mov
add
popl
pop
xchg
xchg
aam
leave
data16
dec
xor
jo
stos
subb
fwait
ds
fistpl
mov
cmp
arpl
add
and
dec
inc
dec
cmp
or
jo
mov
jne
fisttps
xor
dec
pop
rcrl
or
lds
mov
sub
sti
mov
dec
jnp
push
icebp
add
jno
shlb
xchg
mov
out
rcrb
fnstsw
scas
das
inc
cmp
jbe
test
aam
hlt
sbb
in
xchg
push
add
dec
jne
inc
setbe
push
dec
jae
pushf
xchg
pushf
in
inc
adc
mov
xchg
pop
and
mov
scas
out
lods
je
cld
cmp
hlt
or
inc
xchg
jmp
ljmp
out
mov
and
xchg
push
hlt
pop
adc
and
pop
shll
inc
neg
xchg
int3
mov
mov
inc
pop
and
sub
je
add
push
add
iret
cmp
or
mov
sbb
dec
lret
idiv
stos
stos
lds
mov
pop
adc
adc
lcall
adc
push
push
idivl
push
jmp
aam
fildl
nop
inc
add
loop
aaa
ds
xchg
in
mov
inc
out
insb
or
les
push
push
or
enter
jae
insb
jg
pop
pushf
scas
jo
arpl
aad
negb
sub
loop
ljmp
sbbl
out
lret
imul
ja
push
pop
dec
into
mov
jg
sbb
cmpsb
xor
add
outsl
outsb
movsl
sbb
insl
push
add
mov
push
pop
cmp
nop
add
sar
lcall
cmpsl
testl
scas
pop
outsb
sub
lods
int
push
inc
add
jle
jp
inc
or
fidivrs
pop
mov
push
and
jge
fdivs
aas
int
xchg
push
insb
push
fwait
int3
ss
hlt
inc
ret
call
push
or
test
mov
lcall
or
jo
sbb
pop
je
ds
out
sub
sub
cmp
mov
mov
js
out
or
test
pop
test
insl
add
lcall
xchg
imul
dec
mov
std
ficoml
xchg
lret
out
stos
pop
cmpsb
xchg
mov
aam
pop
inc
mov
ja
out
ljmp
or
xchg
jae
or
add
xchg
pop
xlat
sub
lret
mov
or
lcall
rcr
dec
roll
clc
pop
lock
mov
push
cmp
sub
cmpsb
mov
inc
adc
add
dec
movsl
push
add
ja
inc
ja
cmp
jecxz
inc
push
shl
fcmovnu
out
inc
push
mov
lret
stos
aam
ds
dec
jmp
jb
mov
sahf
mov
sbb
xor
cmc
clc
lahf
lods
mov
test
sub
stos
cwtl
and
adc
dec
xor
jb
dec
popa
pop
daa
jns
adc
mov
inc
xchg
mov
outsl
iret
jmp
icebp
ja
outsl
dec
stc
popa
int
scas
sar
ret
mov
repz
or
mov
mov
mov
ds
xchg
sti
rclb
mov
pop
push
lods
inc
mov
das
in
or
inc
and
mov
mov
loopne
mov
xchg
cmp
idivl
in
fiadds
cltd
and
push
popa
cmp
jb
xor
aas
ror
arpl
lds
subb
rclb
jmp
jae
dec
enter
cmp
fcomp
test
mov
sub
in
movsb
jb
sbb
js
fxch
daa
in
mov
push
out
ja
push
das
jno
lods
cli
shl
popf
mov
sbb
bound
mov
inc
movsb
add
mov
mov
dec
jnp
arpl
cli
and
xor
rol
lods
inc
inc
aam
js
sbb
repnz
sub
sub
pushf
repz
sti
sbb
mov
sub
pop
inc
xchg
scas
adc
jnp
cmp
test
testb
ss
inc
roll
ss
scas
int3
mov
mov
jae
inc
popa
xlat
dec
pop
mov
xor
stos
repnz
sbb
loope
cltd
js
popa
out
mov
dec
add
adc
dec
mov
pop
out
in
cmp
inc
pop
or
loop
dec
getsec
xor
test
inc
subl
icebp
pop
sbb
je
sub
aaa
gs
lcall
jmp
lock
dec
sbb
daa
cltd
push
neg
push
dec
bound
pusha
xor
inc
mov
and
fidivs
mov
add
mov
cmp
daa
and
into
cmp
ja
sub
and
test
imul
test
jge
mov
les
out
sub
out
addr16
fbld
inc
mov
sbb
dec
mov
sub
xchg
rclb
aam
push
ret
test
arpl
adc
jo
xchg
lods
test
ficoml
xchg
mov
mov
cld
inc
jo
in
adcb
adc
cmp
out
and
cli
fisttps
arpl
cmp
xchg
add
mov
inc
xor
mov
sbb
shrl
dec
popa
jae
xor
out
decl
sub
adc
inc
scas
adc
jge
xor
cs
enter
imul
xchg
addr16
aaa
inc
dec
jae
mov
add
jns
nop
outsl
bound
adc
mov
shlb
pop
loop
xchg
sbb
lahf
fistps
js
pop
popf
inc
outsl
repnz
outsb
sbb
mov
scas
cmp
mul
jecxz
out
clc
adcb
cmp
mov
movsl
in
jge
rcll
jle
adc
scas
mov
fnstsw
dec
inc
mov
shll
xchg
pop
lret
sti
adc
stos
or
insb
dec
xchg
dec
iret
fsub
daa
icebp
imul
lock
jmp
dec
popf
pop
hlt
js
ja
sbb
negb
mov
sub
sbb
add
fdivrs
jmp
scas
jl
lret
popf
jecxz
into
repz
mov
in
add
pop
adc
mov
repnz
nop
mov
fcmovnu
push
mov
clc
cmp
orb
xchg
loop
mov
std
fstpt
sub
and
mov
or
fimuls
pop
inc
dec
ret
jp
out
in
fstpl
loop
add
pop
clc
fnstcw
pop
jne
sbb
movsb
or
jo
mov
xorb
sbb
or
cs
sti
aas
es
lcall
pop
in
jmp
or
cmpsb
aam
shl
mov
adc
out
sti
loop
data16
scas
dec
test
adc
jno
push
sbb
nop
or
lods
xchg
cwtl
sub
cmp
cmp
std
xor
loope
mov
pop
push
pop
aaa
cmp
les
pop
push
lock
add
adc
adc
jge
mull
dec
or
mov
dec
lds
dec
insl
dec
sbb
ret
shlb
mov
outsb
stc
xchg
sbb
jg
fidivrl
andl
sub
or
sub
cmpsb
pusha
andl
cs
and
xchg
jb
inc
push
fisubs
mov
and
add
nop
imul
and
or
idivl
mov
stos
mov
push
arpl
rclb
pop
or
icebp
fstl
sbb
js
je
pop
inc
push
cltd
ja
outsl
ds
sub
jmp
int3
mov
mov
movb
mov
dec
icebp
lahf
add
loope
andl
inc
mov
cmp
adc
or
pop
lds
xlat
add
mov
jae
leave
sbb
mov
mov
sub
gs
stc
jbe
push
mov
mov
das
push
dec
test
pop
cmp
push
jae
cwtl
xchg
mov
ja
xchg
jno
adc
adc
xchg
ror
jmp
xchg
jg
mov
scas
test
sahf
fwait
les
dec
jl
psrlq
cmp
inc
stc
push
xorl
daa
stos
or
sub
lock
leave
fstps
andl
push
lods
xchg
dec
sub
jp
ja
lock
dec
test
jle
and
inc
inc
xchg
jmp
addr16
shl
xchg
pop
addr16
cmp
add
les
or
lods
or
mov
das
dec
push
cld
jmp
push
jnp
adc
mov
dec
xchg
jmp
shll
mov
inc
ret
pop
and
sbb
cmp
fldenv
cld
cltd
scas
xor
loop
scas
loope
loopne
pop
mov
dec
stc
inc
ss
rcrl
lret
aas
add
inc
and
stc
push
lret
cs
fwait
pop
pop
mov
fidivrs
sbb
out
adc
ficoml
inc
mov
add
mov
test
ljmp
ret
xchg
xor
sbb
pop
xor
imul
push
insl
push
cli
xor
das
xchg
insb
pop
sti
xchg
cli
fisubs
xor
stc
cmp
movsl
fcoms
sti
sahf
jne
stc
cmpl
fisubrl
imul
cld
mov
mov
mov
inc
shll
jg
iret
shlb
lret
xor
xor
xor
iret
cmp
mov
jge
fsubl
sub
ret
add
ret
sbb
ret
jnp
jle
dec
mov
inc
xor
adc
jns
pop
in
or
arpl
mov
sar
jns
cmp
jae
xchg
mov
adc
imul
xchg
je
pop
cli
jo
out
cmp
shr
not
mov
test
shrb
push
inc
fsubl
push
clc
or
adc
sub
dec
aas
jb
cmp
mov
sahf
pop
inc
pop
cwtl
ljmp
popf
shrl
sub
scas
cmp
in
jmp
jle
mov
inc
fidivrs
dec
inc
fsts
dec
int3
lret
xor
jle
add
jg
cmp
xor
xchg
int
xor
jae
sub
mov
imul
mov
xor
pushf
xchg
fdivrp
test
mov
dec
pop
and
icebp
pop
test
lcall
rol
push
mov
xchg
pushl
std
rclb
dec
test
stc
cmp
repz
mov
xchg
test
mov
std
and
sarl
pop
add
aam
xchg
scas
adc
test
std
sub
icebp
shlb
mov
popf
cmp
cltd
xor
jns
pop
inc
cmpsl
xor
xchg
cmp
push
lock
outsb
lret
mov
and
adc
push
das
pshufw
sbb
pop
inc
sbb
stos
mov
or
cmp
cmp
lahf
imul
jne
rorl
ret
mov
xor
imull
pop
fstl
cmc
and
dec
dec
xor
ds
push
or
jmp
aad
hlt
loopne
and
jecxz
mov
mov
push
je
lds
cltd
cmp
lcall
out
pop
cld
xchg
pop
dec
testb
sbb
inc
cmp
xchg
push
iret
nop
dec
fwait
test
push
mov
mov
xlat
pop
out
mov
ljmp
pop
sub
mov
xchg
das
adcb
insb
mov
adc
sbb
mov
jecxz
inc
cmpb
and
or
jno
aaa
inc
sbb
ja
repnz
fiadds
out
cs
sbb
arpl
js
push
inc
fs
add
out
ret
and
fsubs
gs
fisubs
ffree
mov
mov
push
int
cld
aad
rol
mov
xchg
loop
cmpsl
lcall
mov
push
lods
dec
mov
divb
mov
ljmp
pop
pop
xchg
cmpsb
sbb
loopne
rcrl
sbb
xor
cs
cmp
or
pop
int
addb
cmp
dec
xor
aad
push
rcr
xlat
inc
outsb
or
jnp
cmpxchg
mov
iret
adc
int
push
out
test
or
sti
xor
lret
push
aaa
fcoml
ja
xor
pop
aad
cmp
and
mov
loopne
ljmp
outsl
jl
mov
pop
lock
push
aad
xchg
xchg
xchg
or
lret
icebp
shlb
or
or
mov
ds
pop
outsl
ljmp
aam
and
dec
popa
ficoml
aam
inc
outsb
add
gs
lods
and
mov
popf
jns
mov
and
xchg
push
inc
sbb
mov
adc
cltd
out
sub
pop
orl
shlb
add
push
add
mov
cmp
lret
dec
dec
test
fdivrs
pop
pop
clc
and
movl
adc
ja
sbb
and
mov
xlat
lea
jbe
dec
xchg
mov
jecxz
mov
push
aad
out
lret
shl
inc
rcrl
test
or
or
mov
or
cmpsl
lods
push
xor
es
jno
or
inc
mov
add
stos
xlat
ret
test
sub
fs
loopne
sub
xchg
std
fdivr
psubusw
inc
loopne
xchg
clc
jmp
jno
arpl
movl
or
push
cltd
push
dec
sub
push
push
sti
dec
pop
mov
sti
add
push
and
inc
cmc
fiadds
aaa
push
xor
subb
hlt
repz
pop
rclb
addr16
insb
repnz
shufps
orb
mov
pop
xor
iret
in
aaa
xor
arpl
arpl
shll
and
std
cwtl
imul
fucomp
and
test
jb
mov
mov
iret
ljmp
test
mov
xor
sahf
bound
in
inc
sub
cmpsl
daa
test
icebp
mov
xor
push
cmc
aas
int
nop
fbld
scas
and
adc
pushf
mov
mov
pop
sbb
in
mov
out
aas
idivb
add
mov
adc
stos
adc
sbb
pop
movsl
movsl
sbb
aas
inc
pop
adcb
hlt
lds
call
adc
push
mov
jns
pusha
ss
cmp
jne
mov
lahf
out
push
and
inc
fucom
push
popf
dec
and
outsl
movsb
or
fidivrs
das
std
add
jmp
mov
repnz
scas
shll
mov
outsl
adc
add
xor
add
push
jb
mov
adc
jbe
cld
jae
mov
lcall
pop
cmp
mov
push
jge
roll
hlt
pop
out
mov
out
rorl
mov
mov
test
fdivrl
jl
add
add
mov
outsl
popf
ror
mov
or
mov
add
xlat
pushf
pop
inc
xchg
jns
out
cmp
out
xor
lds
or
dec
add
xchg
mov
add
imul
lcall
mov
or
adc
in
test
jle
gs
mov
in
jno
psrlq
rcl
and
sub
std
gs
cld
mov
jne
ret
hlt
popa
jge
jno
rol
pop
aad
sub
pop
adc
sarl
fsubr
imul
push
sub
sbb
cmpsl
mov
and
add
or
adc
and
inc
outsb
mov
subl
sub
lds
adc
pushf
scas
in
inc
std
pop
lcall
push
repnz
ds
mov
roll
sub
nop
mov
push
xchg
pop
stos
lock
pop
loopne
test
std
cli
mov
je
sbb
jns
nop
inc
in
push
mov
add
lret
fwait
mov
aam
aad
mov
mov
or
and
nop
sub
mov
push
push
sub
mov
pop
sbb
scas
loop
mov
and
imul
cmpsl
mov
sub
cmp
movsl
ljmp
xchg
nop
mov
stos
mov
lcall
pop
inc
es
fcomp
movsl
jne
cmpsl
pop
incb
add
jns
into
mov
push
push
mov
mov
or
in
mov
add
fsubr
or
lret
ret
pop
fdivs
mov
mov
mov
cld
pop
clc
repz
cmpsl
push
pop
stc
subl
mov
xchg
pop
sbb
int
ret
out
pop
in
dec
aas
daa
adc
xchg
rol
idivl
mov
jmp
popf
jbe
cwtl
xchg
das
lock
aam
push
sarb
fcomp
push
les
and
pop
lea
fwait
ljmp
fbstp
stos
popf
pop
je
and
xor
xor
push
shrl
das
in
aam
jg
pop
push
xchg
jg
in
iret
xor
lock
rolb
test
push
and
jnp
out
es
sti
jb
xor
scas
mov
decb
hlt
notl
fstpt
jo
les
lods
fmulp
leave
xor
imul
imul
fldcw
shl
rcl
mov
mov
cmp
add
imulb
int3
cmp
jbe
xchg
rol
fxch
stc
push
push
es
arpl
fcomip
mov
popa
addr16
loope
lahf
fsubs
lea
push
aam
xchg
pushf
leave
arpl
std
outsl
pop
rcr
push
leave
push
imul
push
or
cmpl
pop
stc
daa
ret
ficoms
pop
jge
in
ret
repz
and
addr16
ret
rcrl
loope
imul
notb
xor
pusha
dec
push
sbb
mov
lahf
ret
mov
es
and
lods
sbb
pop
mov
icebp
loopne
sbb
sbb
push
sub
jo
pop
cmp
cmp
pop
xor
cmpsb
int
aam
jnp
ja
ds
pop
xor
hlt
leave
jmp
rclb
pop
jle
adc
ret
movsb
movsb
mov
test
imul
mov
inc
in
movsb
ss
push
pop
in
cmpsb
or
and
pop
mov
mov
stos
lret
loopne
aaa
sub
in
cmp
lock
pop
jp
fwait
jp
psubw
add
and
out
jns
pop
inc
fldcw
loopne
leave
pop
ja
push
mov
ja
imul
mov
or
sbb
das
fisubs
xor
lret
rorb
imul
sub
loop
lret
pop
jle
add
or
sbb
or
in
mov
add
rorb
jns
aaa
lods
out
or
movsl
popf
xor
rorb
and
and
add
pop
test
out
adc
cmp
mov
inc
push
andb
js
mov
xchg
push
outsb
cld
push
cld
ret
sub
cmc
push
xor
es
mov
mov
push
sbb
mov
fs
notb
adc
add
pop
xchg
mov
jmp
xchg
sub
push
dec
adc
pop
add
and
mov
fcomps
rol
cltd
ret
mov
popf
into
stos
dec
xchg
lret
in
push
test
pop
mov
fs
jns
aas
mov
xor
test
cli
and
and
data16
pop
std
stos
mov
mov
mov
inc
cli
mov
add
cmp
xor
icebp
movsb
xchg
mov
mov
xor
inc
ret
xor
addl
stc
mov
test
or
mov
out
cmp
lds
inc
xlat
or
fistpll
scas
xchg
in
lock
jno
arpl
xchg
xor
or
bound
xor
and
jle
std
push
popa
sti
sub
repz
sbb
loopne
lea
sti
filds
jg
fwait
enter
pop
sahf
push
fnstsw
sti
ret
sbb
cmpsb
mov
inc
lret
cmpl
push
sbb
jne
cmp
push
fcomps
cs
call
sub
xchg
push
push
xchg
repz
push
leave
clc
fldl
les
outsl
sub
and
xchg
pop
nop
stos
xorl
je
push
xor
out
addr16
jb
mov
push
negb
in
mov
mov
dec
push
out
inc
insl
xchg
cmp
out
clc
adc
xor
xor
and
xlat
cld
iret
les
dec
insl
add
rclb
fidivl
test
loope
push
dec
add
in
mov
idivb
je
test
lret
scas
pushf
ret
push
cmp
pop
leave
sbb
and
jmp
xor
es
cmp
push
es
mov
popf
in
add
pop
pop
pusha
mov
test
hlt
push
inc
pop
push
ljmp
imul
mov
mov
leave
push
cld
add
adc
outsb
cmc
sti
scas
pop
mov
iret
dec
int
or
pop
insb
int
sub
iret
jle
fwait
xchg
adc
cmp
imul
aam
sub
push
push
test
mov
mov
dec
loop
xor
adcl
ss
mov
xor
das
les
cltd
jae
fmul
mov
popa
mov
mov
push
shrl
outsl
add
and
mov
movsl
or
mov
out
inc
pop
xchg
push
add
xor
xchg
in
inc
loopne
pop
xor
push
xor
and
adc
push
jg
pusha
mov
std
inc
rcrb
inc
mov
addb
je
add
int
xor
fs
sbb
add
xchg
lret
js
inc
mov
call
pop
fistl
idivb
dec
xchg
push
sub
push
cmp
or
cmpsl
arpl
cli
jae
lret
loopne
adc
repz
mov
dec
inc
cli
adc
push
rcpps
xor
xor
stos
mov
dec
repz
push
mov
jbe
jo
inc
pop
xchg
cmp
mov
xor
mov
testl
dec
out
fadd
fdivs
cmp
jb
xor
ret
mov
rcr
mov
into
pop
push
sbb
leave
in
leave
aas
in
cs
sti
lock
sub
add
adc
jno
pop
mov
add
lahf
push
pop
loop
out
pop
or
jns
xchg
and
sbbb
mov
into
out
pop
add
dec
loope
mov
pop
sub
mov
sub
lock
push
xchg
enter
push
fs
cltd
jb
lods
mov
push
dec
cld
adc
subl
test
lock
inc
mov
inc
mov
or
popa
test
lods
cmc
cltd
ja
pusha
or
xor
aam
cmp
inc
addr16
cmp
movsl
das
mov
sub
addl
js
daa
dec
dec
inc
flds
pop
pop
or
inc
inc
mov
stc
out
test
inc
dec
jbe
idivb
out
ficoms
dec
pop
out
enter
inc
sub
mov
roll
ss
mov
jmp
les
fstp
sarl
xchg
fnstsw
push
loopne
adcl
mov
sub
jne
icebp
cmp
outsl
push
sar
pop
jg
add
sti
pop
push
rclb
mov
push
dec
cmc
and
fdivp
sub
testl
inc
or
stc
mov
mov
test
jl
jg
mov
aam
rclb
lock
lock
push
daa
xchg
mov
xchg
sbb
jns
lahf
into
fsubr
pop
push
es
mov
cmpsb
movsb
xlat
pop
clc
mov
stos
movsb
sbb
rep
loop
mov
sub
mov
inc
lods
push
out
dec
sbb
sbb
jo
fisubrs
inc
adc
and
out
sbbl
cmp
sbb
xchg
adc
int
stc
or
and
inc
sub
mov
fwait
mov
mov
add
mov
dec
aas
pop
rol
jo
jecxz
shl
push
loope
and
add
incb
test
push
cs
lret
adc
lods
sub
or
lahf
push
mov
lods
std
push
popf
sub
mov
dec
hlt
mov
dec
mov
sub
push
inc
jo
dec
add
enter
cmp
pop
data16
jecxz
pop
mov
fisubrl
sbb
xor
jle
jb
repnz
mov
and
lcall
mov
sbb
mov
or
outsb
popa
lret
les
scas
pushf
inc
add
aam
sub
lods
push
pop
or
sarl
jno
sbb
shl
out
outsl
and
mov
loopne
bound
push
out
je
mov
pop
mov
js
idiv
jge
test
ret
lcall
lret
pop
adc
mov
leave
mov
push
xchg
jne
push
lock
mov
inc
cwtl
inc
pushw
icebp
xlat
lcall
jne
dec
xchg
and
out
sbb
mov
cltd
adc
cmp
cs
push
push
je
jo
sti
mov
xchg
jmp
mov
fucomp
xchg
in
xchg
jg
test
mov
xchg
cmpsl
scas
std
movsl
cmp
enter
inc
pop
rolb
sbb
sub
add
fmul
mov
mov
push
gs
xchg
cli
daa
fs
in
stos
jmp
sbb
cltd
aam
mov
inc
call
in
xor
mov
cli
cmpsb
test
and
push
in
mov
add
fnsave
mov
jns
jbe
dec
ret
jp
insb
jbe
clc
cld
sbb
roll
cmpsl
xor
inc
jecxz
out
mov
test
int3
out
adc
sub
aam
mov
into
adc
mov
aaa
xchg
mov
cwtl
popa
sub
insl
movaps
flds
add
xor
je
shrb
mov
sbb
jl
call
sub
test
adcl
jge
insl
jnp
lea
inc
in
pop
fstpt
xchg
cmp
mov
test
jbe
popa
push
mov
lds
mov
jo
xchg
add
dec
pop
mov
clc
insl
xor
testb
jecxz
jge
jmp
adc
add
incb
lret
cmc
inc
sub
sbb
loop
jns
adc
pop
sbb
mov
fs
in
rorb
aad
mov
pushf
mov
les
xlat
test
cmc
dec
lret
sti
ret
int3
inc
ret
cmp
push
or
rcll
in
call
and
decl
int3
and
sbb
add
pushf
and
fwait
iret
mov
jb
call
and
and
in
insb
adc
std
xchg
push
add
into
pop
pop
insl
xchg
pop
cmp
jecxz
imul
mov
pop
adc
lods
in
push
decl
addl
divb
icebp
addb
push
inc
scas
bound
add
xchg
mov
in
add
test
jl
adc
mov
push
push
loopne
inc
imul
les
imul
xchg
pop
mov
stos
jecxz
enter
jne
xor
mov
add
xor
std
lret
xchg
cld
rcll
mov
dec
mov
ficoms
popf
push
iret
and
inc
jmp
pop
jnp
icebp
xchg
xor
popa
cmp
or
std
in
jne
shrb
popa
jl
adc
mov
mov
mov
repz
loope
lcall
jb
adc
push
imul
repz
sub
cmc
sbb
lret
ss
lret
mov
xchg
pop
cmpsl
xchg
loopne
icebp
and
dec
addr16
scas
sub
push
js
into
repz
or
cmp
ret
ret
cmp
pusha
push
add
cwtl
nop
ficoms
stc
sub
pop
dec
cmpsl
or
hlt
mov
call
xchg
dec
adcl
sarl
jae
and
mov
lea
jo
dec
pop
ljmp
mov
push
int
dec
inc
adc
aas
lcall
xlat
lret
popf
dec
sbb
adc
sub
push
add
pop
mov
movsl
stc
xlat
roll
mov
xor
mov
imul
jne
inc
add
mov
aaa
mov
ja
push
mov
inc
adc
and
cld
xlat
xchg
sahf
mov
mov
movsl
mov
or
mov
stc
repnz
fnsave
adc
or
and
pop
divl
and
dec
test
fldl
adc
and
jne
inc
outsb
test
das
fcoml
push
cltd
sub
ja
je
pop
iret
sbb
xlat
imul
ret
bnd
int3
push
ret
xor
incl
inc
dec
call
xchg
out
jl
bound
jno
mov
and
ja
push
shl
popf
es
stos
mov
cli
nop
ljmp
mov
daa
or
insb
rcll
xor
adc
lahf
and
mov
mov
jo
repz
std
fucom
push
inc
jge
lret
in
mov
xchg
sbb
hlt
push
pusha
dec
and
mov
mov
ficompl
jge
loopne
fcompl
push
mov
cmp
cmp
jne
sbbl
iret
push
sub
pop
adc
sub
shl
push
sbb
add
add
insb
mov
ja
sbb
and
jge
push
jns
pusha
test
outsb
xchg
ds
sub
pop
insb
aad
scas
sbb
sbb
mov
push
lock
jo
arpl
cmp
lea
hlt
lods
imul
xchg
loopne
je
fidivrs
das
push
aaa
inc
dec
ljmp
jmp
jmp
scas
out
jl
rcrl
xchg
lcall
inc
pop
aad
mov
sti
lahf
mov
pop
xchg
aaa
sub
cmp
ffreep
lock
mov
stos
in
rcrl
pop
jo
sub
mov
mov
mov
xor
pushf
loopne
rcll
lds
inc
inc
xor
add
cmc
int3
and
scas
insl
popf
mov
push
ljmp
jp
push
int3
mov
jl
mov
popa
outsl
ror
cmp
idivb
lahf
cmp
xchg
cwtl
or
testb
prefetchw
or
ljmp
fidivrl
sbb
or
and
sub
fadd
cwtl
or
lds
iret
mov
xchg
cmp
push
jg
cli
out
sbb
xchg
sub
in
dec
jg
mov
rorb
fcompl
pop
stos
xchg
incl
push
loopne
pop
test
add
adc
pusha
sbb
mov
sub
cmp
cmp
out
incl
ss
dec
mov
add
inc
sbb
and
adc
addb
in
cli
out
lds
aas
mov
sbb
and
pusha
out
test
jg
aad
inc
ficomps
js
jae
jnp
inc
inc
jae
add
jbe
fbld
popa
in
xor
dec
or
dec
test
xlat
push
cmpb
cltd
cli
pop
and
add
xchg
inc
shrl
and
cmp
dec
adc
adc
out
dec
lea
loopne
cltd
std
xchg
imul
out
sbb
push
adc
lds
push
mov
cld
es
sti
inc
xor
xor
mov
je
les
or
rcrb
test
xchg
subl
sbb
pop
or
cltd
sbb
cmp
repz
in
mov
sbb
xchg
cli
jecxz
mov
rclb
dec
mov
stos
fstl
cli
mov
or
push
lret
ljmp
sub
sub
mov
outsb
mov
lods
add
sbb
sbb
and
inc
out
xchg
mov
lods
inc
sbb
dec
mov
adc
nop
movsb
pop
push
outsl
mov
mov
pop
xchg
push
movl
pop
xor
add
pop
and
addr16
and
add
sub
inc
mov
sub
lret
push
pop
pop
mov
or
xchg
pop
addr16
mov
mov
cmp
test
sbb
adcl
test
test
dec
jo
push
adc
loopne
cmp
push
xchg
xchg
pop
cmp
js
imul
push
inc
adc
leave
adc
cli
loop
fisubs
jo
insb
push
ss
or
insb
int3
scas
inc
jns
push
cmpb
sbb
and
and
ret
lret
and
pop
int
jne
into
test
mov
add
sti
or
pushfw
mov
lahf
icebp
add
adc
mov
in
mov
inc
mov
pop
mov
inc
or
pop
mov
into
jnp
push
stos
jo
aaa
repnz
or
add
pop
mov
sbb
mov
add
push
push
int3
stos
inc
test
movsl
jecxz
xchg
dec
inc
xchg
ss
in
popl
ret
cmp
fists
cltd
mov
enter
arpl
pop
mov
mov
xchg
fcmovb
lcall
movsl
xchg
or
push
dec
scas
test
sub
stos
cld
pop
outsb
push
inc
shll
sbb
xchg
sbb
cmp
xlat
push
ss
cmp
nop
filds
or
decb
mov
inc
mov
mov
push
and
pop
leave
pushf
xor
or
fdivp
and
daa
mov
out
pop
addb
subl
pop
push
jge
inc
pop
aad
jne
xchg
sub
mov
and
ja
pushf
dec
inc
test
cmp
cmpsl
or
dec
xor
mov
push
aam
inc
push
mov
fimull
imul
inc
shlb
sti
sti
inc
imul
ljmp
mov
xchg
and
mov
in
cmc
cli
roll
mov
test
sbb
mov
outsb
inc
fidivrs
jl
loop
insl
fwait
std
xor
lock
xchg
sbb
push
orl
jnp
ljmp
xchg
loop
inc
pop
sbb
mov
int
xchg
loope
rorb
inc
nop
orl
mov
daa
cmp
repnz
add
stos
push
pusha
add
xchg
leave
leave
push
cmpsb
shl
jno
lret
jo
pop
or
or
jnp
mov
mov
adc
lea
rclb
xor
daa
cmp
dec
or
cli
inc
ret
sti
repnz
cmp
in
sbbl
xchg
movsl
adc
xchg
push
dec
test
inc
mov
and
mov
xor
xchg
ret
outsl
adc
in
push
fwait
imulb
mov
jne
test
push
sub
scas
fs
mov
cmp
lds
popf
mov
sbb
dec
pop
sub
outsb
out
adc
gs
mov
lret
mov
rcll
out
mov
cmpsl
call
mov
add
mov
int
or
out
push
andl
enter
push
jge
or
cmp
mov
add
negl
leave
inc
push
clc
fimuls
in
fidivl
or
std
dec
jg
or
cmp
aas
mov
insb
out
data16
pop
test
scas
out
mov
cmp
adc
lret
or
cmp
ja
lds
iret
ret
mov
fneni(8087
mov
mov
imul
push
mov
mov
and
sbb
lods
dec
pop
jnp
mov
ss
insb
mov
ret
dec
cli
mov
ret
clc
lcall
jge
movsb
movsl
xor
push
add
stos
test
sbb
pop
dec
cs
pop
sbb
cmp
xchg
lea
insb
cmp
pop
or
scas
data16
in
xchg
js
inc
sahf
int
mov
jecxz
and
sti
gs
cmpsb
mov
test
dec
adc
scas
push
arpl
out
mov
push
daa
push
dec
inc
or
out
cmp
push
or
pop
mov
push
sbb
sbb
and
inc
adc
daa
fnsave
cmpl
fsubp
cmp
sub
sub
adc
lret
xchg
mov
in
shll
add
mov
xorb
dec
mov
mov
mov
or
out
push
out
dec
jecxz
fiaddl
pop
ljmp
xchg
mov
pop
lret
dec
sub
imul
push
in
mov
icebp
sahf
xchg
leave
jge
and
fstl
pop
adc
rcrl
mov
jg
mov
dec
jbe
inc
jle
test
sub
cmp
sbb
in
pop
in
adc
bound
inc
std
xchg
mov
pop
ds
in
jmp
imulb
xor
gs
in
scas
ja
mov
data16
insb
sub
imul
jno
pop
std
xchg
lahf
xchg
test
mov
or
dec
cmp
cli
lds
dec
xor
ljmp
pushf
fs
xchg
adc
jecxz
nop
call
adc
add
sbb
sub
fcmovb
mov
aam
push
pop
iret
or
cmp
bound
mov
xor
aaa
xchg
or
data16
mov
or
leave
jl
xlat
pop
loop
imul
ss
sti
lock
xchg
ja
fmull
clc
call
mov
aas
ljmp
imul
aaa
mov
clc
das
movsl
mov
and
xlat
mov
mov
rol
pcmpgtd
add
mov
out
push
mov
and
jle
add
mov
dec
xor
jecxz
fsubrl
mov
cmp
jb
inc
into
mov
ja
pusha
faddl
sbb
leave
movsl
and
cs
and
sbb
jl
push
icebp
lret
sbb
outsl
aas
mov
pushf
or
cmp
and
popa
push
xor
or
mov
test
xchg
test
inc
and
and
dec
jp
xchg
adc
repnz
and
inc
push
cs
xorb
push
jmp
int
sub
inc
mov
mov
sbb
stos
push
mov
push
loop
mov
xor
pop
addr16
notl
inc
mov
lcall
cmpl
in
lea
inc
aas
lds
pushf
push
sub
aas
sub
xor
fistpll
in
sub
mov
xchg
mov
jle
push
insl
test
fisttpll
push
sub
jbe
inc
jl
mov
stc
jbe
cmp
and
insb
fildl
pop
int
mov
hlt
into
loopne
push
faddl
maskmovq
imull
fxch
jge
push
loope
and
out
mov
add
fdivrl
push
call
cmp
mov
fcompl
mov
push
pop
mov
xchg
cs
ret
inc
xor
js
add
data16
pushl
lds
push
test
xor
adc
ret
dec
in
pop
fisubrs
idivl
test
or
or
sahf
shll
push
xchg
or
dec
ljmp
mov
fildl
into
les
and
pop
mov
dec
mov
ret
inc
aaa
cmpl
dec
xor
call
pop
stc
sbb
out
enter
sub
xor
mov
pop
test
pop
xchg
lcall
lds
mov
int
mov
fnstsw
shl
stc
or
cmp
add
into
movsl
push
insl
add
dec
aas
push
mov
gs
movsl
and
sbb
dec
fwait
clc
movsl
xchg
jp
xchg
mov
sub
ljmp
dec
hlt
sbb
jbe
scas
adc
sahf
mov
mov
and
push
jmp
adc
sub
aas
test
call
xchg
xor
sub
out
push
repz
test
mov
aas
stc
in
into
out
sbb
pop
fdivrp
out
or
es
xorb
aam
scas
xchg
cmc
daa
pop
fcompl
mov
lods
aaa
sub
mov
sbb
pop
jns
mov
xor
mov
pop
jl
xadd
js
in
lret
aad
push
rorl
filds
pushf
lea
jmp
push
icebp
mov
cmp
std
jns
imul
scas
inc
inc
fs
dec
or
fadds
mov
popf
jp
dec
sbb
mov
lods
push
cmp
adc
addr16
push
ja
sub
repz
pop
out
fwait
add
adc
dec
fcoml
mov
movsl
adc
pop
dec
xchg
in
sbb
loopne
cwtl
add
adc
daa
call
xchg
outsl
scas
add
rcl
lds
sub
rcrb
sbb
xor
push
push
or
xchg
aas
adc
push
mov
pop
and
in
ds
fisubrs
subb
mov
or
out
mov
mov
lcall
inc
call
cmpl
movsb
fwait
pop
mov
push
sbb
popf
mov
xor
pop
stc
je
mov
inc
xacquire
xchg
repz
dec
leave
fs
in
and
inc
xchg
sbb
stc
nop
and
fcomps
loope
les
loop
das
mov
ret
sub
pop
and
cmpsl
mov
jbe
or
shl
push
xchg
je
js
or
jge
xchg
push
pop
arpl
ja
add
jbe
pop
mov
and
jno
mull
sbb
lahf
xchg
ret
mov
jnp
pop
dec
lods
into
fwait
enter
adc
mov
int3
enter
add
or
ljmp
or
jbe
cmp
repz
gs
sub
dec
add
cmp
imul
cmpsb
jb
mov
aaa
das
pop
iret
dec
mov
lock
mov
outsb
jecxz
mov
xor
xchg
mov
cmp
jg
lods
dec
push
aas
stos
xchg
cmp
je
cmpsb
sbb
rclb
cmp
out
adc
push
and
dec
call
dec
stos
xor
outsl
fwait
jmp
mov
ljmp
cltd
loopne
lcall
cmp
cmp
insl
mov
dec
scas
sbb
sahf
push
popl
sub
inc
mov
pushf
xor
push
dec
inc
jne
fsts
mov
mov
jp
lods
xchg
push
nop
adc
test
lahf
lahf
popa
ficoms
jecxz
mov
std
mov
fdivrl
aad
scas
and
or
fucomp
into
xorb
jo
sub
add
dec
and
xor
cmpsb
dec
movsb
hlt
and
push
icebp
add
fs
mov
lcall
mov
lcall
push
int
imul
cmp
or
andl
pcmpgtb
jnp
std
repnz
pop
aas
mov
add
mov
psubusb
mov
out
adc
and
gs
pusha
repz
xor
mov
mov
clc
ret
mov
and
sbb
or
push
cmc
xchg
push
push
filds
and
repz
clc
std
dec
or
or
xor
bound
sbb
clc
sbb
push
jmp
insb
pop
cmp
scas
fstps
pusha
xor
bound
fisubl
cli
ljmp
push
stos
icebp
push
comiss
pop
mov
add
out
cwtl
fndisi(8087
fs
hlt
dec
outsb
mov
frstor
or
inc
fsubs
xor
ds
leave
adc
movl
out
pop
lret
pop
xor
mov
stos
xchg
test
es
stc
push
xchg
dec
xchg
and
hlt
fst
es
jnp
dec
mov
imul
xchg
xlat
aad
push
sbbl
cmpsb
outsb
into
enter
aas
sbb
mov
int
sub
or
sbb
push
inc
cs
mov
push
mov
and
call
adc
cmp
ret
push
call
pop
mov
stc
popa
pop
ficomps
pop
pusha
test
add
adc
imul
into
ljmp
mov
mov
cli
mov
imul
ficoml
inc
pop
sub
fimuls
insb
sahf
inc
and
mov
roll
inc
xchg
push
fbstp
xchg
subl
adc
out
movsb
cmp
into
and
sub
add
test
add
daa
cmp
jg
sbb
jbe
xchg
fs
mov
push
xchg
repnz
mov
mov
xchg
ja
jge
pop
mov
inc
aas
cmp
sbb
test
sbb
xchg
loop
push
inc
jp
jb
mov
cmp
mov
lea
push
inc
adc
pop
sti
jno
rorb
xchg
mov
scas
pop
out
lret
push
push
pop
xchg
cmpb
pop
inc
adc
and
mov
repnz
mov
xchg
iret
mov
sbb
mov
dec
xchg
pop
ret
ja
jbe
cmpsl
add
jb
sub
add
subl
pushf
adc
cs
mov
adc
xchg
lret
pusha
inc
je
adc
mov
xorb
jo
cmp
pusha
sarb
in
arpl
add
loope
jno
imul
sub
mov
data16
jg
mov
sub
idiv
pushf
or
stc
das
cmp
sub
and
mov
add
fcmovnu
fistl
pop
mov
sub
in
xchg
xchg
dec
xor
or
mov
negl
pusha
or
in
sub
fistpl
jmp
and
cld
mov
roll
dec
mov
fisubs
dec
inc
inc
das
pop
pop
movsl
sub
cmc
xchg
xchg
or
or
sbb
repz
adc
pop
imul
rcrb
push
adc
into
mov
adc
rcrl
sti
adc
stc
imul
jmp
popa
inc
jns
sbb
and
cmpsb
jmp
pusha
mov
mov
mov
inc
dec
ja
test
adc
popf
popa
pop
aam
jmp
mov
sbb
add
lahf
mov
sub
roll
aam
jmp
call
jl
jno
out
adc
dec
sbb
xchg
dec
pop
mov
dec
adc
cwtl
jae
add
repnz
mov
add
in
sbb
repnz
into
dec
je
lret
push
pop
inc
loope
jo
rolb
sub
cld
stos
into
clc
stos
std
jbe
cmp
pop
imul
mov
aaa
fstl
daa
fiadds
jl
or
mov
jmp
dec
shll
and
lods
add
sahf
push
dec
push
nop
scas
cmpsl
out
and
cmp
cli
xchg
and
cmc
pop
stos
ja
mov
and
pop
xchg
sub
mov
mov
jno
pop
loope
loopne
lret
jno
xchg
es
xchg
inc
mov
cmp
adc
sub
pusha
nop
xor
add
pop
push
pop
adcl
aad
cmp
and
and
mov
outsb
in
inc
aad
mov
cmc
in
sbb
sbb
cmp
pop
push
js
data16
lcall
cs
add
cmp
loope
scas
mov
pushf
fstp
nop
push
arpl
dec
mov
incl
iret
cld
shl
and
pushf
es
cli
test
cld
sbb
ljmp
fists
cld
mov
mov
push
ror
mov
or
xor
xchg
mov
and
fiaddl
fstpt
push
fwait
inc
cmpsb
dec
sti
pop
sbbb
mov
call
push
mov
pop
ss
inc
mov
in
pushf
stos
mov
cmp
aam
mov
xor
mov
mov
push
sub
cwtl
xor
fsubrp
push
dec
mov
pop
mov
ljmp
ss
es
rcrl
ss
inc
ds
movq
push
mov
cwtl
jnp
sbb
movsb
adc
pushf
and
cltd
or
pop
loope
push
push
cmp
xchg
cmc
popf
shll
lcall
mov
sahf
mov
mov
js
push
cmp
addr16
or
lcall
loopne
cld
bound
jo
int3
bound
scas
sbb
cmp
mov
shll
icebp
dec
pop
pop
adc
xchg
lods
xor
pop
test
lret
lret
daa
cld
stos
add
xchg
pop
jo
aaa
rcrl
mov
jg
popf
inc
dec
mov
jg
pop
imul
mov
inc
std
ffree
sbb
mov
rorb
rcrb
scas
mov
mov
loope
lret
push
addr16
sahf
adc
mov
mov
dec
or
out
jno
fsubp
push
outsb
add
add
inc
aas
mov
lret
sub
mov
dec
xor
xchg
xor
jne
rorl
mov
and
push
cmc
jno
xor
test
lods
sbb
int3
je
adc
cmp
shll
jno
lods
dec
xchg
jnp
lock
stc
clc
inc
lcall
xor
js
hlt
pop
push
pop
iret
test
jne
jp
fistl
scas
or
dec
test
or
xor
shrd
jecxz
pushw
sbb
xor
lea
dec
inc
cld
xchg
and
out
fisttps
aad
js
scas
scas
repnz
adc
in
dec
jmp
aas
jo
mov
push
arpl
add
push
push
shr
pop
outsb
loop
sahf
adc
repnz
leave
fsubrs
cmp
cli
mov
and
shl
insl
lods
xorb
add
out
mulb
pushf
xchg
and
ds
js
xchg
or
mov
gs
iret
cmp
out
pop
loop
jg
xchg
pop
push
mov
decb
mov
scas
xchg
mov
sub
cmc
add
xchg
cltd
lea
dec
mov
mov
pop
pop
sub
pop
and
pop
enter
rcr
mov
aam
movsb
int3
enter
add
imul
mov
aaa
inc
jne
outsl
aaa
mov
push
or
sbbb
stc
xlat
stos
shrl
sbb
mov
aam
sbb
aad
das
shlb
xor
xchg
int3
ljmp
cs
mov
mov
mov
add
mov
inc
call
inc
and
bound
lret
xchg
or
dec
fs
dec
call
xchg
lret
mov
repz
ret
fcomps
bound
cmp
insl
enter
mov
mov
ljmp
add
pop
sahf
nop
sbb
add
sbb
in
movsl
push
lret
insb
into
push
jnp
mov
fnsave
push
mov
jbe
in
or
pushf
sbb
mov
xchg
and
scas
or
ficompl
loopne
sbb
or
add
enter
pop
pop
add
jg
and
hlt
inc
mov
int
mov
xchg
cmpsb
xchg
shrl
adc
pop
mov
outsl
xor
ficoml
sub
xchg
push
add
loopne
ds
aas
scas
mov
neg
lea
adc
and
out
add
pop
lds
pusha
aad
pushf
push
push
dec
push
adc
rep
lret
lods
push
cs
or
jmp
xchg
andl
mov
xchg
movsb
mov
mov
jge
addr16
mov
out
pop
out
push
popf
testb
mov
rcrl
gs
icebp
das
lret
test
pop
xor
cmpb
xor
jno
xchg
xchg
movsb
out
mov
test
pop
leave
hlt
xchg
out
and
push
fnsave
jl
pop
pop
inc
sub
or
push
negb
mov
bound
mov
adc
imul
inc
mov
inc
inc
mov
aaa
mov
push
mov
imul
sti
xchg
addr16
loop
fwait
pop
push
pusha
push
fdivl
aas
out
jnp
hlt
cmpsl
inc
fdivrl
pop
nop
xchg
dec
adc
les
loop
aad
loope
test
fdivrp
mov
push
int3
imul
lcall
sub
out
leave
inc
stos
aaa
xchg
and
cmp
gs
js
roll
push
push
lret
pop
jle
push
out
out
cli
add
rcll
mov
add
xorb
das
mov
xor
stos
or
jnp
dec
frstor
sub
dec
imul
scas
inc
fs
pop
xchg
bound
jne
pop
imul
push
test
ljmp
ret
inc
pop
pusha
loop
push
pop
xchg
hlt
push
mov
pop
xchg
mov
mov
pop
lret
dec
out
test
sbb
cwtl
clc
out
sbb
outsl
inc
xchg
or
cmc
cmpsl
and
lret
popa
test
cwtl
cltd
sbbb
imulb
push
add
cli
inc
out
mov
daa
mov
out
xlat
loopne
mov
jmp
pop
movsl
mov
clc
mov
insb
push
mov
movsb
mov
push
or
scas
mov
lahf
fstpt
cmp
mov
clc
jns
sub
jp
mov
cli
repz
cltd
inc
mov
sbb
fmull
call
or
in
pmaddwd
fnstcw
jl
dec
dec
push
ss
insb
jae
iret
inc
pop
add
test
pop
mov
sub
stc
testb
div
aaa
adc
loopne
xchg
jb
jo
or
outsb
outsl
or
pop
clc
jbe
inc
lds
fstp
adc
mov
sbb
loope
popl
sub
out
mov
arpl
in
aas
push
jbe
add
pusha
ja
bound
adc
push
bound
xchg
adc
lock
fidivl
jmp
pop
jmp
stos
cld
out
insb
mov
lods
inc
or
cld
add
push
and
mov
dec
mov
in
shlb
push
cmpl
add
pop
push
xor
fcoml
lds
cli
add
jg
in
stos
es
adc
push
sub
das
jl
inc
jbe
push
xor
call
mov
jp
lcall
imul
call
call
in
test
aam
mov
pop
ret
mov
cmp
enter
enter
inc
or
in
pop
gs
sysret
mov
into
and
fwait
cmp
div
outsl
out
jae
xchg
int3
rolb
into
pop
pop
mov
jno
fisubrl
out
aam
std
repnz
xchg
cmpsb
mov
pusha
and
mov
sub
inc
mov
cmp
xchg
movsb
aam
outsb
and
pop
mov
stc
ss
xchg
add
push
sarb
mov
xor
ja
test
das
mov
shl
das
dec
jo
insl
xchg
cmpsl
aas
adc
jae
nopl
es
into
pop
insb
xchg
cs
insb
jle
fcomps
cld
out
pop
test
mov
jae
ret
jo
mov
jns
push
mov
popa
xlat
xchg
idivb
in
cmp
ficoms
and
inc
sbb
stos
mov
cwtl
sub
jl
aaa
pop
pop
mov
adc
sar
movsb
or
xchg
push
mulps
jg
test
xchg
push
adc
push
daa
popa
mov
pop
arpl
sbb
lods
inc
and
xchg
xor
jl
cmpsl
mov
shl
movsb
es
xor
dec
fsubl
or
cmp
sbb
cs
jg
cld
xchg
inc
inc
jmp
sbb
jle
add
pop
sbb
sbb
dec
jns
sub
sub
je
fisubrs
and
adc
jmp
pop
aaa
mov
das
popa
push
mov
mov
jl
or
mov
mov
out
and
clc
ds
lcall
test
loopne
fcoml
xchg
mov
addr16
mov
jg
sub
mov
aad
sub
pop
dec
xor
je
fsubr
sbb
roll
repz
filds
lret
adc
adc
sub
xchg
rorb
sub
lcall
dec
dec
mov
adc
insb
adc
adc
hlt
fwait
or
adc
aad
adc
ret
jo
aas
add
mulb
test
xor
xchg
sbb
stos
subb
push
xor
imul
or
xor
shll
add
sub
into
dec
pop
stc
lret
sbb
leave
or
dec
out
jmp
dec
jae
lea
mov
fiadds
push
enter
cs
jp
push
jl
loope
mov
testl
add
adc
outsb
rol
mov
adc
mov
mov
inc
mov
jne
jb
jge
push
sub
sub
xchg
and
sti
std
movsl
stos
sub
out
cltd
jge
push
sti
rolb
lcall
and
fs
xor
inc
add
cli
push
out
sbb
mov
mov
aaa
push
aaa
out
inc
inc
icebp
xor
adc
stos
cwtl
sub
loop
loop
pop
cmp
jge
pop
xchg
mov
clc
pusha
stos
ret
cmp
xor
lcall
cmp
popf
cmpsb
adc
rclb
adc
xchg
popf
imul
into
movsb
fcomps
icebp
fstpt
fldl
xchg
pop
sub
fnstcw
push
sub
loop
test
sahf
sahf
stc
jmp
and
dec
xchg
aam
dec
mov
cmp
xor
sub
ror
ss
aaa
adc
sub
cmp
xor
add
xlat
outsb
or
rorb
jle
xchg
nop
js
pop
adc
xchg
mov
fsubr
out
sbb
imul
xchg
fs
jmp
mov
cltd
sbb
sub
mov
jp
xor
jnp
pop
or
sub
mov
fildll
ret
inc
sub
ret
aaa
shrl
inc
sahf
mov
scas
cs
cltd
shl
je
outsl
inc
jae
dec
cmp
mov
dec
test
xor
leave
sahf
call
hlt
mov
and
scas
aam
sahf
push
adc
push
jmp
and
push
or
mov
cmp
pop
mov
lods
shrl
mov
je
dec
adc
test
es
lcall
arpl
or
mov
lods
pop
add
push
sbb
imul
and
inc
loope
test
mov
dec
sub
dec
decl
fnstcw
and
ja
adc
test
add
mov
daa
xor
cmpb
leave
or
cmp
fsub
adc
lea
pusha
push
repnz
mov
ficompl
cmc
adcb
jns
push
lock
or
scas
push
sub
ret
mov
sbb
cmpsl
add
aaa
xchg
imul
push
fists
xchg
jl
jle
das
aam
fisubrl
cmp
mov
xchg
jne
int3
xchg
mov
mov
stc
inc
jecxz
inc
cltd
jbe
push
popa
out
xchg
in
roll
dec
cmc
mov
pop
addr16
hlt
je
mov
lret
mov
adc
ret
outsl
inc
in
cmp
inc
and
cmpsb
fstp
int
mov
mov
xor
aaa
mov
cmp
or
sub
sti
add
xchg
pop
repz
xchg
and
xchg
and
ja
icebp
mov
cmp
pop
stos
cmp
cmpsl
int
iret
sbb
gs
cmp
lret
or
repz
out
adc
orb
in
or
mov
lods
inc
mov
arpl
cmp
mov
lods
adc
sbb
jg
bound
inc
dec
imull
test
ret
xchg
ss
push
addb
mov
iret
pop
push
add
mov
cli
mov
imul
jge
sahf
out
std
add
cmpb
mov
cmpb
xor
nop
mov
inc
fists
int3
cmpsl
pop
mov
add
dec
popf
inc
sub
add
push
test
fidivl
sub
ljmp
xor
dec
adc
dec
lret
pop
cmp
sub
pop
mov
loopne
inc
xchg
movsl
inc
shl
push
push
mov
jb
jl
jne
sbb
xchg
jecxz
xchg
inc
push
add
movsb
rcll
dec
jmp
cld
int3
sub
lret
sub
stos
adc
out
insl
xor
fisubrs
fcoml
sti
cs
andb
mov
rorl
fsts
dec
hlt
sub
outsb
xchg
sbb
popf
xor
addr16
movsl
jmp
shll
js
xor
adc
lret
insb
arpl
pop
push
push
lahf
int
mov
push
add
push
jne
test
push
out
jno
xor
fxch
or
lcall
sub
ret
adc
cmpsb
in
les
or
xor
out
ss
cltd
mov
xchg
jge
pop
lahf
repz
mov
push
mov
mov
pusha
shrb
push
pop
loopne
pushf
sbb
xchg
or
sub
jbe
lock
imul
fimull
mov
xchg
jns
mov
push
fwait
daa
mov
cmp
mulb
dec
mov
clc
push
fsubl
mov
pop
sub
pushf
lcall
jmp
hlt
aam
xchg
sbb
popf
jno
addr16
push
into
jnp
nop
cli
and
lcall
mov
mov
add
xchg
xchg
les
lret
jns
popf
jge
lcall
adc
jnp
sti
jp
add
mov
int
adc
shrl
push
cmp
das
xchg
and
out
cmpsl
test
xor
mov
lcall
das
repz
loopne
pop
mov
rcll
push
cmp
sbb
sahf
adc
pop
pop
sub
sahf
in
andl
popf
sbb
mov
out
cmpsl
hlt
push
mov
jmp
xor
push
in
push
mov
shl
out
ret
daa
aam
ss
push
mov
daa
push
cmc
or
stc
stos
in
rclb
jne
adc
daa
mov
mov
inc
iret
mov
test
subl
push
leave
inc
pop
test
out
hlt
sub
mov
sarl
stos
mov
jge
xchg
mov
lods
lcall
lcall
in
cmp
xor
cli
sub
fdivr
flds
add
sbb
xor
add
out
sub
jbe
dec
jecxz
jae
push
js
mov
sahf
push
mov
xchg
mov
fiaddl
inc
popa
loope
sub
jmp
xchg
ljmp
stc
pop
icebp
or
rclb
push
cmp
lcall
out
sub
jmp
call
mov
push
xlat
in
popf
fcomp
fcmove
in
jae
push
sub
cmp
xor
in
sahf
int
ss
js
movsl
call
and
sahf
lds
scas
fisubl
push
hlt
gs
mov
test
adc
mov
bound
das
adc
dec
inc
inc
mov
lret
and
inc
subb
cmp
repnz
xchg
test
adc
ja
pop
in
sub
rorb
pop
out
sub
pop
lret
jae
out
mov
les
orl
movsl
mov
cmp
mov
shrd
xchg
xchg
pop
stc
inc
jo
clc
sbbb
sbb
dec
push
ss
cmc
jg
jo
cmp
xlat
loope
iret
add
sub
sub
sti
movsl
test
addr16
adc
daa
adc
scas
xchg
sub
hlt
pop
jae
sbb
aad
pop
and
and
inc
sbb
mov
test
jp
adc
fs
insl
in
in
jmp
cmp
mov
fprem
pop
jmp
loopne
push
pop
or
mov
int
mov
and
push
into
cmp
and
rcll
push
movsl
hlt
rcrb
fsub
inc
cld
mov
push
call
ret
cmpsb
add
xchg
or
divl
in
jmp
push
arpl
stos
fidivs
or
mov
mov
out
push
cmovs
idivb
add
push
push
inc
mull
sub
or
sbb
hlt
pop
mov
repz
sub
push
push
adc
inc
mov
push
cmp
push
add
hlt
ds
mov
inc
mov
jno
cld
or
in
cmp
out
stos
add
cwtl
sub
repz
test
lea
pushf
insb
outsl
leave
lds
out
lods
fisubrl
mov
lea
subb
xor
cmp
cld
mov
testb
out
mov
mov
mov
sub
rolb
dec
loop
cmp
das
jl
and
mov
jl
enter
mov
xorb
mov
pop
stc
cmpsb
or
inc
nop
js
repz
jnp
push
shlb
sbb
adc
jb
insl
mov
add
mov
xchg
mov
mulb
sahf
repnz
cld
popf
inc
out
fisubrl
xor
push
add
sub
xor
lea
andl
lods
push
or
popf
or
mov
imul
outsl
lods
dec
clc
adc
sahf
and
divb
mov
sbb
push
roll
mov
movsl
adc
das
popa
mov
and
imul
cmp
pop
cmp
into
stos
jns
and
jne
push
xor
scas
int
sbb
xchg
cltd
stos
mov
notl
xor
mov
fcoml
or
fadds
fmulp
jo
or
dec
add
jb
pushf
sub
insb
mov
js
cmpsb
add
fdivs
cs
mov
jecxz
popf
in
arpl
fadds
jp
into
out
imul
imul
mov
out
shrb
out
imul
mov
stos
test
je
xchg
loope
imul
jmp
ds
out
inc
pop
xor
push
cmpsb
outsl
push
pop
or
dec
mov
sub
add
xor
and
flds
sub
imul
jle
cltd
call
jns
shll
pmaxub
lret
dec
pop
es
sbb
xchg
push
push
lock
fidivrs
inc
test
das
sbb
ss
or
xchg
mov
hlt
mov
xchg
cmp
test
push
outsb
into
outsl
js
insb
lods
mov
enter
mov
mov
rcll
xchg
xchg
mov
lcall
test
pusha
imul
fcmovu
dec
mov
sub
sub
sub
popf
mov
cs
and
mov
das
in
cmp
ja
mov
inc
pop
shrl
jne
into
mov
pushf
push
idivb
paddusb
mov
dec
mov
ficomps
xchg
imulb
nop
arpl
lahf
mov
divl
mov
ds
pop
mov
xor
jno
pop
cwtl
pushf
in
adc
xchg
adc
repnz
jp
sarb
rolb
je
xor
int3
pop
fadds
inc
jge
inc
aas
cmp
pop
push
stos
add
pop
or
jl
fsubrl
mov
and
fsubrl
add
ja
pop
or
int3
mov
addr16
push
push
add
pop
call
push
mov
adc
cltd
inc
dec
xchg
ds
fwait
inc
movsl
rolb
std
adc
inc
and
pop
jno
lock
pop
aas
in
pop
cmp
add
int3
test
mov
je
ret
lods
insl
mov
or
stc
push
xchg
push
ja
shrl
sbb
jl
sub
pushl
mov
lret
and
gs
add
into
pop
xor
ret
aad
lods
test
je
dec
movsb
notb
adc
pop
add
and
or
scas
and
es
pop
dec
cmp
inc
mov
andl
inc
cmp
jmp
inc
ds
pop
push
mov
and
xchg
mov
xor
push
in
cmpb
push
inc
push
inc
aad
int
add
test
aam
pushf
adc
xchg
lcall
rcrb
flds
hlt
sub
insl
pop
into
push
je
shrb
xchg
clc
jbe
push
cld
cli
xlat
outsl
xlat
je
cmp
sbb
ljmp
xor
jb
movsl
dec
das
jbe
sub
mov
cmp
xchg
arpl
lods
pop
push
test
xor
loopne
sub
mov
push
push
xchg
jno
pop
cs
test
mov
shl
and
push
stos
push
arpl
cwtl
ret
icebp
pop
add
leave
shl
xor
cwtl
outsb
jne
rcrl
mov
pop
les
sti
add
popf
mov
sub
push
call
inc
cmp
xor
cmpl
iret
inc
or
jne
repz
xor
cmpsb
rorl
ja
shll
cmpsb
sbb
movl
dec
or
lods
inc
fs
pop
adc
nop
aas
inc
jno
addr16
xlat
fimuls
cmp
cli
jne
int3
push
pop
cmp
push
lods
cmpsb
stos
xor
mov
fs
cmc
cli
scas
push
jge
js
add
int
mov
dec
stos
and
fldenv
dec
lcall
scas
cltd
push
scas
xorl
je
lea
jb
rclb
sahf
mov
mov
xchg
loop
pop
pusha
sub
add
xchg
adc
cmp
sahf
repnz
mov
imul
and
mov
movsb
femms
std
and
mov
push
cmpb
jecxz
pop
sarb
mov
xor
insb
or
leave
lods
xor
jmp
lea
dec
jecxz
and
clc
dec
mov
jnp
fimuls
ds
mov
add
sarb
inc
xor
dec
adcb
fcoms
jbe
bnd
in
xor
xorb
jbe
js
xlat
rol
insl
xor
cld
popl
mov
push
in
icebp
insl
out
andl
jecxz
idivl
subl
rolb
xor
pop
pop
test
mov
shll
pop
cli
in
and
sub
cmpsb
dec
insl
cwtl
movsl
xchg
call
lock
icebp
push
loop
cmp
adc
jge
into
mov
repz
push
add
lret
xchg
and
mov
sbb
add
pop
pop
dec
cmc
fstpl
or
inc
add
pop
cmp
imul
adc
frstor
in
sub
int3
ret
das
cmp
pop
loopne
pop
and
sbb
pop
imul
cmpl
insl
mov
lods
mov
ljmp
jp
aas
comiss
cmpsb
mov
outsb
call
test
sub
jl
cmpsb
cmp
aaa
mov
mov
sub
pop
inc
pop
imul
jno
lcall
popa
and
setl
sub
test
aas
push
fisttpll
mov
adc
loop
fdivr
mov
std
inc
jl
push
xchg
cltd
fwait
imul
std
icebp
mov
pushf
cmp
xchg
mov
ja
pushf
pop
dec
repz
test
dec
cmp
int3
pushf
jo
aas
fs
lods
pop
aaa
loope
or
repnz
imul
push
pop
dec
sbb
mov
fwait
push
dec
pop
incl
dec
mov
popf
adc
cmp
sbb
mov
mov
aad
mov
mov
es
jge
fldt
dec
ret
daa
movsl
ror
xchg
cmp
cmpsl
or
pop
jp
jge
ljmp
andl
mov
jno
jns
fdivs
mov
pushf
pop
sbb
and
js
and
pusha
mov
dec
add
fisubl
jns
popf
and
cmpsb
pusha
mov
or
cltd
fistps
js
add
stc
jno
xor
aam
pop
ss
arpl
pop
jae
sbb
sarb
pushf
stos
dec
jns
and
lret
out
jnp
lods
je
or
arpl
and
outsl
cli
mov
sti
sti
stos
fwait
or
push
dec
ss
add
bound
adc
adc
dec
test
outsl
cmpsl
inc
in
mov
jo
pop
repz
mov
push
or
xor
xlat
sub
mov
ja
in
push
fbld
jns
xlat
int
xor
adc
mov
pushf
dec
push
cmpl
or
xor
xor
bound
mov
js
cmp
jnp
lock
int
stc
fimull
cmc
negl
inc
inc
aad
stos
cmp
movsl
in
sub
pop
add
sbb
cmpsb
rolb
cvtdq2ps
pusha
test
jp
adc
hlt
pop
xor
push
push
or
inc
xor
and
lods
push
scas
inc
pop
mov
iret
adc
test
sub
ret
jb
sarb
inc
mov
adc
insl
xor
push
int
dec
push
shl
mov
add
arpl
shrl
sbb
dec
fildll
push
test
xor
mov
outsw
mov
movsl
push
sbb
and
jno
stos
cli
popa
fwait
or
ficoml
rorb
cltd
dec
scas
mov
outsl
or
daa
mov
stos
push
dec
int3
loope
or
or
pop
xor
ss
cmp
or
dec
sbb
sbb
lahf
xchg
or
fsts
comiss
ret
enter
popa
out
sbb
aaa
mov
mov
mov
dec
ficomps
cld
lea
or
stos
in
pop
inc
push
and
fscale
xor
sbb
out
testl
mov
into
push
fwait
aam
xchg
push
cli
mov
hlt
js
stc
andb
push
push
mov
xor
push
adc
ret
scas
cs
imul
int
test
push
mov
popf
cmpl
pop
aad
mov
pop
xchg
and
push
fsubp
inc
cmp
cmc
lret
daa
and
imul
sti
jo
push
jne
cmp
jno
mov
inc
or
adc
push
in
out
xchg
inc
stos
mov
pop
and
int
inc
es
into
mov
xchg
and
and
lret
push
jnp
jle
jg
xorb
sbb
frstor
les
movsl
icebp
imul
jne
xor
xchg
sbb
mov
iret
fdivl
loope
ja
das
leave
xor
cwtl
fimull
cs
cmp
jmp
xorb
fstpl
and
shll
cld
in
push
hlt
push
stos
int3
adc
push
cmp
xor
pop
lods
les
scas
and
cmp
jp
aam
dec
push
bound
movsb
dec
xor
dec
dec
pop
lcall
cmp
inc
repz
mov
cli
arpl
inc
in
mov
notb
sub
addr16
cmp
push
inc
dec
scas
mov
jb
outsb
jp
insb
add
jmp
fistps
xor
and
push
bound
inc
or
pusha
js
xor
or
jecxz
adc
sub
mov
and
xchg
dec
js
xor
sti
sbb
inc
repz
cmpsb
xchg
das
mov
fadd
cltd
jp
outsl
lret
les
mov
push
fisubrl
pop
std
fistpl
mov
push
mov
insb
jge
aam
movsl
mov
mov
jle
inc
and
inc
nop
xchg
adc
pop
shlb
jnp
adc
jae
sbb
or
and
xor
jbe
cmp
es
jo
hlt
ljmp
cmp
or
aaa
cmp
test
cli
xor
ficomps
test
sub
imul
gs
mov
push
ret
cltd
fsubrl
fists
mov
xchg
mov
imul
leave
sahf
gs
lahf
jecxz
fadd
ror
lods
dec
mov
fimull
sub
ds
mov
mov
out
shl
testb
push
push
mov
sbb
shrb
dec
daa
fdivrs
push
and
adc
push
movsb
mov
arpl
push
mov
xor
jl
inc
or
xor
nop
jl
mov
mov
inc
add
and
cli
mov
and
pop
sub
mov
ret
mov
add
push
jl
dec
mov
mov
fstps
mov
aad
sahf
mov
cmpsb
fldcw
push
dec
jmp
nop
sub
rcll
repnz
ss
mov
dec
pop
sub
into
mov
xor
sbb
jecxz
mov
push
icebp
mov
mov
rcr
jmp
lods
repnz
outsl
add
fsubrl
mov
jae
ss
sub
shll
add
ret
mov
addb
mov
out
mov
fnstsw
mov
and
mov
xchg
test
jge
dec
jns
dec
movsl
push
adc
test
adc
inc
push
sub
out
aam
js
std
cmp
inc
jmp
inc
jae
xchg
andl
andb
pop
mov
repnz
sub
add
inc
and
test
add
xchg
inc
mov
test
lcall
mov
inc
push
pop
sarl
out
adc
xchg
ss
std
lds
or
jmp
lods
jns
gs
xchg
jp
xor
jne
fs
cmp
ds
xchg
sbb
mov
pop
jl
push
call
push
xchg
lock
jne
dec
add
sub
aaa
jbe
adcl
mov
adc
bound
push
lds
lods
mov
jbe
ret
imul
daa
mov
sub
adc
mov
push
sti
xchg
filds
jle
mov
sbb
xor
mov
aad
jns
sbb
jnp
xlat
lcall
call
push
adc
ds
outsb
cwtl
std
mov
mov
xchg
cmpsb
or
lret
movsl
sub
loope
push
in
pop
push
xchg
test
aaa
insl
mov
mov
mov
and
pop
mov
fstpl
shr
insl
adc
inc
repnz
xchg
mov
dec
push
sbb
and
add
pop
pop
sbb
sub
rorl
and
sbb
adc
clc
in
inc
push
adc
xor
add
loop
int3
or
lods
faddp
inc
ds
test
rcr
xor
in
int
leave
lds
xor
cli
scas
sub
pushf
jmp
cmc
sbbb
rcr
ja
jle
mov
push
push
push
imul
push
sarl
adc
mov
icebp
out
or
push
push
inc
rcrb
out
js
stos
and
lods
cli
mov
and
mov
or
inc
iret
mov
xor
arpl
repz
inc
inc
dec
clc
mov
dec
xchg
outsb
mull
ret
cmp
cmpsb
imul
repz
in
imul
mov
and
fs
outsl
push
rorb
imull
insb
and
xchg
mov
pusha
adc
and
loop
out
push
loop
cmp
movsl
sbb
cmp
test
popa
int3
sbb
cmp
jmp
mov
cmc
add
xchg
fcompl
loopne
sbb
mov
aas
sub
adc
movsl
xor
ss
jl
mov
ljmp
sahf
cmp
xchg
data16
xor
je
fld
pusha
ja
out
popf
mov
xchg
leave
insl
pop
shll
fwait
dec
and
cmpb
notb
xchg
mov
add
call
sti
sub
lods
jbe
add
ret
sub
lret
shll
cmp
pop
push
jl
ret
into
pop
jb
mov
outsb
pop
imul
xchg
aam
pop
pop
dec
mov
daa
and
xor
fdivs
test
adc
cmp
movsb
mov
dec
xchg
dec
inc
jl
jae
inc
pusha
aam
orb
pop
lods
fldcw
jno
sub
inc
and
daa
xchg
mov
mov
pop
sub
or
ss
pop
je
fucomip
cmp
xchg
addr16
pop
adc
shl
cmp
xchg
push
xchg
sub
xchg
add
cmp
xchg
in
pop
adc
lods
notb
ret
out
mov
push
pextrw
jmp
lret
mov
cld
xor
jno
test
leave
inc
aam
adc
sbb
movsb
mov
int
dec
daa
fistps
jbe
lret
dec
xchg
mov
cwtl
dec
in
or
xor
push
adc
xlat
in
mov
adc
push
clc
aaa
dec
add
scas
sbb
loop
cmp
fmuls
mov
push
jg
add
out
add
adc
fs
add
add
jecxz
out
push
mov
mov
xor
pop
and
pop
cltd
dec
jmp
pop
imul
scas
mov
and
xchg
aas
call
movsb
pop
push
adc
stc
fiadds
nop
or
mov
dec
dec
cltd
lds
mov
test
cmc
cld
or
push
lds
cld
outsl
repz
sub
lret
xchg
pop
dec
mov
mov
adc
shrb
fcompl
cmp
fs
mov
pop
jl
inc
inc
insl
lock
pop
cwtl
push
sbb
push
inc
shlb
add
std
ljmp
and
push
call
xor
mov
or
std
lret
in
cltd
sar
xchg
inc
mov
sbb
clc
daa
push
dec
jae
mov
pop
imul
add
add
jl
dec
inc
arpl
and
lock
data16
pop
mov
xlat
es
fsubrs
in
leave
push
enter
pop
rorl
shll
dec
inc
push
out
sub
mov
adc
sbb
fs
mov
mov
mov
sbb
movsb
ja
cwtl
dec
or
or
daa
dec
lahf
cltd
and
dec
addr16
out
andl
frstor
daa
test
add
inc
cmc
jmp
test
in
lret
int3
xor
mov
adc
push
out
lods
xor
jno
mov
popa
xlat
mov
scas
in
imul
jb
insl
push
ret
push
mov
mov
adc
stos
fnstsw
cmp
and
rcrb
sub
movsl
mov
nop
cli
aad
stos
popl
and
cmp
sahf
bound
int
test
test
scas
add
cmp
in
adc
shll
xchg
mov
in
fldl2t
or
in
stos
out
ror
jmp
add
add
add
add
ret
xchg
mov
push
iret
movsl
cmc
jno
cvtpi2ps
je
push
and
hlt
iret
jo
dec
inc
adc
push
sbb
cwtl
sub
lds
popf
mov
or
ljmp
daa
jns
dec
jne
pop
popl
test
add
and
pushf
xchg
push
xchg
or
dec
aam
mov
int3
sbbl
and
pop
push
fisubl
lahf
insb
jmp
test
pop
mov
cmc
inc
mov
daa
jg
add
and
repz
jae
xor
jno
iret
jge
bound
int
test
jmp
xchg
cmp
shlb
xchg
dec
xchg
jb
jg
movsb
gs
dec
sbb
sub
or
cwtl
pop
xchg
ss
shrb
test
movsl
add
mov
test
scas
fistpll
scas
cmpsb
shll
roll
addr16
shlb
inc
js
jg
lock
jno
pop
addl
add
nop
cmc
jne
inc
mov
xchg
adc
in
push
cmc
jb
xor
test
cmp
fisttpl
mov
push
push
out
decl
bound
shll
add
aaa
int3
cmp
outsb
push
cmovp
lret
jle
inc
nop
loope
jae
dec
cli
dec
mov
sti
dec
lds
daa
cs
pop
and
loopne
push
or
outsb
lods
nop
imul
cmp
int3
fwait
xor
rcr
out
jae
inc
push
xor
lods
arpl
add
daa
cmp
fldt
push
addr16
je
test
lret
incb
or
not
loop
rorl
std
inc
jo
loope
add
dec
fcompl
call
push
test
jbe
sub
mov
mov
or
sub
les
pop
push
pop
out
mov
or
pop
cmpsb
ljmp
cmpsl
pop
pop
insb
ja
es
lods
cmp
cmpsl
inc
aad
idivl
dec
aad
adc
loop
test
inc
shll
sbb
jbe
pop
in
xchg
ret
dec
into
inc
scas
stos
fdivl
aaa
inc
jmp
fsts
jle
enter
add
les
jb
sti
hlt
repz
leave
jp
and
push
inc
lret
pop
addr16
cmp
and
arpl
add
pop
cmp
add
xor
jp
and
insl
xchg
stos
jl
mov
mov
pop
xor
xchg
or
dec
lock
jne
stos
and
jl
lods
xorb
add
mov
das
pop
negl
sti
dec
mov
in
cld
pop
ss
scas
xchg
jp
mov
xchg
repz
fsubr
or
and
push
cmp
mov
adc
gs
cmc
in
push
jge
jge
hlt
mov
das
orb
test
cmp
mov
mov
pop
cmc
ret
jmp
notl
in
inc
popf
mov
add
jb
fistpl
push
and
sub
out
jle
and
loope
loope
adcb
inc
test
push
iret
ret
fsub
sbb
jne
in
jb
inc
mov
jmp
enter
nop
aas
and
mov
mov
imul
call
pop
insl
aad
push
sbb
stc
mov
jae
fucomip
clc
filds
mov
jo
jp
push
xor
jnp
ljmp
cs
roll
sbb
mov
hlt
jmp
addr16
xchg
scas
mov
mov
lret
fldcw
fistl
shl
pop
add
pushf
adc
sti
push
lods
test
bound
jle
data16
loope
stos
xchg
mov
or
mov
ds
jmp
fs
mov
mov
lods
insb
cmove
dec
hlt
cli
mov
mov
and
mov
inc
dec
add
jecxz
xor
or
lret
das
push
xchg
add
inc
mov
sbb
or
daa
sbb
call
push
or
lahf
sbb
sbb
sub
inc
jg
jns
jle
stos
mov
nop
fmulp
ljmp
pop
add
push
mov
dec
sbb
pop
sub
add
dec
cmpsl
jmp
cmp
cmpsl
xor
dec
lret
sub
mov
push
enter
mov
rcrb
hlt
jmp
shl
addr16
pop
or
inc
jl
xchg
jae
dec
adc
dec
mov
cmp
dec
cmp
leave
mov
repnz
xchg
push
out
iret
and
push
mov
cmp
sub
mov
add
mov
add
inc
adc
add
aam
inc
dec
pop
adc
mov
and
inc
shrb
inc
sarl
fbld
jb
enter
shl
fiadds
out
int
outsl
or
add
and
fstl
xchg
mov
add
dec
in
dec
jmp
loop
fisubs
mov
adc
cmpb
cmpsb
lret
out
cltd
cmpsl
shrl
jp
sbb
jle
push
jo
stc
xchg
rcl
daa
in
sti
or
bound
in
push
je
jecxz
push
push
mov
outsl
movsl
xchg
sbb
push
mov
icebp
mov
jbe
jge
xor
pusha
jae
test
dec
sub
and
fs
jbe
xchg
and
push
cltd
outsl
cmp
shll
jge
daa
mov
pop
scas
lret
arpl
call
dec
adc
jle
lds
and
inc
jae
add
movsl
adc
rorl
pop
adc
cmp
mov
adc
jl
stc
xor
inc
fisttps
xchg
js
xor
xlat
and
in
cmp
pop
xlat
popa
fincstp
stos
fisubs
cmp
es
sbb
pop
int
pop
mov
jg
test
cmp
enter
add
pop
sbb
dec
or
lock
pop
push
jl
push
mov
cmp
xchg
add
lods
jle
clc
xor
or
shll
adc
inc
lods
addr16
pop
lods
xchg
pushl
adc
cmp
push
imul
sbb
std
mov
fidivrl
lock
mov
gs
mov
push
shrb
mov
or
xor
and
push
jbe
cli
or
cmp
inc
pop
je
fimuls
push
jbe
push
stos
xchg
pop
pusha
dec
gs
out
ds
pushl
or
inc
stc
aas
adc
push
dec
outsb
cmpsb
inc
push
repz
mov
jl
mov
sbb
ret
push
jbe
xchg
adc
xor
ss
bound
fcomp
add
sbb
fcmovb
fadds
xchg
mov
mov
mov
ljmp
rcll
ror
data16
push
pop
jnp
push
xor
pop
pop
int
add
imul
add
sbb
inc
addr16
insb
sbb
xchg
xchg
push
fs
jnp
mov
arpl
icebp
pop
mov
sub
in
cli
sub
sahf
dec
pusha
ja
dec
out
adc
xchg
loop
shl
inc
inc
gs
or
test
outsb
and
dec
lock
out
xchg
jecxz
mov
xchg
aaa
push
scas
cmp
xor
sti
xlat
jae
ror
int
pop
lods
divb
lds
movb
insb
mov
inc
inc
bnd
mov
xlat
loope
xchg
mov
mov
mov
cmc
inc
mov
enter
int
hlt
xchg
sahf
inc
ret
hlt
sti
shll
pop
jmp
scas
mov
cld
pop
insb
ss
ljmp
into
xchg
cmp
ret
sub
fs
je
jecxz,pt
sbb
xor
add
fisttpl
lods
xor
lock
inc
mov
cmp
nop
mov
jne
dec
mov
jbe
xchg
mov
sub
cltd
out
repz
fists
dec
dec
orb
xor
inc
xchg
push
jmp
inc
sti
mov
xlat
shrb
ljmp
inc
aad
dec
mov
ljmp
and
dec
adc
cltd
sub
jmp
rcrl
push
insb
mov
in
sbbl
adc
sub
lods
xor
outsb
data16
and
into
ds
addr16
sub
jno
inc
cs
push
repnz
xchg
mov
sti
leave
es
cmp
sti
add
test
fdivs
or
sub
popf
call
and
mov
daa
outsl
std
ss
or
popf
cmpsl
jnp
sub
and
pop
iret
mov
lret
std
add
mov
imul
lahf
mov
sub
xor
ds
pusha
xor
sub
stos
mov
shll
add
sub
cmpsb
pusha
int
cmpsb
test
mov
mov
jb
inc
mov
and
push
add
mov
mov
dec
pop
subb
dec
sub
jmp
xor
aad
sub
dec
sti
insl
adc
les
daa
nop
sahf
push
jno
subl
out
add
pslld
mov
xchg
leave
daa
cmp
or
pop
sub
or
addr16
daa
lock
mov
xchg
add
loope
push
or
ss
xor
lcall
fistpl
and
push
jge
imul
aad
jns
aas
xchg
iret
inc
jg
xor
lds
iret
add
adc
daa
push
fisubrs
or
lret
cltd
or
mov
loopne
in
ret
stos
mov
push
enter
cli
cli
int
mov
mov
icebp
aad
rcrl
out
hlt
jno
out
dec
aad
fs
mov
fdivl
lock
movsb
inc
fwait
shrb
movsl
dec
push
loop
jmp
add
push
cmp
lret
bound
fidivrl
add
cmp
sbb
xchg
and
js
sub
lahf
add
jne
cmp
inc
mov
in
mov
in
xor
jecxz
scas
dec
in
pushf
mov
iret
lahf
jnp
out
stos
adc
lock
xchg
xor
pop
fidivl
out
push
inc
pop
fmulp
xchg
and
cli
and
xchg
in
jg
cmc
xchg
enter
sbb
cmp
shll
pushf
cmc
insl
lods
shll
aad
xchg
lret
mov
pop
mov
test
mov
in
fists
idivl
mov
loope
repnz
jp
pusha
sbb
lea
dec
pop
repnz
push
pop
inc
mov
imul
imul
sahf
xchg
inc
sahf
mov
rcrb
adc
or
icebp
out
lock
sub
in
movsl
sub
mov
dec
push
xor
pminub
cmpsb
loope
cmp
jne
adc
pop
lock
movsl
or
push
and
mov
mov
aam
das
add
scas
mov
pop
pop
push
push
dec
or
movsb
xchg
inc
adc
push
mov
in
mov
sub
push
aad
jge
push
xchg
xchg
ds
lea
mov
push
mov
push
arpl
scas
int3
jns
mov
fcmovne
mov
pop
loop
push
fcmovb
pop
mov
repz
cltd
ds
jbe
fadd
les
dec
or
rclb
cmp
orb
dec
mov
dec
inc
or
xor
lea
cld
push
or
cmp
out
test
jge
add
mov
cltd
dec
sub
xor
shrl
shrb
insl
dec
lods
mov
testl
icebp
dec
aad
lds
fwait
sub
cld
jb
pusha
pop
sbb
repnz
stos
mov
popa
sbb
jno
inc
mov
sbb
ss
jne
fwait
inc
sub
lods
repnz
loope
rol
imul
pop
jbe
into
int3
std
xchg
out
lods
pop
pop
jb
das
lods
imull
cmpl
lret
loopne
cmp
lahf
cmpsb
push
push
mov
stos
in
sbb
lock
lods
adc
cmpsb
pushf
sbb
mov
imul
cltd
sub
inc
push
jg
fimull
and
fldcw
add
pop
iret
inc
addr16
inc
add
sbb
fiaddl
push
test
je
dec
xor
sbbl
or
inc
mov
jns
mov
je
cld
jp
inc
nop
clc
push
sub
test
cmp
ds
sbb
lret
and
nop
call
cltd
inc
mov
mov
jne
inc
and
add
nop
sbb
add
insb
ljmp
lahf
and
adcl
mov
sub
jne
sub
std
ljmp
repz
sbb
sub
cld
sti
loopne
out
push
movsl
add
repnz
inc
push
sbbb
out
mov
pop
pop
jbe
in
or
movsb
lock
pushf
cmpsb
push
mov
mov
sub
sbb
mov
dec
jno
loop
jge
loope
mov
movsl
clc
cmc
sbb
inc
test
mov
out
insb
xor
iret
ja
jne
mov
pop
cvtps2pd
aad
sub
loopne
adc
mov
mov
pop
out
out
ja
sbb
sbb
rcrl
into
cmpb
loopne
jbe
pop
pop
in
lahf
xor
loop
pop
imul
lods
fs
pop
aad
mov
outsl
add
inc
mov
cmpsl
sub
orl
sti
hlt
lds
loopne
add
pop
pop
andl
adc
stos
push
xor
movb
jge
mov
sub
mov
push
frstor
gs
pop
testl
cmp
daa
movsb
inc
ret
aam
out
cmp
sbb
xchg
jmp
cltd
sbb
jo
sarb
sahf
loopne
outsl
mov
cs
arpl
ss
fs
aas
cli
insb
faddp
jmp
sbb
and
mov
mov
test
out
rcrl
sub
loope
cmc
fsubrs
jp
mov
and
cmp
mov
pop
push
in
in
jnp
mov
add
xor
leave
sub
add
test
cmc
push
push
cmc
movsb
add
jae
mov
rorl
cmc
fisubs
cli
daa
sti
mov
xchg
jne
mov
iret
andl
pop
pop
push
adc
and
repz
cmpsb
cs
mov
je
sti
cli
out
mov
push
repnz
sbbb
xchg
hlt
dec
inc
xor
xchg
add
cltd
ljmp
cmpb
add
pushf
out
mov
pop
icebp
popf
out
aad
mov
lret
inc
jne
sti
cmp
sahf
mov
bound
daa
test
daa
xor
and
or
cmp
lds
popf
in
jne
lock
dec
int3
fwait
movsb
mov
mov
add
inc
adc
lods
sti
testb
jecxz
sbb
leave
mov
imulb
mov
fidivs
or
lcall
xchg
inc
mov
filds
gs
jb
mov
int
pushf
jo
addr16
inc
sbb
lahf
jl
add
xchg
das
inc
inc
mov
ror
sbb
mov
push
xor
sub
sbb
pop
fs
pop
pushf
sbb
jbe
andl
xchg
ds
ljmp
cld
es
loopne
xor
idiv
mov
int
inc
ja
jl
mov
fisubs
add
call
and
lods
sbbb
rol
mov
jge
leave
icebp
adc
push
mov
sbb
repz
movups
test
repnz
ljmp
cmp
test
gs
test
inc
scas
fisttpll
imul
mov
xchg
lahf
out
loopne
adc
rolb
cmc
mov
adc
sub
sub
mov
cmp
mov
clc
aas
xor
pop
mov
pushf
in
xor
push
pop
add
push
pushf
andb
sbb
push
hlt
cmp
sbb
pop
rol
sub
jnp
movb
lahf
jae
lret
or
dec
mov
add
sbb
lret
out
cmpsl
xchg
pop
fwait
in
stc
outsl
stos
push
ljmp
dec
jl
ret
inc
adc
das
sub
jle
cmc
in
repz
out
test
in
repnz
shl
xchg
push
enter
add
sub
sbb
cmp
outsb
push
pop
pop
hlt
outsl
mov
adc
test
call
pop
outsb
dec
pop
lcall
pop
or
test
dec
lret
repnz
pop
xor
sub
dec
mov
jmp
loop
frstor
mov
xor
cs
pushl
lahf
ljmp
movsl
pop
or
jnp
mov
pop
data16
jb
pop
mov
fcoms
ja
sub
jge
xchg
in
fwait
stos
jl
push
xlat
mov
or
sub
int
adc
into
pop
xor
inc
rolb
gs
sub
fistl
insl
mov
shlb
push
jae
mov
jecxz
jae
sbb
cmp
loop
std
sahf
adc
ds
adc
cmp
mov
sahf
daa
dec
inc
mov
adc
repz
cmp
shll
shrb
sub
dec
mov
push
or
and
sbb
daa
xchg
arpl
sbb
xorl
call
insl
orb
add
inc
into
xor
aad
rcrl
add
adc
sti
cmc
mov
adc
jbe
cmp
arpl
pop
ret
cmpsl
arpl
add
out
rol
jbe
ja
cltd
dec
mov
sti
mov
adc
outsb
cmp
add
addr16
xor
mov
mov
gs
out
std
dec
cs
je
xor
push
xor
repz
in
lcall
pop
mov
add
xchg
cmpl
dec
xchg
popf
xor
and
and
dec
or
xchg
mov
movsl
dec
push
or
adc
gs
push
cmp
mov
jle
add
xor
daa
es
dec
cs
dec
sahf
xor
cmp
les
inc
insl
enter
lds
movsl
out
out
scas
notb
xor
lods
imul
push
sub
ss
mov
loopne
jb
pop
test
mov
or
frstpm(287
inc
jg
lock
fisubl
push
sbb
mov
dec
xchg
movsl
sarb
jp
cmp
mov
add
popa
addl
lcall
inc
push
push
xor
and
je
fiaddl
test
mov
sbb
jae
push
dec
push
pop
int
pop
sbb
out
sarl
ja
cmpsl
sbb
and
lret
adc
outsl
outsb
and
fbstp
mov
fbld
fimull
fwait
mov
mov
rorb
pop
sbb
mov
addr16
sbb
lret
adc
gs
add
cli
data16
insl
repz
call
scas
orb
xchg
call
inc
dec
ret
mov
mov
nop
or
outsb
xlat
fcomps
lret
clc
xchg
jnp
xor
shrl
xor
push
mov
push
loope
or
and
and
fwait
outsb
cs
ret
repz
and
into
lret
and
push
dec
inc
sub
pop
push
push
xor
mov
dec
adc
mov
les
outsl
ret
iret
std
sbb
test
mov
inc
cmpl
mov
notl
sbbb
fisttpll
cmp
shll
imul
adc
in
pop
arpl
outsl
aad
sbb
int
daa
loop
dec
adc
mov
mov
andl
jecxz
mov
add
inc
push
xor
scas
fs
xor
or
push
test
notb
movb
in
push
in
inc
inc
jge
or
sti
sbb
adc
pop
pop
dec
or
jle
jae
pop
in
push
pop
or
pop
mov
mov
testb
movsl
push
int3
out
notl
add
and
sti
add
jnp
pop
inc
push
xchg
out
pop
jecxz
out
pop
pop
push
out
mov
sub
gs
leave
push
ljmp
or
in
je
outsl
dec
lret
lods
xchg
inc
jb
lods
or
lods
aad
call
lahf
daa
ja
or
mov
insb
fistps
sbb
mov
call
and
jb
add
lret
xchg
push
nop
iret
sub
dec
dec
adc
sbb
and
add
and
ret
jle
popa
dec
das
adc
mov
and
pop
adc
pusha
fsts
mov
cli
outsb
movsb
icebp
ret
pop
jg
mov
dec
cmp
fs
std
push
das
jae
stos
jp
fadd
adc
push
movsl
int
push
cmpsb
xor
push
pop
mov
and
inc
jge
cmp
out
icebp
in
pop
dec
jmp
cld
pop
jb
pushf
add
pusha
insl
jecxz
sets
mov
ljmp
xor
popa
ret
cmp
adc
outsb
out
rolb
pusha
aam
ljmp
orb
inc
xadd
or
pusha
mov
mov
in
pop
lret
daa
mov
loope
test
faddl
sub
adc
outsl
sbb
popf
inc
mov
sub
and
loop
inc
sarb
inc
cmp
add
jp
ljmp
rep
cmp
test
scas
fsubs
mov
out
lods
stos
xchg
pop
xor
lea
jbe
clc
dec
in
repz
cmpl
pushl
sbb
cmpsb
cmp
out
repz
sbb
inc
mov
mov
clc
jecxz
icebp
les
adc
shlb
out
mov
push
fidivrs
cmp
nop
test
pusha
dec
mov
cmp
xchg
test
pop
popa
in
jnp
pop
dec
push
sub
loope
mov
mov
or
in
test
adc
test
mov
popl
jge
cltd
xor
stos
sub
andl
or
sahf
ror
out
jnp
pop
dec
mov
xchg
mov
push
clc
lahf
and
and
xchg
loop
call
pop
jp
mov
or
sub
out
xchg
pop
and
mov
or
mov
stc
push
jne
sti
test
or
xchg
pop
inc
call
mov
imul
mov
scas
stos
insb
and
dec
rorb
mov
fcmovne
bound
orb
jb
jbe
insb
xor
jnp
outsb
dec
xor
cmpsb
test
cmp
hlt
push
and
cmpsl
ljmp
jo
inc
and
es
jne
push
sahf
and
xor
sbb
nop
movl
out
jb
xchg
cs
cs
jg
stos
pop
and
orl
js
test
jb
pop
cmp
pop
sub
out
cld
mov
imull
mov
cmp
pop
sub
insb
push
cli
push
ss
push
pop
mov
add
test
push
xor
mov
dec
xchg
mov
jb
js
push
mov
xor
and
imul
pushf
and
test
out
mov
pop
sub
iret
pop
test
dec
or
idivb
lods
mov
or
add
rorb
loop
jp
or
fdivs
imul
hlt
and
movsb
mov
cmp
sub
imulb
adc
sub
mov
push
cs
dec
out
movsb
jmp
rcr
in
mov
jno
pusha
shl
xchg
bound
es
xchg
fldt
jp
loopne
gs
aam
call
fldl
pop
pop
scas
je
ret
insb
lds
inc
fisttps
add
daa
dec
icebp
push
pop
cmpsb
or
pop
mov
jle
inc
and
or
pushf
mov
jb
xlat
into
push
rcrb
jo
iret
mov
in
push
lret
sbbl
ss
out
leave
mov
mov
jmp
adc
dec
mov
iret
test
movsb
data16
andb
jl
adc
sbb
push
lret
jle
stos
add
adc
jle
inc
or
mov
jle
cmp
ret
mov
adc
sub
mov
ret
loope
and
inc
xor
decl
pusha
mov
mov
int
inc
in
addl
adc
add
shrl
mov
cmp
imul
mov
out
jp
cmp
jne
mov
jge
inc
xlat
lret
sbb
push
repnz
push
leave
movsb
adc
jge
or
push
data16
mov
xor
into
ss
rclb
or
sbb
pop
scas
xchg
lahf
cmc
cli
push
lods
mov
fsubs
hlt
lahf
popa
leave
lods
negb
add
jle
jae
push
aas
test
jne
loope
icebp
call
mov
push
cmpsl
push
xchg
mov
cmp
lods
test
sahf
call
sbb
scas
fsubrp
stos
sbb
jecxz
insl
rorl
push
xchg
push
mov
add
aas
mov
add
xchg
stos
ljmp
das
mov
add
or
clc
jbe
enter
enter
cmc
cmp
or
loopne
and
dec
jg
loope
lret
cmp
lock
lret
dec
xchg
movsl
pushf
cmpsl
jmp
ja
imul
addb
mov
gs
dec
ss
repz
cmp
int
fisttpll
lahf
les
decl
int3
int3
mov
mov
sti
popl
out
pop
or
lods
push
dec
cli
clc
lahf
jp
insb
outsb
mov
mov
adc
ret
xchg
cs
sub
sub
xchg
addl
lcall
mov
scas
push
sub
test
cmpsl
lret
dec
dec
test
jle
xor
add
mov
lods
jbe
adc
lahf
test
mov
mov
repz
int
ret
add
dec
mov
daa
cmpsb
pushf
addb
jb
push
sub
aaa
ja
inc
popf
sub
mov
mov
push
cltd
es
enter
movsl
inc
lahf
loopne
movsl
pop
jo
push
fsubrl
lea
shll
xchg
nop
sbb
xor
and
inc
xchg
xchg
rclb
inc
xor
je
sbb
or
mov
out
xor
dec
outsl
daa
shlb
popa
movsl
in
mov
inc
rcrl
xchg
cmp
push
push
enter
les
aas
xor
movsl
mov
mov
jne
xor
mov
cmp
push
pop
das
push
mov
inc
xor
mov
jmp
xchg
enter
xorb
add
mov
repz
sub
movsl
les
xchg
arpl
xchg
mov
cwtl
and
test
inc
adc
mov
mov
loopne
pop
jecxz
add
dec
cld
std
iret
mov
je
push
xorb
clc
add
xlat
or
push
jmp
jb
aas
inc
xchg
xchg
rcrb
aaa
mov
jle
lret
adc
pushf
scas
icebp
es
or
je
out
xchg
mov
sahf
mov
les
in
ret
and
mov
dec
push
mov
mov
dec
test
and
push
aas
js
cli
pop
push
inc
cmpsl
cli
cs
jp
xchg
cmp
les
cmp
jnp
xor
sbbb
ljmp
lea
stos
jmp
jno
dec
add
popa
outsl
xchg
push
sub
adc
jnp
cli
sub
lds
pop
add
je
xchg
inc
inc
leave
sub
sub
inc
dec
push
mov
jg
fucom
adc
jmp
arpl
push
jmp
fiadds
jp
cmpsl
mov
jns
shrl
jnp
dec
push
inc
cmp
mov
aad
imul
mov
fwait
xchg
andb
mov
ds
dec
mov
popf
sbb
notl
inc
inc
jo
inc
xor
adc
mov
dec
rcrl
push
adc
or
mov
loop,pn
pop
mov
and
iret
flds
and
loop
inc
jle
rolb
jo
mov
lods
xchg
pop
rol
xchg
push
push
cmp
arpl
dec
mov
test
roll
call
loopne
fs
fldenv
lock
add
cmp
scas
hlt
add
cmpsb
scas
pop
sbb
lahf
jge
popa
jge
movsl
xchg
sbb
icebp
mov
jge
xor
xor
in
sbb
and
imul
clc
hlt
xchg
jb
xor
int3
xor
hlt
pop
push
add
jmp
stos
add
mov
or
inc
inc
adc
inc
xchg
bound
xor
mov
stos
mov
pop
push
shrb
icebp
or
adc
sub
addl
lret
rclb
pop
jmp
xchg
mov
xchg
sub
cmp
pop
cltd
inc
mov
scas
shl
adc
shlb
xor
xchg
xor
add
mov
addl
or
sti
ret
mov
and
mov
call
jne
icebp
aad
movlhps
mov
or
mov
push
adc
incl
in
nopl
inc
ror
jo
cld
int
mov
cltd
iret
scas
add
movsl
out
rorb
inc
insl
gs
lds
jns
clc
cmpl
inc
push
or
xchg
shll
loope
jns
cmp
adc
mov
ret
xorl
xchg
ja
aam
outsb
xchg
dec
sub
rcll
rorb
sbb
test
sbb
xor
or
imul
shll
outsb
out
loop
sub
xor
and
mov
test
ret
push
cmp
ret
lea
pop
fdivrp
notb
sub
imul
leave
cld
push
clc
mov
sahf
inc
loop
or
orl
sarb
pop
adc
insl
mov
fldpi
fsubrs
movsl
out
ss
jne
cmp
xchg
mov
xchg
xchg
ret
dec
adc
rcr
cmp
movsl
lcall
cld
dec
sbb
pop
cwtl
dec
xadd
std
loope
sbb
imul
movsb
pushw
int3
jbe
push
nop
adc
add
nop
hlt
mov
adc
xor
negl
jae
pushf
test
sub
xchg
stos
lods
fmuls
outsb
loop
fildll
mov
jg
sbb
push
subl
mov
lcall
in
or
fwait
loope
loop
sarb
mov
mov
rcll
jbe
loopne
xchg
jbe
xchg
xchg
cld
mov
mov
fisubl
outsb
int3
pusha
mov
lods
jnp
pop
mov
sbb
sbb
dec
lock
hlt
sbb
mov
push
xchg
out
aam
mov
mov
mov
pop
and
call
jbe
into
shll
or
imul
xchg
xchg
aas
testb
cltd
inc
in
jmp
jmp
xor
rcrl
mov
jbe
xor
out
push
pop
fs
lcall
cli
aaa
mov
adc
aad
outsb
ror
popf
pop
dec
leave
push
das
bound
outsb
xchg
rcl
js
cmp
cmp
pop
std
dec
rclb
or
into
mov
dec
inc
movsl
std
loop
out
dec
pop
daa
divl
sbb
adc
imul
xchg
mov
out
aad
hlt
ss
dec
test
pop
cli
movsl
mov
xchg
inc
mov
int
cmp
or
scas
insl
sbb
sub
pop
sub
aad
pop
insb
insb
stos
fdivp
pop
movsb
jge
xor
xlat
ds
cmp
cmp
jecxz
inc
dec
idivb
data16
push
rorb
dec
cmp
cs
jg
in
std
out
rclb
pusha
mov
icebp
rclb
xchg
stc
ret
push
pop
pop
xorl
leavew
xchg
je
sarl
cmpsb
sub
repnz
jmp
sub
test
dec
mov
or
xlat
icebp
sub
xchg
jns
push
stos
jg
shlb
outsl
pop
loop
push
cld
addl
popa
cmp
push
je
and
sahf
pop
cli
mov
jae
push
jmp
rol
pop
loopne
mov
je
or
popa
mov
pop
mov
faddp
xchg
mov
cli
mov
mov
mov
add
push
dec
sbb
dec
xchg
cld
mov
push
add
mov
loope
push
and
into
jno
adc
cltd
test
aad
xchg
pop
dec
and
push
pop
into
clc
cmpsl
push
pop
imul
mov
mov
add
or
cwtl
xor
sub
aam
xchg
loop
mov
mov
arpl
adc
xor
roll
xchg
cmc
xlat
je
adc
push
xchg
ja
and
in
jecxz
int3
lods
push
insb
mov
push
shlb
ljmp
cmp
icebp
mov
iret
fdivr
sbb
xor
or
scas
sbb
testb
fwait
mov
and
add
repnz
xchg
adcl
addr16
adc
dec
jg
mov
into
lods
sub
dec
sbb
xchg
mov
filds
jg
xchg
push
pop
je
dec
xchg
stos
movl
push
movsb
jle
dec
rcrb
sbb
fsubl
lds
test
stos
xchg
add
cmp
xchg
pop
test
adc
cmp
inc
pop
push
xchg
push
mov
js
sbb
xchg
add
rcr
test
jmp
stos
jb
and
jo
sbb
mov
inc
je
and
lods
or
adc
sbb
mov
xorb
push
hlt
insb
out
sbb
push
add
idivl
jmp
subb
bnd
inc
push
testb
popf
rcl
sbb
mov
iret
fsubl
jb
pushf
mov
loope
sub
sti
adc
xchg
ljmp
mov
andb
adc
gs
repnz
adc
or
dec
cmpsl
jge
add
stc
sub
in
lods
pop
push
add
push
pop
adc
ret
push
cmpsl
xchg
pop
lods
stos
and
data16
arpl
jns
lcall
cs
leave
mov
and
xchg
sarb
lods
aam
ret
les
adcl
sbb
out
pushf
mov
pop
cvtps2pi
cmp
jecxz
flds
aas
adc
scas
stos
inc
cmp
dec
hlt
mov
jg
imul
inc
iret
mov
xchg
dec
lret
xchg
ljmp
pop
cmp
ds
or
cld
sahf
dec
pop
jae
or
cltd
or
push
add
cmpb
jne
push
movsb
daa
jae
fdivs
xchg
or
idivl
sub
adc
jnp
mov
mov
stc
pop
bound
divb
popf
mov
sarl
or
mov
fwait
mov
loop
or
and
leave
hlt
xchg
out
leave
mov
out
imul
xor
das
test
and
pop
aam
push
out
pop
jo
gs
jle
aas
mov
pop
sbb
mov
cmp
in
mov
outsl
shll
sarb
push
xor
lcall
xor
dec
std
out
adc
dec
cld
dec
jl
cmp
hlt
pop
jo
test
jl
lret
mov
add
jl
dec
das
jbe
xchg
ret
cmp
mov
xor
jl
fnstcw
xchg
mov
jns
dec
push
sub
in
dec
xlat
push
outsb
mov
subb
mov
scas
in
fs
sub
out
pop
idivl
fidivrl
adc
lahf
ja
mov
add
xchg
int3
iret
popa
xor
mov
out
xchg
inc
push
push
mov
mov
cmpsb
fucomp
dec
mov
fidivl
aaa
push
notb
mov
lds
cltd
sub
idivb
dec
jb
jp
mov
imul
jb
pop
xlat
fisttpll
cltd
out
jae
mov
xor
jp
cld
cli
dec
mov
sub
jns
ror
shlb
dec
shlb
sbb
fmulp
add
jecxz
fstl
nop
arpl
roll
int3
xor
fists
outsl
lret
sbb
and
sbbb
push
repz
fdivl
lcall
cwtl
sub
bound
in
rolb
ret
or
idivl
or
xor
and
pop
push
adc
mov
cmc
sub
inc
rorl
push
mov
lcall
xor
lock
pusha
frstor
xor
les
xchg
mov
arpl
and
jg
or
mov
mov
movsl
xor
test
les
xchg
push
dec
xchg
shl
mov
dec
inc
mov
das
mov
xchg
out
rclb
dec
fcmovbe
dec
fs
xchg
jae
push
mov
adc
div
sub
push
mov
inc
xchg
sbb
shll
shrl
mov
xchg
jae
scas
jb
inc
add
or
sub
cs
movsb
mov
sarl
mov
push
aas
adc
inc
sub
insb
cmp
cmp
sub
xchg
push
cmpsb
pop
cmpsb
mov
mov
inc
fsubrs
aaa
add
inc
das
and
lods
ljmp
mov
jp
fistps
xor
add
and
nop
mov
insl
ja
cltd
push
xor
inc
mov
push
pushf
fdivs
and
jbe
cmp
je
ffreep
cmp
push
push
ljmp
cltd
sbb
xlat
jae
arpl
xchg
xchg
cmp
mov
push
xor
add
mov
or
sti
cld
sbb
jb
ror
les
or
aaa
ljmp
mov
insl
adc
mov
les
sbb
xchg
jo
push
xor
aas
xorb
mov
xor
jb
aas
jg
jmp
dec
pop
out
add
dec
xchg
sbb
out
ja
inc
fidivrl
add
jb
test
divb
loope
jecxz
inc
fldenv
and
rcr
xchg
mov
pushf
inc
push
sahf
jno
cmp
mov
mov
ffree
mov
or
dec
or
xor
mov
fcomi
mov
in
popa
fnstsw
stos
int3
lret
addr16
repz
mov
addr16
lods
sbb
addr16
ret
jbe
jge
test
fs
add
xchg
xor
std
fwait
add
inc
jl
in
pop
gs
mov
mov
in
fistpl
jmp
sbb
push
pop
std
cmp
adc
stc
inc
cmp
lea
mov
dec
out
xor
pop
inc
inc
gs
push
leave
cwtl
dec
inc
lret
fidivrl
aad
call
pusha
rol
adc
xor
and
and
scas
call
sbb
dec
enter
pop
cs
test
shlb
add
fistl
jns
pop
dec
push
leave
mov
or
sub
das
and
sub
xchg
xlat
cmpsb
pop
test
aam
int3
in
int
fwait
mov
adc
leave
test
sub
pop
lret
scas
add
in
mov
jmp
lods
stos
jae
sub
imul
cmp
aaa
mov
inc
pop
pop
outsb
mov
inc
or
int3
insl
xchg
fcoml
mov
dec
adc
shll
shrb
dec
push
xchg
and
cmp
jbe
ds
in
mov
movl
js
fdivl
sbbl
jl
jnp
movsb
add
adc
or
loopne
and
push
mov
mov
jp
mov
fnstsw
pop
jp
out
scas
pushl
loop
psubusw
dec
sub
jmp
into
jns
mov
jne
enter
cmp
xlat
mov
lret
xor
cltd
enter
nop
outsb
xchg
int
sbb
test
jmp
test
cld
push
push
mov
jo
popa
cmp
mov
xchg
add
lret
xor
pop
mov
aad
fbld
xor
lahf
and
pop
push
pushf
cmp
out
mov
sub
rolb
xchg
inc
pop
test
clc
push
xchg
inc
and
dec
and
fstpl
mov
cmp
dec
push
test
negl
mov
rcrb
test
mov
sbbb
push
fidivl
adc
pop
nop
enter
xor
int3
test
xor
sbb
popl
pop
xor
mov
and
xchg
push
push
inc
les
xchg
jge
adcb
sbb
dec
je
mov
ljmp
pop
mov
iret
adc
into
and
mull
jnp
pop
sub
inc
stc
xor
push
nop
push
sarb
sar
or
inc
mov
shrb
sub
rorb
sbb
sub
xor
or
xchg
mov
mov
out
insl
push
daa
sbb
out
jp
out
jbe
mov
cmp
ljmp
add
arpl
add
jb
lods
cld
data16
mov
arpl
ret
fldl
mov
imulb
sbb
fdivrs
lds
idivl
pop
fidivs
notl
sbb
nop
xchg
push
dec
mov
push
std
or
cmp
gs
test
push
aam
adc
out
xchg
cmc
dec
dec
push
push
int3
fcomp
sub
pusha
ret
nop
cmp
int3
aaa
int3
xor
outsb
push
mov
subb
jge
pop
jmp
mull
loop
mov
jno
sbb
push
rcl
lcall
add
mov
fsubrl
mov
movsl
jns
lods
pop
xchg
jge
and
xchg
xor
mov
mul
adc
outsb
enter
or
add
insl
lret
sub
imul
cmc
add
and
xchg
sbb
jbe
adc
sub
into
iret
or
popa
adc
divb
in
ja
inc
cmp
rclb
iret
ljmp
movsl
shlb
push
clc
enter
enter
mov
pop
daa
sub
mov
inc
mov
mov
insl
lret
imul
in
call
and
xor
shll
and
out
xor
xor
add
mov
pop
xchg
outsb
lcall
fs
clc
or
scas
inc
xor
outsl
repz
pop
aam
lcall
enter
outsl
xlat
cmpsl
adc
rorl
ljmp
iret
jne
lds
sbb
outsl
test
pushf
dec
pop
cs
psubsw
decl
scas
add
imul
cmp
hlt
and
adc
xor
push
mov
mov
mov
ret
repnz
mov
pop
stos
decb
lcall
mov
dec
mov
inc
sarl
out
fidivrl
or
push
inc
cmpsb
mov
push
lret
rcrl
mov
xor
hlt
pop
mov
in
stos
leave
jo
shlb
mov
add
das
xchg
popa
dec
cwtl
lahf
and
gs
js
lods
mov
mov
test
jl
cmp
fs
enter
insb
fistpl
mov
push
pop
dec
sbb
repz
sub
pop
add
nop
jle
adc
fisttps
lahf
bound
std
inc
push
sub
cld
sub
scas
push
jmp
add
jne
ret
dec
lret
test
fisttpl
test
push
inc
pop
inc
mov
push
mov
adc
cmp
xchg
je
push
mov
rep
sub
scas
jne
cmp
into
lcall
sub
cld
repz
inc
sub
fucomip
sub
cmp
xor
mov
jo
add
call
call
ljmp
mov
fs
cwtl
scas
lods
icebp
sub
mov
inc
lods
cmp
mov
mov
scas
rcll
rcl
push
or
loope
rolb
iret
jo
adc
dec
aas
clc
sbb
and
sub
or
sbb
fsubs
or
dec
lods
pop
and
add
sub
add
rcrl
inc
rclb
inc
jo
pop
hlt
mov
subb
daa
cmp
pop
ret
ljmp
scas
notb
cmp
sub
pop
cmpsl
fbld
fcmovbe
push
sub
or
dec
and
aas
jecxz
mov
xor
inc
in
fdivs
pop
call
xchg
or
test
das
or
test
or
stc
pop
repz
xor
movsl
xor
adc
pop
data16
mov
sbb
jne
or
inc
sub
out
push
fdivrp
in
loope
lock
cld
sarb
and
sbb
cmp
mov
mov
shlb
out
pop
insl
dec
adcb
mov
std
out
add
jp
das
push
dec
dec
cmp
jns
mov
mov
imull
dec
inc
xlat
mov
pushf
std
imul
mov
sub
popf
ss
repnz
adc
sub
in
das
jno
push
in
imul
pop
shlb
cmpsb
dec
mov
mov
lods
jne
mov
loop
sbb
add
cli
lods
add
inc
adc
cmpl
icebp
lock
push
mov
lahf
andb
xor
loope
bound
stos
or
xchg
jle
or
std
rolb
pop
out
dec
push
pop
loope
rcll
aas
inc
sbb
mov
cmpl
lods
mull
fadds
mov
jnp
adc
sti
add
stc
pop
mov
pop
pop
jb
ret
push
loopne
clc
mov
jno
faddl
rcrb
adc
jge
sti
sub
dec
lds
mov
leave
lds
pop
push
push
je
xchg
xor
mov
imul
fistl
shr
inc
sub
jns
pushl
sub
cmp
pop
ljmp
dec
inc
decl
jb
ror
adc
xor
push
mov
sti
xchg
push
mov
rep
mov
cmp
arpl
fcom
adc
repz
and
aam
push
push
sbb
pusha
mov
pop
sub
add
push
addr16
cmc
jp
ret
imul
inc
lahf
mov
fdivl
jge
sbb
adc
icebp
loop
push
enter
dec
ret
cmc
cmp
or
aad
xor
push
bound
addb
pop
mov
or
leave
daa
std
out
fcmovbe
mov
into
mov
cmp
fwait
insb
rcrl
pop
mov
xchg
enter
rolb
xor
cmc
sbb
adc
das
mov
fwait
inc
in
cli
push
pop
stos
jne
xor
mov
mov
mov
mov
mov
lahf
mov
std
insb
cli
push
cmpsb
stos
fisttps
jb
mov
les
imul
jne
xor
xor
ror
sarb
outsb
fnstsw
xchg
xchg
mov
jg
stc
mov
mov
dec
adc
pop
add
add
mov
psubsb
push
cs
lahf
mov
jle
aaa
adc
test
popa
ret
fmull
imul
dec
add
sbb
mov
jo
cli
xor
movsl
sahf
jle
pop
or
jb
pop
in
into
cmp
cmp
fwait
mov
inc
or
jo
orb
fnstcw
inc
shlb
mov
lea
xor
mov
or
stos
and
mov
aam
mulb
xchg
xor
push
jo
cli
xor
test
add
mov
add
inc
jno
sbb
nop
rcl
outsb
dec
stos
loop
imul
or
fstps
sbb
clc
mov
jne
lcall
cmp
aam
das
repz
adc
mulb
adc
xchg
xchg
xchg
imul
repnz
shlb
ret
adc
out
xchg
cmc
pushf
lcall
inc
or
in
fstl
or
pushf
cmp
cmpsl
pusha
pop
lret
mov
jne
out
enter
repz
push
mov
scas
sbbb
popf
pop
xor
test
mov
or
leave
sahf
pop
iret
fcompl
sbbb
insl
pop
mov
pop
push
inc
adcb
mov
es
mov
pop
xor
adc
out
jecxz
mov
or
push
xor
jb
repz
mov
sarb
ret
push
jecxz
imul
psubusw
fsubrp
into
ret
pop
and
add
cmp
jo
or
dec
ret
jle
or
xchg
sub
insb
leave
es
ret
cmc
cmp
cmpsl
sbb
int
cmc
xchg
sbb
mov
push
shl
inc
pop
xchg
mov
std
fstps
popf
ja
xchg
sbb
push
cs
mov
nop
subb
xor
arpl
or
xchg
lods
cmpsb
test
xor
fbstp
and
mov
sahf
test
mov
pop
jno
pushf
dec
adc
adc
ret
pusha
jge
loopne
mov
fs
xchg
aas
push
adc
test
adc
outsb
imul
and
and
fidivrl
sbb
in
push
popf
rcrl
jae
sub
stc
and
jle
lret
stos
rolb
jns
mov
aas
xlat
mov
xor
rolb
add
sahf
fldenv
and
jmp
call
inc
mov
dec
imul
pop
mov
sbb
in
or
call
ret
pop
call
push
sub
rcll
fs
call
scas
and
add
mov
leave
jecxz
xor
xchg
lahf
pop
xlat
in
inc
push
adc
xchg
addr16
sti
test
es
fwait
cmp
into
mov
jae
arpl
cwtl
stc
loop
bound
out
cmpleps
jb
sub
inc
and
loop
inc
cmp
idivb
cltd
outsl
cltd
addr16
ds
bound
xchg
xchg
push
enter
push
idivb
test
inc
and
rorl
mov
and
sub
pop
jb
dec
imul
in
pop
xchg
push
mov
repz
cmpsl
sub
insl
mov
push
adc
daa
pop
pop
mov
mov
mov
mov
insl
pop
mov
adc
mov
mov
and
mov
iret
jne
loopne
push
sub
test
jo
cmpsl
test
adc
leave
test
lahf
and
cld
dec
arpl
xchg
bound
mov
test
inc
cmp
sbb
out
jno
push
cmpsl
mov
mov
ficomps
adc
jg
inc
adc
clc
stos
jmp
jae
rclb
and
mov
xor
or
or
inc
into
xchg
jle
jno
loop
mov
xor
loopne
push
mov
jnp
push
mov
inc
push
decb
sbb
mov
xor
cmpl
mov
dec
push
and
leave
clc
jno
sub
in
stos
popf
xor
outsl
ljmp
pop
shl
lret
fdivrs
sbb
fwait
adc
and
inc
cmp
adc
and
xchg
cmpsl
mov
sub
mov
mov
add
mov
adc
pop
jmp
cwtl
jb
jnp
ss
stos
fs
push
inc
out
cmc
jp
sbb
jmp
lahf
push
push
mov
cmp
xchg
cmpsl
rol
sarl
loope
insb
aam
jmp
sbb
enter
mov
and
scas
into
sti
aad
xchg
push
mov
pop
jns
lods
aaa
int3
cmp
jne
cltd
stc
or
cltd
xor
insb
shll
lea
dec
push
je
xchg
push
lahf
in
out
mov
xchg
cwtl
xchg
fldl
mov
xchg
int3
xlat
jnp
out
movsb
fistpll
xchg
add
pop
gs
sarl
mov
arpl
inc
dec
mov
fdivr
adc
or
movsb
sub
sub
clc
dec
push
cmp
neg
push
je
movsb
sbb
and
subl
sbb
mov
leave
dec
fs
adc
fwait
mov
mov
fstps
mov
sbb
rclb
scas
dec
or
fsub
addr16
ja
mov
sub
pushl
in
sbb
inc
mov
mov
xorb
in
test
rcl
sbb
cwtl
aaa
stos
or
je
or
stos
sbb
cld
int3
pusha
lcall
push
push
jnp
lods
sub
call
sbb
jns
sbb
pop
psrad
ds
jns
xor
icebp
sbb
fcmovne
out
inc
stos
fnstsw
cmp
sbb
mov
ficoms
enter
stos
mov
or
mov
add
pushf
sub
pop
loop
jne
jo
das
jnp
bswap
test
cmp
push
fnstcw
dec
or
adc
addr16
xor
adc
mov
and
mov
iret
imul
adc
jl
push
inc
cltd
jo
or
jmp
mov
pop
push
stc
stc
gs
arpl
sub
mov
pushf
jnp
adc
cltd
ss
xchg
imul
xchg
js
push
lds
out
cwtl
and
stos
cwtl
lret
cmp
jge
fwait
push
lret
enter
adc
adc
lds
add
imul
dec
mov
or
sbb
push
and
dec
iret
pop
jg
mov
jb
sbb
leave
jle
cmp
dec
pop
jno,pn
push
cmpb
pusha
xchg
pusha
lds
dec
jle
xchg
dec
mov
cmove
adcb
loopne
add
sub
test
mov
aas
ja
dec
mov
mov
pop
lea
xchg
xor
add
fwait
imul
lock
into
push
enter
jne
push
movl
lods
imul
ror
push
insb
pushf
inc
xchg
pop
dec
loop
aad
fistl
int
jo
push
jnp
push
fcmovu
stos
pop
sbb
ret
lock
lea
call
stos
loopne
adc
cmpsb
sahf
pop
outsl
mov
add
int
outsl
int3
pop
insl
sub
int
insl
int3
mov
lods
fdivrs
loope
movb
sbb
mov
jo
dec
in
adc
dec
jg
outsl
pop
push
dec
addl
push
xor
push
xchg
dec
xchg
jge
mov
aaa
jo
or
or
dec
imul
stos
jle
add
rcll
mov
mov
lret
adc
mov
add
mov
pop
pop
bound
add
jbe
sub
mov
fiadds
jnp
rorb
inc
lahf
fbld
shlb
fisttpll
mull
stos
xchg
movsb
xchg
pop
xchg
call
mov
push
push
mov
fimull
lods
je
mov
outsl
dec
push
mov
push
inc
lods
or
shlb
std
dec
ret
mov
repnz
fisubs
bound
or
push
out
xchg
push
lahf
call
xchg
push
stc
mov
ja
out
mov
jb
idivb
insl
dec
sbb
andl
dec
xchg
push
add
mov
gs
sbb
xchg
pop
push
sbb
push
addb
cmp
adc
andb
ror
leave
iret
adc
pop
xor
ret
pushf
outsl
push
out
push
out
cmpsb
jo
pop
shlb
addr16
jnp
cmp
pop
enter
xorl
mov
jnp
push
in
lods
lods
adc
ret
loop
ret
cli
jg
xor
pop
push
insl
mov
mov
repnz
std
es
dec
jge
adc
xor
jl
push
push
scas
jo
inc
loop
mov
movsl
in
push
xlat
mov
inc
cmp
xchg
ret
push
cmpsb
test
pop
pop
js
mov
pop
pop
fisubrs
inc
cs
adc
lds
sbb
pop
mov
add
arpl
or
fs
or
adc
lcall
imulb
pop
mov
cld
shr
fldt
in
cli
cmp
mov
dec
push
es
cmp
pop
popf
sub
and
xchg
jns
inc
xchg
xor
adc
jne
flds
xchg
pop
jno
sub
pop
pusha
loop
jnp
xchg
ret
mov
sub
jae
push
decb
xchg
ss
cmp
mov
lahf
outsl
push
ds
frstor
out
or
inc
cmp
mov
dec
dec
mov
shl
push
lea
jnp
ret
filds
push
aam
cli
arpl
mov
pop
xlat
mov
xor
bound
insl
inc
mov
test
int
sbb
xor
rclb
pusha
add
test
mov
in
pop
mov
and
fbld
stc
ficomps
in
and
je
adc
inc
cltd
test
push
mov
add
ds
push
add
jg
cmp
repnz
cmp
loopne
add
jmp
enter
sub
push
je
jg
mov
mov
hlt
mov
pop
cmc
xchg
inc
jb
and
add
and
call
ss
or
scas
gs
mov
enter
xlat
popf
gs
push
dec
add
ja
lods
inc
out
jo
shl
mov
and
mov
lods
mov
int3
cli
outsb
into
or
and
xchg
push
fs
lret
rolb
mov
add
mov
jne
mov
push
out
movsb
pop
in
pop
movsl
iret
fdivr
xor
lret
and
stos
mov
and
jno
jo
pop
mov
cmp
inc
mov
xchg
mov
pop
add
rep
movsl
popa
dec
push
xor
mov
xor
loope
mov
pop
dec
in
inc
mov
dec
mov
lods
mov
nop
fdivrl
pop
or
imul
pop
loop
xor
cmc
push
lock
outsb
fcoml
and
add
adc
popf
mov
push
out
push
mov
in
call
loop
push
dec
lods
das
mov
mov
ljmp
pop
outsl
fdivl
int
inc
fadds
cwtl
popf
mov
cmp
sub
dec
jg
outsl
negl
sub
and
sahf
pop
add
xor
mov
addr16
loopne
adc
fwait
es
and
pop
push
dec
adc
jle
jae
or
xchg
xchg
sahf
push
js
adc
repz
mov
cwtl
pop
and
mov
push
add
xor
xlat
pop
mov
test
icebp
xor
mov
adc
loope
scas
stc
adc
mov
and
jge
gs
popa
adc
ja
pop
bound
andb
fisttps
push
cwtl
mov
out
int
dec
mov
xchg
jmp
mov
imul
sub
aad
adc
cmp
push
mov
das
clc
jmp
sub
mov
movsl
cld
xor
lock
shrl
mov
or
in
jl
cmc
mov
in
xchg
mov
mov
xor
mov
lahf
xchg
and
incl
mulb
cmp
dec
adc
sbb
mov
pop
cmp
in
adc
rcr
dec
jne
gs
mov
jg
stos
lahf
cwtl
xor
or
pop
int3
lods
xor
test
mov
xchg
mov
push
daa
mov
mov
sbb
imul
sahf
dec
cwtl
rcrb
cmc
leave
aad
push
cmp
in
mov
scas
lahf
js
jle
movsl
jae
xchg
mov
mov
iret
fnstenv
imulb
jge
mov
out
sbb
addr16
mov
jl
pusha
inc
daa
mov
adc
sbb
sti
enter
lods
orb
pop
stc
scas
dec
xchg
inc
dec
xor
mov
pop
cmp
inc
in
test
shrb
cs
scas
or
jmp
jge
jns
jle
dec
movsb
pusha
dec
jno
push
xlat
hlt
cli
dec
jmp
cmp
inc
dec
adc
dec
outsl
pop
and
xchg
nop
test
and
lcall
xchg
cmp
push
int
wbinvd
das
pushf
rolb
jno
xorl
icebp
outsl
xchg
mov
push
jae
flds
test
xchg
pusha
lcall
cmp
mov
aad
mov
push
test
pop
and
pop
xchg
jb
test
test
addr16
inc
sub
loop
or
subb
insb
xchg
lods
int3
xor
fidivrs
sbb
xor
xor
jb
or
rol
imul
add
xchg
and
fiaddl
test
mov
bswap
aaa
cmp
aad
adc
dec
shrb
orb
scas
ret
aad
in
imul
stos
push
gs
lcall
mov
sbb
mov
repz
out
pop
cwtl
aaa
xchg
mov
jne
sti
mov
ja
pushf
ss
mov
adc
sub
ret
ffreep
xchg
test
or
xchg
loopne
popa
jb
xlat
xor
inc
ficompl
pinsrw
jp
and
cmp
test
sbb
repz
rcrb
addr16
and
fisubs
test
mov
mov
adc
xchg
mov
setne
cs
push
not
shll
outsl
xor
xchg
pop
inc
mov
cmpsb
jmp
inc
jmp
sbb
jmp
sahf
sbb
or
fcompl
pushf
sub
mov
xchg
push
loop
cmpsb
push
cli
subb
xor
mov
mov
in
cmpsb
leave
addl
push
test
adc
mov
stos
sbb
xchg
xor
sarb
loop
add
jge
xchg
jns
fdivrp
mov
xor
mov
mov
mov
xchg
aaa
pop
das
int3
lods
xor
jecxz
mov
aam
mov
adc
pop
add
pop
faddl
cltd
outsb
movsl
lea
es
jne
rcrb
pop
pushf
jbe
push
out
addb
test
out
sbb
mov
or
pop
cmp
push
cmp
das
cmc
pop
mov
sub
out
aam
pop
pop
jo
subb
lods
xchg
sahf
push
xchg
in
incl
jl
adc
shll
sub
cmovle
sub
or
cli
ffree
cld
ss
mov
lods
mov
rol
jno
mov
adc
inc
push
fnsave
xchg
filds
sub
rcll
jns
cmp
xchg
xchg
outsl
lret
stos
xchg
fiadds
fcoms
sbb
push
popf
scas
mov
cmp
cmp
imul
sti
cmp
jne
mov
popa
push
in
movsl
pop
outsl
pop
jmp
mov
xchg
and
insl
pop
aaa
sbb
cmc
pushf
push
ljmp
sarl
push
push
xor
test
cld
mov
mov
test
mov
lahf
mov
outsl
std
sti
inc
dec
push
adc
and
xchg
mov
cmp
in
mov
mov
cmc
rorb
mov
arpl
testl
test
mov
js
xorb
fstps
ja
lahf
fs
ret
dec
mov
jl
loopne
push
outsb
push
xlat
loopne
lea
inc
or
cmp
movsb
mov
jo
inc
pop
in
rcll
cltd
jns
push
fs
mov
repz
mov
lret
clc
push
or
flds
gs
es
aad
nop
les
inc
bound
mov
dec
sub
pop
fwait
test
xor
adc
rcrl
mov
xlat
dec
shrb
bound
jbe
xchg
lea
iret
xchg
pop
stos
mov
sub
int
push
insb
pop
jle
mov
test
xor
mov
js
push
cmpsb
test
stos
jg
adc
out
popa
repnz
rcrl
xor
scas
lock
outsl
and
mov
pop
pop
mov
mov
dec
sti
jns
clc
cmp
sub
fnstsw
mov
pop
aam
vmwrite
lret
sbb
mov
pop
js
push
xor
jb
loop
xor
sbb
scas
pushf
xchg
mov
ret
pop
pop
int3
sub
and
int
xchg
andl
addr16
dec
pand
in
fcomps
stos
mov
xchg
in
xchg
xor
out
insb
in
sahf
test
lret
int3
push
ret
aaa
popa
and
and
scas
bound
push
call
stos
aam
popf
pop
sub
adc
rolb
test
jle
add
lret
and
es
push
imul
inc
or
test
clc
jae
jg
jo
sbb
sbb
sbb
jns
mov
mov
and
fsubrl
jmp
insb
and
into
xor
sbb
adc
mov
rol
inc
sub
xor
push
pop
jle
rcl
add
and
stc
ljmp
sub
dec
and
popa
pusha
ss
mov
pop
dec
es
pop
adc
pop
lcall
push
mov
aam
ss
leave
dec
shrl
push
ds
sbb
fs
pop
adc
mov
inc
shrb
xor
sahf
repnz
iret
into
shlb
mov
dec
mov
test
xchg
push
int3
cmp
mov
int3
clc
imul
or
leave
adc
data16
mov
scas
adc
push
mov
repnz
push
jl
xchg
push
sti
aam
adc
in
sbb
inc
stc
and
arpl
fstpt
insl
or
sbb
repz
fcmove
fcmovne
fistpl
hlt
aad
scas
jb
pop
jae
adc
jp
loopne
pop
sbb
call
xchg
sbb
cmpsl
stos
or
lahf
out
sub
adc
stos
dec
imul
xor
imul
jbe
movsb
xor
ja
repnz
insb
sahf
mov
dec
lds
mov
inc
sub
pop
ja
xor
loop
mov
mov
cwtl
gs
mov
xor
cmpb
xor
inc
mov
mov
adc
pop
cs
adc
mov
mov
lea
dec
dec
icebp
and
xor
jmp
jl
mov
hlt
jae
push
sbb
cmc
jp
lcall
or
std
pop
and
pop
test
rcrb
loopne
lcall
aas
nop
icebp
push
gs
ret
pop
jmp
faddl
pop
xchg
xlat
fistps
insb
sub
cmp
push
addl
cld
mov
push
adc
inc
xchg
push
movsl
push
xchg
sub
in
xchg
inc
xor
neg
das
pop
push
out
dec
sub
jge
repnz
and
ds
xchg
mov
stos
daa
outsb
jae
cmp
fcompl
into
pop
fisubrl
cmp
int3
jne
popf
push
pop
jae
lods
gs
or
mov
jp
add
dec
fimull
out
mov
lods
sar
pop
fdiv
xor
cwtl
add
shrl
pusha
ret
pop
jecxz
pop
dec
nop
mov
sub
push
shrl
scas
imul
icebp
mov
push
mov
jo
dec
insb
sub
in
adc
push
xor
sarl
jl
xchg
add
dec
xor
add
pusha
pop
dec
cmp
pop
imul
out
sub
in
es
xchg
aam
in
pop
jno
pop
mov
pusha
sub
imul
sub
arpl
sahf
sbb
mov
sbb
popa
inc
jno
push
or
test
inc
lret
mov
out
pop
mov
push
push
cmp
or
call
subb
js
aam
mov
sbb
dec
adc
and
xchg
stc
xor
add
mov
cmp
pop
aas
mov
cltd
cpuid
add
aam
ja
xchg
addb
mov
sbb
subb
push
lods
cmp
in
push
jmp
xchg
sub
adc
mov
je
and
sbb
push
dec
adc
sub
int
daa
loop
test
mov
xor
popl
push
adc
lock
cmp
cli
std
out
mov
fstpl
sbb
dec
es
aas
cwtl
imul
xchg
push
jle
push
testb
cli
push
xorl
stc
mov
lock
rcll
ss
fwait
cmp
mov
mov
pop
push
out
lea
pop
add
sbb
adc
fsubrl
cmp
inc
inc
mov
jns
stos
push
jb
shrb
jp
push
or
ret
dec
out
jl
pop
ret
aad
dec
dec
int
inc
mov
inc
mov
sub
mov
icebp
loopne
jb
cld
jb
ja
push
jmp
xchg
mov
cmp
fsubp
outsl
mov
add
and
mov
fs
push
inc
xchg
out
pop
xor
insl
adc
adc
in
sub
xchg
push
jnp
pop
push
test
pushl
das
or
mov
fcmove
fildll
out
fldenv
push
out
in
inc
xor
sub
add
stc
jg
dec
ret
into
jne
or
add
call
int3
xchg
inc
mov
push
push
and
daa
call
pop
push
mov
dec
adc
mov
cltd
pop
dec
mov
push
sbb
or
test
jmp
roll
xchg
jl
dec
adc
popa
loop
mov
xchg
and
rorl
test
sub
movsl
out
and
push
ds
loope
test
mov
cmp
and
or
push
adc
test
out
add
lods
xchg
cld
fsub
je
lahf
inc
mov
ret
mov
ret
push
push
hlt
aas
cmpsb
pusha
sub
fwait
data16
cld
popl
and
push
clc
mov
repnz
test
add
cli
aad
sub
fwait
sub
pop
iret
scas
and
xor
mov
cmpsl
cs
jg
lcall
ja
cmp
addl
mov
lret
inc
ds
adc
das
mov
xchg
sbb
aaa
push
inc
jp
fsubs
xor
jbe
xchg
mov
add
sbb
arpl
push
mov
mov
mov
xchg
in
pusha
out
adc
xor
mov
gs
add
daa
cmp
pop
dec
hlt
out
mov
hlt
adc
mov
inc
cmp
outsl
pop
pop
mov
arpl
enter
cli
out
int3
push
mov
sub
sub
push
cltd
add
jae
cs
fst
jge
or
mov
push
mov
jnp
cmp
pushl
leave
shll
and
lods
mov
pop
jo
mov
call
rcll
stos
add
test
jmp
mov
dec
test
iret
and
jmp
sub
jbe
hlt
sbb
mov
shll
aam
subb
dec
xchg
rolb
xor
mov
lahf
les
sbb
loop
insl
push
pop
or
or
arpl
test
orb
daa
data16
dec
mov
prefetch
aam
sahf
clc
and
fdivrs
jnp
mov
sub
mov
push
mov
pop
mov
testb
jno
xor
in
jmp
xchg
mov
stc
dec
jno
xchg
and
add
ds
fcomip
dec
shll
imul
mov
fucomi
jo
dec
cmp
lahf
repnz
cmpsl
push
jo
sub
or
loopne
pop
cmp
cmp
xor
cmp
sbb
xor
test
xor
sti
cmp
mov
push
pop
xor
out
ret
sbb
inc
mov
rcll
add
and
lea
mov
das
adc
lret
loopne
icebp
cmc
pop
xlat
pop
adc
scas
clc
mov
nop
out
lds
dec
scas
sbb
out
mov
jno
fcom
loope
pushl
xor
out
test
fiadds
and
xor
add
aaa
divb
push
jnp
int3
and
adc
les
stc
fnstenv
and
enter
cmp
dec
sbb
push
or
imul
dec
flds
sub
mov
xchg
mov
pop
jo
movsb
jno
out
or
cltd
rcr
pop
mov
jl
add
sbb
ja
mov
mov
mov
outsb
fdiv
mov
sti
mov
push
mov
movsl
mov
das
pop
xchg
or
mov
loop
push
push
int3
jp
mov
mov
and
xor
ljmp
movsl
xor
pop
iret
push
cmpsl
fidivs
push
inc
insb
mov
pop
shlb
jle
adc
fadds
jnp
adc
cltd
lea
imulb
test
push
scas
scas
and
cmc
sarb
cmp
push
push
lock
sbb
outsl
sbb
or
sahf
mov
sub
jmp
notb
mov
movsl
lea
sbb
test
pop
mov
cmp
adc
es
or
mov
cmp
imul
aas
push
push
add
push
cmp
xor
fsubs
push
jmp
jns
dec
clc
jge
dec
push
nop
add
pop
jg
in
rol
xchg
loopne
in
cmp
das
subb
xchg
mov
mov
jo
mov
adc
pop
lods
in
mov
test
ss
je
sub
xor
dec
add
lret
adc
mov
push
mov
xor
add
test
out
pusha
or
dec
in
pop
lahf
dec
movsl
jge
fiaddl
push
dec
pusha
xchg
sarb
lahf
push
sub
xchg
mov
cmp
popa
mov
arpl
imul
or
sub
inc
inc
and
and
sbb
fstl
mov
sub
subl
popa
adc
aad
push
xor
aaa
lret
and
push
jg
imul
xor
test
fbld
sbbb
sub
mov
and
xchg
jne
add
inc
xchg
jnp
and
cmpsl
test
ret
mov
jmp
mov
ja
push
stc
nop
sbb
mov
lock
mov
mov
mov
dec
jo
les
mov
call
out
mov
or
shlb
ficompl
gs
push
push
adc
and
mov
je
xor
mov
dec
jecxz
sub
push
or
jmp
pop
xchg
sub
int
mov
mov
mov
sbb
repnz
mov
aad
arpl
adc
shlb
mov
dec
lods
sub
fmul
je
arpl
mov
mov
ret
cmp
xor
je
mov
jecxz
ja
out
xor
xor
movsl
sub
cmp
stos
aam
js
and
mov
enter
mov
out
arpl
sub
xor
mov
int
mov
popa
push
shlb
arpl
dec
fs
call
jno
xor
cmpsl
mov
mov
in
stos
cmc
inc
cmp
or
fdivl
jno
testb
cmp
pop
sub
fwait
mov
mov
dec
cmp
pop
ret
mov
hlt
xchg
jne
in
sti
repz
cmp
negl
scas
push
push
das
daa
cwtl
push
jg
jae
xchg
and
and
push
scas
subl
cmp
adc
hlt
jo
nop
loope
in
repnz
test
jecxz
insb
mov
lds
les
notb
cli
mov
pop
mov
or
pop
loopne
sarb
ficompl
xchg
dec
data16
inc
and
sti
aas
jns
dec
ss
aas
dec
adcl
iret
or
mov
jp
leave
dec
sub
insl
leave
dec
and
loopne
pop
jo
inc
gs
aam
mov
dec
test
or
jge
mov
push
loopne
mov
pop
or
cltd
dec
adc
pop
mov
popa
lods
pop
and
out
sti
jecxz
push
in
cld
gs
mov
in
xlat
cmp
jl
pushf
and
cmp
lods
adc
insl
in
jl
xchg
xor
das
fbld
bound
rclb
lret
cmpsb
or
push
inc
push
aaa
sti
mov
sbb
xchg
cmp
call
cmp
clc
or
cmpsb
fldt
push
fisttps
xor
sub
inc
fldcw
add
clc
jg
push
inc
mov
getsec
adc
daa
daa
mov
or
jo
daa
dec
fldcw
jmp
arpl
cld
xchg
cli
std
shl
jne
fwait
push
add
jle
pop
cs
popa
and
sbb
inc
adc
lods
inc
ss
cwtl
mov
fidivrs
popf
push
jge
into
cwtl
mov
dec
mov
pop
or
pop
dec
insl
cmp
mov
negb
sbbl
lods
stos
push
pop
scas
pop
outsl
test
lahf
out
adc
js
cmp
add
aam
mov
cmpsl
jns
cld
out
scas
ja
pop
xor
hlt
push
ss
jnp
in
sbb
popa
xchg
add
ficoms
fsubl
jnp
daa
aas
pop
les
mov
add
icebp
sbb
cmpsb
cmpsb
movsb
int3
adcb
push
mov
lcall
loope
add
xchg
cmovo
adc
movsl
xchg
mov
insl
mov
ja
xchg
bound
add
cli
repnz
sbb
daa
mov
outsl
jae
dec
into
outsb
mov
push
rcr
pushf
inc
movsb
mov
mov
and
adc
pushf
cld
loopne
mov
xor
popf
ret
outsb
fwait
push
ss
sahf
dec
adc
xor
push
mov
test
or
push
sbb
and
add
xchg
and
daa
and
sbb
outsb
xor
push
mov
adc
roll
iret
std
fs
and
push
mov
sti
jns,pn
sub
mov
push
scas
jle
nop
popf
mov
mov
jge
repnz
scas
insl
or
sbb
aad
lds
xor
pop
in
test
sub
jbe
fstps
mov
jns
outsl
push
mov
sbb
arpl
fstl
clc
or
adc
ja
into
aad
adc
lcall
sbb
add
repz
xor
mov
xor
jns
stos
inc
mov
pushf
sub
jecxz
push
sub
lcall
dec
sarb
sbb
fdiv
mov
mov
pop
adc
int
sub
mov
inc
or
pusha
mov
xor
lods
sbb
xchg
popa
xchg
insb
xor
outsl
inc
jl
es
fistpl
cmpsb
sub
mov
inc
adc
fcomi
in
jb
bound
add
pop
add
stos
sub
test
xchg
cmpl
xor
push
out
lret
add
push
fisttps
and
into
imulb
mov
lret
jno
scas
jg
adc
jns
aad
dec
push
cld
push
ficompl
nop
lds
int3
orb
daa
dec
sub
pop
test
and
cmp
inc
sub
push
outsb
aad
iret
push
shlb
testb
mov
jns
jmp
out
or
sarb
cli
add
imul
mov
ds
in
adc
sub
xchg
pop
loop
in
xchg
push
xor
mov
shll
pop
cmp
mov
push
sub
pop
cmp
mov
iret
sub
int3
dec
mov
xchg
pop
imul
cmp
cs
jle
xor
sub
andl
loopne
gs
in
push
imul
daa
and
push
jno
cld
pop
std
bound
bound
shl
shll
bound
lret
in
inc
icebp
rcl
adc
movsb
pusha
add
or
push
pop
cli
ljmp
loope
sbb
add
mov
ret
ljmp
insl
outsl
mov
insb
xchg
mov
js
or
addl
push
cmpsb
mov
xor
push
jnp
and
sbb
cmp
ja
dec
xor
orb
mov
xchg
jb
vrcpps
stos
cmp
push
xor
jg
pop
rclb
lock
push
fs
push
sub
sti
xchg
fstpl
push
pop
jo
out
add
leave
fdivr
sub
scas
jp
out
imul
jo
movaps
mov
ficompl
push
push
sub
mov
jae
cmp
mov
xor
sub
xchg
mov
idivb
pop
or
gs
cmp
jns
test
xchg
push
xor
pushf
fwait
sbb
std
call
movsl
stc
pop
lock
jno
fsts
aaa
insb
add
add
pop
addr16
gs
add
xlat
test
fildl
mov
push
cmpb
sbb
ja
lahf
xor
cwtl
xchg
and
mov
imul
popa
scas
pop
lahf
xor
mov
das
sub
jae
jl
xlat
xchg
sub
js
mov
pop
push
sahf
pop
stc
push
out
divl
movsb
push
inc
ret
push
ds
add
adc
or
xchg
sti
jp
js
xchg
mov
adc
pop
inc
cli
roll
inc
cmp
push
scas
insl
dec
jmp
cmp
xchg
push
fcom
cmp
jp
sbb
in
xor
aas
pop
popf
push
dec
xor
hlt
out
ds
fdiv
in
int3
out
addr16
loopne
cwtl
jl
inc
ss
out
data16
clc
cwtl
stos
iret
sarb
sbb
mov
and
dec
xchg
dec
cmp
aas
inc
rorl
hlt
sbb
mov
push
sub
std
mov
in
jns
sub
daa
dec
popf
mov
mov
ficoml
mov
cwtl
imul
popa
mov
pushf
cmp
pop
sub
rcrb
push
movsl
or
stos
lock
or
cmp
fwait
sbb
mov
imul
lret
das
out
push
xor
clc
sarl
arpl
fldcw
xchg
mov
jle
sbbb
sub
pop
fistpll
loop
inc
push
pusha
je
fsubr
mov
mov
xchg
ljmp
xchg
iret
sbb
and
sub
push
mov
sbbl
test
adc
push
mov
mov
sub
push
add
ffree
mov
enter
add
xor
sub
mov
jg
ljmp
jl
sbb
xor
mov
lret
cli
sbbb
nop
imul
stc
mov
jo
or
adc
orl
in
xchg
adc
mov
push
fs
aad
xchg
dec
xchg
push
inc
sbb
sub
inc
out
in
and
push
mov
inc
and
sub
push
inc
push
inc
cmp
jns
pop
mov
mov
cmp
add
mov
mov
clc
outsb
scas
push
sbb
fcom
dec
push
adc
mov
xchg
xchg
adc
rorb
cltd
sub
pop
jb
pop
xor
xor
sub
and
fs
mov
sbb
adc
ret
add
lret
mov
push
cmp
cmp
jp
in
in
int3
jg
rorl
adc
cmpsl
jbe
mov
pusha
mov
adc
in
push
aas
mov
xchg
insl
into
into
lret
fsubs
pop
imul
cmp
stos
xor
mov
imul
cmp
xor
imul
inc
and
movsb
jo
cmpl
add
xchg
iret
cltd
lahf
iret
lahf
mov
out
push
sub
jae
test
loop
adc
popa
mov
xor
outsl
sub
decl
stos
pop
xchg
mov
jns
dec
push
push
lea
adc
loop
pop
cmp
xchg
jecxz
sub
or
mov
pop
rcrb
mov
jmp
dec
or
outsb
leave
inc
xchg
push
cs
jb
and
movsl
dec
cmp
mulps
push
fisttps
xchg
mov
jecxz
loop
sub
out
icebp
push
dec
push
pop
shl
insl
sub
mov
xchg
fnstcw
insl
js
mov
sub
popf
xchg
scas
insb
rcrb
add
push
cwtl
mov
mov
sbb
roll
imul
inc
das
or
hlt
push
stc
jnp
inc
pop
mov
fwait
loope
lret
or
sbb
js
cmp
add
fstpt
bound
xchg
mov
mov
or
xor
sbb
pop
icebp
out
mov
add
mov
ja
out
mov
arpl
movsb
popf
jae
movswl
sbb
xor
cld
mov
dec
outsb
or
pop
adc
dec
mov
repnz
mov
imul
adc
sbb
outsb
cmpsl
mov
adc
push
lock
mov
jb
mov
arpl
int3
inc
sti
mov
aad
rorb
pusha
or
fildl
dec
jbe
xchg
inc
pop
dec
test
adc
imul
inc
mov
sub
mov
or
push
jns
gs
cli
fildl
xor
add
jb
fsubr
loope
dec
pop
cmpsl
add
nop
shrl
fwait
rorb
leave
lods
add
xor
fsubs
call
loopne
dec
cmp
jbe
int
movsl
les
xchg
mov
in
inc
lock
cltd
mov
das
repz
dec
xchg
or
fstpl
push
test
bound
sub
pushf
add
dec
movsl
cwtl
xchg
cmp
mov
mov
jno
xchg
test
inc
push
arpl
pop
mov
cmpb
push
xchg
jbe
xor
out
dec
sarb
rol
pop
das
dec
adc
mov
push
inc
adc
xchg
fimull
push
lods
lea
scas
cs
or
mov
and
movsb
in
lea
leave
cld
scas
ret
outsl
push
mov
mov
jbe
pop
jb
add
inc
aam
aad
loopne
or
cmp
push
fwait
push
sbb
cmp
addr16
repnz
mov
cs
xor
icebp
push
cmp
ds
out
es
inc
push
push
adc
adc
stc
or
int3
fildl
cltd
mov
nop
dec
out
gs
outsl
or
cli
daa
lcall
stc
add
or
testl
stos
push
pop
insl
stos
pop
dec
cld
fcoml
sub
sbb
imul
lods
dec
cld
nop
outsb
push
push
cli
push
or
mov
and
test
mov
mov
dec
xchg
or
pop
mov
lock
and
push
daa
xor
repnz
lcall
test
and
mov
sbb
xlat
das
insl
or
ja
adc
mov
out
xchg
push
imul
iret
jns
mov
and
cmp
jo
cmpsl
aaa
xchg
cpuid
sbb
sub
hlt
adc
popl
and
inc
xchg
jae
inc
jmp
stos
cmp
movsl
sbb
lea
inc
xchg
push
lahf
sbb
jg
cmp
add
int
aaa
xlat
nop
pop
divl
jecxz
xchg
push
or
pop
movsb
mov
mov
xor
jae
xor
and
xchg
push
test
dec
in
dec
mov
rorb
jnp
bound
test
and
movsl
and
repz
sub
mov
sbb
jle
dec
mov
nop
sbb
imul
ret
xchg
mov
rorb
jle
mov
ja
pop
mov
xchg
mov
pop
lahf
lret
lret
push
lods
pop
sbb
xchg
sub
cmp
addr16
in
and
push
mov
add
mov
mov
arpl
cwtl
in
jp
push
mov
sbb
sbb
cmp
xbegin
xor
adc
or
inc
sti
and
push
out
xchg
imul
xchg
ret
js
stos
pop
addr16
and
imul
cmpsb
nop
push
push
adc
add
clc
sbb
movsl
mov
jmp
mov
jno
dec
sub
sub
and
gs
popf
mov
dec
inc
test
sub
ds
mov
cwtl
cwtl
lahf
movsb
mov
in
sbb
clc
je
jecxz
int3
bswap
outsl
jb
mov
aaa
sti
out
jns
sub
out
push
adc
jmp
jno
fidivrs
arpl
scas
or
neg
pusha
mov
push
iret
popa
push
mov
jnp
pop
out
mov
xchg
dec
push
and
add
xor
mov
dec
or
mov
pop
std
push
fidivl
ss
and
mov
add
jge
push
xchg
int
mov
push
jge
aad
pop
stos
add
xor
andb
xor
mov
ds
imul
fwait
adc
fmuls
loopne
out
xor
imulb
ds
add
cmp
add
push
mov
jb
push
movsb
xor
push
or
inc
sti
adc
push
and
push
fwait
subl
mov
push
adcl
pop
sar
sub
repnz
add
push
fwait
rol
pop
lds
xchg
hlt
mov
divl
ljmp
notb
sub
lret
les
mov
outsl
sbb
js
std
insl
mov
mov
or
mov
fistps
pop
jb
fs
push
movsb
sbb
xor
cmp
jae
cmp
pop
push
repnz
mov
test
les
testl
pop
imul
push
xchg
jecxz
loopne
xor
shr
xchg
sbb
ficoms
jnp
dec
fisubl
jo
mov
lock
in
aas
xchg
or
jg
mov
test
mov
aaa
out
xor
xchg
sar
bswap
out
inc
incl
aad
pop
mov
jecxz
jecxz
sub
lret
out
and
and
xchg
sub
cs
dec
jmp
add
dec
push
mov
xchg
ja
dec
popa
adc
and
sbb
clc
jl
pop
imul
sub
cltd
arpl
repz
cli
xchg
cs
sbbl
and
mov
sbb
push
inc
and
dec
jp
mov
push
xor
addr16
xchg
daa
lods
mov
add
cmp
xlat
int3
add
fbld
push
repz
push
mov
jbe
dec
mov
rclb
sub
clc
int
cmc
pop
cmpsb
ja
dec
mov
xchg
inc
dec
call
mov
cmp
pop
push
push
pop
leave
dec
testb
sbb
xchg
testb
or
push
mov
adc
aad
or
movsb
dec
rcr
out
sub
adc
repnz
xchg
inc
xor
add
cmp
sbb
out
les
ja
cltd
mov
pop
jbe
ficoms
bound
mov
out
sub
jmp
aam
and
std
in
mov
cmp
loopne
mov
shll
popa
scas
add
and
cmp
stos
xchg
add
bound
stos
pop
mov
or
xlat
shl
mov
test
addr16
sub
add
lock
sbb
and
clc
cld
adcl
add
xor
inc
xor
rclb
popa
jb
inc
xor
shl
scas
inc
sbb
mov
mov
xchg
push
outsb
jbe
popa
mov
stc
mov
out
inc
cld
call
add
mov
or
jecxz
ret
es
cli
dec
inc
push
push
popaw
je
jo
inc
add
mov
add
call
push
mov
rolb
addl
mov
bndldx
sbb
pop
fists
push
pusha
insl
sahf
iret
add
xchg
jno
clc
iret
xor
inc
mov
test
call
popa
jmp
pop
sub
jb
add
xchg
inc
arpl
std
adc
shl
mov
movsl
out
mov
xor
jbe
cld
ljmp
pop
mov
xor
nop
cmpl
and
xchg
jbe
ret
insb
sbb
aaa
mov
dec
sbb
sbb
test
push
repnz
iret
mov
inc
fnop
and
icebp
xlat
mov
mov
or
dec
mov
inc
adc
jmp
cmp
cmp
or
xchg
sbb
jb
fldcw
sbb
xlat
les
mov
stos
mov
stos
and
mov
imulb
arpl
call
jle
cli
dec
sub
cmp
mov
ret
fstl
orb
xor
pop
inc
jae
jmp
pusha
sbb
push
cli
scas
inc
add
push
cmpsl
enter
bound
lock
pop
adc
out
lahf
pop
scas
inc
xchg
clc
or
xor
sbb
lea
scas
adc
leave
mov
xchg
mov
mov
movsb
push
ds
sub
and
mov
and
imul
or
bound
ljmp
jmp
jns
and
in
sahf
movsb
jl
sub
loopne
gs
push
push
shll
jnp
ja
xchg
repnz
cmp
pop
lods
add
mov
hlt
adc
mov
sqrtps
dec
mov
subb
stos
pop
mov
lods
push
push
mov
adc
jo
add
jecxz
cmp
into
outsb
ljmp
sbb
add
lods
call
clc
out
jb
fs
lahf
inc
nopl
cwtl
je
jg
out
rorl
xchg
sub
jg
adc
test
inc
gs
sub
repnz
cmp
scas
jecxz
dec
add
push
bound
scas
in
xchg
mov
push
dec
jno
inc
rolb
rcr
icebp
add
dec
mov
pop
sub
hlt
stos
pop
xor
mov
mov
hlt
bnd
pop
adc
mov
cli
popf
enter
pop
inc
mov
jecxz
in
int
inc
out
lods
lret
xchg
fdivs
pop
dec
xor
fwait
xchg
add
test
xor
mov
mov
int3
mov
and
ja
inc
ss
lahf
loope
xchg
jle
mov
iret
sub
inc
daa
push
add
dec
lahf
sbb
shrb
sub
pop
test
mov
daa
mov
out
add
sti
or
and
sahf
push
cmpsb
cmp
aad
xor
ffree
dec
js
jno
mov
icebp
mov
in
ljmp
aas
mov
fnstsw
sub
adc
sti
sbb
out
mov
pop
mov
xchg
xchg
scas
adc
cmp
stc
push
lahf
inc
popf
lock
insb
mov
dec
sbb
cmp
das
xor
inc
cld
mov
xlat
call
adc
cld
ret
daa
sti
aaa
std
xor
imul
sbb
js
or
imul
sbb
or
in
pushf
or
dec
aam
outsl
pop
test
xchg
sbb
sbb
mov
aas
mov
cwtl
sub
scas
bound
sub
dec
mov
or
xchg
out
sbb
cli
das
inc
dec
int
sbb
push
xlat
or
lods
lods
push
aam
imul
or
inc
in
das
push
and
mov
cltd
xchg
dec
sub
mov
sbb
pop
daa
add
xchg
lods
sahf
and
sbb
enter
fmull
sbb
jo
fists
in
cmp
bound
loop
inc
pusha
sahf
mov
xor
das
shrl
mov
xor
in
mov
pop
mov
mov
imulb
or
nop
adc
in
push
sbb
cmp
loope
mov
or
xor
rolb
push
jb
cmpsl
inc
scas
inc
data16
inc
out
inc
repnz
addb
push
cmp
xchg
jnp
fdivl
enter
pop
popf
arpl
sbb
and
ss
sti
cs
push
fcoms
dec
and
ficomps
inc
jecxz
jl
sub
xchg
and
out
cmp
pusha
in
pop
outsl
mov
sbb
or
ficomps
xor
and
dec
xorl
xor
xchg
mov
jbe
mov
xor
call
xchg
inc
insl
push
mov
lret
dec
stc
les
mov
xchg
outsl
pop
and
lods
xlat
sbb
mov
pop
testb
scas
mulb
jb
mov
or
dec
repz
movsl
inc
cs
popf
pop
pop
roll
aam
into
in
out
addr16
jb
lahf
in
movsl
adc
sar
mulb
es
test
add
jb
fisubs
add
adc
aaa
jbe
repnz
std
add
out
mov
mov
push
leave
cmp
int
rcll
cltd
out
sahf
cmpsb
test
sub
pop
add
lods
push
mov
jecxz
mov
mov
fldcw
pop
cmc
mov
out
dec
mov
movsb
mov
and
push
or
sbb
stos
sub
data16
stos
xchg
pushf
push
sub
in
jp
and
sub
jge
fiaddl
inc
es
mov
mov
cwtl
jns
mov
mov
test
mov
mov
adc
xor
test
outsb
mov
fisubs
hlt
add
in
testb
cmpsl
cmp
or
dec
jmp
push
ret
lea
nop
sub
cs
sub
or
mov
lret
push
loop
adc
cmp
dec
xor
daa
imul
jnp
addr16
and
push
push
add
xor
imul
js
testb
sub
and
and
xchg
xor
push
rolb
sub
dec
je
andb
js
insl
jbe
push
xchg
rorl
adc
mov
shlb
dec
push
pop
jb
adc
sbb
cmpsb
pop
mov
push
pushf
lcall
and
mov
mov
lods
frstor
jmp
repnz
rorl
daa
pushf
push
cld
inc
pop
addr16
js
and
add
loop
pop
addr16
int3
adc
lea
jmp
enter
idivl
push
jmp
popa
fdivs
sarb
call
push
andb
jns
aad
pop
mov
pop
xor
hlt
inc
setl
fwait
aaa
shlb
push
pop
jl
je
jns
jo
shr
and
scas
cmp
imull
in
dec
push
popf
pop
test
fbld
in
jbe
imul
dec
scas
inc
loop
jo
xorl
and
push
js
mov
jb
dec
cmc
lock
lret
dec
mov
call
divb
mov
flds
outsl
pop
pop
inc
pop
jno
roll
xor
lods
shlb
std
loop
cmp
add
in
add
repnz
or
leave
cmp
push
lret
insl
pop
popa
bound
push
stos
jg
mov
das
andl
push
push
fcomip
xchg
lods
sub
testl
popa
leave
or
push
mov
add
push
push
jo
popl
nop
xor
mov
mov
mov
mov
out
xor
adc
mov
cmp
push
cmp
cmp
lods
js
loop
add
push
idivb
enter
adc
ret
or
test
in
inc
loopne
cmp
ljmp
inc
stos
lock
or
fisubrl
or
push
mov
popa
std
xor
jmp
int3
test
inc
pop
pop
icebp
dec
cmp
pshufw
cmp
fists
ret
pop
js
scas
pop
mov
mov
push
inc
dec
add
fwait
push
fldt
add
sub
pop
or
push
nop
jb
das
scas
pop
jl
push
add
jno
nop
popa
mov
mov
sbbl
in
mov
xchg
subl
cmp
je
add
imul
ss
pop
jl
ljmp
mov
cli
pop
or
xchg
push
sbb
and
mov
sub
aas
bound
insl
leave
out
add
pusha
pop
clc
add
adc
cs
icebp
jge
stos
dec
push
mov
dec
mov
popf
adcl
in
cmc
outsb
out
sbb
xchg
fsubrp
sbb
cmp
push
xor
stc
mov
bound
adc
ret
aaa
or
mov
sbb
stc
mov
leave
pop
mov
jns
cmc
mov
adc
and
inc
lcall
push
test
pop
icebp
insl
adc
cltd
lods
popa
orl
push
xor
mov
cmp
xchg
xchg
fadd
mov
mov
xchg
call
inc
dec
lret
sbb
mov
jmp
ret
adc
cmp
aam
mov
insb
sbb
mov
xchg
in
xor
insl
dec
mov
ljmp
dec
or
popf
adc
push
repz
mov
sub
cmpsl
mov
out
repnz
into
cmp
xor
iret
fwait
aaa
ja
jns
jp
adc
out
jnp
popa
ja
aas
shl
lods
enter
jne,pt
cmp
fnsave
out
out
sti
adc
and
sbb
xlat
push
xchg
aaa
nop
sub
imull
inc
inc
outsl
mov
nop
cltd
in
mov
int
mov
aam
gs
pop
insb
stos
mov
ljmp
pop
xlat
aam
subl
jge
xor
adc
xchg
in
mov
cmp
insl
mov
ficoms
pop
dec
data16
sbb
adc
pop
cmc
pop
clc
push
in
data16
xor
ficoml
rcrb
out
mov
xchg
sub
push
out
add
jecxz
insb
stos
les
sti
out
fsubr
cmp
mov
sbb
leave
das
pop
movl
jl
cmp
sub
push
pop
mov
repnz
dec
es
pop
mov
mov
sub
ss
mov
fs
bound
jo
xchg
scas
sub
inc
rolb
mov
dec
rolb
ljmp
je
xchg
andl
pusha
sbb
out
mov
mov
and
imul
mov
xchg
lret
lea
jns
in
andl
pop
adc
inc
push
cmp
js
movsl
test
add
push
push
xor
test
out
pop
jbe
jmp
pop
mov
mov
push
and
and
test
enter
inc
sub
iret
push
sub
icebp
sbb
xchg
fs
mov
jne
out
adc
mov
jo
inc
mov
ret
stc
jl
mov
gs
push
sbb
lea
aaa
pop
pop
in
push
ds
and
pop
lret
xchg
xchg
mov
sub
leave
push
xrelease
adc
out
and
jg
cmp
pop
xor
flds
fwait
test
clc
dec
or
aaa
shll
inc
nop
pop
lcall
push
das
lcall
iret
orl
mov
ja
dec
push
mov
ret
xor
mov
inc
pop
cmp
pop
in
test
int
das
sub
orl
out
bound
clc
das
fsubr
mov
mov
dec
fstpl
or
push
inc
out
fstp
mov
enter
leave
inc
jo
scas
sbb
mov
lcall
push
lea
into
call
dec
icebp
lcall
pop
int3
inc
rolb
mov
lds
ds
push
pop
and
lcall
sbb
pop
dec
jae
pusha
mov
test
or
mov
cld
xchg
arpl
orl
ret
xchg
cmp
mov
sti
pushf
mov
mov
sub
push
in
sbbl
pusha
dec
mov
in
loop
xchg
pop
sub
dec
jmp
sbb
xchg
je
inc
add
and
js
int3
inc
insb
add
inc
pop
decb
fstps
repnz
dec
sahf
push
cmp
cld
push
das
adc
push
sbb
push
sbbb
inc
repz
xor
orb
data16
xchg
ror
in
movsb
mov
andnps
cmp
mov
lds
mov
adc
xchg
cmovbe
or
sub
inc
arpl
xchg
xchg
out
sbb
jle
and
js
fs
pop
push
adc
push
push
iret
sbb
adc
aam
test
and
imul
icebp
clc
repz
aam
sbb
xor
adc
jecxz
shll
mov
push
fmul
les
js
cmp
xchg
frstor
sbb
arpl
sbb
xlat
push
cltd
and
mov
shll
les
daa
notl
mov
mov
in
mov
dec
inc
addr16
fsubl
add
lret
arpl
mov
ret
add
dec
out
add
xchg
andb
push
jb
pop
add
sahf
xchg
cmc
aas
and
push
fimuls
cmp
adc
push
push
dec
andb
pop
stos
movl
stos
es
jne
stos
and
fwait
or
subb
jle
call
popa
xorl
lds
mov
dec
jne
add
or
mov
jmp
or
imul
add
rorl
dec
in
push
mov
leave
fistpll
roll
int3
ds
add
repz
push
add
shll
mov
mov
cmp
push
lds
out
sub
and
push
lods
movsb
pop
stos
mov
cmp
sbb
pop
xchg
jne
sar
int
mov
jne
in
mov
adc
and
add
stc
dec
xchg
dec
clc
xchg
mov
mov
repz
dec
ja
stos
xchg
and
adc
loopne
shrl
dec
xchg
push
icebp
fwait
fs
fwait
xchg
mov
cmp
pushf
mov
mov
roll
cmp
mov
lods
adc
in
scas
mov
sbb
mov
clc
xchg
push
add
std
mov
mov
imul
fidivs
in
imul
jae
xor
lea
and
fucomp
xchg
jl
popa
lahf
xlat
mov
mov
or
mov
leave
fadds
data16
test
sbb
test
jle
xchg
lods
inc
mov
adc
jecxz
into
shlb
or
cmc
sub
push
repnz
fwait
aas
jb
ret
jl
ret
xor
sub
hlt
adc
pushf
mov
mov
insb
repnz
pop
lahf
lods
mov
dec
dec
and
xor
loope
add
pmaddwd
lock
out
mov
and
out
xchg
xor
jbe
xchg
test
movsl
sub
add
push
enter
cmp
aam
jae
cmp
pop
push
fwait
and
pop
ljmp
lds
sbb
mov
cwtl
iret
xchg
data16
aaa
pop
fmul
fidivrl
or
aam
pop
cmp
xlat
and
xchg
ja
into
xor
push
mov
push
jle
iret
mov
inc
scas
mov
stos
ds
pop
or
gs
jp
xchg
cmp
rol
aaa
outsl
dec
inc
negl
addr16
xlat
pop
dec
out
sbb
aad
xchg
int
in
mov
ret
addb
mov
mov
push
push
es
xor
mov
adcb
gs
repz
cltd
jnp
imul
cmpsl
xchg
mov
es
push
int3
rep
mov
shl
nop
xchg
icebp
shlb
popf
decl
cltd
xchg
xchg
xor
and
lcall
iret
shll
bound
xor
addr16
and
push
xchg
and
clc
or
cwtl
dec
stc
xchg
fdivrp
roll
ds
cld
pop
xchg
out
mov
pop
sar
cmpsb
xor
out
inc
rolb
jo
mov
dec
bnd
pop
mov
lds
and
mov
frstor
ja
iret
fildl
repz
clc
xlat
lods
movsb
pop
xchg
dec
adc
and
or
mov
in
pop
mov
cmp
negb
hlt
lock
jnp
lahf
or
dec
insl
fcomip
into
inc
shll
fisubrl
out
enter
push
mov
test
fsubrl
das
bound
out
pop
jge
in
outsl
xchg
fcmovnu
scas
outsb
pushf
clc
popf
lea
jmp
mov
shl
dec
fadd
cmp
xor
mov
or
movsl
pop
sbb
xchg
mov
push
cld
and
jmp
cltd
cli
mov
orb
mov
and
mov
stos
loopne
pop
mov
xchg
xor
push
sbb
hlt
repz
rcl
sbb
scas
sub
aam
daa
fwait
sub
cmp
mov
aas
addl
push
xchg
push
push
xchg
and
or
inc
flds
mov
cmp
in
jecxz
sbb
fisubs
jo
sbb
int
cltd
into
dec
mov
jbe
and
mov
lds
iret
out
call
ljmp
push
adc
imul
in
lret
lcall
ljmp
jo
jle
dec
push
daa
imul
cs
gs
mov
repnz
cltd
mov
repz
fwait
addb
addr16
inc
push
jl
xchg
bound
ret
fstps
shlb
pusha
dec
mov
stos
push
adc
adcl
add
imul
pop
jecxz
mov
xchg
pop
cwtl
inc
sub
addr16
mov
mov
add
jo
sub
cmp
rep
push
jecxz
shll
lahf
movsl
xchg
and
sub
dec
cwtl
cmp
or
lcall
jl
push
fstps
add
jg
pusha
pop
sti
out
mov
or
loopne
mov
cs
inc
insb
ja
mov
lods
cli
rorl
sbb
loope
aam
pop
test
lret
inc
dec
mov
xchg
push
and
and
jno
pop
mov
divb
repz
icebp
ds
pop
mov
test
outsl
stc
xchg
pop
cmp
test
popf
test
xlat
or
ljmp
js
dec
jmp
xor
fistpll
inc
cltd
jno
lds
sub
repnz
and
mov
mov
leave
add
jle
cmpsb
fildl
es
adcl
push
icebp
jb
std
fistpl
shll
xchg
jno
mov
push
mov
cwtl
dec
sub
jne
or
push
or
movsl
cmc
addr16
jge
fistl
xchg
cltd
jns
push
outsl
xor
and
stos
mov
iret
pop
and
push
mov
fbstp
data16
xlat
add
mov
ljmp
xchg
gs
in
rcl
adc
pop
mov
pop
inc
pop
addr16
addl
dec
ret
jb
dec
cmpsb
sbb
leave
sbb
mov
push
int3
scas
dec
in
xor
fnsetpm(287
dec
xchg
sbbl
lods
jg
stos
push
push
fisttps
add
mov
gs
or
cli
loopne
or
or
jmp
add
sub
xchg
or
pop
icebp
push
xchg
popf
test
mov
lahf
mov
rcr
sbb
sarb
cmp
push
jle
and
xchg
inc
inc
mov
cmpsl
cmp
jle
mov
add
mov
cmp
adc
jle
or
dec
sub
jbe
hlt
test
or
mov
mov
or
dec
adc
xor
sbb
pop
mov
scas
or
mov
orl
adc
cmpsb
repz
and
jns
out
mov
mov
jle
cmpsb
jo
int
aas
ss
add
ds
sbbb
jmp
out
test
cwtl
nop
dec
ljmp
inc
loope
pop
ds
scas
stos
lea
popf
xchg
jmp
mov
sti
xchg
cmc
mov
adc
lahf
mov
in
mov
push
jo
jp
dec
call
loope
sbb
sub
cmpsb
insl
call
mov
dec
lcall
push
int3
fadds
mov
fists
mov
ljmp
pop
stos
jns
rolb
icebp
mov
loopne
inc
rclb
xor
jl
data16
inc
mov
add
repnz
hlt
jo
or
mov
iret
add
add
or
or
pop
jp
xchg
adc
rol
jns
lahf
stc
popa
mov
jbe
mov
cmc
scas
shlb
lret
xor
and
cmc
lret
enter
decb
inc
shl
outsl
pop
into
fstps
lcall
mov
rorl
mov
add
outsb
ret
cmp
orl
lods
xchg
cmp
add
push
lahf
les
inc
or
loop
mov
pushf
pop
adc
notl
sbb
in
iret
negb
ds
fs
loope
jns
call
jbe
outsl
addr16
not
in
inc
dec
cmp
pop
mov
test
push
ret
sbb
dec
lds
fwait
dec
xchg
icebp
addr16
icebp
scas
push
inc
ds
push
pop
mov
xchg
cmp
cmp
popf
movsl
imul
add
rcll
pop
inc
push
sub
les
das
das
xchg
jno
cmp
mov
dec
sbbb
xchg
xadd
inc
sbb
ret
cvtps2pi
call
leave
sub
or
sbb
fidivl
pusha
push
add
sub
pop
xchg
mov
pushf
inc
xlat
adc
std
insl
mov
imul
push
lods
daa
adc
sahf
test
inc
aas
pop
jge
sub
cli
stc
ret
inc
mov
mov
inc
stos
push
popa
jo
fcomps
mov
push
inc
dec
fmull
outsb
mov
mov
jae
push
xchg
add
ja
aaa
test
clc
push
out
lods
mov
sbb
push
xchg
xor
push
pop
inc
xchg
test
mov
cmp
fisttpl
sbb
mov
ret
fimuls
in
sbb
inc
dec
sbb
insb
dec
or
mov
arpl
movsl
add
insb
repz
sbb
add
push
pushf
jno
push
lret
sub
mov
mov
mov
sbb
mov
add
ffree
fsubr
testb
push
push
mov
sbb
sbb
lret
fdivrl
test
je
sahf
jecxz
mov
jae
lret
leave
shlb
fwait
dec
add
mov
repz
pop
mov
xchg
jnp
jl
xchg
mov
push
cld
dec
popa
sbbl
fstpl
adc
les
out
inc
mov
adc
dec
cmp
pushf
lea
mov
imul
sub
daa
mov
ja
xor
dec
xchg
repz
cld
aam
push
cli
and
xchg
enter
cs
out
cltd
cmc
cmc
insl
pop
scas
add
les
pop
clc
pop
mov
mov
xchg
iret
jno
cmp
lahf
jae
xchg
mov
jo
fs
loop
sbb
xor
int3
ja
inc
mov
arpl
xchg
in
das
sub
adc
test
sti
push
fwait
mov
cmp
push
jmp
shrb
out
inc
fnstenv
jno
xlat
daa
icebp
out
insl
enter
scas
pop
out
popf
jmp
sbb
gs
sub
data16
xor
push
jo
jb
loope
mov
add
push
pop
xor
out
jb
push
bound
lret
jmp
push
ljmp
aaa
ss
sti
movsl
cli
cli
or
adc
sbb
cmp
mov
mov
and
and
mov
lds
sti
jg
popf
nop
mov
lea
adc
movb
xchg
sbb
fmull
out
in
aaa
mov
sbb
out
mov
mov
sub
mov
rorl
and
and
in
mov
pusha
cmp
std
jmp
pop
leave
jne
insl
jmp
cmp
scas
iret
cmpsb
shlb
xor
jmp
push
sub
push
inc
ds
lcall
stc
lahf
pop
pop
mov
pop
es
cmpsb
arpl
scas
jae
push
or
jmp
int3
sbb
jle
push
testb
adc
roll
or
and
scas
jge
ret
or
pop
xchg
orb
mov
xchg
pop
movsb
add
popa
outsb
cmpsl
lods
call
mov
mov
repz
sti
xlat
and
pop
pop
or
and
add
inc
mov
push
arpl
adc
and
inc
inc
sti
ljmp
in
daa
outsl
xchg
sub
sub
push
xor
cmp
cmp
pushf
icebp
lods
adc
or
push
sub
push
add
jo
jp
bound
add
cmp
or
pop
sti
push
jecxz
cmpsb
mov
mov
out
hlt
fld
cld
movsl
jge
sarl
ja
idivb
jle
pop
jae
fxch
test
popa
pop
in
jae
clc
xlat
les
pop
dec
mov
cmpsl
xchg
lds
jecxz
mov
fldl
add
mov
add
int
push
xchg
sub
mov
dec
sbb
mov
mov
imul
in
or
pusha
or
jo
mov
push
mov
mov
push
dec
je
loop
add
daa
test
popf
js
les
sbb
push
push
lahf
pop
call
mov
add
stos
cmp
mov
inc
pushl
jne
fisttps
pop
xchg
mov
test
ret
jo
add
add
imull
sub
mov
dec
insl
daa
push
out
lock
lods
subl
pop
sbb
pop
adcl
stc
dec
out
jae
mov
insl
dec
outsl
out
mov
outsb
iret
inc
aas
inc
jo
jg
mov
lods
jle
dec
aad
adc
sbb
inc
nop
add
imul
rcrb
sti
scas
mov
mov
adc
inc
and
xor
repz
mov
xchg
aam
mov
rclb
xchg
xor
jmp
adc
sub
sbb
sti
adc
inc
sub
xchg
and
fwait
push
aad
negl
sub
xchg
data16
fadds
in
stos
lcall
jge
mov
test
setne
adc
fbld
cmpl
jecxz
les
scas
dec
mov
push
cmc
jl
jnp
je
daa
xchg
cwtl
ret
leave
jecxz
adc
and
cmp
ror
push
lods
jp
or
hlt
and
or
dec
aas
arpl
adc
aad
popf
filds
push
jnp
lret
insb
adc
nop
test
fwait
stc
jle
fstps
test
mov
and
mov
or
or
dec
push
sbb
add
push
gs
popa
pop
scas
fidivs
cmpsl
sbb
push
fldenv
push
fxrstor
stos
pop
xchg
adc
mov
jmp
add
stc
jg
aam
sub
add
mov
lods
sbb
movsl
and
bound
ss
fcmovnbe
sub
pop
sub
cmc
push
ljmp
mov
movsl
cmp
sub
jp
sub
or
ljmp
fsubl
test
sub
lret
fcoml
sub
mov
loope
or
adc
nop
mov
pop
cmovns
lret
inc
pop
jnp
pop
fbld
jae
sbb
rcl
loopne
repnz
mov
or
cmp
jb
adc
rclb
out
dec
add
push
out
pop
test
push
movsl
or
into
in
cmp
inc
jns
and
mov
sbb
mov
and
mov
mov
or
scas
nop
rcr
cmp
jb
mov
fdivr
pushf
arpl
dec
push
fiaddl
xchg
fiaddl
in
mov
outsw
add
mov
rolb
loop
fdivp
mov
jle
shll
pop
xchg
arpl
push
leave
inc
sub
cmpsb
xchg
dec
pop
popa
sub
xchg
testl
pop
mov
xlat
push
lcall
mov
mov
mov
mov
es
fdiv
push
mov
cmpsb
mov
or
pop
out
dec
clc
pop
loop
mov
pop
add
imul
sub
cmp
xor
jmp
pop
inc
cmpb
lcall
in
movsl
jmp
into
mov
jnp
imul
or
outsl
sbbb
iret
mov
mov
inc
pusha
fistl
mov
sub
div
insl
outsb
sbb
sub
xlat
jmp
insb
push
and
sbb
push
and
xor
pushf
push
addr16
lods
mov
mov
jmp
xchg
test
ret
mov
or
fiaddl
sub
mov
dec
mov
jo
nop
cmpsl
addr16
add
mov
or
int3
dec
sub
leave
rcll
aaa
jns
in
fldl
adc
cmp
sub
in
mov
fidivl
adc
push
outsb
clc
xchg
pop
scas
cmpl
int3
and
lods
mov
xchg
adc
cmp
sub
lods
clc
ss
fs
cwtl
and
into
adc
or
mov
mov
adc
imul
push
cmp
mov
hlt
sub
and
lcall
jl
cltd
add
dec
mov
mov
sub
testl
mov
pop
lods
fidivrs
arpl
inc
mov
inc
pop
arpl
ljmp
pop
dec
sbb
ret
xchg
addr16
adc
aam
or
adc
nop
sti
fcomp
sahf
cltd
jnp
outsl
xor
hlt
or
out
test
push
dec
xor
in
leave
sbb
cltd
mov
sbb
emms
cwtl
mov
push
mov
fdivrs
lock
popa
push
add
push
and
push
popf
adc
test
cmc
mov
pop
cmc
sub
arpl
or
mov
adc
or
and
add
sbb
lds
test
inc
xor
loop
xchg
sub
lahf
rorl
mov
call
push
ja
jo
inc
or
xor
push
sub
xor
inc
jge
pop
ss
inc
scas
dec
add
in
inc
dec
mov
mov
inc
jo
mov
cmc
insb
adc
mov
addr16
mov
sbb
andb
sub
nop
leave
mov
sub
cmp
shll
loop
mov
xchg
fidivs
pushf
lcall
xchg
icebp
or
ss
add
jg
push
cmp
das
mov
pusha
ret
inc
scas
fnstsw
inc
mov
and
xchg
push
jg
sbb
ljmp
fwait
push
fs
stos
mov
call
out
lods
dec
cmp
mov
outsb
ret
stos
popf
inc
cmpsl
xchg
mov
sub
mul
sbb
ficoms
fwait
pop
sar
mov
mov
push
mov
iret
outsl
xor
push
cmp
mov
lds
testb
sahf
enter
lods
jl
addr16
mov
out
mov
divl
std
inc
xlat
cmpsb
fwait
arpl
pop
push
adc
push
add
cmp
jge
mov
add
jbe
daa
inc
mov
nop
xchg
xorl
mov
sbb
test
jne
pop
sbb
enter
mov
das
or
jnp
loope
dec
das
jmp
add
sbb
pop
popf
or
mov
xchg
stos
cli
and
xchg
aam
hlt
jmp
cltd
pop
scas
dec
in
cmpsb
subl
adc
or
mov
jecxz
or
aaa
push
xchg
in
adc
mov
mov
int3
push
int3
stos
in
pop
or
test
inc
ja
stos
push
aaa
testb
pop
scas
dec
lock
cmp
xchg
sbb
dec
stos
or
hlt
outsl
jb
xchg
and
cltd
out
pop
mov
lods
sub
pop
and
roll
mov
dec
push
aam
test
push
sbb
outsl
mov
add
test
jbe
idivb
fsubl
mov
insb
mov
std
inc
aad
pop
xor
aaa
sbb
je
cmp
xor
call
pop
xlat
repz
xlat
enter
inc
xor
or
mov
icebp
pushf
push
mov
mov
xchg
jbe
into
mov
inc
add
mov
outsl
jge
mov
push
pop
inc
popf
out
in
es
inc
fdivrl
addr16
lock
rcrb
jl
movsl
inc
fcomp
ficoml
push
fiadds
inc
test
cs
pop
cmp
adc
sub
push
testb
sub
ret
mov
push
push
enter
pop
inc
and
push
and
mov
cmpsb
xchg
sbb
lret
dec
or
scas
imul
lods
lock
test
stc
jge
out
sti
divb
leave
jmp
dec
mov
daa
dec
xchg
cmpsl
jle
stos
dec
mov
jo
xchg
xor
mov
dec
and
mov
loopne
sti
jecxz
nop
repz
addb
mov
push
mov
sub
xor
push
neg
mov
and
testl
adc
ja
jle
sbb
push
bound
cli
and
mov
testl
mov
call
push
sets
xor
cmpsb
and
jo
or
inc
xchg
in
ret
popa
jb
je
sub
in
jnp
incb
fdivs
sbb
out
jecxz
sub
inc
dec
mov
test
sub
fmull
mov
dec
lahf
lret
loope
rcl
mov
stos
enter
popl
xchg
push
out
movsl
shlb
xor
lahf
lea
jmp
mov
mov
dec
inc
mov
out
mov
int3
cmc
insl
and
xchg
out
icebp
xchg
shlb
insl
xchg
push
inc
push
pop
mov
pop
or
lret
cmpl
add
popf
jp
fs
lahf
inc
rcrb
pop
pop
or
add
andl
leave
hlt
mov
pushf
push
daa
fwait
xor
mov
jb
out
push
std
imul
repz
lcall
jge,pn
fidivrl
adc
nop
pop
in
xchg
inc
jmp
rorl
and
mov
pusha
nop
lahf
sub
or
mov
loopne
adc
or
mov
sub
neg
or
hlt
jo
inc
xor
sub
clc
mov
clc
pinsrw
add
test
dec
mov
movsb
mov
mov
imul
arpl
xchg
and
mov
dec
fisubs
mov
xchg
mov
push
sub
sub
jno
lods
add
psubsw
or
call
sub
xor
pop
sbb
test
addr16
hlt
clc
loope
faddp
and
insb
jg
sub
sbb
adc
jae
sbb
mov
hlt
scas
cmp
add
inc
or
xchg
or
test
pop
sub
pop
mov
aas
andl
xor
pop
mov
ret
mov
jmp
into
xchg
sbb
int3
push
cli
jae
sub
outsl
sub
mov
adc
inc
sbb
cmp
xchg
inc
jne
fnstenv
pop
mov
inc
arpl
aas
rorl
icebp
ret
sbb
push
mov
arpl
fcmovbe
lods
aas
adc
sbbb
andb
adc
subl
into
cmp
sub
mov
mov
dec
mov
push
or
push
int3
int
push
adcb
push
jg
aas
nop
pop
xchg
bound
imul
pushf
in
fcomp
loopne
fdivrs
inc
addr16
cmc
sbb
mov
sahf
lock
das
cwtl
cmp
cmpsl
das
std
mov
imul
mov
inc
mov
insl
cmp
jne
ret
jno
xchg
pop
inc
sub
testb
sbb
je
mov
testb
out
mov
push
in
nop
out
mov
pop
inc
stos
mov
xor
je
cwtl
aad
mov
fcoml
cwtl
cmp
cltd
mov
int
xor
dec
cmpb
inc
movsb
mov
loop
pop
push
lahf
sarl
pop
ljmp
add
adc
out
pop
lds
lds
pop
pop
je
jge
pusha
cmp
scas
scas
fldenv
adc
aaa
cmp
imul
or
call
lret
add
pop
push
pop
mov
call
sub
nop
xlat
mov
loop
xchg
xor
aas
les
dec
sub
fdivrl
cmp
pop
jmp
shlb
cmp
add
push
int3
and
pop
or
jg
mov
repz
inc
loop
popf
jmp
cmp
test
ljmp
cltd
jno
mov
notb
jle
pop
lea
or
pop
sub
scas
sub
cmpsb
sahf
jbe
es
shlb
lods
jns
adc
popa
in
or
cmp
dec
cmp
daa
mov
push
mov
mov
jnp
fldcw
fidivrl
aaa
mov
mov
test
pop
insl
cmpsl
cmpl
es
fists
inc
push
or
mov
jmp
dec
insl
add
xorb
jo
cli
rcr
jne
leave
inc
xor
xor
mov
and
out
and
push
pop
sbb
and
xchg
sti
std
iret
aaa
mov
sub
mov
addr16
jecxz
lcall
mov
push
and
dec
ljmp
pop
sub
subl
imul
push
aas
push
ljmp
dec
out
dec
leave
mov
clc
inc
sub
hlt
cmc
add
mov
popa
sub
adc
jge
add
mov
jns
mov
xor
icebp
mov
push
sbb
ret
pop
cmp
pop
outsl
and
mov
mov
push
pop
jmp
add
jecxz
into
notb
xchg
stos
and
sub
clc
movsb
ss
dec
cmp
xor
or
movsb
dec
xorl
sarb
cmp
inc
fwait
shlb
fiadds
imul
lea
fcoml
cmc
or
mov
stos
pop
out
fcom
lods
jnp
xchg
and
ja
mov
stc
decl
jmp
pop
xchg
xorl
pop
icebp
les
addr16
xor
or
fadds
xor
mov
mov
sub
dec
aaa
pop
mov
int3
movl
and
pop
lret
inc
mov
jnp
stc
fstpl
pop
outsl
mov
jge
jmp
movsl
sub
ret
and
sarl
cmpsb
movsb
arpl
sub
sub
jo
fs
roll
inc
loopne
push
jb
xlat
inc
mov
push
jne
cmp
dec
xor
push
mov
movsl
inc
jl
pop
fs
bnd
icebp
stc
mov
xchg
xchg
lea
sub
insb
dec
sar
jbe
add
adcb
into
les
cmp
add
sbb
jns
xlat
sub
push
repnz
xchg
hlt
and
stos
cld
mov
inc
addl
stc
xor
pop
push
cli
mov
es
mov
lock
cmp
jbe
aad
subb
cmp
pop
mov
add
hlt
sbbl
scas
xor
add
xchg
push
xor
cmpsl
hlt
andb
out
cmp
adc
cmpsb
sub
scas
mov
std
into
mov
jl
std
nop
or
mov
leave
rcrl
cmpsl
ljmp
hlt
cmp
push
cmc
or
or
mov
or
or
aas
mov
mov
jno
mov
pusha
ret
pushf
adc
inc
xor
out
data16
orb
out
mov
add
sub
arpl
xchg
mov
and
mov
cli
and
sub
jg
outsl
or
adc
pop
pop
insb
nop
adc
and
mov
gs
mov
jae
add
fsubl
fsubrp
xchg
cmp
adc
push
and
pop
test
in
pop
cmp
sbbb
in
add
loopne
push
mov
inc
xchg
jns
notl
inc
mov
lea
sub
or
in
lcall
loop
pop
sahf
repnz
push
cmpsl
sarb
add
incl
and
cmp
pusha
jp
or
dec
fwait
adc
cmp
mov
daa
jne
cmp
out
sti
add
pop
fadd
pop
mov
mov
push
sahf
pop
std
stos
data16
sti
push
push
sar
ja
dec
out
orl
scas
leave
mov
dec
mov
in
dec
adc
jecxz
jne
mov
jns
adc
or
mov
outsl
rorb
repz
mov
pop
push
inc
cmp
in
lods
imul
out
and
in
xchg
cmp
aad
push
daa
fnsave
cmp
out
in
cld
js
cld
push
and
sbb
addl
sub
add
movsl
loope
dec
popa
mov
push
icebp
sub
lods
pop
xor
add
push
das
push
xor
add
ds
pop
mov
inc
sub
popa
mov
pop
push
mov
movsb
dec
xor
imul
mov
jp
or
lcall
inc
stc
xchg
adc
add
cmp
cmpsb
mov
sub
in
out
jmp
pusha
in
push
lds
aam
fimuls
cwtl
dec
into
test
sub
jmp
mov
test
int
jg
xchg
sarb
jecxz
fxtract
ret
jb
aad
aam
fdivl
and
scas
std
jmp
repnz
pushf
push
pop
inc
dec
adc
adc
jmp
fwait
mov
mov
imul
pop
adc
pop
pusha
sbb
mov
in
out
js
outsl
aaa
dec
iret
add
sbb
enter
xor
adc
mov
cltd
xchg
out
cmp
add
adc
pop
sahf
push
pop
dec
roll
and
xchg
jno
push
mov
xchg
push
mov
jns
add
and
data16
popf
cmpsb
mov
rcrb
jecxz
popf
jmp
fdivs
sub
mov
xchg
push
sub
mov
pop
pop
sub
cmp
push
arpl
push
adc
or
addr16
xor
imul
mov
push
cmpsb
in
cli
cmp
js
adc
sbb
cmp
mov
cmp
or
in
std
dec
push
inc
ljmp
mov
out
push
in
out
insb
mov
in
cmpsb
mov
fildl
pop
stos
fmuls
inc
clc
sbb
inc
xchg
lods
je
je
out
xchg
xor
push
inc
int3
push
into
loop
rcl
inc
sub
les
dec
pop
push
add
subb
jge
mov
push
daa
lret
lahf
aas
and
sbb
test
jb
add
cmp
adc
xor
dec
push
loop
in
mov
jbe
rcrb
cli
jp
jbe
or
int
lock
pop
lea
mov
mov
std
lcall
jb
daa
or
out
insl
cmp
sub
stos
push
jo
mov
out
jb
push
pop
and
jmp
adc
push
lock
pushf
out
dec
xchg
sbb
ret
pop
std
lret
loop
std
lcall
sub
add
push
and
push
call
mov
nop
movsb
sub
rclb
out
mov
mov
clc
cli
inc
pusha
aad
fwait
xor
stc
add
int
push
jbe
test
sub
xchg
pop
and
scas
sub
push
and
add
cltd
sbb
xchg
xchg
fwait
inc
outsb
dec
arpl
aam
mov
fld
sbb
movsl
repz
bound
mov
lea
add
pusha
inc
outsl
daa
test
fbstp
cltd
mov
inc
mov
es
shlb
loopne
cmp
mov
ss
cmp
addr16
mov
ja
dec
or
into
outsb
leave
icebp
aad
pushf
loopne
xchg
pusha
call
jmp
xchg
out
loope
jmp
mov
imul
dec
lods
mov
xchg
fidivl
cmpl
outsl
cmove
and
jge
jno
mov
mov
adc
mov
or
pop
or
insl
add
fwait
lret
push
adc
inc
clc
or
lahf
sbb
shll
std
popl
xor
mov
daa
cmp
mov
lea
repnz
insl
mov
mov
sub
xchg
mov
dec
pop
icebp
jbe
xchg
jo
lock
fsubs
iret
inc
loopne
push
in
insl
fsts
inc
and
add
mov
dec
push
dec
mov
sti
fnstenv
xor
outsb
decl
xor
mov
dec
scas
dec
addl
push
sub
push
enter
pop
mov
or
repnz
test
mov
and
dec
into
and
pop
mov
xchg
jmp
xlat
cmpsl
fcompl
mov
scas
dec
push
in
popa
jb
insl
fdivl
cmp
loopne
sbb
test
xor
lahf
xchg
mov
mov
iret
outsl
fsubrs
into
mov
hlt
or
pop
xchg
cmpsl
or
imul
xchg
sub
shlb
jp
pop
outsb
icebp
jno
aaa
sub
outsb
rcl
test
outsl
rcrb
or
in
movsb
adc
jecxz
xor
test
cmpsl
faddp
sbb
out
cs
outsb
inc
aas
cmp
aad
insl
test
les
adcb
mull
jmp
or
or
ja
rcl
das
add
cmp
leave
xchg
mov
xchg
inc
cmp
or
push
cmp
aad
xchg
lock
jmp
xor
fs
sbbb
maskmovq
testl
xchg
mov
loop
test
pop
mov
mov
inc
fwait
int3
cmc
fidivl
lea
inc
add
mov
ja
call
rclb
mov
das
xchg
ljmp
ljmp
add
sub
adc
ret
jle
push
jns
daa
fmull
mov
push
mov
int3
mov
stc
dec
sub
mov
jb
adc
fists
cmp
pop
jmp
pop
lds
jle
lods
or
add
inc
mov
adc
mov
ret
push
or
iret
fwait
frstor
andb
jb
call
pop
xchg
mov
sub
mov
xor
push
xor
xor
testb
push
ret
nop
repz
xor
cmp
popa
mov
jae
mov
adc
outsl
sti
xor
pop
popf
addr16
clc
dec
into
mov
cmp
stos
scas
ljmp
bound
xlat
in
out
xchg
sbbb
mov
sbb
jns
lea
xchg
ret
int3
roll
adc
inc
push
ret
push
fisttpl
mov
sub
mov
push
xchg
bnd
jne
and
scas
loopne
push
lea
inc
fiadds
adc
xor
cmp
xor
pop
gs
mov
stos
jge
inc
movsb
aas
push
cmp
or
lea
mov
mov
bound
ret
cld
shr
and
pop
sbb
push
loope
jb
or
cld
ret
sbb
or
cmp
inc
notb
push
adc
pop
mov
pmuludq
cmpsb
inc
adc
xchg
ja
ret
add
cli
addl
add
scas
mov
mov
xlat
std
mov
cmc
push
jecxz
pop
push
sub
mov
sub
fisubrl
daa
xor
test
das
dec
mov
rclb
pusha
mov
sub
aas
cmpsl
movl
call
xchg
sub
xor
mov
pop
jl
leave
lret
add
xor
daa
or
sbb
sbb
push
sub
call
loope
sbb
ljmp
ss
test
jae
jbe
aam
inc
mov
stos
adc
fistpl
in
xchg
mov
mov
loopne
adc
sbb
les
sti
lcall
dec
lahf
or
adc
out
pop
imul
xlat
inc
push
inc
lds
stc
les
xchg
fbld
mov
test
cmp
addr16
sbb
mov
push
jbe
dec
cli
and
mov
adc
mov
and
test
lods
xor
and
popa
jb
out
pop
lcall
popa
mov
popa
push
sarl
incl
xchg
xchg
jmp
dec
push
xchg
dec
mov
popa
int
xchg
sbb
mov
mov
je
xchg
cmp
cmp
inc
test
adc
add
cmc
mov
mov
sub
jb
mov
add
lods
icebp
fcmovbe
and
imul
cmp
scas
fstps
rcrl
fsubrs
push
push
mov
popf
ret
inc
mov
aaa
int
pushf
ds
sbb
xchg
sahf
aas
pushf
shl
movl
aad
shrb
sahf
mov
xchg
outsb
xor
fmull
clc
and
test
fmul
sub
dec
repnz
pop
lea
push
fwait
adc
ret
sbb
sub
push
orl
inc
xor
cmp
setg
pushf
sub
std
or
push
inc
ss
inc
xchg
shr
gs
xlat
fisubrl
jmp
enter
nop
idivl
data16
mov
cmc
js
addr16
push
jns
sbb
cmp
ja
push
inc
int
cmp
dec
leave
and
gs
aam
lret
lds
imull
or
cwtl
add
nop
pushf
scas
int
jg
push
xor
dec
mov
ja
push
sub
fmuls
test
pushf
lds
or
andl
jo
into
push
jns
lods
stos
inc
inc
inc
sub
push
push
mov
nop
add
xor
mov
jge
and
sti
inc
xchg
add
popf
adc
out
scas
test
lahf
cmp
jo
addr16
pop
cltd
add
cmp
das
sbb
dec
xor
jno
jmp
incb
mov
push
in
fwait
int
clc
js
jp
inc
adc
scas
mov
sti
fistpl
enter
pop
jb
mov
add
mov
inc
adc
add
lock
sbb
sbb
xchg
mov
add
cmp
loope
sti
xchg
test
mov
or
mov
jns
lea
lea
rcl
loope
push
mov
xor
les
js
jne
daa
stos
out
int3
push
addb
mov
notl
out
dec
lret
ljmp
mov
sub
in
stos
std
inc
fdivr
or
jl
aam
insl
or
dec
xchg
push
movsl
test
aad
in
inc
jnp
sbb
rclb
test
and
rcr
dec
pop
repz
adc
imul
insb
and
sbb
imul
rclb
notl
int3
loopne
imul
adc
push
adc
int
jns
sbb
lods
cwtl
inc
and
add
imul
mov
lret
jae
sub
clc
mov
mov
dec
out
pop
sbb
and
sbb
sti
push
ficompl
jne
in
cmp
mov
ret
insb
notl
cmpl
xchg
jnp
or
xor
out
pop
push
dec
aaa
sbb
fldenv
fucomi
jl
arpl
pop
int
out
or
xchg
lea
adc
insl
push
ret
inc
cmc
inc
ret
es
cmp
push
push
scas
mov
pop
and
jae
push
aad
ss
xchg
sub
mov
xchg
xchg
fs
and
stos
adc
mov
data16
or
jg
aas
jns
test
cmpb
cmp
pop
out
das
mov
inc
lcall
jmp
stos
sbb
pop
dec
in
mov
fnstsw
lret
daa
push
mov
pushf
sub
fwait
pop
and
sbb
pop
in
ficoml
test
mov
xor
mov
jo
jnp
jge
add
mov
cmp
inc
les
sub
fwait
dec
lcall
dec
mov
movb
movsl
popa
push
pushf
shll
pop
cltd
lds
negb
push
imul
sbb
int3
in
std
inc
mov
and
mov
and
int3
repz
fs
mov
std
mov
cmp
or
and
inc
mov
pop
enter
mov
cmp
push
loop
cmc
cs
sub
inc
cmpb
movsb
arpl
cmp
jecxz
daa
in
xchg
jmp
outsl
lds
rcrb
mov
aad
idivb
stc
sbb
test
fwait
dec
and
mov
aaa
arpl
mov
jno
jl
in
pop
push
pop
mov
sahf
xor
test
push
push
clc
and
adc
hlt
lods
inc
pop
ret
sbb
xchg
dec
adc
aad
imul
xchg
push
sub
inc
into
mov
and
pop
xchg
lcall
xchg
pop
pop
aam
xchg
inc
push
shll
daa
add
sub
repnz
sub
pop
stos
add
inc
adc
popf
lret
mov
mov
mov
adc
inc
std
xlat
pop
sub
ret
xor
push
ror
mov
pop
adc
fadds
cmp
ret
in
pusha
jecxz
cmp
enter
in
mov
jmp
iret
push
pop
subb
jp
pop
push
xchg
dec
testb
xor
jno
aaa
imulb
int3
test
sub
outsb
add
out
push
xor
out
lcall
jnp
popa
sub
bound
loopne,pn
jge
je
xchg
out
ret
les
sbb
xor
inc
in
and
aaa
rcrb
mov
cmp
movsl
mov
pop
mov
scas
popf
dec
rclb
sbb
out
xor
lcall
push
testb
adc
xchg
sbb
stc
inc
xor
idiv
or
mov
mov
jmp
adc
mov
pusha
fmull
cld
andb
lods
fwait
call
jbe
mov
dec
bound
stos
cmp
jae
lea
into
dec
push
mov
xchg
cmpsl
das
lds
jmp
sahf
lea
mov
sub
sbb
mov
mov
xor
cmpsl
enter
pop
mov
xor
jge
and
fnstcw
mov
mov
inc
push
jno
imul
add
roll
jno
lods
dec
adc
sub
ds
mov
repnz
cmp
mov
adc
shl
cwtl
adc
repnz
in
scas
and
xchg
js
or
inc
cmp
in
add
or
or
iret
mov
xchg
mov
ljmp
jo
jmp
das
fs
pop
mov
sub
push
push
ss
add
cmp
mov
ret
por
sub
outsl
and
movhps
sub
pop
push
rorb
jbe
push
adc
dec
adc
ficompl
mov
jo
lret
add
push
arpl
dec
push
inc
adc
xchg
fsubl
sbb
jge
cmp
mov
les
out
fsubrl
lret
dec
push
inc
mov
ds
lock
pop
mov
mov
ljmp
out
adc
data16
jno
insb
imul
in
pop
jae
in
push
adc
stc
inc
test
jo
mov
pop
dec
popa
out
sub
and
lock
sbb
and
sub
shll
add
jno
bound
sbb
sub
fwait
push
das
dec
bound
fiaddl
jb
jne
std
push
sub
ljmp
and
outsb
xchg
inc
xchg
movsb
xchg
sub
addb
cs
sub
mov
cwtl
mov
jge
mov
adc
push
sub
pop
add
and
pop
iret
and
or
movnti
cmc
and
dec
pop
jp,pt
test
aam
iret
xor
stc
fidivrl
loopne
out
jge
insb
ret
or
stos
jno
push
sub
xor
push
mov
sbb
inc
ja
sahf
cmpsb
scas
addb
data16
push
mov
pop
loopne
lods
or
pushw
outsb
add
ja
shrb
add
push
rorl
and
push
push
or
test
into
sti
into
jno
iret
pop
jmp
and
rclb
and
mov
push
xchg
lcall
xlat
mov
insl
cmp
xchg
imul
jb
mov
jl
mov
push
enter
adc
jns
jo
jp
fsubs
je
test
inc
aas
or
dec
or
cmp
adc
imul
movsl
in
sub
cmp
cmp
lods
push
inc
mov
mov
mov
jp
adc
or
movsl
arpl
pushf
out
xchg
nop
mov
test
iret
xor
lcall
insb
mov
testb
cmp
gs
sub
push
fwait
xchg
fs
push
fs
mov
mov
cmp
mov
outsb
out
cmp
adc
mov
dec
or
and
stc
mov
sar
aas
pop
add
jge
div
inc
mov
stos
inc
in
mov
xchg
dec
rolb
mov
aad
mov
out
xchg
lahf
out
jne
lods
xchg
in
cld
ja
lds
in
js
das
fwait
js
jmp
mov
lods
xchg
dec
repz
pop
imul
jo
daa
xchg
jnp
mov
in
lea
repz
xchg
aad
dec
jbe
mov
sub
cmpl
pop
cmc
inc
aas
mov
pop
dec
jns
js
sbb
cwtl
andb
sbb
add
adc
cmp
call
orl
mov
repz
cwtl
mov
jb
sbb
inc
repnz
ljmp
lahf
adc
pop
push
test
xchg
test
out
es
cs
and
es
pop
xlat
push
pop
in
data16
call
loope
or
subl
inc
arpl
and
mov
mov
popf
jbe
test
daa
mov
and
sub
pop
loopne
dec
movsb
ret
out
inc
add
jb
xor
stos
cmp
orb
ja
push
lret
mov
sub
pop
insb
sbb
jl
inc
xchg
push
outsl
jb
push
aam
sub
pop
pushf
je
push
fs
xchg
mov
shr
add
cmp
loop
test
xlat
inc
push
mov
enter
cmc
push
mov
pushf
cmp
cmp
nop
dec
mov
pop
jmp
pop
dec
shrb
pop
sbb
scas
pop
call
adc
sub
rorl
scas
repz
cmp
xor
daa
inc
xor
xchg
xor
ficoms
gs
push
mov
jae
or
test
imul
stos
bound
pop
adc
and
or
push
mov
ficoml
xor
shlb
cmpsl
adc
xor
pop
shlb
xor
pslld
mov
sahf
xchg
sub
cmp
ja
and
push
punpcklwd
and
jae
dec
adc
popa
ljmp
fs
or
xor
cmp
sbb
addl
fcoml
je
and
popa
inc
pop
mov
sbb
rcl
dec
add
mov
sub
imul
les
dec
or
dec
xchg
jo
nop
jmp
outsb
mov
push
jnp
push
or
jns
jge
popf
out
xchg
mov
jne
pop
test
dec
addr16
fadd
jns
mov
in
mov
lea
cmpsl
push
in
pop
xchg
xchg
nop
mov
mov
test
faddl
enter
mov
pop
push
jae
or
push
push
fst
adc
cld
arpl
inc
and
cld
out
mov
cmpsb
sbbb
in
aam
pop
jne
into
inc
cmp
jecxz
out
inc
mov
clc
push
test
xchg
mov
repnz
mov
jge
push
ss
into
pop
sahf
ret
fcmovnb
pusha
hlt
adc
mov
dec
xor
jl
je
imul
and
jg
and
sub
mov
test
mov
mov
dec
push
sahf
lcall
je
ret
add
mov
adc
mul
test
in
inc
jl
cmpsb
cmp
dec
mov
mov
sbb
jo
pop
xchg
stc
push
push
cmc
daa
out
sbb
rcll
sub
or
sub
enter
mov
cltd
cltd
enter
aam
dec
jbe
js
jle
ss
test
dec
mov
pop
test
mov
push
jp
shll
loop
push
lcall
iret
jmp
fdivl
rolb
fwait
xchg
je
and
or
popa
xor
xor
pop
push
lahf
and
inc
mov
xchg
pop
idivl
mov
aad
lods
bswap
mov
jp
mov
mov
rcl
daa
insl
fisttps
lret
mov
icebp
xchg
push
inc
inc
sub
je
xor
jbe
fdiv
popa
xchg
jecxz
mov
stos
push
outsl
adc
mov
cld
push
jns
add
push
xor
in
and
loopne
add
popf
mov
lret
or
mov
fdivl
and
xor
cmpsb
ss
ret
sub
mov
jmp
mov
jmp
repnz
roll
pop
jbe
add
fdivs
adc
pop
je
movsb
sahf
inc
sbb
xor
pop
pop
ljmp
arpl
jo
xor
gs
mov
and
insb
xchg
test
pop
repz
xchg
mov
and
sbb
sbb
xchg
fcoml
mov
pushf
mov
mov
or
push
inc
pop
mov
or
sbb
int3
sbb
inc
pop
push
cmp
icebp
jl
push
dec
xor
xchg
je
inc
mov
push
aas
clc
les
loope
mov
ds
push
jns
jmp
cmp
loop
loop
jp
sbb
call
jge
push
in
jae
lods
aas
repnz
xor
loope
nop
out
lea
mov
leave
mov
jb
adc
lods
xchg
jmp
add
pusha
inc
add
stos
movsl
push
adcb
imul
or
mov
mov
bound
test
cmpsb
xchg
scas
outsl
or
call
ret
push
mov
loope
clc
add
and
mov
in
sarb
faddl
es
test
or
xor
dec
outsb
cmc
popf
mov
push
jmp
aaa
movsl
loopne
pushf
pop
sub
push
adc
rorl
lods
adc
sbb
push
std
dec
xchg
push
mov
or
daa
push
push
sub
fadd
sti
mov
and
xchg
aas
pop
clc
push
push
movsl
dec
and
jnp
nop
xor
shrb
adc
and
ret
mov
jne
mov
ret
push
movsl
arpl
or
imul
xchg
jbe
mov
loopne
mov
sbb
dec
jl
sar
mov
sti
addr16
sti
add
outsl
mov
and
bound
rcl
adc
lea
xor
enter
pusha
or
xchg
pushf
pop
sbb
leave
cmp
cmc
adc
call
ffree
ss
and
dec
add
cltd
dec
sub
adc
int3
or
push
sub
mov
jmp
sbb
jge
sub
xor
jbe
jo
mulb
ficomps
ret
test
adc
aam
cs
mov
dec
ljmp
movsl
and
and
arpl
pop
cmp
bswap
push
inc
jle
jb
sub
out
mov
pop
pop
cmp
add
cmp
and
sbb
sub
mov
xor
movsl
inc
pop
fsts
inc
jmp
adc
mov
ja
mov
cmc
jle
jo
gs
pop
sub
daa
pop
lahf
imul
pusha
sub
jo
jb
mov
push
add
pop
hlt
mov
js
mov
aad
and
popa
mov
push
add
mov
cmc
push
sbb
pop
imul
cld
ret
into
push
out
in
push
loop
jle
inc
clc
mov
mov
pop
jmp
aad
dec
mov
jle
or
lret
mov
outsl
in
mov
iret
sub
pushf
sbb
ja
daa
fwait
aaa
lret
adc
arpl
mov
jae
pop
lret
mov
sub
stos
mov
pop
or
test
or
and
push
sub
push
icebp
clc
iret
mov
jecxz
mov
addr16
dec
stos
push
push
js
pop
mov
sub
iret
pop
lret
stc
adc
mov
xor
sub
and
in
rcr
and
or
or
jne
pushf
xchg
hlt
inc
and
sti
jb
pop
dec
pop
mov
jo
lea
movsb
xlat
rolb
inc
lcall
aad
icebp
mov
out
inc
and
inc
rol
cmpsl
inc
aad
cltd
pop
loop
sbb
adc
mov
cltd
ja
icebp
cmpsl
ja
sbb
push
mov
xchg
das
jns
push
push
fimull
inc
lock
movb
dec
dec
shll
adc
mov
pop
subl
sar
in
mov
js
jns
sbbb
jg
push
add
adc
sti
fdivl
mov
xor
mov
sub
sub
movzwl
mov
push
cmp
iret
cmp
clc
jl
mov
adc
test
std
cmp
push
je
inc
int3
rorl
insb
push
imul
out
pusha
jle
jmp
loope
or
pop
sahf
nop
test
sub
popa
jns
jb
mov
movsl
push
jno
cmp
pop
in
adc
addr16
sbb
inc
jno
xor
rcr
pop
fadds
les
push
pusha
or
std
pop
sbb
jb
and
ficompl
inc
sarl
cmp
mov
jle
aaa
cmp
jnp
imul
inc
push
mov
subb
std
les
xor
add
jmp
lcall
mov
or
mov
movsl
push
into
cmp
cmp
and
mov
cs
clc
fistpll
gs
push
adc
sub
mov
or
push
ljmp
or
adc
fsubrs
xor
jae
test
sub
inc
ret
xchg
mov
dec
cli
inc
pushf
pop
neg
mov
loopne
mov
js
aad
jb
outsl
sub
and
xchg
adcl
mov
das
repz
pop
mov
jno
das
scas
mov
inc
xor
mov
inc
mov
iret
fildl
jg
insb
loopne
cmc
in
push
insl
lods
nop
dec
pop
and
stos
jle
dec
jmp
cmc
loope
mov
test
xchg
idivl
pop
dec
shrl
sarl
sub
jns
loop
xor
gs
mov
cli
mov
adc
cltd
in
sbb
jecxz
std
pushf
ljmp
pop
xchg
les
icebp
mov
aas
cltd
lock
inc
sub
add
inc
out
sub
dec
mov
mov
push
sbb
loopne
addr16
test
jecxz
inc
in
ficoms
sbb
fnstsw
movl
mov
loopne
xchg
push
xchg
or
div
les
lret
stos
lret
enter
push
imul
ja
pop
out
dec
add
pop
pop
scas
adc
or
and
repnz
pop
int3
shlb
mov
xchg
adc
push
xor
imul
addr16
fcoms
arpl
clc
and
pop
jg
dec
shl
xlat
pop
push
cli
adc
xor
jne
push
ficompl
int
mov
decb
push
stos
mov
jae
jmp
add
lcall
push
outsb
out
insl
adc
fildl
std
jb
cmp
mov
in
mov
cmovo
mov
jecxz
or
repnz
ss
pop
mov
mov
ljmp
push
aaa
push
xor
das
pop
lea
orl
cmp
inc
sub
popa
dec
cli
dec
iret
pusha
insb
jb
cmp
call
gs
or
pop
or
mov
mov
sahf
sbb
or
sti
cmp
pop
dec
inc
xor
jns
and
cmp
rclb
sbb
ret
fs
push
mov
stc
push
ret
mov
int3
inc
dec
adc
in
call
adc
fdivl
ret
and
inc
push
imul
iret
xchg
in
mov
leave
xor
out
scas
inc
pushl
pop
dec
addr16
sbb
or
mov
jmp
cmp
imul
xor
jg
or
inc
sbb
fdivl
dec
test
ljmp
repnz
mov
xchg
inc
xchg
push
xchg
xor
or
mov
addl
orl
cwtl
mov
pop
inc
push
xchg
enter
aas
mov
xchg
xor
sub
pop
mov
ds
pop
test
pop
rorl
lcall
cmp
mov
add
jmp
repz
pushf
jge
andl
ret
inc
mov
ret
push
jns
aaa
xorb
adc
mov
inc
test
inc
mov
mov
shlb
mov
cmc
sub
gs
mov
repnz
inc
adc
das
and
nop
cmp
rcrb
pop
sahf
fisubrs
xchg
add
popf
adc
insb
pop
pop
pop
push
xor
xchg
sbb
mov
push
push
fdivrl
stos
iret
jb
aad
add
xor
cmpsb
sbb
hlt
pop
mov
jnp
mov
xchg
xchg
and
xchg
xchg
xchg
lcall
mov
push
insl
mov
outsb
sub
stos
insb
outsb
lds
je
outsl
xchg
test
scas
mov
arpl
lret
or
push
jae
leave
sub
pop
arpl
and
dec
icebp
adc
jp
stos
push
jl
fsin
int3
pop
jno
cmp
sti
fistl
inc
mov
lods
jae
add
scas
dec
mov
jmp
rcr
xor
mov
cld
inc
incb
inc
push
neg
in
test
mov
stc
rclb
mov
add
xchg
stos
loop
xchg
or
in
xchg
roll
or
xor
jno
add
dec
into
adc
fnsave
dec
push
mov
pop
loop
mov
sbb
adc
mov
cld
sbb
ja
pop
shrd
jg
movsb
dec
andl
pop
sbb
pop
cmp
xchg
rolb
xor
popa
test
fldl
insb
pushf
cmp
sbb
test
sub
shll
mov
lahf
inc
push
lock
cwtl
fisubrs
xchg
out
fstpl
clc
inc
leave
out
push
les
insl
xchg
jl
mov
jge
call
push
inc
aad
mov
and
mov
adc
mulb
enter
cmp
out
mul
and
dec
xchg
rorl
mov
out
xchg
push
popa
scas
xor
or
loop
xchg
xchg
inc
stos
data16
or
adc
sub
aam
jo
sbb
gs
dec
mov
mull
sbb
xchg
insl
mov
orl
sbbb
sti
dec
mov
and
xor
hlt
or
ret
rcl
sbb
mov
mov
mov
inc
push
push
xlat
fcomps
adc
in
or
and
es
lret
or
test
pop
sub
jns
sub
icebp
jae
addr16
mov
sbb
fcmovnb
das
jl
fs
add
sahf
or
push
inc
mov
cmp
push
std
mov
push
cmp
rorb
xchg
pop
xor
pop
jle
loopne
sbb
adc
test
jne
push
aad
sbb
inc
xchg
cmp
dec
repnz
xchg
cltd
mov
mov
inc
push
pop
stc
mov
shl
mov
sbb
sti
dec
lock
xchg
je
aad
pusha
mov
sbb
out
out
popl
mov
cltd
inc
mov
jmp
enter
repz
scas
cmp
sub
daa
add
incb
mov
add
imul
mov
or
jle
repnz
push
jg
clc
mov
stos
xlat
mov
test
loop
push
jne
lret
pop
mov
inc
out
cmp
or
dec
fisubrs
sti
push
xchg
jno
movsl
lahf
outsl
stos
lods
push
mov
jmp
inc
xor
sub
xchg
add
movsl
inc
rsm
not
push
aaa
dec
pop
incb
push
jmp
sbbb
pop
push
das
stc
pop
mov
mov
enter
mov
inc
adc
mov
bound
inc
outsl
jns
loope
movsl
rorl
jge
push
movsl
icebp
pop
xorb
jge
out
fisttps
movsb
test
mov
lea
and
or
cs
xchg
stc
loope
inc
lret
icebp
mov
cltd
ljmp
iret
inc
lcall
out
jns
iret
and
jne
jne
repz
test
or
fwait
ds
sti
mov
arpl
sbb
ret
push
inc
cli
push
clc
repnz
ret
loop
or
xor
cli
add
js
cmpsb
pop
sub
xchg
push
jp
enter
xchg
int
mov
movsl
xor
xchg
cmp
push
mov
test
test
adc
test
imul
xchg
loop
inc
dec
lcall
jg
cli
dec
negl
imul
and
aam
mov
mov
pop
fwait
xor
data16
out
ret
lahf
mov
imul
dec
and
into
sbb
in
xor
in
scas
add
popa
add
sbb
jmp
add
mov
and
xchg
stos
pop
pusha
ret
fs
icebp
pop
iret
and
in
jecxz
inc
sbb
mov
mov
inc
icebp
cmc
nop
mov
hlt
sbb
in
fwait
lods
sub
adc
jne
cmovg
dec
outsb
imulb
jae
xchg
inc
fsubrl
pop
add
fistps
add
insb
in
and
fdivs
cmp
and
enter
inc
fdivrl
ljmp
and
mov
cmp
xor
in
rclb
dec
push
jecxz
sub
add
lahf
mov
pop
loopne
push
push
lods
mov
fs
adcb
loop
xor
fwait
lret
cmovb
mov
leave
or
dec
jno
ljmp
pop
cs
in
mov
aaa
cs
pop
ret
jae
das
ret
lods
pushf
jge
rcll
stc
xlat
cmpsl
jmp
sub
mov
popf
mov
jnp
mov
pop
mov
adc
popf
and
test
pop
adc
pop
sbb
insb
stos
pop
pop
cmp
xor
shl
ror
fisttpl
xchg
repz
push
in
add
jg
add
or
inc
xorb
adc
cmc
pop
and
xchg
repnz
repnz
mov
jo
pushf
das
fcomp
pop
popa
pop
rolb
les
jp
test
xorb
lea
test
add
jno
dec
neg
sti
cmpb
enter
shrl
in
cmp
sbb
push
cwtl
xor
fwait
jp
stos
jae
loopne
push
jle
lcall
lret
testl
mov
stc
incb
shlb
in
adc
pop
cmpsb
insl
mov
mov
lds
xor
add
addl
push
mov
shlb
inc
push
mov
test
ds
in
psllq
or
loopne
scas
push
dec
add
outsb
sub
mov
loop
int
pop
cmc
test
add
push
test
lret
lret
aad
jo
into
jle
in
jge
xchg
scas
sub
bound
insl
dec
pop
mov
fs
mov
or
je
adc
dec
push
shll
dec
push
mov
inc
and
push
push
pop
mov
fidivs
repz
or
mov
pop
imul
jnp
test
cmc
andl
xchg
lods
mov
dec
jno
xchg
rcll
repnz
imul
test
sub
sarb
push
fxch
es
sbb
pop
stos
push
cld
jo
sbb
jns
and
add
pop
test
ret
pop
int
cmp
push
cmp
inc
inc
cmp
xor
pop
mov
aaa
jo
fiaddl
dec
scas
sti
test
insb
daa
jo
inc
lds
dec
push
insl
in
pop
push
push
jg
jmp
test
in
inc
push
mov
mov
pop
xchg
orl
or
das
fildll
leave
xchg
leave
xchg
out
mov
mov
lret
pop
pop
aad
xchg
mov
pop
mov
dec
jle
lods
daa
test
sub
jecxz
push
insb
mov
dec
fwait
gs
xchg
das
test
xchg
cmp
dec
loopne
push
mov
mov
xchg
daa
xlat
mov
ucomiss
hlt
push
sbb
mov
fbstp
and
dec
aad
cmpsl
mov
pop
inc
cli
ja
jns
pop
jle
inc
frstor
sub
pop
test
pop
scas
loopne
bnd
add
fisubs
and
imul
stos
int
mov
stos
cmp
mov
push
fsubr
or
add
push
lods
and
mov
aas
cmpb
pop
sbb
dec
sub
or
sub
sub
cmpb
in
push
mov
mov
adc
popa
jno
gs
insl
clc
adc
push
sub
or
cld
out
and
pop
in
mov
cmpsb
push
jnp
adc
push
lds
test
loop
jl
mov
lea
lret
or
mov
or
stc
hlt
mov
filds
loope
lcall
incl
jne
lods
mov
test
sub
pushf
pop
std
movsb
dec
jg
outsb
xchg
fcomip
adc
mov
fcoml
mov
es
pop
jmp
xchg
add
push
xchg
ret
test
inc
lea
sbbb
cli
mov
ficoml
jmp
add
imul
push
lret
inc
sub
cmp
pop
push
sub
xor
dec
dec
idivl
popa
cmp
push
mov
sub
insl
movsl
inc
cmpb
adc
out
outsl
jecxz
movsl
cmp
mov
mov
jp
test
cmpsb
cmc
mov
flds
pop
mov
xor
mov
cmpsl
data16
pop
andb
popa
mov
or
mov
test
add
bnd
out
cwtl
sbb
ds
push
rcl
xor
mov
test
jb
inc
and
mov
and
mov
pop
imul
xchg
mov
fimuls
or
icebp
sbb
xor
lods
out
mov
sahf
lock
pop
add
cs
flds
fnstcw
aas
in
dec
fdivrp
adc
cmp
js
daa
popa
in
hlt
enter
andl
test
push
stos
flds
movb
push
shrb
fnstcw
addl
or
xlat
repnz
mov
jmp
mov
das
sbb
push
sbb
leave
mov
xchg
mov
test
add
jae
fcoml
or
adc
lock
sbb
nop
inc
mov
or
jb
cmp
and
sub
movsb
sub
aas
inc
add
aaa
cmpb
cmp
lods
je
loope
push
js
inc
and
cmpsb
jne
cmp
in
and
into
or
mov
lret
mov
inc
cs
orb
fildll
in
pop
daa
push
out
mov
pop
mov
lods
insl
addr16
dec
jg
shrl
add
mov
out
inc
test
lahf
cltd
popw
push
dec
cmp
mov
or
xor
pop
scas
pop
jae
addl
xchg
dec
adc
cld
data16
or
imul
mov
ds
mov
shll
sub
rolb
loop
outsl
xor
stos
dec
sbb
mov
sti
mov
mov
scas
mov
and
daa
jle
lret
push
arpl
add
popa
xor
sub
in
jp
or
mov
fsubs
add
add
movsl
lret
inc
les
std
mov
cmp
lahf
jmp
out
arpl
dec
xchg
lcall
es
lea
js
adc
test
scas
pop
jg
andl
movl
repnz
in
hlt
xchg
sti
in
xlat
or
cltd
in
js
movsb
cmpsl
call
mov
jecxz
mov
mov
fincstp
cmp
sbb
mov
pop
ret
jns
js
cmp
mov
rclb
xor
xchg
or
stos
lods
cmp
lret
mov
inc
scas
push
test
and
mov
paddusw
dec
rcr
enter
mov
xlat
scas
and
xor
adc
jmp
jmp
and
adc
mov
ljmp
rcrb
ss
cmp
notb
lea
inc
in
cmp
dec
cmc
bound
nop
dec
pop
dec
mov
incb
stos
xor
mov
or
jb
in
cmc
enter
dec
xchg
dec
inc
xchg
stc
jle
iret
pop
mov
std
sahf
sub
push
shl
xchg
sti
mov
repnz
sub
jecxz
push
xchg
push
cli
data16
in
decb
jcxz
clc
and
bound
mov
mov
cmp
int
dec
loope
and
xchg
je
sti
lret
mov
xlat
and
pusha
pop
mov
mov
adc
xor
xor
push
das
rcl
adc
and
int
and
popa
inc
xchg
bound
and
inc
cmp
mov
nop
call
cs
push
div
push
bound
inc
cld
decb
pop
dec
pop
mov
and
out
or
xchg
jne
xor
and
add
cmpsb
stos
mov
popa
pushf
mov
bound
rol
and
push
insb
mov
add
inc
cmc
dec
mov
jno
jmp
cwtl
int3
add
ds
ret
bound
movsl
cld
mov
adc
daa
jge
lahf
addr16
mov
std
loop
inc
pusha
and
jl
inc
test
and
lods
cmp
or
cmpsl
fsubr
lods
push
mov
xchg
stos
or
pop
pop
ret
dec
lret
sbb
push
xchg
loop
popf
and
sub
mov
xchg
daa
jno
mov
jl
cld
aaa
and
ror
mov
inc
pop
cmpsb
pavgw
ja
xchg
sub
icebp
cmp
js
shll
mov
roll
pop
leave
in
test
xchg
mov
jae
sub
pop
test
repz
pusha
jp,pt
lret
je
or
mov
sbb
push
insb
jmp
and
popf
push
out
sbb
mov
ret
hlt
adc
adc
mov
popl
das
mov
sarl
push
in
dec
dec
lock
inc
in
cmp
cld
repz
mov
inc
imul
xchg
add
sub
jecxz
sbb
shlb
das
push
int3
mov
and
testb
mov
test
mov
scas
aad
sbb
into
push
add
mov
dec
xor
lahf
je
cmp
lea
sbb
push
push
movsl
xchg
rorl
imulb
xchg
es
inc
sub
in
fcmovne
fadds
mov
xchg
xor
cltd
xlat
insl
jne
ffreep
mov
loope
inc
dec
push
aam
inc
popf
in
loop
sbb
pop
ror
imul
mov
dec
lea
mov
mov
retw
sahf
lahf
xor
mov
out
mov
push
sbb
jg
mov
lds
mov
jno
rcl
inc
or
clc
pop
loop
jl
mov
sbb
add
cltd
loope
stos
shrl
adc
push
addr16
jnp
fists
popa
in
sti
mov
mov
sbb
sarl
je
jbe
fnstenv
addr16
daa
lods
jmp
lods
test
or
les
jbe
cmp
lret
arpl
xchg
fstp
mov
mov
int
mov
pop
add
or
mov
lcall
test
jmp
rcll
jne
cmp
adc
and
pop
jnp
xchg
add
addl
cltd
nop
clc
mov
mov
lods
adc
adc
mov
jecxz
ficompl
dec
cmp
dec
or
cld
shrb
or
sub
adc
insl
mov
sbb
push
cmp
and
cmpsl
inc
jnp
and
jg
les
xchg
pop
dec
in
mov
jnp
add
jns
add
ret
mov
stc
movsl
arpl
cmpsb
ja
and
imul
outsb
add
pop
shr
repz
pop
mov
std
adc
add
cltd
sub
testb
push
cld
ficoms
and
pop
enter
cmp
dec
add
jb
sti
mov
mov
lret
xchg
rcr
or
daa
add
fldl
mov
or
movl
jbe
dec
imul
push
cltd
cs
and
fistpl
fists
out
cmp
jb
sub
lods
pshufw
cmp
mov
push
out
call
stos
xchg
sub
into
mov
xor
mov
shll
orb
aam
loopne
popa
or
je
sbb
dec
rolb
daa
pop
cmpsl
sub
sahf
test
cld
stc
test
ja
xchg
je
bound
lea
sbb
dec
out
shlb
inc
push
insb
fldenv
pop
stos
test
xchg
jl
cmpsl
jb
loope
ss
repnz
xor
add
into
xchg
sbb
stc
std
ret
pop
and
aad
xor
dec
ljmp
and
fisubl
mov
cmp
sub
mov
inc
mov
int
scas
enter
jb
iret
inc
scas
jno
bound
mov
lods
lock
push
xor
loopne
xadd
cmp
pop
cltd
xchg
inc
and
xor
mov
push
or
faddl
mov
lock
xchg
pop
add
aam
insl
lds
call
and
lock
lock
popf
xchg
push
lock
mov
push
lock
cltd
xor
sub
mov
cmp
cwtl
mov
mov
pop
pop
in
test
and
mov
xchg
push
add
jl
subl
jecxz
outsb
and
outsl
add
rolb
fmulp
xor
test
inc
dec
pushf
jg
cmpsl
mov
popf
aas
mov
lods
cld
rcll
push
js
data16
xchg
inc
mov
ret
pop
cmp
stos
inc
test
pop
mov
mov
jns
sbb
sbb
frstor
fadds
mov
in
sbb
jp
push
add
rcll
or
xchg
dec
shlb
or
xchg
shll
dec
xor
add
sbb
jae
jno
shl
or
movsb
and
mov
inc
clc
dec
sbb
in
aam
push
and
mov
clc
lods
cld
mov
bnd
cmpsl
mov
xchg
xor
out
fsubs
repnz
insb
mov
jae
cli
fwait
es
ret
pop
lret
out
mov
push
popf
inc
fcomi
mov
je
in
test
xchg
gs
sub
call
and
mov
loopne
ljmp
testl
pop
xor
das
push
adc
xor
cmc
or
xchg
aam
adcb
lahf
adc
mov
push
xor
xor
mov
adc
fistpl
test
int3
insb
mov
or
push
jg
or
movsb
arpl
inc
dec
inc
xchg
ret
lea
repz
test
inc
push
fdivl
and
jae
outsb
adc
ffreep
add
fadds
xor
test
push
xlat
aam
push
jge
addr16
push
jecxz
mov
and
imul
xor
les
push
mov
xchg
or
mov
mov
iret
inc
sbb
adcb
stos
loope
lods
testb
lcall
inc
ja
or
mov
or
add
out
adc
cmp
testl
in
xlat
push
xchg
cs
or
inc
lret
hlt
sbb
add
jmp
push
daa
outsl
in
stos
dec
lods
outsl
into
jae
sbb
push
sub
add
push
in
das
xchg
inc
pop
sbb
dec
imul
or
adc
inc
cmpsb
outsl
mov
clc
in
xor
cmpsl
mov
mov
mov
mov
pop
add
ljmp
movsl
fwait
mov
xor
or
mov
or
adc
faddl
add
mov
mov
mov
xchg
xchg
xchg
xchg
arpl
jbe
addr16
fistpll
inc
jo
sbb
rcpps
mov
fists
sahf
stos
fnstcw
aaa
lahf
xchg
fs
push
cmp
mov
mov
mov
jle
addr16
in
dec
pop
ja
xchg
xor
and
mov
jecxz
jmp
xchg
lods
cwtl
ficomps
or
sar
push
add
sbb
mov
sahf
xlat
fisubrl
pop
ficomps
cmc
cmp
jbe
sub
lock
cmpsb
sub
stos
sbb
xchg
aaa
outsb
sub
in
loop
cmpsb
mov
test
cmp
loope
ljmp
pushf
into
sbb
ss
push
stos
int3
ret
andb
or
mov
leave
jno
fucom
sub
leave
mov
stos
pop
sbb
ds
pop
adc
xor
inc
push
and
or
add
jp
mov
dec
stos
es
sbb
mov
xchg
and
inc
ss
lods
mov
xor
hlt
cmpsb
loope
add
ss
adc
inc
fsubs
push
test
cmpsb
mov
mov
arpl
addr16
mov
call
mov
adc
fadds
stc
loopne
jg
sahf
jg
cltd
push
das
xchg
sub
mov
dec
scas
leave
jle
and
and
test
mov
and
inc
sbb
xchg
mov
cmp
loope
xor
push
int3
in
scas
xor
out
ljmp
cmpsl
loope
xchg
push
mov
sbb
in
inc
add
mov
sbb
fisubrl
shlb
lods
rcll
pop
cmpsb
adc
cmp
cmpsb
sbb
cmp
loopne
xor
jae
std
sbb
daa
dec
insb
cld
dec
jnp
fdivl
dec
out
add
xchg
pop
pop
sti
jp
or
dec
dec
fcomps
xchg
stos
pushf
shlb
adc
insl
cmp
cltd
adc
mov
in
sbb
push
ss
push
fucomi
insl
mov
xor
repz
sub
xlat
popa
dec
push
mov
adc
js
fstl
aad
out
adc
push
sbb
movsb
sub
out
test
pushf
mov
sub
mov
in
pop
jl
iret
xor
xor
and
fiaddl
icebp
xchg
aad
mov
outsb
xchg
test
int3
cmp
jne
add
pop
cmp
fwait
mov
xchg
sub
movzwl
mov
push
popf
nop
movsl
in
out
xchg
cmpsb
cs
sbb
daa
or
dec
mov
stc
nop
dec
daa
popf
pop
shl
pop
jl
out
pop
jnp
fistpll
jg
test
jle
in
push
jnp
es
push
cli
lret
mov
loopne
imul
sbb
testb
xchg
push
fwait
call
push
rorl
add
testb
pop
out
fisttpll
push
lret
hlt
mov
int
testl
aas
jbe
ret
loope
movsb
adc
xchg
adc
add
sti
pop
add
lock
out
out
pop
aaa
sub
out
mov
and
mov
dec
subb
or
sub
inc
dec
stos
sub
insl
mov
push
push
dec
repz
cli
jl
fadd
add
cs
cmp
inc
xchg
rcrb
push
inc
lds
imul
xor
mov
jno
sti
ffreep
ret
js
inc
dec
out
sub
stos
mov
sub
aaa
test
push
into
popf
fldenv
sub
ficompl
jmp
mov
icebp
pop
sbb
imul
sbb
insl
pushf
xchg
arpl
loope
mov
push
jmp
dec
mov
push
shl
adc
in
stos
dec
aaa
enter
push
enter
mov
sarb
mov
fmuls
subl
lahf
dec
in
push
in
into
jl
push
in
pop
arpl
mov
jmp
and
pop
cmp
push
movsl
push
or
arpl
cmp
and
leave
loopne
ftst
jp
sti
add
push
mov
fwait
or
ss
imul
xchg
mov
test
or
add
dec
leave
xor
into
push
mov
dec
add
pop
cld
rorl
xchg
outsb
jg
imul
adc
jno
clc
mov
loope
lds
xor
adc
pop
out
fucom
and
pop
xor
js
and
fwait
mov
pcmpgtb
xorl
pop
lods
mov
mov
clc
xchg
popf
iret
dec
cmp
iret
or
adc
mov
enter
pop
dec
inc
lret
lcall
pop
jo
es
push
ss
sbb
xchg
and
push
ret
test
les
std
xor
sti
and
rclb
dec
jmp
and
fisubs
dec
fcomps
xor
call
xchg
dec
mov
xchg
add
leave
ret
rcl
mov
aad
mov
les
shl
popf
popf
mov
cs
cwtl
jnp
clc
inc
test
es
adc
xor
lcall
mov
pop
jge
xchg
and
mov
dec
and
ret
fmull
in
std
pushf
sbb
loopne
mov
xor
adc
icebp
xor
negl
cmp
inc
xchg
daa
mov
jp
cmp
push
popf
adc
imul
adc
mov
ret
dec
mov
cltd
mov
in
lds
xor
fstpl
xchg
dec
cltd
mov
test
cmpsl
int
mov
scas
jle
out
xchg
jle
sbb
movsl
mov
sbb
ret
mov
mov
ss
mov
lea
in
xor
or
xor
push
call
shl
shlb
dec
pusha
imul
dec
mov
loopne
not
test
in
mov
shr
into
push
pop
jmp
in
sbb
mov
stos
daa
enter
xchg
lret
repz
repnz
mov
stos
mov
in
pop
push
rcr
ret
mov
dec
adc
mov
inc
jo
test
test
sbb
pop
movb
pop
pop
jb
movsb
sub
adc
push
jmp
movsb
cmc
add
sahf
jmp
mov
sub
cltd
pushf
ficoms
fs
inc
xchg
andl
imul
adc
fadd
add
enter
mov
popf
in
ljmp
mov
add
ffreep
lahf
add
dec
mov
pop
or
and
nop
mov
dec
out
and
loope
enter
and
roll
jmp
rcl
lods
arpl
jae
es
lods
xchg
filds
pop
jno
dec
jb
out
fcmovne
rcrl
roll
jg
ss
out
xor
inc
orl
mov
movsb
add
or
ret
sbb
mov
cmp
dec
in
xor
push
dec
in
mov
pop
out
xchg
cmp
xchg
leave
test
xlat
xchg
repz
and
leave
dec
mov
js
je
aas
out
repnz
mov
lcall
out
mov
pop
pop
mov
sbbl
jl
insb
dec
mov
fstpl
les
mov
aas
cmp
mov
sbbb
lods
ljmp
push
dec
jge
pop
mov
inc
aam
movsb
fildll
xchg
adc
adc
mov
movsb
mov
scas
mov
dec
movsb
mov
xor
in
mov
ret
jb
push
xor
sub
les
insl
jo
jmp
and
and
or
and
inc
sbb
sub
int3
dec
pop
call
mov
push
test
adc
int
in
in
mov
mov
inc
adc
mov
lods
icebp
dec
pusha
mov
push
call
rcl
in
cld
inc
stc
jbe
mov
xchg
pop
mov
testb
sub
sti
test
mov
adc
add
andl
arpl
test
out
mov
daa
popf
outsl
pop
cli
xchg
in
in
jb
add
push
hlt
sbb
mov
ret
push
jecxz
and
js
xchg
cltd
pop
and
mov
mov
mov
pop
push
ds
sahf
mov
xchg
add
cmp
loopne
mov
sti
aad
dec
jnp
lret
jno
call
adc
dec
mov
sub
xor
mov
pushf
xchg
lds
mov
lret
and
jl
dec
inc
testb
mov
aaa
push
ja
sbbl
inc
adc
outsb
mov
mov
jle
hlt
adc
sbb
jp
popf
mov
push
int
inc
xchg
in
push
inc
adcb
fists
mov
loopne
frstor
mov
mov
int
mov
es
out
outsl
fistps
pop
adc
adc
xchg
sbb
out
jne
jecxz
fidivrl
es
test
cmc
xchg
jmp
mov
jne
jle
inc
mov
je
popa
xchg
add
push
out
sub
mov
push
mov
cmp
mov
mov
jle
leave
inc
ret
mov
xchg
jb
sahf
daa
cld
lahf
lods
fcomip
pop
pop
mov
adc
aad
daa
push
mull
scas
mov
xchg
orb
lods
test
ja
lds
xchg
sub
in
lahf
mov
scas
enter
sahf
int3
pusha
nop
jne
mov
iret
dec
mov
notl
shrl
mov
mov
repz
push
cwtl
cmpb
je
sbb
or
xchg
push
sbb
mov
push
incl
mov
jb
mov
lret
add
decb
cmc
and
shlb
mov
sbb
xchg
mov
dec
scas
sub
daa
xchg
cwtl
ficompl
in
xchg
bound
cwtl
mov
fcompl
scas
int
cmpsb
push
out
xor
add
dec
call
icebp
test
insb
in
pop
mov
out
add
jecxz
adc
je
std
outsl
dec
lods
jg
sbb
mov
lret
pop
sti
push
sub
in
mov
das
int3
test
cmc
fstpl
inc
pop
call
sbb
cmp
shrb
lret
mov
ret
sarb
sub
lahf
inc
pop
mov
cmp
test
adc
dec
or
cltd
icebp
movsl
cmp
cli
pop
outsl
fidivrs
adc
sar
scas
stos
mov
pop
jbe
xchg
sti
lret
xchg
inc
roll
pop
cmp
pop
mov
inc
mov
jnp
and
insb
cmp
cli
dec
xchg
lock
daa
je
jmp
xchg
rorb
movsl
mov
pushf
jmp
pop
testb
fstl
jl
mov
jge
mov
fcomps
jns
scas
in
and
sub
lret
xor
dec
daa
xorl
pop
aas
mov
lahf
das
and
jecxz
loope
xchg
je
lret
sbb
jge
sub
aad
mov
imul
sub
js
mov
sbb
shll
sub
mov
cs
jnp
outsb
mov
sbb
daa
adc
push
adc
or
ljmp
loopne
cmp
ja
sub
mov
jge
addr16
enter
add
mov
cwtl
and
mov
push
mov
mov
add
js
and
jmp
int
jge
mov
out
lds
test
push
inc
xchg
insb
mov
inc
lds
and
push
loop
jnp
fsub
lds
ret
xor
add
gs
xchg
xor
test
pop
addb
lock
push
in
leave
aad
shll
pusha
loop
out
scas
popa
sub
sub
and
ds
je
mov
inc
ja
jge
repnz
sbb
push
mov
push
jg
sub
scas
cmpsl
pushf
push
jne
test
push
test
pop
jnp
nop
mov
mov
add
inc
leave
pop
mov
jb
sbb
sbb
push
ret
addr16
jo
cmp
fwait
test
mov
repnz
ret
push
inc
insl
bound
inc
in
aad
fld
cs
iret
push
movsl
mov
lahf
xchg
mov
jno
pop
mov
sub
es
ret
xchg
jmp
mov
bound
test
leave
xlat
shlb
in
loope
jmp
xchg
fdivr
je
xchg
inc
jae
aaa
inc
cmp
rcrb
adc
mov
insl
cmp
decl
and
lods
jle
xor
jecxz
dec
sbb
and
in
sbb
adc
js
add
cmc
adc
fildll
xor
mov
test
inc
ds
jg
in
fnsave
sub
clc
sbbl
dec
push
in
pop
mov
mov
out
add
lahf
sbb
pop
int3
je
lret
ds
jbe
sub
nop
push
and
lahf
fcoml
pop
fildl
add
out
sarb
lods
push
add
jb
insl
xor
sbb
int3
pop
mov
xchg
mov
sub
jg
test
cmp
dec
lds
pop
xchg
ret
leave
leave
cs
cltd
loope
sbb
fistl
add
sahf
mov
push
aam
dec
aad
aas
push
iret
inc
pop
aam
loopne
xchg
lret
fwait
mov
xchg
inc
dec
mov
or
add
mov
cmpsb
mov
fnstenv
or
dec
pop
cltd
sub
xor
enter
fadds
pop
lds
icebp
and
popa
jne
pop
lock
pop
dec
movsl
pusha
sub
fildl
bound
push
out
ss
ja
inc
dec
dec
jge
test
and
cwtl
jecxz
insb
add
aam
aaa
shlb
dec
dec
aam
out
jnp
xor
pop
cvtpi2ps
ds
cs
sub
out
test
aam
shl
xchg
in
or
dec
scas
insb
ljmp
adc
cmp
dec
stos
test
loope
and
mov
adc
js
ret
jne
jg
cmp
lock
fcmovu
push
push
or
sbb
mov
cmpsb
fisubl
rol
pop
in
pop
mov
gs
js
pop
inc
lahf
jb
test
bound
scas
mov
push
arpl
mov
sub
adc
aad
arpl
std
jl
mov
pushf
mov
gs
sahf
sub
data16
sbb
adc
sub
push
cmpsl
into
pop
test
jo
scas
in
fildll
push
imul
leave
and
mov
sub
mov
jp
fs
cwtl
push
push
adc
mov
sbb
stos
push
dec
imul
lods
dec
push
cmp
mov
push
xchg
or
xor
loopne
movl
nop
dec
test
sarb
push
ret
jne
shll
dec
sbb
mov
das
pop
push
push
push
loopne
sarb
xchg
or
cmp
xchg
loopne
mov
pusha
fsubl
lahf
fcmovnu
lret
lods
mov
icebp
adc
rcll
shr
pop
add
push
mov
cmp
xchg
icebp
clc
repz
sahf
andl
mull
nop
cmp
stos
xchg
cmpsb
lods
adc
test
pop
pop
push
lock
stos
mov
jmp
or
lret
inc
sub
daa
in
jge
shlb
insl
mov
in
out
inc
in
fsubrs
fwait
stc
pop
sub
mov
movsb
in
mov
jp
mov
lahf
jbe
movsl
imul
adc
stc
scas
in
mov
pusha
fimuls
pop
das
mov
or
pushf
sbb
cmpsb
push
xchg
dec
stos
and
icebp
sub
mov
fwait
sub
mov
pop
ljmp
fsub
pop
fs
ljmp
fsts
mov
jl
lahf
push
inc
pop
cli
and
push
bound
in
stos
hlt
outsl
cmpsb
sahf
fistpll
inc
adc
xor
dec
mov
push
rcrb
ss
clc
xor
cmpsl
insb
pop
out
test
pop
int3
dec
imul
hlt
jo
dec
jo
testl
gs
in
imul
pusha
inc
push
or
mov
shlb
mov
xchg
xlat
in
pop
jp
lods
ljmp
dec
mov
push
stos
lds
pop
xlat
sti
in
rclb
cmc
lret
push
test
les
mov
adc
jle
jmp
scas
les
sbb
adc
push
cmpsl
out
dec
lahf
mov
inc
xchg
dec
sbb
cltd
out
xlat
sbb
cmpsb
out
xor
int3
sahf
ss
aaa
test
or
pop
je
loop
sbb
push
test
rcr
pop
mov
mov
mov
ds
or
mov
andl
cmp
pusha
jae
push
js
adc
mov
sub
inc
sbb
xor
add
hlt
fwait
cmp
add
mul
notb
mov
pop
push
imul
dec
stos
add
push
imul
or
cs
out
mov
pusha
pushf
dec
and
lcall
jne
pop
adc
roll
ds
clc
mov
and
inc
inc
cmpl
lret
stc
push
shll
pop
xor
outsl
push
inc
dec
sbb
int
dec
inc
sub
repz
sbb
add
pop
mov
mov
sub
dec
sub
repnz
adc
add
mov
cmp
cmpsb
dec
rorb
xchg
cmp
ror
fwait
addr16
mov
lret
xor
lea
repz
xchg
dec
fnstsw
sbb
les
jno
in
sub
movsl
mov
nop
cld
lahf
jmp
inc
loope
and
faddl
cmp
push
fcoms
orl
stc
jl
ss
decl
je
ljmp
ss
mov
jnp
dec
or
in
xlat
xchg
orw
mov
cli
je
mov
outsb
push
lods
mov
xchg
jns
cmpb
pop
mov
test
ret
pop
pop
mov
js
loop
in
ret
xchg
push
pushf
pop
add
push
mov
jae
push
int3
int3
adc
rcr
sbb
add
dec
push
and
enter
jne
out
js
popa
mov
stos
inc
sbb
add
fsubl
dec
pusha
scas
insb
hlt
cmpsl
fdivl
mov
loopne
out
pop
pop
ja
mov
loopne
dec
stos
mov
stc
sub
aad
mov
xor
addl
xchg
test
mov
rcl
std
inc
pop
dec
subb
js
mov
mov
mulb
push
adc
addb
leave
pushf
sub
out
mov
mov
xchg
negl
cmp
stc
fwait
pushf
or
insb
and
aaa
mov
cltd
dec
mov
gs
loop
out
mov
jmp
push
cmpsb
stos
ret
popa
jmp
imul
inc
movsb
inc
adc
sbb
inc
dec
and
leave
aas
push
sbb
shl
add
jge
cltd
arpl
dec
mov
test
push
xchg
stos
sbb
stc
cwtl
or
push
stc
test
inc
xor
mov
dec
rclb
mov
scas
fidivl
into
stos
int3
push
pop
adc
pop
and
imul
mov
jge
insl
lea
pop
add
jne
pop
jmp
fldcw
push
lret
cmpsl
frstor
popf
jbe
pop
push
cmpsb
lods
gs
sbb
insb
mov
mov
pop
lret
inc
arpl
sub
jmp
std
outsb
outsl
call
jmp
fwait
add
insb
jg
xchg
xchg
jge
lret
mov
mov
inc
cmc
outsl
fsubs
sub
xorl
push
mov
adc
pop
imulb
das
push
sarb
xchg
lret
and
imul
push
mov
add
mov
movsb
inc
daa
icebp
fstpt
pop
hlt
ret
scas
jno
stos
mov
sub
mov
jnp
mov
hlt
mov
pop
bound
xor
cli
dec
sti
push
cmp
js
xchg
mov
push
imul
cmp
mov
xchg
das
jmp
mov
les
cmc
adc
shll
jmp
std
or
ljmp
mov
popf
cmpsb
inc
aas
adc
arpl
les
xchg
enter
loop
and
ror
pop
mov
sahf
and
hlt
cmp
rcl
gs
xchg
in
mov
std
jle
push
push
call
push
ret
xchg
ja
jl
addb
int
adc
dec
inc
mov
jge
and
sbb
es
sub
outsl
and
es
dec
sti
or
inc
pop
jne
push
mov
roll
clc
or
jae
leave
cs
imul
arpl
jo
jo
addr16
lret
xlat
ret
pop
xor
jle
jo
jo
jp
push
xor
add
repz
dec
and
aam
nop
jmp
rcl
add
jne
push
testb
imul
adc
sbb
cli
loope
mov
mov
sahf
xchg
clc
das
addl
add
aad
outsb
or
js
pop
cmp
out
dec
mov
sub
sbb
cwtl
inc
mov
and
mov
jge
js
addr16
jnp
jmp
andl
nop
in
or
das
dec
xlat
add
and
xorb
icebp
add
pusha
and
adc
pushf
adc
not
xchg
popf
mov
fwait
enter
movsb
clc
dec
xchg
in
sub
cmc
ja
movsb
sub
sub
jl
pusha
int3
push
add
mov
sbb
in
leave
add
cmp
inc
jne
fistps
or
jne
pause
add
push
pop
aas
mov
mov
jbe
nop
or
pop
decb
xor
or
mov
fdivs
movb
add
adc
or
sbb
pop
or
inc
test
cmp
sbb
jnp
jnp
xchg
jmp
jl
adc
add
popf
sbb
push
cmp
xchg
pop
jne
lahf
dec
cmp
hlt
in
push
or
icebp
ret
xchg
cmp
dec
pop
mov
fistl
add
mov
into
iret
adc
jp
xchg
jecxz
lods
aad
or
xchg
sub
and
test
sbb
outsl
fs
iret
or
sbb
cmpsl
mov
adc
pusha
andl
test
loope
push
adc
sti
std
sub
mov
test
sub
mov
mov
mov
push
mov
xor
lcall
repnz
adc
adc
ja
fwait
lret
mov
xchg
clc
jle
pop
xor
outsl
pop
add
arpl
adc
clc
and
mov
mov
mov
push
fldl
push
and
inc
aas
jg
mov
ljmp
inc
pop
imul
and
rol
imul
mov
xchg
add
pop
movd
aaa
jg
std
pop
les
and
shll
ror
jmp
pop
push
insb
dec
inc
and
into
dec
mov
paddsb
imul
mov
mov
cmc
mov
fdivl
dec
sbb
lcall
scas
dec
mov
lahf
lods
inc
adc
cmp
cmp
push
and
or
mov
xor
push
jb
push
out
movsb
inc
pop
scas
ret
loopne
cld
in
mov
mov
sbb
sbb
data16
push
cwtl
in
mov
lcall
jb
sub
cmp
call
cmpsb
pop
push
add
dec
sub
aas
lret
jle
or
cs
fstpl
sbb
lahf
aad
shll
outsl
mov
mov
mov
mov
dec
mov
inc
adc
cmpsb
push
mov
rep
lret
add
mov
ljmp
jp
xor
lods
xor
lret
cmpsl
inc
push
add
and
jne
arpl
testb
or
out
mov
pushf
xchg
lods
sbb
clc
adc
push
int3
sbb
jl
ret
xchg
mov
dec
sbb
jp
clc
inc
sbb
sbb
inc
cmpsb
jle
xor
imul
push
pop
bound
sbb
jmp
mov
inc
pop
add
inc
aad
in
hlt
lods
mov
out
push
popa
les
pop
adc
fisttps
stos
xchg
je
adc
sub
add
sahf
mov
xchg
stc
mov
add
stc
clc
add
shrl
and
aas
fstpl
dec
mov
filds
adc
rcrl
loopne
shr
sub
std
xchg
adc
push
inc
rcrl
add
xor
ja
mov
lret
cld
into
pop
rcr
std
rcll
push
inc
lock
rcll
aam
ret
gs
add
push
stos
inc
xchg
xor
gs
xchg
mov
loop
mov
addb
add
fwait
lret
xchg
icebp
xlat
inc
mov
jnp
jecxz
cltd
sbb
cmp
push
mov
pop
mov
dec
test
movsl
jp
out
out
sbb
pop
les
cmp
dec
imul
jl
cmc
dec
lcall
mov
cmp
mov
add
fldcw
sti
mov
loope
popa
stos
and
mov
or
or
xchg
ja
xor
nop
fbld
jl
cmp
or
cmpsb
out
inc
bound
test
sahf
sti
adc
or
adc
push
add
inc
mov
ss
dec
cmp
cmp
lahf
sub
inc
cmp
sbb
das
pop
mov
iret
scas
mov
ret
loope
xlat
push
scas
mov
adc
out
mov
out
jns
jo
add
ficompl
bound
xlat
cmp
mov
fcoms
imul
pop
xor
and
fiadds
sbbb
mov
icebp
std
lock
test
dec
jp
inc
adc
filds
das
inc
xchg
dec
cmpl
shlb
cli
int
sbb
insl
push
lcall
das
into
loop
into
jge
loopne
fs
inc
repnz
mov
sbb
sarb
repz
inc
int3
aas
insl
or
lcall
push
cmp
dec
sahf
mov
push
add
inc
inc
jo
leave
mov
test
mov
testl
cmc
fistps
stos
in
out
inc
pop
push
lahf
jmp
jnp
test
out
sbb
sub
add
xor
jbe
std
inc
mov
xchg
bound
out
cmpsl
imulb
cltd
dec
in
inc
insl
jno
in
pop
sub
sarl
out
mov
mov
jno
lret
push
inc
fisubl
adc
mov
add
xor
negl
lods
int
adc
notl
dec
xor
sahf
popa
lds
stc
fnstsw
pop
lahf
mov
loopne
repz
inc
lock
into
add
push
addb
sub
in
mov
cmovge
dec
leave
pop
push
jmp
callw
data16
sub
mov
stos
xor
rclb
aad
sbb
or
fcomip
mov
out
jle
xchg
xor
jmp
out
cwtl
xor
fimull
mov
lods
push
pop
pop
sar
add
adc
insl
repz
add
cmp
xor
adc
test
movsl
mov
pop
mov
pop
das
call
mov
sbb
pop
aas
cmpl
cli
sahf
xor
xor
ja
or
enter
mov
clc
mov
sub
arpl
loope
push
imul
fmuls
mov
dec
cmc
sub
mov
xor
adc
jl
xor
and
ja
xchg
ljmp
xchg
dec
lock
or
scas
ror
mov
push
mov
jae
push
mov
sti
xor
pop
jg
pop
mov
jne
jge
out
xchg
popa
cmpsl
fxch
repz
adc
outsl
lcall
aas
lret
fisubl
push
ljmp
dec
add
loope
clc
xorl
das
pop
or
sbb
leave
jbe
and
push
pslld
mov
scas
scas
fisttpll
jnp
or
inc
mov
outsl
cmpsl
popf
pop
push
cmp
dec
xor
push
xor
fidivrl
and
inc
mov
addr16
repnz
cmc
in
xlat
push
nop
ret
mov
cmp
lea
mov
in
std
xchg
mov
pop
ret
test
add
std
lods
aas
push
sarb
lcall
ret
adc
jg
rcrb
mov
adc
mov
push
mov
mov
mov
and
add
cmpsl
inc
aaa
cmp
or
scas
stc
fisubs
scas
std
jae
je
sub
imul
cltd
xor
gs
stos
pop
aaa
dec
out
jo
enter
mov
and
mov
scas
sbb
xor
bound
jae
ret
cld
adc
or
fstps
daa
outsl
mul
or
ja
add
push
loop
adc
cwtl
push
call
add
add
fistps
es
sbb
clc
iret
cltd
xchg
ficompl
fldl
ljmp
and
nop
loopne
mov
pop
or
mov
hlt
dec
scas
jge
mov
push
icebp
test
mov
cmp
xor
lret
int3
push
int
add
mov
push
test
cmp
mov
mov
jp
push
pusha
add
hlt
mov
popa
lea
pop
dec
sbb
imul
repnz
pop
or
cmpsl
lcall
cmp
xor
lea
jbe
jmp
mov
or
inc
sub
aaa
add
and
jno
out
dec
outsl
jae
rcrl
inc
sub
mov
jmp
hlt
push
jne
jnp
out
dec
std
mov
mov
lahf
adc
jno
andb
in
mov
mov
xor
into
leave
mov
sub
mov
in
add
negb
ret
cmpl
rcrb
clc
in
lods
aaa
dec
mov
xor
cmp
adc
sub
aad
test
mov
rol
xchg
mov
mov
jae
jno
cwtl
and
mov
cmp
lcall
mov
push
dec
xor
pop
daa
icebp
mov
mov
or
push
cwtl
jcxz
rcrl
repnz
push
aam
addr16
jmp
lods
aaa
ja
or
ja
pop
or
mov
ds
adc
jns
sub
pop
mov
cld
push
jnp
xorl
fsubl
or
pop
sub
cmp
dec
and
lock
cmp
insb
or
sbb
roll
xchg
cwtl
dec
push
pop
push
fcompl
cmc
loopne
fildll
cmpsl
sti
xchg
dec
outsb
jmp
test
mov
xor
xchg
lret
iret
fistps
inc
inc
add
xlat
pushf
adc
sub
pusha
jmp
jecxz
cmpsl
mov
shrl
xlat
mov
testl
xchg
adc
or
stos
les
loope
push
lcall
inc
jnp
sub
xchg
lods
cmpsb
xor
out
sti
stc
and
ds
pop
xchg
int3
pushf
jno
cld
jno
movsb
pop
dec
mov
es
pop
movsb
sbb
and
or
fs
lret
jg
mov
je
testb
aad
or
mov
and
bound
xchg
dec
sbb
cmc
repnz
mov
add
mov
jmp
out
loop
jge
loop
mov
fisubs
jnp
pop
in
mov
movsl
fldl
aas
xchg
rcrb
mov
and
mov
ror
js
ret
sar
enter
fs
mov
ja
flds
push
jle
leave
jnp
or
xchg
ds
leave
add
or
add
ss
adc
sub
push
loope
fs
push
xor
push
cmp
cmp
jns
xchg
jbe
repz
cli
xchg
cmc
jg
sub
pop
jp
pop
mov
rcll
push
fsubrs
insl
push
add
sub
insl
mov
xlat
add
dec
and
jl
scas
movsl
fwait
add
popf
adc
jge
sub
mov
mov
adc
jp
fistpll
in
mov
scas
xchg
jno
and
nop
testl
fstpt
adc
sbb
cmp
outsb
in
push
in
dec
fmulp
imull
xchg
dec
fstpt
mov
in
mov
ret
into
sub
sub
cs
mov
pusha
std
lcall
in
arpl
mov
rclb
push
aam
stc
sub
push
xchg
ror
rcr
mov
sub
rclb
sbb
idivl
adc
stos
fwait
mov
jmp
lods
cli
dec
cmp
cmp
retw
push
or
jo
jecxz
repz
jb
mov
lcall
jg
int
xchg
ret
cmpsl
xchg
test
or
lea
popa
movl
pop
xorb
add
popf
stc
mov
sub
mov
mov
jns
push
xor
xor
cmp
sahf
out
sbb
and
and
xor
roll
pusha
inc
mov
sub
nop
mov
stos
add
jae
add
mov
push
push
jno
mov
pop
jmp
and
aas
popa
jnp
aas
inc
xchg
insb
insl
test
out
dec
stc
jne
aas
sbb
jle
and
and
dec
cwtl
mov
or
sbb
inc
mov
add
or
mov
aad
dec
outsb
xchg
sarb
lcall
or
incl
daa
xchg
f2xm1
mov
adc
cmp
cmpb
clc
mov
lock
mov
push
cmp
mov
cmp
es
cmpsb
imul
out
pusha
pop
leave
xor
xlat
in
fnsave
xchg
jb
xchg
loop
lahf
negl
dec
jae
scas
push
xor
jno
aaa
jle
cmpsl
add
xor
nop
adc
jecxz
xor
out
pop
outsb
inc
xchg
xor
int
pop
cmp
mov
sahf
mov
mov
nop
mov
or
xchg
loop
push
xor
mov
add
push
inc
shlb
mov
test
lret
in
push
lret
sahf
and
fldt
cmp
jecxz
inc
xor
shrl
jne
mov
sub
out
imul
into
inc
mull
fisubl
cmc
lahf
or
cmp
outsl
ret
jp
dec
outsb
xchg
mov
lret
jmp
jmp
shrl
std
call
addr16
icebp
in
mov
pop
fildl
outsb
test
sbbl
sbb
daa
lret
xchg
mov
dec
aad
nop
add
add
pop
es
fisubs
and
gs
scas
in
jae
cli
jmp
pop
mov
pop
and
je
stos
xchg
mov
pop
jbe
xor
loopne
rclb
jg
sub
and
adc
ljmp
daa
daa
push
pop
push
jl
ja
mov
cmp
xor
dec
adc
mov
push
and
rcll
lock
mov
in
fs
cwtl
pusha
sti
int
movsl
jl
mov
push
bnd
mov
jle
mov
xchg
leave
mov
xor
pushf
lcall
sub
xor
jg
mov
dec
inc
in
mov
lods
cmpsl
test
out
xchg
fwait
adc
push
adc
aaa
jge
cmp
pop
inc
push
mov
fmull
cld
imul
in
or
push
ja
xor
and
adc
pusha
movl
add
test
sbb
sbb
pop
adc
dec
icebp
sbb
xor
dec
iret
addr16
test
or
cmp
fstpt
cwtl
jne
imulb
aas
popa
lea
fnsave
pop
cmp
pop
cwtl
rclb
dec
fs
mov
dec
mov
jecxz
sbbl
adc
mul
sub
mov
cs
push
dec
aad
iret
and
adc
insl
push
icebp
into
adc
stos
imul
mov
push
jo
push
sarl
xlat
jnp
jnp
fdivrl
push
xchg
int3
sbb
sbb
mov
jge
testb
sub
in
test
fs
repnz
mov
out
rcl
adc
iret
pop
cli
jo
mov
lret
cmc
and
pop
cmpsb
enter
xchg
pusha
mov
cmp
push
dec
xchg
xchg
or
rolb
iret
ds
lea
shrb
push
push
ljmp
mov
and
stc
rorb
dec
or
xchg
jne
hlt
jg
jb
add
popf
test
ret
pop
sti
mov
shll
mov
imul
inc
cmp
cmp
mov
into
test
jns
adc
jge
add
jl,pt
jnp
dec
popl
es
int3
sbb
sti
mov
js
lcall
js
std
pusha
cmp
push
jae
in
mov
loopne
mull
in
add
push
movsl
mov
stos
mov
sahf
fs
xchg
ret
and
out
xchg
call
and
inc
push
rorb
cmp
mov
int3
inc
pusha
out
dec
fistpll
es
loopne
movsb
cmp
dec
adc
and
bound
sub
jmp
or
adc
and
add
and
mov
loopne
clc
das
lods
xchg
data16
push
xchg
repz
ds
sarl
mov
enter
adc
sti
add
call
mov
add
dec
and
rcl
cwtl
jg
add
pusha
std
addr16
xor
stc
icebp
sahf
repz
cs
mov
inc
cld
xor
jp
cmp
scas
jmp
add
pushf
xor
inc
in
or
cmp
sub
mov
sbb
je
mov
std
inc
pop
fnsave
mov
je
in
lods
mov
adc
adc
jnp
mov
ljmp
inc
pop
cmp
push
sub
out
xchg
xchg
push
sub
sub
inc
shll
orb
in
movl
jno
push
sbb
call
cmp
cmp
ja
loope
or
xor
daa
sbb
loope
testb
insl
mov
mov
jb
mov
fsubp
mov
mov
loop
dec
add
or
adc
sbb
iret
jp
lcall
xchg
mov
int
pushf
imul
in
scas
add
and
fmuls
sbb
add
dec
nop
mov
mov
nop
and
xor
adc
int
in
mov
rorl
inc
sbb
imul
mov
inc
sub
inc
fsubrl
cwtl
pop
push
or
sub
mov
fcompl
adc
nop
or
daa
push
adcb
outsl
lret
dec
les
cmp
xor
aam
into
popa
push
pop
mov
dec
int3
hlt
pop
in
mov
mov
lret
iret
push
sahf
adc
inc
pop
jno
imul
jne
dec
fwait
invd
cmc
fsubs
cwtl
pop
leave
xorl
cwtl
dec
jno
xchg
add
xchg
pop
xchg
jg
push
fsts
arpl
mov
ljmp
add
hlt
inc
loopne
aad
mov
mov
sbb
jl
ds
fldt
scas
cltd
int
pop
pop
xchg
xchg
and
movsl
push
pop
inc
pusha
xchg
add
dec
push
mov
int3
jae
fdivs
push
outsb
and
mov
enter
mov
inc
fs
cmp
loope
cs
lea
ret
jge
aad
leave
adc
scas
sahf
pop
sbb
lret
adc
test
sbb
and
add
fwait
inc
xchg
shlb
mov
sub
pop
test
iret
rorb
jle
pop
mov
dec
pop
jmp
lahf
outsb
out
mov
add
stos
mov
shll
gs
inc
jp
or
add
cwtl
int
xchg
mov
imul
mov
or
xor
push
adc
rcrl
shrb
jno
mov
push
filds
add
into
mov
ljmp
fisubrl
je
aaa
mov
xchg
xchg
push
inc
mov
lods
out
sub
mov
jle
cmp
and
popf
cmpsb
push
push
pop
inc
jne
sub
or
push
scas
mov
lret
daa
repz
scas
ljmp
in
stos
cs
pop
fidivrs
or
mov
lret
je
push
xchg
mov
sub
xchg
and
sub
cltd
rdpmc
ret
test
testb
lcall
jl
mov
push
inc
lret
idivl
ljmp
ja
lea
orb
push
loope
js
mov
pop
shrb
dec
add
xlat
xchg
inc
add
xchg
xor
lock
popa
inc
push
mov
xor
movsl
gs
add
lock
sub
ss
inc
fldt
mov
lret
or
scas
imul
inc
jmp
repz
pop
sub
insl
xchg
mov
sbb
xchg
mov
rclb
lock
insl
pop
pop
stos
pop
shrb
pop
mov
testl
out
xchg
jbe
push
sbb
mov
mov
jcxz
lock
test
dec
addr16
in
push
pop
xor
scas
mov
loope
clc
lea
scas
pop
mov
test
int3
jl
leave
movsb
mov
std
mov
ret
in
fnstsw
sub
xchg
jp
fnstcw
pop
sbb
cmp
dec
sbb
cmp
xor
push
shlb
lahf
cmpsb
jg
xchg
adc
mov
xor
shll
out
dec
rclb
sahf
ja
popa
jbe
iret
cli
movsl
add
sub
inc
fsubrp
pop
js
mov
and
sub
push
push
les
lds
push
xchg
jl
add
popa
or
repnz
arpl
adc
loop
sbb
out
and
fdivrs
add
les
stos
push
repz
xchg
fstps
scas
mov
mov
push
ja
xor
lods
mov
pop
xor
cltd
test
movsb
out
cltd
sarl
push
mov
push
lds
jl
xchg
test
ret
xor
cltd
mov
mov
scas
mov
idivb
sub
sahf
pop
rorl
xchg
push
sub
push
push
enter
inc
rcl
push
pop
and
push
lahf
xchg
or
mov
jp
pop
mov
mov
pusha
or
ds
fdivrs
add
data16
repnz
jge
cmpsb
out
sarl
xchg
and
fidivrl
test
mov
adc
cmpsb
add
inc
and
and
out
inc
enter
lret
ljmp
jae
int3
ret
pusha
xor
adc
repz
cmp
inc
pop
incl
ret
outsb
xchg
inc
pop
mov
das
cmp
in
into
data16
ja
fdivrl
jmp
call
inc
insl
fstps
xor
hlt
mov
lahf
jno
clc
fcom
and
jl
adc
mov
mov
repz
lea
imul
mov
xor
pop
xlat
mov
filds
mov
or
sbb
movl
and
inc
xlat
adc
insl
pusha
and
leave
les
lea
dec
inc
in
add
sub
mov
arpl
cmp
or
sub
ss
inc
scas
lcall
push
test
dec
add
adc
xlat
sbb
sarl
sub
mov
rolb
popf
cmp
pop
in
mov
pop
inc
adc
clc
adc
lret
cmp
fdivrl
mov
and
fwait
scas
mov
push
xchg
sbb
mov
test
jp
jb
xchg
lret
cs
popa
xor
lahf
mov
and
nop
inc
jg
xor
lods
jno
pop
cmc
add
xchg
mov
push
cmp
aam
test
mov
push
notb
xor
mov
sub
push
jmp
jl
outsl
mov
ret
fs
sub
dec
mov
jmp
cmp
xchg
orb
test
hlt
subl
not
stc
shl
test
push
lret
imul
cmp
neg
push
testl
mov
add
fiaddl
sbb
in
popf
sub
lahf
lret
pop
xor
mov
dec
repz
repnz
stos
loopne
pop
daa
xor
and
and
fs
cmp
insb
mov
mov
out
and
das
sbb
push
sub
stc
cmc
dec
repnz
or
sbb
pop
outsl
std
mulb
out
push
jae
out
dec
add
mov
jl
cwtl
in
xchg
push
testl
stos
pop
mov
movsl
fildll
insl
in
xor
mov
popa
dec
daa
cwtl
or
sub
inc
lods
pop
fdivrl
jle
inc
and
shrl
adc
lods
addb
shll
jno
mov
test
jg,pt
inc
adc
dec
cmpsb
scas
jg
push
or
push
scas
and
shlb
jmp
xchg
adc
push
or
loopne
dec
notl
mov
sbb
test
jae
shlb
dec
cld
add
je
pushf
je
dec
scas
in
in
xor
nop
in
sub
ds
mov
xor
test
fs
fs
idivb
cmp
pop
outsl
xor
imul
js
popa
jge
roll
stos
xor
out
out
sub
popa
test
je
dec
ja
mov
js
cltd
adc
adc
int3
in
nopl
lcall
bnd
xchg
or
pop
xchg
imul
test
add
lret
sbb
xor
pop
sub
in
out
and
xor
cwtl
fstps
sbb
cs
push
pop
sbb
sub
push
stc
rorb
mov
add
xor
and
mov
rcrb
ss
adc
nop
add
idiv
or
fidivrl
stos
adc
cld
dec
sbb
and
mov
pop
push
inc
into
adc
lods
xor
aam
into
mov
jg
nop
imul
mov
dec
mov
inc
pop
sub
inc
xchg
dec
push
ret
mov
fildll
lds
lcall
cmpsb
fists
jae
enter
enter
xchg
mov
sahf
das
popf
pop
aas
pop
sub
inc
adc
xlat
repnz
sbb
jg
enter
stos
iret
ficoms
push
jo
jo
stos
or
and
jbe
std
or
lods
sub
xchg
fs
sub
scas
sub
sbb
sub
fs
add
cmpsl
dec
xlat
fstps
sub
ljmp
and
ret
movsb
xchg
jge
jp
out
mov
pushf
sahf
pop
fists
fimull
lahf
add
fldl
popf
inc
cwtl
dec
mov
add
into
jo
xchg
lock
adc
inc
cmpsb
repnz
imull
sbb
and
mov
out
pusha
call
outsb
out
dec
mov
sbb
jbe
lret
rol
cmp
jbe
in
mov
jo
lret
fsts
mov
push
xor
sub
out
adc
fmulp
gs
lds
scas
mov
xchg
test
mov
xchg
and
xchg
rorl
in
jg
int3
out
stc
das
pop
aam
cmpsl
lahf
push
add
out
pop
lea
bnd
pop
imulb
movsb
jne
inc
pushf
test
xchg
shll
cltd
xchg
xor
int
pop
lahf
bound
mov
mov
push
lods
imul
jne
sub
repz
sub
ss
data16
aad
lfs
xchg
pop
std
add
imul
jp
mov
pop
or
scas
test
mov
adc
std
dec
sbb
add
mov
in
imul
lcall
xor
fistpl
push
leave
inc
fs
testl
add
mov
lods
cmc
icebp
mov
cmp
mov
xor
sub
pop
xchg
add
ret
xchg
sub
in
sbb
out
filds
xor
ret
push
push
xor
mov
push
aaa
in
push
outsl
inc
xor
les
and
arpl
fisubs
ret
jnp
push
adc
pop
sti
adc
orl
pop
pop
adc
xchg
jg
out
arpl
pop
sub
pop
std
mov
lcallw
jecxz
daa
push
add
lods
mov
pop
inc
sub
add
pushf
inc
adc
dec
mov
sbb
lock
xchg
inc
call
rcrb
cmp
cmp
dec
movsb
out
and
stos
sbb
filds
sbb
addr16
divb
clc
add
insb
mov
add
pop
lods
sbb
xor
je
dec
adc
jae
sbb
xchg
mov
rclb
sub
mov
sub
rol
nop
shl
out
in
pushl
es
cli
lods
push
loop
loope
xor
cmp
sub
jmp
dec
les
xchg
inc
in
push
ss
push
lods
insb
sub
push
mov
mov
sub
pop
jmp
repz
ja
imul
inc
lods
jl
xchg
xor
sti
mov
adc
or
push
push
test
mov
mov
pop
loope
jp
dec
add
xchg
insb
jmp
rol
mov
xchg
and
test
stc
inc
cmp
cld
lods
cltd
clc
inc
sbb
xchg
and
or
push
push
cltd
dec
jmp
pop
mov
adc
lret
push
adc
fisubrs
push
or
sub
jae
sub
out
pop
int3
jae
sub
lcall
jle
jne
out
gs
in
xchg
sbb
adc
stc
add
lahf
adcl
adc
ss
stos
in
pop
cmp
jle
jns
rolb
insb
insl
mov
loope
and
fsubrl
sub
fcoml
lret
cmp
scas
lock
loopne
addr16
lods
adc
sub
inc
out
cwtl
pop
sub
mov
out
jno
dec
sbb
aad
cwtl
scas
imul
cmp
jns
sbb
xchg
movsl
mov
popf
mov
fwait
ret
push
push
les
int3
jmp
jp
movsl
xor
jnp
lcall
negl
mov
inc
fptan
stos
sbb
in
push
shrl
mov
push
mov
movsl
xor
xchg
and
andb
mov
sub
xchg
inc
addr16
loope
xor
dec
adc
fstpt
push
push
cmp
pop
mov
jle
loop
repz
mov
ss
shlb
cli
popa
jbe
dec
mov
addb
push
lods
and
lods
rcrb
into
push
shll
jo
gs
imul
pusha
cltd
insb
mov
jo
bound
cltd
lods
imul
imul
cmp
xchg
push
xor
dec
inc
push
fcomip
jmp
dec
popa
xor
sti
popf
fnstsw
mov
cmp
push
xchg
mov
repnz
pushf
mov
ds
pop
icebp
cmp
ljmp
push
mov
cmp
int
outsl
and
cwtl
xchg
pop
adc
sbb
movsb
into
jnp
jge
adc
mov
in
mov
das
xor
insl
push
sbb
enter
sub
movsl
xchg
jno
and
mov
lret
out
ret
dec
insb
xchg
in
call
sbb
icebp
lret
inc
xor
ffreep
or
inc
stc
cli
dec
inc
clc
fisttpl
inc
jne
sub
xchg
scas
xchg
stos
push
or
into
popa
xchg
push
xchg
sbb
imul
fnstcw
xchg
xchg
rolb
cmp
push
xor
sub
lock
jb
xor
mov
xchg
sarb
stos
inc
mov
icebp
mov
xor
cs
mov
and
cmp
jno
inc
xchg
push
jl
mov
add
call
inc
popa
mov
jp
fadds
add
test
and
imul
inc
dec
jmp
and
pop
popf
add
xchg
xor
pop
out
fcoml
test
pop
leave
ret
loop
sub
mov
mov
dec
sbb
ret
push
lods
pand
enter
cltd
lods
cmpsl
enter
xchg
enter
mov
mov
inc
dec
mov
pushf
fiadds
inc
push
xor
lret
pop
cmp
insl
jo
mov
lds
popf
mov
les
pushf
or
out
ficoms
xchg
and
jnp
std
sbb
jne
jmp
test
push
pusha
sysenter
mov
mov
add
hlt
cmp
pop
pop
mov
add
and
je
xlat
out
inc
cmc
xchg
aam
out
cmc
xchg
hlt
push
mov
fwait
xchg
pop
push
sub
mov
out
gs
pop
sbb
out
mov
jo
test
inc
mov
cmp
out
shlb
xor
repz
mov
out
loopne
out
mov
cmp
ret
dec
inc
sahf
lea
mov
bound
jecxz
jns
xchg
js
push
stc
or
mov
cld
sub
sbb
int3
dec
push
mov
inc
out
jo
add
fnstcw
xchg
pop
mov
addr16
pushf
out
clc
mov
les
add
rcrl
dec
testl
std
jg
scas
scas
jmp
nopl
cmc
fwait
test
jo
in
int3
xor
mov
mov
add
into
or
in
out
mov
adc
adc
test
lock
aam
mov
push
mov
lods
pop
iret
test
stc
jno
cmp
xchg
js
inc
outsb
sti
push
inc
xor
leave
stos
ficomps
mov
ret
cltd
cmp
adc
cmpsl
sub
popa
jno
outsb
repnz
fidivl
fidivl
cltd
ret
push
push
das
add
in
movsl
addl
dec
insl
mov
cmp
rclb
mov
mov
gs
in
gs
push
xchg
scas
inc
dec
cmp
adc
pop
bound
aad
mov
mov
out
mov
pop
dec
repnz
ja
adc
inc
stc
mov
xchg
mov
mov
insl
sub
inc
xorl
xchg
mov
cmc
add
mov
and
test
scas
je
dec
mov
xchg
sub
xor
dec
fists
js
les
fs
in
test
inc
pop
movsl
add
testb
sub
lea
xor
testl
loop
movsb
aaa
xlat
jnp
adc
pusha
into
mov
mov
test
icebp
xchg
cmp
push
add
fcoms
pop
rcll
movl
push
jo
inc
cmp
mov
mov
out
push
mov
push
lods
inc
mov
test
jae
push
mov
rcll
ret
std
movsl
lret
aam
loopne
out
sbb
das
sahf
gs
xchg
adc
icebp
fdivr
jo
inc
adc
push
mov
or
push
rcll
sbb
repz
xchg
mov
sti
sub
xchg
or
jo
and
xor
jg
in
test
sbb
sar
mov
push
xchg
sti
loop
scas
sbb
jmp
pop
lods
xor
mov
minps
jp
mov
les
loop
in
cmc
mov
cmp
ret
mov
jmp
inc
mov
xor
rcl
sbb
add
lahf
orl
xor
adc
mov
pop
mov
or
mov
push
add
or
mov
sub
mov
lds
lods
cld
leave
loop
mov
fwait
dec
add
fadds
cmp
repz
jge
lcall
sub
mov
inc
and
jne
sub
lock
add
dec
mov
ret
inc
fbld
lods
push
pop
mov
jp
outsl
rcll
push
enter
xchg
loope
les
add
adc
js
xchg
jmp
shll
fwait
jp
inc
ds
adc
ficoml
add
push
stos
sub
int
leave
scas
cmp
jns
mov
test
adc
push
enter
pop
and
mov
out
pop
dec
mov
mov
bound
fiadds
js
dec
jmp
stos
mov
dec
mov
aaa
stc
mov
pop
mov
push
ljmp
fs
stos
mov
fbstp
xchg
or
fs
push
cmpsl
push
add
lock
ret
cltd
xor
push
sbb
shl
xchg
insb
data16
iret
mov
jp
std
adc
subl
rorb
adc
pop
or
sti
aas
mov
and
repnz
xor
xor
cmp
pop
mov
mov
push
jo
out
push
cmp
fisubs
cs
mov
mov
mov
add
and
pop
sub
dec
insb
daa
stos
mov
mov
fcomps
scas
das
sub
sbb
xchg
sbb
data16
mov
neg
out
int3
ret
add
jns
cmpl
popf
fs
pop
popa
and
cmp
adc
int3
inc
jb
and
mov
jo
add
addr16
dec
mov
rcr
fildll
pusha
dec
mov
cltd
pop
add
jae
xor
jne
lcall
jecxz
add
je
jecxz
loop
xor
mov
rol
int
decl
pop
mov
lock
ret
push
outsb
push
pop
lcall
sbb
pop
xor
push
jno
jp
shr
mov
cmp
sahf
or
sbb
push
push
mov
decb
jg
int
fdivrl
xchg
xchg
adc
inc
icebp
mov
jo
dec
cmpsb
sbb
jnp
out
pop
jne
inc
push
cmpsl
or
loope
pop
mov
ret
cmpsl
xchg
sub
mov
lods
rcll
insl
jne
sub
repz
insl
jl
icebp
out
shlb
lods
lea
xchg
mov
cld
jns
sub
dec
jae
mov
mov
adc
mov
xor
je
out
jbe
jp
lret
mov
jmp
movsl
sbb
add
in
add
mov
arpl
mov
out
jl
adc
movsb
pusha
aam
jecxz
jecxz
mov
cmp
push
loopne
xchg
xchg
in
ljmp
icebp
das
es
or
daa
out
mov
sbb
and
adc
mov
mov
mov
mov
dec
jle
xor
fwait
xchg
das
mov
mov
shl
pop
stos
daa
imul
cltd
or
dec
mov
sub
pushf
mov
jne
imul
mov
cmc
popa
mov
out
data16
cmp
call
xor
sbb
xchg
movsl
outsb
in
call
loope
jnp
in
cli
inc
jp
inc
orb
push
cld
xchg
jp
clc
bswap
sub
stos
mov
sahf
lea
mov
mov
and
sbb
cs
and
movsl
in
out
bound
inc
jne
add
cmp
jecxz
or
call
repz
icebp
push
and
xchg
sub
sbbb
and
hlt
cmp
inc
std
xchg
sbb
enter
inc
and
fidivrl
in
push
movsl
push
inc
scas
mov
mov
fildl
mov
add
inc
std
cmp
lods
insb
push
and
scas
out
cmp
mov
sbb
aaa
test
xchg
call
enter
inc
xor
mov
stos
mov
jge,pn
add
pop
ss
aas
pop
jne
les
imul
mov
out
push
xchg
cs
adc
mov
adc
xlat
lret
cmc
test
sub
hlt
arpl
cmp
inc
in
or
data16
shlb
mov
decb
xchg
xchg
jmp
adc
aas
arpl
andb
mov
pop
mov
nop
ljmp
cld
nop
mov
ds
mov
lcall
sbb
push
push
sbb
cli
push
or
mov
mov
add
cs
cbtw
push
cmp
mov
in
jbe
repnz
cmp
xchg
jnp
mov
adc
mov
into
xchg
jge
sahf
xor
mov
adc
pop
mov
sti
lock
mov
cs
xorb
or
out
mov
stc
lcall
dec
xor
dec
in
cmpsb
xchg
or
lret
add
mov
adc
ds
cmp
adc
sahf
or
push
mov
cmp
lods
insl
xor
fisubs
cwtl
jl
push
js
add
mov
sbb
mov
shr
ja
je
jecxz
add
inc
dec
xor
insl
jle
pop
inc
pop
sub
add
push
adc
mov
shr
cs
sub
adc
sbb
out
mov
aam
dec
push
mov
dec
mov
and
adc
lret
lret
jno
sub
lds
xchg
mov
sub
popa
ret
push
sbb
jle
ds
xchg
orl
pop
adc
enter
fs
mov
pop
mov
sbb
mov
push
push
sbb
lock
shr
repz
sub
xchg
add
jg
sahf
fildll
popf
mov
lret
repnz
adc
lods
and
push
sarl
cmpsl
xchg
jmp
arpl
hlt
inc
and
scas
fsubs
stos
fcmovnu
and
sbb
cmp
loopne
or
xchg
loope
loop
cmpsb
loop
or
sbb
mov
repnz
and
push
jbe
xor
adc
icebp
add
xorb
lahf
or
insb
cwtl
and
scas
test
gs
sti
jno
pusha
sub
mov
popf
imul
mov
int
test
cmp
out
mov
mov
andb
mov
inc
mov
negb
jne
pusha
adc
ret
pop
mov
push
or
mov
cmpsb
aam
xchg
call
jb
and
ljmp
and
imul
fildl
inc
sub
xlat
cltd
mov
repz
mov
cmp
fnsave
popa
jnp
lahf
pop
dec
and
inc
daa
push
syscall
mull
in
pop
add
aas
cmp
dec
jnp
mov
sub
add
pop
or
shr
test
xchg
adc
xchg
inc
inc
mov
sub
push
and
scas
or
insl
inc
inc
push
aas
sub
mov
xchg
or
pop
das
dec
mov
in
and
enter
mov
in
lods
xchg
data16
jp
jnp
fldcw
mov
imul
mov
pop
adc
xlat
sub
pop
popa
pop
loope
and
mov
dec
push
mov
push
test
movsb
aad
pop
mov
fdivr
cli
ja
sbb
iret
jge
test
adc
std
sub
and
popa
test
adc
sbb
test
mov
jge
push
stos
lods
pop
mov
aam
pop
mov
lods
cld
iret
dec
gs
cli
sbb
add
je
adc
sahf
jmp
or
add
xor
out
lret
fs
movsl
stos
and
sti
lea
out
xor
jns
mov
mov
enter
mov
mov
loopne
jne
dec
jb
adc
out
jg
loopne
inc
ljmp
push
rclb
fcomip
inc
cmp
jge
push
bnd
nop
nop
sahf
jbe
mov
push
push
jmp
lods
push
add
cmp
push
inc
jg
push
stos
jnp
mov
and
mov
sar
icebp
pop
cltd
les
aas
mov
sarb
add
ljmp
cwtl
jl
cmp
pop
jno
mov
inc
push
popf
sub
sub
or
mov
dec
dec
jne
fsubl
decl
sub
or
inc
sahf
xlat
jecxz
fwait
inc
loop
mov
xchg
adc
repz
gs
sbb
out
inc
shlb
pusha
mov
pop
or
jno
lods
push
icebp
fcomp
adc
or
pushf
mov
push
aad
inc
fmull
xchg
adc
fisttpll
ret
out
lock
pop
dec
mov
cmc
sub
movsb
cmc
icebp
inc
shlb
dec
mov
stc
xchg
insb
sub
jl
fidivrl
sbb
mov
out
adc
stos
mov
adc
ret
jo
cli
mov
inc
jae
std
fucompp
imul
push
ljmp
fwait
addr16
iret
mov
lret
mov
shl
mov
inc
popa
pop
repnz
repnz
mov
dec
mov
fldz
xchg
cli
rorl
data16
ljmp
add
inc
sti
push
mov
aaa
sub
inc
and
or
jge
ljmp
rolb
and
push
sub
or
dec
xchg
daa
cmp
loopne
nop
adc
in
iret
lcall
inc
jae
mov
cmp
mov
jnp
fimuls
add
out
jne
mov
push
out
or
out
roll
aas
mov
addr16
mov
pop
daa
or
cmpsb
cmp
clc
imul
lcall
das
adc
cmpsl
jo
leave
lcall
dec
lock
adc
cld
and
fiaddl
sbb
sub
hlt
arpl
sbb
jmp
hlt
inc
push
fwait
push
pop
push
sub
in
insb
shll
iret
mov
fsubl
loopne
and
fnsave
sub
mov
and
and
xor
sbb
in
xchg
or
pushf
mov
sbb
iret
inc
mov
repz
or
ror
xor
faddp
xor
mov
gs
imul
cmpsb
ja
cld
mov
decl
dec
lock
lahf
sbb
loopne
xor
out
popf
test
jbe
pop
cmp
xor
cmc
adc
fldt
adc
push
in
repz
add
inc
imul
std
dec
jge
lahf
sub
push
ret
lahf
sub
dec
ds
out
arpl
mov
cmc
push
add
fadds
insb
jp
mov
je
push
pop
mov
cmpsl
adc
popa
jb
xchg
pop
mov
cmp
outsl
loop
mov
test
xor
pop
cli
cmpsb
insb
mov
xchg
xor
outsb
cmp
fisubs
adc
and
lock
loop
sbb
xor
pop
adc
out
addl
shll
jb
sbb
xchg
xchg
and
or
or
out
gs
inc
add
jne
pop
jg
jle
leave
xor
in
mov
repnz
fdivs
hlt
sub
sar
in
stos
int3
cmc
aam
cwtl
jle
sub
adc
mov
push
push
cmp
sbb
and
call
rcrb
and
scas
lahf
dec
mov
outsl
or
lret
jl
cmp
jg
xchg
ss
in
pop
inc
jae
jns
jp
shll
inc
fidivrl
adc
adc
mov
outsb
pop
pop
icebp
jns
add
ret
cmpsb
movsb
pop
pop
or
mov
push
mov
imul
pushf
lcall
pop
int3
fistpl
xor
mov
fdivl
xor
cmp
mov
adc
pop
cmpl
or
leave
cmp
ret
and
pop
cmp
imul
or
mov
lahf
mov
dec
sbb
pop
dec
xchg
in
mov
adc
sbb
sub
pop
push
data16
pushl
imulb
jp
dec
ja
sbb
insb
dec
inc
test
jnp
mov
push
adc
and
adc
push
mov
or
mov
adc
pop
adc
in
sarl
mov
jle
popf
cwtl
xor
psrld
sub
cmp
push
out
sub
ss
data16
or
lods
bound
inc
ret
push
imul
push
repz
loopne
and
inc
cmp
adc
into
imul
and
mov
cmp
jecxz
out
hlt
mov
les
xchg
xor
popf
ficoms
aaa
dec
mov
lcall
cmp
rolb
loope
mov
pop
cmpsb
int
add
pop
shrb
xor
int
hlt
add
xor
push
movsb
push
int3
mov
and
repnz
adc
cmp
pusha
mov
add
jo
sbb
mov
mov
jle
lds
dec
xchg
pop
jb
pop
stc
insl
mov
mov
xor
pop
adc
stos
xchg
mov
fsubrp
push
pop
mov
mov
gs
outsb
cmp
inc
cmp
orl
mov
fstpt
sqrtps
pop
push
mov
xchg
jne
dec
cltd
hlt
jb
fmul
mov
mov
or
and
les
mov
in
cmp
ljmp
pop
dec
adc
cmp
ret
cmpsb
lock
jg
ljmp
fiadds
cmp
xchg
loope
aas
or
lcall
sbb
push
repnz
cwtl
mull
mov
aaa
jecxz
lcall
pop
mov
cmp
pusha
sbb
sub
cld
cmp
sarb
fnsave
dec
in
nop
pusha
je
inc
adc
cmp
movsl
dec
push
pop
mov
stos
inc
or
cmp
pop
push
popa
cmp
les
jp
psubusb
pop
jmp
movsl
pop
jl
enter
cli
test
cmp
cltd
popf
ret
xor
or
sbbl
add
mov
jo
xor
pushf
push
mov
insb
dec
mov
push
scas
dec
call
dec
movsb
out
ja
lods
popf
xor
sbb
adc
push
xchg
call
ret
mov
mov
sub
in
mov
push
iret
ret
push
jae
mov
and
mov
mov
cmp
sbb
sub
fnsave
test
int
fiadds
mov
shll
inc
ret
pop
adc
int
sbbl
xor
ljmp
int
mov
pop
mov
dec
imul
xor
mov
ja
lahf
int3
decb
cld
pop
ret
out
sbb
cmp
cwtl
popf
ficoms
aaa
push
leave
lods
and
test
gs
push
lods
out
je
scas
imul
ss
dec
fbstp
mov
hlt
adc
push
pinsrw
repnz
add
mov
add
aam
add
movsl
push
sbb
popa
xorl
mov
rorb
mov
fs
sbb
mov
add
ficoms
js
mov
int3
mov
dec
outsl
or
mov
and
or
mov
xchg
cmp
rol
xchg
out
icebp
push
mov
loopne
jno
dec
jno
jmp
and
sub
and
mov
mov
xchg
push
dec
ljmp
movsl
mov
mov
and
mov
cmp
push
insb
cmp
xchg
cmp
aam
cmp
mov
or
in
xchg
or
adc
push
adc
jbe
push
insb
mov
inc
jnp
sub
shrl
xor
punpcklwd
sub
lret
out
mov
inc
jne
pop
mov
xor
add
mull
inc
inc
adc
add
rcrb
sub
jo
bnd
mov
insb
push
adc
cmp
cmpsb
gs
pop
sbb
sahf
sarl
rorl
and
fldcw
jl
add
jbe
push
or
and
std
jp
lods
push
or
hlt
and
mov
ja
rcr
sub
or
inc
sub
stc
iret
or
nop
les
adc
pop
js
pop
inc
cli
sbbb
xor
ds
cmpb
repnz
lock
call
and
addb
rclb
and
pushf
dec
mov
out
xchg
xor
inc
jge
jmp
xor
sti
mov
daa
pusha
dec
mov
xadd
pop
sbb
stos
clc
push
movsb
mov
and
bnd
lea
sbb
pop
mov
shrb
dec
in
cmp
sbb
push
loopne
test
icebp
push
arpl
pop
cmp
mov
aaa
sahf
movsl
adc
test
xor
mov
cmp
or
xor
pop
stos
hlt
mov
push
cmc
scas
test
dec
sti
jae
xchg
xchg
xor
ljmp
adc
je
pop
jle
jmp
idivl
mov
fsubrp
lock
jne
data16
xor
cltd
mov
adc
xor
jbe
sbb
or
or
adc
aam
xlat
sbb
pop
icebp
and
rcrl
ljmp
insl
lea
icebp
aam
pop
mov
fcmove
push
add
ret
sub
out
insl
adc
fs
or
push
fstpt
sub
jmp
jge
cli
fistpl
dec
aas
fcoms
cmpsl
sub
xor
dec
aad
or
scas
das
dec
lock
pusha
mov
xlat
rcrb
stos
mov
out
sub
xchg
clc
cmp
jno
mov
push
andl
cwtl
movsb
pop
popa
add
mov
sti
rorl
testb
jp
and
imul
push
sahf
mov
gs
push
subl
int
repz
test
pop
mov
lea
pop
and
xchg
xlat
shl
jbe
in
or
fcmovbe
addr16
xchg
fucom
mov
mov
mov
cmp
cmp
sahf
cli
push
xchg
test
pop
jb
or
mov
xchg
sbb
or
or
movsb
inc
and
inc
ret
sbb
cmp
mov
jnp
add
imul
lock
insl
fneni(8087
cmc
pop
dec
inc
xchg
adc
ljmp
mov
dec
std
rcll
lcall
dec
ret
leave
stos
push
test
cmpl
out
out
sti
adc
push
mov
mov
adc
ss
jle
xchg
aas
addr16
shrl
inc
nop
add
mov
mov
cvtdq2ps
test
fmuls
jge
sbb
insb
xor
aaa
xor
lahf
int3
mov
sub
sub
je
or
inc
or
jg
test
sub
mov
xlat
shll
bound
mov
push
mov
jmp
imul
gs
imul
and
notb
mov
sbb
mov
popf
cmpsb
loope
push
jg
sbb
enter
dec
and
lret
lods
lcall
xor
jecxz
scas
sub
repnz
cmp
arpl
inc
jnp
mov
jnp
xlat
fisttps
ret
mov
cmc
iret
incb
imul
dec
cmpsb
push
xlat
push
lret
rorl
mov
in
pop
imul
inc
push
adc
xor
cmpsl
scas
jns
movsl
fnop
or
nop
out
in
pop
clc
mull
add
in
out
outsl
or
repnz
mov
xlat
mov
push
loop
jl
xor
push
movsb
sub
mov
sub
scas
stos
std
cli
pop
pop
inc
cltd
js
cmp
jno
sbb
adc
mov
xchg
and
faddl
cmp
repnz
shll
repz
inc
fwait
and
scas
cmp
incb
mov
int
jnp
inc
push
cmpsb
daa
cli
dec
int
or
sub
mov
stc
cmp
adc
xlat
fwait
or
clc
mov
mov
xchg
loopne
pop
mov
xchg
inc
cli
xor
inc
pusha
jae
das
cmpb
popa
push
or
sbb
lahf
fs
cmp
jecxz
bound
and
push
fldl
movsb
pop
push
mov
xor
or
mov
mov
js
push
xchg
push
jns
loop
or
cltd
add
loopne
cmp
lahf
jnp
inc
cmpsb
lods
pop
imul
loopne
pop
add
mov
ret
sbb
das
arpl
xor
xor
xlat
mov
lahf
cmpsb
lret
js
loope
mov
orl
jb
mov
pop
mov
cli
push
cli
push
mov
shll
out
jl
into
mov
mov
sub
cmc
or
jb
jecxz
cld
push
sub
push
push
call
jl
and
or
movsl
ds
shl
cmpsb
mov
rcll
insl
dec
xchg
or
fwait
adc
inc
add
xor
inc
inc
inc
bound
pop
outsb
push
popa
xchg
xor
mov
fidivrl
xor
in
cld
cmp
in
shll
hlt
sub
pop
jbe
mov
fwait
push
sub
cmp
pop
and
push
ljmp
sub
mov
push
test
dec
xor
and
add
add
dec
mov
mov
sahf
adc
call
adc
cmc
sahf
sub
jb
dec
rcrb
xor
cmpsb
pop
add
add
add
mov
nop
sbb
xchg
notl
jae
sbb
fs
cmp
dec
push
rorl
imul
out
sub
aam
xor
mov
xchg
insl
mov
das
in
cmp
dec
sub
mov
mov
loope
xchg
xor
or
push
mov
out
add
cli
mov
nop
and
adc
jbe
pop
sub
mov
stos
adc
sub
movb
xor
pop
mov
loop
jmp
jp
cmp
push
sbb
lcall
loop
stos
xchg
shrb
mov
lock
mov
inc
sbb
lea
pop
ficompl
shlb
push
out
pop
sbb
dec
and
cwtl
ja
jbe
inc
lock
fldenv
pop
inc
pop
fnsetpm(287
das
cmp
addr16
push
push
testb
cs
push
sbb
aaa
clc
test
mov
int3
dec
pop
das
data16
jecxz
outsb
outsb
push
mov
nop
stos
jmp
push
push
test
vpcmpgtb
mov
enter
xchg
popf
add
mov
cmp
push
xor
or
rolb
rol
xchg
pop
push
mov
jno
cmp
enter
fwait
dec
lret
mov
mov
inc
add
add
mov
push
jnp
xchg
jae
loopne
adc
push
xchg
lods
loop
fsubrp
push
pop
scas
inc
push
inc
inc
fcmovb
ja
lret
in
push
pop
fmuls
pop
test
and
mov
pop
pop
jno
xchg
std
shll
clc
mov
pop
outsb
jbe
inc
jb
xchg
push
scas
cltd
jb
pop
subl
out
mov
or
sbb
mov
push
jno
inc
popf
les
dec
test
xchg
test
incl
out
arpl
stc
adc
fcompl
inc
xchg
xor
fadds
repnz
imul
cmp
dec
mov
mov
in
movb
sahf
xor
sub
or
js
cmp
lods
test
or
mov
cmp
xor
mov
std
sub
sub
or
sub
jmp
add
rcrl
loopne
cmc
insl
fiaddl
cld
pop
jne
sub
cmp
adc
fbld
imul
aaa
push
test
das
addr16
daa
mov
aas
add
dec
inc
insb
cmp
push
push
mov
popfw
pushl
dec
mov
test
bnd
dec
xlat
jbe
xor
and
les
enter
sbb
mov
mov
sbb
ret
ss
jno
cwtl
js
xchg
andl
decl
or
mov
add
add
xchg
xchg
xchg
inc
cmp
lods
or
stos
xchg
shrl
arpl
sbbb
mov
mov
sbb
fs
sub
push
jns
add
sbb
pop
adc
cmp
mov
sbb
or
jle
dec
pop
mov
sub
daa
std
xchg
out
test
xchg
cld
pop
cmp
aaa
rolb
clc
test
push
orl
ret
or
fisttps
arpl
in
fnstsw
sub
inc
lret
out
or
dec
adc
popf
adc
daa
adc
aad
orl
push
or
or
and
mov
cs
cltd
ljmp
push
and
sahf
enter
push
cmp
mov
or
ljmp
dec
loopne
pop
loope
lret
bound
jns
fcompp
inc
mov
cmp
loope
aaa
and
pop
stos
xlat
xor
mulb
sbb
add
push
push
add
lret
fists
cmpsb
cmp
jecxz
mov
inc
out
js
aaa
mov
push
lea
test
and
pop
rorl
lds
repnz
dec
mov
sbb
imul
mov
and
cmpsb
int
mov
or
mov
hlt
cwtl
jmp
add
cmp
es
jge
adc
adc
dec
xchg
add
js
aam
adc
sbb
dec
push
shlb
clc
mov
lds
or
clc
pop
stos
out
pop
mov
pop
mov
dec
cmp
cmp
jns
xchg
pop
fldl
cmc
fdivp
push
js
push
aaa
xor
negl
xor
aas
jno
sub
lods
push
sub
cmpsl
test
cltd
xlat
jle
fwait
dec
cltd
addr16
fisttpll
aad
pminsw
lods
push
fs
push
pop
xor
mov
push
xchg
fdivs
out
bound
mov
sbb
or
mov
js
pop
daa
xchg
daa
adc
bound
adc
popa
out
dec
bound
ffreep
in
pop
pusha
push
nop
pop
das
popf
sbb
in
rcrb
mov
int3
inc
scas
cltd
imul
inc
xorb
mov
out
insb
sbb
inc
mov
mov
dec
sub
shr
fstps
inc
push
adc
out
add
inc
adc
call
leave
mov
lcall
in
testb
sub
out
adc
mov
add
or
clc
push
scas
push
pop
imul
lahf
push
stos
pushf
mov
out
popa
out
push
cmp
in
adc
mov
xor
nop
loope
addl
aaa
xchg
sbb
and
das
das
sub
add
lret
jmp
clc
sub
dec
xchg
xchg
push
pop
lods
icebp
cmpsb
mov
pop
mov
add
inc
xchg
inc
xchg
cmp
dec
inc
adc
cmp
ret
jb
cmpsl
loop
rclb
sahf
sahf
pusha
xor
loope
jle
xchg
ret
sub
pushf
nop
loopne
scas
sbb
and
mov
dec
sub
mov
pop
inc
add
fimuls
nop
imul
repz
xchg
daa
dec
jae
mov
repnz
sub
rcrb
shl
xchg
shrl
test
push
dec
aad
mov
imul
add
pop
sbb
jp
inc
adc
shr
fucomp
jle
adc
rcrb
or
xchg
and
ds
outsl
or
es
rolb
xchg
pop
outsl
movsb
das
fsubrl
pop
mov
rcrl
imul
push
mov
xchg
adc
dec
mov
ljmp
mov
daa
cmp
jmp
cld
adcb
test
jl
out
and
aam
inc
aad
mov
pop
sbb
mov
bnd
cli
jmp
aas
in
mov
mov
sbb
and
lea
dec
mov
add
cmp
inc
sbb
in
pop
in
pop
es
jb
mov
addr16
ljmp
xchg
mov
stos
xchg
pop
outsl
lcall
or
xchg
cmp
adc
inc
inc
inc
test
cmp
mov
into
and
sbb
cwtl
cmp
cmp
adc
xor
xor
clc
filds
or
mov
daa
repz
xchg
sub
add
mov
mov
push
stos
push
inc
int
test
enter
bound
pushf
inc
mov
shrl
jno
jae
jo
push
leave
push
jl
or
mov
scas
testb
xor
loop
push
pop
les
add
push
repnz
adc
xlat
addr16
data16
movsl
push
daa
or
jnp
dec
push
ja
outsb
cmp
or
xchg
sbb
lea
cmpsl
std
xor
call
in
adcl
insb
pop
sbb
fwait
lods
cmp
outsb
cwtl
add
aaa
dec
dec
test
cmp
dec
lahf
mov
jp
xor
cmp
aam
out
popf
adc
ja
dec
cmpsb
sub
mulb
or
dec
dec
lret
imull
sbb
es
mov
lret
insb
mov
dec
mov
or
mov
add
sub
cltd
popf
cmp
addr16
xchg
xchg
mov
loope
jo
in
int3
data16
fldcw
adc
push
xor
aaa
jl
xchg
mov
movsl
jbe
gs
lods
aas
jnp
mov
mov
outsb
int
xlat
dec
adc
add
xchg
mov
scas
imul
mov
data16
sbb
arpl
insb
sub
push
xchg
jecxz
sbb
dec
fiaddl
shrb
outsl
fwait
pop
scas
or
rorl
push
icebp
adc
xlat
out
out
icebp
jo
frstor
cs
leave
mov
sub
push
pop
adc
jge
jno
adcl
mov
mov
inc
dec
inc
adc
push
push
pop
mov
adc
fsubs
int
push
mov
inc
xchg
lods
imul
jg
popf
push
sub
inc
loop
testl
jecxz
pop
pop
pop
xchg
pop
jl
in
cmp
adc
push
in
xor
sub
fdiv
lea
sbb
pop
mov
jg
cmp
xchg
shll
xchg
adc
mov
bound
movsb
cltd
fwait
loopne
mov
mov
lahf
xlat
lods
add
cltd
mov
or
push
xchg
jge
lcall
ror
aas
jb
test
loope
daa
cmpsl
push
xchg
rol
mov
sarb
jg
arpl
lea
or
popa
cld
xchg
adc
dec
xor
out
add
scas
inc
xor
into
dec
shrb
notb
pop
fisubrl
mov
xchg
ss
jno
inc
inc
cmp
test
imul
les
xor
jbe
aaa
fucomp
push
inc
mov
popf
push
jge
jne
jecxz
and
inc
mov
gs
out
or
xlat
jg
xchg
push
rclb
fwait
cld
addr16
ljmp
adc
lahf
sub
hlt
pop
fnsave
sbb
xchg
mov
jns
and
lods
push
imul
dec
push
xor
cld
jge
pushl
pop
cmp
cltd
popf
push
out
adc
cmp
clc
rorb
mov
mov
mov
repz
sbb
data16
jae
aad
sbb
movsl
int
pop
sub
xchg
xchg
jbe
xor
push
inc
pop
jnp
xlat
jecxz
enter
cmp
xchg
orl
lahf
xchg
sbb
sbb
sbb
pop
push
pop
jnp
fs
test
mov
xchg
adc
xchg
jmp
and
xor
addl
cmp
sbb
mov
imul
dec
loope
push
cli
loope
stos
lahf
mov
fimull
jno
mov
bound
jno
sub
idivb
in
push
dec
jo
loope
mov
notb
pop
mov
movsb
sbb
mov
or
mov
jecxz
ds
mov
lcall
in
pushf
add
outsb
and
mov
insl
andl
cmp
in
lret
jle
out
cmp
movsb
insb
scas
outsb
adc
out
mov
sub
mov
or
jecxz
lods
stc
pop
data16
dec
leave
dec
mov
fdivrl
cmpsl
pusha
and
out
pop
movsb
mov
mov
dec
mov
dec
push
cmp
adc
cmp
jb
imul
test
test
cltd
mov
std
sub
inc
sub
dec
shl
inc
imul
iret
add
jge
inc
subl
pop
push
ret
and
lret
push
cmpl
fidivl
cmp
fsts
test
mov
ret
repnz
pop
fmull
iret
in
outsl
pop
xchg
shll
mov
dec
pop
jbe
sub
or
sti
inc
add
inc
movsl
mov
arpl
dec
adc
insl
imul
mov
xor
adc
in
idiv
int3
sub
inc
mov
jo
pop
pop
movsl
cmp
mov
aas
jbe
insb
push
inc
pop
shl
xor
push
dec
stos
movsb
mov
push
xchg
sbb
mov
loop
lret
insl
imul
or
mulb
std
pushf
gs
mov
add
mov
mov
cltd
mov
daa
mov
jo
in
lea
sti
push
loop
shrl
test
orl
jo
dec
adc
push
jl
mov
pop
cmp
enter
or
shrl
dec
inc
mov
ja
dec
jno
xchg
add
push
pop
xor
jb
pop
mov
iret
lods
loopne
gs
or
gs
mov
and
push
out
aas
aam
mov
mov
push
pop
call
or
aam
pop
popf
hlt
cld
pushl
xchg
push
in
rorb
cld
jno
jbe
inc
pop
dec
gs
insb
out
pop
and
lods
std
fstpt
sub
and
dec
add
ss
out
sub
sbb
jl
aam
push
mov
cwtl
add
add
fmuls
leave
pusha
xor
fwait
js
fsts
lds
xor
insl
in
shrb
dec
mov
lret
mov
mov
ds
cmp
sbbl
mov
in
adcl
cmp
ret
mov
or
dec
jo
scas
addr16
in
mov
lret
insl
mov
mov
sub
xor
fistl
imul
push
mov
jbe
test
sbb
jns
cmp
int3
mov
xchg
in
jne
lret
dec
outsl
jecxz
push
inc
popf
sbb
shlb
in
imul
mov
cmp
outsl
pop
push
fwait
pop
dec
imul
roll
and
adc
cmp
stc
jbe
push
sbb
in
ja
push
pop
cmpsl
ret
inc
jne
add
icebp
mov
sub
mov
add
adc
insl
in
lds
xchg
hlt
insl
inc
rclb
add
add
xor
out
lock
jmp
inc
fcompl
lret
jp
fistpll
aas
cmp
decb
scas
out
mov
mov
mov
xor
sbb
jmp
sub
dec
sub
mov
add
gs
stos
or
inc
cmp
or
mov
adc
mov
out
lea
rcr
scas
adc
ret
loope
push
jne
sbb
int3
xor
push
xchg
jmp
ficoms
inc
xchg
shll
jnp
outsl
inc
ds
dec
daa
jp
les
lcall
lods
pop
sub
cmp
or
push
pushf
clc
and
sbb
sbb
or
mov
fcmovne
ret
jle
xor
or
xchg
inc
icebp
test
mov
pushf
add
mov
mov
jecxz
sbb
mov
cmp
cs
insl
ret
sbb
mov
push
out
pop
repnz
sbb
jno
mov
and
mov
xchg
lds
push
ss
cmpsb
mov
or
push
mov
xor
clc
inc
mov
mov
imul
jo
shlb
jg
sti
out
loope
push
and
add
mov
mulb
std
cmp
mov
xor
jp
sub
rolb
aas
push
shlb
hlt
in
inc
mov
fldl
jne
shlb
sbb
sbb
out
add
or
ret
fstpt
shl
inc
inc
imul
fwait
cmpsl
mov
hlt
pop
sbb
daa
push
xlat
icebp
jne
in
cmc
cmp
std
movsl
clc
jge
test
adc
sahf
lret
insb
stos
sub
adc
dec
mov
or
cmp
jo
inc
xchg
nop
insl
push
push
jmp
mov
jo
and
pop
adc
push
into
lret
out
sub
pop
roll
int
rcl
insb
pop
cmp
fmul
sbb
mov
sbb
hlt
iret
dec
jecxz
inc
cmp
aaa
cmp
jns
and
insb
and
sbb
ret
out
inc
xlat
xchg
std
repnz
aaa
mulb
iret
jge
push
cli
insl
cli
jg
push
jb
sub
xor
adc
or
jmp
push
ret
fcoms
pop
push
add
and
out
lahf
push
or
xchg
mov
jb
pop
cli
imul
imull
fldl
push
sahf
push
popl
stos
adc
test
sar
push
scas
xchg
mov
hlt
xchg
jg
inc
int3
aaa
add
ds
mov
js
filds
jnp
negb
flds
pop
nop
aaa
jae
fs
fldl
rcll
jecxz
jbe
xchg
movsb
xchg
ret
jne
test
push
pop
mov
out
mov
jae
xor
ja
jg
mov
out
arpl
lret
dec
mov
int3
ja
add
int3
clc
dec
mov
mov
sub
out
aam
pop
leave
popa
loop
test
loop
shrl
lods
mov
push
test
jecxz
sarl
mov
sub
sbb
sbb
ljmp
xchg
dec
jmp
xchg
mov
cwtl
cli
and
loopne
shl
or
fisubs
popf
push
ja
test
dec
mov
inc
mov
outsb
xor
icebp
push
and
scas
cld
sub
sbb
daa
outsb
inc
mov
mov
cmpsb
inc
outsl
dec
mov
xor
cmp
mov
mov
je
push
inc
ret
mov
loope
pop
jns
mov
popf
loope
pusha
mov
add
xlat
movsb
arpl
aam
or
add
outsb
lds
or
push
sbb
scas
inc
stos
lret
shrb
fcomi
push
imul
repz
xchg
cmp
jecxz
popa
sbb
and
out
mov
loopne
add
pop
xchg
enter
cmpxchg
add
cmp
lret
stos
icebp
jns
sub
pop
push
push
test
push
jp
je
imul
mov
dec
test
xlat
push
in
jmp
add
or
adc
outsb
adc
cli
cmp
aas
addr16
mov
mov
cltd
outsl
xlat
lret
push
inc
push
mov
inc
pusha
adc
lea
xor
movsb
adc
enter
adcb
into
mov
push
sub
mov
adc
cmp
orl
mov
jne
push
xor
and
mov
hlt
aas
aaa
cmpsl
jp
into
pop
mov
cmp
or
sub
insl
sbb
pop
enter
hlt
inc
mov
and
mov
stos
jle
aad
cld
push
fnstsw
jg
icebp
inc
jge
negl
sub
nop
or
repnz
fnstcw
sub
dec
pop
jno
mov
pop
fwait
xor
ret
push
xlat
lds
je
jg
mov
mov
push
pop
and
add
aam
xor
push
sbb
ret
arpl
jl
push
mov
data16
pushf
imul
and
sbb
push
dec
dec
jb
pop
mov
adc
or
cmc
push
mov
enter
mov
sub
or
inc
int3
adc
adc
xor
pop
xchg
cmp
mov
adc
xsaveopt
xchg
and
mov
fidivl
movsb
daa
or
out
lods
adc
jp
lcall
inc
pop
inc
sarl
jmp
cltd
adcl
cmp
xor
jb
rcll
bnd
cli
mov
gs
hlt
inc
jnp
xor
lea
rclb
adc
jl
dec
push
push
cmpsl
daa
mov
adc
cmc
pop
es
ret
ds
mov
cmp
mov
pop
inc
les
jg
mov
push
test
mov
ljmp
outsb
stos
pop
fnsave
adc
cmp
mov
xchg
aas
out
rorl
clc
mov
stos
adc
dec
cmpsl
fistpll
mov
mov
or
jns
jl
mov
cmpsb
adc
paddusw
adc
sbb
loop
pop
pushf
push
adc
lock
inc
mov
or
bound
jle
out
mov
stos
xor
sbb
movsb
out
cmp
dec
pop
xchg
and
xchg
cmp
mov
adc
push
adc
push
inc
jecxz
mov
jb
outsb
add
cli
inc
out
loope
mov
inc
icebp
imul
cmp
cmpsl
pop
and
lret
jp
jmp
or
mov
repz
leave
lods
push
int3
loopne
lret
push
jnp
shrl
sbb
adc
int
pop
ds
xchg
xlat
lcall
push
jns
push
adc
enter
xlat
int3
pop
pop
mov
nop
xchg
add
fistpll
jb
jg
mov
addr16
cmc
nop
mov
inc
jmp
pushf
pusha
adc
xchg
sbb
xor
call
sub
pop
nop
cmp
lods
jae
cwtl
mov
cmp
push
ja
mov
iret
mov
mov
xor
in
aaa
test
mov
mov
mov
jge
fcompl
lret
dec
sub
xor
inc
ja
aaa
push
sbb
mov
push
mov
lods
shlb
mov
xor
scas
flds
and
dec
movl
push
in
xchg
rol
cmc
loope
lds
fdiv
pop
cltd
pop
iret
mov
cld
aad
daa
stos
jb
dec
incl
negb
push
je
or
mov
mov
fmuls
out
lret
lcall
leave
loopne
or
cmp
in
mov
add
test
adc
es
xchg
pusha
sahf
repz
fnstenv
mov
pop
sbb
mov
outsb
out
sub
push
mul
pop
lcall
add
dec
cmp
sbb
pushf
inc
push
ret
stos
dec
push
les
sbb
cmp
inc
in
dec
cmpsl
sbb
cwtl
lret
sub
or
jnp
cli
test
mov
adc
fs
sub
cmp
jmp
test
mov
jo
jne
out
cli
rcrl
push
pop
xlat
aam
mov
mov
cmp
push
xor
imul
mov
lods
sti
rcl
rcrb
ret
jmp
js
and
mov
cmpsb
push
mov
xchg
pop
xor
push
addb
add
rorb
out
mov
fdivs
in
pop
jp
sub
mov
fwait
popf
or
fisubl
mov
add
add
aas
pop
xchg
mov
cmp
loopne
ficoml
mov
cmp
ljmp
cmp
mov
cld
cmp
and
mov
sarb
fcomps
popa
addr16
push
out
xorb
mov
jp
lea
mov
jae
leave
jmp
cmpsl
out
jb
mov
lahf
out
sarb
cmpl
popf
mov
outsl
aad
ja
push
in
adc
loope
aas
inc
call
in
mov
xor
leave
mov
sbb
dec
in
mov
int3
jo
pop
jg,pt
aaa
and
test
pop
outsb
xor
jno
into
cmpb
sarl
cltd
popa
repz
or
push
stc
addr16
addr16
call
ficoms
dec
test
pop
ljmp
ss
and
jecxz
sar
or
sub
adcb
push
cmovo
mov
or
inc
aas
add
cmpsl
add
invlpg
stos
push
jns
lods
add
out
call
push
push
add
mov
pop
lcall
push
pop
es
inc
mov
fistpll
or
xor
icebp
push
fsub
sysenter
xor
push
outsb
loop
test
sbb
pop
adc
es
sub
sbb
pop
lods
hlt
in
data16
das
add
jge
push
pop
insb
mov
mov
out
jbe
in
cmp
xor
test
mov
xor
dec
fstpt
mov
jns
test
cmpsb
sahf
jle
push
ficompl
outsl
and
lods
dec
push
mov
dec
adc
jg
mov
mov
imul
leave
inc
aaa
insb
push
and
fstl
inc
add
insb
and
cmpsl
sbb
stos
fistl
js
and
or
sub
sbb
shrl
mov
outsb
and
hlt
pop
lcall
lods
push
add
sbb
or
push
sbb
cli
test
fldcw
test
xlat
dec
xlat
popa
ljmp
mov
hlt
fidivl
popa
je
out
imul
inc
jne
or
pop
jle
lock
push
mov
in
daa
pushf
repz
jle
adc
mov
ret
jl
mov
cmp
add
out
add
lods
xor
pop
sub
sarb
xchg
cmpsl
fidivrs
push
es
mov
push
sti
xor
xchg
es
cmpsb
mov
ret
in
pop
mov
mov
pop
xor
mov
lret
pop
mov
adc
jg
mov
out
cmp
lahf
cmpsl
and
sahf
jecxz
lcall
xchg
adc
push
rcr
push
cmp
sbb
sub
or
ret
sbb
ret
add
scas
push
call
dec
pop
add
cmpl
in
cltd
mov
xor
dec
enter
sbb
movsl
xor
aam
popf
lahf
fistpll
xor
ss
dec
pop
mov
aas
lret
movsb
in
cld
cmp
aas
sbb
mov
mov
push
aad
addl
or
aad
push
shl
roll
aad
pop
sbb
adc
fdiv
sbb
addl
stc
add
test
xchg
addr16
xor
xlat
jp
mov
jae,pn
jne
rcll
imul
mov
mov
inc
call
les
ret
in
and
jmp
lret
or
lahf
mov
stos
push
sbb
aaa
cmpsb
xor
cmpb
inc
pop
adc
sub
sarb
xchg
js
jg
imul
dec
test
and
adc
sahf
movsl
mov
or
xchg
in
fadds
cwtl
lds
add
mov
test
sub
jns
and
rorl
push
out
ljmp
in
or
jle
out
adc
xor
ljmp
xchg
jne
sub
jecxz
mov
ja
loopne
add
add
pop
push
in
loop
push
lods
sub
cmc
cltd
pop
and
jmp
sbbb
pusha
jb
mov
stos
lcall
jo
adc
aad
sarl
adc
lea
mov
cmp
je
repnz
test
push
loope
test
adc
sub
movsb
sbb
fidivs
lea
in
daa
inc
lea
push
or
or
mov
inc
cltd
scas
roll
sbb
int3
xchg
out
xor
dec
sub
aas
mov
insb
pop
mov
insb
or
jnp
adc
jecxz
imul
gs
iret
push
in
cld
push
jmp
sbb
int
test
movsl
movl
xchg
mov
mov
mov
les
xchg
std
rclb
pop
push
xchg
fwait
mov
dec
add
stos
loope
and
jnp
jne
repnz
lods
push
aad
daa
into
xchg
mov
sub
fldenv
dec
insl
insb
dec
push
cmpsl
aad
stos
aad
mov
enter
xchg
div
pop
mov
sbb
inc
add
add
addl
fisubrs
mov
xchg
mov
sub
int3
jmp
shrl
push
in
js
lea
jns
data16
mov
lods
sarl
imul
and
icebp
ret
jbe
inc
mov
push
cmp
mov
aam
stos
lds
sub
test
dec
sti
pop
jecxz
and
and
and
fs
shll
movsb
loope
emms
std
jge
ds
or
das
dec
and
jnp
sti
mov
addr16
test
sub
push
daa
sub
mov
cmp
and
cmpsb
cwtl
repz
scas
movsb
fwait
call
lcall
mov
dec
ja
and
push
sub
inc
in
mov
adc
aaa
or
inc
sub
fmull
in
mov
pop
xlat
les
pop
in
jb
add
push
repnz
add
ret
popa
imul
add
mov
xor
addr16
xor
cmp
out
in
aas
scas
clc
mov
jne
sub
jecxz
or
lahf
inc
cmpsl
insl
push
fistl
mov
lds
dec
adc
je
ret
rcll
inc
adc
cmc
outsl
xchg
fsubrl
scas
add
sub
pushf
dec
mov
jnp
sahf
sahf
mul
and
pop
adc
and
call
pop
mov
add
dec
add
mov
imul
xchg
dec
clc
push
mov
jae
movsb
cmp
fistps
push
inc
shlb
mov
mov
imul
loope
out
out
imul
jo
das
scas
addr16
ja
xor
out
in
leave
rclb
sbb
scas
cli
jmp
daa
aam
out
inc
ret
xor
insb
cmp
dec
or
movsl
push
dec
jns
push
xor
cs
xlat
sub
push
js
mov
mov
pop
and
ljmp
popf
lods
pop
mov
vrsqrtss
cli
sti
sub
test
cmpsl
cmp
das
xchg
inc
pop
fnstcw
adc
in
stos
mov
enter
lods
sub
inc
test
fisubs
xlat
out
out
lret
movsl
xor
pop
imulb
cmpsl
pop
xchg
mov
jg
into
out
loope
cltd
sar
or
dec
add
xor
cld
sti
rep
stc
andb
in
push
das
pusha
xlat
loopne
or
ret
push
inc
es
insb
sub
cli
cs
sahf
push
pusha
jne
xchg
aas
leave
lea
and
mov
mov
mov
arpl
fiadds
mov
stc
stos
inc
sbb
mov
repz
mov
enter
popf
hlt
or
add
arpl
push
ljmp
call
aaa
inc
fmul
jg
dec
test
pop
fiaddl
mov
ljmp
js
mov
jne
push
dec
push
roll
pop
cmc
push
xlat
inc
sub
jmp
idivb
add
xchg
push
ljmp
mov
lods
test
loopne
arpl
popf
mov
jp
cwtl
xlat
leave
dec
dec
nop
or
xor
pop
mov
pop
movsl
data16
pop
cwtl
xor
jbe
outsb
fwait
sarb
je
movsb
inc
js
dec
mov
and
cltd
mov
dec
jge
inc
mov
add
faddl
cmp
int3
insb
push
sbb
mov
enter
push
shrd
adc
lret
rolb
sub
mov
xor
pop
rorb
leave
fadds
pusha
and
mov
nop
loope
xchg
push
mov
out
outsl
mov
add
add
movsl
jl
mov
insl
and
add
icebp
and
mov
shll
arpl
and
stos
cmc
mov
int
dec
xorl
cmp
pushf
outsb
pushf
xlat
push
or
sub
push
out
shll
outsb
ja
cli
and
jmp
aaa
mov
fisubrs
pop
fidivs
aad
pusha
scas
cli
xchg
jbe
pop
jbe
and
or
dec
xor
push
mov
mov
cmp
cmp
das
mov
mov
lods
repz
cs
sbb
jmp
xchg
and
adc
jns
cmovns
dec
repnz
das
jne
mov
pop
fiadds
popf
jbe
inc
out
scas
pop
or
repnz
repnz
aam
scas
cmp
rorl
cwtl
dec
add
mov
jne
mov
lods
movmskps
ljmp
fxch
xor
lds
add
jbe
cmpsb
cltd
hlt
mov
pop
aam
mov
cmp
sbb
or
and
xor
adc
add
cmp
in
subb
lock
arpl
pop
jnp
sub
mov
fs
push
daa
sahf
xchg
movsb
fcomps
push
sahf
mov
adc
rolb
push
ja
xorb
mov
sarl
jmp
jo
pop
add
fdivp
jl
xor
lock
xchg
and
ficompl
and
lcall
add
adc
sbb
out
jge
rcr
fdivrs
and
and
insl
test
dec
mov
inc
es
pushf
add
cmpsl
mov
add
imul
cld
in
inc
mov
adc
movsb
test
mov
aas
push
popa
and
pop
das
out
add
dec
dec
ds
xor
mov
dec
mov
inc
xor
add
add
ss
stos
cmp
adc
int
mov
aas
mov
subl
xchg
cmpsl
adcl
ljmp
or
mov
push
xchg
add
mov
rorl
mov
mov
mov
inc
ja
or
sti
xor
mov
mov
sbb
xlat
js
mov
movsb
mov
lds
inc
and
xchg
mov
repz
sbb
add
mov
and
push
or
cld
outsl
in
pop
sub
pop
sub
sbb
mov
inc
in
lock
push
dec
and
lahf
lahf
sbb
shrb
fisubl
jae
insl
jg
lods
fsubrs
push
mov
fcoms
loopne
xchg
xchg
popf
in
xor
aam
sar
and
or
aad
inc
int3
rcrl
fsubr
ss
cltd
xchg
insl
lcall
inc
std
xchg
shlb
adc
out
pop
jmp
repnz
fistpll
push
adc
mov
aas
int
shll
sub
das
mov
rol
sarb
mov
xchg
int
cmp
in
dec
out
pop
stos
scas
insb
movsl
xchg
outsl
test
xlat
mov
mov
push
jae
int3
and
xchg
aam
sub
xchg
int
fldenv
mov
mov
and
lods
add
pop
lcall
sub
in
out
repnz
lea
ljmp
jp
rcll
cmp
gs
test
xor
pushf
jmp
sarb
popf
test
in
test
xchg
testl
add
xor
sub
lahf
mov
dec
xchg
mov
int3
mov
lock
mov
pop
and
pop
bound
rorl
cmp
call
inc
dec
jp
insb
adc
pop
dec
les
aas
dec
cmpsb
insl
xchg
dec
xchg
fs
add
adc
ret
fistps
xchg
inc
icebp
andb
in
jae
test
mov
mov
and
cli
bound
into
jp
or
inc
sbb
jg
mov
adc
repnz
push
mov
push
outsl
mov
nop
jp
in
xor
enter
mov
sbb
aaa
movsb
cmpsb
ljmp
mov
inc
dec
push
popf
hlt
and
sbb
out
xchg
adc
popa
sbb
pop
bound
jo
xchg
sbb
dec
scas
pop
mov
push
scas
sarb
sbb
mov
cmp
mov
cltd
clc
mov
and
cwtl
cmp
adc
jae
xor
scas
mov
jge
push
xlat
cmc
mov
subb
xor
mov
mov
mov
push
or
sbb
mov
sbb
je
cmp
fmull
adcl
push
xor
add
aad
inc
xor
or
sbb
jnp
or
mov
pop
fdiv
nop
int
sub
push
cmp
loop
ret
sbbb
movsl
or
xlat
pop
add
pop
sub
mov
push
pop
push
and
jl
xchg
pushf
push
mov
stc
loopne
imul
fld
xor
mov
and
out
sahf
or
pusha
jmp
outsl
lods
aas
mulb
ficompl
push
or
pop
cwtl
sub
mov
and
sbb
in
sbb
mov
pop
pop
inc
xchg
sbb
mov
aam
xor
jne
xor
and
aaa
sbb
hlt
and
out
inc
sub
push
mov
andl
sbb
in
pop
stos
cmp
repz
js
std
add
xor
daa
push
inc
outsl
jnp
icebp
mov
xlat
jp
jp
aam
sbb
mov
loopne
xchg
stc
and
sbb
inc
xchg
adc
sub
jno
rorl
test
mov
xchg
cs
mov
inc
test
inc
pushf
sbb
adc
mov
xlat
and
or
sub
jae
sub
add
xor
rcr
lret
or
test
sti
pop
testb
movsl
iret
bound
sti
cmp
sub
lcall
std
adc
rcrl
lock
nop
testb
adc
scas
lods
outsl
or
cmpsb
jecxz
sahf
lret
mov
popw
pop
inc
das
jp
xor
imull
xchg
xor
mov
and
sub
pop
adc
stos
arpl
gs
fdivs
mov
xor
lcall
cwtl
cmp
push
roll
shrb
jge
out
inc
aaa
dec
ret
jae
ftst
push
add
lds
addr16
aaa
fistps
push
mov
in
jmp
neg
shr
int
jb
jmp
fimuls
jo
sbb
das
imul
pop
mov
cmp
mov
nop
outsl
in
pop
sub
imul
sub
in
outsb
out
les
cmc
das
es
arpl
addr16
cmp
dec
xchg
ds
out
mov
inc
xchg
sbbl
std
jo
adc
fs
pop
cmp
inc
inc
cmp
sbb
insb
pop
dec
mov
sbb
les
dec
pop
aad
das
xchg
insb
fistl
mov
cmp
lret
sub
test
sub
leave
jmp
dec
push
pop
imul
ds
hlt
sbb
xor
mov
push
add
insb
jge
or
mov
push
add
mov
cwtl
fsubs
push
repnz
scas
pop
mov
clc
gs
inc
jns
jno
jnp
testl
add
inc
sub
pop
pop
mov
in
movsb
jo
or
andl
add
movsb
mov
jge
pop
mov
fdivp
mov
jne
sub
jp
cmp
add
xor
lods
mov
lods
push
cltd
scas
shlb
jg
dec
sub
cmp
repnz
clc
and
cmpsb
sahf
or
mov
or
lret
out
jae
jg
push
out
mov
mov
sub
dec
fst
mov
jmp
or
and
mov
movsl
insb
or
jge
jnp
push
shlb
sub
fstpl
mov
fdivs
ss
dec
xor
insl
jno
pusha
fisttpl
dec
dec
adc
mov
sbb
dec
adc
out
lea
addr16
cld
fabs
std
fmull
mov
sub
mov
in
sub
jb
daa
jns
test
push
lea
dec
push
movsb
fdivrl
or
aam
inc
dec
mov
iret
sti
push
add
push
cli
loop
push
and
inc
dec
adc
lock
adc
outsl
loop
cs
pop
cmp
pop
sub
ret
mov
call
pop
or
lret
test
adc
add
cwtl
add
sbb
jbe
sbb
loope
adc
inc
les
inc
mov
mov
test
sbb
sbb
sbb
and
scas
xor
les
jno
dec
xor
push
insl
scas
mov
jo
cwtl
std
cmp
rol
add
cmp
push
sbb
pop
and
shrl
cli
lock
lds
mov
cli
or
sub
jl
std
lcall
cmp
adc
add
pop
imulb
inc
cmp
mov
sbb
gs
adc
sahf
int
es
adcb
or
sub
cmc
mov
add
js
or
mov
jne
frstor
mov
jbe
and
push
sub
dec
lock
sub
sbb
adc
push
ret
negl
shr
mov
stc
mov
cmpsb
cmp
sub
or
jbe
stc
pusha
icebp
jne
clc
adc
pop
repnz
test
in
pop
jnp
push
inc
lods
inc
xor
movsl
into
and
cmpsl
cmpsl
jle
imul
adcl
outsb
lock
push
js
mov
imul
lock
jecxz
jne
repz
pop
xor
mov
dec
jle
sub
mov
pushf
test
andl
add
adc
aad
inc
adc
pop
aad
roll
movsl
mov
push
inc
fistpll
clc
add
dec
fisttpl
sub
sti
inc
leave
push
mov
popf
xchg
stos
out
lds
push
scas
jno
in
add
lods
shr
cld
xchg
push
mov
lods
jmp
loopne
or
push
mov
inc
adc
loope
test
xchg
xchg
mov
int3
dec
jb
inc
daa
iret
or
pop
mul
dec
les
xor
cli
test
int
jg
inc
dec
les
fidivrl
fsubrl
xchg
mov
inc
movsb
aam
sbb
pop
arpl
xchg
mov
enter
cmp
mov
bound
xor
pop
inc
mov
sbbl
ljmpw
pop
mov
xor
cmp
testl
fisubs
leave
int3
add
mov
cmp
adc
cmp
xchg
add
sbb
mov
stc
mov
dec
adc
je
push
jne
mov
mov
adc
push
int3
push
popa
nop
or
add
repz
adc
icebp
pusha
hlt
stc
jns
adc
loope
and
xchg
pushf
sub
cwtl
or
mov
lock
test
pop
mov
mov
xchg
and
cmpl
movsl
ret
mov
lods
mov
sub
xchg
hlt
jae
int
sbb
insb
lods
jp
stos
and
leave
sub
mov
bound
aam
mov
std
adc
push
out
stos
sbb
dec
cltd
jo
lods
fbld
jne
jbe
xchg
push
rolb
addr16
push
jno
add
roll
insb
pusha
sub
faddp
out
mov
xchg
mov
rorb
ret
mov
dec
hlt
or
cmp
cmp
dec
rcll
cltd
sbb
sbb
and
popf
popa
xor
sub
dec
xchg
popf
fnstcw
mov
outsl
push
stos
xchg
push
and
sbb
jbe
stos
negl
cmc
mov
fmuls
iret
push
rcl
aad
mov
nop
data16
rcrl
xchg
lock
cmp
mov
fwait
scas
pusha
flds
inc
mov
frndint
dec
fs
inc
sub
add
js
sub
dec
aaa
outsb
mov
xchg
sbb
fs
jne
lock
inc
subb
or
dec
xor
mov
js
mov
ss
mov
popf
fisubl
out
popf
jo
cmc
sbb
adc
hlt
xchg
inc
das
cmpb
adc
rolb
mov
jne
out
popf
enter
imul
sbb
adc
scas
mov
mov
mov
adcl
fs
jp
or
mov
inc
or
pop
dec
jl
xor
or
inc
fcompl
loope
mov
mov
xchg
push
xchg
dec
dec
mov
loopne
cmpsl
rcll
rclb
inc
mov
test
inc
dec
pusha
xchg
push
jno
jb
sub
dec
mov
mov
push
rclb
or
das
xchg
scas
xor
sbb
pusha
jmp
pop
leave
add
push
sbbb
mov
lds
iret
aas
movsl
adc
bound
mov
pusha
addr16
or
xchg
xor
xchg
test
enter
bound
in
ds
rorb
jl
cmp
and
xchg
mov
adc
in
mov
adc
ret
or
mov
movsl
clc
inc
lds
stc
fwait
cmp
push
xor
insb
inc
into
ss
outsl
adc
or
in
inc
fbld
jb
xor
dec
outsl
imul
mov
or
outsb
clc
push
rorb
daa
cmp
dec
mov
xchg
add
incl
arpl
popa
pop
icebp
sub
scas
les
cmp
jae
jne
xlat
sbb
or
aaa
xor
popf
push
iret
pop
scas
popf
lret
pop
ss
popf
cmp
lods
push
addr16
lahf
mov
scas
orb
pop
pop
fidivrs
nop
shl
add
push
mov
fcompl
loope
lods
lods
lret
cmc
push
mov
pop
pop
outsb
cmpsb
sbb
test
or
mov
jb
sub
mov
mov
pushf
roll
gs
inc
mov
fadds
aaa
shrb
mov
inc
lret
ud2
je
shr
jl
cmp
shr
mov
call
into
arpl
cmp
xchg
cltd
mov
fsubrs
and
pop
cmp
pushl
sbb
xor
outsl
aas
sbb
inc
dec
into
dec
mov
inc
dec
sub
mull
or
jnp
pop
sahf
fsubl
outsl
sbb
das
pop
aas
cmp
leave
sbb
in
fildl
mov
mov
mov
dec
fisubrs
add
sub
jecxz
jmp
cmp
push
jle
jae
sub
mov
sbb
test
js
jae
inc
mov
test
xchg
les
adc
test
lods
inc
pop
lret
cmpsb
xchg
insl
ja
or
addr16
jl
push
aam
je
cmp
loopne
sbb
or
setne
and
mov
mulb
push
outsl
pop
sbb
or
push
bound
ja
mov
dec
popa
mov
std
into
mov
shrl
sub
aad
aas
lret
aas
sbb
cmpsl
int3
ja
movsb
icebp
xchg
lds
pop
mov
test
pop
adc
jp
or
mov
push
inc
cmp
std
bnd
ret
ror
loop
dec
jp
cmpb
ss
xor
into
inc
testb
loope
enter
and
enter
xor
pop
sbb
jl
and
mov
outsl
loopne
push
mov
sub
stos
or
mov
aam
sti
sub
push
cmp
lods
add
jns
aaa
out
xchg
out
sub
bound
cwtl
sbb
ds
pop
shll
aad
push
pusha
pop
inc
pop
mov
xchg
xor
pop
pushf
or
outsb
fdivs
in
nop
mov
dec
or
xchg
or
push
and
dec
or
cmp
in
jbe
lods
and
sub
aas
in
jnp
jge
into
xchg
outsb
icebp
lahf
xor
fists
ret
test
bound
rolb
jmp
jae
cmp
test
push
pusha
push
movsl
cmp
adc
test
inc
les
stos
mov
adc
inc
or
add
insb
jge
jae
clc
mov
jae
loopne
outsl
dec
test
inc
pop
arpl
push
mov
js
imul
movq
movsl
inc
pushf
xor
and
mov
or
mov
aas
cli
dec
mov
dec
inc
inc
mov
pop
jge
rcrl
mov
push
pop
mov
xchg
mov
jmp
push
dec
jge
dec
fdivl
loopne
lock
out
push
es
sub
aas
test
add
insl
mov
jp
fcoms
inc
adc
or
mov
pushf
sbb
inc
inc
cmp
sbb
pop
sbb
cmc
cmp
fsubp
sub
or
xor
sub
fnstenv
sub
insb
jp
iret
push
stos
mov
movsl
push
loop
int3
xor
call
mov
das
cwtl
cmp
push
hlt
sub
enter
mov
jge
xor
lcall
or
dec
divb
icebp
or
xchg
cs
int3
lock
xchg
sbb
jbe
cmp
push
dec
add
ret
inc
mov
xchg
cmpsb
and
jge
jo
outsb
repnz
andb
sahf
sbb
in
cli
lds
push
pop
xchg
push
arpl
jle
daa
inc
pop
fadds
jle
jno
daa
mov
scas
in
inc
inc
inc
xchg
bound
iret
sub
sbb
aam
dec
xor
out
cmp
gs
dec
inc
outsb
sub
jno
jge
jno
xchg
pop
pushf
setbe
inc
fisubrs
adc
leave
pop
jb
jns
cmpsl
stos
add
je
mov
cmpsl
pop
cld
lock
mov
bound
cmp
shll
push
cwtl
imul
lods
cmpsl
sbb
daa
ret
adcb
mov
jmp
frstor
in
xor
xchg
push
inc
aaa
cmpsl
sbbl
pop
lret
sbb
add
dec
outsb
dec
sarb
jb
and
pop
sti
addl
pop
sbb
adc
push
xchg
pop
aam
and
bound
jo
insl
popf
and
imul
inc
outsb
xchg
xchg
dec
imul
inc
xor
mov
and
push
outsb
pop
scas
jns
adc
das
ljmp
adc
sbb
cmpsl
mov
aaa
mov
pop
and
jecxz
cmp
mov
xchg
cmp
popa
cmp
in
lds
sti
and
popf
mov
dec
fwait
les
sub
xlat
inc
in
out
cmp
dec
cmc
pusha
xor
mov
mov
jb
jnp
scas
shl
cmp
stc
cmc
popa
andb
cmc
mov
into
adc
mov
xchg
hlt
mov
lods
iret
lods
inc
loop
mov
sbb
stc
insl
repz
stos
pusha
ja
xor
sub
mov
or
adc
in
lock
mov
into
sub
and
cwtl
mov
fadds
test
rorb
cmpsl
pop
int
add
cmp
xchg
into
stc
jbe
daa
inc
inc
test
inc
jge
shrl
inc
loop
xchg
ja
xor
dec
into
jle
jno
adcl
mov
test
dec
dec
jnp
sbb
inc
aam
lahf
cmp
int
clc
pop
mov
sbb
xchg
loop
xchg
sbbl
sub
outsb
dec
pushf
iret
in
cld
shrb
rolb
mov
enter
add
dec
das
cmpsb
ret
dec
dec
loopne
cs
inc
push
and
cld
imul
add
test
test
outsl
mov
mov
adcb
sub
adc
cmp
jb
pop
pop
push
cld
cmp
out
push
shl
jmp
sub
cmp
sbb
xchg
sub
out
add
jl
adc
adc
or
and
mov
shll
test
arpl
hlt
xorl
adc
in
cld
pop
test
sub
cmp
jne
pop
xchg
insl
cmp
lds
jp
mov
jmp
and
sub
iret
insl
sti
inc
pop
xchg
cwtl
adcl
jns
popf
xor
je
pop
mull
addr16
xchg
mov
je
jmp
and
stos
in
add
mov
push
mov
mov
mov
ljmp
or
mov
inc
mov
sub
lahf
lock
not
lahf
or
adc
pop
dec
in
xlat
inc
add
push
lods
outsb
imul
dec
shll
mov
leave
jbe
xchg
mov
hlt
add
ja
add
xchg
lret
or
mov
lock
mov
mov
fbld
out
ja
outsl
mov
data16
jb
mov
sub
jg
mov
nop
pusha
mov
adc
push
push
xchg
cmp
mov
dec
leave
dec
sahf
cmpl
lret
adc
fldt
and
sbb
movsb
ret
xchg
addr16
cmp
dec
ret
adcb
jl
negl
mov
jnp
mov
and
int
loop
imul
xchg
repz
dec
jb
push
test
mov
sub
dec
jnp
push
pop
ss
pop
rorl
dec
ficompl
icebp
cmp
cltd
push
pop
test
add
insb
scas
shl
shrb
jg
sub
cmpl
js
in
jecxz
es
mov
lret
nop
mov
ja
sti
adc
ja
movsb
xchg
xchg
adc
into
fcompl
rorl
or
push
push
sbb
jns
or
cmpsl
icebp
in
fisttpll
ret
lods
popa
sbb
rclb
xor
arpl
xlat
xor
ret
mov
push
jmp
ds
ret
cmp
mov
popa
rcr
dec
cmc
dec
mov
ljmp
adc
sub
in
inc
in
js
insl
out
pop
shrl
test
std
icebp
sbb
gs
add
push
fsts
jae
xor
cwtl
das
pusha
je
mov
stos
jmp
push
test
fidivrl
pop
push
mov
pusha
cs
cmp
pop
or
push
gs
imul
sbb
out
je
jge
cmp
inc
scas
jp
or
int3
shll
stos
xchg
cmp
out
jle
lds
jmp
sub
sub
dec
push
fistpl
sahf
or
push
enter
sti
push
call
pop
xchg
ljmp
jb
pop
outsb
enter
mov
fcompl
rorb
lods
mov
or
sbb
lgs
adc
bound
xchg
cmp
xor
push
repnz
add
outsb
lock
sbb
push
out
mov
jge
push
sbb
or
push
lods
aas
cmp
push
push
cwtl
cwtl
mov
cmp
push
adc
fiadds
add
jmp
test
fwait
pop
dec
xor
out
jecxz
stc
and
adc
out
arpl
movsl
jg
jecxz
pushf
mov
adc
and
shll
cli
iret
lea
lods
inc
sub
popf
subl
arpl
test
outsl
sbb
or
sub
mov
cltd
popa
pushf
popf
push
add
xchg
cmp
das
xchg
add
push
lods
mov
ss
xchg
and
push
in
cmp
rol
jle
cmpsl
dec
les
xlat
andl
push
sar
fcomip
lret
dec
sbb
or
jnp
jno
lea
ret
rol
and
push
pop
adc
int
jae
lcall
xor
inc
pop
mov
or
sub
pop
lock
adc
lret
push
adc
ljmp
pop
sbb
rcll
cld
sub
adc
bound
fisttpl
ja
jle
dec
mov
iret
push
adc
leave
ss
mov
jmp
mov
movsb
dec
and
clc
xor
dec
repnz
rorl
pop
in
mov
lret
adc
fs
cltd
inc
pusha
out
pop
cmp
ds
repz
insb
int
movsl
push
sub
stos
mov
mov
or
mov
scas
lcall
je
fs
leave
mov
mov
sub
jg
pop
lock
movsb
sbb
ds
shll
je
cs
or
mulb
adc
push
cmpsb
divb
xchg
adc
ret
rcl
test
aas
cld
into
aaa
in
and
push
fwait
or
add
ret
fstpt
clc
lret
push
fisttpll
fldcw
push
mov
inc
fucomp
and
ljmp
dec
subl
aaa
in
sbb
aad
pop
arpl
and
int
ljmp
mov
mov
rorb
dec
sub
jle
mov
fdivs
movsl
es
xchg
loop
pushf
adc
lods
stos
jg
cmpsl
add
pop
mov
sub
insl
sbb
movsl
sub
addb
dec
adc
push
popa
jno
xor
pusha
int
adc
add
sbb
push
loope
sahf
or
test
rorb
push
xor
and
clc
loop
add
xor
pop
inc
repnz
inc
xor
je
sarl
int
inc
nop
out
mov
xorb
test
in
sahf
ja
xchg
cmc
stos
loope
sub
add
cli
xor
or
xorb
sub
das
dec
out
mov
in
inc
rclb
and
in
mov
repz
cld
pop
cmp
add
inc
aad
and
imul
jns
ret
jne
xchg
adc
outsl
dec
outsl
test
and
fnclex
xchg
xchg
loop
jno
add
std
cmp
or
imulb
push
call
mov
insl
xchg
adc
sbb
or
imul
xchg
cltd
cmpsb
in
jmp
mov
mov
push
mov
dec
ret
sub
imul
into
movsl
jp
push
mov
xlat
jge
scas
cmpsl
or
gs
bound
popa
loopne
dec
fs
jae
jg
leavew
pushf
aam
scas
inc
add
addr16
mov
adc
scas
stc
out
fmul
pop
into
aaa
mov
push
xchg
xchg
idivl
jl
and
xchg
loopne
and
jg
andl
fmull
jae
loop
arpl
les
stos
xor
outsl
inc
mov
dec
andnps
int3
fstps
sbb
fs
inc
cmp
inc
sbbb
idiv
insl
jno
xchg
loopne
pop
or
sub
jns
scas
setbe
out
add
sahf
push
push
int
jne
adc
xchg
dec
cmp
in
pushf
vaddss
std
or
imul
jecxz
bound
repz
loopne
cmp
mov
jp
aad
movsb
and
fcmovbe
arpl
xchg
pusha
pop
mov
popf
push
mov
scas
int3
fcmovnb
stos
mov
jge
push
outsb
mov
and
sbb
inc
xor
imul
mov
pop
jae
pop
in
int
dec
mov
cltd
xor
rorb
stos
imul
enter
jle
rcll
adc
loop
lcall
and
cmp
adc
scas
test
mov
jb
sbb
repz
clc
iret
push
or
jbe
aad
pop
mov
sbb
loop
cmpsl
aaa
out
je
cli
add
lock
mov
in
xor
shl
inc
sbb
outsl
insl
scas
out
out
inc
insb
aad
movsb
mov
cmp
cmpsb
jae
xchg
aad
sbb
xlat
faddl
imul
xor
add
push
ret
loopne
push
xor
xor
mov
push
adc
sarl
leave
fstl
addr16
jle
inc
ret
adc
sub
add
mov
adc
mov
insb
shr
mov
xchg
hlt
pop
cmp
mov
hlt
xor
xchg
loop
jle
mov
sub
sbb
dec
lret
movl
into
test
jl
xor
es
sbb
data16
pop
out
xor
daa
js
cmpb
popa
aam
imul
cmpsb
sub
xlat
or
add
mov
and
mov
test
arpl
mov
add
test
and
dec
ret
out
inc
out
cmp
das
lea
mov
jnp
fcmovbe
stos
adc
cmp
gs
outsl
mov
pop
je
les
xchg
pop
and
and
mov
dec
mov
aam
push
aas
cwtl
js
mov
insb
dec
xorl
jg
add
add
inc
sub
cmc
mov
xor
das
stc
es
xor
fcoms
inc
add
cmp
popa
call
dec
cs
loop
jns
pop
adc
in
orl
xor
je
sbb
repz
jb
mov
call
adc
sbb
dec
int
es
jle
push
xchg
fisttps
in
sub
icebp
xchg
adc
mov
sub
push
test
mov
adc
in
jbe
xor
stos
fsubl
fldt
mov
cmpsb
jp
jno
leave
stos
cwtl
shrb
sub
addl
sub
push
ja
popa
idivb
jmp
arpl
arpl
ljmp
in
inc
push
pop
lods
cmp
stos
inc
test
jmp
push
mov
cmp
dec
in
iret
das
jge
jecxz
repnz
addr16
gs
add
sbb
adc
lcall
xchg
sti
cmp
int
stc
inc
paddusw
insb
sbb
fists
jns
mov
mov
les
popa
out
iret
js
xchg
mov
enter
jo
mull
fnstcw
push
push
mov
jl
adc
out
mov
add
rcl
dec
add
pop
xchg
xor
mov
shrb
jae
jno
or
rcll
add
iret
scas
dec
fsubrs
dec
lds
jg
mov
decl
lcall
sub
ret
inc
sub
jecxz
out
cmpsb
rorb
popf
xor
leave
pop
in
mov
or
mov
in
rcr
pop
jg
sub
push
cmp
je
ret
popa
mov
or
or
jnp
or
push
fs
dec
repz
adc
cmc
lods
pop
mov
cmpsb
aam
out
mov
stos
mov
jl
loopne
in
mov
inc
test
lahf
dec
es
add
bnd
je
ljmp
lods
adc
movsb
outsl
pop
icebp
or
flds
andb
dec
add
and
xchg
in
les
pop
ds
mov
out
out
in
xchg
aas
sub
mov
insl
out
fnstenv
push
fwait
call
fiaddl
jno
cld
xor
jle
xchg
fsubs
out
jne
mov
jmp
inc
dec
int3
or
xor
push
out
jecxz
dec
mov
lods
mov
dec
jb
rclb
pop
pop
mov
mov
insl
adc
stos
js
shl
xchg
loope
mov
or
scas
stos
cmp
sbb
cltd
icebp
movsl
add
insl
xchg
clc
int
fchs
ret
aaa
cld
js
push
pop
lods
push
sbb
push
in
xchg
dec
mov
sbb
subl
and
pop
das
sbb
mov
out
mov
jno
pusha
cmp
mov
push
nop
mov
cmpsl
int
inc
je
xchg
addr16
mov
jno
dec
dec
adc
loop
into
mov
aad
mov
cmp
shrb
es
movsb
cmp
jae
cmp
jmp
fistl
inc
mov
push
add
jge
insb
mov
and
enter
repz
add
sub
fnsave
dec
daa
rcrl
push
or
jecxz
mov
insb
jmp
aad
mov
dec
mov
fistpll
push
stos
out
cmp
cwtl
cmp
cmp
adc
xor
inc
dec
mov
mov
out
sarl
push
adc
xchg
adc
enter
cmp
pop
mov
outsb
rcrb
pop
xor
jl
rclb
icebp
cmp
inc
pushf
push
in
in
test
inc
out
jecxz
sbb
loop
nop
popf
fldenv
call
or
test
imulb
ja
mov
insb
js
sbb
mov
or
aam
cli
jge
sub
add
mov
jge
or
push
inc
fistpl
aam
mov
jl
addb
sub
mov
imulb
jmp
or
pop
shl
inc
pusha
push
cmpsl
fwait
shll
mov
dec
cmp
ds
scas
cmpsb
push
mov
lcall
xchg
enterw
fcmovne
mov
ja,pt
jnp
jmp
xchg
icebp
pop
dec
into
faddp
lahf
cli
add
in
int3
xlat
mov
movsl
push
mov
cmpl
add
push
mov
or
jp
jge
outsb
fs
nop
adc
push
ss
dec
in
fnstenv
mov
ljmp
and
aam
cmp
lods
sbb
jbe
imul
mov
sti
sub
mov
mov
mov
jns
lcall
push
div
pop
int3
adc
mov
add
and
add
cmc
fldt
rol
mov
in
clc
xchg
mov
call
mov
hlt
sbb
faddp
negb
push
pop
test
ret
lds
mov
mov
sti
out
stos
adc
test
sbb
cmpsb
pop
pop
cmpb
mov
rcrb
mov
and
lds
mov
in
call
ret
sahf
pop
adc
insl
mov
or
fldt
insl
fildl
icebp
xchg
dec
fs
fcmove
push
stos
dec
sahf
scas
push
aam
cltd
movsl
xor
mov
add
addr16
and
jo
jmp
sbb
adc
mov
pop
outsl
les
in
cmp
jmp
xor
neg
mov
sbb
pop
fldcw
push
mov
and
and
into
fadds
push
jae
sbb
int
jmp
fnstsw
jge
arpl
inc
cbtw
mov
call
popf
andl
test
int3
jno
and
sbb
push
mov
mov
fisubrl
or
xchg
mov
call
movsb
cmp
jecxz
loope
test
loop
test
xor
mov
out
fmull
jmp
push
inc
cmp
push
outsl
jl
sbb
pop
mov
mov
dec
xchg
mov
mov
cld
loop
xor
jne
hlt
dec
cmp
mov
ss
cmp
adc
push
xchg
sarb
sub
mov
ljmp
adc
movsl
popf
gs
inc
pop
pop
repnz
lahf
mov
mov
pop
lret
cwtl
inc
sbb
outsb
jbe
pushf
pop
jp
mov
repz
bound
or
adc
sti
daa
mov
mov
andb
shl
je
je
stos
push
mov
add
lcall
insb
add
pop
dec
adc
pop
sub
sahf
std
loope
inc
dec
bound
pop
xor
test
shl
push
xor
sahf
adc
lock
and
lret
push
and
cmp
jae
call
and
add
mov
mov
inc
shl
popa
scas
es
sarl
repnz
mov
fcmove
aam
shl
inc
mov
fstl
mov
rol
mov
outsl
add
sub
loopne
add
lods
xor
cmpsb
in
or
pushf
cmp
mov
lea
mov
dec
mov
aad
cwtl
dec
jp
mov
add
inc
ja
adcl
cld
sbb
sub
xchg
and
enter
and
mov
dec
ja
inc
jmp
lds
mov
xor
add
sub
dec
sbb
sbbl
int
or
sbb
inc
push
sar
int
leave
and
js
lahf
xorl
xlat
add
mov
or
mov
jae
incl
jmp
dec
mov
sub
and
jns
sub
push
mov
jg
ret
cmp
hlt
mov
dec
das
fisttpll
fs
mov
scas
std
pop
jno
sub
ret
ret
lahf
jo
xchg
or
pop
adc
sbb
movsl
fsubrl
jbe
test
mov
mov
sub
mov
xchg
dec
push
pop
flds
lods
int3
xor
dec
mov
xchg
push
insl
inc
mov
orb
cmpsl
mov
pop
xchg
mov
mov
dec
inc
push
and
cmc
ds
ds
push
push
jmp
in
pop
mov
in
rorl
fcoml
movsl
outsl
mov
jle
pusha
mov
or
dec
repnz
inc
inc
adc
xor
inc
or
ja
ret
mov
and
aaa
or
inc
rorl
cmp
xchg
jmp
jae
inc
sbb
add
sbb
dec
mov
sbbl
dec
sub
dec
and
mov
jge
add
repz
sub
fiaddl
push
in
mov
lods
aam
xchg
pop
dec
mov
push
out
pop
fdivrp
loope
pop
jecxz
mov
xchg
and
xchg
sub
pusha
lds
mov
inc
xor
xor
mov
inc
add
xor
sbb
lahf
jg
sbb
add
pop
push
jne
addr16
mov
push
jmp
dec
xchg
sub
xor
xor
add
cmpsl
icebp
aas
sub
jae
cmp
jne
xchg
jle
push
dec
test
shr
sbb
mov
cli
and
mov
adc
sbb
xchg
mov
pusha
xchg
jmp
mov
mov
aaa
pushf
leave
fwait
jge
xchg
loop
jne
rcl
pop
xor
outsb
jb
sub
jmp
cmp
dec
shll
adc
mov
push
roll
dec
popa
rcrb
shl
add
sub
sbb
lret
lret
adc
pop
sbb
jae
or
sbb
movsb
xor
fildl
test
jnp
mov
inc
inc
xor
adc
mov
imul
pop
and
push
je
dec
js
mov
popf
shll
jmp
jo
movsl
xor
jg
inc
cli
dec
push
loope
xchg
das
es
xor
adc
mov
add
mov
scas
aad
xchg
pop
sbb
inc
jnp
dec
iret
rcrb
insb
insl
adc
mov
adc
popf
add
mov
inc
into
in
daa
enter
stos
jnp
or
into
add
mov
mov
push
fs
adc
xlat
mov
mov
test
sub
sub
add
pop
and
lock
add
cmp
ja
mov
cmpsb
or
divb
cmpsb
push
jbe
cmpsl
shll
push
pop
xlat
jmp
ret
add
jnp
xchg
push
xor
jnp
jl
pop
xor
icebp
dec
call
inc
xchg
scas
pop
cltd
pop
add
fdivs
jb
or
lock
add
in
sbb
xlat
clc
adc
mov
je
stos
add
daa
aaa
dec
mov
lret
test
stos
jne
add
jg
fsubrl
addr16
push
loope
fwait
lods
inc
xchg
mov
fdivrl
mov
add
and
aaa
scas
jmp
leave
mov
dec
int
dec
rcl
mov
jle
push
xchg
dec
or
xor
fsts
fisttps
into
out
sbb
mov
mov
dec
push
dec
fdivr
scas
pusha
vpor
cld
fsts
rol
cli
jle
in
inc
push
mov
pop
or
mov
insl
repnz
xchg
push
icebp
adc
add
lea
xchg
adc
xchg
out
dec
mov
push
aad
mov
jo
xor
rclb
xchg
cmp
jo
in
add
xor
adc
inc
and
or
or
sbb
out
rorb
movsl
lcall
sub
les
lea
mov
mov
cmp
icebp
push
push
mov
out
push
fs
xchg
add
aas
xchg
jb
lods
in
ss
fimuls
mov
cli
xchg
sub
bound
les
sub
push
jmp
jle
pop
out
adc
xchg
clc
jns
cmpsb
mul
sbb
fisubrl
fwait
lea
push
add
mulb
xor
and
enter
jns
scas
mov
nop
mov
fisubl
sbb
pushf
pushf
adc
ret
arpl
cmp
int3
jne
leave
outsl
mov
ss
fcoml
icebp
aaa
je
out
stos
test
mov
mov
xor
mov
mov
mov
push
pop
or
fistps
push
jecxz
push
mov
xchg
cld
lret
loopne
jge
fcoms
or
lds
xchg
stos
push
mov
lods
out
pusha
push
nop
inc
int3
sbb
clc
dec
adc
mov
push
pusha
call
sti
lock
scas
xchg
mov
mov
les
imul
jp
outsb
or
inc
std
call
xchg
scas
loop
mov
fnsave
and
cmp
xchg
jmp
scas
sarb
ja
sub
iret
lock
mov
dec
xor
add
popa
jp
sar
adc
pop
xor
repz
movsb
mov
cmp
outsb
fstpl
es
sti
mov
clc
sbb
filds
pop
mov
cmp
mov
pop
xchg
ds
pop
push
xor
jle
or
or
andb
inc
and
push
addl
addr16
sti
mov
cmp
add
jbe
rorl
sub
out
sub
sbb
jge
call
and
add
sti
test
sbb
jp
sub
mov
cmp
lahf
jle
xchg
orl
data16
xchg
in
idivb
push
cltd
addr16
fs
sbb
push
pop
ja
sti
add
mov
repnz
arpl
mov
adc
movsl
adc
shrl
sti
mov
cmp
nop
call
cli
cmpsl
cmp
pop
or
ds
clc
mov
nop
xorps
and
add
jmp
fnsave
sub
push
mov
push
outsb
scas
ja,pt
les
mov
mov
mov
sub
mov
cltd
fstpt
rorl
adc
loope
pop
sub
dec
xlat
and
cmp
pop
call
mov
pop
mov
mov
leave
ret
adc
dec
test
outsl
xchg
testl
mov
xor
incb
call
lahf
xor
pop
mov
cmpl
shll
adc
js
adc
int
rcll
test
adc
push
mov
cmp
push
out
sti
insb
pop
cmpsl
mov
dec
inc
test
push
scas
dec
aam
add
jnp
out
incl
jnp
mov
gs
test
xor
sub
mov
repnz
in
out
mov
mov
pop
incb
subb
lcall
in
jnp
xor
and
jbe
iret
jbe
leave
pop
fsts
pop
mov
lods
sub
ss
bound
pushf
lret
ja
pop
pop
push
push
mov
jns
xchg
nop
bound
sub
pusha
and
xchg
arpl
cmp
mov
inc
sub
jnp
mov
in
loop
test
inc
add
insl
sbb
pop
mov
add
lcall
icebp
mov
test
addr16
pop
cs
cwtl
xchg
xchg
jecxz
out
push
jns
movsl
add
cmpsl
mov
mov
and
jge
test
push
imulb
sbb
test
pop
mov
mov
out
testb
dec
clc
data16
icebp
ficoms
jno
les
inc
repnz
loopne
loope
pusha
sub
repz
ret
loopne
insb
or
js
in
mulb
or
sahf
cmpsl
pusha
lock
rorb
in
inc
add
add
shll
mov
loop
mov
cmpsb
jnp
push
data16
and
ret
out
adc
mov
mov
pop
stos
xchg
adc
xchg
mov
test
jmp
mov
mov
dec
dec
xchg
test
sbb
les
lahf
adc
pop
and
mov
push
lea
in
push
add
fnstenv
rclb
ret
sbb
xor
or
lcall
mov
xlat
dec
hlt
dec
sub
stos
jno
lds
jg
lods
aad
jge
shrl
ss
mov
pop
js
jae
xchg
and
cmpsb
js
adc
mov
inc
xchg
mov
aas
decb
imul
dec
loop
enter
lret
sub
test
stos
or
inc
sbb
add
mov
lcall
inc
jl
adc
jno
mov
call
push
fildll
lret
sub
lahf
dec
movsl
sub
test
cmp
ret
aad
mov
stc
mov
lret
lods
sub
inc
into
jo
and
and
xchg
cld
push
jl
or
repnz
in
les
xor
data16
inc
mov
out
sahf
insl
add
adc
add
imul
repnz
out
xchg
loopne
mov
or
jo
mov
stos
adc
push
test
push
fucomip
add
and
jo
mov
fidivrl
popf
pop
mov
clc
popf
inc
fsubs
inc
in
push
sub
sub
test
xor
mov
pop
movsl
outsl
imul
xchg
pusha
shrb
mov
jae
adc
mov
sti
insl
mov
ret
aad
mov
fs
xchg
imul
cmp
and
xchg
das
outsl
outsl
addb
xchg
mov
adc
sbb
xlat
out
adc
icebp
in
iret
ja
fsubr
dec
xchg
aaa
icebp
dec
push
mov
push
cmc
mov
fsts
cs
dec
mov
cltd
add
add
pop
push
fs
inc
loop
xchg
cmp
call
mov
lock
orb
jg
inc
mov
mov
popa
jbe
popa
test
outsb
mov
inc
cltd
pop
pop
sbb
push
add
shll
push
mov
test
mov
cmp
lahf
mov
scas
xchg
imul
inc
add
int3
call
fiadds
xrelease
sub
adc
mov
jp
xchg
in
mov
sbb
lock
xor
out
dec
clc
movsb
call
lcall
call
xchg
push
fidivrs
xorb
xchg
add
cwtl
xor
fstl
mov
icebp
adc
xchg
jge
mov
mov
repnz
enter
pop
stc
shlb
aam
add
mov
adc
inc
jge
push
mov
imul
vpcmpeqw
xchg
lods
sti
push
inc
mov
mov
lcall
inc
fwait
xchg
es
inc
out
xor
mov
mov
add
cmova
mov
or
lret
dec
cmc
aaa
adcl
nop
out
int
sbb
dec
pop
mov
movsl
in
mov
mov
testb
jno
xchg
jle
pop
cltd
movsl
sbb
mov
subb
inc
push
sbb
mov
xchg
roll
lock
inc
cmp
push
bound
or
out
das
in
pop
add
aas
push
arpl
mov
xchg
dec
daa
pop
stos
sbb
jg
aam
aas
insb
pop
xchg
in
cwtl
mov
sbb
and
insb
pushf
dec
mov
lea
mov
pusha
dec
sbb
sub
hlt
push
and
pop
notl
sbb
out
mov
mov
in
cmpsl
daa
ds
mov
roll
int
xor
inc
pop
stc
ljmp
cmpsb
repz
cmp
fmuls
repz
inc
add
mov
lods
sbb
xor
xchg
xchg
cmp
dec
mov
mov
icebp
sbb
inc
sbb
loop
loope
mov
or
mov
add
add
xchg
outsb
mov
filds
into
in
fxtract
in
pmulhuw
and
mov
addr16
xor
leave
pop
or
repz
dec
in
add
icebp
outsl
sti
lea
cmp
fsubs
xor
mov
ror
adc
enter
test
mov
add
mov
lcall
mov
in
cmpsl
shl
cmpsb
inc
scas
push
cmc
enter
insl
xor
or
xchg
pop
loopne
cmp
cltd
ror
cmpl
sub
mov
add
loop
test
test
jo
lea
push
pop
cli
mov
ss
repnz
cli
clc
xorb
mov
shll
or
sbb
insl
std
dec
roll
sbb
lds
outsl
ret
xchg
xor
movsb
adc
sbb
inc
jle
sub
shll
mov
lret
sub
lds
push
jp
int
int3
mov
imul
or
stc
in
out
jl
jg
add
jmp
xor
insb
out
inc
jae
repnz
enter
cltd
js
sbb
mov
pop
leave
add
jp
inc
out
push
mov
push
add
cltd
iret
out
sbb
arpl
cmp
mov
lea
mov
inc
out
adc
dec
jmp
xchg
mov
adcb
shrb
sbb
mov
xchg
jl
or
std
shrl
cmc
aad
iret
lods
scas
mov
adc
adc
out
ret
out
test
add
jne
cmc
fwait
push
jne
mov
mov
mov
adc
insb
enter
and
mov
xlat
dec
inc
fldt
pminsw
dec
fcmove
imul
ret
je
dec
rol
outsl
add
jnp
dec
adc
xchg
lea
addr16
mov
lea
xchg
mov
sub
push
sbb
les
js
jmp
sub
das
pop
mov
jle
rcrl
pop
fwait
pusha
jmp
cld
add
es
jns
pop
ja
mov
sbb
test
lods
not
and
pop
sbb
lods
test
pop
or
dec
push
inc
leave
pop
xchg
jg
dec
fisubrs
cmp
aaa
push
mov
pop
andl
and
test
je
divl
xchg
sbb
or
mov
sub
sub
sub
in
pop
rorb
cmp
push
arpl
dec
adc
hlt
test
fsubl
sub
jae
sbb
in
cmpsl
xchg
mov
js
push
adc
add
push
lahf
popf
fsubl
jnp
insb
int
sarb
fldt
pop
in
dec
lock
mov
jle
add
lahf
mov
inc
mov
xchg
arpl
adc
jnp
subl
lret
ss
push
in
insl
sbb
push
out
inc
je
pusha
adc
sbb
cmp
push
xor
cmp
push
nop
enter
movq
je
sti
mov
nop
cmp
add
nop
xor
frstor
jge
sub
je
inc
aad
mov
and
adc
aad
outsl
pop
add
xor
xlat
mov
outsb
cs
inc
fdivrs
jecxz
xchg
lods
enter
cli
fs
iret
ret
loop
cmp
adc
inc
movsb
adc
in
sub
dec
mov
leave
loope
pop
lock
fmul
fildl
loopne
inc
pusha
movsl
iret
inc
and
push
add
pop
xchg
inc
xchg
jne
or
pop
mov
or
inc
lret
and
out
mov
iret
gs
jo
dec
pusha
sub
rcll
inc
mov
out
dec
repz
gs
testb
and
push
rolb
outsb
or
test
insb
scas
add
mov
ret
les
jns
enter
adc
push
xor
cmpsl
or
stos
ficoml
dec
je
enter
aad
mov
inc
pop
inc
pusha
mov
mov
call
mov
je
hlt
sbb
xchg
data16
mov
div
jnp
xchg
inc
and
movsl
mov
xchg
or
stos
add
mov
shll
test
or
test
std
scas
adc
out
dec
movsb
adc
fnstsw
cs
dec
ret
xchg
cmp
xor
sbb
ds
aaa
dec
mov
push
mov
arpl
add
xor
add
push
aam
lea
int3
repnz
cmp
aam
mov
or
add
push
mov
mov
pop
cmp
loope
fs
fimull
jg
add
dec
or
or
xor
pushf
lcall
out
add
inc
pusha
out
clc
imul
fidivs
push
movsb
popf
cli
sbb
scas
mov
fwait
and
lret
insb
inc
les
push
jle
sbb
repz
push
mov
shlb
test
pusha
lcall
test
mov
xor
loope
pushl
ss
push
mov
mov
xor
rcrl
shll
pop
outsb
imul
xchg
pop
js
popa
inc
aam
sarl
pop
shlb
mov
pop
adc
out
insb
push
push
cmp
int
sbb
stos
adc
popf
sbb
sahf
ja
int
popf
push
les
jl
insb
ret
negl
lods
pop
and
clc
cmpsl
fdivp
or
fistpl
xchg
xchg
xchg
sub
sub
xor
hlt
add
mov
popf
adc
fcoml
pop
cli
enter
sbb
or
fnsave
jg
imul
jp
jae
jecxz
inc
cmp
lret
and
shrl
pop
mov
dec
jle
mov
out
push
cmpsl
loopne
dec
test
in
mov
pop
push
data16
pushf
add
jecxz
dec
icebp
mov
pushf
mov
or
add
push
mov
push
mov
or
jb
dec
cli
shll
xchg
jecxz
adc
pop
lea
sahf
loop
mov
jns
pop
push
sbb
dec
mov
mov
mov
jmp
popa
out
cmc
dec
leave
out
inc
jno
dec
inc
cmc
call
insl
mov
jmp
call
ficomps
ljmp
cld
insl
ds
lock
inc
mov
stos
or
aad
push
push
add
orl
xor
cmp
pop
stos
push
test
fsubrs
xchg
clc
cmp
fisubl
mov
nop
inc
sbb
push
addr16
pop
ss
xchg
mov
ja
add
jae
shll
adc
push
shll
pop
sbb
adc
in
rolb
adc
movsl
mulb
fisubrl
data16
imul
iret
inc
and
cmp
pop
mov
out
push
loop
inc
aam
push
test
dec
fsubr
jb
adc
popf
lcall
add
mov
je
push
insb
xchg
mov
inc
adc
and
xchg
add
loop
inc
shll
out
out
push
repnz
and
ds
repz
push
std
mov
cmp
mov
push
fisubrs
mov
aas
mov
push
mov
sti
repz
mov
mov
fcompl
dec
lea
adc
and
or
mov
insl
sbb
xchg
xchg
push
negl
pusha
dec
xchg
test
das
and
cmp
xchg
daa
aad
xchg
pop
iret
mov
aas
cmp
push
jns
add
mov
ljmp
ss
test
adc
mov
sbbl
leave
mov
cmp
test
aas
sub
mov
sahf
or
cmp
cmp
addr16
sub
leave
mov
shl
sbb
inc
aaa
jne
jbe
or
pop
testl
mov
clc
iret
mov
test
jge
pop
add
jecxz
inc
xchg
imul
sti
sub
cmp
mov
sbb
mov
and
iret
fwait
xchg
jb
scas
and
mov
icebp
iret
in
or
cmpb
ret
adc
add
repz
rolb
pop
fisttpll
and
in
push
lcall
mov
adc
xchg
stos
or
ss
add
adc
jbe
sti
push
cwtl
mov
push
push
mov
movsb
in
cwtl
xchg
mov
add
rclb
and
mov
lods
sub
sbb
mov
push
push
sub
inc
jmp
adc
lret
rcrl
jp
shll
out
sub
xor
pop
les
test
add
and
and
cmp
mov
cmp
mov
add
in
ret
mov
cmpsb
outsb
fwait
shlb
push
add
mov
sub
fidivl
ja
loope
mov
movsb
xchg
xchg
xor
ret
adc
leave
pop
add
not
imul
daa
lcall
cmp
sbb
cli
lds
cmc
fisubl
aam
jae
shr
lods
adc
xor
stos
lock
movl
inc
or
lret
sti
mov
pop
out
stc
xor
stos
addl
sub
or
hlt
iret
cwtl
mov
mov
xor
in
push
adc
push
dec
pop
or
xchg
enter
shl
arpl
mov
pop
mov
rclb
sahf
insl
jge
dec
pop
mov
sbb
jbe
sub
mov
ret
fsubrl
add
loopne
nop
lock
daa
mov
out
pop
pop
or
and
mov
pop
jp
test
jge
scas
in
push
cmp
and
popa
xor
xlat
or
adc
mov
xor
loope
ret
std
pop
push
fdivrl
push
fstps
and
xchg
loopne
sbb
out
notb
xor
add
sub
jno
imull
xlat
dec
xchg
negl
sub
rorl
cwtl
sub
call
shll
and
es
scas
add
rclb
les
popa
xor
clc
loope
mov
push
imul
call
popf
and
mov
das
enter
xor
push
jle
xchg
push
pop
cmc
orb
push
subb
lods
dec
sbbb
aas
fldl
out
aas
out
push
lods
lods
test
aam
and
addb
inc
sarl
sarb
jg
out
mov
stc
sub
adc
dec
cmpl
xchg
add
and
and
pop
push
lods
xchg
lret
or
popa
movsl
fstp
movsl
arpl
cmp
jnp
push
push
xchg
fwait
outsl
xor
popf
mov
lds
repnz
push
fcmovnb
scas
inc
in
lods
stc
dec
add
cmpsb
xchg
pop
popf
stos
dec
aaa
inc
enter
xchg
mov
or
xor
stos
xor
mov
mov
sub
mov
out
hlt
inc
scas
aad
mov
lock
pop
xlat
mov
dec
xor
xor
pop
xchg
dec
adc
cmp
popf
outsl
dec
xchg
fistl
sbb
ret
iret
stc
aaa
shl
dec
pop
xchg
jne
jmp
cmpsl
fidivl
in
add
jns
xor
cmc
xlat
out
insl
imul
shl
lcall
sbb
xor
push
mov
push
pop
xor
inc
cmc
jle,pn
icebp
cmp
push
ja
call
leave
cwtl
sbb
dec
ljmp
xchg
bound
or
jg
jbe
cmp
dec
push
filds
cmp
inc
loope
mov
push
sub
aaa
pop
or
sub
jle
das
mov
jns
dec
clc
cmp
pop
stos
pushf
aas
rorb
fnclex
mov
sbb
das
cmpl
or
loop
test
fadd
out
pop
inc
leave
add
xor
add
sbb
jo
insl
mov
insl
data16
xchg
pop
lea
in
pop
call
inc
and
xchg
or
mov
xor
popf
push
fwait
cmp
sbb
mov
ljmp
cmc
mov
xor
aad
jbe
add
imul
jbe
mov
and
sub
ljmp
push
push
jbe
xchg
push
fldenv
std
rol
mov
in
pop
loopne
lahf
mov
ja
test
fnstcw
pop
sti
cmp
mov
loop
mov
das
repnz
pushf
sub
fs
jmp
sbb
daa
stos
lock
fidivrl
mov
add
jbe
jns
dec
ja
je
sbb
int3
push
out
jae
daa
sub
mov
jo,pn
repz
sbb
xor
ja
scas
mov
into
push
dec
stos
cmp
out
adc
and
jb
pop
outsb
pop
ss
or
xchg
lcall
pusha
rcl
psubq
pop
gs
push
test
mov
xchg
out
shlb
into
imulb
xor
cmp
rorl
xchg
pop
int
fadd
mov
mov
xor
jmp
out
pushf
std
xchg
in
fstpt
mov
in
mov
testl
dec
xor
push
sarl
enter
nop
xor
stc
int
in
lcall
sbb
add
xor
nop
and
incl
pop
sbb
push
fwait
movsb
xor
sbb
fisubrl
loop
xchg
jbe
inc
mov
jmp
mov
iret
and
pop
cmp
adc
divb
mov
jg
inc
icebp
xchg
mov
into
xchg
cmpsl
pop
popa
mov
mov
fst
test
or
xchg
loope
mov
jae
push
icebp
stos
sub
mov
lret
ss
shr
mov
mov
sahf
imul
aad
shl
jb
push
gs
sbb
out
or
out
sub
hlt
arpl
lods
lock
mulb
push
mov
imul
into
push
xor
insl
xchg
or
cmpsl
je
out
sbb
push
jg
pop
rcrl
mov
mov
mov
cmp
rclb
or
dec
movsl
sub
xchg
push
aad
sbb
xchg
mov
aas
les
movsl
aad
faddl
int3
push
iret
into
pop
adc
add
mov
nop
rorl
pop
push
sti
sub
or
mov
mov
in
jno
cltd
insb
outsl
leave
ja
js
fidivrl
ss
dec
cmp
push
add
inc
icebp
in
leave
loope
sti
repz
insl
ret
mov
stos
xchg
mov
outsb
stc
addr16
push
mov
fnstenv
ret
jp
mov
mov
xchg
outsb
pop
dec
insb
cld
sub
daa
xchg
push
test
jo
jp
ljmp
loopne
push
adc
jle
pop
cmp
fisttpll
int3
in
rcpps
xlat
mov
aaa
outsb
sub
in
add
int
mov
add
mov
push
xchg
mov
xchg
ds
dec
mov
in
sbb
add
mov
insl
mov
xchg
gs
mulb
mov
test
imul
cmp
cmpsb
push
xchg
mov
repnz
loopne
gs
jecxz
jmp
sbb
jge
cmpsb
inc
fnstcw
in
pop
fs
out
addr16
sub
rcrl
pop
pop
leave
or
cmpsl
adcl
notl
insl
mov
push
outsl
nop
and
rorb
out
negb
scas
xor
push
xchg
into
dec
nop
push
rclb
dec
mov
enter
mov
movsb
in
push
jmp
mov
daa
sbb
push
fs
mov
sub
xchg
xchg
rcrb
fs
mov
push
sti
push
mov
jl
sub
fwait
dec
cmp
test
jno
add
pop
xchg
pop
jb
xchg
xchg
rcrl
ret
dec
inc
mov
mov
mov
mov
int3
pop
iret
or
jae
jno
mov
pusha
out
repz
mov
sub
mov
xchg
insb
xchg
stos
movsb
xchg
lods
mov
push
xchg
hlt
mov
push
test
mov
adc
std
fistps
aad
std
shlb
mov
shl
js
xchg
mov
or
insb
mov
les
mov
loopne
int
loopne
cwtl
out
sub
mov
pusha
aas
stc
insb
push
sub
cwtl
movl
ret
pop
dec
mov
pop
or
in
out
push
cld
fdivs
adc
ret
push
xchg
ret
and
xor
xchg
js
aas
inc
hlt
iret
pop
jle
jno
lea
movsl
xchg
aas
out
mov
sahf
push
idivb
mov
mov
jnp
pop
pop
test
xor
in
loope
or
pusha
push
pop
test
leave
mov
jle
icebp
push
add
arpl
fldl
call
jp
xor
decb
xor
arpl
in
stos
mov
push
jns
push
jnp
jo
int
dec
mov
enter
mov
in
rorl
sbb
jge
lods
ds
inc
rclb
jno
xor
adc
faddl
test
jb
jae
out
push
ds
mov
inc
stc
xor
mov
jns
fsubrl
lret
js
mov
js
hlt
mov
pushf
add
and
xor
cmpsb
sbb
push
jae
cmp
cmpsl
xor
pop
xchg
fadds
push
sub
jo
cmp
andb
arpl
outsl
dec
aam
xchg
sti
fisttps
mov
jl
js
aas
mov
push
rol
cli
jno
mov
ficompl
dec
xor
cltd
mov
cld
shrl
xor
cmp
outsl
imul
loopne
push
dec
ret
push
jae
int3
add
and
negl
lahf
inc
gs
sub
orb
sbb
in
jo
add
aaa
std
les
bound
push
xor
les
pop
testl
out
cmp
stc
xchg
mov
sbb
nop
inc
test
adc
mov
jp
int
mov
scas
jmp
and
int3
xor
jle
cmp
lds
lea
fbld
fcoms
mov
cltd
or
mov
adc
repnz
fistpll
mov
fbld
ljmp
inc
push
sahf
mov
mov
mov
adc
sub
mov
scas
es
mov
icebp
pop
hlt
rorb
fisttpl
xor
mov
push
aaa
mov
in
add
int
daa
pop
sbb
sbb
sti
shll
imul
rorb
es
mov
mov
or
pop
test
adc
or
test
mov
nop
je
lds
scas
cmp
fdivs
cltd
out
je
aad
mov
fwait
mov
cmpsb
lds
pop
cli
push
fildll
sub
cmp
mov
insl
mov
sbb
cmp
or
jmp
psubb
sbb
cmp
push
repnz
and
les
xor
sti
das
push
enter
int3
xchg
sbb
and
std
push
and
sub
repnz
jns
pop
cmp
push
mov
pop
adcb
imul
push
add
cmpsl
pop
lods
inc
push
das
test
push
mov
loope
push
pop
push
dec
movsl
push
xor
adc
outsb
test
fists
pop
scas
dec
pushf
push
lods
xchg
das
mov
adc
and
mov
mov
enter
pop
adc
outsl
or
push
sub
mov
int3
stc
pushaw
mov
daa
insb
ja
or
mov
push
imul
add
shll
arpl
push
add
pop
pop
sub
int3
adc
push
stc
push
xchg
inc
or
sub
nop
xchg
xchg
pop
mov
push
mov
xchg
xchg
sub
cmpsb
jp
add
cwtl
mov
jne
xor
sbb
scas
jb
aas
cltd
loope
in
rcrl
aad
jns
xor
dec
cmp
repz
cmpsl
mov
mov
fstpl
xor
gs
loopne
mov
sar
pop
push
js
dec
jb
dec
mov
sub
sarb
mov
mov
mov
mov
or
add
orl
loop
cmpsb
or
dec
mov
and
jne
stos
sbb
add
xchg
mov
ss
inc
mov
data16
sbbl
test
xor
jae
push
push
sub
xor
pushw
cli
adc
add
jne
dec
fldt
dec
stos
fsubs
sbb
popf
rcll
insb
jno
cmpl
and
mov
xchg
shlb
inc
or
adc
pop
xchg
mov
lea
pop
cli
adc
in
loop
mov
out
and
cmpb
add
fcoml
adc
in
or
je
and
cltd
pop
mov
iret
mov
cli
fdivp
pop
mov
sbb
mov
cmp
in
sbb
xchg
les
into
mov
sub
xchg
jmp
mov
frstor
nop
in
jno
stos
mov
cmpsl
push
push
in
jno
mov
jo
dec
jmp
inc
xorl
rcl
xchg
gs
push
in
fistpl
sarl
sar
sbb
test
je
orb
push
mov
pop
outsb
sahf
cmp
fisubrs
inc
mov
aas
push
and
addb
pop
push
jmp
insb
popf
jge
enter
movsb
pop
jmp
mov
lahf
or
ljmp
mov
dec
andb
cmp
jmp
mov
or
in
ja
push
pop
push
inc
dec
jmp
scas
or
sbb
negb
pop
rcll
fadd
std
test
sub
jns
push
test
add
cli
into
aam
out
imul
mov
icebp
or
mov
dec
jle
dec
sbb
sbb
inc
mov
sub
in
add
or
cwtl
popa
jb
fidivl
pop
xchg
subb
in
and
fisttps
mov
cmpsl
xor
sub
test
cmp
movd
adc
cwtl
dec
out
push
lret
pusha
test
adc
lret
xchg
adc
loopne
xor
and
loopne
xor
xchg
push
sub
push
adc
mov
push
adc
decb
cli
in
xchg
lahf
pop
add
and
data16
and
sub
rcr
lods
in
push
iret
call
repnz
adc
arpl
int
fnstsw
push
in
xchg
sti
in
push
add
push
jl
xchg
loop
movsb
inc
js
pop
cmp
push
xchg
clc
insb
shll
in
add
lods
cli
leave
adc
sbb
mov
js
push
jns
hlt
mov
mov
repnz
push
pop
or
es
iret
xor
push
adc
dec
push
dec
jno
cli
xchg
push
stos
mov
pop
ljmp
fucom
inc
mov
cmp
pop
fmulp
push
mov
stc
mov
lahf
aam
add
or
dec
dec
push
pop
lds
imul
js
jp
mov
mov
sub
xor
jb
xor
fisubl
xchg
scas
add
loope
fcoms
inc
or
cmp
lcall
mov
pop
xor
inc
pop
sub
cmp
mov
cli
in
xor
psubq
rclb
lahf
nop
in
inc
in
add
inc
xchg
mov
push
cmp
sbb
inc
cmp
dec
out
leave
std
jno
xor
add
fs
jo
inc
pop
stc
adc
pop
or
mov
inc
cmp
dec
push
loopne
cmp
pop
bnd
push
std
mov
mov
pop
rol
jns
jns
or
push
or
xchg
test
sub
icebp
adc
or
or
and
pop
push
pop
mov
lret
cs
js
mov
subl
aam
orl
stos
xchg
arpl
pop
and
aas
or
push
popf
outsl
mov
std
out
jge
loop
cmpsl
push
jb
sub
ret
das
fcompp
loope
xorl
imul
mov
mov
xchg
clc
mov
sarb
adc
je
mov
mov
jle
ljmp
imul
cmp
sub
ljmp
xlat
lds
pusha
lea
xor
sub
sahf
sbb
enter
int
into
cs
fidivl
stos
mov
cltd
cmp
dec
ret
dec
sbb
jecxz,pt
xor
mov
movsb
jmp
dec
dec
pop
push
jne
push
mov
adc
cmp
xchg
jmp
imul
int
jns
push
movsl
xchg
dec
and
pushf
out
mov
rcll
lret
pop
lock
mov
loopne
daa
pop
dec
into
sub
test
jge
sbb
push
inc
push
popa
loop
mov
in
out
push
and
divl
shr
adc
mov
mov
xor
mov
mov
push
xchg
leave
and
sbb
mov
test
cli
mov
rorb
loopne
or
scas
lcall
arpl
call
or
add
mov
adc
stc
lcall
lods
cmp
mov
pop
cld
fwait
jecxz
enter
cli
jb
pusha
pop
dec
sbb
movsb
je
aad
aam
addr16
inc
cmp
push
pushf
std
mov
pop
mov
jmp
dec
pop
pop
ret
or
outsb
aas
lahf
aas
sub
push
jnp
push
or
push
ja
mov
adc
ljmp
insl
mov
adc
out
inc
sbb
frstor
mov
mov
rorl
bound
sub
or
ror
dec
jg
fld
xor
cmc
std
stos
pop
imul
cwtl
pop
adc
and
sub
out
ja
jno
imul
adc
xchg
dec
or
test
and
inc
loope
mov
test
cli
lahf
push
xchg
or
mov
shll
ja
out
jp
add
pop
pop
and
xchg
sbb
jl
imul
mov
jp
es
mov
rorl
out
jns
sbbl
mull
rclb
pop
sub
xlat
adc
cmp
mov
xor
add
or
inc
repnz
push
in
ljmp
mov
out
es
jmp
dec
sbb
mov
stc
jmp
incb
cmc
mov
scas
test
xchg
mov
and
ds
fstpl
sub
sbb
mov
repz
repnz
dec
fs
sub
dec
add
mov
mov
push
leave
dec
icebp
enter
pop
mov
mov
adc
inc
cmp
dec
lods
add
dec
mov
mov
mov
aaa
leave
mov
outsl
push
inc
cmp
lea
incb
sbb
lods
shrb
ja
xor
jg
outsl
sahf
shll
repz
adc
outsl
mov
fwait
dec
mov
fsts
push
hlt
inc
pop
call
push
lea
cmpsb
pop
adc
adc
dec
xchg
dec
js
cltd
insb
popf
inc
arpl
jo
fists
push
inc
xchg
cmp
mov
insl
stos
cld
cmp
lret
lret
addr16
mov
aad
xchg
mov
sub
ss
loope
out
push
int3
sub
push
outsb
pop
inc
pop
mov
jbe
add
push
pop
hlt
cmp
fstpl
adc
push
jmp
sub
sbb
sbb
inc
pop
aad
lret
pop
out
fdiv
int
and
movsb
je
jl
inc
pusha
fstps
scas
mov
cmp
cmp
cld
adc
xchg
mov
or
movsb
mov
xchg
sbb
mov
mov
clc
add
ds
shrl
pop
push
call
xor
cli
pushf
add
or
stc
popa
xchg
xchg
fstpt
xor
int
cmp
in
mov
jle
int3
lret
aam
nop
loopne
sub
mov
test
lret
adc
fbld
xlat
jle
loop
xor
sti
xchg
push
adc
jge
push
jno
sbb
sub
into
addl
aaa
rcl
in
imul
mov
aam
ljmp
and
cmpsl
movsb
or
pop
adc
ja
lcall
enter
nop
xchg
int
ficompl
jo
es
lahf
push
adc
push
roll
out
mov
jne
sahf
lods
inc
mov
ja
aam
insl
mov
enter
jl
push
jle
xchg
es
mov
mov
daa
test
mov
cmp
sti
jecxz
jl
push
aaa
cmp
jno
out
mov
stc
xchg
pushf
pop
inc
pop
sub
cmp
imul
shll
fisttpll
push
xchg
adc
pop
pop
cmc
mov
and
xor
insl
enter
pcmpeqb
dec
lret
mov
jb
mov
pop
lods
jnp
out
push
mov
movsl
inc
inc
cltd
or
lcall
cmp
add
loopne
cwtl
adc
push
xor
push
push
xchg
xchg
js
imul
xchg
lret
fisubl
out
xor
jecxz
sarb
fisttps
outsb
movsb
cld
cltd
mov
mov
mov
cld
movsb
jo
mov
push
leave
es
daa
ja
icebp
aam
adc
ds
in
mov
jbe
cmpsl
mov
int3
ret
add
add
pop
inc
inc
pop
out
or
add
imulb
pop
push
mov
dec
test
daa
sub
in
movsb
es
insb
fisubs
mov
cs
fdivrl
ret
add
fld
repnz
aam
into
pop
frstor
dec
cltd
dec
push
pop
fsubs
push
push
inc
mov
adc
inc
mov
xchg
add
addr16
into
sub
adc
lret
hlt
adc
filds
lcall
jne
add
dec
sbb
jno
iret
or
mov
or
sti
shr
xor
loope
movsb
in
and
and
pop
leave
push
jmp
out
les
ss
sub
pop
push
mov
leave
pop
imul
test
xor
test
out
lret
pushf
mov
or
in
mov
and
lret
inc
adc
adc
setg
jmp
movsl
bound
add
repnz
inc
pop
jmp
cmp
stc
pop
mov
in
out
cs
mov
dec
int3
inc
jns
push
data16
test
jge
xchg
add
mov
les
call
mov
mov
cmp
jno
lods
sbb
xor
add
push
gs
imul
and
clc
pop
add
ffreep
push
push
adc
addl
push
mov
ds
push
xchg
ja
jp
cmp
call
sub
mov
xor
pop
xor
sub
inc
ret
sub
mov
iret
bound
cmp
aas
push
nop
mov
in
pop
sti
fsts
lahf
mov
cmp
fsubrl
push
add
mov
test
xchg
int
and
xchg
mov
adcl
cmpsb
adc
lea
imulb
inc
sbb
pop
stc
jnp
jae
cmp
test
inc
out
cmp
rolb
add
arpl
xchg
jno
sub
ja
or
inc
icebp
fs
mov
jp
aas
ret
mov
sbb
dec
xchg
gs
sbb
dec
test
out
push
rcl
xchg
inc
mov
stos
outsb
fnsave
cwtl
push
and
out
arpl
add
lcall
adc
dec
fisttpll
out
out
push
insb
sub
push
mov
int
and
les
leave
lods
bound
pop
jg
mov
sahf
fisubs
shll
repnz
outsl
scas
rorb
das
push
mov
orl
ret
repz
movsl
repnz
xor
in
pop
sarb
insl
dec
nop
mov
mov
or
adc
cmp
scas
mov
pop
mov
mov
stos
pop
jo
xchg
clc
pushf
inc
sahf
xchg
unpcklps
mov
push
mov
lret
popa
sbb
inc
ret
sbb
and
call
cmp
sbb
dec
iret
mov
mov
mov
cmp
in
lcall
add
adc
sbb
mov
es
add
adc
push
stos
aas
aas
adc
aaa
dec
cltd
or
cmp
js
jge
mov
scas
push
cmp
mov
pushf
sbb
adc
mov
gs
outsl
jae
popa
inc
or
push
popf
pop
jmp
and
inc
and
mov
nop
fcoml
push
lock
and
cwtl
or
idivb
mov
mov
imul
xor
adc
inc
push
xchg
add
jecxz
in
insl
xor
movsl
mov
aaa
xchg
in
mov
insb
or
xchg
icebp
sar
push
adc
lret
cs
popl
cmp
testl
cmp
pop
int
xor
inc
jecxz
ja
out
lcall
adc
or
jne
xor
aaa
lret
fmuls
sub
lods
pop
push
mov
cld
sbb
push
fistps
add
pop
aas
es
int
dec
fdivrl
adc
pop
imul
sub
lea
mov
sub
jecxz
sbb
cltd
out
cld
loope
mov
jb
mov
xchg
testl
enter
push
stos
je
jbe
dec
inc
cmpsl
test
fwait
mov
imul
cmc
pop
xor
mov
sub
lds
dec
pop
xchg
sbb
clc
out
mov
rolb
rorl
repnz
push
imull
fdivl
inc
idiv
ss
rorl
popw
sarb
sub
push
hlt
lock
add
cmp
pop
mov
aad
push
mov
dec
mov
lahf
xchg
mov
sub
bound
pop
mov
cmp
mov
dec
js
mov
cmpsb
dec
or
jl
add
insl
fadds
dec
and
pop
jne
lret
push
push
jo
mov
jge
xor
ds
inc
insb
jmp
int3
inc
push
cwtl
daa
aad
imul
xor
and
xchg
xor
dec
mov
dec
sbb
inc
xchg
push
mov
sub
cld
std
or
sti
rcrl
add
add
aad
and
cmpsb
outsb
mov
ret
shrb
pushl
xchg
sub
dec
mov
xchg
mov
jne
cmp
rclb
hlt
cmp
divb
lea
and
in
ret
sbb
pop
into
jo
xchg
adc
adc
mov
mov
xchg
es
mov
test
addr16
lods
jno
fucomip
rcr
out
or
pmaddwd
scas
add
movsb
loope
xchg
dec
mov
mov
mov
adc
push
cmp
js
inc
mov
lcall
lock
pop
xor
pop
pop
mov
inc
sbb
out
sbb
aam
sbb
adc
jl
call
aam
sbb
or
or
adc
cwtl
push
mov
stc
xchg
sub
cmc
cmp
mov
inc
adc
adc
and
and
adc
push
shlb
jl
rol
pop
inc
xor
fwait
shl
iret
cmp
xor
je
subb
in
and
clc
and
cmp
push
and
icebp
rcll
push
or
movsb
fwait
pop
push
subl
sub
fisttps
xor
push
mov
cmp
sbb
ficompl
or
jnp
ljmp
and
sub
clc
dec
cmp
int
cmp
mov
pop
xchg
lods
lcall
icebp
ds
cmpsl
pop
adcb
xlat
popf
add
sbb
jle
in
mov
sbbl
outsb
sysexit
xchg
xor
aad
je
xchg
push
in
jp
or
jae
fs
sbb
mov
ljmp
ljmp
cmpsl
ret
lods
sbb
ss
inc
sarl
out
pop
and
loopne
mov
icebp
jecxz
jo
add
mov
cli
and
fstpl
dec
sub
mov
cmpsb
push
push
lods
test
xchg
inc
dec
cmp
and
fnstcw
cmp
dec
xchg
xor
mov
icebp
outsl
sti
push
in
push
add
xchg
data16
pop
and
mov
adc
lods
adcb
dec
or
mov
outsl
cmp
dec
scas
gs
mov
pop
jmp
mov
pop
std
dec
js
insl
pop
pushf
test
sub
jg
jo
test
xchg
add
mov
adc
leave
sarl
dec
icebp
in
js
mov
pop
out
jle
into
aam
jae
mov
repz
push
rcl
nop
sub
inc
mov
std
xor
mov
lods
jl
cmp
xchg
shlb
xor
jge
popf
mov
sbb
fsubrs
out
jbe
out
jmp
push
pop
iret
sbb
and
adc
test
icebp
hlt
jne
loopne
add
pop
cmpsl
mov
ds
outsb
inc
outsb
and
lock
ja
aaa
dec
test
adc
adc
or
mov
pop
xchg
dec
mov
pop
fcoml
mov
pop
jbe
xor
xor
movsb
push
loopne
cmc
or
movsb
lret
xchg
std
in
test
cmp
xor
rol
dec
jns
jl
aad
adc
inc
cmp
xchg
and
inc
xchg
or
loop
pop
lret
pop
icebp
and
fisttps
cwtl
aas
mov
pop
or
cwtl
adc
push
cwtl
pop
je
xchg
xchg
pop
je
push
xor
int
pop
mov
decb
enter
imul
daa
int3
or
in
sbb
pop
add
sub
aas
call
imul
insb
into
icebp
pop
xor
movsl
imul
sti
jp
mov
mov
adc
hlt
lcall
inc
std
sub
leave
sti
pusha
xor
hlt
sub
jge
daa
in
dec
adc
jno
out
stc
sub
mov
daa
xchg
sub
or
cmp
dec
lods
or
cmp
popa
pusha
push
jb
sahf
sub
aas
ljmp
ds
int3
jg
cmp
mov
decb
adc
or
ret
xchg
add
mov
xor
adc
inc
aam
negb
xor
push
pop
mov
adc
movsb
stc
les
add
leave
cmpsl
adc
repnz
negb
dec
inc
sbb
aad
and
mov
imul
dec
inc
push
in
xlat
ficoms
ret
fsubs
adc
adc
insl
push
mov
xor
push
movsl
loop
aam
cld
stos
cmp
cmp
in
loope
jnp
sbb
or
jae
xchg
bound
mov
or
xchg
mov
pop
dec
insl
mov
xor
int
cmp
ljmp
shll
icebp
push
jbe
push
loopne
pop
filds
inc
xchg
in
ret
psubq
dec
cmp
xlat
sbb
sbbb
popa
imul
lcall
int
xchg
mov
fucomp
inc
negl
mov
decb
xchg
addr16
mov
iret
cli
cli
push
sbb
mov
mov
movnti
imul
shlb
inc
jns
rorl
add
outsl
sbb
aad
test
jb
mov
pop
stc
push
outsb
add
and
xor
jns
sbb
mov
pop
mov
adc
test
and
sarb
or
jns
or
test
decl
nop
data16
adc
pop
adc
mov
mov
push
mov
jns
xlat
xchg
inc
push
mov
adc
mov
sub
mov
jae
sub
jp
xchg
sbb
mov
dec
test
mov
aad
mov
aas
cmp
sbb
cltd
outsl
mov
sub
pop
adc
lea
outsl
out
ss
stc
addb
test
ret
and
cwtl
cmp
xor
push
cmp
gs
mov
pop
push
xor
mov
test
jo
aaa
sbb
adc
fdivrs
push
leave
dec
ret
jecxz
and
mov
fidivrl
test
add
push
outsb
loop
mov
cld
in
mov
mov
and
sub
pop
popf
xlat
and
cwtl
loope
add
out
cmc
pop
shlb
push
hlt
test
adc
ljmp
cli
add
test
jg
lea
mov
xor
pop
inc
insb
loop
push
lea
vphaddudq
stc
push
adc
inc
sub
mov
sbb
push
cmpsb
incl
pop
push
pop
mov
repz
das
mov
sbb
test
bound
loop
test
lock
notb
add
xchg
add
cmc
adc
sub
xchg
mov
ret
lret
mov
hlt
sub
xor
movups
cld
push
or
jno
pop
aaa
out
pop
rcrl
ss
in
pushf
outsb
sbb
je
pop
jle
lret
mov
add
int
fildl
mov
add
inc
or
pop
lock
xchg
ja
cmp
mov
movsl
fwait
push
in
jp
fsubs
pop
imul
mov
jle
pop
das
inc
aaa
sahf
insb
add
or
and
adc
sub
test
test
sbb
fiadds
xor
outsl
lock
sub
das
arpl
dec
push
ret
cli
int3
jo
inc
in
or
mov
sub
mov
jl
out
mov
push
movsl
mov
ret
xchg
sub
mov
sti
fbld
fwait
rol
adc
mov
sub
test
mov
aam
add
push
adc
push
xor
lods
scas
adc
mov
jp
sbbl
jge
popf
bts
cltd
dec
xor
out
ret
test
popa
xchg
sti
addr16
jg
adc
mov
in
push
add
mov
xor
sbb
and
clc
or
idivl
mov
jge
sbb
dec
pop
and
test
aam
icebp
xchg
jnp
cld
mov
imull
cmp
inc
push
sub
sbb
inc
mov
imul
pop
fwait
cmp
pusha
mov
push
adc
stos
sbb
and
push
and
push
mov
sub
fmuls
pop
jmp
mov
dec
mov
dec
inc
test
xchg
add
popa
add
push
and
mov
jle
mov
ja
sbb
dec
out
inc
das
es
adc
xor
insl
jle
dec
mov
aam
pop
pop
pop
sub
inc
sub
fwait
xchg
subl
or
push
sahf
or
loope
jb
mov
sar
icebp
inc
pop
xchg
rcrl
test
inc
hlt
hlt
or
dec
pushf
ja
sub
mov
push
mov
notl
mov
xor
cmp
shl
sti
sti
jp
pop
xchg
js
scas
pop
lods
pop
xorl
into
pop
jmp
sub
add
shrb
inc
in
mov
std
pushf
pushf
imul
jg
sub
xchg
mov
xchg
mov
push
cmc
stos
mov
scas
cld
or
shlb
add
jo
movsl
jnp
popa
xchg
adc
test
adc
inc
push
mov
in
inc
or
mov
cmp
add
iret
mov
jp
filds
mov
xlat
inc
add
mov
ret
sbb
add
fistl
push
insl
add
into
inc
mov
push
std
mov
xor
mov
scas
dec
add
notl
out
loop
lock
xchg
add
xchg
in
das
jne
popa
and
and
and
ss
adc
daa
rorb
push
and
ss
sahf
lods
mov
adc
push
xor
add
inc
push
insl
or
ja
outsb
xlat
jo
ja
jb
xor
clc
imul
int3
sub
dec
je
push
sub
inc
mov
push
add
mov
push
jns
xchg
fistpl
popa
xchg
mov
mov
sub
push
outsb
cmp
clc
xorl
int3
repz
jmp
dec
add
xchg
and
popl
push
pop
xlat
pop
xorb
mov
lahf
jmp
aad
jae
mov
test
inc
dec
dec
pop
addr16
lock
ja
jb
stos
aam
sub
test
push
adc
dec
sbb
and
xchg
sub
aad
not
adc
push
pop
mov
mov
into
in
sbb
sbb
leave
fwait
and
xchg
xor
aas
mov
xchg
sub
pop
sahf
sub
jge
in
pop
mov
cmpsl
fs
icebp
cltd
xchg
ja
scas
sub
fcmovnbe
inc
fwait
dec
mov
mov
sub
sarb
sbb
xor
jle
iret
test
pop
dec
jne
push
adc
bound
mov
jmp
xchg
add
rcrl
test
into
aas
mov
jb
push
mov
lcall
aas
test
das
imul
add
cmp
sbb
or
cltd
adc
jmp
pusha
int
jbe
sub
and
and
cmp
xor
push
ret
mov
fs
sub
int3
sbb
xorb
inc
dec
lods
cmc
xchg
cs
pop
outsl
inc
negb
mov
negl
mov
jp
cmp
rolb
sbb
mov
adc
jae
mov
add
mov
clc
and
in
das
loopne
jne
xchg
cltd
shll
gs
xor
mov
sbb
xlat
call
xchg
hlt
sbb
push
add
ficoml
dec
popf
cmp
jne
jmp
imul
xchg
lcall
clc
xor
gs
inc
lret
mov
arpl
fdiv
mov
aam
test
mov
add
loop
jns
mov
push
dec
addb
ret
jno
fdivrs
inc
stc
fwait
pusha
push
fnsave
imul
insl
push
lcall
std
pop
adc
subl
xchg
fistpll
add
fwait
in
xchg
or
sbb
dec
push
push
pop
sti
dec
sub
fwait
rorl
add
sub
ds
dec
cmpl
sub
mov
add
pusha
xchg
in
adc
cli
or
pop
mov
inc
and
xchg
and
sub
js
bound
mov
xor
push
mov
or
inc
movsb
pop
jae
sbb
int
aad
cmp
stc
adc
mov
jb
adc
les
test
xchg
adc
mov
fxch
lock
jae
gs
jg
lahf
cmpsl
push
inc
jp
and
adc
add
into
push
sbb
into
mov
inc
cltd
testb
jl
inc
push
test
xchg
push
cmp
popa
out
and
mov
push
pop
mov
iret
loop
push
sub
inc
js
mov
and
out
xchg
mov
or
int
clc
cmpsl
loop
jmp
mov
cmpsb
sub
xchg
xchg
pop
mov
pushf
lods
jmp
jge
popf
out
aaa
or
sub
pop
loop
xchg
insl
xchg
popa
mov
ficoms
test
adc
inc
popa
roll
mov
shll
daa
test
ljmp
push
sub
leave
or
scas
cmp
dec
or
call
ret
and
insb
mov
imul
pop
sbb
jb
test
fisttps
lods
adc
leave
ss
into
lock
into
in
ret
in
punpckhbw
adc
cmpsb
mov
mov
lods
pop
jmp
xchg
push
adc
cmc
or
mov
cmp
or
jecxz
orl
inc
mov
mov
adc
push
xchg
mov
jmp
leave
pop
std
xor
ret
sbb
mov
sbb
jg
cmpsb
shlb
cmp
psrld
adc
mov
sbb
inc
imul
subb
jnp
pop
and
test
out
xchg
insl
int
andl
call
and
lods
xchg
pop
fcomps
pop
mov
std
out
rolb
adc
addr16
mov
stos
orl
sub
mov
lea
sub
mov
xchg
loope
add
ret
movsl
ljmp
push
jae
popf
pop
fs
ja
sub
mov
cmp
mov
mov
sbb
or
dec
jmp
data16
or
jno
mov
movsl
insl
cmpsl
xchg
pop
dec
xor
ret
or
sbb
lret
xchg
push
inc
ja
pop
pop
fsts
jp
jo
push
andb
enter
pop
cwtl
pop
add
xlat
mull
cmp
push
jg
dec
je
and
lds
std
push
rcr
push
jl
stc
cli
mov
mov
clc
or
pop
cmp
mov
loop
das
scas
push
fmul
cmc
xchg
inc
sbbb
push
pop
mov
aas
outsb
pop
cmp
mov
out
push
repz
and
int
loop
in
fiadds
enter
push
movsl
into
or
sbbl
pop
fstpl
insl
sbb
iret
or
add
inc
mov
movsl
push
inc
in
mov
cwtl
or
ret
inc
pop
mov
jl
or
pop
add
popa
loop
xchg
stc
mov
inc
fcom
pop
ficoms
or
fwait
sbb
js
mov
sti
cmp
movq
pop
adcb
aas
xor
repz
inc
data16
repz
add
call
jmp
and
cld
leave
std
lds
dec
loop
mov
aaa
pop
idivl
leave
das
xor
xchg
cmp
ficoml
addps
xchg
dec
sarb
sbb
sub
es
scas
pop
pop
sbb
shl
daa
mov
dec
xor
cltd
adc
sub
ja
inc
push
test
sub
inc
sbbl
push
sbb
cmp
negl
jecxz
pop
mov
jmp
fs
ja
xor
repnz
add
mov
or
decb
es
insb
xor
loop
xchg
push
cmp
adcb
jg
push
sub
mov
jp
or
mov
cmp
xchg
mov
sbb
xorl
push
repnz
stos
adc
jbe
mov
dec
or
xor
rcrb
pop
aam
cwtl
xchg
imul
xchg
sbb
and
pop
movsb
pop
loope
and
jb
mov
inc
or
push
jecxz
cltd
jns
inc
test
pushl
sub
inc
pop
stos
add
or
mov
movsb
cli
sbb
lcall
in
adc
stos
inc
out
stc
cld
jne
fs
push
xor
xor
jecxz
test
cmp
lock
xor
inc
aad
lds
mov
pop
sbb
mov
jbe
cmpsl
xchg
dec
dec
or
nop
fldenv
mov
mov
shlb
inc
outsb
jmp
sub
aas
push
mov
imul
sahf
test
xchg
nop
mov
push
das
in
in
or
cmc
jmp
aad
add
or
push
dec
pop
xchg
cmpsl
orl
rolb
into
inc
add
push
xchg
ror
adc
sub
jg
icebp
cld
insl
push
cmpsb
ja
add
mov
mov
ds
pop
mov
and
pop
jle
in
sbb
or
fwait
inc
mov
int3
xchg
pop
mov
fldt
out
xchg
dec
jmp
and
bound
xorl
arpl
jge
scas
fidivrl
push
push
std
jno
in
mov
fsubrl
inc
pop
or
je
aas
sbb
sbb
xor
insb
insb
xchg
test
sub
repz
inc
cmpsb
jecxz
gs
add
cltd
ljmp
sarl
dec
pushf
pop
mov
xchg
insb
cmp
or
jle
scas
ds
xor
add
fucomip
pop
xor
rolb
ret
lea
dec
movsb
mov
pop
fnstcw
fs
jns
int
sbb
xchg
shll
je
push
jge
imul
xchg
popf
fsubs
lods
mov
imul
dec
push
inc
pop
movsl
xor
xor
imul
cmpsl
mov
js
out
outsw
rcll
popa
push
mov
in
jb
mov
lret
mov
mov
pusha
and
out
call
and
xchg
jle
pop
dec
jnp
call
lods
or
shl
pop
pop
fisubrl
fsubr
sbb
xor
jbe
ret
aad
repnz
cmp
in
das
ss
aaa
imul
sub
inc
and
sub
dec
sbb
ja
testl
mov
fcmove
ljmp
xchg
lock
bound
in
inc
ret
xchg
mov
les
imul
push
aam
clc
cltd
in
cmpsb
and
pop
push
loop
pop
cmp
add
lods
mov
gs
add
add
mul
adc
mov
pop
arpl
mov
dec
adc
jmp
ds
xchg
mov
jge
sub
cli
cli
int
jbe
sbb
or
adc
adc
ds
cltd
pop
xlat
cmp
notl
cwtl
push
pop
push
jne
mov
push
cltd
pop
repz
fimull
adc
jge
fmul
outsl
ss
cmpsl
cwtl
dec
repnz
jp
sbb
sbb
add
mov
rolb
mov
mov
push
ja
xor
scas
dec
push
mov
aad
out
jg
sbb
push
jnp
aad
cli
adc
stc
or
push
jo
insb
or
fistps
mov
jns
mov
jecxz
push
pop
jno
mov
xchg
mov
cld
push
lods
lods
popf
dec
mov
subb
rcrb
xor
pop
sub
push
jle
sbb
sbb
fmull
dec
lock
mov
cmp
scas
or
or
in
sub
jecxz
popaw
gs
jo
int3
mov
lods
push
rcrl
jmp
das
xor
lcall
push
mov
iret
flds
jle
pop
jbe
cmp
ja
stc
scas
pop
enter
xchg
dec
aaa
andb
mov
popf
push
dec
sub
cmpsb
xor
bound
mov
jecxz
cmpsb
push
mov
scas
adc
rclb
loopne
mov
push
stos
sbb
scas
outsl
nop
pushf
add
int3
cmp
mov
das
and
inc
insl
gs
or
es
outsl
adc
aaa
ret
xor
xorb
rorb
test
mov
jg
jae
xor
loope
stc
pop
mov
xchg
icebp
push
and
gs
mov
push
mov
out
pop
in
adc
adc
xor
out
loop
jecxz
ss
adc
mov
push
cmpsb
fadd
mov
xchg
mov
filds
gs
lock
cwtl
out
mov
xor
dec
push
loope
adc
or
push
and
pop
fadd
cltd
insb
outsb
mov
mov
jge
cwtl
idiv
add
lods
xstore-rng
cmpsl
add
add
shl
lret
jl
xchg
and
mov
sarb
jbe
mov
jbe
jne
movsb
adc
cld
jo
in
es
push
iret
fdivs
xlat
in
mov
pop
pusha
call
push
or
out
mov
rclb
cmp
mov
mov
dec
cmp
negl
jecxz
div
jge
aaa
sbb
inc
lcall
adc
inc
adc
jl
mov
xchg
fsts
stc
pusha
jge
mov
xchg
fmuls
fisubl
inc
pop
adc
mov
call
and
lods
fdivrp
push
mov
push
pop
jp
sub
in
xchg
push
or
adc
pop
fucomp
cmp
test
jle
ret
mov
popf
jg
outsb
sbb
scas
bound
lret
aam
sub
pop
inc
test
mov
clc
fistps
mov
add
pop
mov
xchg
jecxz
lods
cmpsl
insl
aas
nop
or
jg
inc
fdivrs
xchg
in
mov
lcall
pop
in
repz
sub
xlat
xor
cli
and
xlat
clc
add
or
mov
push
xchg
or
sub
jnp
inc
in
mov
pop
and
fistl
sbb
pop
jbe
and
jbe
dec
add
cltd
pop
lahf
xchg
out
sub
xor
ficomps
xor
or
fcmovnu
sbb
fsub
addr16
je
pop
outsl
outsb
sub
gs
inc
inc
lret
mov
jae
pop
jbe
faddp
out
sub
int3
or
jns
jnp
call
fimuls
or
cmpsb
pop
js
sbb
xor
cwtl
mov
dec
cmp
mov
jns
jg
mov
jge
sti
lret
mov
icebp
popa
sub
pop
lods
leave
mov
in
aas
pop
inc
fsubr
inc
inc
sbb
lods
or
inc
cs
aam
je
jmp
mov
xorb
mov
test
shrl
xchg
dec
repnz
movb
mov
test
sub
clc
movl
pop
andl
imul
cmp
in
ds
call
cltd
cmpsb
fcmovnbe
mov
fsts
dec
dec
jb
fcoml
jnp
sbb
call
or
test
pop
test
outsl
or
push
hlt
jg
dec
push
inc
loop
push
in
scas
dec
pop
aaa
mov
sbb
stos
xchg
mov
out
sbb
stos
cmp
sbb
pop
or
jle,pn
ss
jmp
loope
mov
xchg
mov
lcall
sub
cmc
mov
rcll
dec
es
ja
daa
leave
ljmp
jbe
jne
nop
inc
insb
xor
fisttpll
pop
xor
iret
stos
lods
mov
call
movsb
and
lret
push
mov
pop
or
fs
jb
sub
sub
aad
and
out
std
jno
cmp
mov
shll
xchg
mov
js
or
jge
xchg
dec
rclb
cmp
pop
movsl
pushf
pop
dec
imul
mov
pop
ret
stc
enter
popf
jne
subb
daa
mov
push
out
xor
jo
int
dec
mov
add
jp
fadd
ret
adc
dec
and
xlat
jecxz
lret
sbb
fdiv
pop
ljmp
pop
shl
aas
int3
pop
out
jnp
xchg
xor
push
xor
lcall
xor
adc
adc
daa
mov
lea
test
push
jl
fnsave
inc
cs
xchg
gs
popa
or
aas
dec
je
push
mulb
or
push
imul
cld
pop
clc
dec
mov
and
push
int
shlb
scas
jne
xlat
popa
add
jae
xor
cli
sbb
cmc
inc
stc
xchg
negb
pop
addr16
and
lods
cli
test
ja
and
add
or
xchg
daa
inc
repz
in
xchg
into
iret
inc
cmp
jle
pop
lods
sub
fisttpll
shlb
insb
ret
gs
rcrb
push
fwait
jno
loop
inc
mov
jns
stos
fsts
popa
stos
push
or
divb
enter
cmp
enter
jge
xchg
inc
xchg
shlb
lods
adcl
loopne
shl
cmpsl
fiadds
jmp
jmp
push
sbb
lds
xchg
dec
stos
movsl
mov
mov
add
sbb
test
and
repz
push
pop
out
scas
movsb
mov
aam
cmp
cmpsl
xlat
popf
add
xchg
add
bnd
icebp
adc
xor
add
das
and
in
mov
imul
lret
rcll
add
rorl
jne
jne
stc
cmp
xor
in
hlt
or
call
or
sbb
enter
pop
stc
mov
icebp
aam
pushf
xchg
arpl
dec
rclb
popf
repnz
js
push
pushf
or
out
lock
add
pop
push
add
fldt
jp
pop
bnd
sahf
loopne
hlt
divl
fmuls
negb
ja
rcll
inc
lahf
aaa
pushl
sahf
mov
in
data16
out
dec
add
mov
push
jae
or
sub
test
pop
xor
enter
in
fucomp
inc
sbb
mov
xor
and
repnz
cmpb
rcl
fdivl
loope
mov
or
gs
or
cmp
pop
sbb
fs
adc
shrb
add
add
sbb
cltd
mov
adc
mov
out
test
fdivrl
hlt
inc
ret
jbe
mov
mov
pop
sub
adc
enter
fldt
adc
out
push
pop
enter
in
mov
movsl
mov
imul
xor
push
sbb
mov
xchg
jp
loope
mov
roll
jne
dec
push
mov
push
push
push
or
sub
push
in
xchg
lock
nop
mov
cmp
cltd
cmp
cmp
addr16
rcl
mov
cbtw
cld
sub
call
xchg
inc
repz
xchg
mov
data16
mov
push
or
xor
lahf
push
pop
jnp
lcall
cld
cmpl
jecxz
fildl
nop
lock
add
pop
pop
in
lea
sahf
mov
stc
mov
sahf
push
fdivrs
adc
je
and
pop
mov
mov
push
mov
imul
push
faddl
fwait
xchg
xchg
bound
imul
outsb
jmp
js
smsw
jecxz
out
pop
mov
sbbb
jp
xchg
rorb
xchg
mov
pop
daa
mov
mov
mov
and
mov
icebp
shl
jmp
mov
lret
inc
add
add
xlat
out
ret
mov
pushf
sarb
ss
insb
and
mov
xlat
jmp
sti
lret
lods
sarb
jmp
and
pop
xchg
lret
and
jno
in
scas
int
cmpsl
pop
in
stos
or
rcr
bound
repz
mov
or
hlt
cmp
cmp
je
rcr
roll
cmpl
adc
scas
cwtl
and
mov
or
sbb
push
xor
nop
push
xor
jge
mov
test
arpl
inc
fidivs
xchg
mov
push
dec
enter
dec
and
jnp
mov
xor
mov
xchg
mov
cmp
cld
cltd
arpl
xchg
sub
or
divb
sub
and
pop
dec
mov
mov
lret
xchg
movsb
lahf
je
daa
pusha
lret
push
popf
xor
jno
mov
rolb
popf
and
xlat
popl
xchg
or
xchg
dec
stos
pop
xchg
js
add
mov
pop
cmp
or
jecxz
sbb
mov
in
jb
sahf
das
aas
xchg
jo
jmp
cmp
mov
das
aas
andb
fists
pop
ds
and
dec
mov
lods
cmpsl
ljmp
or
ret
mov
test
mov
jl
popa
inc
enter
bound
aam
dec
mov
adc
nop
lahf
nop
add
xchg
mov
mov
pusha
dec
ljmp
push
lcall
cli
pop
mov
jae
sub
add
xchg
jno
dec
gs
sbb
xor
and
mov
pop
mov
push
pushl
lahf
mov
add
repz
test
jge
push
cmp
cmc
sbb
loope
inc
mov
xchg
push
cltd
or
mov
mov
dec
xchg
stos
mov
mov
jnp
arpl
fwait
leave
xchg
hlt
movsl
adc
mov
rolb
scas
mov
xchg
or
faddl
int3
out
pop
sbb
sahf
das
out
inc
xchg
dec
test
push
dec
sbb
scas
sbb
les
fisttps
sub
loope
mov
std
sub
sbbl
lret
das
mov
add
shlb
xchg
scas
jnp
daa
movsb
outsl
sub
sbb
cmpsl
inc
sub
inc
mov
daa
insl
sti
into
push
movsb
mov
les
xchg
jmp
in
aam
add
mov
jmp
mov
sbb
std
scas
sarb
cmpsl
xor
fs
mov
aam
fs
adc
ljmp
clc
testb
stc
hlt
popa
pop
mov
inc
inc
lahf
mov
aad
jbe
and
pusha
and
fstpt
push
cli
cmp
jecxz
xor
gs
add
push
mov
call
inc
mov
imulb
enter
xchg
adc
push
rorl
lock
mov
lret
in
data16
sub
push
sar
iret
sti
in
mov
jge
std
cmp
xchg
out
out
lret
cmp
rcll
xchg
pop
pushf
mov
push
mov
cld
enter
shll
mov
rep
in
cmp
adc
test
xchg
cld
mov
or
push
lret
in
outsb
out
sbb
in
add
fmuls
sub
xchg
imul
outsb
adc
cmp
enter
data16
xchg
addb
or
sbb
cvttps2dq
push
inc
or
mov
sti
aas
popa
fstp
out
sti
sub
lds
add
pushf
or
ss
cwtl
xchg
decb
xchg
lods
imul
loop
sahf
or
clc
in
fwait
ret
jbe
clc
and
fdivrs
int
scas
fwait
rdpmc
mov
aas
mov
notl
fisubrl
shrb
sub
xchg
inc
fwait
cld
fsubrl
inc
jo
mov
lret
sub
xor
gs
jns
mov
and
mov
dec
sbb
push
in
cmc
dec
mov
xor
add
jmp
outsb
push
sbb
scas
movl
insl
fisubrs
mov
xor
push
hlt
pop
mov
lea
mov
jb
mov
pop
add
mov
mov
mov
push
ret
add
inc
add
shlb
or
mov
fidivrs
mov
jle
adc
mov
push
mov
loop
lea
lret
push
arpl
dec
and
neg
and
pop
push
cmc
enter
in
stos
cltd
xor
push
ret
mov
push
in
popf
xchg
out
fnstsw
jns
mov
scas
mov
ss
push
xor
pop
sub
pop
pop
dec
test
jg
mov
pushf
leave
mov
sub
daa
push
and
aaa
lods
push
mov
sbb
adcl
inc
test
mov
sarl
mov
mov
adc
xchg
add
mov
xchg
loop
adc
mov
xor
fwait
mov
in
dec
les
ss
lcall
fbld
lods
dec
xchg
mov
cmpsl
pop
xchg
jl
xor
mov
sub
pop
push
pop
jp
sub
fsubl
std
pop
movsl
lds
push
mov
mov
add
stos
cmp
jecxz
mov
sub
cltd
jl
imul
clc
inc
xchg
loopne
mov
lahf
rclb
dec
mov
popf
fdecstp
adc
pop
imul
pop
xchg
add
enter
dec
pop
andl
ss
xchg
popa
les
cli
in
mov
add
fsubr
xlat
fistps
pop
xorl
nop
pop
inc
lret
jle
jge
in
pop
stc
aam
dec
mov
clc
rcrl
sbb
inc
hlt
mov
stos
ss
jo
or
mov
mov
rcrl
adc
or
sbb
loope
ja
and
cmp
mov
dec
mov
aam
stos
adc
addr16
rcrb
jl
cmp
shlb
sub
adc
mov
mov
mov
jecxz
out
out
sahf
mov
and
ss
or
push
repnz
cs
inc
sub
inc
jo
add
fcmovu
mov
shr
pop
fdivs
add
lret
xor
mov
pop
les
repnz
mov
mov
cmpsl
popf
insl
pop
pop
add
je
pop
fdivp
xchg
or
jo
daa
fadds
add
arpl
push
out
enter
inc
mov
lods
fs
mov
cltd
stos
scas
iret
lret
lods
mov
shll
adc
mov
pop
cmc
into
sbb
xchg
aaa
xchg
pop
xchg
icebp
jmp
mov
movsl
sub
adcb
stos
in
add
mov
je
push
jae
jne
jo
ds
ja
pop
mov
fstl
push
pmaddwd
loopne
push
mov
xchg
mov
or
lds
pop
nop
fsubr
hlt
or
adc
pop
jb
mov
jmp
xchg
xor
mov
pop
aas
jb
ljmp
push
xlat
dec
inc
fldcw
hlt
sbb
fdivrl
lock
addr16
cmp
rcll
enter
pop
fcmovne
sub
inc
mov
cmp
or
push
andb
cmc
xlat
pop
dec
xor
gs
lret
mov
nop
mov
jecxz
cwtl
sti
imul
mov
ret
adc
xchg
nop
aam
and
push
fstpt
push
je
xor
ljmp
push
adc
int
les
cli
cltd
sahf
push
nop
xchg
jg
pop
mov
cmp
lcall
xchg
xor
and
cld
sbb
call
shl
cmp
loope
lods
or
pop
iret
pop
icebp
and
mov
fwait
out
lods
jg
cwtl
or
xchg
push
mov
cli
cli
push
movsb
sub
dec
inc
pop
pusha
mov
fdivrs
repnz
addl
mov
leave
jmp
sub
jecxz
cmp
in
mov
call
adcb
shlb
mov
push
in
mov
mov
std
and
pop
into
inc
test
std
push
das
test
inc
sbb
scas
fildl
adc
gs
xor
cmp
mov
lahf
in
cs
pop
rolb
daa
inc
lcall
shlb
movsl
mov
stos
iret
shll
test
sbb
loope
pop
out
repz
ret
aas
mov
push
and
dec
outsl
mov
in
ret
mov
in
and
mov
sub
adc
push
into
push
cli
jo
xchg
orl
xchg
test
or
sub
mov
pop
inc
push
hlt
fdivl
xchg
ror
imul
jb
pop
push
sub
push
sti
shr
and
add
shrb
ficomps
adc
stos
imul
fcompl
pop
popf
jmp
cmp
and
mov
xchg
ds
jnp
cmpsl
inc
dec
push
xor
mov
dec
imul
mov
iret
xlat
clc
sbb
popa
push
scas
mov
xor
cmp
scas
lret
inc
mov
insl
mov
addr16
or
or
push
inc
mov
jbe
cmpsl
iret
ficomps
dec
imull
lahf
jl
shrb
push
testl
aas
jbe
leave
adc
aam
shll
dec
jl
rcrl
adc
dec
xor
dec
sub
rorb
sbb
ljmp
out
mov
push
jne
adc
ss
or
or
int
test
xlat
push
mov
rorl
or
jecxz
popa
dec
enter
xor
bound
mov
pop
out
gs
scas
push
inc
pop
jo
je
and
and
cmp
adc
xchg
repnz
or
sbb
mov
cwtl
lret
push
mov
fdiv
inc
aad
mov
ret
mov
ret
dec
orb
mov
mov
movsb
xchg
or
mov
push
orb
sti
xlat
pop
pushf
sub
cwtl
mov
subl
dec
add
dec
aas
leave
nop
stos
insl
cmc
lock
ljmp
xchg
push
jp
cmpsl
rcrb
loop
adcl
jmp
and
bnd
int
cs
adc
sahf
lock
sub
xor
dec
std
cmpsb
push
dec
gs
jb
insl
and
mov
ret
mov
clc
xor
mov
ja
mov
pop
dec
out
lahf
sbb
cmp
aam
sub
test
push
or
or
push
xchg
negl
sbb
roll
cld
hlt
jno
fsubrs
pop
nop
push
jecxz
loope
mov
ljmp
sub
inc
lods
mov
cmpsl
test
arpl
push
fstps
inc
into
stos
mov
cmp
enter
aad
xor
cwtl
mov
daa
test
sarl
jge
out
mov
je
dec
xor
setle
and
push
frstor
pop
cmp
mov
cwtl
adc
and
shll
push
lcall
mov
cmp
cmp
cmpsl
fisttpll
iret
sahf
sub
pop
sbb
push
and
pop
rcr
jg
adc
hlt
adc
aas
jbe
imul
movsl
adc
dec
push
xchg
inc
dec
mov
and
sub
xlat
jns
push
mov
div
fldl
pop
pop
aaa
cmp
mov
cmp
daa
adc
outsb
mov
jecxz
sbb
mov
add
cmp
popf
jge
adc
xor
lods
xchg
cmp
xor
aaa
adc
lahf
out
nop
push
loop
aam
jle
push
mov
sbb
test
fwait
adc
xlat
sub
loopne
jns
jecxz
cmp
xchg
lcall
or
mov
daa
cmp
repnz
cmp
xchg
repnz
outsl
or
push
mov
inc
sub
xor
xor
ret
sbb
test
inc
pop
js
sub
pushf
xor
ja
mov
cs
or
sub
sub
mulb
xor
mov
lock
jbe
push
shrl
ret
and
sbb
dec
xchg
movsb
xchg
push
leave
mov
pushf
nop
or
imul
and
cs
in
dec
imul
fisubl
stos
mov
pop
mov
sub
inc
add
sti
cwtl
push
pushf
jg
adc
sbb
in
stc
rorl
inc
and
in
lea
call
mov
aaa
fdivr
addr16
inc
loop
faddl
enter
jae
mov
popa
push
sbb
in
push
out
push
aad
push
xchg
lcall
sub
bound
jecxz
test
pop
andb
inc
mov
sub
imul
jge
inc
lahf
cmp
xchg
adc
jmp
outsl
loope
push
xchg
adc
movsl
jae
adc
mov
outsl
sub
mov
push
mov
test
out
xlat
imul
add
mov
leave
and
pusha
lock
stc
and
and
jg
imul
insb
insl
out
mov
mov
xor
xchg
sti
ret
mov
xor
fnclex
jmp
or
clc
jae
sbb
mov
mov
push
imull
sbb
imull
xchg
xchg
loope
sarl
and
fdivr
dec
xor
sub
dec
int
push
fidivl
mov
ljmp
call
xorb
ret
fldl
or
sub
test
imul
mov
lods
in
sbb
insb
stos
popf
enter
pop
mov
xchg
pop
add
and
pop
adcb
mov
mov
pop
mov
fwait
js
mov
sbb
dec
mov
mov
sub
cmp
sub
leave
sub
jne
push
insl
fwait
cli
clc
inc
mov
aad
lds
sti
andb
fldcw
int3
xchg
sbb
cli
mov
inc
enter
adc
mov
aas
mov
nop
pop
mov
or
icebp
dec
std
push
in
mov
imul
insl
or
mov
mov
xor
push
and
and
add
lds
mov
shlb
mov
ss
push
adcb
mov
aam
insl
loopne
add
ja
outsb
push
fisubl
dec
push
jp
dec
popa
mov
movq
dec
into
cmp
sbbl
cltd
js
mov
orb
in
or
pop
jnp,pt
cmp
push
movl
int3
push
roll
push
push
call
es
push
push
gs
je
xchg
out
mov
hlt
nop
test
mov
or
add
pop
in
inc
dec
mov
cmc
and
lret
add
push
push
cmp
xor
add
xchg
xor
daa
adc
rep
dec
xorb
enter
int3
push
or
mov
ficomps
xor
in
imul
dec
xchg
dec
stos
cmp
or
mov
add
cmp
cmpsl
push
pop
cmp
negl
pop
adcl
mov
scas
cli
or
outsl
push
add
and
pop
ret
mov
push
inc
icebp
mov
and
sbb
push
lcall
hlt
ror
push
aas
adc
mov
and
in
fldcw
mov
jmp
pusha
pop
sub
and
inc
mov
dec
dec
push
adc
fnstenv
rorb
loope
lcall
push
dec
jle
mov
lret
sub
test
sti
mov
repnz
mov
repnz
std
stc
push
pop
push
imul
cld
mov
sbb
js
mov
inc
adc
cmovnp
imul
pushf
loope
shrb
cmpsl
stc
jmp
sahf
or
mov
cmp
push
fidivs
out
icebp
fldl
aam
mov
jg
push
icebp
lahf
lahf
outsl
xchg
mov
movsb
or
adc
lds
xor
decl
sub
fistl
popf
enter
jecxz
mov
sbb
dec
fcmovnu
les
clc
aaa
mov
stos
sbb
cltd
test
ja
jecxz
mov
mov
or
push
rcl
push
cmp
xor
lcall
into
outsl
and
mull
out
gs
xor
inc
or
mov
shll
addb
jmp
shll
sub
dec
cwtl
jno
push
lods
repnz
jbe
adcb
jns
int
mov
cmp
cmp
enter
inc
fcmovnb
push
mov
jg
mov
aad
mov
xor
mov
jecxz
mov
ja
xor
pop
in
clc
inc
push
push
mov
jne
jp
jbe,pn
or
cmc
xor
ss
gs
cmp
jbe
sub
adc
out
xor
adc
fdiv
or
sbb
sti
sbb
mov
repz
push
int3
cmp
mov
mov
add
push
fcompl
jecxz
push
cmp
je
mov
inc
jns
mov
rcrl
mov
mov
mov
xchg
pushf
fistpll
dec
aaa
mov
cmpb
negl
scas
jns
push
mov
jl
inc
mov
pop
jle
xor
dec
inc
sub
jo
pop
mov
push
inc
lea
shll
mov
adc
dec
incb
fcmovnu
js
push
or
outsl
int3
rol
push
inc
stos
add
aad
fwait
and
stos
mov
pop
test
pop
pop
or
leave
ljmp
xor
mov
lock
dec
aad
and
andl
push
xor
xchg
xchg
mov
and
bound
shl
roll
dec
xor
ds
or
ret
or
jae
shr
mov
push
and
and
es
xchg
test
cmp
and
aaa
mov
lret
daa
mov
fs
push
adc
mul
repnz
jbe
movups
xor
and
int3
bound
add
and
mov
add
sbb
jbe
jbe
pushf
cmpb
jb
inc
sbb
xor
push
out
inc
push
lea
outsb
mov
add
test
test
push
or
xor
leave
dec
inc
fistl
out
push
and
loope
adc
xchg
xchg
ficomps
cmpsl
mov
and
push
and
dec
stos
inc
in
sahf
or
push
or
leave
dec
fwait
fs
push
popa
out
xor
outsb
mov
xorb
pop
es
and
daa
add
jae
push
sbb
add
mov
out
or
loopne
pop
dec
ret
mov
xor
in
int3
or
or
shlb
nop
xor
sub
xchg
dec
pop
loop
sbb
xchg
cltd
cli
inc
insb
xor
flds
mov
sbb
cltd
cwtl
sub
mov
ljmp
pop
mov
testl
shl
popa
sbb
mov
sahf
push
das
xor
shrb
gs
out
xchg
mov
push
dec
mov
mov
ja
pusha
das
cmp
push
push
sbb
sub
jecxz
pop
cmp
bound
pusha
mov
mov
xchg
add
jmp
dec
shll
xor
dec
shlb
test
push
addb
movsl
ret
jnp
adc
sub
mov
mov
mov
std
mov
xchg
sahf
insl
test
and
sbb
mov
add
jb
shrl
movsl
jne
mov
push
das
pushf
and
xor
mov
add
adc
jmp
dec
test
shrl
inc
insb
mov
aas
bound
vpinsrw
jno
adc
xor
mov
into
cmp
cltd
inc
adc
add
jae
adc
nop
or
dec
xchg
sbb
push
sbb
xchg
xorb
pop
cli
iret
and
mov
sbb
or
pop
sub
or
shrb
outsb
push
repz
popa
mov
inc
bound
or
push
pop
mov
sub
or
aaa
sahf
icebp
adc
cmp
mov
mov
dec
hlt
and
mov
pop
xor
jl
je
and
lods
cwtl
adcl
movsb
inc
and
shll
dec
dec
clc
jb
jle
lcall
pop
jecxz
fsub
xorb
shlb
dec
movsl
mov
xchg
in
pop
test
rcll
fsubl
mov
add
dec
push
jne
adcb
cmpb
lahf
aad
test
outsl
push
xchg
jl
imul
movsb
or
mov
add
add
mov
loop
jne
aas
push
cmp
and
loop
ja
outsb
iret
into
imul
cmp
mov
scas
cs
stc
cld
sahf
sbb
movsl
ja
add
fistpl
mov
xor
cwtl
push
repnz
mov
pushf
jmp
in
push
ljmp
addb
arpl
xor
inc
sbb
adc
push
mov
sbb
in
or
pop
jl
mov
mov
mov
adc
xchg
add
outsb
movsb
popa
sbb
test
cmpsl
push
paddsw
push
pop
mov
loopne
push
push
push
inc
push
add
rcll
int
sarb
mov
mov
movsl
fiadds
push
gs
cli
pop
push
rcl
pop
cmp
and
test
cli
or
rcll
lcall
inc
lcall
push
jmp
xchg
push
les
arpl
add
popf
icebp
popf
inc
int3
repz
call
mov
ret
ret
faddl
loop
mov
addr16
shr
add
daa
repnz
sub
divb
xchg
orl
dec
outsb
cli
popf
add
cmp
sub
mov
and
pop
lahf
imul
cmpsb
hlt
xor
xor
mov
mov
add
aas
cmpsl
adc
mov
or
das
jnp
mulb
insb
pop
push
das
inc
stc
outsb
cmp
mov
int3
ja
dec
jno
in
stc
push
pop
xor
dec
lea
rcrb
mov
ljmp
mov
test
je
lahf
cmp
in
add
inc
inc
movb
cmc
ds
lcall
xlat
bound
roll
jmp
cmp
mov
stc
mov
cmpsb
fildll
mov
sbb
repnz
lea
or
fwait
sub
add
jae
and
mov
push
push
inc
adc
lock
stos
xchg
fdivrs
stos
sub
lret
xchg
cwtl
mov
ret
fldl
jp
jle
or
adc
repnz
cwtl
test
mov
mov
ljmp
dec
in
pop
adc
mov
incb
das
test
jb
mov
pop
lods
adc
repnz
loope
push
mov
sbb
xchg
add
repz
rep
cli
js
repz
or
bound
jns
or
dec
std
push
inc
loope
aaa
adc
outsl
xor
xor
ljmp
aaa
inc
dec
push
push
mov
loop
lcall
mov
push
mov
leave
xchg
call
cld
sbb
cmp
sbb
out
lods
out
mov
popa
cs
orl
scas
out
xor
mov
scas
lcall
adc
fcmovnbe
pop
push
sbb
dec
push
pop
call
call
mov
mov
daa
lods
aam
fmull
xor
jmp
xor
mov
sub
xlat
test
loope
xor
sub
inc
mov
lret
fnstenv
inc
dec
jg
sbb
pop
jb
fstps
push
popf
mov
andb
push
jmp
fisubl
rcl
out
mov
cli
inc
aaa
in
pop
cmp
pop
jno
call
out
adc
xchg
xchg
popf
enter
cmc
adc
sub
int3
push
pop
mov
ja
jecxz
mov
or
inc
cli
or
int
inc
leave
inc
cmp
dec
jbe
xchg
int
xchg
mov
mov
insb
xlat
dec
add
out
mov
mov
cli
add
add
xchg
cmp
fldt
arpl
shlb
fldenv
push
push
dec
lret
shll
and
adc
fcoms
pop
imul
stos
cltd
xor
cwtl
inc
pop
loopne
outsl
sub
jmp
loope
xchg
dec
or
es
or
lds
lcall
imul
xchg
push
or
xchg
add
ret
sbbl
pop
jge
in
js
mov
ljmp
rcrb
scas
dec
mov
mov
sbb
cwtl
fildl
jns
lods
add
out
std
or
sbb
cmc
sbb
xchg
daa
pop
pop
inc
mov
mov
fsubrl
sarl
int3
lret
ret
in
sti
xlat
rclb
adc
mov
stos
dec
inc
jae
sub
add
mov
pop
mov
cmp
dec
jno
lcall
push
sbb
xchg
enter
ljmp
mov
fdivrs
xchg
lret
or
jns
mov
xchg
cli
and
mov
sti
and
stos
cmp
add
pop
fisttpll
lea
addl
jle
ret
cmpsl
popa
dec
jnp
or
mov
jmp
cmp
iret
lret
add
mov
imul
cld
insl
stos
jne
mov
cmp
xchg
xlat
ret
or
cmc
ret
cwtl
cmp
dec
lret
repnz
in
mov
out
test
and
roll
shlb
jecxz
movsb
aas
nop
repnz
iret
dec
add
sbb
addr16
xor
addr16
mov
fbstp
add
jl
and
aam
insl
mov
pusha
xchg
leave
pop
scas
mov
stc
xchg
dec
ret
push
adcl
sub
xchg
hlt
ss
arpl
add
scas
imul
roll
adc
inc
and
jecxz
stos
movsb
cmpsb
gs
enter
les
dec
mov
xchg
das
jle
add
xor
or
les
ret
enter
lret
lods
xchg
idivl
and
jecxz
push
xchg
mov
push
fisubs
mov
icebp
lahf
cmp
scas
dec
jecxz
rcl
fstps
arpl
lret
xchg
and
jp
inc
push
adc
lcall
xchg
xor
or
sub
cwtl
mov
jmp
aam
es
mov
inc
popf
repnz
dec
lret
xlat
out
mov
jnp
mov
mov
arpl
aad
loopne
push
lods
mov
or
shrl
push
rcll
mov
stos
jle
cmpsl
xor
xor
xchg
shll
add
and
jae
push
fcmovu
xchg
cmp
or
inc
rcll
jg
lods
cld
mov
and
icebp
sub
lods
xchg
movsl
pushf
add
sub
cmp
jb
aaa
nopl
out
mov
or
push
pop
pop
mov
xchg
orl
push
addr16
pop
leave
cmp
fucomip
and
add
push
xor
mov
mov
mov
test
ljmp
aas
sbb
sbb
insl
inc
test
mov
adc
xchg
shlb
push
dec
push
mov
ret
outsb
mov
test
pop
add
or
cmp
je
fs
gs
sbb
pop
push
popf
filds
data16
pop
dec
fwait
sbb
dec
sbb
leave
adc
aas
xchg
and
push
enter
enter
and
je
add
aam
sub
sub
pavgw
pop
addl
jmp
jae
mov
dec
out
outsl
out
fwait
sahf
pop
jg
sbb
ret
mov
inc
sbb
add
sub
add
inc
push
pop
jmp
movsb
test
push
data16
aam
in
mov
addr16
in
mov
add
jle
arpl
dec
mov
jg
or
jg
push
and
dec
clc
daa
pop
pop
sub
mov
xchg
fldl
ss
mov
dec
loop
push
dec
jbe
int3
xor
sti
dec
loope
mov
faddl
mov
enter
inc
and
pop
mov
mov
pop
mov
add
je
and
xor
jb
cs
insl
push
dec
inc
jle
dec
lea
outsb
jae
inc
mov
xor
aas
inc
jmp
dec
test
mov
mov
dec
add
xor
aaa
hlt
cmp
ret
test
xlat
sbb
cmpsb
pop
js
or
mov
mov
ds
xchg
and
lea
iret
add
jecxz
pushf
clc
aaa
push
daa
xchg
cmp
es
out
loopne
or
adc
lds
out
dec
in
xor
sbb
sbb
test
xchg
jmp
jl
mov
sub
jno
sub
and
xchg
cmp
xchg
mov
sbb
mov
clc
test
mov
or
jnp
sub
push
addr16
push
mov
pop
mov
add
popf
mov
adc
pop
cltd
xor
fidivrs
out
push
sbb
mov
add
pop
inc
lret
and
xchg
add
dec
pop
das
mov
pop
mov
add
jne
xor
xor
or
dec
clc
sbb
in
jmp
pop
jl
jle
or
fstpl
ljmp
adc
orl
xchg
lock
xchg
stos
xor
popa
movsb
xchg
fbstp
xchg
dec
pop
nop
imul
ljmp
and
call
pop
mov
sub
icebp
outsb
sahf
shr
pop
aad
loop
mov
bound
mov
lods
aad
pop
test
ret
cwtl
or
and
jno
dec
and
push
push
push
add
frstor
pop
pop
pop
test
inc
jnp
pop
mov
lahf
test
orl
in
aas
xchg
bnd
adc
and
adc
das
sub
push
jno
icebp
leave
mov
shll
mov
int3
xor
push
inc
add
mov
shll
adc
in
or
add
pop
popa
mov
in
outsl
test
test
cmc
imul
push
push
jae
cmp
fcomp
fwait
push
mov
mov
pop
adc
or
mov
xchg
xchg
mov
mov
repnz
mov
mov
gs
mov
ss
int3
pop
xlat
in
mov
or
aaa
ret
outsb
pop
adc
sti
das
pushf
mov
fcoml
ret
jb
sbb
mov
add
mov
mov
fcompl
out
mov
xor
std
push
imul
mov
xorb
hlt
cmp
movsb
mov
xor
scas
xlat
cmp
aam
sub
cltd
jne
lock
pop
sbb
sub
sub
aas
lds
out
cmp
dec
add
pop
xchg
push
adc
sbb
aad
jp
adc
adc
lcall
inc
rcrl
nop
sbb
push
pop
test
cmc
mov
adc
out
adc
push
leave
xor
mov
jbe
inc
dec
cmp
scas
lret
jae
mov
in
mov
icebp
xchg
inc
aas
sub
sub
int3
stos
mov
and
fistpl
out
and
mov
movsb
xchg
je
push
add
sub
lods
cwtl
xorb
pop
std
cmp
mov
jle
js
xchg
cwtl
scas
scas
sbb
jl
out
or
fstps
ja
mov
jl
fmul
in
popf
sub
sbb
push
dec
cltd
xor
push
and
lods
ret
bound
sbb
xchg
mov
iret
mov
pushf
cs
dec
jl
or
es
cmp
fs
push
and
add
jle
mov
mov
mov
xchg
movsl
push
inc
pop
bound
in
mov
mov
ss
iret
adcb
cld
bnd
shll
xor
push
stc
xchg
rclb
mov
repnz
push
jmp
in
ja
sbb
movsb
mov
mov
or
mov
pop
mov
in
inc
cmp
ds
lahf
les
das
test
mov
mov
in
std
pop
ss
iret
out
mov
cmp
xchg
fmull
or
stos
rcrb
push
xchg
es
and
outsb
insl
sbb
icebp
add
sahf
lds
jl
dec
je
inc
xor
xor
mov
pop
mov
xchg
lods
test
inc
sub
cli
jecxz
dec
push
stos
leave
and
aas
and
bound
pop
xchg
pop
je
push
sbb
sahf
in
jmp
fidivl
int
imul
mov
adc
or
mov
mov
xchg
into
sbb
pusha
mov
inc
icebp
rclb
outsb
mov
in
and
loopne
imul
push
push
jo
xchg
fsubl
test
icebp
or
bound
mov
lods
pop
test
adc
xchg
mov
loope
xchg
push
push
rorl
ss
mov
sbb
arpl
pop
jb
and
ret
pop
std
scas
shrl
push
jle
lock
es
loopne
jecxz
cli
mov
pusha
pop
fnsave
mov
imul
lcall
in
repz
jb
movsl
das
dec
fdivl
inc
jg
mov
mov
je
cmp
gs
stos
cmpsb
push
cmp
andl
nop
push
push
mov
and
add
or
jae
push
cmp
fisttpl
mov
fs
jmp
xor
ja
lods
xchg
out
shl
in
lods
push
dec
shr
sbb
out
fwait
dec
das
add
xchg
mov
enter
test
mov
cmp
dec
inc
push
mov
cmp
or
cmc
inc
push
in
mov
lcall
in
dec
hlt
push
adc
insb
ret
sbb
std
repnz
shll
repnz
mov
fsubs
in
in
sbb
cli
push
sub
cltd
jp
lea
adc
xor
hlt
popa
push
push
sarb
bound
pop
mov
inc
adc
sahf
dec
xor
ja
sbb
push
adc
call
push
mov
ret
mov
mov
mov
data16
mov
dec
add
push
shl
or
push
or
sti
ret
and
sub
mov
mov
test
sub
pop
and
iret
jae
pop
cld
ret
dec
mov
dec
mov
sbb
pop
adc
xor
divb
orl
je
and
mov
add
lods
or
sub
jne
cltd
mov
movsl
ret
or
cmp
repz
xchg
pop
cmp
mov
or
inc
addl
lds
aad
aam
cwtl
andb
les
adc
mov
es
adc
fsubrl
xchg
inc
mov
add
mov
sbbb
mov
divl
pop
adc
in
leave
add
pop
and
ffree
pop
ja
jp
enter
sahf
repnz
pop
insl
mov
pop
add
rcrl
adc
into
push
dec
loope,pn
movsb
and
js
test
jbe
popf
push
and
inc
xor
jb
jecxz
into
scas
and
sahf
stc
push
aam
testl
jl
addb
ljmp
leave
add
cmp
adc
adc
push
cmpb
shll
push
xchg
adc
cli
pop
mov
mov
and
or
outsl
and
stc
lcall
mov
mov
mov
andb
push
mov
jg
cld
sub
pop
inc
fninit
and
and
jnp
int
in
mov
inc
pop
nop
repnz
push
lods
pop
cmp
test
jp
scas
ds
outsl
dec
shl
sahf
sub
mov
mov
aam
fnstsw
jmp
xor
xchg
sbb
out
mov
push
out
int3
sbb
add
mov
and
push
jne
out
popa
jge
bound
mov
movsl
movsl
in
imul
xchg
jge
scas
dec
xchg
or
test
mov
ljmp
or
inc
repnz
xchg
add
loopne
add
insl
push
add
push
xchg
lods
ds
not
xor
sbb
sbb
inc
inc
es
je
dec
mov
mov
pusha
fmull
inc
mov
or
rol
cmp
pop
adc
test
lods
scas
sbb
popa
repnz
pop
inc
add
inc
xor
out
inc
loopne
popa
jmp
mov
add
stc
addr16
nop
inc
aad
movsl
xchg
aas
jo
adc
cmpl
xchg
mov
cmp
pop
test
pop
enter
int3
jns
daa
mov
xchg
jne
sbb
push
movsl
and
scas
ficoms
xor
rorl
mov
aaa
lret
and
outsl
popf
in
xor
lret
fnstenv
aad
lahf
or
mov
pop
and
sub
and
call
insl
icebp
int
mov
ja
lds
add
addr16
ja
insb
stos
popf
testl
mov
jp
adc
inc
int3
cmp
mov
cld
inc
pop
into
or
sub
and
popa
clc
cmp
sub
sbb
lahf
xchg
mov
sbb
push
dec
jl
xchg
std
xchg
push
cmp
in
pop
push
loopne
mov
jne
test
leave
int3
fs
out
mov
or
in
movsl
add
adc
cmc
inc
mov
mov
xor
enter
in
roll
lods
lcall
mov
divb
stc
inc
leave
shll
mov
idivb
pop
jle
push
scas
mov
mov
cmc
or
pop
scas
sbb
pop
and
mov
fistpll
loop
mov
ret
fs
add
jno
push
aad
inc
out
lea
sbb
std
ja
dec
push
insb
pop
pop
mov
sbb
pop
gs
push
sub
loopne
jno
lock
fbld
cmp
test
sub
push
xchg
sbb
in
pop
inc
arpl
inc
shrl
popf
sbb
jge
dec
cmpsl
xchg
mov
cmp
push
mov
push
dec
or
mov
aad
andl
lock
xchg
repnz
sub
and
mov
data16
sub
fcmovu
and
hlt
push
jmp
scas
shlb
ss
sbb
pop
arpl
pop
push
stos
lock
jns
push
and
push
inc
dec
arpl
mov
mov
out
int
or
sbb
lret
hlt
push
jbe
das
cmp
mov
dec
sti
pop
fiadds
add
push
add
and
and
stc
stos
push
xor
push
xor
insb
pop
enter
add
int3
adc
add
xlat
or
fs
filds
aaa
cmpsb
or
cmp
jns
mov
inc
mov
xor
aaa
frstor
pop
cmp
clc
clc
jno
pop
ljmp
xlat
pushf
cs
cmp
cmp
popf
mov
insb
add
cmp
loopne
jae
movsl
ret
fsqrt
mov
xchg
fldenv
push
cmp
mov
iret
pop
iret
shl
stc
cltd
lss
jge
subb
cmp
jno
sub
pop
sarl
mov
je
mov
icebp
aas
iret
cmpsb
push
mov
mov
mov
fldenv
push
push
push
loop
push
lret
sub
mov
orb
mov
inc
sub
jle
mov
xchg
shrb
cmp
mov
sti
xchg
daa
mov
jg
loopne
fs
mov
cwtl
xchg
enter
ja
and
mov
push
and
and
fnstsw
and
push
mov
mov
repnz
mov
nopl
hlt
dec
jmp
fimuls
fwait
arpl
movsl
mov
add
sti
inc
cmpl
ds
inc
jmp
adc
out
jmp
or
inc
push
daa
jmp
jp
mov
addb
push
shrl
mov
jg
push
mov
sbbl
mov
or
pop
imul
sub
add
push
movsl
test
and
jnp
xchg
mov
pop
imul
test
mov
sti
inc
call
hlt
cld
or
dec
call
ss
pop
push
int
mov
lahf
jg
clc
mov
sbb
insb
in
roll
pop
rcl
mov
or
xorb
sub
mov
nop
repnz
xorl
sub
repnz
sti
push
lcall
jbe
mov
mov
xchg
je
xorb
loope
fs
in
pop
dec
scas
fsubrl
mov
idiv
mov
adc
fnstsw
push
jl
mov
into
cld
or
or
imul
inc
adc
mov
leave
push
mov
scas
in
jge
inc
jmp
sti
sub
es
stc
rcr
int3
jmp
aam
xor
mov
into
ljmp
cmp
out
cmpsb
mov
sub
xchg
or
ret
inc
insl
mov
ds
sub
test
repz
jg
dec
push
sbb
mov
fcmovbe
adc
mov
cltd
clc
iret
inc
jne
int
sub
add
es
loop
loopne
cld
mov
lcall
out
add
sub
imul
sti
push
jns
insb
scas
add
jg
sub
out
mov
sbb
lds
bound
pcmpeqb
repz
ficompl
stc
jns
mov
bound
cmp
cmp
outsl
loope
out
lods
cmp
pop
inc
fsts
jbe
pusha
pop
and
int
inc
fs
lret
jge
mov
mov
shrb
or
jp
and
adc
sbb
pop
mov
adc
es
into
popa
xchg
push
cmp
jbe
sub
pusha
dec
cmpsl
sub
and
cmp
es
mov
push
shl
adc
jno
dec
shlb
push
xchg
lock
loop
dec
jb
jmp
test
hlt
fbld
mov
out
sub
inc
inc
cmp
arpl
test
and
loop
std
movsb
popf
fdivl
xor
mov
dec
shl
jecxz
imul
test
insl
pop
jle
push
sbb
mov
aas
aaa
ss
sub
lahf
xor
leave
ret
push
xlat
push
ja
fidivl
or
jno
jbe
stos
jbe
sub
or
xlat
jge
lret
push
xor
fs
inc
scas
mov
shlb
fwait
mov
lock
mov
jle
insb
xlat
jg
or
in
mov
mov
push
pop
insb
xchg
rcl
aad
inc
jno
outsl
imul
nop
rclb
hlt
ret
stc
pop
fwait
or
outsl
and
mov
mulb
scas
shll
inc
mov
imull
dec
out
sarl
jb
adc
aad
stos
cwtl
ja
ja
or
aad
outsl
pop
cmpsb
js
push
clc
jge
or
fmuls
icebp
test
pop
and
xchg
push
div
sbb
mov
dec
out
test
mov
push
bound
ja
out
mov
cli
hlt
or
inc
lahf
test
jmp
pop
clc
sbb
roll
mov
fsub
push
or
arpl
daa
in
test
movsb
pop
adc
dec
arpl
shlb
int
in
sahf
push
test
add
sbb
pop
in
aad
dec
push
and
dec
jnp
ja
and
mov
into
setge
sub
loopne
roll
inc
in
sub
push
push
jbe
cs
lcall
xchg
and
mov
popa
aam
mov
bound
jl
notb
fcomp
cld
loop
nop
leave
aaa
imul
lods
xchg
pop
ja
cmpsb
mov
outsb
mov
push
ret
jecxz
push
cwtl
ds
sub
add
xor
repnz
subl
jbe
out
add
repz
xchg
and
incl
cltd
sar
jg
lea
xor
cs
icebp
pushf
adc
dec
push
inc
bsf
fmul
adc
xor
mov
pop
jmp
int3
outsl
lods
sbbb
xchg
pushf
fnstcw
js
pop
jae
sbb
or
imul
scas
rcl
xor
xchg
icebp
mov
adc
pushf
adc
add
or
push
test
adcb
pop
and
xor
cmp
add
xchg
mov
outsb
sbb
mov
cltd
sub
in
cmc
aad
fidivrs
push
lret
je
mov
xor
bound
adc
icebp
jmp
dec
push
out
mov
int
xor
add
fcom
push
mov
stos
xor
into
jbe
mov
imul
mov
mov
xchg
mov
shrl
cmp
push
jecxz
js
mov
xchg
out
pop
cwtl
sbb
or
test
stc
jne
or
dec
add
mov
imul
in
lahf
adc
or
out
cmp
xor
in
hlt
sahf
cmp
jbe
dec
jb
or
fisttpl
or
nop
les
or
incb
arpl
dec
pop
fmull
lcall
adc
mov
mov
inc
sbb
or
fistpl
xor
outsb
dec
test
outsl
popl
push
or
add
bound
or
push
cwtl
push
pop
cltd
xor
jg
fdivs
xor
jns
dec
add
pop
ret
mov
jo
fiadds
test
dec
fldcw
mov
in
mov
js
add
addr16
lock
mov
lahf
xchg
ja
nop
ror
outsb
shll
dec
and
ds
shrl
shr
adc
dec
int
push
sti
fnstsw
dec
dec
inc
mov
and
pop
mov
xchg
and
sar
movsb
lcall
sti
stc
pop
jg
sub
cmpsl
arpl
repz
mov
or
push
pop
dec
rcrb
dec
pop
cs
mov
daa
into
sbb
mov
test
inc
aam
sbb
addr16
add
or
xchg
mov
je
dec
and
jge
jne
outsb
pop
mov
ror
sub
jg
es
jle
shll
popa
cmpsl
movsb
mov
outsl
fstl
sbb
fnstenv
stc
add
push
scas
mov
insb
lret
add
pop
aaa
aas
and
cmp
add
insb
lret
loopne
out
add
lahf
das
jbe
lahf
dec
add
inc
lret
dec
cmpsl
jp
add
add
scas
test
cmp
push
subb
xchg
mov
out
and
or
adc
dec
nop
aam
pop
popf
jne
dec
push
adc
jnp
mov
imul
leave
ret
xchg
subb
mov
popf
call
jne
mov
mov
idivb
lds
insl
and
push
or
std
aad
aam
jmp
add
sti
pop
mov
int
aaa
aaa
out
pop
ja
lds
cmp
call
sti
fcmovbe
sarl
lds
sub
mov
push
mov
pop
and
pop
jne
loope
inc
xlat
or
mov
daa
add
add
mov
test
ret
sti
xchg
mov
dec
jnp
dec
idivb
imul
imul
in
push
push
rcrl
inc
sahf
test
jb
subb
ffree
adc
lret
in
test
out
xor
sub
sub
push
outsl
add
out
and
sbb
xlat
cli
inc
mov
cmp
enter
ja
icebp
addl
xchg
add
fstpl
inc
sbb
add
add
cmp
mov
insb
sub
mov
jge
dec
cmc
cwtl
pop
lods
out
iret
ja
je
xchg
dec
roll
push
xor
mov
cs
stos
sbb
cmpsl
sbb
push
xor
mov
sub
xor
adc
insl
cmp
jp
popa
add
mov
jle
fcomps
push
or
mov
pop
inc
sahf
dec
mov
mov
pop
call
xor
xor
or
mov
or
cli
sub
sub
incb
test
jp
dec
pop
or
mov
out
ret
sub
dec
cmp
shl
cmp
das
es
mov
cmpl
sbb
js
jle
sbb
clc
popf
gs
sub
mov
cmpsl
insl
imul
push
or
orb
jg
inc
js
fldt
adc
in
int
loope
sbb
fidivrl
mov
insl
push
imul
fiadds
adc
jnp
dec
in
xchg
pop
inc
pop
repz
and
cmpsb
jg
aam
adc
icebp
cwtl
or
rcr
pop
sar
fwait
adc
xchg
jmp
pop
push
test
inc
dec
dec
je
testb
sub
sub
add
inc
xor
adc
adc
cs
sbb
jp
push
cmp
cld
rorl
pusha
xor
movhps
cmpb
sbbl
lock
push
std
pop
jge
sbb
adc
lret
popa
lods
lods
ret
jecxz
and
and
jmp
adc
push
mov
push
inc
cs
nop
sbb
dec
shll
ret
lods
push
lcall
mov
scas
nop
pop
cmp
das
adc
and
mov
call
inc
jmp
adc
push
out
stc
sahf
pop
or
mov
xor
add
mov
pop
jg
cmp
loope
mov
pop
jns
les
fcomps
test
not
out
cmp
or
shrl
lret
das
pop
mov
out
lret
bound
lea
mov
jno
pop
lcall
mov
fcoms
les
adc
lods
imul
or
dec
xchg
add
xchg
sahf
int3
pop
fcomip
aas
xor
sbb
test
cmc
xor
repnz
and
mov
inc
mov
mov
mov
je
outsb
dec
js
lods
mov
inc
inc
push
xchg
jbe
xchg
push
xchg
push
std
loope
mov
mov
xor
pop
dec
repz
dec
mov
cmc
mov
cmp
cmp
push
dec
xchg
cmc
lods
xor
dec
mov
add
out
sbb
les
ja
or
pop
std
xchg
stos
mov
sbb
push
adc
fcoms
mov
dec
mov
in
sbb
std
mov
arpl
movsl
fwait
pop
sub
push
shlb
cmp
lods
scas
fnstenv
fidivs
pop
insl
ret
sbb
gs
xchg
lahf
sbb
outsl
sbb
jp
xchg
fsubp
sbb
insb
pop
mov
ljmp
mov
mov
cmp
push
inc
bound
mov
lods
dec
pop
lahf
aam
out
xor
push
mov
repz
mov
movsb
xchg
mov
jno
in
and
adc
stos
mov
insl
xlat
outsl
jl
cs
lret
subb
mov
scas
jl
enter
jbe
jno
mov
aad
push
loop
inc
scas
fistpll
jl
lret
into
cmc
sbb
add
les
add
shll
push
or
mov
add
cltd
dec
sub
iret
push
xchg
flds
adc
jp
sub
popf
dec
jno
jo
pop
ror
sub
in
push
add
mov
popa
inc
sub
push
xor
mov
loopne
adc
pop
push
push
sbb
xchg
addr16
cmc
sbb
gs
cmp
fdiv
rol
lods
cmpsb
mov
out
xor
subb
xchg
and
xchg
loope
add
divb
scas
lea
ret
in
neg
mov
xor
push
adc
ss
and
dec
jp
or
iret
scas
mov
in
adc
stc
mov
cmpsl
jns
adc
xchg
fnstcw
and
sub
stc
nop
lcall
push
adc
dec
lea
cmpsl
push
pop
loope
es
or
xor
push
cld
cld
popf
aad
xor
sbb
xchg
mov
adc
xor
and
lods
ljmp
adc
loope
cwtl
or
xor
xchg
and
icebp
pop
push
cld
repnz
aad
fldt
dec
lret
outsl
cli
inc
mov
inc
fistpll
adc
popf
ret
lods
xchg
sar
mov
mov
push
arpl
jecxz
idiv
int3
inc
loop
pop
adc
das
mov
or
push
cmp
inc
mov
cmp
aam
push
pushf
sbb
scas
sti
mov
out
neg
pop
pop
in
push
popa
lahf
and
mov
jae
sbb
push
inc
push
adc
lds
cmc
test
and
xchg
pop
mov
cmp
cmp
cmp
cmpsb
test
xlat
in
icebp
xor
push
loop
add
fistl
inc
stos
imul
repnz
push
jno
cmp
sbb
or
repz
aam
jae
std
movl
mov
out
jno
mov
inc
jp
cmpsl
adc
jl
xor
lds
xor
pop
aad
cmp
ljmp
sub
pusha
xor
push
iret
pop
pop
pop
cmp
data16
push
push
shl
inc
outsb
xlat
out
mov
dec
clc
fldcw
leave
stc
xchg
xchg
xlat
call
sbb
lcall
jnp
lods
mov
xchg
sub
xchg
pop
cs
aam
mov
and
adc
mov
test
add
adc
sbb
inc
dec
mov
jg
jge
data16
pop
adc
lgs
int3
in
mov
out
xor
mov
inc
es
mov
push
test
sbb
bound
out
bnd
movsb
movsb
and
setp
imul
cwtl
insl
add
jp
imul
jl
sub
and
pushf
cli
add
cmp
mov
add
std
lock
addb
cmp
movsb
into
es
push
xlat
movsb
pop
sbb
int3
cmc
jae
cmpsl
in
or
mov
idivb
adc
mov
xor
cmp
jbe
sahf
aas
sbb
stos
bound
rcll
popf
xor
dec
pop
scas
and
roll
adc
adc
popa
lock
fisttpll
das
je
mov
ret
jno
dec
dec
xchg
lret
adc
mov
pusha
mov
or
loope
xor
movsl
cmp
adcb
cmp
int
inc
aas
cmp
mov
dec
or
mov
adc
mov
movsl
adc
fiadds
fisubs
push
mov
out
pop
mov
inc
mov
cwtl
cs
lea
fwait
adc
xor
and
xchg
lret
insl
test
mul
bound
jnp
test
cli
pushf
and
sahf
stos
dec
jae
lds
mov
add
mov
stos
int
loop
je
pop
and
dec
fstp
mov
cmp
stos
mov
cli
mov
imul
lods
sbb
push
dec
stos
rclb
dec
sbb
popf
push
add
dec
xchg
dec
loop
ret
sub
cmp
fmuls
push
out
out
push
sub
push
dec
mov
cmp
dec
pop
aaa
pop
lods
inc
xor
jnp
das
ret
cwtl
lods
jp
xchg
mov
pop
rcll
xorb
push
gs
mov
aas
sbb
xchg
or
push
sbb
mov
sbb
lahf
ret
jns
fucomip
iret
jmp
gs
pop
and
xchg
fs
mov
lret
lods
bound
adc
or
scas
dec
rclb
sub
hlt
sub
mov
jle
bound
push
mov
dec
lea
jo
pop
jg
sub
dec
loop
pop
dec
jp
sub
cli
aaa
sbb
sub
mov
xor
xchg
repnz
repz
jecxz
movsb
inc
jl
idivb
mov
push
iret
adc
mov
cltd
pop
pop
mov
mov
xor
lods
pop
ret
arpl
sub
pop
cmpsl
imul
jg
jns
sbb
aad
or
mov
pop
or
imul
dec
and
push
push
lret
inc
xchg
push
or
faddl
leave
mov
cld
out
mov
dec
and
sbb
das
and
pop
sbb
lahf
mov
xchg
pop
dec
fildl
push
loope
mov
test
cmpsl
fistl
ret
cltd
pop
stc
push
push
stc
ja
ficompl
or
xlat
std
mov
loop
cmpsl
cld
fcmovne
pop
imul
js
sub
pop
mov
in
rep
insb
psrld
data16
arpl
xor
imul
inc
popf
mov
icebp
mov
pop
incl
push
adcl
fisubrl
mov
pop
jmp
adc
sbb
lret
jno
stc
lock
dec
inc
arpl
imul
gs
pop
cmp
xchg
dec
stos
jl
outsl
lds
jnp
sahf
dec
stc
test
or
testl
jae
clc
nop
test
aad
iret
gs
dec
cli
adc
xchg
adcl
or
loopne
and
xchg
jmp
push
imul
nop
and
and
sbb
gs
lahf
mov
fldt
mov
lods
fists
mov
or
cmpl
aam
hlt
int3
cmc
test
pusha
sbb
out
push
cmp
jecxz
enter
and
subl
lret
adc
mov
in
pop
int3
loop
popl
sbb
mov
rcl
mov
movsl
out
mov
mov
xchg
jbe
or
cltd
mov
sahf
mov
sbb
cmp
ljmp
sub
inc
movsl
or
loope
xor
popf
pop
out
mov
movsb
xchg
outsl
out
mov
pop
and
decb
jecxz
mov
add
mov
xor
dec
inc
pop
or
movsl
fistps
gs
pop
clc
adc
icebp
jmp
and
stos
fidivrl
fadds
add
mov
cmp
repnz
inc
inc
mov
xor
sahf
sub
push
cli
dec
inc
popa
gs
or
jne
movl
out
pop
jge
add
sahf
cmp
jnp
jnp
inc
cmp
cltd
or
int3
fcmove
inc
cmpsl
push
fyl2xp1
mov
ds
sub
mov
jge
push
or
jecxz
mov
xchg
sbb
add
cwtl
xor
stc
fcmovnu
pusha
xlat
out
pusha
out
outsb
add
sar
popl
gs
push
xor
push
aam
inc
call
cmp
lds
fisttpll
sub
push
xchg
sbb
jp
jo
xlat
or
int
mov
fildll
mov
add
pusha
aaa
pusha
shlb
leave
pop
mov
adc
cmp
jne
testl
jle
mov
mov
inc
and
jbe
movsl
stos
pop
mov
scas
fdivrl
sbb
dec
jp
sarb
cmp
mov
bound
or
or
cmp
mov
mov
dec
cmp
mov
addb
pop
js
mov
pop
out
test
jae
jp
mov
in
cmpl
dec
in
clc
fsts
push
xchg
ja
popf
adc
and
stc
inc
mov
cld
bound
cmpsl
sbb
fdiv
mov
inc
sub
fcoml
pushf
fldcw
lods
jecxz
push
out
mov
mov
mov
or
cld
sub
push
mov
pop
jne
add
cmp
insb
inc
dec
pop
sbb
add
and
and
out
add
mov
cmpsl
push
in
test
cltd
test
or
pop
dec
imul
popa
and
and
gs
clc
push
pop
cld
stos
sbbl
hlt
in
push
addl
aaa
std
lret
cltd
lock
push
inc
inc
mov
xor
out
mov
popf
stc
outsb
loope
xor
jge
das
jle
cmp
pop
fcmovne
xor
and
out
outsb
mull
flds
inc
lcall
mov
in
lock
pusha
sub
daa
mov
pop
add
mov
push
lahf
xor
enter
aam
mov
popf
cmpsl
std
in
aas
pushf
push
dec
pusha
shl
mov
push
adc
nop
notb
xchg
mov
or
mov
pop
mov
cmp
sbb
sbbl
xchg
sbb
jo
les
sbb
rcrl
push
outsl
pop
loope
and
dec
sti
stos
aaa
sub
ret
sar
sub
or
cmp
xchg
push
inc
pop
popa
ret
sub
out
outsl
scas
das
cmp
mov
sar
sbb
aaa
adc
lds
stos
in
addl
aad
lea
aad
or
xor
js
frstor
scas
aad
inc
pop
mov
dec
out
aad
in
cmp
test
sub
outsb
enter
push
pushf
mov
jle
cmp
clc
jge
jns
pop
push
cmp
inc
es
mov
xor
stos
xor
mov
dec
cmp
jne
popa
and
es
cs
cmp
mov
scas
mov
aad
pop
xor
mov
push
and
outsl
xchg
xchg
xchg
scas
adc
push
test
mov
add
cs
mov
xor
ljmp
inc
clc
jecxz
cmp
in
cltd
repnz
jmp
push
popf
jg
push
jmp
inc
mov
or
add
mov
dec
ja
push
sbb
ret
push
lahf
negb
and
xchg
cmpl
mov
dec
fiaddl
leave
roll
cmpl
adc
inc
sub
mov
cmpsl
mov
loope
inc
sbb
cltd
dec
sub
adc
adc
xor
add
popa
pop
adc
jnp
stos
adc
nop
xchg
in
in
mov
cwtl
cmp
ffreep
in
and
adc
add
scas
std
jge
outsl
xchg
mov
cmc
fs
shrb
push
dec
scas
add
dec
divl
stos
mov
mov
rcrl
push
insl
ss
stc
and
push
cli
out
or
aam
outsl
fidivs
mov
shl
adc
inc
jmp
iret
inc
das
push
ret
mov
jecxz
mov
xor
pop
imul
mov
cmp
lahf
sbb
popf
jl
push
data16
xor
sbb
in
push
mov
xchg
xchg
and
pop
cmpsb
cli
sbb
outsb
shlb
cmpsb
add
xchg
push
cmpsb
inc
push
pop
loopne
daa
inc
push
test
dec
lcall
dec
and
pop
das
jb
jg
loope
flds
lret
jp
call
dec
out
jl
popa
sbb
shlb
mov
add
mov
push
add
xchg
add
mov
andl
insl
fnstcw
test
pop
pop
jns
mov
jbe
xchg
jo
shr
mov
in
xchg
xorb
push
daa
lods
xor
xchg
pop
dec
sbb
std
cltd
imul
fs
in
leave
xchg
mov
xchg
xchg
lods
adc
cltd
push
call
pushf
mov
mov
out
iret
shlb
sub
or
mov
push
or
daa
js
inc
push
inc
lret
adc
sbb
in
mov
mov
jns
xchg
roll
xchg
sbb
mov
mov
into
addl
sub
cmp
sbb
nop
sub
add
movsb
test
xchg
das
call
aas
cmpsl
and
inc
mov
inc
cmp
add
hlt
mov
sarl
lea
mov
clc
orl
xor
pop
xchg
cmpsb
dec
mov
in
push
ficoml
pop
xor
fisubrs
bound
jno
add
cs
pop
push
add
or
cmp
pop
test
lds
lock
decl
cmpsl
cmpsl
inc
or
cmpsl
divb
decb
loopne
adc
repz
and
divb
sub
sub
inc
sbb
jmp
pop
mov
incl
dec
or
add
push
je
cld
orb
dec
call
aaa
mov
or
ret
jp
out
add
mov
and
inc
jg
shlb
sub
shll
mov
jbe
lods
hlt
cmp
or
int3
push
push
pop
out
or
push
add
sbb
fnsave
mov
imul
mov
sbb
divl
jle
scas
in
cmp
sti
out
test
and
fbstp
jecxz
outsl
mov
push
or
push
mov
mov
adc
neg
mov
call
lods
xchg
cmp
sub
les
push
and
push
jp
loop
xchg
jbe
sbb
xchg
pop
outsb
inc
addl
test
sub
sbbb
sub
test
ss
push
test
add
add
pop
je
popf
mov
ja
cld
arpl
push
jno
sbb
pop
mov
xor
mov
sarl
xor
mov
dec
push
mov
daa
ss
xchg
orb
jmp
daa
fcmovnb
comiss
sub
mov
push
mov
cmc
loopne
cmpsl
jl
sarb
in
stc
mov
and
jne
addr16
sub
in
dec
or
push
mov
push
inc
aaa
xor
inc
push
ficoms
in
mov
mov
sub
movsl
pop
cmpsb
xor
mov
lock
rorl
dec
jo
pop
add
inc
cmp
mov
mov
pop
cmpsl
xor
in
aas
adc
adc
mov
xchg
push
jns
ret
pop
je
pop
jo
pop
xchg
jmp
in
shrl
push
ss
fwait
lds
mov
pop
mov
scas
adc
std
fisubrl
xchg
leave
dec
jnp
dec
fadds
addl
xorb
jno
rep
or
inc
das
inc
popf
inc
mov
jl
dec
jmp
lahf
out
loop
in
icebp
rorb
aad
ljmp
popa
and
into
sbb
add
mov
lods
test
lods
sub
sub
push
cmp
cmpsb
test
push
xor
fiadds
ljmp
nop
push
cli
fstpt
add
mov
shrb
lods
mov
mov
mov
xchg
loopne
cmp
repz
nop
mov
mov
push
hlt
push
mov
xchg
cmpsb
sub
ja
loope
add
fwait
jns
lcall
repnz
in
and
xor
push
xor
idivb
adcl
push
inc
mov
dec
hlt
or
lds
inc
sti
xor
stos
xor
jle
aam
in
jno
and
stos
loop
add
push
stc
inc
into
xor
push
cld
dec
or
arpl
test
lret
outsl
insl
gs
js
rclb
push
movsl
or
aas
call
pop
push
ret
mov
mov
cltd
in
and
lods
pop
out
xchg
loope
paddusw
cmpb
xchg
mov
or
ret
cmp
inc
and
icebp
push
sub
cmp
fwait
ljmp
ljmp
mov
sub
xchg
inc
add
lods
pop
sarl
xchg
push
js
insb
fildll
jae
mov
add
inc
mov
xlat
cmpsl
clc
es
roll
adc
pushf
sbb
out
scas
mov
lods
repz
inc
das
jnp
data16
adc
sarb
sbb
mov
ret
in
inc
sbb
dec
aad
push
lahf
xor
jg
xor
enter
lock
sbb
outsl
hlt
xlat
imul
cmp
cmpsb
clc
cs
dec
xchg
jg
mov
cltd
mov
ss
push
mov
aad
inc
or
and
pop
sbb
test
ret
rclb
lret
add
ret
bnd
xchg
popf
sub
jnp
negb
xor
or
inc
cli
xchg
sbb
inc
into
mov
stos
xchg
sub
mov
pop
or
cwtl
in
fwait
inc
sub
insb
xor
sub
nop
ds
sbb
inc
mov
pop
xor
add
hlt
imul
push
fadds
sub
dec
fwait
call
adc
mov
jg
sbb
jns
push
lret
add
sub
mov
loope
jns
enter
dec
mov
add
inc
cmp
test
xchg
push
push
mov
pop
inc
jmp
jb
mov
fmull
push
xor
push
inc
fs
fisttpl
in
xor
sub
popf
rorb
fs
insb
xor
loopne
mov
mov
int
and
movsl
xchg
scas
aaa
stc
popl
enter
xchg
pop
cmp
imul
bound
enter
mov
push
cmpsb
pop
jp
xchg
adc
sub
sti
sbb
jb
shlb
fldcw
or
xor
pusha
dec
pushf
xchg
mov
mov
jmp
dec
mov
inc
pop
test
add
pop
hlt
std
adc
mov
lods
js
sbb
ficoml
and
sbb
sbb
sbb
inc
es
add
inc
add
jo
push
xchg
pusha
andl
addr16
lds
sti
push
scas
sbb
test
mov
mov
aas
adcl
jp
subl
pop
inc
ja
pop
repz
lcall
mov
enter
jns
loopne
out
loope
dec
add
cs
rorl
xchg
inc
xor
push
mov
cmc
jecxz
dec
add
sub
mov
imul
dec
sub
jle
jno
add
rcrl
xlat
sbb
enter
mov
and
divl
mov
js
cmpsl
loop
add
mov
jg
aas
test
push
fwait
stc
shl
xor
push
pop
adc
xor
cmpsb
mov
sbb
fdivl
add
iret
and
mov
insl
pusha
rclb
cmp
jae
shlb
inc
mov
mov
rolb
mov
dec
std
dec
add
loop
xor
add
cltd
ljmp
xchg
mov
rorl
adc
pop
ret
and
fidivrs
pop
shlb
out
adc
push
insb
imul
jno
sbb
test
push
pop
mov
gs
cmpsl
fadd
mov
mov
pop
xchg
sbb
stc
mov
xchg
push
xchg
xor
cmp
sbbl
and
ljmp
add
dec
pop
data16
ljmp
ss
jbe
and
adc
adc
xchg
adc
xor
aad
sbb
fidivrl
inc
scas
pop
cmp
mov
ljmp
loop
jno
aad
mov
or
popf
jno
add
out
mov
pushf
aas
stc
cmp
sub
clc
jle
scas
lock
fs
adc
mov
pop
cld
cmp
jl
and
cwtl
or
mov
sub
mov
bound
cli
lds
jge
adc
cwtl
jbe
dec
dec
fstps
into
push
add
mov
or
je
mov
or
sbb
pop
in
xorb
and
mov
mov
or
ja
insl
ret
ljmp
adc
pusha
add
add
mov
mov
or
fstpl
pop
adc
mov
dec
add
sub
lock
idiv
test
pop
jmp
aaa
sbb
dec
mov
fwait
pop
mov
not
push
sub
xlat
adc
sbb
xchg
popf
sbb
out
jns
mov
cmpsb
scas
xchg
xor
repz
imul
pop
jnp
in
iret
xchg
lcall
inc
fldenv
lea
test
test
push
mov
pop
push
push
jae
lea
mov
jbe
mov
mov
loop
dec
inc
or
mov
and
push
loop
iret
xor
jle
fnstcw
addb
pop
mov
test
mov
adc
inc
mov
sahf
xchg
lds
popa
cmp
pop
xchg
or
mov
lret
ljmp
jbe
or
pop
dec
sub
xlat
xrelease
std
insb
adc
mov
xor
mov
movsb
and
mov
jbe
jne
aad
loopne
xor
mov
dec
nop
fistpl
jp
pop
sahf
seta
push
cmp
popf
cmp
pushf
and
xor
push
pop
pop
pop
scas
les
sub
xor
mov
inc
sti
cld
push
lahf
and
aam
ret
stos
xchg
dec
pushf
aam
lcall
out
andb
sub
mov
aaa
outsb
sarl
xorb
and
imul
or
dec
xor
fisttpl
lods
ds
lock
std
nop
inc
sbb
icebp
imul
in
cld
aad
mov
mov
cmp
push
idivb
push
loope
ja
adc
or
sbb
hlt
push
les
sbb
add
dec
mov
nop
scas
nop
sahf
sbb
in
daa
orl
test
js
stos
movsb
sbb
outsb
in
push
inc
out
mov
jmp
loope
xlat
leave
pop
test
popa
ret
lea
ljmp
out
shl
sbb
stc
ret
push
mov
cmpsl
lock
inc
out
scas
push
mov
push
fimuls
lods
daa
mov
adc
repnz
push
outsl
cmp
mov
dec
ja
lcall
cwtl
mov
loopne
pop
stos
hlt
ljmp
fimull
push
mov
sub
fwait
ret
xchg
mov
sti
stos
out
mov
inc
iret
xlat
jle
cmp
cmp
mov
mov
jl
fs
stos
mov
insl
repz
mov
rclb
lds
xor
dec
arpl
test
dec
es
arpl
movsb
sub
xchg
cmp
fsubr
xchg
fcmove
inc
test
es
push
sub
lods
mov
aaa
mov
push
outsb
and
inc
mov
test
inc
das
and
leave
out
out
push
hlt
emms
inc
stos
xor
push
mov
push
mov
out
mov
mov
movups
lods
imul
ret
cmp
mov
pop
jns
stc
add
mov
mov
addr16
adc
jae
addr16
les
mov
in
mov
push
in
add
or
call
in
sahf
push
xchg
imul
out
or
push
and
dec
xor
test
mov
rcrb
repz
cmp
inc
sbb
fwait
je
ja
jg
mov
inc
adc
push
aaa
adc
xor
outsl
lcall
ror
pop
mov
popf
adc
mov
push
fnstsw
adc
lahf
sbb
add
push
jge
cmp
pop
pop
dec
shl
out
fs
mov
dec
push
outsb
cli
test
dec
inc
jne
cmp
cli
int3
jnp
cmp
dec
pushf
and
les
xlat
jle
mov
cmp
cmp
pop
lahf
or
and
mov
pop
enter
sbb
cmpps
pop
xchg
sarl
xor
jbe
incb
sub
adc
dec
push
jl
fsubrs
push
pop
lret
lahf
xchg
cmp
pop
dec
loop
adc
xor
mov
lea
imul
decb
imul
lock
or
mov
mov
stos
int3
sbb
mov
and
jbe
xor
aas
pusha
mov
jb
imul
jbe
push
jmp
mov
push
push
shlb
mov
push
iret
xchg
inc
fistpl
and
xlat
mov
rorl
in
mov
mov
xchg
fst
sti
mov
insb
shl
nop
pusha
aad
arpl
in
lds
es
stc
mov
xlat
popf
mov
repz
mov
push
jne
movl
sbb
adc
sbb
loopne
inc
dec
push
and
and
xchg
pop
pop
and
int
cmp
sbb
lea
js
fbld
loope
std
dec
outsb
xor
mov
pop
jg
jge
xchg
imul
sub
mov
sbb
outsb
test
stc
ds
sub
sub
loopne
push
sbb
aad
test
lret
lds
lcall
xchg
mov
lods
data16
mov
ds
pop
dec
mov
sarl
jbe
and
push
and
or
lret
aad
into
mull
or
repz
aad
add
stc
jae
add
test
notl
cmp
fstl
loop
cwtl
add
das
int3
cmpsl
jo
pop
mov
jl
popa
mov
xchg
xor
xor
cmp
jbe
ljmp
fstpt
jge
ja
xchg
xor
sub
ljmp
jecxz
or
mov
dec
add
std
and
mov
and
pop
mov
push
std
stc
add
mov
xor
xchg
xchg
and
xor
fisttpll
mov
mov
cs
shlb
xchg
adc
stc
cmp
in
stos
loopne
shrb
mov
pop
jecxz
push
xchg
lret
sub
sbb
xchg
adc
dec
jmp
adcl
fldl
ss
or
xorb
xor
test
push
lahf
adc
mov
fstpl
mov
mov
adc
mov
fdivs
das
fisttps
add
bound
sbb
lret
sahf
clc
imul
mov
lods
or
xor
outsl
mov
dec
std
in
sub
insb
imul
insb
inc
in
es
nop
cmp
std
or
sbb
clc
dec
je
adc
out
inc
lock
xchg
jo
or
fnsetpm(287
jle
cmc
lcall
mov
mov
add
leave
cmp
push
or
jb
sub
push
fwait
js
cmpsl
cwtl
addb
dec
xlat
rolb
into
pop
andl
loop
add
ja
ret
inc
dec
or
jae
cld
pop
fwait
xor
les
sub
jecxz
add
iret
mov
ljmp
sahf
je
mov
aam
ljmp
xlat
lods
lcall
jmp
mov
addr16
addr16
pop
xchg
addb
sub
mov
mov
mov
pop
fmul
es
xor
push
flds
sbb
mov
pop
xchg
movsb
adc
out
xchg
push
ljmp
lahf
push
fs
adc
xor
sbb
push
xorb
add
pop
push
test
or
stos
fcomps
stc
cmpsb
add
bnd
adc
andl
jge
push
or
inc
sub
daa
iret
lods
inc
jl
mov
cmp
cmp
fistpl
or
imul
jbe
fcmovne
mov
loope
lods
xor
ljmp
aam
lea
inc
shlb
mov
and
sub
mov
rorb
mov
mov
and
lgdtl
cmpsl
jge
into
lds
fidivl
notb
pop
loop
dec
jo
testb
int3
mov
pushf
and
insl
mov
aad
pop
adc
pop
push
inc
xor
jbe
mov
jge
or
mov
lods
ret
or
mov
sbb
int3
outsl
mov
jg
sbb
sub
test
aas
loop
jo
pop
mov
dec
hlt
punpcklbw
jae
in
lods
pop
and
sub
bound
bnd
or
clc
rolb
das
sub
gs
pop
nop
pop
or
push
push
ja
dec
xchg
in
popf
xchg
xchg
popf
loopne
and
mov
gs
in
pop
and
xchg
stos
mov
js
jecxz
xrelease
lock
dec
js
rcrl
sti
dec
in
jecxz
fistpll
cmp
in
cs
pop
add
shrb
lahf
imul
xchg
fimull
ljmp
loope
cwtl
cld
pusha
mov
fistps
std
cli
pusha
sbb
bound
and
movsb
sub
std
andb
pop
mov
and
and
mov
jae
xor
jecxz
xchg
mov
shrb
test
loope
and
xor
cmpb
pop
xchg
cmp
out
sub
inc
inc
and
test
aam
push
ret
cmp
cli
into
push
inc
fdivrp
jb
mov
mov
lea
ss
cwtl
shll
cmp
lretw
stc
or
enter
fwait
lods
adc
bound
sbb
dec
mov
movsl
pop
cmp
xchg
inc
insl
cmpsb
push
fsubl
enter
repz
xchg
jns
enter
xchg
cmp
js
inc
stos
pushw
addr16
pop
sti
adc
push
hlt
mov
push
andl
add
jb
les
ja
and
jmp
sahf
out
sub
push
mov
push
or
test
ja
or
add
leave
clc
shrb
push
push
fsubs
js
subb
iret
jge
data16
adc
sub
mulb
test
xor
xor
aam
and
jg,pt
ljmp
cmp
loopne
andb
cmp
pusha
int
xchg
mov
cltd
add
mov
sub
push
dec
fldl
imul
data16
loop
inc
ss
sbb
out
pushf
mov
pop
aam
jbe
cld
mov
cwtl
popa
in
jae
clc
rcr
aas
insb
outsb
andl
test
xchg
jae
or
daa
loope
dec
inc
leave
in
mov
pop
mov
inc
jp
push
mov
iret
data16
adc
test
sub
and
dec
gs
pop
lret
popl
push
jbe
rolb
xchg
xchg
xchg
adc
mov
loope
mov
mov
xadd
push
pop
xchg
and
fdivrs
stos
mov
or
scas
adc
scas
rorl
inc
in
dec
push
fisubrs
push
push
cmpsb
insl
sbb
mov
jl
cmpsb
sub
lahf
icebp
sbb
insb
or
or
subl
cmp
mov
roll
test
hlt
stc
lahf
cld
out
cs
mov
stc
push
aaa
in
push
aam
xor
pop
mov
ss
dec
test
jge
and
mov
in
mov
cmpsl
jmp
push
cmpsb
pop
jae
scas
subb
pop
pop
xchg
mov
cli
push
sbbb
sti
mov
inc
pop
out
dec
cmp
push
fiaddl
repnz
int3
adc
sbb
mov
clc
mov
imul
fs
or
cmp
sub
jb
xor
push
in
xor
in
lock
cltd
dec
mov
insb
int3
call
in
xor
ds
adc
js
hlt
mov
cmp
stc
mov
xchg
xlat
ljmp
push
pop
into
incb
add
add
dec
out
jmp
neg
cmp
dec
push
mov
sbb
or
pop
rcrb
xchg
mov
sub
mov
push
mov
sub
push
xor
push
jb
cltd
fists
bound
pop
push
inc
mov
xchg
or
adc
sbb
test
mov
in
push
call
leave
cltd
push
and
sub
outsl
jmp
std
movsl
dec
lcall
popf
lahf
loopne
call
out
jae
stc
leave
dec
shll
shlb
mov
cs
gs
ja
and
insl
lds
or
xchg
out
aas
pop
xlat
sbb
pop
xchg
mov
stos
bound
xchg
aaa
stos
imul
dec
add
das
sahf
mov
in
rcr
mov
rcrl
lcall
imul
stc
jo
cmp
dec
mov
ret
or
popf
popf
cmpsb
or
int3
and
fwait
daa
xor
fists
jecxz
add
push
mov
xlat
dec
adc
inc
mov
sbb
push
lods
xor
ds
fildl
enter
cs
adc
dec
adc
cli
test
fistps
inc
inc
add
aas
adc
jnp
or
in
inc
push
jle
jp
call
lahf
cmp
test
dec
sub
lret
cld
leave
dec
call
push
mov
adc
pop
cmp
and
out
ljmp
jbe
arpl
xlat
xchg
cltd
sub
cmpsl
inc
and
push
xchg
jne
jmp
stos
inc
popa
popa
sbb
sbb
fnsave
dec
or
xchg
cld
xor
push
jge
sarl
cmpsb
sub
dec
lret
aas
out
dec
mov
int3
or
imul
lods
dec
daa
dec
add
cmp
sbb
add
fidivl
rcll
loope
add
popf
test
mov
test
add
inc
imul
cltd
cmpsl
push
ror
push
out
in
jno
cmpsl
xor
nop
dec
push
aas
mov
xor
aad
out
add
mov
into
jns
scas
dec
out
xchg
push
call
lret
adc
popa
mov
movsb
push
notb
mov
push
loop
stc
add
shl
shlb
stc
loop
xchg
fists
lock
mov
data16
rcrl
mov
popf
cmp
hlt
push
jbe
inc
push
outsl
xor
pop
loopne
stc
mov
gs
xchg
stos
mov
cmp
pop
mov
cmp
lcall
mov
sub
adc
mov
in
das
repz
in
arpl
mov
adc
push
pushf
sbb
jg
orl
mov
jl
mov
push
add
push
mov
fistpll
xor
ljmp
mov
inc
test
adc
cwtl
lahf
xchg
push
ds
add
je
pop
jbe
sub
xchg
dec
add
push
jl
pop
cmc
adc
repnz
sub
xlat
lods
mov
into
pop
scas
xchg
stos
adc
sarl
movsb
shrb
ret
jbe
xchg
mov
mov
dec
inc
and
pop
icebp
outsl
xchg
mov
sbb
pop
inc
lods
xchg
addr16
push
pop
push
lods
adc
sbb
fisubrl
xor
lods
xor
arpl
pop
ret
mov
push
sbb
ss
call
shrb
test
pop
mov
movsl
int
movsb
pop
subl
lock
push
repnz
je
or
mov
mov
xchg
lcall
and
mov
mov
mov
mov
insw
cltd
ja
gs
out
dec
pop
add
pop
xchg
push
dec
out
daa
push
icebp
icebp
mov
sub
pop
mov
jno
gs
stos
call
cmp
fisubrs
fimuls
cmp
push
in
lds
xchg
xchg
xchg
imull
mov
mov
inc
test
jp
andb
inc
jmp
push
movsb
jmp
dec
dec
movsl
pop
and
cwtl
ss
hlt
and
pop
fsubrs
adc
in
add
adc
and
lret
in
icebp
sti
into
sti
das
mov
popa
repnz
out
ljmp
repz
mov
xchg
fcom
mov
es
mov
jae
lcall
jl
iret
leave
inc
jp
jl
inc
inc
js
lods
cmc
cmp
inc
rcrb
lret
subl
popa
hlt
mov
rclb
lock
jno
dec
in
mov
mov
pop
popa
lahf
cwtl
dec
mov
test
lods
icebp
cmp
sarl
adcb
xor
sub
xor
iret
and
mov
sbb
adc
add
or
in
lds
push
dec
push
sbb
pop
push
jg
jge
cmp
adc
mov
adc
and
movsb
cli
ss
push
or
mov
cmpsl
sbb
jecxz
gs
sub
fisubrs
aaa
in
fs
jle
lods
inc
test
cmp
pop
notl
lds
push
inc
stos
cmp
mul
cwtl
or
pop
pop
dec
imul
inc
popf
iret
aam
push
ja
xchg
dec
add
xchg
mov
push
aaa
cmp
rcrb
aas
push
cmp
mov
mov
jnp
mov
pop
add
adc
imul
mov
cmpsb
jle
sub
inc
pop
push
aad
push
mov
fsts
sub
test
sbb
adc
adc
repnz
jnp
aam
mov
int3
push
jne
mov
xor
call
xchg
insl
and
fidivl
ds
in
xor
stos
jbe
call
fiadds
lods
sbb
push
mov
jmp
sub
adc
call
sarb
popa
outsb
adc
mov
sub
jg
scas
jmp
aaa
jmp
mov
iret
sub
gs
lret
mov
test
and
pop
rcrb
int
sahf
add
outsb
lock
sub
xchg
push
jb
sub
stos
push
inc
pop
jns
in
dec
lret
xchg
sarl
jne
iret
jl
outsl
mov
rcl
mov
push
inc
add
inc
adc
jb
add
bnd
stos
lock
ja
andl
dec
and
mov
push
cmpl
mov
cmc
or
out
lock
add
test
and
mov
mov
imul
mov
call
sarb
jmp
mov
cmp
dec
imul
dec
and
mov
inc
mov
mov
je
or
cmp
jb
fisubrs
shlw
mov
mov
pop
xchg
mov
sti
sarb
mov
xchg
jge
imul
mov
mov
fdivr
movsb
mov
mov
sbb
xchg
or
mov
fsubl
imul
jae
mov
popa
xchg
push
in
fmull
fs
je
pop
lock
mov
in
lock
scas
fidivrl
in
fisttpl
adc
cmc
arpl
pop
insl
sbb
ret
ja
lock
loop
les
test
icebp
lods
dec
mov
in
fildll
mov
mov
ljmp
inc
push
fistl
xchg
pop
push
lds
sub
jae
mov
pop
repz
enter
fwait
dec
loope
mov
stos
cwtl
and
faddl
cld
rorb
inc
jge
sub
adc
sbb
sbb
cmpsl
std
dec
push
fistl
or
scas
jl
push
sbbl
xchg
xchg
in
imul
sti
jns
loopne
pusha
cld
sahf
xchg
dec
stos
fdivrl
and
jge
das
push
jo
aad
mov
pop
inc
jb
and
or
test
shrl
inc
xor
mov
jecxz
inc
and
out
mov
pusha
into
mov
fcomp
cmp
in
leave
cmc
sub
aam
push
imul
sarl
mov
ljmp
cmp
sbb
insl
inc
inc
xor
cmpsl
pop
hlt
sahf
cmp
cmpsl
out
xlat
mov
mov
add
rorb
incl
jmp
or
imul
pop
loope
pushl
lods
mov
lret
pushf
in
pop
cli
fiadds
cmp
movsb
out
fcomip
movsb
fidivl
pop
xor
sbb
or
shrb
pop
lret
mov
sbb
jnp
jne
fimuls
inc
lods
adc
inc
repnz
sar
scas
mov
cmp
jmp
and
stos
mov
aam
fcoms
inc
cmp
cmp
test
jno
sti
jge
and
shll
jb
mov
stc
pop
sbb
dec
outsl
lods
mov
add
mov
fadds
mov
inc
rolb
dec
xchg
xor
adc
inc
adcl
lock
or
mov
cmpsl
imul
xchg
jno
insl
arpl
ljmp
cmpsb
pop
sti
outsl
fwait
insl
xor
je
sbb
pop
ss
cmpsb
stos
cld
mov
cmp
out
mov
into
imul
jo
movsl
dec
in
out
jge
pop
cwtl
xchg
cmc
xor
shll
dec
xchg
shr
pop
mov
jecxz
push
sub
insl
jp
je
aas
push
inc
xor
fdivrl
loope
mov
test
cld
outsl
mov
stos
scas
call
sub
pop
xor
stos
xchg
sub
sub
out
add
into
adc
dec
psllw
loopne
notl
add
inc
icebp
sbb
xchg
aad
mov
es
mov
xchg
sbb
add
xchg
inc
ret
pop
sti
stos
pop
push
or
sub
fiaddl
pop
out
xchg
pushf
negb
lar
pop
lahf
push
les
sub
fwait
jecxz
mov
out
sub
xchg
mov
mov
cmp
std
ss
sub
adc
adc
xchg
outsb
mov
dec
and
lret
fstps
loope
mov
pushf
getsec
cmc
mov
or
imul
xor
lock
or
push
ret
mov
js
cmpsb
xchg
es
in
dec
faddl
hlt
cmpsb
ret
call
fisubrl
push
sbb
inc
and
mov
loopne
adc
fmull
sub
adc
push
fmull
push
pop
cmp
sub
or
add
pusha
inc
mov
mov
xchg
data16
mov
mov
xchg
sbb
pusha
xor
fmull
mov
test
cli
lods
xchg
enter
pop
push
mov
adc
dec
push
cmp
cmp
cmp
lret
mov
call
and
lods
dec
dec
xchg
ficoms
mov
mov
aas
ret
mov
lcall
xchg
nop
sub
xchg
and
pop
outsl
or
popa
sub
add
sub
ret
dec
and
cmpsl
sub
nop
in
mov
push
std
clc
inc
mov
shl
push
add
lods
test
lahf
sub
push
lahf
std
push
out
sahf
push
loopne
ret
notl
test
dec
and
cmpb
mov
lock
push
bound
popf
and
mov
das
repz
mov
shll
jnp
ja
daa
nop
inc
jns
daa
add
movsb
lods
cmp
mov
testb
call
movsb
xchg
dec
nop
mov
aam
cmp
mov
int
cmc
ljmp
or
cli
mov
jle
bound
mov
mov
pop
lret
test
ror
inc
or
scas
bound
xor
add
or
out
push
cmp
dec
xchg
push
jl
inc
add
lds
outsb
out
sub
xor
push
mov
mov
ljmp
ja
int3
add
pop
inc
out
pop
fs
mov
push
cmp
hlt
hlt
cmpsb
adc
mov
in
sub
test
inc
sub
push
out
shlb
aas
cld
loope
ds
and
fildll
aaa
out
pop
mov
test
and
push
xchg
call
aaa
cltd
lods
fdivrl
inc
repnz
lods
cmp
addb
call
dec
mov
fidivrl
and
stos
or
out
fsubs
mov
sbb
loope
pushf
cmp
out
jp
repnz
or
sub
add
xchg
adc
pushf
and
mov
mov
pop
mov
adc
shlb
lahf
call
mov
leave
mov
push
jae
and
loope
dec
push
stos
loopne
mov
push
pop
mov
dec
imul
ljmp
test
mov
sub
bnd
xchg
sbb
pop
test
push
cwtl
js
rcrb
test
inc
aad
ret
ret
sbb
cltd
push
mov
stos
popa
sub
mov
outsl
xor
popf
cld
aam
jo
xchg
and
mov
pop
je
loope
xor
add
pop
sarl
fstl
ss
fwait
imul
xchg
insb
push
jo
call
cmpsl
das
xor
mov
pop
dec
mov
mov
gs
loopne
addr16
cmp
shl
xor
xor
loop
dec
cltd
ds
inc
lea
mov
jae
dec
pop
jecxz
pusha
addr16
sub
adc
out
ror
and
cmp
push
cmc
or
loopne
jle
lods
pushf
fwait
aas
jg
in
adc
inc
insb
pusha
jns
shrl
dec
adc
les
hlt
jo
mov
pop
shlb
outsl
sub
push
lods
gs
mov
cmp
out
stos
pushf
dec
ja
popf
sbb
fidivs
mov
dec
sbb
lahf
cmp
popa
int3
rorl
notb
or
jno
addl
movsl
jp
xlat
cmp
xor
adc
or
jmp
pop
clc
push
stos
and
cmp
fistps
ss
repz
and
and
mov
mov
pop
repz
or
fsubl
lock
add
mov
mov
mov
pop
shll
xchg
and
lahf
and
stc
dec
xchg
mov
mov
popf
add
scas
jl
jnp
and
and
frstor
inc
loopne
or
test
xor
push
popa
mov
mov
xor
xchg
add
inc
xchg
pushf
aad
dec
jno
cwtl
scas
call
mov
xor
push
mov
mov
add
scas
push
shll
cmp
mov
dec
sbb
jb
cli
push
or
sub
rol
sub
lea
lea
mov
sbb
les
mov
xor
cmpsl
cmp
push
into
xchg
mov
jo
lret
and
out
mov
fisubrl
fcmovnb
insl
inc
and
inc
lods
jo
xlat
lock
mov
jbe
jbe
aam
add
mov
mov
add
gs
cs
jg
mov
push
jp
sbb
lret
push
icebp
push
jbe
imul
aas
push
inc
adc
clc
mov
pop
jo
je
data16
loop
mov
mov
mov
jo
cld
ja
cmp
nop
in
pop
fwait
fwait
lret
inc
movsb
jl
push
mulb
inc
inc
mov
jo
pop
lret
xchg
sbb
push
in
lret
aaa
pop
test
sub
sub
cmp
pop
fildl
xor
enter
cmc
pusha
adc
jbe
aaa
jp
ljmp
fs
sub
ja
bound
orl
imul
mov
lcall
jle
cmc
adc
add
or
adc
pop
popa
test
aam
ss
jnp
dec
scas
out
lcall
lcall
pop
fstp
lods
mov
ds
xor
scas
divb
nop
loopne
push
mov
adc
fnstcw
inc
inc
mov
and
fwait
lcall
insl
jge
adcb
jne
jg
ret
adc
jbe
inc
push
jne
loopne
fdivl
mov
adc
mov
add
push
stos
int
sbb
cmpl
fidivrs
inc
jg
xorl
pop
pop
nop
mov
mov
lret
aas
push
arpl
push
test
rol
mov
push
mov
sbb
insb
pop
or
or
adc
mov
ja
dec
dec
pop
push
push
jnp
xchg
into
nop
hlt
lahf
push
or
push
jnp
lods
out
test
xor
test
adc
xchg
sbb
lds
mov
pop
pop
bound
repz
jl
fsubrl
inc
jl
push
mov
inc
cld
inc
mov
movsl
jmp
stos
jne
push
inc
lods
or
pop
cltd
out
es
inc
cmp
lahf
xor
inc
sti
xorl
mov
fisttpl
jae
mov
mov
icebp
mov
push
or
mov
mov
popf
pop
decb
stos
sti
inc
cmp
das
shlb
movsl
cmp
sub
pop
xchg
out
jecxz
mov
xchg
xchg
inc
ret
iret
fsubrp
inc
leave
ja
popa
popa
sub
loop
jecxz
mov
pop
repz
dec
fld
sub
xor
sbbb
pop
xor
outsb
sti
repnz
es
cmp
add
bound
pop
push
stos
mov
ljmp
inc
mov
out
cmpsl
repnz
adc
aad
xchg
loopne
cmp
or
dec
fisubl
lds
fldenv
dec
fldcw
mov
or
fdiv
sbb
in
leave
or
jmp
mov
pop
push
pop
sbb
test
fwait
cmp
call
push
cmp
pop
int3
jp
jp
cld
repnz
cmovno
cmp
jb
jle
pop
fsubl
test
mov
xchg
addb
push
fcmovnbe
or
xor
fst
insb
or
jge
or
scas
cmp
cmp
adc
inc
sub
inc
jl
mov
outsb
ret
mov
int
sti
mov
jae
pushf
pop
imul
mov
fwait
adc
mov
outsb
pop
loopne
and
push
push
pop
jne
sub
outsl
fdivp
and
shrb
cmp
xchg
ja
ja
fs
push
std
scas
movsb
mov
cmp
loope
push
cmp
sub
cmp
mov
push
mov
mov
mov
test
rcll
mov
ljmp
xchg
sub
push
sbb
sti
aas
test
push
adc
sub
cld
dec
repnz
lea
arpl
xchg
or
cmp
adc
add
dec
adc
add
in
mov
addr16
mov
es
scas
call
jmp
mov
mov
mov
push
push
clc
dec
xorl
pop
and
jmp
or
negb
outsb
pop
mov
cmp
shll
int
daa
sbb
fsubrs
pushf
sbb
push
sahf
sbb
dec
adc
mul
mov
sub
inc
lea
jp
dec
xchg
cmpsl
lret
shr
mov
arpl
mov
xlat
dec
test
mov
mov
in
mov
movsl
inc
imul
stos
popa
jno
add
mov
sti
incl
cmp
pop
cmpsl
orb
lret
enter
add
sub
pop
jl
or
mov
or
inc
leave
jmp
aas
ja
jp
clc
inc
inc
imul
mov
stc
mov
pop
test
push
push
fimull
movsb
rorl
mov
add
leave
add
pop
sub
add
leave
sbb
rolb
jmp
add
popf
add
or
xor
mov
and
enter
jb
mov
or
outsl
hlt
loop
js
and
or
scas
out
dec
mov
loopne
and
into
inc
sub
enter
cmp
or
mov
mov
xchg
int
xor
or
xorb
rorl
leave
mov
sub
in
sti
mov
or
shr
lock
cmp
inc
mov
mov
insb
lahf
and
shrb
jp
aam
aaa
addl
fwait
and
xor
mov
cmp
mov
imul
out
loop
xchg
and
lret
negb
sub
aad
jo
std
sbb
movsl
negl
shl
dec
testb
pop
mov
cs
push
aaa
cmp
addl
mov
int
test
push
add
loop
jp
cs
jnp
insl
adc
insl
xor
ss
mov
add
mov
lahf
xchg
lods
xchg
dec
scas
adc
and
imul
dec
repnz
sub
jb
jle
mov
push
icebp
mov
add
ret
cmp
pop
sbb
jge
imul
arpl
cmp
cmp
cltd
pop
sbb
dec
idivl
push
or
pop
cltd
or
jno
fildll
in
mov
mov
dec
push
push
inc
cmp
das
push
lods
call
pop
inc
push
mov
fsubs
dec
pop
xchg
lods
mov
fmuls
fstl
sub
shrl
mov
outsl
xor
out
sub
and
pop
out
rcrb
adc
shll
insb
outsl
lret
sti
jns
movsl
push
cmp
or
clc
inc
lahf
int
mov
gs
lods
dec
das
cs
lcall
je
imul
shrl
dec
xorl
mov
add
xor
xor
add
dec
inc
jae
pop
cld
ljmp
or
scas
dec
jecxz
clc
add
fdiv
es
add
das
into
pusha
xchg
adc
or
mov
lods
negl
mov
xor
mov
out
xchg
dec
shlb
xchg
adc
pop
sbb
and
inc
xchg
fs
cmp
push
mov
cwtl
push
xchg
shr
jns
in
imulb
movsl
push
js
and
pop
push
dec
insl
xchg
mov
dec
into
mov
cmp
jge
adc
fs
mov
imul
out
ficomps
in
imul
shrl
scas
adc
fmuls
ret
xchg
jb
adc
add
lods
in
jmp
test
clc
sbb
stc
shrl
xchg
inc
test
js
incb
pop
cld
movsl
dec
pushf
dec
inc
sahf
in
les
fs
jge
add
fsubr
out
sbb
outsb
ret
pop
sub
inc
not
ljmp
mov
das
js
mov
push
cs
lret
fidivrl
outsl
xchg
inc
mulb
ror
jae
mov
lods
sub
imul
sti
into
call
cmp
jnp
stos
subb
call
cmp
fistps
sbb
in
pop
test
subb
ret
push
cmp
les
cmp
hlt
xor
adc
lods
mov
out
push
ss
stc
test
xchg
dec
cmp
jo
lret
or
pop
dec
mov
loop
lods
js
pop
cmp
ja
dec
xchg
inc
out
or
sub
inc
push
push
mov
sub
dec
dec
ret
mov
fistpll
ficoms
xor
pop
push
int
in
mov
adc
jne
lret
daa
repnz
fldt
xchg
ret
cmpsl
sahf
dec
scas
cli
xchg
xchg
push
mov
subl
aas
in
jp
stc
adc
adc
dec
ret
mov
sbbb
fists
add
call
in
xchg
pop
xlat
xor
add
es
sbb
ljmp
mov
sti
shl
sarl
xor
xchg
mov
jge
outsl
dec
int
pop
mov
mov
push
adc
add
sbb
mov
insb
cmp
cmpsb
sbb
xor
cmpsl
outsb
addr16
jp
fcom
inc
dec
stc
pop
outsb
fldcw
sbb
push
popf
rclb
faddl
hlt
js
int
test
jbe
adc
out
jp
push
roll
inc
mov
je
mov
iret
popf
icebp
push
xor
movsl
in
dec
filds
pop
pop
adc
push
gs
jmp
into
jb
adc
sub
mov
cmpsb
cld
add
mov
push
cmp
je
sub
scas
xchg
test
cmp
inc
xor
adcl
addb
cmp
test
lret
clc
mov
shll
test
or
push
lret
xchg
or
push
mov
sub
ja
aam
daa
add
fstpt
add
jo
mov
cmp
lret
xor
fs
cwtl
ljmp
mov
aas
cwtl
inc
outsb
push
sub
daa
outsl
xor
aam
loope
ret
insl
iret
jne
ret
test
leave
sub
sub
jns
mov
mov
pop
mov
and
mov
mov
test
aam
inc
sub
jno
sbb
in
mov
leave
shlb
cmp
and
inc
mov
sub
aaa
adc
js
push
outsl
pop
lods
pushf
push
lods
jge
pop
push
lret
or
enter
or
push
inc
aad
lea
push
dec
adc
mov
add
push
cwtl
stc
dec
std
or
movsb
sbb
out
or
in
cltd
xor
dec
sbb
jns
jmp
cs
jnp
sbb
stos
mov
push
outsl
cwtl
add
fmuls
daa
js
adc
shl
and
outsb
xchg
push
fs
int
xlat
rcl
shll
pop
roll
xor
or
pop
movsb
lods
sbb
xchg
add
data16
pop
mov
pop
push
ljmp
imul
call
loop
xchg
mov
adc
out
addb
pop
lods
loope
addr16
pushf
cwtl
cmp
pop
pop
pusha
cld
das
scas
mov
std
icebp
fisttps
mov
stos
xchg
push
imul
cmpsl
push
sub
fs
mov
pusha
dec
inc
cmp
cli
adc
dec
mov
cli
les
push
sbb
int
fdiv
pop
ficomps
push
cmc
mov
jp
add
into
es
scas
cmpsl
ds
xchg
ljmp
repnz
rorl
fstl
xor
movsl
and
adcb
or
out
push
into
xchg
xor
incl
imul
pop
xchg
jecxz
fdivl
lcall
and
loopne
mov
adc
jge
ds
mov
sbbb
stos
xchg
js
rolb
int3
xchg
adc
mov
rorl
mov
and
xor
mov
dec
sub
sub
pop
push
cmpsl
dec
or
jbe
jg
jl
xchg
aas
dec
movsb
or
rcr
adc
push
dec
movsl
cmp
push
push
in
push
mov
push
aad
jmp
mov
mov
jl
push
mov
and
push
std
shr
cmovl
pop
shlb
or
je
add
sub
sbb
movsl
jl
loopne
out
movsl
cwtl
jne
stos
out
adc
pop
push
push
inc
xchg
imul
aad
inc
popf
inc
test
pop
or
and
dec
xchg
push
inc
fwait
fs
cmp
push
fbstp
ret
jge
test
movl
or
fmuls
cmp
out
dec
push
pop
loop
jo
dec
pop
loop
or
sbb
cld
mov
xor
push
je
mov
mov
arpl
adc
mov
jno
dec
dec
test
or
les
jbe
mov
mov
mov
jle
jmp
push
outsb
jno
push
rolb
stc
or
movsl
push
sbb
cmpsl
sahf
imul
in
sbb
cmp
fbstp
jp
cmp
repz
je
mov
inc
jno
fisubs
xchg
and
aaa
inc
sar
jnp
and
and
notb
enter
and
jne
dec
push
adc
shll
mov
out
mov
int
dec
fs
insl
jae
adc
sbb
mov
dec
adc
adc
movsl
mov
inc
xchg
jne
pop
ljmp
pushf
shll
aad
xchg
call
nop
jmp
jmp
adc
cmp
ret
sbb
adc
add
cmp
loopne
std
adc
nop
pop
out
xchg
inc
shl
es
mov
stos
daa
int
hlt
jecxz
push
xchg
int3
ss
adc
les
and
xchg
mov
push
subl
fsubp
ret
inc
rcll
ja
dec
lcall
cmpsl
jmp
wbinvd
mov
cmp
mov
insl
nop
inc
ret
inc
lods
call
mov
mov
dec
mov
rol
rolb
push
vmovmskpd
fisubs
mov
js
mov
pinsrw
std
arpl
xchg
out
mov
pop
repnz
pop
nop
cs
cmp
xor
mov
mov
test
out
or
inc
xchg
jns
inc
mov
leave
test
xlat
dec
mov
jl
test
test
add
sub
jmp
xor
jmp
mov
les
repz
inc
or
fnsave
inc
stos
cmp
ret
fstpl
add
cmp
out
cmp
sbb
fwait
in
jnp
adc
movsl
jae
in
movsl
jns
aad
or
loope
sub
popf
aam
imul
sar
popa
outsl
repz
xchg
push
jle
nop
sbb
addb
push
cmpsl
mov
and
ror
xchg
xorb
mov
call
dec
mov
push
xor
mov
mov
fwait
xchg
fstl
je
inc
jp
pop
icebp
xchg
push
adc
shll
push
jno
bound
xor
popf
test
nop
es
sub
clc
mov
jno
mov
mov
cs
mov
jle
mov
jle
jbe
cmp
pop
ljmp
sub
xchg
mov
jecxz
add
mov
push
add
test
jnp
add
inc
dec
jp
aaa
mov
jmp
repnz
ss
into
gs
bound
shll
pop
lods
xor
call
inc
or
out
fidivs
loop
in
pop
xchg
je
aas
jmp
cli
lret
dec
test
pop
mov
out
pop
xchg
cld
sbb
lret
stos
and
mov
lods
sub
ds
push
jecxz
cmp
fcoms
dec
shrb
js
xor
lcall
add
xchg
xor
stos
lods
movsb
outsb
cmp
cmpb
rolb
std
mov
in
mov
push
cs
roll
xchg
js
cmpsl
inc
mov
or
fcoml
inc
pusha
jecxz
cwtl
push
and
mov
cmp
lods
add
loopne
cmp
jge
into
add
push
xchg
lods
stc
or
daa
loope
xchg
lret
mov
mov
push
and
sar
and
push
addr16
xchg
ja
mov
lret
int
cmp
mul
leave
mov
lcall
inc
inc
cmp
mov
pop
xor
add
loope
and
mov
int
xor
loope
mov
lcall
sub
test
aam
mov
fisubs
cmp
stos
sti
stos
add
adc
inc
cmpsl
lods
stos
jg
push
pop
fcomi
sbb
insb
cmpsl
ja
test
push
xor
cmp
jb
sub
hlt
sbb
sbb
lcall
lock
test
jne
stos
enter
or
pop
out
pop
add
shlb
inc
scas
pop
cmp
inc
in
jmp
fisubs
fs
mov
jb
iret
shlb
mov
lret
push
test
les
add
filds
cld
fisttpll
sbb
addr16
shlb
aad
mov
pop
stos
notl
iret
dec
addb
lods
mov
aas
xchg
stos
rcl
and
cwtl
mov
insb
sti
adc
push
movsb
push
addr16
pop
dec
add
cld
jns
mov
and
push
ds
jle
sti
lds
mov
mov
fxch
mov
cmp
lds
enter
pop
out
out
pop
in
mov
icebp
push
mov
sub
fisubrl
fldlg2
ror
adc
jmp
icebp
out
and
and
dec
adc
sbb
mov
int
add
pop
fwait
cltd
mov
nop
in
rol
stos
add
jg
inc
dec
xor
test
pop
js
dec
jnp
rol
add
push
mov
pop
or
cmp
jb
cld
lcall
sbb
jo
outsb
xchg
and
mov
fldenv
divb
scas
and
in
lds
loop
push
std
test
sub
ss
lahf
xlat
popf
lock
pop
ljmp
mov
mov
inc
xchg
push
sbb
mov
pop
xchg
test
mov
insl
inc
rol
stos
enter
pop
inc
mov
imul
mov
jecxz
sbb
filds
int3
lods
or
loope
sbb
in
in
inc
cmp
jbe
subb
ljmp
int3
mov
push
leave
mov
cmp
mov
fldl
bound
in
push
pop
mov
push
mov
test
inc
mov
leave
les
xchg
outsl
xchg
fadd
inc
dec
pusha
rolb
stos
int3
cmpsb
push
rcrb
imul
shl
out
arpl
stos
mov
lea
mov
xchg
add
fnsave
loope
jbe
dec
fdivl
adc
sahf
push
jne
in
into
xorb
cli
fsubs
gs
es
push
sub
sbb
push
lods
adc
pop
clc
lods
in
addr16
mov
sbb
std
les
jl
es
daa
call
insl
jmp
cltd
sbb
pop
sbb
jecxz
movsl
push
or
cmp
pop
stc
and
cltd
jg
mov
xchg
stc
cmp
xchg
pop
jmp
addb
ljmp
xchg
or
xchg
inc
and
adc
addr16
jo
inc
jmp
movsb
les
push
pop
sbb
imul
dec
xchg
or
push
cwtl
mov
jmp
test
fs
pop
and
in
fcoms
into
loop
mov
pop
mov
and
push
adc
push
rolb
pop
adc
test
mov
sbb
iret
cmp
push
mov
jmp
rolb
pop
jno
outsb
xchg
lret
push
jb
sub
sub
mulb
add
fs
mov
push
jo
rcr
cs
ret
mov
push
rcr
xchg
out
jb
es
push
pop
push
xchg
mov
adc
mov
lea
loopne
xlat
hlt
scas
pop
jns
or
aas
cmp
dec
jge
push
lds
sti
jae
je
lea
mov
shll
nop
pop
cmp
enter
sbb
mov
adc
lds
in
add
mov
jmp
pop
cmp
pop
xrelease
xor
xchg
enter
addl
xlat
lea
push
xor
or
sbb
push
lcall
fidivl
xor
add
mov
popl
dec
mov
jp
imull
stc
or
cmp
add
xor
out
stc
lea
jg
mov
pop
bswap
push
pop
fstpt
stos
cmp
cwtl
or
imul
inc
cwtl
in
rorl
jg
fucomip
in
mull
cmp
inc
pop
int
jb
cmpsl
xchg
out
pop
and
inc
movsl
mov
dec
imul
jg
pop
mov
add
xor
shll
dec
lods
push
inc
lret
arpl
fistpll
filds
jns
sbb
jno
dec
stos
pop
shll
pop
pop
fisubl
fcompl
dec
dec
pop
or
in
pop
pop
pop
push
fcom
fisubrs
and
ja
lods
mov
add
add
fwait
and
stos
mov
jnp
mov
notb
dec
push
xor
push
imul
sbb
das
mov
call
dec
push
loopne
and
js
cwtl
sbb
pop
hlt
mov
adc
and
adc
adc
gs
test
cmpsb
hlt
clc
jnp
insl
mov
ljmp
jnp
icebp
xchg
push
inc
test
mov
fisubl
and
fisttps
mov
es
dec
out
popa
adc
push
xor
jg
stos
xchg
xchg
jecxz
cmp
lock
mov
mov
rcll
ret
lret
out
movb
sarb
out
loop
in
les
push
movl
js
dec
lcall
lock
pushf
int3
mov
fisttpl
dec
sbb
cmp
loop
ss
les
ret
jns
jg
pusha
add
pop
sub
push
mov
mov
xor
and
fdivrp
loop
mov
mov
into
clc
in
ljmp
xchg
in
jae
pusha
lods
ret
push
fs
push
out
mov
inc
lret
push
js
nop
add
pop
sbbb
in
lahf
clc
xor
es
mov
or
dec
jl
addr16
push
add
push
cmpsl
gs
andb
in
cmovo
jae
mov
jnp
js
lahf
dec
mov
or
mov
cmovb
jae
leave
pop
fnstsw
cmpb
jle
jmp
and
pop
lock
in
or
hlt
mov
push
fsub
insl
sbbb
repz
or
mov
loope
stos
clc
ja
rolb
jns
mov
push
pop
scas
sahf
mov
in
cmpsl
lock
mov
adc
lods
outsl
and
and
ror
or
es
dec
sub
adcl
add
loop
int3
daa
sahf
jns
mov
mov
mov
mov
leave
push
sti
push
dec
nop
mov
movsl
xchg
out
aad
xchg
int
aad
cld
adc
aas
jecxz
cs
push
adc
sahf
dec
add
pop
mov
popa
xchg
xor
inc
or
push
sbb
xchg
lea
dec
rcl
inc
adc
push
test
rcrl
jecxz
jne
inc
pop
or
rcrb
add
mov
cmc
mov
xchg
ja
xor
cs
mov
mov
pop
ficomps
adc
cwtl
fisubrl
dec
mov
cld
add
cmp
push
cmp
xchg
stc
dec
fnstcw
nop
inc
outsl
data16
inc
popa
dec
lret
repz
adc
jg
loope
xor
into
inc
rcrb
stc
movsl
push
mov
int3
loopne
mov
mov
cmp
cmpsl
xchg
push
iret
test
pusha
jecxz
lahf
daa
xchg
sub
sbb
cmp
push
mov
or
jb
and
xchg
xchg
pop
mov
cmp
xor
or
inc
pop
ss
dec
xchg
and
inc
inc
xchg
fsts
and
mov
xchg
jbe
jne
and
outsb
dec
jne
xchg
jb
fimuls
mov
pop
cmp
pop
xchg
cmp
lea
jmp
divb
inc
repz
in
sub
pop
jo
aad
push
sub
sub
inc
inc
or
mov
push
cmp
jl
mov
jp
add
fwait
or
and
xlat
xchg
in
xor
add
scas
fnsave
sub
adc
mov
pop
addr16
fnstcw
and
dec
jle
lret
ret
movsb
aam
incl
jle
fmulp
shr
into
jnp
sbb
add
shll
test
lods
pop
add
dec
cwtl
stos
push
mov
mov
pop
fisttpll
sub
faddl
xor
fcmovnbe
ja
jnp
or
adc
dec
ljmp
imulb
xchg
sub
cmpb
enter
xchg
sbb
mov
dec
and
jo
and
jnp
add
xchg
mov
dec
pop
rcll
aad
jmp
mov
clc
and
push
mov
ja
jmp
and
xor
push
outsb
add
les
fcomip
das
in
lds
insb
mov
leave
adc
mov
dec
imul
add
test
mov
add
bnd
pop
jb
mov
xchg
or
movsb
inc
mov
cwtl
or
imul
dec
testb
jne
dec
insl
shlb
lods
mov
inc
jl
lcall
fcompl
push
jns
cmpl
cli
push
iret
lcall
cmp
ss
aaa
pop
pop
mov
dec
dec
mov
test
pop
stc
mull
jns
inc
sub
rclb
iret
aas
das
cltd
sbb
outsb
loope
in
push
sti
testb
out
out
pushf
mov
lret
fwait
sub
aas
push
cli
sbb
cmp
int
sbb
cli
add
jne
arpl
xor
mov
jp
jp
mov
mov
adcl
in
sarl
or
fs
sbb
xor
xorl
ljmp
add
sub
jle
adc
adc
lahf
in
iret
cli
stos
and
pop
sbb
shrb
in
out
hlt
loopne
ds
pushf
mov
imul
mov
push
xchg
jo
push
push
mov
inc
stos
iret
fcom
jecxz
sub
pop
pop
mov
fisttpll
inc
mov
stos
xor
dec
pop
inc
and
or
nop
xchg
test
mov
jo
pxor
pop
cmp
outsl
imul
int3
push
or
cmpsb
aas
in
lret
xchg
and
or
inc
in
movsl
std
push
xchg
sub
jmp
cwtl
push
aam
inc
pop
iret
imul
data16
inc
in
inc
int3
jg
pop
std
and
and
push
mov
dec
data16
adc
add
sub
mov
shll
ret
data16
mov
test
fst
pop
mov
ja
cwtl
dec
or
add
popf
ret
rorb
test
sub
jne
pop
test
repz
popl
loop
enter
add
pop
test
or
loop
inc
fidivs
cwtl
mov
pop
stos
mov
dec
sahf
jl,pn
pusha
or
jmp
imul
cli
mov
into
dec
xchg
inc
push
xlat
sbb
mov
inc
addr16
ja
jg
mov
iret
aaa
sub
push
and
lods
mov
jbe
push
push
mov
inc
stos
into
popf
pop
or
addr16
cltd
xchg
dec
adc
sub
push
mov
mov
adc
add
lahf
cli
cli
or
push
lods
ss
ret
das
test
xor
movsl
jns
ja
imul
cmp
mov
je
sub
jo
push
cmpsb
dec
repz
stos
out
shr
mov
jo
inc
jl
sbb
fistpl
jb
sub
and
dec
loope
mov
add
and
testb
outsl
sbb
cmc
push
jmp
sub
ljmp
adc
xchg
push
pop
aaa
lods
repnz
push
das
mov
pop
fdivrs
mov
icebp
jl
rcrb
dec
lcall
faddl
stos
push
mov
xchg
add
sbb
aad
leave
cli
inc
ds
lea
push
sub
jo
iret
fstps
sub
xor
sub
mov
cs
rclb
cs
and
lock
cmp
mov
jp
jns
enter
mov
push
sbb
pushf
xor
push
cltd
and
imul
jmp
adc
std
fmul
in
shll
bound
push
leave
and
cld
dec
inc
in
pop
rclb
shrb
mov
imul
lods
sahf
xchg
cmp
cmpl
inc
xchg
mov
gs
psubusw
loop
pop
cmp
out
cltd
lds
push
mov
jmp
jnp
aaa
pop
xchg
jge
js
push
mov
mov
pop
mov
dec
push
stos
or
lahf
and
pop
sub
xchg
jb
or
cmp
adc
jno
je
pop
mov
and
jo
lock
je
repnz
lock
hlt
nop
push
dec
repnz
or
mov
popa
or
iret
mov
ljmp
dec
das
push
push
add
jo
push
popf
jl
rorb
xor
shll
mov
push
jnp
mov
mov
or
movsl
xchg
mov
push
stos
scas
pop
rorl
cmpb
inc
cmp
scas
rclb
test
in
xor
lret
cmpsb
push
xchg
lahf
mov
enter
pop
cmp
lret
xchg
leave
out
test
in
or
pop
jae
divb
and
mov
stos
testb
sub
xchg
cli
and
icebp
cmp
pop
jge
repz
fadds
cmp
in
enter
sbb
clc
lods
int3
sbb
mov
or
jmp
neg
ficoms
dec
or
or
shr
adc
out
mov
in
dec
stos
xchg
pop
cmpsl
xor
add
pop
lahf
mov
lea
dec
into
sub
pop
push
mov
dec
sarb
daa
aad
loopne
xchg
ss
adc
lods
repnz
pushf
sahf
push
and
xor
push
push
sahf
std
inc
inc
and
roll
fiaddl
jge
jnp
out
outsb
sahf
cmp
test
push
xor
lock
inc
xchg
mov
les
cmpsb
add
mov
push
lret
cmc
in
subl
arpl
test
loop
jl
lcall
negl
iret
jl
cmp
int
mov
mov
bound
data16
lock
or
mov
adc
jno
dec
pop
mov
test
daa
pop
fwait
xchg
push
mull
fwait
jp
and
call
andl
and
in
mov
daa
movsb
push
mov
inc
inc
add
dec
mov
inc
dec
mov
js
loopne
mov
xlat
cld
dec
stos
pop
std
pop
add
scas
push
push
stos
or
nop
adcl
and
aaa
xchg
push
xor
or
out
mov
inc
jmp
dec
mov
ljmp
push
mov
mov
mov
ss
scas
mov
pop
in
xor
dec
mov
push
and
and
or
movsb
fistpll
mov
ret
out
jmp
shlb
into
sahf
add
shrb
xchg
ret
movsb
xlat
sti
push
add
lret
stos
mov
movsb
jbe
pusha
roll
or
xchg
mov
cmp
and
xchg
jne
stc
sub
xchg
mov
dec
sarl
aad
ljmp
nop
ret
add
addr16
adc
aaa
adc
arpl
pop
fdivl
mov
mov
mov
mov
and
daa
fwait
loopne
outsb
dec
or
jmp
jl
int3
je
in
pop
cmpsl
jbe
stc
imul
out
out
cltd
adc
pusha
pop
dec
push
ds
push
int3
aaa
mov
inc
fnstcw
bswap
mov
adc
pusha
push
icebp
sub
aas
jae
testb
or
pop
cmp
in
xor
fadds
and
jne
jbe
imul
xchg
mov
cltd
je
shrb
mov
test
mov
jnp
push
pop
pop
dec
jmp
and
jecxz
lahf
cmp
pop
inc
lods
cmp
add
cwtl
adc
stos
mov
xor
jmp
xor
sub
ljmp
sarl
xchg
mov
fimull
rol
ret
sub
cmp
mov
stos
dec
inc
lret
and
clc
mov
dec
scas
xorl
sub
jmp
cmp
das
mov
insl
jl
rcrl
mov
inc
mov
cmpsb
xor
cld
fmuls
outsb
cmp
popf
push
in
mov
std
xor
sbbb
lahf
or
stos
xchg
mov
mov
and
adc
or
out
test
or
dec
mov
mov
jl
push
mov
call
adc
js
pop
enter
popa
adc
aam
adc
popa
xchg
xchg
out
cmp
cmp
sbb
je
ss
shl
imul
and
xlat
cvtps2pi
push
pop
arpl
idiv
dec
jne
push
and
adc
pop
sub
adc
fisttps
stc
ss
push
xchg
aad
loopne
sbb
loopne
xor
loopne
mov
xor
clc
mov
mov
or
mov
jno
sub
jl
sbb
lahf
add
jae
sbb
mov
outsl
or
jb
cmp
mov
jl
gs
cmc
pop
cwtl
or
dec
cmpsl
mov
sbb
push
nop
movl
pop
pop
adc
and
dec
pop
sbb
sbb
adc
pop
add
inc
cmp
scas
jge
jbe
icebp
mov
sub
sub
sub
mov
sarl
mov
int
pop
sub
jecxz
xor
enter
sbb
lahf
mov
push
and
xchg
inc
add
fwait
push
testb
or
fnsave
test
mov
push
call
cmpsb
xchg
scas
cmc
ret
pop
jnp
out
cmc
loop
and
xor
mov
les
fbld
data16
xchg
scas
testl
aam
xchg
cld
stos
xchg
outsl
push
add
mov
mov
push
ljmp
or
gs
repz
mov
jns
mov
aad
pop
arpl
pop
jg
in
mov
xchg
push
cmp
rorl
push
xor
push
and
push
push
ljmp
add
mov
nop
cmpsl
ret
enter
sub
sarb
jmp
mov
mov
add
inc
clc
add
imul
shr
mov
inc
sahf
icebp
loopne
mov
loopne
mov
cmp
pop
lret
mov
pop
scas
addl
mov
xlat
mov
flds
adc
mov
adcl
jle
sbb
ret
push
test
cmpsl
jae
fmull
mov
add
lock
pushf
out
stos
cmp
vmovsldup
fwait
dec
jmp
inc
push
jb
cwtl
cmp
inc
push
loopne
sti
or
and
inc
mov
jnp
xchg
jns
pop
sub
sbb
add
jp
push
stc
insl
or
and
pop
mulb
sbb
pushf
cwtl
imul
int3
sbb
inc
test
pop
cs
mov
cld
jg
js
and
cmp
cli
popa
sbb
idivl
mov
and
outsl
xor
mov
pushf
subb
pop
addr16
jbe
movsl
cwtl
shlb
sbb
lods
shlb
xlat
test
fsubrl
mov
mov
rol
xor
mov
mov
mov
decl
push
lret
xchg
cli
add
aas
out
lret
sbb
xlat
mov
mov
xchg
rcrl
packsswb
es
aaa
stos
scas
ret
pop
into
fcomp
out
xor
xchg
ja
push
fwait
inc
mov
add
aaa
adc
outsb
repnz
scas
push
cmp
shll
popf
punpckhwd
xchg
mov
push
mov
flds
inc
or
es
insb
shll
in
fwait
addr16
jmp
xchg
mov
and
cmp
xchg
jnp
aad
imull
dec
xchg
and
fs
xchg
test
or
push
pusha
push
sbb
and
rorl
fwait
mov
das
push
push
in
fiaddl
gs
imulb
push
pop
inc
ret
and
xchg
and
dec
sbb
in
mov
jle
mov
mov
sbbb
pop
into
nop
dec
sub
flds
out
and
mov
mov
pop
mov
iret
cmp
hlt
pop
mov
fcmovu
sbb
and
jo
rol
jle
sti
aam
pop
cmp
push
sub
adc
jmp
mov
xchg
iret
or
dec
or
and
fidivrl
daa
inc
or
push
lds
call
es
mov
fwait
inc
out
or
sbb
ljmp
cmpsb
test
or
xor
sub
cmp
insl
loop
ret
adc
mov
add
shll
movsl
ret
sbb
arpl
mov
sbb
cmpsb
rclb
dec
sbb
sbb
xchg
std
ljmp
jmp
aaa
aad
adc
fstps
aad
in
out
ret
addr16
mov
aam
adc
sub
mov
rclb
clc
rolb
adc
xchg
fdivrl
cmp
jo
addr16
pop
cmp
or
sbbl
mov
shr
leave
sbb
xlat
inc
loop
mov
lahf
xor
int
xor
mov
pop
fprem1
mov
cmp
xchg
mov
andl
lcall
pop
or
sbb
out
jmp
push
stos
mov
adc
mov
mov
pusha
sub
inc
xchg
mov
ljmp
jne
filds
popf
and
je
std
adc
sti
add
js
mov
push
fwait
lea
arpl
mov
loop
fcomps
divb
jne
mov
dec
mov
or
lret
mov
movsb
lcall
loopne
mov
cmp
shll
push
fisubrl
xchg
cmpsl
test
mov
pushf
push
mov
addr16
mov
mov
cmp
xchg
out
rclb
stc
in
adc
or
mov
xor
loopne
sahf
lcall
xchg
mov
fildl
mov
fmulp
jns
cmc
push
popf
inc
xchg
dec
ret
jge
adc
jo
add
mov
in
aam
popa
add
pusha
dec
xor
sub
out
cmp
dec
xor
xor
andl
lret
and
repz
sbb
and
dec
sbb
adc
adcb
xchg
and
adc
aam
sub
ds
lock
int
xor
fs
xchg
lock
xchg
sub
push
ret
adc
sbb
lahf
mov
adc
outsl
xor
jnp
or
push
das
mov
mov
sbb
inc
push
dec
xor
fstpt
pop
or
repnz
sbb
call
daa
mov
shr
addr16
xchg
sbb
rcrl
xor
rcr
or
dec
push
mov
xor
dec
fsubl
ljmp
inc
neg
and
ret
add
dec
dec
pop
dec
fildl
push
and
ret
xlat
mov
das
aas
repz
insl
ds
jecxz
outsl
lahf
test
cltd
cmp
pop
loopne
in
mov
mov
in
and
pop
cmp
sub
cmc
adc
fadds
insl
mov
clc
xchg
jp
add
pusha
std
mov
es
pmullw
lods
int
shr
sbb
scas
dec
into
cmpsb
and
inc
xchg
and
fs
or
ja
adc
popa
jg
sub
xchg
xor
add
cltd
ret
fisttpll
xorl
out
xchg
inc
bnd
nop
stos
cmp
in
sbb
ret
pop
inc
loope
or
aad
or
mov
testb
dec
mov
ja
daa
and
icebp
inc
nopl
test
lock
lahf
mov
sbb
out
dec
add
xchg
stos
xlat
loope
aad
ljmp
loopne
shlb
int3
sbb
aaa
imul
and
data16
jp
lock
jle
or
dec
xchg
jnp
xor
adc
out
bound
mov
daa
fdivs
fldt
push
xchg
rclb
ret
ror
mov
jb
jecxz
pop
add
jno
add
out
pop
mov
jmp
movsl
lods
cmp
xor
xor
jmp
jg
push
mov
cmp
cmc
inc
add
jno
sub
add
fwait
daa
js
je
pop
jo
call
aad
les
xor
push
mov
rcrl
mov
dec
fstpl
prefetch
lods
popa
mov
movl
push
inc
inc
imul
mov
add
inc
fidivrs
stc
test
inc
pop
in
or
add
xchg
out
loope
or
pop
and
icebp
cmc
std
jle
lcall
arpl
ja
sbb
mov
adc
mov
in
mov
mov
das
mov
iret
inc
cmp
add
push
dec
xchg
xchg
sub
mov
imul
roll
stc
addr16
adc
inc
xorl
shrl
gs
fdivrs
in
out
dec
or
aas
push
push
dec
xchg
movsl
loope
cmpb
flds
push
and
ds
leave
lods
or
imul
push
push
lret
test
mov
daa
pop
adc
mov
jae
xchg
and
rorl
xchg
push
sbb
xlat
cmp
inc
mov
lret
sub
xchg
sub
xchg
xor
repnz
out
or
loop
or
xchg
es
mov
test
pushf
mov
aas
sbb
mov
sub
add
push
push
test
push
hlt
ss
fistps
and
add
movb
jl
pop
dec
adc
rcrl
lock
js
adc
dec
jmp
rcrl
pusha
hlt
pushf
repnz
lea
jbe
jge
sbb
je
je
pop
lahf
push
fnstsw
push
sub
pusha
int3
outsb
and
push
rcl
addr16
in
daa
jae
mov
xor
mov
push
xor
jnp
enter
jmp
mov
adc
push
dec
adc
mov
dec
icebp
push
fildl
insl
loopne
lods
jecxz
sarb
cld
jecxz
cmp
push
adc
xchg
xor
jecxz
jmp
xor
out
lds
push
pop
pushfw
sub
stos
sbb
orl
lret
and
pop
lods
stos
lods
cmp
test
movsb
mov
pop
cmp
xchg
mov
ljmp
xchg
inc
lret
arpl
mov
jae
addr16
pop
shl
dec
dec
dec
repz
aam
ret
in
out
movsb
lret
jmp
idivb
dec
xchg
cmp
sub
mov
xchg
sbb
popa
or
divl
pusha
mov
mov
test
lds
or
int3
sub
pop
lock
rolb
sub
or
fbstp
mov
rclb
dec
sbb
sub
dec
aaa
or
cmpsb
or
lea
int3
or
insb
cli
mov
stos
dec
test
inc
mov
aaa
pushf
hlt
cmp
int3
bound
inc
flds
in
mov
test
pop
xor
xor
add
mov
push
movsb
push
sbb
lds
mov
xchg
dec
adcb
adc
cmp
ljmp
mov
in
bnd
aaa
int
push
movsb
xor
jno
aam
inc
add
push
test
frstor
pop
push
adc
mov
mov
xor
sub
sbb
incl
loope
jecxz
or
cmp
xchg
data16
loope
test
sti
adc
push
sub
shrl
clc
scas
mov
mov
pop
icebp
roll
cmpsb
jnp
mov
dec
push
jg
xchg
scas
adc
cltd
std
dec
inc
mov
les
das
inc
jbe
fcmovu
inc
scas
leave
cmp
or
push
ret
sub
push
test
push
jo
pop
xchg
pop
icebp
shrb
mov
jne
ja
call
add
pop
jb
cmpl
fs
mov
in
scas
dec
cmpps
loope
movsb
sub
mov
in
and
aaa
sbb
mov
mov
mov
or
mov
hlt
insb
stos
pop
pop
fdivs
sti
mov
pop
fdivs
sub
lods
test
repnz
inc
mov
jmp
pop
inc
out
test
push
lret
insl
mov
mov
mov
repz
pop
push
lods
push
cmc
jl
mov
jnp
xchg
jae
fdiv
and
adcl
sub
dec
and
call
data16
iret
jp
loop
ljmp
decl
movsl
or
xchg
jle
mov
addr16
fs
xchg
ret
pop
fwait
stos
pop
ret
arpl
mov
sahf
clc
pushf
les
in
mov
pushf
dec
push
jge
nop
push
es
scas
cmpsb
xor
push
cs
cmp
int3
sbb
xchg
xchg
aam
lock
leave
inc
fidivrs
xchg
nop
std
xchg
mov
or
in
dec
cmc
ret
mov
cltd
xchg
out
push
pop
push
loopne
add
sub
shlb
mov
sbb
or
xchg
sbb
fstpt
pop
xchg
insb
aas
mov
dec
cmpsb
push
inc
jle
mov
hlt
cmc
xchg
mov
or
imul
shlb
dec
imul
mov
mov
fcmovnbe
sarb
and
mov
push
scas
insb
test
push
inc
mov
jb
xchg
mov
mov
xchg
ret
js
mov
and
ds
xor
xor
inc
leave
mov
adc
call
cmp
cmpsl
movsb
test
pop
data16
pop
ret
push
dec
sbb
cltd
xchg
movsl
ret
cmc
xchg
sti
jmp
and
mov
ret
out
pop
push
stos
and
insl
fsubs
mov
mov
or
sub
insl
or
xchg
out
jl
popl
jns
xchg
inc
mov
mov
fbld
push
and
pop
out
jns
push
mov
xchg
cmovne
adc
push
pop
xor
les
sbb
xor
iret
sbbl
pop
jge
sbb
jno
dec
adc
iret
sbb
repz
mov
adc
push
xor
jb
jbe
jbe
enter
lds
nop
xor
xor
stos
cmpsl
lret
jb
mov
cli
push
adcb
inc
jl
cmp
xchg
push
mov
add
inc
arpl
adc
sbb
stos
pop
imul
lahf
idivl
dec
movsb
push
and
xor
xchg
pop
and
ret
leave
mov
xor
xchg
mov
mov
pop
xor
jp
mov
shr
cwtl
popa
mov
add
jo
xor
sbb
inc
push
push
pop
pop
fucomi
pop
xchg
mov
inc
sti
cltd
mov
pop
imul
cmp
lods
mov
test
cmpsb
popa
cmpsl
mov
orb
filds
cmp
cmp
popa
mov
xor
cmp
mov
push
pop
repz
gs
push
sbb
repnz
insl
test
ret
pop
mov
lret
pop
das
rcll
ljmp
xorb
popf
mov
mov
sbb
dec
lcall
inc
adc
cmp
fists
in
pop
xchg
sarl
shlb
loopne
pop
iret
out
push
pop
movsb
sti
in
pop
pop
dec
outsl
sbb
adc
add
ficompl
outsb
negb
fwait
xchg
mov
inc
mov
jno
icebp
jo
pop
xor
lret
mov
adc
decb
push
cmp
adc
ret
add
fnstsw
test
or
xor
xchg
aaa
fimuls
cli
pop
mov
bound
push
xchg
and
cmp
adc
ljmp
adc
addr16
sub
sbb
scas
into
andb
add
mov
cmp
mov
fs
dec
aad
push
out
mov
and
mov
xor
pusha
out
jnp
pop
fsubrs
sbb
cmp
aam
dec
sbb
dec
lret
movsl
sbb
stc
dec
jns
mov
ret
popa
ss
iret
push
mov
outsb
jnp
pop
mov
insl
lds
stos
mov
mov
pop
adc
or
icebp
cmc
sbb
divb
lods
ja
mov
push
and
fisubs
stos
pop
mov
sti
xor
call
movsl
and
imul
fs
fwait
sbb
pop
repz
sbb
xor
push
cmp
test
aam
push
enter
sub
dec
test
pop
adc
mov
fs
test
cmp
aaa
xchg
insl
testl
es
lods
movsl
dec
test
shrl
imul
fiaddl
jle
add
jecxz
inc
xchg
cli
adc
inc
cmp
mov
cld
out
movsb
push
cmc
push
jle
push
outsb
and
xchg
sub
mov
xchg
pop
mov
or
sbb
je
and
and
and
xchg
das
mov
mov
lret
cmc
jae
outsl
dec
shlb
mov
xor
call
hlt
sbb
or
dec
ret
sub
or
mov
cmp
sar
in
push
dec
pop
and
cmp
xorl
adc
hlt
xorb
popf
aam
inc
mov
ja
aas
push
lahf
or
jo
pop
fiadds
jg
xchg
push
enter
fsts
icebp
sub
sub
pop
or
aaa
fcmovne
subb
out
pop
mov
int3
arpl
xchg
xlat
sbb
xchg
push
mul
je
out
mov
rcrl
hlt
push
fwait
add
push
xchg
std
cmp
loop
and
push
sar
xor
fcmove
mov
or
insb
pop
imul
push
sbb
popl
jns
aam
adc
in
add
scas
andl
jg
sub
clc
or
stc
inc
scas
cli
fchs
jg,pt
addl
lret
out
jge
daa
mov
int
or
push
imul
sub
sub
mov
out
and
and
mov
xor
jns
loopne
cld
loope
mov
inc
mov
xlat
sbb
out
or
jle
das
mov
fidivrl
popf
into
xor
ret
testb
dec
pop
mov
addb
fisubrs
push
dec
scas
mov
push
popf
movsb
mov
jmp
sti
data16
sub
lret
jecxz
pop
jo
pusha
rolb
pop
pop
movsb
adc
cmc
sbb
arpl
sti
add
ljmp
add
dec
adc
js
sbb
mov
stos
xor
mov
lock
scas
int
pop
filds
adc
pop
int
movsl
ds
leave
mov
orb
mov
jae
xchg
jle
fadd
sub
adc
mov
test
sub
sub
insb
sbb
xor
xchg
push
mov
shrb
push
in
cmp
and
mov
xor
or
add
cli
nopl
call
and
sub
cmp
inc
ret
xchg
pop
xchg
push
adc
push
movsl
pusha
xor
or
ljmp
dec
rep
ja
mov
xchg
loop
in
iret
pop
sub
in
inc
adc
pop
or
mov
fwait
scas
adc
testl
or
les
arpl
mov
inc
stc
mov
adc
mov
cld
push
aaa
jecxz
mov
and
stc
rolb
loopne
pop
imul
fs
lds
test
ljmp
mov
out
lods
xchg
mov
xor
out
outsl
adc
icebp
sub
mov
bound
insl
jmp
mov
jbe
insl
jne
movl
mov
jp
cli
and
dec
insb
js
or
sub
push
push
incl
imul
lret
js
pop
es
icebp
fldcw
lcall
mov
mov
add
out
std
addr16
xchg
sub
call
in
imul
icebp
mov
xchg
or
add
cmpl
push
gs
jne
xor
clc
shlb
add
mov
rorl
cmp
shlb
rcrb
mov
bound
cltd
ficompl
lret
dec
mov
xchg
bound
mov
addr16
cmp
fnstcw
movsl
out
jae
out
add
sub
ds
ret
flds
mov
jb
mov
push
cmp
pop
clc
imul
sbbb
xchg
mov
and
xchg
jne
das
out
inc
insb
pop
add
add
fnsave
or
inc
shll
xor
inc
stc
xchg
cs
ja
into
pushf
sbb
sbb
ss
leave
mov
aaa
punpckldq
pusha
dec
insl
mov
dec
cmc
ja
jl
mov
popa
sub
pop
and
cwtl
dec
sahf
pop
sarl
bound
jns
into
and
hlt
push
xor
leave
lret
idivl
movsl
push
in
mov
mov
push
add
sub
dec
mov
sbb
sbb
cmp
stc
mov
mov
lret
mov
int
mov
pop
xchg
aad
jle
pop
inc
push
and
or
dec
adc
adc
ficompl
int3
popa
cmpsl
or
push
xor
inc
mov
aaa
dec
into
pop
or
xchg
ja
mov
mov
enter
push
insl
and
add
bound
xor
daa
xchg
es
dec
xchg
movsb
shlb
sahf
test
ljmp
and
sub
pop
cwtl
push
decb
fadds
inc
add
flds
inc
pop
incl
inc
data16
cmc
mov
imul
cmpsl
jl
dec
lea
jmp
icebp
fidivrl
testb
adc
jecxz
sbb
test
adc
lret
lock
in
sub
jecxz
adc
inc
mov
and
xchg
mov
xor
lock
daa
rol
xchg
pushf
xchg
dec
adc
mov
nop
scas
mov
ret
int
insl
aam
sbb
out
jle
enter
mov
mov
jo
ja
dec
sub
sbb
scas
sbb
bnd
pop
enter
xchg
hlt
add
int3
jg
cmp
push
adc
sbb
cmpl
fwait
sahf
sbb
outsl
mov
leave
inc
daa
sahf
mov
rorb
xchg
xchg
aam
add
sub
xchg
test
flds
jle
gs
cmp
pop
jnp
mov
movsb
aas
xor
mov
pop
cs
lds
arpl
icebp
mov
jne
add
out
pop
or
mov
sbb
stos
xchg
adc
fsts
add
cmpb
repnz
popa
adc
mov
cmp
das
test
xchg
mov
and
les
ret
sbb
les
mov
xlat
push
out
scas
jge
adc
les
fcoms
dec
cmp
push
pushw
andl
lock
jp,pn
pop
daa
inc
cmp
fnstenv
push
data16
jnp
jp
leave
mov
or
shlb
jp
or
sub
fstpl
shlb
xlat
jle
fimull
xchg
insb
push
stos
sub
fisubs
outsl
ret
mov
ds
adc
xchg
inc
cmpsl
or
xchg
cmp
sbb
imul
mov
ret
mov
repz
cwtl
out
int3
es
int
mov
adc
sbb
rolb
jle
pop
rcr
loopne
inc
sub
scas
sub
popa
push
jg
pop
and
scas
in
into
xchg
pop
mov
imul
fisttpl
sbb
jb
jo
and
arpl
push
add
mov
pop
push
shr
es
pop
adc
std
cmp
pop
sub
int
jp
lods
mov
je
xor
loopne
mov
inc
or
lods
pop
and
add
jp
ret
sub
mov
mov
push
test
jnp
cmpsl
inc
add
pop
je
aaa
adc
add
fiaddl
cmp
cmp
mov
iret
out
lcall
and
cmp
xchg
inc
cli
xchg
mov
inc
jmp
pusha
data16
mov
or
ljmp
je
je
dec
jmp
in
hlt
out
lcall
popf
dec
aas
hlt
jl
push
and
aas
inc
cmp
movsb
sub
push
stc
pop
sbb
fcomip
pushf
fimuls
scas
test
push
xchg
aam
xor
ja
mov
pop
sub
jge
stos
sbb
inc
xchg
sub
pop
xchg
sbbb
pop
or
imul
and
js
push
pop
sbb
loope
inc
je
data16
test
mov
lcall
frstor
cmp
fidivrs
pusha
std
add
xchg
call
imul
jmp
inc
pop
adc
mov
cmpsb
mov
push
push
add
xor
xchg
inc
fcoml
fmuls
std
enter
dec
pop
repz
adc
cmpsb
inc
inc
dec
or
outsl
mov
xor
hlt
leave
cli
add
test
aaa
cmp
fnstsw
and
xchg
sahf
add
lret
out
daa
push
pop
and
lcall
stos
popa
sub
loope
add
mov
scas
icebp
and
test
xchg
scas
cwtl
mov
add
int3
ficoms
pop
mov
adc
stos
push
cs
test
xor
std
pop
stos
adc
inc
fcmovb
out
pop
cmp
fimuls
jns
dec
ljmp
les
sahf
mov
idivb
mov
xor
cmpsb
pusha
ja
xor
adc
mov
rcrb
mov
pop
dec
pusha
and
movsl
cli
test
das
fadd
xchg
hlt
add
stc
cmp
add
sub
into
dec
subb
imul
cmpsb
xor
jnp
adc
repnz
mov
cmp
dec
mov
imul
fcoml
adc
sahf
std
dec
sti
jnp
adc
push
push
decb
xchg
cs
scas
out
jl
nopl
imul
push
adc
add
mov
rorl
mull
stos
lods
out
mov
decl
fcoml
stos
jl
int3
mov
xor
pop
idiv
xlat
out
inc
pop
cmp
imul
push
push
xor
sbbb
mov
pusha
cmp
jmp
add
scas
imul
cmp
jne
clc
pop
cmpsl
mov
pusha
jne
push
cmc
push
out
sbb
test
xchg
fnsave
cmp
and
or
mov
xor
test
sbb
mov
mov
stos
push
ret
outsb
inc
fs
push
mov
xchg
sahf
mov
add
scas
push
enter
pop
jmp
sub
and
scas
gs
adc
xor
jg
inc
xchg
xchg
ss
rclb
stc
mov
xchg
nop
dec
add
popf
icebp
jne
pop
inc
fidivl
aaa
mov
in
dec
movsl
jg
mulb
or
lret
test
les
in
cmp
dec
in
dec
mov
lods
xchg
push
roll
jp
pop
xchg
sub
int
xlat
jecxz
inc
cmpsl
jp
jb
cmc
inc
fldt
mov
test
sub
shlb
xor
inc
mov
fwait
inc
sahf
cmpsb
rcl
xor
and
sub
push
enter
sahf
and
lds
inc
dec
mov
jae
mov
push
dec
jmp
sbb
dec
cmp
test
enter
xchg
lcall
imulb
pop
pop
stos
mov
das
cmpsb
int
xor
rcl
mov
push
mov
int3
xor
arpl
imul
sahf
push
ss
inc
jg
xchg
mov
mov
dec
jp
mov
out
sahf
xchg
jne
out
fldenv
xchg
cmp
mov
ret
clc
js
mov
pusha
test
or
clc
out
jge
testl
call
cmp
jl
lcall
cmp
rcrl
or
and
mov
popf
and
xchg
push
xchg
aam
dec
or
push
outsl
mov
sub
sbb
jl
pushf
int3
je
cmpb
pop
out
mov
nop
cld
jo
aaa
out
xor
imul
je
out
mov
es
cmp
mov
mov
pusha
mov
popa
mov
sub
mov
lcall
jp
out
test
fwait
in
les
ret
les
xor
ds
stc
lods
mov
or
lds
mov
pop
popa
adc
adc
mov
sub
pop
cmp
shrb
mov
addr16
or
scas
add
ljmp
mov
add
mov
cmp
xchg
mov
inc
enter
xlat
loopne
out
gs
jbe
and
xchg
mov
popa
out
xor
int
xor
and
sarl
jg
cltd
jge
push
dec
push
out
fcompl
pop
xchg
inc
jge
mov
call
or
jp
stc
ds
mov
or
add
mov
sbb
addb
call
into
cmc
inc
aad
xor
and
inc
inc
pop
xchg
mov
mov
repz
int3
or
stos
je
test
cwtl
out
dec
or
mov
and
adc
adc
add
sbb
dec
dec
sbb
cmp
cli
xchg
sbb
popfw
lock
ljmp
aaa
lds
insb
mov
pop
jl
sarl
dec
or
stos
rolb
and
mov
int
cmpsl
aam
pusha
xlat
mov
jno
bound
idivl
sbb
dec
leave
dec
or
cmc
pmaddwd
push
loopne
shl
cli
adc
movsb
iret
sub
sbb
cli
das
js
add
fs
cld
mov
mov
lcall
roll
das
sbb
cwtl
lahf
jge
adc
fildll
pop
pushf
and
push
loope
adc
jb
cmp
mov
mov
std
mov
pusha
sti
test
sbb
fwait
ljmp
pop
hlt
leave
movsb
arpl
stc
sti
adc
in
pushl
sub
inc
cmpsb
addr16
aam
or
mov
aad
popf
in
jne
ret
mov
incb
mov
jno
loop
xor
call
push
sub
add
ret
clc
sti
push
cli
or
in
js
pop
adc
jg
fstpl
push
sub
jb
mov
into
loopw
pop
addb
dec
dec
sbb
es
sub
std
adc
sbb
test
mov
test
dec
insb
add
add
mov
das
jp
or
add
sub
aam
sar
sub
imul
fwait
and
js,pt
xchg
jmp
aam
dec
adc
movsb
dec
or
push
test
sub
sub
jge
jns
flds
cmp
inc
jl
mov
mov
out
xor
sub
loopne
ljmp
adc
movsb
les
test
pop
or
imul
add
mov
lret
into
inc
lock
incl
fdivl
or
lcall
xchg
xlat
daa
adc
sub
adc
jno
sbb
test
add
mov
pop
repnz
inc
lret
xchg
loope
dec
dec
xor
rolb
jecxz
xchg
push
loop
notl
imul
fisubrl
mov
cmpsl
adc
insl
mov
mov
divb
fdivrs
loop
hlt
fsubrp
das
iret
xchg
jecxz
jo
mov
insb
jnp
xor
int3
pop
ror
fstpl
mov
jnp
and
fwait
cmc
xchg
inc
in
lds
xor
push
push
dec
jne
pop
sbb
cmp
test
adc
lea
and
add
or
add
pusha
pusha
hlt
mov
fbld
cmpb
pop
std
fstpl
adc
and
push
lahf
outsb
xor
pusha
and
xchg
and
add
xchg
push
mov
addl
dec
ret
shrl
cmpsl
and
int3
cmp
into
cmp
fnsave
dec
rcrl
sbb
mov
xchg
jo
test
shrl
cmc
fmulp
push
stos
or
pop
jbe
stos
or
test
push
or
sbb
aam
push
shrb
cmp
fs
mov
inc
fwait
orb
pop
mov
adc
test
push
sti
mov
pop
mov
icebp
xchg
cmp
inc
sub
cli
jmp
clts
je
and
pop
push
sbb
nop
sub
into
cmp
es
fbld
test
jne
sub
in
les
xor
shl
push
sbb
sbb
adc
or
inc
mov
shlb
push
orl
call
mov
or
inc
movsb
lods
sbb
cmp
hlt
or
jecxz
scas
or
popf
lods
mull
out
adc
cmp
adc
shrl
push
arpl
cwtl
sahf
mov
lds
pop
arpl
mov
jle
call
ret
sbb
jecxz
and
mov
ret
mov
mov
pop
jle
inc
mov
adc
mov
dec
adc
add
mov
cmp
cli
or
pop
aam
sub
mov
movsl
inc
adc
loopne
xchg
loope
or
les
stc
sub
das
xchg
mov
mov
mov
mov
scas
sub
pushf
mov
sbb
jbe
push
or
mov
aas
movsb
lahf
out
lret
scas
sahf
add
inc
push
stc
mov
mov
iret
js
pop
mov
add
cmpsl
js
scas
adc
jg
cmpsl
push
mov
sub
repnz
jge
fidivs
xchg
mov
xchg
xchg
out
push
xor
and
mov
fadds
int
dec
sub
sahf
add
dec
dec
xchg
pop
jb
jmp
aad
aad
je
push
or
push
inc
movb
push
push
loope
cmp
outsl
mov
bound
inc
sbb
imul
push
xchg
bnd
mov
idivb
arpl
pop
or
push
js,pn
in
mov
imul
ret
jb
and
stos
mov
cmpsb
push
jmp
shll
xor
leave
sbb
gs
leave
aam
xchg
bound
aam
push
scas
cmp
xchg
dec
jns
push
fsubrp
call
jbe
ja
sarb
ljmp
xor
imul
add
shlb
pop
dec
add
push
pop
pop
jae
dec
jb
dec
das
cmp
les
push
mov
aaa
fcomps
bound
ljmp
sub
sbb
loopne
sarb
and
js
jecxz
mov
and
insb
cs
jp
pop
js
or
cmc
rorb
push
mov
cs
daa
aaa
in
cmp
or
pop
arpl
lea
pop
jae
shll
movsl
inc
cmpl
jo
movsb
xlat
insb
repnz
mov
xchg
cmp
jae
es
dec
fsubr
lods
pop
sbb
in
stos
mov
cmp
dec
pushf
mov
mov
sub
repnz
ss
fimull
xor
loop
lods
dec
inc
cld
mov
test
inc
pop
mov
movsl
orl
mov
mov
dec
sub
add
push
sub
sbb
push
data16
add
out
enter
mov
aam
arpl
in
aas
fwait
xor
faddl
and
dec
cmp
jo
ss
andl
mov
dec
ja
cmpsl
repnz
cmc
xchg
sub
dec
push
and
repz
inc
sub
push
adc
mov
pop
pop
fs
push
lock
test
test
jle
aam
int
push
pushf
jno
arpl
cmp
ss
mov
sub
xchg
push
xor
mov
mov
and
cmp
mov
rol
or
in
xor
fcmovb
xor
fcmovne
mov
sub
sub
out
hlt
scas
xor
cmp
mov
std
fs
pop
pop
subb
mov
divb
mov
mov
adc
jg
test
rorl
sbb
ja
notb
adc
xchg
sub
shll
into
js
adc
mov
sar
xchg
call
xor
sub
adc
insb
ret
jp
inc
shrb
sbb
xor
jb
cmpsl
push
jbe
pop
dec
data16
mov
sbb
push
fsubl
sahf
or
insl
test
mov
and
arpl
inc
mov
lock
rorb
jo
clc
scas
aad
xchg
jbe
mov
cmp
mov
dec
xchg
push
call
ljmp
icebp
cmp
lods
jle
sbb
or
int
adc
pop
scas
insb
jno
gs
aas
nop
jne
clc
push
cmc
sarb
add
lods
inc
enter
jge
pop
sub
mov
out
pop
nop
stos
jecxz
repnz
mov
inc
mov
mov
mov
inc
push
lret
sbb
sbb
imul
mov
call
mov
mov
insl
daa
out
nop
enter
popl
out
sbb
sbb
aad
dec
add
pusha
push
std
add
neg
insb
mov
in
rcrl
shll
jp
movsl
pusha
jae
jae
dec
push
pop
int3
cltd
stos
cwtl
xor
arpl
push
cltd
jg
add
repz
stc
loopne
push
jnp
leave
cmpsb
or
add
sbbb
mov
xchg
xlat
scas
das
mov
ljmp
cmpsb
stc
sarb
cmp
mov
inc
test
fdiv
fisubs
jmp
incb
sbb
mov
sub
jb
add
mov
aad
mov
adc
jmp
mov
dec
sub
mov
aas
in
mov
pop
idiv
push
fstpl
insb
stc
mov
xchg
mov
xor
int
daa
mov
jns
outsl
cld
xor
cmpsb
dec
lahf
jnp
mov
mov
mov
mov
sbb
ret
in
jo
inc
sti
jae
callw
sbb
mov
out
jl
imul
arpl
jecxz
xlat
popf
mov
or
aad
inc
js
add
fnstenv
adc
cwtl
outsl
sbb
xchg
lahf
fldl
sarl
mov
cmpsb
sub
jns
out
aad
mov
add
insb
inc
mov
add
add
or
pop
push
mov
lret
pusha
loope
add
and
pop
insb
mov
enter
adcb
mov
lods
and
out
xchg
outsb
xor
push
je
outsl
popa
lret
outsb
pop
lcall
xchg
pushf
movsl
test
fidivl
inc
addr16
out
cmc
jno
xlat
sti
pop
add
and
pop
das
or
aad
mov
and
cmp
cmc
mov
gs
scas
pop
nop
add
fistpl
add
jae
daa
xor
add
adc
pop
loop
dec
sahf
push
xor
in
fucomip
orl
cld
loope
adc
repnz
lahf
xchg
mov
or
sarl
xchg
aam
test
into
sbb
bound
nop
bound
pinsrw
js
pop
mov
pop
and
lcall
ds
sbb
pushf
cli
in
add
cmpsl
xchg
in
jmp
fstp
sub
call
jae
negl
push
inc
inc
movsb
std
xchg
nop
mov
aas
dec
mov
jge
jp
pusha
mov
pop
in
cltd
push
in
mov
or
imul
xor
xchg
jmp
jp
push
and
mov
sub
es
movsb
jl
aam
mov
sahf
push
adc
imul
dec
push
pop
jmp
and
sbb
loopne
shlb
push
mov
cmpsl
cmp
jns
into
add
movsb
xchg
sahf
mov
and
cmpsb
sbb
insl
dec
adc
cli
mov
sbb
in
vminss
cmpsb
mov
insb
out
fwait
jmp
jle
and
out
and
in
imul
cli
pop
mov
sbb
push
sub
shrb
orb
push
and
dec
andb
cmp
scas
sbb
into
into
sbb
dec
pusha
ror
inc
xor
mov
jmp
mov
sub
push
xor
nop
cmp
or
ja
inc
xchg
data16
mov
imul
and
enter
outsb
inc
lods
jmp
cltd
arpl
hlt
push
cmp
cmp
push
adc
push
or
sub
lock
push
mov
push
jne
hlt
stos
inc
nop
rclb
mov
push
push
dec
es
out
sub
jge
xor
dec
dec
pop
pop
mov
aaa
xchg
push
notb
adc
sbb
mov
fists
inc
mov
mov
addr16
shlb
test
cltd
cmp
rep
fsubr
int3
pop
xor
or
or
stos
leave
inc
cmp
aad
pop
pushf
adc
fwait
cmp
repnz
push
mov
out
jo
push
and
clc
inc
imul
repz
mov
pop
sub
lret
jge
mov
mov
loopne
rorb
sbb
sbb
adc
jle
jae
nop
out
pop
push
mov
out
jne
cltd
sbb
out
data16
push
and
mov
mov
push
push
das
push
mov
into
add
rcrb
xchg
push
push
lods
pop
mov
je
jecxz
movsl
dec
xchg
push
jecxz
sbb
sub
mov
sub
lret
ja
call
les
dec
xor
xor
in
sbb
rcl
mov
mov
lock
mov
xchg
pop
jmp
adc
sub
adc
icebp
sub
xor
lea
addr16
hlt
jle
cmp
arpl
pushf
cmp
mov
push
xor
add
iret
add
insl
in
fistl
and
push
lea
loop
inc
in
mov
jns
loopne
pop
pop
outsb
or
ror
xchg
js
sub
idivl
rorl
ss
arpl
push
pusha
incb
cmp
sahf
decl
sub
das
mov
sahf
jne
pop
sub
leave
imul
adc
dec
mov
andb
jnp
sti
icebp
jmp
xchg
mov
push
jecxz
popa
bound
mov
push
and
mov
xchg
adc
dec
dec
lods
sub
dec
icebp
jl
push
clc
in
and
add
lahf
push
mov
mov
aaa
es
jg
cmp
insl
in
jae
xchg
adc
mov
fdivp
inc
mov
mov
test
sbb
mov
fistl
mov
or
xchg
loop
mov
push
neg
jl
out
jp
sarb
dec
pandn
jns
mov
push
dec
andb
cmc
clc
in
jl
push
movsb
aas
or
lret
cli
ss
adc
cli
lods
imul
push
fwait
imul
subb
into
fsubrs
push
lock
xor
icebp
jae
and
in
sbb
mov
push
jp
js
fucompp
sbb
imul
out
inc
es
loope
push
jbe
and
leave
enter
loop
pop
sbbb
push
cmc
jns
sub
test
andb
stc
ds
es
cmpsl
imul
inc
jns
aad
or
jne
dec
adc
xor
jnp
fisttpll
push
cli
and
fwait
mov
cmc
addl
ja
mov
test
cmp
jns
add
jle
loopne
add
mov
call
fisubs
mov
insb
xchg
frstor
and
ja
sbb
xchg
mov
test
mov
pop
je
out
dec
faddl
dec
xor
sbb
pop
ja
mov
aas
ds
adc
xor
mov
mov
dec
push
fistpll
jbe
add
subl
rclb
dec
inc
daa
out
and
mov
fs
rcrb
ret
jae
add
fdivs
aas
xlat
nop
and
and
in
sub
das
data16
mov
shrl
mov
adc
into
cwtl
outsl
aaa
orb
xchg
sub
in
pop
mov
icebp
add
mov
ret
addr16
lcall
sbb
push
ret
and
mov
xor
lods
mov
pinsrw
jo
test
sbb
rolb
jo
sub
fucomip
cmp
mov
sbb
sti
dec
inc
or
mov
insl
lock
imul
rorl
sbb
testb
ret
add
fmull
cmp
jnp
mov
jnp
cmp
loope
movsb
addb
das
mov
sub
ret
push
xor
dec
sbb
push
jle
cmc
dec
push
sbb
in
mov
cld
loop
arpl
ljmp
mov
add
xchg
sub
xor
je
adc
inc
adc
repnz
in
icebp
mov
aam
daa
in
sbb
fsts
decl
lods
mov
and
mov
xchg
inc
xchg
sbb
inc
pop
pop
nop
aaa
pushf
outsl
jecxz
inc
cmc
pop
sub
hlt
mov
mov
and
sbb
sbb
out
dec
aad
push
dec
mov
add
jp
shlb
inc
push
or
in
pop
es
push
call
push
mov
lcall
dec
fiadds
scas
pop
pop
cmp
test
mov
mov
dec
lods
mov
xchg
sbb
pmaxub
inc
shrd
mov
mov
jae
cmpl
mov
test
cli
mov
sarl
fldt
inc
push
mov
dec
mov
inc
mov
aad
repz
enter
sub
mov
scas
enter
and
xlat
sbb
loope
and
add
iret
mulb
das
pop
add
in
or
sub
outsb
xor
xchg
adc
in
and
aad
pop
jae
and
xor
jg
pop
adc
pushw
lods
test
std
insl
cmp
jns
jbe
dec
xorb
pop
sbb
push
sub
in
loopne
mov
xchg
cmpsl
sub
inc
mov
jnp
adc
dec
xchg
inc
frstor
hlt
inc
inc
push
fucomip
jns
in
outsl
outsb
sahf
add
adc
add
xchg
movsb
push
outsl
sbb
mov
aas
jecxz
or
pop
or
sti
lods
test
in
sbb
dec
sbb
lret
repnz
cmp
fwait
xchg
mov
fdiv
inc
es
fs
xor
cmp
lcall
imulb
adc
sbb
ret
scas
jne
jp
shlb
adcb
xor
cwtl
dec
dec
dec
adc
movsl
lds
lock
jg
jae
dec
cmp
and
mov
pop
orb
cmp
fwait
shr
insb
out
mov
lods
daa
and
fs
jbe
and
mov
inc
das
lcall
add
ds
addr16
lods
les
push
jp
mov
sbb
stc
push
decl
cmpsl
mov
pop
jae
mov
and
jge
nop
sub
push
es
xor
jg
pusha
mov
mov
fdivrs
sahf
popf
aad
pop
and
out
xchg
xchg
cmc
inc
scas
xor
lods
in
out
mov
add
dec
mov
adc
lret
out
test
xor
cmp
insl
inc
cmp
pop
jb
ja
jb
or
inc
nop
mov
add
std
inc
frstor
into
jb
mov
mov
out
clc
sahf
fists
push
rolb
adc
jo
mov
test
sub
or
add
inc
sbb
out
push
cmp
or
or
cmp
xchg
mov
cmp
xchg
push
fucomi
pushf
adc
pop
ja
scas
mov
and
jl
xchg
inc
or
mov
ret
data16
ljmp
dec
mov
lret
push
mov
enter
aas
mov
subl
xor
stc
inc
sbb
jbe
lods
dec
ds
ret
mov
ljmp
loop
sub
out
out
repz
fcompl
or
dec
cld
daa
inc
test
fs
lods
pop
inc
imul
les
jnp
mov
jno
pop
cmc
inc
push
add
fldcw
test
and
lods
mov
outsb
popf
push
into
int3
xchg
test
shrb
ljmp
mov
sarl
lds
test
into
adc
mov
loope
mov
pop
push
add
testl
mov
repz
or
pop
vpmullw
mov
pop
jl
stos
jle
jns
aam
jge
sbb
leave
or
das
enter
mov
lds
and
movsl
sbb
xchg
sub
fs
add
jbe
test
sbb
rclb
and
bound
xchg
sbb
imul
fmull
mov
pop
in
adc
cli
loop
pop
mov
mov
inc
stc
loope
cli
inc
clc
dec
pop
cld
aas
and
mov
outsb
clc
push
adc
and
or
mov
pushf
daa
jne
loop
stc
js
mov
test
sbb
or
imul
push
xchg
jg
lcall
in
inc
sub
add
hlt
mov
subl
loopne
pusha
jnp
push
mov
out
mov
cwtl
mov
push
dec
dec
xchg
push
sub
cmpsb
jo
leave
mov
xor
scas
imul
sti
mov
loope
sub
sbb
jg
push
shll
push
inc
loope
movsl
cmc
cli
fdivr
lock
pop
scas
dec
push
mov
shll
ja
pop
push
xchg
push
xor
enter
push
cmpsl
push
add
addb
cmpsb
mov
repnz
nop
loop
shrb
and
imul
test
xor
ret
fistpl
push
jne
cmp
daa
mov
test
xor
sub
in
sti
call
cwtl
push
mov
fwait
or
js
mov
orb
movsb
fwait
mov
fs
cltd
push
loopne
xchg
subb
aad
not
sub
fcoml
mov
mov
mov
fsubs
jg
popf
adc
pop
lahf
ss
dec
mov
xchg
sahf
and
notb
cs
leave
or
dec
mov
out
pop
in
mov
push
aas
rcr
sub
divl
push
dec
aam
out
pop
mov
insb
cmpsb
or
test
into
jl
js
in
pop
out
push
mov
push
or
xor
sbb
jo
mov
sub
adc
inc
cmp
add
inc
jb
mov
mov
imul
mov
jne
and
frstor
cmpsl
and
testl
mov
mov
xchg
jae
xor
ds
or
rorb
bound
enter
testl
xchg
sbb
sub
daa
pop
sti
jg
sbb
movsb
insl
aam
cmp
movsl
shl
adc
sbb
adc
mov
int3
inc
int3
xchg
sbb
loop
scas
loope
dec
adc
jns
add
test
loope
es
imul
outsl
push
and
sbbl
sbb
add
pop
into
push
arpl
jmp
mov
ret
and
mov
cwtl
movsl
cmp
sbb
stos
pop
jl
xor
ficoml
fistl
fadds
sbbl
test
pop
add
xchg
out
xor
inc
stos
push
push
dec
lods
clc
push
or
pushf
sub
cmc
incl
push
sbb
sub
imul
int
nop
mov
icebp
jb
imul
mov
pop
arpl
cmp
lahf
into
lock
leave
pop
test
leave
out
dec
in
mov
loop
mov
popf
lret
jbe
shlb
ja
decb
push
jle
repnz
mov
and
ds
adc
and
mov
jp
icebp
dec
rol
lock
dec
out
bound
shlb
loop
pop
ret
je
in
sub
lahf
lret
add
mov
push
adc
fdivl
scas
jp
loopne
sbb
sub
arpl
shlb
movsb
fnstcw
aam
outsl
ds
pop
loopne
cmp
pop
pusha
lcall
repz
xor
cltd
out
call
or
test
stos
jns
add
sub
les
sahf
mov
mov
mov
cmpsl
fcompl
pop
sbbl
mov
jge
mov
push
xor
xorb
dec
loop
movsb
push
das
push
popf
leave
clc
pop
jbe
cwtl
cli
and
leave
xlat
dec
fdivl
or
jae
adc
mov
pop
add
dec
jge
fisttps
dec
mov
jbe
cwtl
aaa
pop
lret
jb
push
lcall
pusha
and
dec
aad
imul
bound
dec
mov
add
out
aad
shll
adc
lahf
mov
jo
fwait
out
push
mov
cmp
out
jae
sub
pop
mov
ret
pop
sbb
adc
dec
in
jne
pop
repz
lret
pop
sarb
or
and
push
aas
fists
icebp
movsl
test
ds
and
push
mov
pop
je
inc
jmp
and
inc
fcoml
jmp
sbb
xor
jg
orb
jge
hlt
clc
mov
js
xor
pop
add
in
out
xchg
push
mov
jg
cmp
cwtl
call
xlat
pop
inc
fistps
adc
loope
cmc
popf
sub
xor
les
cmp
and
addr16
das
mov
into
popf
jecxz
or
sub
sub
test
aad
cmc
or
sbb
sbb
std
lods
ret
sub
dec
cs
lret
lret
mov
imull
and
push
es
sbb
out
add
das
out
inc
push
sub
adc
outsl
jo
out
push
push
adc
and
mov
movsl
orl
das
addb
bts
in
repnz
mov
inc
jno
push
push
add
aas
dec
int
add
movsl
pop
and
jl
fwait
and
in
sub
lahf
sub
int3
rcr
and
push
testb
lahf
ja
pop
je
cmp
inc
mov
and
test
dec
mov
and
js
leave
fisttpl
rcrl
test
or
add
inc
lock
or
xor
sub
in
or
dec
int
pop
cmp
sbb
out
or
cld
dec
push
insb
adc
popf
rcl
cmp
mov
dec
pusha
sub
scas
jbe
movsb
incb
outsl
fstpt
js
xchg
jo
gs
cltd
test
lock
mov
stos
push
mov
pop
ss
pop
fisttps
imul
dec
push
in
ljmp
cmp
pushf
or
shlb
in
cmp
or
iret
push
jae
fiaddl
ror
je
mov
test
add
dec
xor
cltd
fistps
popf
arpl
scas
xchg
ss
int
std
mov
sti
add
in
shrb
mov
dec
stos
push
fnstsw
dec
jbe
mov
negl
popf
jns
mov
sahf
fwait
and
fsubl
std
push
fwait
add
pop
add
es
mov
scas
fs
pop
fwait
in
int3
rcll
cmp
int3
push
scas
push
push
push
and
int3
insb
data16
insb
jae
jb
adc
fdiv
ficoms
js
int
fstl
fldenv
loop
dec
fistl
in
push
mov
lcall
test
mov
mov
aas
push
clc
xchg
jmp
sub
inc
xor
mov
mov
and
inc
xor
mov
or
push
sbb
sbb
cltd
int3
outsl
pop
jg
jb
clc
out
mov
xor
mov
fnstcw
mov
lock
scas
jno
pop
cli
pop
or
xchg
inc
push
into
xchg
or
loope
jo
ljmp
cltd
outsb
xchg
jae
subl
xchg
data16
ljmp
lods
std
stc
and
call
call
dec
pop
lds
xchg
add
imul
hlt
clc
or
add
dec
bnd
xchg
cmp
loop
sti
aam
xchg
int3
and
incb
add
pushf
ret
loope
add
fiaddl
adc
leave
add
fadd
pop
cmp
cmp
push
nop
push
add
in
inc
enter
adc
push
dec
dec
ds
out
sub
imul
in
ficoms
test
cmp
ret
fsts
fdiv
shlb
add
add
xchg
daa
lcall
pop
adc
jnp
cmp
ret
xlat
data16
mov
std
xchg
insl
or
mov
fistpll
nop
inc
mov
adc
dec
sub
cwtl
imul
push
lret
sbb
add
in
repnz
cmc
in
in
gs
mov
add
push
cmp
add
xchg
pusha
pusha
mov
and
pop
scas
lret
xor
stc
inc
jl
arpl
mov
addr16
cmp
arpl
ljmp
cli
popf
or
lods
inc
mov
xchg
jbe
ds
mov
insb
fstl
pop
int
adc
push
into
rcl
or
jle
mov
pop
insl
scas
test
pushf
js
rcrl
inc
jnp
cs
mov
insb
dec
test
mov
clc
cmp
adc
dec
sub
dec
push
sub
or
das
mov
xchg
popa
mov
adcb
lods
or
sub
popa
pop
movsl
xchg
cmp
inc
aaa
icebp
inc
mov
rclb
imul
sub
pop
movsb
fmull
jp
cmpsl
pop
arpl
arpl
and
imull
lods
push
roll
sbb
xor
mov
ret
pop
add
push
arpl
cmp
inc
mov
gs
roll
in
sahf
cmp
lahf
mov
xchg
cs
out
cmpsb
pusha
cmp
int
pop
mov
cmp
aam
cmp
fwait
outsl
jg
add
fs
xchg
jle
mov
mov
jae
outsl
imulb
xor
aad
scas
push
sub
adc
repz
pop
call
push
into
jb
int3
sahf
sub
iret
and
sbb
xor
insb
mov
cltd
cmpsb
and
mov
and
sbb
lods
jg
adc
xorb
clc
clc
js
lods
js
jle
sub
gs
xchg
insl
xchg
jp
mov
adc
adcl
cwtl
sbb
sub
add
pop
cld
mov
mov
das
jnp
shlb
cmpsl
sub
or
cmp
aaa
and
test
cmpsb
xor
ss
inc
inc
push
mov
jnp
fcmovnu
xor
and
leave
into
push
push
repnz
mov
xchg
int
push
mov
int3
lcall
call
rcl
mov
dec
daa
and
out
gs
push
and
scas
mov
bound
cmpsb
rorb
mov
inc
push
shrb
cwtl
mov
mov
rcl
and
sbb
je
call
int3
pop
es
mov
fs
mov
mov
cmc
pop
add
fistl
cltd
mov
pop
jno
fldenv
movsl
xor
jmp
in
popf
mov
mov
or
mov
sahf
pop
ljmp
es
icebp
xchg
es
mov
in
mov
or
or
inc
push
xchg
push
popa
mov
jecxz
out
insb
and
jno
stc
mov
fwait
jns
movsb
cmp
je
jl
stc
jl
xchg
jge
sbb
call
lods
repz
inc
add
push
xchg
icebp
lds
push
mov
pushf
cmp
cld
cmp
sbb
dec
lds
inc
stos
mul
pop
and
loop
xchg
sub
lcall
int3
insl
sub
cmc
fptan
mov
cmpsb
aad
pusha
mov
shlb
shlb
sbb
mov
rcrb
inc
sub
rcll
pop
xchg
cmp
jnp
sbb
mov
fwait
je
sahf
inc
ss
outsb
jl
push
aad
cmp
xor
add
mov
test
fildl
mov
cs
int3
faddl
mov
or
popf
std
in
test
dec
sbb
cmp
cmp
sub
insl
jge
cmp
mov
push
movsb
push
inc
adc
xor
cmp
sub
push
daa
push
jle
push
sarl
testb
pop
pop
xchg
cltd
push
out
mov
out
or
sub
mov
fcmovne
mov
or
push
gs
pop
xchg
out
mov
adc
push
loop
jbe
hlt
jl
and
sti
pop
imul
push
add
inc
xchg
jl
outsl
mov
fistpl
aam
dec
cmp
in
sbb
mov
inc
std
int3
pop
add
es
jmp
addb
clc
push
in
lcall
out
aam
das
inc
mov
sti
pop
inc
cmpsl
aad
repnz
jg
jae
cwtl
push
movsl
scas
pop
pop
adcl
lcall
adc
or
push
leave
jb
cmp
add
inc
enter
push
test
jo
sub
andl
sbb
mov
sub
sahf
ds
ror
mov
pop
mov
pop
inc
xor
icebp
loop
test
insl
or
sub
jp
imul
addr16
es
cmpsl
mov
or
jne
push
dec
mov
push
scas
movsb
xor
mov
inc
push
mov
cld
push
jns
dec
pusha
inc
pop
mov
adc
dec
push
loope
ljmp
inc
push
cltd
int3
aas
shrl
cmc
xorb
jmp
leave
cli
xchg
out
and
outsb
push
imul
mov
mov
cmp
add
popl
push
arpl
int3
addr16
xor
enter
xor
mov
fwait
xchg
insb
mov
fiaddl
cmp
mov
andb
movsb
mov
aas
jo
add
sbb
xchg
inc
inc
out
xor
loopne
sbb
popa
pop
loopne
pop
jl
pop
push
mov
add
push
test
jmp
out
movsl
pop
xlat
xor
push
push
jno
pop
test
and
inc
jo
jnp
mov
pushf
testb
fsubs
adc
lea
les
sub
or
and
mov
add
mov
cld
mov
mov
xor
out
xchg
clc
pusha
aaa
es
dec
mov
cs
inc
inc
adc
or
and
xchg
sub
fidivrs
cld
and
divb
sbb
dec
pop
scas
sarb
mov
add
pop
sub
insb
movntps
cltd
lret
fisttpl
mov
in
xchg
fcmove
or
stos
xchg
fcoms
ficoms
data16
push
mov
jae
push
test
add
lret
cmpsl
cwtl
add
stos
mov
cltd
mov
adc
xlat
sub
pushf
mov
xor
insl
ljmp
push
push
iret
pop
out
adc
iret
and
jne
dec
jae
lcall
cmpb
pop
mov
cmp
shr
out
xchg
sahf
pusha
sahf
sub
push
imul
test
mov
push
dec
insb
cmpsl
shll
cmc
dec
jge
jbe
sub
cmp
cwtl
ja
sbbb
dec
insb
pop
dec
into
scas
popa
lods
jmp
push
push
loopne
cmp
das
ja
in
push
andb
aas
jle
fcoml
negl
out
cld
push
add
inc
pushf
icebp
imul
push
nop
dec
loopne
or
sub
loopne
scas
mov
jbe
and
pop
int
sub
push
in
in
dec
xchg
fdivr
loop
ret
dec
neg
shl
rolb
test
sub
movsl
lcall
loopne
icebp
sarb
sub
nop
mov
fcom
adc
push
arpl
add
pop
inc
bound
icebp
cmp
popa
push
popa
mov
jge
pop
mov
fmull
test
fisubrs
ds
jb
cmp
jae
sbb
test
pushf
jo
pop
es
adc
in
repnz
rolw
fldenv
cmp
loope
inc
aaa
mov
div
in
and
sbb
jno
outsb
sub
out
jecxz
mov
xor
pop
push
in
add
push
test
aas
xor
xor
cmpl
jae
mov
ljmp
pop
and
dec
mov
mov
sub
dec
pop
inc
inc
pop
mov
or
jle
je
cli
inc
xor
js
add
test
popf
push
inc
xor
cmp
fdivrl
dec
stos
movsl
dec
add
scas
inc
test
and
icebp
test
repnz
cmpsl
push
jno
fildll
icebp
cmp
pop
sbb
mov
adcl
cmp
jno
fimull
into
out
push
dec
hlt
jbe
arpl
mov
stc
scas
xchg
push
test
xor
jns
and
lret
ljmp
jecxz
into
lret
push
jne
pop
shl
mov
outsl
cltd
aam
push
sub
jg
rol
jo
int3
pop
loop
in
mov
mov
fs
rorl
sbb
leave
lds
iret
loopne
add
inc
das
movmskps
adc
mov
gs
or
add
in
fists
out
pop
movsl
scas
imul
cli
inc
lods
push
xchg
sar
mov
les
pop
aam
je
dec
xor
push
fdivrs
ljmp
cmp
in
adc
insl
outsl
mov
pop
or
mov
int3
mov
sub
mov
out
aas
dec
insl
push
loope
xchg
adc
push
clc
cwtl
jecxz
mov
cmp
jae
dec
jecxz
inc
mov
sbb
fidivrl
and
pop
xlat
pop
out
or
mov
leave
repnz
fsubs
arpl
jecxz
mov
sbb
jns
sub
mov
mov
repz
lods
pop
insb
mov
lods
cltd
mov
call
imul
int
dec
jns
inc
ja
sti
pop
int3
push
and
pop
int
gs
xor
xor
subl
insl
adc
dec
imul
inc
jbe
and
lahf
add
jnp
data16
lret
sub
adc
test
aaa
movsl
ret
fisubs
push
sub
push
das
enter
and
loopne
mov
mull
dec
and
pop
clc
lods
mov
dec
repnz
push
adc
cmp
sub
lock
push
hlt
in
fisubrs
inc
inc
mov
mov
mov
lea
in
and
fistl
shlb
inc
pop
jmp
xchg
mov
repnz
mov
mov
mov
push
pop
outsb
pop
pop
dec
fcompl
sub
cli
push
int
lret
sahf
push
hlt
or
cwtl
movsl
stc
xor
jnp
and
jno
int
fs
lods
pop
or
out
test
lods
xor
mov
lods
and
push
dec
cmp
mov
lds
push
pop
clc
ss
outsl
out
and
dec
cs
sbb
mov
jae
addr16
lret
in
xchg
out
bound
in
in
jmp
sbb
notb
gs
int3
jo
pop
adc
push
mov
jmp
pushf
sbbl
adc
cmp
filds
sahf
addb
jecxz
mov
fildll
subl
testb
cmp
xor
data16
push
enter
pop
fs
jnp
dec
imulb
mov
add
leave
jbe
inc
rorl
mov
fwait
jmp
fimuls
arpl
jno
xor
sahf
hlt
je
sub
ljmp
fsub
mov
inc
dec
adc
jo
jmp
imul
mov
cli
or
in
jae
jns
mov
rclb
add
rorb
push
push
lds
and
mov
stc
mov
dec
lret
fmulp
call
out
xchg
mov
orl
sbb
push
es
stc
cld
aam
notl
cwtl
loope
ret
scas
mov
adc
in
leave
js
inc
std
add
mov
jg
and
and
int
push
mov
adc
mov
ds
dec
inc
nop
ss
sub
imul
add
sbb
aam
ds
sub
adcb
lock
fs
pop
xlat
loope
in
repz
stos
rcrb
push
pop
or
mov
pop
imul
mov
insl
arpl
negl
stos
mov
xchg
in
hlt
stos
out
xorl
jno
cmp
fwait
arpl
dec
hlt
aaa
xor
and
mov
mov
in
repz
fistpl
and
mov
les
adc
push
js
adc
push
mov
mov
pusha
or
inc
cmpsl
cmp
bound
bnd
sub
add
frstor
lods
popf
adc
das
or
pop
adcl
jg
jnp
dec
add
in
lret
dec
imul
lret
loop
xchg
mov
sbb
stos
add
and
adc
fisttpll
test
add
into
mov
pop
mov
scas
xor
arpl
jbe
dec
js
cmpb
fs
dec
sub
je
sub
stos
sarb
ja
in
enter
fbld
mov
xor
push
out
in
dec
cld
mov
stos
jae
pop
dec
movsl
and
lahf
sub
ljmp
fst
push
xor
orl
ds
sub
cwtl
ret
push
pop
mov
cwtl
fwait
into
xor
jno
xor
push
xchg
negl
sub
subb
pop
cmovp
mov
sub
aam
imul
nop
dec
pop
loope
cli
mov
xor
cmp
jl
data16
outsl
ret
adc
imul
jb
inc
outsl
adc
mov
sbb
jo
imul
sbbl
movsb
outsl
repz
sub
mov
ret
cltd
ja
sbb
out
nop
js
push
scas
push
out
pop
adc
push
sahf
rorb
mov
or
sbb
add
fmull
xchg
jecxz,pn
aaa
adc
inc
jne
ficoms
mov
ficompl
fstpl
inc
add
jmp
dec
cmp
mov
mov
push
dec
mov
or
pop
cmc
adc
shlb
ss
out
pop
rol
ret
stos
cmp
or
push
scas
jae
jmp
aam
sbb
sarl
xor
pop
dec
out
xchg
stc
or
jp
mov
sbb
cs
ffree
leave
outsl
loopne
ja
pop
rolb
push
adc
mov
inc
addb
inc
cmp
adc
and
lds
sti
rorb
sub
pop
xchg
pusha
or
ret
test
js
loopne
roll
xchg
or
enter
mov
shlb
subb
inc
mov
mov
inc
mov
ss
push
cmp
add
add
jecxz
fnstcw
push
enter
xorb
ss
loop
in
xchg
sbb
cmp
lret
lock
pop
xor
stc
es
xchg
xchg
insl
pop
fst
jno
xchg
inc
ja
repnz
inc
movsl
in
adc
jno
xlat
movsl
push
clc
inc
sub
sub
insl
mov
repz
fcom
lock
fwait
xorl
movsb
movhps
add
ror
sbb
sub
mov
xchg
aaa
fnstsw
imul
dec
xlat
pop
repz
aam
mov
xor
outsl
or
and
stos
mov
push
cld
aam
out
in
adc
bound
loope
loop
pop
aaa
lret
sub
mov
xchg
pop
je
int
xchg
in
and
jge
jne
cwtl
xchg
xor
xor
pop
ret
std
or
adc
lds
adc
xchg
addl
xchg
fcompl
daa
or
mov
push
xor
test
cwtl
inc
lahf
adc
testl
inc
pop
andb
xor
push
mov
ds
mov
dec
inc
testb
jb
mov
les
dec
es
mov
cmp
std
lahf
insb
jnp
popf
cmp
mov
push
jnp
and
jnp
cmp
notb
cmp
roll
adc
ss
mov
sarl
xchg
das
loop
cmp
jo
stos
add
movsl
push
daa
push
dec
lods
xor
add
add
fdiv
test
loop
push
movl
frstpm(287
hlt
mov
xchg
loope
mov
adc
imull
xchg
mov
mov
mov
mov
aad
fnsave
loopne
add
and
cmp
int3
pop
inc
jne
shrb
dec
pop
pusha
add
jle
mov
dec
shll
roll
dec
ja
mov
adc
test
lret
push
aas
pop
fsubl
pop
aam
and
mov
sbb
inc
fwait
adc
cmp
stos
arpl
lock
jge
in
loopne
adcl
add
dec
nop
sti
mov
movsl
lods
cld
or
mov
fwait
sbb
testl
or
mov
push
lock
dec
dec
stc
movsl
out
jo
pop
cs
lcall
adc
xchg
test
sti
push
pop
xchg
aam
aaa
mov
movsb
int3
leave
jae
jmp
jbe
cmp
or
popa
cli
inc
incb
or
fsubp
enter
cltd
cmp
repnz
jne
loope
mov
sbb
sub
imul
adcl
enter
mov
xchg
out
or
xor
je
sub
lock
xor
inc
pop
cmp
push
and
mov
pop
or
cmc
bound
sbb
push
into
mov
pop
pop
bound
pop
mov
jecxz
add
andb
or
xor
mov
jnp
lods
fwait
pop
xchg
push
enter
push
jno
xor
fwait
movsb
out
adc
test
or
aas
test
sub
gs
rolb
inc
add
mov
insb
adc
sti
push
dec
lret
mov
dec
mov
lret
xchg
leave
dec
or
ss
jae
js
or
mov
imul
in
push
int3
imul
shlb
or
prefetchw
testl
ljmp
les
ret
sbb
cltd
cmp
or
or
jp
sub
mov
decl
xor
call
ja
ljmp
cmpsl
adc
dec
push
fiadds
stos
into
mov
push
das
out
test
mulb
test
jge
dec
test
les
scas
std
aas
push
sub
pop
sahf
stc
mov
xor
adc
mov
xchg
out
cmpsl
aam
xor
flds
mov
sub
inc
cwtl
ret
inc
push
mov
add
test
rolb
rclb
push
pop
bound
jno
test
push
bound
divl
push
mov
push
pop
lret
les
call
hlt
mulb
lret
lock
push
and
scas
subl
mov
lcall
add
xor
pop
outsb
lea
mov
sarl
repz
xchg
mov
scas
mov
leave
or
inc
pop
mov
and
sub
mov
push
dec
hlt
mov
add
movsb
shrb
mov
fisttps
mov
pop
cmp
adc
sub
jp
push
cmp
negb
neg
jl
sbb
sub
lods
pop
pop
je
test
mov
mov
dec
mov
in
dec
sub
inc
and
push
stc
and
push
sub
arpl
push
and
and
in
jl
leave
mov
or
mov
leave
fisttpll
loop
call
iret
mov
ja
jo
or
rorl
into
cli
mov
mov
sti
rcll
mov
adc
cmp
mov
test
in
sbb
out
mov
mov
push
outsl
outsb
mov
mov
pop
mov
shlb
in
das
out
jl
xchg
outsl
shl
or
pop
mov
cmp
inc
add
jbe
adc
add
mov
and
jo
in
jae
mov
sbb
xchg
es
bound
int3
xor
dec
mov
pusha
out
cld
je
neg
lret
xlat
pop
shlb
notl
out
jmp
mov
or
addr16
loopne
sub
xchg
push
outsb
scas
jecxz
sarb
sub
addr16
mov
inc
mov
fcmovbe
aas
or
popf
js
cmp
mov
mov
mov
imulb
xorb
ds
dec
insb
inc
and
pop
inc
and
lret
adc
dec
dec
subl
stos
rclb
fscale
popf
add
adc
add
iretw
jne
adc
fs
mov
rcrb
enter
inc
imul
rcrb
iret
loope
cli
leave
xor
cltd
pushf
jne
fstpt
testl
jae
add
mov
inc
jo
repz
mov
aad
jae
xchg
mov
pop
add
repnz
mov
lahf
xchg
jne
fdivs
mov
andb
fwait
jl
int
leave
fucomp
inc
mov
call
js
adc
jp
pop
pop
jecxz
mov
sbb
push
adc
int
inc
test
push
in
push
stos
imull
hlt
dec
and
push
outsb
jbe
dec
mov
out
iret
dec
jl
cmpsb
data16
mov
cltd
jmp
js
mov
movsl
shll
adc
mov
pop
gs
adc
bound
insb
iret
add
ffreep
gs
xor
mov
jl
loopne
sub
pop
push
ss
das
pop
faddl
cmp
xchg
cmp
rolb
stc
xchg
xchg
inc
jbe
adc
sub
cmpsb
stos
stc
mov
rcrb
mov
lahf
dec
popf
adc
gs
xor
mov
and
decl
stos
jb
lods
mov
and
or
imul
dec
in
adc
sbb
adc
dec
add
movsb
testl
ljmp
movsl
sbb
addr16
scas
push
dec
push
fldl
add
lods
call
hlt
cmc
sbb
xchg
fcoms
fwait
stos
xchg
or
inc
sti
and
iret
jae
xchg
in
push
movsb
out
pop
push
out
mov
mov
aas
ss
sti
cmp
les
jo
xor
push
fidivrs
lods
push
les
jbe
and
nop
add
rcrl
adc
mov
in
sub
inc
out
xchg
pop
repz
sbb
out
push
xchg
ss
out
and
into
ret
into
fadd
push
pop
pop
add
call
mov
repz
add
pop
ret
cmp
incl
pusha
jecxz
std
mov
inc
daa
fcmovb
sub
pop
sub
jb
and
adc
leave
or
and
dec
mov
mov
loope
jae
or
inc
adc
adc
frstor
mov
push
arpl
mov
push
scas
pop
cmp
inc
add
and
push
insb
mov
jb
add
pop
sbb
rdpmc
mov
ret
mov
mov
jecxz
jg
mov
dec
dec
gs
cmpsb
int
pop
push
mov
or
and
mov
movsl
imul
sub
test
adc
mov
pop
in
mov
dec
movsl
sub
inc
xorl
sub
cmp
fucomi
addb
fnstenv
push
xlat
pop
lds
and
sbb
sti
aam
jne
pop
inc
es
pop
sbb
inc
repnz
xchg
xor
outsb
sarb
imul
mov
orl
repz
aaa
adc
cmpsw
sub
cli
dec
aad
ljmp
xor
pop
fidivrs
mov
test
push
pop
stos
add
mov
adc
lcall
idivb
lods
addr16
inc
mov
sbb
fidivrl
adc
jnp
inc
ret
sbb
mov
push
cmp
popl
push
adc
xchg
and
sub
repnz
jp,pn
inc
mov
insb
lcall
pop
cmp
lods
or
lea
xor
mov
mov
test
shl
or
lret
xor
xchg
xchg
stc
ror
fs
cmp
lcall
adc
addr16
xor
int
inc
std
push
mov
adc
push
rorb
cmp
into
jno
inc
sbb
icebp
into
and
clc
cmp
mov
rolb
jns
ja
ss
adc
pop
mov
fisttpll
inc
das
cmp
enter
out
jae
and
lret
lds
das
jg
push
cltd
int
pop
push
orb
push
aaa
push
loope
xchg
push
roll
cmp
pop
pop
inc
test
in
iret
xchg
push
mov
ss
push
mov
xchg
xlat
mov
cwtl
cmp
sub
shrb
rclb
cmpb
xor
jge
jmp
call
xor
lret
lcall
and
dec
inc
into
int
jnp
dec
subl
orl
cmc
lock
xor
cld
pop
mov
adc
ljmp
testl
fwait
ret
cmp
push
dec
push
std
popf
pop
stos
or
mov
mov
mov
into
and
dec
pop
adc
fmul
adc
jns
mov
jg
or
and
shrb
out
loope
xchg
shlb
lods
shll
xor
adc
jb
data16
int3
add
pop
dec
outsb
pxor
ret
adc
mov
rcrb
ror
lods
mov
sbb
lahf
adcb
repnz
orl
bound
nop
mov
movl
es
add
fcompl
fistl
adc
mov
bound
lock
insl
adc
adc
add
scas
fisttpll
mov
pop
je
cmp
scas
dec
jbe
fs
push
cmpsl
insl
pop
adc
mov
mov
test
xchg
inc
mov
mov
popf
dec
adc
icebp
repnz
fs
lcall
sbb
push
jne
fwait
subb
sub
sbb
jb
jns
fadd
jno
push
or
jo
ljmp
adc
pushf
xor
sub
outsb
fdivp
sub
mov
dec
mov
repz
or
rcrb
lock
inc
jo
xchg
jge
testb
add
mov
add
ds
stos
add
add
mov
xlat
popa
ljmp
mov
shr
adc
out
push
dec
cmc
movsl
sbb
push
inc
fildll
sbb
mov
scas
loopne
fs
data16
nop
xlat
mov
cltd
sbb
sbb
inc
lea
int
pop
pop
insb
aaa
jle
lock
ss
inc
or
test
lods
or
mov
jns
jp
int3
pop
mov
movsb
and
mov
mov
sub
pop
xchg
or
cwtl
test
jae
leave
aas
and
stos
and
pusha
pop
je
popa
mov
loopne
inc
pop
lods
aas
fstpt
pop
xchg
xchg
pop
mov
push
dec
shrb
xchg
mov
xor
insb
shr
inc
dec
jle
loope
or
xchg
mov
or
push
mov
jle
daa
stc
fstl
sub
jbe
mov
add
xchg
add
testl
sti
shlb
lock
int3
sub
jmp
and
lds
xchg
add
xor
jno
mov
and
xchg
xchg
jge
js
push
lcall
pop
addb
imul
insl
loop
sbb
push
cmp
or
out
or
sti
pop
xor
pop
inc
sub
or
mov
or
cmp
push
movsb
inc
aam
sahf
pop
dec
pop
cmpsl
bound
fdivrl
pop
icebp
rolb
or
movsb
js
popa
ret
sub
test
icebp
push
and
dec
pop
call
jne
pop
add
pop
sbb
clc
jae
nop
push
inc
jo
xchg
xchg
push
test
pop
iret
addr16
push
dec
jge
sub
and
lea
or
arpl
mov
ja
jmp
xor
stos
sbb
jns
xchg
xchg
lret
jo
push
inc
mov
repz
push
xor
mov
xlat
daa
push
xchg
hlt
adc
mov
push
dec
inc
and
ret
ret
lods
jle
js
enter
gs
push
pop
ljmp
lret
cld
aad
loop
mov
out
testb
mov
lret
inc
dec
testb
adc
push
sub
mov
cmp
ret
pop
into
outsl
int3
lret
insb
iret
inc
and
ds
ret
fcompl
pushf
jmp
push
pop
xchg
in
xchg
jae
cmpsl
cmp
mov
mov
inc
fcompl
stos
pop
stos
mov
jnp
dec
aas
dec
rorb
lods
arpl
lret
inc
adc
pop
jle,pt
enter
inc
mov
inc
int3
mov
xchg
jp
int
lods
or
movsl
mov
fldl
jmp
push
xchg
jbe
lgs
and
mov
insl
push
negl
adc
sbb
mov
pusha
mov
mov
sub
pandn
mov
in
cwtl
mov
dec
jg
test
push
mov
mov
and
cld
fidivrl
pop
imul
aas
shll
lret
fisttpl
pop
mov
add
and
fmul
imul
mov
stos
rolb
pop
mov
cli
xchg
clc
cmp
icebp
call
jge
std
fiadds
pop
test
and
test
xchg
in
jae
scas
mov
testl
cld
fs
xor
stos
xor
test
xchg
push
std
stos
adc
mov
fcomip
lret
mov
xor
and
jbe
cmp
xchg
sahf
mov
leave
sub
push
dec
fnstenv
jg
mov
mov
lds
scas
pop
mov
cmpsb
cmp
out
cmp
inc
jg
lret
add
mov
or
shlb
mov
cmp
int3
shrd
mov
bound
adc
sbb
mov
inc
fnsetpm(287
xchg
dec
mov
mov
mov
mov
pop
xor
loopne
mov
bound
push
inc
sbb
jl
das
bound
test
stos
add
scas
fs
sub
dec
or
roll
testb
iret
divl
pop
in
movsb
xchg
mov
sbb
mov
fbld
jne
pushl
int3
int
push
mov
mov
cmp
xlat
or
dec
push
addr16
pop
loop
andb
or
mov
bound
mulb
push
movsl
cld
adc
fwait
add
jl
mov
repnz
push
mov
cltd
and
es
mov
ret
out
sbb
daa
out
push
call
testl
jl,pn
imul
jmp
lcall
jg
push
dec
xor
fs
jns
arpl
xlat
push
mov
pop
lret
sbb
inc
push
pop
test
inc
push
cmp
sbbb
xchg
pusha
mov
sbb
mov
xchg
xchg
add
mov
ss
out
lcall
negb
mov
stos
adc
and
bound
push
push
je
ret
mov
inc
jnp
push
xchg
and
repz
sbb
mov
aas
cmp
xchg
movsl
fisttpl
jnp
dec
pop
insl
ljmp
jb
xlat
lret
movsb
xchg
xchg
popa
cs
mov
pop
add
sbb
sub
or
jge
aas
cld
ja
cmp
adc
cmp
xor
pop
add
add
movsl
lods
loop
xor
push
faddl
push
into
push
insb
inc
jg
in
sarl
insb
fwait
xchg
adc
xchg
jo
xor
fsubrs
rclb
push
aaa
clc
sub
rolb
and
stc
mov
outsb
aam
shrb
setae
sub
es
pop
mov
mov
jae
aas
mov
mov
push
es
ret
loopne
jo
mov
repz
jl
push
dec
fwait
xchg
stos
lcall
rclb
mov
adc
pop
negb
sahf
dec
sbb
cmp
dec
ret
mov
mov
fimull
adc
dec
test
loop
mov
inc
pop
pop
sub
dec
pop
gs
cmp
iret
flds
lret
and
mov
mov
mov
push
xor
les
xor
fidivrl
jae
mov
sbb
stc
out
mov
inc
push
mov
or
pop
lods
movsl
xchg
mov
movsb
sti
pop
sarb
in
xlat
pop
iret
and
cmpsl
cmc
fwait
stc
mov
cld
in
xchg
or
dec
in
xor
cmp
rcl
mov
cmp
xchg
test
dec
and
sbb
std
jo
or
add
lods
pushf
jb
jp
pop
loop
push
push
es
cld
mov
pop
mov
dec
push
jns
xchg
jle
test
sbb
mov
das
push
repnz
imul
mov
mov
lock
jne
enter
sub
pop
cmp
push
jo
push
nop
jnp
push
int
scas
jmp
pop
xchg
outsl
cmpsb
fcomps
call
int3
lock
outsl
fdivr
sub
inc
ret
adc
cmp
mov
jmp
xor
add
fmuls
and
push
jmp
jecxz
mov
jl
push
bound
xchg
or
cmp
cld
pop
out
mov
stos
mov
lea
xchg
mov
push
cmp
push
mov
ljmp
mov
mov
mov
xchg
adc
push
pop
push
mov
jle
call
dec
cli
inc
jge
pop
cwtl
fildll
stos
daa
push
mov
sub
mov
int3
shrb
sub
fnsave
lret
inc
xor
push
push
jmp
sub
test
cld
lods
pop
push
inc
cmc
xor
dec
sub
cmpb
xchg
in
std
cwtl
cli
inc
sahf
lods
ss
push
cmpsl
xor
je,pn
fcmovb
out
or
sub
lret
push
and
dec
int3
call
imul
cli
push
sti
outsl
addr16
test
pushf
aam
je
addb
adc
jns
mov
mov
mov
mov
gs
ss
imul
jmp
int3
xor
cmp
and
ret
test
xor
cmp
lcall
mov
hlt
ljmp
subl
setb
pop
mov
add
cld
add
or
int3
gs
jno
pushf
mov
cmp
and
sbb
adc
lahf
inc
mov
sbb
cwtl
stos
arpl
fstpl
repnz
outsl
jae
xchg
ret
jg
imul
adc
mov
ret
sti
sbb
xchg
leave
push
add
push
lahf
loopne
in
subl
data16
sub
idiv
out
adc
cmp
push
pop
jmp
pop
fadd
sbb
inc
cmp
lods
fbstp
mov
mov
dec
pop
xor
mov
sub
sbb
hlt
movsb
sub
jo
sub
ret
ret
aad
mov
xor
and
add
jb
stos
lods
pushf
cmp
push
cmp
test
dec
xor
lahf
scas
and
insb
out
push
cld
sub
rclb
or
arpl
add
xor
jg
std
add
mov
cmpl
dec
fildll
dec
mov
mov
push
jle
hlt
dec
push
mov
fwait
in
lret
ds
cld
push
sbb
pop
arpl
les
jecxz
pop
mov
jb
outsb
xor
push
stos
jb
push
fldenv
test
shr
clc
movsl
or
add
push
inc
imul
jno
mov
movsb
lods
lret
sub
loope
sahf
pop
pop
inc
sub
or
jmp
cli
pop
popa
stos
gs
dec
les
sub
lock
mov
pop
cmpsl
mov
lods
and
insl
shl
daa
aad
stc
mov
bound
test
fildll
mov
add
inc
jbe
fiaddl
xchg
out
xor
aaa
ret
out
jae
jp
mov
lcall
stc
cmp
pop
cmp
adc
aas
sub
ficompl
fistps
outsl
fmuls
jbe
pushf
jo
ja
popa
push
mov
mov
mov
fldt
xchg
inc
push
xchg
adc
mov
js
shrl
divb
mov
mov
xor
push
sub
jbe
inc
mull
scas
mov
and
xchg
clc
arpl
mov
out
inc
loopne
and
jmp
lods
outsb
pop
push
push
popl
iret
test
sbb
mov
and
xchg
cmp
push
push
imul
imul
push
mov
int3
sbb
xor
inc
jg
jns
mov
inc
sub
and
mov
scas
sub
dec
gs
orl
mov
adc
hlt
fs
or
fisttps
mov
pop
push
push
push
in
push
pop
xor
or
add
cmp
repnz
mov
mov
rcr
clc
or
loop
add
stc
aad
sbb
test
or
and
hlt
pop
or
aaa
and
lret
call
lahf
and
sub
daa
cmp
jg
push
push
xchg
jns
push
rcrb
shll
xchg
mov
lods
icebp
jmp
loop
test
dec
adcb
dec
inc
jno
xor
mov
inc
pop
mov
fmul
cmp
movsl
jns
in
sbb
lods
push
dec
test
jge
fs
or
mov
clc
ja
in
mov
pushf
test
test
and
and
sub
in
subl
or
scas
int3
mov
out
popa
pop
in
mov
loopne
or
jp
cs
push
in
in
imul
inc
jae
fisubl
mov
inc
xchg
jmp
inc
xchg
scas
push
adc
notl
daa
mov
xchg
insl
mov
cmp
not
nop
test
jbe
aas
mov
pop
popa
mov
gs
stos
jg
mov
ja
pop
or
enter
xchg
push
add
pop
mov
arpl
cmp
and
dec
mov
addb
movb
fisubrs
movsb
add
or
mov
cmp
into
sbb
jle
push
call
xchg
push
push
xchg
jae
xchg
mov
sbb
out
imul
jno
jg
arpl
and
and
stos
adc
popf
shr
rolb
xchg
xor
shll
ja
mov
and
hlt
adc
pop
and
ljmp
fadds
stc
out
scas
sub
icebp
cmpsl
rcll
mov
lea
adc
addr16
push
jle
bound
out
aad
into
mov
mov
daa
inc
ds
icebp
jo
or
dec
jle
jp
ljmp
fadds
cltd
pushf
cld
pop
jp
es
mov
or
cmp
dec
insl
inc
jbe
lds
inc
inc
dec
mov
hlt
and
push
movsl
stos
mov
dec
sub
and
nop
jae
gs
dec
js
xchg
sbb
imul
xor
sbbb
bound
insl
push
push
jle
mov
push
sub
xor
leave
add
lret
sub
pushf
add
sub
mov
jmp
pushf
dec
sub
cs
dec
mov
mov
fnstsw
inc
mov
rclb
or
mov
mov
inc
int3
pop
sbb
in
shr
mov
incl
fsubrs
cld
xchg
les
iret
ficomps
add
add
loope
cmp
mov
cwtl
adc
push
or
add
jecxz
cmp
cs
mov
adc
jmp
bound
scas
js
add
mov
scas
ret
shrl
aad
push
fisubrl
hlt
add
xchg
and
in
push
mov
lret
mov
test
shl
dec
pop
push
test
imul
cmp
pop
lods
jnp
rcl
mov
mov
push
call
std
inc
add
rorb
pop
xchg
test
dec
les
aam
or
cmp
pop
jne
lret
insl
in
in
popf
vpmovmskb
cli
mov
pop
mov
test
je
and
mov
xor
xchg
mov
ret
jg
out
enter
test
subl
out
popl
lock
push
imul
fnstenv
xlat
mov
xor
push
cmc
xor
je
and
jns
jns
jecxz
xchg
dec
and
movsl
sub
aas
bound
cmpb
xor
xchg
cwtl
pop
xor
gs
adc
pushf
loop
dec
dec
imul
ds
movsl
int
xor
xchg
ficomps
fildll
mov
or
daa
pop
ficompl
pop
jmp
pop
cmpsl
mov
xchg
pop
xor
popf
adc
icebp
xor
and
dec
inc
push
pop
ss
sti
dec
movsb
sub
loopne
jns
mov
pop
pop
inc
or
sub
mov
or
mov
cmpsb
xchg
sub
cmp
scas
mov
out
xor
mov
xchg
imul
not
mov
push
cmp
test
scas
cmp
xor
xor
sbb
lcall
mov
stos
adc
or
notl
jno
bnd
std
dec
fs
cs
cmpsl
divl
push
mov
or
jo
sub
dec
xor
inc
mov
push
dec
in
push
jecxz
faddp
mov
mov
xchg
xchg
aam
iretw
into
and
mov
jle
dec
fstps
inc
dec
in
push
mov
pop
cli
loop
sub
cmp
inc
jmp
pop
cmc
subb
loop
dec
xchg
adc
rcll
adc
sbb
dec
add
jnp
popf
inc
ljmp
rclb
inc
xor
out
call
icebp
cld
orl
bound
or
xor
mov
mov
stos
mov
aas
scas
jmp
xchg
mov
fsts
sbb
ficoml
fcomps
xchg
inc
pop
loopne
shll
xor
inc
addr16
sbb
rclb
test
movsl
pop
or
scas
sbb
jge
mov
dec
lods
inc
sbb
iret
in
cmp
dec
adc
stos
mov
loopne
dec
in
xchg
or
add
jae
mov
mov
leave
fs
add
lds
mov
clc
inc
ret
ret
sahf
dec
fdivl
int
xchg
mov
rorl
adc
pop
outsl
sbb
sub
pop
jle
inc
inc
fstl
cmp
adc
add
pop
jae
mov
or
cmp
adcl
test
pushl
fst
cmpsl
push
push
dec
rcrb
jmp
xor
ja
iret
scas
adc
shr
test
cmpsb
lret
enter
insl
mov
sahf
rolb
jecxz
add
test
hlt
repz
lret
cmpsl
ds
pop
or
std
bound
or
movsl
cwtl
and
or
jne
incl
mov
mov
and
repnz
nop
cld
cmpsl
insl
mov
sarb
fimuls
xlat
jg
push
dec
aam
int3
push
lret
into
mov
pop
jo
int3
jl
or
fiadds
mov
push
or
pop
pushf
xchg
inc
ds
push
in
dec
repnz
push
cld
jp
and
dec
aad
out
scas
in
push
in
dec
sub
rcl
pop
cmp
mov
xorl
mov
push
mov
cli
stc
adc
mov
cld
repz
data16
lods
cmc
out
xor
mov
xchg
xor
jnp
loope
xor
stos
jns
ljmp
push
out
stos
jae,pt
dec
rsm
dec
mov
push
push
rorb
push
cmp
rcll
mov
sub
xchg
pusha
sub
enter
cli
stos
jbe
andb
insl
sahf
add
mov
xlat
xor
lret
jp
jnp
cld
mov
popl
ss
or
jb
push
repz
push
xor
or
pop
insl
jp
inc
xchg
not
fs
aaa
jp
cltd
pop
test
xor
lock
mov
scas
lret
mov
insl
lcall
in
cmp
push
clc
sbb
jno
xor
popf
adc
xchg
adc
ret
lret
jb
xchg
rcr
add
bound
xor
xchg
dec
test
and
pushf
jmp
push
mov
xchg
fdiv
sub
jno
shlb
mov
xchg
fdivl
frstor
imul
gs
sub
adc
or
or
mov
test
repz
cmp
inc
jno
ret
jno
xchg
cmpsb
and
and
clc
xchg
nop
adc
cmp
mov
lcall
cltd
lret
xchg
inc
jg
mov
daa
adc
sbb
cmp
nop
jo
frstor
cmpsl
or
fstl
out
add
sub
movsl
shl
inc
outsb
jmp
lret
imul
hlt
js
mov
js
das
mov
lahf
out
inc
sbb
inc
xchg
push
insb
inc
bound
xchg
or
ljmp
or
inc
sbb
jns
aad
jp
xchg
push
cli
sbb
ja
mov
and
lock
cli
cli
push
push
adc
mov
and
push
leave
jmp
movb
mov
mov
mov
popfw
sbb
pop
xchg
lahf
cmp
xor
sbb
lret
cmc
loop
fucomip
push
sti
pop
adc
je
mov
inc
push
ljmp
cmp
lahf
mov
push
mov
push
aas
and
push
xchg
sub
aad
mov
pusha
bound
outsl
inc
push
pusha
push
out
mov
or
jnp
andl
lahf
lahf
or
xchg
fwait
or
lock
in
sbb
inc
int
mov
scas
into
and
pop
in
loopne
pop
insl
pop
mov
push
sub
data16
push
cld
in
pop
ja
daa
cmp
add
sti
dec
les
jne
pop
les
je
shrb
rcll
push
cmp
cmp
sbb
dec
mov
mov
sbb
mov
cli
dec
pop
scas
lret
sbb
mov
icebp
into
or
jge
test
arpl
jo
ljmp
lods
sbb
push
and
outsl
mov
out
lret
sub
in
or
nop
int3
xchg
inc
sbb
fxtract
push
jmp
jl,pt
shrl
enter
les
xchg
inc
and
pusha
filds
aaa
adc
sahf
mov
mov
inc
push
movl
mov
loop
push
sub
xchg
not
jmp
aaa
es
scas
xor
imul
mov
divb
clc
push
test
xchg
jle
mov
cmp
into
sub
sti
js
test
jmp
mov
dec
fistpl
adc
in
inc
sub
dec
js
fmull
mov
mov
jg
in
xchg
nop
aam
lods
aas
fwait
test
cmp
outsl
lcall
jne
out
sbb
adc
adc
andb
sub
xor
and
movsb
inc
ficoml
xor
inc
pop
pop
test
dec
es
jns
mov
push
add
sete
push
sarb
mov
adc
xchg
fists
push
hlt
sti
mov
shl
jmp
jmp
lods
paddusw
js
aas
or
jbe
lods
jp
or
or
fabs
fs
xchg
add
scas
outsb
inc
xor
imul
out
adc
cmp
mov
mov
in
jle
mov
call
fisttps
movsl
sbb
popa
add
es
stc
or
out
fucomp
js
xor
sbb
in
add
xchg
jne
mov
mov
daa
xlat
cmp
mov
mov
or
scas
jbe
push
lahf
add
add
pop
clc
in
mov
test
int
aaa
fimuls
in
mov
cmc
pop
sbb
jb
subl
adc
mov
daa
pop
sbb
hlt
lahf
sbb
iret
and
mov
bound
jns
jb
aad
cwtl
push
cwtl
cmc
cmpsb
flds
inc
loop
xchg
xor
jecxz
in
sbb
mov
jnp
add
jne
orl
fiaddl
repz
mov
push
aam
es
pop
in
outsb
adc
xchg
adc
jnp
xchg
int3
lea
jg
sbb
bound
incb
popa
stc
ja
mov
test
inc
cltd
xor
push
push
inc
mov
scas
shlb
sub
cmp
outsb
aas
outsl
adc
cmpsl
ret
cmpsb
je
push
xor
int3
sbb
aas
add
in
xor
fldl
lods
ret
inc
rolb
gs
movsb
mov
mov
testb
add
and
lret
fdivr
es
pop
pop
jbe
fidivs
insl
mov
ss
into
or
sbb
loopne
mov
cli
add
push
inc
scas
push
das
scas
cmp
cmp
stos
in
aam
fs
call
cmc
xchg
fimull
mov
fisubs
ljmp
mov
test
sub
imul
testl
inc
mov
mov
fidivrl
aaa
xchg
sbb
adc
adc
fildl
dec
inc
xor
add
xor
jp
in
pop
lods
lret
jnp
jmp
sub
push
sbbl
sarb
mov
pop
dec
mov
sub
cmpsb
add
push
mov
adc
rcr
stos
jns
ljmp
out
sub
pop
cmp
and
xor
jg
daa
adc
sbb
ja
jno
mov
and
mov
fcmovnbe
adc
fs
jb
mov
test
xchg
mov
loop
jecxz
jne
lcall
adc
pop
test
cltd
aad
mov
pop
call
xor
jo
outsl
or
cmp
jg
mov
or
mov
lahf
ss
lret
and
inc
push
aam
fldl
inc
add
or
mov
mov
sub
xchg
lcall
jb
jbe
in
jg
dec
push
or
fs
in
and
sahf
adc
dec
bound
dec
add
xor
push
lods
pop
push
cli
push
pop
daa
pop
fcmovne
cld
ret
xchg
pop
scas
sbb
hlt
inc
dec
push
mov
out
std
sub
daa
mov
add
roll
xor
sub
sub
jne
imul
fwait
and
cmp
add
or
mov
add
add
xchg
adc
addb
jno
jb
jne
mov
lods
push
jl
push
jne
xor
test
dec
bound
enter
pop
out
mov
sbb
pop
sbbl
sbb
in
addl
cmp
and
jge
jp
push
dec
push
inc
fwait
test
sub
and
sbb
cmp
int3
mov
aam
xchg
cmpsb
sub
fwait
stos
xchg
fldt
rcl
add
push
sti
jb
jmp
jae
sbb
loopne
lods
sbbl
dec
or
ret
dec
mov
sbbb
fstpl
xor
cmp
das
sarb
sub
mov
inc
stc
and
lcall
aam
insb
es
es
fbld
mov
cs
jnp
mov
dec
xor
push
scas
mov
movsb
push
cmp
aas
mov
repnz
out
jbe
jg
repnz
dec
daa
in
imul
mov
imul
jge
insl
or
adc
and
les
sub
fsubr
scas
sahf
negb
movsb
adc
gs
and
and
rol
jno
aas
in
insl
icebp
test
jbe
push
test
out
in
or
push
cmp
repz
mov
ss
xor
pop
jmp
xor
mov
mov
js
icebp
jecxz
in
mov
popf
and
aam
in
sahf
mov
bound
in
mov
cmp
sbb
jmp
sahf
repnz
sbb
jmp
mov
and
jmp
aam
shrb
pop
test
xchg
aaa
mov
lcall
xor
clc
js
lods
mov
mov
or
add
adcl
cmp
mov
icebp
in
inc
push
data16
fstpt
push
jmp
xor
cltd
call
sbb
inc
inc
mov
push
test
xor
dec
sbb
fs
int
pop
sbb
add
movsl
inc
ljmp
lcall
jae
jmp
jecxz
vpmuludq
fildll
aas
out
enter
add
fcomi
std
out
mov
cmp
imul
sbb
lret
dec
out
fidivs
jbe
and
push
in
les
ret
mov
xchg
icebp
xchg
fwait
sbb
xor
cmp
pop
xor
imul
mov
bound
out
inc
in
movsb
jns
lods
mov
mov
jo
mov
add
jb,pt
lret
or
icebp
popf
sbb
in
adc
ljmp
sub
jo
jns
mov
dec
cmp
push
sub
loope
adc
or
jne
fnstcw
shll
push
or
sbb
sbb
mov
jne
cmp
xchg
shr
and
call
dec
jbe
mov
sarb
subl
xor
and
lock
adc
cmpsl
stc
js
filds
xlat
jae
xchg
dec
inc
push
mov
out
hlt
lcall
ret
cmp
pushf
orb
xor
push
out
inc
and
lock
pop
lret
inc
adc
insl
jno
or
jmp
outsb
sbb
out
shrb
ljmp
fistpll
jns
fs
rcrb
test
xor
pushl
jge
out
and
add
mov
xlat
fldl
test
lret
mov
and
adc
adc
lock
jb
loopne
loopne
sbb
mov
add
mov
add
imul
les
test
mov
mov
cli
test
cmc
enter
sub
mov
mov
lahf
xchg
add
bound
jnp
sbb
mov
xchg
cmpb
mov
jno
inc
fnsave
sub
lahf
icebp
mov
cli
cmp
jmp
inc
ja
and
mov
and
jb
cwtl
fcmovne
cmp
cmp
pushf
xchg
mov
test
push
popf
pop
pop
mov
stos
pop
mov
je
push
loop
loop
movsb
inc
dec
mov
push
cld
mov
xlat
jno
ret
repz
and
lea
pushf
xlat
ja
add
fildll
cltd
add
pop
mov
mov
imul
sbb
push
push
dec
or
xchg
xchg
je
push
nop
test
in
sub
and
in
ret
into
mov
faddp
sbb
cmp
test
xchg
stos
jp
test
ret
add
push
clc
outsb
adc
outsb
xchg
sbb
mov
dec
pop
lea
arpl
sub
mov
repnz
in
sbb
shrb
std
adc
jp
mov
aad
insb
xor
mov
or
inc
push
pop
mov
mov
nop
jo
push
jns
fldt
dec
mov
pop
sbb
daa
je
ficoml
dec
jo
cmc
sbb
push
mov
pop
sarl
loopne
jl
std
and
loopne
xorl
sbb
jnp
and
dec
popa
add
sahf
int
aad
out
sbb
cmp
cmp
pop
jnp
lea
add
inc
rolb
or
popf
add
fldt
add
decl
jmp
outsl
sbb
test
xchg
sub
adc
lods
clc
test
xchg
xchg
outsl
mov
xor
dec
or
daa
cmpsl
ljmp
fdivrl
test
pop
test
mov
or
add
lods
push
adc
dec
mov
inc
out
inc
pop
ja
jae
ljmp
push
test
mov
adc
xlat
mov
sti
xor
loope
cmpsb
scas
or
inc
cwtl
roll
in
mov
mov
pop
adc
mov
pop
xor
mov
dec
dec
mov
je
cs
xchg
out
mov
ss
outsl
cltd
icebp
mov
shlb
je
pop
inc
inc
cmovle
xor
in
fwait
shl
adc
leave
cmp
jp
cmpsl
sub
xchg
push
mov
int3
into
lods
cmc
in
mov
das
push
or
sbb
divl
cs
adc
pop
sbb
int3
ljmp
je
lds
hlt
mov
and
adc
mov
out
lret
jne
jno
sub
jp
xchg
mov
fdivrp
popa
xchg
cmp
cmpsl
les
cld
sub
xor
mov
push
mov
adc
mov
ficomps
std
add
xor
inc
mov
push
pop
lods
sub
test
loop
outsb
insb
adcb
pop
ljmp
ret
rcrl
mov
xchg
imul
loop
mull
mov
stos
add
outsl
mov
ljmp
sbb
xchg
fcomps
out
and
shll
stc
jmp
out
es
fucomip
cmp
out
sbb
nop
mov
fiaddl
push
sahf
fstps
pop
cld
popf
mov
jle
mov
dec
movsl
rcrl
xchg
push
push
push
inc
sub
mov
jno
sub
pop
xor
xchg
inc
cmp
pop
jne
mov
mov
add
call
push
jne
inc
vhsubpd
jbe
aam
add
mov
imul
fnsave
add
dec
cld
lods
cmpsl
jge
xor
mov
out
into
jae
mov
int3
arpl
lea
pop
enter
add
xchg
mov
mov
int3
stc
ret
in
les
ret
cmp
pop
and
cs
xchg
jmp
mov
or
or
cmp
sarb
cmp
push
popf
adc
adc
xchg
lcall
pop
xor
loop
add
sub
or
add
lcall
sahf
sub
jecxz
mov
in
push
push
aaa
ret
sbb
out
dec
pop
cwtl
aam
int3
and
sbb
add
push
divl
adc
mov
rcrl
lods
movl
jb
push
or
cmpsb
cltd
lds
cltd
pop
popa
cmp
je
mov
leave
push
adc
movsl
push
adc
mov
outsb
jno
sub
outsb
push
scas
pusha
mov
jne
es
mov
and
ljmp
int
add
les
xor
out
sbb
sub
insl
mov
cltd
push
mov
add
imul
sub
jne
push
imul
fwait
mov
jae
adc
out
jnp
enter
xor
push
sbb
jno
or
adc
push
push
xor
pusha
icebp
inc
out
mov
inc
pop
fisubl
lods
jb
and
jo
pop
das
xchg
shlb
xor
hlt
loopne
lcall
dec
push
outsl
add
aam
xor
and
lahf
adc
into
stos
arpl
adc
push
adc
push
or
stos
movsl
lret
leave
ret
test
jnp
fldlg2
cmpxchg8b
jae
mov
nop
xor
adc
push
nop
sbb
enter
aaa
adc
mov
add
pop
loope
fadd
daa
cmp
lds
mov
mov
adc
sub
or
in
dec
fisubs
daa
inc
push
sbb
daa
pop
fadds
mov
push
push
cmp
and
sbb
pop
adc
add
jecxz
gs
fmulp
movsb
aad
sub
aad
mov
arpl
dec
repnz
xor
mov
sbb
xchg
jae
and
call
xchg
push
mov
jmp
xchg
sub
jl
xor
dec
mov
dec
xchg
mov
mov
popf
lcall
and
lds
jge
adc
mov
sbb
out
dec
pop
xchg
xchg
adc
vmaxps
lret
in
mov
insl
push
pop
add
into
and
daa
sub
xor
dec
cmpl
cmpsb
xchg
outsb
test
imul
mov
andl
and
mov
iret
loopne
aas
push
xchg
fsubl
inc
cmp
push
jecxz
testb
jecxz
stc
jb
push
add
cmpsl
inc
cltd
fwait
jbe
lcall
int3
jecxz
fldl
pop
repnz
and
add
sbb
sub
sahf
xchg
inc
rcll
mov
jno
rolb
das
lret
mov
dec
flds
lods
sbb
outsl
in
out
cmp
push
in
add
jl
sarb
call
and
jp
in
jg
prefetcht1
pop
jnp,pn
jns
movsl
xchg
xchg
jmp
jecxz
test
mov
js
pop
call
jl
mov
adc
xchg
daa
fstps
xchg
dec
lcall
sub
mov
in
cs
xor
push
clc
xchg
ljmp
cmpsl
mov
stos
int3
pop
add
sub
push
out
insb
sahf
ljmp
mov
sbb
xor
or
stc
jl
or
sub
jle
mov
subl
xor
lret
cmpl
hlt
jle
mov
mov
sbb
mov
imul
cmpsl
xor
pop
idivl
push
movsb
sahf
out
pop
je
sti
out
fiadds
push
jg
ret
inc
insl
mov
push
aad
arpl
imull
scas
inc
jne
lret
test
loopne
and
icebp
or
out
adc
cmc
and
inc
lret
enter
and
insb
or
imul
test
mov
pop
rcrb
ret
jne
insb
lahf
mov
cmp
mov
jne
adc
cmpsb
mov
fldcw
inc
push
out
mov
mov
test
lret
sahf
sti
fwait
dec
cmpsl
xchg
add
and
iret
mov
cmp
movsl
sbb
insb
icebp
icebp
sbb
mov
xchg
in
sub
xchg
xchg
out
insl
outsl
ja
inc
push
and
lea
and
sub
or
mov
aaa
test
sub
mov
es
or
jne
enter
xchg
and
cwtl
xchg
xchg
pusha
and
inc
insl
or
inc
les
ret
aam
lret
lods
out
push
orb
inc
push
cwtl
jno
mov
arpl
test
in
repz
mov
xlat
dec
mov
sbb
cwtl
jecxz
xlat
vpor
js
mov
or
push
jg
and
fnstcw
rclb
outsl
gs
mov
mov
inc
inc
loopne
fistl
jnp
cmp
enter
dec
mov
lock
arpl
sub
aas
in
dec
dec
inc
adc
sar
call
cmc
js
push
gs
sbb
pushf
mov
adc
lcall
divl
jl
xchg
and
fs
add
fistpll
loopne
loope
sbb
mov
cmpsl
mov
sahf
shrl
sti
or
mov
push
pop
jl
cs
stc
add
xchg
push
lret
dec
mov
xchg
dec
aas
or
adc
mov
sbb
inc
stos
add
cli
mov
cld
ss
xchg
imul
push
mov
inc
in
cmc
fldcw
push
notl
jns
loopne
in
inc
xor
mov
rorl
rcll
mov
je
xchg
ficoms
sub
lds
faddl
ret
inc
pusha
xor
inc
and
jne
adc
pop
daa
xor
ljmp
stos
xchg
push
cltd
pop
mov
rorb
movl
sbb
jo
add
and
inc
lds
cli
pop
jge
sahf
jno
jg
mov
clc
mov
and
faddp
orb
jl
xor
sub
rcrb
jp
flds
jae
mov
les
or
inc
gs
mov
rclb
pusha
add
fistps
pop
inc
add
push
xor
mov
fsub
out
jnp
test
mov
pop
xchg
inc
sarb
ret
icebp
and
jae
insl
int3
and
mov
int
js
nop
inc
sub
lock
call
mov
les
push
sbb
inc
push
vcmpsd
sub
jecxz
outsb
testl
mov
ja
cmp
lods
fdecstp
in
xor
popf
lods
xlat
lret
stos
out
pop
mov
add
pop
dec
push
and
inc
mov
mov
xchg
lcall
lret
mov
xchg
mov
stos
out
addl
or
pop
out
push
loop
pop
and
lret
in
mov
xchg
dec
push
or
adc
dec
and
insl
xor
inc
insl
inc
inc
push
dec
mov
shll
ljmp
sbbb
xchg
jecxz
push
xchg
cmpl
cwtl
xchg
dec
mov
lahf
dec
jmp
mov
repnz
out
pop
rcr
pop
adc
lea
std
aaa
icebp
and
es
cltd
xchg
mov
sbb
jle
rolb
hlt
and
cmp
pop
stos
cmp
popf
iret
in
int
mov
mov
out
js
and
lock
ljmp
cld
rcrl
call
fsubr
cmpsl
daa
sarl
imul
jle
faddl
outsl
or
push
sti
mov
mov
push
adc
ror
ret
dec
jg
jge
mov
push
rcll
cs
cwtl
ljmp
lcall
sub
lds
clc
push
leave
dec
rcrb
and
pop
das
rorb
dec
pop
in
add
mov
nop
and
decl
add
or
lret
in
das
push
ja
lea
cwtl
mulb
cltd
jge
xor
in
int3
loope
mov
and
fistpll
and
out
std
pushf
subl
frstor
dec
std
dec
mov
in
xchg
add
dec
pop
push
xor
rolb
int
dec
mov
or
ret
sub
pop
mov
xchg
mov
jnp
mov
adc
mov
add
sbb
mov
push
sahf
mov
inc
mov
ret
add
mov
push
push
inc
stc
jno
jns
rorb
fcoms
ret
dec
stc
ret
sahf
adc
jns
cmp
add
mov
inc
inc
pop
pop
test
out
xor
scas
mov
ret
cli
lds
dec
je
ror
inc
sub
jnp
sbb
sub
push
mov
mov
movsb
sub
cltd
jne
mov
ds
push
cmp
mov
jae
sbb
lea
jno
nop
push
xor
sub
data16
jmp
pop
aaa
inc
popf
xor
pop
testb
inc
arpl
xor
push
adc
lahf
imul
or
mov
test
movsl
out
rcll
mov
movsb
mov
xchg
pop
push
mov
or
faddp
dec
lahf
push
shrb
sarb
lret
int
inc
push
push
xchg
cmpsl
pop
loope
ss
xchg
jno
push
aaa
pop
mov
and
scas
inc
dec
pusha
into
and
enter
cmpsl
or
mov
test
std
out
shlb
out
xor
in
inc
dec
sub
fcomp
lds
dec
inc
sahf
adc
fnstcw
loope
or
fldl
add
sbb
sbb
xchg
out
push
mov
test
push
outsl
xor
cs
dec
repz
orb
stos
cli
in
out
into
sbb
addr16
popf
push
push
sub
push
mov
xor
loopne
mov
xor
jae
add
mov
adc
iret
add
pop
bound
jo
push
jne
and
lahf
repnz
add
xor
dec
push
xor
cltd
cmpsb
sbb
lcall
mov
and
lret
out
or
je
stos
outsb
bound
cmp
stos
pop
and
fistpl
rcr
inc
bound
and
adc
addr16
ljmp
ret
xor
test
or
or
out
iret
xor
mov
push
movsl
jmp
push
lahf
mov
gs
and
xorb
xor
pop
sub
ja
repz
xor
inc
xchg
leave
ss
pop
jmp
dec
mov
push
mov
ret
jmp
inc
adcb
pop
pushf
push
out
insl
addb
test
pop
pop
imul
aad
xchg
popa
and
inc
fists
popa
cmp
lahf
cmpsl
iret
mov
shlb
rcrl
or
fnstcw
or
shl
in
jge
mov
ss
push
mov
js
loop
lods
shrl
sti
in
sbb
fcom
push
sub
pop
mov
gs
lcall
in
xchg
lods
loopne
lret
ret
sbb
mov
sarb
jmp
aaa
jo
scas
sub
icebp
mov
movsl
popa
and
cmc
sub
repz
and
in
outsl
sbb
mov
loope
pop
mov
sub
add
mov
pop
sahf
jno
and
push
dec
cmc
andb
aaa
jp
inc
pop
mov
push
pop
xchg
mov
sbb
je
push
lahf
out
in
loop
xlat
in
hlt
cmp
nop
xor
aad
cld
xchg
xchg
sbbl
int3
push
mov
push
jmp
dec
int
cmp
cltd
dec
sub
stos
jo
les
ds
fistps
loopne
enter
adc
inc
mov
push
les
and
sub
outsb
push
popa
daa
xchg
sub
lock
stos
outsl
in
push
ret
into
adc
dec
add
adc
movsl
jne
enter
or
fs
inc
pop
pop
pop
push
push
clc
bound
mov
push
std
aad
dec
dec
aam
pop
das
xor
or
push
fistps
push
ficoms
outsb
xlat
cmp
repnz
add
lock
sub
sbb
fstp
dec
gs
inc
push
shrl
out
orb
scas
push
aas
jmp
imulb
andb
fstl
sub
pop
cs
jl
add
repnz
bound
xchg
sub
inc
mov
or
mov
lret
jle
sub
andl
dec
popf
lcall
andl
dec
in
imul
push
cmpsl
jmp
push
add
pop
cld
into
adc
bound
mov
negb
add
pop
roll
sbb
imul
ss
push
xor
fisttpll
inc
cld
aas
add
pop
xchg
jge
jl
jl
je
popa
and
shlb
enter
fwait
mov
xchg
mov
push
mov
in
out
gs
mov
mov
xchg
outsl
xchg
sbb
pop
fcomi
cmp
push
jbe
mov
and
movsb
add
or
mov
cli
or
push
je
insb
mov
rcrl
dec
pop
mov
mov
sub
into
stos
scas
int3
das
movsb
sbb
cmc
pop
mov
sbb
loop
push
int3
fld1
push
xchg
call
lcall
mov
out
push
or
insl
and
adc
mov
sahf
into
cld
sbb
pop
ficompl
pop
outsl
mov
leave
test
cld
mov
cmp
aad
xlat
pop
jecxz
pop
test
xchg
imul
dec
cmc
stos
mov
outsl
mov
pusha
push
arpl
dec
xchg
ljmp
test
mov
pushf
je
rcll
mov
daa
mov
ds
or
pushf
xlat
jo
fistpl
or
inc
push
jbe
mov
or
repnz
ljmp
pop
imul
cmp
out
fldt
clc
xlat
and
sbb
es
pop
inc
data16
or
dec
push
adc
lods
mov
subl
xor
cs
lret
dec
adc
lret
test
icebp
mov
fcomp
sahf
je
jns
jo
cwtl
sub
repnz
jle
and
or
negl
rolb
leave
mov
adc
outsb
xor
mov
in
mov
or
adcl
shlb
xchg
or
xor
cltd
hlt
or
insl
mov
insb
push
mov
inc
xlat
cmp
mov
or
mov
ja
ret
int3
or
fmull
das
xlat
into
loopne
lret
cmp
cmpsb
xor
in
sahf
sub
bound
add
popa
push
jl
cmpsl
pop
pop
jns
stos
adc
and
fcompl
loope
mov
aas
sub
gs
in
jo
adc
xor
daa
scas
pop
mov
mov
hlt
in
jecxz
rorl
adc
pop
mov
mov
ljmp
gs
add
xchg
sbb
cmpsl
aas
lock
jl
mov
and
adc
or
adcb
mov
ret
lds
jecxz
in
xchg
jecxz
cmp
or
xchg
movb
lret
add
sub
fwait
les
dec
xchg
scas
mov
dec
mov
jo
dec
push
sti
or
mov
js
fmul
out
xchg
push
imul
dec
repz
insl
mov
adc
test
aaa
out
insb
jge
repnz
fdivl
push
iret
cmp
fs
mov
mov
pop
or
aam
pop
loop
idivb
pop
in
xor
test
add
out
scas
jg
das
into
push
daa
ljmp
hlt
test
dec
dec
subl
aaa
pop
inc
in
or
mov
pushf
sub
scas
jge
fistl
dec
ficomps
mov
sbb
in
nop
mov
imul
shl
adc
out
cmp
ret
cmp
and
and
aam
push
iret
les
sbbl
lea
mov
mov
dec
pop
push
jne
cmpsb
insl
cmp
in
push
push
jl
sahf
jne
jo
lret
sub
cmp
test
add
mov
nop
push
fistl
lods
mov
sbb
sbb
mov
inc
and
xchg
jbe
cmpl
and
lahf
dec
scas
push
or
pop
lea
movsb
push
cltd
orl
and
mov
ljmp
or
jb
into
xchg
nop
add
fsubrs
das
push
nop
sub
add
add
mov
or
push
int
pop
pop
inc
cld
cs
dec
jg
or
xlat
xorb
jne
shrb
sub
mov
push
mov
push
rcrl
mov
cmpsl
in
cmp
cli
adc
sub
jns
mov
pop
or
pop
into
int3
mov
pusha
dec
dec
rcll
and
jp
sub
daa
fdivs
fwait
stc
outsb
sbb
push
adc
data16
jno
pop
rclb
nop
xor
adc
and
or
inc
sub
mov
ja
jp
loop
mov
ret
jge
dec
mov
inc
ret
mov
sub
nop
divl
xchg
inc
imul
popl
popf
jbe
pop
jecxz
fs
jo
mov
xor
mov
enter
or
sahf
aad
sub
dec
in
sbb
cmp
pop
dec
test
mov
add
jmp
push
rcr
js
outsb
shl
ret
push
push
inc
pop
pop
or
stos
jns
xor
cli
enter
gs
dec
xchg
inc
int3
cmp
pop
mov
cmpsl
cli
jbe
fidivrl
das
cmp
and
mov
sete
lret
cmp
cmp
dec
mov
fisubl
call
imul
xchg
mov
push
test
cmpsb
pop
cmpsb
xchg
jg
testb
push
les
out
adc
mov
aaa
add
sub
clc
ljmp
pop
add
dec
xchg
or
jge
aaa
jo
arpl
cmpb
jle
mov
push
mov
push
inc
data16
sub
mov
xchg
adc
cmpsl
or
mov
rcrb
test
dec
jecxz
jbe
pusha
leave
mov
sbb
pop
mov
inc
xor
mov
cs
inc
mov
arpl
and
mov
pop
jns
clc
cwtl
loopne
dec
fwait
cmpsb
jmp
add
pop
inc
add
xor
dec
lods
dec
lods
dec
and
add
iret
mov
scas
jnp
xor
xchg
xor
outsl
in
pop
clc
popa
and
cmp
aam
mov
popa
and
mov
inc
aad
test
push
sbb
enter
dec
imul
push
xchg
bound
mov
jae
sbb
pop
rorl
sbb
lcall
rcl
imul
or
mov
cli
add
loop
mov
out
rorl
add
testl
adc
sub
incb
adc
jne
pop
test
pop
jbe
cmp
lods
xor
pop
sti
shll
push
mov
test
stos
out
jo
xchg
adc
push
stos
pop
roll
fisttpl
hlt
imul
popa
dec
xchg
push
mov
mov
in
sbb
incl
cmp
pop
push
rolb
push
arpl
xor
test
push
mov
lods
pop
and
cmpsb
xchg
ss
add
xchg
aaa
js
arpl
sub
mov
lea
mov
lods
ds
clc
adc
sub
icebp
arpl
jge
int3
adc
inc
push
cmp
cltd
jbe
out
xchg
pop
ja
inc
push
push
sahf
jo
cmp
das
movsl
adc
or
lock
inc
outsl
jnp
loopne
sbb
pop
adc
mov
jns
mov
aaa
in
daa
in
stos
mov
aaa
xchg
hlt
data16
inc
arpl
mov
insl
mov
lods
mov
and
mov
outsb
mov
pushf
and
xchg
neg
push
or
jl
test
lock
mull
aad
dec
dec
sarl
movsl
mov
and
scas
cs
mov
inc
mov
fsubl
jg
add
xchg
mov
sub
in
cltd
jae
std
adc
clc
xor
mov
sub
push
xchg
int
imul
mov
mov
sahf
xchg
inc
pop
lds
sub
ret
push
pop
jbe
out
push
adc
jp
cs
fdivrl
inc
outsb
push
mov
cmp
jg
cmp
pop
testb
and
fldcw
mull
adc
pop
pushf
cs
mov
pop
dec
loopne
repz
adc
icebp
lea
mov
mov
test
pop
dec
mov
test
mov
in
jnp
or
cmp
scas
neg
call
or
hlt
mov
push
in
sbb
push
adc
in
clc
xchg
dec
dec
add
in
std
dec
cmpsl
mov
mov
inc
xor
push
inc
cli
push
xor
mov
pop
push
jge
ficompl
repz
xchg
fisubrl
out
jmp
rorl
inc
imul
pop
loope
dec
adc
inc
test
xlat
cmc
push
mov
les
sbb
mov
cmp
push
jmp
jno
cmp
jecxz
adc
lock
push
test
pop
roll
push
lret
leave
and
repz
jmp
jp
inc
test
jbe
jb
dec
xor
outsb
mov
push
xchg
cmovnp
loop
adc
inc
and
scas
and
push
pop
mulb
adc
lds
fsubl
cmpsb
out
loope
push
imul
adc
jbe
cs
iret
lgs
jno
mov
dec
push
fwait
movsb
bound
mov
mov
inc
push
xchg
lods
inc
movsl
hlt
mov
imul
push
sub
add
xor
je
int
xchg
inc
cmp
fimull
mov
gs
mov
inc
inc
int3
loope
xchg
movsl
out
dec
leave
test
and
mov
sahf
jmp
adc
lret
stc
stc
repz
sub
fwait
adc
movsb
or
cmc
xchg
sbb
jnp
stc
inc
jg
fidivl
pop
mov
and
les
dec
stos
je
notb
rolb
fistps
xchg
icebp
xchg
push
sub
and
movsl
out
insb
pop
adc
jae
inc
daa
pop
pop
in
cwtl
mov
aaa
in
lods
rcrb
xchg
js
in
or
sbb
insl
jp
pop
mov
sbb
ljmp
jge
jl
scas
std
insb
sbb
rcrl
xchg
dec
cmc
lret
mul
xor
ss
outsb
mov
imul
aad
or
leave
leave
ja
subl
hlt
mov
aam
sbb
in
jnp
ss
icebp
clc
push
aas
imul
xchg
imul
mulb
or
aas
addr16
repz
mov
bswap
dec
dec
imul
xor
lods
sbb
add
xchg
enter
adc
dec
jo
dec
xchg
fucomi
hlt
xchg
cli
mov
and
in
icebp
mov
andb
add
xchg
push
outsb
cld
outsb
aaa
fcomp
mov
lods
jmp
pop
gs
dec
in
test
xchg
sar
pop
lret
stc
xchg
adc
aaa
sti
adc
dec
mov
cmpsb
xor
inc
sahf
push
and
addr16
mov
sbb
adc
mov
rclb
pusha
jo
and
arpl
insl
dec
shl
adc
mov
ret
cmpsl
push
sbb
pop
scas
cmp
cmpsb
mov
lcall
jl
xchg
imul
dec
loopne,pt
iret
cmp
jg
ljmp
jae
and
loopne
xor
add
push
testl
dec
push
jno
shl
mov
inc
add
mov
sahf
test
lcall
sub
mov
xchg
pop
and
xchg
fnsave
and
sbb
mov
jmp
mov
inc
inc
dec
cmp
int
inc
push
lods
mov
xchg
cltd
arpl
lahf
xchg
jnp
jnp
loope
shr
lcall
rcl
or
ret
sbb
mov
loopne
pop
xlat
ljmp
mov
or
out
add
fistpl
xchg
pop
imul
loope
lcall
jb
lds
scas
pop
test
adc
filds
rcl
loope
scas
lock
and
call
mov
fdivl
cmpsb
pop
mov
sbb
mov
push
ds
clc
sahf
movsb
mov
test
lods
imul
cmp
sbb
out
cmp
cmc
ljmp
xchg
fmuls
add
pop
mov
cmc
pop
movsl
aad
cmc
mov
mov
jo
es
cmp
dec
icebp
lcall
mov
xlat
lock
mov
mov
lcall
lods
fsts
pop
clc
int
lock
sub
push
add
jo
and
push
xor
fwait
dec
sbb
pop
in
stos
icebp
cmp
adc
mov
push
aad
xchg
dec
gs
stc
mov
stos
hlt
stos
add
pop
sub
mov
out
mov
mov
push
out
xor
push
pop
das
xchg
out
inc
fmuls
push
cmpb
xor
push
pop
mov
ret
jge
inc
or
dec
push
adc
mov
mov
mov
outsb
test
rcl
stc
cli
jmp
cmc
jg
adc
gs
push
outsb
ljmp
push
or
mov
xchg
pop
dec
gs
cs
test
test
std
sbb
shlb
add
lcall
sahf
mov
lret
cwtl
jge
mov
popa
addr16
mov
call
pop
popf
std
leave
adc
push
daa
mov
mov
pusha
arpl
push
push
or
or
and
jmp
cld
lgs
cmp
jl
hlt
iret
jbe
cmpsl
add
pop
mov
and
sub
dec
add
scas
in
stos
jnp
mov
adc
frstor
pop
pusha
les
mov
ret
fists
inc
jle,pt
lret
scas
cltd
mov
jmp
inc
movsl
ficomps
mov
out
popa
push
addr16
xchg
outsb
pop
fldl
jecxz
lahf
pop
enter
rcrl
mov
and
ret
popf
dec
mov
push
mov
dec
idiv
sbb
js
stc
int
sub
fs
mov
push
jge
jbe
mov
pop
les
mov
mov
sti
dec
xor
mov
test
xor
repz
mov
xchg
shl
into
mov
pop
clc
js
push
movsb
clc
fbld
sti
sub
test
adc
hlt
cmp
aam
test
fildll
mov
sbb
lahf
orl
mov
in
pushl
notl
or
lahf
mov
adc
dec
sub
flds
jmp
inc
cmpsb
jge
rcrb
js
test
out
imull
jnp
push
adc
stos
fnstenv
and
outsl
in
inc
adc
mov
aaa
les
int
fsubrp
jno
adc
iret
es
cwtl
xchg
sub
add
xor
aad
popa
mov
inc
pop
in
push
cs
and
addb
ret
or
lahf
sub
inc
add
ds
xor
mov
call
jecxz
jo
std
inc
jb
mov
andb
rol
aas
xlat
push
xchg
jo
pop
add
pop
addr16
dec
mov
jl
fs
mov
inc
push
std
inc
inc
dec
xchg
xor
xor
or
sub
mov
stos
mov
xor
pop
fistl
inc
pop
pusha
cmpsb
repz
in
adc
xor
in
jl
dec
cmc
or
xchg
pop
mov
xchg
test
fwait
mov
out
subb
fstl
sbb
movsl
into
rcll
mov
fsubp
push
xchg
or
outsb
arpl
loope
sub
daa
lret
push
pushf
fldl
push
fwait
repz
adc
inc
sub
xor
jb
ret
pusha
ror
cmpb
sbb
push
and
sti
out
xchg
mov
hlt
inc
hlt
or
inc
cmp
add
das
dec
out
pop
cmp
mov
test
add
cmpsb
mov
movb
push
cmp
ds
lret
add
jbe
fcomi
push
scas
jle
insb
cmp
jb
scas
push
xchg
inc
inc
push
xlat
push
sub
mov
mov
in
js
aad
or
fldl
sub
lods
push
push
rcll
cmp
mov
pusha
movsb
add
es
cmc
test
dec
int3
out
ret
in
in
lret
mov
dec
dec
aas
loope
ret
cmpsl
clc
mov
dec
adc
jb
test
in
push
jle,pt
in
sub
movsb
arpl
or
leave
pop
pop
sbb
ficoms
push
out
push
sbbl
or
icebp
and
sbb
idivl
push
cmc
movsb
pop
outsl
sbb
jmp
pop
push
loop
subb
stos
dec
jl
jae
psraw
loop
loopne
adc
mov
xchg
xor
sbb
inc
cmp
js
int3
sub
stc
xchg
scas
or
rcr
cltd
add
mov
popf
mov
push
sarl
rdmsr
mov
mov
popf
cltd
aad
ss
and
les
repnz
stc
testb
add
loop
int3
rcl
cmp
sbb
jb
pop
xor
cli
lock
cmc
adc
imul
sahf
push
daa
mov
push
nop
jmp
inc
leave
xor
adc
sarb
push
jmp
outsb
icebp
mov
mov
add
rol
movsl
in
fs
iret
mov
cmp
fwait
lahf
popa
cmc
cmp
sub
or
cld
in
flds
mov
scas
popf
mov
jmp
cmpsl
mov
rolb
out
scas
popf
xor
int
in
shll
push
int
leave
or
add
xchg
sbbl
rol
jno
es
sub
inc
mov
jb
lods
xor
jae
jmp
xlat
pusha
aad
ss
lahf
lods
adc
test
mov
movsl
ret
jge
divl
inc
lcall
shlb
pusha
push
loopne
pop
and
xchg
cmp
push
push
jne
lcall
ja
mov
repnz
jnp
xor
xchg
push
sarb
cmc
ret
cmpsb
outsl
dec
push
fmuls
ret
mov
cld
lret
xchg
or
push
pop
and
inc
add
jge
xlat
fildll
xlat
push
inc
xor
cwtl
mov
movsl
xor
loope
scas
sbb
aas
adc
and
pop
je
lods
hlt
xor
outsl
and
stos
je
int3
push
dec
pop
aam
mulb
test
popf
sub
adc
shrl
out
adc
pop
jnp
sbb
jae
enter
sub
imul
inc
fcoml
in
out
mov
xlat
repnz
pop
movzbl
cmp
add
jnp
sub
das
mov
pop
adcl
mov
dec
add
xor
in
jl
and
cmp
sbb
repz
sbb
pop
fwait
lods
mov
mov
adc
xchg
mov
xor
cmp
xor
loopne
mov
jp
mov
imul
and
xor
mov
cmp
or
into
sbb
inc
mov
loope
push
fnsave
div
mov
push
cmc
mov
push
loope
lock
fs
sti
and
lods
shrb
in
insl
movsl
popa
ficompl
push
jle
jmp
push
test
inc
jge
filds
sub
insl
sub
test
iret
dec
sub
imul
mov
pop
or
aaa
add
sub
lock
dec
mov
inc
lcall
jg
int3
inc
pop
cmpsb
pusha
test
jo
xor
cmp
jbe
nop
pop
mov
cs
fidivs
movsl
xchg
adc
rorb
push
inc
int
sbb
push
push
js
cli
leave
cltd
jp
inc
xchg
popa
pop
test
mov
lahf
int
mov
rorb
mov
push
rclb
sbb
xchg
or
loop
in
mov
xchg
jmp
stos
comiss
xlat
scas
pushf
dec
popa
leave
adc
ret
not
lret
enter
aaa
leave
dec
pop
xchg
xlat
mov
sbb
loope
dec
pop
pop
sbb
pop
cwtl
pop
mov
test
inc
repnz
xor
test
fnsave
jo
js
xchg
sub
mov
adc
aad
xor
xor
shl
push
sub
xchg
push
jge
stos
push
lret
mov
aam
sub
ja
mov
stos
mov
loopne
inc
sbb
int3
enter
imulb
lcall
sub
test
test
push
xchg
mov
sub
add
lahf
stc
in
mov
mov
xchg
je
daa
xchg
push
fildll
pop
mov
lods
push
imul
mov
push
insb
fstpt
nop
cmp
clc
sbb
xor
out
das
addr16
insb
add
mov
jo
add
cmp
test
fimuls
push
xor
xor
inc
pop
pop
cmpsb
or
push
sbb
shr
in
sbb
dec
jmp
cs
mov
pop
dec
pop
add
push
dec
pop
movb
jne
hlt
ja
lea
sbb
sbb
lods
jl
jbe
or
mov
or
and
insl
out
faddl
test
cmp
add
out
ret
jae
adc
test
cmp
js
pushf
mov
sarb
lods
cmpsl
push
push
out
inc
adc
negb
xorps
in
sub
dec
pop
jno
sbb
mov
pop
mov
sbb
jne
ds
icebp
icebp
loopne
mov
adc
adc
inc
add
movsl
mov
xlat
or
add
add
push
cmp
xchg
lods
lret
jns
or
jmp
add
lock
and
xor
push
jae
mov
inc
repnz
fistl
jle
fldt
xor
arpl
leave
int3
jno
int3
mov
jae
pushf
pop
dec
sub
pop
mov
cld
and
subb
pop
mov
push
popa
jbe
sarb
out
mov
imul
std
push
and
xor
mov
adc
and
mov
into
aad
shlb
decl
fwait
push
repnz
mov
lock
sbb
insb
adc
dec
and
rolb
sbb
inc
stos
fwait
adc
in
push
movsl
or
movsb
or
xor
out
out
ss
push
inc
xor
rclb
xor
imull
jno
jl
movsl
cmp
repnz
or
sbb
int
add
fimuls
inc
inc
mov
ret
sarb
shlb
add
repz
nop
mov
mov
fs
ret
aam
scas
mov
xchg
shlb
or
sub
xchg
dec
scas
mov
pop
scas
fdiv
ss
popa
sahf
lea
fwait
adc
ja
fists
pop
in
fisubrs
xor
test
cltd
lods
jge
adc
cmp
sbb
test
data16
mov
mov
sbb
ret
or
cmp
call
outsb
adc
cmp
shll
xor
inc
test
adc
inc
mov
lods
mov
cmpsl
filds
ret
and
fisubrl
les
mov
out
in
loop
fstl
xor
dec
in
scas
iret
icebp
fstpl
jmp
mov
push
push
mov
push
out
addl
addr16
loope
fcmovne
les
cwtl
add
test
loope
test
ja
roll
lret
ss
jne
out
xlat
or
hlt
xor
repnz
stos
push
xchg
adc
into
xor
mov
movsl
push
pop
mov
mov
push
fisttpl
out
mov
std
aad
ret
out
dec
lock
int3
add
ss
rcr
loop
out
jbe
fcmovne
repz
pushf
inc
add
inc
sti
ffreep
push
es
dec
outsb
aaa
cmp
fidivrs
movsl
push
daa
jl
sbb
jle
xor
lcall
mov
xor
or
stos
enter
nop
stos
test
addr16
mov
push
or
sbb
out
loop
cmp
mov
adc
nop
xchg
adc
js,pt
je
shl
pusha
push
push
sarb
fbld
sbb
inc
xor
mov
cwtl
inc
incb
mov
test
adc
repz
out
imul
sub
enter
bound
rorb
lds
or
pop
js
or
and
dec
xchg
dec
add
jae
loop
aad
shrl
sub
inc
sahf
push
jne
int3
into
jmp
sub
or
or
xchg
sbb
lcall
xchg
sub
js
dec
in
inc
dec
sub
xlat
clc
popa
es
ss
aas
xchg
inc
push
cltd
pusha
in
sub
xor
push
xor
inc
push
xchg
jns
fwait
idivl
xchg
adc
sub
xorl
iret
rcll
in
xchg
into
rcr
mov
adc
pushf
into
es
psubd
outsl
xchg
inc
fisubrl
mull
pop
xorb
dec
lock
xchg
xchg
mov
or
aam
aad
adc
jns
xor
and
jmp
adc
inc
in
psllq
and
ficoms
lods
rol
sbb
in
jne
out
mov
sub
jge
out
out
mov
add
pop
andb
insb
scas
dec
or
mov
adcb
arpl
jmp
dec
mov
add
pcmpeqw
pop
pop
clc
into
lcall
sahf
pop
or
cmpsl
scas
jns
sub
add
mov
pop
mov
sub
pop
mov
cmc
test
mov
sbb
aaa
sub
in
aam
inc
ucomiss
add
pop
sbb
cmp
ljmp
xor
insb
sar
pop
outsb
stos
nop
shrb
out
or
jmp
or
xchg
in
fchs
mov
adc
ljmp
adc
sbb
jl
fildl
decl
add
lock
cmp
mov
inc
je
fmul
mov
insb
or
mov
mov
nop
xchg
xchg
lret
cmp
rsm
lcall
int3
enter
sti
outsl
enter
imul
jns
fdivl
sbb
cmp
ljmp
fcoms
sub
cbtw
inc
adcb
jne
xchg
int3
lret
lcall
shrb
into
dec
mov
and
cs
sbb
mov
pop
insb
outsb
icebp
popf
repz
adc
lods
cltd
es
ja
jge
or
or
inc
mov
mov
cmp
int
lcall
fs
and
mov
inc
pop
int3
int
push
arpl
pop
iret
std
lods
aam
sti
lock
mov
andb
daa
popa
or
adc
stc
xchg
lods
or
xchg
mov
clc
cltd
push
int
jl
insb
pushf
jns
or
aad
mov
sbb
xchg
jl
in
mov
and
rcrl
ljmp
mov
mov
in
mov
push
add
sbb
aad
fistpll
xor
xor
pushf
in
insl
push
shlb
dec
or
cmpsl
pop
mov
call
push
lds
xor
pop
push
xchg
idivb
add
dec
cmpsl
mov
outsl
mov
shlb
gs
out
sbb
mov
jmp
xor
adc
adc
loopne
inc
mov
xchg
add
add
cmp
popf
push
jns
shrb
dec
les
pop
inc
gs
std
repnz
inc
mov
loope
mov
fldenv
pop
imul
pop
das
cmp
xchg
icebp
in
pop
fwait
push
and
out
inc
or
or
mov
or
inc
dec
sbb
mov
xchg
and
cwtl
cld
mov
pop
arpl
icebp
mov
mov
in
push
mov
shl
xor
or
jns
jo
adc
mov
and
dec
lahf
sbb
mov
adc
and
sub
aam
stos
pop
inc
adc
adc
inc
add
mov
push
jmp
fldl
clc
pop
lods
xchg
scas
movsl
lods
push
jae
in
push
jle
xor
sahf
xchg
mov
cld
insl
lret
nop
sub
xchg
or
sub
div
fwait
mov
cmp
cmc
jno
cmp
call
repnz
hlt
andb
mov
sbb
adc
mov
sub
movsb
lods
fistl
int3
inc
jne
jb
cmpsb
jns
lods
inc
int
scas
mov
jp
cltd
jp
adc
cli
popf
adc
and
mov
repz
sbb
daa
fldcw
shrb
jnp
push
adc
pop
push
and
insl
pop
imull
or
dec
pop
inc
rcrb
arpl
hlt
ret
mov
rorl
popa
cld
imul
ficoms
inc
stc
cltd
push
push
in
inc
xchg
and
das
pop
sahf
ds
je
and
inc
scas
dec
in
push
pop
sbbl
std
cs
dec
dec
fbld
ljmp
clc
test
subl
sub
out
inc
inc
sbb
call
sarb
cld
nop
mov
fmull
sub
test
inc
lea
push
pinsrw
jnp
punpcklbw
xor
out
ja
outsl
sub
push
pop
add
pop
push
cmpsb
les
and
push
stos
test
cmpsb
xor
fcomi
mov
out
or
dec
pop
cs
mov
mov
out
cmp
jecxz
jne
pop
mov
mov
icebp
mov
dec
mov
mov
dec
lds
shlb
or
xchg
imul
mov
cmc
inc
popa
lock
sbbb
outsl
jbe
in
push
xor
xchg
divb
inc
mov
pop
mov
out
icebp
addb
dec
adc
in
int
sub
xchg
mov
mov
jl
push
aad
imul
adc
cmp
xor
test
mov
test
lret
xchg
into
mov
nop
ja
sbb
lahf
in
stos
xchg
inc
fadds
pop
pop
int3
push
adc
ret
mov
insl
jo
movsb
iret
or
or
add
jbe
adc
lcall
cmp
xchg
push
int
std
push
leave
sbb
roll
sub
pop
sub
xchg
push
mov
sbb
repnz
int
and
and
addr16
xchg
scas
mov
pop
test
cwtl
xchg
adc
cmp
aam
mov
sarb
add
xchg
popa
mov
push
ss
int
inc
pop
and
mov
xlat
xorb
lods
adc
rcl
lcall
arpl
lods
cmc
js
outsl
cwtl
and
add
out
pop
or
xchg
in
cmp
int
and
pushf
or
lea
scas
inc
mov
cmp
jmp
pop
sti
dec
pop
cld
inc
cld
and
mov
daa
inc
mov
inc
popf
cli
pop
cmp
adc
pusha
cmc
mov
cmp
sbb
mov
jp
dec
push
jb
fwait
jmp
inc
adc
xor
mov
out
pop
pop
aaa
inc
outsb
jo
setge
add
adc
xor
ja
xchg
inc
pop
xlat
sbb
es
out
cmp
out
add
jle
lds
out
dec
push
cmp
rclb
sbb
lcall
push
lahf
adc
mov
inc
mov
repz
mov
push
addr16
sbb
je
mov
dec
sahf
iret
lods
adc
mov
jo
mov
int3
sub
popa
mov
xor
cmp
jb
subl
int3
int
cmp
xchg
cltd
bound
dec
cmp
lahf
mov
int
int
cmpsb
or
loope
in
sbb
test
aas
scas
dec
and
xchg
xchg
das
sub
adc
push
adc
lret
popf
adc
addr16
fwait
movsbl
adc
pop
cmp
sub
push
das
stc
fucomi
xor
lock
sbb
in
adc
xchg
or
sub
ret
aaa
xorb
stos
hlt
sbb
aaa
out
insl
andl
push
jne
cld
enter
mov
je
xor
dec
repz
adc
push
mov
subb
mov
dec
sahf
int3
ret
dec
cmp
imull
scas
ljmp
test
stc
ret
sbb
enter
rcrl
in
in
or
lods
push
push
lods
pop
daa
dec
xchg
hlt
xacquire
inc
imul
mov
and
fs
out
pop
out
sub
daa
mov
sbb
pop
cmc
aad
inc
adc
and
push
xlat
negl
cmp
cmp
lds
stc
add
xor
cwtl
dec
cli
out
or
push
pop
jmp
mov
xchg
test
jmp
pusha
xchg
stos
mov
loop
enter
inc
mov
jno
add
cmpsl
sbb
lahf
dec
gs
xchg
sti
mov
pop
mov
cmpb
inc
lret
jns
push
jnp
aaa
jb
sbb
xchg
sbb
pop
shrl
cld
fwait
adc
xorb
pop
ss
push
in
outsl
negb
pop
mov
xor
xor
inc
imul
call
cli
xchg
imul
sub
or
add
test
aas
xchg
xor
xor
fs
pop
add
inc
addr16
pop
sbb
lock
outsl
das
clc
mov
shll
icebp
adc
pop
sub
or
sti
and
repz
adc
roll
sbb
xchg
fists
mov
ficoms
lahf
mov
mov
pop
cs
sub
into
aas
pop
lret
add
pop
out
add
sbb
int3
xchg
inc
add
add
gs
mov
ja
out
sbb
pop
cmpsl
add
inc
into
movl
add
xor
shrl
adc
xchg
daa
pop
addr16
stos
xor
sub
cmp
inc
shl
inc
lods
mov
mov
jecxz
inc
fsts
fld
popa
cmpsl
and
lret
mov
xor
lahf
sub
push
hlt
in
aaa
mov
sbb
das
mov
call
mov
sbb
rcrl
mov
sahf
sbb
push
iret
jecxz
lea
mov
sbb
add
faddl
aad
cmp
cs
mov
int
inc
cmp
test
lock
dec
sub
insb
testl
mov
enter
push
jl
divb
jg
mov
xchg
xchg
xor
filds
lret
ret
lea
pushf
dec
std
inc
out
jg
or
xchg
mov
pushl
push
inc
addr16
int3
out
jg
loop
jge
xchg
fnstcw
sbb
mov
aas
mov
push
mov
out
mov
and
push
inc
cltd
daa
popf
repz
sub
xlat
push
je
pushf
ss
ljmp
xchg
lods
sti
jns
fidivl
arpl
sahf
sbb
lods
sbb
jle
js
xlat
out
lahf
fcomps
rcrl
es
out
les
xchg
lea
popa
xor
js
popa
aaa
loope
daa
loopne
fistl
test
lds
stc
xchg
mov
add
ror
xor
std
push
mov
xchg
arpl
loope
imul
jle
bound
sbb
insb
lods
clc
mov
or
and
xor
out
adc
or
cmpsl
arpl
jbe
pop
movsl
arpl
movsb
inc
lods
es
js
xor
adc
das
ret
inc
mov
mov
jg
cmc
pop
sbb
sub
sbb
mov
adc
mov
sub
fs
test
push
les
frstor
jae
test
in
inc
push
fs
adc
inc
testl
xor
lds
lds
sbb
mov
xor
daa
dec
mov
xor
mov
dec
dec
fidivrs
ret
cmc
hlt
mov
arpl
pop
arpl
mov
add
pop
addl
push
insb
insb
push
smsw
jne
in
xchg
or
mov
notb
popa
out
out
sub
push
jo
adc
inc
divb
mov
cmp
xchg
test
testl
cmp
or
or
test
imul
or
stos
stc
mov
into
adc
push
in
and
mov
adc
outsl
or
loope
js
mov
loopne
or
scas
xchg
lds
rcll
imulb
mov
inc
lea
mov
mov
adc
push
inc
add
xor
ds
cmc
ret
outsb
adc
xchg
pushf
or
and
sbb
std
or
or
out
into
mov
jecxz
lret
shll
mov
add
jb
pop
testb
pop
nop
pop
loop
int3
inc
cmp
ljmp
jecxz
push
lods
lea
rclb
xchg
xchg
faddl
add
inc
mov
sbb
imull
in
sarb
mov
dec
sbb
dec
xlat
mov
scas
loopne
adc
xor
call
push
loop
idiv
imul
sbb
shr
pop
mov
cs
sbb
fsts
leave
ret
xchg
dec
insl
int3
rcrb
lds
pop
push
and
dec
incl
test
sti
repz
push
shlb
das
inc
fxch
loop
jno
sub
dec
push
xchg
jnp
or
insl
jbe
push
out
shlb
pop
lret
sti
and
mov
pop
pop
and
fnstcw
or
shrl
inc
xor
fwait
adc
and
aam
jp,pn
scas
out
mov
iret
loope
mov
les
hlt
sbb
addr16
sbb
push
push
lcall
popl
icebp
lds
clc
xchg
data16
fcmovbe
popf
out
rcl
jp
scas
scas
les
loope
pop
mov
int
jecxz
push
mov
repz
stc
dec
mov
xor
out
inc
jmp
iret
aam
inc
xchg
loope
adc
mov
adc
pop
cmp
adc
jb
xor
and
push
pop
adc
rorb
pop
push
or
jnp
dec
mov
ja
mov
cmpsb
mov
xchg
out
dec
adc
ret
dec
ja
adc
inc
jb
mov
icebp
lds
neg
xor
or
or
jl
fisttpl
sbb
in
cmp
rol
cmp
jg
mov
push
jno
xchg
push
imul
mov
into
popf
test
in
icebp
dec
jbe
pop
jne
popa
iret
mov
fcoms
icebp
push
xor
pop
in
pushf
lahf
aas
pop
pop
mov
stos
mov
fisubl
xchg
icebp
mov
not
leave
mov
hlt
int
sub
cmp
outsb
or
aas
pop
out
pop
inc
movsb
test
adc
or
xchg
js
mov
repnz
add
xchg
mov
test
aaa
add
dec
cmp
rclb
stc
jnp
cmc
sahf
cld
out
hlt
into
inc
fwait
push
icebp
mov
aaa
mov
mov
mov
ja
mov
sbb
and
lcall
push
mov
sub
jmp
out
sub
dec
cmp
nop
lahf
pop
mov
or
leave
cmpl
mov
xchg
or
pop
leave
mov
out
sti
shr
repnz
mov
fsub
mov
sbb
std
push
rclb
push
sub
mov
mov
das
in
dec
xchg
or
mov
xchg
imul
ss
repnz
or
test
mov
xchg
mov
pop
xor
and
xchg
inc
sub
or
dec
inc
nop
dec
mov
mov
add
sti
pop
das
or
stos
stos
fdivrl
jg
in
cmp
sub
mov
dec
ljmp
push
sub
pushf
add
sbb
test
fstpt
js
jnp
sub
fldt
fmuls
mov
pop
or
movsb
jle
add
push
push
xor
fiadds
int
ljmp
add
das
sub
xor
jb
mov
rorb
insb
ljmp
xchg
sbb
sub
jmp
inc
pop
pop
mov
mov
mov
movsl
pushf
xchg
dec
loopne
mov
daa
adcl
shll
popa
addr16
xchg
mov
cmp
imul
arpl
sbb
test
inc
sbb
outsb
fisttpll
imul
lcall
add
and
daa
sub
out
mov
push
and
or
xchg
mov
push
loopne
hlt
sub
push
adc
push
arpl
inc
xchg
sub
add
push
pushf
popf
pop
pop
cmpsb
xorl
sbb
aad
mov
jnp
mov
lret
fidivrs
sbb
test
call
subl
inc
outsl
jb
fsubl
inc
sbb
jp
pop
pop
stos
jge
mov
comiss
incl
nop
ret
push
cld
cltd
insl
and
jmp
int3
cmc
mov
notl
out
hlt
mov
outsl
push
and
outsl
adc
lret
scas
shr
push
mov
pop
xchg
popa
mov
sbb
xchg
jmp
es
movsb
push
push
push
cld
add
pop
and
mov
xor
sbb
test
sbb
xor
xor
pop
sbb
hlt
pop
mov
sub
pop
sbb
cwtl
ljmp
sbb
in
call
stos
mov
or
sbbl
fbld
inc
and
jle
lahf
in
jmp
insl
insb
mov
mov
and
ret
inc
inc
cmp
out
rcrb
push
mov
mov
mov
mov
mov
hlt
stc
mov
ret
pop
add
rol
in
jbe
icebp
test
enter
nop
dec
sub
or
xor
dec
cvtpi2ps
mov
test
pushf
mov
shlb
xchg
in
rcr
stos
fisubl
pop
std
or
add
test
loope
insb
lahf
sbb
std
jmp
jp
add
sbb
or
outsl
adc
fidivs
mov
icebp
jmp
dec
enter
loope
xor
pop
outsl
mov
mov
pusha
daa
aaa
xchg
and
and
sti
sub
js
ljmp
mov
in
jne
addl
dec
pop
mov
xchg
mov
inc
jecxz
and
lock
lea
movsb
inc
sub
insl
push
stos
mov
push
inc
lret
add
jns
in
and
cltd
jb
pop
push
xlat
and
out
pop
and
loop
aas
or
xor
adc
jge
xchg
mov
ret
cmp
dec
jecxz
dec
hlt
jbe
out
movsb
add
dec
icebp
cmp
ret
mov
call
mov
repz
fs
mov
ret
sahf
mov
jl
pop
outsl
mov
push
jp
push
or
mov
loope
std
fimuls
mov
lods
xor
xchg
popf
mov
or
pop
out
push
cmpb
and
dec
pop
mov
mov
xchg
push
jns
add
xor
pop
mov
int
lods
rclb
sbb
gs
and
mov
xor
int
pop
rcrl
out
imul
mov
add
push
cmp
sbb
xor
shrb
push
sbb
mov
or
out
cmc
or
flds
jb
mov
mov
outsb
mov
in
stc
cmpsl
cmp
mov
arpl
pop
mov
and
lea
ds
adc
mov
cmc
dec
fucom
or
cmpsl
repnz
lods
push
ret
leave
push
xor
call
hlt
out
push
push
add
jecxz
mov
pop
das
in
dec
mov
add
fiadds
mov
out
cmp
xor
push
xor
loope
inc
mov
xchg
call
jp
or
jb
in
mov
aad
mov
cld
xchg
pop
mov
push
mov
flds
adc
lods
push
jo
cld
daa
jno
out
fsubp
inc
jmp
jecxz
sbb
add
cmp
rorl
cli
mov
fldl
jp
xchg
mov
scas
int
pop
and
inc
lock
aaa
xchg
scas
in
iret
mov
ja
jno
out
adc
jle
sub
out
outsb
js
mov
xchg
push
pusha
lahf
inc
aad
mov
aad
ficompl
xchg
inc
sbb
fcoms
daa
and
out
out
mov
test
mov
rcrb
pop
lahf
pop
mov
mov
pop
mov
mov
jp
sub
mov
aaa
sbb
mov
jnp
cld
mov
sbb
dec
cwtl
jge
mov
pop
fnsetpm(287
cmp
pop
push
mov
lea
pop
int
dec
sub
test
add
ss
addr16
cli
xchg
hlt
shlb
shrl
shl
mov
popf
in
dec
shr
push
mov
movsl
or
divb
xchg
push
fistl
fimull
xchg
shlb
pushf
xchg
push
addb
sub
gs
scas
andb
cltd
movsl
pop
or
fnstenv
aam
dec
fld
push
ret
sbb
loope
jno
or
push
sbb
mov
mov
fildl
sbb
cmc
loope
and
test
icebp
inc
in
or
addl
cmc
pop
cmp
jno
mull
out
out
mov
or
dec
mov
dec
outsb
aas
mov
stos
stos
pushf
loop
sbb
stc
dec
inc
scas
and
cld
test
jb
adc
xchg
sbb
pushw
pushf
lods
imul
mov
pop
sub
jmp
push
sub
outsl
imul
loope
adc
es
fucomi
xchg
push
jle
dec
in
js
and
in
inc
fisttpl
xor
aad
popf
hlt
mov
or
dec
je
pop
xor
jns
sbb
and
adc
leave
lods
ja
pop
xchg
cmp
sbb
and
add
inc
out
es
cmp
adc
adc
add
mov
mov
mov
add
push
repz
push
pop
and
in
pop
xchg
ret
mov
mov
fmull
test
cs
sub
lcall
xchg
mov
mov
out
int
push
lds
xor
pop
ja
fcomp
jmp
xlat
fldenv
pusha
adc
sub
popa
stos
clc
ret
loope
xchg
mov
xor
mov
outsb
loopne
and
nop
sub
sub
leave
sub
push
inc
inc
push
xchg
in
mov
or
test
xor
orl
and
inc
mov
pop
xor
test
mov
mov
ljmp
fnstcw
jecxz
lret
push
mov
jb
inc
hlt
inc
sub
mov
in
ja
in
mov
lcall
jo
mov
aaa
pop
sub
add
fnstsw
lret
inc
fs
ljmp
mov
push
scas
rcrb
sbb
jl
dec
pop
fcoml
jecxz
into
mov
cmpsl
std
cmp
xchg
add
je
push
ja
xlat
jecxz
inc
pop
mov
js
or
fisttps
and
test
testb
imul
and
enter
mov
out
push
loope
fcompp
mov
clc
addr16
jp
cmp
pushf
cmp
cwtl
xchg
and
adc
out
adc
adc
lods
mov
mov
fldcw
and
andb
mov
js
sbb
mov
jnp
mov
inc
outsl
mov
test
call
cmp
das
aaa
sub
inc
xor
shlb
ret
ss
cmpsl
push
add
out
mov
loope
add
pop
pop
movsb
xlat
mov
loop
movsb
xor
incl
mov
fsubl
adc
lods
pop
add
fcoml
es
pushl
je
jae
xchg
ss
frstor
adc
fbld
lds
fnsave
mov
insl
push
in
jae
gs
pusha
cmp
jno
dec
mov
sbb
xchg
and
xor
inc
aas
push
dec
pop
jae
hlt
inc
xchg
push
lea
stc
push
popf
xchg
in
fldcw
bound
cmpsb
sbb
pop
mov
xchg
cmpsl
mov
mov
push
scas
int
out
inc
lret
and
sbb
xor
push
mov
in
jmp
and
mov
push
cmp
inc
insb
mov
pop
add
sbb
xor
xor
test
ss
mov
push
pop
aas
or
ror
adc
sbb
xchg
lahf
dec
jge
push
add
dec
stos
fwait
sahf
jg
mov
pop
mov
mov
pop
push
mov
jns
mov
in
cmpsb
xchg
or
mov
orl
fs
cmp
shrl
push
jmp
sbb
or
es
jns
data16
mov
fistpll
out
sub
jae
or
push
jle
dec
xchg
sub
shrl
xchg
je
cmpsl
ret
in
popf
lods
popf
pop
jns
lea
mov
andb
xor
pop
push
into
leave
clc
mov
lock
in
out
push
insb
add
push
fsubs
pushf
scas
sbb
scas
or
cmpsl
lea
mov
xor
add
jae
adc
jbe
rcrb
push
sbb
stos
sar
aaa
enter
popf
lret
lds
or
or
inc
cld
in
inc
ds
xor
sbb
adc
xchg
push
popa
insb
fdivrs
mov
jno
jo
movsl
sbb
ja
popa
jge
xor
push
sarb
dec
aas
sti
hlt
fwait
das
push
push
push
insl
adc
push
cmp
sahf
out
or
xchg
jns
int3
inc
push
mov
xchg
call
fidivl
ja
or
mov
pop
into
jne
sbb
mov
push
mov
loopne
and
lret
shll
add
lods
pop
sub
popf
int
xchg
cmpl
lret
dec
jo
int3
mov
lcall
pop
insb
cmc
aaa
jno
fildll
cmp
lods
and
int3
cmp
addr16
pop
hlt
pop
mov
mov
or
jg
mov
sub
or
jno
sub
add
addr16
out
xor
je
clc
sbb
dec
inc
dec
loope
jne
aaa
sarb
add
mov
jg
aaa
jo
faddl
sbbl
xchg
test
ljmp
xchg
adc
in
test
and
iret
jl
push
pop
push
test
add
xor
cmp
sub
mov
push
jl
sub
mov
and
ja
push
aam
ds
push
push
push
hlt
stos
xchg
ret
lds
loop
xor
inc
jbe
and
xor
mov
sbb
xor
out
push
rclb
or
or
inc
or
aam
jne
sahf
iret
stc
iret
loop
les
push
fiaddl
aas
ljmp
adc
sub
xor
and
fstpt
xchg
bound
mov
mov
mov
stos
andl
arpl
push
cmpsl
outsl
xlat
pop
repnz
mov
add
add
jl
dec
pop
jns
mull
rcrl
imul
ds
and
dec
adcb
fstpt
stc
call
mov
pop
mov
sub
xor
add
push
iret
imull
or
push
ret
push
and
out
push
shll
push
mov
xor
or
mov
cmp
je
jnp
xor
dec
inc
sub
jp
or
in
out
cld
push
mov
clc
mov
loop
mov
popf
and
dec
fstps
clc
clc
bound
les
xchg
adc
cmpl
fs
sub
pop
sbb
mov
cmpl
xor
sbb
xchg
pop
fcomps
sub
cmp
add
xchg
mov
mov
sbb
adc
movsl
imul
out
sub
jbe
shlb
outsb
jo
test
loopne
in
inc
outsb
rclb
mov
mov
jl
push
shrl
add
into
mov
jo
cmc
xor
jo
popf
mov
mov
addr16
and
or
xchg
mov
add
das
repz
pop
out
cmp
pop
cld
jnp
or
scas
mov
inc
ja
lret
orb
adc
mov
push
or
pop
jnp
add
and
insb
mov
cmc
mov
xchg
xchg
xlat
mov
in
popa
inc
aam
jmp
cmpsb
lds
mov
fldz
pop
dec
sahf
and
sbb
jmp
mov
push
sub
out
dec
jg
sahf
lcall
sub
jo
sbb
cmp
negl
imul
dec
ss
pushf
lea
call
das
adc
adc
imul
nop
push
adc
sub
jbe
and
mov
cmpl
jge
scas
xor
xchg
mov
dec
dec
nop
icebp
pop
inc
popa
mov
clc
dec
cltd
in
and
arpl
jne
push
mov
repnz
sub
inc
lcall
mov
mov
jp
rcll
repnz
dec
inc
sbb
fwait
rcll
shll
adc
xor
sbb
add
outsl
pop
roll
js
push
or
ja
and
hlt
lds
and
inc
test
mov
jl
sbb
ljmp
mov
imul
cmpsb
out
push
test
jnp
xchg
mov
push
fistps
rorb
sub
add
push
aam
ffreep
add
sub
pop
mov
in
push
add
cmp
and
dec
cmp
sahf
inc
testl
sar
aaa
dec
es
movsb
jns
adc
rclb
lods
jno
loope
mov
sbb
pushf
xor
jns
push
mov
adc
add
adc
sbbb
cmc
mov
jnp
adc
loop
dec
dec
hlt
mov
xchg
sbb
fildl
sub
sbb
sbb
dec
ss
inc
in
or
stos
test
movsb
mov
testb
sub
cmovge
push
shrl
lret
pop
jle
xchg
das
cld
fcom
cmp
mov
divl
sub
jecxz
mov
pushl
aad
jp
out
push
das
jbe
jnp
int3
pop
fstps
sub
test
push
mov
cli
je
notb
or
mov
sub
add
in
ret
jno
fidivrl
mov
add
pop
jb
xchg
aas
dec
adc
cwtl
mov
or
push
mov
enter
ljmp
xabort
jno
inc
inc
fdivr
cmp
lcall
and
pushf
mov
loopne
mov
xor
lods
mov
inc
rclb
repnz
mov
rcl
push
movsl
adc
popa
repz
clc
aas
xchg
std
jle
fnstsw
loopne
std
jnp
lods
and
xchg
pop
aam
xchg
add
testl
jne
in
cwtl
xor
mov
jmp
pop
leave
into
mov
jno
leave
pop
mov
cmc
xlat
loopne
rcll
push
sub
arpl
jp
arpl
fwait
lcall
int3
ljmp
sub
adc
dec
add
pop
mov
int3
or
add
fdivl
cld
sbb
inc
je
sub
pop
xlat
sub
xchg
lods
lret
nop
fldt
add
clc
outsb
les
push
ret
adc
es
mov
std
stos
hlt
aas
rcll
ss
push
cmp
aad
dec
fisttpll
xchg
or
add
fiadds
adc
and
loop
push
aaa
xchg
test
in
xchg
popf
dec
ss
adc
jo
lahf
or
test
in
addr16
cltd
adc
das
mov
stos
mov
out
inc
int3
leave
and
sbb
mov
int3
fisubs
mov
or
mov
mov
pop
cmpsb
shrl
xchg
mov
fwait
in
push
int3
cltd
xchg
mov
xchg
stos
aad
or
pop
fucomi
insl
scas
sbb
nop
movsl
and
xor
repnz
into
sahf
stos
jge
rcl
xor
pop
ss
rcl
cmp
sbb
push
imul
mov
jbe
inc
scas
dec
mov
xor
and
pop
mov
nop
add
fadds
adc
jle
mov
in
push
mov
and
and
cmc
pushf
test
into
mov
mov
mov
in
nop
lds
addr16
pop
push
sti
mov
out
cmp
xchg
and
popf
xlat
cmp
or
movsl
xor
les
pop
mov
out
repz
dec
mov
data16
cmpsl
add
and
lods
stc
add
mov
loop
push
stc
add
pop
movsl
fwait
lea
cli
in
dec
sbb
dec
cld
mov
cli
in
repz
jp
adc
addr16
cmpb
nop
jne
test
imull
repnz
aaa
mov
adc
jae
and
inc
mov
nop
push
daa
sub
push
ds
fimuls
lock
xchg
ret
outsb
jno
sub
push
ret
lods
dec
rol
dec
xor
xchg
and
hlt
orl
sub
sarl
and
push
into
sub
in
sub
or
push
aaa
outsl
pop
xlat
arpl
add
and
sbb
mov
mov
inc
ds
test
ds
pop
jbe
mov
sub
adc
es
das
jo
cmpsb
pop
mov
adc
in
or
add
cmpsb
cltd
inc
jle
andl
lods
ret
jne
shrb
push
inc
addr16
outsl
inc
mov
jl
icebp
jp
mov
jbe
sub
outsl
lahf
jo
imul
mov
roll
add
stc
jg
mov
nop
add
sub
jb
fwait
cmp
rcl
jmp
lahf
test
adc
adc
fildl
std
cld
push
sbb
ficoms
cmpl
adc
pop
add
or
mov
inc
adc
and
cmpsb
mov
pushf
sti
leave
mov
outsb
out
inc
jne
mov
jecxz
repz
roll
push
stc
xchg
cmp
jge
sbb
sti
add
push
jo
and
jbe
dec
ret
inc
hlt
clc
push
lret
jge
mov
and
ss
xor
in
pop
gs
lret
jbe
or
adc
jmp
lock
out
test
aad
popf
cltd
adc
add
sahf
add
mov
mov
xor
mov
sub
leave
test
pop
or
movsb
scas
jns
ret
in
lds
mov
ljmp
sbb
ljmp
in
fcompl
jne
test
enter
mov
mov
push
xor
stos
loope
adc
cwtl
mov
or
neg
or
lods
or
in
fisttps
pop
push
dec
cmp
adc
pushf
sbb
cmp
mov
cmp
sti
jmp
adc
aaa
bound
pop
shl
mov
jno
dec
test
add
inc
push
lock
sub
clc
mov
int
mov
les
mov
sbb
xchg
sbb
mov
dec
fistpll
test
mov
lock
stos
les
gs
mov
out
jnp
daa
xchg
addb
aad
mov
es
add
dec
je
or
imul
xor
mov
in
test
jmp
js
add
mov
cwtl
fnstsw
inc
sarb
inc
push
stos
or
fadds
inc
mov
lods
pmaddwd
mov
lret
mov
leave
int3
mov
jp
imulb
push
jl
inc
mov
out
jbe
cmp
int
aaa
adc
and
dec
xchg
mov
mov
cmc
or
pop
xlat
imul
in
into
mov
push
cmp
test
in
push
mov
jg
es
and
mov
push
push
dec
clc
movsl
xchg
popa
bsr
pop
inc
pop
bound
out
lahf
xor
or
pop
insl
out
in
mov
mov
jnp
ficoms
out
or
cmpsb
ret
mov
aas
inc
mov
push
cmp
es
cmp
cltd
push
sub
pop
sbb
cmp
adc
xchg
aam
ljmp
cmp
inc
in
mov
mov
in
repnz
fdivl
inc
push
lods
dec
jns
fisubl
dec
cmc
ret
mov
push
stos
xchg
stos
cmpsl
jl
push
test
xlat
and
adc
fsub
lds
lock
dec
inc
mov
push
jnp
xchg
add
adc
cmp
out
out
push
or
insl
jnp
pop
xor
inc
mov
sti
mov
mov
cmp
test
outsb
sbb
and
xorl
out
sub
bound
or
outsb
mov
inc
repz
loopne
mov
push
cmp
adc
cmp
inc
push
lret
mov
inc
fisubrs
clc
sub
cmpsl
test
pop
inc
imul
in
test
ret
jmp
cmpsb
push
test
ret
inc
mov
imul
xchg
xor
dec
daa
push
sub
pop
mov
push
nop
or
sbb
repz
arpl
mov
inc
add
sahf
fnsave
cltd
mov
mov
mov
popa
iret
pop
cmpsl
pop
or
sbb
scas
test
mov
fsubrl
lret
mov
inc
daa
movsb
sub
xor
sti
movsl
gs
stc
jns
lahf
inc
and
mov
jb
cld
sub
enter
cli
jb
xchg
mov
mov
lock
pusha
outsb
pop
fisubrl
or
inc
ja
nop
push
dec
sub
adc
loop
arpl
mov
or
pop
or
xchg
dec
jb
mov
mulb
lret
scas
jmp
mov
cwtl
addb
adc
xchg
pop
unpckhps
add
dec
cmp
out
sbbb
negb
mov
cwtl
inc
dec
je
fwait
lock
ja
xchg
mov
loope
stos
inc
xchg
mov
mov
stos
clc
or
imul
addr16
cwtl
dec
sbb
mov
jno
bnd
popa
shrb
push
xchg
or
cmp
mov
scas
mov
cmpb
xchg
je
mov
pop
or
jae
in
ss
popa
fmulp
or
std
hlt
or
scas
jecxz
in
mov
add
push
and
mov
xor
or
dec
rcrb
ror
cld
pushf
addr16
mov
mov
cmp
lret
rorb
test
loop
mov
xchg
inc
cld
out
aas
mov
push
cmp
mov
mov
mov
pop
sbb
dec
das
outsb
pop
jle
push
sti
xchg
mov
icebp
popf
in
lret
adcb
xchg
dec
pushl
insl
je,pn
or
add
lds
lods
jbe
mov
cmpsb
adc
stos
jnp
xchg
pushf
mov
iret
push
incl
icebp
jle
adc
mov
dec
fsubrs
adc
mov
sbb
insb
faddp
add
dec
mov
imul
aas
in
xlat
ret
inc
add
mov
mov
cltd
xor
mov
mov
mov
push
sbb
in
test
lea
lea
or
int3
pusha
in
hlt
inc
mov
movsb
lock
fisubrl
jne
daa
and
sbb
fisttpll
mov
pop
mov
adc
mov
jnp
and
shlb
push
inc
mov
std
dec
or
or
mov
popa
inc
pop
mov
loop
pop
pusha
shl
dec
aam
jecxz
jecxz
jmp
shlb
and
gs
sbb
adc
xor
push
rcll
pop
adc
repz
call
jg
dec
je
add
cmc
mov
cli
loope
pop
sub
adc
jecxz
into
pop
push
pop
shrl
das
adc
icebp
icebp
push
dec
out
pusha
push
loope
pop
and
movsl
xchg
std
push
sub
fidivrs
mov
xorb
pop
push
fcompl
mov
inc
cmp
mov
addb
fs
jecxz
pop
test
adc
xlat
dec
jl
out
inc
sahf
mov
sub
cld
cld
ficomps
jle
mov
clc
adc
mov
add
pop
xlat
incb
shr
arpl
mov
sahf
clc
into
lods
mov
test
xchg
cwtl
mov
pop
flds
pop
stos
push
dec
inc
sbb
xchg
fildl
dec
sar
fldt
push
in
std
sub
or
nop
xchg
mov
out
stos
jp
and
cmpxchg
jle
dec
add
scas
jno
aas
hlt
mov
arpl
cltd
xor
pop
mov
mov
push
dec
xlat
xor
cmp
movl
mov
xor
test
jno
or
mov
xchg
cmpsl
jle
decl
daa
push
xor
jecxz
cmp
sub
mov
ja
jo
test
lahf
jmp
lahf
mov
xor
sbb
nop
arpl
and
inc
scas
mov
cli
pop
stc
xor
lcall
ja
dec
pop
dec
repnz
xchg
jnp
out
lcall
ljmp
inc
aaa
xor
mov
loopne
fcompl
sbb
lret
xchg
push
test
enter
push
inc
xchg
aam
popf
ljmp
popa
int
sub
fadd
hlt
or
in
xchg
pop
cmp
hlt
cmc
rolb
fistpl
ds
sbb
jl
xchg
scas
incl
mov
sbb
jl
dec
push
xchg
cmp
imul
in
inc
sbb
es
js
iret
cld
inc
push
push
shll
xor
dec
imul
repnz
enter
xchg
cmp
inc
cmpsl
push
or
scas
and
pop
pop
inc
sbb
jmp
cld
mov
mov
xchg
ret
jns
pop
pop
mov
add
fwait
cmpsb
mov
jp
mov
push
call
inc
ret
outsl
in
mov
cli
popf
cmp
cmpsl
pop
and
lcall
fisubrs
cmp
jmp
je
xor
inc
pop
ret
ror
push
push
mov
pop
mov
sbb
inc
cmp
xchg
add
add
cmpsb
jns
inc
jb
loope
test
enter
scas
lock
sub
mov
arpl
sub
pop
jecxz
or
ret
in
lcall
aaa
pusha
or
insl
orl
jbe
jle
notl
jns
xor
add
dec
into
scas
pop
out
sti
call
adc
js
lock
nop
addr16
mov
mov
push
mov
test
les
enter
mov
cmc
and
lods
mov
push
out
setae
sub
fdivl
push
repz
outsl
xor
mov
pusha
push
mov
sbb
jbe
inc
jbe
mov
mov
mov
xchg
inc
jnp
mov
dec
ffreep
pusha
mov
mov
and
outsl
stc
test
pop
xorb
pop
int
push
je
mov
test
and
in
pop
test
mov
mov
lea
jnp
pop
add
and
int
jbe,pn
inc
cmp
sbb
mov
fdivl
pushf
jnp
leave
xor
xor
xchg
mov
jno
adc
pushf
fwait
arpl
mov
lcall
mov
pop
ficompl
sbb
pop
fnstcw
fld
mov
mov
pushf
aam
mov
int
sbb
mov
pusha
sbb
mov
or
mov
leave
jnp
push
popf
out
addr16
lea
pop
inc
push
nop
fstpl
push
lcall
int3
push
adc
or
pop
dec
ljmp
negb
sti
pop
loopne
dec
cld
xor
pusha
add
out
insl
imul
fcomip
lret
shlb
pop
cmp
cmpsl
sarb
xlat
outsl
sbb
enter
sarl
lcall
test
fcmovne
xor
fcoms
jecxz
dec
jnp
fcmovb
adc
sbb
jo
pop
test
lds
sub
fnsetpm(287
fsubs
lret
scas
je
mull
into
and
aaa
dec
dec
leave
pop
add
xor
push
mov
lret
int
adc
inc
push
enter
sbb
subb
cmp
outsb
cs
mov
mov
pop
jb
pop
and
std
cmc
cmc
cli
xlat
or
cmp
mov
adc
xor
imul
in
cmpsl
jbe
sti
pop
push
pusha
pop
into
pop
stos
sub
ds
and
mov
mov
xchg
jnp
outsl
movsb
xor
mov
out
stos
pop
jmp
loop
sub
sub
push
and
xchg
punpckhbw
out
inc
jne
pop
cmp
call
xor
ret
jbe
imul
mov
imull
mov
cld
mov
repnz
cmp
int
ja
inc
movsb
and
imul
or
mov
lret
movsb
repnz
push
lcall
sub
fiaddl
adc
daa
inc
mov
inc
loopne
inc
inc
push
mov
mov
jmp
test
insl
add
jle
shlb
jb
incl
pop
add
xchg
outsl
imul
out
or
add
je
ljmp
cmpb
ljmp
jne
pop
inc
mov
in
pop
or
adc
cmpsl
in
sub
ret
pop
int
xor
push
enter
dec
jns
inc
xor
fcoms
sahf
aaa
push
pushf
push
out
cmp
xchg
loop
outsb
or
pop
ljmp
lahf
or
xchg
lock
mov
pop
es
ss
push
sub
dec
push
xchg
loopne
lcall
adc
popa
push
xlat
add
adc
push
imul
cltd
add
adc
sub
test
ret
mov
dec
and
cwtl
sub
in
cmp
push
fbstp
mov
pop
rcrl
push
call
jbe
rcr
clc
lahf
jnp
xor
dec
jns
dec
test
repz
out
and
cmp
stos
ret
jne
cmp
inc
push
cmpsb
lcall
sub
roll
xor
ljmp
loop
dec
pop
mov
fs
mov
enter
fbld
add
call
movsl
mov
mov
cmpsl
out
sub
fs
inc
in
outsl
dec
mov
jne
cli
fucom
mov
cmp
push
jl
push
test
sbb
rorb
nop
das
dec
cmp
mov
and
or
test
jge
std
sbb
jmp
mov
xchg
outsb
or
dec
xchg
lods
mov
mov
repz
xor
mov
shl
push
adc
nop
xlat
mov
xchg
and
mov
mov
aad
sbb
sbb
in
cmp
push
push
ror
dec
in
jb
mov
pop
and
lea
fwait
mov
mov
add
test
mov
adc
int
sub
insl
or
push
pop
fmull
bound
loop
imul
repz
sbb
pop
ljmp
or
mov
mov
jecxz
fildll
daa
popa
mov
xchg
dec
dec
jecxz
arpl
iret
push
cmp
int
pop
and
stc
fdivl
or
fsubs
xchg
add
pushf
insl
sbb
into
outsb
push
inc
int
mov
dec
lds
test
sbb
test
lods
shlb
fwait
inc
cltd
jne
rclb
jl
pop
mov
cmp
daa
test
mov
imul
adc
jmp
stos
sarl
movsb
shll
sbb
push
cmp
xchg
dec
xchg
xor
mov
xchg
xchg
pop
dec
or
push
aad
loop
cli
in
in
repz
mov
int
jecxz
test
mov
nop
mov
pop
test
fildl
and
adc
cmp
shrb
movsl
cwtl
lahf
repnz
xlat
pushl
push
repnz
sbb
inc
or
popl
xchg
fildl
in
scas
out
xchg
inc
jl
sub
loopne
cmp
jg
lcall
xor
jl
fsubrs
pop
jo
inc
js
cmp
jno
icebp
sub
mov
aad
arpl
sbb
xchg
pop
lcall
aaa
push
out
xlat
pop
or
out
xor
andl
mov
rclb
and
ret
dec
mov
jg
setge
les
icebp
ss
xchg
in
adc
pop
add
push
sub
arpl
repz
sbb
add
cmp
sbb
mov
out
inc
pop
ret
lahf
or
pop
cmp
cmp
dec
int
jle
xchg
jle
lods
icebp
cwtl
jl
aad
testb
subl
sbb
pop
movsl
in
out
popf
jb
inc
xchg
jbe
rcrl
addr16
lret
push
dec
loop
test
cmp
rcll
or
inc
inc
jg
popf
ror
nop
aad
push
hlt
inc
outsb
cmp
jmp
jno
rcrl
xchg
sbb
out
pop
mov
mov
cmp
cwtl
mov
sbb
xor
es
iret
lods
enter
cmp
jnp
mov
sub
lret
mov
addl
xchg
lds
pop
fmul
pusha
sub
cmp
mov
cltd
hlt
mov
pop
or
test
pop
iret
cwtl
xor
adc
sub
into
fwait
mov
sarb
pusha
sbb
les
cmc
jbe
inc
cmc
inc
sti
sub
hlt
inc
push
jle
ss
add
imul
xor
xchg
popa
xor
push
mov
popa
or
scas
scas
shl
mov
js
cli
push
inc
ss
adcb
push
test
aas
push
push
xor
test
sub
push
xchg
pop
jo
leave
inc
iret
add
push
xor
xchg
stc
paddsb
xorl
push
pushf
jne
push
sbbb
mov
or
sbb
jmp
pop
mov
data16
adc
mov
mov
pop
mov
pop
loopne
adc
call
mov
sub
xchg
mov
pop
jmp
sub
inc
xchg
mov
imul
in
cmp
xchg
dec
out
and
in
test
mov
mov
lods
cmc
scas
jb
fwait
fwait
out
xor
ss
dec
call
cmp
inc
repnz
xor
mov
xor
andl
test
aad
pop
out
push
hlt
push
inc
push
ret
std
or
test
cmpsl
int3
mov
pusha
push
mov
lret
gs
repz
adc
sub
add
sub
mov
inc
outsl
out
mov
jnp
test
add
orl
adc
sub
aam
js
in
ret
push
sub
aam
push
aaa
sbb
push
std
or
add
mov
push
fdivrs
inc
insb
cmp
mov
stos
fwait
cmp
jle
testb
ljmp
ljmp
movsl
into
and
fwait
or
scas
std
sarb
mov
ds
inc
enter
aaa
repnz
mov
scas
jbe
clc
leave
adc
shll
rorl
movntps
jg
adc
dec
dec
jbe
dec
add
adc
fcmovu
mov
pop
cmpsb
fstps
mov
cmp
adc
pop
in
adc
fstps
and
fistl
adc
cmp
jmp
incb
mov
jne
pop
pop
mov
mov
inc
push
pop
cwtl
dec
mov
xor
or
sbb
imul
movsl
mov
push
inc
inc
and
out
iret
push
jnp
mov
aam
mov
daa
nop
cmp
lcall
jb
pop
gs
mov
cmp
sarl
adc
cmp
jge
jns
sbb
addb
in
adc
popa
movsb
test
lods
decl
fistpll
negl
shlb
or
pushf
sub
int3
and
and
sbb
sahf
call
mov
mov
movsl
push
and
or
cltd
and
push
mov
aam
shrl
out
int3
lods
mov
stos
push
sarb
push
arpl
jle
add
jg
out
in
mov
jl
in
jp
clc
mov
fimuls
js
push
inc
mov
dec
dec
xorl
sbb
mov
int3
sub
adc
pop
sahf
movsl
insb
shl
push
ret
subb
cmpsl
data16
push
adc
pop
mov
in
jo
or
push
ds
xchg
int
sbb
jp
jnp
push
iret
sub
ss
call
push
cmpsb
xchg
inc
loopne
pop
sti
lods
dec
xchg
dec
rcrl
and
xor
outsb
pop
fdiv
pop
leave
and
mov
nop
fs
test
test
cmp
cmp
loope
lock
push
lods
mov
int3
xor
and
xlat
or
mov
fnstenv
adc
out
aaa
aam
out
scas
out
push
test
push
outsb
sarb
pop
in
scas
jle
outsb
cmp
and
cld
sub
sarl
ficompl
stc
sbb
sub
xchg
mov
out
xor
lea
imul
jmp
sub
xchg
std
mov
cmc
aam
xchg
or
or
mov
add
inc
pop
mov
cmp
and
orb
sbb
add
mov
js
xor
test
mov
xor
repz
icebp
add
inc
dec
pop
and
or
or
popf
add
ds
xor
int3
mov
xchg
repnz
mov
stos
mov
repnz
lods
lock
fs
arpl
fildl
fidivrs
add
cltd
mov
mov
mov
dec
adc
loop
enter
out
popf
sub
mov
xor
mov
out
shrb
jbe
mov
jecxz
lea
push
mov
sti
inc
daa
push
push
and
mov
or
jmp
pushf
pop
sar
dec
cmpsb
jnp
inc
dec
inc
mov
xor
out
jns
divl
jb
sub
cs
lock
dec
xor
push
icebp
adc
xchg
int3
sub
fnstcw
sahf
lret
mov
mov
xchg
pop
jbe
add
adc
dec
loopne
call
mov
dec
pop
test
cli
push
xchg
shll
fdivs
xor
mov
or
daa
lahf
mov
dec
cli
in
cwtl
add
jb
lds
or
icebp
mov
int3
push
ljmp
cmp
mov
mov
or
aam
cmp
xchg
inc
sub
mov
dec
lods
or
outsl
sbb
stos
push
inc
or
pusha
stos
pop
into
sbb
jle
push
aad
mov
mov
sbb
xchg
ret
outsl
cltd
fsubrl
cmp
xchg
fiaddl
cmp
aas
push
mov
cmpsl
shrb
sbb
lcall
scas
cld
shlb
clc
inc
gs
mov
scas
cmp
xor
mov
jmp
loope
mov
mov
shl
in
cmp
outsb
mov
sub
in
push
ljmp
dec
xorb
and
shl
mov
inc
mov
imul
icebp
stos
sub
or
lods
call
sub
and
cmp
imul
pusha
or
clc
dec
dec
mov
push
cmp
jnp
ret
cmp
xchg
pop
sbb
fiaddl
adc
dec
inc
ljmp
add
aad
fldt
mov
add
sub
jp
mov
pop
fwait
or
lods
cs
dec
cmp
popa
push
in
das
sbb
dec
dec
int
mov
add
hlt
orl
dec
mov
stc
arpl
jecxz
inc
and
xor
xchg
cmp
test
push
ds
ret
inc
in
cld
adc
inc
scas
jg
in
or
cmp
cmpsl
in
push
cli
jnp
popa
cmc
sbb
and
inc
fmull
fnstcw
rolb
in
out
mov
adc
stc
cmp
call
push
mov
lcall
jg
iret
outsb
into
jle
test
and
dec
orb
push
adc
icebp
adc
imul
lcall
jnp
mov
imul
xor
jb
mov
fidivrs
pusha
xchg
fidivrl
lret
in
movsl
ret
stc
dec
xchg
lea
sti
pop
inc
xchg
lea
sti
jnp
incl
jg
and
sub
les
cwtl
aas
mov
aas
xchg
inc
xchg
xor
add
stos
adc
std
inc
mov
lea
iret
pop
xor
mov
xor
or
pop
mov
push
mov
mov
jnp
fsubrp
cs
rorb
xorb
sub
outsb
xchg
aad
push
ss
mov
pop
adc
inc
push
roll
ss
mov
cli
xor
or
insb
stos
jo
pop
jae
mov
or
push
mov
ds
cmp
push
or
pop
sbb
push
ret
sti
cmp
xchg
in
iret
inc
cmp
adc
dec
jb
mov
mov
and
int
dec
mov
mov
jg
enter
mov
xchg
fldcw
sbb
decb
sbb
sub
repnz
insb
and
test
cs
jg
pop
jae
repz
test
adc
pop
xchg
lcall
xchg
xchg
aaa
cmp
mov
pop
xor
nop
aam
mov
shlb
test
fimuls
jl
mov
xchg
jecxz
int
mov
jmp
js
dec
decl
push
lds
xchg
pop
sub
fisubl
mov
rcll
pop
sub
sub
in
cmpsb
add
xchg
xor
test
repz
rcrl
fsubs
aad
xchg
rcrl
or
mov
movsl
fldl
incl
push
dec
push
pop
push
in
mov
rcr
lds
lock
jg
jle
or
inc
cmp
lahf
mov
lea
mov
icebp
pusha
clc
jbe
xchg
fcmovu
idivl
mov
inc
mov
xor
mov
movsl
inc
or
and
test
pop
cmp
int3
lret
mov
jbe
lahf
mov
mov
js
mov
mov
ja
aaa
and
xchg
xor
cmp
dec
jae
push
jb
and
pop
xchg
mov
mov
cmp
movsl
xor
xchg
inc
add
mov
addb
out
xchg
xor
fs
pop
sahf
pop
loopne
jae
imul
add
push
cmp
jb
nop
sub
cld
sar
mov
jbe
sub
and
add
iret
inc
lcall
mov
js
into
les
xchg
push
push
or
mov
mov
mov
jnp,pt
cltd
and
mov
sbb
push
mov
add
aad
add
int3
ds
inc
push
or
lcall
mov
cmp
lcall
outsl
nop
mov
add
mov
push
gs
mov
sub
mov
sbbb
push
frstor
insb
loopne
jae
and
or
dec
sahf
sbb
jb
mov
and
test
adc
mov
nop
and
jge
cltd
xor
rcrb
mov
or
lock
inc
jns
arpl
fdivrl
pop
dec
xchg
lahf
add
les
push
xor
clc
insb
scas
cltd
ljmp
aam
aas
sbb
loopne
sbb
cmpsb
es
mov
ret
push
inc
push
mov
sbb
xchg
pop
pop
cwtl
push
movsl
andb
mov
adc
cmp
movsl
pushf
mov
fsts
aad
xchg
pop
insl
pop
fcomi
cmp
mov
ljmp
sub
addr16
push
cmp
cmp
loop
xor
or
sub
js
push
push
xchg
mov
fldl
arpl
cmpb
les
mov
sub
loop
imul
shll
jnp
fs
lcall
lds
push
xchg
adc
mov
jecxz
push
lea
mov
outsb
arpl
cmp
fnstsw
mov
ret
sahf
shl
add
mov
cmp
xlat
mov
adc
sbb
test
stos
outsb
jo
mov
pop
pop
jg
lods
cs
jns
push
fsubp
mov
adc
push
dec
clc
or
mov
cwtl
cmpsl
stc
shrl
or
push
xchg
mov
int
and
hlt
jge
es
add
insl
outsb
add
arpl
mov
mov
addr16
movsb
sbb
jmp
cs
icebp
xchg
dec
sub
clc
jecxz
cmpsl
sbb
sub
out
or
cli
sub
push
clc
pop
and
lahf
jno
das
jp
stos
xchg
fidivrl
fsts
repnz
cmc
dec
scas
sub
pop
das
push
jno
xor
adc
and
jp
push
inc
fnstcw
push
out
clc
es
rcrb
sub
dec
mov
dec
stos
dec
shr
push
lea
test
sbb
call
adc
data16
jo
gs
jbe
test
adcb
fisttpll
cmc
jnp
les
in
xor
jns
idivb
iret
push
xor
jp
pop
and
fdivrs
insl
push
mov
add
fs
sub
or
cld
icebp
outsl
mov
test
into
sahf
enter
in
outsl
ja
or
adc
fisttps
inc
call
inc
dec
out
mov
xor
int3
jmp
sub
jecxz
mov
test
js
dec
lods
mov
leave
dec
adc
dec
xor
iret
mov
leave
rcrl
add
fwait
and
and
adc
push
jbe
jb
inc
popa
ret
pop
mov
cmp
jno
cld
jg
cmp
arpl
call
out
sbb
dec
xchg
add
fisubrl
sarl
mov
scas
and
sbb
cmp
sbb
dec
pop
ficompl
cmp
ret
adc
shr
mov
push
and
inc
inc
or
inc
negl
jo
dec
pushf
pop
mov
nop
inc
das
mov
adc
inc
scas
add
popa
mov
outsb
sub
pop
push
mov
xor
xchg
add
in
push
ficomps
fwait
inc
xlat
out
jle
dec
repz
in
add
sahf
into
mov
bound
jbe
cltd
in
jnp,pt
movsl
and
loope
data16
pinsrw
mov
mov
mov
or
addl
cs
std
out
jge
jne
fisubl
jp
pop
enter
stos
or
mov
mov
push
jmp
mov
in
jne
add
pop
out
mov
inc
push
dec
and
jno
loope
mov
dec
aas
xchg
lahf
cmp
in
jmp
call
test
sub
outsb
inc
xchg
arpl
frstor
cmc
pop
or
in
and
cs
cmp
loope
and
outsb
rorb
cmp
or
xor
ss
cltd
aas
aam
xchg
pushf
repz
lods
pop
fwait
cmp
inc
addl
mov
leave
cmp
fcomps
enter
dec
xchg
pop
mov
mov
or
push
pop
xchg
mov
fs
or
mov
aad
jmp
xchg
jbe
hlt
inc
sub
das
jge
mov
cmp
cltd
sbb
lds
jae
add
add
shl
add
cmp
xor
jae
je
lods
rolb
ja
cmp
cmp
test
int
mov
movsl
pop
jle
ljmp
and
mov
inc
inc
pop
loopne
pop
jo
fmuls
push
cld
xorl
inc
std
call
add
fcmovnbe
push
mov
repz
icebp
scas
mov
sbb
add
popf
decl
mov
mov
pop
lods
xchg
cmp
divb
jo
fistl
inc
shrl
aaa
fcoms
adc
jmp
popf
dec
int
pop
out
lret
jecxz
mov
ljmp
lods
xchg
push
adc
in
je
sub
dec
push
jne
adc
fdivrl
scas
jne
cli
push
dec
std
or
jb
nop
xchg
or
dec
jl
test
xchg
or
sbb
adc
test
push
sub
inc
inc
popa
dec
loop
dec
inc
mov
subl
bnd
test
jl
stos
xchg
call
xchg
jecxz
jp
js
inc
sahf
cltd
jae
push
repz
xor
popf
dec
xchg
lods
and
add
fwait
scas
outsb
out
addr16
cmp
lea
sbb
pop
pushf
jg
es
dec
lock
icebp
mov
xor
jb
aas
adc
and
mov
ja
pusha
mov
ljmp
push
in
xor
mov
mov
add
cltd
mov
xlat
mov
jno
sti
imulb
sub
dec
addr16
add
fists
cwtl
push
jae
or
cwtl
dec
insl
movsb
dec
negl
jge
test
ss
scas
adc
jp
pop
sub
jmp
adc
test
test
xor
fsubrp
jmp
pop
clc
gs
in
mov
scas
or
lock
dec
mov
pop
bnd
aam
mov
push
repnz
addl
lock
movsl
cwtl
cmp
mov
arpl
and
lret
rclb
and
xlat
mov
insb
xor
pop
pop
pusha
sbb
pop
xchg
sbb
icebp
outsl
push
lcall
mov
inc
movsb
out
push
addb
cmp
pushl
jbe
xchg
inc
icebp
mov
mov
insb
ret
inc
or
cmc
mov
outsl
sub
fcoms
mov
filds
adc
and
jo
movsl
jno
xchg
and
pop
xor
sti
cwtl
adc
cmpsl
cwtl
jmp
mov
push
mov
pop
pop
mov
mov
xor
jbe
cmp
jle
loopne
sti
test
pusha
cltd
fidivl
push
ss
mov
dec
mov
sub
jno
push
test
jne
es
lock
and
in
clc
sbb
popa
out
mov
sub
mov
cmp
xor
jbe
insb
in
pop
arpl
ja
mov
hlt
sbb
enter
cmpsb
pop
cmpsl
icebp
jmp
inc
pop
hlt
inc
mov
adc
mov
xchg
scas
out
mov
subb
sub
arpl
mov
xchg
jge
adc
xchg
testl
mov
and
test
cmc
xchg
cmp
mov
inc
mov
push
and
call
adc
icebp
lret
movsb
sbb
mov
lea
sub
lret
mov
in
rcll
ficoml
dec
xchg
dec
mov
jge
add
inc
jo
mov
in
and
xor
push
pop
pop
pop
adc
xchg
into
insl
imul
add
rclb
jge
addr16
sbb
pop
outsb
adc
out
mov
lock
sti
jb
out
push
test
in
add
je
inc
adc
vcvtpd2dq
mov
mov
std
aad
mov
sub
popa
loop
loopne
fists
push
sbb
out
daa
mov
bnd
stos
dec
push
sub
dec
jge
lret
xor
pop
inc
jge
repnz
outsb
or
insl
pushf
cmp
mov
std
lcall
in
stos
xor
jae
sbb
xchg
and
lods
sti
stos
xchg
out
sarb
dec
xor
int3
vpmacsswd
xchg
in
int3
ljmp
stos
pop
push
jmp
cmp
add
mov
mov
lcall
das
insb
mov
pop
mov
aaa
loop
xchg
or
lds
lds
pop
sahf
pusha
arpl
push
xor
and
movsl
ja
or
cltd
push
pop
sbb
int
xorl
in
insl
and
and
cmp
cmp
hlt
ja
imul
fsubrs
sbb
jmp
mov
fwait
push
lret
leave
sbb
int
mov
cld
inc
jecxz
push
sbb
lea
push
mov
and
cmp
mov
xchg
pop
mov
popa
rcll
jae
push
aam
xor
pop
push
and
or
iret
xor
pop
and
daa
jb
ss
inc
aaa
ffreep
cmp
loopne
jae
arpl
xor
xor
push
out
test
mov
fstpl
jge
les
lea
push
lret
adc
add
and
xchg
xchg
inc
xchg
or
pop
push
sub
sbb
mov
std
rclb
cs
add
out
push
pop
lods
notl
push
shll
jns
add
int3
and
ret
mov
out
das
in
icebp
jl
and
mov
notl
cmp
loope
or
push
lcall
sarb
pushf
sti
in
lcall
pusha
lahf
xor
and
dec
pop
push
ret
imul
sub
inc
cmp
mov
scas
movsb
ror
dec
xorl
mov
stc
bound
in
cmp
inc
aas
xorl
insl
jmp
mov
mov
rorl
neg
fldt
ds
lret
xchg
lcall
cmp
rcrl
test
hlt
hlt
push
cmc
pop
pop
sti
out
je
out
das
or
push
stos
loop
inc
adc
and
sti
sub
mov
fisubrl
jge
dec
jmp
mov
mov
fnstsw
mov
test
mov
rorb
jp,pt
mov
mov
sbb
sub
into
add
repz
cmp
scas
pop
sti
ja
movsl
aas
mov
sti
test
cld
rorb
repnz
cmp
and
dec
and
addb
mov
outsl
popf
pushf
fdivl
sahf
aad
xchg
and
lcall
scas
punpckhdq
js
fadds
pop
jo
cmp
outsl
testl
jnp
in
cmp
lock
and
inc
jo
mov
and
xchg
lods
lret
lods
cli
dec
push
adc
xor
imul
xor
arpl
rcrb
push
pop
inc
scas
test
mov
pop
pop
rcl
loope
push
repz
insl
xor
and
movlps
inc
mov
lcall
mov
push
movsb
fidivl
lods
adc
ret
mov
and
in
stc
xlat
jl
es
push
aad
outsb
call
popf
mov
fs
adc
sbb
push
std
sub
adc
test
jge
jne
test
aad
and
dec
xchg
jne
ss
movl
clc
into
flds
jl
popf
sub
repz
stos
jb
test
and
fiaddl
inc
dec
in
fisubrs
pop
ret
test
mov
push
adc
pop
pop
movsl
xor
sub
jecxz
cld
test
dec
nop
inc
into
sarl
xor
sbbb
loop
inc
push
pop
xchg
test
jle
cld
push
xchg
cmpsl
dec
push
push
lret
pushf
out
cmpsl
cmp
jle
loope
mov
addr16
and
repnz
add
lds
cmp
gs
pop
cmp
xchg
aad
rcrl
jmp
sbb
adc
xor
adc
sbb
add
xchg
fldenv
adc
jge
sub
pushf
cmpsb
hlt
adc
mov
rcr
dec
in
xchg
cmp
nop
mov
push
inc
push
mov
lahf
push
cmpsl
mov
stos
jae
cmpsl
add
cmp
in
fnstcw
mov
sub
into
inc
mov
cmp
adc
lret
dec
xor
insl
and
xchg
arpl
push
mov
pop
push
pop
js
push
fistpll
lahf
xchg
push
jg
out
popf
add
mov
mov
fadds
bound
or
mov
aam
cmpl
ret
addr16
shr
sub
cmp
add
outsb
loopne
fnop
je
dec
xor
or
std
faddp
sbb
mov
pop
mov
stc
sub
out
cmp
jo
fstpt
xchg
outsb
jbe
stos
pop
add
fnstenv
mov
orb
shr
xchg
xor
jmp
cs
dec
pop
mov
mov
jle
xchg
fidivrs
xchg
push
stc
shr
fistpl
cwtl
outsb
rcll
sahf
or
bound
ds
movsb
cmpsb
sbb
and
aas
dec
inc
leave
inc
sub
in
pop
std
pop
jmp
mov
inc
jbe
in
rcrl
lods
adc
xchg
push
pop
aaa
jmp
adc
cmp
popa
push
addr16
aam
movsb
inc
je
adc
leave
rolb
sbb
in
sahf
inc
iret
and
mov
sub
xchg
mov
ror
ljmp
mov
movsl
jle
mov
pushf
fcmovne
insb
pop
add
mov
pop
ljmp
dec
push
sbb
cmp
xchg
fdivl
pushf
arpl
pop
test
mov
stos
rcrl
pop
aam
insl
out
and
pop
xchg
mov
cltd
into
ret
in
sbb
aas
jl
pushf
adc
xchg
test
loope
aad
dec
sbb
mov
add
and
inc
dec
js
mov
push
repz
sarb
push
add
cmp
sub
adc
adc
loop
lock
cmp
sbb
mov
adc
out
pop
jbe
ret
lds
lret
sub
dec
dec
fistpll
jns
dec
and
in
out
inc
or
and
lea
aad
add
cli
dec
xor
sub
insb
cs
jecxz
fsubr
push
ja
mov
or
sbb
out
mull
cmp
push
mov
das
mov
pop
push
mov
rep
sub
push
stos
ret
xchg
sub
jp
f2xm1
mov
bnd
data16
jp
inc
cmp
mov
das
mov
std
cmp
and
push
sub
mov
dec
push
lods
dec
icebp
repnz
fdivrs
icebp
stos
pop
test
ret
aas
sub
dec
aas
add
sbb
xor
out
fldl
lea
mov
and
fcos
arpl
xor
sbb
sub
inc
cmp
mov
jnp
inc
aam
cmp
cs
xchg
xlat
jle
push
fisubs
loop
lahf
in
and
inc
jb
loop
xchg
lock
fcomps
lret
testb
movq
xor
jp
and
mov
push
dec
lret
test
mov
clc
in
xchg
mov
pop
mov
pop
inc
shll
adc
std
nop
mov
mov
mov
fs
imul
ficoms
mov
inc
and
rcpps
sbb
cmpsb
sbbl
mov
push
push
loope
leave
xor
fstps
loop
adc
inc
jp
adc
pushf
adc
and
movsb
pop
sbb
cmp
or
orb
push
daa
aad
pop
stos
adc
xor
cmp
mov
mov
ss
aam
loopne
imul
out
int
add
pop
xor
fstl
std
pop
fcoms
jle
jg
cmpb
data16
inc
mov
and
sub
xchg
mov
inc
push
orl
lods
adc
rolb
add
icebp
and
js
rcll
fidivl
movl
inc
xor
sub
jnp
dec
mov
stos
movsl
xchg
pushl
xorl
in
pop
inc
push
adc
jbe
cmpsl
cmpsb
jae
and
loop
mov
arpl
imul
lods
or
xchg
mov
jp
aad
mov
push
mov
adc
xchg
test
inc
pop
jmp
mov
div
rcr
inc
mov
mov
orb
aam
in
add
dec
loopne
cltd
lret
mov
push
xor
test
cmp
fisttpll
orl
xchg
jb
sti
inc
cltd
dec
dec
daa
xchg
repnz
int
xchg
out
pop
jae
bound
pop
mov
or
sub
icebp
stos
sbb
cld
xchg
cltd
js
ret
gs
or
aas
dec
out
mov
inc
inc
lcall
jg
pop
mov
and
in
dec
lods
jo
pop
cwtl
push
jo
adc
pop
popf
mov
out
sub
mov
test
xchg
fs
mov
dec
hlt
mov
pop
adc
sub
addr16
out
xchg
loopne
aad
test
mov
sbb
jge
mov
adc
inc
ja
jp
xchg
jno
int3
cmp
lods
aaa
inc
dec
pop
cmpsb
dec
fisttpll
pop
ds
test
xchg
test
lret
sub
sarb
push
neg
jmp
mov
sub
clc
rcll
and
mov
lahf
inc
jg
push
inc
cmp
sub
cli
jg
rcr
dec
sbb
outsl
aad
jle
bnd
out
clc
test
or
fs
out
rolb
dec
into
lret
std
adc
inc
jb
scas
icebp
push
jge
inc
pop
nop
mov
jnp
mov
xchg
dec
imul
lahf
mov
push
mov
xor
mov
lods
mov
mov
mov
or
xor
fsubrl
fisttpll
inc
popf
inc
nop
in
fdivp
mov
cs
std
rcrb
jge
pop
stos
xor
adc
rcll
insb
adc
mov
cmp
lahf
outsl
icebp
pusha
dec
xchg
lods
mov
cltd
jg
mov
adc
pop
push
bound
inc
sub
les
ljmp
aad
fbld
jecxz
roll
icebp
push
jnp
pop
leave
ret
test
loop
dec
pop
fdivrl
in
mov
inc
test
das
xchg
xchg
jae
push
es
xchg
jno
dec
popa
lahf
xchg
pop
pushf
dec
call
dec
inc
ficomps
mov
cs
pop
enter
adc
loop
mov
jo
mov
and
call
and
mov
nop
jne
or
mov
inc
cmp
aam
orl
testl
in
or
sub
add
int3
push
int3
in
jle
arpl
or
and
or
fwait
mov
or
fs
into
mov
push
push
mov
stos
negl
ja
loopne
das
xchg
pop
adc
xor
loop
stc
dec
mov
and
jecxz
mov
sbb
sub
jge
pop
sub
xchg
inc
dec
dec
mov
sbb
push
movsl
sub
rorl
xchg
loop
pusha
in
add
cmp
pop
xchg
xchg
push
cld
push
shll
cwtl
inc
sub
push
mov
bound
or
push
xchg
test
jmp
lcall
mov
sbb
pop
add
repz
cmp
push
mov
gs
into
fs
mov
stos
pop
divb
fsubrl
ror
mov
pop
pop
negl
xlat
js
arpl
test
sbbl
cmpl
out
cli
cmpsb
xlat
scas
xchg
or
cltd
stc
int
sub
mov
sbb
insl
sub
cmc
inc
aas
jg
cmp
mov
jb
out
fcmovnu
aad
pop
mov
in
push
xor
loopne
push
pop
nop
cmpb
mov
or
and
pop
fimuls
mov
sub
mov
jnp
dec
mov
add
roll
pop
loope
xchg
or
pop
cli
hlt
loopne
inc
outsl
dec
xchg
adc
mov
inc
lea
daa
testl
outsb
movl
mov
dec
test
les
decb
or
dec
dec
loope
loopne
mov
pop
cmp
imul
lret
movsl
mov
jge
lret
dec
adc
movsb
fistpl
enter
push
pop
test
mov
popf
aaa
les
iret
rcll
nop
mov
push
incl
inc
push
lret
call
mov
xchg
std
jne
push
pushf
or
and
test
xchg
adc
dec
mov
aam
and
sub
xor
mov
aaa
daa
imul
test
cltd
ret
gs
jp
xor
jecxz
xchg
arpl
fisubrl
lock
stc
lahf
inc
shlb
and
jo
xchg
mov
adc
push
jge
cmp
xor
pop
sahf
xor
in
sbb
mov
pop
cmc
and
pop
mov
imul
hlt
jle
mov
andl
mov
test
sbb
fistps
sub
or
cmpb
mov
mov
insb
rolb
rorb
push
fs
rorb
push
sbb
in
ljmp
or
leave
repz
or
pop
jae
sahf
push
pushf
cli
pushf
pop
jb
aaa
mov
mov
mov
mov
lds
inc
add
fildll
repz
rcrl
bound
ret
cltd
fdivrl
cmpb
rcrb
mov
add
fistps
push
push
pop
scas
mov
leave
xor
stos
xchg
inc
out
or
cltd
dec
flds
inc
arpl
xor
in
test
movsb
aam
mov
fs
pushl
sub
loope
push
push
mov
push
push
add
or
cwtl
inc
in
icebp
pop
into
inc
repnz
or
cwtl
lea
popa
out
aaa
imul
cmp
adc
movsb
test
outsb
dec
sbb
push
xchg
jne
clc
inc
or
popa
mov
lds
loop
inc
mov
lret
add
aas
out
or
imul
dec
sahf
rcrb
enter
ds
mov
test
sbb
pop
add
sub
out
adc
enter
sbb
mov
mov
scas
dec
sub
inc
mov
in
push
rcl
cmp
or
jmp
pop
lods
mov
shll
lods
lea
jae
hlt
sbb
jbe
and
sarl
pop
orl
and
add
stc
mov
aaa
js
mov
cmp
lds
sti
int3
pop
fidivl
and
push
cmc
loope
jnp
jns
adc
push
cmp
pop
and
push
mov
test
wrmsr
mov
and
jle
sub
aad
int3
inc
clc
movl
fstpt
sahf
fcmovu
imul
sub
lcall
cmp
pop
pop
xchg
push
popa
and
out
mov
cmp
push
xor
xchg
icebp
inc
xchg
cld
push
xchg
push
dec
adc
and
fisubl
insl
idivl
in
scas
fnstenv
dec
mov
cmpb
lret
xchg
adc
cmpsl
rcll
pop
or
sub
push
fadds
mov
adc
push
lods
cmpsl
pop
mov
add
xchg
sub
sub
pusha
jo
lds
lret
lea
das
stc
in
outsb
nop
ds
cmp
scas
xor
outsb
xlat
pop
mov
in
sub
dec
lods
ds
in
arpl
ret
inc
pop
mov
enter
fwait
inc
fs
mov
push
dec
add
sahf
push
add
aas
shlb
inc
mov
cmp
sbb
sarb
sbb
jno
aas
test
aad
jno
pop
pop
adc
fbld
in
sub
fs
pop
cmp
out
xchg
insb
ficoml
push
pop
xchg
test
dec
iret
push
mov
and
arpl
add
scas
leave
push
inc
pop
ss
jnp
lret
das
pop
sub
mov
lds
cmp
ds
outsl
mov
pop
jecxz
xchg
xchg
jns
loope
mov
pop
xor
das
scas
jp
xchg
jle
jno
in
lret
xlat
test
and
mov
insb
push
push
cld
add
jno
mov
or
repnz
push
dec
xor
subl
dec
xchg
ja
call
mov
cltd
adc
inc
das
cltd
inc
adc
sbb
sbb
sub
test
loope
jmp
xor
jle
push
dec
pop
js
xchg
xchg
cmpsb
and
cmp
mov
call
ss
and
shrb
push
and
sbb
add
jmp
out
stc
mov
lahf
out
ja
add
add
incl
push
clc
and
cltd
sbbb
insb
lret
loop
dec
insb
xor
push
dec
xor
icebp
pusha
pop
sbb
push
addl
xchg
dec
int3
paddb
fldl
int
cwtl
insb
lea
sbb
xchg
iret
les
xchg
clc
xor
mov
out
and
push
xchg
sub
mov
into
mov
gs
xor
xor
test
das
mov
xchg
in
movsl
adc
mov
rol
stc
popf
xchg
and
sti
mov
lods
add
fdivs
addr16
in
in
sub
addb
in
mov
mov
pushf
mov
mov
or
hlt
mov
mov
add
ret
mov
test
xor
mov
push
and
std
stos
mov
shrb
jmp
outsl
mov
and
pop
and
pop
or
xorb
fucomip
cmpsl
outsl
stc
sub
xchg
xchg
pop
cmp
adc
movsb
pop
pop
lret
xor
mov
adc
cmp
fs
js
shrb
push
push
push
mov
sub
sbb
out
mov
in
outsb
inc
popf
movsl
add
and
add
cmp
stc
dec
push
inc
outsb
fldt
and
xchg
cmp
insl
mov
lods
mov
fldt
inc
adc
iret
sbb
jecxz
sbb
les
and
mov
stos
sbb
inc
pop
adc
fldcw
and
nop
test
inc
sub
hlt
outsb
cli
hlt
andb
add
push
jb
lds
inc
inc
dec
enter
into
mov
cmc
cmp
or
adc
out
and
aaa
mov
mov
mov
sub
sub
scas
btr
add
adc
push
pop
cmp
push
inc
icebp
aaa
out
cmc
test
xchg
lock
shlb
pop
rorb
pop
mov
push
add
or
mov
mov
arpl
popf
pop
jnp
imul
cld
and
out
xorb
jno
mov
xor
add
jno
cs
or
or
fldt
pop
ret
inc
out
jnp
fstl
dec
daa
mov
add
bound
cli
jae
mov
ficompl
icebp
and
in
xchg
les
mov
stos
xchg
add
dec
lahf
dec
movsl
fcomps
mov
or
pop
xchg
pusha
pop
inc
adc
dec
orb
out
dec
pop
and
xor
cmpsl
fisttps
vpsrld
int
cmp
dec
jo
mov
dec
scas
xchg
les
ret
xchg
out
aad
jmp
inc
adc
arpl
mov
shrb
int
imulb
clc
mov
out
dec
and
pop
add
stc
pop
add
insl
xchg
lock
test
mov
push
cmpb
add
dec
leave
mov
int3
xor
bound
pop
adc
mov
nop
adcb
test
push
xchg
mov
mov
out
lret
push
mov
jl
lcall
pop
and
xchg
cmc
mov
repnz
cmp
into
pop
mov
les
mov
mov
out
jne
out
test
and
inc
cmp
dec
shll
jne
decl
andl
pop
insl
xor
jg
into
sub
std
cmp
fnsave
stos
xchg
jp
xor
inc
fbld
out
call
mov
add
aam
mov
jmp
mov
fsts
js
cwtl
xchg
jno
jno
fs
sarl
jge
mov
push
inc
xor
ds
jb
push
sbb
adc
xchg
add
cmp
mov
cmpsl
mov
sub
icebp
mov
xchg
pop
les
mov
decl
lahf
dec
not
mov
mov
inc
cmp
push
in
das
pusha
insl
hlt
aaa
or
jbe
ficoml
enter
lock
jge
cwtl
inc
stos
out
sub
leave
lock
shll
clc
outsb
data16
xchg
mov
aaa
cmp
mov
add
cmp
jl
xlat
inc
ja
pop
cmp
mov
shrl
xchg
vmread
lock
pop
cmp
xor
inc
add
shlb
mov
pop
lods
jnp
add
mov
rorb
push
jl
out
rolb
mov
frstor
sbb
xchg
inc
mov
mov
push
test
mov
jl
xlat
sti
pop
loope
xchg
ret
sub
pusha
scas
pop
jae
movsb
ds
daa
xor
xor
xchg
data16
jp
repnz
or
filds
push
pop
div
imul
call
fbstp
inc
icebp
sub
cmp
add
addr16
mov
ret
rclb
int3
js
inc
lds
je
pop
lret
sbb
xor
pop
daa
inc
leave
loope
xchg
into
push
jae
fstps
mov
push
sbb
test
outsl
sub
dec
sub
js
sbb
sbb
adc
das
dec
jbe
jecxz
pop
fbstp
jo
scas
movsl
movsb
adc
pop
rcrb
adc
roll
clc
xchg
adc
rolb
mov
mov
stos
mov
fistl
punpckldq
mov
sbb
push
hlt
inc
mov
push
push
sti
addr16
pop
or
das
sbb
jp
rorb
inc
in
imull
add
cmpsl
pop
lahf
fidivl
jl
icebp
and
cmc
pop
cwtl
and
push
je
sbb
insb
inc
rorl
aad
push
pusha
xlat
push
insl
int3
imul
adc
xchg
dec
cvtpi2ps
subl
ljmp
adc
sub
loopne
push
jno
aam
shlb
cmp
ret
add
xor
sub
mov
fucomip
pop
icebp
fstps
cli
repz
popa
cmpsl
add
xchg
call
stc
cs
fcompl
cmp
mov
xor
jae
fmulp
and
adc
adcb
push
and
fsubrl
push
stos
test
icebp
cmpsb
xor
mov
das
jg
in
cmp
jno
dec
sub
mov
jg
mov
add
or
in
fucom
push
arpl
xchg
stos
outsl
dec
int3
stos
out
fistps
pop
sbb
sbb
or
notl
loop
sbb
fs
ljmp
test
adc
test
mov
aad
dec
in
div
adc
jmp
fwait
lret
aad
rcrl
xchg
ja
or
mov
push
jle
jnp
xlat
daa
and
fcoms
push
loopne
sbb
fadds
cmp
jp
cld
and
cmpsb
out
xchg
pop
mov
cmpsl
aad
adc
xchg
xor
xchg
ret
add
jle
loope
xchg
dec
mov
jg
mov
orb
adc
push
lods
push
push
and
adcl
sub
mov
ret
movw
adc
ja
inc
mov
push
outsb
push
addr16
adc
std
sbb
in
add
insb
pop
jno
cld
adc
inc
xor
in
mov
cltd
dec
mov
jl
mov
xor
push
cmp
mov
aad
mov
mov
xchg
and
sbb
daa
dec
mov
scas
sbb
rol
test
cltd
ljmp
and
xor
arpl
jne
mov
sahf
jmp
shlb
sahf
dec
icebp
cltd
jg
js
jecxz
fwait
aam
cmp
fsub
jb
pop
in
and
cwtl
sti
pop
dec
adc
adc
leave
daa
push
pop
cmp
popf
xor
cmp
lret
or
sbb
fs
shl
shll
fwait
in
jle
into
addb
out
leave
xchg
jmp
int
repz
sbb
and
inc
push
and
scas
cmp
xor
jbe
sbb
fwait
add
mov
outsl
imul
push
das
push
jecxz
fisubrs
enter
cmp
movsb
fincstp
rol
aam
pop
pop
jmp
mov
add
int
jge
in
stos
shll
xor
adc
adcl
jecxz
sub
mov
cltd
mov
ret
add
faddp
mov
dec
aas
jnp
jg
jno
inc
jnp
test
and
cmp
notb
xlat
mov
aas
addb
xor
push
lea
mov
mov
outsb
and
inc
push
jge
cmp
xor
daa
adc
mov
jns
jo
addl
cld
add
mov
cs
lcall
shrl
xor
cmp
dec
test
es
mov
lret
cli
mov
xchg
icebp
test
or
ret
cwtl
and
pop
movsb
or
dec
pop
ss
pop
aad
push
mov
mov
push
stc
out
inc
imul
imull
add
inc
test
aad
dec
xor
mov
pop
aas
mov
jno
jno
jnp
test
fstpl
mov
mov
inc
fwait
ret
adc
daa
add
xchg
out
cmp
dec
mov
decb
inc
aas
push
cmpsb
push
rclb
and
call
sbb
sub
push
aad
call
rclb
push
hlt
or
cmp
or
das
mov
dec
outsb
xlat
aas
inc
push
jl
inc
push
push
and
pushf
cmp
loope
pop
jbe
or
cmc
test
es
pop
cld
add
sbb
cmc
repnz
jns
mov
dec
mov
or
push
std
scas
call
sbb
mov
inc
dec
mov
mov
xlat
push
repz
inc
push
mov
jo
inc
ret
addb
pop
or
xor
sahf
sbb
mov
jo
mov
jmp
jge
lahf
ljmp
sub
push
cld
fildl
insb
sub
stos
outsb
add
cmp
push
jle
mov
shr
mov
mov
xchg
lret
jl
cmpl
sbb
scas
xchg
fidivs
cwtl
ret
mov
xor
push
insb
dec
in
and
lea
fisttpll
adc
add
incb
push
and
mov
xchg
push
jo
dec
clc
push
adc
ret
inc
lods
loope
je
mov
xlat
outsb
aam
inc
add
cld
lods
and
inc
movsl
push
jg
adc
hlt
xchg
sub
push
push
jg
cmp
sub
lret
cmp
cmp
bound
or
andl
loopne
pop
mov
xchg
aad
mov
lock
leave
lock
sti
adc
mov
sarl
pop
popa
scas
push
ljmp
cmpsb
call
mov
arpl
scas
lds
ds
cmp
cltd
push
mov
loopne
insl
xor
xor
or
scas
imul
leave
xchg
mov
stos
les
xacquire
xor
sbb
mov
shl
lods
sub
jnp
gs
dec
fdivs
ss
mov
mov
jno
shr
sub
addl
sub
ret
lea
mov
pop
xor
mov
mov
cmp
fidivs
cmpsl
inc
add
dec
and
jne
sub
and
xor
data16
pop
imul
sbb
lret
stc
push
push
cmp
or
jb
shll
aad
sbb
lcall
fxch
call
xchg
cltd
sbb
xchg
inc
inc
dec
or
nop
jl
test
push
adc
fistl
and
push
xchg
int
shl
pop
ja
adc
mov
dec
sbb
mov
inc
adc
jp
push
or
scas
and
int3
mov
xor
mov
in
rclb
leave
in
js
push
dec
dec
mov
pusha
inc
inc
mov
sbb
repz
cmp
xchg
mov
lret
in
loop
jl
sub
mov
dec
movsb
cmpsb
jg
scas
mov
sti
in
imul
mov
lds
and
nop
push
and
jl
lods
stos
into
mov
jo
sti
jne
and
push
or
out
push
pusha
ret
jmp
mov
imul
out
mov
cmc
jnp
call
es
das
lods
jmp
scas
sub
dec
je
lock
aaa
xor
gs
clc
sbb
idivb
loope
sub
xchg
dec
cld
jne
movsl
lahf
mov
or
call
adc
mulb
dec
sbb
popf
adc
scas
fildl
sub
pusha
shll
sahf
dec
lods
int3
cmp
jo
test
adc
fiaddl
aaa
out
orb
dec
loop
xchg
dec
in
rcrb
lods
ret
jb
xchg
inc
int
outsb
js
insb
mov
pop
push
sbb
lea
imul
mov
lock
adc
das
je
adcl
adc
sub
xchg
lcall
push
jge
sbb
in
popa
js
push
fdivl
stc
and
jnp
lret
imul
fmul
lret
ret
lods
rcrl
cs
repz
xorl
inc
outsl
push
cmp
mov
inc
das
es
xchg
shlb
ljmp
push
lahf
sub
mov
mov
dec
xchg
jae
push
jns
mov
cmovno
fwait
test
add
sub
js
jmp
das
pop
xlat
scas
adc
cmp
scas
int3
pop
jne
test
jle
movsb
out
out
stos
pop
mov
ss
push
bound
leave
xor
ret
sub
out
sahf
mov
stos
cmp
cmp
cs
subb
testl
add
add
and
std
mov
fsubr
xor
pop
cmpb
je
fisubrs
push
ror
mov
mov
notl
std
jecxz
inc
fidivrs
decb
jnp
pop
ficoml
imul
dec
sbb
mov
mov
ds
cmp
dec
hlt
lds
lods
fidivrs
push
inc
loop
repnz
mov
out
and
mov
sahf
in
cld
sbb
or
sub
dec
pop
sbb
push
xorl
jle
cmc
out
cmp
decb
pop
pop
xchg
ljmp
aad
aaa
in
cmp
icebp
jb
adc
pop
dec
loopne
leave
sub
mov
loope
inc
sub
pop
les
sub
xor
popa
lods
fwait
sarb
inc
nop
xchg
gs
inc
add
cmpb
xchg
ja
jo
insl
ret
clc
pop
mov
into
test
adc
mov
shrb
xlat
and
sbb
push
xor
mov
adc
add
mov
push
movsl
mov
jns
cmp
jns
xchg
gs
out
push
mov
sahf
mov
fmulp
je
push
mov
enter
icebp
mov
in
loop
bound
and
aas
xor
les
data16
std
in
mov
fst
and
jb
pop
jo
mov
mov
das
fucomip
push
sub
xor
test
fwait
inc
rorl
adc
and
hlt
test
aad
mov
dec
dec
sbb
sti
jno
andl
popa
pop
pusha
rolb
cmc
push
dec
adc
cmpsb
or
push
js
and
ror
dec
lds
mov
xchg
pop
out
cltd
mov
lods
out
inc
lods
imul
les
mov
fcoml
mov
pop
dec
push
and
cld
sahf
jns
push
mov
out
inc
out
xchg
inc
addb
push
test
clc
jbe
aas
mov
adc
inc
mov
push
cmpsl
movsl
cmp
pop
ljmp
and
into
out
mov
hlt
mov
and
mov
jnp
pusha
jne
xchg
fwait
dec
hlt
push
jns
jp
push
sub
add
add
adc
sahf
cmp
mov
inc
sbb
enter
ljmp
insl
add
mov
test
xchg
fnsave
jbe
outsl
sbb
xchg
test
mov
push
lret
cmp
xchg
push
sub
push
inc
jge
pop
push
mov
pop
sub
pop
pop
add
jae
add
xchg
xchg
test
imul
sub
jno
add
rclb
fisttpll
mov
push
cmp
pusha
mov
out
xor
push
movsb
jecxz
pop
adcl
fisttps
imul
imul
push
cmpsl
mov
xorl
or
mov
lea
sub
rolb
mov
ljmp
scas
int
push
xor
mov
repz
dec
movsl
inc
lods
mov
pop
jecxz
pop
test
jge
sbb
pop
dec
in
jo
or
mov
je
ret
gs
adc
insl
sarl
mov
mov
mov
dec
inc
sbb
ss
or
insl
js
add
fwait
nop
movsb
enter
jno
pop
jl
ret
cmpsb
push
adc
sbb
push
sub
in
sub
pop
push
lcall
inc
jle
and
cmp
stc
aaa
lods
xlat
mov
xchg
in
jbe
loop
fistps
adc
lods
xchg
sbb
add
lock
add
sub
jno
sub
das
xchg
pop
sbb
xchg
cwtl
jge
mov
sub
cmp
ss
pop
pop
push
lds
andl
fxtract
cwtl
out
bnd
lahf
lds
clc
sub
push
and
sbb
and
xchg
inc
xlat
mulb
cmp
test
push
data16
cmp
test
inc
xor
repz
and
mov
push
jae
js
push
sub
shll
push
sub
sub
fnstenv
inc
mov
inc
mov
bound
sub
in
and
push
dec
push
je
lahf
pop
add
fists
mov
xchg
ficompl
fdivs
roll
pop
shlb
fwait
jge
mov
iret
cs
outsb
dec
pop
jo,pn
xchg
ret
dec
loop
push
imul
mov
mov
jo
fcmovu
sub
dec
inc
in
ret
xchg
mov
dec
stos
push
or
xor
xor
jecxz
push
pop
add
test
rorb
cs
enter
adc
in
loopne
and
cs
lcall
rcrb
insl
sub
lea
cmc
aam
lret
ss
cmpsb
push
mov
jbe
mov
xchg
or
mov
mov
xchg
jge
push
push
push
stc
dec
sbb
add
inc
jle
push
jle
or
add
push
pop
xchg
fbstp
lods
push
movl
stos
cwtl
cld
lret
imul
xor
cmp
xchg
jmp
sbbb
push
mov
mov
insl
cmpsl
sub
loope
js
gs
inc
pop
addr16
movsl
and
push
gs
sub
and
ljmp
or
out
and
je
mov
jbe
in
push
xchg
sub
or
adc
movsb
bound
dec
cli
pusha
mov
push
pushf
adc
cmpsb
sub
jle
test
mov
lret
cs
cltd
push
lcall
in
mov
xchg
scas
xorb
insl
jg
mov
std
std
jbe
xrelease
fcomps
inc
repz
out
add
push
inc
mov
cmp
and
pop
pusha
inc
push
mov
rclb
mov
mov
cmpsb
ja
inc
mov
pop
iret
cmpsb
pushf
add
sti
movsb
es
or
out
sbb
out
aad
std
adc
orb
out
add
pop
stos
sub
nop
or
mov
aad
int
inc
loop
stos
and
jo
dec
std
inc
in
subl
loope
in
dec
cmp
and
cmc
int3
lahf
xor
out
push
data16
xchg
rorb
and
nop
aaa
push
iret
dec
mov
pop
loopne
dec
jl
ret
out
rorb
sub
jle
fadds
pop
call
mov
test
idivl
push
les
cmovle
cmpsl
sbbl
les
in
xchg
and
and
test
dec
and
aas
push
popf
imul
cltd
pop
and
popa
sti
insl
push
push
cmpb
mov
mov
dec
fwait
cmc
xchg
stos
mov
pop
mov
and
mov
and
stos
add
sbb
mov
push
outsb
dec
jle
je
push
addb
out
mov
aas
jo
cltd
rclb
rcl
mov
pop
inc
jo
mov
xchg
mov
cld
fs
dec
mov
pop
or
xchg
lret
and
stos
push
imul
sub
cmp
sub
fs
cmc
aam
mov
pop
jnp
add
insl
adc
mov
xor
sub
repz
mov
cmp
lahf
mov
imul
mov
cmp
mov
adc
sbb
xorl
xlat
fimuls
jne
lcall
xchg
out
xchg
data16
sahf
dec
das
cmpsb
or
jb
lea
push
pop
ret
add
cmp
ret
mov
sub
iret
pushf
cmp
fidivrs
lds
sbb
lock
dec
xchg
sbb
shlb
mov
xchg
out
lea
mov
cmpsb
and
pusha
mov
leave
out
sahf
xor
sub
push
pop
test
sub
cltd
addr16
bound
dec
push
lahf
sbb
adc
or
and
xchg
fdivrs
xchg
jo
out
add
dec
cmp
pop
xor
pop
sub
jns
xor
xchg
mov
mov
pop
lret
dec
push
es
inc
outsl
mov
adc
sbb
test
lods
cmp
mov
and
mov
repnz
fistps
and
scas
into
add
stos
stos
pop
stc
push
outsl
bound
xchg
call
inc
das
lea
and
outsb
fwait
jge
sub
fisttpl
pop
pop
lret
xchg
cmp
flds
aaa
ffreep
mov
push
decl
pop
ret
shr
pop
and
mov
mov
pop
and
sub
cmp
ficompl
and
mov
sub
inc
cmp
aas
add
in
test
enter
lds
dec
lds
xor
dec
jl
sub
lret
sti
sub
aam
push
in
dec
scas
cmp
fcomp
add
or
icebp
repnz
mov
sub
adc
sti
mov
lods
into
cmpsl
ja
mov
mov
scas
sub
cmp
cmp
sbb
adc
mov
lret
lds
mov
cli
xchg
clc
movsl
add
add
test
sbb
mov
lods
cmpsb
adc
inc
push
dec
inc
lcall
cmp
push
push
jbe
jb
jmp
repz
sub
fwait
bound
iret
shl
push
dec
fwait
ljmp
add
fdivrs
add
mov
adc
mov
cwtl
sbb
jne
mov
xchg
out
mov
mov
cltd
jb
rolb
stos
das
or
nop
insb
mov
add
mov
push
inc
sbb
or
shll
push
xchg
repnz
imul
int3
jne
fbstp
mov
bound
fwait
lret
outsb
dec
lret
mov
push
cmp
repz
icebp
sbb
out
mov
or
push
sbb
inc
sub
iret
and
jns
mov
repnz
dec
dec
fdiv
ss
insb
gs
lea
es
mov
mov
sub
iret
cmp
xchg
jp
ja
subb
inc
jne
inc
out
shrl
fnstsw
mov
bound
mov
inc
movl
sahf
xor
sub
dec
mov
loop
repnz
add
inc
adc
jnp
mov
ja
xorb
or
sbb
and
cmp
pop
adc
sub
push
ljmp
or
mov
sti
sub
out
dec
or
jp
and
and
or
sub
stc
pop
adc
lods
ret
mov
or
pop
popa
mov
fsubs
inc
jl
loop
iret
iret
movsl
lods
enter
lcall
jecxz
xor
jns
es
sar
inc
and
ja
mov
inc
sub
push
sub
adc
xor
notb
mov
mov
dec
jns
cltd
adc
mov
mov
push
push
add
outsl
repz
repz
fisubl
mov
popa
loope
jnp
pop
xchg
xor
mov
icebp
cmp
sub
and
out
or
out
pop
pop
jmp
dec
loope
ror
push
push
andb
aaa
repz
movsl
and
mov
jne
pop
hlt
dec
scas
bound
test
cmp
mov
popf
adc
dec
out
fwait
insl
mov
pop
mov
mov
out
sbb
arpl
xor
arpl
pop
std
aas
loope
aaa
xchg
and
jb
call
add
or
enter
dec
test
in
lret
fbstp
imul
das
pop
mov
xchg
mov
xchg
fisttpl
push
jno
push
sbb
add
or
sbb
rorl
or
dec
ror
sub
jp
sub
and
lock
les
xor
jge
sbb
jmp
pop
push
lds
pusha
pusha
fs
dec
push
pop
cmp
jbe
loop
outsb
inc
mov
jl
mov
mov
sub
call
mov
push
jnp
out
mov
fcmovnb
aaa
push
xor
out
test
mov
pop
inc
test
jbe
pop
mov
sub
out
lock
sti
fldl2e
cmp
adc
cmp
ljmp
ss
inc
dec
fwait
sub
fdivl
xchg
cltd
fnstsw
js
es
cmc
lock
gs
mull
and
shrb
out
mov
inc
jp
sub
or
fwait
or
daa
ret
dec
xor
pop
jb
cmpsb
scas
int
sub
mov
fists
rcl
loop
in
dec
or
out
mov
and
or
fbld
xchg
test
jne
nop
pop
inc
adc
xor
fstl
push
xor
das
mov
test
xorl
dec
lret
idivb
mov
pop
outsb
rclb
xchg
insl
push
add
loop
and
pop
inc
push
call
cltd
mov
push
push
push
mov
std
push
mov
aaa
outsb
lret
int3
sub
lods
shll
test
rcrb
aas
int3
lods
or
xor
fisubs
jne
popa
loopne
add
jle
nop
pushf
push
or
movb
neg
dec
push
test
xor
inc
mov
fadds
adc
insl
fst
inc
outsb
aam
fldl
add
xchg
pop
notl
inc
rorl
ljmp
xchg
pop
aad
jne
nop
cmp
mov
mov
pop
pop
push
sbb
lahf
cmp
push
jge
cmp
mov
gs
lea
sub
hlt
xchg
lret
ss
roll
ret
sahf
mov
adc
in
mov
add
lahf
sarb
pop
popa
push
lds
fdivrs
inc
push
adc
cmp
pop
adcb
gs
push
call
pop
test
mov
mov
mov
xchg
aaa
pushf
pop
xchg
sub
hlt
fsubr
mov
popa
jb
iret
jns
or
das
push
sbb
rcr
jb
clc
xor
enter
nop
jbe
lcall
dec
inc
fs
aas
and
push
and
das
mov
rcrb
mov
sub
test
pusha
ret
insl
mov
inc
insl
movsb
dec
stos
shl
xchg
out
dec
push
into
jo
clc
mov
xor
mov
fbstp
cmp
and
jl
dec
mov
cmpsl
jmp
insb
cli
pop
rorl
push
imul
xchg
pop
push
out
add
xchg
mov
popf
mov
punpcklbw
mov
mov
jmp
or
outsl
push
xchg
jl
jmp
mov
xchg
int
stos
push
lret
ret
sahf
jne
mov
pop
lahf
xlat
or
lret
insl
xchg
or
inc
dec
xor
inc
ror
fs
test
mov
mov
xchg
jecxz
scas
ljmp
push
test
mov
or
pop
rolb
xor
push
jmp
pushf
orl
mov
negb
xchg
cmpsl
cli
adc
or
aaa
add
push
add
roll
pop
sbb
xor
mov
rclb
mov
inc
push
test
jmp
mov
scas
jbe
adc
pop
data16
cmp
iret
pop
sti
lea
test
push
mov
add
je
in
clc
sub
and
in
lea
push
xor
popf
dec
je
and
nop
das
inc
lcall
movl
lret
adcl
and
sahf
in
mov
cs
cmp
and
or
adc
cltd
out
inc
lret
popa
daa
cmp
clc
inc
pop
mov
xor
ret
or
insl
jge
test
lods
push
xchg
adc
inc
sbb
cmp
sbb
sub
out
rcrl
jg
xchg
xor
push
push
mov
dec
test
rclb
idivb
sbb
xor
stos
rolb
and
jg
dec
jecxz
xchg
je
je
shll
loop
scas
pop
mov
arpl
add
and
pusha
inc
jae
fadds
push
or
inc
xchg
jge
jnp
into
hlt
xchg
add
out
mov
loop
fs
or
insb
mulb
xor
xor
push
sbb
cmp
cmp
fisubl
push
pushf
or
sub
mov
cltd
sbb
sbb
imul
inc
movsb
enter
fimull
adc
add
fmul
ljmp
pop
jmp
push
mov
cmp
inc
cmc
sbb
out
add
andb
das
pop
repz
inc
sarb
and
mov
out
mov
addr16
mov
out
mov
pop
stc
daa
mov
sbb
push
jmp
les
pop
out
icebp
pop
add
fwait
xchg
lahf
call
lahf
test
jns
xlat
mov
out
sub
push
shll
loop
mov
out
loop
ss
dec
mov
test
andl
repz
ljmp
pop
xchg
mov
xchg
lcall
aaa
xchg
ljmp
mov
arpl
mov
fisttps
rolb
and
and
inc
pop
shll
rolb
insb
push
scas
dec
xor
mulb
lcall
hlt
cld
xchg
jns
or
jbe
mov
orl
jg
fists
push
shrl
in
repz
roll
std
or
or
fcos
cmc
das
dec
popf
mov
adc
mov
ds
in
fcompl
adc
repz
shll
addl
rorl
subl
sahf
xchg
fwait
xlat
sbb
addl
jno
jecxz
pop
and
scas
popf
or
leave
gs
and
inc
sub
pop
sub
test
imul
repz
loop
xor
push
lock
outsl
mov
or
sbb
push
push
imul
mov
push
mov
mov
mov
xor
inc
jae
or
jno
push
roll
ds
inc
into
test
push
jg
decl
test
lods
adc
push
sti
xorl
mov
fwait
icebp
movsl
rol
leave
sbb
leave
movl
mov
pop
cltd
les
push
or
test
xchg
repz
pusha
xchg
jns
sbb
push
insb
pop
pop
out
es
test
inc
clc
pop
xor
out
sbb
stc
aam
and
loop
addr16
adc
mov
int
rorb
fs
pushf
imul
fs
inc
leave
jne
jg
in
out
inc
and
js
adc
push
or
pop
jmp
mov
in
push
xchg
movsb
jg
cmpsl
mov
pop
xor
mov
jl
bnd
imul
sbb
lea
mov
and
lcall
ret
xchg
subl
call
jmp
rorb
pop
pop
fwait
test
dec
adc
inc
inc
jmp
aaa
or
movsl
mov
ret
rorb
aam
push
jno
dec
sub
testb
icebp
jno
cltd
and
cmpsb
and
mov
dec
push
int
xchg
fbld
adc
nop
sub
decb
gs
enter
pushf
cmpsb
xchg
mov
repnz
pop
pop
mov
lret
sub
push
pop
shll
push
into
jb,pn
xor
jbe
jmp
fistl
and
jo
into
out
call
dec
push
pop
cltd
or
lds
test
or
cmp
or
cli
loopne
sbb
adc
ds
dec
dec
outsb
in
pop
sub
fistpl
int
mov
lea
loop
xor
sahf
push
js
cmpsb
lcall
lock
xchg
out
sbb
sarb
add
imul
mov
loopne
mov
scas
test
jne
imul
movsl
sbb
movb
lret
and
lret
dec
or
mov
add
ss
stos
lods
mov
jns
ja
mov
cld
out
stc
lahf
call
adc
push
ljmp
cmpsl
cmpsb
push
inc
in
pop
das
or
sub
xor
dec
pop
dec
daa
call
rol
shr
inc
xor
add
mov
outsb
ja
aam
cli
cmp
mov
mov
ljmp
aaa
aas
dec
sbb
mov
scas
cwtl
dec
shl
cli
xchg
mov
js
sub
and
sbb
test
lock
data16
jge
mov
fwait
pop
pop
push
inc
dec
test
push
cs
arpl
fsts
cmpsl
clc
dec
add
insb
dec
or
xchg
popl
ret
adc
lea
lock
dec
push
pusha
jecxz
mov
scas
movsl
push
mov
mov
aam
fildll
xor
xchg
outsl
xor
mov
adc
xchg
mov
push
inc
jnp
addr16
dec
cmpsb
xor
test
js
mov
push
pusha
movsb
insl
sub
lods
nop
or
rolb
out
fidivs
xor
das
xor
testb
arpl
cmp
movsl
int
hlt
mov
xchg
mov
xchg
mov
jae
pop
jo
xchg
xchg
mov
mov
xchg
int
mov
aad
adc
shrb
mov
mov
jno
fcomip
or
mov
scas
jae
addl
nop
jne
mov
cmp
push
cmp
mov
sahf
ret
lods
imul
add
sub
pop
das
xchg
mov
cmpsb
aas
jns
mov
and
push
jle
jb
cmp
div
scas
sti
jae
adc
lahf
cld
jp
xchg
daa
pop
mov
jmp
lods
mov
pop
mov
pop
int
test
notb
iret
adc
push
jb
in
outsb
outsl
outsl
mov
sbb
rclb
insl
add
stos
push
xchg
jne
jno
or
in
and
lret
jmp
jp
xchg
xchg
adc
test
inc
aad
leave
stos
xor
pop
push
test
or
mov
test
push
lods
pop
push
cltd
dec
lods
outsb
inc
add
movsb
sbb
xchg
icebp
mov
pushf
es
push
popa
out
cmp
cmp
push
or
ja
jbe
xchg
dec
clc
enter
inc
mov
pop
sbb
divb
push
fsubs
adc
aas
or
ljmp
push
xchg
outsb
lea
and
and
es
mov
ret
adc
jbe
or
inc
movsb
stos
sub
dec
in
jb
lods
out
mov
add
mov
or
icebp
stos
loopne
push
or
push
push
pop
inc
pop
js
add
loope
pushf
jnp
mov
adc
adc
lret
fildl
repnz
or
test
xor
lret
xchg
movsl
jp
sub
and
push
int3
pop
ret
cli
jle
and
push
sub
shll
jnp
pshufw
addr16
out
jecxz
xchg
movsl
in
cmpsl
movsb
in
scas
in
dec
adc
add
cltd
scas
dec
adc
jno
sbb
movsl
hlt
mov
lahf
fcoms
adc
test
sub
pop
add
psllq
data16
jp
xchg
repnz
fadd
addr16
sub
lock
jmp
xchg
jmp
push
sahf
dec
cmpsb
jne
inc
mov
mov
and
insl
test
sbb
cmp
or
cwtl
pop
leave
loope
jo
cld
aas
adc
shll
sub
and
jo
pop
push
test
pop
add
out
mov
mov
dec
cmp
mov
jmp
jbe
scas
bnd
push
push
xchg
enter
jns
and
shlb
push
xor
pusha
pop
push
out
rcrl
popa
aas
or
stos
cli
cmp
incl
push
or
add
xlat
mov
and
xor
jmp
les
jb
mov
mov
add
repz
int3
pop
xchg
popa
lock
into
adc
push
mov
jge
pusha
cwtl
enter
lea
inc
add
jo
idivb
call
inc
sub
adc
scas
ret
sbb
xor
dec
sbb
ficoms
aad
jae
and
adc
push
hlt
xor
dec
insb
pusha
into
or
fucom
pusha
int3
je
push
mov
push
cmp
add
xchg
and
test
xchg
jg
ret
adc
xor
jge
icebp
daa
cmpb
fcomi
sbb
sub
ret
outsb
cwtl
xchg
inc
cltd
add
loop
int
jecxz
shl
push
cmc
pushf
js
mov
inc
sbb
and
ds
ret
jb
and
mov
imul
cmp
aam
fistl
adc
dec
mull
add
out
jno
aas
ret
int
loopne
int3
pop
cmc
mov
xor
roll
jbe
and
mov
dec
xchg
push
pop
jae
daa
int3
aas
and
or
rclb
iret
adc
jbe
or
add
int3
aad
dec
rolb
pop
leave
adc
inc
pop
xor
or
push
js
sbb
adc
jle
add
ljmp
and
mov
arpl
scas
pmullw
xor
cmp
sbb
cmc
and
rorl
leave
sub
cmc
push
imull
out
test
shll
das
mov
or
in
lcall
fdivs
pop
sub
inc
mov
adc
and
fs
shlw
into
mov
push
cmp
push
cwtl
cld
jo
jmp
and
cld
ret
sub
mov
rclb
dec
xchg
mov
push
and
scas
or
fnstsw
repnz
xor
test
push
sbb
lcall
jmp
pop
mov
into
inc
xchg
push
inc
push
sub
or
outsl
mov
pushf
fistl
lock
inc
sub
adc
lds
call
push
fdiv
ret
push
mov
mov
mov
test
xchg
popa
xchg
inc
int
add
pusha
sub
aas
fdivrs
imul
jnp
je
sbb
shlb
nop
mov
mov
push
js
ficoms
push
loopne
sbbl
push
push
push
ret
jmp
notl
push
js
les
test
mov
push
data16
jns
filds
sub
add
mov
inc
inc
mov
gs
repz
mov
je
push
imul
imul
push
mov
sbb
jae
adc
or
add
orl
adc
clc
insl
imul
adc
insb
dec
in
lret
sarl
mov
xchg
subl
fsubrp
dec
imul
xor
cmc
push
sub
out
f2xm1
pushf
jns
push
ja
lock
popa
sbb
loop
push
cli
sti
dec
ret
mov
xor
movl
pop
mov
gs
stos
rol
jge
ds
xchg
cmp
mov
mov
pusha
jmp
cmp
stc
fisubs
jne
push
jbe
sub
subb
rcll
leave
cmp
dec
and
mov
cmp
jb
jg
and
dec
sub
xor
dec
mov
mov
jecxz
loope
sbb
pop
rorl
loope
cld
add
hlt
pop
sub
jo
movsb
pop
mov
jae
and
pop
and
fcmovu
div
movsl
sub
stos
sub
cmp
pop
in
iret
scas
or
push
stos
mov
sub
outsl
push
dec
sbb
movsb
outsb
adcl
pop
call
mov
fnstcw
push
andb
scas
popa
xchg
sub
sub
adc
add
lods
add
or
jno
das
stos
pop
dec
outsb
inc
bound
insb
xor
add
xchg
sub
lock
cld
pop
cli
enter
xchg
mov
sahf
mov
jmp
leave
xchg
mov
mov
xor
popl
mov
sub
mov
ds
repnz
or
popf
cmpsb
adc
jecxz,pt
test
imul
fdivrs
sub
jg
je
cltd
mov
mov
and
dec
push
stc
xor
nop
mov
loop
lret
imul
jns
xlat
jb
inc
stos
shll
push
das
sbb
movsl
jle
std
jo
lahf
jbe
xchg
roll
inc
notl
jno
jne
jbe
sbb
fstpt
sbb
movsl
loop
divl
dec
mov
xor
stc
cmp
push
inc
ss
mov
loop
outsb
xor
or
jl
aam
or
out
or
sub
loop
mov
ja
ja
adc
test
mov
add
mov
sbb
mov
lods
test
aas
int3
mov
sub
sub
pop
pop
pusha
mov
rolb
das
pop
xor
adc
lock
adc
push
js
sub
and
sbb
addl
sub
add
lahf
sub
adc
popf
adc
iret
inc
icebp
in
inc
int
mov
outsb
adc
jmp
sbb
cmpsb
sbb
daa
mov
aam
movsb
or
stos
jmp
pop
add
mov
repnz
jl
int
xchg
adc
lods
hlt
negl
loopne
cmc
inc
cmpsb
add
or
clc
push
idiv
xor
jmp
loop
and
nop
leave
and
ffreep
loopne
dec
and
cmp
xlat
jnp
and
cmp
jo
mov
inc
rcll
in
push
icebp
jecxz
add
cli
popf
je
xchg
fdivr
mov
fbstp
and
call
sbb
sti
pushf
or
mov
or
out
mov
insb
add
imul
int3
xor
negl
imul
inc
sti
lods
je
negb
jne
add
inc
in
pop
inc
cmp
ret
and
add
jne
xchg
movl
xor
and
xchg
and
pop
orl
pop
clc
sub
loope
pop
adc
inc
daa
aaa
lret
mov
adc
and
dec
inc
into
mov
mov
mov
push
push
cli
adc
out
stos
mov
popf
inc
or
sbb
jo
xchg
arpl
add
inc
insl
loope
adc
negb
lods
out
jns
add
fwait
sub
les
leave
scas
push
inc
xor
push
sub
add
movsb
push
cs
add
pop
add
inc
imul
pop
stc
dec
in
push
cmp
push
dec
das
out
pop
xor
ja
popf
push
ljmp
movb
and
dec
mov
test
jg
movsb
push
repnz
fsubs
push
and
arpl
adc
mov
notl
fisubrs
aas
mov
scas
fisubl
jbe
xchg
cs
test
sub
subl
jmp
xchg
xor
lods
imul
fcmovnb
cld
out
push
mov
or
fsubrs
icebp
mov
mov
shlb
cwtl
sub
loope
int
cs
test
ret
pushf
std
xlat
sar
dec
cmp
mov
sti
out
pop
nop
ljmp
xorl
add
out
adc
cltd
movsl
lret
cltd
adc
dec
and
addb
sub
nop
popa
jns
call
repnz
sub
and
mov
or
cld
lock
fcompl
push
and
and
adc
adc
push
lahf
les
cmpsl
mov
dec
subb
sbb
cld
sbb
nop
push
loope
test
mov
shl
adc
sub
pop
mov
fcoml
ds
sub
xchg
mov
outsl
jecxz
xchg
sarb
addl
sarl
jp
cmp
jp
and
ja
fildl
pop
ss
fdivr
ds
popa
pop
outsl
and
addr16
or
inc
iret
cmpsb
jnp
mov
or
or
pop
ret
rcrl
sub
jbe
cmp
imul
outsb
jg
cmpsl
lret
fwait
enter
sbb
or
mov
xor
mov
repz
lcall
mov
repnz
negb
jo
lea
mov
scas
cmp
push
mov
sbb
int3
jns
inc
cmp
nop
test
jnp
sub
xor
call
fcmovbe
je
pop
push
aad
scas
mov
and
push
outsb
sub
in
stos
movsl
js
jg
movsb
push
inc
jo
and
sbb
cmp
cs
loop
cmpsb
mov
aam
leave
push
sarl
xorb
mov
sbb
aaa
pop
add
aam
xor
int3
rcrl
xchg
cmp
pushl
add
andl
ret
push
loop
jge
cmc
bound
pushf
loope
push
sarl
jae
mov
pop
ret
lds
cmp
js
and
loopne
cmp
mov
push
jbe
into
push
adc
call
pushf
cmp
ds
in
pop
in
dec
dec
mov
adc
xor
ret
xchg
bound
imul
push
in
adcb
or
sbb
push
add
inc
ljmp
or
andb
out
jecxz
push
fwait
mov
push
mov
mov
dec
xchg
or
jnp
jo
es
movsb
scas
sbb
adc
fsts
sub
je
and
cli
mov
adc
pop
pusha
sub
aam
and
lds
adc
sbb
mov
mov
subb
div
cmp
std
inc
adc
jle
adc
mov
jecxz
addr16
hlt
clc
test
in
adc
xlat
xchg
jp
idiv
inc
mov
movsb
fldcw
push
mov
data16
mov
repnz
dec
cwtl
out
jne
ds
xor
adc
add
or
sbb
mov
lea
mov
sub
or
fwait
cmp
out
mov
mov
ret
sti
jl
cmp
into
test
dec
push
xchg
pushl
add
push
dec
sbb
and
idivl
js
push
imul
push
test
xchg
pop
inc
fstp
call
mov
inc
add
add
hlt
or
cmpsl
in
adc
je
out
and
adc
adc
data16
pop
mov
add
sarl
jp
ret
outsb
and
insl
arpl
test
jae
xchg
cmp
jg
adc
sbb
insb
cmp
xor
movsb
es
add
inc
repz
fisttpl
mov
mov
sbb
sbb
ss
icebp
xorl
test
mov
push
loop
lods
lret
stc
ljmp
cltd
repz
rcl
push
pop
cmpsl
sub
adc
mov
test
dec
or
imul
int3
or
jle
xchg
loope
dec
lret
xor
js
int
iret
push
repz
mov
add
mov
sarb
push
adc
mov
mov
dec
adc
dec
pushf
jno
pop
or
and
ret
les
scas
mov
mov
pusha
lea
add
jbe
or
push
icebp
push
push
cmc
add
push
xorb
out
movsl
js
cltd
xor
addr16
cmpsb
push
inc
repz
push
scas
mov
shrl
pop
scas
jg
lock
call
jecxz
ja
jp
fbld
movsb
push
jno
push
daa
lods
pushf
jne
push
mov
push
mov
mov
popa
into
loope
scas
insl
push
and
cmp
dec
loope
fcmovnb
xchg
sub
mov
sar
xchg
inc
sub
cltd
push
cwtl
fidivs
pop
les
jns
sub
push
cs
insl
mov
mov
int
mov
inc
stos
imul
xchg
ret
mov
lods
push
and
shl
cmp
hlt
or
xor
inc
push
adc
fdivl
arpl
and
inc
cmpsb
adc
sbb
fcmove
cmp
in
cmp
addr16
fcomps
mov
lds
mov
xor
and
jo
negb
jnp
cmc
into
and
test
sbb
fidivrl
add
mov
pop
inc
cmpsb
pop
cmpb
lds
mov
push
shl
dec
xchg
and
lret
adc
lods
loope
or
jmp
fbstp
jno
sbb
dec
cli
mov
aad
stos
andl
xchg
lcall
or
dec
gs
push
fistpl
push
int
hlt
push
seta
mov
pop
call
push
outsb
adc
pxor
jo
push
sub
cmp
out
sbb
jns
outsl
movsl
cs
cli
stos
or
mov
fstpl
inc
pop
xchg
xlat
and
cli
stc
mov
lock
sub
mov
push
cmp
push
jmp
or
sbb
pop
lahf
mov
jecxz
push
inc
in
pop
int3
stos
dec
ss
push
mov
inc
mov
xor
pop
or
xchg
imul
sti
aam
inc
inc
test
mov
sbb
cli
popf
cli
push
pop
inc
push
xchg
push
sub
dec
stos
xorl
lods
mov
mov
mov
nop
jp
leave
xchg
in
mov
jns
in
cmp
push
cmp
adc
stos
jb
orb
jns
gs
sub
jo
lods
pop
fs
cwtl
leave
aaa
sbbl
and
dec
pop
cmp
cmp
js
cli
adc
ret
cmp
xor
stos
testb
pop
ret
adc
inc
mov
sbb
ss
cli
lcall
movsb
mov
adc
jp
mov
add
movsl
loope
rcll
xor
sbb
iret
ss
or
pop
jg
mov
xchg
push
mov
push
jge
or
enter
les
adc
dec
addr16
hlt
pop
in
sub
inc
or
loope
jne,pn
xlat
in
mov
les
dec
inc
lock
jmp
or
pop
addl
pop
cmovnp
add
push
adc
fsubs
xchg
int
dec
inc
or
daa
push
aam
add
shrb
call
mov
stos
push
cmp
movsl
cmp
push
add
mov
popa
fiaddl
js
shl
ds
pop
xor
and
out
jge
filds
mov
or
and
rclb
daa
call
data16
push
and
repnz
fistps
cmp
cltd
xchg
jge
or
pop
mov
subl
aaa
ficompl
js
hlt
jbe
lret
cmpsl
push
pop
loop,pt
sub
addr16
xchg
icebp
jmp
in
bound
cmpsb
ret
pop
lock
insb
pop
xchg
scas
jg
and
lea
pushf
xlat
lods
pop
jge
into
sbb
ds
jge
dec
incb
push
mov
les
enter
les
paddsb
jae
fildl
xchg
mov
xor
sub
sub
xchg
inc
stos
mov
mov
and
insb
cmp
add
aas
add
dec
outsl
mov
xchg
mov
jl
fsubrl
fs
jmp
or
orb
cmpl
sbb
ret
test
xchg
dec
push
jle
or
cmp
adcl
aam
pop
mov
std
das
jle
int3
sub
xchg
dec
cwtl
frstor
pop
clc
push
add
std
dec
pop
xchg
enter
loop
inc
notl
push
xchg
add
inc
mov
fidivs
std
jbe
xchg
pop
mov
mov
dec
xor
push
orl
popa
aas
cltd
pop
frstor
adc
out
in
aaa
xor
outsl
push
jae
out
pop
push
out
xlat
push
call
mov
xchg
cmp
push
cld
inc
mov
xchg
or
cmp
lods
jns
mov
cmc
fmuls
mov
mov
pushf
mov
insl
inc
pop
jmp
dec
iret
push
jge
cmpsb
dec
std
dec
pop
add
xchg
mov
xlat
mov
ret
js
adc
stos
mov
test
xchg
adc
dec
idivb
addr16
or
mov
mov
inc
cld
clc
clc
xor
call
aaa
jae
or
cmp
iret
mov
push
stc
adc
add
push
les
outsb
pop
adc
inc
pop
arpl
pop
mov
enter
lods
insl
push
loope
add
pusha
enter
rcrb
mov
sbb
loopne
imul
stos
xor
outsb
stos
test
add
cmp
cmp
mov
sbb
fcom
fwait
sahf
negl
ret
dec
pushf
jbe
jae
cltd
insl
mov
add
clc
cld
adc
data16
bound
sub
test
inc
int3
push
push
into
pusha
in
popa
int
pop
mov
pop
mov
adc
cmpsb
loopne
jnp
call
mov
mov
and
adc
fs
lods
pop
cld
push
ljmp
stos
push
cs
in
scas
fistps
in
scas
sub
popa
pop
cwtl
fldz
jg
jmp
inc
ret
sub
in
in
dec
stc
mov
adcb
movsl
jbe
xchg
in
mov
cmp
mov
pop
rcrb
dec
mov
call
pop
testl
xor
mov
dec
add
push
xchg
ret
xchg
pop
pushl
xor
aam
enter
mov
xor
addb
xchg
stc
and
out
pop
sub
mov
adc
cltd
jle
divb
mov
xor
fiaddl
cmp
or
push
cwtl
lcall
ret
and
or
xor
cs
add
mov
push
testl
and
or
lahf
lret
cmp
inc
inc
mov
and
cmpsb
aaa
sub
and
cwtl
jae
rolb
pop
and
leave
sahf
popf
arpl
ud2
jmp
mov
loopne
outsb
lret
add
jmp
sbb
adc
mov
fstps
pop
jns
shlb
daa
jne
adc
mov
mov
xor
jno
in
fisttpl
pop
jecxz
stc
inc
syscall
sbb
js
push
fmulp
push
pop
or
sub
rcrb
mov
flds
fildll
pop
dec
les
pusha
iret
jmp
xor
push
sbbb
xor
imul
xlat
in
or
dec
je
xchg
jl
cmp
and
lret
add
add
sti
movsb
out
loopne
and
sub
sti
jae
dec
mov
and
sub
hlt
leave
mov
pop
and
into
fmulp
repnz
dec
push
sub
adc
mov
sarb
jne
push
mov
xlat
xchg
les
pop
mov
lahf
pop
enter
loopne
and
sbb
aas
dec
out
adc
inc
int
cmpsb
leave
lahf
add
sub
iret
sbb
mov
aad
into
negl
cmp
jo
mov
sbb
test
stos
add
ljmp
adc
fs
enter
xchg
push
das
mov
ror
push
shrb
push
out
cmp
jbe
sbb
adc
jmp
pop
sbb
jecxz
mov
lahf
mov
mov
lods
xor
pop
ds
imul
jg
ja
jge
aad
and
leave
cmpsb
mov
jae
sub
adc
loopne
jp
stos
ret
cmp
idivb
fldt
mov
int3
inc
xchg
mov
sbb
das
stos
insl
mov
xor
into
lds
xor
enter
aad
mov
hlt
or
insl
cltd
test
loope
andb
and
push
sbb
enter
inc
jo
leave
push
mov
nop
xorb
push
stos
sysret
inc
ud0
int3
jecxz
sub
or
sahf
jmp
jb
repnz
add
out
call
insl
mov
fstl
mov
or
inc
imul
xchg
push
sbb
fsubl
jno
cld
jae
shl
mov
ds
lds
mov
aam
rorl
je
popa
lahf
fs
aam
outsb
bound
push
hlt
pop
idivl
ret
fisubl
shrb
fwait
inc
sbb
mov
push
pop
dec
dec
mov
inc
dec
cltd
push
outsb
out
ficomps
out
ss
mov
in
and
lea
jge
cmpsl
jl
cmpb
cwtl
iret
xchg
sub
cmp
mov
fdivl
or
les
cld
cmpxchg
mov
shll
lahf
ret
inc
in
loope
inc
cltd
xchg
in
fld
insl
stos
outsl
dec
add
mov
dec
sbb
xchg
test
in
dec
scas
xlat
addr16
or
xor
sub
cmp
mov
and
mov
shl
jo
pop
insl
loopne
ret
jnp
leave
cs
jne
adc
clc
cmp
pusha
and
cli
out
xor
mov
movsb
cmp
mov
adc
clc
outsl
cs
lret
and
xor
push
outsb
cld
rep
sti
cmc
xor
sbb
jbe
test
cmp
cmp
mov
add
int3
push
insl
arpl
sub
movsl
and
inc
mov
add
or
lret
mov
adcb
push
inc
push
or
push
enter
addr16
sbbl
inc
inc
mov
jns
je
sub
leave
mov
adc
push
leave
push
or
out
in
test
fadd
addl
xor
cld
inc
xor
inc
rcrb
lahf
das
inc
jne
sub
pop
mov
int3
or
cmp
cmpsb
popf
idivl
lcall
cld
mov
pop
inc
mov
aas
lea
xor
push
pop
repz
jl
daa
ds
aam
mov
imul
adc
jmp
xor
xor
push
push
fucomp
ds
stc
fisubrs
lock
in
ret
test
jne
sub
sahf
xlat
les
addl
xchg
popf
mov
std
sub
pop
cmpsb
sub
cli
sti
jl
xchg
jnp
cwtl
out
mov
jmp
adc
jns
mov
or
je
dec
lcall
adc
je
fildll
out
xchg
insl
adc
jp
mov
adc
pop
jp
xor
mov
adc
cmp
and
add
roll
push
or
ss
popf
lahf
sub
jb
mov
xchg
fimull
or
push
dec
dec
push
inc
pop
adcb
das
pop
jae
or
insb
jbe
mov
pop
imul
loopne
jl
aad
nop
lea
push
push
mov
loope
insb
or
nop
mov
push
mov
fists
enter
out
popa
inc
and
jl
mov
gs
shl
push
repnz
std
inc
stos
cltd
or
mov
rol
clc
sbb
out
sub
ja
push
rcrb
push
fldl
shrb
mov
pop
mov
mov
das
push
mov
fmuls
pop
insb
add
arpl
mov
mov
and
xchg
xchg
out
or
fcos
outsl
leave
cmp
push
movsb
inc
nop
cmpsl
insb
ret
and
outsb
les
pop
ficoms
push
sbb
out
mov
cmc
bound
xchg
lret
fnsave
sub
mov
neg
out
or
rolb
mov
insb
dec
fs
add
das
dec
lret
call
shrl
xor
icebp
inc
jb
bound
ja
push
frstor
lea
into
push
and
cmp
pop
dec
adc
jg
ss
sub
lahf
push
cmc
cltd
inc
add
scas
inc
jbe
out
divb
inc
mov
adc
mov
add
or
or
mov
mov
and
and
rorl
cmp
and
mov
ds
mov
fadds
arpl
xchg
test
rorb
aam
pop
jl
fadd
sbb
in
dec
dec
aam
nop
icebp
mov
fwait
jbe
test
lahf
add
ljmp
add
mov
sub
loopne
adc
pop
repz
push
or
ja
jnp
push
mov
dec
dec
gs
fwait
push
mov
cmp
push
sub
push
jmp
js
rolb
aad
push
shlb
pop
int3
orl
add
mov
xlat
movsl
xor
stc
outsb
cmp
xchg
repnz
jecxz
sub
add
mov
xlat
iret
pop
mov
xor
jno
rcrl
dec
pop
jecxz
mov
popa
lret
sub
ds
cmp
rorl
in
mov
js
xor
fists
lcall
int
mov
mov
nop
hlt
cltd
mov
xor
pop
xchg
loop
xor
loop
xor
cmp
jne
cmp
lcall
jmp
push
loope
aam
inc
stc
mov
mov
cmp
adc
mov
rcrl
cmp
lods
mov
jae
mov
nop
jo
ss
inc
lds
xchg
cmp
add
push
popa
mov
mov
incl
pop
cmpsl
sbb
ret
movsb
shl
push
iret
push
outsl
mov
mov
clc
push
jmp
jbe
xor
mov
sbbl
push
push
jne
scas
sti
mov
es
push
cltd
jns
inc
pop
xchg
push
iret
mov
outsb
data16
sbb
jle
and
stos
mov
jmp
push
fisttpll
cld
jle
mov
xchg
adc
jmp
or
enter
dec
jmp
outsb
test
stc
dec
lcall
cltd
sub
dec
ljmp
sbb
movsb
fcmovnb
pop
jb
leave
dec
mov
out
dec
and
push
sarb
aad
orl
lahf
inc
push
mov
inc
out
insb
sbb
movsl
sti
lahf
jne
sahf
mov
dec
test
push
and
ret
or
xchg
jne
aad
dec
cmp
inc
sbb
aad
xor
and
sbb
call
cmp
push
bound
int3
out
js
add
stos
movsb
mov
pop
test
test
and
mov
jnp
dec
mov
lret
fistpll
dec
enter
loop
lret
mov
adc
outsl
imul
aad
stos
mov
cmpsl
sbb
mov
cmpsl
xchg
cli
insb
lcallw
loope
adc
cmp
repnz
mov
stos
push
je
push
fcmovnu
nop
loop
lret
dec
push
xor
pushf
lock
cmpb
out
sub
xor
clc
xchg
fldcw
fildll
sub
mov
sub
jne
vpmaxsw
sub
push
fsubp
shr
jg
arpl
mov
ss
push
push
inc
add
add
les
pop
imul
or
sub
sub
mov
push
pop
shll
sar
mov
and
push
and
xor
insl
cmp
sbb
cmp
and
fwait
ja
xchg
add
mov
mov
cmp
and
stos
pop
push
cli
add
mov
mov
sub
es
movsl
mov
pop
outsl
je
fistpll
mov
sub
pop
scas
push
ret
fiaddl
mov
fistl
imul
add
lcall
jl
mov
sbb
mov
mov
pop
add
jg
mov
pop
std
nop
lds
test
and
jno
xchg
jmp
dec
data16
es
iret
test
cmp
push
divl
jp
mov
xchg
insl
sbb
bound
hlt
lret
adc
mov
iret
xchg
adcb
aad
enter
or
add
xor
stc
je
mov
cmp
aaa
int
cmpl
stos
rcrb
pushf
call
or
xor
movl
xchg
jmp
movsl
jb
sti
movsb
xchg
sub
mov
loopne
mov
mov
xor
mov
cltd
sub
and
int
bound
xlat
orl
fsub
sub
jno
and
mov
pop
cwtl
enter
push
sbb
sbb
push
jp
cmp
sub
xchg
jbe
xor
out
shl
push
dec
dec
daa
call
ja
mov
and
ret
stc
scas
nop
lock
jle
fwait
sbb
je
sub
mov
les
add
xchg
mov
lcall
pop
call
jnp
push
mov
cmp
ja
cwtl
pop
mov
dec
call
js
cmp
mov
xor
scas
mov
xchg
mov
sahf
sub
mov
iret
and
lea
inc
fldl
sti
xlat
dec
jecxz
sti
out
dec
pop
jne
sub
sahf
push
nop
pusha
mov
inc
xchg
out
aad
mov
dec
js
aam
xchg
test
fs
pop
adc
cmpsl
out
add
cmp
jle
mov
and
cmpsl
fcmovu
xlat
mov
pusha
fisubl
insb
aam
push
add
out
or
lods
mov
cmpsb
cltd
jge
lods
movsb
push
sub
sbb
int3
fsubl
es
sub
jle
and
xchg
dec
and
dec
fs
pop
jg
dec
jmp
lea
jnp
stc
repz
ja
addl
sub
mov
es
push
sbb
push
ds
adc
push
or
rol
jo
pop
push
or
adc
lock
and
imul
jns
xchg
cmp
sub
mov
loopne
mov
nop
sbb
and
stos
xchg
jb
lds
mov
daa
shlb
jno
movsl
in
mov
js
mov
out
mov
xor
mov
clc
jle
mov
inc
add
xchg
lock
mov
mov
jbe
cltd
repnz
cmpsb
sub
addr16
popl
mov
leave
add
dec
ss
loopne
hlt
jecxz
repnz
fiaddl
cmp
in
push
cmc
sbb
outsl
push
fisubrs
fisubrl
xchg
aaa
cwtl
xchg
fisubrs
sub
cmp
xchg
cmp
mov
xchg
mov
mov
cmpsl
push
add
test
push
dec
lcall
mov
or
fld
mov
lds
mov
loopne
test
push
ret
fisubl
fstpt
fs
sti
les
push
dec
jns
out
jbe
test
or
stc
into
jp
mov
movsb
outsl
mov
movsb
test
aas
sbb
adc
push
sbb
stc
pop
xchg
clc
hlt
mov
sub
stos
cmp
or
lret
cmp
lret
roll
das
xchg
insl
bound
sbb
pop
pop
in
jae
mov
outsb
lret
add
mov
add
or
mov
outsl
push
call
jo
push
insb
aaa
xchg
mov
in
add
lods
mov
jb
cs
in
rcrb
cmp
addr16
call
jno
inc
loopne
or
jmp
sbb
sbb
push
sarb
mov
and
jle
mov
adc
mov
xor
and
or
jmp
push
arpl
lret
push
push
scas
jg
and
jae
ror
cmp
cmp
repz
and
adc
ds
aam
cltd
push
imul
mov
fwait
cld
mov
mov
fidivl
push
rcll
cmp
sbb
clts
mov
clc
cld
fcmovnbe
jno
cmp
adc
jle
js
bound
pop
mov
sub
das
lret
shl
cld
out
test
ffree
xchg
dec
divb
jb
loop
jg
shlb
adc
nop
popf
call
fidivl
jae,pn
and
jp
rcrl
stos
add
jle
in
jmp
pop
pop
stos
xchg
call
pop
ss
xchg
mov
jge
jnp
pop
dec
arpl
inc
jmp
push
adc
movsl
cli
sbb
adc
cld
mov
push
and
push
les
jns
push
sbb
sbb
arpl
das
mov
push
sbb
push
add
movsb
pop
mov
push
mov
xchg
in
push
repnz
jecxz
movsb
hlt
mov
aas
jl
leave
lret
jo
xchg
repz
xor
cmpb
daa
leave
jecxz
popa
in
xor
leave
push
ss
adc
les
and
clc
inc
stos
fnstcw
cmpsl
push
push
inc
repnz
cmpsb
cltd
sub
lock
pop
or
jns
dec
mov
xchg
outsl
inc
loopne
pop
scas
xor
mov
outsl
lods
mov
xchg
xor
fisttpll
dec
popa
push
in
sub
in
lock
insl
out
imul
xchg
out
sbb
push
ljmp
cwtl
inc
adc
pop
mov
sub
jl
cmp
push
pop
out
xor
fwait
add
leave
lret
adc
sub
mov
mov
leave
scas
push
data16
inc
jge
and
in
mov
cmpl
cmp
nop
packsswb
adc
lahf
movsl
add
lds
call
mov
enter
and
test
out
push
ficoml
adc
data16
repz
cli
iret
jg
les
pop
mov
jge
mov
dec
shrl
enter
mov
in
inc
xchg
pop
mov
jns
cltd
xor
sbb
and
jecxz
pop
repnz
pop
lcall
ds
adc
fwait
mov
int
ret
ds
mov
add
cmp
mov
and
mov
xchg
jecxz
and
sub
adc
je
and
and
loop
jb
sub
mov
xchg
xchg
movsb
push
ds
xor
mov
out
cli
adc
sbb
bnd
mov
add
in
add
sti
fdiv
leave
sub
dec
jmp
lods
or
mov
pusha
and
stos
pushf
jnp
cld
out
dec
shrb
push
sub
and
add
jo
adc
imul
xchg
mov
push
add
call
fcoml
xchg
jae
or
or
jnp
repnz
mov
add
sub
idiv
test
mov
xchg
sub
pop
xchg
lds
or
shll
pop
sarb
std
insl
cmp
mov
push
cli
jb
repnz
out
std
cmpsl
sbb
push
inc
movsl
addl
adc
sti
cli
add
and
mov
mov
dec
lahf
pusha
dec
mov
mov
xchg
push
dec
pop
enter
xor
lods
pop
jecxz
adc
or
ja
jmp
call
test
push
lods
ljmp
push
adc
dec
dec
mov
push
mov
push
lds
add
rorl
ret
outsb
je
mov
jno
push
pop
add
push
jecxz
or
mov
mov
sub
dec
movsb
fmulp
enter
in
mov
pop
inc
cmp
xor
jp
pop
add
mov
xchg
adc
shl
out
lock
inc
push
negl
call
mov
xor
adc
sbb
nop
mov
sub
lds
and
dec
inc
push
lods
mov
xchg
sbb
xor
pop
lret
dec
shl
fcmovu
push
mov
imul
aas
xchg
jmp
jmp
pop
pushf
sbb
xor
iret
mov
cmp
leave
mov
sub
sbb
mov
push
sub
sub
jmp
adc
xchg
ret
das
xchg
in
or
ja
cmpsl
daa
inc
adc
cmc
sbb
rcr
test
mov
inc
jnp
add
aas
test
daa
ja
int
lds
xchg
jmp
scas
sub
sub
imul
and
or
push
xchg
jae
js
adc
cld
sbb
arpl
xchg
sub
push
rorb
cmpsb
push
or
dec
jnp
out
inc
adc
pop
fdivr
pusha
lock
fidivs
add
cltd
dec
bound
and
ret
sbb
push
or
shrl
into
or
loopne
mov
sub
cmp
cmp
shl
cmp
ds
pop
scas
fsubs
xchg
mov
insl
xchg
add
dec
es
adc
mov
sbb
xchg
and
sub
daa
sub
shll
cmp
cltd
cld
rclb
lahf
lret
leave
andb
jecxz
mov
jbe
loopne
cld
push
mov
pshufw
lret
adc
sbb
inc
mov
addr16
push
fldt
add
jbe
jbe
push
inc
aad
in
fwait
sbb
or
push
outsl
subl
jle
xchg
test
or
cmc
jmp
cli
iret
lods
sbb
fidivl
push
dec
jns
mov
fstpt
push
and
sahf
inc
add
mov
push
int3
scas
dec
fldt
mov
in
fldt
xchg
ret
fyl2xp1
loope
jo
mov
negl
push
push
push
cmp
push
ja
jmp
shl
xchg
in
mov
pop
cmpsb
into
adcl
cmp
decb
push
addr16
jmp
sbb
dec
imul
lock
jp
mov
inc
xor
adc
xor
int3
mov
lds
stc
xchg
aas
jo
cld
scas
mov
arpl
pop
jge
ret
sbb
cld
sub
jge
test
xchg
fistpll
mov
mov
pop
jae
lea
test
sti
ljmp
lcall
jmp
test
into
clc
xchg
fistps
jle
push
shll
inc
ds
arpl
and
sti
insb
lret
mov
mov
add
fwait
scas
js
jl
or
pusha
shll
xor
out
ss
xchg
sub
adc
push
add
cwtl
int3
outsl
dec
test
mov
subb
or
je
add
shlb
je
bound
es
ss
std
bound
mov
xchg
push
push
jecxz
or
test
and
dec
dec
test
xor
lea
or
pop
subl
pop
pop
jb
xor
pop
into
cmp
divb
add
sbb
cmp
sbb
clc
xor
popf
jle
pushf
sbb
or
sbb
pop
jle
data16
das
jns
cmp
xchg
sahf
jno
cmp
sub
pop
dec
lret
aam
pop
sbb
mov
notb
inc
and
dec
xchg
in
sbb
xchg
test
sub
test
stc
sbb
push
mov
inc
mov
jp
test
xchg
mov
outsb
out
imul
and
hlt
aad
flds
rclb
lds
push
mov
xchg
pusha
mov
insb
cmp
shl
inc
pop
pop
rolb
mov
sti
jecxz
inc
fldcw
and
xchg
mul
mov
jecxz
mov
or
sbb
mov
mov
sub
adc
mov
lock
mov
sbb
jns
stc
pusha
ss
mov
pop
dec
cmpl
loope
int
mov
adc
and
sub
aaa
iret
mov
roll
outsl
aaa
std
sbb
sub
mov
inc
mov
aad
daa
inc
add
jl
jo
or
shlb
jo
push
aad
and
rcrb
inc
xchg
test
jmp
mov
cmpb
lcall
adc
je
pushf
jbe
add
fcoms
adc
push
sub
cli
arpl
sub
stc
test
fistl
pop
outsl
hlt
inc
test
push
out
pop
xchg
mov
mov
sar
movsl
xchg
rcr
lods
dec
int
stos
stos
rclb
add
cmp
xlat
aam
mov
out
mov
adc
xor
fcoms
shrb
inc
mov
xor
inc
bound
adc
jp
in
fdivl
sti
mov
and
shll
mov
xor
cmp
add
repz
cmp
mov
xor
mov
xchg
test
mov
enter
fstpl
sbb
outsl
or
cwtl
mov
pop
lgs
sbb
movsl
mov
and
shrl
sub
shlb
sub
dec
aad
repz
mov
ja
jae
jo
daa
jg
movsl
mov
imul
and
jns
sarl
js
rcll
es
testb
cmc
dec
mov
jl
mov
scas
pop
outsl
lea
xsaveopt
repnz
mov
les
dec
jbe
outsl
or
jle
imul
ret
rorb
shll
cmpsb
test
adcb
mov
and
fimuls
mov
mov
push
xchg
mov
out
mov
pushf
pxor
push
clc
pop
sub
scas
fdivrs
mov
lret
push
sbb
loope
adc
rcll
lcall
imul
and
or
ret
dec
xor
xchg
sub
gs
addr16
pop
sahf
pop
ljmp
xchg
das
stos
shrb
sbb
lcall
movsl
call
sti
loopne
fwait
movsl
outsl
in
mov
idivl
add
inc
or
jmp
sub
add
push
add
xchg
or
mov
inc
mov
bound
add
mov
js
adc
rcrb
repz
xchg
fisubrs
stc
jge
or
rcrl
mov
and
mov
jnp
and
sub
in
or
rorb
mov
or
shrb
aaa
in
ret
mov
or
fsubrs
pop
push
cltd
xor
insb
mov
sbb
stos
aam
push
and
mov
or
loopne
xor
sub
arpl
repz
push
jns
lret
addr16
in
dec
cltd
and
mov
fidivrl
inc
hlt
dec
jmp
fsubs
xor
lret
fists
aad
push
push
jmp
inc
sbb
cmpsl
das
aas
lea
mov
jns
mov
push
push
push
scas
push
clc
clc
mov
xor
and
ror
nop
add
int
cmp
xor
std
cli
jb
add
add
lret
push
pop
adc
push
fimull
mov
sahf
mov
notb
data16
mov
push
call
movsb
jl
mov
lock
notb
or
xchg
and
orb
mov
and
popf
pop
add
iret
popf
lods
outsb
in
cmp
adc
mov
inc
add
cmp
cmp
lahf
sbb
shll
testl
test
pop
and
mov
call
insb
loopne
pushf
mov
dec
inc
fmuls
cs
cmp
test
mov
in
iret
inc
fcmovb
sarb
mov
ja
cli
shr
cld
in
in
or
imul
sub
aas
scas
dec
sub
xchg
mov
stc
cmp
jle
cmp
pop
cltd
pop
sti
bound
jmp
test
pushf
fldenv
jge
fwait
lcall
sti
dec
jge
mov
pop
sbb
mov
pop
cmp
pop
dec
cs
cmpl
cmp
inc
fsub
lock
push
cmc
repz
pop
xchg
pop
add
or
out
ret
add
in
loope
mov
insb
adc
clc
jl
adc
mov
or
lods
ret
cltd
mov
jl
popf
push
xor
and
std
fs
cmpsb
jge
test
xchg
sub
clc
ds
out
dec
push
cli
cli
mov
add
pop
loope
push
add
aad
fsts
cli
insb
lcall
adc
cmp
ret
jge
push
pusha
dec
and
mov
add
and
sarl
out
arpl
jns
push
or
cmpsl
fidivs
sbb
mov
lods
pop
dec
bnd
mov
dec
icebp
mov
jg
pop
out
cmp
jp
inc
enter
fwait
jns
pop
pushf
add
stos
ror
pop
inc
add
mov
in
cs
add
shl
push
arpl
arpl
add
cmp
xchg
cli
mov
and
cld
sub
adc
mov
dec
add
xchg
xchg
sub
and
or
arpl
andb
outsl
lahf
pusha
ficoml
dec
adc
mov
dec
int
cmpsb
pushf
push
shrl
in
pop
test
stos
loop
push
jne
shrb
insb
rclb
in
enter
cltd
push
jp
cmp
push
sub
movsb
pop
fsub
clc
jo
push
sbb
sub
xchg
mov
xchg
mov
bound
jns
inc
int
in
into
mov
sbb
fisubrl
mov
daa
sbb
mov
xlat
aaa
jecxz
sbb
mov
dec
or
push
ror
inc
lds
cli
jnp
and
ret
clc
inc
stos
in
xchg
or
pop
out
xor
push
pop
ljmp
ret
mov
pop
adc
fmul
xlat
jg
xor
mov
sbb
mov
insl
xchg
ret
pusha
sbb
mov
inc
mov
add
cmp
loope
rcll
loopne
xorl
xchg
lea
in
aas
pop
stos
in
loop
mov
out
and
jge
cmpsl
fwait
js
popa
adc
filds
call
mov
add
mov
xchg
sub
sub
loope
lret
inc
jmp
add
inc
popf
cmp
jnp
ror
cmp
cmp
sbb
mov
cmp
movsb
test
out
pop
sbbl
push
hlt
dec
add
dec
add
push
inc
fs
out
xor
mov
into
cmp
xchg
push
fsubl
icebp
pop
enter
xchg
hlt
add
loopne
pop
fldl
push
mov
adc
xchg
lock
xor
pop
sbb
lock
pop
cmp
movsl
enter
push
ror
in
loop
push
inc
or
cmpsb
aas
lcall
lcall
pop
jb
inc
imul
push
stos
out
repnz
dec
xor
xchg
mov
lahf
jmp
ret
cmp
dec
je
mov
push
cmpsb
dec
xchg
or
popa
mov
cwtl
push
inc
lcall
adc
xchg
ja
fcomps
std
sbb
xor
fcmovnu
dec
push
sub
aas
imul
fnstenvs
dec
je
int3
push
lods
adc
or
cvtps2pi
stc
pop
pop
mov
int
mov
jg
pushf
cmp
jecxz
or
out
add
mov
add
aad
iret
mov
popa
inc
jg,pn
or
ss
dec
repnz
out
or
lods
inc
test
push
repz
shrb
adc
push
fnsave
inc
add
jge
push
mov
push
push
pop
sbb
adc
sbb
loopne
push
cmp
fildll
cli
fwait
mov
fs
test
roll
dec
gs
mov
mov
xchg
or
fucomp
dec
js
and
ret
dec
ret
inc
mov
movsb
inc
jnp
test
fwait
add
mov
out
mov
cmp
mov
mov
add
leave
out
fcmovnbe
cmp
out
sub
jo
jns
pushf
in
into
cmpsl
les
dec
stc
sbb
fistl
jge
dec
arpl
pop
add
mov
mov
and
jns
and
mov
cmp
xor
leave
xor
mov
out
xchg
sbb
leave
lods
xor
mov
xor
out
add
ret
testl
jnp
inc
dec
add
xchg
in
push
pop
aaa
test
enter
ds
pop
mov
stos
stos
hlt
sahf
cmp
add
dec
rorl
and
outsl
testl
roll
jmp
fisttps
sbb
and
pop
iret
inc
mov
cld
loopne
pop
sub
or
push
cmp
out
jb
cmpsb
hlt
in
aas
add
jbe
and
movsl
sbb
cmpsl
and
test
int
and
arpl
and
pop
cld
out
xchg
push
fdivrl
mov
xor
inc
aam
add
cmp
in
cmp
push
notl
in
mov
jno
push
jns
dec
xor
xchg
imul
add
leave
and
insb
fsts
jns
xor
dec
loopne
shlb
mov
dec
out
pop
loop
xor
shr
fcoms
sti
lret
mov
outsb
or
xchg
pop
or
ljmp
call
mov
aaa
mov
les
inc
jbe
add
dec
popa
inc
test
enter
repz
lock
dec
xchg
loop
add
jle
dec
nop
or
loopne
popf
js
and
dec
rcrb
imul
inc
daa
mov
mov
lock
rcrl
push
loop
sub
inc
out
push
lods
sbbl
xlat
movsl
push
int3
test
mov
push
adc
testb
jo
cmpsl
pop
push
push
push
les
lock
cmp
mov
pop
jb
pop
enter
fs
add
ffreep
mov
std
xor
jne
cmpsb
sbb
and
fwait
js
adc
or
push
push
sbb
sbb
test
fs
mov
and
lds
adc
push
dec
mov
out
adcl
stos
sbb
in
mov
lods
test
daa
dec
addl
out
sbb
shlb
mov
mov
adc
aaa
lods
stos
push
pop
inc
cmp
jle
jmp
pop
push
in
outsb
cmp
xchg
jge
or
hlt
xchg
push
xchg
sti
sti
and
ljmp
test
cwtl
sbb
pop
inc
jl
xchg
push
sub
mov
int3
nop
and
inc
sti
rorb
push
dec
ljmp
imul
mov
imul
pop
or
jnp
sbbl
sbb
scas
les
pop
outsb
xor
cltd
or
movb
xor
jb
repnz
inc
jp
xchg
fcmovnu
dec
dec
push
inc
jmp
in
iret
xchg
sahf
pop
adc
mov
xchg
xchg
push
cltd
xchg
insl
fcomi
add
xchg
popf
pop
and
sub
leave
mov
sti
in
push
test
mov
cmp
xor
xlat
insb
fiadds
xlat
mov
push
ror
call
xchg
and
sti
cli
scas
mov
push
out
dec
jns
mov
das
cmpsl
fdivr
into
xchg
inc
lahf
lea
stos
dec
movsl
or
popl
dec
inc
or
leave
mov
pop
push
pop
in
clc
jae
inc
movsl
inc
call
in
testb
flds
or
je
shlb
adcl
into
and
daa
adc
cmp
imul
push
ret
mov
clc
pop
int
cltd
aam
outsl
pushf
ja
repz
mov
jno
es
ret
shlb
xor
dec
adc
adc
dec
popa
and
call
popl
xor
inc
adcb
das
fisubrl
mov
imul
int3
loop
push
jp
cmpsb
lods
hlt
push
inc
cmp
out
adc
mov
sbb
xchg
sub
add
and
push
push
xor
push
movsb
int
mov
push
lret
jmp
test
dec
loopne
lcall
test
repz
out
loope
aaa
cwtl
cmp
sahf
insl
pop
xchg
and
iret
and
push
cs
add
jl
mov
in
pop
cmp
mov
mov
inc
fcmovu
sub
outsb
or
jno
leave
out
jg
testb
int
xchg
mov
fisttps
cmpb
rdpmc
repnz
fiadds
lahf
cmp
mov
dec
xchg
and
cld
pop
push
fs
call
jno
dec
neg
dec
cmp
lret
xchg
or
je
xchg
fldl
lcall
push
aaa
mov
jne
lock
and
ret
inc
inc
mov
push
dec
div
in
in
xchg
stos
pop
loopne
dec
lock
xchg
in
push
pop
aaa
jle,pn
fimull
popf
sbb
pop
idivb
dec
lcall
add
insl
pop
roll
add
mov
rorl
push
repz
push
jno
inc
in
fsubrs
pop
bound
shl
lret
imul
cmpb
fcoml
pop
cld
mov
add
cmpsb
mov
mov
les
dec
ss
out
mov
sub
int3
imul
addr16
fcoml
and
mov
bound
add
fcoml
mov
es
push
jmp
es
mov
jo
mov
push
dec
dec
mov
imul
push
mov
aam
lcall
loopne
jb
xchg
pop
in
mov
loope
or
sub
mov
movsl
push
sub
dec
out
shl
idivb
dec
adc
dec
sub
cmp
pop
faddl
xchg
outsb
enter
xor
hlt
sbb
lods
or
xchg
adc
sbb
lods
sub
lret
add
xor
cmp
sbb
movsl
int
mov
data16
and
fsubp
push
jo
inc
cmc
pop
in
scas
sarb
and
lahf
aam
mov
xchg
inc
add
jl
js
pushf
mov
inc
lods
jg
mov
cltd
mov
int3
add
fcmovnu
jae
dec
dec
cli
je
loope
cs
in
das
je
xchg
leave
mov
and
jb
das
adc
inc
shrb
fwait
jb
sub
xchg
les
pushf
sub
bound
insb
inc
test
into
mov
push
push
push
sub
pusha
inc
lods
cmp
mov
jbe
in
std
jp
sbb
test
hlt
fwait
out
lahf
inc
adc
push
stos
inc
mov
mov
push
mov
mov
dec
jne
mov
fisttps
add
mov
in
outsl
adcl
test
pop
stc
add
leave
into
or
pop
sbb
mov
shll
sub
mov
adc
mov
icebp
xor
pop
lock
pop
rorb
push
loopne
repz
packssdw
sub
stc
xchg
icebp
jo
jnp
adc
sbb
rcll
aad
mov
xchg
sahf
test
daa
incb
aam
mov
nop
aaa
push
push
sub
int
ret
cmp
push
xor
loop
pusha
movsb
push
add
xchg
adc
cli
es
cmp
popa
popf
inc
in
iret
xor
xchg
and
push
cmpl
gs
lods
push
int
mov
xor
push
addr16
inc
out
faddp
add
ljmp
out
cmpb
lds
push
dec
iret
mov
and
or
aaa
sub
sub
movsl
aad
jge
pusha
enter
inc
cs
iret
aam
jnp
outsb
sbb
out
mov
jl
or
mov
cli
cld
imul
test
dec
mov
icebp
inc
cmpsl
add
mov
ja
add
stc
and
inc
dec
test
adc
adc
inc
push
xchg
cli
cmc
in
sahf
adc
popa
hlt
mov
scas
xor
adc
pop
cmp
ret
in
jno
sub
int3
pop
adc
mov
push
add
xor
movsl
jge
icebp
pusha
cwtl
cmp
clc
rol
xchg
lcall
repz
xchg
dec
hlt
jns
aam
sub
xor
aad
pop
nop
inc
mov
test
ja
sarb
incl
jmp
and
aam
fcmovnu
cmp
push
push
xchg
scas
loopne
lret
jo
or
fcoms
dec
imul
popa
daa
jge
push
fistl
mov
cmp
add
sbbl
jle
mov
adc
mov
leave
xchg
dec
fs
into
adc
aaa
mov
iret
push
add
xor
imul
call
cld
push
out
jl
dec
lock
pop
mov
mov
and
ljmp
mov
aas
xchg
imul
out
in
mov
adc
sbb
arpl
mov
in
in
dec
sub
stc
ficompl
bound
cmovo
rolb
xor
xchg
xchg
hlt
int3
sub
fs
sub
into
cmc
outsb
sub
mov
inc
jecxz
shrb
xchg
xchg
add
push
cmpsb
stos
in
pop
push
jp
add
cmpb
push
mov
cmp
xchg
push
fists
das
jle
pop
mov
dec
into
loop
mov
inc
shll
mov
mov
ficoms
mov
fldenv
cmp
test
mov
add
cmp
or
pushf
xchg
xchg
xchg
aaa
sbb
aas
jmp
cmp
jno
enter
inc
std
mov
leave
lret
loope
movsb
iret
je
and
cmp
mov
repnz
sti
cmp
sahf
sbb
xor
scas
in
lret
je
cwtl
sub
cmp
and
enter
ret
rcrl
jmp
imul
div
inc
ret
pop
andb
jo
mov
aas
adc
jp
fstpl
add
mov
in
or
stos
cmp
xor
jle
mov
push
inc
pop
jl
pop
rcrb
xchg
cld
jg
outsb
rorb
or
cmp
jne
sbb
xor
or
xor
adc
ret
imulb
push
sti
das
push
jge
mov
test
pop
push
and
out
jbe
dec
add
xchg
cmp
pop
jl
sti
mov
pop
insl
adcl
test
sbb
pop
mov
xchg
fldcw
sub
and
mov
aaa
push
ror
mov
xor
mov
imul
incb
dec
add
mov
pop
sarl
dec
and
push
int3
jnp
roll
mov
xor
rcll
push
pop
lea
das
cli
retw
xchg
add
jne
out
loope
xchg
in
dec
sbb
sub
adc
stc
ret
sahf
mov
xor
mov
rdtsc
adc
scas
enter
pop
fdivrs
into
fsub
sub
push
enter
sbb
nop
pop
push
jbe
xor
xchg
jg
mov
xchg
cs
mov
cmpsl
sub
mov
pop
inc
xor
mov
xchg
cltd
xor
rsqrtps
rolb
insl
and
or
jmp
outsl
testl
mov
clc
or
out
cmpsl
cmpsl
mov
sub
adc
mov
and
popa
cmp
mov
shll
add
cli
punpcklwd
lds
hlt
push
movsl
fldt
pop
mov
push
dec
jb
subl
mov
fcmovb
or
sbb
rorl
lods
ja
push
dec
dec
fistpll
fsubrp
inc
push
dec
push
xchg
inc
pusha
pushf
jns
fs
cmpsl
data16
sti
pushl
imul
jge
leave
inc
subb
sbb
mov
bound
push
lock
mov
lock
ds
out
push
enter
cmpsl
imul
push
call
es
xchg
xchg
adc
xor
mov
adc
inc
test
dec
rclb
mov
ss
into
test
rol
xor
lahf
enter
arpl
iret
fcmovbe
sub
stc
adc
je
cmp
jmp
xlat
xchg
or
mov
lea
cwtl
sbb
xorl
ret
cmp
xor
leave
int
fs
pop
dec
pop
mov
inc
push
sbb
bound
jo
push
imul
jle
pop
xor
popf
mov
pop
dec
sub
insl
mov
pop
pop
test
loopne
mov
dec
test
push
pop
pop
lcall
imul
lods
loopne
push
sub
jns
cmp
repz
lock
enter
mov
and
movsl
or
sub
jmp
mov
lock
shll
lds
fidivs
test
fucomp
or
aaa
pusha
lock
clc
pop
pop
xchg
ja
cmp
mov
jae
lods
rolb
lods
repz
inc
and
add
xor
pusha
lods
in
sbb
cmp
inc
xor
push
dec
fwait
jmp
or
sbb
in
adc
shlb
in
jmp
xor
test
out
std
aas
push
sub
movsl
sub
mov
pop
adc
push
mov
sbb
and
mov
jae
push
mov
stc
inc
fsubs
test
idiv
or
data16
cmc
mov
dec
lahf
nop
sbb
int
ss
test
fs
scas
inc
jmp
dec
pop
dec
and
enter
sbb
daa
gs
push
xchg
ja
push
push
outsl
int3
and
jbe
rol
inc
or
xor
sbb
jb
mov
hlt
xchg
xor
push
xor
mov
mov
int
out
mov
shll
fcompl
push
stos
cwtl
fdivrs
negb
pop
test
inc
lcall
cmp
stc
xchg
xor
push
pop
loope
mov
sub
mov
pop
shl
rol
adc
jecxz
pushf
enter
arpl
mov
lret
jno
popf
fldpi
loopne
mov
je
add
adc
test
call
and
sbb
xchg
shrb
cmp
cmp
jae
inc
push
mov
pop
or
in
bound
xchg
out
jno
jg
push
leave
aaa
jecxz
mov
rcll
mov
in
pop
outsl
mov
xor
and
mov
sarb
cmp
push
enter
lea
mov
aad
sbb
cmpl
cli
jmp
ljmp
outsb
leave
ss
insb
movb
push
inc
and
inc
sub
mov
sub
or
adc
fwait
orb
jmp
xchg
out
push
out
in
out
mov
pusha
and
sti
mov
pop
cmp
pushf
rcrb
adc
mov
mov
clc
imul
mov
add
push
cmpsb
lahf
jnp
cld
push
add
imul
insb
push
out
xchg
gs
cld
repnz
xchg
add
hlt
ljmp
mov
test
movsl
sbb
fidivl
lods
cmc
inc
ret
or
cmp
xor
dec
xor
and
out
dec
mov
addr16
or
jp
sti
pop
ret
pusha
inc
push
or
imul
movsl
shll
jp
xchg
pushf
cmp
test
nop
jns
mov
add
jns
aam
sbb
jp
push
fbstp
fwait
jecxz
rclb
std
or
xlat
jp
xchg
popf
mov
or
fwait
dec
icebp
int3
sbb
sbb
sbb
xchg
pop
aad
and
clc
mov
das
mov
in
xor
in
insl
inc
dec
cwtl
stos
fmuls
sub
outsb
fldcw
or
jno
loopne
add
inc
fdivrs
sbb
or
sbb
push
sbb
nop
sub
sub
jns
aaa
adc
mov
aam
xchg
aad
lret
ret
pop
pop
push
es
shlb
sbb
jmp
loope
ffreep
js
sti
cmp
jno
fisttpl
sub
and
aad
xchg
xor
invd
cs
dec
pop
inc
pop
shl
icebp
pminub
pop
loop
les
pop
pop
cmp
sub
fnsave
mov
pushf
jb
pusha
sbb
sub
or
cmp
jge
mov
pop
test
lods
pop
emms
or
clc
xchg
lods
xor
inc
fsubrl
mov
dec
sbb
push
sbb
dec
aaa
pop
cmpsb
ss
push
push
xchg
dec
in
xor
jo
loope
ljmp
xor
adc
mov
es
cmpsb
cmpsl
aaa
mov
or
sbb
and
test
andl
sbb
mov
hlt
jmp
enter
mov
outsb
jecxz
in
and
loope
subl
frstor
aaa
mov
push
or
test
sbb
mov
test
dec
je
or
mull
mov
lock
sbb
andb
add
enter
push
mov
test
pushf
enter
push
cmpb
push
cld
push
pop
cmp
jge
popf
popf
add
push
pop
sub
lods
mov
fdivl
cmp
push
lss
pop
mov
hlt
outsb
clc
ret
cmpsb
andl
gs
jnp
in
call
lret
mov
repnz
push
nop
aam
xor
ss
aas
call
cmpsl
jno
mov
rcrb
roll
sbb
popl
loop
aas
ja
mov
pop
jbe
inc
stos
std
inc
in
cmp
dec
imul
sub
mov
adc
stos
repnz
cwtl
pop
push
adc
lock
and
outsl
sbb
dec
adc
and
jg
mov
movsl
cmp
rcll
and
icebp
or
cs
add
xchg
call
adcb
sbb
fisubl
mov
das
xchg
mov
les
inc
into
fists
push
les
fidivrl
imul
xlat
pushf
clc
mov
push
repnz
sub
sbb
add
pop
inc
mov
sub
cmp
dec
mov
ds
nop
cmp
dec
stos
sti
lcall
or
in
dec
sub
or
loopne
push
mov
shll
mov
mov
push
xchg
mov
mov
dec
mov
cmc
imul
pop
subl
int3
iret
cmp
or
pop
scas
xor
insb
xchg
pop
lret
into
mov
cmp
andl
iret
mov
xchg
in
xchg
incl
or
hlt
cmc
cmp
gs
pop
shll
movsl
test
xchg
hlt
xlat
jnp
fwait
out
stc
sbb
popa
fs
fdivrp
test
orb
mov
adc
xor
loop
movsb
popa
mov
inc
scas
jo
mov
inc
movsb
lret
push
mov
or
and
hlt
jl
negb
jae
xchg
push
std
sub
loopne
mov
adc
sarb
or
lds
push
mov
pop
out
cwtl
scas
lret
mov
out
aaa
int
push
test
cltd
in
test
enter
pop
fsqrt
out
inc
pusha
xchg
test
movsl
mov
mov
in
out
add
cmpsb
ret
xor
push
jmp
push
xor
mov
mov
test
int3
mov
je
scas
ret
adc
scas
inc
mov
push
xlat
rolb
mov
xchg
loop
jp
test
loopne
aad
pop
into
mov
adc
push
dec
cmp
xor
les
in
lahf
iret
xor
add
psubusb
cmpl
aaa
pop
call
aam
fiadds
jecxz
bound
add
aaa
mov
les
leave
scas
mov
mov
gs
mov
das
push
cmp
add
add
pop
movsb
div
repz
mov
outsl
push
or
cwtl
out
icebp
fisttps
mov
or
mov
stos
cmp
lods
and
lea
xor
stc
inc
inc
stc
fdivrs
or
leave
loop
mov
fcompl
ficoms
xchg
das
pop
xorl
jge
xchg
aam
testb
addr16
bound
push
lret
shlb
inc
ds
adc
push
sub
int
shrl
gs
dec
fistpl
aad
jb
mov
push
imul
ja
stc
or
sbb
pop
test
and
lcall
sub
cwtl
jg
mov
sub
mov
cmpsl
lods
int3
outsl
sub
roll
insb
push
aas
filds
movsl
xchg
mov
push
xlat
idivl
mov
sahf
xlat
sbb
xor
mull
mov
mov
mov
jbe
repz
dec
and
out
pop
mov
aaa
in
and
pop
add
lods
mov
add
mov
int
dec
ss
daa
sbb
push
pushf
or
lea
or
sub
mov
jle
cmp
data16
xchg
aaa
push
das
push
mov
pop
mov
xchg
cmc
repz
fcmovu
adc
out
xchg
adcb
rorb
std
outsb
add
aas
ret
lods
push
xor
mov
inc
stc
mov
push
dec
inc
ja
jae
sbb
mov
cld
in
cmp
idiv
xor
std
push
and
xchg
sbb
mov
jnp
xchg
sub
shll
into
leave
pop
mov
xchg
adc
and
mov
insb
push
gs
lods
arpl
je
mulb
insb
ds
and
pop
or
lret
imull
enter
xchg
stos
cmp
adc
push
push
inc
dec
jne
mov
mov
gs
insl
shl
das
sbb
pusha
sar
data16
iret
jae
dec
lahf
stc
enter
icebp
push
mov
dec
cmp
sbb
push
sbb
mov
test
sbb
jge
mov
aam
sub
push
push
xor
pop
lds
sub
xlat
sbb
imull
xlat
jecxz
rsm
jle
outsl
jns
outsl
dec
movsb
add
mov
xchg
arpl
pop
setle
data16
pop
lods
jno
sub
fiadds
mov
pushf
sahf
mov
cmp
lahf
int
sbb
fcomp
mov
cmp
mov
fbld
dec
cmp
imul
outsb
or
loopne
inc
mov
fcom
loope
mov
cld
dec
add
int3
sti
in
cmp
ds
sbb
and
clc
insl
data16
ficomps
jbe
xor
push
pop
push
inc
mov
pushf
fisubrl
pop
adc
loope
mov
iret
sub
clc
sub
cmp
push
sub
fnstsw
jp
xchg
adc
out
push
jge
mov
push
in
es
clc
cli
mov
in
gs
mov
add
or
push
lcall
int3
ret
lds
add
rclb
sub
leave
xor
lods
xor
lods
shlb
cmc
pop
add
inc
outsb
out
jp
xchg
mov
pop
mov
jnp
rol
js
or
sub
imul
jb
mov
xchg
mov
mov
popf
nop
mov
lock
rorb
bound
data16
push
inc
in
adc
sub
mov
add
mov
in
in
lds
aam
in
movsl
inc
adc
cmp
add
mov
xchg
xchg
jge
mov
xor
push
inc
xor
push
gs
jb
cmpsb
enter
jo
cli
loope
nop
shlb
loopne
xor
bound
push
adc
jns
call
or
outsl
xor
push
pop
pushf
mov
push
bound
mov
add
int
jnp
shrb
shll
or
push
mov
fdivr
jmp
repz
jbe
popa
lahf
mov
jmp
into
ret
sbb
fimuls
pop
sub
and
enter
gs
arpl
adc
loope
mov
aas
dec
pop
sub
call
rorl
xchg
mov
aaa
dec
leave
or
add
adc
and
or
mov
mov
int3
in
sahf
jmp
and
shlb
out
inc
sarl
aas
xchg
mov
dec
xor
dec
pusha
or
ficoml
lahf
dec
flds
or
aaa
xchg
divb
fcompl
mov
les
pusha
fcom
xchg
xor
frstor
dec
mov
movsb
leave
push
daa
pop
test
in
fs
mov
and
dec
jp
xor
arpl
xor
push
mov
xchg
nop
sub
lods
adc
pop
pop
xchg
adc
xchg
ret
mov
repz
mov
adc
int
mov
ds
and
pop
sbb
inc
sub
xchg
lret
fsubs
jns
add
fstps
stc
js
mov
push
out
xor
shll
adc
jb
stos
cmc
mov
imul
jp,pt
dec
mov
adc
pop
push
mov
or
and
jecxz
cmp
mov
jp
imul
push
in
dec
lahf
mov
insb
add
sbb
aas
jmp
mov
add
push
push
jle
adc
sbb
inc
and
dec
int
mov
mov
sbb
mov
cmp
ds
inc
inc
cli
xchg
pop
mov
push
mov
in
xchg
add
xlat
sbb
or
sbb
xor
mov
int3
mov
sbbb
jg
add
or
add
dec
rcrb
adc
inc
test
fwait
loop
fisttpl
xor
pushf
sarb
mov
aaa
test
icebp
std
insl
into
and
push
popa
dec
cmc
lret
in
xchg
mov
jnp
push
pop
dec
int
inc
mov
push
xor
push
jbe
leave
loope
push
stc
sahf
jecxz
jl
clc
js
mov
sub
fcoml
mov
ljmp
sub
sbb
ljmp
mov
popf
leave
xchg
mov
lock
add
clc
push
sub
nop
xor
and
sbb
pushf
addr16
or
ret
insl
jno
add
adc
or
sub
dec
decb
mov
sub
test
or
aaa
mov
and
ror
data16
xlat
sarl
mov
pop
add
mov
sti
pop
jae
jno
faddl
mov
jbe
mov
cli
pop
and
pop
fistps
fucomip
sbb
in
sbb
leave
or
cmp
mov
add
lock
pop
mov
xor
add
jge
mov
or
mov
mov
fwait
stc
lds
scas
loop
jae
mov
outsb
xor
repz
cmp
add
rorl
pop
or
cltd
rcrb
out
in
cli
sbb
movsb
push
push
sbb
in
inc
jge
push
cmc
adc
out
xor
push
cld
inc
cmc
test
iret
aaa
xorl
cmp
enter
arpl
loop
cli
mov
jbe
sar
in
lret
imul
test
mov
or
cmp
sbb
clc
dec
mov
ret
inc
pop
in
mov
mov
mov
adc
pop
or
cmc
enter
arpl
outsl
push
ficompl
aas
jno
nop
jmp
jb
xchg
dec
add
jmp
xchg
jg
xor
pop
fwait
mov
pop
pop
aaa
stos
repnz
or
push
imul
mov
les
or
jo
push
test
fildl
popl
pop
push
pop
inc
xchg
mov
and
pop
cmp
xchg
and
mov
shrb
xor
pop
inc
add
mov
jge
repz
push
pop
fldl
lret
js
inc
sub
push
xchg
cmp
stc
sti
inc
or
adc
outsl
das
in
push
lcall
jle
xor
jno
dec
push
inc
mov
loopne
cmp
dec
mov
test
fs
sbb
push
ret
inc
cmp
subb
sbb
push
pop
pop
fucomip
out
addr16
and
xor
inc
sub
lahf
add
gs
iret
in
push
fstl
lcall
mov
cli
lock
pop
jb
notb
push
std
adc
xor
int3
mov
pop
push
outsb
ss
movsl
dec
add
lods
mov
cmp
ret
repnz
push
mov
mov
lods
adc
ret
and
inc
jb
cli
lods
xchg
push
je
xor
or
cmc
and
inc
sbb
adc
mov
aas
mov
inc
cli
add
mov
sbb
dec
fnstcw
dec
ret
outsb
pop
lret
sbb
shlb
ds
mov
cmp
push
add
jno
push
fldt
mov
adc
xor
mov
jnp
ss
xor
pop
fwait
xadd
sbb
jbe
iret
mov
jge
lods
testl
jge
mov
inc
xchg
adc
stc
jmp
mov
sti
and
insb
popf
inc
aam
enterw
arpl
cltd
nop
imul
loope
decl
std
xor
mov
push
popf
ds
sbb
rep
mov
adc
or
xor
mov
dec
lret
fstpt
push
jae
push
js
jno
push
fucomi
in
and
xchg
xor
jecxz
inc
xchg
dec
repnz
or
xor
aad
add
mov
fst
jnp
push
jmp
aas
mov
ret
mov
dec
mov
xlat
pop
jnp
lods
call
push
in
or
mov
popf
in
cmpl
add
sti
cmpsb
mov
stos
aad
xchg
dec
pusha
stos
stc
add
jmp
xchg
mov
push
jae
lret
fimuls
or
mov
mov
lock
cld
lea
aam
add
clc
lea
or
inc
cli
pop
or
xchg
scas
xchg
call
fnstenv
xchg
arpl
cs
mov
add
jmp
pop
scas
inc
inc
outsl
or
nop
addr16
add
jecxz
das
push
hlt
addb
xchg
rcll
mov
push
cmpsb
mov
in
xchg
repnz
movsl
pop
dec
mov
dec
sub
inc
mov
call
push
inc
int3
inc
dec
mov
xchg
ljmp
push
mov
pop
xchg
ret
jne
mov
xchg
xorl
and
xchg
mov
out
sbb
test
shll
outsl
pop
dec
xor
fistl
jno
inc
cmp
jge
out
adc
jle
aas
mov
ret
fcoms
pusha
add
mov
fisubrl
push
pop
mov
hlt
cwtl
xlat
jne
aas
push
xchg
push
mov
sub
cmp
icebp
pop
push
scas
sbb
sub
rclb
int
jns
insb
jno
loop
hlt
xor
pop
mov
sub
or
fdivp
mov
add
pop
es
dec
lcall
adc
int3
mov
in
pop
inc
jno
dec
push
sahf
mov
add
and
sti
add
femms
in
mov
andb
sbb
lea
pushf
sbb
mov
cmp
mov
lods
int3
sbb
mov
bound
cmpsl
orb
jl
ficompl
add
daa
push
xchg
stos
mov
add
push
xchg
push
adc
and
movsl
fists
shrb
adc
mov
sub
sub
fisubrl
mov
in
pusha
mov
pop
scas
leave
js
dec
jo
add
cwtl
js
sub
or
dec
lret
jp
adc
stos
icebp
push
ret
movsl
pop
jnp
cmp
push
test
xchg
loopne
cli
pop
rcll
bound
out
das
pop
out
daa
ret
divl
mov
fdiv
jno
inc
sub
jle
push
mov
or
sbb
mov
jmp
lcall
cmp
lea
into
jbe
add
inc
outsl
test
adc
ljmp
pushl
xchg
aas
or
scas
xor
add
pop
xchg
and
dec
fs
int
mov
inc
mov
call
jns
rep
cmpsl
pop
pop
shll
ret
jbe
mov
in
shll
cmp
jecxz
call
inc
gs
jecxz
nop
cmp
cmp
dec
in
mov
xor
sbb
dec
push
or
dec
lret
dec
mov
pop
ds
or
in
leave
pop
sahf
test
push
clc
fwait
jne
mov
push
js
test
mov
in
and
imul
test
movsb
lds
push
mov
xchg
xchg
cld
sub
fcmovne
js
outsb
sbb
mov
shll
in
sub
inc
test
in
xchg
jg
jmp
out
mov
mov
in
stos
sbb
pop
sub
lods
cli
aas
adc
lret
imulb
loope
mov
push
xor
call
lods
shlb
add
and
std
jbe
popa
xchg
cs
das
mov
shlb
xor
fwait
cmp
or
cmp
test
xchg
popa
cld
pop
fdivrp
push
mov
in
sbb
sub
pop
repz
in
imul
xchg
jno
push
hlt
pushf
or
orb
xor
inc
sbb
push
xor
test
push
pop
inc
loopne
mov
mov
adc
jns
pop
push
jp
push
mov
inc
into
pop
ja
into
repz
in
aas
push
cmp
pop
insb
push
testl
xchg
dec
mov
lods
in
cli
mov
inc
ljmp
insb
pop
pop
and
ds
jg
rclb
cli
insl
insb
fsubrl
jo
mov
jl
iret
test
sbb
mov
subb
fidivrl
dec
cld
sbbb
jno
push
enter
push
pop
je
mov
in
xchg
jne
pop
mov
in
aas
add
or
inc
das
push
dec
fistpll
mov
inc
xor
sbb
cmpsb
sub
cld
out
fisttpl
sbb
ret
xor
pop
dec
lock
outsb
xor
aaa
fstps
cli
hlt
imul
mov
mov
rcll
sub
gs
test
cmpsl
adc
inc
orl
lret
add
mov
and
sbb
stos
xor
outsl
or
mov
jg
pusha
insl
test
dec
mov
into
mov
sbb
mov
xor
lcall
int3
test
cmpsb
add
repz
jb
cmpsb
arpl
xchg
sahf
jmp
push
enter
movsb
movsl
pop
pop
adc
pop
in
aaa
testl
lea
xchg
mov
adc
insl
mov
es
xor
mov
dec
fmuls
ljmp
orb
jmp
xor
imul
xchg
jecxz
and
ss
add
xchg
sub
or
out
cwtl
sti
adc
adcb
test
icebp
and
or
jbe
or
loope
cs
mov
xor
stos
lahf
or
in
push
js
std
test
jmp
bound
lret
jo
xor
mov
mov
xchg
andb
jl
xchg
sbb
inc
push
mov
jmp
in
rcll
inc
inc
das
cmp
xlat
icebp
hlt
ds
dec
fnstcw
xchg
adc
mov
stc
sbbb
notb
sbb
out
jmp
fwait
sub
cmp
pop
cmc
ss
pop
fidivs
cmc
cmp
rcll
addr16
mov
repnz
cmpsb
push
into
iret
loop
mov
fnop
jbe
adcb
sti
xchg
inc
mov
xor
sub
sbb
call
mov
mov
push
scas
pop
mov
sub
je
subb
out
dec
test
jne
adc
repz
cmpsb
repnz
add
and
lcall
mov
int
mov
aaa
push
shrb
sarl
lret
mov
push
inc
sbb
iret
jge
push
jne
bound
cmp
cli
sub
xchg
xchg
test
add
push
xchg
adc
out
cmpsb
dec
sbb
ds
lods
sbb
rolb
lock
mov
inc
dec
xchg
or
out
scas
rcll
mov
jle
dec
sbb
fwait
in
test
sbb
std
movsb
outsb
xchg
or
test
ja
leave
mov
inc
shll
test
leave
and
lods
sbb
cld
push
je
daa
mov
rorb
inc
mov
js
gs
ret
das
shl
sub
outsl
lods
jns
pop
adc
pusha
lea
xchg
add
cltd
xor
push
mov
ret
mov
push
popf
sub
sub
mov
and
fimull
sbb
push
jb
stc
loopne
les
cmpsl
sahf
mov
push
mov
add
aad
clc
lahf
inc
pop
xorl
adc
shrd
roll
mov
lods
add
or
pushf
into
jae
insb
cli
popf
or
ret
fs
addr16
fwait
insl
ljmp
mov
and
jbe
push
imul
xor
stc
pop
std
cmovne
iret
mov
pushf
push
adc
and
fsts
mov
add
mov
filds
mov
fcmovbe
add
cmp
or
jae
adc
or
xchg
jmp
sbb
sub
std
xchg
cmpsl
mov
push
cmp
jmp
leave
outsb
mov
xchg
pop
cmp
xlat
pusha
test
insl
lret
in
gs
dec
sarb
lock
dec
push
cli
into
xchg
xor
mov
cmpsb
or
lret
cmpsl
sub
out
cmp
dec
inc
popa
mov
rcll
pop
mov
fidivrs
xor
in
popf
fs
leave
jae
cltd
adc
loopne
stc
dec
fnstenv
or
ficompl
mov
adc
xorl
test
fidivl
mov
popa
jb
dec
je
imul
das
sbb
jae
jns
lea
or
pop
test
aaa
movsb
push
scas
mov
mov
lret
push
aaa
andl
mov
mov
inc
mov
ret
adc
add
xor
xor
fwait
popf
int3
clc
cmp
stos
aas
pop
jl
fwait
mov
add
jge
cwtl
push
inc
cmp
je
mov
test
xor
dec
ja
inc
push
mov
xor
stos
xchg
cmc
push
adc
test
jne
nop
outsl
pushf
scas
add
add
lock
jns
or
les
pop
sub
or
vmovups
xchg
les
xor
shll
enter
stos
loopne
les
lea
fcomi
idivl
popa
inc
mov
pushw
add
call
call
xor
xchg
test
rcrl
out
push
lock
mov
mov
xor
mov
aam
sbb
int3
mov
sbb
xchg
sti
iret
xchg
fisubrs
inc
cmp
imul
pop
jg
movsb
push
int
jnp
aaa
push
and
add
sub
jae
ror
cmp
rcr
pusha
cmp
aam
xor
int3
ss
jg
jns
mov
add
jne
cmpsl
xchg
loopne
mov
sub
xchg
iret
into
push
dec
xor
cmp
lahf
bound
xlat
stos
dec
sti
lcall
mov
ljmp
shll
sbb
aad
in
gs
mov
lahf
cli
jns
stos
imul
das
lcall
xor
stos
iret
pop
iret
inc
xor
mov
inc
sub
dec
movsl
mov
push
xchg
inc
dec
in
lods
push
jg
out
leave
jmp
push
sub
cmp
mov
or
std
xchg
push
mull
mov
xchg
out
cmp
sub
inc
mov
ret
or
push
pushf
inc
mov
loope
or
dec
fdivp
pop
mov
outsb
shrb
repnz
lea
cmp
or
aaa
les
jo
mov
mov
inc
rol
movsl
stos
test
shll
push
mov
loopne
xor
xchg
mov
xor
add
paddusw
xchg
push
sub
add
dec
mov
in
mov
aaa
lahf
pusha
or
es
sub
int3
fwait
aam
push
add
ljmp
icebp
push
sbb
or
mov
xchg
pop
mov
and
out
mov
mov
sbb
out
inc
or
fsubrl
mov
hlt
icebp
out
jg
out
out
cltd
popa
dec
or
stc
shlb
hlt
jae
in
sub
xchg
ret
xchg
xlat
jmp
das
fiadds
data16
mov
leave
sti
add
push
fwait
mov
enter
inc
fs
fucomip
iret
int3
rcll
outsb
insl
fadds
fnsave
sub
xor
clc
push
cld
cmp
mov
mov
into
rcll
pop
pop
sub
jmp
cmp
push
test
hlt
shl
mov
out
xchg
out
out
rcl
push
out
insl
pop
lods
lahf
in
push
inc
js
bound
rep
mov
int
jns
insb
xchg
loopne
scas
and
sbb
sahf
mov
or
mov
cmpsl
push
pop
mov
scas
lret
or
fsubs
arpl
mov
sub
rcl
aas
sbb
jnp
xchg
mov
xchg
fistps
les
scas
das
xchg
pushf
xor
repz
lods
mov
test
mov
aad
dec
adc
mov
mov
push
inc
inc
sub
scas
xchg
lcall
inc
jp
and
aam
or
mov
push
outsl
adc
and
sub
sbb
xor
int3
lahf
mov
insb
xchg
rcl
rcrl
cmp
imull
ret
xchg
pop
std
adc
rcrb
or
sbb
outsb
jae
or
rorb
cmpsl
cmp
dec
test
xchg
dec
les
add
int
pop
movb
xchg
enter
arpl
mov
testb
inc
add
push
rcll
push
and
push
add
dec
push
sbb
or
out
pop
or
push
mov
test
loopne
imul
jmp
pushfw
jmp
icebp
push
aaa
xchg
xchg
testb
inc
jg
inc
nop
adc
test
out
and
pop
mov
jg
xor
push
cmp
inc
sahf
aam
xchg
mov
loop
pusha
cmp
xchg
mov
imul
jo
js
les
push
sbb
pop
les
jp,pn
fwait
xchg
xor
pop
mov
bound
cmp
mov
jecxz
push
insl
adc
fistpll
lods
loop
imul
adc
dec
jo
and
test
andl
iret
inc
lea
fyl2xp1
daa
xchg
inc
push
lcall
sti
jns
jne
movsb
mov
mov
inc
inc
or
into
cmp
cmpsb
into
cmp
adc
in
sub
add
dec
mov
pop
add
mov
or
es
mov
aam
mov
xlat
mov
inc
sarl
mov
push
in
pop
mov
push
pop
cmpsl
iret
ret
testl
jns
repnz
and
stos
mov
adc
mov
mov
mov
sbb
or
sub
mov
mov
or
dec
inc
popa
imul
pop
push
or
outsl
cwtl
outsl
sahf
les
pushw
sbb
mov
insl
shll
or
and
mov
push
insl
adc
add
idivl
rclb
and
out
shll
sbbl
fwait
cld
outsb
sbb
mov
inc
mov
in
outsb
jne
ljmp
jnp
stos
enter
imul
cli
in
sub
jge
jns
in
adc
dec
ljmp
sbb
aad
or
jecxz
mov
jne
add
jg
cld
addr16
je
sub
push
xor
sbbl
fmull
or
sahf
cwtl
ja
cmp
scas
jge
into
or
int3
adc
inc
fiadds
push
gs
in
out
shlb
pop
movsb
arpl
lock
dec
pop
movsl
push
xchg
adc
sbb
in
movntps
shlb
test
int
dec
jg
xlat
lea
or
jg
lea
mov
in
dec
and
xchg
jnp
mov
fadds
or
stos
lea
hlt
and
mov
xchg
sub
and
xchg
mov
sub
cmpsl
xchg
xor
das
mov
loop
ret
popa
pop
arpl
sub
int
sti
jp
into
pop
mov
movsl
or
pushf
lock
pop
xchg
dec
lcall
mov
cmp
adc
mov
jl
push
and
xor
mov
pop
bnd
aad
xlat
lock
mov
insl
push
jmp
leave
mov
lock
xchg
ud2
adc
cmpsl
insl
jb
push
aam
jnp
cmp
pop
and
sub
fldl
inc
mov
push
mov
pop
sbb
mov
jns
cmp
bound
jmp
jne
dec
inc
clc
lcall
ja
xchg
call
ss
mov
push
subb
and
xor
int
ret
std
pop
dec
enter
addr16
mov
fbstp
aas
in
jbe
insl
xchg
leave
inc
add
lods
fwait
lcall
xor
leave
mov
mov
add
xlat
xchg
add
adc
aad
int
inc
jns
iret
fsub
sahf
ret
int
out
sub
adc
cli
jl
pop
dec
fwait
jp
mov
adc
jns
sbb
or
daa
sub
in
incb
lds
shl
aam
and
dec
cli
inc
xchg
loop
mov
push
lds
xchg
loope
mov
je
adc
jo
fcmovbe
adc
jb,pt
jne
lods
and
cld
mov
mov
lods
inc
js
jecxz
mov
shr
push
pop
dec
push
mov
loop
push
mov
lock
in
jp
xor
loop
adc
outsl
pop
cmc
xchg
ret
and
ds
lahf
ds
add
cmc
imul
xor
push
ror
outsb
in
cmp
cs
rclb
imulb
push
stc
pop
loopne
xchg
roll
jmp
lret
mov
imul
inc
push
cwtl
in
fucomip
mov
inc
dec
pusha
lret
iret
fs
sbb
fdivrl
loop
sti
movsb
adc
mov
clc
flds
jg
inc
imul
sbb
pushf
mov
cmp
push
enter
dec
dec
shll
lds
jp
aam
filds
outsl
lods
inc
jbe
aaa
cltd
test
aad
add
lock
in
iret
add
arpl
lahf
mov
in
push
lods
das
push
or
xchg
mov
mov
xorb
ret
int
push
sti
lods
shll
aaa
aam
stc
cli
outsl
sub
loop
ret
push
jp
jmp
hlt
add
loop
jnp
pop
xchg
push
mov
inc
cmpsb
pop
shl
adc
insl
aas
and
shrl
mov
std
lcall
lods
adc
shlb
jl
dec
cltd
ficomps
filds
push
aas
imul
inc
sub
push
subb
mov
and
push
adc
or
mov
testl
icebp
inc
sub
push
push
sbb
sub
pop
repnz
add
out
xchg
test
dec
sub
movsl
jmp
loopne
pushf
test
dec
sbb
push
jns
jl
cwtl
cmpsb
out
idivl
or
ret
fidivrl
imulb
aam
xor
stos
lea
je
xor
decl
adc
divl
scas
jge
pop
adc
movsl
lahf
loop
or
inc
nop
ja
push
sub
popf
mov
popa
sti
jmp
push
mov
in
scas
mov
mov
loop
or
mulb
call
loopne
push
push
jns
shl
sub
mov
hlt
jbe
outsb
push
cmpsl
lcall
pusha
mov
in
iret
mov
mov
inc
ret
pop
pop
mov
inc
sahf
pop
jae
jle
pop
push
popa
mov
lock
pop
cmp
mov
lret
push
sbb
aad
cmc
test
push
add
push
mov
xor
fwait
rcl
and
pop
fbld
xor
rcl
push
push
xchg
jbe
jae
add
loopne
clc
enter
xor
outsb
cmpsb
sbb
lods
sbb
iret
cmc
sbb
push
sub
mov
and
or
mov
dec
int3
adc
inc
fsubp
xchg
mov
dec
hlt
push
in
mov
inc
jns
sahf
lock
repnz
and
mov
movsl
jle
inc
pop
loope
pop
mov
or
ret
sbb
lret
mov
gs
xlat
xchg
aaa
mov
xchg
fldenv
stos
jne
pop
fucomi
xor
adcb
movsb
adc
scas
xor
jbe
test
filds
sub
in
cmp
pop
repnz
mov
and
lock
cmp
mov
in
adc
sahf
hlt
lods
cmpsl
jge
pop
repnz
xor
adc
mov
cmp
repnz
ljmp
jecxz
mov
mov
cmp
jbe
jecxz
mov
out
insl
xchg
pop
pop
aam
outsl
hlt
pop
and
outsl
cmpsb
xchg
xor
or
xor
sti
mov
adc
stos
mov
push
int
pop
ds
mov
int3
pop
mov
cmc
xchg
jmp
push
xor
xor
mov
movsl
movsl
push
mov
idiv
in
jns
xchg
je
pop
sbb
pop
xor
jmp
cmp
imul
sbb
push
push
scas
jle
filds
into
push
loope
sub
dec
mov
arpl
add
imul
xchg
stc
ret
or
mov
jecxz
add
mov
xor
jmp
dec
out
lahf
mov
ror
push
aam
das
dec
pusha
arpl
jmp
sub
sbbl
call
fldl
jmp
pop
pop
adc
rcr
and
ss
imul
test
pusha
imul
enter
push
and
add
pushl
jge
push
ret
xor
push
dec
int3
xor
adc
or
and
xor
jmp
sarl
cmp
movsb
mov
scas
jg
fidivs
mov
add
mov
roll
xchg
or
cmc
pop
lds
les
add
mov
xchg
mov
sbb
and
mov
fmul
hlt
jnp
inc
pop
ficomps
push
sub
jne
push
xchg
in
and
cli
repnz
ljmp
in
movsb
sbb
repz
stos
xchg
out
adc
push
cmpsl
xchg
and
ret
fistpll
jbe
das
inc
fadd
adc
and
pop
stos
or
adc
sub
jne
lret
cld
in
lret
addl
outsb
cli
outsb
push
scas
xchg
lock
mov
popf
push
push
sahf
and
cltd
ljmp
pop
push
push
mov
in
shr
mov
pop
mov
popf
push
and
call
notb
pop
pop
icebp
mov
or
xor
inc
mov
jnp
and
std
popf
xchg
outsb
mov
fsubs
xchg
call
lret
outsb
lcall
aam
imul
outsl
subl
in
fcmovnbe
xor
adc
sbb
or
movsl
in
ss
scas
adc
xchg
xor
repnz
int3
lods
inc
push
addr16
fsubl
sbb
int
int
push
cmp
push
jns
gs
pop
jbe
decb
jl
and
mov
dec
sahf
je
mov
add
jge
inc
and
xor
dec
mov
nop
mov
shrl
fs
xor
adc
pop
mov
out
into
jns
test
repz
stos
xchg
pop
dec
push
inc
movsl
or
movsl
inc
test
sub
mov
mov
inc
stc
sub
mov
leave
mov
xor
enter
pop
inc
push
xlat
movsl
cs
arpl
js
jne
incb
jmp
enter
xor
mov
adc
mov
mov
mov
xor
sub
rcrl
cmp
iret
addr16
lahf
jge
out
sbb
push
lahf
cmp
lock
fs
stc
push
call
and
xchg
pop
xchg
push
mov
sub
and
movb
xchg
mov
xor
mov
cmp
push
dec
cmp
cld
lods
rcll
push
dec
out
xor
pop
or
mov
aad
xchg
repnz
imul
cmpsb
xor
stc
push
test
test
sub
mov
cmpsb
test
in
adc
lods
push
mov
inc
sahf
pop
aad
and
filds
subb
repz
push
jp
add
std
movsb
loope
fs
jl
out
ljmp
cwtl
dec
out
jl
ljmp
in
push
lods
xchg
jne
call
cltd
out
mov
rcrb
dec
sbb
push
mov
add
add
push
aam
gs
jo
loopew
and
dec
nop
jne
imul
adc
adc
and
outsl
xor
sahf
xlat
pop
sub
jnp
mov
lret
mov
pop
dec
mov
clc
xchg
pop
sub
out
out
sbb
cmp
fsubs
push
push
lret
jne
ss
jmp
push
sbb
adcb
cli
lock
pop
daa
pop
mov
sti
xor
adcb
lods
and
jno
jns
sub
int3
rorl
mov
outsb
outsb
in
adc
call
scas
adc
push
push
mov
mov
leave
sbb
loope
adc
mov
xor
add
cmp
mov
cmpsb
dec
inc
shrb
adc
lock
fisttpl
bound
push
rol
mov
push
pop
loope
mov
cld
js
xchg
pop
lock
mov
ds
fidivl
insl
and
popa
enter
enter
addr16
and
movsb
inc
or
xor
fldl
xor
loopne
fcmovbe
jnp
pop
mov
mov
adc
xchg
test
sti
sub
mov
mov
popf
out
sbb
dec
outsb
cmp
out
bndstx
mov
in
mov
fucomip
call
adc
jmp
mov
test
add
data16
lock
jne
cmp
mov
popf
bound
notl
mov
roll
adc
push
lods
lret
pop
mov
loop
outsl
test
cli
punpckhbw
jb
add
cmpsl
nop
cmpb
jmp
sti
cmpsl
push
mov
push
ss
and
inc
out
dec
jecxz
jno
adc
lock
push
loopne
int
push
pop
adc
ret
and
arpl
add
pop
jl
fdivr
pop
jp
sbb
gs
pop
scas
iret
xchg
mov
xor
cli
sub
xor
ror
leave
push
cmc
gs
pop
add
dec
inc
push
addr16
mov
clc
jl
imul
jge
adc
pop
push
mov
xor
rorl
test
adc
aas
sti
scas
stos
mov
dec
out
dec
in
dec
mov
push
dec
mov
arpl
mov
stos
sbb
or
jne
xchg
jns
std
test
fidivl
outsl
adc
or
mov
fnstenv
and
stos
or
das
je
das
fbstp
xorb
loope
enter
xor
popf
lret
cmp
cmp
jae
fisubl
sahf
dec
call
pop
adc
inc
lods
call
sbb
cmp
sbb
push
mov
mov
icebp
sub
into
pop
ret
pop
test
sub
jne
mov
add
mov
insl
sbb
aas
in
repz
or
rorl
cmp
stos
sub
mov
pop
or
xchg
mov
jae
xchg
sarl
cli
fbld
push
in
push
and
lock
add
adc
xorl
fiadds
mov
rcrb
add
sub
in
or
aaa
popa
lea
xor
xlat
sub
jo
in
repz
fs
push
jge
pop
push
push
ljmp
cmp
sbb
xchg
pushf
mov
pop
mov
jb
movsl
adc
pop
lock
add
mov
sbb
sbb
mov
push
add
jmp
data16
mov
jb
mov
cmpsl
js
sub
adc
pop
jp
test
or
jbe
test
push
jae
pusha
in
dec
lret
xchg
lds
push
xor
leave
decl
fcomip
out
lds
outsb
icebp
imul
or
cmp
sbb
cmp
sbb
clc
lods
repz
pop
inc
pop
jmp
mov
rcrl
dec
inc
insb
aaa
lds
leave
sarl
push
outsb
loope
jne
dec
mov
push
add
cmp
push
add
jno
aas
xchg
stc
xor
shll
jo
mov
aad
dec
mov
cmpsb
add
iret
cs
sub
rcr
and
jbe
mov
stos
jns
xor
push
jmp
adc
xor
add
imul
pop
add
das
inc
dec
inc
scas
out
out
ds
test
inc
and
mov
arpl
sbb
push
mov
sbb
inc
inc
jp
fstpl
xchg
cmp
add
add
push
push
xlat
ljmp
shll
sub
xlat
sbb
out
popf
cwtl
xor
push
outsl
adc
out
jo
aas
xchg
call
sub
icebp
mov
fmuls
cmpsl
xchg
pop
out
add
stos
push
cmpsl
or
sub
add
cmp
sub
xchg
icebp
jns
lcall
aam
call
jge
arpl
ret
xchg
mov
gs
pop
ret
nop
or
insb
loopne
add
add
push
pop
lods
xor
fdivrl
pushf
aad
mov
jle
dec
mov
rclb
aam
dec
js
mov
jecxz
or
sub
lods
pusha
out
adc
inc
add
mov
adcl
subl
xchg
mov
xor
xchg
fnsave
sbb
mov
call
cltd
jno
cmc
inc
shr
pop
loopne
les
pop
insl
xchg
loopne
add
xorl
adc
rcrl
imul
fdivl
pop
mov
adc
xchg
mov
mov
test
sbb
faddp
inc
imul
ret
jne
mov
or
pop
mov
fisttpll
int
fs
xchg
outsb
push
imul
std
sub
ret
das
int
sub
insl
lea
dec
hlt
push
mov
jns
lret
dec
es
arpl
lret
test
cmp
jno
adc
xchg
test
xor
sbb
dec
xor
pop
push
sarl
mov
and
movsb
rcr
out
insb
cmp
cli
pop
xlat
fstps
fst
stos
call
pop
fdivs
pop
mull
cmp
push
xlat
sub
inc
push
movsb
nop
stos
divl
int
and
sahf
std
mov
int3
mov
nop
inc
shr
jg
cmp
push
loop
lret
shrl
imul
jnp
mov
or
shll
sbb
add
mov
ja,pn
mov
and
cmp
ret
subl
adc
dec
scas
mov
push
pop
or
in
cmpsb
scas
pusha
pop
sub
pause
cli
pop
push
iret
jge
bound
dec
jg
pushf
mov
jl
push
fstpl
mov
and
test
jo
inc
cld
inc
dec
addr16
inc
scas
nop
daa
fnstenv
xor
cltd
in
add
arpl
fsts
add
push
cmc
js
enter
pop
push
cmpsl
xor
pop
push
fwait
mov
shlb
mov
pushf
dec
pop
icebp
cld
mov
sub
mov
pop
sbb
out
idiv
movsb
fidivl
inc
mov
pop
sti
or
dec
dec
mov
adc
inc
mov
sub
out
mov
jo
orl
jo
pop
lds
xchg
aam
mov
outsl
ja
xor
incb
in
insl
data16
dec
add
jae
sub
fcmovnb
out
cmpb
push
xchg
shufps
imul
stc
push
or
pusha
mov
ret
leave
mov
push
xchg
sarb
fisttps
daa
test
pop
fldl
jl
adc
inc
daa
cmpb
and
mov
in
mov
aaa
repz
fiadds
std
xor
int3
dec
mov
sub
cmp
ljmp
pop
sub
add
in
aad
in
cmp
adc
icebp
mov
add
cmp
inc
and
cmp
mov
ds
jno
sar
xlat
leave
movsl
mov
pop
imul
push
and
mov
out
push
xchg
cmp
and
notl
sbb
adc
jb
stos
xchg
xchg
ds
mov
testb
out
and
push
inc
jg
dec
lods
and
in
lret
jle
add
add
pushf
arpl
mov
mov
or
cmp
outsl
stc
mov
pop
into
or
out
mov
jle
sub
dec
xchg
xchg
xor
xchg
in
pop
das
xor
leave
in
mov
pop
sti
dec
in
pusha
call
gs
sub
fcmovnu
or
test
push
push
fisubl
mov
sti
das
pushf
mov
mov
push
shrb
mov
incb
rolb
out
repz
or
in
cmc
fstpl
adc
scas
add
jns
mov
push
popl
cmc
aad
mov
pusha
and
cmc
iret
mov
inc
dec
xor
mov
push
mov
jnp
in
enter
addr16
sbb
xlat
in
std
pop
sbbb
or
lret
push
pop
mov
or
pop
jne
pushf
outsl
das
xorl
lret
pop
gs
xor
das
xchg
or
aad
lea
push
cmc
and
pop
mov
and
out
incl
in
mov
out
fwait
or
cmp
push
ja
into
mov
mov
cmpsl
call
mov
stos
mov
in
cmp
out
cmp
xor
fstps
inc
fmuls
cmc
jl
pop
hlt
xor
mov
out
xchg
outsb
or
sbb
test
nop
pop
inc
mov
ret
or
xor
inc
cmp
lahf
xchg
mov
shrl
ja
shll
sbb
adc
jg
pop
sbb
mov
ljmp
dec
arpl
push
mov
mov
cmp
jnp
cmp
pop
fbstp
adcl
push
dec
jno
loope
cmp
pop
pop
aam
repnz
xchg
out
xchg
les
lea
cs
inc
enter
jg
stos
aaa
sbb
inc
inc
and
test
ja
adc
aad
std
out
movsl
fiaddl
push
scas
ss
jmp
jmp
arpl
sub
or
fcoml
jg
pop
cmpsl
sahf
mov
stos
mov
dec
and
mov
cmp
and
nop
lcall
mov
in
push
pop
sub
ljmp
mov
jge
shll
test
jo
jbe
rcrb
fld
adc
stos
push
jno
adc
int3
mov
xchg
mov
pop
push
outsl
movsl
lock
je
or
fsts
imul
push
sbb
inc
xchg
ret
sub
int3
lds
divb
add
pop
in
out
xor
nop
or
and
rol
cmp
push
nop
mov
mov
imul
jns
jl
adc
add
or
pop
push
orl
stos
pushf
aas
add
xchg
les
jo
mov
fiaddl
shl
or
xor
dec
inc
sarb
decb
in
jmp
xor
xchg
inc
mov
fcoml
addr16
mov
jg
and
adc
fnsave
add
scas
push
pop
inc
in
leave
aaa
mov
mov
mov
movsb
outsb
xor
adc
fwait
and
jbe
adc
xchg
mov
std
push
imul
shll
adc
movsl
or
pushf
dec
mov
dec
xchg
mov
cmp
int
ret
jb
fldcw
cmp
push
lods
fcoml
jle
sub
mul
int3
lcall
ss
cmp
jecxz
cmp
and
sbb
xchg
mov
and
and
mov
fldt
enter
xor
popa
dec
cmp
jl
cmpsl
in
sbb
mov
repz
adc
clc
jmp
push
inc
leave
int
lret
adc
lahf
xchg
pop
pop
or
jne
mov
mov
pop
sub
mov
test
lods
loope
pop
pop
lret
cltd
pop
loopne
es
pop
mov
cmc
repz
xchg
add
inc
xor
scas
xchg
in
push
jl
adc
pop
lods
mov
mov
sub
add
iret
aas
outsb
mov
cmpsl
dec
sbb
push
xchg
lret
pop
jns
clc
dec
pop
jmp
xchg
ret
bound
fildl
imul
adc
push
or
mov
or
and
test
push
mov
push
push
mov
and
mov
mov
xlat
repnz
outsb
jne
dec
pop
inc
je
and
fidivl
pop
leave
or
add
mov
inc
push
sub
mov
lds
loope
aad
imul
loop
xorb
xlat
outsl
clc
cld
insl
xchg
fsub
pop
jb
jl
push
call
rolb
mov
sbb
addb
leave
out
pop
sete
lret
inc
dec
das
in
mov
push
push
js
out
ss
push
mov
mov
adc
add
int3
or
int3
lahf
call
adc
sti
cmp
pop
pop
cmp
cmp
test
sub
dec
adc
mov
xchg
jne
mov
fs
sbb
dec
les
adc
fwait
fwait
xor
mov
ret
push
loop
aaa
pop
cmp
ret
sbb
rorl
dec
sub
loop
pop
outsb
pop
cli
pop
lods
push
jge
mov
jns
data16
inc
push
xchg
cmp
lret
icebp
pop
and
int
push
xchg
outsb
lods
mov
sbb
and
loope
int3
out
loop
push
sbb
iret
and
mov
or
jb
inc
jns
in
push
xor
push
mov
cmp
pop
int3
jno
rclb
loop
adc
sbb
cli
test
push
or
or
add
lahf
mov
push
mov
jnp
cmp
cld
xchg
add
cs
bound
test
or
mov
pop
adc
and
cmc
int
hlt
cmp
lock
adc
pop
and
push
notl
fsubrl
daa
out
or
jl
cmc
iret
push
push
add
inc
aaa
xchg
inc
lahf
shrb
dec
hlt
add
mov
and
fucomip
cmp
sti
pop
adcl
push
dec
pop
sbb
add
leave
js
sbb
sbb
xchg
frstor
xchg
jecxz
push
aas
adc
pop
nop
repz
mov
idiv
and
push
outsb
or
and
inc
cs
loope
fbstp
inc
fcompl
imul
jo
xchg
pop
push
cmp
pop
xchg
mov
lret
cmp
push
add
dec
jnp
push
mov
mov
sub
push
enter
and
dec
mov
stc
or
jg
data16
frstor
ja
out
mov
fwait
sub
mov
outsl
int
pusha
jbe
jns
xchg
cltd
loope
lods
add
in
fs
into
test
sti
adc
inc
idiv
filds
push
in
add
mov
ss
sti
pusha
cmp
mov
stc
cld
xor
xchg
adc
dec
orb
cmpsl
out
lods
inc
dec
cwtl
sub
jp
cmp
sbb
or
xchg
pop
sti
imul
out
into
jmp
daa
divl
ja
jge
pop
push
pop
jnp
xor
pop
inc
mov
xchg
xchg
jg
sub
idivb
xchg
pop
aam
dec
sbb
inc
movsb
xchg
stc
sub
lods
outsb
adc
lds
jae
sbb
out
aas
mov
xchg
cltd
movsb
cmpsl
jmp
popa
jns
add
push
outsb
push
mov
sti
std
and
push
cwtl
test
ja,pn
fwait
mov
std
jbe
ss
mov
inc
push
mov
loop
push
and
push
jecxz
pusha
sbb
ljmp
repz
movd
loop
sbb
ret
scas
pop
sub
mov
cltd
insl
aad
xor
mov
out
lods
lret
imul
enter
jnp
popf
popa
stos
ljmp
sub
jae
jmp
cmp
popa
cwtl
add
lret
jne
adcb
sbb
cld
push
shrb
mov
out
push
adc
push
fs
test
pusha
mov
mov
xor
out
popf
fistl
jns
in
iretw
pop
out
mov
fdiv
pop
lock
fisttpll
stc
inc
sub
nop
lods
cmc
jmp
lahf
jns
jae
out
movsl
movsl
push
xchg
mov
in
dec
ret
ret
adc
repz
notb
pop
jns
and
jecxz
icebp
out
gs
lods
jp
sub
int3
mov
jne
add
lret
stos
fwait
cs
push
pop
nop
test
xor
lds
mov
dec
adc
roll
sub
out
fcmove
xchg
bound
xor
std
push
lods
pusha
mov
fbld
push
adc
popa
test
add
and
pop
fwait
mov
scas
xchg
pop
mov
mov
cltd
cmpsl
pop
movsl
push
rorl
test
mov
jne
or
xchg
cmp
or
movsl
adc
xchg
fildll
ja
mov
mov
int
push
int3
inc
xor
les
arpl
sbb
fldt
lea
dec
pop
popa
cmp
mov
jl
pop
mov
mov
mov
pop
mov
add
jmp
rol
mov
divb
aam
and
dec
xchg
xchg
imul
jno
jp
push
sbb
cmp
jp
push
push
fsubrp
lea
mov
and
or
nop
add
sub
in
mov
xor
mov
ljmp
movsb
je
jnp
ret
pop
loop
shl
gs
loopne
daa
jo
push
cli
orb
pop
adc
cmp
adc
outsl
mov
xor
mov
lods
dec
inc
fstpt
xchg
jmp
sahf
inc
andb
fucomp
pop
fsts
pop
js
hlt
and
pop
pop
pop
pop
repz
pop
mov
adcl
movsb
mov
mov
xchg
dec
or
popf
ffreep
xor
enter
adc
jb
jp
rcll
std
ror
mov
insb
in
push
fisttpll
repz
pop
outsb
ljmp
enter
mov
pcmpgtd
cmpsb
leave
and
mov
cmp
inc
adc
sub
ss
pop
cltd
movsl
leave
loope
out
pusha
dec
aam
mov
jbe
pop
mov
cmc
and
loope
mov
clc
testb
pop
cmpsl
mov
scas
dec
inc
insl
es
movsl
sub
das
cmp
mov
ret
push
sbb
push
fcoms
enter
insb
stos
cld
out
push
jle
cmp
add
or
loopne
push
add
adc
cmp
hlt
repnz
push
xor
sahf
hlt
pushf
ret
mov
aam
cmpsb
cmp
sarl
xchg
int3
cmp
leave
lsl
push
jp
int3
je
shrb
xchg
adc
mov
mov
mov
sbb
bound
rol
fmull
dec
mov
lods
jecxz
add
stos
or
or
js
mov
or
and
call
xchg
mov
pop
and
xchg
mov
cs
push
mov
xchg
pop
mov
cmp
inc
data16
xchg
fucomi
jg
push
xor
xor
fwait
movsl
mov
repz
bound
jbe
mov
test
pop
sbb
xor
push
sub
inc
pop
xor
daa
inc
icebp
inc
cmpsl
xlat
jns
pop
dec
jecxz
jmp
push
lods
add
pusha
jl
jecxz
out
mov
outsb
scas
es
adc
pop
lock
pop
mov
xchg
mov
icebp
movsl
jle
or
loope
mov
jo
jmp
fcmovnb
into
pop
pop
imul
pop
or
mov
stc
es
pusha
xchg
stos
icebp
lret
mov
and
aad
je
cmp
movsb
push
fst
fwait
push
ret
ss
clc
int
cmp
loopne
lret
push
in
jmp
rcll
pop
mov
pushf
cmp
test
pop
out
xor
out
add
ja
icebp
inc
jecxz
mov
icebp
lods
add
call
push
and
cmp
cmp
mov
fmull
mov
dec
xchg
rcl
movsl
pop
cmp
jne
mov
sbb
in
divb
jge
gs
aas
adc
clc
notl
xchg
dec
bound
mov
pop
cltd
cmp
sti
adc
and
insb
pop
xlat
mov
xor
adc
dec
push
sub
mov
ficomps
sub
xchg
mov
push
jge
jl
ficoms
and
inc
subb
shlb
addr16
xchg
shrl
leave
mov
ret
imul
xchg
mov
js
fldt
insl
out
js
jno
ficompl
in
dec
mov
pop
jg
int3
or
pop
inc
sbbl
in
adc
js
mov
add
inc
ss
push
ret
lock
xchg
rcl
andb
in
loop
clc
loope
nop
pop
add
clc
cmp
cmp
in
fisttpl
xchg
call
sub
xchg
mov
cli
iret
stos
mov
in
sub
das
add
xchg
mov
ficomps
push
dec
cmp
in
arpl
repz
ljmp
shrl
scas
lret
adc
jnp
mov
add
or
push
dec
lcall
cmpsl
ficomps
inc
inc
xor
test
jle
into
jp
push
loop
cmp
fs
in
outsl
loope
repnz
test
pop
imul
rcl
stc
or
jne
cmc
das
movsl
cmpsl
pop
xchg
iret
sub
jns
mov
rcll
cld
inc
ret
or
mov
or
hlt
std
in
fs
popa
lods
pop
dec
jmp
push
cli
imul
push
mov
push
jbe
adc
fnstcw
sbb
push
mov
jmp
in
dec
pop
push
mov
inc
mov
cmpsb
pop
rclb
inc
xchg
aam
jmp
and
inc
xor
xchg
push
outsl
xor
mov
add
sbb
imul
cwtl
lods
pop
sbb
and
decb
inc
movsl
cltd
sub
wbinvd
ret
mov
shlb
push
pop
push
movsb
mov
cmp
out
lret
and
lock
das
and
xorb
mov
addl
jmp
adc
dec
jbe
lods
mov
stos
es
jmp
cmpsb
jns
xor
mov
clc
cmp
push
ja
in
jp
dec
dec
leave
imul
jp
hlt
test
orl
jl
sbb
inc
nop
nop
and
imul
imull
and
ror
arpl
cld
call
out
out
leave
ds
out
cwtl
movsb
test
add
out
and
push
inc
test
ud1
jle
jmp
sub
adc
jmp
xor
inc
xchg
test
inc
test
lea
addr16
fnstsw
xor
pop
jb
sub
mov
mov
sbb
repz
xchg
decb
fcoms
xlat
sub
shrl
inc
in
popa
shl
or
mov
push
pop
cmp
call
pcmpeqd
jno
xchg
fisttps
arpl
pop
imul
lahf
xacquire
push
mov
daa
out
mov
icebp
inc
into
mov
jecxz
insl
shrl
pop
in
pushf
pop
aam
jp
pop
mov
jmp
push
lock
mov
adc
or
pmulhuw
mov
dec
mov
adc
ds
and
pusha
fildll
jae
mov
dec
pop
sbb
shl
cmp
or
fucom
mov
or
add
pop
js
inc
mov
aas
sub
mov
cmpsb
leave
fstps
mov
adc
xchg
xor
mov
mov
mov
lods
fbld
js
fidivs
sub
push
in
sbb
icebp
test
lock
mov
mov
push
push
mov
rcrl
dec
adc
cwtl
mov
pusha
mov
lahf
xor
dec
cmp
mov
inc
cmp
xchg
das
push
out
mov
je
jge
in
jle
jo
loope
mov
xchg
mov
mov
sbb
sbb
das
xchg
sub
xchg
jbe
sub
das
into
lds
in
cmp
push
lods
shrl
movsb
pop
out
or
push
cmpsl
cli
cmpsl
jmp
xchg
or
idiv
cli
mov
lret
xchg
sub
mov
xchg
mov
push
lahf
and
subb
mov
mov
jp
xchg
int
mov
cmp
shrl
cmp
cltd
and
pop
and
popf
outsl
repnz
add
fdivrl
daa
ficoms
pushf
scas
mov
mov
insb
lcall
xchg
xor
or
test
hlt
and
pop
push
movsl
adcb
xchg
addr16
sti
fistl
incb
mov
insb
sti
in
add
push
lret
jp
ss
adc
jmp
ud2
push
out
xchg
xchg
xor
lea
xchg
imull
push
lods
jp
fadds
sub
call
mov
call
ficomps
xor
imul
dec
nop
test
mov
or
inc
sbb
fstps
jnp
loopne
pop
mov
mov
out
mov
mov
aaa
cmpsl
outsl
outsb
fucom
fcomi
mov
jne
pop
dec
stc
jecxz
mov
dec
mov
push
xchg
mov
lods
imul
jo
pop
and
mov
dec
shll
mov
mov
rcl
adc
imul
pop
in
insl
mov
call
mov
sti
sub
clc
mov
test
sbb
jns
out
xchg
aas
dec
inc
roll
lods
add
shll
lods
adc
idivb
sub
scas
stos
addr16
dec
mov
in
mov
int3
stc
fs
rcll
pop
imul
add
mov
scas
push
cmp
mov
or
sub
cltd
ficoml
sub
inc
jne
push
in
lods
cmp
xchg
jecxz
mov
fnstcw
nop
jg
bound
test
sub
mov
pop
cmp
call
fldl
dec
std
in
xchg
pop
push
jne
sub
cli
fistpl
addr16
in
call
jns
adc
aam
pop
arpl
fwait
or
bound
mov
test
push
repnz
xchg
lret
xor
xor
xchg
dec
xchg
sbb
repz
push
rep
call
jbe
or
std
arpl
jb
cmpb
hlt
sub
test
sub
or
or
lcall
ja
imul
mov
cmp
and
mov
mov
pop
add
and
jecxz
outsb
pop
add
jl
repz
mov
lods
sbb
orl
cltd
int3
mov
sub
sbbb
push
jo
mov
jne
test
aaa
leave
shll
in
int3
loope
in
or
imul
sub
pop
icebp
jae
mov
scas
and
cmp
push
test
mov
xor
and
add
pop
mov
out
mov
iret
push
lds
pop
imul
xchg
jb
lds
js
xchg
jle
pop
xchg
jno
adc
xor
aad
inc
and
push
xchg
sbb
mov
mov
ret
dec
ds
jmp
imul
sbb
xor
dec
out
or
sahf
fwait
jnp
movsb
xor
bound
jmp
cmp
int
std
cli
mov
inc
lcall
fwait
cli
ds
pop
imul
movsb
std
mov
or
lcall
mov
dec
popf
and
inc
lret
add
sbb
gs
sbb
inc
jl
pop
jbe
es
add
adc
mov
xor
in
rcll
sub
sar
xchg
push
inc
sub
scas
je
pop
adc
sub
outsb
mov
xchg
orl
incb
addr16
scas
ljmp
xor
xor
lret
icebp
jo
inc
jb
ds
add
out
dec
mov
in
out
js
cwtl
pop
xlat
jbe
mov
test
add
jmp
adc
fs
scas
mov
ss
inc
in
jmp
adc
sub
scas
push
push
clc
loop
mov
push
mov
pushw
sbb
ja
outsb
imul
test
lea
shl
push
and
in
mov
hlt
dec
pop
mov
repz
loop
xor
push
rcll
arpl
and
clc
repnz
bnd
and
or
inc
inc
xchg
jmp
sbb
jl
mov
fldt
test
sahf
mov
jb
inc
push
cltd
fnstsw
popa
jae
xchg
ficompl
sbb
shlb
add
cmp
jno
mov
jbe
pop
imul
mov
scas
imul
scas
pop
sub
les
loop
xor
shl
xchg
popa
jno
dec
cmp
test
lock
lods
pop
dec
mov
stos
repz
and
cmp
dec
mov
repz
daa
ja
cmp
or
lds
mov
sub
pushf
xchg
ret
cmp
push
mov
out
adc
iret
in
movsb
jo
cmp
mov
ficoml
cmp
enter
das
or
mov
xchg
add
xor
cmpsl
pop
cmc
xchg
cltd
movsl
mov
ljmp
push
ret
pop
xor
jb
xorb
out
dec
xor
push
data16
push
daa
xchg
xor
addr16
fcmove
push
inc
scas
std
stos
jo
mov
mov
sahf
jo
pop
add
sbb
cmc
push
pop
cmp
in
mov
pop
cwtl
cmp
mov
push
inc
aaa
sbb
push
add
sbb
mov
cli
cmp
ss
cmp
or
shll
mov
imulb
pop
rolb
mov
mov
movsl
das
or
adc
test
lods
ror
mov
iret
pcmpgtw
ja
dec
out
loop
enter
daa
dec
add
mov
test
mov
inc
movsb
and
sbb
and
sub
cmpsb
les
std
and
jnp
out
inc
fimuls
iret
out
out
push
add
and
add
lret
faddl
jp
pop
push
add
push
xchg
sub
daa
and
mov
pop
dec
mov
or
or
int3
jmp
mov
mov
pop
push
loope
mov
js
and
or
dec
pop
xchg
out
adc
out
insb
and
test
xor
mov
outsb
enter
xor
clc
pop
pushl
pop
fs
lret
in
cli
fnsave
dec
jo
pushf
pop
jmp
icebp
add
test
pushf
xchg
xchg
je
push
sbb
bound
push
fwait
xor
xor
mov
jae
scas
push
jecxz
and
in
push
ss
cmpsb
mov
mov
arpl
sub
shrl
sub
inc
cltd
insl
sbb
and
fdivr
bound
and
repnz
pop
sbb
xor
fisubl
scas
push
lods
je
lret
sbb
pop
std
jmp
dec
jmp
sti
xchg
cmp
jg
adc
mov
mov
mov
lods
xor
int
fwait
fs
loope
je
mov
and
icebp
inc
adc
push
out
in
mov
sahf
es
stos
call
mov
mov
icebp
dec
add
mov
push
notl
mov
and
push
mov
xor
dec
cmp
bound
into
mov
lcall
ljmpw
icebp
or
fs
jne
or
mov
js
das
push
adc
je
mov
mov
mov
adc
and
push
into
pop
mov
arpl
dec
xchg
xchg
push
bound
enter
pusha
xor
negl
xchg
std
xchg
call
or
cmc
inc
cmp
lret
scas
cli
mov
ret
dec
and
pop
xchg
cwtl
xchg
lods
add
cld
ret
xrelease
dec
repz
pop
loope
push
roll
xor
pop
mov
adc
shll
icebp
adc
adc
stos
pop
lock
sti
test
pop
sbb
inc
sbb
scas
inc
mov
jp,pt
dec
ss
fidivrl
jno
js
push
add
testl
out
xchg
xchg
push
js
sub
testl
inc
push
outsb
sub
and
in
mov
sub
pop
sub
jo
cmc
cltd
sti
imul
shll
call
adc
fcoms
jmp
lock
mov
repz
push
inc
into
adc
push
xor
in
add
xor
adc
inc
mov
xchg
dec
lods
cmp
out
fcomps
out
push
jae
sarl
insl
adc
xchg
dec
dec
or
test
daa
cmpsl
mov
out
addr16
std
and
or
jecxz
shlb
add
mov
jbe
inc
test
int3
lcall
sub
jbe
xchg
shlb
sub
cli
or
jne
xchg
and
push
cmpsb
repz
cmpsb
das
push
insl
push
xchg
cmp
mov
loop
das
orb
mov
push
test
dec
mov
dec
and
movsb
cmc
xchg
in
and
pop
adc
ljmp
push
mov
sbb
or
testb
lock
fimull
dec
pop
or
lock
push
pop
int3
cli
sti
dec
sbb
jle
cs
call
jae
daa
lcall
pop
stc
sti
mov
test
xchg
mov
out
xchg
cmpsl
mov
pusha
ds
sub
cmp
jb
ja
dec
scas
aaa
add
das
data16
test
fneni(8087
jbe
imul
pusha
sti
lret
jle
adc
scas
adc
in
dec
cwtl
data16
or
dec
jns
jne
mov
fimull
ror
inc
es
enter
and
push
loop
push
and
icebp
outsl
jo
pop
ret
inc
xacquire
xor
sarb
mov
xchg
imull
mov
push
call
inc
pop
fdivl
rcrl
aam
cmp
pop
mov
pop
shl
testl
jecxz
xchg
arpl
notl
push
mov
shlb
movsb
xchg
or
das
outsl
nop
jb
ret
movsl
and
leave
jae
test
mov
sahf
inc
cmp
jle
mov
mov
out
flds
pop
jp
inc
ljmp
or
stc
mov
loop
pop
imul
mov
pop
aam
mov
divb
es
lds
xor
xor
fwait
cmp
fisubs
in
push
mov
or
into
cmp
repnz
lods
ds
sub
bound
lahf
xorb
pop
or
stos
dec
jne
and
je
mov
sbb
push
mov
mov
push
cwtl
and
push
pop
pop
in
dec
mov
bound
dec
xorb
loop
test
inc
js
dec
pushf
setbe
sub
lcall
jmp
gs
lret
lods
int
dec
daa
xor
sub
cwtl
popf
call
lret
push
setl
lret
cld
sub
je
lret
xor
std
cltd
stos
es
shlb
xchg
and
mov
mov
and
cwtl
shlb
mov
inc
mov
jg
cmp
add
fcmovnb
out
pop
repnz
jnp
js
loope
fsub
sub
aaa
insb
scas
scas
xchg
cmp
clc
enter
cltd
test
jbe
sbb
xor
pop
jecxz
cmpsb
sbb
lds
and
arpl
rcrl
addr16
lea
pop
xor
push
push
jl
jnp
notl
push
insl
adc
enter
xlat
sbb
inc
cmp
mov
stc
inc
mov
xchg
dec
js
ret
inc
fiadds
inc
out
inc
inc
rcll
xor
or
popl
lock
mov
addl
cld
cmp
dec
cltd
pushf
fwait
aad
mov
mov
or
int
jno
pop
push
xlat
stos
addr16
pop
les
les
sbb
stos
test
jae
add
lcall
outsl
jo
xchg
aam
push
or
push
test
lret
out
ljmp
mov
out
sub
or
in
mov
fisttpl
sub
pop
leave
jg
out
sbb
bound
adcl
int
ljmp
or
cmpsb
and
shll
adc
jne
popf
ret
add
dec
mov
dec
cmp
in
jns
pop
inc
adc
rep
decl
insl
adc
out
jno
jo
or
dec
lahf
mov
mov
ss
mov
movsl
daa
lcall
jl
ret
cltd
cmp
fdivl
shrb
in
mov
push
out
sbb
clc
scas
cmc
sub
pop
add
inc
js
xor
adc
icebp
add
xchg
mov
sbb
mov
sub
loopne
ret
pop
cmp
cltd
call
lret
lods
pop
sbb
jns
ficomps
dec
add
mov
push
ja
adc
idivb
out
adc
inc
xor
adc
loopne
js
aaa
add
scas
push
jle
xor
hlt
dec
dec
cmp
sub
ret
lret
sub
outsb
xchg
ljmp
jg
cwtl
in
add
clc
xchg
or
xorb
rcrb
ret
addr16
mov
xorl
inc
cmpsl
negb
pop
jae
test
ljmp
inc
fmul
das
fiaddl
call
xchg
ret
push
jg
mov
andb
jmp
jmp
push
loop
xchg
mov
inc
sub
sub
cmc
xchg
fcmovnbe
cmp
lods
aam
into
into
jae
aaa
push
rcl
add
add
repnz
jg
loope
test
mov
add
xor
rorb
xchg
pushf
mov
imul
js
cmp
push
mov
dec
cmp
dec
sub
push
sbb
lcall
ds
jns
mov
xor
push
push
sahf
mov
adc
jae
stos
adcb
mov
in
sub
stos
adc
into
xor
stos
push
into
push
cltd
mov
lods
arpl
cli
int3
mov
mov
xchg
inc
fistps
bts
jmp
adc
jmp
and
mov
xor
fwait
xchg
int3
sub
fs
pop
pop
sbb
jmp
inc
add
aad
cld
dec
or
mov
sbb
sbb
mov
push
daa
scas
outsb
mov
mov
ret
jecxz
mov
mov
fxch
push
rol
inc
jg
je
cmpsl
cmp
loopne
outsb
jb
mov
sti
stos
movsl
insl
inc
rclb
mov
or
inc
push
sbb
cs
jae
dec
cmpsl
fwait
sub
inc
cmpsb
pusha
fnstsw
xchg
mov
mov
add
fimuls
push
cmp
push
jne
jg
sub
add
dec
jae
in
adc
jnp
add
lahf
imul
iret
scas
push
ret
mov
popf
add
loope
repnz
lods
dec
js
or
jle
or
out
in
push
aad
dec
xchg
stos
call
add
xchg
jle
or
lret
mov
sub
jp
es
xor
push
add
sti
insl
sarl
inc
stc
in
sub
pushf
enter
fiaddl
cmpsl
movsb
pop
inc
out
or
add
sub
add
add
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
