push
call
ret
ret
jg
mov
iret
jno
rclb
adc
sbb
popf
push
sub
fstps
iret
add
jns
mov
sbb
push
or
rcrl
jl
lds
cs
out
testb
sub
in
loop
inc
loopne
add
add
jo
sbb
out
rcl
xor
jbe
dec
or
push
aam
je
xchg
fists
jns
outsl
fldcw
sti
clc
jo
icebp
outsb
ja
jp
fwait
jg
pop
push
cmp
adcl
lret
pop
mov
mov
xlat
sbb
push
pop
cmpsl
jne
inc
stos
test
fadds
mov
in
enter
cmpsb
das
in
mov
pop
push
std
loopne
push
scas
add
sub
xchg
insb
or
push
xchg
pop
jmp
adc
jmp
push
mov
negl
cwtl
ror
daa
in
cmp
frstor
cmp
sub
fistpl
xorl
aaa
inc
lret
sets
ret
dec
jb
pop
sub
sarl
lods
xchg
loope
mov
orb
xor
aaa
or
xor
clc
mov
cwtl
idivb
enter
jle
out
cmp
bound
hlt
jb
iret
push
mov
movsl
push
and
or
lock
mov
pop
cmp
ret
loop
addr16
enter
jb
insb
adc
jae
ffreep
repnz
shlb
add
popa
jno
outsl
xchg
dec
or
and
add
sub
rcrl
sbb
pop
hlt
loopne
dec
sub
adc
outsb
cmc
fidivl
inc
mov
inc
arpl
hlt
push
mov
lock
jecxz
xor
pop
cli
out
mov
sbb
ljmp
stos
in
pop
sbbl
mov
inc
inc
outsb
loope
mov
xchg
scas
and
add
cmp
test
jmp
cltd
cmc
jo
jne
pusha
les
xorl
lahf
lds
in
jl
dec
cli
in
test
inc
push
outsl
adc
iret
pop
cmpl
jb
cli
push
movsb
jmp
adc
jl
lret
mov
nop
cwtl
sbb
mov
xor
jecxz
inc
mov
fcoml
mov
jo
mov
add
ljmp
inc
mov
setp
cld
mov
xlat
stc
shll
pop
inc
inc
push
lds
mov
dec
inc
add
xor
inc
mov
pop
pop
pop
out
xchg
dec
mov
int
in
jl
dec
insb
icebp
cmc
mov
adc
xor
jge
push
cs
mov
jns
inc
sahf
fcoms
fidivs
mov
xchg
and
cmc
scas
cmp
dec
mov
mov
scas
push
push
xor
and
mov
sarb
sahf
insl
mov
sbb
or
jo
fsubs
in
mov
arpl
pop
repz
cld
gs
mov
leave
push
xchg
into
mov
popa
lods
mov
rcl
bound
fxch
xchg
push
cmpsb
out
inc
lcall
aaa
xchg
push
mov
fisubl
cld
nop
mov
stos
rcl
pop
mov
lock
mov
fcomp
mov
lock
jg
push
mov
clc
pop
xor
mov
in
sbb
push
dec
ljmp
imul
mov
add
xchg
add
in
jae
jl
pop
test
fisubrl
and
test
mov
sbb
cs
push
loopne
movsl
mulb
in
mov
ja
xchg
xchg
pop
xchg
mov
icebp
and
dec
stc
cli
ret
aaa
xor
or
add
dec
add
cmpsb
or
and
push
es
into
mov
dec
lods
in
into
in
ss
xor
jae
fidivl
arpl
loope
sub
xchg
and
mov
out
mov
clc
lret
or
ja
icebp
xchg
aas
adc
cmp
push
ret
mov
lods
sti
push
rcr
cld
sti
adc
jle
mov
les
rolb
and
jb
fisubrl
cmpsl
fwait
js
add
stos
fs
xchg
mov
xlat
sahf
jg
cmpsb
test
repz
enter
jmp
mov
stos
pushf
ret
cmp
xchg
mov
decb
fbstp
adc
out
scas
jp
dec
and
shlb
sbb
cli
jmp
xchg
mov
adc
nop
jg
in
subb
pop
xchg
jg
xlat
and
and
test
ja
mov
icebp
fdivrl
dec
rcll
leave
mov
jle
add
mov
mov
jnp
adcb
mov
or
or
rorl
cmp
cmp
pop
inc
push
adc
mov
or
and
decb
insl
or
pushf
fcoms
test
je
jge
repnz
xor
ja
nop
mov
int
pop
mov
mov
fcomps
addr16
cmc
mov
vpunpcklwd
jns
xchg
mov
sub
cmpsl
out
shlb
fisubs
cmc
adc
repnz
or
je
jno
and
and
lcall
not
insb
stos
test
cmp
jl
or
lcall
in
xor
adc
cwtl
insb
cmpsl
nop
push
popf
push
cmp
flds
cmc
leave
and
push
lds
mov
in
or
jb
shll
unpckhps
shlb
scas
lcall
xor
pinsrw
add
repz
sbb
and
xchg
movsl
add
daa
pushl
mov
jl
mov
push
pop
fldenv
repnz
and
jmp
dec
in
out
inc
cmc
in
outsb
pop
sub
pop
fisubrs
out
mov
lcall
xor
mov
imul
push
insl
lods
pushf
mov
or
xchg
imul
jns
inc
jb
xor
pop
sub
and
lret
pop
imul
cmp
inc
out
sub
adc
aad
ljmp
inc
outsb
addr16
cmpsl
jle
add
jecxz
xchg
jmp
xor
jmp
sub
rclb
add
in
push
inc
mov
dec
sbb
and
mov
fists
push
sub
fwait
call
out
pop
and
fstl
mov
ds
ret
ret
lock
clc
addb
jo
push
shll
mov
shr
rcl
sbb
sbb
sub
pop
in
out
movsl
mov
push
cli
mov
sarb
add
jle
popa
loopne
sbb
mov
jp
push
sub
xchg
pop
jp
int
sti
pop
dec
mov
add
cmp
rcll
push
test
adcl
shlb
push
add
add
jnp
cmp
jmp
jo
scas
or
sarl
pushf
fcoml
adc
push
shlb
adc
dec
pop
test
mov
push
andl
xchg
hlt
dec
mov
cmp
aaa
in
push
mov
jg
mov
cmc
xor
push
mov
outsl
xchg
mov
mov
arpl
test
aas
sub
data16
jp
fcomps
scas
xchg
cmc
mov
lret
and
xor
or
sahf
mov
test
push
das
dec
and
imul
add
fstpl
enter
push
mov
jmp
add
ljmp
nop
mov
mov
push
sub
mov
imul
sbb
pop
jmp
call
in
xchg
int
sbb
lret
out
push
adc
pusha
repz
jns
popf
out
arpl
test
fcomip
ds
and
mov
mov
fs
mov
mov
cmp
dec
fs
sbb
adc
and
or
fldt
push
jg
xor
lods
outsl
popf
iret
mov
and
call
inc
push
jmp
mov
cmp
sub
cmovs
pop
xchg
adc
orb
insl
sarw
sahf
push
cmpsb
hlt
loopne
xchg
shll
mov
lock
fimuls
ret
dec
shll
fwait
push
adc
adc
mov
push
pop
repz
test
mov
lock
loope
rolb
popa
inc
leave
mov
scas
in
rol
and
movsb
xchg
jp
mov
mov
mov
mov
fcompl
mov
in
jl
and
insl
add
outsb
les
stos
pop
decb
mov
mov
mov
ja
sbb
pop
mov
sti
les
sbbl
cmp
xorb
movsb
pop
imul
pusha
aad
adcl
ja
pop
adc
ljmp
xor
push
mov
cmp
pop
lahf
jg
mov
mov
test
cld
aas
cmp
sbb
adc
icebp
mov
bound
jo
aad
sub
hlt
lcall
push
sub
mov
push
test
inc
and
dec
icebp
mov
mov
aas
outsl
ja
jnp
mov
dec
aad
xchg
or
in
test
mov
sub
sbb
mov
fstl
in
lea
dec
fisttps
mov
cmc
cltd
dec
and
dec
jns
xor
pop
data16
pop
dec
mov
fiaddl
mov
in
cmp
jbe
mov
pop
mov
dec
out
loop
xor
fs
fbld
mov
bound
add
cmpl
lea
lock
xchg
dec
in
lret
push
rolb
fistps
pop
cwtl
stc
and
dec
daa
pop
ret
cmp
mov
rcr
push
adc
fsubrs
xchg
push
push
push
lods
xchg
jno
inc
leave
mov
mov
push
pushf
dec
xor
movsb
mov
mov
sbb
sbb
iret
xchg
mov
jp
jge
mov
imul
imul
adc
dec
mov
cmpsb
lods
out
add
ja
or
pushf
lea
enter
inc
adc
lret
add
and
cmp
mov
adc
inc
test
popf
push
out
cmp
add
in
pushf
mov
hlt
push
and
push
je
xchg
outsb
add
fs
or
pop
mov
ja
out
jp
mov
mov
rcrl
mov
cmp
inc
xchg
loop
or
sub
xchg
jmp
mov
ss
mov
rcl
add
rorb
loopne
xchg
pusha
sbb
notb
cld
in
push
jl
fwait
jno
xchg
cmp
push
fistps
jno
mov
xchg
imul
pop
inc
lret
pop
pop
ja
push
mov
cmp
out
notl
insl
and
jmp
test
push
fsubr
cli
dec
pusha
jbe
ja
jb
pop
aaa
arpl
ja
cld
sbb
sbb
stos
push
inc
and
dec
push
in
add
mov
rcll
rolb
dec
mov
test
cmp
lcall
nopl
xor
sbb
mov
dec
jg
gs
mov
daa
or
jge
mov
add
inc
aas
orl
push
cmp
stos
out
mov
fcmovne
add
ss
fs
inc
inc
into
fists
inc
fadds
xor
and
mov
mov
insl
sub
and
div
and
sbb
fwait
dec
adc
cmpsl
rclb
mov
jnp
mov
test
fdivp
xchg
insb
xchg
push
dec
adc
in
sar
ret
jb
movsl
lahf
scas
movsb
test
cli
outsl
jns
cmp
sbb
int3
fstps
cmp
adc
ret
fcoms
int
mov
mov
mulb
pop
ficomps
sub
mov
addl
imul
cmc
mov
sub
negb
out
dec
mov
nop
sub
jb
cwtl
cltd
xor
into
cwtl
mov
sahf
mov
mov
ja
or
cli
icebp
and
push
popl
and
sbb
and
mov
aad
mov
ljmp
adc
in
mov
mov
in
jno
adc
or
popf
jne
xor
sti
lock
mov
jge
mov
test
fbstp
and
test
dec
mov
jno
or
push
push
lcall
jecxz
add
mov
lds
xchg
sbb
xchg
das
jne
mov
mov
repz
into
sbb
lret
sub
adc
mov
xor
sbb
dec
insl
mov
test
cmp
repnz
mov
mov
xlat
mov
fs
popa
jge
dec
push
cmc
int
dec
sbb
loope
rcll
inc
popf
sbb
push
cld
cmp
cld
sahf
xchg
popa
and
mov
ss
gs
sti
xor
push
pop
mov
lea
dec
adc
out
movsb
xchg
push
and
and
sub
and
push
repz
aad
ljmp
sub
mov
and
mov
data16
ss
xchg
sbb
jno
fs
pop
repz
xchg
movsl
inc
sbb
fmuls
push
push
dec
jae
mov
jno
sbb
or
icebp
sbb
test
dec
dec
add
dec
cmp
popf
cmp
js
dec
loopne
sub
cmc
jg
mov
push
popf
movsl
pop
shll
mov
aaa
stos
pop
fsubrl
push
sbbl
jb
in
sahf
aas
add
cmp
ljmp
scas
push
repnz
adc
mov
enter
mov
cltd
fildl
sub
lcall
dec
mov
mov
sub
or
push
add
and
mov
outsb
fwait
scas
jl
test
adc
cmpsb
mov
xchg
and
jbe
fnsave
out
and
fs
xchg
shll
jo
mov
xchg
sahf
mov
push
xor
cltd
jbe
inc
sbb
rorl
adc
jbe
les
sbb
gs
and
iret
push
mov
out
je
scas
lret
mov
inc
adc
daa
jnp
rcll
and
je
pop
dec
pop
adc
aam
adc
jmp
inc
fistpl
les
test
mov
add
mov
jno
adc
fnstenv
mov
loopne
mov
sbb
xor
dec
dec
fsub
inc
cmp
cmp
bnd
mov
sbbb
or
push
fwait
sbb
pop
jl
sbb
push
out
or
or
jle
add
cmpsl
ja
and
sub
sub
dec
push
aas
pop
aad
ja
cmc
mov
ret
hlt
scas
hlt
sbb
shll
pop
fbstp
inc
and
pushf
arpl
enter
loopne
lcall
pop
add
js
sbb
repnz
mov
cmp
lea
pop
pop
or
addr16
in
pop
mov
daa
pop
sbb
cltd
popa
dec
dec
inc
lock
and
ljmp
movsl
test
xorb
mov
or
mov
divl
push
sbb
and
cmp
jle
testl
add
int3
fbstp
cltd
int
das
pushf
shrl
push
dec
out
cwtl
jp
push
sub
mov
jmp
or
pop
lea
loopne
popf
imul
dec
pop
push
mov
inc
inc
xchg
dec
adc
test
int
sbb
and
rcrl
imul
lock
mov
or
jbe
imul
sbb
jnp
jg
push
fstps
cmp
ret
rcl
cmp
aad
push
xor
dec
mov
adc
insb
push
pushf
lods
jbe
ficomps
negb
outsl
xchg
xchg
in
enter
mov
pop
call
clc
push
jl
stos
clc
ds
stos
ljmp
pop
add
stos
das
in
sbb
jae
mov
popa
xchg
popf
jne
mov
lahf
pop
js
divl
or
stc
imulb
pop
js
push
mov
and
adc
pop
dec
lds
es
dec
dec
inc
jge
sub
cmp
inc
mov
scas
in
cmc
scas
pop
push
jecxz
mov
dec
jle
pop
ret
sbb
cmp
aad
popa
pusha
outsb
push
inc
sub
int3
aad
push
mov
jg
sahf
stos
shll
icebp
pop
add
orl
lret
int3
cmc
pop
add
sub
dec
dec
lods
jp
inc
bound
sub
jle
cmpsb
fs
call
jbe
adc
and
jbe
jo
sbb
xor
mov
or
xchg
sbb
je
lds
sbb
gs
ss
jge
xchg
bound
pop
aam
cltd
cmp
mov
xchg
rcll
push
push
pop
imul
xchg
lret
or
adc
cmp
add
inc
add
movsb
mov
lds
imul
mov
cmp
mov
in
pushf
sub
jae
jns
sbb
sub
inc
xchg
dec
jbe
mov
das
scas
imul
inc
xchg
sub
enter
and
cwtl
mov
dec
push
pop
popa
sub
pop
xor
and
out
xchg
out
jmp
roll
dec
fs
icebp
or
xor
mov
scas
test
mov
pop
fisttpl
and
xor
cmpsl
sbb
sarb
les
in
nop
in
ljmp
repnz
cmp
cld
daa
out
ret
and
je
xchg
popf
jp
or
nop
jg
in
mov
dec
jno
clc
sbb
sbb
xchg
cmp
jno
push
into
jp
and
cltd
leave
movsl
jbe
call
das
jl
iret
aad
mov
mov
sub
mov
xchg
dec
pop
subl
testb
sub
sub
loopne
ds
movsl
cmp
xlat
notb
inc
lea
pop
mov
loope
push
mov
repz
adc
sbb
fstpl
testb
jbe
sbb
mov
pop
aaa
test
iret
mov
pop
push
insl
aas
and
jmp
xchg
in
jge
or
lret
cmp
mov
mov
mov
xor
adc
fs
or
mov
sbb
cmp
and
mov
test
pop
iret
fs
mov
scas
and
out
lea
mov
dec
xor
in
mov
int
xchg
add
outsb
nop
ds
xlat
out
mov
pop
jb
lret
mov
call
push
repz
fildll
cli
stos
jbe
repz
lock
xchg
dec
mov
out
mov
mov
dec
sub
mov
jg
je
sbb
pop
cmpsb
pop
xor
jbe
ffreep
push
mov
cmp
test
cs
pushf
jecxz
fdivr
lahf
cli
push
or
sahf
mov
ja
inc
into
lea
insl
pop
or
xor
arpl
rcrb
mov
shrl
pop
popa
data16
inc
and
dec
aad
repnz
or
xchg
inc
int3
lahf
faddl
cli
mov
or
leave
push
inc
adc
adc
ficompl
pop
sbb
fisubs
push
mov
sub
lret
cmp
rol
cli
pop
pop
mov
jns
lods
mov
jmp
lret
shrl
out
cmp
jp
and
add
popa
aam
mov
daa
xchg
ficoml
adc
lret
scas
lcall
sbb
out
xor
push
dec
je
fs
cmc
into
cmpsl
jge
shl
cmp
jo
mov
sub
cmp
cmp
xchg
or
pop
inc
fistpl
mov
fwait
adc
scas
push
and
cmp
stc
mov
in
ljmp
fwait
je
pushf
push
cmpsb
jno
fcmovne
nop
or
cmpsl
out
add
cmp
mov
loopne
rcr
push
pop
fnstsw
popa
add
jl
adc
jmp
hlt
sti
clc
aam
mov
pop
and
outsb
adc
inc
pop
xor
xor
dec
ret
aad
xor
outsb
push
jnp
lcall
sub
and
push
adc
int
test
sub
xchg
mov
sbb
add
push
or
aad
xlat
mov
cmc
xchg
stc
addr16
out
test
and
jg
jae
mov
outsb
push
repnz
pop
fnsave
pop
push
dec
mov
dec
hlt
shlb
ljmp
icebp
aad
mov
jae
push
pop
cmp
cmp
idivb
in
lods
xchg
mov
sub
fildll
fdivs
xor
xlat
out
je
pop
aam
dec
cmc
cmp
xchg
dec
mov
in
mov
and
leave
rorl
push
xchg
sahf
adc
data16
push
sbb
xor
mov
pop
cli
dec
leave
cmp
add
inc
push
dec
loope
sub
icebp
std
jecxz
imulb
add
and
in
xchg
mov
lods
pop
iret
shlb
jg
and
mov
loop
pcmpeqw
inc
push
mov
lds
push
mov
jnp
pop
inc
imul
xchg
out
mov
clc
movsl
setne
sub
lock
cltd
sub
movsb
sub
sbb
jb
mov
stos
loope
cmpsb
loopne
lret
cs
pop
and
test
jns
and
sub
sub
fisubs
fld
lea
ret
and
mov
mov
push
xor
xchg
fs
ficomps
sahf
jnp
or
fadds
jae
xchg
pushl
xchg
xor
pop
movl
mov
mov
bound
sub
pop
fisttps
push
mov
shrl
mov
and
das
movsl
stos
mov
outsl
push
cld
mov
pop
cmp
cld
cld
xlat
xor
inc
mov
faddl
andb
push
mov
out
push
add
xchg
or
scas
mov
pushf
cltd
and
jmp
ret
mov
push
das
mov
mov
loop
std
rorb
rcrb
sbb
xor
pop
mov
and
shrl
fidivs
ja
xor
int3
in
dec
aad
scas
maxps
mov
mov
outsb
add
sub
movsb
loope
push
mov
jbe,pt
ret
std
fcmovu
rolb
mov
push
pop
inc
adc
popf
xor
sub
imul
imul
fnstcw
pushf
repz
outsl
sub
in
dec
sbb
jbe
pop
jno
xchg
mov
sub
inc
mov
inc
push
mov
and
jbe
mov
imul
notb
sbb
add
xlat
lods
jae
das
mov
fsubrp
fsubrl
cwtl
stc
arpl
sub
out
fidivrs
xor
test
jmp
jns
ss
out
inc
add
sub
lods
push
ss
and
push
dec
subl
and
push
sub
fidivs
lahf
cs
jecxz
stos
insl
mov
lret
adcb
mov
mov
jmp
cli
pop
jb
push
inc
sbb
shr
push
test
cmp
adc
push
adc
aaa
inc
xor
dec
fwait
jl
fdivr
fs
stos
adc
cmc
lahf
pop
jmp
push
lods
inc
movsb
ljmp
sbb
xchg
sbb
mov
aaa
mov
and
hlt
cmpsl
repz
dec
sar
arpl
arpl
add
pushf
push
mov
fistl
cmpsb
pop
ljmp
stos
xchg
xor
mov
repz
imul
stos
shlb
rcl
add
inc
mov
lods
mov
push
dec
cmp
aad
adc
addb
sti
imul
mov
jge
push
inc
lock
add
lcall
pop
in
inc
sti
sbb
loopne
mov
inc
and
mov
test
loop
jl
lods
xchg
sub
out
jno
cmp
popa
in
ret
fsubrl
mov
imul
mov
repnz
ja
xchg
adc
xor
mov
push
push
jo
adc
scas
mov
pop
mov
and
mov
push
imul
sbb
inc
lds
adc
movb
mov
jp
add
out
push
cmc
ret
jne
mov
stc
repnz
nop
lcall
movsl
sbb
rclb
xchg
aad
pop
push
sti
or
or
es
add
ds
dec
dec
adc
pop
xor
add
add
ret
popa
arpl
lds
sbbb
stos
jecxz
in
xchg
dec
and
and
or
int3
cmpb
dec
mov
adc
cmp
push
cltd
adc
mov
pop
xlat
inc
dec
mov
mov
icebp
fsubrs
and
jb
out
dec
mov
loop
or
pop
int3
inc
into
das
aaa
dec
push
leave
scas
mov
pop
pop
scas
mov
sahf
mov
lock
shrb
repnz
nop
out
mov
js
mov
std
enter
inc
xor
cld
lds
xchg
les
ljmp
je
lcall
add
aas
js
lcall
jge
test
pop
sub
daa
mov
imul
sti
adc
addr16
imul
inc
sahf
inc
lods
subl
jl
lahf
enter
jne
addl
or
jo
lea
out
push
in
int
cmpl
mov
in
sbb
mov
clc
dec
pop
mov
or
shrb
inc
aas
ret
in
xchg
bound
in
inc
xor
movsl
stos
test
sub
mov
push
or
jl
sahf
mov
adc
pop
cmp
inc
dec
jns
and
pushl
ss
out
testl
scas
aad
aaa
cmp
cltd
mov
aad
fs
rcrl
test
cwtl
sub
ss
inc
imul
cmc
je
pop
cmp
test
sbb
jb
imul
popf
cmp
stc
jnp
int
scas
adc
leave
mulb
inc
out
ret
aas
pop
push
or
adc
sbb
xor
dec
movzwl
inc
adc
cmp
test
aaa
lret
xchg
sub
cmpsb
push
pop
adc
out
sub
lret
fnsave
pop
ss
out
push
cmp
mov
clc
adc
push
scas
in
mov
sbb
aas
mov
inc
imul
mov
stos
sub
mov
ds
stos
cmp
mov
adc
xor
xchg
jae
jo
and
mov
fmul
cltd
sbb
sbb
sub
dec
sbb
add
xchg
mov
mov
fdivrl
ffreep
insl
imul
dec
xchg
add
ss
push
adc
jle
mov
cli
jno
out
cmpsb
pop
lock
jle,pn
cmp
dec
ss
mov
dec
mov
mov
arpl
jmp
push
add
sub
pop
test
icebp
dec
jne
xchg
testb
scas
xor
aam
sbb
cld
mov
jne
ffreep
cmp
imul
mov
pusha
push
clc
mov
rcrb
ss
adc
inc
out
add
repnz
xor
jmp
xchg
ror
push
push
jmp
push
fpatan
ja
loopne
push
je
cmp
loope
sub
mov
lds
aam
outsb
loopne
rorl
push
aaa
test
xlat
sbb
inc
jo
pusha
jge
and
or
push
ds
inc
ss
lahf
in
out
cwtl
mov
lret
mov
mov
push
fadds
ror
mov
adc
aaa
fistl
pop
mov
cmp
pushl
xchg
jl
nop
ret
mov
ljmp
ror
out
fsubrl
orl
lock
cs
xchg
adc
outsb
or
inc
out
insl
cmpl
lea
push
sbb
or
sbb
xchg
xchg
rcll
mov
scas
loop
cwtl
adc
ret
sub
lea
loopne
sbb
mov
mov
int3
mov
pop
sarl
leave
in
sbb
fwait
loopne
int
cltd
int3
jbe
dec
xchg
insb
push
ss
pop
mov
insb
ljmp
loop
in
das
das
fcmovb
mov
adc
loop
pop
push
fwait
push
pop
and
mov
sub
xor
and
test
pop
aad
push
repz
inc
or
dec
fisttpl
lcall
push
divl
fcmovnb
repz
jne
in
addl
xchg
or
adc
sysret
sbb
inc
push
call
pop
ss
leave
pop
jns
mov
movsl
test
cmpsl
pop
add
mov
das
iret
inc
xor
add
enter
push
ret
jb
cmpsl
ret
cmp
sbb
outsl
jp
mov
data16
dec
ja
insl
sub
cmp
mov
sbb
mov
ja
subb
dec
mov
cmp
cmp
jmp
or
sarl
dec
adc
jmp
mov
mov
cmp
int
ss
jb
bound
enter
or
cld
inc
add
mov
jge
ret
setge
insl
out
push
push
pop
and
test
test
ret
ljmp
cmp
pop
sub
fs
mov
lret
cli
loop
adc
mov
call
mov
xor
cmp
ret
hlt
jge
lds
gs
scas
mov
gs
lock
push
mov
cmpsl
xchg
sub
iret
rcrl
or
cltd
pop
or
push
push
fwait
and
pop
in
in
scas
or
xchg
fstpl
fisttpll
sub
lret
add
loopne
mov
push
stc
add
fstps
mov
xchg
loop
xor
lret
cmp
jmp
clc
xor
test
jg
inc
cmp
mov
jo
mov
xchg
pop
pop
xchg
adc
hlt
stos
out
les
test
pmuludq
loopne
or
push
fistpl
aas
inc
mov
insb
imul
lret
mov
lcall
cltd
cmp
arpl
push
sti
xchg
xchg
or
inc
sbb
sti
sbb
sbb
xchg
in
dec
xor
test
pop
jl
adc
push
cmpl
cmpsl
in
div
push
and
mov
cmp
add
stc
mov
sti
lret
pop
and
push
xor
or
dec
pop
xorl
pop
cmp
loope
fists
xchg
xchg
mov
rolb
jge
std
cmp
scas
add
loope
pop
insb
nop
gs
push
xchg
sub
lods
in
sbb
sbb
jae
hlt
test
and
xor
mov
push
lock
pop
lock
sbb
imul
frstor
mov
add
push
sbb
inc
int3
and
xor
inc
movsl
ret
leave
mov
lret
jl
mov
push
int
jb
ret
push
not
je
in
scas
inc
idiv
pop
fpatan
xlat
sbb
ret
pushf
out
repz
cwtl
aam
push
scas
inc
mulb
fildll
clc
jg
inc
dec
and
or
stos
pop
movsb
mov
pop
sbb
cltd
xchg
pop
subb
adc
sbb
sti
jecxz
popa
loopne
les
ss
and
cmc
test
jp
push
dec
test
loop
or
jns
scas
insl
aam
add
leave
ljmp
jne
movsb
cld
mov
xor
imul
xlat
rcrb
fwait
fs
xchg
mov
out
pop
ficoml
xor
and
jno
bound
je
fidivrs
insl
add
rclb
mov
scas
push
pop
jb
mov
out
mov
add
cmp
jmp
das
rorb
aas
mov
cli
jmp
shrl
pusha
push
arpl
loope
xchg
or
and
jne
xchg
mov
xor
xchg
loop
stos
sbb
out
mov
int
or
jge
mov
lea
sbbl
inc
adc
push
mov
stos
ljmp
sbb
sti
cmp
mov
rcll
js
mov
push
xchg
int3
test
nop
pop
sbb
cmp
xchg
xor
cmp
dec
repnz
mull
lods
sbb
test
xor
das
jbe
mov
mov
sbb
loopne
pop
cmpsl
xor
or
lods
test
fldenv
dec
ljmp
mov
xchg
push
adc
xchg
sub
mov
adc
not
adc
jo
cwtl
ror
lahf
test
out
jns
mov
xor
cmpb
xor
aaa
ror
in
cld
inc
cmp
or
xchg
int
pushf
or
cmp
jns
pop
jbe
add
xlat
dec
xchg
movsb
sbb
scas
dec
ret
jne
cmc
movsl
mov
dec
lea
fs
sbb
lcall
cmpsb
cmpsl
pushf
lret
inc
out
push
xchg
jecxz
iret
or
or
das
ficompl
push
cs
mov
insl
dec
lock
test
test
sbb
xor
sti
imul
inc
add
mov
lods
stos
clc
adc
testb
push
fnsave
popa
mov
sub
mov
rcll
clc
add
jp
push
cmc
rolb
sub
mov
jno
cmpsl
outsl
mov
jnp
jg
mov
popa
mov
mov
mov
push
cmc
outsl
dec
sub
pop
push
pop
aas
iret
cmpb
notb
enter
into
cmpl
in
jns
cmp
jle
mov
jge
arpl
fisttpl
rorb
fcomp
fstpt
push
mov
pop
dec
mov
fnstcw
sbbb
je
mov
add
clc
xchg
lock
inc
pop
aad
mov
mov
outsb
mov
movsl
icebp
bound
sbb
xor
js
sub
jle
fistpl
add
cmpsb
jno
add
push
aaa
adc
ljmp
sti
add
cltd
inc
xchg
xor
cmc
xor
xor
out
sahf
int
cmp
dec
xchg
xor
sti
sbb
mov
sti
enter
add
add
rclb
aaa
movsb
aaa
aam
push
add
mov
aas
cmp
jge
pop
mov
adc
dec
pushf
shlb
daa
shll
cmpsl
dec
insb
aam
inc
pop
mov
push
lret
ja
pop
int
jmp
fs
cmp
cmp
jmp
or
iret
xchg
pop
or
jo
mov
jo
inc
ret
jge
ss
pop
rcl
mov
inc
xorl
lcall
loopne
addr16
xchg
lcall
loopne
into
push
ss
call
les
loopne
out
fnstenv
xchg
mov
loope
out
lret
inc
mov
cmc
shrb
les
or
jae
inc
xor
in
subps
sbb
popf
into
pop
xchg
dec
aas
dec
repnz
inc
pop
sti
push
das
and
dec
lds
call
rcll
movsb
std
adc
lret
inc
mov
sub
mov
outsb
lock
lods
add
cmovo
div
aad
cltd
sub
clc
push
lea
jp
imul
xchg
mov
push
adc
test
xchg
cltd
push
repz
int3
repnz
xor
repnz
int
mov
pop
enter
mov
jo
std
adc
out
mov
aas
mov
inc
push
int
pop
pop
mov
jg
push
shll
cmp
mov
outsl
xor
mov
dec
mov
and
mov
mov
addr16
xchg
mov
xor
mov
ds
cmpb
ret
xor
pop
xor
dec
fistl
inc
add
cli
mov
lahf
jns
xor
and
mov
dec
out
fadds
push
add
aaa
cmp
or
cmpsl
nop
add
push
push
cmc
insb
popf
aad
pop
cmp
dec
push
mov
add
mov
and
sbb
jmp
add
sub
sub
movsl
cli
lcall
movq
out
hlt
pop
mov
test
pop
dec
or
loope
pop
and
rorl
hlt
jl
scas
popf
jle
or
sub
jb
pop
loopne
enter
xor
pop
pop
gs
test
sbb
in
adc
jnp
in
or
addr16
pop
or
pop
js
in
scas
mov
jnp
xchg
dec
pop
xchg
in
xchg
mov
iret
fmul
and
fisubrl
sbb
mov
mov
ficoms
and
ret
leave
pushf
push
ljmp
fwait
mov
dec
stos
and
fdivrp
cmc
movsb
mov
arpl
pusha
pop
in
xor
push
mov
push
mov
xchg
call
mov
aas
addb
imul
or
mov
mov
repz
mov
sub
add
jecxz
gs
ljmp
aad
popa
cmpsl
loop
mov
shr
cmpsb
pop
mov
std
sub
lcall
ret
out
pop
adc
push
test
movsb
xor
add
icebp
sub
jns
aam
cs
or
sarb
lock
ficomps
leave
and
ficoml
cld
sbb
bound
pop
xor
hlt
xchg
xor
fnstenv
fmuls
lret
jge
dec
pop
lds
lds
mov
mov
fbld
sti
jo
sub
fistps
adc
mov
and
mov
mov
jmp
test
out
cmp
orb
sub
mov
sub
sbb
inc
jl
movsb
adc
jbe
rorl
jbe
in
sbb
in
sbb
aas
jp
dec
adc
push
in
jnp
shlb
lock
pusha
push
adc
test
push
dec
mov
sbbb
xor
pop
mov
lcall
mov
add
sbb
pop
stos
ds
cmpl
fdivl
dec
pusha
fsubrl
in
clc
sub
cli
jmp
pushf
mov
arpl
dec
adc
inc
testl
in
jae
lret
rol
lret
xchg
rolb
or
inc
xor
xchg
test
mov
jle
xadd
adc
bound
or
xor
push
sub
negl
cmp
int3
xor
xchg
mov
in
sahf
roll
xchg
mov
dec
mov
mov
jne
sub
push
or
dec
jl
repnz
cld
dec
aas
cmp
xchg
std
jge
and
mov
fiaddl
pop
xchg
or
leave
xlat
and
mov
push
pop
jg
ja
sub
push
xor
popa
cmp
or
cli
ss
sahf
call
insl
sub
mov
cmp
jge
sub
jns
shr
pushl
ss
add
inc
int
js
dec
loop
xchg
adc
dec
jbe
jle
mov
xor
and
push
data16
pushf
sbb
fdivrl
dec
lods
jp
mov
dec
ret
cs
testl
and
add
in
nop
addb
das
in
inc
dec
xor
arpl
imul
lcall
es
inc
or
das
scas
aas
aam
sahf
insb
aaa
jae
add
push
scas
lods
mov
inc
xor
icebp
push
xor
push
mov
imul
mov
lds
lahf
push
outsw
jb
pusha
xor
lcall
push
mov
push
jmp
loopne
int3
or
and
xor
adc
cmp
negl
bound
sub
cmp
inc
andl
pop
jp
lret
sub
repnz
in
or
pusha
fwait
outsl
sub
cmpsl
mov
je
les
and
xor
incl
lods
je
cltd
sbb
mov
and
outsb
imul
pushf
std
fiadds
dec
outsb
sbbb
mov
ds
mov
leave
popa
lcall
sbb
ret
notb
push
int3
dec
mov
ficomps
icebp
pop
cmp
popf
aad
xor
adc
push
popf
mov
jb
push
lods
cmp
scas
popa
mov
mov
cmp
fcos
mov
inc
adc
xchg
dec
lock
sbb
adc
aad
push
jp
dec
cmpsl
mov
faddl
mov
std
int
ljmp
icebp
daa
add
add
mul
mov
lods
push
and
fsubs
jae
cld
icebp
cmp
sub
dec
xor
call
jae
mov
jo
xchg
out
cmp
lock
ds
dec
mov
daa
outsl
cmc
pop
sub
pop
iret
dec
icebp
call
test
sti
push
and
pusha
dec
or
jecxz
repz
mov
sbb
dec
push
bound
pop
push
and
loopne
xchg
mov
push
or
mov
jbe
orl
push
inc
dec
andl
mov
dec
add
bound
in
clc
repz
jno
dec
sbb
sub
dec
outsb
sub
mov
jnp
mov
jo
adc
lods
adc
lods
cmpsb
jno
lcall
sub
lret
sbb
or
inc
ss
or
movsl
cmp
sub
cmpsb
lret
jo
sbb
fcompl
push
in
cltd
or
lods
in
jbe
popa
push
shll
repnz
ret
or
sub
sbb
jne
jge
ds
adc
imul
mov
inc
xchg
in
loopne
mov
dec
icebp
gs
mov
ss
mulb
mov
repnz
mov
loope
jle
lods
cltd
xchg
into
repnz
push
movsb
mov
cmp
add
fisttps
int3
pop
lcall
repnz
ja
mov
ja
xor
leave
sbb
pop
cmc
movsb
enter
nop
icebp
scas
es
test
add
and
shl
push
mov
xor
rcrl
inc
cmp
and
mov
push
lahf
inc
sahf
dec
dec
ret
lods
out
ja
adc
add
and
add
sub
mov
stos
add
test
jg
mov
and
adcb
mov
ss
test
cmpsl
pop
mov
daa
es
scas
mov
pop
xchg
sub
les
mov
cld
pop
icebp
and
xchg
add
cmp
jmp
mov
div
jae
sahf
scas
loop
fdivl
cli
pushf
push
inc
sbb
sbb
in
jge
xorb
xor
mov
mov
sub
repz
add
dec
cmpsl
out
ret
stos
vsqrtss
adc
adc
int3
lods
in
jecxz
addr16
dec
mov
fisubs
aad
addb
mov
cmp
lods
adc
stc
and
subb
loope
into
xchg
insl
daa
jmp
cmp
loop
lret
lods
rcr
idivb
lahf
and
fistps
xorl
push
sbb
or
mov
cli
dec
aam
sub
popf
xlat
repz
shrb
loopne
loop
imul
cmp
inc
addr16
sub
and
or
and
jns
insb
jne
das
push
pop
mov
cld
lcall
icebp
add
notl
xchg
pop
jne
adc
dec
pusha
mov
aas
push
pop
push
adc
xchg
jle
addr16
add
jmp
fs
adc
xor
addr16
cmpsb
cmp
xor
cwtl
out
or
ret
enter
and
push
pusha
mov
cmp
sub
sti
repnz
adcl
pop
nop
xchg
xchg
xchg
add
out
mov
inc
push
push
mov
xor
cli
ss
push
lcall
dec
lods
sub
leave
or
arpl
sahf
or
ret
pop
pop
mov
adc
inc
loopne
jge
addb
cmc
nop
xchg
mov
das
add
jecxz
cmpsl
dec
aaa
add
push
mov
mov
sarb
aad
pop
dec
sub
cltd
movsl
xor
mov
nop
dec
and
es
mov
add
cmpsb
fs
xchg
sbb
stos
sbb
inc
mov
sti
test
pusha
xchg
ret
sub
das
mov
stc
call
push
sub
bound
dec
test
sub
pusha
sbb
ss
jo
stc
mov
fldt
neg
jle
mov
sub
xor
mov
or
mov
test
cwtl
xor
in
shll
inc
sbb
int
test
pop
lahf
inc
mov
mov
push
leave
cwtl
repz
pop
mov
add
mov
push
cmp
sbb
jnp
lock
pop
xchg
test
clc
addr16
xor
pop
sbb
in
lcall
subl
je
imul
cmp
add
cmpsl
in
add
stos
scas
push
mov
dec
dec
scas
jb
ljmp
push
mov
and
push
pushf
mov
xchg
jle
push
pop
jno
enter
cmp
jbe
dec
push
or
add
push
or
adc
arpl
or
xchg
mov
xor
sahf
jecxz
pushf
jge
enter
mov
rcll
outsl
fs
in
sub
fcompl
movsw
jge
pop
mov
xchg
insl
push
xor
inc
repnz
inc
and
test
cmp
and
insb
inc
xchg
or
pop
mov
pop
xchg
push
sti
mov
jbe
jg
jbe
sub
xchg
adc
inc
stos
test
add
insl
cmp
lods
fistpll
cli
loopne
and
xor
lcall
out
imul
lock
mov
mov
inc
dec
push
std
xchg
in
cld
fadds
xchg
ds
xor
adc
sbb
ljmp
iret
xor
sbb
cmp
sbb
jns
movsb
inc
mov
jl
aad
cmpsb
js
pusha
popa
jle
test
out
lret
sub
in
xchg
movsl
and
adc
xchg
dec
fdivr
xor
fucomp
xchg
xor
shrb
mov
test
mov
popf
je
push
jno
pushf
push
outsl
jmp
xor
or
es
add
js
dec
divb
inc
adc
fdivl
cld
inc
pop
lods
xchg
mov
rol
das
jl
out
jecxz
xchg
jmp
out
pop
or
cmc
scas
scas
fwait
and
lahf
pop
push
cwtl
sub
mov
jp
lock
cmp
imul
pop
je
leave
mov
imul
out
pop
sbb
add
cmpsb
add
test
jbe,pt
push
imul
cmp
sub
aas
dec
imul
aad
xchg
rcrb
mov
sub
fildl
push
or
call
jbe
cmp
pusha
cmc
cld
jecxz
sbb
mov
iret
bound
sbb
add
xlat
neg
mov
popf
ret
ret
and
inc
adc
clc
mov
loop
rclb
cvttps2pi
cld
xchg
mov
and
adc
mov
repz
sub
pop
sbb
pusha
mov
inc
es
add
push
call
movsl
rorl
imul
mov
std
xchg
cmp
cmp
and
sub
js
mov
mov
in
cmp
int3
shll
ljmp
and
pop
sbb
mov
push
movsb
fs
imull
es
imul
repnz
xor
push
fwait
xor
add
xor
sbb
adc
mov
lret
add
push
jl
sub
inc
mov
add
lock
sti
mov
mov
mov
lahf
mov
pop
mov
dec
cmp
in
fcomps
push
push
sahf
sbb
lock
cmp
or
mov
addr16
push
popa
jbe,pn
shlb
loope
xor
dec
push
stos
repz
or
das
sbb
lds
mov
push
loop
mov
push
xorl
xor
adc
enter
ret
jg
in
popf
data16
mov
out
push
fs
mov
cmp
pop
repz
xchg
iret
popa
pop
mov
mov
test
aas
rcl
add
mov
mov
xchg
fdiv
push
cmp
leave
shrl
test
xchg
pop
xor
ss
jne
in
mov
cli
stos
and
sub
nop
push
jl
test
xor
mov
rcrb
push
cmpsb
cmp
or
scas
mov
sub
add
or
test
shlb
jns
inc
mov
mov
add
cmpsb
inc
mov
pop
mov
cld
push
push
mov
idiv
push
cmp
daa
mov
inc
jae
loopne,pt
and
xchg
mov
scas
cmp
sbb
adc
jmp
les
xor
out
add
addr16
dec
lahf
xchg
mov
movsl
jp
lea
add
pop
mov
pushf
pushf
xchg
pop
lods
pop
pop
cmpsb
je
cmpl
les
arpl
ljmp
adc
push
daa
rcll
push
sub
outsb
mov
pop
mov
imul
in
xchg
fdivrl
xor
xchg
popa
jo
mov
add
std
dec
jne
jp
inc
inc
xchg
inc
rcrb
cmpsl
pop
into
imul
repz
test
outsb
push
add
pusha
outsl
sbb
mov
xchg
pop
jb
xor
in
jmp
mov
int3
cwtl
pop
nop
cmp
dec
sbb
scas
fcompl
pop
xchg
addr16
shrl
movsl
pop
test
mov
adc
sub
sbb
sbb
cmp
pop
movsl
cmpsl
lcall
pop
jle
shrl
push
or
lret
adc
orl
or
out
mov
aas
mov
nop
shlb
fnstenv
push
test
fistpl
fwait
das
xchg
dec
dec
lods
push
sub
gs
shrl
imul
xchg
xor
pop
stos
mov
inc
pop
call
dec
ljmp
xor
adc
dec
mov
test
in
adc
sbb
aam
popa
in
sar
or
push
inc
cmp
jb
out
mov
hlt
mov
clc
daa
pop
cld
mov
and
stos
scas
dec
ja
lea
push
fcomip
movsl
mov
pop
add
addr16
mov
jmp
jg
out
adc
dec
in
mov
sub
push
test
leave
xor
mov
out
xchg
clc
fidivs
sub
push
cmp
xlat
pop
xchg
imul
jae
mov
insl
or
int3
das
inc
ds
xor
lods
adc
mov
jg
inc
xlat
movsl
std
cmp
in
inc
xor
mov
jp
mov
les
rorl
sti
mov
pop
mov
inc
cs
sub
dec
sub
xor
aad
rolb
inc
cmp
mov
inc
jb
xorb
jno
xor
xor
ds
sbb
inc
push
cmp
loop
andb
mov
xchg
mov
mov
cltd
je
xchg
pop
adc
xchg
rcrl
pop
mov
xor
pop
in
mov
pop
ror
adc
fbstp
daa
rcrl
dec
lcall
adcb
ret
or
repz
mov
push
addr16
in
je
and
dec
push
mov
jns
repnz
mov
push
jl
sub
inc
xor
rol
sub
and
xchg
and
push
sbbl
lcall
mov
mov
dec
push
or
int3
stos
dec
mov
or
mov
in
push
jg
or
sub
cmp
adcb
arpl
fnstsw
sub
sub
jecxz
xchg
cmc
mov
iret
mov
shl
loope
push
sbb
ss
jo
or
jne
pop
dec
loopne
shrl
adc
adc
nop
cmpsb
clc
pop
out
loope
fxtract
stc
jg
or
xor
dec
decl
sbb
lcall
loop
sbb
and
fs
xchg
add
and
mov
mov
jecxz
mov
xchg
rorl
fsubrs
add
jb
add
mov
orl
pusha
test
mov
sarb
imul
and
enter
fstpl
xchg
fildl
stc
ja
out
jnp
leave
aam
xchg
inc
insl
inc
jae
cli
test
loope
je
pop
xor
addr16
stos
mov
mov
push
lock
inc
repnz
pop
cmp
ficoms
push
popf
int
dec
add
lods
cmp
loop
mov
lods
aam
cmp
pop
mov
adc
mov
add
std
push
iret
ret
fadd
mov
ret
outsl
push
adc
mov
insl
sbb
add
dec
inc
push
jb
dec
add
sub
out
adc
cltd
out
nop
test
push
lds
ficoms
in
inc
or
notl
ja
jle
mov
jg
fstpl
or
jg
fwait
mov
shlb
mov
mov
adc
or
addl
push
testl
and
xchg
icebp
cmp
hlt
ret
mov
and
add
pop
push
notl
xchg
scas
cwtl
loope
jb
arpl
dec
gs
adc
loop
fisubl
inc
jmp
ret
mov
inc
mov
cmp
inc
jl
pop
lock
cmpsl
cmpsb
inc
push
sahf
leave
mov
jle
imul
roll
mov
dec
stos
les
stos
mov
pushf
sbb
punpcklbw
adc
xor
lock
or
daa
int3
in
das
test
fnstcw
mov
cmp
stos
sub
and
push
push
loopne
je
jmp
leave
inc
adc
push
push
jo
dec
inc
add
mov
je
add
sub
ss
hlt
sbb
or
sub
movb
xlat
addr16
adc
pop
int
xor
imul
xchg
and
inc
repnz
cltd
std
scas
and
ss
xchg
and
mov
adc
xchg
pop
sbb
push
outsb
push
jge
daa
imul
fstpl
pop
and
or
xor
aas
imul
sub
and
sub
ret
jp
pop
je
rcrb
mov
sbb
int3
mov
add
ljmp
data16
and
in
xor
out
dec
in
inc
push
mov
sub
xor
mov
out
dec
aas
in
cmc
jo
iret
les
mov
xchg
rclb
dec
fisubrs
incb
setge
jge
push
xchg
adc
cmp
xchg
push
je
aas
xchg
lret
dec
popf
dec
pop
sub
inc
inc
les
xchg
cltd
inc
or
add
inc
add
add
mov
imul
push
fstps
pop
mov
push
add
push
dec
scas
sti
ja
mov
mov
jmp
in
mov
mov
cli
pop
or
into
sub
int3
ljmp
repz
cmp
and
repnz
cmc
clc
lret
mov
fucomi
add
mov
lds
and
dec
aam
notl
cmpb
xor
cmp
into
popf
add
mov
data16
scas
cli
inc
imul
lret
cmp
mov
xchg
fucom
mov
dec
xor
jecxz
cmp
insl
jle
mov
rorl
shrl
fsubrl
mov
into
or
mov
add
dec
jge
das
int
fcomi
xchg
mov
mov
stos
test
popf
and
xor
xor
mov
fnsave
loope
aam
mov
ljmp
mov
cwtl
int3
sub
mov
fcmovu
jecxz
mov
pop
push
and
dec
sarl
hlt
cmp
sub
sbb
clc
jl
push
rcr
ljmp
dec
pop
dec
sub
mov
mov
sahf
into
sbbl
int
andb
mov
cltd
push
rcl
dec
mov
out
gs
ret
inc
mov
cmpsb
mov
ss
bnd
fwait
push
xchg
mov
sub
cmpsl
and
pushf
cli
cltd
jns
xchg
daa
sbb
push
pop
test
out
test
std
xchg
jle
movsb
fcmovbe
add
jbe
sub
imul
xchg
or
add
cwtl
fs
fdivl
xor
out
add
inc
shr
or
pop
xor
clc
mov
in
lock
dec
dec
sahf
sbb
into
fldenv
pushf
test
das
test
mov
pushl
leave
aas
lcall
arpl
mov
sbb
test
mov
pop
mov
nop
mov
andb
cmp
ret
push
repz
xor
cmp
xor
pop
call
call
cmp
mov
jb
xor
inc
in
outsl
xchg
enter
cli
popa
or
jbe
call
lea
mov
pop
aas
fwait
and
fmull
push
cmp
add
into
test
fwait
xor
sub
je
pop
shr
cmp
std
dec
sub
imul
enter
xor
mov
xor
pop
fwait
jp
idiv
xchg
dec
push
jo
pushf
ljmp
pushf
stos
cltd
in
outsl
cmp
ficoml
call
out
repnz
jo
pop
push
mov
fdivl
mov
xchg
cld
sub
dec
jg
pop
cltd
arpl
arpl
pusha
push
and
bnd
push
and
mov
cmp
outsb
incb
int
fwait
mov
xor
sub
push
xchg
dec
adc
stos
lret
sbb
les
cmp
jge
jge
movsl
pop
dec
or
xlat
mov
adc
jmp
fs
jo
lods
mov
push
add
sbb
and
daa
pop
pushf
xor
adc
push
add
cmc
jo
icebp
ror
les
mov
mov
incb
movsl
and
ret
scas
repz
sub
xchg
mov
gs
sti
stc
jae
pop
neg
faddp
fidivrs
mov
cltd
sub
pop
faddl
mov
mov
fadd
xchg
fcmovb
in
aaa
cmp
bound
int
adc
pop
popf
mov
sub
dec
mov
or
lea
call
mov
mov
adc
popf
in
rcr
lret
jecxz
cli
popf
mov
cmp
pop
fs
lods
sti
mov
std
in
or
push
test
push
inc
out
fsubs
stc
sahf
fstp
or
ja
jle
sub
mov
cmp
mov
push
mov
mov
push
jnp
scas
xchg
dec
hlt
and
xchg
sbbb
xor
insb
jmp
or
pop
inc
cmp
or
pop
adc
mov
cmpb
jbe
lods
aad
mov
addl
in
push
jle
push
and
or
or
or
dec
imul
cmc
fwait
sbb
jo
mov
sbb
and
orb
pop
or
aaa
fdivl
jb
push
xchg
push
cmp
push
in
or
and
stos
sub
rcr
cmp
mov
sub
stc
xchg
fwait
push
into
cmpsl
fmull
sbb
inc
leave
ss
mov
push
inc
and
pop
rorb
inc
push
inc
jp
cmp
inc
out
cmp
in
xor
mov
or
nopl
stos
mov
or
stos
jno
xlat
sub
shlb
add
add
test
stos
push
daa
xchg
add
ret
jl
imul
leave
mov
aad
add
data16
mov
adc
rorb
lret
divb
loopne
in
movsb
in
inc
adc
test
in
mov
fimull
adc
ret
mov
pop
adc
cltd
add
jg
mov
mov
jle
sbb
mov
test
clc
add
jno
data16
push
pusha
jae
inc
jnp
out
push
mov
filds
xor
in
cmpsb
xchg
out
lahf
lret
das
add
pop
dec
sub
out
test
rcrb
enter
mov
imul
out
push
jle
aam
or
and
cli
hlt
xchg
std
insl
mov
jae
mov
lea
mov
fwait
xchg
mov
fistps
hlt
and
mov
push
int
iret
cli
jb
pop
push
adc
mov
mov
xchg
mov
lods
mov
inc
jns
mov
repz
cmp
xchg
loope
outsb
sbb
jle
mov
aas
xchg
push
inc
mov
inc
adc
adc
and
gs
jl
int3
ret
inc
inc
dec
lret
rcrl
inc
jp
inc
in
in
cmc
jae
rolb
inc
jl
or
sub
inc
lcall
aas
sub
pop
xor
sbb
inc
sub
lret
pop
jno
in
mov
and
ja
jl
ss
lret
jg
jns
xchg
outsb
mov
pop
outsb
pop
int
jge
and
pop
lcall
pop
sbb
jbe
mov
lods
hlt
lahf
pop
addr16
outsb
mov
ficoml
repnz
shll
mov
movsl
es
push
jne
stc
jge
add
jp
add
popf
aam
push
cmpsl
pop
in
fists
out
inc
push
inc
mov
or
push
std
mov
push
cmp
mov
mov
dec
dec
xchg
mov
xchg
jecxz
pop
cli
lahf
dec
sqrtps
leave
lods
out
and
ljmp
stos
shll
shll
mov
out
and
iret
lret
dec
lock
push
or
in
pop
or
pop
xchg
cwtl
lods
cmpl
pusha
les
int3
mov
cli
sub
out
ret
mov
jnp
cmp
mov
xchg
push
mov
jne
shlb
sahf
mov
aad
in
btc
data16
sub
fsubs
es
add
xchg
lcall
ret
mov
adc
push
fsubs
pop
in
inc
rcrb
cltd
loop
cmp
xchg
insb
lds
jg
ret
inc
in
mov
dec
cli
sbb
jecxz
roll
aaa
mov
sbb
dec
mov
clc
xchg
stc
mov
jns
push
adc
ret
notl
ljmp
mov
adc
nop
and
or
lret
adc
into
inc
sub
lcall
aam
fcoms
push
in
adc
inc
je
jmp
xchg
insl
xor
and
or
sbbb
mov
xchg
leave
mov
pop
mov
data16
iret
push
push
aas
push
fucomi
cmp
or
ss
jg
jae
xor
sbb
push
inc
pop
push
jbe
out
mov
add
cmp
xor
lds
jp
jae
jb
stos
mov
ss
int3
sbb
in
fdivrs
pushf
iret
inc
les
mov
imul
jnp
int3
mov
mov
insl
push
mov
mov
push
aam
sbb
rcrb
jmp
xchg
je
mov
sahf
mov
dec
xchg
pop
cld
xchg
movzwl
jp
lahf
in
cmp
jno
xor
cmp
mov
outsb
stos
ficoms
fidivrs
mov
push
insb
sarb
mov
and
mov
cmpl
dec
mov
ss
outsb
pop
inc
inc
js
sub
ret
mov
add
nop
cmp
mov
gs
jge
inc
les
push
out
sub
sub
inc
ficoms
lret
push
mov
movsl
sub
mov
lods
jo
push
push
xor
and
and
jl
xlat
sbb
lock
mov
inc
cmpsb
xchg
lock
mov
das
push
xchg
dec
shll
shrb
mov
add
add
enter
les
mov
cmpsb
test
adc
pmulhw
pop
ljmp
lods
adc
cmp
lds
dec
call
sbb
loopne
xchg
ror
sahf
in
cltd
or
dec
fimull
pop
xchg
js
xor
xchg
adc
sbb
test
pop
lret
fstl
out
test
into
stos
and
test
xchg
pop
xor
fldcw
jmp
ljmp
adcb
or
pop
in
mov
sbb
repz
sub
cli
sub
mov
iret
in
lds
sbb
out
sarl
insl
xchg
jmp
jg
sbb
out
iret
cmpsb
cmp
insl
data16
insl
dec
lahf
test
mov
inc
ja
in
add
dec
stos
outsb
inc
lret
adc
add
mov
mov
xchg
call
cmp
dec
lods
js
out
dec
jae
push
dec
xor
jo
fs
inc
test
or
std
mov
inc
cs
dec
dec
lret
hlt
test
es
sbbl
mov
movb
stos
xlat
dec
xor
mov
jne
andb
lret
adc
stos
lock
sbb
jne
pop
stc
mov
hlt
adc
jns
out
mov
mov
addr16
sbb
adcl
fwait
lcall
in
jl
fstpl
into
jecxz
sarl
xlat
sub
push
xchg
out
inc
xchg
mov
loop
shl
mov
push
mov
and
cli
out
cmp
xchg
push
and
xlat
pop
jge
cli
nop
cmp
lcall
or
xchg
and
testl
shl
les
cmpsb
adc
insl
imul
jp
mov
fisubs
xlat
fmuls
inc
mov
jne
jg
add
clc
loop
lds
mov
xor
test
mov
and
shll
hlt
push
push
xor
push
je
cld
fs
incl
jbe
jecxz
jl
xorl
xchg
aaa
call
pop
insb
in
scas
mov
push
sub
test
add
jle
das
test
inc
pop
xchg
xchg
dec
and
add
xor
scas
mov
sbb
jbe
cmpsl
cmp
pop
hlt
or
es
add
and
mov
subl
add
sbb
stos
xchg
sbb
dec
loope
push
out
movaps
loop
inc
xor
pop
fistpll
fsubrl
int
jo
ds
test
pop
xor
sbb
lods
dec
jns
dec
cmpsl
mov
jbe
lahf
pop
mov
sub
or
test
adc
outsl
jge
sahf
inc
dec
sub
sarl
mov
stos
bound
cmp
int3
out
dec
adcb
rcll
sbb
stc
sbb
xchg
push
jne
sbb
dec
xchg
enter
rcll
or
mov
stos
or
sbb
pop
rcrl
cmp
aaa
cld
iret
inc
mov
xchg
pop
xor
clc
push
lds
xchg
scas
jg
mov
pusha
fsubs
push
sub
ds
cli
xor
dec
jge
cmp
pushf
push
or
ja
shlw
xchg
lahf
popf
xor
or
and
fsubr
sbb
add
sub
js
loope
mov
loop
jg
push
mov
enter
mov
sbb
push
pop
jb
jge
jae
cmpsl
add
and
or
mov
jne
nop
lea
xrelease
leave
subb
cmc
lock
pop
cmpsb
sahf
jecxz
fistl
xor
mov
push
imul
or
dec
sub
xchg
jno
pop
mov
mov
jne
or
stos
insb
xchg
push
mov
pop
cli
les
jge
adc
cwtl
sbb
or
dec
inc
loop
mov
sti
divl
fwait
pop
pop
pop
mov
xor
insl
leave
mov
and
lods
mov
pop
hlt
adc
lret
loopne
or
jg
fwait
mov
mov
push
xorl
imull
sub
push
les
ret
add
ja
cmp
mov
stos
lods
fcoms
and
dec
and
add
xor
push
or
loopne
jae
jl
mov
or
data16
dec
xor
mov
shrb
or
mov
push
ja
cld
push
mov
aad
lds
xchg
or
jge
inc
mov
pop
pop
cmp
mov
mov
push
adc
lods
outsl
nop
dec
pop
sub
mov
and
mov
mov
mov
mov
and
cli
xchg
sarb
hlt
push
mov
call
add
pop
movl
or
lahf
and
in
frstor
stc
push
imull
mov
sub
xlat
lahf
movsb
add
mov
ret
mov
jl
sub
es
sahf
test
in
lret
jbe
je
sbb
xlat
movsb
ret
adcl
dec
ds
daa
dec
test
loopne
lds
jnp
addr16
push
adc
subb
shll
mov
adc
push
inc
fwait
in
daa
cmc
insl
sti
pop
stos
pushf
push
lahf
and
cli
adcb
push
push
cmpsl
in
ja
cwtl
pop
into
mov
mov
inc
and
jo
imul
in
cmp
mov
mov
stos
lcall
sbb
fbstp
xchg
sbb
sbb
ljmp
bound
adc
xchg
leave
adc
les
sbb
bound
mov
call
mov
sti
shll
in
jge
fwait
add
jle
cld
es
push
movsb
mov
scas
movsb
and
lret
popf
sub
cmpsb
and
adc
fcomps
icebp
jbe
mov
add
sub
or
negl
push
xchg
fcomps
xchg
pop
or
pop
jns
scas
inc
adc
int3
jnp
xor
lea
iret
stos
push
repz
repz
or
das
mov
orl
push
in
js
lock
leave
xchg
mov
xchg
inc
or
push
outsb
jl
ljmp
les
and
cmp
lret
mov
push
lret
mov
push
and
dec
adc
enter
push
mov
sbb
mov
lret
cltd
lea
dec
xchg
lret
inc
in
lock
pop
lret
mov
das
sbb
pop
pop
das
sub
fidivrl
inc
je
jae
js
ljmp
push
add
cmc
iret
mov
out
notl
mov
pop
mov
out
loope
test
push
hlt
loope
pop
and
stc
mov
mov
repz
push
push
inc
inc
je
pop
mov
enter
in
pushf
sti
jo
xor
push
bound
pusha
sbb
push
xchg
pop
sahf
scas
jecxz
out
adc
xchg
inc
cmp
xor
mov
jo
mov
inc
xchg
addr16
jne
mov
ds
jge
and
xchg
das
sahf
mov
lret
cmp
pushf
xchg
shll
push
call
xor
in
jp
fcompl
popf
jnp
fwait
cmp
inc
in
in
int
and
push
xor
pop
push
popa
lret
dec
or
jb
mov
mov
jae
xchg
imul
sbbl
xor
pushf
dec
xor
in
cmp
daa
movsb
call
jmp
sub
mov
inc
sub
aas
sbb
push
mov
inc
fs
test
loopne
notb
push
mov
in
jecxz
jae
push
mov
test
lock
enter
cltd
in
add
adc
push
stos
pop
or
ja
dec
mov
ror
nop
adc
aam
sub
dec
add
bound
xchg
or
pop
jecxz
sbb
dec
cmp
das
jo
in
mov
out
shr
rcr
imul
and
enter
iret
mov
mov
pop
test
test
repz
andb
movsl
test
jl
pusha
icebp
mov
shll
insl
adc
dec
test
scas
loope
fs
or
cmp
leave
mov
cmpsl
test
in
push
cmp
aam
add
inc
cld
push
jl
jge
jne
xor
sahf
std
in
leave
sub
mov
ret
test
into
loope
pushl
sbbl
lea
mov
pop
or
arpl
mov
rcll
adc
repnz
loopne
push
push
inc
fs
jp
mov
fwait
divl
popf
insl
fsubrl
adc
sti
xchg
popf
les
and
out
divl
dec
jl
jnp
out
adc
stos
test
test
andb
aaa
mov
jg
fistps
or
arpl
jno
sbb
faddl
mov
shll
sbb
mov
mov
mov
std
lret
icebp
mov
add
loopne
push
push
mov
jne
add
dec
mov
pop
xchg
in
or
mov
xor
dec
adc
push
pop
out
test
jne
sub
sub
inc
mov
pop
lods
ds
out
jl
push
inc
mov
popf
and
mov
or
or
je
push
ret
std
loopne
ljmp
out
sub
pop
pusha
rcll
arpl
lds
pop
loopne
cwtl
or
mov
add
jo
mov
mov
sarl
cmp
sub
je
add
pop
adc
jae
sarb
xchg
add
clc
dec
pusha
cmpsl
adc
aas
mov
cmc
and
jp
mov
inc
sub
add
pop
jle
mov
ficompl
jp
pop
nop
andl
jg
insl
mov
lret
pusha
or
jne
mov
mov
fcmovnbe
stc
add
ja
pop
adc
lea
inc
pushf
sub
adc
or
pop
cwtl
mov
jno
push
xchg
jecxz
inc
jae
enter
xchg
mov
sti
lock
scas
daa
outsl
cltd
jle
fistl
push
cmpsb
fsubs
lret
push
xor
mov
xchg
xchg
push
cmpsl
push
sub
adc
lahf
mov
test
jmp
fisubrs
dec
loope
dec
sub
sub
jb
push
gs
.byte
outsb
adc
cmp
nop
add
add
cmpsl
dec
hlt
adc
pushf
mov
push
loope
jge
lock
test
add
js
gs
jo
out
stos
inc
and
in
cld
insb
popa
push
fwait
mov
and
mov
inc
mov
imul
aaa
rorl
dec
pop
leave
inc
les
push
jg
mov
std
ds
add
into
scas
pop
sahf
pop
cltd
mov
fdivs
cmpb
push
fs
add
mov
pop
aad
jae
or
outsb
mov
rclb
lret
test
ret
cld
ds
push
adc
dec
lahf
dec
cmp
outsb
add
inc
sbb
push
arpl
movsb
into
pop
aad
data16
adc
inc
dec
dec
or
mov
dec
addr16
enter
cwtl
stc
ds
call
push
mov
mov
mov
push
pop
cmpsb
out
cmp
mov
mov
ficompl
iret
sbb
mov
xor
jg
and
xor
push
lods
pop
out
out
mov
push
std
inc
iret
or
loop
fyl2x
xlat
clc
fnsave
scas
ds
xlat
jl,pt
in
dec
idivl
mov
out
push
in
frndint
xor
orl
fnstcw
xor
dec
fbstp
and
xchg
mov
cmp
push
aam
push
imul
lret
leave
cld
test
fimull
mov
in
mov
pop
inc
enter
mov
add
dec
xor
inc
dec
outsl
enter
lret
loopne
iret
cmp
mov
jle
fcmovb
mov
imul
cmp
jecxz
mov
jmp
sbb
fisubl
out
sbb
push
dec
repz
jne
jl
out
int
in
mov
insl
movsl
add
add
sbb
add
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
sbb
add
add
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
addb
add
loopne
add
sbb
add
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
sbb
add
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
sbb
add
add
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
add
add
test
add
add
add
sbb
add
add
add
add
add
mov
add
add
add
add
add
add
add
enter
add
add
sbb
add
add
add
add
add
fadds
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
clc
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
sub
add
sbb
add
add
add
add
add
cmp
add
sbb
add
add
add
add
add
dec
add
add
sbb
add
add
add
add
add
pop
add
add
sbb
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
jo
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
stc
add
pushf
add
add
add
add
add
add
add
adc
add
in
add
add
add
js
add
or
add
in
add
add
add
cmp
add
add
add
add
add
add
incb
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
in
add
add
add
loopne
add
mov
add
add
add
add
add
in
add
add
add
xor
add
sbb
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
or
add
add
add
add
add
add
add
add
fadds
in
add
add
add
and
add
add
in
add
add
add
and
push
add
add
in
add
add
add
dec
dec
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
pop
dec
push
add
add
add
add
add
add
add
add
add
in
add
add
add
push
add
add
add
add
add
add
push
add
add
in
add
add
add
je
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
insl
push
add
add
add
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
cmp
sbbb
inc
scas
ljmp
dec
push
mov
fadds
or
xorl
fwait
sbb
mov
es
rorb
or
orl
mov
sub
xlat
jmp
or
cmpsb
cmp
jbe
dec
jae
xchg
dec
inc
cmp
bound
addr16
jbe
iret
mov
sbb
or
sub
sub
test
sub
rorl
pop
sub
adc
jl
mov
rep
inc
in
sbbb
dec
movsb
scas
inc
aaa
es
aas
hlt
xor
in
push
les
or
jle
stc
insb
push
sbb
pop
pushf
sub
pop
add
fisubs
sbb
adc
sbb
sbb
adc
or
push
jno
xchg
jae
push
data16
mov
add
jmp
xor
cmp
jp
lock
push
xor
mov
pop
sub
shlb
and
sub
jg
test
and
mov
mov
and
fdivs
jno
mov
std
fsubr
mov
movsb
cmpsl
pop
test
divl
pop
cmpsb
imull
push
loopne
into
mov
adc
xlat
fwait
mov
dec
sub
mov
dec
insb
mov
xchg
mov
sbb
in
rcr
push
rcr
sub
sbb
inc
pop
mov
out
push
mov
or
dec
popf
movsl
data16
repz
lds
push
loope
push
sub
add
xchg
rclb
pop
orl
mov
imulb
inc
push
adc
push
mov
cmpsb
dec
xchg
jp
or
pop
mov
insl
clc
sbb
test
push
dec
inc
lods
sti
popa
add
xchg
cmp
push
pop
pop
into
pusha
jecxz
into
and
test
out
lods
xchg
mov
and
xchg
stos
pop
hlt
mov
mov
and
sbb
mov
jg
lods
ret
dec
xor
es
dec
mov
pop
dec
push
repnz
cltd
jl
hlt
aad
jb
mov
mov
push
cs
fwait
shr
xor
sbb
mov
shl
ret
movsl
movsl
adc
add
mov
dec
xchg
sbb
pop
out
cld
dec
pop
pop
lea
cmp
lock
movl
mov
jl
test
lock
shll
inc
xchg
and
xchg
icebp
mov
out
mov
jno
adc
xchg
mov
outsl
inc
cmp
mov
shll
mov
push
mov
jp
fwait
hlt
loopne
pop
in
aad
filds
xor
cmpsb
das
mov
popl
mov
sahf
adc
cmpb
sbb
and
pop
mov
cwtl
ss
add
mov
add
jne
iret
dec
dec
js
lock
sbb
xor
pop
cmpsl
ret
xchg
sub
dec
xor
int
add
imul
idivl
aaa
cmp
in
iret
loop
mov
or
push
ss
cwtl
pop
test
pop
out
xchg
in
mov
xor
adc
and
imulb
js,pn
imul
fcoms
stos
sub
mov
xchg
inc
push
cs
jecxz
mov
imul
pop
jecxz
jns
xor
jne
mov
push
pop
jg
scas
pop
mov
or
test
sahf
pop
or
outsl
xchg
lods
dec
loopne
std
lds
into
mov
pop
imul
movsl
xchg
movsb
inc
das
cwtl
jae
test
ret
in
add
mov
inc
cmp
inc
xor
mov
std
xor
adc
sbb
in
out
rcl
lods
cli
fldt
pop
es
aaa
cmpsl
imul
pop
jp
pop
sub
cwtl
cmp
and
mov
es
ret
aam
into
js
or
sahf
xchg
sti
stos
test
lds
outsl
sbb
mov
mov
aam
lds
call
xchg
jg
bound
mov
push
dec
scas
xchg
xor
outsb
adc
shrl
push
xor
xchg
xchg
enter
in
and
mov
je
xchg
addr16
rolb
jp
mov
push
mov
in
js
sbb
mov
std
dec
sbb
jbe
lea
std
sti
scas
in
mov
adcl
xor
dec
aas
lahf
out
pop
xchg
mov
or
shlb
xchg
das
std
xchg
adc
cmp
jge
mov
gs
mov
push
dec
call
jnp
pop
pop
ds
mov
dec
in
mov
push
sbb
or
jge
push
out
scas
mov
cmp
xlat
cmp
cltd
lds
cli
test
sbb
icebp
fldln2
mov
sbb
in
stos
xorl
mov
int
data16
loopne
xchg
loope
mov
sbb
add
cli
fldenv
mul
xlat
or
sub
fiaddl
mov
cmp
mov
add
and
out
sbb
add
pop
popa
xchg
dec
sub
aas
out
das
inc
sub
inc
cltd
adc
ss
or
mov
mov
lods
lss
lret
dec
mov
fsubrs
xchg
les
aaa
aaa
inc
pop
push
fst
addb
mov
dec
sbb
and
jb
push
loopne
sub
orl
dec
mov
pop
movb
test
jecxz
xchg
jmp
xor
leave
lods
adc
pop
scas
repnz
add
dec
dec
aas
mov
push
mov
insl
cmp
dec
test
out
sub
addb
and
lret
mov
imul
imul
outsb
test
cmp
pop
hlt
dec
sbb
int
pop
std
pushf
mov
loope
cmpsb
mov
inc
or
daa
xor
pop
sub
sbb
xor
dec
mov
lock
pop
jle
cmp
or
and
adc
jl
mov
fsubp
lahf
pop
outsb
add
pusha
shlb
iret
sub
add
test
into
gs
test
das
je
mov
jmp
sahf
shlb
lret
adc
xchg
aad
dec
shlb
notb
aaa
dec
insb
cmp
adc
daa
and
fnstenv
sbb
pop
repz
pop
clc
cld
test
fcmove
fs
pop
int
adc
sbb
movsl
outsb
jge
mov
arpl
or
lahf
cli
jno
xor
test
nop
mov
or
bswap
mov
cvtdq2ps
mov
ja
xchg
mov
mov
mov
xlat
push
cmp
sarb
sub
mov
popa
sahf
pop
cmp
inc
daa
dec
inc
insl
or
outsb
xchg
cs
mov
in
and
jge
push
jmp
mov
movsb
xor
out
xchg
in
mov
mov
mov
mov
pusha
or
jns
outsl
movl
pop
dec
in
jb
shr
push
outsl
in
jnp
push
out
pop
imul
imul
pop
test
mov
mov
cmpps
or
aaa
out
es
sub
inc
sti
pop
sub
sti
and
pop
xchg
jbe
mov
out
jne
test
shrb
loop
cs
cmp
pusha
in
sub
and
call
cmpsb
or
jne
push
int3
inc
nop
icebp
ret
in
in
xchg
add
dec
inc
in
es
loop
out
sarb
arpl
pushf
sbb
jp
fildll
lret
xchg
or
rorb
adc
push
sub
jge
imul
mov
mov
or
stos
shrb
je
fs
test
in
jbe
test
lds
arpl
rorb
daa
push
and
or
jmp
cmp
mov
popa
xorl
ret
xlat
pop
jg
cmpsl
pop
xor
int3
scas
movsb
push
jmp
push
xchg
int3
test
in
out
lds
mov
mov
mov
jmp
pop
inc
in
jge
push
pop
or
add
lahf
insl
sub
lods
rorb
popf
pop
or
jmp
pop
std
inc
dec
add
cmp
imul
jl
add
andl
push
mov
ret
mov
leave
stos
in
jns
lock
mov
inc
popf
dec
fdivrp
push
push
dec
pop
jmp
out
pop
repnz
pop
add
inc
out
pop
lahf
fstps
sahf
dec
or
xchg
push
pop
jno
loopne
dec
shll
dec
test
mov
lds
mov
jb
mov
cmp
push
lret
ret
mov
hlt
arpl
pushf
test
push
and
and
xor
jle
ficoms
gs
imul
mov
cs
lret
ds
add
dec
xlat
push
mov
sbb
add
add
mov
adc
jp
mov
in
dec
pop
xchg
mov
mov
xchg
dec
xchg
sbb
jl
mov
ret
jle
inc
in
push
cmp
sbb
insl
add
inc
push
push
inc
fistps
es
add
pop
sbb
xchg
fdivr
dec
dec
out
imul
aam
lahf
daa
add
fcoms
outsl
scas
loopne
inc
mov
ljmp
in
mov
gs
lahf
jl
ss
movb
js
mov
pop
aaa
sbb
hlt
pop
cwtl
call
int3
stc
out
fs
push
lock
popa
insb
repnz
xor
inc
push
outsb
test
int
test
push
sbb
jmp
jle
mov
mov
pop
jb
adc
sbb
sub
fs
add
push
pop
adc
pop
pop
je
push
xchg
sbb
lret
loope
lret
pop
out
push
into
jns
out
lods
add
add
or
sbb
push
aaa
mov
iret
popa
nop
push
and
repnz
push
pusha
jp
in
dec
shlb
pop
adc
cmpsb
xchg
mov
cld
popa
jg
mov
push
push
leave
or
inc
loope
mov
stc
imul
or
mov
sub
test
jb
jbe
mov
int
orb
mov
xor
inc
sbb
add
clc
jno
jl
xchg
xor
icebp
mov
push
xor
push
aam
or
out
into
aaa
inc
outsb
jl
movsl
cmp
fs
fwait
sub
pop
push
inc
stos
add
sub
add
arpl
sbb
xor
data16
inc
cmpsb
insb
add
sub
out
pushf
cmpsl
push
xchg
or
inc
test
push
pop
nop
call
outsl
mov
push
rorb
inc
aam
roll
mov
int3
cmp
pop
jne
insl
call
adc
leave
dec
pop
push
fsubrl
das
pushw
pop
dec
push
les
in
sbb
pushf
fdivl
or
inc
out
sbb
or
push
xlat
sub
sarl
aaa
pushf
mov
es
cmp
inc
mov
ret
inc
push
xchg
test
rcl
sysret
loope
subb
stos
aaa
push
and
outsl
pop
rol
adcl
dec
and
movsb
stos
dec
out
sub
imul
sbb
movsl
shrl
mov
xor
pop
out
mov
into
inc
stos
cmp
pop
lret
pop
jl
push
or
loopne
das
lret
negl
mov
mov
adc
mov
push
mov
sbb
push
pop
or
ret
test
inc
stc
mov
push
mov
dec
popf
mov
sbb
add
cmpsl
and
jecxz
dec
mov
sti
test
mov
mov
hlt
add
aam
ja
inc
push
dec
mov
inc
add
and
pop
loopne
push
fsubs
testl
dec
xor
shlb
in
shlb
cmc
int
pop
out
int3
js
dec
xor
mov
xchg
mov
inc
mov
mov
out
stos
cs
lret
rcrb
inc
fs
adc
movsl
mov
jns
bnd
xor
in
mov
mov
cmp
fnstcw
or
movsl
fnstsw
adc
repnz
call
outsl
imul
xchg
outsl
push
sub
incl
jns
dec
js
lahf
pop
fbstp
lea
mov
jecxz
dec
outsb
lock
aaa
shl
aaa
dec
bound
sbb
sbb
mov
mov
push
out
addr16
mov
jne
lcall
push
push
xchg
lahf
and
ret
test
pop
xor
and
js
xor
sub
and
mov
frstor
mov
mov
push
cmp
xor
cmp
inc
popf
mov
add
out
pop
insb
sbb
dec
mov
and
gs
test
jae
sub
hlt
xchg
cmp
xchg
in
out
push
loope
push
mov
dec
xchg
xor
push
popa
lret
hlt
cmp
mov
call
sbb
stos
and
lret
into
test
and
mov
aaa
mov
mov
sbb
movsl
arpl
dec
cmc
mov
and
or
pop
inc
loope
push
cmp
push
pop
in
jmp
mov
dec
xor
in
adc
mov
mov
jmp
ss
mov
clts
inc
stos
and
ds
or
repz
scas
pusha
test
sub
fildll
test
jge
jno
lea
stc
es
and
push
adc
xor
fildl
xor
dec
pop
data16
and
cwtl
cmpsb
loop
nop
xor
fists
push
mov
out
rcrb
imul
lahf
aas
out
hlt
ret
jbe
shlb
jns
clc
into
int3
aad
adc
xor
fidivl
sbb
xchg
out
repnz
inc
pop
loopne
xor
and
ret
clc
aas
xchg
lds
shrl
aaa
ret
push
pop
mov
and
xor
test
inc
cmp
es
out
jg
lahf
pusha
mov
mov
popa
add
movsl
cmpl
out
fnsave
or
mov
and
cwtl
mov
lret
fmull
mov
pop
and
sub
pop
mov
fisubl
adc
add
ds
sbb
push
mov
insl
aaa
push
fwait
bswap
inc
stc
push
es
fiadds
test
ljmp
repnz
dec
inc
lret
addr16
loop
xchg
out
sti
pop
out
push
cmovo
or
xchg
mov
add
pop
push
pop
sbb
lahf
push
or
rcrl
repnz
into
mov
or
or
mov
mov
and
aas
pop
call
jno
sub
syscall
dec
or
sahf
popl
mov
mov
sbb
addr16
arpl
sbb
pop
hlt
inc
lea
push
fdiv
adc
mov
test
flds
popf
lret
push
aam
inc
inc
mov
lds
jns
movsl
adc
inc
rol
mov
ss
push
fdivrl
addr16
das
mov
test
sti
xor
sahf
popa
loopne
loop
push
pushf
imul
jbe
bound
aad
push
rdmsr
mov
xor
sahf
clc
nop
clc
jge
mov
adc
mov
inc
outsb
shll
dec
loope
insl
pop
cmc
xchg
mov
and
or
testb
cmpsl
lds
and
addb
stos
cmp
subb
sbb
sub
cmpsb
mov
push
outsb
stc
int3
fimull
sbb
loop
cmp
pop
add
dec
repz
push
adc
jecxz
cmpsb
pusha
test
shl
scas
cmp
aaa
test
or
icebp
scas
fdivs
and
jb
add
stos
loope
repz
adc
das
popa
imul
sub
mov
sbb
xor
rcrb
mov
fsubr
xor
int3
jae
jnp
mov
outsb
mov
sbb
jg
popa
cmc
lock
xor
ss
mov
or
sub
and
shl
lds
xchg
aas
cld
pop
sub
adc
loopne
sti
cmpsb
inc
fadd
push
lds
pusha
xchg
outsb
mov
mov
lods
push
daa
xchg
int3
bound
loope
cmp
jo
sub
xchg
aad
dec
ja
outsb
cmp
pop
lahf
dec
mov
leave
ror
outsb
adc
mov
and
mov
rol
mov
xchg
xchg
and
xlat
jmp
push
out
jo
aam
pmaxsw
adc
xorb
jbe
dec
add
mov
and
push
push
cmpsb
jg
cmp
push
xchg
mov
loope
pop
sbb
subl
rcrb
xorb
cltd
mov
sbb
negl
addr16
dec
ss
addl
cmpsl
cmp
pop
add
cmp
pop
inc
stos
xchg
sbb
jnp
cmpb
ja
adc
push
cmp
mov
dec
test
push
sbb
sub
das
jp
sub
mov
mov
pop
or
dec
pop
xchg
cs
pop
std
jp
addl
sarb
shr
xchg
pop
gs
sub
cmp
xchg
fmul
les
add
push
add
push
lods
dec
and
jp
push
or
cmp
popf
mov
xor
outsb
fidivrs
ret
fwait
mov
out
idivl
dec
scas
cmp
add
sub
cmc
cmp
fbstp
mov
push
ja
or
in
inc
cmpsb
ljmp
and
dec
lret
xchg
std
aad
push
shl
cltd
inc
loope
xchg
outsb
stos
sub
mov
push
movsb
stos
call
lods
and
aaa
pop
adc
roll
lods
xchg
arpl
hlt
mov
insb
in
xor
xchg
adcl
ja
or
rcrb
mov
cmpsl
cs
mov
sbb
loopne
out
mov
shr
mov
lret
iret
mov
into
mov
les
into
jns
add
xchg
fisttps
inc
adc
mov
inc
dec
or
je
test
push
testl
cltd
sbb
xchg
aam
mov
jo
mov
inc
cld
mov
arpl
out
pop
jbe
iret
and
pop
pop
in
inc
sbb
call
pop
jecxz
iret
loopne
stos
shl
mov
cs
sbb
stc
pusha
mov
jle
push
sub
shl
mov
ja
cmpsl
pop
rcrl
lret
xor
cmp
lds
and
pushf
lret
aad
cmp
pushf
add
add
movsl
iret
xor
lock
outsl
xorb
pushf
adc
bound
pop
cmp
nop
jbe
fists
mov
and
add
mov
pop
lret
push
xor
mov
add
fstpl
aad
imul
sarb
mov
sub
or
fidivrl
cld
inc
push
xor
addl
loopne
add
fistps
rclb
aam
icebp
add
inc
inc
pop
xlat
int3
jge
cltd
std
sub
imul
sti
outsb
xor
scas
jle
cmp
mov
adc
es
pop
pop
adc
mov
mov
xor
push
jb
pusha
lahf
inc
sub
sbb
mov
aaa
in
in
sbb
or
movsb
cmpsb
cmpl
enter
jge
or
pusha
xchg
fisttpll
aam
cmc
out
ret
int
aad
mov
xor
mov
rclb
add
lea
xor
add
push
adc
xchg
and
leave
subb
in
or
scas
imul
ss
mov
dec
mov
jge
or
out
fwait
push
inc
xchg
out
les
sbb
rorl
sub
inc
pop
mov
rclb
nop
mov
sub
inc
pop
inc
data16
cmpsl
xchg
xor
arpl
fdiv
in
sbb
push
out
cmpl
pop
jmp
lds
out
dec
push
cmp
lahf
testl
or
and
std
or
xchg
fsubr
nop
nop
jg
or
mov
movsb
jmp
xchg
into
sbb
xchg
cmp
sbb
dec
lret
jne
push
mov
fildll
cld
cmc
ljmp
cmpsb
cmpsb
or
or
xchg
cmpsb
loop
dec
dec
xor
inc
push
cs
dec
int3
pop
rclb
ret
xor
xchg
push
mov
stos
and
dec
popa
push
mov
cmp
cmp
xor
fistl
loope
or
push
sub
and
sbb
idivb
cmp
shll
ret
mov
adc
push
xchg
xor
sbb
jmp
mov
shrl
sub
pop
ret
mov
scas
dec
rorl
push
sar
inc
scas
roll
or
jp
cmp
mov
ret
cld
mov
aas
out
cmpsl
jle
push
cmp
jb
or
mov
pop
push
add
and
subl
sahf
outsb
cmp
popf
out
xor
push
frstor
mov
neg
fcomps
and
neg
aas
mov
mov
push
in
cmp
sahf
xlat
movsb
out
pusha
das
dec
jbe
adc
pop
test
mov
lcall
arpl
lcall
push
aad
mov
movsb
hlt
push
clc
xchg
dec
inc
testb
pop
loope
aaa
or
xchg
add
shrb
ret
mov
cli
ret
adcl
test
or
arpl
xor
test
stos
pop
nop
push
outsl
gs
test
push
dec
push
mov
mov
mov
sub
or
jnp
inc
cld
dec
push
mov
push
out
xchg
loopne
insl
outsb
push
insb
andl
jle
jmp
dec
or
js
movsl
push
idiv
out
push
in
cld
dec
inc
adc
inc
push
pushf
in
addr16
test
sahf
xchg
add
lea
dec
xor
pop
and
add
movsl
lea
leave
mov
pushf
mov
pop
shlb
sbb
cwtl
es
mov
divl
outsb
adc
gs
shll
sar
lods
movsb
cmp
cmp
sbb
in
xor
loopne
dec
jno
aad
or
xchg
loopne
mov
and
mov
int
xchg
xor
fsubr
pop
or
fistl
icebp
cmp
in
jge
les
dec
ret
ja
adc
out
add
daa
aas
ljmp
sbb
outsb
xchg
shl
sahf
sub
adc
mov
push
push
test
jae
mov
divl
jle
add
xor
sbb
pushf
xchg
sub
movsl
pop
test
pop
push
cs
add
insl
jne
jmp
movsl
or
lcall
pushf
ljmp
insb
in
cmpsb
icebp
add
or
mov
lock
out
stc
push
loopne
jge
fwait
data16
or
int
ds
lcall
jmp
and
and
adc
mov
int3
cmpl
push
in
pop
repnz
xchg
and
mov
cltd
iret
leave
cld
data16
add
push
push
ljmp
push
mov
daa
sbb
pushf
and
iret
xlat
cmc
jns
repz
pop
pop
lret
mov
mov
fisttpl
lret
and
push
jge
cmp
xchg
mov
movl
jmp
mov
dec
mov
mov
sub
dec
pop
scas
flds
pop
pop
cmp
jbe
hlt
pop
and
and
aas
sbb
sub
inc
dec
imul
xor
cmp
jnp
jns
mov
lds
pop
dec
or
mov
jae
adc
jmp
adc
leave
shll
pushf
out
in
xor
psrlq
or
mov
pop
jnp
push
mov
movsl
dec
add
icebp
movsb
xor
cmp
cmp
dec
dec
insb
iret
test
or
mov
mov
xchg
cmpb
lea
push
ret
mov
pushf
xchg
ret
add
add
ja
mov
test
mov
jl
and
cmp
inc
push
lahf
push
enter
sti
sahf
cmp
test
jae
cmp
imul
ja
imulb
loop
fwait
sub
add
popf
xchg
test
adc
xchg
popf
mov
jmp
mov
mov
lods
inc
roll
sub
push
scas
dec
mov
fistpll
inc
lret
sbb
add
loope
sbb
or
hlt
inc
out
xor
stc
mov
jle
sbb
dec
inc
mov
in
leave
push
notl
or
or
cwtl
or
fiadds
inc
fmul
xchg
sub
dec
push
loopne
dec
pop
stos
aaa
mov
pop
fs
xchg
stc
adc
jae
and
shll
test
cwtl
or
sub
mov
and
jp
push
dec
aas
xor
cmp
cwtl
ficoms
push
adc
mov
jbe
fnstcw
jle
loope
movsb
push
and
sbb
inc
dec
jmp
rcr
and
nop
scas
and
xlat
clc
data16
push
sar
push
int
xchg
dec
dec
ja
push
das
inc
xor
imul
cmp
test
push
cmp
pop
movsl
loopne
push
and
push
repz
aam
aaa
add
loop
adc
and
inc
push
add
jbe
nop
repnz
jge
aad
das
mov
and
mov
adc
push
lret
mov
pop
and
mov
popf
je
mov
inc
xlat
mov
in
mov
les
mov
ss
into
jnp
and
aad
rorb
mov
and
jmp
sub
push
xchg
rclb
lahf
movsl
xchg
pusha
jno
hlt
add
andb
xchg
icebp
sbb
test
sub
cltd
loope
sbb
and
mul
lcall
fucomip
int
pop
out
pop
repz
sbb
pop
test
xchg
mov
movsl
pushf
bound
pop
sbb
test
lahf
out
int3
jnp
iret
adc
add
dec
ret
adc
int3
mov
jne
or
sahf
mov
pop
sahf
sub
idivb
testl
hlt
dec
call
fnstenv
inc
sbb
nop
add
ret
inc
cmp
cmpsl
ljmp
add
in
inc
test
out
insb
ja
orl
cmp
dec
fiadds
xor
or
dec
cs
stos
pop
jns
jg
mov
mov
dec
and
icebp
and
jp
ret
clc
xchg
lock
iret
xchg
sub
sbb
call
roll
aas
inc
mov
mov
movsb
xchg
mov
ficompl
cmc
loop
sbb
cli
or
xchg
sbb
add
sub
js
mov
jge
sbbl
outsb
pop
add
xor
fwait
jnp
arpl
cltd
cltd
jb
adc
insl
aaa
ret
aam
sub
pop
ljmp
and
mov
aaa
jo
arpl
mov
and
fists
xor
scas
add
xor
stc
jno
sbb
adc
insb
arpl
decb
sets
mov
mov
push
iret
mull
xchg
out
inc
inc
mov
or
cli
lret
dec
leave
jp
inc
test
push
data16
mov
push
xor
ffree
xchg
ljmp
dec
idivl
fisubs
sub
outsl
dec
mov
loop
lret
dec
push
xchg
clc
adc
and
xchg
ss
inc
push
fldl
pxor
mov
push
inc
adc
adc
scas
pop
std
rolb
loope
xchg
add
xchg
leave
mov
mov
fs
sub
imul
sbb
icebp
pop
or
push
sub
jge
filds
mov
stos
push
loopne
inc
jg
pop
adc
dec
nop
roll
and
pop
mov
jmp
inc
lea
nop
in
daa
pop
jmp
jne
subl
ss
lds
mov
hlt
outsl
pusha
cmp
fcompl
push
and
push
movsb
pop
aaa
push
scas
or
dec
mov
icebp
pop
add
sub
pcmpgtw
sbb
popa
push
fisubl
jg
jle
icebp
add
mov
loope
or
aas
addr16
ja
and
push
fists
push
sbb
add
sub
push
and
loope
repnz
mov
imul
sub
and
mov
std
and
pop
add
test
or
loopne
mov
lods
push
mov
xchg
sbb
dec
lods
lret
inc
pop
insl
inc
add
mov
fucomip
pop
arpl
and
and
shrl
test
bound
sbb
loope
out
pop
cmp
aaa
mov
pushf
rol
scas
fnstsw
and
jns
lahf
loopne
inc
add
mov
ds
repnz
jp
adc
jns
push
mov
cmovnp
dec
rcrb
into
adc
jge
loope
dec
lods
pop
cmp
icebp
and
popf
sbb
push
or
push
outsl
mov
add
push
xchg
sub
mulb
in
pop
lds
jne
lcall
lods
sub
in
xor
inc
call
or
andb
mov
pop
cli
mov
mov
sub
xchg
push
dec
push
push
roll
repnz
sbb
or
mov
lock
mov
cmpsb
je
movsb
in
out
xor
mov
xchg
negb
push
out
imul
sub
sub
divl
arpl
ret
std
sbb
dec
sbb
jle
lcall
movsb
pop
xchg
imul
xchg
push
jns
scas
cmc
or
dec
les
cmc
rorb
pushf
out
inc
inc
fmul
out
lahf
adc
js
pop
pusha
xor
arpl
in
jg
cmp
and
lods
orb
mov
sub
pushf
mov
aam
adc
lret
jg
jl
inc
fistps
dec
or
int
ja
fcmovnu
lret
enter
mov
loope
push
in
mov
mov
insl
lcall
les
sti
lock
xchg
stos
jae
sbb
mov
test
mov
rolb
cli
lods
insb
stc
pop
insl
push
xlat
jle
inc
mov
inc
int3
fsubrs
insl
mov
xor
test
inc
lock
shl
loop
stos
sub
cmp
pop
xor
sti
testb
les
mov
mov
add
pop
aas
in
dec
leave
aam
sar
jnp
pop
push
ret
sub
insl
das
shll
adc
imul
lds
inc
dec
pop
aas
sar
fidivrs
add
lock
jle
add
test
bound
sub
inc
ds
push
pop
inc
or
repnz
push
stos
xchg
xor
shr
das
in
inc
insb
ret
inc
imul
sub
int3
or
or
mov
ret
jle
inc
xlat
cmp
out
mov
jb,pn
mov
into
lock
das
jns
jno
xchg
sbb
and
inc
xchg
clc
dec
jnp
inc
call
jb
mov
adc
jae
jl
out
insl
dec
pop
ficomps
dec
push
mov
arpl
sub
add
adc
int
xlat
enter
bound
mov
loope
scas
lcall
cmp
and
cmp
jg
fcoms
aam
out
mov
add
sbbb
rorl
or
inc
pop
jbe
jg
loope
ss
cs
sub
xchg
dec
dec
add
shrb
subl
mov
lods
xchg
xor
xor
sub
ficomps
loop
jle
push
ds
aam
rcrl
andl
insb
pop
mov
repz
and
lret
pop
sub
addr16
xchg
fiaddl
jmp
sub
add
cmp
leave
and
testl
call
int3
cmp
cwtl
push
pusha
mov
faddp
clc
mov
push
cmp
lods
cltd
aam
push
xor
sub
or
dec
inc
stos
xor
cmpl
in
pop
push
aas
test
dec
xchg
add
cli
pop
push
mov
cltd
jecxz
add
xor
push
push
sub
xchg
dec
dec
push
xor
repnz
sbb
pop
jge
mov
mov
stos
mov
sbb
mov
outsb
test
adc
lcall
in
or
popa
cltd
and
call
adc
cmpsl
adc
push
pop
xor
sub
fstpt
dec
outsl
pop
sbb
xchg
les
leave
mov
pop
out
shl
shrl
push
stos
mov
pop
cld
mov
push
dec
push
fimuls
ds
pop
popf
fsubrl
inc
daa
stos
jb
fistps
jne
dec
jp
js
imul
mov
xchg
sub
sbb
pop
ja
cmp
xchg
leave
sbb
in
sbb
outsl
sbb
loopne
sarb
rclb
das
or
cmp
jb
jl
outsl
push
jge
rorb
clc
iret
imul
int
inc
mov
mov
push
loop
fcmovnb
pop
out
out
ds
and
push
push
mov
cmp
mov
inc
mov
das
inc
in
les
pushf
xchg
andl
pop
add
dec
jle
push
jbe
push
scas
shll
stc
add
fcompl
sahf
pop
inc
aam
out
lret
dec
mov
dec
cmpsb
push
and
jns
out
push
mov
add
and
adc
or
inc
sub
movsb
mov
test
xchg
xor
xor
imul
push
mov
add
cli
scas
pushf
dec
jnp
lahf
fistpl
jl
push
jp
inc
sbb
pusha
dec
xchg
xchg
cmp
xor
mov
xor
pop
jbe
insb
mov
push
dec
cld
jge
xor
scas
out
mov
or
movl
addr16
push
or
and
cmc
cli
dec
in
sbb
jae
cmpsb
push
sbb
mov
push
scas
push
jbe
dec
mov
lock
loop
inc
pavgw
sahf
jle
stc
cltd
xor
add
mov
icebp
sub
dec
dec
xchg
mov
jb
inc
imul
cmc
and
adc
dec
adc
sbb
inc
ljmp
xchg
call
or
shlb
push
es
push
lods
jne
xor
movsl
mov
fidivrl
inc
xchg
jne
test
pop
mov
ret
inc
lcall
cmp
xor
adc
mov
and
stc
inc
sbb
pop
nop
push
jl
aad
ja
sub
cmc
pop
cmp
cli
roll
jo
adc
lret
mov
and
sub
sbb
dec
mov
lret
mov
aaa
sbbb
xchg
cli
les
pop
xlat
imul
pop
scas
leave
test
and
imull
rcr
dec
and
int3
sub
ret
jno
pop
xorl
and
xchg
and
xchg
xchg
into
push
xlat
movsl
andb
shlb
dec
les
mov
les
mov
in
sub
jg
sbb
stos
test
pop
iret
jle
aam
sahf
pop
pop
jne
mov
add
popa
lods
pop
push
rcrl
push
jg
loope
mov
test
cmp
jbe
push
inc
testl
mov
daa
fidivrs
inc
jge
mov
or
pop
shll
fistpll
fst
hlt
hlt
xchg
fnstenv
mov
testb
cmp
mov
into
push
xor
dec
cli
mov
aaa
iret
cmp
add
les
or
xchg
in
stos
testb
sbb
shlb
or
popf
push
jp
test
aaa
xchg
and
push
pushf
lods
fnstcw
or
sub
mov
call
daa
xlat
dec
mov
push
sub
out
sbb
push
sarl
mov
pop
dec
push
push
faddl
push
outsl
cmp
adc
sub
nop
scas
test
cli
sbbb
xor
lods
movsl
or
and
adc
je
mov
push
sbb
int
loope
fwait
mov
pushf
fdivrs
mov
add
sti
lods
pop
mov
mov
aas
test
push
stc
sbb
mov
or
pop
daa
arpl
aaa
mov
cmp
int
arpl
sti
or
lret
and
aad
push
gs
push
sub
xchg
dec
mov
lret
mov
adc
fcom
pop
jb
mov
cmp
rcll
push
fs
enter
rcll
inc
xor
xchg
mov
mov
hlt
outsl
adc
dec
pop
push
loop
sti
jl
repz
je
mov
call
add
scas
in
xor
add
push
fcmovbe
sub
popl
add
imul
sarb
inc
jne
sbb
or
adc
xchg
cwtl
jecxz
in
shrl
cmpsb
and
fadd
in
in
push
pusha
jae
insl
shll
ficoms
faddl
ret
cmp
lods
sti
xchg
addr16
xor
inc
jmp
inc
cmpsb
dec
cmpsb
loop
inc
fdivp
cmp
add
mov
lock
push
int
imul
test
adc
cmp
or
inc
pop
leave
lret
xor
adc
mov
mov
or
pop
into
add
jae
loop
pop
jmp
cmc
es
sub
cmc
stc
ljmp
pop
call
data16
and
cltd
jg
xchg
sbb
inc
into
fwait
mov
imul
jb
inc
ljmp
mulps
jno
imul
test
mov
xor
xchg
sub
push
adc
lret
push
sbb
jne
lret
adc
inc
out
data16
pop
pop
shl
jo
xor
fidivrs
and
hlt
ficomps
iret
imul
inc
and
shrl
and
gs
adc
or
js
pop
mov
or
in
push
lret
cmp
popf
sub
in
push
mov
add
pop
repz
jl
sbb
cltd
shll
or
mov
xor
jo
cld
and
mov
iret
pop
sbb
adc
arpl
fwait
inc
add
xchg
icebp
clc
sbb
jmp
ja
cmpsl
xchg
sahf
sahf
in
dec
mov
inc
add
insl
fdiv
repnz
movsl
sbb
icebp
jge
ljmp
add
mov
cmp
sub
ficompl
add
add
push
cmpsb
les
vpshufhw
push
sti
pusha
js
add
in
lods
pop
les
outsb
jmp
lahf
jecxz
dec
add
leave
adc
push
push
push
mov
clc
jecxz
enter
ljmp
jo
inc
test
mov
hlt
in
icebp
jbe
lock
sbbb
sub
mov
enter
bound
mov
add
mov
insb
pop
push
mov
sbb
cmp
mov
and
cmp
rorl
and
outsl
hlt
movsb
push
or
pop
mov
in
adc
ljmp
or
inc
inc
mov
xor
sub
cli
cmpsl
lods
popf
fstpl
pop
pop
lds
pop
in
jbe
mov
push
ficompl
imull
jecxz
or
mov
pop
xlat
sub
scas
xchg
repz
scas
xorl
cli
dec
xor
outsb
cli
fcomip
loop
xchg
and
std
pop
popa
insb
out
cmp
sub
lods
aaa
xchg
lds
imull
inc
jl
test
popf
rorb
sbb
push
mov
std
and
lcall
jl
mov
pop
xchg
add
je
jmp
out
push
sub
popa
in
arpl
pop
mov
jns
fstl
repnz
std
push
bound
xchg
popf
lret
shl
roll
pop
test
add
pop
movsl
and
ret
or
lds
icebp
in
xchg
insl
aad
cmp
adc
dec
add
fiaddl
and
mov
iret
xor
mov
mov
arpl
es
lods
or
leave
leave
dec
fidivrl
push
ds
xchg
sub
jns
mov
mov
sbbl
cmp
cmp
fwait
push
nop
push
push
lea
xchg
fldt
imul
dec
cmp
or
ret
rcl
rcrb
mov
jge
pushf
push
in
repnz
mov
xlat
repnz
stos
inc
insl
or
fcmovnb
scas
ret
cmp
mov
xchg
xchg
loop
cmc
pusha
or
push
xor
stc
xor
aaa
mov
adc
inc
ret
push
jo
mov
xor
or
pop
ds
mov
pop
pop
and
pop
pop
ret
int3
mov
fs
mov
mov
dec
sti
sbb
scas
mov
cmc
mov
cmp
scas
sbb
mov
imul
mov
push
sub
jno
add
mov
and
mov
sub
add
mov
fistpll
testl
ja
jecxz
adc
mov
cmpsb
pop
mov
pusha
mov
mov
xchg
pop
imul
ljmpw
dec
mov
stc
mov
mov
fsubrs
add
inc
js
lods
fnstenv
jns
add
or
xor
sbb
out
xchg
pop
or
cli
xchg
adc
test
sbb
je
xchg
icebp
dec
xor
mov
dec
push
dec
int
push
pop
and
fs
lds
jo
mov
and
pop
stc
push
push
sub
jb
repz
and
jle
fsubl
and
out
sbb
lock
lret
mov
cwtl
xchg
cmc
push
das
cmp
nop
cmp
popa
xchg
push
jl
repnz
cs
out
xchg
loop
mov
sbb
add
mov
aas
movsl
mov
push
pop
jmp
xchg
xchg
push
inc
sahf
fimuls
scas
mov
inc
movsb
ret
out
inc
sbb
pop
pushf
repz
inc
ret
inc
push
push
out
sub
test
push
jae
sbb
add
test
fldcw
adc
test
pop
push
ret
sub
xchg
xchg
lds
es
hlt
pop
jo
sbb
or
inc
mov
push
shr
lds
adc
sub
in
xchg
mov
or
outsl
jmp
xchg
sbb
pushf
std
xchg
stc
pop
sub
jle
dec
pop
out
sarl
inc
adc
adc
shrb
lahf
lock
cmpsl
inc
mov
fcoml
repnz
std
loope
mov
popa
sub
daa
jno
jl
out
add
fisubs
into
xchg
fwait
inc
divb
test
sub
popa
fimuls
pop
jp
negl
fisubs
and
pusha
aam
aas
pop
mov
add
dec
loop
push
or
fisttpl
test
repz
out
pop
popf
mov
sbb
iret
rcr
insb
mov
outsl
cltd
imul
sbb
outsb
inc
xchg
or
popa
sbb
repz
fcmovb
loop
inc
cmp
add
fs
sbb
xor
mov
jge
or
loop
push
xor
xor
test
add
scas
ret
jecxz
xor
sbb
and
sti
pop
dec
shlb
jb
inc
repz
stc
pop
icebp
sub
int3
cmp
xlat
inc
pop
inc
imulb
sbb
in
xor
mov
testb
pop
lret
enter
imul
jb
adc
or
or
sub
shrl
dec
inc
sahf
xlat
pop
divb
cmp
into
mov
shrb
inc
orb
sbb
xchg
das
les
lsl
cltd
fisttps
lods
mov
and
sub
cmp
outsb
daa
jb
pop
aas
repnz
mov
pop
es
adc
test
js
ss
add
mov
or
ret
shrl
mov
les
cmp
dec
or
or
outsl
ljmp
dec
clc
gs
xchg
dec
lods
xor
rcll
mov
icebp
into
je
mov
sub
cli
add
arpl
mov
pop
ja
icebp
jns
enter
movsb
iret
sbb
jne
in
lcall
sub
loope
rolb
addr16
test
popf
pop
mov
mov
popa
imul
sahf
xor
push
inc
cmp
js
pop
cmpsl
stc
mov
push
sbb
popl
sbb
cld
scas
cmpsb
pop
arpl
xchg
and
or
add
xor
pop
leave
push
addr16
repz
adc
cwtl
fcoms
aad
roll
mov
test
fcomps
push
out
ljmp
clc
leave
mov
add
adc
mov
jae
pushf
xchg
and
fstps
cmc
outsb
pusha
outsl
xchg
cli
and
inc
out
es
popf
ja
xchg
test
outsl
loop
or
test
int
fistps
shrl
inc
test
icebp
jp
xchg
dec
and
sbb
int
lcall
je
addb
pop
sbb
ss
repnz
stos
in
inc
test
mov
push
adc
ret
inc
cmp
ss
data16
push
dec
xchg
rorl
loope
addr16
test
mov
aam
lret
mov
ss
das
or
and
hlt
outsb
je
xorl
out
xchg
jbe
pop
jg
in
jp
cmp
stos
adc
jns
xor
push
add
cwtl
lock
test
xor
add
jns
scas
dec
mov
mov
into
arpl
sub
inc
loopne
je
mov
popf
sbb
ja
daa
mov
jle
and
push
push
fs
jne
mov
or
inc
out
out
loopne
jno
or
mov
xor
sub
clc
push
test
mov
movsl
daa
fs
outsb
xchg
xor
fstps
xchg
stc
mov
mov
or
mov
jmp
iret
les
rolb
fistpll
enter
test
out
dec
orl
cmp
xchg
gs
mov
or
xchg
and
outsl
aam
cs
xchg
dec
inc
jge
enter
ss
adc
xor
ror
lahf
out
insb
test
arpl
sbb
cmc
cli
adc
adc
adc
sti
xlat
out
pop
xor
fwait
mov
pusha
in
pop
sub
sahf
mov
push
mov
push
or
je
mov
mov
cmpsb
test
out
jae
sub
imul
cmp
mov
or
dec
xor
jo
aad
sub
adc
mov
lret
out
sub
ret
and
mov
xlat
test
sub
icebp
out
dec
testb
add
push
inc
xor
dec
lret
mov
aad
mov
dec
add
fldenv
mov
add
sar
jae
jg
cld
cmp
mov
dec
pop
addl
jno
test
mov
test
pop
jae
sub
cmc
ja
adc
cwtl
pop
or
adc
and
sbb
jae
loopne
mov
enter
pop
outsl
outsb
out
adc
push
jmp
mov
push
mov
shrd
pop
cmp
enter
sub
add
popf
in
jo
push
sbb
pop
les
dec
adc
xchg
cmp
cmp
lcall
pop
pop
jnp
xchg
test
pop
xor
mov
rol
mov
js
lea
pop
dec
movsl
iret
cmp
mov
ret
hlt
push
jb
nop
inc
stc
fwait
aad
iret
scas
stc
mov
out
sub
jmp
jl
sti
int
cmc
arpl
mov
mov
add
jo
sbb
aad
adc
add
add
mov
cmc
jl
scas
xchg
enter
mov
xor
xchg
push
out
cmp
in
cs
rcrb
sbb
das
jae
inc
jne
les
fninit
dec
or
outsb
in
pop
hlt
adc
inc
mov
fstps
call
and
mov
cmp
xchg
outsb
js
inc
push
cmpsb
lret
test
iret
ljmp
cmp
dec
js
sbb
push
sbb
sub
outsb
mov
xor
jo
sub
mov
in
sub
cmp
call
int
adc
into
imul
pushf
adc
sbb
xor
xor
mull
add
mov
sbbl
jo
movsl
testb
push
mov
nop
sete
and
or
adc
dec
xor
pop
daa
or
in
fldl
inc
jbe
push
imul
mov
popa
xchg
popl
daa
test
les
cwtl
jecxz
mov
push
mov
cmp
pop
jle
mov
xchg
fstpl
in
or
cmp
xlat
je
in
cwtl
repz
add
in
imul
cmp
push
jno
dec
pop
and
pop
in
mov
and
popa
mov
in
jns
mov
lret
notl
notb
push
aad
lcall
xchg
or
ds
xchg
or
roll
xor
imul
and
xchg
notrack
mov
es
out
sub
pop
mov
mov
inc
or
mov
nop
jp
fs
lods
push
mov
leave
sub
sbb
jno
pop
add
cmpsb
xchg
mov
or
insl
decl
adc
lods
sub
mov
dec
sbb
dec
push
xor
pop
addr16
adc
inc
xchg
jp
lods
mov
or
adc
push
mov
add
and
lods
fcmovnu
add
mov
arpl
rcrb
jmp
das
inc
or
inc
ljmp
fs
lock
scas
add
pusha
insb
pop
add
stc
xchg
mov
repz
mov
out
mov
ss
mov
inc
or
jg
dec
scas
push
jae
mov
fs
daa
mov
inc
int
sub
pop
xor
je
lods
inc
add
xchg
test
adc
xor
dec
jb
xchg
cltd
mov
push
xor
adc
movsl
jmp
push
and
mov
bound
rcrl
or
enter
sub
ja
int
adc
dec
sbb
shl
mov
mov
hlt
cmpsl
adc
js
jmp
clc
adc
xor
imull
repz
dec
dec
pop
mov
data16
sbb
out
es
es
dec
mov
adc
pop
mov
add
out
cs
repz
pushf
lds
outsb
dec
mov
in
sub
push
push
and
pop
mov
adc
sub
imul
loop
inc
pop
in
das
push
xor
pop
cld
xor
out
call
sub
aad
sbb
mull
outsl
cmpsb
stos
mov
adc
test
xor
scas
stos
aas
adc
or
pop
cmp
shlb
addr16
sub
das
push
fwait
jbe
add
ds
jne
fsubs
iret
xchg
xchg
sub
inc
sub
les
fwait
pop
mov
xchg
clc
adcl
fs
test
pusha
cmp
mov
stos
push
dec
enter
iret
dec
femms
push
stos
cmp
and
adc
inc
hlt
loop
subb
jl
jmp
subb
in
jp
cmp
sub
stos
mov
xor
movsl
pop
mov
jge
call
repnz
imul
shll
repz
in
xor
pop
std
mov
sahf
inc
cmp
pop
stos
cmc
inc
push
insb
add
or
adc
int3
adc
mov
push
loop
add
aam
xchg
movsl
shrb
fdivr
popa
mov
sbb
cmp
aad
mull
mov
mov
jae
shrl
push
pop
mov
aas
cmp
cmpsl
cs
mov
stc
or
xlat
mov
repnz
data16
lret
mov
in
pop
test
jge
adcl
pop
das
addr16
insl
pop
sar
mov
mov
push
adc
dec
shll
fsubrs
mov
out
xor
push
xor
cmp
jg
sti
inc
mov
jmp
imul
push
test
shlb
iret
movsl
dec
cmc
sbb
std
sbb
push
out
mov
in
orb
adc
enter
mov
lods
popf
xchg
jo
mov
std
sbb
scas
pushl
jle
mov
dec
mov
mov
sub
and
movsl
mov
or
push
lds
push
lds
mov
mov
adc
and
xchg
enter
sub
inc
push
fstp
lret
sbb
sbb
in
stc
mov
dec
repnz
sarl
das
adc
xlat
rcl
dec
leavew
daa
sarb
lcall
stos
daa
sahf
xor
or
test
pop
enter
adc
ret
mov
push
pop
ss
aas
fildl
ja
hlt
lret
divb
int
xchg
arpl
fcom
ljmp
cs
flds
dec
cmc
mov
jnp
imul
jmp
pop
xor
add
ret
cmp
mov
ds
lahf
insb
fstps
outsb
mov
inc
pop
cmc
xchg
sub
out
inc
sbb
int
jo
pop
adc
xchg
out
aam
out
dec
mov
ja
jno
pop
sub
lahf
jp
repnz
hlt
mov
stos
and
out
in
mov
jl
mov
lret
je
or
je
mov
add
inc
xor
add
sbb
pop
cmc
insb
pop
in
xor
pop
stos
decb
xlat
xchg
xchg
xchg
shll
out
lcall
cmp
fldl
hlt
notl
xor
adc
adc
add
cmpb
mov
sbb
insl
jnp
sti
pop
push
dec
mov
mov
stos
jmp
mov
repz
or
jle
mov
jbe
movsb
jb
mov
cmp
in
cltd
inc
insb
ret
adc
lods
mov
mov
sub
dec
xor
out
fcmovu
outsb
call
xlat
mov
cmp
mov
iret
and
dec
test
negl
bound
adc
pop
iret
mov
cltd
mov
popf
movb
cmpsl
cmp
insl
mov
mov
sbb
mov
sbb
popa
pop
dec
inc
add
imul
repz
je
movsl
inc
xor
add
int
jbe
std
cmp
cwtl
add
jae
inc
repnz
cmp
xchg
mov
gs
bound
pushf
fstps
std
cmp
scas
icebp
sub
aam
jg
inc
mov
scas
fdivl
das
cmp
fwait
cmp
sti
xchg
jle
scas
push
in
add
mov
jne
test
pop
iret
subb
mov
sbb
and
or
fcmove
std
jp
test
inc
lods
aam
mov
testb
dec
cmp
stc
mov
and
dec
sbb
stc
jecxz
inc
mov
push
mov
aas
imul
in
xchg
jp
mov
mov
subl
xor
xchg
jbe
ja
int
lcall
dec
adcl
dec
andl
xchg
mov
adc
xchg
test
push
sub
cmp
cli
push
call
lret
push
xchg
adcl
ret
xchg
out
es
test
dec
and
jae
outsb
lret
aad
daa
xlat
mov
sub
mov
mov
cmp
movsl
repnz
loop
cltd
ficoml
mov
add
ss
pop
sahf
pop
push
fimull
mov
lock
cs
push
insb
dec
push
mov
jmp
daa
test
jno
cmp
cmc
jae
adc
mov
test
and
dec
cltd
cmp
jb
shlb
inc
sbb
xchg
ja
dec
xchg
and
mov
xchg
xor
shlb
add
jno
sti
lods
sub
mov
shlb
call
lret
hlt
decl
mov
ret
int3
insb
adc
rorb
pop
xchg
lods
arpl
pop
insl
pop
or
jp
cmp
and
add
shll
in
sub
xchg
ss
out
out
adc
push
cmpsl
mov
shl
clc
call
out
push
dec
xor
fsubrl
add
negb
pusha
adc
scas
aam
outsb
and
pop
jo
pop
negb
fs
shrl
cmp
lcall
mov
push
addr16
in
adc
or
insl
mov
xor
mov
jmp
mov
mov
mov
dec
ljmp
jne
inc
jno
add
gs
adc
mov
mov
mov
sub
roll
pop
das
popa
cmp
rcl
inc
mov
stos
dec
pop
push
cmpsl
push
lods
push
leave
fcom
dec
xchg
add
jnp
push
sbb
out
xor
inc
mov
insl
or
or
pop
sti
adc
cmp
lds
das
cmc
adc
sub
xor
mov
cltd
pop
jno
addb
sub
fistps
xchg
aam
pusha
lahf
or
xchg
mov
push
add
pop
outsl
mov
hlt
jl
mov
in
outsl
xor
andb
jb
xor
mov
mov
xchg
push
jecxz
mov
cmp
mov
stos
dec
cmp
shrl
imul
sub
popf
push
xchg
in
test
cmp
xchg
mov
orb
js
xor
xchg
xchg
push
jmp
jl
sub
lods
dec
pop
iret
popf
xchg
data16
jmp
fpatan
out
aam
mov
adc
in
pop
ds
into
xchg
sbb
sub
xchg
fldenv
mov
mov
lock
mov
imul
fwait
inc
call
add
mov
aad
shll
pop
mov
lods
mov
add
mov
or
cmp
mov
push
out
sarl
push
xor
jae
sub
loope
cmp
roll
pushl
mull
mov
mov
fidivl
sub
add
pop
enter
scas
lods
mov
shrl
call
bound
in
leave
mov
xor
mov
iret
dec
fwait
scas
mov
cmpsb
mov
cmpsl
mulb
cmp
jae
sub
daa
daa
icebp
int
jg
lahf
sub
jmp
aas
or
add
pop
divb
fimull
mov
fidivrs
popf
push
push
sub
pop
mov
int3
xor
sub
inc
lret
xchg
and
xchg
mov
mov
imul
cmp
push
mulb
fstpl
and
pop
mov
cmc
test
sbb
ljmp
scas
ja
das
fisttpll
popf
and
ss
stc
pop
mov
mov
jmp
jbe
mov
rclb
jno
mov
shlb
int3
outsb
mov
dec
imul
fsubs
rcll
push
cmp
inc
orb
pop
mov
or
js
cs
jno
scas
xchg
cwtl
lea
push
cwtl
sbb
xor
in
sbb
je
es
in
dec
mov
mov
jbe
dec
loope
cld
mov
sbb
sbbb
jb
adc
aad
sbb
jb
loopne
sbb
adc
and
push
sahf
add
xchg
sbb
or
push
out
insb
pop
icebp
pop
adc
push
sbb
outsb
cli
or
mov
fisubs
call
sbb
out
and
inc
adc
stc
dec
mov
mov
mov
mov
inc
xchg
dec
dec
cmp
jns
ss
in
cmpsb
in
and
lret
inc
mov
js
mov
mov
loop
leave
dec
pop
cmpsl
pop
jmp
adc
sahf
shrl
inc
sahf
popa
cmp
shlb
jo
sub
xor
jne
inc
cmp
arpl
ret
dec
cmp
iret
add
push
icebp
xor
outsb
pop
add
test
out
orl
pop
mov
in
lock
ds
sbb
and
lock
cmc
cmpsb
lcall
and
daa
or
xor
adc
push
rcll
mov
sub
insl
stc
xchg
fisttpl
dec
test
jg
cmp
push
sahf
iret
adc
outsb
out
cmp
push
pop
lret
loope
mov
dec
frstor
pushf
mov
push
mov
in
dec
and
mov
je
aad
orl
xchg
imul
ss
mov
xor
addr16
add
cmc
dec
outsb
lcall
mov
data16
outsb
ret
adcl
sub
nop
push
movsl
popa
imul
dec
jae
mov
repz
das
pop
or
jmp
test
pop
jne
dec
cmpsb
stos
push
lret
mov
pop
pop
xchg
or
xorb
or
es
sbb
xor
inc
cmp
push
mov
lcall
fwait
sbb
cwtl
insl
sbb
inc
jae
xchg
lea
dec
dec
add
mov
aam
test
pop
stos
jle
pop
mov
ds
fsubrs
cmp
push
rclb
push
pop
in
ffreep
adc
pushf
daa
jne
sahf
xchg
inc
daa
imul
fabs
mov
cmc
in
inc
aas
out
or
cwtl
push
inc
pop
dec
ficoms
call
fisubrl
add
push
push
inc
test
testb
ret
aas
std
ret
cmp
xor
aam
dec
shl
leave
jmp
lods
pop
and
insb
mov
xor
sbb
inc
paddsb
xor
dec
jo
sub
push
pusha
xchg
jle
jle
lret
and
xor
xor
shl
bound
mov
nop
dec
mov
popf
adc
enter
mov
push
sbb
stos
xor
and
rorb
les
std
sub
mov
inc
insb
hlt
frstor
and
cmp
jno
push
jno
mov
loope
out
in
xchg
and
and
lds
in
cmpsb
add
test
and
cmpb
shlb
ds
cmp
clc
inc
xchg
jmp
imul
movsb
fstl
adc
inc
adc
out
add
lods
sbb
and
gs
inc
aam
sub
mov
or
loope
insb
jo
andl
sub
mov
adc
push
pop
pop
add
fimull
cwtl
mov
ret
xchg
mov
or
jo
xchg
sti
xchg
stc
or
dec
xchg
xor
ret
pop
pop
and
sub
mov
rcrl
pop
push
cmpb
clc
and
xchg
sub
and
lock
xor
out
rorb
addr16
xor
xlat
cmp
inc
fisubl
xor
pusha
arpl
adc
dec
inc
push
outsl
pop
mov
cmpsl
jno
stos
fstpt
lahf
jae
sbb
fsubl
in
cmp
and
ja
iret
jno
lret
mov
push
ss
push
ret
enter
xchg
mov
mov
and
cmp
arpl
decb
out
push
je
ret
or
pop
mov
lahf
in
cmp
test
js
rcll
dec
xor
xor
jmp
inc
jne
aaa
jle
xchg
add
jnp
shrl
test
or
and
or
jl
mov
mov
cmp
and
sbbl
jge
cli
fisubrl
mov
ja
xor
xor
xchg
xchg
or
mov
pushf
mov
push
outsb
pop
sbb
mov
pop
xor
fisttpl
adc
std
pop
or
imul
popf
das
add
inc
and
in
push
fistps
fildl
popf
inc
test
push
in
cmp
daa
insb
cmp
imul
sbb
icebp
and
push
insb
repnz
xadd
jo
mov
jbe
mov
movsl
lcall
clc
pop
mov
xchg
adc
add
bound
pop
cmpsb
xor
adc
mov
lea
lcall
mov
jp
xor
sbb
and
push
fildll
sbb
mov
sti
scas
pop
cwtl
jnp
jp
sub
jp
xor
fsts
shlb
xchg
add
add
loop
sbb
mov
sbb
ljmp
cwtl
repnz
negl
xchg
addr16
lea
xor
inc
xchg
out
cmp
mov
or
mov
fisubrl
imull
loopne
push
pop
lret
iret
ljmp
dec
push
loope
and
cltd
push
xchg
mov
cmp
xchg
dec
jp
xor
mov
dec
in
xchg
cwtl
inc
loopne
cs
frstor
xchg
mov
insl
jp
push
test
loopne
test
lds
loope
in
push
pop
std
clc
mov
mov
daa
adc
mov
scas
sub
ss
jp
das
sub
movsb
add
data16
sbb
add
je
leave
add
stos
outsl
push
mov
push
mov
je
xor
fstps
ss
adcl
push
sub
outsb
test
inc
jl
das
mov
shr
fidivs
sub
push
std
decl
jl
cli
nop
push
xchg
jge
jae
mov
inc
pop
and
in
mov
dec
mov
cmpsl
lret
xchg
insb
adc
cs
cld
lods
lods
out
iret
add
push
ret
in
inc
cmpsl
xor
adc
jle
inc
les
pop
in
test
cmp
push
jg
inc
dec
push
xchg
ds
pop
cli
popa
pusha
xchg
orb
lds
cwtl
or
push
or
or
lret
daa
fimuls
outsb
lret
adc
jbe
adc
pop
test
enter
lret
and
inc
insl
pop
lret
aam
xor
ds
mov
jmp
xor
xor
add
shr
movb
fbstp
or
in
xchg
in
in
mov
or
adc
mov
bnd
inc
in
loope
ret
adc
aaa
push
push
pop
xchg
fcoml
insb
call
push
aam
jecxz
adc
inc
shl
push
movsb
pop
pop
jmp
mov
fisubrl
xchg
xchg
ss
mov
lea
pop
add
outsl
cmp
dec
fs
adc
dec
repnz
gs
xchg
iret
sti
mov
push
mov
lods
lods
pusha
test
inc
test
std
or
es
push
push
fldt
push
mov
adc
pop
push
inc
test
mov
lods
add
cmc
pop
sbb
aas
xchg
test
popf
in
push
jbe
fcomps
mov
mov
push
sbb
xor
insl
and
mov
sub
push
aas
inc
ror
roll
mov
je
inc
mov
dec
push
xor
out
push
je
cmp
fistpll
sbb
mov
mov
lea
lret
outsb
test
mov
daa
and
jns
ss
imul
inc
repnz
jg
xorb
roll
sub
ficoms
cmp
adc
mov
shrb
mov
inc
cli
das
ret
ss
into
movsb
and
into
loop
sbb
inc
repnz
lds
jl
pop
pop
mov
mov
jno
xor
xor
jmp
repz
cmpsl
mov
inc
mov
sbb
lds
loop
add
push
mov
rol
mov
cs
inc
add
popf
sbbb
icebp
rep
mov
dec
test
jno
fwait
dec
add
in
cmc
or
clc
push
adc
sbb
mov
aad
cmpsb
mov
out
fbstp
aam
ret
pop
ret
add
xorb
sub
jmp
fstpl
jecxz
negl
loope
xlat
popf
xor
daa
ret
mov
rcll
cli
cs
xchg
lock
icebp
dec
ret
and
lret
or
mov
in
ret
mov
cmp
mov
jge
jb
mov
add
adc
lret
xchg
stos
int3
cmp
int
xor
lret
dec
xchg
ljmp
mov
pop
fadds
or
sub
jns
cmp
xlat
add
push
test
repnz
inc
outsl
xor
push
inc
repz
rorb
or
cmc
lret
mov
dec
fsubp
hlt
jne
add
cmp
xlat
or
jne
add
leave
loopne
adc
adc
out
push
out
push
xorb
movb
add
nop
daa
add
push
lret
stc
fidivs
push
ds
inc
mov
sbb
pop
or
test
lods
stc
shl
std
fisubrl
out
insl
out
and
lock
dec
stos
cli
and
cld
rcr
lahf
andl
cmp
and
mov
add
lods
cwtl
lret
pop
add
dec
adc
xchg
add
cmp
fwait
fwait
cmp
pop
sbb
and
cmp
aam
mov
dec
jg
push
decb
ja
imul
enter
cli
cmp
loope
sub
cld
imul
mov
dec
iret
or
fisubrl
pavgb
call
mov
stc
movsl
fsubs
fsubl
hlt
loope
gs
fcomps
push
js
ja
cmp
lds
in
push
addl
stos
stc
lret
add
push
jg
adc
sub
divb
cmpsl
dec
out
jecxz
scas
js
enter
sbb
xchg
sbb
dec
dec
rcrb
and
out
movsl
stc
icebp
inc
push
xor
roll
and
mov
lds
xchg
or
sarl
push
ret
ds
jl
daa
xchg
mov
adc
in
push
xor
jno
jge
jl
xlat
sbb
rorb
fldl
rcrl
in
and
jno
rorl
fistps
lds
jno
cltd
into
xchg
orb
in
inc
repnz
mov
lea
fidivs
sahf
data16
jecxz
mov
xchg
xor
adc
pop
jb
fistpl
push
aaa
adc
imul
xor
xlat
imul
mov
push
inc
xchg
into
fildl
sub
loope
insl
pop
adc
mov
add
in
dec
cli
push
out
in
lods
stos
andl
add
hlt
lods
subb
cmp
sub
mov
bound
add
stc
pop
fsubr
xchg
push
sub
daa
push
imul
adc
sbb
xor
xor
lret
outsl
popa
scas
lock
fmul
repnz
lock
fcoml
stos
xor
sub
fcompl
push
push
dec
add
scas
jle
mov
jb
inc
sub
addl
mov
xchg
cmp
test
cvtpi2ps
mov
daa
pop
out
jb
or
xlat
pop
push
pop
xor
pop
adc
ret
add
addr16
mov
cmp
jb
xor
dec
pop
mov
popa
cmp
fwait
mov
ss
jno
stos
iret
mov
outsl
mov
aam
mov
inc
xor
cmp
popa
inc
mov
lds
adc
cwtl
fiadds
or
cmp
jle
cltd
jecxz
ret
out
push
aad
add
rep
pop
pop
adc
and
fsts
xchg
dec
dec
push
mov
daa
dec
lea
in
bound
cs
lock
pop
fwait
in
jle
ljmp
les
cwtl
aaa
pop
popa
movsb
js
in
xor
cmc
and
pushf
mov
cmpsb
lret
jmp
int
jmp
pop
loope
data16
mov
inc
mov
add
in
mov
rep
aad
mov
push
fsubrl
or
in
cmp
lods
cmp
outsl
jl
push
jecxz
dec
js
sbb
cs
lods
jne
pop
mov
sbb
dec
xchg
adc
mov
into
mov
jo
les
in
fistl
xor
cwtl
fnstcw
setb
inc
movsb
test
add
or
out
ss
jnp
add
shlb
cmpsb
cmc
enter
mov
rcrb
enter
es
sbb
xchg
jno
aaa
loope
cmp
jo
sub
add
jle
insl
addr16
jmp
out
scas
lcall
call
addr16
jo
out
lret
dec
sbb
popa
stos
and
dec
lds
inc
cmpsl
fildll
and
xchg
push
mov
push
mov
sbb
mov
ljmp
insb
jecxz
jbe
ret
sub
cld
mov
notl
js
cmp
mov
cmc
leave
sub
cmpsb
repz
icebp
dec
dec
cmc
roll
sahf
lds
pusha
cmc
inc
add
push
cltd
adc
and
in
push
rorl
mov
out
sarb
or
add
push
mov
dec
jbe
sbb
cli
mov
pop
push
push
hlt
lea
ss
out
ficoms
daa
test
arpl
push
or
test
outsl
pop
dec
sbb
sbb
and
cwtl
movsl
shlb
ljmp
aaa
bnd
popa
in
pop
jg
js
jbe
mov
lock
sbb
rcrl
jmp
cmp
pop
sub
js
mov
insl
inc
sbb
jl
insl
add
adc
arpl
inc
cwtl
adc
cli
mov
push
ljmp
sbb
out
ds
lcall
push
sbb
pop
out
gs
add
or
out
lods
sbb
repz
xchg
mov
sahf
mov
cmp
jnp
inc
cmp
mov
addr16
pop
jo
icebp
push
stos
fisttps
inc
pop
popa
dec
sbb
lcall
sti
pop
cmpsl
sub
jg
cmp
iret
sbbl
test
cmc
icebp
aaa
arpl
inc
sbb
iret
jecxz
test
xchg
push
sub
mov
sub
in
int
jmp
adc
in
push
lds
pop
or
cmp
sbbb
mulb
outsb
sbb
sbb
mov
mov
pop
push
adc
xchg
dec
push
incl
sahf
push
scas
movsl
int
jns
push
pop
pop
notb
cmc
das
popf
fistpl
hlt
movb
sbb
dec
sub
jns
mov
aaa
jns
fwait
jno
negb
adc
dec
dec
mov
and
icebp
hlt
in
lods
jmp
fistpll
out
cld
and
jae
jle
mov
addr16
cmp
jl
out
sbb
adc
icebp
andl
or
push
cwtl
stc
imul
loop
fstps
rolb
roll
mov
enter
repnz
scas
leave
dec
sub
aas
dec
or
fstl
test
pusha
jl
add
jp
and
mov
lea
or
roll
outsb
fnstenv
adc
push
cmp
sbb
inc
scas
les
stos
arpl
push
ret
sub
es
mov
aaa
adc
out
aam
clc
iret
mov
xchg
pusha
repz
das
mov
les
insl
jbe
aas
leave
push
dec
push
je
sbb
cli
leave
in
add
sahf
mov
sbb
sub
outsl
sbb
add
xchg
shlb
mov
xchg
jnp
aad
cmp
push
addl
js
sub
push
pop
push
in
test
sti
sbbl
xchg
mov
or
arpl
mov
sbb
add
mov
mov
data16
xchg
stos
insb
push
iret
dec
ret
mov
nop
sub
adc
sub
pop
xor
std
mov
insb
push
clc
enter
add
aad
mov
sub
mov
xor
test
or
push
adc
popf
rcl
out
movsb
mov
xor
jae
lcall
xchg
push
fwait
in
and
outsb
add
push
mov
sti
inc
dec
jns
in
xchg
enter
cmp
fisttpll
out
adc
pop
push
cwtl
add
inc
xor
fistpll
cmp
dec
fildll
adc
xor
mov
or
loope
pop
inc
push
jae
cmpsb
into
jbe
icebp
int3
mov
fwait
int3
in
es
or
xchg
jg
lock
ret
loop
fisttpll
jne
pop
aad
imul
mov
and
cwtl
adc
roll
pop
jb
loop
mov
adc
mov
cmpxchg
add
inc
push
mov
int3
sbbb
test
cmp
xchg
mov
pop
sbb
mov
xor
testl
aad
xchg
pushf
cld
pop
stos
int
rorb
fldcw
mov
loop
pop
hlt
dec
outsl
jae
clc
xchg
add
test
mov
int
loop
sbb
aaa
sahf
icebp
xchg
pop
movl
pop
rorl
jg
sbb
ret
lods
mov
mov
in
stos
cwtl
movsb
sbb
aas
dec
sub
sub
or
je
outsl
inc
insb
fs
add
xchg
adc
jecxz
mov
pushf
gs
lods
fnstsw
jno
ret
sbb
ljmp
jl
out
xor
cmp
in
cmpsb
xor
inc
ret
mov
add
fisubrl
xchg
push
out
inc
push
mov
mov
fsubrs
arpl
sub
inc
call
sahf
adc
jbe
cmpb
and
addr16
cmp
pop
cmpsb
push
xchg
or
adc
mov
dec
jo
lret
mov
mov
idivl
pop
push
fisubs
and
in
push
fwait
mov
xor
xchg
sbb
xor
movsb
and
std
adc
rcrb
jmp
loope
jae
popa
sub
xor
insb
push
cld
rorl
leave
push
dec
pushf
in
hlt
cmpsb
xor
mov
fstps
dec
mov
out
imulb
sub
in
loope
dec
mov
arpl
sbb
repz
dec
or
ret
pop
add
mov
insb
jecxz
adc
mov
adc
outsl
adc
and
inc
or
jp
into
adc
or
cmc
and
jmp
sub
int3
adc
adc
add
add
mov
dec
jnp
lods
jne
xchg
mov
ficomps
mov
lods
jle
push
mov
dec
jmp
sub
out
jg
icebp
shl
movsb
inc
bound
sub
movsl
mov
jecxz
ficoms
aam
inc
lods
clts
push
cmp
xlat
mov
inc
sbbl
loope
inc
xor
dec
push
xor
mov
mov
xor
inc
and
mov
sub
pop
roll
lods
dec
push
or
mov
jge
and
roll
sbb
xor
push
and
loope
test
or
popl
and
add
sarl
fstps
or
cmp
adc
ret
movsb
fstps
into
mov
push
lahf
test
push
lahf
cmp
mov
inc
enter
push
ja
adc
test
xor
push
ret
mov
xlat
push
mov
loopne
mov
or
xchg
push
movsb
ljmp
mov
sub
dec
lock
andl
inc
hlt
sti
xchg
scas
dec
jbe
sbb
aad
dec
push
mov
pop
mov
mov
dec
xchg
out
xor
mov
jmp
mov
mov
xchg
or
push
push
inc
jnp
xlat
sbb
aam
sbb
sahf
pop
test
add
xor
cmp
mov
jl
es
clc
inc
scas
inc
add
or
fisttps
lock
loope
test
cltd
dec
adc
xchg
add
jae
cmp
push
ror
fistps
andl
sbb
imul
pop
sbb
mov
ljmp
xor
movsl
jmp
or
push
js
bound
stos
pop
ss
xchg
movsl
insl
jp
scas
pop
ret
outsl
and
mov
sbb
xor
jle
rcll
mov
in
xor
mov
push
mov
in
bnd
cmp
insb
push
add
xchg
dec
xor
loope
pop
test
int
cs
push
out
sub
sub
cmpsl
pushf
jne
sbb
sbb
pusha
iret
iret
xchg
sub
pushl
into
jns
mov
adc
adc
sbbl
add
lret
mov
push
xchg
cmpsb
mov
inc
mov
add
mov
sar
sub
and
mov
sub
test
xchg
mov
ljmp
ljmp
int
jae
gs
xor
pop
lret
inc
leave
aaa
repz
pop
pop
xorb
aam
inc
mov
lods
dec
dec
add
xchg
add
pop
sbb
lds
insb
sub
mov
aam
gs
mov
rcrb
lcall
sbb
lods
add
xchg
mov
fists
add
jne
rorb
inc
cmp
mov
mov
ja
mov
push
fimull
rcrl
cwtl
dec
xor
pop
insl
or
jge
pmovmskb
mov
xor
pop
jnp
addr16
xchg
sarb
jmp
mov
mov
mov
loop
bound
push
add
xchg
push
mov
cltd
fcos
addr16
mov
and
fidivs
lods
xchg
jp
roll
shr
in
aad
int
adc
rcrl
cmp
gs
andb
mov
sub
ja
in
es
jl
cwtl
ret
jp
cmp
jnp
ss
dec
push
mov
add
dec
jae
insl
jge
jnp
and
jbe
and
cwtl
arpl
adc
xor
jle
lods
mov
jne
mov
sbb
and
rolb
fildl
mov
adc
mov
mov
mov
das
xchg
or
mov
inc
pop
cld
xor
fidivrl
or
pop
outsl
iret
xor
std
es
into
push
imul
adcl
sub
pusha
test
mov
inc
in
mov
push
jnp
shrl
and
jae
js
pop
mov
mov
jmp
pop
xchg
xchg
push
lock
xchg
ds
push
mov
add
xchg
push
hlt
movsb
sub
mull
adc
es
in
lods
push
and
jbe
dec
adc
jmp
das
and
ss
loop
xor
push
repnz
mov
push
xchg
insl
fwait
lock
mov
xchg
out
xor
or
jnp
sub
push
movsb
mov
push
mov
out
lea
pop
push
adc
adc
nop
xor
shlb
mov
xchg
pushf
mov
clc
push
outsb
mov
inc
sub
loop
or
call
and
mov
loop
mov
adc
insl
repz
cmpsl
sbb
imul
and
push
fs
test
inc
sub
push
daa
jmp
scas
dec
sbb
add
sbb
and
addl
ret
xchg
xchg
in
into
xor
jmp
roll
shll
mov
xor
orb
rcr
mov
jmp
xchg
lret
ret
int3
shl
hlt
push
or
or
daa
jo
mov
inc
cli
lret
bound
pop
lods
push
movsb
push
push
adc
push
iret
push
add
outsl
dec
mov
pop
xchg
xchg
add
fwait
jns
cltd
ret
cmp
aad
add
aaa
and
js
and
jmp
test
fcompp
pop
scas
ret
cmc
testl
test
ja
jg
or
and
lods
adc
fs
addl
shlb
fmul
cmp
gs
mov
shll
dec
leave
xor
push
dec
pusha
in
xor
fs
xchg
out
adc
in
cmpb
mov
inc
scas
dec
sti
xchg
push
add
sub
in
jecxz
mov
mov
jae
int3
ret
hlt
mov
iret
aaa
sbb
loop
mov
xor
pop
aad
dec
sbbl
ljmp
push
rol
ljmp
sbb
out
scas
clc
xor
dec
inc
mov
sarl
pusha
xchg
push
pop
cmp
mov
fsubr
and
leave
cwtl
inc
inc
adc
xchg
lret
adc
add
addr16
or
bound
leave
std
dec
jbe
repnz
jns
data16
cmpsb
xchg
test
hlt
in
dec
ret
cmp
outsl
aas
pop
sub
aam
jecxz
aaa
fmul
mov
push
mov
and
jo
pop
roll
stc
insb
or
xchg
aam
pop
push
movsb
add
add
popa
mov
jmp
outsl
sub
cltd
pop
shlb
jecxz
popf
call
xor
jmp
inc
adcb
sub
xchg
je
mov
cmp
pop
imul
adcl
mov
clc
sbb
jae
out
outsl
rcll
inc
cltd
mov
shrb
pop
push
out
out
jae
xchg
cltd
jo
sbb
incb
xchg
push
out
mov
pop
inc
fisubl
mov
inc
xchg
xor
add
cwtl
jmp
sti
push
ljmp
test
sub
dec
rolb
lret
stos
pop
mov
pop
or
fdivr
xor
orl
movsb
or
jo
sbb
mov
mov
push
repnz
cmp
mov
xor
inc
xchg
dec
pusha
cmp
repnz
sbb
sahf
icebp
loopne
daa
dec
test
adc
pop
gs
movsb
push
cs
xchg
mov
lock
mulb
pop
jbe
sbbl
pop
fistpl
mov
ss
test
push
inc
dec
fcoml
xchg
stos
mov
cmc
popf
mov
sub
push
leave
xor
std
dec
movb
inc
aas
pop
sub
pop
lods
movsb
ds
jl
je
ljmp
out
mov
cltd
sub
or
mov
add
push
imul
or
in
iret
setae
jmp
ret
outsb
out
add
or
mov
popf
repz
lret
dec
push
xchg
lods
repz
adc
cltd
cld
xchg
movsl
mov
inc
int3
push
scas
lods
mov
mov
into
adcl
out
pop
sub
push
push
push
push
scas
cmp
adc
xor
mov
nop
test
pop
lret
push
adc
push
out
rolb
dec
pushf
in
dec
dec
dec
add
imul
lret
subps
jle
push
testl
sti
ret
push
xor
or
out
xor
mov
subb
inc
popf
loope
fistpll
cwtl
iret
jecxz
out
sub
loope
cmc
inc
mov
jg
mov
aad
fsubs
dec
xchg
dec
sahf
pop
push
clc
jnp
inc
push
xchg
pop
fisubl
aad
push
sti
enter
ss
sub
dec
ss
xor
sahf
lock
icebp
into
add
pslld
sbb
push
mov
test
aaa
inc
repnz
dec
cld
mov
or
mov
call
or
test
jg
stos
mov
dec
cmpsl
jne
xor
and
dec
jae
scas
dec
jmp
enter
jecxz
cmc
dec
lods
dec
and
pop
in
jmp
shll
adc
aas
cmpl
cli
inc
stos
rol
sub
test
jge
jg
lds
stos
jae
inc
mov
div
cli
ja
add
cmp
or
xlat
je
in
adc
or
fs
add
wrmsr
mov
inc
push
jmp
xchg
repnz
imul
cmp
jecxz
adc
pop
push
repz
sbb
cltd
cmp
sub
ret
xor
fbld
or
cmpb
fiaddl
orl
popf
data16
aad
lea
mov
sahf
push
insb
outsb
pop
push
adc
mov
pushf
pusha
jmp
sbb
jno
fwait
mov
popa
mov
push
fucomip
out
jp
inc
and
repnz
jg
fcmovne
mov
das
js
fs
ret
dec
and
cmp
mov
xchg
movsl
test
jns
mov
add
inc
imul
xor
jmp
rclb
sarb
addr16
push
adc
enter
adc
aad
xchg
cmp
push
stos
pop
jae
aaa
ja
cwtl
dec
cmpl
ret
in
xchg
mov
jo
xor
or
xor
cmp
into
shlb
push
subl
inc
mov
or
out
testl
lds
loopne
hlt
sti
rclb
and
and
outsb
fs
pop
pop
mov
xchg
stos
je
add
rcpps
mov
int
aam
jl
push
lret
push
test
shl
mov
daa
push
push
iret
les
mov
pop
stos
vcvtpd2psx
repz
fidivrl
xor
sub
out
daa
pop
or
stos
enter
push
stos
xchg
cmpsb
and
aas
sti
jge
jmp
dec
insb
xor
and
mov
lcall
xor
lea
push
mov
push
jp
lds
mov
mov
sbb
fidivrs
push
sarb
int3
mov
inc
test
mov
fsub
pop
cs
dec
xor
movsl
loopne
loop
loop
mov
pop
sub
xor
sahf
mov
lret
sti
dec
jecxz
lret
sub
ljmp
or
inc
es
insb
add
and
lahf
xchg
pop
mov
mov
out
xlat
outsl
dec
mov
mov
push
outsl
repnz
adc
test
push
push
mov
adc
out
cmc
dec
cmp
aad
cltd
cmpsb
push
mov
add
mulb
call
jg
jg
cmpsl
fldt
or
pusha
dec
pushf
xchg
popf
adc
jg
jg
pop
cltd
lock
decl
fcompl
inc
subl
push
or
mov
or
lods
jnp
out
or
lret
pop
or
stc
fcomi
and
xchg
push
cmpsb
mov
adc
xchg
jo
pop
jmp
nop
lds
sbb
xor
mov
lret
push
popa
js
aas
jne
mov
sub
mov
push
mov
adc
cmp
out
and
mov
subb
shll
pop
lods
and
ja
xchg
mov
xchg
fidivs
mov
cs
popf
cltd
jae
in
xchg
xchg
dec
ds
mov
mov
in
imull
push
out
aaa
test
jmp
cld
stos
cmp
dec
mov
and
movsl
lret
xchg
inc
push
scas
pop
sti
pop
push
in
mov
in
dec
jmp
xchg
cmpb
lds
sti
mov
sub
push
cmc
ljmp
pop
call
dec
cmpsl
pushf
popf
fwait
xchg
adc
sahf
fiadds
pop
xor
push
push
inc
xor
inc
ja
stos
sbb
push
adc
divl
push
test
in
mov
fadd
fdivrl
dec
cltd
arpl
jns
jecxz
in
out
push
adc
or
mov
mov
lock
fcmovu
sub
fdivrl
ret
pop
ljmp
mov
or
vmulsd
loopne
xor
xchg
out
mov
push
lds
mov
jmp
mov
adc
jno
mov
xchg
ret
outsl
loope
iret
rcl
outsb
jecxz
push
and
push
jmp
jge
sub
sbb
jnp
push
cmp
sbb
in
leave
insb
mov
out
xchg
mov
je
lea
cmpsl
dec
pushf
aas
jno
jle
bound
jl
mov
add
ljmp
pop
lods
xorb
push
loopne
std
ficomps
jecxz
iret
mov
add
pop
or
fisttps
mov
push
push
aam
xlat
mov
mov
pushf
loope
into
and
mov
jae
inc
cmp
sub
cmp
stc
pop
lret
test
inc
or
and
sahf
and
and
hlt
aas
jno
stos
add
dec
lret
mov
negl
mov
mov
mov
mov
ss
notb
jns
dec
mov
inc
or
ret
pushl
js
mov
in
je
cmp
into
mov
out
scas
jecxz
jns
add
getsec
adc
fwait
or
inc
shl
mov
cmp
out
jo
lahf
dec
cmp
or
inc
adc
rorb
lahf
pop
adc
mov
sbbl
pop
les
and
adc
inc
daa
cmp
or
les
out
sub
test
fisubrl
in
imul
scas
and
not
imulb
add
cmovae
les
sbbl
scas
es
sarl
push
lock
orl
pop
cli
inc
sub
bound
lret
pop
mov
or
outsb
movsb
or
aaa
jbe
or
pusha
loop
loopne
sub
iret
or
hlt
sub
and
mov
ljmp
sub
sub
lds
out
lea
repz
enter
pusha
mov
mov
fisttps
adc
mov
pop
mov
cltd
sub
jae
arpl
ja
data16
sahf
push
scas
jmp
lahf
lcall
cld
mov
xchg
and
or
popa
dec
jo
mov
repnz
mov
cmp
jecxz
add
ficoml
push
pop
xor
mov
test
popf
dec
mov
andb
mov
fwait
scas
lss
mov
mov
dec
stos
stc
andl
xchg
sub
pop
popa
movsb
and
lret
icebp
sub
arpl
sub
jl
add
test
inc
adc
int
adc
adc
mov
pop
stc
mov
adc
and
incl
pop
aad
add
jne
push
loope
mov
cs
fnstcw
shrb
add
and
into
andl
xchg
inc
mov
add
rclb
inc
and
cmc
imul
je
add
leave
inc
and
lcall
gs
adc
sbb
jg
xchg
mov
stos
out
inc
and
xor
iret
pusha
push
mov
cmpsb
pushf
mov
popf
stc
decl
cmp
sarb
pop
shl
cmp
lock
mov
mov
mov
cmpsl
roll
mov
dec
xor
xorl
jg
mov
fimull
fcomp
push
test
out
jnp
sub
push
fcomps
push
and
imul
mov
test
xchg
mov
lds
notl
or
xor
mov
mov
jmp
hlt
jle
and
rcll
add
inc
mov
push
inc
pop
jae
sbb
jbe
outsl
mov
xchg
mov
mov
and
adc
pop
sbb
xchg
and
add
cmpsl
fcompl
arpl
int3
pop
cld
sub
nop
sub
push
int3
in
jp
imul
adc
sarb
push
test
xchg
repnz
stos
dec
fldcw
repz
insl
mov
lcall
fmul
daa
daa
mov
xchg
nop
adc
fs
push
jp
rcrb
push
pop
scas
repnz
loopne
adc
ficoml
push
ds
subb
xchg
mov
fisttps
and
mov
mov
es
mov
outsb
mov
mov
and
push
test
xchg
das
xchg
mov
mov
stos
repnz
in
cwtl
ltr
nop
pop
stos
in
push
push
or
mov
call
adc
nop
stc
lret
cwtl
add
in
pop
stos
inc
movsl
mov
mov
popf
or
rclb
roll
lds
or
cmp
popa
rcr
inc
repnz
xchg
mov
leave
mov
sbb
pop
rorb
lret
xor
push
sub
xchg
repnz
dec
adc
outsb
mov
and
outsl
pop
in
cmpb
test
ljmp
fwait
sbb
daa
xchg
in
jle
lahf
sbb
inc
rcl
mov
adc
mov
fwait
mov
clc
pushf
jae
outsl
pop
add
in
in
call
lahf
mov
in
pop
sub
xchg
insb
push
push
pop
aad
hlt
xchg
fisubrs
cmpl
ret
addr16
insb
js
jmp
outsb
xchg
adc
add
pop
clc
xlat
fiadds
jecxz
sbb
add
scas
fmuls
add
xchg
and
cmp
add
cmp
push
mov
sbb
sub
and
lock
lret
cmp
mov
pop
and
mov
mov
sti
lock
inc
movsb
fsubrs
push
inc
mov
add
adcl
test
fidivs
jno
aaa
in
sarl
dec
fwait
sbb
sub
pop
inc
adc
pop
push
add
repnz
xor
mov
push
cmp
popf
jne
lock
stc
in
lret
jno
adc
or
sbb
cmp
test
sti
or
popf
cmp
enter
sbbb
mov
into
ds
in
mov
lock
mov
nop
subb
sbb
push
bound
loop
mov
int3
adc
aam
inc
aam
and
rcll
inc
lahf
and
roll
and
or
test
add
pop
test
pushf
popa
push
adc
pop
pop
lret
inc
jns
add
push
xchg
pop
fidivrl
inc
mov
push
or
popf
shrb
lods
inc
aaa
sbb
pop
pop
into
shrl
sub
mov
push
inc
mov
inc
out
sub
int3
pop
fisubrs
mov
lds
outsb
cmp
push
sahf
out
xchg
sbb
scas
jle
jg
clc
push
pop
pop
jp
into
int3
fs
in
mov
or
jnp
pop
out
adc
adc
imul
mov
repnz
jnp
mov
test
stos
jp
leave
push
ret
dec
pop
stos
pop
add
dec
cmp
ljmp
and
sub
push
sub
push
cmp
mov
sahf
jmp
fistl
outsl
pop
sub
ret
hlt
stos
inc
or
enter
push
mov
pop
fiadds
mov
xlat
or
cli
cmp
dec
xor
dec
mov
out
and
aad
jge
and
repz
pop
pop
or
lcall
adc
sarb
lea
pop
out
mov
jmp
xchg
in
mov
push
pop
sbb
in
push
enter
adc
outsb
xlat
push
push
xor
popa
push
cmp
dec
sub
and
push
lret
decl
push
xchg
cli
and
rcrl
mov
gs
mov
dec
pop
rclb
repnz
mov
cli
jo
outsl
scas
dec
jle
add
push
lds
mov
xchg
jecxz
int
fsubl
movl
out
pop
cmpsb
bound
push
push
ret
fdivrl
and
adc
push
xchg
mov
xchg
je
sbb
mov
cmp
lret
js
fucom
repnz
push
mov
fidivs
jo
jle
loope
rcrb
fwait
or
rcrb
hlt
sbb
xchg
mov
sti
sub
loopne
mov
shll
inc
aas
inc
leave
xor
sub
xchg
cltd
js
out
in
aad
sbb
inc
inc
rorb
push
add
fcoms
mov
adc
push
hlt
lret
mov
jbe
xor
lret
mov
sub
aad
out
scas
adc
add
sub
fsts
insl
cmpl
or
dec
js
mov
sbb
daa
mov
daa
imul
xor
or
mov
pop
insl
repz
fcoms
or
lock
out
test
aas
ja
xchg
call
subb
dec
out
push
pop
pop
pushf
mov
mov
lock
and
rcl
push
inc
loope
out
or
adc
push
inc
test
push
insl
cmp
test
sbb
inc
fcompl
popa
xor
pop
xchg
out
adc
xchg
inc
in
mov
pop
out
add
cmp
push
mov
dec
jae
in
xchg
mov
ss
fistpl
orb
les
mov
in
cmp
mov
push
or
jle
mov
adc
mov
push
xchg
sub
push
or
addb
int
jne
sbb
arpl
rclb
popa
outsb
jge
gs
pop
jnp
lahf
fsubr
ja
ljmp
sub
dec
xchg
cmc
ret
movsl
cmp
ret
jecxz
sub
cld
mov
mov
mov
add
add
mov
pop
add
push
mov
jge
mov
pop
mov
gs
fbstp
xor
inc
ljmp
mov
sbb
sar
push
loope
or
xlat
push
mov
ljmp
pop
mov
repnz
jl
lcall
outsb
mov
ror
sahf
dec
in
adc
fdivrs
cmp
mov
cmp
pop
sti
xchg
setl
pop
lock
add
cmp
inc
xor
xabort
pop
stos
pop
and
inc
fnstsw
rcl
dec
mov
jge
cmc
aam
xchg
jo
xor
div
rcrb
xchg
popf
adc
push
jmp
cmpsl
ret
aas
mov
enter
jmp
lret
movsb
mov
scas
sub
add
shll
mov
mov
add
scas
aam
fsubr
jns
mov
dec
mov
cmc
inc
add
push
aad
mov
out
xchg
xchg
jl
adc
sti
mov
or
lods
push
cmpsb
lods
inc
movsb
mov
cmpl
xorl
leave
xor
and
add
mov
subb
daa
mov
push
clc
movsl
push
scas
lea
mov
jo
movsl
sbb
jle
pop
inc
sbb
cmpsb
mov
aaa
cmp
movsb
jecxz
xor
loop
addr16
je
cmp
ljmp
lods
sarb
test
call
scas
jnp
cmp
call
dec
ja
jmp
or
dec
add
mov
sub
xlat
pop
in
or
ret
int3
adc
adc
sub
push
sub
std
mov
push
cmp
fstpl
mov
fidivl
pop
push
cltd
adc
pop
gs
stos
push
loop
lock
jg
jle
int
fwait
imul
xor
ss
mov
xchg
push
test
mov
js
pop
les
lcall
adc
dec
in
xchg
inc
inc
jae
push
sti
faddl
mov
jecxz
stos
mov
loop
popf
adcl
ja
imull
cmpsl
stos
jae
es
xlat
aaa
es
and
insb
mov
push
ss
stos
or
adc
xchg
loop
mov
fcmovne
scas
sbb
mov
out
jae
add
stos
cmpsl
popa
arpl
mov
cmp
push
or
scas
xchg
inc
mov
sarl
xor
push
mov
cs
add
fcmovu
jp
fcmovbe
jle
sbb
pop
xor
popa
mov
shrb
test
inc
fnsave
mov
inc
leave
jb
call
mov
out
and
lds
imul
and
xchg
je
stos
push
fxch
inc
shrb
sbb
popa
xchg
shl
sub
dec
jg
fisubrs
mov
dec
push
cmp
cmp
pop
imul
cld
sbbl
call
adc
inc
jb
mov
jmp
inc
pop
sarb
aas
fimull
pop
imul
cs
repz
sti
dec
pop
loope
or
sbb
enter
enter
push
sbb
sti
movsb
aam
cmp
gs
inc
pop
ror
gs
inc
jg
fstps
push
add
fldl
dec
inc
mov
push
add
stos
and
popl
sti
xor
and
mov
test
cmpsl
sbb
and
cmp
lods
mov
repz
scas
mov
lahf
dec
cmpb
inc
int
or
jnp
xor
cmp
loope
lods
jns
loope
mov
mov
int
cmp
pop
repnz
mov
jae
scas
test
cmp
or
mov
sbb
or
or
jae
or
jb
data16
outsl
xor
jb
int3
mov
test
nop
adc
ja
dec
pop
pop
adc
ret
mov
add
int
iret
inc
sbb
lods
jl
nop
in
lahf
faddl
lods
jae
mov
mov
mov
pop
pop
push
stc
jl
aam
out
xchg
adc
imulb
lcall
mov
movsl
adc
or
push
or
insb
pop
inc
cmp
rclb
jnp
mov
xlat
fbstp
and
in
and
rclb
in
clc
lea
out
sub
in
repnz
sti
fidivrl
aad
xchg
les
outsb
call
insl
in
stc
loope
inc
out
fbld
push
out
clc
dec
push
push
or
or
push
sti
mov
mov
inc
daa
aam
hlt
mov
cltd
pop
xchg
imul
repnz
nop
cmp
and
sub
stc
lahf
data16
fnsave
sbb
adc
xor
cmpsb
iret
pop
jo
xor
adc
shll
leave
xchg
jbe
aad
flds
push
aad
cmpsl
cld
jecxz
pop
or
mov
mov
xlat
icebp
je
adc
mov
jmp
inc
or
fldl
sub
pop
xchg
mov
test
clc
xor
push
dec
and
int
sbb
and
lret
mov
jnp
jmp
cwtl
movsb
fwait
test
dec
dec
mov
push
gs
jecxz
sbb
pop
je
pop
cltd
mov
xor
lds
movsb
loopne
cld
shl
sub
cmc
xor
or
repz
pop
or
pop
and
pop
aaa
pushf
dec
frstor
xchg
mov
mov
idiv
jle
lds
repz
outsb
dec
int
cmp
arpl
mov
jnp
xchg
and
inc
jae
sti
jnp
rcl
pop
mov
call
dec
out
dec
movsl
mov
cld
cltd
jae
push
xchg
mov
repnz
jo
mov
jmp
push
fnsave
sub
out
xor
sbb
mov
push
pop
xor
inc
aam
sti
jle
int
cmp
in
mov
inc
push
push
scas
inc
add
mov
punpckldq
scas
icebp
inc
push
divb
mov
sbb
jmp
push
mov
test
push
movsb
cmp
sub
xchg
nop
mov
cmp
dec
out
or
xor
cmp
mov
je
push
cld
push
and
or
pusha
mov
mov
pop
xchg
cmp
sub
mov
mov
cmpsb
out
push
insb
pop
movsb
mov
sahf
jnp
jo
ljmp
dec
mov
mov
inc
xlat
pushw
sub
inc
imul
cmp
enter
jo
mov
or
push
outsb
rsm
movsl
aam
mov
push
test
cmc
mov
mov
jns
inc
push
sub
sbb
shlb
inc
cmp
loope
cmp
inc
shlb
or
pop
pop
push
cmp
lahf
fwait
out
xchg
jmp
pop
lea
cld
cmpb
push
in
mov
in
or
sub
aad
ljmp
cmpsb
scas
mov
cwtl
gs
xchg
xlat
xchg
in
sbb
dec
sbb
fsubs
sub
pop
xlat
xor
nop
push
stos
or
dec
xor
rcr
mov
sbb
loope
mov
insl
or
addr16
add
sbb
out
shl
mov
add
push
inc
test
sbb
add
cmpb
inc
repz
inc
sub
mov
push
inc
repnz
mov
cmp
icebp
xor
pop
push
subl
mov
mov
or
pop
sub
push
movsl
mov
out
or
push
fadd
test
insb
cmp
not
shll
repnz
movsl
loope
jle
aam
cmp
cmp
stos
aaa
adc
lock
cld
pop
mov
or
out
in
inc
mov
stos
inc
mov
fstpt
sub
imul
loope
dec
adc
sub
jle
sub
xor
leave
stos
push
inc
dec
nop
arpl
mov
cmp
xchg
mov
mov
call
shrd
pop
cmpb
imul
and
cmpsb
mov
out
or
incl
sbb
dec
pop
sbb
andnps
jbe
mov
sbb
cmpsl
imul
sbb
sub
sarb
or
dec
and
mov
rcll
cwtl
adc
cmp
call
mov
inc
rcrl
mov
scas
adc
test
out
roll
lods
push
pop
jno
ret
test
clc
fcmovb
imul
xor
data16
jecxz
dec
movups
mov
fstl
sub
pop
xor
scas
mov
adc
sbb
lock
int
aaa
stos
sti
stos
cmp
pop
bound
clc
xchg
cmp
das
jbe
sti
cmp
nop
jg
stc
cmp
insl
shll
negb
lret
mov
mov
cmp
cs
cwtl
and
and
fs
sub
ljmp
or
nop
and
xlat
add
xchg
repnz
in
xchg
xor
mov
fbld
xor
mov
scas
loop
insl
push
movsl
jp
sbb
xchg
add
jg
test
jne
xor
mov
or
dec
jne
andl
inc
scas
test
les
lret
push
mov
push
dec
inc
je
out
je
lret
mov
lret
or
out
push
pop
lods
sbb
push
and
or
sub
add
imul
sbb
mov
test
pop
jle
jmp
adc
sub
insb
mov
adc
mov
push
cmp
cli
sbb
repnz
ja
fdivrl
sar
mov
dec
and
das
ss
mov
sub
inc
aaa
test
popf
icebp
xor
or
inc
fsubr
and
push
cs
imul
lcall
sub
pop
gs
andb
cmp
sti
or
pop
inc
lds
ljmp
mov
out
mov
mov
add
mov
fisubrs
popf
sbb
mov
icebp
mov
pop
and
adc
mov
icebp
repnz
push
mov
stos
mov
xor
sbb
loope
fists
cwtl
mov
sbb
pop
in
pushf
adc
lret
cmp
lods
icebp
mov
mov
pop
sub
sub
insl
sub
adc
xorl
mov
arpl
ljmp
xchg
xchg
adc
repz
fwait
popa
mov
push
scas
shlb
inc
dec
sub
outsl
dec
jg
or
int3
enter
jp
mov
mov
fidivrs
dec
xchg
std
pop
insb
xchg
push
or
xchg
cltd
cmc
outsb
insl
mov
pop
inc
lods
cmp
lods
dec
jb
aam
ss
xchg
push
adc
jno
fsubrs
out
and
adc
addl
lcall
mov
mov
mov
lods
sbb
mov
mov
push
mov
cld
aas
arpl
mov
das
sub
push
xor
rcl
sbb
dec
sub
cmp
cld
dec
loop
xchg
loopne
pop
es
and
jle
das
sbb
mov
ss
sbb
sbb
aas
jmp
ja
dec
dec
cmpb
mov
test
xchg
push
ret
test
pop
xchg
xchg
adc
xlat
std
and
movsb
inc
das
mov
push
jmp
shll
dec
std
mov
rorl
aam
mov
in
aas
pop
push
inc
popf
add
dec
loope
pop
jl
and
mov
call
sub
pop
es
pop
mov
out
lods
adc
divl
push
add
jle
mov
int
mov
lods
icebp
xchg
mov
adc
mov
xor
loop
xlat
jmp
daa
dec
cmp
cmp
pop
or
mov
lahf
mov
sub
cmp
iret
outsb
cmp
xor
jb
push
cmp
and
sti
cmp
jnp
mov
fisubs
mov
sbb
jmp
cmp
std
cmp
mov
xchg
jp
or
std
in
shrb
repnz
xchg
sahf
fstp
test
add
arpl
adcb
lret
data16
sbb
js
mov
pop
out
iret
mov
mov
pushf
push
in
xor
sahf
call
aam
setnp
xor
inc
stos
push
rcll
sbb
xor
xorl
push
fidivl
pop
repnz
push
pop
adc
ss
stos
adc
les
add
repz
cmc
movsl
jecxz
fadds
pop
mov
subb
lea
cmp
adc
cmc
iret
and
movsb
sbb
push
push
inc
vmcall
icebp
lret
cmp
mov
ja
mov
mov
mov
scas
cmp
test
xchg
dec
imul
sar
rol
repz
mov
scas
cwtl
cmc
popf
push
lods
mov
in
sbb
cmovp
cs
aam
cmp
sbb
lods
aas
sub
and
mov
enter
lock
fisttpll
or
adc
mov
gs
arpl
cmp
and
cs
inc
push
data16
test
testb
dec
mov
jb
push
ljmp
stos
mov
fwait
jmp
jp
add
xor
subl
sbb
jns
inc
push
mov
mov
pusha
pop
rolb
push
xchg
call
loopne
stos
shl
js
inc
int3
je
xchg
dec
mov
hlt
imul
ds
repnz
push
ja
jg
inc
addl
insb
outsb
dec
xchg
mov
nop
negb
shl
rolb
bound
sbb
mov
mov
call
add
pop
and
fmulp
jmp
fnstenv
pop
ss
lret
xchg
sahf
clc
and
add
dec
jnp
pop
xchg
arpl
jnp
nop
lcall
outsb
out
imul
addb
popf
pop
adc
sbb
mov
lods
popf
enter
scas
pushf
push
mov
push
mov
dec
mov
fnstsw
push
dec
fnstcw
jno
lock
subb
jg
xchg
fstl
pop
inc
mov
jg
xchg
aaa
cld
leave
test
jp
sub
xchg
xchg
mov
push
mov
mov
or
outsb
lret
sbb
and
add
inc
jns
jle
das
ss
dec
jle
dec
insl
fs
push
test
push
xchg
pushf
rcll
pushf
xlat
add
into
jnp
xor
in
jmp
pop
xor
inc
push
aas
add
mov
push
test
adc
and
push
ljmp
icebp
jl
jo
xchg
mov
and
aam
push
push
int
xor
adc
mov
push
lret
mov
loopne
sub
jb
xor
xor
iret
bound
vpackssdw
or
ret
icebp
stos
and
fdivp
scas
test
dec
bound
pop
mov
adc
imul
mov
popf
mov
mov
adc
cmc
adc
mov
imul
cmp
pop
pop
gs
pop
scas
jecxz,pn
lods
dec
std
lock
sbb
xor
xchg
into
sbb
pop
data16
adc
xlat
mov
out
dec
lods
jnp
testl
add
mov
xlat
xchg
push
cltd
loope
shr
sbb
jg
fsubl
jp
lds
aaa
jbe
mov
or
stos
shll
sbb
dec
imul
outsb
or
mov
cmp
popa
imul
jg
sarl
mov
bound
inc
sub
ret
int
fcoml
dec
sbb
sarb
sub
dec
push
dec
push
test
fcmovbe
dec
outsb
psrlq
ja
xlat
lds
scas
clc
adc
in
gs
lea
pop
out
sub
into
dec
push
scas
push
xor
bound
inc
repnz
lahf
add
js
push
push
adc
pushf
adc
cwtl
in
lock
jnp
stc
pop
mov
insb
aad
pop
das
in
sub
xchg
inc
stc
sub
call
mov
arpl
inc
das
cwtl
sbb
adc
xchg
out
pusha
mov
push
mov
in
cmp
add
in
mov
lret
out
shll
push
in
xor
adc
stos
xchg
mov
into
pop
cmc
pop
addb
sbb
xchg
mov
jle
arpl
rcl
jo
mov
lods
mov
sub
add
jbe
and
arpl
cs
in
hlt
jnp
sarb
dec
out
lock
pop
mov
subl
dec
cmp
xchg
cmpl
dec
and
cwtl
icebp
nop
xlat
mov
into
inc
sbb
xchg
out
popa
and
mov
inc
mov
jge
scas
xor
aas
fldcw
or
ficoms
and
inc
lret
sbb
pop
ror
movsb
pop
add
lea
push
inc
and
xor
subl
push
fldcw
add
mov
imul
imul
aad
sbb
pop
xchg
adc
leave
sbb
jl
sbb
sarl
inc
mov
fs
pop
mov
dec
or
adc
pop
mov
out
xor
ret
pop
shlb
fucomip
push
adc
shlb
mov
sahf
adc
cmp
aam
rclb
jl
ja
pop
pop
mov
lret
xlat
jle
jl
inc
negl
hlt
cwtl
sub
sbb
push
lret
dec
fld1
add
std
idivl
sbb
cmp
mov
sub
and
cmpsl
xchg
dec
jp
loop
dec
test
mov
cmc
add
sbb
stc
mov
mov
xchg
jg
loope
repz
cmp
mov
sahf
test
pop
sbb
mov
js
pop
int3
jge
pusha
aam
int
sar
jl
push
sbb
ljmp
add
mov
and
inc
pushaw
fmuls
repz
and
repz
push
das
push
mov
movb
inc
inc
fstpt
or
pop
pop
hlt
adc
dec
jne
mov
negl
xor
repz
xchg
adc
mov
ljmp
add
aas
sub
rcrl
cmp
ljmp
cmp
jle
jae
xchg
add
icebp
popf
sub
stc
pushf
mov
les
fsubp
lods
push
mov
dec
sub
cmp
sarl
loopne
dec
xchg
add
test
xor
movsb
test
insb
cmp
adc
sub
ss
add
add
lea
movsb
xchg
dec
pop
fisttps
ja
pop
fcompl
push
mov
clc
push
inc
adc
mov
sbb
lods
push
xor
js
leave
jle
sub
mov
lcall
push
inc
in
push
aad
mov
or
test
cmpsl
fstpl
imul
pop
and
test
and
xchg
js
dec
sbb
fisttpl
xchg
jmp
sbb
jecxz
out
push
loope
or
pop
sbb
ljmp
mov
dec
fistl
push
loopne
mov
pop
and
mov
add
daa
ret
mov
fwait
mov
je
stos
test
sub
data16
hlt
fldenv
pushf
flds
inc
push
mov
call
xchg
cmp
fwait
mov
fwait
scas
adc
in
inc
xor
std
pop
cmp
cmp
loopne
in
cmp
scas
test
repz
insl
mov
sub
cmpb
gs
pop
ret
mov
insl
push
repnz
mov
sbb
jno
sub
fstps
or
xor
lea
test
and
xchg
or
iret
xlat
cli
inc
mov
sbb
sub
imul
pop
in
add
repnz
iret
and
out
sub
in
popa
mov
shll
aam
dec
int
ficoms
ds
push
mov
fwait
add
lea
add
or
stos
adc
or
enter
stos
mov
pushf
lea
jnp
mov
dec
hlt
ja
mov
lea
adc
lret
mov
push
in
add
call
movsb
into
adc
pop
xlat
andb
loopne
bound
shl
in
iret
out
mov
add
push
data16
add
xor
aaa
aaa
es
sahf
in
xor
add
mov
mov
xchg
and
and
shlb
incl
dec
or
adc
shl
lds
cmp
push
dec
pop
js
cmp
loopne
test
push
mov
xchg
jle
in
cld
mov
aam
enter
and
push
jg
xor
scas
add
xchg
enter
sub
dec
arpl
push
jno
push
cmc
pop
sahf
movsl
pop
sbb
or
push
daa
rorl
pop
xchg
call
adc
cmp
xchg
inc
rcl
lods
ds
stos
aaa
sub
pop
shlb
add
mov
push
xor
pop
xor
jbe
shlb
or
push
dec
cld
mov
push
in
rcr
rcll
mov
and
xchg
arpl
or
pop
ljmp
mov
lret
repnz
mov
outsl
test
je
int
into
daa
jge
xor
lea
pop
dec
jg
cmp
shlb
outsl
int3
adc
adc
js
lcall
icebp
enter
inc
mov
mov
lahf
lret
or
je
xor
push
sub
push
orl
push
dec
int
outsb
cmp
mov
je
sbb
push
cmpsb
pop
ficompl
or
cld
sahf
or
dec
subl
lods
mov
pop
mov
mov
jb
adc
je
mov
sub
jne
xchg
cmpl
fwait
stc
or
and
insl
aam
and
mov
add
arpl
mov
movsb
jg
sbb
loope
or
jns
into
out
cmpsl
das
mov
add
xchg
xor
dec
xchg
andl
int3
sbb
mov
sub
sub
mov
jno
jno
mov
addr16
inc
push
imul
mov
xchg
pop
stc
adc
clc
push
rcrl
inc
xor
fnstenv
xor
fsubrs
test
xor
jmp
stc
int
test
sbb
xor
push
sahf
out
fidivrl
cltd
jecxz
or
cmpsb
push
add
imul
jmp
push
outsl
sbb
pop
or
cltd
adc
sbb
inc
xor
add
lret
jno
imul
push
mov
add
add
and
test
std
adc
into
scas
aad
fbstp
cmp
cmp
out
div
jl
mov
movsl
mov
arpl
add
addr16
xchg
adc
prefetch
fwait
test
or
popf
mov
inc
xor
inc
ret
dec
ret
lret
and
cmpsl
jecxz
mov
sbb
ljmp
sbb
jb
mov
imul
dec
popa
mov
out
mov
sub
imul
test
pop
js
or
and
aam
mov
jp
add
adc
and
cwtl
fcom
loope
xchg
mov
ret
fisttpl
push
mov
leave
add
mov
out
sbb
pop
loopne
lods
jb
jmp
inc
xor
sti
dec
inc
inc
sub
xlat
rcrl
sub
nop
popf
data16
mov
sbb
mov
sarl
das
jmp
fdivrs
push
mov
out
mov
xor
arpl
outsb
fwait
xor
lret
lahf
ljmp
jl
movsl
mov
pusha
mov
xorb
scas
lock
inc
call
add
data16
mov
stc
adc
jno
frstor
sub
adcb
leave
lret
mov
cs
ret
push
sbb
mov
mov
shll
gs
jl
xor
xor
int3
aas
cltd
aas
lods
lods
cmp
mov
mov
and
add
movsl
fnstsw
push
ja
jbe
xor
repz
inc
inc
push
inc
out
loopne
jle
mov
out
aam
popa
push
push
shlb
mov
jns
or
jne
xchg
lret
dec
sahf
insb
es
cmpsl
mov
test
lods
movsl
fisttpll
xchg
popa
out
pop
flds
push
or
shrb
cmpsl
xchg
jo
xchg
mov
vaddps
dec
dec
pop
es
jns
ljmp
and
jnp
mov
ja
enter
daa
push
push
mov
jle
cmpsl
mov
and
pop
inc
lret
scas
sahf
fidivl
popf
cmp
cmp
stc
cwtl
sbb
enter
mov
sub
jecxz
int
fcmovnu
or
dec
movsb
pop
mov
sbb
std
loopne
insl
adc
inc
pusha
adc
jb
xchg
sub
inc
cmp
cmc
push
fcoml
mov
daa
pop
dec
mov
jbe
mov
dec
sub
mov
in
incl
push
cmp
or
ficompl
mov
jo
ds
push
or
sbb
lds
daa
repz
jbe
jmp
call
and
les
or
or
mov
mov
aas
cs
adcb
dec
push
pop
imul
mov
lods
jno
add
aas
dec
mov
cmpb
in
inc
addr16
mov
xchg
andb
pop
sti
dec
data16
testl
mov
cwtl
adc
push
jle
mov
push
xchg
movsl
leave
enter
aaa
mov
inc
sub
and
jp
xchg
xchg
sahf
mov
test
test
lods
adc
sbb
lock
out
sar
xchg
dec
push
ret
sbb
pop
jp
loope
push
sub
add
and
in
mov
add
enter
push
lcall
inc
sbb
je
xchg
mov
lcall
or
inc
or
jge
js
cltd
ret
xor
ficomps
cltd
dec
adc
push
xchg
negb
inc
ljmp
jg
lcall
bound
fnstsw
xchg
inc
jmp
decb
jae
jmp
jmp
xchg
cmpsb
or
jbe
push
cpuid
dec
adc
rorl
sub
add
dec
mov
mov
push
or
sub
lea
cmp
xor
loopne
cs
insl
test
adc
mov
out
in
dec
add
fisttps
das
pop
mov
sub
dec
ljmp
adc
push
in
rcrl
or
cmp
mov
and
cltd
insb
inc
adc
push
mov
aas
sbb
mov
dec
add
iret
cli
icebp
xchg
arpl
xor
push
pop
shrl
sbb
sbb
mov
in
fmuls
xor
movsl
mov
les
ret
leave
inc
pop
out
push
and
scas
data16
and
sub
movsl
pop
push
sub
js
mov
pop
fildll
cmp
jns
iret
jne
leave
inc
pop
add
mov
fmul
jmp
xchg
shlb
sub
add
and
dec
cmp
cltd
in
enter
cmc
cmp
mov
in
pop
out
sub
popl
jne
xchg
xchg
dec
adc
cltd
int
cmp
xchg
ds
lahf
cmp
pop
push
cmp
outsb
sbb
jbe
mov
loope
jmp
jb
sbb
xorb
loope
lret
roll
jecxz
clc
std
insl
inc
loopne
add
lock
in
stos
scas
mov
jecxz
iret
adc
pop
das
lcall
xchg
mov
out
sub
dec
lock
out
push
insb
mov
rcrl
mov
test
cmp
pop
addl
mov
sbb
outsb
movl
les
mov
cs
pop
pop
mov
mov
or
cwtl
mov
mov
fildl
adc
ja
sub
iret
pop
test
cmp
bound
js
lods
sbbl
pop
sarl
sbb
sbb
jae
clc
das
sbb
pop
xor
ss
clc
mov
in
push
add
and
mov
dec
pop
mov
js
and
js
push
int3
fstpl
iret
test
pop
movmskps
rcr
sbb
push
adc
pop
hlt
pop
or
loop
mov
xor
pop
stos
jne
jno
hlt
xor
cmpsl
les
stos
sbb
jno
adc
mov
xchg
push
ret
in
mov
mov
add
mov
jmp
add
popa
jnp
leave
sub
pop
movsl
push
js
xchg
pop
mov
andb
pop
mov
test
mov
insb
out
test
out
xchg
lds
push
ja
ret
ja
es
in
add
jp
jmp
nop
cwtl
mov
incl
mov
dec
fisttpl
pop
cmp
sti
cltd
add
fstl
adc
fdivr
xlat
mov
cltd
xchg
sbb
cs
imul
das
jle
das
mov
fwait
lcall
das
aas
lcall
out
xor
push
jle
ret
insb
das
iret
add
fnstenv
pop
push
nop
cli
pusha
push
test
sahf
mov
and
dec
cmp
xchg
popa
xchg
lret
xchg
mov
jmp
mov
das
add
leave
loopne
imul
pop
fistpll
mov
ljmp
jp
into
test
mov
xchg
enter
and
daa
dec
add
add
mov
mov
inc
imul
hlt
or
out
nop
lea
jns
mov
mov
xchg
mov
enter
push
sahf
sub
testl
andb
popa
xor
cmp
xchg
or
hlt
jne
cmp
out
mov
or
mov
inc
stc
inc
mov
and
pushf
inc
les
mov
xor
or
into
inc
or
adc
test
cs
jl
inc
sbb
leave
mov
and
and
push
mov
mov
into
mov
mov
xor
fisttpll
imul
das
into
mov
in
sti
gs
lds
pop
test
cli
mov
lods
inc
mov
sar
pushf
xchg
or
popa
lcall
lret
test
rolb
push
xor
dec
sub
and
inc
clc
sbbl
lret
xor
jae
repnz
push
stos
ficomps
bound
test
jae
jp
pop
xorb
mov
dec
pop
clc
inc
inc
test
shlb
jge
mov
push
lea
repz
sub
push
lcall
sti
mov
in
cli
mov
push
lods
ret
imul
js
jmp
push
scas
rcrl
rorb
aam
mov
imul
std
adc
test
sbb
lcall
ret
outsl
cwtl
or
xchg
outsb
test
cmp
mov
shll
push
repnz
pushf
lcall
ficompl
flds
in
pop
aam
sub
adc
stos
int3
jno
flds
adc
xor
aam
test
ds
cli
pop
lea
sahf
xchg
mov
cli
cmp
scas
pushf
inc
mov
cmp
clc
outsl
mov
jno
scas
pop
pop
pop
xchg
in
add
mov
shlb
mov
inc
pop
inc
std
sbb
pop
popf
or
iret
ja
add
lret
sbb
push
outsl
push
mov
mov
push
cmp
mov
jns
loope
lret
cmp
mov
jo,pt
xchg
lods
es
andb
sub
add
or
push
mov
aad
mov
push
mov
jle
xor
outsb
fucomi
stos
jbe
mov
out
adc
lcall
sub
in
pop
push
xchg
outsl
adc
mov
outsl
mov
and
sub
lds
js
shl
std
mov
jo
mov
call
push
cmpsb
xor
sub
outsl
dec
sbb
sbb
pop
cwtl
push
xor
lods
je
push
aad
and
aam
jp
out
mov
jge
push
mov
lret
sub
jecxz
mov
push
call
mov
xchg
leave
rorl
aaa
xchg
pop
repz
xor
xchg
dec
and
arpl
sbb
push
or
insl
add
ds
add
rclb
int3
rdpmc
sub
push
push
loope
push
aad
pop
outsl
lods
mov
jo
inc
adc
rcll
cwtl
jle
dec
and
or
out
mov
jg
cmpsl
in
mov
push
sbb
mov
mov
jb
sub
movsb
mov
inc
stc
sbb
sbb
xchg
lock
xor
mov
fcomps
xchg
xor
mov
inc
ss
fisttps
stos
ret
sbb
cmp
sti
scas
fs
test
mov
or
mov
add
adc
and
jg
xor
and
push
insb
add
push
xchg
dec
and
push
pusha
sub
mov
jae
pop
sub
test
pop
stos
rol
in
popa
jle
xchg
cmpsl
mov
lahf
push
push
lock
popf
mov
push
testb
neg
mov
ja
loope
movsl
mov
pop
mov
imul
jecxz
out
leave
xchg
xchg
lods
out
in
sub
orl
mov
mov
insl
loopne
gs
mov
orl
inc
subps
cli
sub
sub
fsubrs
loop
or
cmp
jge
mov
sub
push
lcall
insb
sarl
in
repz
clc
mov
ficoml
paddusb
xor
pop
lock
icebp
ret
add
xor
xor
mov
xchg
cmp
int3
mov
inc
rcrb
mov
add
sbb
jg
sub
out
or
cld
jmp
lds
out
xchg
sahf
dec
test
adc
fcoml
xchg
in
sub
cs
cwtl
inc
inc
das
int3
cmp
loope
cmp
jbe
stos
and
jo
add
or
push
test
and
daa
xor
sub
aad
clc
adc
rcll
test
scas
cmp
nop
enter
push
pop
mul
clc
das
cltd
mov
dec
xchg
adc
lret
or
fildll
sub
lods
shll
jbe
cmpsb
lret
sbb
mov
in
mov
adc
int3
ss
test
std
xchg
loope
mov
cmp
pop
pop
int
xor
imul
and
inc
sbb
jmp
enter
jmp
or
sahf
shlb
xor
xorb
adc
xchg
jne
fiaddl
or
xchg
push
stos
hlt
popa
jo
mov
xor
jp
daa
fmul
jecxz
push
js
sbb
mov
in
push
sub
pop
cmpsb
call
nop
push
mov
int
stos
daa
lock
jno
jno
xchg
mov
scas
pop
mov
sbb
cmpl
test
xchg
jecxz
inc
sbb
xor
mov
mov
sub
movsl
je
out
push
and
loop
scas
cmp
popf
cli
jmp
pop
sbb
ret
shrl
push
sbb
ljmp
outsb
insb
inc
xchg
sub
jb
lock
xchg
jbe
jnp
xchg
pusha
andps
mov
stos
into
aas
or
mov
cwtl
daa
mov
fidivl
jle
mov
std
pop
xchg
mov
stc
repz
push
sub
insb
sub
pop
lret
jge
test
stos
mov
sbbb
and
sub
jnp
scas
mov
jnp
or
sahf
int
stos
outsb
adc
push
mov
xchg
jns
lock
dec
lds
pop
adc
push
xor
jmp
pusha
jl
test
sub
dec
mov
dec
pop
sbb
inc
rolb
add
fadds
fwait
outsb
loopne
mov
xchg
jae
xchg
in
xchg
in
fildl
xor
pop
xor
lahf
xchg
hlt
movsb
xchg
jle
cmp
xchg
dec
movsl
mov
jecxz
out
arpl
pop
aam
xor
or
jbe
fsub
int
test
aad
fidivs
int3
cltd
xchg
xchg
cmpsb
rorl
shlb
and
add
das
repz
or
das
mov
cmp
aaa
jbe
sbb
cli
flds
add
pusha
pop
or
in
arpl
scas
jle
jae
pop
out
push
fwait
lret
inc
mov
decl
outsb
xchg
testb
or
xchg
mov
gs
adc
push
sahf
jno
jnp
mov
mov
lds
xchg
mov
inc
filds
ret
ret
jns
push
data16
ret
iret
sub
mov
les
sub
xchg
push
popa
test
add
cmp
in
sub
mov
testb
stos
addr16
fs
iret
lahf
mov
cmp
outsl
add
out
cmp
aam
shrl
sub
test
xchg
stos
push
lea
mov
scas
fwait
jmp
leave
inc
lret
mov
pop
push
mov
mov
or
cmpsl
ret
andl
in
movsb
repnz
pop
mov
or
divl
inc
es
mov
cltd
mov
xchg
mov
dec
mov
sbb
lods
push
mov
adc
mov
popa
push
orb
xchg
sbb
xor
xor
mov
push
popf
pop
clc
mov
inc
push
jae
ss
pop
mov
jo
push
xor
cmp
lret
out
inc
dec
adc
push
dec
pushf
scas
divl
jno
outsl
inc
loopne
mov
fstpt
in
rcr
lods
pop
stos
addr16
xchg
scas
insl
xor
push
sbb
enter
jge
stc
mov
shll
test
cmpsb
sub
lcall
and
inc
cmp
pop
jp
test
decl
in
sub
fwait
int
incb
or
pop
cmpsb
adc
mov
mov
push
cmp
inc
pop
adc
xor
xchg
mov
test
jge
mov
pop
mov
jne
sbb
loopne
pop
repz
xor
iret
ret
scas
movsb
je
out
dec
xor
jnp
lea
call
addl
sub
xor
hlt
mov
cmpsb
xchg
and
inc
int
sbbl
ret
sub
filds
push
notl
add
or
jns
mov
or
pop
scas
pop
in
scas
ja
mov
add
add
insb
ret
xchg
lret
adc
stos
mov
pusha
mov
idivb
iret
jmp
pop
jecxz
imull
aam
jbe
dec
popa
call
lahf
xor
push
stc
rol
aaa
fmull
pushf
mov
push
inc
dec
xor
dec
in
cmc
xlat
pop
out
in
les
arpl
mov
sub
cld
ds
jns
adc
imul
mov
xchg
mov
inc
out
cs
mov
adc
test
cmpsl
call
push
aas
cmc
mov
adc
sub
xor
push
stos
xchg
aas
aad
mov
jo
lcall
imul
sbb
jno,pt
ret
mov
or
es
xor
xor
jp
xlat
aas
dec
shrb
rcrl
push
pop
clc
cli
sub
mov
pushf
fmull
pushf
push
jnp
push
mov
inc
push
int
xor
mov
sbb
pop
stos
fcomps
pop
fisubrs
xchg
mull
jecxz
adc
repnz
test
jnp
shl
pop
xchg
ljmp
sbb
in
and
xor
dec
unpckhps
loope
push
and
cmp
dec
lods
xchg
mov
mov
cmpsl
outsb
jmp
es
imul
xchg
sbb
xor
and
inc
cmp
jbe
mull
cltd
mov
pop
ret
repz
in
call
cmp
xlat
aad
mov
inc
inc
sub
fbld
aas
or
dec
add
cmc
pushf
js
fsubrs
add
mov
lret
pop
test
out
mov
flds
push
adc
mov
sbb
mov
addr16
ja
out
xor
call
mov
aas
outsl
mov
mov
ret
xor
pusha
pop
icebp
mov
or
leave
adc
stos
mov
ret
mov
lods
jp
or
xor
repnz
inc
lret
imul
outsb
inc
push
mov
stos
inc
adc
cmc
jne
dec
pop
stos
pop
ja
nop
aaa
cmc
xchg
mov
lea
or
inc
sub
lcall
fcmovb
or
das
lock
jge
dec
sbb
int
cmp
pop
scas
jne
out
xor
enter
lcall
sarb
int3
test
pushf
ret
inc
jo
les
mov
lea
inc
pop
inc
loopne
lret
or
xchg
mov
adc
jle
test
push
dec
mov
mov
xchg
mov
out
ror
adc
sbb
mov
jp
sbb
xchg
mov
inc
stc
fldl2e
jmp
int3
xchg
div
idivl
add
mov
shrl
adc
test
outsb
mov
lods
pop
clc
sahf
inc
cwtl
and
or
mov
imul
enter
das
mov
fstl
and
fisubs
xchg
loopne
cs
fiaddl
pushf
inc
mov
test
idiv
stos
and
pop
pushf
push
pop
xor
mov
xchg
popf
cmp
mov
dec
add
ret
sub
lret
lret
imul
imul
addr16
jl
gs
rcr
test
push
add
out
stos
out
pop
in
mov
dec
stos
jecxz
inc
outsl
fidivrs
stos
sbb
mov
mov
scas
jg
or
in
enter
enter
ja
xor
dec
nop
pop
xchg
mov
mov
je
cld
inc
out
mov
shrl
jg
pushf
aas
lods
mov
push
movsl
fidivl
imul
or
ds
dec
and
mov
dec
cmp
movb
leave
push
sarb
rclb
idivb
mov
xor
loop
in
js
std
and
sub
jl
pop
jecxz
ds
xchg
rorb
mov
mov
leave
in
cmp
add
adc
pop
mov
add
xchg
adc
mov
mov
cs
mov
das
cmp
test
cmc
shl
push
or
je
fsubs
lcall
or
and
stos
fisubl
push
mov
test
ss
stc
jle
mov
or
pop
fnstcw
sarb
fwait
repnz
cwtl
dec
dec
icebp
test
and
loope
cmp
xchg
mul
mov
and
lock
dec
lods
mov
xchg
imull
lods
dec
sub
shr
inc
cmpsb
xchg
dec
incb
cltd
insl
mov
cmpsb
adc
insb
xchg
fwait
aad
inc
fsubrs
test
xor
push
bnd
jbe
daa
jns
pushf
arpl
cli
incb
outsb
mov
rcl
inc
adc
mov
mov
sub
and
push
sti
xadd
filds
cwtl
ret
adc
inc
add
xor
mov
mov
mov
cli
jp
aaa
mov
stos
and
pop
mov
mov
sub
aam
xchg
add
cmc
inc
push
pusha
int3
ss
push
cmp
cmp
xor
js
inc
jl
jmp
xchg
fmulp
popa
add
mov
mov
fisttpl
pop
jns
adc
daa
push
xchg
stos
adc
cmp
int3
jl
aad
roll
mov
divb
hlt
sub
stos
push
dec
fnstenv
shl
xor
xchg
push
mov
adc
mov
mulb
inc
push
test
pop
and
or
shlb
or
fbld
hlt
jle
inc
push
test
inc
lahf
mov
xor
jmp
scas
jne
xchg
pop
stc
outsb
cmp
inc
rolb
jb
or
mov
shll
or
push
fldcw
outsl
mov
out
mov
dec
cwtl
inc
or
xchg
and
or
push
mov
es
dec
mov
outsb
inc
scas
xchg
and
mov
mov
xor
mov
cltd
out
pop
sub
clc
jnp
xor
in
jno
rcrb
testl
xor
and
cli
push
fwait
xchg
xor
leave
lods
addr16
test
aaa
shlb
cmp
mov
xchg
pop
mov
in
push
shr
pop
adc
sbb
insl
sub
xchg
fisubs
xchg
imul
fisttpll
or
pusha
loop
sahf
mov
mov
pushl
mov
adc
jbe
outsb
mov
ljmp
lds
aad
gs
mov
inc
cmc
add
sti
jecxz
lods
xchg
and
xor
add
inc
inc
out
mov
in
sub
lods
lock
inc
std
jl
sbb
movsl
cmpsb
ret
fyl2x
xor
inc
fstl
push
inc
push
stc
pusha
enter
push
std
inc
int3
fldl
inc
jecxz
push
push
out
mov
mov
sub
std
jmp
sub
or
push
jbe
xchg
and
shlb
sub
push
outsb
and
aaa
sub
arpl
std
stc
add
insl
insl
mov
and
pusha
and
pop
xchg
adc
pop
fistps
int
int
mov
pop
ss
out
shl
adc
inc
fists
enter
xor
inc
add
icebp
mov
lahf
outsl
ret
test
sbb
out
inc
mov
ds
jno
lods
xchg
jl
movsb
mov
scas
push
leave
push
iret
xchg
rcrb
aaa
pusha
pop
cld
int
loop
dec
iret
push
rolb
mov
xor
pop
pop
ja
lods
jne
add
inc
es
jb
xor
xchg
or
arpl
mov
xor
inc
movsb
dec
imul
cld
mov
inc
jge
inc
out
rcrl
or
lret
pop
in
push
inc
xor
sub
push
ret
xorb
ret
in
push
jg
hlt
mov
cmp
adc
loop
push
and
fisttpl
push
subl
popf
mov
mov
int
rorl
mov
int
lret
push
sbb
inc
das
inc
stos
iret
push
insb
aas
jl
dec
adc
jno
pop
pusha
fidivl
movsl
repz
add
sbb
add
insl
bound
js
xor
daa
sub
push
xor
fists
iret
insl
xor
shl
xchg
mov
pop
adc
mov
dec
mov
data16
cmpl
fistpl
inc
ret
jno
idiv
sub
lret
shl
cwtl
and
xlat
in
xorb
mov
jno
aad
pop
cli
lds
sub
cmc
addr16
mov
mov
mov
sbb
adc
push
popf
xchg
cmc
cmp
sahf
sbb
imul
sbb
pop
fidivs
pop
push
movsb
out
jp
orb
fnstsw
adc
lods
lea
bound
inc
cs
mov
xor
loop
in
push
popf
sub
and
pop
push
insl
cltd
sbb
testl
xchg
test
rcll
leave
mov
pop
int
sahf
adc
adc
jmp
aad
iret
mov
cmc
aaa
int
xor
mov
add
add
mov
fwait
xorl
push
jg
gs
cmp
inc
pop
pop
lcall
cmp
sti
add
mov
mov
fimuls
pop
pop
jecxz
nop
test
xor
leave
mov
notb
sarl
js
mov
jno
loope
xchg
movsl
and
push
mov
jmp
mov
xchg
fiaddl
adc
mov
ficomps
fcmovnbe
andb
and
inc
dec
call
scas
cmc
in
jbe
sbb
out
pop
fstps
mov
movsb
ret
sbb
jg
push
js
cmp
loope
punpckhwd
or
mov
aas
rclb
mov
movsl
push
and
test
cli
xor
sub
fnstsw
cmp
sti
add
add
fiadds
mov
or
jo,pt
test
mov
in
mov
hlt
dec
xorl
xchg
daa
es
insb
jno
int
dec
cli
ss
popf
and
xchg
test
push
pop
ja
pop
les
lahf
addr16
in
stos
inc
jb
jge
add
leave
daa
jmp
sub
pop
es
out
dec
sbb
sbb
and
pop
and
xchg
mov
xor
xchg
add
add
aam
mov
sar
lret
imul
sti
sbb
inc
adc
ret
ret
sub
jno
cmp
lods
cmp
hlt
xchg
mov
jne
push
jmp
pop
cs
leave
mov
mov
add
xor
cmp
pop
ret
or
push
dec
test
or
mov
repnz
push
iret
sahf
pushf
push
scas
xchg
movsb
std
or
mov
cmpsl
xchg
cmpb
fwait
stos
divl
mov
pop
mov
cmp
ljmp
jg
cmovae
inc
ss
xor
and
lahf
ds
jecxz
aad
xchg
cmp
pop
mov
push
insb
jne
push
fdivs
in
sbb
jno
repnz
and
pop
mov
xchg
sbb
lea
pop
mov
pop
add
and
jmp
jne
jnp
pop
and
xchg
ss
aaa
pusha
sahf
mov
int
pop
lret
ret
out
xor
or
sahf
inc
fnstsw
mov
mov
pop
pop
mov
adc
out
rcl
popf
sti
mov
jno
mov
shlb
mov
or
cmpsl
jge
mov
jns
mov
jge
sub
outsb
aaa
add
xchg
jle
aam
imul
xor
cmp
cmp
mov
les
or
pop
jae
test
loope
xchg
or
bound
xorl
sahf
mov
inc
xchg
jl
mov
mov
dec
addr16
pop
mov
dec
inc
rorl
std
lret
incl
arpl
dec
lcall
mov
cwtl
cli
in
fadd
lahf
movsl
and
int3
lods
out
loop
pop
xlat
or
nop
push
daa
inc
sub
out
bnd
sti
jecxz
cmp
jecxz
cltd
aad
pop
xchg
sbb
cs
jecxz
sub
es
cltd
shr
and
xchg
test
shll
cld
outsl
jne
hlt
sti
sbb
lods
jge
xor
aad
pop
jbe
dec
mov
aas
mov
push
mov
fstp
imulb
push
je
jl
xlat
jg
adc
ret
inc
sbb
or
jno
jg
push
outsl
inc
addr16
inc
cmp
ljmp
ret
loop
insl
cmp
testl
push
add
dec
push
sub
sub
mov
sbb
insb
test
inc
iret
xor
mov
lock
popa
movsl
aas
loope
inc
bnd
jg
mov
setnp
mov
adc
inc
mov
and
je
mov
sbb
inc
and
jae
outsl
cmp
fmulp
and
lcall
mov
aad
fists
shll
ss
pfnacc
lret
fisubl
pusha
pop
jns
arpl
pop
nop
insl
insb
add
scas
js
enter
dec
inc
pop
in
rorb
addr16
int
add
jno
dec
sbb
filds
movsl
xchg
adc
pushf
xor
dec
adc
mov
xchg
or
xor
dec
push
lahf
cmpsb
cli
mov
pop
xchg
xchg
inc
lods
addb
push
push
cmp
cli
fwait
or
xchg
pop
popf
jl
xorl
sub
xchg
jns
jmp
or
jmp
sbb
adc
mov
aas
xchg
cld
pushf
inc
add
outsl
mov
in
jns
lods
pop
push
pop
mov
andb
push
rolb
cmpsl
xchg
xchg
jno
ljmp
frstor
dec
pop
insb
jg
add
mov
test
cmp
jbe
adc
or
mov
or
cmp
test
das
and
mov
mov
insb
and
imul
mov
push
cmpsb
insb
outsl
repz
inc
mov
and
bound
mov
int
cmp
in
inc
adc
xchg
out
pop
dec
sub
dec
and
daa
xlat
cmp
icebp
into
sbb
or
pop
sub
out
cmc
or
jb
popa
and
push
rcrb
sarl
lods
mov
xor
dec
add
fdivrs
icebp
push
jl
push
adc
push
xchg
jbe
jmp
dec
data16
stc
xchg
addr16
fs
es
add
or
scas
adc
icebp
adc
xchg
pop
lea
mov
mov
mov
pop
or
test
mov
outsb
cmp
test
xchg
sub
ret
cli
fists
jne
jmp
fcoms
clc
lahf
insl
outsb
mov
mov
jg
jecxz
sbb
sbb
test
dec
cs
pushl
lret
es
addb
lahf
lods
mov
sub
jmp
into
out
add
jmp
pusha
mov
cmpsl
dec
sbb
pop
in
push
cmp
js
int
sbb
js
adc
inc
dec
jno
fildll
push
pop
divl
lcall
xchg
adc
cld
xor
ret
mov
cld
gs
jno
jg
mov
mov
inc
in
push
lcall
cld
jecxz
popa
test
lods
daa
js
jo
xchg
jg
mov
sub
sub
sub
push
sti
cs
mov
cwtl
sbb
int
inc
addb
jns
int3
cmp
enter
adc
or
test
xchg
jo
xchg
adc
sub
lret
and
mov
sarb
clc
mov
cs
mov
popa
icebp
mov
adc
lock
xor
scas
popa
cmp
sub
jnp
call
in
sti
dec
jo
xchg
and
and
jle
mov
push
push
xor
mov
sub
mov
mov
pop
mov
mov
push
mov
gs
daa
outsb
sub
stos
psrad
stc
ds
repz
in
inc
or
and
loopne
lods
ss
or
inc
push
nop
aad
pop
inc
in
movsb
mov
mov
popa
fs
inc
enter
pop
fcomps
fnsave
ret
hlt
dec
push
push
adcl
pop
stc
xchg
mov
outsl
scas
loope
sub
pop
cmp
cmp
inc
popf
jbe
test
loopne
mov
fisubrs
in
or
pop
add
cmpsb
popa
mov
out
xchg
dec
insl
pop
mov
pop
inc
aam
repz
cmovbe
fdiv
das
mov
sahf
pop
sbb
ret
js
inc
push
push
mov
ljmp
xchg
cmp
std
incb
adc
jg
fdivr
jb
dec
xchg
lds
rolb
int
scas
in
pop
inc
mov
sbb
sub
xchg
cmc
sbb
andl
mov
ret
andl
sub
enter
pop
jno
xlat
cmp
dec
arpl
jl
dec
pop
pop
inc
arpl
clc
sti
adc
inc
xchg
iret
or
pop
fdivrl
inc
cmp
lahf
dec
bound
std
aad
imul
into
and
xchg
testb
push
es
hlt
cmpsl
pop
popf
fcomip
cmp
das
pop
fcoms
in
sub
addr16
sbbb
jp
add
and
add
fcmovu
shr
pop
les
shrl
test
dec
out
mov
mov
push
add
outsb
and
mov
jno
mov
cmc
mov
adc
lahf
popa
arpl
mov
imul
pop
rol
dec
data16
or
stc
lods
ss
loop
stc
lcall
out
loopne
scas
xor
pushl
lret
and
xchg
loop
cmp
mov
aam
xchg
adc
in
sarl
mov
stos
cmp
cmpsl
test
or
adc
negl
mov
pop
pop
test
lods
cmp
es
iret
fisubrl
scas
rorl
frstor
add
sub
xor
and
mov
roll
add
jns
nop
xchg
aam
push
mov
push
xchg
mov
lret
and
lds
sub
icebp
lds
neg
les
aaa
add
pop
movsl
loop
jge
jmp
adc
pop
test
or
or
add
xchg
xchg
out
cld
pop
inc
pop
pusha
cs
ja
das
pop
loope
dec
jmp
fisttpl
mov
pop
addr16
jecxz
out
ret
repz
xor
lret
sbb
call
or
in
aad
addl
add
mov
push
out
inc
pop
aaa
lods
lock
cmp
mov
test
jle
lods
and
enter
xor
dec
fdivr
add
outsb
push
ficompl
and
push
push
sub
mov
xor
pop
cli
frstor
or
push
ss
sbb
xor
aaa
sarb
dec
and
pop
inc
mov
pop
ljmp
mov
aaa
in
add
int
mov
mov
insb
insb
jl
inc
fsubs
xchg
gs
repz
mov
pop
jo
sahf
mov
lahf
pushf
push
dec
push
xor
or
push
cmp
ja
je
stc
andb
adc
mov
cmp
test
fdivr
nop
dec
mov
notb
and
daa
hlt
ljmp
mov
fwait
mov
aas
lea
mov
inc
loopne
push
scas
aas
test
mov
fildll
jo
sahf
fmul
popf
pop
jmp
popf
dec
mov
loopne
sub
loope
dec
iret
xchg
push
lahf
ret
cmp
aas
mov
dec
pop
push
xor
sub
popf
jp
shlb
js
dec
or
clc
gs
and
sahf
and
push
push
cmp
or
es
addl
pop
cmpsb
mov
add
imul
adc
stos
aaa
in
add
cli
repz
dec
call
add
jnp
imul
cmpl
push
dec
add
cmp
dec
mov
or
test
aad
mov
cmp
push
lds
ds
adc
push
data16
pop
repnz
or
pop
dec
scas
xor
dec
xor
pop
jmp
cmp
push
lcall
mov
push
push
push
cmp
jnp
cmp
inc
xor
setbe
mov
scas
xor
mov
mov
jl
faddp
int
in
push
sbb
fstpl
lods
cld
fdivrs
sbb
lahf
push
xchg
idiv
std
mov
pop
jno
aaa
out
imul
add
mov
mov
insb
mov
pushf
xchg
jecxz
sub
pushf
imul
cli
aaa
jae
xor
nop
dec
and
sbb
pop
hlt
negb
arpl
fmulp
push
fildl
fs
jb
insb
jecxz
pop
dec
test
inc
pushf
push
faddl
sbb
mov
add
push
xor
mov
sbb
rclb
push
test
mov
xchg
jb
inc
cmp
mov
sub
enter
mov
pop
push
push
pop
sbb
fstpt
and
fucomip
sub
push
push
adc
push
movsb
es
pushf
cmovs
add
lods
mov
sub
mov
push
cmp
call
push
mov
mov
adc
les
add
lahf
xchg
into
int
pop
insb
lret
pop
pop
hlt
sbb
aaa
adc
xor
fadds
inc
jb
adc
and
add
ret
and
cmp
iret
outsl
xchg
add
dec
sbb
jecxz
pop
jecxz
and
pop
out
inc
jbe
push
repnz
jnp
push
in
dec
decl
out
int3
jg
add
dec
sbb
xor
in
dec
pop
out
xchg
pop
add
insl
xchg
push
call
push
dec
xchg
pop
xchg
mulb
popf
lahf
pop
push
dec
jg
adc
jecxz
movsb
cmp
aaa
xchg
xor
aas
sbb
lods
and
cmp
or
and
ds
push
pop
loope
mov
addl
mov
ffreep
jne
xchg
pusha
jp
loop
lods
mov
dec
mov
push
mov
sbb
cmc
xlat
outsl
adc
lods
mov
testb
int
ret
jmp
rorb
dec
mov
inc
mov
dec
push
xor
inc
sbb
hlt
xlat
adc
pop
sbb
pop
insl
jbe
sahf
test
repnz
data16
repz
inc
push
comiss
call
jl
lods
popa
testb
cld
or
iret
lods
shll
cmp
scas
andb
mov
and
xchg
das
xchg
xor
in
and
mov
test
les
test
stos
cs
aad
cmp
ja
jl
in
and
cmpsl
pmuludq
jge
movl
mov
inc
into
mov
decl
mov
fldln2
repnz
add
adc
jnp
add
arpl
jne
push
adc
xchg
arpl
xchg
adc
dec
add
fiadds
pop
sbb
xor
inc
sub
dec
lcall
jo
push
mov
gs
fxam
mov
pop
mov
js
or
leave
subb
push
pop
lret
jle
aam
inc
lea
mov
test
fcomps
push
fimuls
imulb
adc
cmpsl
push
mov
in
mov
in
xchg
sbb
sbb
scas
xchg
les
push
in
inc
lret
jnp
xchg
fcoms
fisubrl
mov
cmpsl
dec
shll
in
and
ret
mov
pop
lret
fwait
jp
mov
mov
mov
mov
loop
pop
mov
inc
cld
mov
stos
mov
ds
nop
jne
pop
or
mov
fists
dec
xchg
pop
out
adc
jle
mov
lahf
add
mov
jg
mov
in
xchg
adc
jl
inc
push
aas
call
jns
or
or
dec
cmp
jne
hlt
arpl
push
pop
aam
jb
hlt
into
into
fldcw
pop
mov
xor
inc
jno
add
jno
add
push
cmp
push
ret
ss
movsl
mov
jle
xor
add
or
add
mov
ret
outsb
push
sbbb
jbe
mov
mov
mov
into
inc
int
popf
push
fsts
mov
and
dec
nop
pusha
sti
pop
repz
inc
xor
stc
js
or
es
mov
popa
push
mov
ret
cmp
dec
daa
jo
out
pop
jb
lods
movsl
mov
cmpsl
mov
popa
jb
int
decl
iret
mov
xor
jo
mov
lret
insb
jecxz
ja
icebp
pop
and
and
clc
movsl
test
mov
sbb
hlt
mov
lods
movsb
mov
bound
lret
mov
xlat
loop
or
xchg
dec
das
repnz
cmp
jnp
pop
jne
leave
flds
inc
cmp
or
out
daa
lea
cltd
sub
mov
cmp
stos
leave
int
add
inc
mov
mov
inc
rolb
out
cmc
into
les
pop
inc
into
sti
insb
push
imul
pop
mov
pop
pop
push
dec
sub
daa
outsl
dec
loop
sub
nop
out
aad
movsl
adc
sbb
inc
cmp
cli
sub
int
shlb
adc
jae
insl
dec
fistl
xchg
jnp
into
jb
jmp
mov
mov
sub
movsl
sarl
call
jmp
inc
push
addl
jl
mov
stos
sbb
mov
inc
fdivrl
fdivr
push
cmp
aas
mov
sbb
adc
jg
lret
cmp
repnz
xchg
push
sbb
es
push
int
loope
push
inc
lcall
lds
fisttpll
lock
dec
popf
in
loope
fisubs
mov
sbb
lret
test
lahf
popa
mov
push
js
bound
bound
xchg
in
mov
sbb
pop
cmpsb
mulb
sbb
mov
icebp
shl
lods
sub
mov
in
das
mov
cmp
push
mov
fadd
in
mov
and
popf
addr16
sbb
inc
add
push
test
xchg
in
cmpsb
xor
lea
sbb
push
mov
dec
mov
sbb
lahf
cmc
dec
jmp
add
mov
in
shl
sub
into
loopne
loopne
push
and
mov
sahf
mov
and
in
sub
in
pop
xchg
dec
imul
lahf
sbb
lds
cmp
adc
mov
mov
int3
sahf
and
jmp
sti
push
aam
and
cld
add
cld
jbe
adc
mov
dec
adcl
fcoml
jne
cmp
out
mov
ljmp
xchg
aaa
xlat
jge
ds
sbb
and
dec
push
or
inc
inc
fcmovb
sub
sub
add
jnp
cwtl
aas
int
xchg
jg
rcr
icebp
cmp
testb
mov
cli
fisubl
stc
xor
test
jb
fdivrl
loope
lea
mov
pop
not
sub
or
out
imul
ds
pop
mov
iret
jmp
insl
in
pop
sbb
lcall
jg
sub
ljmp
mov
lds
mov
imul
scas
lock
rclb
in
movsb
in
and
sub
mov
pushf
mov
mov
fcomi
mov
adc
cmc
adc
fisttpll
aaa
pop
rolb
insl
lea
pop
sub
cmp
and
inc
aad
int
add
pop
cmp
rclb
add
mov
stos
aaa
insl
pop
sub
clc
push
pop
icebp
fs
add
pop
or
ds
push
add
mov
push
leave
loop
cmp
das
jmp
pop
addr16
daa
cmp
neg
das
out
mov
add
std
jl
test
push
or
orb
les
sub
roll
dec
enter
sbb
aaa
nop
jnp
inc
neg
jns
cli
jo
mov
adc
adc
pop
sub
fwait
gs
sbb
ljmp
jbe
mov
in
into
ss
call
orl
mov
sub
sbb
aas
hlt
in
mov
jbe
jg
jo
mov
lret
aad
or
ss
dec
cmp
mov
inc
sbb
lea
jmp
or
xchg
jp
pusha
or
jge
jmp
inc
mov
sbb
mov
add
adc
es
lret
and
xor
mov
lcall
and
out
xor
mov
cs
imul
aad
adc
pushf
in
loope
fucomp
and
xor
test
push
mov
out
mov
icebp
adc
dec
or
pop
xor
scas
cld
int3
add
xchg
mov
mov
aas
mov
mov
test
mov
mov
lock
inc
sbb
pop
clc
jae
in
mov
fyl2xp1
xchg
daa
mov
ja
mov
das
aad
adc
mov
fisubs
loope
sbb
cld
leave
xor
repz
mov
into
pop
inc
int3
stos
pop
nop
xchg
daa
xor
mov
repz
sub
lods
mov
xchg
mov
cwtl
cli
pop
insl
sbb
ffree
xor
xor
adc
jg
push
cmp
push
pop
inc
mov
fwait
and
outsl
jns
icebp
jge
cmp
sub
sub
pop
lods
cmpsl
inc
dec
repz
xchg
jle
gs
mov
cld
jb
aaa
lret
inc
in
mov
jno
daa
jbe
cmp
imul
adc
push
xor
push
jne
push
pop
mov
dec
iret
add
xor
sbb
orb
push
por
into
test
lea
mov
js
fdivrl
jmp
ds
mov
pusha
andb
push
loope
mov
dec
cwtl
push
adc
inc
and
mov
hlt
loope
xor
sbb
lret
xlat
les
and
xchg
or
jge
bnd
ds
push
shlb
insl
dec
out
xchg
adc
mov
dec
inc
sbb
push
insl
aaa
data16
cli
cmp
sahf
cwtl
stos
enter
jecxz
cmp
push
stos
inc
sbb
lds
pop
push
cs
std
xor
push
adc
mov
cltd
jle
frstor
lcall
and
lea
jbe
mov
cmp
xor
inc
lcall
subb
push
flds
or
out
dec
inc
or
js
inc
jb
push
xor
cs
and
adc
adc
jl
pusha
pusha
xor
out
sar
scas
scas
mov
hlt
imul
es
xor
out
mov
mov
test
rorl
xchg
and
jo
xchg
test
cmc
dec
vmovupd
fidivrl
and
mov
out
cltd
rcrb
in
rorb
push
pop
ret
xchg
inc
int3
mov
fwait
out
mov
scas
ror
mov
rcrl
jmp
adc
faddl
add
fstl
hlt
mov
cmc
cmp
sub
hlt
xchg
dec
ret
cmp
cmp
jmp
push
stos
xchg
in
xlat
in
pop
popf
out
out
cmpsb
movsl
adc
or
inc
cmp
aad
fidivrl
pop
push
push
jne
pop
add
fs
dec
jb
repz
push
sub
mov
fadd
lds
pushf
fildll
test
sub
std
adc
add
cs
dec
ficompl
mov
and
mov
lea
pop
out
jne
ja
inc
out
dec
jbe
push
pop
xchg
das
jmp
mov
mov
add
cmp
pop
push
scas
xchg
pop
daa
movsl
jge
mov
jp
loopne
sub
cld
xchg
pop
mov
xor
push
sub
jle
push
test
fs
mov
mov
data16
hlt
jp
test
inc
hlt
xor
pop
aam
or
cmp
std
sub
ja
daa
mov
pop
mov
ss
inc
xchg
notb
insb
dec
dec
jne
mov
inc
cmp
mov
pop
fwait
xchg
xchg
fisttpll
xchg
or
xchg
sub
push
sbb
xor
test
mov
pop
stos
mov
loopne
inc
sbb
sub
ljmp
scas
and
flds
aaa
pusha
lret
xchg
pop
fisttps
cmpl
test
test
inc
push
add
dec
and
insl
mov
jne
add
sbb
pop
mov
xchg
mov
in
mov
mov
in
add
lds
mov
fidivs
andb
push
adc
sbb
cmp
fwait
addr16
mov
xchg
xchg
dec
es
test
mov
es
sti
pop
stos
inc
sbb
add
ja
cmp
call
inc
adc
cltd
cmp
lock
imul
xorb
inc
dec
mov
lcall
mov
fidivrl
mov
shlb
pop
mov
xchg
out
in
mov
enter
or
outsb
fstpl
das
push
fs
call
loop
loopne
adc
pushf
inc
ds
inc
or
xor
iret
dec
loop
daa
adc
sbb
stos
scas
dec
cld
out
jmp
xchg
mov
fcmovnbe
xor
imull
aas
adc
jl
pop
icebp
insl
xor
nop
xchg
and
mov
jne
out
push
std
dec
in
icebp
ficoml
sub
rcrb
add
stos
lea
xchg
adc
ds
xchg
jle
shll
push
int
add
mov
push
out
repnz
loopne
pop
mov
sbb
jno
add
adc
sahf
popa
lods
mov
xchg
repnz
push
ret
mov
or
dec
lock
mov
adc
xchg
pop
sahf
mov
push
xchg
stos
mov
adc
loop
mov
int
add
js
mov
jge
test
jae
cmpsb
int3
and
shl
inc
add
fwait
mov
sbb
add
xchg
daa
dec
adc
push
inc
loope
jbe
xor
adc
fisttpl
xchg
sub
sbb
sbb
pop
mov
sub
gs
sub
repz
inc
xchg
dec
xchg
out
push
xchg
outsl
xchg
xchg
add
mov
ds
je
jp
adc
push
das
push
or
outsl
bswap
inc
xchg
js
in
cli
sbb
pop
xchg
xor
out
out
push
jmp
or
mov
insb
jp
adc
pop
add
dec
adc
out
mov
mov
subl
clc
es
xor
aas
sbb
aam
ficompl
adc
pop
xchg
mov
jne
mov
dec
jp
sbb
outsl
mov
sub
test
int3
rcll
lret
ficomps
outsb
mov
outsl
mov
fdivs
xchg
jl
cs
ret
sti
cld
test
push
ds
cmpsb
pop
in
fimuls
jbe
sbb
das
sub
push
rclb
inc
pop
mov
xlat
lret
hlt
jge
call
mov
and
jge
jecxz
sbb
jns
iret
or
pushf
adc
jmp
and
cmp
stos
sub
outsb
mov
push
mov
imul
leave
sub
dec
mov
sbb
cmp
adc
xor
fs
or
fildl
xchg
loope
push
push
dec
scas
sub
lret
mov
cmp
orb
ret
jae
iret
push
leave
add
sahf
mov
and
shll
jle
pop
mov
push
push
les
mov
push
dec
pop
inc
and
and
loop
imul
lahf
test
mov
add
lds
sub
and
jg
in
pushf
sbb
cmp
xor
test
xchg
push
lods
je
xchg
cld
add
jo
pop
clc
sub
jb
or
into
cmpsl
aas
sbb
fsubrp
xchg
js
mov
js
je
js
sbb
mov
mov
enter
mov
pop
aaa
adc
hlt
fstp
pushf
aad
inc
les
xor
lods
sbb
call
arpl
rcll
push
pushf
jno
lahf
adc
clc
adc
testb
lods
in
add
loope
lods
mov
mov
cltd
adc
dec
bound
int
lea
fiadds
in
push
mov
mov
or
mov
adcb
mov
dec
mov
sarl
push
or
pop
jbe
xorl
cmpsb
test
rclb
loopne
inc
add
int
adc
popf
outsb
cltd
in
xchg
mov
clc
xchg
xlat
mov
and
test
int
pop
loopne
pop
hlt
dec
sub
inc
lret
push
cmp
inc
mov
push
das
sarb
mov
push
push
sbb
loop
int3
sbb
xchg
pop
pop
add
out
jmp
inc
std
clc
pop
in
or
popf
dec
jne
push
pop
loop
sub
lret
pushf
xchg
dec
stos
aad
mov
cmp
icebp
xchg
push
xchg
xor
mov
mov
call
push
jmp
out
mov
xchg
lea
popf
and
cmpsl
jmp
fs
jbe
inc
fchs
aam
mov
iret
out
sbb
stc
and
fstpl
add
cli
cmp
xor
inc
or
rcr
rcrl
aaa
les
fs
lret
pop
cmp
iret
cmp
data16
mov
push
lods
loop
mov
mov
adcb
mov
in
popa
jo
nop
andl
adc
pop
sbb
call
cli
push
push
dec
call
mov
pop
js
lods
push
adc
pusha
add
sahf
xchg
fs
xor
cs
mov
mov
int3
pop
and
into
icebp
mov
mov
cmp
or
pop
bound
into
add
mov
push
das
cmp
leave
jns
in
push
in
inc
cli
or
adc
pop
add
cmp
imul
mov
xchg
sub
xlat
fwait
aaa
pop
idivl
daa
jmp
add
ret
xor
xorl
ret
pusha
ret
cld
jle
jecxz
out
jecxz
cltd
subb
adc
push
xchg
xchg
js
insl
adc
in
jge
mov
push
iret
inc
mov
cmpsl
xor
out
or
and
aad
mov
pop
subb
inc
setns
ja
cmp
lds
stos
mov
js
sbb
popf
scas
lods
add
mov
in
cld
loopne
rcl
in
cmp
jns
inc
shr
and
sbb
ret
je
mov
data16
in
insb
mov
jno
xor
jl
subl
lret
cmpsl
xchg
pusha
popf
testl
adc
imul
push
xor
nop
adc
xor
xor
stc
fisttpl
sahf
pusha
ret
lods
pop
mov
and
xchg
dec
and
rcrl
jno
hlt
jp
inc
aas
leave
xchg
jb
aam
fstps
mov
pop
into
lods
mov
mov
mov
cmp
mov
ss
sarb
cmp
xor
imull
sbb
cmp
in
movq
ror
adcl
stos
cwtl
add
mov
ljmp
cmp
clc
push
das
cmp
out
out
aam
lods
sbb
pusha
cmpsb
adc
ret
je
mov
das
call
xchg
into
int3
push
repz
xchg
xchg
lcall
xchg
add
xlat
out
and
and
dec
xchg
icebp
rclb
or
push
out
mov
sub
rcll
xchg
nop
and
dec
mulb
orl
sar
mov
xchg
nop
inc
movsl
mov
dec
into
out
pop
out
sub
pop
insb
cmc
test
inc
popf
add
scas
repz
push
std
js
je
mov
inc
push
mov
rcr
fsts
jb
and
or
mov
inc
mov
jns
mov
fnstenv
gs
pop
adc
sbb
jbe
mov
cltd
mov
outsb
das
push
jb,pt
xor
pop
imul
adc
psubd
or
sbb
outsl
ljmp
push
xchg
pop
repnz
push
inc
mov
stc
rclb
and
shl
mov
xchg
stos
movsb
jno
sbb
jbe
loopne
ja
pop
and
stos
out
dec
xlat
xchg
xchg
pop
adc
loop
push
fisubrs
jecxz
and
mov
loope
aaa
lahf
push
cmp
xchg
add
cmpxchg
insb
sbb
mov
stc
fisubrs
andb
data16
pop
xchg
adc
push
roll
sub
les
push
mov
imul
into
sbb
data16
mov
cs
es
add
test
in
mov
xchg
inc
mov
sub
loopne
lea
test
cmp
aaa
adc
enter
jnp
push
ja
popa
testb
mov
int3
stc
dec
mov
shrl
sub
add
inc
stc
cltd
test
lcall
insl
inc
xor
outsb
adc
jo
test
out
sub
arpl
mov
ljmp
mull
lods
movsb
mov
mov
mov
ret
addr16
mov
sbb
mov
int
pop
mov
daa
cmp
pop
inc
pop
or
inc
roll
xchg
filds
scas
pushf
stos
gs
lret
punpckhbw
lahf
inc
outsb
cs
pop
mov
out
jbe
mov
mov
xchg
adc
scas
std
cs
mov
mov
xchg
hlt
sbb
adc
pusha
push
and
pop
xchg
mov
lock
in
jmp
lea
mov
sbbb
or
int
push
cmp
jbe
mov
icebp
xchg
jecxz
mov
ret
test
insb
js
loop
cmp
lret
or
pop
sbb
adc
sub
adc
adc
sub
sbb
mov
sbb
inc
daa
push
mov
add
cld
push
cmp
pop
mov
xor
in
jns
mov
sub
test
cmpsb
or
mov
dec
cmpsl
mov
shlb
jb
jns
mov
sbb
lock
mov
imul
leave
cli
andps
jl
ljmp
divb
jb
adc
retw
stos
sub
enter
popa
mov
movsb
add
addl
int3
pop
cmp
js
dec
ret
lds
lods
or
adc
pop
inc
adc
pushl
add
add
mov
pop
inc
adc
cmp
add
xchg
movsl
ret
in
fimuls
in
in
push
inc
dec
rorb
pop
pusha
repnz
sbb
mov
ja
sbb
stos
jno
add
push
push
xchg
cwtl
hlt
fs
out
stos
or
mov
push
and
or
pop
in
lea
fdivp
lods
push
cmpxchg
call
mov
dec
aad
hlt
inc
or
out
push
jne
dec
scas
pop
push
inc
jge
xchg
rorb
ret
mov
insl
int3
sub
adc
push
fnstsw
mov
push
xor
cwtl
ret
or
outsb
testl
add
lods
and
pushf
pop
jle,pn
out
mov
lock
adc
lds
or
gs
sub
addb
into
lret
iret
addb
sbb
xor
insb
sbb
jne
subb
inc
clc
xor
clc
push
pop
daa
xchg
mov
movsl
dec
mov
dec
sub
lahf
mov
mov
notb
push
mov
aaa
insb
mov
cmp
mov
icebp
cmpsl
movhps
daa
enter
daa
dec
aam
sub
stc
xchg
inc
negl
fcomps
stc
rolb
inc
sbb
cmpsb
push
ss
and
cwtl
cmpsb
inc
lea
push
ret
shlb
jg
shlb
fwait
add
hlt
mov
push
inc
mov
out
cwtl
mov
shl
aas
arpl
test
inc
inc
pop
push
insb
dec
cmp
cmp
adc
push
jge
jns
jp
sbb
pop
adc
hlt
je
lds
fcoms
das
fnsave
cwtl
xchg
jbe,pt
xor
cmp
pushf
popa
test
add
or
dec
xor
and
add
insb
aad
lahf
dec
roll
cwtl
mov
jecxz
push
lock
pop
jns
cmp
in
fstpl
pop
or
iret
push
mov
adc
jle
or
call
ret
out
mov
jae
mov
nop
not
ret
mov
shr
lds
push
and
xor
xor
loopne
mov
pusha
mov
push
orb
scas
shll
add
aas
pop
pop
scas
shrl
int3
ret
sub
les
loop
cltd
push
popa
das
aad
push
add
cmp
and
add
lret
int3
outsl
mov
pop
orb
push
push
daa
les
addr16
cld
mov
and
or
inc
test
loop
es
arpl
jle
hlt
pop
xchg
subb
cmp
and
mov
mov
and
xor
stos
clc
add
xchg
and
fisttps
sti
mov
lods
int
jb
mov
pop
mov
je
faddl
cmpsb
jno
inc
mov
sarl
push
stos
movsl
pop
pop
fstl
aam
ret
loop
xor
imul
pop
iret
mov
iret
aas
pushf
jbe
cwtl
push
vmread
sbb
xor
enter
int
test
fnstenv
lods
jmp
and
insb
sbb
or
pop
xor
insl
jmp
mov
jnp
dec
xchg
pop
sub
lret
and
out
inc
cmp
fucomi
mov
lcall
mov
imul
xor
mov
inc
cmp
pusha
fwait
cltd
fimull
jp
inc
repz
frstor
aam
pop
dec
xchg
dec
lcall
loope
push
test
pop
xor
cmpsb
fldl
idivb
fidivrs
loopne
push
inc
outsb
inc
js
mov
addr16
sub
mov
pop
cli
pop
sbb
jge
sub
sub
stos
xor
sub
imul
cmpb
adc
shll
lock
pusha
test
mov
imul
out
pushf
and
cs
mov
or
aam
xchg
jecxz
les
cltd
cmpsb
scas
jns
adc
dec
pop
or
xorl
jb
and
mov
push
bound
and
inc
mov
divb
imul
sbb
mov
int
pushf
mov
in
lods
mov
adc
or
xor
cmp
sub
mov
jbe
push
pusha
insb
pushl
fwait
inc
in
inc
mov
inc
sbb
jae
or
movsb
inc
mov
xlat
test
fsub
sub
xchg
lcall
je
cmpsl
loope
test
mov
decb
mov
int
or
outsl
xchg
data16
cli
lods
push
inc
mov
mov
fdivs
and
ljmp
cmpsl
scas
sub
scas
cwtl
cli
inc
sub
sbb
mov
leave
xorb
push
push
xchg
sbb
and
shl
jge
push
addr16
cmp
pop
and
push
movsl
aam
mov
push
lds
iret
pop
mov
fmul
xor
mov
lods
ja
jmp
mov
jnp
jp
dec
lock
jne
push
xchg
push
add
arpl
mov
jo
jns
outsb
mov
jle
sbb
dec
shlb
inc
icebp
imul
lahf
arpl
sub
push
fwait
inc
mov
add
xor
lods
vpcmpgtw
pop
dec
das
and
push
mov
jne
mov
clc
sub
mov
in
and
add
fmull
xorb
jbe
push
test
sbb
lock
and
out
ret
ds
fisubrs
push
loope
mov
dec
loop
add
inc
int
xor
stos
enter
xor
aas
sub
call
sbb
std
dec
or
jb
push
hlt
xchg
pushf
in
mov
cmp
flds
data16
inc
mov
out
movsb
mov
sub
cmp
mov
add
pop
adc
xchg
aam
std
bound
fistps
fstps
ret
sbb
and
imul
sub
jl
loop
dec
mov
sub
jo
bound
xchg
imul
xchg
sbb
sub
push
push
pop
lcall
xchg
inc
push
js
into
xor
push
gs
xor
aad
scas
or
sbb
inc
push
mov
xchg
adc
mov
mov
sbb
stos
sahf
pop
cmc
fidivrs
or
mov
push
out
jo
xchg
adc
pop
sbb
adc
divl
jb
movsl
out
jecxz
shrl
fsubrs
mov
loop
out
jb
xor
add
aad
adc
pusha
dec
push
test
ret
popf
sbb
in
lahf
add
mov
mov
gs
add
jp
stos
hlt
out
and
or
sbb
cltd
pop
xor
aas
int3
add
xchg
daa
hlt
data16
jbe
notl
mov
enter
mov
xchg
shl
sbb
mov
movsb
xorb
xchg
and
lods
mov
xchg
lods
sbb
and
xchg
pusha
cli
mov
pop
and
xlat
clc
jmp
sti
adc
adc
jae
mov
mov
mov
cltd
cld
push
dec
mov
in
mov
inc
pop
lods
jmp
scas
lock
or
xchg
jle
adc
gs
cmp
sub
cmp
cmc
push
ret
daa
cmp
pop
mov
jne
lds
cmp
into
cmp
fs
mov
aad
mov
xchg
rcrl
add
push
outsb
xchg
mov
sbb
xchg
inc
clc
pop
sub
das
ret
fxch
and
sub
test
pop
lea
mov
xlat
xor
mov
jno
lahf
jae
in
fmuls
xlat
in
push
ljmp
and
mov
sub
call
dec
ja
loopne
out
fcmovne
or
pop
insl
xchg
stc
fmul
push
fwait
popa
mov
out
jbe
fisttps
ret
nop
fcoms
inc
dec
pushf
shrl
push
les
nop
jae
lods
jecxz
push
xchg
mov
pop
repnz
jge
mov
jb
dec
sahf
adc
jp
cs
jno
clc
inc
cs
je
mov
jecxz
femms
pushf
pushf
push
and
and
pop
adc
xchg
xor
inc
push
lret
int
in
lcall
fldl
mov
daa
or
int3
or
push
jnp
daa
cmp
adc
pop
inc
or
dec
sbb
adc
or
dec
jae
cmpsb
xor
xor
sbb
dec
repnz
shr
das
dec
sbb
ja
or
adc
push
sbb
nop
mov
dec
push
push
imul
inc
pop
ret
sub
les
cs
aam
and
or
mov
push
mov
sti
jge
fisttpl
jb
scas
jge
lds
xchg
enter
cmp
sahf
daa
or
jecxz
lahf
loopne
inc
sti
xchg
mov
lods
or
sbb
xor
pop
sarl
imul
inc
inc
push
aad
shl
hlt
mov
fstpt
sbb
push
andb
loop
dec
cmpsb
xchg
lds
lahf
ret
push
jns
pop
mov
sbb
cmp
xlat
cmpl
test
xchg
sbb
xchg
cmp
dec
in
fnstcw
fldenv
mov
pop
mov
sahf
add
inc
lcall
sub
pop
insl
dec
out
add
test
clc
xchg
lret
xchg
cmc
jbe
cmc
xor
sbb
in
imul
push
xlat
sub
aad
jg
lret
imul
lret
push
dec
inc
inc
jle
sahf
addr16
xor
pop
mov
and
ljmp
adc
cmpsb
lea
filds
fimuls
cmpsb
das
push
cli
xor
or
inc
insl
push
adc
inc
sahf
mov
jge
lds
inc
add
push
add
mov
out
and
add
mov
insl
fldcw
pop
mov
scas
gs
inc
roll
xor
popa
aaa
cwtl
aas
jb
ljmp
daa
mov
xchg
jno
sub
pushf
add
add
int
cmp
addb
mov
and
jno
std
int
mov
filds
push
pop
mulb
mov
pop
jle
inc
mov
xchg
bound
fsubrs
add
test
icebp
mov
loope
ljmp
fucomi
sbb
sbb
sub
jno
pop
das
les
negb
in
rorb
pop
scas
into
shll
test
sub
adc
mov
hlt
dec
aaa
cmc
in
jns
push
push
mov
cmp
push
dec
jb
xor
sbb
enter
test
jl
or
push
faddl
ss
test
aaa
scas
cmp
adc
pop
insb
or
cmp
inc
lds
dec
add
add
out
mov
rcr
lds
cmc
mov
rolb
aaa
insb
add
lock
add
cmp
mov
fnstsw
int
mov
pushf
cmp
sub
ror
clc
dec
mov
push
inc
leave
inc
and
ja
lahf
push
bnd
xor
in
mov
inc
mov
popf
xchg
cwtl
xchg
rorl
pop
icebp
mov
jb
xor
pop
nop
mov
ss
lahf
sti
xchg
shll
dec
push
movsl
shlb
jnp
mov
dec
dec
xchg
cmpsl
aas
loop
cltd
dec
aaa
cwtl
xchg
sub
mov
jle
dec
imul
fldt
sbb
popf
push
loop
cmc
add
nop
jg
xorb
aam
cld
adc
mov
push
xchg
in
rolb
mov
inc
push
mov
ret
jne
pusha
dec
inc
dec
sub
das
hlt
repnz
mov
mov
add
or
pop
push
or
cmp
pop
pop
fs
xor
adcb
scas
popf
xor
movaps
pop
push
fdivp
xchg
pop
cwtl
xchg
sub
fldcw
outsb
fs
cli
imul
leave
cmpsl
hlt
lret
mov
aaa
addr16
cmp
mov
movsl
push
jae
jecxz
jg
lods
repnz
mov
cli
fidivl
pushfw
inc
dec
xor
js
inc
or
mov
out
push
and
iret
sbb
push
ficompl
and
xchg
jbe
orl
adc
push
jo
ja
repz
leavew
dec
sbb
inc
mov
ljmp
sbb
movsb
sub
dec
out
stos
inc
sbb
popa
sub
pop
mov
dec
es
dec
imul
cmp
dec
adc
push
sub
mov
cmp
jmp
shll
imul
xchg
mov
int3
loopne
and
iret
arpl
xchg
mov
jbe
inc
xor
pop
fmul
adc
mov
adc
imul
inc
out
iret
dec
and
adc
and
test
jecxz
jns
or
and
push
movsb
into
xor
cmpsb
pusha
test
aas
ret
daa
outsl
addb
cld
jg
mov
push
das
xchg
xor
pop
enter
mov
push
push
mov
aas
push
fsts
mov
loope
push
mov
fists
lea
aad
mov
add
push
inc
lcall
dec
push
scas
or
jg
mov
xchg
push
fwait
or
sbb
sub
adc
addr16
sub
sbb
inc
xor
sahf
sub
dec
fildl
lods
cmp
sub
cmp
xor
ja
adc
dec
inc
pop
xchg
fists
popf
mov
mov
nop
pop
ret
leave
inc
xchg
inc
out
jb
fs
cmc
jbe
loop
xor
test
rcrl
bound
data16
leave
jne
ljmp
fstpt
aaa
icebp
jae
mov
aaa
pop
pusha
pop
dec
iret
xchg
icebp
lds
mov
jo
inc
in
add
lock
mov
sarl
xchg
push
ret
mov
add
jb
adc
out
dec
fs
cld
lock
fcmovnb
pop
outsl
pushl
mov
sbb
mov
jnp
hlt
dec
or
loope
pop
das
xor
jns
cmp
mov
outsl
xor
sub
xor
inc
ljmp
bound
mov
lcall
inc
sub
cmp
imul
mov
imul
not
in
push
not
inc
sub
jl
mov
es
aas
dec
testl
into
or
sbb
jmp
fs
push
es
sbb
loop
push
cmc
jmp
dec
fidivrs
xchg
push
or
dec
jo
mov
add
mov
sub
mov
sub
jne
inc
mov
flds
adc
add
and
cmp
and
mov
xor
sahf
iret
add
cmpsl
adcl
pop
lret
fldt
xor
pop
dec
sub
cmp
out
in
insb
jp
inc
mov
adc
cli
dec
xchg
cltd
add
pop
stos
data16
fs
sbb
sarb
cmp
xor
call
lcall
not
and
pop
cs
out
and
lods
imul
push
mov
inc
mov
clc
sbb
call
mov
repnz
sub
pop
mov
subl
mov
enter
and
in
inc
in
mov
test
push
mov
aam
mov
adcl
xor
jl
dec
mov
pushf
add
clc
cmp
in
imul
or
jle
lcall
or
inc
repz
mov
call
cmp
loope
in
push
push
test
inc
mov
dec
mov
sbb
xor
adc
or
xchg
sbb
dec
push
xchg
sbb
lock
or
shrb
jl
pop
jl
loope
xor
imul
or
clc
outsb
rorl
nop
pop
into
nop
loopne
jbe
jb
jne
bound
xor
xchg
es
movsb
inc
and
pop
mov
stos
lock
push
int
cmp
mov
inc
das
ds
in
dec
pusha
mov
out
jo
mov
out
pop
and
loopne
repnz
sbb
fisttpll
ror
clc
jp
inc
loope
cmpsl
mov
in
sbb
inc
es
pop
inc
xchg
in
ret
add
loope
mov
xor
lods
xchg
add
in
inc
or
sub
push
sbb
push
lret
and
incb
sub
gs
dec
gs
mov
pop
lcall
sbb
insb
pop
aam
mov
mov
bound
mov
in
cli
fildl
cltd
and
dec
outsl
adc
inc
sub
out
rcr
xchg
pusha
mov
mov
fsubr
nop
add
and
data16
inc
sub
cwtl
or
dec
and
popa
add
call
lods
dec
data16
cmpsb
mov
sub
xchg
pop
sbb
stos
std
inc
add
shl
mov
arpl
dec
cmp
pop
imul
xchg
lods
clc
or
loop
jne
xchg
aam
and
jmp
or
xchg
pop
mov
daa
je
test
cmp
daa
clc
movsl
inc
stos
pop
dec
fstl
mov
push
xchg
mov
hlt
leave
fcoml
stos
add
imul
in
clc
hlt
cmp
inc
leave
loope
js
jle
pop
dec
dec
iret
mov
cltd
jbe
jmp
mov
test
sbb
scas
push
xchg
adc
cmp
flds
pop
push
test
hlt
fildl
push
pop
mov
xchg
mov
adc
rcll
fs
or
push
test
aad
jae
adc
and
mov
or
mov
sbb
inc
jle
in
mov
repz
mov
pop
add
nop
add
adc
xchg
mov
dec
mov
mov
sbb
pop
jmp
jb
xchg
dec
dec
push
stos
jns
jns
push
and
cmp
in
insl
test
push
imul
hlt
arpl
or
test
push
div
and
test
push
fwait
lahf
xlat
jae
into
jnp
and
aaa
xchg
pop
shll
dec
mov
xor
mov
sbb
add
or
sbb
faddp
notl
or
ds
sub
push
iret
jns
xchg
dec
dec
idivb
fs
ljmp
add
mov
jp,pn
sbb
mov
jno,pn
clc
rcrb
outsb
popf
dec
adc
cmpsl
jmp
repnz
lods
sahf
insl
pop
subl
shll
mov
jne
in
or
mov
jge
shl
orb
shll
out
mov
mov
pushf
mov
or
cmp
mov
adc
out
ss
and
mov
insb
push
push
je
jbe
mov
jl
ds
lea
cwtl
add
fimuls
lahf
sub
push
xor
das
mov
cli
lea
cmc
int
push
push
xor
add
inc
mov
pop
or
mov
ds
pop
lret
ret
cmp
lahf
add
add
or
ljmp
out
mov
aas
fwait
mov
xor
pop
pop
je
mov
femms
push
mov
addr16
arpl
and
fidivl
pop
popa
mov
inc
int3
es
idivl
jmp
ficomps
fcmovnbe
adc
imul
cmp
mov
xchg
cli
pop
ret
cmp
sub
push
mov
dec
push
mov
lcall
loopne
xchg
xchg
mov
cmp
push
bnd
cmpb
repnz
and
fsubrl
int3
xor
test
hlt
add
sub
out
movb
int
mov
mov
inc
cmp
in
in
loope
sub
sbb
mov
push
cmp
inc
mov
push
sub
popf
scas
out
push
mulps
mov
add
inc
sbb
ss
sub
pop
pusha
bound
xor
jo
insb
sbb
test
dec
push
jns
push
repnz
xor
pop
push
or
add
sbb
pop
loopne
pop
cmpsl
dec
mov
add
xchg
dec
xchg
jo,pt
and
mov
nop
lock
pop
out
notb
ffreep
test
lret
pop
and
ret
xor
xchg
jno
xor
movntq
out
nop
pop
orl
cmp
push
testb
je
xchg
icebp
pop
cltd
cmp
adc
or
pushf
in
sub
mov
loop
xchg
test
dec
adc
pop
pop
es
loop
insl
dec
mov
js
add
xchg
outsb
sbb
lret
icebp
sub
jge
imul
sbb
cmp
lods
fs
cmp
daa
ss
repz
lock
pop
jmp
orl
in
mov
sbb
or
leave
xor
cli
in
pop
mov
or
sbb
movb
add
ljmp
xor
lcall
pop
or
outsl
fcomps
lret
scas
icebp
cmp
dec
pop
hlt
mov
push
arpl
cmp
dec
push
rclb
stos
jb
mov
loop
add
stc
add
add
loopne
mov
leave
inc
fwait
or
mov
jp
pop
jl
int3
ja
xor
es
add
pop
push
paddq
xor
mov
mov
xor
lods
and
inc
inc
ret
jb
mov
or
mov
push
stos
orb
shl
daa
lret
xchg
fdivrl
mov
mov
xchg
xchg
fld
inc
jae
mov
jns
cmp
inc
nop
aaa
imul
in
jnp
arpl
ljmp
sahf
sbb
sbb
leave
inc
js
pushf
mov
xchg
inc
out
pop
or
dec
pusha
movsl
rcr
adc
push
add
rorl
mov
dec
mov
repnz
jo
and
add
mov
mov
dec
in
dec
sbb
and
lods
out
xchg
sahf
inc
fmull
adc
or
adc
lret
push
fiaddl
popl
push
sbb
push
movsb
scas
ss
pop
jmp
incl
popa
and
xchg
xor
enter
jbe
and
or
adc
arpl
cmpl
adc
cmp
sub
mov
lret
cmp
iret
sbb
sbb
mov
jg
pop
inc
sbb
sarl
mov
scas
push
loope
xchg
pop
jne
lret
mov
ljmp
cli
fldcw
pop
nop
sub
xor
out
aad
lret
mov
push
cmp
fdivrs
inc
and
cmpsl
shll
sub
or
adc
sbb
jmp
add
in
or
inc
test
pop
sbb
inc
push
mov
lock
fidivrl
push
mov
mov
xchg
test
or
hlt
fnstcw
imul
push
adc
call
stc
cmp
xor
sbb
aad
and
lcall
enter
es
stos
shll
addr16
cmp
out
mov
push
lods
mov
inc
fwait
test
iret
mov
js
das
push
adc
adc
xchg
int
xor
filds
push
cli
pop
cltd
js
cwtl
mov
ret
sbb
pop
push
sbb
cmpsl
addr16
arpl
xchg
jno
xchg
in
daa
movsl
adc
jp
lds
xor
les
lret
jo
sub
sbbb
lahf
or
aam
jg
iret
jmp
mov
ljmp
xor
sub
inc
push
iret
mov
jp
push
ucomiss
fwait
shlb
adc
dec
and
ret
movsl
sub
lods
and
js
pop
aas
mov
divl
or
imul
and
dec
or
xchg
jb
fs
clc
lcall
or
idiv
push
enter
stos
cwtl
pop
adc
rcrb
rorb
or
add
lcall
sahf
push
mov
cmp
push
jne
mov
cmp
cli
mov
ja
xor
pop
and
pop
sub
mov
int3
sub
shrl
test
ja
jns
inc
fs
pop
and
in
lret
dec
les
mov
cmp
jmp
xor
mov
data16
jge
and
leave
dec
es
or
fwait
inc
ss
or
repnz
dec
pop
add
adcb
ljmp
dec
cs
insl
es
or
mov
out
and
clc
mov
loopne
cmp
mov
mov
push
test
leave
jne
scas
jmp
mov
sub
cmp
andl
ds
adc
sbb
out
and
adc
lret
push
jg
fisttps
dec
sbbb
aas
lods
mov
push
inc
and
lea
sbb
mov
loope
mov
and
xor
pop
mov
xchg
call
cmp
int
mov
mov
out
push
push
es
xlat
mov
stc
xchg
popf
add
pop
pop
mov
jb
mov
or
jmp
cmp
mov
adc
sti
jl
dec
dec
out
test
sbb
cltd
and
mov
push
push
dec
cmpsl
pop
mov
out
shll
ret
pop
pop
mov
stc
mov
fnstenv
jae
mov
fcmovnu
dec
inc
push
jmp
cmpsl
hlt
xor
std
dec
or
mov
fwait
test
test
xchg
dec
add
popa
and
xchg
loopne
cmp
arpl
rol
repz
cmp
xorb
cmp
pop
xchg
mov
out
push
into
icebp
cmpsl
sbb
out
roll
les
push
mov
sarb
mov
stos
sbb
jg
pop
adc
in
dec
xchg
and
lea
rolb
jbe
jmp
add
mov
ss
fwait
sub
mov
jne
xchg
dec
xchg
inc
dec
push
mov
xor
jecxz
jne
add
adc
xor
or
xlat
add
imul
test
mov
sub
dec
fcomps
call
cs
sbb
fldl
scas
dec
adc
cmp
test
ljmp
cli
cmp
popa
sub
inc
push
jl
xlat
mov
je
pop
movl
leave
cmp
inc
outsb
xor
xor
fiadds
ljmp
push
popa
fisubs
push
or
jne
popf
mov
hlt
je
mov
jl
fcmovne
shlb
leave
sub
outsb
fcoml
or
fldcw
int3
fbld
jp
in
test
sub
sbb
dec
fldl
test
push
mov
xor
out
addb
mov
sbb
cmc
xlat
popa
push
jne
loopne
loope
iret
test
sub
mov
jne
ja,pt
insl
xchg
mov
push
loopne
add
inc
arpl
rclb
int
arpl
ljmp
loope
sarb
scas
xchg
repz
lock
jb
mov
mov
daa
push
fcompl
sbb
stos
imul
or
loope
lods
leave
js
loop
shll
lahf
outsl
stc
pop
data16
adc
push
mov
dec
cmp
or
xor
or
add
mov
and
js
jecxz
xorl
sbb
test
in
push
out
test
mov
lock
pop
or
out
test
push
dec
jmp
jmp
xchg
test
arpl
imul
push
jecxz
pop
xchg
out
mov
mov
inc
mov
or
fwait
pop
mov
stos
icebp
push
dec
mov
lods
in
xchg
lds
push
fiadds
jnp
into
out
xchg
jecxz
sub
add
jae
lcall
nop
xor
mov
push
and
xor
adc
pop
jle
js
dec
inc
mov
je
shrl
arpl
outsl
cmpsb
inc
dec
out
aas
daa
and
mov
cmc
fnsave
and
lods
lahf
arpl
loope
mov
xor
push
pop
test
mov
out
div
scas
clc
cmp
jns
pop
not
push
repz
fnstsw
inc
jmp
imul
in
jae
pop
inc
push
mov
sub
and
mov
add
lcall
and
fwait
jecxz
adc
push
cmp
lcall
jnp
inc
aaa
loop
lds
pop
jl
jnp
push
pop
iret
xlat
mov
paddd
jns
imul
xchg
cmp
leave
sbb
fsub
out
push
gs
movsb
add
aam
xchg
lahf
and
cmc
or
mov
lds
cmpsl
or
idiv
fwait
adc
lret
xchg
stc
jmp
rorb
test
dec
rclb
cmp
fisttpll
and
push
mov
jp
cld
push
iret
push
push
push
ljmp
jmp
lock
test
outsl
mov
inc
fxch
push
push
or
subb
lea
push
sbb
mov
stos
pop
pop
iret
pop
sbbb
xor
rep
cmp
std
jecxz
cmpsl
xchg
add
pop
pop
jge
mov
fs
ret
jp
push
xlat
hlt
ror
into
mov
scas
pop
push
cld
lcall
cmp
pop
xchg
dec
push
shrb
mov
or
aas
cli
mov
roll
addb
cltd
aam
fsubrs
inc
and
sub
pop
jmp
sub
arpl
add
adc
jae
sbb
lahf
das
dec
pop
cmp
cmp
adc
xor
push
shr
and
inc
lea
in
icebp
add
and
int
adc
mov
add
stc
out
or
test
out
stos
and
push
jmp
dec
lock
mov
push
mov
push
ja
or
mov
mov
xor
mov
shrl
mov
push
jne
or
int
dec
addr16
in
mov
lcall
mov
loop
mov
mull
xchg
shll
push
mov
lret
test
and
pop
mov
lahf
daa
out
push
add
pop
stc
and
arpl
xchg
mov
mov
inc
xor
fsubs
clc
arpl
xor
bound
icebp
psubusb
arpl
dec
into
sbb
dec
adc
xchg
pop
add
jp
jg
mov
fxch
jle
push
push
ret
sbb
dec
fstps
cld
clc
sbb
sub
into
inc
shrb
cwtl
mov
ret
cmp
dec
in
or
jo
xor
jbe
sahf
sbb
shrl
push
pop
call
cmpsl
xor
ds
dec
jecxz
dec
or
pop
loope
loopne
lret
sub
test
jecxz
cmc
std
push
xchg
cmpsl
gs
int3
dec
loopne
jo
loope
test
bound
lret
push
or
dec
pushf
loop
jp
push
and
scas
or
insb
cmp
fwait
aaa
mov
xor
xchg
mov
andl
pop
xor
cmp
nop
cli
cmc
xchg
sub
push
cmp
and
ret
call
pop
dec
ret
mov
flds
int3
das
repnz
data16
popa
add
into
sub
out
jbe
mov
out
cmpsl
adc
cs
adc
cmp
test
adc
ret
inc
aad
and
mov
push
sbb
and
gs
sub
out
mov
jp
adc
test
sbb
out
xchg
sti
sbb
sahf
rclb
pop
cwtl
sti
aaa
lret
test
insl
xchg
les
daa
xlat
pop
popf
lahf
mov
xor
outsb
scas
shr
outsb
hlt
adc
push
das
rcrb
add
icebp
xchg
inc
inc
cmp
xor
inc
lods
fs
jb
xchg
notb
or
jbe
push
pop
push
adc
arpl
xchg
call
scas
in
adc
jns
popf
gs
jns
shr
lock
xlat
mov
adc
add
loope
out
xchg
or
adc
testl
adc
cmp
xchg
aam
add
aaa
fistps
cmc
lods
lret
jns
loope
das
mov
inc
pop
out
inc
adc
dec
loope
jg
fwait
cmp
pop
push
arpl
and
call
and
push
jmp
mov
into
in
std
sub
fnstenv
adc
xlat
adc
mov
pop
adc
dec
mov
dec
add
pop
pop
xor
pop
xchg
xor
cmc
jns
xchg
repnz
sub
cld
adc
mov
lds
mov
xchg
out
fdiv
repz
lods
or
inc
push
dec
inc
andb
scas
mov
and
clc
jge
movhps
pop
or
es
leave
push
pop
rorl
outsl
cmp
jno
inc
jl
out
pop
push
inc
add
je
jle
cli
mov
cmp
or
cmpsb
add
jno
pop
cmp
fsub
pop
loopne
rolb
inc
sbb
add
call
js
roll
push
cmpsb
add
js
fildll
stos
dec
sahf
pop
fistps
inc
push
sub
stos
mov
fdivp
outsl
ja
cmp
cmp
aas
mov
xor
rorb
cmp
lahf
loopne
mov
rolb
icebp
pop
out
loope
and
clc
mov
sub
push
sbb
fwait
je
out
test
in
pusha
fwait
mov
push
add
mov
pop
adc
jmp
stos
ds
xlat
lods
mov
sub
mov
in
push
out
xchg
inc
sbb
adc
jne
lret
add
in
sbb
cmp
push
iret
popf
mov
leave
adc
cmp
and
push
movsl
mov
sub
inc
scas
mov
push
push
stc
jecxz
popa
sahf
out
mov
pop
in
and
mov
sbb
dec
push
fstpl
adc
inc
out
stos
lret
popa
cs
jle
mov
dec
adc
xchg
mov
jno
xor
icebp
add
cmpb
ja
lods
mov
jmp
or
xor
testl
imul
sbb
cmp
xor
outsb
test
xor
testl
add
daa
cltd
js
adc
and
sbb
or
pop
jbe
mov
pop
pop
adc
test
cmp
xchg
pop
daa
cmp
enter
xorb
cli
add
pop
test
dec
loopne
popa
je
jmp
xchg
popa
ss
add
adc
sub
inc
sti
sub
popa
mov
pop
jmp
xor
stc
in
push
fidivrl
adc
lock
inc
dec
out
mov
popa
push
jle
lret
jbe
xor
decb
cli
mov
pop
clc
xor
cmp
imulb
dec
pop
push
out
lret
in
movsl
inc
rorl
data16
lret
std
mov
xchg
out
push
jae
fisubrl
xchg
dec
in
loope
dec
loopne
stos
mov
lahf
dec
adc
loope
inc
daa
aas
into
mov
cmp
ss
subb
div
in
jns
sbb
cmp
daa
sbb
std
out
fdivs
dec
cmc
push
lret
stos
testl
add
pop
adc
mov
popf
out
les
popf
repz
jl
cltd
in
mov
addb
aam
dec
jl
push
lds
outsb
test
jnp
je
push
sti
push
and
lods
adc
cmp
cld
pop
adc
ljmp
sub
fs
mov
pop
or
inc
out
lods
cmp
ficoml
pop
les
mov
push
jnp
aas
shll
push
in
mov
mov
mov
and
mov
test
mov
and
xor
into
xlat
test
mulb
jle
movsl
lods
add
cltd
mov
and
out
dec
in
pop
aad
pusha
xorl
cld
out
jmp
scas
cmp
jno
pop
xor
incb
sahf
scas
xchg
notb
sub
mov
lcall
in
xor
pusha
les
dec
cmpsl
and
push
lods
mov
push
jno
and
xor
sbb
int
jecxz
sub
sbb
movsb
fstps
jp
cmp
mov
ljmp
lds
ucomiss
or
loopne
sub
ret
fiadds
mov
and
fwait
dec
fwait
jne
dec
sbb
mov
stc
and
jl
xor
push
test
repz
sbb
mov
push
or
push
fld
and
mov
mov
gs
adc
mov
loop
imul
lret
inc
loope
repz
into
cmp
jbe
xor
pop
insb
lret
pop
ret
dec
sbb
outsl
cmp
sub
lock
pop
cmp
mov
shrl
jl
sbb
add
xchg
dec
popl
and
in
pop
dec
inc
loope
int3
leave
stos
xchg
and
mov
pusha
push
call
aam
fcomp
punpckhbw
or
loop
mov
mov
or
mov
cmp
insl
pop
push
hlt
outsb
inc
mov
outsb
xchg
pop
imul
dec
xchg
inc
cmp
repnz
or
cmp
jae
and
adc
push
out
fmul
mov
mov
cmp
adc
push
pop
sar
call
mov
fadds
inc
jb
jle
sahf
loopnew
fwait
pop
and
mov
sar
adc
mul
lahf
fucomip
sarl
pop
fs
add
hlt
repnz
push
insl
jne
mov
ret
call
lock
fistps
jg
sub
fs
sub
int
cmp
std
pop
inc
mov
sbb
dec
shlb
lock
fldcw
mov
xchg
xchg
and
daa
fsubrl
iret
int3
cmpsb
sub
push
pop
and
mov
cmp
xchg
pusha
sarb
push
faddl
scas
adc
cmp
pop
mov
adc
inc
sbb
push
shll
or
push
adc
mov
inc
adcb
add
push
repnz
jle
sahf
je
js
cmc
int3
pop
push
fmuls
mov
mov
push
into
mov
sub
jmp
sahf
dec
jp
shlb
xchg
shrl
outsl
pop
popf
pop
pop
in
imul
dec
jl
push
fdivl
pop
jne
xchg
mov
ficoms
fstpl
jl
mov
lea
mov
ljmp
pusha
mov
pop
sbb
xchg
cmp
pop
inc
mov
or
push
int3
sbb
stos
adc
sahf
mov
xor
push
rol
outsl
out
shll
call
jne
frstor
jl
in
mov
push
insb
pop
xor
cmp
jp
ja
inc
int3
pop
pusha
in
sub
adc
inc
sahf
sahf
dec
in
dec
addr16
in
andl
repz
jne
mov
outsb
lds
addr16
push
xchg
jl
add
jbe
cmpl
shlb
mov
mov
in
fidivrl
push
add
pop
repnz
inc
stc
data16
push
push
mov
xchg
out
inc
in
mov
jns
hlt
subl
mov
sbb
xchg
fistl
xchg
dec
pop
mov
dec
shl
les
sub
jbe
sub
and
mov
paddd
cmpsb
sti
push
dec
idivb
loope
push
mov
lea
cmp
repz
push
dec
rcrb
js
cwtl
add
add
adc
mov
sub
inc
cmc
ljmp
xchg
xchg
jns
shll
dec
fidivl
out
mov
in
inc
dec
xchg
out
push
roll
push
add
jae
inc
sbb
ret
iret
aam
adc
lret
push
int
and
and
sahf
sub
pop
subb
mov
lret
mov
push
fnstcw
loope
sbb
dec
push
inc
and
jl
test
xchg
push
pop
push
cltd
in
cwtl
aaa
sub
rdpmc
xchg
pop
jns
lahf
xlat
push
js
out
push
lcall
daa
push
mov
loope
pop
lea
jno
sub
cli
mov
cmpsl
mov
iret
and
or
adc
cld
mov
or
jne
icebp
call
and
pop
jae
sbb
jb
es
jge
rcr
pop
movsb
aas
sub
call
mov
ret
jbe
pop
rcr
xlat
fstp
add
dec
js
sub
push
ja
adc
inc
daa
push
sub
push
mov
int3
push
push
xchg
subl
test
jmp
fxrstor
mov
pop
stos
pop
cmpl
std
in
mov
inc
sub
fs
lock
rorl
movsb
arpl
sarl
xor
inc
movsb
cmp
out
out
jb
fiaddl
jnp
out
dec
xor
mov
dec
shrl
aas
rcr
std
xchg
adc
cltd
or
and
inc
pop
or
push
sbb
mov
aas
hlt
data16
adc
out
and
and
lret
cltd
mov
sub
andnps
mov
cmp
aad
cli
adc
loopne
mov
dec
test
aam
inc
pusha
xor
scas
lret
out
icebp
pop
flds
push
fdivl
fucompp
xor
and
xchg
repz
jmp
pop
xchg
ss
movsl
imul
inc
sub
fimuls
sub
call
test
cwtl
out
in
sbb
call
jg
sub
xchg
xor
inc
pusha
scas
mov
xchg
push
orl
or
cmpsb
popa
add
push
imul
int3
sahf
mov
push
inc
lret
sub
adc
shrl
repz
push
pop
repz
enter
pop
int
add
mov
cmp
les
inc
mov
mov
iret
mov
and
getsec
bound
jo
ficompl
scas
add
adc
outsl
adc
and
in
jge
rolb
les
sti
xchg
faddl
mov
repnz
jns
jae
cmp
stos
out
int
scas
push
pop
push
nop
fisubl
in
jne
jnp
cmpb
mov
and
rorl
movsl
xchg
mov
divl
mov
movsl
data16
test
popa
push
out
lea
cmp
enter
lahf
cmc
subb
ficoml
add
repz
ja
cmp
ret
jbe
inc
jne
test
pop
sub
xlat
hlt
dec
scas
imul
xchg
pop
insl
jmp
cwtl
outsb
mov
outsl
movsb
lods
and
pop
dec
pop
bound
pop
lods
mov
mov
mov
dec
and
jmp
xchg
movsb
mov
icebp
loopne
neg
jae
pop
inc
fs
pop
bound
push
xchg
mov
mov
mov
leave
ljmp
arpl
std
hlt
nop
xor
and
rorl
loop
das
pop
shlb
fidivs
xor
pop
jae
and
daa
mov
add
pop
dec
push
idivl
fisttpl
lds
arpl
int3
lret
or
mov
sub
rcrl
lods
cmp
mov
sbb
sub
mov
sub
out
popa
dec
pop
mov
ds
sahf
scas
sub
add
jbe
adc
sbb
fidivs
push
add
fadds
cmp
xor
cmp
push
ja
ficomps
lods
jmp
aad
push
aad
push
dec
sbb
clc
out
loope
jae
mov
test
jae
ret
add
repnz
aad
and
mov
or
adc
fidivs
and
cs
cmp
xchg
or
mov
fwait
add
push
int
pop
xor
nop
repz
cld
mov
cltd
dec
repnz
jge
add
loop
sub
leave
icebp
inc
mov
lahf
hlt
cmc
or
push
and
jns
imul
lea
hlt
shlb
mov
sbb
cmp
push
lahf
push
mov
or
aaa
add
bswap
xchg
pop
mov
mov
push
fldpi
imul
inc
insb
fdivp
xchg
mov
push
xchg
cmp
test
jb
mov
jns
stos
xchg
pop
fucomip
out
xor
pop
cmp
ret
mov
jg
adc
popf
or
and
xchg
mov
add
popf
lcall
adc
pop
insl
add
xchg
sarb
push
inc
mov
fwait
xor
lods
orl
in
pop
fdiv
jmp
add
mov
das
inc
and
fsubrs
gs
pop
fsubs
stos
dec
inc
sbb
or
sub
pop
add
gs
adc
fbld
inc
pop
sub
stc
pop
lock
xorb
pop
negl
rorl
enter
xor
incl
mov
lret
ret
fldl
xor
je
dec
into
push
fdivrs
jnp
push
or
divl
jmp
xchg
mov
gs
xchg
push
xchg
push
jle
mov
or
jo
ss
push
add
outsb
ds
cli
adc
nop
cmpsb
std
pop
sahf
in
in
fidivs
inc
jnp
dec
add
jne
ljmp
aad
test
movsb
jae
je
out
jp
xchg
inc
mov
or
jae
cmp
dec
adc
sbb
pop
addr16
xchg
inc
mov
fildll
pop
push
pop
inc
or
sarb
pop
mov
pushf
ljmp
rcrb
ss
out
jecxz
or
push
push
out
mov
add
hlt
push
adc
pop
lcall
pop
mov
test
push
ret
roll
mov
xor
es
cmp
ret
cltd
cmc
cmp
xchg
jns
push
cmpsb
mov
loopne
insb
inc
mov
stos
mov
cmp
xor
les
mov
xchg
cmpsl
fs
jae
ds
ror
fs
addr16
popf
sub
mov
pop
or
dec
inc
fdivl
mov
jae
jecxz
mov
jl
push
sahf
push
jbe
push
push
pusha
mov
sub
cs
xor
stos
sti
cmp
jmp
jl
push
test
fisttpl
sub
repnz
pop
out
in
ljmp
and
adc
xchg
lods
inc
jno
out
icebp
jecxz
jbe
setg
lcall
jne
ja
sarb
mov
lods
xor
popa
cmp
adc
idiv
outsb
aad
adc
mov
shrl
lock
push
or
xchg
inc
aaa
ljmp
fdivl
sub
je
daa
push
divl
jmp
add
pop
mov
inc
andl
mov
orb
sub
int
adc
add
push
andb
dec
imul
pop
js
pop
das
out
mov
daa
iret
adc
enter
sub
adc
jp
call
mov
jmp
fsubrs
inc
pop
pop
repz
and
mov
cld
adc
jp
xlat
xchg
gs
or
mov
or
or
test
pause
stc
ljmp
lds
imul
mov
pushf
add
scas
ffree
scas
sbb
inc
std
or
testl
fwait
inc
das
and
and
mov
jecxz
mov
sbb
dec
sahf
bnd
scas
or
push
xor
xchg
push
pop
jecxz
loop
icebp
movl
and
add
arpl
mov
mov
cmpsb
es
es
les
ljmp
les
addr16
ja
aam
lret
pop
cli
outsb
fidivl
mov
sti
out
pop
shrb
add
clc
rorb
aaa
test
mov
jns
ja
andl
leave
push
movsb
sarb
and
adc
cli
repnz
sub
data16
daa
mov
jae
mov
push
push
enter
js
jmp
or
repz
mov
sbb
mov
inc
andb
add
xchg
pop
mov
bts
jle
jl
mov
fcmovnb
lea
mov
das
jecxz
fnstsw
pop
dec
pop
cmp
jne
or
lods
and
pop
cli
mov
and
inc
das
ds
cmp
cwtl
punpckhdq
hlt
lock
pop
call
pop
inc
push
mov
sbb
lea
xchg
and
push
sti
clc
movsb
xor
cmpsb
and
lret
mov
shl
icebp
pop
pop
mov
js
sti
push
in
add
mov
dec
mov
push
push
movsl
push
jb
xchg
adc
and
jbe
leave
xorb
sbb
or
xchg
insl
arpl
test
pop
mov
mov
mov
and
push
daa
out
scas
mov
sbb
je
pusha
adc
cs
mov
jnp
popf
xchg
mov
pop
movsb
cmp
jb
out
mov
add
mov
lea
sub
mov
fmull
pop
fnop
and
call
les
push
lods
outsb
imul
mov
imul
clc
jl
jbe
ds
fisttpl
scas
or
add
mov
sbbl
iret
push
pop
je
jnp
imul
repnz
gs
fwait
and
and
aam
jo
cmpsl
jl
xor
int
sarl
add
mov
popa
das
je
or
ljmp
mov
mov
stos
sub
push
out
pop
in
push
into
hlt
jns
loope
ret
sar
jp
mov
mov
adcb
ja
jne
shl
fbld
imul
push
addl
out
fmull
dec
add
cmp
lcall
push
jmp
mov
ret
inc
sub
xor
push
jnp
les
cs
xor
xor
pop
or
push
jne
jnp
xor
jo
in
sub
add
cli
les
push
fldl
int3
inc
mov
mov
add
arpl
mov
xchg
pop
popf
sbb
push
mov
aas
sub
cli
dec
sbb
push
mov
adc
cmp
jl
rorb
addr16
test
adc
nop
pusha
fwait
sbb
loopne
std
stos
mov
cmpsb
add
mov
pop
stos
mov
loope
sti
scas
xor
hlt
popa
cmp
in
bound
es
or
divb
inc
mov
daa
adc
pop
movsb
jnp
jl
int3
jecxz
out
mov
lcall
aad
out
jmp
int3
mov
pop
daa
cmp
lret
adc
jnp
cmp
inc
xorb
sbb
pop
jns
out
adc
test
iret
inc
lahf
fcoml
mov
shll
or
xlat
arpl
or
sbb
scas
sbb
inc
idivb
xor
and
add
test
or
lds
cld
cld
adc
stos
sbb
sbb
in
mov
movlps
and
aad
dec
inc
adc
push
inc
gs
mov
popl
push
add
mov
aaa
lret
sbb
and
sbb
pop
je
cli
mov
cmc
fucomip
inc
or
loope
jae
mov
stc
lea
mov
push
push
jg
xor
out
jge
fucomi
mov
mov
jae
push
scas
xchg
int
pop
movsl
test
loope,pt
sub
jge
xor
mov
ret
xchg
fimuls
pop
icebp
sub
xor
push
clc
les
in
mov
xor
adc
xchg
pop
das
jbe
xor
push
mov
and
mov
in
mov
dec
sbb
fbstp
cli
xchg
cmp
dec
adc
jb
rorl
xchg
mov
ret
xchg
shl
ss
testb
call
and
mov
jl
into
mov
add
push
push
cs
mov
add
adc
insb
insl
test
push
in
mov
push
arpl
jp
mov
push
stos
push
insl
bound
mov
popf
test
test
lock
ret
pushf
pop
mov
sub
repz
xchg
out
mov
sub
pop
pop
mov
ja
aam
out
push
ja
imul
or
dec
mov
int
sbb
fisttps
sti
clc
pop
into
popf
jg
xchg
adc
jbe
cwtl
enter
icebp
mov
lahf
mov
xchg
lahf
push
aas
loope
sbb
dec
mov
mov
or
jle
jle
mov
mov
roll
pop
js
fisubl
inc
jg
xor
mov
ret
pushf
js
push
mov
fistps
mov
icebp
addr16
cmpsb
fsubrs
aas
inc
int
les
cmpsb
dec
or
ja
lahf
lods
xchg
jl,pt
movsl
add
jbe
inc
inc
movsl
shl
dec
clc
fldz
std
dec
mov
and
int3
add
jo
nop
sbb
cmc
mov
jge
sbb
xchg
pop
add
ja
pop
xlat
sbb
sbb
daa
mov
jne
sbb
mov
xorb
pop
das
jo
mov
mov
aam
out
sub
jne
mov
adc
pushf
cmp
insl
pop
movsl
mov
sbb
xor
and
stos
sub
lock
sarl
adc
movsb
mov
mov
sbb
cwtl
inc
add
mov
mov
lods
and
popa
or
aam
arpl
andl
das
sub
xchg
and
mov
ficoms
xchg
mov
loop
or
scas
cli
test
stos
inc
mov
cmpsl
ja
mov
scas
ret
movsb
pushf
xchg
ret
aad
leave
inc
and
mov
or
mov
int3
push
jecxz
mov
adc
cmp
cld
test
inc
mov
aaa
sub
xor
sub
xchg
dec
mov
add
lahf
das
mov
mov
mov
int3
loope
sahf
cmc
push
xor
pop
scas
pop
cmp
xor
fcoms
xor
std
mov
movsb
outsl
jp
out
inc
mov
sub
sbb
nop
fucom
jg
jg
and
rclb
cmp
pop
jno
lods
xchg
xor
sub
mov
scas
sbb
scas
idivb
inc
out
je
icebp
sub
push
mov
cmpsl
ficompl
mov
pusha
mov
and
jnp
jp
clc
stos
bound
fs
out
jecxz
ficomps
xchg
dec
xchg
cmp
call
xor
sub
stos
fnop
lock
push
adc
pop
out
pop
lea
adc
ljmp
iret
mov
lods
mov
xor
sbb
test
cld
les
mov
jnp
pushf
jo
cltd
cltd
add
cmpsl
ljmp
add
and
adc
je
pushf
adc
inc
dec
dec
andl
dec
mov
pop
lods
push
sahf
insb
mov
pop
mov
fistpll
in
xor
xchg
sub
xor
cwtl
testl
sub
sub
and
push
mov
mov
dec
pusha
test
icebp
adc
ret
xchg
mov
push
and
out
mov
jp
push
xchg
jmp
inc
iret
mov
dec
adc
lret
scas
sbb
or
lods
sbb
cmpsb
xor
mov
rcrl
jg
loopne
cmovnp
push
xlat
sub
test
mov
ja
push
jns
scas
inc
adc
fdivp
mov
or
fnstcw
iret
sub
aaa
stos
jns
pop
aam
jae
sub
sbb
scas
jno
adcl
stos
popf
pop
js
bound
sbb
popa
dec
mov
dec
push
int3
xchg
hlt
and
push
mov
mov
mov
sbb
fists
and
lcall
data16
jno
or
add
imul
call
push
int
push
cmp
repnz
fwait
and
scas
cli
fsts
leave
sub
sub
push
xor
mov
push
sub
jl
imul
jle
jne
test
inc
and
push
nop
popa
jbe
fistl
lcall
xor
mov
sub
add
and
repz
sbb
inc
mov
mov
rcll
hlt
dec
or
mov
scas
ljmp
sti
push
xchg
jecxz
or
insb
and
movsl
movsb
sub
jns
rdpmc
and
jno
gs
subl
jne
push
fst
pop
sub
mov
push
mov
jmp
xor
mov
addr16
rcll
clc
lods
scas
sti
fldcw
lret
fwait
or
sbb
lods
push
push
out
das
mov
add
inc
jae
sbb
jmp
xchg
insb
mov
mov
push
push
mov
xlat
fildl
dec
and
mov
iret
dec
adc
and
and
sbb
cmp
sbb
mov
jbe
out
stos
lret
cmp
xor
loop
add
mov
xor
adc
paddd
add
adc
cmpsb
and
out
mov
adc
xchg
pop
add
push
xchg
dec
pop
movsb
sbbb
test
stos
xchg
fisubs
sub
lods
movsl
sbb
lds
mov
xchg
pop
jb
xor
and
push
sbb
or
cli
sub
shlb
cltd
and
or
lods
addl
mov
ret
lahf
imul
out
inc
sti
add
insb
sbb
stos
pop
or
rcrl
fdivp
nop
mov
repz
lret
cmp
ss
push
xchg
mov
outsb
cmpsb
imul
pop
pushf
push
xor
xor
inc
es
lods
lahf
push
aaa
mov
xor
inc
cmp
mov
mov
mov
push
fwait
cmp
push
scas
lods
imul
and
add
shll
adc
in
fiaddl
pop
or
adcb
loopw
mov
fidivl
jae
xorl
aad
dec
cmpl
gs
fstpt
repnz
pop
xchg
sub
mov
into
xchg
out
aad
pop
std
lea
insb
inc
cmpsl
mov
push
fisubrs
dec
mull
inc
nop
pop
rcl
pushf
insl
sub
pop
jg
and
sub
push
add
les
xchg
lcall
xchg
cmp
inc
icebp
cmp
mov
clc
add
sbb
dec
cmp
or
lahf
lods
or
popf
insl
cmpsl
adc
mov
inc
pop
or
in
loope
or
in
mov
icebp
nop
std
add
sub
mov
mov
std
xchg
cmpl
mov
dec
lods
cmp
fmull
test
fisubrs
sub
repz
aaa
inc
sbb
cmp
xor
ljmp
cli
dec
ret
cmp
imul
shr
push
inc
ss
lret
cmp
sbb
mov
mov
push
js
inc
int
into
dec
repz
pop
mov
sti
jbe
dec
pusha
xchg
push
lods
enter
mov
lret
xlat
sti
jns
add
adc
lods
mov
ss
or
adc
dec
sub
sub
daa
in
das
stos
xchg
xadd
inc
sub
std
mov
jle
int
pop
jl
xchg
mov
jb
add
and
popa
jb
popf
and
inc
sub
outsb
clc
aad
mov
dec
pop
push
faddp
jp
dec
pop
xchg
enter
mov
stc
dec
and
sub
std
lret
fnstsw
pop
ret
jnp
test
fisttpll
xchg
pop
mov
jb
xchg
arpl
lods
mov
hlt
xchg
ret
stos
out
jge
xlat
aad
sarb
and
jo
hlt
jecxz
jae
push
incb
ret
mov
fidivl
xor
imul
daa
adc
push
push
bound
mov
rclb
out
or
sbb
dec
shlb
inc
mov
inc
mov
out
sbb
rclb
call
mov
fdivl
mov
xchg
fsts
lret
cli
fldcw
mov
inc
stos
js
outsl
test
push
push
add
bnd
fnstcw
sbb
fnsetpm(287
or
and
ss
xchg
sbb
sahf
cmp
out
in
mov
imul
jl
jbe
mov
repnz
inc
adc
xorb
decl
loopne
adc
sar
mov
ja
sub
xor
sub
xchg
inc
dec
and
lahf
or
sahf
jp
js
jmp
gs
xchg
or
mov
cmp
bound
dec
sub
lods
out
scas
sub
xchg
mov
int3
jae
or
jmp
addr16
aaa
stc
fsubr
ljmp
cwtl
fmull
sar
jge
test
cwtl
loope
sbb
int
adc
stos
mov
pop
sbb
cmpsb
jns
xchg
dec
pop
mov
in
int
scas
out
aas
jle,pn
lea
lea
xor
cli
int3
js
and
and
ret
mov
push
mov
mov
push
xor
stos
and
fsubs
push
or
cmp
adc
test
inc
sbb
pop
iret
mov
scas
sbbb
mov
shr
popa
and
sbb
xchg
imul
subb
inc
cli
enter
aas
fwait
popa
jno
dec
repz
sbb
lahf
sarb
and
ja
mov
scas
call
xchg
adc
jmp
and
xchg
cltd
scas
test
or
insl
cmp
or
dec
lea
jb
les
or
fwait
cmp
adc
scas
test
sbb
movsl
repnz
movsl
xor
cli
js
popa
iret
xor
inc
sbb
in
mov
popa
fiaddl
and
dec
xor
sahf
leave
out
push
call
leave
aas
clc
xor
pop
in
pusha
inc
and
push
inc
les
dec
xchg
loop
inc
rorb
mov
sub
xor
xchg
call
test
shrl
fisttpl
mov
inc
ss
in
mov
jmp
add
sti
aam
lahf
nop
mov
or
sbb
inc
orl
pop
in
mov
dec
mov
mov
mov
loope
arpl
xor
inc
dec
adc
inc
xor
mov
rcl
dec
mov
out
add
in
insl
call
jne
add
cmc
xor
outsl
fsubl
and
lret
jae
sarb
lock
in
cld
shl
fcompl
adc
pop
xchg
fcmovb
daa
data16
xchg
out
loopne
or
mov
pop
jno
cltd
mov
push
movb
sbb
adc
sarb
mov
sbb
push
mov
into
jmp
mov
int3
out
and
cltd
pop
xchg
pop
xchg
dec
add
imul
and
jne
push
mov
add
idivl
loope
and
or
xchg
dec
mov
stos
inc
cmovp
pop
aam
das
repz
xor
fimuls
bound
andl
pop
loop
fwait
mov
add
es
mov
pop
mov
adc
cltd
sbb
fs
cwtl
popf
push
mov
cmp
ja
repz
adc
add
out
out
fnsave
faddl
cld
cltd
mov
outsb
mov
add
adc
jp
jbe
adcl
dec
repnz
dec
xchg
insb
push
iret
lea
xchg
shl
dec
in
imul
sbb
repz
mov
shrb
add
pop
cmp
into
jmp
andb
add
iret
sub
popf
fldenv
lcall
jne
les
or
and
leave
xor
cmc
mov
test
mov
daa
scas
and
cli
cmp
pop
inc
xchg
lret
rorb
rorb
mov
inc
mov
repnz
pushf
push
leave
adc
pop
sub
aaa
pop
and
jmp
fmuls
and
enter
and
xchg
sbb
dec
xchg
sbb
int
mov
pusha
adc
lods
and
lds
cli
loope
dec
cmp
push
jb
xor
jmp
das
pushf
nop
outsb
jne
jns
enter
cmp
jmp
cmp
lock
aas
xorb
xchg
mov
jns
inc
sbb
iret
xchg
xchg
and
cmp
push
push
xrelease
call
jo
dec
add
xor
in
fdivrl
mov
xor
test
xchg
sbb
movl
mov
or
fdivrl
ss
lods
adc
push
xor
pop
addb
mov
int3
xor
mov
xor
stos
pop
shll
lret
dec
inc
loope
fstps
xchg
mov
stos
test
mov
push
and
pop
lods
pusha
cmpsb
insl
xchg
mov
jmp
xchg
sub
xor
bound
cmpsb
jne
inc
sub
xor
dec
pop
xor
xorb
jp
add
or
adc
and
cld
iret
jle
dec
mov
cmpsl
jecxz
push
cmp
outsb
mov
inc
or
stos
popa
cmp
or
fiadds
cld
imul
fwait
pop
inc
sub
sbb
jnp
ror
mov
int
mov
fidivl
lock
mov
sbb
mov
sbb
fwait
jge
mov
push
push
jo
daa
push
lock
add
stos
cli
jl
test
nop
adc
leave
xchg
aaa
pop
xor
aam
xchg
sbb
pop
or
in
fstpt
lods
clc
mov
adc
dec
iret
ficompl
in
dec
xchg
adc
xor
testb
mov
les
in
xchg
cli
add
fcom
jge
shlb
sub
jns
jmp
lahf
cmp
mov
fisubl
inc
and
pop
inc
dec
xchg
test
das
imul
mov
shr
push
mov
cmpsl
dec
pop
add
xchg
inc
enter
jmp
jp
adc
xor
push
gs
mov
insb
outsl
xchg
add
imul
pop
push
insb
movsb
add
sub
jae
sub
jae
and
push
repnz
push
jg
xchg
ret
popa
xchg
loope
cmc
add
inc
push
fs
subb
adc
and
cmp
lock
stos
std
push
pop
jns
adc
inc
push
into
subb
and
sbb
fcomip
mov
xor
shll
in
sbb
dec
test
lock
adc
lret
xchg
orl
in
adc
inc
mov
xor
push
or
inc
scas
jno
dec
lret
xchg
push
add
repz
dec
jle
lds
jbe
call
lea
lea
inc
roll
out
out
sub
or
jae
sub
adc
fs
jns
or
out
and
ret
inc
pop
ja
inc
mov
pop
and
dec
iret
mov
iret
fs
icebp
inc
add
add
test
enter
or
and
xor
repnz
lock
jbe
rclb
sbb
xchg
dec
push
shrl
loopne
in
sub
or
xchg
shll
and
mov
jae
push
mov
push
shrl
stc
jne
inc
pop
imul
sub
fcoms
fistl
cli
inc
inc
jg
xchg
int3
mov
jbe
ljmp
sbbl
push
cltd
adc
jmp
shrb
cs
pop
xor
fwait
xor
aaa
scas
xchg
pop
es
addr16
leave
jecxz
into
sbb
xor
xor
aaa
push
int3
jmp
xor
popa
add
xor
lea
icebp
lods
mov
xor
jl
mov
mov
dec
xor
enter
pop
push
sbbl
insb
add
rcll
sbb
dec
ret
test
andb
push
and
arpl
sbb
jns
mov
xor
lea
xor
xor
jns
xor
lcall
stc
cwtl
fstps
scas
les
sti
lds
lahf
push
mulb
add
sahf
dec
xchg
or
enter
jo
cmc
and
in
lret
dec
mov
xchg
mov
push
push
notb
xchg
outsb
xor
rorl
je
fcmovbe
pop
push
lea
pop
lods
or
inc
scas
dec
fs
xchg
inc
pop
mov
push
outsl
dec
jg
repz
repnz
out
mov
rol
leave
mov
out
ficompl
mov
xor
adc
lods
js
shll
inc
js
shll
in
xchg
cmp
pop
lods
dec
into
push
mov
fwait
jo
mov
test
mov
mov
sub
sub
sbb
ret
mov
out
adcl
insl
dec
shld
out
push
mov
subl
scas
mov
shr
adc
lcall
sahf
add
in
repnz
jecxz
es
test
into
dec
call
xchg
push
or
jns
lea
test
push
jp
inc
xor
jmp
insb
or
cmpsb
xchg
xchg
sbb
daa
pop
test
push
ja
sarl
out
mov
mov
in
cwtl
pop
loop
mov
dec
cmp
cmc
lods
sti
lea
popa
xor
mov
and
loopnew
test
pop
cli
pop
loope
mov
in
add
outsl
popa
lock
sub
cmp
and
stos
in
bound
sarl
fadds
shrb
xchg
adc
sbb
mov
popf
jge
jl
stos
sbb
dec
jp
int3
icebp
sbb
dec
std
mov
shr
push
jge
dec
gs
lds
ja
mov
mov
pop
push
push
sar
pop
adc
adc
lea
pop
push
cmc
imul
jg
pop
out
icebp
movl
pushf
push
cmc
pop
add
or
scas
xchg
fwait
inc
jl
pop
dec
mov
cs
shrl
push
loopne
in
cmc
mov
push
loope
dec
dec
test
cmpsb
lods
stos
das
pop
movb
shlb
push
push
push
xchg
jb
cmp
and
jg
xchg
test
inc
mov
imul
dec
cmp
sahf
scas
shl
pop
ss
loop
xor
add
adc
insb
or
jecxz
lods
sub
push
mov
mov
decl
cmpsb
mov
int
jns
out
in
out
in
insb
jecxz
inc
repnz
xlat
jo
sarb
and
cmp
repnz
mov
pop
test
or
mov
dec
popf
and
inc
clc
pop
icebp
xchg
cmpsb
pop
and
mov
mov
fldt
out
mov
mov
inc
inc
icebp
cs
loopne
jp
lock
mov
flds
pop
mov
push
jp
sub
mov
xlat
mov
je
pop
sub
lock
lret
sub
shrl
or
sub
xchg
scas
and
faddl
in
cld
cld
pop
lahf
cmpsb
xchg
enter
rcpps
stos
lods
aaa
and
push
jo
cli
jbe
notb
xchg
fs
sbb
dec
popa
pop
rcrb
dec
adc
cmpsb
inc
xlat
sbb
stos
sub
scas
pop
dec
ljmp
shlb
add
nop
repz
rcl
ss
addr16
xchg
mov
cli
pop
or
inc
dec
sti
decl
mov
outsl
je
mov
push
outsb
or
mov
pop
cmp
xchg
mov
lahf
sub
add
xor
fbstp
xchg
push
mov
rcrl
addr16
pop
push
leave
out
push
jle
sbb
push
cli
dec
add
mov
cltd
in
lcall
loopne
fists
std
scas
or
sahf
push
leave
cmp
pop
sbb
sbb
insb
stos
fmulp
stc
arpl
setae
dec
xchg
enter
scas
xor
repnz
xchg
pop
fisubrs
arpl
jnp
test
adc
sbb
cmp
sbb
pop
pop
scas
push
push
inc
mov
cmp
or
cmpsl
fstpl
mov
push
dec
lret
arpl
lret
ss
push
xor
mov
push
or
gs
subl
fcompl
mov
lea
mov
test
cli
cmp
push
jg
push
arpl
inc
adc
das
pop
cmpsb
mov
push
xor
ficompl
sbb
xchg
cmp
fldcw
push
sar
pop
fisttpl
adc
or
mov
leave
xchg
sysexit
xlat
loop
add
fstps
popa
sbb
call
and
movsb
and
jo
inc
and
xchg
xor
mov
mov
xor
sbb
push
mov
adc
pop
and
cmp
int
cltd
rorl
inc
inc
mov
outsb
pop
std
push
ret
xlat
xor
testb
jbe
arpl
add
mov
icebp
jge
fwait
add
xchg
add
stos
mov
xor
jmp
push
lds
notb
orl
cmp
dec
loopne
adc
inc
test
inc
cltd
mov
or
lahf
adc
sbb
es
in
adc
aas
into
mov
movsl
loop
pop
shll
sbb
xchg
xchg
ficoml
cmovle
ds
lret
cmp
stos
addr16
ficomps
ljmp
test
sbb
sbb
push
mov
jae
mov
stc
insb
negl
mov
cltd
pop
pushf
adc
inc
pop
in
out
clc
loopne
mov
mov
or
mov
dec
mov
out
dec
movsl
mov
ficomps
gs
cmc
or
lock
cmp
std
mov
fs
dec
js
clc
push
roll
xchg
inc
imul
daa
into
cmp
dec
std
sbb
fildl
adc
mov
mov
std
mov
das
adc
mov
je
out
and
sbb
sub
mov
fidivrs
mov
lods
push
xor
ljmp
inc
pop
mov
int3
or
call
cmpl
test
inc
mov
mov
cmpsb
lret
lock
stos
fwait
aad
out
sbb
xchg
js
js
mov
mov
lods
pop
and
dec
negb
pop
and
test
int3
mov
fnstenv
stos
mov
cvtps2pd
xchg
daa
mov
lret
and
outsb
in
add
mulb
ljmp
and
and
cmp
stos
jmp
ret
inc
inc
push
es
loope
pop
mov
bound
jl
in
mov
sub
jle
stos
movb
call
push
jp
test
push
outsb
jne
xor
cmp
iret
mov
shlb
jl
pushf
les
mov
and
xchg
mov
xchg
push
xchg
cmp
jnp
stos
out
sub
pop
mov
push
popf
and
mov
dec
adc
std
cmc
push
pop
xchg
add
xchg
es
imul
leave
adc
stos
adc
outsb
je
push
or
dec
lea
insb
push
xchg
push
mov
fcoms
in
inc
and
daa
in
add
lds
xchg
push
imul
push
popf
push
aaa
fbstp
dec
push
dec
mov
and
mov
mov
js
movsl
loope
loopne
mov
mov
mov
push
faddl
sub
sti
out
adc
shl
fwait
movsl
sbb
or
ja
lock
gs
pop
xor
lods
test
mov
je
add
nopl
pop
les
sub
pop
pushl
outsl
and
fbstp
mov
cmp
int3
in
sbb
jge
mov
sbb
jo
xchg
aaa
pop
movzwl
pop
mov
fdivr
popf
ret
xchg
jo
sarb
pop
mov
int
mov
dec
sub
faddl
sub
pop
mov
mov
and
cs
mov
and
push
xor
mov
lods
dec
les
or
sbb
adc
iretw
enter
sarl
stos
in
dec
mov
inc
leave
insb
xchg
sbb
in
movsl
icebp
lods
subb
adc
lods
out
pop
xlat
add
jle
mov
push
inc
mov
cmc
dec
pushf
ss
jnp
mov
stc
lea
add
or
xchg
xor
cmc
je
cmpl
mov
out
arpl
addr16
xor
dec
cmp
mov
xlat
cld
int3
std
cmp
ljmp
in
push
xor
jb
loopne
mov
jmp
pop
dec
popf
pop
xor
add
inc
mov
rol
xchg
iret
loope
sbb
aaa
add
xchg
loop
jecxz
push
mov
mov
ret
fnstsw
cmp
and
es
pop
jnp
icebp
lods
sub
cmc
hlt
or
mov
pop
lods
shlb
mov
stos
sub
inc
clc
iret
adc
int3
cli
mov
mov
xlat
and
add
jge
notb
scas
mov
call
pop
dec
sbb
pop
mov
stos
rcr
xchg
aad
push
ja
xchg
sahf
pop
repz
andb
jp
cmp
mov
sub
push
cld
or
sbb
pop
pushf
xor
add
les
mov
lea
mov
enter
aaa
addl
add
js
dec
fdivrl
or
sbb
les
outsb
into
sahf
aas
inc
and
dec
jp
sbb
mov
sbb
dec
sub
add
add
sbb
pop
jp
jbe
out
sub
movsl
cmp
xchg
push
xor
adc
xchg
shl
clc
insb
push
xchg
repz
sbb
fdiv
aam
leave
andl
inc
scas
bound
inc
add
adc
lds
pop
cmp
add
dec
xor
add
cs
stos
pop
stos
cmp
mov
mov
and
jle
mov
sbb
or
sub
lods
ret
push
push
mov
in
dec
inc
std
loop
inc
dec
cwtl
pop
xchg
jne
sub
bnd
aaa
adc
xchg
lds
xor
pop
mov
mov
jno
gs
fcmovnb
out
outsl
mov
or
rclb
mov
adc
or
and
and
imul
lret
xchg
inc
dec
push
mov
fucomip
mov
push
pushf
mov
movsb
addb
jo
mov
or
mov
mov
mov
inc
cmp
push
sbb
aaa
pop
js
pop
fmul
pop
xor
and
aam
xchg
add
popa
dec
xchg
or
das
jg
out
xor
mov
js
mov
fcomps
mov
pmuludq
push
dec
sbb
xchg
outsb
je
mov
cmpsl
cmpsb
xlat
ret
out
xor
enter
mov
adcl
mov
jbe
push
mov
cmp
mov
test
outsl
loop
inc
insb
fdivs
call
divl
xchg
xchg
mov
sbb
sarl
mov
into
or
ljmp
mov
and
jl
inc
pushf
ret
pop
mov
and
mov
divb
sbb
mov
sub
bound
add
rcll
mov
lret
fsubp
rorl
cld
lcall
inc
aad
lods
call
rcl
leave
popa
mov
pushf
lods
dec
rcr
push
fwait
mov
imul
xchg
sti
jmp
lret
mov
and
cmp
popa
push
mov
sbb
or
sub
loopne
pop
mov
or
or
push
mov
loopne
addr16
push
mov
mov
pop
inc
mov
movb
loope
roll
rcrb
cmc
cmp
jb
addr16
jo
aas
aam
push
sbb
fs
subb
cmpsb
cmp
sub
mov
test
in
sbb
xor
movsl
lahf
rep
cmp
addr16
jle
int3
jae
inc
pop
and
in
mov
push
lcall
mov
xchg
inc
adc
and
fcomps
dec
scas
jbe
or
add
pop
movsl
mov
push
sub
sbb
push
jle
xlat
sub
ss
rorl
mov
xor
mov
jmp
arpl
or
dec
ljmp
or
pop
popa
jg
and
pop
scas
xchg
cmp
xor
add
push
mov
out
push
or
dec
jge
popa
mov
ds
insb
dec
xor
adc
aam
xchg
jp
fcom
and
pop
std
loopne
mov
call
adc
movsb
test
and
sbb
outsl
out
out
cmp
dec
cld
sbb
sti
mov
idivb
inc
xor
rdseed
mov
out
nop
mov
and
mov
rclb
stos
sti
movl
gs
nop
lret
mov
push
pushf
in
mov
add
mov
bound
or
int
push
mov
xchg
push
jo
stc
fsubs
push
sbb
xor
fidivl
pop
cmp
xor
mov
pop
push
xor
add
dec
xchg
leave
sub
mov
mov
sar
imul
inc
xlat
es
sti
push
and
mov
add
lret
cld
dec
cltd
dec
insl
and
ret
fsubrp
and
insb
leave
dec
scas
out
stc
pusha
jl
and
add
bound
sti
fiadds
aaa
sbb
cmp
pop
dec
pop
xor
ss
inc
mov
test
jb
mov
push
or
cmp
xchg
test
sub
jp
cmp
cmp
lods
je
xchg
mov
adc
sahf
in
sbb
insl
hlt
in
jl
pop
ret
jns
jmp
pmulhw
dec
stos
in
rorl
sbb
test
mov
pusha
cmp
adc
rcrb
rorb
in
add
shll
ds
pop
cli
mov
mov
add
pop
jbe
stos
leave
cmp
out
push
sub
icebp
mov
add
cmp
movsb
lahf
push
mov
cs
jae
int3
add
push
sub
and
insb
jo
add
and
ficompl
outsb
lds
push
daa
mov
out
std
notb
mov
mov
ja
pop
sbb
or
dec
fdivl
cmp
int
xor
leave
ret
and
jns
fdivrl
xlat
ja
hlt
pop
mul
loopne
andb
std
rorl
je
jge
xor
pop
jo
sbb
fcmovb
sbb
shll
fidivrs
lock
icebp
pop
adc
inc
push
loope
inc
mov
aad
mov
xor
xchg
cmpsb
ret
scas
fstp
cmp
ret
iret
cmp
out
pop
decl
jp
loop
dec
insb
es
xor
cmp
rcl
add
lods
out
lahf
add
cli
mov
lods
js
push
fdivrl
out
in
mov
mov
clc
pusha
aad
jns
bswap
or
mov
and
loop
jns
or
daa
dec
and
inc
shl
pushf
aaa
std
mov
and
mov
arpl
dec
mov
jmp
mov
xchg
roll
pop
adc
xchg
xlat
pusha
dec
outsb
cltd
inc
cli
dec
imul
in
add
std
mov
divl
mov
xor
adc
and
repnz
jb
clc
fisubl
das
js
daa
repz
loope
inc
cli
push
cmp
out
mov
ret
fcmovnb
int3
push
aaa
xchg
stos
mov
sub
loopne
xchg
dec
fcompl
rcl
pop
data16
inc
or
out
add
fptan
imul
jnp
xor
mov
fwait
add
or
sbb
leave
enter
xchg
fisubl
imull
mov
xor
fwait
sub
sbb
inc
addr16
scas
xchg
or
pop
xchg
shlb
and
xor
imul
sbb
or
into
fimuls
adc
dec
lahf
stos
add
adc
aas
jmp
mov
popf
inc
pop
ret
out
fistpll
pop
push
clc
push
into
es
shll
cmp
or
xor
data16
sub
push
cmp
stos
jge
cmc
and
and
je
lock
hlt
or
pusha
aaa
das
dec
jl
aaa
inc
xchg
xor
jmp
dec
mov
pop
sbb
pushl
or
fidivl
movsl
shl
xor
pusha
adc
mov
addr16
mov
fs
add
adc
xchg
movsb
cmp
add
jo
notb
ds
leave
mov
or
in
aaa
loop
pushf
sbb
cltd
cwtl
fimull
std
addb
stos
ds
scas
outsb
stos
mov
imulb
pop
shr
out
add
fcoms
fnstcw
into
hlt
mov
arpl
add
sbb
pop
jno
and
dec
stos
push
mov
jbe
dec
mov
inc
nop
add
mov
dec
int
and
incb
shlb
leave
cmpsb
dec
fimuls
dec
inc
cmp
adc
fisubrs
cmp
cmpsl
enter
sub
in
jno
ficoml
fdivr
aam
add
std
xlat
outsl
bound
in
pushf
pop
or
test
mov
jmp
jb
popa
dec
mov
inc
sbbl
mov
call
xchg
push
js
iret
inc
pop
mov
jns
mov
cmpsl
test
ds
cmpsl
mov
arpl
inc
sbb
xchg
mov
add
mov
les
xor
hlt
leave
cltd
jae
jb
fdivl
mov
xchg
shlb
sub
pushl
pop
fxch
cs
adcl
adc
and
outsb
dec
mov
mov
clc
mov
stos
dec
stc
sub
int
into
test
push
sbb
dec
adc
pop
pop
icebp
clc
sbb
jg
mov
xlat
testl
and
pushf
std
and
mov
push
inc
aam
push
mov
mov
adc
lahf
sarb
mov
xor
or
push
mov
jne
jp
dec
lahf
data16
repnz
lods
add
and
cmc
aam
sti
or
gs
jne
daa
jae
pop
add
call
ds
fwait
push
in
dec
or
mov
xchg
jl
mov
les
xor
push
jns
adc
in
jg
mov
xor
and
fiaddl
mov
and
mov
mov
mov
shlb
xor
adc
mov
cltd
inc
xlat
xlat
mov
jae
leave
or
cmp
cmp
ljmp
xor
fdivs
loope
cli
mov
iret
pop
cli
pop
rol
xchg
rcrb
fistpll
inc
adc
stos
cmpsb
je
sbb
dec
inc
push
pop
jnp
lods
xor
mov
das
add
scas
and
push
into
fs
mov
sti
mov
sbb
inc
mov
ja
mov
sbb
insb
sub
dec
or
mov
sub
mov
test
jae
mov
push
repz
pop
inc
mov
xchg
dec
pop
lods
mov
mov
pop
stos
add
jne
pop
outsl
rol
adc
loop
cwtl
test
lret
cmp
mov
cs
or
cmpsl
mov
insb
xor
cmpsb
mov
les
stc
pop
sbb
jecxz
frstor
xor
repz
lock
push
ljmp
or
fimull
mov
or
xor
out
sub
enter
jg
leave
shl
xchg
cs
repnz
lret
xchg
jl
push
xchg
or
int
test
mov
push
pop
and
push
adc
push
xchg
sahf
lret
pusha
inc
or
jo
test
push
daa
adc
mov
iret
scas
push
lods
stc
mov
repnz
jno
ret
das
add
pop
daa
call
call
pop
shll
ljmp
push
inc
pop
sub
inc
pushf
mov
int3
sahf
stos
adc
mov
shll
outsl
dec
repz
fsubr
push
std
stc
je
fsqrt
jmp
cmpsb
neg
lods
or
adc
in
push
mov
addr16
loope
int3
xor
mov
stos
nop
out
out
jb
insl
data16
xchg
movsl
cmpsl
jbe
mov
or
jbe
fs
mov
cmp
adc
cwtl
test
jbe
stos
xchg
fisttpl
xor
fxch
add
sub
pop
sub
mov
fstps
dec
xor
stos
int3
aaa
push
add
fld
notb
or
data16
mov
mov
jle
mov
jne
fs
cwtl
outsb
inc
in
addl
push
rorl
dec
add
lret
std
xchg
mov
mov
pusha
or
notl
push
sti
jp
and
jnp
rcl
pop
dec
xlat
xorb
push
push
or
fisttpl
or
leave
or
lahf
push
pushf
push
and
fs
cltd
cld
out
fadds
mov
mov
or
int
popf
ficomps
rolb
dec
xlat
loopne
dec
ret
add
inc
cmpsl
lods
mov
xchg
adc
jmp
xchg
mov
mov
lahf
jmp
xor
pop
sub
loop
cmp
aam
or
mov
dec
xor
push
jmp
pop
sahf
sub
inc
push
dec
or
push
cwtl
test
mov
push
mov
mov
cmp
rcrl
aad
jge
mov
int
iret
jae
or
js
push
pop
add
mov
fcmove
xchg
mov
int
ret
int
in
inc
cld
fistl
in
and
push
imulb
sbb
pop
jle
pop
mov
imul
in
add
sbb
adc
dec
push
add
fisubs
and
pushf
std
jmp
imul
aas
push
jns
imul
sbb
int
dec
push
cld
rolb
jge
test
cmpsl
aam
and
and
jnp
lret
mov
pushl
jb
jo
lock
and
lret
fcoml
std
xchg
mov
pushf
ss
sub
dec
sbb
hlt
jg
mov
adc
add
icebp
xchg
rcrb
jecxz
imul
call
fs
jbe
pop
and
aaa
js
xchg
sub
jmp
pop
mov
adc
inc
out
push
cmpsb
push
sbb
jo
or
out
test
dec
or
scas
xorl
mov
adc
mov
ror
xor
roll
jl
xchg
js
nop
les
adc
cli
mov
ja
aas
les
jne
pushf
mov
jbe
inc
iret
add
jmp
aam
or
out
stos
lods
stos
pop
out
dec
das
lahf
push
aam
inc
movsb
cmp
aaa
xor
xchg
push
scas
push
sbb
jecxz
shll
jmp
mov
mov
or
insl
or
out
xorl
jle
test
mov
lret
sub
xchg
push
sbb
lret
loopne
and
sub
or
jecxz
inc
push
or
jge
sub
in
jae
xchg
pop
es
mov
push
and
sbb
dec
xlat
jbe
xor
mov
stos
mov
pop
rol
lret
pop
and
xchg
jb
push
pusha
pusha
lods
mov
pop
popa
mov
push
lods
mov
scas
je
pop
sbb
or
xor
xor
ljmp
mov
sbb
jl
into
outsb
pop
hlt
xchg
stc
int3
cli
lea
or
repnz
ret
or
js
inc
add
dec
add
inc
daa
xchg
lock
outsb
scas
inc
pop
out
in
rcll
jae
cmp
loop
lahf
cmp
inc
shlb
push
xchg
js
jg
mov
push
sub
inc
enter
sbbb
mov
inc
stos
push
out
push
jle
jne
rcl
add
aaa
mov
fsubrp
mov
dec
cltd
jnp
lret
fstpt
xor
inc
push
mov
xchg
adc
int3
add
cmp
sahf
sti
imul
jl
or
jae
add
mov
push
sub
adc
sti
loopne
stc
ret
shlb
cli
cs
movsb
bound
scas
cs
push
xchg
mov
les
mov
std
sub
mov
and
outsb
pop
mov
arpl
popa
mov
jecxz
pop
pop
mov
and
and
cmp
jg
fld
cmc
sbb
int3
cli
sbb
lods
cmp
incl
jbe
in
dec
mov
and
push
in
cmpsl
dec
or
sub
xchg
jns
and
mov
es
pusha
roll
pop
push
mov
cmp
clc
divl
dec
sahf
leave
jae
dec
cmp
fcoml
xchg
addl
stc
scas
ret
shrb
out
out
mov
jge,pn
and
push
mov
add
test
push
sub
jbe
hlt
movsl
mov
dec
mov
inc
daa
repnz
and
test
clc
stos
fldenv
cwtl
or
insl
xchg
dec
adc
cmp
clc
pop
jmp
xlat
sbb
frstor
pop
adc
adc
div
xchg
hlt
outsl
loop
inc
pop
call
push
fidivs
mov
lock
sbb
jo
add
push
cmpl
jp
idiv
cmpxchg
sbb
leave
pop
xchg
scas
stos
pusha
cltd
mov
mov
xor
sub
enter
loop
stc
mov
cmpsb
jns
lock
ret
pop
data16
fidivs
icebp
cltd
and
xchg
pop
repnz
cmp
pop
add
cmp
ljmp
aad
jl
sbb
fisubl
cltd
fisubs
call
mov
dec
insl
push
inc
mov
xlat
cmc
cmp
mov
xor
xchg
scas
inc
mov
or
les
mov
push
pop
stc
sub
scas
sub
dec
out
je
pusha
test
and
gs
push
push
outsb
stos
cmp
jbe
push
pop
xor
inc
and
incl
mov
ss
stc
or
aas
hlt
into
push
test
jle
push
and
xor
roll
adc
fisubs
or
dec
rcll
cli
sbb
pop
fistps
dec
mov
in
lret
pop
roll
fidivrs
movsb
arpl
pop
xchg
dec
fists
in
xor
add
pusha
aaa
jbe
movsb
and
jp
adc
sub
pop
in
mov
pop
inc
pusha
sti
mov
xchg
push
xor
orl
push
add
hlt
fisubrl
push
nop
es
or
sbb
aam
jbe
bound
or
add
xchg
mov
push
ljmp
push
mov
jns
in
std
sahf
outsl
test
xchg
imul
pop
out
cmpsb
ljmp
mov
xor
lahf
sahf
cmp
cmpsb
push
mov
xor
xor
negl
mov
movsb
test
pop
movsb
or
pop
jmp
pushf
add
mov
mov
adc
pop
adc
xchg
pop
inc
pop
pop
cmp
jle
cmp
popf
addb
lret
sub
xchg
arpl
sbbl
out
jmp
mov
inc
dec
out
cmp
jne
leave
dec
dec
insl
pop
mov
jbe
jno
aad
pop
mov
ret
adc
in
int3
pop
push
xchg
sbb
sbb
incb
leave
imul
ljmp
lods
mov
cli
inc
push
cs
gs
mov
xchg
dec
lock
push
xchg
or
pop
mov
dec
pop
jmp
xor
dec
test
sbb
push
sbb
addr16
cs
stc
in
dec
mov
shrl
xor
xchg
xor
nop
movsb
adc
xor
int
mov
shlb
mov
decl
jle
pop
lods
out
rcll
mov
xor
sbbl
int
stos
fstp
out
mov
lcall
jmp
sub
xchg
pusha
mov
or
cld
mov
xchg
inc
sbb
aas
pushf
cmp
insl
movsb
xor
xlat
push
sub
pusha
lods
or
incb
movlhps
cmp
mov
push
es
lret
shrb
sbb
loopne
enter
stos
sbb
ret
mov
or
pusha
cmp
mov
sbb
add
or
fisttps
push
add
push
sbb
inc
shr
stc
test
popf
js
cmp
pop
cmp
les
sbb
popf
mov
rol
ja
sub
insl
mov
adc
lock
sarb
arpl
ret
or
dec
cli
addb
cmp
jo
repz
inc
cs
sub
int
pop
adc
push
xchg
push
adc
adc
ror
stos
push
ja
push
lods
jno
cmc
fisubrl
js
pop
add
push
or
in
lds
cmp
and
arpl
mov
mov
push
fiadds
fsts
push
jne
xchg
mov
fimuls
push
mov
pop
mov
push
rcr
stc
push
shr
out
lds
pop
insl
sbb
mov
push
add
mov
repnz
popa
xchg
push
xorl
xor
out
shl
sub
adc
pushf
xchg
cli
adc
mov
test
xor
add
int
or
jge
xchg
xchg
fsubrl
and
adc
adc
mov
ret
xchg
fwait
imul
loop
xor
loopne
int
lret
jns
adc
mov
rorb
leave
inc
cmp
jns
mov
mov
popl
ret
out
dec
sub
dec
fisttpl
imul
insl
xchg
jp
bound
insl
and
pop
dec
mov
repnz
bound
inc
dec
sarl
test
aas
sub
ljmp
aad
push
adc
outsb
ss
into
loopne
mov
xchg
sbb
gs
push
stos
fcoml
imul
inc
jb
sbb
out
lods
in
lret
scas
inc
test
mov
adc
and
ljmp
pop
cmp
jo
jle
adc
lahf
pop
mov
insl
shr
or
xchg
dec
dec
mov
arpl
mov
imul
loopne
mov
adc
xchg
nop
pushf
xchg
cwtl
xor
jnp
cmc
adc
mov
push
adc
in
in
outsb
test
jns
test
enter
push
or
mov
and
ja
movsb
je
cltd
jle
lret
imul
cltd
xchg
adc
inc
stos
dec
inc
sarl
mov
sqrtps
or
out
fisubrs
xchg
sarl
arpl
lcall
lock
mov
and
mov
push
jp
js
mov
cmp
adcb
out
pop
addr16
leave
sbb
decb
sbb
test
inc
push
pusha
push
xor
mov
jl
jns
inc
jo
jge
dec
jl
enter
ret
sub
out
sti
xchg
mov
push
dec
insb
push
mov
pushf
or
inc
ss
mov
jnp
dec
dec
xchg
xor
enter
mov
mov
mov
sbb
xchg
mov
enter
mov
mov
int3
inc
sbb
xchg
loop
cmpsl
mov
es
lock
mov
mov
or
inc
sbb
fistps
cmp
in
lds
std
sbb
adc
loop
lds
into
mov
loope
or
test
mov
sbb
pop
loope
arpl
or
push
loope
adc
dec
lods
xlat
mov
cmp
add
sub
inc
xchg
js
adc
lods
mov
and
adc
inc
ret
push
lds
xor
icebp
or
rorl
push
outsl
fstps
jl
xor
dec
jmp
sbb
mov
jle
pop
insl
sbb
jg
sarb
cmp
mov
cmp
pop
lds
jo
cvttps2pi
cs
or
dec
sbb
sarb
out
push
daa
fxch
adc
insb
pop
pop
jbe
xorl
push
imul
cmp
jns
cmp
call
enter
pop
jno
or
mov
push
xor
stc
push
xor
in
aad
imul
aas
rcll
or
and
fdivr
push
add
inc
popa
loopne
dec
inc
cmp
mov
push
idiv
cs
aad
movsb
lahf
ja
or
dec
shlb
pop
push
xchg
pop
cltd
mov
push
test
scas
in
add
push
icebp
adc
cs
nop
add
repz
or
outsb
mov
loop
jge
ds
jp
inc
jp
popf
fcmovne
cmpsb
mov
or
pop
insl
insb
cwtl
jno
lret
in
or
repnz
stc
inc
fwait
add
dec
bound
jne
cmp
xor
fsubs
ss
jl
scas
cmp
addl
mov
jl
xor
inc
mov
jnp
push
mov
sbb
gs
jle
aam
shrl
jl
sub
icebp
mov
push
inc
mov
or
push
loope
stc
lret
xchg
mov
addr16
into
out
icebp
into
test
cmp
addr16
imul
add
jecxz
out
dec
and
scas
dec
stc
xchg
int
cmc
out
adc
call
shll
outsb
cltd
out
or
sbb
jno
inc
mov
adc
jno
cmc
push
mov
mov
hlt
shll
push
jo
int
popl
push
xor
outsl
loopne
xor
loop
psllw
adc
repnz
cmp
aas
add
mov
pop
ljmp
adc
sahf
stc
mov
pop
push
pop
or
sti
push
lds
loope
leave
lods
or
sub
xor
xor
xor
dec
xor
enter
cmp
pop
xlat
cmp
seta
cli
fcmovbe
xchg
pop
add
mov
add
or
jo
sarl
cwtl
cmp
sub
jl
dec
mov
aad
loopne
aas
int
sbb
push
loop
push
addl
xor
insb
inc
sbb
xor
std
pop
lahf
iret
xor
in
stos
inc
iret
rcrl
mov
imul
xor
movsl
test
sub
xchg
mov
or
icebp
mov
outsb
cmp
xchg
lods
sub
loope
pop
lock
shlb
ja
call
mov
hlt
adc
dec
sbb
int3
sbb
movsb
inc
cs
mov
jle
cld
jecxz
es
je
and
aas
and
mov
clc
mov
fistl
mov
cld
push
jo
sbb
mov
adc
inc
int3
mov
sub
les
in
imul
xchg
inc
or
pop
into
sti
push
cltd
push
inc
mov
or
data16
inc
jns
inc
inc
xlat
rcl
psllq
fdivrl
into
scas
mov
fildll
call
mov
xchg
xor
adcb
and
imul
ja
mov
icebp
cmpsl
or
ret
jge
xchg
xor
int3
fildll
dec
mov
mov
pop
out
aaa
adc
icebp
dec
lods
stos
xorl
xor
mov
mov
push
cli
out
mov
stc
inc
mov
mov
add
fisttpll
mov
push
mov
stos
sub
loop
test
adc
cmp
lret
dec
rcl
aad
mov
push
dec
mov
rorl
ja
adcl
xchg
jb
mov
icebp
cs
outsb
scas
push
pop
sbb
ret
repz
out
mov
les
lret
cs
pushf
pop
nop
idiv
andl
lahf
push
and
xor
ret
or
inc
pop
inc
cld
sub
pop
mov
sbb
sbb
push
push
add
ss
mov
xchg
leave
pop
mov
cli
idivb
sbb
aaa
ljmp
arpl
mov
test
fimuls
sbb
inc
jl
xchg
xchg
inc
mov
dec
popa
dec
addr16
mov
test
das
sbb
sti
sbb
mov
lods
mov
xchg
and
xchg
xchg
mov
lea
mov
neg
int
jle
cld
push
notb
inc
adc
shlb
std
jo
cmc
aad
mov
mov
inc
lds
loop
rcll
pushf
lea
fwait
cli
pusha
sbb
das
bound
add
push
fcomip
cmp
inc
stos
pop
adc
sbb
aaa
dec
fistl
lock
push
cmp
add
or
cmp
jg
test
add
push
or
mov
daa
clc
imul
movsl
push
clc
in
push
jl
push
fbstp
fabs
or
int3
enter
nop
mov
cmp
inc
test
pop
cwtl
xchg
clc
mov
inc
cmp
jo
repz
add
add
xor
mov
mov
idivl
or
test
aaa
lret
adc
mov
inc
push
mov
pcmpeqd
xor
in
outsb
cmpsb
fnstcw
jo
sbb
inc
sub
cmp
push
shr
ror
xor
sbb
inc
dec
cli
xor
or
lret
enter
popf
pushf
sub
sub
rol
rcrb
push
lods
xor
jl
sub
lods
and
mov
cs
xchg
xchg
ds
pop
push
cmp
and
mov
sub
call
test
sbb
and
notrack
mov
push
push
or
cmp
xchg
mov
cmp
xor
aad
mov
popf
mov
out
les
add
or
jnp
fisubs
xchg
jge
rorl
add
ja
and
lea
mov
jmp
hlt
popf
adc
push
out
outsb
ljmp
pushl
out
mov
in
jge
and
sarl
jbe
inc
nop
int3
aaa
ss
mov
mov
inc
xchg
sub
mov
cmpsl
fs
dec
mov
sarl
cmp
push
xor
int3
push
pop
das
jo
xchg
mov
outsl
pop
and
xchg
and
stos
cmpsb
dec
test
cltd
jp
ficoml
lahf
aaa
xor
movsb
and
fldz
addr16
xor
fsubr
test
pop
dec
leave
lock
adc
push
cwtl
ljmp
mov
or
fiaddl
adc
lret
and
lea
lods
adc
push
inc
inc
or
mov
repz
mov
cmp
in
add
mov
sbb
push
jno
into
xchg
xchg
or
in
sbb
loopne
mov
enter
data16
xchg
arpl
cmp
mov
in
and
mov
pop
mov
jge
frstor
call
sub
cmp
icebp
repnz
jl
sub
scas
scas
push
sbb
jge
mov
fisttps
inc
xchg
sub
sub
jne
andl
push
jl
dec
popa
ficoml
push
and
mov
mov
xchg
dec
lcall
pop
lea
and
and
inc
cmp
mov
sahf
pop
shr
js
out
jmp
in
xor
addl
pusha
fs
aad
stc
adc
lcall
pop
movsb
pop
ljmp
negl
jne
ljmp
pop
sub
lods
push
test
lock
ret
or
ss
adc
add
push
or
sub
outsl
adc
jg
lea
and
mov
clc
push
pop
mov
sti
lods
sub
jge
mov
stos
jno
je
stos
stc
adcb
jno
and
mov
jmp
mov
imull
fbld
sbb
div
imul
lret
cmp
inc
fsub
push
xorb
nop
pop
test
jp
sub
push
pusha
pop
inc
out
loop
pop
stos
je
xchg
incb
mov
xchg
jb
or
xchg
mov
inc
icebp
pop
mov
lahf
inc
sub
pop
ljmp
rorb
add
dec
pop
cmpsl
arpl
int3
addr16
mov
mov
rcrl
dec
mov
dec
inc
add
pop
xchg
mov
call
idivl
addr16
pop
sti
inc
addr16
in
jb
ja
xchg
mov
arpl
cwtl
adc
or
pop
sub
fwait
xor
xchg
lret
dec
ss
stos
jnp
cmp
sti
lock
xor
in
push
sahf
cmpsb
push
je
mov
and
ret
mov
sub
daa
inc
enter
mov
push
mov
out
mov
lahf
rol
dec
jmp
out
movsb
mov
dec
fdiv
jge
and
sbb
add
mov
sub
js
xchg
lods
rorb
sbb
sub
outsl
ja
xchg
mov
push
cmp
shll
jns
adc
sub
rcll
and
pushf
add
frstor
dec
mov
inc
adcl
popa
ficoms
or
dec
jp
and
fcompl
movsl
shll
outsl
fs
cltd
mov
and
cltd
jno
cwtl
dec
xor
push
shrl
fsubp
add
call
jno
in
dec
fdivrs
adcl
jae
aaa
adc
and
mov
in
sbb
or
xchg
data16
jl
jb
inc
out
or
or
xchg
mov
std
push
sahf
inc
and
cltd
or
cmp
mov
lret
xchg
cs
insl
sub
enter
push
in
cmp
outsl
push
outsl
stos
repz
xchg
in
daa
fisubs
inc
and
inc
push
mov
adc
das
imul
stos
inc
jb
pop
in
into
in
or
push
daa
dec
popf
test
xor
leave
or
cmc
popf
addr16
arpl
jle
inc
icebp
or
daa
rclb
insb
flds
push
bound
mov
popa
jmp
xchg
ret
incl
loopne
mov
and
mov
push
pop
jns
xor
sub
scas
xchg
mov
movsb
add
repnz
mov
aas
std
push
addr16
push
mov
push
arpl
fdivp
add
pop
sub
insb
in
js
mov
pop
push
or
fstpl
sub
mov
xor
out
pop
cmp
sarl
cmc
fwait
pushl
lret
rorl
ss
add
in
add
mov
inc
push
dec
mov
jg
xchg
bound
push
push
rolb
xor
outsl
ds
lret
and
int3
mov
lds
ss
por
aaa
jg
push
lcall
xchg
jmp
mov
jo
adc
pop
sbb
cmp
mov
mov
dec
sub
xchg
stc
shlb
test
ss
fnstcw
mov
cmp
xchg
out
aas
outsl
dec
inc
xchg
jge
fwait
repz
fstpt
popa
cmp
cld
mov
insb
repnz
xor
push
xor
iret
clc
and
aam
pushf
sbb
mull
dec
in
addr16
push
or
repnz
mov
cwtl
pop
dec
sti
rorb
hlt
loopne
aaa
xorb
adc
add
dec
xchg
mov
into
add
outsb
call
clc
aam
mov
test
sub
jge
fs
jbe
outsb
test
sbb
and
sub
mov
mov
out
xor
repnz
xlat
popf
and
dec
push
push
add
sbb
push
sub
subl
push
add
es
aam
add
shll
dec
jo
bound
imul
cmpsb
xor
ret
test
mov
and
and
bound
ret
push
test
mov
imul
dec
cmp
xchg
test
imul
jno
ljmp
push
jp
stos
mov
cmp
inc
dec
inc
jle
inc
imulb
push
pop
mov
data16
sbb
sbb
or
insb
les
mov
fsts
and
shrl
into
and
cmp
add
les
jg
lock
inc
sbbb
repz
insb
shlb
jl
push
cld
jbe
fwait
mov
sub
imul
mov
mov
mov
scas
out
dec
in
push
jne
rolb
fistpl
ss
and
scas
adc
inc
dec
scas
sbb
cld
subl
testl
fs
mov
ljmp
mov
cmpsb
jno
mov
andl
in
mov
push
adc
cmpsl
into
frndint
ds
pusha
lret
jb
inc
jns
in
lea
leave
ret
stc
jb
aam
fstpl
mov
or
mov
ss
bound
inc
mov
nop
mov
push
mov
xor
dec
dec
sbb
jnp
sub
pusha
jg
cmpsb
xor
nop
lea
sbb
dec
dec
gs
and
sar
add
hlt
scas
sub
cmp
xor
push
sbb
dec
lret
cmc
inc
subb
sbb
outsl
xchg
test
xchg
vpshad
js
jmp
or
xor
loope
js
stos
jg
hlt
shll
stos
test
mov
enter
lods
or
sbb
imul
xor
xchg
adc
fwait
in
cmp
jne
sbb
daa
xor
inc
cmp
or
mov
retw
or
adc
pushf
lock
rcr
aaa
jnp
push
es
in
jg
xor
mov
xchg
stos
jnp
std
pop
int3
inc
cmpsl
js
mov
shrb
outsl
xor
gs
pushl
pusha
lods
adc
aad
xchg
mov
xchg
xchg
inc
fldl
stos
adc
sbb
inc
adc
shl
loopne
lods
push
and
enter
aad
dec
cltd
pop
sbb
inc
lods
jmp
repnz
outsb
pop
mov
push
sub
fwait
aas
sbb
inc
push
add
jp
sbb
add
loopne
adc
mov
lods
addr16
aaa
mov
cmp
mov
js
xor
push
or
icebp
mov
fnstcw
cmpsb
daa
push
mov
mov
test
je
inc
mov
repnz
popf
in
inc
jge
pop
lcall
mov
xchg
es
cmpsb
in
inc
xchg
mov
and
rcrl
dec
sub
std
cwtl
int3
and
push
test
mov
int3
jae
adc
or
mov
cmp
and
sbb
sbb
leave
test
mov
pop
xor
push
iret
mov
jecxz
mov
push
into
lock
xchg
lret
mov
divb
pop
push
stc
lods
push
repnz
inc
aas
cmp
xchg
mov
mov
mov
mov
enter
adc
movsb
mov
xchg
cmpsb
insb
mov
adc
mov
scas
movsl
jge
repnz
push
clc
aam
in
ja
rclb
mov
lahf
or
xchg
add
gs
xchg
test
out
xor
mov
dec
dec
aaa
cmpsl
nop
push
or
arpl
int3
imull
popa
shlb
les
ja
stos
stos
out
mov
adc
inc
hlt
adc
mov
mov
xchg
mov
cmp
push
cmp
mov
add
stos
mov
fisttpl
push
xchg
fsub
scas
js
pop
jmp
mov
mov
fimuls
xchg
sbb
mov
pop
dec
xchg
enter
cmp
dec
aaa
insb
mov
xchg
frstor
imul
mov
add
popf
dec
aas
sub
pushf
xchg
sub
xchg
scas
pop
mov
mov
jbe
lds
aas
loope
sbb
repz
repz
mov
pop
out
push
jmp
shlb
sub
sub
hlt
mov
sarb
iret
inc
mov
loopne
pop
mov
and
imull
pushf
sub
leavew
and
xor
pop
jb
mov
pop
add
mov
arpl
lods
xor
adc
lods
mov
into
inc
movsl
xor
rcl
jae
dec
sub
xchg
pop
cltd
fucomip
inc
fsubrs
loopne
dec
xor
jno
loop
cmpsl
shlb
sub
in
push
and
sbb
sub
xchg
mov
mov
push
fadd
cwtl
out
lods
bound
arpl
cmpsb
mov
sbb
xor
or
test
out
cmc
mov
aaa
testb
jge
fisubs
jae
hlt
lcall
js
xchg
jl
sub
sub
cwtl
sarb
iret
mov
imulb
add
repz
push
ja
test
insl
adc
xlat
or
lret
mov
add
dec
dec
sub
xchg
and
imul
mov
jns
mov
enter
push
test
repnz
sarl
call
stos
pop
in
clc
push
push
outsl
imul
cwtl
pop
xlat
test
or
adc
call
movsl
cmpsb
xchg
in
mov
in
mov
outsl
push
or
nop
adc
ret
lret
cmpsb
add
cltd
aas
out
jecxz
iret
mov
sti
jp
shll
cmpl
mov
pop
out
jno
adcl
ljmp
cmc
mov
fsubl
test
xor
pop
xchg
pop
pushf
scas
sti
ss
and
adc
push
adc
inc
mov
cs
add
in
mov
jno
xor
bswap
fistps
loop
mov
movl
or
and
inc
arpl
cld
pusha
in
fxtract
ja
sarb
dec
cld
stc
cmpsb
xlat
fwait
sbb
push
push
jl
je
das
bound
cmc
sub
inc
pop
mov
mulb
adc
sub
lock
jmp
jne
popf
push
mov
jge
mov
xchg
cmpsl
loopne
loopne
stc
popa
add
push
mov
daa
adc
sub
cmp
out
ds
xchg
cs
leave
insb
leave
push
mov
xchg
or
push
cmp
stos
lret
sub
dec
push
jbe
xor
les
adcb
loope
cld
sbb
fstpl
jge
adc
adc
push
clc
xchg
xchg
mov
mov
dec
and
push
test
xchg
and
cltd
jns
mov
mov
and
test
pop
daa
fistpl
ss
frstor
ljmp
dec
ret
cmp
sysret
sub
rcl
js
fildll
verr
push
shrb
test
in
jne
sub
sarb
add
rolb
fldcw
lcall
mov
mov
add
jge
stos
mov
inc
pop
imul
jno
jbe
test
in
cmp
xchg
push
inc
jle
push
push
and
popa
sbb
mov
out
popa
sti
push
popf
addr16
lret
jno
cmp
mov
loop
lret
call
sbb
insl
sbb
cmpsl
lret
imul
pop
xchg
iret
mov
xchg
dec
push
jo
pusha
int
xor
mov
cld
ret
mov
sbb
or
mov
sbb
loop
push
or
add
std
lods
xlat
outsb
xor
lahf
jne
sbb
mov
add
lods
sub
icebp
xor
jl
xchg
push
movsb
fdivs
std
ds
fdiv
imul
adcl
add
adc
in
xlat
mov
xchg
or
push
push
mov
jbe
imul
mov
leave
movsl
mov
mov
jbe
sub
or
outsl
jae
jnp
repz
shll
mov
push
xchg
mov
mov
xchg
mov
imul
xor
in
pop
xor
lahf
gs
jnp
fisubrs
jns
mov
rcl
cmp
push
movsb
dec
sub
inc
mov
or
cli
mov
or
or
mov
pop
mov
jno
out
mov
sbb
sub
insl
shll
push
lods
pop
dec
lcall
inc
xchg
aas
mov
add
out
fwait
lcall
std
sbb
jmp
fimull
sub
inc
jbe
lret
push
dec
subb
sub
stos
subl
push
sub
inc
push
mov
mov
and
push
mov
mov
push
jp
inc
cmpsb
jecxz
dec
jb
lock
dec
repnz
ja
aas
inc
adc
jle
outsl
imul
jno
sbb
pop
sub
mov
pop
cmc
and
mov
adc
sub
icebp
jmp
call
iret
in
fdivrs
pop
popf
adc
xor
dec
cmp
lds
mov
lret
mov
xchg
nop
cwtl
popa
test
xchg
lea
mov
jae
clc
dec
mov
mov
adc
bound
dec
or
repz
cmp
and
push
lcall
cmp
sbb
out
and
jg
mov
sub
xlat
in
fists
lcall
dec
xlat
push
inc
setne
jecxz
adc
addr16
push
mov
js
lcall
cmp
popa
add
cmp
sbb
push
mov
mov
cmpsb
push
jb
aaa
xchg
rorl
mov
lock
lods
in
loope
sbb
jl
xor
dec
push
std
jmp
xchg
adc
leave
jecxz
jne
dec
cmp
mov
sti
xchg
dec
hlt
fdivl
ficompl
shrl
lds
lods
fildll
imul
in
pusha
pop
test
jg
es
cmp
mov
test
xchg
mov
lock
iret
mov
aad
mov
ljmp
scas
cmp
in
mov
iret
stos
push
mov
sbb
mov
cld
out
js
test
stos
xor
in
frstor
fimull
mov
popf
in
sub
add
mov
shlb
jg
pop
mov
adc
jns
js
outsb
pop
movsb
movsl
imulb
mov
jge
shld
loopne
ret
and
jbe
mov
je
loop
or
imul
movsl
push
mov
scas
xor
add
cwtl
push
add
jns
jnp
sub
icebp
jmp
iret
xchg
xor
add
mov
loop
loop
shll
nop
inc
inc
scas
lea
mov
ds
leave
dec
scas
int3
out
nop
int3
mov
movsl
sub
cmp
pop
xchg
adc
sub
adc
pushf
sti
out
nop
in
mov
xor
clc
fists
popa
jge
pop
push
das
add
ret
mov
std
sub
loopne
scas
adc
adc
dec
std
pop
popa
xchg
cmp
pop
jp
push
jbe
pop
xchg
inc
sbbb
mov
mov
dec
push
xchg
aaa
mov
scas
shlb
stos
jae
outsl
shll
pop
pop
movsb
test
push
inc
and
cmp
or
mov
add
insb
pusha
in
mov
or
mov
jne
arpl
xadd
in
xchg
mov
fstpl
push
inc
shlb
call
sub
jae
xchg
ror
sahf
mov
mov
push
xor
mov
lret
adc
dec
popa
or
sarb
fdivr
je
es
xchg
jg
daa
imul
setno
jg
sbb
jmp
mov
cs
aam
push
mov
pop
add
mov
aas
jne
rcrb
cmpsl
stos
out
das
inc
test
inc
mov
cli
mov
jge
mov
xchg
cmp
mov
adc
add
jmp
mov
adc
and
divb
mov
sub
push
inc
outsb
ret
jmp
add
dec
je
rorl
lods
in
adc
pop
push
icebp
gs
cmpsl
ret
pop
or
jge
pop
pop
or
ja
sbbb
in
xchg
mov
and
mov
shll
or
jno
sbb
pop
mov
pop
pusha
push
sti
sbb
fidivrs
jle
and
or
imul
insb
sbb
aad
je
push
fstl
pop
fidivl
sub
jp
jmp
rclb
stos
xor
add
gs
divb
jbe
mov
imul
mov
sub
in
mov
mov
enter
mov
stos
sub
into
fiaddl
imul
inc
xor
xchg
add
lock
sub
out
push
test
and
push
xchg
js
gs
pop
subb
sub
sub
fmull
xchg
ret
dec
mov
gs
push
sbb
fcompl
mov
push
mov
dec
es
add
pop
adc
mov
dec
cs
fdivl
sub
pop
sbb
sbb
test
inc
mov
jae
mov
mov
push
scas
xchg
sub
push
pusha
dec
inc
clc
and
or
ss
rclb
test
push
cmp
pop
mov
mov
cwtl
sbb
orb
es
in
test
fmuls
pop
xchg
aam
cwtl
int3
and
jge
mov
leave
mov
dec
cmp
mov
pop
out
xor
jb
lret
lcall
push
out
mov
dec
add
jmp
jo
or
cltd
mov
sub
je
stos
sub
cmp
sbbb
loopne
or
test
pop
out
and
mov
xchg
loopne
scas
lahf
dec
out
jo
pop
scas
xor
add
ljmp
shrb
lret
in
int
stos
jbe
pop
pop
pop
sbb
sbb
or
and
cli
call
imul
or
loopne
mov
lea
mov
ficomps
cmp
jo
es
ss
movsl
mov
mov
dec
testl
pop
dec
mov
inc
cmpsb
dec
repnz
add
pop
mov
movsl
pushf
xchg
sbb
xor
push
lock
aad
inc
cs
inc
sbb
fs
test
jecxz
jne
adc
cmp
in
inc
incl
cld
popa
ds
add
int3
mov
push
mov
sbb
sub
roll
pusha
lds
add
inc
lret
mulb
cvtps2pi
mov
push
cltd
jg
jle
data16
insb
pushf
loop
hlt
cmp
pusha
lds
outsl
shll
cmpsb
jmp
adc
inc
mov
lret
pop
inc
fcomp
mov
sub
cwtl
aad
and
dec
mov
and
in
push
push
pop
dec
adc
shrb
rcrb
cli
sarb
mov
into
pop
or
dec
call
add
xchg
jnp
sti
add
inc
xchg
or
gs
or
and
add
fbld
scas
inc
das
jns
xchg
push
in
mov
gs
adc
xlat
mov
or
inc
mov
inc
ds
rcrb
inc
addl
dec
mov
bound
jnp
add
jnp
mov
fucom
in
leave
test
test
xor
add
cmpsb
punpckhdq
sub
int
std
fdivrl
jae
adc
xlat
sub
pop
mov
inc
or
adc
stos
rcrb
ss
in
lods
stos
pop
sbb
cld
repnz
inc
arpl
daa
dec
pusha
call
shll
rorl
mov
xor
arpl
jne
mov
jnp
jg
shlb
je
imul
fcompl
stos
rcll
mov
jecxz
nop
jg
in
dec
pop
sub
mov
xor
add
pop
les
pop
and
js
dec
scas
mov
sub
dec
aas
push
inc
mov
out
sub
inc
mov
jmp
fwait
nop
pop
jne
aad
inc
pushf
adc
cmpsl
sbb
mov
push
sbb
pop
sahf
in
adc
loope
inc
push
icebp
add
imul
stos
mov
mov
or
cmc
or
push
scas
dec
dec
jne
aam
pop
ret
jno
mov
cmpsb
scas
ds
jne
jae
push
js
or
or
in
mov
loope
outsl
jb
xchg
xchg
and
rorb
lds
xlat
mov
xor
mov
or
lret
lods
out
pushf
and
mov
mov
push
cmp
imul
sbb
les
pop
bound
push
mov
cmp
arpl
xor
dec
mov
xchg
int3
mov
pop
fnstcw
xor
testl
lock
push
ja
dec
das
or
sub
pop
sub
and
jle
add
cs
cmp
stc
cmc
cld
add
ds
adc
aaa
mov
fnsave
pop
pop
jns
repnz
std
jp,pn
xorl
jne
push
mov
push
pop
loop
aad
xor
insb
popf
xchg
inc
cwtl
xor
xchg
lret
cmp
xchg
fmull
pushf
lahf
test
dec
jmp
jge
cmp
mov
jmp
fldl
je
sub
pop
dec
int
pop
inc
add
fdiv
cs
xchg
stos
lret
push
loopne
sbb
lods
into
icebp
xor
stos
out
add
pop
out
push
pop
sbb
lcall
or
leave
or
lods
out
xchg
les
ss
sub
jae
into
mov
sbb
jle
ja
push
push
xchg
and
loop
cmp
pop
hlt
loopne
sti
inc
decl
movsl
adc
cmp
adc
push
push
out
sbb
roll
jl
repnz
mov
fisubl
int3
cmp
add
mov
sar
pop
lahf
das
fs
xor
push
je
dec
pop
xor
jo
sti
test
lods
in
lods
cmp
or
jnp
lcall
lret
xlat
jae
push
std
mov
mov
ja
adc
or
push
cmp
in
push
dec
add
pop
lret
stos
pop
ljmp
adc
mov
mov
imulb
lods
pop
xchg
insb
and
xchg
push
out
mov
pushf
jo
push
add
mov
cli
pop
inc
enter
jne
pusha
ja
popf
int3
sub
mov
fldcw
push
xchg
dec
fs
xchg
mov
fdiv
stos
add
cld
dec
and
popa
fnstcw
jmp
test
movsl
sbb
lcall
stc
xor
sbb
lock
mov
ljmp
sti
mov
pushw
cmpsb
push
je
cmp
add
jnp
xchg
hlt
pop
js
mov
cli
lahf
pop
enter
mov
mov
ds
xchg
add
xor
cmp
xchg
push
test
or
adc
adc
sub
sti
nop
dec
daa
mov
dec
xor
mov
mov
xor
les
in
in
outsl
mov
sbb
mov
clc
xchg
shrl
ds
push
add
cld
icebp
sbb
xchg
les
mov
jge
dec
push
xchg
movsl
aas
sbb
sti
sub
pop
dec
mov
sahf
stos
das
inc
cmp
outsb
mov
jg
inc
test
pusha
orl
mov
or
push
mov
dec
push
push
pop
outsl
mov
fdivs
add
jno
nop
movsl
dec
jmp
imul
arpl
cli
push
pop
sbb
cmp
cmp
sub
movsb
call
dec
popf
or
adc
cmp
mov
inc
jnp
add
sbb
je
xlat
pushf
jmp
dec
repnz
mov
jge
add
and
pop
mov
insl
jnp
jmp
sbb
sub
push
inc
jle
push
loopne
adc
xchg
jmp
adc
loope
push
jmp
pop
mov
jns
adc
mov
push
mov
add
in
xor
fstpl
pop
sub
outsl
mov
pop
mov
pop
lret
bound
test
in
lea
divb
fcomp
push
mov
sub
push
mov
mov
pop
mull
and
fildl
xchg
sbb
add
aam
mov
cmp
scas
push
out
mov
add
dec
adcb
pop
xchg
push
mov
shll
scas
sub
inc
out
ss
and
arpl
and
pop
in
sbb
cmp
push
hlt
adc
stos
jg
adc
imul
les
lea
daa
inc
xor
fwait
rcrl
popf
sahf
adc
pop
outsl
aas
sub
and
push
pop
cmp
fwait
pop
cmp
sbb
xor
dec
add
pop
mov
sub
jnp
shl
movsl
xchg
aaa
mov
sbb
stos
dec
xchg
xchg
jp
cltd
pop
jns
xchg
xor
outsb
dec
adc
pop
lods
leave
fmuls
mov
out
fisubrs
into
wbinvd
int
cmc
add
dec
or
xchg
dec
pop
pop
call
fwait
push
xchg
mov
push
mov
mov
cmp
mov
xchg
jb
add
fcompl
lds
les
or
adc
pop
inc
movsb
test
xor
rorl
jp
mov
pop
mov
sbb
mov
rolb
mov
mov
andl
cld
icebp
cli
sub
rorl
daa
push
mov
imul
test
enter
pop
jl
xchg
mov
dec
movsb
outsl
out
mov
out
xor
aad
cs
push
arpl
movsb
or
mov
lock
outsl
lcall
in
jbe
xchg
cld
pop
sahf
cwtl
lcall
jg
cmpsl
lret
mulb
sub
and
jge
jne
add
out
jo
scas
incb
jmp
scas
rol
add
dec
add
jle
lea
leave
popl
sub
pop
out
jns
fldt
inc
cs
add
and
jne
aam
mov
popf
adc
orl
or
pop
test
push
sti
loop
lahf
aam
pop
test
loope
dec
cltd
js
mov
cli
dec
xchg
pop
outsl
stos
push
and
and
push
ljmp
xor
lcall
or
dec
pop
rorl
and
and
cwtl
mov
jnp
xchg
je
test
test
dec
mov
cmp
faddl
pop
xor
cld
sub
mov
jecxz
adc
push
sbb
xchg
or
or
pop
fnstcw
addb
inc
pop
call
lds
jns
jbe
sub
bound
cli
inc
ds
mov
pop
aaa
inc
adc
std
nop
inc
out
lret
jbe
sbb
loope
flds
mov
les
and
push
cmpsl
arpl
out
push
outsb
pushf
bnd
shlb
add
in
rcrb
mov
mov
lock
mov
jmp
push
mov
fistpll
pop
daa
xchg
jg
xor
adc
call
arpl
cmp
mov
jp
inc
es
mov
outsl
scas
xchg
mov
mov
je
pop
cmc
je
sub
or
push
xchg
aaa
jnp
jo
fs
dec
cmc
jl
pop
adc
popf
or
scas
arpl
orb
divl
fnstsw
xchg
mov
ret
je
stos
movsb
mov
jg
add
and
mov
mov
mov
lret
insl
test
outsb
push
mov
sbb
js
jecxz
xchg
sub
sub
dec
mov
xchg
clc
mov
push
aam
into
dec
mov
sub
sahf
ja
out
in
aam
cmp
fstpt
xchg
sbb
add
and
sbb
cmp
inc
rcrl
add
cmp
loope
cmc
adc
lret
hlt
ret
popf
jns
out
sub
mov
fdivs
push
aas
lea
xor
push
pop
adcb
push
or
outsl
sub
pop
bound
mov
adc
not
push
shlb
cmp
and
push
loop
jp
mov
and
cli
xchg
mov
cmpl
push
rclb
mov
push
stos
push
das
mov
addb
loopw
jl
mov
adc
scas
repz
inc
andb
subb
inc
inc
or
pop
repnz
add
push
ja
enter
add
aas
adc
lahf
push
pushf
cmpsb
scas
push
pop
mov
xchg
rol
cmpsb
mov
lret
adc
sub
stos
aam
arpl
pop
in
pop
sbb
mov
cmp
clc
cmp
movsl
cmpsl
inc
sbbl
test
sbbl
arpl
mov
mov
xor
je
or
or
dec
bound
ficoms
roll
and
add
mov
cmp
inc
loop
lds
pop
std
outsl
inc
fimull
dec
std
xchg
jbe
inc
es
jnp
subb
incl
stos
jno
fsubrs
out
and
repz
movb
push
jnp
in
fcomi
cld
dec
and
xchg
notl
arpl
add
dec
adc
insl
push
xor
sub
xchg
sbb
or
mov
enter
mov
push
or
arpl
rolb
pop
and
push
imul
clc
ljmp
sub
icebp
pop
dec
add
xor
subl
xor
push
sti
cltd
jg
out
gs
mov
in
or
and
shlb
adc
xchg
stos
mov
sub
fstpl
push
arpl
cli
in
cs
inc
xchg
repz
jle
fwait
es
sar
jne
int3
ret
push
jg
in
mov
ss
mov
xchg
pop
inc
popa
ss
pop
sub
mov
mov
push
in
pusha
cmp
mov
mov
mov
adc
push
push
outsb
mov
rcrb
mov
dec
and
pop
aas
push
fsubs
mov
cli
mov
xchg
inc
sub
jb
adc
dec
aam
testb
sub
jb
cmp
rolb
test
int3
ret
pop
out
fs
sbb
pop
out
inc
dec
mov
cld
test
mov
sbb
or
pushf
adc
mov
jmp
dec
lods
cmpsl
rcll
cli
xchg
ret
xchg
dec
bnd
push
push
sbb
and
pop
and
adc
pop
mov
inc
inc
cmpb
inc
mov
adc
sbb
aas
arpl
cli
loopne
mov
add
adc
add
sbb
pop
mov
inc
movsb
fsts
xor
pop
ret
push
inc
push
jecxz
ret
cmovae
adc
cmp
jge
ja
inc
push
sbb
cmp
xchg
mov
outsl
adc
sbb
push
fbstp
test
push
or
sbb
and
xor
push
in
push
xchg
dec
jbe
cmp
dec
inc
daa
or
xchg
mov
inc
adc
rorb
lahf
lcall
sub
mull
aaa
daa
mov
mov
int3
out
sbb
test
and
pop
dec
sub
jmp
stos
add
inc
mov
adc
addr16
jno
loop
add
dec
dec
pop
pop
cmp
pop
inc
int
test
fs
aaa
mov
dec
and
xchg
xor
lods
mov
clc
xchg
mov
jns
cltd
adc
adc
jae
cmp
jns
movsb
add
aad
push
push
aad
cmc
arpl
insb
push
cvtpi2ps
sbb
movsb
add
sbb
enter
aas
mov
xor
pop
les
cwtl
xor
insb
or
dec
push
out
jae
cmc
push
out
pop
xor
repnz
movsl
lea
cmp
imul
fisubl
nop
aad
dec
insl
and
push
xchg
addr16
in
outsl
dec
and
cmpsl
cmp
push
mov
shrl
fwait
xchg
lock
jno
sbb
lcall
cmp
das
scas
lret
ja
mov
clc
jae
sti
adc
aaa
pop
ja
push
jns
lods
sbb
mov
mov
mov
pop
add
push
ss
dec
movl
les
push
jmp
je
insb
sub
incb
ret
or
mov
cwtl
pop
sub
cmpsl
pop
orl
cld
mov
xor
mov
fnstcw
xchg
stos
xchg
mov
ret
pop
jo
mov
xlat
outsl
add
outsl
shrb
cmpsl
das
fwait
push
cmp
sbb
mov
cmpsl
gs
les
outsb
ret
pop
adc
add
je
or
int
ss
fnsave
jmp
mov
shll
push
icebp
popf
shll
cs
xchg
cwtl
test
dec
imul
and
rclb
in
mov
lock
push
mov
xchg
and
ja
out
mov
insb
das
sub
dec
dec
xchg
push
cld
mov
pop
aam
cwtl
pop
push
mov
jp
int3
movsb
cmp
fbld
adc
dec
jno
jnp
fwait
adc
jmp
je
jmp
or
call
les
repnz
add
adc
pushf
mov
rcrl
pop
in
pop
mov
lods
clc
pop
shlb
pop
jbe
pop
sbb
or
cmp
das
imul
stos
adc
sub
sarl
test
out
sub
cld
mov
and
adc
sbb
push
pusha
and
pushf
pop
fdivl
xchg
insl
enter
ja
jmp
ret
sub
lods
scas
cltd
adc
ds
mov
xor
jp
arpl
ja
in
cli
loop
add
fmull
js
iret
shll
cmc
rcrl
test
dec
leave
dec
inc
das
mov
lret
ja
clc
adc
out
xchg
sub
xor
stos
arpl
daa
jo
cmp
cwtl
fstpt
lods
bound
push
icebp
jb
sub
xchg
jmp
mov
fistps
imul
jg
lahf
vmwrite
insb
in
lock
cmp
fcmovnb
xchg
ljmp
adc
popa
xor
or
xchg
inc
push
xchg
dec
pushf
fnstenv
cwtl
adc
test
mov
pop
in
add
mov
or
loop
sbb
inc
inc
mov
test
sub
push
pop
fdivr
repnz
sub
shlb
add
insb
jns
movsl
lea
lret
push
push
addr16
imul
sub
xchg
test
call
das
fisttpll
cmp
int
push
daa
inc
inc
adc
xchg
adc
push
dec
cli
add
xor
adc
push
cmp
xor
repz
fisttpl
jns
cmp
xchg
in
data16
and
mull
dec
jle
jae
cmp
dec
sub
mov
xor
pop
dec
cmp
shll
outsl
mov
xorb
sub
popa
push
mov
mov
jb
ljmp
push
outsb
adc
and
ret
jg
push
cmp
fs
dec
inc
sbb
dec
fisttps
insb
nop
mov
mov
mov
mov
stos
sub
sub
gs
lcall
mov
cwtl
push
sbb
pushw
or
loopne
imul
add
push
add
sub
cmp
repnz
mov
fstpt
sub
rcll
and
outsb
lcall
sub
shrl
adc
jbe
stos
outsl
sarl
push
in
mov
mov
mov
and
jo
loop
adc
inc
insl
pop
sbb
fwait
insl
repz
jbe
nop
andb
into
das
ja
jp
mov
dec
ss
pop
inc
roll
rcrl
daa
ret
in
jge
sbb
cli
ds
xor
push
add
test
mov
pop
jo
aas
add
mov
clc
and
fdivrl
or
xor
and
add
enter
push
shll
xor
and
repz
cli
pop
jp
aam
gs
pop
cmp
sbb
scas
scas
pusha
dec
fwait
cli
sub
jmp
gs
xchg
jg
loope
jae
mov
cld
scas
lret
rorl
mov
jmp
mov
jo
test
or
adc
jns
stc
pop
lcall
mov
lret
cmpl
add
or
ja
and
cs
ds
push
clc
mov
xor
mov
sub
mov
sahf
push
xchg
enter
xor
test
mov
out
pop
xchg
insl
int3
mov
xchg
mov
sbb
push
ja
xchg
sbb
test
lods
fadds
cli
scas
scas
xchg
mov
jae
sbb
cwtl
idivl
es
xchg
sbb
icebp
pop
cwtl
mov
add
mov
js
push
in
mov
mov
in
xor
out
push
movsb
or
pmovmskb
lcall
enter
test
sbb
jle
push
lea
jge
xchg
jno
cmc
inc
adc
sbb
scas
sarb
loopne
mov
int
lds
pusha
mov
in
mov
or
push
imul
inc
fdivl
dec
inc
dec
lods
sub
push
xchg
xchg
daa
sub
sbb
xchg
or
dec
mov
jecxz
in
dec
fcmovnbe
jmp
lds
push
pushf
mov
aad
mov
or
les
mov
shr
mov
ret
ror
mov
cmpl
pop
sub
pop
int3
adc
or
push
cmp
sub
jb
sti
ret
popf
shl
mov
pop
cltd
adc
or
mov
sahf
xchg
mov
push
and
ficoms
mov
jge
imul
js
mov
inc
aad
subb
aaa
loope
pushf
popa
gs
jo
ds
sbb
cmp
data16
stc
lcall
and
dec
popa
and
mov
pushf
xor
negb
jecxz
mov
lock
adc
leave
xlat
fldl
fwait
ret
add
mov
in
jmp
xor
les
loop
dec
ss
pop
push
pop
adc
xchg
xchg
inc
xor
scas
fnstcw
fistl
pop
stos
fimull
jne
cld
orb
fcompl
in
mov
fldenv
xchg
stc
inc
cmpsb
and
mov
push
push
push
xorl
imul
add
jp
lret
mov
imul
and
jge
mov
cmp
mov
cld
sbb
push
mov
sub
push
loopne,pn
push
mov
sahf
xchg
mov
scas
cmpl
out
mov
aam
cmp
jecxz
inc
fstpt
lds
movsl
xchg
dec
push
lds
push
sbb
xor
sub
push
sbb
imul
xchg
std
loope
int3
lods
adc
outsb
sbb
test
and
and
jg
mov
stc
xchg
out
inc
push
push
dec
or
ret
lret
pop
das
and
pop
lods
and
scas
cmc
xchg
loope
and
stc
mov
mov
inc
cmp
aaa
inc
dec
test
jae
sub
test
inc
fs
xchg
lahf
int
icebp
sbbl
and
mov
aam
push
jae
leave
je
inc
faddp
or
popa
sub
ficompl
fimull
dec
imul
dec
std
mov
and
test
insl
pop
add
lahf
fdivs
mov
sub
pop
dec
xorb
daa
icebp
fidivl
cld
jecxz
or
iret
push
xor
mov
into
or
add
pop
push
fildll
ss
inc
adc
incl
xor
dec
rolb
mov
add
mov
and
cmpsl
dec
fsubs
dec
sub
int
or
lret
rcrb
les
mov
cwtl
loope
or
lcall
cmp
jo
mov
lock
movb
or
mov
fadds
js
adc
pop
or
or
adc
dec
adc
and
lods
jg
push
xchg
das
jns
cmpsl
sbb
int
pop
addb
sbb
push
and
leave
cmpsb
call
cmp
js
jp
mov
xlat
mov
and
shl
adc
cmp
push
mov
adc
mov
mov
int3
add
inc
mov
or
arpl
ja
sub
cmp
fisttpl
cmp
mov
mov
loope
aaa
orl
pop
andb
fnsave
xchg
cwtl
cmp
loope
jmp
inc
cmp
fimuls
movsl
xor
das
inc
push
jnp
lock
scas
dec
les
mov
mov
mov
and
mov
mov
movsl
aaa
inc
aaa
and
xor
add
jns
push
mov
sbb
and
in
js
mov
sub
fidivl
push
pushf
mov
cmpsl
lret
stos
pop
loop
jno
shr
adc
jae
aas
lods
mov
cmc
xchg
pop
xor
mov
rcrl
ljmp
add
xor
js
cmp
xor
add
cmp
popa
mov
jge
xor
lret
adc
pop
cmp
inc
lock
sbb
push
cmc
jp
cmp
pop
cmp
inc
in
inc
mov
pop
sub
add
enter
push
cmp
dec
pushf
cmp
xor
pop
or
xor
or
shrl
outsb
adc
sub
je
push
adc
scas
lahf
lahf
adc
fistps
pop
shrl
repz
inc
repnz
ja
inc
push
call
mov
fs
mov
fcmovne
stos
jae
cmp
and
push
loop
pop
mov
xlat
dec
push
mov
cmp
adc
jae
es
into
push
add
cmp
ret
pop
aaa
in
inc
addr16
xor
ljmp
clts
cmp
push
and
leave
cmp
jge
ds
or
cmc
mov
jp
into
mov
inc
mov
subl
cmpsl
into
pusha
cld
jne
lahf
push
jl
mov
jl
imul
rorl
add
popa
sbb
fistps
xchg
outsl
pop
cmp
pop
add
in
je
add
aaa
adc
mov
pop
test
rorb
les
pop
test
imul
xor
mov
dec
sbb
sbb
inc
sub
imul
out
imul
add
std
mov
inc
mov
repz
cmp
pop
cmpsb
sbb
adc
and
rorl
sub
xor
stos
adc
and
in
push
popa
filds
insl
clc
adc
pop
lcall
mov
sbb
outsb
pusha
jle
mov
add
sub
test
fiadds
stos
cmp
dec
or
scas
lods
fsubrl
inc
dec
push
ret
cmp
sbb
cmpsl
mov
push
out
sbb
cmp
xchg
cmc
std
in
xchg
aaa
test
mov
jmp
pop
push
cmpsb
jbe
inc
add
push
jmp
in
in
push
mov
je
bound
inc
cmpsb
insb
mov
or
adc
leave
je
test
nop
test
aad
insb
push
clc
fcoml
ja
adc
test
pop
les
push
push
jne
rorl
out
das
xor
mov
shll
push
dec
sub
mov
mov
mov
adc
jp
sbb
xor
inc
push
out
mov
pop
nop
sub
sbb
fldcw
aad
iret
es
sub
out
jp
mov
xor
xchg
les
orl
mov
imull
sbb
iret
dec
mov
in
lock
add
inc
out
dec
xor
mov
js
dec
repnz
cmp
enter
adc
inc
dec
int3
jl
lea
addr16
outsb
ret
out
mov
pop
xorb
mov
in
xchg
pop
out
sub
ds
arpl
fwait
cld
push
or
inc
adc
inc
xchg
push
inc
xor
sbb
fisubs
loop
mov
ja
jmp
mov
ret
push
int3
leave
aam
xlat
xchg
fsubr
scas
dec
lret
inc
andb
sub
stc
jb
loope
push
xchg
jecxz
int
jmp
lahf
cmp
mov
jecxz
adc
jnp
dec
hlt
stos
ret
shrl
pushf
les
push
push
cmc
lahf
subb
inc
popf
dec
mov
ss
mov
jae
sub
mov
fidivs
test
mov
pop
and
inc
pop
cmc
stc
in
out
sbb
mov
mov
sub
lahf
into
push
andb
outsl
mov
or
push
cmpsb
in
ficoms
mov
cli
and
or
ror
pop
ja
mov
jl
xchg
fildll
add
mov
sbb
rcrb
mov
ljmp
enter
sbb
sub
mov
push
inc
lods
jg
fwait
dec
dec
xchg
xchg
jbe
cmp
mov
mov
and
xor
cmp
fdivrl
sbb
and
inc
inc
dec
cmp
ja
push
and
negb
lcall
sar
adc
cmp
test
sbb
and
add
xchg
pop
mov
cmpsb
inc
out
iret
aas
and
in
popl
jl
loope
sub
xchg
mov
or
jno
dec
lcall
push
sbb
push
pop
cmp
and
add
inc
xor
xorl
xchg
cmp
stos
arpl
and
mov
sub
or
or
jnp
pop
mulps
shll
push
dec
add
in
xchg
xchg
pusha
pop
in
adc
je
push
inc
cld
push
lret
add
and
mov
sbb
jne
jp
fs
lods
pushl
mov
sbb
std
dec
fs
mov
mov
int
out
dec
enter
xlat
daa
lods
push
lret
pop
push
add
cmp
out
xchg
jne
movsb
popa
or
lds
fninit
hlt
out
cli
mov
fsubrl
xchg
aas
loope
add
mov
cmpsb
out
jb
cmpsl
loop
add
fiadds
imul
sti
test
sub
jno
jo
mov
gs
sub
lock
imull
loopne
xchg
enter
add
in
jmp
sahf
or
hlt
mov
fisubs
cmc
sbb
shr
push
aas
mov
fldenv
cwtl
test
mov
aad
push
enter
btcl
push
pop
ret
mov
test
data16
and
dec
push
sbb
and
mov
fdivrs
leave
fsubs
mov
add
hlt
idivl
push
mov
mov
jae
inc
xchg
sub
andl
add
clc
add
xchg
xor
push
push
push
lods
sbbl
inc
inc
aam
adc
and
and
xor
lahf
cmp
jns
sbb
push
mov
mov
ficomps
js
jae
xor
inc
xor
dec
pusha
clc
arpl
or
sub
xor
inc
lret
jb
sub
push
ds
or
mov
add
popf
mov
jp
test
movsl
sub
jg
leave
mov
mov
or
sahf
icebp
ret
mov
mov
mov
mov
jno
xorl
dec
cmp
pop
cmp
sub
or
cmc
sub
cltd
jp
sbb
repnz
sub
jl
jmp
dec
out
ficoml
xchg
ret
and
aas
jb
mov
fstpt
or
dec
cmp
jb
lcall
pusha
nop
stos
in
push
and
enter
icebp
stos
add
jmp
inc
stos
jge
repz
and
mov
lock
lods
cltd
cli
incb
and
into
cwtl
cmc
in
sub
xor
or
sbb
dec
dec
cmc
and
in
xor
push
test
ss
cmp
inc
shrb
mov
sahf
mov
movsb
ss
mov
mov
xchg
ja
jae
fcmovne
pop
dec
fidivrs
insb
mov
fsubs
fs
loope
xchg
add
sbb
xor
repz
aas
fldcw
adc
lcall
outsb
sbb
leave
and
lea
nop
in
jge
dec
push
mov
lret
adc
repz
push
pop
ret
adc
adcl
scas
or
call
pusha
jge
in
rclb
pop
xor
fsubrs
pop
sub
inc
nop
inc
mov
scas
test
or
inc
mov
xor
stos
mov
dec
shll
inc
fidivrl
movsb
jecxz
or
dec
mov
xor
popf
rcrl
repz
test
or
pop
loope
xor
dec
or
xor
or
push
xchg
xchg
adc
mov
test
dec
pusha
jbe
scas
add
movsl
jecxz
jbe
pop
cmp
insb
enter
gs
ss
lret
mov
dec
sub
mov
out
in
mov
je
sub
data16
mov
cltd
daa
aas
shrb
jns
xchg
cs
dec
fwait
dec
jo
jg
dec
xchg
mov
addr16
mov
sbb
jg
xorl
lahf
call
jbe
out
mulb
cmpsl
sub
or
inc
push
imul
popl
mov
xor
paddb
ljmp
subl
je
pop
jb
push
sub
and
jne
bound
repz
pop
mov
adc
push
loopne
xchg
outsl
push
mov
push
outsb
test
stos
mov
jne
imul
test
xchg
lock
ret
pop
test
test
insb
sahf
and
mov
add
jnp
orl
repnz
pop
mov
mov
lret
mov
mov
movb
jge
sub
call
sbb
mov
mov
adc
jbe
sub
and
dec
movups
lret
sarl
jo
sub
jl
dec
lcall
jg
lret
ja
movsb
sub
jo
cmp
repz
mov
dec
dec
push
inc
dec
push
xor
xor
push
dec
stos
fiadds
je
dec
dec
lods
adc
test
aad
pop
lret
sub
inc
mov
add
fwait
mov
insl
fwait
sub
dec
cld
insl
mov
pusha
pop
in
xor
add
sbb
pop
int
lods
ret
push
clc
cmpsl
nop
iret
inc
jecxz
pop
out
xor
mov
add
stc
dec
fldt
add
ficoms
stos
mov
pusha
mov
mov
xor
inc
add
pop
ficomps
dec
repz
ss
lret
lock
mov
and
sbb
test
or
push
mov
adc
out
inc
enter
icebp
xor
repz
mov
orb
inc
sbb
dec
and
or
loop
stc
mov
dec
lock
pop
loop
xor
push
es
fsubl
out
into
insl
ja
aad
cmp
fsubr
imul
jg
dec
sbb
mov
inc
ret
mov
in
push
sar
push
dec
mov
std
or
push
insb
shlb
call
adcb
in
jns
xorb
ficoml
xchg
add
icebp
push
es
divl
test
ja
test
fimuls
scas
mov
cmp
mov
dec
rcrl
adc
test
aad
lock
jmp
cmp
pop
lods
shrl
and
or
mov
frstor
adc
cmpsl
mov
aaa
push
aam
in
mov
hlt
shrb
insl
lret
xchg
sbb
in
loop
push
ds
pop
xchg
pushf
es
push
pop
xor
fwait
jl
pop
lods
in
cwtl
ret
adc
fcomi
pop
loop
lahf
add
and
lcall
xchg
dec
add
cmp
rol
imul
enter
cmpsl
cli
and
pop
fisttps
mov
int
push
pop
fisttps
jno
add
xor
and
mov
inc
and
fisubrl
clc
sahf
mov
cltd
sbb
jno
push
int3
xchg
lock
sub
sub
xchg
imul
xor
jno
xchg
fwait
jne
mov
dec
mov
dec
scas
xor
push
xor
sbb
cmp
sbb
jmp
sbb
sub
adc
jmp
mov
mov
jge
xchg
addl
mov
sub
cmp
stc
mov
inc
stc
pop
nop
repz
aad
in
cmp
call
jne
pop
add
or
aaa
test
dec
cld
and
cmpsb
call
adc
jmp
test
fwait
icebp
cld
adc
in
je
mov
enter
cwtl
psubusw
xchg
mov
out
stos
test
cmp
leave
subb
jg
inc
sarl
add
jbe
mov
js
inc
xor
imul
jbe
stos
lds
or
xchg
inc
inc
pop
push
test
push
mov
aas
outsl
pop
mov
adc
inc
cs
data16
sub
negb
push
or
cmp
mov
nop
ss
xor
dec
aam
nop
test
loop
test
out
mov
pop
bound
mov
imul
cmp
sub
ja
mov
adc
cltd
push
adc
and
cmp
fwait
into
inc
mov
mov
xor
scas
xor
sub
orl
sbb
vcvtss2sd
adc
rclb
aad
jnp
push
and
gs
loope
sbb
mov
jle
mov
lods
in
xchg
fwait
pushf
mov
cmp
psrld
dec
jl
mov
clc
push
shl
push
out
mov
pause
loopne
adc
xor
loope
shlb
jne
pop
push
inc
out
push
cld
fs
sub
jl
xchg
sub
xchg
mov
push
xchg
xchg
in
sub
mov
mov
inc
dec
xor
popa
and
or
adc
out
dec
imul
dec
xchg
addl
cmp
idiv
cmp
mov
and
scas
pop
inc
push
ret
inc
mov
sti
pop
aaa
cld
mov
test
scas
repz
xor
lods
aas
ret
cli
test
mov
movsb
inc
les
std
jbe
cs
adcl
pop
pop
movaps
js
mov
pop
jne
dec
or
cmpsb
or
dec
lock
in
ds
xchg
in
orl
hlt
lods
andb
dec
xor
pushf
cmpsb
loopne
das
daa
stc
fdiv
roll
xchg
fs
test
cld
inc
fisttpl
add
mov
gs
mov
xor
fs
or
iret
mov
or
bound
push
imul
pusha
add
cmpsb
test
jne
push
addr16
outsl
iret
sahf
out
jmp
mov
sub
sahf
leave
push
mov
dec
dec
mov
or
hlt
popa
sub
enter
dec
rol
mov
adc
xchg
xor
das
push
shl
ret
push
and
xchg
dec
or
int
fxch
andl
jb
clc
xchg
test
cmpsl
pop
add
popa
fwait
lret
add
js
cmp
sub
and
adc
push
out
pop
sub
outsl
mov
and
push
and
and
jecxz
shrl
sub
repz
jbe
ret
cld
cmp
inc
inc
or
or
outsb
jle
add
lods
in
stos
adc
xor
gs
push
mov
loope
nop
add
daa
inc
pop
shlb
arpl
sbb
popa
movsb
popa
jp
ret
movups
and
daa
lret
movsb
lods
jns
pop
adc
insb
jmp
call
or
les
jmp
mov
and
std
jae
sarl
add
mov
xchg
sub
xchg
test
mov
and
xchg
jmp
pushf
xchg
push
xor
cs
insb
xchg
fcmovbe
lcall
jnp
cmpsb
xchg
orb
loope
js
lock
lcall
push
xchg
cmpsb
fwait
add
lea
in
jecxz
in
xor
and
sbb
mov
daa
mov
pop
jo
or
fistpl
imul
fsubrs
pop
rcrl
aas
data16
out
pop
repnz
xchg
or
and
sbb
gs
outsl
xchg
xrelease
cmp
mov
sub
adc
dec
push
cld
xorb
adc
sbb
ds
test
pop
rclb
jno
iret
pop
push
pop
int3
dec
pop
sbb
or
dec
adc
sbb
in
divl
add
xchg
pop
mov
push
lods
or
arpl
push
cmp
xor
lods
popf
movb
scas
push
push
outsl
dec
dec
ret
lahf
out
aaa
cmp
or
and
popf
dec
mov
psubb
aaa
mov
int3
pop
insl
aas
int
xchg
lcall
xchg
inc
test
mov
daa
mov
cwtl
mov
and
roll
lcall
aam
clc
inc
pop
sbbb
test
in
push
jo
test
and
das
fidivs
mov
lds
fwait
add
nop
clc
rcrl
jb
idiv
lret
call
mov
pop
fisttpl
int
xchg
sbb
xor
pshufw
fstpt
mov
cmpsl
and
pop
out
sub
shll
inc
and
cmp
adc
iret
sub
js
mov
cvttpd2dq
stos
jnp
and
mov
push
sbb
mov
std
push
pop
sbb
test
sbb
cltd
cmp
xor
mov
ss
or
fimuls
aad
or
sbb
push
inc
inc
cmp
inc
xchg
lahf
sbb
push
mov
mov
fs
inc
outsb
cmp
sub
ret
mov
test
sub
aaa
repnz
push
add
inc
push
inc
xchg
push
gs
ja
sub
subl
testl
add
adc
enter
lahf
aad
and
jnp
arpl
es
dec
inc
test
mov
push
mov
cld
or
push
mov
xchg
xor
pop
mov
xchg
push
sbb
fstpl
subl
mov
pusha
int
dec
cmc
mov
xor
xchg
je
sub
in
fwait
mov
inc
cmp
cmp
dec
dec
popa
dec
mov
out
xchg
dec
es
in
js
mov
jnp
pop
lods
daa
sub
dec
stc
sqrtps
gs
mov
inc
pop
cwtl
push
cmc
outsl
jl
lea
test
repz
cltd
sti
jp
sbb
fwait
pop
cmc
ret
out
mov
adc
push
fisubl
fildl
mov
add
adc
shl
iret
mov
push
stos
aad
push
mov
push
pop
dec
lds
jae
cmc
rcrl
lahf
leave
mov
icebp
movsl
jle
fdivr
mov
pop
and
mov
mov
gs
fisubl
loopne
fptan
or
sbb
mov
pop
xor
jmp
stc
push
inc
jae
sbb
push
test
lret
clc
lret
push
or
jnp
fucom
lea
sub
icebp
scas
ficompl
mov
xor
test
movsb
mov
and
pop
push
push
movsb
pop
insb
fisubl
shll
jo
dec
insl
outsl
orl
jp
jg
and
push
adc
sbb
and
push
es
call
sti
out
fisttps
out
adc
cmpsb
sbb
jg
imul
dec
mov
lock
loopne
dec
clc
and
addr16
push
loope
ret
sti
aaa
dec
js
stos
fs
sub
push
pop
out
cmp
cli
ficomps
jge
mov
xor
adc
dec
or
loop
adc
gs
dec
pop
push
add
push
mov
adc
mov
adcb
sbb
push
pusha
push
xchg
mov
fadd
jecxz
out
bound
aam
jge
data16
xchg
add
inc
dec
int3
dec
ror
cmp
test
test
or
mov
pop
addl
fs
cs
mov
repnz
cwtl
xchg
ss
vpshlq
insb
imul
sbb
dec
push
mov
inc
addr16
fsts
das
mov
std
dec
mov
rcrb
push
je
ret
jecxz
lret
les
test
fildll
fdivl
cmpsb
xlat
mov
test
jg
mov
ffreep
adc
inc
rolb
out
jl
fwait
dec
cld
mov
sbb
mov
arpl
movsb
xor
mov
cmp
lea
aaa
dec
mov
dec
push
adc
cmp
mov
adc
test
dec
ret
sbb
xor
dec
mov
sbb
and
pushf
sbbb
out
out
xor
cmp
push
mov
sub
cld
sub
mov
xor
fstl
test
fbstp
pop
sub
stos
mov
int3
stos
xchg
lret
cmpsb
push
mov
and
scas
gs
int
ja
hlt
mov
movsl
inc
hlt
mov
aaa
lahf
test
xchg
and
je
xlat
cmp
call
negl
fsubs
dec
jo
daa
mov
aam
lret
movsl
jae
sarl
push
and
rcrb
loopne
es
add
leave
push
push
add
stc
jne
and
jns
dec
dec
pop
pushf
lret
repnz
cmp
ljmp
cmp
jmp
pop
fs
sub
imul
push
jns
loope
loop
or
out
aam
mov
in
inc
fucomi
and
pop
in
in
les
push
movb
movsl
shll
mov
inc
and
fldenv
jmp
stc
mov
mov
loop
add
js
sbb
in
in
jmp
fidivrl
ljmp
sahf
subl
adc
aas
adc
cmp
pusha
push
inc
adc
sub
and
lret
test
int
sbb
mov
mov
pop
scas
xor
sbb
frstor
pop
std
jne
jns
idivl
fnsave
fbld
sbb
adc
push
std
sbb
mov
jb
pop
pop
stos
sbb
mov
pusha
sbb
jp
stc
and
sub
xchg
mov
hlt
mov
mul
sbb
imul
sub
stc
dec
rcll
sbbb
mov
scas
int3
jle
stos
mov
and
data16
clc
cmp
mov
sbbl
iret
push
adc
jbe
pop
ja
stos
addr16
aad
mov
cmpsl
xchg
xor
imul
mov
pop
cwtl
mov
sbb
enter
leave
cli
mov
xchg
xor
test
faddp
lods
push
faddp
push
call
faddl
stos
add
or
sub
fs
in
pop
nop
pop
mov
dec
stos
pop
sbb
sbb
dec
fisttpll
repnz
shr
xchg
push
cld
jbe
ds
scas
addr16
out
arpl
lcall
mov
clc
mov
xchg
mov
int3
cs
cli
fucomip
lret
jnp
add
push
repz
insb
cmp
addb
sub
and
sub
sub
insb
in
popf
jl
lcall
das
mov
or
and
dec
inc
jl
mov
inc
and
dec
les
mov
push
inc
inc
repnz
inc
push
pop
mov
test
enter
pop
js
and
push
fmuls
cmpsl
rcrl
and
push
jle
adc
lcall
mov
mov
xchg
clc
pushf
push
testl
pop
rcl
int
xchg
cmp
push
mov
pop
fists
mov
push
mov
ja
fwait
mov
rcll
js
and
push
sbb
arpl
sbb
test
sbb
ror
cmc
push
mov
xchg
pop
scas
jle
mov
shrb
xor
cmc
cmpsb
jbe
mov
xchg
xchg
and
repz
aas
dec
lds
out
in
outsb
inc
test
jb
cmp
xor
fdivr
inc
fiaddl
jmp
insb
cltd
sti
rcll
test
lahf
shll
lds
jmp
sub
mov
cmp
bound
lahf
sub
push
sbb
shlb
stos
test
sbb
push
and
xor
or
pushf
cmp
ret
addr16
pop
or
sbb
mov
rcll
test
fwait
sub
jg
scas
gs
in
mov
sub
testl
pop
push
cmpsl
jmp
les
sub
mov
xchg
cwtl
push
sub
mov
sbb
inc
sahf
push
lods
mov
sbb
enter
cltd
rcl
mov
xor
imul
jmp
pop
xlat
and
inc
aaa
repz
call
data16
cmp
mov
imul
fwait
sbb
push
push
dec
jg
adc
inc
mov
stos
popf
aas
pop
ljmp
shlb
not
pop
popa
enter
cmp
mov
push
pop
ja
iret
aas
xor
mov
pop
push
in
pop
dec
adc
mov
outsb
jo
xchg
add
jle
out
fidivrs
push
push
cli
es
shrb
cmpsb
iret
inc
xchg
jle
sub
cmp
dec
repz
scas
popa
or
out
or
push
dec
lods
ret
mov
ret
sbb
cmpsl
outsl
mov
scas
mov
jp
mov
dec
scas
xchg
dec
das
jp
out
pushf
lods
clc
sbb
pushf
cmp
jle
or
inc
dec
rcrl
xor
mov
hlt
or
inc
xchg
fcoms
add
jb
sbb
push
xor
ds
in
es
sarl
outsl
mov
das
xor
adc
mov
cmp
pop
jnp
bound
jnp
into
in
daa
add
and
pop
stos
cmp
mov
rcrl
add
mov
sbb
cmp
push
pop
dec
add
and
pop
mov
in
xlat
mov
nop
push
lods
movsl
andb
mov
mov
in
out
insb
movsb
jnp
push
into
jmp
lds
cmp
xlat
test
pushl
mov
sbb
cmp
mov
lcall
scas
cmp
jmp
jp
sti
bound
in
add
int3
adc
vmovq
repz
sbb
xlat
dec
fiaddl
mov
lods
xorl
divw
inc
inc
inc
sbb
stos
ret
int3
sub
addr16
lcall
jmp
cs
test
xlat
sbb
and
sbb
in
test
ds
in
mov
or
test
lods
mov
inc
aad
push
lods
lahf
cwtl
je
mov
inc
mov
sahf
inc
mov
repz
scas
or
cmp
sub
scas
idiv
jp
pop
mov
dec
mov
adc
mov
ja
gs
add
cltd
inc
fsts
mov
fwait
fsubrl
pop
daa
add
mov
iret
ret
mov
test
cmp
jmp
xor
pop
dec
xchg
dec
jo
scas
push
xchg
sbb
jnp
push
dec
and
dec
dec
inc
mov
andl
push
ja
push
push
mov
cmp
daa
or
xchg
inc
outsl
sub
lea
xor
pusha
adc
clc
out
sbb
inc
insl
pop
out
stos
cmp
cltd
inc
aam
mov
add
cmp
fstl
sbb
js
cwtl
inc
or
add
mov
into
push
xchg
mov
nop
mov
js
mov
test
and
inc
mov
mov
aam
hlt
paddb
jg
and
mov
shl
push
xchg
cmp
pop
xchg
mov
sbb
test
repz
jge
and
insl
shll
daa
int
pop
push
mov
mov
sahf
pop
lock
lret
repnz
test
ss
push
fs
aam
fisubrl
scas
pop
and
mov
jecxz
insl
ds
cmp
ret
inc
adc
mov
dec
adc
mov
lret
es
inc
fsubrl
gs
xchg
leave
loop
inc
pop
das
shlb
nop
out
mov
cld
loop
add
movsl
cmpsl
push
mov
adc
cs
sub
push
sub
add
and
mov
dec
mov
dec
inc
repz
push
add
or
lahf
loopne
pop
test
xchg
sti
sbbb
loope
mov
xchg
mov
lret
push
loopne
lea
fnstcw
inc
adc
sbb
sub
leave
jae
pop
or
adc
and
das
or
cmpsw
scas
sbb
mov
into
mov
icebp
push
insl
xlat
push
add
inc
dec
fwait
push
sub
addr16
jge
lret
dec
imul
repnz
sub
out
ret
rcll
les
push
not
outsl
dec
test
pop
mov
sbb
mov
push
sub
sub
sahf
inc
dec
ret
scas
dec
dec
lods
insb
int3
mov
jl
push
adc
mov
add
push
into
cmp
dec
sub
cmp
cld
sti
int3
add
pop
push
aad
movsb
cmp
lret
out
enter
xchg
adc
ret
sub
push
jge
repz
cwtl
ljmp
pop
pop
mov
push
mov
sub
icebp
ds
sbbl
test
inc
xlat
or
movsb
movsb
fstpt
pop
rcrl
adc
divb
inc
dec
xchg
stos
inc
fwait
xor
cmp
pop
cld
outsb
xchg
pop
ss
xor
pop
push
inc
js
adc
mov
inc
test
inc
sub
int3
into
enter
aad
iret
mov
fdiv
mov
sbbl
adc
mov
rolb
sub
dec
js
mov
jecxz
aaa
aad
inc
pop
cmpb
test
lds
inc
pusha
leave
int3
pushf
cmp
mov
xor
icebp
popf
hlt
jb
xor
jmp
jbe
inc
and
fcmovnb
inc
cmpsl
adc
push
fnsave
lret
xchg
dec
sub
mov
rol
or
ds
push
popa
xchg
mov
xchg
sbb
sub
mov
mov
fisttpll
ja
movsl
mov
pushf
sarl
loop
outsl
mov
jl
dec
mov
js
loope
jle
test
push
movb
into
loopnew
inc
mov
lcall
xchg
addl
roll
pop
pop
add
sub
push
jp
int3
fdivl
fiaddl
mov
pop
sbb
inc
loop
push
pop
mov
sub
fiaddl
mov
inc
cmp
lcall
outsl
or
pop
fists
fisubs
sub
pop
cmpsl
inc
cltd
loope
jmp
mov
cmpsl
ss
xchg
push
rcrl
xor
mov
pushf
xchg
in
or
clc
jg
or
jecxz
push
stos
jp
inc
xor
test
dec
push
mov
xchg
xor
enter
jbe
mov
mov
cmpsb
jb
jo
mov
xor
pop
test
das
cs
dec
cmp
inc
and
mull
insb
push
jae
jecxz
push
push
pop
mov
dec
scas
push
movsl
nop
insb
mov
inc
test
repnz
addr16
adc
lret
xor
shlb
cld
xchg
sub
push
clc
dec
pop
adc
xchg
loop,pt
mov
mov
adc
sub
stos
jg
leave
jge
xor
xor
jns
inc
dec
mov
cwtl
pusha
lock
int
mov
lcall
mov
cld
and
adc
sub
jne
negb
fs
je
lcall
or
xor
cmp
dec
lret
scas
sbb
mov
push
lret
pop
mov
mov
in
mov
sbb
xor
sub
rol
jle
ja
sahf
scas
xchg
bound
add
jmp
pop
fsubl
xorb
inc
and
fwait
push
repnz
pop
mov
pop
pop
popa
and
cmp
add
stc
rorb
pop
out
sub
inc
sbb
jge
sahf
lahf
or
mov
int
jmp
pushf
into
sub
movsb
pop
cmp
int3
aaa
mov
std
stos
out
ret
aam
mov
cwtl
or
xchg
mov
xor
test
sbb
cmp
stos
cwtl
fwait
jnp
mov
dec
add
sbb
pop
js
xchg
dec
jmp
addl
aaa
lds
xchg
mov
mov
rcrb
xchg
jecxz
add
orb
fwait
cmp
lds
push
cmp
xlat
pop
sub
div
clc
xor
icebp
add
add
xor
sbb
scas
jge
fcmove
mov
bound
pop
fucom
add
gs
mov
inc
jle
imul
jmp
iret
pusha
sbb
insb
repnz
xor
push
frstor
mov
and
ss
adc
xor
ret
arpl
ret
mov
sbb
aad
pop
pop
stos
cmp
adc
xor
rol
and
jl
xor
pusha
push
dec
and
mov
inc
pop
imul
xlat
lock
cld
cli
popf
cmpsl
push
mov
cmp
jmp
mov
jno
or
add
fwait
jb
in
ja
add
dec
mov
inc
cs
xorb
adc
nop
jle
lret
lret
mov
sti
ja
fisttpl
loop
sub
stc
stc
cli
mov
sub
ret
inc
pop
sbb
loope
inc
cmp
sbb
ffreep
sbb
jle
xchg
aad
adc
adc
jmp
cmp
pushf
jmp
les
add
sub
mov
outsb
push
mov
andl
outsb
in
out
mov
lods
sahf
inc
xor
bound
mov
pop
mov
int
inc
adc
data16
in
add
mov
sub
mov
pop
in
mov
psubw
bnd
dec
out
mov
inc
mov
mov
aad
jbe
pop
jmp
scas
lcall
push
jb
in
xchg
or
sub
pop
movsb
pop
fsubs
dec
lods
push
test
fdiv
xor
and
pusha
outsl
xor
pop
mov
xlat
dec
loope
xor
sub
test
leave
jmp
sbb
fdivrs
push
or
scas
mov
sbb
mov
lds
aad
xchg
sahf
add
rorl
loopne
inc
xor
cmp
jns
and
iret
sahf
std
push
loop
mov
lods
mov
sub
shlb
xchg
jp
xchg
mov
cmp
xchg
paddsb
dec
xchg
cwtl
ret
mov
int3
adc
xchg
iret
push
inc
mov
add
xchg
fbstp
mov
push
rcrb
int3
lret
xor
jp
into
pop
push
jl
hlt
pop
xor
cmpb
sahf
jg
fidivrl
cli
pop
es
es
lock
roll
mov
nop
or
sahf
testb
mov
lds
lods
ljmp
pop
mov
loopne
sbb
pop
ret
or
push
cmp
fildl
lret
dec
sahf
dec
div
fistpl
popf
andl
cmp
insb
jge
in
int3
ret
push
ljmp
repz
out
jb
dec
test
push
inc
clc
and
lea
push
mov
and
mov
int3
add
cmp
mov
add
scas
fmuls
pop
sarb
lret
cmpsl
push
rcl
inc
inc
orl
ss
shrl
cmp
call
xchg
add
cwtl
inc
lods
sbb
or
std
jnp
roll
and
mov
lea
inc
jns
dec
pop
cmpsb
xchg
dec
enter
mov
stos
int
pop
cwtl
xchg
scas
inc
adc
xchg
pop
pop
cmp
ret
pop
xchg
ret
or
xchg
mov
mov
jnp
cmc
aas
mov
popf
cmpsb
lahf
ret
jg
mov
pop
setb
out
sbb
jne
adc
jmp
sbbb
lock
cld
cmp
repnz
xchg
movl
mov
lcall
sub
sahf
arpl
rolb
popf
std
mov
add
es
jb
aam
into
mov
movsl
stos
ds
outsb
ret
jecxz
shlb
je
movb
sahf
ljmp
aam
xchg
out
lods
orb
mov
mov
xor
inc
cmpsb
inc
ret
pop
adc
popa
push
push
inc
adc
add
lahf
cmp
mov
in
mov
insb
jne
js
test
jp
and
jge
add
lock
int
jnp
sub
aad
shrb
sarl
and
orb
xor
jmp
negl
mov
jge
out
adc
test
xor
sbb
pop
sub
stos
in
ret
test
cmp
sarl
fistl
or
js
ffree
sbb
pop
mov
sbb
imul
scas
imul
mov
sub
push
call
push
cmc
jge
loope
push
lock
adc
rcrb
mov
mov
jl
xchg
jge
idiv
test
idivb
jno
xchg
dec
mov
pop
ja
test
jmp
or
aad
fs
mov
cmp
mov
roll
xlat
orl
je
pop
enter
pop
std
lods
push
pop
cmp
xchg
mov
adcb
push
fs
mov
xlat
cmpsb
sbb
int3
ret
push
pop
inc
cmp
icebp
shlb
imull
mov
hlt
test
pop
scas
bound
jne
fdivrl
add
scas
jle
in
cmpsl
sti
aad
push
inc
push
rorl
pop
xchg
add
mov
shl
daa
lds
and
lea
and
push
mov
dec
pusha
mov
mov
pop
pop
movsb
mov
lods
sbb
pop
cmp
je
daa
dec
dec
jno
cmpsl
mov
inc
inc
dec
xor
out
sarb
gs
or
xor
cmp
jg
mov
push
rcll
mov
xchg
xchg
inc
pop
sub
push
movsb
test
dec
shll
mov
xchg
add
repz
cmp
push
mov
or
jge
inc
in
cwtl
arpl
pop
fisttpl
insb
inc
das
cwtl
xchg
mov
lods
in
xchg
hlt
pop
or
jg
pop
jmp
xchg
adc
test
xor
xchg
add
js
pop
sti
cld
cmc
sti
enter
sub
cmp
xchg
mov
dec
pop
aaa
xchg
cs
pusha
arpl
lock
cs
cli
add
xor
mov
gs
push
into
mov
add
daa
sbb
fwait
dec
dec
sub
pusha
xor
push
shrb
push
mov
mov
inc
pop
xor
movsl
movsl
icebp
cmp
push
data16
lret
push
popa
xchg
add
mov
push
ror
cmpsb
sbb
pop
stos
add
shlb
pop
adc
sbb
inc
jmp
mov
adc
mov
dec
enter
sub
xor
je
or
mov
pop
adc
scas
fwait
loope
xchg
std
fdivs
nop
xchg
out
cmp
test
repnz
cmp
push
lock
dec
imul
in
mov
mov
les
inc
movsl
lods
test
insb
jmp
add
adcb
sarb
sub
xchg
icebp
dec
inc
xor
sbb
and
mov
push
jl
shll
nop
call
hlt
call
stc
sbb
dec
sub
or
mov
mov
pop
pop
pop
cmpsl
pop
mov
enter
repz
jl
imul
jno
push
or
push
xchg
ret
mov
test
iret
leave
cmpsb
out
adc
pop
lahf
call
fdivs
push
sahf
fnstenv
jnp
mov
mov
pusha
icebp
sbb
and
xor
sahf
aad
sub
push
jnp
hlt
mov
push
ljmp
cwtl
push
pushf
mov
call
mov
out
cmp
jnp
adc
into
push
lret
insl
xchg
sbbb
loop
adc
rcl
push
cli
xchg
pop
sbb
or
jo
int
shll
mov
jb
sbb
int3
das
jo
out
repnz
aam
lds
mov
dec
sbb
xchg
in
jbe
fildl
gs
jge
push
stos
pop
ficoml
jns
inc
push
outsb
outsb
fs
dec
mov
pusha
xor
repz
in
lea
xlat
jl
xor
mov
insb
pop
sub
and
pop
ret
xchg
outsb
sub
inc
adc
iret
jge
out
pop
popfw
or
or
mov
push
sti
jno
test
in
ss
mov
ja
fisubrs
jbe
faddl
and
xchg
add
cltd
push
cmpsl
cmc
iret
ret
cmc
fisttpll
adc
jno
add
ljmp
gs
negb
jns
mov
movsl
lds
ret
add
cmp
adc
fwait
out
push
or
mov
pop
rorb
adc
jecxz
adc
pop
insb
stos
lea
sbb
popa
insb
gs
dec
pop
js
xchg
mov
sub
mov
cwtl
loop
and
push
test
sar
xor
mov
scas
out
lds
loop
mov
sahf
lea
lods
in
imul
mov
push
sub
cmp
mov
out
call
lret
pop
pop
insl
sbb
rcrb
scas
lahf
pop
enter
xchg
in
je
testl
lods
jo
jo
fadd
sub
fwait
adc
pop
js
mov
arpl
fs
sbb
out
mov
test
dec
pop
insl
xchg
xchg
add
push
scas
stos
xor
mulb
mov
scas
jecxz
jle
push
popf
enter
insb
clc
xchg
clc
int3
mov
insb
adc
loop
negb
xchg
aam
jne
scas
cmpsb
mov
stc
test
insb
xlat
fcmovnu
sub
seta
test
sub
sbb
mov
popa
aam
xchg
out
ds
xor
in
lret
aam
add
fcomps
adc
adc
and
int3
stc
xchg
cmp
adc
and
and
andl
pop
adc
mov
pop
hlt
dec
ds
pop
pop
cmp
loopne
pop
js
movsl
dec
imul
jge
mov
xor
add
das
ja
popa
jecxz
jp
cmp
adc
push
cmp
jge
in
mov
mov
les
lods
negl
lret
pop
out
das
ffree
sbb
mov
mov
mov
push
sbb
xor
movsb
notl
shld
add
mov
mov
daa
jb
gs
push
imul
aaa
or
pusha
in
and
in
add
loope
aad
fimuls
shrl
sub
leave
into
mov
add
addr16
mov
cmc
hlt
ds
lods
mov
push
or
xor
jnp
addr16
or
mov
jo
or
repz
mov
pusha
adc
pop
push
insl
cmp
push
lods
movb
dec
rorl
inc
or
out
cs
push
cmc
test
fcoml
and
sbb
mov
loope
dec
ja
lret
outsl
inc
stos
fstps
rcl
sbb
dec
mov
pop
sub
test
js
data16
shlb
je
stos
pop
adc
shll
cmp
push
or
vpsrlq
pop
out
jp
cld
cmp
lahf
pop
mov
outsb
xchg
pop
sbb
nop
nop
mov
push
cmp
xor
or
jno
cmp
mov
mov
iret
ljmp
push
cmc
mov
xlat
lret
pop
in
repnz
jnp
adc
rep
push
loop
or
std
stos
and
mov
mov
cmp
dec
out
js
or
pop
shlb
popf
push
add
lret
in
sti
jg
mov
mov
mov
xchg
cs
push
jb
adc
xchg
gs
div
lods
in
stos
xchg
jne
mov
push
push
cmp
or
out
sahf
push
aas
sub
gs
xor
rol
stc
sahf
filds
mov
pminsw
popa
xor
cmp
rcl
fsubrs
jae
sarl
test
mov
out
push
or
out
test
cld
subb
je
xchg
jnp
xor
fdivr
cwtl
cs
cld
sub
lods
sub
aad
push
insl
inc
mov
rcl
lahf
out
and
popa
inc
mov
sbb
andnps
dec
jno
mov
lret
and
xlat
jo
dec
sbb
dec
pop
inc
jmp
pop
xchg
mov
ss
loopne
push
movsl
sbb
sbb
mull
stos
xor
icebp
mov
cld
icebp
in
mov
sub
loopne
dec
jbe
jmp
cmp
xchg
pop
sahf
xor
fstl
jne
sbb
in
push
jp
jecxz
shrb
xchg
push
and
dec
popa
or
subl
in
lock
sub
shr
cmc
mov
adc
repz
cltd
add
sahf
jle
jae
addl
call
or
pop
lret
cli
cmp
sub
cmpsl
jg
and
pusha
jae
lock
test
subl
fwait
and
cs
xchg
cli
scas
stc
imul
lods
clc
adc
dec
push
push
pop
xchg
jne
fmuls
mov
es
xchg
adc
int3
popa
and
hlt
or
shrl
into
iret
stos
arpl
or
mov
shlb
xor
pop
xlat
jecxz
movsb
loop
jb
stos
sbb
and
out
mov
js
inc
mov
ds
adc
enter
ss
loope
fdivrl
cmpsl
mov
jne
int3
adc
das
xchg
xor
adc
sub
call
loop
push
xor
inc
sbb
mov
or
lcall
xor
inc
insl
adc
push
pop
aad
xor
enter
xchg
fdecstp
in
push
mov
sub
popf
nop
daa
pop
add
sub
inc
std
loopne,pt
push
mov
inc
scas
outsl
icebp
scas
add
jg
cwtl
jne
add
lahf
push
mov
data16
aas
mov
xor
pop
mov
adc
or
or
jae
sti
pop
add
and
daa
xor
push
mov
dec
dec
scas
js
xlat
dec
xlat
and
out
sti
push
xor
inc
and
mov
mov
jbe
and
dec
mov
shrl
push
movsl
sahf
cltd
loopne
jge
add
jns
data16
jle
push
sub
negl
cmpsb
sbb
inc
dec
mov
mov
aam
popf
outsb
iretw
sbb
xor
xchg
dec
cmp
insb
sbb
cmp
ret
dec
push
test
add
imulb
iret
and
pop
repnz
cmpsl
cmp
xchg
movsb
cmpsb
mov
nop
xor
xor
xchg
arpl
dec
and
xchg
mov
sbb
or
idiv
mov
xchg
mov
das
stc
xchg
ja
mov
test
jecxz
insl
loopne
sbb
hlt
inc
mov
sub
adc
loop
inc
loope
test
jns
sahf
loopne
xchg
add
stc
mov
ret
hlt
xchg
out
addr16
sti
lcall
adc
movsb
push
jle
cmc
jle
and
enter
aam
push
and
bound
popa
jbe
icebp
jge
cmp
aam
jecxz
jae
ret
call
jo
and
adc
fldl
xchg
sbb
insb
xchg
shll
xlat
mov
and
jno
or
gs
dec
sbb
lcall
and
addb
push
and
bnd
ljmp
adc
inc
aad
outsb
fistps
jg
es
or
pop
lcall
mov
sub
sbb
imul
inc
pop
mov
xchg
test
outsl
cld
jl
lock
sbb
inc
icebp
mov
add
xchg
xlat
mov
mov
je
insb
xchg
fsubrs
mov
adc
mov
cmp
inc
xlat
sarl
jno
mov
mov
pushf
fwait
xor
int3
mov
shl
jb
and
pop
push
jl
push
xchg
das
sub
dec
out
xchg
jg
add
push
aaa
out
adc
test
and
inc
cltd
xor
pop
mov
je
sbb
stc
and
sub
rolb
or
sub
hlt
incb
cmp
inc
sub
lock
mov
jle
les
push
xor
lret
xchg
push
adc
and
test
or
xchg
in
addr16
aas
and
imul
pop
xor
ljmp
mov
sub
and
mov
add
push
cmp
icebp
insb
add
xchg
push
mov
xor
cmp
jmp
mov
dec
inc
xor
xchg
pop
push
loope
rcll
fldcw
push
push
das
push
andb
mov
mov
pop
ljmp
jo
cs
push
jnp
fsubl
dec
outsl
dec
aam
icebp
cmp
jno
mov
cld
mov
push
dec
sbb
push
out
enter
jecxz
add
adc
adcb
mov
xor
out
sahf
sbb
cmp
aaa
nopl
xor
sub
jge
test
cld
mov
cwtl
hlt
push
or
cmp
mov
scas
lods
jo
mov
push
add
insb
lods
mov
xchg
xor
out
sub
pushl
mov
or
dec
insb
xor
sub
shrb
push
test
rcrl
fisttpll
ljmp
les
fsubrl
xchg
or
cwtl
dec
lods
sti
scas
test
fistps
int3
fcoms
mov
insb
dec
int3
push
cmpsl
xor
lahf
scas
pop
mov
fcmovu
stos
addr16
sbb
add
jae
andl
loop
adc
push
lret
adc
xor
loope
fistps
popf
and
ret
ja
cwtl
popf
mov
mov
push
pop
xchg
cs
xor
fisttps
hlt
jg
or
outsl
jbe
push
jge
jae
popw
jb
loope
iret
aaa
pop
fimull
cmp
jge
in
cltd
xor
lcall
mov
fsubl
fiadds
cltd
iret
sub
cmp
fisubl
dec
sub
test
addr16
js
in
daa
pop
fidivl
stos
pop
jg
add
adc
fwait
outsb
pop
shll
addr16
or
add
push
mov
lret
mov
mov
adc
xlat
stos
js
jmp
pop
jnp
push
push
cmpl
dec
or
sbb
enter
loope
jg
mov
dec
sub
pop
cmp
or
outsb
popf
jnp
jns
pop
int3
cmp
mov
add
push
sub
push
push
int
inc
cmpsl
dec
mov
mov
cwtl
mov
in
sbb
mov
mov
sub
push
loop
aam
mov
outsl
daa
push
sub
lahf
sub
jne
xor
mov
sub
decb
cmp
loop
movsb
or
jle
fsubrs
in
mov
call
cmc
xor
cwtl
mov
dec
cmp
push
hlt
jge
dec
mov
xchg
cmp
pop
jecxz
outsl
sahf
roll
stc
xchg
dec
movsl
pop
xlat
pop
dec
push
dec
aad
fsts
sub
mov
push
leave
shrl
sub
mov
pop
inc
ret
ror
cmpsb
loope
shrl
sbb
add
add
std
and
js
rorl
cwtl
jb
enter
frstor
pop
jnp
jp
into
je
lds
xchg
ds
dec
ss
jns
inc
xchg
das
cmc
push
icebp
mov
pop
xchg
jl
jl
xorb
in
lock
or
mov
jge
add
gs
xchg
insl
and
dec
sahf
insl
adc
xor
push
test
popf
insb
sub
add
mov
pushf
mov
add
fisttps
and
inc
jecxz
fmulp
lcall
inc
pop
cmc
movl
jns
clc
iret
sub
je
insb
cld
mov
mov
inc
dec
cmpsb
bnd
ret
pop
sti
fnsave
push
push
mov
test
sbb
push
mov
movsl
pop
fisttpll
mov
rolb
and
aam
addr16
xor
mov
pop
adc
cmpb
popa
mov
or
je
div
xlat
cs
push
data16
add
dec
cmpsb
pop
call
andb
incb
xor
aaa
fwait
sarl
add
fidivrs
push
mov
mov
mov
xchg
jl
imul
mov
dec
inc
or
dec
shrl
adc
bnd
mov
mov
mov
and
inc
inc
repz
mov
sbb
dec
jne
sub
jge
mov
mov
sub
dec
fidivrl
dec
and
test
and
cmp
adc
pop
fisubl
xlat
cmc
push
inc
iret
inc
cltd
std
adc
and
hlt
add
pop
xor
arpl
or
shlb
push
aad
adc
xchg
cmp
std
sub
xchg
xchg
dec
mov
pop
push
popa
dec
sub
outsl
push
push
imul
jns
cmpsb
mov
jns
mov
aas
nop
add
inc
ss
mov
mov
fistl
lea
push
hlt
mov
jl
scas
push
or
loope
xchg
ljmp
and
jg
pop
inc
aad
mov
adc
sbb
mov
mov
addr16
xorb
push
loopne
jecxz
push
push
jnp
fidivrl
das
xchg
fdiv
dec
inc
lods
adc
test
addr16
pusha
pop
out
aad
rcll
push
inc
je
sahf
rolb
das
cmp
sub
fdivrs
pusha
pop
imul
push
and
and
std
xchg
add
mov
bound
inc
pop
test
or
ret
dec
cmp
mov
jle
faddl
loop
mov
aad
push
cmp
arpl
push
xchg
jns
cmpsb
mov
add
xchg
ret
mov
outsl
pusha
xchg
int
in
test
jp
jno
push
out
push
push
dec
jle
in
pop
call
push
rcrl
loopne
jge
mov
xchg
scas
loopne
mov
mov
jo
movsb
scas
pushf
cmp
aas
or
push
divl
or
aam
cmp
dec
adc
add
mov
inc
mov
push
lahf
fwait
lods
test
test
inc
das
imul
jns
cltd
shlb
jmp
sub
sti
fwait
sub
leave
sahf
test
sahf
test
jbe
jge
mov
adc
jmp
mov
mov
orl
jmp
sbb
mov
inc
xchg
adc
stos
scas
sub
mov
mov
ret
mov
cli
repz
dec
insl
stc
lcall
lods
sbb
adc
xchg
inc
xchg
mov
out
gs
cmpsb
les
dec
or
xchg
lcall
out
xor
mov
scas
push
test
roll
push
popf
sarb
pusha
add
mov
fwait
lcall
negb
push
loop
adc
adc
pop
pop
dec
push
shl
pop
fldl
mov
loope
out
adc
or
xchg
lret
dec
cli
inc
leave
jb
in
mov
mov
sar
and
je
mov
sub
push
inc
add
mov
cmpsb
pop
pop
push
mov
sbb
in
adc
mov
lret
stos
shlb
rcrl
xchg
sub
les
call
add
pop
push
mov
xchg
mov
pop
push
sbb
insb
aas
lret
jle
pop
xchg
in
js
fidivrl
movsl
pop
hlt
mov
lea
stc
mov
mov
dec
repz
cli
mov
fdivs
clc
mov
mov
push
sub
push
adc
rcll
mov
cltd
daa
subb
adc
psrld
sbb
mov
sub
movsb
stos
cmp
xchg
inc
rol
call
adc
cwtl
pop
mov
ret
pop
sahf
repnz
mov
dec
loope
aas
jle
enter
mov
outsl
push
mov
loope
loop
pop
outsb
int
jnp
cmp
cltd
mov
cmp
pop
cld
mov
fwait
xchg
push
out
lret
push
insb
sub
mov
fwait
cmpsb
les
jg
inc
push
or
daa
outsb
lret
or
fs
mov
movhpd
sbb
push
sti
sub
cmp
test
xchg
sub
and
inc
les
dec
jne
xor
jb
add
ficoml
xchg
sub
adc
lea
jl
sbb
mov
push
je
or
pop
xchg
mov
pop
xor
and
movsb
in
jg
insl
mov
aas
sbb
lods
push
aaa
lock
sub
in
jp
mov
mov
push
outsl
mov
mov
dec
test
test
popa
mov
inc
mov
iret
ds
pop
lret
cmp
aam
imul
cli
cmpsb
push
inc
xor
cwtl
push
lea
pusha
scas
dec
xchg
mov
push
sub
mov
cli
xor
cli
dec
dec
jo
pop
pushf
push
in
mov
adc
lret
rolb
test
xor
in
sar
enter
push
lahf
sub
out
insb
and
fbstp
test
pop
addr16
inc
xchg
cltd
xchg
imul
lea
icebp
stos
cmp
imul
out
clc
outsl
int3
jecxz,pt
je
mov
push
icebp
jns
mov
mov
push
dec
rcll
cmc
ss
adc
ljmp
js
mov
int3
scas
inc
test
jge
cs
es
inc
mov
dec
inc
lret
fimuls
adc
ja
push
test
mov
test
addl
nop
push
mov
mov
mov
dec
cs
xchg
xor
xchg
pop
add
es
jl
jg
int3
cwtl
mov
jno
cmpl
and
mov
xchg
aaa
mov
rcl
outsb
pop
loope
push
push
inc
jo
rcrb
pop
xchg
sub
repnz
and
lret
movsb
fistpl
add
sub
movsl
sbb
and
pop
adc
pusha
inc
push
out
les
fdivrs
pop
loop
shrl
int
xlat
ss
pusha
aam
jo
sbb
sub
inc
xchg
test
add
bound
mov
scas
nop
fadds
dec
aas
cmp
sbb
std
pop
sti
pop
ret
lea
sbb
jle
stc
cmp
aas
jnp
loope
mov
mov
jp
jbe
fdivl
leave
adc
lea
adc
lock
mov
popf
cmp
jg
xchg
pop
lock
pop
or
jmp
cmp
mov
je
roll
mov
mov
pushf
inc
adc
das
shll
jnp
aas
push
fwait
mov
cld
insl
popf
ljmp
mov
pop
pop
add
adc
adc
in
aad
sahf
das
loope
cmp
aad
mov
add
mov
scas
add
mov
dec
mov
add
roll
addr16
sub
ret
pop
mov
mov
out
cwtl
xchg
enter
mov
pop
outsb
cltd
shl
fcmovnu
into
dec
je
mov
int3
jo
jns
mov
dec
jae
pop
jo
cmpsb
sbb
loopne
push
repz
test
xchg
gs
pop
sub
ffreep
pop
int3
jae
dec
mov
mov
mov
je
or
popf
ret
xorl
scas
dec
idivb
jmp
in
inc
cmpsl
xor
cld
dec
scas
test
movsb
loopne
roll
shlb
leave
std
cs
ss
aam
cs
outsb
push
je
lods
mov
fistpll
push
cmc
iret
leave
lret
leave
sarl
fnstenv
sbb
addb
orl
out
loop
out
inc
push
sahf
movsb
or
scas
inc
xor
mov
jbe
xchg
xchg
movsl
shlb
shrb
mov
lret
faddl
sub
pop
and
mov
add
outsb
sbb
mov
mov
or
ds
test
fs
gs
pop
in
dec
pop
xchg
inc
out
popf
lods
add
mov
sbb
js
xchg
out
cmp
mov
popf
add
mov
lea
addr16
or
xchg
sub
pop
daa
sub
push
xchg
ljmp
xorb
int3
shlb
xor
imul
mov
jbe
add
add
test
clc
pop
dec
jmp
xchg
hlt
push
pop
push
popa
adc
jno
adc
outsb
test
movsb
or
cmovo
inc
inc
cs
push
nop
mulb
rcrl
ljmp
fwait
test
repz
scas
or
sbb
cli
scas
add
pop
imul
out
nop
jl
adc
mov
nop
imul
into
sub
daa
pop
mov
mov
daa
icebp
test
and
dec
dec
aas
jnp
mov
add
out
sbb
ljmp
xor
icebp
outsl
aaa
inc
sbb
dec
int
push
addr16
fucomp
sub
aaa
bound
xor
sub
notl
das
ljmp
loopne
xor
int
lret
and
xchg
mov
rcll
repnz
xchg
insl
aaa
mov
loop
addb
pop
lcall
cld
jo
mov
fisubrs
test
ss
jo
out
popf
sub
adc
hlt
cmp
mov
pop
inc
mov
add
rolb
neg
mov
out
jg
jle
mov
dec
pop
sub
push
filds
adc
mov
sub
fiaddl
out
ret
ret
mov
int
and
sbb
mov
sub
stos
mov
and
adc
mov
sub
mov
pop
mov
std
adc
shl
aad
inc
mov
push
push
dec
cmp
mov
add
cmp
pop
cmp
mov
pop
xchg
mov
imul
mov
mov
loop
xchg
lods
in
ret
fstl
cwtl
cmp
insl
repz
pop
push
lret
sbb
bound
rcrl
dec
dec
dec
outsl
cmp
adc
pop
sti
addb
cmp
dec
lret
std
mov
std
cmpsb
mov
inc
and
inc
das
int
scas
pushf
jp
cmpsl
sub
shll
and
mov
popf
imul
cmp
and
enter
ss
sbb
in
push
bound
push
jge
pop
adc
imulb
jle
or
imul
mov
fnstsw
mov
inc
cmp
push
jp
movsb
jmp
lret
mov
sbb
insl
lods
stc
xchg
sub
mov
jp
mov
or
jnp
mov
shlb
lahf
jbe
out
sub
sub
pusha
les
jp
mov
xor
out
ficomps
mov
lret
inc
outsb
shrl
fistps
fwait
mov
cltd
jae
add
inc
fs
aam
test
clc
xchg
movsl
lds
rorl
inc
shlb
imul
jo
inc
int3
sti
push
sub
mov
add
jle
loop
dec
mov
jno
push
jbe
incl
mov
sti
sbb
pop
jmp
je
rcll
lahf
icebp
arpl
outsl
cmp
ljmp
fbstp
cmp
ss
xchg
gs
or
loopne
ret
xchg
test
adc
pop
inc
sbb
mov
xchg
popa
ss
jbe
sub
xor
mov
mov
in
add
xchg
mov
add
xor
ljmp
clc
push
lods
xlat
xchg
add
pushf
outsb
push
andl
pop
cmp
push
aas
push
jl
fimuls
sbb
cmp
add
sub
adc
popa
rcl
in
js
out
add
jb
lods
mov
jge
adc
fildll
stos
cmpsb
jno
mov
lods
sub
in
mov
mov
nop
push
xchg
xor
pop
jno
pushf
call
jge
dec
inc
clc
insb
mov
out
pushf
ret
out
sbb
cli
jnp
adc
mov
push
mov
adc
add
xchg
xor
inc
push
jns
xchg
mov
xchg
xor
bound
divl
push
imul
push
mov
mov
adc
fcomp
mov
ret
jno
jecxz
mov
data16
or
fistl
ret
rcl
lahf
push
cmp
adc
mov
mov
jl
ret
loope
orb
rorb
and
mov
in
sbb
mov
stos
stc
dec
sub
out
scas
ja
nop
scas
out
imul
out
dec
add
ret
sbb
bound
out
shll
mov
rolb
out
inc
xchg
dec
stos
jo
arpl
cmp
sbb
aam
pop
fists
test
movsl
dec
popa
and
call
fs
push
xchg
aaa
enter
cmp
aam
in
sub
pop
inc
in
and
js
or
sub
push
js
cmp
or
test
jge
mov
push
ret
cmp
jmp
divb
icebp
xchg
sti
add
dec
pop
movsb
add
lock
ds
movsb
fnstsw
adc
stc
insb
fists
xchg
loop
mov
movb
scas
xchg
fdivl
cmp
leave
push
sbb
stos
loope
lcall
inc
ds
lock
mov
mov
jae
cmp
dec
int
aad
xor
xor
addr16
and
push
cmp
loop
mov
stc
icebp
xchg
out
jae
cld
cmp
and
out
testl
sub
pushf
xchg
or
inc
lcall
push
addb
je
sub
cmp
pop
movl
rclw
mov
fsubl
pop
inc
mov
jbe
and
add
add
adc
xor
cli
jle
les
sub
loope
out
cmc
xor
cld
push
mov
andb
xchg
mov
jle
jp
cld
adcl
xor
xchg
xchg
cmp
call
lock
sar
or
mov
loope
inc
ja
mov
aaa
int3
leave
push
stc
lahf
les
ljmp
leave
loopne
pop
fistpll
push
pop
dec
int3
mov
rep
stos
int3
jge
scas
mov
in
ja
sbb
aaa
outsb
push
fcomi
push
push
mov
loopne,pt
add
pop
push
aad
xchg
xor
stos
leave
sbb
cmpsl
loopne
pushf
cmp
push
jmp
aam
adc
mov
sbb
pop
push
cs
cmp
sub
loop
loopne
dec
inc
and
jp
dec
inc
fbld
stos
sbb
or
lret
jg
ss
subb
daa
shlb
gs
push
jbe
or
sbb
ds
das
shll
sbb
sti
inc
jmp
fdiv
int
clc
sbb
stos
pusha
mov
cwtl
cs
push
push
pop
inc
cwtl
mov
inc
sbb
sub
inc
inc
push
sub
sbb
loopne
jno
ss
testl
lahf
mov
dec
fsubr
jge
mov
out
push
cmp
cwtl
pop
repz
add
fisubrl
jns
mov
pop
sbb
rcrb
lock
outsb
ss
mov
inc
mov
jg
mov
xchg
sti
icebp
push
jmp
mov
jne
out
lds
fcoms
push
push
inc
xor
xor
jo
cmp
xchg
imul
push
cld
movsl
mov
or
loope
arpl
data16
out
out
repz
mov
jmp
lods
arpl
sbb
jmp
daa
lods
jp
xchg
std
fs
es
adc
dec
jmp
sbb
and
and
in
es
inc
aas
idivl
rcr
loopne
add
or
leave
cmp
adc
lods
mov
dec
out
dec
lods
call
xchg
fiaddl
into
popa
movsb
addr16
sub
inc
push
outsl
pop
dec
cmpsl
add
std
icebp
fwait
imul
in
loope
into
cmp
lret
dec
out
mov
and
inc
cmp
mov
outsl
imul
and
mov
test
mov
cmp
mov
cmc
pop
hlt
js
ret
mov
and
cltd
popf
stos
adc
add
sub
jp
ja
xchg
push
jl
mov
jmp
sahf
testb
incl
popa
cltd
jae
xchg
gs
fcom
adc
inc
fdivl
aam
jg
cli
mov
add
lea
adc
add
es
aam
data16
cmpsl
cmc
ss
cmp
inc
jne
jle
adc
fdivl
mov
mov
scas
xor
mov
pop
cmc
push
pop
inc
mov
stos
pop
xor
sarb
mov
insb
stos
shrb
mov
in
pop
inc
jo
rol
inc
bound
pop
ss
lahf
sti
loop
cltd
dec
loopne
jg
sub
push
out
and
jmp
inc
aas
cmp
push
addr16
ss
packssdw
jle
xchg
addb
add
mov
lods
loope
scas
enter
aam
shl
fldenv
xlat
mov
pop
sbb
aaa
mov
ret
or
ss
lret
pushf
sbb
loopne
xchg
lea
cld
lcall
jl
or
ljmp
jne
and
mov
loop
insb
movsl
rcll
mov
test
les
scas
test
dec
mov
bound
xchg
out
fs
lods
insb
push
and
or
mov
loope
dec
dec
pop
movsb
or
call
or
or
ret
mov
mov
cmp
mov
mov
sbb
sub
aam
adc
daa
jae
add
test
jne
nop
lods
sbb
imul
mov
scas
push
or
xor
jno
pop
mov
inc
aas
adc
and
fwait
jp
cwtl
xor
dec
xlat
or
fwait
cmp
fmull
pusha
mov
hlt
adc
testl
push
cmc
adc
sbb
rcl
cmp
cmc
pop
inc
add
push
or
add
repz
pop
shlb
lcall
xchg
in
adc
xor
stos
cmp
out
ljmp
cmp
out
lret
mov
repnz
fisubrs
lea
cld
insb
mov
dec
out
pop
es
call
test
ss
add
push
sub
mov
jnp
loop
ljmp
fdiv
xor
mov
pop
or
ljmp
dec
pop
jl
sbb
data16
js
ret
mov
dec
cwtl
cmp
rcr
mov
rol
dec
mov
orl
xor
add
jg
scas
mov
jge
loope
shrb
sub
inc
xchg
loopne
xor
jmp
add
and
dec
inc
push
jl
xchg
or
jecxz
sti
add
jmp
xorl
mov
popf
dec
test
dec
sbb
in
ss
pushf
and
mov
and
dec
ret
xchg
ja
adc
add
adc
je
arpl
xchg
stos
jmp
je
jb
sub
xchg
icebp
pop
cwtl
in
cmc
jecxz
outsb
lock
mov
pop
jb
mov
xor
sbb
ljmp
out
out
adc
xchg
xchg
in
das
jnp
aaa
lret
ja
cmp
call
jl
cs
popf
adc
lds
ljmp
xor
mov
out
adc
cltd
xor
cmp
lret
add
xor
mov
in
pusha
push
dec
xchg
outsb
jmp
mov
or
dec
mov
sub
pop
sbb
bound
pop
dec
testb
hlt
in
pop
xchg
mov
int
dec
push
int3
sti
hlt
imulb
sbb
pop
enter
movhps
test
sub
into
test
andl
iret
gs
cmp
xchg
sub
testl
lret
cmc
push
inc
mov
and
pop
sbb
and
and
jmp
cwtl
inc
ret
mov
loope
or
mov
xor
cmpsl
mov
jl
adc
mov
out
and
les
jae
test
fists
ret
xchg
imul
mov
lock
sbb
sti
lods
and
sahf
cmp
push
data16
aas
es
rcll
in
push
notl
enter
xor
mov
movsb
fsubl
cmp
sti
xor
xchg
and
cmpsb
je
push
sbb
lods
addr16
cmp
cmp
out
icebp
add
lea
lods
insb
ret
push
pop
pop
cmpsb
sub
in
mov
in
and
test
insl
add
dec
adc
sbb
js
ret
dec
dec
shrb
jp
or
pushf
add
lea
jge
pop
mov
dec
sbb
adcl
std
test
push
loopne
pop
jb
pop
cmp
fs
sub
adc
jmp
in
lea
cs
mov
bnd
mov
aas
ud0
mov
sub
xor
arpl
jecxz
testl
fidivs
sub
in
aas
mov
jp
andl
sub
push
in
das
outsl
insb
mov
and
mov
stos
sti
jg
mov
fldcw
aaa
mov
mov
cmp
icebp
mov
sbb
outsb
sub
sub
sbb
stos
jmp
dec
mov
xor
xchg
ret
sbb
jbe
sti
or
jne
or
addr16
cmp
pop
aas
pop
mov
jl
stos
cmp
or
bound
pusha
ja
mov
jg
pop
pushf
dec
rol
bound
iret
mov
icebp
jl
call
adc
mov
adc
xor
xchg
iret
push
in
fldenv
push
cmp
cs
in
adc
pop
sahf
add
fstps
gs
jo
fldl
mov
jo
stos
fidivl
cmp
insb
mov
mov
rclb
and
insb
data16
daa
aad
out
jg
in
std
les
pop
fldenv
sti
scas
jne
xlat
jl
pop
jbe
inc
push
pop
mov
shr
jp
imul
mov
pop
sub
and
mov
xlat
mov
shlb
cmpsl
or
xchg
cmpsl
sub
jb
mov
stos
bound
hlt
aam
sbb
xor
test
pop
jge
pop
ja
xchg
xchg
adc
xor
push
pop
mov
pop
lss
aad
push
jo
loopne
es
pop
mov
or
or
xor
gs
mov
cltd
cmp
mov
or
aam
scas
push
lods
sub
lea
adc
mov
xor
out
nop
in
cltd
stc
stc
out
ljmp
lret
leave
jne
inc
test
sub
out
test
push
mov
jmp
hlt
adc
ror
dec
push
pop
pop
add
mov
test
and
lret
sbb
mov
mov
iret
iret
insb
imulb
arpl
jecxz
add
ret
jb
daa
xchg
pop
enter
shll
pusha
nop
loopne
mov
pop
and
sbb
or
and
inc
adc
inc
aam
ja
stos
sbb
and
sbb
mov
lods
mov
mov
inc
pop
cmc
aad
mov
ds
sbb
cwtl
mov
outsl
aad
inc
out
pop
jo
jmp
cmc
add
dec
scas
enter
mov
inc
test
es
cwtl
mov
or
jae
push
jno
jg
inc
jmp
push
pop
into
in
xchg
sub
ret
push
inc
jns
push
push
es
mov
popa
std
jle
js
jle
test
cmc
and
inc
shll
lcall
sahf
xchg
mov
cli
adc
jae
xor
sbb
ja
or
pop
mov
cwtl
mov
mov
test
cmc
jne
xlat
sub
xchg
repnz
inc
ljmp
nop
cmpsb
mov
jecxz
ljmp
sti
fmuls
mov
fbld
out
jnp
jp
mov
dec
rcrb
sti
insb
xchg
push
sahf
mov
xchg
dec
mov
sti
in
add
decl
add
sbb
push
dec
push
bound
push
cmp
dec
movsl
scas
aas
cld
push
ja
add
push
or
insl
add
mov
mov
and
sti
adc
sbb
and
push
sub
mov
push
mov
xchg
fiaddl
cmp
add
fninit
in
jle
inc
mov
lock
gs
pop
dec
pop
mov
data16
negl
pop
lds
fmul
imul
jb
xchg
add
lea
je
cmp
inc
fmuls
int3
popf
mov
mov
std
fwait
adc
pop
inc
movsb
and
cmp
jno
popa
mov
inc
lock
int3
cmp
push
mov
sub
push
mov
pop
fisubrs
cltd
adc
cwtl
or
pop
je
add
xor
jl
adc
popa
orb
adc
dec
xor
jp
mov
ds
pop
inc
pop
std
or
pop
adc
mov
mov
jns
and
sub
pop
mov
arpl
sbb
ret
pop
cld
dec
adc
jg
insl
clc
aas
jecxz
mov
cmpsb
lcall
pop
int3
sbb
mov
jecxz
das
or
movsl
dec
mov
loope
mov
mov
and
lahf
pop
test
mov
imul
ja
mov
dec
lods
push
test
sub
dec
adc
out
cwtl
push
pushl
cmpsl
cld
jmp
jmp
jp
xor
xchg
add
pop
xchg
push
dec
rcrb
and
jno
movsl
and
add
in
and
dec
and
fsubrs
ja
xchg
icebp
enter
xor
sub
sub
ljmp
mov
push
les
inc
sub
into
je
jno
and
mov
jb
cmpsb
hlt
cmp
shlb
adc
pop
dec
jno
scas
lahf
fstps
mov
ss
xor
mov
ret
pop
push
fists
popa
mov
mov
or
mov
mov
lods
mov
cmc
and
sbb
pop
xchg
out
pop
cmc
xchg
mov
jge
pop
mov
push
jne
lock
lahf
aad
sub
aaa
dec
iret
jl
in
ret
mov
iret
test
jb
jg
insb
add
inc
loope
je
mov
push
mov
repz
pop
iret
mov
push
sbb
xchg
or
push
pop
sbb
pusha
push
mov
out
push
jl
jecxz
cs
push
insb
sbb
push
aam
adc
int
out
out
xlat
call
inc
push
jnp
aam
xchg
lea
jno
addl
xorl
mov
sbb
repz
mov
js
or
int3
pop
out
jnp
adc
lea
dec
adc
test
and
mov
pop
je
pop
mov
adc
stos
xchg
and
out
pop
xchg
adc
fsubr
int3
and
sbb
hlt
and
ds
jl
cmp
cmp
xchg
xchg
cmc
sahf
add
popa
mov
inc
xor
nop
inc
dec
push
xchg
fdivrs
push
adc
cmp
loopne
jmp
and
ljmp
jmp
fcomps
lock
iret
int
sub
ror
mov
repnz
inc
imull
lock
paddb
pop
dec
and
and
adc
push
add
scas
xchg
ss
mov
lods
jecxz
mov
push
movsl
mov
push
loope
dec
lock
aas
add
adc
cli
shl
or
sub
jne
mov
and
add
xchg
inc
popf
mov
xchg
xchg
icebp
mov
les
sbb
lcall
iret
stos
push
pop
cmp
aam
es
ret
pusha
lcall
add
mov
insl
jp
cmpsl
hlt
mov
xchg
stc
out
sub
and
xchg
test
movsb
add
loop
cs
cs
mov
xor
cmpb
and
and
loop
insb
sbb
push
mov
mov
cmp
sahf
gs
lea
sub
cmp
cmp
fbstp
adc
js
jno
dec
cs
fcmovnu
fsub
cmp
jge
xlat
sti
loop
cs
pop
pop
mov
inc
xchg
addr16
movsl
rorb
jge
push
pusha
pop
xlat
fs
pop
inc
outsl
rcrb
fldenv
lcall
outsb
jg
add
mov
lds
addr16
pop
jg
popa
and
inc
inc
in
inc
xchg
mov
insl
push
iret
push
adc
test
inc
clc
std
pop
outsb
cmpsb
lret
inc
inc
xchg
pop
push
mov
mov
cld
xor
out
pop
sub
js
int
pushf
pop
sbb
add
loope
not
inc
pop
xchg
pop
xchg
loopne
test
fadds
rcrl
mov
scas
inc
sarl
jmp
js
repnz
sahf
push
pop
arpl
arpl
cvtdq2ps
pop
or
inc
int
xchg
out
mov
push
xchg
dec
push
int3
stos
pop
adc
fnstenv
mov
lods
inc
mov
imul
fsts
mov
mov
jl
int3
xor
mov
pop
shll
pop
mov
sbbl
mov
jae
jge
flds
aas
mov
pop
loope
int3
arpl
sub
loopne
mov
jg
aam
jno
xchg
jmp
in
dec
fdivrl
mov
sub
lea
ret
and
or
jae
mov
mov
sub
cmpsb
sbb
fsubrs
or
fistl
inc
sub
insl
les
xchg
loopne
popa
roll
scas
lret
xchg
push
cmc
lods
popa
fld
mov
js
inc
mov
into
insb
ljmp
fcoms
xor
or
movsl
jns
pop
cld
repnz
fdivp
sub
lods
addr16
test
jb
mov
inc
nop
or
in
mov
orb
andl
and
ret
jo
imul
push
or
jecxz
dec
addr16
call
cmp
push
push
mov
or
sub
fisttps
push
imul
pop
in
int3
and
mov
inc
iret
in
adc
leave
mov
lea
inc
push
loop
dec
cmp
jl
scas
sbb
inc
imul
imul
aas
fsubl
aas
dec
xor
xchg
pop
inc
pop
sahf
jae
hlt
jnp
cmp
xor
mov
cmpsb
jbe
add
rclb
js
fdivs
fbstp
repz
pop
cld
jle
lock
in
and
int3
adc
mov
inc
jle
arpl
mov
sahf
call
push
mov
pop
cmpsl
notb
gs
and
xor
inc
loop
clc
adc
ret
stos
dec
int
cwtl
or
test
das
dec
and
xchg
cld
inc
add
lods
repz
cmp
leave
or
jmp
push
outsb
dec
int3
daa
sbb
lock
sbb
out
dec
fimuls
sub
das
dec
pop
fwait
movsl
aam
push
imul
movsl
lahf
lret
sbb
sub
enter
faddl
jnp
dec
dec
push
mov
xor
ret
in
iret
lea
jae
lock
lock
push
mov
lock
jg
shr
pusha
aam
gs
leave
mov
sahf
movsl
mov
mov
jle
icebp
adc
xor
imul
dec
ss
lods
or
xor
out
pop
testb
cltd
inc
enter
jno
js
fistpl
out
clc
daa
lahf
xchg
lds
in
sbb
adc
mov
push
test
test
mov
cmp
dec
test
sti
cli
cli
addr16
xchg
cwtl
sbb
loope
pop
pop
xchg
xchg
stos
pop
aaa
inc
dec
add
mov
lods
inc
adc
inc
sub
jnp
mov
daa
and
adc
inc
dec
push
xor
insl
fsubrs
or
int3
sbb
push
insb
in
cmp
sbb
xor
sbb
in
rorb
scas
push
mov
and
adc
scas
das
fnstsw
xor
mov
xchg
leave
mov
xchg
mov
inc
pop
or
arpl
pop
outsb
dec
jae
lahf
test
dec
jle
sahf
les
jo
sbb
xchg
jb
stos
inc
fsubrs
and
test
push
mov
mov
imul
ja
mov
xchg
pop
inc
loop
push
sbb
pop
loope
imul
movsb
lcall
cmpsb
loope
or
push
push
int3
push
add
sbbb
sbb
iret
sahf
mov
mov
sub
add
mov
mov
jno
xor
cmpsb
jns
dec
aas
mov
scas
inc
mov
push
stc
fsubl
ljmp
jecxz
mov
fmull
clc
aaa
push
lea
push
fbld
fists
adc
mov
fdiv
movsb
gs
int
mov
xchg
jns
inc
inc
inc
movsb
fisubl
icebp
jmp
xchg
imul
add
or
stc
cmpb
jmp
imul
xchg
out
sbb
stos
add
jle
mov
adc
sbb
icebp
cs
popa
and
sub
call
adc
lods
repnz
sub
clc
bound
call
mov
push
sbb
mov
scas
push
stos
xlat
mov
fwait
and
sbb
leave
cwtl
pop
mov
out
outsb
inc
loop
dec
xchg
repnz
xchg
in
outsl
jns
aam
jae
lods
inc
scas
mov
sti
jmp
adc
out
mov
push
scas
mov
sbb
sbb
mov
nop
jp
mov
xchg
ret
inc
cmc
inc
adc
push
inc
mov
jnp
incl
shr
aaa
nop
lcall
xchg
lahf
sub
data16
dec
mov
shr
repnz
gs
inc
or
pop
jae
lods
pop
fldenv
cmp
mov
int
dec
sub
imul
dec
sbb
and
mov
pop
adc
dec
adc
dec
dec
insl
jo
movsl
in
cmp
popa
faddl
scas
mov
add
push
cli
in
xchg
dec
dec
mov
sbb
mov
insb
mov
jmp
stc
aaa
test
mov
out
std
daa
leave
mov
mov
arpl
add
and
cmp
fidivs
fdivs
loope
in
iret
mov
rol
xor
mov
dec
fcompl
push
inc
jns
inc
js
shl
mov
or
push
push
add
into
loope
and
push
out
mov
dec
jmp
xchg
dec
int
mov
xor
cmp
mov
mov
loope
aad
sub
dec
popa
adc
sbb
movl
and
ss
push
lods
movsb
dec
mov
enter
stos
pushf
jnp
lods
add
add
testb
push
jmp
fsts
push
sbb
fwait
in
pop
fistpll
add
pop
lretw
fisttps
mov
xchg
xchg
into
or
scas
or
jecxz
jno
loopne
adc
push
shl
mov
in
into
sarl
sbb
jae
aas
or
and
popa
pop
pop
daa
loopne
push
out
jp
cmp
cmpsl
inc
dec
jae
xchg
xor
and
push
cmp
mov
sbb
sbb
add
inc
and
pushf
popa
mov
aam
add
pop
adc
stc
lods
outsl
jecxz
pop
cld
sbb
pop
mov
movsl
imul
popf
dec
sbb
pop
aad
push
xchg
sub
ljmp
movsb
cmp
aad
lock
test
xor
xor
scas
addr16
pop
sbb
xor
sub
dec
js
fcompl
sahf
and
repnz
lds
cs
daa
aas
jmp
sbb
movsb
les
or
sbb
sub
call
dec
adc
adc
pop
outsb
push
push
mul
dec
repnz
mov
pop
out
xor
popa
push
inc
push
lock
inc
aaa
jmp
rolb
and
decl
repnz
inc
add
orl
pop
movsl
push
xor
test
or
pop
inc
mov
and
aaa
xchg
mov
aad
sbb
jp
adc
pushf
leave
test
in
jo
jge
mov
movsb
xor
dec
xchg
aad
mov
xor
bnd
or
in
imul
and
push
sub
arpl
fs
leave
fmuls
call
divb
push
daa
mov
xor
pop
and
push
push
inc
lods
jb,pn
je
add
dec
cmpb
cwtl
idiv
iret
enter
or
add
movsl
cli
dec
adc
lea
xchg
enter
iret
hlt
cmp
xchg
ljmp
imul
pop
insb
cwtl
or
out
inc
sub
pop
mov
invd
cwtl
ret
bound
scas
jge
pop
loope
fdivrl
sti
add
sub
sub
cmpsb
out
and
xor
arpl
push
jne
jle
arpl
rorb
repz
or
xchg
push
push
test
jg
push
push
mov
mov
push
dec
shrb
xorl
and
addr16
aaa
stos
pop
std
jb
cmpsb
scas
adc
mov
notb
cmp
jecxz
mov
adc
push
mul
test
stos
scas
in
cltd
dec
pop
leave
cs
rclb
jno
icebp
mov
stc
pop
and
leave
add
mov
inc
in
sbb
cld
jne
pushf
mov
or
mov
sbb
outsb
testb
pop
push
sub
dec
fldpi
sub
test
jno
mov
inc
arpl
imul
aas
dec
cmpb
orl
dec
lcall
or
sbb
xchg
popa
dec
leave
notl
cmp
ljmp
aam
mov
push
cwtl
cmp
jo
xor
pusha
imul
push
push
daa
data16
mov
sub
pop
jecxz
lds
xchg
pop
xchg
scas
mov
inc
lahf
mov
sti
loope
adc
scas
sub
sbb
pusha
cmpsl
inc
or
lock
arpl
lea
push
cmp
leave
sbb
sbb
stos
les
rorb
adc
fnsave
lods
push
and
and
dec
mov
mov
mov
xor
jnp
subl
xchg
or
test
dec
iret
push
push
in
cmpsb
imulb
dec
mov
scas
sub
bound
cmpb
pop
out
ror
scas
and
cmpsb
aad
xchg
ja
adc
inc
jb
mov
imul
mov
dec
testl
push
xor
push
fcoml
jae
test
xchg
hlt
ret
lret
and
arpl
addl
xchg
pop
sbb
jo
mov
js
push
mov
popf
sar
pop
xchg
jo
mov
mov
jns
stos
sti
popa
scas
mov
dec
dec
cmp
add
aaa
push
fcomps
fsts
nop
rcrb
inc
scas
imul
push
push
sarl
ret
aaa
movsb
jno
jo
dec
mov
lcall
mov
jbe
cmp
lods
shll
or
jno
and
shll
aam
in
xor
xchg
mov
aam
xor
xor
int3
mov
inc
stc
das
push
dec
or
out
sti
mov
scas
mov
and
repz
mov
dec
nop
inc
mov
fiaddl
or
clc
cmp
hlt
rcl
popa
xor
adc
mov
or
jecxz
enter
outsb
mov
and
sbb
pop
out
dec
aaa
mov
ja
jbe
jae
or
test
fcoms
ret
push
out
sbb
mov
bound
mov
jno
mov
cmpl
aaa
fs
or
insb
adc
push
push
sbb
mov
lods
xor
cs
shlb
mov
je
mov
fisttpl
pop
pusha
jge
fbstp
mov
add
inc
int3
inc
fstps
mov
test
pop
pusha
js
dec
test
lods
jl
mov
int3
add
adc
jnp
gs
pop
lea
add
ret
bound
push
dec
aam
adc
and
xchg
mov
dec
scas
ret
jge
push
fcmovbe
add
mov
push
hlt
sahf
pop
jo
add
cmp
ficoms
sarl
imul
je
mull
lret
mov
andb
mov
fidivrs
or
pushf
sarl
jge
jno
movsb
call
stos
fistps
dec
stc
les
lods
pop
icebp
es
or
inc
incl
dec
iret
sub
pop
jbe
test
xchg
mov
gs
bound
xchg
add
or
fwait
cmp
pop
js
jecxz
lcall
clc
stc
test
les
jecxz
mov
rol
loop
mov
jge
or
pop
filds
and
dec
sbb
push
add
dec
imul
inc
sbb
stc
push
mov
dec
outsl
sub
dec
scas
and
pop
xchg
hlt
pop
push
lock
mov
mov
aam
icebp
mov
out
jb
stos
fsubs
push
cmp
jg
cmp
or
pop
push
cmp
pushf
cvtpi2ps
bound
cmp
sbb
and
inc
and
fiadds
sbb
faddp
inc
in
repnz
xchg
mov
inc
bound
cmp
repnz
mov
jbe
fnstcw
lret
fisubl
sbb
pop
add
xacquire
adc
xor
jmp
int3
dec
aas
xchg
outsb
inc
dec
add
aam
jmp
push
stos
aas
mov
xor
pop
sub
popa
or
bnd
sbb
mov
xchg
and
nop
push
mov
lods
lock
xchg
pop
push
pop
mov
pop
je
test
test
mov
xor
mov
das
nop
mov
xor
fldl
or
mov
popl
loope
push
jae
jle
ljmp
fsubr
sarb
imul
cmpsl
dec
push
push
jno
scas
xor
imul
push
daa
int3
lahf
xchg
je
pop
dec
pop
pop
dec
es
adc
jns
in
fnsave
pop
push
loope
dec
and
lahf
dec
lahf
dec
lods
pop
inc
insl
je
daa
jg
and
sbb
pusha
aad
and
pop
xchg
leave
or
stc
pop
xchg
push
shll
scas
fnsetpm(287
outsb
repz
xchg
cli
pop
cmp
jmp
add
loop
out
fisttpl
stos
xchg
lds
dec
add
lods
lock
jo
add
scas
sbb
cmp
imul
sub
jnp
jg
mov
scas
lods
mov
fnstcw
or
pushf
and
shll
push
inc
adc
rcrl
cmp
scas
lret
cs
mov
and
cwtl
pop
sbb
mov
ret
sbb
in
repz
sbb
push
push
lea
pop
add
push
jge
imul
ljmp
jb
sub
xchg
andb
lods
das
jge
cmc
xchg
fidivs
and
nop
add
pop
pushf
dec
mov
mov
arpl
aam
push
xchg
xlat
mov
mov
scas
dec
push
cmp
inc
jno
loope
lret
pop
mov
stos
addr16
arpl
sti
add
lods
lods
shll
push
xchg
popf
xlat
mov
mov
fwait
addr16
sub
cmp
mov
je
mov
sbb
adc
mov
fildll
jno
pop
mov
sub
clc
jle
out
ljmp
aam
imul
aaa
ds
insl
ret
cli
out
rolb
enter
lret
jmp
cmp
jo
and
repnz
movsb
cltd
ret
or
dec
add
pop
and
sbb
and
sbbb
in
je
lcall
in
adc
jns
dec
push
lahf
sbb
lods
mov
das
cld
and
sarl
in
or
popf
jnp
shlb
stos
data16
jbe
fiadds
icebp
lods
xor
fdiv
outsb
mov
mov
ljmp
je
nop
push
sub
inc
xlat
push
inc
into
jae
mov
popa
mov
cli
flds
or
xchg
mov
and
xchg
fisttpll
jno
mov
mov
imul
aam
jecxz
dec
pop
stos
jge
fwait
jbe
outsl
imul
mov
push
mov
mov
fisttpl
lret
dec
pop
or
mov
pop
and
cli
jge
clc
jecxz
xchg
mov
outsb
dec
add
lret
cwtl
cmp
xchg
add
mov
pop
xor
in
lock
or
push
sbb
mov
cwtl
adc
mov
add
mov
jp
mov
push
jo
sbb
es
pop
ds
mov
add
pop
js
cmpl
xlat
pop
imul
ljmp
mov
out
out
xor
sbb
cs
cli
xchg
out
mov
paddsw
fcoml
inc
out
dec
jbe
fsub
fnstenv
popf
inc
or
cmc
mov
inc
mov
dec
push
shrl
ret
mov
sbb
cltd
repnz
inc
jmp
arpl
xor
adc
push
cmovne
insl
sbb
mov
lods
rorl
jmp
js
cmp
ja
xchg
sub
adc
les
flds
addl
maskmovq
pop
jle
fmul
push
sbb
mov
mov
shl
inc
icebp
stos
shll
mov
stos
xchg
or
lods
mov
mov
clc
ja
push
cmp
jmp
push
sbb
cs
pop
and
xchg
cwtl
lods
cli
adc
jecxz
lock
movsl
rcr
jecxz
ret
mov
ret
lock
mov
jg
test
stc
lock
int
subl
xchg
push
jecxz
cmc
inc
gs
or
movsb
lret
mov
cmp
add
mov
add
sbb
adc
mov
mov
sahf
negb
adc
push
add
push
xchg
jp
faddl
or
out
ret
add
shrl
les
mov
pop
push
xchg
gs
sbb
add
dec
ds
insb
push
repz
xchg
mov
test
xor
jge,pn
mov
and
stos
cmpsb
pop
movsl
mov
pop
fisubrs
bound
gs
out
mov
pop
mov
cmc
add
movsb
jle
mov
pop
sbb
xchg
rorl
add
add
nop
ljmp
in
xchg
loope
push
cmp
mov
sbb
mov
dec
sarl
out
imul
leave
ret
lcall
mov
adc
and
fdivs
add
cs
and
mov
sarb
sub
adc
rorl
mov
cmp
mulb
shl
inc
push
cmp
lret
roll
sub
lret
adc
in
dec
insl
inc
outsb
add
jnp
sbb
cmpsb
ds
mov
pop
std
inc
orl
cmp
arpl
or
les
out
in
ror
xor
add
out
jecxz
cmp
jecxz
fadd
and
aam
or
scas
insl
lods
scas
push
cmc
xchg
sahf
imul
fwait
out
and
push
movsl
out
pusha
push
and
cmp
rolb
jmp
adcl
xor
push
pop
xchg
cmpsb
aaa
dec
cmp
and
xchg
ficoml
push
pop
ficomps
cwtl
cmp
push
sahf
ret
pop
mov
stc
out
inc
pop
jae
test
cmpb
dec
lahf
push
mov
arpl
negl
fdivp
incb
xor
mov
mov
dec
pushf
pop
inc
jp
roll
sub
fadds
bound
jl
or
jle
stos
pop
aaa
lahf
push
and
aaa
repnz
popf
pop
jle
jnp
mov
rorl
imul
push
xchg
rol
nopl
pop
daa
mov
shll
mov
dec
cmp
pop
xchg
xor
lret
movsl
cmp
mov
insl
mov
push
mov
add
xchg
mov
xchg
fdivrs
out
jns
imul
sub
and
jns
dec
inc
dec
inc
lods
xchg
ret
inc
xchg
stc
add
mov
roll
pop
test
xor
or
jmp
lret
test
ror
popa
mov
push
es
xor
in
sbb
leave
hlt
fldt
cmp
cmp
mov
stc
inc
addr16
add
aas
lea
repz
xor
sbb
mov
out
mov
loop
mov
cmc
xchg
out
pop
mov
ss
mov
in
jno
fldenv
fsub
pop
hlt
hlt
icebp
imull
xor
or
sarb
push
mov
mov
mov
pusha
push
adc
in
mov
les
adc
rcrl
add
sbb
sub
mov
outsl
in
popf
add
loop
xchg
jmp
out
shlb
pop
ret
pop
das
lcall
push
arpl
pop
getsec
dec
lods
mov
add
inc
loope
popl
and
mov
mov
xchg
sbb
out
push
lea
push
add
nop
add
cmp
pop
pop
aas
out
mov
add
in
loopne
xorl
ffreep
sub
pop
mov
push
mov
aam
adc
mov
mov
dec
jecxz
xorl
inc
sub
jmp
xchg
cltd
mov
mov
push
jbe
xor
pop
gs
rorb
jns
sub
and
sbb
add
xchg
cwtl
push
fsubl
sbb
pop
mov
out
cmp
add
icebp
add
stos
scas
sub
xor
scas
xchg
test
and
jle
cld
popf
inc
lret
pop
cwtl
xor
fildl
mov
dec
dec
xor
push
lret
mov
jmp
popf
movsl
push
test
xchg
xchg
pop
ss
stos
cmp
sub
mov
xchg
xchg
and
lds
add
jmp
bnd
and
mov
pop
xchg
mov
jmp
mov
imul
sub
xor
push
inc
xchg
mov
fisubrl
inc
dec
gs
jno
divl
pushf
xlat
mov
xor
out
shrb
or
cmpsl
sbb
jns
inc
fsub
xor
xchg
mov
sub
out
cltd
pop
push
or
iret
gs
aaa
shll
jle
jo
fstps
imul
dec
repz
cs
jns
dec
in
sub
nop
stos
mov
mov
jle
mov
rol
jnp
sti
shll
mov
pop
lea
loope
cmpsb
pop
data16
mov
dec
mov
mov
call
ja
cmp
xchg
aas
jae
fdivr
push
xchg
and
ds
mov
in
aam
inc
cmp
or
jbe
cmp
popf
pop
jnp
xchg
and
lret
out
test
f2xm1
mov
inc
jge
or
inc
mov
adc
negl
pop
add
dec
int3
cltd
push
out
jg
gs
push
test
in
clc
pop
adc
fwait
sahf
in
xlat
lods
movsb
jnp
sahf
jecxz
and
movsl
pop
or
test
cmp
xchg
aam
add
xor
push
loopne
lods
test
sbb
sub
mov
adc
pusha
sbb
jb
sbb
arpl
inc
xor
add
stos
scas
popa
sub
ficomps
or
or
stos
imul
insl
inc
and
sbb
pop
fimuls
sub
jg
xchg
add
xchg
push
push
lret
mov
and
mov
xchg
mulb
add
add
pusha
jne
ret
add
inc
cmp
mov
lahf
sub
repz
jo
push
out
cmpsb
test
sub
pusha
cs
lcall
dec
iret
rcr
mov
fisubs
jp
and
ret
add
push
add
jmp
adc
jl
mov
jle
loop
icebp
dec
gs
jno
xchg
or
stos
ljmp
pop
int
test
insb
jmp
add
loope
pop
mov
in
xchg
pop
sti
out
sti
rcll
leave
imul
outsl
daa
stc
cmp
data16
cmpsb
pusha
inc
mov
fisttps
ljmp
je
cld
movsl
and
mov
pushf
xchg
cmpsb
pusha
in
adc
sbb
lods
inc
jmp
lods
sub
xchg
ret
mov
scas
or
push
mov
fcoms
mov
repz
adc
testb
and
jg
cwtl
iret
fwait
xchg
or
js
add
add
loop
std
jp
pop
ja
add
push
fucomi
jmp
or
jae
push
repz
sbb
movsl
jno
movsb
ret
mov
pop
jecxz
sahf
cmp
adc
pop
int3
sub
dec
out
push
outsl
out
shl
into
movsb
jnp
out
loop
pop
js
pop
inc
int
sbb
dec
in
sub
iret
outsb
xchg
mov
jge
out
adc
sub
cltd
xor
inc
mov
es
int
push
mov
xchg
dec
mov
divb
pop
dec
ljmp
pushf
xchg
pop
aaa
push
xchg
push
inc
aas
inc
inc
lds
push
push
cmp
hlt
repz
push
insl
mov
movl
movsl
xor
mov
xchg
push
sahf
repnz
sub
push
lods
xchg
jg
mov
test
mov
inc
and
mov
adc
and
jp
mov
mov
icebp
pop
addb
mov
imul
push
jb
push
dec
das
scas
aas
aad
and
jns
mov
mov
sbb
pushf
push
mov
movsl
and
ret
das
fstpl
xchg
bound
insl
cmp
inc
adc
push
pop
adc
dec
mov
cli
inc
pop
mov
cmp
jecxz
or
test
movsl
repz
pusha
subl
mov
out
or
in
arpl
jmp
mov
cmpsl
stos
lcall
ret
sti
in
mov
jmp
inc
pop
jmp
cmp
inc
fxch
aam
fisttps
dec
push
pushf
dec
daa
jmp
dec
and
mov
sub
daa
jecxz
adc
lahf
xor
and
lods
dec
or
repz
and
pop
inc
sub
mov
ror
stos
sub
out
push
ja
mov
jns
xor
pop
inc
lds
les
loope
lods
and
shlb
lods
dec
decb
mov
cwtl
lret
lea
cmp
leave
mov
and
mov
adc
gs
add
pop
bound
dec
mov
ljmp
push
cmc
or
inc
aas
test
fildl
pop
cmp
sub
sbb
xchg
mov
and
outsl
xchg
fimuls
pop
mov
and
popa
add
push
mov
rorl
mov
sub
fadds
cmpsl
mov
in
sub
push
cs
stc
icebp
mov
pusha
sbb
mov
push
and
leave
mov
fwait
mov
xchg
shll
pop
inc
xor
sbb
mov
add
into
icebp
jae
fadds
push
ljmp
mov
sbb
rclb
dec
pop
jbe
jecxz
xchg
or
in
xor
adc
push
in
inc
cmp
rep
fistps
pop
into
mov
add
daa
int
push
je
jo
icebp
sub
into
sbb
lcall
pop
fsubr
int3
ficompl
bound
mov
mov
push
daa
andl
hlt
fsts
lret
add
xchg
cli
push
lret
repz
rorb
test
decb
sbb
pusha
mov
sbb
adc
std
sub
sbb
ljmp
inc
xor
jg
push
es
inc
xchg
aaa
inc
iret
pushf
mov
push
cld
jne
inc
xchg
fcoms
mov
and
repz
jne
jnp
cmp
jb
jg
adc
test
cmp
divb
jge
add
jl
lock
mov
inc
dec
out
xor
inc
mov
sbbb
and
fcmovu
dec
arpl
cmp
cmp
pop
jne
xor
sbb
dec
mov
mov
lds
lret
jnp
jl
jp
cmp
inc
shll
incb
push
pushf
into
xor
jmp
sub
test
into
divb
mov
pop
push
or
mov
pop
add
jmp
shr
pop
out
push
cmc
pop
jne
add
in
cmc
loop
addr16
xor
sub
pop
mov
cmp
pop
test
push
dec
xor
loopne
sbb
sub
mov
sub
sub
inc
ljmp
hlt
sbb
movsb
pause
clc
cmpsb
orl
stos
ds
mov
test
insl
notl
push
inc
sahf
jmp
xchg
or
daa
dec
rcrb
std
out
aad
xchg
dec
push
mov
adc
mov
lret
popa
out
add
imulb
std
mov
or
repz
xor
scas
push
into
es
out
jle
mov
mov
lret
in
int
dec
xor
xor
sbb
fs
aad
ja
iret
inc
test
arpl
lcall
cld
in
inc
lret
xor
cmp
mov
push
jb
add
sti
cmp
not
sub
es
push
lds
in
ret
nop
inc
aas
mov
fdiv
sub
xor
icebp
mov
mov
test
xchg
mov
sub
xlat
pop
andb
xchg
daa
popa
sbb
mov
test
pop
aam
mov
dec
iret
jge
add
push
aam
mov
push
sub
xchg
int3
neg
or
xchg
imull
adc
and
add
adc
cmpsb
pop
stc
pop
aam
or
inc
pop
rol
cmova
sbb
add
push
adcb
ret
inc
cmpsb
aad
add
loopne
or
xor
stos
arpl
in
push
sti
pop
dec
pop
xor
imul
sbb
cmp
rol
sub
jb
mov
jae
enter
push
and
jns
mov
inc
mov
or
scas
call
insb
mov
pusha
pop
push
vpaddq
dec
shrb
push
cmp
cmp
test
xchg
pop
jbe
inc
int3
add
jno
popf
sbb
jno
jns
xor
ljmp
xchg
xor
aaa
push
sti
lods
loop
ss
xchg
shlb
add
inc
popl
cltd
cld
sub
add
lods
outsb
sub
or
adc
or
dec
insl
lods
addb
negl
jecxz
push
imul
and
popf
push
cltd
xlat
xor
dec
cmpsl
sub
adc
pop
loopne
xor
jne
popf
das
or
iret
test
pop
ss
cmp
pop
adc
lea
pushf
test
cld
mov
nop
les
les
flds
mov
daa
sbb
clc
jae
xor
push
mov
sbb
push
out
shlb
sub
enter
push
aad
lcall
mov
and
sbb
xorb
sbb
inc
sbb
xor
mov
fwait
or
xor
cmp
cmp
mov
inc
stos
aaa
mov
xchg
cltd
aad
rcl
inc
or
movsl
jecxz
sbb
lds
sbbb
loopne
fiaddl
aas
cmc
xor
loope
fdiv
xor
sub
stos
movsb
push
xlat
adc
shrb
mov
dec
data16
leave
dec
insb
xor
test
adc
mov
je
push
xchg
jg
sub
cli
and
or
mov
subl
rcrb
push
sub
lea
adc
mov
repnz
mov
mul
or
push
mov
jp
call
jge
fistl
icebp
pop
dec
mov
add
test
xchg
in
inc
mov
sbb
push
jno
inc
aas
sbb
outsl
lods
mov
std
adc
or
in
lcall
dec
mov
sahf
adc
xchg
jecxz
dec
push
int3
sub
mov
ds
adc
push
mov
jg
cwtl
shll
test
or
hlt
adc
inc
outsl
adc
pop
dec
icebp
and
loope
test
call
cwtl
jp
inc
mov
scas
inc
jmp
dec
gs
mov
xor
xor
in
jbe
cmp
cmp
sub
aad
imul
mov
xor
cmc
jmp
int
mov
lahf
movsl
sub
lret
mov
jne
cld
pop
not
jle
rcrb
cli
xchg
std
xchg
inc
test
incl
mov
inc
add
loopne
fcomp
jbe
adc
arpl
pusha
cld
sub
addr16
mov
sbb
test
cmpsb
dec
cld
dec
call
and
add
mov
mov
sbb
pop
loope
inc
stc
or
shrl
cmpsb
mov
rorb
jo
bound
jge
push
dec
loopnew
test
aaa
pmulhw
es
sub
addr16
das
sub
or
cltd
ss
fwait
leave
pop
test
inc
call
js
fsub
outsb
fnstsw
mov
or
and
push
shll
mov
sub
sbb
add
lds
or
das
dec
or
les
jbe
stos
sub
adc
mov
jecxz
lret
push
dec
loop
lock
xor
and
leave
filds
cmp
pushf
roll
xor
xchg
lret
dec
in
mov
cmpsl
push
xchg
decl
dec
std
mov
jns
repnz
loopne
outsl
daa
adc
pop
dec
or
rcrl
adc
stc
sub
fmul
pop
jle
in
mov
lods
in
std
je
in
xchg
lods
pop
scas
movsb
jne
mov
push
leave
xor
ja
inc
std
mov
jl
stos
out
arpl
jne
push
pop
mov
test
adcl
cmp
mov
mov
push
js
add
jmp
inc
ds
jecxz
xor
adc
xor
adc
add
or
imul
aas
aad
in
test
pop
lds
or
les
mov
sbb
or
xchg
xchg
inc
sub
fistpl
stos
je
sbb
and
pop
push
pushf
das
hlt
movsl
imul
test
dec
ds
nop
xchg
jg
jg
or
xor
and
out
into
fildll
or
inc
ret
xlat
cmp
mov
ja
stc
fbld
or
dec
cmc
pushf
push
js
cmp
idivl
jle
cmp
cmp
cmc
mov
or
daa
mov
mov
pop
das
or
insb
aam
outsb
mov
adc
cs
pop
in
out
cmpsb
xchg
test
adc
inc
cmpl
dec
ja
pop
sbb
pop
add
inc
push
ja
dec
sub
xlat
push
ljmp
sbb
push
push
mov
push
insb
xchg
xchg
sub
js
je
mov
pop
pop
adc
jnp
insl
add
outsl
icebp
iret
cmc
sbb
cmp
add
cld
fistpll
push
divb
imul
cmp
jmp
jns
xchg
inc
sbb
cmc
jno
arpl
fs
jo
dec
rcl
test
and
xlat
jb
pusha
dec
das
mov
leave
add
dec
pop
xor
out
hlt
cltd
jp
ja
xchg
mov
fcoml
icebp
xor
div
push
lret
or
bound
cltd
pop
testl
dec
std
push
call
sub
loope
pop
dec
in
xchg
xchg
addr16
mov
gs
xchg
adc
out
fwait
dec
push
popf
sarl
enter
inc
push
jecxz
mov
sbb
lods
ss
jb
mov
out
lahf
pop
or
adc
jno
daa
and
imul
or
push
shll
insl
sbb
lret
inc
ret
jbe
popa
adc
xor
notb
loop
std
push
push
xchg
aaa
inc
inc
subb
inc
ror
mov
test
unpckhps
jmp
xor
out
sti
lahf
jg
inc
in
jns
inc
adc
fisttpll
mov
stos
inc
test
test
dec
jno
mov
ret
mov
jae
popa
call
je
push
js
xchg
adc
cmp
dec
add
loope
add
adc
xor
jo
mov
lock
mov
or
mov
jle
push
sub
loop
test
loop
inc
adc
daa
mov
mov
sbb
lret
stos
dec
jae
movsl
pop
or
js
fcom
and
add
scas
and
push
and
out
shll
xchg
mov
call
sbb
jmp
pop
or
mov
sub
and
mov
fdivl
in
lret
and
mov
test
das
hlt
dec
mov
mov
jmp
jge
sbb
sbb
mov
mov
xchg
jge
push
cmp
popa
sub
inc
sub
xchg
jo
add
dec
out
sbb
cmp
fisubs
push
ffreep
mov
or
je
adc
mov
outsl
and
mov
mov
xorb
jae
xor
pop
sbb
fcomps
mov
addr16
cli
stos
cli
sub
pop
inc
pushf
adc
aad
xchg
xchg
movsb
dec
insl
cmp
hlt
ds
push
mov
fcomp
insb
mov
neg
dec
cmc
and
lods
inc
loopne
xor
xchg
adc
mov
sbb
add
cmp
iret
leave
mov
jne
or
fmuls
stos
and
adc
jns
outsb
in
or
mov
cmpsb
push
dec
enterw
push
ss
pop
sbb
xor
loopne
stos
add
xchg
or
icebp
ss
mov
mov
mov
lods
sbb
jl
push
outsb
xor
and
sarl
add
push
lods
push
movsl
fmulp
xor
arpl
sub
jg
jp
shlb
ja
inc
inc
jnp
pop
cld
or
pop
cli
int
test
pop
mov
add
inc
ljmp
lret
mov
or
xor
loop
xchg
ljmp
mov
xchg
or
sbb
jmp
sbb
into
enter
dec
pop
shrl
test
sub
mov
negl
jecxz
mov
mov
xchg
xchg
jl
ss
add
sub
dec
movsb
ja
shrb
fs
or
subb
insl
iret
cmp
jl
int
gs
gs
xor
sub
insl
cmpsb
aad
mov
mov
data16
pushl
lods
int
in
outsb
mov
roll
and
pop
lea
inc
cld
xchg
cwtl
jl
jnp
sub
stos
lds
push
mov
stos
fistl
je
sub
js
inc
cs
add
cmp
mov
mov
sub
sti
call
loope
dec
popf
pushf
xor
test
cmp
pushfw
in
insb
sbb
pop
xchg
mov
mov
inc
pop
mov
outsl
sub
inc
les
jl
sbb
out
mov
insb
fdivl
and
xor
jo
xor
test
or
xchg
in
aam
icebp
cmp
cmc
dec
out
cmp
sbb
cltd
dec
pusha
inc
jl
xchg
popa
push
mov
ljmp
jo
jne
jne
out
add
sbb
dec
push
ret
jae
scas
stc
test
aad
pop
flds
mov
or
ret
in
jg
or
ret
and
jge
jbe
je
and
sub
or
inc
and
cmpb
mov
out
inc
daa
pop
in
and
cmc
lea
outsb
ret
push
adc
jne
mulb
data16
jae
push
add
std
or
xor
out
and
or
mov
inc
cmc
lock
mov
repnz
addr16
xchg
add
aam
jge
or
into
mov
lret
std
dec
mov
fsubrl
mov
dec
add
clc
les
lcall
shrl
mov
aad
das
pop
push
cmp
jns
cli
pop
stos
cli
adc
xchg
mov
and
adcl
push
dec
shrl
lret
jbe
pop
inc
mov
jl
mov
mov
out
sarb
ds
inc
das
add
stos
mov
lret
push
add
outsl
jbe
mov
xor
sbb
stc
push
inc
in
add
cmp
lcall
subb
fisubl
aam
cmp
mov
inc
cmp
movsb
pop
subb
xlat
jb
xor
loopne
leave
xchg
jl,pt
pop
mov
and
xchg
fldt
cmp
add
mov
sub
and
inc
mov
fiadds
aaa
test
mov
add
and
popa
push
lods
test
adc
push
iret
out
cmc
fadds
and
fcomp
jecxz
inc
jmp
jl
xor
xor
mov
mov
bound
mov
mov
jo
or
push
out
jno
xchg
test
add
je
or
add
daa
insl
rorb
xorb
dec
and
int
jmp
js
rcl
fcoml
loope
gs
xchg
das
sub
stc
and
ret
rcrb
scas
movsl
cmp
mov
pop
decb
cli
jl
scas
or
test
xchg
dec
mov
in
mov
inc
ret
movsb
xor
mov
push
jno
mov
inc
addr16
addr16
mov
xchg
dec
or
jge
iret
push
aas
mov
dec
test
jl
or
iret
jle
mov
inc
scas
stos
pop
mov
imul
aam
jp
add
mov
mov
in
push
es
mov
pop
lods
xchg
out
jo
lods
inc
fadds
mov
cwtl
cmp
mov
mov
ficomps
mov
dec
inc
les
sub
mov
mov
test
jmp
in
cwtl
outsl
ja
push
mov
sbb
and
lcall
cli
pushf
push
and
adc
into
xor
push
ljmp
mov
ljmp
jno
jne
dec
or
add
push
stos
bnd
shr
loope
insb
lds
adc
clc
stos
sbb
int3
push
repnz
movsb
ja
jge
aad
stos
mov
imul
or
mov
inc
sahf
jno
clc
mov
cmc
push
aad
and
loopne
loopne
xchg
int3
xor
pop
mov
es
lea
mov
add
or
dec
popa
scas
cmp
hlt
sub
jno
lock
gs
sti
inc
pop
mov
scas
dec
aas
addr16
jno
fsts
ds
mov
jno
ficoms
in
adc
daa
push
std
xchg
lret
xlat
pop
xchg
inc
xlat
cmp
lret
pop
dec
mov
pusha
or
or
lock
mov
mov
sub
xor
adc
sbb
xor
iret
cld
jg
mov
addr16
mov
jno
lret
pop
xor
fucomi
out
rcl
mov
popa
fs
lret
orb
ljmp
push
stos
test
mov
iret
fnstsw
xlat
mov
negb
maskmovq
divl
cltd
add
lock
in
leave
es
aam
mov
aas
pop
mov
shll
sub
sbb
jb
adc
mov
data16
cmc
or
jns
ljmp
lahf
std
es
inc
jno
mov
dec
cmpsb
jmp
shr
mov
sti
mov
rolb
icebp
movsb
xor
dec
mov
or
data16
popf
es
adc
add
pop
xor
sbb
sti
jae
jmp
lahf
subb
adc
adc
rclb
outsl
mov
in
adcb
jle
int3
pop
les
cmp
shrl
xchg
ret
jg
fstpt
stos
xchg
cs
ds
adc
dec
or
cli
jg
cmp
scas
sbb
rolb
stc
rcl
pop
push
cmc
popf
push
icebp
push
adc
xchg
cmpsw
pop
jp
fsubr
pushf
addb
iret
add
jbe
mov
xchg
or
sub
rcl
pop
cmp
rep
xchg
add
xchg
xor
jne
jl
mov
adc
mov
push
push
dec
in
jnp
pop
out
adc
fs
fwait
mov
and
pop
pop
loope
jecxz
add
fwait
arpl
lds
or
mov
test
fs
xchg
and
je
cli
dec
mov
js
mov
sbb
lea
jnp
jno
add
xchg
push
ss
out
out
xchg
dec
adc
adc
ret
xchg
cs
cmp
stos
jecxz
or
dec
or
dec
push
xchg
push
aas
fwait
cs
cmp
xor
sub
int3
ret
sbb
mov
lds
fstps
ret
cwtl
pushf
pushf
cmpsb
sbb
jae
mov
cs
aas
mov
lea
popf
mov
and
pop
ret
adc
xchg
les
testb
adc
dec
add
add
jmp
mov
lods
data16
movsb
idiv
cmpsb
cmp
pop
cmp
js
clc
push
imul
out
div
push
unpckhps
dec
fldcw
in
dec
sti
inc
xlat
pop
push
cmpsb
sarb
out
adc
cmp
idiv
dec
mov
frstor
mov
push
sti
sbbb
cmpsb
dec
fsubs
insb
xor
add
popf
push
fnstsw
adc
sub
mov
mov
and
xor
jecxz
sbb
into
or
pop
sbb
push
xchg
fdivr
inc
jns
mov
sbb
sarl
sbb
movsl
mov
test
cmp
add
add
das
and
add
lea
inc
mov
and
inc
cwtl
inc
or
aas
adc
das
xchg
shll
setno
or
test
push
sti
cli
sti
push
pop
fdivs
push
outsl
dec
add
xchg
andl
xchg
subb
mov
jmp
or
pop
xchg
out
cmpsb
sahf
push
xchg
ret
lret
mov
fwait
xchg
pusha
mov
dec
ljmp
fwait
pop
jecxz
stos
leave
mov
jge
shrl
repz
cmp
outsb
scas
hlt
lret
sbb
and
fidivrs
repnz
adcl
daa
gs
test
clc
lahf
inc
jge
lcall
pop
jl
fst
jmp
or
clc
xor
nop
push
loop
cmp
out
stc
jns
dec
roll
push
outsl
xchg
aas
movl
test
arpl
xchg
xlat
cltd
xchg
popa
push
and
cwtl
mov
mov
mov
out
or
cli
lret
and
std
push
outsl
in
and
rcl
test
xchg
fstpt
mov
mov
mov
ja
sub
rol
sahf
js
push
cmpsl
lret
nop
inc
cs
add
idivb
adc
push
ret
jne
sub
jecxz
enter
shrb
loope
add
push
in
pushf
and
cmpsl
ja
clc
sub
pop
sbb
mov
mov
int
out
mov
xor
stos
xor
pop
push
into
pop
int
repz
sbb
jae
jns
sti
lock
lds
sbb
fmull
mov
push
push
mov
test
call
inc
dec
inc
sub
push
xchg
stos
xor
montmul
cmpsb
add
push
mov
mov
push
scas
pop
jle
jge
pop
pop
fnstcw
gs
mov
daa
stc
pushf
push
add
scas
xchg
sbb
jg
ss
in
mov
into
jmp
loope
lock
subb
and
xlat
adc
ret
mov
fistpll
sub
ret
mov
mov
int
outsl
icebp
enter
int
je
mov
movsb
inc
dec
das
lret
cwtl
out
aam
cwtl
aas
and
dec
mov
pop
movsb
mov
movl
mov
out
repnz
data16
push
lea
ds
in
and
imul
pop
push
movsl
cmp
gs
push
js
popa
cmp
in
ds
jb
add
sbb
mov
imul
xor
xlat
mov
fldl
lea
mov
aas
mov
mov
xchg
jnp
negl
jo
shr
mov
mov
scas
rclb
push
inc
rcr
xchg
repnz
mov
test
jge
xchg
imul
add
loop
lcall
mov
jge
xchg
das
push
outsl
mov
inc
adc
arpl
in
cmp
shrb
mov
pop
sub
std
sbb
mov
andb
cmpsl
adc
cmc
mov
xor
add
pop
dec
aad
cmp
push
push
push
mov
pop
clc
shlb
mov
repz
inc
mov
or
push
js
jae
inc
cmp
and
push
and
jb
imul
std
dec
into
jnp
inc
jbe
sbb
mov
or
sbb
pop
jp
add
stos
mov
add
sbb
dec
iret
sbb
pop
sub
das
dec
push
dec
adc
sbb
aam
rolb
xor
fcmovbe
mov
mov
xchg
cmc
lds
adc
bound
out
aad
ret
xlat
xchg
pop
mov
hlt
jmp
xchg
je
push
data16
dec
cltd
mov
inc
lock
push
mov
push
push
pop
adc
inc
lret
or
cltd
imul
bound
mov
dec
in
loop
inc
int3
add
jae
into
pop
in
sarb
lock
ret
das
push
cmp
xchg
adc
sarb
xlat
pop
lret
jns
cmc
ret
lret
enter
mov
add
or
inc
jg
out
pop
mov
stos
inc
je
sub
xchg
push
mov
js
sub
add
out
outsl
sub
xchg
add
jae
push
aam
jmp
cmp
pop
push
push
stos
xor
fisubl
outsb
stc
sbb
inc
es
in
jo
pop
jne
dec
roll
pop
add
ss
xchg
jg
jp
enter
sub
push
cmp
push
cmp
or
fwait
daa
jbe
mov
iret
sbb
inc
test
xor
mov
mov
mov
call
adc
test
xor
jg
xchg
test
mov
mov
cld
stos
mov
fidivs
push
and
push
jne
sbb
ss
xlat
cmpsb
out
rcrb
mov
ret
iret
jne
inc
xchg
mov
cmc
cli
jp
fwait
jnp
and
negb
insb
test
repz
adc
sub
mov
cmp
stos
and
sbb
inc
mov
out
icebp
outsl
lds
dec
vmovsd
ret
arpl
into
orl
or
add
test
pop
call
pop
xor
orl
add
or
repz
ja
or
push
aad
xchg
int3
mov
add
cmp
cli
into
jmp
test
movsl
cmp
add
dec
or
xchg
lret
out
mov
jns,pn
es
push
sahf
xchg
sbb
cmp
mov
pop
push
xorl
xchg
inc
lret
push
fiaddl
dec
pop
rorb
int
and
push
mov
andl
arpl
mov
xchg
jne
mov
scas
xchg
mov
mov
jnp
push
mov
sub
lea
mov
mov
das
sbb
push
jl
push
and
xchg
pop
fdivrs
xchg
sub
ss
movsb
push
dec
rorb
jbe
lcall
leave
lss
stc
ret
cli
adc
pop
fmul
push
inc
nop
mov
mov
dec
push
fwait
add
popa
lds
sub
fdivrl
loopne
jno
clc
lahf
leave
jb
push
in
sbb
dec
or
imulb
mov
jbe
pop
add
lahf
and
inc
sub
mov
or
lea
jb
es
out
sar
mov
sbb
mov
xchg
cmc
mov
inc
shll
cmp
in
and
punpckldq
inc
test
sub
shrl
push
pop
or
mov
or
int3
movsb
divl
in
xor
push
icebp
mov
push
adc
fistps
mov
aas
jnp
xchg
or
enter
clc
pop
sub
inc
fldcw
int3
mov
jae
je
add
jmp
into
fnstenv
mov
movsl
aas
push
imul
fiaddl
aad
cltd
cmp
and
call
daa
dec
fstps
jns
sahf
iret
jle
out
in
and
es
leave
add
fsts
cmp
push
ror
jmp
mov
add
dec
add
mov
mov
mov
add
add
in
data16
mov
mov
cmp
dec
sub
call
out
push
xchg
mov
fcompl
rorl
fimuls
repnz
jb
cmp
ret
daa
sti
jl
shrl
xchg
std
scas
lods
jmp
and
in
push
les
mov
sbb
sbbl
push
enter
lds
pop
shlb
stos
adc
lret
add
push
bound
inc
filds
add
inc
fisubl
xor
fnstenv
ret
cmpsl
mov
jb
add
cmp
add
icebp
inc
jmp
pop
add
cld
jl
fstps
ficompl
jmp
push
jg
sbb
or
pop
push
mov
imul
jnp
out
mov
add
pop
lahf
or
xor
sbb
loope
outsl
imul
pusha
jecxz
cmp
cli
bound
adc
rcr
nop
mov
xor
lret
mov
loope
sbb
xchg
rcrb
mov
mov
or
mov
jns
int
mov
mov
adc
stos
pop
imul
arpl
inc
sahf
fnsave
mov
cmpsb
jge
test
les
sbb
jno
pop
idivl
xor
adc
nop
mov
push
push
ja
jl
mov
cmpsb
fcmovnbe
dec
mov
sub
sub
fcmovnu
vlddqu
push
mov
popa
bnd
mov
mov
ljmp
cli
ret
arpl
vpshaq
enter
and
cmp
cwtl
cltd
cmpsl
fldenv
ds
push
adc
jae
std
pop
jp
sub
sub
inc
mov
pop
inc
mov
mov
xlat
aas
cmc
shl
daa
shl
adc
sub
add
mov
cmp
repnz
popa
jl
mov
push
jl
mov
xor
mov
test
pop
cwtl
dec
adc
call
or
jmp
hlt
pop
call
in
sub
sbb
or
dec
imul
sbb
xor
into
xor
xchg
scas
dec
fmul
inc
int3
cmp
into
popl
in
and
imul
push
pop
mov
mov
mov
mov
loopne
xor
loope
jae
jnp
push
das
leave
jecxz
cmp
mov
in
scas
cmp
inc
in
mov
call
sahf
clc
js
push
addl
dec
xchg
adc
cmc
imul
imul
out
adc
xchg
and
pop
test
jae
mov
xchg
push
jo
test
cmp
js
decl
fsubs
add
jecxz
sub
and
push
mov
sub
jle
push
mov
pop
mov
popa
jge
call
inc
pop
ror
outsb
je
sbb
mov
cmc
inc
neg
dec
xlat
aad
and
icebp
popf
test
adc
popa
xchg
inc
pop
fucom
mov
inc
and
inc
sbb
fildll
das
lods
push
outsb
inc
int
or
sarb
jno
mov
pop
inc
adc
push
fimull
push
mov
fdivrl
xor
mov
add
rcll
lock
jae
jp
in
push
mov
out
je
sti
int
cmp
and
ja
add
sub
aas
mov
mov
mov
xchg
sbb
cli
sub
lods
outsb
test
xchg
pop
data16
arpl
scas
push
cli
pop
les
imul
and
sub
scas
pushf
jp
scas
cmp
cmpsl
in
fbld
std
and
xlat
das
add
outsl
or
mov
ja
sub
mov
cmp
jecxz
mov
cltd
pop
xchg
mov
push
jne
pop
pop
pop
cmc
mov
xchg
sub
test
cmp
xor
aas
lcall
test
jae
movsb
int3
jl
xor
fldl
inc
cli
pop
jp
in
aam
lods
pop
xlat
jb
mov
or
movsb
fsubrs
mov
pop
insb
lods
aaa
xchg
cmpl
test
add
mov
lods
add
xchg
sub
in
inc
add
mov
test
jmp
push
add
push
test
nop
pop
jg
lds
inc
out
mov
cltd
add
adc
mull
mov
mov
adc
mov
xchg
lahf
cmc
daa
jmp
xor
in
cmpsb
push
xor
out
mov
pop
lcall
aas
pop
adc
lea
lock
fisubs
mov
scas
imul
bnd
mov
shld
mov
pop
notl
jnp
mov
in
adc
arpl
jecxz
ljmp
xchg
enter
xor
xchg
std
mov
and
mov
mov
mov
and
stos
inc
cmp
push
inc
sub
add
test
test
xor
lret
add
clc
aad
jg
icebp
es
or
cmp
mov
arpl
mov
sbb
mov
cmpsl
xchg
js
daa
repnz
sbb
push
push
sub
pop
dec
and
aam
ljmp
or
push
jno
mov
cli
ret
mov
call
dec
lret
jmp
jbe
or
cmp
js
mov
push
push
and
pop
cmp
fistpl
insl
pop
aad
push
sbb
ss
out
jmp
inc
add
push
js
mov
and
xor
mov
xor
fildl
push
push
push
adc
jp
mov
dec
daa
out
mov
mov
lret
jmp
jp
fdiv
push
mov
push
mov
jae
jae
lret
maskmovq
pop
mov
scas
mov
gs
movsl
inc
jno
mov
sbb
stos
ds
cs
scas
pop
xchg
mov
lcall
test
lods
xchg
jae
fnstenv
leave
dec
mov
lret
cmp
jecxz
mov
xchg
lea
xorl
ljmp
lcall
fsubrl
fwait
mov
pop
mov
es
mov
or
add
mov
mov
frstpm(287
stc
iret
or
add
or
aam
mov
xchg
xchg
shll
jl
cltd
jle
sbb
mov
adc
ja
icebp
nop
lret
jo
jmp
lret
pop
mov
scas
jl
xchg
fmul
cmp
xchg
sub
xchg
shrb
popf
lods
outsb
jmp
data16
pusha
pop
mov
fdivs
add
repnz
in
mov
xor
jge
or
push
call
test
enter
cmovnp
stos
ljmp
mov
sub
mov
lea
cmpsl
incl
push
xchg
cld
out
js
lahf
aaa
shlb
xlat
nop
mov
jp
push
jnp
leave
lret
and
cltd
sbb
loop
idivb
ja
mull
cli
out
shll
mov
addb
adcl
es
cmp
adc
jne
sbb
add
cmp
or
cmpsb
rol
js
cmpsb
clc
mov
fsubs
cmp
mov
inc
test
testb
icebp
or
sbb
xchg
dec
lods
jbe
xchg
jp
adc
dec
insb
adc
frstor
aad
cwtl
cmp
xchg
arpl
jp
sub
lret
in
shll
or
sbb
mov
dec
pusha
push
inc
pusha
mov
push
xchg
jecxz
add
lret
in
mov
push
push
in
xchg
repz
addb
adc
sbb
divb
aam
push
mov
jno
sbb
or
jno
jle
mov
push
repz
sub
fs
loopne
sub
les
and
and
cwtl
jp
or
lahf
sbb
xchg
enter
sub
cmp
or
movsb
fistps
je
clc
imul
pop
cmc
outsl
push
sub
idiv
and
orl
push
lcall
stos
or
adc
in
mov
xchg
icebp
cwtl
adc
xor
outsb
aam
je
icebp
arpl
cld
popf
mov
mov
xlat
dec
mov
fildl
xchg
and
mov
or
fdiv
lea
and
mov
dec
aaa
push
add
imul
or
cmp
shrl
adc
mov
scas
nop
jbe
inc
adc
or
adc
mov
pushf
push
lcall
cmpb
mov
push
cmpsb
dec
mov
outsb
jno
mov
pop
jmp
dec
pop
pushl
into
lret
jne
sub
lret
insl
repz
pop
jne
idivl
ds
and
movsb
pop
cld
lds
bound
mov
push
mov
push
ljmp
jmp
pushf
or
ret
mov
fwait
push
jbe
mov
pop
inc
jle
jecxz
jle
pop
inc
adc
mov
sbb
sub
and
ja
stos
sahf
lcall
inc
outsb
sarl
ds
xlat
loopne
dec
dec
aas
pop
pop
inc
add
pop
pop
dec
ret
sbb
jp
cmpsl
sub
test
outsb
sbb
xchg
xchg
mov
jo
int3
jns
hlt
and
mov
xor
sahf
pop
inc
faddp
mov
inc
xor
push
stos
adcl
pusha
mov
add
add
jmp
out
ds
jns
sbb
mov
mov
addr16
out
lcall
mov
scas
sahf
in
push
mov
cmp
xor
test
pop
mov
push
pop
xchg
repz
adc
cmp
sbb
ror
cmp
in
iret
lock
jp
mov
add
movsb
push
inc
inc
mov
jb
cmp
dec
pushf
in
aas
pop
push
xor
jl
push
fs
push
and
inc
pop
jno
push
pop
call
mov
jae
jmp
sbb
in
pop
mov
shll
fmull
fwait
sbb
lock
and
mov
push
into
jg
add
ss
es
fistpll
sub
imul
pop
fldcw
jl
and
pop
inc
out
cmpsl
testb
pusha
cmp
faddl
movsb
pop
jae
pop
ret
cli
inc
add
xchg
arpl
add
mov
mov
ret
stc
repnz
fsts
outsl
ljmp
mov
outsl
push
push
pop
sbb
cmp
insb
add
test
pushf
sub
fcmovb
cmp
call
pop
mov
fimull
stos
pushf
lods
push
test
stc
push
mov
js
cmpsb
mov
shlb
mov
cmp
or
sbb
add
cmp
mov
pop
add
sbb
sub
frstor
testb
pop
pop
push
add
cmp
ss
aad
lahf
push
mov
xor
jge
push
jo
cs
arpl
sub
xchg
cmp
popf
sbb
push
pop
sub
test
xchg
rorb
jo
mov
out
xchg
and
paddusw
mov
mov
pushf
sub
xor
add
lds
adc
js
ja
cmp
inc
imul
xchg
dec
pop
out
xchg
sahf
fnstcw
stos
mov
mov
xchg
push
inc
pop
std
shlb
dec
or
cs
mov
and
jle
loopne
mov
push
gs
fldenv
lds
and
mov
pop
and
sbb
push
popf
xor
outsl
mov
sub
jo
pusha
es
insb
lock
jb
inc
dec
std
bound
mov
ljmp
sti
sbb
jo
dec
je
daa
pop
add
jb
std
icebp
mov
pop
add
push
fsubrl
mov
add
fldt
xor
inc
dec
icebp
fisubs
test
cld
sbb
dec
and
mov
adc
cmp
mov
sbb
lret
fbld
ret
cmpsb
jne
xchg
aam
sbb
orb
cmpsl
call
stos
xor
adc
mov
xlat
dec
call
jns
subl
into
and
lods
sub
test
shl
js
clc
jbe
sub
push
jle
pop
stos
jge
cmc
push
shrb
mov
push
jnp
dec
cltd
mov
arpl
dec
lcall
dec
mov
mov
sub
test
mov
enter
inc
shlb
in
sahf
push
adc
cld
pop
addb
dec
jge
aam
cmpsl
iret
xchg
mov
roll
fsubrs
mov
fwait
xchg
lods
ret
mov
aas
lret
out
fdivrl
add
pop
cltd
jl
shrb
scas
lahf
iret
mov
into
push
mov
add
adc
xchg
xor
inc
test
jo
in
sbb
xchg
fwait
mov
js
filds
jge
sub
mov
lret
or
popa
sub
daa
int
mov
dec
mov
inc
test
sub
or
leave
sub
cmp
outsb
scas
sbb
insb
sbb
adc
fldcw
out
jp
inc
jp
nop
orb
lret
daa
mov
div
aas
sahf
gs
fimull
cltd
lock
arpl
int3
jbe
in
insb
subl
loope
and
mov
jl
pop
push
loope
cwtl
stc
inc
orb
jle
loop
hlt
push
pushf
push
addr16
push
mov
les
loopne
mov
cltd
mov
mov
int
aad
mov
clc
call
lods
je
sub
stos
or
xchg
adc
out
inc
cmpsb
pushl
pop
insl
shll
cmpsb
lahf
inc
sub
stos
arpl
push
imul
mov
mov
push
push
dec
xor
rcll
push
xor
mov
jb
jle
and
cs
jae
je
imul
pop
sbb
mov
subb
cld
fmul
packuswb
push
in
dec
imul
xor
inc
sub
mov
hlt
lock
sahf
dec
mov
loop
hlt
jbe
adc
pop
push
push
bound
pusha
xlat
mov
xlat
lret
add
repnz
push
imul
aad
jge
jecxz
fs
xor
lea
mov
aas
adc
xchg
mov
mov
cwtl
jmp
aad
popa
data16
imulb
insb
cmp
nop
rolb
inc
mov
das
xchg
ja
cs
sub
mov
iret
outsb
dec
js
imul
xchg
aas
xchg
inc
ficoml
sahf
xchg
xchg
inc
adc
es
jns
mov
aad
sbb
pop
fs
loope
xchg
push
outsb
das
adc
orb
inc
fwait
sbb
fcmovnbe
and
xchg
or
push
inc
dec
inc
std
adc
das
mov
out
lea
push
xlat
jae
jbe
mov
inc
icebp
fisubrl
mov
and
mov
sbb
fisttps
cmp
and
ret
inc
dec
test
sub
lcall
push
cli
out
out
rcl
sub
ss
xlat
push
adc
dec
sub
icebp
dec
gs
adc
inc
movsb
mov
dec
hlt
je
hlt
std
jecxz
cmc
xor
lahf
dec
cld
mov
mov
cmc
lea
or
das
pop
adc
pop
jb
ret
ljmp
or
cmpl
imul
int
push
jo
lds
je
filds
scas
adc
or
stos
cmpsl
fdivrp
mov
fsubrs
cmp
popf
out
aad
xor
or
push
jo
test
xor
stos
bound
mov
add
pop
add
adc
jbe
mov
cs
push
dec
dec
mov
push
ss
jecxz
push
cs
inc
sub
test
mov
push
scas
cltd
push
mov
pop
lods
das
xchg
fwait
stos
push
scas
mov
lahf
out
ja
arpl
sbb
outsl
adc
push
and
pop
and
lret
or
fwait
bound
jo
xor
push
mov
imul
xor
das
scas
jno
push
sti
loope
out
or
pop
pand
ficoml
push
out
sbb
mov
xor
jne
and
add
jg
sbb
ja
jne
cmpsl
dec
xchg
sbb
jmp
xor
mov
push
mov
out
push
popa
xchg
add
xlat
xorb
add
popa
jecxz
sub
nop
pop
data16
rclb
mov
add
add
push
ret
lods
enter
inc
rcrb
mov
sbb
sbb
or
cltd
outsb
pop
adc
cld
mov
nop
add
movsb
mov
jns
and
lret
xchg
and
xor
or
cltd
cmp
mov
mov
mov
repnz
dec
push
vandps
inc
mov
mov
clc
mov
cmpsb
mov
sub
int3
adc
test
mov
and
nop
push
js
mov
pushf
mov
or
daa
and
mov
fs
lahf
movsb
std
in
and
sbb
add
cmc
sti
cmpb
gs
pop
lock
mov
int
sub
popf
mov
enter
and
and
or
fstl
sub
mov
stos
popf
xchg
pop
out
mov
jl
mov
mov
mov
fsubrs
cmp
in
repnz
ret
int3
sbb
lods
inc
fstpt
popa
lcall
test
inc
aas
out
mov
sahf
fisttps
sub
outsb
sbb
sti
das
inc
fnstcw
mov
xchg
adcl
jae
mov
scas
sub
add
lcall
adc
movsl
jnp
imul
dec
lods
xchg
lcall
int
mov
cli
jmp
cmpsb
pushf
pop
and
sub
inc
xchg
jbe,pt
cli
jge
push
jae
mov
sbb
aaa
inc
mov
sahf
adc
jle
js
pop
movsl
jecxz
sub
fildl
test
adc
xor
sbb
push
into
adc
out
cmp
jns
repz
scas
sahf
pop
pop
add
std
jns
inc
mov
cmp
mov
shll
adc
test
aad
xchg
clc
sub
xchg
sub
in
xchg
mov
mov
mov
fwait
pushf
cmp
jns
lods
xor
push
fidivs
std
iret
lahf
dec
gs
test
cmp
out
xchg
xorl
jne
adc
bound
test
cwtl
loopne
idivl
push
push
mov
aaa
push
push
and
sarb
test
or
je
divb
dec
cwtl
adc
mov
imul
cmpsl
mov
adc
and
aam
xor
xchg
dec
insl
dec
pusha
pop
into
shlb
inc
in
jne
inc
data16
pop
popf
jnp
sub
lcall
test
in
jp
sub
mov
adc
sahf
dec
lahf
push
stos
push
push
icebp
insb
into
arpl
mov
test
jb
sti
nop
xchg
pop
or
cwtl
xlat
mov
mov
xor
enter
dec
mov
jmp
fstps
mov
rcl
sub
ja
xor
ds
out
out
jg
into
lahf
mov
pop
fsubs
leave
adc
je
mov
or
pop
pop
xlat
jmp
cmpsb
in
icebp
pushf
jecxz
jne,pn
flds
ret
mov
jo
pop
push
jmp
sbb
mov
jecxz
fstpt
mov
fwait
repz
fnstenv
shll
nop
lea
push
dec
into
loop
sub
push
test
sahf
or
into
cs
ret
cmp
fstps
in
lock
mov
xor
xchg
lret
out
das
push
out
jbe
inc
lret
je
ret
js
dec
loopne
inc
inc
cwtl
movsb
inc
imul
sbbl
loope
addl
arpl
sbb
shr
or
sub
fidivs
test
js
jo
jecxz
xchg
in
addr16
cmp
push
add
xchg
sbb
push
test
clc
mov
idivl
call
sbb
and
jnp
jnp
adc
or
ss
inc
adc
jecxz
mov
xor
fistpl
neg
sbb
call
jge
cmp
mov
adc
test
movsb
ret
pop
push
jp
sub
cmc
mov
addr16
enter
sub
dec
pop
into
pop
testb
dec
ljmp
insb
cmp
sbb
mov
dec
jg
dec
js
cmpsb
push
loopne
pop
rcr
or
xor
mov
aas
jb
jno
in
jno
adc
lcall
les
in
jp
hlt
mov
les
push
insb
out
clc
lock
out
push
mov
lds
mov
popa
xchg
int3
push
scas
arpl
pop
loopne
in
jle
fucomp
fnstsw
sbb
pushf
out
push
sti
or
out
mov
repz
or
push
repz
jge
sub
dec
xor
bound
loop
mov
jle
mov
adc
sahf
xchg
push
cwtl
stos
fstl
stos
scas
ljmp
shl
xchg
scas
test
mov
sahf
je
and
push
sub
addl
push
repnz
int
les
jl
xchg
inc
mov
sub
orl
hlt
daa
repnz
sti
inc
cmp
push
incl
mov
ja
ds
lea
imul
dec
scas
cli
repz
shll
in
lds
mov
adc
inc
inc
mov
push
sahf
adc
out
jg
in
xchg
sbb
or
cmp
and
inc
iret
xor
dec
jbe
sarb
loope
fs
mov
push
lds
mov
aaa
into
out
mov
scas
out
cmpsl
inc
out
inc
enter
dec
cmp
iret
xorb
or
mov
dec
xchg
sbb
xchg
daa
movsb
mov
lods
sub
dec
xchg
nop
or
push
test
mov
imul
out
repz
ficoml
cld
cmp
idivl
xchg
or
and
jl
mov
std
add
or
in
pop
xor
mov
les
xor
push
jae
mov
mov
ret
fdivrl
or
mov
xchg
into
pop
mul
xchg
lcall
jge
pop
std
imul
sub
outsl
hlt
jnp
aaa
and
repnz
mov
test
push
ds
pop
push
mov
pop
int
xchg
pop
mov
mov
and
pop
scas
and
mov
clc
test
int3
scas
add
pushf
stc
push
mov
and
popa
xchg
jg
jl
or
outsl
inc
xchg
test
push
xor
and
clc
xchg
push
mov
add
inc
cmp
pop
sub
insb
testb
arpl
or
mov
out
push
ret
iret
out
mov
incl
or
aaa
loopne
cmp
inc
mov
mov
adc
mov
lcall
stc
cmp
popf
test
ds
or
std
xor
cmc
and
dec
mov
or
pop
push
adc
aas
lret
fldpi
cs
je
pop
rcll
insl
in
jle
mov
mov
sub
sub
roll
roll
sub
fwait
and
call
adc
cs
jle
inc
jae
into
in
call
cmp
sub
mov
ljmp
push
sub
scas
fsubs
cvtps2pd
cmpsl
mov
xchg
stc
std
ljmp
gs
mov
js
sahf
push
fisubrl
adc
sahf
dec
loopne
pop
pop
dec
loop
push
jne
xor
ret
cs
mov
sub
jne
movsb
bound
leave
dec
loope
jbe
push
icebp
out
mov
inc
ret
sub
fmull
dec
imul
ss
out
sarb
repz
jnp
lahf
jp
jp
call
cmc
mov
sbb
inc
mov
pop
xlat
inc
xchg
xchg
mov
shlb
xchg
push
outsb
pop
aas
xchg
cs
fmul
loope
subb
sar
pop
adc
or
push
lods
shl
ret
das
or
push
leave
cmp
fstpt
mov
sub
sbb
fbld
lea
lcall
fidivl
into
sbb
aaa
inc
in
ja
adc
inc
mov
mov
insb
ret
das
pusha
rcl
push
inc
jae
jl
inc
je
mov
lahf
or
adc
pop
icebp
pop
cmpl
mov
popa
je
and
in
mov
lods
mov
push
jle
push
jecxz
adc
pop
add
lcall
prefetch
aaa
stos
push
mull
jo
cmp
pop
fs
cltd
lcall
dec
pushf
dec
or
jp
scas
stc
pop
dec
and
scas
cmp
push
cwtl
pop
je
push
cwtl
lods
add
fidivrs
lret
cmpb
bound
cs
fwait
inc
enter
inc
bswap
inc
mov
movsb
pop
rcr
ret
iret
popf
inc
xchg
mov
sbb
icebp
push
and
add
shrb
mov
dec
je
bound
inc
aad
js
leave
push
xor
xlat
popf
mov
mov
imul
push
xchg
xchg
xor
jbe
mov
orl
lods
and
ds
mov
test
and
shr
je
or
xlat
dec
les
cmp
cwtl
cmp
push
in
pop
xor
mov
inc
scas
test
enter
movsb
outsl
push
add
push
movb
mov
test
loop
push
ds
mov
xlat
je
xor
pushf
push
ljmp
dec
div
gs
mov
and
ror
icebp
daa
or
pop
in
jne
cmp
or
mov
call
test
push
mov
and
dec
in
in
inc
jge
testb
adc
mov
cmp
dec
pop
cmp
outsb
cld
lahf
cmp
push
xchg
daa
fadd
lahf
push
pop
sub
add
xlat
ss
imul
mov
mov
js
xor
cmp
xchg
and
jmp
repnz
mov
lcall
es
cmp
push
and
sub
xchg
cli
je
pop
outsl
inc
inc
add
stos
lahf
cltd
lret
xchg
imul
or
push
dec
int
lods
xchg
sub
in
mov
fdivs
inc
addb
rcrl
mov
insl
adc
inc
mov
sub
fidivl
sbb
pop
lea
std
add
xor
outsb
xor
inc
cmpl
or
fildll
and
pushf
pop
ret
mov
push
insb
xor
ficompl
fldt
repz
mov
mov
clts
out
sbb
jo
cmp
mov
jg
inc
mov
in
mov
xchg
insl
repnz
fsubrp
cmp
test
nop
stos
mov
aad
fisttpl
je
loopne
in
leave
out
adcl
popf
jg
dec
adc
cmp
push
lods
cmpsl
es
in
inc
fisubrs
fimull
jo
cmp
mov
sbb
mov
mov
or
outsl
and
inc
clc
dec
sub
scas
push
xorb
jo
xchg
aam
and
cmp
jecxz
mov
push
leave
rcr
out
dec
jno
rorl
pop
jnp
mov
push
rcll
outsl
data16
imul
cmp
loop
ret
les
rcrb
jne
fwait
adc
or
stc
test
nop
push
pop
cmpsl
lahf
pop
xchg
pop
pop
jo
cmp
jecxz
fimuls
bound
sbb
xor
jne
mov
jae,pt
lock
xchg
mov
pop
mov
ffreep
int3
and
scas
addr16
dec
ljmp
push
mov
xchg
pop
lods
push
aas
push
mov
cmp
sub
movsb
fsubl
pop
push
ljmp
lods
loopne
aas
push
push
and
add
add
jae
je
mov
xor
pushf
cmp
enter
xchg
mov
fisubl
mov
jmp
add
jg
pop
xchg
iret
add
rcrb
jg
sbb
pop
pop
loopne
xor
mov
pop
xor
inc
mov
repz
les
mov
cmp
in
mov
add
sbb
jb
add
data16
jle
or
adcl
arpl
and
pop
aas
lahf
jne
sub
mov
test
inc
outsl
mov
ret
sbb
or
fadds
fwait
sbb
repz
movsl
dec
and
std
mov
push
jl
push
repnz
mov
stos
xor
mov
das
orl
pop
push
insb
add
in
rolb
jo
jecxz
push
bound
ret
outsb
scas
inc
cmp
cwtl
sub
dec
push
xchg
mov
or
divl
jbe
xchg
cmp
test
mov
xchg
mov
ljmp
int3
dec
mov
imulb
int3
bound
test
outsb
mulb
mov
lds
or
dec
xor
fmull
push
push
fadds
fiaddl
hlt
inc
jbe
sbb
dec
mov
test
test
xchg
add
push
shr
scas
mov
rorb
sbb
test
cmp
jmp
pop
stc
xchg
test
mov
testb
pop
cmp
cmc
and
pop
mov
stos
mov
jns
loop
aad
cld
dec
cmp
mov
mov
notl
sub
xor
repz
shlb
sub
pop
dec
stos
jo
jae
inc
push
int
sbb
sub
movsl
sbb
in
sti
and
push
mov
pop
dec
mov
add
in
ss
jns
mov
mov
sbb
test
dec
mov
gs
mov
xchg
ror
std
fsincos
pusha
jo
sub
std
sub
or
insb
pop
cld
sub
cltd
pop
movsb
ds
clc
test
cmp
dec
jl
jecxz
cmp
int3
testl
mov
arpl
mov
pop
pop
gs
pop
sbb
and
icebp
popf
int
mov
loope
mov
adc
dec
inc
pop
lret
push
cwtl
xor
cltd
add
pop
ja
rcr
cmc
outsl
ret
mov
adc
jns
push
pop
ret
and
cld
movl
jmp
and
lods
or
leave
enter
sub
aam
inc
mov
aas
jecxz
push
dec
mov
dec
out
nop
in
mov
repz
and
jle
sub
out
lods
insl
mov
adc
sbb
js
inc
das
mov
or
jnp
test
push
lret
xlat
into
pusha
mov
cmc
pop
add
adc
fidivs
pop
push
xor
lds
pop
ret
negl
adcl
aad
in
adc
test
xchg
jno
dec
push
bnd
xchg
mov
sub
rolb
sbb
mov
mov
pop
mov
test
and
dec
add
fiadds
repnz
mov
mov
iret
in
xchg
sahf
pop
push
cmp
mov
adc
dec
test
cmp
movsl
cmp
or
push
push
out
cmp
mov
jnp
lcall
mov
call
pop
ret
jbe
mov
fcmovu
inc
bound
xorps
push
mov
xchg
es
jns
dec
lds
in
shll
mov
addr16
mov
inc
nop
stos
filds
sub
xor
popf
push
fisubl
mov
int
sub
loopne
lds
jle
lock
das
cmp
clc
fistps
lock
sahf
loop
mov
xchg
scas
inc
inc
ret
or
outsb
sbb
addr16
xchg
pop
inc
pop
and
mov
or
mull
push
xor
sahf
push
data16
mov
or
jge
loopne
adc
inc
mov
push
rcrb
jecxz
mov
test
ss
push
lret
jbe
mov
shl
mov
and
inc
cmp
xchg
inc
ror
pop
test
mov
pop
mov
bound
or
pop
and
ja
mov
add
int3
or
inc
incl
shlb
and
xorb
mov
cli
imul
sti
nop
pop
or
test
call
repz
adc
loope
ret
fadds
adcb
test
test
xchg
daa
lcall
call
jns
xchg
aam
jmp
scas
scas
icebp
mov
mov
sbb
nop
push
fs
mov
in
xor
inc
or
xor
fnstsw
cltd
adc
stc
sub
lods
sahf
xchg
fmull
inc
and
fwait
push
lahf
movsb
sbb
cwtl
sbb
sub
rcr
xor
mov
lock
xchg
lock
mov
pop
outsl
and
sub
and
hlt
iret
clc
daa
or
push
ret
push
lahf
ret
jno
sub
push
fdivrl
cltd
in
leave
fidivrl
and
imul
mov
push
js
iret
mov
inc
mov
insb
xor
scas
rclb
es
imul
paddq
repz
hlt
aad
mov
mov
xchg
stmxcsr
int3
mov
pcmpgtb
jae
xchg
add
out
dec
cmc
mov
add
pop
loop
arpl
arpl
into
sub
ss
pop
ljmp
hlt
pop
cmpsl
daa
mov
rorl
or
adc
fs
pushf
incl
aad
xchg
into
jp
ret
icebp
arpl
inc
inc
shlb
jge
out
add
or
jbe
sbb
bound
mov
mov
int
xchg
push
pop
xchg
sbb
clc
leave
dec
cmp
adc
das
out
jp
pushf
pusha
dec
out
jle
pusha
jbe
adc
add
cmpsb
jge
lods
sub
mov
lcall
ret
mov
lcall
movsb
scas
ja
mov
mov
cmpsl
imul
mov
xor
hlt
mov
inc
pusha
dec
push
stc
xor
or
cmc
pushf
jl
fs
shll
xor
mov
fldenv
mov
loope
xchg
test
cmp
outsb
jg
mov
sbb
mov
popf
lcall
not
fwait
pop
lods
int
ret
test
je
pop
sbb
stc
cli
movsl
popa
adc
mov
jae
sbb
gs
xchg
stos
sbb
fs
data16
and
sahf
or
xchg
leave
mov
loopne
imul
cmp
mov
repnz
pop
cmp
push
xchg
inc
aas
lret
fldt
out
mov
mov
lock
ljmp
mov
out
jge
loopne
jp
stos
pop
shl
jge
inc
cld
fidivrs
and
and
mov
fildl
push
cwtl
rcrl
in
jl
aam
lcall
or
rolb
mov
mov
lcall
pop
int3
fdivr
mov
xchg
fcompl
cld
rol
push
push
pop
in
and
fidivrl
lcall
insb
pop
add
pop
mov
data16
test
cmp
pushf
push
in
ret
sbb
pushf
xchg
fsqrt
insb
sub
fildll
inc
sahf
test
fucomi
inc
stos
sahf
int
cmp
dec
mov
iret
mov
cmp
push
jae
aad
pop
fiaddl
scas
ss
sub
push
mov
add
sahf
in
ja
mov
popf
pop
jp
jmp
cli
xchg
arpl
cld
cmp
dec
mov
fdivrs
popa
cmp
fwait
add
fcompl
in
mov
mov
hlt
movsb
int
shl
or
mov
test
bound
adc
imul
aaa
mov
subl
sbb
xchg
push
xlat
sub
icebp
pusha
mov
imul
cmp
mov
test
cs
sub
sbb
stc
into
jl
popl
sub
out
jne
shr
cwtl
cmp
fmul
arpl
addr16
add
fidivrl
sub
add
lret
xchg
shrb
push
mov
test
incb
ja
arpl
inc
add
sub
pusha
mov
stos
rorl
jae
lds
adc
xor
or
inc
pusha
jae
leave
daa
cmpsl
push
scas
dec
int3
les
icebp
popa
enter
faddp
mov
add
mov
mov
movsb
mov
adc
sti
cmp
in
inc
or
dec
dec
mov
push
mov
in
xchg
aaa
pop
hlt
sbb
cmp
add
lds
push
mov
xor
xchg
cmp
sub
jp
mov
sbb
nop
adc
movsl
movl
add
rolb
mov
jae
mov
mov
movsb
cmp
jmp
mov
push
push
xlat
ss
shlb
cmp
or
loopne
dec
jne
je
push
and
jecxz
xchg
popf
pop
xchg
push
nop
mov
dec
rclb
jno
fisubs
xor
popa
dec
cli
add
iret
test
mov
cltd
std
sub
clc
popf
or
add
mov
insb
inc
es
dec
sbb
fwait
push
ja
fldt
js
cld
xor
jp
sub
push
jl
sbb
push
dec
cs
popf
cwtl
hlt
and
iret
jp
dec
in
add
aaa
inc
or
lcall
push
comiss
cmp
jmp
aaa
scas
out
xor
arpl
pusha
pop
sub
mov
jl
xorl
aad
rorb
mov
mov
lods
inc
inc
js
subl
push
and
sbb
in
cmpsl
jmp
pop
test
sub
movsl
mov
or
loop
dec
stos
in
adc
mov
or
cmpsl
push
xchg
push
aad
cwtl
fs
sbb
or
out
pop
dec
inc
outsl
adc
cmp
std
jmp
ror
cmpsb
leave
in
mov
push
or
cmp
mov
repz
fdivrl
xchg
cli
test
jecxz
mov
nop
inc
inc
sbb
loopne
ja
mov
add
add
nop
mov
sub
fcmovb
int
adc
addl
cmp
fsubrl
daa
loope
das
add
sti
add
divb
cmp
iret
lock
or
mov
out
jg
out
fwait
les
adc
jmp
mov
add
sub
cmpsb
xchg
xor
pop
xor
jnp
cmp
std
mov
loope
inc
cwtl
addr16
mov
in
or
xor
xchg
pop
push
jno
test
sbb
and
push
jge
rcrl
jno
out
xchg
jns
clc
or
mov
add
push
dec
sub
add
jecxz
lods
fidivrl
inc
jge
or
nop
jo
dec
inc
and
push
pop
add
mov
cs
mov
insb
mov
in
das
xchg
cmp
push
cmpsl
pusha
outsb
dec
mov
mov
mov
mov
movsb
ror
xorl
xor
and
mov
inc
bnd
lods
mov
and
bound
in
cmpsl
sub
iret
jb
xor
enter
aad
aam
mov
mov
xor
mov
add
ffree
cmp
shr
dec
push
jmp
inc
pop
fwait
dec
scas
sbb
adc
push
xor
dec
rclb
dec
push
dec
jae
ja
jo
push
sbb
cmpsb
xchg
aam
outsb
enter
cmpsl
mov
or
add
mov
faddl
aaa
cld
dec
fcmovu
rcrb
mov
xor
mov
rorl
dec
aas
xlat
push
je
jnp
mov
dec
fwait
cmp
nop
mov
outsl
ljmp
mov
or
ret
fsubrs
fsubrl
add
add
xor
lds
push
nop
dec
push
ja
jnp
mov
sub
jg,pt
cs
cmpsl
mov
je
or
sub
fsubrs
cmc
cmpsb
inc
add
rdpmc
xor
lcall
lcall
sub
stc
pop
comiss
je
pop
icebp
mov
push
aaa
adc
jle
test
mov
inc
lds
das
mov
stc
sbb
push
loopne
xor
mov
xchg
jecxz
outsl
clc
xor
dec
push
sti
pop
xchg
pop
dec
jae
into
dec
sbb
cmp
lock
insl
arpl
int3
sbb
sbb
ljmp
fisubs
in
aas
insb
cmpsb
dec
adc
out
xlat
xchg
add
cli
std
shll
popf
inc
cmp
xor
push
sbb
ficompl
mov
push
addr16
repz
sub
testb
xchg
leave
inc
ljmp
xchg
lods
dec
pop
popf
xor
out
dec
cmpsl
test
dec
lds
inc
mov
add
mov
jp
jnp
xor
lea
mov
jns
add
pop
test
add
jnp
add
pop
pop
push
add
or
test
ds
test
jge
fdivrs
push
or
adc
ficoml
cmp
fisubs
or
inc
add
cmp
mov
in
jo
push
mov
lock
jno
xchg
fwait
xchg
dec
pop
cmp
dec
lock
into
jge
test
xchg
aaa
add
aad
jb
jae
pop
negb
callw
dec
pushl
in
mov
or
and
push
imul
pop
adc
jb
ljmp
push
out
out
mov
cmp
or
push
add
xor
inc
push
push
addr16
cmp
xor
add
cmp
test
testl
imul
sbb
call
mov
leave
imull
mov
sub
stos
jb
pop
sbb
xchg
fisubs
outsb
jo
out
or
leave
sub
dec
xor
push
and
clc
push
and
test
jno
dec
lret
repnz
sti
leave
sbb
ret
or
xchg
dec
push
je
cmp
dec
into
out
sbb
push
sbb
inc
shll
ret
test
add
enter
mov
push
mov
mov
arpl
adc
jmp
jge
add
imul
loopne
pop
mov
adc
imul
in
add
mov
add
dec
or
test
mov
ljmp
cmp
pop
mov
fstl
test
outsl
xlat
cmc
mov
test
mov
mov
inc
imul
inc
sahf
cmpsb
lcall
in
imul
testl
push
pop
mov
in
sub
mov
or
mov
xorb
push
insb
loop
repnz
int
cmc
or
adc
sbb
adc
push
add
into
pop
roll
jns
daa
pushf
dec
or
je
outsb
jns
repz
in
dec
shr
test
add
imul
mov
mov
inc
fbld
jno
push
fstps
fdivs
inc
loope
fsubs
outsl
or
or
imul
adc
xlat
mov
push
add
aam
mov
das
mov
mov
jnp
jmp
outsl
cs
jecxz
jge
cli
into
sub
pushf
jl
popfw
push
dec
adc
xor
xor
xchg
and
sub
push
mov
rorb
push
xor
xchg
loope
stc
scas
and
push
out
push
push
es
ja
xor
mov
jae
xchg
into
arpl
mov
or
scas
mov
pop
cmp
sub
lods
mov
or
mov
push
daa
mov
sub
pop
sub
aam
mov
repnz
dec
mov
cmpb
xorl
daa
sarl
stos
aas
aas
push
jmp
hlt
imul
int
xor
pop
icebp
sbb
mov
push
xchg
sbb
aam
inc
nop
sarb
subb
sbb
adc
les
ss
into
sub
xchg
outsb
mov
pusha
out
andb
push
shrb
int3
jo
cwtl
stc
shrb
push
jbe
mov
jno
xor
xor
cmc
dec
jp
loop
ss
add
insl
arpl
sbb
sub
lcall
in
ljmp
and
inc
jle
ret
xchg
lds
fs
data16
ljmp
sub
push
push
jbe
fldcw
or
sbb
cltd
add
aad
repz
cmp
mov
jp
cld
xor
dec
mov
pop
loop
in
inc
popl
inc
das
mov
psrlq
ficoms
daa
mov
mov
pushf
xor
decl
andb
mov
jo
jg
outsb
lret
mov
cli
jp
dec
xchg
test
pop
popa
fnstsw
or
aas
fwait
mov
add
adc
dec
into
cmp
pushl
mov
ret
gs
shll
mov
push
sbb
enter
adc
jl
fs
stos
int3
dec
insb
or
fsub
pop
clc
mov
mov
fdivs
sub
stos
shll
mov
push
subl
ja
and
enter
into
lea
add
ja
out
push
ret
pusha
mov
push
hlt
gs
lods
pop
and
fldt
ret
sar
das
mov
imull
push
inc
sbb
adc
mov
push
rcr
aam
xchg
mov
int
pop
dec
dec
nop
int
inc
cmovns
add
fadds
or
imul
or
insl
xor
ret
rcl
adcl
les
lock
xor
cmc
xor
mov
mov
outsl
stc
dec
inc
leave
xchg
add
inc
cwtl
daa
fimuls
imul
inc
retw
push
jb
mov
dec
xor
and
pop
ror
jnp
dec
mov
lahf
neg
and
adc
dec
cmp
addr16
andl
mov
push
add
push
mov
fstps
andl
mov
pop
xor
adc
cwtl
fldcw
loopne
out
xchg
dec
sbbb
jb
sbb
notl
sbb
xchg
push
sbb
dec
pop
dec
cltd
notb
test
cmc
push
pop
sti
pop
shll
out
or
add
pop
cmp
pop
loopne
jns
mov
int
sub
sbb
adc
or
out
mov
dec
sub
cmp
xchg
in
xor
les
testb
aaa
ja
lods
jnp
lahf
ljmp
inc
push
addr16
pusha
mov
and
imul
jge
push
mov
push
dec
mov
add
and
je
dec
jbe
aad
cmp
xchg
xchg
sub
daa
jo
xor
loop
xor
addr16
imul
ret
outsb
stc
mov
stos
pop
mov
pop
inc
inc
jle
int3
xor
pop
addb
dec
push
test
movl
jle
inc
mov
movsb
in
out
fcoml
repnz
scas
and
mov
les
and
adc
mov
xchg
xchg
xchg
jle
pop
mov
outsl
scas
rorl
cmp
movsl
fs
or
jb
call
and
std
mov
fstl
bound
push
test
loope
dec
rcl
scas
call
fstpt
stc
xorl
jo
in
ds
cmp
dec
add
fwait
sbb
cli
jecxz
push
mov
push
mov
xor
xor
fsubrs
xchg
fwait
lods
loope
out
jbe
movl
pop
mov
push
xor
scas
xor
sarb
bound
sbb
test
or
mov
xchg
sbb
jb
dec
cmpsb
add
adc
mov
mov
daa
pop
or
lcall
mov
lret
or
pop
imul
push
cld
ja
add
std
lret
arpl
and
vpmulhuw
mov
sub
adc
pop
leave
sbb
adcl
mov
ficompl
push
push
fiaddl
stc
push
in
push
fnstenv
push
dec
sarl
popaw
clc
pop
hlt
cmpsb
repz
test
cmp
or
cmp
orl
sbb
ret
mov
dec
out
lock
mov
lods
jno
inc
fistl
testl
scas
mov
mov
outsl
test
xor
xor
xchg
pop
pop
xlat
lods
orl
cld
dec
bound
and
call
in
xchg
aaa
xor
or
ret
fwait
test
jno
xlat
pop
inc
aam
cmp
jnp
dec
jns
das
rol
stc
sbb
icebp
dec
dec
into
fidivl
scas
int
iret
push
mov
js
jecxz
out
dec
lea
outsl
stc
add
inc
mov
inc
pushf
dec
das
outsl
inc
shr
push
mov
loop
push
adc
add
rcrl
mov
lret
mov
out
out
sub
xchg
or
or
cs
popa
daa
int3
push
pop
adcb
imul
stos
adc
adc
mov
mov
push
mov
sbb
or
std
mov
int
enter
repnz
aaa
psubd
push
mov
into
xchg
ret
push
mov
test
cmp
push
push
add
test
mov
sub
mov
adc
test
inc
call
or
dec
and
cmp
jge
dec
xchg
add
pop
cltd
test
xchg
popf
data16
xchg
xchg
cmp
lods
cld
pop
das
lods
and
xor
inc
mov
pusha
pop
mov
pop
sti
xor
or
or
js
mov
jnp
jg
out
jae
adc
arpl
mov
xchg
adc
movsl
cmp
js
stos
mov
push
inc
pop
push
pushl
pop
out
jns
dec
dec
psubusw
lods
sbb
pop
jb
add
popa
into
jne
movsb
mov
sub
jbe
mov
ret
xchg
ret
rorl
fucomip
into
push
lds
movsl
dec
xor
sbb
sub
sbb
xchg
jo
push
xchg
cmc
sti
sbb
mov
jl
sub
or
js
mov
lahf
lahf
or
push
ja
faddl
repnz
sub
lret
add
xchg
add
push
xor
mov
iret
lea
dec
dec
mov
sti
lret
loope
sub
or
sbb
test
mov
mov
addr16
push
scas
mov
cmc
pushf
jp
jle
fidivl
sub
xchg
in
pushf
pop
les
flds
fwait
and
les
jae
dec
mov
adc
inc
push
pop
and
js
sbb
pusha
sub
push
repz
xchg
inc
fcompl
cs
cmp
pop
loope
or
jle
fnstsw
push
imull
adc
jmp
xlat
and
ret
lds
fdivrs
inc
add
cmp
ja
dec
fwait
push
dec
in
inc
xor
jle
fisubrl
icebp
stc
pop
shll
dec
inc
mov
sub
mov
push
fidivrs
rorl
jnp
lock
mov
stos
push
sarb
xchg
push
sbb
mov
out
popf
sub
dec
cmp
icebp
cmc
adcb
adc
movsb
xor
loopne
fimuls
fs
cmp
scas
add
loop
add
lcall
mov
outsl
loopne
test
addr16
in
imul
pop
idivl
mov
je
repnz
sbbl
cmpl
fstpt
jle
nop
test
lock
mov
push
pop
xchg
iret
push
mov
or
mov
sub
ljmp
imul
and
pop
test
or
shll
inc
fdivp
stos
sub
xor
push
push
hlt
jae
and
rolb
lcall
imul
lret
in
xchg
test
mov
push
jl
sub
mov
push
loopne
loop
inc
or
repz
push
lret
outsl
hlt
orb
insl
ret
sbb
sbb
stos
mov
mov
inc
shl
insb
mov
fwait
and
clc
in
ret
xchg
mov
out
mov
jp
sahf
push
repnz
mov
adc
push
lea
mov
push
jecxz
or
jmp
test
mov
xchg
xchg
cltd
sub
test
ret
testb
jo
pop
fmulp
pop
xchg
fadds
mulb
dec
push
sbb
data16
stc
ss
repnz
outsb
lock
lods
push
mov
and
out
jecxz
cs
xchg
xor
ds
std
jp
cmp
lret
xchg
rclb
mov
bnd
cld
aad
repnz
mov
mov
std
call
cmpb
lea
pop
mov
scas
mov
mov
adc
push
sub
dec
add
insl
test
mov
ljmp
aaa
lods
xchg
xlat
push
xor
outsb
in
shl
lods
hlt
cmp
xor
cmp
xlat
add
sbb
mov
iret
xchg
sbb
cmpsb
pop
aam
popf
shrb
das
shlb
cli
stos
insb
jmp
ret
je
movsb
cld
imul
pop
mov
jbe
scas
pop
sbb
mov
adc
testb
cltd
fs
xor
or
test
dec
je
fs
push
mov
jecxz
icebp
jae
cmp
xchg
stc
out
xor
rcl
xchg
daa
cs
xchg
in
dec
aad
stos
in
inc
lea
adc
pushf
orl
add
mov
cwtl
lcall
stos
dec
insb
pop
test
sbb
scas
jmp
shr
pop
mov
push
sbb
pop
mov
push
xchg
sub
aam
loopne
or
mov
push
mov
mov
leave
xchg
out
push
or
cmpsb
bound
mov
rcl
ljmp
jb
pop
loopne
sbb
jl
push
cmp
jg
and
sbb
mov
lret
mov
pop
push
mov
push
arpl
pop
push
mov
sub
dec
adc
sar
xlat
outsl
test
fbstp
jmp
mov
or
or
push
mov
sbb
test
xor
out
mov
pop
pop
ret
cmp
outsl
push
mov
cld
shr
test
test
inc
and
jle
popf
inc
out
sub
push
jo
push
push
pop
inc
add
pop
inc
cmp
rcl
push
je
mov
mov
push
in
mov
pop
jbe
inc
test
scas
xor
jbe
ret
shll
jmp
int3
pop
popa
jle
lds
pop
clc
jae
xor
and
push
mov
test
and
out
inc
fcompl
sbbl
cmc
daa
pusha
cmpsb
arpl
je
hlt
mov
jns
xor
in
mov
xchg
pop
jmp
mov
add
push
pop
xor
pop
push
jns
pop
notl
sarb
sbb
xchg
mov
xor
push
cmp
out
ret
adc
jmp
inc
mov
inc
adc
or
mov
dec
js
xchg
js
dec
or
outsb
jmp
sub
imul
cmp
and
dec
jmp
test
addr16
jnp
pop
push
dec
movsl
dec
mov
lret
repz
pop
inc
psraw
pop
addr16
loopne
sub
dec
lahf
fsts
fadds
or
fisubs
mov
enter
xchg
mov
ljmp
adc
negb
dec
adc
ja
icebp
adc
arpl
push
pusha
and
iret
sahf
jne
lods
sbb
push
dec
xor
ds
add
pop
imul
xchg
push
scas
repz
or
push
neg
cld
bound
movsb
mov
imul
test
cwtl
addr16
and
imul
adc
fisttpll
faddl
pop
addr16
add
xchg
xor
inc
repz
add
daa
sbb
push
fstpl
cmp
mov
lock
xchg
and
les
or
add
xchg
sub
mov
adc
cmpsb
mov
aam
mov
es
test
sub
mov
out
dec
cmp
in
pusha
cltd
inc
xchg
xchg
xor
mov
sahf
xor
test
push
dec
mov
add
inc
aam
mov
sarl
pop
outsb
bound
inc
aaa
push
aad
pop
sbbb
mov
in
cmp
sub
outsb
cmpsb
cs
xor
mov
ljmp
std
outsl
decb
jnp
arpl
or
in
or
adc
ljmp
mov
mov
loopne
xor
mov
lcall
in
push
or
xchg
xlat
insb
fwait
out
mov
test
fistpll
push
mov
or
xor
imul
ds
iret
pusha
inc
pop
mov
or
jo
sub
int3
add
ds
mov
cwtl
push
sbb
xchg
data16
mov
lds
cwtl
sbbb
push
jo
fwait
xchg
aas
lret
adc
aaa
add
jg
les
pop
lret
les
xchg
xchg
add
scas
shrb
stos
inc
data16
dec
stc
sbb
xor
jmp
mov
ja
jg
clc
jo
addr16
addr16
adc
into
loop
notl
push
popa
repz
mov
jo
xor
sbb
leave
je
loop
jo
outsl
gs
cmpsb
scas
jge
mov
mov
iret
sub
imul
stos
sub
mov
scas
dec
jecxz
popf
push
sub
ror
jp
xor
jns
jno
mov
testl
dec
jns
sbb
push
jno
pop
or
addr16
jns
mov
int
mov
mov
test
das
out
push
xorl
adc
test
add
jge
adc
push
mov
jno
push
jl
xchg
mov
inc
jno
mov
mov
in
in
xchg
ret
mov
repz
cmp
imul
lret
cli
in
pop
out
fdivl
aad
dec
rcl
xchg
or
flds
jbe
lahf
stc
pushl
sbb
test
fcom
into
cmp
push
out
aas
mov
mov
add
or
ret
sbb
mov
gs
rcr
mov
inc
and
cs
jne
sbb
push
stos
push
mov
out
adc
mov
mov
imul
out
jb
sub
and
cmp
mov
jle
and
out
loop
pop
and
and
aas
xchg
or
xlat
lahf
scas
xor
out
loope
lret
jns
movsl
imul
mov
xchg
inc
dec
xchg
incl
push
jo
pop
push
les
jecxz
ds
mov
cmp
pcmpeqd
or
mov
mov
push
je
rcll
adc
in
sbb
data16
sbb
out
cmpsl
adc
push
dec
xlat
out
xchg
dec
mov
insl
in
imul
mov
sub
cli
insb
cwtl
push
or
adc
mov
inc
or
fprem1
pop
xchg
stos
pop
push
out
adc
mov
adc
mov
mov
dec
aaa
int
cmp
ljmp
adc
xchg
pop
mov
popa
xchg
adc
jmp
adc
inc
mov
push
popf
lahf
push
add
pop
xchg
fistpl
gs
enter
sahf
dec
stc
cli
sub
lret
mov
dec
mov
sbb
ss
or
mov
movsb
movsl
jl
fucomip
int
add
movsb
sub
lea
jecxz
aas
inc
negw
or
fbstp
pop
mov
test
cltd
ficoms
sti
add
xchg
pop
movsl
jae
outsl
loopne
sbb
adc
cmp
dec
daa
inc
aaa
push
fdiv
jnp
call
mov
popa
repnz
lods
pop
cltd
cli
les
cmpsl
push
outsb
push
push
insb
ficoml
mov
push
insb
or
mov
iret
xchg
sahf
enter
clc
sbb
mov
cld
mov
mov
push
dec
mov
das
xor
test
loopne
lock
mov
movsb
ljmp
fiaddl
or
and
adc
sbb
mov
roll
jae
pop
ss
and
xor
cwtl
dec
jns
add
pop
imul
cmp
cmp
lcall
das
pop
and
xchg
movsl
imul
idivl
leave
push
mov
or
lcall
movsl
mov
hlt
add
pop
sbb
inc
mov
dec
xchg
faddl
and
push
push
repnz
jmp
and
add
aad
inc
lahf
pop
pop
mov
xchg
push
pusha
cmp
mov
sbb
pop
jecxz
pop
cld
testw
fnstsw
add
iret
mov
inc
dec
ret
pusha
sti
sub
dec
in
fnstsw
fiadds
push
add
and
add
dec
mov
popf
xchg
jle
lock
jge
fisubs
ja
ljmp
pushf
fdivrs
mov
dec
ret
cmp
lcall
leave
sti
into
into
idivb
hlt
gs
fidivl
int
jo
sub
scas
xchg
loop
xchg
dec
mov
push
sbb
lret
loope
jge
mov
cmpsb
int
icebp
in
out
mov
fldt
push
sub
pop
movaps
xor
es
icebp
mov
arpl
popa
xchg
mov
pop
outsb
cmp
outsb
lret
or
xor
sbb
test
roll
adc
mov
mov
fcompl
xchg
mov
ds
loop
mov
js
xor
push
insb
lret
lret
adc
out
loopne
push
mov
push
pop
pop
and
les
test
icebp
sti
rcr
or
pusha
pop
push
sub
jp
rclb
xor
imull
adc
jb
ss
ficoml
sbb
ds
repnz
icebp
sahf
jg
push
jae
popf
and
mov
movsl
test
ret
ja
shrl
xchg
aaa
or
mov
cmpsl
xlat
daa
hlt
jmp
and
and
js
insl
dec
fs
add
in
movsb
imul
cltd
nop
xor
mov
call
ljmp
mov
out
je
fildl
das
mov
pop
outsb
add
mov
sti
mov
xchg
add
clc
mov
mov
repnz
xlat
cltd
into
and
or
movsl
pop
xor
inc
mov
imul
je
es
mov
pop
andl
out
movntq
test
jmp
cmp
or
and
cmpsl
add
test
push
xor
mov
jle
leave
loopne
dec
mov
xor
flds
xor
lcall
adc
into
rolb
pop
push
shll
rol
aam
sbb
imul
ds
fbld
cltd
rolb
cmp
addr16
mov
xchg
jae
adc
push
mov
cmp
js
inc
and
push
cmc
jo
test
cwtl
sbb
xchg
je
pushf
sbb
sahf
jae
mov
sarb
fucomi
lea
push
or
lret
movsb
pop
cmp
imul
shrl
or
in
sti
xor
ficoms
sbb
jb
mov
sub
push
jb
sbb
inc
outsl
jnp
ret
push
jg
push
add
lds
ret
and
jne
popf
fsubr
hlt
test
mov
fisttps
xor
out
mov
jmp
jp
jmp
mov
and
divl
sbb
mov
mov
xchg
adc
inc
sub
mov
repz
js
inc
sahf
sahf
xchg
arpl
push
fsubs
mov
repz
sbb
sbb
dec
aam
jp
sarb
and
xchg
xchg
stc
aam
dec
bound
push
jbe
cmpsb
inc
xor
ljmp
ja
and
int3
xchg
and
jl
sub
jmp
fs
shrb
lea
inc
mov
adc
int
mov
outsl
push
cmc
push
mov
mov
jnp
out
mov
inc
cmpsb
cli
and
rclb
adc
shlb
stos
jecxz
aad
dec
jge
pop
mov
sbb
sub
cli
push
xlat
les
jbe
sahf
adc
inc
mov
push
cmp
add
popf
stos
movb
ret
gs
inc
xchg
lcall
lea
inc
jle
mov
jle
out
pop
inc
add
xor
sbb
test
cli
leave
mov
test
pop
xor
aas
mov
xchg
inc
and
cmpsb
add
loopne
clc
pop
inc
js
out
jmp
push
pop
shlb
and
cmp
inc
dec
sbb
push
mov
sbb
clc
popf
sar
sub
rorl
dec
sahf
fcomp
arpl
insb
jl
in
js
inc
pop
jge
add
or
popa
sbb
in
cmpsl
jae
xchg
mov
pop
hlt
popf
jle
ljmp
adc
and
dec
mov
sub
icebp
sbb
out
sbb
jge
imul
mov
jnp
jp
xlat
pop
jmp
jmp
shll
push
lret
lock
and
cmp
xchg
push
mov
imul
jb
shrb
jg
loop
sbb
repz
dec
dec
xor
mov
stos
insb
xlat
das
or
insl
out
sub
subl
push
test
stc
into
stos
jge
xchg
adc
push
jmp
and
popf
push
test
rorl
mov
cmp
loope
cmp
sbb
jo
mov
loope
test
pop
loop
cmp
sbb
jg
pop
sahf
jge
adc
xchg
lcall
xor
jge
push
mov
ret
aas
mov
add
in
loopne
add
dec
xor
cmpsb
sahf
and
negb
sbb
rorl
shlb
orl
push
loope
push
mov
movsb
shrl
int3
adc
inc
in
adc
and
mov
sub
mov
or
lahf
and
cltd
pop
sbb
sahf
ret
inc
mov
repz
fwait
push
sub
inc
or
jae
cli
mov
sqrtps
jbe
insb
into
and
dec
jmp
push
mov
fstl
mov
sub
sub
imul
mov
sub
subb
fwait
int3
cli
pop
ds
sub
movsl
jmp
insl
dec
mov
insl
sub
and
inc
movsb
ror
dec
sbb
xlat
sahf
push
cmp
adc
inc
pop
dec
repnz
jle
pop
xchg
dec
fsubp
cs
and
enter
xor
cld
loope
jg
les
addr16
push
sub
cli
lods
cmp
sub
imul
sub
inc
lds
fldl
repnz
loope
sub
adc
xchg
push
push
sbb
jg
insl
lea
add
iret
mov
ja
lods
cld
ljmp
divb
fstl
mov
or
jb
or
call
push
jp
fmuls
movsb
push
mov
inc
fisubrs
xchg
and
out
adc
jmp
movsb
mov
push
add
lahf
cmp
daa
and
das
or
jg
pop
cmp
fiaddl
mov
or
or
push
push
cmpsb
xor
pusha
jo
inc
popa
stos
and
xlat
mov
mov
pop
js
scas
add
ret
stos
iret
cmp
jl
jne
mov
push
cmp
jl
adc
fwait
sar
mov
xchg
cmp
in
mov
aas
hlt
push
cmp
xchg
sub
test
aas
scas
cmp
jne
cmp
push
outsl
sbb
push
leave
push
out
cmp
lret
lods
dec
or
ss
xor
cwtl
sub
inc
push
add
inc
push
add
xchg
adc
sub
daa
adc
js
inc
cmc
sub
or
pop
test
pop
mov
jge
mov
lock
pop
pop
in
enter
xchg
stos
movsb
lds
lret
test
jg
movsb
sub
push
loop
addr16
ffree
jnp
iret
mov
mov
sbb
inc
aad
or
and
fs
rorl
scas
scas
mov
or
add
push
adc
es
enter
inc
mov
or
inc
sub
pushf
dec
mov
rorl
xchg
jl
sub
jecxz
mov
xchg
orb
and
jg
ud0
cli
jno
sub
rorl
stos
push
dec
xor
xorb
sbb
push
xor
push
bnd
out
and
push
mov
mov
fsubrs
push
pop
in
xor
add
jge
pop
mov
cwtl
rorb
xor
pop
aad
repz
pushf
xchg
add
adc
gs
fmull
xchg
dec
mov
idivb
imul
clc
inc
dec
nop
push
fstl
call
inc
int3
cli
pop
int
arpl
xchg
cmp
mov
pusha
nop
mov
mov
incb
jmp
adc
jl
jb
pop
sub
inc
jmp
hlt
push
xlat
mov
fidivs
daa
pop
cmp
enter
jmp
jl
add
mov
cmp
xchg
dec
mov
push
mov
xchg
fmull
addr16
push
scas
add
dec
cmp
push
mov
test
fistpll
push
xor
mov
data16
sbb
and
cld
or
inc
clc
sub
outsb
inc
daa
arpl
and
into
bound
sti
cmp
mov
cmp
mov
or
xchg
testb
mov
stc
inc
arpl
and
xor
pop
shll
pusha
pop
test
pop
pop
sub
xor
xor
ljmp
nop
pushf
inc
jg
lcall
add
inc
mov
cmp
movsl
movsb
pop
subb
ss
ljmp
ds
in
lahf
mov
cmp
xlat
xchg
add
std
fdiv
lahf
loopne
pop
gs
rcl
adcl
repz
jge
cltd
lds
syscall
fstpl
fsubl
pusha
popa
movsl
loope
add
cwtl
jmp
aad
push
sub
ja
ljmpw
ds
daa
adcb
mov
lds
cld
scas
pop
dec
mov
dec
arpl
lret
testb
std
sbb
mov
lret
xlat
xchg
sbb
and
cli
fdivrs
mov
das
ja
sbb
cmpsl
lret
jns
js
movsl
push
daa
daa
adc
int
or
xlat
pop
xor
mov
movsl
loope
mov
cmpsl
mov
xchg
sub
ret
pop
fbstp
add
inc
push
movsb
mov
sahf
fsubrs
aam
test
ret
inc
jl
ss
ficoms
into
out
push
sar
roll
add
cmp
jb
jmp
push
push
popa
jae
mov
mov
xor
lret
pushf
nop
adc
xchg
outsb
cmpsb
popl
lahf
pop
lea
or
mov
sbb
inc
mov
jnp
xor
dec
xlat
pop
out
les
dec
mov
aas
iret
or
or
pop
dec
jp
or
clc
or
fdivrl
test
push
fcmove
dec
pop
and
pop
add
hlt
mov
inc
cmp
push
ljmp
loopne
mov
imul
popf
pop
mov
mov
pop
into
pop
fcomps
mov
adc
jns
test
subl
mov
ss
in
mov
fcmovu
dec
inc
incb
outsb
jmp
outsl
and
fs
push
jp
jo
add
aad
sbb
mov
pusha
cmpsb
frstor
or
int3
dec
rcrb
mov
cltd
test
ret
adc
gs
push
mov
xorb
mov
xor
add
mov
jns
stc
dec
push
xlat
jae
mov
sti
mov
outsb
daa
cs
ret
mov
cmpsl
pop
fcoml
mov
out
sbb
clc
sahf
outsb
mov
jne
call
jmp
dec
lods
loopne
mov
je
mov
push
push
out
negb
rcll
or
xor
xchg
cmc
or
mov
mov
add
adc
fildl
cli
push
lret
in
sub
sbb
std
dec
dec
inc
ret
mov
inc
sbb
shrl
pop
sub
xchg
fsubs
or
cmp
scas
add
rclb
fildl
movsl
jge
ficoml
mov
ljmp
mov
movsb
fnstcw
stc
dec
xchg
fiadds
std
xor
icebp
addl
jns
lds
inc
mov
xchg
data16
cmp
xor
add
pop
mov
fs
xor
lock
mov
das
aaa
aaa
insl
or
jmp
dec
pop
dec
push
adc
cld
data16
mov
in
pop
add
and
movsb
es
or
inc
iret
mov
mov
push
add
out
and
push
je
inc
lods
push
sbb
arpl
add
pop
jmp
into
adc
imul
inc
adc
das
xchg
cmpsl
mov
in
mov
push
jg
jp
inc
leave
push
jecxz
push
sub
or
int3
test
jle
out
sub
sahf
shrl
leave
shlb
sbb
loop
sbb
push
add
xchg
test
in
sbb
xor
xchg
mov
call
or
lea
push
sub
pop
pop
roll
std
or
mov
pop
push
andb
lret
lret
mov
jo
test
imul
and
fs
scas
dec
fistpll
shrb
fsubs
xor
test
ljmp
mov
shll
mov
les
jg
mov
sbb
sub
mov
mov
fisubrs
ret
mov
popf
and
dec
cmp
xchg
fidivl
icebp
aam
aad
repnz
es
jae
cwtl
add
xlat
out
inc
jns
pop
in
mov
call
xchg
add
add
into
mov
jo
loopne
push
lds
imul
lods
xchg
add
filds
iret
add
lods
adc
pop
jae
ret
mov
sti
and
rcll
adc
cmp
pop
ret
gs
lret
xchg
and
mov
lock
out
or
add
pop
adc
mov
andl
in
cli
js
jmp
arpl
or
call
xchg
xchg
hlt
pop
sub
call
mov
cmp
inc
insb
in
sbb
shll
or
mov
ljmp
or
push
inc
jns
lret
pop
push
stos
adc
arpl
aas
outsb
orl
testb
test
fistpl
sub
cmp
xlat
popf
cmp
testl
jnp
mov
int
push
cmp
movsl
sbb
mov
into
adc
popa
fwait
or
sahf
cmpsl
cmpsb
stos
or
and
test
jno
jp
add
and
xor
sahf
xlat
jge
inc
cmpsl
dec
ljmp
add
jle
mov
pop
jmp
sub
outsb
add
dec
test
xchg
cmpsl
dec
iret
mov
push
rcll
fcoms
mov
js
out
sub
xor
stc
in
sbb
xchg
imul
add
lods
popf
sub
and
mov
jle
push
xchg
es
jp
jp
pop
cmpsb
not
sbb
mov
fsubrl
xor
movsb
mov
stos
or
dec
shlb
add
icebp
pop
xor
sub
pop
adc
je
das
xchg
sub
mov
roll
xchg
jns
test
aaa
dec
sti
jae
inc
sub
adc
data16
xchg
inc
and
and
fwait
mov
pushl
sbb
inc
adc
in
fwait
stc
daa
jmp
imul
adc
rorl
mov
adc
mov
or
jmp
lahf
addb
pop
push
adc
dec
mov
sub
mov
xchg
jg
ja
inc
push
aam
and
and
out
cmc
mov
scas
or
addr16
fisubrs
mov
es
fidivrl
fsubl
xor
or
cmc
sahf
mov
aam
cltd
je
add
mov
xchg
or
inc
cmp
adc
or
inc
out
xor
pop
pop
sub
filds
xchg
test
xor
or
mov
ljmp
rep
dec
out
aas
popf
mov
jbe
inc
mov
sub
test
add
cli
sub
in
pop
xor
mov
push
dec
lahf
decb
pop
sbb
jne
aas
xchg
gs
push
xchg
push
outsb
outsl
fisubs
hlt
idiv
out
rcr
jmp
lcall
into
fstpt
xchg
inc
sbbb
mov
je
enter
outsb
push
cmp
mov
sub
and
lock
gs
fisttpll
inc
les
or
fidivs
icebp
daa
scas
lods
aad
dec
mov
jns
xor
repnz
lret
inc
adc
cltd
adc
add
sti
aad
insl
je
rorb
fsubrl
fwait
adc
ljmp
add
lcall
adc
mov
stos
mov
imul
sbb
imul
retw
ret
push
pop
dec
and
xor
xor
jl
jno
jb
jae
dec
inc
test
sub
lahf
cmp
pusha
in
test
stos
mov
pop
les
dec
inc
or
xchg
jo
clc
cs
pop
lret
test
mov
adc
mov
scas
add
add
int
sbb
movsb
xchg
jl
xchg
pushf
in
mov
icebp
or
pop
and
pusha
cmp
xor
outsl
insb
lods
enter
loopne
lds
sbb
dec
add
jae
adc
mov
dec
out
xchg
pop
or
xchg
outsl
pop
dec
addr16
popl
mov
fs
xor
pushl
sarb
push
pop
sahf
test
cmp
ljmp
aaa
push
jae
sbb
je
roll
cwtl
daa
iret
out
cli
data16
adc
dec
push
mov
daa
mov
in
divb
xor
cmp
sbb
add
add
mov
out
pop
jle
cmp
cs
inc
mov
xlat
roll
push
xchg
clc
adc
ds
std
das
in
cmp
mov
jecxz
sub
pop
rcrl
sub
cmpsl
jns
ja
test
movsb
mov
sbb
js
movsb
cmc
pop
mov
xor
xor
inc
clc
xchg
mov
shrl
mov
call
jp
mov
cmp
lea
aam
add
cmpsb
mov
and
and
xchg
outsl
mov
pop
mov
mov
scas
mov
dec
lea
lret
ljmp
cmp
pop
enter
test
shrl
loope,pn
in
mov
push
hlt
lods
scas
imul
aam
orb
xorb
psrlw
movsl
cli
mov
push
gs
sarb
mov
cmp
ret
and
and
or
push
stos
arpl
test
nop
lock
xchg
jne
xchg
jg
jnp
pop
subb
cmc
aas
notb
jp
jno
sub
sub
jno
jp
popa
jp
enter
dec
cmp
andl
stos
enter
mov
in
xchg
push
dec
mov
test
cmc
mov
addr16
cwtl
scas
test
mov
test
stos
jle
jmp
ljmp
jle
push
xchg
push
sub
lcall
popa
ja
ss
mov
mov
call
xor
stc
or
push
lcall
push
loop
outsb
nop
and
out
jne
js
arpl
adc
fisubl
popf
lcall
add
bound
std
push
sbb
mov
dec
sbb
sahf
ret
stos
test
xor
xchg
dec
mov
std
sbb
stos
outsb
out
or
mov
add
aam
insl
mov
test
in
pop
fsubrs
test
xchg
push
dec
add
mov
xchg
insl
je
cmp
mov
mov
adc
sbb
imul
mov
shrl
xlat
fadds
xchg
jl
ds
popa
iret
addr16
and
stc
cmp
push
dec
lds
loope
jb
pop
insb
lds
push
sub
fldt
dec
jbe
xchg
loopne
cmp
ss
mov
pop
test
lods
incb
fs
hlt
out
xor
loop
jne
cwtl
and
scas
push
xchg
pop
dec
imul
push
in
and
outsb
clc
jbe
pushf
mov
outsl
pop
xlat
adc
xor
mov
xor
jae
jge
movsb
xchg
leave
test
push
mov
mov
lahf
cmp
cli
lods
inc
xchg
mov
mov
jmp
adc
imul
pusha
xchg
cmp
or
or
jne
mov
ret
loopne
insl
mov
xchg
add
mov
mov
jg
cmpsb
push
repz
js
mov
std
popf
mov
jmp
in
dec
jecxz
icebp
dec
inc
push
jmp
and
adc
pop
ficoml
daa
add
fwait
cmc
adc
in
daa
xlat
xchg
arpl
scas
in
movsl
xchg
dec
and
sub
call
hlt
and
sbb
or
jae
roll
mov
out
ljmp
sysenter
divl
subb
inc
push
clc
lahf
cmp
adc
ficomps
in
mov
pusha
test
jp
mov
add
aaa
push
int
cld
and
sbb
add
nop
push
xor
aam
push
dec
and
push
mov
popa
sbb
ds
or
imul
repnz
leave
or
sub
pusha
hlt
fsubrs
or
test
test
stos
mov
loop
lods
movsl
mov
insb
aaa
pop
insl
xchg
xor
sbb
xchg
aam
mov
ds
push
jmp
enter
cltd
push
xchg
out
pop
adc
inc
lret
or
aad
and
cwtl
icebp
cmp
inc
lods
inc
jbe
push
jle
shl
lds
fistpll
xor
inc
shl
data16
cmp
lret
mov
gs
dec
sbb
shll
xor
lds
ret
lock
pop
lods
add
cli
ret
xchg
fwait
xorb
arpl
mov
pop
and
repz
jo
or
sub
and
cmp
jnp
icebp
aad
test
pusha
loop
fnstsw
bound
aas
cmp
imul
stc
enter
pushf
add
sub
call
inc
je
fidivl
xchg
js
int3
cmp
popf
loopne
push
repnz
sbb
push
jo
push
shlb
sbb
call
fmul
mov
pcmpgtb
mov
daa
cmp
leave
or
xor
mov
adc
mov
sub
cmp
jmp
fisttpl
push
out
pusha
bound
out
xor
stc
repnz
sub
jg
add
xchg
test
xor
xchg
mov
pusha
into
fstps
loopne
lahf
ds
pop
shrb
das
jbe
mov
ljmp
ja
in
cmp
push
aaa
jne
popl
popa
adc
test
inc
sub
mov
pusha
loop
divl
fistpl
dec
sbb
sub
adc
push
push
adcb
ret
ds
test
clc
pushf
outsb
dec
gs
xchg
inc
dec
rcll
sbb
mov
add
sbb
xchg
mov
lea
mov
ret
mov
cltd
fldl
pop
pop
in
or
outsl
es
jge
int3
and
lcall
xor
aaa
or
pop
or
jl
cwtl
inc
addr16
cld
mov
leave
inc
rcll
xchg
imul
sub
cmp
stos
sbb
icebp
pop
pop
stos
scas
push
ljmp
sub
enter
pop
push
or
loopne
add
push
out
dec
mov
popf
aam
aad
inc
mov
pop
mov
push
enter
dec
inc
int3
ja
mov
add
sbb
cwtl
xchg
icebp
mov
test
mov
xor
xchg
jbe
scas
aad
test
cmpsb
push
mov
imul
popa
movaps
das
sub
mov
dec
xchg
xchg
jp
lret
jl
adcl
push
mov
push
pop
enter
js
cmp
imul
pop
fsubl
idiv
sbb
jnp
inc
mov
push
loop
lahf
pop
dec
add
les
lods
sbb
call
jne
or
iret
push
pop
ret
or
shl
sub
and
jecxz
push
pop
outsl
mov
shll
lock
add
xchg
imul
cmpl
mov
gs
fildl
add
ret
adc
popa
js
push
data16
mov
jne
sti
sbb
call
pop
push
mov
icebp
sub
or
mov
cs
mov
lods
dec
mov
mov
cmp
orb
xor
scas
notb
stos
mov
pop
popf
add
mov
loopne
enter
dec
shrb
loop
push
jno
mov
adc
js
mov
cmc
andb
inc
mov
insl
and
xor
mov
mov
loope
xor
push
cli
in
sbb
lcall
pushf
in
lahf
mov
out
js
lods
jmp
mov
fnsave
sbb
pop
push
scas
in
iret
mov
dec
xchg
dec
lret
mov
adc
fwait
cwtl
mov
aaa
shlb
mov
int3
inc
xchg
inc
inc
lock
jne
mov
repnz
push
lret
in
stos
cmpsb
add
scas
stos
xor
xchg
inc
mov
mov
pusha
fstpt
xchg
pushf
dec
ljmp
mov
jp
shll
pop
jns
cmp
imul
fwait
inc
dec
stos
mov
xor
int
loopne
sub
dec
lcall
into
sub
cltd
jno
push
sbb
sub
add
gs
das
clc
shl
dec
xlat
ss
dec
and
sti
icebp
push
and
scas
xchg
in
dec
sti
loope
sub
dec
or
cmp
dec
rorl
in
addr16
movsl
xchg
inc
jbe
jmp
outsl
fstpt
xchg
mov
push
jge
or
push
mov
sub
xor
fsts
mov
mov
cmpsl
sub
inc
or
xchg
mov
shrl
pop
push
insl
aaa
add
pop
mov
cld
bound
mov
les
test
cltd
sbb
call
sub
shl
xchg
ljmp
cmpsb
or
out
add
hlt
mov
aad
lret
clc
cmpsl
adc
pop
and
ss
jmp
push
movsb
mov
pop
scas
sbb
std
ret
xlat
and
movsb
inc
cmp
sbbl
xor
out
sahf
mov
pop
orb
addr16
idivb
jmp
xlat
xor
mov
leave
orb
dec
fmulp
sub
xchg
ja
popa
stos
rclb
push
or
jg
xchg
das
push
shl
cmp
xor
sbb
nop
mov
mov
mov
ds
mov
or
mov
cld
sub
js
lahf
lret
sbb
xchg
scas
cld
jp
sub
inc
test
test
pop
shlb
lods
shrl
insb
in
orb
stc
jo
dec
je,pt
loop
dec
adc
popa
pop
push
jae
mov
imul
push
fincstp
push
mov
jnp
mov
pushf
jle
jle
dec
movsl
adc
or
out
clc
cmp
dec
movsb
cmp
aas
fs
sub
push
cli
dec
mov
xor
pop
jbe
loop
fadds
push
cmp
in
pusha
push
jge
pop
pop
pop
xchg
or
arpl
fwait
out
and
pop
sub
mov
mov
push
inc
fwait
xchg
fstpt
lods
dec
rorb
and
lods
loopne
aam
add
pop
or
imul
dec
mov
lahf
int
in
add
lea
inc
frstor
jecxz
push
cli
inc
sub
mov
lahf
orb
lods
loope
loop
mov
inc
stos
sbb
not
sbb
pop
sub
clc
cltd
pop
or
scas
lock
sub
adc
jb
aad
iret
xor
mov
loope
popf
test
pop
je
in
out
jg
adc
inc
ds
cmpsl
rclb
cmp
fdivrs
sbb
adc
daa
or
cmpl
rcrb
imul
pop
je
jns
fcoms
xchg
inc
jo
aam
bound
lahf
mov
jo
cmp
dec
xchg
and
stos
cmp
imul
xor
pop
aaa
test
sbb
cli
lret
xchg
int3
mov
dec
sahf
lcall
int
push
sbb
in
and
mov
and
push
lcall
xchg
push
rolb
cmp
in
mov
jo
sbb
in
and
jno
mov
and
xor
sbb
sub
push
and
in
arpl
lods
mov
and
addr16
mov
and
cmpsb
out
loop
sarb
pop
push
jmp
addr16
mov
sarb
mov
inc
ds
push
or
sbb
mov
dec
mov
jae
outsl
shrb
aad
pop
add
scas
add
dec
aad
xor
inc
adc
imulb
icebp
aam
cmc
jo
test
pop
or
lock
shlb
xor
dec
fldcw
or
xchg
push
mov
and
movl
sub
adc
in
or
lret
inc
loopew
jge
xorps
mov
sbbb
in
fists
sbb
push
or
sub
hlt
pop
cmp
fwait
push
rorb
xorl
fisttpll
shl
data16
cmp
push
add
bound
adc
daa
cltd
stos
mov
into
mov
repz
jl
xchg
push
ss
mov
dec
rol
imul
xchg
and
adc
jge
fsubp
mov
jp
adc
xor
sbb
jo
adc
mov
iret
daa
xchg
iret
call
pop
daa
adc
adc
mov
subb
pushf
fs
or
push
jecxz
jne
cmp
mov
arpl
repz
sti
or
ret
add
inc
push
cmpsl
loopw
mov
std
jmp
adc
sbb
jmp
dec
mov
push
pop
sub
mov
inc
adc
into
and
or
cwtl
sub
fcomps
push
outsb
adc
out
out
cmpsb
cltd
lcall
sti
pop
enter
jecxz
insl
fsubrl
mov
add
cmc
xchg
push
and
jg
and
or
pushf
scas
inc
movsb
mov
mov
xchg
stos
js
outsl
in
adc
push
inc
cmpsl
xchg
mov
lret
inc
test
in
ror
lea
stos
cli
mov
xor
mov
jl
mov
and
ds
or
add
sub
int3
psllw
cld
push
test
dec
insl
add
ss
shrl
mov
xchg
adc
inc
test
es
pop
addr16
mov
lea
jno
jb
cmp
loop
pop
ret
xor
mov
sub
test
dec
mov
popf
sub
mov
sub
jmp
and
lret
sbb
jg
bound
cmp
xchg
in
ss
mov
xchg
sbb
dec
test
lret
hlt
popa
or
mov
cmp
je
or
imul
in
fdivr
add
in
mov
jae
jg
xor
mov
or
aas
add
pop
push
adc
scas
mov
or
fwait
loop
les
popl
add
js
popa
mov
inc
push
xor
and
push
sub
outsl
jno
xlat
test
out
cmp
adc
jno
sbb
mov
mov
hlt
sbb
hlt
daa
sbb
xchg
test
dec
test
jl
mov
push
adc
outsl
jle
xor
mov
inc
mov
mov
int3
push
ret
push
xor
arpl
inc
cmp
add
das
into
push
adc
jne
lds
mov
daa
mov
add
push
out
cmp
addr16
add
mov
ljmp
mov
mov
rorl
mov
lods
stc
and
or
pop
aaa
push
rcrb
and
add
sub
xor
out
and
das
xor
push
out
movsl
mov
dec
add
lock
pop
std
lock
sub
jl
xor
xchg
dec
push
loopne
in
add
mov
inc
rorl
xchg
cmp
inc
shll
dec
sub
gs
data16
mov
cli
into
and
inc
movsl
nop
xchg
jge
sarl
addr16
shr
xor
or
jg
ljmp
arpl
fnsave
iret
jge
dec
xor
push
call
ds
or
add
mov
adc
divb
mov
dec
jae
xorb
mov
or
test
shrb
ds
int3
ret
std
test
pop
pop
jne
and
sub
xlat
lea
leave
out
pop
jmp
xor
aas
mov
es
jl
jns
int
pop
es
sbb
mov
or
inc
xchg
xor
out
stc
negl
mov
repnz
ljmp
lock
or
jecxz
xor
cwtl
in
mov
or
pop
inc
sarb
out
ja
out
fildl
sub
or
rep
into
mov
clc
push
jp
or
inc
lods
mov
int3
add
pop
lods
mov
push
iret
and
fwait
jg
xchg
es
adc
push
jb
and
into
adc
mov
cli
or
jo
xchg
or
cmp
stos
popl
lock
inc
dec
cmp
iret
cmp
and
add
xor
mov
fmuls
popl
fs
mov
add
out
in
and
pop
push
push
test
xor
xor
mov
jno
ss
sbb
pop
sbb
add
out
and
sub
inc
add
sbb
imul
in
cmp
movups
fadd
ffree
cmp
push
sbb
stos
xchg
daa
push
setl
sbb
pop
mov
data16
and
scas
out
enter
mov
inc
push
inc
mov
cmp
daa
adc
adc
lock
sbb
test
push
mov
arpl
push
sbb
andl
sub
rorl
and
mov
lret
cmp
into
test
jns
jle
jb
sub
sbb
cltd
out
and
fs
andl
push
inc
into
cld
push
lods
mov
pop
dec
jmp
mov
xor
or
xchg
push
pop
mov
cld
add
xchg
aam
pop
test
pop
insl
das
in
fs
je
pop
fidivs
lret
movsl
lods
mull
jns
clc
leave
pop
cmp
or
enter
inc
sbb
xchg
pop
jecxz
repnz
xlat
pop
movsb
sbb
jg
sbb
dec
test
outsb
cs
adc
push
jne
sahf
or
test
add
divl
mov
inc
mov
xchg
icebp
cmp
push
sahf
mov
inc
test
fs
pop
imul
mov
adc
es
add
jle
xor
or
shlb
loopne
out
cmc
and
jmp
lods
mov
push
sarb
std
out
je
pop
data16
sbb
xchg
popa
xchg
and
push
in
adc
aas
push
repnz
rolb
loop
pop
sub
sub
in
xchg
test
push
jb
push
fstl
xor
sub
pop
and
std
xor
mov
out
cld
xchg
dec
es
mov
in
insb
fmull
xchg
mov
and
mov
out
push
rcll
inc
inc
push
dec
mov
xor
xor
popf
lods
aad
repz
pushf
cmp
outsb
adc
shlb
xor
mov
sub
out
sub
mov
push
lahf
js
xchg
nop
xlat
data16
mov
mov
sub
and
gs
shrb
andb
test
jecxz
cmp
fdivrs
in
movb
add
lret
push
add
and
or
pop
adc
lock
sbb
jbe
jo
mov
mov
jle
mov
and
cmc
jne
lret
lret
fwait
stos
repnz
packuswb
jmp
mov
xorl
adc
cmc
int
scas
cmp
dec
les
loope
repnz
cli
nop
shlb
in
and
stos
sub
mov
ljmp
gs
scas
and
movsb
outsl
mov
and
inc
pop
test
inc
adc
pop
out
mov
mov
ljmp
out
or
jmp
dec
dec
xchg
cmpsb
adc
pushf
aaa
lret
adc
pop
hlt
aad
inc
enter
out
or
inc
ret
insb
cmp
mov
or
cltd
sbb
inc
inc
xchg
into
push
sbb
inc
loop
ficoms
jl
hlt
sti
cmc
add
xchg
cli
lret
test
add
jle
and
sub
push
rclb
mov
ret
mov
jmp
cltd
mov
movsl
mov
scas
cmp
lods
fwait
push
mov
mov
cltd
test
sbb
or
ret
cmpb
lahf
out
dec
inc
xchg
into
cmp
cmpsb
outsl
push
xchg
pop
dec
ret
ffree
movsb
pop
insb
in
shl
jae
pop
dec
cmpsb
std
ss
push
clc
mov
loope
push
fimull
or
shrb
pop
je
dec
int
insl
fcomps
rcr
lcall
push
loope
lcall
mov
dec
movsb
mov
xchg
gs
ss
sub
jne
xchg
imul
negl
sahf
cmp
mov
aad
xor
cmp
and
inc
stos
inc
ret
inc
xchg
fisttpl
cltd
fs
stos
push
pop
push
mov
rcrl
lods
push
icebp
mov
enter
mov
mov
sub
pop
cmp
gs
pop
fucomi
pop
std
dec
andb
mov
jp
fs
out
sub
and
jbe
mov
cmpsb
loop
cltd
imul
mov
lock
push
adc
loop
jg
xor
aam
sub
push
movsb
cmc
addl
inc
xor
lods
rcrb
bound
mov
inc
jp
stc
out
pop
pop
xchg
aam
and
jecxz
jl
daa
xor
cmp
jg
stc
addb
push
xchg
sahf
and
clc
mov
jge
lock
push
int
jnp
loopne
lock
aaa
jbe
movsl
sub
jns
jbe
js
inc
mov
mov
int3
andl
inc
adc
ljmp
mov
into
fildll
ja
sub
dec
mov
test
setg
mov
mov
rcll
dec
jb
jae
aaa
cwtl
inc
mov
fxtract
add
loope
jmp
inc
flds
xor
test
sub
sub
roll
dec
and
ljmp
stos
dec
add
add
or
gs
and
jbe
and
test
imul
ret
add
mov
lods
dec
jmp
add
jg
cs
cmp
inc
jae
push
aas
outsb
das
add
lretw
out
andl
fdivrs
mov
mov
mulb
pop
icebp
repnz
jno
lret
pop
popf
into
ds
mov
outsb
int
loope
ljmp
push
rorl
or
mov
addr16
jecxz
test
jb
sbbb
outsb
testl
repnz
mov
adcl
aam
jecxz
mov
aas
cmc
fs
cmp
repz
jecxz
fwait
adc
int3
subb
jge
push
mov
inc
hlt
mov
xlat
xor
pop
mov
rcpps
shll
cmp
test
mov
mov
mov
in
jecxz
mov
mov
sub
test
and
and
cmp
dec
sar
mov
scas
cli
pop
imulb
xchg
push
or
sbb
or
adc
xchg
dec
mov
pop
fidivl
cmp
xor
dec
xchg
setbe
fistpll
push
dec
lret
mov
mov
sub
loop
lret
jg
js
xchg
push
mov
outsl
rclb
fcmove
mov
mov
xchg
sbb
stc
dec
into
int
jo
ds
cli
call
cmpsl
repz
int
xchg
fucom
dec
add
test
pop
decb
mov
mov
jecxz
mov
inc
filds
fisubrl
orb
cld
decb
jp
or
call
cmp
shlb
push
into
jae
or
loope
and
push
jp
jmp
shufps
xor
es
stos
mov
lds
cmp
test
dec
push
daa
jae
mov
pop
xlat
mov
test
insb
xchg
dec
fidivrl
in
fs
mov
out
sahf
jp
js
or
cmpsl
hlt
cmp
dec
cs
dec
dec
add
scas
xlat
inc
aam
in
cld
fcoms
inc
jae
aad
xchg
jmp
add
jb
mov
push
inc
outsl
sub
test
shll
push
and
and
fnstsw
or
xor
daa
insb
cmp
or
fistpl
inc
dec
xchg
adc
loopne
push
mov
inc
popf
je
jne
jecxz
dec
cli
nop
xchg
mov
mov
test
xchg
add
daa
inc
and
fwait
adc
nop
mov
shl
cmpsb
add
cmp
repz
data16
mov
outsl
pop
notl
fsubr
inc
test
dec
and
mov
popw
sub
xchg
or
aas
mov
mov
adc
jb
imul
push
adc
xchg
xchg
jl
sahf
dec
loop
mov
leave
xor
pop
ds
pop
inc
ljmp
lea
adc
rolb
sub
mov
stos
and
fwait
sbb
xchg
addr16
or
lahf
stos
fldl
sahf
ret
mov
xlat
xchg
into
xchg
ret
dec
sbb
push
xchg
push
iret
scas
scas
xor
xchg
dec
mov
xor
xor
pop
mov
cld
sub
enter
or
or
incl
aam
ret
out
mov
adc
jnp
jne
aas
hlt
outsb
jmp
jo
mov
dec
std
pusha
test
or
xchg
mov
lret
fdivrl
mov
xor
sbb
shll
std
inc
inc
xchg
add
fiaddl
dec
jae
push
dec
mov
jns
mov
stos
add
aaa
dec
fidivl
xchg
outsb
clc
rcrb
mov
mov
mov
adc
xor
orl
pop
add
cmp
lret
cmpsl
xor
jo
sub
mov
ja
cs
lds
pop
mov
bswap
cwtl
add
insl
cmc
repnz
dec
ds
test
hlt
andb
jnp
imul
sub
lcall
std
and
mov
frstor
adc
orl
int
imul
aam
push
pusha
loope
mov
call
xor
fidivrs
pop
push
cmp
ljmp
scas
arpl
jp
pop
inc
sbb
dec
popa
imul
sbb
addr16
lret
add
or
lds
jp
xor
scas
mov
dec
sub
sbb
loopne
pop
or
lock
mov
std
inc
jae
std
adc
dec
out
mov
and
dec
jbe
leave
push
cltd
xchg
or
inc
jns
jmp
out
inc
aam
loope
or
xchg
mov
push
add
cs
arpl
add
inc
pop
or
xchg
adc
sbb
jae
outsb
test
push
dec
mov
andb
lods
lds
adc
fildl
imul
cmpsb
test
mov
loop
out
jp
int
pop
inc
sub
rorb
and
sbb
mov
push
cmp
mov
sarb
loopne
sub
adc
andb
or
scas
pop
or
fsub
sahf
xchg
mov
daa
sti
and
in
movsb
pop
mov
adcl
arpl
addr16
ficoml
xchg
pop
mov
cmp
xchg
xchg
outsl
lods
pushf
fisttps
jge
push
cmpsl
stc
inc
scas
mov
or
mov
mov
push
push
ss
adc
dec
mov
sub
fwait
cs
int3
scas
jg
mov
mov
or
xlat
mov
sbbb
rcr
mov
push
ret
sub
out
xor
jmp
add
pop
movsl
jno
imul
mov
mov
or
clc
insl
sbb
mov
cmp
out
pop
leave
pop
adc
fstpt
lret
add
mov
pushf
add
mov
loop
mul
std
xchg
mov
cmp
int3
dec
adc
and
cmp
adc
dec
lcall
popf
test
daa
icebp
jl
jecxz
orb
mov
inc
cmp
mov
lds
pusha
outsl
cwtl
push
lock
push
repnz
rclb
add
aas
ficoml
bound
insl
aaa
push
sbb
stos
dec
cwtl
jg
lock
in
mov
mov
pusha
xchg
xchg
shr
push
xchg
sbb
push
fbld
jbe
xchg
push
in
fdivrl
fwait
or
add
dec
cmp
fisubl
lock
lret
dec
cmp
cs
sarl
stc
out
and
mov
sbb
std
add
lea
cmp
mov
pop
outsb
movsl
stos
int3
dec
es
mov
hlt
fisubrs
xchg
xchg
mulb
ror
jle
push
scas
insb
jae
mov
dec
cs
imul
lret
in
shrb
sub
pop
jl
cli
gs
push
push
repz
les
mov
imul
add
ret
lds
pop
addr16
psubq
ret
xor
jne
jl
das
jp
mov
lcall
out
je
rclb
or
push
mov
sub
adc
test
cmp
sub
lahf
iret
hlt
xchg
mov
std
cmp
lret
icebp
adc
adc
xchg
lods
sbb
or
xchg
inc
inc
iret
jne
pop
xor
mov
or
insb
push
xlat
dec
dec
or
mov
add
pop
pop
outsb
add
mov
sarl
out
roll
or
mov
cwtl
repnz
pop
sub
dec
hlt
push
ljmp
js
aad
or
fdivl
andl
js
bound
fidivrs
jp
mov
push
push
and
jecxz
mov
jae
xchg
fwait
pop
test
jmp
and
mov
mov
fildl
sub
into
push
outsl
imul
fstpt
or
popf
xor
inc
mov
rol
xchg
std
mov
ret
jecxz
clc
inc
sbb
inc
xor
scas
stc
cmpsl
rcll
or
jnp
jp
jo
aad
mulb
mov
sar
loop
rorb
or
dec
js
adc
push
add
pop
arpl
adc
inc
mov
jns
lea
bound
pop
and
xchg
sbb
add
sbb
cmp
aas
mov
inc
aas
fs
jbe
dec
in
cs
inc
and
dec
sub
addr16
add
mov
or
cmp
pop
dec
inc
cwtl
ret
insl
xor
iret
dec
fimuls
stc
addr16
jne
jg
inc
call
sbb
cmp
leave
ljmp
fcmovb
dec
aas
dec
movsb
cmp
sbb
repnz
jae
fisttpl
out
sarb
insl
dec
add
cwtl
aad
jno
mov
int
mov
cmp
popa
add
repnz
addb
addr16
cwtl
hlt
cltd
jmp
cmpsb
cmpb
imul
lahf
loopne
mov
mov
das
std
mov
push
fnstcw
aas
mov
and
add
imul
xor
lret
ror
add
clc
or
mov
aaa
fldl
push
xlat
xor
dec
lcall
dec
lret
scas
fisttpl
lret
ja
ret
jbe
adc
out
neg
mov
cmp
loop
sub
negb
repz
sti
adc
xchg
mov
mov
ja
shr
xor
int
lcall
out
xor
and
out
adc
jl
mov
je
xor
rcl
jecxz
les
dec
push
cmp
iret
cmp
jmp
adc
scas
call
outsl
push
rclb
cmpsb
xchg
add
fs
mov
fs
test
hlt
gs
lods
pop
sbb
neg
sub
lods
stos
mov
mov
in
shll
adc
mov
outsl
pop
cmp
push
and
cmc
xchg
aas
insl
mov
cltd
mov
jle
cltd
mov
fnstenv
pop
lods
mov
or
std
test
mov
fmull
pop
mov
movsb
aad
add
xor
testl
sahf
jp
rolb
dec
or
xchg
xor
fwait
ds
das
in
fbld
js
insb
dec
jo
lds
out
aad
mov
mov
push
test
dec
cltd
nop
mov
dec
inc
xchg
push
cmp
inc
in
sbb
sahf
cmpl
xor
mov
iret
stos
lock
stos
cmp
inc
jns
sub
loop
xchg
movsb
sub
mov
out
test
push
pusha
inc
les
mov
test
lret
subb
or
push
loope
in
mov
fstl
inc
incl
mov
jb
xchg
adc
test
lahf
dec
enter
xchg
pop
dec
xchg
aas
adc
iret
cmp
jp
mov
jbe
and
fs
insl
cmp
xchg
xor
jno
cmc
ljmp
dec
cmpsl
sbb
jbe
int
adc
insl
rcr
leave
enter
push
icebp
xlat
dec
mov
cmp
inc
xchg
mov
shrb
ljmp
xor
notl
adc
cmp
test
data16
addl
imul
mov
push
cmpsl
adc
cmp
cli
mov
test
ret
inc
lods
mov
push
or
and
mov
cmp
mov
aad
fs
cmpb
jp,pt
pop
mov
add
xchg
outsl
test
fwait
push
lock
pop
test
fabs
adc
icebp
int
insb
dec
cmpsb
xadd
repnz
lods
decl
push
aad
jmp
test
les
adc
lods
cmp
xor
insl
cmp
mov
pop
cs
fdivs
dec
lcall
mov
daa
leave
mov
ja
push
lods
aaa
aas
dec
outsb
cld
hlt
int
jmp
scas
sub
loopne
ja
pop
dec
fisttpl
xchg
mov
insl
xorb
mov
lret
xor
ret
fmull
pop
cli
inc
sub
jl
cmp
sbb
les
shl
add
mov
test
xchg
add
dec
data16
test
push
test
jp
xor
or
rcl
leave
enter
orb
inc
ficomps
pop
ja
dec
jmp
cltd
test
inc
dec
fldt
cmp
jbe
fisubrl
pushf
test
jl
mov
sbb
fwait
pop
pop
test
lea
cwtl
pop
cli
ficoml
add
cltd
enter
mov
jbe
jl
jnp
mov
or
adcl
loopne
jnp
ficoml
cs
pop
push
fsubr
lahf
or
cmp
in
out
stos
andb
into
xor
mov
mov
xor
insl
data16
or
shll
cmp
scas
pop
cmpsl
cmp
fs
loop
inc
xchg
jnp
subl
sbb
mov
inc
xor
fiaddl
fsub
or
xor
cmpsb
or
xor
je
xchg
frndint
xlat
into
mov
jmp
jbe
sbb
push
sbb
xor
pop
cli
dec
pop
cmp
movsb
out
ret
xchg
fiaddl
ljmp
lahf
mov
imul
mov
mov
push
loope
mov
push
test
xchg
mov
xchg
add
xchg
test
in
dec
and
jns
xchg
add
scas
dec
adc
cmc
mov
jae
jl
fdivrs
icebp
and
inc
imul
in
sub
mov
mov
mov
enter
frstor
jp
movsl
insb
lret
sub
out
aam
mov
xor
out
ret
xchg
add
mov
int3
or
dec
aaa
clc
repz
sub
cmpl
mov
in
pop
negl
int
hlt
mov
xlat
ss
push
or
cwtl
inc
cmp
pop
ss
je
push
or
pop
cmp
imul
negl
adc
imul
sbb
push
mov
jecxz
xchg
mov
clc
mov
es
or
mov
int3
sub
in
sub
xchg
loope
jecxz
jecxz
jecxz
mov
dec
sub
dec
cmc
or
sub
stos
imul
mov
jecxz
xor
lahf
adcl
dec
inc
sbb
stc
mull
pop
adc
fstpt
movsb
cmpsb
das
cmp
push
cmpsb
add
outsl
gs
ss
xchg
xchg
xlat
mov
sahf
push
lock
dec
lds
pop
int
push
cmp
test
out
out
roll
jnp
insb
dec
pop
or
out
lods
inc
lock
orl
hlt
mov
les
je
mov
and
sti
and
dec
ss
dec
add
lcall
push
fisubs
iret
fisubrl
jnp
test
sahf
cs
std
cmpsl
loop
fdivl
inc
mov
xchg
ret
push
mov
mov
iret
les
repnz
in
in
dec
lret
out
jp
adc
popf
adc
cli
or
dec
xor
in
inc
mov
fbld
or
add
xchg
mov
lods
mov
sub
out
or
stos
add
or
jle
shlb
jnp
mov
cmp
pop
mov
cmpsb
inc
push
movb
inc
mov
adc
pop
cmp
inc
jno
xchg
fldl2t
ds
inc
dec
lret
cld
adc
divb
fwait
call
dec
jecxz
pop
dec
loop
or
sbb
lods
fisubrs
mull
cli
xchg
mov
cmp
cltd
ja
insl
scas
test
ss
pop
mov
cli
cltd
mov
ret
dec
or
out
int3
pop
xchg
inc
test
iret
or
inc
dec
cmpsb
adc
int3
rclb
or
decl
xor
mov
repnz
push
push
jne
dec
in
cmc
test
push
aaa
iret
and
push
fsubr
pushf
sbb
insb
ss
in
aaa
leave
xchg
sbb
ja
loopne
xchg
push
aad
mov
repz
push
jns
lret
mov
mov
pushf
and
sarb
scas
fisttpl
dec
jns
call
in
pop
andb
mov
and
subb
enter
je
fldcw
iret
inc
ret
data16
cltd
mov
jne
call
imul
pop
mov
mov
xchg
mov
icebp
push
out
pop
dec
inc
inc
push
jmp
test
mov
sbb
mov
rol
inc
add
push
push
hlt
ss
bound
mov
mov
sub
nop
ljmp
mov
bound
negb
aad
mov
iret
pop
jnp
in
mov
lcall
adc
inc
inc
sub
jns
movl
push
adc
rclb
xorl
mov
xchg
je
mov
pop
mov
or
cmp
xor
test
and
sub
in
inc
arpl
in
in
icebp
sub
pop
and
sub
mov
popa
mov
add
into
jg
jbe
or
fstpl
inc
in
push
xchg
insb
arpl
popf
bound
mov
loope
imul
cmpb
cmc
mov
jecxz
cmp
mov
pop
inc
scas
test
jo
inc
ljmp
lods
je
and
repz
mov
int
add
push
clc
ret
push
ja
rcl
adc
outsb
inc
pop
cmp
inc
bound
shrb
add
or
outsb
mov
and
subl
and
pop
jle
push
mov
add
and
xor
jnp
popa
sar
sahf
andl
jo
into
dec
push
push
sbb
mov
lcall
mov
shlb
cmpsb
add
movsb
nop
ret
push
in
dec
pushf
lods
out
sub
pop
mov
jno
roll
mov
push
out
pushf
and
lods
lret
dec
pop
add
test
xor
and
push
imul
sub
xchg
shr
js
orl
fcoml
fsubrs
insb
xchg
cltd
push
stos
dec
or
popa
gs
cmp
rcrb
rolb
aam
push
xchg
fcmovne
sub
rorl
mov
test
xor
and
fld1
sbb
xchg
adc
cmp
push
cs
in
aam
fdivrl
dec
xchg
cs
push
mov
and
stos
ljmp
daa
fwait
xorl
imulb
and
pop
sti
je
xchg
adc
push
lods
iret
xor
pop
push
cwtl
sbb
push
mov
sub
and
push
add
pop
xor
fs
mov
jge
and
rolb
xchg
mov
lods
loop
std
or
sub
shlb
add
mov
lret
sarb
add
sub
das
je
mov
mov
adc
shrl
mov
mov
dec
test
xor
loop
jne
jbe
insb
ja
mov
jle
inc
rcll
cmpsl
lds
pop
ret
jo
sbb
adc
hlt
pusha
repnz
sub
divb
or
mov
int
sbb
rcr
movsl
ret
push
push
lods
mov
mov
stos
lea
adc
lea
jge
xchg
add
sbb
inc
outsl
popa
push
icebp
mov
inc
mov
test
imul
mov
in
dec
mov
clc
push
cmp
aaa
jno
add
pusha
insb
xor
and
mov
ds
test
call
xor
sbb
int3
or
mul
jge
pop
jne
test
mov
ljmp
mov
cmp
scas
xchg
mov
dec
or
xchg
mov
repz
push
js
mov
add
xchg
adc
mov
scas
lcall
lds
sub
in
adc
lcall
add
icebp
and
xchg
jecxz
test
pop
inc
adc
mov
sbb
mov
je
pop
sbb
dec
sub
mov
stos
les
xchg
sub
iret
loope
xchg
inc
inc
lret
popa
movl
push
xlat
mov
and
mov
maxps
loop
fs
divl
pop
push
mov
icebp
lahf
sub
mov
and
fwait
std
fstl
repz
test
sahf
push
ficoms
lods
addr16
sarb
loope
mov
je
pop
out
push
fs
lock
lahf
div
fsts
pop
mov
jmp
stos
jge
pop
and
pop
pop
aad
ret
aas
or
pop
cli
insl
jbe
xchg
xor
sbb
fcmovnbe
mov
adc
fisubl
nop
popf
rcrl
xchg
mulb
push
daa
xchg
stos
push
cwtl
jnp
ljmp
sti
xchg
loop
jg
lret
rcll
leave
sub
sahf
imul
mov
and
loope
push
cmp
sub
add
outsb
jns
dec
inc
shl
pushf
jmp
arpl
cmp
push
sbb
jnp
cwtl
mov
push
ja
sub
mov
es
sarl
add
xor
jl
pop
rcrb
adc
pop
insl
adc
imul
inc
rorb
mov
insl
pop
in
mov
dec
and
popf
outsb
shrb
push
jecxz
mov
loop
jbe
lods
fucom
in
adc
mov
dec
call
lods
daa
mov
mov
out
or
out
pop
or
out
dec
xchg
cmp
fidivl
popf
pusha
mov
ss
mov
pop
cmp
pusha
mov
cmp
fidivrl
mov
sbb
imul
jb
popa
test
sti
inc
add
stos
psrld
vrsqrtps
jnp
or
or
cmpl
cmp
out
loopne
jge
pop
adc
lds
cwtl
inc
ds
mov
inc
mov
data16
jnp
lods
adc
subl
movsl
xchg
cmp
jae
dec
xlat
scas
sbb
mov
out
lods
push
das
paddq
or
fdiv
sbb
test
ss
sub
pop
xor
pop
or
repnz
stos
lock
xchg
pop
pop
gs
clc
push
push
adc
nop
fdivl
add
pop
push
cs
adc
xchg
push
repnz
jecxz
push
xlat
sbb
jbe
fbld
mov
mov
lock
mov
aas
pop
jg
xchg
adc
test
add
bound
push
xchg
sbb
rclb
lods
ss
ljmp
xchg
ret
lret
ljmp
je
pushf
fisubrl
adc
js
jno
into
inc
fwait
scas
cmpsl
scas
test
jns
jae
and
loopne
mov
lret
push
push
inc
ja
adc
xor
add
xchg
lds
out
icebp
cmp
pop
add
mov
cmp
test
jno
movsb
fisttpl
jle
jp
lret
hlt
into
sbb
pop
ret
cs
sti
dec
pop
xchg
popf
insl
cs
cmpsl
aas
cltd
jb
inc
xor
push
cmpsb
xchg
loop
dec
sbb
jmp
sub
sahf
fcom
bound
cmpl
outsl
std
cli
popf
dec
mov
jns
movsb
cmp
fcmovnu
fucom
xchg
mov
pop
sti
fwait
pusha
dec
lods
or
mov
mov
jg
les
stos
in
shlb
ljmp
jns
cmpl
xor
inc
sarb
cld
imul
pop
out
shl
add
adc
mov
adc
xchg
mov
push
loope
sbb
fisubl
inc
sbb
push
lret
and
xchg
and
test
add
test
xor
dec
test
xchg
mov
outsb
sub
mov
mov
push
addr16
inc
in
cmp
sbb
push
gs
push
mov
push
shrb
and
jecxz
dec
push
ljmp
or
push
sbb
ljmp
hlt
out
mov
pop
mov
jo
adc
mov
popf
jge
ret
mov
lret
mov
inc
mov
shrl
mov
push
ja
xor
out
jnp,pn
in
out
inc
pop
mov
das
in
fdivrl
xchg
test
sbb
mov
push
push
loop
push
cmp
pushf
xorl
imul
jo
lret
pop
divl
outsl
loope
ret
stos
xchg
cld
add
icebp
sbb
xor
std
in
lret
loope
rcl
fwait
xchg
mov
iret
sub
mov
mov
rclb
cmc
mov
inc
xchg
jecxz
clc
mov
pusha
mov
push
mov
lea
lea
sub
jl
test
daa
test
out
push
push
ja
xor
ds
xchg
es
cmpsb
aas
mov
les
and
in
cmp
and
ret
mov
ret
fstpt
notb
stos
or
shr
aaa
xchg
popf
inc
xchg
mov
push
or
and
sbb
pop
mov
je
roll
sub
loope
es
fstpl
ud0
inc
in
stc
sbb
pop
dec
jnp
sbb
xchg
sahf
data16
dec
or
repnz
sub
jp
insl
loop
aam
cmc
cmp
push
outsb
fildl
call
inc
dec
push
test
sbbb
pop
adc
sbb
add
sbb
scas
ja
inc
sbb
rorl
sub
das
mov
es
dec
inc
cmp
or
push
or
fildll
daa
mov
rol
inc
sub
jl
and
cmpb
stos
fisubs
and
repz
fsubrl
mov
aas
mov
nop
addr16
push
and
jmp
xor
inc
xchg
mov
daa
add
je
adc
cmpsb
pushf
xchg
ret
out
mov
push
lea
xchg
push
xchg
push
xchg
mov
pop
cmpb
outsb
testb
inc
imul
inc
mov
push
push
stos
arpl
lahf
or
sub
cmc
mov
mov
mov
into
add
test
rcrl
outsb
repnz
iret
mov
and
icebp
and
idivb
in
ja
lea
inc
cmpsb
call
scas
sti
cmp
cld
push
cwtl
aaa
or
mov
leave
mov
pop
inc
cmp
aaa
xor
xor
sarl
lods
shll
or
and
cmp
les
pop
andb
jb
cltd
mov
sub
icebp
clc
and
adc
mov
into
shrb
jb
mov
and
dec
dec
add
scas
mov
inc
leave
call
pop
pop
mov
aad
pop
gs
jmp
mov
xchg
xchg
xchg
pop
xchg
jmp
mov
adc
fimull
xchg
in
push
loop
or
hlt
in
insl
into
push
rcll
sub
inc
int
pop
dec
pop
sbb
mov
inc
xchg
lods
stc
in
test
popa
cli
push
repnz
jmp
sarb
jno
jge
dec
or
push
pusha
fimuls
pop
pop
sub
pushf
jnp
push
or
rcll
out
mov
dec
loope
push
fidivl
in
iret
stos
clc
testb
and
jp
inc
out
mov
xor
cmc
sbb
jnp
int
cmc
push
test
roll
mov
jmp
outsl
shll
pop
pop
cmovns
lds
and
pop
in
pop
ss
addr16
into
out
ja
push
sbb
push
xlat
sub
cmp
cltd
pop
out
fs
mov
popa
mov
movsb
loop
int
jno
int3
mov
dec
pop
pop
jl
mov
les
push
jae
jns
jmp
clc
mov
xchg
xchg
jecxz
dec
jnp
lock
cmpsl
stc
pop
test
inc
clc
stc
jle
aaa
das
dec
adc
sbb
sbb
add
sbb
mov
sub
adc
mov
mov
pop
sbb
aam
push
clc
dec
out
inc
test
ret
iret
stos
pop
push
cli
pop
adc
lahf
shl
loope
xor
mov
mov
jge
cmp
lea
les
and
jae
scas
dec
hlt
shlb
aad
sarl
enter
adc
lea
cmp
fiadds
or
jne
pushf
pop
and
xchg
scas
mov
mov
pusha
pusha
mov
xor
sbb
js
adc
and
shl
adc
cmc
inc
in
in
push
mov
clc
outsb
sbb
xor
dec
cmp
mov
mov
jg
mov
bnd
jmp
loope
fdivrs
sarb
daa
cmp
sarl
insl
repnz
mov
lea
lret
adc
fimuls
pmullw
mov
ss
insb
btr
xor
cpuid
xlat
pop
in
in
test
pop
popf
xchg
imull
out
call
mov
lcall
adc
adc
clc
vxorpd
adc
pop
pop
fst
out
nop
out
pop
adc
jns
rcr
sub
push
jecxz
bound
ret
mov
sub
insl
lret
cmp
mov
cmc
mov
sub
push
lcall
xor
xor
int3
pop
cmp
pop
das
mov
leave
pop
daa
movsb
fdivs
jge
mov
mov
scas
adc
shrb
mov
add
lahf
fisubl
push
push
fcmovnb
mov
xorl
cld
shll
jp
xorl
dec
dec
out
fistpl
and
repnz
inc
ljmp
nop
aas
push
sahf
in
xor
pop
leave
mov
inc
nop
dec
inc
ret
pop
ja
bound
push
cwtl
add
je
outsb
scas
xor
test
hlt
adc
subb
lret
pop
outsb
frstpm(287
xor
outsl
dec
mov
inc
xor
add
xchg
and
and
fucomi
adc
sbb
andl
orb
cmpsl
ds
pop
repnz
rclb
stc
mov
sti
das
fadds
testl
scas
sbb
fbstp
sbb
sbb
inc
scas
jmp
out
outsb
mov
sub
and
fbld
lock
lahf
stc
aam
clc
xchg
je
js
dec
cli
pop
aad
jne
or
clc
incb
xchg
push
bound
sub
cs
dec
jnp
stos
test
pop
xchg
scas
clc
sbb
outsb
popf
into
push
dec
aad
decl
pop
aad
repz
xchg
jmp
and
call
test
orl
fsubs
add
orl
add
jp
mov
stos
xor
pop
adc
test
inc
ds
fchs
lods
outsb
lods
std
adc
ljmp
outsl
mov
mov
add
pop
and
push
or
or
push
mov
sbb
cmp
mov
dec
cwtl
and
das
in
lcall
leave
clc
push
xor
sti
jnp
inc
rcl
ja
cld
xchg
inc
mov
sub
ret
mov
in
outsl
xor
movl
pop
adc
int3
mov
arpl
int3
maxps
test
cld
pop
and
xchg
sbb
nop
pop
cltd
nop
int
cmc
into
std
or
xchg
inc
iret
test
aad
jge
mov
rcrl
in
mov
sbb
repnz
sub
icebp
xchg
lret
push
fwait
mov
push
fwait
xchg
adc
fcmovne
loope
fsubrp
leave
xlat
mov
inc
sahf
sbb
add
orb
add
popf
ficoms
out
mov
xor
xor
icebp
xchg
ss
cmc
add
lods
adc
pop
dec
sub
sub
outsb
add
add
sub
cmp
pop
fisubl
or
aad
cld
test
mov
in
pop
jb
xlat
inc
scas
lods
fdivr
mov
stos
sbb
sbb
scas
aam
stos
lea
xor
xor
ja
or
cmpb
push
popa
fwait
mov
ds
jmp
mov
pop
xor
fcomps
incl
lret
xchg
xchg
sarl
addr16
xor
insb
mov
xchg
shl
xor
out
shlb
mull
in
lods
dec
lcall
jp
mov
jne
outsl
pop
cmp
mov
mov
sbb
sub
aaa
push
imulb
jp
add
jl
loop
or
sub
loopne
xor
fwait
aas
cmpsb
mov
lcall
insb
cli
fisttpll
mov
cwtl
inc
or
clc
or
dec
sbb
pop
movsb
les
lods
fs
dec
jae
add
inc
lret
inc
or
in
pop
mov
cmp
push
cmp
fwait
mul
push
mov
andl
push
repnz
adc
popa
shr
mov
repz
leave
or
xchg
push
out
sbb
enter
test
push
loopne
hlt
xchg
mov
fwait
es
dec
fwait
pop
jl
shl
dec
repz
ja
mov
push
or
or
or
rcrb
inc
cmp
add
add
mov
adc
hlt
scas
jmp
mov
ret
lods
sahf
jl
cmc
adc
out
push
jecxz
das
jbe
pusha
xchg
mov
cmpb
sbb
xchg
cmpsb
push
sbb
daa
inc
gs
shll
dec
jns
cs
mov
xchg
or
roll
cmp
mov
sbb
fbld
ror
inc
stc
addr16
jmp
outsl
mov
add
icebp
and
xlat
jae
stos
jecxz
adc
xor
test
mov
and
clc
add
addr16
in
into
mov
nop
pop
scas
xchg
pop
jae
mov
lods
outsl
jns
hlt
int
jg
icebp
pop
cmp
nop
dec
jbe
sub
dec
dec
jno
scas
mov
mov
aad
cmp
dec
lock
inc
adc
xchg
dec
out
sub
int3
vmovapd
adc
nop
mov
sub
addb
inc
out
fcomps
std
dec
push
fistps
aas
or
iret
out
or
adc
mov
jl
adc
push
adc
mov
inc
pop
xchg
dec
out
int
test
and
rclb
cltd
push
xchg
shr
sbb
fsubl
xor
pop
int3
out
push
jb
xor
push
inc
cmp
int3
loop
adc
jecxz
in
mov
pop
sbbl
stos
arpl
push
std
push
push
sbb
lock
outsl
ret
dec
cmp
insb
pop
mov
mov
xchg
sub
sarl
leave
in
dec
push
in
inc
adcl
adc
nop
push
inc
push
stc
jbe
xor
stos
lcall
jmp
scas
cmp
out
test
sbb
idivl
adc
les
mov
mov
call
out
cmp
inc
or
rol
addb
ja
and
dec
scas
cmpsb
loop
hlt
cmpsb
cmp
cmp
stos
adc
pop
shll
cs
pop
adc
mov
cmp
cmp
mov
lds
pop
mov
loope
dec
mov
adc
insb
mov
lret
jno
and
jnp
push
dec
and
xchg
repnz
mov
push
mov
xor
add
fldt
mov
mov
fs
std
sub
add
call
inc
fildll
call
or
pusha
jnp
mov
stc
push
rcll
fdivs
test
cmp
mov
add
pop
aaa
mov
jg
add
mov
push
push
mov
fwait
ret
mov
ljmp
test
push
xor
xor
aam
mov
mov
or
mov
adc
jns
jo
lods
mov
cmp
push
sub
push
fcomps
hlt
push
scas
pop
loopne
mull
es
inc
into
pop
scas
fs
xchg
xchg
xor
inc
imull
out
push
cltd
sbb
sbb
rcrb
pop
js
pusha
dec
clc
xor
jns
sbb
stos
mov
negl
xchg
fwait
sti
cld
dec
dec
mov
imul
cs
mov
mov
xchg
mov
cmpsl
mov
es
push
aas
xor
jbe
jnp
test
xlat
clc
decl
dec
fbld
sub
lahf
jmp
or
loope
pop
adc
ja
mov
cmc
mov
in
jb
push
jns
in
lods
mov
notb
push
movsl
inc
mov
and
sub
stos
push
and
pop
mov
mov
adc
mov
je
adc
fistpll
sahf
mov
adc
or
dec
outsb
filds
stos
cmp
cmp
test
pop
jbe
imul
in
repnz
jl
jg
push
and
inc
loop
mov
popa
add
aad
sahf
jle
or
fs
testb
xchg
lcall
dec
shlb
push
sbb
adc
aaa
mov
sar
stc
mov
test
fadds
dec
push
pop
in
inc
pop
lods
xchg
sbb
inc
jecxz
push
dec
jecxz
add
add
scas
push
cltd
xor
mov
andl
inc
adc
popa
or
movsl
jne
push
mov
inc
sub
dec
clc
and
push
jns
add
rol
stc
in
mov
dec
lsl
lcall
dec
cli
mov
and
mov
adc
outsl
mov
and
jb
ss
xor
sbb
jo
jl
test
hlt
jae
stos
mov
mov
rclb
mov
into
and
push
lcall
xchg
out
fwait
cs
test
dec
adc
daa
and
push
inc
xor
popf
lret
scas
ret
add
and
out
cli
les
into
pop
push
lret
ficompl
sbb
cmp
shlb
and
test
pop
icebp
out
stos
jle
mov
repnz
mov
sub
stos
ficompl
jge
adc
ja
icebp
pop
in
or
stos
push
test
cwtl
lret
js
int3
jle
jae
sub
imul
das
push
subl
jl
inc
xor
add
lret
dec
mov
into
sahf
das
aam
xor
adc
mov
lock
add
iret
ljmp
pop
sbb
imul
add
pavgb
xor
cmp
iret
js
push
cli
pusha
mov
or
xor
dec
mov
and
mov
out
cmp
pushl
xchg
dec
add
mov
shlb
dec
jnp
loopne
ljmp
sbb
fimuls
xor
loop
mov
xor
push
and
mov
pop
je
arpl
mov
cmp
pop
xchg
xchg
push
ror
hlt
mov
aam
and
mov
mov
out
sbb
stc
dec
test
nop
cmpsb
mov
xchg
mov
and
jp
ret
add
out
pop
mov
test
sub
fwait
mov
fldl
imul
jne
adc
addr16
fwait
mov
mov
mov
xchg
shrl
jbe
lcall
cmpsb
inc
iret
movsl
jp
adc
or
fisubl
jmp
rcrl
into
add
jb
mov
sbb
adc
orb
add
ss
mov
inc
inc
jnp
push
xor
aad
or
daa
lods
mov
inc
sub
adc
sti
pop
sbb
rorb
and
mov
xor
cld
test
cmpsl
mov
pop
pusha
shrl
mov
mov
and
stos
dec
push
and
pushl
push
xlat
mov
dec
mov
clc
cmp
pop
adc
push
pop
test
fcmove
xchg
ss
dec
jae
test
imul
sbb
jno
cmp
cld
daa
dec
mov
xorl
or
mov
gs
pusha
ja
stos
loop
or
aad
jg
adc
inc
mov
scas
cmp
ljmp
pop
xor
mov
gs
incb
addr16
enter
ds
cmp
lcall
push
pusha
xchg
movsb
into
xchg
pop
mov
or
das
fisttpl
jb
enter
ret
loop
push
fists
cmp
je
xchg
mov
mov
jbe
push
dec
cli
jl
mov
sub
in
test
rcrl
mov
lds
sub
mov
test
cmc
sbb
inc
cmp
ss
jmp
outsb
orl
mov
call
jge
pop
out
fstl
je
aad
xor
in
add
inc
inc
mov
push
imul
xor
cmp
mov
aaa
jno
ret
in
jmp
adc
xor
xchg
mov
frstor
push
ret
pop
mov
scas
pop
inc
loopne
push
das
addr16
or
sub
add
push
mov
fstpl
shrb
leave
sub
mov
or
mov
xchg
mov
add
cmp
cmp
cmp
lret
and
sub
jo
test
mov
jle
cltd
or
and
insl
xchg
test
or
mov
push
push
xor
jns
dec
bound
mov
xor
mov
push
daa
xor
dec
adc
add
es
insb
sti
out
sbbl
lods
dec
sub
mov
jl
ss
sbb
pusha
arpl
addr16
hlt
cmp
pop
or
xor
mov
mov
mov
xorb
scas
leave
or
cli
add
pop
push
add
push
jb
cltd
pop
xchg
fdivrp
into
dec
imul
ret
and
cli
pop
loopne
xchg
jo
jbe
stos
jecxz
xchg
dec
shlb
xor
cmpsb
pop
cmp
outsb
mov
es
fidivrl
cmp
testb
aad
bound
ror
jb
jne
std
call
dec
jp
movsl
fwait
mov
sbb
stc
xchg
jg
xor
clc
jge
add
into
inc
adc
loop
test
ja
xor
hlt
cmp
inc
xchg
inc
stc
bound
xor
data16
stos
mov
mov
scas
ret
cmc
dec
pop
pop
sub
negl
dec
mov
enter
dec
stc
xchg
add
pop
gs
addb
rorb
movsl
fisubrs
xchg
or
pop
mov
inc
fcomi
ret
cwtl
and
inc
lret
inc
push
cmp
mov
cmc
lahf
cli
in
or
fcomi
xor
cmp
sub
pop
push
inc
out
xlat
jne
lahf
mov
jge
inc
xchg
aas
cmpsl
xchg
bound
cmpsb
and
test
call
loop
fucompp
aam
sbb
test
sub
stos
dec
mov
repnz
out
push
cmp
les
movsb
inc
mov
cwtl
inc
and
sbb
adc
sti
cli
popa
inc
adc
sbb
into
mov
sar
or
scas
xor
in
out
xchg
push
mov
ficomps
sub
mov
sbb
push
divl
jnp
loop
ret
imul
jnp
xchg
andl
push
add
mov
mov
aaa
push
sub
cmp
inc
pop
pusha
mov
shlb
push
inc
pop
aas
in
pop
repnz
ljmp
bound
pop
pop
negb
ljmp
je
in
xrstors
inc
jp
cmp
ficomps
sub
xor
sbb
fidivs
pop
cs
imul
fbld
lods
push
mov
mov
xchg
out
lods
jae
stos
cmc
out
stos
dec
mov
mov
loop
mov
cmp
pusha
imul
mov
dec
aaa
sarl
mov
sbb
dec
stos
sub
mov
dec
push
or
sbb
mov
mov
pop
cmp
mov
rcrb
push
int
inc
push
cmp
ja
lret
mov
pop
rcrl
sbb
outsb
mov
xchg
mov
mulb
and
and
and
jg
cli
inc
imul
fwait
cmp
clc
int
or
adc
leave
cmp
inc
cmpsb
mov
mov
inc
loope
out
popf
jmp
xor
scas
push
add
out
into
cmc
jg
pop
in
cmp
in
jo
test
ljmp
jle
dec
rcl
lcall
adc
jp
cld
add
test
test
loope
cwtl
dec
push
shrb
sub
out
pop
cld
lods
mov
inc
sahf
xchg
sub
cmp
cmp
cmp
pop
das
add
cmp
test
push
mov
subb
out
sub
xor
mov
sub
sbb
pop
movsl
adc
into
stos
lds
dec
and
inc
mov
sub
jge
aad
dec
mov
sbb
xor
call
call
mov
adc
jp
int3
jle
fsubrl
loope
xor
mov
add
out
sub
rolb
cmc
cmpsb
or
inc
hlt
stos
xor
test
xchg
pop
mov
rolb
loop
imul
in
cmp
mov
ljmp
sahf
xor
mov
lret
jecxz
in
adc
sti
jbe
test
lds
loope
mov
mov
jmp
push
mov
scas
dec
push
mov
outsb
gs
pop
test
mov
or
push
push
negl
stos
xchg
popa
pop
or
repnz
fidivrs
cltd
cmpsb
and
aas
xchg
icebp
jno
clc
aaa
mov
xchg
lea
das
push
aaa
xlat
ret
dec
int
in
enter
push
popf
lret
cld
loope
leave
or
aad
loope
cmp
xchg
lahf
sbbl
in
cmp
cld
addl
clc
aas
daa
incl
push
les
clc
push
jmp
push
mov
addr16
js
xor
xor
dec
and
pop
sahf
jl
es
mov
daa
scas
iret
add
adcb
push
adc
mov
call
aas
into
stc
push
in
gs
cmc
dec
dec
idivl
loopne
scas
test
sahf
loopne
dec
lds
stos
xchg
xchg
stos
sbb
mov
aaa
fmulp
jnp
fadds
pop
cmp
and
xchg
stos
inc
xchg
sar
lcall
jge
jecxz
mov
jmp
arpl
jecxz,pn
and
inc
xchg
cmp
pop
or
xor
mov
test
pop
aaa
lahf
inc
rol
pop
inc
sub
adc
dec
gs
sbb
lret
pusha
adcl
mov
insb
insb
scas
pop
inc
push
push
loope
push
ret
nop
rorb
push
inc
adc
ret
imul
jecxz
or
fs
xor
ljmp
movsb
lretw
jle
pop
pop
je
ret
xchg
int3
push
fldcw
into
mov
fst
sub
push
lods
out
sbb
inc
decl
and
xchg
inc
or
sti
outsl
and
jno
popa
mov
xchg
popa
mov
icebp
out
lods
into
out
sub
insl
xor
pop
adc
mov
mov
pop
paddd
es
fstl
into
les
ss
fmulp
repnz
addr16
push
xchg
cmp
aas
cmp
lcall
popf
xchg
adc
inc
je
das
push
xor
and
and
movsl
sbb
cmp
xor
mov
add
mov
mov
inc
or
push
push
dec
int
icebp
mov
inc
adc
scas
ljmp
mov
mov
cs
repz
jo
lods
loop
pushf
mov
or
leave
test
cli
add
mov
pop
test
pusha
getsec
jns
mov
jge
cmpsl
jb
ja
cwtl
jae
cwtl
addr16
and
rcrl
kmovw
add
aas
fisubrs
cltd
dec
cmp
aad
faddl
mov
mov
adc
cmpsl
xor
xchg
jle
pop
mov
insl
cmc
push
mov
fimull
adc
ss
call
jne
jne
adc
je
mov
jle,pt
push
sub
addr16
jmp
inc
cmp
sbb
mov
xchg
or
sbb
mov
lds
jle
into
pop
nop
mov
cmpsl
cmp
insl
fwait
cmp
adc
lock
aad
inc
push
push
sbb
and
negb
xchg
fmuls
repz
movsb
popf
inc
sub
enter
test
mov
lods
jne
cli
mov
push
xor
pop
mov
adc
cmp
ret
jnp
jo
shrb
fadd
arpl
adc
xor
in
mov
push
mov
sub
adc
jge
mov
popa
insl
xor
mov
lcall
push
jno
lret
inc
add
mov
js
adcb
xor
aam
inc
xchg
sub
xchg
push
ja
xchg
add
pop
fcoms
push
in
add
cmp
not
push
cmp
outsb
jae
xchg
sarl
push
int
pushl
and
mov
cwtl
xchg
push
pop
into
pop
jbe
jne
rcr
out
lret
xor
jbe
rolb
mov
loope
mov
jo
inc
lcall
loope
jl
hlt
or
sbb
inc
lahf
push
xchg
xchg
out
roll
cmpsb
xchg
and
lea
jg
subb
pusha
lahf
inc
ljmp
sub
adc
sub
sahf
or
xchg
ja
cwtl
shll
pop
push
mov
push
jb
loope
mov
in
mov
movsl
or
push
repnz
cmp
stos
jp
das
cmp
test
pop
sub
xchg
push
mov
dec
imul
jg
jg
fisubrs
es
iret
loopne
mov
int
out
xchg
add
ljmp
sub
dec
mov
repnz
movsb
cwtl
out
inc
jnp
in
addr16
mov
jge
scas
push
xchg
sub
mov
push
inc
push
jmp
outsb
jae
sbb
sbb
roll
mov
inc
sub
add
in
in
mov
popl
jbe
movsb
mov
mov
ds
lea
jae
inc
sub
cwtl
pop
jmp
lods
mov
pop
fmul
push
lcall
in
lds
loope
mov
gs
sbb
test
jmp
cmp
sbb
add
push
scas
dec
xchg
mov
test
ljmp
xchg
mov
dec
sbb
in
mov
aas
je
pop
ret
pop
negb
outsb
xchg
in
mov
mov
jae
add
mov
mov
mov
push
sbb
inc
aam
jle
lea
imul
jg
ja
into
push
push
jbe
std
mov
mov
dec
mov
das
loop
dec
imul
imul
inc
dec
xor
pushf
fwait
nop
mov
scas
movsl
sub
mov
dec
xor
clc
cmc
hlt
cmp
outsb
and
mov
insb
adc
inc
aam
adcb
push
ret
jb
add
mov
jbe
add
pop
jns
pop
in
sti
xor
movsl
je
mov
lahf
jg
sbb
mov
mov
sub
cmp
mov
idivl
push
pop
add
push
out
icebp
hlt
lods
loop
add
es
push
ret
iret
repz
cmpsb
hlt
repz
pop
daa
sub
aaa
pop
xchg
jge
xor
mov
mov
call
mov
lret
lret
push
cmp
repnz
sahf
jmp
and
xor
mov
pushf
mov
popf
iret
jb
rorb
cmp
daa
es
iret
in
pop
scas
lods
out
lret
xchg
scas
inc
ret
inc
or
add
push
icebp
sbb
scas
dec
dec
inc
pop
mov
add
roll
mov
test
imul
push
mov
pop
fld1
cmpsb
stc
xor
push
or
dec
je
pop
lea
adc
push
jno
inc
inc
insb
outsb
add
mov
bound
push
cmc
mov
out
cs
shll
xchg
jp
lahf
or
nop
sub
sbb
movsl
out
sbb
stc
das
lret
jg
jnp
mov
sbb
jl
push
xor
pop
in
vpmaxsw
in
push
movsl
rolb
inc
jne
jge
lret
outsb
cmp
rol
dec
imul
xchg
xchg
and
shr
imul
push
mov
mov
mov
cmp
cs
xor
pop
sahf
sub
xlat
dec
cmpb
mov
jmp
and
fstpt
insb
out
cwtl
shrb
data16
cmc
add
mov
insl
ror
push
in
sbb
bound
lcall
pushf
pop
xor
mov
push
push
fistps
test
mov
jbe
aam
dec
mov
mov
insl
or
push
mov
xor
orl
jne
inc
ffree
lods
jge
divl
jg
push
jl
or
ret
aam
cwtl
lret
mov
daa
inc
pop
cmp
xor
int
cs
js
ret
sbb
test
pop
push
je
into
mov
mul
test
xor
mov
fwait
scas
lea
xchg
lock
rcll
in
sbb
mov
data16
push
adc
jmp
cs
jnp
icebp
dec
into
adc
jge
test
pop
or
xor
adc
mov
jnp
outsl
xchg
or
jae
int
mov
dec
mov
das
insl
shr
jbe
imul
jle
addb
xor
push
inc
imul
jmp
or
aas
cmp
nop
push
jl
dec
stos
inc
jo
lret
and
rorb
dec
shrb
xor
div
aas
ss
mov
xchg
pop
les
imul
jo
mov
lahf
subl
stc
jmp
stos
mov
leave
dec
leave
mov
adc
xchg
cmp
xor
ret
cmp
xchg
jge
cmpsb
loope
cld
xor
mov
mov
sbb
bound
dec
gs
loop
ret
inc
sbb
cmp
xchg
out
mov
add
jmp
mov
dec
fs
pop
push
pusha
subb
aad
push
sti
das
inc
or
sahf
aam
pushf
jle
xlat
fucomip
sbb
cli
sub
insb
sbb
in
fisttpl
add
cltd
sbb
rorb
outsl
dec
push
ret
pop
xlat
inc
js
stc
and
arpl
iret
lret
xchg
jl
clc
sub
push
mov
cld
cmpsb
jno
cmp
dec
add
pop
int3
std
push
popl
out
imul
inc
jmp
cmp
lods
aam
fs
lds
stos
or
xchg
ret
jmp
jb
ret
es
fs
push
cmp
lcall
mov
adc
stos
icebp
pop
out
pop
nop
stos
cwtl
mov
pop
or
xchg
xchg
lds
je
jecxz
ret
call
jle
ja
cltd
adc
mov
dec
sbb
icebp
scas
push
cld
sahf
sbb
aam
pop
jbe
xor
dec
jns
aas
int3
adc
jle
dec
insb
or
jo
xchg
ja
leave
or
int
push
xchg
call
arpl
insl
pop
mov
adc
xor
jge
loopne
inc
jns
ja
cmpb
dec
pop
ja
sbb
nop
int3
add
lods
out
jns
clc
clc
fwait
xchg
je
lret
leave
jne
xchg
inc
pop
and
or
lock
push
sbb
pop
push
repz
adc
jbe
test
jno
lcall
push
push
inc
sub
out
add
sbb
xchg
pop
xchg
pushf
bound
pop
in
insl
or
aad
inc
mov
andl
adc
xchg
pop
scas
jae
out
scas
push
jecxz
in
add
or
outsl
shrl
xor
pusha
xchg
js
mov
jecxz
jb
leave
ja
fdivs
out
cwtl
or
out
and
lcall
mov
sub
mov
xchg
cmp
pop
mov
jbe
lahf
xchg
fsubrl
fsubrs
sbb
jo
or
cmp
adc
loopne
pop
mov
jle
pop
sub
cmpb
push
push
outsb
inc
out
sarl
insl
dec
repz
roll
cmp
idivl
les
fisubl
mov
add
xor
cmp
popf
push
je
jg
mov
aad
loope
jle
mov
les
jae
pop
stc
cmp
or
loop
dec
dec
adc
fyl2xp1
xlat
jmp
rol
dec
adcb
sub
lea
xor
cltd
push
sbb
ret
lret
fmulp
in
sahf
cmp
es
rcrl
cmp
and
dec
data16
sahf
pop
ds
divb
sbb
enter
or
sub
xlat
jae
dec
mov
adc
das
jbe
into
adc
and
loope
insb
addr16
inc
lcall
negb
mov
mov
cmp
mov
lods
out
sbb
lret
outsl
mov
inc
fcompl
sub
push
fcomps
adc
lret
filds
inc
jno
stos
inc
sub
jp
gs
fimull
les
mov
pop
filds
add
pushw
mov
sbb
jno
lds
ficoms
gs
sub
movsl
fiadds
or
pushf
pop
jno
cs
jg
mov
nop
pop
xlat
mov
loop
sbb
xchg
mov
lds
sub
jo
mov
xlat
inc
gs
popa
lret
mov
cli
sarb
loopne
fs
pusha
pushf
or
push
jno
loopne
popa
sub
and
je
mov
or
rcrb
std
repnz
mov
push
lret
pop
or
mov
sbb
cmp
inc
mov
cltd
fwait
int3
xchg
jecxz
imul
lret
arpl
inc
loopne
fcomi
dec
divl
aam
and
cmc
int
jae
loopw
inc
and
cmp
das
pusha
sbb
je
mov
insl
loopne
adc
cmp
add
fs
ret
shr
sbb
pushl
bound
fsubp
imul
shl
xchg
movsl
mov
scas
arpl
or
xchg
mov
mov
push
or
inc
mull
cmp
mov
rclb
shl
cld
push
das
int
ret
inc
clc
pop
pop
pop
mov
sbb
lahf
adc
in
sub
enter
sub
adc
mov
setns
pop
cmpb
or
or
jge
notl
xchg
cmp
sub
cmpsl
cmp
bound
sub
cmpsb
lahf
fdivp
test
push
insl
dec
popf
scas
xor
in
insb
sarb
movsb
inc
pop
test
xchg
repnz
rorb
jg
push
jp
inc
lock
imulb
mov
mov
mov
cmp
pop
lods
data16
stos
int3
addr16
adc
push
inc
test
pop
pop
inc
js
sub
repnz
arpl
adc
ss
test
or
mov
imul
pusha
xchg
lds
dec
movsb
sbb
mov
xlat
sbb
push
inc
cli
jl
push
cltd
popf
push
mov
test
cmp
lret
hlt
jecxz
pop
adc
xchg
push
les
pop
mov
scas
popf
in
in
inc
jg
xlat
movsl
imul
out
je
aaa
aas
in
dec
lea
test
push
mov
ljmp
add
mov
xchg
or
call
sub
cs
xchg
iret
insb
sub
mov
aad
outsl
jl
int3
mov
jne
imul
pop
loope
movsl
dec
dec
jecxz
test
rcr
test
js
fbstp
jns
fldenv
clc
pusha
pop
mov
mov
mov
sbbl
pop
nop
add
dec
pop
outsb
sub
mov
loop
jecxz
mov
adc
bound
mov
xchg
pop
dec
jmp
mov
pop
xchg
ret
xor
pop
dec
fwait
nop
push
mov
hlt
idivb
imul
adc
inc
push
and
cmc
repnz
dec
fidivl
popf
lods
fcmovne
mov
dec
adc
int
ja
das
dec
stos
or
test
add
movsb
inc
dec
lock
mov
mov
pop
imul
xor
lods
in
mov
fistl
fs
bound
mov
jne
stc
idiv
ret
lock
loope
xchg
jnp
rcrb
jae
xor
sar
jle
and
aad
pop
shll
ds
jae
popa
mov
dec
sub
cli
sbb
stos
and
jbe
cmp
outsb
xchg
push
bnd
xchg
jg
push
loop
jle
addr16
push
lods
stos
addr16
inc
fs
call
jle
bound
cmp
popa
inc
gs
xor
lea
mov
xor
adc
push
and
in
mov
sbb
out
js
movsb
pop
mov
jb
sbb
in
xor
dec
add
pop
outsb
sub
mov
into
fistl
movsl
les
mov
jo
push
push
pop
adc
inc
das
add
xor
lods
into
lea
loope
and
and
scas
jge
push
add
rcrb
mov
fnsave
nop
xor
or
push
fcoml
cmc
mov
aad
or
inc
sbb
lea
aam
call
mov
into
loop
aam
push
out
add
xor
loope
xor
bound
add
gs
sbb
test
dec
adc
lds
mov
ljmp
xor
rcl
ficoms
in
cmp
mov
movl
jg
idivl
outsl
sub
push
fwait
inc
add
lea
cmc
mov
and
lods
lcall
push
add
sti
sbb
fwait
inc
sbb
mov
mov
aas
sbb
lret
jns
dec
inc
sbb
test
or
adcb
lret
and
repz
fs
ret
xlat
inc
outsb
loope
xor
mov
adc
mov
jl
xlat
loopne
cmp
inc
cmp
adc
and
fdivrl
cmp
movsl
pop
loopne
mov
insl
mov
inc
push
aaa
jmp
pop
xor
aad
dec
dec
enter
in
xchg
stos
out
inc
pop
jnp
cwtl
cmpsl
subl
sbb
pop
push
mov
scas
mov
xchg
sbbl
orl
pop
mov
aad
lahf
push
hlt
shrb
cld
sub
adc
pop
jmp
jecxz
aam
outsb
stos
in
pop
fcmovb
cld
lock
jg
cmpsb
fildl
mov
mov
movsl
mov
push
les
cmp
inc
push
jae
stos
sub
aaa
sbb
stc
mov
sbb
loopne
sbb
and
out
push
dec
rcr
testl
jbe
and
adc
outsb
cli
addl
shl
sti
xchg
dec
dec
jmp
cmp
push
cmp
loopne
and
push
add
ja
push
xor
mov
adc
ret
add
jp
das
inc
mov
cs
rorb
inc
and
dec
sub
inc
push
and
sub
mov
das
test
xor
cmp
icebp
mov
pop
pop
adc
sub
das
mov
mov
sti
leave
adc
sub
jo
scas
out
pop
ret
jb
repnz
mov
in
sub
outsl
or
sti
cli
pop
mov
jns
pop
adc
inc
scas
dec
mov
insl
fnsave
push
lret
and
dec
inc
adc
push
add
mov
decl
add
ret
and
pop
mov
dec
xchg
jne
sub
fs
inc
js
fwait
ss
lea
add
dec
bound
rcrl
repz
icebp
aad
pop
push
rcll
out
xchg
push
out
pop
movsl
xchg
mov
icebp
adc
cmc
in
aas
int
bound
int
dec
loop
xchg
popa
ljmp
pushf
push
std
adc
pop
iret
pop
jl
jp
mov
mov
stc
loope
cmp
cmp
ds
xchg
scas
xor
push
stos
fmuls
sub
xlat
xor
sub
mov
mov
push
sub
mov
jl
icebp
sbbl
dec
negb
dec
outsb
fidivs
dec
lock
pop
add
insl
inc
clc
inc
dec
push
add
jo
ret
cmp
stos
adc
sub
inc
inc
pop
mov
mov
push
inc
jmp
loop
bsr
mov
or
fsubr
fcomps
das
push
icebp
flds
pop
imul
subl
int3
mov
and
lods
xor
jecxz
cmpl
enter
xor
sub
scas
sub
push
lret
or
dec
push
push
sbb
scas
xor
insl
cs
sbb
and
imul
push
test
or
jae
or
repz
xchg
xlat
push
scas
loop
or
xchg
fsub
xchg
xchg
test
jne
xchg
mov
lock
inc
xor
add
fistpll
mov
add
add
jb
inc
sahf
scas
les
mov
out
ja
and
and
adc
mov
push
test
xchg
aam
es
addr16
dec
jle
loopne
and
inc
jmp
mov
adc
insl
mov
loop
sub
mov
into
mov
out
adc
out
test
add
sbbb
ja
es
ret
popa
and
push
mul
stos
fstpt
push
mov
fcomps
mov
repnz
test
cmc
mov
scas
ret
jmp
test
mov
popf
in
sbbb
mov
mov
ret
xor
push
gs
cs
ret
jno
and
lret
inc
sbb
subw
pshufw
inc
push
repz
mov
push
jo
mov
adc
movsl
xchg
jbe
scas
xor
pusha
jo
arpl
fidivrl
sub
leave
jecxz
pop
nop
insl
jmp
mov
nop
and
add
jb
test
std
inc
cmpsl
sub
sbb
fcomi
insb
pushf
jl
jbe
pusha
lds
addr16
dec
inc
test
out
loop
mov
loop
lods
repz
xchg
movsb
pop
mov
pusha
jle
xchg
out
fsubrs
dec
push
fs
mov
mov
mov
sub
fs
mov
insb
orb
dec
pop
pop
push
sub
push
xor
fwait
sub
or
test
lret
bound
iret
pop
outsl
lret
mov
repnz
cs
cmp
xor
adc
test
sub
cmp
lock
jo
pushf
in
hlt
repz
lahf
push
mov
imul
mov
mov
fisttpl
fstpt
push
lea
lea
ss
mov
mov
inc
adc
inc
cmp
fcomps
movsl
int
cmp
sbbb
jecxz
int
adc
push
ja
ljmp
lods
mov
push
pop
adc
sub
lods
add
jg
rorl
push
or
fsubrs
out
or
clc
pop
mov
dec
sbb
and
cmp
xor
imull
mov
cmp
sarl
test
enter
sub
imul
mov
arpl
repnz
rcrl
mov
sub
loop
xlat
imul
adc
xor
jmp
mov
in
add
call
pushf
push
pop
insl
mov
xor
lods
cmp
test
push
test
insb
or
mov
rorl
js
mov
mov
and
jb
mov
roll
adc
dec
into
mov
pop
cmp
mul
push
pop
addr16
fcomps
hlt
imul
cmpsl
inc
sbb
cltd
fdiv
mov
jnp
int
push
ja
add
stc
and
pop
out
das
lret
jl
fs
and
jmp
sub
inc
popa
testl
push
popf
pop
sub
cs
fcmovnu
mov
sub
mov
inc
testb
in
jp
cmp
mov
mov
and
andb
xchg
mov
cmp
bound
push
and
popf
movsb
mov
les
mov
sbb
es
push
sbb
mov
enter
pop
std
cli
add
in
shll
sbb
cmp
pop
enter
fsubr
dec
dec
and
enter
jnp
dec
jae
fsts
jo
cmpb
or
dec
iret
mov
lds
fisubs
xor
cmp
mov
cmp
test
ljmp
mov
mov
xor
adcl
addb
loope
fsubp
outsl
scas
inc
out
pop
jl
sub
fsubr
or
lds
jo
pop
xchg
bnd
and
test
inc
ljmp
popf
gs
aad
mov
in
fwait
ss
popa
mov
loopne
imul
dec
pop
cwtl
cwtl
mov
adc
pop
popa
imul
psubw
lcall
mov
or
dec
push
shll
scas
test
and
std
out
pop
call
xchg
mov
outsb
jl
push
lcall
mov
repnz
popa
mov
cmp
mov
shl
mov
adc
mov
out
xor
push
mov
cld
ret
lds
aam
or
xlat
mov
jp
pop
jl
popa
xchg
mov
dec
loop
sarl
ljmp
fisubrl
mov
mov
call
pushf
cmp
cmpsb
mov
es
pop
frstor
cmp
push
xchg
and
hlt
std
std
sbb
daa
lret
rcr
cmp
insl
sub
imul
push
hlt
incb
iret
add
test
das
sbb
cmpsl
xlat
xchg
movsl
dec
xchg
and
cmp
lods
dec
jp
icebp
pop
cwtl
stc
and
pushf
sahf
test
adc
ret
aam
sbb
mov
mov
imul
push
mov
in
hlt
mov
clc
dec
loop
int
pop
pop
insb
cltd
aad
inc
push
repz
fcoms
cmp
push
pop
mov
out
ss
outsl
sarb
mov
cmp
mov
push
push
cmp
mov
cmp
dec
mov
enter
sbb
xor
sbbb
dec
dec
stos
addr16
xor
repnz
pusha
imul
sub
test
dec
cmp
sbb
sub
in
out
bound
push
jns
sub
and
call
iret
aam
sbb
jne
out
and
test
sub
or
scas
mov
insb
sub
jne
push
inc
fildl
ficoms
mov
xlat
loop
push
lock
sub
or
mov
add
adc
inc
enter
out
inc
stos
lds
iret
mov
shl
jge
cwtl
xor
inc
push
pop
aam
imul
adc
dec
mov
mov
jns
xor
out
int3
lret
adc
pop
push
dec
pop
cwtl
or
stos
les
mov
loope
xchg
aas
out
and
and
loope
push
icebp
xchg
jmp
test
add
and
rcrb
out
stos
xchg
push
test
mov
call
xchg
into
adc
and
aam
jbe
adc
and
cmpsl
jbe
push
ret
jbe
pusha
mov
imul
fsubrp
xchg
fisubl
pusha
pop
lahf
sahf
jp
jno
mull
aam
mov
dec
out
clc
sub
mov
enter
loope
push
pusha
sub
inc
adc
int3
pop
stos
mov
repz
push
jp
adc
sub
jo
mov
adc
cmp
push
mov
imul
jbe
adcl
pusha
repnz
iret
shlb
faddl
push
mov
xchg
jl
or
jae
xchg
mov
mov
mov
sub
jecxz
ret
add
add
loop
out
xlat
push
sarl
fisttps
xchg
jo
jae
sbb
test
and
aam
testb
push
push
mov
xchg
ret
js
lret
dec
ds
fwait
imul
pusha
movsb
cwtl
pop
add
push
cmp
mov
cmp
xchg
lds
addr16
je
mov
sbb
jae
stc
iret
add
xchg
test
jge
sub
pop
stos
dec
insl
adc
inc
mov
clc
out
add
or
or
adc
xlat
lock
xchg
and
mov
sbb
xchg
sbb
ret
pop
push
pop
test
out
jmp
into
icebp
sub
jno
jmp
fisubs
jg
lcall
aas
call
mov
cmc
mov
and
jne
xchg
push
jns
aam
out
sbb
jg
icebp
pop
shll
xor
cmp
xchg
and
test
jmp
dec
pop
cs
fiadds
call
xchg
lock
aam
sbb
add
fwait
pop
jae
js
dec
mov
enter
mov
pop
cld
mov
mov
into
gs
sub
cmp
cmp
iret
pop
or
dec
movsb
jnp
sbb
aaa
adc
pop
rcrb
inc
sti
insb
mov
lret
pop
mov
sti
sbb
loop
adc
repz
stc
add
pop
mov
and
mov
bnd
fdivrs
test
mov
add
jae
jp
pusha
mov
push
outsb
stos
cmp
and
in
mov
sbbb
sti
dec
xor
mov
dec
shr
cltd
scas
cwtl
jae
push
sahf
int
test
mov
pop
add
push
ret
or
cmp
roll
xchg
int3
push
imul
clc
inc
imul
jl
mov
xchg
jle
mov
outsl
clc
mov
mov
inc
push
jo
fucomip
xchg
inc
xchg
out
mov
orb
pop
push
pop
sbb
dec
lds
js
in
insl
pop
mov
mov
rorl
leave
jg
clc
mov
jo
in
shlb
inc
mov
inc
lcall
popf
cmp
test
mov
imul
jge
stos
sub
jmp
mov
jnp
cld
and
arpl
jecxz
dec
imul
clc
dec
or
cmp
adc
dec
jno
in
jle
pop
mov
insl
out
insb
push
out
dec
and
jp
aas
cmp
pop
ljmp
pop
cwtl
xor
aaa
cmp
jle
pop
xor
iret
out
outsb
dec
mov
mov
lcall
xchg
stc
test
pop
gs
mov
fs
jmp
iret
popl
mov
adc
lds
mov
xor
les
xchg
pop
stc
add
adc
outsl
adc
loop
fiadds
out
inc
pop
dec
xchg
scas
pop
aaa
xlat
xchg
sbb
inc
notl
push
pop
inc
mov
idivb
ljmp
jle
mov
sbb
pushf
xor
mov
dec
mov
xor
sbb
repz
rcll
pop
pop
fcomi
adc
pop
cmp
xor
mov
push
jnp
xlat
pushf
mov
aam
push
add
jne
adc
adc
dec
mov
dec
sub
sti
mov
fidivrs
pop
cmp
in
cmp
mov
js
jns
lret
ja
nop
orl
mov
imul
mov
pop
iret
lods
jle
imul
cwtl
adc
dec
aam
and
push
sub
rol
and
mov
lea
mov
loop
lret
inc
jne
pop
and
shr
xor
inc
imul
cld
jmp
dec
push
sub
imulb
daa
adc
mov
jg
xor
or
xchg
sbb
and
lcall
jmp
sub
addb
addl
mov
lock
mov
pop
out
dec
xchg
lods
imull
adc
cmc
loopne
dec
jnp
add
sub
jbe
leave
ret
or
and
jecxz
push
stos
mov
fstpl
stos
push
sbb
inc
adc
insl
leave
xor
push
mov
lcall
jp
dec
or
fsts
lods
dec
pop
gs
dec
lret
aam
lahf
sarb
mov
pop
inc
daa
mov
dec
pop
negb
aam
out
enter
stc
cmpsl
out
testl
mov
pop
data16
je
rolb
pop
sub
lds
sub
push
test
pop
imul
fistpl
out
sti
mov
cltd
mov
xorl
out
cltd
add
clc
cmp
or
fstpl
mov
cltd
rclb
mov
aad
jmp
push
push
ret
adc
cmpb
jae
add
out
lods
arpl
daa
push
addr16
orb
xchg
cmc
fidivrs
inc
jb
loopne
sbb
pop
dec
nop
xor
out
ret
pop
xchg
add
xlat
mov
push
cmp
cmpsl
sti
sub
clc
mov
or
cmp
xchg
push
ja
adc
arpl
push
or
stos
mov
es
outsl
sbb
mov
mov
jle
cld
lret
adc
push
xlat
push
and
push
cmc
mov
xor
push
mov
fistl
inc
loop
in
aas
sti
fisubrs
jnp
std
pop
inc
nop
jecxz
aaa
out
loope
mov
outsb
fdivrl
in
mov
bound
mov
xchg
push
mov
inc
dec
pop
les
add
cmp
in
jo
sbb
jmp
cmpsl
xchg
into
add
fidivs
add
inc
inc
jmp
out
sbb
xchg
mov
push
inc
inc
das
into
or
je
adc
push
xchg
bound
jp
inc
outsb
xchg
ret
mov
fnstenv
mov
js
scas
and
shrb
fnstcw
add
movsl
int3
or
mov
sub
jge
movsb
add
test
inc
dec
mov
popa
iret
cs
pop
ret
add
mov
loop
and
movsl
jmp
test
cld
popf
aad
aam
jp
test
ja
mov
mov
or
ficompl
jnp
out
idivb
sub
cltd
mov
sahf
inc
sbb
mov
adc
xchg
mov
xor
icebp
push
addl
push
roll
lds
sti
rorl
sub
mov
add
dec
pop
shll
jnp
dec
adc
mov
xchg
lods
rorl
fidivrl
fst
ret
pushf
pmaxub
loopne
sahf
mov
cmc
or
ja
mov
add
lahf
js
xchg
call
sbb
push
gs
std
xchg
sub
scas
ja
cli
push
outsb
or
xor
shlb
imul
mov
je
out
cmp
aam
ja
imul
mov
xchg
sub
xchg
sahf
lret
adc
imul
es
or
mov
jne
jecxz
lods
ja
push
imul
jns
repz
pop
shl
fstl
test
lods
fldl
inc
mov
pop
test
dec
nop
mov
xchg
adc
fucomip
jbe
insb
mov
hlt
test
fldcw
mov
sub
mov
rcr
jge
out
xor
in
or
mov
inc
pop
test
ljmp
dec
jae
pop
cld
pop
aas
push
sub
xrelease
inc
jb
movsl
outsb
jo
or
push
push
ja
mov
mov
xchg
jno
mov
fxch
fwait
cmpsb
jae
vmread
test
mov
xchg
ds
mov
imul
ror
pop
xor
loopne
or
sub
sbb
hlt
xchg
ret
fs
sub
cmp
ffreep
stc
sbb
pop
mov
inc
out
push
ljmp
cs
mov
lock
sarb
es
pop
mov
jmp
xor
or
mov
jb
mov
inc
adc
add
or
cmp
adc
test
push
out
dec
ret
insl
jecxz
pop
jecxz
in
fwait
dec
in
sbbl
adc
inc
mov
dec
cwtl
inc
mov
lahf
dec
out
sub
xor
cltd
sbb
sbb
ja
mov
xor
pop
xchg
insl
jge
and
iret
lcall
sahf
aad
mov
cmp
pusha
mov
in
aad
add
mov
rorb
cmp
test
cs
mov
and
jnp
pop
push
shl
push
and
rorb
jl
or
icebp
rcl
jne
add
fs
jne
jle
jb
mov
xchg
push
jb
xchg
sbb
ja
faddp
hlt
sbb
pop
mov
pusha
ja
loope
sbb
shll
xchg
jl
jbe
pop
sbb
or
cmpl
jnp
push
lret
lahf
scas
pop
rorb
adc
jno,pn
jecxz
cltd
cmp
ficoms
cs
cmp
pop
rcll
dec
jp
jnp
cmp
mov
dec
jecxz
mov
xor
or
mov
cs
lods
jb
push
negb
icebp
dec
and
fnstenv
xor
out
push
jge
mov
stc
stc
inc
mov
rol
adc
fnstcw
jb
and
aas
rcll
ja
xorl
xor
out
lea
cmp
stos
shll
mov
sbb
push
cmpsl
jecxz
in
cmp
jp
subb
xorl
mov
in
sar
ret
fstps
xor
inc
jp
xchg
sahf
ret
fimuls
pop
xor
mov
adc
dec
push
sbb
push
push
adc
jb
lahf
or
aas
add
stos
push
push
xorl
out
das
dec
adc
testl
int
mov
add
mov
sahf
lods
xchg
aaa
pop
pop
add
sarb
in
mov
pop
lds
mov
jb
hlt
mov
and
adc
mov
loopne
pop
adc
pop
faddl
rcrl
push
out
mov
mov
dec
call
inc
lret
xchg
scas
lods
add
jne
adcb
or
sti
pop
imul
mov
jo
mov
out
test
lea
mov
cmpsl
insb
mov
push
jb
loopne
stc
dec
jge
aad
lret
nop
cmp
loop
or
and
out
testl
cmp
ss
sbb
lret
lods
and
lods
dec
mov
cmova
sbb
jp
push
xor
push
inc
cli
xor
mov
mov
and
gs
adc
xor
jecxz
loop
out
pushf
addr16
test
lret
fwait
mov
push
mov
test
push
sub
cmp
sub
jmp
add
dec
pusha
das
xchg
stc
shl
out
xchg
fsubrl
rclb
push
lret
pop
cli
sub
out
xchg
fcmovu
aaa
into
cli
add
inc
xor
in
dec
icebp
adc
jecxz
sbb
adc
loop
fwait
add
cmp
fmul
mov
aaa
and
mov
jb
jmp
sub
dec
scas
vandnps
ss
aaa
fwait
xor
pusha
testb
sahf
out
pop
sbb
xorb
or
mov
pop
clc
pop
pop
and
idiv
dec
stc
sbb
js
jmp
sub
mov
or
jmp
cmpsb
popa
jbe
dec
mov
fsubrl
jge
xor
inc
cmp
test
cmp
dec
hlt
dec
lock
adc
or
mov
cmp
and
in
and
std
roll
jne
sbb
es
xor
imul
je
inc
loopne
aas
test
adc
pushl
pop
popf
int3
add
adc
rcrb
sbb
lea
in
call
push
mov
xlat
sbb
cmpsb
lret
in
imulb
dec
out
stos
cmp
jecxz
outsb
icebp
in
xchg
mov
jnp
mov
mov
jae
fdivrl
pop
push
test
and
mov
addl
dec
dec
lret
loopne
cmpsb
push
adc
call
inc
loop
mov
inc
inc
test
scas
sarl
pop
adc
pop
cli
or
push
inc
dec
or
push
mov
jmp
or
inc
mov
dec
jbe
mov
adc
test
cmpsb
out
out
fldt
shl
shlb
dec
dec
cmp
xorl
xor
mov
repnz
in
pop
call
scas
std
pop
mov
jne
loop
mov
push
aas
int
ljmp
inc
icebp
xchg
adcl
cmp
in
test
les
imul
jns
adc
into
jne
sub
imulb
sub
adc
mov
pop
hlt
popf
pop
sbb
inc
outsl
sbb
cmpb
aas
jo
icebp
movsl
sbb
xlat
cmp
nop
mov
dec
inc
movsb
mov
emms
jo
int
dec
leave
popf
imul
mov
loope
movsl
push
insb
push
jno
sbb
inc
call
flds
mov
fdiv
hlt
or
popa
pop
cld
lods
pop
jno
dec
mull
or
fmuls
cmp
cltd
out
mov
pop
mov
cmp
popa
stc
xor
or
or
cld
push
loop
xor
cmp
mov
push
ds
movsb
push
scas
mov
int
inc
dec
adc
loopne
pushf
adc
pop
imul
nop
xchg
sbb
pop
push
sub
popf
andb
push
xchg
mov
push
leave
cmp
sub
jo
lock
or
or
cmp
inc
ficompl
or
dec
stos
push
push
lods
push
cmp
adc
ret
shlb
lock
lcall
cmp
sbb
sbb
or
add
leave
movl
xchg
leave
lods
mov
mov
dec
and
mov
int3
cmp
fsubr
popa
cmp
ja
popa
xlat
mov
insl
pop
push
xor
push
xchg
cld
inc
xchg
imul
mov
loope
mov
adc
dec
stos
lds
push
popf
adc
scas
adc
xchg
dec
filds
or
add
movsl
xchg
add
rcl
xor
cmp
enter
sub
mov
push
std
aam
into
fadds
ret
imul
sbb
leave
test
cmp
addr16
mov
fwait
lcall
popa
repnz
jmp
inc
mov
dec
sub
xchg
enter
push
js
push
sub
fcmovnu
movsl
cmc
sarb
and
ss
or
pop
faddl
out
pop
cwtl
or
cmp
mov
mov
xchg
mov
jb
push
inc
pop
mov
bound
scas
psrld
dec
out
lods
push
cmpsl
mov
dec
pop
stos
jbe
jno
clc
or
mov
testb
xchg
push
dec
mov
shrb
inc
sti
mov
adc
mov
or
jmp
xchg
cmp
cmp
mov
insb
jbe
adc
pop
dec
hlt
mov
lock
repz
jno
aas
lea
push
aad
adc
push
clc
add
push
add
jb
dec
loop
jmp
lahf
sub
dec
rcrl
dec
push
fisttpll
jmp
scas
out
fucomip
out
push
out
mov
cli
insb
aam
add
adc
inc
out
xor
stos
or
jno
subl
mov
mov
xor
lods
xchg
xchg
out
insb
mov
loop
push
insb
aad
mov
orb
jp
gs
jbe
mov
int
add
movsb
frstor
fcomps
mov
repnz
push
fs
mov
sahf
xchg
push
jae
mov
inc
sti
mov
arpl
xlat
fsub
mov
or
lret
dec
imul
sbb
and
bound
push
inc
sbb
dec
sub
jmp
leave
jbe
xor
mov
mov
movsb
cmpsb
fidivl
fildl
jp
inc
test
inc
cmp
xchg
pushf
aaa
push
fbld
lret
mov
inc
add
sub
sub
mov
das
test
sub
imul
popa
repz
icebp
jbe
pop
lret
testb
mov
mov
hlt
pop
jge
js
or
cmp
xor
scas
pusha
push
dec
xor
adc
mov
js
push
stos
dec
mov
pop
rcr
lock
push
lods
test
pop
sti
push
adc
xchg
nop
push
push
sbb
int
jnp
xchg
lods
mov
shr
dec
jno
call
cli
adc
mov
and
mov
add
inc
mov
lods
dec
pop
jne
ss
adc
ja
out
dec
push
add
push
outsl
iret
hlt
std
push
hlt
inc
add
mov
fnstenv
xor
into
mov
fildl
cmpsb
add
aaa
pop
and
xlat
in
push
mov
call
cltd
pop
aad
movsb
jmp
cmpsb
movntps
sub
mov
sub
xor
decb
lret
dec
mov
call
and
fcomps
sti
xor
aaa
dec
and
rclb
repz
daa
sub
insl
sahf
mov
out
cwtl
lret
fcmovne
mov
dec
xchg
add
cmp
xchg
push
scas
cmp
cld
nop
out
ficoms
lret
mov
aas
pop
dec
inc
sub
bound
pop
js
mov
call
push
scas
jae
daa
mov
fdivl
mov
arpl
push
jae
insl
pop
dec
jo
xchg
movsl
and
xor
insb
fdivr
sub
stc
lahf
push
mov
sbb
inc
inc
jle
jnp
pop
mov
idivb
jae
lret
inc
mov
dec
and
cmpsb
call
std
aas
pop
push
bound
xor
and
lea
aam
not
dec
rolb
enter
shll
and
jle
jg
mov
or
mov
jecxz
or
or
cmpb
or
in
inc
xchg
pop
sub
pop
aad
lea
jb
repnz
push
xchg
push
mov
lods
sahf
adc
jg
insl
test
push
mov
adc
push
sti
sahf
loop
sbb
sub
jno
xchg
push
sub
lods
dec
sub
adc
sub
movsl
adc
insb
jg
adc
mov
popa
dec
inc
pushf
out
pop
xor
xor
test
fdiv
ffreep
pop
test
add
and
lock
mov
mov
sbb
xchg
addr16
out
mov
push
add
jle
cs
push
sbb
jnp
cmp
pop
cmp
mov
mov
xor
mov
sbb
sbbb
pop
jp
cs
scas
cmp
xor
inc
xchg
adcl
jb
shlb
cmc
in
pop
nop
mov
lds
jo,pt
jp
fidivs
rorb
loop
subb
pop
insb
out
mov
aad
fdivs
or
mov
mov
aad
mov
mov
jmp
mov
mov
push
es
or
arpl
push
enter
pop
fmuls
xor
and
lods
test
push
jmp
call
cmp
sub
into
into
and
cltd
aam
pop
ret
pusha
outsb
sub
test
mov
pusha
push
mov
push
dec
mov
inc
out
mov
fimull
stos
gs
adc
or
cltd
lea
jne
outsb
mov
mov
add
repz
pop
and
scas
scas
dec
dec
pop
mov
inc
adc
pop
cmp
cmp
pop
xchg
inc
rcrb
faddl
lods
xchg
adc
int3
hlt
lods
add
pop
fcoms
test
std
xor
dec
push
fimuls
testb
xchg
pop
mov
push
adc
fs
or
jecxz
jl
cmpsb
jl
mov
jmp
loopne
jne
jle
lods
or
add
es
into
adc
xor
into
sbb
cmp
movsb
cmp
jne
mov
xchg
out
pop
pop
ret
xor
bnd
arpl
adcb
loop
mov
shlb
push
test
fadd
sbb
fimull
jg
and
and
cmp
stc
add
in
jne
add
nop
jp
add
in
dec
sarl
pop
out
roll
xor
in
jns
cltd
stc
es
pushf
pop
pop
lods
call
and
or
stos
cmpsb
int
rorb
xor
push
es
dec
adc
addb
sub
imulb
in
repz
adc
aam
fwait
in
lcall
adc
adc
roll
bound
jo
aad
cmp
aad
jmp
fcompl
push
sub
sbb
xor
dec
sub
xchg
sub
push
ffree
mov
inc
fsts
and
addr16
push
xlat
mov
mov
cmp
repz
or
xor
je
jne
fsubrl
dec
xor
call
fstpt
stos
outsl
fwait
xchg
stos
ljmp
orb
dec
push
fsubs
adc
push
and
inc
dec
sub
cs
lds
or
adc
int3
outsl
add
push
rorb
gs
mov
cmpsl
inc
sbb
xor
jns
and
mov
sub
data16
sbbb
xchg
inc
pop
lock
inc
sub
insl
repnz
sbbl
inc
test
inc
js
lea
fdivrs
mov
xor
xchg
and
bound
cmpb
jge
jecxz
hlt
pop
sub
inc
add
mov
sbb
incb
popf
lret
filds
xchg
gs
fucom
and
sbb
jmp
int
and
add
cmp
cmp
addr16
adc
mov
and
sbb
jge,pn
in
enter
xchg
dec
cmp
jno
fbstp
mov
cld
andb
sub
adc
mov
pop
mov
enter
adc
loopne
roll
push
dec
fimull
push
push
insl
pop
add
cmp
leave
shrl
and
pop
and
push
and
jns
out
mov
jo
jge
pop
mov
xchg
fwait
loope
push
out
insb
decl
jno
jecxz
test
test
or
mov
pop
pop
arpl
push
in
or
jbe
pop
outsb
pop
popa
out
iret
dec
mov
pushf
mov
in
lret
push
mov
movsb
scas
push
enter
aaa
xchg
add
push
sti
cmpsb
mov
in
jle
lret
pop
mov
je
mov
add
sbb
mov
rclb
mov
lret
es
fsubrl
in
mov
orl
mov
fildll
jb
or
or
inc
pop
sbb
dec
cltd
rcrl
sub
and
xlat
test
push
add
jmp
jmp
in
imul
imul
or
xchg
ljmp
out
pop
jmp
jmp
cmp
fcoms
jae
fs
jno
xchg
fsub
jge
pop
mov
pop
aad
sti
pop
cmc
fwait
mov
and
push
in
cld
lret
inc
or
add
sub
fdivrp
mov
popf
adc
sub
stos
rorb
lea
dec
jb
dec
jae
jle
push
repnz
push
xor
mov
imul
stos
sub
sbb
into
and
sbbl
dec
icebp
mov
lahf
fimull
ret
push
fsubl
into
jbe
out
sub
mov
xchg
ss
or
xchg
pushf
sub
xor
inc
stos
lcall
xchg
pusha
mov
xor
xor
lret
pop
sub
inc
lret
lock
cli
js
cli
ret
sbb
or
lret
push
imul
loopne
ds
push
xchg
dec
push
gs
jb
int
scas
hlt
and
mul
add
and
shll
push
push
or
outsl
mov
ret
bound
lret
bound
jecxz
sahf
out
es
push
sbb
mov
sbb
in
test
jbe
pop
mov
sub
scas
incl
mov
outsb
mov
push
adc
lcall
push
fidivrs
xchg
enter
out
sub
sbb
jno
cmp
push
mov
pop
addr16
push
and
aas
loop
mov
lock
lret
sub
sar
xor
jo
pop
adc
and
mov
ss
shrb
pop
nop
ja
popa
ljmp
pop
jecxz
add
es
loopne
pop
iret
xchg
adc
xor
out
push
dec
arpl
mov
rclb
ret
or
aas
shlb
push
es
push
mov
jg
pop
jmp
adc
push
rorl
imul
inc
clc
sahf
sbb
pop
jne
test
es
mov
adc
cli
cmp
inc
pop
jae
stos
dec
push
and
arpl
lcall
scas
cmp
sbb
mov
pusha
jp
cmp
xchg
mov
mov
leave
test
adc
andb
mov
adc
cwtl
inc
cmc
sub
jbe
movsl
shr
inc
mull
out
and
mov
pop
push
repz
ds
cmp
sbb
aam
imul
cltd
daa
dec
movsb
or
push
ret
stos
adc
fwait
lods
popa
xor
cmp
pop
or
mov
mov
in
xor
pop
dec
les
mov
pop
sub
sahf
aad
sbb
mov
dec
into
push
add
push
pop
ficoml
jbe
xor
or
push
cmpsb
mov
jecxz
hlt
cmp
add
sar
dec
xchg
ljmp
movsb
pop
leave
jl
repnz
insb
clc
data16
jmp
mov
xchg
push
push
mov
push
adc
mov
xchg
ljmp
test
repnz
mov
mov
jmp
rcrl
fists
cmp
mov
cmp
xlat
sbbb
push
xor
sti
rcl
xchg
and
or
or
push
xchg
jl
sub
sub
xor
stos
push
or
or
mov
jecxz
cltd
pusha
push
adc
pusha
cli
int
inc
bound
sbb
sbb
sub
mov
lcall
mov
jge
push
lret
mov
loopne
loopne
ja
leave
xchg
sbb
sub
push
icebp
push
daa
insl
mull
mov
xor
xchg
push
daa
insb
and
fildl
pushf
pop
and
dec
inc
nop
or
icebp
aaa
push
leave
or
adc
scas
cld
je
andl
xchg
into
clc
mov
push
sbb
sbb
jno
jb
mov
mov
sbb
cmp
sti
push
push
mov
andl
mov
xor
lret
add
cld
fnsave
pop
aas
lods
jp
stos
arpl
xor
adc
mov
mov
add
add
xor
sahf
cvttps2pi
in
adc
mov
adc
cli
sub
mov
jno
int3
dec
mov
ja
and
adc
mov
cmp
adc
fisttps
mov
xchg
adc
pop
in
dec
mov
sub
push
loope
out
jecxz
lret
xchg
ret
add
mov
sub
pop
movsb
xchg
xchg
push
scas
add
sti
mov
ss
in
in
adc
and
jne
lods
dec
jg
adc
inc
push
aam
mov
std
add
pop
pop
hlt
hlt
sbb
add
jo
je
mov
inc
stos
sbb
ja
icebp
imul
adc
popf
loope
push
call
mov
xchg
mov
xor
sbb
das
and
cli
cmp
ror
loope
aad
jg
jb
xlat
cmc
mov
popf
pop
int3
and
lock
ret
add
and
jle
pusha
pop
pop
push
dec
cltd
fxam
mov
aaa
mov
imul
aas
test
cs
adc
fimuls
push
aas
mov
xor
fidivl
pop
sub
pop
stos
mov
sbb
push
aaa
and
icebp
gs
mov
mov
push
int
testl
mov
movsl
lock
cmpsb
and
dec
sahf
push
cmpsb
mov
xchg
dec
mov
sarb
jnp
cwtl
cmpl
push
cmpsb
hlt
push
xchg
jno
push
dec
jae
sub
xor
notb
fcomp
dec
and
xchg
mov
xchg
notl
sbb
xchg
jmp
inc
sub
sub
je
jnp
fchs
dec
insb
and
int3
cli
imul
dec
or
and
inc
stc
push
insl
les
inc
inc
xor
add
imul
mov
dec
arpl
push
fs
and
rclb
dec
aaa
xchg
divl
or
mov
aam
in
push
adc
adc
imul
das
out
push
int3
test
push
dec
xor
xor
sub
fistpl
or
jmp
xchg
out
lods
int
arpl
and
inc
or
xchg
iret
pop
xchg
inc
ds
out
loopne
push
lods
pop
out
dec
or
inc
lahf
cmc
movsl
mov
ljmp
push
fisubl
sbb
sub
popf
es
pop
loope
push
push
jno
or
cmp
push
leave
push
outsb
sub
nop
repz
mov
jns
nop
push
std
mov
hlt
cmp
das
pop
push
insl
pop
in
pop
xchg
jb
js
fidivl
test
sub
movsl
xor
add
hlt
scas
lock
sub
cmp
ja
pop
rcrb
jmp
inc
push
xchg
aaa
mov
mov
rcrl
and
hlt
mov
inc
mov
add
lret
cs
sti
push
aaa
sahf
or
je
daa
add
xlat
cmp
rcrl
inc
ja
mov
push
jg
pop
ja
iret
pop
sar
mov
test
addr16
loope
jbe
pop
jno
leave
mov
fisttps
xor
dec
pop
fcom
sahf
pop
xor
sbb
mov
pop
push
mov
nop
cmp
mov
sbb
stos
movb
xlat
jge
mov
imul
sbb
mov
mov
mov
and
xor
mov
test
popf
dec
sub
popf
pop
sbb
sub
or
mov
add
mov
jle
pop
push
jmp
mov
pop
ljmp
fwait
daa
adc
les
or
pop
mov
sar
clc
inc
xlat
push
fwait
push
mov
push
stos
adc
add
cmp
leavew
flds
adc
mov
inc
add
pop
dec
call
push
sbb
pop
cltd
iret
enter
pop
or
mov
cmp
cmp
add
js
pop
int
stc
adc
sub
leave
xchg
dec
add
cmc
in
mov
pop
push
loope
inc
stos
lahf
mov
inc
and
nop
jg
xchg
les
xlat
jne
stc
or
adc
test
into
out
dec
pop
mov
clc
int3
insb
lds
dec
dec
mov
add
pmulhw
add
bswap
push
leave
int3
in
insl
adc
sub
sub
ret
jae
pop
mov
mov
jne
rcrb
insl
lds
lock
mov
sub
inc
leave
mov
rcrb
push
mov
push
dec
cmp
push
shl
bound
roll
testl
inc
outsb
or
or
cmpsl
mov
cmpsb
cmp
xorb
sti
and
clc
xchg
xor
or
xchg
movsb
cld
cmp
cmc
inc
xor
outsb
jg
or
dec
data16
test
push
mov
cmpsb
sub
loopne
ret
xchg
test
or
push
cmc
jb
or
xor
dec
add
lds
adc
icebp
mov
ret
dec
xor
add
test
std
shufps
add
sahf
push
aam
scas
jl
mov
mov
xchg
adc
mov
fsubrs
mov
loope
adc
outsl
adc
mov
aaa
inc
mov
or
dec
push
push
cli
xor
xor
sbb
cmpsl
ret
insb
and
sbb
cmp
add
shlb
push
decb
and
or
icebp
push
cmp
test
mov
leave
jg
xor
in
cpuid
hlt
push
add
out
push
mov
sbb
insb
imul
mov
pusha
mov
xorl
mov
push
movnti
dec
mov
lret
fs
jo
fnsave
sub
cmp
xor
and
stos
mov
scas
clc
dec
sar
stc
bound
pop
push
inc
lea
push
xchg
dec
dec
sub
push
mov
pop
xchg
call
loope
inc
pop
dec
sbb
inc
mov
inc
loopw
add
js
stos
jle
pop
clc
sub
lret
inc
cmp
push
add
jg
add
adc
sbbb
add
insl
jmp
cmp
jmp
mov
mov
xchg
xchg
dec
ja
or
jae
push
loope
push
inc
pop
push
ljmp
mov
sbb
sbb
jle
pop
and
mov
xor
pushf
ss
adc
add
test
shlb
insl
mov
jl
fnstcw
in
pop
loop
pop
fnstsw
insl
leave
sub
stos
scas
mov
adc
push
jnp
cmpsb
loopne
jb
push
or
test
repnz
xor
andb
sub
pop
adcl
jae
lahf
lods
jnp
pop
loop
cmp
jno
add
and
mov
aam
jmp
aad
mov
fsts
hlt
push
in
inc
jne
rcl
lret
ljmp
mov
push
out
out
cltd
xor
outsb
dec
loop
dec
xor
dec
loopne
jns
out
inc
or
pusha
and
dec
cmp
in
pushf
mov
lods
fs
and
cmpsb
dec
lods
bound
daa
in
mov
repz
outsb
inc
jno
shrl
or
cltd
call
sub
mov
cmp
iret
jmp
and
inc
dec
push
rcrl
inc
xlat
popa
sahf
loop
push
jmp
sbb
mov
shll
fwait
sarb
jmp
pop
sub
sahf
popa
mov
mov
in
or
negl
lods
iret
cmp
dec
xor
stos
aas
mov
jle
and
int3
mov
pop
or
mov
mov
mov
movsl
movsb
sub
sub
fbstp
ficoms
and
test
adc
adc
ret
jge
cmp
icebp
inc
sub
es
inc
test
dec
in
shll
sbb
push
dec
mov
add
pop
mov
inc
mov
lahf
shlb
adc
lods
mov
or
xorl
xor
xor
sbb
fcmove
jmp
fstl
cmp
pop
and
int3
xchg
push
mov
mov
sub
int3
mov
das
push
test
inc
leave
jno
pop
out
in
sar
call
add
xlat
icebp
in
xor
repnz
mov
outsb
cmc
xchg
xchg
push
inc
aaa
adc
jg
icebp
cld
pop
xlat
popl
push
cmpsl
mov
nop
xor
flds
rcl
adc
sub
dec
cmc
shll
shrl
jp
test
mov
push
lods
inc
int3
insb
int3
ja
jge
jge
loop
into
js
dec
cld
jb
jns
imul
inc
movsb
jmp
or
dec
or
pop
mov
jb
sbb
int3
loope
adc
jae
sti
pop
mov
fsubr
xchg
xchg
push
jmp
imul
ds
mov
cld
jns
nop
cmp
int
mov
jl
add
push
lret
sub
pop
xor
cmp
or
cmc
aad
fldt
adc
sub
add
js
mov
pop
cmpsl
cmp
dec
sub
add
out
pop
push
pop
mov
jmp
ret
lcall
mov
xchg
adc
ja
pop
mov
pop
push
clc
iret
or
cwtl
pushf
hlt
inc
xor
pop
mov
push
insl
pop
mov
and
clc
mov
add
dec
sbb
push
pop
cmp
adc
mov
sub
inc
jne
jmp
test
mov
loopne
jle
cs
xor
fdivr
jg
mov
sub
push
push
mov
orl
insl
je
jae
sub
xchg
dec
das
cmp
shlb
addl
shrb
inc
mov
push
into
insl
push
pop
xchg
mov
xor
lock
xor
add
or
cmp
in
icebp
insl
gs
test
push
fsts
les
fstps
cmpsb
loopne
sti
mov
cmc
mov
jecxz
int3
shll
jne
mov
lds
or
popl
rcl
fisubrl
ljmp
push
in
aad
out
pop
data16
rdpmc
loopne
mov
xor
push
cmpb
pop
in
sub
rorl
mov
sub
adc
adc
add
insl
fnstcw
outsl
testb
adc
xor
scas
into
rorb
cwtd
cltd
push
in
pop
jbe
fsts
mov
out
dec
std
jle
inc
roll
stos
xrelease
fcomps
movsb
insl
mov
pinsrw
fs
negb
repnz
leave
add
push
mov
mov
out
adc
inc
jmp
sub
dec
fistps
daa
movsb
enter
cmc
jb
inc
xlat
mov
loopne
pop
adc
lds
std
xor
inc
cmpl
cltd
lea
and
arpl
and
into
cmp
ljmp
pop
outsl
paddq
dec
or
push
pop
sub
or
mov
std
insb
xlat
cltd
pop
push
fs
cs
shlb
pusha
add
inc
pop
lods
imul
add
in
fstl
ljmp
push
xchg
jp
rcr
sbb
popa
mov
inc
icebp
iret
push
pop
scas
les
add
xchg
sarb
scas
pop
cmp
mov
push
ds
imul
push
jg
mov
dec
lgs
aad
adc
pop
push
mov
mov
mov
das
mov
and
cmp
in
push
sbb
cltd
or
pop
adc
fsubrl
imul
les
xchg
jge
cmpsl
sub
sahf
ss
into
icebp
add
lcall
and
scas
mov
stos
daa
divb
dec
div
arpl
mov
cmp
xor
push
sarl
cmc
ret
mov
mov
mov
mov
and
or
in
sbb
xorb
pop
aad
xchg
xchg
jmp
sub
fldcw
lods
sbb
jnp
xchg
iret
jmp
push
pop
mov
push
out
xchg
push
movb
les
jo
scas
mov
addr16
leave
into
shlb
jmp
mov
push
sbb
movl
call
clc
inc
pop
daa
decl
and
cmp
cmpsb
mov
pop
sbb
sarl
and
adc
adcl
add
mov
mov
inc
pop
std
sbbb
int3
dec
and
jne
outsl
sub
je
sub
sbb
xor
sub
data16
sahf
repz
repz
aas
in
adc
dec
mov
je
stos
or
cmp
push
push
xchg
lretw
add
dec
mov
mov
fdivrl
pushf
stos
xchg
ljmp
inc
mov
testl
mov
mov
out
jp
aaa
lock
lea
cmp
dec
mov
je
ss
sbb
push
sbb
les
enter
adcb
pop
sub
rcr
jmp
popf
out
mov
lret
xchg
inc
xorb
dec
cmpsl
pop
loopne
fbld
fnsave
fs
mov
nop
mov
mov
push
aas
add
push
and
sti
jno
mov
mov
xlat
pop
test
rcl
jnp
sub
jecxz
fnsave
mov
repnz
outsb
push
pop
adc
je
mov
push
je
pop
xor
push
sahf
or
ja
rcll
bnd
mov
xchg
sub
icebp
cmp
lahf
xor
arpl
pop
mov
inc
pop
pop
adc
ja
in
push
nop
shl
outsl
fsts
lock
xchg
mov
jp
sub
pop
jecxz
mov
pop
sub
mov
and
ds
arpl
add
jg
daa
adc
outsb
jle
mov
aad
lea
xchg
mulb
dec
dec
aaa
arpl
adc
jmp
mov
in
cs
add
jmp
pop
push
nop
in
fwait
push
cmp
adc
adc
jnp
mov
stos
arpl
dec
in
mov
out
in
js
sbb
popf
movsb
sbb
bound
and
rclb
and
mov
cld
and
sbb
hlt
test
mov
loopne
nop
xchg
repnz
shrb
insb
inc
pop
push
or
push
fdivr
xchg
movsl
lods
inc
jp
ja
mov
push
pop
outsl
negb
sbb
imul
lahf
jnp
xor
aam
cltd
test
sub
mov
mov
aas
lods
fs
ret
popa
sub
loope
out
in
dec
in
fimull
add
sbb
jns
push
call
or
cmp
sub
cli
fwait
or
fstpl
lods
or
jns
lock
aas
mov
dec
inc
pop
mov
adc
shll
lds
mov
lds
data16
sbb
mov
es
fcoms
xchg
jne
inc
cmp
xor
shll
enter
movsb
inc
xchg
ja
in
cltd
idivl
adc
push
rolb
sbb
cmp
cmpsb
inc
mov
idivb
mov
std
push
jge
cmpsb
inc
cmp
jb
imul
push
pop
adc
aam
fsubrs
push
dec
sti
fs
pop
and
repnz
xchg
loopne
movsl
jno
in
lea
icebp
insl
insl
jp
and
sub
fisubs
dec
pop
hlt
mov
andb
nop
jne
inc
in
and
sub
sbbb
jmp
sub
and
test
mov
mov
or
stos
pop
or
pop
jb
or
repnz
rorb
push
bound
inc
mov
mov
inc
sbb
mov
jg
movsb
mov
jne
shrl
lea
mov
loopne
out
mov
mov
mov
mov
or
loope
or
mov
mov
mov
inc
xor
out
push
iret
and
lahf
jl
sub
js
cmp
or
call
xchg
add
sbb
or
outsb
int
mov
and
mov
in
mov
jle
lods
ss
inc
out
arpl
jb
push
cltd
sub
adc
shll
jbe
add
sbb
cli
xchg
sub
test
cmp
pop
je
sbb
jl
cmp
out
dec
outsb
xchg
incb
jl
shr
pop
cmp
and
mov
mov
sarb
jne,pt
pusha
bound
pop
nop
ret
shrl
sar
xlat
fildll
push
add
jns
lds
fisubrs
movhps
dec
adc
fstl
insl
mov
push
jns
jmp
and
fsubr
pop
push
les
js
push
fists
imul
data16
inc
lret
repnz
pop
push
xor
imul
xor
lahf
xlat
xchg
cmp
and
sbb
movb
repz
push
jecxz
mov
push
pop
nop
stos
inc
test
out
lock
pop
jnp
dec
and
add
sti
mov
aas
mov
add
fidivrs
push
imul
or
mov
out
sbb
mov
xor
xchg
gs
xchg
std
or
sub
in
inc
mov
jae
jle
jp
push
lret
dec
sub
push
arpl
dec
arpl
mov
inc
push
lret
adc
scas
ret
push
cmp
mov
add
xor
sahf
sti
jnp
fxch
ret
xchg
js
adc
mov
test
daa
cmp
cwtl
inc
mov
insb
push
lret
pop
inc
imul
movsb
fdivr
iret
cmp
fists
or
jg
ret
push
out
js
je
into
aas
mov
ffreep
xor
roll
mov
test
mov
lods
xor
sub
push
inc
and
push
adc
mov
add
ss
and
cmpsl
mov
cli
idivb
movsl
cmp
push
push
subl
pop
cmp
push
xor
sbb
mov
push
rorl
pop
sbb
imul
add
popf
fstpl
mov
in
mov
cmpsl
loopne
out
xchg
push
cmp
cmc
add
jo
adc
adc
dec
inc
pushf
cmp
and
inc
pop
mov
push
popf
push
pop
mov
xchg
xor
stos
push
inc
xchg
leave
test
jno
loopne
inc
mov
xchg
lcall
xor
cltd
mov
xor
jb
pop
sbb
sbb
xor
xchg
jae
fucomi
mov
xlat
stos
ljmp
cmc
cmp
push
or
idivl
dec
jle
mov
push
and
sbb
mov
mov
cli
roll
mov
mov
ret
insb
xor
push
jbe
xor
adc
into
repnz
cmp
jle
je
out
lods
sbb
dec
mov
loope
mov
pushf
lods
out
pop
pop
lahf
add
mov
jmp
stos
add
push
outsl
inc
out
mov
jp
xlat
popl
adc
adc
or
pop
pop
jge
fcoml
push
insb
pop
or
pushf
jmp
push
and
rcll
jl
or
mov
stc
enter
mov
pop
push
pop
nop
add
adc
and
mov
push
jg
adc
test
je
rclb
movsb
stos
popa
lock
imul
scas
ret
and
int
bnd
rclb
daa
adc
jae
jns
ja
xchg
hlt
jnp
adc
jne
cli
pop
mov
ss
inc
mov
add
adc
mov
mov
neg
stos
adc
add
aas
push
cld
insb
rorl
jmp
xchg
rol
lea
pop
shlb
insb
mov
pop
dec
andl
sub
sub
ljmp
pop
insl
mov
adc
rcll
dec
jno
lock
daa
mul
aad
jp
cmp
jno
jno
addl
dec
stos
mov
mov
dec
adc
xchg
add
jl
push
test
idivl
mov
xchg
fiaddl
lods
cmp
loop
enter
insl
stos
ja
mov
dec
cmp
nop
jp
push
jbe
movsb
daa
push
xchg
ja
subb
divl
movsb
inc
int3
hlt
outsb
pop
stos
cmp
out
insl
push
cmp
mov
test
mov
add
and
pop
mov
js
xchg
cmc
dec
pop
inc
dec
mov
sub
jge
pushl
mov
call
es
sti
outsb
cmp
test
fdivrs
call
adc
cwtl
out
push
fstpt
mov
sahf
outsl
popf
adc
fstpt
mov
jmp
ja
sbb
sub
dec
imul
or
test
jecxz
mov
sbb
add
xlat
inc
push
jle
out
es
pop
add
in
mov
mov
aas
js
hlt
adc
cmovl
out
stos
dec
add
cmp
test
xchg
les
lea
jns
mov
sbb
jno
es
jo
mov
outsl
dec
sarb
int
add
rcrl
mov
nop
pop
loop
cmp
in
stc
mov
pop
insb
xchg
icebp
scas
push
push
push
cmc
in
test
movb
mov
es
cld
je
push
sub
rcl
sbb
push
lcall
test
std
push
ficoml
out
sbb
lea
cmp
das
inc
mov
leave
sti
xchg
dec
ljmp
aas
or
mov
xchg
fs
inc
imul
push
sub
pop
xchg
lods
stos
jns
imul
leave
out
or
pop
and
add
cld
dec
fs
pop
adc
and
mov
mov
cmpsb
xor
or
xor
add
push
mov
mov
mov
adc
and
push
cmp
mov
in
sbb
sarb
and
testb
ljmp
fbstp
hlt
dec
cmpsb
ds
cmpsl
gs
mov
leave
cwtl
cld
jae
ss
or
dec
mov
sar
mov
push
sub
sbb
test
call
not
push
scas
inc
aas
pop
mov
jecxz
mov
dec
testb
or
jle
stos
aas
sbb
pop
rol
xchg
jo
psraw
adc
in
into
rclb
dec
icebp
in
adc
jno
xor
jne
mov
scas
push
xor
arpl
xor
cmp
and
mov
xlat
mov
inc
je
fimull
cmpsb
mov
push
sahf
pop
stc
cmp
xchg
jb
aaa
mov
adc
pop
add
mov
fs
jge
jnp
into
push
xlat
cli
cwtl
cltd
ficompl
xor
cwtl
js
ds
push
repnz
hlt
fisubs
stc
sub
cmp
mov
xor
sti
push
call
ljmp
sub
pop
ja
dec
insl
cmp
fisubrs
mov
iret
sbb
push
cmpsb
bound
dec
jae
roll
cmp
ds
ds
jne
mov
inc
inc
sbb
mov
sub
divb
scas
call
pop
scas
mov
dec
outsb
fcoml
mov
popa
aad
fdiv
ret
mov
rclb
iret
adc
xchg
pop
ret
and
fwait
in
mov
cmp
ret
xlat
fwait
add
aaa
lds
cld
lea
out
ds
test
mov
xchg
push
or
sub
lret
testb
xchg
das
fisubrs
jbe
xor
inc
add
into
das
push
outsb
dec
rcrb
ljmp
push
clc
sbb
push
movsl
rclb
adc
sahf
jns
mov
sbb
inc
adc
sbb
lds
or
mov
outsb
or
jae
clc
add
popf
and
xor
jmp
inc
and
sbb
aad
mov
rolb
adc
jmp
loop
dec
stc
movsl
call
test
call
lods
add
xchg
push
or
icebp
movsl
or
movsb
int
dec
sarl
inc
mov
xorb
pop
sbb
adc
mov
in
xorl
lcall
pop
push
stc
aad
test
mov
fs
inc
xor
adc
push
sahf
test
scas
sbb
sahf
ljmp
gs
or
inc
notl
push
cmpsb
orb
sbb
inc
or
mov
scas
mov
insl
adc
push
pop
dec
imul
mov
dec
mov
lahf
in
ficoms
inc
fbstp
jae
outsl
imul
int
mov
add
fcoms
popa
aaa
inc
jge
mov
js
dec
adc
sub
nop
and
xchg
or
pop
in
push
jae
pop
repz
fistpll
dec
jge
call
mov
push
dec
jp
fnstcw
das
scas
adc
popa
hlt
mov
xchg
sub
lret
jl
faddp
mov
mov
pusha
cmp
jnp
notl
int3
xchg
stos
jecxz
or
cmpl
mov
test
scas
out
dec
jg
jns
imul
not
rol
loope
ss
out
popf
add
mov
aaa
xor
data16
xorb
xchg
mov
pop
add
stos
mov
cmp
rol
sub
out
in
ds
push
pop
push
or
jg
xchg
repnz
mov
add
pop
andl
mov
in
xchg
ret
push
aam
addb
mov
stos
scas
mov
jg
or
cwtl
movsl
inc
sub
mov
adc
xlat
push
sbb
mov
lcall
iret
ret
mov
popf
sub
faddp
fisubl
cmp
mov
xchg
outsl
adc
sbb
ljmp
jae
mov
les
xchg
int
inc
icebp
rcl
or
test
push
std
enter
mov
movsl
mov
xor
pop
sub
sbb
pop
xor
sbb
outsl
nop
inc
int3
inc
cmp
lret
pop
fwait
add
and
outsb
and
jecxz
aaa
xchg
fadds
adc
push
add
movsl
push
lea
pop
movsl
data16
and
scas
push
rol
jle
sbb
jmp
jmp
repz
adc
loopne
les
adc
sub
or
push
or
cli
adc
loop
sbb
and
push
and
inc
repnz
sub
sub
inc
inc
frstor
mov
mov
stos
mov
push
in
jmp
jne
fdivl
adc
push
into
mov
leave
jg
iret
rclb
pop
imul
sbb
in
mov
pusha
pop
imulb
sbb
lods
or
adc
and
sub
mov
jns
rcrl
push
cmpsl
fwait
std
adc
and
jmp
xchg
push
sub
jecxz
xchg
xchg
ss
adc
or
subl
dec
add
sbb
inc
lea
add
sti
adc
dec
mov
cmpb
imul
sbb
jns
pop
pop
lods
sub
aad
jl
adc
jo
cltd
stc
mov
scas
mov
push
dec
xchg
sbb
jmp
les
shlb
mov
int3
aam
or
pop
push
les
pop
xchg
add
mov
aas
jno
jne
or
mov
inc
pop
and
cmc
or
gs
adc
pop
inc
icebp
jmp
dec
sub
and
push
sahf
push
sub
mov
aas
pop
sub
adc
pop
fstps
scas
mov
fisubs
lahf
fldcw
pushf
mov
jle
cmpb
repnz
cmpb
stos
xchg
rclb
ret
faddl
ljmp
add
adc
mov
mov
rcll
push
sub
fwait
jno
lock
cltd
and
dec
jno
add
call
inc
mov
add
jmp
or
mov
push
mov
lods
dec
xor
mov
rorb
or
xor
nop
popa
aad
pop
daa
add
xchg
insb
js
cwtl
je
sub
pmovmskb
jns
and
leave
jp
movsl
gs
es
xor
sbb
push
jle
push
or
adc
inc
aas
imul
push
iret
int
sbb
push
and
out
out
out
adc
xchg
push
xor
and
sub
ret
sbb
add
mov
jb
dec
or
add
scas
lret
cld
push
sahf
adc
pusha
hlt
lods
jle
or
aad
inc
cmpsl
add
test
jg
jle
cmp
cmp
push
dec
popa
jle
subl
fadds
leave
mov
jo
jl
aad
cmp
jmp
pop
outsl
sbbl
xchg
xchg
cmpsb
jle
loop
xor
std
lcall
ds
testb
sbb
cmp
into
jb
cmp
or
and
pusha
fstl
orb
addr16
in
add
in
xor
movsb
or
dec
push
pop
mov
push
ror
in
out
adc
arpl
shl
xor
xlat
jno
dec
fildl
push
ret
and
fdivs
je
cli
pop
sub
xchg
push
pop
lods
incl
fists
ss
lds
test
hlt
add
push
cwtl
dec
sbb
mov
mov
rclb
rclb
out
lahf
movsb
sub
les
add
cmp
subl
add
nop
popa
das
sub
mov
out
neg
outsl
mov
pop
aas
dec
xor
jg
adc
xchg
mov
fwait
adcl
mov
adc
adc
arpl
ret
in
or
sbb
push
sbb
xchg
loopne
xchg
out
inc
inc
fstl
out
test
stc
inc
push
mov
in
daa
and
mov
arpl
mov
add
cmp
imulb
fistpll
outsl
sub
hlt
ret
adc
pop
xor
inc
mov
jmp
dec
movsl
out
jmp
cmpsb
fstl
cmpsl
aam
stos
adcl
inc
js
xchg
sub
fsubl
lods
pop
xchg
mov
mov
call
push
cwtl
sub
dec
imul
repnz
mov
xor
inc
xchg
dec
pop
mov
xchg
mov
mov
call
repz
push
or
mov
aas
inc
cmp
cmpsl
adc
xchg
mov
arpl
clc
dec
popa
cld
gs
adc
out
call
lret
movsl
cmp
xor
xchg
or
in
xchg
test
insb
rcll
cmp
mov
fistpll
out
imul
jecxz
shlb
jg
jnp
dec
dec
pop
cmpsb
es
mov
hlt
cmpsl
ja
dec
dec
aas
dec
mov
push
mov
test
cltd
xchg
aas
vmovdqu
shlb
add
outsb
gs
movsl
stc
dec
mov
mov
ret
inc
pop
stos
int3
in
stos
call
icebp
cmp
push
sbb
shrb
mov
mov
or
mov
sahf
insb
loope
inc
add
lock
in
adc
pop
sub
in
pop
imul
dec
pop
mov
stos
dec
lahf
leave
ret
stos
push
lods
xorl
and
sub
jns
les
mov
xorl
mov
sub
out
call
orb
fsubrl
fisubrl
pop
and
pop
cli
cmovns
push
add
fidivrs
xor
add
xor
sub
cmp
jl
inc
ljmp
jno
nop
jp
inc
adc
fdivr
jne
lahf
scas
add
mov
mov
out
aaa
fs
and
xor
xchg
pop
mov
outsb
mov
insb
xor
push
mov
jbe
filds
mov
push
push
ss
insb
scas
pop
cmp
adc
adc
xchg
rclb
xchg
push
fucomip
and
pushf
bound
sub
rcl
lock
jns
lret
popf
sbb
cld
cmp
js
gs
jnp
add
pmulhuw
icebp
jmp
popa
in
xor
adc
movsb
cmpsb
dec
mov
pop
sbb
dec
jb
pop
lock
inc
stc
xchg
inc
adc
test
adc
jae
icebp
jo
rolb
pop
xlat
add
push
imul
mov
aam
popa
inc
mov
jl
or
add
jb
stos
lcall
leave
and
mov
sbbb
aad
mov
xchg
push
push
xchg
mov
or
aam
mov
sub
inc
cmp
nop
mov
sub
xor
push
pop
stos
pop
pop
or
pushf
xlat
out
in
repz
stos
gs
ja
cwtl
lret
cltd
insl
push
aaa
nop
sti
ljmp
or
test
cli
mov
pop
ret
add
leave
sbb
fwait
or
aam
add
int3
and
xchg
jmp
rorl
xchg
out
pop
pusha
cld
pop
rcr
daa
mov
add
fmuls
mov
push
xor
iret
aaa
std
fcomps
cmp
xor
and
cmp
test
fcomi
repnz
and
jae
pop
addr16
int
inc
mov
jae
pop
mov
adc
mov
sub
push
aam
inc
test
lods
out
cmpsl
cmp
push
pop
or
and
data16
fcmovnbe
mov
add
xlat
in
push
stos
add
push
in
test
fcoms
mov
xchg
adc
push
and
xor
lods
imul
pop
xchg
shll
and
push
out
addb
xor
mov
addr16
mov
imul
aaa
ss
bnd
push
stos
call
ret
popf
rcrb
stos
jo
xchg
xor
mov
repnz
test
adc
push
in
and
push
pop
push
test
sbb
fists
adc
sahf
daa
push
push
cltd
push
inc
fcompl
popa
or
adc
out
sbb
push
dec
jp
push
xchg
test
aam
cmp
add
fwait
adc
inc
and
movsb
adc
or
cld
lret
jae
pop
test
dec
sub
addb
adc
dec
sbb
les
loop
mov
aaa
push
push
lret
sbb
or
ljmp
sbb
add
sub
xchg
sbb
fisttps
sti
imul
sub
xorl
xchg
jae
cmp
mov
loopne
cmp
dec
test
xchg
hlt
xchg
jno
pop
das
stos
into
inc
sbb
ret
aad
dec
cli
jno
push
pop
ljmp
out
mov
divl
test
xchg
adc
popa
lcall
sar
out
ret
out
hlt
outsl
pushf
sti
lea
cmp
xchg
aas
adc
daa
push
dec
out
jp
xchg
sub
out
inc
sbb
rol
push
es
xor
jecxz
pusha
push
lock
mov
cmp
xorb
jmp
popf
cmpl
hlt
inc
or
push
adcb
fs
outsl
cmp
jae
test
jb
cmpsb
push
dec
push
inc
in
pop
or
xchg
adc
stos
mov
out
in
icebp
pop
mov
jnp
cld
jmp
push
push
es
xor
jmp
andb
xor
outsb
or
cmc
in
mov
lcall
leave
dec
fistpll
inc
jle
push
mov
add
stc
sarl
addr16
mov
ret
push
xchg
mov
negl
xchg
pop
fnstenv
sub
dec
les
aam
addb
testb
ret
call
out
cs
aaa
and
pop
dec
mov
gs
mov
les
data16
lcall
pop
into
loope
mov
push
cs
mov
fcom
add
lds
sahf
dec
adc
movsb
and
mov
pop
add
xor
cmpl
mov
mov
dec
out
add
or
jae
mov
xor
and
xchg
xor
jbe
enter
lea
xchg
fs
int
in
lds
aad
mov
mov
out
ficomps
cmc
adc
pop
js
das
out
movnti
adc
mov
sub
add
and
sbb
leave
movl
mov
mov
and
imul
inc
icebp
jno
pop
fucomip
or
sbb
pop
push
xchg
push
out
shll
int
xor
push
fsubrl
pop
dec
lret
xor
popa
movsl
lea
cltd
mov
or
fxam
in
mov
dec
out
push
js
cs
lret
push
add
and
mov
jae
mov
xchg
popf
xor
and
mov
add
xor
xlat
push
js
or
xchg
fnstcw
jb
or
mov
mov
js
xor
jne
cmpsb
and
xchg
xchg
pop
pop
pushf
mov
jl
or
movsb
sbb
and
jne
dec
test
mov
fcoml
out
out
and
mov
setns
loopne
and
push
popf
xor
lcall
jo
lret
pop
adc
inc
add
test
pop
push
in
pop
sbb
xor
adc
dec
inc
cmp
mov
xorl
stos
sbb
in
scas
xor
inc
insb
jnp
mov
adc
add
fcompl
out
xor
pop
or
sahf
ret
push
pop
or
ret
call
lcall
xor
push
push
ret
test
orb
adc
or
bound
popf
arpl
and
stos
xor
in
ss
cmp
push
cli
adc
lret
scas
rorl
cs
daa
push
repnz
stc
imul
jns
rcrb
push
std
inc
mov
cmp
fldpi
pop
xchg
mov
add
push
lea
test
into
pop
and
jmp
cld
icebp
adc
cs
int
push
xor
adc
cltd
jae
pop
js
inc
mov
fcomip
stos
adc
mov
mov
push
fs
mov
cld
sbbl
ficomps
mov
xchg
push
adc
mov
or
aad
sbb
inc
sub
dec
push
jbe
pop
xor
gs
dec
repnz
xchg
mov
fs
jbe
and
cmpsl
lea
jmp
loopw
sbbb
out
in
jl
and
xchg
push
xor
xchg
jne
xor
iret
scas
jecxz
mov
push
lcall
out
in
fs
jge
cmp
scas
mov
inc
mov
sub
mov
jle
pop
dec
pop
sub
xchg
jg
shrl
mov
inc
and
cmpsl
adc
xchg
mov
movsb
pop
lds
imulb
mov
mov
jecxz
inc
dec
fiadds
add
cmp
xchg
inc
sub
sti
cmc
pop
dec
repz
orl
add
and
stc
adc
push
mov
jo
mov
pop
mov
cmpl
lods
das
push
fbstp
int3
subl
imul
and
ljmp
mov
and
push
pop
inc
sbb
mulb
hlt
push
push
mov
pop
pop
test
es
leave
xor
fwait
xchg
xor
dec
idivb
sub
je
stc
ss
fists
ja
fcoms
push
nop
add
outsl
js
add
movsl
adc
dec
andb
rorb
inc
rolb
cmpsl
inc
mov
mov
dec
js
mov
xchg
shl
xchg
xchg
addr16
insb
jmp
scas
les
and
fwait
rcrl
add
sub
mov
arpl
inc
addr16
insl
addr16
mov
out
pop
dec
rcrb
scas
pop
mov
mov
and
mov
pop
pusha
fsubl
stos
aam
repz
push
pop
icebp
dec
jmp
or
sbb
pop
pop
shll
xor
stos
sbb
dec
mov
popa
mov
mov
clc
test
xor
cwtl
dec
sub
sarb
fidivl
add
fsubs
pop
cmp
mov
xor
roll
fcomps
ss
gs
mov
pop
mov
sbb
push
or
hlt
aaa
int
xor
inc
xlat
mov
fsubrp
push
loope
mov
sub
fcomi
pop
mov
push
jbe
mov
fistpll
mov
mov
fistpll
push
add
sti
outsb
pop
cmp
mov
int3
sub
push
pop
adc
or
mov
sahf
cmc
mov
jg
std
mov
insb
jb
shlb
push
or
mov
sub
and
jecxz
mov
and
insl
and
or
ficoms
mov
ret
mov
or
stos
inc
adc
daa
ds
xchg
ret
xchg
dec
outsb
push
in
js
push
lea
pop
pop
xor
sub
mov
aaa
xchg
jnp
in
test
mov
sbb
push
inc
es
mov
push
rep
je
gs
ficompl
mov
xchg
movsl
add
seto
jbe
ja
stos
mov
mov
insl
iret
xor
iret
icebp
mov
pop
add
cmp
ds
maxps
mov
push
js
add
xor
cmc
cmp
push
cwtl
in
aaa
jle
stos
inc
xchg
fsubrl
cli
iret
repz
sbb
adc
push
inc
loopne
jnp
fmul
in
mov
shl
subb
jno
call
jmp
repz
xor
pop
and
xchg
push
adc
sub
xchg
mov
mov
out
sub
movsl
pop
mov
insb
les
jmp
cltd
pop
xchg
cwtl
sub
loopne
xor
idiv
loop
jecxz
jo
into
data16
leave
fistpl
sbb
nop
mov
ja
push
cmpsl
sbb
jns
lea
mov
mov
xor
xor
int3
pushf
xor
sbb
cmp
push
push
lods
pusha
lock
imul
inc
jb
lcall
jmp
dec
or
dec
mov
push
cmc
sbb
jmp
inc
adc
cmp
pop
xlat
rcrl
out
add
aad
test
cmp
sbb
sbb
mov
mov
push
dec
cmp
je
cmpsb
cwtl
mov
xor
clc
push
inc
cmp
push
push
stos
push
out
jge
jo
adc
sub
dec
push
sbb
ret
xlat
mov
fldenv
outsl
lods
out
sbb
xor
and
sti
jle
lods
clc
xchg
and
sbb
jle
out
test
pop
adc
xor
rcl
gs
adc
jl
divl
int3
stos
sub
out
inc
sbb
jge
jecxz
xchg
les
sbb
arpl
adc
pop
test
adc
decl
stos
pop
pushf
add
aas
fs
xor
popa
jge
loop
mov
cmc
cmp
add
mov
push
int3
add
mov
rol
jle
in
jmp
out
call
repz
add
daa
sub
ss
jb
ljmp
daa
lret
rcl
xor
stos
mov
push
pop
sarb
mov
add
xor
int
xchg
mov
mov
lcall
cmpl
das
push
pop
aad
cmp
lahf
test
orb
dec
push
imul
push
icebp
xor
sbb
mov
nop
jle
or
add
or
test
inc
cltd
sti
lahf
mov
push
adc
sbb
test
xchg
mov
jb
and
hlt
dec
push
and
sbb
in
push
cld
dec
out
sbb
nop
hlt
jb
insb
pop
mov
jo
fbstp
sub
stc
mov
scas
xchg
xchg
xchg
repz
data16
stc
jg
sub
mov
ljmp
cmp
int3
enter
push
incl
inc
mov
cmp
iret
negl
rep
pop
std
jl
js
sar
mov
adc
sbb
mov
xchg
lods
cmp
gs
and
cmp
pushl
sbb
loopne
xlat
insl
xor
outsl
sahf
mov
addr16
xchg
cmp
rorb
adc
out
inc
adc
cmpsb
mov
cmc
jge
popf
insb
jl
add
ret
loope
cmp
or
lret
jmp
lods
xor
adc
mov
dec
and
mov
nop
and
lret
xchg
dec
sbb
mov
push
jne
in
setle
push
push
cmp
dec
aaa
mov
jle
and
dec
loop
in
into
mov
add
popa
shll
cmp
pop
or
xchg
inc
cmp
jle
dec
jnp
scas
pop
pusha
je
sbb
popa
inc
clc
mov
ffree
inc
inc
sti
out
dec
xchg
cmp
mov
mov
arpl
test
sbb
adc
push
lcall
pushf
sub
std
pop
insb
mov
push
add
ljmp
pop
in
dec
xchg
add
adc
dec
mov
jns
fnstsw
addr16
pop
nop
add
pop
lods
adc
or
iret
f2xm1
gs
sti
out
add
inc
jb
xchg
cld
pop
pushf
jge
enter
adcb
push
loope
lcall
xchg
imul
cmp
in
nop
out
jmp
int
dec
jo
ret
cmp
cltd
addb
xchg
push
mov
sub
add
rolb
repz
cmp
addr16
lds
pop
mov
je
pop
test
in
into
pop
lret
andb
mov
faddl
shr
in
je
fimull
push
mov
stos
jb
pop
outsb
and
popa
cmp
int3
pop
xor
pusha
jg
cmc
pop
aam
test
mov
fstl
lods
pop
jbe
jp
test
pusha
adc
pop
pop
and
cmp
jle
mov
or
dec
in
aas
lea
add
enter
xchg
push
xchg
in
dec
lret
lds
jbe
ret
into
xchg
jnp
jbe
and
push
sub
cli
outsb
cmp
sub
cmc
cmc
mov
icebp
dec
mov
dec
out
iret
ret
enter
mov
xchg
push
xor
mov
or
mov
push
push
cli
scas
loopne
mov
sbbl
cli
mov
and
xor
cmpb
xchg
fcompl
into
inc
mov
gs
gs
es
xchg
mov
or
dec
mov
shll
sar
stos
stc
jmp
sub
dec
neg
adc
push
fstpt
jecxz
mov
sub
repnz
iret
cli
outsb
scas
push
mov
in
fiaddl
pop
mov
sub
push
scas
inc
xor
jle
out
or
into
test
out
nop
mov
ret
adc
xchg
into
sti
jae
in
ljmp
pop
adc
cmp
add
adc
andl
mov
dec
and
mov
bound
mov
mov
outsb
mov
xor
mov
and
iret
push
pushf
push
jge
sbb
push
jl
xchg
adc
cmp
adcb
jg
pop
push
imul
mov
lods
daa
push
aam
cmp
add
shl
call
stos
mov
js
pop
shrb
ds
mov
fsubrl
adc
std
dec
js
mov
jnp
mov
sbb
mov
jg
push
mov
mov
xlat
pop
xchg
out
push
jne
mov
repz
mov
in
jmp
jne
and
imul
ficompl
dec
lret
sub
idiv
loop
xchg
add
push
fists
jl
push
aad
adc
jns
dec
mov
lret
fimull
mov
lret
xor
out
ret
mov
arpl
neg
bound
xlat
jge
mov
int3
cmc
fimull
push
out
mov
pop
xor
je
insl
mov
setne
jo
mov
bound
imul
jg
ja
mov
fcmovu
icebp
xchg
shrb
cld
adc
imul
divps
aad
sub
aam
es
mov
push
mov
jno
xor
xchg
outsl
sub
leave
dec
out
pop
lahf
inc
xchg
push
clc
int
insb
inc
mov
cmp
pop
lret
fs
ds
mov
sti
xorl
xchg
push
sbb
dec
out
mov
je
aaa
outsb
mov
ljmp
mov
stos
mov
sub
shll
xchg
stc
add
mov
loope
cmp
daa
xchg
dec
mov
cmp
das
inc
jmp
fs
and
jno
adc
dec
leave
out
mov
and
jnp
test
jae
sbb
jmp
ror
adc
mov
adc
jae
dec
cmp
imul
or
cmpsl
push
xlat
jg
into
mov
add
cld
vmovdqu
pop
mov
sarb
xor
cmp
adc
lock
mov
ja
out
data16
lret
cmpsl
dec
arpl
imul
insl
or
daa
mov
fcomip
mov
cli
jo
mov
jge
jp
lret
sub
iret
jge
lods
xlat
stos
mov
mov
pop
mov
loopne
rorl
mov
fucom
mov
les
xor
fsubrs
cmp
sbb
stos
mov
push
adc
mov
mov
rorb
repz
rcll
out
int3
mov
push
jns
out
and
aaa
push
das
in
and
or
add
sub
loop
inc
subb
inc
cmp
push
enter
xorl
sub
mov
andb
or
adc
and
aad
xchg
jnp
aam
test
imul
and
xorb
test
push
adc
mov
sub
out
mov
or
push
sub
hlt
sti
pop
pop
test
adc
and
inc
pop
push
cmp
iret
inc
xchg
movsl
dec
clc
cld
sbb
mov
mov
ds
inc
xor
inc
fs
lods
cli
mov
fisttpl
jo
test
xchg
push
push
scas
inc
bound
outsb
jmp
mov
inc
xchg
loop
in
xor
xor
jecxz
and
adc
xor
movl
in
inc
cmp
pusha
xchg
imul
xor
or
cmp
mov
mov
addr16
pop
cmpsl
dec
mov
push
cmp
push
push
cltd
xor
xchg
push
sbb
adc
mov
mov
or
dec
pop
and
les
add
push
mov
sub
daa
out
pop
mov
mov
add
adc
xlat
pop
xor
and
and
fidivrs
cmp
push
cmpl
into
jecxz
pop
or
mov
hlt
repz
inc
push
lahf
xchg
mov
andl
pusha
adc
stos
and
cmp
push
xor
add
pop
add
ficoml
pop
shrb
out
or
bnd
clc
fmuls
ret
dec
push
adc
jge
out
fidivl
lods
mov
aad
xchg
cmp
push
jbe
cmp
sub
hlt
jge
fdivl
xchg
movsl
jno
inc
sbb
xchg
or
jecxz
ss
addl
or
in
mov
jle
fsts
ss
sbb
sbb
lcall
sbb
int3
aas
movsl
les
push
leave
jecxz
imul
outsb
popf
cmpsl
inc
push
cmp
mov
add
mov
or
xchg
mov
sub
mov
add
xor
push
lcall
cmp
adc
fsub
mov
mov
cmpsl
popf
push
sbb
push
lea
arpl
punpckhdq
xor
lods
or
insb
or
adc
notb
xchg
jecxz
mov
and
push
jne
push
xor
cmp
pop
sub
hlt
xchg
inc
dec
fisubs
push
cli
and
out
adc
nop
sbb
sub
adc
fiaddl
cmpsb
dec
ja
push
mov
mov
addr16
xchg
pop
in
push
es
pop
test
test
or
sbb
int3
sarl
mov
dec
push
dec
cmp
cmp
xor
insl
fwait
ret
repz
xchg
sbb
hlt
mov
es
movsb
mov
iret
rorl
outsb
push
mov
xchg
xlat
mov
outsl
aam
sbb
jmp
sbb
sub
pop
in
dec
adc
enter
add
sahf
and
shlb
xchg
dec
int
xchg
aas
adc
repz
or
adc
daa
movsb
mov
into
xchg
out
negb
mov
shrl
arpl
cmp
adc
xor
sub
xchg
mov
ss
outsl
movsb
mov
pop
jns
popa
shrb
data16
lods
jo
aaa
adc
cmpsb
inc
xor
and
outsb
pushf
jl
aam
in
sbb
sarl
xor
out
fsubs
daa
push
push
sub
popf
xor
and
call
cli
fbld
jmp
jb
xchg
aaa
jg
popa
call
xchg
inc
sar
and
xor
imul
sub
iret
dec
cltd
sub
sbb
xor
dec
dec
test
ret
cli
jo
repnz
mov
adc
insl
cmp
movsl
repnz
sahf
int3
jp
cmp
sub
aaa
lea
lods
cmc
lock
sbb
mov
push
aaa
testl
cmc
mov
xor
pop
mov
scas
lock
in
or
stc
xchg
mov
test
stc
mov
scas
xchg
mov
adc
mov
xchg
dec
pop
clc
nop
dec
pop
imull
and
dec
sbb
adc
and
loop
mov
mov
jo
push
dec
mov
adc
jge
in
insb
enter
sub
mov
nop
pop
fs
shrb
xlat
test
leave
xlat
loop
xchg
rorl
or
dec
vmwrite
xor
es
cmpsb
and
addb
pop
add
adc
fstps
push
push
mov
pop
sar
lods
imul
fstl
icebp
lods
xor
push
dec
pop
aam
pusha
add
and
test
fidivl
pop
pop
dec
jecxz
sub
test
mov
jne
jno
jbe
js
int
imul
fisubrs
jae
cld
mov
pop
push
jnp
xchg
adc
out
es
and
and
pop
xchg
mov
mov
add
adc
xor
bound
pop
inc
xchg
push
cmp
les
mov
bound
popa
stos
jne
fwait
mov
or
push
jge
sarl
cmp
insl
jno
in
clc
test
jns
sbb
cmc
lahf
std
out
sub
xor
mov
inc
and
test
jle
xchg
pop
in
add
adc
xchg
pushf
je
cs
and
mov
mov
lock
push
mov
out
sarl
test
push
not
js
xchg
mov
mov
in
mov
xchg
les
jns
pop
popf
das
shrb
jle
pushf
inc
insb
sub
adc
mov
and
inc
or
mov
repnz
cltd
fwait
xchg
add
cwtl
mov
adc
dec
mov
outsb
sub
dec
inc
cmp
es
mov
aam
imul
int3
jnp
mov
scas
js
aaa
cltd
out
push
inc
popf
std
fisubrs
lock
sbb
ret
mov
sub
sub
stos
stos
mov
imul
mov
push
sbbl
mov
mov
jno
cmp
mov
cmp
in
push
mov
jecxz
xchg
mov
xchg
cli
orl
mov
adc
iret
ret
dec
cmpsl
rcl
sub
push
out
pop
push
int
cltd
rcr
mov
mov
lods
sbb
into
jns
jno
dec
jo
cmpsb
loope
cs
xor
sbb
loope
fsubs
pop
js
out
enter
paddsb
stos
push
sub
xor
pop
add
ret
outsl
cmpsl
xorb
cmpb
or
js
jb
rorl
xlat
cmp
imul
nop
adc
movsl
popf
jl
add
inc
shll
lcall
inc
out
movsb
mov
lret
or
arpl
pop
dec
es
in
mov
fisubs
ja
nop
push
add
aad
jle
cmp
add
jb
and
add
xchg
scas
cmp
sub
test
mov
pop
imul
cmp
xchg
out
xchg
test
pop
outsl
mov
mov
das
jb
icebp
or
or
out
ss
mov
test
out
negb
imull
pop
cmpsl
jge
fdivp
int3
icebp
je
leave
adc
push
fistpl
sub
movsl
sbb
push
cld
pusha
inc
out
and
inc
sub
cmpsb
jmp
out
dec
stos
inc
dec
lahf
lahf
mov
jecxz
ret
cmpsl
int
out
and
xchg
imul
xor
stos
jp
mov
add
mov
mov
data16
stc
or
pop
cld
and
adc
cmpsl
lret
or
jne
push
jno
pop
xchg
cmp
pop
pop
dec
jb
data16
daa
sub
out
pop
bound
cmp
dec
ret
or
leave
fildll
ja
insl
and
mov
dec
lret
mov
pop
fidivrl
xchg
cmp
lahf
cli
not
cmp
rcl
loope
out
pop
scas
or
and
test
xor
in
popf
pop
outsb
adc
sbb
xlat
in
push
jp
or
cmp
cmp
and
out
cmp
mov
bound
ficomps
js
jmp
push
or
sahf
mov
cwtl
push
fidivl
dec
jno
push
mov
push
lea
mov
push
push
repz
pop
inc
test
shrl
shrb
gs
sbbb
pop
cmpsl
or
xor
jecxz
repz
dec
shl
cmp
or
je
cmp
int3
mov
daa
xor
push
fucomp
or
daa
hlt
pop
inc
adc
pop
pop
and
lahf
dec
scas
push
imul
lock
mov
pop
callw
xchg
cmpsl
mulb
or
adc
xor
inc
cmp
sbb
xor
test
pop
test
adcb
add
inc
inc
fmuls
iret
add
data16
dec
in
pop
sahf
and
icebp
ret
inc
push
xchg
jb
pop
or
inc
mov
xor
addr16
mov
adc
cmpsl
insb
fisttpll
inc
sar
dec
fwait
in
imul
add
fcmovnb
addr16
mov
jecxz
mov
inc
pop
pop
mov
outsb
and
lods
push
and
sbb
jecxz
add
xor
pop
cmc
push
imul
jmp
int3
fsubrl
clc
out
test
bound
test
loop
cwtl
outsl
cmp
and
jecxz
fnstsw
leave
dec
dec
cli
xchg
pushf
push
fsubs
fsubs
idivl
cmpl
lock
inc
mull
mov
insb
push
movsl
and
daa
jmp
movsb
xchg
and
aas
pop
ljmp
cmp
pushf
cmp
mov
xor
dec
adc
out
sbb
popf
and
nop
push
fbld
dec
sub
cmp
xchg
dec
mov
mov
inc
dec
adc
pop
lds
popa
rcrl
jno
mov
and
leave
add
add
clc
fdiv
adc
ja
cmp
add
imul
outsl
push
jg
dec
mov
clc
adc
dec
loop
data16
push
aas
enter
dec
daa
inc
push
jge
xchg
rclb
dec
add
sahf
lret
push
push
popa
or
pop
dec
xchg
pusha
fwait
into
iret
arpl
outsl
push
rol
popw
xchg
mov
dec
and
pop
stos
nop
cmc
outsb
loopne
in
sub
out
or
outsb
push
or
jb
out
in
imul
imul
xchg
bound
inc
pushf
push
xchg
push
sub
aaa
aad
cmp
adc
inc
xor
cmp
push
out
push
sbb
inc
push
mov
les
enter
pop
sub
adc
ja
or
inc
xchg
xor
mov
jge
int3
pop
sub
inc
test
sub
insb
gs
pop
and
adc
fdiv
movsl
sub
cld
lock
pop
bound
pop
sub
ret
inc
mov
jmp
mov
lcall
xchg
sbb
pusha
mov
loop
rcrb
icebp
sarl
pop
sarl
pop
loop
fwait
lds
jno
adc
mov
cmp
cmp
ret
arpl
repz
sbb
inc
outsb
in
mov
or
outsl
xchg
pop
popf
sbb
mov
mov
into
popf
arpl
add
into
fildl
test
xor
stos
and
loop
movsl
pop
lcall
jge
cmp
adc
xor
outsl
test
inc
pop
iret
sbb
xor
pop
or
ret
or
js
or
nop
loope
sbb
push
add
mov
cwtl
lock
lods
jo
cmp
add
lock
imul
fisttps
rcll
rorb
mov
pop
in
pop
enter
nop
out
scas
hlt
insb
cld
adc
int3
leave
in
iret
mov
pop
inc
outsl
sti
mov
fwait
imul
mov
dec
mov
sti
jbe
dec
test
or
or
fwait
aam
mov
cmp
jmp
shl
xlat
and
shlb
test
inc
mov
or
mov
int
out
push
xor
lahf
icebp
outsl
sbb
push
fisttpll
cmovno
cmp
xchg
adc
sarl
or
nop
jl
dec
and
fisubl
push
repnz
ss
jle
mov
cmp
out
out
cwtl
jb
out
loope
sbb
jns
aas
cld
sbb
inc
push
pop
in
stos
xlat
jns
mov
mov
push
inc
pop
loope
and
mov
and
pop
ja
push
and
addr16
xlat
xchg
lcall
mov
ret
inc
xchg
clc
call
rcl
fcompp
mov
and
mov
lret
fs
pop
repnz
dec
pxor
stc
inc
jnp
shll
test
dec
jnp
or
or
cmp
cmp
mov
xor
repnz
and
test
add
sbb
stc
loope
sahf
mov
clc
iret
shll
xor
or
mov
je
movsb
lea
rcrb
pop
int
xchg
inc
imul
xor
push
mov
xor
data16
std
mov
pop
rcl
add
cmp
test
call
push
insl
xor
addr16
push
jae
jge
bound
in
fisubl
dec
xlat
cmpsl
es
dec
pop
fidivl
jb
jo
mov
rclb
sbb
mov
sub
inc
mov
adc
pop
jns
adc
sbb
inc
insb
jne
rcrb
cmpl
add
dec
and
mov
sbbl
mov
insl
xchg
pushf
rolb
jb
or
xchg
mov
inc
aad
push
test
push
fiaddl
rcrl
scas
loopne
push
pop
xor
ljmp
push
cmp
fstpl
xchg
stos
cltd
dec
out
loopne
repnz
dec
mov
out
int3
cmp
dec
test
pushf
or
hlt
rclb
lcall
imul
add
jl
adc
xor
pop
inc
cmp
xchg
jno
dec
lea
ja
xor
inc
movsl
jns
push
in
and
scas
loopne
leave
adc
sbb
inc
pop
ret
jnp
xchg
jae
xor
andl
adc
cmpsb
pop
outsb
out
sbbl
not
xor
test
jg
xor
jno
push
test
enter
shlb
push
addb
leave
mov
xor
xor
or
pusha
mov
ss
dec
sub
out
gs
shrl
les
and
push
add
cli
ds
movsl
sub
pop
mov
mov
mov
and
mov
push
jne
clc
and
test
pop
cmp
xchg
push
or
scas
pop
mov
sub
add
repnz
fists
cmp
inc
cmc
stos
add
pop
and
xor
jecxz
sub
mov
mov
mov
ja
inc
fistpll
mov
sub
cmp
movsb
push
mov
push
jg
cs
inc
fadds
lods
fidivs
pop
sub
std
repz
cmpsl
mov
or
xchg
dec
shlb
aam
mov
cwtl
push
pop
and
movsb
cmp
lds
lahf
cmp
fmull
shlb
mov
dec
clc
notb
data16
lock
pushf
add
cld
scas
jo
ja
cmpsb
out
xchg
jle
cmp
dec
sbb
fcomps
cltd
jecxz
xchg
sar
pop
les
int
adc
and
jb
fldcw
add
dec
jle
mov
pop
or
dec
inc
mov
cs
and
lret
std
movsb
push
je
movsb
loop
add
in
cmpsb
add
out
fxch
fstl
jae
out
jecxz
pusha
aam
fwait
add
inc
std
pushf
sub
push
push
out
or
inc
std
xchg
push
testl
adc
andb
das
cmpsl
mov
mov
scas
rcrb
cmp
mov
pop
mov
dec
xchg
xchg
mov
mov
lahf
ret
or
bound
mov
push
test
jb
aad
test
js
in
xchg
dec
shlb
mov
gs
adc
cmp
lret
dec
or
pop
test
repnz
sub
push
lcall
jecxz
aaa
add
sub
pop
imul
js
clc
xchg
jmp
lret
mov
add
xor
jbe
iret
lods
loopne
mov
push
pop
nop
cmp
inc
popf
sarl
jbe
shl
icebp
dec
outsb
sub
shll
sti
fcoms
imul
jl
aam
rcll
js
loopne
mov
enter
jmp
sub
fildl
repz
je
dec
shll
in
inc
sti
lds
sub
test
mov
mov
xor
mov
sbb
outsl
jecxz
jle
adc
and
popf
icebp
js
leave
es
loop
les
bound
and
cmpsb
pushf
repnz
insb
xchg
add
in
cmc
xchg
lds
nop
fiadds
cmp
add
push
nop
xor
sbb
imul
mov
mov
mov
pop
and
daa
insl
ds
cmc
pop
xchg
pop
je
pop
iret
hlt
in
fidivrs
adc
neg
pop
outsb
leave
dec
dec
test
push
sbb
push
sarl
test
pop
inc
insb
imul
imul
inc
xchg
enter
mov
lahf
subl
int3
adc
ss
xchg
je
loope
sbb
add
fcmove
test
mov
std
in
xchg
fsts
cmp
pop
cmc
dec
add
ds
push
cmp
cmp
and
ret
xchg
xchg
and
pop
mov
cmp
mov
data16
push
leave
adc
sub
push
dec
hlt
push
fnstsw
into
push
cmp
fistpl
push
xchg
adc
or
mov
call
out
jb
out
in
andb
inc
jae
imul
cmc
hlt
and
in
push
xchg
loope
mov
jns
ja
jmp
or
xchg
push
or
lds
sbb
xchg
stc
stos
sbb
cmp
jno
mov
cmp
jo
outsl
sbb
sbb
aad
cmpsb
mov
inc
fsubl
andb
xchg
stos
dec
mov
pop
std
xlat
test
push
xlat
icebp
mov
in
cltd
sub
clc
ret
push
pop
bound
push
inc
loop
sub
cltd
and
aad
cld
dec
popa
in
or
push
fisubl
out
incb
mov
add
mov
pop
push
xor
scas
std
rol
fs
das
pop
sub
negb
sub
and
jnp
repz
jg
js
cs
cmp
fsubp
fimuls
enter
dec
xchg
jmp
rorl
jecxz
sbb
pop
ret
clc
daa
jle
fs
bound
stc
pop
and
fs
sbb
push
call
sbb
cmp
dec
roll
push
jmp
adc
pop
lret
lcall
xchg
mov
sbb
xchg
popf
cmpsl
adc
mov
jp
mov
enter
pop
mov
bound
mov
mov
ss
icebp
jle
add
out
mov
sub
and
movups
pop
cwtl
push
mov
inc
out
pop
inc
pusha
mov
xchg
push
xor
mov
jl
imul
inc
sbb
insb
mov
in
ret
push
xor
push
cltd
xor
mov
cmp
bound
hlt
shll
aas
cmpsb
in
pop
idivb
stos
imul
mov
jns
cmp
lret
jecxz
rorl
sbb
mov
push
in
sub
mov
cltd
shl
inc
lret
enter
dec
frstor
out
rorb
mov
xchg
or
xchg
ljmp
xchg
add
aaa
or
loop
dec
add
mov
outsl
sbb
pop
imul
mov
vcvtpd2dqy
dec
inc
js
mov
jge
stos
mov
inc
int3
outsl
sub
pop
fmull
push
call
xchg
xor
shlb
mov
jae
vpmacssdqh
or
pop
das
fidivrs
stc
adc
pop
push
pusha
scas
ret
dec
xor
mov
mov
jbe
test
push
mov
push
jne
inc
and
outsl
aaa
pop
aam
mov
cwtl
imul
mov
loopne
shll
addr16
inc
dec
cmp
mov
add
push
mov
jmp
nop
mov
add
stos
cmp
scas
sub
xchg
or
adc
adc
ret
lret
fs
lahf
out
or
push
movsb
jno
push
rcll
xlat
std
popa
jp
shll
mov
pop
pushf
enter
pop
scas
sub
sbb
cltd
push
jae
arpl
xor
test
jecxz
add
pop
in
xchg
mov
stc
ror
or
lods
xchg
inc
addl
add
lahf
xchg
xchg
insl
out
adc
imul
loop
cmp
shll
push
lcall
jg
ret
jecxz
cmp
sub
testb
cltd
fisttps
fwait
lds
sub
lea
shl
ljmp
xor
scas
ret
and
pop
adc
dec
out
shll
mov
push
mov
in
scas
aam
and
addr16
cmp
adc
rcrb
or
inc
mov
bound
fldenv
adc
cmp
je
mov
lock
add
lds
call
loope
mov
stos
xchg
and
loopne
adc
or
sub
ret
cwtl
shll
push
insb
outsl
cmpsb
add
dec
or
movups
mov
gs
rorb
mov
xor
bnd
enter
sbb
lret
lret
es
mov
mov
xchg
shl
sbb
dec
les
dec
inc
int3
dec
js
xor
mov
xlat
pop
mov
test
xchg
outsl
xor
lahf
shll
js
ret
popf
std
lret
add
jne
fdivs
dec
push
and
cmp
mov
push
xlat
insb
xor
js
lea
cmp
sub
jbe
fstp
jge
stos
mov
mov
sbb
fcmovnb
es
ljmp
out
or
sbb
sbb
dec
test
mov
movsb
jnp
mov
push
sub
jg
push
sub
popa
pop
cmpsb
pop
xorl
sbb
in
fiadds
neg
sub
or
mov
into
mov
test
jo
in
jb
mov
in
inc
jmp
mov
lods
adc
jge
out
mov
nop
push
shlb
push
movsb
mov
or
cmpsb
mov
imul
outsl
imulb
and
or
xor
popa
dec
xor
fsub
pop
fs
ss
test
fisubrs
jns
xchg
in
sub
add
xchg
cmp
jge
mov
dec
jecxz
adc
jmp
aaa
and
push
add
fs
sti
ds
addl
push
fidivrl
mov
ret
sub
adc
xchg
int
in
int3
imul
sbb
inc
loope
push
ds
sbb
mov
loope
jnp
mulb
xchg
pop
xor
movsl
mov
loopne
fmull
nop
inc
jno
jmp
mov
int
jmp
push
dec
pop
pop
mov
jle
in
imul
in
lods
jnp
inc
stos
push
cld
push
nop
mov
nop
shll
mov
cmp
movb
mov
cmpsl
dec
fildll
nop
shlb
je
test
adc
mov
jp
or
pop
mov
inc
or
pop
dec
leave
pop
repz
pop
orl
ja
push
mull
inc
xchg
and
adc
mov
sbb
ss
pop
pop
mov
adc
aad
xor
push
mov
pop
lock
fwait
arpl
imul
mov
push
lods
dec
jbe
insl
adc
fcmovb
push
and
jb
je
out
cmp
cmpsb
add
pop
push
outsl
push
outsl
push
notb
into
pop
cld
shrb
add
insl
or
xchg
fs
add
xor
scas
or
sub
adc
xchg
test
sbb
daa
loope
shr
mov
jb
jbe
shlb
add
mov
and
pop
mov
stos
mov
and
jle
and
lods
rcll
loop
and
addr16
shlb
jge
xorl
dec
mov
fcoms
cltd
lret
fs
push
push
es
mov
sbb
cmp
adcb
adcb
orb
adc
outsl
repnz
cmp
sbbl
or
add
leave
loopne
inc
roll
jne
mov
in
scas
fwait
cmp
in
in
inc
data16
in
cld
or
imul
movsb
sbb
daa
lahf
mov
cmp
int3
fldz
push
sbb
out
dec
push
lods
stos
xor
popa
mov
add
lods
push
sub
cld
mov
dec
repz
push
in
and
sub
cwtl
inc
addr16
adc
add
in
rcrb
cmp
ja
sbb
mov
jnp
cld
fldcw
test
js
fsubl
mov
push
loopne
fdivrs
xchg
push
mov
cs
daa
inc
jl
test
add
cld
jmp
mov
mov
xchg
ja
cs
cmp
mul
repnz
sub
inc
jle
cltd
add
and
arpl
fnop
jge
sbb
bnd
push
inc
sub
fstl
mov
push
aad
mov
mov
sbb
pop
les
mov
dec
jmp
sub
adc
rcrb
inc
add
pusha
mov
mov
jno
xlat
loope
or
push
in
pusha
mulb
jmp
popf
xor
stc
lret
mov
sbb
adc
mov
mov
test
rcll
iret
cmp
inc
add
mov
sti
pop
in
js
jmp
dec
pop
and
movb
rorb
mov
rolb
cmp
cld
sub
ret
data16
sbb
xor
or
lods
pop
xchg
and
adcb
inc
ret
xchg
mov
sub
pop
sbb
pop
call
ret
sahf
fs
mov
leave
inc
pusha
clc
nop
ja
lods
mov
push
mov
xlat
lret
lods
out
fwait
xor
and
lcall
dec
bound
sub
cmp
push
jge
mul
sti
std
sbb
test
mov
stos
jne
add
test
xorb
xchg
pop
nop
enter
cmpsl
jmp
stc
push
imul
std
rorb
es
jbe
add
push
stc
push
adc
push
xchg
test
cmpsl
adc
sar
xor
jle
jecxz
push
insb
rcrb
pop
jmp
popf
je
lods
ss
sahf
repnz
or
and
sbb
fmull
push
dec
adc
mov
jge
ret
sbb
sub
out
rclb
rol
in
pushf
sbb
test
loope
lock
xchg
sbb
push
fcompl
repz
pop
jl
je
inc
es
or
xchg
cmpsl
or
pop
cmp
inc
dec
pop
mov
cmpsl
stos
sbb
scas
xor
fildll
and
out
or
shr
adc
lock
sbb
subb
add
mov
scas
lods
adc
lea
mov
xor
js
add
ret
xor
aas
out
add
mov
mov
ljmp
inc
push
lods
mov
lods
jno
xchg
scas
imul
fwait
adc
sti
dec
xor
jl
sub
mov
js
sarb
iret
ret
insl
push
pop
loop
lods
push
mov
push
sbb
sbb
lahf
sbb
outsl
mov
xor
enter
mov
enter
and
ss
sbb
jge
ja
setge
or
cmp
out
out
cld
fucomp
sub
dec
push
pop
lock
aaa
xchg
and
xchg
jecxz
test
add
xor
fidivrl
pop
cmp
in
xor
stos
sarl
push
push
shll
mov
bound
into
and
lock
aam
add
jb
xchg
lods
out
pop
and
movsb
ds
mov
repz
mov
out
arpl
fwait
adc
sbb
lds
xchg
lds
xchg
cltd
outsl
roll
ds
mov
dec
sarb
lods
insb
push
adc
mov
test
dec
adc
xchg
dec
xor
or
in
leave
jns
shrb
movsb
fwait
std
jge
test
lcall
sbbb
xor
lods
mov
sbb
add
loopne
out
dec
test
mov
sub
jg
inc
or
jp
outsb
lods
mov
mov
mov
cmp
mov
jecxz
cld
test
cmpsb
jb
test
mov
push
lock
or
mov
and
daa
in
mov
xorl
or
fs
call
pop
ljmp
mov
jno
adc
lods
xchg
xchg
leave
jmp
pop
andb
inc
push
insb
pop
das
sahf
aas
fcomp
mov
jg
and
stc
dec
mov
xchg
xor
push
imulb
imul
jg
sbb
pop
pop
dec
xlat
in
bound
idivb
pop
gs
push
addr16
jne
inc
pop
pop
mov
aam
inc
std
fmuls
jae
xor
and
shrb
movsl
sbb
shll
xor
cmp
mov
jg
xorb
insl
adc
insl
jmp
in
and
add
das
mov
jne
add
ret
stos
lret
xchg
mov
or
clc
aaa
into
inc
xchg
sub
xchg
sarb
cld
xchg
and
mov
filds
mov
and
int
std
ljmp
jp
cwtl
out
daa
cmp
pop
enter
jns
outsb
adc
cs
push
loopne
jo
add
lret
mov
sub
sarl
cld
adc
mov
cmp
hlt
je
aas
out
nop
iret
sbb
mov
add
not
in
inc
dec
sub
lea
mov
shll
push
mov
int3
add
repz
mov
mov
movl
stos
push
mov
xor
or
and
decb
scas
mov
sbb
pop
or
rol
inc
lock
pop
push
jge
jmp
cmpb
pushf
rorb
daa
jl
pop
xlat
lods
jb
xchg
and
mov
es
jnp
std
in
out
mov
int3
sbb
jmp
pushf
xlat
lock
xchg
add
push
push
fs
idivb
aas
sub
add
dec
jp
and
out
out
sbb
mov
xor
mov
xchg
mov
aas
add
dec
ret
and
movsl
dec
dec
xchg
mov
mov
push
mov
das
push
icebp
mov
sub
repnz
scas
test
sub
mov
testb
mov
hlt
cmp
xchg
out
clc
aad
add
movsl
mov
sub
std
nop
repz
jmp
and
sub
daa
add
push
repz
in
sub
addb
aam
test
out
dec
icebp
adc
mov
nop
sub
pop
lods
icebp
fsubl
adc
addb
mov
mulps
mov
shr
loope
les
dec
ss
xchg
dec
jb
inc
aam
int
jo
inc
pop
outsb
push
and
les
mov
sbb
les
jmp
les
mov
mov
mov
dec
sbb
cld
jp
inc
or
sub
add
inc
rorl
xchg
sub
sub
setno
mov
xchg
mov
dec
xchg
sbb
fwait
mov
mov
out
dec
xor
inc
or
cwtl
pop
pop
pop
jg
mov
fs
and
push
add
popa
movsb
adc
lret
fistps
push
cmp
jge
jae
sbb
sarl
leave
imul
jl
imul
dec
dec
push
aam
es
test
mov
dec
test
push
push
adc
iret
push
pop
jp
movsl
xor
shl
mov
xchg
cmc
xor
mov
jp
hlt
sbb
push
repz
ljmp
xchg
dec
pop
sbb
mov
sub
outsb
jbe
sub
push
and
daa
push
pusha
add
xchg
mov
imul
jg
mov
fstpl
frstor
adc
cmp
push
sbb
jno
aas
and
jge
dec
movsl
sub
ret
pop
and
push
dec
or
jg
fisttps
cmpsl
cmp
addb
pop
inc
fldl
mov
into
sbb
and
shr
sbb
pushf
jno
je
push
push
xchg
sub
bound
mov
jp
xor
jmp
xor
mov
jnp
and
jns
imul
sub
push
mov
add
loopne
and
mov
xor
add
aad
das
dec
xchg
xor
repz
adc
lahf
xchg
push
pop
stos
dec
movsl
jge
mov
cmp
in
scas
movsl
add
mov
push
cs
out
dec
cmp
daa
dec
ds
pop
mov
call
fisttpl
xchg
lods
sub
cmpsb
mov
es
jg
insb
cmp
hlt
fwait
loop
cmpsl
cmp
int
jle
pop
sub
mov
pop
jecxz
jg
or
sbb
aaa
cli
push
pop
stos
push
add
aam
clc
xchg
sbb
andb
inc
insb
add
sbbb
insb
jno
pop
sub
out
sbb
aam
enter
xlat
fdivl
sti
enter
lock
sub
faddl
push
movsl
arpl
sti
pop
push
or
testb
add
dec
sahf
cmp
mov
mov
incb
fsubr
clc
adc
mov
in
lcall
aam
jns
cmpsb
pop
add
and
fidivrs
daa
push
xchg
jno
mov
stc
pop
cwtl
int3
das
jp
xchg
xor
icebp
movsb
cmpsl
fildl
jmp
arpl
adc
pop
push
sub
mov
mov
stos
inc
test
push
xchg
jmp
xchg
call
negb
aas
mov
int3
ljmp
dec
test
pop
xchg
mov
sarb
cmc
out
jle
pop
pusha
and
mov
in
pop
movsb
mov
and
mov
xlat
adc
cltd
sar
lods
xchg
adc
mov
loope
insl
shrb
fisttpl
inc
add
dec
xchg
sbb
and
fisttps
or
mov
lahf
sbb
cmpb
push
test
pop
xor
pop
xlat
inc
int
ret
sub
sahf
push
pushf
add
shll
shll
inc
je
std
push
cmpsl
xchg
sub
aaa
sub
fnstenv
mov
mov
repnz
fisttpll
pop
or
movsb
bound
adc
ret
mov
jno
push
pop
test
enter
xchg
push
and
mov
sbb
insl
adc
fistps
jns
loopne
dec
je
sub
es
add
cmp
push
imul
sysenter
add
mov
stos
loopne
xor
fwait
lds
push
xchg
mov
sbb
mov
lret
clts
xchg
mov
ret
adc
mov
dec
frstor
dec
sarb
xor
jle
push
and
mov
pop
mov
ja
popa
sub
mov
pop
mov
testb
inc
scas
add
mov
sub
and
divb
mov
nop
cmp
adc
add
inc
outsl
movsb
inc
mov
into
jns
sbb
jne
jno
jbe
or
xor
add
sub
lods
push
cmp
mov
add
pusha
testb
dec
dec
add
stos
mov
movsb
push
mov
adc
sub
ja
mov
notb
sbb
addr16
mov
pushw
inc
test
mov
xchg
xor
hlt
inc
cld
pop
stc
sbb
roll
cmpsb
jb
jno
mov
out
lods
xchg
aaa
add
jmp
jge
imul
add
jl
bound
decb
fstpt
cmpb
sbb
or
pandn
push
xchg
adc
icebp
adc
fdivrl
mov
insl
cmp
jg
adc
jnp
or
xor
pusha
push
sub
dec
jo
out
addr16
cmc
adc
mov
incl
pop
imul
lret
push
dec
js
cmpsb
in
lds
inc
roll
in
adc
push
jecxz
sub
sbb
push
dec
inc
fistps
xor
mov
loopne
push
and
cwtl
adc
lods
dec
fdivrl
mov
test
inc
mov
jmp
adc
push
testb
cltd
sbb
mov
movsb
stos
rcrb
ret
ja
lea
bnd
push
sbb
mov
or
les
inc
mov
mov
test
mov
repz
mov
in
mov
rorl
repnz
xor
mov
sub
and
adc
xchg
js
lds
mov
insl
pop
out
sbb
xchg
xor
cmp
outsl
out
outsl
cld
xor
push
int
imull
rclb
clc
cmp
enter
and
mov
xchg
cmp
outsb
fmull
mov
xchg
or
fsubrl
mov
sti
xlat
cmpsl
rcl
push
inc
and
xor
mov
lock
sub
fcom
and
cmp
ds
push
test
movsl
int
daa
push
bound
lahf
mov
cmp
push
xchg
or
xor
mov
insl
stc
cmpsl
adc
ss
loop,pt
stos
fwait
lods
pop
rclb
sahf
inc
ret
sbb
dec
xor
rcl
ds
pop
divb
dec
sub
adc
aaa
cmp
cmpb
mov
dec
test
adc
jge
mov
cmc
enter
lods
in
sti
xor
aad
push
lea
push
mov
mov
and
adc
push
aas
sahf
pop
sbb
cmp
movsb
lret
shlb
aam
sti
xor
mov
das
pop
and
xchg
lcall
mov
adc
fiaddl
xchg
sbb
fincstp
outsl
loop
imull
std
cmp
pop
xchg
xchg
cmp
icebp
jl
shrl
cld
sub
cmp
into
cwtl
pop
xor
cld
dec
sub
mov
inc
mov
sub
pop
pop
cmp
imul
stos
cli
insl
sub
jp
xorb
in
jne
and
stos
or
cmpl
adc
cltd
mov
push
cmc
popf
shrb
pop
and
out
test
scas
aad
cmpsb
stos
sub
push
cmpl
loop
test
sarl
popf
int
lds
or
rcrb
fistpll
and
in
cld
hlt
jle
sbb
in
jg
xchg
xor
mov
movsl
adc
int
mov
daa
or
in
je
out
outsl
mov
dec
out
test
adc
stos
insb
mov
cwtl
inc
jp
pop
sub
std
add
xchg
ret
arpl
mov
imul
addl
mov
roll
sub
push
mov
movsl
fimull
in
mov
stos
fs
lret
outsb
adc
jns
xor
in
aaa
call
sbb
xor
mov
inc
das
mov
pop
mov
cli
or
dec
lods
jns
test
filds
pop
cltd
lahf
repnz
imul
adc
testb
aad
xchg
sti
out
pop
loope
out
ret
dec
mov
gs
out
mov
js
sub
iret
imull
mov
xor
mov
mov
cltd
inc
push
lea
cs
pushf
jb
mov
push
jp
sbb
xchg
ss
fwait
inc
in
pop
leave
push
std
mov
adc
mov
aad
push
fistps
pop
and
mov
or
dec
call
les
icebp
dec
insl
push
fisttps
mov
mov
mov
add
sub
gs
aad
mov
fs
shlb
mov
pop
sti
push
jns
cs
ds
adc
loopne
hlt
fsubrp
mov
xchg
js
data16
xchg
dec
iret
inc
into
mov
xor
lret
aas
in
pushf
imul
xor
mov
cbtw
xor
clc
mov
mov
test
add
sub
mov
and
loopne
lods
mov
push
sub
cmp
ret
jmp
fistl
xchg
inc
push
cmp
movsl
xchg
lds
loopne
mov
inc
loope
mov
sub
inc
sbb
das
insl
mov
scas
mov
xor
sahf
dec
sub
out
imul
flds
push
xchg
lret
jl
push
sbb
pushf
mov
adc
aas
into
loope
dec
pop
push
xor
xchg
cld
add
xchg
out
inc
test
add
fcoml
aam
stos
inc
mov
loop
loop
scas
push
jbe
outsl
push
add
pop
icebp
dec
mul
fstps
add
mov
outsl
bound
rolb
arpl
mov
cmp
insb
test
cmp
pop
movsb
es
or
xchg
jno
idivl
jg
aaa
cld
jo
sbb
mov
or
and
add
sub
movsl
arpl
mov
xorps
inc
push
xor
into
addl
push
jmp
mov
jecxz
fildl
sbb
xor
cltd
dec
sub
jno
sbb
dec
lret
ficoml
repz
fimull
push
jmp
inc
mov
add
imul
clc
jae
das
notb
or
lds
dec
mov
add
xchg
and
or
ja
out
dec
dec
int
orl
xchg
int
cld
xchg
shl
mov
ss
ds
or
addb
mov
cmp
lds
add
pop
fcmovnbe
bound
addr16
mulb
in
gs
cltd
out
insl
mov
lahf
push
xor
mov
fs
jne
shr
adc
test
call
sub
push
add
add
jp
dec
xor
and
fs
xlat
adc
and
divb
cli
mov
outsl
inc
mov
jno
fldenv
jnp
cmpsl
inc
lret
mov
data16
mov
mov
xchg
cmp
bound
mov
movsb
push
or
pop
xchg
aas
lret
xchg
repnz
xchg
inc
repnz
adc
xchg
iret
add
scas
ret
movsl
jo,pn
dec
fisubs
mov
cltd
cmc
iret
mov
mulb
mov
js
movsl
xchg
aam
xor
push
shll
mov
int3
inc
stos
adc
or
jnp
int3
es
fisttpl
dec
and
ljmp
xchg
or
aad
add
or
add
flds
fwait
xlat
push
jg
add
adc
pop
inc
lret
inc
xor
addl
dec
cmp
push
js
scas
inc
mov
iret
pop
push
cmp
jns
lahf
lret
mov
mov
test
call
pop
jg
mov
mov
gs
and
lidtl
enter
mov
cltd
adc
movsb
sub
imul
xchg
mov
lahf
shlb
mov
add
and
inc
xchg
add
sti
add
or
sbb
fcoml
jg
push
fidivrl
dec
pushf
adc
in
lods
incl
loope
ja
xor
jg
sbb
subb
sub
inc
roll
add
xchg
mov
out
rclb
xchg
sbb
out
cmp
jp
es
jnp
xchg
loopne
and
out
pushf
popl
sub
sub
jnp
sub
lods
ss
lahf
std
les
js
pusha
in
jns
fistps
aas
out
or
mov
out
in
into
push
data16
mov
mov
inc
orb
pop
push
fld
mov
or
sahf
sahf
adcb
mov
mov
jmp
imul
jns
cmpsb
cmp
push
cwtl
add
lcall
push
dec
std
xor
jl
or
mov
dec
hlt
push
mov
ret
lods
jnp
insl
sti
pushf
and
pop
dec
fisubrl
jp
or
push
cmp
xchg
mov
ret
mov
sar
push
cmp
jge
dec
pop
dec
jns
cld
mov
fwait
ljmp
outsb
in
jecxz
call
push
push
mov
lock
movsb
pusha
data16
pop
leave
daa
fcmovnu
imul
pusha
negl
loopne
jmp
sbb
adc
add
push
mov
xchg
outsb
enter
mov
lods
add
inc
fidivs
mov
out
jg
push
ss
jle
jl
pop
sbb
movsl
pop
xchg
fidivrs
or
xor
or
aas
aam
adc
and
jecxz
push
sbb
aas
arpl
pop
int3
and
sbb
jae
sub
add
ja
cld
dec
orb
or
je
fdivr
cmp
ja
xor
mov
sub
addr16
add
lock
xorl
aad
xor
cmp
or
popf
mov
sarl
pop
mov
jg
movsb
sbb
popf
lods
lret
in
mov
sbb
adc
das
aad
faddl
inc
mov
mov
push
adc
pop
mov
mov
push
mov
mov
mov
mov
inc
cld
pushf
aaa
jle
fdiv
loope
fdivrp
out
out
add
cmp
out
ja
lods
pop
or
xchg
sub
xor
dec
pop
movsl
je
ja
mov
bswap
mov
inc
mov
arpl
stos
push
or
les
jp
dec
add
sbb
inc
loop
loop
int3
out
and
and
mov
mov
or
mov
lods
out
fwait
lcall
sub
iret
sub
pop
outsl
mov
fcom
push
sub
leave
fidivrl
cmpsl
push
and
sbb
or
lahf
pop
sbb
push
sub
add
mov
out
sbb
or
daa
and
aaa
mov
cmp
lods
xlat
sqrtps
mov
stc
sbb
mov
in
in
lcall
mov
aaa
pushl
dec
mov
and
xchg
push
dec
cmp
push
push
dec
fs
xchg
clc
jns
ljmp
adc
iret
adcl
scas
add
repnz
and
sub
mov
rorb
jb
jl
jb
sub
ljmp
xlat
add
adc
push
dec
inc
and
xor
sbb
mov
add
daa
ret
add
push
cmp
daa
add
jbe
jbe
and
add
cmpsl
adc
pusha
sbb
jle
mov
pop
jl
lret
add
sbb
sub
movsb
addr16
jl
inc
xchg
les
sahf
gs
rorl
pusha
or
push
dec
mov
repnz
and
sbb
xchg
imul
out
push
shll
mov
xor
jecxz
loopne
xchg
idivb
lret
addb
lods
imul
pop
mov
rcl
loop
mov
jp
lret
int3
add
and
pusha
aad
inc
loop
sub
xchg
and
jo
inc
lcall
pop
mov
daa
mov
sbb
rorl
sub
cmp
movsb
dec
addr16
mov
adc
addr16
add
mov
push
mov
pop
sbb
jmp
les
xlat
aam
mov
dec
in
jae
jo
dec
push
or
and
fs
ja
sbb
inc
mov
arpl
sbb
jno
push
lea
aam
or
shr
lret
pushf
bound
jl
sbb
ret
scas
sahf
jo
fsubrl
xor
pop
dec
add
repnz
aas
jmp
adc
or
aam
fwait
mov
pop
push
sub
push
decl
adc
std
sbb
andl
jnp
loope
imul
fcmove
outsl
mov
aas
stos
add
fs
jns
and
fcmovb
jmp
or
lds
addr16
push
mov
cmpsb
push
cmp
xor
rolb
inc
incl
cmp
imul
outsl
and
test
addl
xlat
and
mov
loopne
push
sub
popa
jp
xchg
ja
ss
out
mov
cmp
sub
pop
lods
dec
sub
ljmp
popa
ret
ficoml
bt
and
xor
or
push
xor
nop
cmp
and
or
mov
pop
in
and
pop
push
cmp
iret
add
f2xm1
sbb
js
mov
dec
push
add
jbe
xor
and
fwait
push
sbb
popf
add
xor
inc
and
mov
and
lret
adc
aad
imul
int3
mov
lret
cmp
lcall
shrb
xchg
sbb
outsl
out
adcl
addr16
lret
mov
int
jge
jecxz
mov
insb
enter
outsl
cli
jmp
popf
pop
jbe
test
inc
dec
mov
in
mov
push
imul
ret
int3
mov
stos
sbb
dec
aad
gs
test
insl
test
mov
fidivrs
mov
loope
hlt
jecxz
std
loop
cmp
xchg
sub
arpl
bound
push
xor
stos
fcmovbe
pop
test
mov
in
fs
les
ds
insb
mov
loopne
movsb
lcall
jno
inc
mov
inc
xchg
jb
dec
das
out
dec
clc
jg
xor
dec
and
sub
sbb
pop
lods
and
cmc
cs
push
sbb
stc
push
inc
stos
lock
mov
fsub
mov
rcrl
dec
std
loopne
jecxz
cmp
pop
pop
js
mov
xchg
in
fadd
mov
sti
inc
push
or
mov
xchg
aaa
and
fsubr
pop
xchg
and
xlat
enter
and
xor
loop
push
dec
and
cld
inc
jle
mov
loop
cmp
loope
lods
sub
push
jae
mov
mov
fidivs
push
std
push
leave
in
inc
xor
sbb
mov
dec
clc
cs
movsb
test
jg
test
stc
jbe
insb
add
xor
cmp
fs
add
js
bnd
mov
sub
lods
das
jle
xor
jmp
fwait
jmp
add
inc
aad
inc
fldl
addb
idivl
add
pop
mov
push
and
frstor
cltd
mov
xchg
adc
enter
cltd
lret
pop
pop
shlb
mov
dec
outsb
mov
dec
rolb
repz
adc
mov
mov
loop
jno
push
repz
repnz
sbb
enter
mov
sub
cmp
or
mov
fidivs
adc
inc
cltd
mov
lods
push
inc
pop
mov
aad
out
sub
call
scas
fdivr
add
loop
sbb
cmp
add
lret
sub
lcall
lods
adc
pop
jae
sbb
mov
and
pop
sub
xor
mov
std
mov
adc
xor
pushf
fsubrs
pop
jbe
xchg
dec
sti
push
sub
arpl
fcomps
mov
mov
out
jp
insl
gs
push
test
push
inc
fldt
js
xchg
xlat
mov
js
xorl
jl
pop
mov
push
aam
jo
hlt
and
jle
pop
xor
cmpl
frstor
dec
lods
fcompl
cltd
jmp
scas
xchg
push
adc
sub
jp
pop
dec
dec
out
enter
pop
push
lcall
mov
push
insb
mov
sahf
stos
test
cmp
andb
add
and
in
js
rcrl
aam
leave
or
lds
das
test
imul
outsl
cmp
cmpsl
sub
xor
mov
sbb
mov
lea
cmpsb
mov
js
xor
scas
xor
pusha
pop
and
into
addr16
add
and
push
ljmpw
daa
stos
mov
push
jge
inc
stos
lock
push
roll
fnstcw
xchg
lahf
push
dec
adc
mov
insl
pusha
js
hlt
mov
out
push
push
xchg
cli
sub
push
mov
adc
dec
adcl
stc
cmpsl
add
mov
push
in
adc
sbb
data16
adc
cmpsl
cmp
mov
add
or
jecxz
dec
pop
ja
insl
idivb
leave
test
neg
inc
fcmovnu
add
movsl
and
leave
or
fsubrp
xchg
jmp
and
add
jmp
sbb
mov
pop
dec
addr16
test
xchg
xchg
sub
cli
inc
sbb
enter
add
std
jecxz
and
icebp
sbb
sbb
out
test
aad
pop
push
in
xchg
stos
cmpsb
cli
cli
fiaddl
xor
fucomip
scas
ds
and
subl
aad
mov
inc
fisubl
mov
cmp
out
jmp
in
popf
add
mov
sub
mov
mov
jns
mov
adc
adc
inc
push
ljmp
popa
pop
and
flds
sbb
inc
popf
cmpsb
addr16
mov
push
mov
frstor
fiaddl
sub
scas
cmp
xchg
mov
xor
jle
lcall
push
mov
mov
fwait
int3
push
outsb
xchg
and
dec
mov
sbb
add
stc
outsb
and
movsl
add
xor
faddl
or
push
and
xlat
imul
dec
ret
in
cmp
mov
pop
cmpsl
lods
out
movl
push
ljmp
bound
mov
inc
adc
pop
data16
sbb
out
dec
sub
mov
push
mov
jbe
or
das
cmpsb
dec
cld
pushf
mov
or
mov
in
lock
mov
add
xchg
jo
mov
or
or
inc
icebp
pop
sbb
add
xchg
xchg
je
inc
lods
pmaddwd
rcrl
xchg
jb
das
andnps
loopne
jne
repz
sub
add
lods
lret
mov
pushf
aaa
jecxz
into
mov
cmp
daa
and
insl
jl
loop
test
jo
push
out
loop
shrl
rorl
out
mov
daa
into
pop
inc
rorb
cld
enter
fsubr
mov
addl
rorb
nop
into
out
rol
lretw
mov
xchg
shlb
out
cs
add
xchg
xchg
jno
insl
das
inc
shll
ja
daa
sarb
pop
iret
push
sbb
lcall
ljmp
or
iret
xor
cmp
movsl
test
decl
or
addl
cmp
cmp
in
mov
xlat
sbb
negl
cmpsl
sub
aaa
xchg
inc
cmc
cltd
jge
dec
test
add
xor
outsb
adc
xchg
mov
add
mov
xchg
sarb
jb
inc
ss
std
loopne
mov
jb
inc
inc
dec
mov
sbb
paddw
popa
inc
adcl
shlb
jnp
jne
adcb
insb
aad
inc
sbb
sub
jae
jmp
inc
dec
inc
adc
hlt
cmp
pop
push
rolb
fisttpl
outsb
lock
mov
addr16
fsubrl
movsl
sub
adc
push
call
ficomps
jg
push
ljmp
daa
lods
jl
mov
or
xchg
loop
pusha
movsb
hlt
rclb
xor
or
mov
fstp
sbb
push
xchg
xchg
jo
ret
mov
shlb
jo
in
stos
cmp
push
leave
inc
sub
and
decb
dec
inc
push
arpl
ljmp
icebp
and
adc
add
push
cmpsb
mov
ljmp
jg
ret
jb
or
movl
adc
js,pn
add
testl
setae
jno
or
pop
cmpsb
dec
cli
mov
jnp
outsl
jbe
int
push
dec
push
jmp
mov
lods
mov
cmp
jmp
in
xor
pusha
mov
in
mov
out
dec
inc
out
bnd
mov
push
xor
xlat
pushf
adc
std
cld
add
adc
adcb
loope
ljmp
cmpsb
xchg
test
and
fldenv
dec
mov
xor
cld
sbb
dec
sbb
mov
std
iret
sbb
push
lret
fwait
daa
mov
dec
mov
mov
jns
into
push
jp
mov
adc
stos
sarb
imul
dec
push
xor
dec
insl
shll
cmp
dec
jns
fdivrs
push
jge
inc
sbb
jecxz
test
push
push
subl
mov
enter
xlat
cmp
inc
pop
sbb
push
dec
xchg
data16
pop
out
xchg
fmuls
outsb
sub
push
rcrl
add
cmp
jmp
xchg
cwtl
mov
popa
test
pop
jg
xchg
and
daa
lea
neg
pop
inc
data16
cmp
fdivr
ljmp
fildll
data16
insl
call
xor
pop
pop
icebp
cltd
add
shll
lods
insb
xor
mov
push
push
and
hlt
adc
pusha
jmp
or
mov
push
sbb
scas
jns
stos
and
xlat
ja
scas
mov
cltd
std
loop
sti
insl
stos
arpl
in
push
cmp
fsts
test
shlb
aam
fdivrl
lahf
jo
test
lds
push
outsb
or
js
sub
adc
sti
mov
push
fmuls
int3
notb
xor
lret
ljmp
nop
pop
into
icebp
enter
call
jg
inc
mov
add
xchg
cmp
jmp
mov
cmpsb
sub
testb
hlt
lods
inc
mov
sbb
xchg
pop
test
fcomps
aas
les
out
scas
push
js
fwait
in
int
in
stc
jns
and
cmp
into
sub
stos
push
sbb
sbbb
repnz
leave
fs
inc
xor
stos
cltd
int
shll
popa
nop
arpl
insl
xchg
dec
loopne
ror
aam
push
sbb
call
inc
pop
repnz
mov
and
jno
stos
dec
mov
lret
dec
aad
aad
xor
pusha
cmp
mov
mov
mov
out
inc
push
insl
xor
lahf
mov
or
subb
add
dec
dec
or
adc
icebp
stos
add
inc
aad
clc
mov
aaa
mov
or
adc
and
out
cmp
es
out
or
xchg
jl
mov
dec
inc
dec
jp
jp
xchg
sbb
mov
inc
cmp
stc
fsubrs
push
outsb
hlt
mov
and
jnp
inc
ret
inc
pop
push
pop
xchg
cli
test
fs
mov
dec
pop
orl
mov
insl
jg
cmp
xor
mov
push
in
mov
das
mov
loope
xchg
int
imul
and
mov
adc
cmp
adc
rolb
pop
lret
push
dec
or
xchg
pop
in
outsb
jmp
fsubs
orb
sahf
add
inc
cli
jns
lods
pop
gs
inc
inc
nop
stc
rcr
popf
add
mov
mov
xchg
out
jp
or
mov
mov
out
lea
dec
inc
jle
push
xor
cmpsl
cs
call
xchg
pop
sub
dec
mov
idivb
jge
mov
out
jnp
out
add
je
lret
out
fisttpll
and
mov
dec
nop
inc
jl
leave
adc
push
mov
adc
inc
or
xor
es
rorb
or
in
mov
sub
or
xchg
mov
ss
jns
sub
xchg
push
push
dec
push
mov
clc
ds
push
pop
shll
inc
xor
lcall
and
jmp
jg
outsl
inc
ret
or
jbe
int3
pop
add
mov
sbb
inc
adcl
int3
jle
jbe
inc
and
push
scas
stos
repnz
add
inc
mov
loope
or
bound
ror
gs
cmp
xor
call
ror
outsl
fdivrs
insl
jae
out
shlb
adc
test
aad
jbe
mov
mov
xor
mov
ja
xchg
mov
rorb
cld
xchg
movsb
inc
dec
inc
mov
fcoml
les
data16
mov
mov
in
mov
mov
push
ret
in
les
imul
outsb
addl
mov
xchg
push
dec
pop
mov
sbb
cmc
push
cs
mov
insb
lret
aam
data16
adcb
xor
xor
or
jns
repnz
cmp
aam
stos
shlb
ja
subl
out
jne
out
aaa
pushl
in
in
xor
mulb
mov
out
and
dec
push
or
sbbb
push
clc
pop
cmpsl
popf
and
test
adc
mov
cmp
jp
in
xchg
and
mov
lret
pop
call
jno
test
or
in
xchg
movsb
in
push
mov
xor
icebp
cmp
sarb
je
cltd
icebp
rcrb
aaa
ficomps
mov
jbe
scas
mov
shl
pop
xchg
sbb
push
cmp
push
insl
mov
adc
cs
arpl
frstor
inc
cli
inc
mov
and
daa
add
xchg
sub
mov
push
pop
adc
mov
jg
stc
or
adc
push
pop
cmp
and
sbb
mov
jecxz
nop
mov
sti
cmp
scas
xorb
std
lret
sub
imul
pause
inc
xor
cltd
xor
sub
xchg
jmp
repnz
jns
sbb
stc
and
cmp
sbb
add
xor
std
and
and
fiaddl
cmc
push
push
repz
pop
in
call
loopne
sarl
into
cmp
nop
pop
loope
sbbb
js
int3
pop
lret
jne
test
xchg
xor
sbb
pop
jmp
outsl
inc
push
fcmovu
aam
jle
mov
ss
int3
lods
push
inc
lcall
popa
negl
scas
xor
leave
adc
int3
in
fldt
dec
stos
cs
xsha1
cmpsb
dec
in
jb
sbb
movsl
mov
fstpl
jmp
fldt
jp
xor
sub
frstor
cmp
rorb
push
xchg
loop
mov
pop
jmp
cmp
xchg
jo
mov
stos
inc
cs
adc
push
pusha
add
adc
in
add
push
sub
cli
shr
xchg
fs
jne
mov
dec
jp
mulb
mov
imul
mov
xlat
iret
push
xchg
xchg
pop
stos
ret
push
sahf
sub
push
lds
jne
push
jbe
xchg
inc
insl
mov
fidivl
push
dec
and
cmp
push
lahf
dec
mov
push
fcmovbe
jne
mov
mov
mov
xchg
scas
adc
mov
xchg
jo
push
clc
lock
fstl
inc
mov
aaa
imul
loope
lock
fisubrs
sbb
push
bound
imul
add
mov
cmpsl
pop
les
stc
stos
mov
call
sbb
lahf
inc
cmpsb
add
jp
mov
jno
push
unpckhps
mov
mov
add
mov
adc
and
test
pop
in
pop
push
out
fldl
inc
mov
or
inc
push
xor
xlat
icebp
out
subl
pcmpeqb
or
frstor
leave
push
sti
outsb
jle
pop
mov
jnp
dec
outsb
ret
mov
out
or
dec
enter
add
and
xchg
xor
inc
sbb
int3
in
jg
or
stc
adc
lock
push
mov
jb
in
mov
sbb
mov
lret
pop
in
cltd
ret
out
fld
aas
sbb
xchg
shlb
jecxz
in
movsb
xchg
movd
push
push
out
push
fisttpll
aam
addb
inc
sbb
push
test
jl
in
int3
xchg
adc
mov
cmpsb
outsb
ss
addr16
sub
mov
xchg
dec
test
sbb
pop
loope
mov
mov
jle
fdecstp
dec
cmp
cmp
ds
xchg
icebp
aam
mov
out
fdivr
je,pn
sub
and
mov
movsl
testb
aaa
mov
insl
dec
xchg
push
fwait
or
pop
loop
xlat
in
popa
movsl
insl
pop
lods
mov
mov
nop
in
int
ljmp
dec
jp
inc
ds
xchg
xchg
adc
in
pop
and
xlat
repnz
aas
or
jne
adcl
mov
movsb
xchg
xor
jno
add
pop
inc
dec
push
sbb
imul
add
mov
jae
push
cli
add
cmp
mov
inc
out
mov
je
xchg
xor
adcb
pop
sub
arpl
addl
push
inc
popa
xor
sbb
daa
push
jne
sub
xchg
fiadds
cmp
jne
xchg
aam
adc
in
cmc
shrl
fldl
repnz
add
adc
pusha
in
pop
mov
cli
inc
addr16
jae
xor
inc
mov
jb
pusha
pop
sbb
ja
leave
hlt
mov
push
aad
pop
std
lret
fcmovne
cvtps2pi
jl
push
xor
push
xor
repnz
aam
cmp
loope
push
and
mov
aad
rcll
fdivrl
sbb
ficoml
cwtl
out
call
add
push
mov
and
sub
bound
push
leave
jae
lahf
mov
sbb
mov
dec
test
lret
mov
sbb
andb
adc
icebp
xchg
and
fimull
or
sarb
sti
stc
sarb
xchg
imul
dec
sbb
fmuls
mov
and
sbb
push
mov
xchg
movsl
iret
rol
popa
std
sub
lcall
sarl
mov
mov
add
mov
jae
dec
lea
jo
in
nop
mov
push
xchg
xchg
jmp
mov
cltd
dec
ja
test
das
push
dec
clc
push
jae
stos
push
mov
test
icebp
xor
pop
lret
sub
les
jns
mov
pop
inc
cmp
add
test
not
mov
iret
lods
lret
jns
xchg
outsb
jge
dec
push
mov
ret
cmp
jp
in
jb
and
jns
iret
jl
push
mov
push
insl
or
pop
lret
push
mov
loop
mov
sbb
inc
hlt
xchg
push
push
test
out
repz
into
cwtl
dec
es
shll
mov
adc
lret
push
and
and
mov
in
cmp
subl
pop
adc
xor
stc
imul
pop
fdivr
into
jmp
push
popa
add
imul
xlat
mov
mov
outsl
divps
lcall
or
ret
mov
cs
inc
ja
jae
sbb
dec
lods
xor
into
pop
ja
sub
fs
cmc
stc
mov
fs
mov
cmp
cmp
cli
enter
negb
xchg
sbb
into
movsl
adc
pop
mov
fidivrs
enter
orps
mov
and
mov
pushf
adc
mov
cld
jle
pop
mov
adc
loopne
dec
dec
fnstcw
fiaddl
cmovno
rcrl
fsub
nop
mov
dec
out
fldl
in
les
fldt
cmp
rcll
stc
mov
jne
push
push
nop
cmp
or
push
xchg
iret
add
std
fildll
out
push
in
adc
pop
jg
or
mov
xchg
jo
outsl
movl
aam
rolb
jge
aad
aaa
aas
add
stos
mov
mov
sbb
mov
dec
jbe
inc
adc
mov
cmp
add
sub
lret
sub
dec
loopne
repnz
sub
mov
adc
sub
movsb
scas
dec
sbb
cmpsl
adc
sub
test
js
sbb
inc
pop
orb
rcrl
ret
pop
xchg
and
in
fadds
sbbl
adc
mov
mov
mov
xchg
ret
push
insl
stos
and
mov
mov
add
lds
cmp
or
rep
imul
das
and
out
jne
push
xchg
mul
jle
scas
mov
mov
int
xor
rorb
stc
mov
bound
cmpxchg
cmpsb
mov
xorb
filds
lea
in
lock
push
inc
pop
in
in
push
push
jp
leave
pop
xorb
push
ror
pop
xchg
pop
pop
push
stc
mov
into
mov
sub
and
aam
cmpsl
lods
outsb
cli
mov
jp
movsl
sbb
inc
push
loopne
xlat
sub
negl
adc
xor
xchg
mov
sub
cmpsb
test
sub
out
nop
add
fisttpll
test
loopne
inc
movsl
aam
pop
sbb
sub
mov
pop
divl
sbb
lods
cmp
xchg
push
xchg
adc
cli
mov
xor
repz
clc
idivb
or
inc
out
das
imul
dec
pop
add
and
jne
inc
adc
cmp
pop
push
in
mov
mov
sahf
into
jb
adc
ret
mov
lcall
sbb
mov
xlat
cmpl
mov
imul
xchg
imul
pusha
ret
daa
pop
fcoml
repnz
sbb
mov
cmp
arpl
push
loop
dec
sbb
push
ljmp
out
mov
lds
mov
mov
inc
fsubrl
adc
int3
ds
jecxz
sub
mov
in
jmp
adc
mov
inc
adc
popf
jne
aas
mov
stc
outsl
mov
mov
push
jge
xchg
or
sti
or
xchg
mov
lock
imul
xor
jno
call
rcrb
dec
movzbl
nop
cmp
loop
hlt
mov
lret
xchg
mov
xchg
leave
popa
fstpl
in
ficoms
jle
ror
test
mov
sahf
jo
xchg
fwait
scas
or
push
push
repnz
sbb
mov
xor
hlt
xchg
fnstsw
test
lods
dec
jno
and
jnp
sbb
pop
add
mov
repnz
ss
test
cmp
das
icebp
out
add
cmc
mov
or
mov
cmp
or
sbb
cmpl
sbb
data16
adc
sbb
push
aad
dec
sbb
adc
popa
mov
repz
pushf
mov
test
inc
lods
ret
mov
in
jne
add
sahf
adc
fs
inc
loopne
inc
fadd
xor
pop
mov
sbb
mov
and
shlb
addl
sbb
push
in
pop
sub
mov
dec
dec
adc
cmp
mov
movsl
mov
xlat
mov
bound
cmp
ret
mov
ficoml
dec
jecxz
xchg
pusha
dec
and
jae
sub
test
and
or
cmp
sub
repnz
push
inc
sub
pop
mov
enter
pop
push
movsb
add
repz
pop
mov
call
mov
cwtl
popa
rol
inc
lcall
push
jae
adc
movsb
and
out
popa
or
lds
or
pop
lret
mov
push
jae
inc
gs
cmp
or
testl
inc
mov
lea
loopne
xchg
ret
adc
lds
pusha
adc
aaa
adc
xchg
mov
sub
adc
bound
sub
or
sbb
mov
cmp
dec
push
pop
fdivr
jbe
adc
sub
cmpsb
jge
sub
push
mov
xlat
pop
jmp
clc
jbe
pop
inc
gs
xor
fwait
mov
sbb
cmp
jl
or
mov
in
lods
aas
fldenv
mul
addb
mov
or
cld
dec
jno
notl
daa
jne
cmp
cmp
mov
sti
sahf
out
dec
pop
imulb
cltd
push
mov
ljmp
and
ja
test
push
mov
xchg
call
mov
jmp
push
or
mov
and
cmpl
sbb
sub
fcmovne
jl
dec
aaa
shlb
push
dec
push
filds
jbe
xor
sbb
mov
xor
fisubs
mov
push
mov
add
xchg
mov
out
sub
xchg
das
lock
call
mov
push
xor
add
sub
mov
bnd
mov
out
dec
xorb
lods
or
mov
mov
mov
push
addl
dec
cltd
mov
xchg
mov
ficompl
push
sbb
ucomiss
enter
loope
scas
lds
add
pop
aaa
loop
fisubl
add
and
outsb
or
inc
mov
push
lock
enter
sbb
cmc
sbb
and
adc
and
mov
inc
push
sub
cld
inc
lock
iret
xlat
xchg
in
mov
xchg
aam
push
mov
add
aam
inc
mov
pop
mov
js
nop
imul
adc
adc
dec
in
mov
repz
lcall
inc
ficompl
les
xchg
in
in
cmp
inc
dec
mov
xchg
sbbb
addr16
adc
push
sbb
xchg
out
xchg
das
aaa
clc
loopne
repz
stc
rcrb
or
aaa
and
and
shl
mov
sti
es
in
ds
out
lret
js
jns
das
jmp
in
push
add
repz
data16
jo
test
stc
pop
out
popf
inc
shl
sbb
lods
dec
dec
js
cmc
rcrb
repz
inc
sub
ret
push
xchg
adc
cmp
stos
jae
and
movsl
and
mov
in
lret
xor
sar
and
movsb
orb
xchg
sbb
xchg
movb
xchg
shl
dec
push
cmc
adc
test
insb
pop
pop
cmp
lds
and
sbb
jle
test
xorl
lock
xlat
clc
je
push
std
cmpsl
mov
pop
and
aaa
imul
xchg
push
lods
xor
inc
add
mov
xchg
xor
std
adc
cltd
or
lock
int3
popa
jge
es
add
dec
and
pop
and
mov
cld
mov
sar
sbb
outsl
fwait
sub
add
jl
insb
cld
in
sub
sahf
sub
aad
and
sti
mov
jbe
mov
gs
push
dec
push
aas
in
xchg
fpatan
jge
mov
mov
shll
jbe
sahf
pop
out
mov
scas
sbb
and
bnd
ljmp
pop
push
mov
dec
scas
jmp
int3
sbb
movsl
rorl
test
dec
lds
lods
push
cltd
fstpt
hlt
fistl
out
scas
jb
mov
cmpsl
cmpsb
sbb
mov
test
mov
int
ss
cmp
jbe
or
hlt
pop
cmpsl
into
jg
scas
sbb
adc
rorb
cmpsl
into
add
icebp
add
adc
pop
mov
push
orb
dec
cli
pop
pop
lret
mov
fcoms
sbb
es
add
and
push
sub
rcrl
pop
filds
mov
into
xchg
add
add
cmp
mov
and
lret
fsubrs
mov
mov
xchg
out
ja
xchg
mov
push
lea
mov
push
jecxz
pushf
xchg
xor
js
add
add
sub
bound
repz
and
jl
pop
pop
push
pop
and
mov
loopne
aaa
ret
xchg
inc
aad
lods
xor
sbb
test
jecxz
jecxz
ljmp
jle
push
push
pop
jecxz
mov
xor
test
in
sti
loopne
adc
mov
popf
pop
outsl
pop
mov
mov
xlat
fcoms
push
sbb
aaa
cmp
push
loope
sub
fiaddl
ja
sub
mov
push
fs
mov
push
cltd
fucomi
gs
cmp
mov
pusha
dec
cwtl
sub
ja
or
mov
push
aad
scas
mov
push
bound
stc
lock
and
fs
je
shl
xor
and
outsl
mov
or
pop
fcomps
pop
test
add
imul
sbb
xor
dec
push
push
mov
sti
lds
mov
out
leave
lret
das
aaa
push
and
push
aas
push
mov
ljmp
inc
fistl
ss
test
loopne
jnp
xor
push
cmp
mov
jbe
aam
pop
enter
add
cmp
rcrb
mov
lea
icebp
inc
mov
mov
fs
dec
rcll
or
int
stos
ficompl
dec
or
adc
mov
mov
fldcw
aaa
cwtl
mov
out
cmpsl
jmp
je
jnp
pop
arpl
mov
push
into
jb
sbb
scas
adc
mov
subb
jo
or
ds
mov
xor
push
cmp
fistpll
aad
xchg
pop
jmp
push
or
or
and
pop
sbb
movnti
push
mov
xor
out
adc
fst
sbb
sti
jle
pop
push
movsl
sub
dec
int3
adc
enter
sbb
jg
sbb
das
fiaddl
adc
out
ja
loop
dec
lods
push
xchg
xor
je
sti
divb
xchg
dec
mov
out
mov
test
int3
lds
and
xchg
push
mov
in
leave
mov
dec
mov
cmc
pop
popa
jae
fcoms
cmp
or
add
popf
mov
sbb
mov
movsl
push
pop
mov
outsb
fistps
cmp
pop
or
call
add
sbb
mov
cmp
mov
mov
data16
cmp
add
mov
sub
fsubrs
out
mov
pop
fiadds
sbb
adc
cmp
outsl
in
mov
jle
xor
in
push
mov
rorl
and
in
test
addr16
bound
icebp
lea
mov
mov
add
in
test
stos
test
and
or
jle
cmp
fcomps
clc
in
hlt
pop
shlb
lods
or
sub
sub
adc
ficoml
fwait
dec
push
in
jmp
rcrb
rclb
arpl
or
push
mov
loop,pn
sub
cmpsb
cmp
rcrl
ret
test
add
cmp
jbe
and
push
sti
test
dec
adc
mul
cmp
mov
and
fistl
inc
adc
into
enter
testl
mov
ljmp
stos
cmpsb
pusha
xlat
pop
and
enter
dec
and
filds
jg
icebp
and
and
jmp
cltd
mov
cmp
mov
sbb
mov
cmpsb
adc
dec
adc
and
test
test
or
xchg
mov
lds
or
pusha
out
dec
push
sub
mov
scas
xor
xor
push
mov
add
mov
fstpl
xor
add
stc
loopnew
cmp
dec
pushf
pusha
mov
aas
xlat
lahf
aas
out
push
add
das
cmp
out
push
jl
sub
ds
add
rolb
test
loope
dec
xor
aam
xchg
loopne
xor
xchg
mov
and
sbb
mov
or
jge
std
jmp
pop
cmp
jle
scas
ret
jl
outsl
push
test
sub
shlw
push
dec
dec
shlb
cmp
fiaddl
lock
and
sbb
sbb
in
hlt
mov
rolb
pop
pop
pop
sbb
hlt
dec
pop
inc
pop
jbe
jnp
jge
lahf
jno
mov
xor
orl
inc
call
jae
aad
and
cmp
loop
std
and
clc
repnz
enter
repz
xor
test
and
sub
mov
xlat
daa
enter
filds
jmp
xor
sub
cmp
pop
gs
add
out
sub
pop
movsb
out
insl
add
cmp
dec
sub
mov
je
mov
add
pop
pop
pop
inc
jb
js
ja
lods
xor
lds
in
dec
adc
lds
mov
ds
aas
adc
push
or
xor
mov
mov
js
lret
aam
pushf
dec
out
dec
mov
insl
fistl
jbe
xor
iret
adc
scas
cmp
xor
push
cmp
sbb
cld
aaa
or
dec
push
in
sti
xchg
lret
xor
xor
inc
inc
inc
nop
scas
mov
mov
jno
sbb
push
jge
sbb
push
mov
dec
ret
pop
mov
lret
scas
sub
push
popa
push
cs
les
cmpsb
or
and
adc
dec
imul
or
fimuls
stc
pop
das
test
jmp
push
mov
adc
jns
pushf
jno
popf
push
mov
loopne
mov
mov
mov
bound
cmp
jne
jno
cltd
jp
es
xchg
sbb
sub
das
cmp
adc
jge
jbe
push
xor
jp
inc
ret
jb
int3
mov
fdiv
xor
cwtl
push
clc
popf
loope
xor
mov
adc
mov
xchg
jb
rcr
or
dec
pop
dec
loopne
outsb
push
add
or
add
lods
xchg
and
and
fs
pop
mov
and
jnp
and
xchg
sub
adc
lret
leave
mov
pop
fistl
gs
xor
jns
pop
jno
rcr
cmp
mov
mov
imul
les
xchg
cltd
dec
mov
cs
insb
imul
movsb
pop
lds
jo
cmpsb
fnsave
lds
and
mov
mov
loope
mov
and
ss
scas
cmc
mov
mov
shll
xor
cmp
data16
push
imul
pop
dec
cmp
xor
xor
hlt
test
insl
sub
lret
or
std
mov
or
repz
and
sbb
mov
out
mov
sti
jno
cmp
ss
inc
mov
insb
lret
aam
cmp
jp
dec
shrl
inc
xchg
mov
int3
fildll
fisttpl
repnz
fisttpll
lahf
fs
cmp
jne
mov
pushf
push
outsb
mov
in
pop
cmp
jnp
ljmp
ljmp
xor
imulb
mov
lds
mov
mov
inc
mov
mov
addr16
loop
popf
add
add
popa
lcall
cli
stos
mov
xchg
hlt
inc
mov
adc
addr16
int
out
scas
icebp
sub
add
mov
je
dec
fadd
cmc
mov
jmp
imul
mov
xor
test
lret
insl
jb
mov
gs
cwtl
adc
xchg
dec
test
loopne
or
out
outsl
fcompl
sbb
cld
dec
fildll
loop
add
testb
daa
add
mov
xor
insl
or
xor
out
or
mov
lret
and
lock
jb
arpl
shlb
adc
mov
out
cltd
mov
lahf
inc
fcmovnbe
and
mov
divl
int3
adc
mov
loop
xchg
pushw
or
int
insb
daa
mov
adc
add
aas
xor
outsb
adc
or
push
fidivrl
insb
shll
sarb
adc
sbb
dec
aaa
pop
daa
push
jp
xor
add
das
js
shl
mov
dec
out
mov
shrl
xchg
lahf
jecxz
ja
mov
ja
cmp
sti
arpl
mov
fldenv
mov
mov
mov
aas
lock
sbb
mov
stc
sub
test
das
sbb
test
aad
cmp
adc
cmp
add
lods
pop
push
sub
mov
push
xchg
loop
negl
mov
and
ret
xchg
cs
std
xchg
iret
int3
or
test
xor
daa
mov
bound
sbb
lcall
or
adc
jnp
fnstsw
xorl
fs
xchg
push
dec
loope
aad
cmp
xchg
add
or
cld
sub
sub
lods
jg
xor
lcall
cld
mov
pop
inc
js
jg,pt
fisubrs
scas
rorl
cmp
repz
push
xor
leave
mov
add
pop
dec
xchg
bound
out
shl
adc
inc
out
push
mov
xlat
testl
jecxz
add
pop
lock
cmc
fstl
cmp
inc
push
scas
adc
repnz
fisttpl
lahf
jbe
and
inc
and
lahf
dec
mov
push
je
sbb
mov
inc
lret
decl
pushf
addr16
mov
lcall
xchg
lret
in
inc
out
cmp
push
adc
mov
push
mov
jo
inc
lods
rcll
push
or
mov
es
sbb
out
in
out
mov
mov
fisttps
mov
es
rcrl
mov
push
insl
popa
push
pop
xchg
mov
loop
push
dec
negb
sbb
jmp
push
mov
jg
xorb
jbe
loope
icebp
jl
cltd
int
sahf
inc
insl
fwait
jecxz
pop
movsl
inc
jb
jne
pop
mov
dec
push
test
cwtl
xor
mov
cmpsl
sbb
subb
pop
and
sahf
add
jmp
les
fwait
adc
pop
lahf
sbb
aaa
nop
fdivrs
aad
cmp
out
ret
cmp
or
and
lret
movsb
jns
mov
mov
fldl
mov
std
dec
mov
aad
incl
mov
or
adc
pop
jg
and
mov
daa
push
subb
xchg
pop
xchg
push
or
xchg
scas
dec
stc
movsb
jbe
pop
jb
adc
aas
pop
mov
cwtl
cmp
sub
mov
test
mov
into
or
and
lea
ret
push
shrl
lds
push
dec
ja
dec
sub
insb
mov
or
sbb
dec
add
in
adcb
push
cltd
movsl
je
ficoms
sbb
lea
rcrl
pop
movsl
dec
aaa
int
xor
inc
imul
loopne
fists
pop
cltd
jp
in
imul
xchg
rcrl
loop
push
andl
jg
ficoms
aam
out
and
jg
mov
xchg
aam
mov
leave
test
dec
jae
cli
xchg
test
or
push
mov
leave
js
lahf
js
out
in
imul
mov
sub
and
test
outsl
fnstenv
and
jg
cli
js
into
jl
lock
cmp
jno
popf
inc
or
ds
push
test
jno
gs
fldl
je
mov
dec
ss
push
mov
fwait
pop
xchg
adc
dec
hlt
lock
pop
sti
or
lock
mov
inc
dec
lahf
pop
mov
filds
cltd
cmp
push
jge
dec
add
fiadds
xchg
xor
jb
in
xor
nop
push
fld
sub
mov
push
mov
ds
xor
inc
hlt
pop
or
push
mov
xchg
int
ds
test
jecxz
inc
daa
cmp
cmpb
jb
xchg
xor
cmp
lret
movsl
loope
xor
inc
aaa
cwtl
jne
push
loopne
and
xlat
adc
sub
jecxz
add
and
in
hlt
lahf
dec
mov
and
test
adc
pop
dec
mov
mov
ljmp
mov
je
xchg
icebp
rclb
addr16
mov
push
pop
inc
jl
and
push
in
into
fisubrs
in
dec
pop
inc
sub
adc
sti
mov
pop
dec
pop
sbb
jbe
lret
inc
andl
mov
mov
adc
enter
jb
xchg
lds
xor
ret
lock
mov
mov
cmpsb
sbb
mov
imul
cmp
cmp
mov
insb
jne
mov
ja
or
popf
or
mov
jae
hlt
leave
fcmovbe
push
inc
icebp
test
mov
into
jne
and
les
aam
inc
cmp
xor
int
test
adc
iret
pop
mov
aad
dec
jae
pop
add
lea
leave
mov
gs
or
rcl
test
mov
dec
add
leave
xlat
aas
imul
jns
outsl
mov
ja
adc
push
dec
into
mov
test
sahf
dec
je
outsl
sahf
je
push
sahf
andps
jle
aam
jno
sub
out
or
aad
test
nop
or
enter
dec
xchg
shll
adc
adc
xchg
mov
and
ljmp
and
cmc
dec
test
dec
mov
jge
or
jp
enter
push
inc
xlat
inc
aas
mov
cmp
arpl
pusha
sbb
inc
or
mov
pop
ret
mov
ja
and
popa
aaa
sub
fdivp
pop
fs
jecxz
inc
sbb
pop
dec
imul
lahf
cmpsb
and
fnstcw
lds
aam
xor
std
sub
dec
sub
sub
cmp
jne,pn
in
sbb
jge
jle
js
loopne
ljmp
fsubrl
movsb
jp
outsb
lcall
xchg
push
clc
out
fs
pop
outsb
lods
xchg
clc
cli
xlat
je
test
out
mov
or
xchg
dec
mov
aaa
and
popa
pop
push
mov
mov
ss
jno
jno
aas
xor
xor
bound
add
jle
ljmp
sti
mov
jne
xchg
push
iret
dec
cmp
jnp
cmp
xchg
and
in
mov
adc
insb
or
pop
sbb
stc
inc
insl
lcall
jnp
fidivl
cmp
and
adc
or
divb
xchg
and
xchg
mov
mov
nop
mov
mulb
add
dec
imul
push
in
xchg
xchg
and
std
xchg
lcall
jmp
into
lret
aam
push
pop
aad
sub
daa
hlt
inc
and
adc
ficompl
test
or
lret
addr16
xchg
icebp
stos
adc
or
stos
adc
in
std
or
jbe
mov
xor
jg
xchg
es
addr16
lcall
ret
jle
movsb
aas
or
outsb
mov
loope
push
push
in
loopne
sub
push
sub
ja
xchg
xchg
xchg
out
sahf
push
nop
jnp
test
cmp
aam
fadds
xor
jge
fnstcw
add
pop
pop
mov
std
rorl
sub
push
mov
outsb
in
adc
jne
popa
bound
adcb
das
fdivs
outsl
dec
cmp
sti
pop
mov
mov
aam
out
addr16
cmpsl
sub
xor
test
or
insb
and
daa
sbb
fwait
mov
cwtl
and
iret
mov
dec
mov
push
lods
or
lahf
out
jg
aas
lahf
or
sub
aad
mov
sbb
push
mov
aam
dec
ljmp
cmp
and
ss
pop
mov
dec
adc
clc
push
push
leave
fwait
xor
popa
ljmp
xchg
jg
or
sahf
rorl
ja
movsb
mov
loop
push
cmovl
cmpb
roll
pop
cld
in
mov
ljmp
hlt
and
inc
fisubrl
pushf
shl
adc
xchg
pusha
xor
addr16
js
jl
push
sahf
pop
push
imul
shr
pop
jmp
lcall
xchg
inc
xchg
mov
out
loope
sub
repnz
adc
sbb
add
mov
sbb
shl
push
leave
call
adc
xchg
xor
add
inc
push
cltd
adc
jecxz
jg
outsl
push
ds
dec
sbb
das
inc
hlt
insl
add
cld
sub
add
movsb
out
gs
dec
cmp
lds
xor
adc
xor
andb
cmp
push
or
push
mov
push
pop
dec
sbb
dec
sbb
add
and
sub
outsb
stos
aad
sub
fstl
movsb
stc
in
lea
popf
add
xchg
mov
pop
mov
jecxz
je
sbb
loopne
mov
fadd
sar
gs
lods
push
xor
mulb
push
dec
inc
lahf
mov
mov
xor
and
ljmp
fcomp
sbb
mov
faddp
lret
mov
imul
xor
xlat
xchg
mov
pusha
mov
jg
aas
inc
int
mov
pop
sarl
outsb
call
add
leave
mov
mov
ficoml
push
add
gs
add
outsb
jbe
aad
inc
cmp
pop
mov
inc
not
fstl
mov
adc
stos
movsl
adc
into
ret
shll
xchg
ret
iret
bound
out
in
mov
sub
adc
cmp
repnz
es
clc
lahf
adc
cmpsb
sub
add
out
lock
xchg
and
pop
pop
dec
sub
test
clc
dec
xor
jbe
and
inc
mov
dec
adc
int
jbe
dec
xchg
or
mov
pop
mov
aas
jge
push
sub
sbb
and
lods
inc
sbb
nop
mov
cmpsb
xor
push
stos
ja
lcall
mov
repz
xchg
mov
mov
push
mov
or
test
mov
push
cmp
jecxz
mov
jmp
mov
fildl
or
nop
loop
mov
sarl
hlt
jnp
cmpsl
add
sub
inc
test
sti
sub
std
mov
jmp
mov
cmp
fs
jb
ret
mov
lcall
pop
pop
or
mov
insl
cmp
bound
insl
dec
ret
mov
test
pushf
add
gs
lret
sub
cmp
sbb
sbb
in
mov
adc
jns
bound
rcl
adc
adcb
add
mov
mov
sbb
xor
std
jae
push
pop
out
push
orl
adc
mov
mov
test
popf
aas
or
dec
inc
in
fdivp
pop
inc
xchg
lea
out
lods
or
cmp
jo
lcall
int
into
cmpsb
and
lea
sbb
sbb
loop
fisubl
sub
adc
pop
int
pushl
inc
mov
jmp
sarl
cmp
sub
xchg
insb
shrl
and
bnd
mov
inc
or
sti
inc
outsl
sbb
iret
addr16
fstl
in
fs
jmp
repnz
lods
mov
ret
push
sar
or
sub
fcom
push
jo
fiadds
xchg
pop
fdivrs
cmpsb
cwtl
enter
mov
mov
xlat
mov
cmpb
xchg
test
xor
push
popa
sbb
out
adc
jbe
xor
jge
dec
mov
sbb
loope
inc
adc
mov
pop
out
sub
in
int
in
loop
lret
insb
add
pusha
xchg
imul
pop
jl
aas
les
xor
cmp
stc
or
test
sub
ja
scas
out
jo
xchg
dec
mov
mov
jns
or
push
and
in
add
loopne
pop
mov
popa
or
sbb
inc
add
dec
and
sti
push
dec
pop
stos
iret
mov
cmp
into
xlat
xor
stos
push
lret
xor
jae
ret
gs
inc
cmp
lods
je
cli
add
and
cld
push
pop
sub
outsb
xorl
sbb
scas
push
ja
fdivs
aad
mov
mov
fnstenv
int
scas
pop
adc
outsb
repnz
push
leave
xchg
sbb
test
jnp
pop
test
pop
push
push
jge
and
shl
mov
rorl
xor
push
adc
or
pop
ljmp
dec
loop
fst
bound
jmp
mov
pop
jle
pop
xor
push
loopne
orb
dec
jbe
push
or
push
or
xchg
xchg
push
add
cs
lret
mov
fistps
aam
cmpsl
out
sub
pushf
aam
and
adc
jb
adc
mov
mov
cli
xchg
dec
or
push
mov
mov
aam
movsl
je
inc
scas
mov
inc
ficoms
sbb
add
xchg
cs
jecxz
cmpsb
dec
adc
ds
dec
enter
ret
mov
addl
shl
leave
lods
sbb
cmp
cwtl
jno
push
xor
add
mov
mov
xchg
int
inc
fildll
lcall
mov
push
and
cmp
test
rol
loop
das
push
mov
sarb
mov
pop
inc
mov
leave
adc
jle
bound
or
lods
movsb
cmp
clc
add
nop
inc
subl
sarl
pop
fmuls
cmp
fbld
pop
push
sbb
faddl
pop
leave
inc
mov
cli
cwtl
out
ss
push
adc
xor
ljmp
int
test
xchg
addr16
cltd
dec
xchg
and
dec
adc
or
adc
call
mov
sar
hlt
inc
xchg
push
cmp
mov
les
shl
pop
subl
sub
or
lea
mov
aas
pusha
and
inc
out
sbb
sub
cmp
inc
lods
and
sub
add
xchg
call
popa
sub
test
jg
imul
dec
jae
pusha
mov
mov
mov
imul
ret
pop
insb
xor
pop
sub
into
cmp
adc
pop
movsb
cwtl
pop
insb
scas
push
xlat
mov
or
pop
adc
and
jne
in
in
dec
js
fcomps
lcall
repnz
push
add
cmp
push
xchg
sbb
imul
and
mov
and
insl
xchg
loope
arpl
lahf
cmp
cmc
cmp
loop
out
outsb
aaa
insl
push
icebp
jnp
ja
mov
mov
mov
leave
cmpsb
or
neg
sub
aaa
mov
ljmp
fdivl
add
dec
lock
aaa
cmp
mov
adc
xchg
cli
outsb
jnp
or
aas
je
lret
loope
ds
mulb
fisttpll
pop
out
mov
jmp
cmp
ljmp
leave
clc
cmp
lret
adc
movsb
push
inc
xchg
adc
leave
loope
xchg
lret
sbb
call
xor
sub
es
adc
pusha
icebp
in
dec
aas
popa
add
jo
mov
stc
jae
mov
mov
pop
sbb
adc
and
jle
outsb
dec
fsubs
fwait
xchg
mov
sbb
popa
shr
pop
mov
sbb
aaa
dec
and
shl
mov
sbb
shrb
roll
loope
loopne
imul
dec
cmp
push
sti
mov
fistpl
sti
add
add
and
add
push
xor
je
inc
mov
sub
inc
adc
inc
shrl
aas
inc
push
int3
aam
mov
pop
outsb
je
lret
repz
out
lds
orl
xor
jne
pop
and
outsb
lock
xchg
mov
add
out
mov
or
cmp
jae
adc
or
out
push
pop
test
sbb
daa
cli
repnz
ja
dec
dec
and
std
fmull
adc
ds
aas
iret
ljmp
inc
bound
fmull
aas
push
les
call
into
sub
stos
or
cs
push
insl
mov
mov
sub
aaa
cmp
out
jmp
pop
subb
adc
outsl
jecxz
mov
mov
add
sti
xor
popa
test
testl
dec
in
adc
sub
mov
xor
andl
jg
lods
sub
je
xor
mov
sbb
ja
leave
fisttpll
sub
outsb
inc
inc
mov
add
adc
cmp
pop
inc
call
xorb
and
jp
lret
pop
call
push
mov
ss
sub
lea
test
insb
mov
cmp
icebp
stc
push
pop
pop
push
push
cs
aaa
fbld
sbb
aam
and
bound
jecxz
or
jb
test
jns
mov
or
jle
mov
es
in
mov
mov
out
push
mov
and
gs
test
sub
and
pop
jb
imul
sti
push
mov
mov
daa
push
lods
xor
outsb
xchg
add
pushl
or
daa
xor
imul
stos
dec
or
cld
pop
pop
xchg
dec
dec
in
bound
lods
jmp
mov
nop
outsb
jg
fwait
pop
lahf
xchg
jl
rolb
or
mov
ja
dec
inc
pop
xchg
movsb
pop
jne
cmpsb
das
mov
pop
ja
cwtl
xor
cmp
cmpsb
in
jae
mov
loopne
jl
mov
aam
or
jp
scas
movsl
ss
pop
mov
xor
insb
ficoml
inc
adc
int3
mov
or
mov
scas
aad
lods
addps
adc
stc
sbb
fs
lcall
pop
xchg
add
jle
lfs
push
mov
sahf
ss
cmp
nop
mov
xor
sahf
pop
loope
lcall
adc
inc
ficoms
mov
and
test
cwtl
pop
jg
jns
popf
mov
mov
test
inc
push
insb
mov
xchg
mov
push
cmp
popf
aaa
das
jmp
enter
fwait
push
or
xor
cmp
repnz
pop
out
ds
fwait
arpl
test
dec
lret
mov
sbb
cli
or
xchg
rcll
movsb
or
adc
push
mov
add
ret
jg
sbb
cmpsl
clc
repnz
push
mulb
cmp
into
dec
dec
mov
cli
dec
jg
repnz
notb
lea
cli
and
adc
jmp
sub
andb
test
or
scas
inc
sub
mov
inc
lods
dec
cld
out
jne
cmp
in
test
mov
dec
sbb
mov
cmp
decb
push
jle
movsl
mov
sub
scas
cmpl
inc
inc
imul
pop
mov
aaa
jle
inc
dec
mov
mov
cmc
in
mov
add
fcmovnbe
adc
scas
aam
push
rorl
inc
and
out
pushf
mov
adc
pop
cmp
jge
xchg
inc
inc
ret
or
sub
aad
mov
inc
mov
dec
dec
push
cs
and
out
roll
pop
mov
addl
mov
mov
adc
sub
cld
ret
fldenv
mov
cli
fisttpl
pop
fnstcw
shll
dec
jbe
outsb
fcmove
mov
cmp
sbb
jne
leave
jno
mov
cld
inc
insl
push
scas
add
cltd
and
movsl
mov
pop
push
popfw
fidivs
inc
push
xchg
push
shlb
mov
or
push
ds
pop
out
xchg
jnp
sahf
jmp
fisubl
and
inc
lret
dec
dec
filds
xchg
out
xchg
jnp
jb
lahf
xor
mov
adc
mov
xchg
push
cmp
mov
inc
cmp
sub
pop
push
dec
sub
xchg
jg
cmpsl
dec
dec
daa
sub
test
dec
jbe
cmp
xor
add
sbb
adc
sub
cld
jg
aad
je
inc
mov
adcb
dec
jle
or
xlat
mov
shr
push
push
pop
movsb
xor
scas
mov
fsts
in
mov
stos
ret
dec
sub
mov
mov
mov
ret
add
imulb
jecxz
cmc
lcall
addr16
sti
imul
mov
cmpsl
sbb
cwtl
xchg
lock
outsb
mov
cltd
in
stos
xchg
les
outsb
dec
cmpsb
fucom
sbb
inc
xor
bound
insl
leave
pop
sahf
dec
fisttpll
fcmove
jge
mov
jne
sub
sbb
ret
adc
pop
cli
in
and
push
test
shlb
or
mov
loop
sbb
and
pusha
push
add
rorb
loope
cmp
icebp
aam
xor
je
push
mov
in
pop
shll
mov
aam
xor
and
rcl
lds
pusha
pop
or
shlb
xchg
or
xchg
es
xchg
pop
leave
pop
jne
ja
jle
dec
cmpsl
jo
ret
or
sbb
adc
rcr
shrl
leave
or
scas
jecxz
cmp
sbb
ret
or
mov
inc
ljmp
ds
pop
cmp
daa
fsts
es
les
pushfw
je
lods
adc
mov
repz
jmp
cmp
ficomps
fadds
dec
out
jns
popf
xchg
aas
popa
mov
jb
gs
mov
pop
fmuls
mov
bound
cli
push
pop
sbbl
movsl
adc
adc
sub
mov
sub
add
adc
xchg
out
mov
push
fldt
jb
fs
jae
lret
xor
int3
lock
sub
repnz
cli
xor
jg,pn
ret
test
cmpsb
jge
mov
dec
mov
lods
addr16
fwait
sub
mov
lods
adc
inc
push
jp
pop
push
sub
add
mov
jp
inc
lret
sub
pop
push
fidivs
adc
ret
jb
hlt
lock
push
bound
cli
push
dec
adc
xor
push
mov
sub
dec
mov
push
push
in
inc
ficoml
scas
les
ljmp
sbb
cmp
stos
or
ljmp
add
dec
jb
sbb
mov
leave
mov
push
push
inc
mov
popfw
xchg
addr16
push
out
xorb
pop
push
int3
or
dec
and
ss
outsb
scas
and
scas
mov
xchg
aad
rol
xor
sub
mov
sbb
lock
dec
out
stos
xor
push
pop
mov
adc
arpl
push
mov
cmp
rolb
fcomp
xchg
pusha
push
mov
or
jno
subl
or
cmp
push
imul
fistl
xchg
cmp
scas
cmp
push
lods
repz
xchg
std
mov
sbb
dec
or
inc
push
stc
rol
jg
mov
push
mov
dec
sahf
dec
cld
or
lahf
push
enter
mov
pop
addr16
outsb
push
xor
fs
and
lcall
test
push
xchg
mov
pop
imulb
loope
outsl
mov
or
fs
or
lods
test
xlat
into
mov
ret
aas
pop
cs
cs
inc
insb
lds
mov
cs
notl
mov
mov
xchg
pushf
fcomip
cld
imul
inc
xor
jmp
mov
test
dec
adc
adc
ds
imul
xchg
loop
and
dec
repnz
dec
jns
add
in
loop
movsl
push
mov
aas
pop
dec
xor
mov
jge
or
sbb
mov
jne
les
push
arpl
cmp
lds
xchg
or
mov
add
fistl
cmp
cmp
mov
jg
or
andl
test
filds
stos
mov
fisubl
in
adc
xorb
and
cmp
add
lcall
xor
sbb
addr16
fld
xchg
cmpsl
mov
pushf
unpckhps
test
fyl2x
scas
mov
sbb
mov
cmp
xchg
pop
aam
and
push
cmpsb
dec
xor
sub
or
je
xchg
sub
jno
mov
iret
adc
arpl
enter
inc
insl
or
lds
push
cmp
or
dec
stos
ret
jg
mov
stc
xor
push
cmp
icebp
mov
ljmp
add
and
pusha
push
adc
mov
call
pop
push
mov
jmp
mov
push
adc
jo
test
xchg
lcall
sar
mov
rorb
jne
pop
push
or
outsb
cmc
lret
enter
in
and
lcall
cmp
sub
sbb
pop
add
adc
mov
ror
fwait
adc
mov
xchg
jle
inc
mov
mov
ret
mov
sahf
fistl
sub
outsl
inc
push
push
and
pop
adc
jo
jns
popa
int3
jb
scas
insb
or
pushf
test
les
lea
push
mov
sbb
jg
clc
fimull
sbb
sub
cmp
cmp
sbb
hlt
scas
xchg
cwtl
xchg
shrb
shr
aas
cmp
les
and
out
xor
dec
sbb
mov
adc
inc
loope
add
mov
mov
xchg
pop
xorb
sub
into
sbb
inc
idivl
pop
push
adc
adc
cmp
push
mov
add
ljmp
adc
lret
rolb
ret
and
cmp
ret
jnp
or
mov
rcrl
rcll
add
inc
mov
mov
fists
sbb
mov
mov
xor
aad
push
xchg
fisubl
mov
xchg
xor
daa
xor
xchg
mulb
xor
int3
mov
xchg
fdivrs
inc
jne
and
mov
divl
adc
fldenv
xor
mov
jmp
outsb
data16
jb
test
dec
mov
sub
jns
sbbb
xor
jp
rolb
bound
adc
outsl
call
inc
js,pt
lock
in
mov
ret
popf
pop
push
sbb
test
insl
mov
dec
jno
push
test
mov
adc
sub
inc
jp
xor
jge
mov
adc
jecxz
out
inc
cltd
or
push
daa
stos
imul
subl
push
ss
int3
cmp
inc
jb
or
cltd
and
mov
and
jmp
cmc
in
xor
adc
clc
adc
cwtl
lock
jecxz
std
xlat
jl
pop
lds
inc
add
cmpb
ss
mov
xchg
inc
xchg
loope
jae
loopne
mov
scas
xchg
pop
sahf
sbb
repz
mov
insb
dec
aaa
sbb
outsl
cld
insl
test
add
and
mov
dec
popf
icebp
call
mov
movsb
push
mov
sbb
sti
std
lret
cltd
imul
xor
inc
mov
mov
ret
mov
push
add
cs
sbb
mov
loope
jg
stos
mov
gs
out
lahf
xor
xor
in
push
popa
xor
jb
arpl
mov
mov
fbld
aad
xor
iret
adc
cltd
arpl
mov
pop
dec
jns
mov
out
out
das
in
subl
fbstp
pop
sub
jp,pt
cmp
jp
adc
push
arpl
jns
push
repnz
add
dec
mov
fldcw
mov
mov
mov
sub
dec
xlat
mov
js
push
in
mov
cmp
jne
loope
ja
pushf
jecxz
jns
xor
gs
iret
in
stos
sub
dec
mov
xchg
aaa
add
push
push
pop
mov
call
dec
jmp
aas
mov
sub
and
add
mov
loopne
inc
lahf
shrl
jmp
push
jae
test
and
flds
aam
test
pushf
sub
cmpb
or
enter
mov
pop
jne
test
rorl
cmpsb
mov
das
popf
xor
xchg
push
in
xchg
shl
stos
notl
jge
adc
aad
int3
mov
pop
adc
cli
adc
ljmp
into
mov
lret
es
push
les
aaa
mov
jp
cli
jo
mov
je
mov
mov
push
inc
adc
fisubs
lock
add
jo
shlb
mov
insl
xchg
loopne
dec
pop
out
in
xor
lret
lcall
pop
xor
mov
aaa
mov
int3
mov
imul
insb
ret
sbb
push
cmp
jg
sbb
rclb
adc
pop
repz
pop
cmc
jnp
push
cmpsl
push
xchg
sub
mov
fdiv
cmpsl
pop
adc
ret
cmp
mov
fisttpll
adc
lods
mov
push
and
icebp
push
cmc
and
lods
insb
andl
adc
mov
mov
xorl
jb
addb
into
std
pop
js
outsb
jbe
call
test
imul
lahf
pop
jae
movsb
cwtl
mov
inc
xor
pop
mov
sub
hlt
pop
test
js
mov
or
stc
sub
pop
mov
cmp
dec
mov
push
mov
cli
dec
test
daa
push
mov
aaa
or
enter
popf
xchg
inc
lds
inc
ss
jns
dec
into
inc
cmp
adc
sbb
das
cmp
loope
dec
jae
das
xor
inc
mov
fucomip
hlt
fstpt
enter
cmp
fdivrs
lods
nop
andb
add
pop
add
stc
mov
mov
mov
jb
and
mov
outsb
insb
add
in
cmp
push
lcall
sbb
clc
dec
xchg
sub
push
inc
adc
lock
outsb
xchg
nop
xchg
push
sub
addr16
lret
sub
loopne
test
sti
adc
or
lods
stos
cs
add
dec
push
mov
mov
scas
rcll
adc
xorb
sbb
mov
or
push
adc
inc
fldl
cmp
ficoms
add
test
les
mov
subb
lret
nop
mov
inc
lret
or
or
arpl
aaa
mov
adc
jle
lds
sti
cmp
aas
or
push
cld
push
fistpll
aam
mov
jnp
mov
xor
push
stc
xor
xor
jns
adcl
das
sti
adc
outsb
shll
loope
sbb
lcall
jb
outsb
and
jmp
adc
mov
jno
es
cmpsb
repz
pusha
sbb
lahf
sub
sub
test
out
mov
out
adc
mov
add
imul
mov
enter
scas
pop
cmp
sbb
in
inc
xchg
scas
insl
icebp
mov
add
inc
insb
xchg
test
xchg
shlb
rcll
cmp
fsubrs
xchg
les
xlat
fisubrs
inc
inc
fidivrs
ja
mov
insl
or
jb
flds
addr16
dec
pop
bound
push
ss
mov
pop
cld
fmulp
and
test
sub
xor
cld
daa
cmp
cmp
sti
dec
movsl
aad
dec
sbb
push
jl
cmp
adc
aas
xchg
mov
shlb
add
adc
pop
shll
in
mov
outsl
test
lea
inc
pop
pop
nop
xor
cwtl
pusha
lds
imul
cmpsb
ret
rcr
dec
xchg
ljmp
loope
sub
pop
in
jge
rorb
out
pop
push
sbbl
adc
inc
mov
mov
push
and
mov
aaa
repnz
aad
lret
xchg
push
inc
gs
push
int
sbb
mov
call
rorl
xor
loop
inc
jle
into
xchg
lods
mov
imul
jno
fiadds
push
imul
jecxz
push
dec
inc
push
ss
sub
cmp
mov
pop
mov
ret
call
pop
mov
or
xor
popf
xor
mov
cmp
lcall
mov
mov
shlb
or
dec
fstpt
jge
or
and
fwait
loope
inc
lods
loop
out
pop
mov
xchg
inc
add
dec
lcall
loope
cmpsb
jo
mov
xchg
jo
pop
adc
cmp
mov
stos
out
xlat
xor
mov
je
mov
xchg
shrl
or
and
test
xchg
loop
test
mov
aad
jno
adc
mov
ds
test
adc
xchg
imul
roll
mov
lret
xchg
cmpsl
cld
fxch
aad
xchg
push
idivb
lea
pop
lods
sar
mov
test
nop
and
jnp
cmp
xchg
subl
lahf
mov
cmc
pop
addr16
js
mov
adc
rorl
insl
andl
push
hlt
inc
sbb
mov
cmp
dec
jb
xchg
sub
and
xor
lods
je
dec
inc
add
lods
push
or
call
push
sarl
std
enter
not
jne
rcll
outsl
insb
fwait
out
mov
leave
repnz
repz
inc
pop
loopne
xchg
loop
sbb
mov
cs
stos
shll
pop
pusha
and
pop
jle
dec
add
popw
push
jnp
lods
es
fsubr
push
pop
adc
push
mov
mov
or
pop
xlat
and
lahf
mov
fs
pop
pop
shrl
push
sub
lret
mov
push
loop
out
cwtl
movlps
lock
ret
xchg
sbb
in
in
movsb
outsl
inc
mov
cmc
inc
sbb
mov
in
je
and
sub
pop
cmc
or
test
gs
int
loope
adc
shlb
and
pop
jge
mov
repnz
paddusb
sbb
dec
hlt
mov
adc
adc
cltd
jno
stos
cmc
mov
lret
sbb
imul
or
jno
dec
xor
sub
cmc
test
mov
gs
pusha
lock
leave
stos
and
mov
mov
pop
in
add
ja
stc
mov
addr16
fs
in
cmc
mov
add
aaa
in
outsl
cmpsb
int
ja
or
cmp
sub
leave
add
mov
daa
aad
lds
rcr
add
mov
xor
cmp
cmp
out
sbb
lea
adc
lds
jno
mov
lock
insb
pop
movsl
repz
and
xchg
add
dec
enter
push
mov
dec
call
ds
pushl
hlt
enter
push
cmp
lds
mov
fwait
fwait
xor
mov
mov
lea
mov
sub
movsb
sub
inc
xchg
jo
sub
adc
jecxz
push
test
scas
fwait
test
ficompl
in
xchg
mov
mov
inc
mov
or
jle
mov
repnz
push
rcrl
psubq
pop
daa
push
popf
xor
xor
dec
es
sub
sub
cmp
out
xchg
int
sti
popf
in
add
push
sahf
or
aad
fwait
jne
xchg
and
jns
mov
inc
mov
popf
sbb
cmp
repnz
sub
daa
shrl
mov
dec
lods
xchg
push
inc
push
loop
and
lods
xchg
das
mov
fs
out
lods
fistl
cmp
pop
or
mov
xor
shr
popf
pop
imul
add
int3
sub
push
xor
test
mov
out
out
in
shll
push
icebp
fimuls
nop
adc
xor
pushf
outsl
jno
arpl
mov
cmp
data16
sti
in
inc
stc
pop
imul
int3
dec
adcb
sbb
movsb
outsl
into
jp
sbb
and
mov
sahf
pop
movsb
repnz
ret
aad
push
popl
mov
rolb
ss
and
sahf
mov
loope
sbb
dec
add
movsb
dec
aad
sahf
adc
call
sub
xor
sbb
pop
repnz
std
and
ljmp
adc
xchg
repnz
sbbb
sahf
push
popf
add
jp
push
addl
insl
sub
pop
cli
dec
mov
or
js
negl
imul
cli
mov
cmpsb
clc
pop
inc
xchg
iret
pushf
pusha
push
test
hlt
xchg
dec
jmp
push
jp
cmp
mov
clc
mov
std
out
pop
xlat
dec
scas
fsubrl
lret
imul
dec
ffree
cmp
xchg
mov
mov
sbb
ret
jmp
xor
jp
ret
out
rcrb
fimull
jbe
ljmp
mov
xchg
jg
push
or
rcrl
jne
ret
push
idiv
adc
cmpsb
jbe
dec
adc
mov
mov
jbe
fs
out
lods
mov
add
dec
sub
maxps
pop
outsb
popf
jle
cli
or
outsb
inc
movsl
pop
add
punpckhbw
ljmp
mov
pop
mov
addl
lea
int
inc
mov
sbb
out
cltd
dec
stc
pop
test
mov
stc
push
jmp
adc
mov
out
fidivs
fists
je
ds
inc
sub
es
and
mov
push
jmp
pop
mov
adc
pop
roll
fsubl
cs
movsl
mov
mov
xchg
mov
mov
outsb
nop
int
loope
adc
idivl
and
call
mov
push
sahf
cwtl
lods
adc
fnstcw
mov
xchg
mov
jae
mov
adc
cmp
scas
pop
imul
aam
lcall
dec
outsb
mov
dec
ss
xchg
sbb
sub
ljmp
cmp
push
lods
out
lock
lock
mov
sub
or
xor
push
pop
fs
ret
mov
or
imul
or
sbb
bound
adc
adc
mov
leave
outsl
rcrl
xchg
xchg
and
pop
dec
aam
out
fldenv
bound
mov
push
cli
sahf
and
pop
gs
xlat
xor
cmp
outsl
sub
test
push
testl
push
clc
scas
push
loopne
in
push
mov
roll
cmp
stos
jecxz
in
mov
mov
sub
fsubs
out
pop
fadd
or
pusha
push
shrb
mov
shrb
pop
pushf
or
mov
out
aad
mov
mov
hlt
pop
mov
mov
pop
repz
xchg
and
and
inc
mov
lret
repnz
xorb
popa
cmpsb
push
shll
imul
or
mov
add
mov
sbb
scas
cmpsb
pop
mov
dec
into
inc
mov
loope
mov
out
lret
gs
or
gs
mov
cmp
in
sbb
xchg
xchg
mov
jb
lock
bound
ret
inc
stos
in
rcr
outsl
aaa
lds
pop
push
xor
test
fcmovnbe
pop
cmpsl
movsl
pop
popa
mov
pop
push
cmp
inc
insl
insl
push
mov
lods
adc
adc
outsl
fadd
xchg
mov
push
dec
push
popf
mov
aas
jmp
scas
imul
mov
shrl
sbb
shr
negb
dec
bound
pop
xchg
jmp
and
ss
pop
inc
jae
and
lea
outsl
sub
addr16
dec
pop
scas
lods
cld
dec
cmp
and
icebp
lahf
insl
fisubs
js
loop
and
fs
add
mov
das
pop
adcb
dec
cmpxchg
jb
cltd
mov
jmp
cltd
mov
xchg
pop
lods
mov
imul
inc
xchg
into
aam
jo
add
mov
iret
cltd
and
out
or
lahf
sub
or
add
data16
or
cmp
icebp
hlt
cmp
xchg
or
inc
in
test
insl
jmp
aaa
inc
inc
jle
add
repz
inc
mov
out
adc
inc
scas
repnz
ljmp
movsl
xchg
pop
add
pop
jecxz
out
push
aam
js
xchg
into
mov
fiaddl
aad
xchg
dec
jnp
jmp
add
rolb
jne
fmuls
addr16
pop
xor
dec
in
inc
ja
lock
fimull
dec
xchg
out
daa
sub
outsb
into
push
sub
cmpb
push
jmp
cmpb
mov
dec
cmp
in
cmp
push
pop
pop
dec
xchg
or
addr16
add
mov
insl
mov
mov
gs
ljmp
sti
xchg
mov
cmp
int3
sub
and
jge
dec
jo
es
test
fsubl
cmpl
mov
ss
ficompl
fwait
iret
lret
out
loope
mov
dec
xchg
fnsave
daa
test
adc
fnsave
jl
insb
add
imul
sahf
fstps
in
bound
rorl
push
xlat
mov
pop
lods
pop
pop
rolb
or
sbb
aas
mov
mov
ficoml
mov
jle
jns
aam
stc
inc
js
lock
rcrl
fnstcw
popa
and
add
sti
mov
repnz
inc
jns
sub
dec
pop
out
out
push
pusha
cli
adc
clc
xchg
push
xorb
or
gs
insb
ret
lods
pop
xchg
mov
mov
mov
aas
loop
movsb
cltd
xor
or
xchg
mov
pop
push
mov
sahf
loopne
xor
push
push
imul
loope
xchg
mov
sti
push
stos
pop
divb
or
or
jmp
push
dec
jmp
mov
inc
fisubrs
fs
pop
sbb
cmc
push
icebp
adc
xrelease
xchg
in
adc
mov
out
xor
push
in
lcall
cmp
daa
push
cmc
jno
push
mov
mov
inc
sbb
aad
push
jbe
inc
mov
les
xchg
loopne
in
mov
adc
cld
xchg
imul
repz
push
pop
dec
inc
repz
sbb
scas
fidivrl
cmp
arpl
xchg
xlat
cld
mov
cli
loopne
pop
cmp
mov
mov
cmc
pop
sub
mov
test
xlat
in
out
sahf
fisubrl
aad
hlt
testb
inc
xchg
and
mov
aaa
add
dec
push
jb
xlat
push
sbb
mulb
hlt
popa
ret
add
fwait
mov
arpl
or
inc
and
push
push
sub
rorl
mov
hlt
inc
roll
in
mov
cmp
add
add
dec
xor
test
mov
cmc
pop
out
stos
enter
or
ljmp
imul
lock
sarb
lret
insl
inc
outsl
cmp
jmp
pop
mov
mov
cmpsb
xor
add
outsb
popl
xor
stc
enter
jge
xor
out
aam
or
cmpsl
icebp
clc
jne,pt
inc
mov
push
pusha
loope
stos
sar
jne
jg
add
push
and
sbb
mov
dec
int3
mov
cmc
addb
push
or
sbb
cld
out
xor
call
jae
dec
pop
sbb
pop
add
int
xor
mov
xchg
push
jmp
fs
xchg
push
inc
dec
dec
sbb
lods
cld
hlt
mov
adc
aas
dec
sbb
pop
cmp
cs
mov
jge
nop
iret
shrl
push
cwtl
aas
xchg
xor
fld
lahf
push
insb
sbb
lret
fsubrs
mov
orb
fwait
test
xor
mov
adc
adcl
sub
mov
cli
lret
repnz
xlat
mov
stc
mov
test
punpcklwd
clc
dec
or
pushf
dec
xor
aad
andl
mov
testl
sbb
imul
test
outsl
in
imul
les
push
inc
stc
push
or
push
adc
mov
cs
xor
arpl
enter
ljmp
mov
cwtl
dec
imul
cmp
mov
xchg
dec
jmp
mov
insb
mov
mov
xor
sti
sbb
out
pop
movsl
xchg
push
sub
je
pushw
nop
dec
mov
inc
mov
push
sub
pop
repnz
and
mov
movsb
ret
inc
sub
test
sahf
add
ja
push
scas
pop
out
hlt
loope
pop
or
pop
call
ds
jbe
inc
je
sub
leave
les
outsb
out
jmp
movsb
jne
fistps
add
xchg
push
es
repz
mov
and
nop
push
xor
sbb
cmc
xchg
pusha
mov
lds
pop
push
add
push
test
ret
dec
orb
or
jnp
jbe
cmpsl
jl
ljmp
mov
pop
daa
test
push
mov
ret
mov
push
mov
and
mov
xchg
jne
inc
mov
sbb
mov
or
nopl
scas
rcll
dec
cmp
xor
push
and
cmp
sahf
call
inc
pop
mov
aad
mov
sbb
in
or
mov
lods
das
add
pop
test
popa
out
sar
incl
pop
mov
mov
or
mov
lcall
mov
xorb
jnp
pop
fldt
outsb
xchg
add
mov
lods
cmp
cmc
pop
rcr
inc
xchg
iret
nop
loop
add
sahf
ds
repz
add
addb
sub
jb
xchg
or
xchg
mov
xchg
insb
fisttpll
cmp
dec
adc
mov
outsb
int3
mov
sub
add
xchg
jl
sub
imul
int3
scas
mov
mulb
pop
fadds
decb
ret
out
stos
loop
sbb
push
dec
jge
mov
test
inc
xor
rcrb
lea
xchg
pop
mov
add
fstl
cmp
outsl
mov
cmp
push
ljmp
lret
enter
outsb
pop
imulb
mov
aas
push
addr16
sub
mov
mov
aaa
clc
sbb
and
sbb
frstor
ss
scas
add
jmp
loopne
movsb
fimull
test
inc
std
sarb
fwait
sub
inc
adc
mov
jno
test
arpl
in
mov
mov
push
pop
xchg
stc
mov
inc
stos
mov
pusha
and
xchg
sub
lret
popf
mov
jg
jo
cmp
mov
mov
rcrl
jge
xor
push
xchg
outsl
sub
test
inc
out
fiaddl
fimull
mov
xor
cmpsb
cli
inc
cmp
jns
insb
aas
dec
mov
arpl
sti
inc
jmp
sti
or
loop
mov
sbb
inc
flds
mov
fisubrs
sub
dec
cli
mov
insl
lock
sar
and
int
outsb
sub
popf
fnstcw
sbb
stos
xchg
mov
outsb
inc
push
adc
rolb
out
cmp
pop
jecxz
popf
ja
pop
inc
mov
rol
add
pop
outsb
movsb
pop
cmp
or
fsqrt
stos
dec
dec
push
xlat
mov
cmc
jl
cmp
mov
pop
mov
push
adc
je
push
les
ret
push
movsl
mov
outsl
sbb
dec
mov
pop
data16
lods
movsl
mov
cltd
dec
or
loope
lret
cmp
insb
nop
cmovge
sbb
add
icebp
jl
cwtl
jl,pn
add
js
mov
in
jb
jmp
fs
xlat
or
jle
mov
dec
outsb
outsl
dec
and
pop
jl
mov
mov
fwait
mov
dec
dec
mov
pop
and
mov
adc
push
repz
int3
emms
daa
jne
in
xor
mov
jecxz
dec
test
dec
movsb
push
ret
iret
mov
fs
fbstp
xchg
lock
jno
pop
not
jno
inc
push
adcb
mov
add
xchg
mov
cmp
lret
in
xchg
or
xor
lds
xlat
inc
cld
sbb
cmc
je
in
mov
mov
mov
dec
pusha
pop
cmpsl
not
ss
data16
fstpl
call
jp
and
pusha
in
mov
mov
adc
sbb
insb
push
lods
loope
pop
mov
sub
stc
mov
push
lahf
or
sub
fisubrs
sti
pop
int3
aas
xchg
push
mov
sbb
gs
xchg
gs
ss
cli
xor
add
mov
add
mov
sub
cs
es
aam
mov
outsl
sahf
or
push
add
mov
int
clc
xchg
jecxz
arpl
iret
inc
mov
xchg
repz
loop
addr16
ret
or
ljmp
dec
int
loope
out
sti
push
sub
rol
xchg
pavgb
add
sbb
add
cmc
andl
cmp
pop
inc
add
sbb
scas
inc
pop
pop
repz
jg
stc
xchg
xchg
aam
add
add
testl
in
add
mov
cltd
setb
ret
cmp
inc
insb
aad
jg
mov
gs
xchg
xchg
adc
stos
mov
and
jl
stos
or
cwtl
js
movsb
xlat
out
fsubl
scas
fmulp
mov
or
sub
pop
dec
rcrb
ds
jmp
mov
jae
jne
out
repz
cmpsb
xor
dec
pop
inc
ret
je
std
sbb
movsl
cmp
enter
aam
les
lret
cmp
dec
pop
xchg
mov
or
cmpsb
pusha
addr16
test
ljmp
mov
xchg
js
xor
aaa
jae
loop
or
push
out
mov
push
push
cmpsl
into
mov
push
pop
rcrb
fstps
push
pop
push
mov
sti
push
scas
lods
loopne
sbb
out
orl
lea
add
sbb
mov
lods
cmp
inc
cmp
nop
lods
add
daa
filds
pop
test
adc
pop
cmp
jno
in
in
mov
mov
shll
and
andl
divb
xchg
les
cmp
rclb
out
mov
xchg
or
mov
arpl
jge
xorl
daa
call
add
shll
add
ffree
inc
mov
mov
inc
xchg
and
jb
hlt
popf
jne
shr
lock
lahf
sahf
stc
test
and
push
in
sbb
stos
lock
cmc
out
mov
adc
rorl
out
in
or
cmc
and
int3
stos
es
out
scas
cmpsb
lods
mov
xor
aam
lcall
rorb
addr16
movsb
hlt
out
sahf
xchg
js
cs
dec
pop
cmpb
sti
loopne
xor
lcall
stos
std
imul
pop
cmp
inc
jecxz
cs
rdpmc
pushf
jle
stc
inc
jl
flds
pop
cmp
pop
dec
and
xchg
mov
enter
pushf
shrl
cmp
pusha
push
mov
testl
xchg
frstor
rolb
or
repz
das
stc
lods
or
enter
ss
jl
push
push
or
mov
loope
stos
ljmp
sbb
mov
push
sub
cld
test
push
rcll
fldenv
xor
xor
dec
test
mov
or
fcmove
cltd
pop
pushf
cmp
jge
in
adc
fdivl
dec
xchg
sbb
add
inc
int
and
pusha
data16
push
loope
ds
add
roll
imul
aam
pop
inc
je,pt
push
int3
inc
loopne
add
cwtl
sbb
fstps
cmp
sbb
lahf
test
movsb
data16
mov
into
sub
ss
or
add
cmp
iret
aaa
int3
lcall
pop
aaa
xchg
movsl
leave
inc
xlat
out
out
ret
xchg
negl
leave
xchg
clc
stc
rclb
or
sbb
pop
mov
in
push
nop
jae
mov
add
add
adc
xor
addr16
or
sbb
aam
add
push
out
pop
pop
lahf
pop
jns
xor
out
sbb
mulb
cmpsb
xlat
dec
jns
scas
fnstcw
test
mov
push
cmp
add
push
stos
std
jno
xchg
mov
inc
adc
jle
mov
std
mov
jecxz
aas
les
mov
cltd
jne
sbb
mov
in
add
cwtl
push
aas
or
nop
insl
movsb
jo
test
jg
mov
inc
mov
call
call
outsb
add
cmpsl
and
push
mov
cmpsl
sbb
ljmp
cmp
in
leave
sub
cmp
mov
sub
pop
and
ljmp
rorl
jg
sub
pop
scas
shll
lods
cmpsb
mov
cmp
jl
mov
jnp
mov
or
jbe
rorl
sub
aaa
sub
mov
lods
out
lea
jns
rorl
pushl
pop
jle
push
jge
sub
and
test
push
repnz
call
inc
push
jge
lahf
pop
ss
mov
fs
xchg
stos
fwait
arpl
or
push
xor
and
mov
lcall
pop
ror
sbb
stos
popa
lahf
pop
in
pop
sub
pop
pop
test
mov
jmp
jbe
dec
cmpsb
fisubrl
sti
or
jp
pop
je
sbb
pop
lcall
xchg
inc
adc
lock
movsl
pop
and
push
cmpsl
fwait
aam
hlt
test
psllq
lret
cmp
movsb
pop
push
push
and
pop
xchg
cwtl
mov
sahf
push
out
cmc
in
mov
int3
and
iret
xchg
leave
cmp
xchg
test
rcrl
adc
popf
ss
push
ds
les
cmpsb
insb
iret
popa
mov
or
shll
xchg
gs
stc
inc
sbb
icebp
sub
inc
cld
movsl
push
pop
jo
lods
xchg
sbb
xor
xchg
into
xor
jge
jg
sbb
pop
lret
pop
mov
imul
push
xchg
outsb
lret
push
test
xchg
and
fsubrl
clc
inc
cmp
add
bound
loopne
pop
sarl
push
mov
mov
xchg
push
add
fadds
popa
xlat
push
cmp
fcomps
sbb
lahf
cld
test
ljmp
fstps
mov
jecxz
xchg
fidivrl
lock
xor
enter
cld
aam
test
lcall
lock
inc
out
rol
dec
mov
pop
fbld
aas
adc
scas
in
add
lahf
jb
scas
add
mov
pop
or
ljmp
leave
loope
movsb
or
lock
mov
cs
fcoms
dec
mov
adc
or
das
mov
xchg
fnstsw
int3
mov
xchg
loope,pt
pop
mov
arpl
xchg
mov
adc
add
mov
gs
dec
in
push
cmp
mov
mov
cmp
jmp
mov
jno
lods
sbb
in
add
sub
mov
lea
cmp
pop
in
mov
daa
out
or
mov
aas
out
jp
push
sbb
icebp
sub
adcb
arpl
ficoms
jp
cltd
fldenv
xchg
mov
in
pop
testb
mov
mov
addr16
int3
aas
adc
inc
inc
out
sub
call
clc
mov
lods
loope
popa
in
and
mov
insl
or
xchg
adcb
mov
lods
add
push
lods
sbb
pop
fistpll
jg
lret
lret
add
pop
sub
or
push
pop
orb
neg
jmp
add
sbb
ds
jne
insl
cmp
andb
in
jns
cmp
enter
iret
fdivp
jne
pop
push
lods
cmpsl
mov
in
in
arpl
lret
popa
fists
add
fwait
ret
imul
ja
push
dec
sbb
and
push
cs
testb
push
ffreep
sub
cmpb
outsb
fs
sbb
add
adc
xor
daa
jle
lahf
rorl
cmc
stos
add
test
frstor
es
jno
test
adcl
cmp
xchg
pusha
lcall
shrb
mov
outsl
and
insl
inc
sbb
addb
sub
cmpsl
das
iret
mov
pop
pop
push
scas
add
fdivrs
inc
sbb
clc
das
cmp
push
dec
pop
ja
outsl
mov
rcl
push
std
inc
dec
dec
pop
movsb
jb
je
mov
and
push
int
repz
mov
xlat
dec
sub
out
loope
jne
adc
xchg
or
and
xor
test
mov
inc
loopne
push
mov
repz
ds
xchg
or
push
je
jne
lret
push
jae
pop
mov
mov
push
jl
and
pop
push
adc
or
mov
lods
mov
mov
aad
fistpl
adc
inc
inc
xchg
pop
pop
jle
into
lretw
je
loope
adc
cli
pop
ds
cs
push
mov
imul
stc
outsl
xchg
mov
outsl
ljmp
cwtl
out
mov
outsl
icebp
inc
mov
inc
push
fdivrs
lea
and
adc
inc
divb
jae
int
sbb
mov
adc
loopne
mov
popf
loop
inc
xchg
imul
jmp
aad
and
or
enter
bound
sarl
icebp
movsb
inc
enter
fadd
loope
in
or
mov
rcr
push
xlat
cmpsl
and
mov
push
mov
xor
idiv
lods
adc
dec
sbb
dec
sahf
jnp
inc
or
cs
das
cmpsb
xchg
xchg
inc
movsb
aad
jbe
enter
ret
xchg
aaa
popl
loope
fwait
sti
jg
loop
dec
das
cmp
and
std
adc
xchg
lcall
ljmp
nop
gs
dec
and
xchg
lret
pop
jno
inc
xchg
shll
xchg
or
pop
xchg
arpl
int3
mov
pusha
mov
stc
and
clc
ret
pop
out
xor
pop
adc
mov
fbld
ja
mov
sub
in
addr16
pop
ficompl
push
jne
testb
outsb
sub
jp
repnz
push
es
data16
mov
or
loope
int
cmc
jns
cmp
imul
in
jnp
pop
push
mov
fstp
mov
incl
sbb
stos
rcll
lods
adc
mov
mov
fildll
mov
cmpsl
xor
fs
in
fidivrs
pushf
push
arpl
and
cmc
out
push
mov
enter
xor
iret
dec
sub
ja
data16
xchg
out
aaa
pop
mov
mov
xchg
mov
jg
insb
addr16
mov
jle
addl
xchg
jge
adc
nop
and
ret
mov
mov
es
sahf
adc
daa
adc
mov
outsb
popa
xor
mov
mov
add
iret
dec
mov
mov
adc
xor
xchg
cmpb
xchg
sub
cli
repz
mov
popf
or
insb
push
leave
xchg
imul
popa
into
mov
out
fstl
lcall
test
xchg
push
repz
pusha
clc
js
popa
add
hlt
sbb
arpl
push
jns
add
movsl
pop
cmpsb
inc
outsl
jge
jo
pop
aam
push
test
dec
movsb
xor
xchg
jne
mov
das
fidivl
jbe
shlb
push
dec
out
int3
sub
or
adc
pop
dec
sbb
lock
pop
inc
cmp
arpl
int
xor
mov
inc
dec
mov
std
lcall
xchg
jbe
in
fdivr
cmc
js
pop
and
mov
insl
adc
aam
add
jae
mov
out
and
sbb
enter
sub
mov
sub
sub
mov
sbb
push
dec
sub
jo
jle
ret
jmp
jnp
inc
stos
loopne
rclb
xor
mov
push
mov
jnp
in
ljmp
movl
mov
pop
sbb
leave
xor
lret
jae
lcall
ss
xor
stos
lods
bound
xchg
mov
and
mov
in
jp
je
ja
and
in
push
call
loope
push
jl
xor
fucomi
pop
dec
je
in
arpl
inc
push
jecxz
jmp
lds
je
bound
inc
mov
inc
dec
jg
outsb
adc
adc
sbb
fimull
jecxz
inc
popa
push
mov
mov
and
or
cli
ljmp
sub
xchg
push
arpl
movsb
cmp
js
sti
adc
lock
push
mov
add
daa
pushf
sub
into
adc
jmp
adc
lock
cmp
lods
and
gs
test
push
data16
jmp
cmp
dec
shl
adc
mov
mov
xchg
hlt
inc
fldcw
jo
ss
push
mov
jae
xchg
adcb
sub
repnz
and
inc
xlat
test
clc
popf
fstpl
dec
jne
mov
fwait
sbb
jno
lods
cmpsb
clc
xchg
repz
inc
mov
adc
lret
dec
or
lds
sbb
adcl
daa
xor
xchg
cs
jmp
pop
bound
in
cmp
push
dec
dec
dec
push
adcl
outsb
scas
test
loop
insl
lcall
jp
ret
or
mov
dec
sarb
push
adc
mov
jmp
aam
xor
arpl
jb
rclb
xchg
stos
loope
and
fdivrs
xor
in
cmc
jle
shl
jge
pop
ret
test
sbb
cmp
push
mov
hlt
jns
sub
popa
pushf
sub
mov
xchg
xchg
pop
push
in
hlt
imul
dec
test
inc
sbb
dec
shlb
data16
cmp
sub
jmp
pop
inc
icebp
testl
push
or
sub
xlat
pop
pop
sbb
repz
pop
arpl
out
lret
mov
cltd
jmp
enter
xlat
sbb
pop
rcll
pop
lret
jno
push
arpl
cmp
mov
aam
add
scas
stc
ja
mov
pop
outsb
cltd
ss
dec
sub
lret
mov
mov
xchg
push
push
and
inc
dec
fidivs
sbb
fisubs
jl
pop
mov
add
push
or
mov
ret
out
aam
add
stc
mov
cwtl
call
or
hlt
arpl
out
ret
pushf
movsb
lods
ja
pop
or
lcall
iret
adc
je
sbb
fs
nop
lcall
xchg
pop
dec
xor
push
push
jg
outsb
andl
mov
mov
cwtl
ret
and
arpl
fdivr
test
cmp
cwtl
jae
cmp
push
in
inc
mov
pusha
inc
les
sti
pop
adc
pop
sub
or
imul
test
cmp
mov
push
cli
or
shlb
mov
mov
popa
jmp
jne
dec
inc
add
mov
hlt
pop
xchg
mov
mov
pop
mov
push
pop
cmp
and
addr16
cmp
std
xor
or
in
in
adc
int3
or
insb
dec
imul
pop
jmp
inc
rorl
and
dec
sahf
aaa
jns
dec
stos
jge
sti
adc
xchg
xlat
xor
xor
sti
arpl
add
pop
pop
pop
dec
jae
arpl
inc
lock
push
das
cmp
add
in
leave
xor
pop
mov
push
push
inc
aas
pop
push
xor
out
sti
or
jmp
push
xchg
fsubrp
xlat
faddl
ds
jae
push
idiv
or
xchg
sti
xchg
push
mov
call
cmpsb
jl
mov
cwtl
es
jge
aas
jle
or
xchg
jg
or
mov
sbb
sub
add
into
mov
enter
sub
adc
lock
lret
inc
scas
pusha
dec
add
push
jne
je
sbb
push
jp
and
mov
pop
sbb
pushf
pusha
inc
mov
lock
pusha
mov
push
xchg
inc
lea
or
adc
out
cmp
std
jg
jle
push
jno
loop
dec
mov
in
pop
out
sbb
popf
clc
push
fistl
xor
mov
adc
rcl
stos
xlat
push
nopl
jmp
sbb
inc
repnz
enter
xor
mov
inc
lcall
push
loopne
jle
fistps
sub
or
aam
push
xchg
rol
lds
jg
mov
mov
insb
mov
mov
ds
mov
dec
push
arpl
and
icebp
mov
sbbl
cmp
lahf
loopne
hlt
addb
movl
flds
pop
pop
out
in
pop
rorb
add
sub
or
jno
or
insl
repnz
enter
test
mov
lahf
cli
jp,pt
adc
adc
sahf
aas
push
loope
mov
ret
inc
adc
cmp
jbe
test
mov
es
gs
xchg
inc
dec
inc
push
ret
inc
and
rcl
ss
rcl
je
or
or
scas
test
mov
aas
out
lods
scas
inc
aaa
jnp
daa
in
in
idivl
jbe
add
pop
mov
bsr
arpl
cmp
lock
dec
cmp
cmc
xor
sbb
in
lods
pop
lods
push
mov
lahf
fisttps
dec
scas
xor
imul
clc
insl
test
xlat
mov
es
cs
push
cwtl
lahf
cs
xlat
stos
add
inc
insb
arpl
sub
outsl
pop
mov
mov
pushw
sub
mov
inc
out
inc
gs
icebp
rol
adc
dec
sahf
or
and
sub
and
and
sbb
sub
or
pop
sbb
or
adc
cmpsl
dec
lret
lahf
add
mov
scas
sbb
pushf
mov
mov
addr16
jo
sahf
icebp
mov
mov
cld
cli
je
lds
mov
sbb
mov
push
mov
jle
into
jle
jle
push
inc
add
ja
leave
insb
cmpsb
test
inc
iret
jnp
adc
mov
xor
int3
sbb
mov
jae
or
lahf
pusha
sub
dec
lret
addl
nop
or
mov
pushf
jl
add
inc
aam
mov
xorb
push
pop
fdivl
pusha
inc
pop
pop
pop
andb
sub
loopne
pop
mov
test
pop
pop
sub
cld
mov
sbb
bsr
fidivs
lds
jns
inc
pop
inc
and
pop
mov
repnz
adcl
scas
dec
adc
pop
out
or
lahf
cli
or
xor
cs
mov
mov
test
lods
test
inc
aam
pop
push
inc
dec
in
cli
ds
jmp
jb
push
jp
jae
push
ja
in
sub
scas
cmp
push
movsl
das
sti
cltd
bound
int
inc
sbbl
out
lahf
daa
jo
xchg
xchg
inc
mov
hlt
ret
in
hlt
sub
insl
and
push
adc
xchg
adc
jns
lock
lret
xchg
mov
jg
push
pop
jbe,pn
int
aad
mov
fucom
xor
bound
jns
cwtl
call
mov
out
gs
dec
sbb
xor
cs
and
dec
test
dec
dec
loopne
and
cli
inc
cmp
ds
mov
dec
push
or
cwtl
in
fists
jl
inc
lods
add
mov
push
enter
ss
xlat
orb
mov
pop
jmp
in
mov
imul
addr16
cld
mov
xchg
imul
jg
xor
adc
sub
lea
icebp
push
repnz
addr16
inc
loope
and
jb
insb
lds
lods
adc
out
inc
ljmp
jnp
pop
mov
mov
xchg
roll
mov
and
inc
lret
outsb
sbb
push
outsl
fldcw
out
negb
mov
dec
xchg
jnp
outsl
sbb
sbb
cmp
jmp
mov
fistps
or
mov
add
or
and
cmpsl
xchg
or
xchg
outsb
leave
mov
jns
daa
icebp
fnstcw
jmp
js
push
xchg
xchg
pushf
adc
shl
lea
adc
lds
jae
add
push
cld
loopne
test
jne
mov
dec
adc
pop
inc
loop
and
jmp
push
shll
xchg
or
outsb
xorl
test
cmpsb
outsb
ret
dec
imul
or
inc
clc
fcomip
jmp
mov
jg
dec
inc
jns
rorl
rorl
mov
je
mov
cmp
es
lahf
mov
fidivs
sub
gs
ficoml
rcrb
ja
mov
in
test
std
sbb
fs
outsb
into
fdivrs
ljmp
mov
in
adc
mov
loopne
scas
push
mov
test
hlt
pop
dec
sbb
sarb
faddl
data16
push
enter
sub
cmc
leave
sahf
jb
adc
push
or
stos
adc
mov
cmp
mov
movsb
jns
add
pop
pop
in
shrb
mov
add
lret
jbe
inc
sbb
loop
push
pop
loop
cmpsl
jl
xorl
xor
dec
cli
scas
xor
cld
inc
mov
cs
inc
add
inc
lods
test
lahf
shrl
or
pusha
pop
scas
xorb
xchg
jbe
stos
sub
jb
roll
or
push
sub
lret
fwait
mov
std
outsl
pushfw
inc
sbb
push
out
and
test
mov
jge
adcl
mov
shlb
mov
inc
sub
loopne
xchg
dec
cld
les
push
adc
inc
sub
lods
mov
in
mov
add
ds
in
mov
and
inc
push
pop
mov
push
popa
divl
push
stos
fdivl
dec
shr
sbb
cld
pop
bound
jecxz
xchg
cmp
push
ja
loopne
xlat
imul
sahf
in
aad
sbb
jne
push
jmp
imul
bound
and
mov
mov
sbb
mov
ja
nop
add
je
arpl
stos
push
les
ret
or
jge
scas
xchg
jbe
xchg
cmp
or
ja
clc
insb
scas
test
push
notb
lcall
or
aas
and
sbb
ds
sahf
push
popa
pushf
out
inc
test
js
sub
jmp
jae
imul
lcall
cli
push
stos
or
or
std
add
xchg
pop
cmc
sbb
inc
idivb
pop
pop
dec
add
es
pop
fsts
out
or
rcll
fimuls
in
pop
icebp
mov
add
sbb
into
mov
ret
icebp
sbb
xchg
loop
sbb
jp
imul
pusha
mov
inc
inc
insl
mov
fistl
jns
mov
push
dec
int
sub
xor
sub
out
out
bound
je
inc
pushf
sub
jge
mov
lret
sub
or
pop
test
mov
mov
xchg
lock
xor
add
sbb
sbb
xchg
mov
nop
movsl
cmp
mov
push
fsubr
cmp
or
sti
lret
push
into
bound
rcll
es
adc
imul
pusha
xor
xor
loop
sub
popa
jmp
sbb
fsubrs
dec
aad
test
mov
xor
sbb
inc
lock
shlb
ret
cmpsl
mov
call
decb
xlat
movsb
cmpsl
inc
loope
cmp
inc
push
cmpsl
enter
mov
sub
and
aam
ss
xchg
jge
push
cs
mov
xchg
das
jb
fmulp
sbb
sahf
xchg
mov
outsb
enter
int3
pop
sti
adc
stc
std
mov
bound
dec
pop
cld
fs
fisubs
pop
jecxz
push
inc
mov
push
adc
jae
mov
xchg
cmp
fsubr
fildl
test
xchg
stc
xor
loopne
jb
out
adc
mov
imul
xchg
movsl
mov
fisttpl
mov
enter
int3
arpl
ljmp
stos
scas
push
mov
ds
ret
cmpsl
add
rol
mov
test
mov
cmpsl
or
adc
std
cmpsl
pop
cmpsl
in
lea
lods
inc
sub
popf
mov
cld
xchg
mov
std
stos
sarb
adc
sbb
in
cmp
sbb
adc
mov
mov
repz
dec
jbe
cmp
xchg
aas
xchg
jns
lds
ss
mov
ss
mov
inc
jmp
in
adc
ret
rolb
jmp
dec
cmp
in
dec
pop
add
repnz
sti
loop
xchg
pop
inc
out
addr16
repz
mov
dec
aaa
cmpsb
cmp
xchg
out
cmp
xor
call
mov
out
rorl
nop
outsl
xor
add
in
icebp
cmpsb
adc
divb
ficoml
outsl
pop
aam
test
stos
and
push
call
jae
shlb
inc
adc
jmp
jmp
push
push
add
sub
fidivrl
data16
outsl
or
sahf
push
xchg
filds
and
pop
subl
cmp
call
cli
add
dec
pop
loope
hlt
jns
and
daa
clc
mov
xchg
add
cmc
fdivrs
or
lcall
push
jae
cmc
or
push
pop
and
fwait
cmpsl
lock
shrb
call
outsl
jno
mov
xlat
mov
sbb
cwtl
lea
sub
mov
dec
in
fisubrl
push
sub
mov
fdivs
mov
scas
in
fidivrl
mov
ds
add
sub
jb
fistpll
adc
push
push
jns
lock
sbb
pop
fmul
xor
push
dec
data16
push
lcall
ja
jne
fcmovnu
push
fadds
inc
cmc
sti
stc
mov
mov
aas
lods
add
sub
mov
rcr
fucomp
ljmp
adc
in
lcall
aas
call
loope
mov
cli
clc
fcomps
jns
rclb
pop
shll
push
xor
adc
lret
out
cmpsw
mov
jle
es
inc
dec
cmp
into
insb
jge
in
add
imul
add
jae
test
or
pop
fisubs
adc
fcmovbe
lods
cli
lcall
out
loopne
mov
ficoml
pop
ss
mov
mov
and
data16
pop
cmc
into
jne
and
cmpsl
or
cmpsl
imul
fs
les
inc
fcoms
in
mov
pusha
dec
add
pop
scas
in
add
dec
cmp
lahf
shlb
add
cmp
sti
lds
shl
xchg
jle
push
adc
ljmp
xor
and
lcall
or
loope
int
aas
adc
add
fisubs
sbb
adc
xor
scas
fsub
and
pop
sub
ret
mov
add
outsb
xchg
mov
cmpsb
cmpb
sbb
jmp
sub
mov
pop
pusha
daa
out
adc
jbe
std
xor
outsb
or
jecxz
mov
cld
adcb
cmp
xchg
pop
call
mov
mov
pop
pop
or
incb
aaa
mov
es
dec
dec
les
mov
xchg
jle
subb
fadd
sub
adc
pop
xchg
dec
mov
inc
lods
inc
sbb
lret
adc
shlb
cld
aaa
push
enter
mov
mov
cmp
dec
xor
xorl
movsl
jnp
mov
scas
aaa
out
cmpsb
and
sub
mov
mov
clc
jmp
add
js
nop
xor
out
inc
lret
pop
inc
adc
push
fsubr
and
gs
sti
mov
mov
adc
loopne
jbe
stos
mov
inc
daa
cmp
data16
aaa
nop
fwait
and
mov
scas
loopne
inc
or
cmpsl
aam
stc
cmpsl
out
dec
mov
or
and
sti
addr16
mov
jge
ret
push
aaa
push
cltd
lret
daa
dec
dec
cli
jb
jl
push
pop
jg
les
js
loope
adc
fisubrs
dec
dec
pop
js
dec
fld
adc
xchg
faddp
std
adc
xchg
add
xlat
pusha
jne
or
push
es
cmpl
or
std
fsubrl
js
std
cli
addb
fmul
sub
pusha
loop
mov
pushf
pop
rcr
outsb
popf
ljmp
pop
adc
sti
ficoms
scas
ficoml
cpuid
mov
mov
mov
inc
mov
sub
or
cmp
shlb
mov
cmpl
sub
rorb
movsl
aad
and
ja
push
pop
stc
mov
popf
ljmp
adc
ss
and
adc
pop
jo
loop
add
or
inc
jno
xchg
in
lods
sub
jbe
dec
ss
sub
mov
cltd
clc
stos
xchg
lods
pop
shl
rol
insl
sbb
ret
xchg
push
mov
dec
push
push
or
popa
mov
or
test
push
lods
mov
movsb
cmc
mov
mov
sub
movsb
call
mov
inc
cli
jae
test
sbb
sub
jg
loopne
out
repz
test
lods
jbe
xchg
pop
icebp
mov
stc
repz
and
mov
mov
adc
sbbl
fnstenv
std
je
lret
aaa
pushf
mov
jl
xchg
mov
incb
xchg
mov
scas
fldenv
popa
and
mov
sbbl
in
fistpll
adc
icebp
ja
pop
or
shrb
cmpsl
test
scas
dec
cmc
cli
mov
xchg
daa
insl
roll
jge
lret
xchg
incb
jle
push
cmp
and
es
lahf
adc
fdivs
je
pop
push
sbb
mov
mov
xor
pop
rol
dec
cld
mov
add
sti
inc
clc
clc
test
sti
lea
cmp
mov
rcl
jno
add
cmp
inc
insb
xchg
adc
jbe
mov
je
add
sub
not
dec
jge
push
in
xchg
mov
xchg
fcmovnu
sbb
cwtl
pop
iret
or
adc
add
xor
inc
xor
and
mov
dec
xlat
aas
pushf
icebp
popa
pop
mov
movsl
aas
repnz
hlt
inc
lcall
mov
mov
mov
repz
xchg
cmp
call
mov
sub
jno
test
aad
xor
mov
dec
pop
push
pop
adc
dec
data16
pop
call
xchg
cmp
outsl
andb
push
pop
jns
or
mov
scas
jmp
dec
lahf
aaa
dec
add
cmc
scas
outsl
js
mov
or
std
fnsave
sub
or
pop
shlb
cld
inc
dec
xsha1
cmpsb
nopl
push
push
sub
cmpsl
mov
add
outsb
cmp
ret
cmpsb
cltd
stos
mov
mov
ds
movsb
sub
sbb
mov
xchg
aaa
jbe
jle
push
sub
cli
insl
movsl
aam
jecxz
mov
sbb
lods
fidivs
les
and
inc
das
dec
add
jae
inc
popa
pop
out
out
imul
ds
sti
lock
test
push
add
cli
jecxz
int3
shll
cli
or
pop
into
pop
jbe
and
dec
pop
mov
mov
lret
mov
in
in
mov
cwtl
dec
inc
xor
je
in
inc
mov
stos
xchg
dec
jmp
rol
popa
sub
sub
mov
clc
and
push
dec
adc
loop
pop
aam
push
enter
xor
and
jl
lods
stos
outsl
mov
jge
push
mov
and
push
inc
rolb
add
xchg
movsb
hlt
push
sbb
mov
bound
out
mov
lock
add
cs
movb
lea
repz
decb
mov
into
mov
fmull
push
repz
cmp
stos
mov
scas
mov
sti
mov
adc
mov
mov
test
cli
enter
adc
mov
loopne
mov
jbe
sti
inc
mov
or
mov
cltd
jns
mov
fistl
pop
repz
pop
test
pop
sub
outsb
sbbl
mov
cmp
xchg
cs
push
cli
lock
or
mov
mov
js
andl
adc
xchg
mov
jg
dec
cmpl
pop
add
pop
dec
jge
dec
inc
jns
jp
clc
cmp
dec
jmp
mov
aad
mov
les
pusha
or
fisubrs
xchg
mov
push
cs
inc
sub
pop
sub
rcl
rol
pop
xor
lods
movsl
dec
frstor
sub
aas
jmp
cltd
adc
mov
cs
out
jnp
mov
mov
cmpsl
cmp
jb
or
test
dec
scas
mov
dec
mov
jecxz
jae
or
add
inc
in
mov
out
mov
push
fcmovbe
xorl
fmulp
imul
outsl
push
lea
push
and
xlat
pop
or
push
pop
push
in
and
scas
sub
loope
xchg
mov
push
sub
shrl
scas
loopne
cmp
cli
flds
xchg
in
dec
dec
ret
mov
imul
jb
hlt
xchg
xchg
xor
jb
mov
jmp
clc
lock
xchg
jb
out
hlt
imul
jb
jae
cli
push
aas
aam
lods
dec
test
dec
fisubrs
pop
loope
scas
test
mov
ja
inc
cmpsl
adc
dec
repz
ret
xchg
jne
leave
lahf
lcall
enter
adc
sahf
out
iret
add
mov
dec
cltd
das
lahf
popf
xor
fs
sub
in
mov
inc
jnp
sub
lds
cmp
dec
rcl
dec
loop
pop
dec
out
fwait
int3
fsubs
push
mov
inc
xchg
ljmp
dec
xchg
dec
stos
jmp
stc
flds
addl
pop
dec
add
outsb
adc
fmull
push
xchg
and
jb
pop
pop
pop
mov
cmp
jle
out
sahf
imul
lea
shll
jmp
test
inc
loope
inc
inc
out
mov
jl
sub
adcb
fdivrl
out
push
loope
stos
mov
and
mov
insb
xchg
cmp
lea
subb
add
mov
lret
mov
dec
xor
lret
add
testl
jae
pop
push
pusha
ds
pusha
xchg
or
mov
fmull
movsb
inc
dec
int3
cmp
push
jns
jge
or
icebp
inc
out
adc
cmp
xor
insb
xchg
mov
mov
scas
cmp
das
out
or
jmp
adc
lret
jo
push
in
fildll
sarb
sub
subb
lods
adc
clc
fidivrs
or
mov
imul
js
cmpsb
scas
sbb
outsl
rcll
sub
and
mov
or
cmpsl
fcompl
jmp
cmp
jno
adc
inc
aaa
inc
stos
inc
cwtl
lods
sbb
movsb
jae
add
pop
xchg
push
outsl
fnstsw
adc
mov
jge
add
subb
mov
cmp
or
les
shr
out
add
ror
cmpsl
push
fwait
aad
cmpb
jg
sub
sbb
adc
sub
mov
cmp
pushf
push
fldcw
add
ljmp
sbb
je
or
pusha
inc
push
sbb
and
sbb
mov
loopne
and
lea
hlt
mov
les
cmc
cvttps2pi
xchg
bound
mov
rorl
xchg
stos
sbb
sti
dec
or
insb
ret
clc
mov
jne
xor
fs
arpl
jo
out
shll
imul
ret
and
orb
jbe
clc
lcall
aas
xchg
mov
dec
inc
ret
dec
xor
repnz
loope
jne
es
in
inc
mov
popa
sbb
rolb
jmp
jmp
sbb
adc
lret
mull
mov
push
outsb
addr16
pop
cltd
sbb
jp
jae
icebp
scas
stc
rcr
sub
pop
repnz
and
mov
push
mov
gs
mov
pmuludq
rolb
xchg
mov
push
jge
rcll
out
repz
mov
test
or
pop
pop
dec
dec
daa
arpl
dec
ja
add
shll
fsubrl
xlat
xor
aaa
pop
xchg
imul
xor
or
fstps
or
cmp
dec
pop
lock
xcrypt-ctr
cmpsl
sbb
lods
or
lods
ficoml
fstl
pop
sbb
popf
rcl
jmp
adc
or
jecxz
mov
sbbb
mov
cmpsb
notl
int
lods
cmpsb
jae
mov
xor
mov
cmp
inc
fld
jno
das
mov
call
mov
in
adc
xor
or
decb
jle
andb
sbb
dec
sub
mul
or
and
leave
inc
adc
rol
pusha
ret
out
js
movsb
cmp
dec
mov
lret
adc
add
cmpsl
negb
xchg
push
leave
dec
fnsave
out
adc
dec
scas
lods
cmpsb
push
and
xlat
cltd
inc
jno
pop
sub
iret
dec
je
adc
into
mov
push
adc
or
sbb
jae
adc
add
popf
pop
xchg
xchg
imul
xor
pop
mov
ljmp
push
int3
sbb
bnd
fs
pop
rorb
mov
cmp
bound
sbb
es
jns
shlb
add
sub
inc
clc
into
mov
sbb
xorl
jp
inc
popf
out
sbb
xchg
imul
xor
inc
mov
stos
jnp
pop
cmp
or
sti
insl
jg
xor
and
mov
int3
out
jo
dec
xchg
iret
inc
ja
pop
sub
lea
or
push
movsl
xchg
jge
push
adc
das
push
ret
xor
inc
xchg
jmp
sub
pop
or
add
xor
mov
les
jle
sub
lret
in
mov
movsb
gs
cmc
xor
hlt
test
mov
or
dec
push
ret
add
pop
scas
test
lods
add
jecxz
cmp
mov
outsl
popf
gs
and
xchg
push
outsl
scas
filds
mov
outsb
fwait
jecxz
sub
mov
jne
lock
shll
adc
fcmovnu
push
pop
and
xlat
inc
sbb
xor
add
stos
out
inc
std
inc
ret
pop
jecxz
out
pop
cmp
cmpsl
pusha
mov
out
loope
jb
sub
into
jne
jecxz
push
call
mov
repz
jae
mov
out
or
leave
mov
outsb
and
jbe
pop
jo
out
cld
popf
mov
std
insl
mov
loope
inc
dec
pop
call
dec
divb
sub
mov
das
movsl
sti
push
mov
scas
addr16
js
in
movsb
bound
adc
cli
mov
scas
sti
mov
bnd
in
xchg
or
xchg
push
mov
cmpsl
or
lret
and
add
dec
sub
xlat
call
stos
sbb
std
shrl
pop
and
cltd
int3
pop
xor
mov
pop
loope,pn
push
cmp
xor
jge
jo
ljmp
cmp
mov
inc
outsb
fucomp
xchg
adc
inc
in
aad
sbb
push
jecxz
div
pop
shlb
pop
dec
and
dec
fwait
enter
push
loopne
push
mov
faddp
jnp
lods
gs
cmpsb
sbb
test
push
cmp
cmp
jnp
push
movsb
mov
in
xchg
mov
lods
in
addr16
dec
lods
pop
mov
cmpsl
xchg
into
mov
pop
cmp
scas
jns
out
jmp
mov
jl
cmc
xchg
push
pushf
fdivp
gs
aas
jb
pop
push
mov
cmpsl
loopne
out
lret
or
mov
sub
sbb
jne
push
arpl
and
aam
clc
call
mov
dec
add
sti
incl
and
lock
push
gs
imul
mov
insb
jmp
mov
adc
cmp
add
mov
push
lds
rorl
je
ljmp
push
rcrb
push
call
sub
xor
jmp
push
or
mov
icebp
mov
stos
lods
mov
mov
push
inc
sbb
xchg
iret
pop
leave
cmp
roll
das
out
je
sub
ret
insb
or
jno
or
test
mov
gs
mov
pop
sbb
sti
inc
cwtl
lret
pushf
fisubrs
mov
xchg
call
or
and
and
pop
adc
lock
add
out
or
sbb
xorb
pop
dec
pop
sub
imul
push
adcl
mov
pop
test
jns
je
pop
sti
jno
scas
mov
mov
aam
xchg
and
mov
cmp
pop
and
into
xchg
cmp
push
shll
sbb
dec
mov
xchg
shufps
jmp
fstps
dec
fwait
dec
mov
cmp
movsb
pop
mov
adc
loopne
mov
mov
pop
leave
bound
xchg
and
mov
int3
loopne
inc
xor
push
popa
movsl
idiv
mov
fcoml
and
push
test
sti
push
cmp
in
mov
mov
int3
dec
adc
and
xor
incb
cmp
scas
outsl
inc
repz
push
popa
ljmp
mov
xlat
rorl
and
cmp
rep
cmp
loopne
sub
movsl
adc
push
add
das
cld
das
stc
addr16
mov
mov
jl
sti
dec
inc
pop
out
inc
or
push
cld
push
push
xchg
fimull
cmpsl
xchg
inc
jne
push
xchg
and
orl
dec
fldl
dec
bound
cmp
push
jne
pop
pop
mov
sarb
xchg
repz
push
pusha
pusha
jo
or
ficomps
mov
je
cmp
andb
ret
inc
das
hlt
aam
movsl
inc
insl
or
call
movsl
adc
sub
cltd
cmp
scas
push
push
into
iret
mov
addr16
insl
cmp
out
jmp
mov
inc
dec
mov
nop
dec
push
mov
xchg
rorl
push
sbb
mov
test
stos
dec
lret
testb
bound
mov
mov
sbb
loopne
adc
jmp
pop
or
popf
xchg
mov
imul
imul
orl
xchg
lret
loope
ljmp
pop
dec
push
mov
pop
dec
ja
inc
in
addb
sbb
call
ss
xor
push
or
cmp
insb
cmp
jl
std
idiv
push
mov
aaa
jmp
out
jl
popa
outsl
mov
dec
pop
xchg
fstp
lret
jmp
fbstp
inc
push
stos
idivb
adc
sub
mov
test
mov
cmc
mov
dec
into
inc
popa
lcall
sub
sub
ljmp
mov
push
jnp
rorl
cmpsb
inc
shll
cmpsb
xchg
aad
js
addr16
inc
cmpsb
mov
mov
sub
imulb
aaa
or
loop
push
or
lret
sarl
aad
fwait
stos
or
scas
xlat
cmp
sahf
push
jbe
pop
aas
por
lods
lret
mov
scas
test
insl
aam
fisubrs
mov
pop
jmp
push
pop
xor
mov
sub
sub
push
adc
insl
cli
pop
sbb
dec
xchg
out
fwait
jne
mov
fstpt
push
or
popf
cmpsb
aam
pop
adc
sbb
dec
mov
shrl
or
or
jne
push
in
cmp
in
cld
pop
rcrb
or
iret
sbb
cmp
imul
fistps
sub
outsb
fistl
ss
jecxz
clc
push
and
mov
cmp
push
subb
mov
mov
and
ljmp
outsb
pop
ret
fcmovu
xchg
cltd
call
pop
loopne
sub
pop
xor
mov
js
sub
or
insb
out
and
add
push
jp
mov
or
jae
sub
adc
ljmp
es
mov
je
cltd
mov
es
pop
js
test
jmp
ss
call
and
imul
cmpsl
outsl
dec
ljmp
dec
pop
pop
lods
mov
cmp
inc
or
sbb
mov
sarb
mov
adc
inc
inc
dec
icebp
pusha
in
mov
add
jbe
arpl
mov
mov
popa
mov
xchg
insb
sahf
lcall
xor
add
ror
xor
xchg
xor
cmpsb
shll
aam
adc
sbb
jbe
xor
jae
loopne
test
push
rcll
fs
sbb
or
movsl
mov
jne
mov
imul
push
mov
or
les
fst
pop
mov
sub
jg
push
pop
dec
lods
fdivl
sub
sahf
lods
inc
xor
jge
adcb
jne
in
bound
fwait
mov
dec
mov
sub
outsl
mov
mov
addl
xchg
outsl
mov
sbb
or
add
rcr
push
add
ret
xor
mov
jae
sub
cs
ljmp
cmp
xor
ljmp
fcompl
ret
inc
pop
pop
sub
dec
call
adc
adc
testl
out
pop
dec
dec
pop
stc
ljmp
fs
clc
mov
ret
mov
lret
push
adc
aad
idivl
push
dec
mov
jae
and
mov
xor
xchg
sub
lcall
mov
cmp
arpl
mov
test
shrb
adc
fcomps
loopne
in
xchg
jle
mov
decl
popl
pop
mov
lock
sub
and
push
mov
out
mov
xchg
aas
bound
loop
pop
inc
insb
and
sub
sbbb
fwait
mov
dec
stc
inc
add
stc
daa
fs
fdivrl
enter
cs
daa
cmp
in
cmp
push
add
cs
daa
jp
jl
pcmpeqd
push
movsb
mov
das
sbb
int
pop
std
int
lods
ficoms
push
cmp
popa
fsubr
dec
and
loop
sbbb
sub
adc
pusha
fwait
cmc
shufps
cmp
mov
jnp
jo
outsb
xchg
lock
fsubr
idiv
int3
sub
mov
inc
sub
stos
add
ret
pop
xchg
adc
or
push
movsl
jp
mov
pusha
mov
ss
adc
scas
push
mov
imul
pop
push
out
lock
sbb
jb
adc
pop
mov
data16
sbb
in
add
add
neg
repz
xor
xchg
sbb
mov
popa
xchg
roll
popa
sbb
mov
inc
fiadds
out
inc
jnp
inc
adc
sub
push
mov
popf
push
inc
shl
ret
sbb
sbb
ds
out
negb
hlt
out
adc
jnp
rep
mov
jae
test
sub
jle
jge
push
and
push
mov
aad
xchg
outsl
shr
bound
xor
in
int3
lds
cmp
negb
lods
enter
mov
icebp
les
loop
jno
das
das
pushf
add
gs
scas
insl
mov
inc
mov
fwait
xlat
hlt
popa
pop
jge
sysret
pop
xchg
push
in
clc
xor
test
inc
xchg
mov
bound
mov
into
js
sbb
sbb
rcr
mov
orl
repz
in
adc
jg
mov
mov
popf
jnp
sbb
cmp
cmp
daa
mov
xlat
aam
adc
sbb
loope
mov
pop
imul
mov
pop
jno
add
arpl
imul
mov
dec
fbstp
lds
cli
mov
int3
xchg
pusha
jge
sub
and
push
push
sub
dec
jne
cli
int
loope
shrl
jns
mov
subl
out
inc
mov
jns
inc
mov
mov
adc
stc
jl
jne
les
mov
insb
sti
inc
pop
inc
into
mov
cmp
adc
add
xor
mov
or
fsubs
popf
std
dec
xor
mov
xchg
add
es
xchg
xchg
fiaddl
and
adc
adc
xor
lods
pop
xchg
scas
push
dec
std
bound
repz
pop
sub
pushf
adc
add
jmp
shl
pop
xchg
scas
adcb
push
sbb
out
cmp
cmc
ds
sbb
ret
add
sbb
cmc
inc
adc
cwtl
cmpb
nop
cmc
cmc
sbb
js
push
inc
das
pop
test
cmc
cmp
aad
pop
movsb
dec
pop
lcall
jne
or
and
xchg
std
sub
inc
loopne
sub
rcrb
andb
pop
shlb
or
sbb
pushf
pop
jp
test
jo
cli
std
jge
cmp
xor
dec
femms
fwait
incb
add
in
sti
sub
das
stc
inc
daa
shlb
push
xchg
mov
roll
andl
and
int3
or
jge
mov
outsb
dec
cmp
cmc
in
lret
push
scas
inc
rorb
mov
push
jno
cmc
jno
cmp
xorb
inc
xchg
rcl
out
mov
pop
mov
ja
fbstp
aas
dec
int3
stc
xchg
cmp
lret
scas
xlat
ljmp
jnp
push
cmp
mov
lods
and
or
lds
jo
scas
inc
testb
shlb
int3
sub
mov
jmp
bnd
addr16
inc
dec
insl
mov
add
pop
iret
or
xor
je
push
and
fwait
dec
jne
jns
aas
popf
or
xchg
aad
test
ret
add
ja
ret
cli
xchg
xchg
add
sarb
sub
in
std
dec
push
lcall
mov
out
lods
xchg
aas
cmpl
pop
lock
clc
inc
xchg
xchg
push
sbb
jno
adc
pop
jns
sti
xchg
jae
adc
cld
xorb
xchg
sub
sbbl
ss
mov
leave
rclb
into
xlat
jae
mov
test
repz
bound
leave
mov
test
stos
addl
loopne
cmpsb
push
dec
fs
adc
pop
push
fiadds
push
push
test
xchg
cmp
stc
jae
push
dec
ss
pop
inc
leave
out
dec
sbb
je
mov
repnz
jnp
mov
xor
decl
mov
int
mov
mov
mov
test
dec
xlat
mov
xor
adc
pop
mov
das
in
push
iret
cld
fs
aad
and
lret
repz
das
fimull
fstpt
fisttpl
popa
inc
sub
mov
nop
out
orl
dec
xchg
sahf
test
sbb
pop
cltd
fidivs
xchg
jecxz
xchg
cwtl
inc
or
xchg
mov
jg
cmp
aad
dec
pop
in
sub
fisttpll
pusha
mov
ret
popa
aas
fdivrs
mov
movsl
adc
lods
cmpsb
pop
inc
fnstenv
adc
push
shlb
and
push
out
pop
ret
xor
movsl
outsb
pop
aas
js
inc
mov
add
push
loopne
xor
sub
mov
mov
or
and
jbe
pushf
mov
lcall
sarl
mov
pop
cmp
out
cld
enter
je
sahf
aad
mov
push
mov
movsb
paddsb
mov
shrl
sbb
add
jnp
gs
mov
xchg
cli
movzwl
dec
dec
pop
jge
xor
pushl
enter
jae
rorl
pop
sarb
loopne
fs
sahf
in
icebp
xor
rolb
lock
imul
cs
and
fcmovne
imul
mov
jno
leave
in
push
loop
je
in
dec
dec
xlat
repnz
ljmp
push
sub
dec
and
jae
arpl
popf
inc
mov
push
jbe
dec
or
mov
lcall
ljmp
dec
xchg
push
and
repnz
mov
inc
mov
das
or
xor
es
cwtl
or
sbb
pmulhw
adc
cmc
aam
xor
loope
xor
xchg
pop
dec
sti
jne
dec
imul
insl
push
jp
inc
jg,pt
sub
rorl
leave
out
or
push
push
lods
mov
enter
pop
xchg
je
sbb
movsl
dec
notl
sti
ret
mov
lock
movsb
test
loope
adc
pop
pop
and
pop
inc
adc
std
cli
imul
mov
push
mov
roll
fsubl
loopne
lock
add
cmp
mov
or
outsl
push
adc
xor
in
addr16
add
push
mov
pushl
stos
outsl
add
in
jl
mov
push
and
sbb
lods
add
les
ljmp
mov
out
or
dec
lea
push
xor
pop
push
outsl
repnz
mov
cltd
lahf
aas
pop
adc
pop
lcall
dec
jbe
ljmp
test
mov
es
sub
mov
push
xchg
fwait
lahf
mov
addr16
cmp
fwait
jae
insl
pop
xchg
es
popf
cmpsb
ljmp
and
stos
iret
add
out
pop
call
scas
insb
push
outsl
test
add
out
lahf
aam
add
jne
out
inc
fwait
nop
int3
bnd
push
aas
push
into
es
daa
outsb
and
ret
jge
test
sub
jnp
pop
push
ds
test
scas
fstl
dec
orb
gs
popf
fadd
aad
mov
bound
xor
jbe
insb
or
jge
jb
push
bound
mov
stc
pop
fildll
in
mov
mov
sbb
adc
fildl
pop
dec
psubq
mov
cmc
ljmp
lock
scas
xchg
cmp
and
dec
fidivl
pushf
jb
pop
adc
jge
jb
out
mov
fs
lcall
arpl
mov
dec
mov
pop
pop
fst
adc
dec
out
mov
add
jb
jp
add
pushf
fstp
cmp
or
and
fldcw
sbb
mov
dec
sub
std
in
daa
dec
xor
inc
repz
dec
ficomps
adc
sub
mov
scas
testb
mov
and
mov
into
sub
jb
testl
loope
sti
mov
daa
in
cwtl
inc
mov
ja
sbb
xor
sbb
bound
pusha
xor
lods
loopne
adc
addr16
adc
movsl
jae
dec
aad
test
pop
adc
enter
pop
jmp
cld
mov
mov
mov
into
push
aam
pusha
pusha
lods
lods
popf
sti
arpl
adc
cmp
push
test
aad
fs
enter
mov
xlat
inc
push
ljmp
test
jb
add
mov
lea
jmp
or
data16
inc
jg
inc
hlt
or
or
sbb
xchg
aad
cltd
clc
jl
daa
ret
les
sub
mov
sti
pop
hlt
mov
jg
popa
jns
icebp
mov
ss
loope
pop
mov
inc
jecxz
cli
test
bnd
outsb
jns
popa
dec
sbb
mov
push
scas
or
jl
or
xchg
sbb
add
stos
fwait
inc
jae
clc
jbe
mov
popf
aaa
sti
xchg
loopne
mov
popf
rcrl
inc
lahf
mov
mov
push
mov
cld
sahf
cmp
push
movsb
dec
mov
pop
xchg
inc
or
mov
std
jecxz
call
dec
jo
jle
fcmovbe
int3
xor
orb
jmp
subb
scas
into
xor
xor
mov
cmpsl
scas
or
fcoml
into
mov
lcall
aad
lods
aaa
add
fimuls
and
mov
pop
pop
xor
lcall
mov
adc
add
pop
cld
cwtl
pop
adc
cwtl
lret
pop
dec
orb
call
ljmp
dec
mov
rclb
jne
ja
inc
mov
pop
mov
add
in
or
pop
scas
inc
out
test
ds
mov
mov
adc
clc
sbb
mov
jle
cmp
sub
loop
pusha
data16
cmpsb
nop
insb
adc
nop
mov
shlb
add
int3
inc
xchg
fs
out
mov
hlt
call
push
jecxz
fisttpll
ss
repnz
imul
dec
out
in
mov
cmp
loope
mov
outsl
fcoml
icebp
inc
mov
gs
sbb
popa
sbb
fnstsw
jge
push
sbb
cmp
xchg
dec
cmp
pop
pop
pop
cmp
push
test
xchg
push
push
push
lods
ja
pmulhuw
adc
adc
inc
stc
jle
push
dec
pop
jnp
jge
and
or
or
mov
cmpsb
add
ret
shr
cli
mov
xchg
subl
fisttpl
pop
les
sarb
iret
jns
xchg
xchg
enter
sub
popf
jns
mov
stos
bound
jno
cmp
and
push
daa
add
sub
and
stos
adc
lret
fcmovnbe
hlt
pop
mov
ret
cli
rcrb
fwait
cmp
dec
mov
repnz
dec
insb
data16
push
ljmp
jecxz
hlt
lea
clc
insb
sbb
sbbb
dec
mov
cmp
cwtl
icebp
push
mov
out
xlat
cld
cmp
adc
int
jg
loop
and
push
pop
mov
push
jne
aaa
loop
imul
lret
lahf
mov
jne
cmp
pop
and
add
int
bnd
hlt
in
cmp
pop
or
xor
cmc
popf
pusha
cmp
test
xchg
dec
fdivl
sbb
jl
test
call
xor
clc
or
data16
rcrb
pop
sbb
jo
inc
xor
leave
push
in
loopne
clc
cmp
test
xchg
ss
and
aas
add
decl
jb
inc
xor
fdivs
pushl
push
push
jge
mov
adc
aas
jecxz
sub
fisubrl
xor
popa
xor
pop
mov
jno
push
xchg
stos
sti
repnz
cmp
flds
mov
xorb
sahf
xor
shrb
xor
dec
fs
sbb
xor
cs
jbe
ret
adc
sub
push
mov
mov
mov
xor
sub
das
pusha
fisubrl
data16
leave
jecxz
xchg
lahf
cmpsl
xchg
sub
jo,pt
cmp
dec
lret
sub
ficomps
imul
sbb
ja
cmp
add
push
pop
cmp
inc
bound
sub
add
mov
insl
fs
sbb
xor
pop
stos
aam
je
loop
shrl
sbb
test
cmp
jge
les
lcall
das
xor
mov
out
lret
xchg
pop
xchg
pop
movsb
mov
ja
cmp
sahf
cmp
pop
cmpb
mov
jge
push
gs
sub
xlat
sbb
aam
or
call
mov
outsb
add
inc
xchg
ret
cmp
data16
lret
repz
insl
adc
pop
orb
adc
mov
rcrl
in
pushf
pop
pop
fidivl
cmpsl
cmpsl
and
sbb
cmpsb
addr16
cmp
push
sbbb
xor
push
mov
out
in
mov
push
inc
sarb
dec
addb
pop
out
push
or
ja
lock
cmpsl
repz
mov
int
pop
arpl
xlat
push
sbb
sbb
jp
jb
outsl
jle
dec
xor
sbb
test
pop
inc
inc
daa
es
jno
pop
push
lret
das
cmpsb
lahf
imul
in
cli
dec
test
jp
or
imulb
je
sbb
outsb
add
je
in
pop
into
dec
stos
shrl
and
in
sub
pop
inc
pop
in
push
lcall
sbb
cltd
xchg
into
xchg
adc
and
dec
inc
in
push
loop
jo
fldcw
xchg
push
es
sub
dec
dec
sub
pop
lock
leave
mov
sbb
adc
test
cmp
imul
and
inc
sbb
mov
lcall
push
lock
xor
mov
dec
insl
in
push
jno
xchg
push
or
repnz
scas
adc
adc
dec
xchg
insb
loop
fsubrs
push
jnp
lds
inc
outsb
mov
dec
hlt
shrl
sub
repz
faddl
outsb
xchg
lock
insl
mov
jmp
int3
sbb
push
fwait
add
aaa
mov
loopne
cmp
push
ljmp
mov
cmpsl
in
ffree
mov
xchg
call
and
pop
aas
std
jbe
push
mov
jecxz
cltd
sbb
adc
enter
inc
call
xor
or
jne
test
and
fwait
sbb
hlt
ljmp
sbb
push
popf
fists
cmp
xchg
int3
test
or
jmp
pop
sahf
je
or
add
leave
sub
push
xor
pop
mov
dec
jo
lret
subb
in
lods
mov
sub
test
adc
arpl
or
fs
out
sbb
xchg
ljmp
push
jnp
nop
mov
test
jg
in
sbb
fmuls
mov
push
repz
add
inc
xor
jnp
sbb
outsl
xor
mov
fildl
adc
in
push
js
outsb
adc
push
pop
mov
lods
adc
pop
ror
mov
ja
xchg
or
and
gs
jae
ja
out
and
xchg
add
inc
pop
test
test
cmp
xlat
add
ret
inc
or
jno
push
movsl
loope
lods
icebp
xor
lahf
mov
sbb
mov
insb
pop
sub
xlat
cmp
mov
fsubrl
fcomps
mov
jp
push
in
adc
dec
in
mov
jmp
hlt
ret
enter
push
mov
xchg
ret
mov
jno
dec
pop
mov
lds
and
into
loopne
outsb
jno
into
mov
xor
push
ja
or
jno
ds
in
ror
roll
mov
ficoms
enter
mov
inc
xchg
or
test
pop
call
xor
les
push
mov
fwait
pop
es
mov
dec
inc
xchg
pop
in
mov
xchg
push
cmp
mov
push
call
xchg
ja
jo
xor
popf
mov
and
xchg
ds
int
push
cltd
dec
cmp
inc
push
out
mov
xchg
fcompl
mov
lea
lds
mov
fmuls
into
fstps
xchg
mov
adc
xlat
xchg
aas
movsl
and
rolb
jbe
mov
ret
insl
ret
movsl
add
aad
jnp
pushf
mov
cmpb
xor
fists
push
jg
lds
push
sahf
mov
cmpsb
add
jns
js
ja
outsb
scas
mov
out
xor
insb
push
cmpsl
push
cs
xchg
pusha
cs
mov
push
xchg
lret
fwait
into
js
mov
idivb
mov
loope
and
push
inc
pushf
pusha
repz
mov
dec
shr
cwtl
jle
fs
mov
cltd
icebp
in
inc
pusha
shlb
cmc
movsl
idiv
jae
dec
aam
scas
sub
test
ds
setle
inc
out
testb
xchg
inc
mov
mov
jmp
pop
pusha
add
push
mov
daa
push
mov
jl
mov
dec
sub
jmp
nop
inc
shll
shlb
pop
cmp
pop
add
call
loop
or
mov
and
sbb
inc
ja
fstpl
shll
pop
sub
stos
iret
pop
outsb
push
fists
sbb
xchg
mov
int
out
addr16
and
add
insl
fldl
pop
sub
sub
sbb
daa
call
xchg
dec
cmpsb
aas
ret
mov
and
push
inc
nop
in
sub
ret
xchg
in
dec
push
lahf
jb
push
lret
scas
push
push
movsb
xor
fsub
sbbl
ret
mov
add
dec
into
and
arpl
and
jns
fwait
outsl
pop
jns
sarl
mov
hlt
jle
repnz
xchg
inc
hlt
pop
jns
inc
jno
xor
mov
pushf
and
and
pop
je
lods
mov
ljmp
pop
icebp
fcmove
call
inc
jg
outsb
stos
sahf
hlt
sti
movsb
and
stos
in
jno
mov
fdivrs
ja
pop
ja
gs
fisubl
push
into
or
cmpsl
test
call
mov
imul
xchg
gs
icebp
stos
push
movsl
xor
mov
inc
arpl
in
or
out
mov
popf
stos
mov
dec
mov
cs
and
outsl
rorl
clc
jno
inc
cmc
mov
cmc
sarb
inc
imul
das
push
mov
dec
mov
cmp
lahf
mov
fcoms
jg
lret
ret
mov
pop
aam
push
decb
pop
das
es
xor
notb
adc
test
mov
mov
movsb
push
sbb
pop
rclb
stc
js
and
xor
cmp
mov
mov
pop
divb
lahf
dec
cmp
xchg
pop
mov
sti
add
mov
lods
aam
cmp
ss
sub
cwtl
and
mov
pop
sub
add
cmpl
sub
cmp
xor
hlt
sbb
pop
fs
out
cltd
insb
mov
sbb
cbtw
int
dec
mov
aad
sbb
fdivs
rcl
cmp
xor
add
mov
mov
jge
lods
push
sub
lahf
sbb
sub
pop
jnp
js
pop
xor
mov
xor
ljmp
in
mov
loop
mov
test
xchg
js
pop
pop
bound
dec
outsl
and
add
mov
jae
adc
cld
adc
clc
lahf
xor
pop
aad
stc
out
ja
sahf
mov
pop
cmc
cs
fsubrl
adc
daa
ret
or
or
orl
mov
bound
scas
les
mov
dec
jle
insl
sub
loopne
ja
out
jo
or
dec
test
add
mov
popf
aas
test
stos
lock
gs
pop
dec
test
ds
xchg
mov
push
xorl
mov
stos
mov
jb
dec
pop
pushf
imul
test
pusha
mov
mov
jle
push
gs
insb
jns
aad
frstor
fadds
icebp
pop
stos
mov
add
imul
fs
stos
mov
mov
push
mov
cltd
aas
sti
mov
jge
mov
aas
push
incl
sbb
pop
mov
mov
pop
jbe,pn
mov
mov
sub
jo
mov
inc
jp
insl
pop
outsl
push
mov
ret
test
sub
mov
inc
cmp
fisttpll
cmp
adcl
jg
and
aaa
jp
inc
jb
inc
lods
les
push
ljmp
sarb
mov
sahf
das
or
mov
movsb
scas
inc
mov
jmp
or
or
pop
nop
pusha
sbb
and
adc
sbb
jns
out
cmp
dec
jnp
shl
ljmp
int3
mov
scas
pop
dec
or
push
sti
xchg
adc
adc
pushf
cs
and
xchg
popf
sbb
addl
aam
fisubrs
jg
sbb
int3
pop
or
dec
mov
fucom
and
jnp
pop
mov
testb
adc
movsl
daa
xor
push
pop
dec
test
mov
and
push
xchg
ret
cmp
mov
jno
scas
sbb
jns
in
dec
sbb
jo
jnp
xor
mov
in
jecxz
and
mov
push
aaa
pop
and
dec
repnz
mov
pushf
in
mov
push
sbb
mov
push
cmp
xlat
add
mov
fwait
and
mov
adc
stos
mov
daa
jns
xchg
dec
scas
pop
xchg
in
repz
and
shlb
cmpsb
repz
mov
mov
les
bound
sarb
add
mov
pop
outsb
aad
test
mov
fs
mov
xchg
mov
mov
add
jb,pt
xchg
adc
test
repnz
divl
scas
iret
imul
jg
jmp
negl
rol
ficompl
jp
rorl
cli
mov
inc
cwtl
xchg
mov
xlat
test
dec
imul
mov
pop
gs
lods
inc
jnp,pt
mov
or
sbbb
aam
sub
sub
or
out
aad
out
cmp
adc
mov
std
xor
sbb
pop
sbb
in
les
or
aaa
sub
xor
sahf
or
push
aad
add
mov
adc
cwtl
jl
idivl
jne
ds
lahf
lret
adc
pop
jecxz
inc
pusha
out
xchg
mov
or
adc
inc
add
adc
mov
add
movl
loope
mov
ss
loop
or
and
ds
mov
ljmp
addr16
push
nop
ds
pop
mov
adc
push
sbb
repz
jbe
enter
test
mov
dec
jmp
add
aad
mov
in
inc
mov
pop
imul
mov
mov
mov
movsb
mov
ja
stc
ret
jae
add
mov
cwtl
adc
aaa
jno
pop
out
pop
push
adc
ret
mov
in
push
xchg
fs
nop
imul
mov
mov
repnz
mov
mov
lds
inc
out
mov
adc
imul
adc
divb
rcl
push
or
pop
popa
cmp
pop
roll
xchg
stc
dec
fldenv
in
loopne
les
dec
sbb
mov
addb
pop
xchg
rcrl
lds
mov
sbb
insl
clc
pop
scas
push
adc
mov
jge
insl
fwait
add
or
add
fsubrs
dec
mov
pushf
push
out
sub
xchg
sub
jg
jmp
pop
dec
pop
push
cwtl
out
pop
cmp
inc
inc
mov
sub
mov
sbb
push
call
mov
in
bound
sti
or
mov
addr16
push
adc
pusha
mov
fsubrl
imul
and
sbb
popf
stc
nop
add
decb
push
lds
jne
push
icebp
jnp
decb
pop
divl
xor
mov
inc
loopne
inc
adc
jo
xlat
jne
push
orb
mov
mov
xorb
mov
add
test
dec
xchg
mov
push
mov
jg
mov
shlb
not
mov
arpl
addb
push
cmp
and
fs
lods
pop
nop
jnp
cs
push
push
repz
repz
pop
lahf
jle
scas
insb
inc
fwait
nop
fadd
and
test
cwtl
jno
mov
aaa
jge
mov
or
sub
cmp
mov
jmp
int
pop
dec
add
sbb
das
orl
scas
cmp
mov
adc
test
sub
add
jne
mov
pop
add
fadd
sub
andb
dec
pop
pop
aas
les
aaa
lahf
mov
les
jb
rorb
addl
inc
xchg
or
ljmp
icebp
fadds
push
cmp
cmp
sub
sarl
dec
in
adc
aas
fsubrl
adc
mov
dec
pop
pop
bound
push
adc
jo
dec
lahf
mov
push
out
call
mov
adc
add
jns
pop
fwait
sub
test
push
pop
cli
jmp
jg
dec
mov
mov
mov
cs
addr16
cmp
xchg
movl
inc
push
cltd
in
pop
adc
push
dec
push
bound
jl
jae
mov
push
cmc
bound
mov
test
js
stos
call
imul
push
cld
clc
adc
loopne
insl
daa
sub
daa
and
scas
cmp
lret
jnp
or
jne
cmp
mov
cmpsl
mov
out
lcall
test
and
andl
inc
imul
ret
cmp
ja
pop
daa
outsl
xchg
and
cli
pusha
ljmp
push
subb
and
sub
and
xchg
fwait
pop
lret
cmpsb
test
loopne
mov
mov
jb
dec
jg
or
nop
lods
mov
pop
mov
cmp
xlat
mov
insl
stc
xor
ja
xor
fninit
cmp
adc
xchg
sahf
pushf
mov
add
mov
dec
lods
push
test
mov
sbb
push
cmpsb
push
dec
sub
xor
hlt
sbbl
sub
jo
sbb
scas
adc
scas
adc
jg
mov
mov
test
lds
and
call
inc
loope
pop
jno
cmpsb
pop
push
ds
popl
lods
imul
test
xor
arpl
dec
cli
mov
in
add
popf
test
xor
adc
add
js
adc
into
dec
mov
or
out
mov
fstl
cmp
shlb
dec
pushf
xchg
mov
in
test
mov
aas
inc
xchg
test
ljmp
push
test
dec
cld
imul
insl
mov
push
mov
scas
mov
scas
lahf
jecxz
inc
std
xchg
outsl
push
mov
dec
in
xchg
fnstcw
repnz
mov
fdivs
dec
subb
dec
lret
les
mov
jb
fcomps
cmp
shr
adc
sbbb
psubusb
in
outsb
push
sub
mov
insb
fistpl
sbb
dec
mov
dec
mov
jecxz
pusha
pop
cltd
loope
popa
ret
sbb
pop
add
push
cli
mov
jno
lahf
add
and
xor
pushf
pop
mov
call
cld
in
addb
sub
mov
out
adc
adc
inc
adc
and
shlb
sbb
nop
ret
adc
sbb
jno
fistpll
and
and
fadd
lds
xor
int
and
in
test
sbbb
mov
rorb
jle
jg
clc
fnstenv
add
ret
xor
movsl
jl
jp
andb
fs
mov
bound
xor
mov
movsl
push
cli
jno
mov
add
add
cmp
imul
or
push
sub
xor
xchg
push
fs
insl
sub
mov
ja
push
enter
cmp
push
dec
movsb
and
lods
pop
stos
in
or
shll
mov
and
sub
aaa
mulb
cltd
push
pop
push
jo
adc
add
in
dec
repz
iret
and
jecxz
out
dec
cmpsb
push
repz
call
and
xchg
and
out
shr
xor
add
mov
es
test
sbb
out
cmc
jne
xor
std
mov
sub
mov
in
fistpll
out
jae
mov
shll
push
sbb
pop
mov
ret
testb
das
xchg
and
rorb
jecxz
mov
out
mov
test
rorl
cs
or
stc
iret
out
mov
call
out
roll
in
es
cmpl
inc
pop
aam
addr16
ja
push
sub
xorl
hlt
enter
test
add
dec
jbe
jno
push
lea
push
cmp
rcrl
neg
cmp
and
jle
sbb
lcall
ret
add
flds
imul
or
das
movsl
cmp
sahf
stos
repz
addr16
cmp
sub
jg
ljmp
mov
lahf
dec
out
inc
hlt
outsb
jo
cwtl
inc
sub
push
xor
ss
jne
mov
lods
mov
test
dec
jb
addr16
and
filds
pop
mull
cmpsb
pop
and
insb
imul
push
add
jle
mov
cmpsl
jns
inc
enter
mov
and
xor
test
xlat
call
mov
sub
into
mov
xor
pop
orl
pusha
adc
jg
and
int
sbb
xchg
adc
cmpsb
loope
xor
add
jo
imul
mov
mov
mov
outsl
jno
xchg
xchg
pop
and
jecxz
push
sbb
dec
movsl
leave
jge
pusha
jae
aam
mov
and
mov
add
sub
lahf
pop
xchg
popf
dec
or
or
jg
sbb
push
xor
int3
shll
sub
into
push
arpl
mov
lods
shrl
add
mov
pushf
fisubrl
push
mov
pop
sbb
jg
jb
adcl
stos
das
add
inc
or
xchg
xchg
cmp
out
cmp
xor
ret
cmp
addl
or
lds
scas
js
jle
stc
sub
int
xchg
fcoml
outsb
scas
lret
std
sub
add
js
cmc
or
mov
jnp
or
rol
push
cmp
enter
push
xor
in
jo
cwtl
or
push
ret
adc
test
repz
loope
cmp
or
les
mov
jb
xchg
sbb
xor
aad
mov
hlt
mov
aad
and
jmp
sbb
lret
fstpl
sub
icebp
push
clc
aam
movsb
bound
push
out
ret
or
jg
adc
pop
xor
ror
mov
outsl
fmul
cld
test
pushf
sahf
fldcw
push
sbb
xor
mov
scas
mov
push
or
jge
insl
scas
inc
sbb
or
or
pop
mov
pop
leave
cmpsl
lods
daa
or
jle
movsb
std
jno
mov
fisubrl
stc
jb
jo
pop
fwait
dec
sub
loopne,pn
or
lds
or
or
lods
shl
addl
out
and
cmp
lods
mov
jb
lods
jb
inc
call
xchg
fisttpll
div
ret
adc
pop
popf
jg
in
add
or
xchg
adc
repnz
test
hlt
jmp
into
jns
aas
inc
inc
clc
mov
adc
js
push
lods
push
sub
mov
cltd
shl
adc
jecxz
fwait
inc
pop
push
sbb
add
lea
mov
xor
jne
or
sub
jge
nop
lcall
mov
mov
mov
pop
push
rclb
lds
inc
in
sub
dec
sarb
push
cli
int3
das
movsl
jae
les
pop
pop
outsl
mov
pop
js
push
mov
pop
loop
and
dec
adc
add
decb
mov
xor
js
movb
or
push
xchg
mov
cmp
cmp
and
push
inc
fldenv
mov
jns
xor
push
icebp
adc
movsb
fs
push
and
mov
pop
adcb
mov
mov
mov
lret
xor
je
test
xorb
sbb
outsl
jno
mov
push
sti
sbb
rolb
lahf
or
loope
sahf
push
adc
outsb
push
sbb
loope
addr16
lea
or
insb
mov
cmp
push
push
jmp
xchg
push
sbb
mov
pop
jl
inc
push
jae
imul
shrb
sbb
mov
jbe
clc
jo
add
mov
aas
sbb
incl
xor
lret
ret
popf
enter
pop
pusha
fcmovne
mov
test
sti
or
adc
ljmp
xchg
pop
mov
ficoms
or
gs
xor
nop
mov
sbb
out
mov
fbstp
adc
mov
aad
mov
push
xorl
lahf
into
mov
rcrb
inc
imul
sarl
mov
xchg
fbld
sub
aaa
fadds
xchg
sbb
insb
fbstp
and
push
and
lret
lret
jl
in
adc
movsl
shrb
roll
inc
cmp
fstl
inc
mov
xor
and
lahf
push
aaa
cmp
ret
sarb
cmp
je
ret
jae
pushf
xchg
xchg
testb
mov
pusha
xchg
loop
jl
sbb
mov
lock
rolb
pop
adc
add
idivb
sbb
out
sub
jg
cs
xchg
push
xor
xchg
loop
mov
dec
ss
inc
add
shlb
daa
loop
jge
and
setg
mov
notb
mov
inc
push
xchg
lret
cmp
xor
lea
call
jg
dec
xor
jno
push
imul
sub
push
test
inc
xlat
leave
lret
and
mov
fcoms
bswap
cld
dec
and
insb
test
jl
mov
in
add
xor
movsb
in
ret
xchg
lods
cmp
insl
pop
add
scas
sub
push
add
jbe
and
rcrl
jmp
ss
stos
cmp
cld
scas
lods
decb
sarb
insl
lock
lcall
mov
stos
adc
mov
ljmp
adc
movsl
les
fisubrl
fcom
jns
mov
test
movsb
rol
and
stos
lock
je
xchg
sub
lods
nop
or
or
andb
inc
out
rcll
cmp
adc
mov
or
dec
push
stc
cwtl
add
add
add
pop
push
push
sbb
fnsave
je
testb
add
mov
aam
pop
outsw
ror
cmpsb
cmpsb
addr16
push
stc
or
lret
jmp
fadds
jno
or
test
rol
mov
insb
daa
lods
push
pop
nop
pop
push
nop
mov
faddl
mov
jnp
cs
mov
cmp
fldt
mov
bound
add
and
fisubrl
call
sub
pop
testb
rclb
push
lods
push
cmp
and
or
push
jl
dec
je
test
jmp
jmp
ss
mov
imul
leave
mov
cmpsb
shlb
mov
rorb
add
aaa
mov
xchg
xor
push
mov
xor
test
sub
loope
ja
add
cld
cmp
cwtl
xchg
sbb
out
cmp
repz
pop
push
std
cmp
es
inc
xor
push
cld
or
das
adc
rcll
dec
sub
mov
xchg
je
adc
jl
push
xchg
dec
xchg
icebp
jae
leave
or
imul
gs
enter
sbb
inc
mov
dec
cltd
mov
dec
subb
lods
movsl
lret
popf
push
lds
jecxz
push
scas
jns
das
xchg
cmc
xor
cmc
sbb
cmp
pop
sbb
loope
push
jl
std
lcall
repz
dec
push
sub
xchg
lea
lret
inc
sbb
jp
inc
dec
iret
sub
jae
test
fwait
pushf
mov
mov
adc
jp
mov
imul
inc
arpl
jns
inc
popf
into
shlb
lds
cmpsb
or
popf
and
fcomps
push
out
mov
fcmovne
outsb
cmp
or
enter
push
cmc
add
inc
pop
push
lock
loope
mov
sbbl
mov
mov
mov
or
jge
push
xor
sti
pop
mov
pop
jmp
dec
cmp
shrb
aaa
push
mov
xor
and
push
cmp
inc
leave
jl
mov
sub
arpl
scas
jne
icebp
out
dec
cmp
mov
mov
jmp
or
jno
xor
xchg
fucomip
jmp
add
int
std
lea
das
or
xor
aam
stos
sti
inc
dec
mov
push
subl
test
cmp
insb
mov
cwtl
fnstenv
test
dec
mov
pop
test
jge
inc
cmp
daa
testb
push
xor
or
sarb
movl
pop
pusha
in
lods
outsl
push
adc
add
and
add
das
push
movl
jne
into
imul
ja
gs
ss
and
inc
popf
call
dec
leave
fnstsw
push
lea
ficoml
jns
mov
jp
jns
out
or
mov
outsl
loop
cmp
rolb
addb
mov
pop
int
lret
and
in
mov
mov
jo
rcl
mov
jp
stc
cld
xchg
cs
inc
sbb
xor
or
jl
lock
cmc
test
cmp
adc
fsubs
xor
das
sub
dec
mov
repnz
faddl
adc
je
xor
inc
cmp
inc
mov
and
ret
pop
pop
xchg
sahf
rcll
push
repnz
sarb
ja
insl
jg,pn
arpl
enter
pop
adc
mov
call
push
dec
out
adc
cmp
ror
rcrl
mov
ds
mov
xchg
or
loope
aad
push
push
add
dec
push
xor
cmp
inc
in
xchg
push
ja
adc
in
dec
add
cmpsb
mov
or
clc
bound
repnz
xor
cmpb
add
push
adc
and
lods
jb
imul
sahf
mov
pop
sarl
push
xlat
loope
mov
or
rcl
pushf
fmulp
lods
or
dec
mov
and
loope
das
jl
insl
movsl
inc
int3
push
repz
iret
mov
mov
out
pop
adc
pop
xchg
xor
mov
mov
push
out
or
jge
sub
sub
dec
jno
out
pop
pop
adc
adc
cmp
inc
inc
jmp
dec
pop
aaa
rep
ret
inc
inc
or
push
cmp
jnp
cmp
lret
cmp
daa
add
nop
test
sub
arpl
lds
mov
gs
add
inc
in
in
mov
pop
xor
cmpsl
fs
test
mov
mov
out
or
lock
jo
outsb
sahf
cwtl
mov
inc
imul
mov
adc
data16
out
push
pop
push
mov
sub
stos
mov
in
and
pushf
xchg
in
arpl
clc
fisubrs
xor
sbb
js
cmp
sub
mov
es
push
test
mov
and
jecxz
jmp
mov
push
into
out
stc
jne
mov
mov
lds
fcomps
sub
cmp
addr16
movb
push
jecxz
in
or
aad
jo
aaa
in
mov
test
inc
outsl
jg
push
nop
dec
mov
push
mov
push
outsl
and
pop
addr16
or
add
jl
pop
lds
fwait
push
cltd
jp
push
mov
lods
gs
mov
neg
adc
adcl
pop
and
mov
lock
or
fidivrs
aas
shll
cmp
or
out
mov
mov
jns
cwtl
mov
les
and
loop
fnstsw
pop
cmp
adc
dec
je
xor
adc
lret
loope
adc
lea
inc
cmp
adc
shll
push
enter
arpl
cmpsl
pushf
fimull
outsb
fucomip
mov
adc
cwtl
out
adc
loope
jecxz
fs
sbb
xchg
add
out
adc
push
out
dec
repz
testb
int
loop
cmp
mov
pop
int3
arpl
shll
add
js
pop
cmpsl
mov
push
nop
adc
inc
mov
jmp
inc
mov
mov
sbb
shll
push
mov
daa
neg
jne
sbb
cmp
push
pusha
sub
test
out
add
jge
fs
inc
lods
testl
sub
lahf
arpl
cmc
aam
inc
mov
lods
jp
daa
xlat
sub
test
mov
cmc
das
cwtl
mov
aad
lcall
and
and
jnp
cmpl
fwait
jnp
mov
pop
push
arpl
pop
mov
lea
inc
lahf
stos
xor
aas
jle
addl
jmp
or
lock
popf
jo
dec
dec
add
fs
mov
stos
leave
hlt
mov
push
xlat
adc
mov
iret
push
jge
clc
xor
je
cmp
aam
mov
mov
enter
cmc
adc
imul
and
sti
loopne
arpl
xorl
shl
sub
sub
xchg
aam
repnz
jne
pop
int
or
sbbl
clc
add
clc
jp
xchg
out
add
add
mov
push
std
insl
sbb
mov
loop
loopne
js
hlt
fsin
inc
fsubs
or
adc
pop
pop
movl
cltd
push
cld
push
mov
ret
mov
mov
lahf
js
aad
sbb
mov
pop
pop
lret
adc
mov
inc
fisubrs
jp
adc
imul
adc
or
mov
push
fisttpl
pop
lods
lods
ss
fwait
inc
fildl
test
lods
outsl
jle
js
add
cmc
push
ret
pop
and
loope,pt
pop
std
xor
push
and
and
jle
lret
mov
cmp
test
lahf
add
sub
scas
imul
cmc
or
lock
xor
subb
sub
popa
sub
xchg
cmp
fistpll
daa
cwtl
outsb
mov
xchg
sub
xchg
mov
in
movsl
test
pop
lods
loope
dec
sbb
orl
jecxz
mov
cld
dec
lea
mul
jae
outsb
enter
cmp
sub
xor
fcompl
cld
sbb
aam
push
lods
in
popa
cmpsb
arpl
pop
mov
or
push
jns
mov
std
mov
stos
jbe
adc
cmp
xchg
imul
fisubrl
push
mov
mov
and
je
fldt
pop
fsubs
mov
ud2
cmp
wbinvd
xchg
test
push
ficoml
adc
xor
dec
mov
sub
popa
mov
jge
mov
scas
jo
cli
pop
aas
mov
loop
push
push
dec
sub
stos
clc
cli
mov
std
repnz
test
mov
int3
add
stos
jae
daa
imul
and
mov
jle
add
add
fmul
pusha
pushf
push
mov
icebp
dec
jne
sub
jl
in
push
mov
popf
sbb
lahf
cltd
and
dec
addr16
aad
xchg
loopne
out
pop
loop
or
push
enter
xchg
test
mov
in
or
dec
xchg
and
mov
sub
inc
xor
movb
xor
stos
add
in
lds
nop
pop
ficoms
mov
into
iret
xor
xor
jmp
out
mov
add
xor
jno
subl
mov
stos
jnp
lret
xor
sbb
fdivrs
cmp
or
sbb
mov
lcall
insl
pop
outsb
addr16
mov
stos
jmp
arpl
andb
mov
fsubrs
push
jle,pt
dec
adcb
pop
mov
add
sub
out
stos
xor
mov
jb
int
lods
sbb
xchg
lret
loope
adc
mov
adcl
xorl
outsl
cmp
push
xchg
out
outsb
int
mov
mov
jnp
gs
xchg
sub
inc
adc
push
xchg
dec
repz
ret
xchg
push
inc
cmp
popa
fmuls
ret
jb
lret
iret
popa
sub
or
xor
mov
out
or
aaa
sub
mov
mov
jo
or
ret
push
cmpsb
ficompl
or
adc
fsubl
insl
mov
add
sbb
movl
insb
pusha
lea
imul
push
xor
mov
push
and
les
dec
mov
leave
das
sbb
js
arpl
mov
jg
mov
stos
shl
pop
gs
fnsave
lret
andb
jnp
jecxz
mov
and
pusha
es
cmp
fmul
mov
sahf
add
xchg
and
insl
stos
add
xchg
xchg
inc
mov
flds
xchg
jg
cmp
xor
out
out
and
std
mov
sbb
lea
add
shl
add
push
mov
test
std
lret
dec
and
adc
jecxz
aaa
mov
es
xchg
into
test
ficompl
out
or
mov
popa
dec
mov
xchg
popa
popf
cmc
pop
xchg
jae
mov
aaa
mov
lea
scas
fmuls
cli
jg
imul
jle
out
and
sub
into
out
lret
out
das
lods
pop
xchg
sub
sub
push
pop
jl
and
ror
nop
std
bound
sbbl
aad
sub
xchg
dec
and
testl
mov
mov
pop
shlb
dec
add
xor
loop
ss
data16
lds
dec
xor
jns
aad
jge
add
ret
lahf
stc
xchg
xor
loopne
push
pop
sub
jnp
cmc
mov
jbe
dec
adc
xor
adc
int
add
add
and
out
inc
in
sbb
jle
mov
xchg
repz
mov
aas
sub
mov
rol
jecxz
lahf
xor
push
sub
stc
test
mov
xor
or
push
nop
sub
cmp
push
push
data16
xor
lea
les
int3
push
push
xchg
scas
in
in
jge
dec
loop
in
mov
sbb
mull
mov
test
push
push
jae
test
xchg
scas
jp
push
dec
mov
hlt
lret
fistl
xchg
addr16
jl
push
inc
dec
test
inc
clc
add
adc
lret
jp
add
mov
cli
pause
aad
push
push
rcrb
movsl
leave
scas
xchg
cmp
cmp
in
push
addl
cmc
in
inc
mov
jg
mov
mov
xchg
push
sbb
dec
cltd
ret
movl
xor
sarb
cmpsb
push
icebp
dec
scas
mov
repz
push
fs
decb
repz
orb
faddl
mov
mov
stos
lock
movsl
inc
push
or
dec
and
jnp
xchg
int3
mov
xor
fs
bound
push
adc
push
int3
repz
fiaddl
jae
mov
jne
lods
cbtw
xchg
test
mov
scas
or
push
sub
push
or
pop
lahf
mov
xchg
arpl
mov
and
add
push
push
loop
cvtpi2ps
sub
sub
mov
xchg
fs
ljmp
imul
pushf
adcb
mov
inc
and
mov
out
movsl
cmpsb
aaa
stos
cmc
xchg
bound
lret
or
adc
imul
push
iret
mov
or
scas
mov
sub
int3
dec
xchg
mov
movsb
pop
xchg
les
xchg
cs
stc
mov
jmp
jp
test
add
repnz
sub
shll
xor
stos
sub
sbb
jg
cmp
pop
dec
lcall
jmp
jno
ss
lahf
adc
sbbb
cmp
ja
sarb
loop
pop
cld
lcall
cmp
and
outsb
in
mov
jns
lods
mov
sar
shl
insb
sahf
icebp
jae
fcomip
lahf
lret
mov
popf
mov
outsl
subb
mov
xchg
or
iret
aaa
mov
std
out
sub
mov
inc
nop
push
or
or
push
testb
dec
popf
jno
out
rcrb
inc
mov
repz
inc
push
imul
sub
leave
pop
xchg
dec
fldt
xchg
push
sbb
ss
or
push
jbe
sbb
mov
jmp
xchg
xchg
and
and
dec
adc
mov
int3
xor
loop
popa
and
rcl
lods
fnsave
mov
dec
dec
outsb
mov
mov
sbb
shl
cmp
jg
movsl
test
popf
xor
pop
cmp
push
out
aam
cltd
aas
sbbb
leave
xor
xchg
mov
loope
xchg
cmp
cmc
pop
es
mov
xchg
and
daa
inc
leave
pop
or
lcall
insb
sub
es
add
out
movsb
mov
data16
mov
xor
je
jb
mov
push
jnp
enter
or
adc
push
insl
xchg
fisubs
jnp
sub
in
insb
mov
mov
ja
out
mov
jp
mov
into
je
pop
mov
cmp
fidivrl
jb
push
pop
loope
sbb
mov
clc
repnz
mov
or
xor
sub
insb
shrb
mov
inc
and
ret
in
sarb
dec
inc
push
ja
iret
in
sbb
push
push
inc
pop
or
xchg
ljmp
mov
clc
jbe
xor
and
fmull
cmp
stos
mov
cmp
and
jne
repz
pop
scas
and
or
popa
out
rcll
sbb
mov
pop
movsl
push
mull
daa
pop
notb
cli
lods
dec
dec
iret
fsubrl
mov
jmp
adc
jb
daa
jae
adc
test
add
sbb
add
add
std
data16
xchg
push
push
lods
mov
cltd
mov
inc
sti
clc
lods
or
daa
pusha
outsb
cmovae
aaa
cmp
jb
pop
je
lods
inc
clc
sub
imul
sub
pop
jne
jmp
xchg
sub
xchg
pop
push
or
jl
jnp
es
xchg
xchg
shlb
bound
ret
sbb
mov
test
mov
mov
inc
ljmp
leave
xchg
test
mov
rolb
xor
insb
test
sarl
movsl
push
jo
dec
cltd
ds
mov
ja
in
dec
sbb
jl
mov
movsb
arpl
dec
mov
leave
aaa
mov
lock
adc
loopne
dec
mov
pop
pop
jb
sub
sbb
in
pusha
mov
lret
int3
mov
lret
push
in
pop
out
sub
aas
xchg
imul
xchg
mov
clc
sub
aas
lds
pop
inc
ja
stos
mov
insb
addr16
push
sbb
inc
je
loop
pop
addr16
xchg
pop
into
pop
xor
int3
int3
lret
movsb
sub
pushf
adc
pop
add
subb
or
mov
pop
pusha
pop
les
int3
push
lock
push
cmp
and
pop
in
roll
push
lret
out
ljmp
jg
rcl
and
sbb
scas
and
jbe
cs
add
lret
jae
fincstp
cs
cli
cwtl
lret
outsl
xor
fprem1
in
add
divb
push
mov
stos
fidivs
insb
cmc
mov
xor
push
scas
cmc
and
push
mov
jno
mov
rcl
cmpl
pop
mov
add
jg
pop
push
ds
jne
mov
icebp
cltd
fmuls
xchg
pop
push
or
mov
insl
xchg
mov
fstp
and
add
jo
xchg
rcl
cmp
jge
cmc
fsubrs
xor
or
mov
ljmp
push
out
dec
popa
fmuls
pop
dec
shl
icebp
adc
push
jecxz
cwtl
mov
mov
mov
sbb
test
add
in
sub
roll
pop
rcrb
mov
cltd
sbb
loopne
xor
popf
add
dec
loope
decb
xchg
xchg
cli
lea
jmp
pop
add
daa
pop
adc
push
dec
add
test
icebp
scas
xor
sahf
lods
mov
popa
dec
or
and
in
je
jnp
jmp
rolb
jge
out
pop
std
mov
jecxz
inc
jle
shr
pop
cmp
sbb
mov
outsb
es
and
xor
cmp
icebp
fistps
imul
mov
mov
inc
test
je
out
mov
call
in
in
adc
jecxz
fisttpll
mov
push
push
popf
scas
lods
insb
lahf
mov
dec
jle
inc
mov
in
ret
pop
pop
or
in
in
push
nop
ficoms
dec
sub
lds
cmpb
out
inc
popa
out
jp
and
lcall
xchg
mov
das
and
push
in
push
aad
in
xlat
xlat
push
test
popa
xor
push
out
xor
out
loop
scas
js
xchg
push
rclb
pop
add
inc
std
xor
add
and
xchg
sub
insl
pop
repz
pop
xchg
and
or
xor
xchg
cmp
into
lods
movsb
loopne
clc
rorl
inc
push
ja
push
daa
xor
mov
mov
lods
bnd
xchg
sub
in
popa
in
rcl
shl
test
push
lock
push
mov
inc
pop
lcall
ficoml
cmc
mov
sub
add
adc
or
pop
ja
pop
stos
or
pop
lcall
es
int3
dec
jmp
cmp
mov
inc
mov
andb
jne
into
sti
xor
push
or
xchg
adc
add
sub
lds
ficoml
in
in
jge
or
pop
jl
sbb
or
add
or
in
push
push
add
jno
cwtl
subb
or
xor
aam
js
mov
leave
inc
xor
loop
aas
arpl
fcoml
clc
pop
dec
bound
mov
movsl
outsb
cmpsl
jae
push
fnop
add
mov
cmp
divb
loope
push
movsl
inc
pop
sbb
sbb
add
mov
sub
xor
pop
jo
daa
es
hlt
decb
out
int3
adc
enter
jns
mov
push
push
faddl
ficomps
push
jno
push
xor
xor
push
cwtl
cmp
out
in
arpl
pop
mov
add
mov
insb
add
mov
inc
mov
cmc
xchg
aam
fdivl
int3
add
mov
in
inc
sti
sbb
aaa
xchg
jge
decl
jmp
ret
pop
fdivs
push
test
inc
arpl
std
mov
adc
add
or
sub
imul
sub
subl
dec
mov
push
aas
test
decb
fisttpl
pop
test
sbb
mov
cmp
jne
dec
sbb
jge
lods
fsubp
mov
or
and
sub
add
dec
pop
clc
sub
adc
cmpsb
loope
ret
xor
and
test
push
scas
addr16
stos
sub
shlb
lods
dec
in
xchg
in
mov
js
imul
mov
ja
je
add
mov
inc
xor
cmpsb
fdiv
push
dec
sub
pop
mov
mov
frstor
add
fists
cmp
aaa
fcom
ss
xchg
dec
lea
cmp
push
mov
imul
xor
movsl
pusha
seta
hlt
lock
or
cli
mov
lods
test
js
adc
lret
push
xchg
js
rcrb
push
inc
gs
loope
push
shll
shrl
mov
sbb
scas
and
sarl
or
and
sbb
adc
jae
popf
push
gs
jl
pop
push
adc
dec
dec
inc
cwtl
movsl
sbb
nop
les
jbe
clc
or
fbstp
dec
add
arpl
std
imul
adc
leave
dec
rorl
jmp
mov
mov
sub
push
jne
ss
cli
inc
icebp
inc
mov
stc
movsl
ret
xor
or
rclb
addr16
fldenv
mulb
ret
sbb
dec
bound
sbb
es
lds
inc
mov
mov
cmc
bound
sbb
pop
jae
shrl
pushf
inc
or
adc
movb
sub
lret
add
inc
adc
popa
rolb
sbb
and
fwait
pop
pop
lods
out
hlt
pop
dec
cmp
popf
mov
adc
inc
mov
sar
dec
ret
push
add
mov
imul
ret
inc
cmpsl
inc
leave
jo
adc
sub
sbb
add
push
fidivl
pop
les
outsl
jb
leave
rorl
frstor
mov
adc
ret
or
bound
call
cmp
lret
icebp
dec
sbb
repnz
sbb
add
cmpsl
and
push
dec
and
aas
std
push
push
leave
sbb
sub
cli
fwait
aam
push
jno
push
fnstsw
mov
std
test
mov
jp
stc
cli
fbld
push
std
pop
in
mov
js
xchg
aaa
movsl
push
cmpsb
in
add
mov
ja
imul
sahf
inc
pop
xchg
into
test
push
cmc
mov
and
cltd
stos
jae
cmp
mov
into
xor
cmp
or
gs
add
cmpl
stc
mov
shlb
sub
repz
sbb
pop
pop
cmp
inc
jmp
dec
jp
stc
push
sbb
vpcmpeqd
pop
or
test
scas
ds
jae
mov
jnp
sti
sub
cltd
stos
pop
sub
add
inc
dec
insl
mov
mov
push
pop
loop
and
cmp
xor
outsl
push
in
xchg
int
test
pop
sub
xchg
stos
inc
xchg
sub
xchg
jge
mov
scas
inc
jbe
loope
jle
sahf
shr
out
jns
popf
fs
sub
xchg
add
sbb
pusha
jnp
jae
dec
lahf
rorb
xchg
cmp
push
popf
leave
or
sub
dec
xchg
add
xchg
mov
jle
dec
sbb
sub
mov
out
js
fs
adc
jbe
enter
or
aam
or
mov
inc
mov
mov
sub
mov
in
sub
jns
or
lcall
call
notl
pop
cmc
leave
mov
mov
jle
push
inc
or
adc
push
ljmp
aam
test
and
pop
iret
xchg
cli
xor
iret
aaa
cwtl
or
das
stos
test
mov
sub
adc
sarl
lock
cmp
sarb
ja
xor
cmpsl
jb
scas
mov
xor
jp
arpl
dec
outsb
daa
and
std
aam
and
inc
jl
sbb
popf
aad
adc
cwtl
and
push
jb
ss
out
out
stc
fnstcw
and
add
movl
or
mov
test
pushf
and
test
mov
aaa
shll
repz
or
std
in
addr16
in
cmp
inc
push
outsl
das
frstor
mov
decl
repnz
dec
push
stos
test
pushf
sar
fs
push
xchg
fstps
jnp
loop
insl
xor
add
es
push
rorl
sbb
test
gs
jecxz
inc
es
pop
imul
imul
test
into
adc
dec
in
jge
mov
dec
jp
mov
jno
int
pop
mov
adc
lods
cwtl
inc
ret
inc
lret
hlt
pop
into
pop
pop
daa
inc
mov
or
daa
in
sub
in
sub
cltd
mov
xor
addr16
int3
or
ja
subb
mov
mov
dec
int3
sbb
stos
aas
into
cmc
jmp
adc
mov
iret
xor
or
mov
push
cltd
or
pop
mov
dec
mov
stc
or
faddl
pop
push
cwtl
fstps
scas
ja
mul
xchg
sbb
jns
pop
addr16
bnd
push
jecxz
lret
add
cmp
inc
pop
adc
outsb
jmp
test
mov
jo
insl
pop
jmp
rcll
mov
cltd
hlt
cmp
push
adc
cmpsb
movsl
mov
jae
mov
jb
mov
int
imul
jmp
cltd
push
adc
arpl
pop
pop
sub
inc
or
out
xor
stos
test
ret
sub
mov
add
mov
repz
cltd
mov
lret
jbe
lcall
mov
icebp
into
leave
int
mov
mov
lret
daa
sbb
mull
test
icebp
fimuls
test
inc
push
fdivl
jp
es
icebp
sub
shlb
dec
sbbl
cmpsl
or
xor
and
mov
inc
ret
add
test
dec
dec
and
aad
push
pop
add
cltd
ds
inc
js
dec
add
stos
dec
rcrb
lret
pop
mov
rorb
cltd
dec
daa
jl
bound
push
aaa
lcall
mov
mov
int3
mulb
mov
inc
call
int
les
loope
and
and
and
aad
enter
xchg
sarb
mov
cli
inc
and
pop
notl
test
insl
mov
mov
add
cmp
stos
std
dec
addr16
arpl
fstl
sbb
and
pop
pusha
sbb
or
lret
mov
adc
mov
stos
in
mov
out
imul
sub
out
stos
fisubs
fists
fstl
mov
jne
mov
or
inc
popf
adc
mov
test
call
sbb
insl
test
loopne
jl
pop
jmp
icebp
test
jg
mov
ljmp
xor
sarb
ret
nop
pop
adc
inc
lahf
mov
and
leave
xor
es
xor
dec
inc
sub
fprem1
inc
adc
js
xlat
orl
ficoml
mov
pop
adc
mov
test
cmp
js
xchg
xor
add
cwtl
jle
ss
enter
rorb
mov
sub
pop
jns
dec
in
inc
jne
and
imul
push
adc
ja
mov
xchg
stos
sti
jns
jnp
repz
cmp
lock
push
add
mov
lea
ds
mov
cld
add
dec
ja
add
aad
nop
push
or
mov
pushf
imul
sbb
enter
adc
cltd
or
fnstenv
mov
into
mov
push
ss
ljmp
adc
loopne
int3
mov
mov
jl
jne
mov
mov
pop
xchg
or
das
test
or
push
lock
pop
xor
push
sbb
sub
adc
addr16
stc
test
sbb
leave
sbb
adc
pop
or
loopne
pushf
adc
sub
je
inc
aad
sahf
aad
sbb
mov
das
mov
fs
outsl
xchg
push
into
jnp
sub
jecxz
add
adc
sub
push
jmp
cmpsb
rcll
mov
push
bound
addr16
ficomps
imul
cmpsl
out
push
aas
dec
iret
fs
inc
in
lcall
imul
mov
scas
mov
and
in
xor
arpl
push
stc
shl
cmp
dec
mov
loope
mov
mov
outsb
rorl
mov
loopne
shrb
ss
mov
add
adc
push
loopne
sbb
adc
nop
test
and
movsb
push
push
pop
xchg
inc
sbb
movsl
inc
shrl
adc
push
and
mov
cltd
lock
ds
bound
and
orl
jge
arpl
jbe
mov
inc
dec
cmpsb
and
repnz
jo
stos
mov
push
mov
cmc
movsb
cli
mov
lret
mov
repz
mov
fisttps
fs
xlat
mov
add
push
push
jne
and
shlb
inc
movzbl
shrl
outsb
push
adc
mov
ljmp
mov
sti
mov
adc
stos
xchg
cmpsl
popf
cmp
inc
iret
pop
or
repz
or
adc
jo
pop
pop
mov
bound
mov
xor
mov
pop
adc
mov
mov
cltd
and
loope
cmp
sahf
imul
xlat
ret
adc
or
adc
test
push
int
out
rorl
call
jae
and
clc
xor
jo
out
xchg
or
pop
sub
push
stos
xchg
imul
mov
dec
push
jo
sub
ret
mov
into
pop
mov
mov
loopne
ljmp
and
daa
xchg
pop
shrl
pop
mov
sub
aas
popa
sbb
mov
push
cmp
and
popa
adc
lret
pop
nop
jg
mov
xchg
push
push
adc
imul
outsl
and
push
es
jmp
rcrb
in
cld
lds
xchg
lds
adc
stc
fisubs
adc
pop
push
outsl
jae
inc
sub
lock
jle
or
fwait
ret
lahf
mov
ljmp
pushf
xchg
movsl
js
lcall
mov
test
lcall
cli
or
push
test
scas
popf
add
or
xchg
push
out
mov
push
das
fbstp
xor
inc
lcall
dec
in
cld
or
out
or
ljmp
je
outsl
mov
sarl
mov
daa
cmp
cmpsb
nop
jg
fidivl
sub
ret
test
loop
imul
add
pop
or
adc
push
xchg
push
pop
shll
xor
mov
inc
shrl
dec
popa
inc
dec
sahf
shl
ja
in
insl
inc
mov
shll
iret
loopne
mov
lea
pusha
dec
add
lea
das
and
lret
adc
xchg
gs
ss
jg
sbb
mov
push
loopne
sub
and
loope
je
addl
stos
nop
push
mov
repz
push
add
add
shlb
popf
xchg
loop
ret
mov
adc
les
fistl
scas
fadds
movsb
aas
xor
ret
sar
cmp
add
push
hlt
fldenv
add
orb
xor
dec
loope
sahf
dec
enter
loop
push
add
push
push
sbb
rcrb
mov
dec
xchg
pop
out
test
sbb
mov
imul
xor
mov
out
mov
xor
rcrb
repz
dec
jae
int
inc
in
idivb
cmp
mov
add
jno
stos
ja
fsubrs
push
sub
mov
inc
push
loopne
call
inc
and
ja
test
xchg
and
repnz
popl
mov
sti
mov
stos
pop
cmp
pop
cmp
jl
daa
dec
jbe
push
iret
xor
cs
test
or
pop
mov
movsl
fsubr
adc
jb
adc
out
pop
jnp
fdivl
sbb
loop
testb
jo
pop
shrl
lds
pop
les
daa
test
lret
pop
or
xchg
push
mov
fsubl
jo
mov
mov
imul
mov
je
jbe
fldt
pop
lea
das
sbb
mov
sub
ficomps
ret
shrb
aam
movsl
imul
pop
fiadds
stos
lea
add
movsb
out
pop
insb
mov
mov
and
fst
sub
scas
aam
clc
mov
arpl
pop
or
ret
cmpl
je
out
xchg
mov
into
icebp
mov
cmp
or
add
mov
std
fisttpl
int3
ficompl
inc
call
fsubp
sub
fmull
scas
pop
push
addb
lods
or
mov
xor
xchg
push
addb
and
lods
inc
sti
jae
es
xor
mov
push
mov
out
pop
cwtl
in
mov
xchg
jo
inc
fs
xchg
shr
jle
dec
aaa
rcrb
dec
aas
push
lcall
js
loop
ja
popa
lods
outsl
popf
add
ret
adc
jl
andb
push
loop
pop
xor
sbb
jmp
adc
xor
shll
cmp
imul
dec
pop
pop
orb
aam
int3
sti
cmp
cmc
imul
arpl
and
xchg
ds
out
cmpsl
repz
sub
xchg
push
cmp
repnz
idiv
jno
pop
xorb
gs
sahf
insl
popa
adc
in
sbb
xor
sbb
outsb
sub
loope
imul
xchg
arpl
inc
cld
mov
sub
insl
mov
jg
fnstcw
lret
adc
gs
fcomps
dec
pushl
or
mov
inc
gs
rolb
push
inc
out
ss
sub
and
and
push
mov
cmp
in
test
daa
mov
das
cmp
push
xor
inc
in
cwtl
pop
add
test
js
inc
adc
lea
jne
xor
shrl
mov
push
xchg
pop
sti
mov
pop
jb
jns
push
xchg
je
imul
adc
push
pop
inc
dec
xchg
push
mov
pop
jp
jmp
pushf
add
sbb
or
lahf
adc
jo
and
call
mov
sub
inc
shrl
je
jae
sbb
pop
js
adc
xchg
mov
mov
pop
icebp
sti
sub
adc
popf
ja
iret
leave
inc
pop
insb
out
shll
iret
push
mov
ret
rcrb
sub
insb
sbb
call
xchg
push
test
popf
loop
stos
mov
js
scas
mov
repz
fdiv
add
lcall
ret
popl
mov
pop
lcall
add
mov
xor
mov
mov
add
je
data16
aad
push
xor
push
mov
cmp
mov
cmc
inc
cmp
jbe
inc
jae
and
scas
mov
pop
rcrl
cmp
ror
add
mov
sub
lds
in
xchg
jmp
dec
mov
or
call
inc
out
mov
or
xor
mov
pop
dec
rorl
mov
xor
dec
rclb
jle
sbb
insb
lahf
sbb
mov
loop
movsb
outsb
mov
addr16
scas
jne
nop
mov
jg
sti
xlat
or
push
jmp
mov
test
sbb
mov
mov
mov
icebp
movsb
hlt
enter
imul
mov
jecxz
inc
addb
xor
pmaddwd
push
mov
mov
sub
mov
je
out
scas
sub
mov
add
cwtl
adc
adc
push
push
lock
mov
mov
test
or
dec
stos
jg
in
xor
gs
xchg
jmp
cmp
inc
adc
mov
sbb
mov
fcoms
jnp
in
cmp
sbb
fninit
jae
clc
fdivrl
into
mov
lahf
or
loope
movsb
cli
imul
ret
imul
loopne
sahf
and
daa
dec
xor
idivb
in
out
and
hlt
inc
arpl
pop
xor
imul
mov
hlt
je
push
push
aaa
enter
jg
pop
xlat
mov
bound
push
xor
aas
sbb
imul
xor
jmp
je
dec
mov
adc
cmp
lds
pop
clc
xor
pushf
sbb
add
aaa
mov
and
jmp
adc
sub
sbb
dec
push
xor
inc
pop
lds
dec
cmp
ss
mov
pcmpgtw
sti
inc
sti
mov
in
imul
cwtl
pop
sub
jl
or
lar
je
fcmove
push
cwtl
lea
pop
dec
and
hlt
mov
fdivr
loopne
movsb
dec
jp
push
outsl
inc
outsb
aas
sbb
addl
filds
mov
push
repnz
mov
cmpsl
bswap
jg
ljmp
popf
xor
jb
bound
jo
cmpsb
mov
iret
mov
fildll
mov
mov
jecxz
add
and
into
inc
in
mov
jb
lods
icebp
orl
jb
ds
outsl
add
xchg
inc
xchg
mov
add
add
jp
test
subb
mov
cltd
js
les
jl
shlb
dec
or
and
ja
dec
push
aad
lret
jp
mov
and
and
and
push
dec
jmp
fwait
mov
ljmp
jb
test
jns
and
xor
addr16
inc
mov
sub
cmp
add
hlt
es
stos
rolb
dec
add
popf
sbb
add
test
dec
or
jo
cmp
inc
into
out
gs
imul
xchg
jo
push
inc
mov
mov
xor
add
out
inc
ffreep
mov
popa
out
subb
rorl
cmp
inc
fldenv
jae
push
xor
add
test
repz
loope
cmpsb
mov
dec
xchg
push
cmp
aad
cmp
xlat
jp
out
cmp
push
pop
movsb
xor
aas
xor
pop
das
movsb
jl
loop
mov
mov
dec
test
scas
divb
dec
xorl
fidivrl
sub
ljmp
sbb
mov
fdivl
fsubrl
or
inc
into
inc
out
add
out
and
sbb
jg
repnz
addr16
shrl
pushf
das
dec
insl
cltd
xchg
mov
pop
cltd
adc
lret
hlt
xor
xor
fdivr
int3
arpl
add
inc
lods
push
mov
sbb
std
xchg
jp
lret
dec
dec
jle
aam
idivl
test
clc
sbb
mov
pusha
dec
mov
push
bnd
lahf
sbb
mov
inc
aas
fists
cmp
leave
movsl
aam
cltd
or
iret
sar
sub
pop
loopne
mov
dec
inc
mov
mov
dec
ja
adc
push
ljmp
rol
push
popf
push
fcom
sub
xor
dec
xchg
xchg
rcll
add
sahf
mov
push
add
mov
fs
sub
inc
inc
add
dec
aam
data16
int
sarl
sbb
pop
fs
pop
add
xor
out
shll
scas
jae
int
jbe
fsubs
stos
add
shr
sbb
or
stos
mov
jmp
sahf
push
cmp
cmc
stos
lret
dec
popf
mov
insb
dec
xor
mov
inc
mov
imul
fdivrp
ret
add
mov
push
push
xlat
cmp
pop
sbb
push
int
push
mov
mov
mov
cmpsl
xchg
and
sub
divl
cwtl
subb
clc
fwait
cmp
jmp
jg
ja
mov
mov
addb
loope
fs
sbb
jl
filds
sarb
mov
scas
scas
dec
mov
int3
xchg
aam
mov
into
xchg
in
mov
add
adc
and
pop
mov
sub
cltd
jge
add
sar
loope
faddl
adc
dec
pusha
add
adc
pop
les
cs
xor
repnz
lret
xor
add
je
push
cli
rolb
outsb
shl
fisubl
lcall
xchg
xchg
mov
mov
vmwrite
bnd
jle
fcmovnu
in
dec
mov
iret
loopne
xor
cmpsb
ja
les
adc
scas
mov
ret
out
dec
or
jmp
mov
mov
push
or
adc
ror
xchg
push
jg
sbb
frstor
push
repz
and
jb
xchg
pop
imul
sti
mov
adc
cmp
in
jns
out
push
loopne
sbb
cmpsb
aad
push
jmp
lcall
fdivrl
sub
push
jb
jne
push
sub
push
pop
shlb
add
mov
mov
jns
js
addr16
hlt
and
add
fdivrs
gs
andl
pop
inc
push
lea
pushf
sahf
hlt
jecxz
mov
jno
ja
stos
mov
imul
into
ds
aad
aam
loope
sarb
popa
ds
sti
jae
aas
mov
das
adc
test
xchg
es
mov
fcompl
enter
sbb
cmp
loop
and
arpl
push
mulps
sbb
or
push
pop
fcmove
xchg
adcl
lods
pop
adc
add
and
mov
jecxz
cld
dec
dec
jns
subl
or
scas
adc
int3
push
shr
jbe
cmp
lret
xchg
or
or
sbb
std
pushf
out
adc
scas
push
clc
jns
cmp
nop
repnz
push
loop
loope
xchg
fldcw
dec
push
add
pop
neg
add
sbb
or
sub
sbb
test
inc
dec
jae
inc
add
mov
fs
mov
scas
mov
das
imul
and
subl
inc
jae
sahf
lret
pop
pop
inc
mov
pop
insb
push
adc
cmp
mov
int3
scas
mov
adc
into
test
movsl
addr16
popa
out
cs
jecxz
mov
popa
cltd
std
ss
jno
inc
in
loope
xchg
push
cmp
xchg
push
xorb
pusha
xorl
clc
aad
sub
ret
adc
xchg
add
mov
pusha
int3
mov
inc
shll
sbb
mov
test
mov
add
mov
sub
ret
cltd
aas
arpl
sbb
lcall
or
dec
and
rorb
xchg
aas
xchg
adc
mov
cmp
add
mov
jno
cmp
and
and
mov
pop
cmp
gs
rol
fs
mov
mov
insl
rorb
mov
mov
leave
push
push
das
lods
dec
dec
aad
jle
icebp
mov
xchg
imul
out
cwtl
push
cmpsb
adc
mov
insb
icebp
imul
mov
call
push
or
jmp
loope
mov
add
das
push
and
lret
lods
cmpsl
mov
fsubs
xor
mov
inc
scas
inc
sub
adc
sub
ljmp
in
sbb
insb
movl
fldenv
lods
jecxz
cmc
mov
loope
std
push
jmp
rolb
movsl
pop
and
aas
arpl
and
pmovmskb
stos
dec
xor
sub
inc
mov
bnd
jno
lret
push
push
dec
sub
sbb
in
jle
lcall
enter
adc
out
outsb
clc
pop
out
pop
repz
iret
enter
mov
jle
ljmp
sbb
sbb
xchg
lods
mov
ret
dec
mov
in
fs
cld
ds
fdivp
xchg
cmp
push
push
push
pusha
or
in
les
push
sbb
mov
rcll
xor
in
or
jle
inc
fcomp
loopne
insb
cmp
mov
sub
mul
pop
jmp
insl
xchg
mov
cmp
ret
mov
stc
or
pop
leave
inc
pop
fmull
jb
test
test
loop
arpl
xchg
pop
add
sub
repnz
pop
adc
lods
shlb
popf
dec
scas
data16
mov
fisubs
dec
adc
iret
fidivs
enter
shrb
mov
clc
push
sub
add
fsubs
inc
stos
mov
xchg
xchg
dec
xor
ucomiss
out
xchg
sbb
push
jl
sti
es
popf
loop
mov
mov
pop
lret
arpl
xchg
add
dec
inc
rcr
idivl
in
jne
add
stos
xor
jo
push
fs
ficompl
mov
lahf
pushf
out
fwait
cltd
xchg
push
les
and
lret
dec
xlat
repz
mov
dec
pop
stc
sbb
lret
push
sbbl
mov
xchg
out
clc
insl
and
fimuls
popa
scas
ret
cmp
xchg
iret
leave
xchg
sub
sbb
ds
pop
je
incb
hlt
jb
shl
sarl
mov
outsl
jo
jp
adc
pushf
jnp
inc
sbb
out
push
mov
test
mov
test
mov
inc
lret
mov
std
out
or
mov
pop
les
lret
push
lods
push
jmp
mov
clc
push
loopne
loop
test
shll
cmp
push
inc
ret
scas
ret
jno
or
in
cmp
enter
mov
mov
xor
mov
sub
jae
sbb
lahf
sub
dec
popa
mov
push
lret
aam
in
sub
dec
out
adc
ds
xor
lahf
or
mov
cmp
aad
add
imul
int
jns
in
mulb
scas
into
fwait
pop
push
dec
stc
scas
xor
int3
push
cmp
adc
rol
scas
fiaddl
into
aas
or
pop
pop
xor
sub
scas
das
daa
ds
push
out
xchg
test
mov
imul
mov
popa
or
insb
cs
or
cmp
dec
flds
push
aas
and
and
sahf
repnz
jns
adc
notb
jp
dec
je
sbb
sub
mov
jo
adc
add
xchg
sbb
fmul
mov
sahf
in
jmp
mov
inc
cmp
xchg
in
jle
push
mov
fwait
pop
jle
int3
pop
clc
or
push
movsb
scas
jmp
inc
xorl
or
test
seto
daa
lods
insb
jp
mov
pop
imul
pop
ret
lahf
std
loop
movsb
arpl
mov
pop
fstl
dec
mov
jl
pop
push
jnp
add
jo
stos
imul
push
mov
dec
addr16
or
sub
repnz
xor
pushf
mov
test
mov
fidivl
xchg
hlt
rorl
add
pop
xchg
rcrb
and
stc
cmc
cmp
xchg
in
mov
call
aam
pop
scas
mov
pusha
or
or
inc
push
insl
std
ret
adc
scas
push
scas
fdivrl
fistpl
aaa
popa
jl
jnp
ret
int3
cmp
fdivrs
adc
sub
testl
fwait
jecxz
pop
mov
mov
imul
mov
pop
mov
push
xchg
mov
push
fsubr
push
mov
xlat
pop
bnd
push
fistpll
lret
scas
jg
jg
cmp
jbe
push
std
lods
push
lea
scas
lock
xorl
adc
jo
inc
in
ds
scas
pop
outsl
sbb
in
lods
mov
mov
inc
or
lcall
pop
mov
lret
lods
sub
xchg
cltd
out
push
out
dec
movl
mov
mov
jo
xchg
test
lock
jns
inc
or
or
mov
mov
add
inc
inc
dec
dec
outsl
jne
xchg
push
call
fmulp
cmp
je
or
popf
rcll
xchg
leave
fwait
addr16
lods
push
stos
cmp
pop
loope
imul
shl
cmp
mov
push
push
shlb
mov
pop
stos
movl
dec
add
ds
rcl
xchg
mov
and
gs
ja
sbb
sub
cwtl
jbe
je
pop
jne
sub
in
mov
xor
and
aaa
int
dec
mov
cld
popf
ss
xor
or
mov
lds
mov
jecxz
push
fmull
popf
icebp
shrb
sbb
and
mov
fiadds
dec
sub
inc
outsl
scas
popaw
loopne
xor
sbb
mov
adc
testb
xor
mov
insl
sub
cld
shrl
mov
sahf
repz
xor
xor
xchg
in
add
jp
jecxz
negl
insb
push
imul
addr16
push
jb
ror
fidivs
repz
repz
xor
or
fs
and
movsb
and
aam
sub
sarl
xor
xchg
push
xchg
movsl
insl
pop
bound
mov
dec
dec
mov
pop
fadds
lds
inc
fwait
iret
pop
das
or
cli
xchg
popf
mov
hlt
jp
dec
repz
fisttpll
sbb
adc
sub
xchg
and
or
cmp
roll
test
pop
pop
inc
movl
jo
repz
mov
testl
sbb
rorb
pop
daa
mov
repnz
cmp
jmp
ret
jns
pop
cmp
and
adc
je
repnz
mov
xor
dec
cs
lret
ffreep
mov
jecxz
or
cmp
cs
sbb
loope
jbe
test
in
push
rolb
sbb
or
mov
out
and
push
or
mov
pop
rorb
add
mov
push
push
popa
mov
rolb
mov
jo
or
fildl
fwait
cs
jecxz
sbb
ds
js
ret
add
mov
mov
cmpb
and
and
sbb
cmp
pushf
mov
mov
stos
sarb
enter
inc
cmp
and
sub
or
mov
jg
aaa
jb
push
aad
imul
int
icebp
dec
sub
stos
shl
mov
mov
lret
or
xchg
ret
push
push
out
fisttps
adc
icebp
hlt
mov
sub
adc
or
inc
movl
push
mov
out
aaa
cli
jae
push
cltd
int
fwait
out
mov
add
lcall
dec
push
ljmp
ficoml
inc
jae
imul
xor
movsb
sub
dec
sub
cmp
cld
xor
cmpsl
adcb
jecxz,pt
jb
in
jecxz
mov
sub
dec
aad
jl,pn
and
jae
test
lods
mov
insl
loop
xor
cmp
sbb
lahf
aaa
mov
fldenv
and
sub
add
stos
sbb
mov
or
sbb
and
mov
cmp
mov
and
ss
adc
in
jbe
jle
out
sti
outsl
mov
pop
cmpsb
or
mov
jbe
add
dec
push
movsw
das
jge
xchg
lods
loop
sub
jle
loop
cmc
imul
lahf
ret
fs
fdivrs
and
inc
sbb
dec
lock
jg
push
jbe
out
aad
jecxz
out
jne
clc
inc
sub
xor
shrl
xchg
imul
jl
fistps
dec
add
sub
push
data16
fildl
in
shll
or
into
loope
lock
adc
and
pushl
pop
adc
sub
rcrb
outsl
pop
inc
jle
sbb
inc
xlat
adc
xor
hlt
sti
testb
push
xchg
ret
mov
push
sub
or
movsl
addl
loop
add
and
js
fwait
inc
repz
sub
sahf
inc
daa
add
int3
push
lahf
sub
add
orb
jbe
adc
fs
fiaddl
cli
sti
call
jmp
cmp
mulb
inc
pop
aas
add
and
shll
cmp
push
adc
xchg
or
mov
dec
xorl
dec
lock
mov
jge
cmp
popa
insl
lret
das
addr16
ja
sub
mov
add
mov
das
push
push
mov
icebp
call
repnz
xchg
es
add
or
jmp
inc
inc
jmp
insl
mov
cmc
sbb
cs
cmp
mov
jnp
pop
outsl
in
scas
enter
sub
test
loop
std
jle
cltd
cmp
jb
sbbl
out
inc
out
or
int3
repz
xchg
mov
xor
adc
out
mov
cmpsb
loop
je
into
jmp
aaa
stos
loope
jle
orb
scas
ficomps
adc
sbb
and
shlb
mov
out
cmpb
pop
subl
jno
and
sbb
into
mov
sti
xchg
jo
lcall
sub
sbb
repz
jl
mov
clc
pop
push
add
xor
pop
mov
pop
iret
sar
xchg
lods
rcll
call
rcr
push
push
scas
fcoms
repz
or
jecxz
xor
cld
inc
cmp
add
mov
mov
push
int3
push
pop
aam
je
mov
inc
mov
rcrl
data16
loop
push
xor
dec
aam
lcall
ljmp
jl
fs
outsb
sub
xchg
in
rolb
out
fisubrs
mov
pushf
pop
cld
int
dec
add
mov
cmpsl
arpl
loope
incl
jg
idivb
inc
jmp
mov
negb
lret
cwtl
loop
dec
in
mov
gs
and
adc
lock
sub
xor
in
int3
pop
aad
mov
xchg
adc
adc
ret
mov
mov
jmp
jb
imul
pusha
and
cmp
and
jns
std
in
sahf
jno
aaa
movsb
cmp
fldcw
cmp
jecxz
ror
jne
and
ds
int
add
cmp
aad
repnz
jecxz
cmp
or
cwtl
xchg
std
in
orl
sbb
pusha
int3
cmp
rorb
jno
pop
cmp
pop
loope
adc
sarl
pop
repz
aas
inc
cmp
jnp
sti
dec
push
lret
and
sbb
insb
sub
ss
popa
push
notb
sub
cmpsl
inc
xor
pop
pop
mov
mov
jnp
and
mov
mov
cmpsb
and
roll
ljmp
inc
jne
mov
testb
sti
stc
cli
ja
push
add
frstor
pop
loop
sub
fisubrs
cmpsb
mov
mov
test
pop
xchg
scas
or
or
aam
sub
pusha
test
aam
push
xor
push
popf
xchg
mov
mov
push
cli
jnp
gs
inc
cmp
test
das
pmullw
lock
idiv
or
pop
xchg
dec
fsubrs
fistps
popa
fcompl
ret
pop
test
insb
lods
jae
ja
mov
out
xchg
cmpsl
icebp
rcrl
sub
pop
pop
icebp
pop
test
xor
dec
and
fimuls
xor
mov
cmp
insl
adc
stos
sbb
fdivrl
adc
sub
rcr
out
stos
push
sarb
aad
xchg
pop
or
cwtl
sub
arpl
mov
mov
xchg
xchg
jb
jle
das
in
or
adc
ja
enter
dec
adc
push
lds
or
dec
pop
jl
inc
clc
jp
or
pushf
lret
insb
les
jne
cmp
repz
dec
mov
lcall
pop
sbb
cs
outsl
adc
xchg
pop
loope
lret
pop
les
lahf
xchg
inc
push
outsb
les
jmp
pop
stos
fwait
outsl
nop
inc
or
xchg
loop
outsb
ret
mov
add
pushf
stos
add
mov
push
pop
loopne
mov
out
add
lock
dec
jg
jne
int
pop
mov
out
cmpsb
and
xchg
fildll
mov
xadd
lea
clc
cmp
ljmp
xchg
stc
popf
int3
fsub
push
fadd
daa
test
mov
sub
loop
mov
add
test
addb
lret
insb
repz
mov
cli
pop
cmpl
lret
lcall
push
push
repz
and
jmp
mov
push
shlb
xlat
add
push
cs
jnp
push
cli
inc
call
popf
fs
ljmp
fs
jle
rcrl
xchg
arpl
popa
fs
lret
outsl
or
cmp
lcall
in
xor
mov
lea
mov
ffreep
insl
divl
mov
lea
mov
or
subb
push
xor
sub
jmp
in
cmp
xchg
mov
pop
add
adc
pushf
cmpsb
mov
aad
jg
ret
sbb
out
or
xchg
ss
loopne
dec
mov
or
sbb
jmp
xchg
mov
and
lods
cmp
movsl
jmp
mov
sahf
jl
mov
push
es
sbb
xor
mov
mov
pop
shlb
xlat
pop
dec
adc
mov
mov
cmp
test
jno
push
fiaddl
in
mov
mov
mov
inc
and
scas
xchg
outsl
dec
jg
ret
sar
enter
repnz
das
inc
mov
dec
rorb
xchg
jg
loope
push
pusha
adc
fistps
sbb
add
dec
pop
mov
lods
adc
std
or
loop
pop
pop
jmp
or
loope
ja
sahf
cmpsl
inc
xchg
pop
in
add
dec
fdivl
ds
lods
stos
adc
pop
cmpsb
pop
fs
xchg
adc
stos
mov
pop
push
add
ret
or
imul
xor
inc
push
push
ljmp
je
and
shrl
cltd
popf
gs
stc
push
inc
mov
xor
insb
out
mov
add
push
imul
push
mov
loop
test
fwait
jae
xchg
pop
mov
xchg
mov
cmp
hlt
je
aam
lcall
inc
dec
xchg
or
ret
push
aaa
imul
negb
or
scas
or
test
and
in
cmp
jg
push
loopne
inc
les
push
cmp
pop
mov
push
jns
dec
inc
mov
adc
fistpll
adc
dec
pop
shlb
pop
jo
movsl
push
ret
sbb
sar
mov
mov
mov
sti
sub
and
push
in
pop
lock
dec
xor
mov
add
cs
insl
enter
push
inc
jo
lods
sbb
dec
mov
je
jg
fwait
xchg
pop
mov
xchg
push
jg
dec
dec
adc
pushf
fstl
pop
xchg
out
xchg
imul
dec
fldenv
hlt
enter
add
mov
sub
push
dec
xchg
idivl
std
xchg
movsb
jge
pop
jmp
mov
add
sbb
les
insl
mov
add
mov
add
rcrb
pop
cmc
mov
push
sbb
outsb
pushf
lret
xchg
jo
rdtsc
fisubs
aaa
and
push
push
leave
fsubrl
out
ss
ss
loope
icebp
div
push
add
rcll
and
add
stc
inc
push
pop
out
sub
popf
fs
mov
mov
rcrb
inc
call
xchg
insb
lret
lods
jg
xor
fisubl
mov
and
arpl
inc
add
jb
stos
inc
sub
pop
lock
fsubr
jmp
lods
les
js
push
ljmp
mov
js
jne
ret
inc
scas
or
inc
jbe
mov
mov
lea
mov
scas
pop
into
jae
cmp
push
fsubs
shrl
adc
repnz
mov
xchg
cwtl
pop
jle
pop
inc
sarl
out
shr
fld
pop
fistl
pop
inc
lret
cli
cwtl
dec
mull
mov
enter
insl
or
aas
xchg
js
mulb
xchg
xchg
xchg
xchg
xor
stc
fldcw
and
dec
ja
cmp
pushf
cmp
mov
inc
dec
idivb
sub
pusha
mov
xchg
or
push
and
in
ret
mov
aas
lret
mov
jno
sub
movsb
insb
mov
es
pop
in
cmpsl
pop
dec
clc
xchg
push
jae
mov
les
movsl
hlt
jno
lret
daa
jp
std
lcall
je
cs
push
dec
fdivrs
jne
jne
out
mov
sarb
out
cli
add
xor
jge
xorb
aas
xor
mov
das
fidivrs
clc
inc
repz
scas
lahf
inc
jno
inc
cwtl
adc
push
out
in
stos
rcrl
jae
cmp
scas
lcall
mov
jae
mov
adc
arpl
cmp
fsubp
leave
cwtl
push
inc
or
cld
dec
mov
push
lods
int3
xchg
ficoml
cld
int3
sub
dec
mov
mov
fwait
int
adc
in
adc
insl
push
ret
dec
jmp
js
adc
cmpsb
addb
mov
dec
mov
inc
mov
cmpsb
test
fildl
add
imul
aad
push
iret
pop
loopne
dec
adc
sub
push
arpl
jb
xchg
aaa
jmp
push
or
or
inc
std
fs
mov
aad
cli
push
pop
int3
mov
dec
mov
mov
inc
cld
ds
adc
sub
pop
in
add
into
dec
jl
mov
scas
cld
leave
shl
pop
pop
lcall
sub
cmp
mov
pop
xchg
aaa
loope
jbe
dec
add
add
loopne
pop
iret
loop
insl
fcompl
adc
cmp
lret
add
cmp
push
jno
jbe
mov
daa
cmp
xchg
mov
push
pop
dec
or
jb
inc
imul
mov
push
insl
sub
enter
ds
imul
mov
vpsllw
pop
jl
pop
in
ret
cltd
xchg
ljmp
xchg
dec
pop
push
int3
std
ret
adc
jns
xchg
pop
or
mov
call
js
mov
pop
fbstp
jmp
lret
adc
pop
das
xchg
lret
lea
repnz
cwtl
pop
or
loope
adc
jle
cli
lds
cmp
dec
aaa
mov
jnp
stos
cmc
mov
lcall
cmp
pop
add
push
pop
fnstsw
mov
imul
push
inc
add
and
stos
inc
jle
bswap
pop
jecxz
cmp
aad
int
mov
mov
ss
rorl
xchg
cmp
lds
cmp
jne
sbb
sub
pslld
js
and
repz
dec
xlat
push
push
pop
jmp
cmpsb
mov
push
popa
push
dec
and
xorl
xchg
mov
xor
push
fcoml
pop
arpl
sbb
pop
or
aam
out
test
aaa
add
inc
and
jge
test
push
mov
jns
imul
xlat
pop
aas
push
and
jmp
daa
xorb
sti
enter
mov
pop
sti
arpl
loop
fnstsw
repnz
cmc
pop
das
inc
lea
xor
js
dec
mov
insb
xchg
xor
sbbb
xchg
mov
mov
stos
test
mov
add
xchg
cs
mov
jb
and
jmp
pop
addr16
mov
pop
adc
cwtl
push
js
sbb
fisttpl
enter
out
das
and
push
into
pop
xchg
mov
mov
pop
test
cmp
or
ljmp
lock
xchg
push
js
fs
push
mov
movsb
aas
xchg
divl
and
sbb
out
pop
mov
hlt
and
or
jecxz
pushf
or
pop
dec
xor
into
push
or
jo
sub
repnz
cmp
mov
pop
mov
cmp
sbb
popa
addr16
and
negb
stos
shl
xchg
cwtl
dec
and
pop
popa
pop
xchg
lahf
mov
pop
clc
mov
xor
and
rorl
cmp
mov
or
clc
ficompl
jg
cmp
push
pushf
nop
xchg
jmp
or
orb
mov
lret
bound
scas
xchg
loope
push
ds
xchg
rolb
es
mov
mov
ficompl
popl
stos
adc
ja
push
sbb
adc
call
imul
std
flds
sub
popa
xchg
out
cli
mov
mov
adc
push
jmp
mov
jmp
inc
pop
mov
outsl
jmp
or
adc
xchg
mov
loopne
jl
jg
ret
pop
and
bound
fwait
stos
push
rclb
xchg
stc
mov
hlt
lcall
mov
mov
js
test
enter
sbb
adc
or
ficoml
xor
inc
mov
lock
test
fcompl
repnz
ljmp
sbb
push
sahf
shrl
cmp
stc
cs
mov
pushf
ret
mov
lock
sub
dec
aad
dec
stc
inc
in
mov
lcall
pop
test
xor
addr16
cwtl
repz
filds
and
int3
mov
cmpsb
mov
movsl
add
call
adc
mov
sub
add
xor
jecxz
cmp
mov
loop
aaa
push
mov
mov
pop
insl
push
mov
pushf
aad
fstpt
pushf
sub
in
sub
into
mov
sti
jo
fs
ds
xchg
jmp
jne
enter
adc
pop
push
pop
add
jbe
mov
int
add
outsb
das
ficompl
loopne
mov
shl
mov
xchg
in
push
mov
movsl
inc
rcrl
mov
xorb
xor
mov
popa
test
aad
out
add
xchg
jnp
lea
push
imul
test
stos
bound
mov
sub
xchg
mov
mov
popa
sti
std
movsb
les
jno
mov
pop
stos
std
loop
push
das
scas
mov
icebp
xchg
ror
mov
iret
call
mov
out
decb
push
jmp
outsl
pop
andl
rclb
xor
loope
inc
adc
mov
jp
hlt
dec
push
and
push
ret
inc
cmp
test
push
outsl
inc
add
adc
jae
outsb
int
call
lret
mov
mov
std
scas
or
divb
out
adc
out
stc
jno
cli
mov
cwtl
frstor
ja
fsubrl
in
vunpckhps
jb
adc
mov
sti
sub
sbb
mov
add
pop
mov
ret
sub
lods
inc
add
push
push
clc
shrb
ds
test
sbb
mov
outsb
xchg
or
sub
lods
pop
push
pop
out
sar
jecxz
jns
pop
jnp
out
insb
push
aad
jge
sub
lea
or
pusha
adc
xchg
mov
push
pusha
cld
popf
into
xchg
rcll
xor
iret
sbb
loope
sub
shll
aam
shlb
or
pop
mov
jecxz
pop
cmp
fbstp
out
mov
push
rep
imull
popf
imul
dec
pushf
cmc
call
or
inc
mov
xchg
inc
adc
pop
jle
sub
add
insb
dec
xchg
cld
dec
mov
aaa
push
testl
mov
adc
sub
mov
jle
pusha
sub
mov
pop
lahf
mov
fdecstp
daa
lods
out
les
adc
shll
fnstenv
mov
pop
cmp
add
push
mov
mov
cmpsb
out
out
fstps
sub
es
lcall
je
mov
lahf
cli
inc
mov
test
jnp
into
cmp
in
das
push
aas
and
jle
rol
lahf
and
cld
push
into
scas
loop
push
hlt
leave
cli
aaa
sahf
daa
jecxz
and
outsb
fisubl
mov
adc
pop
enter
pop
scas
in
sub
pusha
jo
inc
xchg
iret
cmp
xchg
jb
add
push
and
push
enter
scas
out
xchg
cmpsb
bnd
sbbl
and
fcmovne
mov
out
subb
or
sub
pop
fstpt
cltd
add
int3
push
push
and
dec
xchg
insb
mov
stos
loopne
jb
jbe
xchg
sbb
leave
mov
xchg
adc
lahf
fst
popf
shrb
jb
sub
cld
cwtl
xchg
dec
fistps
pop
cmpsb
xor
std
hlt
mov
mov
pop
push
scas
mov
push
mov
rcll
sbbb
pop
pop
mov
int
push
dec
divb
jg
cli
push
daa
pushf
sub
and
mov
sarb
xchg
in
or
inc
jg
push
push
sti
dec
pop
xchg
fwait
ss
icebp
jnp
iret
out
arpl
nop
pushl
mov
sub
or
cwtl
mov
cmp
das
icebp
jmp
push
push
test
dec
cmp
xchg
and
shl
lds
push
dec
mov
sahf
shrb
arpl
ret
pop
leave
push
stos
mov
mov
mov
fnstenv
pop
fmuls
pusha
inc
outsb
stc
aam
jb
test
sub
inc
sbb
aas
dec
dec
push
lret
idiv
and
push
inc
jl
or
jg
pop
mov
movsl
pop
mov
or
xor
adc
inc
mov
jmp
mov
sbb
sub
aam
outsb
pop
mov
mov
cs
shl
stc
popa
cli
pop
pop
andb
dec
mov
jae
adc
cli
fisubrl
lret
sbb
pop
inc
filds
sub
push
adc
in
outsl
test
movsl
lods
pusha
mov
lret
sbb
ss
mov
sti
das
sbb
ss
test
lret
in
mov
add
inc
mov
mov
sti
xor
cmp
xchg
mov
je
iret
leave
in
lds
push
xor
sbb
scas
pop
dec
sbb
cmp
cmp
xchg
dec
shrb
mov
xorb
sbb
hlt
xchg
mov
cmp
xchg
std
dec
xor
cmc
add
aaa
daa
pop
jmp
je
push
int3
or
cmp
loop
scas
xchg
mov
icebp
out
scas
pop
imul
idivl
xor
sti
cmp
sub
mov
and
lea
fildl
pop
and
push
js
mov
fidivrs
xchg
iret
jl
pop
insl
popa
outsb
inc
dec
push
movsb
dec
push
jnp
in
jecxz
xor
sbb
in
sarb
add
nop
push
jl
lcall
dec
sub
pop
and
pop
loopne
pop
daa
mov
xor
inc
mov
add
add
rep
sub
jp
dec
int3
adc
jg
test
cmpsl
scas
xchg
push
and
pop
mov
mov
lds
imul
mov
add
orl
mov
inc
in
cmc
fisttpl
dec
stos
sub
xor
sub
sub
lahf
or
daa
cmp
push
fs
ret
xor
inc
sbb
flds
mov
mov
xor
aam
xor
sub
rcll
inc
sarb
sub
cmp
fs
push
out
sbb
int
fbld
xchg
bound
pop
mov
movl
testb
popa
js
inc
nop
cmpsb
or
in
cs
mov
xor
stc
xorb
movsb
and
xor
mov
add
mov
push
lea
inc
xchg
lcall
cmp
pop
lret
test
mov
dec
jno
lret
xchg
cmp
loope
adc
sub
dec
cmp
xchg
call
movsb
adc
adc
insl
and
jb
adc
cli
mov
mov
jg
mov
fidivs
mov
int
lea
fucomp
push
scas
into
dec
sub
stc
ret
outsb
sbb
lahf
xor
pop
roll
push
std
jno
ret
add
ror
icebp
iret
mov
xor
mov
sbb
icebp
in
movsl
push
ficoml
xor
mov
ljmp
shl
dec
pusha
aam
aas
mov
pop
dec
popf
mov
xor
out
fisttpll
mov
pusha
loope
jmp
fucomip
mov
sub
or
sbb
mov
and
dec
mov
scas
jno
cmp
or
jb
addr16
mov
hlt
sub
data16
in
loop
xchg
mov
das
incb
jo
jl
shll
cltd
dec
call
mov
inc
cltd
jne
and
xchg
inc
in
pusha
into
adc
mov
mov
mov
mov
adc
push
ret
leave
fldenv
add
xchg
out
cmpsb
popa
mov
nop
cli
hlt
inc
mov
xchg
jmp
mov
shll
negl
inc
mov
xchg
ret
mov
xor
movsl
inc
fwait
xorl
movsl
mov
lods
mov
pop
in
lods
aam
les
sub
pop
movsb
mov
xor
sbb
mov
jne
out
iret
push
aaa
pop
xor
push
pop
movntps
cs
fdivs
in
cmpsb
mov
std
divb
mov
xchg
fcoms
bound
shrl
sti
out
pop
clc
ja
leave
pusha
lods
mov
push
xor
aas
adc
mov
sub
dec
js
push
fdivp
lea
sub
imul
adc
pop
jno
ds
pop
and
inc
ja
jle
or
dec
and
mov
daa
dec
es
jbe
popf
nop
dec
cmp
andb
mov
mov
dec
or
mov
add
push
test
push
sub
push
mov
orb
dec
arpl
xor
loope
bound
push
xchg
pop
sub
push
gs
mov
lock
movsl
in
mov
and
pop
addr16
push
sub
cmc
filds
sbb
push
sub
negb
aas
or
cmc
jnp
das
xchg
orl
and
call
in
andb
in
andl
addr16
jno
dec
inc
cltd
ficompl
test
mov
inc
sbb
mov
mov
imul
rcrb
int
sbb
adc
imul
jbe
stos
sbb
and
gs
pushw
loop
sahf
ja
jmp
aas
add
pop
mov
xor
mov
mov
add
push
fwait
add
subps
mov
pop
jns
push
sti
xchg
sub
xchg
jnp
inc
popa
pop
decl
mov
dec
icebp
cli
into
pop
int
sahf
mov
mov
inc
iret
int
xchg
jmp
adc
adc
add
inc
dec
jmp
push
dec
in
inc
test
out
aas
aas
push
jmp
scas
add
xchg
ss
stos
sbb
vhsubps
adc
bnd
inc
repz
mov
fwait
inc
cmp
push
testb
ds
jge
xchg
stc
fnstenv
push
inc
imul
rclb
pop
sbb
std
xor
add
or
xor
pop
insl
aaa
or
arpl
int3
mov
addb
jno
sub
xor
sub
push
jle
xor
and
outsl
cld
jno
scas
nop
cmpsb
lea
aad
in
insl
aas
inc
pop
dec
out
iret
int
dec
xchg
jecxz
test
imul
repz
outsb
sbb
cmp
into
jg
sub
inc
shlb
jns
rorl
or
sub
jl
mov
adc
fcmovb
sub
ret
lret
lods
int
out
or
dec
jnp
push
or
pop
push
cmpsl
inc
dec
orl
adc
aam
jl
push
insl
pop
xchg
cs
mov
mov
pushf
insb
or
lret
adc
ss
cmp
sbb
adc
mov
in
sbb
adc
lcall
cli
jb
test
bound
sahf
inc
imul
pop
adc
lock
jbe
sbb
and
mov
dec
mov
jb
ss
dec
mov
sti
or
dec
push
add
data16
clc
pusha
shr
push
test
sub
sbb
pop
and
sub
inc
mov
adcb
inc
popf
pusha
xchg
idivl
adc
pop
cmp
stc
and
stc
leave
andl
in
jg
jno
dec
pop
mov
jmp
fsubrp
mov
cli
sub
repz
cmp
popa
fdivrs
mov
push
data16
fbstp
adcl
xor
xchg
cltd
fs
cmp
into
mov
out
int
and
or
lcall
sbb
push
mov
mov
rclb
sbb
sbb
mov
fisubs
fucomip
mov
push
xchg
sahf
ret
sub
popa
mov
xor
pop
mov
xchg
and
mov
enter
clc
es
flds
test
in
pop
and
and
daa
insb
cmp
xchg
xchg
xor
mov
scas
ficompl
mov
cmpsl
imulb
leave
popa
mov
movsb
ljmp
push
mov
insb
and
jecxz
in
inc
je
sub
xchg
mov
ret
stos
fs
jmp
ljmp
xor
mov
xchg
cmpsb
push
dec
das
out
cmpl
in
jo
sarl
rcrb
repnz
push
int
mov
xor
add
push
fcoms
ja
ret
xchg
mov
ja
push
or
daa
xchg
std
push
jp
pop
ret
pop
jecxz
test
int3
push
sbb
sub
pop
sarb
cltd
dec
ljmp
arpl
orb
xchg
xchg
and
xor
pop
mov
sub
out
jecxz
test
lret
std
push
add
out
xchg
inc
mov
shrl
xor
fildll
inc
filds
jmp
loope,pt
lock
shll
mov
bound
lcall
push
scas
jmp
push
cltd
cmp
cmp
cltd
loope
sarl
lds
cmpsl
ja
push
std
jl
mov
insb
pop
lret
and
loope
out
xchg
mov
cltd
in
push
add
add
fildll
xchg
jno
mov
fstps
or
or
lds
popa
cli
out
sub
sarl
add
sahf
and
ljmp
jg
cld
lock
pop
sub
enter
mov
sbb
pop
mov
mov
mov
aad
push
and
das
sub
out
shr
jno
sar
out
push
ljmp
lret
stos
mov
jmp
pushf
mov
jns
mov
adc
movsb
and
dec
js
push
xchg
lods
pop
add
inc
mov
xchg
outsl
fldl
in
mov
bound
arpl
jle
stos
test
movsl
cmc
shlb
es
xchg
dec
and
push
add
cmp
sahf
pop
repnz
aam
mull
jo
xor
jmp
mov
or
sub
push
xchg
xor
rolb
in
mov
cltd
adc
imul
and
and
mov
sub
sub
popa
loope
push
jmp
lods
push
and
push
insb
xchg
dec
movsb
mull
loope
int3
push
mov
fildll
fwait
sub
cltd
int3
sbb
add
and
loop
in
call
sar
das
push
fsts
and
push
add
ret
jp
sub
mov
mov
push
fisubrl
pop
add
nop
mov
push
dec
add
lods
pusha
decl
push
rolb
out
xchg
push
cmpb
cltd
pop
subl
int
add
inc
mov
push
or
mov
clc
sbb
js
mov
inc
rclb
jg
sbb
rcrb
xchg
push
test
push
mov
fstpl
jle
xor
push
or
xchg
sbb
mov
icebp
sti
sti
adc
push
and
popa
insl
inc
dec
dec
ljmp
push
dec
lret
test
pop
clc
ffree
scas
mov
dec
pop
mov
add
cmc
adc
rcrl
mov
je
adc
mov
pop
or
pop
xor
and
xchg
jae
mov
dec
xlat
shlb
jne
sub
cmp
out
push
cmp
fsubs
pushf
out
mov
or
pop
add
loope
pop
jmp
insl
imul
dec
adc
or
sysenter
sbb
jns
inc
dec
mov
sub
movsb
adc
loope
and
cltd
dec
repnz
shrl
sbb
lcall
mov
mov
dec
dec
jp
mov
mov
sbb
dec
rorb
pop
inc
loopne
cmc
int
ret
push
gs
mov
into
add
sbb
cmpl
ja
je
sbb
shlb
pop
int3
mov
lret
jecxz
mov
mov
sbb
jae
mov
outsl
loop
cld
cmp
jl
or
out
inc
nop
mov
repz
dec
cmp
lret
scas
daa
push
in
shr
mov
xchg
loop
push
jl
xchg
imulb
dec
sub
mov
ss
sbbb
cmc
push
das
repz
mov
sar
aaa
cmp
cmpl
ret
push
pop
nop
sbb
in
das
arpl
or
insb
ljmp
mov
in
lcall
lret
push
test
sbb
inc
xor
dec
movsl
adc
mov
fnstsw
stos
cltd
imul
mov
arpl
sbb
sub
jmp
adc
and
pop
mov
jecxz
ja
xrelease
fsts
add
adc
sub
ror
addr16
inc
xchg
roll
in
hlt
cmp
loop
in
lods
xorb
push
test
mov
cmpsl
cmp
mov
test
scas
or
pushf
subb
mov
lods
mov
add
enter
ret
arpl
loope
dec
jmp
push
ret
dec
hlt
cli
loop
jge
int
sbb
testl
dec
dec
push
lea
in
ret
lock
fdivl
in
ficoml
aas
pop
sti
jno
mov
push
ds
lods
cmpsb
and
xchg
and
push
addl
out
adc
xchg
mov
movsl
aad
test
lods
fs
mov
outsb
mov
lods
add
dec
jo
mov
int
shrd
test
imul
ja
jbe
cmpsl
mov
xor
movsl
mov
mov
or
and
jnp
push
xchg
test
outsl
inc
mov
insb
jbe
dec
jp
jnp
cwtl
ss
test
aas
push
xor
ret
outsb
in
loope
orb
lock
std
enter
lcall
std
daa
cltd
test
cmp
mov
add
das
or
adc
mov
mov
cmp
das
sti
pop
sub
pop
stos
lock
imul
leave
mov
ret
sahf
int
xlat
lret
arpl
add
icebp
cmpsb
sahf
subl
fcmovb
mov
adc
jg
mov
xor
xchg
and
push
push
fsts
cmpsl
jo
mov
push
jge
ret
gs
cmp
cmp
dec
dec
push
out
jnp
mov
jb
pop
mov
pop
pushl
adc
imul
inc
addr16
sub
and
les
or
movsl
sbb
test
push
or
loopne
fisubrs
loopne
cltd
inc
fnstcw
aad
cmc
xchg
pop
push
cmp
sbb
stos
jecxz
cmp
dec
lret
sbb
cmp
sub
mov
hlt
inc
fidivrs
inc
push
popl
loop
and
sbb
mov
mov
and
push
cmpl
xchg
add
inc
add
pusha
add
and
pop
dec
mov
daa
rorl
jmp
addr16
sbb
xchg
in
xchg
repnz
and
add
mov
bound
mov
mov
ret
stos
gs
cmc
in
mov
lds
mov
dec
shrl
add
mov
imul
ljmp
jno
clc
and
push
mov
cltd
fs
mov
jecxz
adcl
pusha
sub
push
cmpsl
sbb
lock
test
pusha
jno
sub
fimull
cltd
or
data16
movsb
idiv
push
jl
mov
lock
xchg
cmp
sbb
adc
popa
dec
add
or
pop
cmp
fwait
jno
icebp
adc
and
inc
xchg
fcoml
dec
xor
movsb
xchg
mov
lods
mov
outsb
jne
fwait
add
mov
inc
adc
xchg
mov
mov
insl
js
push
data16
jo
mov
mov
pop
pop
outsl
dec
rcll
jo
sub
jge
or
and
data16
jge
addr16
sbb
fisubrl
out
call
in
movsl
into
mov
sbb
xchg
cmp
xchg
aam
ret
xlat
sbb
pop
xlat
bswap
popf
mov
pop
dec
add
lock
sub
xor
or
pushf
mov
aam
sub
dec
jg
mov
sbb
into
imul
jp
sub
or
xchg
mov
mov
fldenv
cmp
hlt
outsl
add
xor
adc
popf
faddl
gs
sub
mov
inc
std
push
push
pop
mov
add
shll
stos
lret
adc
cltd
dec
jns
sbb
mov
ret
bound
andl
shlb
cmp
push
stos
jmp
dec
popf
and
push
subb
test
sub
adc
sub
dec
lret
dec
imul
pop
dec
inc
mov
jl
fidivrl
shlb
int3
mov
rcrb
mov
test
mov
xlat
adc
out
pop
pop
in
fisttpll
in
bound
leave
xchg
lea
bound
fisubs
add
stc
sub
lds
xchg
arpl
ja
es
cmp
cmp
ret
popa
mov
push
je
xor
xor
in
jp
cmp
lock
ds
in
ret
push
jl
pop
pop
call
dec
sahf
aad
into
adc
xor
je
rcrb
cmc
fwait
jmp
jl
cltd
in
mov
int
ficoms
sbbb
aam
and
lret
daa
push
js
adc
pop
es
cld
data16
movsb
nop
push
or
ja
jge
fimull
test
les
pop
xor
fdiv
xchg
mov
orl
push
stos
cmp
cmc
pop
ret
ficoms
insb
xchg
dec
lret
movsl
ficoms
xor
xchg
push
cltd
cltd
add
push
loope
arpl
cmp
mov
hlt
dec
pop
push
mov
jns
mov
arpl
pop
out
cmc
or
adc
jmp
push
mov
imul
xlat
inc
lea
scas
xlat
dec
test
into
xor
adc
push
les
mov
xor
jno
int
pop
push
fbstp
cmc
mov
mov
push
mov
cmp
int
and
xchg
adc
inc
push
adc
xchg
out
fcomps
mov
test
stos
add
jo
inc
fstpt
and
das
adc
push
fwait
aas
addr16
in
es
lds
aad
in
clc
out
mov
cmp
sbb
orb
jo
sub
xchg
ljmp
mov
jne
adc
cmc
lds
xor
xchg
insb
lret
mov
lcall
fisubs
adc
nop
loopne
and
xor
mov
lea
push
or
sub
or
test
mov
adc
jecxz
out
push
mov
icebp
je
add
or
inc
addb
push
sbb
add
jp
ret
sbb
xchg
sti
fstl
sti
insb
or
repnz
outsl
or
sub
cltd
pop
push
cwtl
shll
mov
add
imul
jne
cmp
cmp
xchg
sti
xchg
lret
xchg
sbb
scas
mov
xor
cmp
sbb
fisubrs
call
jp
fldcw
mov
push
push
in
sbb
or
iret
fstpt
adc
test
test
aas
and
xchg
or
mov
cwtl
mov
sub
lret
sbbb
push
mov
daa
mov
pop
test
xor
aam
je
hlt
sub
aaa
add
and
out
mov
xor
shlb
mov
dec
xchg
xorl
mov
mov
sub
inc
mov
jns
ja
jnp
js
cmpsl
xchg
data16
test
mov
data16
sub
adc
movsl
les
push
or
add
dec
push
mov
adcl
jnp
xchg
outsl
gs
inc
mov
into
lahf
mov
xor
bound
test
outsb
ss
out
nop
lea
shlb
in
mov
cs
mov
mov
or
lods
adc
ret
add
inc
rolb
icebp
sbb
mov
pop
push
inc
pop
sub
pop
test
aam
out
lret
fisubrl
outsb
jne
in
cltd
rcrl
in
popf
pushf
mov
or
test
test
mov
mov
in
sub
insb
push
jno
cmp
xor
mov
mov
add
dec
fsubrl
out
xadd
mov
out
or
filds
cmc
mov
imul
mov
jae
out
je
jno
ljmp
ret
lock
leave
aaa
push
and
test
xorb
cmpl
mov
pushf
or
or
xor
jbe
xor
lods
mov
mov
arpl
cmp
pop
mov
shll
mov
adc
and
inc
push
testb
icebp
pop
mov
ljmp
and
popa
popa
data16
lcall
jae
mov
cmp
xchg
mov
jae
insb
loope
xchg
push
mov
adc
sbb
test
ret
outsb
sbb
cmp
xchg
popa
xchg
xchg
xor
jmp
pushf
jne
out
add
xchg
ljmp
and
mov
push
fistpll
pop
jno
jl
sbb
jnp
rcrl
aaa
sbb
mov
xor
jne
or
stc
jnp
fidivl
test
ret
mov
xchg
cmpsb
call
sahf
jle
test
lds
pop
mov
xchg
push
imul
bound
xorb
cmp
sbb
ret
jecxz
pop
adc
pushf
mov
mov
aaa
mov
and
aam
and
subb
or
sbb
out
inc
sub
inc
aas
push
cmpsl
cmp
inc
movsb
lret
mov
sbb
xor
imul
and
mov
mov
inc
popa
push
lods
repnz
or
sub
or
inc
lret
out
out
insb
xchg
push
stos
test
ds
adc
jle
fnstcw
sbb
outsl
inc
and
xorb
movsl
cmp
imul
or
sbb
stos
cmp
jp
stos
push
xor
ds
addb
mov
xchg
cmp
scas
in
adc
negb
inc
lods
or
int3
cmpsl
insl
fs
pop
adc
and
xor
lret
jae
inc
movb
mov
and
push
or
and
mov
or
add
popl
lea
inc
frstor
movsb
mov
sub
movsl
ja
push
std
jp
jno
ret
jns
mov
mov
ret
xchg
and
xor
fsubl
das
or
mov
mov
push
xchg
mov
dec
inc
in
adc
fsubrs
pop
sbb
pop
in
jb
dec
adc
push
in
enter
lods
jno
sbb
pop
leave
push
ljmp
mov
rcrl
gs
movsb
jns
sahf
mov
jmp
in
or
inc
lds
ret
mov
mov
mov
xchg
popa
dec
mov
push
jge
or
add
xlat
push
or
in
scas
ja
lods
rorl
jp
out
inc
sbb
out
xchg
mov
sub
stos
push
fsubp
jns
dec
push
push
adc
pusha
mov
shlb
es
cmp
pop
and
sbb
shrl
rorl
jo
call
sub
adc
hlt
hlt
push
lret
aad
xor
iret
mov
mov
push
pushf
int3
bound
loopne
adc
jae
or
sbb
push
inc
loop
jg
sub
fstpl
xor
jo
insl
scas
jmp
inc
cltd
and
mov
les
lds
ss
mov
or
sbb
loope
mov
xchg
sbb
cmp
pop
or
insl
imul
cmpsl
fimull
cltd
stc
fidivrs
add
jg
sbbl
dec
leave
subb
in
out
jle
in
cmp
cltd
pop
cmp
repnz
jge
cli
test
and
cmp
clc
cld
inc
not
push
test
lret
enter
lods
cwtl
repnz
pop
push
and
movsb
cmp
testb
mov
gs
nop
cmp
push
pop
push
cmp
or
out
rorl
js
dec
enter
out
and
ret
cmpsb
sbb
mov
hlt
pop
jl
or
dec
dec
js
or
lahf
push
pop
rolb
mov
sub
fcoms
and
xchg
lret
adcb
or
mov
xorb
dec
sbb
rorl
xor
outsl
pusha
repnz
xchg
sub
mov
enter
lock
sub
pop
imul
push
addl
jno
pop
and
js
jo
sbb
in
pop
out
or
adcb
inc
imul
pop
xchg
in
int3
test
aam
movsl
cmpsb
sub
lret
and
jge
fcmovne
in
popa
xchg
cmp
cltd
popl
or
mov
cmc
sub
test
lret
mov
test
xor
pop
add
push
push
cli
loopne
jg
lods
jle
jne
jbe
fwait
mov
xor
or
pop
mov
jg
push
popf
xchg
or
cmc
cmc
mov
leave
cmp
test
cltd
cmp
lods
aam
in
mov
inc
adc
repnz
mov
jb
cmpb
dec
mov
sbb
xor
dec
pop
lcall
data16
jl
movsl
pop
aam
mov
mov
pop
mov
sub
popf
add
cld
test
xor
mov
mov
int3
push
mov
jbe
outsl
sub
fistps
inc
mov
rcl
enter
adc
test
es
rcll
cli
imul
pop
xor
testl
cmc
mov
mov
out
pop
leave
dec
mov
push
pop
or
add
test
sub
fdivrs
pusha
loopne
or
insl
cltd
stc
or
fs
roll
mov
ret
push
cli
lahf
ds
and
ja
mov
push
scas
pop
dec
mov
xor
subl
fstp
pop
sub
jae
mov
shll
scas
xchg
clc
cmp
ds
call
pop
es
popa
sub
fs
fwait
pop
call
mov
fcoml
and
sub
jp
pop
xchg
sbb
imulb
clc
mov
jb
push
cmp
dec
xchg
inc
lahf
or
lock
pushl
test
inc
adc
arpl
push
ror
dec
ljmp
rcl
movsb
push
inc
ljmp
jnp
imul
leave
push
add
sbb
les
cmp
movsl
bound
jno
sbb
cwtl
sahf
loope
and
fmuls
and
jns
scas
in
mov
ja
mov
fsubs
cmp
bound
mov
in
imul
jbe
insl
xlat
ja
in
mov
mov
movsb
xchg
lret
ret
dec
int
and
stc
pop
and
and
ret
fnstcw
mov
mov
or
mov
adc
fstpt
inc
lcall
mov
pop
ja
sub
clc
das
mov
jg
mov
sbb
ror
shrl
popa
call
cli
and
sub
mov
loopne
mov
insl
pusha
push
sbb
mov
xchg
xchg
dec
in
cli
rcrl
or
cli
shrb
sub
and
and
es
xchg
dec
inc
or
jb
mov
in
arpl
rcrb
mov
and
shll
mov
loop
orb
and
popa
mov
inc
in
mov
push
out
fwait
inc
mov
pop
sbb
pop
les
aaa
push
mov
mov
lret
jnp
out
jae,pt
push
jl
lret
lcall
inc
out
pop
icebp
jbe
sbb
inc
xor
sub
in
sub
sbb
mov
cmp
stos
jmp
daa
leave
stc
dec
inc
and
out
cmp
push
mov
bound
pop
mov
mov
nop
orb
imul
mov
mov
xchg
jnp
and
jae
cmp
sarl
dec
lods
inc
neg
rcrl
les
incb
mov
push
mov
push
mov
outsb
lret
js
test
pop
adc
in
fs
movsl
mov
in
ret
pushf
sbb
mulb
std
cmpsl
mov
mov
mov
mov
aam
cmc
das
enter
inc
or
pop
fcoms
mov
adc
notb
iret
add
cmp
xor
sub
subl
pop
or
xchg
sbb
loopne
cld
stos
and
cmp
fdivrl
cmp
aaa
jge
jp
fistpl
push
sub
popf
xor
lahf
je
jge
cmp
xchg
inc
xor
sti
test
jns
sbbb
scas
out
rcll
cwtl
mov
jmp
sub
shll
call
xor
shrl
scas
push
sub
xor
mov
jecxz
push
scas
jecxz
dec
shll
loopne
dec
pop
jae
test
mov
adc
mov
in
mov
out
lret
and
push
xchg
pop
dec
repnz
mov
mov
pop
dec
sbb
lahf
adc
cmp
mov
int3
push
stc
rcrl
push
lods
sbb
add
div
aad
jmp
mul
mov
mov
jo
leave
fldl
aam
pop
in
push
cmp
stc
jno
sbb
and
cmp
icebp
fst
shrl
dec
mov
mov
and
cmp
mov
pop
ret
inc
sub
test
and
jg
or
lock
pop
jmp
fwait
push
dec
or
mov
aam
iret
clc
test
push
jns
and
jmp
sub
add
mov
std
jo
pushf
add
mov
int3
leave
das
mov
test
rorl
sub
add
push
mov
dec
adc
xchg
addr16
loop
in
cmp
sbb
or
xchg
scas
imul
adcb
inc
sub
icebp
mov
push
mov
es
int3
and
stc
sub
lahf
mov
and
push
je
mov
sbb
cmpb
lods
decl
xor
sbb
mov
push
lds
inc
movsl
mov
pop
fnsave
inc
push
add
inc
test
mov
mov
xchg
mov
mov
sbb
arpl
in
add
inc
pop
cmpsl
adc
nop
daa
push
sti
mov
idivl
add
repz
xlat
sbb
int3
in
adc
pop
rcl
push
in
cli
rcrl
inc
addr16
fs
push
xchg
pop
and
clc
bound
cmp
and
inc
xchg
mov
sti
fistl
popa
push
adc
inc
loop
mov
mov
push
arpl
xor
sub
mov
fwait
sbb
xor
jnp
ss
pop
push
sub
bound
jle
jg
xlat
mov
cwtl
adc
jb
xchg
add
inc
fnstenv
scas
add
sub
fsubrl
aas
xchg
test
test
test
cmp
xorb
cld
mov
xor
mov
faddl
repnz
jl
cld
out
arpl
in
ja
xor
lods
mov
and
push
int3
test
mov
pushf
outsl
xchg
fiaddl
ds
jnp
jns
std
cmpsl
loop
sbb
jbe
adc
aam
iret
sbb
pop
fcomp
movsl
mov
pop
sub
sub
lods
or
loope
jno
loope
loope
mov
xor
mov
and
xchg
and
inc
jecxz
js
cli
dec
xor
add
fnsave
push
ljmp
push
xor
jne
pop
or
push
mov
dec
mov
mov
mov
add
adc
rol
jnp
shld
pop
cmp
mov
shrb
xchg
xchg
jp
jp
outsl
mov
mov
inc
inc
les
cli
lds
loopne
arpl
mulb
xor
xlat
fsubrs
pop
push
cld
inc
xchg
adc
idivb
pop
add
inc
dec
xorl
mov
push
loope
or
push
adc
adc
jle
jl
mov
call
lahf
and
sub
add
aad
out
cmp
daa
insl
jg
ljmp
lahf
inc
stos
mov
cmp
das
pop
mov
in
iret
push
popa
xchg
mov
dec
xchg
jecxz
shr
dec
aas
out
int
test
scas
sub
jo
xor
ret
push
xlat
adc
pop
pop
clc
mov
ds
pushf
test
fwait
icebp
dec
inc
ja
imul
addr16
xchg
pop
xchg
cmp
cs
mov
jg
movsb
sbb
jle
mov
lahf
mov
sti
pushf
aam
pop
subb
mov
cli
or
enter
subl
mov
shll
test
pop
mov
test
pop
jl
push
pop
dec
inc
fistps
push
imul
dec
mov
jecxz
xchg
addr16
ss
push
xchg
cmp
cmp
stos
mov
fdivr
aad
adc
pop
movsl
xor
and
push
aam
fmuls
and
mov
push
fsubrs
mov
iret
shlb
cmp
icebp
in
fbstp
mov
cmp
jge
sbb
pop
sti
fs
fxch
mov
rcrb
dec
shlb
in
addl
dec
andb
mov
cmp
hlt
frstor
fs
or
fcomp
push
scas
insb
xor
pop
movl
movsb
dec
cmpsw
dec
sub
jbe
test
xchg
push
sahf
call
jb
out
xchg
dec
and
inc
xchg
iret
inc
daa
mov
lds
pop
aad
je
dec
jne
into
dec
push
add
imul
rclb
sub
stos
xor
inc
jle
mov
inc
cmp
xor
pop
rcrl
popf
outsb
or
xor
daa
stos
sub
outsl
mov
fsubl
push
adc
cmp
into
sbb
inc
es
dec
mov
jle
stc
mov
cmp
andb
or
jl
jmp
adc
jns
mov
dec
lret
pop
mul
jle
daa
add
addr16
push
pop
call
int3
xrelease
mov
stc
movsb
sub
sub
mov
ljmp
sbb
dec
ret
nop
fdivrl
ret
in
test
add
pushf
jo
adc
repz
bnd
sbb
jecxz
xchg
jne
xor
test
repz
xor
sub
cmp
dec
mov
repnz
hlt
add
cmp
or
xchg
inc
sub
and
xchg
aam
dec
jecxz
push
push
sbb
aaa
mov
and
push
sub
add
push
les
js
scas
push
jmp
icebp
adc
lcall
inc
mov
fsubrs
add
inc
jb
adcb
loope
dec
call
lods
pop
shr
pop
dec
mov
popf
mov
popa
xchg
loope
mov
or
enter
adc
dec
jmp
push
jo
ficoml
xor
scas
xchg
into
lcall
outsl
jecxz
mov
icebp
cmc
push
and
pop
ljmp
push
and
shll
push
stc
pop
pop
jno
mov
test
jle
cmp
fwait
lcall
scas
cs
inc
jg
mov
aaa
mov
mov
fsubs
icebp
popl
stos
mov
vmload
aad
push
mov
out
xor
sub
lods
mov
and
push
loope
push
xchg
push
pushf
shlb
ret
sbb
add
mov
fimuls
jg
cmp
out
ret
imul
data16
clc
ret
xor
nop
or
js
mov
fsubl
dec
or
inc
xchg
stos
jmp
rcrl
and
movsb
scas
sub
dec
loopne
adc
adc
mov
bound
mov
movsl
ja
ds
inc
repnz
in
pushf
scas
bound
mov
inc
mov
nop
mov
and
icebp
stc
sub
addb
int
es
popa
cmp
xchg
push
sbb
out
inc
and
jns
and
xchg
outsl
adc
xor
add
mov
mov
sbb
leave
js
sbb
adc
cld
jb
mov
mov
ret
lret
or
xchg
xor
push
mov
pop
pop
aam
fdivl
jmp
and
pop
mov
cs
dec
add
stc
dec
sub
inc
insb
mov
arpl
ja
stos
les
pop
push
xchg
fwait
and
insb
adc
aam
xchg
mov
sub
scas
xor
push
mov
jmp
nop
mov
jmp
test
jecxz
add
or
mov
jg
mov
xchg
daa
cli
sbb
add
sbb
imul
adc
inc
ja,pn
push
test
mov
loopne
lahf
es
arpl
sub
xor
pop
add
push
shrl
push
add
jg
popf
iret
hlt
inc
or
inc
out
sbbl
jg
lds
push
jmp
adc
dec
push
or
fwait
sbb
mov
repnz
lea
sub
jmp
or
in
mov
stos
int3
in
or
cmp
test
mov
es
adc
stc
adc
dec
xor
sbb
dec
aam
fst
xchg
ret
pop
mov
in
ret
xchg
xlat
mov
adcl
sub
push
inc
lods
cld
push
dec
xor
or
xorl
push
outsb
jae
lock
jae
add
clc
xchg
cltd
sub
in
into
sub
sarb
icebp
pop
lods
repnz
scas
cmpsb
sbb
ja
xchg
cmp
outsl
repz
sbb
mov
adc
lcall
lods
add
lcall
or
popa
int
sub
adc
adcb
cmp
pop
adc
jecxz
outsb
mov
stc
imul
lcall
shll
call
cs
xchg
push
sub
sub
ss
sti
xor
mov
mov
in
dec
popa
or
icebp
divl
adc
sub
add
stos
jmp
shlb
adc
jmp
lods
outsl
inc
in
sub
ds
mov
mov
stc
daa
fstl
orb
xorb
pop
sbb
movsb
push
mov
outsb
fidivrl
repz
add
in
into
and
pop
mov
push
adc
mov
stos
popa
push
jo
je
add
push
mov
mov
push
stos
add
cmpsl
into
xchg
cmp
pop
xchg
enter
shll
test
sub
xchg
xchg
mov
adc
cmpsb
xchg
in
aad
sub
test
dec
lods
jmp
push
in
push
out
xchg
sub
data16
scas
fs
mov
lcall
aaa
arpl
mov
nop
cmpsb
xor
lock
sub
push
mov
add
idivl
xchg
addb
nop
fcomps
cwtl
sarl
mov
outsb
mov
sbb
dec
mov
jo
fsubrl
iret
xchg
ljmp
aaa
push
lret
dec
mov
in
adc
jne
out
in
lea
and
out
enter
ds
int
push
jno
sub
lea
xor
inc
loope
js
rorb
insl
xchg
aas
or
mov
pushl
lods
inc
xchg
adc
fs
pop
and
mov
add
std
lea
imul
push
pop
mov
mov
or
mov
sbb
inc
popa
and
jb
aaa
adc
xor
pop
pop
testl
mov
push
fs
push
mov
jo
mov
ds
or
lock
gs
outsb
std
imul
mov
push
ret
js
clc
add
cs
adc
fldl
jbe
in
jge
sti
shrl
rcr
das
adc
add
fs
sbb
cs
ja
shll
neg
nop
ret
out
loop
xchg
pop
xchg
orl
dec
inc
out
orb
mov
push
lea
xorb
pusha
cli
sarb
xchg
hlt
loope
xchg
cmp
or
lret
lods
scas
add
inc
shrb
cmp
mov
lds
stos
sbb
and
sahf
lret
shr
mov
and
adc
xchg
ret
xor
cmc
dec
add
daa
pop
push
ret
sub
mov
add
lret
in
lock
movsl
pop
adc
ret
mov
xor
mov
popf
int
sub
xchg
sbb
cltd
icebp
fadd
gs
jnp
xchg
pop
fsubrs
and
jl
add
shl
cwtl
jmp
ja
cmc
int3
fisubrl
sbb
notl
inc
fildl
xchg
xorb
xor
inc
mov
fidivl
or
aas
lea
ljmp
or
sbb
mov
inc
mov
pop
ja
rcrb
aas
mov
lahf
xchg
pop
es
xchg
or
jmp
or
jb
mov
fiaddl
pop
ret
push
adc
inc
fisubl
lods
xchg
test
mov
int3
je
lock
outsl
mov
icebp
push
shlb
mov
lods
and
ret
xchg
or
or
in
stos
leave
insl
pop
fisubl
and
cmpl
xchg
pop
loopne
or
mov
in
mov
sbb
xchg
std
test
dec
insb
xchg
adc
mov
cltd
push
sti
sbb
push
jnp
fcomp
loopne
mov
inc
pop
test
adc
leave
xlat
mov
sbb
add
sub
nop
imul
out
sbb
pusha
mov
fsub
mov
push
adc
icebp
stc
jmp
xchg
ja
jg
inc
adc
shrb
es
out
mov
push
inc
jge
dec
fs
or
iret
test
test
mov
sbb
fldt
popf
mov
xchg
xchg
in
out
cvttps2pi
test
inc
sub
cmc
jbe
xchg
xor
fidivl
mov
jne
dec
shl
inc
dec
add
mov
imul
shrl
pop
jns
fcoms
je
mov
mov
cmp
roll
inc
push
int3
sub
es
sbb
out
rolb
pushf
xor
in
sbb
cmp
mov
ss
aas
mov
sub
test
dec
int
mov
and
mov
jmp
adc
iret
imul
sbbb
xlat
mov
sub
jnp
add
cmpl
sahf
popa
xchg
popa
mov
cmp
repnz
add
loop
into
in
mov
pop
lods
jmp
shrl
push
insl
stos
push
fcmovnu
js
sub
scas
cmpsl
inc
pop
mov
xor
or
pushf
push
jae
pop
jle
lods
cmp
js
cmp
cwtl
mov
mov
pushfw
xchg
dec
lods
insb
jns
mov
mov
lret
imulb
mov
imul
aaa
jecxz
inc
lea
pop
mov
push
dec
lahf
or
push
push
sbb
adc
popf
mov
int
iret
stc
mov
scas
sub
mov
insb
scas
lahf
loopne
rorb
cltd
aas
lods
xor
dec
loop
xchg
ljmp
mov
add
mov
jo
or
pop
test
jecxz
outsl
vmovsd
adc
inc
call
loopne
inc
xchg
cmp
lds
sarl
add
iret
xchg
aad
jp
mov
fisubs
mov
mov
pop
mov
pusha
popa
imul
mov
mov
pop
sbb
dec
sbb
leave
dec
mov
inc
dec
int3
inc
jne
pop
cli
jb
insb
int3
push
cmp
jo
insb
cmp
jecxz
outsl
add
in
sbb
cltd
and
mov
loope
out
adc
jnp
lock
mov
mov
mov
dec
sti
mov
adc
add
pop
dec
fstps
rcr
sbb
daa
cmp
into
or
sub
aas
add
inc
pop
sub
rcl
mov
mul
repnz
mov
xchg
mov
insl
xor
xchg
mov
sahf
daa
in
les
lret
mov
lcall
xlat
mov
and
add
xor
mov
jp
push
out
push
sub
out
inc
mov
in
in
push
cld
orb
pop
sub
mov
push
sbb
sbb
push
and
nop
add
xchg
aam
ds
rcr
movsb
pusha
lds
in
and
xor
insb
cmp
push
mov
movsl
fs
sub
xor
jb
push
lret
xlat
ss
incl
cmp
sub
cmp
ret
es
or
lods
dec
mov
mov
int3
add
sub
jno
push
aas
pop
push
lods
into
repz
fisttps
xor
in
aad
int3
dec
test
iret
leave
pop
or
mov
add
fsubrl
testl
mov
fistps
cli
test
leave
sarl
in
fidivrs
and
mov
cmp
mov
pop
xor
pop
adc
test
lret
shl
dec
jb
xchg
xor
xchg
movsb
pop
pop
sahf
ficoms
movsl
shll
mov
pop
pop
lcall
inc
subb
inc
push
mov
push
aaa
and
adc
pop
fs
lret
push
mov
or
out
xchg
sub
out
ret
aas
xor
cmp
or
push
mov
mov
scas
popf
pop
js
inc
jae
xchg
daa
das
inc
in
je
xlat
mov
in
out
xchg
xor
xor
push
cmpsl
and
sub
xchg
mov
mov
leave
fdivr
adc
jo
dec
ja
je
mov
mov
and
xor
mov
in
imul
or
int
mov
xor
pop
dec
jb
lret
jae
mov
ja
inc
test
sbb
mov
shlb
mov
jno
addr16
sbb
pop
test
and
push
ds
jo
rorl
out
cmp
loope
aad
mov
lods
int3
jns
add
mov
nop
icebp
dec
aaa
pop
ss
clc
inc
movsb
mov
sbb
cmpb
cwtl
lods
and
xchg
lds
insl
or
cmp
mov
inc
icebp
mulb
rorl
or
cmc
xchg
xchg
xlat
les
and
mov
subl
sub
pop
jecxz
or
scas
adc
out
pop
bound
jecxz
lock
add
data16
in
or
in
lds
lods
cltd
mov
mov
jmp
xor
bound
lods
daa
mov
psubw
mov
movsb
dec
mov
sahf
inc
out
sbb
stc
xor
js
jno
xor
mov
dec
fs
mov
mov
or
popf
insb
mov
in
or
fwait
out
les
jp
pop
adcb
dec
rolb
std
movsl
xor
lods
dec
loopne
xor
pop
fchs
or
add
leave
loopne
jne
inc
jae
imul
mov
sbb
push
mov
cmp
jecxz
inc
bound
daa
sar
lods
loope
sub
dec
rorb
mov
mov
xlat
sub
das
push
lcall
shll
cmp
sti
mov
jno
pushf
add
enter
cmpsb
mov
mov
adcl
adc
ficompl
or
sub
or
je
sbb
mov
out
fcomp
cmc
add
outsb
int3
push
mov
rcll
fistl
loop
xchg
sti
jecxz
js
add
sahf
mov
fs
dec
add
xchg
jmp
mov
pop
mov
xor
adc
fmuls
sub
mov
add
xorl
push
jae,pt
cli
jb
in
jnp
adc
adc
flds
movb
outsb
add
addb
pop
or
neg
in
cmp
sub
cld
add
fsubs
sub
mov
push
cmpsl
xchg
pushf
or
pop
and
loop
test
cmpsl
arpl
loopne
inc
and
jp
cmc
out
fsubl
shl
jle
rorb
mov
loop
pop
aaa
repz
dec
add
out
dec
mov
repnz
out
sti
jns
insb
fwait
adc
dec
add
ja
ror
mov
loop
sub
cmpsl
out
rclb
push
pop
outsl
jb
push
out
cmp
int3
jbe
mov
jo
mov
mov
cmp
bound
mov
cwtl
cmp
rcrl
jb
jge
sbb
mov
adc
mov
rolb
adc
xchg
push
jmp
icebp
fldcw
stos
pop
sbb
dec
jmp
adc
dec
fcmovu
or
nop
add
icebp
fmuls
push
sbb
es
cmpsl
xchg
loopne
add
cmc
lret
adc
pop
stc
mov
in
andl
lds
stos
cmp
push
cmp
xor
mov
fs
and
adc
mov
pusha
and
mov
jecxz
cli
clc
cmp
pop
loop
jg
loopne
sub
mov
dec
push
test
inc
test
sbb
lahf
and
add
std
and
xchg
fs
icebp
test
pop
out
pusha
lds
ljmp
mov
stc
adc
jle
xchg
xchg
dec
jns
jl
xchg
sbbl
roll
add
mov
pop
mov
pusha
repnz
rcrb
das
inc
lods
sub
out
mov
pop
lret
fildl
adc
push
out
int
xor
dec
pusha
push
dec
pop
cmp
test
jae
sahf
sahf
pop
jne
std
popa
scas
fisubs
fcoml
or
mov
pop
dec
cli
mov
mov
negb
cmp
repz
ret
sbb
jns
xchg
jmp
movsl
stc
adc
push
inc
mov
or
je
and
jecxz
fisubrl
cwtl
cmp
sarb
sar
inc
jl
cmc
scas
mov
jb
imul
notb
inc
lcall
insb
mov
xchg
adc
imul
mov
sbb
orl
xlat
mov
insb
repz
imul
inc
into
arpl
sub
cs
cwtl
cmp
jl
jae
xchg
gs
jmp
xchg
add
sub
dec
xchg
adc
jns
xor
or
adc
dec
adc
pop
mov
movsl
inc
xchg
mov
fs
pop
push
jp
out
push
sbb
fwait
lret
in
jbe
mov
mov
shlb
cmpsb
dec
and
ds
lcall
lret
cmp
loope
fwait
lods
xchg
je
jp
lcall
fstl
mov
xchg
out
cmp
pop
add
daa
fisttpll
inc
stc
pop
push
cmp
xor
push
pop
add
jecxz
jmp
ficoml
out
jmp
xor
fs
adc
dec
loopne
and
push
lock
nop
ret
shrl
add
inc
fs
inc
data16
dec
mov
rcrl
add
push
cmpsb
int
cmc
shl
cmp
fisubs
cmp
inc
inc
mov
cmpsb
xchg
push
cmp
sar
mov
push
push
and
fmul
ror
shlb
push
test
cli
mov
xor
push
xchg
cltd
mov
sub
lret
pop
adc
pop
mov
stc
jle
js
sub
xor
test
popf
dec
in
mov
pop
jnp
lret
out
popa
je
stos
jns
mov
and
sbb
clts
push
xchg
dec
xchg
popa
in
add
and
push
xchg
xor
mov
push
shll
xchg
andb
xchg
fiaddl
andb
cmpsb
lock
jno
adc
into
xorb
jae
jns
insl
lock
xchg
hlt
cmp
fs
daa
xchg
scas
shrl
pop
and
fistps
lret
push
bound
inc
subb
push
pop
mov
pop
mov
pop
xchg
sbb
in
daa
sbbb
repz
loope
rcl
mov
hlt
or
pop
xor
cmpb
push
dec
mov
add
or
and
cmp
mov
push
ja
pop
in
sbb
test
add
scas
mov
test
or
cltd
push
lret
fstl
out
lods
push
sub
dec
popf
shlb
inc
mov
fwait
mov
dec
roll
xchg
and
int
inc
testb
test
mov
pop
lahf
call
push
xchg
mov
push
xlat
fst
in
cli
sbb
push
push
add
push
and
ds
mov
js
dec
inc
fiaddl
lds
popl
dec
je
loop
es
sbb
rclb
test
jne
push
inc
and
push
sarl
pop
cmp
cmpsl
pop
mov
repz
shr
out
jns
push
popf
or
xchg
mov
jno
clc
inc
test
les
ret
in
mov
cmc
mov
jmp
sbbl
mov
test
inc
push
out
or
jle
bound
pop
lcall
shlb
icebp
sub
loop
mov
push
es
mov
btc
hlt
or
mov
aad
push
inc
cmpsl
in
sbb
inc
outsb
shrl
gs
fisubrs
xchg
cmpsb
push
in
jle
cs
cld
aad
cmp
sub
inc
jns
jl
push
test
jge
movsb
jle
fsqrt
fwait
add
daa
das
xchg
push
jecxz
pushf
dec
pop
mov
popf
cmp
movsl
sub
pop
loop
xor
cmp
and
fisubrs
notl
gs
push
mov
xchg
push
loope
lahf
into
fs
std
add
xchg
jp
mov
fnstenv
sub
loopne
arpl
sbb
enter
orl
mov
out
dec
pop
mov
shr
test
pop
stos
rcr
cmp
inc
fists
mov
gs
or
add
aas
push
les
xchg
push
pop
adcb
mov
lds
pop
dec
sub
popa
scas
and
push
les
cli
pop
push
adc
sbb
xor
add
out
aas
loope
loope
cmp
call
lcall
fildll
pusha
loope
dec
pop
pop
jecxz
pop
mov
lods
arpl
rcr
cmp
xor
push
or
mov
pop
mov
shll
push
lahf
mov
arpl
clc
movsb
bound
xor
xchg
cmp
je
pop
xchg
pushf
out
add
call
cli
mov
push
fldl
fldenv
aam
dec
push
in
mov
test
add
std
add
testl
jno
mov
sub
xchg
js
mov
mov
loop,pt
mulb
in
lods
jle
xchg
mov
hlt
mov
or
add
testb
push
ret
sbb
popa
rcr
push
and
shll
inc
push
mov
or
add
in
insl
stos
ja
mov
mov
pushl
lret
daa
xor
or
sbb
sbb
cmp
and
pop
hlt
movl
jp
inc
or
or
imul
faddl
mov
dec
in
fpatan
push
lea
std
add
pushf
sub
in
xlat
cmp
roll
pop
cwtl
stos
adc
mov
je
xchg
lods
popf
hlt
jo
pusha
lret
adc
dec
fs
sbbb
cmp
add
inc
je
or
fnstcw
icebp
mov
stc
fs
lret
push
cltd
and
fisubrs
idiv
mov
sub
jl
cmc
in
mov
rclb
lret
xor
sub
or
js
mov
maxps
jge
ja
mov
test
add
push
and
rorb
fisubl
jno
jg
and
and
jg
movsb
test
push
jmp
les
lods
dec
mov
add
add
mov
fimuls
mov
push
cmpsl
add
in
add
aas
test
cmp
mov
mov
adc
dec
and
mov
test
int3
dec
fidivrs
push
mov
lret
in
ficompl
cmp
cld
dec
jns
bt
mov
push
push
divl
xchg
jne
jmp
mov
dec
lds
push
cs
cwtl
fs
aaa
and
ljmp
xchg
mov
sbb
shlb
cmp
mov
lret
add
jnp
mov
adc
sti
mov
lods
adc
test
jmp
sbb
mov
and
sbb
mov
nop
mov
mov
push
mov
xor
pop
inc
aaa
daa
inc
xchg
pop
clc
mov
mov
mov
or
addl
xchg
fsubl
jp
fadds
inc
mov
insl
cwtl
push
out
out
sub
mov
jnp
pop
movsl
add
imul
pop
adc
mov
inc
cs
gs
aad
stos
repnz
pop
jns
int
and
into
push
jg
repz
lds
shll
and
xor
movsl
ret
jge
das
aas
cltd
jg
inc
sahf
pop
inc
mov
pop
loope
push
mov
popa
les
mov
pushl
mov
sbb
cmp
std
sbb
andl
rcl
jae
and
inc
cld
pop
mov
mov
push
fwait
pop
mov
push
dec
add
add
jae
mov
fwait
mov
add
add
push
push
fistpll
imul
lds
rolb
stos
and
pop
rclb
movsb
add
pop
cmp
jle
and
loopne
and
rcrl
in
in
lret
add
mov
adc
std
lcall
repz
loop
mov
cmp
cmc
sbb
inc
popa
and
mov
pop
xlat
out
push
jb
mov
mov
fldcw
lods
scas
push
fucom
clc
divb
imul
je
sbb
pop
daa
shll
xchg
ds
pmulhuw
repz
test
sti
or
jle
jmp
rcr
xchg
pop
popa
add
lret
jmp
mov
and
sbb
testb
notl
cli
push
cli
and
sub
mov
cmp
cmp
imul
out
and
mov
testl
aaa
push
insb
lods
dec
dec
adc
pop
fmull
xlat
fsts
mov
mov
jb
jecxz
popa
mov
jb
mov
les
arpl
inc
add
adc
mov
subl
sti
ficomps
stos
adc
sbb
cli
idiv
daa
in
dec
js
push
lea
mov
bound
sub
outsl
push
rcrb
mov
mov
mov
mov
push
adc
add
push
movsb
ja
mov
sub
adc
jbe
fmulp
adc
pop
mov
stos
rclb
add
dec
sbb
adc
in
ja
mov
sar
sub
divb
fidivl
sbb
mov
add
adc
in
jmp
cs
bound
and
inc
bound
outsb
adc
outsl
cmp
cmp
inc
adc
iret
push
push
mov
cltd
cmp
pop
mov
insb
push
sub
xor
or
inc
cmp
outsl
pop
sub
fstl
add
pop
pop
outsl
mov
jmp
inc
cltd
lea
jle
sub
movsl
into
popf
push
mov
jmp
pop
clc
adc
mov
iret
cmpsl
adc
out
fmul
xor
fwait
shrb
mov
inc
inc
aam
idivl
sahf
fbstp
out
mov
xor
jge
fisttps
or
ror
mov
mov
mov
push
inc
jge
lds
push
adc
pop
xor
imull
ja
push
mov
dec
xchg
pop
pop
ficomps
in
xor
xchg
push
fidivl
sub
pop
cmp
mov
int3
movsb
insb
add
or
into
sub
aaa
jl
dec
ds
mov
dec
std
mov
xchg
sbb
add
xchg
cmp
lret
pop
jl
fisubrs
mov
or
inc
sub
push
lds
inc
std
jg
ja
or
nop
pop
jne
movsb
and
inc
and
das
out
or
sbb
insb
dec
call
out
imul
sub
dec
lret
mov
stos
stc
mov
dec
jne
xchg
mov
pop
aam
imul
aaa
movsl
pop
or
lret
sbb
dec
enter
pop
jbe
stos
mov
xlat
stos
les
icebp
adc
stos
sbb
mov
jmp
iret
cmp
out
clc
push
cmpsb
mov
lods
lahf
popa
adc
lods
push
movsl
xor
adc
push
pop
mov
push
out
push
loope
test
xchg
dec
fisubl
jmp
push
cmp
add
xor
adc
mov
and
push
adc
jnp
jg
ret
push
pop
adc
sub
sbb
jb
push
popa
movsb
xlat
mov
sbb
adc
jae
push
mov
aas
scas
test
mov
cltd
incl
fwait
jecxz
es
jb
aas
push
inc
repz
iret
mov
frstor
stos
dec
mov
adc
xchg
std
dec
jno
pop
loopne
adc
mov
adc
mov
add
mov
and
fdivrl
and
rcr
fs
sub
jecxz
mov
aam
out
xor
jmp
jl
inc
push
rclb
out
loopne
pop
lods
sub
pop
add
fdivl
dec
je
lods
stos
xchg
sub
sahf
sub
testb
iret
sarb
add
imul
sbb
xor
inc
inc
sub
aam
lahf
in
notl
fdiv
jne
push
fcoml
push
sub
xor
add
mov
and
and
dec
sahf
xchg
lret
xlat
pop
lds
les
in
xchg
lret
pusha
lret
pop
cmp
adc
aaa
loopne
and
xchg
rcrl
ljmp
inc
les
aad
je
imul
add
mov
inc
dec
and
push
ss
jno
cmp
fcoms
push
call
xchg
jg
push
and
rorl
add
mov
jle
mov
orb
scas
or
dec
pop
dec
mov
sub
adc
jmp
mov
pop
pop
push
mov
jecxz
dec
push
dec
pop
int
sub
inc
push
and
jns
mov
sbb
xlat
sub
push
daa
dec
sub
fptan
and
cmp
scas
ror
lret
add
addr16
cwtl
lods
test
mov
dec
push
movsl
fnsave
lods
test
sbb
stos
xor
push
and
inc
push
cmpsb
out
xchg
inc
dec
fiadds
dec
rcrb
sbb
cmp
pop
daa
mov
and
int3
or
or
clc
scas
rcrl
lret
aas
daa
add
stos
mov
and
push
and
sub
jmp
cmp
arpl
rorl
movsb
orb
outsb
cld
mov
inc
mov
sub
xchg
jmp
aaa
lock
clc
sub
sysenter
mov
xchg
movsb
andb
repz
cli
jnp
or
fidivs
mov
xlat
outsb
imul
hlt
mov
lahf
leave
jecxz
push
push
jl
enter
inc
aaa
add
out
sbb
push
addr16
in
in
dec
lods
daa
ret
or
inc
sub
int
test
mov
lret
gs
xchg
fdivrp
mov
pop
xor
xchg
sbb
adc
mov
lock
push
imul
das
mov
push
scas
mov
jge
les
sub
ret
ret
mov
out
hlt
movsl
dec
cmp
scas
sti
mov
jle
inc
push
in
jg
imul
xchg
or
movb
and
xor
cld
cmp
and
repnz
push
fcmove
int
popa
sub
and
xchg
les
mov
mov
pop
xchg
sbb
pop
mov
outsb
repz
sahf
sub
arpl
adc
lods
inc
scas
out
pop
lds
push
add
adc
mov
mov
cmp
mov
sbb
int
out
cmp
jns
mov
mov
mov
push
mov
rclb
pop
xchg
stos
cli
adc
xchg
cs
inc
jnp
movsb
or
cmovnp
mov
test
jno
xchg
cmp
sbb
aam
push
dec
sub
leave
xchg
stos
sbb
jns
int
or
pop
mov
add
lock
mov
stos
mov
pop
lea
out
push
sbb
pop
mov
int3
pushf
jnp
push
xchg
sbb
or
mov
shr
or
pop
pop
out
push
out
mov
imul
push
pop
scas
insl
pusha
fs
adc
xor
aad
ret
js
loope
popl
add
pop
pushf
or
adc
or
inc
stc
jno
cmp
add
mov
repz
test
shlb
test
pop
js
push
push
sti
sbb
pusha
push
icebp
int
xor
inc
jb
sub
imul
decb
sub
jle
fnstcw
mov
rcrl
test
cmp
into
xor
stc
ss
xchg
sbb
ss
inc
es
jl
sbb
outsb
icebp
loope
mov
jno
test
mov
mov
cltd
dec
scas
lods
mov
or
jle
push
cmp
mov
leave
cmp
xchg
je
stos
mov
jb
inc
pop
scas
ret
sbb
lcall
mov
xchg
pop
aam
pop
mov
jne
lret
or
push
popa
pop
jno
cmp
adc
or
shrl
dec
scas
push
outsb
mov
xchg
adc
or
into
inc
mov
pushf
iret
cld
imul
and
lds
imull
call
pop
pop
cmova
cmp
dec
mov
mov
sbb
sub
test
adc
fdivl
pop
cmp
into
push
ds
mov
stos
sub
outsl
dec
push
adc
cld
movsl
xchg
adc
test
jl
add
outsb
arpl
sub
movsb
pushf
jns
in
inc
mov
testl
mov
invd
daa
xor
add
adc
ret
cmpsb
or
jg
lret
or
jb
push
xchg
fwait
insb
out
jg
mov
push
stc
test
push
in
scas
push
sahf
inc
outsb
ja
xchg
fsts
or
push
fidivs
aad
lods
xchg
add
fwait
adc
or
mov
adc
add
cmp
add
sbb
inc
xor
cld
push
call
mov
pop
jbe
imul
imul
mov
push
out
or
cmp
xor
lods
mov
inc
dec
inc
or
popf
mov
dec
icebp
add
shrb
adc
inc
cmp
push
sub
jg
movsl
pop
dec
mov
xorb
sub
es
dec
push
mov
jbe
cmp
and
pop
ja
inc
sbb
sub
les
rcll
leave
and
xchg
orl
cwtl
adc
lods
gs
mov
or
and
ds
push
test
mov
pop
sarl
pop
out
frstor
jg
cmp
jns
push
lods
jg
scas
xor
or
sbb
push
aas
aad
pop
inc
ret
aam
sbb
mov
pop
or
pop
arpl
aad
cwtl
and
push
paddsb
enter
pop
fwait
loop
imul
lods
sbb
mov
cs
dec
lcall
push
aad
push
mov
test
push
jge
inc
inc
or
and
xchg
fbld
ljmp
repnz
pop
sub
lea
push
pop
adc
sti
clc
add
ljmp
sbb
mov
xor
lock
cmp
pop
cmp
mov
movsl
mov
jecxz
shrl
imul
sbb
jecxz
and
xlat
mov
mov
mov
je
mov
inc
movsl
and
pop
lcall
pop
sub
inc
pop
fdivrl
mov
or
mov
jne
dec
imul
xor
fs
push
inc
or
imul
fmuls
push
pop
loop
mov
sbb
xchg
fadd
push
dec
mov
dec
xlat
loop
inc
shlb
adc
movsl
aas
add
outsb
movsl
xorl
das
lods
jo
aam
bound
loopne,pt
in
push
cmp
sub
or
lods
ss
mov
sub
cmp
jae
inc
xchg
insl
addb
pop
sub
in
sbb
popa
push
mov
jnp
int3
xchg
je
push
aad
cmpsb
sti
ljmp
push
loope
pop
dec
xchg
movsb
mov
popf
push
mov
add
rorl
scas
adc
imul
rorl
adc
add
mov
cmp
mov
add
rclb
sbb
sub
scas
mov
or
pushf
pop
pop
mulps
leave
mov
fistps
outsb
fldl
les
xchg
arpl
pop
cmp
cltd
fsubr
mov
ja
pop
test
inc
jae
out
xchg
inc
jb
nop
xor
cs
negb
mov
or
out
adc
pop
mul
ljmp
push
add
sbb
cli
and
sti
fldt
dec
adc
or
pusha
jmp
fwait
scas
dec
or
inc
into
decl
ret
scas
push
inc
dec
aad
jnp
dec
sbbl
jb
push
xchg
cmp
xlat
mov
pusha
lahf
mov
or
cmp
sti
out
xchg
pop
in
xor
mov
rcrb
imul
push
jmp
shll
rcr
mov
popa
xchg
add
mov
addb
scas
shlb
hlt
push
add
cltd
adc
push
ret
faddp
or
insl
js
dec
fcomps
push
sub
xor
sub
push
popl
or
out
cltd
inc
sbb
sarb
js
bound
inc
inc
cmc
dec
stos
push
ret
inc
sti
sahf
push
add
packsswb
mov
xor
fldcw
add
call
repz
mov
mov
sub
pop
xor
and
xchg
dec
and
inc
loop
cmp
add
icebp
cmp
fistpll
scas
ljmp
outsl
lods
fdivrl
leave
ds
repz
sbb
cmc
cltd
xlat
add
inc
loope
mov
xchg
in
mov
incl
test
ja
fbld
add
add
cmc
sbb
call
dec
rcrb
rcrl
addr16
ud1
inc
sbb
stos
lods
enter
call
fsin
jo
xchg
std
fmul
push
fidivs
dec
or
dec
inc
jbe
adc
cmc
cmp
jo
pusha
push
mov
push
mov
mov
mov
pop
rol
sbb
stc
lret
push
pop
inc
adc
cmp
mov
test
into
or
dec
xlat
mov
cmp
ss
xchg
xchg
mov
fiaddl
jne
icebp
out
and
sub
xor
add
jns
push
mov
je
push
or
mov
mov
pop
in
mov
das
push
xchg
mov
sbb
cmpsb
aad
shlb
mov
insb
xchg
sub
hlt
iret
mov
inc
add
adc
xchg
out
mov
lret
mov
push
addr16
ror
inc
insb
pop
sub
psubq
loop
lea
xchg
and
sub
and
cli
jecxz
nop
mov
arpl
inc
xlat
popf
aad
insb
cmp
sub
sbb
xchg
mov
cld
fsub
arpl
xlat
fidivl
dec
cmp
push
or
lret
addr16
adc
negl
pop
push
mov
xchg
shrl
xchg
je
iret
inc
inc
dec
std
aad
pop
push
inc
adc
std
arpl
xchg
cld
mov
xorl
leave
sub
shlb
movsb
jo
daa
mov
cs
gs
aam
int3
xor
outsl
dec
stos
je
rolb
ret
loop
rorl
and
jbe
lods
dec
pop
pop
pop
xor
int3
adc
push
stos
inc
popa
sbb
out
enter
jb
imul
lods
fnstsw
sub
sbb
adc
xchg
jmp
cmpl
jle
inc
pusha
mov
jnp
bound
call
dec
adc
cmpsb
and
outsl
cmp
je
mov
hlt
mov
mov
mov
cmp
xchg
cmp
adc
dec
jmp
xchg
jge
xchg
push
ja
xlat
mov
sbb
cmc
pop
ret
xchg
adc
shlb
scas
fwait
jp
aas
mov
adc
xchg
or
jae
or
jnp
sub
fmull
popw
or
jp
push
xorl
mov
lea
mov
cmpsb
fnstcw
insb
xchg
and
pushf
pop
pop
scas
jno
jecxz
rcl
lret
mov
in
arpl
jb
mov
mov
mov
fs
das
and
and
sub
mov
ljmp
outsl
imul
stos
mov
loope
sbb
bnd
jecxz
dec
es
mov
out
pop
shlb
in
cltd
ret
sbb
or
dec
fbld
scas
mov
push
mov
cmpsb
pop
push
arpl
ret
fwait
inc
and
add
xchg
es
aad
pop
dec
inc
sbb
mov
mov
jbe
imul
cmp
notl
insl
mov
inc
mov
loop
divb
loope
push
test
jne
xchg
adc
clc
bnd
or
sbb
push
ret
movsl
cmc
cld
cmp
nop
pop
rcrb
mov
out
ss
leave
dec
dec
addr16
xorl
jl
push
icebp
push
ljmp
shll
in
scas
stos
adc
mov
jmp
xchg
in
jmp
lgs
mov
sahf
out
inc
call
ljmp
sbb
adc
addr16
push
call
push
out
mov
xorl
xchg
xchg
lret
sbb
int3
push
hlt
enter
and
or
rcl
aas
sbb
dec
js
cmpsb
das
lea
or
scas
push
les
pop
dec
xchg
mov
lods
jno
cmp
fdivs
pop
sbb
mov
jg
int
mov
repnz
bound
sahf
mov
or
cmpl
pop
les
lds
test
mov
jae
or
push
fmull
jbe
aaa
repnz
int3
cmc
mov
rorb
data16
nop
icebp
push
or
push
inc
sar
inc
dec
fbld
enter
sti
mov
add
les
das
inc
shlb
dec
push
add
sbbb
gs
jnp
not
jbe
jne
into
xchg
jns
mov
movsl
ret
testb
sti
jno
jp
jmp
push
pop
fldl
mov
pop
cmc
mov
scas
into
cli
xchg
out
int3
xchg
cmp
enter
pop
cmp
es
dec
pop
popa
and
sbb
rcrb
insl
push
mov
mov
in
testl
jge
aad
mov
lea
inc
mov
cs
cltd
inc
fsts
xchg
and
nop
bound
les
push
push
lret
fistl
or
dec
xor
ds
cmp
lods
jp
sbb
adc
frstor
andb
ja
cmp
inc
jne
and
push
mov
sub
mov
fwait
insl
cmp
mov
cmp
or
popf
insb
test
sbb
test
dec
pop
xor
cld
aaa
fdiv
push
or
mov
pushf
in
subl
push
and
pop
xchg
mov
push
mov
mov
in
mov
bnd
dec
fmuls
test
and
mov
sub
mov
xchg
loope
in
insl
fidivrs
dec
xor
dec
xchg
lods
xor
test
or
std
test
xlat
xchg
mov
nop
mov
pop
mov
cmp
cmp
push
insl
stos
out
pop
popf
sub
shrb
cmc
jmp
jle
mov
xor
aas
mov
imull
sbb
and
add
xchg
nop
arpl
sbbb
aam
push
pop
push
popa
cmc
jns
shl
add
push
jmp
push
sub
mov
jnp
dec
jnp
ds
add
cmpsl
and
sbb
sub
arpl
scas
scas
in
mov
inc
in
mov
or
mov
popa
repnz
xor
fxch
fimuls
pop
pop
jmp
mov
imul
cmp
mov
add
pushf
rclb
dec
sub
or
jno
dec
sti
outsl
int
push
adc
iret
stos
pop
ret
sbb
lret
enter
sbb
adc
sub
mov
ss
inc
mov
pushf
mov
mov
negb
mov
lods
fwait
and
ret
cmp
mov
or
jo,pt
ja
sahf
clc
xor
iret
jg
xor
dec
xor
dec
lds
data16
frstor
shl
cmp
stos
mov
pop
sahf
cmp
sbb
jle
sub
mov
pusha
cltd
data16
jecxz
movb
bound
cmp
mov
dec
fiadds
mov
inc
test
insl
pop
lret
push
stc
cmp
sbb
adc
in
xchg
xchg
pop
or
fsts
sbb
popa
mov
ds
test
inc
mov
cmp
cli
adc
mov
mov
add
dec
lret
mov
fldl
push
fsin
sub
lcall
cmp
and
inc
pop
nop
sarb
push
cs
fcoml
xor
pop
push
sub
scas
arpl
pop
sbb
aaa
push
imul
rcrl
pusha
in
and
test
clc
sbb
imul
leave
jmp
push
mov
sub
add
jl
and
mov
into
dec
xchg
inc
mov
in
lods
loopne
cmp
nop
test
lods
adc
loope
cmp
outsl
sarl
sbb
test
pop
insl
cmp
xchg
sbb
sub
scas
lods
or
xor
jns
and
mov
scas
cmc
mov
adc
pop
icebp
add
movsl
dec
fstpl
scas
pusha
inc
stos
sub
sbbl
lahf
push
sbb
das
mov
aam
sbbl
pushl
xchg
add
aas
insb
pushf
push
imul
push
mov
out
mov
mov
popf
or
repz
jb
adc
sub
lret
fisttpll
push
jg
icebp
xchg
dec
imul
jge
add
jnp
jbe
movsb
repnz
xchg
push
fnstsw
dec
lret
hlt
lcall
stos
and
pop
sbb
mov
aas
inc
or
movsb
call
sbb
push
cltd
jp
cmc
aas
lea
repz
lds
mov
and
cld
out
shlb
xchg
mov
and
or
aaa
aaa
fmuls
test
adc
ss
push
inc
in
push
mov
pop
or
inc
in
jecxz
inc
imul
insb
mov
sub
fiadds
pushf
sub
rorl
jmp
adc
sbb
imul
mov
mov
jmp
popf
jnp
mov
add
dec
loop
scas
fldt
test
enter
jno
mov
cmpsb
pop
sub
out
push
rdtsc
adc
and
pop
jbe
mov
and
imul
aas
pop
mov
fstl
nop
and
hlt
int
xor
dec
jge
fidivs
fisttps
mov
dec
adc
dec
xchg
mov
inc
xor
loopne
icebp
inc
xchg
mov
mov
mov
pop
mov
jg
xlat
and
pusha
inc
out
orb
stos
movsl
fldt
cmp
push
jp
div
shrb
imul
cmp
je
jbe
mov
cmp
ss
push
icebp
mov
cmp
sbb
popf
dec
repz
shrb
cli
push
or
int3
mov
sbb
insb
scas
cld
addr16
jbe
dec
stos
sbb
loopne
pop
lea
dec
dec
fiaddl
or
push
and
push
xchg
mov
call
hlt
jg
rcrb
outsl
andl
fldt
inc
xlat
dec
jge
dec
es
adc
mov
cmp
shl
fsts
adc
fcomps
add
test
ja
inc
push
in
mov
cmpsl
scas
push
out
iret
cli
gs
add
sbb
sub
or
lods
inc
pushf
xchg
sbb
cli
repz
aad
pushf
sub
dec
fnstcw
xor
push
jmp
jo
arpl
andb
dec
pop
or
in
xchg
repz
cwtl
outsl
jnp
pop
aaa
aam
push
push
inc
fstpt
in
mov
mov
mov
lock
mov
aaa
jns
ss
mov
out
mov
dec
fwait
lret
es
sbb
mov
cmpsl
rcrl
scas
fcomps
test
and
push
fsts
in
fisttpl
inc
push
pop
pop
xlat
inc
fs
insl
cmc
sbb
insl
inc
cmp
sub
les
int
push
sub
mov
or
push
mov
push
sub
clc
mov
xor
cld
fcoml
mov
pop
xchg
jl
sub
mov
orb
sub
shlb
pop
scas
pop
test
pop
movsl
and
pop
clc
stos
stc
sahf
fimuls
mov
inc
imul
call
shlb
push
fistpll
mov
mov
mov
sbb
outsb
les
test
push
sbb
cs
sbb
lret
jno
or
jmp
mov
int3
popa
cmp
xchg
insl
pop
aad
pop
mov
cmpsl
xor
sbb
aaa
xor
jl
stos
ficoml
mov
xor
loopne
lcall
xor
push
test
add
lret
pusha
jp
mov
loop
sub
jecxz
out
mov
call
ljmp
lcall
push
or
sbb
std
pushf
xchg
mov
leave
pop
sbb
fdiv
cmp
add
flds
mov
mov
fsts
in
xor
push
sbb
xchg
mov
test
adc
test
daa
shlb
negb
jnp
jecxz
sbbl
jmp
fucomp
std
or
or
sarl
sbbb
nop
inc
pop
dec
loopne
lret
mov
pop
push
out
mov
out
loope
inc
ret
mov
imul
outsl
add
movb
dec
mov
inc
in
stos
stc
cmpsl
xor
add
inc
outsb
iret
sar
das
sub
out
addb
sbb
or
scas
int
arpl
jnp
pop
and
mov
pop
jge
sbb
data16
fdivr
sbb
sub
xchg
xorb
pop
aaa
mov
cmpsb
mov
outsl
mov
pop
push
mov
in
pop
sub
adc
inc
sbb
stc
repz
jns
clc
jmp
in
sbb
or
out
and
xchg
cmp
sub
fs
xchg
push
inc
mov
aaa
and
mov
hlt
rcr
add
aad
ret
out
pushf
push
xor
push
mov
mov
lods
scas
les
add
rcrl
scas
push
jle
in
gs
inc
push
cmpb
andl
and
cwtl
mov
mov
push
push
pop
shrb
adc
int3
mulb
ss
adc
adc
jae
movsb
xor
or
ds
jb
or
lods
adc
dec
pop
fcmovnb
pop
es
sub
sahf
adc
hlt
cld
mov
push
lret
pop
push
les
add
mov
mov
rorb
mov
mov
jnp
push
bound
mov
or
mov
sbbb
or
jns
jmp
sub
inc
inc
cmpsl
push
xchg
mulb
imul
xchg
fwait
test
and
or
mov
in
xchg
sbb
sub
aad
sbb
adc
fidivl
daa
push
mov
jecxz
bound
or
adc
in
sbb
and
insb
lahf
mov
mov
sbb
xchg
xor
add
fwait
sbb
mulb
into
dec
and
xchg
mov
repz
aas
lret
dec
pop
popf
jne
dec
ret
push
mov
jbe
xchg
dec
inc
jp
lods
int
cmp
pop
popf
outsl
cmp
test
adc
sub
jb
movsl
push
std
xchg
fsubs
lret
xchg
push
adc
adc
mov
pop
adc
pop
daa
push
adc
cltd
das
jg
pop
loop
cmp
or
and
push
lahf
pop
daa
les
aaa
sub
cmpsb
in
mov
xor
stos
nop
pop
xor
push
loope
add
stc
imul
sbb
notl
xchg
aaa
jge
out
fs
sub
sahf
mov
pop
cli
xorl
mov
roll
push
mov
rcl
add
movsl
sahf
pop
lods
imul
dec
sbb
jb
cmp
lcall
int
sbbl
int3
sub
aam
aad
outsb
roll
vmovd
mov
ljmp
mov
das
lcall
int
les
mov
pop
sti
fisttpl
pop
pushf
and
dec
xchg
js
faddl
mov
jbe
stc
xchg
pop
out
pop
mov
dec
out
pushl
dec
cmp
roll
loopne
push
fstl
insl
data16
repnz
inc
pop
mov
mov
cmp
sub
mov
mov
xor
push
int3
lea
test
loopne
push
loope
cmpsb
sub
in
pop
xor
jmp
cmp
mov
jecxz
mov
xchg
insl
fwait
in
cli
gs
xor
adc
pop
or
pop
jle
and
sbb
mov
and
mov
add
mov
mov
cmpsl
cmc
arpl
loopne
fsubrs
cmp
imul
int3
and
sti
jnp
xchg
jge
test
cmp
jbe
dec
jns
sub
sbb
push
or
es
mov
adc
scas
dec
xor
mov
jne
cltd
shr
mov
aad
pushf
movsb
mov
pop
insb
sub
sub
repz
mov
mov
testb
ljmp
shl
pop
cli
adc
loop
pop
cmp
cld
ret
cltd
cmpsl
lock
loop
testb
mov
ljmp
push
jnp
test
cmpsb
or
cmp
imul
test
mov
dec
xlat
inc
lods
jmp
sar
adc
ss
out
iret
xor
int
and
xchg
jb
ss
push
loopne
push
ds
mov
fidivl
iret
scas
dec
mov
je
lds
dec
cs
xchg
adcl
cmp
xor
dec
cmp
cmp
sbb
insl
dec
jmp
daa
sub
test
lock
mov
cltd
and
cmp
sub
sbb
cmp
cli
sahf
add
scas
fdiv
shlb
mov
or
mov
sub
jne
or
mov
dec
adc
mov
mov
xchg
cmp
movsb
mov
xchg
es
mov
pop
pushf
adc
mov
sub
ja
inc
fisubl
icebp
mov
fldt
dec
xchg
shlb
jne
jg
sbb
adc
add
sbb
mov
fwait
inc
dec
xchg
lret
ljmp
xor
mov
cltd
inc
add
ljmp
bound
dec
loop
aas
mov
push
mov
mov
pushw
push
or
cmp
scas
test
cld
aaa
lods
push
jge
in
das
cmp
or
leave
xchg
in
ljmp
popf
imul
xchg
xor
adc
xchg
sub
dec
mov
int
push
mov
in
inc
inc
jle
lea
call
dec
push
lret
add
ja
pop
jnp
pop
inc
adc
or
into
push
push
xchg
dec
and
dec
add
mov
or
lock
adc
leave
sbb
jle
jecxz
aad
icebp
ljmp
adc
push
stos
popf
daa
pop
out
adc
and
mov
clc
enter
bound
pusha
lcall
stos
pop
push
xchg
dec
sar
sbb
imul
lds
rorl
sub
lahf
insl
mov
lahf
pop
push
pop
xchg
mov
xor
jg
mov
pop
orl
lods
std
outsl
sub
test
sbb
mov
jae
mov
jns
inc
jno
rol
inc
mov
jne
divb
shll
popa
in
or
dec
inc
test
ds
arpl
sbb
out
xor
test
fiaddl
cmp
inc
ljmp
cmpsl
cmpsl
stos
lret
cli
repnz
lods
xchg
or
mov
sarl
out
sahf
shll
lret
inc
andl
push
cmp
scas
sub
and
test
lret
mov
push
std
or
sub
mov
inc
cmp
mov
leave
cmc
ret
mov
clc
leave
pop
or
jbe
and
mov
gs
dec
ret
push
cmp
movsl
dec
or
fsubs
cmc
mov
jae
mov
cmp
xlat
lret
scas
xor
test
ror
add
outsb
add
push
sub
adc
mov
jno
inc
mov
ftst
sub
shll
xchg
test
push
data16
loopne
orl
subl
push
xchg
mov
add
sbb
ds
cmpsb
jecxz
fnstenv
jmp
mov
movsl
ret
add
stc
jmp
mov
jge
inc
mov
lahf
push
popa
sub
push
insl
jbe
pop
ja
sbb
adc
gs
push
and
out
mov
mov
push
or
and
clc
int3
in
lods
nop
jle
out
shll
int3
ficoml
out
repnz
xchg
push
popf
insl
mov
popf
inc
shl
cld
scas
lea
enter
mov
mov
inc
movsb
stos
mov
cmp
sub
icebp
cmp
xor
outsb
addl
sbb
xlat
das
xchg
jecxz
int
sahf
test
loope
cmp
xor
or
enter
jmp
push
inc
std
push
gs
out
fsub
jg
int3
lods
aaa
pop
sub
jmp
add
add
outsb
out
push
aaa
pop
push
mov
sub
ret
inc
lods
mov
sti
jge
inc
movsb
mov
icebp
mov
inc
rolb
divb
pushf
mov
push
iret
mov
pop
lahf
sbb
inc
and
popa
adc
ljmp
dec
xor
arpl
andl
adc
push
cwtl
fs
xchg
inc
divb
cmp
jmp
in
das
add
inc
js
data16
push
and
pop
pop
add
dec
hlt
imul
add
sub
xor
call
data16
dec
ret
adc
jne
call
sbb
cmc
stc
pop
pop
imul
xchg
push
and
jle
icebp
xor
xchg
mov
inc
stos
test
incl
pop
inc
inc
pop
xchg
ds
in
add
stos
xor
sbb
movlps
popf
and
mov
es
movsb
testb
outsl
jl
sbb
loopne
jp,pt
dec
inc
sub
rorb
mov
loop
xchg
repnz
and
sti
loope
xchg
or
sub
jmp
xlat
jnp
push
fisttps
sahf
xchg
lcall
sbb
rolb
push
pop
lock
sbb
in
xor
mov
out
adc
out
fwait
std
pop
mov
ds
rolb
je
std
faddl
mov
aaa
fiadds
popf
nop
cmp
cmp
aad
popa
lcall
cwtl
push
lea
push
rorl
popa
mov
sbbl
cmp
repz
addr16
jge
int3
sub
or
sbb
out
dec
add
mov
inc
or
out
xor
xchg
cltd
dec
push
rolb
out
or
popa
cli
idivb
daa
jmp
mov
or
fdivr
cmp
sbb
test
push
cmp
sbb
add
jge
enter
cmp
ljmp
stos
outsl
lea
push
mov
arpl
addl
out
sahf
push
cmp
fdivs
frstor
mov
dec
sub
shlb
out
ja
mov
cs
and
leave
out
int
mov
xor
popa
stos
imulb
mov
push
scas
and
mov
mov
lcall
mov
les
je
sar
mov
aaa
int3
shrb
pop
rcrb
out
movsb
and
imul
repnz
ret
pop
sbb
fwait
inc
and
insb
outsb
loop
cmp
push
or
adc
in
mov
jg
and
pop
inc
mov
hlt
ret
mov
mov
add
mull
ja
sbb
sub
xchg
test
addr16
xchg
in
pop
mov
aad
stos
pusha
mov
push
or
mov
out
out
aas
fbld
lahf
cmp
fmull
rcrb
push
loop
xlat
push
imul
lods
mov
pop
into
inc
lahf
sub
mov
push
xor
out
loop
ljmp
or
inc
les
jo
lcall
jmp
xchg
cmp
mov
adc
inc
int3
lods
pop
mov
aam
test
push
push
sub
mov
jb
mov
ret
repnz
pop
dec
pop
mov
les
imul
cmp
and
decl
leave
mov
jl
inc
sti
pop
fisubs
das
sbbl
adc
lcall
aad
push
mov
inc
fistps
xchg
and
adc
div
cltd
lret
cld
fisttpll
imul
sbb
pop
push
outsl
out
xorb
inc
and
out
int
mov
repz
pop
push
sbb
push
test
rcrl
dec
jno
or
cmpsb
sti
inc
outsl
je
jae
sbb
addl
shlb
inc
inc
out
xchg
lds
cmp
test
push
inc
addb
gs
std
mov
jp
add
fcmovnu
push
xchg
loop
pop
aas
xor
inc
push
push
add
enter
es
add
std
aad
or
mov
std
push
int3
xchg
push
test
inc
pop
mov
xchg
loop
rcrl
adc
lea
cmc
aas
mov
pushl
scas
sbb
mov
jl
mov
push
push
mov
xor
xor
xor
jl
or
mov
cmp
es
xchg
test
dec
push
mov
cli
nop
ss
pop
aas
push
inc
cltd
and
pop
sarl
divl
in
jle
out
scas
stos
js
ja
fisubl
mov
jge
lock
data16
adc
icebp
jne
dec
insb
and
bound
ret
mov
adc
mov
orl
push
dec
cmp
ss
icebp
addr16
fstps
scas
mov
aad
sub
jbe
out
or
pop
icebp
test
ror
sti
mov
ror
xorb
int3
jg
gs
in
iret
outsl
daa
xor
jo
mov
dec
data16
into
cmp
jae
imulb
mov
xor
inc
into
push
icebp
pop
scas
sbb
scas
iret
inc
ret
push
jmp
or
dec
xor
imul
jle
clc
cmc
dec
fnsave
loope
pop
outsb
out
cmp
imul
adc
push
mov
les
insb
incl
or
dec
icebp
out
sbb
inc
mov
push
jne
daa
je
icebp
or
cmpb
fsubrs
jns
sahf
aas
mov
mov
notb
rclb
mov
mov
scas
inc
mov
xchg
mov
pop
cmp
cltd
shll
ja
lcall
shlb
ja
idiv
inc
mov
mov
cmp
xor
jbe
xchg
xchg
mov
lret
fistpl
roll
jmp
shl
ds
mov
cmp
int3
repnz
aaa
frstor
dec
pop
repz
sub
push
dec
cltd
mov
cmpsb
scas
xchg
inc
pand
sar
push
or
lods
es
loopne
aam
cmp
mov
sub
movsl
pop
icebp
push
out
fwait
and
xchg
mov
push
dec
ss
ljmp
xor
xor
jne
sbbl
fimuls
sub
xchg
cmpb
cs
test
rcr
arpl
mov
movsl
add
imul
mov
mov
pop
sub
inc
mov
xchg
push
jnp
fistps
lret
stos
test
mov
repnz
pmaxub
mov
push
js
mov
loopne
pop
ds
lret
popf
dec
call
and
or
add
mov
cltd
es
add
cli
pop
inc
jo
push
in
imul
cwtl
ret
repz
mov
cmpsb
cwtl
aam
ja
arpl
pop
add
ss
in
jl
out
adc
lcall
fsubrl
cmpb
and
xlat
int3
mov
rcrb
cmp
or
mov
cld
daa
icebp
fs
add
lcall
push
xchg
xlat
clc
push
mov
push
jnp
int3
push
repz
ficoml
inc
and
pop
or
mov
adc
clc
xor
and
mov
jae
cmp
xlat
clc
stc
cs
fldenv
dec
add
mov
lds
pop
aas
gs
lret
mov
int
int
pop
push
and
mov
jge
push
in
pop
sbb
add
cld
mov
repz
xlat
js
stos
dec
stos
adc
cli
adc
popa
shrl
mov
push
pushl
xlat
enter
repnz
or
addl
jg
pop
mov
in
fwait
jae
in
lret
push
enter
or
xor
cmp
stc
dec
or
xlat
gs
js
jbe
pop
dec
push
inc
cmpsb
fcoms
ja
push
into
mov
or
cmp
or
sbb
add
xchg
push
mov
in
and
adc
mov
inc
rol
stos
and
jg
pushf
cmp
push
mov
or
call
std
mov
dec
fmul
jns
gs
pop
mul
stos
in
std
push
add
add
and
std
pop
adc
and
repnz
outsl
stos
sbb
push
imul
bound
mov
push
mov
mov
fcmovnbe
outsl
push
outsb
rolb
adc
adc
mov
xchg
call
push
mov
jecxz
icebp
ljmp
nop
xor
xchg
mov
out
adc
mov
push
sub
sub
push
bnd
inc
pop
mov
xor
jecxz
aaa
int3
cli
ret
pop
clc
jnp
push
or
sbb
sbb
push
adc
xlat
xchg
ljmp
lret
cld
pop
loop
pop
push
cs
sbb
fidivrl
rcr
ds
dec
mov
jecxz
movb
popw
jno
cmp
xchg
dec
sub
pop
out
shr
js
jmp
pop
call
push
loopne
in
or
mov
xor
jecxz
mov
pmaddwd
and
add
cli
out
aam
xchg
xchg
sbb
loopne
bound
and
scas
lcall
outsl
fistpll
ds
in
rcrl
and
sub
mov
mov
stos
cmpsl
fbstp
jmp
or
push
cmp
xlat
loopne
dec
sbb
mov
xorl
push
test
mov
inc
sub
cmp
mov
mov
cmc
les
cmp
mov
or
icebp
dec
fwait
leave
sub
je
xchg
lea
cltd
sub
aad
add
dec
ret
test
sti
inc
fwait
xor
shrl
mov
mov
aaa
ss
in
xchg
leave
mov
pop
in
repz
jle
iret
movntps
ja
cmp
sti
or
inc
pop
es
or
cs
lods
inc
dec
test
out
addps
aad
dec
sbb
movsl
xchg
lock
jae
jle
das
fcompl
push
xor
je
pushl
mov
cwtl
lds
or
lds
jecxz
testl
sub
not
pop
cmp
sub
sub
arpl
push
aad
dec
inc
test
ret
sub
push
lock
int
dec
jle
out
jo
mov
and
std
mov
aas
jle
adc
das
jg
andb
popf
push
out
sbb
and
sub
and
je
jl
into
inc
loope
jno
and
outsl
mov
pop
push
xor
inc
leave
scas
mov
mov
lret
call
pop
jno
add
dec
xor
xor
in
lret
dec
sub
lods
pushf
inc
movsl
addl
std
add
xchg
test
aad
cmp
xchg
cmc
imul
faddl
sbb
or
adc
sahf
outsb
jnp
ss
into
nop
dec
call
in
or
sub
add
subb
arpl
je
loop
loopne
dec
mov
xchg
jne
pop
outsl
adc
jo
push
dec
arpl
cmc
ret
sbb
imul
ja
inc
jmp
cmp
dec
clc
adc
call
icebp
cli
mov
dec
xor
movsl
inc
scas
mov
aad
xor
push
xorl
daa
push
push
imul
pop
call
pusha
sbb
jno
in
lds
fnsave
rcrb
mov
xor
inc
pop
icebp
lock
stos
add
fistl
pusha
dec
lret
and
mov
out
or
xchg
sub
test
or
jmp
pop
jno
jmp
stos
pop
int3
popa
pop
push
movsl
cmp
jge
movsb
mov
inc
sbb
fsubrl
lcall
jae
mov
lahf
sbb
mov
imul
mov
cmp
sarb
push
das
inc
jge
int
in
out
roll
popf
dec
pop
and
repnz
pop
cmp
fincstp
lods
jnp
lea
mov
insb
js
and
cmp
add
mov
cltd
movsl
adc
outsl
mov
in
sub
in
mov
add
jo
or
outsb
fxch
push
xor
ja
jg
sbb
mov
mov
inc
jl
mov
call
jl
int3
mov
mov
push
pop
jle
das
pop
dec
xor
or
loopne
sub
mov
bound
scas
and
mov
adcb
test
mov
or
push
xor
lods
xor
adc
rol
or
je
or
aas
push
out
adc
push
cmpsl
mov
dec
test
add
fidivrl
fcmovne
jge
iret
mov
mov
xchg
adc
pushf
cmp
sarl
movsb
mov
sub
push
sub
jno
cmp
jle
fwait
cmp
mov
int3
xor
push
and
leave
call
and
push
cld
jne
lret
push
and
jo
push
js
out
jg
and
cwtl
or
sub
in
or
xor
scas
xor
hlt
lock
push
add
cwtl
aam
addr16
loop
cltd
mov
cmpsb
jecxz
out
popa
mov
sub
dec
push
cmp
sbb
outsb
mov
xchg
in
xchg
mov
jb
mov
icebp
ficomps
arpl
clc
test
mov
inc
add
inc
lods
bnd
hlt
jg
mov
push
fldcw
cli
pop
repz
mov
outsb
js
stos
leave
aad
inc
clc
sub
xor
push
push
je
push
outsl
movsl
iret
and
xchg
stos
repnz
inc
and
sbb
gs
mov
cmp
addr16
cmc
leave
lods
cmp
adc
adc
out
aas
nop
push
pop
or
add
push
inc
cmpsl
cli
jecxz
add
cmp
bound
inc
mov
loop
out
inc
es
inc
out
push
adc
jne
adc
xor
or
adc
sub
jle
jne
stc
loope
pushf
inc
pop
jbe
dec
add
test
jns
sbb
stos
into
sbb
pop
es
movsb
push
inc
lret
sub
pop
pop
sbb
mov
std
cmc
pop
mov
inc
dec
rcrl
jecxz
imul
aaa
rcr
mov
add
cmp
leave
das
les
je
and
hlt
jle
inc
call
cmp
lods
xchg
xchg
and
jne
fldenv
fucom
jmp
or
les
push
imul
xchg
push
xor
jbe
and
mov
test
jle
cmp
stos
cmpsb
cmp
mov
xchg
cmc
js
mov
mov
cmp
adc
mov
xlat
lods
orl
jge
and
test
fisttps
cmp
sbb
or
les
push
mov
fistl
push
pop
dec
in
xchg
ss
inc
jle
cmp
mov
roll
test
add
scas
jle
push
test
sbb
sarl
test
pop
sbb
mov
mov
data16
shrl
pop
xchg
add
lea
xchg
inc
ss
xor
dec
cwtl
xchg
aam
push
pop
or
aaa
jmp
loope
xchg
add
popf
inc
cs
jnp
cmp
loop
jae
mov
cwtl
xor
mov
add
movsl
rcll
daa
cmp
dec
in
mov
je
jb
sub
xor
loopne
aad
jl
sbb
pop
inc
push
lret
xchg
or
fdivs
sub
jb
test
xor
xor
mov
xchg
jno
shlb
mov
sbb
add
mov
stos
dec
adc
mov
shlb
mov
adc
lea
or
adc
xchg
pop
mov
out
pop
in
xchg
jae
mov
cmp
dec
xchg
cmp
clc
pushl
mov
stos
adc
sbb
les
outsb
push
and
fisubrs
fwait
and
mov
pop
aad
outsl
test
movsl
sbb
leave
movsl
sub
mov
push
dec
cli
sub
out
enter
andl
lods
pop
lret
dec
xchg
mov
cld
aad
adc
mov
es
pop
push
and
inc
mov
adc
ficompl
lret
sti
aaa
sbb
leave
pop
pop
in
push
test
pushf
xchg
fldenv
inc
out
jns
sbb
cmovb
stos
stos
xor
ljmp
sbb
add
and
inc
out
aam
lret
popa
inc
push
adc
mov
psubw
xorl
adc
shl
lret
aam
mov
push
cmp
pop
cmp
std
outsl
insl
xchg
mov
jge
push
lret
movsb
push
test
xor
daa
cmpb
inc
mov
and
sahf
add
push
inc
ja
adcl
fdivp
lock
push
inc
scas
or
outsl
mov
cmp
pop
movsl
mov
mov
dec
stos
js
in
out
lret
imul
mov
mov
mov
inc
xor
fdivr
int
rclb
iret
adc
push
rol
popf
in
xchg
cmpsb
or
mov
nop
lods
and
fistpl
divb
mov
xor
orb
jecxz
movsl
cmp
stc
add
pop
orb
int
xor
insb
xchg
and
jge
fwait
mov
push
adc
cwtl
jp
push
add
mov
ja
outsb
pop
lcall
fwait
adc
insl
ss
sahf
jmp
cmc
xchg
into
out
jae
xchg
aas
cmp
push
stc
frstor
mov
sarl
sub
xor
and
ds
mov
outsb
mov
fwait
int
dec
aas
sub
out
dec
repz
add
les
ss
mov
ljmp
jmp
mov
xor
inc
inc
dec
out
sahf
into
jno
hlt
xchg
std
xor
xchg
push
imul
stos
sbb
xorb
ss
orb
sub
cmp
ja
xchg
popa
jg
arpl
iret
sub
int
or
jo
sub
and
jg
add
aam
add
call
mov
mov
cmp
push
jns
insl
sub
adc
pop
ffree
jge
sbb
aam
dec
or
dec
mov
pop
pushf
dec
jae
push
enter
sub
lods
push
shlb
mov
jle
mov
cmp
ljmp
xor
es
inc
xchg
test
sbb
pop
inc
lock
push
push
xor
lods
inc
lret
dec
sub
cmp
mov
mov
movsl
lods
sbb
jno
mov
mov
push
fmulp
shrb
mov
mov
mov
add
fisttpll
jbe
sbb
mov
mov
and
xchg
and
inc
or
xor
sarl
pop
mov
scas
mov
repnz
xchg
inc
cld
mov
sub
pop
push
inc
aad
mov
dec
fcomps
int3
rorb
mov
bound
stos
dec
dec
pop
dec
ja
test
push
fucomip
ret
flds
inc
sbb
pop
scas
jns
out
scas
test
mov
adc
insl
mov
int
dec
sahf
movsb
xchg
mov
sub
arpl
insb
aas
shlb
cltd
aad
bound
push
test
jecxz
push
dec
aam
test
mov
pop
jo
pushf
pop
je
adc
pop
mov
out
pushf
sub
scas
lods
jp
jo
fmull
lock
add
dec
cmpsb
xor
pop
mov
addb
pop
insl
das
add
push
sbb
sub
bound
xor
inc
in
push
loop
push
add
sub
sahf
mov
mov
sahf
sbb
sbb
mov
inc
adc
push
dec
shrl
cs
adcw
cmp
sti
dec
and
leave
mov
mov
mov
aad
in
leave
lret
cmp
inc
jl
repz
add
mov
loope
addr16
pop
lcall
jnp
sbb
and
fwait
jle
fnsave
xorb
mov
push
adc
shll
jae
sahf
push
adc
jb
in
addb
sahf
lods
push
testb
sbb
jp
jae
ret
mov
arpl
mov
ja
xor
jecxz
push
cltd
cmp
jne
lcall
mov
or
push
cmp
mov
add
cmp
pop
pop
sub
mov
clc
in
or
xchg
out
add
imul
int
gs
lock
adc
cmp
push
sub
insl
xchg
in
popa
push
mov
popa
dec
dec
pop
nop
xchg
insl
dec
xchg
xor
mov
xchg
gs
or
in
push
jge
xor
pop
sbb
xlat
mov
hlt
pop
push
mov
mov
int
mov
xchg
in
mov
enter
adc
popa
int
pop
call
mov
imul
sub
fldenv
ds
jecxz
mov
repz
lea
xor
ret
daa
nopl
cmp
lds
enter
cmc
inc
rol
xchg
sub
out
mov
and
sub
ds
insl
nop
ret
jg
fldl
loop
jecxz
imul
fmuls
jg
stos
add
dec
push
cmpsb
movaps
loope
xor
inc
fidivs
push
cmp
fstp
nop
in
shll
xadd
jp
xor
mov
movsl
adc
movsb
out
mov
in
std
cmpsb
imulb
push
icebp
dec
inc
mov
xor
mov
iret
out
je
scas
ja
aaa
and
test
stc
sub
fdivl
sbb
jb
cmp
or
rcrl
jae
push
dec
mov
pusha
iret
rorl
xlat
rcrl
cli
sbb
rol
inc
mov
mov
icebp
imul
fisttpll
js
gs
pusha
jecxz
dec
dec
xor
xor
sarb
mov
rcrb
push
xchg
add
sbb
push
rcrl
or
and
loopne
ret
popa
int3
popf
adc
or
in
scas
jl
movsl
lahf
test
sti
icebp
cmp
mov
inc
inc
mov
pop
ds
xor
sbb
gs
ja
cltd
mov
mov
mov
and
inc
das
and
sbb
aaa
dec
es
sahf
mov
stos
in
das
shrb
pushf
add
inc
sbb
mov
icebp
in
pop
adc
jmp
shlb
loop
fidivs
xchg
cmp
shrb
jb
std
mov
push
idivb
ss
push
or
adc
out
cmpb
test
cmp
mov
imul
mov
lret
stos
mov
ss
mov
xchg
inc
pusha
or
mov
fsts
add
out
imul
jg
sbb
jne,pn
aad
adcb
mov
je
xor
arpl
mov
cmp
jae
and
adc
push
subl
lahf
cmp
xchg
or
lahf
pop
test
push
pusha
cmp
pop
pop
ret
idiv
cmp
mov
jns
lock
shl
hlt
fsubr
jnp
add
mov
shlb
out
jg
movsb
leave
aaa
sarl
add
add
cmp
adc
xor
sbb
jl
imul
movsb
push
mov
cmp
mov
lahf
stos
sbb
sbb
cmpsl
adc
in
sarl
pop
fs
cwtl
rcrb
jmp
mov
roll
sahf
repnz
je
data16
insl
aas
stos
jge
xchg
dec
mov
fnstenv
xchg
fstpl
mov
or
and
je
jo
sbb
bound
sub
into
fwait
stos
adc
sbb
sub
rclb
lret
push
test
adc
mov
repnz
out
std
enter
ljmp
out
push
adc
and
add
push
stc
add
xchg
das
movsb
adc
call
dec
lret
jecxz
mov
and
loope
leave
push
rolb
stos
cli
out
mov
ret
mov
stos
mov
xlat
push
jge
clc
mov
jae
repnz
cmc
ljmp
adc
test
cmp
frstor
push
mov
outsl
hlt
mov
lahf
dec
cld
das
je
jmp
xchg
in
fwait
and
sub
pop
jl
dec
and
in
enter
xchg
pusha
cmpsb
mov
fcompl
pop
and
cmpb
movsl
jbe
cmp
jb
imul
test
dec
or
data16
fwait
arpl
mov
add
popf
cld
sbb
imul
sub
jbe
xor
dec
aas
or
jl
sub
aad
lods
sbb
mov
cmp
nop
enter
dec
frstor
loop
push
insb
shrl
je
push
inc
out
cmpsb
cwtl
in
incl
xor
loope
sti
testl
mov
or
cmp
inc
sub
lods
iret
xor
imul
in
mov
adc
cmp
ds
inc
cli
jl
push
xor
mov
xor
adcl
ljmp
sbbl
stc
xchg
pop
inc
or
inc
sahf
sub
ss
sub
push
inc
mov
insl
sti
bound
lcall
xlat
shll
rolb
mov
pop
cs
subb
sub
pop
xchg
sub
xchg
add
or
cld
lds
imul
lret
mov
xor
mov
js
jbe
das
data16
pop
ret
pop
push
inc
add
stos
ud0
pop
xchg
gs
aad
and
cmp
and
lock
ljmp
and
jp
aad
ljmp
add
inc
mov
push
daa
inc
mov
push
lods
outsb
cmp
popa
mov
dec
sbb
subb
pop
rcrl
or
lock
loopne
mov
fistl
clc
movsb
push
or
ja
mov
inc
xchg
or
xchg
jo,pt
pop
call
nop
dec
int
clc
add
inc
imul
std
xor
in
push
xchg
adc
cwtl
frstor
dec
cmpsb
cmpsl
es
and
mov
xor
pop
jl
sbb
fldenv
mov
out
inc
adc
pop
dec
pop
ret
into
mov
enter
sub
mov
xor
xor
outsb
mov
mov
ret
aam
and
stc
push
lods
xor
pop
out
jle
stos
test
popa
sub
les
push
mov
push
es
push
stc
jae
stos
push
pop
lods
cmp
mov
sbb
xchg
scas
dec
clc
sub
sbb
outsl
mov
lret
movsb
bound
pop
dec
sub
insl
in
and
xorl
dec
clc
out
aad
loopne
xor
data16
xchg
adc
cmp
cld
push
in
pop
pop
xchg
mov
jl
les
outsb
pop
jns
or
dec
pop
sub
clc
and
movsb
xchg
in
jmp
inc
adc
in
and
and
xchg
cmpsb
add
jbe
cmpsb
std
pushf
xor
nop
lods
rolb
xlat
xchg
mov
in
adc
or
gs
mov
mov
fadds
sub
fistl
jmp
mov
out
adc
das
xchg
sub
xor
and
dec
js
lcall
scas
xchg
mov
mov
sbb
sub
mov
and
nop
ljmp
cltd
cmp
icebp
mov
push
push
rclb
inc
ljmp
or
fs
xchg
rorl
jmp
repz
je
xor
lahf
lcall
xchg
jp
fcmove
movsb
mov
rorb
mov
outsb
add
icebp
in
out
mov
cltd
ds
push
out
add
adc
adc
pslld
jo
push
xor
inc
cmp
ret
mov
call
mov
pop
or
test
addb
add
adc
addl
rcrl
icebp
out
xor
mov
inc
ljmp
dec
mov
mov
lcall
sarl
stos
fisubl
or
cltd
cld
and
fmuls
test
ret
mov
ljmp
mov
cmc
in
xchg
ret
in
popf
mov
ret
cs
push
jmp
bound
adc
or
cmp
cwtl
std
cltd
mov
addb
jb
into
xchg
imul
scas
stos
sub
sbb
push
or
notl
sbb
jb
jne
out
xchg
sub
or
and
outsb
aas
mov
lods
loopne
push
or
push
cli
scas
push
clc
mov
sahf
dec
jb
adc
loope
aam
xchg
shrl
xchg
and
mov
lods
add
and
lods
sbb
sub
dec
ds
dec
lahf
ret
push
jge
jl
cmp
mov
xchg
out
sbb
adc
movsl
shll
ret
mov
sbb
inc
jne
insl
lret
push
push
fsubs
imul
out
popa
sarl
outsl
repz
mov
aam
mov
push
jbe
inc
mov
dec
xchg
adc
sbb
sbb
sub
divb
mov
pop
iret
in
jo
dec
sub
in
sbb
mov
hlt
jo
sbb
pop
rcll
and
mov
loopne
dec
xlat
mov
bound
mov
mov
int
sti
pusha
cmp
pop
lahf
sbb
aad
mov
xchg
into
inc
in
ljmp
ret
adc
clc
or
jg
ljmp
or
dec
and
pop
xor
ret
and
jnp
push
rorb
push
cwtl
and
and
mov
cs
push
ja
mov
xchg
sub
shll
lret
std
jmp
repz
sbb
mov
stc
mov
pop
push
shr
in
push
repnz
bound
mov
pop
mov
lret
mov
in
leave
fdivp
nop
jns
hlt
call
pop
shl
divb
dec
orb
ret
mov
repz
and
psrlq
dec
mov
dec
sub
pop
je
push
loope
cmp
test
addb
bound
lcall
insl
pop
push
jecxz
lret
gs
loopne
lea
aaa
push
movsb
lea
push
xchg
ret
jmp
shl
hlt
loop
adc
mov
aam
push
cli
mov
jb
stos
lret
fsts
jae
js
dec
sbb
xacquire
lcall
pop
mov
lret
jb
pushf
mov
jecxz
inc
push
les
or
xchg
add
cli
sarl
out
int
fimull
lcall
ret
mov
mov
xchg
xchg
xor
fadd
mov
push
dec
mov
data16
and
dec
test
or
cmp
xchg
or
push
cli
es
cmp
cli
daa
sbb
jmp
mov
adc
das
push
jo
mov
jmp
mov
arpl
or
sbb
lcall
mov
add
mov
sub
fists
cmp
jp,pt
dec
push
scas
jmp
cld
ret
sbb
dec
loope
sbb
mov
cmp
mov
mov
mov
gs
xor
pop
int
mov
sar
pop
mov
xchg
pop
cmp
imul
lds
adc
subb
out
dec
mov
mov
aas
fwait
inc
adc
sub
inc
jb
mov
je
and
and
test
clc
xchg
add
data16
push
sti
and
mov
faddl
cmp
inc
aam
and
dec
clc
inc
cs
sbb
nop
stos
jge
xchg
test
js
adcb
lods
imul
or
and
xchg
cwtl
shlb
add
lock
xchg
pop
xchg
bound
jb
sarb
iret
das
dec
xchg
inc
clc
pop
sbb
mov
popf
insb
and
jmp
aad
cs
nop
jp
divb
repnz
and
jmp
adc
adc
mov
sarl
cmpsb
enter
cmpsb
cmp
and
fmull
out
dec
xchg
push
mov
mov
sbb
lret
ds
mov
lahf
je
pop
mov
imul
sub
xchg
inc
fs
xlat
sub
push
ret
cmc
adc
lds
mov
push
xor
ss
mov
out
jmp
shll
mov
push
adc
clc
inc
lahf
std
dec
fimuls
into
out
and
and
ds
out
outsb
rcrl
jmp
mov
mov
mov
ja
xchg
xchg
jb
shlb
mov
adc
add
mov
repnz
nop
arpl
cmpsl
push
mov
xor
outsl
xor
xchg
lock
js
adc
mov
loope
lret
pop
adc
pusha
gs
dec
nop
daa
xor
fdivs
mov
imul
imul
shrl
imul
popf
aas
add
orl
inc
push
aam
push
xor
push
in
cmp
lods
mov
push
fs
std
sub
gs
cmp
or
jnp
xchg
lods
leave
sub
mov
bound
dec
sbb
pop
jle
daa
add
iret
xchg
es
test
xchg
lret
test
lock
in
stos
in
adc
dec
call
sub
sub
jg
cs
sbb
sub
add
loope
testb
nop
notb
mov
subl
pop
and
sub
ds
cld
mov
push
jb
mov
xchg
leave
push
stos
in
cli
push
testb
pop
fxch
pusha
enter
jbe
pop
sbb
rcrl
xchg
outsl
sub
aad
fcmovnbe
pusha
mov
imul
jnp
cltd
arpl
lret
mov
pop
cld
mov
movsl
nop
push
cmp
mov
out
and
adc
jecxz
push
or
mov
mov
dec
ds
scas
ss
dec
in
bound
bound
or
adc
sbb
push
fidivs
mov
mov
pminub
mov
pushfw
xor
pop
in
jbe
call
imul
pop
std
hlt
out
push
xlat
out
fs
mov
sub
clc
daa
push
jmp
lret
pop
and
ds
mov
lret
pop
aam
xchg
loopne
loope
and
or
mov
push
jecxz
iret
push
repnz
cmc
dec
dec
int
les
outsb
loop
sbb
xor
aam
pop
loop
xchg
popa
xchg
adc
pop
in
sti
repz
sub
cmp
sahf
dec
sbb
imul
int
pop
movb
rcrb
inc
mov
pop
pop
out
cmpsl
sbb
mov
push
int3
lcall
pusha
cmp
inc
insl
sbb
add
arpl
and
xor
mov
fisubs
push
mov
cwtl
jmp
and
sbb
ret
ret
fs
ljmp
js
jg
inc
nop
dec
call
sub
xchg
lock
push
inc
sbb
test
js
jb
sbb
in
testl
std
mov
fisubrs
sbb
outsb
mov
xchg
iret
repnz
or
add
mov
repz
rclb
hlt
in
hlt
fcomi
pop
hlt
fisttps
aam
inc
dec
pop
xorl
dec
inc
adc
jg
in
sub
out
cmp
sahf
ret
outsb
test
mov
dec
sub
inc
push
stos
pop
inc
add
dec
pop
sub
adc
scas
insb
inc
in
adc
or
int
inc
es
dec
lret
dec
mov
mov
jecxz,pt
iret
loope
test
push
fcompl
add
nop
enter
in
push
jl
push
add
lods
and
xor
clc
les
in
cmp
add
icebp
lds
xor
jae
in
scas
fs
aas
jae
in
mov
mov
js,pt
mov
xchg
xchg
xor
add
cmc
pop
adc
adc
jo
je
inc
xchg
inc
jecxz,pt
loopne
mov
mov
divb
rcr
shll
add
cs
jmp
lds
jg
jecxz
sub
sarb
push
es
into
in
jne
and
mov
pusha
dec
pop
push
mov
cmp
adc
test
fisubrl
aad
mov
jbe
mov
out
in
jmp
mov
adc
dec
sub
push
cmp
clc
stos
or
divl
xchg
push
lret
or
cmp
popf
pop
cmpsb
jmp
lods
or
xchg
jle
insb
aad
push
mov
mov
movsl
cmc
ficoml
mov
cltd
adc
and
xor
ret
sbb
jp
adcb
scas
stc
imul
and
arpl
mov
dec
mov
repz
push
or
jae
test
fdivr
fs
data16
cmpl
mov
jae
adc
ficompl
mov
loopne
das
jne
stos
cmp
adc
clc
lock
pop
pusha
push
insb
std
sbb
mov
lods
test
cltd
push
jl
and
aad
mov
pusha
mov
push
adc
fisubs
fwait
sub
fmulp
icebp
add
daa
adc
add
jmp
pop
mov
pop
fcoml
shl
ror
mov
mov
mov
inc
and
pop
inc
xor
dec
outsl
rolb
in
add
les
push
pop
stos
add
cmp
rcrb
mov
xchg
lds
sbb
dec
call
lcall
cld
dec
sahf
movsl
fldt
incb
lds
inc
push
jb
cltd
pushf
and
mov
les
ret
insb
pop
mov
or
dec
cmpsl
je
and
cmp
fnstsw
movzbl
popf
loopne
or
sbbb
jmp
daa
or
push
xchg
xor
xchg
ret
popf
aad
jge
int
sbb
jo
into
cmp
cmpsl
adc
sub
or
pop
sbb
movsl
jo
roll
cwtl
add
test
xchg
xchg
ficoml
shl
jae
and
shrb
xor
dec
ds
es
lock
scas
sbb
adc
push
dec
loop
adc
cmpsl
out
ljmp
insl
cs
jnp
inc
or
rol
fistpl
push
pop
sub
rolb
and
sub
dec
movsl
and
outsb
xchg
scas
lret
add
fsts
jle
pop
js
cld
mov
icebp
imul
jo
sbb
mov
mov
lret
int
and
xchg
cld
or
or
sahf
stos
inc
ja
jl
inc
pop
dec
cmp
imulb
inc
cwtl
mov
push
ljmp
cmp
es
adc
adc
jbe
xchg
lds
pusha
repnz
pop
adc
clc
testl
std
dec
jno
push
mov
inc
int3
mov
pop
lods
lock
fbstp
add
add
mov
out
inc
xor
test
pop
push
push
aam
stc
jnp
mov
test
and
sub
xchg
push
pusha
cltd
in
jo
punpckhdq
sahf
jns
loopne
or
mov
aaa
add
roll
mov
mov
adcl
aad
in
divl
jmp
fidivl
xchg
movsb
mov
xor
sub
enter
push
dec
fcoms
xchg
dec
mov
inc
cli
cmc
es
xor
jae
les
clc
add
and
hlt
iret
cmp
or
sbb
idivl
ja
rolb
inc
cli
jbe
jl
dec
push
sbb
mov
sbb
rorl
imul
imul
addr16
out
sbb
in
popf
scas
mov
xor
sub
nop
push
jo
jae
sbb
sbb
cmp
mov
jne
xchg
scas
mov
sti
push
cwtl
shl
jbe
insb
mov
imul
jmp
enter
inc
ficompl
xchg
mov
xchg
or
adc
out
addl
dec
sub
sub
mov
out
fnstcw
inc
fwait
mov
cmpsl
cli
cltd
cmp
mov
lods
stos
sub
cmp
mov
xchg
pop
sbb
sbb
loopew
inc
push
jae
or
push
call
mov
fiaddl
mov
or
incb
cli
dec
test
sub
stc
xchg
test
add
fbstp
mov
ljmp
dec
ljmp
add
pop
sbb
adc
sbb
dec
or
jnp
nop
repz
into
dec
lret
out
sbb
or
add
ss
dec
out
cmpsl
and
sub
jge
jae
cmpl
inc
pusha
in
rorl
or
sahf
in
xchg
cmp
xor
adc
sahf
dec
adc
ljmp
lods
fsubrs
gs
cmpsl
gs
lea
mov
hlt
adc
or
dec
cmp
imul
icebp
pause
pop
loope
fucomp
jne
push
je
sub
cmp
scas
mov
call
lret
je
repz
xchg
aam
addb
fnstenv
test
outsb
test
mov
inc
add
xchg
sbb
cwtl
cwtl
jno
in
or
push
test
sahf
pusha
je
je
cmc
test
pop
xor
sbb
xor
shlw
es
jmp
cld
adc
cltd
cltd
and
int3
jmp
jecxz
test
jb
inc
jnp
cs
mov
mov
je
xchg
sbb
sub
cmc
aas
mov
out
inc
jecxz
mov
fsubs
les
add
sbb
popf
add
in
xchg
sahf
pop
mov
jno
lods
add
inc
pop
out
mov
xchg
jle
imul
jl
xor
pushf
rcl
xchg
shlb
xor
inc
pop
dec
sbb
and
dec
jb
mov
xor
inc
cmp
and
mov
rorl
adc
add
push
shld
data16
fisubl
sbb
cmpsb
push
enter
inc
pop
fsubrl
add
in
xchg
or
arpl
ret
jnp
cmp
stos
cmp
xlat
lds
leave
mov
fsubl
aas
pushf
push
dec
mov
je
dec
sub
jp
in
stos
hlt
push
das
pushl
mov
nop
push
mov
aad
add
ret
cmp
fisubrl
adc
outsl
push
mov
ljmp
sbb
xor
push
fs
aam
fcmovu
shlb
mov
mov
adc
addr16
add
sub
xchg
sub
pop
xchg
mov
mov
dec
sbb
adc
dec
xchg
popf
mov
xchg
sahf
popf
add
mull
mov
or
mov
jl
sub
push
add
mov
imul
out
push
leave
dec
cltd
push
jl
test
dec
add
jbe
or
and
inc
out
push
jmp
sub
adc
gs
jo
pop
push
mov
and
lods
push
push
out
sbb
inc
xor
add
loope
dec
add
pop
xchg
sub
movsb
sbb
pop
mov
stc
cmc
fisubs
repnz
adc
mov
lods
dec
cmc
fs
jl
je
add
test
fwait
in
clc
stos
packssdw
js
sbb
ret
adc
dec
test
mov
and
pop
or
inc
mov
or
mov
sub
mov
addr16
aaa
xor
sarb
sarb
gs
clc
mov
ss
or
xor
mov
sub
and
loopne
and
cmpsl
cmp
out
cmp
pop
cmp
jecxz
cmp
sahf
sub
aaa
outsb
sbb
out
push
cmc
jmp
movsl
or
xor
fldl
loope
sub
test
mov
cmpsl
ja
mov
mov
ret
xor
cwtl
sub
leave
xchg
fimull
xlat
cli
dec
std
pop
aad
mov
aam
adcb
popa
jp
leave
je
insb
jnp
enter
xchg
push
sbb
inc
cmp
icebp
adc
inc
xchg
or
ja,pt
add
int3
xor
seta
add
imul
or
push
xchg
sti
inc
adc
es
lcall
ret
pop
out
mov
jbe
sub
mov
add
mov
pop
mov
sbb
fidivrl
xchg
add
cmp
int3
adc
mov
pop
cld
push
fdivrs
lea
decl
sub
in
or
dec
sahf
pop
test
xchg
shlb
int3
scas
in
or
pop
stc
imul
adc
xlat
sub
pop
fnstenv
rcrb
test
imul
lahf
aas
add
nop
jmp
nop
fwait
jnp
ficompl
adc
sarl
inc
je
sub
mov
push
sub
fsubp
xor
aam
data16
lret
adc
sub
shr
lock
lcall
data16
sbb
pop
jle
sbb
std
push
imul
rep
pop
mov
cmpsl
xor
aaa
adc
and
xor
mov
cmpsl
mov
imul
in
push
cmp
and
dec
aaa
sbb
jge
dec
mov
lock
dec
subl
jo
or
fs
push
inc
test
ljmp
adc
add
lds
insl
sarl
fstps
pop
push
ljmp
icebp
icebp
mov
loope
cmc
lcall
sti
rcrl
aam
inc
mov
push
cmp
mov
imul
in
insb
cmp
push
ds
mov
xchg
pushf
ret
jnp
pop
xchg
mov
stos
inc
lret
sub
mov
mov
lea
lock
dec
jbe
sub
mov
or
nop
xor
cs
nop
jge
xor
fmull
sbb
sarb
sahf
arpl
testl
das
inc
mov
and
xchg
inc
test
bndstx
adc
loop
clc
pop
push
dec
pushf
sbb
imul
dec
adc
nop
xor
jp
icebp
mov
ds
je
int3
rolb
in
dec
movsb
daa
mov
push
jbe
inc
shl
sub
movsb
cs
movsl
imul
xchg
gs
fsubrl
loop
mov
insl
mov
test
inc
int
mov
lds
movl
icebp
lahf
dec
lret
sbb
sbb
sarb
pop
addl
cld
cmpsb
out
sbb
bound
out
push
xchg
and
ss
jl
bound
out
add
sbb
loope
test
andb
or
jle
inc
loop
pop
notb
fwait
imul
std
or
test
popa
and
sbb
cmp
jo
shll
mov
mov
mov
lds
mov
cld
inc
out
iret
inc
sbb
or
dec
push
sub
xchg
mov
rclb
push
fxch
cmp
pop
push
jno
mov
xor
sub
mov
loopne
jecxz
loopne
jp
adc
add
aaa
pop
xor
cmp
mov
popf
xor
cmp
xor
or
sub
pop
repnz
adc
cmp
cmp
pop
jecxz
push
cmpb
inc
mov
add
adc
or
dec
imul
imul
sub
iret
mov
sub
jns
stc
andl
cmpsb
xorb
pop
loop
int3
in
fadd
mov
push
pushf
jb
xchg
in
scas
pop
addr16
sub
movsl
scas
cltd
sub
mov
pop
shlb
pop
ficoms
test
pop
sti
push
jmp
pop
add
jmp
mov
lods
stc
pushf
jno
in
imul
and
repnz
call
xchg
je
movsl
call
pop
cld
jnp
and
int3
mov
sub
aad
and
cmp
into
xor
loope
jmp
call
aam
adc
lcall
sbb
cltd
or
xor
pop
call
loope
xchg
lahf
jecxz
jp
cld
inc
jmp
dec
pusha
lcall
imul
push
jle
shr
mov
std
jl
mov
cmpsl
xchg
and
loop
jmp
fiadds
xchg
xorb
jle
xchg
rclb
mov
shl
mov
jle
out
pop
xlat
mov
stos
icebp
cmp
mov
xchg
ja
repz
cmc
xor
cmpsl
mov
lods
fdivp
xchg
jmp
pop
add
mov
jne
push
fmull
lgs
and
mov
jmp
sub
cmp
loopne
push
adc
cmc
sbb
aad
in
fs
or
and
xor
mov
stos
insb
ss
and
rolb
jg
mov
cs
sahf
cmpsl
mov
xor
mov
pop
pushf
loop
pusha
mov
pop
out
push
xchg
xor
inc
ljmp
imul
cwtl
scas
insl
cmp
add
ja
cmp
leave
mov
fidivl
xchg
or
mov
or
jg
adc
fidivl
mov
icebp
ret
push
inc
lods
xchg
mov
add
in
inc
mov
rclb
repz
addr16
dec
shlb
arpl
mov
mov
sbb
xor
pop
clc
fucomi
or
push
xchg
cli
or
fcmovb
pop
inc
inc
inc
xor
cmp
jb
push
jbe
hlt
sub
jae
jmp
jnp
mov
cmpsb
push
xchg
dec
out
mov
push
in
lods
out
bound
int
sti
rcrb
jmp
mov
push
sbb
ss
sbb
mov
mov
add
dec
scas
pop
adc
xchg
std
jnp
mov
add
and
or
mov
xor
adc
sbb
call
std
in
mulb
mov
aaa
addr16
xchg
rolb
adc
add
cmp
inc
shufps
jge
xor
push
pushf
pop
ret
outsl
dec
ret
cmp
jo
push
out
in
jmp
xor
adc
fwait
jecxz
push
or
int3
pop
adc
xor
mov
add
call
es
cltd
adc
fildll
push
jecxz
lods
mov
pop
push
jo
mov
inc
push
ds
adc
jg
jo
incb
in
mov
mov
es
inc
mov
outsb
add
cmpsb
or
or
out
inc
arpl
out
pop
mov
repnz
fldt
fidivl
cli
outsl
pop
imul
push
cmp
inc
cmp
dec
pop
mov
xchg
pop
dec
test
cmp
cmp
push
aam
ss
push
cmp
mov
push
cs
dec
dec
pop
xchg
jnp
cmp
xor
mov
push
mov
xor
clc
inc
mov
into
loopne
jno
in
xchg
lcall
xchg
in
lods
je
mov
loop
dec
fisubs
jmp
cmpsl
imul
pop
jnp
cltd
jno
push
cmpsl
inc
pop
sahf
mov
arpl
pop
mov
out
ds
dec
push
lcall
and
js
addr16
cmp
jbe
addr16
ficomps
pushf
adc
xor
in
movsb
stos
outsl
dec
cmp
mov
out
out
inc
pushf
mov
or
out
jg
stos
mov
adc
stc
cld
add
test
orl
mov
pop
mov
push
jmp
dec
xor
fildll
leave
enter
push
ljmp
test
out
and
dec
loopne
sbb
lods
push
jno
ret
or
pop
push
sub
out
rclb
fldcw
xlat
xlat
push
xchg
sub
mov
pop
ficoms
dec
and
xchg
cmc
and
mov
mov
sub
and
lcall
ja,pt
daa
and
je
jno
add
lock
xchg
cld
mov
jecxz
cltd
out
add
mov
cmpsl
pop
es
int3
aam
jle
pop
in
mov
int
pushf
mulb
iret
dec
xor
negb
and
push
stc
int3
mov
and
xor
imul
jne
filds
cmc
xor
icebp
leave
inc
ja
in
xor
mov
addr16
pushf
push
pop
push
cmp
push
aaa
mov
aam
ds
add
pop
cmpsl
jmp
stc
imull
movsl
es
lock
sub
adc
leave
mov
ja
outsb
xchg
in
sbb
out
lcall
xchg
daa
push
test
jle
repnz
jbe
add
and
aaa
in
mov
xlat
cwtl
imul
xor
pop
leave
cld
pop
jl
and
dec
xor
test
and
lods
in
fmuls
push
add
sbb
outsl
repnz
imul
adc
cli
mov
and
prefetch
sbb
jle
fidivs
jecxz
int
mov
lcall
mov
inc
inc
xor
mull
fwait
aad
jecxz
adc
out
mov
mov
mov
je
stos
adc
mov
ds
jno
jnp
out
push
repnz
mov
mov
iret
jl
js
pop
pop
push
lods
call
mov
sub
xor
lea
mov
ret
and
and
pop
sbb
outsl
hlt
jo
push
jbe
mov
in
push
pop
push
dec
aas
addr16
pop
pushf
aaa
daa
xor
enter
xchg
pop
mov
jge
movsl
hlt
mov
xchg
jp
xor
jo
insb
popf
xor
lods
sub
push
clc
or
aad
outsb
and
push
pop
mov
sbb
push
jge
inc
dec
divb
mov
dec
or
inc
outsl
loope
cmp
bound
add
cmp
icebp
enter
pop
sti
hlt
adcl
push
aam
mov
dec
pop
pop
dec
mov
add
addr16
das
add
pop
inc
jecxz
xchg
outsb
cmpsb
pop
out
xchg
orb
pop
cwtl
cmpsl
popf
out
test
add
mov
xchg
sub
or
in
mov
cmp
and
pop
cwtl
aam
jnp
jnp
outsl
sbb
pop
lea
adc
inc
ss
push
aam
fisttpl
mov
out
xlat
push
jbe
dec
jecxz
dec
dec
cwtl
pop
imul
xchg
in
add
test
inc
fldl
std
inc
pop
pop
dec
add
xlat
movsb
int
cmove
test
push
jmp
sbb
fcmovne
push
and
test
popf
jecxz
xchg
fnstenv
pop
arpl
aad
adcl
cmp
dec
loope
mov
nop
xor
mov
daa
mov
ljmp
pop
shll
or
jnp
mov
add
adc
sbb
shlb
das
sti
icebp
repnz
push
sbb
je
jnp
das
pop
es
add
fidivl
push
dec
cmpsb
push
xchg
dec
repnz
push
mov
jne
cltd
add
sbb
orb
mov
sub
jl
sbb
test
xchg
jb
lahf
mov
loopne
mov
scas
aam
sti
insl
test
outsl
xor
clc
lock
xor
mov
scas
in
rol
movl
sub
xor
shrl
scas
pop
sysexit
xor
rorl
ljmp
cmp
pushf
aad
sub
jp
mov
fldcw
int3
arpl
inc
mov
xor
mov
and
add
mov
ja
icebp
call
pop
mov
loope
in
mov
scas
test
mov
xchg
loopne
lcall
movsb
jno
int
rcrl
outsl
loop
xor
stos
cmpsb
jb
push
mov
or
popf
fistpl
jns
ja
pop
adc
xchg
fst
sbb
std
nop
stc
mov
nop
and
ds
jno
cltd
sbb
xor
and
jge
push
lods
cld
adc
dec
ds
jo
lret
xchg
mov
pop
cmpsl
push
xor
sarb
lods
fstpl
sbb
outsb
xor
test
mov
sub
mov
ret
and
fnsetpm(287
mov
lret
enter
mov
cs
ljmp
inc
push
les
loopne
mov
sub
pop
lcall
ret
out
dec
push
in
xchg
fdivl
push
repnz
addr16
scas
and
stos
neg
cmpsb
mov
pop
or
hlt
aad
pusha
cmpsl
or
push
into
push
mov
xlat
or
pop
and
or
or
jbe
and
pop
jo
adcb
fstpt
out
pop
mov
outsb
movsl
mov
sbbb
imul
bound
imul
xlat
movb
enter
into
push
out
ret
xchg
pop
xor
jge
jecxz
mov
scas
mov
inc
or
inc
fidivs
movsl
xor
pop
and
aaa
push
mov
test
fstpt
push
inc
dec
cmp
leave
cmc
movsl
mov
add
mov
and
aaa
push
dec
adcb
sbb
cmpsb
xchg
mov
xchg
pushf
call
mov
or
fsubl
hlt
idiv
sbb
or
jmp
ljmp
push
pop
inc
aad
cmpsb
push
xor
push
out
insb
add
mov
and
mov
or
inc
inc
pop
sbb
in
mov
inc
push
add
cmp
jle
and
sbb
or
stc
pop
jo
push
negb
int3
push
dec
or
cmp
pop
mov
and
jp
arpl
cmp
jp
lods
insl
test
sbb
sub
in
jne
sub
faddl
adc
iret
jl
cmp
pop
rorl
jge
cmp
repz
cmp
adcl
inc
and
or
mov
push
push
test
jecxz
cmp
scas
inc
mov
lret
sbb
in
popf
xor
mov
dec
lods
stos
repz
inc
lods
pop
pop
fstl
cmp
aam
iret
mov
jnp
lret
add
icebp
lods
mov
aam
jge
pop
addr16
iret
cli
and
mov
push
test
sub
sarl
mov
push
sbb
mov
xlat
cmp
loop
repz
cwtl
add
outsb
enter
test
aad
ds
lods
imul
in
jmp
pop
dec
aam
loop
loop
fadds
push
cmp
cltd
adc
xchg
notb
leave
add
ret
xchg
pushf
lock
scas
lds
and
pop
outsb
mov
xchg
mov
hlt
fdiv
psubsw
addr16
sahf
add
stos
mov
inc
movsl
out
repz
out
stos
lahf
dec
ljmp
fdivs
cs
cli
js
mov
ljmp
cmp
push
mov
and
movsb
push
mov
fwait
xchg
pop
add
cwtl
sbb
dec
xor
mov
icebp
jmp
lret
push
enter
es
jecxz
lahf
xor
jle
adc
jo
fxch
aas
out
jne
jmp
push
mov
lods
cs
xor
xor
fucom
sub
pop
mov
xlat
inc
xor
ret
pop
shlb
aad
xchg
hlt
jecxz
nop
dec
icebp
sbb
les
and
and
bound
push
scas
jg
out
cmp
inc
jns
cmc
inc
mov
xor
jecxz
movsb
xor
jmp
sub
sti
cmp
vpsrldq
out
aas
fcoms
add
cmpb
bound
jns
adc
xor
mov
push
stc
push
pop
sub
and
lahf
fwait
add
loopne
xchg
add
subl
pop
pushf
or
jbe
pop
and
mov
and
int
mov
ljmp
xchg
add
fldt
or
push
sub
push
add
scas
cltd
xor
sahf
dec
cli
pop
cltd
pop
leave
sbb
js
movsl
mov
daa
sub
push
xchg
into
adc
push
loope
in
fs
push
xor
int3
imul
ljmp
xor
xor
xchg
clc
punpcklbw
cmp
imul
data16
dec
xchg
adc
stc
lahf
or
push
cmp
cmp
or
ret
jns
mov
out
push
nop
ja
aas
inc
dec
scas
enter
je
stc
movzbl
mov
mov
nop
call
and
je
xor
push
nop
jmp
push
iret
js
xchg
sahf
sub
mov
sbb
testl
mov
das
out
fwait
jns,pt
pop
or
clc
scas
sar
pop
je
jno
pop
mov
and
cli
gs
mov
int3
dec
outsb
add
add
sub
push
cmp
or
mov
or
sti
push
inc
jle
mov
test
out
push
jno
or
pop
in
and
or
lcall
push
sahf
fisttps
mov
shll
leave
call
or
dec
pop
inc
cmpsl
adc
je
loopnew
xor
or
fdivl
or
push
xor
lock
add
xor
aaa
movsb
loop
pop
cmpsl
cmp
jge
fcmovne
dec
nop
loopne
push
mov
std
cmpsb
adc
aad
inc
pop
jae
mov
or
cmpsl
push
cmpsb
jl
mov
ds
movsl
shrb
and
lods
fisubl
test
pop
xchg
es
mov
ret
das
mov
xor
int3
jbe
and
insl
out
lock
data16
cmpl
jo
outsb
repz
hlt
mov
ficoml
jmp
xchg
xor
jo
jns
lods
jo
cmp
dec
sbb
inc
jle
cmpsl
repz
scas
sub
cmp
fldl
and
dec
imul
or
mov
add
adc
jb
fmull
cs
inc
into
nop
xchg
shll
bound
xchg
das
pop
add
fstl
aam
dec
fs
insl
roll
jbe
push
mov
repz
cmc
shr
push
xchg
pop
and
pop
js
in
int3
adc
or
out
js
addr16
fistpll
scas
fists
imul
mov
int
fs
popa
or
movsb
push
sar
fidivs
das
jge
in
pop
int3
cmp
daa
lcall
push
cmpsb
mov
int3
loop,pt
pop
pop
xor
dec
jge
js
sbbb
aad
in
inc
or
xor
xor
xchg
aam
jle
pop
fnstcw
fsubl
mov
xchg
popa
lcall
add
imul
sahf
push
jmp
inc
outsb
loop
ljmp
icebp
pop
repz
je
cmp
scas
fidivrl
sub
ficomps
push
and
xor
or
repz
mov
mov
inc
xor
popa
sub
push
xor
xor
inc
mov
pop
add
in
std
shl
xor
enter
sub
sub
icebp
enter
push
pop
cmp
addr16
and
out
jne
pop
mov
cld
scas
sbb
mov
lods
mov
push
mov
cmp
and
sub
jb
mov
mov
pop
aas
bound
aas
mov
jne
xchg
mov
add
ret
dec
xchg
xchg
xchg
sbbl
lret
not
repz
das
imul
cmp
adc
jl
mov
xchg
or
sub
xor
int
test
add
das
bound
sub
mov
fiaddl
and
mov
outsb
mov
pslld
push
ret
popf
pop
xchg
push
xchg
xor
out
sbb
hlt
mov
imul
sti
movsl
shrl
jl
shll
inc
cmp
lods
and
dec
ficomps
or
outsl
adc
add
mov
pop
nop
je
subb
pop
addb
in
fsubs
popa
or
cmp
ja
sbb
jmp
mov
dec
add
call
push
cmp
outsl
dec
cmc
mov
jg
push
cmp
inc
adc
sbb
mov
pop
jo
jmp
adc
leave
call
push
xchg
in
gs
mov
xor
adc
clc
dec
test
mov
jecxz
sbb
minps
addr16
push
jmp
insb
or
dec
or
sbbb
rorl
mov
mov
jb
mov
sub
dec
scas
pop
cmp
leave
and
scas
rolb
xchg
popf
dec
push
lds
dec
movsl
rolb
add
inc
cmp
insl
fsubl
out
scas
cmp
movsl
loopne
stc
xchg
movsb
ret
test
xchg
mov
push
pop
loopne
outsb
out
mov
fists
scas
lret
shlb
sbb
or
insl
dec
and
inc
sbb
push
mov
xchg
insb
push
stc
pop
lcall
mov
repnz
sbb
addb
sub
sub
aad
popa
sbb
adc
dec
jmp
std
rorl
sbb
mov
xchg
lock
or
stos
fs
outsb
pop
xor
or
xor
or
out
sbb
xor
js
jl
pop
or
into
and
gs
cmpsb
mov
gs
or
daa
test
cmpb
inc
cli
inc
jnp
or
sub
test
loope
dec
xchg
sub
iret
sub
mov
sbb
lock
dec
repz
sbb
dec
dec
adc
movsb
xchg
push
sub
jmp
bound
mov
popa
push
fldt
paddsw
sub
repz
outsb
outsl
mov
mov
cli
jle
jnp
xor
or
stos
call
aas
pop
pop
stos
aas
nop
iret
jge
imull
and
ja
imul
jne
test
dec
scas
movb
cmpb
stos
fnsave
in
mov
testl
data16
inc
jg
and
cmp
mov
jg
dec
lcall
lds
sbb
addr16
xor
pop
xchg
add
sti
data16
xor
fisubrs
inc
xor
mov
pop
xchg
inc
inc
dec
mov
push
sar
jo
sub
fisubrs
fwait
lea
enter
push
xor
pop
mov
sti
mov
test
arpl
add
push
mov
loop
push
movsl
cwtl
push
rclb
jg
jno
add
push
mov
and
adc
or
sbb
imul
xchg
lock
mov
loopne
imul
stos
es
mov
das
clc
mov
adc
jne
dec
xchg
mov
test
xor
jae
das
dec
cmp
push
mov
add
push
jge
outsl
xor
sbb
sbb
call
jmp
push
dec
pop
xchg
aam
pop
or
rcr
push
push
add
dec
lcall
sahf
jb
inc
inc
les
push
mov
and
xlat
gs
push
aaa
add
mov
ds
cli
orb
fwait
rcrb
movsl
pop
rcrb
fs
jbe
add
arpl
xor
aad
loope
sbbb
hlt
or
push
xor
jp
sbb
jbe
jo
pop
icebp
mov
pop
jns
mov
rcr
inc
xchg
mov
dec
fmull
xchg
or
sub
les
sbb
add
mov
cmc
mov
mov
mov
push
jmp
mov
rcl
in
shll
ret
shll
pushf
xchg
mov
add
pop
cld
pop
jbe
adc
ret
mov
ret
test
jg
jb
adc
cmpsb
and
pushf
pop
into
jbe
test
xlat
movsl
pop
lods
mov
adc
std
xchg
jle
arpl
inc
repz
mov
stos
call
cwtl
inc
cld
mov
cltd
leave
add
sbb
cwtl
aad
jbe
nopl
push
test
popf
and
popa
outsb
in
push
inc
shll
mov
adc
mov
push
or
clc
ret
out
dec
fwait
test
mov
sub
icebp
xchg
imull
nop
gs
or
mov
push
xchg
and
mov
inc
repnz
and
imul
push
inc
and
aaa
mov
mov
shll
in
hlt
imul
divl
jl
jmp
jl
and
mov
imul
push
mov
add
shlb
cs
mov
inc
rclb
rorb
daa
mov
push
fisubs
sbb
cs
add
jge
jo
adc
test
in
or
test
pop
testb
aaa
mov
jp
sbb
push
pop
add
in
stos
cli
xchg
pop
call
xchg
mov
dec
jle
cli
or
inc
pusha
inc
push
xchg
add
dec
lds
sbb
enter
hlt
xchg
ds
enter
int
popf
fwait
shll
push
jbe
pop
cmp
cmp
xor
ja
idivb
inc
cmp
cmp
out
adc
dec
cmp
mov
popa
pop
fnstenv
shl
insb
push
mov
mov
bound
sub
fs
xor
movsl
in
orl
mov
flds
pop
or
insl
mov
adc
inc
int
in
mov
xlat
bound
insb
shlb
inc
sub
add
pop
mov
cmpsb
cwtl
xchg
popa
sub
or
mov
or
adc
inc
cld
lods
inc
pop
and
jnp
jge
sub
jb
dec
mov
pushf
mov
add
push
stc
inc
das
mov
inc
or
or
stc
stos
jo
test
push
pop
loop
mov
ja
push
loope
xchg
imul
repnz
push
jbe
scas
ret
mov
aas
xchg
cltd
cld
mov
dec
test
jg
add
cmpsl
js
inc
mov
xchg
loopne
lods
lcall
mov
or
lds
inc
in
int3
adc
push
dec
mov
dec
and
mov
pop
xchg
fadds
and
test
cmc
or
dec
dec
jmp
aad
cmp
es
or
subl
lods
jmp
xlat
je
lcall
xchg
lcall
or
adc
adc
stc
add
xchg
push
pop
in
stos
dec
pop
fcmove
jne
testl
movsb
jmp
xor
inc
xchg
jecxz
jo
xor
out
jmp
stc
dec
inc
xlat
stos
sbb
mov
sbb
jae
jle
mov
scas
jmp
xchg
scas
fs
test
in
sbb
iret
mov
push
jnp
xchg
pop
orl
movsb
je
mov
ret
pop
mov
jbe
fmuls
mov
sti
das
mov
add
xchg
mov
inc
rclb
mov
pop
jl
cmpsl
jb
into
mov
cmp
pop
mov
sub
ds
fwait
mov
addr16
in
cmpsb
cli
mov
xor
sbb
cmc
inc
ja
int3
or
ret
int3
ret
hlt
lea
ja
fcmovnu
push
into
mov
or
adc
xchg
sti
adc
inc
xchg
xchg
lods
sub
repz
data16
fidivl
xchg
fs
xor
xchg
js
push
les
cs
or
sbb
xchg
test
sub
fldl
inc
loopne
jl
inc
fisubrs
mov
or
out
push
nop
cmp
pushf
nop
inc
xchg
cld
loope
mov
adc
leave
add
into
or
xor
leave
and
pusha
sub
cmpsl
add
es
jge
out
or
aas
jl
fidivs
pop
mov
push
sbb
adc
lods
repnz
cmp
into
out
cltd
sti
sbb
adc
stos
sbb
aas
or
sbb
jp
dec
mov
popa
faddl
loopne
pop
mov
push
ds
mov
into
lods
add
mov
dec
add
jae
je
push
idivl
sbb
xor
xchg
sbb
inc
xor
mov
push
int3
pop
jno
shlb
xchg
stos
ror
push
popf
out
sbb
push
pusha
cmc
adc
inc
lahf
clc
cld
inc
add
fadds
add
mov
mov
sahf
dec
loop
cmc
loop
pop
push
mov
fwait
add
loopne
in
pop
cmp
mov
xor
and
pop
cmp
dec
jne
xor
out
push
dec
mov
loopne
loop
pop
sbb
inc
dec
jbe
mov
xor
aas
xchg
xchg
push
mov
imul
mov
dec
pusha
pop
inc
jae
cmc
jbe
cmp
imul
arpl
xchg
lret
jo
scas
mov
xchg
lret
out
mov
fdivrs
adc
xor
mov
inc
jl
push
fstpl
stos
lock
fidivs
mov
sbb
add
pop
arpl
xor
icebp
pop
shrl
inc
fsubr
xchg
and
pusha
pop
adc
cmp
jp
ret
xchg
inc
mov
sbb
dec
cmp
and
js
mov
ds
adc
test
fwait
xchg
jmp
test
clc
cmc
jae
popa
pop
push
push
mov
in
pop
sub
rolb
outsb
sti
and
out
test
add
dec
lock
cmp
mov
xchg
ds
ficoml
push
jbe
andb
test
stos
add
adc
lcall
ja
imul
rcll
clc
and
shlb
call
nop
lods
or
fnstcw
es
bound
shlb
repz
das
jb
push
andb
mov
pop
in
jae
dec
sub
fcomps
fs
imul
das
cmpsb
in
das
pop
rolb
dec
enter
mov
dec
clc
iret
push
mov
push
sbb
stos
fidivl
test
int3
xor
out
ret
push
adc
and
mov
and
ljmp
dec
stc
cmpl
mov
sbb
cmp
in
jne
es
cld
mov
enter
cmp
xchg
bound
shlb
cwtl
or
push
testl
fmull
fbld
stos
sub
idivl
mov
xchg
fucomp
jnp
mov
rclb
pusha
test
or
sub
add
fimuls
pop
dec
adc
sub
gs
loopne
mov
push
jle
and
lret
add
push
pop
cwtl
cli
cmp
movsb
in
shl
mov
icebp
xchg
xchg
dec
es
mov
and
and
mov
and
xchg
ret
xor
ljmp
or
xor
jg
into
xor
outsl
test
mov
cwtl
lods
rolb
sub
lret
or
pop
mov
in
lea
cmpsl
loope
aaa
push
or
call
icebp
adc
mov
xchg
inc
xor
in
cltd
inc
pop
jle
add
cli
jg
adcb
cmp
into
adc
mov
sahf
or
sbb
ret
arpl
dec
xchg
dec
mov
xor
out
adc
pop
std
adc
outsb
mov
shr
jp
mov
aaa
mov
jns
mov
cmp
push
shrb
int3
push
dec
mov
testl
mov
shlb
shrd
and
pop
std
mov
gs
ficomps
mov
in
xchg
clc
out
push
bnd
inc
push
out
lock
pop
leave
jecxz
icebp
xor
daa
and
popf
mov
mov
mov
test
push
xor
fcmovnbe
sbb
es
mov
and
mov
shll
inc
sub
ljmp
dec
subl
sub
and
nop
sbb
lods
or
push
lret
xchg
cmp
jle
rcrl
sar
pop
sarl
sub
dec
hlt
dec
arpl
int
pop
scas
adc
sub
outsb
das
or
insl
ret
push
sbb
daa
call
adc
cmpsl
inc
push
cmp
cmp
sub
lea
vrcpss
xor
rcll
bound
add
data16
adc
stos
jno
push
ret
pop
ja
imul
xchg
jg
rcll
push
inc
jb
call
call
pop
push
sarl
pop
dec
sbb
lcall
push
push
lret
jecxz
jbe
scas
mov
out
add
jmp
or
xchg
stos
push
pop
cmpsl
bound
adc
out
mov
bound
fnsave
or
pop
loope
push
xor
jl
out
ss
push
xchg
xchg
pop
pop
scas
mov
lds
dec
pop
or
into
sub
cli
push
fistps
or
xchg
orl
xchg
cld
push
test
cmc
xchg
movsb
push
and
adc
mov
clc
es
je
repz
cmpsl
push
loop
scas
jno
dec
push
outsl
sub
cs
test
test
popf
pop
pop
pop
insb
or
das
xchg
mov
add
xor
pop
inc
sub
jo
adc
jb
mov
pop
jp
inc
xchg
jecxz
mov
fcmovbe
xchg
lcall
out
xchg
daa
fwait
jl
jo
add
in
inc
push
loopne
mov
and
loopne
pusha
adc
pop
iret
add
sbb
inc
stos
lock
xchg
jbe
mov
mov
loop
sti
stos
sub
inc
mov
sub
addr16
adc
popa
mov
inc
aaa
fsubr
std
sub
ljmp
adc
xchg
add
rol
pushf
hlt
sahf
sahf
cmp
jmp
sarl
inc
fiaddl
leave
addr16
pop
mov
sarb
daa
jne
lods
gs
jne
xor
push
or
adc
dec
mov
fildll
mov
and
jb
mov
sbb
enter
pushf
das
and
xlat
test
sbb
jecxz
sub
xchg
pushf
xchg
jnp
outsl
cmp
sbb
fxam
fimull
lds
xchg
push
xchg
mov
gs
mov
or
push
imul
popf
hlt
jne
sbb
mov
js
repz
dec
jnp
mov
jbe
pop
push
cmp
xor
jp
add
mov
ficoms
adc
jmp
mov
inc
and
pop
hlt
add
das
xlat
outsb
pusha
jl
adc
pop
mov
daa
or
jp
push
mov
hlt
sbb
xor
imulb
adc
xchg
dec
mov
loopne
dec
xchg
push
dec
aam
and
add
imul
sbbb
jbe
mov
jp
pop
and
dec
or
dec
inc
dec
ja
mov
movlps
test
jbe
cmpsl
adc
rol
or
cmpsb
lds
stc
fdivs
dec
cld
inc
mov
lcall
add
test
push
leave
mov
mov
and
mov
add
out
sbb
mov
push
lret
call
inc
mov
lods
cmp
inc
mov
add
sbb
out
mov
push
jecxz
loopne
int3
aaa
cmp
neg
out
repnz
mov
and
imul
pop
add
rorl
xor
push
dec
dec
push
sbb
fcmovbe
jp
jno
sbb
je
mov
orl
cld
fs
enter
insb
and
sub
jne
iret
sbbb
fildl
push
adc
out
mov
pushf
or
sbb
popf
shll
push
pushf
add
call
pop
add
shrb
pop
jge
pop
shlb
mov
insb
fdiv
mov
jecxz
adc
jae
xchg
push
mov
adc
inc
push
jp
ret
add
mov
mov
adc
inc
push
or
xchg
push
stos
pop
addr16
inc
xor
dec
pop
or
inc
dec
push
out
pop
add
scas
push
jne
jo
sub
push
imul
xchg
test
mov
add
and
inc
hlt
shlb
icebp
adcl
jp
sub
xchg
mov
lods
pop
aaa
mov
lods
in
dec
ret
sbb
and
scas
xor
push
dec
in
add
and
push
in
push
xchg
xor
adc
ja
frstor
push
dec
xchg
pop
rorb
lret
lret
xor
mov
data16
mov
add
sahf
mov
jl
in
in
lret
mov
sti
mov
cmc
call
jmp
idiv
nop
jnp
std
jbe
sub
ss
pushf
add
sub
mov
sub
in
and
sarb
sbb
cmp
mov
int3
nop
push
mov
cwtl
adc
xchg
adc
out
xchg
and
push
and
adc
xor
dec
cmpsl
testl
push
lods
sbb
mov
pop
mov
lds
repz
push
push
aaa
cs
mov
or
mov
dec
scas
insb
mov
ljmp
pop
fistpl
inc
xor
adc
cmc
aam
mov
cld
and
xor
sarb
mov
push
jo
mov
iret
mov
inc
cmp
lds
lods
cmp
testl
or
xor
push
sub
fcoms
cmpsl
rclb
xor
notb
jno
dec
movsb
jle
add
xchg
jle
push
mov
inc
push
jge
xchg
sub
push
int3
lahf
sahf
jb
lcall
repnz
jo
fwait
jp
into
loopne
cmp
test
shr
inc
daa
cli
fidivs
fisubrl
ret
enter
scas
imul
cmp
leave
mov
jp
add
call
or
repnz
insb
orb
enter
xor
push
pop
or
loope
and
inc
jmp
inc
push
sti
out
fisubl
adcb
mov
lahf
mov
add
push
adc
sub
pop
mov
hlt
and
rclb
ja
push
and
jns
imul
jmp
mov
mov
fmull
dec
push
xchg
adc
cwtl
xchg
into
icebp
lahf
out
fsubl
push
xlat
mul
icebp
xor
mov
bound
ja
mov
es
push
xor
ja
xor
lods
and
test
bound
adc
add
adc
pop
mov
jae
pop
jb
push
pop
sbb
aaa
je
out
jmp
dec
inc
push
mov
mov
jne
adc
or
daa
imul
inc
cmp
adc
dec
repz
ficoms
adc
in
imul
mov
es
loope
adc
aad
or
inc
je
es
mov
jo
or
mov
pop
sbb
mov
sbb
out
xchg
inc
jb
shll
add
movsl
aam
pop
add
dec
adc
sbb
push
xchg
jae
push
xchg
mov
dec
into
imul
iret
inc
fdivs
gs
lock
adc
stos
popa
sub
popf
xor
push
xchg
gs
outsb
pop
ret
and
and
adc
xchg
mov
outsl
or
fiadds
nop
jp
jae
stos
add
fwait
dec
mov
loope
fidivs
and
fnsave
jecxz
hlt
cmpsb
lods
xor
or
pop
xor
test
test
lock
mov
xchg
sbb
addr16
lods
lock
loopne
scas
divl
mov
arpl
pop
inc
mov
test
fcom
mov
scas
jbe
mov
add
out
lea
iret
scas
lock
ret
pop
jg
aas
loope
fwait
out
jmp
fdiv
imul
stos
cmp
fwait
loop
in
jno
xchg
jbe
sub
jl,pt
add
adc
cmp
inc
push
lods
pop
scas
lcall
ds
in
lahf
pop
lods
int
mov
and
out
xor
cmp
fcoms
inc
or
fidivrs
and
mov
sub
inc
adc
rcr
xor
xor
stos
fistps
daa
mov
cld
je
aaa
leave
and
loope
addl
mov
cmp
decb
sarl
jo
jl
inc
sbb
pop
cmpsl
scas
rcr
stos
iret
push
ja
push
iret
mov
and
outsb
das
push
adc
jge
push
mov
daa
js
mov
scas
test
jae
dec
scas
and
je
dec
imul
lea
jl
movsl
mov
jg
fs
or
sub
xor
ret
push
push
mull
inc
dec
in
dec
dec
sbb
cmpsl
in
hlt
rolb
pop
movsb
ret
jns
pop
inc
aaa
sti
cltd
or
in
sbb
dec
jnp
pop
jl
lcall
add
cmp
lret
gs
push
cli
inc
pop
push
jne
scas
pop
mov
imul
and
out
in
xor
inc
scas
xlat
jnp
lods
pop
xor
push
clc
scas
mov
fdivl
aam
inc
adc
jge
xor
hlt
mov
in
or
inc
xor
pop
jp
jne
filds
xlat
jge
das
jno
sub
data16
dec
out
jo
rcrl
add
sub
mov
mov
jne
or
popf
push
mov
fs
jl,pt
pop
movsl
mov
push
xor
mov
ret
sbb
or
imul
int
mov
sub
jecxz
ss
cmpl
mov
push
xchg
sbb
pop
insl
xchg
push
pop
xchg
jmp
or
addr16
mov
sti
maskmovq
negl
push
mov
enter
popf
and
mov
inc
inc
outsb
andl
jg
or
xchg
stos
sub
xchg
stc
pushf
and
inc
into
xor
lds
adc
int
repz
stc
mov
sbb
mov
sbb
leave
lods
fbstp
cmp
sub
test
hlt
xchg
cmc
cwtl
or
loopne
ss
jae
push
ret
inc
rcrl
adcl
orl
fbld
pop
lea
repz
dec
repz
stos
inc
rolb
push
test
ftst
stos
mov
lret
mov
shrb
dec
loopne
pusha
mov
or
out
loope
in
jmp
xchg
mov
push
std
xchg
inc
lods
cmc
cmp
cli
in
push
cmp
pop
add
fisubl
mov
and
pusha
pop
movsl
jl
out
add
mov
icebp
cld
jbe
xor
add
push
fwait
ja
pop
xor
xlat
call
mov
in
cltd
lds
lods
mov
js
add
adc
repz
cmp
mov
clc
bound
stc
mov
cs
pop
jg
lock
mov
lahf
mov
jl
lret
mov
out
xchg
je
out
mov
inc
test
icebp
cmp
daa
lea
jl
std
les
arpl
insb
and
or
pop
pop
mov
movsb
sub
mov
add
ss
cmp
lods
cmp
jno
fldenv
testb
and
out
shlb
cmpb
repz
addr16
mov
or
or
in
dec
sbb
sbb
or
inc
pop
jae
out
cmc
and
lock
cmc
pop
and
and
cmp
in
ljmp
pop
sti
sbb
mov
sub
gs
inc
icebp
scas
shll
pop
push
rcr
push
mov
push
and
add
imul
jo
dec
cmp
pusha
leave
jne
je
xchg
iret
imul
xor
or
inc
jmp
push
push
mov
xor
or
imul
cmp
pop
outsb
lock
xchg
adc
pop
and
lock
movsl
dec
addr16
xchg
mov
lods
std
adc
cli
push
insl
and
shrb
cmp
iret
and
dec
sub
xchg
jge
mov
mov
into
add
push
divb
je
add
dec
and
pushf
jmp
and
sti
dec
pushf
les
das
aas
push
mulb
and
cs
mov
mov
mov
lahf
rcrb
xchg
iret
sahf
add
fcmovbe
push
cmp
sti
or
inc
xchg
cmp
inc
insl
outsb
jecxz
pop
cld
xor
push
add
iret
cmp
inc
rolb
arpl
mov
pop
sarb
push
mov
dec
inc
mov
negl
xorb
push
in
movsb
and
push
pop
movsb
nop
push
and
rorb
push
lret
jmp
mov
pushf
sub
mov
mov
cmp
in
cwtl
cmpsb
lcall
lcall
hlt
xchg
sarb
jg
jno
adc
sub
test
dec
cwtl
arpl
cld
popa
stos
mov
js
subl
dec
and
in
ljmp
or
movsb
jbe
lods
leave
mov
cmp
pop
imul
xor
nop
imul
push
stos
push
sbb
in
cmc
outsb
xchg
mov
decl
xchg
in
addl
xor
xor
cmpsl
pushf
sbb
out
mov
cmp
shll
mov
mov
sbb
dec
lret
pusha
mov
pop
or
popa
xor
sti
sbb
jecxz
sbb
mov
cmp
and
mov
dec
or
jne
fidivrl
pop
xlat
lret
xchg
arpl
les
mov
xor
and
iret
sub
mov
mov
xor
and
fstps
iret
mov
icebp
cltd
jl
or
xchg
cmp
and
fisubrl
pop
rolb
xchg
push
aad
mov
lods
dec
push
repz
mov
popf
cmp
inc
cmp
or
inc
filds
push
movsl
cmpl
inc
push
inc
sub
sbb
pop
movsl
hlt
or
in
jb,pn
mov
scas
push
fiaddl
cmp
in
rclb
fs
pop
sub
hlt
loop
in
mov
stc
mov
jmp
popa
in
out
push
in
push
js
xor
stc
xchg
mov
sbbb
fisttpll
jge
mov
movsb
pop
and
xchg
scas
test
push
mov
add
or
mov
push
movsb
int3
movsb
cmp
dec
push
mov
pop
add
jg
out
sbb
flds
mov
xor
sahf
fs
cld
test
int3
xchg
jmp
loopne
xlat
jae
daa
inc
jbe
push
fildll
jb
mov
nop
xchg
fistl
int
scas
testl
jno
les
cmpsl
imul
xor
repz
shll
jbe
ds
inc
pop
adc
aad
cld
aam
xchg
js
outsl
fmulp
mov
sub
jb
push
cli
dec
xor
pop
xor
jle
lcall
das
fildl
jecxz
push
sbb
xor
add
outsb
ljmp
inc
xchg
testl
mull
lahf
jne
mov
insb
btc
fcoml
outsl
xchg
add
xorb
lahf
cmp
ds
cmpsb
imul
push
lds
out
jp
cmpsl
push
mov
ljmp
mov
ficoms
cli
pop
movsb
enter
cmp
pop
popa
repnz
fdivs
jle
jp
fstp
jl
cld
xor
mov
cs
repnz
dec
movsl
push
or
mov
mov
mov
and
lods
xor
mov
cmp
daa
sbb
xor
adc
push
imul
jg
push
arpl
clc
fcos
mov
jmp
sub
mov
adc
add
cmp
jnp
stc
mov
dec
add
std
cmp
xchg
jmp
aaa
xor
push
jnp
in
mov
pushf
ljmp
mov
cmp
cmpsl
insl
out
pop
jbe
and
loope
xchg
xchg
out
scas
lea
xchg
or
mov
jne
lahf
inc
xlat
or
cmpb
adc
dec
out
jb
mov
test
ja
dec
hlt
test
sahf
mov
outsl
xor
dec
jo
sbb
mov
pop
aad
xlat
stc
je
out
insl
scas
sub
xchg
into
push
xor
mov
jle
adc
sbb
sbb
and
movsl
inc
or
les
dec
push
pop
xor
cmp
stos
sub
ljmp
push
outsl
fimull
in
inc
sub
out
xchg
adc
push
cmpsb
xor
lods
fidivl
mov
push
mov
das
scas
jnp
cmp
out
loop
loop
mov
adc
insl
adc
xor
sub
pop
orb
iret
sahf
nop
lea
fs
pop
push
dec
add
and
sarl
or
shl
pop
dec
loope
arpl
pop
adc
cmp
pop
mov
or
inc
je
and
cmc
xchg
imul
outsl
js
xor
lea
adc
xchg
pop
push
repz
test
out
je
ret
xor
insb
mov
cmc
mov
nop
cld
mov
daa
xchg
ret
bound
jge
pop
fbld
mov
filds
pop
shlb
push
xchg
push
inc
adc
jno
jecxz
mov
mov
inc
xchg
popa
cmpl
stc
ss
cltd
add
jl
pop
lret
ss
and
shl
adc
bound
xchg
and
in
pop
xchg
orb
pop
push
out
pop
add
stc
mov
lahf
daa
adc
push
gs
and
xchg
js
or
cmp
icebp
adc
push
loope
aas
ja
mov
jne
xor
mov
call
ja
leave
mov
test
and
mov
mov
lret
fiaddl
scas
outsl
addr16
xlat
push
jmp
cwtl
mov
or
cltd
sbb
int3
inc
push
int
movsl
fbld
imul
rcrl
cmpsl
popa
insb
pop
iret
cmp
in
imul
stc
lahf
bound
jge
enter
imul
lock
insb
mov
pusha
xor
es
pop
int
xchg
mov
das
out
insl
ficoml
adc
enter
pop
and
out
dec
je
add
std
les
shlb
fstps
or
push
cmpsb
movsl
imul
loopne
sbb
jle
fdivrs
dec
rcll
mov
push
imul
insl
outsb
dec
or
in
call
sbb
mov
dec
xor
add
dec
js
xchg
push
xchg
push
ror
sar
roll
and
and
mov
sbb
cmp
divl
pop
or
lret
icebp
dec
cmp
fcoms
cwtl
xor
shrl
int3
push
jp
push
and
mov
adc
negb
popa
adc
jns
pusha
cmp
inc
cli
leave
shlb
ficoml
jmp
dec
out
dec
sub
pusha
mov
jns
out
gs
aas
lcall
fldcw
push
ficomps
adc
xchg
adc
push
pusha
xchg
adc
mov
int
xlat
sub
push
dec
movsl
call
add
out
inc
adc
imul
add
pop
adc
loop
dec
out
pop
fsubl
jno
or
outsl
fnstcw
test
add
jno
cmpsl
ds
repz
adc
call
mov
mov
mov
pop
cmc
or
stc
clc
dec
out
mov
xor
fsts
scas
pop
aam
dec
clc
aam
in
jmp
fcmovu
fnsave
xor
pop
cmp
push
cltd
push
fs
movl
cmp
mov
add
pop
loopne
adc
xchg
or
orl
cld
je
in
outsl
mov
insb
inc
add
sbb
sbbb
enter
push
xor
ret
adc
call
fmull
mov
movsl
bound
aam
mov
in
jno
pusha
lea
les
ljmp
loopne
cmc
sbb
ret
inc
push
add
push
and
push
ret
xor
in
xchg
sbb
cmp
jmp
ds
mov
sbb
cmpsb
pop
push
pop
push
push
shrb
and
scas
pop
inc
es
das
adc
sahf
sbb
lock
pushf
outsb
xchg
jge
push
call
repnz
pop
cli
dec
mov
push
mov
mov
dec
lcall
shlb
mov
ds
xor
dec
lods
mov
or
push
mov
mov
adc
call
xchg
das
or
fcomps
push
jnp
outsl
push
lcall
insl
pusha
dec
fwait
out
inc
outsl
lahf
mov
lret
lds
or
lahf
and
gs
cmp
and
xchg
xor
mov
push
fs
mov
hlt
fldl
pop
popa
pop
cmp
and
pushf
xor
loope
lahf
sub
push
mov
ret
dec
xchg
fdivr
xchg
cmp
and
fsubrs
sbb
sbb
sub
xchg
hlt
sub
shrb
fidivrs
lods
lret
ret
outsb
pop
add
dec
pop
xor
mov
mov
push
add
inc
rorl
iret
push
push
add
xchg
and
repz
dec
lcall
xchg
adc
aas
clc
int3
outsb
cmp
xor
push
std
idiv
mov
and
push
mov
xchg
xor
jae
sub
shrb
lock
inc
ljmp
xchg
cmpb
sbb
aaa
mov
stc
subb
or
inc
sarl
mov
push
push
push
pop
sbb
repnz
ds
aaa
mov
pop
bound
dec
cmpsb
es
imul
mov
cmc
xor
adc
cmp
cmp
ljmp
mov
ret
sbb
cmpsb
push
sbb
lock
push
dec
mov
xor
ds
and
pop
cmc
jl
mov
mov
and
pop
inc
dec
cmp
bound
inc
and
subl
das
lea
aad
pop
dec
sbb
xlat
fsubrl
mov
in
xchg
ret
loop
or
jmp
adc
fsubrs
and
lods
inc
sbb
xorb
push
xor
lcall
fwait
int3
test
cmp
dec
rcll
xchg
addr16
scas
pop
gs
imul
push
ficompl
xor
mov
sub
repnz
sahf
aad
sbb
and
iret
in
add
in
jmp
jo
add
jne
scas
dec
lods
imul
adc
sub
mov
jp
jmp
outsl
xchg
sub
nop
adc
pop
fcomps
lock
lods
push
jo
mov
in
mov
in
out
hlt
adc
sub
inc
and
sti
push
scas
outsl
aaa
lret
adc
pop
and
shl
ss
ret
aam
sbb
dec
popa
adc
mov
in
mov
hlt
cmp
imul
fwait
leave
xchg
inc
jle
jecxz
les
scas
cmpsl
icebp
jae
cmp
sbb
adc
neg
imul
mov
das
ja
push
xchg
mov
push
cmp
mov
js
mov
fisubrs
rcrb
movsl
loope
inc
ret
outsb
mov
and
jae
mov
aad
fidivrl
lea
add
fsubl
sub
addr16
pop
push
ss
sub
stos
repz
sub
xor
mov
in
addb
test
outsl
mov
int
imul
mov
sbb
and
sub
ds
es
movl
sbb
mov
hlt
cltd
lods
les
out
mov
movsl
mov
jno
push
in
fwait
and
daa
arpl
std
sbb
pop
lods
lret
stos
and
jns
push
arpl
rorb
sbb
mov
sti
push
jbe
fistpll
rcll
enter
imul
in
insl
xor
fidivs
sbb
inc
xchg
hlt
sbb
fwait
xchg
mov
arpl
mov
sbb
jg
lret
push
sbbb
inc
je
jge
cmp
clc
jns
dec
mov
divb
call
in
scas
cmpl
mov
iret
mov
lea
sub
sub
pop
inc
cmp
add
les
push
jnp
push
push
xor
mov
adc
shlb
fld
fwait
imulb
and
and
inc
addr16
and
repnz
xchg
scas
sbb
ret
mov
cmpsb
pusha
cmpsl
sahf
pop
or
and
xor
mov
push
pop
dec
je
inc
cli
es
jp
mov
test
cld
in
or
out
xchg
jb
cwtl
insl
mov
pop
push
out
js
into
ljmp
dec
sub
push
xchg
inc
ficompl
add
add
aam
outsb
lcall
and
jge
pop
popa
xchg
lcall
pop
push
and
adc
shlb
push
gs
mov
dec
mov
lcall
movsl
xchg
or
push
jnp
mov
shrb
xor
inc
pop
ret
inc
mov
movsb
int3
cmp
xor
stos
adc
cmc
inc
cmp
and
test
add
mov
push
jbe
sub
aam
jmp
rcrb
int3
addr16
mov
add
lcall
push
mov
sbb
inc
test
and
jno
loope
or
and
outsl
repnz
clc
sbb
adc
les
mov
pop
add
pop
es
rcl
or
lahf
stos
loope
fucom
jmp
inc
mov
mull
dec
testb
inc
loop
add
jp
xchg
test
in
leave
fmul
xchg
push
sbb
rolb
or
push
sub
sub
xor
fdivs
pop
push
mov
out
push
pop
xchg
loop
xor
test
outsb
push
leave
mov
adc
int
push
in
xlat
xchg
dec
jbe
jnp
jmp
mov
outsl
mov
dec
nop
nop
or
adc
sub
mov
sub
adc
pop
cmp
cld
loopne
pop
inc
lret
add
pop
aad
daa
add
push
mov
insb
jmp
jl
negl
mov
mov
repnz
sub
loope
test
cmp
jb
jno
cmc
cmp
mov
dec
xlat
mov
dec
leave
jmp
fimuls
sub
push
movsl
test
in
sub
lret
sti
adc
das
fs
or
add
ret
inc
mov
int
mov
jb
sbb
je
aas
mov
lods
sti
psubq
iret
push
pop
icebp
loop
popa
push
mov
add
push
mov
sbbb
fdivrl
je
scas
jl
push
pop
cltd
mov
push
mov
add
sub
mov
lcall
ret
into
mov
sub
and
nop
adc
in
jmp
cltd
xor
mov
les
ja
aad
fsubs
sub
cs
xlat
cmp
cltd
sub
icebp
mov
das
jge
cmc
enter
mov
cli
scas
vpacksswb
push
ss
pop
mov
sbb
or
add
movsl
adc
sub
clc
subb
pop
jg
scas
jecxz
cmp
cmpb
cmp
mov
xor
xchg
inc
mov
and
mov
pusha
mov
pushf
mov
push
jecxz
cmp
lds
xchg
insl
pop
mov
cld
incl
js
inc
test
jp
push
stos
xorb
fwait
cmpsl
sbb
adc
lret
scas
push
movsl
xor
sbb
out
pushf
and
andb
scas
in
inc
das
and
cs
jb
sub
xor
movsb
push
cmp
sti
cmp
in
and
and
mov
lea
test
loopne
cmpsb
push
inc
sub
cmpb
jae
sbb
call
mov
jnp
imul
push
or
cmp
inc
test
out
or
shrb
and
pop
std
add
jno
fistl
mov
and
sub
cld
outsl
inc
sbb
outsb
cmp
pop
push
xchg
js
xchg
or
shrl
mov
jo
scas
outsl
lahf
movsl
xor
or
push
mov
clc
push
xor
pusha
push
das
aaa
call
test
cmpsl
mov
std
inc
xor
stos
lcall
push
arpl
mov
out
pop
out
jmp
push
sbb
jmp
incb
imul
dec
sub
and
js
or
addb
bound
mov
jg
inc
cmp
pop
mov
mov
stos
in
aam
and
scas
mov
mov
dec
addl
or
pop
in
add
inc
stos
pop
scas
dec
mov
dec
iret
pop
mov
jle
push
cmp
mov
dec
jle
inc
fisubrs
push
xor
lods
mov
mov
lcall
xchg
mov
sub
adc
push
movsl
adc
pop
stc
mov
in
pusha
lds
push
das
cmp
call
mov
in
int
std
sbb
jecxz
popf
sub
xchg
call
bound
ret
mov
test
sarb
mov
cmp
cmp
lock
nop
data16
jb
cmp
jecxz
mov
rep
push
sub
xor
movsl
sbb
in
fcmovnu
push
lahf
push
insl
jge
int
adc
cltd
cwtl
int3
cwtl
ss
push
aam
mov
xchg
popa
movsb
pop
test
loope
out
lock
jo
dec
je
mov
or
cmpsb
mov
dec
inc
outsb
lods
stos
cmpsl
gs
or
and
push
mov
mov
ljmp
iret
insb
cmp
loop
aas
cmp
push
subl
cli
imul
les
addl
or
inc
aam
dec
mov
add
clc
mulb
push
lods
les
mov
enter
xor
rorb
inc
fisttpll
sbb
mov
xchg
jae
dec
popf
jnp
jg
sbb
mov
sbb
mov
adc
jns
and
adc
enter
mov
xorb
ds
sbb
push
popa
sbb
mov
iret
pop
cld
daa
adc
push
pop
add
mov
sbb
lock
into
sbb
jmp
xor
into
inc
ficompl
push
rorl
sbb
lods
popf
push
xchg
fxch
in
dec
cwtl
in
frstor
lcall
sub
adc
xor
stc
xchg
xchg
repnz
mov
shr
leave
add
scas
cmp
mov
hlt
sbb
push
sub
lret
or
in
adc
sahf
vminps
jns
cmc
xor
or
aad
and
mov
or
push
paddusw
push
sub
add
repz
scas
iret
cmp
inc
add
xchg
fcmove
aam
xor
rcrl
loopne
aam
mov
fdivr
into
sbb
cmp
dec
dec
add
sbb
jns
mov
daa
into
in
inc
pop
inc
pop
jo
movsl
adcb
outsb
and
sub
aam
loop
icebp
cmp
je
ss
stos
pop
sub
aas
xchg
punpcklwd
push
push
iret
xor
dec
stos
movsb
add
mov
stos
cltd
sub
jl
xor
and
push
dec
imul
dec
jle
shrb
scas
int3
xor
push
ss
stos
mov
imul
inc
rcrb
popf
dec
xchg
mov
push
xchg
or
in
mov
popa
dec
mov
mov
push
incl
pop
scas
call
push
mov
jbe
mov
sub
pop
sbb
enter
aaa
repnz
cmp
xchg
test
push
fmulp
push
push
xchg
mov
fmul
mov
shrb
inc
and
testl
push
or
mov
lds
fldenv
clc
sbb
gs
imul
add
and
push
sub
out
test
dec
rcrb
mov
mov
stos
xor
pop
mov
leave
mov
xchg
and
fistl
out
aaa
aam
adc
jno
fstps
ljmp
jb
cmp
lahf
jecxz
jge
cmp
adc
mov
push
push
and
push
mov
jo
add
cli
xor
lcall
jne
mov
ja
pushf
mov
cltd
ret
popa
xchg
jle
mov
arpl
jb
pop
mov
pop
fistps
movsl
sub
add
rorl
icebp
pop
and
mov
lret
cld
shrb
push
xchg
push
xorb
das
mov
pop
jb
mov
push
arpl
shlb
ds
add
das
dec
push
mov
in
ret
mov
add
push
and
push
fnsave
mov
std
mov
mov
cmc
jmp
cs
add
dec
pop
popf
xchg
cmpsb
jmp
setns
lods
xchg
mov
mov
and
popa
icebp
subl
jns
sub
push
ja
popa
xorl
rorl
jo
sbb
adc
xchg
rorl
adc
clc
fstpt
push
int3
mov
jns
jge
mov
push
xchg
mov
iret
push
lcall
mov
hlt
lods
fistl
cmpsl
aad
les
aaa
cld
and
xchg
lahf
dec
ljmp
loop
test
sub
push
jns
dec
pop
pop
sbb
jge
out
in
fwait
shlb
cli
push
pop
sbb
push
mov
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
add
and
pushf
movsl
jp
push
movswl
pop
pop
call
sbb
int
xchg
ror
into
out
cld
test
mov
pop
mov
add
sub
push
push
push
pop
pop
pop
pushl
jmp
sbb
fidivrs
call
jmp
lea
nop
mov
lock
lods
pop
push
sub
mov
push
jns
js
push
pop
popl
jmp
mov
sbb
cli
stos
or
push
and
sub
and
cmp
jne
popa
xchg
inc
std
xor
jge
out
sub
enter
push
adc
dec
push
jge
push
mov
mov
xor
inc
jp
sbb
push
les
ficoms
jge
les
jecxz
ficoms
sti
out
pusha
cmp
jg
inc
jge
dec
sbb
cltd
xor
movsb
sub
push
push
jge
pop
cli
push
mov
int
imul
fbld
cmc
loop
dec
or
mov
mov
xchg
xor
or
sbb
insl
xor
or
out
mov
dec
jge
dec
ret
push
mov
imul
dec
push
jge
out
int3
xchg
pop
push
jge
mov
sub
adc
push
aad
in
jns
xlat
cmpsb
dec
shlb
pop
rorl
leave
icebp
dec
stos
push
jge
add
leave
xor
xchg
adc
jge
jl
dec
loopne
imulb
xchg
fildll
outsl
mov
les
pop
xchg
hlt
test
bound
les
aam
iret
dec
mov
mull
outsb
mov
sarl
push
lcall
or
dec
loopne
xchg
mov
push
mov
mov
xor
mov
fcmove
pop
mov
sub
scas
or
aam
dec
push
or
inc
loopne
push
idivb
cld
lods
pop
mov
lock
loope
fnstenv
cmp
cld
jg
cmc
fimull
loopne
mov
dec
mov
pop
adc
and
shll
lret
rcrl
xlat
pop
mov
std
mov
les
rcrl
repnz
lahf
js
ret
cwtl
mov
push
and
jge
outsb
call
hlt
outsl
mov
or
pop
sbb
out
jle
cli
shll
sbb
pop
cwtl
in
mov
cli
shll
and
test
cmpsl
loopne
in
cli
inc
pop
arpl
ffree
cs
call
push
mov
popa
repnz
repnz
call
mov
shlb
and
push
les
cmp
mov
shll
mov
loopne
inc
dec
xchg
push
rorl
lret
out
xchg
mov
test
mov
out
rcr
xchg
pop
push
fimull
out
int
mov
cli
or
test
inc
repz
rorl
mov
adc
pop
pop
mov
lret
adc
iret
xchg
push
aad
fdiv
xor
mov
push
insb
and
test
ficoml
xorl
cmp
leave
push
fimuls
sub
ficompl
and
cmpsl
sub
insb
mov
pop
dec
lahf
push
pop
aas
test
in
dec
jl
pop
insb
rcll
mov
leave
stos
xor
out
mov
scas
push
in
cmp
lods
ss
mov
cmp
leave
adc
data16
or
scas
sbb
adc
cmp
std
mov
push
je
mov
bnd
aad
call
adc
lds
leave
adc
repz
adc
mov
in
and
ds
lods
into
cmp
ror
pop
lcall
dec
ljmp
leave
adc
shl
fnstenv
out
daa
rorb
lcall
adc
mov
leave
adc
mov
jnp
into
ret
mov
pop
pushf
add
leave
adc
mov
fsubrl
ss
adc
mov
adc
in
cmp
dec
mov
aaa
enter
leave
adc
mov
pop
pushf
out
leave
adc
mov
push
les
or
pushf
out
leave
adc
sahf
inc
leave
adc
sbb
fstl
pop
divb
mov
sub
adc
sbb
pop
mov
sarl
leave
js
ss
adc
lcall
in
outsl
dec
lock
fbstp
inc
fmull
xchg
push
rcll
jne
sbb
pushf
add
leave
adc
sarl
leave
scas
sarl
push
ret
mov
adc
mov
adc
lods
push
cmp
xor
mov
icebp
fsub
xchg
scas
push
push
sarl
leave
mov
aaa
leave
adc
jae
fstl
jns
jnp
test
in
jle
mov
out
lds
fcoml
mov
sbb
mov
leave
adc
shrl
stos
shll
push
cmp
lock
movsb
xlat
xchg
das
sub
shrl
and
dec
and
add
das
daa
mov
push
mov
shrl
and
dec
and
jbe
and
inc
mov
sbb
out
add
loopne
movsb
xlat
xchg
das
dec
jp
sbb
popf
sbb
adc
cmp
adc
sbb
out
add
loopne
movsb
xlat
xchg
das
and
mov
mov
leave
adc
sbb
out
add
loopne
movsb
xlat
xchg
das
and
int
mov
cmp
sahf
ja
xor
push
and
inc
mov
rolb
xchg
out
add
into
adc
pushf
cmp
cmp
out
lods
pop
js
mov
cmp
xchg
scas
mov
shrl
stos
rcll
sbb
xchg
rcrb
rcr
sub
xor
lods
imulb
rcll
sub
mov
xor
sbb
cmp
cmp
leave
adc
xor
adc
mov
leave
mov
sub
xchg
and
adc
push
ss
cltd
add
jae
fcoml
fwait
cmp
lcall
lea
mov
les
pop
xor
lret
sarb
sbb
inc
aaa
leave
adc
pop
mov
cmp
test
loop
pop
movsb
xlat
pusha
ja
fs
jecxz
sub
pop
xchg
adc
push
faddl
arpl
push
mov
fmul
repnz
sbb
adcb
push
or
push
jnp
js
jecxz
mov
sbb
mov
es
addr16
and
adc
shrd
aas
pop
loop
sub
and
mov
leave
adc
mov
leave
adc
mov
leave
adc
mov
leave
adc
and
leave
call
divl
leave
adc
mov
leave
adc
mov
leave
adc
mov
leave
adc
mov
leave
adc
mov
out
ret
in
movsl
test
pop
xchg
repnz
leave
jne
sub
addr16
pusha
mov
push
sbb
adc
repnz
cmp
shrb
fsubl
mov
mov
aaa
scas
push
inc
add
mov
and
dec
mov
outsl
sbb
inc
or
js
pop
fldl
pop
cmpl
and
sub
scas
ror
sbb
cmp
rcl
loopne
jge
push
dec
xchg
xchg
jge
fbstp
pop
mov
addr16
cmp
cmc
lods
lahf
dec
push
mov
cmpsb
das
inc
lds
movsb
push
sbb
inc
fsubrs
cmp
sub
bound
iret
mov
loope
push
sbb
inc
lcall
loopne
insb
popf
add
push
xchg
xorl
pmulhuw
mov
stos
sub
gs
out
cs
pop
jno
or
sbb
cmp
mov
lret
mov
out
inc
sbb
clc
addr16
xor
pop
test
sarl
daa
scas
loopne
je
mov
add
fdivl
mov
or
stos
push
add
imul
enter
in
shl
push
cmp
xor
inc
sbb
test
cltd
mov
fsts
pop
loop
in
lds
jecxz
outsl
jno
jmp
pusha
xlat
sbb
movsb
mov
and
loope
jne
leave
jecxz
imul
test
inc
xor
inc
inc
xchg
pop
xchg
adc
dec
pop
aas
push
mov
sub
pushf
int
stos
in
out
sub
dec
jbe
icebp
or
xchg
out
mov
inc
sub
push
lods
jge
cwtl
movsl
jb
je
mov
cmpl
daa
ja
add
pop
ljmp
mov
leave
adc
mov
xchg
adc
iret
cmc
ret
cmp
jl
or
cmp
inc
lds
enter
or
loopne
pop
push
popf
push
or
mov
rcr
shll
pop
mov
and
loopne
xor
fdivrl
aad
cmpsb
cmp
shrl
ss
and
aas
enter
dec
lret
mov
cmp
sti
inc
xlat
and
stos
jbe
aas
push
rcll
or
push
xor
pop
loopne
test
pushf
jns
insl
adc
jae
jmp
cmp
push
pop
jmp
pop
pop
das
mul
or
lret
inc
or
inc
fisubrs
jmp
paddusb
outsl
clc
inc
popa
mov
ljmp
cmp
add
mov
imul
stc
inc
dec
lret
loop
jnp
outsl
push
jae
cmpsl
add
and
add
add
add
insb
push
add
insb
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
insb
push
add
imul
cld
insb
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
insl
push
add
add
add
insl
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
push
add
push
add
add
push
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
push
add
imul
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
je
insl
add
add
add
add
add
add
add
sub
add
cmp
sub
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
push
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
scas
bound
xor
add
enter
fildll
insb
inc
or
dec
stc
ja
jnp
adc
sbb
les
sub
ffreep
adc
add
dec
mov
cmc
xor
jl
sub
lock
xchg
xchg
aad
outsb
test
xor
push
inc
dec
adc
push
pop
wbinvd
or
or
push
push
jns
popf
sbb
xor
rcrb
xchg
sahf
std
xor
cmp
mov
aam
or
in
filds
loop
adc
popa
xchg
mov
stos
loopne
iret
xor
lock
pop
sbb
inc
mov
std
sbb
push
mov
xchg
lahf
cmp
aam
mov
out
outsb
inc
repnz
jno
stc
jle
inc
or
subb
xor
mov
outsl
loopne
cltd
and
fstps
mov
dec
cmpsb
int
out
out
jne
arpl
inc
andb
gs
pop
sbb
mov
sbb
cmp
pop
add
pop
sub
jmp
sti
cmp
mov
cmpsb
lods
adc
jb
bound
pop
cwtl
mov
xchg
mov
ja
repz
cld
pop
ret
cli
mov
dec
lcall
pusha
add
das
sbb
jge
mov
cmpsl
pop
sbb
jnp
lahf
nop
dec
loop
mov
xchg
pushf
push
leave
aaa
mull
fisubrs
out
leave
out
lods
sub
pop
jno
push
rolb
fnsave
push
in
fimuls
dec
cmp
ret
cmpb
push
fwait
or
ret
es
lock
dec
lods
inc
lret
push
mov
subl
imul
loopne
add
or
or
jb
adc
call
and
inc
xchg
mov
sub
and
xchg
sub
std
pop
xchg
movsb
mov
sub
loopne
cld
ret
fisttpl
psubq
lock
data16
arpl
ljmp
lods
mov
repnz
pop
int3
mov
repz
fstpt
pop
repnz
add
dec
arpl
enter
sbb
int
pop
mov
sub
mov
add
jns
xchg
fmulp
movsb
push
cltd
or
sbb
daa
loope
add
lret
adc
jb
sub
xlat
fldl2e
mov
cmp
push
out
stc
cmc
inc
ljmp
imul
mov
mov
xchg
bound
cmp
push
mov
fistpll
in
cli
push
jg
mov
cmp
loopne
jmp
mov
in
add
push
mov
adc
push
fisttpll
jns
xchg
cltd
ja
xchg
fucom
pop
inc
or
sahf
addr16
pop
mov
mov
add
iretw
call
mov
inc
cli
or
out
mov
jb
or
daa
lea
push
inc
push
mov
xchg
aas
mov
stos
sti
inc
movsl
add
jle
mov
mov
adc
and
add
jae
inc
jae
aas
xlat
add
sarl
out
xchg
cmp
out
sub
incl
adc
xchg
xor
dec
dec
shl
psrlq
out
lret
push
sahf
movsl
push
scas
fdivs
mov
mov
loopne
inc
out
stos
pop
pop
sti
out
push
lds
push
insl
push
stos
sub
cmpsl
xchg
stos
test
adc
jnp
add
es
insb
data16
out
idivb
lret
jne
nop
testl
nop
inc
push
arpl
lret
jmp
in
cmp
rol
or
pop
push
pushf
arpl
xlat
and
mov
xchg
ret
jnp
frstor
push
std
fidivl
adc
push
je
fisttpll
jl
sbb
adc
adc
mov
fbld
xchg
mov
mov
jmp
std
cmp
out
out
ss
call
mov
cmp
or
jo
shlb
cmpsb
or
lcall
xchg
das
push
incb
mov
xor
pcmpgtw
mov
adc
inc
in
dec
subl
cld
xor
roll
adc
fbld
pop
lods
inc
dec
pop
scas
mov
mov
jb
pop
das
mov
jmp
push
call
rcll
sbbb
sbbb
cli
sarl
sbb
cmp
lds
repz
nop
fidivl
jnp
int
ds
pop
rcll
add
mov
sub
fsubs
sub
pushf
imul
mov
stc
popa
adc
sbbb
icebp
sub
ror
cmp
sbb
je
sub
lock
je
shufps
adc
add
out
loop
mov
in
mov
sbb
pop
mov
lock
push
mov
repz
out
call
sbb
sarb
shlb
adc
cmp
sub
enter
scas
stc
mov
push
cmp
mov
cmp
adc
ret
xor
xchg
imulb
frstor
push
inc
pusha
sub
notl
dec
sub
or
add
xlat
ror
inc
mov
sub
arpl
stc
or
out
add
rolb
out
mov
cmp
sbb
jecxz
xor
mov
and
mov
sub
pop
xor
lea
lods
loope
adc
dec
sbb
sub
and
push
ret
sti
pushf
loopne
push
push
xchg
jnp
mov
insb
pop
jno
frstpm(287
lahf
aaa
lcall
test
jmp
add
mov
pop
and
add
pop
sti
jp
pop
and
cmp
add
test
js
mov
adc
sub
fstl
pop
lahf
add
daa
imull
fmuls
sahf
test
or
xchg
xor
push
es
mov
out
mov
cmp
mov
sub
pop
ja
push
push
repz
sbb
lds
scas
ljmp
adc
or
test
outsb
mov
int
cmp
mov
ja
insl
imull
or
sahf
repz
xor
cltd
add
or
out
lcall
push
push
and
xchg
push
xchg
push
xor
out
test
ss
testb
pop
pop
sub
in
cltd
scas
or
add
loope
inc
scas
and
push
aaa
movsl
cwtl
xchg
add
and
push
popa
fisubs
push
mov
es
push
push
jmp
mov
hlt
std
dec
in
push
xchg
inc
mov
mov
mov
push
sbb
pop
or
mov
cmp
or
fwait
mov
push
inc
js
aaa
outsb
orl
pop
or
sub
arpl
lods
loope
lret
adc
push
imul
and
push
push
outsb
dec
jns
xor
adc
jb
fs
mov
arpl
call
mov
jb
gs
dec
les
inc
pop
adc
push
lods
push
mov
pusha
pop
pop
xor
stos
dec
inc
sbb
push
cmp
ljmp
mov
daa
pusha
aas
js
mov
aad
mov
push
aaa
decl
adc
testl
sahf
lea
clc
ret
shr
cltd
addr16
sub
mov
xchg
jno
movsl
in
fstpt
xchg
enter
in
xor
push
test
stc
aam
add
fs
mov
xchg
or
push
cmp
xchg
ja
sub
and
cmpl
xchg
je
aas
push
adc
mov
mov
sbb
bt
stos
sahf
and
insl
inc
pop
xchg
or
sub
add
rcll
xor
xchg
xchg
jmp
cmc
mov
fstpl
dec
das
lea
xlat
stc
or
rol
lret
in
rol
xlat
pushf
cmpsb
inc
sbb
mov
roll
jbe
cmp
pavgb
aaa
aas
xchg
and
pop
std
clc
ret
fists
lcall
ret
stc
stc
push
add
pop
mov
cmpsl
filds
xchg
fisttpl
pop
inc
aas
in
nop
in
mov
negb
leave
addr16
xorb
call
mov
lret
jle
push
popf
and
cmpsb
dec
daa
ss
xchg
add
cli
ret
cmpl
out
pop
jnp
mov
iret
add
xchg
xchg
mov
cmpsl
stos
mov
dec
push
lret
xorb
mov
cmp
hlt
rcrb
xor
push
cmpsl
push
sub
xlat
sub
es
push
test
dec
flds
mov
mov
dec
jp
xchg
iret
add
lcall
xchg
addb
sub
mov
aas
out
movb
cs
mov
push
ljmp
popa
mov
sub
outsl
jg
mov
cli
test
cmp
mov
fs
cmp
shr
xor
sti
mov
xchg
daa
push
xchg
outsb
inc
lahf
pop
repz
ja
imul
xlat
cmp
lcall
sbb
mov
adc
mov
out
xor
repnz
mov
mov
xchg
cmc
cmp
xchg
fsubp
dec
jmp
sub
dec
sbb
loope
clc
jl
pushf
aaa
idivb
dec
sbb
aas
stc
out
ret
ja
mov
or
mov
sub
and
add
pop
out
in
xchg
jbe
mov
rorl
js
pop
push
clc
or
ds
adc
xchg
lock
out
xor
xchg
cmp
sub
push
mov
xor
sahf
add
sbb
lods
cli
std
cmp
dec
sub
popa
sbb
adc
mov
inc
sbb
sbb
xorb
xchg
or
lcall
dec
mov
mov
enter
mov
hlt
scas
enter
lea
dec
fdiv
inc
adc
rcl
mov
pushf
add
ret
stos
int
cmp
pop
jl
and
mov
mov
pusha
and
fadds
add
jnp
push
inc
stc
inc
pop
sbb
mov
xchg
dec
or
andl
mov
hlt
mov
push
jmp
pop
xor
sub
fistps
scas
pop
pop
and
out
ffreep
fscale
in
aam
das
sub
in
or
adc
inc
int
les
pushf
mov
mov
aas
cltd
jno
or
jge
addr16
test
in
mov
aam
push
add
jne
pusha
xor
sbb
cld
dec
aad
mov
adcb
jb
and
movsl
inc
and
lock
rorb
and
lods
xchg
fisttpl
xor
test
popl
icebp
lret
or
fildl
jle
je
xor
repz
and
push
aam
mov
mov
mov
into
and
adc
or
js
loop
fstpt
push
jle
mov
scas
or
jo
ss
insb
mov
and
pop
in
cli
fmul
shrb
adc
cmp
addr16
loop
mov
into
mov
inc
push
dec
sar
out
jne
scas
or
outsb
mov
or
fldcw
dec
insl
jo
cli
xlat
ss
mov
insb
xor
pushf
sarb
iret
cmpsl
sbbb
inc
sbb
or
push
in
mov
pop
rcrl
sub
add
dec
add
mov
mov
cli
repz
mov
cmp
aam
std
add
push
dec
mov
sub
push
inc
call
push
test
test
sbb
mov
dec
jne
jp
xchg
xchg
mov
or
jae
mov
lahf
jecxz
pop
imul
cmp
mov
lahf
sarl
mov
ret
fcomip
mov
cmp
test
ljmp
mov
outsb
sbb
or
lcall
jge
push
sbb
pushf
lret
jno
push
mov
sbb
ljmp
jmp
jp
xor
or
or
push
push
cmp
pop
xor
rcll
xchg
adc
mov
in
mov
sbb
repnz
fstl
into
xor
movsl
push
mov
bound
jbe
mov
inc
jae
lret
inc
mov
mov
push
addr16
movsb
ss
and
xorl
xchg
outsl
dec
sbb
bound
and
and
mov
mov
inc
sub
push
insl
xor
adc
or
push
mov
int
aas
aad
mov
sub
movsl
fwait
push
fildll
xchg
insl
push
in
mov
pop
mov
inc
frstor
jno
mov
ret
or
test
sbb
xchg
jmp
or
add
pop
sub
xor
scas
xor
cli
add
arpl
test
mov
jno
dec
subl
mov
pop
or
imull
dec
aaa
or
aaa
xorb
ret
jne
push
imul
insb
pusha
xchg
fiadds
sbb
xchg
fstpt
movsb
xchg
or
sbb
mov
fcmovb
xlat
stos
adc
xchg
push
pop
jle
add
lods
lods
stos
cs
decl
xchg
pop
fildll
pop
rolb
aas
push
mov
xor
or
xor
pop
adc
data16
leave
in
xchg
sub
cmc
dec
or
push
into
in
push
repz
rcrb
cmp
test
aaa
rcl
xchg
dec
gs
sub
xor
and
shl
cmp
jg
add
mov
cwtd
xchg
jl
dec
mov
mov
inc
adc
mov
mov
adcl
cltd
arpl
add
and
xlat
scas
mov
mov
lret
test
mov
cmp
mov
xchg
push
test
repz
nop
mov
sbb
jne
dec
jmp
push
add
inc
pop
jp
rcrl
inc
pop
or
and
in
pop
lods
lock
ret
subb
dec
sub
or
cs
sti
xorl
in
out
or
cmp
inc
inc
xlat
sub
dec
add
in
jno
scas
adc
pop
stos
mov
shl
sub
lods
mov
lock
cwtl
cmp
out
clc
push
ret
dec
mov
call
sbb
lock
loop
cmp
cmp
fwait
sub
cmp
je
mov
clc
mov
es
xchg
add
ret
or
jne
aad
hlt
xor
xchg
or
pop
mov
js
scas
pop
add
cli
cltd
dec
mov
cmp
or
xchg
add
inc
sarl
out
jle
dec
arpl
inc
mov
push
in
cmp
cmpsl
test
mov
sub
ds
bound
mov
cltd
fistpl
lcall
inc
test
adc
leave
pop
cmpsl
push
popf
jno
mov
mov
aaa
insl
push
aad
add
jmp
sbb
add
test
gs
lods
ljmp
mov
mov
lret
jo
push
rolb
leave
ja
dec
add
repz
nop
nop
cmp
addr16
cmp
mov
lea
andb
dec
or
inc
lock
imul
mov
loopne,pt
jb
and
inc
adc
xchg
lods
fs
test
push
in
insl
insl
popa
popf
mov
fmuls
inc
pop
sahf
repz
cmp
mov
dec
imul
push
push
insb
add
leave
repnz
js
in
xchg
dec
rolb
lret
cmp
sarl
xchg
xchg
inc
popf
jno
imul
sbb
int
lea
in
hlt
xchg
cmp
jne
arpl
sub
clc
cwtl
insl
xchg
jg
stc
sub
mov
and
add
mov
push
movsb
mov
jno
sbb
or
mov
jmp
repnz
popf
loope
xor
lret
mov
movsb
mov
mov
cmp
ret
repz
pop
jecxz
es
jno
int
xchg
lret
inc
xchg
fwait
pop
mull
push
xor
mov
rorb
fwait
out
cmp
pop
andb
inc
incl
scas
test
cmpsb
push
repnz
mov
or
sarb
pop
push
mov
jae
in
out
dec
xchg
push
imul
flds
add
push
cmp
xchg
popl
xchg
dec
fadds
dec
movsl
aad
subb
mov
xchg
test
and
cmp
cwtl
sub
and
mov
repnz
iret
push
cmp
cld
jle
sbb
int3
fnstenv
pop
enter
cmp
cmpsl
loopne
cmp
mov
jno
lods
test
jmp
stos
mov
jecxz
sub
lea
ljmp
lds
bound
and
insb
xor
das
ret
pop
ficoms
std
adc
test
ja
and
cmpsb
dec
out
sbb
xor
fsubrs
fadd
loopne
fs
scas
dec
dec
sub
dec
fwait
call
jge
cmpsl
ljmp
push
fldl
mov
mov
pop
dec
jl
adc
cmp
push
push
pusha
lret
test
sub
lea
divb
jno
push
addr16
xor
and
sbb
in
test
mov
lds
loope
push
aas
add
add
inc
pop
es
xchg
xor
mov
xchg
cld
mov
ret
mov
cmp
hlt
inc
sbb
cwtl
pop
cmpb
lock
rol
lret
fildll
cwtl
pop
in
mov
and
adc
push
push
iret
adc
leave
push
jnp
mov
pop
in
dec
lcall
clc
pop
jp
pop
and
cmp
jno,pt
or
in
mov
imul
mov
mov
lahf
in
mov
mov
push
and
inc
and
sub
xchg
jne
push
insb
cmp
enter
fisubrl
movb
sub
call
xor
andl
test
daa
fidivrs
in
mov
xor
jnp
mov
adc
cmpsb
or
sbb
and
fs
scas
sbb
sbb
xchg
fs
adc
add
push
sub
jnp
jle
push
mov
push
inc
shrb
das
cs
sbb
imul
out
mov
fstpt
mov
sti
fdivl
loop
fwait
mov
add
clc
mov
push
mov
rclb
dec
js
dec
mov
andl
das
push
xchg
jo
lret
lret
rorl
push
int
test
ja
call
test
ja
push
xchg
add
arpl
out
or
mov
cs
mov
push
inc
mov
mov
fcoml
fmull
mov
psllq
fnstsw
fimuls
int3
jl
sahf
insl
test
movsl
insb
adc
loop
cmp
scas
lock
and
add
cmp
nop
stos
push
mov
push
scas
xorb
das
daa
mov
pop
fdivl
xchg
sub
fdivrl
sbb
add
mov
rcrb
arpl
inc
jmp
scas
and
and
mov
push
add
leave
aad
mov
sbb
sarb
iret
jo
stc
and
adc
ljmp
add
mov
jno
pop
ljmp
cmc
add
push
scas
or
or
and
ficoms
fimull
out
cwtl
cmp
cmp
sub
mov
mov
jle
imul
mov
jmp
loopne
test
sbb
pop
mov
nop
out
ficomps
xor
push
shll
out
xor
pop
ret
mov
xchg
mov
fdivr
cmc
insb
scas
jecxz
mov
or
imul
lret
mov
orb
xor
mov
imul
adc
andl
jle
clc
mov
stos
sbb
xchg
xor
dec
lret
sub
dec
inc
roll
imul
add
addr16
enter
push
in
pusha
ret
mov
test
mov
ljmpw
mov
jns
pushf
or
mov
push
cmpsl
stos
out
xchg
lock
or
pop
in
pop
les
mov
lock
ss
lds
and
loopne
mov
jnp
xchg
insl
push
outsl
es
clc
mov
loope
inc
ja
pop
jecxz
dec
and
xchg
nop
insb
sbb
andl
in
repnz
push
sub
repz
xchg
lea
lahf
mov
test
push
xchg
ds
mov
mov
mov
pop
daa
jmp
test
jne
into
mov
mov
mov
lea
jl
movsl
imul
cmpsb
xchg
mov
ret
adc
pop
mov
adc
jnp
fs
data16
push
mov
mov
inc
sub
stos
push
fsubl
cmc
mov
aad
in
sub
loope
and
in
fwait
or
loope
pop
push
add
sbb
dec
jg
sbb
inc
enter
jg
aas
dec
sbbb
outsb
lahf
mov
mov
jmp
mov
data16
and
xor
jbe
adc
out
adc
inc
out
in
sbb
in
mov
cli
mov
fmulp
xchg
int
pop
in
mov
push
xchg
mov
cmp
mov
mov
jp
mov
add
add
dec
mov
jg
mov
nop
out
or
pop
cmp
dec
fs
cltd
push
out
mov
bnd
inc
test
pop
sti
mov
xor
std
add
pop
or
mov
sub
in
test
pop
jmp
ffreep
popl
and
in
fcmovnu
rcr
cli
mov
test
popf
out
xchg
lock
jl
xchg
rcrl
dec
sub
and
adc
test
xchg
push
jecxz
inc
or
mov
dec
pop
or
pop
loop
xor
pop
jmp
xchg
jecxz
je
cmp
test
or
movsl
pop
enter
andb
jmp
pop
jae
cmp
push
pop
mov
adc
outsl
cmp
push
add
test
adc
xchg
adc
push
pop
inc
jns
push
fadd
mov
and
arpl
mov
jae
leave
push
jb
and
repz
je
jne,pt
xor
mov
maxps
mov
mov
push
mov
aaa
dec
mov
out
test
jg
fwait
jno
lret
lcall
xor
fnsave
roll
jb
adc
adc
push
pop
or
aas
xchg
adc
mov
int3
jnp
test
and
int3
jnp
adc
push
xchg
imul
add
ja
aad
push
xchg
jb
or
xor
adc
mov
sbb
dec
pop
xchg
fwait
ret
sbb
adc
test
adc
aad
cld
in
insl
out
jno
imul
xor
outsb
fsubs
stos
das
stos
xchg
or
mov
and
ljmp
loopne
jne
loope
test
xlat
mov
push
les
mov
mov
add
adc
fwait
adc
lds
mov
add
and
and
ret
andb
jae
pop
sub
mov
pushw
push
sub
or
and
fcoml
pop
mov
fmulp
push
test
dec
pop
inc
int3
sub
inc
fisubrl
hlt
popf
je
mov
pop
dec
leave
jge
aam
sbb
imul
mov
jmp
jg
dec
lret
test
sarw
divl
inc
aas
jmp
fdivl
cmp
mov
jns
hlt
into
clc
frstor
nop
dec
ficoml
ljmp
push
cwtl
in
mov
push
xchg
xor
xor
mov
mov
mov
les
cmp
cmp
cwtl
imul
push
and
cmpsl
pop
stos
push
aas
jg
and
pop
out
addr16
movsb
cwtl
dec
in
cwtl
adc
push
xchg
addb
pop
jae
sbb
pop
cltd
addb
or
loope
cld
mov
push
adcl
out
or
fisttps
xchg
adc
sub
push
jne
sub
leave
lahf
out
or
push
lds
jl
test
mov
sub
aam
mov
jmp
mov
jnp
pop
arpl
ja
mov
lods
and
sti
add
movsb
outsb
xor
pop
subb
test
daa
mov
add
mov
hlt
jle
rclb
mov
bound
pop
addr16
repz
adc
out
xor
test
add
insl
inc
pop
fucom
push
jbe
sub
push
add
std
shll
icebp
mov
rcl
dec
sbb
stos
bound
ja
movsl
insb
mov
repz
add
ja
jp
add
xchg
xchg
aam
outsl
dec
adc
stos
addr16
cli
sub
or
jae
add
sti
and
dec
mov
shll
push
int3
sbb
or
xchg
sbb
mov
pushf
push
add
dec
not
mov
xor
and
and
repnz
mov
sbb
shll
cmpl
in
in
adc
add
sarb
lods
enter
xor
mov
inc
shl
sub
repz
fsubrp
les
cltd
mov
out
rorl
inc
repz
xchg
jg
push
addb
jmp
addr16
insb
cmc
adc
xchg
push
jae
inc
test
ja
dec
add
repnz
mov
inc
dec
nop
clc
clc
xchg
data16
lods
pusha
or
and
mov
or
add
rolb
sahf
dec
or
dec
decb
dec
cmp
fnstcw
iret
jecxz
cmp
sbb
ja
push
dec
ss
push
cmpsl
repnz
fwait
cmc
stos
dec
js
lods
shl
adc
repz
and
test
mov
pop
outsb
cli
js
bound
mov
nop
jmp
pushf
jnp
mov
cmpsl
xlat
fdivrl
xchg
rcrb
ljmp
repz
mov
out
es
xchg
push
icebp
fwait
jle
cmp
dec
pop
imul
pop
jnp
outsb
loop
aad
int
sub
pop
sbb
repnz
dec
pop
idivl
lea
xor
or
cmpsl
arpl
in
inc
jge
dec
int3
sbb
xchg
mov
pop
jp
or
push
inc
pop
inc
push
sarb
out
insl
lahf
arpl
jbe
or
outsb
test
mov
push
mov
mov
out
inc
and
mov
and
add
cmpsw
mov
sbb
inc
inc
fists
add
fwait
xchg
or
jbe
and
jne
andl
bound
pop
ljmp
lcall
add
dec
jmp
icebp
fists
cli
lcall
and
loope
or
xchg
imul
push
mov
adc
addr16
mov
fs
push
push
addr16
dec
mov
dec
jbe
inc
mov
xor
movsl
insb
fists
mov
lcall
sti
mov
enter
push
fdivs
sbb
mov
mulb
and
popf
push
xchg
sub
dec
icebp
das
clc
test
cmp
sub
out
bound
cmc
imul
loop
push
and
xor
ret
lahf
in
jo
push
pop
test
test
lods
fnsave
mov
mov
insb
push
jecxz
fistl
shrl
pop
jmp
into
xchg
incl
jne
jl
inc
addr16
sub
jg
or
cmp
or
add
clc
popa
push
or
data16
aad
xchg
sahf
pop
fwait
push
inc
mov
xor
shrb
scas
mov
mov
add
ds
pop
icebp
adc
mov
lcall
pop
lods
es
push
movsl
sarl
push
inc
push
jl
xchg
inc
daa
fscale
les
fldlg2
jl
cmpsb
mov
or
popf
and
mov
pop
push
dec
outsb
les
inc
pop
daa
xchg
xchg
xchg
pop
pusha
cmp
lock
in
icebp
scas
add
mov
jnp
xchg
aas
imul
fwait
push
sbb
dec
dec
rorb
aad
ret
sub
and
cld
stos
or
lods
adc
into
popf
aad
lcall
xorb
gs
les
iret
jae
dec
inc
xchg
out
cmp
gs
xlat
sub
sbb
inc
xor
push
cmp
sbb
add
ljmp
dec
int
lods
popf
mov
cs
inc
cmpsl
sub
dec
loopne
sub
mov
movsl
mov
sbb
cmp
pop
div
pop
xchg
cmp
pop
pop
int3
cmc
or
mov
sub
mov
out
fadds
test
or
leave
dec
jb
cmp
aad
hlt
aas
dec
cmp
mov
mov
mov
out
pushf
xchg
nop
sbb
or
xchg
shll
or
imul
das
icebp
inc
cmp
jp
or
xchg
popa
and
dec
add
xor
lods
dec
push
jne
and
adc
xlat
push
inc
fldl
inc
mov
and
sub
jne
addr16
cmp
and
lock
loopne
decb
add
cltd
movsb
faddp
imul
adc
test
cltd
sbb
adc
ds
in
jmp
repnz
insb
xlat
jo
pop
nop
divps
mov
insb
mov
push
xchg
js
and
mov
ret
subb
cli
sub
lock
inc
ret
shrl
movsl
inc
xchg
inc
sub
fldt
pop
jge
inc
mov
mov
mov
fs
pusha
stos
nop
lods
jns
mov
or
push
mov
js
jbe
or
pop
and
ljmp
ds
bound
loop
push
xchg
push
push
mov
dec
mov
int
jle
jb
fistl
push
mov
loope
jmp
adc
sub
jmp
loop
cmp
fimuls
mov
xorl
sub
push
sahf
or
mov
push
nop
xchg
ljmp
push
pop
jo
push
fiadds
nop
inc
or
dec
mov
les
cld
and
and
sbb
out
mov
jle
mov
loope
in
pusha
sti
stc
xor
jle
int
loopne
xor
and
clc
mov
rorl
inc
fisubrs
loop
mov
fisttpll
leave
xorb
pusha
movq
xor
push
std
subb
fdivrp
insb
test
cmpsb
inc
and
ljmp
sub
orl
mov
xor
shrb
or
xor
mov
mov
push
push
call
xor
push
xor
lods
jg
sahf
pmuludq
xor
je
jne
inc
decb
inc
dec
and
inc
addb
jb
mov
inc
fs
out
gs
adc
icebp
bound
test
mov
mov
dec
push
icebp
mov
rolb
sahf
jecxz
in
mov
idivl
xor
in
add
rcrb
add
sbb
gs
outsb
lret
add
add
test
cmp
loope
mov
sub
push
xor
leave
shlb
lea
add
push
inc
aas
inc
push
xchg
rcll
jg
cli
push
stos
sbb
js
ret
icebp
fimuls
lods
xchg
test
shll
cli
pop
stc
ss
ss
fsubl
and
push
jecxz
in
es
imulb
mov
xchg
sub
jp
jecxz
movsb
pop
into
rcll
shl
insl
popf
add
and
or
pop
push
jae
xor
addr16
push
fwait
jmp
arpl
mov
xor
push
mov
sbb
inc
mov
xor
loop
in
std
mov
arpl
pushf
mov
dec
lret
fld
jp
insb
mov
push
lcall
das
mov
cmp
es
js
rcr
push
sub
cmpsl
push
je
ret
cmp
stos
int
or
and
cmpsl
rorb
inc
rolb
dec
mov
xchg
out
mov
xor
pop
add
idivb
xchg
cmp
push
push
sbb
mov
es
xchg
inc
sbb
setp
cmp
push
int3
out
scas
pop
es
fcompl
pop
push
mov
jg
mov
jmp
and
ret
cmp
mov
cmp
jg
jl
out
mov
and
adc
pop
dec
dec
pusha
mov
insl
das
call
adc
add
sahf
mov
cmp
push
adc
pop
movsl
insb
movsl
jle
mov
fdivs
bound
jp
insb
in
or
insl
push
or
pop
jle
pop
mov
setne
faddl
hlt
sub
xchg
jae
and
xor
pop
fisttps
int3
scas
push
jle
jne
lea
cli
add
add
lret
push
repz
stos
or
popa
rcl
pop
testb
js
xchg
lahf
push
andb
ret
pop
xor
inc
out
dec
out
jl
mov
xor
pop
adc
fsub
outsl
and
add
ja
lock
push
sub
push
xchg
stos
addl
pop
push
fcomp
fisubl
into
enter
mov
mov
shl
xchg
mov
add
cmp
xor
imul
xchg
int
or
cltd
mov
push
outsb
cmp
push
pop
popl
jnp
popa
pop
rcl
adc
mov
pop
popa
stc
in
fstl
mov
dec
nop
xchg
dec
jl
sbb
mov
xchg
shrb
mov
rcrl
push
rcrb
es
inc
or
dec
ds
loop
jno
cmp
aaa
dec
ss
aaa
adc
inc
insb
adc
loope
mov
adc
inc
fisttps
jge
imul
gs
inc
inc
dec
sbb
inc
mov
sub
and
pop
lods
push
pop
call
outsb
scas
popa
sub
ja
popf
or
test
and
xchg
scas
pop
dec
in
int
aas
test
mov
inc
jns
and
jno
cld
sbb
aad
mov
push
xchg
xchg
clc
xor
clc
mov
test
repnz
shrb
fmull
das
loop
xlat
cmp
jg,pn
leave
sub
inc
mov
mov
or
push
sub
jae
popf
mov
flds
xlat
rclb
mov
mov
xchg
and
jle
jo
cmp
mov
jnp
and
popa
pop
scas
mov
outsl
jo
xchg
fnstenv
cwtl
js
mov
mov
orb
xor
jl
jl
push
cltd
fldenv
lret
xchg
mov
push
loope
mov
mov
adc
pop
cmp
stos
mov
out
push
cmpb
pop
sbb
pop
cmpsb
jo
ret
xor
inc
mov
mov
insb
arpl
jl
in
xchg
out
jmp
xchg
test
push
loop
lock
dec
loopne
jns
adc
xchg
xor
mov
mov
xchg
cltd
lea
inc
icebp
xchg
adc
shrb
je
pop
and
mov
lret
test
icebp
push
loop
push
jbe
push
dec
fdivrl
adc
push
cs
ror
sub
loope
jge
test
rcr
or
xchg
pandn
pop
test
decb
push
or
lcall
frstor
mov
pushf
insb
dec
mov
xchg
ret
testl
out
adc
outsl
hlt
imul
aaa
jle
cmp
lahf
clc
sub
cmpb
scas
cs
mov
addr16
and
mov
das
ret
xchg
pop
cs
jmp
mov
jns
sbb
gs
fidivl
int
push
fxch
shlb
call
repnz
cmp
pop
sahf
push
daa
jecxz
jns
addr16
aad
ret
es
aas
fs
std
mov
cmpsl
cmp
stc
pop
push
lock
sbb
or
mov
mov
mov
out
mov
aaa
arpl
sub
js,pt
leave
into
xor
sbb
lahf
or
mov
pop
mov
push
scas
test
mov
iret
cltd
loope
cmpsb
loopne
add
and
fmulp
imul
pop
aad
stos
cld
adc
movsl
and
pop
ja
inc
outsl
push
dec
dec
or
out
adc
or
add
hlt
add
pop
pop
mov
push
dec
sti
jg
shrb
lret
mov
pop
nop
jne
add
inc
add
lea
sbb
mov
es
mov
hlt
mov
or
fcomip
and
lahf
lahf
mov
or
les
jne
in
mov
idivb
mov
je
std
out
dec
je
jl
pop
ja
xchg
xor
mov
push
and
iret
inc
roll
or
out
test
xchg
adc
inc
inc
test
loope
mov
xor
js
pop
data16
lea
stos
adc
aam
cmp
test
xchg
ljmp
into
ret
int
or
mov
pop
cmpsb
push
dec
into
pop
pop
aas
dec
adcb
loopne
or
xchg
cwtl
ret
out
ret
aaa
notl
dec
inc
pop
push
in
sbb
sbb
lock
stos
lcall
enter
in
cmc
js
xor
dec
add
xchg
jp
fs
dec
pop
inc
lcall
mov
test
lods
jmp
xchg
adc
fbld
clc
lea
movswl
hlt
xchg
cmp
ret
lds
jle
ljmp
xchg
test
jbe
fists
cmp
scas
jns
jg
daa
mov
ret
sub
xor
out
ffree
adc
xlat
mov
leave
push
dec
pop
or
add
in
sbb
push
dec
pushf
add
lds
sahf
xor
ret
je
and
mov
push
insb
mov
adc
mov
dec
jmp
dec
fidivrl
sbb
pop
adcl
icebp
subl
push
mov
testb
outsb
scas
gs
rorb
push
pushf
jnp
pop
bnd
das
mov
mov
lods
mov
mov
cli
mov
and
mov
and
and
movsb
int
pusha
sub
mov
ljmp
bound
pop
push
pushf
test
dec
lds
and
sub
cmc
xchg
xchg
imul
push
rcrb
cmp
scas
jge
pusha
ds
mov
mov
mov
dec
pop
popa
js
cmp
insl
pop
les
pop
cmp
jle
movsb
cmp
sbb
cwtl
xsave
jbe
clc
add
xchg
popa
ss
in
ljmp
jnp
lret
cmp
xor
mov
mov
pushf
pop
and
std
push
pop
push
imul
dec
sbb
cwtl
inc
adc
insl
xchg
pusha
xchg
xchg
sbb
out
adc
add
imulb
adc
ds
imulb
fwait
push
jno
nop
out
movsb
orb
mov
xor
aad
cmpsb
rorb
xchg
scas
ret
add
and
mov
mov
push
xchg
scas
xor
test
das
lock
fnclex
and
mov
sahf
in
cmp
jae
cmp
pop
jo
mov
fmulp
jbe
int
and
mov
fildll
push
stc
jb
imul
rcll
lock
popa
add
in
or
pushl
rcrl
lods
mov
mov
xchg
in
pop
hlt
es
insl
pop
test
call
fldt
dec
adc
loope
xchg
mov
fistps
mov
add
push
rcrb
sub
cwtl
fidivl
xlat
dec
repz
rolb
jmp
cmp
mov
stos
outsb
ret
movsl
and
push
push
pop
cmp
adc
jne
fs
mov
test
mov
es
cs
cwtl
jo
sub
gs
push
aas
cmpsl
mov
addr16
fidivrs
test
int3
iret
and
enter
lret
lods
or
nop/reserved
int3
ss
rcrb
cmp
fistpll
divl
ret
push
pop
add
cmp
adc
enter
ficoml
stos
lods
bound
pusha
imul
out
aas
pop
pop
testb
push
jle
mov
or
adcb
and
lret
and
inc
ret
or
push
cwtl
sub
enter
test
mov
fwait
popf
idivl
int3
cs
sbb
shl
jae
ficoms
xor
pusha
inc
inc
mov
mov
testb
dec
mov
or
and
hlt
cmc
cmp
jne
cmpl
add
fchs
add
fwait
popa
pop
add
popf
out
inc
icebp
xor
outsl
mov
cld
lods
pop
jns
pop
pop
movsb
cwtl
es
enter
xor
adc
sbb
loope
inc
adc
movsl
and
inc
pop
fldcw
mov
xlat
sub
mov
xchg
cmp
fs
out
lret
shll
mov
out
loope
movsl
xchg
nop
mov
push
add
dec
dec
fstpt
dec
ret
imul
sbb
mov
ds
das
imul
push
jl
mov
jg
lods
imul
int3
add
sbb
outsl
xor
shll
pop
loopne
push
mov
jl
pop
out
shll
mov
push
xchg
les
in
dec
sub
pop
roll
rcrb
xchg
or
lods
inc
cmp
jg
shlb
loopne
sbb
or
mov
push
inc
jno
loopne
fsub
clc
pusha
inc
xchg
push
or
jg
pop
adc
and
loope
ss
xor
push
jmp
xor
sbb
or
movsb
mov
lea
push
or
imul
sub
popa
push
lods
movsl
aaa
dec
jne
jmp
xchg
push
lea
push
sbbb
jmp
lods
cmpsb
lea
es
or
pop
in
cmpsl
js
cld
dec
cmp
xchg
jg
mov
data16
xchg
mov
xor
sub
xchg
dec
pop
outsl
clc
cmpb
xor
dec
fistpl
aas
pop
xor
inc
jle
iret
arpl
mov
sbb
inc
cmpsb
dec
inc
daa
out
ja
lahf
push
mov
pop
fs
inc
ret
out
roll
fisubrs
cmp
pop
fimuls
mov
pop
jp
fwait
sub
out
dec
xlat
and
add
adc
in
stos
push
jno
or
inc
or
in
popf
jmp
sub
daa
loope
mov
cmpsb
xor
sub
or
xor
dec
xchg
jne
cmpl
popl
ror
add
nop
push
frstor
mov
xchg
dec
mov
aaa
adc
xor
in
js
mov
mov
ljmp
mov
fwait
sbb
repz
and
mov
xor
inc
xchg
out
out
xchg
adc
fildll
mov
dec
fcompp
inc
sti
mov
out
adc
mov
add
pusha
xorl
mov
mov
or
aad
gs
stc
mov
pop
lret
xlat
add
scas
add
cmp
out
mov
je
mov
lret
addr16
adc
dec
xorb
es
cmpsb
or
flds
pushf
cmp
fnstenv
xor
add
cmp
sub
or
jne
jmp
xchg
in
mov
mov
dec
cltd
mov
movsb
cmpsb
cwtl
addr16
sahf
push
aas
or
movsl
push
dec
lds
das
xor
dec
popf
sub
lret
lret
popf
call
inc
mov
mov
sbb
js
data16
into
aas
xor
and
lahf
pushf
imul
enter
cs
sub
jge
data16
push
test
pop
aas
lods
leave
adcb
std
loop
mull
sub
imul
sbb
add
inc
push
add
and
mov
push
scas
pushf
mov
leave
ljmp
fbstp
das
xor
dec
call
ret
sub
push
push
xor
pop
jae
or
inc
sub
mov
and
cld
ljmpw
xor
repz
icebp
ja
cmp
lret
lret
xchg
cmp
cli
push
sbb
sub
pop
out
adc
cmc
lahf
aas
sbb
sahf
jmp
lods
lret
jecxz
sarl
inc
out
pop
loopw
push
adcl
cmp
sbb
and
lret
data16
adc
fldl
xchg
fdivl
xchg
fildll
jae
adc
test
mov
and
and
cmp
adc
add
je
gs
out
add
sbb
aaa
hlt
sub
jne
lock
jno
push
mov
ljmpw
cmpb
mov
xorb
fwait
xchg
cmpsb
mov
mov
or
fdivrl
mov
icebp
cltd
jns
in
out
jle
dec
xsavec
js
dec
fwait
xor
enter
mov
es
les
movsl
sbb
incb
scas
and
aas
lods
cld
xlat
push
scas
sub
lea
push
mov
cld
call
aam
jmp
shll
mov
push
out
les
imul
stos
inc
pop
out
pop
leave
mov
and
lea
shl
push
scas
rcrl
out
shlb
jae
sub
jb
lahf
sti
push
add
pop
out
rclb
imul
or
mov
jns
rorl
pop
and
popf
dec
nop
inc
addr16
cmp
mov
cld
dec
push
insl
xor
jl
xchg
outsb
clc
dec
adc
add
dec
mov
jno
imull
leave
ret
lea
in
dec
lock
jo
fdivrs
and
in
subb
loop
shll
aam
test
sbb
lods
pushf
inc
roll
sub
insl
jl
or
adc
mov
push
dec
inc
and
into
decb
shl
sub
mov
cwtl
inc
jmp
hlt
mov
dec
xor
aas
shr
fmul
adc
jns
int
shll
and
mov
add
int3
xor
sbb
dec
out
scas
adc
call
fcom
cmp
outsb
dec
rcll
dec
mov
les
xchg
sti
adc
outsl
and
add
notb
cmp
add
in
outsl
out
cs
adc
repnz
pop
inc
jge
aas
repz
je
fistl
mov
adc
xor
fisubrl
pop
les
adc
jne
or
lods
fadd
jg
mov
sub
orl
xor
shrd
fwait
addr16
pushf
sbb
cs
loop
cmp
mov
cmc
add
pop
int
pusha
and
mov
mov
icebp
dec
pop
inc
insl
adc
inc
pop
lods
movsb
test
inc
inc
or
in
jns
jle
int
pushf
mov
inc
or
cmc
fcoms
aam
or
ds
cmc
push
bound
mov
outsl
out
mov
jg
jns
es
and
aas
shll
xlat
cmpsl
stos
sbb
aam
add
loope
push
movsb
mov
out
push
das
jns
pop
es
or
push
lds
mov
inc
or
scas
ficoml
test
pop
adc
in
or
inc
mov
bound
sbb
popf
sub
fisttps
repz
dec
loope
mov
mov
adc
lods
ds
add
test
loop
mov
bound
out
dec
aaa
pop
cmc
push
or
or
xchg
sti
or
jmp
mov
fwait
incb
or
add
int3
xor
je
lods
xor
adc
mov
out
xchg
push
and
xor
pop
or
sub
inc
lds
mov
addl
dec
and
xchg
jne
and
add
xor
decb
into
sbbl
dec
push
mov
test
jb
fsubs
mov
fstp
and
xchg
stos
push
ss
inc
cli
mov
and
ja
movsl
ret
call
pop
push
daa
cld
insb
test
add
xlat
mov
ss
xchg
or
xchg
imul
and
adc
pop
mov
mov
fsub
in
push
sbb
dec
mov
jle
and
flds
cltd
bound
xchg
jb
dec
int
cmc
js
insl
daa
xlat
cmp
ud0
push
js
call
adc
or
inc
call
les
dec
sbb
or
in
jp
cs
sub
fsubrl
push
test
push
ljmp
call
xor
clc
sub
ja
inc
cmp
adc
pusha
cmpsb
pusha
sbb
mov
imul
fidivrs
dec
mov
jbe
pop
mov
push
sbb
adc
mov
leave
in
cmp
orl
fldenv
dec
add
xchg
scas
repnz
push
cmp
bound
mov
ficomps
jle
xchg
dec
aas
sub
hlt
cmp
sbb
nop
insl
icebp
sarl
in
fsubrl
adc
lods
jp
pop
fadd
inc
xchg
push
mov
subl
sarb
dec
shll
and
nop
jo
outsl
cwtl
pop
xorl
stos
add
insb
arpl
rcrl
xchg
push
mov
sbb
xchg
movsl
or
mov
mov
into
ret
adc
xchg
push
cwtl
add
jns
mov
cmc
add
aaa
mov
push
imul
dec
push
lds
add
aam
out
inc
scas
xchg
insb
push
cmpsb
in
sbbb
je
add
xchg
fsub
cs
adc
cwtl
ret
jmp
pop
lds
mov
divb
ss
aaa
out
loop
inc
lahf
cmpsb
sub
push
inc
iret
lahf
mov
out
sub
fcoml
xchg
andb
lcall
and
xchg
cli
push
mov
or
push
cmp
mov
jl
insb
push
sbb
and
in
in
xchg
fwait
bound
loopne
jnp
push
pop
pextrw
sub
push
cmp
ds
stc
pop
adc
call
cmpsb
or
and
mov
out
cmp
or
xchg
fmull
aaa
xchg
mov
or
jbe
sbb
insb
ja
push
add
jg
orb
cld
xlat
sahf
and
orb
jns
pop
cmp
loop
pop
aaa
iret
into
mov
jbe
adc
in
push
int
xchg
push
mov
dec
xor
push
mull
jg
mull
add
filds
cmp
xlat
icebp
mov
aas
enter
mov
daa
testb
add
lret
gs
lods
shrl
lea
test
xchg
xchg
data16
mov
sub
push
dec
jmp
nop
stc
jnp
adc
mov
mov
and
inc
das
call
push
shrb
mov
mov
jmp
aas
cmp
mov
xchg
and
xchg
add
stc
and
mov
and
loope
pop
leave
inc
or
jbe
xor
gs
xlat
mov
push
loopne
iret
shll
mov
mov
jne
mov
test
and
test
or
lret
aas
div
and
jle
dec
pop
loopne
mov
xor
outsl
jbe
andb
out
js
lret
dec
aaa
lods
ds
out
pusha
pop
adc
mov
ljmp
xor
adc
mov
je
or
repz
push
lcall
lret
arpl
pop
ret
or
loope
xchg
sarb
nop
test
scas
gs
push
cld
sub
pop
mov
arpl
lcall
xor
lcall
and
ds
aas
push
push
add
jno
cmpsb
xor
mov
outsb
in
inc
push
mov
mov
jb
lock
sub
mov
sahf
adc
fs
jge
mov
inc
jp
jo
mov
mov
test
mov
and
int
movsl
cwtl
mov
repnz
pusha
pop
and
cltd
repnz
adc
cmp
push
out
divl
cwtl
mov
repnz
idivb
out
xchg
imul
mov
orl
cwtl
loope
clc
insl
cli
rcrb
pop
imulb
push
sbb
insb
sub
adc
je
push
arpl
aad
fdivs
hlt
nop
pop
mov
out
pop
or
cmp
sarb
jae
ret
adc
lods
inc
imul
cli
cmpsl
popl
out
fidivl
mov
push
jbe
mov
mov
jo
aad
sbb
shlb
lds
sub
pop
std
push
push
addr16
mov
dec
addr16
movsb
mov
adc
xor
mov
pop
repz
dec
jno
icebp
shll
pop
sub
push
std
mov
sub
fs
mov
cmp
xor
mov
xchg
out
mov
inc
jp
lcall
rorl
mov
mov
divl
cmp
pop
daa
inc
jg
sbb
rol
loope
nop
push
lcall
rol
sub
aam
in
inc
divb
or
int
ret
cld
jno
arpl
add
pop
pop
push
lret
xchg
jbe
sub
frstor
sub
adc
cmp
rolb
add
mov
sahf
or
pop
inc
sbb
test
sbb
xchg
pop
add
and
movb
stos
xchg
in
insl
inc
cmpsl
and
mov
test
sub
push
repz
in
scas
divl
int3
xorl
out
fcmovnbe
dec
mov
rcrl
inc
and
mov
js
jae
xchg
mov
ja
push
es
and
dec
in
cmpb
xchg
push
and
jae
imul
and
pop
cmpsl
jl
repnz
shl
mov
and
addr16
inc
ret
push
mov
mov
xchg
sbb
mov
pop
ljmp
mov
xor
sbb
insl
mov
mov
sub
pushf
mov
push
imul
sub
xchg
fcmovnbe
lcall
jb
jb
mov
and
test
ljmp
scas
andl
je
cbtw
out
pop
in
or
add
ret
pop
ljmp
sub
scas
mov
scas
pushf
or
inc
push
mov
xchg
out
add
xchg
adc
popa
subl
jbe
xor
inc
aam
xor
xchg
ss
lock
mov
mov
mov
fldcw
loopne
push
adc
nop
mov
jp
test
dec
jg
insl
xchg
and
movsl
push
fisttpll
pusha
lods
or
lods
mov
xchg
ret
arpl
dec
adc
fwait
sbb
cmpsb
repnz
popf
aam
pop
outsl
cmc
pop
stos
insb
enter
aad
pusha
push
mov
out
aam
aad
or
mov
mov
adc
xor
pop
pop
je
sbb
xchg
mov
sub
jae
mov
pop
mov
repz
push
dec
imul
mov
jl
repz
enter
jmp
dec
xchg
das
inc
xchg
movsl
cld
repnz
pop
xchg
cmp
fs
pop
xor
or
sbb
fmul
push
test
mov
test
sarb
cwtl
aad
xor
push
mov
roll
lds
test
aam
andb
push
stc
xor
sub
adc
jno
insb
imul
jb
imulb
movb
int3
or
xor
ds
mov
leavew
pushf
push
push
jecxz
jne
add
pop
outsb
pop
push
ret
dec
add
std
mov
sbb
sbb
ret
xchg
aad
dec
push
cld
xor
fisubl
xlat
push
dec
pop
sub
in
cs
cmovbe
lea
sti
mov
push
jb
nop
push
cmpsl
loopne
adc
push
ds
sbb
sbb
adc
scas
lods
int3
pop
arpl
into
frstor
sub
mov
mov
add
out
lock
jmp
mov
clc
inc
stos
enter
lds
adc
out
ret
sbb
xor
addr16
jno
or
aad
sbb
mov
inc
inc
inc
xchg
mov
pop
dec
insb
into
pop
lret
cmp
les
lods
rcll
cmp
sub
pop
cltd
ret
adc
mov
js
lods
out
mov
or
stc
jno
mov
aad
jle
sub
lods
fnstenv
jbe
push
movsb
sub
mov
or
out
xor
out
dec
loope
and
leave
sbb
aas
jmp
pop
push
int
xchg
adc
sub
cmp
and
mov
xlat
call
mov
mov
adc
lcall
mov
arpl
dec
shrb
xor
dec
aaa
adc
enter
mov
jne
adc
mov
data16
push
outsl
xor
xchg
sub
repz
jecxz
push
sub
enter
inc
repz
incb
xor
add
cs
frstor
pushf
inc
int
sbb
stc
xchg
test
push
add
das
fcompl
adc
jge
xor
mov
loop
cmpl
xor
lods
test
popf
sbb
imull
int
loop
arpl
inc
dec
outsl
test
lea
cmp
in
push
bound
lock
push
je
and
add
in
inc
test
bound
inc
mov
jnp
mov
add
dec
sti
mov
jns
insl
and
lock
movsb
lods
repz
and
and
aas
push
fildl
xchg
lea
fsubr
loop
je
jl
cwtl
jecxz
cmp
mov
and
mov
in
pcmpeqw
adc
inc
int3
idivl
xor
mov
ret
pop
jns
enter
push
in
mov
xchg
ds
sub
rolb
lods
sub
adc
test
adc
mov
pop
jp
dec
fisttpll
inc
mov
jge
js
outsb
pusha
pop
and
dec
jecxz
ret
ljmp
lcall
mov
in
outsb
jne
pop
mov
outsb
xchg
loopne
add
fimuls
push
pop
movsb
lds
inc
xor
or
mov
xorl
jecxz
inc
sbb
int
lahf
xchg
xchg
dec
fbstp
out
add
dec
pop
add
adc
xor
or
inc
pop
sub
dec
lods
fs
adc
cmp
insl
lcall
pop
bound
movsb
ss
mov
cmovbe
ss
aad
xor
les
test
jmp
pop
pop
cmp
cmp
mov
in
loope
aad
xchg
rol
int
cmc
xlat
addl
xor
jle
imul
jle
pop
cwtl
test
fimuls
or
add
test
lahf
iret
decl
mov
jne
xor
or
jle
pop
fs
mov
add
aas
clc
orb
pop
xor
imul
and
add
push
mov
stc
stc
mov
cmp
roll
fidivl
xlat
adc
sbb
inc
in
xor
cmp
testl
inc
inc
push
negl
cmp
jno
out
adc
jge
enter
xor
mov
or
icebp
out
jno
add
pop
leave
jle
lock
hlt
repz
imulb
rorl
dec
xchg
ret
sbb
mov
int
cltd
arpl
mov
adc
lret
sarl
pusha
cltd
mov
sarb
shrb
or
xchg
xchg
jecxz
sub
cmc
adc
mov
jp
test
pusha
sub
mov
cmpsb
mov
mov
clc
xchg
mov
mov
insb
push
outsl
and
mov
pop
pop
rcll
scas
jp
sti
loopne
dec
enter
aad
or
pusha
sub
and
fcmovb
push
mov
mov
xchg
out
xchg
jle
cwtl
into
jmp
jge
mov
dec
cmc
mov
fcomps
addr16
mov
negb
fucomp
cmp
dec
pop
mov
inc
pop
loopne
call
imul
mov
xor
inc
and
push
popf
cmp
and
cmp
psllw
cmp
jns
inc
push
adc
fmuls
inc
lahf
xchg
ret
jo
fisubs
sub
sbb
inc
scas
repnz
clc
dec
mov
test
inc
push
sbb
pushf
loope
cld
mov
cli
push
add
jb
dec
es
pop
mov
roll
inc
jl
push
int3
mov
mov
jb
out
and
sub
pop
arpl
xlat
xchg
adc
dec
shrl
fs
popa
rolb
pop
cmc
pop
mov
add
mov
clc
and
mov
mov
xchg
sub
dec
adc
lcall
sub
in
cmc
jnp
fsubp
mov
and
xor
xchg
aaa
fidivrs
or
push
xchg
adc
inc
cmc
xchg
pop
aad
shll
out
pop
cmpsb
fcmovu
out
in
jo
adc
aam
popf
cmp
movb
and
lds
sbb
repnz
in
xchg
lds
cmpsb
ljmp
rcrb
into
rcr
divl
outsl
lods
inc
or
fs
or
fdivrs
jno
add
dec
add
int3
inc
dec
jle
std
outsb
aad
jg
mov
dec
push
dec
push
test
into
xchg
shl
push
mov
fnsave
cltd
js
mov
imul
orb
jl
pop
pushf
test
sbbl
lea
adc
repz
scas
mulb
fcmovbe
sbb
pop
fidivrs
lods
xor
sahf
outsb
cli
paddsw
inc
negb
jp
xchg
outsb
imul
mov
ss
adc
out
test
out
jae
mov
mov
jno
inc
xchg
add
ret
fidivs
cmpsl
lcall
mov
push
arpl
cmc
icebp
popa
shlb
xchg
push
or
iret
jle
int
sbb
je
insb
push
decb
in
ja
xor
jno
jle
sub
mov
and
cmc
leave
mov
stc
xor
test
or
or
mov
ja
add
je
dec
jge
jnp
jecxz
lock
push
jbe
pop
adcl
out
pop
inc
push
jmp
insl
jbe
sub
xchg
fadds
fiadds
jp
js
mov
adc
mov
das
outsl
mov
mov
rolb
das
pushf
daa
mov
mov
test
stos
int3
sarl
lret
push
hlt
fistps
cltd
dec
pushf
outsb
in
mov
out
mov
push
jno
mov
insl
sbb
dec
scas
or
pop
adc
fbstp
into
es
shlb
cs
dec
aaa
sbb
and
jge
cmp
clc
int3
lds
inc
mov
and
sub
dec
push
mov
fidivrl
xchg
and
push
xchg
or
jmp
xchg
sbbl
push
stc
jmp
pop
out
fsubrs
dec
fnsave
pop
jp
loop
ret
out
scas
mov
mov
jecxz
popf
mov
inc
cmp
jno
shlb
or
jae
les
sub
pop
xchg
cli
ficomps
pop
popa
lods
pop
adc
sahf
xchg
inc
es
mov
loop
add
push
xchg
mov
aam
push
stc
mov
cs
mov
lds
mov
add
pop
lods
adc
xor
mov
xchg
mov
ret
icebp
call
sub
bound
or
cltd
int
jnp
jns
mov
lcall
outsl
idivb
or
lea
cmc
cmp
test
mov
andl
sbb
andl
leave
sbbb
lea
mov
js
out
clc
gs
jecxz
fadd
notl
mov
fsts
xchg
loope
jp
jg
cli
inc
xor
jmp
rol
fmull
sub
ja
inc
push
fidivrs
dec
cmp
push
test
xor
xor
lods
std
out
add
mov
add
jp
dec
mov
cmp
sbb
shrl
in
and
fidivrs
push
ja
in
sti
popf
ljmp
insb
cmp
stos
nop
jnp
pop
sbb
hlt
pop
mov
mov
call
aam
and
jmp
out
sahf
aas
fidivl
xchg
cmp
xchg
sub
test
xorb
cmp
repnz
mov
jp
js
lds
rorl
mov
les
mov
test
xchg
cmpsb
cmc
jp
add
in
fwait
lret
mov
test
pop
fs
test
arpl
push
and
cmp
pop
ds
fnstenv
push
or
in
jno
arpl
mov
xchg
cld
mov
cli
cli
mov
lea
jle
ret
out
call
xor
ds
mov
push
mov
hlt
sbb
dec
int
nop
daa
sub
pop
sub
cmp
or
fcomi
arpl
xchg
int
hlt
xor
and
xor
and
push
mov
ret
int3
lcall
inc
stos
mov
sbbl
ja
jno
popa
cmp
in
cmp
sahf
inc
inc
and
adc
fnstenv
hlt
dec
cli
enter
inc
or
stos
nop
mov
mov
loope
add
xor
cld
outsl
testl
sub
int
or
jmp
loopne
xchg
fcoms
mov
mov
xchg
call
stos
adc
jns
or
dec
cmp
in
pushf
mov
mov
mov
into
xchg
dec
pop
sbb
push
dec
sub
adc
adc
aam
mov
rclb
cwtl
repz
js
cmpsb
adc
lret
push
and
inc
or
jp
pop
inc
pop
lahf
jle
fwait
xor
or
sbb
insb
mov
inc
imul
cld
cltd
repnz
cmp
jns
outsl
nop
inc
sbb
push
mov
lock
push
cli
pop
ficoms
mov
pop
cmp
xor
loope
mov
je
es
mov
movsb
mov
push
mov
call
repz
icebp
test
inc
sarb
xor
fdivrl
push
or
sub
js
nop
cltd
add
sub
add
cmc
jo
pop
stc
test
xor
insb
imul
jl
inc
add
int
push
std
sub
scas
mov
push
stos
mov
push
insb
adc
push
loopne
inc
xchg
shrb
icebp
push
ret
sbb
gs
xchg
rorl
gs
shrl
mov
or
je
sbb
pop
stos
adc
adc
aad
es
jle
mov
loopne
push
mov
push
mov
cmpsl
jbe
imul
add
jb
sti
adcb
ret
jle
rolb
daa
jmp
sub
mov
xor
clc
jle
repz
popl
push
add
lods
ret
ja
setl
xchg
cli
in
ficoms
sbb
loop
jl
sbb
or
ss
dec
imul
bound
sub
out
loope
les
or
add
sbb
out
inc
and
outsb
xor
xchg
into
negb
fisubs
incl
enter
or
stos
sub
add
in
iret
xchg
out
mov
clc
sbb
int3
out
arpl
xor
jp
mov
movsb
and
cwtl
mov
pop
mov
mov
or
into
int3
sahf
jmp
dec
mov
aas
pop
xchg
inc
das
loop
jbe
ds
sub
outsl
sub
clc
push
cmp
pop
xlat
je
gs
insb
rolb
and
cld
lods
movsl
inc
loopne
cmpb
aas
mov
mov
xchg
addr16
in
js
push
arpl
out
andb
cwtl
add
fidivrl
call
or
adc
les
aam
and
jne
sub
test
outsl
jecxz
mov
or
mov
out
int3
xchg
pop
mov
adc
inc
movsl
inc
out
and
dec
xchg
adc
push
pop
imul
mov
ds
jbe
or
push
push
jns
out
jge
mov
push
or
lahf
fidivrl
das
aad
test
loope
pop
mov
mov
xchg
rcrb
fsts
pop
add
movsl
outsb
sub
js
cli
popf
pop
jl
dec
ljmp
mov
into
mov
lret
je
pop
push
mov
ffreep
aad
inc
mov
pushf
sbb
imul
and
psubusw
mov
int3
adc
mov
std
rcll
aaa
out
pop
fstpl
add
ss
adc
cld
fstl
push
addr16
xchg
mov
popf
jecxz
xchg
out
jmp
push
nopl
cmp
push
in
cltd
mov
xchg
inc
jb
mov
dec
pop
mov
jecxz
mov
dec
mov
inc
pushl
jmp
add
int
mov
jmp
adc
test
pusha
ficompl
mov
scas
ss
testb
mov
shl
add
push
cltd
imul
int3
and
fldl
inc
push
xor
add
loopne
sbb
cmp
insb
inc
mov
or
xor
in
fnstenv
out
scas
inc
scas
push
sbb
imulb
ds
sbb
pop
push
and
add
push
sahf
cld
jbe
jge
mov
mov
mov
shll
jns
cmp
push
and
scas
push
sub
mov
lret
xor
jno
inc
outsb
shr
pushf
out
dec
lcall
es
sbb
add
dec
mov
fsubl
imul
cwtl
hlt
int
loopne
into
push
sub
sub
stos
repnz
fnstenv
push
jnp
test
xor
mov
mov
add
push
xchg
and
mov
mov
inc
jmp
lret
lret
sbb
jo
flds
push
rclb
push
inc
fsubs
ret
popf
xchg
lock
adc
imul
push
add
pop
mov
sbb
cmp
sub
call
fcmovnu
lods
lods
adc
aam
mov
movsb
stos
adc
movsb
push
pop
mov
sub
lods
jns
mov
test
movsl
dec
int3
xor
xchg
xor
mov
dec
lret
add
mov
sub
dec
stos
add
or
inc
mov
inc
jmp
push
cli
rorb
mov
jo
and
xor
xor
out
xor
inc
roll
xchg
clc
js
adcl
or
sub
andb
testb
fcoms
sub
loopne
adc
sbb
mov
lods
shlb
sbb
cli
ret
sub
loop
jle
mov
mov
ret
outsl
rcrb
clc
repz
mov
pop
cmp
stc
pushf
insl
test
adc
jecxz
add
push
xor
rorl
cmpb
stos
mov
in
ret
mov
and
lea
mov
test
mov
pusha
imul
int
cmp
jp
push
inc
or
dec
xchg
leave
roll
mov
fists
xor
gs
push
imul
jns
loope
arpl
in
sar
fs
xor
jmp
pop
push
arpl
leave
inc
sub
mov
adc
fwait
outsb
pop
imul
pop
inc
mov
leave
push
repnz
inc
outsl
daa
jns
cmp
sbb
mov
int3
movsl
mov
in
jo
dec
test
cli
push
pop
push
ds
lahf
stc
sub
fs
cmc
or
movsl
int
out
fs
in
jle
xchg
sarl
push
sub
lret
js
sti
icebp
stc
jp
cmc
test
lea
fnstenv
push
mov
gs
cwtl
subb
add
fcoms
leave
cmp
adc
cmpb
inc
mov
loopne
mov
stc
mov
cmpsl
jne
pop
je
inc
lea
lret
repz
xchg
xor
jmp
mov
add
and
pusha
mov
imull
cwtl
sbb
imul
inc
xor
pushf
lcall
sub
mov
je
and
pop
sahf
or
daa
cmp
or
jle
xor
sub
or
dec
lods
xlat
cmc
pop
xchg
xor
xchg
jns
xor
cmp
cwtl
xor
mov
dec
ret
in
mov
out
outsl
jp
fisttpl
add
add
xor
and
inc
loope
jns
lret
cwtl
bound
cltd
push
pop
cltd
roll
adc
or
cli
fildll
pop
js
arpl
fidivrl
enter
divl
xor
xor
dec
cmp
xchg
add
jge
imul
xor
mov
jb
filds
dec
mov
jnp
int3
cmp
out
jp
imul
mov
adc
stos
lcall
insb
mov
xor
add
pop
dec
pop
aas
mov
push
lea
sbb
xchg
pusha
cmp
es
arpl
mov
cmpsb
jns
add
jae
aam
xchg
inc
pop
test
jge
and
pusha
mov
cmp
or
aas
adc
or
or
data16
xlat
in
mov
adc
push
lock
rcr
push
sar
pusha
outsl
mov
jmp
dec
scas
lock
lds
jmp
out
bswap
mov
or
sbb
mov
icebp
xchg
gs
lea
addr16
aad
lea
roll
push
xchg
inc
xor
adc
mov
xor
push
adc
sbb
pop
jb
jno
pusha
pop
into
psubq
sub
add
movsb
xor
jge
out
mov
jl
jecxz
adc
xor
push
sbb
adc
ss
in
das
insl
cmpsb
cld
out
push
mov
cltd
sub
inc
mov
sbb
cmpl
fildll
xchg
add
dec
stos
push
nop
push
jp
ret
test
aaa
push
push
mov
sbb
and
mov
lods
iret
mov
rorb
fstl
pop
hlt
fwait
lahf
int
and
imul
leave
ljmp
daa
movsl
adc
ror
push
stos
lahf
mov
cmp
lret
xor
loop
clc
sarb
xchg
in
mov
sbb
push
add
mov
clc
fmul
sahf
and
inc
and
imul
push
ja
push
je
mov
pop
cmpsl
arpl
in
cmp
push
add
dec
andb
mov
inc
stc
xchg
lahf
mov
sbbb
pop
sbb
jo
mov
jne
or
mov
sub
int3
int
daa
push
arpl
mov
lahf
subl
push
cmc
loop
and
rorb
out
lret
jg
lret
test
push
push
pop
cmp
mov
iret
push
push
fstps
inc
cmpl
jo
dec
rclb
mov
in
insb
adc
pop
test
jnp
adc
ret
jo
je
and
ret
or
sbb
inc
and
pop
or
xor
xor
dec
sbb
insb
std
insl
jge
dec
cmpsl
adc
in
dec
mov
lcall
mov
adc
test
mov
mov
xor
xor
xchg
sub
mov
movsl
or
sub
push
pop
jmp
sbb
daa
xchg
sub
cmpsb
add
pop
jnp
js
inc
xor
cmp
xchg
push
or
cmp
mov
jecxz
lcall
int3
xor
push
inc
lock
jmp
lahf
rcr
pop
lahf
test
fsubrp
ljmp
xor
icebp
ss
push
and
push
xchg
mov
add
orl
fs
pop
xor
out
or
mov
jbe
lods
push
push
js
into
jmp
popa
add
fs
popl
add
lcall
jecxz
repnz
dec
xchg
js
mov
xchg
shl
lea
fidivl
jo
sub
push
cmp
rolb
fwait
xchg
cmpsb
push
cmp
das
pop
pop
aas
stos
jecxz
pop
insb
jle
int
xlat
mov
enter
lock
dec
cmp
cmp
lock
dec
sbb
hlt
lahf
sub
add
aas
imul
cs
xor
jmp
js
out
sbb
cs
js
sub
mov
sbb
sbb
add
repnz
sti
cmc
jbe
pop
xor
imul
nop
loopne
pop
cmp
xlat
or
imul
jnp
icebp
fidivrl
xor
and
ret
call
push
push
adc
cmp
jno
sub
mov
hlt
pop
sbb
pop
jmp
cs
shl
mov
add
je
jecxz
inc
and
pop
jl
in
dec
xchg
fimuls
pop
pop
jecxz
sub
fidivrs
push
jb
test
ret
mov
or
notl
dec
pop
dec
adc
scas
push
jne
sbb
inc
jbe
xchg
add
xchg
lret
stc
fwait
push
push
lahf
mov
rcr
and
vpaddb
or
push
xchg
stos
dec
lret
mov
sbb
sub
lret
jge
pop
mov
mov
ds
fisubrs
jo,pn
or
adcl
rol
in
repnz
xlat
int
jmp
sbb
jle
test
cmc
mov
adcl
in
cmp
out
pop
insl
pop
test
sbb
sbb
jae
add
adc
pop
xorb
adc
inc
and
movsb
jno
js
push
test
cmpsb
pop
repnz
xchg
xchg
mov
nop
sub
fs
rclb
mov
jecxz
cs
push
lods
sarl
sbb
xchg
mov
or
pop
add
sub
add
push
fildll
pop
roll
mov
inc
enter
mov
sub
mov
adc
add
xor
stos
fcoml
inc
pusha
and
leave
sub
pop
loope
cltd
mov
icebp
sarb
out
mov
pushf
xor
sbb
inc
test
fsts
xor
add
mov
pop
data16
inc
xchg
popa
lahf
orb
ret
int
mov
sbbl
fadds
dec
inc
adcl
repnz
push
test
std
xor
imul
cs
fcmovnb
push
inc
mov
or
mov
in
push
mov
leave
cmp
push
lret
xchg
pushf
mov
out
pop
lds
push
pop
xchg
ss
cltd
outsl
shlb
inc
mov
cmpsl
push
test
push
pop
imulb
lds
mov
icebp
jbe
cmc
dec
mov
rcr
inc
inc
and
addr16
inc
gs
push
mov
in
movsl
push
fldcw
subps
add
xchg
fidivrl
xor
add
mov
cwtl
mov
lea
add
jge
mov
ret
sbb
js
or
or
push
test
push
jb
add
jmp
std
in
and
add
out
andl
aad
imul
mov
out
inc
push
jbe
fdivrp
mov
dec
jge
jp
inc
xchg
shrb
xchg
xor
insl
scas
push
dec
mov
pusha
fimuls
mov
lods
jne
ds
push
cmp
imul
or
dec
cmc
in
or
movsl
scas
lods
sub
xchg
lods
iret
outsb
cmp
sub
mov
jmp
cmpb
jg
jb
addr16
cmp
dec
in
sub
and
jb
ja
ficomps
add
bound
mov
mov
mov
mov
dec
and
call
dec
sahf
fcomi
pop
repz
or
inc
mov
sahf
mov
adc
mov
jbe
stos
push
adc
pop
rorb
inc
mov
stos
mov
jg
and
push
xchg
lock
leave
stc
call
cmovl
or
jg
fadds
mov
mov
or
adc
push
fs
cmpsl
xor
bound
mov
xor
in
cmpsl
stc
mov
push
xchg
cwtl
stos
push
cmpsl
es
loope
jl
sti
sbb
pop
mov
fidivrs
hlt
and
lock
ljmp
pop
movsl
push
insl
add
lahf
or
inc
lods
inc
or
lret
sbb
lods
test
mov
or
mov
aas
cmp
insb
je
hlt
mov
data16
enter
jno
scas
bound
call
shlb
pop
mov
test
cmp
scas
sbb
inc
cmc
adc
mov
pusha
cmp
fistps
inc
cmp
mov
xchg
shrb
jge
out
mov
mov
sti
clc
movsb
jg
insb
sbb
aad
ret
in
cmc
jle
icebp
cmp
mov
in
out
mov
imul
fbld
cmp
pop
lahf
stc
adc
mov
mov
hlt
aam
or
les
enter
jl
cmpsl
mov
popa
xchg
sbb
je
repz
inc
daa
imul
loope
mov
xchg
cmp
adc
cltd
clc
popf
shlb
adc
add
loopne
inc
in
push
push
mov
xor
push
jmp
insb
daa
jg
mov
and
rolb
test
lods
shl
and
scas
shrl
jnp
fs
aam
jns
cmc
jmp
ret
out
fwait
mov
xlat
bound
sub
mov
insb
dec
add
cmpb
inc
adc
or
mov
sbb
dec
xchg
adc
repz
pop
js
lods
add
pop
or
in
add
add
xor
sarb
outsb
imul
xchg
mov
mov
cmp
jl
pop
sahf
cmp
fbstp
xor
popa
inc
repnz
daa
and
fstp
pop
lahf
xchg
mov
jge
jg
in
pop
add
fwait
jbe
or
mov
inc
xlat
sbb
mov
outsl
pop
popa
ljmp
mov
ss
hlt
lds
outsl
shll
ss
fs
mov
xchg
inc
das
enter
jae
mov
cmp
lds
es
call
fisubrl
dec
or
pop
arpl
ds
dec
push
jl
push
sub
cmp
mov
ficomps
push
inc
push
cmp
ja
clc
cli
push
test
imul
jae
hlt
aad
jmp
pushf
in
mov
js
xchg
pushf
add
lods
and
inc
xchg
inc
or
jl
mov
fimuls
adc
dec
push
ss
dec
mov
adcl
mov
xor
inc
aad
scas
push
xchg
popa
pop
movsl
imul
mov
dec
sbb
push
sbb
ret
add
mov
jmp
adc
dec
test
push
data16
in
test
mov
dec
stc
jecxz
enter
dec
push
push
movsl
add
add
jo
movsl
rcl
pusha
pushf
movsb
jl
lds
call
push
fistl
and
add
out
outsb
cmp
xor
fidivl
int
call
adc
je
imul
cli
add
dec
mov
addr16
leave
push
xchg
sbb
mov
pop
leave
pop
mov
push
ljmp
sarl
and
popf
andb
sub
movsb
mov
fisubl
adc
cmp
push
shrl
xor
inc
js
pop
cmp
add
scas
cmc
dec
and
mov
push
outsl
mov
popl
nop
xor
punpckhwd
sbb
or
cmpl
call
int3
mov
fs
push
add
loopne
jle
and
scas
mov
nop
vpaddq
test
lret
jns,pt
or
fstl
push
fwait
sbb
invd
mov
dec
mov
in
adc
xor
inc
dec
and
and
dec
out
cmpsb
add
inc
testl
pushf
push
and
mov
xor
addl
pop
stc
out
push
xchg
or
adc
xor
pop
aad
or
xor
adc
cli
sbb
jecxz
or
orl
push
lcall
imul
push
int3
dec
imul
push
dec
inc
xlat
icebp
cmp
dec
scas
mov
and
adc
pop
inc
into
adc
insl
lods
pop
push
daa
mov
stc
fmuls
leave
sub
lcall
pop
ljmp
mov
adc
cmp
mov
push
lea
bound
daa
into
stc
adc
lea
jecxz
inc
xorl
mov
inc
mov
mov
sub
cmpb
pop
inc
inc
fwait
lock
jb
lcallw
jge
mov
mov
lret
inc
cmpsb
pop
pop
xchg
out
dec
or
in
andl
dec
xchg
cmp
mov
jg
jnp
call
push
stos
inc
push
jo
jle
mov
mov
sbb
and
mov
and
jmp
sub
ret
testl
push
dec
jae
fsubrl
and
pop
stos
jp
sbb
out
sbb
and
out
in
inc
jmp
cmpsb
xchg
int3
xchg
mov
arpl
mov
stos
sbb
cli
push
xchg
xlat
jmp
pop
inc
pushf
inc
daa
fildll
mov
pusha
fwait
jne
ficompl
pusha
adc
test
xchg
test
xor
pusha
addr16
popa
sub
mov
xlat
add
cltd
scas
sub
xchg
icebp
mov
dec
sub
xchg
test
aaa
sarb
imul
jnp
pop
aam
fsubl
push
gs
mov
scas
sub
push
sub
lds
dec
inc
inc
shll
dec
arpl
jbe,pn
insb
lret
out
into
shr
jne
scas
jo
daa
sti
jl
jb
fisttpll
dec
push
sbb
jnp
jge
xor
js
frstor
enter
xchg
mov
cmp
leave
mov
sbb
stc
sub
ss
sub
lock
leave
dec
and
cltd
sbb
popa
imul
jne
dec
jae
cwtl
imul
pop
jge
out
flds
mov
dec
dec
add
xchg
push
clc
sbb
mov
test
ror
int3
fstpt
rcll
push
cmp
push
adc
rcrb
push
jg
mov
mov
mov
mov
add
mov
sbb
or
aad
push
lret
adc
inc
cs
xlat
subb
dec
std
aam
mov
outsb
add
insl
push
pop
aad
jns,pt
add
pop
movsb
or
repnz
test
mov
jg
or
sub
hlt
sub
jns
lret
push
lcall
jle
dec
call
dec
mov
cs
lret
mov
scas
andl
mov
in
push
lcall
dec
mov
or
pop
xchg
sub
push
pop
repz
add
jecxz
mov
decl
pop
lahf
fildl
iret
lret
mov
into
jno
mov
call
int
fsubs
xlat
lcall
mov
xchg
mov
jb
jg
or
mov
imul
lret
sbb
dec
xor
mov
popa
enter
ret
or
shl
mov
rorl
dec
or
mov
imul
or
dec
jl
gs
mov
jns
xchg
lods
fs
and
or
movsb
sti
inc
pop
setae
jg
repz
sbb
stos
jo
and
mov
xchg
pop
jnp
inc
fdivl
pop
mov
repz
add
sbb
sub
pop
call
lahf
adc
push
xor
rclb
mov
lcall
pop
push
ds
in
lret
pop
inc
loop
sbb
lods
lods
je
or
cs
setg
inc
lret
push
mov
loope
pop
push
mov
or
and
inc
push
sub
push
cli
addr16
sti
mov
call
dec
test
rcrl
push
push
scas
mov
rolb
inc
mov
push
mov
mov
cmpsl
out
dec
push
jle
divb
fwait
push
cs
add
mov
imul
and
mov
jae
push
or
aam
mov
lods
repz
lods
dec
cmp
scas
jmp
or
cmp
cmp
jns
push
out
inc
jle
xor
scas
jb
push
mov
dec
scas
and
xchg
pop
stos
popa
xchg
ficoms
or
mov
popa
mov
push
fsubp
sub
add
into
movq
ffree
inc
pop
dec
sub
cltd
or
dec
sahf
lods
out
popf
push
xorb
cmp
fstps
rol
mov
jbe
sbb
imul
mov
inc
pop
mov
mov
cmp
mov
xchg
insb
scas
mov
jl
jo
jns
lock
dec
aaa
fistps
mov
push
cltd
jns
dec
pop
add
jg
mov
and
ljmp
jle
aam
fldt
push
in
jno
out
xchg
arpl
pop
lds
fwait
leave
fdivs
mov
cli
movsl
jge
cmpsb
sti
sbb
scas
in
test
push
rcrb
push
push
jg
ficompl
add
lock
xor
cltd
mov
adc
sub
lahf
fbstp
jl
push
loope
int
xor
add
dec
jl
and
test
shl
and
mov
xlat
fcmovnb
aaa
sub
in
rorl
clc
pop
popf
in
mov
repnz
outsb
cmpb
mov
xchg
push
xchg
cli
movsl
push
mov
aas
xor
cmc
sahf
push
loop
jp
sub
inc
dec
inc
mov
out
mov
outsl
stos
mov
adc
dec
les
adc
jmp
les
adc
jle
sti
fs
cmp
and
sbb
fnsave
stos
sbb
dec
mov
or
fsub
add
adc
loopne
push
push
and
nop
lcall
mov
xchg
packuswb
jge
fcom
je
inc
or
inc
sub
adc
lret
inc
push
icebp
or
xchg
mov
out
cmp
cmp
test
sub
dec
dec
sbb
das
sbbl
sbb
pop
lods
inc
js
lahf
jg
out
adc
fstps
xchg
ret
pop
mov
repnz
out
stc
jmp
jb
loop
mov
or
jns
xchg
lds
push
mov
xchg
jmp
adc
ficompl
addr16
adc
jge
push
insl
push
push
pop
push
sub
pop
mov
fsubs
out
fcmovu
and
and
and
test
shlb
xor
cli
ret
cmp
divl
sub
jle
jnp
fwait
xor
outsb
and
jmp
mov
pop
popa
mov
jae
sti
dec
dec
jg
jle
and
jbe
sbb
addl
sahf
lret
loopne
dec
jns
cwtl
sbb
dec
pop
jge
cmpsb
out
fistl
lret
push
xor
xor
jl
cmp
imul
lret
sub
icebp
mul
daa
in
push
fisttpll
repnz
stos
mov
mov
dec
shrl
and
sbb
and
arpl
pop
leave
imul
in
stos
adc
ret
adc
and
cwtl
pop
enter
mov
jle
inc
pushl
out
inc
adc
test
bound
iret
and
pushf
dec
imul
push
mov
sbb
aam
sbb
mov
push
mov
fwait
mov
jns
xor
jb
mov
push
je
shrb
rorl
dec
cltd
lods
jg
sbb
dec
push
stos
dec
mov
and
test
fwait
cmp
stc
or
insl
mov
adc
mov
int3
fstps
sbb
loop
inc
xchg
sbb
xchg
add
scas
stc
pop
adc
loopne
in
test
dec
les
negb
test
scas
cmp
fdivp
pop
fimull
cmpsl
movsb
push
push
adcb
cmpsl
xor
pop
sbbb
mov
mov
int
pushf
adc
push
lods
popf
dec
ljmp
popa
arpl
andb
sbb
push
sbb
fdivrl
clc
jae
adc
fisttpl
mov
sub
xor
jb
jmp
andb
fdivl
mov
jns
or
fistl
ret
sar
orl
cmp
xor
outsl
cmp
adc
lods
daa
pop
adcb
jno
dec
cwtl
mov
icebp
sbb
sahf
int3
xchg
add
mov
fimuls
or
or
dec
jmp
lea
shrb
outsb
popf
push
int3
inc
jno
leave
aas
enter
and
sahf
lahf
arpl
inc
cld
lcall
lods
dec
sub
insb
movsb
outsb
sahf
or
call
dec
in
adc
lods
imul
jg
dec
das
push
jnp
mov
add
pop
cld
or
lret
cltd
ds
xor
adc
xchg
call
sarl
adc
pop
test
ss
dec
mov
stos
daa
dec
mov
aaa
aam
and
and
fisubrs
xor
mov
mov
int
push
push
mov
adc
lea
mov
cmp
pop
lds
shll
mov
addr16
xchg
xor
shlb
clc
and
mov
add
je
addr16
sub
and
fstpt
xor
in
jecxz
cmpsl
insl
movsl
jb
testl
cmp
repz
sub
aaa
xor
pop
int3
insb
stos
cmp
in
sbb
popa
dec
mov
inc
f2xm1
xchg
inc
pusha
in
pop
jecxz
mov
cld
leave
adc
fstpl
dec
inc
xchg
jl
inc
dec
dec
rclb
rol
jle
sbb
mov
jmp
repnz
cltd
imul
xor
jl
pushf
fucom
cmpsl
test
lcall
sbb
dec
xchg
mov
lods
leave
mov
out
fmull
and
or
pushf
aas
mov
lahf
ljmp
icebp
test
mov
lds
sbb
jnp
addr16
cmp
xchg
mov
inc
jp
ja
pusha
imul
inc
mov
repz
add
or
cmp
jnp
and
cltd
push
mov
mov
insb
clc
sbb
sti
mov
inc
test
insb
mov
xor
lods
sti
pop
adcl
ficoms
out
mov
xor
push
jo
js
xlat
add
cltd
mov
mov
cli
sbb
or
mov
int
jnp
ljmp
out
int3
add
in
or
fcomps
fidivs
inc
adcl
out
stos
sbb
mov
fnstcw
fdivrs
cmp
push
or
mov
imul
jbe
adc
stos
fwait
push
cli
into
jmp
into
cmp
adc
ja
in
or
push
push
ja
dec
sub
xchg
fwait
cltd
mov
imul
ja
push
insl
je
xchg
lds
decb
ja
cltd
roll
in
stos
push
push
cmpsl
lret
dec
dec
xchg
loop
loop
sub
mov
pushf
and
popf
and
ja
sbb
lret
lds
mov
mov
jbe
stos
mov
lods
mov
loop
ljmp
mov
pop
fwait
ds
sbb
and
cs
outsb
jmp
mov
or
subb
mov
test
and
dec
lds
clc
dec
call
aas
aas
jnp
push
iret
jbe
fwait
lea
mov
xchg
cwtl
mov
jb
jmp
mov
inc
push
jnp
mov
dec
push
push
insb
nop
or
add
mov
lahf
xchg
jle
pop
iret
jg
and
pop
jg
popf
nop
jg
mov
jmp
dec
je
mov
dec
add
sub
dec
lock
repz
mov
mov
mov
arpl
nop
jmp
cld
enter
mov
fnstenv
and
fistpl
or
lcall
dec
aaa
lea
jg
cltd
nop
xor
insl
jge
jbe
xchg
cmp
jb
addr16
cltd
and
sbb
adc
loop
aas
rol
rolb
std
jmp
pushf
out
xchg
bound
inc
subl
pop
je
sar
dec
faddl
pop
test
aad
dec
fcoml
icebp
aaa
repz
in
aam
add
mov
and
es
push
lock
xor
push
jl
dec
pop
jle
xchg
mov
subb
loop
sbb
sahf
das
aam
je
and
mov
in
and
push
adc
notl
arpl
mov
dec
mov
cwtl
or
ljmp
cmp
or
sub
cmc
adc
arpl
js
xor
lods
in
jae
int3
sub
setl
cmp
fisttpl
cmp
sti
and
xchg
or
cmp
jle
outsl
sbb
inc
sub
adc
repz
ja
push
pop
out
jo
jae
ljmp
and
xor
rcll
lahf
cs
cmp
dec
popa
ror
add
fwait
xchg
cmp
inc
into
mov
xor
xchg
add
pop
mov
push
cs
jbe
cmpsl
lret
adc
scas
xor
jns
xor
stos
scas
incl
pop
pop
push
jnp
mov
bound
movsb
or
jb
imul
xor
js
inc
jb
in
or
add
mov
push
mov
mov
mov
push
adc
add
adc
cmp
xorl
adc
xchg
mov
push
sbb
inc
stos
mov
push
and
pushf
jle
sahf
and
ret
shll
fadd
aaa
outsl
je
cltd
mov
fistl
test
push
jmp
inc
xlat
push
mov
movsb
lods
inc
push
xchg
cld
pop
imul
xor
jne
ret
into
xor
jg
mov
dec
and
in
pop
int
cmp
popf
mov
adc
js
pop
mov
sbb
test
jge
xor
mov
xchg
inc
and
sub
jae
mov
cmpsl
xor
dec
and
jno
aam
inc
imul
in
leave
into
pop
lods
pop
xlat
int3
sub
ret
jge
rclb
or
sub
inc
data16
cmpsb
shl
fwait
sub
cmp
and
ret
inc
mov
jo
add
popa
loop
ror
mov
and
cmpsb
rcll
jle
pushf
jae
pop
mov
das
xchg
bound
adc
stos
inc
stc
out
into
adc
adc
fbld
pushf
sti
pusha
mov
in
cltd
mov
jmp
std
inc
dec
adc
inc
lea
push
xor
test
xchg
ja
jnp
xchg
inc
leave
fwait
xchg
cwtl
jp
mov
pop
push
repz
inc
pop
sahf
inc
pop
mov
push
inc
and
fwait
mov
lea
pop
sahf
daa
fwait
or
or
mov
sub
mov
jecxz
je
dec
in
mov
jmp
inc
mov
and
leave
mov
sbb
xchg
popf
test
sbb
dec
add
jmp
lcall
jns
and
loope
mov
cltd
gs
push
inc
and
pop
mov
dec
sub
jae
inc
adc
leave
xchg
sbb
aam
mov
pop
inc
ja
in
cmp
and
scas
and
icebp
test
testl
jecxz
pusha
xchg
shl
adc
adc
mov
push
stos
mov
ret
xor
repz
inc
jo
mov
mov
push
fstl
in
lods
sbb
cmpsb
pushl
push
dec
sbb
dec
scas
push
roll
pusha
xchg
in
inc
or
sub
gs
mov
fcomps
daa
cmpsl
inc
or
jnp
pop
lcall
test
xchg
outsl
cmp
or
sbb
das
xchg
mov
data16
bound
push
mov
ret
mov
mov
aad
jl
sahf
sub
ds
sbbb
xlat
paddsb
mov
adc
outsb
push
dec
je
movl
inc
jne
or
addr16
inc
movsl
fucomip
ja
cmpb
push
insb
out
cmp
add
mov
mov
push
les
mov
xchg
or
cwtl
or
idivb
push
dec
inc
or
jg
fsubl
push
test
and
sub
loop
add
inc
mov
sbb
div
lahf
les
mov
mov
inc
jb
dec
or
pop
jg
fidivrs
mov
jns
ljmp
test
sbb
push
dec
test
lret
or
lahf
and
int
jb
cmp
out
mov
sbb
rolb
mov
loopne
outsb
ss
roll
out
mov
inc
mov
xchg
lock
in
dec
ret
push
dec
test
jmp
mov
mov
push
pop
test
adc
movl
std
mov
gs
daa
mov
fsubrl
inc
lret
cwtl
jno
jbe
in
scas
sti
lds
jp
adc
mov
push
mov
cmp
in
adc
xchg
repnz
xchg
jnp
pop
xlat
lock
mov
arpl
loope
mov
ret
mov
fsubrs
xchg
test
push
notl
std
adc
sub
ret
push
inc
jbe
aaa
sbb
mov
sub
mov
xor
mov
or
iret
mov
daa
mov
fwait
adc
adc
loopne
push
jge
pusha
push
aaa
into
or
dec
cmp
pop
adc
addb
addr16
loopne
and
and
mov
pop
leave
or
mov
aam
mov
divb
out
cmp
mov
dec
mov
rol
push
push
out
xor
push
inc
sub
push
xchg
adc
fs
je
mov
imul
or
je
fcmovu
dec
xchg
or
scas
fsubrl
push
inc
movsb
insl
xchg
out
rclb
mov
lret
inc
mov
or
xor
setne
in
ja
addr16
aam
inc
inc
bound
out
test
adc
push
daa
jb
pop
jmp
pop
cmp
inc
shlb
in
xchg
adc
dec
inc
fst
jns
add
aam
lods
push
js
out
jns
inc
imul
outsl
pop
xor
shrb
mov
pop
test
push
mov
sub
lahf
add
push
or
lods
adc
stc
es
xor
out
in
stos
add
cmp
test
scas
sub
jl
adc
sbb
cmc
mov
inc
pushl
push
jmp
add
repz
cwtl
fadds
mov
cmp
lods
pop
sub
cwtl
cmpsl
leave
push
lahf
repnz
pop
dec
mov
mov
in
add
sbb
jb
jbe
or
ljmp
aas
sets
cmp
int3
jmp
inc
out
mov
cmp
push
sub
xchg
les
dec
sbb
push
gs
push
push
js
adc
je
push
adc
mov
ret
stos
sbb
gs
pop
mov
inc
fiadds
mov
es
push
mov
mov
enter
xor
lea
sbbl
test
fs
add
push
div
sub
imul
in
xchg
cmp
adc
rcrb
es
mov
pusha
lret
xchg
imul
cmpsl
test
jno
mulb
pop
es
or
roll
adc
int3
add
clc
iret
stc
stc
lcall
jbe
adc
in
ljmp
test
cmpsb
mov
xchg
in
push
stc
sarb
sbb
repz
flds
and
adc
jnp
lret
bound
xchg
call
pop
pop
insl
and
sahf
enter
push
xor
mov
push
inc
push
sti
ljmp
pop
aas
popa
ror
lods
or
mov
ljmp
mov
mov
adc
insl
rclb
xchg
insl
icebp
mov
rolb
and
rcrl
pushf
xlat
cmpsb
pop
icebp
sub
inc
add
xchg
mov
inc
lahf
push
cmpsl
hlt
and
mov
dec
mov
pop
xchg
bound
arpl
jns
dec
into
popa
cld
pop
pop
or
out
adcl
fmuls
fwait
and
cld
addr16
ss
push
mov
loope
loop
sub
mov
pop
pop
rcrb
mov
lret
nop
cmc
push
or
dec
call
ffreep
out
cmp
hlt
imul
and
mov
aad
mov
in
xchg
orb
and
outsb
cmp
into
mov
mov
pop
jns
stos
test
jmp
jbe
sbb
lods
xchg
push
into
cmp
cs
orl
jno
sub
push
dec
icebp
jp
dec
cmp
and
xor
call
cmc
inc
ret
fwait
insl
sbb
mov
cmpsl
jae
test
ss
dec
inc
lods
loopne
push
sbb
mov
ss
mov
cld
and
push
in
dec
push
adc
cli
mov
pushf
and
cmp
inc
mov
fimuls
fsubrs
outsb
into
ficompl
jb
aad
int3
dec
xchg
cltd
mov
out
add
jns
test
push
addr16
add
jle
push
imul
jle
sahf
push
cmp
cmp
ss
dec
and
jp
xchg
popf
jnp
xchg
adc
jl
xchg
add
sbb
push
push
push
cli
mov
lcall
jg
mov
fwait
mov
ficoml
jbe
inc
jp
or
xor
int3
xor
push
mov
lods
mov
push
cmpsl
add
sub
add
cli
sbb
fwait
aas
add
aam
pop
adc
idiv
jg
push
or
js
bound
push
shlb
movsl
push
xorb
pop
sub
mov
dec
imul
imul
xor
into
insl
mov
or
in
or
cmpsl
jmp
lret
mov
jmp
cmp
ror
enter
gs
fmuls
push
add
psllw
push
pop
repz
mov
cld
and
jns
subb
mov
lahf
cmp
aaa
int3
xor
rcpps
pop
adc
pmuludq
es
lret
and
add
std
imul
scas
jmp
sbb
cmp
sti
inc
das
icebp
sub
jns
or
xchg
ss
ss
out
aam
inc
aad
or
rorb
cvtpi2ps
es
gs
js
pop
xchg
jnp
jns
arpl
insb
adc
mov
cmp
cmp
mov
rorl
push
xchg
and
das
sub
in
pushf
xchg
cmp
push
ljmp
shrb
dec
xor
jp
xchg
jo
add
inc
sub
fidivs
xor
add
shrl
adc
mov
repz
mov
and
mov
int3
stos
add
data16
mov
fisubs
inc
cmp
mov
or
movsb
xor
jb
lahf
je
idivl
mov
in
add
mov
cltd
lock
push
pop
sbb
mov
aaa
sbb
pop
out
cltd
popa
in
addb
pop
xor
mov
dec
popf
push
mov
xchg
fcompl
pusha
pop
shr
push
js
jbe
pop
push
pmullw
and
lret
jae
mov
clc
sub
pop
mov
and
shrl
push
mov
mov
push
push
xchg
xor
xchg
inc
add
lods
fdiv
xor
out
adc
rcll
cltd
push
imul
hlt
xchg
test
leave
push
xchg
les
loopne
pop
orl
das
pop
outsl
shrb
fidivl
lods
pop
ret
in
mov
movsl
mov
mov
jg
jl
adc
push
test
mov
pop
pop
jmp
or
insl
xor
dec
pop
jp
or
xchg
push
int
loopne
xchg
xchg
outsb
pop
pop
andl
jb
dec
inc
or
push
cmp
scas
dec
pop
jns
test
mov
aam
cs
mov
dec
push
jp
fiaddl
stos
test
pop
mov
jecxz
mov
std
loope
and
xlat
inc
popf
and
cli
std
inc
add
inc
xor
out
adc
push
pusha
imul
call
push
out
out
jecxz
push
push
cld
and
in
pop
cmp
gs
jae
pop
or
repz
cld
mov
aas
call
jge
xchg
popf
mov
loopne
pop
adc
xchg
pop
leave
cmp
dec
cld
jmp
iret
jge
out
cs
adcb
cmp
or
and
dec
movsb
nop
sti
xchg
mov
cmp
cli
xchg
xchg
push
push
mov
or
xor
rcrb
mov
mov
ds
lea
xor
sahf
popa
push
or
pop
and
aaa
dec
xchg
jl
movsb
xor
icebp
mov
cs
jp
dec
out
sbb
or
test
mov
xchg
lea
ss
or
dec
ljmp
adc
rcl
sti
jno
sbb
sub
or
loopne
and
hlt
negw
sub
sbb
lds
sbb
push
inc
aad
sbb
xchg
fldl
dec
pop
xchg
sub
adc
mov
dec
stc
jl
push
enter
sbb
clc
jmp
scas
push
sub
in
push
shlb
in
pop
loope
cs
and
mov
rcr
in
imull
cmp
ret
je
ffree
mov
int3
and
and
mov
movsb
dec
xchg
outsl
incb
xchg
fsubrp
add
outsl
test
jbe
or
stos
mov
enter
cmpl
sbb
sub
pushf
pop
fidivs
and
mov
les
out
out
in
stc
lea
and
xchg
outsb
das
stos
cld
cmp
pop
add
or
jns
and
cwtl
cmpsb
mov
outsb
mov
ljmp
mov
je
dec
stos
negl
inc
jnp
out
daa
inc
insb
dec
inc
mov
xchg
or
pop
pop
daa
mov
cld
and
outsl
adc
pop
xor
data16
xchg
idiv
outsl
mov
pop
add
lock
cmp
leave
xchg
dec
scas
push
dec
jae
sub
adc
pop
mov
pop
adc
icebp
enter
lahf
add
enter
cld
int3
repnz
xlat
cltd
xchg
insb
imul
cmpl
pushf
cmpb
cld
or
pop
jns
gs
aad
cmp
mov
or
sti
out
fbld
jg
pushfw
push
cmp
pop
loopne
or
mov
pop
push
mov
xchg
jg
mov
mov
call
dec
mov
mov
iret
jae
fdivl
jp
mov
sub
or
pop
inc
jg
dec
test
scas
imul
xor
mov
mov
inc
inc
inc
cwtl
add
inc
dec
cmc
xlat
mov
addr16
add
call
iret
loope
sub
inc
mov
cmp
test
mov
repz
loop
std
test
pop
adc
aas
adc
jl
dec
mov
xor
mov
adc
ss
mov
arpl
inc
scas
or
sub
test
pushf
in
and
pop
push
or
fistl
out
xchg
clc
lods
scas
jnp
cmpsl
dec
call
sbb
mov
stos
les
in
dec
imul
aam
pop
loope
imul
bound
sub
mov
imul
mov
cmp
or
xor
push
add
loop
sahf
sub
push
call
push
jge
mov
stos
call
or
mov
jecxz
js
test
dec
iret
and
lret
arpl
xor
mov
jle
mov
sbb
out
xlat
mov
fstpt
les
orl
fistpll
lcall
mov
movsl
inc
mov
push
jmp
mov
pop
int
fmuls
shll
pushl
xor
mov
hlt
xchg
and
jle
xchg
xor
adc
aas
pusha
les
add
js
fnstenv
inc
adcl
out
pushf
or
pop
lock
and
cmpsb
mov
mov
cmpsb
sbbl
cmp
cmp
dec
outsb
cmpsb
mov
in
js
in
fwait
xor
test
xor
adc
mov
jne
mov
or
fdivrl
mov
lcall
sbbb
cmc
jae
xor
push
ds
push
mov
mov
fldl
fisttpll
push
push
add
push
adc
add
mov
jle
pop
in
push
mov
inc
add
xchg
andb
daa
shlb
mov
daa
cli
loopne
jne
sbb
or
out
mov
das
sbb
adc
mov
xor
xchg
loop
mov
out
lds
popa
gs
adc
cmp
cltd
push
test
addl
out
add
inc
push
ret
sub
pop
aam
sarl
xchg
push
xor
andb
stos
cwtl
pop
mov
lret
pop
shll
add
pop
bound
mov
rcrb
gs
adcl
pop
bndmov
mov
xor
cmpsb
scas
pop
sbb
jnp
outsb
cld
dec
dec
repnz
and
sub
cmp
je
or
sbb
dec
xor
push
inc
cs
sahf
test
sbb
int3
xor
add
sub
and
jns
pop
lds
xchg
imul
cmpsl
ret
jo
dec
sbb
loop
xchg
into
lock
inc
adc
add
mov
mov
and
rorb
shll
cmp
sub
xor
and
lret
adc
int
call
ja
cmp
ljmp
leave
xor
xlat
test
sbb
hlt
pop
jl
push
pop
loop
lods
scas
aas
and
ljmp
pop
sbbb
push
outsl
push
jp
mov
dec
and
mov
cmpsb
xchg
mov
pop
call
xchg
and
jg
outsl
jge
adc
inc
jmp
aam
inc
pop
mov
out
pusha
cmpsl
out
rcr
hlt
xchg
jno
stos
cltd
test
adc
ret
cmp
and
xor
dec
pushf
mov
lea
pushf
pop
jp
cli
push
mov
sbb
pop
stc
fisttpll
pop
lock
scas
out
add
flds
sbb
subps
push
insb
mul
loope
sbb
lahf
cmp
into
mov
adc
imul
leave
mov
test
movb
xchg
push
push
lea
mov
fists
pop
insl
xor
jbe
xorb
fcmovnb
xor
xchg
fs
inc
cmp
insb
or
cmc
movsl
cwtl
jp
add
mov
ljmp
mov
cmp
push
or
and
sub
xor
seto
ljmp
push
leave
xchg
orb
dec
mov
cmp
in
leave
insb
ret
jmp
fcmovnu
or
xchg
push
gs
xlat
jne
cmpsl
mov
sbb
jnp
ja
sti
sbb
fsubrl
cmpsb
inc
sbb
scas
cwtl
adcb
mov
jp
jecxz
inc
sbb
repnz
jle
mov
push
mov
ficoms
mov
out
xchg
adc
shrb
sahf
fildl
cmp
sub
fmuls
filds
jg
dec
rorb
cs
push
jmp
mov
je
mov
xchg
in
imul
scas
dec
lcall
jle
mov
mov
js
and
std
pop
push
cmp
outsb
dec
pop
mov
daa
adc
pop
sbb
xchg
add
vmwrite
mov
inc
test
pop
jl
cld
or
sarb
sbb
fildll
addr16
jecxz
cmpsb
ss
out
adc
pop
mov
pop
pop
into
jp
das
das
push
mov
std
movsl
and
mov
inc
inc
and
mov
into
pop
scas
push
pop
daa
xchg
dec
push
mov
sub
or
lret
pushf
shll
aaa
aam
aaa
mov
adc
scas
push
jns
mov
xchg
aas
mov
es
daa
or
push
sub
pushf
mov
jne
xor
les
inc
mov
clc
cltd
ss
inc
and
fnstcw
jbe
fldt
cld
jle
push
dec
push
inc
push
jae
out
stos
es
orl
loopne
adc
das
cltd
std
add
pop
jo
rol
inc
add
stos
mov
mov
scas
pop
imul
push
xor
jbe
jae
pop
and
and
mov
dec
cmpsb
rcrb
decl
or
xchg
call
mov
push
xchg
sub
inc
jp
mov
es
scas
or
cmpsl
aas
arpl
adc
jle
dec
mov
push
ja
out
jecxz
iret
ffree
hlt
inc
and
and
out
dec
aad
jno
xchg
repnz
nop
mov
push
loope
push
fstpt
push
out
inc
inc
stos
sub
mov
sub
add
xchg
add
movsb
aaa
cli
pop
sub
insb
and
jno
inc
xor
data16
pop
sbb
mov
mov
or
mov
shrb
jns
xchg
adc
add
out
jmp
mov
or
adc
ja
inc
repnz
jl
shl
ja
push
pop
jb
sahf
mov
or
sub
inc
push
insl
mov
or
push
test
lods
sub
pop
incb
cmpsb
fcomps
cwtl
add
icebp
test
dec
xor
fcom
outsb
dec
mov
pop
arpl
ret
mov
cmp
lods
dec
dec
test
dec
subb
cmp
test
push
pop
mov
add
test
sbb
into
dec
fstp
outsl
mov
pop
xorl
mov
stos
xchg
xchg
add
repnz
mov
add
xchg
jecxz
jb
std
hlt
test
and
mov
shr
mov
sahf
adc
es
pushf
fldenv
sub
icebp
data16
mov
pusha
mov
push
ljmp
movsl
mov
or
mov
daa
pop
rorb
dec
stc
stos
mov
dec
shll
mov
lock
push
dec
push
out
jo
or
es
in
adc
mov
test
stc
lret
pop
and
mov
sarl
mov
fdivr
je
ds
enter
scas
mov
push
pop
fcmove
popa
sbb
movsl
xchg
push
dec
mov
imul
mov
movsb
fiadds
xlat
adc
pop
js
cltd
push
movsb
jnp
insb
in
or
stc
lret
movsb
push
call
scas
adc
imul
stos
or
sbb
flds
faddp
gs
clc
scas
pop
int
lret
inc
pop
adc
mov
js
or
fcmovu
add
sti
fsubl
pop
ret
mov
leave
sub
adc
mov
enter
xor
das
hlt
mov
and
pop
xchg
cltd
mov
call
and
push
sbb
mov
testl
mov
push
cmp
in
stc
sahf
lock
and
jb
jle
sbb
adc
sarl
dec
sbb
rclb
test
into
in
xlat
inc
cmp
pop
adc
stos
dec
adc
jecxz
push
insb
xchg
mov
push
sahf
lea
push
das
fcomi
icebp
outsb
add
inc
or
mov
inc
push
dec
cmc
test
inc
arpl
stos
inc
and
push
outsl
pop
mov
andb
mov
adc
fstl
xchg
jne
imul
out
jecxz
js
int3
push
push
mov
hlt
loopne
jecxz
adc
jno
or
fdivr
pusha
cmp
dec
ret
xchg
add
nop
int
pusha
mov
fldenv
or
jnp
clc
in
jbe
popa
je
std
lahf
xor
sbb
mov
loop
in
jnp
and
rorl
mov
imul
scas
mov
rorl
into
fld
xor
clc
test
cmp
cmpsb
sbb
mov
pushf
cltd
stos
inc
lret
or
out
and
stos
rcll
pushl
stos
adc
pusha
imul
adc
jae
mov
fstl
inc
test
sub
dec
in
pop
fldl
pop
imul
pop
sub
sub
mov
sti
les
push
cmpsl
divl
cli
cmpsl
lret
dec
out
add
inc
jge
sub
mov
adc
add
add
xchg
sub
ss
and
dec
popf
dec
cltd
xor
push
sahf
std
xchg
or
gs
mov
lret
out
jecxz
xor
sub
scas
or
inc
iret
int
lds
ss
cmp
loope
clc
xchg
adc
sbb
inc
vpinsrw
add
sub
mov
lock
pop
xor
mov
lcall
push
sub
ja
fwait
outsb
push
in
pop
out
jecxz
adc
movsb
sub
ja
lret
shrb
int
mov
les
adc
outsl
jo
sbb
pop
mov
pop
loope
imulb
addl
jg
mov
jnp
insb
jo
jo
out
and
cmp
xchg
mov
repz
mov
mov
orl
add
fisubrl
or
jecxz
pop
aas
mov
adc
pop
ss
cmpsb
repz
das
aas
testl
mov
mov
negl
pop
stos
ret
jnp
shll
xor
jle
jmp
loop
inc
ficoml
into
test
pop
fnstcw
add
sub
sub
mov
mov
test
shl
in
loop
insb
outsl
ss
fsubs
and
cmpsb
in
cmp
sbb
popf
push
mov
pop
mov
shll
push
xor
call
mov
or
jecxz
aam
cmpsl
imul
stc
add
push
xchg
mov
inc
sti
xchg
adc
loope
xchg
das
repz
or
pop
inc
into
out
push
xchg
jl
es
in
negl
outsl
ljmp
add
dec
jmp
jae
loop
push
cld
ret
mov
or
rol
adc
ret
orb
or
and
mov
push
dec
jmp
divb
ja
push
gs
stos
loop
cld
dec
push
mov
or
jle
lds
push
and
sub
fwait
test
sbb
fiadds
add
test
js
iret
xor
or
mov
push
lds
pop
outsb
sub
fiaddl
jb
addl
jbe
cmp
adc
jns
push
enter
dec
cmp
int3
sub
cmp
jne
aas
stos
sub
pop
mov
and
inc
lahf
mov
popa
bound
call
jg
mov
out
rorb
int3
mov
dec
and
cmp
sbb
ja
jns
aas
lods
inc
add
movsl
leave
rcll
mov
xchg
inc
dec
mov
and
push
push
lea
jecxz
into
lds
or
icebp
std
rorl
into
xor
cmp
sbbb
rclb
fdivl
in
insb
test
das
push
inc
mov
sub
jb
push
aas
je
sub
lahf
mov
jmp
mov
in
pop
rol
sub
imul
lret
ret
and
xor
es
lahf
pop
xor
sti
pusha
pusha
xor
mov
das
mov
push
jle
lret
ret
push
ds
mov
mov
mov
mov
or
movsb
lahf
dec
pop
push
lcall
push
dec
stos
rcrl
mov
inc
rcrl
icebp
pop
fld
jb
icebp
or
cmp
push
sbb
je
test
cmp
mov
xchg
and
jnp
int3
push
sub
pop
idivb
push
fisttpll
in
sub
or
xor
xor
xor
addr16
nop
cltd
sub
and
repz
inc
mov
scas
pop
hlt
fisubs
or
inc
mov
loopne
dec
push
idivb
add
subb
cld
roll
inc
add
in
icebp
in
addl
sti
xor
xchg
cmpsb
movsl
mov
add
pop
out
out
or
pop
pop
loopne
out
cmp
imul
or
xor
das
xchg
setne
xchg
add
adc
push
movl
in
pop
je
xor
pop
xor
fwait
pop
sbb
mov
jb
cmp
or
test
push
les
mov
jae
cmp
inc
dec
push
test
add
js
clc
push
dec
mov
lcall
les
mov
les
cld
xchg
sar
and
pusha
push
mov
mov
mov
xchg
inc
pop
jo
push
adc
pop
iret
fstps
ficomps
lods
xor
jmp
add
mov
loop
fsubl
mov
jbe
jl
push
sub
dec
aas
or
xchg
movsb
jmp
iret
mov
xchg
ret
inc
stos
lods
or
push
xor
scas
popf
lods
cmp
jno
ljmp
sbb
repz
fiadds
test
add
xor
mov
cmpsb
inc
ficoml
int3
enter
popa
add
push
fildll
xlat
or
stc
arpl
loopne
lahf
xchg
mov
inc
push
ficoms
je
movsl
inc
iret
stos
std
mov
sbb
jmp
push
push
xchg
mov
mov
scas
outsb
xchg
data16
mov
cmp
fbstp
fcmove
push
pop
pop
mov
sbb
lods
mov
dec
pusha
push
dec
dec
fisubrs
pop
pop
stos
add
test
jne
mov
cmp
in
jl
leave
and
or
lods
mov
ret
mov
and
les
sub
divb
cmpsb
int
bound
sti
jp
leave
outsb
sbb
fcompl
ljmp
mov
sti
push
inc
fisubs
lock
inc
push
mov
movsl
mov
pop
imul
cmp
push
shrl
xor
lcall
test
adc
clc
testl
xchg
lods
imul
icebp
lea
jb
out
inc
in
sbb
repnz
pop
mov
in
js
and
cmc
fxch
inc
push
push
insl
sbb
mov
cmovs
push
mov
ret
adc
xchg
jb
movsb
cmp
shlb
scas
or
mov
ljmp
ljmp
cmp
xor
rcrl
mov
hlt
sbb
fisttpl
or
pusha
jecxz
int
push
mov
test
mov
stos
add
pop
fimuls
pop
fiaddl
in
add
xor
lds
jne
sub
jbe
pusha
adc
jmp
out
ds
push
in
push
cmp
fldl
test
xchg
mov
repnz
cwtl
sbb
outsb
cmp
and
xchg
push
das
pusha
hlt
and
cltd
aaa
mov
fsts
dec
dec
mov
enter
pop
pop
dec
dec
in
bound
sub
fcoml
xor
and
inc
push
imul
shr
clc
je
popa
add
mov
jl
shl
pop
lea
daa
ljmp
mov
mov
sub
inc
insb
pop
cmp
sub
mov
ret
stos
pop
push
dec
or
sbb
ret
dec
mov
mov
cmp
clc
fwait
mov
out
mov
loope
imulb
xchg
les
adc
lahf
and
push
out
xlat
or
je
xlat
cmp
cs
test
cmp
int3
fisubl
xor
sbb
pop
adc
out
xor
pop
push
cs
loopne
push
out
filds
data16
lahf
outsb
and
push
scas
inc
fcompl
xor
in
or
rorb
add
lcall
jnp
cmp
loope
jle
pop
aas
stc
inc
push
les
stos
stos
rclb
mov
jo
out
ficomps
sub
cltd
mov
pop
dec
test
or
loope
adc
cmpsl
push
add
int3
addl
pop
mov
dec
pop
mov
sbb
and
push
inc
loop
mov
cmp
sub
adcb
add
xchg
dec
sub
pop
sahf
fstps
mov
mov
jp
ret
inc
aas
mov
aas
mov
push
pop
pop
repz
and
jmp
inc
push
lcall
sti
sbb
push
inc
fdivrs
out
lcall
pushf
hlt
int3
push
pop
repnz
mov
pop
xor
in
stos
and
rcll
push
jp
leave
and
in
xchg
imul
pop
roll
js
add
cmp
cmp
ss
mov
xor
in
rorl
pmuludq
test
cmp
xchg
test
outsl
inc
sarb
push
jns
ret
push
fs
movsl
lret
pusha
ljmp
xor
aaa
pop
lcall
xrelease
inc
rorb
jnp
ficoml
lcall
imulb
dec
or
sbb
pop
cmp
loope
ror
lock
xchg
and
cld
jbe
mov
aad
add
xor
inc
cld
and
mov
jecxz
sbb
xchg
test
mov
popf
loope
jge
repz
and
in
je
mov
daa
orb
in
and
jl
leave
mov
and
cld
xlat
xor
test
pusha
dec
subps
mov
imul
xlat
repz
dec
mov
stos
mov
subl
sub
inc
mov
push
aad
out
mov
lcall
push
ljmp
enter
mov
rcll
out
adc
out
jp,pn
scas
movsb
loopne
mov
add
adc
pop
add
pushf
int3
mov
adcb
cmp
mov
lods
gs
lret
in
ret
mov
mov
pop
cli
push
ror
orl
and
mov
lret
push
lock
lock
cmpsl
mov
shlb
jae
pop
xor
and
mov
js
add
dec
dec
cmpsb
lds
adc
push
ds
inc
repnz
cltd
dec
scas
jge
add
sub
repz
outsl
movsb
pop
fstl
jmp
xchg
movsb
js
push
pop
adc
cld
mov
add
dec
enter
mov
ds
jo
sub
nop
mov
jbe
xchg
or
sub
sub
inc
pop
or
rcrb
push
bswap
testl
aad
or
sbb
loop
pop
cltd
cmpsl
pop
add
lahf
js
in
stc
pop
rorb
xchg
mov
js
mov
dec
mov
aaa
cmpsb
daa
mov
or
sahf
fisttpll
fsub
sbb
and
xchg
dec
shrb
add
mov
popa
adc
or
mov
mov
lahf
pusha
and
movsl
push
repz
test
movsl
shrl
cmp
inc
pop
pop
ja
sub
popa
sbb
repz
stos
push
mov
sbb
aad
inc
xor
dec
sub
fmuls
sub
mov
repnz
jns
xor
ds
inc
lcall
or
out
loop
push
cmp
fidivl
xchg
leave
in
mov
jge
popfw
nop
sahf
aas
lcall
jbe
xor
mov
jae
clc
lahf
loope
repz
mov
mov
adc
mov
push
insl
popa
push
dec
icebp
mov
fistl
repnz
popa
fcoml
ss
outsb
mov
dec
mov
sbb
lods
sub
push
xchg
enter
push
jp
int
in
mov
xor
or
dec
fwait
fwait
push
mov
sbb
push
leave
and
sub
hlt
int
mov
adc
inc
add
jmp
fsubr
dec
xchg
lods
dec
int3
test
cmp
fs
xchg
jno
outsb
mov
lcall
stos
dec
adc
sarb
jp
xchg
and
cmp
ss
iret
icebp
hlt
dec
insb
pusha
pusha
pop
fbld
push
xor
inc
mov
repnz
add
cmp
movl
imul
test
mul
or
xor
icebp
mov
mov
sbb
ficomps
je
pop
sub
aad
sbb
shrb
dec
pop
sub
adc
sbb
mov
mov
mov
xchg
xchg
sbb
dec
sub
lds
fwait
fs
push
jge
push
jns
mov
cmp
mov
lods
cltd
xor
or
sbb
sub
pop
lea
stc
nop
cmp
pop
jmp
cmp
mov
push
sub
mov
bound
mov
lods
aam
jecxz
sub
adc
lcall
push
in
rorb
bound
mov
lret
fs
xor
in
pop
data16
cmp
jns
cmpsl
cmpb
jp
push
jmp
scas
lret
out
dec
test
lea
inc
insl
add
call
mov
scas
xchg
or
xor
push
rcrl
xor
push
sbb
sti
sbb
mov
negb
pusha
mov
push
add
test
jne
js
mov
scas
push
aam
ljmp
adc
dec
mov
cmp
ret
sub
repnz
push
mov
pop
jge,pn
or
test
and
mov
push
pop
dec
test
sub
xchg
shl
pop
nop
mov
mov
ror
push
and
data16
mov
movntq
divb
fs
dec
cmp
nop
dec
lret
mov
outsb
lods
pop
movsl
push
mov
or
inc
add
adc
inc
in
dec
mov
incl
pop
js
push
fidivrl
test
xchg
or
insl
arpl
les
outsl
jno
scas
fnstsw
stc
mov
fcomp
lret
fs
lahf
fbld
adc
dec
mov
fwait
cmp
mov
pop
sbbl
leave
pop
jns
call
jg
xor
stos
push
xchg
dec
xor
xor
add
xor
loopne
sbbb
dec
xchg
test
jno
out
and
mov
icebp
cmp
jp
xor
js
xor
loop
inc
and
inc
pop
jg
sarl
sub
push
fcom
inc
negl
mov
in
lods
mov
inc
jb
inc
lcall
je
mov
or
xor
loop
cmp
push
adc
xchg
int3
gs
push
pusha
jmp
adc
pop
insb
inc
sub
pop
ret
into
push
aas
out
or
lds
and
lock
pop
jnp
mov
movb
leave
dec
bound
mov
arpl
dec
pushf
std
inc
jb
orb
mov
and
lock
mov
cs
xchg
jo
aad
sbb
ljmp
shll
jmp
jns
mov
in
mov
lods
loope
addr16
or
xchg
sub
icebp
xor
sbb
mov
fidivrs
push
push
aas
out
add
cmp
pop
jb
adc
arpl
adc
push
rorb
jmp
ljmp
ss
lea
jecxz
jne
cld
xchg
sbb
dec
shll
xchg
outsl
mov
cmp
out
int
push
aaa
mov
push
mov
scas
xchg
mov
clc
ficoml
mov
out
mov
fmul
mov
mov
pop
arpl
adc
pop
ss
mov
cmp
sub
push
loope
outsl
push
jb
cwtl
and
push
jmp
xor
pushf
cmp
sbb
lret
fisttpl
and
mov
fsubs
movsb
jecxz
cmp
and
jnp
cmp
and
daa
jmp
push
or
cmp
mov
mov
sarl
sbb
arpl
insb
repnz
inc
lds
rcl
sbb
jg
outsb
xor
scas
in
dec
lock
mov
pop
data16
and
mov
movl
push
mov
pop
mov
cli
dec
add
pop
fsubl
xor
lock
fldl
adc
and
xchg
dec
repz
mov
insb
inc
sahf
xchg
dec
in
outsl
push
stc
mov
popa
leave
in
or
cmp
push
pop
cmpsl
sub
leave
rcl
stc
stos
xor
js
or
call
stos
or
add
sub
stos
xor
loopne
loopne
cltd
sbb
or
pop
xchg
or
in
pop
jnp
xchg
je
stos
and
push
in
sti
imul
sti
xchg
popf
test
or
jbe
push
out
loopne
fwait
ret
outsb
int
daa
dec
sub
mov
push
xor
jne
sub
fsub
loop
dec
adc
xchg
out
or
add
mov
shll
fcomps
repnz
lahf
mov
push
jecxz
call
xchg
jb
pop
gs
lcall
sub
mov
jno
and
mov
xor
jb
mov
xor
dec
iret
dec
dec
mov
hlt
imulb
nop
int3
lcall
xchg
int
inc
bound
lods
pop
aas
lods
es
pop
enter
mov
leave
mov
inc
mov
push
lret
sbb
data16
idiv
js
mov
add
clc
cmpsl
fwait
mov
movb
and
insl
cmp
push
stos
push
xchg
lds
lret
ss
fisubrl
sub
sti
sbb
xor
inc
inc
mov
ja
out
and
push
fldcw
cmp
call
push
dec
push
je
addr16
dec
test
cmp
sbb
mov
jmp
dec
sub
ljmp
leave
into
scas
jmp
mov
stos
out
sbb
mov
push
jl
out
adcl
aaa
arpl
cmpsb
jo
ret
cmp
xor
jno
pop
ret
test
and
inc
sub
pop
inc
lret
mov
cwtl
push
dec
jp
pop
ja
insb
adc
adc
fwait
imul
mov
xchg
aad
stc
in
or
jo
jno
test
adc
in
insb
lret
adc
in
lahf
stos
out
or
jecxz
shll
jg
imul
push
setl
adc
fwait
or
scas
sub
lock
jmp
mov
lods
jge
insl
enter
into
mov
fdivrs
push
lcall
ror
jns
cltd
pop
add
cltd
jmp
mov
stc
std
icebp
and
mov
das
push
cmp
lock
stc
in
sbb
loopne
mov
cmp
in
scas
jns
push
jns
popa
cltd
mov
inc
add
adc
cmp
inc
fsubrs
jae
dec
mov
iret
dec
aaa
add
xchg
push
pop
in
shlb
sbb
in
lea
loop
add
aas
flds
jle
mov
dec
aam
imulb
imul
pop
push
je
sti
xchg
mov
and
mov
xlat
out
cmp
iret
jno
sbb
xorl
push
dec
insl
fdivl
mov
push
pop
test
call
xchg
mov
jp
in
shrb
xchg
mov
xchg
mov
jmp
stos
push
cli
add
enter
sbb
mov
xor
dec
jg,pt
testb
test
jmp
lods
pusha
ja
insl
xchg
push
in
loope
add
mov
adc
dec
bound
data16
insb
jb
jg
dec
xchg
js
mov
int3
gs
and
cmp
pop
push
xor
inc
mov
push
lahf
push
mov
mov
jl
ds
or
mov
loope
out
sub
mov
ja
mov
enter
pop
stc
repnz
ds
stos
mov
inc
dec
cmp
not
gs
push
adc
and
in
and
sahf
pop
fldt
dec
add
pushf
mov
push
xchg
psrad
xchg
sbb
mov
pushf
push
sbb
fsubr
les
aam
imul
lcall
xchg
clc
lahf
out
mov
cmc
mov
les
sarl
jae
fsubrl
aaa
test
sahf
jge
xor
inc
inc
test
dec
addr16
cmp
xor
test
dec
or
out
mov
xchg
xchg
jbe
add
stos
jns
in
push
inc
dec
inc
xchg
outsb
inc
push
or
xor
or
lds
cmc
imul
sub
insb
mov
xor
mov
push
jb
push
nop
sub
push
xor
shrb
and
cmpsb
add
fnsave
getsec
in
or
dec
and
pop
mov
xorb
adc
mov
add
ja
ss
stc
pusha
stos
outsl
std
xorb
xchg
and
outsb
cmp
std
adc
das
sub
imul
ss
sbb
cmc
loopne
ficoms
jnp
bound
jmp
sahf
icebp
insl
cmp
sbb
test
inc
repz
pushf
imul
and
ja
xchg
dec
pop
out
xchg
in
pop
and
dec
shll
mov
jnp
pop
jo
cmp
xchg
fcoms
cmp
mov
movsb
sub
enter
les
je
pop
stc
and
test
push
stos
rorb
arpl
insl
das
and
in
cmpsl
mov
adc
aaa
add
divb
aad
pop
jno
jne
cmc
dec
clc
jb
push
enter
loope
mov
idivb
icebp
fs
jle
dec
sbb
idivb
dec
fdivr
rcrl
test
std
mov
in
cwtl
outsb
popf
pop
mov
mov
inc
ds
dec
cmpsb
pushf
xchg
jge
xchg
outsl
jnp
sbb
loopne
cs
addl
cmp
ljmp
inc
in
dec
cmpsb
jle
push
add
cmpl
mov
insl
push
jle
addl
xor
fildl
rcrb
sarl
jae
mov
mov
sub
shrb
pop
add
fdivs
cmp
mov
iret
insb
popa
fwait
dec
ja
imull
jb
cmp
outsb
leave
jg
popa
gs
jnp
add
pop
jg
mov
xchg
mov
imul
in
outsl
sub
dec
out
mov
mov
out
adc
cwtl
shrl
or
leave
gs
test
fcmovne
jp
outsb
sub
adc
cvtps2pi
pop
ljmp
loopne
ficomps
outsb
mov
jnp
xlat
hlt
imul
lahf
mov
sub
ret
std
fcomps
push
dec
roll
xchg
mov
mov
movsl
add
ficoml
daa
push
cmpsb
loop
cs
loop
lods
imul
sbb
sub
xchg
scas
cwtl
ds
jo
sub
push
flds
pop
pop
lock
cmp
stos
into
in
imul
sbb
lret
lods
roll
cltd
sub
sbb
inc
adc
inc
xorl
sub
repnz
call
pop
pop
adcl
out
pop
das
je
push
cli
push
ss
jo
pop
lods
ja
mov
ljmp
xlat
loopne
dec
xchg
xor
lods
adc
jno
sti
and
loopne
les
dec
jg
jb
ljmp
cmp
add
push
fwait
or
or
push
stos
push
push
int
push
fdivl
add
jecxz
stos
cwtl
subl
xor
xchg
cmp
mov
cwtl
mov
jmp
enter
mov
ficoml
sub
add
mov
pop
pop
inc
popf
mov
daa
pop
push
call
push
stos
jle
out
pop
mov
stos
sbb
jmp
cmpsl
mov
shll
outsb
sbb
mov
and
clc
pop
ret
insb
jae
in
push
into
out
mov
fcomip
scas
repz
or
jnp
pop
or
je
aas
inc
dec
lret
popf
pop
sbb
pushf
lea
lret
push
call
add
pop
push
xor
xlat
mov
iret
rorl
adc
fcoml
insb
scas
inc
stos
mov
and
das
fxch
int
mov
sbb
movsb
add
popa
out
enter
out
mov
cli
int
cmc
call
scas
lods
push
test
and
cmpsl
scas
mov
jmp
call
push
fimull
lea
mov
stos
add
rsqrtps
hlt
lods
sbb
movsb
inc
lds
cmp
lahf
inc
sub
ja
mov
push
mov
mov
add
push
sbbb
out
sub
ljmp
frstor
and
out
dec
cwtl
jae
sbb
rclb
mov
aad
sahf
or
mov
shr
pop
dec
pop
shll
pusha
movsl
int3
sub
pop
pop
pop
adc
std
mov
cmp
enter
aam
vpor
les
pop
sub
xchg
les
sbb
cmc
out
pop
scas
pop
or
shrb
test
pop
pop
sbb
fidivrs
andb
dec
rcrb
push
xchg
or
shl
sub
xlat
divl
mov
adc
js
call
dec
cmp
shlb
aad
inc
xchg
insb
int
sbb
push
mov
lcall
subb
or
sub
enter
dec
dec
mov
inc
xchg
dec
push
lahf
adc
and
push
rol
jnp
lret
jns
dec
jmp
dec
arpl
lea
jl
mov
lret
adc
in
jno
push
cwtl
mov
cmp
lock
xor
xchg
mov
ja
mov
mov
mov
mov
ss
adc
xchg
dec
push
popf
or
sub
hlt
push
xchg
pop
popa
sbb
aam
cmp
pusha
xchg
add
loopne,pn
shll
in
cli
cmp
ljmp
jge
sarb
int3
sahf
cmp
push
insb
fmull
pop
pop
jo
inc
fildl
pop
sub
or
cmpsl
mov
sti
lret
test
or
push
and
inc
jns
or
jge
sub
int3
movl
adc
add
imul
mov
fcomi
stos
imul
out
fisubs
mov
nop
mov
jne
adcb
data16
idivl
out
testl
jnp
mov
mov
es
sbb
out
inc
or
stc
nop
shrb
push
jns
inc
daa
xchg
push
ret
pop
mov
add
and
cmp
gs
push
dec
dec
sub
cmc
fs
notl
leave
sbb
sahf
mov
ja
cmp
sub
and
cmpsl
in
aam
mov
xor
mov
in
ss
jne
mov
xor
shlb
test
ljmp
pop
jmp
movsl
xchg
mov
rcrl
dec
leavew
pop
dec
lcall
cmp
lret
push
imulb
adc
cmc
aam
xchg
hlt
mov
sub
pushf
fsubr
push
fucomi
sbb
idiv
dec
xor
repz
lock
pop
xchg
pop
sarl
add
lret
push
bound
pop
cmp
inc
lret
iret
out
jle
cmp
pop
or
cmpsl
popf
adc
cs
xor
shrb
imul
mov
outsl
insb
or
rcrl
popf
cmp
movsb
jg
out
and
xor
lret
data16
mov
xor
jb
fwait
sub
mov
movlps
sub
adc
cwtl
or
std
or
push
xor
fs
sbb
ljmp
mov
pop
loope
les
push
jae
les
cmp
and
or
sti
sbb
xor
xchg
mov
adc
fsubrl
mov
jl
aad
pushf
sub
hlt
mov
fnstsw
mov
cli
dec
xor
cmc
pop
ret
sub
outsl
clc
repnz
or
out
cmpsl
loopne
adc
push
fcmovnbe
outsb
leave
sahf
lret
push
jmp
xchg
orb
sbb
jnp
lcall
jbe
mov
push
movsl
ficomps
push
cmc
test
into
gs
lock
add
mov
mov
inc
push
cld
jbe
xchg
sub
pop
sub
mov
subb
std
mov
jo
es
mov
dec
cwtl
outsb
fadd
gs
cmp
push
aad
add
or
dec
cmpsb
adc
pop
outsb
mov
xchg
inc
loopne
iret
xchg
imul
and
mov
adc
sub
icebp
mov
inc
mov
sub
xor
fucom
lahf
pop
pop
fdivl
sti
sub
int3
mov
dec
insb
fmul
add
mov
jge,pt
repnz
mov
mov
out
or
push
clc
dec
outsl
add
pop
sbb
jl
jno
lcall
mov
dec
loop
cmp
and
test
test
push
daa
push
add
and
sbb
imul
sub
xlat
pop
dec
repz
jno
sti
jne
jno
sti
and
xor
sub
das
jo
mov
lcall
jnp
cld
lods
sbb
jp
cmp
cmp
scas
mov
lea
ds
cwtl
jp
into
stos
aad
cld
stos
aam
sti
xchg
lahf
addr16
jl
icebp
xchg
leave
mov
out
mov
jne
pusha
and
or
add
push
test
mull
rclb
add
cmpsb
test
push
stc
mov
mov
cmp
lods
insb
xchg
sbb
add
cs
or
inc
lods
mov
nop
ljmp
jne
inc
test
aaa
jecxz
mov
or
cltd
dec
jmp
xchg
movsb
xchg
mov
push
dec
cwtl
xor
lods
js
insl
xchg
in
dec
mov
mov
dec
test
pmulhw
aas
out
into
and
jbe
mov
lcall
insl
push
inc
mov
mov
jle
test
aas
pusha
movsb
inc
jg
jns
pop
lea
repnz
int
xchg
xchg
sahf
dec
sub
and
mov
leave
or
and
or
sbb
dec
mov
jge
mov
push
pop
or
cmp
pop
arpl
adc
adc
int3
xchg
in
fistps
add
lcall
or
add
mov
xor
xor
lret
mov
jns
lahf
sub
out
push
or
fdiv
repz
add
call
xchg
pop
fs
mov
jp
add
jae
sbb
xor
aas
mov
sbb
mov
and
pushf
lcall
inc
xchg
push
add
data16
sbb
mov
andnps
fcmovu
stos
xchg
cmpsb
jbe
or
inc
fwait
jae
cmpsb
dec
enter
stos
mov
add
add
or
adc
rclb
push
cld
test
je
and
pop
in
shrl
cmp
aam
lahf
fldcw
jp
inc
jns
sti
jp
fmul
jg
dec
pushf
pop
insb
adc
fwait
dec
outsl
mov
call
add
adc
dec
stos
sbb
jns
fnstcw
xchg
sbb
xlat
popa
sahf
mov
xlat
mov
adc
or
inc
sbb
pop
push
pop
xchg
or
sub
dec
sbb
lds
dec
roll
shlb
sub
push
dec
mov
stos
sbb
sbb
aam
push
xchg
add
inc
shll
and
mov
imul
int3
cltd
sub
sarb
xor
and
pushf
or
nop
mull
push
fadds
test
repnz
cmpsb
push
xor
pop
lock
movsl
lcall
arpl
es
and
orl
jns
aas
push
push
sub
out
js
mov
bnd
ljmp
pop
pushf
push
mov
xorl
mov
shll
mov
shrb
cmpsb
push
rcl
and
dec
and
lret
pop
pop
xor
ret
mov
sarl
enter
dec
sti
xchg
dec
dec
pusha
cwtl
mov
jbe
dec
incb
mov
pop
testb
mov
fstpt
sbb
cmp
adc
dec
inc
je
sub
mov
int3
je
ror
mov
js
inc
pop
ja
cli
xchg
inc
lods
mov
add
sahf
ljmp
test
add
stos
sub
sbb
dec
rcll
fldl
mov
mov
pop
sbb
cmp
stos
mov
int3
cmpl
inc
jo
pop
jl
loopne
ffreep
inc
daa
popa
pop
add
mov
subb
rolb
stos
lock
mov
sbb
movsl
adc
cmc
test
mov
dec
test
sbb
xchg
cmc
sub
ds
jae
xchg
jnp
add
pop
and
pop
std
cld
repz
dec
mov
lock
out
add
cmp
hlt
lcall
sarl
dec
enter
scas
pop
adcb
popa
in
pop
stos
and
int
lds
adc
cmp
imull
cmp
js
jl
in
jl
js
test
mov
pop
negl
cmc
test
cmp
mov
xchg
mov
adc
ljmp
fidivrl
and
aaa
lcall
cmpl
pop
aad
push
pushf
and
mov
mov
sbb
insb
mov
in
jmp
rorb
pop
jno
shll
outsb
fisttpl
shlb
mov
leave
sub
cld
xor
mov
mov
and
lret
dec
sbb
fcomps
and
mov
test
call
in
sbb
fwait
or
pop
loop
arpl
inc
scas
sub
add
xchg
mov
test
in
sbb
test
ret
test
mov
arpl
xchg
xor
mov
sub
aad
out
std
rolb
mov
jle
lods
loop
mov
add
mov
jb
sub
fwait
lds
add
inc
dec
lret
adc
cli
out
jno
mov
jne
fs
test
bound
call
sub
push
cltd
mov
cli
cli
push
pop
xlat
js
popf
inc
xor
mov
xor
cmp
pop
dec
pushf
popa
push
pushf
test
mov
xchg
fwait
sub
pop
and
cmpl
adc
adc
cmp
mov
or
lcall
icebp
inc
xchg
lret
lret
xlat
repnz
out
lock
shlb
out
jmp
repnz
test
lock
adc
roll
pop
push
popf
push
fidivrs
out
lock
and
sbb
pop
popa
bound
sti
in
and
pushf
repz
mov
mov
pop
xchg
std
pop
xchg
xor
and
insl
cmp
mov
push
inc
mov
cs
mov
sub
sti
lock
mov
cmp
leavew
xor
or
add
push
stc
mov
je
cmp
inc
mov
sub
cmp
pop
lods
adc
movsl
mov
mov
leave
pop
mov
jno
sbb
aam
in
pop
inc
xchg
push
pop
int3
inc
mov
pop
aaa
jmp
adc
push
test
data16
popf
mov
aad
stc
leave
adc
push
mov
sub
ret
sub
push
pusha
add
and
sub
push
or
xor
mov
rol
insl
in
mov
jbe
cmpsb
leave
fstpl
movsl
push
movsl
jge
inc
roll
pop
jp
das
cmp
js
push
cmc
inc
cmc
popf
mov
ret
mov
fstpl
jp
leave
fcoml
inc
adc
and
lods
stos
add
xchg
sahf
cmp
fcmovb
or
mov
lods
push
stos
push
addr16
or
enter
add
ljmp
jmp
jge
loopne
fiadds
push
outsb
ds
dec
cmpsl
jle
pop
rolb
stos
hlt
push
push
icebp
stc
sub
add
bound
test
pop
or
push
cli
or
adc
fisubl
xor
pop
sti
insb
ret
adc
or
insb
push
inc
es
xor
cmpsb
push
or
xchg
mov
jecxz
pop
pop
pop
or
cwtl
or
cmpsl
rcr
mov
dec
xor
loopne
pop
mov
in
mov
or
jmp
jns
popf
ret
arpl
inc
gs
or
aas
mov
rcl
sbb
aas
sbb
push
jbe
fmuls
lcall
clc
dec
sub
into
jne
sbb
mov
cmp
jo
pop
sub
scas
lret
stos
aaa
xchg
dec
and
ret
and
jge
aaa
fistl
icebp
inc
xor
xor
cmc
gs
stos
mov
in
jno
fs
jecxz
loope
es
cmp
dec
cmp
js
nop
xchg
test
jecxz
inc
mov
nop
fidivl
mov
arpl
or
cmpsb
push
stos
mov
mov
call
push
push
mov
fisubs
and
aad
dec
les
mov
mov
mov
ss
hlt
dec
data16
dec
inc
adc
ss
xchg
adc
mov
jnp
cli
fwait
jo
inc
dec
insl
pop
jge
fbld
test
jo
mov
rcr
cmp
cmp
inc
xor
adc
jo
and
mov
lock
sub
insl
and
rcr
cmp
sti
adc
in
inc
mov
pop
ffreep
test
loope
repnz
dec
cmp
arpl
test
aas
xchg
dec
aad
ret
imul
pop
jnp
cmp
adc
adc
push
popf
imul
sub
mov
jbe
sbb
nop
xchg
pop
call
aaa
mov
pop
insb
ja
xchg
int
pop
cltd
pusha
outsb
popf
outsb
in
test
aad
leave
or
pop
jo
add
std
inc
adc
fsubr
rcl
cmp
movl
in
stos
mov
xor
fbld
cmp
shlb
addr16
lcall
decb
jae
mov
mov
jbe
push
xor
mov
rcr
push
fildl
shlb
or
push
arpl
jg
pop
dec
xchg
fcomps
sbb
or
mov
ret
insl
or
mov
xor
pop
rcll
pop
stos
xor
jne
jle
dec
push
lcall
pop
js
cmp
xchg
pushf
add
push
lahf
mov
nop
mov
insb
add
sub
insl
cmp
ss
shrl
cmpsl
aas
in
mov
inc
les
dec
push
ljmp
cs
lock
pop
jge
addb
ret
sub
out
cmpsl
pop
jbe
aam
cli
stos
or
lods
pushf
adc
aad
sti
and
in
scas
jbe
pop
ja
popl
subb
inc
jne
in
inc
das
shr
popa
mov
mov
sub
inc
imul
stos
inc
add
xchg
in
xchg
repnz
pop
dec
fcomip
mov
jnp
aam
dec
int
xor
and
rolb
mov
aas
jl
mov
jmp
fldl2t
push
mov
das
sub
jmp
insb
addr16
into
dec
adc
inc
lods
mov
int3
add
jge
lods
mov
sbb
xchg
jl
loopne
mov
add
lds
mull
loop
pop
fs
testl
or
test
imul
jmp
out
loop
cmpsl
je
lahf
iret
movsl
fdivrs
sub
pushf
es
sub
lea
movsl
adc
insl
rcll
sub
sar
loop
data16
sbb
push
sub
mov
dec
aam
repz
xor
aam
cwtl
mov
scas
je
orl
addl
inc
and
jbe
add
stos
nop
add
ds
sti
iret
mov
nop
or
inc
mulb
dec
aaa
imull
xchg
shrb
pop
shrl
pop
push
inc
pop
jnp
push
fcomi
pop
sub
add
pushf
data16
cmp
insl
sub
aaa
enter
lret
daa
or
dec
lods
dec
into
or
loope
or
xchg
stc
xchg
cmp
pop
pop
ja
or
ftst
add
hlt
push
andl
in
pop
test
push
cmc
sub
sahf
inc
cmp
xor
stc
jne
mov
mov
mov
ss
and
dec
icebp
dec
repnz
out
mov
divb
setns
jo
jp
or
ss
fstpl
xchg
pop
push
pop
jle
mov
in
sbbl
mov
and
loop
incl
lea
or
jecxz
ss
dec
cld
sbb
adc
iret
fmuls
mov
repz
push
pop
push
lret
pusha
stos
iret
dec
pop
movsl
lods
mov
sar
out
ds
insl
pop
add
sbbb
cmp
mov
xor
push
loopne
and
push
ffreep
pop
fdivrs
xchg
cltd
in
adc
pop
outsl
xor
lret
enter
les
scas
push
sub
addr16
sbb
xor
popf
mov
push
jbe
add
mov
hlt
fs
cmp
cmp
ljmp
xchg
fisubrl
test
addr16
bnd
rclb
and
or
std
jl
push
hlt
push
test
xchg
push
push
cmp
out
ret
out
loope
and
fisubs
and
test
sbb
mov
lods
mov
fmuls
push
outsl
xor
out
adc
rorb
pushl
jb
test
push
mov
scas
sub
inc
ret
imul
fwait
andb
mov
jecxz
sub
mov
push
jo
and
and
push
push
push
rorl
inc
dec
mov
jne
sbb
mov
popf
mov
push
push
loope
scas
scas
leave
mov
cmpl
xchg
fwait
push
mov
jo
int3
inc
loope
jecxz
jp
jnp
gs
aam
push
bound
inc
push
lea
and
dec
leave
cli
xor
add
xor
std
enter
scas
lea
dec
decl
les
dec
les
add
cltd
cmp
es
insb
push
cmp
leave
lahf
mov
lea
jl
adc
in
mov
push
ja
jbe
sahf
mov
loopne
pmulhw
stos
jb
pop
inc
sub
sub
inc
cltd
sub
mov
test
repz
mov
imul
mov
mov
jb
mov
pop
cmp
inc
mov
sbb
mov
adc
pop
adc
jl
sbb
cmp
adc
movsb
ret
outsl
sub
jbe
or
mov
cs
push
inc
sbb
aaa
test
sub
cmp
frstor
sub
test
nop
inc
push
je
cltd
lock
mov
mov
mov
mov
or
inc
mov
xor
fimull
js
dec
mov
enter
push
adc
push
cmp
test
stos
loop
mov
jnp
cmp
daa
jmp
add
and
cmc
xchg
xchg
data16
pop
getsec
repz
jne
adcl
dec
fld
mov
sbb
mov
cmp
cmp
xchg
inc
push
sub
subb
cmpsb
or
arpl
push
ss
hlt
mov
sbb
mov
jae
js
aas
inc
add
cmovno
leave
add
imul
mov
jne
test
push
inc
pushf
or
mov
cmc
sarb
adc
mov
mov
ret
dec
inc
inc
xchg
sti
sub
sub
cmc
xchg
stos
lahf
adc
adc
jo
or
pop
mov
inc
push
mov
ret
ret
movsb
mov
push
or
xchg
adcl
add
addl
adc
lods
adc
jp
iret
seto
dec
push
sbb
fs
adc
scas
pop
int
pop
push
inc
fwait
imul
sarl
test
mov
xchg
fimull
or
sahf
push
lods
mov
mov
pop
jae
loope
jno
and
orb
jnp
shl
loopne
lods
jge
lods
cmp
loopne
xor
xor
repnz
pusha
test
in
push
js
xchg
push
outsl
mov
adc
pop
rorb
dec
loope
jnp
nop
inc
movsl
cmc
xchg
scas
adc
out
mov
lahf
mov
mov
xchg
hlt
push
jae
ss
pop
mov
push
in
frstor
cmc
jg
sub
mov
addr16
sbb
xchg
mov
mov
push
xchg
push
into
scas
cmp
mov
mov
mov
ret
jne
dec
pop
dec
shll
rorb
sbb
jecxz
int3
mov
add
pushf
bound
pop
mov
or
fs
mov
movsb
mov
push
add
jmp
fcmovne
inc
stos
loope
mov
add
mov
adc
mov
out
mov
out
out
dec
xchg
cltd
daa
push
jb
bound
popa
cwtl
mov
mov
lret
cltd
add
rorl
add
xchg
adc
jmp
out
jo
jnp
sbb
enter
jne
addr16
pop
rolb
ss
mov
jnp
mov
and
dec
pop
loope
or
pop
dec
push
mov
or
fsubrl
je
push
fdivrs
shlb
out
jecxz
lcall
loop
mov
pop
pushf
icebp
mov
and
dec
jg
lods
mov
dec
lcall
dec
push
dec
pop
sbb
ret
push
pop
ds
pop
add
repnz
fcmovnbe
sub
add
adc
test
mov
xchg
pusha
mov
dec
mov
scas
dec
mov
enter
or
sub
or
aaa
nop
cli
push
push
ljmp
cmpl
pop
fnstcw
mov
mov
aas
fmuls
adc
jmp
in
lock
scas
inc
xchg
dec
fnstenv
sbb
loop
dec
cmpsb
fdiv
sti
xor
mov
dec
repz
cld
xor
rol
out
and
jne
adc
pop
bnd
rcr
in
push
adc
push
icebp
std
inc
insb
sub
push
imul
test
mov
mov
lods
imul
push
roll
shll
je
lock
adc
mov
addl
sub
adc
add
xlat
sub
or
mov
lods
les
sub
sarb
ss
lret
insl
mov
mov
lret
std
sbb
fst
repz
sub
cmpsl
lock
mov
test
sbb
or
jb
and
xchg
movl
cmp
aaa
adc
sub
out
mov
xchg
pop
es
cmp
pop
mov
mov
mov
out
jle
lock
mov
jmp
jo
pop
call
xor
dec
popf
shl
lret
pop
lahf
jae
or
xor
add
push
cmp
lock
jecxz
ret
push
pop
jo
sbb
imull
dec
pop
push
push
cli
hlt
lret
jmp
fsub
xchg
sarb
mov
inc
mov
or
data16
cmc
cltd
pusha
mov
cmp
call
add
aas
out
sub
jno
aas
or
lcall
jo
cmp
ljmp
push
sbb
mov
arpl
movsb
mov
imul
jns
shrd
stos
mov
cmp
fstps
popa
lock
dec
and
push
insl
and
pop
insb
cmpsb
cmp
and
out
aaa
inc
call
test
xchg
push
js
or
ret
fidivrl
lods
inc
sbb
or
xor
nop
iret
mov
aaa
test
jnp
sub
pop
fbstp
pop
or
aam
mov
clc
dec
outsb
scas
adc
cli
dec
inc
loopne
mov
shlb
adc
and
testb
and
add
imul
push
xchg
xor
xor
jb
xchg
xor
mov
pop
or
aad
repnz
cmpl
fildl
jmp
out
fsubrs
mov
pop
cmp
xchg
dec
mov
lret
lock
push
or
das
stos
xor
into
or
push
mov
push
inc
rol
ret
rcll
sbb
cwtl
cli
sbb
ret
roll
loope
ds
pop
add
rclb
cmp
xchg
xor
jns
orl
outsl
mov
sbb
xchg
jbe
jb
shl
sub
xor
test
outsb
loopne
xorb
sub
mov
enter
pop
mov
stos
gs
sbb
or
xor
aaa
dec
mov
pop
push
repz
ds
and
xchg
popf
inc
cli
js
icebp
rcrb
push
dec
xchg
fwait
std
add
push
imul
repz
push
mov
nop
jo
xor
imul
cmp
cwtl
inc
sbb
push
lods
pop
push
jg
xchg
push
adc
fmuls
es
mov
xchg
pop
jle
lahf
sbb
mov
outsb
and
add
ds
stos
movsb
xchg
push
sbb
cmp
rcll
jne
arpl
xor
loopne
pop
mov
mov
scas
out
push
dec
xlat
pop
cmp
jbe
iret
jle
dec
std
out
jns
popf
stos
enter
lods
pop
push
adc
mov
and
mov
adc
cwtl
cs
add
ret
sar
js
sbb
fsubl
mov
leave
loopne
pop
push
dec
push
dec
imul
mov
sub
pusha
add
movsb
outsb
bound
inc
xor
lcall
mov
cmpsb
dec
call
jne
or
scas
and
bound
aaa
mov
fldl
inc
jne
mov
int3
adc
shlb
std
push
jne
sub
imul
out
movsb
imul
aam
pop
pushw
mov
dec
rol
sbb
inc
jg
inc
inc
adc
cmpsl
jge
cltd
repz
cli
dec
push
mov
popf
mov
addb
cs
sbb
xor
pop
xchg
loopne
xchg
insb
or
repnz
and
ljmp
iret
cmp
outsl
inc
jno
xorb
inc
jg
clc
lods
in
out
enter
sar
or
xlat
adc
sub
cli
fwait
int3
jne
inc
mov
mov
sbbb
mov
add
inc
push
jle
xor
xchg
xchg
dec
add
test
loopne
mov
cwtl
sbb
and
sbb
add
popf
cmp
mov
stc
test
and
mov
adc
inc
xorb
jg
mov
jl
xchg
sub
sbb
test
mov
add
jl
cmpsb
pop
jnp
dec
outsl
lret
cmc
lret
xchg
pushf
cmpsb
mov
mov
fstp
cmp
test
xchg
loopne
mov
push
loopne
je
xor
scas
cmp
cs
push
loop
sub
lock
xchg
pop
and
fstpt
ss
insb
mov
mov
mov
test
and
push
loop
sub
mov
mov
adc
pop
roll
nop
or
and
insl
cld
xor
daa
in
test
int3
jns
lods
cmp
pop
in
xchg
imul
es
insl
cmp
push
mov
test
in
jbe
push
loopne
test
fisubl
sub
xchg
fs
aam
inc
sub
cmpsb
pop
aad
cmpsl
push
dec
fs
out
movsl
scas
lods
mov
js
mov
js
scas
cmp
xor
jge
iret
lock
lods
mov
and
dec
push
add
ret
sub
pop
xor
xchg
push
xlat
fidivrl
test
fcompl
adc
xor
jecxz
push
push
scas
test
ljmp
inc
mov
mov
mov
iret
in
fstps
and
dec
adc
mul
jo
or
mov
ss
mov
in
scas
rcl
test
sahf
lock
cwtl
mov
mov
out
dec
sub
gs
or
scas
stc
dec
popf
ret
jnp
pop
cs
pop
add
stos
imul
xor
sbb
jmp
fisubl
jecxz
xor
fstps
stos
push
insb
out
xchg
lds
jne
inc
enter
add
add
mov
out
xor
xlat
fstl
cmp
dec
lcall
pop
add
sti
cs
jno
enter
push
lret
mov
mov
adc
aad
data16
dec
cmpsl
div
cwtl
fisubl
daa
outsl
outsl
cmp
hlt
pop
addr16
pop
rol
adc
sarl
adc
in
cli
xor
in
sub
int3
sbb
sub
inc
jmp
insb
xchg
adc
adc
jbe
add
imul
xchg
or
lods
cmpl
push
xor
and
push
inc
xor
iret
call
xchg
xor
jns
popa
popa
mov
adc
xor
cmp
popa
dec
fnstcw
push
xchg
mov
inc
dec
mov
sub
test
xchg
addb
out
fidivs
mov
jb
lea
pop
pop
adc
mov
xchg
push
mov
push
sub
arpl
sbb
sarl
adc
repz
sub
sub
pop
and
cmpsl
pop
lcall
lock
sub
mov
loopne
dec
xchg
mov
out
mov
imul
xor
or
pop
movsl
adc
pop
std
push
pop
data16
imul
add
icebp
sbb
cld
mov
stc
mov
sbb
fstl
out
int
rorl
ret
nop
push
jl
jne
leave
out
outsb
mov
shrb
mov
ret
arpl
xlat
mov
mov
mov
mov
xchg
mov
cmc
test
inc
mov
push
mov
cmp
mov
sbb
lret
sbb
cld
xor
adc
xor
test
bound
bound
icebp
sub
ret
adc
pusha
into
aam
mov
pusha
inc
fs
ds
cmp
mov
testl
mov
adc
adc
adc
push
iret
adc
jp
stos
sbb
cmpsl
pop
insl
stos
ljmp
pusha
addl
jl
mov
gs
mov
in
xor
jbe
jmp
xchg
stos
push
stc
or
test
xor
rcll
mov
push
ljmp
adc
sbb
cmp
repz
sub
mov
dec
outsl
cmc
fcomip
lods
xchg
jns
arpl
and
sub
iret
cmpsb
rcll
mov
sbb
sub
mov
scas
fs
lret
jnp
push
sbb
call
inc
test
sbb
push
dec
ljmp
test
dec
movsl
bound
sbb
sub
xchg
bound
pop
fdivrl
cmp
pop
out
repnz
or
adc
mov
inc
inc
nop
imul
xchg
mov
loop
mov
mov
add
cmp
int3
sbb
mov
jae
cmp
cmp
xchg
push
or
lea
sbb
push
outsl
sbb
dec
jbe,pt
mov
lods
fbld
cmp
outsl
inc
jae
adc
and
xor
jp
lods
jbe
xor
scas
sub
movsb
movsb
iret
jge
cli
xchg
add
sbb
rorl
lahf
roll
and
lods
notb
lahf
xchg
imul
js
lea
cmpsl
mov
aad
mov
pop
dec
cmpsb
dec
jmp
mov
push
fs
andb
shrb
add
mov
jl
sbb
jmp
inc
add
mov
mov
pop
or
cmp
jnp
xchg
cmp
addb
mov
or
aad
movsl
leave
push
xlat
into
iret
cmp
sbb
stos
xlat
push
push
lret
mov
pop
fisubrl
cltd
int3
dec
xor
icebp
notb
mov
pop
mov
insb
or
ljmp
movsl
sub
pop
hlt
insb
in
mov
es
pop
bound
inc
mov
test
jns
movsl
aaa
jl
stos
lret
push
add
fwait
or
fwait
insb
movl
adc
sahf
and
mov
jnp
pop
mov
dec
negb
mov
jmp
fadd
ds
lret
push
mov
pop
pop
ficoml
popf
mov
jg
xchg
nop
mov
sti
mov
in
push
rcll
jnp
sub
push
sub
rcll
in
pop
out
mul
jns,pn
jge
jl
test
ret
sub
repnz
cmp
or
jle
mov
jmp
sub
test
dec
and
and
dec
fmul
dec
jp
xchg
lods
mov
repz
sbb
movsl
mov
stos
idivl
je
test
pushf
repnz
ja
jmp
out
xor
adc
xchg
testb
xchg
mov
xchg
mov
leave
xor
scas
test
push
movsl
mov
adc
xchg
add
push
jmp
or
jbe
aam
aad
pop
cmpsl
push
xchg
stc
mov
lret
cs
fyl2x
push
mov
sbbb
cmp
fsts
or
inc
daa
jl
push
adc
orb
lods
mov
and
jp
inc
mov
and
xor
sbb
cli
push
loopne
mov
ss
cmp
mov
mov
in
add
cli
xchg
or
mov
arpl
aam
leave
in
pop
mov
pusha
fsub
xchg
fwait
push
mov
pop
shrl
loop
and
dec
and
lea
jecxz
xchg
in
lret
or
dec
mov
jnp
pop
mov
scas
icebp
mov
push
orb
push
into
in
gs
mov
or
adc
cmc
ret
xor
xlat
imul
cld
dec
ljmp
lret
inc
push
lret
arpl
push
fnstenv
inc
sub
xor
mov
fsubr
mov
xor
inc
jnp
xor
mov
sbb
shrb
in
pusha
inc
push
lods
mov
rolb
xor
and
insl
js
std
lock
xor
mov
sbb
es
and
cmp
lock
pop
outsb
cmp
in
out
cmp
das
and
jb
jmp
ds
sti
call
push
xor
incl
cltd
das
sbb
mov
cmp
xchg
cli
or
and
jge
repnz
add
lea
fdivp
je
out
pop
xchg
add
in
in
lock
lock
mov
mov
mov
cmp
mov
push
hlt
jmp
cwtl
pop
sbb
stos
pop
mov
jae
jb
add
mov
adc
xchg
cmpsb
fs
aaa
iret
dec
mov
repz
dec
sti
mov
cmp
test
sarb
fwait
gs
shlb
cmpsb
cmp
cmpsb
mov
movsb
cmpsb
mov
pop
jo
jl
inc
movsb
test
sub
mov
pop
mov
xlat
xchg
add
pop
jo
hlt
insb
xchg
outsl
out
sbb
jmp
and
lret
std
ja
adc
adcl
inc
inc
mov
push
mov
mov
aam
xchg
inc
loope
inc
ficomps
stos
mov
mov
shlb
and
aad
xlat
dec
mov
push
xchg
pop
mov
mov
lret
sbb
inc
and
mov
mov
pop
push
ss
fdivs
sbb
cli
hlt
mov
and
inc
pop
mov
push
cld
jb
sahf
pop
loopne
imul
aas
adc
push
dec
lods
pop
mov
adc
jl
loop
cli
int3
repnz
push
movsb
mov
sbb
in
mov
xchg
inc
movsb
pop
cmp
repz
mov
int
jl
add
mov
in
pop
sub
lods
pushf
mov
push
call
lahf
setns
repnz
jl
cltd
pop
add
xlat
leave
testb
enter
repz
xor
jns
insl
push
mov
das
incb
out
enter
mov
push
push
push
out
notl
scas
arpl
inc
adc
test
out
jo
mov
xchg
mov
sbb
leave
js
and
in
ss
adc
xchg
clc
xchg
cmp
xor
enter
jmp
mov
inc
or
jmp
das
xchg
stc
lret
mov
pmaxsw
nop
mulb
pushf
push
sub
xchg
jecxz
cmp
fidivrs
outsl
xor
push
inc
or
inc
nop
pushf
add
out
inc
sbb
sub
mov
push
leave
jg
pop
fwait
into
shrb
addr16
subb
bound
jle
sbb
pusha
loop
pop
lahf
pop
insb
mov
jmp
adc
jg
cltd
lods
push
and
mov
mov
ss
pop
dec
add
loopne
mov
xor
gs
pop
mov
sub
mov
faddl
pop
test
dec
in
pusha
pop
mov
pop
nop
hlt
mov
es
ficoml
and
lcall
mov
xchg
ficomps
pop
cmovge
jno
mov
mov
je
dec
adc
rorl
imul
subb
mov
jecxz
lahf
xchg
add
out
insl
and
pop
ss
and
loop
in
mov
mov
popa
jnp
sub
sarb
cmp
jo
inc
lock
mov
cmc
and
pop
sbb
mov
call
int3
and
inc
scas
mov
pop
mov
mov
xchg
dec
lea
cmp
mov
call
popf
cltd
shll
jg
cmp
push
insl
movsl
fwait
xor
or
or
sub
mov
add
clc
mov
fcomip
pop
or
bound
add
and
arpl
fidivrs
cwtl
pop
add
sub
lock
dec
data16
xchg
int
dec
inc
add
sub
push
aad
adc
aaa
fwait
ljmp
pop
sbb
cmpsl
push
xlat
aam
mov
push
aaa
adc
hlt
mov
sti
jl
push
pop
pusha
sub
das
loopne
popf
jl
xchg
arpl
roll
ljmp
push
inc
inc
push
cmp
mov
jbe
daa
mov
push
fiadds
ret
mov
inc
aaa
pop
int
movsl
lea
ss
dec
gs
cli
stos
push
inc
clc
inc
out
test
aad
sar
clc
sti
ss
testb
lahf
popa
fisubrl
ss
pop
mov
lock
push
push
jmp
lock
ljmp
pop
jae
aaa
test
pop
xchg
push
rcrb
retw
jle
xchg
stos
int3
push
fistpll
cli
xchg
mov
aas
mov
add
inc
jno
sti
in
inc
ficoml
lods
jo
test
clc
inc
jae
cwtl
out
lret
imul
sub
sub
cmp
mov
in
sub
mov
push
or
sbb
sub
idivb
jecxz
cmc
test
cwtl
lods
pushf
data16
cld
mov
cld
or
lret
xchg
jmp
mov
and
out
pushf
inc
nop
data16
gs
or
xchg
stos
add
push
xor
sbb
movl
push
pop
ret
sub
xchg
outsl
cmc
stos
adc
xchg
jl
sbb
enter
cltd
inc
add
mov
movsl
sbb
lods
aas
and
call
sub
cmp
cmpsb
pop
addl
pop
sbb
xchg
sbb
xor
stos
loopne
xlat
push
mov
or
aas
filds
cld
pop
dec
push
xor
popa
cmpsb
pcmpeqw
adc
lods
stos
inc
cmp
dec
pop
xlat
add
test
or
aam
and
jns
das
dec
cs
in
pop
je
cmpsl
mov
xor
mov
fwait
test
hlt
movb
jp
out
addl
jne
stc
out
aad
ja
jne
cvtps2pi
out
sbb
and
adc
lock
sarb
fisubl
aas
cli
add
push
sub
aaa
mov
push
and
xor
dec
jp
inc
inc
and
xchg
loop
loop
add
leave
mov
test
pop
or
sub
scas
sbb
lods
cmc
in
rcll
sbb
loop
jb
loopne
pop
mov
inc
pop
mov
add
mov
cmp
mov
mull
add
out
es
xchg
sbbb
shll
xchg
adc
rcrl
sahf
inc
pusha
xor
dec
inc
mov
xchg
decb
push
ljmp
jg
and
mov
shlb
mov
pushf
sarl
test
insl
fisttps
stos
xchg
jmp
pop
push
pop
subb
leave
and
jge
adc
je
mov
and
or
sub
testl
adc
iret
lahf
cmpsl
movsl
cltd
inc
xchg
jne
sbb
and
pop
fstps
mov
lret
shl
mov
clc
mov
dec
pop
cmpsb
fnstcw
lea
fbstp
arpl
push
test
push
dec
and
jecxz
iret
pop
arpl
jp
aas
cmp
roll
nop
outsl
xorb
dec
shrb
sbb
cmp
adc
enter
iret
jbe
faddl
testl
xor
push
ss
push
push
mov
movsb
and
shll
stos
add
aam
and
cmp
xor
into
cmp
jbe
sbb
pop
mov
scas
and
addr16
sub
xor
add
push
lcall
pop
negb
ret
aaa
cmpsl
xchg
jne
mov
iret
fmul
pop
inc
or
adc
insl
movsl
inc
data16
add
push
push
ret
or
ftst
outsb
popl
in
sub
inc
xor
in
inc
and
pop
add
loop
mov
sti
nop
cmp
mov
test
popf
pop
inc
std
sbb
cmp
out
pushf
jb
add
dec
push
nop
xchg
fstl
push
sub
dec
inc
xorl
push
xchg
xchg
ror
jns
ds
out
pop
cltd
insl
hlt
in
jns
call
adcb
fs
xor
pop
sbb
cmp
mov
mov
sbb
addl
and
data16
ljmp
cmp
dec
mov
and
xchg
cld
shlb
std
lret
ss
scas
mov
aam
cwtl
in
xchg
fnsave
mov
js
mov
sbbl
adc
test
xor
lahf
inc
int
dec
bswap
xchg
fists
and
and
aam
or
rcl
mov
dec
jge,pn
je
xchg
pop
xchg
mov
imull
nop
fs
sahf
iret
or
jle
pop
fistl
mov
pop
mov
mov
jg
mov
testb
idiv
sub
xlat
dec
dec
lock
dec
scas
push
movsl
cmp
cmp
nopl
imul
pop
mov
das
jns
outsl
shlb
mov
out
sub
or
xor
mov
sbb
mov
cpuid
pop
les
repz
rcrb
shlb
ret
popa
subl
mov
lahf
xchg
mov
idivl
pop
inc
imul
int
cld
lds
mov
push
mov
pusha
mov
adc
xchg
push
and
or
lret
imul
scas
and
popa
push
lcall
mov
sub
xor
stos
xchg
int3
dec
xor
out
rorl
les
out
fnstsw
out
fmul
ret
stos
es
jo
into
adc
sbb
or
ret
fld
test
inc
cmpsl
loopne
fwait
xchg
lahf
outsb
std
clc
pop
inc
cltd
call
outsb
push
push
cld
xor
clc
dec
aam
inc
in
mov
jno
insl
test
addr16
xchg
inc
stos
pop
out
push
sub
mov
push
jb
jo
mov
add
lock
or
xchg
ja
lds
lods
hlt
mov
popa
adc
push
inc
bswap
lods
dec
aaa
aas
stos
push
jae
adc
jle
lahf
mov
dec
pushf
adc
jo
xor
addr16
xchg
stos
dec
mov
gs
cmp
pop
add
mov
out
push
js
inc
pop
mov
out
lcall
add
xor
or
ljmp
shrl
mov
cmp
lahf
hlt
insb
and
sbb
dec
insb
adc
lahf
aaa
jp
inc
movsl
cmp
mov
push
or
ficoml
mov
iret
mov
pop
fisubrl
stc
ret
xorl
or
or
and
addr16
inc
orb
dec
add
and
imul
nop
mov
aam
jnp
add
adc
push
push
mov
jle
es
inc
and
imul
sarb
gs
dec
mov
divb
inc
out
xor
mov
not
inc
jmp
divl
pop
sub
sub
out
sbbb
shlb
mov
popa
insl
arpl
mov
pushf
xor
cmp
js
xchg
adc
fidivrl
shrb
mov
mov
dec
adc
fmull
or
sti
jmp
js
xchg
add
fnstcw
sub
shlb
sbb
inc
test
push
and
jnp
ja
loopne
pop
ja
sbb
sbb
int3
jbe
xchg
push
sbb
mov
xor
scas
jp
shrl
je
pop
dec
shll
lods
mov
jnp
mov
stos
inc
push
test
iret
push
mov
cmpsb
push
xchg
lret
sub
lods
jmp
aaa
outsl
ss
dec
fldl
cmpsl
push
pop
arpl
or
dec
iret
xchg
pop
fwait
in
mov
out
and
sbb
jno
icebp
xor
xor
dec
or
inc
sbb
adc
adc
ljmp
mov
xchg
push
in
xchg
or
cmp
cs
or
cmpsb
add
ret
fcomp
in
adc
add
xchg
cmp
pusha
mov
es
in
daa
pop
pop
sbb
cmpsb
adc
jge
mov
mov
aaa
int
stos
pop
add
dec
sub
dec
dec
mov
mov
xchg
and
scas
xchg
scas
mov
cld
mov
push
out
pop
mov
push
or
mov
rol
adc
movsb
stc
bound
xchg
out
sub
fisubrs
cmpsb
sahf
std
mov
sub
lret
sbb
outsl
inc
mov
pop
sarl
jns
imul
je
repnz
cmp
jnp
incl
push
cli
or
pop
xor
out
sub
loop
or
xchg
sub
rcll
or
movsl
xchg
nop
sub
mov
ja
testl
push
add
sbb
cs
xor
inc
xchg
es
frstor
nop
pusha
sti
cld
push
enter
in
mov
cmpsb
iret
enter
cltd
or
cmc
insl
lods
pop
int
and
popf
dec
call
cmc
arpl
int3
pushf
iret
out
cmp
sbb
setge
dec
jnp
lock
outsl
inc
sbb
xor
dec
mov
pmaxub
mov
mov
xchg
lret
out
xor
or
mov
and
lods
cmc
jmp
enter
int
pushf
in
dec
add
sti
mov
xor
cmp
add
fdivs
xchg
cwtl
pop
mov
push
xor
xlat
add
repz
testb
test
rcr
xor
adc
lods
add
adc
mov
mov
int
push
dec
pop
jg
xor
lea
in
mov
bound
dec
std
pop
lods
out
jae
xor
sbb
sarl
out
mov
xor
push
lcall
jmp
jge
loope
jno
test
push
inc
inc
ja
push
pop
outsb
gs
mov
lret
xchg
dec
adc
fistpll
scas
pop
enter
out
fdivr
addl
test
fadd
add
lods
push
jo
inc
sahf
sti
mov
jge
push
scas
in
into
call
pop
dec
movsb
fmulp
xchg
add
xor
ffreep
sub
inc
jo
mov
cs
cs
fstl
cs
int3
sbb
out
loope
xchg
pop
dec
xor
aas
mov
mov
push
cmp
mov
nop
or
pushf
out
nop
cmp
daa
stos
mov
iret
and
mov
imul
cld
lea
mov
or
mov
push
sbb
call
movsl
pop
push
fadds
sbb
ficoml
fimuls
jmp
test
fwait
clc
xor
jmp
scas
cs
mov
dec
leave
js
push
or
xor
mov
lea
sbb
sbb
repnz
add
int
shr
repz
out
ja
fisttpll
pop
add
mov
lret
sti
and
aam
pop
pop
cmpsb
push
mov
lret
fstpl
add
clc
xorb
mov
xchg
cmp
sbb
out
addb
fnstenv
cmp
add
aad
test
sub
jp
sbb
cs
push
filds
inc
fisubs
fstl
jle
cwtl
xlat
pop
hlt
mov
jo
push
push
fldenv
dec
in
pop
fstpl
sahf
pop
sub
jo
push
push
leave
push
cmp
jo
pusha
jnp
xchg
pop
rcll
fstl
scas
and
cmp
inc
adc
adc
enter
xor
jmp
cltd
movsl
cmp
mov
fcomip
scas
outsb
outsb
cmp
testl
xchg
fildll
stos
std
or
shl
pop
adc
icebp
loope
xlat
lcall
repz
jo
push
inc
in
pop
outsb
mov
xchg
cmpsl
cli
xor
jbe
test
push
call
jnp
adc
dec
outsl
and
rorb
push
iret
xor
mov
clc
xchg
adc
icebp
adc
insb
sub
repz
hlt
lret
nop
pushf
pop
mov
add
push
aas
pop
popf
insl
out
cmpsb
loop
stos
jno
inc
mov
push
cmpsl
push
ss
adc
xchg
sub
in
dec
fildl
testl
pop
dec
jns
test
notb
mov
data16
lcall
pop
out
jmp
push
inc
pop
adc
imul
inc
das
ret
loope
sbb
pop
ss
neg
xor
insb
imul
rorl
lahf
test
lahf
shll
loope
pop
pushf
mov
testl
pop
mov
xchg
add
mov
add
arpl
fs
scas
xchg
test
movsl
xlat
gs
es
pop
bound
or
test
out
imul
xchg
sub
push
sbb
lock
pop
mov
iret
lods
out
mov
mov
pop
and
int3
xchg
stos
jmp
int
out
pop
push
cmp
popf
lods
pop
mov
mov
xor
paddsw
or
jae
jge
cmp
mov
sub
jne
mov
mov
inc
push
cmc
js
or
sti
mov
jge
pop
mov
push
push
out
aaa
mov
dec
mov
dec
lcall
divb
pop
enter
push
inc
repnz
rcr
cmp
xor
movsl
dec
jbe
mov
scas
cmpsl
leave
ss
push
mov
and
lods
out
nop
or
hlt
add
dec
loopne
xchg
jle
fstpl
in
mov
sahf
iret
add
add
and
and
orl
testl
enter
mov
das
adcl
repz
aam
pop
xchg
cmpl
addl
xchg
rcrb
stos
lcall
mov
xor
push
lret
call
jo
push
mov
or
out
ffree
jmp
xor
loopne
and
add
out
mov
mov
xlat
cmpsb
xor
in
cmp
dec
out
xchg
les
ss
icebp
cld
or
arpl
in
sub
shlb
in
adc
xor
adc
pusha
mov
pop
pop
cld
and
fmuls
sub
pop
push
jne
stos
es
pusha
mov
adc
mov
push
enter
ret
movsl
ja
mov
mov
lcall
and
lahf
sub
inc
push
pop
movsl
or
sbb
cmp
push
cmpsb
clc
dec
nop
xor
jo
cmp
push
fucomi
adc
jno
mov
call
call
and
jl
xor
and
scas
mov
int3
push
sbb
jg
rclb
ds
lret
mov
push
inc
xchg
add
adc
pop
and
add
pop
lret
pop
popf
xchg
push
xor
pop
pop
iret
enter
push
shl
or
test
cmp
jnp
ja
inc
cmp
jl
cld
mov
jo
and
cli
shll
mov
xor
adc
push
dec
lock
ret
mov
test
cmp
mov
mov
fisubrl
add
or
or
pop
call
cmp
xchg
lods
test
insb
or
and
aaa
and
nop
lret
scas
fsubrs
out
jle
push
test
push
mov
xchg
outsb
int
mov
xor
or
xchg
inc
push
lcall
idivl
sub
nop
lock
cmp
sub
adc
sub
cmp
and
movsb
flds
pop
push
insl
adc
inc
xor
filds
ret
mov
pop
mov
inc
enter
aam
in
and
sub
and
cmpsb
inc
jbe
mov
push
xchg
inc
xchg
lea
filds
subl
push
push
lahf
daa
into
mov
mov
inc
cltd
and
int
in
inc
lahf
adc
mov
mov
lea
xor
test
aad
cmp
aam
pop
lock
std
cmp
cli
xchg
in
cmpsb
testl
inc
inc
popa
popf
push
je
sub
xor
cmc
in
ret
mov
or
flds
fstpl
inc
inc
mov
add
xor
test
mov
mov
lret
inc
enter
dec
fstl
test
inc
test
popf
cwtl
lods
clc
xchg
push
lock
or
inc
sbb
mov
insl
cmpsl
pop
sub
fcoms
dec
jb
mov
popa
lcall
popf
popa
cmp
int
shlb
pop
movsb
lcall
xor
sbb
push
vpavgw
dec
scas
add
adc
in
push
xchg
test
jno
fidivs
push
push
dec
out
movsb
cmp
je
ljmp
repz
mov
lea
mov
sub
adc
test
lds
int
aas
adc
lret
dec
inc
rorl
add
arpl
ret
ret
and
xlat
dec
insl
ss
ret
sbb
push
dec
push
mov
leave
mov
and
popf
test
mov
enter
xchg
adc
dec
ja
mov
ljmp
dec
mov
arpl
mov
orb
cmp
or
mov
rcrl
adc
and
xlat
sbb
pop
testb
pop
orb
mov
cmc
xchg
sbb
push
ffree
lret
cmp
test
pop
movsl
call
lods
loopne
pop
push
dec
aam
jne
xchg
sub
cmp
nop
pop
repz
or
pop
sub
push
mov
pop
rclb
push
sub
cwtl
popf
jb
inc
fwait
or
loope
jle
push
gs
sahf
push
push
ret
or
in
jns
or
adc
repz
mov
push
pusha
pop
je
cld
imull
xor
pop
cmpsl
xor
pushf
dec
fldl
cmpsb
mov
jle
repz
fs
out
fsubr
loope
mov
push
lds
jl
mov
out
push
mov
addl
fs
in
push
sub
jmp
and
jb
popf
cli
rcll
stc
cmpsb
xor
pop
insb
sarb
in
pop
test
mov
neg
stc
mov
insl
les
clc
dec
push
sahf
inc
or
mov
bswap
mov
movsb
adc
push
lods
cmp
std
jmp
pop
fwait
movsl
mov
sbb
inc
insl
shlb
pop
jge
out
lahf
mov
fcoms
xchg
pop
cs
mov
stos
cmpsl
shl
fstpt
xor
into
ja
ds
jmp
or
dec
lock
cmp
sbb
mov
push
add
pop
fwait
mov
fsqrt
data16
jg
daa
pusha
push
in
push
adc
inc
iret
out
xchg
push
pop
repnz
aam
cld
mov
push
outsl
test
cmc
dec
mov
pop
dec
test
je
dec
icebp
aaa
xchg
add
pop
lret
loopne
jnp
fcompl
and
xor
push
scas
out
and
repnz
jl
rclb
fwait
inc
pop
stc
or
xor
sarl
mov
dec
dec
mov
in
cmp
cmpsl
mov
shll
pop
mov
mov
add
loopne
ljmp
in
mov
repnz
in
mov
mov
hlt
mov
inc
xor
sub
adc
fsubrl
jb
adc
out
push
movsl
add
shl
repnz
mov
jne
enter
or
lods
gs
mov
or
aaa
clc
add
fldt
fs
arpl
repz
adc
jo
bound
push
xchg
aam
sbb
cwtl
mov
xchg
xor
pop
inc
xchg
dec
or
mov
mov
push
movsl
ficompl
jo,pt
mov
xchg
pusha
mov
sahf
lock
sbb
mov
scas
sbb
adc
adc
aad
cmp
scas
jnp
pop
clc
cmp
mov
xchg
imul
movsl
mov
xchg
fidivl
pop
mov
and
lds
gs
stos
shlb
icebp
pop
cmp
sub
cmp
setns
mov
jae
ficomps
adc
pop
pop
je
jecxz
ja
mov
iret
negl
lcall
cwtl
lods
jmp
lcall
mov
adc
or
pusha
mov
lahf
pop
add
insl
lcall
sbb
mov
fcomi
jmp
repz
dec
and
imul
or
sbbl
pop
xchg
cmp
mov
mov
ja
cld
popf
in
loopne
inc
rol
adc
aad
xchg
dec
das
filds
aas
sub
ficoms
hlt
mov
and
mov
popf
mov
cmp
arpl
sbb
mov
mov
mov
or
in
inc
add
mov
push
xchg
adc
notb
stc
push
and
jmp
sub
sub
inc
or
mov
popf
bound
xor
lods
and
mov
push
fsubs
adc
pop
jb
mov
sbb
push
pusha
mov
push
scas
mov
jmp
jae
cmp
ret
lret
fisubrs
lds
pop
jnp
cmp
and
pop
dec
loopne
jo
xlat
sbb
add
mov
push
arpl
or
adc
dec
mov
aas
arpl
adc
lods
pop
sub
push
in
push
xchg
test
and
pop
adc
inc
mov
mov
clc
pop
push
pop
popa
and
rorl
dec
sub
call
xchg
lret
sub
jbe
pop
sbbl
sub
jns
sbb
push
nop
dec
mov
fistl
inc
pop
in
xor
popf
iret
packssdw
repz
mov
leave
ficoml
adc
and
jmp
pop
fcompl
sub
or
cmp
mov
xchg
mov
iret
pop
in
push
cs
push
dec
xor
or
fcmove
aas
mull
mov
cltd
lret
icebp
inc
lock
js
insl
and
push
mov
cld
mov
pop
lock
mov
jns
in
jo
push
mov
mov
iret
je
and
ljmp
ret
dec
and
std
xor
hlt
jge
and
xchg
mov
aaa
inc
std
nop
sbb
mov
daa
test
add
push
rclb
flds
iret
ljmp
hlt
gs
iret
ficomps
cmp
and
mov
mov
pop
jl
cmpsb
aam
sbb
inc
adc
xlat
cwtl
jg
cld
call
mov
xor
sbb
mov
hlt
add
xchg
jae
sarl
nop
test
mov
mov
inc
test
imul
xlat
in
jb
push
mov
imul
cmp
mov
fstl
insb
xor
pushf
bound
xchg
arpl
call
sub
push
mov
pop
das
daa
and
icebp
mov
stos
or
imul
add
pop
es
mov
jbe
outsl
xchg
and
sarl
mov
jle
dec
jg
mov
mov
popa
jg
xchg
inc
sub
idiv
push
repz
dec
adc
les
push
in
decl
and
mov
xchg
mov
fldenv
mov
pop
imul
sahf
mov
add
dec
shl
jp
mov
mov
js
cmpsb
movsl
jmp
and
lahf
sti
fs
sbb
outsl
lcall
popa
mov
add
xor
arpl
xor
scas
outsl
ljmp
cs
in
movsl
pop
xor
test
mov
mov
enter
or
lcall
lret
sbb
xchg
int
sbb
adc
jg
pop
mov
jp
rclb
aad
pop
icebp
mov
dec
imul
jle
int
divl
push
pop
jmp
pop
loop
sub
push
aaa
inc
mov
xor
pop
leave
fnstenv
ret
cmp
push
adcl
jle
pop
sub
mov
sub
rorl
push
xchg
cmpsb
inc
ret
scas
mov
int
aad
push
inc
sahf
mov
mov
fisttpll
out
cmp
jnp
ljmp
and
enter
pop
adc
les
clc
mov
and
mov
test
mov
push
sub
fwait
pop
mov
or
add
mov
mov
dec
leave
jnp
out
push
popf
js
dec
add
mov
mov
jmp
out
clc
xchg
or
loop
push
fdivrl
in
std
pop
pop
jl
fdecstp
out
lods
movsb
xchg
je
in
sbb
dec
inc
cmp
or
inc
sbb
xchg
jne
push
data16
test
sub
xor
out
pop
rorb
mov
ja
pop
dec
imul
sbb
ss
xchg
xchg
lahf
dec
repz
xchg
dec
scas
xchg
imulb
sahf
pop
decb
ljmp
je
fbstp
pushf
mov
lahf
test
mov
insb
push
in
andb
dec
xor
mov
sub
cmp
dec
or
xorl
jle
and
popf
aaa
shll
or
movl
jmp
and
fs
test
jae
dec
gs
mov
rcl
lcall
push
sbb
push
lds
pop
push
add
dec
sbb
ss
out
outsl
rcll
arpl
clc
jecxz
out
jo
into
leave
inc
push
xchg
pusha
fwait
adc
push
nop
add
dec
arpl
mov
mov
insb
xchg
mov
sub
movsb
inc
and
cwtl
and
and
inc
dec
adc
xor
in
lds
dec
cmp
nop
sahf
jb
cmp
lods
aas
pop
out
out
xchg
fdivl
pop
cmpsb
test
push
xor
movsb
mov
test
sub
daa
dec
ds
push
jbe
or
xorl
scas
sbb
js
push
jl
pop
loope
jp
adc
cmp
out
enter
cli
push
lea
fsubr
stos
mov
sbb
pop
sub
push
into
rol
mov
sbb
mov
clc
flds
fcmovnb
test
lds
mov
gs
lods
xchg
xchg
dec
nop
push
push
stos
in
inc
jns
in
and
push
mov
test
pop
inc
push
pop
mov
movsb
test
xchg
push
xor
int
xchg
or
jne
jp
iret
sub
mov
int
push
nop
add
cmp
int3
cmp
repnz
pusha
stc
or
xchg
cmp
push
dec
mov
das
sbb
sbb
jne
jge
in
mov
mov
stc
or
push
shl
push
jne
cmp
leave
negb
mov
movzbl
jnp
mov
rorb
mov
or
rcl
scas
ds
outsl
shlb
imul
adc
lods
jecxz
arpl
push
mov
les
xor
adc
or
gs
in
addr16
sbb
sub
fcoml
sub
or
xchg
movsb
mov
inc
adc
stos
aad
std
scas
rcrl
and
inc
mov
stc
lds
mov
xor
js
inc
pminub
push
sbb
in
pop
jnp
insl
xor
int
fsubrs
mov
jne
jne
pop
cmp
xchg
inc
pop
addr16
or
movsl
in
inc
sbb
divl
mov
es
fnstsw
data16
jae
xchg
jmp
pop
push
pop
mov
test
jbe
mov
add
xlat
jns
test
lret
pop
jne
ds
xlat
cmp
pop
add
ret
adc
loopne
mov
rcl
xchg
mov
add
push
outsl
inc
loopne
mov
or
ss
and
in
cmp
pop
push
lret
imul
fwait
cmp
call
jge
sarl
inc
xchg
pop
rolb
fstpl
xchg
es
jg
jno
fwait
out
sub
cmc
in
or
das
or
cltd
loope
xor
iret
pusha
mov
rclb
or
push
cmp
pop
mov
daa
aam
mov
xor
jne
call
out
cmpsb
push
and
loope
orl
jbe
sarl
cmp
rcl
or
adc
sub
push
lea
xor
push
mov
stos
daa
mov
adc
ret
or
daa
dec
rclb
das
and
pop
fldcw
in
jae
outsb
adc
scas
xchg
push
aas
cmp
cmp
lret
inc
mov
xor
in
sahf
and
fnstcw
bound
jnp
inc
daa
je
fstpl
loopne
dec
push
fdivrl
lahf
cld
stos
lcall
incl
scas
int3
rol
adc
xor
lds
daa
pusha
int3
jle
popl
xor
mov
repz
jmp
inc
xchg
xchg
iret
dec
pop
xor
xlat
inc
xchg
popf
cmpb
out
and
cld
push
pop
clc
mov
test
stos
cmovbe
mov
xorl
test
mov
add
pushf
imul
lock
sub
aad
mov
mov
roll
jmp
mov
inc
push
and
pop
pop
adc
mov
and
pop
in
or
or
and
lods
mov
ret
ja
cmpb
inc
mov
sbb
mov
jl
fbld
adc
out
xchg
jmp
jp
jno
sbb
stos
cmc
cmp
pop
or
mov
movb
cltd
jmp
cmpsl
mov
jmp
dec
andl
sub
loopne
js
jne
push
insb
jns
ljmp
into
dec
repnz
aam
and
and
mov
es
loop
mov
push
sbb
sub
push
mov
mov
clc
fdivp
mov
rolb
mov
clc
xchg
mov
adc
jl
mov
jg
rorl
cs
xlat
adc
or
pop
xchg
in
or
lds
mov
lods
mov
inc
pop
cmp
add
xchg
out
rclb
jbe
out
and
pushf
push
je
lods
pop
lods
cmp
out
fsts
stc
test
sbb
dec
out
xor
in
cmp
stc
dec
sbb
mov
push
jo
mov
das
xor
push
cmp
xchg
ret
arpl
push
add
lretw
test
add
clc
clc
icebp
ss
jno
mov
addr16
mov
push
xor
and
mov
sbb
out
movsb
ljmp
mov
pop
sbb
leave
and
fimull
cli
lret
push
mov
mov
fwait
jbe
jne
je
push
pop
out
sbb
xor
mov
daa
cmp
xchg
pop
test
clc
leave
pop
shlb
inc
ret
enter
aam
and
inc
cli
ret
leave
clc
sbb
shll
mov
setne
cmpsl
push
dec
inc
or
mov
adc
cmpsb
loop
pop
aam
rol
xor
xchg
xchg
dec
adc
sub
repnz
dec
mov
push
push
stos
popa
pop
xor
sbb
pop
dec
xchg
add
pop
inc
lret
mov
sub
movsb
push
loope
mov
add
add
or
or
mov
dec
shlb
mov
mov
sub
fwait
mov
addr16
adc
inc
lock
sbb
lods
sbb
fidivl
mov
inc
sbb
dec
movsl
hlt
dec
test
sbb
loopne
ss
adc
dec
add
mov
stos
lcall
mov
mov
or
test
jbe
out
mov
adc
iret
jmp
or
scas
je
fldenv
jnp
ret
lcall
jns
test
jnp,pn
in
out
xchg
das
xlat
das
mov
cmpsl
jge
enter
add
or
mov
sbb
fbstp
add
sbb
out
cwtl
push
xor
push
mov
push
pop
lds
cmp
cmp
jmp
dec
mov
mov
in
sbb
jae
xor
jmp
sbb
pop
lcall
sub
or
leave
jge
fxch
xor
or
int3
lret
outsl
dec
and
mov
movsb
xor
jmp
lea
sub
sbb
and
fistps
imull
push
adc
lret
insb
mov
cmp
addr16
out
xor
pusha
out
jle
mov
ficompl
les
mov
popa
sahf
sbb
push
xchg
pop
mov
daa
mov
stos
js
add
das
js
lret
mov
cmpsl
movsb
loop
and
lds
rcll
in
pop
shll
test
scas
mov
push
nop
sbb
xchg
fcoms
jg
enter
je
cs
inc
sbb
inc
loopne
add
mov
in
pop
pop
aas
and
cmp
repz
lods
add
sub
das
fnstsw
arpl
mov
add
insb
or
data16
push
adc
mov
add
lret
lea
pusha
out
scas
and
xor
sbb
dec
dec
dec
loope
pop
inc
pop
insb
mov
popa
jbe
xchg
push
sub
mov
adc
push
or
fdivrs
mov
sbb
sbb
add
rcrb
stos
and
cmp
fs
js
fidivrl
push
pusha
dec
and
adcb
daa
xor
mov
pop
data16
loop
push
dec
into
push
imul
fdivl
ret
ror
mov
cld
inc
and
add
cmp
jle
nop
jbe
xchg
mov
jne
sti
ss
inc
or
test
outsl
jp
jg
outsb
xor
jg
out
xor
mov
mov
clc
leave
aad
push
inc
and
jp
mov
and
mov
mov
sbb
cltd
mov
and
ret
shrb
test
loope
aam
cmp
dec
mov
cmpsb
mov
mov
xor
xchg
sub
mov
out
adc
sub
clc
inc
insb
xchg
xchg
or
imul
mov
adc
jmp
iret
mov
cmpsb
sbb
mov
adc
and
add
ss
insl
sub
flds
cmpl
int
insl
mov
insb
jno
adc
shr
dec
call
push
mov
xlat
cmpsl
in
sub
mov
mov
mov
movb
insb
rcr
pop
mov
imul
sbb
fs
mov
test
fcoms
fwait
xor
popf
fcoml
in
mov
imul
jl
cmc
clc
fnstsw
aam
outsb
movsl
mov
aad
xor
mov
insb
repnz
inc
mov
in
mov
mov
adc
and
fs
pop
xor
mov
es
lods
add
cmp
pop
faddl
test
fisubrs
inc
cs
mov
ja
adc
jecxz
mov
cmpsb
lds
pop
mov
movsl
aaa
mov
xchg
testb
lea
push
movsl
sub
pop
in
sbb
xor
xchg
leave
add
imul
addr16
mov
fildll
inc
jl
push
push
sub
fwait
xor
mov
jns
push
pop
jbe,pt
lahf
jmp
in
dec
pop
mov
sub
nop
adcb
fs
push
cmp
sbb
push
jl
loope
dec
ss
out
int3
lds
mov
movsl
fbld
adc
cmpb
sub
das
mov
sbb
or
idivl
mov
xlat
popa
and
test
dec
mov
add
jbe
jmp
ljmp
scas
adc
jmp
gs
rclb
push
push
loop
loopne
icebp
push
xchg
mov
xor
adc
outsb
sub
adc
mov
stc
aaa
cltd
and
ljmp
imul
popa
jno
adc
aad
sbb
and
das
leave
mov
xchg
xchg
lock
adc
and
aas
mov
lcall
mov
pop
movd
dec
and
mov
test
lods
icebp
jmp
sub
mov
and
xchg
lcall
lods
dec
jns
idivl
and
mov
or
pop
inc
sub
iret
xor
stos
xchg
in
sbb
out
mov
dec
fwait
clc
test
and
movsl
sbb
sub
ss
xchg
and
adc
cli
lods
sub
out
add
sub
jl
mov
cwtl
loop
jb
andl
pushf
lods
jge
mov
pushf
cmpsb
movsl
dec
data16
cltd
int
ret
arpl
adc
fstpt
filds
subb
sbb
lret
aas
mov
addr16
mov
lret
bound
push
dec
xor
fcompl
sbb
outsl
or
dec
dec
and
out
cwtl
or
mov
push
inc
lea
sbb
cmc
nop
stc
sbb
pop
cld
fstl
sub
ja
or
pop
insb
popa
pop
int3
mov
xchg
aas
fisttpl
leave
lods
jg
xchg
xchg
jle
stos
scas
jns
popa
pop
or
test
lret
push
cli
sub
add
mov
fldl
cwtl
cmpsl
xchg
aam
aad
jno
mov
mov
add
dec
sti
or
jmp
rolb
cmp
cmp
mov
jp
jmp
dec
inc
loopne
jbe
or
lea
dec
scas
mov
in
pop
inc
negl
cmp
inc
ja
hlt
xchg
cs
or
test
lds
pop
mov
loope
in
test
bound
dec
aas
fldenv
or
pop
fbstp
push
jl
and
xorl
adc
popa
sub
pop
push
fidivl
aas
subb
pop
stc
addr16
das
and
adc
mov
lea
ds
mov
into
sub
out
int
loope
mov
ss
test
cmp
shrd
jns
push
test
and
inc
mov
cmpsl
push
dec
in
pop
jl
sbb
xchg
add
call
mov
in
inc
icebp
jge
or
int
inc
mov
adc
inc
dec
cmc
nop
adc
pusha
daa
mov
dec
xlat
push
es
mov
mov
das
sbb
sub
lock
inc
adc
dec
sahf
xchg
leave
jo
test
shlb
mov
xor
mov
lahf
and
and
xor
pusha
repnz
push
ljmp
movsb
sbb
mov
jecxz
jge
xchg
notb
pushf
movsl
in
lahf
xor
movsl
cmpsl
loopne
add
cmpsl
pushf
mov
test
fwait
hlt
cmc
and
push
mov
in
inc
lds
push
inc
or
xchg
add
mov
je
addr16
mov
pushf
data16
imul
inc
mov
dec
shlb
dec
xchg
fimuls
sub
sbb
mov
mov
inc
ljmp
inc
jl
ljmp
mov
jmp
xor
push
movsl
aam
xor
jp
enter
stc
repz
jl
stos
add
aad
insb
lock
scas
or
sbb
sbb
fwait
pop
fmul
xchg
in
iret
pop
andb
jo
icebp
xlat
mov
leave
test
or
fcompp
xor
test
adc
maskmovq
mull
cmp
shll
cmp
ds
cmpl
jbe
add
stos
jns
hlt
mov
mov
jg
xor
cmpsl
imul
imul
aaa
outsl
inc
sbb
or
mov
jno
enter
mov
jno
mov
pop
int
lret
and
dec
pop
scas
movsl
pop
sahf
add
xchg
adc
cmc
out
pop
pop
test
push
inc
adc
and
out
imul
iret
mov
adc
xchg
mov
lcall
sbb
andb
out
xor
cmp
mov
imul
ljmp
push
repz
lahf
stos
js
push
rorb
push
adc
adc
or
in
in
xchg
repnz
repz
gs
mov
adc
mov
xor
mov
pop
add
cld
mov
addl
dec
pop
add
loop
cmp
dec
gs
xchg
and
imul
xor
pop
pusha
push
insl
insb
lods
adc
cmp
cld
jns
mov
sbb
push
imul
scas
out
daa
or
ja
and
pusha
ss
xor
mov
nop
xor
xor
pop
push
fcmovnu
cmp
jle
cmp
insl
pop
add
in
bound
pushf
mov
leave
inc
mov
cmp
out
jle
or
and
pop
or
xor
sbb
fisubrs
xor
mov
sub
push
std
lock
sahf
mov
adc
scas
dec
lea
cmp
insb
inc
mov
sti
mov
xchg
insl
arpl
outsl
xchg
aam
and
js
mov
mov
ret
mov
xlat
inc
stc
aam
mov
loope
insb
out
out
inc
outsb
dec
lods
int
jp
sbb
dec
cmp
sbb
in
push
cmpsl
pop
psrlq
cmpsl
in
sub
dec
fxch
pushf
xlat
jb
scas
inc
fisttps
leave
test
mov
jnp
in
xor
mov
shrl
or
popa
add
jge
xchg
outsl
ss
mov
stos
cmp
push
out
adcb
cmpsb
xor
sti
int3
mov
cltd
xor
xor
push
xchg
repnz
sub
dec
sub
es
or
jge
mov
push
lea
inc
lret
lock
dec
add
push
das
and
dec
jmp
sbb
ret
pusha
cld
jmp
jnp
imul
sbb
jle
jns
incb
movb
adc
std
movsb
in
mov
pop
iret
negl
xor
pop
pop
dec
in
movb
sbb
imul
pop
ljmp
xlat
mov
and
lret
xchg
sub
mov
jmp
pop
xchg
pop
outsl
cwtl
and
test
push
push
ret
ja
xor
ret
test
pop
addr16
mov
test
push
rcr
xchg
into
sub
xor
sub
adcb
cmp
in
imul
push
repz
clc
mov
rolb
cmp
dec
aaa
inc
les
add
mov
ss
mov
les
jno
fadd
dec
push
fsubr
popa
or
cwtl
xchg
lea
loope
sub
jnp
insb
mov
cmp
xor
jmp
std
sub
jo
sub
mulb
pushf
dec
fcoms
xor
jne
jg
cmp
push
xchg
movsb
push
inc
inc
int3
mov
xchg
push
inc
faddp
xor
data16
jo
jecxz
imul
dec
cld
imul
add
inc
jnp
ds
subl
mov
out
or
push
jge
add
push
mov
iret
cmp
movsb
lret
xorl
push
adc
cmpsl
in
movsl
pop
sbb
fcoms
sbb
adc
pop
jp
dec
fstpl
cmp
inc
lds
push
add
xchg
lret
jp,pn
mov
loop
xor
pop
stos
aas
ret
sub
ret
dec
sarl
inc
xor
imulb
test
out
jne
adc
jle
push
movsb
ret
adc
adc
or
mov
icebp
aad
or
add
outsl
mov
sbb
sub
jns
pop
cmpsl
sbb
cmp
pop
mov
push
fs
pushf
testl
pop
je
jb
test
js
cmp
aam
fwait
sbb
lods
add
fimuls
cli
mov
faddl
dec
inc
sbb
xchg
xchg
ds
lcall
and
decb
stos
jae
mov
dec
icebp
mov
xor
test
je
mov
or
jp
ret
lods
dec
sti
loope
ret
sbb
mov
int3
push
pushf
popa
lcall
stos
sbb
ja
pop
cli
sub
mov
sbbl
aaa
fmuls
jge
jne
out
push
rcl
lret
lock
and
fiadds
aad
movsl
data16
xor
std
mov
fldt
fists
outsl
inc
jns
cmpsb
xor
sub
int
rclb
cmp
daa
inc
out
push
rcr
test
dec
pop
mov
leave
pushf
pop
movsl
fcoml
repz
xchg
loope
mov
addr16
lods
push
cmp
popf
hlt
cmc
arpl
sarb
icebp
out
dec
dec
mov
dec
mov
push
js
dec
dec
and
pop
jmp
ss
aad
xchg
fdiv
mov
ret
xchg
lock
jnp
sbb
add
pop
sub
pop
or
jae
inc
jbe
test
jbe
test
cmpsl
adc
cmp
loop
test
scas
clc
dec
movsb
mov
faddl
or
inc
sarb
push
cmc
cmp
in
mov
push
dec
jno
lods
je
jo
popa
ja
das
cmp
test
cltd
cs
adc
test
push
pop
mov
stc
add
xchg
notl
xchg
lods
jnp
xchg
test
xchg
sbb
push
pop
xchg
iret
and
mov
cld
pop
aam
add
sbb
adc
inc
mov
push
mov
jp
xchg
or
es
pop
mov
sbb
aam
inc
pushl
gs
jbe
add
scas
pop
stos
push
pop
jp
cwtl
fnclex
mov
mov
ret
xchg
jb
ljmp
mov
inc
outsb
das
adc
and
and
cmp
xor
inc
cmpl
xchg
sbb
push
mull
pusha
jmp
ret
fsubrs
mov
and
cmp
inc
mov
mov
test
adc
adc
push
lods
adc
sbb
orl
mov
into
cmp
into
popa
js
fisubrl
lock
insl
enter
test
sbb
push
pop
adc
je
sbb
negl
jecxz
mov
stos
mov
adc
je
sub
xor
mov
mov
mov
dec
shrl
sarl
inc
std
ljmp
test
push
fs
movsb
push
dec
or
inc
push
mov
popa
mov
cmp
xor
and
jge
popf
mov
pop
inc
xor
jge
pop
dec
jae
inc
mov
xchg
jae
jbe
repz
mov
ds
or
sbbb
imul
jmp
gs
testl
push
adc
xchg
push
mov
add
aaa
hlt
dec
dec
leave
subb
jle
jp
push
arpl
sub
push
mov
lret
xchg
shl
shll
mov
mov
mov
and
aaa
lahf
imul
pop
lret
cwtl
sub
rcll
stc
cmp
mov
sti
fstpl
push
add
faddl
dec
insl
jg
stos
mov
fistl
pop
lock
sbb
stos
inc
pop
mov
cltd
or
mov
in
mov
cmp
and
adc
out
adc
out
xor
jo
and
imul
popa
mov
pop
stc
addr16
nop
mov
xchg
loope
mov
testl
fnstcw
hlt
arpl
stos
rorl
es
sub
jg
xchg
cmpsb
dec
add
and
ljmp
outsl
out
pop
or
dec
mov
ret
clc
xor
sub
mov
jne,pn
push
popf
ds
jmp
lcall
shr
iret
inc
fldl2e
lods
test
xchg
and
adc
subl
jo
inc
add
mov
leave
push
inc
arpl
cwtl
bound
mov
rorl
cmp
dec
ja
out
movhps
mov
in
call
orl
lret
out
mov
roll
mov
test
pop
decl
mov
xchg
adc
dec
cmc
jle
jne
inc
dec
test
sbb
dec
pop
fwait
aam
fidivl
sbb
jle
or
dec
add
aam
xchg
aas
into
shl
mov
call
jp
outsl
cltd
mov
dec
xchg
test
dec
es
push
pop
pop
hlt
fwait
ljmp
pop
jecxz
sbb
jecxz
mov
ja
sub
mov
sub
imul
inc
jge
in
pop
cmp
lods
pushf
jg
sbb
jae
mov
fidivs
cmp
pop
inc
leave
mov
neg
scas
outsl
inc
dec
inc
mov
mov
xor
std
sbb
inc
sahf
adc
cmp
ljmp
push
lret
xor
fs
sbb
inc
mov
push
and
dec
jmp
cmp
fldcw
cmp
repz
push
mov
cmp
dec
jns
pop
dec
jecxz
ja
int
int3
or
inc
dec
insl
sub
fsubl
mov
es
xchg
cmp
subb
sub
sub
or
cltd
into
arpl
sub
push
dec
call
fildll
mov
test
dec
jle
cmp
fimuls
sub
out
ja
shrb
cmp
outsl
lds
lahf
jmp
inc
shll
pop
in
mov
jle
cwtl
nop
hlt
add
inc
ds
in
adc
das
push
mov
push
aam
ss
es
cmc
mov
xlat
and
mul
add
or
pop
pop
lods
jle
int
mov
in
adc
and
jno
cmp
push
leave
decb
or
or
sub
aam
add
add
jg
call
out
sbb
mov
sbb
gs
pop
in
xchg
mov
sub
pop
adc
push
mov
and
lcall
sbb
jle
xor
push
sub
jl
sarl
sahf
lahf
and
xchg
xchg
lret
imul
cmpsb
mov
sub
iret
stos
shll
add
add
or
cmp
adc
inc
loope
loop
dec
fsts
hlt
add
cli
lret
ljmp
dec
sbb
repz
and
push
push
out
arpl
je
loope
cmp
lcall
pop
xor
out
cltd
mov
les
cmp
add
shrb
aam
nop
dec
bound
mov
mov
jbe
ficompl
fdivl
mov
mov
fidivs
xor
scas
xchg
pop
cmp
jo
sti
push
pop
shrl
mov
xor
mov
scas
cmp
rcrb
dec
movsb
fwait
mov
icebp
jp
jo
lcall
fwait
lcall
inc
loopne
out
pop
outsb
movsl
inc
jb
cmc
jmp
hlt
testl
lea
rorb
movsl
jnp
xchg
aam
and
popf
fdivs
aaa
jmp
dec
fninit
xor
xchg
lcall
pop
orl
cmp
adc
in
push
xor
lods
cmpsl
pop
inc
and
lahf
das
loop
shl
ljmp
ss
imul
int3
lds
sbb
dec
pop
lgs
push
jns
inc
fisttpl
fisttps
stc
rorl
xlat
cltd
jno
add
inc
mov
ss
sbb
fcoml
aad
pop
cmpsb
lods
mov
cs
jle
idivb
dec
sbb
mov
sbb
jbe
fmul
add
mov
pop
jnp
cltd
fistpl
add
mov
mov
jnp
sahf
lds
adc
cmpsl
push
call
insb
mov
pop
lcall
std
push
nop
cmp
adc
fsubrs
xchg
xchg
push
roll
xchg
xor
mov
jbe
rorl
xor
call
inc
cmc
dec
jle
aas
xchg
mov
das
mov
js
stos
mov
mov
shlb
cmpsb
test
xchg
xor
mov
sbb
out
lcall
jg
repnz
fdivrp
sbbl
dec
push
mov
loop
cmp
call
out
fcmovbe
and
xor
dec
test
loopne
dec
pop
cmp
jg
insb
push
or
pusha
sbb
pop
lret
add
or
mov
mov
or
flds
outsl
sbb
pop
aas
and
adc
mov
cmp
and
jge
xor
das
lock
in
ret
out
iret
push
mov
rolb
rol
je
cli
loopne
rcll
jns
adc
ret
mov
lcall
or
inc
inc
push
xor
cltd
jecxz
or
mov
sti
loop
test
push
ret
test
cwtl
pop
and
jbe
dec
dec
popf
and
xor
mov
inc
xchg
cwtl
or
fwait
xor
fsubl
jae
es
pop
imul
dec
cmp
xor
inc
addr16
inc
dec
pop
stos
shlb
add
xchg
xchg
int3
mov
jno
lcall
cmp
and
outsl
dec
ljmp
or
xchg
jb
inc
add
jl
dec
loop
movsb
call
cmp
shrb
sub
faddl
lods
push
imul
mov
push
nop
or
mulb
ror
cwtl
lea
insb
fdivr
or
adc
aad
mov
insl
cs
sarl
sti
or
inc
jb
loope
jmp
mov
pop
add
adcl
xchg
sub
pushf
inc
fcmovu
and
out
stos
andb
iret
rcrl
test
jmp
inc
add
push
mov
callw
nop
lret
cwtl
and
pop
lock
lea
daa
mov
push
push
adc
inc
frstor
loopne
nop
add
mov
mov
scas
or
pop
lret
lret
jae
mov
sbb
insl
popf
fidivrl
add
jne
leave
in
adc
aam
enter
adc
sti
pushl
test
mov
inc
adc
push
xchg
popa
push
jg
aaa
sbb
dec
aad
popa
adc
in
iret
lahf
mov
ljmp
dec
nop
jg
sub
xor
cmpsb
fisttps
and
pop
push
cmpsl
data16
mov
andl
outsb
cmp
imul
sarb
lcall
mov
jae
icebp
cmp
xchg
mov
unpcklps
sbbl
push
jecxz
fsubp
js
mov
es
std
mov
mov
mov
jno
sub
dec
mov
adc
cmpsl
daa
ret
and
push
or
dec
and
inc
popf
lahf
dec
adc
cld
add
scas
insb
xchg
jmp
lret
add
push
fisubs
xchg
sbb
repz
js
mov
adc
roll
add
fadds
out
stos
das
repnz
aas
adc
mov
mov
add
fdivrs
sbb
lcall
fbld
mov
bound
shrl
mov
setge
ret
sub
mov
and
push
xchg
mov
cmpsb
outsb
inc
add
std
pop
sub
pop
adc
or
fdivs
sub
nop
mov
xchg
ss
testl
roll
mov
movsb
sbb
test
fcoms
rcll
sub
sti
dec
adc
stos
fisubrs
jle
subl
mov
sbb
lret
cmp
mov
mov
push
mov
mov
or
adc
std
shll
pop
pop
movsl
in
inc
jns
je
mov
ret
fmuls
inc
or
xor
cmpsl
repz
mov
jecxz
sar
jmp
jne
push
push
addr16
std
fdivr
les
push
adcl
call
xchg
jb
adc
bound
and
xor
xor
pop
xor
adc
cmpsl
pop
nop
inc
mov
push
sub
in
cwtl
test
call
test
mov
test
dec
push
add
sti
pusha
push
mov
sbb
fst
cmp
pop
test
dec
iret
sahf
ret
repz
mov
push
push
sti
dec
lcall
shll
lods
push
mov
shlb
mov
pop
shlb
cmc
jb
cli
cwtl
data16
xchg
daa
mov
push
ss
push
cmp
shrb
out
loope
enter
sahf
push
ret
push
xor
addr16
jnp
shll
xor
test
je
sbb
out
pop
clc
push
or
fadds
sub
xlat
or
pop
jb
cmc
mov
add
sbb
or
pop
xor
movsb
enter
cmp
mov
cmp
or
fldenv
fldt
je
jo
call
mov
adc
sbb
int
ss
xchg
ja
cwtl
cltd
lea
outsl
jmp
pop
dec
mov
int3
test
push
pop
adc
jmp
jb
dec
adc
int
jle
mov
pop
inc
icebp
dec
gs
and
adc
popf
xor
insb
mov
stos
mov
jmp
iret
outsl
stos
mov
sbb
inc
cli
je
xor
cwtl
push
xor
mov
mov
out
in
pop
mov
cli
sub
cs
bound
aam
pushf
mov
mov
cwtl
cld
and
pop
sbb
jmp
cmp
scas
pop
fwait
push
orb
push
push
push
sbb
movsl
rclb
mov
inc
or
sub
das
icebp
cmp
es
mov
out
push
sti
cs
lods
and
ss
push
fcomp
shlb
cmp
in
shl
pop
add
stos
rcll
push
ds
mov
test
stos
jnp
push
test
cmpsb
dec
push
fidivrs
cmp
cmp
jge
and
xor
mov
jecxz
imul
jle
push
xchg
add
notb
xor
in
das
mov
cmpsl
dec
mov
mov
sbb
cmpsb
ds
sub
or
adc
test
pop
cmp
cmp
sub
aas
add
lods
rcl
loope
sbb
ds
loop
sub
cmp
ret
movsl
sbb
adc
ret
inc
sbbl
push
xchg
pop
mov
push
sub
or
or
scas
lds
mov
lea
push
dec
popa
inc
ja
adc
mov
jo
jl
pop
inc
xlat
ss
dec
cmpsb
push
sbb
test
xor
add
fucomi
mov
pop
dec
dec
cmpxchg
popf
pop
arpl
int
cmpsb
jo
jo
popl
push
jbe
aad
aas
mov
dec
lea
fwait
cmc
fidivl
repz
add
pop
fincstp
lock
dec
daa
pop
lods
inc
inc
fwait
mov
test
push
repnz
add
dec
insb
inc
insl
pop
aam
out
mov
mov
add
jge
xor
push
repz
push
lcall
je
mov
int3
ficoml
pop
sbb
add
inc
jmp
and
das
xchg
mov
jo
mov
movsl
jne
mov
subb
push
and
lcall
aad
xchg
push
scas
das
cltd
int3
and
cmpsl
cld
inc
and
sub
out
popa
test
cmpsl
icebp
jmp
inc
mov
shr
pop
fld
imul
clc
daa
pop
das
add
jno
lahf
sbb
aad
cmp
out
mov
in
push
insl
mov
and
and
pop
sub
xchg
mov
cmp
fstp
pushf
mov
stos
and
add
fdivr
mov
sub
fwait
dec
out
stc
fnstenv
negb
cmp
push
dec
mov
mov
xchg
cmc
pushf
mov
xchg
repnz
xchg
data16
mov
pop
sbb
or
das
sbb
xchg
xor
and
push
lret
xchg
mov
stos
jp
lock
popf
gs
add
pop
fldl
fistl
pushf
fs
repnz
cmp
sbb
cmp
imul
imul
cwtl
or
inc
insl
jecxz
cmp
mov
lcall
out
adc
lcall
ljmp
cld
xchg
mov
stc
dec
push
pop
pop
mov
ret
ds
xlat
lds
xchg
sahf
div
shrl
add
in
ds
push
gs
mov
fdivrs
add
jae
sbb
fidivrl
dec
cmpsb
push
mov
scas
cmp
pushf
pop
sub
push
cltd
repnz
or
jb
cmpsl
adc
pushf
push
xchg
jmp
dec
out
mov
js
cmp
jp
pop
imul
cmpsl
xchg
test
mov
out
or
idivb
movsb
int
pop
push
or
mov
fsubp
mov
addb
or
mov
dec
incb
cmp
cmpsb
out
mov
repz
fdivrl
movsb
and
xchg
sbb
jecxz
sti
adc
mov
outsl
xchg
cmpsb
jg
sbb
add
sbb
jl
push
mov
in
sbb
cmp
cmp
dec
cmp
idiv
pusha
cld
test
test
int
jb
sti
jge
stc
xlat
jl
je
mov
xchg
daa
add
jmp
push
ja
call
cmp
pop
jbe
pop
ja
roll
jmp
fucomip
sub
stos
sub
mov
into
adc
daa
sub
dec
sbb
add
in
leave
loop
and
dec
ljmp
into
push
push
add
push
add
sbb
pop
int
gs
mov
fistpl
cmpsb
fidivrs
push
jb
loopne
mov
sub
dec
and
lea
fwait
pop
aad
scas
imul
mov
in
mov
xchg
pop
jmp
xchg
gs
inc
or
leave
or
jne
or
outsl
stos
movsl
cmp
sub
cwtl
sbb
inc
sbb
jl
mov
cmp
push
aas
ret
sub
pop
ljmp
cmc
cmp
testb
int
cwtl
xchg
cld
xchg
mov
and
or
push
test
dec
sti
es
leave
loopne
int
push
adc
imul
cmpsl
clc
pop
mov
push
xor
movsl
std
sub
mov
sub
jo
mov
push
xchg
outsb
jmp
sbb
int
stos
int
pop
fsubs
faddl
loop
hlt
sbb
rcrl
cli
jb
mov
rcrl
xor
jo
mov
mov
popf
adc
sub
and
test
xor
aad
ss
aaa
xchg
and
fidivs
int
or
mov
dec
cmp
adcb
adcb
mov
inc
sub
repnz
mov
sahf
mov
xchg
fadds
sbb
scas
je
popf
push
pop
outsb
mov
inc
andl
in
xchg
roll
daa
sbb
xor
icebp
aad
jge
sub
xor
xchg
ljmp
push
ljmp
add
shll
mov
and
sub
addr16
add
es
push
push
jmp
xchg
xchg
xchg
push
vminpd
stos
sub
xchg
mov
lods
xor
scas
add
pop
popa
dec
test
inc
mov
inc
outsb
stos
sub
fdiv
dec
scas
shll
mov
lds
jg
and
inc
cmpsl
sbb
pop
and
fdivrs
js
lret
subb
cmp
popa
test
sbb
rcrl
dec
push
xchg
mov
fimull
jns
insl
cmpsl
loope
mov
fmulp
push
cmp
jg
push
jae
cwtl
bound
fisttpll
es
dec
push
lds
adc
aam
push
and
xor
dec
push
sub
aaa
js
gs
jge
jnp
or
xchg
inc
lret
ja
mov
sbb
repz
js
jp
and
xchg
push
daa
cli
hlt
out
pop
xlat
mov
xchg
cmpsb
aaa
fcomp
lods
imul
mov
xchg
js
jo
movsb
cwtl
add
imul
jp
jp
xor
mov
pop
jns
cmc
inc
cmp
aad
sub
mov
andl
pop
pop
cmp
sub
ja
ds
push
out
adc
mov
jae
stos
imul
adcl
stc
inc
test
insb
mov
imul
xchg
les
cmp
or
lock
xchg
cmp
movsb
push
pop
aam
xlat
clc
std
jecxz
lods
xlat
xor
shrl
mov
xor
mov
mov
shlb
push
imul
enter
mov
bound
xchg
sub
out
sub
adc
or
mov
xchg
addr16
adcl
xchg
sbb
sub
mov
in
and
mov
loopne
out
je
ret
outsl
cmp
cmp
sbb
or
or
and
bound
cmp
stc
and
xlat
sbb
imul
cltd
or
push
jecxz
stos
jg
ficoms
fsubs
repz
and
arpl
dec
pop
jnp
push
dec
mov
mov
or
shll
jno
inc
cmpsb
sub
and
shr
cmpsb
data16
arpl
leave
mov
pusha
pop
pop
ss
sbb
adc
rcrb
out
dec
idivb
mov
stos
test
jp
js
adcl
push
and
out
pop
mov
in
pop
nop
hlt
or
mov
mov
xchg
ds
test
fdivrl
cmpsb
addl
es
xchg
add
icebp
loope
inc
fdivl
mov
push
or
int3
ficompl
in
lea
and
mov
arpl
out
or
adc
stos
int
das
mov
jecxz
push
out
int
cld
xchg
mov
aam
push
ret
lds
je
rolb
jbe
in
fsub
add
test
ret
mov
sbb
mov
add
pop
jns
imul
push
adc
fidivrs
push
push
mov
adc
pop
ret
cmp
cmp
hlt
pop
sub
sub
xchg
andnps
cmp
int3
jbe
adc
popa
mov
or
aas
xor
pop
dec
inc
ret
fdivs
std
xchg
inc
mov
dec
sbb
lods
lret
adc
xchg
imul
inc
mov
mov
dec
or
push
adc
xchg
bt
jbe
es
rcr
flds
test
jmp
mov
test
xor
dec
insb
push
int3
mov
daa
pop
or
arpl
cld
imulb
and
call
rcll
xor
es
or
xor
jne
jmp
bound
movsl
ljmp
mov
test
das
sbb
fdivrp
cltd
adc
sub
sub
cwtl
psadbw
mov
test
imul
out
dec
jmpw
jbe
rcll
mov
ds
int
mov
jo
test
out
adc
add
movsl
mov
clc
ret
xlat
lods
dec
pop
repz
sbb
lret
jg
in
push
sub
rcrl
sub
add
sub
jp
out
inc
xchg
xchg
mov
mov
mov
and
xlat
sbb
cmp
add
sub
iret
and
movsl
insl
inc
mov
ret
cmpsb
dec
add
js
xchg
pushf
icebp
cmp
roll
jle
ss
dec
call
lds
movsb
push
out
lods
push
fidivrs
repz
movsb
and
and
push
and
cmp
jecxz
cmp
add
jle
call
icebp
testb
aam
inc
stos
mov
pop
out
mov
mov
push
mov
test
pop
divb
leave
push
js
and
mov
insl
popf
mov
sub
or
add
insb
iret
rclb
mov
jp
mov
mov
popl
or
popa
push
mov
push
test
xor
repz
pop
xchg
insl
jle
icebp
es
imul
movsl
dec
mov
insl
je
pop
out
mov
lods
pop
scas
inc
mov
inc
xchg
mov
add
and
les
mov
or
es
xchg
or
fdivrl
fsts
out
iret
das
push
ret
sarl
hlt
in
inc
jno
aad
movsb
cmp
mov
xchg
push
arpl
out
mov
daa
adc
shlb
inc
ss
and
inc
xor
or
gs
out
scas
adc
adc
sbb
push
mov
mov
cmp
push
cld
cwtl
jmp
xor
int
lds
xchg
dec
mov
stos
mov
mov
out
test
icebp
stos
gs
in
scas
dec
adc
pushl
jge
insl
dec
daa
cmpsl
imul
mov
popa
ja
dec
outsb
mov
js
lods
mov
pop
pushf
pop
das
insl
jne
sti
sub
xchg
into
adc
adc
call
scas
xor
pop
sub
sub
test
aaa
mov
sbbl
int3
adc
loope
pop
mov
shlb
popl
or
pusha
mulb
sub
cmp
sahf
enter
leave
in
testb
and
and
leave
fnstenv
or
push
and
add
pop
stos
out
test
inc
loope
out
in
enter
lret
lea
sbb
mov
sub
mov
mov
lea
or
loopne
and
and
mov
mov
cmpsl
enter
fs
cmp
iret
ret
or
add
shlb
cmp
pop
outsb
cld
cmovs
jg
fsubrl
das
push
or
popa
icebp
in
mov
push
push
pop
negl
gs
mov
sub
inc
aad
xchg
icebp
sti
mov
lds
mov
mov
push
mov
jae
aas
pop
sbb
jg
add
lcall
push
arpl
xor
xchg
add
mov
dec
add
fcoml
pop
push
mov
cmp
push
xor
xchg
arpl
push
push
call
xchg
iret
rolb
insb
das
data16
mov
xchg
push
mov
xor
les
mov
enter
fcomps
popf
push
lret
leave
mov
jo
pop
cmp
cmp
jp
mov
cmp
iret
popf
pop
adc
iret
fnsave
nop
dec
or
pop
xorl
scas
sbb
push
push
mov
cmp
scas
xchg
mov
in
fidivrs
js
dec
mov
cld
enter
lahf
push
imul
mov
inc
cli
dec
xor
fstl
inc
sbb
push
mov
iret
or
push
scas
dec
gs
fistl
push
outsl
mov
popf
into
mov
cmp
pop
push
repnz
daa
and
dec
std
cmp
pop
and
mov
mov
mov
mov
push
leave
or
adc
pushf
icebp
or
add
or
imul
ret
movsl
inc
mov
push
rclb
lcall
jecxz
rorl
cmp
test
xchg
jmp
inc
xor
or
jg
lret
mov
dec
scas
push
xor
sub
fbstp
shlb
push
rcrb
xchg
cmp
push
loopne
lds
mov
mov
sub
mov
fstpl
gs
xchg
and
into
outsl
lret
in
je
pop
sbb
xlat
push
mov
loop
loopne
mov
sahf
bound
dec
mov
shr
dec
mov
xchg
popf
inc
mov
adc
sub
stc
mov
int
loope
repz
in
outsb
pop
mov
mov
outsl
popa
gs
sbb
nop
sub
cmpsl
fildl
add
cmpsl
or
lods
mov
mov
stos
movsl
imul
and
bound
mov
pushf
addl
and
fidivrl
sbb
mov
push
ret
addr16
and
sbb
test
xchg
pop
sub
cmp
dec
sub
sub
jmp
fadds
and
fadds
negb
mov
inc
mov
int
mov
push
jae
pusha
cli
cwtl
test
std
sti
lods
xchg
inc
xchg
bound
or
in
into
rolb
das
push
inc
dec
xchg
mov
andl
jno
add
or
ljmp
sub
inc
jne
shl
mov
mov
cs
andb
jb
jl
lea
sub
icebp
mov
push
pop
sbb
xchg
push
sti
les
adc
cmp
jae
aam
and
out
in
inc
cli
bound
cs
push
inc
loop
xchg
ficoms
pop
dec
leave
mov
dec
sbb
imul
mov
jmp
test
and
add
mov
aad
and
inc
out
iret
movsl
add
pushf
jbe
fldenv
xchg
js
cmpsb
jbe
test
scas
pop
and
pop
mov
outsb
leave
test
mov
mov
rcr
mov
loope
push
hlt
jg
dec
sub
sub
fwait
inc
hlt
nop
xchg
or
shll
push
mov
jno
das
push
ljmp
mov
scas
sub
in
arpl
push
cmp
pop
popa
and
mov
lods
test
movsb
pop
test
jecxz
inc
dec
sbb
mov
out
jle
andb
scas
in
add
test
mov
js
sbb
popa
daa
lods
popf
sbb
ss
push
arpl
lds
enter
mov
das
inc
mov
seto
push
js
push
push
aam
mov
and
sub
push
fstpt
popa
fidivrl
push
adc
mov
sub
lds
fwait
sub
cmc
neg
dec
lods
jne
test
sbb
fmul
insb
gs
sti
imul
mov
xor
aaa
xor
sarl
popf
pop
insb
sub
push
cli
ficoms
fdiv
jle
fisubrl
mov
loop
inc
stos
arpl
sub
ret
add
hlt
xchg
mov
cmp
xchg
repz
cld
adc
inc
imul
pop
cmp
add
adc
shr
pop
mov
xchg
pop
shlb
lret
xor
aaa
fs
lock
pop
lock
in
jl
mov
sbb
rol
pushf
or
jl
cmp
scas
fidivs
jae
cmp
jl
mov
dec
pop
in
jno
jae
inc
add
xor
dec
dec
fbld
lahf
sbb
push
cmpsb
movsl
jmp
mov
pop
cltd
pop
sbb
enter
popa
pop
insl
xchg
test
sbb
gs
pop
das
ljmp
cmp
and
inc
cwtl
add
sub
mov
cmp
push
sub
push
cmp
and
test
and
xchg
insb
repz
jno
xor
shr
cmp
aad
add
ja
mov
push
adcl
xchg
sarb
fidivs
fidivs
sub
jg
int
clc
and
push
cld
cmp
shrb
cmp
jle
pop
push
mov
movups
jp
lret
cmp
loop
mov
xor
repz
pop
jae
and
add
mov
data16
jl
out
jne
ret
add
push
sbb
push
hlt
popf
lea
xchg
jl
pop
imul
movsb
aam
bound
adc
mov
call
xor
jp
and
jbe
cld
fimuls
mov
jle
xor
add
inc
lcall
mov
and
psubusw
fstl
inc
mov
lret
xchg
add
in
dec
out
sbb
mov
adc
jb
xchg
int
pop
sbb
push
mov
cld
adc
mov
push
dec
fs
or
dec
pop
inc
test
inc
push
jnp
sbb
add
pop
aad
scas
mov
daa
mov
jbe
pop
in
xor
jl
or
fs
fidivrs
js
imul
sub
xorl
jne
repnz
push
pop
nop
mov
daa
dec
pop
mov
adc
mov
cmp
loopne
lea
push
adc
shl
rolb
push
test
cwtl
push
outsb
adc
jnp
aam
shl
mov
nop
or
xchg
push
mov
mov
mov
ja
ljmp
inc
lcall
pop
xor
fisttps
sbbl
inc
negb
xchg
mov
and
addb
fsubl
jle
add
pop
outsb
mov
inc
stos
xor
sub
mov
hlt
rcrb
dec
cltd
cmp
arpl
add
scas
mov
sarl
fnsave
aad
dec
in
push
cmpsb
aam
pop
shrl
popf
pop
xchg
inc
pop
mov
lods
adc
inc
std
mov
in
sub
punpckhwd
andl
std
inc
jge
sarl
ficomps
leave
lods
and
or
jno
lcall
adc
xchg
adc
inc
in
inc
cmc
pop
add
cs
rorl
mov
loop
inc
imul
push
in
imul
cmp
popl
rcll
leave
inc
mov
xor
scas
cli
lret
jnp
and
push
xchg
dec
push
gs
mov
lret
jnp
mov
mov
test
mov
imul
sub
lcall
dec
je
test
popa
fsts
loope
dec
add
sbbl
or
mov
jno
adc
mov
ror
sbb
scas
or
adc
mov
adc
jge
leave
subb
or
mov
fwait
cmpsb
iret
movsl
loopne
xor
push
int
push
pop
xor
mov
mov
hlt
push
in
mov
cld
fmull
xchg
ja
ret
xor
sub
movsl
inc
mov
xchg
mov
ds
daa
jmp
xor
cmp
inc
inc
adc
mov
cmpsb
mov
das
mov
jg
test
scas
pop
pop
pop
int3
adc
inc
push
shrb
dec
imul
xchg
ja
les
dec
lahf
sbb
incl
cmp
adc
stc
insb
mulb
add
mov
repz
lahf
add
dec
mov
mov
pop
sbb
sbb
scas
test
sub
lret
insl
leave
int3
push
bound
stc
jns
add
in
mov
xchg
sub
jns
je
mov
xchg
mov
pusha
ja
adc
int
or
xchg
sub
mov
ljmp
inc
nop
xchg
adc
fcomps
jg
loop
xor
xchg
inc
test
mov
andb
iret
mov
sub
cltd
leave
pop
es
sarl
clc
add
xor
push
rcrb
aas
sarl
and
loope
inc
out
sub
inc
cmp
sbb
xchg
pop
insl
in
dec
xor
mov
jno
pop
lcall
cmp
inc
lds
mov
or
es
xchg
sub
sarb
ds
jo
mov
push
dec
fmul
and
in
xchg
xchg
push
cli
xchg
sarb
mov
hlt
cmp
sbb
xchg
mul
cmp
mov
lds
jmp
xchg
pop
insb
jmp
fistps
rorl
movsl
rcll
pop
sub
sub
rolb
rcrl
lods
mov
test
cld
lret
lods
adc
ja
lods
int
cmc
or
or
incl
push
mov
scas
xchg
fdivs
stos
mov
xchg
cmp
jmp
xor
pop
pop
scas
jp
ret
cmp
mov
test
push
pop
insb
xchg
xchg
xor
sarb
add
xchg
aad
cld
and
lds
or
xor
pushf
add
sbb
mov
ja
lock
das
into
or
sub
loopne
stos
push
adcb
pop
lods
or
js
fdivs
adc
mov
popf
mov
mov
sub
jp
xor
add
xchg
cmp
mov
loope
ret
add
mov
pop
mov
loope
sub
out
int3
ja
jo
and
xchg
test
stc
nop
mov
insl
adc
ljmp
dec
adc
imul
test
sbb
jb
mov
xor
inc
pusha
subl
xchg
mov
js
sub
loope
sbb
add
mov
or
and
imul
cs
ljmp
xor
aad
jl
inc
lods
pop
adc
adc
push
jbe
in
fdivrp
and
push
cmp
push
movsl
fidivl
mov
pop
add
inc
xor
cmpsb
push
adc
or
and
mov
repnz
scas
mov
lds
sub
jmp
dec
stos
sbb
xor
test
das
inc
out
mov
nop
movsb
lods
or
dec
ja
push
out
cmp
mov
imul
cmc
fldl
ljmp
pop
add
xchg
dec
ds
sbb
mov
sbbl
inc
xchg
bound
loope
arpl
mov
pop
jl
adc
sbb
jne
cwtl
push
and
xor
js
cmp
push
push
cmp
test
cltd
mov
out
xor
addb
push
jg
inc
mov
stc
fldcw
push
xchg
sub
roll
fiaddl
arpl
pop
mov
iret
dec
mov
jae
xor
push
imul
mov
jne
pop
shll
sub
or
push
int
mov
mov
cmp
rolb
call
push
shl
mov
andb
push
xor
sub
mov
arpl
push
stc
imul
adc
cmp
call
add
add
call
and
ret
lds
inc
inc
enter
lret
add
mov
addr16
mov
or
orl
outsb
mov
aam
imul
in
lret
popl
cltd
mov
xchg
cmpb
sahf
mov
cmpl
out
ja
pop
inc
or
cmpb
mov
dec
das
stc
cmp
mov
mov
or
xchg
aam
inc
and
mov
popa
mov
rcl
jl
sub
mov
shrl
aam
out
pusha
inc
testl
imul
sub
push
sub
dec
test
aam
nop
sahf
jae
pop
fwait
cli
lcall
pop
testb
xlat
movsb
inc
jbe
fmull
fwait
aad
jo
mov
clc
cmp
lcall
mov
cmp
dec
fcmovnbe
lods
dec
adc
sbb
stos
push
add
jb
inc
insl
push
sbb
sub
cmpsb
icebp
pop
ret
add
in
mov
mov
jle
jns
cli
iret
aaa
xchg
data16
cld
xchg
shl
out
sbb
iret
sahf
dec
js
push
scas
test
inc
jne
cmp
pop
andb
mov
call
test
push
push
scas
dec
xchg
fucomip
push
xor
and
pushf
add
mov
inc
enter
testb
dec
iret
xor
pop
imul
cli
xor
add
push
popf
xchg
pop
xchg
in
and
lahf
mov
xchg
push
insb
or
in
cmp
dec
xchg
inc
adcl
outsb
dec
xor
lret
push
ds
cs
inc
lret
push
repz
cmc
loope
orl
mov
adcl
int
ds
je
dec
inc
and
add
fists
xor
movsl
lret
sub
and
scas
rcrb
fcomps
fimull
push
add
jmp
in
cmc
std
mov
inc
sbb
sub
out
scas
mov
decl
dec
popa
nop
push
mov
or
inc
push
nop
test
cld
shlb
pop
inc
push
cli
stos
mov
xor
mov
cmpsl
mov
hlt
out
call
push
enter
orl
sub
inc
fnclex
push
inc
sub
inc
push
inc
or
or
ficoml
push
sub
cltd
xor
data16
xor
jno
adc
push
adc
jno
jle
rcrl
mov
sahf
es
into
mov
daa
sub
or
push
fwait
xor
push
adc
pop
imul
clc
outsb
ljmp
push
inc
dec
repnz
xor
rclb
xor
out
jle
inc
sub
call
clc
or
cmp
dec
lds
adc
insl
mov
inc
push
nop
mov
cmpsb
icebp
fistps
dec
push
pop
sbb
and
call
sub
cld
pop
mov
enter
mov
xor
xchg
fcomps
pop
dec
or
jb
jbe
jp
shr
lods
inc
addr16
and
mov
xor
movl
das
pop
leave
jle
vucomiss
test
xchg
dec
lret
pop
ja
cmp
xor
add
in
mov
pop
in
dec
sub
sub
mov
fsub
jecxz
les
aam
stos
daa
jl
fndisi(8087
push
add
nop
cld
cmp
xlat
stos
cwtl
leave
loopne
adcl
rclb
add
jbe
lahf
cmp
xor
sub
xchg
pop
mov
pop
ljmp
decb
inc
cmp
mov
in
add
cmp
push
mov
scas
inc
cs
dec
shrl
adc
and
dec
loope
gs
outsb
push
xor
and
addl
and
inc
imul
out
pop
xorb
loopne
leave
subb
lret
cmp
xor
test
test
outsl
xor
xchg
test
cmpsb
pop
sub
mov
nop
imul
and
push
insb
cmp
les
add
subl
sahf
flds
sbb
shrl
and
aas
leave
and
sbb
xor
fistps
push
arpl
and
out
leave
scas
in
sbb
sub
test
shl
jo
shll
push
les
aaa
lods
jb
popf
jns
pop
ret
outsl
mov
xchg
scas
sahf
fldl
or
imul
inc
push
jnp
data16
dec
das
pushf
lea
mov
lds
into
xchg
lods
push
stos
push
les
pushf
movsl
std
es
dec
and
xchg
into
sbb
pop
rcll
repnz
in
cmp
roll
jl
cmc
xor
add
insb
les
shlb
push
shrb
push
or
pop
out
arpl
mov
jecxz
dec
addb
sbb
cmp
fbstp
adc
sub
push
inc
test
fnstcw
push
add
pop
adc
xchg
jge
add
pusha
push
arpl
xchg
sti
xlat
xor
pause
push
inc
fimuls
cwtl
daa
dec
xchg
les
insl
or
pop
sub
ds
inc
sti
jl
lret
jecxz
pusha
insb
int
cmpsl
mov
push
call
cli
popf
loope
adc
outsb
pop
mov
rcrb
fnsave
int3
adc
sub
insl
mov
nop
lret
jbe
hlt
test
xchg
or
cmpb
out
or
sub
mov
movsb
outsl
sub
push
call
or
pop
je
add
sbb
or
fistpll
mov
lods
out
js
jecxz
mov
movsl
int3
pop
aam
and
mov
adc
pusha
sbb
clc
mov
mov
sub
jns
shrl
dec
inc
pop
outsl
mov
add
sub
ret
xchg
jmp
inc
xchg
pop
ljmp
adc
dec
rcll
dec
shlb
or
fisubrs
pop
insb
add
lds
ds
mov
lret
adc
xchg
mov
subb
loope
or
rol
cmp
sub
movsb
dec
mov
das
pop
mov
pop
int
stos
iret
pushw
cmpsl
or
out
lods
mov
clc
mov
clc
or
inc
add
add
xor
cmp
push
jle
imul
push
js
ret
or
adc
xchg
xchg
nop
in
scas
xor
xchg
push
xor
jp
stc
mov
fs
push
std
in
xchg
mov
jno
pop
mov
or
pop
in
fwait
push
outsb
in
pop
adc
test
test
dec
std
popf
lock
pop
dec
push
xchg
adc
sti
dec
sbb
mov
mov
xor
ss
mov
dec
mov
add
jae
lods
dec
ret
dec
sbbl
or
pusha
lods
repz
jns
mov
inc
addr16
inc
jp
mov
fimuls
hlt
jae
stc
test
gs
test
sbb
out
sbb
sbb
punpckhwd
pop
mov
push
xchg
lret
sbb
cmp
dec
push
xchg
loopne
mov
mov
sahf
mov
call
push
and
add
repnz
inc
aam
mov
push
test
lcall
lahf
fwait
in
sub
push
mov
inc
popf
arpl
sub
stos
inc
std
inc
and
pop
loope
xor
jns,pt
dec
call
sbb
sbb
xchg
movsb
push
xlat
jp
cmp
pop
push
add
push
cmp
jl
cwtl
bound
jne
and
gs
js
pop
jo
sbb
aaa
lret
jle
das
dec
dec
dec
jo
or
mov
cli
hlt
mov
fs
dec
ss
loopne
or
pop
sti
je
push
mov
in
out
mov
nop
jecxz
in
xor
jae
sbb
pop
jl
jmp
cltd
cltd
lcall
pop
cmp
xchg
inc
mov
adcl
shrl
cmpsb
aaa
dec
mov
inc
popf
testb
out
fprem
mov
ficoml
out
add
loopne
fsubr
dec
push
push
in
dec
jg
sbb
aam
push
dec
js
data16
cmc
dec
mov
lock
ret
adc
sbb
nop
xor
test
or
pop
mov
sbb
pop
and
and
sahf
mov
xchg
jae
ss
mov
xchg
or
adc
cmp
jns
stc
or
mov
pop
or
mov
jp
dec
test
xor
mov
in
jle
pop
es
push
sarb
jp
or
les
imul
call
mov
test
xor
push
add
mov
rorl
popf
jns
mov
scas
in
mov
inc
push
sbb
mov
mov
into
test
dec
daa
leave
cmp
lret
sub
xchg
inc
js
inc
mov
jp
sbb
jns
mov
stos
das
or
out
cmpsl
fmul
adc
lea
adc
dec
daa
mov
sub
stos
gs
add
int3
pop
xor
push
adc
push
jp
imul
fs
and
pop
ficompl
cs
pop
rol
arpl
or
fdivs
mov
aam
push
jp
lods
incl
shlb
adc
mov
cld
lock
pop
int
cld
mov
sub
ds
dec
lods
dec
jecxz
xchg
jmp
sbb
jnp
imul
mov
and
test
in
inc
fsubrp
insb
stc
insl
enter
sub
ljmp
test
jne
rclb
rcll
mov
push
popa
loop
push
ret
inc
daa
sbb
testl
rclb
out
push
fidivl
push
mov
sub
mov
ficoml
inc
stc
movsl
add
dec
repz
xchg
cmpsl
pushf
es
sysenter
sahf
ret
ficompl
push
in
xor
mov
or
jge
mov
sub
pop
nop
pop
daa
sub
cmp
in
jns
lds
adc
push
sbb
adc
mov
and
push
mov
mov
and
mov
push
icebp
ret
ja
lahf
cmpsb
adc
shl
xchg
dec
leave
clc
dec
add
ja
mov
mov
movsl
sti
out
in
aas
mov
push
and
lret
jns
sbb
mov
ds
xchg
mov
mov
je
xchg
inc
dec
inc
push
or
std
mov
sub
int3
mov
mov
mov
pop
dec
aad
lahf
decb
mov
in
popf
cmpsb
inc
shr
dec
push
lcall
mov
push
test
lds
sbb
cli
pop
push
push
inc
inc
or
push
xor
imul
jmp
in
xchg
push
pop
cltd
adcl
in
ljmp
sarl
test
mov
fidivl
xor
mov
sub
mov
inc
inc
aad
mov
or
sbb
mov
mov
dec
lcall
fs
mov
repnz
mov
inc
icebp
bswap
xor
cmpsl
mov
insb
push
push
and
in
outsl
insb
rcr
into
push
mov
jmp
addr16
add
jo
jl
ret
mov
dec
pop
sbb
cmpsl
jne
or
adc
stc
sub
pop
push
inc
inc
fstp
repz
push
shrb
imul
pop
jmp
pop
cmpsl
jecxz
rcrb
mov
jmp
mov
pushf
xchg
test
ds
cmp
int3
add
adc
test
or
xchg
andb
js
inc
jmp
into
cmpsl
adc
xchg
lea
icebp
pop
imul
repnz
dec
shll
scas
xchg
test
adc
stos
lret
orl
add
test
or
std
xchg
int
fnstsw
push
inc
sub
cld
mov
mov
out
mov
mov
mov
sbbb
repnz
ljmp
mov
jecxz
cmp
pop
pop
push
in
cmp
cld
fwait
xor
or
or
js
inc
outsb
clc
negb
testb
in
insl
and
fstps
inc
fbstp
and
xchg
cmp
leave
cli
push
add
mov
inc
mov
dec
mov
in
dec
pop
cli
scas
fs
cmp
jne
xor
xor
testb
loopne
roll
mov
mov
xor
leave
or
mov
push
mulb
mov
mov
sbbb
sbb
jge
sarb
and
sbb
jo
xchg
dec
out
xchg
push
push
es
dec
dec
mov
lea
push
xchg
dec
add
sub
shr
aam
imul
es
jo
sub
out
push
mov
xor
mov
test
xchg
rcl
pop
jl
fs
push
push
add
xchg
in
rcrb
add
or
push
in
js
ljmp
inc
xor
dec
outsb
pushf
cmpb
data16
pop
call
cwtl
rcll
inc
cltd
in
faddl
jecxz
jle
jmp
dec
add
cmp
push
cmp
outsl
aas
jnp
adc
cmc
sbb
in
pop
or
mov
sahf
jnp
jne
mov
push
pusha
adc
movsb
sub
sbb
jnp
jl,pt
mov
mov
nop
test
ret
outsb
adc
into
aad
adc
sbb
bound
loopne
add
nop
dec
lds
daa
mov
pop
mov
ss
jb
test
inc
xor
push
jo
fsubr
sbbl
inc
cs
mov
std
mov
jge
sbb
cmpsl
cmp
xchg
divl
imul
or
mov
in
shr
dec
cmp
roll
lret
mov
stc
xor
push
or
fmul
push
cmp
shrl
jge
jo
mov
jnp
mov
cs
addr16
xor
lea
cmpsb
sbb
cmp
test
in
ljmp
into
testl
rcl
or
jb
setg
in
cmpsb
push
xor
fcomps
xchg
cli
pop
adc
cli
mov
mov
inc
push
mov
pop
add
popa
jp
fistpll
rcl
lock
iret
out
into
dec
jmp
test
leave
aam
pop
dec
xchg
cmp
adc
inc
xchg
mov
test
and
hlt
xor
into
into
icebp
push
mov
dec
cld
addl
push
mov
in
cmp
xor
aas
out
pop
and
dec
lahf
pop
roll
arpl
test
xlat
mov
push
jp
test
jg
pop
pop
mov
js
and
inc
xchg
push
mov
push
add
jge
push
fisubs
inc
in
and
mov
jmp
pop
bound
mov
push
pop
xor
push
cwtl
sbb
mov
test
cmp
sub
adc
scas
sar
fldt
xchg
jno
push
mov
pop
push
xlat
cli
aaa
lods
testl
cmp
cld
int
sub
jnp
cmp
jmp
jne
fdivs
scas
lret
movsl
and
shlb
lock
xchg
mov
in
adc
nop
jge
inc
mov
fwait
pop
sub
repz
addr16
inc
jb
mov
imul
jecxz
xchg
enter
popa
dec
mov
add
cmp
mov
jecxz
xor
test
inc
loop
cmp
inc
ja
iret
fsubr
movl
cli
leave
aaa
push
imul
dec
xor
lock
pusha
test
into
xor
xchg
and
lahf
cmc
xor
or
mov
pop
jb
xchg
loope
into
inc
mov
shl
sub
call
aaa
push
enter
imul
cmc
xor
xchg
aad
mov
cltd
cwtl
mov
in
xchg
loope
fiadds
in
ja
push
inc
scas
shrl
mov
outsb
or
mov
xor
popa
in
sti
pop
jae
add
ds
repz
sub
or
out
lahf
dec
xor
add
push
mov
subl
stc
pop
xchg
lods
dec
jns
push
sbb
out
or
jp
shlb
das
cmp
shll
mov
popf
call
jge
lds
cmp
scas
movsl
arpl
mov
cs
lock
sbb
add
popf
dec
pop
fsubrs
shl
push
add
fs
jo
je
sbb
and
adc
add
scas
jecxz
stos
and
dec
mov
mov
insl
or
inc
jae
jns
mov
pop
mov
pop
sub
pop
jle
gs
roll
cmc
cmp
ret
add
aam
mov
iret
test
lock
xor
jnp
addr16
jge
cmpsb
repz
shlb
and
lret
mov
pop
push
push
sub
enter
in
movsl
aam
adc
das
icebp
mov
lock
mov
pop
in
ret
lods
repnz
dec
xchg
data16
pop
sbb
gs
or
rol
jecxz
ret
and
or
xor
movsl
loopne
push
call
ljmp
hlt
mov
mov
loope
push
pop
and
or
push
pop
adc
jmp
loope
and
daa
push
ljmp
cmp
ja
xor
fiaddl
sti
mov
int3
call
mov
les
pop
inc
mov
aas
sub
les
mov
dec
lcall
inc
lcall
xchg
js
adc
dec
je
push
mov
rolb
push
push
xchg
pop
scas
sub
nop
mov
pop
aaa
cmp
pop
fs
pop
and
xchg
cltd
inc
loop
or
roll
repnz
lods
pushl
dec
and
xorb
bound
sub
ss
mov
adc
sbb
arpl
in
mov
repnz
test
or
add
test
scas
and
js
or
xlat
pop
cli
cmp
push
adc
add
sbb
mov
call
or
cmpsb
iret
cmp
mov
xor
hlt
jae
add
jg
push
ret
cmpsl
dec
cltd
jno
sbb
dec
mulb
inc
xor
xchg
es
ja
in
pop
mov
or
cld
or
xor
mov
rcr
xchg
cltd
xchg
mov
or
cltd
or
jp
pop
lret
rcrb
sub
adc
or
sub
stos
sbb
leave
int3
xor
js
or
cmp
fiaddl
sub
leave
imul
mov
outsl
mov
mov
scas
rcll
clc
jp
hlt
adc
setl
aam
pop
sbb
push
lret
sub
aad
shlb
mov
int
fdivrs
aad
push
out
xchg
xlat
xor
mov
xorb
sahf
mov
sarb
outsb
add
repnz
cmp
pop
or
xor
fwait
inc
or
xchg
cmp
fs
sbb
push
inc
test
loop
lret
lret
push
cmp
out
dec
fstps
jne
jns
stos
in
data16
push
rcl
mov
add
inc
sub
ja
addr16
out
sub
jb
loopne
or
aaa
fidivrl
ret
ficompl
cld
ss
outsb
jmp
and
xlat
xor
call
mov
sub
out
jl
stc
repz
int
mov
inc
adc
mov
adc
jbe
jg
out
mov
out
or
cwtl
mov
mov
inc
cmpsl
mov
inc
push
wrmsr
sub
rclb
xor
push
decb
mov
mov
bound
nop
dec
je
push
push
mov
mov
jne
test
adcb
cwtl
stos
divb
into
or
xchg
imul
mov
les
push
lock
dec
nop
add
mov
xor
daa
push
inc
cmp
fimull
es
aaa
das
jne
jecxz
jno
andl
fstp
mov
int3
dec
push
scas
cld
sub
mov
and
cwtl
fs
in
mov
sub
jno
cmp
outsl
sbb
push
lret
jo
pop
filds
pop
xor
hlt
adc
shrb
cmp
push
in
jo
push
std
aam
jp
in
js
rcrl
add
incl
mov
xchg
aam
repnz
xor
rol
push
mov
xor
rcrl
std
lahf
pop
xchg
push
or
mov
mov
dec
cmc
dec
test
cli
inc
popf
ljmp
add
fs
bswap
pop
test
gs
xchg
push
or
cwtl
sub
ret
scas
dec
cwtl
add
adc
inc
inc
in
jae
aam
hlt
cltd
lock
xor
enter
jo
ja
addb
mov
mov
mov
jo
dec
mov
in
insl
sbb
loope
and
mov
into
add
add
xchg
hlt
fildll
aas
cmc
lcall
mov
jnp
repnz
sub
lcall
fidivrl
jno
mov
push
shlb
push
lret
xchg
mov
lret
mov
mov
aam
sbb
test
cmc
test
sbb
add
insl
incb
mov
into
and
stc
jo
pop
xchg
jmp
mov
mov
sub
mov
and
in
mov
inc
and
mov
push
adc
xor
movsl
jno
repz
lret
add
into
add
mov
movsb
sub
outsb
add
test
xor
xor
out
aaa
data16
push
cwtl
jle
adcl
dec
mov
jl
testl
cmpsl
das
add
inc
ret
push
xchg
stos
mov
add
lds
xorl
mov
sar
add
ljmp
mov
xchg
jbe
lea
sub
push
lods
pop
inc
std
leave
push
xchg
xchg
hlt
es
sarl
or
fcomp
mov
imul
fisttps
jl
add
xchg
push
in
pop
xor
ljmp
test
xor
push
leave
icebp
iret
pop
mov
popf
add
xchg
cli
ds
imul
iret
shlb
test
sbb
xor
push
jle
xchg
je
lcall
dec
pop
mov
cmp
iret
mov
rcr
mov
fildl
mov
lea
push
jp
out
pop
notb
cs
mov
insl
out
sub
push
push
int3
mov
rclb
xor
mov
out
inc
enter
push
repnz
cmp
ror
inc
arpl
jne
pop
xor
out
xor
push
add
cmp
mov
sbb
fisubl
inc
cmp
iret
xchg
push
insl
push
out
dec
jle
sub
icebp
js
pusha
and
adc
cs
add
adc
jge
ljmp
bnd
mov
movsl
js
movsl
stos
ret
pop
mov
insb
mov
mov
pop
pop
mov
push
inc
fsubrs
push
lcall
ret
add
loopne
pop
data16
xchg
rolb
jmp
add
repz
sub
ss
mov
repnz
mov
jb
mov
std
les
jb
pop
psubsb
xchg
and
or
adc
and
push
std
pop
push
pop
inc
lcall
cmp
cmp
movsb
sub
ljmp
push
push
or
jns
bound
dec
and
data16
mov
pop
imul
and
jo
push
pusha
mov
std
iret
mov
lahf
lods
pop
repnz
std
push
nop/reserved
decb
scas
lods
push
loop
rolb
pop
push
mov
popl
mov
xchg
sahf
es
sbb
lret
cmp
out
mov
add
movsb
rcrl
loopne
into
xchg
outsl
mov
dec
aad
inc
in
or
pushf
or
movsl
iret
nop
in
or
shrb
sbb
sbb
dec
in
movsb
xchg
mov
idivl
dec
aam
test
pusha
and
mov
loope
rcrl
aaa
ljmp
out
adc
enter
jmp
loopne
inc
stc
mov
test
leave
es
movsl
xchg
sub
fldl
pop
popf
in
xchg
xchg
xor
sub
inc
mov
ss
in
push
and
pop
lods
out
addr16
ret
jno
xchg
jg
jns
loope
ficomps
aaa
shlb
pop
add
insb
inc
jno
outsl
scas
fst
sti
adc
xchg
sarb
repnz
add
dec
jnp
sub
jecxz
repnz
add
dec
or
pop
xor
int3
push
fists
dec
call
aad
and
push
inc
xchg
mov
jl
cltd
in
or
xchg
pop
xor
or
push
ljmp
out
out
xor
fdiv
gs
scas
push
sub
orl
or
pop
flds
inc
decl
push
cmpl
xchg
aaa
fucomip
push
fdivrs
jl
aad
xchg
jnp
sbb
add
xchg
mov
test
ss
push
std
aam
add
out
dec
gs
fidivrs
lods
cmpsb
js
xchg
cmp
scas
movsl
imul
pop
int3
mov
imul
inc
pop
outsb
or
pop
aaa
mov
mov
popa
negl
fwait
jo
iret
rolb
into
push
pop
out
pop
es
cmpsl
xchg
add
repnz
and
icebp
repnz
adc
adc
cmp
dec
daa
dec
rclb
mov
adc
and
sub
in
inc
test
mov
jns
cltd
ss
xor
loope
cmpsb
or
push
mov
sbb
push
dec
push
lcall
in
mov
test
inc
jnp
adc
imul
pop
push
mov
mov
and
jno
js
fdivp
popa
add
cmp
push
arpl
jbe
ud0
fildll
and
xor
fstpt
sbb
or
jmp
gs
lret
fstl
movl
loopne
gs
mov
shll
sbb
adc
push
es
push
mov
jae
sbb
inc
lods
popa
mov
roll
xchg
ja
xchg
daa
pop
in
stc
pop
push
jne
in
jmp
or
xchg
lods
mov
mov
jns
into
pushl
inc
fcomps
lahf
pop
cmp
inc
mov
mov
mov
inc
push
mov
std
repz
nop
into
andl
rorl
adc
fnsave
sbb
imul
mov
dec
inc
push
mov
or
and
ja
lret
insl
repnz
mov
pop
mov
rcr
dec
out
popf
sbb
outsl
aaa
outsl
out
jge
dec
xor
adc
pop
or
sahf
mov
push
mov
addb
sti
xor
movsb
xchg
rcl
mov
in
sbb
pop
das
pop
xlat
in
shlb
ljmp
mov
sub
xor
mov
push
out
mov
sbb
or
fsubr
jge
mov
xor
and
xchg
loope
mov
xchg
mov
inc
adcb
insb
cmp
fisubs
dec
pop
int3
incb
xchg
xor
scas
jns
fs
mov
pop
sbb
sbb
lcall
insl
stos
popa
ljmp
or
mov
cmp
jb
mov
push
push
pop
mov
fs
mov
lcall
dec
mov
call
jno
push
add
insl
clc
fmull
lods
addl
mov
mov
cmpsl
sarl
mulb
sbb
or
lcall
ljmp
hlt
and
jge
pop
mov
jb
idivl
jo
push
leave
sub
jecxz
test
loop
iret
cmpb
or
test
pop
ds
js
sub
sbb
and
stos
xchg
cmpsb
xchg
mov
lret
ja
push
addl
vpunpcklqdq
dec
cmpsl
mov
lahf
cli
inc
mov
push
inc
scas
xor
es
dec
sbb
pop
cld
daa
scas
mov
pop
jle
psllq
mov
leave
gs
dec
add
jp
pop
dec
lret
sahf
dec
les
push
jne
push
inc
push
jle
aam
lret
movsl
mov
add
lret
movsl
jmp
mov
mov
mov
or
dec
imul
lods
call
dec
scas
add
int3
or
test
cmpsb
mov
add
pop
cmp
cltd
fnstcw
mov
mov
mov
movsl
sarb
jecxz
xor
fstl
pop
pop
out
test
out
dec
jge
and
adc
push
movsl
cs
es
pop
std
xor
inc
shlb
mov
rcll
test
xchg
cli
cld
cmp
dec
push
lret
xor
ffree
imul
sbb
cmpsb
and
adc
jno
mov
push
push
mov
cli
nop
xchg
xor
mov
xchg
rcrl
xchg
cwtl
pusha
icebp
pop
add
xor
lods
adc
push
mov
inc
addr16
shll
rep
fidivrl
lcall
xchg
cmp
fdivr
lahf
dec
pushf
sbb
sbbb
stos
imul
sbb
mov
jae
les
loopne
dec
add
jmp
cs
inc
loop
arpl
cmpl
add
mov
cmpsb
jp
inc
xchg
cmp
lock
jmp
push
decl
adc
cmpb
or
adc
stos
movsb
movsl
outsl
mov
scas
aas
inc
pop
jge
sub
cmpsl
in
adc
inc
xchg
popf
cmp
xchg
mov
pop
pop
adc
push
imul
stos
shr
ds
or
in
or
jns
cmp
or
lds
cmc
lahf
loopne
jmp
cmp
loopne
jbe
repz
outsl
fsubs
inc
lret
movsb
stc
and
dec
loop
ss
gs
jmp
push
sub
lods
movsb
lods
mov
inc
dec
adc
pop
pop
pop
imul
and
aas
mov
xchg
cltd
add
jmp
dec
inc
imul
std
push
inc
lock
nop
ja
xchg
xor
pusha
shll
xchg
cmpsb
repnz
fs
std
sub
iret
mov
push
mov
addb
loopne
je
dec
cmpb
add
nop
sbb
lahf
xor
test
add
push
int3
push
fldenv
or
bound
sbb
dec
xchg
jg
inc
pop
cmp
or
rorb
test
cmp
lock
push
push
cmpsl
mov
in
jmp
adc
adc
andb
fsts
cmp
sub
pop
in
dec
lret
jb
pop
lock
xor
cmp
iret
rorl
sub
xor
mov
nop
ja
dec
mov
loopne
jecxz
dec
stc
cwtl
outsl
mov
add
loope
fldenv
adc
fsub
add
int
mov
dec
jno
adc
scas
leave
xlat
mov
in
jecxz
pop
scas
je
mov
adc
test
push
mov
mov
push
mov
adcl
push
cs
notl
iret
inc
pop
jle
adc
dec
xchg
scas
lods
push
xor
and
addr16
push
call
mov
shrb
sub
pusha
push
pusha
and
mov
cmp
inc
aaa
aad
dec
lret
cmc
bound
loop
ja
and
repnz
pop
pop
lret
xlat
jmp
icebp
xor
cmp
mov
jbe
add
mov
je
in
add
nop
int3
mov
clc
cmp
jge
pop
sbb
dec
stos
repz
cmp
xlat
lret
push
insl
and
mov
outsl
pop
and
push
xor
xchg
outsl
mov
stos
daa
sbb
cs
andl
loop
shl
cmpsl
add
cld
dec
inc
xor
add
movsb
int
cwtl
mov
aaa
shl
mov
push
test
inc
mov
jbe
movsl
xchg
sbb
out
loopne
test
fcomi
je
fisubl
cmovb
pusha
lds
adc
stos
dec
sub
xchg
jo
pop
pop
dec
push
pushl
mov
pop
ljmp
xchg
and
mov
jmp
fmul
push
mov
cmc
out
or
popf
add
xor
test
data16
lcall
jne
dec
notb
push
call
push
lds
pop
popf
jns
daa
pop
icebp
mov
cmp
leave
dec
cmp
inc
call
jge
addr16
out
jg
xor
or
outsb
mov
pop
loope
and
cld
or
cld
lret
cmp
sbbb
or
pop
and
push
pushf
inc
sbb
or
pop
aam
push
xchg
push
jmp
mov
or
in
adcl
adc
mov
std
sbb
sub
daa
adc
cwtl
mov
shlb
mov
dec
scas
xchg
adc
mov
repz
mov
and
scas
popa
pop
add
in
inc
pop
rclb
mov
mov
inc
xchg
ljmp
push
ror
lahf
xchg
and
dec
clc
shlb
mov
out
ret
out
lods
fdiv
xchg
inc
xchg
lock
gs
sub
stc
in
call
out
arpl
stos
shr
mov
push
pop
sarl
popf
push
mov
dec
mov
sarl
cld
xchg
dec
test
std
leave
xchg
push
lods
inc
mov
xchg
das
ds
dec
adc
cmp
and
jb
jl
divb
scas
and
in
jmp
xchg
movsl
es
adc
adc
add
aas
mov
cs
xchg
bound
lret
add
inc
mov
jno
lods
sbb
or
inc
cli
xlat
fwait
fs
out
out
rcrb
cmp
lahf
sarl
dec
mov
push
mov
dec
shlb
ljmp
rcl
rcrb
pop
js
dec
shrb
fcmovne
push
push
xchg
sub
adcb
int3
scas
lea
leave
sbb
cld
rorl
or
pop
gs
and
sub
sbb
push
xchg
ret
jmp
adc
mov
addr16
sub
scas
or
jp
stos
call
xchg
mov
push
xchg
scas
jg
xchg
sar
stos
hlt
mov
es
js
mov
sbb
mov
jne
jge
push
push
xor
iret
std
daa
add
frstor
aas
mov
cmpsl
sub
fwait
add
push
inc
sub
push
mov
test
js
dec
in
xor
test
icebp
mov
movsl
xchg
jns
adc
aam
push
cmp
filds
add
inc
xchg
int
mov
jecxz
pop
and
xchg
sbb
cltd
cmpsb
jae
addr16
cmp
das
cmp
jmp
fnsave
ja
pop
shlb
and
cmp
adc
scas
push
mov
jl
mov
adc
mov
mov
stc
fnstcw
imul
int3
sub
sti
sub
jg
jns
mov
mov
add
fsubs
mov
in
fwait
pop
cli
xchg
inc
adc
adc
addr16
aam
addb
and
push
repnz
mov
mov
xchg
mov
inc
pop
into
and
sahf
push
push
lock
sahf
mov
sbb
fnsave
and
xor
xchg
mov
push
jns
rcr
or
lods
into
xor
arpl
push
sti
or
lea
ds
jbe
adc
mov
xor
lods
jo
mov
pop
sbb
xchg
pop
mov
cli
jae
pop
clc
adc
mov
xor
popa
js
cmpsb
xchg
fcoml
pop
and
hlt
mov
mov
xor
sub
pop
inc
mov
sti
mov
sbb
lods
pop
sub
int
cmp
inc
and
push
std
je
push
dec
cmpsl
jge
adc
mov
add
enter
repz
gs
out
pop
xchg
sub
sub
std
popf
lahf
fstl
imul
mov
fwait
mov
dec
in
rol
mov
fmull
cmc
lahf
push
and
sub
add
and
pop
mov
out
jnp
std
push
loope
and
daa
mov
push
ds
sub
mov
ret
xor
das
fcmovu
sbb
dec
pop
cmp
aam
pop
jae
dec
clc
jmp
and
push
pop
mov
iret
iret
rolb
lret
hlt
xchg
cmp
ja
aam
out
fisttps
rcl
fbstp
and
sbb
pop
sub
das
int
std
push
call
addb
ja
push
inc
inc
cmp
push
sbb
mov
loope
sbb
adc
int
les
adc
adc
pushf
pop
sar
out
dec
in
dec
add
jp
movsl
stc
mov
enter
mov
xor
dec
jle
shll
in
mul
cs
mov
shlb
adcb
jmp
adc
jl
lret
jmp
test
or
cmp
push
sub
and
data16
insb
lret
lock
ja
test
adc
stos
push
inc
pop
mov
push
sbb
inc
push
popl
pop
dec
push
jne
lahf
mov
pop
and
push
jns
in
or
add
or
push
xchg
and
test
dec
arpl
jge
adc
push
sbb
sub
out
int
pusha
fnstcw
es
jg
inc
sbb
dec
push
mov
xlat
in
into
adcb
mov
scas
sub
rcl
shr
jecxz
cmp
ds
leave
jae
dec
loop
loope
mov
or
mov
push
mov
jmp
in
into
test
lods
aaa
and
imul
push
js
popa
push
mov
add
addr16
mov
xorl
aad
xchg
int3
cwtl
mov
add
xchg
xchg
jno
sbb
sbb
int
add
sub
jns
movsbl
aam
mov
lea
outsb
int
ret
pop
adc
repz
pop
addr16
sbb
mov
mov
mov
adc
fnstenv
adc
out
pop
pushl
lods
xchg
or
roll
into
push
ss
aad
xor
push
outsb
lret
inc
hlt
dec
shr
ret
inc
xor
inc
dec
jmp
xchg
int
pop
ljmp
cmp
cmpsl
jbe
lret
jmp
jae
sbb
popa
pusha
xchg
popa
pop
mov
je
cmpsl
sar
jmp
xor
pop
adc
sbb
push
in
push
shrb
push
inc
mov
push
aas
jge
sub
adc
pop
push
loop
and
repnz
xchg
xchg
cmpsl
push
pop
lods
jbe
mov
fnsave
add
adc
popa
jne
lret
pusha
lret
fistl
mov
xchg
fdivs
xor
mov
add
test
mov
xor
jmp
xchg
stos
mov
addr16
insl
add
imul
leave
xchg
mov
outsb
dec
out
fwait
ss
fstl
in
jge
sbb
mov
stos
mov
ss
mov
push
ljmp
aad
outsb
shl
and
pop
pop
aaa
xchg
negb
pop
repz
lret
dec
cld
inc
inc
sbb
jo
pop
xchg
lea
dec
std
mov
cmc
test
xor
mov
xchg
inc
nop
add
cmp
pusha
enter
adc
sarl
mov
add
sub
mov
in
jmp
sarl
mov
mov
or
jb
xlat
xchg
dec
rcrb
stos
mov
sub
bound
xor
add
xor
aas
out
jp
scas
js
cmp
ror
and
mov
mov
and
push
and
mov
mov
hlt
xor
mov
lcall
sbb
loop
push
lret
mov
push
lock
in
mov
adc
sbb
lcall
push
and
out
or
lcall
sub
push
in
out
arpl
leave
std
pushl
adc
daa
push
xchg
gs
cmp
fsubl
cmp
mov
cs
push
shrl
out
cmp
xlat
pop
js
inc
jge
jle
addr16
push
sub
push
dec
ret
ret
mov
adc
les
mov
adc
iret
jl
enter
fucompp
xlat
cmpsl
and
add
cs
shrl
roll
inc
push
sbb
sub
mov
out
xchg
push
stos
mov
rcrb
int
pop
movl
movsb
cwtl
aaa
jne
push
stos
adc
sti
sar
aas
lret
mov
xlat
inc
pop
jg
sarl
lds
push
mov
xchg
psubusw
sbb
mov
mov
mov
xchg
fimuls
or
dec
sti
addr16
addr16
mov
jne
and
call
mov
jno
out
mov
loope
jne
lock
pop
xor
adc
lea
jo
lahf
mov
in
mulb
xchg
xchg
pushf
imul
mov
roll
cltd
jle
jae
in
test
inc
mov
mov
fimuls
into
movsl
adc
dec
fistpll
mov
push
into
and
jne
sbb
sub
rorb
sbb
adc
add
cmc
adc
mov
fistps
push
and
and
sbbb
lahf
pusha
cwtl
jg
mov
adc
push
push
push
dec
pop
subl
cmc
mov
mov
lock
jecxz
dec
inc
and
push
adc
std
ja
insl
daa
xchg
xchg
leave
cwtl
sti
test
mov
sbb
dec
pop
pop
cmc
xchg
inc
adc
or
pop
int3
lods
mov
lods
inc
fdivl
jmp
iret
fdivr
dec
popa
sbb
jne
adc
sub
xlat
ret
or
repnz
cmpsl
add
std
out
in
mov
add
adc
test
mov
out
lods
rolb
in
adcb
xchg
loope
mov
mov
int
and
imul
test
mov
mov
aad
int3
add
adc
test
sbb
xor
xchg
testb
mov
sbb
pop
das
adc
adc
mov
mov
and
decb
mov
inc
dec
lods
adc
cmp
jmp
movsl
push
clc
sbb
ss
sub
dec
lea
inc
ret
jnp
incb
add
xor
out
cli
xchg
popf
add
imul
iret
jecxz
ja
cmp
push
push
das
xchg
loopne
jg
xchg
sbb
mov
mov
mov
outsl
xchg
dec
loope
sbb
rclb
ret
add
xchg
gs
xchg
loop
and
int3
sarb
nop
xchg
clc
push
fcomi
pushf
xchg
cld
aas
mov
movsl
cmpsb
push
sub
icebp
fidivs
mov
and
xor
sbb
lcall
enter
frstor
data16
xorb
lahf
sub
jno
xchg
or
pop
js
jns
fists
xor
fwait
imul
inc
push
fistps
mov
add
mov
imul
daa
outsb
fld
mov
ret
pushl
add
in
insb
rcll
xlat
into
ret
xchg
or
mov
es
add
jne
bound
lret
inc
sub
popf
mov
imul
dec
into
dec
jne
xchg
sub
call
scas
fldt
into
js
jne
call
frstor
dec
pop
arpl
mov
sub
or
inc
repz
out
pusha
xor
jns
mov
add
call
sbb
lret
iret
inc
dec
popl
cmpsl
mov
adc
loope
enter
xor
dec
mov
push
addr16
sub
push
out
or
mov
adc
and
add
sub
and
int3
outsl
fisubrs
stos
push
mov
pushf
add
adc
aas
add
pop
inc
insl
and
adc
testl
ds
imul
cli
mov
mov
negl
cmpsl
cwtl
dec
pop
std
and
inc
push
sub
in
aas
loop
aam
xchg
out
sbb
mov
xchg
jmp
jnp
adc
test
mov
or
jmp
push
xlat
cmpsl
aad
pcmpgtb
adc
fs
iret
jae
nop
mov
mov
lds
lock
cmc
fidivrs
das
bound
out
mov
dec
std
mov
sub
fs
cmp
or
jp
or
lcall
mov
or
roll
fldl
jb
enter
mov
outsb
pop
mov
sub
outsl
or
fisubl
sub
sub
xor
ret
out
push
push
shr
mov
jns
aad
test
push
or
cld
xchg
out
daa
pop
add
ljmp
icebp
sbb
mov
or
std
pop
sub
out
rorl
ret
xchg
jle
into
das
push
incl
sbb
out
nop
sub
xchg
mov
js
ret
lret
push
adc
aad
or
cmp
call
mov
cmc
ds
fidivrl
scas
push
cmp
popf
mov
push
lods
ljmp
pop
pop
sub
push
sub
or
pushf
aam
out
xor
ret
jnp
or
iret
rorb
stos
jg
or
stos
cwtl
les
inc
push
clc
mov
pop
sbb
loope
mov
inc
ja
stos
sub
out
push
fistps
inc
cmp
rcrb
sub
adc
xchg
jmp
je
mov
dec
sbb
lods
in
sbb
xor
mov
adc
mov
popf
icebp
scas
sub
in
inc
arpl
std
mov
pop
xor
mov
iret
push
jb
fsubrs
fmul
nop
leave
jle
xor
daa
xchg
out
ret
cmp
lcall
loop
in
shlb
adc
push
and
fcmovnbe
int
repz
cmpsl
mov
pop
testb
inc
mov
cmp
or
ss
orb
add
jnp
lock
jg
mov
inc
sub
fstl
mov
adc
adc
or
scas
inc
lea
mov
and
ss
testb
sub
pop
fs
outsl
pusha
es
jmp
push
mov
fcmovnu
xchg
or
bound
sub
and
repnz
outsb
mov
fcmovne
rcll
adc
inc
pop
enter
adc
sbb
out
cmp
roll
in
inc
sub
jne
jns
mov
xchg
mov
fmul
das
adc
sbb
dec
jne
jg
ret
jmp
lods
mov
jl
jnp
lds
in
fadd
and
loopne
mov
pop
add
inc
clc
dec
in
dec
loopne
addb
push
adc
mov
rcrl
imul
xchg
mov
cwtl
or
lds
cmp
jae
cmp
push
adc
xchg
loopne
lods
and
pop
insl
popa
ljmp
rcrl
jg
jmp
cltd
icebp
push
sarb
cli
andl
aaa
fsts
xchg
lret
cli
dec
ss
jae
mov
mov
test
mov
int
sti
cli
mov
sub
xor
sbb
mov
mov
push
icebp
inc
movsl
test
ret
push
pushl
sbb
fistl
adc
insb
lock
aas
test
aas
dec
aad
cmp
popf
jbe
mov
mov
pop
inc
jbe
int3
mov
dec
nop
sbb
mov
movsb
lret
mov
lea
movsb
popf
push
push
sahf
push
test
add
das
xchg
daa
lock
sub
pop
sub
ret
mov
lret
xor
les
sbb
adc
leave
repnz
fwait
and
nop
push
xor
inc
les
mov
jno
hlt
adc
repnz
ss
dec
rcrl
cmp
add
repz
fdivrl
mov
arpl
lods
xor
push
sbb
jecxz
pop
outsl
ss
adc
sbb
int
jg
fs
movl
pop
jle
jl
and
and
fldt
aaa
imulb
roll
iret
push
mov
and
sahf
dec
jg
fsubrl
lods
je
pushf
mov
es
xor
sarb
cmp
pop
and
jae
dec
in
mov
lret
xchg
shll
mov
stc
cli
rol
loopne
pop
inc
inc
adc
xorl
loop
mov
jns
pop
out
jno
shrl
cmp
sub
dec
sahf
jmp
jle
mov
repnz
outsb
pop
fists
pop
rcrb
hlt
fildl
int
incb
and
loopne
stos
mov
or
xchg
rorb
cmpsb
xor
xchg
stos
jp,pt
rcr
or
int
sbb
mov
xor
fldl
mov
mov
mov
inc
cmpsb
jnp
arpl
add
cmp
inc
adc
ja
pop
jno
cmp
aaa
or
dec
mov
or
lret
push
sbb
fmul
mov
arpl
cmp
pop
dec
test
notl
sub
aaa
jnp
enter
mov
cmc
js
loope
cmc
les
scas
enter
pop
shrl
inc
imul
mov
aas
jns
movsl
xchg
xlat
xor
lcall
push
adc
xchg
push
test
xchg
inc
push
mov
int3
inc
inc
movsl
imul
lcall
xor
inc
out
ffree
repnz
rorl
outsl
jl
push
icebp
imul
mov
inc
jle
add
add
mov
test
jle
icebp
pop
pop
loope
gs
sub
cmp
aam
rorb
mov
pop
or
lcall
and
ljmp
jmp
jbe
mov
fwait
xor
mov
fdivr
cmc
pop
imul
adc
pop
adc
jmp
es
je
or
push
cs
cld
mov
sahf
add
ficomps
push
mov
sbb
mov
jg
fdiv
jnp
adc
decb
adc
xchg
arpl
int
popf
addr16
dec
cmp
imulb
lahf
daa
out
push
mov
pop
push
sbb
flds
sbb
pop
jns
mov
sub
aaa
scas
es
sbbb
jp
aad
outsl
mov
dec
mov
jmp
sahf
out
in
hlt
and
popa
mov
mov
stos
mov
lret
jbe
mov
fcomi
ja
mov
cmp
leave
sti
ljmp
enter
lcall
les
data16
mov
cmc
push
pop
bound
push
int
shll
xor
xchg
inc
das
adcl
mov
lods
inc
les
adc
in
or
jb
dec
ficompl
xchg
adc
cltd
data16
xlat
or
add
adc
sub
outsb
lods
shll
jbe
mov
popa
xchg
and
mov
mov
shrb
mov
imul
cmp
test
rcl
or
pop
push
cmp
mov
mov
adc
dec
mov
inc
push
mov
loopne
fistps
hlt
dec
shll
cld
fstpl
mov
int
scas
push
leave
iret
jnp
and
inc
jbe
cmpsl
andb
sti
arpl
cmpsb
mov
xor
pusha
aas
lret
aad
sbb
fwait
out
fbld
inc
insb
lods
cmc
repz
mov
xlat
mov
xchg
mov
test
das
sub
call
rorl
repz
cmp
loop
es
lcall
sbb
mov
cmp
subl
cmpsl
cld
dec
mov
icebp
stos
and
nop
test
popa
pop
jge
into
out
sbb
and
mov
sbbb
stc
int
enter
cs
hlt
fnstcw
je
cmp
dec
pop
jne
mov
pop
sub
mov
xchg
push
inc
negb
popa
loope
sbb
push
shlb
add
mov
ss
push
xor
imul
jl
loop
out
stc
mov
movsb
scas
sub
push
cs
mov
outsl
pop
dec
mov
testl
mov
pop
test
popf
add
jmp
mov
jmp
sub
adc
ret
jno
outsl
pushaw
dec
imul
and
adc
dec
aas
repz
mov
or
or
fwait
mov
jb
adcl
cmpsb
loope
or
mov
mov
cld
pop
lods
cld
jmp
dec
mov
xor
xchg
call
std
adc
xchg
push
xor
jbe
xchg
sub
add
jne
jg
adc
ds
repnz
jbe
push
inc
inc
lea
gs
pusha
xchg
or
mov
popf
inc
mov
adcl
pop
sub
mov
das
out
mov
stos
add
fsubl
int3
clc
lds
xor
push
cmp
dec
inc
lods
push
mov
add
cmp
jnp
popa
enter
pop
jne
mov
mov
pop
and
mov
sbb
mov
andl
clc
mov
lea
sub
pop
mov
xor
or
xchg
pop
fcomps
in
push
mov
lods
push
pop
imul
jg
cmpsb
jge
test
test
jae
ret
sahf
jbe
cmpsl
mov
movsl
cmp
jb
loope
jbe
mov
xor
xor
in
out
lock
inc
pop
ror
dec
mov
lea
adc
insl
or
or
jne
jb
rcl
ffreep
imul
mov
into
pop
mov
jns
das
add
and
push
cwtl
mov
jg
xchg
dec
mov
out
cmp
or
push
jmp
movsb
test
sbb
cmp
sbbl
mov
sbb
jmp
mov
inc
aam
cltd
fsts
pop
sub
pop
rcll
popa
pop
adc
dec
adcl
jb
rolb
aas
fnstsw
mov
jbe
and
test
inc
cmp
bound
cld
mov
push
pop
movsb
cmp
aam
pop
xchg
cwtl
rcrl
das
outsl
xor
mov
pop
adc
inc
or
xchg
lcall
adc
jnp
daa
loop
sub
adc
inc
lock
mov
jnp
out
dec
mov
add
sbb
dec
arpl
xor
mov
or
testb
xor
movsl
aam
pop
aas
test
mov
mov
cmp
fwait
imul
jmp
lahf
sar
jl
xor
sbb
cmp
mov
xor
push
xchg
test
das
outsl
jmp
test
xchg
xor
push
jmp
or
inc
popa
mov
adc
insl
push
ficomps
sub
mov
or
fwait
arpl
dec
stc
sub
mov
popf
sub
lcall
fidivrs
dec
xor
pop
jb
imul
pop
push
pop
adc
in
xchg
dec
and
push
fucomi
test
js
sbb
roll
stos
imul
and
sahf
jp
jbe
repnz
std
cmp
and
cmpsb
lods
sti
and
or
add
sub
aas
sbbl
push
pop
imul
int3
jle
adc
fistpll
shl
pop
inc
out
fidivs
mov
sub
mov
and
mov
mov
shll
ret
inc
push
orl
aad
xor
test
out
and
jge
nop
jg
and
sbb
jnp
out
addr16
ja
cmp
nop
xor
fst
xchg
lret
pusha
xchg
mov
stos
je
or
out
in
out
xor
mov
dec
mov
pushf
jo
push
dec
pop
jns
lcall
mull
lcall
add
cli
mov
ret
push
cmp
pop
add
and
sub
test
repz
xlat
push
pop
test
mov
jl
sbb
lahf
popf
mov
setle
clc
out
fcomi
dec
aas
aam
pop
ja
xchg
push
hlt
ljmp
andl
ss
shl
mov
fidivl
pushf
sub
add
pusha
inc
push
cwtl
enter
popa
and
pop
and
add
mov
and
or
popa
repnz
roll
xchg
cmp
lods
mov
mov
insl
aas
dec
or
std
addl
adc
push
and
push
sub
scas
repnz
push
sub
cmpsl
jecxz
loope
lahf
dec
ret
pop
cmpsb
mov
arpl
pop
mov
ljmp
xchg
addl
rolb
push
push
movsl
mov
int3
imul
jae
adc
scas
dec
cmp
dec
mov
or
cmp
xchg
sub
test
or
jbe
dec
arpl
insb
add
mov
jno
or
fs
or
xchg
test
mov
lret
or
test
ss
jecxz
add
inc
jmp
insl
jbe
aam
inc
aam
iret
mov
push
test
outsb
iret
arpl
orb
dec
push
cmp
outsl
std
sub
out
clc
push
mov
push
mov
or
xchg
add
push
enter
push
jmp
push
or
scas
sahf
jmp
sub
std
mov
cmp
xchg
loop
test
sarb
and
or
push
push
add
or
or
not
inc
or
cli
mov
push
lock
add
daa
dec
daa
push
mov
cmovle
inc
pop
or
ret
xchg
adc
mov
pop
xchg
dec
jbe
add
insb
sub
js
in
jmp
lock
daa
int
movsb
xchg
jns,pn
inc
and
scas
adc
test
daa
mov
pop
jge
mov
jbe
std
fs
adc
lret
outsl
flds
ds
add
mov
lahf
sbb
cmp
sub
jle
xchg
mov
jle
cmp
and
cld
xor
ljmp
xchg
dec
cld
jnp
mov
pop
and
push
sbb
lds
in
add
jb
testl
les
test
test
sarb
cwtl
dec
mov
pop
mul
add
sub
sti
cmpl
loope
jns
sub
push
addr16
js
popf
lds
cwtl
jae
popf
pop
cmpsl
leave
push
pushf
and
shl
sar
nop
in
or
adc
add
mov
popf
xchg
inc
jbe
sbb
in
nopl
fwait
sbb
mov
call
push
pop
sub
aaa
dec
lods
sub
inc
out
xchg
xchg
mov
hlt
jl
ds
and
cs
push
ret
ja
jmp
das
icebp
cmp
jnp
jo
cmpsb
in
jle
and
push
shld
stc
outsl
xor
nop
icebp
jmp
sahf
or
mov
add
inc
filds
mov
lret
mov
or
mov
test
jecxz
fbstp
mov
je
je
jg
roll
sbb
mov
mov
sub
sub
daa
dec
fwait
lods
or
in
lret
or
mov
rorb
and
dec
scas
fwait
shrl
xchg
push
aas
mov
dec
jne
pop
mov
stos
out
fcomps
icebp
or
test
push
icebp
sbb
stc
cltd
jbe
mov
pushw
std
stos
inc
fucomp
push
fldenv
adc
mov
push
sub
mov
cld
dec
pop
push
pop
iret
das
jae
sub
mov
dec
repnz
repnz
xchg
adc
in
int3
push
call
nop
adc
cwtl
dec
adc
jo
test
cmp
add
stos
into
push
mov
mov
mov
add
aaa
and
pop
add
lea
mov
pop
arpl
dec
idivb
push
sbb
clc
jp
jp
movsl
mov
repnz
or
mov
push
jge
push
pop
mov
jns
push
mov
lods
dec
jle
mov
mov
xchg
nop
pusha
ret
add
push
fistpll
outsb
inc
shlb
pop
mov
pop
or
lods
adc
ss
mov
out
adc
xchg
cld
cmp
js
pop
andl
repnz
imul
xchg
push
xlat
mov
sub
std
aam
inc
stos
psrld
sti
ret
cwtl
hlt
sbb
xor
inc
std
sbb
leave
and
cmp
adc
in
lcall
jle
mov
push
and
add
jns
or
inc
sbb
ss
xchg
mov
aad
jg
out
sahf
sahf
push
pop
lods
outsl
adc
dec
push
pop
lea
movb
sbb
add
jb
ret
mov
lret
adcl
dec
out
lock
mov
add
imul
mov
gs
and
movsl
and
bound
test
insl
cmp
roll
mov
bound
je
add
mov
lahf
popf
sub
hlt
xchg
int3
add
mov
sbb
enter
cwtl
not
fists
out
gs
dec
pop
pop
mov
and
stc
xor
sub
sahf
roll
mov
mov
mov
dec
clc
mov
nop
xchg
xchg
push
in
bound
mov
push
cwtl
aam
hlt
divb
xchg
shll
push
inc
pop
xchg
xlat
wrmsr
inc
arpl
adc
mov
jmp
fwait
stos
xor
js
rcll
cmpb
lods
fdivrl
rorl
adc
push
shl
pop
dec
push
in
sub
ficomps
stos
das
push
scas
mov
jge
enter
stc
addr16
inc
sbb
sti
cld
loope
jg
test
fcompl
repnz
sub
pop
or
push
cli
shr
adc
xchg
push
push
rcl
ret
call
adc
xchg
mov
xor
mov
sbb
andb
or
movsl
cwtl
scas
adc
ficoms
push
out
xchg
test
and
dec
bnd
leave
cmp
push
jnp
xor
imul
das
inc
xchg
int
jae
clc
push
jb
lods
xor
sub
bound
or
nop
cmp
das
jge
addr16
mov
add
stc
fcomp
test
in
push
sarl
lahf
popa
stos
push
vmulss
mov
rolb
fiadds
cmpsb
sbb
das
jp
les
jecxz
mov
mov
fildll
cs
outsb
movb
imul
push
lret
push
orb
mov
lds
pop
pop
repz
jge
pop
xor
aaa
and
xor
ss
ret
jnp
pop
jb
or
and
leave
xchg
push
pop
imul
decl
add
xor
inc
sub
pushf
dec
test
lds
in
dec
jle
cmp
cmp
ds
jne
mov
leave
test
push
jmp
pop
jl
add
push
mov
add
push
pop
fcoml
icebp
push
movsl
push
imul
test
sub
out
inc
inc
xor
pushf
movsl
into
cmc
adc
mov
fists
push
aad
cmp
xor
mov
push
cmc
cmpsb
mov
ljmp
lods
jo
mov
les
mov
xor
cld
sbb
negl
je
add
aad
popa
ljmp
loope
adc
cmc
cmpl
mov
mov
jae
sub
fmuls
push
test
adcl
pop
push
mov
add
xlat
mov
test
add
inc
add
mov
loopne
xchg
ljmp
bound
jo
dec
fidivrl
adc
jge
inc
out
fcomp
mov
inc
pop
arpl
les
add
push
arpl
ret
mov
inc
roll
xchg
xor
dec
into
lcall
inc
xchg
and
mov
inc
shr
fsubl
mov
add
cld
add
dec
out
push
pop
aam
dec
pop
xorb
imul
lds
push
push
aaa
xchg
hlt
dec
aaa
or
js
int3
fsubrl
xor
jp,pt
add
jge
lds
stos
mov
mov
xor
je
push
out
xchg
pop
fwait
stos
aad
leave
rcl
jne
and
or
sbb
and
xchg
ljmp
xor
mov
pop
mov
mov
push
stos
inc
das
nop
cs
xchg
lock
popf
push
xsave
lods
cli
ret
mov
pop
fwait
pushl
call
jmp
dec
in
dec
and
jbe
fldl2t
fsubl
bound
test
out
bound
jp
fstps
sti
lea
das
pop
push
add
es
call
jg
xchg
cld
push
gs
mov
adc
lods
lock
xchg
in
inc
or
orb
or
hlt
sbb
mov
das
xchg
mov
fmuls
or
data16
es
aaa
test
sahf
or
ljmp
xchg
rclb
cli
mov
or
das
mov
xchg
pop
popa
jnp
insb
cli
add
push
loopne
ds
dec
sub
shll
push
dec
mov
int
cltd
sbb
addr16
pop
out
sub
sbb
insb
jbe
iret
pusha
outsl
jg
pop
xorb
js
push
sbb
sbb
fisttpll
in
push
adc
sarb
inc
push
sarl
or
push
xlat
lds
pop
repz
popf
sahf
adc
xchg
icebp
inc
dec
xor
push
fwait
jl
out
hlt
cmc
sti
sub
add
jg
jb
jno
and
sub
lcall
sar
xor
call
cmpsb
fidivl
shlb
inc
dec
add
pop
adc
pop
mov
xor
test
or
mov
ss
dec
or
and
add
je
cmpl
mov
pop
aaa
add
mov
dec
add
ficomps
fwait
inc
push
dec
jb
or
pop
or
push
mov
mov
push
int3
or
push
xchg
aam
loop
cld
fcompl
inc
mov
pusha
dec
popf
sub
imul
inc
push
push
jp
mov
movsl
fmulp
stc
mov
outsl
or
int3
push
mov
scas
std
nop
lods
xchg
adc
out
mov
jno
lret
and
sbb
or
mov
loop
lods
push
ds
ja
enter
adc
loopne
and
jne
ja
je
push
fcoml
outsb
sub
jnp
xchg
mov
xchg
xorb
fs
out
movl
mov
pop
xchg
pop
adc
outsl
jmp
mov
into
insl
or
out
inc
subb
inc
insb
push
add
xorl
xlat
adc
inc
lods
into
cld
lahf
mov
les
xor
std
xchg
cltd
jne
stos
loopne,pn
addr16
xor
xor
push
movsl
inc
mull
sbb
jnp
fisubl
jne
sub
or
mov
or
shll
mov
pushf
iret
lock
aad
xchg
fistpll
orl
loopew
ljmp
jp
pop
lcall
or
scas
sub
je
std
cmpsb
pop
push
in
xor
fsubl
xchg
or
fidivrs
sbb
hlt
repz
xor
mov
lods
pop
push
xchg
cmp
push
adcl
ja
mov
push
sub
add
inc
mov
adc
stc
loope
xchg
lea
test
es
orl
dec
xchg
lds
xlat
lahf
pop
testb
mov
jae
lods
inc
add
test
sbb
dec
ret
addb
fldcw
jns
xchg
jo
enter
mov
enter
pop
mov
adc
into
inc
jnp
mov
xor
dec
ficoml
adc
cs
mov
sub
cmp
lret
mov
adc
lods
jmp
adc
mov
test
pushf
jp
mull
adc
xor
fldl
push
daa
cmpsl
jbe
cmp
jmp
xlat
popa
xchg
notb
sub
dec
jnp
rcrb
outsl
pmullw
call
jmp
push
jo
je
cmp
adc
sub
and
out
inc
mov
and
fnstenv
in
iret
push
insb
inc
push
mov
cmp
push
inc
add
incb
mov
pop
shll
pusha
adc
xchg
push
pusha
cli
add
test
add
xchg
xchg
inc
test
stos
cltd
add
adc
push
sarb
mov
add
cmp
sub
dec
shl
insb
pop
pop
sub
push
aam
xor
xchg
add
pushf
jae
loop
mov
fsubr
insb
cltd
fsubrl
xor
xor
mov
pop
xor
mov
pop
pop
lock
out
jge
out
aas
pop
fwait
xor
cwtl
adc
stos
add
jge
mov
mov
or
dec
mov
push
xchg
outsl
xchg
cs
pusha
cwtl
xor
icebp
push
lods
pop
cmp
aaa
mov
loope
gs
pop
xchg
pushf
add
push
xchg
jb
push
adc
xchg
fs
outsl
hlt
xchg
sbb
dec
xchg
fnsave
daa
jo,pn
cltd
add
mov
or
xlat
sbb
adc
adc
adc
icebp
outsl
jns
fnstsw
sub
mov
or
rcrb
ss
testl
inc
mov
sbb
std
std
stos
lcall
adc
push
fisubl
mov
fwait
outsl
andb
sbbl
fcoml
aaa
sub
lahf
fisubrs
or
scas
mov
stc
or
xor
inc
jp
clc
lcall
sub
xor
fnstenv
inc
mov
mov
inc
mov
bsf
add
scas
pop
inc
fmulp
mov
adc
sbb
mov
xchg
sbb
adc
xor
je
xor
sbb
shll
cmpsl
xor
leave
ja
jbe
or
stos
mov
cmp
pop
loopne
cltd
mov
fbld
fdivl
jmp
lds
adc
pushl
xor
test
xor
xchg
out
push
adc
movsl
ss
push
xor
nop
insl
fs
dec
rcll
imul
enter
xor
pop
sti
pop
and
sbb
or
push
bound
inc
sti
xchg
lret
dec
bound
insl
adc
lods
popf
mov
jp
sub
xor
std
sbb
gs
les
es
push
cmpsb
and
and
jns
sub
sti
aam
stos
cld
jnp
pop
mov
inc
clc
push
aaa
ljmp
xchg
roll
jp
xchg
jne
pcmpeqw
mov
push
rep
jle
lea
push
rcrl
jne
loope
cmc
adc
add
dec
fsub
frstor
cmpb
lods
rcr
jnp
ror
int3
xor
sbb
or
flds
and
cltd
lcall
mov
pop
rcrb
adcb
clc
mov
sbb
xchg
jmp
stos
xor
aad
je
dec
xor
fldl2t
dec
mov
sbb
shlb
push
push
dec
je
mov
jne
adc
lods
out
ret
pop
inc
sbb
cld
outsl
mov
ret
push
pop
or
mov
outsl
iret
es
std
movsb
jbe
xchg
imul
xor
xchg
sub
or
imull
sub
testl
lea
test
loope
jge
lret
out
out
out
loope
mov
sbb
test
pop
cmp
pop
cmp
pop
ret
inc
jmp
sbb
das
nop
negl
lret
scas
cmp
ja
add
loop
insb
leave
adc
cmp
mov
fs
jae
mov
stos
mov
push
mov
mov
push
lret
lds
xchg
lahf
ja
sbb
cmc
rcrb
xchg
lret
nop
out
mov
push
sbbb
cmp
test
fisubrl
pop
push
xchg
inc
inc
sbb
add
popl
cmpsl
idiv
xchg
sub
dec
mov
mov
nop
sarb
xor
repz
aas
inc
repz
testl
mov
popf
mov
cmp
or
adcl
sub
sbb
cmpsl
fiaddl
cmp
addb
imul
rorl
xor
adc
insb
push
add
xchg
hlt
jmp
sub
push
incb
pop
int
test
dec
jbe
push
xorl
xor
fsubrs
enter
call
and
sbb
push
stos
xchg
lea
loope
out
jb
nop
xacquire
xchg
imul
pop
pop
push
addl
movsl
in
lret
xchg
push
outsb
es
ret
insl
push
jne
cmp
xlat
dec
daa
jns
mov
cmp
int3
mov
sbb
test
mov
fwait
mov
xor
dec
cmp
push
adc
sbbl
js
sbb
insb
movsl
pop
popa
and
fdivs
jge
bound
pop
mov
jnp
and
mov
lahf
pop
cmp
push
push
cmp
mov
mov
jns
jl
mov
jnp
and
gs
aaa
and
push
and
aaa
adc
aaa
aaa
pop
push
insb
and
sbb
sbb
jbe
mov
dec
jae
sub
adc
clc
ficompl
mov
rcrl
xchg
adc
sahf
fcmovnbe
adc
mov
pop
repnz
dec
mov
adc
nop
mov
jne
push
cmp
pop
cmpsl
pop
xchg
stc
mov
jnp
jo
lods
sbb
mov
movsl
into
and
jge
fadd
pop
mov
sti
or
sub
lods
movsl
adc
cmp
les
mov
mov
sub
iret
fdivp
push
xchg
popl
cmpsl
jno
out
dec
mov
cmp
pop
insl
xchg
call
dec
es
lret
cmp
pop
mov
pop
cs
xchg
dec
push
pop
jge
cwtl
ljmp
push
pop
test
test
mov
cli
mov
mov
cs
lcall
pusha
imul
out
addr16
jg
pop
ss
push
mov
scas
pusha
imul
mov
push
mov
push
and
lds
bound
mov
cmc
popf
add
jne
hlt
outsl
je
pop
push
mov
sarb
decb
ljmp
in
or
inc
push
cmpsb
pushf
stos
movsb
adc
inc
or
mov
dec
adc
push
jb
push
mov
inc
jnp
iret
jo
mov
cmp
add
dec
pop
xchg
and
out
leave
fwait
ret
and
insl
aas
ss
inc
in
adc
inc
sbb
pop
mov
clc
or
pop
dec
push
pop
shll
sbbl
or
add
test
decb
shlb
hlt
mov
aaa
sti
cli
loopne
ret
cs
lahf
inc
xchg
jno
stc
lret
mov
mov
ds
pusha
lcall
xor
rclb
mov
mov
lds
subb
pop
sti
pop
xchg
dec
clc
mov
push
insb
out
and
and
shll
movl
addr16
std
cltd
pop
arpl
lock
add
in
xchg
mov
cmp
nop
push
scas
scas
inc
jbe
mov
sub
test
cmp
or
fwait
addl
mov
inc
fadd
std
pop
aas
xor
mov
pop
sub
rclb
jp
cmp
out
pushf
rcll
mov
add
data16
dec
xor
inc
pop
mov
xchg
imul
fsubr
sbb
fisubl
adc
or
pop
addr16
push
mov
insl
fcoms
int3
in
inc
std
rclb
roll
outsl
and
mov
mov
sub
cwtl
or
xchg
pop
mov
imul
lret
mov
je
sub
nop
mov
test
cli
out
fwait
iret
fmull
and
mov
or
scas
jbe
sub
jmp
and
jo
cwtl
arpl
xlat
push
imul
fs
dec
sbb
add
xor
cmc
lcall
insb
add
sbb
lcall
add
mov
dec
mov
inc
addr16
lret
lahf
push
mov
sub
sbb
jmp
mov
sbb
mov
cld
idiv
mov
cmpsb
pop
js
push
rcrl
xchg
pop
and
add
push
popa
stos
sub
mov
shll
push
ret
mov
out
daa
jg
xchg
iret
ret
in
push
inc
add
and
and
mov
fwait
push
cmp
data16
jle
push
dec
adc
xchg
icebp
sbb
push
icebp
lret
mov
adc
add
adc
add
push
lock
mov
cmpsb
pop
push
mov
repnz
out
xchg
jle
stos
stc
stos
fs
mov
js
repz
pop
lcall
mov
sub
daa
jmp
xchg
sbb
je
stos
mov
or
in
push
sub
loop
and
es
add
inc
je
mov
jae
shrb
lahf
ffree
pop
pop
mov
inc
loope
lea
aas
int
dec
pop
or
dec
mov
add
aaa
sub
aad
add
sub
dec
sub
pop
pop
int3
stc
cmc
sub
movl
in
pop
in
enter
or
loopne
inc
inc
jecxz
insb
js
insb
aam
inc
mov
test
mov
loope
or
js
les
jo
or
loopne
xchg
push
adc
je
in
adc
adc
sbb
jo
xchg
lods
push
popf
and
adc
imul
xchg
pop
sbb
xchg
lods
lds
addr16
pop
scas
out
out
xor
adc
mov
mov
mov
dec
popf
imul
sbb
cmpsl
mov
ror
lret
int3
outsl
cmp
repnz
or
rep
je
dec
xchg
pop
out
jge
pop
and
int
mov
aas
loopne
aad
or
xorl
xchg
jb
xchg
pop
out
fs
push
imul
gs
inc
arpl
or
adc
addr16
stc
mov
loop
sbb
dec
add
popa
icebp
dec
ficomps
mov
sub
jmp
daa
mov
fcmovbe
inc
xchg
lods
push
aad
into
adcb
repnz
cmpsb
popf
aad
push
pop
xchg
inc
repnz
stos
mov
pop
push
in
and
rorl
add
dec
aam
inc
xor
ret
push
aaa
xor
in
movb
cld
adc
xchg
xchg
shlb
aas
sub
movsl
pop
mov
jge
ret
pushf
push
sbb
out
jmp
loop
ljmp
mov
push
mov
pslld
cld
push
and
out
fldenv
jb
mov
jno
mov
int3
xor
add
sbb
mov
les
repnz
aas
mov
in
pop
mov
mov
pop
push
rcrb
pop
mov
fbld
sbb
scas
jno
pop
jecxz
mov
jo
sbb
sbb
sbb
out
jge
mov
loopne
insb
out
lcall
stc
arpl
insl
dec
addb
jl
push
jbe
bswap
jae
into
insb
adc
std
cs
lods
aas
in
daa
call
mov
out
inc
jae
xchg
jg
mov
or
gs
das
push
out
icebp
sbb
test
pop
jp
stos
test
xbegin
repz
cmpsb
cld
test
jae
add
jae
mov
or
xor
pop
mov
and
jnp
mov
pop
lods
daa
stos
fwait
int
scas
push
popa
and
mov
outsb
cmp
and
jns
sbb
xor
les
xchg
and
push
in
xchg
sub
sub
in
mov
cmp
jp
jno
fdivrl
mov
out
cmpsl
sahf
ret
nop
fstps
push
hlt
push
fcmovb
idiv
cmp
jb
inc
push
jle
imulb
bnd
mov
sub
xlat
inc
push
inc
cs
cmp
dec
mov
cmpsb
repz
nop
push
xor
mov
xchg
cmpsl
mov
push
popa
test
ljmp
xchg
fs
push
push
push
mov
push
mov
dec
fsts
into
jle
cmpsb
into
mov
int
dec
int3
lea
into
mov
mov
inc
lret
leave
dec
movsb
outsb
out
popa
pushf
xor
loope
mov
in
xor
sbb
js
pop
push
int3
push
in
dec
arpl
in
es
mov
pusha
sub
jl
xchg
push
test
fildl
sub
adc
xchg
xchg
sub
subb
sbb
pop
in
in
xor
or
gs
aad
iret
pop
mov
ljmp
push
in
ror
cld
adc
sbb
inc
fstl
into
xchg
push
mov
cmp
or
mov
stos
jmp
add
mov
xchg
iret
xchg
push
jecxz
sub
filds
test
aaa
xlat
xchg
push
and
adc
cld
shrb
jne
lods
repz
movsb
leave
dec
adc
adc
ret
mov
aas
or
jmp
movsb
jg
rorl
arpl
shrb
ds
gs
inc
sbb
xor
shl
jbe
push
lock
add
lea
xrelease
test
xchg
ss
std
add
into
sub
mov
and
push
dec
bound
mov
mov
pop
inc
pop
pop
popf
int
xor
sub
mov
lcall
test
jge
aad
jns
testl
sbb
or
xchg
mov
sbb
or
xchg
pop
push
and
sbb
mov
pop
pop
pop
sub
mov
loop
cld
adc
inc
repnz
and
cli
iret
out
in
jno
mov
and
pushf
repz
es
mov
lahf
push
xchg
xchg
jno
movl
push
clc
out
das
cmp
mov
out
jp
or
mov
add
loopne
cmp
push
je
cmp
fnstenv
fwait
outsb
mov
loopne
cmp
out
xlat
sbb
lock
test
sbb
hlt
adc
mov
pusha
xchg
and
jnp
imul
mov
lahf
push
or
pop
sub
in
ss
sub
pop
in
inc
mov
aaa
test
or
cltd
mov
nop
rcrb
or
xor
iret
loopne
adc
sarl
mov
cmp
loopne
loope
pop
add
pop
imul
mov
int3
mov
xor
cmc
pop
imul
xlat
xor
mov
dec
inc
test
inc
outsb
push
sar
cwtl
cmpsl
test
mov
inc
repz
jl
xchg
icebp
ret
sbb
push
mov
loopne
imul
outsb
icebp
sbb
and
jb
cmp
ror
imul
adc
xchg
ds
mov
push
xchg
das
pop
sbb
mov
and
ljmp
adc
ds
cli
out
clc
mov
cmpsl
push
mov
in
movsl
mov
aad
pusha
movsb
xor
sbb
dec
inc
xor
jae
or
in
fiaddl
sbb
subl
sti
adc
dec
mov
cmc
les
cli
push
pop
std
sub
add
test
mov
call
dec
lahf
idivl
out
sub
leave
cwtl
mov
jle
lock
clc
mov
sub
mov
mov
xchg
sub
icebp
lods
xor
in
push
inc
jp
rolb
mov
fdivl
pop
add
enter
push
scas
dec
bound
mov
push
pop
adc
mov
push
imul
xor
xor
out
sub
jp
lret
out
cmpsl
sbb
test
pusha
push
dec
inc
inc
adc
mov
popf
jle
jae
mov
test
in
outsl
cmp
pop
je
ds
stc
cmp
and
loop
mov
lcall
or
out
or
dec
sub
lret
daa
push
outsb
mov
std
mov
jecxz
xor
popf
insb
loop
lock
repnz
pop
pop
push
mov
cmpsb
ret
outsl
mov
repnz
xor
cwtl
mov
inc
push
and
lea
push
or
lods
cld
inc
xor
insl
inc
fcoms
mov
add
mov
sbb
push
push
lahf
pop
lds
or
inc
into
stos
mov
and
icebp
clc
mov
stos
mov
aas
in
out
push
mov
fadds
mov
pop
mov
imul
cmp
lea
das
mov
mov
cmpsl
jmp
cld
adc
clc
icebp
pop
or
push
lret
ljmp
mov
push
dec
cmp
xchg
vhsubpd
xchg
ret
test
lods
outsl
dec
addr16
pop
mov
fnstenv
int3
xorb
jne
dec
add
dec
insb
lret
fs
or
ja
sub
ret
dec
sub
subb
pushl
pop
cld
cld
add
jo
xchg
test
and
ss
xor
cmpb
test
mov
bnd
faddl
mov
cwtl
jecxz
xchg
xchg
imul
call
mov
xchg
mov
jle
xor
pop
jl,pt
push
loopne
xor
dec
popf
int3
push
lea
mov
iret
in
cwtl
push
xchg
cmp
aad
push
mov
jg
rcll
jg
ret
mov
mov
jp
dec
mov
xchg
fdivs
lds
mov
jl
fdiv
fidivrs
addl
sar
pop
ss
mov
andb
subb
mov
leave
add
add
insl
push
or
loopne
and
or
push
xchg
sub
sub
fisttpl
imul
and
add
cmp
imul
addb
push
and
and
int
into
mov
pop
enter
jp
pop
pop
jne
xor
call
movb
mov
mov
push
lret
cld
push
cli
adc
lcall
add
scas
shl
cmp
xlat
mov
adc
pop
jmp
aam
ror
fidivrs
xchg
aad
dec
fisttpll
mov
lea
flds
and
pop
in
cmovge
add
and
in
enter
sub
jmp
fwait
add
mov
adc
adc
aaa
push
fadds
cmp
lds
mov
push
mov
lret
mov
rcr
lods
pop
sub
cltd
into
or
lcall
scas
fs
mov
add
adc
mov
flds
adc
dec
stos
cltd
push
xor
mov
arpl
nopl
inc
adc
mov
push
mov
fistpll
fsubrp
inc
pop
inc
or
lret
jbe
test
ljmp
sub
loop
subb
mov
hlt
pushf
pop
int3
test
and
jg
subl
int3
dec
shlb
pop
jl
inc
inc
scas
sbb
in
and
lods
xchg
adc
xchg
aam
xor
in
addr16
ja
in
add
and
rclb
dec
sub
xchg
xchg
sbb
sbb
dec
cmp
dec
mov
nop
xor
inc
lret
xchg
dec
mov
outsb
adc
mov
lret
pop
and
xor
adc
add
cmp
inc
sbb
enter
jo
jno
outsb
mov
es
and
lcall
and
cmp
fmuls
xchg
imul
xor
ja
push
orl
push
xchg
xor
call
test
mov
mov
sub
dec
mov
mov
or
rclb
mov
xchg
fidivs
sub
add
mov
shl
mov
xchg
shr
bound
rcl
pop
das
inc
xchg
sahf
add
mov
rorb
mov
or
mov
mov
lcall
setp
js
push
bound
test
movsl
ficompl
and
push
dec
stos
lods
test
stos
adc
pop
sbb
cmp
out
xor
loope
dec
mov
mov
push
sbb
dec
dec
inc
mov
cmp
adc
data16
lds
xchg
stos
push
in
out
lods
inc
and
stos
inc
mov
push
pop
add
outsl
icebp
pop
les
pop
sub
dec
jns
add
stos
jge
cmpsl
rolb
lods
sbb
ficoml
mov
stc
push
fisubl
and
cwtl
inc
xchg
repnz
xor
xchg
add
xchg
das
outsl
ret
outsl
dec
xchg
ret
shl
or
push
xchg
xorb
rcl
sbb
cwtl
call
fldenv
fs
push
test
sbb
cmp
xchg
sub
or
loope
xchg
mov
call
push
lret
xchg
mov
in
ret
add
sub
dec
outsb
or
adc
ret
inc
fmuls
je
add
test
lods
push
cwtl
cmc
cmp
out
xor
pop
pop
sbb
cltd
sub
testl
sbb
pop
and
mov
lods
push
xchg
fisttpl
fsubs
jp
mov
das
add
jno
cmpsl
inc
popf
push
xchg
push
outsb
outsb
int
stos
inc
mulb
fcoms
xchg
and
jg
or
imul
pusha
js
and
lods
cmp
xorl
pop
mov
shrb
ja
mov
rep
mov
jno
test
inc
mov
loopne
fs
jl
lret
inc
sarl
push
bound
clc
sub
push
pop
mov
jnp
out
stc
repnz
sub
pop
xchg
scas
push
jl
inc
adc
mov
dec
adcb
inc
mov
lret
mov
stc
sbb
cmp
lods
adc
js
scas
xchg
mov
mov
fsubrs
mov
repnz
pop
sahf
popf
jae
pop
subl
in
enter
in
pop
inc
xchg
inc
das
shrl
fwait
sar
cwtl
sti
in
fs
dec
sub
stos
cmp
int
xchg
int
adc
aaa
rolb
filds
sub
inc
arpl
or
dec
inc
out
mov
lret
cmp
xchg
cmp
cmp
fsts
push
rolb
outsl
lods
test
mov
data16
sub
sbb
inc
cmp
mov
test
xor
lret
xchg
loope
xchg
xor
aaa
insl
mov
dec
mov
jecxz
repnz
jbe
xlat
btc
mov
lock
fnstenv
jns
call
mov
ljmp
jae
xchg
fidivrl
scas
inc
ss
xchg
out
mov
jmp
add
in
mov
popf
dec
movsl
je
mov
shrb
mov
hlt
iret
stos
or
rcrl
mov
sub
outsl
xchg
cmp
cli
fidivs
xor
mov
cltd
js
lods
adc
push
sbb
sub
jg
addl
test
xchg
pusha
add
xchg
hlt
fucom
mov
add
adc
int3
push
sub
les
cmp
cmpsl
outsl
or
ds
std
shr
lods
fwait
dec
jge
cs
xor
mov
jb
push
sti
cli
mov
xchg
fimuls
andb
in
adc
cli
cmp
cmp
jle
jecxz
outsb
inc
inc
push
xchg
sysenter
xchg
jg
jae
insl
lock
repz
jmp
push
adc
into
pop
or
aad
frstor
add
cmpsb
inc
repnz
push
mov
arpl
out
push
mov
and
push
dec
neg
repz
lret
test
mov
mov
rclb
jb
ja
out
scas
sub
popa
ss
orl
sbb
gs
lods
pusha
push
test
mov
or
cmp
loope
xchg
dec
xchg
xor
pop
mov
vmaxpd
int3
jnp
std
or
ret
cmp
out
aaa
sti
push
cmp
stos
xchg
lea
mov
stc
sahf
add
jns
and
pusha
movsb
setnp
sub
sub
cmp
mov
push
and
lret
sub
xchg
repnz
and
push
and
imul
bound
std
test
mov
imul
xor
mov
dec
cltd
mov
fstpt
cmp
add
jbe
sub
mov
push
xor
jo
push
pop
pop
arpl
xchg
xchg
jb
or
mov
mov
sub
mov
outsb
int3
pop
insb
test
sbb
xchg
and
lcall
xchg
inc
test
sub
jl
push
cmp
cs
mov
rcl
jl
pusha
movsl
or
xor
imul
mov
push
cmpsb
stc
loopne
dec
repnz
leave
loope
inc
insb
std
or
test
xchg
popf
js
or
imull
jmp
lock
fcomps
inc
cmp
mov
lock
out
pop
insl
cwtl
mov
clc
loop
je
adc
test
sahf
scas
divl
imul
stos
mov
ljmp
ss
popf
push
je
test
repnz
inc
fdivs
push
bound
sti
nop
addb
loopne
ds
lahf
and
sub
xchg
inc
repnz
bound
dec
sub
lret
inc
aas
inc
nop
les
rclb
mov
push
fldenv
es
xchg
sbb
xor
xchg
xor
jecxz
xlat
fadds
clc
das
iret
mov
mov
in
sub
dec
test
push
sbb
mov
insl
js
leave
xchg
cmp
orl
adc
fcomps
adc
jae
push
jnp
cmp
mov
dec
test
hlt
int
cmp
shll
je
jmp
shrl
out
rclb
push
mov
js
xchg
ffree
daa
mov
mov
mov
cmc
fldt
scas
es
mov
andl
adc
pop
dec
adc
xor
mov
insb
aas
lahf
mov
nop
and
xor
inc
sub
pop
movsl
enter
mov
fs
hlt
xchg
dec
sub
andl
mov
out
mov
cmp
adc
popa
mov
push
or
cmp
mov
or
clc
pop
cs
inc
dec
xor
ds
mov
test
test
outsb
sbb
lods
icebp
mov
mov
sub
inc
test
aad
loop
jns
xor
or
cmp
and
and
orl
insl
lods
push
fstpl
mov
js
mov
dec
pushf
and
mov
popaw
mov
mov
push
flds
mov
lds
call
insl
add
and
aad
subb
cmpsb
rcr
dec
mov
lret
jecxz
mov
mov
jb
inc
adc
dec
mov
cmp
xchg
int
shll
incl
dec
xor
in
mov
das
pop
jg
in
not
movsl
xor
lahf
aam
and
add
or
dec
or
xor
int3
mov
fbstp
mov
cmpsl
mov
cmp
out
adc
outsl
pop
in
sarb
in
cmp
call
inc
hlt
cmp
add
call
movsb
test
aad
dec
cli
and
jnp
xlat
sti
cmc
lret
add
mov
dec
test
pop
add
sbb
sbb
hlt
add
insb
out
test
es
hlt
je
sub
or
movsl
data16
push
rorb
inc
adc
jne
hlt
add
pushf
jne
dec
jmp
push
inc
cmp
cmp
and
cmp
loope
test
and
push
jbe
xor
cmp
es
out
leave
add
xor
outsb
ret
fsubrl
jno
inc
jmp
ret
push
andl
cwtl
out
push
jo
jecxz
sar
pop
mov
je
rcrb
push
lahf
negb
add
adc
mov
jo
adc
int3
push
push
inc
mov
out
xchg
out
xor
pop
dec
jge
bound
sub
add
sub
cwtl
jmp
outsb
xor
call
das
fs
aad
jae
lcall
push
lcall
cmp
mov
hlt
ret
xchg
cmpsb
fdivrl
jge
inc
and
ljmp
das
pop
mov
push
dec
pushf
int3
mov
push
test
add
push
xor
add
dec
dec
stos
pop
mov
xchg
mov
ret
pop
push
ret
add
movsl
pop
add
scas
es
iret
fbstp
sbb
pop
cmc
mov
cmp
insb
in
or
push
push
cmp
sbb
mov
mov
ret
inc
jecxz
xchg
push
repz
mov
js
test
sbb
mov
test
mov
jno
movsl
je
js
loop
cmc
outsb
repnz
dec
daa
xor
or
sub
nop
in
dec
dec
jmp
data16
mov
leave
xchg
scas
mov
mov
in
insl
mov
jle
mov
scas
mov
fistpl
stos
dec
sub
sbbb
sarl
xchg
sbb
push
jo
std
fdivrl
sub
loop
sub
inc
dec
ja
cmp
mov
in
inc
sbb
dec
and
adc
adc
inc
push
ss
inc
inc
pop
push
xchg
xchg
inc
in
pop
in
or
ficoms
dec
sbb
fimull
jo
push
int
or
mov
into
jns
dec
cmp
pop
mov
lds
jg
push
lea
nop
jb
imul
fwait
clc
add
or
js
int3
xor
sbb
adc
leave
dec
jmp
out
repnz
mov
leave
and
out
add
mov
mov
pop
push
cmc
test
cmpsb
je
inc
mov
sahf
aad
mov
dec
jo
push
and
jo
add
daa
mov
data16
sbb
dec
xchg
rorb
pop
loop
push
jl
loopne
out
cmp
or
stc
out
lahf
inc
lret
xor
cmp
sub
fisubs
xchg
push
loopne
movsb
in
mov
aaa
add
sub
out
sahf
cs
pop
dec
les
test
sub
mov
adc
xchg
dec
pop
xor
scas
pop
mov
les
test
jle
push
mov
out
push
xchg
mov
xchg
jge
sub
insl
in
jmp
out
addr16
in
cmp
sbb
pop
loop
lods
mov
mov
sub
cltd
daa
add
jne
lods
sbbb
add
ljmp
cli
jge
or
pushf
mov
les
clc
pop
sbb
rcrb
pop
mov
loopne
dec
add
andb
ljmp
or
lret
xchg
testb
ret
fwait
insl
cli
push
mov
or
push
or
sbb
cmp
adc
and
testl
ss
push
mov
out
mov
pop
xor
xor
aas
sbb
sbb
stc
mov
leave
outsl
pop
jo
push
pop
jb
mov
popa
pop
pushl
push
push
or
mov
andb
mov
ret
addb
sarb
ljmp
mov
cltd
pushl
push
xlat
call
mov
xor
sti
ljmp
push
imul
leave
mov
dec
inc
xor
or
or
push
icebp
cltd
aas
sbbl
sub
ds
mov
inc
into
inc
mov
jp
inc
xchg
xlat
mov
cmpsl
shll
sub
mov
xor
popf
arpl
fs
pop
sahf
push
pop
ss
daa
test
cmc
ficoms
mov
lahf
mov
push
dec
call
inc
mov
add
popf
dec
cmp
mov
xchg
push
mov
test
mov
adc
or
out
pop
sub
fbld
mov
ret
mov
push
sahf
mov
stos
push
and
arpl
inc
cmc
adc
cli
pop
test
fcoml
loop
xor
in
push
pop
out
push
stc
es
dec
dec
lea
and
adc
jb
jns
or
jg
addb
push
mov
push
adc
pushl
push
iret
mov
cmp
jp
mov
dec
or
xchg
xchg
mov
shl
cmp
and
movsb
icebp
xlat
repnz
mov
scas
mov
lods
call
jecxz
and
pop
mov
mov
pop
fcompl
push
jle
jp
imul
add
and
rclb
fisubrs
jb
jle
jg
insb
mov
and
sahf
adcb
mov
push
inc
loop
in
mov
popa
int3
xchg
mov
or
mov
test
sub
insb
or
cmp
xor
hlt
xor
cwtl
shr
push
js
in
out
mov
xchg
repnz
adc
cmpl
push
adcl
sbb
fldcw
sub
xor
mov
movzbl
sub
ret
mov
int
push
popa
jp
fistps
leave
inc
lea
pop
or
cmpsb
leave
dec
adc
mov
lea
and
cmp
dec
jmp
jle
dec
inc
mov
and
test
out
and
loope
pop
dec
stos
ss
push
pusha
cmp
pop
ret
adc
addr16
sbbl
arpl
cli
repnz
fwait
daa
inc
inc
daa
jl
or
rolb
enter
mov
out
inc
push
aad
push
out
push
subl
ret
filds
pop
into
lods
roll
movsl
outsl
jbe
jbe
add
repnz
fwait
daa
adc
cld
out
push
mov
xor
popf
enter
sbb
test
aas
in
cltd
cmpsl
stos
test
xchg
inc
sbb
xchg
loop
ds
xchg
push
cmpsl
or
or
jmp
addb
mov
jb
lods
or
aaa
sbb
pusha
sub
mov
mov
outsb
xor
jmp
and
movsl
movb
jbe
xor
push
frstor
scas
push
jnp
dec
scas
test
push
lcall
fisttps
int
mov
or
dec
mov
popf
jp
push
or
dec
aad
out
xor
stc
jo
xor
gs
sub
test
insb
stos
jmp
jl
loopne
loope
rcr
in
shll
xchg
pop
pop
lea
cld
outsb
add
into
call
repz
xchg
call
enter
aam
push
por
ds
aas
jb
out
je
mov
test
stos
movsb
loop
pop
cli
dec
test
nop
roll
xor
xor
dec
fwait
movb
jo
hlt
scas
adc
outsl
loope
imul
stc
xchg
sbb
mov
mov
fdiv
outsl
mov
jp
xor
and
pop
imul
pushf
pop
or
notl
sbb
sbb
mov
mov
dec
add
sbb
jle
out
das
stc
and
add
mov
add
pop
xchg
jns
pop
and
xchg
jae
jle
shrl
mov
aam
fimuls
shl
arpl
pop
inc
scas
dec
push
or
fwait
sub
dec
xchg
and
dec
sbb
lcall
test
lret
inc
lret
push
push
xor
xchg
adc
ret
sub
enter
nop
fcomi
js
mov
mov
mov
daa
push
pop
icebp
out
jp
jge
pop
mov
pushf
icebp
out
and
mov
or
mov
inc
sub
pop
cmp
xchg
clc
fisttps
pop
in
or
lcall
test
gs
jp
clc
jg
sbb
pop
rcrb
add
jae
sbb
pop
mov
and
and
mov
enter
fcmovu
xchg
aam
mov
sbb
pop
or
jae
xchg
cmp
outsb
stos
mov
clc
or
adc
popa
sbb
push
call
repnz
sarb
xlat
pop
in
lahf
pop
and
cmpb
ljmp
xchg
mov
add
pop
and
test
shl
xchg
dec
or
pop
pop
fs
pop
cmp
cmp
std
mov
arpl
roll
repz
test
jbe
jle
cs
cmpsl
lahf
sbb
jl
shr
dec
inc
dec
call
or
mov
addr16
sbb
xchg
xor
out
jge
xor
or
add
sbb
stos
stos
lahf
sbb
adc
xor
arpl
aaa
and
pop
push
add
dec
jge
in
push
pusha
sbb
outsb
fwait
adc
lods
mov
lods
icebp
popa
int3
aad
jae
js
mov
insl
lock
lret
repnz
test
push
gs
cmp
imul
jmp
addr16
and
hlt
data16
data16
mov
test
mov
leave
cwtl
ss
cmp
cmp
into
mov
enter
popf
cmpsb
xor
xor
jns
pop
mov
inc
or
jg
add
sbb
mov
scas
jge
cmp
scas
jbe
insb
mov
in
aaa
repz
insb
cmpsl
add
sbb
aad
ss
nop
addl
insl
lret
sarb
es
aad
push
push
sub
mov
xchg
mov
xchg
rorl
jne
sbb
adc
divl
addl
sbb
hlt
sub
and
jae
and
sub
aas
mov
dec
cmova
cmp
out
mov
mov
pop
movsb
dec
arpl
cmp
sbb
aaa
inc
jno
dec
xchg
test
mov
jb
and
pop
inc
cld
mov
xchg
push
test
ret
outsb
gs
addr16
imul
mov
lahf
jne
pushf
xor
cmp
dec
cmpsl
int3
sub
je
mov
dec
ds
xor
test
sub
insl
mov
xchg
inc
mov
repnz
mov
jo
stc
out
mov
cmpb
mov
jg
dec
sub
loopne
xor
push
dec
pop
xchg
fnstenv
in
loope
xchg
xchg
fnstcw
push
mov
mov
cmpl
inc
outsl
sbb
inc
les
outsl
daa
cmp
add
daa
inc
lret
rorb
jno
ss
mov
iret
bound
mov
cmp
push
mov
outsl
inc
jnp
pop
jne
cmp
js
xor
dec
xchg
sub
call
cmpsb
lea
push
loopne
outsl
je
jp
flds
push
clc
push
outsl
andb
das
test
xor
jnp
ja
mov
mov
xor
cmp
xchg
cltd
hlt
jmp
xor
jae
ret
and
lods
icebp
cld
xor
add
fistps
or
jge
roll
gs
popf
sbb
xchg
out
push
push
sbb
adc
aam
sahf
and
jecxz
xor
or
stc
pop
mov
cwtl
lods
inc
rcl
inc
xchg
jl
cmp
gs
lds
outsb
mov
pop
add
fsubr
fistl
add
push
lods
fsts
xchg
push
jl
adc
ret
lods
and
cmc
push
xor
iret
dec
pop
cmpsb
mov
and
cmp
mov
mov
test
xchg
lods
jb
push
adc
int3
mov
mov
cwtl
push
jmp
mov
aad
jne
in
das
popf
arpl
jb
inc
lret
mov
push
pop
lret
mov
xor
shll
inc
adc
cli
fisttpl
int3
insb
jns
or
mov
vcvtsi2ssl
data16
adc
mov
fnstcw
loope
lea
add
inc
cli
ljmp
jecxz
mov
sub
dec
and
int3
push
sbb
mov
pop
int
cltd
mov
mov
in
jmp
sub
cltd
mov
es
mov
iret
jo
shlb
push
addr16
jno
xorl
das
xlat
fldenv
mov
xchg
lret
arpl
iret
xchg
push
stc
js
cmp
cld
rol
das
and
xchg
and
aas
jg
mov
jl
clc
daa
pop
popf
fsts
test
sbb
adc
fwait
jns
inc
inc
test
dec
push
cmpsl
push
mov
in
stos
lock
inc
push
mov
cld
or
dec
adc
sbb
sub
addr16
bound
add
sarl
enter
enter
adc
lds
cli
scas
or
es
cmp
inc
adc
sar
mov
out
mov
lcall
or
sbb
lods
or
fs
cmp
mov
outsb
push
inc
pop
mov
adc
test
ljmp
jo
jp
sbb
stos
lea
imul
jmp
sbb
push
daa
or
sbb
fwait
cli
out
into
mov
loop
add
pushw
and
fidivl
cmp
shr
xchg
jae
inc
dec
dec
inc
xlat
or
jae
add
mov
rorb
addr16
outsb
mov
int
xchg
dec
xchg
adc
sub
or
pop
in
dec
cwtl
in
or
inc
xor
mov
js
pop
mov
in
cmp
loopne
xor
idivl
push
xlat
xor
aaa
jbe
lods
xor
push
mov
das
lcall
pop
sub
mov
sub
js
push
push
sti
pop
enter
cmpsl
sti
cld
sarl
mov
divl
cmp
inc
test
cmp
cs
sbb
push
and
test
adc
ss
add
mov
xchg
je
ds
mov
cltd
jecxz
lret
lock
and
stos
out
sahf
inc
leave
imull
sbb
mov
and
into
out
push
gs
lret
mov
pop
cmp
stos
mov
or
mov
mov
test
ds
add
pop
or
xchg
movsl
cmp
repnz
and
test
xlat
outsl
inc
pusha
xchg
into
int
insl
outsb
dec
inc
insb
cmc
mov
cmpsl
push
cmp
mov
and
and
or
shlb
lahf
repnz
jle
or
mov
dec
test
and
fninit
shlb
mov
loop
mov
stos
adc
push
and
adc
leave
loopne
inc
repz
lock
int
bound
sub
pushf
adc
jmp
jg
lea
pop
mov
pop
push
lods
shlb
das
mov
jb
loope
dec
xor
cwtl
pop
addl
inc
pop
js
les
cmp
mov
fmull
dec
pusha
enter
dec
add
jo
fstp
sub
push
ds
push
and
adc
dec
lahf
jge
lret
imul
fmull
pusha
jbe
xchg
mov
adc
dec
xchg
mov
dec
and
sbb
iret
insb
add
call
pop
out
dec
sub
add
inc
xchg
add
nop
scas
ret
cmp
mov
ret
rorl
xchg
cmpl
aad
cltd
mov
data16
stos
xchg
shlb
stos
dec
or
jnp
mov
jp
andb
inc
cmc
and
mov
add
xchg
push
icebp
mov
mov
cli
cmove
sub
insl
inc
jle
cmp
add
shlb
xchg
les
outsb
and
lods
outsl
push
insb
cltd
mov
and
addr16
dec
divb
sbb
push
or
jl
dec
jae
jb
lods
adc
out
or
mov
das
jge
dec
ret
cmp
cmp
xlat
mov
push
jae
sbb
imul
dec
inc
mov
nop
jg
mov
aad
push
hlt
mov
out
ret
xor
adc
jg
cmp
mov
addb
out
call
add
mov
cmc
ja
repnz
rcrb
sub
rolb
repz
aaa
sahf
push
cmc
in
push
jecxz
popf
lcall
xorl
or
mov
mov
and
xor
test
repnz
inc
mov
repz
pop
icebp
add
ret
or
push
mov
pop
popf
cmp
rorb
cwtl
jae
push
mov
inc
syscall
mov
mov
out
mov
out
push
test
sbb
in
pop
sbb
mov
inc
cmp
inc
test
or
push
sub
and
jmp
pop
inc
fistl
js
in
mov
xchg
loop
mov
out
aad
shl
das
test
out
jne
test
sub
pop
nop
adc
mov
dec
movsb
sub
dec
mov
jnp
cwtl
cs
xchg
pop
adc
movsb
pop
std
imul
jecxz
xchg
and
inc
add
out
or
dec
mov
xchg
shl
mov
push
dec
insb
push
xor
enter
stc
and
lret
sbb
add
xchg
mov
rorl
mov
inc
xor
push
int
mov
shl
enter
mov
leave
fdivl
mov
sub
push
aad
mov
xchg
cli
lret
je
out
in
cwtl
or
mov
fwait
lods
and
fildl
mov
push
mov
dec
out
sbb
mov
jmp
xchg
xchg
cmp
add
lcall
fnstcw
aas
xchg
sarl
fimull
fbld
adc
cwtl
addr16
dec
roll
xor
push
rcrl
mov
dec
mov
clc
loope
xor
sti
adc
test
dec
popa
adc
push
inc
pusha
mov
and
mov
shll
clc
out
imul
rorl
cs
sub
adc
inc
xor
cmp
mov
ds
jo
mov
test
int
movsb
scas
pop
iret
xor
fistpll
inc
sub
ret
ss
jbe
shrl
dec
je
rclb
mov
cmp
or
out
arpl
pop
sub
ja
jle
pop
repnz
call
fs
mov
dec
pop
push
jle
lcall
and
add
cmp
add
loope
sbb
in
pushf
in
sub
mov
jl
call
mov
jecxz
popf
and
fwait
bound
dec
ficoms
aad
orb
pop
sbb
mov
test
ret
hlt
push
adc
pop
jne
pop
cmp
aas
popf
clc
out
xchg
mov
jb
or
inc
pop
mov
mov
ja
fcmovnbe
dec
stc
push
inc
enter
pop
std
sbb
repnz
jle
jnp
ss
lcall
or
pop
mov
inc
push
push
test
mov
cmp
add
dec
les
push
jns
add
adc
fcmovne
jns
sub
rcrl
mov
out
jnp
sbb
scas
test
popf
pop
int3
stc
jle
adc
sbb
jp
sahf
adc
ret
mov
sub
pop
or
adc
jnp
mov
jg
movsl
xchg
cltd
mov
jle
mov
inc
iret
jp
pop
shlb
ffree
insl
dec
shr
dec
pop
push
adc
jmp
test
mov
andl
stos
outsb
xor
pop
lret
push
lock
lock
xchg
stos
mov
fcmovbe
popf
mov
mov
mov
mov
jge
imul
push
mov
push
jb
stos
dec
pop
xorl
dec
imul
inc
dec
icebp
outsb
jmp
mov
std
loopne
loopew
cmp
add
jp
addr16
mov
sub
fsubr
test
jecxz
xor
sbb
xchg
daa
xchg
inc
jmp
sub
cltd
arpl
inc
adcb
mov
bound
inc
adcl
mov
cltd
je
pop
mov
rorb
jb
popf
aam
xor
arpl
mov
clc
dec
or
hlt
cmp
insb
je
es
addr16
nop
imul
push
pushf
sbb
ffree
cmp
in
xchg
pop
xchg
pop
cltd
mov
and
xchg
jns
or
jge
mov
dec
jb
add
mov
in
test
pop
mov
mov
xchg
arpl
call
push
rcll
lret
stos
pop
push
bound
stos
adc
and
cld
mov
scas
or
add
outsl
jp
std
mov
push
daa
fmuls
push
mov
cs
pushf
sub
mov
out
push
inc
dec
push
mov
shlb
jbe
sbb
pop
jp
cwtl
insl
aad
bound
pop
incb
andl
insb
out
pop
inc
es
pop
jl
call
enter
les
lea
xchg
cmp
mov
in
push
das
mov
and
cli
xchg
test
mov
fldenv
mov
aad
leave
je
lds
jecxz
cmc
xor
inc
pop
shll
sbb
jb
shrb
rcl
leave
or
fidivrl
ret
add
out
mov
push
add
mov
fstpl
push
or
int3
std
sbb
into
cmpsl
adc
movsb
xchg
adc
loopne
shrl
jge
dec
pushf
mov
sbb
dec
insl
mov
and
xchg
fnstsw
sub
insb
mov
push
les
cmp
jg
xchg
mov
add
mov
incl
jmp
push
sub
into
xor
mov
jb
cwtl
movsl
cmpsb
addr16
lcall
dec
mov
jmp
fcoms
pop
fdivrp
aaa
dec
mov
mov
xchg
aaa
outsb
cmp
stos
cltd
lods
popf
ljmp
cmc
subl
sysret
jl
fidivl
sbb
mov
mov
inc
add
in
pop
add
mov
cli
popf
pop
fnstcw
and
dec
loopne
icebp
mov
sti
inc
fnstsw
rcrl
loopne
dec
mov
push
push
sub
xchg
ret
dec
push
sbb
cmp
lds
mov
jp
pop
hlt
lock
push
and
out
push
call
add
cmp
std
adc
or
bound
lcall
js
xlat
mov
gs
lea
repz
das
and
ja
mov
mov
push
xlat
in
enter
push
mov
dec
andl
cmc
add
les
mov
xchg
es
and
ret
xchg
or
lock
fimuls
cwtl
pop
dec
aad
pop
mov
int3
js
mov
test
jle
addr16
enter
jo
sub
inc
add
cmp
pop
cmp
xor
cmpsl
imul
xchg
outsl
cmp
sahf
lahf
arpl
push
sub
shrb
sub
sti
jle
popf
sbb
aad
ret
scas
leave
dec
adc
inc
xor
sub
mov
scas
lock
inc
daa
divb
test
adc
inc
jmp
icebp
subb
out
or
out
sti
mov
cwtl
ret
mov
test
cltd
inc
and
jmp
sahf
jmp
rcl
ret
daa
sub
into
xchg
jl
out
rcrl
js
shlb
pop
add
adc
lods
cld
aad
mov
sbbl
pop
in
add
sbb
mov
xor
ss
xchg
insl
xchg
push
jp
push
inc
jne
jo
iret
pop
mov
clc
lahf
mov
inc
jae
lods
sbb
xchg
adc
inc
lds
lods
mov
mov
out
xchg
iret
cmp
jae
mov
stos
stos
lret
pusha
aam
inc
mov
xor
icebp
fisttps
mov
arpl
jge
sub
es
leave
fistps
fwait
ds
cmc
jmp
cwtl
add
push
xchg
xchg
mov
bound
and
cmp
andl
jo
mov
imul
and
notb
pop
addl
sbb
pop
daa
js
cmp
notb
es
into
sbb
lar
mov
dec
xchg
mov
and
fldcw
mov
stc
ja
out
sbb
cmp
mov
cmp
sbb
in
clc
lds
add
imul
jecxz
jbe
push
shll
ja,pt
xchg
or
mov
arpl
or
outsl
inc
jo
jb
cmpl
test
mov
push
xchg
idivl
in
ret
push
adc
or
push
or
data16
push
dec
in
fisubrl
pop
mov
ret
pop
mov
arpl
fists
insb
mov
loope
sbb
mov
or
mov
aas
data16
fistpll
mov
xor
cmc
scas
mov
fnstenv
ficoms
dec
je
pushf
sbb
into
and
adcb
cmp
pop
xchg
pop
test
xor
out
inc
stos
cmp
sub
mov
add
mov
mov
fsubs
jne
mov
xchg
dec
jecxz
cmp
andb
in
fistl
cwtl
cmp
or
rcrl
mov
inc
or
push
dec
in
push
mov
pop
pop
dec
lahf
xor
xor
sbb
jb
mov
idiv
sbb
inc
xchg
cwtl
sub
scas
sbb
outsl
mov
in
scas
fwait
dec
lods
shrl
push
popf
fwait
out
pop
imul
stc
and
xchg
test
cmp
shll
rcll
push
pop
sub
push
rcll
inc
arpl
cmp
pop
add
jle
pop
sbb
iret
xchg
push
inc
test
movsb
dec
loopne
push
cmp
cmp
mov
xchg
adc
push
test
insl
lahf
js
leave
xchg
fimull
sub
jg
mov
loopne
xchg
push
or
lret
pshufw
pop
insl
xchg
stos
jl
mov
fwait
in
aaa
stc
sbb
subb
pop
cmp
xchg
push
push
repnz
stos
mov
dec
dec
xchg
nop
ret
xchg
arpl
sub
pushf
gs
and
dec
imul
or
sub
ja
test
inc
xchg
jb
mov
outsl
out
ret
imul
imul
pop
lods
outsb
push
xor
gs
xor
cmpsb
cmp
mov
mov
add
xor
out
js
sub
add
mov
ljmp
push
outsb
or
jecxz
pop
mov
xchg
mov
lret
add
jo
and
leave
iret
cld
hlt
xor
mov
push
nop
pop
xchg
mov
mov
push
lock
sub
push
sub
pusha
mov
das
das
jecxz
ja
jbe
cs
mov
mov
or
jle
pop
rcr
push
mov
xchg
cmp
cmpsb
fwait
pop
adcb
scas
mov
mov
aam
jns
scas
mov
and
mov
fstl
mov
testb
sbb
sarb
test
cmpsl
outsb
mov
out
dec
and
or
insl
and
mov
sbb
imul
sbb
sub
cmc
sbb
cmc
insl
out
popaw
out
inc
add
or
stos
dec
scas
jns
adcl
cltd
cmpsl
sbb
pop
pop
or
scas
adc
and
loope
inc
add
in
dec
call
fiadds
repnz
je
pop
xor
mov
int3
test
enter
push
sub
add
negb
fdivrs
aad
sbb
stc
fwait
int3
sbb
inc
add
dec
sub
ret
stos
lea
in
mov
loop
inc
in
push
adc
or
fistpl
addl
popa
out
xchg
lea
adc
jmp
lahf
rclb
pop
notb
inc
pop
xchg
mov
and
fcomps
cmp
pop
mov
jae
insb
adc
mov
or
rcrl
dec
cld
and
inc
test
mov
xchg
pushf
daa
idiv
ret
dec
xchg
adc
xor
in
and
ret
sbb
push
ret
sbb
or
mov
mov
scas
clc
cli
icebp
les
or
sub
stos
out
mov
jge
gs
fsubrl
push
mov
xchg
repz
push
mov
cli
mov
aas
jb
push
mov
cld
lods
add
aas
loope
imull
insb
pop
es
fs
lea
mov
pop
insl
rcrl
sub
cmp
mov
cmp
adc
or
ja
cmpl
xchg
imul
cmp
and
jl
jo
cwtd
dec
mov
push
nop
sbb
adc
int
cmp
and
or
ficoms
adc
mov
jae
xor
or
and
cmpsb
add
adc
adc
pop
rol
test
pop
repz
imul
xchg
lds
jbe
jae
jmp
mov
add
jns
sbb
std
inc
pop
not
fwait
imulb
in
pop
shl
mov
and
test
stc
clc
jge
iret
lahf
mov
add
push
adc
mov
adc
arpl
mov
sbb
mov
test
xor
sbb
and
loopne
push
push
sahf
movsb
aad
into
pushf
lea
cwtl
sarb
inc
jge
push
adc
aas
xor
cmp
aad
hlt
adc
loop
lret
aam
sti
jge
sbb
fisttps
lea
mov
xchg
addl
jne
xlat
hlt
js
enter
addb
add
cmp
mov
mov
or
in
lcall
sub
cmpsb
loop
or
lret
or
xchg
push
leave
jnp
xchg
fisubrs
jmp
mov
sub
jae
daa
push
xor
into
mov
cltd
das
xor
stos
add
sahf
popf
mov
pop
cmpb
and
sbb
or
dec
inc
je
adc
and
test
mov
add
mov
incb
cmp
xor
lods
cltd
enter
pop
lds
ja
mov
mov
fdivs
jle
dec
sub
push
add
int
sahf
les
push
fidivrs
sti
scas
js
div
nop
pushf
clc
das
repnz
xor
xor
in
mov
and
icebp
xor
sbbb
sti
rorb
repnz
sub
jg
and
int
xchg
fcoml
pop
pop
arpl
mov
cmc
and
test
lahf
loopne
dec
inc
jbe
stos
lcall
xchg
lcall
imul
xchg
daa
mov
xchg
mov
bound
sahf
xor
push
out
mov
cmp
jnp
stos
inc
pop
into
and
sar
dec
or
js
out
push
repz
mov
add
xchg
jne
lods
or
hlt
inc
sbb
hlt
out
fidivs
mov
bound
ficoms
decl
pop
jne
mov
scas
out
and
xchg
adc
jecxz
shlb
out
mov
pushf
ret
adc
cmp
ffreep
or
cwtl
mov
adc
cmp
add
popa
int
push
cltd
sahf
leave
sbb
add
xchg
push
or
jno
out
das
aas
mov
xchg
adc
dec
data16
sub
ret
pop
push
pop
lret
jnp
ds
popa
inc
roll
test
pop
adc
leave
mov
mov
mov
jge
lret
and
and
rcl
mov
sbb
pop
call
movsb
gs
add
cmpsb
adc
ret
into
mov
sub
dec
pop
cmp
fiaddl
adc
mov
popf
mov
inc
test
out
mov
scas
adc
pop
and
adc
mov
cmp
addr16
scas
in
jns
mov
mov
xchg
jne
arpl
jg
loop
and
jmp
sbb
cmpsb
push
aaa
lods
nop
std
lds
enter
mov
jbe
inc
mov
jp
int
cmpsb
adc
jo
sbbl
loopne
rorb
test
push
das
xor
fdivrl
inc
sub
mov
sub
fs
dec
push
mov
ljmp
lahf
dec
popa
dec
das
or
loope
mov
cmp
cmpl
mov
sarb
cltd
cmpsl
inc
cmp
stos
add
pop
insb
xor
sahf
shlb
mov
mov
mov
mov
xchg
push
and
push
mov
adc
mov
pop
inc
mov
das
push
push
push
mov
mov
js
hlt
stos
bound
adc
inc
add
mov
lcall
gs
mov
test
xchg
lcall
mov
xlat
cltd
shlb
and
movsb
pop
jbe
sub
xlat
pushf
jecxz
lock
std
push
mov
lods
fsubl
into
test
xabort
mov
vmwrite
jmp
xchg
fbstp
or
cmp
mov
pop
out
or
test
int3
jns
out
test
and
js
jb
xor
jge
mov
iret
cs
mov
cmp
pop
lock
xchg
jo
inc
hlt
arpl
je
fldenv
in
push
sbb
sub
push
repnz
out
aas
xor
orb
ret
test
sub
fmuls
in
daa
cli
fisttps
rcrl
fs
scas
bound
rcll
je
pop
mov
clc
mov
push
push
sbb
out
inc
mov
arpl
xor
bound
jbe
pop
xchg
inc
sbb
mov
clc
loope
fisttpl
dec
leave
jl
or
movsb
and
mov
inc
repz
or
jl
jmp
mov
repz
sub
test
push
cmp
ret
movsl
cwtl
mov
sub
and
sbbl
popa
test
out
push
notb
pop
or
mov
xlat
les
fistpl
pop
nop
cld
push
pop
or
dec
inc
mov
push
lahf
and
int3
imul
clc
dec
repz
cmc
gs
and
imul
cmpl
nop
sub
enter
push
dec
add
inc
add
fnstenv
pusha
cld
aaa
xchg
jno
xor
sbb
and
mov
sti
push
jb
xchg
dec
push
xchg
lcall
jg
mov
push
cld
int3
jb
fcomip
out
xchg
xchg
aaa
inc
adc
adc
and
js
jno
cmp
into
inc
dec
lahf
mov
mov
mov
adc
pop
xchg
testb
xchg
fs
cli
inc
add
repz
mov
xor
test
pop
pushf
fincstp
stc
and
js
lods
jbe
mov
jno
lods
hlt
hlt
mov
int
outsl
rcrb
mov
subl
lret
push
subb
in
out
and
shr
adc
fcom
jg
xchg
mov
or
cs
int
xor
enter
test
cmp
int3
fwait
dec
dec
cmp
into
mov
and
jmp
mov
mov
test
paddusw
xchg
les
and
xlat
pop
pop
cmp
and
loop
daa
jnp
dec
mov
jbe
sbb
jle
in
daa
mov
std
dec
mov
mov
push
cmp
fildll
out
repnz
jae
aam
and
dec
lret
and
out
ss
sub
out
sub
je
stos
std
rcll
pop
jae
int
jecxz
ds
scas
cmpsl
push
cmp
pop
lea
in
cmp
mov
xor
std
add
mov
add
les
dec
cs
cmp
cmpb
lock
imull
xchg
negl
xor
mov
leave
pusha
dec
in
push
aas
inc
fs
adc
lret
or
or
cltd
arpl
pop
mov
stos
test
and
mov
push
bound
in
sub
test
mov
and
sub
ret
loope
arpl
push
fimuls
and
shlb
mov
push
mov
cmp
es
daa
stos
xor
cld
xadd
mov
mov
jg
test
push
ret
test
fidivl
dec
movsb
mov
xchg
je
jl
idivl
ljmp
rcll
mov
mov
mov
jns
sarl
push
ret
jecxz
jge
sarl
sbb
into
mull
int
adcb
adc
add
jl
notb
adc
rcrb
pop
cmpsl
xchg
lret
insb
out
xor
push
cwtl
mov
lods
cltd
add
push
cmc
push
test
and
xor
stos
push
mov
mov
mov
loop
xchg
inc
sub
push
cmp
rcrl
dec
incb
or
enter
or
insb
pusha
iret
push
imul
pop
and
or
jecxz
aam
push
mov
fiaddl
repz
jg
push
in
push
pop
rcrb
das
mov
add
xor
ss
jl
mov
push
push
loope
push
and
mov
mov
adc
rclb
dec
jnp
push
pop
fiadds
jb
pop
add
jne
dec
stos
sbb
mov
iret
shll
clc
test
push
jecxz
adc
pop
ljmp
jnp
xchg
mov
pop
iret
mov
sahf
xor
adc
add
add
cwtl
rcr
stos
testl
inc
dec
ficompl
jle
push
ret
adc
bswap
cmp
clc
insl
pop
hlt
stc
mov
mov
mov
add
pop
jno
sbb
aad
cmp
adc
xor
or
jb
xchg
cld
das
add
lahf
inc
movsbl
and
xchg
jo
stc
fcmovu
jg
push
cmp
cmp
push
shr
rcrb
test
inc
mov
sbb
mov
mov
stos
imul
popf
cmc
fstl
sbb
sbb
orl
pop
xor
xchg
dec
and
imulb
lahf
shl
mov
inc
sarb
jmp
pop
or
outsb
lret
nop
mov
push
imul
cmp
dec
inc
mov
push
inc
shll
test
and
pop
pop
mov
inc
jb
mov
sarb
int
xor
icebp
dec
sub
sti
nop
jne
or
aaa
ljmp
mov
in
pop
dec
or
jl
jmp
push
jno
lret
mov
jg
inc
movsb
sub
test
xchg
adc
inc
into
movsl
rep
and
cmp
movsl
jne
sbb
test
cs
mov
mov
dec
dec
mov
mov
repnz
inc
ret
loope
push
rclb
and
scas
or
xor
shlb
inc
push
sbb
stos
bound
lea
or
mov
in
mov
shrb
je
stos
mov
xchg
xchg
and
cmp
test
das
sub
inc
jns
lods
adc
push
xchg
fdivl
fistps
es
inc
xchg
movsl
or
xor
out
sub
mov
ret
add
push
jns
xchg
lret
sbb
dec
or
stos
movsb
vmulps
jle
ljmp
xor
inc
add
movsl
scas
stos
iret
push
lret
jg
aad
sahf
adc
in
data16
xchg
sub
sub
xor
or
insb
xchg
mov
loope
fbld
pop
mov
sbb
bound
mov
mov
pop
push
outsl
sub
adc
dec
sahf
out
mov
xorl
stos
sbb
or
lods
sub
mov
testl
mov
arpl
movsb
push
lock
or
fwait
fdivrs
push
mov
mov
add
cwtl
adc
js
adc
test
pop
out
cmp
sbb
or
and
fstpl
mov
adc
int3
pop
cmp
or
mov
cwtl
push
sbb
test
xchg
clc
pushf
scas
aaa
lods
or
cmp
sub
and
lea
and
iret
out
xor
mov
das
sub
mov
in
gs
icebp
lods
mov
adc
cmpl
pop
clc
adc
cmpsb
cs
sub
loopne
aaa
jl
add
or
xor
aad
shlb
mov
jmp
pop
lods
mov
out
into
inc
pop
ficoml
xor
push
test
sbb
mov
xor
xor
xchg
cmp
mov
addr16
pop
cs
rorl
sbb
and
cmp
push
mov
mov
fidivrl
mov
pop
aas
std
mov
xchg
movsl
ljmp
mov
jg
fisttps
sub
incb
cmp
sub
pop
in
daa
xchg
dec
and
stos
xor
lcall
jecxz
mov
jmp
sbb
fdivs
flds
movsb
pusha
test
and
mov
repnz
out
call
cmpsb
xor
iret
in
ret
push
jne
sub
cmc
filds
leave
pop
mov
push
xchg
les
push
mov
push
lock
aaa
or
dec
xchg
jge
out
and
jns
leave
xchg
pop
fldenv
jg
pop
xlat
pop
adc
aam
int
es
lcall
jge
fmull
push
pushw
icebp
jbe
inc
adc
push
jbe
sbb
or
mov
mov
cmp
mov
cmc
adc
push
inc
sbb
jb
bound
scas
and
push
inc
ljmp
lods
cwtl
xlat
pop
in
sub
sahf
sbb
lods
decl
dec
movsb
jbe
pop
cmp
aaa
xor
inc
shll
jne
andl
test
cmc
je
push
pusha
out
out
lods
decl
or
and
or
sbbl
sbb
xchg
out
cld
adc
mov
mov
fcmovu
pop
mov
fwait
adc
jmp
push
das
ret
leave
negb
sahf
pop
jb
mov
or
and
mov
mov
imul
mov
pusha
mov
dec
cmp
fadds
push
xchg
mov
mov
cwtl
or
cmpsb
lcall
mov
ret
xchg
pop
std
push
jp
lea
je
mov
pusha
orb
test
cmpsl
inc
cmp
ljmp
cmp
dec
mov
sub
cmp
jo
adcl
negl
pushl
fs
outsl
add
mov
inc
adc
sbb
xchg
or
dec
sub
sub
mov
movsl
leave
and
mov
cmp
dec
dec
out
sbb
cld
push
lret
pop
pop
aam
fnop
jne
cltd
mov
test
test
aas
nop
push
pusha
iret
push
out
aam
sub
push
inc
jge
movsl
cwtl
cmpsl
xor
inc
and
andl
push
cmp
addb
mov
into
xor
cmp
sub
xor
test
je
push
jns
icebp
outsb
xchg
rcl
mulb
jecxz
or
jae
popf
imul
pop
loop
mov
aas
sbb
and
dec
data16
xchg
imul
jo
mov
fcompl
jnp
fists
lods
mov
jmp
mov
inc
adc
mov
jmp
xchg
adc
bound
mov
fsubl
rorb
sbb
adc
lock
in
and
mov
xor
dec
cmp
cld
sbb
pop
pop
push
jp
lods
jo
out
jecxz
xchg
mov
dec
outsb
das
icebp
ret
mov
xchg
mov
mov
movsl
adc
cmpsl
pop
sbb
pushfw
std
addb
dec
jecxz
jno
lods
mull
cmp
sub
stc
ss
mov
mov
rorb
cmc
es
jb
push
bound
mov
push
test
and
and
call
mov
loop
icebp
pushf
xchg
cmpsb
push
cmpsl
leave
push
fimull
xchg
fmull
dec
hlt
fs
sahf
mov
testl
cmp
and
push
jl
rclb
jb
outsl
dec
fisubrl
aam
aam
add
sbb
xor
add
std
push
push
aad
dec
cmp
test
inc
inc
pop
iret
mov
xchg
jg
int3
popa
pop
lock
daa
idivb
ljmp
xchg
cmp
ficoms
pop
sti
jns
cli
cltd
jb
mov
xchg
out
add
jge
add
nop
or
cmpsl
loop
shl
ja
mov
arpl
std
xor
int
pop
jno
pop
push
jge
outsb
xchg
pop
shll
enter
sbb
test
sub
xchg
test
scas
jnp
push
adc
add
pop
inc
adc
mov
mov
mov
clc
jp
xlat
fsub
gs
mov
out
inc
fnstenv
adc
pushf
jecxz
or
scas
ret
mov
movsl
xchg
mov
fisubrs
mov
dec
sbb
mov
fisubs
inc
shlb
out
mov
in
jle
adc
mov
test
pop
nop
adc
mov
mov
enter
or
js
loope
dec
fisubl
ficomps
jmp
ret
add
ljmp
idivl
sub
movsb
testl
adc
push
mov
ds
mov
xchg
popa
push
in
sub
int3
sar
xchg
or
loop
in
pop
loope
out
adc
test
sbb
xchg
push
aam
sub
fstps
popf
jb
in
cwtl
cmp
ja
cmpsl
fldl
xor
shl
xchg
add
mov
test
cld
mov
imul
fildl
sti
and
cld
ror
add
mov
sub
divb
sbb
gs
test
pop
movsl
and
bound
pop
xor
scas
push
push
pushf
xchg
notl
lds
fdivl
xchg
sub
dec
nop
or
imul
xor
push
or
adc
dec
sarl
pushf
mov
es
cmp
stc
mov
out
add
xchg
inc
adc
test
mov
mov
sbb
les
inc
rcrb
fnstenv
xchg
fistps
aaa
in
jns
inc
cwtl
sub
fwait
sbbl
mov
jnp
lods
mov
lahf
pop
push
and
aam
es
adc
test
mov
mov
movsb
cmp
pop
cltd
in
adc
fcoml
ror
lret
iret
xchg
aad
pop
push
jo
mov
out
gs
pusha
int3
xor
mov
mov
es
fstps
pop
mov
push
call
repz
mov
lock
xchg
rcr
sbb
rcll
lds
fldl
pop
cmp
and
xchg
jnp
pop
lahf
inc
xchg
stos
xor
jmp
and
add
jnp
nop
push
sub
aas
mov
push
cld
jo
mov
sub
insb
lcall
bound
adc
or
xor
xchg
pop
ds
in
mov
lods
sub
inc
lds
push
loopne
sub
movsb
loopne
enter
cltd
mov
pop
xchg
dec
inc
pop
sub
in
imul
sub
cmp
lds
jbe
push
jns
fidivl
cld
cli
sarl
push
mov
mov
pusha
int3
mov
fisttpll
int
ja
fmuls
lret
xor
mov
adc
xor
daa
lock
cmp
lcall
adc
jnp
pushf
pop
movsb
adc
loope
inc
stos
sbb
sbb
into
sahf
or
mov
adc
cmp
cmp
call
ret
pop
cmp
xchg
pop
lahf
inc
mov
mov
ret
cs
or
out
js
and
dec
cmovb
aad
mov
jecxz
adc
push
push
loop
fidivrs
push
ret
or
and
lock
popf
jnp
cmp
inc
fneni(8087
xchg
jbe
clc
cmp
push
out
add
xchg
in
pop
scas
cltd
arpl
jecxz
mov
popa
push
imul
cmp
nop
xor
pop
repz
dec
stos
popw
pop
xchg
fsub
leave
push
imul
xchg
movsl
xchg
inc
icebp
inc
cmp
add
jp
rolb
add
mov
mov
mov
std
in
push
xchg
jne
and
pop
cli
mov
mov
in
je
in
pop
ljmp
adc
outsl
sbb
stc
jl
in
mov
lods
test
fcmovbe
rolb
jg
daa
cmc
pop
mov
rorl
push
pop
mov
lock
xor
outsl
imul
inc
jbe
je
imul
inc
jno
push
aas
jle
sub
mov
mov
mov
jo
ficoml
xlat
out
sbb
mov
shlb
in
shll
sbb
rclb
sub
jmp
or
sub
rorb
xor
cmp
jne
es
mov
shrl
daa
faddl
mov
adc
and
mov
call
xlat
fmul
xor
mov
jge
shrb
inc
and
dec
xchg
push
mul
cld
or
cltd
and
xor
dec
adc
mov
lods
add
mov
lods
cmp
mov
mov
sub
xchg
pop
iret
mov
jp
xor
add
int3
push
xor
daa
mov
xchg
in
aad
inc
shlb
pop
sarb
push
out
pop
lds
push
xor
pushf
inc
pop
cld
and
in
add
ljmp
mov
dec
mov
inc
cmp
push
pop
in
jp
mov
xlat
aaa
push
dec
mov
or
sbb
pop
repnz
push
push
dec
inc
cmp
insb
rorb
dec
dec
xor
fcomps
ljmp
jg
cmp
and
sbb
mov
xor
ds
lods
sbb
scas
cmp
add
dec
pop
out
call
mov
stos
inc
pop
cmpsb
lds
push
in
dec
mov
xlat
push
lods
push
jmp
lods
pushf
adc
and
cmpb
inc
mov
sbb
pop
sbb
xchg
mov
dec
and
mov
lret
push
outsl
dec
add
push
rorb
adc
popa
sarl
dec
fstpl
xchg
sbb
fdivs
xchg
das
inc
or
xchg
sbb
movsl
inc
loop
jl
and
clc
int
idiv
mov
add
xchg
ds
das
test
repz
call
xor
dec
mov
inc
xor
pop
or
clc
adc
push
sahf
movsb
rsqrtps
mov
sub
hlt
sbbl
push
cwtl
pop
and
xchg
data16
pop
fdivs
cld
inc
inc
pop
push
and
frstor
dec
xchg
test
dec
mull
loop
popf
push
xchg
cltd
mulb
sbb
dec
outsb
cwtl
lret
cmp
pop
mov
xchg
and
fstpl
mov
sbb
inc
leave
mov
xor
test
mov
push
xorl
lock
and
cmp
das
in
mov
inc
movsb
mov
dec
sub
aam
jl
xor
test
push
and
jno
jecxz
arpl
test
stos
in
in
mov
aad
mov
pop
adc
inc
movsl
lods
xchg
jge
xchg
mov
pop
aam
iret
cmc
xchg
xchg
stos
in
pop
pop
sbb
fldt
fstps
loop
shr
test
cmp
mov
dec
lea
xchg
pop
loope
adc
inc
cmp
mov
pop
pop
popa
arpl
xchg
pop
mov
jns
xor
out
icebp
add
pop
cmp
pop
mov
icebp
int3
xchg
sbb
orl
movsl
push
idivl
test
mov
aam
icebp
sbb
repnz
inc
addr16
lcall
movsl
jle
mov
hlt
xor
jnp
xchg
sbb
pop
sbb
stos
movsb
jp
inc
stos
lret
stos
mov
divl
ss
sub
icebp
in
jg
test
cmp
rclb
xor
inc
inc
push
inc
mov
fistpl
cwtl
xor
jns,pn
sarb
cmp
adc
int3
das
or
lcall
add
in
xchg
jmp
inc
pop
fdivs
fisubl
pop
movsl
sub
push
xchg
test
adc
push
sub
inc
push
fldt
mov
stos
imulb
adc
lods
cmp
icebp
xchg
addr16
pop
push
andl
inc
adc
icebp
lods
lcall
data16
popa
pusha
push
jae
je
js
jnp
pop
push
sub
pop
gs
cmc
int
je
rolb
xchg
pop
inc
into
fbld
stos
stos
sub
adc
ret
fisubrs
inc
in
pop
and
aaa
push
push
js
xchg
xor
pop
and
push
push
inc
loop
inc
bound
shr
sbb
jno
jb
push
pushf
nop
rol
mov
xchg
push
imul
xchg
popl
xchg
out
sahf
daa
out
cmp
aas
fmull
cmc
mov
inc
xlat
inc
cmc
or
lcall
dec
cmp
into
push
insb
int3
cmp
outsl
mov
pop
hlt
movsl
mov
mov
sbb
fmuls
lock
or
dec
arpl
xchg
jnp
lods
shlb
push
js
push
adc
sbb
mov
push
pop
es
or
incl
cmp
das
insl
push
mov
fwait
sbb
pop
int3
jns
dec
or
outsl
xchg
in
push
xchg
mov
ja
fxch
shlb
mov
jns
movsl
sbb
loop
xlat
imul
aad
jmp
repz
cmova
mov
xchg
andb
js
dec
add
jo
in
repz
push
cwtl
in
inc
loope
pop
fxtract
push
ljmp
aam
imul
add
outsb
pop
xor
scas
dec
mov
pop
jo
xlat
dec
mov
pop
dec
pop
dec
lods
push
repz
adc
add
push
xor
lret
and
xchg
add
jns
jne
scas
lcall
mov
scas
cs
fisubrl
je
lcall
jg
loope
btc
mov
shll
push
add
xor
and
jnp
add
mov
jmp
daa
push
mov
lss
je
fisubrl
lea
mov
pop
adc
mov
push
push
mov
dec
call
sbb
xor
por
popa
cmp
push
and
scas
movsb
mov
andl
xchg
sub
xor
push
sbb
xor
adc
mov
push
ja
das
push
dec
mov
data16
mov
pop
jcxz
sub
jle
or
xchg
das
xchg
pop
add
cmp
pusha
bound
pop
jno
push
push
lods
fdivl
add
loopne
testl
daa
mov
imul
xchg
jge
push
sub
outsl
pop
in
xchg
xchg
shr
gs
call
mov
pop
sbb
push
inc
cld
jae
xchg
xchg
jo
bnd
fs
dec
xchg
enter
imul
add
sub
adc
push
dec
mov
repz
pop
fistpl
cmp
outsb
mov
pop
lcall
dec
std
mov
pop
mov
xlat
push
not
sahf
pushf
outsb
ltr
shl
dec
aaa
push
jo
scas
clc
push
pop
lcall
jae
loopne
and
jmp
ljmp
ret
add
dec
or
and
mov
xor
mov
ja
pop
call
sub
and
cmpsb
rorl
pop
mov
mov
imul
out
das
jge
lods
push
pop
push
cmp
ffree
pusha
stos
fdivrl
mov
dec
stos
inc
mov
inc
testl
lods
mov
cmpsl
jg
fldl
jo
imul
sub
mov
push
fptan
jmp
xor
mov
aaa
xlat
dec
orb
or
xor
sbb
sbb
or
push
add
xchg
loop
cmp
sub
inc
mov
xchg
jae
dec
andb
pop
out
dec
cwtl
out
push
push
cld
scas
lea
mov
cmc
dec
test
cmpsl
mov
faddl
and
aad
mov
jecxz
adc
jb
mov
or
aad
jo
sbb
cld
or
xlat
jg
and
or
push
dec
and
dec
or
add
add
hlt
mul
cmc
add
addb
pusha
jns
sarl
cwtl
das
pop
out
xchg
adcb
dec
push
mov
rcrl
das
out
inc
mov
dec
fdivs
mov
nop
push
pop
or
aaa
sbb
cmp
ss
popf
movsb
pop
test
iret
pushf
test
sub
movsbl
xchg
pop
add
inc
or
mov
inc
in
push
insb
sub
outsb
imul
mov
out
and
push
adc
cs
loop
jecxz
inc
or
adc
fists
jbe
cmp
sub
lds
jb
inc
mov
cmpsb
stc
mov
inc
dec
or
or
std
inc
push
cmpb
push
test
fisttpl
lds
aas
mov
push
push
cmpsl
mov
ss
mov
mov
imul
xchg
divb
and
or
adc
sbb
fiadds
in
loopne
push
sub
inc
gs
aaa
pop
leave
pop
mov
and
push
lea
pop
cmc
popa
rorb
jo
pop
dec
push
cmpsl
lods
sti
mov
pop
ficoms
cs
leave
daa
push
cmpsb
add
das
mov
inc
jb
stc
xor
jae
dec
adc
jae
std
cmp
int
lahf
jns
jg
shl
bound
stos
pop
cwtl
dec
cs
mov
in
jp
lds
fnstenv
gs
jmp
sub
pop
icebp
lock
mov
sbb
lret
js
push
or
xchg
test
mov
lret
scas
fwait
repnz
ds
std
cmp
enter
popaw
into
xchg
aad
push
xchg
lret
clc
xchg
cli
cld
fldcw
push
ret
xchg
out
int
mov
lods
xor
mov
lods
cmp
inc
inc
jns
or
sub
push
shll
or
mov
out
mov
cmp
mov
out
das
fsubr
inc
push
jb
add
sub
xor
mov
adc
xchg
inc
pop
movsl
mov
stos
pop
and
cmc
adc
aaa
mov
jle
enter
loop
dec
or
out
dec
mov
adc
and
xor
jl
jo
inc
out
mov
xor
dec
dec
int3
or
add
xor
jo
lret
dec
mov
aas
aam
pop
outsb
sbb
divb
pushf
adc
dec
cmp
cmpsb
movsl
outsl
scas
dec
call
push
dec
add
pop
jp
push
dec
or
stc
ljmp
mov
sub
fs
push
jno
ljmp
js
sbb
popa
dec
js
in
mov
and
dec
cmpsb
addr16
or
addr16
push
xchg
add
and
or
adc
sub
ss
clc
mov
aad
test
mov
sub
adc
mov
loope
lret
into
setle
popa
xchg
repnz
jle
lret
daa
inc
or
inc
out
mov
cmp
adc
shl
leave
loope
xchg
dec
inc
sub
or
imul
cs
jmp
xchg
cmc
xchg
push
xchg
ds
push
dec
cmp
scas
mov
dec
sbb
xchg
cmp
repnz
out
imul
jnp
jno
cmp
ror
inc
or
adc
add
in
or
test
pop
daa
cltd
js
cmpxchg
fcomp
pop
xor
sbbl
lret
shr
fcoml
repz
xor
mov
mov
mov
jnp
ljmp
xchg
fdivl
add
adc
push
pop
roll
insb
mov
in
xor
pop
dec
insl
scas
repz
push
xor
cmp
sub
cltd
cmp
dec
das
sbb
xchg
test
cli
mov
mov
lods
pop
jb
int3
fstl
into
aas
jne
test
call
bound
mov
fistps
jnp
and
pop
or
ret
imul
pop
dec
lret
mov
add
loope
mov
jle
dec
push
vmwrite
cmp
pop
add
xchg
cmc
cwtl
cmp
jo
push
into
mov
jle
mov
jge
pop
fisubrl
imul
sbb
push
add
lcall
jae
xchg
imul
push
pop
in
jmp
pop
cli
fnstenv
shrl
ds
lods
inc
clc
dec
mov
pop
pushl
ds
add
dec
in
insl
stos
imul
mov
mov
adc
cmpsl
xor
jnp
add
ja
fsub
hlt
mov
inc
popf
push
std
pop
cmpsb
xchg
xchg
push
outsl
fcoms
es
hlt
fidivrl
daa
adc
cmp
inc
jecxz
inc
add
sarl
xchg
cld
call
cmpsb
and
inc
xor
out
and
out
leave
jne
adc
stos
mov
test
movsl
xchg
sti
mov
dec
sub
ret
mov
adc
sbb
mov
inc
jmp
clc
push
dec
xor
mov
pusha
jp
imul
sub
jg
imul
jae
mov
sub
int
scas
clc
ret
mov
fucomp
mov
shrb
xchg
dec
mov
mov
pop
cmp
sub
dec
jp
dec
mov
mov
fistl
mov
dec
mov
je
sub
sub
or
inc
sbb
shll
pop
push
in
jae
inc
sbb
mov
mov
cld
popa
jmp
mov
xchg
mov
push
xchg
sti
cwtl
or
cltd
mov
jns
popa
add
lock
cli
push
push
movups
loopne
mov
jno
or
pause
jp
std
das
jmp
adc
addr16
scas
scas
or
push
mov
loop
jb
and
ror
movsb
adc
sbb
lea
int3
xor
pop
outsb
orl
inc
push
iret
adc
das
cltd
fs
push
lcall
xchg
or
push
cmpsl
jne
push
or
arpl
call
das
push
cmp
fwait
xor
in
lods
or
sahf
push
mov
push
jo
cmp
xchg
mov
jno
lcall
lea
or
test
test
std
mov
cli
icebp
cmpsb
ror
push
xchg
push
setae
shl
xlat
lea
pusha
ds
add
pop
mov
pop
mov
mov
rcrb
icebp
sub
sbb
lcall
jb
xor
cwtl
xchg
xchg
popf
sbb
imul
test
scas
mov
shlb
aam
xchg
push
dec
dec
movsb
mov
test
inc
inc
cli
int
into
sbb
repnz
lahf
mov
shlb
add
pop
mov
into
sbb
loop
nop
lods
js
or
sub
ljmp
shlb
mov
rcl
xor
lret
mov
pop
fcmovnb
jbe
dec
adc
mov
mov
lahf
adc
xorb
loope
ret
mulb
aaa
sbb
repz
out
pop
jbe
cmp
scas
in
mov
sbb
mov
ficompl
enter
lret
out
cmp
cli
dec
data16
mov
in
aam
mov
adc
cmp
aaa
inc
cmp
jmp
mov
js
fwait
js
cld
mov
or
aas
pop
idivl
cmp
sub
stos
cld
negl
xor
xor
jb
xlat
mov
sbb
loope
addl
and
mov
xchg
cmpsb
aaa
inc
sub
imulb
pop
lcall
into
gs
fld
repnz
scas
popl
in
stc
and
or
pop
into
hlt
ds
xlat
mov
lea
push
sbb
cmp
test
inc
push
mov
ljmp
imul
sar
ret
pop
mov
stos
mov
fstpl
lcall
mov
jmp
or
xor
xchg
add
lahf
popf
sbb
test
cmp
imul
mov
cld
out
sub
and
sarl
mov
mov
jge
sarl
arpl
lds
or
ret
test
ret
sub
add
test
les
cltd
inc
das
cmpsl
xchg
sub
repz
clc
stos
lds
fisubl
es
mov
fwait
and
insb
cltd
jecxz
daa
fbld
lods
pop
cmp
push
into
dec
sbb
push
scas
pop
adc
xchg
cld
lret
inc
pop
adc
jecxz
adc
movsl
dec
xchg
ret
neg
lods
aas
dec
pop
add
or
xchg
shlb
or
mov
aaa
lcall
sub
add
lock
imul
dec
repz
roll
test
mov
ret
xchg
adc
pop
jge
arpl
outsl
jae
jl
or
mov
fcomp
lods
sub
lahf
jne
sub
repz
and
in
push
sbb
repz
shl
mov
rolb
mov
arpl
sarb
shrl
jg
mov
insb
inc
scas
mov
decl
xchg
mov
fcom
pushf
stos
jp
xor
imul
rcl
mov
xor
mov
stos
mov
scas
sbb
sub
pop
pusha
scas
dec
cwtl
jp
pop
mov
testb
popa
and
cld
mov
push
scas
sub
lret
mov
mov
pop
push
adc
and
in
adc
das
leave
inc
arpl
das
pop
ret
dec
sub
cmp
jnp
sti
cli
push
sub
cwtl
pop
paddsw
mov
push
or
loop
jns
out
mov
rcrb
test
lods
sbb
sti
and
push
fwait
adc
fidivrl
adc
dec
fidivs
inc
insl
jle
cmc
imul
scas
aaa
adc
jne
inc
test
les
pop
dec
js
cmpb
cs
push
cmpsl
push
fs
inc
ja
jb
stos
enter
rclb
ds
out
cltd
push
inc
ret
cmp
ror
movsb
pusha
mov
adc
imul
jecxz
bound
mov
pop
sbb
cmp
fcom
in
mov
movsl
add
or
xlat
add
pop
xchg
into
fcmovne
popl
lahf
add
les
in
icebp
mov
cwtl
cs
call
dec
testl
stos
pop
bswap
pop
push
xchg
mov
sub
push
or
push
xchg
icebp
cmc
fdivl
int3
inc
movsb
mov
sub
jmp
or
cmp
push
hlt
mov
push
push
inc
sbb
mov
mov
jnp
scas
dec
or
repz
sbb
mov
mov
push
ret
jae
ss
outsb
loopne
push
aad
dec
lcall
icebp
push
lret
clc
xor
test
push
movsb
mov
sbb
and
mov
push
mov
mov
test
mov
ds
sub
gs
fwait
popa
dec
xchg
loopne
popf
test
insb
nop
ljmp
mov
jmp
jb
dec
jmp
enter
das
sti
mov
dec
rcl
ret
or
jle
insl
je
xchg
out
nop
test
xlat
jno
jnp
cli
and
bnd
loopne
sbb
fcmovb
fidivrl
aam
mov
mov
gs
stos
adc
shrl
clc
cmp
inc
scas
and
std
movsb
add
js
js
xor
aas
cmp
lcall
xor
ss
gs
add
out
cmp
lret
dec
mov
add
fwait
in
inc
jne
push
inc
mov
or
adc
std
in
adc
rcl
lea
sbb
lgs
aam
jbe
mov
mov
bound
sub
sti
or
ret
fcoms
jbe
fs
push
fidivrs
stc
fsubl
mov
mov
fsubrl
mov
std
out
adc
jmp
lods
lods
shrl
xchg
and
pop
dec
mov
push
insb
in
mov
sub
in
push
cmp
sub
push
outsb
adc
add
incl
push
sbb
dec
jecxz
mov
cmovno
dec
mov
loopne
cmpsb
cld
in
cld
fists
pop
and
cs
test
pop
cmpb
xchg
sub
out
inc
loop
adc
arpl
lret
fldcw
push
push
repz
lock
loop
addr16
sub
fwait
add
jno
mov
sub
xor
int
gs
sysret
push
adcb
ja
sbb
in
pop
out
add
xor
mov
cmp
cmp
xor
sarb
xchg
fsubrs
setg
mov
mov
mov
sarb
jb
push
lods
inc
pop
cmp
ds
add
sub
push
xchg
movsl
xor
or
add
pop
cld
fdivr
pop
dec
xchg
cmp
mov
push
les
cmpsl
cld
aas
sub
hlt
mov
outsl
jns
in
ss
pop
jp
shlb
mov
test
cmovp
aam
sub
stos
insl
sub
push
push
movsl
fisubrs
into
int
xchg
push
xor
lods
jl
xor
push
xor
pop
cmp
mov
popa
mov
push
sbbl
aas
cmp
jmp
sbb
sbb
les
pop
mov
mull
or
pminub
popa
and
addr16
gs
pop
sbb
std
jge
cmc
mov
pushf
das
xorb
data16
mov
dec
mov
aaa
jne
gs
and
repnz
adc
cmpsl
rorl
shrb
jbe
aaa
int
add
push
icebp
shrl
mov
scas
insl
lea
popa
test
scas
cld
sbb
mov
aas
jle,pn
xchg
pop
mov
sbb
adc
sti
xchg
lods
repz
cmp
leave
lret
jp
push
notb
imul
pop
stos
and
jl
hlt
sbb
dec
rolb
push
fsubs
push
inc
das
enter
shl
ret
sbb
out
jb
inc
add
xor
icebp
mov
mov
pop
xor
jg
mov
andl
iret
adc
mov
popf
leave
out
mov
inc
jae
add
add
dec
mov
sbb
mov
int3
push
xor
sbb
cmpsl
dec
push
cltd
add
and
jecxz
inc
or
and
cwtl
outsb
dec
sub
inc
inc
cmp
xchg
shrl
jg
lods
jp
in
sbb
cli
cltd
outsl
adc
mov
shll
xchg
iret
aad
rcrl
fmull
mov
pop
popf
lods
dec
jecxz
adcb
or
mov
mov
and
mov
jmp
jno
or
imul
mov
mov
xorps
and
dec
imul
icebp
pop
lods
andb
imul
sbb
xor
xchg
test
lahf
test
xchg
hlt
mov
addr16
sub
cmp
pop
mov
cmp
sbb
jo
test
pop
cmp
test
fstpt
in
cld
mov
lods
sub
push
pop
ljmp
lods
ret
js
iret
repz
push
push
aam
das
cs
movsb
pop
rcrl
cmpxchg
cli
adcb
stos
lahf
add
pop
push
inc
xchg
mov
xchg
push
cmp
ret
ret
jne
arpl
popa
pop
cs
cs
mov
xor
add
int
std
mov
int
and
push
bound
addl
in
popf
repz
hlt
pusha
movsb
lea
jmp
imul
push
das
mov
mov
mov
movsb
push
dec
inc
push
testl
scas
sbb
add
outsb
xchg
xor
xor
and
cmp
sbbl
loopne
repz
or
shlb
ficoml
les
aaa
movsb
push
scas
sti
jge
int3
push
mov
mov
inc
ja
and
push
call
push
lods
xor
sub
adc
push
aas
leave
dec
loop
sub
jge
dec
mov
and
lods
push
das
dec
pop
dec
sbb
push
cmpsb
xor
ljmp
ljmp
cld
das
xchg
pop
fstpt
mov
in
aas
rorb
bound
mov
sbb
aam
dec
aam
or
pop
out
inc
lcall
psubw
arpl
push
test
cwtl
shrb
je
adc
std
negb
ss
test
bound
add
fistpl
int
jnp
push
jno
ja
jle
lock
ret
mov
imul
mov
mov
hlt
lcall
mull
add
mov
add
jp
xor
xor
cmp
in
xor
pop
sbb
sub
inc
dec
sub
cmc
ss
arpl
push
jl
push
cmp
mov
sub
stos
sub
cld
dec
mov
push
xor
std
popa
dec
pop
jno
fcomps
mov
ja
pop
ds
xor
out
sti
jns
fnstenv
push
mov
sarl
or
dec
std
xchg
pop
hlt
xor
lcall
aam
pop
movsb
push
mov
pop
les
xchg
jle
pop
shrl
into
or
push
in
daa
mov
lahf
jge
xchg
add
enter
pop
stos
mov
push
xchg
mov
cmp
jnp
arpl
adc
fstps
gs
dec
daa
pushl
ja
jb
lods
pop
icebp
outsb
scas
sbbl
test
push
add
js
and
enter
sbb
lds
js
movl
xchg
hlt
gs
xchg
aam
xorl
xor
mov
sahf
aas
fdivrs
mov
mov
add
mov
sub
scas
ficompl
out
insl
mov
pop
sbb
add
test
mov
mov
cmp
push
mov
sbb
outsb
mov
sbb
cli
inc
sub
sbb
dec
pop
cmpsb
sbb
push
jb
ja
mov
scas
push
pop
mov
dec
jbe
aaa
mov
insl
xor
lret
adc
mov
jnp
loop,pt
mov
fs
inc
or
lcall
mov
xchg
xor
adc
sbb
sub
call
jp
cmp
pop
xchg
sub
scas
in
cwtl
std
sbbl
hlt
sbb
lahf
fidivrs
jae
pop
aam
sub
fdivrs
mov
adc
icebp
sub
sbb
in
dec
sbb
adc
jne
lock
mov
scas
push
shll
xor
add
cmp
in
pop
fsts
fnstcw
or
mov
cltd
mov
sub
xor
in
loope
jb
push
call
rorb
jp
and
xor
mov
fidivs
inc
mov
out
popa
or
andl
scas
fxch
mov
into
aad
pop
sub
adc
push
jb
cmc
fsts
rcrl
pop
repnz
loopne
fildl
rcrb
les
cld
fists
or
xor
fsubrs
mov
or
dec
cmpsb
mov
cmp
adcb
push
xchg
dec
cwtl
cmp
rcll
scas
cmp
ljmp
cli
push
movsl
test
mov
enter
xchg
ret
jnp
xchg
or
inc
xor
dec
xchg
inc
pop
loopne
nop
test
mov
loop
push
imul
in
sbb
mov
jno
mov
jp
loope
outsb
push
push
jnp
jne
ja
jmp
daa
pop
push
ud0
pop
push
and
jl
sarl
fsubl
into
cmp
aam
shlb
mov
fs
sbb
sbb
vpavgw
adc
aam
pushf
add
xchg
out
dec
lret
jecxz
leave
popf
cwtl
ds
xchg
xchg
push
lds
cmpsb
sbb
pop
scas
pushf
out
movsb
aaa
cvtps2pi
add
mov
imul
mov
sbb
ss
mov
ljmp
pop
mov
push
xor
jb
loopne
ret
dec
std
inc
rcrl
pop
rcl
icebp
xor
outsl
movsb
fmuls
shll
push
jae
push
test
inc
and
jle
mov
pop
data16
out
adc
movsl
xlat
and
cwtl
or
adc
mov
pop
cmp
ds
cmc
mov
lahf
mov
sbb
pop
clc
adc
mov
cltd
push
inc
out
pop
das
push
xlat
dec
mov
and
movlps
lret
push
pop
push
cmc
dec
leave
sub
mov
mov
jge
sbb
mov
mov
mov
cmpb
int
clc
loope
pop
stos
sub
inc
mov
xor
sub
adc
adc
hlt
sub
xchg
cmpsl
sbb
movsl
fsubs
scas
pop
mov
cmpsb
ret
loopne
lahf
or
sub
pop
lahf
push
call
icebp
pushf
shll
cmp
mov
cwtl
xchg
aas
mov
sub
mov
cmpsl
sub
mov
jle
push
mov
das
mov
aad
lret
mov
sti
imul
ss
mov
xchg
jo
add
inc
hlt
push
mov
mov
push
xor
xchg
movsl
inc
dec
sbb
xchg
je
cmp
lds
pop
mov
add
lahf
aad
push
inc
jp
xchg
lods
nop
test
fadds
imul
fldl
les
decl
sub
cltd
mov
xor
push
in
dec
xchg
lret
dec
pop
loopne
ficoml
sti
cmpsl
mov
adc
lods
mov
scas
fmulp
pop
incl
inc
data16
mov
int3
arpl
cwtl
stos
mov
into
call
ja
push
push
xor
xor
xchg
inc
cmp
and
inc
ds
je
xor
dec
out
inc
jns
and
adc
mull
sbb
jae
lahf
test
loop
mov
sbb
mov
pusha
icebp
xor
mov
push
push
testl
clc
arpl
mov
mov
fisubl
cmp
dec
sti
mov
push
pusha
cli
push
pop
add
pop
jne
test
test
cltd
mov
dec
jge
and
xor
inc
xchg
cmc
mov
es
push
lea
adc
loop
push
sti
push
push
ss
testb
shrl
adc
mov
jb
or
lret
dec
shr
rolb
popa
sbb
jl
in
int
mov
lret
push
mov
scas
pop
push
subb
dec
iret
cmp
push
adc
or
add
enter
arpl
xchg
cmc
push
sbb
mov
jle
mov
sub
jge
mov
enter
icebp
js
jb
pushf
mov
repz
pop
icebp
cld
sub
add
pop
mov
loope
js
xor
jg
add
pop
mov
or
mov
enter
push
mov
cltd
dec
fnstsw
inc
popf
inc
xchg
fisttpl
cwtl
les
mov
in
xchg
push
ficoml
ja
mov
into
fnstsw
loopne
and
lods
divl
xor
xchg
icebp
dec
jg
dec
or
in
test
cmp
fldt
push
aam
mov
divb
jle
lret
fldcw
jge
pushf
fmul
xlat
push
aas
das
xor
int3
push
pop
jmp
push
pop
aad
dec
call
test
aad
xchg
jp
xor
cmpsl
jns
mov
cmc
fwait
icebp
nop
jl
sbb
jbe
mov
scas
push
xor
sub
mov
mov
mov
les
shlb
pop
jbe
popf
push
loope
adc
ret
stos
jnp
sbb
and
xor
jmp
shlb
xor
mov
stos
sbb
adc
jae
inc
cmp
fs
das
sbb
add
std
lcall
fidivs
loopne
repz
imul
repnz
adc
pop
popf
cmp
jnp
leave
dec
enter
icebp
adc
fs
loopne
add
lret
andl
and
add
jns
push
popf
lods
repnz
iret
psrlq
fdivrs
rcrl
fcom
push
or
cmp
movsl
or
and
mov
push
test
cmpsl
dec
dec
in
dec
and
and
push
pop
cwtl
fwait
add
dec
lods
cmp
stc
es
mov
mov
or
cld
std
mov
adc
jne
cmpsb
adc
and
and
and
sub
out
roll
adc
fiaddl
movsb
mull
pop
dec
sub
xor
push
xlat
xor
neg
sub
divl
push
ljmp
test
int3
bound
pop
mov
loop
push
inc
xor
lds
lcall
or
push
lods
jp
mov
ja
data16
sbb
mov
inc
xchg
loop
nop
int
cmpb
ljmp
xchg
pop
dec
mov
jmp
test
jp
pop
jns
ds
mov
adc
lods
rcrb
loop
pushf
cmp
jae
adc
sub
test
push
cmp
jmp
in
dec
xor
mov
inc
ss
clc
nop
sbb
movsb
flds
out
nop
scas
jg
mov
dec
cli
mov
xor
mov
test
pop
lret
push
jl
mov
shrb
inc
out
sti
pop
shrb
pop
mull
into
cmp
les
fs
aas
popf
out
dec
pop
pop
daa
lds
imul
adc
imul
mov
call
or
inc
or
adc
daa
lret
add
popa
sarl
or
or
je
test
imul
xor
out
cmpsl
imul
push
rolb
pop
mov
or
xchg
xor
fisubrl
xchg
inc
roll
sbb
jbe
push
aaa
test
dec
dec
adc
push
inc
ss
movsl
pop
fs
push
push
push
mov
sbb
jo
imulb
push
leave
fidivrs
cltd
cmpb
xchg
das
push
pushf
xchg
insb
mov
xlat
pop
pop
jns
hlt
fmul
jne
mov
lret
pop
mov
push
mov
popf
stc
dec
push
inc
in
mov
add
mov
bound
pop
fldt
idivb
sub
sub
mov
inc
daa
mov
mov
cmp
mov
aaa
cmp
test
or
dec
mov
pop
pop
outsb
cs
cmpsl
pop
push
cmp
jnp
dec
dec
call
pop
out
adc
lods
push
pushf
je
cmp
enter
lea
mov
add
pop
aam
and
mov
xchg
fcomps
pop
inc
sbb
enter
jecxz
lods
jo
inc
lds
call
adc
jnp
pop
dec
lcall
jmp
mov
outsl
jns
ss
jle
cmpb
and
dec
inc
xchg
sub
inc
stos
push
test
fs
push
dec
sbb
push
jne
pop
aam
cmp
cltd
lock
pop
subb
subl
arpl
lods
adc
adc
sbb
frstor
jecxz
push
mov
mov
xor
push
sbb
sbb
jo
into
jb
mov
scas
cld
lods
ret
bound
mov
xchg
xor
iret
cwtl
fidivs
rcrl
inc
xlat
jb
les
clc
push
scas
mov
xchg
int3
cmp
xor
ficoml
push
into
push
sahf
mov
cli
sub
int3
pop
inc
or
mov
gs
push
mov
int3
cmc
mov
imul
call
inc
xchg
repnz
icebp
in
push
adc
mov
push
sahf
mov
lret
mov
and
inc
sbb
and
lcall
je
imul
pop
cld
xchg
enter
pop
xlat
jg
pop
jno
push
and
or
repnz
lcall
jge
in
mov
jb
xchg
fst
test
std
repnz
pop
and
add
orb
mov
into
inc
inc
jnp
cmp
movsb
pop
mov
push
ror
mov
inc
xchg
loope
ja
fdivs
or
jns,pn
pop
mov
jge
sahf
or
dec
icebp
inc
stos
shl
jg
insb
call
pop
jg
add
jle
jge
jo
or
or
ljmp
mov
xchg
jg
ret
mov
gs
in
sbbl
xchg
mov
xchg
ror
fldl
les
mov
jb
pop
inc
lret
adc
xlat
cmc
mov
mov
sub
cs
inc
inc
mov
inc
mov
in
cmpsl
mov
xchg
out
and
xchg
es
pop
fs
sahf
js
daa
inc
push
fbstp
mov
subb
push
lcall
shrl
and
mov
aas
mov
xchg
cmp
je
aaa
addl
add
dec
in
cmp
push
add
sbb
in
rcl
inc
mov
push
mov
loopne
push
xor
pop
inc
cld
sbb
test
mov
cmp
bound
adc
loope
ficomps
ret
xchg
or
lods
cmc
sbbb
hlt
test
jl
dec
xchg
xor
mov
gs
arpl
test
inc
test
sub
add
push
sbb
sahf
sbb
std
lret
ret
mov
mov
jbe
sub
xchg
dec
adc
push
scas
adc
mov
jl
iret
add
pushf
shlb
pusha
sbb
jle
cli
dec
out
out
cmpsb
leave
push
add
push
dec
xchg
pushf
or
jge
insb
js
xor
add
mov
mov
mov
and
xchg
sti
nop
ss
dec
adc
in
in
or
lea
add
jne
xchg
shl
cmp
or
call
adc
mov
xor
mov
and
jecxz
repz
stos
push
cmp
testb
andb
jb
dec
xor
out
test
and
jae
mov
clc
or
push
mov
push
jge
add
aas
sti
lret
jmp
push
aad
jbe
push
lea
mov
es
stc
rcrl
xchg
pushf
mov
xor
or
sbb
mov
xchg
sub
and
mov
push
mov
add
mov
sub
dec
sbbl
lds
adc
bound
int
idiv
xchg
outsb
cmp
int
dec
rcl
xchg
push
data16
mov
xor
fcom
sbb
in
sub
es
pop
movl
or
mov
addl
mov
push
cmp
mov
push
lahf
mov
fstpt
adc
xor
rol
movntq
out
aas
xor
jecxz
xor
repz
add
fistpl
outsl
outsb
int
pop
inc
mov
pusha
xchg
gs
mov
das
rcl
outsb
call
cmpsb
filds
xor
arpl
and
cltd
dec
icebp
rdpmc
jno
mov
mov
mov
xchg
push
daa
dec
sbb
addr16
jno
xchg
cld
adc
pop
int3
mov
sbb
inc
fs
xor
mov
rcll
dec
sbb
arpl
sbb
out
cmp
out
and
pop
jl
out
into
mov
scas
xchg
adc
adc
inc
xor
addb
adcb
out
mov
or
xchg
clc
push
or
fldl
mov
dec
xchg
ds
add
inc
push
scas
push
mov
jp
xchg
cmpsl
inc
mov
ret
and
dec
mov
fdivrl
les
inc
testl
mov
push
ret
push
cwtl
fstpt
jle
stos
outsl
out
mov
test
loopne
ret
xchg
and
mov
mov
insl
xchg
push
lret
fs
negl
jbe
inc
jb
xchg
ds
sub
in
xchg
cmp
popa
mov
sbb
push
pop
jl
hlt
jno
gs
add
mov
cwtl
call
sub
add
inc
je
xchg
arpl
int
lret
insl
pop
mov
push
pushf
xor
sbb
fbstp
xlat
in
mov
mov
inc
jo
xorb
xor
lret
inc
sti
inc
test
loopne
pop
mov
xchg
fsts
add
sub
adc
adc
jp
jp
roll
xor
int
sub
lods
pushf
mov
xor
movl
daa
push
out
mov
fst
jmp
pushf
jmp
dec
aaa
repz
mov
mov
inc
xor
into
push
and
add
repnz
inc
outsb
pop
les
ja
inc
js
in
push
subb
clc
mov
xchg
push
mov
pop
fsubs
jbe
arpl
in
movsb
lock
or
jecxz
sub
inc
inc
dec
sub
mov
dec
sbb
mov
inc
lret
jg
jae
movl
sarb
andb
ret
into
out
stos
rcr
or
mov
bound
push
fmul
bound
pop
sbb
fnstsw
ret
test
inc
nop
jle
jno
in
inc
adc
inc
or
nop
xchg
mov
sub
iret
outsb
out
insb
std
adc
in
arpl
test
shrb
jbe
fnsave
cmp
jp
loopne
cwtl
test
xchg
cmp
icebp
mov
cmp
push
jp
push
add
sub
xchg
jle
sbb
ret
lea
mov
movsl
in
xor
aas
xchg
jb
and
jecxz
and
test
nop
push
lods
ljmp
lret
mov
jae
filds
lods
sbb
mov
es
loop
sub
fidivs
add
and
cwtl
sbb
cli
inc
arpl
ret
xor
sahf
push
inc
dec
cltd
ret
and
repz
scas
dec
scas
jne
pusha
std
adc
stos
fsubrs
push
xor
mov
mov
shrl
pop
adc
loop
adc
shr
test
mov
pop
inc
xor
pop
sbb
sbb
pop
movsb
test
in
je
sti
icebp
not
mov
popw
push
cld
dec
into
push
inc
jecxz
mov
pop
lock
outsl
xchg
mov
push
ljmp
std
dec
dec
mov
out
outsb
dec
cmp
inc
xlat
sbb
xchg
lahf
inc
jnp
jbe
lods
sar
xor
mov
cmpsl
inc
icebp
test
sbb
xchg
and
or
xchg
adc
fs
nop
push
sbbl
mov
in
mov
fs
aam
je
insb
sbbb
aam
add
dec
push
xchg
mov
push
inc
in
idiv
mov
incb
stos
mov
ffreep
pop
test
pop
ror
jecxz
pop
xchg
pop
aam
dec
sbb
cmp
lcall
cltd
testb
sbb
inc
ret
or
hlt
pop
shr
xchg
pushf
out
sub
mov
out
mov
dec
adc
stc
mov
iret
popf
and
jbe
mov
pop
testb
jp
out
lret
out
xor
pop
adc
jbe
adcl
imul
mov
push
jne
pushf
fdivl
daa
aas
es
gs
mov
es
ret
lret
cmpsl
dec
jl
cmpsl
inc
test
cmc
inc
add
push
sahf
imul
sbb
scas
sbb
clc
addb
filds
stc
or
lret
xor
push
jge
jle
imul
pushl
jmp
insl
outsb
cmpl
push
mov
or
cmp
cmp
xchg
sbb
imul
mov
fnstcw
pop
xor
push
xchg
hlt
in
addr16
adc
lock
addr16
sbb
lods
and
fdivrs
scas
nop
push
xchg
popf
stc
js
div
popa
adc
or
adc
dec
xchg
aad
mov
mov
into
into
ljmp
outsb
inc
xchg
lret
pop
xor
nop
ret
sub
pop
cmp
mov
pusha
pop
test
cmpsb
stc
push
stos
movsb
pop
sbb
mov
and
out
mov
fnstsw
insl
mov
cs
push
pop
cli
jl
cmp
mov
cld
pop
jns
lret
sti
and
dec
and
mov
data16
xlat
jle
enter
cmp
push
cmp
xchg
test
adc
xchg
jge
add
sub
jmp
mov
imul
cmc
xchg
insl
out
inc
and
repz
dec
add
call
ret
data16
cmpsb
jbe
cmp
lods
je
jle
pop
sub
iret
xchg
test
or
insl
movzbl
xchg
bound
jge
jnp
push
pop
clc
hlt
pop
xchg
jns
std
inc
mov
push
pusha
stc
push
js
mov
adc
xor
push
xchg
sbb
movsl
sbb
mov
xchg
mov
stc
stos
iret
lret
iret
cmp
cmp
out
pop
std
lea
aad
sahf
xchg
sarb
movsl
jae
inc
adc
pop
xlat
mov
jno
test
push
stc
cmp
jle
dec
and
push
pop
cmc
mov
jg
getsec
jns
xor
fisubs
lods
in
adc
in
inc
outsl
je
adc
xor
add
mov
pop
ja
mov
stc
scas
leave
adcl
sbb
and
popf
movsb
mov
out
or
sub
repz
push
adc
rclb
mov
push
scas
xchg
in
add
pop
mov
shrb
out
fsubl
ds
sbb
inc
cmp
xchg
roll
jo
stc
sbb
test
sub
pop
xchg
add
xchg
mov
jb
repnz
fwait
add
das
in
sbb
cmp
mov
mov
and
mov
test
cmp
or
popf
in
nop
mov
popl
cmp
adc
lods
out
ds
sub
leave
call
xlat
fisubrl
clc
jl
lea
cmp
push
mov
push
test
frstor
daa
int3
push
addr16
out
jae
or
ja
aas
test
frstor
xor
sub
call
push
sbb
jb
or
mov
inc
pusha
setg
out
dec
js
jns
push
fwait
ds
fsubs
mov
inc
movsb
loopne
fstl
enter
mov
clc
lds
out
xor
les
iret
mov
mull
cmp
mov
or
cmp
pusha
mov
les
fnstenv
pop
mov
insl
insb
fwait
jp
ss
lods
mov
out
jl
outsl
das
or
sbb
dec
insl
js
pop
sub
lds
sbb
cltd
pop
loop
cmp
sti
add
pop
ret
icebp
pxor
or
mov
fisubs
repnz
punpcklwd
clc
rorb
sti
and
jnp
repz
insb
cmp
adc
lcall
cmpsl
aaa
cli
lea
xlat
clc
insb
mov
xlat
mov
call
fidivrs
xor
adc
loop
jb
jne
gs
xor
and
sub
xor
hlt
and
push
push
neg
aam
cmp
jecxz
loopne
pop
lcall
cmpsb
mov
iret
sbb
loopne
shll
movsl
ja
popf
ljmp
mov
sub
mov
jmp
dec
inc
lock
std
dec
es
pop
sub
inc
sbb
bound
movsb
lahf
out
mov
sbbb
and
add
push
jp
loopnew
lcall
dec
jns
test
push
adc
in
daa
sbb
sbb
cmpsb
sar
xchg
xor
or
stc
jnp
insb
orl
movl
adc
iret
out
inc
arpl
stc
inc
ja
ljmp
bound
add
and
push
cmc
imul
sub
mov
in
sbb
and
fsubs
pop
sarb
stc
ret
pop
mov
lods
movsb
xor
inc
and
cltd
mov
cmp
xchg
ds
push
clc
dec
xchg
lods
hlt
les
or
pop
adc
cmp
outsl
dec
fisubl
aam
adc
ds
lret
ret
in
das
dec
lahf
push
xor
or
xchg
inc
xor
outsl
ret
jecxz
pop
lds
and
mov
xchg
xlat
sbb
mov
shrd
call
pop
sub
push
and
std
xor
cmpsb
insb
xchg
es
sub
mov
imul
pop
lcall
mov
mov
mov
cmp
push
push
iret
sub
jns
xchg
iret
data16
inc
fcomip
loop
test
sub
mov
and
mov
out
xchg
sub
dec
scas
mov
sub
shll
xorb
dec
push
ljmp
inc
lret
pop
mov
jmp
rcr
inc
jl
sbb
xor
adc
cmp
and
dec
loope
push
add
push
and
rcrb
jmp
mov
and
imul
jne
fsubrs
sub
sub
jl
jge
rcrb
shlb
dec
xor
outsl
jp
mov
pop
push
or
cltd
ds
mov
xor
orb
adc
pop
cmpsl
sbb
fdivrp
and
lods
jecxz
inc
dec
sub
iret
cld
mov
fwait
pop
arpl
mov
mov
adc
mov
loope
jl
push
jb
addl
mov
push
or
jo
fldenv
daa
mov
adc
sub
xor
fsts
test
inc
loop
lret
sti
adc
inc
addb
repz
and
xor
ds
sub
jmp
mov
mov
cltd
ret
out
lret
lea
cmpsb
dec
and
rcrl
mov
inc
or
push
in
sub
mov
or
and
into
cmp
and
jp
xchg
fcoml
mov
xchg
jno
cmp
cmp
jp
imul
jl
push
push
test
sub
sbb
and
fs
push
dec
mov
sahf
xchg
cwtl
or
mov
inc
hlt
repz
mov
ficomps
add
lock
xor
lods
outsl
xlat
rcl
sub
andl
shlb
lods
jbe
fwait
repz
fxch
add
in
sbb
xor
pusha
jbe
nop
loope
xchg
and
mov
fdivrs
push
push
das
mov
iret
sub
add
int3
ds
or
test
adc
cmpsl
shll
sbb
and
cmp
sbb
xchg
jo
fst
jbe
rcpps
imul
mov
rol
pop
icebp
push
xor
push
mov
add
loop
sbb
addb
movsb
ds
frndint
rorl
pop
cmp
pop
push
cmp
ljmp
xor
mov
mov
dec
je,pn
rcll
add
xchg
movl
shl
jbe
adc
add
fcmovbe
shr
stc
xor
movsl
ss
cmpsl
inc
add
mov
out
packuswb
loopnew
pop
popf
scas
mov
test
lret
mov
stc
jmp
xchg
xor
push
lock
ret
xchg
lods
loopnew
cmpsl
add
sub
into
mov
xchg
mov
fldt
cmc
jns
out
jg
sahf
sahf
xchg
xlat
shlb
fmulp
dec
out
repz
or
addr16
cmpsl
mov
cld
cld
add
cmp
fsubr
jno
xchg
cmc
loopne
sub
jle
aas
mov
inc
enter
cltd
lock
arpl
test
mov
fildl
pop
sbb
add
adc
mov
shrb
pushf
sbb
jmp
jge
scas
mov
xchg
sti
ficoml
call
dec
clc
mov
cltd
push
ret
mov
xchg
and
and
jns
xchg
pop
mov
pop
cmp
jg
push
inc
ret
dec
icebp
cmp
mov
addr16
xchg
add
out
pop
loope
int
mov
pop
push
push
fnstenv
add
clc
in
adc
scas
jp
aam
and
pop
add
into
pusha
push
cmp
push
aas
test
cmp
mov
inc
xchg
ja
ljmp
das
xchg
dec
je
jb
sub
cmp
push
push
lock
cld
stos
push
int
xor
inc
ss
cmc
mov
pop
shl
ror
cmpsb
enter
testb
movsl
les
mov
clc
mov
jbe
dec
dec
ja
dec
or
mov
cld
dec
filds
lret
daa
cmpsl
jb
imul
enter
xor
ficompl
into
ljmp
xchg
xor
mov
push
pop
ror
rclb
repz
mov
test
cmpsl
jne
xchg
xchg
lret
jb
add
mov
xchg
mov
push
repz
aaa
sub
cmp
aad
test
sar
adc
in
fisttps
lds
int3
cmp
dec
cmp
negb
data16
inc
xchg
jnp
dec
mov
xchg
and
sub
cld
movsb
mov
cwtl
pop
mov
in
sbb
sub
mov
and
mov
sub
or
ljmp
and
jnp
sbb
addr16
jg,pn
cmp
fiadds
xor
xchg
out
scas
sbb
mov
add
pop
mov
mov
sbb
sbb
jae
inc
int3
jae
loop
cmc
push
cltd
es
pop
xchg
out
dec
mov
les
inc
shlb
aam
and
aam
int
pmuludq
xor
mov
mov
mov
cmp
lea
xor
jmp
add
fs
int3
loopne
je
test
jne
dec
sahf
sti
popf
cmp
inc
inc
mov
xlat
loope
in
adc
sbb
insl
cmp
aad
xor
push
fwait
cwtl
jo
dec
lahf
iret
insl
jne
sbb
jbe
pop
and
add
push
sub
pop
mov
or
add
pop
add
jl
add
adc
fs
adc
fldt
movsb
xchg
fmull
mov
jno
aam
or
add
daa
jbe
rorl
dec
test
mov
fs
in
hlt
adc
sbb
pop
dec
and
adc
and
xchg
pop
repnz
sub
jmp
mov
add
leave
ja
test
mov
sub
mov
or
outsl
inc
jne
push
or
fsubs
je
lock
mov
dec
clc
jae
shrl
and
or
fisubl
test
test
cwtl
insb
jb
loop
insb
idivl
jo
sub
jae
push
push
sub
inc
rolb
add
jp
sub
jl
mov
add
roll
push
pop
je
lds
int3
mov
test
imul
sbb
mov
inc
fdivr
out
mov
cmpsl
rclb
daa
dec
mov
jl
cli
add
mov
sbb
inc
in
mov
xchg
dec
inc
in
pop
scas
cmpsl
cwtl
sti
shlb
jge
daa
add
cltd
repz
jge
js
xchg
cli
leave
dec
lea
in
push
insb
jb
lret
dec
enter
aad
daa
xchg
nop
sti
sarb
pop
xchg
insl
jmp
iret
xor
adc
stc
scas
aaa
mov
sub
lods
sbb
ret
sbb
in
xchg
mov
test
jge
sbb
insb
les
bound
out
xlat
lcall
sbb
cmp
cs
xchg
push
subl
into
aam
je
clc
stos
leave
mov
mov
iret
xchg
cwtl
and
cmc
test
cmp
cmc
daa
lods
dec
int
lahf
ss
notb
hlt
jne
pop
add
xor
pop
jnp
popa
sbb
daa
dec
cmp
in
loopne
jns
xchg
stos
daa
mov
inc
pop
mov
popf
adc
rcrb
adc
adcb
out
sub
lahf
ds
cwtl
cli
xchg
std
out
pop
sbb
xor
push
jbe
or
mov
std
pushf
stc
daa
pop
dec
cmpsb
bound
aad
mov
stos
movsb
dec
sbbb
imul
jb
push
cs
xor
mov
mov
sub
mov
push
cmp
add
add
es
dec
stc
dec
sub
mov
insl
xchg
inc
sbbb
stc
js
sahf
push
xlat
jmp
adc
push
sahf
mov
hlt
xlat
daa
push
inc
xchg
pop
cli
cmpsl
and
pop
mov
nop
iret
mov
mov
popa
cltd
dec
push
dec
es
ljmp
mov
lret
rol
fucom
mov
jb
jmp
cmp
cltd
imul
rcll
inc
add
mov
pop
sbb
mov
gs
add
aam
dec
ja
sub
sub
jge
mov
pop
scas
and
psubusw
add
mov
shl
push
aad
cltd
fucomp
lods
les
lret
add
sbb
push
add
pop
in
pushf
aas
xor
enter
hlt
dec
jae
sbb
cli
mov
inc
cmp
dec
xor
xchg
or
lahf
rcrl
lea
dec
mov
out
adc
int
mov
push
push
ret
repz
sub
sbb
les
das
int
or
ret
sub
int3
pop
mov
xchg
mov
or
out
jb
jo
sub
pop
ljmp
push
pop
inc
xchg
dec
xchg
adc
adc
cwtl
sbb
xchg
xchg
jl
dec
mov
mov
add
sbb
or
jbe
push
xor
imul
std
or
sub
addr16
je
rcr
mov
hlt
test
popa
das
stc
pop
or
out
cmp
sub
sbb
repz
int
or
adc
or
sbb
xor
jo
xorb
add
mov
mov
pop
pop
xchg
mov
nop
push
jg
scas
in
cltd
xchg
imull
out
fcomps
fistps
cmpb
js
and
dec
in
dec
inc
fstpt
adc
xchg
jne
add
pop
mov
mov
xchg
lods
jle
enter
jge
nop
mov
mov
int3
test
cmpsb
cmp
inc
pusha
cmp
pop
rcll
lahf
dec
push
fmull
imul
ja
jns
outsb
loopne
jge
mov
arpl
aam
dec
aad
pushf
das
inc
mov
pop
sti
leave
cli
inc
bound
addl
in
cltd
mov
xchg
dec
add
and
into
les
xchg
fldenv
mov
push
or
int
mov
inc
mov
pop
pop
add
sti
lcall
jl
jp
test
arpl
sub
jnp
into
daa
outsl
dec
cmpsb
pop
lret
out
int3
out
inc
mov
adc
lcall
sbb
mov
iret
shl
rcrb
sahf
jne
cmp
scas
push
or
jbe
push
push
out
mov
lret
jns
enter
clc
and
pop
pop
je
daa
test
in
jmp
repnz
push
xchg
pop
inc
insl
pushf
movsl
cmp
outsb
outsb
cmpsl
sbb
sti
jge
nop
mov
sub
pop
in
sar
adc
js
adc
shlb
outsb
pop
scas
pop
lcall
ljmp
jg
adc
rorl
cmc
sub
fprem1
push
aam
aad
les
out
dec
and
lret
inc
pop
out
popf
xchg
and
or
sbb
mov
insb
jns
fucomi
xchg
cmc
je
pop
js
mov
dec
xchg
sub
sbb
stos
stos
adc
mov
mov
push
popf
inc
rcl
cs
ret
cmp
xlat
aad
aad
jno
aam
inc
ficomps
adc
movsl
cmp
adc
push
xor
cld
jcxz
shll
insb
or
jl
arpl
pop
es
jo
jns
lods
jp
incb
and
fstps
add
fcom
or
pop
std
xor
fcmovu
mov
or
mov
movsb
insl
repnz
sub
loope
adc
pop
sub
stos
jbe
pop
fs
fstpl
out
mov
jne
loopne
lret
mov
lds
mov
xchg
pusha
pop
cmp
testb
sbb
jbe
cmp
out
sbb
xchg
stos
cmp
sbb
dec
out
pop
pop
enter
jecxz
sti
or
jae
fstpt
repnz
jo
in
jnp
loop
sbb
xlat
int
jg
orl
cmp
dec
pop
sub
and
adc
ljmp
mov
sbb
mov
push
mov
add
mov
mov
imul
idivb
gs
sarb
mov
neg
and
fucomi
dec
ds
pusha
lcall
cmpsl
pop
leave
and
sub
jb
push
aam
push
int3
push
pop
jbe
jecxz
outsl
bound
andl
pop
in
aam
std
stos
or
dec
mov
cmpsb
xchg
mov
pushf
movsl
xor
rolb
mov
push
mov
push
mov
js
mov
or
es
rcr
aam
mov
out
subb
frstor
out
or
test
repz
test
xor
push
or
mov
and
adcl
dec
jp
xchg
jge
ljmp
jb
rorb
daa
lds
adc
popa
jg
ret
imul
repnz
movsb
adc
orl
sti
rcrl
jno
dec
sbb
fwait
jo
stc
daa
jmp
fs
mov
mov
rcr
sub
test
sbb
xor
adcb
jl
or
add
daa
xchg
xor
xchg
cld
pop
add
fidivrl
imul
jg
out
push
inc
pop
lods
jge
pop
icebp
push
test
or
cwtl
pop
sbb
pop
andb
mov
mov
cmp
xor
in
adc
jns
adc
icebp
or
mov
test
cltd
sub
lret
jno
dec
inc
mov
sbb
aaa
xor
iret
sbbl
loop
cmc
iret
or
sub
sbb
sbb
loope
shlb
mov
xor
jno
xchg
mov
xor
sub
lret
je
ficomps
and
pop
dec
inc
lret
fdivrl
or
or
out
ret
inc
icebp
jb
lock
scas
sti
pop
jmp
bound
hlt
call
icebp
mov
mov
xlat
sub
mov
les
push
jle
fisttps
sbb
ffreep
jmp
stos
jp
aam
lahf
jmp
je
fsubr
aas
fildl
jno
dec
jb
movsl
imul
cmp
mov
rep
fwait
das
cmp
sbb
jp
push
aas
out
mov
add
cwtl
lods
stc
fistl
adc
and
xor
mov
insl
fld
aad
pop
mov
out
insl
jbe
cmpl
push
mov
push
icebp
fxtract
cld
or
sub
cmc
in
jle
leave
push
daa
xchg
or
insl
pushf
fiaddl
mov
and
add
aad
mov
sti
push
add
cwtl
xchg
mov
out
ljmp
lock
or
cli
int
popl
xchg
aas
lods
imul
dec
dec
mov
mov
sub
stos
jb
push
sbb
pusha
push
das
sbb
cmp
aas
or
test
mov
sbb
cmpsb
xor
lret
ljmp
pop
jge
lock
add
mov
lods
aam
xchg
mov
das
add
aas
fstenv
cltd
dec
cmc
cmp
or
dec
sbb
cmp
sub
enter
mov
das
mov
pop
jge
jg
push
mov
dec
out
loop
dec
push
mov
call
xchg
lahf
imul
dec
aas
add
andl
add
out
or
push
jae
pop
insl
dec
into
sarl
xor
mov
xchg
popf
loope
mov
test
loopne
jae
cmp
adc
movsl
sub
cmp
stos
jmp
or
pop
enter
cmc
mov
sub
into
sub
loop
jne
fisttps
push
sbb
orb
movl
pop
mov
mov
ja
mov
incl
add
mov
cmc
in
sti
in
or
mov
sub
mov
mov
sub
pop
push
aam
push
jbe
jecxz
lock
mov
inc
int3
popf
lcall
adc
sub
std
ljmp
and
mov
insl
sub
add
jae
push
ret
push
aam
mov
sbb
insl
pop
test
mov
nop
add
jns
lret
pop
pop
rcrl
mov
leave
movsb
insb
loopne
mov
sti
cmpsl
xor
sbb
aad
cltd
in
sub
jbe
push
fnstsw
cmp
mov
jecxz
insb
fs
cmpsl
pop
imul
data16
mov
push
xchg
cwtl
jl
xchg
int
xor
sbb
mov
adc
dec
or
test
movsb
rorb
cmp
and
loop
mov
clc
sbb
or
inc
jge
xor
out
xchg
loop
mov
push
push
fistpll
out
dec
mov
pop
xor
loop
dec
stos
xchg
or
loop
ret
ds
dec
pop
cmp
xor
mov
aaa
test
lret
pop
sbb
pop
xor
in
loopne
cmpsl
test
nop
aam
adc
lods
ret
fdivl
pushf
and
xor
jbe
mov
lods
movsb
inc
sub
loope
pop
inc
aas
xor
push
and
imul
inc
fcmovu
loope
in
enter
ss
fadds
add
rol
inc
cmc
loope
in
pusha
add
dec
sti
test
repnz
sti
push
jnp
scas
insl
scas
jl
xor
andb
or
mov
lods
ret
xor
aam
xchg
xchg
in
inc
iret
cmpsb
push
cmp
dec
mov
add
dec
fneni(8087
hlt
inc
add
lahf
out
mov
cs
pop
adc
xchg
mov
inc
push
lret
xchg
fadds
je
out
add
icebp
int3
add
or
bound
sub
inc
imul
cmp
adc
adc
in
cmp
in
movsb
repnz
pop
jp
inc
mov
pop
stos
add
repnz
sub
sub
mov
fbld
lahf
ss
stc
pop
test
sbb
repnz
dec
pop
jb
xor
out
stos
dec
aad
add
add
psubw
fxch
push
cli
call
cs
push
mov
adc
je
cmp
add
add
inc
jne
and
outsl
add
addr16
jno
and
decb
fdivl
lods
dec
xchg
sub
jbe
and
pushf
jl
xchg
ficoml
daa
pusha
or
mov
sbbb
mov
imul
gs
ficompl
sbb
cs
prefetchwt1
aaa
sti
jns
sbb
or
inc
push
mov
dec
clc
ja
sti
jb
push
movsb
or
std
out
adc
xlat
mov
mov
mov
lret
sub
mov
push
pop
pop
and
mov
push
dec
push
xchg
mov
sub
popa
xchg
orl
mov
std
ljmp
sbb
stos
jne
cli
mov
sbb
jle
nop
add
outsb
cwtl
lods
add
wrmsr
sbb
xchg
dec
int3
mov
xor
push
out
in
into
sbb
mov
push
sti
std
mul
out
in
pop
sti
jbe
out
rcrb
popa
repz
scas
dec
movsb
lret
lods
pop
outsl
mov
push
das
in
clc
clc
mov
aad
mov
das
stc
or
sbb
jne
js
mov
pushf
and
pop
mov
into
ja
mov
jnp,pn
fwait
inc
jge
orl
daa
mov
sbb
out
push
dec
pop
and
adc
test
push
das
jecxz
ret
loop
std
pop
or
cwtl
ret
in
push
insb
cmpsb
cmp
ss
fmull
mov
mov
push
dec
notb
test
mov
sub
and
jl
push
mov
jmp
fists
roll
adc
addl
sbb
jmp
cmp
push
fstpt
scas
iret
jo
enter
iret
aam
nop
sbb
rcl
repnz
das
xor
dec
mov
outsl
cmp
cmpsb
sarb
mov
subl
imul
je
sbb
mov
xchg
cmp
jns
icebp
clc
and
xchg
pop
mov
adc
jge
jb
mov
mov
fwait
hlt
out
fimull
icebp
dec
xchg
dec
xchg
rcll
outsb
shlb
ret
std
popf
mov
mov
xchg
add
mov
xlat
pop
icebp
cmc
stos
pushf
ret
popa
pusha
push
lret
or
ficompl
sbb
or
loopne
adc
or
adc
push
bound
psubusb
out
rcrb
into
fwait
sub
xchg
adc
das
xchg
bound
or
pop
jp
loop
pop
push
ljmp
xchg
fimull
les
lret
dec
mov
dec
mov
mov
cmp
mov
shrb
and
fistl
sbb
dec
dec
mov
sarb
or
or
pop
mov
pop
jne
adc
dec
sub
in
dec
mov
pusha
jns
jb
jbe
aam
xchg
popf
pop
mov
daa
xor
jns
pusha
xchg
jp
adc
ljmp
cmpsl
cmpb
pop
repz
mov
cli
daa
ja
xchg
aad
pop
mov
fs
adc
in
repz
mov
pop
ja
movsb
pop
or
movsb
mov
sub
xchg
loopne
inc
inc
in
jnp
js
xor
dec
test
or
push
sub
mov
aaa
ja
ret
and
and
adc
ja
push
jl
inc
pop
xchg
mov
fcomps
jecxz
stos
js
cmp
mov
fdivs
out
in
int
dec
stos
stc
imul
outsl
cmp
shrb
in
xchg
jnp
scas
call
mov
ss
mov
and
xchg
insb
imul
test
clc
mov
aad
fnstsw
xor
fadd
arpl
jecxz
aaa
xor
les
mov
sbb
hlt
in
out
xchg
fisttpll
inc
fsts
adc
int3
jnp
clc
xchg
pushf
lods
push
ja
jae
add
ret
addr16
cmp
fwait
add
daa
outsb
jb
add
mov
inc
jns
pop
pop
lea
mov
inc
in
call
cwtl
nop
add
arpl
daa
in
mov
sbb
lahf
ds
xchg
sub
shl
movsl
inc
iret
add
inc
sub
inc
in
pop
push
out
in
push
cmc
pop
jbe
mull
adc
repnz
hlt
rcl
cwtl
cltd
testl
lcall
notb
jns
cmp
popf
jns
es
mov
leave
pop
xchg
mov
mov
icebp
adc
cmpsb
aas
adc
in
int3
pop
inc
bound
jb
jns
insl
mov
je
jge
ficompl
inc
movl
mov
inc
in
push
sub
jns
or
push
stos
sbb
push
test
xor
dec
add
aas
roll
or
ss
mov
dec
or
repnz
inc
fidivl
push
add
mov
sub
lock
or
dec
repnz
and
inc
add
mov
cmp
mov
jne
cmp
in
pushf
xor
jnp
inc
movsl
push
mov
test
aam
bound
xchg
aad
lcall
sub
pop
cmc
inc
adc
pop
out
and
dec
mov
jp
orl
gs
dec
dec
jnp
stos
and
push
cwtl
jo
stos
xchg
into
lds
lret
dec
scas
nop
jnp
xlat
imul
xchg
jmp
or
mov
push
nop
jnp
lret
push
repz
sbb
push
mov
adc
popa
xchg
push
cltd
push
fimuls
dec
shl
mulb
jg
rcrb
lods
pop
push
add
cli
cmp
aam
add
lcall
mov
dec
insl
les
lock
xor
lcall
pop
inc
js
rclb
hlt
push
int3
int
mov
add
mov
xchg
pop
outsl
mov
fsts
sti
adc
xor
outsl
push
aad
push
jle
repnz
cmp
inc
push
xchg
lds
aad
xor
repnz
mov
jmp
xchg
test
push
into
in
pop
test
jb
sbb
scas
into
mov
arpl
pop
mov
sub
ljmp
ds
mov
xor
xor
adc
in
adcb
or
mov
sub
pusha
fimull
mov
test
sub
sbb
icebp
gs
pop
iret
inc
pop
pop
sbb
and
gs
lock
dec
mov
int3
cmp
cmpsb
inc
mov
out
je
sub
iret
mov
dec
rcr
add
mov
jmp
adc
adc
sahf
inc
lahf
in
outsb
aam
adc
iret
sub
add
xchg
je
dec
or
xchg
jb
push
mov
xor
pop
test
mov
sti
fndisi(8087
and
test
cmp
ljmp
sbb
xor
fstpl
pop
jbe
dec
mov
add
sbb
jo
or
outsl
push
mov
dec
or
lods
mov
std
mov
mov
add
xor
out
dec
inc
and
pop
sub
add
hlt
fwait
mov
xchg
mov
stos
dec
test
fisubrs
in
push
lods
push
stos
mov
inc
loope
repz
and
outsb
mov
mov
aas
imul
cmp
xlat
xchg
cmpsb
fs
pop
in
insb
inc
insb
mov
mov
pop
push
ss
mov
push
lcall
lods
pop
dec
jnp
fadds
imul
lret
aaa
cmp
popf
pusha
movsl
lock
imull
mov
filds
imul
arpl
xchg
adc
lcall
inc
xor
mov
mov
loopne
cmp
sbbb
pop
loopne
shl
sbb
sub
js
mov
inc
mov
xchg
jp
mov
mov
push
shlb
repnz
xchg
xchg
mov
push
push
and
ret
adc
movsl
gs
and
fldcw
mov
inc
ror
xor
or
pop
sub
adc
sbb
fwait
fs
mov
dec
sbbb
push
daa
inc
or
sbb
daa
mov
fs
sbb
sbb
cs
xchg
mov
mov
add
aas
pusha
adc
adc
cld
fsubl
pushf
push
adc
shl
mov
add
xor
cmp
retw
addr16
sbb
xor
fldz
pop
mov
int
mov
dec
lret
popa
and
sub
and
fcmovbe
pop
in
lea
test
iret
cwtl
sbb
add
rorb
mov
add
pop
xor
jge
push
xor
int3
fdiv
and
pop
dec
jecxz
and
mov
insl
sbb
fwait
adc
mov
addr16
repnz
mov
xchg
outsb
pop
iret
adc
cmp
rcll
mulb
xor
cmpsb
adc
add
imul
aam
nop
inc
int3
cwtl
fs
enter
and
xchg
push
icebp
cwtl
and
mov
lock
mov
pop
or
scas
int3
leave
call
push
add
sub
adc
orb
xchg
cmp
xor
imul
xor
stos
and
mov
test
mov
rcl
mov
fstl
push
jae
out
ja
push
push
jl
or
cs
lock
fdivs
lods
outsb
and
push
dec
pop
lods
outsb
arpl
adc
and
xor
inc
xor
es
sub
sbb
mov
xchg
dec
adc
in
cmp
dec
dec
arpl
inc
dec
call
fs
pop
mov
fwait
in
shll
imul
cs
mov
lods
fistpll
mov
add
nop
pop
inc
push
xchg
leave
les
mov
shll
sub
cmp
pop
lods
adc
sub
jle
pop
sbb
sub
pop
mov
rcrl
sub
lods
add
mov
aas
sti
push
repz
loope
or
push
inc
add
mov
inc
mov
iret
mov
fsubrs
adc
xor
mov
icebp
mov
or
mov
mov
cmpsb
adc
bound
xchg
lahf
add
lret
test
pop
cmp
push
mulb
pop
xchg
enter
loopne
mov
inc
outsb
out
movsb
shrb
xchg
insb
push
push
xor
rcll
faddp
jp
push
pop
subl
xor
mov
popf
test
rolb
insb
lea
mov
jbe
sbb
sub
in
rcl
fadd
out
js
sbb
pop
xchg
sbb
push
mov
out
jl
push
iret
rorb
xor
jae
movsl
iret
dec
mulb
inc
jne
inc
dec
sub
dec
push
lret
dec
mov
jno
sub
fwait
mov
rcrb
sub
xchg
fidivrs
movsl
cmp
xor
fnstsw
ja
cmp
mov
subb
sbb
hlt
mov
push
out
xor
sbb
data16
in
mov
and
aaa
xor
mov
lret
lock
mov
push
in
and
jne
push
sbb
fwait
adc
int
sbb
cltd
data16
ret
mov
sbb
out
movsb
and
sbb
mov
push
insl
mov
mov
int3
fs
pop
xor
jg
mov
addr16
inc
getsec
ficoms
movsl
das
add
mov
ja
cld
psllw
popf
mov
mov
cs
and
out
dec
in
test
arpl
mov
aaa
xor
shll
insb
out
pushf
fs
repnz
in
shr
mov
mov
xor
aam
adc
hlt
adc
push
in
add
jmp
out
stos
cwtl
pop
xlat
scas
ret
jmp
mov
adc
mov
inc
or
sbb
xchg
sub
mov
negb
pop
sbb
ja
sbb
cmp
mov
jle
add
xor
fistpll
push
mov
fldenv
pop
cmp
lret
movsl
gs
mov
xor
stos
adc
adc
stos
xchg
loopne
lods
push
cwtl
dec
inc
inc
mov
test
decb
pop
test
inc
pop
enter
inc
sub
int
xor
inc
fcomip
enter
ss
repz
mov
push
into
arpl
mov
jne
dec
adc
movl
cmpsl
mov
mov
or
add
lods
sbb
lds
lods
test
cmc
pushf
aaa
cld
jno
iret
out
jns
sahf
lock
imul
sbb
or
movsl
and
call
in
sub
shll
jbe
enter
ljmp
dec
and
mov
and
jb
or
in
mov
push
fnstsw
cmc
ljmp
sub
and
cmp
pop
mov
subl
adc
or
sbb
in
xchg
push
fwait
inc
xchg
sub
xor
sti
jge
sahf
jbe
fimull
in
pusha
jo
push
mov
mov
sarl
xor
mov
fwait
lea
lret
enter
xor
hlt
jecxz
jecxz
cwtl
addb
pushfw
ljmp
inc
push
in
loope
jle
repz
fwait
pushf
les
sub
pushf
loopne
cmp
arpl
int
xor
dec
xor
ds
sahf
andb
lock
push
push
and
loope
cli
mov
jg
adc
push
movb
sbb
outsl
or
test
rorb
std
adc
enter
push
mov
repnz
jp
push
cmp
xor
xor
jg
push
pop
pop
jo
in
xchg
iret
or
adcl
movsl
icebp
mov
fwait
and
mov
mov
lret
jl
mov
mov
repz
sub
enter
cld
outsb
mov
dec
inc
sbb
cwtl
bound
int3
xchg
push
sub
add
inc
mov
push
mov
dec
inc
lcall
loopne
stc
and
cwtl
sub
repz
adc
ss
sub
lcall
popf
cltd
fidivl
fiadds
dec
adc
mov
mov
xchg
push
lret
shr
mov
lcall
ret
xor
orb
out
bound
mov
flds
lahf
test
cwtl
push
inc
cld
jle
fs
mov
or
xchg
inc
cs
mov
fwait
mov
jns
adc
adc
scas
fisubrs
cmp
pushf
gs
fs
roll
cwtl
jg
push
or
out
mov
int
sbb
std
aad
jo
cmp
loopew
test
cmpl
sahf
mov
pusha
lahf
xchg
adc
imul
lahf
test
dec
mov
mov
mov
popf
push
push
nop
xor
mov
ss
pushf
jb
mov
adc
imul
insb
mov
jge
xlat
jb
cltd
into
push
bound
insb
stos
add
lods
enter
loope
sbb
mov
or
insl
es
lret
push
addr16
or
sub
fidivrs
test
out
lods
and
cmp
loope
or
std
cld
mov
pop
je
and
fsub
js
mov
dec
das
jne
jno
repz
sub
xchg
adc
lret
and
xor
jb
or
gs
pop
pop
mov
bound
mov
out
or
lea
push
ret
das
movsb
test
fldt
fistpll
aam
lea
loope
std
lock
sub
cltd
fistpll
pop
in
mov
dec
aam
mov
les
fmuls
sub
std
mov
in
fstps
movsl
bound
xchg
aaa
sahf
xchg
dec
movsb
xor
test
dec
adc
mov
out
ljmp
dec
xor
cltd
mov
sbb
jl
xchg
add
mov
xchg
shr
negl
xchg
inc
stos
adc
lods
int3
mov
adc
fisttpll
in
push
cs
pop
dec
cmp
lret
mov
pusha
shlb
mov
in
jle
or
jg
out
cltd
imul
pop
lods
sahf
add
mov
aam
cmp
js
dec
push
xchg
imull
adc
out
rolb
cwtl
nop
and
mov
jmp
cmpsb
rolb
mov
stos
sub
xor
mov
fcomp
out
inc
push
jg
pop
cld
out
lcall
out
pop
ret
jge
data16
ret
wbinvd
call
and
add
imulb
jno
inc
lock
gs
enter
sub
or
cmp
xor
loope
subb
ljmp
or
xchg
pop
pop
inc
or
fstpt
pop
sbb
mov
cmp
xlat
addr16
push
ja
out
mov
jb
xchg
imul
aaa
add
and
xor
inc
jne
outsl
dec
xor
dec
dec
andl
inc
adc
or
or
hlt
xchg
sub
lock
or
push
pop
sub
clc
lds
xor
pop
xchg
movsl
mov
xchg
ret
cmp
xor
aaa
test
stos
lret
xchg
xchg
ljmp
xchg
jbe
dec
jnp
mov
lods
cmp
icebp
and
fistl
mov
add
mov
mov
fnstcw
int3
push
sahf
mov
or
push
mov
sbbl
stc
jae
lock
stc
sarb
not
xor
lods
scas
scas
mov
out
xchg
or
xor
jp
rcl
push
loop
stos
pandn
xchg
imul
jecxz
gs
out
add
push
and
xchg
sbb
or
adc
mov
push
lods
loope
repnz
enter
ja
cmp
rcll
jo
decl
popf
push
mov
je
pop
roll
add
jns
push
xchg
mov
pop
test
push
adc
sbb
lock
int3
popf
into
push
inc
push
out
maskmovq
mull
pusha
push
cmp
push
add
push
xchg
jp
and
jno
cmc
addr16
push
sub
jne
scas
dec
ret
sbb
jl
gs
das
push
add
sub
fs
cld
mov
fidivs
inc
mov
cmc
sub
dec
pusha
mov
inc
ljmp
ret
xchg
mov
xchg
dec
ficoms
cmp
imul
inc
and
aam
and
movsb
sub
push
gs
jmp
ljmp
out
stc
xchg
aad
cs
dec
dec
jp
pop
and
stos
dec
aaa
imul
iret
fidivl
stos
lea
int3
movsl
imul
xchg
dec
cmp
andb
outsl
xchg
add
sub
dec
jmp
push
ret
clc
out
stc
jae
adcl
xor
adc
sub
lcall
call
mov
mov
sbb
ret
cltd
sti
daa
addr16
add
repnz
cmpsb
in
cs
mov
mov
shl
xlat
dec
jp
jl
mov
pop
test
sub
loopne
loop
cwtl
jbe
push
loop
jae
xchg
pusha
sub
jmp
fwait
jae
sahf
test
xchg
icebp
sbb
or
fiadds
xlat
jge
cltd
popf
sub
movsb
inc
test
cltd
and
stc
mov
ja
inc
sti
cmp
jnp
stos
dec
out
sub
pop
or
stos
or
testl
jl
mov
aas
cmp
add
sbb
js
arpl
test
sbb
imul
sub
mov
sub
test
pop
or
cmp
push
sbb
pop
lret
int
jecxz
pop
jne
adc
sbb
xor
xor
cmc
scas
adc
mov
inc
shr
and
in
popl
mov
jle
inc
loope
xor
icebp
mov
xchg
dec
popa
das
test
jl
push
clc
mov
pop
xchg
shl
pop
icebp
sahf
lahf
sub
cmp
out
add
shlb
dec
in
mov
jmp
aas
cwtl
xlat
lods
mov
fstpt
ret
jge
sub
outsl
sbb
pop
ja
jo
or
mov
or
lret
and
xor
addr16
add
adc
into
cmp
cmp
mov
dec
in
fs
jg
test
push
mov
movsl
aas
sbb
ficoml
mov
call
lea
addl
test
xchg
and
enter
push
repz
adcl
sub
or
es
mov
jl
mov
jno
lret
rcrl
or
mov
fcoml
das
or
fldenv
add
std
push
xor
cmpsl
lods
and
pop
xor
xchg
iret
cmp
xchg
cld
jecxz
or
push
pop
jno
or
cmpsl
or
cli
jge
jnp
lods
bound
lahf
bound
sub
push
in
rcll
sarl
inc
inc
xor
add
into
fwait
iret
lea
sub
jnp
dec
and
aad
fs
and
rcr
xchg
push
icebp
jnp
jbe
mov
xor
cmp
fbld
popf
int
cs
ret
xlat
jo
or
andl
inc
aam
aad
sub
inc
sbb
enter
lcall
add
incb
scas
sub
pop
repz
sub
imul
xor
lret
shlb
addb
pop
push
loop
pop
pop
fmull
lcall
iret
test
dec
cmp
stos
pmuludq
push
xor
in
mov
arpl
xchg
outsl
je
popa
adc
fs
pop
dec
int3
push
fsubrl
les
add
push
test
sbb
mov
inc
xor
add
mul
addb
add
addr16
subb
jg
xchg
sub
loope
push
mov
pop
and
push
aam
repnz
sbb
ret
xchg
jmp
inc
rorb
insb
push
dec
or
gs
fists
cmpsb
jmp
xchg
lahf
addb
mov
cwtl
jns
gs
lds
aam
bound
sbb
aam
mov
xchg
xchg
inc
and
cmp
inc
sbb
cmp
jno
or
inc
arpl
repz
jl
push
and
sbb
xlat
adc
lret
mov
jge
mov
outsl
jae
inc
movsl
mov
xchg
jmp
xchg
push
pop
pop
cmp
in
out
dec
mov
mov
clc
and
jmp
mov
mov
jg
mov
ss
or
movsl
xlat
notb
xchg
int
xor
and
popf
sub
fs
mov
divl
in
stc
mov
stos
aaa
test
scas
dec
inc
inc
sbb
xor
mov
les
icebp
cmpxchg
pusha
scas
cmpsl
dec
jmp
pusha
jmp
push
movsl
pop
jg
mov
test
xor
repnz
push
cltd
sbb
push
stc
jmp
popf
popa
mov
sub
in
call
cmpsb
fistps
fstps
mov
dec
mov
loop
push
add
adc
and
loope
sub
fs
mov
test
adc
xchg
fwait
enter
ret
adc
je
pop
dec
push
push
fdivrl
fbstp
jecxz
repnz
fs
lcall
mov
shll
or
sbb
fcmovb
out
or
cwtl
shll
in
mov
fidivs
int
lock
sbb
insb
or
xchg
bound
push
sbb
movsl
mov
or
rcll
push
sahf
pushf
inc
lock
jbe
ss
stos
and
scas
mov
sub
ret
adc
fstp
push
aam
mov
rorb
mov
mov
xor
outsb
sbbb
in
dec
cld
or
jae
and
icebp
add
in
int
repz
mov
cmpsl
mov
cli
pushf
xlat
sbb
mov
sbb
inc
cs
loopne
xor
adcl
or
xlat
adc
test
lahf
push
repz
repz
loopne
pop
inc
inc
jnp
jge
adc
inc
mov
cmp
inc
hlt
jmp
cmp
mov
sbb
dec
add
mov
lods
fdivp
mov
adc
pop
ljmp
ss
mov
imul
daa
stos
popa
jmp
in
jmp
arpl
mov
add
mov
inc
pop
mov
jo
adc
mov
call
or
jp
bound
mov
xchg
dec
adc
push
negb
add
lds
adc
cmp
mull
push
inc
xchg
add
fdivp
mov
and
pop
push
jbe
pop
lods
rcrl
scas
or
cmpl
imul
adc
cmp
cmp
fst
mov
adcb
int3
and
or
xchg
test
jl
mov
or
or
cmp
xor
mov
jp
imul
jecxz
cld
icebp
imull
jle
mov
cmp
mov
mov
dec
inc
cmpsb
mov
pop
pop
cmpsb
pop
xor
in
adc
pop
std
or
icebp
jo
add
xor
sbb
movsl
add
ja
movsl
test
and
int3
push
jl
sub
lret
movsl
sbb
jne
imul
mov
push
inc
fwait
and
mov
mov
leave
jnp
xor
rcll
pop
jbe
mov
dec
inc
loope
xor
cmp
aad
addl
inc
push
aam
js
flds
xor
adc
repz
lret
sbb
sub
int
xchg
push
and
fsts
push
add
cmp
fnstenv
xchg
xor
add
lods
push
or
xchg
lock
lods
jns
ficompl
or
push
enter
sub
sub
clc
or
rcrb
gs
dec
sub
mov
out
fld
xchg
stc
dec
xor
popf
out
ja
lods
dec
fistps
mov
xor
sub
les
add
pop
in
stos
das
cmpsb
sbb
icebp
movsb
pop
dec
insb
mov
mov
dec
add
fwait
adcb
jb
jne
fcomip
jns
sbb
shr
std
mov
lds
xor
movsb
sbb
push
mov
xor
lcall
xchg
outsl
out
les
lods
movsl
ljmp
scas
jp
loope
cmp
mov
cmp
jnp
sub
dec
insl
cmc
or
addr16
fsubrp
xor
push
pop
in
test
cmp
xor
in
aaa
add
or
dec
decb
lret
psubsw
sub
adc
and
stos
inc
push
cmp
test
out
sbb
imul
int
fwait
sarb
ds
stos
push
xchg
pusha
xchg
cmp
add
xor
sarb
cmp
jo
fldt
test
push
or
loopne
adc
cmp
gs
add
jge
sbb
mov
mov
in
pop
mov
into
sbb
xlat
or
push
ljmp
lahf
and
in
dec
mov
dec
addb
arpl
popa
nop
xchg
dec
mov
xchg
fbld
jg
fisttps
ss
add
lret
xor
outsl
jl
ja
mov
pop
mov
imul
mov
xchg
pop
imul
cwtl
insl
push
movsb
hlt
sub
cmp
mov
and
xchg
dec
dec
or
das
adc
mov
jle
ds
call
adc
inc
fnstcw
out
push
jnp
jne
fdiv
movsl
mov
jmp
shlb
fwait
mov
pop
lds
push
xor
scas
rcrb
xchg
jae
adc
cs
xchg
cmp
sub
stos
mov
dec
idivb
and
sub
ss
jne
lret
gs
mov
jmp
sub
insl
mov
jle
pushf
sub
push
stc
mov
fsubrs
add
xlat
out
sti
fidivl
inc
icebp
cmp
lret
hlt
sub
jecxz
pop
iret
movb
push
or
adc
push
mov
subl
gs
arpl
rolb
xor
cmp
adc
xor
cmpsb
jo
das
or
sbb
or
jae
pop
add
mov
pop
insl
into
xchg
cmpsl
insl
sub
aaa
cs
sar
subb
mov
jg
xchg
sahf
rcll
cmpps
dec
ds
mov
aam
lea
and
je
pop
iret
fbstp
arpl
shrb
xchg
dec
dec
das
add
in
xchg
cld
das
inc
jg
adc
xor
dec
orb
insl
mov
pop
push
in
pop
mov
pop
iret
in
pusha
imul
mov
sub
dec
nop
or
xchg
sub
jb
cmc
xorb
fildll
jg
in
or
or
repnz
mov
inc
mov
jae
xor
movsb
add
xor
mov
repnz
mov
fdiv
jno
sahf
mov
addr16
into
jl
les
mov
adc
xchg
rclb
push
stos
mov
jge
lods
xlat
mov
je
pop
hlt
pop
bndstx
or
outsl
mov
pop
dec
jg
sbb
inc
push
dec
clc
xchg
jl
pop
out
add
mov
mov
test
push
and
sub
pop
out
gs
sub
mov
xlat
inc
jns
leave
test
and
mov
and
mov
mov
adc
and
cmp
mov
push
mov
jno
pop
inc
pushl
aas
sub
icebp
sbb
xchg
mov
cmc
lods
mov
sub
mov
mov
iret
aad
inc
fdivl
fs
pop
in
mov
dec
push
mov
cmpsb
pusha
pop
pop
dec
lcall
sub
add
push
in
push
insl
sub
test
jne
fistpll
xlat
iret
outsb
loop
xor
ret
int3
jmp
in
nop
dec
mov
loope
lea
notb
iret
sbb
mov
call
ret
test
stos
int3
insb
nop
and
aam
rcl
push
fsubrp
pop
mov
push
dec
incl
aam
fisubrs
or
pop
lods
insb
sahf
mov
sbb
movsl
push
or
mov
mov
pop
insl
mov
push
jne
dec
mov
mov
std
inc
daa
stos
mov
test
xchg
push
add
add
test
jns
stc
insb
mov
lret
cmp
pop
ss
inc
icebp
jae
jnp
xor
sbbb
xchg
lret
movsb
pop
mov
xor
add
cli
addl
fstpl
sti
fwait
push
xchg
hlt
fnstenv
test
in
jmp
add
shlb
hlt
add
out
mov
ret
mov
and
jmp
cmp
and
popf
pop
mov
loopne
jbe
or
imul
jo
movsl
and
cmp
dec
jne
mov
stc
pop
addl
push
sahf
pop
jnp
lea
adc
es
xchg
notl
stos
inc
repz
stc
jp
mov
xor
imul
sbb
xchg
lods
sbb
pop
add
sub
fidivs
test
inc
sub
ficoms
sbb
pop
jnp
ss
outsb
inc
xor
movsl
icebp
lahf
loop
adc
add
xchg
mov
popa
stos
pop
je
out
lret
out
lods
xchg
and
movsb
shr
xchg
inc
out
pushf
cs
dec
les
sti
xchg
ret
js
mov
inc
int3
mov
loop
idiv
inc
jl
mov
stos
pop
adc
in
xchg
xor
and
mov
cmpl
insb
mov
mov
ret
pop
lret
dec
push
insb
cli
add
xor
dec
call
fistpll
jne
mov
dec
mov
or
jl
xchg
sub
add
out
push
pop
push
out
pop
push
adc
xor
das
or
pop
das
add
xor
popl
fmull
aas
rcl
lea
int3
bound
jno
mov
rcr
inc
xchg
xlat
sub
mov
popf
lcall
add
push
cmp
xlat
pop
sbb
rol
aas
sub
lahf
jg
xorb
pop
pop
mov
test
mov
std
mov
add
lods
repnz
mov
mov
or
mov
cmpsl
jb
ss
popf
ds
outsl
add
xor
lea
insl
mov
in
dec
mov
jbe
lds
jnp
mov
mov
or
and
push
out
pop
mov
out
lock
push
pop
jecxz
mov
pop
sti
sbb
and
add
sub
js
repnz
jp
mov
jae
jbe
in
mov
fldl
jge
inc
mov
imul
call
mov
outsl
popf
push
leave
outsb
sbb
dec
sbb
mov
push
cmpsb
inc
sbb
lea
mov
bound
mov
xor
aad
das
mov
sbb
xchg
imul
pusha
jle
popa
inc
push
pop
push
sarb
xor
shrb
aad
push
push
fwait
cmpsb
lods
sti
sbb
insb
sahf
xor
mov
sarb
ss
leave
adc
fwait
mov
in
loop
sub
call
insl
dec
xor
lock
add
sahf
jno
test
or
ljmp
pop
mov
rorl
stos
orl
xchg
leave
mov
in
je
ret
int3
fdivs
cmp
jno
movsl
fstpl
out
xchg
cltd
jns
mov
shlb
in
rcrl
mov
orl
or
scas
cmp
test
stos
lods
adc
inc
out
cs
test
fxch
pop
in
addr16
scas
cmp
or
out
sub
enter
addr16
mov
int3
arpl
scas
jno
jno
push
das
rolb
call
hlt
adc
lcall
mov
inc
pop
xor
or
call
rorb
or
mov
xchg
mov
not
mov
movw
mov
outsb
xor
and
sbb
icebp
cmpsl
xor
jo
rorb
roll
inc
in
loop
dec
out
push
mov
jecxz
dec
xor
jae
inc
mov
into
or
fldl2t
loopne
pop
das
and
push
lret
test
adc
fneni(8087
mov
fdivs
jno
pop
push
add
pusha
test
cmp
push
addl
shl
je
sbb
cmp
adc
push
movb
xchg
pop
lea
mov
push
into
cmp
pusha
mov
adc
fidivl
test
fcomps
xor
add
or
mov
or
xor
push
mov
xchg
rcrb
xor
sub
xchg
or
sbb
ret
adc
xchg
mov
aad
lods
aad
jle
cmp
pop
rcr
je
lock
jp
pop
scas
jne
fldt
lret
add
and
inc
mov
cld
arpl
in
push
loopne
jmp
xchg
adc
dec
xchg
xor
jb
jge
scas
push
sbb
and
mov
add
lea
or
shlb
adc
or
les
andb
out
dec
ja
xlat
imul
pop
sbb
sub
jmp
jmp
js
jmp
enter
inc
repnz
adc
xchg
jo
mov
add
ror
sahf
cmp
hlt
int
add
icebp
out
adc
daa
stc
adc
mov
cmpsb
push
daa
push
jne
mov
out
int
mov
mov
push
sbb
mov
cld
push
cmp
mov
outsl
addr16
and
sti
adc
and
and
scas
sbb
in
bound
push
sub
mov
xchg
cmp
or
sbb
lahf
mov
arpl
and
mov
xor
inc
push
push
adc
dec
xor
pop
jo,pt
sahf
mov
mov
test
mov
mov
lret
lcall
aad
sub
sbb
lcall
out
stos
or
push
cltd
xchg
ret
push
mov
fisttpll
scas
sar
sub
ret
mov
jle
mov
and
pop
stc
cmp
add
dec
outsl
sarb
sub
aaa
pop
dec
push
cld
mov
inc
adc
in
fs
mov
jge
jno
in
pop
sbb
lcall
adc
ja
aam
imul
add
push
cli
adc
mov
inc
add
jne
fwait
cmp
mov
adc
test
jmp
jb
mov
test
imul
adc
mov
push
push
in
and
push
jb
xchg
jne
mov
and
push
pop
lock
xchg
sub
pop
adc
int
cmp
or
jae
aam
xor
popa
sbb
cli
insb
cli
pushl
loopne
pusha
loop
cltd
add
ds
and
loope
inc
cli
adcl
scas
idivb
fisubrl
inc
pop
sbb
inc
out
jo
inc
icebp
or
push
scas
lret
jae
pop
pop
ret
ds
cmp
ja
lret
popf
jl
mov
mov
enter
sbb
sub
xchg
imul
adc
jns
inc
xor
adc
and
pusha
and
xor
lods
gs
mov
sahf
stos
inc
push
daa
les
into
sub
fstpt
add
mov
add
outsl
stc
push
int
sub
adc
sti
ret
or
loopne
push
mov
push
mov
mov
dec
inc
add
and
mov
jb
add
pop
movsb
mov
out
push
ret
js
cmp
jne
xor
and
cmc
leave
call
lods
cmp
pusha
mov
fcoml
andb
cmp
pop
push
pop
mov
bound
push
pop
divl
push
cltd
inc
jmp
and
cmp
rcll
pop
clc
mov
lods
jg
add
push
icebp
inc
in
jecxz
test
xor
dec
mov
adc
push
lcall
out
inc
cmpsb
idivl
or
mov
and
xchg
scas
and
jle
mov
xchg
cmp
mov
mov
addr16
pop
orl
in
pusha
adc
ret
test
jecxz
cs
sbb
xor
hlt
push
int
xchg
jl
dec
inc
mov
jg
movsb
sbb
sahf
mov
push
adc
cwtl
and
ds
add
mov
ja
sbb
or
xchg
loopne
pop
push
scas
sbb
and
pop
adc
add
pusha
jnp
imul
pop
and
mov
xlat
sub
sarb
and
insl
stc
cmp
pop
sbb
dec
fiaddl
mov
js
rorb
cmp
mov
stos
jnp
sub
sub
pop
cs
lods
push
dec
pop
or
aam
lea
aaa
lret
inc
loop
dec
adc
test
push
es
dec
movsl
mov
sti
and
dec
inc
push
vshufps
xchg
mov
lods
imul
ss
mov
cmpsl
and
add
add
sbb
rol
adc
add
adc
inc
sub
mov
les
jo
loope
out
pusha
mov
negb
mov
lock
push
mov
inc
fildl
pushf
out
add
push
je
lods
sub
stc
cmp
repz
pop
nop
xchg
sbb
xlat
adc
js
and
pop
fmull
pop
repnz
insb
pop
mov
dec
stos
insb
sbb
lds
test
movsb
jecxz
mov
sti
mov
xchg
addb
fisttpll
lcall
aad
cld
sbb
or
fldt
sub
lods
lahf
inc
inc
push
xor
and
inc
or
pop
iret
xchg
in
adc
sub
inc
xchg
mov
movsb
mov
dec
push
xchg
jnp
cld
lea
cld
mov
arpl
sbb
push
jge
xchg
icebp
arpl
adc
push
jb
fmull
int3
jne
lock
dec
cmp
testb
mov
in
jb
jno
aam
fldenv
les
popa
xor
push
push
aam
repz
pop
inc
rcrb
mov
jno
fs
ret
mov
shl
mov
xchg
pop
fdivrs
xor
clc
mov
add
xchg
xor
pushf
xchg
jno
int
mov
pop
mov
jge
stc
push
xor
xor
xchg
rcrb
mov
xchg
sbb
jb
adc
je
sub
icebp
xchg
push
insl
dec
cli
push
or
xor
sub
iret
popa
popa
subb
dec
sbb
dec
mov
int3
xorl
loop
mov
test
mov
cmp
fiaddl
mov
cmp
aaa
sub
movsl
xchg
cwtl
cld
jg
xchg
push
mov
lahf
cmp
jo
push
lret
scas
lcall
sbbl
adc
mov
cmp
mov
mov
push
shl
xor
pop
sub
sub
mov
pop
je
imul
testl
mov
mov
inc
shll
cmpsb
stos
fildll
xchg
ror
popa
pop
push
or
out
sub
fisubs
mov
cmc
aaa
stc
call
sbb
jo
pop
dec
call
call
arpl
fdivl
mov
lock
xor
jnp
aad
lods
cli
clc
xchg
jg
and
ss
aad
lahf
outsl
mov
int
jecxz
pop
fdivrs
add
xor
push
data16
push
mov
sti
sarb
fnstsw
cmc
into
mov
push
inc
gs
xchg
and
xchg
push
lods
and
and
or
lea
lret
in
rclb
cs
jl
mov
xchg
cmp
push
loop
jmp
lods
test
or
lret
or
mov
aam
and
into
dec
lods
sbb
mov
adc
jnp
sub
and
and
cld
divl
out
in
imul
mov
outsb
jnp
je
push
xor
lock
and
pop
int
adc
sub
lods
xchg
loopne
out
lds
fwait
xchg
sub
sbb
nop
movsl
jmp
xchg
inc
mov
xchg
adc
ret
cmp
js
or
fnstenv
dec
stos
loope
jmp
or
insl
lds
pcmpeqw
ret
pop
test
xchg
bound
cld
ss
roll
mov
mov
lods
dec
outsl
scas
es
dec
fsubrs
xor
icebp
cmp
call
jp
xlat
mov
xchg
lods
jg
nop
or
mov
adc
sub
mov
sbb
movsb
inc
stos
push
sub
and
mov
repnz
pop
pop
sbb
mov
push
nop
lret
inc
or
fst
pop
inc
idivb
pop
inc
adc
and
mov
push
mov
sbb
fldenv
jo
imul
push
fdivs
rclb
inc
dec
ret
pop
sub
and
sbb
fcoml
pop
push
bnd
shrl
pusha
leave
pop
mov
jbe
push
ficoms
xor
add
outsb
dec
mov
fidivs
cmp
cld
pop
lock
je
inc
js
push
push
pusha
lcall
inc
stos
add
jmp
ljmp
scas
int3
and
or
pop
mov
jb
pop
lea
xlat
add
ljmp
dec
ss
shr
add
xchg
mov
sbb
mov
lret
sub
es
mov
sub
or
jne
insb
and
into
data16
int3
and
icebp
stc
jo
and
gs
cmp
xlat
call
pushf
add
mov
inc
insl
push
mov
cld
sti
cld
sti
sbb
xchg
mov
sub
das
dec
je
movsb
mov
lods
lods
out
ss
mov
shlb
aad
cli
cld
nop
sub
adc
mov
cmpsl
lret
ss
icebp
mov
xor
aas
jae
out
je
insb
jle
mov
icebp
ficoml
shlb
imul
mov
cwtl
pushf
mov
dec
rorl
pop
sbb
pop
scas
ds
popf
jmp
je
jo
add
movb
or
nop
xchg
jno
fwait
xchg
ds
xor
inc
loop
in
clc
test
add
and
jmp
xor
loop
xrelease
fwait
mov
inc
cmpsl
sub
mov
jo
fwait
nop
gs
lods
int
xlat
and
mov
xorb
jnp
xchg
shlb
add
xchg
dec
inc
dec
shr
mov
mov
xor
lods
push
mov
cmp
aad
sar
add
pop
fists
pop
data16
push
leave
mov
xchg
js
mull
pop
mov
lds
push
mov
jl
mov
lahf
mov
sub
inc
inc
jb
movsb
cmp
aam
mov
push
mov
or
lret
pushf
jb
into
dec
aas
adc
or
jg
mov
fsubp
or
cmp
sbb
f2xm1
add
and
hlt
repnz
inc
dec
outsb
jne
in
or
daa
repz
std
aad
mov
mov
or
and
push
push
lods
in
sub
adc
imull
fsubp
sbb
sbb
popa
sub
jl
sbb
push
lds
in
inc
xchg
out
stos
pop
or
dec
adc
lds
notb
mov
bound
push
add
inc
jbe
test
ljmp
sahf
push
imul
aaa
push
xchg
mov
or
xchg
xchg
jno
push
lock
push
lea
shlb
xchg
in
test
inc
xor
xor
push
inc
mov
out
insb
jne
cmpsl
jbe
mov
int3
ret
xchg
jo
jmp
and
test
leave
inc
outsb
mov
loop
sbb
add
mov
fwait
or
in
mov
jge
inc
ds
mov
popf
xchg
mov
data16
jne
cmp
es
imul
mov
rorl
push
add
xchg
xchg
mov
outsl
popf
mov
jmp
xlat
dec
mov
cmpsb
pushf
je
xchg
pop
jp
push
fdivr
sahf
ret
shrl
andl
pop
lret
pop
jmp
in
rcrl
sbb
jb
call
cmc
aad
pop
sbb
call
daa
jp
stc
out
or
jno
sbb
jg
jmp
testl
cld
les
int3
sub
out
fcmovne
fs
push
dec
mov
icebp
movsb
aaa
das
sbb
inc
pop
je
incl
movsl
cld
out
pop
pop
pop
shlb
adc
xchg
pop
in
fisttpll
pop
subb
dec
xchg
or
inc
fstpt
adc
data16
jmp
jb
xchg
rorl
and
xlat
popf
sub
cld
iret
inc
push
push
fbstp
movsl
jno
cmp
dec
pop
roll
jbe
insb
pop
repnz
iret
adc
out
or
cmpb
and
loopne
in
sub
jecxz
mov
call
mov
cld
or
mov
pop
inc
jecxz
xchg
cltd
dec
repnz
aam
jne
nop
mov
jmp
jno
sahf
jg
mov
mov
jae
test
aas
and
xchg
push
add
push
add
add
jge
int
adc
jle
pop
cmpsl
pop
lcall
jle
pop
js
push
jp
add
mov
hlt
movsb
aam
repz
pop
jb
cmp
mov
and
push
jns
daa
inc
xor
xchg
aad
pop
scas
scas
mov
fs
xlat
push
add
test
scas
adc
sbbb
lret
in
fists
adc
test
bound
outsl
popf
test
sbbb
mov
jne
aam
add
ja
fstpl
paddsb
pop
mov
adc
test
sub
test
inc
add
mov
sahf
mov
arpl
lahf
mov
push
cs
xor
push
jno
push
nop
test
jbe
mov
aad
dec
and
jp
fiadds
adc
jae
mov
loopne
scas
js
add
scas
adc
push
cmpsb
or
stos
push
pop
sbb
lods
cli
outsl
cmp
add
bound
lret
repnz
pop
pop
imul
pop
inc
or
pop
imul
aad
or
push
imul
mov
dec
push
jg
adc
pop
cmc
mov
rolb
xchg
stos
and
or
adc
fxam
ds
xor
cmc
data16
adc
push
dec
mov
mov
mov
lcall
cld
cld
in
jo
in
int3
pop
out
call
pop
cmp
call
call
mov
mov
cmp
xchg
loop
push
int3
in
ja
cs
in
fcomi
inc
addr16
dec
mov
xor
xor
lea
mov
jl
mov
or
dec
mov
andl
pop
ljmp
lock
mulb
sub
ss
fmul
icebp
sbb
ja
push
mov
lods
xchg
push
xchg
out
jb
sub
mov
in
popa
xchg
mov
and
leave
push
pop
mov
sub
cli
int3
rorb
cmp
xor
push
rol
push
pop
int
shrl
push
jae
repnz
paddd
jae
insb
icebp
jmp
or
push
push
cmp
aad
movsl
scas
xor
movl
xchg
ret
fnstcw
rorl
sub
nop
xor
pop
aaa
loope
pop
call
subb
insb
mov
jbe
mov
sub
dec
cld
xchg
or
fwait
das
fabs
out
aaa
pusha
sbb
js
cmp
fiadds
add
rclb
ljmp
jbe
dec
out
mov
scas
iret
outsl
mov
enter
std
int
cwtl
sub
test
sahf
mulb
jae
out
pop
cmc
fcmove
jb
fwait
dec
test
negb
subl
jne
xchg
cmp
and
xchg
dec
hlt
mov
xlat
push
fnsave
cmp
sbb
mov
test
lret
jle
ljmp
add
gs
cmp
xor
push
scas
mov
fistpll
sub
mov
lea
and
sub
outsb
or
mov
es
cmp
xor
imul
inc
cmc
in
sub
ja
jbe
sbb
fsubl
inc
mov
cmpb
in
pop
xchg
cli
popa
repnz
lret
loope
jo
sarl
mov
xchg
sahf
scas
jle
shlb
loope
out
mov
pop
lsl
out
lock
jns
jl
jl
push
inc
cmp
add
pop
daa
fucomi
xlat
loope
jmp
push
loope
rep
pop
sarb
xchg
ds
leave
push
jmp
mov
mov
xchg
lea
jne
push
add
mov
cmpsl
shrl
faddl
sbb
fdiv
mov
lods
push
loopne
jne
int3
fbld
add
pop
out
fmuls
adc
imul
jl
pop
scas
andb
into
ret
shlb
lds
popa
shrb
add
mov
cmp
jbe
das
cld
clc
jo
adc
sahf
cmp
adc
push
pusha
inc
jo
or
aam
push
out
stc
fsubrl
leave
dec
out
aam
hlt
dec
ret
sbb
out
lods
xor
lock
xchg
or
push
test
aam
aaa
xchg
movb
out
sbb
jge
fnsave
sbb
into
fs
test
test
add
pop
inc
rcrl
jge
lahf
pop
add
inc
rcll
push
rclb
cmpsb
xor
data16
out
out
imul
test
and
in
ja
mov
adc
mov
ds
scas
arpl
insl
repnz
int
jmp
xchg
mov
in
pop
mov
scas
in
dec
and
adc
push
sarl
push
sub
fistps
inc
sub
rol
and
inc
das
ficompl
shr
sbb
sub
loop
xorb
sbb
imul
mov
idivl
sbb
test
popa
sbb
mov
ret
cwtl
test
or
cltd
rcll
mov
and
lret
aaa
fcmovnb
push
fildll
and
sahf
adc
push
cmc
and
cli
pop
xchg
enter
lods
mov
xchg
repnz
mov
sbb
ds
hlt
xchg
lahf
rol
not
dec
enter
sahf
mov
mov
jmp
dec
insb
dec
inc
mov
lcall
push
push
into
sbb
pusha
daa
mov
loopne
pop
adcl
cltd
call
pop
jnp
arpl
filds
loope
jl
dec
faddp
iret
pop
mov
dec
imul
inc
ja
outsl
xor
xchg
and
xchg
or
dec
iret
pop
ja
and
sbb
add
cli
loope
out
or
or
cmp
dec
test
daa
push
mov
xchg
ret
in
clc
lock
cmp
dec
push
mov
pop
bound
dec
movsl
add
push
rclb
or
inc
mov
jnp
in
out
mov
cmpsl
jl
push
pop
lods
scas
fadd
adc
fimull
push
sub
lods
inc
sbb
rcrl
outsb
sub
stc
loopne
pop
imul
jns
leave
lahf
fdivrp
xchg
cmpsl
mov
pop
ja
sbb
add
adc
or
mov
cmpsl
std
cmp
cwtl
ljmp
in
fistpll
fdivrs
imul
jae
push
nop
into
push
mov
sbb
sbb
mov
cmp
les
xor
push
imul
sbb
push
mov
dec
js
push
lds
test
lcall
push
pusha
mov
stc
dec
xchg
enter
cmp
sahf
or
cmpb
jae
shl
cmp
aad
jmp
dec
out
fistl
std
inc
cld
jle
orb
test
fs
push
jo
adc
mov
fidivrs
outsb
ret
cmp
cmc
in
movsb
dec
into
xchg
rorl
imul
sub
xchg
xlat
inc
xchg
leave
cmc
fimull
xor
dec
ret
int
mov
sub
mov
test
and
mov
stos
bound
adc
dec
test
mov
add
ja
dec
sbb
andb
dec
jae
xor
arpl
cltd
xchg
sub
inc
arpl
pop
sahf
test
push
lods
sub
sbb
xchg
es
cmp
cli
push
cmp
addl
mov
dec
pop
pop
mov
imul
inc
pop
call
aad
xchg
test
inc
sbb
pop
cmp
adc
test
imul
loopne
cmp
xor
pop
and
inc
rcll
imul
leave
mov
into
and
mov
movsl
insb
mov
add
pushf
jle
add
lock
pop
fcoms
xchg
fsubr
incb
add
xchg
sub
push
clc
nop
mov
pop
xchg
movsb
addr16
cmpsb
jecxz
in
jne
push
stos
and
add
test
xchg
inc
or
ret
test
push
lods
jge
inc
mov
dec
jg
jae
iret
ja
jp
xchg
pusha
xchg
dec
orb
jge
lret
lahf
lock
jmp
lods
jae
pop
xor
sarl
stos
push
xorb
xchg
sbb
and
rclb
ljmp
xchg
daa
mov
jnp
aam
in
adc
ja
loop
loopne
add
sti
movsb
mov
insb
add
mov
mov
pop
pandn
jecxz
mov
out
mov
scas
shr
cmp
mov
adc
mov
push
jne
mov
jg
in
mov
sti
cmp
mov
lock
in
inc
and
sbb
sbb
and
sti
aaa
fwait
ret
movsl
fcmovne
inc
decb
test
pop
and
pop
jl
and
rolb
dec
clc
sbb
add
cmc
lahf
mov
sbb
mov
outsb
jo
jp
imul
andb
push
mov
aam
outsb
xlat
pop
iret
mov
mov
pop
adc
enter
push
ficoml
xchg
dec
cmc
movsl
jbe
mov
jmp
pop
push
div
adc
arpl
push
xchg
aas
and
add
ss
cs
insl
push
cmp
pop
out
xchg
adcl
and
and
xchg
add
lea
or
outsb
adc
pusha
push
jle
out
das
sbb
or
sti
loope
lods
add
xchg
fucompp
str
sbb
sub
add
lahf
test
icebp
pop
push
addr16
and
int
pushf
inc
add
inc
mov
inc
add
subb
arpl
pushf
test
or
in
std
push
inc
inc
insl
sub
and
jp
aad
mov
int3
cmp
push
sub
out
cmp
pusha
aad
hlt
adc
loopne
or
scas
mov
or
ret
sbb
cwtl
mov
in
loope
mov
test
loopne
xchg
jmp
mov
sub
pusha
leave
aad
daa
mov
or
fisttps
in
test
mov
pop
stos
test
or
dec
sbb
pcmpeqw
outsb
xor
mov
xchg
cmpb
faddl
or
ja
loop
std
dec
fwait
out
sub
lcall
in
cltd
lret
jns
ss
leave
iret
cmp
movsl
xor
push
and
and
push
out
or
divb
cmp
cmp
mov
and
jle
mov
js
outsl
enter
fistps
sub
stos
lds
cmc
js
add
test
xlat
test
ret
lds
push
adc
mov
jle
out
in
adc
pop
or
mov
jecxz
stos
ja
sbb
roll
inc
test
negl
repz
into
arpl
xor
test
stos
scas
mov
pop
push
je
pop
or
sub
ds
lock
ficoms
imul
les
sbb
imul
js
pop
imul
mov
outsl
mov
add
jg
xor
shlb
into
imul
dec
fs
or
rcrb
sbb
mov
fimuls
mov
out
pop
mov
out
mov
mov
les
mov
push
leave
or
cmp
and
adc
loopne
jle
pushf
adc
cmp
adc
insl
add
mov
sbb
movsl
cmp
mov
and
jp
fistl
es
dec
mov
fidivs
add
cmc
mov
push
inc
and
sub
mov
leave
xor
imulb
sti
enter
cmp
or
mov
push
push
inc
fcompl
leave
mov
es
mov
add
fstpt
std
cmpsl
inc
pop
mov
mov
sub
lods
test
aam
or
push
push
fidivrl
cmp
xchg
cmp
cli
jnp
mov
add
push
rclb
out
imul
dec
mov
jg
fcmovnb
movsl
in
push
int
repz
popa
insl
sarb
dec
xor
js
jae
pop
xor
sbb
push
je
push
push
mov
xor
arpl
or
sub
push
ret
imul
fdivr
mov
sbb
fbld
xor
test
inc
cmpsb
xchg
idiv
sahf
sub
push
or
lea
or
push
es
and
fnstsw
sbb
mov
pop
xor
subb
jae
xchg
xchg
jp
or
push
in
jle
lods
mov
xlat
arpl
push
or
push
ss
mov
es
cli
aam
aaa
cmp
inc
aaa
pop
or
cmpsb
sub
lea
push
add
or
sbb
das
inc
jl
jbe
subl
cltd
cld
inc
roll
hlt
mov
in
jnp
incl
xor
inc
pop
xchg
pop
je
xchg
loop
into
push
mov
std
fwait
lahf
cmp
pop
insb
or
cmp
fidivs
std
and
mov
sub
sahf
add
insb
lods
cmc
icebp
push
jns
sub
out
jb
int
mov
xor
ret
in
pop
addr16
scas
fisttps
lahf
imul
je
xchg
je
sarl
xchg
push
shll
outsb
sub
cmpb
hlt
pushf
mov
scas
cwtl
nop
aam
mov
or
xchg
pop
ret
inc
scas
xchg
into
out
test
jg
in
xchg
dec
les
inc
add
or
call
lret
setns
push
int
in
xchg
aas
sahf
add
xor
push
cmp
enter
mov
xor
outsb
mov
pop
inc
mov
iret
mov
pop
lea
pop
inc
pop
xor
xor
imul
cmp
mov
cmp
push
fstps
out
jmp
mov
leave
mov
cmp
push
cmc
rcrb
cmp
enter
incl
cltd
arpl
jne
fisubl
bound
mov
in
cmp
cli
xor
gs
mov
stc
xchg
mov
mov
fadds
mov
imull
aam
negb
daa
mov
push
jle
movsl
adc
push
pushf
fiadds
sub
out
fs
icebp
mov
inc
inc
dec
and
or
outsb
repz
xor
mov
jle
dec
js
xlat
shll
cmp
mov
adc
mov
fwait
aas
and
mov
or
dec
fisttpll
dec
adc
mov
movsl
add
ja
mov
dec
add
xchg
insb
popa
xchg
repnz
cmp
and
loope
pushf
jo
mov
arpl
out
push
movsb
sbb
inc
push
repnz
ja
pop
fs
out
loope
lds
cmpsb
xchg
fsubr
stos
aam
dec
es
dec
stos
int
mov
push
outsb
push
mov
sub
xor
jo
pushf
mov
pop
cmpsl
outsb
ja
cmp
mov
insl
daa
xchg
inc
ds
arpl
out
jbe
je
mov
addr16
mov
mov
stos
inc
add
mov
repz
ljmp
pushf
sub
xor
inc
dec
sub
iret
hlt
fs
mov
fildll
sub
jmp
sti
ss
test
push
add
dec
je
dec
std
mov
and
adc
cli
adc
sbb
add
into
adcl
dec
push
mov
data16
ret
inc
sahf
out
mov
cwtl
in
jns
sbb
inc
mov
push
cmp
imul
mov
fdivrl
mov
inc
popa
push
popa
mov
xchg
jl
popf
and
add
cmp
cmp
lock
loope
xor
jecxz
adc
xchg
push
xchg
stc
cmp
and
lock
sti
iret
sub
addb
in
ret
lods
out
loop
insb
icebp
int3
movsl
mov
dec
faddl
ret
cmc
mov
jb
in
push
lahf
add
sub
repnz
lcall
nop
loope
adc
mov
in
outsb
ja
sbb
sub
jmp
cmp
in
push
fstpl
xchg
loop
mov
cmpsl
stc
mov
cmp
movsb
mov
sbb
idivl
dec
cwtl
push
fistpll
sbb
daa
imul
xor
in
lock
or
and
out
mov
mov
lret
mov
sbb
dec
scas
out
cmc
call
mov
inc
and
xchg
xchg
loop
mov
sbb
pop
mov
sbb
push
lcall
mov
in
sub
sub
movsb
scas
outsl
fdivr
lock
pop
or
jae
test
es
add
and
aam
lock
mov
push
inc
add
rolb
fwait
inc
xchg
mov
adc
mov
push
test
push
fisttpll
mov
xchg
fisubl
cli
jo
mov
sub
jbe
int3
cmp
std
adc
int
aas
mov
inc
and
jecxz
test
movsb
jge
fs
das
lfs
lods
aas
orl
mov
mov
inc
jae
insl
xor
leave
xchg
or
xchg
sar
inc
and
xor
xchg
pop
insb
jle
xchg
sub
loope
orl
jb
jle
inc
xor
xchg
adc
sub
add
mov
cmp
fildl
dec
xor
mov
xor
out
or
mov
movsl
lds
ds
mov
and
xchg
push
add
clc
test
popf
sbb
cmpsb
mov
push
pop
fsts
fisubl
adc
and
mov
mov
dec
lret
cltd
mov
push
push
xchg
mov
outsl
sbb
popl
inc
popf
inc
repz
pop
sub
xor
mov
cmp
xorl
xlat
das
sub
add
pushf
movsb
lahf
xchg
imul
pop
mov
lods
sbb
and
negb
sbb
notl
pop
push
in
jge
pop
xchg
in
jb
mov
enter
bound
sbb
lods
int3
sbb
xchg
mov
lret
mov
jb
mov
popf
pop
push
mov
mov
dec
loope
push
cli
cmpsb
je
cmp
jg
out
adc
jmp
and
push
pop
iret
fsts
push
push
jp
in
add
movsb
repnz
jmp
insl
fdivrs
xor
call
xlat
out
push
lea
popa
sub
nop
mov
test
ljmp
out
inc
xor
sub
mov
imul
or
inc
jp
xor
xor
jle
leave
loop
cmc
sbb
xchg
jns
imul
aam
jne
hlt
lret
das
lcall
xchg
cltd
outsb
xchg
xchg
dec
sbb
icebp
xorb
aam
cmp
idivb
mov
mov
cmpsl
test
push
mov
adc
clc
out
arpl
mov
pop
push
mov
pop
jne
loopne
xor
cmp
xor
es
pop
mov
xor
add
aas
jl
cmc
sub
cmp
jne
movsl
push
repnz
mov
ja
hlt
stos
clc
xor
mov
insb
add
xchg
sub
popa
sub
push
pop
out
into
dec
stos
fsubrs
lods
pop
fwait
outsl
ljmp
cmp
mov
loope
in
std
pop
jge
mov
jl
jle
test
cmp
and
jle
add
clc
jge
repz
jg
hlt
cs
in
lahf
lea
imul
inc
push
sub
push
dec
cmp
dec
sbb
push
xchg
xchg
push
cs
or
xchg
sub
nop
push
cmp
add
fsubrs
dec
xchg
jns
sbb
testl
pop
sub
push
jg
push
clc
mov
cs
ds
pop
push
outsb
sub
sbb
cs
xchg
stc
mov
cwtl
loopne
cmp
sbb
stc
addl
inc
aam
push
xchg
lret
dec
rep
dec
int3
and
leave
cli
ret
jbe
and
bound
outsl
xchg
xchg
std
xchg
sbb
sbb
mov
inc
dec
inc
add
sarb
test
or
inc
into
cmp
mov
add
outsb
cmp
fsubs
lea
dec
dec
daa
fcompl
mov
in
lock
add
sub
in
mov
cmp
pusha
mov
push
lret
inc
or
jl
jo
sarl
out
cmp
and
mov
in
or
xchg
pop
dec
inc
xchg
push
or
sub
lock
and
and
icebp
lcall
divl
lds
push
jb
and
sub
fs
push
dec
imulb
pop
fimull
je
jae
leave
mov
mov
pushf
cmp
dec
dec
lret
jle
inc
outsb
pop
inc
dec
push
scas
lcall
inc
addr16
push
dec
cmpb
cmp
mov
lcall
add
nop
cld
sub
jl
pop
ss
jge
dec
jp
add
mov
sbb
ficoms
fisubl
mov
xchg
pop
das
push
xchg
cmp
jl
mov
into
test
add
loop
mov
and
inc
or
pop
ret
cmpsb
stos
aad
jne
inc
or
cmp
jbe
mov
jno
mov
cmp
mov
xorl
mov
mov
sbb
mov
test
dec
clc
outsb
and
out
shll
jg
sarb
sub
jp
out
ds
movsl
mov
pop
fadd
add
and
lret
jnp
pop
rorb
push
inc
into
movsl
clc
jge
cmpsb
jb
cmp
add
fwait
pushf
and
movsl
icebp
pushf
xchg
rcll
shr
js
inc
mov
and
xlat
lds
fsub
mov
pop
test
out
stc
sub
ret
xor
sub
mov
stos
es
hlt
cltd
data16
mov
adc
cmp
pop
cwtl
jg
mov
cmpsb
lods
sarl
loopne
mov
stc
outsl
inc
outsl
mov
xor
mov
stos
test
xor
outsb
jae
rcll
cli
sbb
xor
sub
sbb
sbb
data16
jmp
scas
stos
sub
mov
push
xchg
jle
xor
call
mov
out
pop
rcrb
sbbl
sub
aaa
nop
test
jb
lcall
test
int3
push
cmp
pusha
adc
in
add
adc
aas
aaa
data16
sub
and
stos
or
leave
ficompl
nop
mov
pop
movsb
pop
or
stos
xchg
xchg
dec
das
inc
mov
pop
xchg
add
sub
jae
shll
imul
push
xchg
jo
lahf
enter
push
leave
ds
mov
aad
xchg
ret
xor
cltd
push
cmp
sub
lcall
pop
xchg
js
add
sub
xchg
fstpt
xor
pop
mov
les
cmp
dec
lret
je
mov
or
filds
inc
jecxz
xchg
lea
adc
pusha
or
cmpb
sub
pop
call
je
sbb
ss
daa
loopne
sub
out
cmp
or
lret
sub
hlt
push
loope
es
insb
popf
and
cld
js
aad
repz
dec
push
lret
inc
leave
push
je
das
lea
push
flds
gs
insb
adc
mov
hlt
ret
cli
les
sbb
mov
inc
gs
sub
dec
pop
mov
dec
lods
stc
mov
mov
std
cmpsb
test
dec
sbb
xchg
cmp
cmc
mov
dec
mov
pusha
fs
std
nop
mov
jb
icebp
loope
adc
xchg
mov
ja
mov
aaa
mov
cmp
sbb
test
in
xchg
mov
xchg
dec
xor
push
mov
mov
mov
dec
mov
cmp
inc
cmp
in
bound
inc
jmp
jge
icebp
out
cmp
in
call
incb
dec
in
xchg
cmp
mov
imul
lods
adcb
out
inc
lea
jb
pop
cmp
sub
lahf
jl
push
js
push
test
stos
pop
pop
adc
xlat
sahf
xor
push
push
shl
jnp
push
xchg
and
cld
sbb
cwtl
pop
stos
sub
pop
iret
pushf
dec
js
enter
icebp
rcrl
cmpsb
in
insb
push
jl
sahf
dec
jmp
lds
add
xor
mov
in
jno
aad
pop
ds
xor
jae
cwtl
aaa
cld
out
sbb
mov
sbb
aas
stc
dec
lret
jg
cltd
add
inc
jb
fildl
add
jbe
mov
xchg
push
xor
repnz
inc
push
sti
loope
popf
lret
sbb
mov
ror
iret
dec
js
fildl
jl
dec
cmp
or
mov
pusha
mov
in
int3
cli
les
je
pop
cmpsb
mov
pop
fsubs
loopne
lret
push
stc
jg
movsb
mov
pop
sbb
stos
aam
sbb
mov
dec
sbb
sub
jmp
push
ret
push
dec
sub
push
fucomi
xor
repz
pop
push
add
inc
aad
unpcklps
add
mov
sbb
pop
and
and
cld
and
pusha
add
incl
add
mov
xor
dec
mov
cs
mov
loope
pop
sub
xchg
bound
sub
out
or
ljmp
adc
or
hlt
xchg
test
pop
cmp
pop
pop
or
popl
hlt
add
sub
ss
inc
loope
mov
ljmp
lret
mov
jb
xor
lock
jne
or
sub
dec
int
in
jo
mov
jg
cld
in
out
inc
mov
lods
cmpsb
loopne
adc
xchg
fdivs
cs
mov
arpl
and
in
add
sbb
jp
in
in
inc
xchg
add
lods
push
arpl
and
repz
inc
dec
sti
mov
clc
sub
fsts
xchg
loop
divl
push
ds
movb
fidivrl
xor
lods
pop
pusha
pushf
sub
xor
adc
xchg
test
inc
cmp
xchg
push
inc
add
movsl
and
sarl
out
push
int3
sbb
daa
pop
daa
mov
in
mov
xchg
cmp
pop
sub
daa
testb
dec
fisttpll
ljmp
cmc
mov
adc
mov
les
loope
dec
loope
pop
les
adc
movsb
or
add
imul
hlt
movsb
fsubl
mov
cli
fidivl
jae
and
ficoms
das
xchg
movsb
incl
andl
lock
sbb
ret
pop
xor
movsb
xchg
clc
mov
inc
xor
push
inc
std
das
push
lods
out
mov
xchg
cmp
inc
sarl
or
mov
cmp
pop
mov
push
jge
dec
xor
mov
or
pusha
roll
popf
mov
out
mov
xchg
js
insl
rcr
pop
dec
jne
aaa
ret
sub
cli
jle
push
repz
mov
mov
sbb
test
sub
mov
subb
mov
pop
push
mov
mov
or
lahf
arpl
stos
xchg
xor
dec
push
inc
lds
cmpsl
sbb
cmp
inc
mov
dec
jl
jmp
in
inc
xchg
xchg
or
adc
and
inc
mov
sbb
adc
xchg
inc
lahf
xchg
pushf
ret
jb
imul
push
das
fldcw
adc
cmpsb
mov
push
enter
and
ret
es
leave
sub
mov
jecxz
rclb
addb
cwtl
xchg
sarb
jbe
sbb
cmp
inc
rcll
call
pop
push
test
repnz
in
rcrb
adcl
lods
pop
fs
cwtl
ror
sbb
sub
mov
aam
repz
sbb
xor
push
cltd
stos
cmpsl
adc
adc
mov
test
fwait
lcall
fcompl
add
pop
movsl
fs
test
rcll
in
inc
rcll
xchg
mov
enter
rcr
mov
popa
xor
add
int3
dec
and
out
clc
cmpsb
pop
jbe
insl
mov
pop
addb
int
gs
push
in
adc
and
jecxz
out
popf
sub
fbld
jb
loopne
sbb
out
push
inc
push
cmp
or
xchg
adc
jge
mov
lods
inc
pop
push
mov
frstor
loopne
dec
jno
sbb
push
mov
add
pop
push
sub
sti
cmp
outsl
inc
push
and
sub
mov
testb
xor
ljmp
adc
xchg
call
arpl
daa
push
xchg
test
xchg
xor
andl
mov
adc
lods
inc
imul
dec
dec
sbb
dec
xor
jle
cmp
push
xor
xchg
mov
in
mov
push
adc
and
dec
pop
mov
loop
mov
push
or
inc
mov
in
jne
popa
push
jae
stc
push
pushf
sbb
xor
jo
xor
out
cmp
adc
lret
out
lea
jle
cli
push
dec
in
out
jae
arpl
sub
jne
push
int
loopne
mov
call
inc
push
arpl
push
jl
push
out
and
stos
sub
xchg
inc
jns
dec
std
sbb
fdivp
rorb
xchg
and
iret
rcrl
xchg
inc
mov
pop
sahf
adc
mov
movsb
lods
or
sysexit
scas
push
pop
inc
notb
es
jg
inc
imul
sbb
inc
pop
mov
pop
js
add
push
bound
pop
lahf
pop
aaa
sub
inc
iret
xchg
in
sub
xchg
mov
cltd
outsb
adc
inc
into
dec
repnz
ds
lcall
jg
pop
and
or
add
aad
sbb
jmp
jge
and
adc
enter
aad
lahf
jnp
shrl
mov
mov
in
add
jl
or
insl
xchg
sub
jp
push
xchg
imul
dec
push
nop
sub
mov
js
and
xlat
scas
add
dec
xor
clc
mov
jg
xor
pop
xchg
into
shl
int
icebp
fcmovnu
jno
pop
fnstsw
jne
lret
loop
inc
into
mov
insb
test
call
cltd
out
frstor
pop
addr16
mov
pop
jecxz
xchg
adc
fstpl
mov
fwait
cltd
pop
jae
sub
cmc
xor
test
test
sahf
mov
popf
push
and
mov
or
fs
ret
xor
call
sbb
jmp
daa
shrb
sbb
inc
jecxz
cld
call
mov
aam
cmpsl
or
inc
cli
int
jmp
mov
cwtl
lods
pop
movq
mov
out
aam
xor
enter
rorl
inc
std
mov
mov
jb
call
add
sub
cmp
lods
test
inc
xor
in
cltd
cmp
pop
loop
cs
xchg
ljmp
pop
sub
pop
sub
popa
loopne
cmc
std
das
mov
cmc
push
mov
icebp
jo
push
lock
pusha
lods
sbb
call
out
test
testb
mov
movb
mov
add
out
nop
jge,pt
aad
sbb
xor
test
movsb
jg
fisttpl
lock
sbb
mov
fcomps
cmp
pusha
loop
inc
cmp
enter
or
pusha
imull
adc
fwait
mov
jb
sti
dec
sub
mov
adc
pop
cmpsl
adc
lahf
or
sub
add
cmp
sarb
in
loopne
out
insl
cltd
pop
scas
mov
fdivs
jl
push
ss
mov
sbb
jb
insl
xchg
imull
loope
add
std
aad
push
or
repnz
xchg
pop
loopne
or
cmp
cmc
jl
ljmp
cltd
clc
popf
jl
sbb
push
aad
mov
ds
pop
movsb
dec
test
mov
repnz
lcall
shrl
pandn
pop
jae
outsl
rcrl
int3
imul
jbe
movsb
mov
mov
pusha
cs
xor
dec
ficompl
xor
sbb
sbb
andl
addl
fwait
dec
pop
pop
lock
mov
push
inc
out
fcmovnu
cli
xchg
xchg
insl
out
test
inc
xchg
nop
stc
pop
or
rolb
adc
icebp
mov
adc
xor
movsb
outsb
adc
pop
cwtl
stos
mov
mov
cs
jno
inc
enter
das
xchg
ss
or
mov
inc
in
aam
clc
aaa
jne
ficomps
mov
push
or
bound
jmp
test
outsb
hlt
mov
push
jbe
inc
test
xchg
out
outsb
xor
shlb
or
cs
push
ja
mov
mov
sti
and
fsincos
pop
insl
sub
lods
cmc
std
xchg
fisttpl
imul
nop
ljmp
jle
xor
mov
arpl
sub
xchg
inc
mov
outsb
imul
arpl
adc
fwait
imul
jns
add
fwait
mov
popf
push
and
push
int
stc
sub
adc
call
test
cld
sti
stos
ja
sub
pushf
ficomps
sub
aad
scas
xchg
push
outsb
inc
and
arpl
mov
xchg
ljmp
mov
cmp
loop
adc
lods
xchg
arpl
jo
dec
dec
stc
out
imul
sub
mov
int
fiadds
inc
dec
sbb
or
pop
pop
sbb
mov
push
fdivrs
jo
mov
icebp
data16
cmp
cld
orb
fsubrp
jmp
mov
in
hlt
push
fdivs
fsubr
into
iret
adc
les
mov
fcomps
and
sarl
fcoms
gs
mov
sbb
or
push
push
jg
or
or
movsb
cli
es
jge
es
sub
js
pop
jp
cmp
inc
jecxz
in
popl
es
fstpl
imul
or
test
mov
cmp
pop
sub
mov
xchg
movsl
dec
xchg
sub
mov
sahf
jbe
push
out
inc
pop
addr16
stc
mov
sti
push
xor
xor
add
daa
jl
scas
addr16
jmp
clc
mov
icebp
mov
andl
sarl
push
cltd
out
jp
cltd
fisubs
shrl
cmp
sti
aam
xor
call
inc
fdivrp
orb
je
add
and
push
dec
fistl
test
adc
pusha
push
stos
pop
int3
cmc
xchg
cwtl
and
inc
test
jne
loopne
cmp
pushf
adc
mov
mov
fisubrl
jg
cmpsb
hlt
icebp
sub
cmp
mov
in
loopne
in
dec
jle
fldl
xor
jno
arpl
fildll
mov
scas
pop
out
jle
js
sub
addb
out
nop
icebp
inc
sub
stc
fimull
adc
ret
inc
push
pop
ss
fnstenv
sti
adc
cmp
fs
sahf
call
faddp
andb
inc
mov
pop
inc
fdivl
inc
xchg
imul
lods
ja
xchg
dec
fnstsw
and
stos
jnp
test
or
push
fwait
dec
xor
in
inc
pop
push
fidivrs
xor
jge
loop
sbb
shll
loope
and
add
fstpt
add
sbb
mov
fiaddl
mov
xchg
add
sti
xchg
xor
call
push
pop
nop
jle
jbe
and
insb
sub
mov
sbb
mov
xlat
loope
call
or
dec
lret
and
aad
xor
ret
and
push
cmp
cld
jo
sbb
add
std
xor
push
test
jbe
loop
jmp
aad
push
cmp
adc
repz
outsb
xor
sub
push
pushf
xchg
pop
stc
sbb
push
movsl
xchg
movsl
cmp
dec
ljmp
cwtl
pop
std
imul
and
jne
loopne
inc
fs
dec
mov
or
into
or
fdivs
jb
lret
movl
sahf
cmp
popf
mov
or
leave
cmp
stos
dec
push
jl
sahf
adc
lds
jo
shlb
movsl
popf
lock
addr16
icebp
shl
fxch
pop
mov
negb
pop
pop
movsl
sub
into
lret
mov
sbb
stos
xchg
jae
or
xor
jecxz
repz
rorl
gs
loope
push
in
dec
decb
rcll
outsl
test
test
fwait
and
mov
pop
push
popa
les
and
sbb
loope
mov
rclb
mov
out
icebp
cmp
sub
out
in
cld
rcl
fisttps
mov
mov
add
xor
int3
mov
vunpcklpd
ret
mov
mov
sbb
dec
mov
sbb
jge
hlt
insb
push
pop
pop
or
lods
cmpsl
addl
jnp
je
sbb
sub
mov
pop
std
and
pop
ss
popa
adc
dec
push
push
mov
pop
mov
xchg
fistps
sbb
dec
lcall
popf
out
sbb
xchg
add
lcall
js
and
push
push
int3
xchg
mov
cwtl
insl
lret
imul
mov
sahf
cmp
dec
push
mov
sbb
mov
pop
lods
or
push
mov
mov
outsb
jne
pop
cs
js
sahf
scas
mov
sub
adc
push
cmpsl
fst
pop
inc
into
lods
lcall
movsl
mov
or
les
push
push
ja
push
outsl
pop
stc
cmp
std
cmpsb
mov
and
sbb
imul
in
loop
aas
xor
daa
push
insl
jmp
inc
inc
sbb
daa
jb
stos
push
xchg
push
inc
fisttpl
inc
dec
push
int3
lods
aam
test
sbb
sub
or
add
rcrl
cld
xchg
xchg
mov
mov
cwtl
shrl
cmpsl
pop
cmp
cmp
repnz
pop
xor
add
ja
cmp
ror
cmp
or
mov
xor
add
mov
pop
pop
mov
pushl
mov
ja
lahf
pop
xchg
subl
lcall
mov
sbb
rcrb
sub
jo
sti
faddp
add
hlt
in
shrb
insl
pop
clc
test
iret
leave
sub
mov
pop
insl
and
mov
mov
mov
ret
ret
mov
sbb
into
add
jmp
das
test
in
dec
add
mov
jnp
sbbb
jae
std
push
sbb
ffreep
sti
xchg
rcrb
mov
mov
mov
lahf
pminsw
clc
testl
and
push
dec
pop
repz
jne
sbb
dec
push
jl
inc
sbbb
or
jb
mov
cmp
and
xor
jae
ljmp
js
dec
xchg
je
add
clc
jb
flds
test
jl
adc
mov
jge
mov
mov
add
subl
mov
jge
inc
inc
sub
jge
xchg
sbb
push
or
sbb
cmp
inc
je
das
add
pop
jecxz
mov
jp
xchg
aas
adc
pop
jp
push
scas
scas
fwait
js
subl
adc
sub
inc
lahf
les
push
or
sub
xor
mov
ja
push
mov
popa
les
outsl
stc
push
mov
cmpb
js
xchg
jge
cmp
shlb
sub
xor
js
aad
aaa
movsl
cmp
lret
fbld
sub
push
inc
sarl
es
xchg
fcompp
and
mov
in
push
and
or
mov
and
rolb
jns
fbld
data16
or
jecxz
mov
ss
inc
adc
or
cmp
mov
jns
push
xlat
jae
jb
les
ljmp
sub
in
lahf
andl
in
lods
dec
fwait
add
inc
xchg
pop
out
movsl
push
jbe
push
ficompl
js
js
cmc
cmp
mov
rorb
lods
or
fs
pop
stos
mov
ja
std
cmp
mov
mov
inc
cmp
movsl
loope
sub
pop
mov
jge
leave
enter
pop
das
jecxz
lods
cmp
sub
mov
test
mov
stc
ret
mov
movsb
and
mov
cmp
xor
or
lods
data16
mov
bnd
or
jno
mov
pusha
cmpsb
outsb
push
adc
mov
jecxz
popl
dec
adc
stc
lods
or
arpl
xchg
stc
xor
add
xchg
fmull
add
outsl
aaa
cli
mov
fidivs
mov
mov
xor
lea
dec
jo
fmull
dec
dec
sub
hlt
or
icebp
mov
pop
or
xor
data16
addb
jns
or
popf
sub
cld
fistpll
ret
mov
into
and
push
mov
xor
ss
mov
in
int3
xchg
and
ss
jne
jb
ret
hlt
xchg
pop
or
push
les
push
cld
repnz
xchg
dec
lock
cmp
stos
movsl
sub
add
cltd
aaa
mov
outsb
mov
nop
gs
mov
aad
jbe
fwait
sub
andl
xor
jne
lds
outsb
in
aaa
and
jb
adc
test
jl
out
inc
dec
and
test
fistpl
in
push
ja
xchg
popf
imul
xchg
imul
lahf
rclb
sub
sub
test
xchg
push
sub
mov
inc
mov
data16
xorb
lods
sbb
popf
dec
mov
adc
pop
fnstenv
mov
dec
shlb
jge
fs
pop
stc
mov
test
xchg
cmp
jbe
jb
data16
inc
inc
push
icebp
jnp
aas
push
lret
fidivl
cmp
mov
stos
ss
lret
inc
mov
mov
pop
xor
push
jne
jnp
stc
and
add
andb
xlat
pop
inc
movsl
mov
push
loope
mov
cmp
cmp
adc
jmp
std
lock
test
shll
mov
sbb
lcall
add
mov
pop
imul
cmp
xchg
adc
dec
scas
jge
jb
mov
sbb
in
add
int
xchg
in
insl
mov
stos
sbb
push
mov
outsl
mov
rcll
int
push
ret
pushf
cmp
mov
outsb
mov
and
dec
test
test
jnp
add
and
sub
xor
mov
into
jg
jle
cmp
es
idivl
jo
movb
dec
mov
jmp
in
fimuls
push
mov
fsubp
push
cltd
daa
adc
std
into
out
std
push
jl
dec
repnz
cli
aaa
xchg
jecxz
mov
and
sbb
pop
pop
idiv
lret
fcom
xchg
push
clc
clc
test
sahf
push
sbb
lods
mov
pop
rorb
mov
in
cld
push
in
mov
insb
popf
in
push
sbb
arpl
cvtpi2ps
test
movsl
bound
mov
adc
jns
xchg
mov
add
jne
or
div
repz
adc
push
lock
mov
sub
icebp
or
imul
shll
cmpsl
and
mov
or
fcomps
jg
fsubr
cld
mov
or
pop
inc
cli
in
incb
cmp
jne
lret
in
and
push
cld
aad
adc
test
jno
xchg
ja
xchg
or
sbb
sar
lds
in
lods
sbb
jae
movsl
js
and
push
imulb
cmp
sub
or
out
nop
int
fs
fdivs
adc
xchg
mov
not
pop
mov
sbb
popa
xchg
sbb
add
popw
sbb
mov
lods
mov
out
push
jp
inc
insb
mov
subl
pushf
lods
stos
subb
nop
imul
sub
jle
addb
fwait
and
ja
outsb
cmp
popa
stos
cmp
jg
int3
outsl
cltd
or
in
mov
nop
lret
cmpsl
push
dec
push
pop
xor
and
push
sbb
scas
mov
cmp
mov
mov
insl
movsb
stc
fimuls
scas
pop
mov
mov
and
out
add
jbe
sub
in
sub
adc
inc
aaa
push
push
or
ljmp
testl
call
jp
leave
mov
mov
jecxz
test
xor
pop
sbb
xorb
jae
js
or
clc
ret
aad
ds
sahf
inc
dec
je
jnp
mov
jo
scas
dec
sub
cmp
stos
xchg
push
mov
test
mov
add
cltd
popf
cmpb
cmc
jb
mov
data16
call
push
stos
and
test
sahf
ja
inc
ljmp
add
pop
fld
in
add
repnz
lods
mov
mov
adc
in
adc
jg
bound
xchg
fsubrl
sbb
gs
sahf
stos
icebp
nop
andb
aad
mov
pop
jmp
push
cmp
jp
pop
les
fs
mov
outsb
shrb
push
insl
add
loop
push
push
int
ljmp
adc
pop
and
lret
jne
xchg
insb
dec
pop
das
das
pusha
jle
scas
jmp
loopne
sub
mov
stos
bound
mov
sbb
jmp
xor
lret
sub
idivl
lds
push
xchg
fbstp
add
inc
sbb
or
or
mov
fistl
mov
or
jo
cmp
sub
inc
cmp
pop
movsl
pop
test
cmpb
shrb
aaa
repz
push
jbe
mov
shrb
data16
pop
or
bound
mov
cmp
leave
stc
dec
add
cs
adc
data16
cmp
lret
mov
pop
inc
jle
faddl
stos
inc
lods
pop
es
xchg
int3
aam
inc
repnz
and
adc
add
fnstenv
jne
shl
sahf
jecxz
and
xchg
add
add
aaa
jns
sbb
mov
mov
xchg
xchg
xchg
test
cmp
addr16
push
lcall
sbb
in
inc
jmp
lea
xchg
ss
shlb
int3
lahf
pop
jecxz
xchg
mov
mov
jno
sbbl
mov
int
shll
mov
ljmp
mov
mov
inc
fisubrs
inc
data16
inc
repnz
in
or
les
sub
inc
jmp
cmp
pandn
dec
es
sbbl
mov
insl
insb
mov
push
movsb
out
ljmp
lea
and
jne
into
or
cmp
sub
inc
stc
inc
movsl
xchg
sub
insl
mov
mov
sub
push
xor
out
or
std
popf
neg
lods
pop
push
mov
sub
repnz
xchg
imul
insl
notl
or
test
mov
jnp
and
mov
push
pushf
mov
push
mov
pop
push
xchg
test
pusha
pop
in
in
add
ja
adc
int3
cli
cmp
ja
mov
sbb
das
test
shl
jmp
ror
sbb
sbb
out
cmp
aam
pop
and
pop
mov
and
ljmp
xor
scas
push
daa
cld
orl
aam
aaa
add
mov
or
mov
aaa
jecxz
xor
or
outsl
mov
movl
lds
xchg
int3
aaa
dec
inc
add
or
adcb
mov
xor
jb
aas
ljmp
lea
lret
shlb
out
jle
pushf
cmp
push
push
int
test
add
pop
gs
fsubl
mov
push
add
add
adc
mov
pop
mov
movsl
add
leave
lahf
or
cld
adc
clc
cs
push
iret
loopne
cmpsb
sub
lret
adc
rclb
jnp
sbb
xor
inc
loope
push
mov
popf
xchg
xorw
test
sub
xchg
jl
mov
push
pop
push
xchg
add
dec
aaa
lock
add
push
fwait
pop
xlat
icebp
jo
aas
fnstsw
mov
lods
fs
mov
jne
pushw
and
in
sub
out
fdivrp
in
fs
repnz
mov
jnp
cld
mov
mov
mov
fisttpll
cs
movsb
jge
sahf
out
mov
add
imul
jnp
lds
mov
jbe
loop
sar
inc
mov
push
icebp
jg
sub
xlat
fs
jnp
repnz
cmpsl
out
sub
stc
sub
scas
test
sbb
enter
and
mov
inc
and
jae
and
in
outsb
ret
sbb
or
or
inc
leave
push
out
out
mov
mov
pop
dec
sbb
das
daa
ja
push
insb
xacquire
shrl
mov
xchg
mov
and
and
sbb
add
sub
aad
adc
lret
dec
pop
ss
push
cltd
stc
push
pushf
inc
ret
clc
shll
jecxz
aas
scas
cmova
scas
aam
adc
xchg
insb
lods
shl
sub
dec
cmp
add
les
fiadds
in
dec
movsb
lods
pop
movsl
lret
mov
into
pop
xlat
cmp
sti
mov
lret
imul
xchg
pop
cltd
outsb
adc
push
pop
jno
bound
sub
mov
and
xorb
pusha
int3
sub
repnz
test
imul
xlat
pop
aaa
push
pushf
fiaddl
not
shlb
cmp
pop
sub
mov
pop
imul
mov
push
stos
jge
mov
xchg
lods
scas
ficoms
jbe
sahf
pushf
push
int3
test
or
inc
mov
and
imul
lods
in
lock
ret
inc
dec
add
pop
mov
cmpb
lea
mov
or
add
pop
cltd
jp
and
add
adc
scas
aas
mov
adc
xlat
repnz
inc
fld
insl
and
mov
test
sbb
push
andb
add
add
test
repz
je
repz
cmp
lahf
shll
xchg
adc
xchg
cmpsl
lcall
cmpb
hlt
test
jle
loopne
cmc
and
mov
lods
repz
psubb
movsl
pop
cmp
mov
pop
pop
ret
push
push
jl
jns
cwtl
leave
clc
and
insl
stc
jmp
xlat
or
add
inc
pushf
add
je
das
and
mov
push
stc
fwait
mov
xchg
insb
jbe
out
dec
push
rcrl
or
pop
out
shlb
jb
aam
push
aaa
add
add
and
mov
shl
inc
mov
adc
js
mov
lods
inc
cmp
cmpl
cmp
dec
dec
jg
daa
sahf
push
add
xchg
mov
andb
xor
mov
addr16
movsl
stos
fidivrl
pop
or
shr
lcall
sbb
dec
adc
jmp
push
dec
in
jns
adc
xor
mov
push
fcomps
lret
sbbb
sbb
jns
les
insb
push
xchg
sbb
inc
cmp
or
jl
iret
mov
scas
lret
pop
jo
mov
vunpckhps
scas
int
test
adc
and
adc
lea
adc
add
add
inc
adc
loope
lahf
lea
cmpb
fdivl
xor
rol
adc
pop
push
in
rcll
pop
test
cmp
in
dec
xchg
push
pop
mov
movb
in
cmp
outsl
mov
sbb
mov
mov
dec
in
pushf
mov
add
push
ja
test
pop
push
out
lods
imul
xchg
inc
mov
sub
mov
fstpl
mov
lahf
outsl
cwtl
pop
js
pop
jle
xchg
das
sub
cmp
mov
scas
aaa
mov
sahf
sbb
pop
sarl
rcll
xor
push
pop
cltd
jge
xchg
out
ljmp
mov
dec
push
popf
loop
sbb
test
sarb
inc
mov
ljmp
imul
jae
pushf
pop
mov
pop
ja
out
push
out
mov
ret
stc
pop
pop
cmpsl
pop
loope
pmuludq
or
adc
mov
mov
xchg
push
ss
adc
push
jb
cmpsl
cmpl
movsl
clc
pop
iret
jge
inc
add
add
inc
in
in
out
jb
mov
add
pop
movsl
xor
mov
xchg
into
cmp
or
mov
fists
mov
adc
dec
mov
adc
fldcw
xchg
aas
outsl
int3
jp
movsl
jbe
imul
loop
stc
mov
cmp
xor
enter
mov
xchg
out
imul
cmp
shlb
mov
xchg
and
js
mov
jl
in
ja
pop
jno
mov
xor
xchg
mov
sub
jg
jge
lods
dec
jne
pop
cmp
jo
adc
sbb
mov
cld
jo
pop
dec
out
into
sub
jne
cld
std
ds
outsl
insl
hlt
leave
stos
mov
cld
push
cmp
jmp
dec
dec
imul
loopne
pusha
jo
pop
sahf
or
mov
cmp
xchg
jnp
or
dec
jge
mov
cmpsl
aam
mov
jno
dec
push
sbb
aad
jmp
jg
cmp
cmp
fsubl
cmpsb
dec
into
jns
jo
cltd
dec
test
repnz
inc
dec
pop
mov
push
pushf
insb
inc
stos
rclb
mov
aad
push
popf
cmpl
or
push
out
insb
pop
hlt
mov
stos
test
fneni(8087
js
lods
sarl
mov
in
out
xchg
clc
mov
mov
and
xor
outsb
jae
repnz
aas
add
xchg
jns
std
inc
pop
iret
jne
icebp
or
mov
dec
jae
aas
neg
push
adc
ds
fld
sub
add
ret
sbb
cltd
push
cwtl
inc
pop
test
mov
mov
ja
fnsave
jg
sub
bound
in
stos
dec
push
xchg
mov
or
pop
dec
les
inc
pop
dec
in
aam
mov
cmp
fisttps
cmp
fdivs
mov
repz
call
dec
out
dec
imul
and
dec
cmp
iret
fstpt
pop
mov
pmulhw
shrl
add
iret
inc
ret
jge
xchg
cmp
jl
mov
dec
rcrb
inc
cmp
lds
jne
mov
xor
lods
ja
ds
cwtl
bt
push
stos
test
rolb
sbb
add
popf
push
xchg
mov
cltd
roll
mov
xor
filds
sub
push
dec
fs
and
std
aam
shrb
xchg
xchg
push
mov
sbb
ljmp
lret
fmuls
mov
pushf
in
test
add
ret
leave
popa
mov
cmp
xor
ljmp
incl
jno
loope
arpl
sbb
sub
aaa
xor
loop
sbb
in
adc
shlb
push
sarb
mov
inc
sub
jno
dec
push
pop
ljmp
mov
xchg
pusha
and
xchg
fstpl
std
notl
push
les
ficoms
push
aam
sub
push
aaa
xchg
shlb
std
fildl
pop
lret
les
pushf
adc
out
pop
lods
or
or
sbb
add
push
add
ljmp
clc
sub
shrb
push
mov
fstp
push
push
loop
xchg
test
cmp
pop
repnz
ds
inc
and
pop
jl
call
xchg
dec
xchg
jp
pop
stos
pop
fs
cmp
pop
fstps
inc
push
and
pop
jmp
dec
or
sub
loope
xchg
sbb
dec
stc
mov
lock
xor
xorl
xchg
push
pop
xchg
shrl
jb
jne
push
add
in
jnp
fdivr
movsb
int3
and
sahf
pop
xchg
dec
lahf
sbb
psubq
xchg
jmp
xor
adc
adcb
mov
leave
lret
sub
inc
cmpsb
xchg
inc
fstpl
hlt
mov
fnstcw
push
lds
lret
jb
inc
pop
add
lret
inc
ds
and
xor
and
stos
jmp
stos
cmpsb
mov
lahf
roll
cmp
outsb
rorb
fwait
sbb
jmp
daa
scas
sub
ja
dec
push
sbb
movsb
cmpsb
mov
adc
adc
sbb
jmp
jp
ljmp
pop
cli
loop
adc
ljmp
mov
or
add
sbb
std
mov
icebp
mov
gs
dec
dec
pop
jo
mov
fmull
fbstp
in
test
std
jle
pop
dec
jl
gs
mov
push
jno
jnp
cmp
sub
mov
add
fmull
das
inc
mov
fninit
add
xlat
adc
test
push
jae
pop
bound
pusha
in
add
repnz
mov
adc
mov
mov
mov
cmc
push
into
fucomi
movsl
aaa
pop
cld
ljmp
mov
jp
inc
popf
fadd
xor
fwait
cs
xchg
xchg
xlat
mov
iret
addr16
clc
mov
sub
cmpl
je
jecxz
popa
aad
sub
adc
inc
inc
shl
inc
or
fwait
repnz
sub
jmp
jbe
push
cli
inc
cmp
fcompl
add
xchg
push
popl
stos
xchg
ret
push
mov
sbb
xor
fistpl
sub
push
add
call
mov
pop
mov
pop
mov
pop
insl
imull
fstpt
popa
mov
pushf
mov
int3
mov
in
push
mov
test
sub
push
xchg
and
popa
lret
jle
test
dec
xchg
lret
mov
and
push
jecxz
movsb
push
jmp
movsl
por
jnp
sbb
dec
jno
mov
mov
in
or
cmp
pop
popf
shr
movsl
add
and
dec
xchg
leave
cli
arpl
mov
daa
addr16
mov
cwtl
ja
sbb
jno
addb
push
adc
and
lods
addr16
into
inc
dec
push
out
pop
mov
push
xor
movsb
hlt
xor
xlat
hlt
jae
jg
dec
add
push
xlat
in
jge
cld
sti
insb
fwait
push
lahf
dec
push
and
fcmovnu
gs
or
fistpll
push
jno
pop
sub
enter
into
push
orb
jae
pop
int3
inc
daa
jmp
xchg
adc
leave
jle
add
and
or
aam
mov
xor
mov
ljmp
fwait
push
dec
and
pop
cltd
mov
mov
ret
pop
mov
test
xchg
lcall
leave
inc
add
xor
ret
jge
cmp
pop
and
mov
dec
stc
mull
mov
xchg
cmpxchg
fisttpl
add
jl
mov
sbb
add
mov
mov
ljmp
imul
je
loop
sub
cwtl
sbb
call
lea
testl
fs
cmpb
clc
les
push
mov
pop
fbld
mov
leave
ret
push
cmpsb
sahf
int3
icebp
or
inc
push
fdivl
cld
xchg
jae
xchg
insb
inc
cmp
push
in
leave
call
fcmovnbe
sbb
cwtl
jmp
xchg
mov
fldenv
in
xor
jp
fwait
inc
inc
adc
ss
xchg
or
pushf
fistps
jp
dec
add
insb
mov
jmp
jp
sub
divb
leave
imul
ret
push
dec
push
add
test
fcmovnu
icebp
inc
lods
imul
shl
cmpsb
pop
leave
rclb
cmpsl
jno
jecxz
fldl
dec
js
adc
test
pushf
mov
dec
sbb
iret
push
sub
fildll
rcr
stos
push
push
mov
xor
test
adc
mov
push
adc
push
les
mov
loop
jno
jnp
push
push
push
loop
leave
push
and
ret
add
and
ss
fsub
inc
xchg
dec
sbb
cli
xchg
and
arpl
orl
jae
and
mov
andl
lret
add
sti
adc
lods
jp
loopne
inc
cmp
sti
xor
pop
daa
sbb
dec
inc
iret
es
mov
adc
in
pop
lret
cld
push
out
add
sti
ss
inc
sbb
test
cmp
jns
sbb
jb
aam
adc
sub
push
fcompl
out
xor
sti
sub
cmp
rolb
fisubrs
adc
bound
in
xchg
sbb
push
inc
add
iret
jp
sbb
call
shll
xor
pop
jne
sarl
hlt
jnp
push
pushf
xor
lods
enter
mov
fists
into
cmp
call
pusha
stos
in
add
scas
rorb
inc
mov
scas
dec
enter
arpl
cmp
or
sub
sub
mov
icebp
add
es
test
test
xor
sbb
cltd
imul
push
sub
rolb
push
movsl
divb
daa
mov
movl
clc
pusha
dec
and
test
cld
ss
xor
das
sarb
xchg
or
outsl
sbb
or
fdivrs
cmp
lahf
sub
jns
insl
fnstcw
inc
xor
shll
jo
call
lds
cwtl
cld
or
mov
cs
sbb
mov
mov
fmull
frstor
push
cmp
cmovp
sahf
rorl
movsb
or
inc
decl
repz
jge
add
in
sbb
mov
add
out
fimull
fs
mov
out
push
popa
inc
scas
divb
sub
pop
and
mov
repnz
out
scas
dec
push
pop
jns
cli
jle
inc
loop
xorb
cmpl
push
add
daa
inc
scas
inc
test
xchg
je
and
mov
cmp
mov
testl
sbb
outsb
xor
mov
or
and
aaa
test
rclb
mov
pop
imul
or
je
lcall
xor
push
push
or
adc
cwtl
xchg
mov
fdivs
addb
in
lret
je
cmp
jnp
gs
loopne
dec
out
mov
scas
mov
jb
jmp
cmc
test
lret
mov
js
jle
icebp
pushf
inc
clc
jecxz
ss
xchg
hlt
jns
inc
sub
sarb
and
push
mov
and
das
adc
loope
leave
push
out
push
in
popl
insl
sar
in
jp
sbb
out
xlat
out
mov
aaa
in
or
xchg
cmp
movsb
icebp
and
dec
lcall
add
sub
hlt
testl
adc
insl
add
leave
popf
jecxz
cmp
out
or
popf
dec
inc
jb
cli
orl
call
or
lea
cmpsb
repnz
dec
mov
mov
and
in
cmp
mov
sub
add
into
aas
push
and
rorb
xchg
xchg
loopne
dec
pop
fsubl
rcrb
aad
stos
shll
test
push
adc
inc
int3
cmp
aaa
xchg
int
xor
loopne
mov
pop
cld
mov
gs
outsb
push
mov
jo
out
push
pop
mull
jle
xor
shlb
xor
ficompl
sub
stos
jns
pop
pop
arpl
push
in
fidivs
out
cmpsb
ret
shrb
jb
enter
mov
inc
or
mov
jp
inc
in
ss
mov
adc
dec
fiadds
pop
nop
call
jno
or
lcall
test
mov
pop
cmpsl
pop
fistps
aas
mov
inc
insl
jmp
xchg
loope
or
inc
and
cmp
stos
pop
mov
dec
aaa
add
xchg
int3
sub
jb
std
clc
jae
xorl
jge
and
mov
push
xchg
add
mov
loope
mov
pusha
cli
mov
lods
dec
fildll
sbb
sub
dec
addr16
out
sbb
xor
adc
fadds
mov
cmc
fwait
sarb
inc
jb
lahf
inc
mov
sti
cmpsl
es
lcall
test
mov
mov
mov
arpl
test
iret
inc
dec
nop
dec
shll
insl
jae
lea
out
xchg
xchg
jmp
call
jo
test
dec
cmp
xorl
jno
xchg
andb
dec
sbb
jnp
jnp
jge
jmp
aam
mov
aam
add
adc
sub
aam
adc
dec
in
movsl
push
jbe
cmpsb
bound
pop
jecxz
jo
call
push
cmpsl
scas
mov
mov
negl
add
arpl
pop
loope
jns
hlt
scas
mov
jne
aad
add
cltd
jbe
xchg
xchg
mov
aas
outsb
jnp
les
mov
push
inc
jl
out
out
xchg
testl
shl
xchg
lcall
in
pop
xor
cld
scas
lahf
arpl
xchg
mov
dec
mov
add
adc
fs
cltd
dec
out
lods
pop
jb
pop
mov
add
icebp
sbb
repz
pop
not
mov
and
xchg
fistps
or
cmp
testl
out
aaa
fldenv
mov
jg
dec
fnsave
loope
inc
xchg
and
scas
mov
pop
es
pushf
add
dec
xor
inc
or
les
push
setae
scas
fwait
nop
repnz
mov
repz
pop
or
push
jbe
add
jnp
xchg
adc
rcrb
neg
pop
ljmp
cmp
lea
sub
jecxz
es
cwtl
jecxz
in
pop
push
jae
sbb
pop
movsl
sahf
pushf
popf
sbb
mov
es
jl
jle
jmp
sbb
pop
test
popf
adc
idivl
push
ds
pop
fcoms
xchg
sbb
mov
cmp
xlat
movsl
mov
pop
xorb
or
xorb
fwait
ds
jbe
jo
in
push
cmp
insb
sub
cmp
mov
gs
xor
cwtl
pop
sub
movsl
arpl
mov
cwtl
lods
mov
fbstp
pop
xchg
xchg
add
and
and
inc
and
push
popa
cmpsb
sbb
dec
into
xchg
into
sub
and
push
pop
outsl
aas
push
subl
push
add
adc
dec
pushf
inc
test
scas
fisubl
in
mov
rcr
adc
jg
enter
mov
out
rcll
jbe
xchg
jns
mov
xchg
dec
stc
and
push
fcmovnu
mov
push
shll
sbb
sahf
nop
xorb
pop
cmc
sub
mov
call
cmp
sbb
es
test
and
sub
dec
out
scas
or
aas
and
loope
inc
push
pop
pop
jmp
sub
adc
inc
cmpsl
out
xor
ljmp
insl
outsl
lock
xchg
mov
inc
pop
mov
stc
fisubl
jno
popf
push
mov
sarb
or
and
mov
shl
aas
ffreep
or
jo
pushf
sbb
aaa
push
pushf
pop
mov
ds
inc
int3
mov
loopne
popa
inc
sahf
push
in
jno
jnp
rcl
outsl
test
jne
and
jno
push
insb
inc
pop
mov
xlat
mov
xchg
jge
inc
jae
mov
push
inc
int3
cmp
clc
and
mov
cmp
jecxz
pop
push
shlb
sbb
xchg
adc
mov
loopne
nop
mov
sbb
stc
rorb
adc
pop
leave
cmp
adc
xchg
cmp
lahf
sarb
rcll
mov
test
mov
jecxz
js
add
shlb
sti
pop
outsl
imul
xchg
xchg
ret
imul
mov
add
and
sub
clc
jne
push
jp
sti
fmuls
enter
movsl
fsubl
jl
clc
and
inc
xchg
ret
ja
outsb
dec
jno
cld
pop
insb
dec
aad
outsl
into
mov
cmpb
loope
cld
and
cltd
xor
loopne
jno
pop
xchg
mov
push
mov
stc
mov
pushf
push
xorl
jle
test
insb
jbe
inc
stos
push
fsubp
sub
enter
sub
adc
sub
jge
sbb
sbb
lock
rcll
cmp
daa
xchg
std
adc
inc
loope
scas
scas
sub
aas
and
scas
fisubrs
push
dec
mov
out
out
push
mov
std
cmpsb
pusha
in
xor
cmpsb
sub
jle
dec
pop
js
mov
pushf
jmp
int
sbb
jle
and
add
out
xor
xchg
rcll
aas
lcall
fcmovb
jae
lahf
cmp
jno
jmp
mov
aam
pop
cmp
mov
xchg
cld
lods
lock
leave
adc
xchg
cmp
adc
adc
jb
sbb
insb
xchg
and
loop
sub
or
pop
sbb
fwait
cmp
pop
sub
and
xchg
jl
cmp
or
aaa
lods
jb
loop
mov
pop
cmp
push
mull
hlt
arpl
mov
xlat
adc
jae
push
fwait
add
lods
in
in
sub
add
mov
jg
scas
lds
std
and
idivl
push
push
jns
pusha
dec
mov
sbb
addl
into
lret
xchg
repz
insb
or
mov
add
mov
mov
xchg
les
or
rcrl
jae
cmpsl
add
sbb
je
inc
lock
das
in
pop
cmp
hlt
add
js
arpl
lret
imul
cmpsl
gs
loopne
add
ficompl
insl
push
cmpsb
cwtl
call
imul
xchg
sti
inc
cmpxchg
ljmp
andb
xor
push
jno
mov
inc
cmc
sub
push
repz
push
xchg
popf
adc
mov
push
xchg
and
call
aas
scas
outsb
mov
ret
push
adc
lret
xor
push
xchg
iret
aas
into
lret
pop
iret
gs
adc
ret
pop
cmp
inc
es
inc
out
mov
mov
das
out
jb
int3
push
jle
inc
jg
je
cmc
or
sbb
dec
ss
inc
cli
stos
cltd
and
and
and
imul
leave
pusha
dec
mov
jecxz
xor
dec
in
pop
fwait
sub
and
jp
dec
jmp
xchg
das
ljmp
mov
add
push
shrb
ljmp
fs
dec
cmp
lret
sbb
cmp
mov
mov
mov
shlb
std
xchg
mov
pop
into
dec
inc
outsl
aaa
fnstenv
adc
cmp
jns
xor
jnp
ds
loope
push
push
sub
cmp
xlat
push
dec
lock
adc
fimuls
push
outsb
mov
mov
inc
and
mov
icebp
popf
jmp
loopne
push
mov
arpl
and
cmp
pop
xchg
cmp
std
push
pop
pop
adc
int
movsb
push
fisttps
cs
fidivrl
andb
test
cmc
test
lea
mov
inc
mov
stos
and
bound
sub
dec
js
mov
cmp
mov
ret
inc
xchg
orl
pusha
mov
mov
inc
or
mov
lods
fwait
and
push
pop
dec
pop
hlt
aaa
shrb
jge
push
les
in
push
pop
xor
inc
sbb
sbb
outsb
scas
rep
xchg
hlt
pop
iret
into
ret
repnz
ret
clc
testl
push
cmp
sub
ljmp
sub
lret
jmp
sbb
mov
and
fnstcw
add
dec
inc
mov
dec
mov
and
sbb
lcall
ljmp
icebp
add
inc
fdivrp
jno
mov
mov
mov
or
in
sahf
cmpsb
in
jle
cmp
cmc
mov
cmp
data16
pop
jle
pushf
add
mov
mov
shrb
lret
ret
sbb
outsb
cmc
lods
push
fcomi
stos
call
into
pop
pop
ret
sub
jbe
aas
xchg
cmp
test
cmp
mov
push
pop
or
ficomps
add
lcall
ja
pop
rep
in
das
and
sub
sti
hlt
mull
ret
mov
fmull
jno
ja
dec
imul
out
sarl
sarb
xchg
fists
fstpt
in
jle
call
fninit
xor
ja
test
dec
and
call
cwtl
ret
dec
cs
shrl
inc
push
inc
jmp
lds
fcmovne
dec
gs
jae
stc
xchg
test
bnd
fistpl
lods
gs
inc
daa
out
jbe
jmp
rcll
sub
roll
and
fdivrp
vmwrite
movsl
xchg
cli
xchg
popf
roll
cmc
sti
cld
cld
repnz
and
icebp
xor
andl
mov
in
insb
imul
in
lret
shr
dec
cmp
dec
push
mov
aas
andl
mov
cld
mov
pop
out
pop
ljmp
pop
sub
jae
nop
es
popf
sub
into
imulb
xor
loop
or
add
xor
inc
xor
cmpsb
lds
and
jecxz
mov
and
das
pop
or
outsl
cmpb
arpl
cwtl
popa
add
inc
pop
inc
arpl
mov
jo
xor
adc
xor
inc
jb
imull
sub
stos
sub
mov
mov
daa
or
aam
je
sub
jp
les
jecxz
sub
aas
jno
jge
mov
test
outsl
mov
jne
outsl
jno
mov
adc
jnp
addr16
icebp
cli
add
cli
adc
stc
je
ljmp
xor
pop
xor
mov
mov
cmp
lret
dec
movsb
add
dec
stos
test
fiaddl
test
adc
stos
xchg
out
loopne
xor
cmp
cmp
jns
sbb
or
fdivs
adc
push
add
pop
je
iret
fdivs
inc
jns
mov
incl
hlt
int3
xchg
jnp
mov
mov
inc
iret
push
call
ljmp
loopne
and
and
scas
dec
push
jo
repz
xor
cmc
mov
stc
in
fistpll
pop
push
insb
inc
cmpl
call
push
mov
cli
lcall
jmp
pop
mov
pop
cmp
scas
inc
insl
call
xchg
into
sahf
loop
push
test
xor
dec
pop
dec
inc
mov
inc
and
pop
jo
outsb
sbb
push
pop
lock
mov
out
popa
xor
inc
insl
sbb
cli
xchg
mov
icebp
popa
sbb
das
inc
stos
push
movntps
or
pop
mov
in
cmpsb
pop
cmp
cwtl
fstl
movsb
stos
sahf
adc
movsl
cmpsl
and
aaa
jae
aad
pusha
cli
mov
test
jle
sbb
out
clc
push
or
fldenv
jo
lods
sarl
xor
dec
pop
xor
mov
mov
push
arpl
sub
add
mov
adc
pop
jnp
push
loopne
cltd
jmp
add
cs
mov
pop
test
mov
enter
movsl
pop
xchg
pop
mov
xchg
dec
outsb
mov
xchg
in
add
sbb
xchg
inc
scas
sti
jmp
jmp
or
leave
leave
push
cmp
and
adc
adc
lret
pusha
scas
adc
jge
div
mov
andl
lahf
sbb
out
mov
pusha
sub
fmull
enter
lods
dec
lahf
adc
mov
mov
sbb
aam
sbb
cmp
jb
jl
rcrl
cmp
adc
fstl
add
lret
cmp
pop
out
into
sbb
sub
ret
xor
ret
daa
les
jp
mov
jbe
cmpsl
xchg
dec
popa
flds
sub
inc
xchg
lahf
movsl
xchg
loopne,pt
dec
jmp
fsubp
mov
xorb
je
cmp
sbb
jp
cld
inc
mov
pop
xor
je
lock
dec
ret
fdivrp
jnp
xchg
ret
lahf
sahf
jo
dec
mov
mov
nop
in
or
mov
cmpsb
addr16
push
mov
push
lahf
fisttps
clc
clc
mov
inc
xorb
push
dec
in
stos
mov
pop
mov
cmp
jmp
les
pushf
leave
jmp
sub
push
dec
xlat
test
xlat
jl
inc
dec
xchg
iret
int
sbb
cld
add
cmp
adc
popf
loop
pop
inc
stos
jne
shll
pop
fs
jns
inc
fistl
shrb
int3
push
movsl
xchg
aad
out
pop
test
push
and
or
imul
mov
mov
test
cltd
fists
pop
incb
or
cmp
stos
scas
xchg
arpl
mov
les
add
data16
push
pop
or
xor
jl
jne
pop
mov
cwtl
pop
mov
enter
sbb
rcll
lods
out
mov
sbb
add
xchg
xchg
cmp
loopne
inc
jge
lds
idiv
in
mov
rcrb
scas
jo
adc
or
pop
ds
testb
dec
bound
push
cmp
cmp
mov
or
pop
orb
in
or
sahf
sub
dec
mov
inc
mov
lret
inc
mov
pop
test
imul
daa
xor
pop
int
das
or
pushf
mov
or
adc
or
xor
mov
sbb
scas
lds
cld
icebp
sub
jp
insl
ret
jns
jge
daa
inc
out
dec
aas
pop
sub
lcall
mov
das
pop
aam
mov
add
lock
stos
lret
ss
jno
leave
repnz
and
sbb
addr16
int3
adc
push
mov
and
repnz
mov
xor
or
in
fldl
adc
loop
push
mov
outsb
adc
leave
into
rorb
outsl
mov
jecxz
popa
inc
cmp
nop
and
push
add
lahf
les
add
arpl
js
inc
mov
jb
and
lcall
add
scas
jb
in
movsb
push
push
and
push
pop
sar
ret
adc
jmp
cld
adc
sbb
repnz
subb
jp
jb
sub
or
adc
sarb
cmp
outsl
sbbb
mov
push
mov
dec
push
fnstcw
fimull
inc
ss
ljmp
enter
xor
jno
mov
push
prefetch
or
add
jb
movsb
cmp
jle
lahf
jns
jb
out
shr
mov
sub
repnz
sbb
mov
adc
cmp
adc
and
arpl
out
jle
dec
clc
add
sub
iret
xchg
jbe
imul
movb
out
mov
jl
inc
push
xor
inc
mov
adc
insl
inc
ret
adc
add
mov
iret
push
xchg
push
or
xchg
ds
stos
dec
sub
cmp
adc
pop
and
jg
nop
ljmp
lods
add
out
arpl
jae
ficomps
mov
int
movsb
ds
mov
cli
in
lret
mov
aad
xchg
les
mov
aam
imul
cmp
pushl
fxam
fnstenv
mov
xchg
inc
es
jle
shll
sub
addr16
outsb
inc
mov
lds
lods
pop
xchg
mov
stos
xchg
xchg
addb
lds
out
ret
dec
hlt
mov
stc
js
inc
cmpsl
repnz
adc
xchg
sub
or
fcom
push
lods
dec
pop
and
fmul
jo
out
sbb
sbb
cbtw
dec
pop
cmp
or
mov
cmp
sub
push
scas
xor
out
sbb
push
jl
push
mov
mov
dec
sahf
in
stc
or
or
and
rcll
int
addr16
divl
push
dec
mov
ljmp
lds
fdivrs
adc
decb
jae
mov
mov
mov
pop
insb
addr16
or
jnp
mov
stc
sarb
pop
push
adc
push
push
or
cmp
pop
jne
test
cmp
int3
out
lock
and
punpckhwd
mov
add
stos
push
xor
xchg
jae
icebp
mov
inc
cmp
push
das
jl
call
sbb
leave
push
jbe
push
sub
jl
rcr
mov
pop
cs
addr16
inc
fdivs
repz
insb
rolb
pop
lds
pop
sar
pop
out
fwait
push
pushf
test
xchg
call
jbe
pop
jl
mov
dec
sub
mov
ficoms
xchg
push
sarl
fisttpll
insb
fdivl
push
gs
push
roll
add
iret
sbb
sbb
call
xor
cmp
mov
test
push
dec
fwait
mov
lahf
test
cmc
in
cwtl
lret
push
and
xlat
xor
sub
fidivrl
movb
sub
xor
cmp
ret
stos
dec
mov
jecxz
in
sbb
outsb
lea
sbb
add
or
stos
dec
cltd
xor
jae
cmpsl
idiv
dec
test
mov
xchg
jg
cld
pop
js
rcl
sbb
out
loope
push
adc
insl
lret
jge
cmp
xor
rorl
insb
imul
movsl
push
jge
outsb
cmp
xor
dec
call
push
fnstsw
test
push
push
push
call
test
xor
push
xor
dec
sbb
sub
incb
mov
stos
mov
scas
loope
fbld
mov
dec
insb
aas
mov
mov
pop
or
aaa
pop
dec
dec
bnd
rorl
mov
jnp
in
xor
in
xor
lea
inc
add
fstpl
xor
pop
pop
loopne
jb
add
dec
out
or
push
imul
push
cmp
mov
xlat
inc
inc
test
mov
cltd
loopne
inc
dec
inc
add
cmpsl
jmp
ja
dec
stos
out
jbe
lret
popa
ds
sub
shll
stos
xor
popa
pop
fidivl
inc
lock
sbb
add
cltd
ds
xor
sbbl
adc
adc
adc
lret
dec
daa
outsl
scas
dec
dec
mov
stos
push
dec
testl
dec
push
or
push
inc
mov
std
sub
divl
popf
adc
xor
ret
xorl
movsb
popa
inc
lea
repnz
stc
or
jle
clc
push
mov
cmpsb
lds
out
jecxz
mov
mov
mov
jo
fildl
pop
outsl
ficompl
cwtl
xor
xchg
push
cmp
call
adc
jp
in
or
mov
mov
push
sub
mov
dec
imul
mov
popf
movl
fdivrl
inc
ja
mov
jbe
dec
add
jbe
mov
in
loopne
xor
sbb
and
out
fsubl
scas
lods
pop
fsin
sub
or
in
les
das
jmp
add
dec
cmc
cmp
out
cmp
push
push
add
dec
mov
xor
adc
ds
iret
ss
add
adc
mov
pop
sbb
fbld
sahf
sub
lahf
sahf
push
mov
loopne
lcall
add
rolb
jnp
cmc
cmp
sub
fdivs
mov
imul
cmpsl
mov
scas
rcr
rcrl
dec
pop
ror
xchg
popl
stc
lcall
push
xchg
mov
ja
and
out
sbb
loop
cmp
push
imul
fsubrs
arpl
cmp
jg
out
nop
movsb
icebp
sbb
data16
popw
sahf
pop
aaa
sbb
and
xchg
xor
dec
nop
decb
jne
add
mov
pop
push
push
cmp
or
push
loope
pop
dec
and
dec
fstps
lds
push
mov
cmp
aas
in
lret
mov
inc
inc
popf
mov
cmc
xchg
mov
daa
xor
mov
cltd
js
and
pop
fisubrl
das
push
addl
xchg
or
push
div
sahf
popf
add
adc
dec
fs
aad
or
mov
mov
dec
fwait
add
xlat
or
je
lods
sbbb
dec
decb
shrl
pusha
xor
std
icebp
js
jne
or
mov
iret
sahf
jle
fs
sti
cmp
mov
pop
lret
iret
mov
mov
mov
loop
inc
je
fwait
sti
mov
mov
fsts
or
shr
inc
stc
lods
push
push
in
mov
sbb
jl
adcb
cmp
pop
push
jo
jmp
lods
push
icebp
ja
push
lods
out
or
and
nop
mov
inc
loopne
das
sub
jns
dec
and
xor
inc
inc
or
sub
insb
push
dec
insb
dec
cmp
arpl
outsb
int
and
aad
mov
in
xor
ljmp
jl
jp
and
fcoml
bound
xchg
into
or
cltd
out
pop
inc
mov
stos
mov
inc
inc
sbb
aas
sahf
mov
adc
cmp
push
test
mov
sbb
leave
or
fdivs
adc
negb
int3
mov
xchg
cld
mov
ret
pmulhw
mov
push
pop
inc
repz
das
in
or
pop
or
add
and
lods
pop
jp
scas
mov
add
push
push
mov
aad
mov
cmp
or
push
push
pop
adc
int
andb
fsubr
xchg
pop
loop
and
stos
adc
dec
jo
fwait
cmp
out
in
js
hlt
cmp
xchg
cmp
jecxz
cmc
jp
pop
nop
and
addb
dec
movsl
cmovbe
mov
ficoml
scas
adc
jge
jbe
pop
ret
inc
xlat
xor
dec
mov
inc
mov
shlb
xchg
loope
out
xchg
sbb
fstpt
mov
adc
int
mov
mov
mov
mov
stos
cli
fsts
jecxz
xchg
adc
in
adc
push
push
scas
mov
adc
je
sbb
stc
pop
add
dec
daa
outsl
in
shlb
pop
mov
xlat
std
ds
aas
mov
call
push
push
add
mov
mov
nop
lea
dec
and
imul
test
cmp
jo
mov
sbb
xchg
pop
movsb
jno
mov
inc
out
sub
and
mov
sbb
cmpsl
addl
in
xor
cwtl
repz
add
cwtl
aam
pop
jne
loope
int3
cmp
inc
add
and
jo
mov
cmp
mov
aaa
fwait
push
mov
pop
push
xor
scas
test
iret
and
int3
mov
push
mov
lcall
jne
adc
jo
or
sarl
in
vfnmsubps
jne
out
pop
mov
push
inc
leave
adc
inc
mov
cwtl
lock
aaa
inc
sub
pushf
push
jns
sbbl
mov
outsb
repz
int3
sbb
inc
cltd
ret
xor
jge
aaa
jnp
and
movsl
pop
pop
stos
loopne
cmp
je
add
mov
cwtl
mov
icebp
stos
mov
cmpsb
rolb
sub
xor
mov
and
sahf
hlt
or
rorl
into
jl
outsl
test
jg
lahf
rclb
test
in
pop
cwtl
rorb
inc
movsb
mov
jg
xor
pop
jns
insb
pop
mov
je
aas
cwtl
mov
mov
mov
je
pusha
dec
insl
sub
test
dec
xchg
nop
lods
pop
mov
sub
push
push
push
dec
dec
xchg
adc
inc
cmp
adc
cmp
xor
cmc
test
sub
decb
mov
xchg
gs
clc
adc
mov
movsl
inc
shrl
out
dec
das
and
loope
sbb
mov
jo
cmp
push
mov
push
mov
sub
movsb
xchg
mov
into
push
mov
js
jno
pop
fldl
dec
mov
rcrl
fdiv
addb
mov
stos
push
xchg
fsts
ja
movsl
imul
pop
dec
cwtl
ja
add
roll
loop
push
adc
adc
icebp
mov
jns
sbbl
daa
popa
mov
sub
arpl
xor
scas
inc
cmpsl
sar
ds
xor
pusha
fucomip
mov
.byte
xchg
