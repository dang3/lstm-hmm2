push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
adc
add
add
add
add
mov
add
or
add
mov
add
mov
add
add
add
add
add
or
add
add
movsl
mov
sarl
jns
jae
outsl
outsl
outsl
outsl
add
add
rolb
add
add
add
xchg
mov
add
adc
ret
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
jge
clc
push
movsb
add
imul
pop
cmc
add
and
pop
mov
lock
mov
jno
jnp
fstpl
dec
dec
orb
clc
cmp
mov
inc
ss
insl
and
mov
inc
jle
and
add
xchg
paddw
cmp
enter
call
mov
insl
xlat
add
and
push
aaa
mov
add
inc
push
cmp
mov
push
push
inc
int
das
leave
add
mov
test
cmp
sbbl
sahf
and
and
es
iret
and
and
push
insl
sub
cs
faddp
popa
in
clc
pop
cs
mov
ds
adc
add
adc
dec
pop
ljmp
sub
push
test
fsubs
xchg
xchg
xor
jge
cs
shll
int3
outsl
out
nop
out
sbb
or
push
push
xor
lret
pop
nop
xchg
int3
dec
push
fiadds
lds
testl
ja
push
push
fs
ror
fwait
jp
jbe
xchg
pop
fsts
pop
pop
jae
in
shrb
outsb
mov
mov
sbb
out
inc
mulb
ret
addb
mov
out
xor
xchg
andb
lret
pop
jecxz
push
clc
shlb
ja
sbbl
subl
and
fcoms
arpl
push
sub
cmp
ja
mov
xor
icebp
test
or
mov
fsubrl
mov
int3
push
in
or
test
lret
cwtl
cwtl
pop
jp
adc
arpl
lret
inc
inc
mov
scas
in
in
mov
sarl
sbb
fmull
out
jae
imul
test
lds
lret
inc
in
out
sbb
mov
call
orl
sub
call
outsb
mov
lock
rol
sbb
xchg
ret
cs
mov
addl
pop
mov
addr16
mov
scas
pop
test
leave
or
pop
cmp
cmc
push
xchg
push
mov
call
xchg
sbb
and
adc
or
fwait
mov
andb
dec
and
xchg
inc
int
inc
lahf
dec
sbbb
dec
std
cmp
fbld
xorb
test
xchg
jecxz
xchg
repz
jb
dec
sti
scas
mov
push
fbstp
adc
es
test
imul
pusha
popa
sti
ja
xlat
push
mov
imul
dec
loopne
mov
pushf
daa
push
dec
js
test
pop
push
aam
mov
call
mov
xchg
mov
or
int3
dec
dec
faddp
pop
mov
push
adc
dec
insb
push
xor
push
and
shll
bound
mov
push
aas
cs
mov
lods
shlb
arpl
mov
mov
push
xor
out
jecxz
mov
incl
ds
rorl
cmpsb
dec
inc
fwait
sub
cmc
mov
mov
cmp
lock
adc
movsb
xchg
lret
push
mov
bound
jae
mov
ljmp
mov
mov
mov
sbb
mov
loop
call
adc
insl
xor
in
mov
inc
ds
insb
outsb
fwait
xor
mov
adc
movsb
push
out
xchg
jno
pminub
jl
inc
clc
push
stc
das
and
les
and
pop
push
pop
sbb
sbb
inc
mov
jne
pop
repz
jg
rorb
and
inc
loop
mov
and
jecxz
fs
addr16
test
call
push
lahf
mov
in
mov
sub
dec
mov
aam
fstpl
adc
sbb
dec
movsb
jl
or
sub
sub
nop
xchg
nop
je
ss
jge
xchg
xor
adc
lea
popf
rcrb
in
jmp
cmp
test
cld
add
mov
into
fdecstp
mov
mov
jno
cmp
or
xchg
bound
cwtl
adc
adc
mov
je
test
imul
clc
cs
fistpll
sbb
rcrb
xchg
psubb
sbb
sbb
add
or
mov
xchg
lods
cltd
rorb
jmp
adc
cmp
int
mov
loop
inc
shlb
and
leave
push
inc
cmpb
lret
andl
test
xchg
je
adc
add
ss
fcomps
or
sbb
pop
pop
or
fisubrs
in
subl
cmp
and
inc
mov
cmp
fstl
pop
mov
xor
push
fwait
in
arpl
add
dec
jns
push
loope
or
cmp
add
roll
fsubrs
mov
iret
lcall
cmp
int3
sbb
packuswb
in
dec
mov
push
mov
inc
mov
mov
mov
jp
or
sbb
test
repnz
jne
mov
jg
mov
or
lods
inc
lahf
xlat
push
cmp
cmp
out
push
nop
fdivs
push
out
sbb
dec
js
sbb
pop
dec
and
shll
mov
ficoml
mov
xor
sbb
shlb
xor
in
xchg
imul
push
out
dec
mov
and
or
rcrb
inc
xchg
cmp
adc
in
jno
loop
loopne
jecxz
out
adc
mov
aad
leave
sbb
nop
mov
jg
jo
rep
std
mov
adc
inc
adc
jne
add
inc
mov
xor
fidivs
mov
lods
pop
lock
adc
cld
int
movsl
push
mov
lcall
jb
loopne
inc
es
push
es
sub
adc
sbbl
js
gs
cwtl
lret
pop
or
pushf
xor
sbb
dec
push
adc
shlb
mov
adc
mov
in
ret
or
sbb
shlb
je
out
mov
adc
jge
int3
bound
and
mov
or
mov
add
out
pusha
xchg
mov
or
gs
fldt
cld
mov
mov
push
push
fcompl
xchg
mov
outsl
mul
stos
sub
sahf
or
cmp
xor
mov
test
mov
sbb
sbb
dec
jg
arpl
ret
adcl
push
dec
mov
shrb
mov
out
mov
mov
cmc
mov
add
imul
jb
push
movsb
jmp
sub
dec
ja
in
cmc
lods
mov
cmp
shll
into
xchg
pop
das
cmp
cmp
aad
push
mov
fsubrl
int
mov
mov
cmc
scas
cmc
add
and
inc
loopne
mov
push
les
and
loopne
xchg
sbb
adc
and
or
jg
cmp
dec
test
mov
adc
dec
dec
cli
rdtsc
mov
mov
sub
push
js
into
adc
cmp
mov
mov
into
sub
dec
and
xchg
cmpb
scas
lret
inc
mov
cltd
daa
cmp
add
pushf
mov
pop
push
add
ja
jle
out
inc
sub
adc
lock
cmp
xchg
add
outsl
inc
hlt
outsl
mov
loope
push
mov
fcoml
pusha
enter
mov
shll
mov
or
inc
add
mov
add
adcb
cwtl
les
push
daa
movsb
push
jl
mov
aaa
test
jge
subl
mov
inc
sbb
cltd
cli
jns
jns
cmc
lret
aas
or
push
xchg
lret
add
xlat
inc
call
or
aam
xchg
push
xchg
pop
mov
pusha
push
out
stos
push
mov
push
adc
dec
ret
or
add
cltd
mov
and
arpl
pop
sbb
xor
inc
push
xchg
push
xchg
sbb
test
mov
sahf
clc
adc
adc
jnp
repz
jno
add
dec
dec
lret
stc
sub
xchg
jp
xor
jno
pop
outsl
mov
mov
sbb
jle
or
popf
movb
insb
mov
mov
lods
movsb
cwtl
mov
sahf
add
aas
inc
jge
sti
lock
sub
xor
pop
sub
in
stos
mov
fwait
out
jnp
adc
xchg
jg
addb
repnz
mov
mov
jns
jecxz
xchg
fisttps
int3
push
xlat
push
lret
ficoml
adc
and
imul
push
inc
data16
in
outsb
cmp
fsubr
pop
fisttpl
clc
shrb
mov
cmp
shll
daa
push
ss
lds
loopne
data16
movsb
or
jge
xor
mov
add
lahf
iret
pop
shl
add
imul
data16
mov
cmc
mov
mov
mov
cmp
in
mov
lea
loopne
daa
inc
mov
cmpxchg
inc
scas
daa
mov
andl
lret
mov
aas
xchg
mov
dec
daa
sahf
imul
mov
cmp
mov
xor
push
sub
cmp
xor
nop
cli
jbe
pop
sarb
inc
nop
aas
jno
jne
addr16
push
sub
fwait
xor
mov
adc
push
inc
out
fcoml
push
cwtl
lds
and
sub
and
add
sbb
es
insl
test
lods
lret
fnstcw
enter
movsl
lcall
push
jmp
and
cld
test
or
lcall
stos
adc
mov
jle
jge
movsb
xchg
jp
ja
dec
mov
mov
and
jl
bound
add
inc
xor
lock
stos
fcomi
mov
cmp
test
pop
mov
xchg
addr16
or
mov
jne
lock
xor
movsl
sbb
rcrb
push
jns
adc
push
repnz
inc
add
cmp
fcompl
inc
aam
and
push
in
cmp
xchg
test
mov
inc
std
test
adc
cltd
mov
xor
int3
dec
in
push
xchg
rcr
loope
inc
jbe
int3
push
sbb
ss
push
ret
out
jge
and
cmc
mov
xchg
add
sti
pop
test
dec
repz
jle
in
das
xor
xor
cli
mov
sbb
xchg
dec
pop
push
jae
sbb
addr16
mov
add
pushf
jmp
imul
dec
fcomps
jle
jbe
fwait
insl
pminub
sti
jnp
pop
movsb
or
sbb
movsb
ja
repz
cmpsl
insb
scas
xor
andb
cmp
jnp
aad
cmpsb
pop
stos
out
mov
inc
fimull
sahf
push
inc
xchg
mov
std
pop
cld
jnp
loop
add
les
outsb
jge
pop
xor
shrl
test
lret
xor
push
xor
lahf
insl
mov
inc
aad
lea
jmp
inc
mov
cmp
cwtl
xchg
cmp
fidivs
adc
cmpsb
test
jge
stc
pop
sub
addr16
ret
mov
cmpsl
movsl
add
pusha
lock
cmp
scas
jp
inc
movsb
jp
inc
push
mov
aam
js
fwait
cmp
out
xor
imulb
add
lock
icebp
rep
cmp
jge
fs
cwtl
fadds
push
jno
rorb
and
imulb
movsl
shr
add
scas
push
cmp
cwtl
or
cltd
aaa
call
pop
cld
fstpl
lea
fcomps
pop
mov
in
dec
in
mov
aad
movsb
mov
mov
and
das
ret
push
add
aad
push
mov
test
sbb
xor
leave
jnp
repnz
push
pop
test
iret
sub
and
ret
fs
arpl
ja
les
push
jo
fisubrs
std
fmuls
outsl
int3
cwtl
and
sub
aaa
and
out
out
or
popf
enter
xchg
int
loop,pt
mov
mov
mov
sar
pushf
inc
jne
sub
or
lds
dec
mov
xlat
or
fstpl
xor
lea
cmc
je
test
mov
pushl
jbe
cmp
jae
jle
mov
or
xlat
dec
mov
mov
adc
and
lock
icebp
ficompl
insb
sahf
in
fstpl
push
mov
pop
mov
jle
dec
lea
lock
outsl
xchg
mov
shlb
or
imul
pop
jge
out
sti
cmpsl
or
or
fldcw
pop
fsubs
pop
dec
pushf
int3
inc
fucom
add
mov
inc
jl
das
scas
clc
scas
mov
out
lcall
nop
push
dec
pop
mov
push
mov
ljmp
imul
cmpsb
adc
pop
aad
ja
leave
cmpsl
nop
sub
jb
fs
jp
and
in
std
outsb
push
push
xchg
lods
xchg
arpl
push
pop
cmc
mull
adc
filds
or
jmp
ja
dec
out
pop
in
cmp
mov
jg
jb
enter
jnp
xlat
cld
jmp
adc
mov
arpl
jb
inc
push
sub
mov
jnp
fidivs
mov
xchg
dec
ret
or
mov
add
xchg
fsubrl
sbb
iret
ljmp
fiadds
insl
mov
in
dec
je
movb
sub
cmc
mov
in
gs
adc
lcall
push
xchg
push
divl
xlat
push
mov
into
in
pop
push
out
push
stc
and
fld
or
loope
out
fs
jno
mov
push
add
sub
mov
cmp
das
cmp
loop
adc
xchg
or
scas
push
mov
movsl
adc
insl
cmp
movsb
push
mov
push
int3
clc
mov
mov
xlat
dec
data16
pop
insb
pop
icebp
dec
push
mov
mov
add
mov
loopne
insl
out
jno
cli
mov
cmc
imul
xchg
dec
or
jb
test
daa
mov
jno
test
or
cli
sbb
jb
adc
cmp
mov
xor
add
mov
lods
ja
jp
inc
shrl
jb
xlat
andl
lret
cmpsl
leave
cmp
pop
sbb
enter
lock
xchg
sub
mov
sub
or
add
mov
dec
sbb
adc
jle
mov
or
cmpb
adc
sbbl
dec
push
mov
jmp
sbb
pop
daa
lcall
cmc
inc
cltd
in
dec
push
sub
movsb
enter
call
add
xchg
call
inc
and
stc
lahf
add
push
mov
pop
aad
and
xor
sbb
cvtps2pd
into
dec
or
testb
mov
inc
into
dec
inc
das
mov
mov
dec
sub
sub
scas
popa
xchg
int
jge
repz
mov
aaa
scas
repz
mov
icebp
push
les
gs
lds
push
push
cmp
inc
test
adc
push
pop
roll
add
jle
cmpsb
movsb
leave
lret
fisubl
adc
sub
xchg
push
dec
imul
mov
clc
sbb
ljmp
and
mov
xchg
push
push
xchg
and
icebp
aas
mov
sub
das
lea
fmull
sbb
in
mov
xor
dec
xlat
jmp
adc
lock
cld
and
pushf
mov
sti
cmpsb
sub
out
test
xchg
inc
jo
jp
xor
cmc
vpperm
mov
xchg
sbb
icebp
lahf
cmp
inc
jne
popa
xchg
mov
pop
cmp
test
popf
test
mov
inc
subb
and
mov
fwait
test
or
push
cwtl
test
lods
jg
sub
mov
push
daa
sahf
dec
insb
xchg
and
sub
push
jle
adc
shlb
movsb
sub
subb
xchg
push
pusha
mov
cmp
inc
popa
ss
addr16
jge
push
and
daa
lret
or
inc
jp
fmul
cmp
or
ret
pop
fucom
std
pop
or
test
pop
dec
test
daa
out
jb
leave
or
hlt
add
lret
movsb
call
imull
dec
mov
stos
sub
pop
jge
xor
pushf
adc
jle
xchg
cmp
shll
mov
fiadds
xor
fs
cmc
mov
jecxz
popa
mov
mov
mov
inc
mov
adc
sbb
movsl
adc
add
in
jo
inc
repnz
sub
movsb
rcr
xchg
stc
sub
rolb
setnp
and
inc
cmp
xor
xchg
mov
sub
fistpll
shl
leave
push
add
fisttpl
testb
pop
xor
aam
jb
sub
xchg
lock
sub
psubusb
and
popf
push
jl
inc
pop
adc
pushf
pusha
cmp
mov
lea
repnz
lret
push
imul
fldcw
jb
stos
or
mov
sbb
adc
sbb
hlt
pushf
sbb
cltd
ret
jp
push
in
lods
test
mov
into
lea
xchg
addb
loop
jmp
pusha
mov
mov
outsb
cwtl
sub
sub
push
xchg
jl
das
fistpl
push
out
pushf
fldcw
add
ficoms
push
std
aad
push
xchg
jl
sbb
add
dec
xchg
jmp
sbb
addb
adc
gs
addl
inc
sti
cwtl
out
lock
outsl
sbb
test
icebp
adc
inc
dec
mov
mov
divb
cli
pop
loopne
sub
popf
or
xor
mov
sbb
call
imul
faddp
xor
jl
or
fisubrs
adc
jecxz
jecxz
sbb
bound
lds
mov
or
lret
and
sub
dec
out
add
insl
out
shlb
adc
adc
aaa
mov
imul
pusha
out
lcall
xchg
fmull
arpl
pop
aas
and
inc
out
scas
insl
icebp
or
fisttpll
or
popf
jns
fwait
test
mov
sub
leave
or
aam
insl
cli
or
xchg
or
xor
das
insl
mov
stc
cmp
push
dec
cmp
jg
jns
inc
add
sbb
movsb
jp
and
icebp
pop
loopne
mov
in
test
mov
push
mov
outsb
jecxz
jmp
push
sbb
sti
jbe
movsl
sub
jbe
jmp
mov
mov
mov
inc
repnz
or
outsl
dec
sbb
mov
sbb
dec
dec
or
icebp
js
sti
int3
add
mov
or
cs
adc
mov
lds
es
jns
stc
out
rcrl
mov
hlt
sbb
add
mov
inc
xor
lods
fsubr
pop
and
rcl
sbb
sub
add
dec
cmp
push
or
idivb
fcoml
mov
imul
pop
adc
mov
cmp
ror
add
int
shlb
xlat
insb
push
loop
aaa
xchg
adc
push
jne
aam
mov
sub
xchg
mov
dec
add
shrl
shlb
xchg
icebp
fadds
jae
mov
movsb
xor
cltd
les
ds
stos
mov
in
or
inc
es
cltd
push
adc
xchg
xchg
movsl
sahf
xchg
fdivrl
pop
pop
pushf
jp
mov
add
loope
mov
xor
pop
ss
add
fistpl
or
out
loopne
outsl
dec
std
mov
enter
xor
cwtl
jl
jno
xchg
cmpsl
inc
shlb
jne
sti
repz
or
push
arpl
mov
int3
xchg
ret
aad
fidivrs
push
pop
out
scas
jge
movsl
jne
in
pop
jo
mov
iret
pop
add
call
fs
in
or
fldenv
loop
shll
xchg
bound
cmp
jg
jg
push
imul
xchg
cmp
pushf
cli
jecxz
rorl
mov
cmp
cltd
lock
neg
mov
pushf
sarl
sbb
or
data16
repnz
jo
and
mov
arpl
and
jmp
fldl
sub
add
loop
fucomip
and
mov
push
mov
xchg
jbe
movsb
jno
pop
int3
mov
push
or
pop
ret
out
push
add
jbe
shlb
stc
enter
loop
push
call
add
cmpsb
push
jle
fstpt
or
and
orb
jmp
sbb
mov
cli
push
or
sub
jne
dec
aam
xchg
cmp
imul
pusha
je
popa
insl
dec
aas
dec
ss
mov
lds
pop
pop
icebp
fadds
pop
inc
out
cli
lods
or
je
mov
dec
or
sahf
jp
dec
fimull
mov
mulps
mov
pop
clc
repz
into
cmp
and
inc
movsl
mov
leave
popl
pop
fistpl
sub
push
xor
leave
lahf
sub
adc
sub
sub
xchg
pop
loop
pop
movsb
jno
dec
aas
gs
push
cmp
push
enter
xchg
and
jne
gs
jmp
push
mov
pop
pop
or
std
repnz
sahf
sbb
jl
jg
xchg
pop
inc
sti
inc
push
mov
fs
xchg
outsl
jp
cmpb
jne
mov
mov
add
push
xor
inc
mov
pop
daa
xchg
jle
std
sbb
pop
mov
cmpsb
insl
aas
add
adc
sbb
xor
dec
mov
jne
stc
mov
stc
sub
add
popf
in
jns
in
shll
shll
inc
xchg
mov
loope
xchg
sub
fmuls
addr16
lea
jmp
addr16
jne
lcall
xorb
fnsave
jno
or
idiv
jne
mov
lahf
andl
xchg
cmp
divb
dec
insl
imul
rcll
sbb
in
or
cmp
xchg
mov
ficoml
dec
imul
push
cmp
jle
cmp
inc
out
stc
mov
lret
mov
sub
and
test
adc
cli
mov
test
mov
inc
aas
xor
leave
mov
ret
lods
in
mov
mov
sbb
xchg
push
ljmp
hlt
cld
cmc
fimuls
jnp
movsb
dec
push
enter
pop
cmpxchg8b
jnp
mov
fstl
push
mov
or
cmc
sub
bound
clc
dec
mov
aam
data16
cwtl
jne
lret
xor
xchg
fisubs
lods
orps
test
aad
fldenv
add
or
mov
incl
iret
pop
shl
loope
and
cld
xor
adc
jecxz
rorb
jns
imul
fstp
lahf
mov
xorb
xchg
int3
pop
sbb
add
inc
jl
sahf
lahf
fists
push
jecxz
xlat
pusha
js
in
push
fdivs
pop
push
scas
mov
adc
outsb
xchg
cmp
imul
jge
sub
and
loop
cmp
shl
cmp
gs
xchg
ljmp
sub
std
cmp
cmp
aad
cmp
pop
mov
sub
inc
aaa
out
and
loop
data16
jae
rorb
mov
fdivp
inc
or
xchg
xor
shr
hlt
xchg
shl
jns
mov
sub
adc
sub
push
jle
sbb
lahf
fcmove
aas
jmp
mov
out
jge
dec
push
loopne
lahf
mov
fidivs
xor
test
dec
mov
in
pop
fwait
decl
popf
jmp
and
loope
rclb
sub
repnz
xchg
outsl
xchg
mov
push
pop
sbb
ret
sti
dec
test
cmp
inc
dec
xchg
out
push
cmp
std
mov
je
xor
ljmp
add
jmp
inc
cltd
cmp
xorl
push
jno
add
dec
inc
jmp
je
inc
sub
xchg
xchg
shrb
adc
lods
aaa
push
je
dec
in
lods
and
mov
xor
and
imulb
stc
push
jg
pop
jge
xchg
cmp
dec
stc
or
scas
push
push
mov
popf
add
cmp
mov
inc
sbbb
faddp
cmc
add
sbb
inc
jo
aaa
adc
ja
imul
hlt
inc
and
pop
xchg
arpl
sub
pop
sbb
xor
fsubrl
sbb
add
add
pop
cmpsl
lret
jae
xchg
fbstp
nop
repz
dec
ret
xor
or
xor
push
adc
xchg
mov
aam
xor
xchg
sub
xchg
mov
mov
and
pusha
daa
mov
aad
push
movsb
pop
mov
and
fwait
sub
xor
pop
out
in
dec
or
sbbb
inc
movsb
mov
orb
mov
fcomps
jle
dec
mov
cmpsl
leave
inc
and
std
pop
adc
sbb
repz
add
adc
mov
push
xchg
xchg
push
sub
jp
int
or
out
cmp
adc
xchg
push
leave
mov
data16
aas
pop
pop
lods
iret
mov
adc
das
iret
xchg
pop
jb
push
hlt
movsb
cmp
loopne
mov
push
pop
cltd
pop
loopne
fldcw
int
inc
std
inc
sahf
or
mov
sub
adc
push
in
adc
inc
inc
jp
jne
mov
mov
je
xor
xor
aas
cmp
ret
faddl
mov
je
ljmp
scas
dec
js
jl
sahf
lret
scas
in
mov
rsqrtps
in
lea
mov
mov
add
cwtl
inc
and
xchg
pop
sub
jns
and
pop
jg
sahf
inc
popf
push
aas
dec
cmc
int
jge
stos
cs
cmovno
mov
jns
scas
cmp
shrb
push
outsl
out
lahf
sub
sbb
mov
jmp
cld
test
mov
outsb
rol
jg
int3
sbbl
and
outsb
decb
pusha
mov
les
mov
xlat
in
enter
pop
xchg
mov
inc
sbb
and
push
mov
jae
sub
sbb
push
pop
pushf
jbe
or
shll
adc
cmp
or
push
data16
jbe
shrb
in
pop
cmpb
mov
subl
jb
into
arpl
ret
xchg
dec
ror
sub
fnsave
xor
orb
inc
xchg
ljmp
cmc
pop
push
mov
stos
loop
mov
dec
add
mov
jbe
daa
adcl
ds
dec
fcmovnb
clc
subl
out
fcomps
sbb
in
dec
in
fnstsw
arpl
pop
popa
add
lea
or
fs
arpl
mov
xor
inc
cmp
xchg
in
sub
popl
xchg
push
push
test
ds
fnstcw
dec
inc
pop
arpl
mov
inc
rorl
int3
dec
ja
mov
ficoml
test
add
push
dec
add
add
mov
cmp
lods
mov
jge
or
loope
insl
sbb
xchg
mov
js
inc
push
jno
outsl
stc
or
or
lret
pop
lods
bound
mov
adcb
or
jb
and
sbb
add
cmpsl
andb
mov
dec
repnz
sbb
sbb
aad
jle
mov
mov
fistl
push
sub
flds
movsl
jo
cmpsb
adcb
scas
cmp
out
shr
sahf
jnp
es
jge
imul
imul
movsb
pop
sub
add
xor
dec
cli
stc
jae
sub
repz
pop
andl
sbb
int3
leave
in
div
loopne
stc
out
sbb
int
or
and
mov
in
cmp
inc
loop
cs
lret
cmp
faddl
mov
xchg
ds
mov
xor
pop
jge
dec
jmp
enter
imulb
inc
aam
push
push
out
xchg
xchg
and
jnp
insl
mov
idivb
mov
or
or
and
pop
sub
mov
sbb
mov
mov
xor
arpl
pop
ds
ret
scas
jge
scas
sarl
cmpsb
mov
fisubl
and
subl
or
mov
gs
pop
mov
cld
mov
mov
inc
leave
mov
and
xor
ljmp
jb
xor
out
add
and
and
pop
inc
test
call
jmp
movsl
cs
icebp
nop
pop
cmp
pop
scas
scas
mov
or
mov
mov
scas
adc
sub
mov
push
jge
clc
xchg
xchg
cli
sbb
repnz
cltd
call
dec
dec
repnz
mov
or
add
push
inc
cli
outsb
test
and
sbb
xor
pop
push
icebp
iret
and
shr
fs
inc
and
xor
add
or
bound
repnz
jg
push
xor
adc
sub
or
inc
fs
shlb
add
mov
fsubl
mov
movsb
dec
int
push
and
js
jle
xor
addb
mov
mov
dec
dec
ljmp
mov
inc
lret
ja
mov
fdivs
int
xor
sub
mov
pushf
and
test
sub
sub
adc
fistl
push
xor
stos
ss
or
push
push
xor
lea
and
push
insl
mov
mov
movsb
xor
fldt
sub
xchg
and
add
sub
dec
stc
das
stos
movsl
mov
fs
leave
je
sub
jbe
mov
or
sbb
and
mov
mov
add
les
push
xor
cmpsl
pusha
mov
xchg
xor
imul
das
lcall
sub
nop
roll
repz
jne
pop
pushf
mov
enter
cwtl
mov
push
dec
mulb
pusha
imul
xchg
iret
adc
push
imul
xor
jnp
sub
dec
push
mov
es
pop
mov
push
imul
inc
dec
std
arpl
lods
mov
bound
stos
cmpb
mov
dec
lock
lret
ret
nop
cmp
cmp
cmp
scas
sub
jb
loopne
ljmp
out
jb
outsb
mov
ja
xor
clc
cli
mov
xor
pop
mov
out
xchg
or
jns
out
lret
jecxz
int
cmp
add
adc
lret
dec
sbb
cmpsb
into
pop
push
xchg
adcl
push
pcmpgtw
fmul
mov
sub
fs
jno
mov
ret
push
xor
lea
jg
imul
and
xor
in
push
imul
rcrb
repnz
sbb
sub
or
aas
imul
dec
fld1
lock
loopne,pt
dec
inc
imul
int3
pop
mov
clc
dec
loop
add
inc
fidivl
outsb
les
mov
push
je
mov
sbb
fs
ret
aaa
icebp
dec
daa
inc
pop
loopne
aas
sbbl
rolb
filds
gs
sahf
daa
mov
jno
out
test
mov
inc
pop
andl
out
stos
xchg
dec
scas
popa
test
cmp
test
adc
enter
inc
outsb
sbbb
ret
ficomps
xchg
cmc
in
mov
imull
pop
xchg
sbb
test
movb
insl
adc
cmpsl
fdivl
je
cmpsl
xchg
int
cmp
mov
push
stos
pop
arpl
andl
sahf
lock
aad
cmp
pop
sbb
int
test
cli
or
or
repz
popf
and
inc
xor
aaa
add
test
mov
repnz
mov
loope
and
repnz
mov
dec
es
adc
pop
push
aam
sbb
fisubrs
mov
clc
mov
scas
jo
mov
push
and
and
mov
xorb
xchg
insl
xchg
jmp
dec
out
shlb
test
and
scas
daa
out
jmp
mov
addl
push
mov
aaa
mov
roll
pop
fsubrl
push
xor
ja
or
iret
xchg
sbb
dec
push
divb
adc
mov
ss
outsb
addr16
pop
pop
lea
mov
xchg
add
in
pop
dec
sbb
imul
shll
mov
adc
adc
sub
fstpt
sub
loopne
mov
pop
sub
cld
xor
jnp
les
mov
sbb
dec
or
pop
into
roll
outsl
dec
jae
mov
rcl
or
leave
inc
in
jmp
ret
pushf
push
dec
inc
inc
mov
insl
insb
xchg
pop
sub
jl
adc
push
add
shll
stc
mov
add
lock
nop
cs
pushf
fnstcw
shrb
out
sbb
mov
out
data16
lods
leave
add
xor
mov
sbb
mov
aam
mov
add
ret
repnz
out
xchg
loop
lods
inc
mov
imul
imulb
mov
xchg
ret
cmp
into
popa
cmp
loope
sub
jmp
pop
sub
imul
mov
pop
xor
xor
shl
add
adc
loope
lret
adc
xchg
bound
js
cmp
sahf
js
scas
xor
adc
leave
push
movsl
add
mov
aam
or
mov
cmp
aad
out
icebp
add
dec
pop
dec
imul
addr16
out
movsl
mov
adc
pop
add
cld
adc
test
arpl
insl
roll
dec
leave
and
sbb
aam
outsl
out
pop
add
stos
jae,pn
movsb
mov
add
mov
cmp
add
test
fimuls
cmpsb
pop
nop
push
push
pushf
dec
sbb
ret
cmpsl
inc
cmpsl
mov
dec
mov
mov
test
out
insl
ret
fstpl
xor
xor
mov
ljmp
cwtl
mov
inc
repnz
jge
and
leave
bound
add
dec
xchg
sub
fwait
pcmpeqw
and
sbb
ds
lret
in
outsl
icebp
jo
push
jnp
lods
sub
add
scas
in
andl
dec
ss
mov
and
inc
sbb
push
loop
aas
push
bound
outsb
mov
sub
sbb
ljmp
inc
adc
cmp
pushf
dec
mov
sub
mov
and
mov
js,pn
repz
lods
sbb
insb
pop
add
xchg
das
lcall
push
pop
xchg
xchg
std
stos
fmull
ret
inc
test
jne
mov
xchg
jns
mov
icebp
sbb
xchg
arpl
loopne
xor
cmp
cmpsl
sub
sub
push
out
mov
dec
lods
gs
scas
or
push
sbb
xchg
in
call
addr16
je
ljmp
jnp
aam
inc
push
imul
jl
pop
mov
add
cltd
push
clc
rcll
loop
jnp
fwait
ja
xchg
dec
mov
lea
jns
jbe
or
or
pop
lods
loopne
sti
stos
pop
out
xchg
push
clc
pop
jae
lds
das
stc
sbb
jl
jge
pop
cmp
inc
lahf
cmp
and
jns
daa
jo
mov
inc
out
sub
pop
fiaddl
push
jge
cs
or
mov
fdivrs
jo
aam
xchg
movsb
xlat
and
lods
hlt
cmp
pop
xchg
add
dec
pop
adc
out
popa
movsl
data16
aad
xchg
clc
push
dec
or
adc
and
and
pop
cmpsl
aam
mov
sbb
int
jne
lock
dec
in
les
xchg
lcall
cwtl
jmp
jmp
dec
push
inc
std
sbbl
xor
fwait
loope
inc
dec
jge
fistpl
add
xchg
push
push
scas
addl
jle
int3
jmp
shll
cmpxchg
xchg
jp
xor
insl
xlat
xor
mov
lods
xor
repz
jl
js
jbe
ret
cmp
mov
cmp
clc
jb
xchg
push
scas
inc
push
pop
mov
adc
sub
cmp
pop
mov
adc
lret
xlat
loope
loopne
stos
xorb
jb
push
ja
mov
scas
adc
loope
scas
addr16
mov
lods
pop
loope
movsb
push
add
insl
and
jno
xor
dec
es
push
xchg
loop
daa
mov
adc
ljmp
pop
mov
cmpsb
push
sbb
adc
cmpsb
cs
and
xor
fcoms
sub
mov
mov
pop
popf
lea
es
iret
daa
push
push
sbb
aas
fwait
lcall
movsl
mov
jge
cmp
lahf
pop
xchg
jl
xor
jne
cmp
push
divps
fdivrl
out
loop
inc
enter
cmc
add
xlat
setle
mov
insb
cmpsl
testl
dec
cmpsl
mov
dec
adc
and
lds
adc
or
pop
cmp
pop
mov
dec
and
dec
aam
popf
sbb
js
lcall
mov
out
mov
or
and
into
enter
add
xor
dec
jmp
out
sti
jp
cmpsl
flds
lea
dec
rorb
lret
xchg
pop
mov
sub
jecxz
jne
sbb
or
roll
xor
das
cwtl
dec
dec
mov
mov
aam
push
data16
jl
pop
lods
adc
jge
shl
fcmovnb
and
in
add
orb
rorb
test
xor
dec
icebp
push
mov
idivb
xchg
mov
or
xchg
xchg
xchg
insb
jb
adc
stc
ret
out
imul
inc
ret
xchg
daa
xor
mov
sahf
pop
add
aam
xor
push
outsl
scas
int
movsl
pop
into
mov
lock
aam
cmpsb
pop
xchg
jle
push
stos
pop
sub
cmp
rcr
aas
add
pop
out
jg
mov
aas
movsb
inc
bound
repz
imul
adc
call
fcompl
inc
int3
js
fcoms
test
dec
jnp
or
cwtl
decb
out
jg
pop
mov
inc
add
add
lahf
cmp
je
sti
pop
push
or
inc
daa
out
aaa
mov
loop
popf
dec
cli
jmp
mulb
inc
push
jno
stos
push
dec
loop
inc
cmp
pop
pop
test
in
stos
add
iret
jmp
mov
adc
xor
lock
and
pop
dec
mov
out
negb
pop
lcall
mov
xor
fwait
movsb
lahf
dec
cmp
xchg
out
shrb
adc
jecxz
test
sarb
leave
dec
enter
leave
adc
imul
sbb
mov
add
dec
psubusw
xchg
mov
test
sub
out
push
or
jecxz
pop
mov
push
push
int3
push
sbb
jo
adc
shrl
lret
push
sbb
das
stos
scas
bound
mov
jne
jae
cmc
or
lods
push
test
sbb
dec
sub
jb
bnd
mov
std
push
jmp
xor
xorb
mov
incl
jl
aas
rcll
and
push
dec
cmp
adc
mov
loope
call
adc
add
add
mov
subb
scas
and
push
pop
and
sbb
cmp
xchg
add
cmp
rcll
sbb
add
aas
mov
popf
jbe
cmpl
mov
divl
fwait
lret
jecxz
aad
jae
dec
out
scas
push
lds
ljmp
lds
hlt
inc
je
push
mov
orl
add
scas
in
pop
mov
shll
icebp
push
ret
pop
cwtl
ja
lcall
in
lret
adc
addr16
mov
mov
mov
pop
sub
rolb
xor
dec
rcll
or
in
insl
shr
fidivl
sbb
daa
imul
ret
ja
lret
pop
mov
fildll
adc
icebp
push
inc
test
cmpsl
push
cmpsb
pop
repz
push
lea
cmp
data16
js
pop
pop
dec
std
or
and
pop
mov
popa
out
jmp
loopne
sarb
inc
orl
popf
dec
inc
pusha
mov
and
adc
mov
push
cmp
cli
sbb
stos
rcr
inc
sahf
lea
out
test
and
xor
xchg
inc
pop
ret
or
scas
cmp
mov
fwait
into
loop
mov
bound
scas
scas
or
shll
mov
hlt
inc
jne
scas
test
push
pop
xchg
pop
pusha
cltd
jno
rol
in
nop
je
push
cltd
hlt
sbb
inc
jne
repnz
fwait
ret
cwtl
mov
cld
and
add
sbb
hlt
inc
mov
pop
mov
mov
lahf
daa
ret
add
xchg
clc
scas
xchg
orb
jp
push
loop
fcomps
mov
loop
mov
or
dec
rcl
ja
push
mov
sub
jecxz
js
pop
fs
test
add
ret
sahf
pop
and
call
inc
inc
and
inc
xlat
jns
hlt
cmpsl
and
lahf
dec
mov
fimuls
xchg
dec
lods
ljmp
in
mov
jne
cli
stos
sub
rorb
clc
inc
xlat
leave
pop
outsl
jbe
sub
insb
sub
and
add
or
icebp
int
notb
sbb
xlat
push
out
push
aam
adc
in
xchg
push
fdivs
cmp
mov
aas
cwtl
lds
jb
mov
push
clc
mov
imul
iret
lock
sbb
clc
popl
insb
into
mov
lods
test
lahf
arpl
xchg
xchg
mov
bound
aas
lret
loopne
mov
jge
nop
adc
jne
lods
std
cmp
sub
sub
pop
cs
in
sbb
insl
xchg
hlt
outsb
pusha
cwtl
mov
push
mov
leave
clc
push
jne
dec
ljmp
cmp
sti
data16
inc
jns
ljmp
push
pop
pusha
jo
pop
mov
les
es
enter
pop
mov
loopne
jnp
das
addr16
lea
mov
push
xor
and
in
and
mov
dec
loop
mov
popa
out
mov
stos
loope
sub
arpl
adc
sbb
iret
arpl
shll
fisubrs
xchg
sbb
mov
xor
xorl
dec
xchg
stos
pop
inc
jl
push
movsl
call
sub
fistpl
ljmp
push
sahf
jp
int
faddl
xor
incb
inc
mov
sahf
fbstp
gs
daa
dec
mov
or
mov
sub
mov
or
jno
xchg
sbb
rcr
add
mov
inc
mov
jmp
mov
iret
push
mov
or
test
jg
mov
bound
xor
pop
fldpi
dec
xchg
outsl
cwtl
xor
cmp
xor
xchg
cmp
push
pop
add
icebp
jo
repz
mov
int
aad
lods
aas
lods
ret
scas
icebp
add
jmp
xchg
push
xchg
ud0
repnz
outsl
jne
out
lcall
mov
dec
pop
gs
mov
jg
mov
push
outsl
pop
dec
in
mov
rorb
mov
inc
fsub
pop
repz
and
inc
xlat
cltd
popa
pushf
adc
lods
lcall
nop
test
imul
inc
xchg
cltd
pop
repz
inc
dec
insb
std
jns
test
decb
cmp
dec
mov
mov
in
xor
mov
stc
adc
and
and
mov
in
scas
push
lock
jle
loope
add
sbb
push
jne
add
dec
cs
std
sbb
int3
dec
jmp
out
clc
popf
sahf
loope
mov
lds
xor
mov
stos
icebp
mov
repz
rorb
fsts
sub
in
in
cs
and
or
mov
lret
xchg
into
dec
test
jnp
sbb
xor
lock
es
adc
call
cmp
mov
xchg
mov
cmp
adc
pop
negb
xor
mov
push
mov
or
js
push
mov
call
jae
ja
adc
mov
shll
lods
data16
cmp
popf
cli
lods
mov
xor
sub
adc
cmpsb
add
cmp
push
or
mov
pop
jge
add
sbb
es
push
test
and
repz
movsl
aas
loop
iret
test
sub
idivb
mov
arpl
sbb
ljmp
inc
or
shll
add
adc
jae
cmpsb
cmpsl
xor
mov
cmp
int3
push
ret
xchg
dec
stc
lahf
int
sub
fbld
jnp
mov
mull
xchg
cltd
add
xor
mov
jecxz
scas
test
cmp
xor
add
in
lret
test
push
push
inc
xor
mov
push
leave
lcall
xchg
sub
sbb
out
dec
cmp
jae
xchg
sti
fiaddl
stc
int
jp
pop
mov
xor
xor
cmp
dec
push
sub
add
aas
aam
pop
mov
pop
les
mov
pop
hlt
push
jmp
cmp
mov
xchg
lea
loopne
and
mov
cltd
rcrl
push
fisttps
orl
sub
std
xor
pop
push
mov
or
dec
inc
sub
scas
add
lock
pop
cltd
xchg
je
mov
add
add
mov
fcomp
or
cs
aas
lret
sub
cmpsb
das
push
pop
mov
and
mov
sbbl
fisubrs
data16
stos
repnz
test
ja
sahf
popa
cld
aas
js
popa
outsl
mov
enter
adc
inc
clc
stos
test
icebp
xlat
pusha
nop
outsl
jmp
fisttpl
xor
fcomps
or
mov
mov
aas
mov
in
vpunpcklwd
nop
inc
pop
lcall
and
fistps
mov
cmp
pop
adc
inc
lret
mov
mov
dec
mov
inc
fistpll
pop
push
xchg
adc
cli
sbb
dec
mov
stc
sbb
mov
xor
fstpl
sbb
icebp
pusha
mov
mov
fnstsw
movsl
or
push
popf
out
xchg
int3
and
sub
in
in
mov
xchg
pop
cmc
daa
es
mov
xor
sti
test
pop
add
mov
into
or
cli
mov
jns
fwait
jecxz
adcb
in
jb
cmpsl
jp
rorb
in
xor
cmc
aad
jp
imul
sbbb
test
fstpt
xchg
js
mov
lods
addb
push
sub
lock
es
das
ret
fsubrl
call
inc
pop
lds
mov
xchg
in
enter
dec
clc
push
mov
into
pop
inc
aas
mov
aas
cs
fs
mov
clc
sbb
sahf
sbb
fildll
mov
aaa
cmc
cmp
test
idivb
push
and
pop
into
test
dec
and
jl
push
imul
xchg
imul
sbb
in
jecxz
cs
cld
pop
and
jno
in
in
xchg
push
ret
loope
or
lcall
fwait
repnz
test
push
add
shlb
fwait
imulb
loope
fwait
jmp
inc
mov
push
jnp
scas
xchg
pop
aad
jo
xor
pop
push
shrb
pusha
ljmp
and
add
fwait
and
test
shrl
in
enter
pushf
in
in
and
je
iret
and
repnz
int3
mov
xchg
inc
dec
mov
xlat
insl
rol
lds
adc
fs
outsl
stos
sbb
call
jbe
xlat
mov
sahf
int3
ljmp
stos
lret
jle
push
stos
sbb
mov
add
inc
adc
mov
lock
jl
adc
mov
std
fists
lods
or
adc
jb
int3
mov
dec
xor
ds
jge
jno
sbb
jg
cmp
insb
fimull
jne
xchg
and
je
mov
lock
bound
and
mov
sahf
cmp
ss
and
popa
sbb
loopne
xchg
cmp
dec
cmpsb
int
xchg
mov
sbb
jl
lds
sti
mov
sbb
cmp
mov
xor
mov
lret
adc
in
jecxz
fidivl
push
push
add
lods
xchg
mov
test
jle
out
inc
ret
out
push
outsb
loop
into
popf
addb
or
mov
mov
sti
jmp
pop
pusha
ds
xchg
dec
stc
imul
inc
hlt
adc
pusha
cmp
or
mov
in
add
stos
pop
xor
jp
pushf
inc
aad
stc
cmp
es
sbb
lea
xor
mov
cltd
lahf
subb
ljmp
mov
or
jmp
mov
and
jecxz
push
es
jl
mov
jecxz
leave
inc
mov
mov
std
xchg
inc
pop
test
mov
jle
and
in
add
mov
int3
add
sub
sbb
mov
clc
mov
xor
jno
and
rclb
mov
cmp
les
inc
jp
rcl
lock
and
mov
xchg
xor
mov
daa
aad
test
dec
lea
inc
sbb
sub
add
xor
imul
mov
sbb
jmp
stos
add
pop
sbb
shr
jne
dec
xchg
bound
push
mov
jg
xchg
loope
lret
add
cs
mov
bound
lock
popa
sub
mov
xchg
pusha
adc
jae,pn
pop
sub
and
adc
xchg
lahf
cmp
pop
jp
sub
shlb
fwait
push
mov
fstpl
in
jmp
mov
mov
scas
movsb
and
in
jl
aas
ja
fnstcw
sub
xor
ss
mov
cmc
mov
pushf
pusha
clc
fs
mov
stos
dec
enter
mov
ret
push
pop
sbb
xor
xlat
mov
sbbl
sbb
or
je
push
pinsrw
aam
movsb
or
mov
cltd
in
sti
or
mov
sbbb
xchg
sbb
inc
aas
and
scas
mov
adc
sbb
aaa
or
push
lock
addr16
mov
pop
outsl
hlt
loop
push
xor
xchg
xchg
mov
int3
sub
lcall
mov
push
jae
sarl
mov
jecxz
aas
add
imul
and
sub
xchg
shr
inc
pusha
sub
or
lahf
or
push
mov
fwait
mov
mov
mov
insl
mov
mov
adc
pop
fisubrl
and
ret
add
lret
push
aaa
dec
xchg
dec
inc
push
aas
popf
sbb
popa
jnp
jo
cltd
scas
dec
cmp
bound
cmp
jecxz
pop
add
cmp
cmpsb
pop
cwtl
lock
mov
sbb
inc
xchg
jb
jmp
outsb
add
inc
sub
add
hlt
ror
adc
lahf
mov
loop
pop
sbb
jnp
cmp
std
cwtl
adc
stc
insb
pop
stos
sti
insb
outsl
lahf
mov
enter
jmp
bound
movsl
xchg
nop
mov
cmp
mov
stc
loopnew
pop
je
ret
rclb
mov
adc
in
and
popf
ficoml
and
push
inc
cmp
lahf
les
jecxz
dec
nop
arpl
mov
dec
movsb
sub
sub
std
notl
push
test
adc
or
into
movsb
cltd
test
adc
pop
mov
stos
and
xor
ljmp
lods
iret
aas
or
nop
xchg
and
stos
mov
fsubr
loope
mov
push
popf
adc
mov
lcall
leave
nop
mov
push
sbb
add
adc
jnp
mov
arpl
outsl
dec
inc
repnz
add
jp
mov
arpl
and
cmpsb
rcll
jo
repnz
jbe
or
loope
mov
jns
aad
sbb
inc
scas
out
jbe
stc
add
pop
popf
lea
or
xlat
cmp
push
into
lods
xchg
xor
aad
pop
imul
push
lahf
mov
iret
jne
rcl
sbb
out
inc
arpl
push
loop
mov
dec
or
outsb
mov
mov
in
es
movsl
sbb
mov
testl
sbb
xor
cmp
push
lret
sbb
jb
cmp
pusha
xor
push
or
lcall
call
jns
enter
hlt
lock
test
divb
mov
stos
pop
mov
test
add
mov
mov
ljmp
xor
mov
xchg
daa
into
js
mov
push
lock
mov
jbe
xchg
sub
je
cmp
cltd
xor
imul
lds
cmp
cmp
stos
je
pop
fildl
inc
mov
cmpsl
pusha
daa
cwtl
push
adc
fcoml
out
test
jo
fimuls
movsb
imul
stos
push
jne
in
gs
sub
pop
ret
lods
mov
pop
fstp
jle
cmp
aad
out
dec
pusha
mov
pop
dec
jl
sarl
inc
in
sbb
cs
shrb
es
jmp
lock
cmp
cmp
mov
std
jne
stos
xchg
jmp
mov
ljmp
rcrb
imul
scas
push
lahf
cwtl
pushf
mov
fidivs
cmovo
mov
mov
enter
jae
ficoms
rorl
outsl
test
mov
jg
cmpsb
sbb
adc
in
dec
cld
inc
int3
scas
mov
jb
pop
or
mov
mov
mov
pop
rorb
xor
dec
xchg
fsub
xchg
les
es
mov
cmpl
jnp
icebp
test
xor
dec
test
xchg
jmp
jp
hlt
sub
pusha
fsubr
or
jne
ss
dec
push
test
fisubs
test
cmpsl
jo
sub
lcall
jnp
xchg
cli
ja
mov
out
pushl
mov
cmp
push
mov
sti
out
ret
gs
pop
loope
clc
stc
xchg
mov
js
mov
pushl
pop
jo
pop
push
jg
jg
mov
ds
fs
sub
push
mov
push
push
jp
icebp
mov
jo
pop
adc
xor
push
jecxz
arpl
xor
jle
ret
mov
or
lods
inc
mov
cmc
push
push
fisttpl
pop
mov
insl
jns
dec
mov
cmpsl
fdivrl
addr16
fcmovbe
aad
pop
cs
loopne
sub
sub
xchg
repnz
sub
in
xor
sub
and
mov
cltd
pop
mov
add
add
add
aaa
sub
push
insb
or
push
add
ja
insl
dec
inc
call
mov
movsl
or
insl
or
loopne
sub
dec
or
jne
push
in
lahf
and
inc
mov
and
dec
dec
popa
and
mov
je
pop
pop
inc
or
fcomp
fisttpll
aas
or
lret
dec
mov
jp
movsl
pop
mov
loope
cmp
or
add
and
or
sub
xor
dec
fs
lds
add
data16
inc
dec
stos
pop
fcmove
cmp
push
adc
dec
cmp
dec
xor
lret
cld
test
xlat
and
in
mov
jecxz
lret
mov
or
insl
jp
insb
mov
enter
jnp
cwtl
add
push
ret
push
adcl
jmp
xchg
mov
rolb
imul
aam
icebp
push
add
cli
jmp
xor
enter
jp
popa
hlt
fistpl
xchg
fistpl
data16
test
pop
mov
out
aad
dec
mov
jne
jle
jl
int3
rol
adc
lea
out
push
or
jns
jnp
data16
sub
cmp
dec
lahf
pop
andl
cmpsb
sub
or
leave
dec
in
sti
loopne
push
fidivs
out
mov
push
push
cmpsl
outsb
adc
sub
ds
or
add
jne
loopne
mov
jmp
push
jns,pt
ret
push
xor
in
xor
repz
sub
sbb
and
jecxz
adc
movsl
addr16
lcall
incl
pop
sub
jg
cmpsb
mov
fwait
in
xor
fists
pusha
sbb
or
pop
xchg
int
pop
iret
push
andl
dec
mov
and
mov
fidivs
jo
pop
pop
icebp
cld
cmp
dec
mov
iret
scas
cmc
and
pop
xchg
xchg
mov
sub
push
movsl
xchg
push
inc
mov
stc
lock
lods
cmp
xor
mov
loop
ds
pusha
int3
jae
shl
cltd
rcrb
push
pop
adc
scas
mov
int3
pop
test
cltd
jp
push
nop
addr16
dec
mov
lea
add
or
pop
in
cbtw
jne
or
mov
inc
aam
jne
jno
mov
xor
inc
dec
mov
mov
jns
jb
lret
ret
rcll
cltd
call
jp
cltd
inc
jge
sbb
into
je
fbstp
add
mov
mov
pop
mov
push
mull
push
ljmp
repnz
xor
icebp
dec
mov
mov
lahf
cmp
std
sub
clc
insb
popa
push
addb
push
mov
xchg
out
int3
and
data16
mov
inc
push
jnp
test
out
xchg
and
loop
mov
jge
imul
rcrb
pop
xor
jo
push
mov
dec
addr16
sbb
imul
outsl
sub
pop
mov
dec
enter
cmpsl
clc
or
stos
in
jmp
sbb
test
arpl
jp
xchg
push
jle
jae
cwtl
outsl
xor
xchg
jae
sar
mov
lret
xchg
stos
bound
into
lods
pusha
fbld
dec
ficoms
mov
pop
inc
shrb
pop
pop
mov
adc
adc
sub
add
test
or
mov
sbb
add
rorl
sub
fcmovb
jge
out
sbb
fadd
outsb
push
inc
icebp
mov
adcl
dec
mov
cmp
mov
mov
mov
and
and
test
aas
xor
xor
jg
xchg
cltd
insb
aam
outsb
fbld
add
add
fs
daa
add
jne
xor
out
cli
xchg
inc
add
dec
cwtl
das
orb
mov
fsubrs
lahf
adc
bound
enter
mov
or
mov
movsb
xor
push
iret
lahf
xchg
add
push
inc
shlb
cmc
scas
push
xchg
jge
mov
aad
scas
jl
jg
push
hlt
lds
inc
lcall
cmp
insb
cld
jo
or
adcb
pop
jnp
adc
test
mov
sarl
inc
in
lds
loopne
xor
inc
fcmovne
loope
xchg
add
scas
sbb
andb
sub
jno
jno
adc
in
pushf
ds
jg
inc
enter
iret
push
in
and
mov
jp
jecxz
je
cld
sub
stos
mov
and
fisubrl
mov
cmpl
xor
or
imul
popf
sarl
add
enter
test
cmc
scas
sti
fs
ss
jne
adc
adc
fs
push
insl
add
cmp
fildll
mov
mov
lea
push
in
cmp
xchg
cs
push
stos
jb
test
pop
in
in
lret
xchg
ret
push
in
inc
stos
inc
insl
xchg
adc
jno
std
scas
sti
pop
add
mov
jo
in
cmp
cmp
push
dec
loopne
in
cmc
inc
xor
cmp
gs
andb
sub
pmaxub
add
test
mov
incb
aam
pop
mov
cwtl
cmpsb
pusha
cmovns
push
mov
mov
ljmp
cmpsl
xchg
adc
out
mov
shll
shr
inc
dec
dec
std
inc
push
and
cmc
cmp
nop
in
outsb
mov
in
mov
inc
cmpsl
or
test
dec
adc
cwtl
or
pop
pop
ja
xchg
mov
cmp
sbb
push
xor
sbb
outsb
lret
sub
cmc
sbb
sub
sbbb
cltd
fisttpll
mov
add
sbb
pop
stos
gs
sub
je
int
push
imul
movsb
and
jecxz
adc
imulb
icebp
cld
mov
aam
loop
loope
sti
test
inc
addb
icebp
std
pop
cmp
shlb
fdiv
popf
push
xlat
add
pop
mov
roll
addl
sbb
repz
fisubrs
push
int3
add
les
ja
push
adc
insb
test
sbb
sti
sub
mov
loopne
sub
lret
cmp
adc
pop
sbb
and
inc
pop
imul
mov
push
dec
ret
sbb
out
nop
xlat
frstor
jb
sub
fbld
adc
add
leave
insb
cmpsl
mov
mov
es
mov
push
andl
cltd
xchg
loop
mov
xor
dec
mov
cli
movsl
push
sbb
jo
xor
dec
sbb
xor
ss
lds
cwtl
cwtl
fldt
mov
or
inc
pop
or
fidivl
lods
dec
push
int
outsb
nop
loop
mov
into
ret
lret
push
gs
cs
aaa
sbb
mov
in
inc
das
pop
fldcw
xlat
mov
jo
daa
les
dec
popa
mov
cmp
pop
je
inc
jl
jg
xchg
sbb
adc
icebp
jp
inc
sub
push
cli
mov
repnz
sbb
pop
pop
mov
jl
in
and
push
add
jno
aaa
and
sbb
xor
in
and
loopne
push
mov
aam
push
inc
dec
add
cmp
imul
jne
jno
dec
sub
xor
pop
pusha
add
pop
nop
sbb
xchg
test
or
movsl
jns
xor
jne
adc
mov
sub
jo
jmp
cld
outsb
fisubs
stos
pop
mov
push
inc
cmc
cmp
dec
dec
dec
rorl
xor
mov
addr16
push
add
cmp
sub
jmp
hlt
out
scas
out
inc
outsl
sbb
hlt
push
rclb
or
pop
xchg
cs
dec
ss
mov
cs
cmpsl
das
inc
adcl
lret
ss
jle
arpl
data16
dec
insl
push
lds
lahf
jg
inc
mov
aaa
test
sbb
sub
inc
xor
jp
push
or
iret
scas
dec
mov
adc
mov
inc
dec
scas
pop
adc
or
repz
add
es
push
xchg
cmp
rcrb
sub
mov
add
pop
jmp
xchg
ss
and
out
out
or
fsubrs
bound
mov
add
mov
ja
jmp
pop
mov
iret
dec
cld
xchg
es
or
jb
pop
in
cmc
mov
hlt
pushf
jbe
sub
push
cwtl
cmp
ja
mov
popa
out
jns
mov
cmp
imull
mov
or
cmp
in
or
lret
mov
sub
add
cli
xlat
mov
out
add
stc
xchg
imul
pop
loope
lds
fsubs
sar
pop
maskmovq
testl
mov
jne
jb
xor
mov
xchg
xchg
repnz
lods
outsb
fidivrl
gs
xchg
add
add
cmp
dec
leave
fildl
mov
test
int3
stos
xor
mov
movsb
test
xor
arpl
and
into
xchg
jle
cmp
orl
dec
mov
and
sub
aas
mov
pop
pop
add
mov
cmp
aad
adc
dec
and
mov
jbe
jge
and
sti
andb
sub
push
mov
stos
popf
mov
pop
mov
xchg
xor
xchg
and
sub
sbb
push
popa
aaa
lea
cmp
arpl
mov
pop
mov
or
mov
or
cwtl
and
jmp
mov
test
push
mov
jnp
jb
jae
dec
mov
pop
xchg
jne,pt
or
daa
jbe
mov
xor
push
orb
add
dec
mov
fdivrl
mov
or
inc
mov
mov
int3
out
repz
nop
sub
iret
js
orl
push
imul
test
lahf
xchg
cmpsl
or
mov
push
jne
xor
repnz
pop
or
adc
jp
aam
cmp
lds
sahf
adc
pusha
xchg
xor
loopne
lahf
xchg
mov
xor
or
dec
gs
jo
pop
lcall
rcrl
adc
cmp
jmp
call
push
sbb
xor
or
cmp
sti
les
pop
pop
std
lret
sub
out
mov
cld
or
pushf
loop
iret
mov
push
insw
or
nop
adc
stc
sti
ja
sbb
jne
inc
xor
adc
ret
andl
adc
or
adc
fcmove
inc
movsb
jno
cmp
or
jb
mov
mov
fnsave
js
cmc
call
mov
cld
adc
pop
sub
or
ret
shlb
mov
out
xchg
popa
mov
lret
xor
js
xchg
and
sub
fsubrs
mov
or
lods
movsb
stos
sub
movsl
aas
aaa
ret
es
add
mov
xor
jb
cmp
pop
test
fdivrs
add
ds
mov
inc
adc
cmp
lods
xor
jne
cmp
add
imul
int
push
pop
adc
repz
cmp
dec
sbb
cmp
add
imul
sub
jg
xchg
fidivrs
mov
daa
fstp
pop
or
lea
cmp
test
test
push
and
or
jle
data16
int
sbb
andb
inc
testl
xchg
push
adc
dec
cmp
fs
ret
pop
popa
sub
sub
int3
loop
xchg
push
pusha
fwait
cmp
push
jp
test
sbb
subl
pop
sub
dec
mov
movsl
nop
jnp
cld
js
or
inc
je
aas
ret
sub
lcall
mov
hlt
insb
ret
fsubs
mov
mov
xchg
test
adc
negb
sahf
adc
jg
inc
mov
xchg
jno
cmpl
push
push
std
cmpsb
cli
repz
xor
js
arpl
jnp
out
jne
push
cmp
test
cmc
add
aam
cmp
nop
fmull
cmp
rcll
scas
inc
push
sbb
ss
push
mov
aas
ret
shlb
mov
sbb
mov
pop
sub
sub
xor
xchg
out
pop
shrl
ret
jae
cmpb
push
lds
pop
js
jle
xor
out
sub
jge
fnsave
xor
and
mov
ljmp
clc
xchg
stos
add
pop
scas
adc
cmp
cmp
inc
sub
clc
push
js
les
icebp
dec
mov
add
mov
sbb
adc
fldt
cmpsb
and
test
xor
pop
andb
sbbl
icebp
jecxz
push
jge
dec
push
adc
in
add
or
sub
dec
xlat
in
int
add
shll
mov
neg
fcomps
xor
lock
repz
lds
cli
cmpsb
pusha
scas
xor
pop
mov
sub
sbb
das
or
je
or
test
lock
mov
bound
std
push
sub
nop
outsl
cmpsb
push
mov
stc
mov
adc
in
int
test
dec
stc
xchg
push
rcr
dec
lock
aad
jns
mov
xchg
test
das
sahf
hlt
imul
stc
sbb
pop
movsb
mov
lods
hlt
scas
aam
push
aad
pop
test
mov
popa
mov
clc
inc
mov
push
push
stos
fucompp
nop
out
sbb
fdivl
jl
clc
or
xor
sbb
xchg
push
ficoml
scas
pop
adc
mov
pop
mov
or
addl
bound
hlt
jbe
dec
mov
xchg
or
mov
xchg
dec
push
shll
fmul
je
cmpsb
ss
das
or
ret
adc
lret
cmp
aaa
lret
dec
outsb
or
lods
je
pop
pop
cmp
fisttps
add
lds
gs
inc
add
cld
shlb
push
loope
stc
inc
or
push
leave
xchg
push
lahf
mov
imul
bound
sbb
sti
mov
mov
mov
leave
into
js
pushw
jl
in
jl
mov
mov
incl
in
and
push
adc
xor
sarl
sbb
ficompl
and
loope
jmp
sbb
ss
fldcw
lea
ss
push
stos
mov
mov
push
mov
ss
inc
mov
fsubrs
pusha
lahf
push
movsl
stos
in
push
lea
stos
mov
into
sub
xor
pop
repz
arpl
or
xor
or
popa
add
push
jae
cmp
gs
movsl
and
sub
mov
inc
cwtl
and
jp
push
fwait
ljmp
add
or
lods
pop
std
add
daa
iret
lcall
or
cmpsl
sahf
pop
inc
cs
scas
mov
lret
nop
jge
jle
enter
in
mov
filds
push
cmp
mov
and
es
mov
xor
pop
sub
cmpsl
xchg
jmp
scas
xor
mov
loope
mov
push
jo
adc
imul
fs
int3
push
roll
cmpsb
out
mov
mov
mov
iret
test
hlt
jnp
jnp
pop
cwtl
shr
cmpsl
popl
sub
mov
aaa
cmp
dec
xorl
jae
out
lock
sub
stc
pop
push
mov
outsb
inc
xchg
addr16
push
mov
and
pop
cli
clc
test
decb
rol
sar
mov
jp
dec
lds
and
xlat
ret
lret
sbb
inc
dec
mov
sbb
mov
std
lcall
pop
mov
and
jg
adc
pop
sub
mov
and
int
mulb
imul
outsb
orl
fldl
mov
es
out
repz
out
pusha
and
inc
cli
fwait
test
jne
inc
loopne
xchg
xor
push
mov
xchg
mov
addb
in
mov
mov
mov
inc
add
cmp
clc
scas
cmpsb
cmp
pop
push
jb
pop
mov
push
push
mov
mov
ficompl
lods
dec
mov
stos
js
cltd
push
roll
mov
arpl
scas
call
sti
push
loope
cli
mov
lock
add
xchg
fwait
popf
fsubl
enter
pop
jne
rorl
cmp
mov
add
jae
into
fdivrl
mov
outsl
sub
cmp
sub
xorb
sahf
inc
mov
imul
sbb
sub
jo
adc
movb
mov
into
popf
lds
insl
jns
jne
outsl
pop
push
push
roll
fwait
sti
push
fists
sbb
jbe
push
xor
jle
cltd
ret
dec
pushf
idivb
hlt
scas
nop
sbb
sub
dec
mov
aaa
push
add
sti
ret
mov
incl
lret
stos
xorl
outsl
mov
or
mov
andl
sub
shr
sub
loope
rcrb
pop
push
inc
sbb
out
daa
and
add
mov
xchg
shrl
pop
jne
aaa
fnsave
bound
addr16
loopne
mov
inc
dec
test
out
xor
and
int
int3
out
sahf
test
fcmovb
or
imul
xchg
xchg
lea
clc
inc
aam
fdivp
lods
out
jecxz
adc
xchg
cld
iret
inc
pmullw
pop
inc
test
mov
mov
lcall
scas
mov
mov
loop
pop
mov
and
or
mov
xchg
xor
cmpsl
lcall
mov
ret
fprem1
rcrb
lea
cmpsb
jb
sahf
mov
pop
dec
cmp
lret
pop
ljmp
cs
pop
push
sub
imul
lret
push
out
aad
jg
lods
sbb
sub
arpl
cmp
pop
leave
pop
aas
ljmp
xor
stos
mov
addr16
int3
jp
rolb
xor
loop
adc
add
sbb
inc
popf
mov
aad
xchg
xchg
sub
sbb
stos
sbb
bound
sbb
aam
cmp
outsb
adc
daa
mov
jle
mov
and
aad
and
and
sbb
or
sbb
jne
push
mov
les
test
outsl
in
out
test
pop
sub
lods
mov
inc
loopne
mov
into
insb
xor
rep
pop
inc
xchg
fcoms
mov
mov
lcall
data16
mov
and
movsb
adc
mov
add
or
inc
jge
lock
cwtl
mov
xor
repnz
ja
dec
xor
xchg
aaa
xor
mov
xchg
pusha
mov
les
jae
pop
mulb
cmp
cmp
popa
icebp
and
push
pop
sarb
les
xor
test
pop
jge,pt
sub
push
int
add
jb
jnp
popf
into
clc
jp
xchg
lods
mov
xor
sub
mull
mov
lret
lock
cmp
cmpb
sbb
stos
movsl
pop
dec
sti
mov
mov
jb
ds
pop
stc
and
push
das
mov
xor
or
lock
jecxz
mov
dec
aas
inc
push
xor
cltd
pop
insb
rcll
clc
rcll
inc
adcb
dec
daa
testl
mov
stos
cmc
das
cmp
lds
add
sbb
mov
iret
rorb
inc
xor
sbb
iret
push
test
fildll
inc
adc
dec
lea
dec
sub
insl
fldcw
push
ljmp
sub
xchg
pop
pusha
imul
leave
scas
mov
addl
xor
dec
xchg
sbb
jge
lock
sbb
pop
sbb
push
xchg
imul
std
pusha
push
inc
or
cmp
inc
inc
jge
inc
xchg
push
dec
mov
jae
int
jecxz
imul
push
in
xor
js
in
not
leave
fimuls
push
pop
repnz
subl
mov
add
testb
cmp
lods
adc
roll
outsb
add
jge
adc
stos
ret
mov
mov
pop
cmp
imul
xlat
imul
mov
xor
push
dec
frstor
push
push
pop
sbb
pop
inc
inc
dec
sub
cmp
fs
sbb
ss
cltd
addr16
fsubr
addr16
cli
repnz
mov
mov
push
and
adc
xchg
xor
lock
adc
js
dec
out
sbb
cmp
jae
jbe
data16
les
fwait
clc
clc
mov
jno
xchg
sub
dec
push
loopne
andl
pushf
popa
jne
sub
and
pop
retw
xchg
je
sub
mov
out
and
cwtl
push
push
ljmp
fcompl
cmc
repz
dec
aaa
mov
sub
pop
fldl
repnz
outsb
orl
outsb
jmp
xchg
xor
sub
pop
mov
cmc
xor
cmp
out
in
outsl
add
lods
sub
pop
dec
mov
stc
sbb
les
mov
adc
adc
and
jge
mov
mov
cs
addr16
jno,pt
dec
adc
imul
scas
or
jnp
repnz
loop
cmpsb
test
jecxz
pop
pop
add
das
or
or
or
mov
ljmp
addr16
pop
out
pop
mov
adc
dec
ljmp
js
sbb
rcrb
sub
jnp
dec
xor
pushf
add
jle
gs
sub
adc
xchg
mov
cli
lods
mov
push
cltd
and
shll
insb
lock
inc
int3
pusha
cmp
push
xchg
push
sub
pop
lret
addl
cmp
out
dec
bound
ljmp
cmc
push
pop
jo
addr16
and
mov
jl
sub
xchg
pop
in
mov
mov
mov
mul
fcoml
int3
sub
lds
or
stc
pop
test
int
xchg
inc
sbb
mov
lret
fstpt
sub
dec
dec
jle
add
ret
lock
mov
mov
dec
mov
jl
mov
movb
add
mov
aad
sbb
ds
push
or
push
xchg
out
lcall
lods
sbb
cmpsl
push
fidivl
out
ljmp
mov
lret
popf
je
jnp
pop
int
dec
mov
cli
leave
or
out
adc
cmp
push
adc
mov
or
add
jbe
rorb
jl
xchg
push
ret
cmpsb
sbb
pop
dec
cmp
inc
cwtl
jecxz
dec
aas
sti
pop
and
mov
sub
sub
cmpsb
push
test
dec
imul
add
push
hlt
lds
insl
test
push
rorl
sbbb
out
jmp
xlat
xchg
or
dec
dec
cltd
mov
out
inc
cld
sub
push
and
icebp
dec
pop
lahf
out
ret
scas
inc
inc
lods
sbb
sbb
add
jns
insl
jae
push
in
and
mov
aad
xchg
in
cmp
enter
sbb
jp
lahf
cmpsl
ljmp
sub
sbb
cmp
mov
hlt
mov
add
pushf
rcll
idivb
jg
mov
icebp
fs
pop
addr16
fs
cmpsb
cmpsl
push
pop
push
leave
testb
rcll
dec
out
notl
or
insb
out
fwait
and
dec
pop
mov
stc
cmp
jmp
add
adc
dec
clc
nop
cmp
pop
in
out
mov
mov
jl
add
lock
xchg
aad
adc
lcall
dec
nop
rcrl
jge
iret
dec
gs
push
adc
push
fisubs
adc
cmp
xchg
lret
cmp
xchg
jmp
cmpsb
cmpsl
loopne
pop
mov
clc
inc
int3
fdivr
adc
sub
mov
jae
loop
xor
xor
call
cmc
lds
iret
sbb
and
scas
out
mov
out
add
aam
sub
pop
add
push
popa
jmp
roll
mov
ret
sbb
sub
ret
or
subl
adc
and
dec
adc
dec
js
popa
xor
xor
insl
fidivrs
pop
adc
rcll
mov
xchg
dec
mov
rcrl
decb
je
cli
push
test
jge
sbb
pusha
push
jle
sub
dec
adc
jo
pushf
sbb
ret
scas
mov
mov
cltd
in
mov
into
sarb
mov
cmp
inc
sub
in
sbb
sbb
fiadds
daa
pop
pop
jg
pop
add
lret
xchg
subb
and
leave
mov
mov
jo
imul
jmp
pop
fistl
push
xlat
sahf
test
loop
xor
jae
test
xchg
xor
clc
sub
cltd
fnsave
je
fsubs
and
inc
data16
push
cmpl
mov
popa
cmp
add
dec
cli
mov
mov
lea
movsl
test
pop
push
in
popf
iret
call
pop
pop
cld
adc
ret
xchg
inc
call
lods
jp
aam
dec
xchg
xor
and
insl
sub
jae
je
dec
imul
jmp
out
xchg
and
lds
or
out
push
leave
jae
and
out
out
pop
ja
cmp
mov
call
inc
pusha
sbb
pop
jg
push
outsl
rclb
and
testl
mov
stos
push
out
jecxz
fwait
adc
fcmovne
xor
and
pop
pusha
loopne
add
pop
mov
mov
adc
aaa
adc
jae
insb
popa
pop
inc
jae
aad
cmp
daa
adcl
push
push
je
mov
lods
xor
mulb
xchg
sbb
sbb
lods
mov
mov
gs
adc
push
outsl
dec
sub
les
outsl
into
or
xchg
ljmp
sbb
fstl
add
pop
outsl
cmp
and
mov
insb
dec
dec
and
mov
in
or
sar
pusha
inc
xchg
cmp
and
mov
pop
out
cmp
dec
imul
nop
push
nop
lret
les
xor
sbb
adc
pop
fldenv
icebp
rcrl
lock
pop
dec
xor
fwait
dec
xor
stos
jne
cmc
icebp
leave
fstps
sti
jbe
imul
fstpl
mov
movsl
adc
sbb
mov
mov
mov
stc
lret
pop
xor
aad
sbb
repnz
dec
inc
fimull
mov
mov
sbb
add
cli
add
xchg
ljmp
adc
xor
gs
push
jno
cmp
inc
sbb
adc
dec
test
add
and
adc
cmpsb
les
dec
ficoml
push
lock
aad
clc
leave
movsb
pop
popa
fnstcw
dec
sahf
inc
fmulp
mov
fiaddl
inc
add
inc
mov
mov
mov
enter
xor
jo
push
pop
mov
push
mov
nop
inc
cld
mov
jge
fisttps
fstps
pop
sbbl
push
xchg
and
loope
sahf
mov
sub
sub
jbe
jle
in
jbe
sbb
and
jg
cli
addl
sub
lds
clc
gs
jb
sarl
lods
or
decl
add
adc
arpl
hlt
cmpb
in
popa
push
cmp
sub
aad
push
data16
xor
inc
add
lahf
cmc
sbb
lods
dec
cmp
ds
andb
push
jb
out
adc
shll
lock
pop
mov
ret
ja
out
loope
ds
mov
push
xor
das
dec
test
aas
lcall
xchg
mov
or
dec
and
or
pop
jg
mov
pop
movsb
mov
or
pop
mov
stos
loope
roll
add
lods
inc
adc
jmp
mov
or
roll
mov
add
push
scas
mov
rcl
les
cmpsl
xor
imul
dec
jg
std
int3
pusha
das
imul
pop
mov
enter
loope
dec
into
mov
lods
sbb
jp
js
int
cmp
lret
fistl
movsb
in
push
jmp
cli
cld
sbb
scas
sbb
jl
xchg
adc
int3
xchg
std
cmc
fcos
push
add
inc
jo
add
mov
jmp
xor
sub
hlt
mov
lds
xchg
adc
cmpsb
dec
mov
xor
lret
inc
dec
xchg
pop
xor
xorl
repnz
jns
sti
jl
cmpsl
mov
push
jbe
scas
mov
insb
sbb
mov
scas
cwtl
sbbl
mov
xchg
insb
rcl
loope
idivl
add
sbb
mulb
enter
je
sub
jecxz
push
pushf
or
sub
or
arpl
dec
test
mov
repnz
jb
xor
in
ds
loope
add
jg
pop
xor
and
push
jmp
iret
and
mov
stc
and
das
adc
mov
in
scas
cwtl
daa
js
shl
cmovle
out
data16
push
fwait
in
mov
pop
pop
pop
sub
fwait
ret
out
dec
cmp
mov
rcrl
mov
mov
loope
adc
add
inc
xor
add
xchg
jp
mov
xchg
inc
sub
pop
lret
stos
ss
or
repz
push
sti
fistpll
mov
sahf
in
dec
jnp
orl
lods
pand
cmp
push
fildll
xorl
idivl
jb
mov
loope
inc
mov
jge
push
test
add
mov
fmull
jg
adc
xchg
aaa
stc
dec
test
inc
outsl
xor
arpl
sub
into
repnz
push
divb
and
push
mov
dec
xor
scas
lods
das
cmp
test
pop
inc
jnp
or
push
lret
lods
lods
add
hlt
mov
fmull
cmpsb
add
mov
loope
ds
jno
scas
in
xor
mov
mulb
cwtl
and
pushf
mov
or
mov
insb
cmpsb
cmc
pusha
call
inc
sbb
pop
stc
ljmp
xor
lods
out
js
pop
cmp
push
addr16
les
pusha
jecxz
ja
pop
incb
jmp
cmc
cmpsb
popf
jno
loope
mov
cmp
mov
lods
mov
mov
inc
popf
sti
fwait
scas
in
icebp
pop
jg
inc
and
mov
imull
lahf
and
fwait
test
test
arpl
movsl
pop
subb
movsb
inc
mov
pushl
lds
rorl
aad
pop
or
xor
pushf
adc
mov
das
cltd
icebp
shrb
xchg
cltd
imul
lret
mov
sbb
push
rol
adc
push
jbe
pop
mov
pop
stos
pop
movb
add
pop
pop
inc
bound
cmp
cmp
das
jbe
mov
cmp
and
and
mov
popf
cmc
stos
inc
popf
inc
fidivs
ja
dec
cltd
jne
push
int3
xor
mov
adc
pop
push
iret
roll
in
and
cmpsb
sahf
jmp
faddl
inc
xor
sbb
stos
loop
cwtl
icebp
sub
jns
notb
ja
subl
cli
push
mov
jne
jg
jmp
xor
xchg
xchg
or
jl
mov
sub
cmpl
inc
out
outsl
pop
sub
and
or
dec
aam
cmp
clc
inc
loope
cmp
inc
sub
in
cmp
ret
hlt
loope
in
jns
push
lods
icebp
cmp
in
push
andl
iret
cmp
in
pop
icebp
enter
mov
repnz
jle
and
ficoms
shlb
loope
push
adc
xor
sub
adc
inc
fwait
out
mov
and
into
xchg
mov
mov
pop
mov
and
mov
inc
push
adc
adc
loopne
jno
sbb
pusha
jmp
or
push
mov
cmp
cmp
adc
es
pop
mov
popa
mov
sti
enter
cmp
xchg
xor
jno
mov
push
inc
xchg
jecxz
xor
sbb
inc
xlat
cmp
cmp
rol
stos
add
dec
xlat
mov
imul
lahf
or
leave
nop
or
push
cwtl
mov
out
das
cmp
out
cmp
ret
test
xchg
pusha
mov
movsb
mov
neg
sti
faddp
xor
xchg
addr16
inc
mov
sub
cmp
sbb
add
hlt
xorl
jno
inc
fidivl
mov
sub
or
imul
add
cld
sbb
inc
and
xchg
fwait
push
mov
add
je
pop
or
jno
in
pop
push
dec
inc
sti
adc
imul
cmp
mov
sbb
popa
rorb
andb
push
out
cmpsl
pop
jp
sub
stos
js
or
mov
div
data16
subb
daa
inc
pop
data16
in
mov
jmp
pop
imul
or
movb
mov
aam
cld
jne
adcb
sub
outsb
pop
xchg
xchg
and
xor
cwtl
mov
mov
cltd
lcall
xor
jecxz
enter
lods
out
and
insb
sahf
shrl
hlt
xor
adc
xor
mov
repz
cmpsl
cmp
data16
cmp
testb
xor
dec
dec
xor
xchg
mov
cwtl
and
pop
cli
fxch
inc
mov
adc
push
xor
ds
and
mov
push
sbb
aas
aas
inc
jg
mull
mov
xchg
std
pop
rcrb
push
jle
shll
pop
cmp
dec
pop
jae
jp
mov
das
pop
xor
pop
xor
xchg
lods
nop
repnz
pop
add
pusha
lcall
sub
pop
adc
fs
push
std
clc
in
or
mov
hlt
jbe
xorb
jne
divb
mov
int3
std
loop
cmp
and
pop
sbb
lahf
les
inc
mov
push
mov
call
rclb
adc
dec
aas
lds
jae
loop
arpl
test
leave
outsl
add
push
fldcw
xor
jnp
pop
sti
mov
dec
push
fcomip
jmp
pusha
mov
daa
push
es
loopne
mov
mov
xchg
mov
push
and
sbb
push
out
mov
pop
xchg
out
sub
int
icebp
icebp
xchg
lea
xchg
stos
lret
test
dec
dec
jns
popa
or
inc
push
out
jo
pop
leave
movsb
pushf
or
push
shl
dec
lods
fbld
pop
movsl
cmp
xchg
iret
popf
stos
xchg
xor
fwait
dec
fcompl
sbb
dec
inc
and
rcll
mov
in
sti
outsl
xchg
inc
mov
dec
cmc
push
repz
inc
jbe
cli
mov
fwait
into
ror
test
inc
jmp
dec
inc
jbe
adc
sbb
hlt
nop
shr
ds
sub
rorb
push
mov
inc
or
push
lahf
mov
jo
xor
mov
push
pop
dec
test
push
inc
mov
lods
xor
dec
sbb
dec
inc
and
add
push
es
popa
cmpsb
mov
outsl
sbb
adc
clc
or
jge
xchg
mov
out
aam
mov
mov
ret
inc
hlt
sub
add
arpl
sar
daa
data16
inc
andl
shlb
inc
popf
lret
pop
xorb
xchg
cmc
lahf
dec
cmpsl
roll
ret
popa
fcoml
jge
ret
push
and
repz
repz
rorl
shrb
in
push
shll
dec
adc
sub
inc
lea
pop
in
aas
fwait
xor
mov
inc
mov
adc
inc
push
mov
sub
sub
test
xor
add
mov
adc
jne
dec
mov
xor
mov
mov
popa
mov
repnz
adc
add
push
aaa
stos
sbb
pop
enter
scas
movzbl
insl
aas
fisubs
aaa
inc
inc
add
sub
dec
pop
daa
jg
sahf
cld
adc
cmp
mov
mov
lahf
les
and
pushf
and
dec
pop
mov
ljmp
scas
sub
outsb
and
mov
lahf
jp
lret
lods
pushf
nop
sti
sbb
mov
jae
jne
mov
push
pop
pop
xchg
insb
xor
in
push
jp
repz
pop
outsl
xchg
xchg
cwtl
fildll
or
out
sbb
test
dec
cmp
add
xor
scas
jno
in
pop
and
movl
xor
and
movsl
sarb
jmp
adc
fs
shlb
dec
fstpt
and
cld
sbb
jecxz
in
sbb
mov
sub
push
pop
mov
mov
movsb
and
lea
pop
push
cld
xchg
cmp
lods
insl
mov
stos
mov
push
push
pop
jp
out
sbb
adc
cmp
and
or
int
adc
xchg
adc
out
inc
mov
pop
dec
push
adc
mov
pop
xor
imul
ja
std
cmc
dec
push
dec
fisttpl
inc
dec
outsb
cmp
or
push
into
in
cs
jb
fstl
mov
pop
xchg
xchg
pop
cmp
cmpsb
in
push
mov
cmpsb
hlt
scas
cmpsl
lahf
jp
bound
filds
pop
div
sbb
mov
push
insl
out
movsl
cltd
dec
out
cmpsb
adc
mov
add
stc
xchg
pop
dec
gs
fiadds
xchg
sbb
mov
cmp
adc
dec
xchg
mov
int3
mov
imul
mov
out
inc
adc
add
outsb
mov
cmp
push
xchg
add
aas
sbbl
popa
fs
pop
pop
mov
cltd
mov
push
sarl
sbb
push
inc
test
add
ret
add
stc
stos
mov
lret
lret
or
jge
add
adcl
fmuls
test
stos
xchg
out
js
shr
adc
aad
xor
test
daa
sub
jmp
test
and
and
cmp
jmp
fwait
xor
cmp
push
in
mov
sahf
je
jge
push
xor
aad
fwait
xchg
ja
aaa
scas
mov
ss
lcall
addr16
or
ss
aad
adc
repnz
push
loop
push
xchg
outsl
fistps
mov
fisubrl
into
dec
pop
icebp
divl
mov
in
loop
xchg
jae
lret
inc
mov
imulb
push
push
push
pushf
lods
mov
dec
lods
xor
sarl
xor
mov
dec
jns
mov
jnp
in
cli
lds
ljmp
xorb
and
loop
mov
imul
jmp
loope
fadd
add
int3
int
add
push
adc
cmp
mov
pop
cmp
pop
pop
inc
mov
mov
out
rcl
jns
sarl
add
mov
lahf
fs
stos
into
adc
mov
sub
adc
xor
mov
lods
or
movsl
jl
mov
sti
sbb
loopne
sub
arpl
mov
cwtl
addb
fimull
add
scas
loop
dec
xchg
sti
insl
dec
pop
insl
icebp
incl
sub
cmpsb
adc
outsl
outsl
lret
jmp
stos
jno
pop
mov
out
jle
ret
lds
subb
lahf
inc
leave
xchg
notl
jbe
jbe
push
adc
mov
push
movsb
push
sub
mov
divb
jo
stc
and
sbb
sbbl
in
sbb
arpl
pop
mov
jge
imul
cmc
aaa
mov
jg
aas
push
cmp
sbb
test
cltd
xchg
ret
and
outsl
negb
mov
lahf
lea
outsb
call
mov
fisubs
mov
add
fs
out
sbb
mov
jns
iret
add
pop
mov
push
int
dec
inc
jmp
jp
adc
fwait
jns
ljmp
aas
lret
adc
sbb
dec
nop
mov
xchg
adc
stos
sbbl
sbb
mov
push
xor
aas
push
push
push
loopne
sbb
xchg
inc
test
ljmp
jne
imul
jecxz
pop
pop
and
cmpsl
and
out
mov
mov
xchg
inc
in
pop
fs
cmp
hlt
lods
mov
mov
lret
jge
test
inc
movsb
sti
xor
jns
xor
lahf
ret
les
pop
mov
cld
fisubl
lock
adc
mov
mov
and
jecxz
rcl
stos
cld
inc
pop
cmp
push
stos
lahf
pop
mov
and
mov
push
pop
stos
imul
jns
sbb
and
mov
fst
jg
mov
xor
mov
jg
dec
pushf
inc
mov
fmuls
and
pop
fnsave
pop
fmuls
dec
pushf
js
cwtl
cmpsb
xchg
aas
loopne
adc
stc
sub
gs
pop
lock
fnstcw
shlb
jle
or
jecxz
mov
push
stos
inc
and
fisubrs
push
cwtl
push
fimull
mov
mov
sbb
mov
mov
push
xchg
sarl
in
sbb
xor
inc
sub
dec
sbb
ja
shll
test
xorl
mov
mov
div
ret
mov
and
insb
seto
cwtl
inc
sbbb
inc
or
dec
cld
stc
cmp
push
mov
rorl
in
push
mov
and
sub
pop
cli
ss
inc
aaa
xor
loope,pn
cmp
aas
xchg
icebp
loopne
imul
fstl
movsl
out
test
cltd
sbb
cld
lods
push
push
pop
pop
xor
arpl
pushf
std
jno
repz
gs
shrb
mov
lea
jbe
sub
decl
push
adc
inc
test
pusha
sbb
mov
fidivrs
jns
mov
jecxz
xchg
shlb
inc
les
add
lods
sub
pop
or
lret
popa
sub
fbld
xorl
insb
mov
iret
and
dec
pop
xor
scas
roll
mov
push
js
pop
adc
or
dec
movsl
add
je
xor
mov
mov
imul
in
mov
adc
movsb
enter
js
dec
out
mov
fnstsw
pop
out
fsubs
push
lods
cmc
and
clc
sbb
cwtl
mov
nop
iret
add
sbb
xlat
or
enter
mov
std
dec
bsr
jecxz
sbb
cmpsl
test
aas
mov
sub
pop
dec
mov
mov
mov
dec
stos
xor
aad
incl
cltd
nop
cmp
icebp
dec
loopne
rclb
pop
xchg
push
xor
jmp
pushf
pop
in
js
mov
cmc
push
stos
cmp
fsub
mov
jnp,pt
push
repz
sbb
sub
jmp
clc
or
adc
pop
int
mov
movsl
mov
outsb
xor
dec
adc
cmc
js
pop
mov
sub
adc
outsb
dec
and
sar
test
cmpl
push
adc
jecxz
pop
movl
lcall
cmp
mov
sbb
adc
clc
mov
fisubrl
movsl
push
adc
in
in
xor
mov
mov
or
add
jecxz
pop
dec
inc
mov
fsubs
nop
adc
xchg
in
push
les
xchg
aam
or
jne
jne
fwait
inc
push
jno
fsts
cmp
cmc
sub
idivb
push
cmp
es
out
xchg
mov
dec
sub
jle
loopne
jae
sbb
pop
fmull
outsl
lock
sbb
sbb
aas
push
jne
cmc
aaa
ret
mov
or
repnz
data16
loope
push
test
pop
loop
mov
sbb
lret
add
jbe
or
std
lea
mov
sbb
push
dec
inc
mov
jb
ljmp
pop
push
in
cmpsl
std
push
imul
jae
in
dec
int
rorb
add
dec
int
fisubrl
scas
in
push
daa
jns
idivb
inc
into
mov
sub
mov
jle
ds
mov
add
sbb
addr16
inc
sub
nop
add
xor
dec
cmp
sub
and
pop
pop
sbb
test
push
int3
out
xchg
test
fsubr
add
xchg
test
push
pop
mov
push
cmp
in
push
xchg
sub
push
ss
cmp
adc
sbb
mov
push
shrl
fucom
xor
and
cmpb
pusha
xchg
pop
jb
outsl
inc
pop
clc
es
int3
ja
cmp
out
and
fimull
jl
dec
decl
adc
dec
sub
aaa
out
nop
add
das
mov
stos
mov
popa
aad
cltd
cmc
cmp
mov
loope
notb
and
inc
mov
pushf
in
ret
stc
call
xchg
cmp
sbb
popa
jmp
sbb
aam
andb
sbb
inc
mov
ljmp
inc
sahf
ror
out
cmp
push
imul
test
outsl
mov
push
nop
insb
fcompl
lret
push
in
repnz
cmp
add
xor
and
mov
lods
push
dec
add
std
outsb
adc
and
mov
sub
outsb
xor
push
sub
mov
cwtl
out
pop
xor
add
lods
cld
aas
rolb
aas
jecxz
xchg
loope
cld
mov
dec
cmpl
pop
add
mov
sti
repz
mov
addr16
mov
stc
add
test
mov
jb
inc
or
push
sbb
pop
push
xchg
mov
popa
and
and
dec
mov
cmpsl
jo
aaa
xchg
push
pop
and
lret
dec
dec
rolb
xchg
sahf
arpl
lea
hlt
in
sarl
xor
add
pushf
adc
les
mov
sub
stos
or
outsl
imul
cmp
repnz
push
icebp
cmp
xchg
call
dec
or
dec
cmp
lods
mov
jae
xchg
push
lret
cli
mov
jne
and
sbb
push
bound
jle
xchg
out
push
adc
in
push
cmp
and
ja
inc
jl
loope
mov
jae
gs
repnz
aaa
jmp
xchg
cmp
cmpsb
insb
and
mov
cld
or
call
and
dec
cs
push
jecxz
popa
call
int3
inc
mov
arpl
add
cwtl
jmp
adc
sahf
xorb
inc
inc
lea
inc
in
imul
mov
adc
sub
xor
mov
jle
xchg
cwtl
aas
out
xor
testb
add
ret
cmp
orb
negb
push
mov
sahf
adc
mov
inc
mov
dec
gs
insb
out
shll
pop
int
clc
sbb
inc
repnz
inc
mov
cld
fwait
mov
xchg
jbe
mov
test
sub
pop
std
enter
in
pushf
out
dec
xor
rclb
mov
in
repz
cli
push
call
mov
mov
mov
mov
test
xchg
cmp
and
inc
stc
out
and
mov
addb
arpl
punpckhwd
and
mov
stos
icebp
dec
out
push
pop
push
inc
cmp
sahf
add
xor
inc
xor
xor
push
lock
into
push
rolb
repnz
jmp
dec
and
aam
push
leave
sbb
sarl
shlb
inc
aam
scas
jmp
testl
scas
nop
xlat
in
aam
pop
pushf
cmp
and
imull
jl
aas
xchg
xor
cli
cli
in
testl
jae
loop
xchg
js
leave
add
jp
ja
mov
iret
xchg
dec
daa
push
inc
lcall
push
cmp
inc
xorl
xor
scas
popf
lahf
add
jg
les
icebp
pop
loop
mov
pusha
lock
imul
addr16
mov
push
mov
int
jnp
out
fs
and
pop
cmpsb
aas
jo
aad
lcall
ret
lods
inc
ret
inc
out
and
call
dec
pop
mov
push
into
inc
mov
sbb
rolb
sub
lods
nop
mov
xor
pextrw
rcrb
cli
mov
lahf
arpl
or
sbb
xor
loope
mov
lock
movsl
dec
sbb
push
mov
jmp
and
mov
mov
int3
cli
aaa
test
jb
pop
lahf
mov
movsb
scas
in
xchg
adc
mov
inc
aas
xor
ds
cmc
popa
inc
loopne
inc
xchg
aam
imull
push
dec
popa
aaa
adc
cmp
jbe
dec
fdivrl
push
mov
movsb
in
sbb
pushf
jge
mov
jg
lcall
mov
mov
cltd
lock
xchg
cmp
mov
addr16
gs
out
arpl
insb
inc
adc
xchg
mov
push
mov
rorl
repz
add
mov
popa
sub
test
and
sbbb
mov
cmp
idivl
xchg
mov
ret
iret
xor
push
inc
fisttps
sbb
mov
adc
pushf
leave
loopne
and
push
pop
dec
loopne
cmp
push
sub
dec
mov
popl
cmpsl
jbe
and
mov
sub
in
into
sahf
fwait
ret
xor
xor
shrb
jecxz
sbb
push
push
jg
call
std
inc
jg
xor
jmp
push
mov
inc
sbb
nop
push
sbb
lods
cmp
sbb
adcb
xchg
add
nop
mov
psrlw
scas
or
add
cmp
cmp
cli
adc
pop
xchg
fidivl
push
cmp
push
sub
and
addl
mov
push
adc
adc
movsl
fwait
or
fs
int
inc
adc
or
cli
push
fildl
jnp
push
test
mov
rcr
mov
inc
pop
xor
into
pop
ret
cmp
jnp
test
cld
mov
enter
inc
add
sub
sbb
jb
xchg
arpl
fadds
lcall
daa
gs
mov
test
lret
out
fmuls
jmp
lods
xor
mov
dec
ja
push
sbb
cltd
loope
adc
cmp
loop
jbe
pop
add
fs
mov
xlat
orl
out
push
or
mov
pushf
in
cld
mov
adc
pop
frstor
xor
xchg
popa
xor
pop
jge
sar
out
mov
movsb
adc
out
pop
or
push
pop
lret
scas
xchg
dec
adc
int
movsl
ffreep
or
popa
jnp
cmp
jae
addb
mov
or
rorl
dec
stos
les
movsl
lock
mov
dec
mov
and
sbbl
test
or
lret
push
jmp
jg
mov
cmp
or
ret
sbb
cmp
int3
stos
addr16
add
out
stos
xchg
jno
addr16
gs
ljmp
mov
fidivs
cmpsl
in
movsl
fcmovne
push
fdivl
cld
jp
sarb
sub
pop
mov
adc
out
in
push
mov
sub
sub
ljmp
mov
mov
push
outsl
cmpsb
push
dec
sbb
xchg
fnop
fwait
jae
cmpl
inc
cmp
insb
xor
in
int3
movsb
mov
js
xchg
gs
push
push
dec
cs
loope
stc
dec
ds
inc
inc
jbe
xchg
inc
in
icebp
test
adcl
and
add
mov
pop
cmc
int
cmc
push
mov
or
enter
sbb
addl
mov
imul
test
lock
mov
aam
jb
pop
xchg
call
mov
pop
inc
xchg
pop
data16
add
cmpsb
pop
lret
call
pop
divl
out
jbe
xor
mov
cmc
sti
repz
inc
jp
push
mov
out
mov
data16
push
xchg
addr16
mov
test
cmpsb
push
mov
cmpb
stos
ret
addr16
dec
das
pop
dec
subl
lret
cmp
dec
adc
mov
out
xor
and
pusha
stos
xchg
lahf
addr16
addr16
push
sbb
cmp
pop
and
sub
dec
adc
js
pop
pop
leave
push
cmp
fsubr
dec
sbb
adc
sahf
adc
not
pop
scas
iret
idivl
sub
jecxz
hlt
pop
xchg
stc
or
int
mov
aam
mov
enter
daa
subb
push
sbb
adc
pop
mov
movsl
xchg
push
push
test
clc
nop
add
jecxz
xchg
cmpsl
in
pop
imul
push
int3
sub
push
cmp
cltd
scas
jg
fisubl
cltd
test
mov
sete
int3
inc
jb
movsl
loop
jne
xlat
pusha
push
add
aaa
pusha
addr16
fnstenv
mov
jmp
ror
xor
in
inc
outsb
or
mov
fwait
imul
mov
and
in
xor
add
gs
movl
pop
pop
fists
jmp
fistpl
fcoms
add
pop
sbb
mov
push
dec
in
cs
dec
arpl
cmpsb
adc
add
mov
jo
aad
add
jno
and
or
cmp
gs
sti
fmul
daa
flds
outsb
lods
mov
pusha
cmp
sub
movsl
inc
push
inc
jecxz
push
ss
mov
add
jmp
cmp
xor
and
ret
xor
mov
pop
adc
or
push
push
test
add
push
rolb
xor
push
mov
cmp
sti
mov
popf
dec
xchg
dec
mov
sub
cmpsb
sbb
inc
xor
dec
cwtl
inc
jne
mov
fdivrl
adc
xchg
mov
add
fisubl
lea
leave
cmpsl
ret
mov
cwtl
dec
jmp
mov
test
flds
aaa
inc
pop
sub
inc
jne
xor
and
iret
loopne
xor
inc
jmp
stos
enter
aam
mov
mov
in
rcrb
push
cmp
xchg
mov
aaa
sub
and
icebp
cmc
push
cmc
aaa
paddb
sbb
es
out
add
mov
and
je
sarb
in
ljmp
ret
mov
insb
jnp
push
xchg
pop
add
int
loop
pop
std
xchg
cwtl
popf
les
jecxz
lret
push
sarb
jg
jo
sahf
mov
xchg
stos
shll
pop
xor
and
cltd
stc
int
loop
popl
inc
sti
cmp
lea
enter
fisttpl
push
lock
idivb
mov
jl
push
mov
test
into
ret
jle
popa
inc
daa
fs
or
scas
sub
push
cwtl
sti
call
push
nop
pop
in
fstpt
aam
or
or
push
stos
sub
das
imul
dec
subl
adc
aad
les
jae
test
or
adc
inc
bound
mov
pop
sbb
cli
loopne
push
gs
and
adc
lret
xor
dec
dec
loope
adc
hlt
xor
pop
insb
and
aas
xchg
cmp
dec
push
clc
push
aam
ret
sbb
hlt
dec
clc
int
in
stos
fs
test
stos
xchg
das
inc
rolb
outsb
fistpl
fdivs
dec
xchg
inc
lods
les
dec
mov
mov
scas
cmp
inc
movsl
dec
adcb
lret
mov
mov
pusha
or
gs
xor
movsl
xchg
xor
into
adc
std
or
clc
sub
out
sub
and
das
jb
shrb
push
sub
mov
add
ss
out
pop
test
les
xchg
jecxz
scas
insl
sbbb
mov
notl
mov
test
in
ljmp
jl
jle
jae
xor
or
sub
mov
int3
rcrl
cmc
or
nop
mov
push
mov
loope
cmpb
sub
outsl
push
addb
sub
cmp
pop
pop
aaa
push
dec
fwait
test
addr16
mov
push
aas
outsb
adc
and
gs
in
mov
js
and
dec
pushf
data16
es
jne
stos
pop
mov
repz
cwtl
ljmp
push
cs
jecxz
addr16
fcomip
jnp
xchg
push
fcompl
add
mov
divl
fisttps
andl
test
fdivrl
ret
rclb
scas
lea
mov
js
mov
mov
dec
mov
pop
cmpsb
cmc
cmp
xor
xchg
add
dec
sbbl
loopne
outsb
loopne
ljmp
push
call
ja
in
pop
or
je
mov
roll
pop
inc
or
loopne
cmp
clc
rorb
or
lods
jns
je
nop
pop
add
mov
add
mov
push
mov
push
fwait
ret
dec
and
pop
add
adc
lods
jae
jp
gs
jbe
mov
int
mov
ja
popa
dec
inc
xchg
pop
scas
xchg
jle
stos
pop
fstps
std
mov
xchg
gs
outsb
pop
mov
aad
adc
cld
out
mov
adc
cmp
clc
cld
push
dec
rcrl
dec
bound
jae
cmpsl
sti
cld
fcoms
dec
mov
rcrl
repz
rcrb
inc
enter
mov
inc
xchg
negb
push
jmp
mov
mov
sbb
es
or
test
mov
xchg
mov
or
and
ja
stos
out
divb
jge
xor
sub
iret
mov
xchg
sub
push
sub
or
loop
cmpsl
mov
or
sbb
mov
ficomps
jp
sbb
aaa
scas
hlt
pushl
jle
push
lahf
in
nop
dec
jbe
arpl
jg
lds
ja
in
sbb
roll
hlt
bound
sbb
add
or
inc
push
dec
jp
xchg
pop
popa
ret
mov
inc
insl
loop
jae
push
aam
out
in
ud0
faddl
movsb
in
push
and
mov
push
xchg
cmpsl
add
sbb
adc
repnz
jo
adc
jp
rorl
or
iret
mov
inc
dec
lahf
fsubrl
fdivrl
add
jbe
dec
push
push
iret
xor
add
in
mov
aas
aaa
cmp
lret
inc
loop
loopne
iret
hlt
int3
in
jbe
movl
fcom
xor
repz
add
testb
dec
outsl
loop
add
insb
mov
inc
pop
scas
pop
cld
jne
aam
fucomi
inc
mov
cmp
mov
lea
adcb
mov
aas
mov
jo
cs
testb
sbb
add
scas
jecxz
bound
inc
mov
popf
mov
lods
or
je
pop
inc
lea
ffree
insl
xchg
or
movl
pushf
add
dec
lds
mov
xor
fisubrs
fmulp
xchg
or
clc
lock
ret
pop
add
dec
xchg
jmp
add
leave
sbb
mov
or
mov
and
pop
repnz
fnsave
pusha
test
jg
push
insl
or
inc
outsl
mov
mov
int
xchg
lods
pop
rcr
add
jnp
xchg
push
and
sar
xchg
mov
or
das
gs
aad
js
aas
or
push
std
and
sub
sbb
dec
scas
dec
movsb
cld
dec
pop
jne
dec
int3
test
aaa
in
push
dec
mov
jno
mov
movsb
jbe
add
ret
cmp
sub
inc
push
jmp
lock
dec
lds
mov
in
movsl
inc
adc
fsubl
fcmovnb
and
mov
js
pushf
popa
fwait
lods
cmc
mov
or
int3
or
or
mov
mov
xchg
pop
movsb
add
or
or
pop
mov
sub
stos
and
xchg
addr16
inc
movsl
mov
ret
xor
jo
lds
and
rorl
push
fcomps
in
sbb
ds
and
pop
mull
lret
mov
aas
push
or
imul
rol
sub
mov
popa
pop
fcompl
cmc
push
cmpsb
insb
dec
adc
jns
sub
std
jmp
mov
fcoms
in
sub
loopne
push
clc
scas
xlat
mov
out
mov
in
insl
insl
mov
aad
add
push
dec
add
jl
test
outsl
adc
movsl
out
sub
stos
aam
fstpt
pop
xor
test
jns
imul
repnz
addr16
cmpb
in
jnp
out
and
dec
inc
gs
addb
cmp
inc
mov
mov
xchg
cmpsl
mov
cmp
mov
aad
fstl
rcrb
bound
sti
mov
inc
cmp
das
cltd
mov
cmpsl
fucomi
pop
aad
pop
mov
push
outsl
outsb
xchg
or
adc
add
popf
adc
imul
inc
mov
sarb
add
and
xor
stos
imul
testb
pop
xor
xchg
mov
mov
xchg
imul
cmpsb
sub
jae
leave
in
xchg
mulb
pop
loope
mov
and
mov
and
pop
in
add
push
es
mov
out
sub
pop
sub
gs
mov
xchg
push
adc
scas
push
inc
std
xor
push
dec
fildl
mov
call
scas
outsl
jg
push
lea
lret
jo
clc
xchg
xlat
rolb
rclb
aaa
dec
andb
pop
sbb
jo
das
jno
rolb
lahf
outsb
iret
adc
pop
gs
dec
insb
pusha
sbb
psllq
cmpsl
mov
cmp
pop
enter
mov
lds
hlt
and
xor
rcrl
mov
inc
sarl
mov
je
sbb
sbb
cltd
call
cmp
sub
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
add
add
add
add
add
add
xchg
xor
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
ret
add
cmc
xchg
js
ret
int
popl
cmpsl
push
pop
xor
lds
ss
repz
test
cmp
and
jp
es
mov
sbb
pop
cltd
addr16
xor
jp
and
or
ss
leave
inc
mov
bnd
add
sub
sub
xor
fnsave
insb
xchg
pop
cwtl
mov
jns
outsl
out
jge
idivb
sub
xor
clc
test
lods
lcall
loop
jb
ss
or
out
adc
push
add
in
rcrl
inc
clc
lea
insl
adc
mov
aad
loop
mov
inc
and
mov
adc
xor
in
hlt
scas
hlt
leave
test
imul
dec
rcll
sub
push
insb
xor
fsubr
adc
push
fdiv
fadds
cwtl
fldenv
and
addl
xchg
and
jmp
inc
ds
ror
xchg
lods
push
iret
mov
push
cltd
int
add
pushf
nop
sar
sbb
lock
shrb
popa
pop
in
sub
mov
cltd
xor
ret
mov
dec
outsl
lods
mov
fucomp
hlt
loopne
jae
mov
sub
dec
popa
loop
pop
jae
cli
jg
jmp
cwtl
mov
adc
fstpl
jbe
ljmp
adc
pop
jbe
jl
mov
adc
fcomp
shlb
pop
jb
mov
dec
pop
cmp
jl
push
fnstenv
adc
add
sub
and
mov
rorb
ds
sub
dec
xchg
ds
icebp
cmp
aad
test
cmp
lret
lret
out
cmpsb
test
imul
pop
icebp
mov
dec
inc
push
scas
push
jne
inc
dec
adc
xor
in
push
lods
das
sub
push
mov
xchg
dec
xrelease
mov
ret
push
or
popf
xchg
sahf
add
mov
movsb
lret
mov
sbb
xorl
xor
mov
aam
mov
xor
stos
sub
mov
rcr
fnsave
cmpb
adc
add
cmp
mov
push
lods
aaa
fs
ret
negb
mov
inc
enter
push
lahf
hlt
sbb
lock
jmp
in
incl
les
mov
rcrb
inc
repnz
pop
mov
ret
out
in
incb
cmp
fsubl
insl
jne
and
sub
ret
lret
test
push
int
cmpl
hlt
mov
into
or
cmova
in
enter
jp
mov
in
jl
adc
mov
pop
pop
mov
stos
push
in
incl
pop
outsl
add
repz
lahf
mov
repnz
adc
pop
mov
jns
lds
and
xchg
mov
pop
mov
inc
mov
mov
mov
loope
cmc
loop
shll
jmp
xchg
iret
add
std
or
scas
mov
push
jecxz
xor
add
cwtl
inc
cmp
jp
hlt
sbb
fisubrl
fmulp
fiaddl
je
adc
lds
leave
pop
popa
mov
cli
arpl
out
inc
lods
inc
aam
pusha
insb
pop
loope
jae
movsl
xlat
mov
jb
mov
jnp
cmp
xlat
jb
adc
push
mov
adc
sub
roll
popf
scas
dec
mov
and
jl
sti
push
mov
out
mov
sub
mov
push
jae
adc
insl
mov
inc
inc
mov
adc
cmp
jmp
jmp
and
sti
push
cli
mov
movsb
repnz
sbb
jnp
dec
inc
pop
pop
into
cwtl
fists
sbb
pop
enter
lahf
xchg
insb
xchg
sti
push
cmp
dec
push
jns
divb
cmc
popf
sub
fidivrl
icebp
sub
out
aad
loop
cwtl
jl
mov
out
pop
out
dec
mov
ss
inc
xchg
outsl
inc
xchg
dec
jbe
pop
adc
loop
xchg
push
add
push
daa
inc
dec
mov
js
mov
lcall
int
pop
cmp
jp
insb
pop
xor
add
bound
xor
lods
out
mov
mov
sbb
fdivl
push
addr16
shlb
notrack
xchg
add
ja
ret
add
xchg
or
pop
rorb
adc
mov
pop
jbe
or
xor
or
mov
repz
jge
fdivrp
push
adc
mov
push
dec
sbb
xor
pop
add
test
inc
fisttpl
imul
mov
xor
mov
cmc
jne
rcrl
fistps
out
dec
xchg
cmp
push
mov
popa
dec
fistps
mov
sbb
push
imull
call
insl
sub
jge
add
repz
jle
dec
int
jnp
ja
xchg
ja
jmp
and
mov
xchg
sahf
scas
scas
adc
sub
cmpb
mov
insl
dec
sbb
stos
xor
pop
sbb
clc
lods
rcl
xor
ret
outsb
loop
sub
push
test
jp
mov
lds
cld
dec
or
fisubs
nop
dec
repnz
fsubrs
push
jl
clc
mov
testl
pop
hlt
add
les
cmp
shlb
mov
lret
push
and
movsl
scas
imul
lock
add
or
push
push
mov
repz
stos
xor
dec
stos
mov
iret
stos
add
mov
or
aas
ds
fldcw
subb
mov
in
xor
insb
sti
mov
xor
ds
in
ret
mov
es
stos
in
inc
fimull
out
ss
popa
dec
lods
xor
push
add
add
insl
fs
dec
int3
dec
cli
jl
loop
insl
scas
xor
mov
push
xchg
popa
insl
cmpsl
adc
push
xlat
ret
js
ds
cmp
cmpsb
jo
xchg
inc
sub
adc
out
xchg
jns
cli
sahf
subb
push
cmc
lock
push
notl
push
sbb
std
into
gs
add
out
dec
movsl
mov
pop
mov
jge
les
out
outsb
fists
fdivl
in
cwtl
sti
test
push
inc
xchg
ja
imul
dec
dec
mov
xor
pushf
pop
call
jno
sub
sahf
std
out
mov
mov
xchg
addr16
fstpt
pusha
sarl
add
sub
mov
sbb
in
jne
cmpsl
add
sbb
pop
xchg
jne
addr16
pop
pop
pop
and
or
dec
ret
jns
or
or
ret
or
add
adc
push
shll
stos
mov
int3
adc
pop
ret
pop
dec
mov
in
imul
sbbl
repnz
rcll
iret
mov
lcall
out
aas
dec
xchg
clc
es
jnp
mov
lods
adc
mov
shll
push
xor
out
outsl
shlb
sarl
push
mov
mov
add
movsl
dec
roll
outsb
lea
inc
jo
dec
adc
outsl
cmp
out
xor
pop
or
mov
xchg
push
cmp
pop
dec
dec
shlb
cmp
jae
addr16
inc
insl
les
in
cmc
or
aam
push
pusha
mov
push
adc
dec
inc
mov
imul
or
xor
dec
add
mov
loopne
sub
cmp
push
add
pop
imul
jns
int
es
inc
jge
xor
push
insl
movsl
adc
in
cmpsl
jge
and
or
fnsave
lods
stos
adc
movsb
popa
pop
xchg
pop
mov
insl
push
insl
loopne
loope
xor
mov
cmp
pop
outsb
sarb
outsb
mov
pop
push
xchg
jns
loop
mov
pop
push
xlat
stos
data16
inc
je
jl
xor
mov
add
push
add
test
adc
addr16
lods
sbbl
popa
in
lret
cmc
mov
cli
inc
hlt
shrl
movsl
out
call
jmp
dec
lret
enter
sbb
pop
sub
iret
xor
and
mov
aas
cmpsl
jmp
jge
push
cmpsl
xchg
sub
out
mov
pushf
test
lods
cmp
inc
pop
movsl
pop
push
icebp
in
or
jl
out
push
bound
mov
arpl
lahf
xor
jg
outsl
fldt
imulb
fcom
aad
mov
sbb
icebp
jp
subb
scas
adc
subl
subl
dec
push
jge
mov
cmpsl
mov
adc
push
adc
std
and
ret
insl
mov
ret
sub
push
int3
aam
adc
xor
subb
stc
ja
mov
js
mov
push
mov
dec
scas
cltd
push
adc
adc
or
cmpsb
push
repnz
fchs
lret
jbe
pushf
inc
xor
inc
sbb
inc
push
sbb
xor
cs
ja
mov
xchg
dec
xchg
fidivrs
daa
fs
dec
pushf
mov
mov
or
jns
ds
jle
test
movsb
mov
xlat
cmpsl
outsl
test
mov
xchg
lods
adc
inc
aam
lea
cld
mov
xor
inc
arpl
jb
fnstsw
or
lock
je
repz
in
sti
int
outsb
loope
xchg
into
insl
jmp
push
daa
fistpll
mov
cmp
pusha
repnz
leave
cmp
push
rclb
cmp
cmp
xchg
push
addl
ret
xchg
add
pop
or
popa
rcrb
sub
jg
aam
push
pop
mov
scas
cwtl
shrl
out
stos
cmp
cs
imul
adc
jne
hlt
loop
push
inc
fcompl
push
inc
ss
push
xor
xchg
mov
and
or
popf
xor
mov
dec
dec
addr16
leave
push
add
insb
fbstp
mov
imul
pop
jns
mov
inc
loopne
aaa
mov
das
outsl
scas
push
jb
jmp
daa
pop
fwait
and
inc
pusha
mov
cld
add
adc
push
sub
cmc
and
cli
and
aas
pop
mov
lock
pusha
and
ljmp
iret
mov
ss
in
sahf
mov
sbb
lea
adc
jno
sahf
sbb
lret
notl
sub
cmp
shrb
leave
xor
push
loope
xchg
mov
stos
fs
cmp
xchg
inc
mov
daa
int3
imul
mov
loope
sub
mov
cmp
out
xchg
xchg
out
inc
pop
push
sbb
fildll
or
push
mov
jmp
jp
inc
adc
mov
mov
ret
fistps
loopne
or
adc
dec
popa
loop
jmp
data16
jl
pop
mov
sub
push
pop
sbb
xor
jg
int
add
repnz
push
out
imul
subb
movsb
jmp
cltd
movsl
lods
fdivs
xchg
add
test
clc
cmp
repz
jg
aad
fsubs
xchg
add
mov
in
xor
lods
addl
mov
imul
rcrb
mov
icebp
pop
fsts
leave
loopne
test
test
loope
cmp
rcrl
mov
movsl
fsubrl
outsb
lods
or
inc
fistl
inc
outsl
aas
jg
pop
clc
xchg
cmp
fildl
cld
addl
lea
fbstp
mov
push
leave
pop
outsb
cmp
pop
int3
ret
jnp
add
sub
into
out
push
pushf
repz
imul
xorl
or
xchg
push
shlb
inc
int3
loope
call
scas
std
ds
jnp
cmpsl
jbe
inc
jle
arpl
aaa
inc
mov
push
mov
jb
xchg
jns
inc
pop
xchg
das
mov
mov
sub
sbb
jp
ret
cmpsb
rcrl
nop
pop
cltd
lret
or
les
dec
int
xchg
cmpsl
xchg
cmp
sub
idiv
lods
mov
xor
pop
stos
cwtl
mov
dec
les
sub
movsl
xchg
dec
pop
cmc
popf
adcl
cmp
ret
mov
arpl
pop
pop
cmp
dec
sbb
popaw
mov
and
hlt
and
jmp
mov
in
leave
ret
cmpsl
xor
or
mov
out
sub
ret
pop
in
mov
mov
and
mov
or
aaa
or
pop
enter
jp
xor
and
stc
js
mov
and
lock
jecxz
scas
incb
mov
iret
mov
movsb
movsl
add
ss
inc
or
add
repz
ret
cwtl
ja
aam
rorb
mov
mov
inc
adc
jne
out
mov
in
sbb
test
sub
leave
pop
push
mov
xchg
mov
rorb
fistl
ja
fwait
jae
int3
push
push
ss
push
xor
jmp
mov
pop
out
pop
icebp
adc
jg
and
gs
shrl
jmp
arpl
cmpsl
mov
insb
scas
push
movsl
xchg
sar
pop
lahf
xor
ds
pop
sbb
sub
shlb
push
jnp
movsl
mov
jecxz
es
add
push
and
test
pop
push
faddl
pop
hlt
jge
scas
js
push
sub
testl
jl
jmp
jge
repz
or
xchg
jae
pushf
xchg
jne
imul
sub
jg
xor
mov
jne
mov
lret
ss
xchg
and
inc
mov
mov
mov
in
add
arpl
lock
push
mov
nop
and
xor
push
or
push
push
xchg
in
aaa
jae
xor
add
lahf
imull
mov
inc
sub
mov
push
pop
jge
push
and
add
sub
data16
fcomps
mov
js,pn
mov
jb
and
in
jnp
aas
mov
lcall
pop
sti
jbe
aas
inc
dec
push
insl
xchg
fdivp
jo
push
imul
inc
fs
jae
xor
inc
in
mov
dec
or
div
pusha
inc
gs
inc
mov
mov
sbb
push
popf
xchg
xchg
pop
push
or
jae
or
pop
mov
sti
sbb
inc
adc
inc
add
icebp
xor
shl
xchg
jno
out
in
popf
lea
test
dec
xchg
xor
dec
jb
lahf
stos
jecxz
mov
ljmp
gs
cmpb
ret
push
xor
lds
sbb
test
les
ret
dec
or
or
cmp
icebp
mov
fstpt
mov
out
adc
xchg
inc
ret
fbld
test
mov
cmp
clc
cwtl
jl
popf
jns
outsb
xchg
push
push
mov
add
pop
sbb
cli
jne
imul
fcmovnu
inc
gs
lock
cli
lret
loop
cmp
fdivrl
fisttpll
jecxz
dec
or
mov
rcll
sub
adc
jg
test
fsubrp
jne
mov
cwtl
aam
shlb
xor
cmpl
or
imul
loop
dec
jmp
mov
js
fsubl
ficoms
mov
dec
mov
jle
add
lea
xchg
and
pop
lcall
js
dec
loopne
and
outsl
mov
jle
aas
int3
jno
ret
enter
sbb
mov
aam
mov
xchg
xchg
mov
sub
jns
pop
dec
mov
in
int
dec
inc
imul
loopne
or
mov
jg
or
or
in
fisttps
incb
jge
cwtl
or
mov
sub
jbe
push
pop
je
in
pusha
add
pop
es
std
jp
dec
jmp
add
stos
inc
mov
add
ds
mov
daa
cmp
mov
test
test
jo
pop
xchg
or
divl
ror
mov
push
and
adc
and
jg
push
sbb
hlt
out
inc
dec
jns
insb
lea
and
cltd
repz
sbb
pop
rcll
ljmp
dec
ja
int
sbb
lods
imul
out
lret
setae
cmp
loope
stos
cmp
enter
xor
push
jae
out
xor
dec
xchg
fwait
popa
mov
fbld
ljmp
fwait
push
testl
add
les
xchg
popa
jb
ljmp
push
push
shll
insb
or
aaa
scas
out
xor
cmp
adc
test
sahf
xchg
add
or
addr16
popa
inc
jbe
xlat
cmc
cmpsl
call
ret
adc
mov
hlt
push
out
psraw
clc
movsb
hlt
cmc
stos
adc
cmp
mov
mov
je
mov
and
shll
arpl
mov
adc
xor
jno
adc
lret
jae
scas
jnp
mov
and
fisubl
add
in
stc
xchg
cld
cmpsb
pop
pop
mov
and
xchg
push
js
lcall
scas
les
inc
adc
dec
scas
aas
shl
sub
cs
xchg
xor
and
inc
shrl
fnsave
jo
fdivp
aam
sti
push
sbb
mov
sub
ss
xor
jbe
in
insb
test
or
in
mov
sbb
mov
mov
in
inc
cwtl
mov
sub
xchg
lds
sbb
cmp
nop
imul
push
leave
mov
add
out
mov
or
call
jmp
movsb
mov
xor
lahf
adc
dec
jae
jg
lahf
pushf
add
out
pop
cmp
inc
push
aad
push
cmp
pop
fmull
hlt
cs
cmp
adc
inc
ljmp
jecxz
inc
test
repnz
sub
xchg
icebp
push
shl
imul
gs
dec
sbb
cmp
lods
inc
jmp
xlat
mov
mov
xchg
cmpsb
cmp
mov
test
adc
ss
inc
repnz
pop
das
popa
jl
and
lahf
mov
inc
inc
orl
sub
mov
pushf
iret
aam
xor
lock
repz
mov
ror
popa
mov
je
sbb
and
or
and
mov
call
push
adc
sbb
pop
and
mov
mov
aas
pop
pushf
jl
inc
int3
lret
mov
jns
push
jp
xchg
cmp
pop
sub
push
clc
jle
and
xor
out
inc
out
out
dec
cld
iret
xlat
adc
xchg
outsb
and
lock
mov
pop
inc
jecxz
scas
call
daa
pop
mov
mov
loope
inc
es
in
sub
loopne
jae
scas
leave
negb
lret
ja
mov
and
push
sub
xchg
jp
or
pop
dec
in
pop
popf
sub
xchg
push
iret
aaa
pop
pop
es
fnsave
push
xchg
push
les
jne
cmc
jno
push
mov
cmp
inc
dec
popf
movl
sbb
push
rorb
mov
inc
sahf
mov
gs
sub
lods
dec
adc
xchg
push
mov
push
enter
xor
int
and
add
mov
out
xchg
push
inc
mov
mov
jge
push
and
dec
cmp
xor
in
add
or
in
mov
and
mov
dec
in
pop
fmull
popa
sub
cli
loop
out
and
adc
fbld
push
inc
jnp
fs
loopne
popa
and
mov
jb
movsb
loop
ficompl
inc
jbe
out
std
mov
dec
jecxz
pop
dec
fnsave
push
out
cmp
lds
mov
outsl
push
xchg
add
pop
mov
std
adc
pop
mov
aam
xchg
lahf
fwait
sbb
test
inc
sti
adc
xor
inc
inc
add
mov
sub
cmp
jecxz
push
in
leave
int3
pop
and
dec
movsl
mov
ds
loop
sbb
sahf
repnz
and
dec
pop
jecxz
test
pop
vucomisd
pop
fidivrl
lods
push
xchg
push
leave
addb
test
mov
in
jp
push
data16
inc
xchg
pop
cmp
mov
sub
dec
xor
push
mov
or
subb
cwtl
clc
jo
imulb
daa
js
and
pop
cmp
jg
or
xchg
hlt
clc
xor
cmp
lahf
sub
imul
imul
arpl
int
dec
dec
lods
mov
inc
shlb
sbb
int
mov
dec
shl
ficomps
mov
sbb
inc
movsb
sbb
iret
movsl
and
xchg
or
xor
cmc
mov
dec
ja
pusha
loopne
mov
lds
xor
rcrb
aaa
sti
xor
mov
leave
add
shr
data16
stc
jle
xor
push
push
and
data16
data16
out
rorb
dec
fadds
sbb
imul
ds
cltd
inc
fiaddl
add
adc
jg
sbb
mov
aam
or
inc
cmpsl
or
inc
jl
clc
push
inc
adc
pop
pusha
setno
dec
ljmp
in
push
jae
dec
clc
mov
in
repz
mov
movl
and
pop
pop
sbb
mov
test
dec
in
sarl
pop
mov
mov
mov
test
and
dec
push
xchg
mov
jp
rcll
int3
leave
mov
push
xlat
ja
mov
sbb
jo
inc
in
inc
inc
fcmovu
jp
mov
mov
ficoml
imul
nop
loop
mov
movsl
xchg
jb
clc
hlt
outsb
aas
cmp
xchg
fwait
bnd
pop
or
inc
and
sti
pop
fldln2
push
lds
and
sub
repnz
test
or
lret
lahf
inc
ret
mov
jno
jmp
mov
fildl
ja
sahf
into
pop
xchg
mov
push
pusha
out
push
add
repnz
mov
out
in
sar
out
xor
or
lods
push
mov
mov
and
sahf
fcomp
sbb
aam
xor
and
out
and
hlt
mov
dec
push
jnp
and
bound
pop
jb
aaa
mov
xchg
lods
loopne
push
shlb
and
aaa
pop
jo
lahf
out
loope
scas
aam
sbb
xor
push
arpl
jb
mov
xchg
call
scas
loop
xchg
lret
jg
xchg
push
ljmp
cwtl
push
stc
enter
sub
lret
mov
cmp
stc
les
adc
jp
inc
mov
fidivl
xchg
jbe
popf
outsl
imul
jp
adc
adc
xlat
into
popf
adc
sti
inc
or
js
inc
mov
pop
jp
hlt
in
xor
cmpb
cmp
jl
roll
xchg
or
ret
pop
cwtl
call
lods
cmpsl
std
mov
mov
test
icebp
push
into
jp
leave
pop
pop
dec
xlat
xchg
rolb
pop
bound
cmpl
cmp
js
pop
aaa
out
call
mov
fimull
jns
dec
aad
pop
fsubs
movsb
nop
dec
xor
pop
inc
leave
dec
ljmp
add
jge
push
ret
aam
inc
jns
push
xchg
pop
data16
fs
jns
and
stc
les
insl
aam
test
pop
jns
out
pushf
mov
jb
test
mov
add
ror
cmpsb
outsl
inc
jbe
sahf
xlat
lock
stc
ljmp
add
mov
cmp
mov
mov
cmpsl
rcrl
lea
in
cmp
out
imul
fidivl
mov
cmpsl
mov
ljmp
dec
xor
sbb
xor
inc
mov
xchg
and
into
mov
ja
push
jg
mov
sbb
sub
pop
pop
mov
mov
push
adc
test
daa
jge
aad
sbb
sbb
out
pop
cmp
and
fsubr
pushf
inc
in
mov
jae
and
or
add
icebp
pop
pop
inc
or
std
stos
ret
mov
inc
inc
or
sbb
leave
and
inc
loope
sti
mov
mov
sub
lods
vpcmpeqb
push
adc
rcrb
xchg
lods
push
cltd
in
add
mov
push
xchg
aas
mov
scas
adcl
xchg
or
mov
pop
push
aam
nop
out
jmp
push
mov
pop
test
loopne
xor
addr16
push
mov
mov
lods
push
sub
push
sub
stc
stos
sahf
pop
and
mov
repz
lock
add
xor
daa
fldcw
sbb
cs
in
das
fisubrl
mov
mov
xor
mov
inc
out
popf
pop
sub
aas
fistps
or
mov
inc
loopne
negb
outsb
cmp
mov
popa
adc
mov
xor
adc
cmpsl
push
or
mov
xchg
sub
xor
pop
dec
lret
adc
das
pop
xchg
lods
cmp
ret
outsb
and
push
roll
scas
or
jecxz
outsb
les
mov
inc
pusha
pusha
fwait
es
in
push
fs
fbld
jns
push
mov
pop
push
pop
fldt
sub
sbb
out
mov
sbb
adc
std
pusha
inc
lcall
or
fxch
in
sbb
cmpl
lahf
adc
and
inc
lock
fs
xchg
inc
add
jp
jg
and
xor
jb
lds
jne
xchg
xchg
enter
pop
xchg
mov
icebp
scas
jo
sbb
adc
push
dec
and
xor
outsl
sub
imul
addl
imul
pop
adc
les
cmpsl
xor
add
movsl
or
pop
divl
pop
push
mov
in
sahf
lahf
out
xchg
shlb
cmp
aam
mov
cmp
dec
xlat
and
int3
cmp
cmp
pushf
orb
gs
mov
insl
add
mov
in
xchg
in
cli
mov
push
data16
sti
adc
cmp
add
jg
jmp
jbe
mov
push
arpl
inc
movsl
fmull
xor
push
mov
lahf
mov
adc
rorl
adc
jb
xor
rol
or
addr16
inc
arpl
lods
dec
jecxz
push
scas
movsl
arpl
jecxz
adc
fs
dec
or
push
mov
insl
cs
xchg
test
sub
pop
rcrb
sub
xchg
inc
incb
cmp
mov
aam
dec
push
xchg
jle
fwait
orl
popf
push
shrl
shrl
xor
aad
inc
adc
mov
clc
xchg
mov
movsb
mov
les
push
mov
ret
aaa
or
cld
sti
insb
dec
jge
call
enter
inc
mov
pop
push
pop
fsubs
icebp
mov
or
js
int
mov
mov
mov
aas
cmp
add
mov
or
dec
lahf
jae
mov
aas
xchg
cltd
mov
shlb
bound
and
inc
rcrl
mov
jmp
cli
test
aam
je
mov
fisubs
push
ficoms
push
std
fdivp
leave
xor
push
ret
dec
cs
pop
pusha
in
push
sub
cmpsl
cwtl
mov
sub
imul
shlb
sahf
mov
push
jo
test
cmp
pop
daa
ret
gs
insb
fisubl
mov
std
bound
lcall
aad
dec
pop
sub
mov
dec
ds
inc
mov
or
mov
inc
sbb
mov
pusha
xchg
into
std
shll
dec
ret
jb
mov
cwtl
fstps
test
paddq
lock
push
mov
push
or
insl
xor
ror
xchg
inc
adc
dec
dec
and
pop
loope
inc
push
jle
mov
jnp
mov
mov
leave
jb
push
mov
fdiv
ret
in
and
cmpl
mov
xor
push
inc
lea
jae
out
stos
mov
pop
push
out
and
data16
cmp
xchg
add
cld
xorb
out
int3
sub
xchg
mov
lock
fcompl
push
leave
pop
xor
je
jns
xchg
clc
dec
dec
mov
rorb
mov
cmp
cmc
jnp
les
call
pop
mov
adc
xchg
clc
out
jns
das
imul
test
dec
jbe
scas
and
dec
inc
cmpsl
dec
push
jecxz
mov
out
ds
push
mov
mov
ret
aam
add
mov
outsl
jg
dec
into
xor
fbstp
divb
sbb
add
adc
in
pop
ret
pop
pop
div
jmp
nop
bound
xchg
push
mov
and
cmp
imul
or
push
pushf
xchg
sub
arpl
push
roll
adc
push
xor
inc
enter
scas
push
loop
insb
pop
adc
adc
dec
or
cmp
andl
mov
popa
sbb
loop
ja
inc
ud0
ret
outsl
shlb
dec
jle
adc
cmp
inc
inc
sbb
or
fadds
out
or
jae
push
jmp
jmp
fwait
add
outsb
ja
sbb
xchg
jbe
popf
fdivrl
enter
inc
jb
inc
aas
ret
into
and
insl
repnz
mov
push
xor
mov
mov
cmp
jnp
in
aam
cmp
push
mov
cmp
push
adc
in
into
dec
hlt
mov
fsubrl
mov
pushf
mov
stos
lcall
movsl
les
inc
add
ja
arpl
fucomi
and
push
stos
xor
push
lcall
add
negb
pop
dec
pop
loop
aam
in
ror
sub
rcr
bound
inc
inc
ja
xor
push
push
pop
lret
inc
lret
xchg
inc
or
jae
mov
dec
jmp
add
mov
stc
sbb
rol
stc
add
and
loopne
jge
adc
mov
jmp
jns
stc
and
aaa
inc
jl
jno
cmpsb
mov
fucomp
xor
out
test
andb
mov
fstp
xlat
adc
popf
insl
sub
sti
cmp
dec
cmp
js
sub
mov
jl
or
bnd
cmpsl
mov
mov
sub
add
fcmovnu
mov
cmpsl
xor
cmpsb
xor
sub
fwait
jne
int
scas
inc
cmpsb
pusha
jnp
fsubs
xchg
add
jmp
sbb
insb
dec
fnstsw
jmp
sub
and
stc
fisttpl
xchg
into
inc
fisttpl
mov
cmp
test
shll
jno
xchg
mov
mov
lods
in
sbb
rcrb
lds
or
sbb
lock
sbb
mov
inc
mov
xor
cmp
jmp
mov
cli
mov
mov
testb
jae
xor
sti
cltd
stos
xchg
roll
mov
cwtl
mov
and
ror
dec
xlat
aas
sarl
jo
mov
jmp
movsb
bound
pushf
popf
outsl
cs
push
jecxz
roll
cmpsl
js
lret
daa
ds
or
push
mov
jg
dec
cmp
ljmp
jae
mov
xchg
js
hlt
mov
inc
int3
xchg
pop
out
adc
loopne
pop
or
ja
aam
cmpsb
mov
adc
and
div
ljmp
stc
call
int3
mov
or
adc
xor
pushf
jb
xor
cmp
xorb
ds
out
jo
inc
das
js
mull
push
mov
mov
ljmp
inc
int
push
stc
repnz
or
pop
push
cmp
xchg
out
pop
add
sahf
int
mov
sbb
jnp
ret
movsl
mov
les
sub
add
push
cld
mov
cmc
jg
popf
test
mov
add
cmp
pop
popf
jmp
fisubrs
jmp
mov
mov
push
repnz
cmpsb
mov
inc
stc
adc
jecxz
fs
and
and
test
loop
into
add
push
jmp
push
adc
inc
adc
xchg
mov
dec
in
xlat
in
je
xor
icebp
adc
pop
pop
aas
mov
pop
sbb
sub
mov
sub
jnp
enter
imul
rclb
xor
sub
jg
sub
mov
pop
stos
es
sbb
and
scas
inc
push
adc
sbb
fcmovnb
test
mov
adc
xor
or
mov
fldcw
pop
addr16
ret
mov
loope
shl
or
dec
xchg
mov
push
push
pusha
pop
adc
in
push
in
ss
jo
cmp
jo
fwait
sbb
xor
mov
addl
iret
pop
lock
lret
aaa
xchg
mov
aaa
test
mov
lds
mov
jae
movsb
dec
cld
das
xchg
xor
cltd
repnz
push
in
lock
inc
rcll
inc
out
pop
adc
iret
sbb
xchg
push
sbb
fwait
movb
mov
out
lahf
adc
xchg
dec
lods
push
push
rcrl
aam
cs
bound
jmp
adc
pop
sbb
mov
popa
dec
inc
sub
iret
in
mov
movsb
iret
or
imul
mov
fldenv
scas
sub
call
stos
ljmp
jg
push
and
adc
mov
js
psubusb
jmp
test
jmp
aam
rorl
out
icebp
sub
lcall
adc
scas
jb
push
xor
hlt
jle
mov
sbb
decb
fstl
insb
jmp
xchg
mov
mov
add
pop
mov
stc
in
int
push
mov
ljmp
test
mov
push
inc
dec
sub
inc
test
repnz
mov
fcoms
rclb
push
xor
jnp
insl
cmp
insb
lods
cmovl
inc
pop
add
mov
xor
and
cli
adc
push
pop
out
rolb
sub
pop
repz
movsb
test
xorl
repnz
and
shl
mov
add
mov
xchg
repz
jb
enter
pusha
add
clc
xchg
test
dec
cld
int
push
subb
sahf
div
fstpl
sbb
inc
jb
dec
push
jle
ljmp
shrb
mov
addb
clc
divb
adc
pushf
mov
mov
nop
cmp
jno
and
rcr
fimuls
xchg
xor
sub
mov
jp
adc
mov
in
js
dec
fs
dec
cmpsb
push
and
insl
loopne
cmp
clc
fs
and
nop
insb
adc
in
std
repnz
cmp
data16
inc
fimull
ds
repz
lcall
adc
mov
loope
fdiv
aaa
aam
jno
push
jns
addr16
dec
jo
push
jb
cmp
cmpsl
inc
cltd
or
rorl
pushf
xor
dec
stos
cmp
shrb
and
cli
ret
or
icebp
iret
push
cmpsb
push
roll
rolb
jbe
mov
lods
pop
lcall
lods
xchg
popf
dec
push
push
mov
sub
jle
shll
dec
ss
lret
mov
lds
fwait
push
and
dec
adc
ret
push
fwait
lods
adc
scas
shrb
and
pusha
das
outsl
lods
pop
inc
push
pop
inc
lret
imul
es
pop
ja
mov
mov
movsl
adc
aam
mov
push
fidivrs
scas
push
pushf
out
push
and
or
lcall
dec
inc
ss
mov
fcoml
int
popa
or
push
out
mov
cmp
testl
xor
je
arpl
insb
push
dec
ss
sbb
imul
adc
add
cmp
adc
test
lods
cmp
sub
push
in
pop
test
adc
test
leave
sbb
pop
cmp
xor
in
xchg
leave
adc
pop
ficoms
push
in
dec
xchg
or
mov
in
imul
fsub
repnz
sahf
cld
fiaddl
iret
xlat
out
cwtl
ss
pop
cs
xor
popa
mov
jb
pop
fs
rcl
fimuls
xchg
pop
shll
ficoml
in
imul
movsl
xor
subb
mov
cmp
sub
orb
in
decl
shll
pop
in
dec
test
shl
ja
jnp
push
mov
sub
adc
movsw
push
dec
loopne
mov
jne
shrb
adc
mov
stos
mov
sub
sbb
add
into
ret
sbb
adcb
test
mov
xchg
mov
xlat
mov
push
sti
into
in
icebp
push
mov
and
aad
or
add
jne
push
jnp
mov
add
add
dec
idivl
sub
stc
test
lea
cmp
xor
lcall
iret
mov
mov
cmp
into
rorl
or
xchg
push
inc
cmp
mov
jno
int3
pop
incl
add
psubd
jle
adc
std
loope
sub
adcb
jl
and
inc
xor
dec
cmp
mov
xor
data16
fsubr
test
lcall
mov
insb
shr
loop
xor
aas
adc
jl
mov
jle
mov
dec
scas
arpl
jp
sub
cltd
bound
cltd
arpl
mov
aas
add
mov
mov
mov
daa
add
mov
stos
mov
cmp
or
cmp
shlb
in
outsl
out
add
pop
or
mov
loopne
ret
insb
inc
aas
or
fildl
pop
stos
sub
xchg
stc
repnz
push
and
add
or
cmp
stos
jmp
leave
ss
adc
sub
dec
dec
es
jecxz
jmp
hlt
sbb
sbb
movsb
push
sbb
cwtl
or
mov
cmc
or
sbb
add
inc
xchg
sbb
xchg
jg
lods
sub
mov
mov
adc
cli
out
dec
sub
gs
cmp
out
mov
xchg
inc
jne
mov
pusha
dec
sahf
shlb
sbb
xchg
icebp
iret
jno
dec
inc
mov
adc
adc
das
mov
jo
int3
xor
push
hlt
movsl
in
dec
sbb
scas
das
and
push
shlb
shrl
jae
mov
inc
cmp
fwait
mov
xor
push
hlt
pop
scas
or
lahf
cmc
test
addr16
insl
test
shlb
jb
and
daa
movsb
lock
movsb
leave
push
cmc
xor
imul
loope
in
mov
aad
pop
pop
mov
movsl
cwtl
sbb
push
dec
jp
in
inc
push
fstpl
sub
or
dec
xor
xor
dec
mov
push
pop
ja
add
cmp
and
jno
adc
frstor
adcl
xlat
xlat
fdivs
and
out
mov
into
pop
js
xor
mov
dec
push
repz
cld
jge
ja
dec
add
mov
inc
movsb
adc
add
inc
inc
sub
and
sub
mov
xor
es
lds
xor
xchg
add
repz
cmc
movsb
test
add
or
push
xchg
jbe
jns
movl
popfw
pop
pop
fisttps
cs
dec
xor
cmp
in
fst
in
inc
and
icebp
jmp
cli
mov
imul
not
and
jle
aam
xor
mov
test
sbb
adcb
inc
in
mov
push
cs
fists
dec
pusha
pop
shll
pop
push
or
bound
test
adc
adc
stos
por
dec
cli
jle
and
repnz
lods
ja
ljmp
ret
pushw
mov
cli
test
dec
stos
popa
mov
and
subl
cmp
out
mov
lds
adc
and
pushf
inc
pop
and
sub
and
test
addr16
sbb
in
test
inc
cwtl
dec
in
stos
das
mov
dec
lock
or
cmpsl
push
mov
orl
pop
push
push
push
adc
push
xor
inc
test
jecxz
fwait
fwait
addr16
pop
sbb
mov
pop
add
sub
xor
rcl
or
stos
test
push
mov
pop
pop
inc
aaa
dec
pop
in
call
rcrl
or
or
lock
ds
cmp
push
push
add
fistpll
pslld
lcall
push
adc
rcll
push
mov
dec
xor
je
mov
push
sub
in
jns
cmpsb
pop
scas
jno
sbb
js
icebp
mov
and
inc
mov
movb
aad
dec
sbb
lock
push
mov
xor
dec
inc
fwait
pusha
or
sub
cmpsb
sub
adc
push
or
test
sub
jns
or
mov
cmp
clc
fldt
stos
add
daa
cltd
nop
cs
and
fdivrs
pop
fstpt
xchg
xchg
ja
fs
jge
dec
shlb
or
adc
xor
push
arpl
sbb
jle
adc
lret
loope
cld
dec
add
scas
fs
inc
cwtl
fnstsw
insb
aaa
push
popa
pop
dec
stc
push
addr16
pop
pop
pop
mov
mov
fiadds
fidivl
iret
xchg
repnz
lea
scas
negb
stos
push
xchg
lods
in
fldl
lock
pop
out
mov
mov
rorl
fdivrp
insb
popa
fwait
and
imul
jge
mov
jp
pop
and
pop
lret
ret
mov
mov
mov
xlat
sbb
inc
es
add
jmp
sarb
mov
xchg
arpl
mov
mov
lods
stos
and
and
pop
xor
inc
pushf
ss
jne
iret
inc
je
mov
rcrl
xor
leave
jo
xor
and
pop
sub
sbb
scas
xor
and
ficoms
stc
jno
das
sahf
dec
mov
in
push
shr
fdiv
js
stos
inc
js
ja
push
fiaddl
xchg
push
or
xor
enter
xor
jns
push
mov
mov
mov
jnp
loope
cmpsl
pop
sbb
ljmp
add
push
out
movsb
and
std
sbb
or
inc
jecxz
das
insb
cmp
jno
xor
adc
ficomps
inc
mov
mov
adc
mov
dec
mov
filds
pop
jp
xor
inc
pop
fcoms
nop
add
jl
jns
push
roll
mov
dec
in
mov
test
inc
mov
push
dec
xchg
in
mov
fdivs
aaa
aam
fnstcw
push
shlb
and
aad
add
shll
rcrl
ds
mov
loopne
enter
push
lods
test
jnp
pop
mov
pushf
orl
iret
cmp
add
leave
inc
dec
jl
sub
mov
mov
jg
loopne
sub
mov
jns
orb
mov
inc
popf
scas
mov
dec
js
lods
xchg
sub
ja
rolb
sbb
testl
pop
and
mov
icebp
mov
xchg
mov
scas
pop
mov
clc
adc
nop
jecxz
sub
mov
or
xor
cltd
stos
das
pop
test
xlat
test
dec
in
xchg
mov
adc
rclb
mov
dec
lds
call
pop
xchg
fistl
dec
popa
pushf
rorl
push
out
into
xchg
cmp
cltd
popf
mov
scas
stos
cmc
mov
add
negl
test
cmpxchg
test
push
xor
xlat
out
pop
push
adcb
xchg
repz
pop
mov
pop
cli
mov
jo
inc
and
and
incl
adc
lret
std
sahf
or
mov
inc
xchg
mov
int3
add
scas
pop
push
cmp
sbb
xchg
pop
xor
push
xor
test
add
cmp
call
sbb
push
and
es
inc
sub
push
jge
push
pop
into
inc
sub
enter
dec
jo
jmp
out
stos
mov
pop
or
jl
xchg
lods
inc
pushf
popf
xor
lods
js
inc
shrl
mov
and
mov
fcoms
jno
test
jmp
int3
cwtl
stos
xchg
rep
test
mov
inc
movsb
xchg
nop
fwait
out
fadds
jnp
mov
push
pop
vprotb
mov
mov
lds
leave
insb
data16
xchg
sbb
or
imul
repnz
mov
xor
aaa
jbe
fcoms
pop
push
mov
cmp
lock
mov
mov
xor
aam
adc
add
pop
out
in
mov
push
sub
sub
loop
mov
mov
push
xchg
notl
push
sub
lds
loop
mov
dec
push
insl
xchg
pop
mov
fsts
icebp
mov
das
mov
xchg
es
add
jp
popf
xor
xor
dec
cmc
push
lcall
cltd
jle
fdivr
jmp
jb
ja
cwtl
sub
xorb
xchg
fcompl
sbb
lahf
aaa
mov
mov
rorl
push
inc
nop
mov
ja
std
mov
and
ss
hlt
add
fwait
in
imulb
xor
mov
add
xchg
les
and
jnp
lret
das
nop
add
je
ja
addr16
cmp
sub
mov
aaa
repnz
fcomi
pushf
and
add
add
cs
pop
inc
icebp
sbb
fisttps
jae
cmc
lret
out
cmp
pop
jmp
incb
inc
mov
sbb
jecxz
pop
in
mov
bnd
dec
adc
repnz
lahf
insb
sbb
out
or
dec
dec
stos
adc
sbb
loope
cmpsl
jns
jns
and
das
popa
inc
cwtl
push
call
push
scas
loope
inc
sbb
call
inc
and
stc
xchg
inc
jo
sarb
cwtl
inc
out
jbe
inc
sahf
call
sbb
aam
or
insl
jnp
pusha
fistps
vpmulhuw
cwtl
cwtl
int3
lcall
inc
rolb
push
lcall
inc
jo
inc
test
jbe
xchg
test
out
cmpsl
dec
and
jb
or
inc
stos
inc
sti
es
scas
mov
mov
push
sbb
shrb
iret
fs
push
ds
test
adc
dec
nop
inc
jge
stc
mov
cmp
or
mov
xchg
popa
mov
and
push
xchg
push
pop
fisttps
pop
xchg
and
dec
hlt
add
push
shr
in
push
xchg
inc
ret
cwtl
mov
addr16
ds
scas
lret
ds
sbb
pop
cmpsb
dec
mov
adc
add
into
pop
push
mov
xchg
add
xchg
xor
shll
mov
sub
jmp
pop
xor
push
aaa
lds
flds
pushf
push
outsb
jl
orb
shll
out
stos
and
rorl
mov
pop
push
addb
aam
ds
sbb
push
push
sti
mov
xchg
jae
aam
or
xor
cmpsb
jbe
mov
pushf
sbb
rorl
in
push
fsubrs
xchg
dec
sti
bound
pop
xchg
inc
add
push
test
jg
adc
push
jns
pop
push
adc
mov
mov
push
sub
aaa
sub
or
pop
lods
adc
in
sahf
mov
sarb
mov
ret
fcoml
add
pop
jbe
cmp
lods
push
cmp
movsb
insb
dec
mov
xor
dec
lea
out
push
add
test
xchg
pop
rorl
fxch
fldt
and
and
loope
xchg
fs
aad
mov
mov
inc
loope
mov
outsb
mov
sub
pop
movsb
adcl
daa
sarl
mov
jns
loope
enter
mov
stos
test
jnp
mov
mov
xor
adc
insl
leave
popa
mov
stos
mov
sbb
jno
inc
fsts
orb
mov
fwait
add
cmp
mov
and
fisttpl
and
insl
enter
stos
or
gs
bound
lahf
push
subb
mulb
jo
imul
mov
cli
push
negl
lds
and
pop
pop
cmp
jns
jl
adc
push
mov
sub
sub
cmp
or
ret
les
into
dec
or
xor
dec
aad
insl
ret
inc
repz
cmpsb
push
loop
fdivs
xchg
push
mov
sub
cmp
and
fs
push
iret
mov
cmp
in
mov
xchg
pop
cwtl
int3
jge
pop
mov
add
pop
cmpsb
inc
dec
adc
sti
dec
imul
xchg
fadd
insl
sbb
divb
mov
enter
jmp
test
and
das
movsb
adc
fnstsw
cmp
jb
cmp
inc
adc
mov
loop
out
mov
sti
pop
test
scas
mov
or
fucomi
xchg
mov
xchg
ret
mov
adc
cmc
loop
clc
ds
cmpb
loopne
ss
ltr
add
aam
jns
loop
add
or
fisttps
pop
jnp
and
stos
push
nop
mov
mov
dec
push
ljmp
in
lock
dec
cmp
fnsave
inc
pop
fwait
dec
dec
mov
xchg
push
out
mov
movsb
pop
call
sti
mov
subb
fsubp
xchg
lret
into
mov
and
addl
and
scas
cmp
out
lods
scas
cwtl
sti
imul
add
stc
ficomps
outsb
sahf
xor
aad
mov
jo
mov
add
loopne
cld
cmpsl
jne
ret
stc
enter
es
stos
rorb
jg
call
inc
push
imul
push
xlat
mov
lcall
aad
mov
lods
pop
mov
cmp
push
mov
mov
xchg
adc
mov
inc
dec
xchg
jns
sub
movsl
mov
jo
add
dec
lret
enter
addr16
fs
sub
test
enter
cltd
sbb
and
pop
xorl
fwait
ds
pop
clc
and
outsb
test
mov
leave
lahf
inc
pop
jle
inc
rcl
xchg
jno
das
imul
movsb
bound
sbb
inc
aad
and
dec
sarl
mov
push
inc
in
and
dec
fldenv
cmpb
jo
pop
lret
or
nop
dec
shl
jl
outsl
out
mov
imul
outsb
or
or
push
in
fwait
jno
scas
jecxz
cmp
inc
mov
mov
add
ljmp
mov
pop
and
stos
adc
cld
inc
les
mov
xor
xchg
sbb
mov
add
test
outsl
out
pushf
lods
push
aam
aad
mov
mov
jno
popa
mov
call
daa
sti
xchg
enter
add
push
fimuls
imul
stos
loope
insb
aam
shlb
in
imul
faddl
jbe
in
rcll
int3
jecxz
aam
xor
mov
or
mov
xchg
adc
hlt
js
cmp
push
jbe
clc
jge
aaa
popl
das
fs
leave
add
jmp
and
cmp
sbb
xor
pop
dec
ret
mov
stos
pop
inc
insb
push
fwait
das
lret
xchg
cs
sbb
dec
cld
mov
lret
push
cwtl
jnp
mov
jecxz
lret
push
sbb
jg
out
lods
aam
outsl
jl
sbb
fmull
addr16
outsl
loopne
mov
add
testl
adc
sbb
mov
sbb
jo
shll
pop
sbb
pop
xor
mov
test
es
add
adcb
enter
mulb
lock
pop
or
sub
js
out
aas
inc
aad
pop
xor
jmp
int3
and
mov
or
add
movsl
lock
mov
adc
mov
lret
daa
divb
lret
lret
aad
call
arpl
push
inc
sbb
xchg
pop
sub
mov
subb
scas
or
loope
push
add
sub
dec
cmp
add
repz
jg
cmp
xchg
bswap
adc
jne
movsl
xor
arpl
loope
movb
and
int
rorl
stc
pop
and
push
xchg
mov
imul
out
test
mov
ret
outsb
mov
add
pop
int
pusha
push
pop
rcrl
daa
cmp
lock
repnz
cli
pop
loope
push
pushf
cmp
lods
pop
add
add
popf
and
and
outsl
cld
stc
add
cmc
mov
push
push
sahf
je
adc
pop
fildl
sbb
jbe
lods
push
icebp
mov
adc
fmuls
cmp
mov
push
sub
sarl
clc
and
in
push
fidivl
xlat
mov
movsb
add
das
fwait
pmuludq
mov
dec
hlt
pop
insb
inc
push
mov
loopne
cmp
push
mov
sub
pop
lock
mov
shrb
xlat
loope
sbb
sub
push
jg
stos
mov
enter
cli
fmull
push
insb
out
cwtl
push
mov
adc
xor
ss
pop
xchg
insl
rcll
xor
fistpl
out
dec
or
dec
pusha
push
dec
std
sub
push
push
icebp
mov
cmp
push
data16
in
adc
fs
hlt
cmp
xchg
ljmp
push
fbld
mov
add
aas
add
adc
ja
or
ds
ljmp
xchg
out
or
cmp
sub
movsb
mov
add
in
popf
add
decl
pop
sub
add
lock
sbbl
sbb
js
jo
mov
adc
jmp
sub
lret
push
mov
jge
mov
add
mov
adc
xchg
and
dec
ljmp
inc
lods
push
fadds
frstor
xlat
mov
push
mov
sahf
sti
popa
inc
iret
push
fists
inc
mov
mov
dec
mov
sbb
inc
push
fldt
adc
ret
movsl
adc
pop
in
clc
pop
push
adc
lods
lock
scas
sti
xchg
das
bound
out
loope
testl
stos
les
adc
sub
or
push
adc
sbb
inc
inc
lods
xor
incb
sbb
inc
aad
cli
inc
sbb
mov
enter
out
bound
dec
int3
xchg
mov
arpl
mov
imul
push
in
push
popf
mov
pop
xor
fcoms
orb
in
pop
cli
or
push
jmp
fwait
sti
mov
icebp
popf
sbb
sub
jmp
jmp
push
lock
push
nop
mov
call
jb
xor
pop
jo
xor
lds
fcmovb
add
fcomps
jne
in
cld
dec
mov
xchg
lcall
adc
test
sub
push
sbb
sahf
push
adc
loop
mov
sti
sbb
dec
push
scas
lahf
das
aam
icebp
ret
outsb
scas
or
or
inc
sbb
ljmp
repnz
push
push
jne
dec
test
popa
lret
inc
xchg
xchg
adc
and
js
push
pop
bound
arpl
jge
cltd
mov
jg
pcmpeqw
and
and
adc
pop
pop
pusha
or
xchg
adc
shlb
insl
int3
mov
jecxz
pusha
loopne
dec
aas
jecxz
add
shr
inc
ljmp
push
jo
inc
mov
push
fists
mov
jne
or
loop
xor
mov
dec
gs
andb
sarb
adc
xor
sub
cwtl
js
nop
movsl
xor
dec
es
mov
mov
mov
xor
xchg
push
jne
add
leave
clc
cmp
cltd
xor
push
std
ret
pop
ljmp
test
icebp
and
ss
clc
xor
mov
stos
aas
add
notb
mov
xor
aam
xlat
jnp
mov
sarb
push
aam
or
xor
rcrb
insl
int3
mov
mov
insl
cltd
push
mov
test
or
pop
movsb
icebp
pop
shrb
cltd
call
mov
test
sub
adc
xor
fldcw
scas
outsl
xchg
pushf
pop
les
fstp
inc
out
sub
xchg
loopne
scas
daa
sub
pop
ret
into
cmpsl
dec
aas
pop
xchg
jge
and
mov
insl
inc
or
fcomp
push
or
pusha
pop
and
sar
cmp
test
mov
insb
mov
inc
dec
and
aad
mov
cwtl
stc
adc
xchg
push
fwait
xchg
leave
xor
lods
popa
cmp
push
push
xor
adc
mov
pop
lods
inc
out
cmp
xor
xchg
cmp
jmp
mov
aas
jg
xor
jle
lock
jnp
repnz
inc
dec
into
inc
mov
sbb
hlt
dec
ljmp
mov
push
lret
jae
les
cmp
xchg
clc
shll
test
fucomip
xor
rolb
mov
mov
xor
jecxz
imul
pop
mov
in
jp
cltd
int
cmp
es
adc
aas
shrb
and
outsb
imul
icebp
test
ds
xchg
mov
cli
andl
roll
push
scas
inc
dec
sub
sbb
mov
pop
daa
push
xor
sub
lock
pushf
mov
outsb
xor
enter
inc
repz
xor
adc
push
cmp
dec
cwtl
jecxz
sbb
les
shrb
sub
adc
mov
adc
xor
aaa
or
lcall
insl
push
mov
push
negl
cmp
or
add
mov
push
cmp
fsubl
lock
jle
cmp
inc
push
jnp
mov
inc
cmpsl
adc
inc
aas
imul
cmc
and
push
xor
cs
data16
xor
aas
popa
cld
sbb
dec
xchg
cmpsl
es
js
push
imul
lea
outsb
mov
add
cmc
cmp
stc
fs
pop
jge
sbbl
negl
push
sub
mov
mov
leave
pop
popf
in
popa
push
addl
mov
push
adc
inc
cli
mov
out
cmp
ds
shrb
into
leave
out
adcb
popa
ljmp
call
mov
sbb
add
cmp
lods
fldt
jle
bound
daa
add
jg
xchg
sub
imul
js
xchg
fs
repz
fwait
cmp
das
leave
and
sub
out
fisubs
mov
dec
fs
xor
test
scas
push
ret
cmc
xchg
ret
and
jp
add
test
cwtl
cli
lcall
imul
scas
in
shrl
lret
lods
and
loop
loop
fmull
fs
jno
loop
add
jns
test
test
inc
adc
jmp
decl
sub
xchg
sub
mov
movsl
test
fwait
jmp
addr16
test
fld
shrl
pop
stc
repnz
pop
pop
pop
ret
lret
test
in
mov
inc
rolb
test
or
dec
sarb
cmp
lret
push
xlat
inc
mov
fimull
jno
and
rorl
add
in
popf
xchg
ds
js
and
movsl
test
psrad
lcall
cwtl
xchg
out
mov
inc
add
inc
cli
punpckhdq
jns
adc
add
xlat
mov
aas
mov
aas
xchg
sti
adcb
int
adc
pop
adc
or
dec
or
cmpsl
out
jl
and
call
pop
mov
cmp
out
scas
mov
mov
rclb
mov
push
add
lret
or
scas
jno
addl
or
out
pop
into
fucom
and
inc
sbb
mov
dec
xor
pop
mov
xchg
pop
mov
repz
sbb
push
filds
gs
cli
add
dec
mov
mov
sbb
jne
inc
mov
testb
cli
int
sub
push
mov
adc
adc
dec
scas
gs
dec
push
imulb
sub
popf
out
xor
subb
mov
les
ds
xor
pop
rorl
dec
jne
pop
dec
dec
push
popa
mov
cwtl
rorl
fisubrl
dec
sbb
iret
sub
push
dec
pop
inc
mov
pop
jle
loopne
pop
lea
push
les
sbb
addl
scas
dec
jl
mov
lcall
lahf
inc
push
pushf
in
jae
es
in
mov
push
cli
test
cmp
xor
sbb
adc
outsl
xor
jle
mov
xor
test
loop
sbb
clc
mov
data16
je
jge
fnstsw
or
adc
dec
sbb
loopne
sub
rcr
jl
xchg
test
mov
in
sbb
in
out
aaa
sbb
in
adc
in
cld
test
pop
stos
cltd
pop
xor
mov
ljmp
sbb
mov
adc
out
sarb
xor
repz
push
movsl
lods
loopne
sub
push
cli
and
out
mov
cwtl
icebp
lds
shlb
pop
mov
sbbb
xchg
sbb
mov
std
or
xlat
push
mov
mov
add
dec
dec
jne
or
sub
or
pop
xchg
mov
and
jg
hlt
pop
je
add
in
adcl
les
pusha
aas
xchg
ror
push
or
les
lret
jne
dec
sbb
adc
out
imul
jmp
popf
loop
inc
or
xor
gs
xchg
mov
test
cltd
mov
or
add
hlt
mov
cmc
sbb
sbb
mov
push
popf
lahf
leave
ds
sub
add
lods
jb
push
adc
sub
jle
pop
adc
neg
xor
mov
scas
ds
ret
pop
int
lcall
jae
cmpsl
mov
jbe
ftst
loop
out
add
push
sbbl
fsubp
mov
je
or
repz
pushf
sbb
lock
add
mov
inc
es
dec
inc
adc
xor
pushf
jns
fnstenv
test
cmp
enter
test
outsl
jmp
xlat
xor
xchg
dec
movsb
cmp
dec
pusha
push
mov
bnd
mov
insl
sub
lret
pop
cltd
sahf
dec
mov
orb
dec
mov
cmp
dec
fidivrs
into
stos
pop
iret
imul
fistpll
sbb
push
pop
inc
and
clc
ret
addr16
cmp
negb
fdivs
push
aad
or
or
mov
fsts
inc
cwtl
das
test
and
hlt
clc
js
in
and
jl
or
or
call
aas
jns
add
pop
movsl
lds
testl
add
je
je
stos
outsb
xchg
lods
repnz
inc
into
adc
pop
jge
scas
les
push
aas
inc
dec
aaa
les
test
ja
popa
xchg
pushf
out
mov
inc
pop
and
inc
movsb
jl
sbb
pop
jl
push
mov
push
test
fwait
sbb
dec
sti
repz
pop
mov
adc
pop
cmp
mov
fsubrl
xchg
inc
int
push
mov
mov
clc
push
and
in
das
arpl
inc
pop
sbb
jns
das
sbb
mull
xchg
adc
mov
push
mov
mov
cmp
icebp
scas
cmpsl
adc
movsl
pop
inc
into
adc
xchg
mov
sbb
pop
cltd
sbbb
mov
divb
ss
cmp
out
push
jnp
jp,pn
fisubrl
push
cbtw
loop
or
dec
outsb
jns
sbb
and
sbb
cmp
das
arpl
mov
dec
sub
lods
cmp
lret
dec
cmp
insb
adc
imul
add
dec
lahf
sbbl
dec
bound
sub
sbb
sbb
shrb
jbe
and
jb
xor
mov
xor
es
mov
shll
pop
xchg
xchg
xchg
inc
cltd
in
es
leave
sti
and
mov
xchg
subl
cmp
int
pusha
int
and
mov
mov
es
mov
js
xchg
lahf
punpcklwd
insb
jb
loop
fmuls
lods
xchg
insb
repnz
cmp
enter
lahf
outsb
inc
ljmp
adc
enter
testl
mov
xor
fnstcw
mov
or
inc
dec
cmp
jmp
decb
xchg
or
xchg
lock
jp
subl
push
mov
add
dec
dec
leave
fxch
fisubrl
jns
mov
fimuls
rcl
pop
push
dec
cmp
aad
dec
lock
pop
call
mov
lods
jge
ss
mov
fstps
test
lds
adc
and
test
mov
loope
pop
and
ret
icebp
push
pop
arpl
dec
pop
fs
shrb
mov
shrl
xchg
cmp
sbb
xchg
push
in
inc
cmpsl
outsb
fwait
int
mov
mov
idivb
out
sub
outsl
cld
rolb
jle
xor
mov
dec
out
pop
pop
pop
sarb
push
fsubrl
add
adc
pushf
test
fadds
hlt
or
add
jle
fisubrl
lcall
daa
adc
pop
push
adc
push
lds
push
adc
sub
sahf
into
push
jge
sbb
pop
stos
xlat
aas
cmp
repz
sub
inc
icebp
push
xor
mov
push
or
sbb
icebp
ret
sub
lods
lock
ljmp
scas
sbb
popf
out
fmull
mov
cmp
push
leave
or
xor
mov
sbb
subb
pop
sub
mulb
mov
fucomp
add
out
inc
mov
sbb
imul
push
rcll
lret
repz
jno
aaa
sub
imul
mov
inc
es
push
jnp
lcall
shl
int3
mov
cmpsl
adc
leave
test
mov
jno
or
into
cmp
test
xchg
dec
test
arpl
movsl
rcl
mov
sti
cwtl
cmp
sub
jge
xchg
repz
cmpsb
cmp
aam
lahf
xchg
and
cmpsb
mov
repz
sbb
out
jl
pop
bound
test
adc
sub
fsts
xchg
ja
imul
sub
jg
imul
iret
mov
inc
inc
imul
xchg
dec
add
lds
leave
sbb
mov
rep
lock
pop
add
mov
or
addl
fsubl
ds
fisttpl
movsb
or
mov
lcall
jo
rol
mov
dec
ja
push
dec
jle
std
push
mov
push
xchg
aad
loopne
test
jnp
sbb
outsb
in
push
mov
ret
movsl
pop
fildl
cmp
gs
or
mov
jbe
inc
mov
pop
mov
rorb
leave
push
inc
mov
fdivs
or
push
mov
scas
mov
adcb
xchg
pushl
fimuls
dec
adc
adc
sub
lock
jl
in
sbb
or
les
icebp
inc
sub
mov
scas
bound
fs
push
insl
cmc
pop
movl
dec
add
sbb
mov
push
pop
cmpsb
in
push
xor
ror
pop
push
adc
xchg
mov
enter
jno
mov
xchg
xchg
xchg
mov
or
fildll
hlt
mov
push
push
movsb
and
int
jae
test
popf
mov
mov
push
icebp
mov
stos
cmp
cmp
daa
ljmp
test
mov
cmp
push
stos
pop
fdivr
sub
int
into
push
sbb
mov
push
cmc
jge
pop
pusha
leave
mov
daa
adc
sub
cli
mov
aad
out
ljmp
lock
jp
cltd
push
adc
sbb
fdivp
sub
jae
std
push
test
lcall
xlat
aaa
popf
or
dec
push
sbb
clc
testl
out
or
xchg
mov
jne
push
lds
nop
ss
fwait
or
jmp
pop
mov
loop
mov
lret
cld
addb
sbb
imul
stos
shl
mov
in
or
and
cmpsb
sub
stos
stos
out
mov
and
or
and
test
subb
jns
bound
movsl
subb
cmpsl
xchg
fistpl
xchg
rcll
mov
test
mov
and
xchg
adc
test
mov
lahf
mov
jb
xor
pop
inc
mov
or
movsl
pop
test
cmpsb
insb
pop
ljmp
mov
movsl
movsl
push
addb
xor
ror
jg
mov
dec
and
mov
lret
push
out
pop
insl
sub
xor
daa
aad
jle
es
push
cld
in
jno
pop
mov
inc
dec
xlat
cmp
dec
cld
fistpll
add
adc
sub
andl
push
add
jmp
stos
mov
js
sahf
dec
push
cmp
cmp
adc
and
push
sbb
jnp
pop
insb
test
cli
sub
into
cmpsb
pop
lea
leave
insl
sbb
ss
mov
cmp
pushf
dec
xor
aad
or
jle
adc
daa
adc
inc
xchg
dec
sub
int3
xchg
insb
xchg
mov
aas
clc
fwait
ss
xchg
js
lods
push
imul
sahf
test
scas
hlt
cmpb
ds
fisttpll
call
in
xchg
sub
pop
out
outsb
sbb
aad
gs
call
outsb
mov
or
fnstcw
push
sub
jl
dec
loopne
mov
sbb
xor
pop
and
mov
ffreep
ljmp
imul
jecxz
scas
scas
mov
gs
nop
je
popa
dec
pop
add
mov
orl
jge
loop
out
lods
sbb
pop
iret
repz
cmpsb
jp
jbe
cmp
inc
xor
stos
fadds
cmp
shll
dec
adc
sbb
push
sarb
repz
lock
push
push
mov
mov
stos
ljmp
lea
xchg
cmc
lahf
sahf
mov
les
mov
mov
shl
jns
aam
push
out
ret
gs
xor
lock
xchg
push
push
call
pop
xchg
or
pop
pop
jecxz
sti
push
push
dec
mov
xor
mov
mov
sub
ljmp
pushf
loope
xlat
outsb
cmp
mov
out
or
sbb
or
inc
in
aas
popf
js
jb
pop
adc
jecxz
clc
cmpps
bound
shrb
aaa
cld
push
nop
cmp
dec
mov
xchg
sub
cmpsl
inc
stc
cmc
out
popa
insl
inc
ret
push
inc
mov
mov
adc
mov
imull
repnz
dec
jmp
or
pop
xchg
mov
std
push
leave
in
jmp
fsts
out
roll
lods
sbb
and
fisubl
out
xor
lods
mov
movsl
push
mov
out
jb
jge
xchg
lret
sub
addb
jmp
cmp
outsb
sub
add
jo
pop
cmpb
sub
es
xchg
xlat
stc
adc
repnz
adc
mov
and
mov
push
repz
lret
or
xchg
clc
jmp
adcl
bound
popf
adc
dec
jg
loopne
xlat
mov
inc
imul
pop
push
sarl
scas
loop
gs
or
sbb
cmp
sbb
cmc
sub
sub
in
jo
xchg
aad
cmpl
cmp
into
or
loope
push
xchg
bound
leave
rorl
xchg
inc
test
mov
dec
popf
je
push
mov
out
sti
push
and
stos
clc
out
daa
pop
scas
jne
fs
jmp
fadds
pop
xor
push
and
insb
pop
outsb
push
inc
or
mov
inc
ret
cmc
pop
pop
mov
adc
mov
cmp
jg
inc
or
inc
test
pusha
dec
lock
push
adc
adc
sbb
jo
jnp
faddl
pushl
mov
add
mov
jo
enter
jl
jae
mov
cmp
mov
inc
pop
and
loope
jecxz
sti
mov
pop
or
cltd
mov
xchg
pop
cmpsl
mov
cmp
aam
add
jno
daa
add
lock
cmp
mov
jl
hlt
js
into
push
jno
sbb
xchg
icebp
testl
pop
cmp
aaa
adc
pop
int3
inc
mov
imul
aam
test
test
jae
cmpsl
xbegin
or
lock
cmp
call
dec
in
pusha
pop
xchg
in
mov
push
imul
push
sub
ret
cltd
dec
daa
jmp
jbe
jg
stos
cmp
insb
xor
xchg
je
push
inc
movb
pop
inc
loopne
repnz
mov
cmp
jo
loopne
test
ds
negl
arpl
inc
in
insl
add
adc
int
push
jbe
dec
cmpb
test
mov
mov
aam
mov
stc
add
leave
inc
insb
fbld
push
lods
ljmp
pusha
insl
jle
xchg
mov
and
int
fsub
sub
cmp
inc
andl
push
inc
rolb
jae
adcl
pop
testl
sub
mov
fisubrl
aad
and
mov
mov
push
cld
loop
pop
sub
shll
mov
orl
sahf
in
loope
out
cmp
mov
jmp
fsub
out
or
aaa
mov
pop
aaa
jo
daa
fnsave
popf
cmp
mov
dec
cli
inc
dec
jbe
adc
pop
lods
pop
pushf
cwtl
xor
fildl
mov
gs
fdivl
jne
arpl
jb
add
cmc
leave
xor
mov
mov
sbb
stc
lea
mov
adc
sbb
into
adc
out
jge
add
es
xchg
hlt
leave
adc
pop
push
mov
daa
cltd
lret
xchg
mov
fs
fucom
outsb
xor
and
cli
jmp
push
popf
loopne
lahf
ds
push
sahf
cmp
cmp
mov
cmp
xchg
inc
sub
push
mov
dec
xchg
lret
sbb
adc
insb
mov
jo
shrb
flds
lock
cmp
xchg
and
xchg
mov
mov
out
ja
cmpsl
mov
aad
idivl
pop
mov
push
lods
repnz
roll
cmp
xchg
mov
sub
push
lahf
add
mov
jo
xchg
xchg
adc
pusha
lea
test
cmp
pushf
lcall
pop
scas
jns
iret
jb
nop
lods
fdiv
adc
repz
je
shll
push
cmpsb
cs
add
shrl
lods
fcompl
mov
and
int
and
mov
in
les
push
hlt
sbb
movb
push
jle
aad
mov
rorb
xlat
sbb
jl
dec
repnz
dec
ret
add
sahf
xor
xor
push
sub
and
scas
sbb
cmp
movsl
in
jg
mov
into
mov
in
mov
call
fs
fcoms
nop
nop
mov
lods
mov
add
mov
pop
js
pop
mov
mov
cmp
testb
push
das
xchg
mov
sbb
sarl
movsb
aam
lods
or
xchg
push
notb
rcrl
pusha
pop
sbb
repnz
loopne
jg
psubb
aas
das
mov
int3
fildl
mov
gs
imul
mov
and
cld
xor
add
insb
out
mov
xchg
fstpl
lock
add
fcmovu
orb
lods
mov
adc
adc
pop
jno
pop
pop
push
add
shll
inc
mov
push
or
lret
mov
cltd
pop
mov
cmp
jmp
negb
adc
or
pop
adc
incl
push
jae
sbbb
pop
sbb
in
or
adc
sub
cmp
xchg
dec
and
mov
cmpsb
cs
sub
popfw
xor
push
add
in
popl
not
pop
cmpsl
insb
addr16
int
pop
mov
push
andb
repz
cmc
outsl
and
lock
or
scas
xor
pop
out
gs
lea
pop
fwait
sub
dec
test
test
or
jne
xchg
pop
dec
mov
mov
out
mov
mov
and
iret
rcrb
sti
fstl
out
cltd
push
sub
ljmp
cmpb
sbb
bound
pop
fimuls
gs
jmp
adc
loope
mov
out
pusha
mov
sbb
out
iret
dec
pop
mov
notb
push
bswap
mov
fisubrl
jb
daa
imul
ljmp
push
or
push
arpl
insb
fsts
xchg
das
add
popl
rorb
lods
jns
outsb
scas
test
pop
int3
scas
adc
add
or
clc
mov
push
mov
in
loope
mov
inc
test
pushf
repz
testb
mov
inc
lea
cwtl
push
sarb
loope
mov
or
push
incb
test
xor
ret
and
cmp
adc
sbb
mov
das
inc
loopne
xchg
jno
xorl
xchg
and
in
loopne
fstpl
test
and
mov
shll
iret
imul
mov
shrb
or
add
aad
pop
add
jns
push
fsubl
lods
jmp
sar
ja
jno
idivb
jmp
nop
pushf
jb
in
or
adc
cbtw
push
cmp
es
xchg
stos
inc
das
test
lea
dec
ret
imulb
in
stc
pop
dec
ret
es
popa
pop
or
data16
sbb
cltd
jb
or
call
inc
icebp
test
outsl
ret
test
insb
add
cmp
xor
push
sub
add
adc
cmp
mov
lret
mov
sub
pusha
aas
and
jl
inc
mov
xor
stc
mov
add
sub
jne
mov
aad
cwtl
sbb
adc
lcall
lods
mov
in
xor
adc
mov
ds
lods
jne
jmp
aaa
cltd
shll
xchg
push
insl
pop
xlat
cli
inc
push
pop
jge
ss
testl
aas
dec
out
lret
call
mov
aaa
mov
stos
adc
stc
jo
fadds
dec
xchg
adc
jo
cmp
push
or
jmp
sahf
dec
xchg
pop
fisubs
adc
sub
rcr
jb
push
hlt
test
sub
sbb
rcll
cmp
ljmp
inc
mov
stos
xor
lock
sbb
loop
addr16
inc
insl
cmpsl
lret
adcl
jge
in
mov
pop
sub
lods
inc
xor
lret
mov
cmp
push
adc
mov
ss
xchg
test
int3
and
imul
xchg
or
xor
fisttpl
or
std
ljmp
mov
fildll
dec
arpl
cmp
push
sub
xchg
and
repz
fneni(8087
add
mov
and
jo
insb
pop
into
cmc
inc
mov
mov
out
aaa
mov
jmp
movsb
push
mov
push
and
repnz
pop
loope
jnp
sbb
or
xchg
jl
addr16
and
notl
adc
push
pop
mov
nop
into
sub
push
adc
cmpsl
mov
and
or
jbe
add
xor
into
fucomi
repz
into
data16
cmp
in
popa
push
mov
cmp
stos
xlat
mov
pop
cmp
mov
lock
inc
xchg
cmp
inc
aas
mov
pusha
test
in
cwtl
fwait
shl
xchg
das
iret
movb
or
gs
lahf
aad
inc
dec
cwtl
jl
pushf
mov
and
adc
xorb
push
inc
or
xlat
sbb
and
mov
popa
aad
push
out
dec
sbb
out
fistl
pop
nop
and
cmp
inc
sarb
std
dec
ljmp
add
dec
cmp
bound
xlat
cmp
test
xchg
sbb
cmp
cmp
xchg
jbe
inc
xor
in
inc
or
and
fs
test
and
frndint
aam
pop
cs
add
xchg
cmp
inc
fidivs
repz
sbb
push
mov
adc
jge
ss
or
push
jge
test
mov
adc
test
iret
call
add
push
arpl
addb
inc
or
dec
mov
rcr
add
push
inc
xor
and
and
out
xor
out
movsl
dec
in
add
xor
dec
sbb
scas
loope
jp
in
mov
jnp
mov
out
inc
push
push
push
iret
sub
jmp
or
push
and
push
ljmp
pop
xor
cmp
jno
dec
jnp
inc
push
jb
inc
mov
adc
shrl
cltd
jmp
sub
xchg
push
out
push
or
cmp
dec
cmpsl
jnp
add
mov
loop
xor
sub
inc
dec
pop
mov
addb
mov
mov
push
jo
cli
jecxz
fadds
imul
aad
dec
and
outsl
cwtl
mov
xchg
ja
push
out
sbb
jo
push
xchg
inc
inc
add
pop
mov
in
mov
leave
or
movsl
imul
inc
popa
push
js
enter
pop
cmp
cmc
or
lret
das
and
inc
mov
imul
ja
sbb
fsts
inc
jmp
jo
into
cwtl
push
ds
fistps
in
cmp
lret
movsb
jp
jl
jne
imul
mov
nop
jo
std
cmp
in
cmp
adc
sub
imul
rcrb
sbb
pop
ret
call
xor
lcall
inc
gs
cmpsb
dec
cmp
add
ds
lods
and
sub
sbb
out
shll
sbb
aas
cs
out
pop
lcall
mov
jge
inc
inc
xchg
movsl
in
pop
jmp
dec
out
and
test
mov
iret
das
stc
pop
test
mov
ja
adc
flds
inc
push
sbb
push
mov
popa
cli
push
imulb
push
lret
push
or
jg
xchg
jecxz
fldenv
sub
push
arpl
mov
mov
data16
xor
inc
fcmovnb
sub
loopne
jb
add
mov
imul
sub
lods
jb
aad
adc
xchg
in
jmp
shlb
and
aam
sbb
adc
inc
inc
jp
jne
cmpsb
jnp
ret
jb
push
fdivl
or
cmp
int3
sbb
clc
sbb
xor
lret
inc
pop
inc
sbb
xchg
pop
mov
call
dec
gs
clc
fadds
aaa
add
push
adc
bound
movsl
and
mov
inc
inc
arpl
stos
jnp
sbb
jbe
in
in
fldcw
lahf
mov
cmp
shll
pop
lods
jl
mov
aaa
jbe
out
xor
jns
pop
orb
notl
inc
movsb
cmpsb
imul
adc
popa
xchg
icebp
push
fistps
jl
stos
jo
fdiv
test
xchg
fildl
xor
adc
cmc
inc
loope
pop
imul
cmpsl
cmp
das
iret
xor
or
scas
xor
je
movsl
pop
jb
rolb
mov
ds
jo
movsl
into
inc
inc
adc
lds
stc
jb
aaa
psubusb
jnp
inc
dec
push
jp
out
cltd
out
jle
sub
ljmp
and
sbb
cmp
in
pop
dec
std
int3
inc
dec
or
mov
popa
out
in
xlat
ficoms
into
or
add
ret
mov
mov
push
xor
jp
push
xor
xor
inc
insl
das
por
lods
bound
out
ljmp
mov
push
aam
dec
ret
mov
or
sar
fs
insb
sub
rorl
add
push
mov
leave
xchg
inc
repnz
dec
dec
dec
in
mov
mov
push
and
into
ret
lock
mov
mov
rclb
mov
aaa
fimuls
push
push
enter
cmp
or
dec
rorb
insl
pop
inc
inc
fistpl
push
int3
sti
and
ds
or
jge
test
jecxz
lahf
dec
insb
mov
ret
lahf
ds
inc
mov
sbb
dec
cmp
xor
std
icebp
je
mov
frstor
add
lret
jmp
into
je,pn
xchg
inc
rorl
imul
pop
or
add
jb
enter
fistl
pop
dec
sbb
xchg
or
inc
rorl
loop
xor
xchg
mov
jle
mov
cs
sub
shrb
bound
jg
dec
repnz
mov
stos
js
jge
dec
aaa
mov
cmp
or
jge
rcrl
test
mov
jb
add
ds
fisubl
sub
push
addr16
mov
fidivs
shlb
iret
jge
fwait
adc
push
cmp
jae
cmp
jge
push
xchg
jg
fidivrs
inc
push
mov
icebp
into
xchg
push
loop
xor
jnp
push
adc
pop
mov
adc
por
fwait
popf
nop
jle
gs
sub
xor
and
xchg
sbb
scas
loope
lcall
aam
mov
daa
jp
imul
push
lock
or
xor
les
sahf
repnz
test
jmp
push
xor
ja
out
aam
dec
stos
popf
call
xor
shrb
test
test
or
fs
enter
ss
lock
std
je
in
xlat
mov
std
sahf
gs
mov
dec
js
cli
les
jmp
pushw
movsb
xchg
mov
adc
mov
leave
cwtl
adc
sub
pushf
mov
and
mov
jmp
sbb
outsl
mov
bound
mov
fidivrs
scas
filds
adc
dec
dec
add
jp
fcomp
test
cmc
sub
cmp
fistpll
jl
in
fdiv
xor
jbe
cmpsl
or
fistl
jmp
cmpsb
incb
arpl
pop
stos
lock
js
les
push
xor
pusha
out
mov
cltd
rcr
cltd
inc
clc
idivl
push
movsl
xor
repnz
addr16
inc
sarl
jmp
mov
dec
clc
aad
repnz
ret
sbb
lock
lret
incl
test
xchg
cmp
imul
out
push
xor
movsb
pop
add
cs
je,pt
loope
mov
lcall
mov
in
inc
lods
in
movups
out
int
aad
sti
loope
pushf
inc
jg
inc
std
ret
mov
out
mov
sbb
outsl
push
and
xchg
cmpb
addr16
xlat
push
xchg
into
xchg
adc
push
popf
mov
sbb
jo
in
mov
xor
in
push
jp
ljmp
movsl
pop
sub
or
es
out
dec
mov
insl
mov
nop
jbe
andl
xchg
cmp
add
push
pop
push
push
jbe
pushf
outsl
or
lods
add
repz
notl
fildl
push
popf
add
test
cmpb
add
push
jmp
mov
adc
movsl
sar
lret
outsb
sub
inc
mov
cmp
test
ds
test
and
dec
xorb
push
sbb
sbb
or
mov
stc
pushf
in
add
decb
jmp
mov
pop
mov
out
mov
xchg
popa
scas
push
dec
negl
inc
xchg
jp
and
leave
jle
add
add
ss
fs
out
test
cs
and
push
sahf
aas
pop
jge
out
test
dec
pop
jb
dec
addr16
push
loope
xor
sarl
cmpsb
cltd
movsb
dec
pop
mov
sbb
testb
ljmp
shlb
pop
pushf
mov
mov
mov
les
repz
add
movl
fs
rorb
pop
mov
add
xchg
mov
lret
cld
iret
push
inc
loop
and
aam
xor
out
cmpsl
stos
fwait
ret
shrl
mov
pop
daa
scas
clc
add
sbb
jmp
mov
adc
mov
ror
push
push
xchg
pop
jbe
sub
xor
or
fcomps
add
xor
loopne
and
xchg
pop
out
popa
pop
outsl
cmpsb
or
and
cmp
pop
cmp
pop
or
loop
add
jbe
dec
mov
cmp
outsl
pop
pop
or
dec
xor
xchg
xor
pop
cmp
xor
out
jb
loop
leave
pushw
dec
cli
imulb
cwtl
repz
mov
cmp
pop
push
pusha
mov
call
pop
cmpsb
mov
nop
cmp
inc
cld
push
mov
xor
cwtl
xor
mov
mov
xor
sti
fs
dec
enter
lahf
stos
movsl
fs
fldt
xor
add
adc
adc
das
ror
rol
jns
xchg
or
jp
incb
cs
andb
cmp
cltd
mov
test
aad
daa
or
insb
daa
adc
sti
mov
cwtl
fdivl
jecxz
bound
jne
xor
or
in
ret
gs
pop
out
add
cltd
push
lret
in
cltd
sbb
icebp
das
pop
adc
out
lds
aas
mov
cmc
push
into
pushf
insl
mov
jne
mov
fisubrs
push
std
popa
imul
pop
sahf
and
enter
sahf
dec
mov
xchg
leave
fistps
or
pop
sti
and
dec
mov
push
jecxz
cmpsb
repnz
subb
adc
push
mov
aaa
fisubs
cmp
loopne
adc
push
adc
scas
ljmp
dec
fcoms
aam
das
enter
adc
imul
leave
filds
into
mov
adc
es
adc
lods
sub
test
or
cs
stos
push
fwait
xlat
cmp
sbb
imul
sub
or
mov
mov
or
jb
and
loop
sbb
div
xor
cs
dec
fildl
in
std
jb
lret
es
ljmp
add
out
sahf
dec
jae
aam
enter
mov
xlat
in
imul
hlt
ret
clc
dec
ror
push
rorb
retw
je
mov
hlt
cmp
ret
js
jmp
adc
scas
or
sub
sub
jmp
test
mov
cmc
outsl
call
xor
out
jmp
inc
sub
mov
int
jp
xchg
and
shl
scas
xchg
idivb
xor
xor
gs
mov
adc
mov
fdiv
stos
scas
xchg
push
and
cwtl
and
jmp
xchg
push
pop
int
pop
pop
fnstenv
cwtl
mov
mov
cwtl
jae
push
mov
fcmovnu
repz
cltd
nop
or
cli
or
bound
fisttps
enter
mov
sbb
adc
in
test
pop
mov
out
in
add
shll
mov
jne
imul
dec
dec
pusha
push
jmp
mov
mov
push
inc
out
jl
in
cmpsb
mov
pop
js
adc
pop
inc
int
push
jae
add
fwait
adc
pop
mov
popa
in
lods
test
mov
xchg
xorb
notb
jnp
notl
cmp
pop
movsb
popf
lds
inc
pop
inc
pushw
xchg
jmp
cmpsb
xchg
adc
xchg
mov
cltd
call
test
sub
arpl
jle
cmp
add
cmp
leave
int3
clc
out
xchg
sub
lods
dec
daa
ds
pushf
adc
fcoms
fs
lock
xor
loopne
lcall
sahf
scas
test
mov
jb
das
out
arpl
dec
lret
cltd
ljmp
lea
jae
jge
cs
das
out
sub
ficomps
pop
fsts
dec
push
inc
sti
je
cmp
inc
fwait
movsb
std
outsb
mov
rclb
flds
adc
or
jle
mov
jne
sarl
fcmovne
mov
mov
mov
xor
rclb
mov
cmp
jo
cmpsl
stc
xlat
push
cmp
xchg
ror
mov
scas
aaa
call
sahf
lcall
xor
jno
add
or
pusha
lds
pop
jl
enter
add
jo
adc
add
or
xor
ds
jle
lock
mov
push
mov
out
or
jo
pop
add
sub
dec
stos
shr
out
cmpl
mov
sbb
xor
sbb
push
hlt
shl
je
stos
int3
mov
sbb
sub
sti
fildll
dec
jno
cmp
cltd
orl
or
xor
popf
pusha
lock
jae
xor
or
repz
pop
pop
mov
mov
mov
out
cmp
imul
inc
adc
jp
mov
cs
ret
xor
hlt
mov
popa
lahf
loop
adc
xor
xchg
fdiv
mov
hlt
or
das
mov
ret
add
test
or
xor
jmp
movsb
js
mov
insl
cwtl
and
test
sbb
rcrb
add
iret
pusha
xchg
xchg
dec
int3
sbb
lods
mov
and
cmp
fmul
sub
and
mov
lcall
int3
sbbb
dec
arpl
dec
fistps
int3
clc
popa
xor
pop
mov
pop
adc
and
cmp
cmp
inc
cmc
imul
dec
es
mov
push
outsb
roll
fcomps
ror
or
dec
ja
add
xlat
jp
add
or
add
jmp
adc
jl
int3
cmp
mov
inc
push
mov
jmp
xchg
mov
xchg
aaa
mov
sub
sub
ljmp
iret
push
push
jp
aaa
sub
or
cmp
inc
jmp
adc
push
sub
push
xchg
call
pop
jmp
and
mov
push
std
cmp
enter
fcom
or
push
out
iret
add
mov
cmp
mov
mov
cmp
mov
dec
out
xchg
lret
mov
jge
mov
adc
mov
pop
push
repz
pop
sti
jbe
stos
add
adc
nop
mov
push
and
xor
ds
xor
movsb
cmpsl
stos
pop
mov
loope
pop
lea
loop
rorb
and
rol
sbbb
push
mov
mov
inc
sbb
push
ljmp
pop
jg
xchg
sahf
dec
inc
aaa
push
mov
ret
push
jge
das
pop
test
shl
cld
data16
outsb
mov
notb
movsb
push
add
mov
push
mov
inc
xor
mov
into
ja
sub
push
test
adc
insb
jg
add
andb
sarb
mov
test
pop
rclb
pop
sub
xor
mov
lcall
pop
scas
sub
pop
idivl
sarl
pop
orl
ret
pop
es
fcmovb
jo
ja
adc
lods
add
and
into
es
dec
notb
data16
or
popa
dec
jecxz
mov
les
out
sbb
les
pusha
fnsave
sub
negl
int
mov
sub
push
cli
inc
testb
in
push
testb
shll
into
cs
icebp
and
and
mov
test
daa
push
sbb
sbb
fwait
or
adc
pop
ret
mov
out
jmp
sbb
add
cwtl
ret
shlb
jge
mov
ljmp
mov
inc
out
xor
mov
hlt
bound
add
out
scas
cmpsl
jbe
out
insb
stos
cmc
push
pop
inc
fdivs
pop
push
in
addr16
loope
outsb
sub
in
shlb
ret
push
insl
jecxz
movsl
pop
adc
cmpsb
aaa
fmull
aam
pusha
sti
xor
pop
and
push
sti
insb
or
sarl
clc
pop
jbe
adc
inc
xor
pop
sahf
aam
pop
lret
daa
cltd
mov
cs
push
xchg
jmp
xchg
cmove
jne
mov
push
in
aas
sbb
jno
mov
push
pop
hlt
add
xchg
iret
cltd
or
ja
mov
test
pop
dec
and
and
inc
cmp
sbb
and
out
fs
xor
pop
mov
lods
test
cmp
xor
sub
loope
and
xchg
jo
inc
stc
out
das
jl
in
ss
shrl
gs
mov
dec
cmp
dec
xor
add
adc
mov
push
xor
inc
outsb
push
unpckhps
fsub
and
mov
lret
xchg
xchg
pop
loopne
dec
jae
and
sub
xchg
arpl
repz
cmpsb
scas
int
sbb
fmulp
in
or
adc
cmp
sti
adc
lea
stos
mov
mov
or
add
pop
mov
test
jne
popf
lods
insl
in
push
lea
mov
je
and
pop
sub
sbb
add
aad
cs
pushf
cmp
stc
in
leave
es
popa
adc
xor
dec
jnp
sbb
sahf
in
addr16
rcll
jecxz
movsl
cmp
in
sub
sub
mov
sarl
jecxz
pusha
jmp
icebp
mov
movsl
dec
push
dec
and
add
xchg
or
in
mov
pop
xchg
pop
jae
sbb
les
lret
jl
mov
push
inc
into
mov
lret
xchg
mov
add
adc
mov
dec
xor
popa
mov
mov
xchg
aas
jle
ja
pop
dec
test
cmp
xchg
movl
jne
iret
jg
out
ljmp
pop
leave
push
xor
test
inc
notb
jno
lock
adc
aaa
subb
cmp
popf
cs
jb
pop
xor
dec
mov
movsl
aam
in
mov
xor
dec
test
mov
jns
in
xor
mov
push
loope
inc
jmp
clc
fwait
test
dec
jo
pop
out
jle
scas
movsb
jle
xchg
insl
dec
xlat
mov
mov
jmp
sub
jno
pop
mov
xor
xchg
out
ret
or
je
adc
pop
jmp
out
sti
cmp
call
movsb
xchg
lds
daa
test
pop
adc
inc
jnp
cmc
imul
scas
cmpsb
or
aad
push
out
icebp
repnz
add
mov
mov
sub
mov
std
cmp
iret
dec
jbe
out
pop
xor
rcrb
xor
mov
aaa
inc
xchg
aas
cmpsb
xor
bound
dec
popf
xchg
push
mov
lds
push
push
inc
push
loopne
mov
mov
add
adc
xchg
sbb
adc
xchg
mov
xchg
rorb
imul
mov
jl
mov
test
dec
pop
push
jbe
loope
repz
aaa
and
mov
adc
xor
xor
stos
fwait
xor
test
in
inc
adc
je
test
inc
dec
mov
addr16
add
lahf
xchg
mov
and
push
pop
sub
call
in
adc
daa
jl
pushf
sbb
aam
popf
mov
or
xchg
fisttps
int3
adc
data16
les
mov
arpl
stos
popa
pop
std
repnz
fidivrl
insl
push
dec
div
nop
es
test
cmp
imul
adc
cltd
loopne
inc
pushf
icebp
aas
scas
fcmovnbe
xchg
mov
aas
inc
sub
mov
cmp
jne
cmp
dec
and
mov
pusha
xchg
dec
mov
cld
ret
jns
movsl
mov
jle,pt
int
adc
lret
icebp
aad
sbb
dec
lods
and
jp
cmc
and
js
shll
adc
jmp
test
or
xchg
xchg
push
test
jbe
lret
inc
xlat
sarb
popf
outsl
xor
add
loope
jp
jb
outsb
dec
loop
stos
rcl
inc
jecxz
xchg
fisttpll
int
xor
pop
out
xor
mov
mov
lcall
sbb
movsl
xchg
sbb
testb
sub
popf
out
leave
lret
push
out
sbb
imul
mov
repz
sbb
cmpl
jecxz
out
int3
dec
and
test
adc
xchg
jecxz
iret
sbb
and
dec
or
outsb
outsl
mov
aas
pop
adc
fdivl
xchg
dec
or
cltd
mov
sbb
sahf
xor
xchg
fmull
addb
shrl
mov
push
pop
pop
lret
xor
cmp
xorl
cmovg
or
push
jne
loopne
or
mov
popa
and
adc
test
adc
ds
add
jmp
fwait
decl
or
xchg
out
adc
movsb
sub
add
leave
aaa
mov
sahf
cmp
xor
sbb
mov
imul
das
or
minps
inc
mov
in
rcrl
lret
mov
inc
cmp
out
adcl
jbe
inc
xchg
mov
call
xchg
jmp
rorb
je
mov
mov
loope
ficoms
addr16
jne
xchg
fidivs
xlat
out
xchg
movsl
jmp
bound
ljmp
and
div
pop
out
mov
sbb
into
mov
scas
lds
mov
pop
xchg
lods
loop
pop
add
test
pop
jle
adc
cmp
daa
loope
lods
out
xchg
xor
adc
ljmp
movsl
pop
das
sub
lods
stos
test
fistpll
adc
int3
and
ds
shlb
fildl
cmp
push
push
imul
or
test
jb
sub
in
lret
aaa
add
mov
pop
xchg
das
adc
sbb
pop
scas
nop
addr16
xor
dec
fistps
jne
pop
popa
lcall
in
jg
mov
aaa
dec
adc
ror
enter
sbb
sbb
sbb
jl
outsb
cmpsl
jbe
sub
inc
ja
outsl
repnz
push
or
nop
sbb
mov
add
ss
ljmp
iret
cmc
mov
mov
in
add
jp
cmp
movsl
xchg
call
fisttpl
lock
dec
sahf
mov
hlt
scas
in
scas
jecxz
movsb
xlat
popf
sub
xlat
mov
xchg
dec
repz
jle
mov
mov
lock
cmp
loope
int
movsl
cmp
std
jns
mov
aad
sub
cmp
xchg
and
in
pop
je
or
jl
int
pop
enter
daa
mov
sbb
cmp
push
out
jle
pop
cmpsl
sub
scas
in
mov
ljmp
adc
out
roll
mov
cmp
in
dec
jl
in
out
jo
add
mov
sbb
fsubrp
push
ja
cmp
das
in
mov
dec
stc
aaa
and
ret
ret
mov
sub
mov
mov
inc
jge
jecxz
sbb
pop
xorl
es
xchg
or
mov
xlat
add
mov
shll
adc
cwtl
push
sbb
mov
popw
jbe
xor
aas
loopne
fsubrs
push
icebp
rorb
jmp
shlb
fmull
push
and
aad
inc
fidivrl
lea
setns
popf
xchg
jp
jne
leave
xchg
mov
subl
xchg
or
xchg
pop
jns
std
and
sub
pop
jo
lods
and
push
aaa
and
sti
pop
fldl
je
mov
stc
inc
mov
jae
and
sbb
pop
lret
scas
fs
scas
int
jns
rolb
lods
incl
test
popa
mov
sub
mov
ljmp
or
ss
push
std
mov
jecxz
loopne
mov
loopne
pop
rcl
push
sub
mov
cmc
push
es
aad
jae
push
xor
es
ss
xchg
cmpsb
add
mov
dec
js
pop
or
insl
aad
arpl
rolb
sbb
jns
xchg
cltd
lods
int3
cmpsb
dec
insl
loopne
jg
in
mov
out
sbb
adc
enter
or
mov
mov
xchg
adc
popa
push
sarl
sbb
fisubrs
mov
jmp
sti
sub
jo
imul
popf
dec
sub
or
into
xlat
and
loope
or
loop
aad
movsl
inc
xchg
cli
jmp
jl
out
mov
fildll
movsb
sub
ror
add
jmp
jmp
in
jmp
inc
shll
sub
push
inc
cmp
repz
and
cmp
repz
lea
fidivl
icebp
dec
xlat
scas
mov
mov
sub
notl
stos
and
sbb
mov
mov
sbb
jne
push
jnp
repz
test
ja
dec
mov
sarb
mov
out
popa
js
cmp
clc
outsl
scas
test
jg
int3
std
in
pop
cli
xchg
adc
mov
mov
outsl
mov
push
movsb
xchg
push
mov
cmc
dec
adc
push
rorb
add
mov
cwtl
dec
xchg
pop
xor
call
sub
rolb
lods
mov
xor
mov
dec
xlat
mov
movsl
out
pop
cmp
fsubrs
cmp
stc
rorb
repz
mov
mov
test
adc
sbb
scas
pop
inc
push
mov
test
das
rclb
jb
enter
popa
mov
out
ds
sarb
repnz
adc
xor
xor
call
int3
pop
cmpsl
jo
pop
push
mov
lahf
orb
int
inc
js
pop
mov
daa
dec
mov
mov
pop
lahf
testb
and
ffreep
pusha
push
mov
ljmp
pop
xor
xor
popf
dec
sub
mov
lret
cmc
jecxz
mov
adc
hlt
sahf
call
rol
sbb
jne
scas
ljmp
dec
xchg
das
repz
ja
test
sub
sbb
cld
test
in
imul
push
and
call
ja
out
sub
push
lret
pop
pop
inc
sbb
dec
push
rcrl
pop
pop
xlat
mov
push
sub
pop
push
sub
icebp
into
or
lods
mov
in
jmp
lret
outsl
dec
jae
xchg
and
push
arpl
icebp
xchg
mov
mov
je
or
insl
test
negb
xchg
idivb
fwait
pop
mov
mov
arpl
outsb
imul
in
daa
cld
or
dec
mov
rol
addr16
pop
or
inc
or
mov
inc
add
in
add
dec
or
decl
push
test
jbe
into
ret
rcr
sti
xchg
ja
cmp
aaa
stc
icebp
mov
pop
fimull
in
repz
ss
mov
les
mov
or
inc
je
mov
adc
and
jns
ds
fdivrl
pop
cmp
mov
neg
sbb
or
pop
and
xchg
test
jp
pusha
dec
loope
jl
orl
aad
cmpsb
cltd
add
pop
fs
jmp
jnp
rorl
lahf
test
xchg
add
push
lahf
ja
pop
pop
jns
inc
add
popa
fsin
add
enter
shll
mov
inc
mov
inc
cmp
lret
fildl
push
pop
jge
lods
mov
sbb
sahf
mov
cmp
loope
sub
lock
cmc
pop
cmp
mov
out
js
aad
xor
cmova
cmpsb
lds
popa
adc
mov
mov
decl
fldt
and
mov
inc
ror
adc
in
lods
mov
jae
ljmp
inc
jne
arpl
cwtl
mov
xchg
icebp
mov
gs
and
dec
mov
jne
inc
mov
dec
dec
xor
cmp
or
or
stos
xchg
jle
scas
mov
arpl
dec
test
cmpsl
adc
sub
inc
sbb
int3
cmp
jnp
aaa
push
and
lds
hlt
push
mov
ss
or
push
and
mov
mov
les
push
subl
jmp
add
lret
xchg
hlt
fcomps
cmp
lods
sub
xchg
mov
xor
rcrb
or
loop
add
loopne
push
scas
divb
mov
pop
add
insb
addr16
sub
pop
sub
scas
pop
mov
testb
pop
dec
push
cltd
cmp
pop
cwtl
xor
xchg
bound
inc
jnp
cwtl
mov
push
push
xchg
adc
xor
pop
jae
insl
xor
cmp
data16
jbe
outsb
lds
movsl
xor
nop
cvtpi2ps
in
out
call
cmp
push
fcompl
mov
xchg
stos
js
aam
sbb
cmp
in
mov
rcr
cltd
mov
push
sub
push
movsb
xor
cmp
adc
mov
pop
aam
xchg
or
xchg
clc
add
and
inc
mov
shlb
int3
and
icebp
push
mov
pushf
int
mov
outsl
sub
add
xchg
inc
clc
movsl
push
gs
cmpsl
pop
pop
mov
repz
call
push
cwtl
mov
jb
movsb
inc
dec
cwtl
xchg
mov
xchg
cltd
xor
xorb
jns
cmp
out
pop
xchg
adc
pop
pushf
popa
mov
cld
lds
ds
adc
out
icebp
incb
cmp
mov
cmp
jge
jo
aad
mov
je
aad
dec
cmp
dec
push
push
nop
add
in
xor
xchg
inc
push
xor
lret
out
sub
scas
ret
dec
std
dec
ja
and
mov
stos
scas
or
sbb
xchg
push
in
cwtl
push
aaa
out
adcl
pop
outsl
jg
insb
push
mov
adc
xor
sbb
arpl
cmp
push
aas
mov
fs
push
inc
mov
sbb
movsb
es
add
lret
lea
inc
shrb
mov
mov
adc
scas
add
mov
ss
or
add
mov
xchg
lods
out
shll
mov
pop
dec
push
mov
sbb
arpl
out
push
xchg
dec
mov
inc
sub
push
jb
xchg
fmull
and
test
fidivrl
insl
mov
add
or
mov
mov
je
pusha
mov
or
mov
into
adc
jo
push
or
jg
pop
cmp
dec
push
sub
adc
mov
pop
rorl
inc
mov
outsl
or
jo
shll
ljmp
notl
dec
scas
or
fisubs
mov
imul
addr16
push
sahf
sbb
js
pop
cmpsl
push
in
sub
lahf
jl
mov
inc
xchg
pop
lods
jmp
rcrl
mov
pop
sub
dec
scas
ss
sub
ficoml
mov
inc
xchg
lea
loopne
ja
test
or
and
push
sbb
xchg
into
cmpl
push
daa
and
xor
cs
leave
mov
repz
ret
int
mov
and
push
pop
dec
push
int
in
dec
xor
adc
rcrl
ret
cwtl
push
xor
add
push
shrb
mov
jno
jl
or
xchg
shrb
enter
xor
daa
add
push
out
jmp
push
loopne
add
std
jle
dec
jnp
jns
mov
insl
sbb
cmp
xlat
add
pop
nop
mov
lds
xchg
xlat
test
mov
mov
testb
repnz
into
pusha
or
sub
push
dec
mov
jne
lods
add
cmp
int3
repz
cwtl
xchg
lea
push
pop
mov
ds
aad
insb
sbb
shrl
xor
sub
xor
arpl
cli
push
cs
jb
sahf
pop
pop
mov
sbb
xchg
shrb
sbbb
inc
aas
insb
xor
cli
mov
cmp
lret
ljmp
push
aam
and
pop
mov
jns
test
aam
in
pop
inc
mov
std
mov
or
aaa
pop
or
adc
pop
daa
adc
add
jg
imul
mov
xlat
dec
sub
lret
pushf
das
xor
inc
xchg
sub
push
lea
les
adc
xchg
xchg
imul
push
movsl
or
stos
jmp
lods
sbb
and
adc
in
push
inc
movsl
lods
cmp
out
xor
push
in
push
push
test
adc
mov
push
or
icebp
addl
jbe
outsl
mov
push
inc
jg
jle
and
fwait
fwait
push
xchg
mov
je
mov
xor
push
jns
xchg
cld
adcl
jno
das
cmp
dec
sti
xor
dec
jnp
mov
lret
test
les
jmp
pop
lods
ja
shrl
lcall
pop
sub
int
mov
out
popf
data16
sarb
mov
inc
inc
pop
jbe
mov
mov
lds
lahf
sub
xchg
repnz
mov
inc
xchg
pop
sbb
mov
push
ret
cs
and
xchg
insb
mov
lods
movsb
sbb
lcall
ja
pop
xchg
pop
popa
mov
or
adc
cmpsl
push
scas
fcoml
popf
xchg
sub
add
fistpl
sahf
jecxz
xorl
pop
sti
rorb
pusha
leave
out
insb
popa
imul
jo
dec
je
stc
mov
sbb
popf
ss
cs
adc
dec
mov
mov
adc
jmp
push
movsl
dec
xor
fidivs
fsubr
jne
mov
loopne
je
xlat
add
subl
insb
inc
add
sub
mov
push
imul
xor
xchg
mov
xor
sbb
scas
mov
aaa
adc
mov
push
shrl
mov
pop
push
pusha
cwtl
mov
adc
mov
pop
scas
aaa
jp
jbe
lahf
sarl
and
lods
or
dec
in
mov
add
cwtl
out
jmp
dec
arpl
xchg
loop
aaa
mov
sbb
pop
roll
cmp
add
cs
jmp
sub
pop
gs
je
lret
or
mov
pop
jecxz
jnp
inc
sub
inc
cltd
jbe
data16
dec
mov
and
movl
fcmovnu
jbe
mov
mov
jns
mov
scas
std
sub
fs
dec
rclb
sbb
outsb
fldcw
mov
pop
outsl
pushf
scas
stos
stos
jp
incl
jmp
insb
or
aas
xchg
out
inc
nop
and
lahf
push
dec
sti
ficoml
in
xlat
push
add
or
dec
cmpsb
mov
ss
in
fistps
mov
jne
cmp
mov
call
push
xlat
dec
daa
cmp
loopne
popf
cltd
push
fadds
lcall
and
mov
ljmp
xlat
mov
push
mov
aam
ss
push
adc
push
mov
add
fisttpl
insb
aam
aad
fwait
in
adc
seta
aaa
cmpsl
hlt
int3
insb
jp
cmp
jp
imul
sbb
lret
inc
sub
out
inc
roll
insb
add
pop
outsl
scas
jnp
mov
mov
mov
into
ds
imul
xchg
iret
test
arpl
clc
dec
and
push
movsl
out
movsw
pop
sahf
scas
data16
cmp
mov
pop
jnp
or
jp
test
push
jo
push
adc
dec
pop
les
dec
lcall
imul
leave
insb
in
mov
cmp
ss
jp
adc
inc
mov
lea
jo
jle
sbb
pop
inc
stos
jecxz
xor
mov
test
xchg
test
fisttps
outsl
xchg
adc
or
xchg
xor
cmc
lret
dec
lret
sub
push
mov
mov
dec
pop
pop
aad
xor
pop
sub
nop
adcl
sub
fidivrs
or
out
ds
addr16
adcl
ret
shrl
mov
xchg
cmp
fcmovb
dec
mov
das
cmpsb
scas
add
mov
aaa
lcall
ja
sbb
out
jp
andb
repz
push
fistpl
mov
mov
cmc
fimuls
rolb
mov
inc
cmp
mov
imul
or
fstl
xchg
push
jg
mov
pop
mov
dec
cmp
sub
js
ret
sbb
shll
push
lds
out
and
adc
jnp
aad
fwait
dec
popa
inc
cmp
xor
push
jp
mov
cwtl
inc
scas
leave
ss
popf
je
addr16
popa
xchg
cmpsl
repz
lea
jno
mov
and
popf
jno
test
fdivrs
rcl
cmp
inc
ficoms
mov
test
out
jae
repnz
push
pop
aam
push
push
aaa
jo
movsb
leave
pop
add
xor
ds
mov
push
add
and
xor
cmp
xchg
pop
cmp
pop
fisttpll
fs
or
dec
mov
jb
cs
dec
inc
testb
cmpsl
scas
das
mov
clc
mov
adc
sbb
imul
fsubrs
pop
jge
mov
jmp
shlb
cwtl
pop
mov
hlt
out
push
dec
nop
jmp
inc
lods
mov
push
sub
mov
ss
cmp
jle
mov
lds
mov
add
popl
sbb
int3
cmp
loop
pop
cmp
imul
aas
es
or
sbb
lds
push
pop
mov
fisttps
repnz
mov
ret
ud1
je,pn
and
xor
in
les
mov
pop
pop
into
sbb
sub
xchg
scas
xchg
adc
push
into
push
or
stc
ret
idiv
dec
cwtl
mov
shlb
pop
test
and
outsl
mov
mov
imul
test
pop
xchg
mov
push
pop
imul
jo
push
leave
mov
ja
xor
lret
xor
psubsw
adc
arpl
xchg
lods
or
movsb
mov
add
mov
mov
inc
repz
ljmp
add
pop
fisubl
mov
ficoml
add
inc
and
adc
mov
shl
push
mov
call
jb
testl
cmp
push
test
sub
add
scas
outsl
jp
cmpsl
and
sbb
mov
cmpsb
push
icebp
orl
icebp
add
ds
or
xchg
jge
jg
jno
sub
test
lret
xor
mov
cmp
mov
mov
lcall
push
mov
inc
sbb
cltd
mov
cwtl
xchg
ret
mov
loop
lret
mov
mov
subb
addb
xor
sarl
push
shlb
jl
mov
arpl
pop
push
hlt
out
out
xchg
les
jle
and
inc
dec
lahf
mov
in
enter
or
fistpll
mov
push
sbb
in
xchg
xlat
and
popa
pop
push
push
inc
xchg
pop
push
lods
inc
push
icebp
popa
dec
cmp
je
aad
aaa
mov
adc
or
push
mov
pop
std
push
jl
pop
vmptrst
je
push
movsb
imul
inc
sub
sub
mov
stc
push
and
aam
lahf
cmpsl
mov
sbb
dec
sbb
sub
mov
jns
or
mov
hlt
inc
push
les
js
movsb
inc
cmp
imulb
cwtl
lcall
inc
scas
popf
and
pop
and
add
movb
jmp
pusha
pop
sbb
sub
fwait
hlt
ret
pop
in
dec
jne
lahf
jmp
sbb
pop
inc
jecxz
and
insb
fbld
cwtl
add
push
pop
sub
repnz
xchg
aad
nop
pop
adc
int
subb
inc
adc
out
icebp
or
mov
imul
cmpsb
aaa
ret
cmp
jb
dec
iret
shll
jmp
mov
movups
pop
mov
dec
fcomp
pop
mov
fsubrp
mov
mov
dec
sub
stos
nop
lcall
push
call
mov
fadds
call
stc
push
jge
or
adc
cmp
adc
inc
call
pop
xor
jmp
adc
dec
pop
into
std
loopne
les
cmp
lea
or
push
scas
mov
aaa
imul
outsb
adc
inc
jae
js
pusha
pop
insl
jecxz
and
cmpsb
add
pop
fs
push
in
sub
inc
daa
push
jg
adc
and
test
and
and
ret
pop
or
ja
jl
pusha
cmc
jmp
xlat
aam
lock
jmp
inc
sbb
scas
popa
pusha
in
sub
std
xor
ficoms
dec
jae
hlt
out
adc
std
lret
xor
fiadds
adc
jmp
xchg
push
xchg
sti
test
mov
stos
sahf
mov
jle
in
out
dec
adc
or
test
mov
push
inc
push
pop
sub
or
and
inc
cmp
or
cmp
dec
mov
add
addr16
xchg
pop
sahf
mov
jecxz
xchg
aam
ds
mov
sbb
aad
insl
loopne
enter
xor
rorl
test
inc
fs
jae
push
test
or
pusha
rorl
cmpl
mov
stc
clc
lea
mov
and
lahf
fwait
mov
jo
or
shufps
and
mov
cmp
mov
rol
idivl
push
mov
or
ds
sub
jmp
enter
sub
fcomps
xor
xor
out
and
xor
or
rcll
mov
push
in
push
div
mov
cmc
or
test
es
js
enter
cmp
rorl
sbb
sbb
jg
mov
insb
push
jp
and
jo
inc
or
mov
lea
inc
mov
rep
sub
mov
mov
addb
js
outsl
xchg
mov
inc
mov
push
pop
loopne
xor
addr16
stos
mull
sub
andl
mov
dec
push
jecxz
add
or
in
ret
sbb
mov
int
fisttpl
fcompl
sub
ror
add
cmp
les
pusha
scas
fimuls
insl
sub
lret
scas
outsb
fbstp
das
je
cmp
xchg
mov
xchg
gs
adc
or
inc
mov
and
jnp
decl
test
in
test
adc
sbb
lcall
jl
mov
bound
lea
popa
sbb
dec
and
inc
xchg
cld
test
or
push
mov
iret
lods
mov
sbb
sbb
sbb
sbb
cmc
sti
mov
flds
rcrb
into
cmpsb
fisubrl
push
push
insb
push
sbb
adc
add
or
jmp
pop
and
not
xchg
push
jae
mov
xchg
push
test
push
xchg
mov
pop
mov
je
mov
pop
cmp
out
loop
jl
sub
adc
lock
xchg
sti
pavgw
push
sub
out
push
into
xchg
in
dec
lock
adc
cwtl
pop
push
jb
pop
outsb
adc
lods
repz
incb
dec
mov
jmp
outsb
scas
jmp
in
lret
adc
imul
pop
pop
lock
popf
sub
rcl
mov
ss
push
and
jge
movsl
xor
cmpsl
cmp
int3
dec
adc
cmp
adc
and
inc
in
or
and
test
lcall
jne
push
cmp
jo
stc
ja
pushf
je
mov
in
xchg
jle
mov
ljmp
jno
in
movsl
cmp
lock
mov
or
jb
inc
scas
jmp
push
outsb
adc
mov
pop
es
popa
sahf
fnsave
loopne
adc
jl
adc
or
jno
or
gs
out
xchg
xor
lret
xlat
outsb
lret
xchg
inc
mov
aas
cli
mov
and
push
imul
popf
icebp
xchg
adc
push
cwtl
int3
outsb
fsubs
enter
jl
rsm
mov
jb
fwait
mov
or
sub
iret
mov
add
out
xor
popfw
adc
iret
xlat
into
xchg
jo
push
adc
insb
lret
pop
out
jge
stos
into
in
ss
ret
pushf
pop
in
lods
stos
out
ss
aam
xor
xchg
testb
insb
dec
sti
add
cs
rorb
iret
rclb
in
sbb
pop
sub
cld
mov
es
lahf
aaa
inc
faddl
inc
cltd
inc
mov
pushf
js
add
int
jno
cmp
cmp
test
xchg
fwait
clc
mov
mov
rolb
xchg
mov
cmp
scas
mov
pop
test
arpl
cmp
add
mov
dec
and
inc
fucomp
jmp
shrb
and
mov
fucomp
cmpsb
mul
xchg
cmc
into
add
adc
push
bound
leave
push
fnsave
xchg
jmp
xchg
dec
and
push
cmp
mov
dec
movsl
insb
outsl
cmpsl
dec
sbbb
mov
xchg
mov
icebp
dec
sbb
in
mov
sti
push
inc
cli
clc
clc
btc
lahf
xchg
xlat
xchg
fmulp
xor
xchg
out
int
cmp
out
ja
dec
hlt
add
jo
add
imul
gs
xor
cs
insb
add
fs
imul
add
je
jb
arpl
fs
jae
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
add
incl
add
