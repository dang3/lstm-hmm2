mov
xchg
dec
in
and
cmpsb
imul
lahf
push
mov
dec
push
shrb
sahf
mov
or
pop
movsl
xchg
lock
popf
int
lahf
push
push
addl
mov
imul
sbb
add
cmpsb
fcompl
das
mov
scas
test
out
lret
mov
repz
cmp
adc
cmp
clc
rorb
push
cmp
lret
mov
adc
dec
or
pop
fstl
dec
pusha
mov
insb
dec
stos
cmpsl
movsb
stos
and
sbbb
lret
test
rorl
testl
imul
sub
ss
jno
daa
jl
loop
inc
sbb
out
xchg
xchg
outsl
pop
fs
arpl
and
sbb
outsl
cmp
ss
aad
mov
mov
mov
iret
mov
lret
mov
xor
inc
jl
mov
jp
adc
imul
bswap
jo
fsts
testl
sbb
cmp
inc
mov
pop
into
imull
call
call
mov
xor
ja
push
in
cmpsb
xchg
mul
das
fistpl
sbb
test
inc
mov
lea
xchg
jmp
mov
sbb
push
sub
sub
test
cmc
mov
jmp
inc
mov
xor
mov
mov
sbb
mov
enter
inc
movsb
pop
pop
jmp
pop
mov
jmp
sub
dec
lret
aaa
fildll
pop
sahf
dec
jle
jbe
repz
ret
mov
pop
jle
jmp
adc
adc
and
rcrl
and
sub
imul
scas
sub
mov
insl
mov
adc
lcall
test
scas
jae
sub
leave
jp
not
dec
jg
jmp
sub
jae
or
cli
cltd
add
mov
aam
inc
sub
inc
push
mov
out
mov
dec
jne
aaa
imul
add
dec
or
shlb
shl
repnz
and
pop
repnz
xor
sbb
insb
and
or
pop
jg
dec
xchg
cmc
mov
adc
or
pop
sbbl
jne
sub
les
adc
dec
jne
movsb
push
lea
addb
insl
dec
mov
adc
aas
inc
jp
rorl
pusha
mov
stos
lods
repz
fdivr
stos
cmpsl
sbb
loope
mov
jmp
dec
outsb
mov
rclb
in
push
ja
jge
add
and
cmp
out
mov
mov
seto
lret
ret
mov
push
jnp
adc
test
pop
sub
movsl
sbb
cmp
orb
loopne
cmp
mov
dec
andb
hlt
xchg
lds
lods
outsb
lock
das
clc
inc
test
scas
push
sti
pop
psubsw
js
push
dec
stos
mov
or
xchg
cwtl
mov
jbe
sub
sbb
jl
pop
cmp
call
adc
sub
dec
data16
jmp
push
bound
push
shrd
cmp
adc
mov
gs
ss
bound
adc
inc
leave
lods
pop
cs
or
lea
push
adc
xchg
cmpsl
mov
mov
cmp
jae
mov
jne
pusha
ja
jmp
scas
divb
cltd
icebp
xor
dec
lods
mov
or
shrb
sbb
in
mov
loope
pop
add
add
test
lds
xchg
xor
jbe
cmp
cmp
jp
pop
and
push
sub
push
cmp
mov
shrb
movsl
repnz
and
sbb
mov
insb
call
push
xor
cmp
xor
jle
pop
xor
sbb
incl
bswap
pop
inc
fdivrp
xlat
inc
push
jg
movzbw
pusha
mov
pusha
mov
push
pushl
ret
lea
out
pop
mov
fildl
repz
xchg
fildl
mov
insb
pop
imul
push
int3
push
sbb
or
ljmp
adc
sbb
xor
or
int3
ret
out
mov
js
ljmp
cmp
cli
xor
hlt
mov
push
stc
pop
or
push
xchg
stos
push
icebp
cmp
adc
lret
outsb
shl
pop
mov
sbbb
mov
pop
fnsave
nop
cmp
xor
loop
sub
push
inc
mov
loope
enter
idiv
sar
mov
mov
mov
xchg
sti
fxch
push
jle
loopne
in
fmuls
mov
sti
sbb
sbb
jnp
or
lods
xchg
std
rorl
sbbl
and
outsl
mov
lahf
inc
xlat
jne
ds
cmp
fmuls
insb
add
ljmp
test
dec
jbe
pop
sbb
clc
push
fbld
test
stc
pop
xor
push
jge
cmpsl
mov
stos
sub
ds
mov
push
repnz
pop
in
dec
addr16
xchg
adc
aaa
data16
int3
jo
imul
dec
popa
sub
push
xor
loope
loope
xor
or
mov
into
adc
rolb
inc
fs
addr16
push
call
fidivrl
jbe
je
ljmp
mov
in
test
mov
push
cmc
sub
call
bound
stos
sub
jns
lea
xchg
cmp
dec
sahf
jg
mov
inc
pop
push
hlt
sbb
or
add
add
je
add
dec
imul
clc
fsts
push
and
mov
iret
sbb
push
sbb
out
test
ficomps
jmp
lret
xchg
jnp
sar
out
mov
scas
or
outsb
fildl
inc
mov
sbb
cli
icebp
les
or
sti
inc
dec
pusha
sub
push
sbb
outsb
ror
mov
and
movzbl
jmp
or
stos
sub
mov
mov
sahf
cmpsl
cmpsl
and
mov
mov
pop
data16
dec
add
mov
mov
add
scas
jp
inc
das
shll
jno
mov
enter
ret
and
int
sahf
cmp
movsb
and
pop
mov
call
fsubs
pop
inc
test
pop
data16
adc
rorb
fimuls
ret
or
imulb
add
aas
xor
dec
cmp
add
inc
jg
jns
lret
ja
cs
jmp
sti
jmp
mov
cmp
sbb
cmp
xlat
es
jg
in
sbb
or
sub
xorb
pop
cmp
mov
xor
mov
sub
mov
lea
in
mov
inc
fimull
dec
mov
mov
das
in
enter
scas
movsl
push
mov
lahf
and
push
je
sub
aas
fwait
dec
or
imul
push
dec
dec
mov
lods
mov
sub
cld
jnp
scas
jne
cltd
add
mov
pushf
scas
loop
mov
mov
cmp
std
and
push
aam
or
in
jmp
js
test
mov
loope
and
sahf
adc
mov
sbb
and
fstl
cmp
sbb
dec
adcb
mov
adc
mov
fstps
lds
divl
loope
mov
pop
les
xor
xchg
xchg
sbb
jge
lcall
push
inc
sbb
movsl
stc
in
scas
movsl
push
push
loope
scas
loopne,pn
adc
scas
pop
lcall
cmp
push
cmp
aam
icebp
nop
stc
jne
fisttpll
lret
adc
and
call
into
mov
fcoms
mov
int
lods
inc
mov
add
arpl
stos
mov
jg
lea
pop
pusha
call
jmp
jmp
jge
jb
sub
dec
insl
hlt
xchg
in
mov
push
pop
sti
and
cld
stos
push
shlb
mov
ja
test
mov
ljmp
aam
and
loopne
repnz
pop
mov
push
inc
mov
and
stos
clc
or
or
sarb
adc
xlat
add
pop
icebp
xchg
or
out
cmp
xor
ret
sub
pop
xor
and
dec
mov
mov
int3
scas
push
ficoml
xchg
iret
mov
jg
xor
mov
repz
dec
push
fwait
jne
cmp
xchg
push
inc
push
not
aaa
xchg
mov
mov
mov
sub
xchg
ss
mov
testb
dec
xchg
xor
jbe
test
stos
mov
lahf
jbe
inc
gs
imul
xor
pop
fisttpll
cmc
loopne
arpl
mov
xlat
mov
xor
scas
sbb
lahf
add
inc
nop
xor
pop
ja
rcr
mov
aad
sub
ss
fwait
mov
pop
and
pop
mov
movb
mov
movzbw
movsbw
movsbw
pop
pusha
pushl
ret
mov
inc
cmpsb
sub
je
test
jp
mov
test
repnz
lods
fsts
lahf
xor
or
lahf
in
cs
or
stos
add
iret
enter
movnti
xchg
inc
jecxz
add
jae
mov
dec
sub
cld
das
sbb
out
xlat
bound
or
cmp
add
pop
jmp
insb
mov
cmp
xchg
out
sub
rorb
imul
movl
repz
jg
pushl
popfw
movb
jmp
push
lea
jb
cmp
cmp
pushf
lea
je
pusha
mov
lea
ja
jmp
lea
je
call
ror
mov
sub
sub
and
mov
aad
es
daa
pop
scas
je,pn
dec
enter
gs
add
cmpsb
movntq
mov
xchg
cmp
std
cmp
cmpsb
dec
mov
cmp
pushf
jns
mov
call
mov
mov
jge
ret
lret
nop
icebp
daa
fnstcw
js
hlt
xchg
imul
mov
or
or
ret
out
sbbl
mov
cmp
dec
decb
push
mov
xor
fdivs
xor
pushf
roll
sub
jb
mov
test
cld
fdivp
adc
jecxz
inc
and
mov
sti
mov
mov
cmpb
lods
jge
fs
in
out
push
mov
shr
das
fidivs
int
cmc
xchg
jae
sti
cltd
sub
lea
ja
sbb
add
insl
rcrl
inc
stos
insb
inc
mov
pop
out
jle
rorl
fildl
into
and
pushf
lea
jae
call
push
addr16
outsl
jno
bound
jno
pop
fs
jae
js
outsl
outsb
push
bound
bound
imul
outsb
jae
popa
fs
imul
jae
arpl
push
fs
arpl
pusha
insb
push
insl
push
imul
pusha
jno
pop
and
decl
xlat
mov
in
cmp
pop
les
add
nop
dec
jmp
sub
mov
mov
lods
xchg
shlb
clc
jl
xchg
imul
sbb
push
sbb
leave
adc
scas
and
lods
jbe
dec
sbb
xchg
add
mov
nop
push
test
sub
pop
addb
ret
je
lret
sarb
push
movsb
add
mov
setns
xchg
mul
push
mov
je
mov
fildl
ss
and
test
repnz
cmp
mov
icebp
ss
sub
out
in
push
xchg
mul
ret
orb
stc
mov
ds
jmp
mov
jae
jl
mov
repnz
fisttpll
idivb
xchg
mul
mov
dec
xorl
data16
adc
movsb
fmul
ljmp
sbb
insl
xlat
push
mov
std
cmp
popa
int
pop
mov
popa
xor
fnstcw
bound
pop
and
xchg
jp
addb
inc
mov
jns
scas
xchg
stc
and
sahf
dec
pop
leave
sub
push
mov
inc
leave
push
dec
cwtl
imul
push
std
jbe
sbb
push
cmp
dec
pop
jne
imul
lea
mov
pushf
lea
jmp
cli
sub
mov
mov
lods
inc
inc
out
and
rcrl
sti
pop
decb
push
sbb
xor
xchg
adc
pop
inc
pop
add
xor
sub
and
mov
fdivl
lcall
xchg
jne
cmp
js
add
scas
outsl
icebp
mov
aas
mov
cmc
fidivrs
or
cmpsl
nop
jl
mov
or
cli
mov
or
stos
scas
pushf
sahf
mov
mov
movsl
ja
hlt
fwait
cs
popl
mov
outsl
mov
inc
std
pushf
dec
cmovp
cli
cmp
in
subl
sahf
or
or
xchg
xchg
test
es
mov
dec
mov
adc
pop
mov
pop
ja
jecxz
jl
sbb
xchg
fdivrs
dec
sti
xchg
pop
fwait
mov
nop
mov
fwait
nop
aas
jne
cli
mov
pusha
movl
push
movl
pushf
pushf
push
lea
jmp
pop
popf
mov
push
mov
dec
ljmp
dec
mov
mov
mov
cmp
std
das
loopne
push
jbe
in
shrb
test
and
sbbb
xor
aad
dec
cmp
pop
cltd
sub
jl
mov
jno
xchg
mov
mov
sahf
sub
add
add
stos
aad
jmp
push
aam
xchg
jo
sbb
add
sbb
subl
fwait
push
adc
bt
pusha
sub
call
pusha
movb
pushf
movl
pushl
movl
pusha
lea
jmp
pusha
push
mov
mov
pushf
mov
call
pushl
popl
pushl
push
push
push
pushl
ret
test
ror
jmp
setns
cwtl
cwtl
lea
push
call
pusha
inc
push
ror
pushf
xor
clc
call
mov
jmp
sub
pop
mov
jnp
add
sbb
in
loop
icebp
divb
mov
push
dec
fxch
inc
sbb
push
or
add
dec
mov
cmp
jns
ja
push
loop
or
jp
cmp
sub
pop
js
push
or
add
mov
daa
mov
xor
imul
cmp
movsb
dec
pusha
leave
push
inc
call
push
jmp
mov
push
sahf
sub
ret
lahf
cmp
and
mov
push
inc
xchg
cmp
xor
pop
mov
push
xchg
push
out
mov
lds
fwait
jbe,pt
or
imul
sub
pop
jg
shl
inc
sahf
push
jecxz
adc
icebp
aam
insl
in
lahf
mov
jnp
and
jns
sahf
mov
and
xchg
mov
pop
jbe
jp
and
mov
sti
cmp
push
insb
pop
cmpl
push
mov
jmp
ja
call
mov
cmp
xchg
repnz
aam
imul
data16
outsb
cmp
mov
loop
jbe
adc
jge
or
jnp
pop
loopnew
xor
mov
sbb
sub
popf
sbb
sub
lock
sub
mov
loope
push
xchg
lock
or
lcall
stos
cltd
bound
xor
push
sahf
sub
jge
out
mov
shr
cs
pop
and
dec
in
cmp
mov
arpl
pop
iret
cmc
int3
jno
outsl
add
push
push
je
mov
push
sub
mov
aam
pop
mov
xchg
pop
lcall
imul
xchg
es
test
mov
pop
xchg
aad
out
je
mov
xchg
jle
into
dec
push
data16
cli
bound
pushf
push
adc
pusha
pushf
movb
lea
jae
call
mov
mov
sub
es
arpl
xchg
mov
xor
lret
inc
ds
jbe
jns
jg,pn
movzbl
pop
shlb
inc
ficompl
and
ljmp
sbb
mov
adc
cmp
push
jecxz
lcall
das
sub
jo
lods
sahf
movsl
mov
outsl
out
test
push
pusha
dec
pop
popa
lahf
push
jno
sub
inc
imul
xor
fistpll
repnz
pop
mov
sbb
pushf
aas
sub
jbe
mov
add
pop
mov
inc
stos
dec
loopne
lea
jae
sbb
cmp
insl
pusha
xor
loop
daa
cmpb
pop
mov
outsl
mov
and
dec
add
add
es
sbb
push
add
dec
xchg
lods
cld
pop
rorb
js
inc
enter
aaa
popf
sub
cmpsb
push
ret
push
dec
or
outsb
popf
adc
jl
pushf
pop
test
ljmp
xor
xchg
fsubrs
lret
pop
sbb
xor
or
out
lahf
jg
pop
xchg
ret
or
add
mov
stos
or
pop
push
int3
jae
sti
xchg
ljmp
in
or
mov
enter
imul
inc
neg
pop
subl
mov
pop
and
sbb
lret
test
adc
sub
sbb
andb
sub
ret
lods
or
cs
mov
pushf
sub
xchg
sti
fisttps
outsl
push
mov
addb
cmp
jb
dec
imul
sbb
popf
sbb
fidivrs
sbb
or
out
cmp
add
mov
ret
pop
dec
or
sub
sahf
fwait
sub
flds
jge
mov
dec
mov
sbb
dec
adc
leave
pop
dec
and
aas
add
shr
popa
mov
dec
loope
testb
ds
loopne
push
inc
lds
loope
jbe
in
cli
pusha
fadds
repz
into
faddp
mov
lret
sbb
scas
add
dec
adc
dec
mov
mov
jbe
sub
in
out
leave
jb
out
jo
clc
clc
jo
not
aaa
sahf
adc
mov
loopne
inc
pop
pop
jmp
cmc
stc
push
xor
add
pop
stc
pushw
movsb
movsl
fnstcw
or
popf
dec
add
dec
ret
push
and
insb
lea
test
mov
fwait
pop
loopne
sbb
jmp
imulb
pop
jmp
mov
jns
mov
adc
cmp
pop
ret
mov
shll
cmp
pop
fstpt
rolb
cmp
or
int3
push
mov
inc
add
mov
jne
fldl
insl
fcompl
and
js
mov
in
push
push
imull
mov
int3
mov
dec
mov
pop
jge
jp
ljmp
std
shll
popf
fistpl
dec
orl
xor
popa
iret
nop
mov
or
dec
jl
repnz
sub
pop
or
or
gs
xor
int
mov
icebp
fdivr
and
loope
das
imul
sti
test
cmp
repz
aaa
dec
jo
das
jo
cmpsl
rol
jg
jnp
mov
call
jmp
dec
mov
clc
bt
pushf
call
or
pushl
pusha
lea
jo
je
clc
push
jmp
xchg
mov
mov
gs
arpl
jno
jmp
stc
sub
jge
adc
lds
loop
jns
out
or
fcmovu
jns
or
sti
pop
or
repz
mov
mov
hlt
test
fbstp
sub
cmp
shrb
adc
scas
xor
xchg
xor
aas
call
or
popl
rcl
les
dec
adc
sub
push
mov
lea
adc
movsbl
movsbw
rcr
mov
pusha
test
mov
pushf
lea
je
bt
movsbl
clc
bt
add
jmp
mov
mov
cmp
jmp
add
mov
jg
sbb
push
dec
ret
sbb
ljmp
mov
dec
mov
mov
repnz
pop
rol
loope
add
adc
push
sub
pop
xchg
cs
mov
sbb
lret
das
outsl
mov
mov
sub
jg
or
mov
add
sti
push
fsubrs
in
pop
cmpsb
adc
mov
cltd
fisubrl
subl
push
xchg
int
mov
lea
adc
btr
pusha
neg
mov
stc
btc
shr
xchg
cmc
mov
pushl
bt
mov
and
mov
sub
btr
mov
sub
and
mov
push
shl
sar
mov
movw
or
pusha
push
call
jns
insb
xchg
sub
fcmovne
hlt
mov
ss
jnp
sub
sub
aam
shrb
jge
movsb
lods
add
out
xchg
xchg
jp
jno
repz
das
xor
sbb
jle
jl
cmp
outsl
mov
jns
das
sub
push
xchg
push
mov
dec
cltd
and
push
push
arpl
ficoms
int
adc
xor
lea
sub
lock
ja
or
push
scas
fcomip
pop
push
xor
mov
xchg
xchg
jmp
xor
shll
sarb
pusha
pushf
lea
jne
and
neg
xor
pushf
mov
pusha
pushl
lea
jmp
stc
jmp
lea
jne
rcl
bt
xor
aad
mov
call
fnstenv
outsl
adc
push
test
jmp
push
repnz
pop
mov
out
ja
arpl
mov
adc
ret
mov
aaa
lea
and
cmp
xor
and
mov
mov
scas
cld
and
outsl
or
xor
in
sbb
adc
ljmp
mov
push
lods
insl
loopne
test
push
jmp
repz
push
xchg
pushf
leave
sub
adcl
pop
xchg
sub
dec
sub
mov
adc
shl
loopne
lock
outsl
add
mov
fdivrl
or
fs
push
pushl
xchg
push
frstor
movsl
jle
pushf
sbb
sub
xor
cltd
movsb
add
dec
leave
jno
in
ror
dec
aas
bound
es
aad
loop
sub
lcall
out
xchg
xor
mov
jns
cmp
mov
jg
pop
out
pop
ret
into
int
loopne
mov
jg
ret
movsl
sarl
xchg
sub
cld
andl
cmpsb
add
jnp
outsl
gs
cmpsb
mov
xchg
dec
mov
test
test
jmp
or
int
sub
cmp
inc
fistl
out
cmp
xchg
sub
mov
push
sbb
xchg
sbb
int
xor
pop
icebp
shll
xor
decb
push
dec
and
and
xor
in
loop
and
inc
lea
jae
popf
lock
nop
shr
sub
or
jb
pushf
mov
adc
ret
sub
enter
fdivr
loopne
and
lods
pushf
pushl
jmp
cmp
clc
clc
pusha
repnz
mov
jmp
mov
sub
out
mov
jg
cwtl
pop
cmpsb
mov
jle
jp
or
pop
dec
notb
jbe
sub
shll
movsl
cmp
outsl
sbb
fwait
jbe
in
stos
imul
mov
and
mov
popf
sub
call
loopw
xchg
add
xlat
push
fsubs
imul
push
jb
cmp
std
scas
sbb
push
stc
mov
mov
sbbl
add
dec
popf
lods
iret
sti
je
ret
push
pop
or
into
add
aaa
sbbl
addr16
int
jbe
push
push
adc
dec
xor
aam
xchg
mov
dec
cli
adc
mov
push
lock
sub
xchg
in
fildl
mov
and
mov
jno
push
cmp
std
aaa
aas
aas
dec
loopne
jg
movsl
test
add
push
jmp
jecxz
jo
sub
fists
add
pop
sbb
out
rclb
mov
jl
les
mov
jbe
mov
testl
dec
orl
xchg
insl
out
ja
ret
inc
ljmp
mov
aad
ror
aam
in
dec
or
clc
inc
add
outsl
pop
out
call
jp
xchg
and
and
cli
out
jecxz
pop
add
dec
cmp
xor
cmp
ja
push
push
pushf
inc
pusha
sete
inc
and
setp
jmp
pushf
pushl
popl
test
bt
cmp
pusha
mov
movw
call
jmp
pop
aaa
push
xchg
sub
test
cmpl
inc
leave
sub
inc
rol
enter
repnz
int3
jp
ljmp
jne
call
adc
xchg
push
out
stos
daa
xorb
addr16
out
out
fistl
xchg
pop
mov
inc
in
add
js
lcall
mov
xor
arpl
popl
aad
mov
aad
dec
shl
pop
in
push
xchg
sub
mov
sbb
enter
scas
xor
in
sub
scas
mov
nop
lock
subl
add
cld
lcall
ret
xor
adc
ret
fisttps
inc
repz
sbb
xor
xchg
mov
mov
loop
cmp
ja
pop
and
popa
shr
jge
jmp
call
mov
xor
inc
xchg
imul
bound
nop
xchg
fdiv
sti
movl
sub
movb
lea
je
stc
pushf
sub
push
cmp
jmp
lea
ja
jmp
inc
loope
xchg
sub
sbb
sbb
repnz
enter
mov
adc
push
out
shlb
in
and
gs
add
push
rcl
dec
and
je
dec
addb
pop
lds
push
sbb
cmp
outsl
fists
add
in
je
jae
std
dec
xor
rcrb
lret
stc
outsb
inc
int
jl
lds
int3
aad
aad
scas
mov
cmp
testl
inc
push
lret
lds
jmp
shlb
inc
jge
stos
ret
mov
cwtl
stc
lea
lcall
test
pop
or
and
dec
sub
sub
js
push
ja
mov
gs
add
dec
dec
into
aaa
mov
push
mov
xchg
jge
mov
sbb
xor
jp
pop
in
enter
mov
pop
pop
pop
stos
insl
xchg
data16
call
call
lea
ja
sub
shl
sub
adc
add
dec
shl
mov
jmp
lea
je
cmc
sub
cmc
cmp
pusha
call
inc
inc
stc
ror
test
call
cmpsb
inc
sbb
pop
jg
xchg
and
sbb
sar
rcll
mov
std
sbb
ja
call
xlat
or
test
cld
mov
outsb
push
inc
pop
xchg
cmp
xchg
push
pop
xchg
cmp
jne
mov
scas
push
inc
inc
insb
jge
lret
jp
leave
mov
xlat
data16
mov
sti
push
add
lret
lock
mov
adc
pop
inc
or
sbb
or
jb
pushf
movl
push
movl
pushf
push
lea
jmp
mov
std
sub
insb
push
push
pop
or
mov
push
enter
push
jns
in
mov
xchg
add
decl
out
scas
popa
or
xchg
in
jecxz
pop
or
and
add
aas
rcll
popf
cwtl
sti
jbe
nop
cwtl
nopl
rorl
mov
imul
push
mulb
fstps
in
in
xchg
rcll
les
cmpsl
sbbb
push
pusha
cld
sub
loop
sahf
ds
stos
cltd
inc
push
sbb
jb
scas
add
jle
enter
xlat
mov
inc
mul
out
out
xchg
icebp
icebp
in
jl
sbb
add
jbe
stos
mov
jg
add
inc
js
cmc
xor
popa
cli
outsb
aas
lret
cmpsb
cmp
or
adcb
lret
cmp
inc
or
loopne
dec
aad
shll
pop
cli
sbb
pop
in
insl
iret
mov
int
sub
pop
sub
roll
into
aam
call
lahf
dec
sub
and
sar
jle
pop
stc
jne
lods
call
adc
inc
sbb
or
sti
scas
cmp
and
xchg
pop
cltd
shl
lcall
cmp
mov
stos
dec
push
out
push
lods
nop
fldcw
mov
sub
xor
adc
and
mov
xor
mov
push
mov
jnp
jg
inc
mov
jno
sbb
inc
jbe
cli
cmp
mov
dec
inc
xor
xor
shlb
sub
mov
xchg
and
push
inc
je
call
xchg
loopne
test
dec
push
ret
mov
popf
inc
repz
mov
in
mov
jmp
jbe
sti
stos
pop
xchg
sbb
fwait
loopne
xchg
push
xor
mov
xor
pop
pusha
shl
aaa
lcall
inc
dec
lods
mov
repz
push
xor
addl
mov
inc
daa
xchg
add
cli
fidivrs
dec
push
cli
repz
adc
mov
pop
pop
push
pop
mov
fidivrl
cmp
call
lea
je
pushf
movb
clc
test
sub
call
push
call
cmpb
call
sub
mov
lea
test
movsbl
mov
mov
adc
rcl
mov
stc
stc
cmc
pushf
mov
bt
cmp
neg
push
push
jmp
movb
lea
ja
clc
imul
pushf
push
call
sub
pushf
lea
call
jmp
nop
loop
mov
imul
sub
leave
aam
jecxz
aam
sub
adcb
arpl
mov
add
mov
je
push
out
iret
push
cmovno
add
push
xor
lods
call
ret
sahf
push
scas
mull
gs
stc
push
sbbb
fs
jg
pop
add
jne
dec
pop
pusha
dec
aad
cmpsl
in
sbb
dec
stc
ret
ret
fucomip
popl
push
sub
je
pop
call
sbb
cmp
rolb
mov
inc
adc
mov
xchg
xchg
mov
ret
or
push
mov
dec
ret
pop
out
scas
inc
or
mov
jle
mov
jle
inc
imul
addr16
cli
aad
les
sti
pop
in
sub
mov
mov
or
jg
sub
push
in
push
xchg
in
pop
ds
fadds
pop
push
mov
mov
pop
aaa
fisttpl
imul
mov
sub
movsb
mov
jns
cld
xchg
mov
scas
movsl
mov
dec
dec
leave
shrb
xchg
xchg
sub
scas
popa
call
mov
adc
mov
nop
jg
mov
cmp
mov
addr16
mov
ss
add
push
daa
imul
mov
rclb
fcoms
xchg
and
adc
lods
jecxz
xor
outsb
repz
mov
mov
inc
or
inc
pop
mov
xor
sbb
xlat
mov
pop
pop
popa
ffreep
inc
cmp
jno
pop
mov
scas
icebp
jbe
arpl
adc
js
std
dec
add
js
dec
js
sbb
push
cmc
jge
lret
jae
or
mov
loop
xlat
testb
cmp
xchg
inc
cltd
inc
xorb
cwtl
test
call
inc
lea
je
call
movl
jmp
jmp
cwtl
movb
mov
mov
call
pusha
pushl
lea
jne
pushf
lea
je
push
clc
pusha
cmp
jmp
pushf
mov
mov
adc
push
movb
pushl
lea
jae
call
or
mov
pop
push
xor
js
mov
cmp
in
jge
inc
call
js
daa
cltd
rcll
repnz
mov
jl
stc
pop
cmc
xor
sub
and
jle
push
jns
aad
ja
xchg
loopne
inc
popa
adc
cmp
popf
rcr
dec
and
lock
pop
test
pop
mov
and
fcomi
jbe
push
mov
fsubl
xchg
negl
add
jae
xchg
inc
add
and
pushf
movl
pusha
pushf
pushl
lea
jmp
ja
je
sub
jecxz
repnz
xchg
add
scas
lcall
outsl
enter
sbb
das
xchg
pop
test
popa
mov
sti
dec
pusha
stos
dec
cmp
sbb
and
mov
push
sub
cmp
out
andl
push
mov
les
lret
inc
and
insb
dec
insb
jno
loop
sti
push
test
xchg
sub
stos
cmp
mov
adc
mov
jecxz
stos
jle
scas
mov
push
jmp
cmp
mov
jmp
sbb
inc
mov
mov
aaa
mov
int
je
ds
fs
mov
and
or
subl
sbb
and
not
daa
adc
test
aas
dec
shl
jne
push
pop
mov
cmc
sbb
jne
ss
mov
jmp
fnstcw
das
and
mov
pop
pop
sbb
mov
dec
push
shll
cld
loopne
fs
aas
cwtl
les
dec
push
jge
mov
and
mov
dec
adc
and
fidivs
mov
or
ljmp
or
loop
pusha
leave
lret
mov
shlb
lret
adc
int3
xor
pop
jecxz
lods
jbe
adc
cmp
rcll
xor
in
dec
or
enter
or
adc
fs
call
call
pusha
cmc
mov
clc
pushf
call
movl
pusha
lea
jmp
aaa
lock
dec
sub
inc
sbb
sub
push
jns
jbe
jg
out
ss
stc
jecxz
dec
mov
call
fimuls
icebp
sub
add
push
rcll
pushf
or
fsubrl
das
sbb
daa
mov
hlt
loope
out
mov
pop
jl
mov
ret
cmpsb
insb
dec
lret
pop
rcrb
sub
xor
frstor
js
pop
sahf
sub
js
mov
sub
sbb
xchg
push
cwtl
es
jmp
in
mov
push
aad
int3
add
fdivrs
cli
notb
pop
cltd
push
shr
dec
inc
ljmp
inc
pop
or
jge
ljmp
xor
dec
xor
xchg
js
add
sub
sbb
and
mov
push
xchg
push
daa
js
lods
inc
orb
das
and
addr16
fisttpll
xchg
xchg
cmp
sahf
fimull
bound
fidivs
call
mov
xor
and
mov
mov
ss
or
mov
xchg
jnp
xor
mov
mov
xchg
lahf
inc
repnz
sti
mov
adc
pop
sbb
and
xchg
rcrb
lock
or
xchg
and
or
mov
add
xor
push
sub
pop
incl
loopne
stos
std
cmp
call
pop
mov
jmp
jne
lahf
icebp
test
mov
mov
sub
test
pop
xor
jle
mov
push
cmp
lcall
rcr
dec
mov
push
push
movsl
or
push
jno
lret
cmp
sub
ret
dec
arpl
inc
jb
add
pop
mov
fnstcw
sub
test
lods
xchg
xchg
mov
jns
pop
fwait
popf
test
dec
arpl
aas
jb
test
mov
mov
sbb
std
pop
daa
adc
addl
cmp
js
fs
mov
fsts
jg
add
adc
cwtl
popf
lods
and
mov
test
mulb
push
ss
stos
inc
or
scas
mov
jne
test
cmp
adc
sub
add
rcrl
adc
sub
xchg
les
cwtl
mov
jbe
sbbb
push
in
imul
jae
and
add
add
das
icebp
jmp
fs
ja
jmp
push
add
test
inc
cmp
js
cwtl
data16
stos
dec
rolb
jp
and
loope
jo
xor
stc
int
push
mov
xchg
xchg
pop
out
inc
int3
dec
mov
cmc
mov
imul
inc
fimull
dec
sub
lret
cmpsb
or
loop
lret
popa
loope
and
mov
mov
mov
mov
sub
mov
aaa
mov
outsb
leave
or
bound
insb
and
popa
movsb
or
xchg
jle
mov
ja
cmp
xor
or
test
jp
jle
scas
mov
cmp
lds
lock
fildl
es
loop
push
pop
out
ljmp
pop
std
jbe
loope
sbbl
icebp
mov
aam
mov
movsb
cmp
sub
mov
mov
sbb
pop
test
cmp
mov
int
rcrb
aaa
mov
sbb
and
mov
add
fincstp
cmpsl
lahf
inc
inc
cwtl
loopne
and
push
lea
jae
push
clc
pushf
clc
cmp
lea
jae
pushf
mov
lea
ja
dec
jmp
cmp
movsb
inc
and
stos
adc
stc
mov
insb
popf
xlat
leave
insl
test
mov
leave
pushf
test
insl
jmp
in
sbb
mov
imul
sbb
lock
andb
and
loopne
fxch
jno
add
int3
lods
jmp
repnz
ds
loop
adcb
push
jle
frstor
sbb
test
fsubrs
clc
push
fstl
jmp
imul
lcall
je
or
movb
test
movb
sub
bt
pushf
pushl
popl
test
bt
cmp
pushf
movw
jmp
je
xor
cltd
testb
lock
hlt
fistpl
in
inc
jecxz
gs
add
push
sahf
and
pop
nopl
int
push
jno
sti
mov
lcall
and
jecxz
xchg
inc
mov
nop
and
sub
lcall
stc
and
mov
mov
ret
add
jbe
xor
push
push
movsb
icebp
loop
je
subb
push
jns
or
push
in
decl
cmpsb
pop
push
cmp
scas
jl
xchg
dec
sub
dec
jnp
xchg
pop
jmp
mov
mov
mov
mov
scas
push
into
dec
dec
jno
out
xlat
sarb
pop
or
in
xor
test
jecxz
jno
jmp
or
or
pop
inc
clc
test
and
es
hlt
loop
das
sbb
fnstcw
push
inc
fwait
jecxz
cli
subl
mov
mov
imul
inc
inc
clc
test
sbb
lods
push
call
insl
mov
push
popf
push
fwait
int3
or
inc
mov
lcall
and
imull
xor
pop
pop
jae
pop
cmp
xchg
adcl
inc
xor
test
adcl
dec
aad
mov
mov
fwait
outsl
enter
iret
cmpsb
sti
and
js
add
jg
lret
adc
adc
jne
rolb
repz
sub
fists
and
mov
cmpsb
lods
shlb
or
je
stc
push
aaa
mov
imul
jmp
pop
mov
sahf
cwtl
xchg
aas
ljmp
cmc
sub
xchg
mov
lods
xorl
frstor
xor
lock
sbb
dec
cmpsl
push
xchg
jp
mov
xor
add
cmp
fnstcw
and
shr
subb
jle
cmp
lahf
mov
push
and
insb
xchg
adc
leave
sub
jnp
and
and
mov
out
inc
inc
inc
sub
shlb
mov
pop
inc
aas
mov
fisttpl
adc
inc
mov
push
mov
lds
mov
adc
push
mov
nop
xor
jbe
mov
lods
mov
sarl
negl
fadd
es
pop
adc
rclb
inc
scas
mov
pop
add
mov
lcall
inc
pop
jg
mov
mov
dec
or
push
push
js
mov
jns
mov
arpl
adc
adc
icebp
popa
out
out
lret
or
xchg
rorl
movsb
adc
push
rorl
jg,pn
jb
jno
dec
stc
jl
lret
loop
sbb
push
jge
int3
out
mov
mov
mov
int
inc
rcrb
imul
mov
neg
xor
adc
add
jno
sub
mov
dec
aas
aad
nop
icebp
pmuludq
mov
fists
ret
sub
lret
push
inc
pop
jge
mov
jl
movsl
xlat
jnp
test
xlat
xor
cmp
lea
adc
push
insb
dec
add
addr16
loopne,pt
cmp
push
loop
jb
nop
int3
push
mov
mov
int3
dec
push
das
lcall
and
mov
inc
xor
xor
xor
fisttpl
sahf
mov
mov
push
push
scas
inc
mov
aas
pusha
subl
jbe
arpl
lock
pop
mov
fisubs
jns
mov
lods
in
pop
jg
mov
sbb
dec
mov
mov
and
pop
loopne
jbe
fbstp
test
in
sub
xlat
iret
aad
ret
push
push
scas
adc
sar
mov
in
imul
adc
add
sub
insb
adc
stos
aad
push
std
pop
dec
xor
enter
inc
int
xchg
push
lret
xchg
mov
outsl
push
pop
pop
xlat
dec
add
or
sbb
xor
rorl
orb
or
jle
mov
jmp
add
and
inc
sbb
add
jno
jle
mov
and
mov
filds
ret
popf
push
aam
adcl
stos
or
or
in
popa
dec
or
xor
int3
js
add
out
xchg
and
push
xchg
adc
in
jl
cmpsl
gs
or
lahf
and
imul
dec
adc
negb
mov
rcrb
push
sbb
pushf
or
cli
imul
stos
sub
adc
push
xor
daa
xchg
dec
lds
movsl
imulb
xchg
pop
or
cltd
ljmp
sbb
sbb
jge
mov
xchg
loopne
sub
and
test
out
in
mov
mov
and
dec
sbb
ret
xor
mov
sbb
xorl
enter
in
mov
movsb
cmp
adc
xor
xchg
adc
sbb
cmp
ss
pusha
subb
fidivrl
mov
push
in
outsb
rcr
fcmovne
sbb
inc
stos
adc
lret
jnp
imul
sub
ds
movb
mov
adc
and
xchg
or
jecxz
rep
clc
push
xchg
enter
in
or
mov
scas
inc
mov
lret
data16
jbe
and
insb
fmuls
enter
push
mov
adc
dec
xlat
mov
xchg
sti
lock
or
mov
push
hlt
push
lods
shll
jne
mov
mov
jmp
lea
mov
movsl
mov
pushf
push
cmc
cmpsl
or
adc
iret
and
inc
fidivl
or
or
adc
fbld
jae
sbb
jmp
jo
adc
xorb
movsb
mov
cmp
push
dec
test
mov
loop
test
nop
loop
jb
js
cmp
or
call
aad
daa
push
xchg
test
loop
inc
and
daa
cmp
inc
test
add
mov
adc
je
pop
mov
fadd
mov
sub
mov
cmpsl
xor
stos
les
cmp
dec
or
ja
and
mov
stc
add
push
jmp
test
mov
push
je
fstl
out
test
push
or
arpl
enter
sbb
jnp
push
xchg
jmp
or
shr
scas
and
xor
xrelease
mov
es
int
loop
sbb
mov
shll
xchg
fisubrs
std
repz
xchg
mov
into
outsb
test
dec
add
popf
enter
mov
pushf
or
adc
jne
or
andb
jbe
push
fidivl
sbb
test
ror
jmp
rcrl
jp
mov
add
sbbb
fld
pop
or
mov
jb,pt
jl
mov
cmp
lret
jp
bound
jb
pop
jecxz
stos
add
jo
insl
popf
xor
lahf
xchg
push
jae
rorb
and
fnop
shlb
rorb
sbbb
mov
ret
or
and
mov
mov
addr16
icebp
mov
fstpl
negl
xor
std
push
out
cmp
add
xor
xchg
push
test
jmp
and
or
stos
and
inc
cmc
gs
popf
jns
jge
sub
in
fistl
aas
sub
and
test
mov
xchg
xchg
adc
adc
call
cmp
add
sbb
mov
and
out
rcrb
clc
mov
sub
mov
add
fdivrs
stos
scas
lcall
ja
int3
mov
jno
pop
lods
xchg
mov
pusha
or
sbb
xchg
loope
ret
aam
insl
and
test
push
cmp
and
ljmp
leave
sub
sbbl
sbb
mov
inc
fdivrs
push
push
mov
das
add
fadd
and
mov
out
aad
xor
jbe
mov
ss
pop
push
sub
popf
mov
stos
dec
lcall
xchg
movsb
in
addr16
into
mov
in
pop
jp
mov
int
hlt
and
rolb
cltd
shll
sahf
aad
stos
mul
shlb
repz
mov
and
push
inc
rcl
mov
jns
les
imul
test
mov
mov
popa
push
fwait
jns
bound
jl
ret
jge
inc
ljmp
sti
fdivrs
lahf
add
add
xor
sub
push
dec
lods
arpl
int3
mov
mov
leave
sbb
ret
jge
ja
push
mov
jnp
jle
clc
ds
mov
popa
out
adc
fwait
sbb
add
sbb
jbe
sub
fcompl
js
push
xchg
jns
jae
insl
adc
or
icebp
pop
movsl
movsb
jo
ret
push
inc
sub
mov
fs
adc
movb
push
mov
iret
xchg
sbb
xor
sub
aam
in
ret
subl
adc
add
push
mov
push
lret
cmp
insl
cli
aad
bound
mov
cmp
xchg
fdivrs
sbb
in
xlat
sbb
dec
in
ror
mov
hlt
out
lea
add
addr16
jne
jb
push
popa
insb
jne
inc
add
push
js
mov
in
push
loope
mov
inc
pop
and
or
xchg
sbb
sbb
dec
cmp
out
inc
or
push
je
xor
outsb
xchg
jg
pop
push
cli
pop
xchg
mov
insl
jmp
inc
sbb
push
adc
mov
push
je
push
or
arpl
mov
dec
mov
jnp
sub
gs
daa
shrl
stc
mov
insb
ror
scas
add
add
pushf
sbb
mov
cmp
test
call
int
lea
mov
lods
pop
das
jo
enter
inc
push
and
sbb
xor
sbb
fisubrs
add
cwtl
ja
sbb
in
std
cmp
or
mov
mov
stos
es
into
cwtl
adc
sbb
sub
ljmp
mov
sbb
fistpll
lahf
pop
xor
aas
fs
cmp
pop
adc
dec
clc
neg
push
bound
jnp
push
jp
out
fisubrl
sbb
inc
test
jmp
cmc
mov
shl
stc
sbb
clc
mov
stc
cmp
pusha
push
lea
jbe
inc
bsf
mov
cmc
push
add
not
inc
pushf
shr
mov
setg
add
add
bsr
setae
movl
sbb
add
mov
add
call
test
cmpb
movw
pushf
jmp
sub
cmp
add
push
arpl
enter
test
cmpsb
iret
hlt
pop
sbb
xorb
enter
loop
mov
iret
jb
ja
jg
push
sbbb
movsl
enter
or
jae
movsl
fisubrl
push
mov
sti
jnp
test
pop
lock
ja
mov
notl
popf
cmp
adc
mov
add
push
pusha
in
xchg
push
mov
fdiv
mov
and
ljmp
mov
cld
sub
sub
mulb
clc
mov
call
rorb
sub
test
sub
je
cmp
mov
ret
es
inc
sub
lds
xchg
push
inc
mov
sbb
jne
lods
inc
aam
in
or
xchg
out
popa
out
xchg
hlt
sub
iret
push
lahf
scas
xor
lret
inc
repnz
sub
subl
enter
inc
incl
pop
push
call
push
pusha
movl
pushf
movl
pushf
mov
lea
jmp
pusha
cmc
bsf
xor
mov
call
movzbw
pusha
mov
pushl
movl
pushf
mov
pushl
ret
push
addr16
outsb
jno
push
and
pop
bound
imul
outsb
jae
popa
fs
imul
jae
arpl
push
fs
arpl
pusha
insb
push
insl
push
imul
pusha
jno
pop
and
pushl
popl
dec
stc
sbb
sub
pop
adc
dec
push
jns
in
push
xchg
js
mov
sbb
pop
adc
push
out
add
mov
push
addr16
vmwrite
mov
in
fdivr
icebp
cmpsl
mov
outsb
test
mov
cmp
std
inc
in
fmuls
out
adc
push
push
lods
mov
xchg
add
les
xor
xchg
xor
stc
jge
sbb
aas
push
mov
pop
fbld
repz
dec
jmp
xchg
jo
jae
mov
cmp
lahf
sahf
pusha
or
and
xlat
pop
sbb
pop
xchg
es
lds
into
imul
pop
adc
out
mov
imul
adc
je
movb
jb
les
jecxz
shrl
cmp
and
pop
mov
test
cwtl
notl
cmp
xor
das
notb
daa
jne
notl
inc
and
mov
pop
inc
call
adc
outsb
jae
mov
or
sub
aaa
add
mov
in
inc
stos
mov
cli
xchg
jge
leave
dec
push
in
jo
mov
add
jb
mov
outsb
out
clc
xor
cld
sti
sub
xchg
adc
xor
push
add
jge
pop
loopne
fimull
cmp
pop
shll
mov
jb
mov
mov
mov
adc
push
jnp
sbbl
mov
pop
jmp
pop
mov
js
xchg
outsb
rcrl
in
push
push
test
sbb
push
mov
mov
adc
push
jns
sub
insl
and
pop
je
dec
push
mov
lds
mov
cmc
lret
jnp
test
add
lds
add
je
bound
arpl
pop
xlat
lods
jb
mov
push
scas
cmpl
pop
or
adc
mov
test
cmpsb
clc
mov
pop
cld
pop
les
jne
jnp
mov
mov
popf
jno
pop
jnp
out
ljmp
pop
or
push
adc
je
aad
sub
jg
inc
insb
mov
and
sbb
mov
out
xchg
or
jne
xor
std
es
faddp
add
iret
mov
fnstsw
sub
into
xor
xor
pop
cmp
or
inc
cmpsb
movsb
xchg
jl
pop
jl
popa
push
lret
add
in
add
mov
or
xchg
add
repnz
push
out
mov
xorps
pop
cs
test
addl
jbe
das
stos
shlb
les
or
std
mov
mov
icebp
daa
repz
push
lret
imul
pop
adc
popl
in
or
mov
mov
mov
mov
cmp
jo
jmp
stos
rcrl
enter
clc
daa
xchg
push
mov
repz
lret
sti
and
gs
jp
xor
sub
rcll
scas
loope,pn
insl
mov
insl
bound
pusha
mov
fstpl
fcoms
push
frndint
popf
data16
dec
lods
mov
xchg
dec
lods
bound
xor
aam
pop
cmp
sub
sahf
xchg
jo
xchg
push
stc
mov
mov
or
and
lcall
movsb
in
sti
js
add
or
xor
popa
std
daa
lods
sbb
into
arpl
jno
iret
push
mov
cmp
jle
lret
mov
cmp
mov
pop
push
jp
int
into
sub
leave
mov
sub
fwait
sahf
jge
stc
test
dec
lods
popa
sbb
mov
mov
xor
push
dec
loop
inc
or
jns
xchg
cs
mov
xlat
insl
xor
xchg
ja
jle
cmp
dec
lcall
imull
mov
ret
inc
nop
sub
dec
and
or
mov
xchg
neg
and
sti
fisttpll
mov
aaa
adc
cmpsl
inc
add
filds
leave
push
mov
sbb
mov
or
add
stos
clc
cmp
inc
inc
jecxz
inc
loope
jbe
sub
in
push
sbb
jns
nop
mov
inc
xlat
xchg
das
adc
mov
or
mov
add
repnz
push
les
sub
or
xchg
test
or
cs
inc
inc
push
jp
fwait
adc
in
daa
data16
icebp
mov
cmp
sbb
dec
push
mov
sar
imul
add
dec
adc
stc
mov
cmp
lea
jno
jae
push
lea
jmp
lea
mov
movl
push
movl
pushf
mov
push
push
pushf
pushl
ret
lea
ja
pushf
stc
pusha
imul
movl
jmp
pop
inc
sbb
mov
insb
add
inc
pop
add
lcall
popf
mov
mov
fmuls
jno
cld
xor
nop
sbb
cld
push
push
aaa
or
fnstcw
push
jns
cmpsb
leave
out
mov
jns
sub
fs
xchg
js
les
arpl
incl
mov
insb
std
fldl
push
clc
cmpsw
inc
or
push
fdivrs
inc
mov
rcll
in
lcall
inc
rorl
jb
fldcw
cmp
call
dec
into
call
dec
sahf
pop
sub
xchg
gs
sub
lds
mov
jo
lods
or
pop
incb
insl
hlt
outsb
stc
cmp
imul
mov
jb
push
cmpsl
imul
adc
xor
mov
outsb
outsb
aaa
add
fadds
mov
popf
sbb
mov
mov
push
mov
mov
call
clc
cmp
cmpb
mov
call
inc
push
imulb
mov
xchg
frndint
mov
into
sub
jl
data16
ret
lods
mov
jns
jecxz
mov
mov
adc
jbe
call
idivl
jns
js
in
sub
pop
adc
lock
sbb
mov
jmpw
cmpsl
subb
test
jecxz
and
lea
stc
inc
fcoml
push
outsl
ret
inc
mov
mov
jno
in
jecxz
in
cmc
cmp
cmp
call
cmp
mov
jns
data16
ja
and
clc
test
orl
mov
and
jbe
jne
or
lds
js
xchg
and
int3
xor
fcom
push
xchg
mov
pushf
add
std
sbb
fucomp
lcall
and
fcoms
add
out
fdivrs
shlb
cmc
adc
adc
addr16
jnp
cmpsl
adc
in
jmp
pop
push
scas
lcall
xor
mov
adc
mov
popf
add
cmp
in
sbb
icebp
fldl2t
push
lock
movsb
adc
or
rclb
mov
leave
insb
out
and
lahf
stos
and
mov
xchg
scas
nop
cmp
push
push
pusha
cmp
aas
jecxz
pop
sbbl
imul
scas
out
notb
jb
xor
push
aad
xchg
mov
sbb
push
xor
rcll
clc
dec
ret
inc
cmp
mov
inc
fs
xchg
fldcw
xor
dec
mov
and
call
xor
mov
sbb
mov
nop
push
hlt
repz
mov
dec
imul
pop
ljmp
pop
aas
insb
leave
fwait
xchg
ja
test
cld
sub
cmp
add
xlat
xchg
jb
sub
mov
adc
and
popa
aam
push
ss
mov
pop
test
cmpsl
test
mov
lret
mov
fcmovnb
mov
or
mov
insb
lds
pusha
pushf
push
pushl
lea
jne
not
jmp
mov
pop
push
mov
pushf
pushl
mov
call
cmp
mov
cmc
and
fmuls
inc
repnz
fcmovb
rcl
scas
mov
xor
pop
mov
std
movsb
sub
pop
fidivl
call
das
mov
mov
pop
out
push
add
inc
adc
arpl
jge
fs
lock
jnp
aam
push
jb
mov
mov
sbb
jl
push
pop
and
jbe
bound
push
jne
mov
fxch
aaa
mov
inc
lds
pop
jne
mov
cmp
add
pushf
push
pushf
pushf
lea
jmp
int3
call
aas
outsl
xchg
dec
push
pop
arpl
movsb
imulb
pop
lret
jp
fnstcw
mov
ss
pop
mov
test
xchg
jp
cmpsl
xlat
dec
add
nop
adc
sub
sub
sub
cmp
or
jne
int
jecxz
aaa
push
mov
popf
rcll
jmp
add
pop
dec
in
mov
lcall
sub
cmp
mov
push
dec
shl
les
or
mov
ja
repnz
jae
jo
imul
sbb
jmp
mov
add
dec
push
aam
add
shll
cmp
stos
movsb
addr16
not
pop
jg
aam
in
mov
pushf
mov
dec
ljmp
add
fwait
sbb
in
loopne
enter
and
fdivrl
test
xchg
xchg
jg
mov
jle
mov
xor
adc
enter
add
in
mov
mov
insl
fwait
or
lea
sbbl
aam
aad
jl
js
mov
stos
xchg
inc
mov
sahf
lods
popa
add
aam
mov
push
out
pop
aaa
dec
fs
xor
cld
xor
lods
in
into
out
xchg
and
ja
mov
outsl
andb
xchg
sub
aad
cltd
pushf
call
ss
xor
mov
add
mov
andb
clc
cwtl
and
push
mov
mov
imul
cmp
cli
mov
xchg
sub
popa
pop
or
jmp
sbb
pop
inc
add
out
scas
inc
or
lcall
jno
fistps
push
pusha
clc
mov
loope
or
mov
xor
sbb
mov
add
icebp
xchg
or
sub
fisubl
arpl
mov
mov
sub
adc
aaa
jmp
pop
cld
dec
outsl
bound
or
and
jp
xchg
insb
fisubrs
shrl
aam
lods
sub
lcall
inc
pop
mov
ret
push
push
mov
imul
cmpsb
jmp
push
cmpb
pop
pusha
out
test
push
cld
outsl
repnz
cmp
iret
jg
mov
imul
dec
xor
movsb
cmp
fdivrs
cli
mov
xor
mov
in
rcl
icebp
jo
stos
rol
inc
jo
mov
out
popf
mov
or
lods
dec
in
loop
ss
push
test
out
cmpl
and
cmp
fldl
xchg
insl
pop
mov
test
mov
outsl
in
sbb
lods
shlb
push
sbb
adc
mov
mov
loopne
or
mov
daa
xchg
dec
adc
bswap
stos
cwtl
push
push
stc
mov
jmp
ds
jns
stos
cltd
cmp
xchg
cltd
jae
ja
cwtl
push
rclb
dec
xchg
lds
lods
inc
lahf
jno
hlt
cltd
adc
xorb
enter
and
dec
mov
std
sub
adc
movsl
aas
repz
xor
add
dec
scas
ja
out
and
mov
test
lahf
mov
cmp
pop
daa
xchg
mov
jp
push
mov
lret
addr16
sub
js
sbb
data16
popa
adc
and
or
mov
add
xor
dec
push
test
hlt
sbb
sbb
sbb
add
adc
jle
cmp
fld
gs
std
fldcw
imul
add
lods
add
push
mov
pop
xchg
pop
daa
imul
jp
cld
ljmp
das
btr
xor
shld
mov
pushf
stc
clc
cmpb
pusha
pushf
pushf
lea
jne
pushf
aam
sub
cwtl
cwtl
mov
pushf
pusha
lea
jmp
xchg
pushf
jb
sub
loope
loope
jle
cmc
pop
and
imul
push
cltd
mov
lods
mov
mov
jbe
sbb
sti
jmp
fbld
mov
sbb
rorb
cmpsb
sub
jl
lea
enter
and
mov
test
cmpsb
nop
adc
ret
stos
test
icebp
inc
lock
add
mov
or
inc
mov
xchg
ds
jmp
clc
add
pusha
jmp
or
clc
gs
xlat
enter
in
lret
mov
pop
lods
icebp
lds
pop
jle
pop
mov
fadds
repz
aad
inc
and
mov
or
je
out
push
mov
pushf
pop
in
movb
je
out
ja
adc
push
mov
and
dec
loopne
sub
inc
mov
jbe
pop
sbb
call
test
popa
cmp
lret
in
clc
dec
fimuls
adc
xlat
mov
push
out
in
lret
dec
ret
cmpsb
shl
mov
push
mov
push
add
mov
verr
rcrb
pushf
lods
bt
xor
sub
ror
shr
cmp
cmc
xor
movb
pushf
jmp
movsbw
pop
push
mov
movzbw
mov
pushf
pushf
mov
bswap
mov
pushf
pushl
ret
adc
dec
gs
mov
enter
imul
or
insb
adc
push
xor
push
std
and
cbtw
cmc
js
stos
and
mov
imul
insl
xlat
ficompl
push
std
jp
jmp
stos
mov
mov
scas
fdivrl
int3
icebp
es
imul
icebp
les
lahf
movsl
pop
enter
ret
xor
js
enter
xchg
mov
cli
xlat
fistps
add
ss
or
nop
test
lahf
bound
or
mov
cmc
out
cmc
jno
add
popa
insb
inc
insb
insb
outsl
arpl
fs
arpl
pusha
push
jp
jge
pop
jp
sar
pop
add
and
sbb
out
stos
repnz
or
nop
divl
arpl
xchg
xchg
adc
mov
out
or
arpl
jle
cmc
sub
mov
fstps
dec
push
xor
movsb
mov
popa
add
jns
mov
dec
out
addr16
shll
adc
fstpt
pop
es
jl
imul
mov
out
je
add
xor
fidivl
mov
negb
xchg
push
mov
jmp
lea
jne
mov
int
inc
scas
inc
aas
lock
pop
movsl
ljmp
jno
adc
push
lea
jne
pusha
push
mov
pusha
movl
mov
push
lea
jmp
scas
js
bound
add
ss
hlt
xor
data16
adc
test
dec
shl
sbb
aaa
pushf
ficompl
mov
sub
cmp
mov
and
das
sbb
movsb
pop
inc
cld
xchg
lds
fs
pop
repnz
or
loope
out
aad
xorl
cld
out
stos
fs
push
inc
jecxz
and
cli
dec
outsb
push
inc
into
sub
lds
movsb
jbe
ljmp
mov
adc
inc
jmp
mov
push
dec
xor
mov
mov
and
push
fcomps
xchg
mov
adc
test
cmp
fidivrl
jecxz
adc
jl
mov
call
push
out
pop
gs
mov
add
ret
icebp
call
loopne
daa
mov
cmp
rolb
inc
mov
mov
jne
fidivrs
test
jae
xor
adc
setae
not
lods
stc
cmp
sub
bt
pushf
test
xor
pushl
lea
js
pusha
pushf
inc
jmp
mov
leave
popa
sub
cmp
insb
pop
repz
mov
into
sbb
xor
aam
ljmp
xchg
fs
int3
xor
xlat
mov
jno
add
cwtl
cmp
mov
sbb
addr16
sbb
pop
or
cs
test
sbb
aam
xor
dec
and
jg
sub
adc
out
or
mov
ljmp
inc
ret
pop
call
jle
mov
mov
push
inc
incb
xlat
fisubl
or
inc
mov
insb
enter
leave
cmpsl
cmp
arpl
insb
fwait
pextrw
rcl
ljmp
mov
inc
and
xor
xor
mov
movb
push
push
lea
jmp
movzwl
stc
rcr
bts
jmp
or
pusha
sub
mov
jb
sahf
paddsw
jno
fiaddl
push
ds
pop
or
leave
mov
sub
jne
movl
inc
test
test
or
xor
mov
sbb
roll
mov
jo
pop
test
mov
repz
and
and
inc
inc
inc
inc
data16
cmpsb
adc
cmpsl
popf
mov
pop
mov
adc
ret
mov
in
sbb
push
clc
mov
pop
or
dec
fisttpll
into
or
dec
in
mov
xchg
jecxz
adc
mov
outsb
lods
push
loop
pop
fwait
inc
arpl
lcall
aas
pop
lahf
popa
jb
mov
xor
jge
cs
mov
fildl
mov
nop
je
int3
pop
mov
xor
pop
loopne
sarb
and
jne
aaa
shl
aaa
neg
xor
mov
shld
rcl
mov
rcr
or
shr
clc
add
shl
and
and
mov
clc
cmc
test
pusha
jmp
or
stos
pop
sub
fdivrp
mov
scas
jge
xchg
testl
mov
std
movsb
dec
lea
into
jbe
fcompl
push
ficompl
sbb
testb
pop
ret
xchg
rorb
psubusw
push
sbb
mov
rclb
aaa
lcall
ljmp
hlt
xchg
jge
xchg
jg
xchg
or
loopne,pt
lea
mov
jmp
jns
or
fistl
loop
mov
mov
ss
fcomps
inc
mov
add
push
push
in
mov
push
jne
mov
aad
insb
das
lock
inc
cld
stos
pop
loopne
jo
cltd
adc
out
fstl
mov
fwait
sub
test
lods
js
cs
pusha
jecxz
lods
sub
inc
jp
pop
in
cs
jbe
xchg
out
sarb
into
lcall
outsl
sbb
mov
dec
mov
ret
mov
xor
mull
mov
fimuls
xor
mov
rcll
dec
into
outsb
or
jbe
movsl
lods
or
jnp
mov
and
aaa
daa
inc
aad
mov
fistpll
imul
xchg
fisubrs
test
in
faddl
mov
adc
mov
lcall
adc
push
aad
push
or
mov
aas
jp
daa
pop
push
icebp
adc
add
sub
xor
aam
out
cmp
stos
push
sarl
aam
popf
out
xchg
add
shll
stc
jmp
inc
mov
clc
bt
stc
clc
add
pushf
mov
test
test
pushf
pushf
lea
je
pushf
pushf
stc
add
call
repz
pushf
mov
movl
pusha
push
jmp
lea
call
stc
test
cmp
pushf
call
ja
mov
fdiv
adc
add
fdivs
xor
push
ss
int3
and
xor
fwait
cwtl
pop
inc
out
mov
ljmp
pop
mov
sbb
cli
mov
sbb
mov
mov
nop
xchg
iret
mov
aaa
fistl
pop
test
and
testl
in
or
mov
outsb
clc
mov
cmp
sbb
push
mov
repnz
in
movsb
mov
xchg
mov
imul
out
out
mov
bound
lods
nop
mov
out
sbb
imul
dec
fistl
sahf
xchg
sbb
jno
imul
gs
xor
pop
mov
andb
fdivl
xchg
loope
bound
mov
cmp
popa
bound
adc
xor
int
xchg
pop
sbb
push
call
insb
and
pop
sub
lods
popf
push
pushf
rorb
fs
mov
cmp
mov
fs
cmp
in
and
loop
aaa
imul
test
adc
shll
xchg
cmpsl
push
test
outsl
lds
push
ret
mov
gs
fimull
loope,pt
push
sahf
out
push
mov
scas
fcom
out
aad
mov
out
adc
adc
fnstcw
in
mov
int3
popf
pusha
movl
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
mov
inc
jae
adc
mov
sbb
out
in
xchg
icebp
fists
fimull
inc
popa
sbb
dec
pop
loop
cmp
popa
xor
lea
cli
jge
or
sbb
sbbl
inc
test
mov
push
outsl
adc
pop
sahf
ret
xor
out
and
or
inc
xor
inc
daa
out
imul
cmpl
fimuls
xor
push
cmp
js
cwtl
jl
xor
mov
loopne
xchg
imul
mov
js
loopne
mov
scas
nop
loopne
adc
jno
xchg
mov
cmp
divl
jae
adcb
arpl
popf
stos
cwtl
jb
cmp
push
ror
loope
inc
pusha
mov
inc
je
scas
cs
or
rcll
sbb
icebp
xchg
sbb
sub
cmpsl
outsb
jnp
and
lahf
xchg
in
test
add
sbb
sub
pop
sub
mov
es
jne
push
mov
adc
add
cmp
js
not
mov
jae
xor
push
jg
andl
mov
sar
and
adc
lcall
mov
jp
and
iret
inc
inc
fwait
into
imul
push
in
push
xchg
cli
or
sub
or
add
push
mov
adc
fdivr
inc
or
add
jmp
push
inc
sbb
xchg
sub
and
leave
mov
fbstp
stos
sar
outsb
jp
sub
jmp
mov
pop
sub
pop
jl
lods
scas
add
push
jae
add
ljmp
add
dec
jne
shl
push
dec
out
xchg
adc
jle
mov
cmp
or
repnz
lock
jge
cmpsl
jp
cwtl
mov
inc
mov
testl
es
push
pop
test
jle
push
inc
call
push
and
mov
shll
and
push
and
test
pop
frstor
adc
leave
ljmp
mov
leave
pusha
lea
je
add
jl
and
xlat
jmp
mov
push
lea
lahf
mov
lea
xchg
setle
pop
seta
lea
bswap
pop
jmp
insl
mov
pop
sub
sti
insb
dec
ret
imul
adcb
sub
cmp
inc
pushf
test
and
cmpsb
sub
es
pop
mov
stos
mov
nop
and
add
fwait
in
xchg
and
xchg
adc
mov
mov
push
pushf
lea
jmp
xchg
pop
sub
jmp
sub
rorb
mov
mov
jge
test
fimull
or
sub
jne
ret
orl
fiaddl
out
data16
call
movsl
adc
pop
fwait
cmp
loope
shrl
fsubp
or
inc
imul
mov
dec
repz
clc
xor
jne
call
imul
sub
mov
or
jae
leave
popf
cmpsb
xchg
sti
xor
xchg
imul
push
ret
inc
and
jo
cmp
pushf
jmp
lea
jb
test
cmp
cmp
stc
cmp
push
lea
jae
neg
movzbw
sar
clc
mov
test
mov
neg
mov
jmp
clc
call
rol
mov
cmc
jmp
add
sub
inc
imul
and
jl
jns
sub
sti
es
mov
xchg
arpl
cmpxchg
cmp
or
aad
mov
add
shrl
sub
stc
sub
and
sbb
call
jp
cmp
adc
pop
repz
cmc
loope
repnz
mov
test
mov
xchg
cli
jno
mov
mov
and
out
pop
mov
inc
jno
push
sub
das
xchg
or
push
push
xor
lea
fmulp
out
bound
lea
in
int
cmp
pop
leave
push
and
or
stc
outsl
ja
mov
repz
inc
fsubrs
lock
imul
add
jno
or
icebp
push
add
hlt
add
or
add
stos
out
daa
daa
dec
xor
sahf
sbbb
out
rorl
dec
insb
adc
jle
imul
sub
push
not
call
sub
mov
pushf
stc
repnz
mov
lea
jne
sbb
bsf
mov
lea
rol
sar
sub
bsf
sbb
cmc
btc
mov
push
bt
cmc
sub
sub
jae
stc
pushl
jmp
lret
ljmp
jl
xor
xchg
dec
add
cmp
jnp
jecxz
adc
cwtl
sub
js
das
lds
lret
jmp
loope
xchg
pop
adc
out
xor
das
stos
fsts
dec
lods
insb
pushf
fildl
lahf
or
jmp
and
mov
adc
jae
sbb
cs
hlt
ja
scas
pop
mov
cltd
sub
xor
xlat
movsl
cmp
je
jnp
sti
or
pop
mov
sbb
sbb
add
lea
jmp
popf
std
in
sub
push
push
shl
cmp
clc
mov
pop
pop
scas
xlat
cmpsl
gs
stos
pushf
mov
sub
loope
jmp
xchg
jbe
sti
and
mov
mov
mov
mov
adc
mov
hlt
jg
push
pop
cwtl
or
stos
sub
xor
ja
jb
movsl
dec
jae
addr16
lds
or
dec
jns
mov
mov
fmulp
in
mov
push
pushl
mov
lea
jmp
pushf
test
xor
lea
push
xchg
pushf
mov
call
pusha
pushl
push
movw
inc
call
bts
mov
rcl
sar
mov
push
bt
pushf
repnz
push
pusha
lea
jne
bswap
movzbl
movb
push
mov
mov
not
lea
call
sbb
inc
push
sub
je
inc
push
or
test
pop
cmp
pop
mov
adc
pop
xor
roll
rorb
enter
xor
in
cmpsb
xlat
aad
push
cmp
movsb
push
shll
stos
xchg
lret
fcmovbe
cmp
das
jo
scas
daa
xchg
or
mov
adc
mov
fbld
ds
daa
mov
sub
loop
xchg
mov
stos
rclb
enter
scas
push
enter
push
xlat
mov
sbb
xor
shld
xor
lea
mov
pushf
clc
clc
test
cmpb
pushl
push
pusha
lea
jne
bsf
sbb
xor
bswap
pusha
mov
pusha
push
lea
jmp
add
inc
js
je
jb
arpl
jae
pushf
lea
je
push
stc
cmc
cmp
movb
lea
je
push
pusha
pushf
pushf
lea
jmp
pushf
call
inc
sbb
sahf
jmp
add
test
ljmp
lret
jnp
jmp
xchg
push
in
adcb
out
test
sbb
fwait
ljmp
mov
ljmp
rol
pop
jle
call
cwtl
aaa
es
out
cwtl
mov
sub
sbb
out
sbb
sbb
outsl
jmp
xchg
sbb
pop
test
ljmp
xchg
gs
loop
out
cltd
sbb
lahf
les
mov
jmp
jl
xchg
movsl
sbb
xor
out
cltd
sub
inc
sbb
jp
out
in
aam
jno
sbb
lcall
jle
lds
dec
sub
out
cltd
xor
lret
test
ljmp
test
test
ljmp
push
test
test
out
sbb
lock
ljmp
sbb
out
sbb
cwtl
push
add
out
sbb
sbb
ljmp
push
call
dec
scas
insl
add
out
sbb
xor
fs
cwtl
mov
dec
push
ljmp
stos
in
or
out
cltd
inc
unpcklps
sbb
in
out
cltd
jmp
sbb
mov
xchg
inc
pop
sbbb
cmpsl
cltd
cmp
push
ljmp
test
lea
ljmp
inc
in
dec
sbb
idiv
adc
sbb
mov
cmp
pop
mov
call
sub
add
out
sbb
mov
popf
mov
inc
inc
js
movsl
pop
test
jecxz
fwait
adc
sahf
test
test
ljmp
cld
lds
pushl
jmp
mov
out
lds
add
cmp
dec
and
out
sbb
sbb
xchg
aaa
xor
cmpsb
push
adcl
ljmp
cmp
pop
test
enter
inc
pop
jl
ljmp
push
jmp
stos
sbb
andl
sbb
push
jne
pop
mov
call
jp
fiadds
out
repz
insb
xlat
push
xor
adc
outsb
jb
inc
and
inc
mov
push
lea
jmp
jmp
mov
inc
jmp
fstpt
and
mov
cmc
jb
sti
sbb
add
jmp
test
push
imul
pop
xor
cltd
int
es
or
gs
rcrb
ret
das
fdivl
cmp
sbb
inc
or
cmc
iret
mov
add
push
jmp
in
adc
test
sbb
add
ljmp
xor
jle
push
sub
aad
out
and
lret
cmpb
push
repnz
jmp
in
xor
nop
or
sub
fld
addr16
cmp
aam
insb
dec
dec
inc
adc
addr16
fcoms
call
inc
out
movsl
fucomi
dec
ret
dec
outsb
fisttpll
pusha
dec
jg
pushf
jp
les
mov
popa
and
in
fistps
cmp
repz
add
xchg
xchg
neg
cmpsb
sub
mov
mov
jmp
mov
xchg
fnstenv
jo
sub
pop
imul
adc
mov
pop
push
stos
or
repz
lods
or
xor
sub
push
adc
fdivl
in
int3
sahf
sub
mov
rcrb
nop
lock
popf
sub
jbe
jnp
shr
sti
lods
stos
and
pop
sbb
push
xchg
adc
shrb
or
xor
xchg
hlt
sarb
lea
sub
sub
notb
pop
or
cltd
imul
jne
add
mov
aam
dec
fdivs
cltd
loopne
jmp
mov
clc
call
pushf
call
push
loope
sub
push
addb
lock
rcrb
aad
cmp
pushf
and
cltd
fisttps
mov
imul
mov
jp
add
mov
cmpsb
inc
loopne
nop
fistps
sti
sub
sub
lret
pop
ficoms
push
repz
fdiv
push
ja
enter
xlat
inc
and
inc
and
cmp
sub
stos
movsl
jno
mov
mov
loope
add
call
xor
add
popf
xorl
mov
test
cmp
call
daa
stos
xchg
dec
sub
add
xchg
shll
inc
mov
movsl
xchg
mov
sbb
aad
lcall
loop
inc
rol
pop
xor
lods
cld
push
shll
mov
mov
mov
iret
sbb
push
int
test
popa
fs
pop
pop
stc
idivl
sub
outsl
pop
ss
mov
out
add
pop
mov
dec
sub
fs
lahf
mov
jno
mov
or
dec
sub
jecxz
imul
mov
aam
mov
push
fisubs
inc
and
addb
mov
pop
cmc
push
xchg
cmc
jbe
shrb
pop
in
loopne
shll
jbe
ds
leave
mov
aas
subb
jmp
jo
ljmp
xor
pop
lods
mov
pop
fisttps
ret
scas
icebp
jne,pt
aam
popa
sub
test
mov
jno
cmp
inc
sub
or
pop
fldcw
dec
mov
pop
adc
mov
aaa
mov
pushf
xchg
xchg
fldt
aad
jmp
out
iret
pop
or
mov
and
insb
fadd
jnp
inc
push
mov
lea
arpl
outsl
xlat
out
jge
jl
jle
sub
mov
sbb
mov
jno
sub
cmp
xchg
ret
decl
bound
sbb
shrb
repz
out
or
lea
mov
jmp
cmpsl
or
push
cmc
lcall
mov
outsb
and
imul
dec
or
rcrb
fwait
or
xchg
inc
sbb
inc
sub
pop
jbe
pop
jle
jg
in
push
xorl
outsb
clc
mov
mov
jmp
sub
jns
push
scas
jp
cmp
outsl
negb
xlat
cmp
jns
call
xchg
insl
push
test
cmp
shll
lds
push
pop
cmpsl
xor
and
mov
push
sbb
repz
cs
loopne
inc
gs
je
sbb
add
jl
push
add
dec
sub
or
sbbl
dec
leave
mov
rcrb
jno
dec
sub
mov
pop
nop
push
aas
int3
insl
leave
sti
pop
cmp
ficoms
adc
add
pushf
pop
inc
test
ljmp
gs
dec
popf
loopne
sub
adc
and
aaa
shlb
cmp
mov
sbb
push
mov
subb
dec
mov
popa
mov
movsb
mov
test
gs
std
cmpsb
mov
xchg
push
mov
mov
mov
ja
pop
stos
and
sbb
loope
sldt
ret
aas
stos
and
xchg
pop
mov
mov
add
fiadds
push
or
movsl
push
and
push
nop
mov
sub
aad
add
inc
dec
sub
sbb
pop
test
pop
push
jbe
cmp
push
imul
mov
xor
int3
cmp
ret
pop
popf
popf
std
stos
xchg
test
mov
popa
pop
repnz
and
xchg
aam
adc
xchg
outsb
into
out
pop
push
out
sub
sub
dec
xor
out
xorb
das
dec
pop
enter
mov
call
dec
mov
or
add
xchg
push
pop
xor
pop
mov
or
dec
jp
pop
mov
mov
jo
or
jbe
cli
cmp
push
mov
mov
mov
arpl
pop
jb
notl
lahf
inc
pop
mov
out
cltd
jns
std
pop
xor
dec
in
js
xor
xor
pop
test
push
push
loope
cmpsl
std
addr16
out
sub
popf
mov
xchg
test
gs
mov
lock
push
stos
ds
dec
cmp
ret
inc
clc
xlat
outsl
lock
gs
ficomps
in
xchg
clc
addr16
popf
data16
test
pusha
mov
pushf
pushf
call
call
xchg
xor
dec
sub
jne
xchg
cmp
aaa
decl
push
dec
ret
add
orb
bound
xchg
test
icebp
das
fcomi
mov
jno
cmp
in
dec
jl
push
sub
or
jns
test
adcb
push
pop
xor
in
adc
sub
pusha
aas
imul
xlat
shlb
in
in
xchg
daa
cmp
push
sub
jp
sbb
add
imul
shll
add
cmp
gs
inc
test
adc
jecxz
popf
sub
lods
pusha
shlb
mov
loop
addr16
push
cmc
jecxz
sbb
adc
das
out
int
rclb
mov
cmp
in
loop
mov
stos
scas
fwait
lods
ror
xor
loop
pop
pop
loope
cmp
insl
mov
sub
out
rorl
and
xor
aam
shr
orb
cmp
inc
scas
mov
out
mov
push
icebp
jle
or
mov
movsl
cmp
adc
inc
jge
mov
inc
xor
pop
jno
daa
lcall
inc
add
mov
push
sub
mov
iret
aad
leave
mov
repnz
sti
jl
adc
or
sbb
icebp
push
xchg
push
into
int
in
sub
push
subl
jge
jmp
cs
icebp
cmp
fdivrl
dec
xchg
cmc
bound
add
outsl
sti
push
repz
lahf
cmc
pop
enter
sahf
xchg
mov
sti
stos
call
push
jo
movsb
icebp
in
pop
sbb
fwait
in
shrl
mov
pop
js
adc
or
arpl
call
cmp
in
repz
lock
mov
out
insl
cmp
jns
lcall
sbb
outsl
shll
cmp
dec
mov
shl
add
and
mov
mov
push
lea
jmp
add
push
popa
je
dec
jae
dec
inc
inc
add
loop
inc
sub
daa
fdivs
outsl
loope
jp
push
lods
xlat
dec
dec
fisttpll
pop
ret
mov
cs
addr16
jb
push
add
or
add
mov
mov
nop
dec
stc
push
scas
and
or
out
jae
pushf
pop
fbstp
adc
mov
push
pop
icebp
aam
imull
ja
xchg
fnsave
push
jmp
mov
fs
mov
pop
pop
stos
inc
in
loop
mov
mov
pushl
movb
mov
push
pushf
mov
push
pushl
ret
jmp
jmp
mov
jmp
adc
or
lods
push
xor
ss
push
js
insl
inc
jl
in
pop
sbb
fld
rcll
mov
mov
push
roll
cmpsl
pop
popa
jecxz
or
mov
adc
sti
stos
xchg
jb
aaa
adc
rcll
shlb
repz
aad
aas
jecxz
mov
mov
imull
mov
dec
fstp
test
push
insl
mov
insl
add
shl
cmpsb
scas
sahf
inc
pop
inc
adc
jbe
mov
cli
ret
cwtl
leave
scas
ss
lea
call
pushf
pusha
lea
jmp
cmpsb
lock
sub
imul
add
inc
add
dec
jp
sbb
jns
inc
adc
mov
repz
jno
out
cli
je
rcrb
adc
sbb
adc
jg
cmc
stc
pop
sub
cld
and
sub
jge
xchg
push
aam
stos
or
arpl
xchg
out
pop
dec
stc
xchg
adc
sbb
and
mov
mov
movsb
into
pop
ret
cli
ss
or
push
jnp
mov
inc
lea
pop
cmpsb
mov
nop
or
pop
aaa
push
inc
sub
shl
insl
cmp
xor
mov
je
push
jns
rcrl
or
pusha
mov
bound
add
in
mov
adc
mov
adc
sub
daa
mov
loop
je
mov
push
xor
jge
scas
adc
rorb
pusha
ljmp
adcb
movsl
sub
ljmp
inc
rorl
xchg
pushf
push
mov
mov
add
mov
rcrb
pop
fsubrp
rclb
dec
mov
lods
jg
inc
sub
mov
js
push
insb
sahf
loopne
incl
clc
mov
jmp
push
ficoms
pop
jle
stc
cmpsb
mov
mov
xorb
pop
in
mov
jns
mov
lods
int3
mul
in
xchg
lcall
out
adc
fists
or
fucomp
push
cld
inc
jge
imul
aaa
mov
or
je
mov
outsb
outsb
test
ficoml
dec
gs
popa
addr16
outsl
js
add
mov
imull
inc
pop
into
adc
lret
popa
xor
in
inc
shlb
fdivs
in
push
xorl
popf
sbb
neg
mov
add
sbb
enter
adc
fwait
or
and
mov
pop
jp
jbe
icebp
loope
sbb
dec
popf
jns
cmpsb
pushf
fdivs
mov
or
rclb
js
mov
push
cltd
pop
int3
or
filds
jnp
cli
fwait
or
sub
fcomp
jmp
pushf
mov
pushf
mov
lea
pushf
call
mov
incb
mov
popf
inc
jb
pop
out
dec
shl
xor
cltd
out
inc
jp
dec
out
pusha
push
iret
mov
fcompl
mov
pop
leave
and
jo
pop
mov
add
lock
fidivs
or
ss
xor
out
pop
xor
sbb
es
jecxz
ja
orl
mov
push
and
pop
xlat
loopne
jmp
pop
sub
in
lock
jle
pop
pop
sbb
pop
inc
inc
sub
mov
mov
fsubl
xorl
fadd
inc
outsb
inc
or
lret
pop
or
int3
dec
jbe
cld
and
xchg
push
push
insl
xchg
jb
push
sbb
cld
gs
scas
mov
ret
sub
arpl
and
sti
push
in
daa
in
div
push
pop
loop
cs
ss
inc
lret
repz
filds
inc
cltd
mov
data16
inc
sub
jge
sub
jnp
ss
sbb
xchg
sub
push
sbb
mov
mov
dec
sub
add
aas
loope
test
jno
shr
std
sub
or
jnp
int3
pop
fldl
fildl
jbe
mov
nop
popa
dec
jge
daa
jmp
in
insl
xor
stos
xor
dec
fiaddl
mov
ds
sub
mov
xlat
and
push
jmp
insl
into
push
das
roll
sarb
bswap
push
fidivs
ret
jecxz
adc
js
rcll
jno
jno
mov
mov
push
jmp
stc
xchg
or
push
xor
inc
xlat
push
idivl
das
dec
cmp
adc
pop
lea
cmp
jne
scas
mov
mov
xor
jle
jae
add
pop
dec
and
into
negb
xor
mov
rcr
sub
lcall
xchg
adc
shlb
push
sub
push
sbb
jae
loopne
mov
xchg
stos
inc
push
leave
xor
pop
sahf
jmp
out
dec
xor
add
movsl
int3
pop
into
loope
add
es
xlat
cs
ja
insl
pop
in
or
pop
subl
pop
pop
pusha
movb
pusha
push
pushl
ret
add
pop
inc
sub
push
js
lods
icebp
mov
lahf
mov
pop
call
dec
insl
push
sbb
in
push
add
pop
fdivl
leave
mov
arpl
mov
fcomps
or
cs
inc
jmp
in
pop
mov
clc
pop
mov
shl
imul
xchg
sbbb
sub
lea
inc
mov
pop
sub
cmp
or
popf
insb
icebp
xchg
movsb
cmp
add
inc
xchg
and
les
add
mov
push
out
mov
inc
xchg
enter
out
cwtl
jmp
dec
out
mov
hlt
aas
aaa
aad
xor
push
shl
adc
mov
cmpsb
mov
pop
packuswb
jne
subb
and
popa
add
fcoms
sbb
mov
and
jecxz
stc
pop
loope
mov
ss
mov
add
add
test
movsb
mov
out
and
int3
mov
xchg
imul
cmc
dec
or
imul
and
jb
sti
xor
mov
int3
cmp
push
fldenv
lahf
dec
mov
mov
mov
sbbl
imulb
js
scas
pop
sbb
cld
pop
ja
shll
xchg
notb
sahf
xor
subl
aaa
mov
mov
push
mov
ss
gs
adc
mov
clc
fs
mov
mov
or
loop
mov
out
cmp
add
test
jo
push
repnz
mov
pushf
push
lea
jne
setae
cwtl
pusha
cwtl
movb
movzbl
push
not
mov
call
and
cs
cli
sti
in
pop
push
fwait
xchg
mov
mov
outsb
mov
mov
aad
das
and
movsb
mov
aad
sub
jecxz
push
mov
adc
ret
repnz
out
inc
and
imul
or
filds
icebp
mov
es
sbbl
leave
pop
sahf
push
pusha
bound
cmp
sub
mov
fsubrs
dec
mov
mov
sub
iret
ja
sbb
and
movsl
insl
cmp
xchg
adc
mov
push
inc
aad
dec
xor
xchg
pop
or
pop
je
mov
scas
std
das
jl
ja
das
cmpsl
push
popa
mov
in
push
in
paddd
cmp
call
ds
cld
jge
in
repnz
jp
insb
inc
movsl
sbb
fisubrl
je
call
pop
mov
xlat
scas
adc
aad
xor
loop
insl
out
push
pop
mov
cmp
loop
jno
xchg
or
jbe
cmc
js
pop
pusha
sti
jbe
mov
test
nop
in
mov
sbb
add
jmp
adc
in
int3
xchg
xchg
notb
jo
or
push
pop
inc
in
aad
lret
in
testb
rclb
movsl
mov
cli
mov
call
jns
jo
xor
mov
jo
es
es
fstps
jmp
scas
inc
pop
and
and
stos
sarb
pop
in
mov
or
jno
fs
mov
mov
hlt
outsl
xchg
fcmove
aaa
fcoms
repnz
repnz
int3
sbb
lret
mov
inc
mov
ficoms
cmpsb
push
andl
mov
or
filds
sub
fwait
test
mov
sub
sub
add
fcoms
adc
sbb
out
fwait
mov
sahf
loope
push
xchg
sub
orb
ljmp
ss
loopne
jp
adc
popa
nop
test
js
stos
sbb
jecxz
xor
mov
rorb
xchg
mov
fsubp
lods
mov
mov
loope
out
jp
shll
hlt
sbb
scas
pop
xor
test
jno
fmuls
add
pop
cmp
je
mov
mov
dec
fsubrl
pushf
jp
sbb
xor
popf
cmp
shl
ret
xor
add
cmp
mov
pop
aaa
fiadds
repnz
fptan
sbbb
scas
movb
pusha
pushl
lea
jne
call
or
leave
sub
mov
mov
dec
sbb
lds
hlt
cld
mov
jge
push
inc
mov
jno
jae
xor
gs
inc
popf
adc
arpl
sahf
xor
lret
mov
pop
dec
xchg
into
clc
test
cmpsl
xchg
xor
stc
sub
decl
addr16
idiv
mov
cmp
lret
orb
xor
int
dec
out
and
leave
cmp
mov
test
cmpsl
pop
sub
and
push
mov
push
push
setle
mov
imul
movsl
shlb
push
cmp
add
das
cmp
cwtl
dec
scas
loop
mov
and
cmp
insb
sar
mov
dec
out
in
mov
inc
mov
lret
mov
test
mov
mov
loop
fildl
jl
pushf
cmp
xchg
es
imul
xor
inc
and
les
popf
pusha
lea
jmp
leave
or
sub
xchg
ret
sub
cmc
mov
shrb
outsl
pop
jp
push
jmp
mov
mov
popa
shlb
inc
cmpsb
inc
aad
adc
pop
fsubs
ja
out
mov
sub
js
mov
adc
or
stos
pop
aam
push
mov
inc
lds
enter
sub
push
push
popf
sub
or
fwait
adc
cmp
or
fcom
push
mov
dec
sbb
fists
neg
mov
and
je
pushf
bt
call
mov
adc
push
lea
jae
jmp
ficoml
cmp
jbe
cmc
mov
mov
push
lds
pop
inc
jge
je
das
sahf
and
xor
inc
addb
xorb
sub
lahf
iret
mov
sbb
out
pop
add
in
sub
mov
les
jns
mov
pop
jge
ja
push
jg
loope
xchg
in
lods
cltd
cltd
nop
push
pop
or
shll
pop
pop
ds
and
sub
xchg
test
popa
xchg
iret
sub
fld
sbb
imul
loope
aas
out
xor
test
sbb
jno
fidivrl
mov
xchg
lahf
mov
xchg
rorb
xchg
jge
mov
inc
shll
cwtl
mov
fldl
sub
mov
xchg
mov
add
cmp
into
out
sar
pop
mov
dec
adc
mov
or
and
xlat
or
xchg
stos
cmp
out
adc
bound
lock
loop
mov
mov
jns
cmp
in
fldcw
popf
fistpl
inc
mov
mov
ljmp
fsts
sahf
js
pop
les
scas
jo
clc
push
push
or
stc
pop
lcall
popa
jg
xlat
icebp
call
or
les
and
dec
cmp
int
insb
js
fld
mov
pushf
lea
jne
jo
push
push
mov
pusha
jmp
lea
ja
test
setne
sub
bswap
sbb
cmc
add
or
and
rol
mov
cmc
mov
stc
stc
test
repnz
push
pusha
pushf
lea
jne
pusha
movb
pusha
mov
lea
call
imul
cmpsb
sbb
push
shr
mov
mov
sbb
leave
fstpl
fwait
sub
aad
data16
cld
loop
or
in
jp
jns
leave
add
fsts
cmp
mov
sbb
inc
fcomps
sub
dec
sbb
sub
pop
cmp
mov
insl
cmp
mull
mov
dec
push
mov
stos
adc
inc
push
dec
dec
push
inc
push
dec
cs
insb
add
mov
nop
jmp
pop
jl
sub
dec
xchg
insl
fcmovb
cld
push
outsb
subb
jb
pop
jns
ds
mov
xchg
into
call
xchg
icebp
pusha
push
mov
jl
mov
mov
cwtl
pop
aam
ja
idivb
ljmp
dec
in
scas
lods
jg
lret
repnz
mov
rclb
pop
inc
leave
mov
dec
in
sti
and
arpl
imul
lds
repnz
sbb
in
out
push
fnsave
cmp
dec
loope
incl
iret
outsl
ja
inc
push
outsb
aaa
sub
fisttpll
jo
pminub
xor
fmul
fisttpl
aaa
sub
xor
add
outsb
adc
or
loop
prefetcht0
daa
jg
or
fs
int
mov
imul
jge
cmp
fiadds
test
or
xor
cmp
movsb
aam
cmc
xlat
or
roll
test
or
push
sahf
sbb
or
test
bound
adc
xor
and
in
xor
push
scas
imul
dec
inc
aas
push
cmp
xor
mov
rcl
cmc
pusha
cwtl
outsb
aaa
sub
fisttpll
sti
adc
lods
aad
sub
and
int
mov
xor
dec
fisttps
and
lret
jle
cli
rcrl
inc
xor
dec
adc
cmp
push
les
stos
js
adc
push
pop
add
mov
pop
xor
push
mov
and
or
lea
out
cmp
subl
enter
aaa
push
cmp
mov
cli
jge
sti
adc
sbb
iret
scas
cli
cltd
enter
loopne
imul
sbb
sub
adc
leave
gs
aaa
repnz
shll
push
mov
sub
add
scas
adc
stos
and
push
sub
imul
xchg
xchg
inc
xchg
mov
mov
mov
std
xchg
lock
gs
or
mov
add
jge
mov
prefetch
push
lcall
push
divl
in
jg
jmp
iret
daa
mov
leave
pushl
lea
call
call
jmp
insb
dec
and
ret
cmp
sub
lret
mov
add
imul
add
mov
shlb
mov
int3
or
popa
adc
lahf
ja
cmp
hlt
dec
scas
xlat
jae
or
inc
js
sbb
stos
fdivrp
fucomi
ja
cmp
sub
push
add
movsb
adc
push
or
mov
scas
loope
and
inc
sbb
mov
xor
sbb
adc
add
sub
push
imul
and
movb
mov
pusha
call
cmp
mov
sub
pop
iret
jp
cmpb
or
mov
out
jno
add
sub
leave
lods
xlat
cwtl
push
pop
or
mov
sub
pop
out
rorb
cmpsb
sti
jo
imul
aad
sbb
cld
mov
gs
testb
mov
leave
loopne
shl
insb
adc
loope
lds
add
and
mov
gs
and
icebp
fimuls
daa
cli
out
xchg
xchg
es
popa
lret
lret
dec
push
xchg
jl
aad
pop
pushf
shl
icebp
push
and
mov
out
orl
xor
push
mov
cmp
cmp
cmp
or
mov
mov
dec
aad
xlat
addr16
aam
push
adc
dec
clc
dec
cmp
or
mov
test
sub
fcompl
scas
dec
in
fldl
xchg
add
pop
cmp
and
mov
cs
iret
and
out
xchg
dec
lock
pushf
in
out
cld
lock
stos
pop
ret
cmp
mov
pop
scas
leave
xor
mov
ljmp
sbb
addr16
xchg
daa
mov
and
out
pushf
movsb
lods
in
arpl
xchg
cld
imul
or
jns
push
inc
inc
cmpsl
dec
cmp
hlt
addr16
xor
cmp
xchg
mov
adc
push
mul
jb
cltd
lcall
test
repz
les
rcr
fs
jno
sbb
mov
ljmp
out
das
sbb
pop
in
into
and
in
push
into
insl
fwait
sub
mov
cs
inc
scas
fnstsw
insl
sbbl
push
jae
or
insb
mov
sub
inc
popa
cwtl
xchg
in
ret
xor
xor
int3
xlat
negb
pusha
push
mov
call
dec
sbbb
lret
sub
lret
xor
sub
dec
adc
lcall
aaa
jne
int
sbb
cwtl
push
sub
and
mov
vrcpps
jg
sbbl
push
jp
out
jbe
outsl
xchg
or
xor
dec
cli
lahf
es
pop
inc
sbb
and
inc
roll
cmp
pop
mov
lret
or
xor
mov
jnp
cmc
hlt
ja
lds
cwtl
sahf
mov
mov
addr16
xor
sbb
and
imul
add
cmp
or
or
lahf
adc
popa
aaa
push
test
xor
fwait
popa
jl
cmpsb
pusha
fistpll
inc
out
mov
mov
sub
adc
dec
xlat
iret
jge
pusha
mov
int
lock
je
subb
mov
mov
mov
mov
adc
dec
sbb
jne
fs
mov
stos
xchg
push
pop
mov
adc
pop
pop
imul
xor
mov
or
cmp
adc
fldcw
insb
mov
cmp
js
lods
or
loopne
lock
xchg
mov
add
aam
dec
push
aaa
xor
subl
lcall
sbb
popa
or
aaa
test
fs
aad
jo
xchg
cli
out
push
div
or
pcmpeqd
xchg
stos
cwtl
xor
jp
sbb
mov
adc
mull
pop
xor
sub
cwtl
jnp
imul
pop
jae
pusha
mov
or
stc
addr16
adc
mov
inc
add
sbb
push
test
insb
fs
dec
jno
shlb
in
cwtl
shl
adc
lea
and
arpl
cmp
ret
decl
data16
loop
push
pop
and
xchg
rcr
cld
sbb
dec
add
insb
es
mov
pop
icebp
push
in
push
adc
repnz
addb
mov
lea
je
bt
push
test
cmc
add
stc
cmp
pushf
pushf
pushl
pushf
lea
jb
call
cmc
sbb
xor
popa
xchg
movsb
popf
sbb
and
pusha
ret
ja
pop
or
aas
and
notl
cli
daa
push
mov
repz
daa
jns
cli
or
push
in
xchg
or
or
mov
push
imul
or
jnp
roll
pop
jmp
mov
dec
sarl
test
in
dec
mov
movsl
subl
jbe
adc
xchg
or
or
sbb
lds
jp
pop
test
pop
call
lods
cmpsl
in
pusha
push
xabort
scas
pushf
lea
jne
pushf
bt
mov
push
inc
sub
btr
cmc
shl
lea
test
sub
mov
cmp
pushl
popl
jmp
push
or
das
sub
popa
adc
xchg
cmp
mov
jmp
imul
add
popa
sub
test
callw
movsb
out
dec
mov
xor
add
cmp
and
and
adc
nop
imul
inc
std
mov
sbb
xchg
data16
pop
scas
mov
jecxz
sub
xchg
sub
cmc
addr16
leave
repz
sbb
or
and
sbb
lds
fs
rolb
adc
cltd
xor
sub
mov
push
add
cmpsl
or
jb
jmp
cvtps2pd
sbb
das
inc
ret
int3
in
in
and
mov
es
mov
jb
xlat
cld
xchg
sub
aas
stos
sub
ja
push
mov
add
and
dec
mov
aad
popf
in
lods
icebp
pop
add
into
pop
into
mov
push
jge
mov
ret
dec
sahf
cmp
mov
rcll
mov
inc
sbb
push
cmp
and
push
sub
or
add
jae
jns
pop
lock
and
fiaddl
jo
jge
test
sbbb
or
adc
movb
lea
jb
push
cmp
jmp
inc
pusha
call
sbb
out
cs
les
mov
mov
or
adc
mov
xor
or
or
movsl
sub
mov
int3
xchg
outsl
jb
xor
fdivrl
arpl
out
rorb
sbb
inc
jae
arpl
push
pop
insb
sub
push
jb
out
mov
ror
pop
push
rcr
jne
test
js
dec
jo
mov
sbb
xchg
jmp
and
inc
lret
mov
xchg
cmp
and
daa
pop
push
sub
push
and
add
sbb
daa
sbb
or
aas
pop
cli
cwtl
xlat
out
imul
sub
ret
xchg
xchg
ss
push
sub
adc
mov
lock
xchg
mull
in
in
push
jne
cmp
push
sbb
aam
in
xchg
test
sub
jb
inc
xorl
jo
cmp
js
add
xchg
jns
xchg
mov
mov
lock
jle
ret
orl
mov
jns
neg
cmp
cmp
movb
lea
cwtl
movsbw
mov
push
pushf
lea
ja
call
movb
pushf
jmp
jb
push
pushf
push
mov
pushl
ret
adc
movw
lea
jae
push
movw
lea
jne
jmp
mov
fisubrl
mov
xchg
inc
inc
xor
xchg
enter
xchg
dec
ja
adc
es
jmp
cltd
or
and
out
cli
cwtl
dec
in
mov
push
ljmp
subb
fists
sbb
mov
repz
push
push
idivb
sahf
jl
lcall
dec
std
jmp
xchg
std
pop
addr16
or
shrb
rcrb
add
std
movsl
xorb
push
into
cli
pop
gs
adc
pop
scas
add
mov
xor
ss
mov
add
or
data16
and
cltd
inc
sub
push
cmc
jg
in
pop
mov
jp
and
xchg
jmp
pusha
pusha
pushf
movb
lea
je
clc
push
pushl
cmp
jmp
test
fildll
sub
adc
loopne
dec
cmp
xchg
pop
scas
inc
loope
lods
sbb
mov
sub
pop
pop
into
jbe
pop
pop
popf
sbb
jne
mov
cmc
cmpsl
xor
and
dec
lds
push
out
sub
mov
mov
jo
fcomip
test
mov
push
mov
outsb
xchg
cltd
or
mov
mov
sub
sbb
and
popf
lods
sub
fwait
ret
mov
inc
jne
nop
ja
pop
mov
push
adc
lea
pusha
pushl
ret
ljmp
mov
xchg
sub
lahf
aas
pop
test
loop
and
cmp
test
mov
addb
in
test
jno
pop
dec
jge
adc
mov
xchg
sub
adc
jno
or
pop
xchg
addl
fadd
lret
jg
movsl
xor
xor
jp
mov
sub
loopne
lods
ja
lahf
aam
shll
adc
sarl
lcall
xchg
xor
and
pop
dec
repnz
mov
fisttps
imul
pop
push
aad
dec
push
mov
lods
fucomp
cmp
or
lock
outsl
cltd
xor
add
xor
dec
mov
rcr
jecxz
in
fmull
sahf
pop
xlat
jne
and
insl
cmp
dec
pushf
push
or
xor
pop
cmpsl
mov
mov
sbb
mov
ljmp
loope
mulb
shlb
lret
shll
sahf
mov
sbb
mov
in
mov
push
add
adc
jg
jle
repnz
mov
loope
scas
jne
es
jg
inc
jl
xchg
mov
pop
inc
out
and
pop
lret
jbe
test
mulb
movsl
shll
push
or
sbb
sbb
dec
pop
outsl
push
push
fimull
cmp
and
push
orl
mov
mov
shlb
popf
out
sub
outsb
repz
and
pusha
jae
hlt
dec
fcmovb
and
mov
sahf
fbld
adc
rol
fidivrl
add
mov
push
std
sub
stos
mov
jb
lret
cmpsl
dec
jmp
jecxz
mov
movsb
jecxz
adc
aam
lock
adc
xchg
mov
mov
push
outsb
sti
iret
cwtl
dec
and
or
std
scas
ds
xor
push
xchg
dec
adc
xlat
fiaddl
ret
pop
test
popf
lahf
or
pop
add
loop
or
mov
jbe
push
aam
rol
jb
add
xor
and
scas
mov
ja
mov
sarl
jp
xor
jbe
and
pop
dec
or
and
das
stos
movsl
cmp
in
in
cmp
mov
lret
or
lods
mov
and
test
lahf
pop
aas
roll
popf
inc
pop
dec
in
loopne
sub
jno
and
gs
nop
push
lods
push
dec
mov
loopew
push
dec
cmp
push
or
iret
push
mov
clc
or
dec
scas
lcall
xor
inc
sub
dec
or
jns
aaa
out
std
idiv
sub
cmp
cmp
std
lret
jo
push
inc
pop
adc
out
jnp
lcall
pop
das
loopne
setno
cmp
xchg
in
icebp
mov
adc
lock
xchg
xchg
add
das
loopne
cmp
andb
lods
cltd
or
cmp
in
jge
jg
mov
sub
not
rcrl
arpl
out
call
repnz
push
cmp
lods
sub
inc
mov
sbb
pop
notl
xor
insl
jge
mov
int
fdivrs
repnz
cmp
icebp
jle
and
out
dec
sbb
cmpl
xor
mov
gs
das
push
mov
or
and
in
push
cmp
cmc
mov
adc
fnstcw
gs
mov
cmpsl
dec
mov
stos
mov
push
jne
sbb
push
inc
mov
jb
mov
and
ret
fcomps
mov
mov
inc
shrl
push
daa
pop
jecxz
daa
mov
pop
and
mov
add
pop
mov
pop
loope
mov
jbe
mov
push
inc
add
hlt
rolb
jbe
mov
jecxz
icebp
add
sub
stos
outsl
movsl
push
push
lds
clc
or
movl
je
dec
adcb
jecxz
mov
mov
push
jb
outsb
call
xchg
inc
in
pop
in
adc
dec
cmpsl
and
lock
push
add
nop
sub
mov
xchg
adc
ret
out
xchg
daa
popf
mov
shl
rolb
or
add
insb
pop
or
sbb
ret
je
roll
xchg
out
and
repnz
aaa
mov
js
cmc
push
std
pop
outsl
xlat
es
clc
insb
ljmp
push
lcall
and
xor
mov
out
dec
ret
sub
adc
and
and
push
add
mov
pop
cmp
adc
aaa
xchg
pop
xor
incl
cmc
or
push
inc
notl
insb
mov
mov
mov
js
aas
sub
loop
fiaddl
aaa
sbb
sbb
mov
andl
add
or
inc
dec
and
lock
div
mov
mov
ds
dec
int3
cld
into
les
push
mov
push
enter
mov
je
mov
push
mov
fs
aam
scas
xor
imul
int
out
or
nop
cs
stos
fnsave
scas
cwtl
stc
pop
int
sbb
repnz
out
pop
cmpb
in
jns
aam
dec
mov
xchg
nop
push
mov
adc
sbb
push
data16
sub
sub
or
sbb
cmc
mov
push
and
sbb
bound
imulb
test
jmp
pop
dec
sbb
iret
cmpsl
adc
andb
add
dec
sahf
fs
and
daa
cwtl
xor
inc
rorb
ret
dec
xchg
mov
pop
orb
dec
imul
subl
jo
or
insl
mov
or
add
daa
mov
or
stos
push
fildl
in
inc
cmc
ja
push
iret
ss
inc
shlb
mov
mov
cmpl
mov
add
inc
xor
sbb
xchg
push
xchg
or
sbb
data16
daa
cmpl
test
push
dec
cli
mov
dec
js
xor
mov
xchg
pop
sbb
mov
and
jns
pop
stos
xchg
push
pusha
inc
test
mov
pop
or
fstl
cmpsb
out
rolb
dec
cmp
xchg
loop
xor
cmpsb
mov
sbb
inc
cmpsb
xor
into
or
mov
loopne
lahf
movsb
mov
mov
adc
mov
dec
sub
mov
lock
jnp
in
std
mov
out
pop
jo
movsb
lcall
mov
addr16
push
mov
inc
inc
or
sahf
test
fwait
xorb
arpl
pushf
or
dec
fildl
dec
pop
je
xor
xor
fcomps
cs
scas
adc
pushf
sub
int
adc
sbb
inc
jle
stos
push
jo
repnz
loope
inc
and
stos
pushw
xchg
mov
mov
loopne
or
dec
dec
in
sti
bound
xor
add
in
and
jge
es
push
sub
cmp
fs
daa
inc
mov
cmpsl
pop
call
lcall
mov
loopne
push
inc
mov
mov
fmuls
or
mov
mov
dec
fisttpll
lock
cs
push
mov
cmp
xor
jle
int3
ds
and
ret
or
lods
lahf
push
clc
test
pextrw
mov
in
shll
mov
inc
imul
outsl
lods
pop
jae
pop
jnp
scas
sub
into
cld
in
fimuls
dec
sbb
stos
into
lret
xchg
cltd
loop
xor
adcl
pop
and
shrl
xchg
movsl
and
dec
jne
pop
lahf
adc
dec
cltd
je
pushf
cmp
addl
push
out
addr16
loopne
push
cmp
push
sbb
repnz
or
sbb
xor
fisubrs
xchg
sub
xchg
cli
pop
clc
test
lods
add
xor
adc
sub
in
stc
add
inc
mov
std
lret
cmc
sbb
inc
cwtl
lret
in
xchg
add
push
clc
sbb
ds
repz
inc
aam
mov
movsb
shlb
push
cmpsb
nop
js
testl
ret
pusha
jno
mov
leave
xor
dec
pop
fmuls
or
aad
xchg
mov
adc
mov
lret
hlt
adc
pop
push
insl
or
es
je
push
fwait
ret
ljmp
and
in
in
test
add
fcompl
and
pop
sbbl
addl
call
clc
shll
test
mov
bound
nop
sub
lahf
addl
mov
adc
lock
pop
push
add
mov
adc
enter
pop
xlat
arpl
mov
push
arpl
jmp
jbe
or
je,pn
int
fisttpll
sub
cmp
cmp
jmp
mov
aad
lret
mov
in
sahf
mulb
mov
jo
or
sbbl
mov
leave
add
ds
xlat
test
fistpll
mov
mov
bound
imul
or
bnd
xor
dec
mov
in
les
stc
pop
repnz
je
pop
and
cld
stc
mov
inc
pop
push
adc
jbe
mov
loope
mov
iret
sbb
jecxz
dec
loopne
mov
and
pop
xchg
xor
fldt
adc
stc
test
lcall
or
sbb
repz
ds
out
dec
mov
pop
mov
push
sbb
push
test
push
cmp
imul
inc
shlb
mov
int3
dec
hlt
cltd
sub
fdivl
add
movsl
push
xor
stc
popf
std
insl
dec
dec
cmpps
or
fnstcw
bound
js
sbb
sahf
dec
scas
xor
xchg
inc
push
cmp
ss
aaa
notl
adc
aam
mov
stos
or
pushf
mov
mov
popf
jp
fiadds
lea
bound
add
xchg
pop
and
sub
jbe
jmp
pushf
andl
dec
mov
aad
pushf
pusha
adc
mov
push
scas
xlat
lret
mov
hlt
pop
rcrl
sbb
sbb
das
sub
out
jb
hlt
aad
fdivs
and
mov
add
cmp
inc
or
mov
mov
sar
and
push
fisttpll
aaa
ficoms
int3
inc
out
xchg
add
dec
mov
xor
cmp
adc
dec
ss
je
pop
fiadds
mov
mov
mov
sahf
js
xor
daa
adc
jno
and
xchg
adc
fildl
out
ficoms
push
mov
cmpsb
cltd
xor
push
mov
sub
jp
cltd
test
std
sub
add
jbe
mov
scas
je
popf
dec
mov
mov
adcb
insb
mov
dec
fbstp
fcoml
lods
push
jle
xchg
incb
loope
adc
mov
aad
sub
jnp
dec
stos
cmp
enter
inc
mov
mov
mov
dec
and
xor
mov
popa
adc
adcb
pop
fimuls
test
mov
mov
pmullw
jnp
mov
xor
mov
jne
pop
mov
adc
cwtl
in
es
shr
dec
sub
adc
dec
sbb
daa
push
add
jnp,pn
mov
pop
int3
jge
out
loop
and
fisubrl
mov
test
shrb
inc
repnz
inc
iret
inc
shlb
sub
hlt
jl
or
fwait
andl
scas
ljmp
stos
out
or
push
scas
inc
arpl
xchg
and
dec
sub
push
push
enter
dec
pop
mov
das
movsb
test
mov
adcl
sbb
fcoml
mov
dec
test
addl
pushf
sbbb
push
xchg
xor
or
cli
xchg
push
sub
cmp
mov
sbb
test
stc
fs
jb
jb
inc
push
mov
or
dec
jo
push
cmp
sbb
and
dec
dec
adc
jno
push
add
das
icebp
sub
fimull
mov
daa
pop
inc
fimuls
adc
movsb
lret
dec
mov
into
aaa
fistps
or
lods
dec
mov
shlb
adc
lret
cmp
pop
mov
jo
or
mov
and
clc
and
jne
and
or
jg
scas
mov
add
fsubs
dec
pop
mov
sub
comiss
or
pop
iret
cmp
sub
sub
test
pop
mulb
mov
mov
pop
mov
cwtl
rep
adc
popa
adc
adc
and
mov
aam
xchg
inc
aaa
pushf
out
or
scas
jge
test
cwtl
jnp
dec
sub
pushf
push
mov
jne
mov
or
lcall
cmp
ret
in
cmp
pushf
or
std
dec
mov
or
cmp
or
imul
jge
jmp
jbe
popf
fdivr
roll
je
xor
cmc
mov
bound
aam
xor
sub
xor
imul
test
pushf
add
std
cld
pop
out
scas
pop
syscall
icebp
push
inc
xchg
jnp
xchg
sbb
mov
mov
lcall
pop
notl
cmc
adc
std
rcrb
pop
and
shll
pushf
scas
inc
cmp
loop
push
jo
dec
push
lea
fstl
xorl
inc
and
mov
outsl
dec
ja
add
out
jbe
popl
or
mov
test
lods
dec
cld
imul
jne
leave
push
loope,pn
out
pop
cmc
lcall
pop
test
dec
xor
gs
aam
decl
sub
mov
outsb
pushf
cld
sbb
je
add
fsubl
jnp
adc
jmp
jns
cmp
mov
dec
dec
adc
pop
adc
mov
in
dec
xchg
dec
rorb
sub
aam
aam
popa
mov
jle
test
movsb
xchg
and
call
pusha
je
dec
xchg
pop
jmp
mov
negb
sbb
mov
arpl
arpl
cltd
gs
scas
insb
or
xor
lea
pop
out
mov
xchg
mov
fwait
ret
jmp
pop
fisttps
outsb
daa
mov
jnp
and
push
daa
sbb
pop
in
stos
cmp
stos
pop
mov
data16
clc
cwtl
sub
mov
stc
pop
je
xchg
shll
dec
or
fdivrs
or
push
or
add
mov
and
sub
and
popl
cmpsl
das
lcall
push
cs
movsb
cmp
xchg
sbb
stos
mov
dec
or
int3
or
aam
loope
fcompl
out
shll
psrlw
mov
subl
lods
stos
jo
xchg
call
hlt
pop
jmp
mov
ret
daa
fwait
sub
insb
cmp
lcall
int3
jbe
inc
cs
adc
cmp
outsb
loopne
fidivs
mov
sahf
test
adc
aam
and
xor
push
sbb
dec
fwait
mov
mov
cld
aam
leave
imul
sbb
add
dec
lret
sbb
add
mov
ret
stos
mov
lods
inc
or
cmpsl
adc
mov
mov
pop
std
mov
add
popa
sub
call
sbbl
lcall
in
pop
push
and
jnp
sub
mov
push
xor
or
ds
sub
pop
aas
in
lock
push
lret
cmp
dec
outsl
andl
mov
push
scas
lock
fidivrs
cwtl
sbb
jmp
and
cmp
or
add
les
mov
scas
iret
sahf
dec
jnp
jo
nop
dec
pop
int3
sbb
and
out
data16
mov
mov
test
or
mov
ret
xchg
mov
push
and
rclb
mov
xchg
aad
shr
adc
jb
pop
in
xlat
push
rorl
mov
ljmpw
or
jb
pushf
cmp
cmpsb
out
xor
lea
push
jbe
mov
mov
int
mov
and
clc
shrl
fiadds
sbb
out
adc
enter
mov
cli
cmpsl
into
leave
cmpsb
and
dec
or
rdpmc
rorl
cmp
sub
and
cmp
jp
dec
lods
and
mov
jne
pop
es
pop
adc
jae
mov
and
out
dec
xor
mov
shlb
cmp
notb
xor
sub
rclb
rorb
sti
mov
xchg
xor
lock
mov
push
pop
or
mov
mov
aad
cmc
cmpsb
push
mov
cli
idivl
lret
lahf
xchg
arpl
mov
pusha
imul
stos
inc
lods
arpl
stc
sbb
dec
mov
divl
mov
ret
cmp
lds
mov
mulb
aaa
push
in
movswl
add
gs
lods
sbb
int
or
dec
jno
lods
sub
push
xchg
and
lea
mov
js
add
test
cmp
insb
mov
scas
pop
dec
jnp
bound
jge
mov
cli
cli
jle
loopne
cwtl
test
shrl
mov
sub
imul
in
jmp
scas
mov
pushw
mov
rclb
int
loop
and
sub
add
jnp
add
sbb
jg
push
js
shll
mov
push
add
mov
sub
xchg
rorl
mov
loop
movsl
stos
mov
scas
xchg
xor
mov
clc
fs
pop
or
dec
pop
movb
push
int3
mov
cltd
insl
outsb
fistps
sti
cmp
addr16
push
enter
sti
lods
jno
cmc
test
pop
divl
dec
scas
sub
pop
sti
push
jg
cs
lcall
scas
xchg
sahf
pop
aaa
xchg
out
stos
sbb
data16
rcrb
into
xorb
push
insl
sbb
and
mov
mov
sbb
fdivl
sub
jp
repz
xorl
xchg
jle
je
loope
in
mov
mov
cli
fldl
push
inc
pop
ficoms
push
mov
mov
rol
and
faddp
cmp
pop
dec
into
jge
dec
mov
xchg
cli
stos
xchg
or
sub
mov
inc
jg
jae
test
popf
xor
in
pop
xchg
push
stos
mov
test
call
gs
xor
lfs
xor
into
fcoml
push
stos
lds
xor
xchg
mov
or
lcall
jne
cld
sbb
cmp
loop
inc
xor
push
cmp
repnz
sub
scas
je
sub
xchg
test
push
jg
aas
xor
mov
push
jge
adc
inc
jmp
cmp
xchg
scas
add
js
shrb
popa
pop
out
mov
push
jb
ja
lret
push
insl
dec
jmp
les
popf
scas
dec
sti
adc
push
jge
sub
or
cs
cmp
pop
negb
or
jle
das
inc
lods
sub
fs
push
outsb
push
jp
clc
jp
stos
lds
or
out
lahf
test
aam
ss
test
roll
imul
xor
lds
stos
mov
inc
fs
mull
test
push
push
rorb
enter
pop
mov
jnp
add
leave
pop
xchg
test
sbb
sub
xor
and
sub
icebp
es
mov
jmp
enter
mov
push
stos
mov
dec
popa
and
insl
into
sbb
aam
jns
rclb
aam
shll
sarb
push
xorb
mov
jge
pmulhw
lds
sahf
int3
sub
push
cld
shlb
pusha
mov
mov
cltd
stos
or
cmpsl
pop
mov
rcrl
sbb
out
dec
adc
cmpsl
dec
add
test
mov
inc
mov
stos
inc
in
mov
dec
mov
push
jmp
in
popa
sub
rcr
inc
mov
mov
mov
sar
pop
mov
bnd
ret
jae
js
jle
dec
orps
in
inc
jo
js
movsl
jbe
add
cmp
fdivr
cs
add
lds
fimull
fisubl
push
rcll
fld
xor
mov
inc
out
xor
jp
cmp
pop
das
ficomps
sub
outsb
jmp
jecxz
cmp
sub
pop
jp
iret
fpatan
xlat
xor
push
aas
mov
push
xchg
divb
fsubrs
xlat
dec
or
pusha
es
cmc
fmull
jae
insb
int
or
lods
pop
flds
ret
add
or
cs
or
mov
xchg
icebp
nop
mov
sti
lods
pushf
jmp
lret
mov
es
popf
leave
xchg
js
and
cmc
pop
int
aam
push
pop
push
es
xor
ljmp
and
xor
out
dec
ret
jmp
scas
int
pop
fimull
mov
jnp
les
clc
mov
test
mov
cmp
in
into
aas
or
dec
pop
addl
scas
pop
jl
stos
lea
mov
in
push
ss
mov
mov
mulb
push
dec
adc
sbb
stos
insl
push
adc
outsb
pop
repz
lds
outsl
hlt
mov
jo
and
loop
jo
sub
mov
es
into
jp
mov
jg
and
bnd
insl
or
sbb
popf
adc
pop
cltd
cmp
scas
clc
mov
in
adc
rcrl
dec
cmp
or
adc
inc
daa
js
insb
pop
push
arpl
pop
fbld
lret
stos
cmc
mov
mov
cs
xorl
test
xor
dec
fdivs
popa
add
sbb
cs
push
test
shll
sahf
sbb
into
data16
fistl
out
jle
inc
mul
mov
imul
div
sahf
lret
or
dec
repz
cmp
lret
jnp
xor
addr16
mov
mov
sahf
loopne
fldt
daa
ficoml
push
aaa
hlt
or
mov
jne
sub
in
andb
test
sahf
push
test
cli
in
lods
mov
fdivrs
jno
push
icebp
or
insl
aam
cmc
jno
das
or
jg
jl
xchg
sbb
repnz
in
int3
sbb
mov
jb
pop
arpl
lcall
mov
sbb
xchg
jns
in
xchg
clc
push
cmp
je
jecxz
testb
adc
xlat
xchg
in
mov
xchg
sbb
js
and
lea
gs
dec
fdiv
sbb
jno
sbb
mov
dec
hlt
movsl
std
xchg
add
into
jle
sbb
and
je,pn
dec
adc
sub
dec
inc
movsl
sub
or
iret
xor
inc
jno
jno
sub
fiaddl
or
pop
hlt
ss
jmp
loope
pop
xchg
mov
outsb
stc
inc
test
mov
pop
dec
xor
lods
cmp
sbb
inc
xlat
dec
xlat
int
stos
shrl
rolb
mov
ret
in
loop
inc
push
jge
dec
inc
popf
sub
dec
push
dec
leave
adc
popa
inc
inc
push
jg
xor
mov
popf
mov
ss
lods
push
movsb
dec
int3
xchg
jnp
loopne
push
jae
or
and
xor
adc
ss
push
adc
jge
ret
xorl
int
fsubrl
jno
xchg
movsl
add
or
or
or
mov
rclb
leave
popa
decl
dec
cs
shrb
insl
shlb
jmp
bound
in
mov
mov
pushf
insb
popa
lods
xchg
cli
icebp
lahf
cmp
insl
loopne
mov
mov
inc
je
sbb
push
xor
xor
bound
sub
call
push
or
mov
push
loop
pop
test
cmp
hlt
or
mov
leave
outsb
and
jo
daa
mov
xchg
push
lods
aaa
popa
fadds
imul
lods
bound
arpl
int3
jecxz
cmpsl
mov
insb
sub
jns
or
lcall
push
imul
test
or
xor
pop
in
idivb
ljmp
push
cmp
je
sarl
cmc
cwtl
negl
fdivl
pusha
xor
mov
pop
push
sub
cmp
inc
sub
movsb
xchg
jp
sub
xchg
or
loop
or
mov
std
rcl
in
jne
jb
outsb
ja
jbe
addr16
ds
sarb
pop
or
in
xor
pop
xor
loopne
call
frstor
sbb
push
shrb
mov
and
push
sbb
or
ucomiss
jge
cmp
dec
aam
jno
gs
lods
cmp
sub
lret
push
fstpl
xchg
cmp
pop
stos
in
popa
jg
jmp
adc
and
pop
jp
or
jl
mov
sub
jmp
js
sub
lea
cmc
xor
mov
ror
push
ljmp
call
cmp
cmp
pop
mov
je
push
shlb
adc
adc
mov
clc
dec
sub
cmp
sub
subb
sbb
xor
loop
add
mov
and
mov
mov
sub
loope
popa
mov
in
adc
fnstsw
adc
or
lods
xor
mov
or
sub
ljmp
xor
je
pop
sub
cmp
ljmp
dec
xor
xchg
pop
dec
bound
inc
enter
jbe
adc
cmc
pop
rolb
mov
cmp
insl
pop
in
arpl
cmpsl
cmp
test
and
mov
lcall
push
cmp
cmpsl
and
jmp
cmpsb
mov
sub
bound
sti
push
movsb
loope
sbb
jo
stc
shrb
lcall
jge
and
dec
sub
popa
lea
mov
xor
mov
out
out
pop
or
pop
mov
int
mov
insl
or
jae
call
dec
stos
lcall
idivb
aad
push
fdivs
xchg
lods
lods
insl
inc
sbb
mov
push
in
fcmovbe
sbb
push
lods
movsb
insl
adc
sub
pop
orl
bound
inc
loop
mov
or
add
dec
inc
pop
xor
je
xor
loop
insl
rcl
and
rcrb
into
movsb
dec
es
ret
rcrl
adc
add
and
lea
dec
stc
arpl
lods
es
push
add
insl
movsl
data16
in
jge
jge
cmp
aaa
jmp
or
dec
dec
cmp
call
movsb
xchg
add
movsl
lods
enter
mov
cmp
test
popa
cld
dec
test
add
add
or
sub
dec
add
outsb
jle
jmp
in
ja
pop
lea
push
and
std
rcrb
mov
into
ss
test
aad
push
or
mov
or
in
in
add
lods
cmpsl
out
lods
addb
and
into
pop
lods
lahf
inc
gs
lods
lea
les
pop
int
ret
in
and
jge
mov
fmul
mov
mov
jns
test
arpl
in
lods
shlb
push
mov
test
out
in
pop
add
out
xor
add
mov
or
je
sub
or
mov
mov
dec
push
mov
mov
dec
out
sub
out
mov
pop
call
lea
insl
jecxz
jnp
cmpsl
or
sub
addr16
pop
push
mov
jecxz
insb
stos
and
mov
mov
add
xchg
jne
jne
or
clc
xor
mov
add
jg
mov
cmp
or
pop
xchg
mov
jne
inc
ret
outsb
sbb
scas
daa
push
and
mov
bound
loopne
dec
mov
iret
xor
adc
sub
mov
xchg
jns
mov
call
andl
dec
sub
lock
arpl
inc
jns
adc
adc
and
sub
mov
fstps
xchg
sub
jp
jb
mov
leave
ljmp
push
js
mov
test
pusha
push
aaa
sbb
imulb
lods
add
mov
inc
xchg
stos
je
cmp
mov
lcall
cmp
ja
gs
cs
or
stos
out
push
cs
insl
loope
push
mov
out
or
bound
push
clc
aaa
dec
jl
xor
inc
lcall
shll
xor
and
cmp
cltd
pop
xor
pop
repnz
aaa
imulb
imul
and
fsubrs
jge
divl
and
out
sbb
outsb
leave
imul
out
in
popa
jg
outsb
xorl
xor
mov
sar
sub
sub
subb
les
adc
sahf
outsb
nop
mov
sti
add
and
mov
jl
scas
bound
cmp
and
into
jg
jge
stos
mov
sub
js,pn
out
sub
mov
outsb
mov
sub
push
jge
addr16
gs
sub
enter
jge
outsl
popf
int
lret
popa
aas
lcall
adc
xor
rcrb
and
mov
mov
es
fwait
sub
inc
dec
dec
rcl
push
xor
aas
xor
and
xchg
mov
cs
test
adc
lods
imul
cmp
ds
test
sbb
sbb
inc
leave
loope
loopne
sbb
dec
insb
dec
push
sbb
shll
mov
lcall
xor
jns
inc
sub
outsb
inc
shll
jg
std
cmpsl
scas
cmp
ljmp
or
and
stos
mov
ljmp
test
fcompl
in
in
mov
dec
fwait
push
jb
pop
jle
cmp
mov
xchg
int3
cmp
aad
or
lahf
sub
pop
inc
movd
xchg
lret
fidivl
fidivl
imull
fildll
adc
xor
gs
sbb
lahf
or
pop
subl
in
sub
mov
fbld
sub
mov
rcr
inc
xchg
fiaddl
cli
and
insl
lods
and
lcall
enter
cmp
xchg
or
test
dec
bound
sarl
cmpsl
test
mov
xchg
shl
ss
mov
dec
push
insl
mov
xchg
leave
mov
daa
dec
mov
add
jae
mov
push
cwtl
sub
xlat
sub
lcall
xchg
mov
fldt
leave
jae
cs
pop
cmpsl
arpl
or
xlat
mov
dec
inc
movsb
mov
shlb
pop
push
push
pop
sahf
sub
xor
inc
jg
xlat
cmp
sub
cmp
into
or
and
dec
aad
in
jmp
push
lods
jg
or
out
adc
inc
adc
xor
cmp
xor
dec
bound
mov
sbb
push
scas
iret
addr16
fwait
test
jns
subl
push
and
adc
clc
fdivrs
adc
imul
ds
test
xchg
mov
out
and
sbb
lods
bswap
mov
mov
inc
int3
in
add
push
xchg
adc
sbb
imul
lea
pop
jno
cmp
pop
popa
clc
cmpsl
inc
mov
xlat
dec
xor
jno
hlt
inc
sbb
fdivrs
jmp
or
aad
ret
mov
mov
dec
jmp
insl
shlb
cs
sbb
aas
or
cli
xor
gs
xor
add
outsb
cltd
fildl
or
pop
push
jl
jbe
mov
jno
int3
jne
and
cs
lea
orb
ljmp
in
mov
mov
iret
xor
sub
insl
sub
int3
push
or
test
movsb
cltd
cmpsl
aad
jp
cli
jne
jg
repnz
loope
fistpl
clc
adc
jmp
jb
sbb
repnz
lahf
ret
loopne
scas
fimull
mov
lret
bound
leave
mov
jae
call
ljmp
pop
loop
addb
dec
cwtl
pushf
in
mov
dec
gs
sbb
xor
xchg
bound
or
xchg
fsub
sbb
cmp
push
push
std
lods
push
dec
add
dec
adc
adc
ljmp
imul
push
mov
bound
out
fstps
sbb
adc
pop
sub
orb
lds
lcall
imulb
dec
insb
sub
stos
xchg
out
stos
pop
cltd
arpl
loop
xchg
out
xchg
daa
pop
jns
mov
or
mov
add
arpl
int3
push
mov
fidivrs
sub
sbb
je
xchg
stos
popa
adc
or
dec
mov
sub
xorl
out
pop
sub
test
out
lcall
add
shlb
decl
sub
mov
daa
subl
and
cmp
repnz
inc
xchg
lds
or
aad
jno
mov
lods
insb
fists
pop
jmp
sub
jb
dec
xchg
ja
add
dec
jns
test
xor
lds
jecxz
in
sarb
and
jg
lea
out
aad
movsl
ret
add
mov
pop
out
std
mov
or
popa
fsqrt
pop
stos
out
pushf
fbstp
ret
jb
sbb
add
pop
into
movsl
mov
ja
addr16
mov
xchg
and
push
dec
jl
sub
xor
dec
mov
in
mov
jg
adc
mov
lock
xchg
lods
movsb
cltd
cmp
xor
aad
inc
int3
cwtl
daa
and
jl
push
shlb
jae
lods
and
mov
push
mov
cmp
leave
andb
mov
jmp
adc
mov
and
imul
je
repnz
xor
jb
test
jge
loop
cs
adc
js
pop
ljmp
mov
add
xchg
sbb
out
mov
shrb
sbb
nop
jge
cmp
daa
sub
dec
movsl
cltd
cmp
and
repnz
in
xor
dec
dec
fcompl
gs
sub
xorl
aad
inc
jne
insb
pop
sub
ja,pn
xchg
mov
and
lea
jnp
inc
add
cs
push
cmp
jns
mov
mov
cmp
dec
cli
xchg
fildl
adc
pop
mov
sbb
adc
add
jnp
pand
ret
cmp
rorl
inc
cmpsl
xor
mov
dec
mov
fmuls
outsb
add
jo
inc
bound
lcall
push
sbbb
sub
push
xchg
add
cmp
pusha
xor
sub
jge
hlt
inc
test
cwtl
ja
adc
into
jae
jge
pop
jl,pn
dec
pop
adc
or
mov
loopne
lods
cmp
and
or
stos
sbb
repnz
lcall
add
pop
jne
sub
xor
aam
std
shr
stos
sbb
adc
cmp
pop
fsubs
int3
aad
mov
clc
push
sbb
jmp
fistpl
cmp
fidivl
scas
dec
jne
repz
mov
hlt
and
out
sub
mov
push
sub
mov
scas
push
sbb
bound
shll
xchg
mov
lds
pop
scas
xor
push
pop
xchg
ret
mov
add
push
and
adc
fldl
push
arpl
add
xor
cs
bound
cmp
aaa
outsb
fs
test
dec
cmpsl
sub
into
jl
sub
adcl
xor
lock
imul
es
mov
jnp
cmp
sub
push
pop
les
sub
xchg
lock
sub
dec
in
cli
mov
jns
aam
cmpsl
jno
or
repnz
ja
inc
mov
scas
sbb
adc
insl
and
andl
insb
addr16
mov
cs
or
fldt
fs
ds
leave
jae
testb
gs
sub
mov
popa
or
add
imul
inc
jnp
mov
sarl
cmpsb
push
push
jge
sbb
test
lods
lods
test
lea
sub
sbb
fwait
adc
loopne
pop
xchg
pop
cmpsb
pushf
push
nop
icebp
adc
and
cs
pop
cmp
sahf
sub
xchg
xchg
popf
fst
sbb
in
mov
ficompl
sub
push
insb
pop
mov
pop
ret
subl
mov
push
mov
mov
pushf
sbb
pusha
lock
in
adc
outsb
es
or
sub
insl
push
push
pop
mov
mov
pop
roll
cmc
push
pop
dec
dec
jmp
rcr
jnp
cmc
push
ss
lahf
int3
sti
mov
scas
mov
loop
stc
xchg
fcmovnbe
xchg
paddsb
mov
mov
mov
pop
lods
pop
inc
and
xchg
dec
and
lods
fisttps
pop
or
add
sbb
pop
call
loop
mov
rcrb
xchg
out
rol
loop
stc
jne
bound
add
cmpsl
daa
pop
jne
push
sub
lods
repz
sub
int3
loop
jge
xor
and
movsl
imul
xchg
lcall
cmp
add
std
inc
xor
ljmp
in
in
fiaddl
out
xor
sahf
test
mov
add
cmp
and
jp
nop
imul
mov
xor
fistl
lods
jb
aad
outsb
push
jge
js
inc
outsl
push
shll
sbb
adc
adc
push
sbb
add
add
or
cwtl
jmp
outsl
sbb
and
pop
pop
imul
in
stos
sbb
imul
mov
lret
adc
dec
bound
jge
loop
push
and
dec
or
jmp
pop
sbb
mov
ds
xchg
push
dec
iret
gs
push
mov
int
ss
bound
repnz
mov
cli
or
or
scas
aas
add
in
push
rcr
and
cmp
mov
ljmp
mov
and
pop
jne
cli
in
insb
mov
addr16
cmp
mov
inc
or
mov
outsl
inc
aas
xlat
mov
dec
jp
fcoms
clc
bound
pop
lret
popa
xchg
pop
or
jp
and
in
pop
mov
xor
sbb
imul
int3
push
or
iret
leave
push
sarb
adc
adcl
xchg
inc
call
cltd
popa
sub
popa
xchg
push
xor
mov
daa
push
mov
mov
in
lods
cwtl
jecxz
push
bound
dec
leave
rorl
pop
outsl
cmp
lods
jecxz
mov
insl
ja
jmp
arpl
sub
mov
movsb
fbstp
push
xchg
sbb
pushf
jge
cmp
sub
ljmp
add
popf
push
test
inc
and
jnp
pop
scas
lcall
or
iret
or
and
push
cmpsl
mov
scas
and
sbb
xor
nop
cmpsl
mov
cmp
mov
xor
lods
mov
fwait
or
lcall
iret
sahf
ja
mov
test
roll
jae
stos
cmp
add
sbb
imul
push
aaa
xchg
or
cmp
pop
adc
fwait
mov
aas
inc
cmp
int
jecxz
sti
mov
add
loop
aas
jne
mov
push
add
subb
aas
xchg
pop
int
fimull
ret
or
ret
in
test
cli
repnz
jecxz
lds
mov
and
bound
loop
xchg
popf
fcomi
or
add
pusha
pop
cmc
bound
add
or
mull
cli
ss
outsl
dec
out
loopne
push
inc
pop
cli
addr16
or
jmp
ljmp
adcb
pop
and
cmp
bound
out
gs
push
lret
sti
shlb
sub
lea
xchg
xlat
sbb
add
sub
or
rorb
mov
xlat
push
push
xor
bound
pop
movsb
fcomp
insl
enter
ljmp
inc
xor
and
hlt
filds
inc
mov
das
out
mov
pop
ss
sub
mov
xchg
out
out
decl
pop
int
pop
js
adc
rcrl
dec
std
mov
mov
sbb
mov
mov
adc
enter
sbb
xchg
push
sti
incb
in
cmpsl
arpl
push
xor
into
and
mov
or
shlb
sub
mov
mov
sub
lret
or
andl
jno
mov
mov
pop
push
fistpl
or
lods
ret
ss
popf
push
mov
aad
popa
cmp
add
outsl
rol
jmp
xor
jae
mov
jns
cmp
xor
insl
dec
sub
inc
jne
jns
jp
ficoml
jg
xlat
or
add
mov
and
in
rep
in
cmp
or
ljmp
cmpb
andb
cli
dec
daa
lcall
call
dec
cmp
popf
add
clc
mov
sbb
xchg
pusha
jne
jns
push
pop
in
cs
jecxz
dec
adc
mov
and
push
rcll
shrl
andl
dec
out
add
dec
outsb
int
push
sbb
dec
clc
cltd
or
pop
cmp
add
jmp
mov
mov
fs
mov
int3
out
xor
popf
sub
sub
jo
test
gs
cmp
mov
sbb
notl
sub
xchg
xchg
cmp
mov
dec
dec
inc
daa
imul
lods
add
dec
inc
inc
fs
ds
cmp
push
cwtl
mov
lea
jo
or
jne
cs
sbb
xchg
testb
pop
out
dec
dec
jae
xchg
push
pop
inc
dec
insl
jns
dec
inc
push
mov
daa
add
mov
aas
mov
out
sbb
int
jp
fstps
jecxz
into
or
or
lcall
loope
push
js
xor
xorb
jge
push
bound
or
subb
dec
lret
popa
pop
mov
lea
xor
push
jle
push
pop
mov
xor
mov
sub
push
xchg
in
cmp
lods
xchg
sarb
jae
pop
sti
and
ljmp
sub
mov
ret
ljmp
fsub
adc
mov
adc
fldcw
sbb
out
fdivrs
shll
push
cmpsl
inc
fwait
sub
xor
leave
loop
ja
sbb
xchg
pop
jno
inc
adc
sub
mov
cmp
test
imul
in
sbb
fdivr
data16
addr16
push
add
nop
or
jbe
mov
and
fxch
jns
in
rcll
mov
jns
jne
outsl
or
lahf
sbb
mov
nop
xor
xchg
bound
xchg
pop
cmp
mov
cvtps2pd
and
jp
in
mov
movsl
xchg
inc
dec
lea
fbstp
std
or
pop
enter
insb
mov
adc
and
aad
rorb
repz
sbb
sbb
pop
out
lcall
rorl
cmc
sbb
jae
dec
pop
ficompl
scas
xchg
roll
subb
jne
dec
leave
or
lods
jno
lcall
cmpsb
aam
push
imul
add
in
mov
mov
lcall
xorb
xor
mov
pop
inc
dec
cmp
sub
mov
popf
cmp
inc
jno
std
shrb
cmpsl
scas
je
adc
and
ror
xor
xor
adc
mov
stc
imul
dec
outsb
mov
insl
mov
inc
fdivrl
repz
inc
push
sub
jno
lret
subb
pop
loopne
push
mov
rcrb
es
mov
lahf
stos
scas
mov
jmp
mov
inc
mov
hlt
or
dec
into
sub
jmp
je
leave
into
cmp
and
in
cmp
subl
mov
jge
fcmovnbe
gs
sub
push
incb
in
lea
pop
or
dec
jecxz
push
and
fs
sbb
mov
adc
imull
in
mov
or
mov
sub
std
imul
push
jne
jno
or
test
test
cmpb
mov
jo
mov
push
mov
mov
sub
add
dec
rcrb
lods
mov
push
push
add
mov
daa
sbb
gs
push
sahf
sbb
dec
call
xchg
fucomi
mov
mov
cmp
jmp
sti
out
push
das
into
cmp
fcmovne
push
lods
or
loop
popf
idivl
clc
dec
sub
aas
adc
test
mov
sbb
test
into
adc
out
loopne
add
lods
shll
stc
xchg
xchg
push
mov
mov
sub
adc
cmp
mov
and
data16
or
cs
icebp
cmp
sbbb
inc
mov
movsb
and
adc
call
jno
stos
sub
cmpsl
cmp
lret
cmp
sub
dec
out
loope
inc
and
fwait
popa
cmp
arpl
inc
dec
daa
cmp
test
inc
adc
mov
fs
loope
enter
inc
aam
or
cmc
cmp
or
sbb
sub
lret
pop
in
ret
or
fcmovbe
mov
mov
mov
adc
loop,pn
sbb
ljmp
arpl
or
mov
insl
data16
ds
mov
mov
repnz
adc
rcll
cmp
or
subb
add
ret
andb
cmp
notb
divl
test
cmp
or
cs
and
mov
pop
pop
sub
enter
mov
xor
mov
ret
enter
push
arpl
ror
sbb
lea
test
sub
stos
and
sub
lret
fucom
sub
into
adc
mov
cmp
fstpt
repnz
jnp
and
sbb
addr16
xor
adc
adc
mov
add
sub
arpl
repnz
daa
pop
ret
push
adc
stos
sub
lods
push
mov
fcmove
hlt
int
mov
cltd
add
pop
cs
mov
lods
cmpps
sti
xor
sub
jae
in
and
jecxz
imul
mov
dec
out
lret
xor
or
mov
mov
pop
push
scas
sub
stos
dec
sti
inc
and
xchg
leave
loop
pop
imull
fwait
outsb
mov
ljmp
fidivrs
cmp
dec
lret
test
and
ret
fstp
or
dec
xchg
pusha
leave
lret
ret
imul
mov
ljmp
sub
pop
movsb
rcrb
pusha
aaa
shrb
out
xchg
push
jmp
insb
fs
mov
mov
sub
in
repz
pop
popa
shrl
cmp
daa
jns
or
cmp
and
adc
dec
sub
xchg
cmpsb
mov
outsl
and
mov
hlt
pop
repnz
mov
int3
push
jno
dec
test
sbb
jp
add
xor
jno
shll
movsb
lret
push
push
inc
cmpsl
scas
lcall
leave
inc
and
jno
ss
lret
ffree
inc
sub
jbe
jne
repz
movsb
pop
pop
testl
sub
pop
lea
pop
int
fwait
sbb
jmp
leave
bound
ss
test
xchg
pop
or
mov
xor
adc
mov
pop
adc
cs
repnz
stc
out
clc
int
xor
lret
scas
das
gs
in
leave
fisttps
mov
push
xor
fs
inc
jmp
mov
or
iret
in
jbe
jmp
outsb
lds
dec
push
das
lahf
nop
leave
test
xchg
adc
scas
in
cmpsl
outsb
xchg
es
out
adc
pop
and
xchg
mov
arpl
sbb
jnp
mov
scas
mov
lock
add
mov
xchg
call
lods
popa
dec
push
les
sbb
and
loope
movsl
repz
shrb
stos
mov
imulb
or
out
popf
adc
mov
hlt
decb
or
cltd
jg
loope
mov
out
cmp
out
pop
fadd
sbb
dec
rorl
mov
scas
decl
shlb
mov
xchg
in
pop
add
add
jmp
mov
lods
cmp
pop
xor
cmc
sarl
stos
xor
sub
outsb
pushf
cmp
jmp
daa
test
mov
mov
cmp
xchg
inc
sub
test
cmp
inc
or
incl
and
ds
cmpsl
imul
jno
in
mov
popa
in
hlt
stos
movsb
push
fyl2x
jno
dec
jns
mov
or
hlt
jmp
arpl
mov
pop
pop
xor
gs
bound
sub
scas
ret
gs
pop
dec
test
or
cmp
xlat
push
in
lods
rcrl
outsb
xor
loopne
jo
dec
mov
or
jg
add
or
pusha
nop
pop
mov
push
fldcw
mov
ljmp
jno
stos
test
ret
int3
jl
js
dec
test
pop
mov
ret
xchg
jne
mov
push
arpl
shl
ljmp
or
push
data16
mov
lret
dec
fistpl
dec
xchg
mov
and
cltd
cwtl
outsb
cmpsl
jle
cmpsl
and
cs
pop
sub
jbe
cmp
outsb
or
test
divl
inc
bound
mov
cs
sub
rcll
outsb
in
shrb
addr16
sbb
pop
mov
inc
mov
dec
mull
loopne
lea
popf
mov
divb
and
insl
mov
enter
bound
test
mov
sub
insl
cmp
mov
out
sub
fcomip
jecxz
xchg
in
lret
shll
push
adc
fdivr
imul
or
out
mov
outsb
add
fwait
imul
or
cmp
lods
fisubs
dec
lods
movsl
cs
jmp
mov
leave
pop
push
fucomi
das
push
call
inc
adc
pop
sub
push
or
shl
jne
hlt
leave
test
aas
iret
out
mov
movsl
jge
dec
push
clc
push
and
or
inc
add
dec
lret
rcrb
leave
das
test
imul
inc
popa
leave
mov
mov
push
sub
sbb
sbb
mov
cmp
push
shlb
mov
outsb
pushl
lcall
dec
xor
inc
lcall
int
push
cltd
btcl
repnz
lea
push
mov
adc
xor
faddp
xor
pop
or
inc
adc
mov
sbb
mov
or
adc
les
test
xor
sahf
xchg
mov
or
push
lret
and
jns
repz
mov
cmp
cmp
icebp
dec
xor
pop
jbe
mov
or
jne
cmpl
cmp
mov
sbb
push
pop
dec
in
pop
xlat
jno
jne
xorl
pop
add
aaa
or
and
jmp
xchg
mov
cmp
mov
sub
sbb
jns
mov
xor
lahf
sbbb
idivb
or
les
in
movsb
or
cs
bound
xchg
cmp
pop
mov
rolb
cli
inc
sub
sbb
gs
rorl
add
mov
push
in
mov
cmp
lahf
sub
mov
add
or
in
fisttpll
rcrl
inc
out
sbb
lods
inc
in
cmp
aaa
mov
add
test
jge
lock
fs
adc
mov
test
jmp
dec
in
arpl
push
lea
mov
int3
addr16
addb
xchg
divb
outsb
jno
jmp
leave
fists
dec
mov
outsb
insl
shlb
or
dec
xchg
stos
decl
inc
jns
xor
sbb
fstl
xchg
cmp
or
xor
loopne
cs
ljmp
or
shrb
shrl
cltd
add
adc
or
xchg
mov
inc
push
adc
xor
inc
test
pusha
or
add
add
lea
or
int
sub
push
int3
outsb
sbb
mov
scas
imul
outsb
gs
cs
lret
xor
push
js
mov
pop
xchg
push
outsl
jne
outsb
mov
clc
cmc
decb
stos
in
pop
mov
push
dec
push
test
ja
imul
loopne
xchg
push
adc
mov
imull
pop
or
dec
cmp
or
jle
int
pop
push
ret
xor
mov
jne
xor
movsl
cmp
dec
push
scas
fldcw
test
sub
popf
xchg
dec
insb
inc
mov
arpl
pop
test
stos
add
subl
and
lea
pop
mov
cmp
mov
ret
xor
stos
inc
or
insl
inc
ja
add
mov
sub
xchg
rclb
sub
fsts
pop
jg
mov
bound
ret
pop
dec
push
jge
jl
insl
test
push
aas
out
daa
mov
dec
outsl
ljmp
shr
test
add
or
insl
add
push
shl
roll
test
imul
shll
arpl
lea
push
fisttps
lcall
in
pop
sbb
mov
sub
scas
cmpsl
or
lahf
sub
outsb
aaa
xor
jnp
cmp
xchg
add
xor
dec
clc
lcall
addr16
rol
add
add
repnz
xor
leave
add
test
and
bound
lds
shll
xchg
xchg
mov
jmp
mov
je
and
pop
mov
inc
jne
sub
pop
push
push
out
push
in
and
aaa
mov
ss
jl
out
push
mov
jno,pt
repz
clc
jmp
sub
outsb
mov
test
gs
mov
cmp
in
xchg
rorl
lret
mov
ss
popf
jne
dec
inc
mov
cmc
push
insl
pop
rorl
xchg
and
push
push
and
fcompl
sub
popa
sarl
shrb
cwtl
jge
test
mov
and
mov
or
xor
mov
pop
or
insb
mov
out
shlb
push
addb
adc
loope
imul
cmc
cmc
aam
sub
cs
xor
out
cmp
dec
fldl
lcall
out
stos
sub
push
push
xchg
mov
adc
gs
mov
inc
testl
repnz
push
sub
cli
mov
imul
loope
das
testl
cwtl
or
fldt
mov
cmpsl
and
xor
jp
mov
mov
cli
mov
insl
add
jge
cltd
pop
push
mov
outsl
lods
cmp
mov
inc
scas
jns
xchg
and
mov
cli
iret
ja
or
mov
dec
outsb
sbb
jecxz
pop
and
jmp
sbb
scas
daa
xor
cmp
inc
inc
mov
insb
pusha
mov
sub
push
jg
inc
stc
fisubl
fdivs
subb
jns
fnstenv
aaa
mov
or
test
scas
pop
xchg
xchg
xor
and
mov
sbb
cli
mov
bound
outsb
in
mov
nop
add
ret
out
push
mov
mov
xchg
sarl
aad
cmpsl
cmp
in
scas
push
out
cmp
sbb
pop
lock
xchg
adc
in
xchg
popf
mov
cmp
dec
push
push
out
jb
cs
lods
pop
xor
insb
sbb
mov
sbb
sbb
shll
dec
cwtl
arpl
rcrl
sbb
cmp
lods
mov
mov
and
in
dec
lea
and
mov
pop
xor
adc
stos
loop
cmp
and
je
sub
mov
cs
mov
insl
and
call
or
imul
loop
mov
push
jo
and
aam
sub
ja
jmp
pop
sub
adc
orb
mov
xor
mov
pop
xor
inc
xlat
jne
pop
stos
adc
xchg
mov
insb
cld
or
fisttpl
mov
leave
pop
dec
pusha
fstps
sub
cmpsl
outsb
daa
inc
test
cmp
lcall
int
adc
pop
out
decb
bound
shrl
and
push
dec
in
mov
cltd
dec
push
xchg
mov
mov
lods
ret
cmp
fistpll
lods
jno
jmp
and
std
dec
jne
mov
pop
iret
int
insb
jge
std
adc
insl
cld
les
gs
adc
popa
mov
pop
sarl
loope
cmpsl
ss
xchg
sub
xor
lock
sub
es
out
adc
push
arpl
add
push
dec
fdivr
jne
mov
pop
cmp
scas
xorl
subb
enter
pop
sbb
and
push
add
add
addr16
xchg
sbb
imul
push
into
dec
nop
mov
sbb
idivb
cmpsb
call
push
cld
popa
inc
inc
popa
inc
xchg
repz
jecxz
shr
sbb
mov
imul
lahf
cmpl
push
inc
add
nop
push
inc
cmp
pop
fdivrs
outsb
lcall
jl
dec
ljmp
or
sbb
mov
aas
stc
push
jne
sub
sub
in
mov
or
ret
push
stos
scas
int3
or
js
push
mov
cmp
mov
mov
in
jns
push
jp
lds
push
dec
push
jno
push
mov
or
int
xchg
scas
loope
out
mov
out
jne
stos
inc
add
sbb
mov
cmp
aam
sbb
jmp
call
outsl
pop
aaa
add
subl
lea
inc
popa
cmp
in
cmp
outsl
and
mov
loopne
cmp
into
lahf
inc
mov
pop
pushf
and
scas
lods
cs
mov
mov
dec
sub
jne
sbb
mov
loope
gs
push
outsl
pop
jl
dec
call
fdivs
dec
dec
imul
insl
popa
mov
lea
aaa
and
or
out
mov
inc
inc
mov
and
pusha
cmp
mov
lahf
inc
pop
mov
mov
adc
xchg
mov
mov
add
js
shr
cmpsl
inc
sbb
sbb
mov
xchg
xor
or
mov
repz
or
insb
push
cli
arpl
popf
push
std
add
add
pop
dec
cmpsl
push
mov
pop
push
and
sarl
leave
mov
test
dec
stos
aaa
mov
fwait
xchg
xchg
call
add
rcr
inc
jl
into
lods
or
mov
mov
cmp
mov
sub
or
sub
leave
lock
xchg
cmp
cmp
or
dec
xor
or
push
add
jne
adc
popa
push
xchg
popa
roll
cmp
insl
and
cmpsb
or
loopne
mov
cmp
aam
shll
sbbb
fadds
and
pusha
pushl
in
mov
imul
cmp
xchg
hlt
xchg
or
xorl
gs
xchg
cmp
xchg
arpl
int3
xchg
jnp
mov
test
add
test
dec
sub
loop
or
loop
push
jge
gs
imul
inc
adc
cmp
jl
or
ss
inc
and
mov
je
addr16
xchg
es
mov
jp
nop
int
fisttpl
in
shrb
jno
daa
movsb
test
mov
add
and
pop
dec
xchg
or
subb
and
lea
jo
and
push
xor
sbb
divl
pushf
fldt
sbb
mov
sub
xchg
push
add
inc
icebp
out
test
faddl
decb
push
add
mov
out
lea
sti
and
fs
dec
push
cmpsb
sub
mov
or
xchg
int
jge
hlt
adc
loop
pop
loop
sbb
clc
jge
adc
lods
sub
push
ss
loope
clc
inc
xor
stos
inc
sti
adc
jmp
popa
outsl
lahf
in
lret
adc
pop
ds
mov
push
ss
idivb
push
or
pushf
push
mov
cmp
jge
mov
xor
pop
lods
fbld
cmp
push
pop
xor
dec
pop
xorb
push
inc
add
js
adc
sub
sbb
popf
lret
or
jle
pop
bound
sub
pushf
popa
dec
pusha
mov
insl
push
mov
enter
mov
ds
mov
in
adc
or
or
and
mov
adc
call
bound
add
add
mul
sub
xchg
sbb
adc
and
mov
pop
inc
dec
and
int3
mov
mov
mov
add
aad
mov
jne
sub
xchg
out
insl
jl
xchg
or
mov
fistpll
daa
push
sub
sarl
popa
or
nop
add
clc
or
test
out
jno
mov
pop
dec
loopne
into
lea
ja
push
pusha
mov
stc
test
push
pop
test
dec
cmp
inc
dec
mov
fucomp
add
cmp
and
jne
sbb
es
mov
cmp
mov
xor
sub
mov
bound
cmp
popf
jp
sub
rorl
aad
out
mov
test
add
xchg
mov
shlb
xor
imul
ficomps
cmp
imul
lahf
adc
jecxz
movsb
insb
xchg
shrl
cmp
scas
push
mov
fdivr
rcr
in
imull
inc
sarb
xor
pushf
cmp
es
jo
push
flds
bound
sbb
lods
mov
mov
lahf
cmpsl
hlt
in
adc
shll
sbb
jne
imul
stos
push
xchg
cmp
subl
or
and
push
int
and
in
setne
jne
mov
lods
dec
bound
mov
xor
cmpsl
fdivrl
sub
push
jl
gs
js
pop
bound
into
mov
outsl
lock
bound
es
and
mov
jne
inc
sbb
sub
ja
mov
pop
sbb
loope
cmp
add
mov
pusha
outsb
cmp
bound
inc
inc
or
push
gs
fdivs
push
and
jmp
adc
outsb
cli
cmp
jae
push
in
or
sub
adc
adc
daa
xor
in
dec
cmp
dec
and
cmp
inc
mov
dec
cmp
xlat
lret
mov
sub
sub
xchg
arpl
mov
adc
repz
push
outsb
shl
add
push
mov
daa
mov
jno
shlb
mov
inc
and
xor
pop
push
sub
sbb
addl
addr16
add
int
int
cmp
sahf
sub
rcll
mov
lret
js
das
icebp
adc
stos
insb
dec
jecxz
pop
popa
dec
pop
pop
pushf
inc
ljmp
bound
add
lods
fsincos
or
sub
dec
lcall
xchg
and
jae
popf
add
jge
cmp
daa
cmp
push
xor
mov
call
pop
in
mov
mov
popa
stos
push
sbb
or
mov
fnsave
in
adc
fnstcw
xor
adcl
add
mov
btr
call
int
pop
cmp
jne,pn
push
out
lea
fisubs
mov
in
fisttps
aas
lahf
cmp
mov
test
lret
dec
jbe
jnp
fsubs
insb
hlt
jns
adc
add
mov
and
xor
mov
push
iret
cmp
sarl
push
daa
sub
fucom
test
cmp
sub
mov
mov
gs
pop
and
movsl
insb
scas
lahf
stc
inc
jg
xor
pop
hlt
sbb
jno
sub
jne
xor
mov
add
adc
inc
out
mov
mov
mov
or
jl
lods
lods
pop
dec
in
xor
js
xchg
add
cmp
fiadds
push
and
cwtl
insb
ds
lock
mov
lods
mov
sub
mov
imul
pushl
mov
inc
popa
lea
push
mov
push
xor
arpl
inc
cmp
sbb
cmc
push
rcl
push
icebp
adc
outsb
pop
mov
mov
push
mov
sbb
call
mov
lods
cmp
jle
pop
mov
movsl
clc
fildll
cmp
add
and
out
fidivs
sub
sbb
addr16
out
outsl
hlt
and
aad
mov
in
xchg
daa
sbb
out
sub
arpl
shr
or
aad
jne
andl
push
stc
into
fcmovnu
arpl
dec
or
inc
scas
sub
mov
xchg
add
loop
sub
faddl
popf
shl
and
jg
cs
outsl
sbb
sbb
test
cmpsl
les
mov
jge
add
pusha
popf
and
pop
lcall
or
sbb
mov
mov
sbb
mov
shrb
sbb
bound
pushf
push
pop
or
or
or
mov
rcrl
adc
cs
inc
dec
jecxz
xchg
pop
push
ja
nop
je
sahf
mov
dec
cmp
orl
cmp
sub
outsb
mov
dec
inc
ja
xchg
jl
mov
decl
cmp
fildl
std
fbstp
and
jno
mov
adc
sbb
push
xchg
pop
mov
cld
push
fstl
push
fwait
inc
popf
mov
setae
jae
lret
rclb
sub
negl
mov
sbbb
cmp
adc
inc
sbb
mov
mov
sbb
ss
push
pop
sub
negb
stc
pop
inc
int
pop
add
dec
mov
jns
jno
enter
ja
out
push
cmp
in
iret
dec
and
rclb
cmp
ret
mov
cmp
jge
push
xor
daa
dec
ja
and
adc
push
push
mov
cltd
push
std
bound
inc
sub
push
sbb
adc
pop
jecxz
cmp
insl
push
das
dec
int3
aaa
popf
push
cmc
or
inc
cmpsb
sub
sub
lahf
xor
sub
shrl
sub
icebp
jbe
call
in
push
pop
aad
push
movsl
push
push
bound
test
pushf
jne
inc
stos
cmp
fiaddl
adc
jmp
inc
lahf
and
dec
pop
cwtl
decb
out
adc
lcall
jno
or
scas
clc
arpl
lret
adc
mov
mov
arpl
push
and
sbb
push
cmpsl
cmpsb
adc
xlat
stos
loop
xchg
mov
pop
jg
inc
lret
jne
das
or
outsb
daa
add
insl
add
and
cmpsl
scas
scas
ds
ds
lods
and
xor
add
and
testl
sbb
or
dec
in
gs
xchg
lahf
cli
mov
fs
jne
jg
mov
cwtl
out
mov
cli
sub
mov
cwtl
pop
jne
fs
push
js
cld
jmp
adc
push
or
leave
jle
adc
arpl
xchg
addr16
push
stos
push
cmp
or
sub
movsb
ret
xchg
push
fcoms
xchg
mov
mov
xor
gs
mov
push
dec
pusha
jle
popa
pop
ficompl
je
sbb
lea
dec
cmc
test
add
jne
xchg
xchg
idiv
lods
pop
mov
mov
push
mov
jle
pushf
sub
sahf
mov
push
shlb
clc
in
lret
into
inc
sti
loop
pop
push
cmp
out
or
cmpsb
cmpsl
mov
jmp
mov
into
xchg
leave
or
inc
mov
jae
gs
dec
sub
sub
inc
adc
xchg
mov
leave
mov
lods
cs
bound
mov
mov
xchg
and
inc
popf
hlt
and
cmc
add
stos
xchg
lahf
sbb
je
dec
pop
subl
xchg
push
insl
push
push
mov
mov
int
mov
mov
mov
add
or
push
lods
adc
add
add
call
jne
sbb
lock
or
aaa
jecxz
push
mov
mov
xchg
mov
pop
dec
fidivrs
pusha
mov
mov
lods
mov
sub
push
push
sbb
test
and
lock
mov
test
lea
ja
add
repnz
cmpsl
add
fdivrl
jb
push
xor
shrl
pop
aaa
pop
leave
bound
push
fwait
dec
xor
cmp
daa
std
push
test
ja
popl
imul
and
inc
mov
cmp
mov
lods
lods
out
adc
xlat
lods
mov
add
sub
outsb
test
movsb
sbb
hlt
insb
cmp
sub
sub
sub
adc
xchg
sub
sbb
add
ss
jno
inc
and
push
sbb
and
outsb
mov
cs
dec
jns
jae
push
push
mov
cmp
lods
mov
pop
adc
push
push
inc
jo
jg
and
scas
fwait
push
xor
push
or
and
sub
out
sbb
sub
jne
movsl
cwtl
lahf
adc
test
push
xchg
inc
ss
test
or
shl
jl
mov
scas
movl
iret
popa
imul
data16
popf
push
test
xor
xchg
movsb
clc
pop
sub
push
clc
js
adc
mov
je
cli
add
mov
test
or
sarb
mov
cmpsl
imul
shr
inc
rcr
push
jmp
movsl
mov
add
idivb
and
call
in
pop
mov
jmp
test
xlat
mov
mov
mov
fldcw
adc
fdivp
int
aaa
scas
pop
or
and
dec
imul
test
bound
cli
fcoml
adc
push
mov
or
xlat
pop
imul
fcoml
int3
fdivrs
xchg
addr16
adc
cmpsl
popa
push
sub
xchg
xchg
mov
sub
pop
aam
add
jae
lahf
cld
cltd
push
hlt
pop
loope
and
jbe
and
loopne
xor
test
imul
push
push
push
xchg
mov
sub
and
jl
fadds
jne
sbb
inc
dec
stos
adc
lret
lea
mov
mov
xlat
jae
mov
fwait
mov
push
or
ds
shrb
and
cmpsl
pop
insl
cs
and
push
jne
cld
fldl
mov
stc
mov
loope
or
push
mov
jns
jne
xchg
dec
push
push
inc
add
sub
sahf
and
outsb
xorl
fcomi
loope
dec
sub
lret
push
push
ret
mov
mov
mov
mov
pop
adc
jbe
cmp
int3
mov
adc
pop
push
xchg
aaa
sbb
arpl
push
xchg
das
cli
mov
bound
sub
push
or
cwtl
loop
notb
in
int3
inc
or
inc
cmp
pop
add
int
stos
cmp
inc
cmp
lcall
out
loop
add
add
xchg
pusha
fistl
cs
xor
cmp
iret
inc
addr16
out
push
in
ds
mov
lods
mov
add
pop
arpl
jg
arpl
leave
mov
aas
fnstenv
or
mov
sti
or
lahf
or
sbb
lods
shrl
mov
xchg
mov
bound
sti
push
sti
mov
xchg
add
enter
mov
pop
add
stc
mov
fcompl
repz
out
add
das
inc
sbb
and
call
mov
scas
popa
xchg
lahf
xchg
flds
cld
call
inc
or
fnsave
xor
mov
xor
call
arpl
push
xor
jmp
stos
mov
gs
add
jge
xor
lahf
aam
cs
cmp
fidivs
adc
lock
imul
lods
push
jp
nop
adc
adc
push
fists
ja
ret
popf
pusha
adc
cwtl
loop
jecxz
push
mov
rorl
rclb
shll
push
dec
and
sbb
and
dec
lahf
add
clc
out
mov
inc
cmp
clc
pop
cmpsl
fmul
jmp
adc
mov
addr16
mov
daa
lds
sub
out
jbe
xor
outsb
sub
dec
push
fidivs
ds
out
xchg
xchg
popa
xchg
push
incl
bound
out
outsb
xor
ljmp
roll
out
or
mov
pop
jns
xor
cmpsl
xchg
fs
cs
and
adc
out
jecxz
sbb
movd
fsincos
push
cltd
mov
testl
xlat
in
sub
mov
mov
add
and
push
inc
jle
aaa
call
mov
stos
adc
int
xchg
aas
xchg
jp
or
push
or
and
ja
dec
inc
sub
outsl
push
or
inc
cmp
xchg
stc
rclb
jb
cmpsl
mov
add
negl
mov
lea
in
xchg
dec
mov
addr16
dec
es
bound
add
adcl
and
mov
add
aaa
jl
sub
xor
in
push
cmovae
xor
lahf
inc
ljmp
pop
pop
test
movsb
jle
rorl
cmpsl
jb
outsl
sub
addr16
cmp
cmp
cwtl
fists
dec
jo
addr16
push
inc
cmp
lahf
outsb
inc
cmpsb
subb
bound
cmp
pushf
sub
mov
xor
bound
mov
cmp
inc
fcomps
dec
or
or
mov
xchg
dec
inc
imul
mov
pushf
out
sub
outsb
cmp
jg
call
mov
dec
mov
mov
popa
rcrl
jecxz
jno
mov
popa
xchg
fisubrl
hlt
popf
in
test
mov
mov
rol
add
mov
dec
adc
outsb
movsl
cmp
sub
push
push
xchg
mov
lret
orb
ja
dec
jb
cmp
or
sub
xchg
add
inc
bound
jne
jnp
ss
in
push
shlb
dec
ljmp
push
scas
jmp
sub
adc
fsubr
mov
test
lods
cmp
push
test
lcall
int3
outsb
or
pop
dec
pop
mov
mov
mov
icebp
inc
cli
xorl
xchg
cmc
popa
pop
loop
aad
stc
add
mov
add
and
lds
mov
push
int
push
dec
rolb
cmpsl
jno
cmpsl
push
jg
dec
out
enter
mov
dec
adc
sarl
mov
mov
scas
dec
es
popa
cli
sbb
fidivrl
sub
add
mov
and
jmp
lds
cmp
mov
call
push
loope
or
cmp
or
leave
xor
dec
mov
bound
and
xlat
subb
add
jmp
fldcw
leave
js
out
jno
cwtl
lahf
loopne
mov
cltd
pusha
adc
bound
pusha
cmp
outsl
mov
bound
pop
daa
stos
dec
xor
sub
std
cwtl
in
daa
test
addr16
int
jns
popf
rcrl
jno
push
dec
scas
in
xchg
cmp
or
inc
inc
hlt
cmpsb
inc
lea
dec
shlb
leave
mov
lock
inc
mov
rolb
ds
test
das
mov
or
cmp
xchg
mov
mov
xchg
test
jg
mov
jmp
xor
daa
push
mov
mov
out
call
xor
and
mov
inc
xchg
mov
ret
mov
cmp
xchg
and
in
adcl
mov
in
inc
repz
xchg
pop
or
or
push
cmpsl
stos
lock
dec
push
nop
mov
lcallw
push
and
fwait
xchg
lds
or
sarl
repnz
leave
mov
leave
rolb
mov
enter
push
mov
je
fisubrs
repnz
iret
sarl
fildll
out
ja
test
test
xchg
cmp
or
mov
push
pop
fcom
sub
sti
incb
inc
pop
imul
andl
sub
inc
call
popa
shlb
mov
out
shll
dec
lcall
insl
and
mov
cmpsb
inc
sbb
lock
mov
mov
lock
xchg
and
jmp
pop
popa
into
mov
iret
or
xor
pop
cld
add
shlb
cs
scas
and
pop
cmp
xor
jb
cltd
add
rorl
insb
leave
outsb
sbb
fs
clc
fs
divb
test
ret
jnp
dec
iret
sub
fisttpl
test
lods
jb
dec
dec
stos
push
in
mov
fldt
mov
inc
loope
cmp
scas
bound
je
fisubl
test
jo
dec
dec
int
jg
decl
jecxz
jo
xlat
lcall
or
fidivrs
iret
cmpsl
cli
mov
lret
imul
cs
dec
mov
pop
push
adc
add
jne
cmp
or
test
test
pop
test
iret
pop
xor
push
dec
inc
cmp
mov
xchg
xor
shll
pop
jge
addr16
jns
test
imul
cmpsb
lods
outsl
sti
and
lods
xchg
cmc
xchg
fsubrs
jb
sahf
cwtl
in
pop
fcmovu
in
or
sub
outsb
jae
sbb
insb
test
fidivrl
bound
lock
fdivrl
push
push
sub
inc
and
sbb
stos
sub
sbb
shlb
or
mov
sub
lock
cmp
in
dec
fcos
pop
jno
xchg
pop
shlb
into
cmp
sub
or
mov
mov
push
dec
cmp
add
or
mov
cmpb
das
fcmovnb
aaa
cs
mov
xchg
fmul
dec
push
push
outsl
popa
mov
mov
mov
sbb
imul
fbld
ret
mov
mov
mov
ljmp
mov
in
jecxz
sbb
imul
scas
cmp
lahf
jg
aad
out
bound
aaa
and
dec
cmpsb
gs
andb
adc
or
mov
pop
pop
xchg
add
cmp
dec
jg
out
lods
xor
test
xchg
popa
jne
lahf
test
in
sti
push
jle
rcll
mov
push
fwait
sub
lret
leave
in
mov
and
cli
clc
inc
or
inc
push
mov
or
mov
test
cld
rorl
shl
popa
out
pop
stos
add
fbstp
xchg
outsl
movsl
decb
ljmp
mov
adc
stc
xchg
in
int
bound
push
sub
push
mov
dec
jb
popa
cmp
sub
pop
sahf
testl
sub
xor
jne
inc
insb
pop
push
fs
jae
in
xchg
cmp
ss
repz
ds
and
loop
in
mov
inc
sub
dec
cmp
sub
int
dec
scas
push
push
jmp
pop
fwait
out
sbb
dec
xor
pop
dec
or
jne
outsl
shrl
dec
loope
jne
adc
xlat
add
push
bound
and
mov
mov
jmp
xor
mov
sub
mov
mov
push
dec
mov
outsb
scas
repnz
add
sbb
daa
cmp
fwait
pop
ds
dec
and
in
rclb
leave
xchg
mov
sub
lret
pop
mov
or
addl
iret
jp
xchg
pop
popf
pop
bound
or
dec
inc
ja
add
out
imul
mov
xor
or
jo
cmp
sub
daa
out
sub
jg
shr
xchg
ljmp
inc
ss
push
add
pop
adc
xor
insl
rcrl
call
ja
xchg
pop
rcr
ret
je
std
and
movsl
add
jecxz
mov
pop
push
and
mov
lea
js
jb
std
rolb
push
fidivl
and
mov
icebp
or
gs
push
sar
cmp
outsw
sahf
das
pop
movsb
stos
sahf
mov
and
push
sub
sbb
pusha
shlb
push
outsb
lret
lret
push
sbb
cmpsl
mov
mull
mov
bound
cld
fwait
mov
out
jecxz
push
in
xchg
in
lock
cmp
or
orb
cmp
add
dec
add
mov
jno
cwtl
les
std
xchg
je
inc
out
into
xchg
popf
adc
pop
jmp
loope
std
ljmp
pop
add
mov
inc
insl
sub
cld
rcrl
mov
jne
iret
in
fimuls
lahf
cs
arpl
shlb
cltd
mov
cwtl
jbe
pop
mull
push
jmp
subb
and
mov
popa
test
dec
dec
shrl
mov
xchg
aad
xchg
shll
xlat
pop
fwait
loopne
inc
cmp
or
add
test
pushf
mov
aaa
cmp
rorl
cmp
mov
outsl
pop
xor
cmp
stos
pop
daa
inc
out
sbb
inc
shr
and
add
lock
outsl
in
add
dec
cmp
add
rclb
ret
mov
sar
cvttps2pi
cmp
ja
mov
pop
daa
dec
sub
outsb
nop
mov
pop
imul
push
xor
xlat
sbb
sbbb
xlat
fsubr
shlb
gs
pop
call
mov
lock
bound
stos
jne
pop
xchg
mov
mulb
cmp
popa
daa
dec
mov
dec
xchg
fldcw
push
test
inc
out
jl
add
loop
movsb
mov
jnp
leave
fistl
sti
test
cmp
cmp
mov
inc
leave
ljmp
dec
shll
ja
shlb
push
outsb
add
push
mov
bound
testl
imul
add
sub
jecxz
jns
and
xchg
sub
aas
or
cmpsb
jo
in
cmp
outsb
pop
gs
stc
andb
cmp
dec
bound
jg
sbb
dec
aaa
push
mov
inc
bound
mov
inc
and
rcrl
movsl
fstps
nop
add
sub
mov
subl
and
iret
movb
lods
pop
das
push
sbb
in
add
and
es
fsubl
push
adc
ljmp
ret
mov
loopne
adc
inc
mov
add
std
mov
push
ljmp
iret
and
mov
fucomp
loopne
subl
cmp
bnd
mov
mov
data16
cmp
cmpsb
divl
and
loopne
gs
icebp
push
add
arpl
jmp
ror
sbb
mov
in
pop
dec
mov
popa
push
das
xchg
mov
test
fcomp
lret
mov
add
sbb
inc
xlat
mov
sti
cmp
adc
iret
jns
sbb
addr16
cmpsl
shrb
push
ja
xor
dec
int
sub
leave
mov
and
jae
pop
js
mov
fdivr
cmpsl
insl
xchg
lods
mov
mov
jmp
rcrl
stos
dec
stc
bound
leave
cmp
xor
pop
cmp
addb
sbb
shll
xchg
push
push
je
ss
xchg
fs
ret
cmpsb
lahf
test
cli
mov
daa
pop
outsb
frstor
or
xor
clc
mov
cmpsl
push
fwait
mov
aaa
lds
imul
loopne
cltd
push
push
sub
int
xchg
imul
aam
orl
jl
ret
mov
imul
mov
mov
adc
sub
ffreep
lret
fstpl
bound
cmp
xchg
lahf
daa
icebp
fneni(8087
std
iret
add
movsl
insb
bnd
test
inc
pop
xchg
and
adc
fisttpll
mov
sbb
jecxz
daa
push
lock
add
hlt
mov
lahf
cmp
inc
test
add
dec
jg
pop
ss
std
and
cmp
jb
push
lock
push
outsb
mov
xchg
jne
repz
fdivr
shlb
xor
sub
lods
adc
mov
adc
scas
dec
push
mov
fildl
dec
lock
mov
mov
ret
adc
cwtl
mov
sub
mov
mov
jbe
jge
xchg
inc
or
inc
mov
jno
cmp
push
adcl
dec
ds
fldcw
idiv
mov
data16
mov
dec
xchg
mov
pushf
inc
xor
inc
push
pop
js
jne
xor
es
subl
loopne
mov
and
xchg
test
cmc
subb
mov
or
movsl
adc
or
hlt
les
xor
push
jo
sub
mov
bound
mov
xor
movsb
sbb
iret
imul
addr16
or
cmpsl
and
hlt
ss
and
dec
bound
ret
pop
and
shll
out
mov
roll
sub
cmpsl
pop
mov
dec
add
insb
push
cmp
sbb
aas
mov
add
sub
sti
call
push
dec
popa
dec
out
jb
xor
repnz
push
inc
fisubrs
jns
mov
out
xchg
int3
jg
call
mov
inc
daa
pop
outsb
adc
dec
xchg
xlat
mov
jl
or
repz
xchg
and
jg
xor
push
test
mov
stc
dec
xchg
sbb
call
ret
cmp
loopne
popa
stos
das
and
lods
lds
jnp
insb
lret
inc
mov
push
out
sub
fstpl
push
cmpsl
mov
lea
jecxz
mov
jo
cmp
push
push
lahf
and
mov
iret
mov
mov
test
pop
xchg
or
daa
idivl
push
nop
pusha
jno
scas
xchg
xchg
jge
or
add
adc
inc
sub
lock
in
pop
inc
outsb
andl
aad
loope
imul
fs
out
movsb
adc
add
dec
pusha
decl
ja
xchg
iret
or
and
jae
int
push
addr16
jns
push
call
jnp
orl
adc
out
sbb
or
dec
jnp
and
jl
nop
or
pop
mov
aas
inc
bound
push
mov
shrb
test
stc
repz
or
xor
push
mov
shrb
sub
xor
mov
das
arpl
les
sub
jae
shll
sub
pop
inc
fwait
or
inc
bound
jecxz
cltd
jge
push
aad
add
movb
loop
or
inc
and
fldl
aaa
cmp
mov
insl
lods
xchg
and
sbb
push
jnp
add
add
mov
pop
and
sti
std
lods
cmp
out
xchg
sub
stos
fmuls
xchg
insl
ja
mov
adc
xor
mov
or
mov
cmp
jp
push
cwtl
test
cs
pop
leave
cmc
xchg
dec
mov
inc
cmpsl
jg
popf
cltd
cld
cmpl
scas
popf
push
and
ja
ds
jbe
enter
in
outsb
fwait
les
adc
add
pusha
cld
jbe
mov
fsubr
leave
lock
imul
mov
movsl
pop
dec
ljmp
arpl
xchg
xchg
fs
or
cmp
outsb
cld
movsb
xchg
mov
sub
and
data16
bound
nop
mov
aaa
mov
lods
gs
sbb
aas
dec
jg
inc
fsts
sbb
pop
mov
loope
jns
cs
into
push
sub
inc
out
sub
movsl
xchg
lods
inc
lahf
ss
xor
outsb
shr
popa
mov
jmp
and
sbb
gs
out
lret
rcrl
mov
insl
ljmp
cmp
lods
je
xchg
cmp
test
inc
add
inc
cmp
and
orb
inc
jnp
dec
add
xlat
mov
sti
jo
or
leave
mov
xor
stos
orl
dec
lea
movsl
fisttpl
cpuid
inc
test
into
ja
aas
push
fwait
dec
add
loop
jno
add
lahf
sub
sbb
or
lods
out
daa
cmc
lahf
outsl
leave
popa
lret
mov
fcom
icebp
and
jle
bound
jb
in
push
and
sub
repnz
jmp
lret
mov
rolb
mov
outsl
cmp
mov
inc
ss
mov
test
or
dec
and
and
add
jne
imul
xchg
push
outsb
in
xchg
cmp
xor
vsubpd
sbb
add
inc
or
bound
and
stos
clc
mov
mov
ffree
pop
xor
sub
shl
mov
adcl
adc
jecxz
dec
loopne
fs
shlb
mov
imul
das
outsl
mov
gs
dec
movsl
dec
cmp
scas
jno
jmp
xchg
int3
pushf
jno
sub
js
mov
push
sub
cs
pop
mov
push
add
jg
mov
jg
mov
sub
cmp
or
sub
or
jnp
pop
call
pop
sbb
mov
dec
or
inc
inc
mov
jle
add
jmp
sub
dec
stos
mov
mov
xchg
enter
sub
cmp
xchg
lods
inc
inc
int
aas
aam
dec
add
xchg
xor
imul
addr16
push
sbb
popf
adc
sar
or
pop
and
or
jbe
js
and
mov
loope
jnp
sub
pop
fiaddl
or
mov
cs
sahf
fdivrl
inc
pop
xchg
xchg
leave
rcr
aad
movsb
fidivrs
out
cmp
leave
leave
mov
in
rolb
and
add
push
cmp
inc
pop
popf
adc
xlat
repz
insb
adcb
addr16
mov
mov
mov
xchg
and
sbb
xchg
test
rclb
cwtl
mov
or
jg
lcall
scas
jno
sub
fsubrs
adc
cmpsb
arpl
gs
dec
jmp
cmp
repz
dec
stos
jno
push
add
pusha
adc
jle
dec
pop
andb
sbb
mov
mov
bound
or
jecxz
jne
xlat
xor
rcrl
movaps
xchg
ret
shll
outsb
push
sub
xlat
xor
mov
gs
lods
inc
or
mov
mov
fldcw
xchg
or
pop
jmp
sti
cmp
push
and
bound
or
fs
xchg
out
xor
cmpsl
mov
imul
push
sbb
add
sbb
jne
xchg
push
xor
out
movsl
mov
cmp
cwtl
aam
lcall
or
push
sbb
daa
mov
dec
mov
out
jae,pt
test
inc
and
adc
popf
addr16
sub
and
inc
sub
into
cs
push
pushf
sub
mov
or
inc
mov
xor
pop
pop
xchg
rcrl
or
cld
ljmp
mov
call
lds
pop
xor
jno
add
imul
in
loop
cmp
loop
xchg
pusha
sub
and
int
cmpsb
or
hlt
insb
pop
out
or
shlb
dec
loop
sbb
test
loopne
add
repz
shl
cmp
mov
push
fcompl
push
jp
test
frstor
xor
out
mov
dec
ret
jl
adc
push
sub
lods
push
out
xchg
adc
ss
leave
or
cli
cmpsl
cs
int
popf
jo
add
lock
mov
pusha
cmpl
mov
mov
push
and
outsb
pop
ret
adc
in
inc
popa
xor
sbb
cmc
hlt
scas
adc
lcall
sbb
xor
loopne
pop
test
aad
lcallw
test
enter
pop
xorl
js
or
stos
add
out
xchg
movsb
lret
jge
jl
mov
xchg
je
add
arpl
cmp
pop
dec
mov
mov
outsb
shlb
popa
divb
imul
out
add
mov
pusha
adc
test
sarb
push
lods
and
divb
xchg
ja
xor
push
rolb
gs
mov
push
mov
and
mov
pop
loop
xchg
divl
pop
jecxz
or
pop
cmpl
mov
dec
outsl
lods
in
adc
sarb
loop
cmpsb
pop
jnp
jecxz
push
stos
add
cmp
int
pop
xlat
lcall
stc
movsl
nop
dec
jg
mov
sbb
sbb
mov
sub
scas
outsb
mov
adc
xchg
fbstp
outsb
mov
imul
xchg
cmpsb
cmp
sbb
or
mov
lods
dec
push
pop
test
push
vpmuludq
nop
imul
shrl
inc
jnp
jmp
and
loope
pop
stc
imul
add
stc
cmc
add
leave
sub
and
fnstcw
shlb
cmp
or
ja
decb
cld
fsubr
push
bound
cmp
xor
mov
test
imul
or
sysret
mov
gs
cmp
jbe
pop
sahf
mov
inc
clc
pop
test
push
jle
inc
xchg
push
orl
pop
fimull
loope
popa
cmp
cmp
push
jno
fcmovb
push
xchg
in
mov
and
hlt
adc
or
jg
clc
inc
pop
jbe
pushf
dec
shll
ljmp
cmp
dec
pop
lcall
jb
sub
repz
mov
ja
dec
movsb
popa
mov
popf
adc
push
add
push
pop
pop
shrb
push
movsb
outsl
push
lods
mov
add
inc
cmpsl
dec
xchg
push
imul
js
std
dec
jecxz
mov
addl
sub
pop
and
fcoml
mov
sub
xchg
adc
pop
cs
pop
or
aad
leave
shrb
iret
and
repz
ret
addl
aad
mov
cmp
das
fld
out
sbb
mov
lock
pop
cld
xchg
mov
add
je
scas
arpl
adc
dec
mov
jg,pn
lahf
mov
addr16
push
pop
arpl
sub
push
into
push
mov
fsubl
xor
mov
in
push
in
push
andnps
hlt
push
adc
pop
addr16
xlat
mov
xor
jg
jno
xchg
in
jo
into
or
mov
nop
aad
mov
mov
sbb
loop
cmp
push
sbbl
fstps
pop
push
dec
nop
test
cltd
outsb
les
rorb
fsubrl
movsb
xchg
mov
pusha
mulb
push
add
xchg
in
sbbb
outsl
stos
imul
cwtl
lret
push
mov
fsubrl
lea
sbb
mov
outsb
mov
aam
lods
stc
ficoml
fcompl
pop
jmp
add
sbb
and
fwait
int
cmp
lods
enter
push
jg
xchg
mov
fnsave
inc
jmp
lcall
xchg
mov
loope
lahf
mov
cld
add
jns
lock
adc
movsb
or
lret
aaa
mov
mov
cmp
clc
or
sub
inc
cmp
adc
mov
aam
pop
mov
imul
push
and
lods
data16
call
jg
stos
jl
pop
out
adc
and
not
aam
jb
arpl
andb
mov
adc
imul
js
and
jnp
rcr
or
pop
fs
xlat
loope
lods
push
sub
lahf
call
popa
es
scas
lds
xor
outsl
and
cmp
xor
xorb
mov
inc
or
popa
add
je
sbb
out
add
add
and
pop
add
adc
cmpsl
mov
adc
pop
iret
sahf
popf
push
xorl
add
xchg
les
mov
iret
jl
sbb
jns
shll
or
pusha
rcll
lock
inc
aad
lahf
ret
outsl
pop
sub
gs
lods
cmc
jg
rcll
daa
loop
push
add
sar
xchg
jae
cmp
shl
das
cld
int
movsl
pop
and
adc
cwtl
imul
cltd
sbb
adc
ja
sub
mov
and
leave
popa
addr16
pop
push
fbld
jmp
test
and
pop
gs
mov
dec
popf
adc
cmc
imul
test
add
add
mov
ljmp
mov
jmp
stc
jnp
lock
push
mov
mov
outsb
push
cmp
gs
dec
cli
sub
into
push
sbb
add
dec
pusha
stc
ss
and
clc
or
iret
cmp
decb
in
xchg
and
cmp
inc
add
xchg
push
and
mov
fisubs
popa
imulb
mov
sarl
jne
and
adc
lahf
cs
in
mov
rorb
fucompp
in
cvtps2pi
add
jge
push
mov
insb
xchg
cmp
outsl
mov
jb
and
mov
fimuls
outsb
cmp
scas
lahf
inc
or
dec
test
xor
dec
in
jno
rcrb
bound
mov
and
inc
mov
and
lcall
loop
insl
fstpt
aaa
fucomp
movsl
cld
pop
pop
ja
sub
mov
jg
sbb
xorl
bound
xor
push
popf
test
dec
xchg
repz
popa
ljmp
cmpsl
outsb
mov
cmpsb
sbb
lea
jl
ds
and
stc
jg
call
or
int
adc
push
aam
test
pop
addr16
repz
gs
adc
xchg
subl
cmp
sub
inc
dec
pusha
mov
pusha
cmc
push
or
movsl
mov
test
das
lahf
push
xor
nop
pushf
xor
negb
test
inc
mov
xchg
cmpl
icebp
rcr
mov
sub
shrb
aaa
loopne
pop
xchg
arpl
les
jp
xlat
mov
ss
bound
cltd
or
pop
and
mov
test
jl
mov
gs
lds
and
jnp
rolb
inc
inc
cmp
ret
inc
imul
mov
int
push
cwtl
data16
inc
dec
mov
xchg
inc
pushf
xchg
cs
fs
loop
jno
push
xchg
cmp
xor
inc
add
cmp
outsb
push
jo
js
add
jg
sub
rcrb
push
dec
dec
and
pusha
fisubrl
cmp
xchg
xchg
jae
scas
jmp
dec
add
jg
push
mov
testl
xchg
and
cmp
or
mov
cmpsl
xor
jnp
test
mov
out
popf
push
or
clc
jge
outsb
mov
lods
add
into
xchg
inc
inc
shlb
lcall
mov
or
and
jnp
xchg
into
inc
and
bound
lahf
test
inc
dec
xchg
enter
add
int3
daa
icebp
jo
mov
subl
xchg
mov
and
pop
aad
lods
pop
jg
stos
cltd
xlat
lock
lods
mov
sub
ljmp
push
jmp
inc
dec
push
inc
mov
push
mov
je
daa
or
jecxz
sbb
xchg
hlt
loope
adc
mov
push
sub
mov
add
xlat
add
jne
shr
ja
fldl
sti
ret
decl
cli
lea
lock
orb
orl
shll
mov
sti
xlat
mov
mov
lds
xchg
adc
call
ljmp
sbb
iret
mov
mov
mov
imul
rcr
mov
jno
ret
fsubl
cmp
dec
cmp
xchg
insb
pop
mov
bound
xchg
repz
test
sbb
pop
out
ret
sbb
bound
xchg
mov
hlt
sub
mov
jo
push
es
or
xchg
cs
into
imul
cmp
xchg
add
push
ljmp
cmp
jg
pushf
mov
mov
jo
lea
in
add
jecxz
ret
insb
aam
mov
out
adc
popf
into
imul
insb
push
sbb
sbb
in
push
mov
jg
in
cmp
jb
lock
inc
dec
sbb
jae
cs
jg
dec
in
push
or
gs
sub
mov
sbb
loop
aam
stos
mov
shrl
mov
jge
lret
add
pushf
ret
push
lods
jb
out
pop
sub
outsb
loop
insb
ja
gs
cs
popa
insl
sti
in
aaa
pop
test
insl
xchg
pop
cltd
sbb
out
push
movsb
scas
xchg
lcall
bound
popf
xchg
cs
lret
jp
xchg
cltd
out
flds
and
and
add
dec
les
xor
push
out
fldenv
mov
loopne
xor
and
lahf
and
push
loope
cmp
pop
clc
loopne
jecxz
sbb
dec
fildl
cmpsb
popa
lcall
or
not
daa
stos
cmpsl
cmpsb
repz
xchg
les
loopne
mov
popa
jne
rcr
hlt
and
fistpll
jne
loopne
sub
or
cmp
mov
cmp
inc
add
mov
add
lret
shll
shrb
or
shl
imul
outsl
xchg
or
jb
test
cmp
fidivrl
dec
sub
call
adc
mov
pusha
xchg
negb
xchg
push
sbb
cmp
push
jb
imul
pusha
cmp
inc
cmc
lret
cmp
and
cs
jo
xchg
fsubl
and
lret
push
adc
push
cs
fistpl
fcoms
pop
and
mov
push
cmpl
and
clc
into
xchg
js
inc
stos
aam
cmp
adc
lahf
adcb
rep
add
insl
insl
pop
push
add
in
jmp
xor
xchg
adc
lods
jle
sub
and
stc
mov
shll
sahf
jmp
adc
in
cmp
insb
scas
add
and
sub
loop
push
cmp
std
sub
daa
scas
sub
xor
pusha
fwait
sub
jp
dec
daa
or
mov
sub
sbb
and
mov
aaa
pop
out
mov
jl
je
push
sub
ret
xor
mov
test
lret
pop
inc
movsl
int
lea
sub
je
iret
scas
fs
inc
les
mov
xchg
inc
xchg
stos
mov
clc
push
mov
sub
pop
sbb
or
call
es
dec
in
sti
hlt
sub
cwtl
rolb
test
gs
mov
int3
aam
inc
adc
mov
in
arpl
into
dec
sub
popf
push
lret
and
in
aam
loop
xchg
mov
dec
xchg
mov
and
loopne
xchg
mov
jmp
and
cld
rcll
adc
fisubs
adc
sub
rorb
movsb
in
mov
scas
ja
sub
nop
sub
add
mov
push
dec
popf
inc
dec
in
daa
or
mov
inc
add
int3
dec
sub
fcoml
pushf
lds
sub
popf
stos
mov
mov
xlat
mov
shrl
jb
xchg
sub
sub
fildll
sub
repnz
xchg
push
nop
out
cs
mov
jnp
ret
push
mov
cmpsl
dec
xchg
lods
sti
nop
xchg
or
mov
into
and
sub
scas
lahf
pop
pop
xor
jp
call
cmp
and
je
push
mov
movsb
iret
push
out
sub
xor
mov
sub
xchg
fwait
sub
leave
stc
cwtl
sub
jp,pn
xor
imul
sub
in
jg
jae
pusha
test
in
push
xor
jle
mov
mov
jae
movsb
insb
shrl
inc
adc
lahf
dec
daa
vcvtss2si
push
fimull
mov
push
out
push
mov
sub
ljmp
fimuls
cmp
mov
add
mov
outsb
sub
sarb
sub
jns
sub
and
addr16
sub
push
adc
test
outsl
ja
out
sub
frstor
cmp
adc
mov
imul
cmp
stos
pop
repnz
inc
inc
push
cmpsb
sub
push
adc
sar
lds
dec
mov
sub
arpl
jmp
mov
mov
sub
jo
test
xor
jae
and
das
xchg
lahf
cmp
adc
insb
jmp
adcb
and
call
pop
ret
mov
out
arpl
stc
add
dec
sub
xchg
lock
sub
dec
jge
int3
sub
mov
fcompl
xchg
aam
in
test
movsl
sub
and
into
aaa
pop
or
ficomps
mov
mov
or
add
out
push
and
mov
aaa
and
push
sub
fs
fisubrs
pop
adc
sub
sahf
add
dec
leave
movsb
cltd
jl
mov
iret
daa
imul
sub
inc
out
mov
jb
xorb
fidivl
sub
cmp
pop
sub
push
fs
mov
xchg
fidivl
mov
aad
push
cld
mov
daa
adc
jge
into
sub
in
lcall
mov
movl
and
cmp
push
sbb
movsb
push
sub
sbbl
andb
push
sub
inc
pop
addr16
sub
jnp
xchg
dec
cmp
push
lcall
jbe
jns
lea
mov
pusha
jl
mov
mov
sub
dec
test
shr
dec
push
sub
add
popf
adc
sub
aaa
es
jmp
and
fwait
lcall
xor
jno
fcoml
xor
mov
pop
aam
bound
in
sbb
lcall
cli
pusha
scas
mov
aam
jo
mov
ficompl
mov
ret
dec
push
cmpsl
int
sub
test
inc
xor
push
mov
jl
inc
gs
add
fildll
inc
adc
cvtps2pi
scas
test
adc
sub
mov
aas
adc
add
add
repz
sti
inc
mov
es
test
je
jge
scas
push
xor
fisubrs
sbb
cmp
mov
addr16
sub
mov
push
popf
or
test
mov
xchg
sub
sub
dec
mov
lods
mov
xor
sub
iret
push
outsb
mov
jle
adc
fldt
mov
mov
bound
push
pop
dec
sub
sub
inc
dec
sub
jmp
lcall
insb
mov
mov
sub
iret
ficompl
mov
sbb
and
outsl
inc
fildl
pusha
les
scas
xor
inc
mov
pusha
push
sub
cmp
fwait
sub
pop
repz
xchg
jecxz
jmp
jne
subl
jns
pop
ss
xchg
sub
xor
stos
jge
xchg
sbb
sub
sbb
sub
leave
mov
adc
shlb
or
dec
gs
mov
cmp
add
inc
xor
pop
scas
xor
push
sbb
fwait
dec
sete
out
mov
cmp
sub
aaa
into
in
pop
cmp
push
pusha
lea
sub
scas
rcll
and
lret
dec
enter
add
mov
fldenv
pop
movsb
mov
pop
shlb
lea
test
fs
les
sub
dec
xor
push
aas
daa
xor
popa
fisubrs
xchg
clc
loop
mov
inc
push
and
sub
mov
insl
sub
or
hlt
jmp
dec
dec
or
sti
mov
or
scas
cwtl
fcmovnb
mov
imul
sub
pop
sbb
mov
xchg
cmpsl
call
jae
iret
push
add
repnz
xor
jecxz
leave
mov
sub
in
ret
repnz
xchg
sub
or
sub
ja
pop
push
not
sub
lret
add
jle
cwtl
xlat
addr16
sbb
outsb
sub
pop
pop
adc
sub
mov
outsl
cmc
sub
mov
scas
mov
inc
sub
inc
or
dec
jle
mov
fidivs
sub
push
loopne
cmp
or
dec
pop
popa
jecxz
mov
lods
add
pop
jno
inc
test
sub
sub
outsl
xchg
mov
xchg
jp
es
or
dec
cli
lock
shrb
loope
adc
int3
jl
arpl
cli
push
in
bound
mov
sbb
lret
testl
and
mov
gs
xchg
stos
dec
fstps
mov
lods
push
hlt
pusha
and
insb
mov
lds
pop
aad
push
lods
daa
out
sub
mov
rolb
js
sub
adc
push
adc
jp
sub
push
inc
pop
push
sub
inc
rcl
movsb
adc
in
daa
add
sbb
sub
jge
sbb
pop
pushf
push
push
call
int
xchg
adc
cmp
leave
xor
mov
fsubs
cs
sub
jnp
movsl
sub
out
addr16
lea
insl
push
hlt
jmp
ja
push
addr16
cmp
pop
mov
sbb
mov
iret
adc
test
inc
and
add
outsl
ljmp
xor
enter
movsb
das
xchg
sti
fisttps
sub
lahf
mov
sub
rolb
hlt
mov
mov
push
jb
test
mov
es
andl
jge
movb
sub
inc
enter
fnstsw
adc
pop
adc
shlb
out
inc
and
arpl
movsb
lret
or
pop
daa
unpckhps
int3
inc
mov
ss
inc
lods
cmp
pop
sbb
lret
sub
and
sub
sub
ffreep
int3
lcall
sub
and
cwtl
cmc
sub
adc
int
enter
sub
call
and
daa
or
dec
fstl
cltd
push
mov
sbb
dec
sarl
test
ja
xchg
das
ss
sbb
sub
xor
push
mov
pop
cld
jns
fsubl
sbb
cltd
enter
jg
daa
fcoms
dec
jns
pop
icebp
pop
clc
sub
stos
enter
in
imul
mov
in
lret
add
lods
dec
push
cmpsl
pushf
ljmp
loop
pop
mov
inc
arpl
add
sub
mov
push
adc
jae
in
iret
out
int
dec
aam
mov
loope
sub
imul
in
jb
movb
out
add
orb
sub
push
and
daa
lods
decl
outsl
sub
scas
sbb
pop
pop
or
sahf
iret
jp,pn
sub
adc
mov
adc
pusha
js
and
insl
jge
sub
test
mov
lahf
push
adc
ret
sub
std
xor
pop
pop
sbb
in
sub
jns
loopne
xchg
les
mov
test
inc
pminsw
pop
nop
or
cs
pop
or
dec
push
je
mov
jg
fidivrl
js
push
in
imul
push
fildl
push
dec
sub
push
sub
sub
leave
inc
sub
xchg
lods
and
adc
mov
jno
add
mov
sub
pop
pop
xchg
imul
or
sub
pushf
mov
data16
cmpsb
iret
cmp
inc
loope
sub
inc
dec
mov
sub
icebp
mov
pushf
lds
sbb
push
xlat
rcrl
cmp
out
mov
fsubrl
push
sub
cltd
repnz
cs
add
dec
mov
xchg
inc
add
inc
inc
sti
insl
out
adc
adc
or
sub
gs
scas
mov
loopne
test
data16
ss
sub
mov
jp
sbb
xor
aas
add
ds
into
jne
sub
sub
pop
sub
mov
in
sub
insl
dec
adc
mov
stos
ret
ret
push
xchg
ds
push
dec
jno
aad
jb
fcmovne
jge
lock
arpl
out
imul
add
inc
stos
clc
xchg
out
push
pop
in
mov
gs
sbb
jae
xchg
push
jecxz
decb
adc
sub
aaa
std
dec
jmp
jne
sub
push
xchg
xchg
adc
fidivl
popa
xchg
test
in
imul
loop
cmp
mov
xchg
adc
ljmp
add
out
add
sub
push
xor
in
in
lods
and
inc
jbe
ret
jne
push
pop
outsl
sub
gs
dec
int3
xchg
sub
push
mov
cmp
mov
test
outsb
fwait
sub
or
imul
xor
cmp
sub
push
xchg
push
aam
mov
outsl
ficompl
and
test
aad
dec
cmp
in
jbe
pop
dec
push
repnz
mov
sub
and
push
imul
test
ljmp
lock
or
sub
push
sub
sub
std
add
cmp
ja
ss
and
push
int3
adc
mov
fistps
cmp
jle
insl
dec
shl
fisubrl
fisttpl
gs
cltd
add
rorl
nop
jno
scas
out
popf
out
insl
sub
sbb
xor
call
fdivrl
orl
sub
pop
mov
mov
and
or
mov
and
sub
push
mov
adc
mov
sub
mov
cmp
scas
je
aam
sub
sub
adc
and
jns
sub
movsl
orb
xchg
xor
in
popf
xchg
adc
add
inc
xlat
pop
dec
sbb
arpl
lret
sbb
dec
push
and
sarl
mov
rcl
int3
sbb
adc
adc
mov
sub
add
das
xor
mov
mov
scas
and
cmp
mov
pop
popf
push
sub
in
xor
cmp
int3
push
faddl
int
daa
out
xchg
scas
mov
jnp
cs
jge
inc
outsb
and
dec
mov
sub
scas
jns
xor
adc
dec
out
imul
dec
sub
add
sub
cmpb
inc
inc
stos
das
pop
pop
mov
lret
bound
call
adc
dec
fiaddl
movsb
lods
sub
push
mov
jle
stos
cs
jmp
andl
rcr
insl
lcall
inc
pop
mov
cmp
incl
pop
shll
sub
adc
adc
xchg
test
mov
jno
dec
cwtl
sub
mov
adc
sbb
inc
lea
inc
sub
inc
pop
inc
sbbb
sbb
dec
out
push
cmp
and
jge
cmp
outsl
lea
jb
pop
sbb
pop
add
mov
xchg
pop
lahf
dec
mov
sub
lock
aad
cmp
sub
out
push
pop
in
iret
mov
cmp
and
cmc
mov
icebp
cltd
mov
pop
and
xor
imul
dec
cwtl
dec
sub
loop
jno
sbb
lods
sub
xor
pop
bound
fsubr
cmpsb
cmc
inc
jo
ljmp
fdivrl
in
cld
out
sbb
push
and
jbe
add
add
pop
xor
inc
dec
xchg
sub
sbbl
mov
cmp
mov
loope
add
mov
mov
xchg
int
xchg
xlat
sub
ret
sub
hlt
insb
nop
ds
and
leave
imul
int3
jbe
lds
push
ja
sub
sub
fistpl
aad
mov
out
jne
ja
sub
ss
mov
mov
and
mov
shlb
cli
fld
mov
lret
ljmp
stc
ds
cmp
jecxz
imul
dec
push
js
inc
mov
repnz
sub
xor
mov
test
jp
pushf
cli
dec
jns
gs
mov
das
cmpsl
sub
hlt
xor
or
adc
sub
ret
cltd
push
xlat
sub
fnop
pusha
aam
popa
push
lds
pop
mov
pushf
mov
pop
ss
xlat
clc
mov
test
movsb
jmp
outsl
push
jns
inc
mov
jle
mov
fiadds
mov
test
xchg
pop
adc
xor
imul
int3
sbb
push
cmp
pop
sub
insb
outsl
pop
into
pop
sub
pop
popa
pop
and
mov
cmpsb
push
sub
ds
dec
sub
sub
fistpl
cmp
das
orl
adc
sbb
sub
data16
shll
rorl
je
push
cmp
lea
shrb
push
arpl
adc
sbb
cmp
imul
ds
out
mov
cmpsl
xchg
mov
dec
sub
and
sub
sub
pop
fsubl
sub
xchg
xchg
push
xchg
sub
sbb
jns
cmp
sub
inc
sub
push
out
xchg
fdivrp
xor
arpl
divl
outsb
sub
xchg
or
dec
sub
sbb
mov
lock
or
fdivl
xchg
xor
xor
nop
jecxz
ficoml
aas
movd
clc
cwtl
ficoml
adcb
fdivrl
repnz
sub
add
add
and
push
sub
cmp
xchg
loop
adc
and
rorl
sub
icebp
imul
mov
rcrl
and
push
adc
sub
mov
es
movsb
sub
out
addr16
mulb
sub
and
mov
push
lcall
push
imulb
mov
add
ret
inc
dec
cli
jmp
mov
in
sub
dec
sub
add
sub
and
jecxz
and
cmp
xor
sub
sub
adc
out
call
mov
mov
clc
iret
mov
xor
fisttpl
jg
scas
sub
add
sbb
push
jp
sub
mov
dec
sub
in
iret
sub
adc
and
and
sub
xchg
hlt
mov
add
repnz
and
xor
fstpl
and
sub
int
pop
sub
outsb
mov
out
cltd
addr16
mov
or
pushf
and
dec
sub
fdivrs
fildll
sub
jecxz
mov
jo
loop
movsl
les
sub
jne
pop
aam
sub
lahf
rcrl
ljmp
fisttpll
sub
cmpsb
mov
popa
addr16
push
mov
xchg
pop
cmp
push
fs
xchg
jg
xor
stc
fbld
shll
mov
or
jle
dec
fnsave
xor
shll
mov
sub
add
stc
cmp
jge
repnz
xchg
lret
cmp
jae
popf
dec
sub
mov
nop
and
daa
scas
mov
fdivl
sub
movl
push
fimull
pinsrw
sbb
pop
sub
fisubrl
fdivl
pop
or
sub
jge
std
repz
mov
shrl
xlat
aaa
mov
ss
mov
loop
sub
sbb
mov
jecxz
pusha
subl
mov
les
mov
adc
mov
int3
sub
out
jl
fidivrl
or
mov
daa
ljmp
repnz
arpl
nopl
and
es
push
adc
pop
xchg
loop
sub
push
xor
fisubl
repnz
inc
mov
aas
lods
mov
push
lret
jmp
adc
add
xlat
test
in
mov
sub
cmp
pop
push
sub
inc
mov
into
lods
les
data16
sub
xor
dec
sub
mov
fadd
aad
ja
dec
add
mov
stos
mov
jle
dec
loop
in
fnstenv
pop
sub
movsb
jecxz
jae
sub
pop
xchg
adc
icebp
notb
mov
mov
pop
inc
test
aad
jbe
cli
sub
testb
mov
sub
scas
pusha
pop
or
cmp
sub
adc
mov
stos
jg
xchg
sub
addr16
jmp
leave
repnz
mov
bound
loopne
and
cmc
xor
or
lret
jmp
test
mov
sub
cmp
stc
shlb
fstpl
dec
sub
push
xor
aad
lret
sub
jb
mov
iret
or
pop
xor
lcall
adc
daa
push
xchg
aad
sub
mov
or
pushf
adc
inc
sub
loope
imul
cmpsl
mov
cmp
xlat
fnsave
jbe
mov
sub
das
adc
sub
divb
push
xor
and
mov
enter
ja
adcb
movsb
inc
sti
push
lods
mov
and
js
add
pop
xchg
xor
push
sub
mov
xor
mov
mov
cli
pop
sub
add
pop
fld1
adc
push
stc
jmp
inc
into
sbb
movsb
adc
jecxz
sub
mov
les
adc
adcl
scas
leave
jmp
push
push
addr16
ret
xor
mov
stos
jo
sbb
pop
aad
repz
fdivs
je
cmpsb
mov
xor
in
pushfw
aad
pop
sbb
mov
mov
ss
sub
ret
pop
sub
mov
popf
fldl
cld
adc
shrl
sub
jo
push
and
mov
sub
fisubrl
mov
rcrl
cmp
and
dec
sub
xor
faddl
xor
sbb
das
xchg
loop
shrl
aaa
sbb
lea
lds
imul
dec
pushf
scas
dec
lds
inc
pop
test
and
mov
push
and
int
push
addr16
sub
xchg
mov
movsl
sub
jmp
dec
mov
stc
std
jns
ja
push
mov
pop
rorb
adc
pop
push
mov
in
sub
out
shrb
fadd
or
sub
xchg
into
push
xor
subb
or
mov
mov
pop
out
mov
in
sub
mov
pop
add
jnp
sahf
cmc
xor
arpl
jmp
sbb
inc
sahf
dec
push
icebp
movsb
ret
xor
pop
clc
call
pop
pusha
lret
and
sbb
or
xor
push
jecxz
pop
test
inc
mov
dec
fisubrl
push
addr16
sub
cmp
mov
xor
outsb
jl
push
cld
cwtl
xor
sbb
shrl
js
movsb
mov
adc
lds
jle
mov
cmc
cmp
insl
gs
pop
and
cs
out
fmull
and
xchg
sub
sub
shll
std
insb
and
push
adc
mov
iret
pop
sub
lods
xchg
into
shll
rcrb
rclb
cmpsb
xchg
cli
cmpsb
push
ss
out
mov
ret
imul
inc
sub
outsb
in
lahf
xchg
cmpsb
fs
movl
or
fisubrl
xor
cmpb
sbb
lea
ja
mov
jnp
fsubl
rorb
and
adc
pusha
mov
push
scas
cmp
fucomp
add
cmp
popf
lret
out
mov
insl
xor
push
ja
pusha
arpl
cmp
bound
or
cs
pop
push
imul
test
leave
adc
xor
lea
xlat
and
xchg
lods
cs
xor
xor
pop
jg
insl
xor
leave
outsb
pushf
lret
mov
test
leave
bound
imulb
lock
push
aad
lods
outsb
add
into
out
jg
out
mov
push
mov
jl
add
jo
mov
in
scas
into
mov
test
add
lods
outsb
push
cmp
mov
cmp
inc
insb
lock
xchg
xlat
addl
mov
incl
inc
or
inc
sub
outsb
sbb
not
ret
bound
mov
lcall
and
ja
cmpsb
lods
popf
push
push
push
xchg
dec
or
cmp
fisubs
addr16
jmp
in
lods
or
dec
movsb
or
xor
cmpsl
or
pop
dec
ja
cwtl
les
jno
nop
in
daa
pop
and
push
and
push
stc
sub
testl
or
mov
mov
push
jno
stos
xor
jl
cmp
cld
xchg
pop
out
rorl
out
or
loope
test
xlat
lcall
pop
add
dec
arpl
call
cmp
out
mov
gs
mov
lods
dec
sarb
lds
scas
mov
xchg
xor
aaa
pop
in
and
push
movsl
lahf
adc
xor
cltd
outsb
xlat
testl
push
dec
inc
inc
add
cmpsl
ds
mov
loope
or
adc
mov
pop
inc
daa
rcr
and
and
pop
jno
dec
or
lcall
loopne
rorb
test
call
mov
lea
mov
fstpt
add
sti
sub
add
jp
in
or
fiaddl
add
das
outsb
gs
test
or
ss
ja
dec
incb
rolb
push
or
imul
shrl
jno
pushf
xlat
shrb
popa
lds
hlt
jb
jle
and
shlb
adc
dec
popf
jne,pn
fidivrl
dec
sbb
push
xlat
out
lock
cmp
sub
mov
gs
mov
xlat
sub
in
into
jns
pop
daa
cli
push
mov
shl
aaa
dec
test
add
push
mov
fists
repz
aam
push
mov
shlb
mov
cmp
pop
push
lods
mov
cmpsl
lret
dec
sarb
xchg
cltd
shlb
std
shrb
stos
adc
repz
sub
mov
xor
sarl
mov
sbb
xchg
stos
popa
pop
jg
or
lcall
jp
sub
mov
std
in
lret
or
lock
gs
loope
push
add
shl
bound
adc
aas
loopne
into
pusha
mov
leave
lock
ret
lret
inc
push
mov
sbbl
fcmovnb
xor
xlat
out
inc
shrl
aam
leave
je
movsb
mov
jg
test
xor
ffree
movsl
imul
lods
pop
push
xchg
repz
int
ja
out
fsub
add
mov
nop
push
cwtl
pop
cmp
sub
mov
scas
jno
pop
xchg
sub
sub
xbegin
xchg
mov
in
xor
or
gs
mov
js
xchg
xor
add
pop
movsb
loope
mov
cwtl
dec
rclb
repz
xor
shll
sbb
inc
les
fstpl
pop
jg
ret
jae
pop
sub
jb
cmp
cltd
jp
jo
dec
outsb
xor
cwtl
mov
rcl
lds
mov
or
pop
pop
out
addr16
sub
stos
push
outsb
fmul
mov
gs
add
loope
movsl
xorl
repnz
lods
lds
or
add
aam
mov
jg
push
hlt
jns
mov
mov
repnz
adc
sbb
insl
aaa
xlat
lret
arpl
inc
es
lock
or
xchg
jno
rorl
pop
sub
outsb
mov
nop
iret
sub
cmp
pop
arpl
int3
icebp
in
fists
bound
xchg
or
cmpsl
in
xor
jge
jmp
shlb
cltd
pop
mov
cs
imul
jle
sub
shlb
fcoms
pop
mov
ret
and
nop
lcall
bound
movq
push
mov
fmuls
pushf
ret
outsb
test
add
repz
or
clc
iret
mov
popa
shl
cmp
push
iret
mov
lret
mov
mov
cmp
mov
hlt
xor
jge
std
dec
jns
out
push
test
cmp
pop
and
ret
popa
mov
inc
fdivrs
mov
cmp
push
fists
sti
pop
pop
lods
adc
insl
xchg
add
out
sub
mov
jbe
xchg
jne
cmp
cld
or
ds
mov
ficoml
test
jae
sbb
cmc
sarb
xchg
lods
daa
leave
movsl
in
and
shrl
push
incb
push
jb
insl
jo
pop
pop
insb
mov
fcompl
dec
gs
loope
jne
pop
lret
lock
push
mov
push
mov
xor
add
push
add
cmp
mov
jmp
insl
sbbl
ficompl
xor
cs
into
or
mov
pop
dec
mov
sbb
lea
cvtdq2ps
add
mov
sbb
cmp
pop
nop
pop
ja
arpl
jmp
xor
test
inc
stos
cmp
jg
loop
mov
dec
insl
mov
nop
dec
add
subl
orl
iret
dec
cmpsl
ljmp
adc
jbe
and
mov
inc
loope
xchg
repnz
lods
pop
bound
push
cmp
insb
ss
jne
jmp
inc
bound
scas
cld
loope
or
sti
push
fidivrs
sbb
stos
sub
cwtl
jmp
mov
cli
xor
or
push
push
add
stc
mov
in
std
or
ja
add
xor
mov
std
xchg
or
push
mov
fcmove
enter
cmpsl
push
mov
call
add
xorb
in
test
fidivl
pop
sbb
mov
mov
fldt
daa
push
xchg
add
sub
into
or
rolb
push
pop
jge
clc
push
pop
or
and
sub
cs
sahf
mov
leave
fbld
jne
jg
inc
and
push
imul
ljmp
notl
push
nop
pop
add
cmp
stc
mov
mov
pop
pop
sub
xchg
pop
jge
mov
ss
jne
jne
xor
cmp
popf
pushf
test
outsl
and
mov
mov
sub
xchg
inc
cli
out
imull
inc
xchg
and
pop
loopne
in
inc
cmp
loope
add
pop
and
mov
xchg
dec
mov
cs
test
or
inc
fcomip
gs
arpl
mov
lea
hlt
js
xchg
icebp
or
test
sub
sub
push
das
add
scas
mov
outsb
mov
cs
lret
test
lods
bound
loop
mov
xorl
addr16
test
inc
shll
sbb
xchg
pop
dec
push
mov
sub
mov
mov
cmp
jno
add
add
mov
inc
add
push
jae
xchg
jmp
sbb
sub
sub
loop
cltd
jne
scas
out
cwtl
mov
popa
or
scas
outsb
or
mov
iret
dec
mov
mov
roll
mov
mov
in
cmpsl
lcall
or
cli
imul
cmp
jbe
pop
add
jle
aad
add
mov
mov
enter
fdivrl
push
rorb
cwtl
adc
cmp
out
test
adc
add
jne
xlat
pop
adc
iret
dec
cmp
out
clc
inc
or
fsubrl
cwtl
cmpsl
pop
ja
enter
shlb
cmp
repz
movsl
dec
rclb
test
es
push
jae
xchg
xorb
xchg
popf
cmc
jne
je
idivb
jne
xchg
add
ret
scas
outsb
lret
jp
dec
and
inc
cmp
dec
add
cmp
push
cli
mov
clc
jbe
icebp
inc
sub
xlat
mov
pop
test
or
xchg
jl
mov
lea
popl
mov
push
fsubrs
push
into
sarb
rcrl
fidivs
push
popf
mov
cmp
je
jno
arpl
jno
mov
add
lock
add
or
jecxz
pop
and
add
xor
test
das
mov
or
enter
sub
jae
lods
and
mov
arpl
and
sub
dec
gs
outsl
lcall
cmpsb
addr16
push
mov
movsb
aaa
xchg
sub
ljmp
into
aam
pop
sub
push
cmc
cmp
je
iret
jmp
sbb
xor
add
mov
push
test
mov
sarl
xor
inc
and
push
sbb
add
add
int
mov
jge
add
pop
pop
rcrb
out
and
jns
bound
lods
and
adc
repnz
repnz
mov
into
mov
jb
push
test
sub
ja
cmp
cmpsl
pushf
mov
out
push
mov
jmp
add
mov
lods
inc
in
gs
jg,pn
in
mov
nop
xchg
daa
andl
sub
lahf
adc
mov
jl
out
push
clc
nop
fistpll
test
xchg
gs
iret
sub
or
jmp
cmpsl
mov
fnstcw
dec
scas
xor
int
inc
add
test
test
shll
insb
jl
jns
clc
fs
je
cmp
cmp
mov
jno
or
imul
dec
shlb
lahf
test
insl
xchg
lock
bound
mov
repz
xchg
test
mov
and
or
dec
jbe
cmp
popf
jno
lea
bound
xchg
dec
push
fs
xor
out
and
ljmp
jb
test
jb
bound
gs
std
out
std
mov
push
adc
lcall
pop
adc
pop
out
in
adc
push
dec
addr16
adc
mov
mov
jge
in
lahf
pop
jno
jne
sub
repnz
in
out
pop
jno
push
push
adc
dec
xlat
sbb
adc
ds
fwait
add
test
cmpsb
insl
pop
loopne
mov
iret
std
adc
mov
jo
fnsave
mov
xor
sub
lds
sub
push
lods
mov
mov
push
lods
repnz
add
push
xchg
out
pusha
mov
push
dec
dec
sbb
loopne
rcll
test
and
mov
repz
adc
jecxz
test
js
add
inc
stos
inc
cltd
mov
cs
mov
mov
push
stc
test
cmpsl
inc
aam
add
sub
sahf
dec
pop
cltd
cmp
mov
test
fidivl
push
pop
cmp
mov
cmc
sbb
iret
cld
push
lret
lods
arpl
cmpsl
push
dec
outsb
int
aam
dec
adc
addr16
iret
push
int3
scas
pop
mov
push
push
xchg
push
sub
push
mov
sub
sub
or
jge
out
or
push
popa
test
dec
cmp
dec
push
pop
pop
pushf
jno
sbb
xchg
xlat
out
push
add
and
aam
iret
inc
bound
data16
pop
pop
adc
cld
testl
add
jmp
aad
cmp
imul
insb
neg
xchg
sbb
mov
hlt
fidivs
arpl
fcmovne
icebp
jge
popf
insb
lret
sub
sbb
sub
rcrl
jge
sbbl
sub
mov
arpl
out
and
xlat
scas
inc
je
cli
and
mov
jmp
lea
cmp
jne
in
sub
clc
sbb
mov
bound
mov
mull
sbb
js
mov
sub
scas
dec
xor
ja
subb
test
imul
or
gs
stos
fdivp
or
aas
mov
sbb
xor
clc
xlat
jge
data16
ds
pop
lods
adc
pushf
andb
cltd
pusha
push
xchg
lahf
outsl
cmp
push
rclb
ret
movsb
loope
cmp
jnp
pop
pop
test
dec
or
mov
xchg
cmp
ret
pop
xor
or
mov
fsub
data16
daa
ret
mov
sbb
stc
or
sub
adc
mov
cmp
cmc
popf
adc
xchg
clc
int3
xchg
imul
sub
add
xor
cmp
and
into
lods
cmp
daa
sbb
mov
push
or
daa
out
jnp
cs
stos
data16
test
cmp
sub
rcr
xor
sbb
int3
mov
jae
sbb
add
aad
mov
lcall
enter
or
dec
or
sbb
push
and
lcall
lret
adc
lret
mov
xchg
or
test
cli
jnp
add
pop
fwait
jo
fucomp
sbbb
mov
fists
test
cs
mov
push
leave
in
mov
sahf
or
cs
scas
mov
cmpl
test
fildll
int3
in
pushf
inc
and
outsb
jne
lds
xor
rcl
cltd
iret
and
insl
add
pop
mov
inc
push
rorb
lods
inc
xlat
dec
insl
xchg
dec
shlb
movsl
sarb
movsb
into
xor
dec
cmp
scas
push
sbb
into
and
fistl
dec
add
ss
insb
mov
lea
push
clc
jl
xlat
push
shll
adc
sub
shrb
pop
push
test
scas
aad
add
ja
sub
pop
add
imul
add
dec
push
adc
mov
pop
push
lods
sbb
cmp
in
bound
idiv
mov
mov
push
push
outsl
lods
lret
outsb
cmp
push
pusha
jo
insb
xor
and
sub
push
xchg
cmp
xchg
popa
jg
sbbb
lahf
mov
mov
ret
xor
rcll
leave
mov
or
mov
out
mov
daa
cmp
push
adc
or
test
xor
dec
mov
aam
ds
es
xchg
outsb
pop
xchg
fwait
test
int3
cli
pop
ljmp
mov
sub
pop
push
jb
jp
xor
or
xor
arpl
cmp
jno
cs
push
ja
call
mov
or
insl
adc
adc
jmp
add
sbb
test
or
gs
sbb
or
and
cmpsl
or
aam
push
insb
dec
jge
bound
adc
push
mov
outsb
inc
xor
cmp
inc
lea
cmpsb
inc
sub
pop
jmp
lret
push
xchg
jno
clc
out
inc
rcll
cmp
inc
xor
and
cmp
lahf
and
jmp
call
or
xor
dec
push
pop
stos
jge
pop
adc
jae
or
mov
and
aad
pop
sbb
rclb
imul
dec
popa
sbb
test
outsb
and
sti
addr16
addr16
push
or
or
rcrb
push
inc
cmp
cmpsb
insl
xor
adc
inc
jbe
or
jne
in
adc
aam
pop
shr
imul
mov
repnz
mov
jbe
bound
xor
xor
xchg
sbb
ss
fcompl
inc
loop
xor
dec
test
pop
or
out
pushf
js
sub
out
pop
shr
test
and
mov
aad
cwtl
iret
pop
call
and
outsb
mov
or
imul
mov
mov
out
imul
mov
jge
test
ja
push
cs
loop
pop
push
mov
call
imul
in
xchg
push
pop
clc
loopne
mov
xlat
bound
sub
mov
mov
decl
mov
lea
shr
push
mov
andb
sahf
mov
push
mov
mull
bound
paddsw
jle
mov
std
pop
cld
xor
sub
cmpsb
outsb
inc
arpl
call
stos
dec
andl
addl
outsb
movsl
push
dec
push
out
mov
das
push
test
loop
andl
or
dec
daa
adc
push
aad
dec
test
orl
rcll
je
in
scas
sbb
pop
cmc
and
out
cmpsl
aam
js
inc
jg
mov
xor
add
test
xchg
cmp
in
addr16
cmpsl
fucomip
flds
and
add
pop
sahf
cmpb
push
leave
data16
cmpsl
jns
sbb
sub
cmp
dec
iret
fbld
fwait
xor
push
dec
lods
add
push
loopne
inc
bound
cmp
or
addb
xchg
shlb
dec
stos
bound
imul
in
push
sbb
popf
xchg
mov
pop
and
jne
add
xor
hlt
pusha
lea
cmp
and
adc
arpl
mov
mov
stc
push
add
push
sbb
into
outsb
xor
int
lods
mov
xorl
clc
mov
mov
jns
fsubs
popa
mov
pop
adc
cli
std
rorb
insb
test
test
and
es
repz
jl
clc
push
mov
cmp
jge
push
dec
nop
ja
mov
pop
movsb
push
mov
add
jecxz
popa
mov
pop
ret
push
sub
lcall
js
lret
repnz
std
push
cs
test
or
pop
inc
sbb
pusha
or
cli
clc
fwait
jp
jle
xchg
inc
aam
daa
call
cmp
mov
pop
or
inc
pop
pop
fs
in
lcall
add
add
ret
sbb
or
andl
stos
leave
lock
xor
mov
add
cltd
cmpsl
jne
imul
mov
mov
mov
xlat
leave
cmpsb
dec
lods
shlb
mov
mov
sub
push
inc
jge
push
aad
jp
aam
repz
pop
mov
cmpsl
in
mov
lcall
outsb
mov
jg
sahf
shrb
bound
loopne
idivl
dec
shl
or
xor
inc
cmp
bound
jl
popa
sbb
pop
repnz
les
and
mov
lcall
scas
pop
addr16
and
adc
mov
cmp
add
mov
ja
andl
gs
repz
lods
scas
dec
insl
and
xor
pop
jb
pop
push
cmp
sub
cli
fldt
add
divl
bound
or
xchg
daa
stc
jb
mov
push
cwtl
andb
jmp
cmp
xchg
mov
scas
dec
pop
sbb
fs
mov
mov
pop
leave
or
and
xor
aam
dec
and
add
loopne
cld
outsb
gs
in
cmp
jmp
scas
and
pop
rcll
or
outsl
es
push
test
push
sub
cli
std
addr16
mov
lret
mov
inc
bound
stc
pop
push
lret
pop
cmpsl
xchg
pop
xlat
sub
xchg
push
cmp
add
jno
cmpsl
je,pt
mov
and
dec
pop
cmp
pop
mov
or
pop
pusha
fldt
and
cld
xor
popa
out
ss
jne
enter
jmp
arpl
dec
aam
inc
sub
pop
sub
lret
mov
fbstp
clc
pop
jecxz
cmp
jns
cmp
popl
test
outsl
add
mov
jno
inc
cmp
mov
es
inc
xor
iret
test
int3
sbbl
fcoms
jns
rorl
pop
mov
loopne
ja
push
or
and
outsb
outsl
ljmp
loope
mov
das
mov
bound
arpl
dec
push
ret
cmp
gs
lods
outsl
shll
aas
loope
rolb
mov
bound
bound
loope
call
mov
idiv
leave
popf
mov
out
adc
shll
push
and
jbe
push
mov
mov
jp
cmp
je
insl
push
or
test
inc
xchg
daa
out
daa
movsb
test
bound
pop
fs
cmp
cmc
fidivrs
enter
sbb
pop
test
sbb
add
adc
and
push
scas
or
dec
stos
xor
push
sub
jl
push
mov
dec
and
popf
shlb
adc
xchg
inc
dec
mov
dec
in
mov
and
mov
fisubrl
add
or
push
cmp
arpl
imul
mov
jae
insl
clc
or
push
and
sub
cltd
lods
or
push
sbb
imul
popf
sub
mov
push
push
mov
mov
adc
push
add
lods
mov
push
and
mov
jge
ffreep
and
xor
jmp
sub
adc
dec
cmpb
jb
push
in
test
lock
repnz
dec
sub
mov
stos
sbb
js
push
pop
jno
jae
data16
push
fdivl
nop
data16
lret
rcr
xorb
test
lods
int
sub
pop
and
das
stos
pusha
pop
add
sbb
in
push
dec
sub
mov
sub
mov
mov
mov
aaa
jg
jne
cmp
shll
pop
andb
dec
fdivrp
jge
jmp
jno
pop
aaa
imul
pop
and
fcompl
lcall
adc
cwtl
mov
fdivrs
mov
pop
push
in
out
in
push
push
push
lock
xchg
repz
adc
dec
imul
add
ret
mov
into
ja
test
push
imul
shlb
mov
mov
dec
pop
push
ja
add
movsb
in
les
inc
inc
aaa
popf
sbb
pop
push
rep
xchg
dec
leave
rorb
fsubs
add
or
shll
fstps
dec
mov
sbb
mov
cli
and
lock
xor
cs
push
fwait
dec
pop
sub
test
or
xchg
out
push
loop
js
gs
bound
lock
aam
lock
push
xchg
ficoms
sub
mov
daa
mov
out
test
add
pop
test
push
sbb
out
add
mov
add
fsubrp
jl
push
push
sbb
fisubs
and
inc
sub
push
jmp
and
or
cmp
int
sub
test
jno
push
mov
inc
mov
adc
ds
inc
jne
mov
xor
push
jg
mov
lret
sbb
mov
js
or
and
aas
sub
dec
es
xor
jp
test
pop
ja
mov
cs
mov
enter
mov
pop
aam
shlb
out
lea
mov
jmp
add
cmp
adc
out
ja
xchg
scas
dec
and
ds
mov
lods
insl
nop
fisubrl
pop
out
cmp
popf
mov
mov
movsb
repnz
je
lods
inc
mov
pushf
test
testl
sbb
push
insl
jle
or
adc
push
mov
es
stc
out
inc
out
dec
mov
dec
add
xchg
clc
or
xchg
mov
jb
movsb
fsubl
jl
pushf
nop
lods
shrb
add
mov
pop
mov
sub
mov
gs
bound
push
outsb
xlat
cmp
cs
mov
and
xor
pop
ja
loop
gs
jle
enter
inc
sahf
xchg
push
sub
mov
out
in
jo
cmp
push
and
ss
xchg
push
jne
scas
leave
sti
sub
jo
sbb
and
dec
pop
bound
lahf
lods
mov
and
xlat
or
ljmp
dec
mov
adc
repnz
mov
daa
jg
jbe
je,pn
scas
inc
sub
push
stos
outsl
pop
popf
aam
jl
mov
and
icebp
add
cmpsl
mov
pop
inc
stc
fnsave
int3
jmp
repnz
out
adc
sub
shrb
pop
jnp
sub
pop
in
data16
pop
insl
loopne
adc
mov
data16
outsl
arpl
sub
mov
mov
stos
inc
pop
test
and
jle
cmp
push
fidivrl
bound
call
push
lods
sub
mov
sub
push
mov
shl
dec
ja
mov
lds
aaa
rcll
lcall
imull
fisubrs
ret
bound
rcll
lret
int
fsubrl
mov
push
xchg
push
mov
into
or
lock
shrb
jo
jge
cmp
mov
imul
adc
mov
loop
jmp
outsb
aam
mov
pop
daa
inc
add
loopne
pop
lret
mov
inc
dec
sub
shlb
mov
and
sbb
je
jae
leave
cmpsl
adc
adc
pusha
adc
cmp
cs
mov
repnz
mov
fs
inc
sub
sbb
inc
ja
push
movsl
cmpsb
test
dec
mov
mov
scas
pop
sub
imul
in
cmpsb
jg
leave
mov
and
dec
imull
pushf
shrl
fmuls
push
shr
lea
fbstp
fsubr
cmp
push
ja
addl
das
inc
popf
mov
stos
dec
in
je
mov
pop
dec
std
pop
cmp
call
mov
mov
cs
push
out
xchg
pop
jecxz
jne
jmp
outsb
test
ret
bound
push
cli
mov
in
or
push
and
sbbl
ret
stc
sub
stos
stos
pop
dec
test
adc
cmp
cmpsl
xor
rcrl
xor
outsl
ljmp
sbb
dec
outsb
jmp
sbb
lahf
mov
push
jae,pn
pusha
sarb
sub
movsb
pop
outsl
movsb
call
or
pop
cmp
push
inc
lahf
dec
pushf
shl
dec
pop
cwtl
push
and
ret
lea
pop
popa
or
mov
and
cmp
popf
ss
into
xor
ljmp
lea
arpl
mov
mov
lods
dec
fisttps
leave
mov
leave
dec
test
xchg
fistpll
sub
and
or
xchg
out
jmp
daa
cmc
std
aam
ror
stos
mov
pop
or
jg
adc
jne
test
mov
lods
mov
lods
andl
aam
test
push
cltd
add
xor
add
sbb
rcrl
in
sti
mov
cs
rcll
mov
cmpsl
les
shlb
rcll
fsubr
les
push
xchg
ljmp
sahf
test
inc
fidivrs
mov
jle
mov
outsb
call
or
shrb
adc
sub
cmpsl
fs
enter
icebp
bound
lcall
arpl
pop
mov
aad
mov
in
xor
dec
daa
sub
aas
pop
lods
pop
sub
ds
lret
mov
addr16
push
mov
sub
mov
adc
fs
add
int
sub
add
push
aam
cmp
ss
adc
mov
push
sub
mov
shrb
das
test
iret
faddp
sub
pop
aam
add
js
popf
sti
fsubrl
sub
inc
ret
cmpsl
call
rorb
push
rorb
pop
rcl
and
inc
cmpsb
ret
jp
sahf
xchg
sub
nop
add
cmp
sbb
sub
in
jns
fmul
xor
dec
mov
push
pusha
roll
mov
xor
adc
or
out
sub
push
fldenv
add
sub
aas
sub
inc
mull
xor
repz
frstor
sbb
cmpb
cwtl
jnp
or
out
scas
dec
pop
or
mov
rolb
sbb
inc
inc
mov
xor
sub
stos
sub
xchg
mov
lods
insb
jecxz
loop
aam
jne
es
fldt
cmpsl
mov
cmp
xchg
into
ljmp
scas
and
mulb
push
adc
adc
sub
outsb
xchg
je
or
and
jbe
mov
pop
sbb
imul
push
add
sub
and
pop
sub
loop
cmc
in
sub
nop
inc
ja
sub
rorb
imulb
adc
cli
movaps
in
push
cmp
popa
and
mov
icebp
movsb
xlat
inc
pop
cmp
lods
sub
inc
and
leave
add
jecxz
arpl
jle
test
xorb
outsl
loop
dec
inc
mov
sti
jns
or
js
je
cmp
cltd
sub
lahf
cmpsl
or
mov
dec
sub
push
scas
xchg
sub
mov
push
aaa
sub
and
or
push
sub
sub
loopne
mov
mov
sub
mov
subl
mov
xor
sub
imul
and
sbb
mov
mov
sub
mov
cli
fistpl
in
or
stos
mov
gs
cmp
dec
sti
pop
inc
xor
sahf
out
add
ds
xchg
imull
add
fildl
adc
jmp
loop
js,pn
sub
adc
lcall
sub
pop
mov
lods
into
punpckldq
mov
cmp
or
mov
mov
int3
popf
xchg
lods
stc
mov
sub
dec
mov
mov
lds
out
sub
jb
hlt
and
inc
stos
cli
jecxz
cmpsl
scas
sbb
jl
xchg
or
sub
aam
mov
mov
ret
jecxz,pn
rorb
push
adc
imul
test
xchg
js
inc
xchg
nop
xchg
outsl
stos
aas
dec
pop
hlt
sub
xor
or
cmpsl
pop
xor
and
and
add
inc
mov
cmc
xchg
sub
push
popa
enter
and
jo
shlb
inc
cld
pop
and
cmp
ja
xchg
jmp
ror
js
repz
test
add
or
mov
jae
sbb
and
jmp
test
jecxz
dec
cmp
in
pop
adc
rol
xor
push
xchg
or
pop
test
filds
and
pop
fcompl
add
sub
cmc
inc
sub
jle
test
ror
sbb
mov
popa
je
xor
xlat
inc
push
push
incb
mov
adc
out
sub
cmp
dec
sbb
clc
mov
add
xlat
or
ss
ret
les
fisttpll
idivb
pop
imul
adc
sub
add
in
and
sbb
or
shll
in
call
mov
mov
add
subb
sub
test
pop
sbb
xlat
jl
pop
inc
out
int
sub
mov
jbe
fs
mov
enter
pop
cwtl
xchg
sbb
and
cmp
jno
test
inc
sub
dec
pop
sub
add
push
adc
mov
addr16
sub
adc
aam
sub
aam
push
sub
inc
and
sub
bound
xor
sub
mov
push
adc
and
sbb
xchg
out
dec
adc
clc
sub
pusha
lock
mov
jp
xor
mov
test
ds
lcall
jno
cmp
and
cld
cmc
iret
adc
loope
sub
adc
sub
and
mov
test
xor
cli
std
add
ficoml
add
fisubs
sub
out
jnp
or
xor
sbb
sub
and
sub
pop
movl
imul
dec
and
loop
sub
pop
pop
adc
push
lahf
jmp
mov
enter
insl
mov
push
sub
cmp
xchg
sub
sbb
test
aad
repnz
loope
inc
add
sub
sub
sbb
into
sub
les
push
sub
repnz
pop
and
sub
das
arpl
lods
ficomps
mov
cmp
cwtl
jbe
xor
mov
sub
jl
fists
dec
rcll
inc
popf
mov
xlat
repz
jecxz
lret
push
pusha
roll
nop
push
sub
xchg
xchg
mov
int3
loop
jecxz
gs
add
and
sub
adc
aas
mov
and
cltd
xchg
rcrl
mov
lahf
cmc
clc
xor
and
addr16
mov
int
mov
cmpsl
push
jno
lea
sub
dec
xor
push
lcall
int3
dec
test
rol
jnp
mov
in
mov
sub
addr16
sub
lcall
daa
jno
test
cli
and
dec
adc
mov
sub
out
sbb
sub
adc
jae
je
arpl
sbb
hlt
sub
push
shrb
shrl
mov
mov
addl
adc
or
loope
dec
jno
cmp
mov
lret
jmp
cmp
sub
stos
xchg
pop
and
push
fwait
lret
bound
lock
je
xor
pop
sub
ljmp
pop
cli
cs
lock
leave
loopne
or
sbb
xchg
sub
xchg
scas
sbb
mov
mov
mov
jb
fldt
icebp
adc
xor
mov
adc
shl
ret
jmp
daa
or
mov
fisttpll
sub
test
sub
mov
fs
lods
testl
and
add
addr16
rclb
xchg
push
mov
rcrb
and
push
xchg
xor
cmp
pop
dec
xchg
push
xchg
push
lds
aad
clc
push
push
daa
jns
xor
ds
sub
pop
leave
bound
outsl
dec
inc
pop
mov
sbb
ja
cmpsb
rolb
mov
mov
cmp
int
test
and
inc
or
js
js
sub
mov
adc
ret
dec
xchg
xlat
call
jg
arpl
out
jb
or
das
rcrl
mov
push
push
xchg
cmp
movsl
iret
sub
rorl
mov
scas
pop
sub
xchg
cwtl
aam
arpl
xor
and
pusha
or
fldt
out
sub
lahf
aam
movsl
or
bound
inc
out
inc
xchg
sbb
cs
push
dec
loope
jl
imul
xor
jnp
add
scas
and
andl
sub
shl
fwait
lds
mov
test
or
imul
cmp
rolb
pop
in
fildl
mov
jg
jg
bound
fimuls
fstps
push
or
not
mov
sahf
aad
insb
lods
mov
mov
inc
dec
inc
sub
iret
push
and
lcall
xchg
std
loopne
pop
xchg
mov
add
add
daa
iret
subb
stos
dec
int3
add
mov
mov
sahf
lcall
xor
addb
insl
iret
test
pop
xchg
dec
iret
cmp
add
jmp
dec
push
pushf
xchg
mov
cld
push
push
scas
ror
jnp
push
bound
and
scas
sub
push
leave
cmpb
sbb
dec
cmp
adc
pop
push
pop
dec
dec
js
scas
jmp
cmp
jg
or
fdivr
loopne
lret
adc
jne
popa
or
pop
dec
pop
adc
lahf
cld
test
sbb
bound
lds
add
lods
jne
push
adcl
addr16
in
sbb
adc
sarl
test
insb
xchg
bound
imul
addr16
pop
dec
jns
gs
pusha
mov
inc
cltd
cmp
ja
bound
fstp
jb
xchg
inc
stc
xor
mov
addr16
push
testb
adc
nop
mov
lods
mov
xchg
cld
cmpb
in
testl
lods
outsl
cmp
addl
in
add
xchg
sub
pop
nop
loop
rcr
inc
pop
daa
sub
xor
rcll
decb
add
movsl
vphsubdq
sbb
pop
aaa
scas
aas
data16
icebp
xchg
js
push
push
ret
clc
sarb
bound
clc
leave
xchg
mov
inc
sahf
testl
mov
inc
test
xchg
jb
popf
sub
out
ljmp
xor
jmp
or
cs
lahf
dec
or
into
inc
push
cs
mov
inc
xchg
out
stos
hlt
bound
outsb
push
pop
add
pop
sbb
mov
cmpsb
aas
jge
in
fs
daa
mov
ds
clc
mov
sti
stc
xor
imull
lds
sbb
pop
inc
sahf
and
mov
outsb
test
ret
cltd
sbb
loope
or
lock
movsb
cltd
mov
lea
imull
dec
bound
xchg
cmp
into
mov
cmp
add
inc
push
repz
insl
subl
lods
push
shll
push
push
pop
icebp
push
dec
or
les
mov
add
dec
ja
call
xchg
call
mov
aaa
push
jle
shlb
addb
ficompl
sub
stos
pop
adc
pop
inc
xchg
cmp
mov
sti
pop
in
repz
out
sbb
leave
mov
lahf
sub
mov
inc
cli
adc
adc
xchg
aas
sub
sahf
push
add
cmp
outsl
lret
jmp
or
js
stos
xor
xor
or
xchg
sbb
stos
nop
push
push
shll
cwtl
jmp
loop
fdiv
in
add
stc
lock
test
aam
pusha
rcr
add
stc
ja
sbb
shlb
pushf
rcll
add
pop
mov
sub
xor
in
out
dec
ud2
insl
lock
gs
and
popa
lret
test
or
xchg
push
inc
or
mov
inc
leave
scas
scas
cmp
and
int3
stc
clc
push
icebp
add
inc
maxps
gs
fucomp
xor
shl
jno
jp
cmp
add
ja
add
ret
das
into
add
adc
jns
clc
icebp
fldl
xchg
sarb
jecxz
testl
jae
loopne
jge
sub
icebp
or
cmp
push
xor
pop
in
or
adc
jl
xor
mov
in
cmp
jle
inc
add
iret
jl
sub
cmpb
subl
popa
das
jns
adc
iret
inc
rcrb
inc
mov
xchg
pop
mov
mov
int3
adc
clc
lcall
push
rclb
test
popf
addr16
popf
cmp
loop
fwait
int3
mov
clc
xchg
inc
mov
or
dec
pop
sub
or
scas
mov
pop
subl
cmp
pop
or
mov
push
hlt
mov
push
jge
cs
into
pop
add
push
movhps
jg
add
jl
icebp
cmp
or
mov
rcrl
sub
cmp
fistps
test
xchg
jle
xchg
clc
add
outsb
push
lods
sub
push
popf
push
clc
mov
sahf
call
xor
sub
mov
imul
gs
subl
inc
xor
xlat
inc
leave
negb
clc
fiaddl
cmp
push
scas
je
dec
xchg
or
repz
std
adc
cmpsb
push
jp
inc
in
shll
jmp
push
test
jns
and
popa
mov
outsl
xor
sahf
inc
or
fdiv
roll
jae
pop
daa
je
adc
ja
jp
lahf
and
filds
push
push
and
popf
add
jg
dec
test
mov
roll
in
jmp
dec
pusha
shlb
push
adc
mov
or
ret
mov
aam
arpl
and
cmp
adc
mov
sub
adc
push
pop
mov
bound
lods
jg
add
gs
xchg
pop
jl
push
and
test
jne
xchg
pop
sbb
xchg
or
fildl
subb
pop
cmpsl
out
clc
sahf
dec
mov
lods
push
xchg
pushf
dec
lea
test
cwtl
add
daa
int
pop
sbbl
and
sbb
je
xchg
je
mov
insb
lods
pop
lret
fnstenv
push
mov
sub
xchg
movsb
loopne
jae
pushf
mov
or
lods
out
inc
and
mov
and
mov
sub
ds
push
adc
inc
clc
sbb
cmc
incl
add
jg
sbb
dec
xor
ret
adc
mov
outsb
xchg
cmp
gs
dec
lods
ja
adc
push
inc
pop
pop
add
lret
bound
xor
mov
je
or
adc
jno
or
fs
iret
pop
leave
jg
cwtl
mov
cmc
iret
mov
xor
mov
mov
cmp
jbe
pushf
add
adc
cmp
jmp
lods
dec
insl
mov
test
lods
and
xchg
add
js
rorl
jmp
in
sti
rorb
popl
sbb
lahf
test
push
pop
mov
dec
scas
mov
adc
cmp
inc
mov
ljmp
inc
out
mov
and
mov
inc
mov
mov
adc
xchg
lcall
jmp
mov
pop
out
ret
js
arpl
addr16
push
call
xorb
push
cli
mov
insb
lds
mov
xchg
out
jecxz
xlat
into
cwtl
subl
stc
daa
scas
popf
xchg
lods
pusha
iret
cmp
test
push
int
imul
dec
xor
sub
out
pop
ja
sbb
mov
jns
adc
cld
push
pop
rclb
add
outsl
pop
aaa
inc
push
ret
or
xor
push
jo
cmp
xchg
and
add
or
insb
daa
adc
pop
cmp
jg
jns
inc
inc
pusha
test
lods
out
ds
daa
sbb
bound
mov
adc
push
nop
push
mov
xchg
add
adc
div
in
gs
cmp
xchg
sbb
mov
adc
outsb
push
das
inc
jo
sbb
xor
push
and
scas
or
lahf
xchg
push
jbe
lahf
dec
jo
or
scas
and
cs
push
imul
sbb
push
imul
mov
cmpsl
scas
bound
inc
push
repnz
pinsrw
push
add
push
out
and
shlb
mov
js
stos
inc
mov
data16
ret
lods
scas
or
ja
rorb
xchg
push
sub
adc
mov
mov
cmp
cmp
mov
sti
jno
or
mov
loopne
and
xchg
scas
pop
js
loop
enter
repnz
mov
jnp
adc
cmpsl
fadds
in
and
sti
xchg
or
int3
jb
shll
bound
pop
out
and
or
push
add
jp
insb
add
enter
outsb
aam
xor
push
jl
lock
cld
sub
dec
popf
leave
adcb
lock
sub
jo
push
inc
xchg
mov
dec
lahf
xchg
push
popa
push
je
dec
push
iret
sbb
out
popf
lods
mov
inc
data16
xchg
pop
push
das
or
xchg
add
fldcw
dec
ja
and
daa
ss
fidivs
cld
and
lods
adc
jne
lret
inc
out
andl
or
std
shrb
dec
jecxz
lea
rol
lds
pop
sbb
mov
dec
push
cmpsl
cmp
movsl
sbb
out
or
movsl
cmpsl
int3
lcall
sbb
sbb
outsb
fcompl
arpl
adc
shll
out
shrl
inc
or
and
push
cmc
je
add
pop
popa
rorl
push
bound
fsubrs
dec
add
leave
sub
jg
cmp
jl
mov
inc
movsl
std
leave
xchg
add
pop
lock
push
or
aad
push
repz
in
sub
sarb
pop
jno
mov
and
pop
and
xchg
push
sub
out
shlb
lret
out
dec
cmp
lahf
call
xchg
js
ja
pop
push
cmpsl
add
jge
push
cmpsb
in
nop
add
mov
outsb
jne
mov
xor
call
xchg
fdivl
fmull
dec
lahf
jae
jae
push
fisubs
aas
sub
ds
js
xor
int3
outsl
jge
mov
mov
daa
add
sbb
cltd
xchg
inc
pop
cmp
pop
test
xchg
add
rorb
xchg
shll
nop
mov
push
insb
ss
jno
and
fstps
sub
lods
pop
xchg
or
sub
push
mov
mov
xor
int
jne
fsubrs
and
popa
sub
inc
lea
test
loopne
pop
mov
imul
ja
fldenv
cmp
sub
outsb
mov
push
gs
jmp
jg
push
cli
cmpsl
sbb
push
push
or
push
sbb
jnp
jb,pn
arpl
push
jns
cmpsb
and
iret
sbb
in
mov
xchg
outsb
idiv
dec
out
sbb
push
stos
pop
cmp
push
jno
mov
or
sbb
push
and
ficoml
cmpb
mov
outsl
lods
adc
loopne
test
andl
push
mov
ret
push
iret
mov
je
mov
movsb
push
sub
notb
adcb
bound
inc
outsl
and
daa
and
xlat
and
outsb
inc
jnp
stc
dec
mov
lods
dec
fiadds
enter
jno
in
push
jg
popa
mov
addr16
imul
cmp
ja
cs
push
dec
leave
movsb
daa
jae
loopne
push
popf
gs
int
outsl
mov
and
or
bnd
jmp
mov
mov
insl
mov
and
out
scas
loopne
popa
rorb
and
mov
cmp
xchg
xor
xchg
in
dec
shrb
xchg
add
ficomps
mov
stos
pop
sti
cmp
inc
movsb
and
jle
dec
push
add
pop
pop
pop
lds
hlt
fsubrp
ret
pop
push
outsl
add
jp
fucomi
and
push
and
xchg
les
rcrb
and
movsl
enter
inc
aam
push
pop
lea
pop
mov
movsb
push
cmp
jno
outsl
pusha
xor
jne
outsl
sub
mov
popf
leave
loope
je
dec
daa
pusha
xchg
jge
and
bound
std
xchg
mov
in
inc
push
icebp
push
fcmovu
adc
xorl
mov
and
shll
mov
jle
cmpsl
xchg
cmc
dec
lods
fdivr
adc
jno
mov
cli
cltd
cmpsl
lahf
mov
int
inc
into
data16
xchg
mov
pop
fmull
push
sub
xchg
test
fcoms
int
push
cwtl
sub
dec
inc
mov
cmpsb
outsl
or
add
sbb
test
jecxz
push
pop
test
mov
push
mov
xor
push
ret
sbb
popf
mov
flds
cmp
insl
dec
or
inc
es
mov
addr16
push
rcrl
jne
int
call
std
mov
xchg
add
mov
test
pop
dec
in
addr16
bound
data16
inc
test
setp
lcall
sti
xchg
dec
fnsave
fs
adc
andb
neg
popa
cwtl
lahf
cld
xchg
outsb
dec
add
cltd
push
cmp
jecxz
jbe
loopne
stos
or
fistl
jp
push
xor
insl
push
pop
mov
inc
test
es
sbb
sti
pop
sbb
mov
movsl
sbb
dec
lret
pop
push
test
mov
fucomip
hlt
mov
test
iret
and
inc
add
add
jo
mov
in
cld
mov
dec
std
std
cmp
dec
sahf
into
xchg
dec
loopne
xchg
arpl
dec
or
add
and
gs
add
pop
in
cwtl
stos
or
iret
dec
sub
mov
int3
sub
and
lcall
ja
mov
arpl
lea
sbb
cmpsl
sub
test
jl
out
sub
xor
cmpsb
lds
clflush
sub
ror
sbb
cld
adc
xchg
and
pop
sub
imul
icebp
daa
or
mov
inc
mov
loopne
lcall
jl
xchg
into
int
xor
aad
cmp
sub
pusha
loope
xchg
add
mov
mov
inc
sub
mov
testl
sub
js
jg
sub
popf
aaa
or
mov
std
or
lcall
cmpsl
ret
xor
jecxz
leave
and
movl
inc
cmpsb
imul
nop
testb
sub
inc
insl
mov
cwtl
iret
pop
repz
test
cli
pop
sub
mov
add
cltd
aad
adc
subl
mov
cmp
xchg
ljmp
insb
mov
sahf
push
ljmp
dec
xor
and
clc
in
out
jns
jo
mov
loop
in
pop
and
dec
add
lcall
lds
sub
lcall
idivb
or
fidivl
lods
filds
sub
loop
push
in
sub
mov
icebp
sbb
adc
mov
mov
sub
push
ja
ss
in
sub
sub
cmpsb
roll
cltd
call
dec
stos
out
lods
xor
out
loopne
push
xchg
sbb
cli
subb
andl
sbb
push
xor
hlt
sub
pop
subl
sub
adc
or
sub
test
xor
or
lock
sub
push
add
int
aam
pop
inc
pop
xor
mov
pop
jl
xchg
adc
mov
jecxz
sub
fstpl
ljmp
ja
div
cmpsb
push
jo
sub
or
and
ljmp
leave
fdivs
xor
rolb
stos
sub
rcrb
push
jbe
call
sub
shlb
loope
push
cmp
xchg
cmp
sub
mov
mov
dec
movsb
and
mov
test
pop
mov
jp
mov
xchg
sub
and
push
dec
mov
mov
inc
ret
and
pop
push
repnz
dec
sub
into
and
icebp
xchg
or
push
gs
cmp
mov
insb
mov
xchg
in
mov
sbb
mov
push
jg
add
jge
mov
push
fldenv
aam
dec
xorb
lahf
dec
pusha
jno
jo
sbb
mov
jns
mov
shll
js
inc
dec
lods
ror
pop
jg
push
ljmp
lods
ja
xchg
out
test
dec
loope
in
cwtl
push
ljmp
loopne
cmp
mov
fistpl
lods
popf
push
mov
xor
jge
dec
mov
mov
cmp
xchg
push
mov
dec
push
cmc
mov
sbb
cmpsl
cmp
iret
mov
mov
sub
ja
popf
gs
mov
jl
or
shl
lret
leave
mov
pop
add
jno
outsb
inc
cld
push
nop
pop
pop
outsl
idivb
sub
sub
subb
ret
in
push
in
or
repz
cs
and
add
jae
push
mov
add
xchg
bound
or
popf
daa
sub
in
inc
sub
scas
inc
rcrb
iret
cs
sub
pusha
inc
rorb
and
or
mov
das
test
pop
xchg
xor
or
stos
push
lahf
sarb
scas
subl
adc
sub
or
insl
ret
scas
lahf
mov
js
fidivrs
dec
jns
adc
fsubs
fildll
pop
test
movl
jne
mov
shrl
sub
inc
xor
dec
clc
mov
dec
sub
test
pop
mov
mov
hlt
cltd
sub
testl
mov
cmpsb
sub
and
outsb
adc
mov
mov
movsb
shl
outsl
imul
xchg
bound
cli
sub
pop
xchg
or
add
push
jmp
lcall
push
mov
insb
jo
pop
lcall
fdivr
je
sub
cmp
cld
xchg
inc
add
mov
insb
push
pop
adc
jo
sbbb
lds
call
bound
imul
add
jle
out
or
push
cli
sbb
mov
pop
mov
out
addr16
mov
mov
xchg
scas
into
in
in
xchg
push
xchg
fs
loopne
fwait
jg
cmp
xchg
mov
rorb
dec
in
or
sub
test
dec
sarl
arpl
jno
popl
push
jmp
mov
repz
out
xor
jmp
out
pop
hlt
xchg
mov
push
js
lcall
stc
addr16
push
adc
scas
inc
imul
or
jno
clc
cmp
add
mov
or
popa
pop
sub
xchg
or
jl
push
in
add
popa
adcl
aad
pushf
data16
call
stos
out
mov
sub
push
shll
xchg
insb
push
jno
test
xor
cmp
outsb
adc
mov
insl
xchg
mov
push
insb
push
jg
test
cs
cmc
push
or
lods
pop
arpl
fistps
test
clc
dec
push
imul
daa
out
sub
cli
clc
add
sub
aam
or
pop
push
cmp
xorl
test
sub
ja,pt
dec
test
test
dec
push
xlat
leave
or
decb
lcall
repz
adc
jge
mov
adc
add
and
test
test
iret
cmp
ja
pop
cltd
cli
mov
call
lods
pop
mov
xchg
bound
or
dec
and
mov
enter
or
xchg
sbb
int
ljmp
mov
mov
sti
cld
push
push
jmp
xor
xor
shlb
push
push
in
jmp
lahf
mov
sbb
cmpsl
dec
frstpm(287
xchg
mov
sub
inc
dec
roll
movsl
lcall
cli
and
lods
sub
in
out
test
clc
rolb
sub
fistps
jmp
stc
mov
stos
cwtl
xchg
sarl
push
cmpsb
sub
inc
push
outsl
mov
sub
jmp
mov
sub
shrb
icebp
sahf
inc
cmp
enter
lods
pop
adc
lcall
iret
in
ljmp
ds
les
dec
in
mov
xlat
mov
pushf
mov
or
outsb
lret
and
roll
sbb
jo
shrl
and
outsb
faddl
out
cwtl
dec
sub
push
jge
fbld
shlb
popa
ss
mov
adc
mov
cmp
outsb
push
lds
pop
in
out
movsl
mov
adc
jne
jmp
fdivrs
rorb
out
testl
imul
cmc
mov
enter
je
push
dec
lret
and
ret
or
pop
or
into
xchg
sub
pop
mov
aam
aad
mov
push
sarl
cld
imul
int3
and
mov
es
jno
jl
mov
mov
mov
cmp
mov
add
inc
jae
cmp
lahf
repnz
pop
jecxz
push
test
sub
xor
arpl
add
stos
je
xchg
or
push
cmp
sub
sub
sub
bound
or
push
adc
out
mov
stos
inc
cmpsb
les
bound
out
and
fadds
xchg
out
cmp
sbb
adc
pop
sbbl
clc
andl
pop
arpl
aam
pop
sub
sarl
or
subb
push
nop
push
jo
call
pop
incb
xor
jge
lcall
sbbb
stc
mov
push
aas
cmp
push
jo
repnz
adc
adc
push
ds
cmp
scas
and
or
mov
shlb
repnz
fmulp
sub
repz
xchg
sub
or
negb
lods
and
xor
jg
adc
inc
sub
in
cmp
out
and
jle
mov
sub
ljmp
stos
imul
adc
adc
sub
inc
fimuls
in
pop
lods
aad
ljmp
xor
iret
push
jecxz
stos
aam
stos
test
jg
and
jl
push
adc
inc
sub
rcll
loopne
xor
ja
ds
loop
pushf
push
arpl
dec
subb
cmpsl
sub
loope
das
fidivl
stc
pushf
mov
cmpsb
cmp
ret
pop
dec
push
pop
int
orl
jge
test
sub
bound
sbb
sub
push
adc
mov
out
adc
and
pop
xchg
xor
shlb
shll
cwtl
fisubl
xchg
mov
aad
inc
in
and
mov
sub
data16
and
gs
or
xchg
and
jbe
sbb
les
bound
frstor
mov
int
arpl
jae
sub
or
add
mov
cs
sub
mov
and
sbb
adc
and
sar
xor
xchg
repz
sahf
test
sub
xchg
adc
in
lret
sub
aas
push
push
sub
pop
adc
fdivr
mov
push
jmp
inc
mov
sub
sub
jge
cmp
mov
push
insl
ds
out
dec
lods
andl
push
aad
ljmp
movsb
jbe
ss
fisubrs
cmp
les
loop
add
and
hlt
jae
sbb
mov
and
fldcw
stos
and
sub
pop
push
test
retw
xchg
or
outsb
sub
add
sbb
xchg
add
cmp
lahf
scas
mov
pop
in
sub
loop
add
and
cwtl
mov
out
sbb
xchg
jg
popf
xor
inc
add
mov
bound
sub
jl
jb
shll
push
sub
push
aad
add
ficompl
sti
std
mov
test
notl
jle
daa
xor
cmp
inc
push
iret
push
imul
ret
pop
pop
push
push
or
push
flds
mov
and
test
gs
test
jge
xchg
mov
imul
fwait
adc
and
and
pop
or
jg
cmp
push
jmp
push
dec
testl
inc
pushf
fadds
add
out
sarl
xchg
fstpt
jae
pop
imul
fadds
enter
jmp
xchg
sbb
add
mov
fsin
or
jge
addr16
xor
leave
cld
lock
imul
mov
sbb
xchg
shrb
jge
in
cmpl
inc
dec
fisubl
popf
add
sbb
bound
xchg
daa
lods
outsb
out
aad
rorb
xorl
push
imul
outsl
push
lret
mov
sbb
mov
incb
cmp
repz
aad
or
push
call
push
sbb
mov
out
mov
iret
andb
xor
outsl
aad
ja
mov
push
loope
dec
pop
cmpsb
sbb
push
xchg
repnz
cs
sti
aad
mov
inc
sbb
pop
adc
cmp
daa
push
dec
addr16
fsubrs
outsb
add
insl
loope
push
enter
shrb
mov
pusha
jg
dec
testl
lds
sbb
add
push
leave
fimull
mov
dec
push
je
cmp
add
jmp
mov
mov
andl
xor
adc
scas
daa
icebp
dec
cmp
xchg
int
idivl
popl
push
mov
clc
ds
pop
jp
jle
jb
cmp
outsb
adc
iret
cmp
mov
push
js
and
mov
cs
add
push
jmp
sub
inc
cmpsl
cmp
ds
ja
outsb
fisttps
test
in
mov
jle
mov
inc
jp
into
jle
fsubs
pushf
mov
fwait
lods
push
popa
or
lret
rcl
push
pushl
push
test
lods
adc
lods
push
xor
scas
mov
in
xchg
sub
or
or
jmp
out
dec
mov
insl
and
imul
xchg
xchg
or
fs
xor
out
pxor
lea
out
inc
das
dec
and
sbb
push
cwtl
dec
pop
bound
sub
iret
mov
mov
divl
add
aaa
les
inc
loopne
fcomps
sub
call
push
leave
das
icebp
test
and
mov
xor
addl
scas
sbb
adc
movsb
cs
loop
sub
imul
adcb
lds
out
ret
int
add
int3
loope
add
mov
sub
push
out
adc
add
sti
pop
outsl
ja
or
cmpsb
sub
xor
push
nop
les
cs
aad
cmpsb
cmpsl
ret
sbb
sub
xor
mov
mov
dec
mov
rclb
scas
ja
add
xchg
fwait
into
add
pop
push
adc
and
movsb
out
adc
cld
and
mov
arpl
call
push
scas
xlat
sub
xchg
xor
imul
sub
mov
stos
lret
xchg
sub
mov
jmp
je
out
pop
cli
out
mov
ljmp
mov
cmpsb
dec
in
mov
sub
out
mov
push
sub
pop
xor
pop
push
mov
imull
loop
lods
cli
cmp
jecxz,pn
pop
or
push
sub
push
rcrb
xchg
clc
leave
push
rorb
xchg
fidivs
sub
pop
sbb
loop
imul
adc
lds
dec
inc
xchg
sbb
sarb
xchg
int3
sub
sub
mov
cmpsl
loop
subl
cltd
lret
xchg
daa
pop
mov
adc
clc
sub
and
inc
test
lds
dec
gs
negb
sub
jp
popa
cmp
adc
lds
sub
repnz
sub
dec
xchg
shll
aad
decl
sub
and
sub
loop
add
and
lret
lods
fildl
ds
loop
aad
push
in
jo
out
dec
sub
or
pop
sub
add
mov
pop
jns
lock
pushf
sub
loopne
aas
dec
sub
inc
in
push
sub
mov
dec
sub
outsb
popa
fsub
daa
sub
push
add
inc
xor
push
lcall
js
popa
iret
inc
xor
fldt
int3
dec
mov
dec
sbb
mov
inc
mov
mov
sub
pop
das
addr16
sub
icebp
pop
iret
adc
dec
test
rolb
mov
repz
or
sub
cltd
rcll
sub
daa
lret
addr16
popa
mov
andl
sbb
sub
loope
fdivrl
sub
aas
jne
clc
sub
repz
pop
sub
jns
lods
jo
dec
cmp
cmpsl
int
imul
jne
sbb
fidivrs
leave
mov
inc
xchg
fwait
dec
mov
sbbl
shl
addr16
lds
sbb
mov
dec
aad
sub
icebp
outsb
das
or
lret
test
sub
and
mov
mov
idivb
pop
sbb
pushf
sub
xorl
iret
pop
fdivr
xlat
push
and
mov
jnp
push
int
cmpsl
rclb
mov
xlat
sbb
inc
push
or
sub
repz
xchg
lret
outsb
mov
aad
sbb
test
stos
dec
sub
bound
out
sub
pop
mov
inc
and
movsl
mov
sub
adc
add
mov
pop
push
inc
loope
and
ret
bound
int
dec
and
insb
scas
fs
xchg
test
pop
daa
std
sbb
jge
fcmovne
adc
lea
rolb
mov
mov
lods
sub
hlt
cld
nop
add
cmpsl
clc
or
outsb
dec
prefetcht0
gs
mov
jae
gs
add
push
mov
lahf
jmp
fistpll
jae
inc
xchg
mov
or
fmuls
test
outsl
dec
jbe
and
bound
sbb
or
jno
add
adc
ds
push
cmp
xchg
sub
sarb
push
push
push
rolb
lods
out
pop
leave
stos
mov
jne
sub
xchg
test
add
sbb
lret
out
shlb
lds
xchg
mov
mov
sub
stos
push
sub
sbb
push
clc
daa
clc
leave
outsb
pusha
js
dec
ljmp
mov
cltd
jb
icebp
flds
inc
popa
lret
xor
mov
mov
lcall
jbe
nop
mov
popa
fidivrs
push
sbb
jbe
test
inc
adc
dec
sub
outsb
and
jns
dec
sbb
mov
mov
push
xor
cs
int
ljmp
xchg
pop
cli
ja
dec
jp
leave
fwait
jb
push
aas
in
xchg
jecxz
nop
fidivs
cmp
sub
out
push
rcrb
jmp
ret
mov
adc
das
cmpsl
in
jl
mov
push
dec
into
push
xor
cli
in
jo
divb
inc
sub
sub
sbb
daa
movsl
sub
jmp
add
arpl
andl
inc
scas
nopl
pop
ret
imul
cld
inc
and
or
adc
outsl
outsb
call
shlb
js
dec
lods
fxch
mov
fldlg2
dec
outsb
popa
fcmovnb
fisttps
xchg
lahf
sub
add
sub
int3
outsb
lahf
lea
addl
mov
sahf
mov
icebp
cmpsb
js
and
and
or
push
and
xchg
orl
ds
shll
stos
add
jge
test
mov
ds
push
mov
test
repz
outsb
add
ss
adc
cmp
sub
dec
bound
sbbl
ret
leave
pop
push
movsb
mov
out
cwtl
jge
jmp
dec
pop
mov
dec
imul
inc
dec
iret
jno
inc
inc
add
add
je
jae
je
pop
in
lods
push
xor
mov
mov
fldt
or
test
push
mov
add
das
jbe
test
mov
je
push
or
dec
mov
addl
int
dec
jle
fwait
adc
lods
or
leave
pop
cmp
ja
sti
call
je
cmp
dec
lods
or
outsb
mov
mov
std
divl
xchg
inc
push
popa
std
and
sub
xchg
add
in
or
and
out
ds
fs
arpl
mov
out
shrb
roll
adc
or
mov
imul
sub
dec
lret
js
jge
bound
mov
add
test
jp
or
sub
mov
sar
cmp
cmp
sbb
dec
fs
dec
mov
fistpll
xchg
out
xchg
lahf
daa
mov
add
pop
dec
or
cmp
pop
jne,pt
leave
inc
sahf
sbb
or
mov
push
lcall
movsl
add
fs
bnd
gs
lock
jg
fwait
mov
xchg
and
lahf
sti
cmp
mov
outsb
inc
mov
ss
jecxz
xchg
push
adc
in
int
cmp
or
daa
jg
mov
xchg
imul
gs
add
sbb
mov
lahf
mov
mov
daa
jno
jne
sbb
push
cmpb
cmp
subb
loopne
and
pop
roll
mov
or
sub
hlt
data16
xchg
roll
mov
push
push
daa
sbb
push
xor
mov
sub
outsb
stos
add
out
jno
not
or
out
mov
sahf
pop
sbb
scas
xor
cmpsl
xchg
jnp
pop
xchg
push
dec
inc
adc
fwait
or
fisubrl
lds
xchg
sti
aaa
lea
shrl
lea
push
divl
xchg
std
imul
fwait
xchg
aad
shrb
sbb
pop
movsb
stc
or
push
add
sbb
adc
pop
mov
subl
and
hlt
aaa
cmpsl
xchg
gs
push
data16
cmp
sbb
add
mov
xor
adc
lods
jo
mov
leave
pop
aaa
lods
push
jns
mov
mov
add
mov
mov
sbb
xchg
aam
sub
dec
mov
push
orb
ret
sbb
sbb
in
pop
mov
jb
in
lods
or
mov
je
cs
push
popf
xor
les
sub
mov
fsubrs
cmc
mov
mov
push
loope
jo
testl
fwait
je
jno
mov
insb
dec
lcall
fidivs
sbb
daa
cmpsb
out
aaa
inc
scas
push
shll
and
fildll
sbb
sti
in
adc
popa
jb
lds
insl
push
jg
mov
inc
stos
push
mov
sarb
mov
push
mov
hlt
add
fidivrl
call
cwtl
mov
adc
and
mov
pop
pop
iret
cld
je
mov
out
popa
sub
or
inc
dec
adc
sbb
call
pop
push
cmp
lahf
mov
cs
int3
out
dec
lods
scas
in
cld
pop
nop
test
xchg
sbb
or
mov
mov
imull
xor
mov
outsl
or
outsl
cwtl
sub
sbb
xlat
push
xor
rclb
cwtl
cmpsb
stos
test
jmp
es
sub
or
cwtl
testl
dec
fsubr
les
loop
cmp
jae
ret
cmp
clc
mov
and
cld
dec
outsb
movsb
adc
lds
jmp
in
cmp
int
out
popf
xchg
lahf
mov
bound
rorl
and
add
test
inc
push
cltd
mov
cmp
gs
gs
and
mov
mov
adc
mov
out
xchg
inc
cltd
outsl
push
lret
xchg
bound
xchg
outsb
loop
cwtl
mov
mov
test
adc
dec
or
leave
jno
xchg
jl
leave
add
fistps
test
adc
push
xchg
push
mov
aaa
fisttps
sub
out
sub
xchg
jp
push
stos
ss
outsl
in
adc
mov
frstor
adc
mov
push
push
xlat
je
iret
cmp
cs
xchg
int3
adc
shlb
jp
negb
xchg
popa
js
jg
dec
mov
adc
mov
hlt
loopne
sbb
das
in
bound
ss
shll
cmpsl
push
subl
ficompl
xor
adc
fsts
and
jnp
cwtl
jl
inc
or
jns
aad
mov
mov
add
popf
jo
sub
sub
push
inc
iret
and
inc
sbb
xchg
cmp
push
sub
jno
pop
int3
sub
daa
sahf
lcall
mov
jecxz
mov
adc
insl
sarb
and
mov
push
pop
xor
add
cmp
inc
stos
mov
int3
dec
mov
cmp
les
fwait
shlb
cmp
sub
xor
sub
ret
inc
or
pop
and
in
cmpsb
cli
sub
cmp
cmp
ficomps
xchg
inc
cmp
sub
je
adc
loope
adc
jmp
add
out
pop
pop
mov
fucomip
in
sub
sbb
psubw
mov
adc
ffreep
dec
xchg
mov
repnz
outsl
push
popf
aas
sub
fdivrs
lds
push
pusha
lods
ds
loopne
mov
sub
and
jb
xor
mov
sub
test
lcall
inc
cltd
loop
dec
sub
mov
push
out
push
dec
mov
cmpsb
sub
inc
std
adc
add
orl
dec
cmp
test
sub
add
pop
sub
ljmp
sbb
push
rclb
sub
xor
sub
push
adc
gs
mov
sbb
frstor
xchg
and
daa
hlt
mov
into
jne
or
xchg
cmp
roll
or
mov
scas
movsl
loope
adc
mov
fsubs
pop
mov
stos
xor
mov
dec
sbbl
outsl
pop
aas
iret
jnp
pushf
mov
mov
dec
dec
mov
pop
es
sbb
call
sub
jge
daa
lods
stos
mov
hlt
iret
sbb
fwait
mov
pop
mov
mov
ficoms
mov
repnz
sub
fadds
cmp
out
pop
add
sub
dec
xchg
xchg
inc
push
xor
outsb
dec
mov
and
fdivl
loope
imul
push
push
loopne
mov
insb
cmpsb
rcrl
aam
inc
mov
mov
sbb
xor
aaa
ds
mov
scas
cmpsb
jge
cmpsl
ds
lea
sti
mov
insl
xchg
and
stos
jle
cmpsl
pop
and
hlt
fs
fbstp
pop
push
leave
and
jg
push
or
adc
movsb
push
inc
push
or
jp
and
adc
test
sbb
jmp
dec
es
aas
xor
xor
adc
out
fldcw
cmp
pop
hlt
mov
sarb
dec
xchg
dec
xchg
shll
pop
out
jge
push
mov
adc
push
stc
and
xor
stos
call
mov
in
nop
scas
fsubrl
mov
push
imul
adc
jge
aaa
xor
adc
lods
mov
fists
xor
bound
cmpsl
iret
sbb
xchg
xor
inc
mov
rcl
inc
loopne
rclb
in
ret
insb
adc
loop
jge
faddl
ds
movsl
into
cwtl
jl
or
ss
leave
fwait
jmp
cwtl
sub
and
dec
subl
and
imul
pop
out
sub
ja
ljmp
sub
cmpl
fwait
test
jle
mov
pop
loop
int
testl
mov
pushf
push
ja
mov
ss
inc
add
mov
push
daa
outsb
aad
test
xor
or
aad
bound
or
shrl
ja
outsb
cwtl
loopne
lea
pop
lret
cmpsl
aas
pop
pop
add
leave
lret
iret
sub
cmpsl
cli
sarb
add
rcrl
cmpsl
pop
xchg
js
lahf
cmp
cmpsl
sbb
in
bound
cmpsl
mov
in
sub
adc
jno
test
lods
bound
loop
aam
fistl
adcb
pop
out
subb
loop
cmp
jecxz
push
mov
iret
xlat
lea
shlb
fwait
test
adc
xchg
push
std
mov
dec
out
jecxz
inc
js
cmp
or
xor
ljmp
loope
push
mov
or
aam
imul
sbb
pop
arpl
push
xchg
cmpsl
sub
cmpsb
mov
fcomi
xor
fsubrl
imulb
add
mov
popa
mov
mov
push
addr16
loope
frstor
fcompl
sbb
popa
insl
add
mov
cmp
push
push
pop
xor
jnp
mov
push
sub
das
xchg
rcll
popf
lcall
sub
push
in
xchg
lahf
and
xor
sub
and
push
ja
dec
mov
popf
leave
loopne
cltd
pop
mov
stos
outsl
mov
mov
ljmp
and
xchg
pusha
push
cmpsl
out
roll
cmp
dec
mov
jbe
jecxz
sbb
mov
enter
mov
xchg
pop
add
and
mov
jno
dec
pop
aaa
push
imul
cs
adc
scas
push
movsl
add
push
add
divb
xor
inc
jp
es
dec
mov
mov
jne
shll
stc
cli
loopne
sub
test
xor
jg
add
xchg
inc
mov
cmpsl
aad
sti
jne
ret
sbbb
inc
dec
cmp
cmp
gs
movsb
push
mov
loope
int3
aam
pop
mov
fcompl
sbb
insb
dec
mov
dec
push
clc
and
loopne
jno
sbbl
outsb
mov
nop
sahf
lds
ljmp
push
or
xor
int3
xchg
pop
cwtl
mov
popa
mov
push
cs
sub
icebp
xchg
sahf
adc
aaa
pop
adc
ficomps
mov
mov
aaa
mov
lcall
pop
lea
bound
mov
sub
lods
add
leave
xor
test
push
jne
sub
insl
inc
inc
push
cmp
inc
mov
add
pop
rorb
icebp
addr16
bound
mov
ret
repz
push
out
mov
mov
popa
mov
mov
inc
jo
cmp
lret
or
push
mov
push
outsl
xor
push
pop
or
pop
hlt
add
jne
cmc
inc
mov
xchg
push
xlat
cli
aaa
bound
stos
and
mov
scas
dec
lock
mov
mov
je
xchg
inc
pop
inc
adc
xchg
mov
jl
in
add
mov
cmp
rolb
cmpsl
add
cltd
lock
insl
cli
aas
xchg
sbb
pop
dec
mov
clc
dec
mov
add
imul
or
adc
mov
mov
test
dec
leave
sti
std
jp
call
icebp
mov
insb
stos
add
pop
jo
xlat
xchg
xor
dec
add
insb
xchg
iret
xchg
inc
add
aad
ficomps
imul
jle
data16
outsl
scas
add
outsb
lds
arpl
push
cmp
lcall
bound
lock
pushl
out
outsb
xchg
lret
nop
int3
push
mov
pop
jb
lock
sahf
test
jns
js
push
xchg
dec
adc
or
adc
dec
xchg
mov
xchg
insb
inc
int3
sub
shrb
imul
int
jge
in
ljmp
bound
call
jbe
cmp
pop
xor
sbb
add
adc
sbb
jmp
leave
les
outsb
and
xor
add
xchg
mov
pop
outsb
fldl
stos
adc
rolb
mov
pop
lret
arpl
scas
popf
bound
cmp
mov
popa
xor
jge
cmp
movsl
sub
test
push
es
fdivs
jae
dec
push
dec
shlb
daa
mov
out
cmp
outsl
jge
hlt
lods
gs
inc
xchg
cmp
fldl2t
add
dec
in
jbe
or
pop
push
push
leave
mov
ss
adc
out
aas
js
xchg
inc
mov
test
push
outsb
movsl
lcall
xor
sub
insl
lea
addr16
cmp
xor
mov
sbb
aas
ljmp
stos
jae
and
cmpsl
or
outsl
and
stos
push
push
mov
push
cmp
and
scas
imul
fsub
in
lahf
and
jl
jns
pop
xchg
dec
cwtl
das
adc
ds
xor
jg
lods
aaa
sub
gs
lcall
das
or
fwait
lock
or
test
and
loopnew
add
sbb
lods
lcall
test
mov
push
sbb
xor
jb
int
call
mov
pop
xchg
outsb
test
pop
jb
enter
jmp
inc
ss
and
push
lods
xor
pop
dec
or
pop
mov
jmp
mov
dec
and
outsb
add
pop
dec
insb
loopne
pop
das
sbb
sbb
or
lods
mov
or
sub
push
shlb
rorl
icebp
inc
rorl
cmpsb
lea
xor
xchg
cli
pop
cmp
cld
lahf
mov
and
in
clc
dec
clc
lds
ficomps
jno
or
add
outsb
fldt
lret
shlb
dec
inc
fisubrl
xlat
mov
fbld
mov
mov
xchg
xchg
inc
push
mov
ss
loopne
jne
cmpl
add
sti
cmp
jne
xlat
mov
inc
pop
cli
pop
mov
jg
pop
mov
leave
shlb
jg
push
aam
push
outsl
pop
add
mov
sbb
jg
or
loop
add
push
inc
sub
pushf
lock
pop
enter
in
ljmp
mov
mov
sarl
or
jno
sub
and
inc
lods
xchg
push
mov
cwtl
in
and
dec
cli
ror
mov
push
or
xor
jl
mov
stc
pop
popf
cwtl
ret
push
fnstenv
jo
shll
cmp
repnz
lahf
arpl
inc
icebp
pop
push
leave
dec
jns
pop
cmp
cs
mov
xlat
mov
out
stos
inc
out
dec
cmpsl
push
sbb
insl
lret
out
shlb
dec
push
pop
fistpll
and
jg
loopne
or
mov
xlat
xlat
dec
or
xchg
rcll
sti
pop
xchg
sbb
cmpsl
fldt
jecxz
sub
jae
ret
sub
mov
mov
jo
loop
ja
fsubp
mov
mov
jne
fsubs
and
xor
mov
sarb
or
popa
in
cs
bound
and
jb
push
jl
or
into
mov
cli
fs
test
loop
sbb
xchg
mov
hlt
mov
insb
jmp
inc
and
cmp
push
xchg
inc
cwtl
sub
and
inc
jle
cltd
mov
push
and
lret
sub
jbe
and
addl
push
dec
sub
cmpsl
jbe
lods
loope
int
mov
sub
jmp
xchg
adc
mov
mov
test
push
fwait
sub
loopne
mov
lcall
rsm
lods
adc
lcall
loop
push
int
push
outsb
mov
or
push
std
out
jne
out
add
outsb
sbb
mov
addr16
xchg
cli
gs
testl
lods
or
xor
mov
push
mov
les
in
popa
lods
test
fiadds
inc
jbe
fmul
jecxz
std
ljmp
scas
xor
pop
sbbl
cmp
jne
xchg
cmp
jg
adc
ja
loopne
divl
jno
fstpl
xchg
mov
fldenv
rclb
mov
xor
adc
push
inc
xchg
sub
lea
fucom
dec
insb
push
cmpsl
inc
movsl
pop
push
dec
in
out
int
inc
repnz
mov
jecxz
cmp
pop
daa
xlat
inc
cmp
fiadds
stos
movsl
xor
call
dec
sub
lods
daa
xchg
ljmp
xchg
and
and
jbe
pop
mov
push
int3
ja
or
fmul
popa
outsb
int
daa
or
add
icebp
mov
or
push
ja
mov
je
jb
mov
or
ds
and
test
push
lds
outsb
mov
repnz
sbb
xor
mov
xor
test
add
mov
push
scas
sbbb
mov
das
push
inc
jo
cmp
rcrb
and
test
push
cmp
clc
test
cmp
sbb
pop
loope
fbld
loop
subb
push
iret
movd
jmp
roll
lea
rclb
push
sub
sub
add
mov
repz
adc
stos
daa
mov
mov
repz
inc
pushf
in
popf
xchg
or
aas
lods
inc
add
mov
adc
inc
and
dec
adc
push
pop
xor
pop
mov
inc
stos
imull
xor
lods
mov
sbbb
pushf
jb
sub
push
xchg
inc
or
movsl
sbb
ss
inc
das
or
inc
or
adc
cmc
sub
push
add
in
lock
xchg
or
cmp
cs
testl
adc
push
mov
add
orl
leave
mov
jno
in
js
jnp
pop
cltd
xchg
outsb
xchg
dec
jno
mov
insl
test
push
or
icebp
mov
imul
stc
mov
pop
scas
dec
mov
and
stos
pop
sbb
bound
pop
sbb
ljmp
pop
jecxz
sti
bound
mov
dec
in
push
shrb
adc
ret
inc
je
mov
lret
add
xor
mov
cmp
fidivl
movsl
fdivrl
lahf
sub
scas
fiaddl
inc
inc
mull
test
ror
pop
mov
sub
xor
xchg
mov
mov
xor
enter
test
xor
mov
popa
adc
sub
std
outsl
lahf
cs
push
xchg
shlb
jo
jno
or
pop
outsl
sub
sub
in
adc
je
inc
out
sahf
imul
gs
inc
lret
lock
or
pop
mov
push
xchg
push
lods
outsl
movsb
leave
loopne
out
dec
cmp
push
push
pop
push
or
daa
ljmp
js
mov
push
jne
movb
or
adc
or
jbe
fidivrl
and
lcall
fcmovnbe
ljmp
out
jmp
pushf
enter
cmp
xchg
popl
jg
push
ss
mov
jae
pop
push
cs
aaa
out
insb
jns
out
jns
sbb
inc
lcall
jecxz
inc
lock
add
cmp
jmp
add
xchg
push
xchg
iret
jo
lcall
pop
scas
inc
or
cmp
shrb
idiv
cmp
cmp
into
adc
js
cmp
add
jns
pop
or
loop
or
xor
movsb
pop
aam
cld
jl
addr16
cmp
mov
ja
sub
push
cltd
push
xchg
or
js
outsb
shlb
shl
movsb
pop
pop
pop
in
dec
rcrl
or
jecxz
call
fdivs
cmpsl
and
mov
fdiv
in
lret
jge
pop
daa
loop,pn
pop
xor
xor
xchg
jbe
cli
sarb
outsb
cmpsb
pop
push
jo
mov
or
test
xchg
mov
adc
rclb
and
outsb
bound
sub
stos
insl
stc
xlat
add
xchg
inc
outsb
jge
pop
fisttpl
ss
jae
dec
mov
inc
cs
push
lock
xchg
test
dec
pusha
jnp
xor
xchg
push
lock
pop
clc
push
imul
addr16
inc
mov
sbb
ljmp
lock
fisubl
jno
pop
sbb
xchg
jno
push
jnp
and
gs
xchg
pop
cmpb
mov
aas
and
dec
lret
popa
sahf
push
and
xchg
into
in
push
dec
out
cmp
in
lcall
in
sub
call
lret
test
pushf
xchg
into
rcr
mov
or
adc
out
aas
gs
jp
scas
lods
jno
push
fdivrs
inc
bound
fsubs
jge
inc
lods
in
in
test
jno
fstl
rcrb
cmp
sahf
or
ss
dec
cmp
int
pop
jge
add
and
adc
or
fisubrl
sbb
filds
jle
fisubrs
jo
fmul
bound
jp
inc
mov
and
es
aam
jp
mov
cs
outsl
and
pop
mul
dec
outsl
cwtl
xchg
or
and
cmpsl
inc
adc
into
adc
mov
push
imul
scas
jne
jne
stos
dec
mov
fcoml
movsl
push
lods
les
jne
ja
adc
ret
jg
mov
inc
push
add
xlat
lret
dec
scas
and
sub
stos
push
mov
xchg
xchg
call
dec
sub
out
add
cs
in
mov
cmp
jno
js
ljmp
scas
hlt
es
bnd
push
jns
out
clc
add
sbb
cmp
and
fwait
fsubl
pop
dec
hlt
mov
popa
rcrl
mov
jg
cs
mov
lock
jle
inc
clc
pusha
push
nop
daa
pop
dec
cmp
frstor
call
pop
push
int
inc
push
fiadds
push
sbb
or
pop
popa
dec
fidivs
xlat
bound
shll
push
add
jge
xor
cmp
sbb
xchg
loope
stc
adcb
aas
or
push
leave
or
and
mov
jne
add
test
mov
test
pop
add
nop
fdiv
mov
mov
pop
dec
push
pushf
imul
dec
xchg
dec
cli
pop
lods
push
or
outsb
or
dec
setno
rolb
ja
xorb
mov
mov
inc
jg
dec
jle
movsb
or
xchg
and
mov
into
das
and
mov
inc
add
int
jecxz
adc
fs
in
dec
outsb
scas
mov
mov
fs
fcmovnbe
fsubrp
outsb
sar
cltd
push
push
std
jle
out
orb
or
add
cli
mov
gs
jns
mov
leave
aad
loope
add
aaa
test
sub
xchg
cmpsb
and
inc
mov
lcall
aam
aam
lods
jge
xchg
pop
bnd
movsl
add
dec
push
js
jp
loope
out
addl
filds
hlt
dec
xor
mov
adc
xlat
addr16
test
mov
add
cmc
lahf
scas
sbb
jmp
je
xchg
js
xor
mov
and
bound
shlb
out
inc
ret
jl
daa
ficomps
ljmp
imul
lea
add
jb
mov
mov
jne
filds
ja
and
int3
aaa
shlb
add
mov
mov
push
xchg
inc
add
or
es
mov
shl
add
sub
fmul
mov
in
jb
cli
lahf
mov
pop
enter
mov
int3
popa
mov
stos
add
ds
insb
cmpsl
mov
and
in
popa
xchg
out
xchg
mov
mov
push
and
sub
lcall
cwtl
jl
fsin
push
call
xor
fstp
clc
sub
fisubrl
jle
insb
cmp
cld
scas
popa
xchg
sub
sub
sarl
das
push
nop
xor
and
lret
lods
mov
xor
jecxz,pt
push
jg
adcb
push
jnp
mov
xlat
in
sbb
push
adcb
inc
dec
notl
sub
ds
mov
cld
push
add
inc
ficomps
sub
es
push
sub
add
mov
jmp
bound
mov
add
call
xchg
jecxz
idivb
push
test
lret
into
in
lret
push
and
cld
neg
inc
les
sub
push
loope
ss
mov
xor
fisubrl
inc
dec
ucomiss
adc
jl
leave
and
jmp
in
xchg
sub
and
popf
adc
mov
xor
pusha
inc
test
les
enter
ds
aad
jl
sbb
insb
repnz
cmp
or
icebp
mov
sbb
arpl
mov
pop
inc
sub
mov
dec
out
rorl
push
pop
jo
jnp
ss
push
push
jne
aaa
adc
sub
enter
cli
fildll
add
inc
xchg
lcall
sub
jo
add
push
jmp
mov
aaa
aam
jge
push
add
in
sub
out
mov
sub
popa
or
jle
cmp
xor
and
mov
in
adc
sti
inc
push
and
push
into
xchg
sub
mov
sbb
push
ss
and
out
aaa
push
jmp
insb
pop
add
sbb
stos
fisttpll
les
sub
cmp
xchg
sub
lds
xor
insb
addr16
sub
shlb
sub
ss
sub
cld
repnz
pop
inc
or
sub
test
push
mov
adc
xchg
arpl
je
lret
imull
mov
mov
insl
imul
testb
or
aam
sub
or
add
sub
arpl
lcall
sub
ljmp
dec
push
push
xor
or
or
dec
or
sub
xlat
test
lret
sub
pop
or
sub
push
mov
dec
stos
stos
inc
imul
sub
dec
cmc
sub
push
data16
int3
mov
hlt
lret
jns
into
adc
jp
popa
adc
push
adc
sub
sbb
mov
pop
push
push
xor
scas
int3
loope
inc
mov
sub
clc
lahf
mov
dec
fnsave
int
hlt
popa
or
ljmp
xchg
xlat
adc
daa
dec
mov
cld
aas
repnz
inc
adc
sub
sub
out
sub
mov
test
add
sysret
repz
loop
stc
sbb
div
out
int3
sbb
push
cwtl
dec
adc
add
inc
ljmp
push
adc
stos
mov
adc
sub
addl
adc
jmp
push
push
jmp
decb
sub
test
xchg
jp
and
xchg
lock
arpl
out
xor
jecxz
push
pop
xchg
push
and
pop
push
cmp
xchg
sub
adc
out
dec
cmp
xor
fwait
in
mov
cmpsl
sub
dec
push
insl
adc
ret
pop
and
loop
decb
les
out
stos
daa
xchg
mov
es
lcall
lods
out
push
mov
sub
dec
push
sub
cs
adc
fdivrl
inc
sub
popa
outsb
enter
lcall
aas
jo
jmp
call
out
jae
fstps
icebp
sub
test
fdivl
sub
push
cvtps2pi
sub
jl
pop
or
add
test
sub
hlt
adc
sub
mov
test
ds
push
bound
cld
dec
mov
lret
sub
das
mov
sub
fldenv
sub
cmp
mov
lods
pop
pop
xor
push
shrb
and
ljmp
jge
push
adc
pop
sub
push
pop
fsubrl
sub
roll
xor
lahf
sub
mov
inc
mov
rol
aaa
or
inc
out
test
adc
mov
and
roll
or
ret
xchg
sub
ficoms
pop
sub
test
or
std
addr16
imul
inc
sbb
cmpsb
js
and
sub
call
push
in
popa
ret
into
or
das
push
lods
jnp
sub
dec
int
sbb
nop
iret
mov
push
sub
mov
out
xor
sub
mov
mov
sub
sbb
ljmp
xor
mov
sub
xor
je
lea
sbb
mov
mov
imul
hlt
sub
mov
inc
popf
inc
inc
mov
cmp
repnz
aad
jo
fnsave
mov
popa
add
xchg
loopne
imul
gs
inc
fisubrs
push
push
sub
push
mov
mov
sub
mov
outsl
insl
add
xlat
and
adc
imul
pop
xchg
mov
lods
and
xor
dec
cmc
sub
pop
pop
adc
stos
sbb
and
int
mov
push
xor
loope
loop
xor
sbbl
test
adc
stos
adc
sub
adc
jl
sbb
xor
roll
mov
jl
xor
rcrb
adc
xor
fidivrs
es
sub
mov
rorb
outsb
cs
mov
cld
ret
push
addl
test
out
sbb
sub
inc
jmp
loop
mov
mov
jbe
sub
xchg
orb
sub
addb
mov
inc
sub
jge
fists
mov
cmp
add
shl
and
jne
cltd
sub
cmc
pop
sub
shll
clc
bound
out
rcll
sub
push
icebp
adc
pop
and
xor
mov
sub
in
sub
jno
dec
and
mov
xchg
imul
pusha
mov
push
xchg
lahf
sub
aas
xchg
sub
imul
in
cmp
and
add
add
mov
and
sub
mov
or
jae
sbb
xchg
sbb
sub
cli
jbe
mov
bound
pop
loope
test
lret
sti
push
sub
adc
lahf
fldt
dec
out
sub
adc
xlat
lods
mov
mov
xor
sub
and
and
outsl
sbb
adc
inc
sahf
ret
pop
or
std
sub
mov
pushf
push
bound
lret
fadd
mov
push
addr16
cmp
push
pop
mov
adc
pop
pop
ds
sbb
jo
scas
mov
bound
clc
jge
inc
xor
sti
test
pop
pushf
cmp
xor
lods
adc
scas
outsb
and
cld
aaa
enter
dec
bound
lahf
sbb
lret
in
jge
addl
dec
jle
xchg
fildl
jp
cvtss2si
lahf
cmp
fcmovnb
adc
js
jns
mov
mov
cmc
fidivrl
cwtl
adc
xor
inc
es
cmp
enter
ret
rcrb
mov
adc
mov
rcrb
mov
aaa
add
ret
mov
out
push
add
popa
dec
in
jae
push
test
pop
sub
jbe
adc
cmp
mov
sarl
adc
iret
mov
push
test
icebp
in
cmp
jp
clc
adc
cmpsl
outsb
xchg
lods
jl
cmp
bound
mov
lods
js
das
sbb
lods
aas
cmpsl
mov
push
inc
ljmp
stc
push
or
into
dec
into
and
push
adc
push
fdiv
dec
cmp
adc
adc
scas
popf
lcall
mov
xchg
cmp
sub
adc
xchg
push
xchg
sbb
pop
jo
lods
mov
push
lret
cmpsl
orb
sti
cmpsl
addr16
hlt
or
and
or
int
imulb
xchg
iret
inc
xor
pop
repnz
subl
sti
es
pop
orb
jp
xor
pop
mov
cli
int
arpl
pop
inc
clc
push
leave
cmpsb
lods
jns
mov
andl
cmpsl
test
jno
xchg
pop
push
dec
rcl
inc
mov
daa
push
dec
push
or
add
in
clc
nop
fadds
popa
je
aad
push
mov
arpl
add
sbb
sub
mov
pop
jmp
lods
dec
insb
repnz
jne
mov
push
outsl
sti
daa
inc
mov
mov
inc
dec
jo
hlt
int
push
mov
adc
mov
dec
mov
push
jl
jge
icebp
loop
clc
push
repnz
mov
or
stos
js
mov
dec
push
cmp
cs
lcall
push
sub
jb
jmp
sbb
insb
popa
dec
inc
pop
ret
jg
jecxz
repnz
jnp
out
and
mov
jb
shll
sub
test
bound
test
popf
std
adc
jns
das
test
adc
leave
ljmp
stos
dec
add
mov
xor
addr16
dec
sub
test
dec
insb
inc
sub
add
dec
mov
int3
les
sti
jno
into
in
add
inc
popa
test
in
sub
adc
mov
or
cwtl
fwait
in
push
test
xchg
mov
xor
cmp
xor
mov
dec
dec
fnstsw
xchg
sub
dec
cmp
fwait
or
push
sub
insl
xor
lock
sar
shlb
jecxz
mov
xor
cmpsl
inc
add
push
mov
cmpsl
lcall
insl
sub
cli
ret
push
adcl
mov
xor
xchg
mov
xor
push
gs
pop
pop
outsl
and
mov
addr16
iret
pusha
notl
fisttpll
aaa
in
cld
arpl
xchg
lds
add
ret
scas
xchg
cmpsb
icebp
push
je
pop
jg
movsl
xorl
or
sbb
cmpsl
rcll
hlt
jp
and
mov
cmp
xchg
push
cmc
sbb
arpl
lods
fnstcw
cmp
fistpll
cmp
mov
shrl
jmp
or
jecxz
mov
adc
bound
xrelease
mov
popa
popa
insl
imul
ja
cmp
sarl
imul
adc
xor
push
sahf
pop
outsb
ret
dec
add
inc
mov
mov
lock
jb
mov
cli
add
imull
add
jb
lock
call
int3
mov
lods
neg
fisubrl
fcoml
push
pop
push
ret
arpl
ds
ret
fbstp
cmp
and
sbb
pop
mov
hlt
fimull
lahf
lock
pop
cmp
cmpsl
push
dec
jo
jle
push
mov
ja
jge
shlb
jmp
fdivrl
push
adc
sti
mov
sbb
pop
push
daa
jns
neg
popa
shll
hlt
cmp
sarl
rcrb
mov
cs
mov
add
pop
add
jo
scas
stos
fbld
es
inc
mov
dec
fs
adc
fcomps
popa
repnz
je
sbb
jbe
jge
in
inc
cmc
push
cltd
xor
ret
jns
call
fnstenv
jno
in
push
loope
sub
push
shlb
data16
xchg
adc
clc
add
aam
rclb
pop
push
cmp
popa
dec
mov
jle
jb
mov
push
movsl
aaa
inc
mov
push
cmc
ljmp
fdivl
xchg
rcl
fimuls
mov
and
mov
adc
sub
gs
mov
mov
adcl
cmpsl
bound
jg
jb
int3
jns
adc
pcmpgtw
adc
push
mov
add
iret
xor
stos
jg
push
and
or
pop
and
add
dec
push
adc
jge
test
iret
or
repnz
xchg
stc
mov
popf
int3
mov
or
aam
cmp
cmp
xor
pusha
cs
aaa
mov
jg
or
in
mov
and
push
jo
leave
out
ljmp
fs
pop
out
cmp
in
shlb
pop
xchg
imul
mov
xchg
fucompp
mov
add
push
addr16
sub
jp
nop
jno
sti
stc
loope
nop
sahf
jo
icebp
pop
arpl
inc
mov
ret
push
cs
push
pop
outsl
and
mov
cmp
cwtl
mov
pop
sbb
lds
orb
insb
or
in
loop
xchg
sahf
mov
imul
into
ret
ja
cmp
outsb
ds
mov
push
push
mov
mov
xor
cli
dec
shlb
outsb
xchg
sbb
push
jp
int
cld
jg
leave
bound
subl
inc
sbb
add
outsb
arpl
outsl
mov
pop
or
clc
loope
dec
xor
jne
or
outsl
daa
jo
cmpsl
nop
out
sti
xchg
mov
jmp
jnp
jno
or
adc
adc
mov
and
in
testl
add
cmp
add
testb
or
data16
fidivs
push
mov
pop
xorb
js
daa
test
cmc
fsubrp
test
push
pop
daa
pop
jno
or
pop
push
arpl
imul
sahf
pop
sbb
bound
mov
push
sub
jmp
add
dec
sbbl
jg
jg
icebp
add
sub
mov
jg
call
sbb
mov
mov
lea
add
sbb
imul
fbld
mov
add
pushf
nop
les
insl
imul
sub
dec
push
cmpsl
sbb
inc
jbe
xchg
sbb
popa
rorb
jmp
imul
out
mov
mov
sub
pop
ret
mov
mov
stc
inc
imul
mov
cmp
mov
cmp
hlt
pop
bound
mov
pop
mov
insb
outsb
or
mov
mov
out
inc
push
shl
push
pop
pop
xor
jb
popa
mov
and
ret
movl
mov
jp
push
sub
dec
repnz
test
cltd
cmpsl
repnz
iret
xor
push
push
or
aam
stos
loop
adc
popa
or
pop
and
pushf
fdivrl
cs
js
xchg
sbb
jge
add
jbe
fisubs
popf
arpl
stos
or
rclb
jl
imull
aaa
cmp
sub
xchg
inc
stos
inc
sbb
push
inc
pop
and
cmp
pusha
imul
faddp
and
repnz
cmp
jp
js
xor
jo
push
clc
enter
xchg
pop
inc
ljmp
push
nop
add
pop
jle
stos
jbe
xchg
ja
mov
int
xchg
out
xor
inc
fdivrs
stos
imul
fidivrl
dec
jmp
cli
cmp
cmpsl
es
pop
movsl
in
push
mov
and
fwait
jecxz
adcl
cmp
icebp
cmp
push
insl
jp
push
add
or
jns
adc
sbb
cmp
jg
mov
loopne
xchg
dec
fidivl
mov
bound
mov
jmp
fwait
int3
jle
sub
and
scas
jp
daa
cmp
jns
sub
sub
call
adc
push
arpl
lods
push
jge
mov
shrl
inc
aaa
popa
mov
mov
movsl
mov
inc
mov
mov
xchg
popf
fdivrs
stos
leave
or
aaa
pop
scas
fldcw
add
push
or
add
ds
sarb
push
ret
jo
pop
cmp
and
repnz
rcrb
add
dec
and
xor
pop
popa
repz
popa
movsl
rorb
icebp
test
or
jg
xlat
mov
out
int
inc
pop
dec
ljmp
outsb
inc
xchg
test
and
cmp
adc
insl
mov
or
fs
adc
aad
test
ljmp
push
jno
mul
pop
mov
popf
popa
pop
and
dec
sub
fldl
addr16
push
lea
cld
mov
push
xor
jns
ja
dec
push
or
out
jmp
out
out
rorb
jbe
out
xchg
inc
xor
inc
lea
xor
leave
mov
outsb
jmp
sbbl
lock
and
push
pop
sub
sti
and
push
mov
and
ds
shrl
mov
mov
jge
sbb
les
int
and
inc
mov
pop
xchg
shlb
sbb
std
xor
shrb
in
mov
js
stos
rorb
push
movsb
sub
cs
scas
sbb
mov
adc
lods
cmpsl
push
sub
andb
fwait
sarb
movsb
pop
pop
adc
and
sbb
add
mov
and
adcb
arpl
iret
cld
pusha
mov
or
jg
ret
or
mov
fnstsw
pop
addb
ss
push
imul
test
dec
xor
divl
gs
jg
cmpsl
aas
dec
scas
jge
mov
repz
jnp
stos
jmp
stos
lock
and
and
cmpsb
test
bound
inc
pop
cli
jo
push
mov
or
dec
dec
stos
xchg
out
flds
lock
outsl
in
or
sub
jo
add
fsubrs
mov
scas
test
insb
inc
push
mov
imul
subl
ret
popf
ss
add
adc
mov
dec
mov
mov
jg
mov
cs
push
dec
aam
lea
inc
fsubrl
ja
lods
xchg
ljmp
or
popa
enter
insb
xchg
push
xchg
jbe
cmp
mov
js
or
dec
mov
test
outsb
inc
popa
jo
xchg
mov
lods
pop
push
popf
inc
jle
scas
lea
push
daa
aad
mov
xor
sub
jecxz
dec
sbb
aam
adcl
sarl
ss
pop
mov
scas
sbb
jp
sub
jae
jl
and
jl
xchg
test
push
mov
daa
imul
jne
lock
sub
jbe,pt
mov
outsb
xor
test
pop
sbb
enter
or
fmuls
or
adcl
js
shlb
xor
out
xor
outsl
mov
nop
mov
or
xchg
enter
test
mov
test
pop
scas
or
test
jno
pop
loope
lds
bound
mov
jns
mov
adc
add
push
fildl
loop
lods
jo
in
sbb
add
outsb
test
ss
aaa
add
fs
add
pop
lcall
lds
into
mov
mov
js
push
mov
jg
and
pop
or
sbb
lahf
gs
idivl
push
stc
je
int3
add
bound
shl
add
std
sahf
add
inc
fidivrl
adc
sar
xlat
pop
jmp
int3
sbb
ret
scas
int
cmp
lods
mov
out
imulb
outsl
xchg
dec
insl
lahf
push
dec
jb
cli
rclb
popa
outsb
idivb
and
sti
xor
mov
cwtl
loop
lea
repnz
jne
push
push
cli
push
mov
insl
movsl
gs
jne
push
pop
mov
mov
and
cmpsb
js
xorb
iret
jb
mov
cltd
icebp
add
test
jle,pt
scas
outsb
mov
outsl
rolb
mov
cmp
testl
cwtl
jo
add
lea
pop
lods
sub
clc
cld
les
jne
shrd
jae
adc
push
fs
sub
sti
std
xor
xchg
fcmovbe
sub
cwtl
sbb
mov
outsl
clc
movsb
mov
call
lock
sbb
and
js
jmp
mov
into
das
pusha
orb
adc
iret
push
add
ficoml
and
xchg
das
es
adc
pop
pop
or
sahf
pop
cmp
pop
je
hlt
mov
cs
call
push
mov
orl
aam
mov
sub
dec
add
leave
sti
stc
sub
jge
adc
inc
lods
cmpsb
rcrb
lods
jnp
xor
lret
pop
pop
mov
daa
call
cltd
adc
adc
stos
pop
mov
insl
bound
and
lahf
xchg
rolb
hlt
ljmp
daa
outsb
cmpsb
cmp
adc
leave
push
sti
fistl
adc
ret
sbb
leave
add
pop
mov
sbb
adc
test
dec
and
push
dec
shrl
mov
inc
cmc
cmp
daa
ljmp
jge
jg
add
sub
faddl
jno
movsb
inc
popa
lret
in
hlt
imul
bound
js
push
imul
lods
jecxz
loope
in
xlat
or
sbb
cltd
add
ja
lret
jecxz
adc
enter
bound
outsb
movsl
sub
cmp
jne
fwait
pop
jns
xchg
ja
and
scas
dec
inc
dec
dec
lods
jns
jne
mov
adc
xchg
loope
jmp
sub
rolb
or
ds
lret
cld
sbb
pop
pop
stos
push
lcall
mov
in
pop
lods
outsb
or
mov
sbb
cmp
or
scas
mov
xor
xor
inc
mov
aam
sub
cmpsb
enter
add
mov
leave
cli
cmp
ret
frstor
jns
xor
mov
lcall
push
adc
mov
cmp
jl
out
xor
in
lods
pop
xor
loop
jne
iret
mov
push
divb
popf
push
jmp
dec
mov
stos
lahf
sub
push
fnstenv
mov
push
xchg
or
mov
iret
test
pop
mov
add
jo
push
out
jg
mov
int3
cld
mov
inc
mov
dec
or
inc
scas
or
push
pop
xchg
sub
push
inc
mov
and
fdivrs
adc
sbb
sub
dec
cwtl
xor
pop
fcompl
cmp
add
lret
pusha
push
mov
cmp
lret
sbb
inc
bound
fistpl
in
or
clc
mov
insl
lods
mov
xor
mov
cwtl
push
cmp
stos
fsubl
push
and
jecxz
cltd
or
mov
cli
push
enter
bound
push
xchg
ja
les
pop
subb
in
xor
xchg
fnsave
xchg
nop
into
pop
and
pop
adc
add
add
test
outsb
je
sbb
push
jbe
pop
jo
adc
outsb
push
add
arpl
test
adc
clc
sub
add
jle
stos
lcall
popa
out
push
sub
and
cmp
add
sub
out
pop
sub
xchg
jns
cs
stos
mov
jae
test
clc
or
inc
testl
gs
mov
cmp
stos
push
sub
push
sahf
cmp
push
and
add
push
jle
jae
adc
jae
xchg
test
mov
xor
push
jns
rolb
test
daa
divl
inc
xlat
in
insb
jns
call
push
ret
push
and
push
push
or
and
sub
sub
push
push
or
insl
das
adc
or
or
aam
sbb
cmp
jp
mov
lods
add
lds
jle
xchg
gs
outsl
mov
and
and
push
shlb
cmp
jl
aas
inc
scas
pop
outsb
insl
rorb
fs
push
mov
test
sub
mov
push
std
mov
shlb
test
lcall
ret
cwtl
mov
lea
lea
push
push
mov
movl
jmp
loope
or
sub
mov
mov
pushf
mov
pop
loope
jns
mov
lret
jo
cmpsl
scas
cli
push
jg
jg
mov
mov
inc
es
in
jne
dec
cmp
xchg
pusha
icebp
leave
imul
syscall
adc
mov
or
mov
ljmp
adc
inc
int
rcrl
adc
sub
pusha
mov
push
int3
adc
adc
cmpsl
dec
push
add
ss
daa
shr
filds
add
add
inc
and
mov
mov
call
hlt
out
or
mov
push
popf
xchg
out
jnp
ja
mov
stos
insl
push
jg
cmp
inc
jg
test
out
xchg
push
into
dec
inc
gs
rcll
out
lds
call
cmp
inc
loope
or
imul
mov
movsl
or
inc
pop
xchg
cmp
aam
pop
xor
sbb
mov
xchg
jnp
int
movsb
jmp
dec
out
or
ljmp
enter
push
or
sbb
and
cmp
adc
pop
dec
inc
adc
lea
jae
pusha
mov
lea
jo
mov
mov
setno
inc
inc
pushf
mov
mov
lea
jae
pusha
lea
call
jmp
xlat
jne
or
mov
insb
negb
add
lcall
loopne
shl
clc
movsb
std
jmp
outsb
aam
xchg
lcall
xchg
cmc
dec
jnp
stos
jmp
lock
fwait
and
pushw
adc
movsb
push
and
sub
pusha
fisttps
push
adc
loop
mov
jae
mov
sbb
mov
xorl
push
rcll
ja
sub
dec
push
cld
es
sub
push
jns
xor
sahf
mov
and
aas
rolb
jbe
cltd
test
nop
or
dec
outsl
in
jb
mov
out
jp
out
mov
jl
jl
sbb
in
jae
cs
popa
insl
inc
scas
sbb
daa
adc
shlb
mov
loope
mov
in
jl
adc
adc
push
xlat
mov
jnp
xchg
mov
mov
adcb
test
or
pushf
pusha
push
lea
je
movsbl
movzbw
xchg
xchg
lea
jmp
mov
lea
jbe
call
push
jmp
int
cmp
dec
sarb
xchg
arpl
mov
mov
popa
cmpsb
mov
pop
mov
jbe
popa
mov
push
addr16
sub
lods
enter
dec
popa
lret
out
lods
mov
push
sub
mov
lret
filds
insb
daa
jno
pop
test
pop
aam
xchg
out
ss
push
mov
data16
dec
adc
push
xlat
rep
lds
scas
inc
mov
std
insb
in
rcll
xor
xor
icebp
cmpsl
jb
dec
rcr
mov
or
sub
es
lds
jle
mov
xchg
jg
add
outsb
in
movl
mov
cmpsl
out
or
pop
sub
adc
jnp
inc
or
adc
sub
out
les
mov
outsb
dec
popf
daa
and
or
jg
aaa
and
data16
mov
outsb
outsb
mov
stos
mov
xchg
js
aad
and
in
mov
sub
aas
pop
adc
xor
sub
int3
lods
or
mov
or
hlt
adc
mov
push
sahf
xchg
push
aam
aas
mov
mov
arpl
scas
aaa
es
dec
or
adc
and
gs
data16
or
addr16
ret
cmp
popa
and
push
out
addr16
add
out
jle
sub
and
in
push
inc
sub
sub
scas
xor
imul
es
pushw
add
aam
fwait
aam
dec
jae
dec
iret
mov
push
aaa
and
insl
lods
push
jmp
dec
mov
dec
push
data16
push
push
inc
call
scas
mov
roll
mov
pop
mov
dec
lds
in
add
fisttps
mov
mov
sub
xor
frndint
mov
xchg
push
xchg
jmp
push
ds
arpl
sub
inc
call
in
scas
insb
or
cmpsb
dec
insb
pop
mov
inc
cmpb
sbb
lds
pop
jae
xchg
pop
dec
mov
cmp
or
jmp
stos
outsb
push
mov
aam
dec
dec
aaa
stos
scas
mov
js
cmp
pop
pop
out
push
inc
and
or
dec
daa
movsb
insb
mov
mov
decl
or
addr16
call
lret
sub
mov
sub
cmpsl
push
insl
cmp
jecxz
out
test
pop
aas
mov
and
jge
ja
mov
arpl
dec
pop
push
fs
sub
pop
jp
mov
sub
cmc
das
pop
xor
cmpsl
mov
pusha
jne
xchg
jbe
mov
das
dec
adc
jmp
sbb
arpl
into
aas
gs
xchg
dec
mov
inc
push
jne
daa
push
std
xchg
or
adc
dec
or
pop
scas
jno
cmp
push
sub
mov
mov
aaa
in
sub
push
sub
inc
sub
or
outsl
cs
leave
in
mov
sub
xor
xchg
mov
shlb
mov
add
insl
pop
lret
cmpsb
mov
aaa
out
push
dec
sbb
scas
cli
mov
ficoml
aaa
push
ja
lea
insl
sub
jns
sarl
sub
jl
pop
xchg
sub
and
mov
mov
mov
sbb
jb
jmp
sub
je
popa
xchg
stos
xchg
push
sub
xchg
outsl
icebp
xor
or
mov
jecxz
mov
inc
push
js
dec
call
xchg
dec
daa
sahf
or
aaa
or
movsb
mov
cmp
xlat
adc
mov
iret
dec
push
ds
in
imul
push
mov
sub
or
addr16
xchg
pop
inc
addr16
pop
mov
in
mov
insb
int
lea
mov
gs
push
popa
cmpl
mov
mov
sbb
mov
mov
or
cwtl
scas
jge
imul
cltd
mov
pop
in
pop
sub
insl
and
mov
int3
int3
xor
in
popa
add
addr16
dec
xor
mov
arpl
popf
aas
int3
cmp
lods
inc
lea
cmp
inc
lods
pop
pop
comiss
mov
push
mov
dec
inc
in
inc
popa
sub
scas
or
ja
dec
add
mov
inc
insl
cmp
sub
xor
mov
fldcw
or
mov
mov
in
mov
stos
jo
or
or
mov
and
sbb
rolb
aas
and
jmp
ret
mov
push
add
ljmp
rcr
and
es
sub
data16
dec
sub
cmpsb
mov
sahf
xchg
out
out
or
call
packuswb
outsl
sub
cmpsl
lahf
mov
and
out
divl
test
aas
jne
jne
mov
or
pop
cs
ja
in
ds
test
insl
and
sub
pop
daa
fisubrs
dec
push
repz
jnp
and
ds
loope
subb
pop
in
lods
dec
cmp
or
sub
dec
push
out
inc
outsb
test
lahf
add
shll
fnstcw
mov
shrl
loop
movsb
fdivrp
daa
leave
shrl
mov
daa
adc
int
adc
cs
xchg
lea
mov
call
sub
add
and
mov
daa
mov
cmpsl
jmp
cmpsl
pop
push
daa
mov
out
add
inc
adc
and
arpl
lods
mov
xchg
dec
movsl
gs
sub
out
int
movsl
cmp
push
or
mov
leave
pop
in
push
popa
in
int3
or
addr16
pop
cmp
pop
or
popa
or
cmp
push
pop
and
daa
dec
cmp
cmpsl
mov
out
dec
cmp
pop
int
popa
in
mov
xor
sbb
dec
cli
bswap
addr16
iret
and
mov
aam
mov
add
andl
mov
or
mov
in
mov
mov
sub
mov
or
or
iret
pusha
dec
inc
ljmp
popa
push
addr16
sub
insl
cmp
push
mov
addr16
pop
je
push
push
jns
and
xor
add
in
sub
pop
outsl
rorl
iret
push
mov
lahf
mov
fisubrl
fsubs
gs
imul
movsl
daa
and
mov
cld
pop
fists
or
addr16
pop
aas
dec
mov
push
dec
pop
mov
push
lret
lcall
sub
xchg
fwait
in
fwait
dec
or
sub
add
insl
shll
dec
out
sub
push
xor
mov
jmp
xor
in
or
mov
push
and
push
xor
fldcw
inc
cmp
ljmpw
add
std
pop
dec
in
jb
sub
das
pop
add
fldcw
loop
sub
inc
int
mov
fldenv
int3
mov
xchg
aad
and
sub
bound
sbb
clc
mov
pop
sub
adc
inc
xchg
push
scas
sub
aaa
sub
pop
shl
shrl
das
and
sub
fs
or
sub
xchg
js
pop
jp
aad
add
and
xchg
andl
sub
push
inc
or
sub
xor
pop
movb
dec
xchg
sbb
out
or
mov
hlt
test
mov
add
jno
mov
sbb
add
xchg
es
ret
test
popa
loop
push
js
ljmp
sub
sub
sbb
cmp
add
repnz
jnp
or
aam
les
xor
testl
inc
xchg
pop
mov
sub
cmp
xchg
nop
fcompl
and
pmaddwd
cmp
adc
daa
sbb
push
rclb
aaa
xor
xchg
adc
xor
add
xor
jo
sub
sub
mov
stos
scas
adc
lea
stc
push
sub
push
clc
and
frstor
xor
aam
enter
es
adc
jg
fcmovnu
xor
lock
sub
sbb
repnz
lret
adc
in
adc
push
dec
and
enter
sub
negb
xchg
xor
mov
sub
add
movsb
and
pop
in
cmp
in
xchg
call
ret
imul
push
sbb
xor
pushl
adc
jmp
pop
cld
mov
int
xor
mov
mul
sbb
fsubs
push
repz
sub
outsb
sub
roll
fists
pop
or
adc
jbe
push
fisttps
xor
repnz
mov
xor
out
ret
push
sbb
rcl
push
mov
or
jge
imul
out
scas
mov
dec
inc
ret
push
iret
cmpl
jae
sub
push
xchg
push
xchg
xlat
ds
fdiv
arpl
xchg
ljmp
repz
mov
jmp
je
out
ss
mov
popf
out
mov
mov
std
pop
jg
mov
rol
cwtl
pop
mov
cmp
xchg
mov
shl
test
mov
insl
push
fmul
out
jge
mov
sti
mov
ret
mov
bswap
mov
jge
mov
outsb
mov
outsb
dec
bound
mov
nop
enter
je
lahf
scas
test
lahf
data16
aad
lock
insb
sbb
mov
loope
daa
ja
inc
fst
mov
mov
pop
mov
push
jnp
call
add
pusha
cmp
stc
mov
or
outsb
imul
in
inc
insl
inc
fidivrs
rol
clc
call
mov
pop
push
fisubl
das
dec
in
sahf
cmpsl
pushf
mov
ret
insb
lret
int
pop
or
outsb
xor
insl
lret
ljmp
addr16
or
pop
mov
mov
addr16
pop
dec
imul
addr16
mov
dec
outsb
popa
push
mov
out
xchg
pop
mov
mov
lret
stos
mov
enter
mov
dec
mov
out
mov
mov
out
cmpsl
cmp
pop
daa
in
popa
dec
mov
lret
dec
pop
ret
jecxz
scas
push
sub
fwait
mov
mov
or
and
call
addr16
dec
cmp
pop
or
arpl
pop
mov
imul
pop
mov
or
sub
int
in
lea
addr16
rolb
or
mov
mov
dec
and
popf
call
sub
mov
mov
add
sub
or
sub
sbb
inc
lods
inc
in
xor
dec
outsb
popa
push
mov
out
xchg
pop
inc
addr16
pop
mov
in
mov
dec
iret
pop
insb
xchg
mov
out
test
notb
and
repz
dec
cmp
xchg
ds
pop
pushf
jl
test
movsb
ret
xchg
and
fwait
jmp
or
shl
cmpsl
test
je
insb
aas
jg
hlt
loopne
ss
inc
aam
push
mov
xchg
cmpsb
sbb
pop
push
loope
in
push
sarb
cmpsb
mov
fstpt
ret
pop
int
pop
pop
or
xchg
daa
sahf
inc
imul
clc
mov
into
xchg
pushf
movsb
push
int
mov
mov
ror
push
cmc
ds
jbe
sub
push
insl
pop
dec
mov
adc
aaa
pushw
inc
pop
sti
es
test
test
add
roll
shlb
dec
mov
in
scas
sarb
popf
mov
xchg
daa
mov
int
outsb
or
lods
fsubl
stos
pop
lea
fmull
test
mov
or
sub
push
push
push
cmp
inc
xchg
insb
outsl
test
les
mov
insb
add
push
fs
push
xchg
cmc
gs
int
sub
pop
lods
mov
pop
jns
cs
adc
rorl
stc
jbe
orb
aad
out
aam
push
xor
mov
sub
andl
je
addr16
push
mov
jb
xor
and
adc
pop
out
test
in
mov
sub
or
push
dec
test
push
scas
outsl
repz
aaa
mov
dec
in
push
arpl
inc
shll
dec
arpl
aas
lret
inc
stc
or
and
sbb
orb
aad
mov
jl
adc
enter
rcrb
push
adc
int3
ja
jle
mov
sarb
mov
xchg
push
call
cmp
sahf
xchg
dec
stc
pop
inc
dec
jae
stc
inc
scas
adc
divl
jns
insb
add
fidivrs
push
dec
loope
mov
nop
jge
or
sub
and
ds
xchg
mov
jno
insb
inc
mov
cmp
ljmp
mov
xchg
sub
lcall
pushf
subl
arpl
lock
jle
push
stos
aam
mov
mov
push
add
or
mov
inc
hlt
sarl
scas
add
mov
addr16
mov
call
push
or
es
lret
std
dec
push
inc
or
adc
addr16
repz
int3
dec
inc
cmp
add
aas
gs
push
lods
pop
sbb
std
sti
pusha
jg
add
loopne
mov
femms
ficompl
sbb
push
mov
dec
mov
dec
or
mov
outsb
pop
add
aas
dec
movsb
xchg
jge
and
inc
lea
into
jge
aam
cmpsl
aas
dec
insb
xchg
ljmp
sub
pop
movq
aaa
shl
lea
pop
popf
ud0
jg
shl
sbb
adc
jp
mov
out
add
ljmp
insl
ret
add
imul
jo
cld
sub
in
push
lret
lea
out
das
bnd
call
cmpsl
aad
lahf
jmp
ret
loope
insl
pop
mov
insl
orb
mov
pop
dec
mov
insl
xchg
movsl
in
inc
pop
icebp
xchg
das
cmp
popf
cmp
cwtl
jle
xor
pop
or
js
test
sbb
loope
outsb
pop
lahf
fisttpl
mov
sbb
cmpsl
lock
pusha
inc
pop
icebp
nop
ja
or
sahf
rorl
mov
std
mov
sub
movsl
iret
dec
jnp
sbb
in
xor
int
inc
pop
clc
lods
pusha
cmpsb
lods
xchg
or
insl
or
cmp
push
data16
dec
lods
popa
insl
scas
and
push
insl
in
mov
xor
or
loopne
lea
xchg
ja
into
mov
push
jb
sbb
lea
imul
pop
add
sub
fnstsw
lods
stos
add
popf
loop
sarb
jecxz
cwtl
mov
sahf
cmp
sbb
in
mov
out
add
test
dec
xchg
outsb
sub
push
das
movl
insl
or
scas
add
movsl
movsb
mov
iret
scas
loopne
cmp
movsb
fs
addr16
mov
ja
icebp
mov
cltd
xor
test
xchg
adc
addr16
adc
pop
push
dec
mov
int3
ja
fdivp
in
jmp
add
sub
or
jl
outsl
mov
jbe
out
dec
mov
lds
int3
xchg
sbb
or
xor
mov
sub
or
gs
out
das
mov
dec
sub
push
jge
or
push
lods
aam
jno
mov
push
cmp
das
int
push
insl
gs
xor
sbb
sub
or
cmc
mov
insb
adc
or
cmp
lahf
pop
rcll
shlb
enter
shl
mov
xchg
and
loope
xchg
adc
push
insb
or
xchg
pop
xchg
scas
and
add
gs
loopne
cmp
lea
mov
aad
xor
sbb
repz
les
or
dec
aam
ja
mov
or
leave
into
fisttps
push
push
addr16
mov
call
push
insb
pusha
cltd
popa
das
xchg
xchg
test
cmp
sbb
inc
ljmp
subb
inc
push
xchg
mov
and
faddl
jge
mov
mov
sub
push
mov
popa
jnp
sub
mov
popf
mov
cmp
pop
das
mov
cltd
or
mul
jmp
or
cmpsl
pop
mov
or
and
sahf
mov
adc
movsb
jl
add
enter
daa
arpl
js
mov
sub
or
xlat
cmp
fildl
dec
push
sub
jne
dec
mov
inc
pop
popa
pop
mov
out
add
popa
movsl
mov
into
mov
lea
or
addr16
mov
in
and
mov
ret
mov
lds
or
iret
mov
lea
xor
dec
cmp
pop
in
mov
addr16
mov
outsb
ss
mov
push
mov
mov
popa
sub
jle
enter
arpl
cmpl
mov
ljmp
mov
int
mov
pop
xchg
popa
sahf
mov
cmpsl
mov
out
popa
mov
sub
mov
mov
dec
mov
and
popa
cmp
jecxz
or
pop
add
sbb
or
add
int
jns
insb
addr16
lods
cmp
pop
int3
inc
popa
addr16
jae
cs
pop
dec
inc
popa
out
mov
push
mov
leave
mov
or
addr16
pop
inc
mov
xchg
addr16
fwait
pop
stos
repz
lret
push
arpl
movsl
ret
cmp
pop
shrl
lret
mov
in
mov
xor
or
outsb
mov
adc
popa
push
imul
cmp
pop
jb
popa
dec
mov
add
push
ret
popa
stos
mov
mov
mov
dec
mov
andb
xchg
popa
int3
mov
loop
xchg
pop
cs
dec
mov
ret
cmp
pop
test
imul
mov
or
addr16
pop
or
or
xlat
cmp
or
gs
sub
jne
dec
pop
dec
in
popa
inc
mov
cmpsl
mov
mov
scas
mov
mov
popa
lea
or
xchg
enter
arpl
cmp
pop
cmc
dec
popa
int
ljmp
fstp
add
popa
int
sub
insb
addr16
mov
pop
daa
xor
inc
mov
add
cs
pop
dec
test
or
addr16
pop
jmp
leave
or
pop
out
insl
enter
popa
idivl
sub
xlat
mov
xchg
or
dec
cmp
pop
in
ds
dec
mov
push
mov
cmpsl
push
popa
mov
cmp
mov
sub
jbe
jmp
inc
popa
test
pop
or
addr16
mov
andl
dec
addr16
ljmp
xchg
mov
out
mov
mov
addr16
cmpsl
pop
into
popa
mov
mov
mov
jmp
pop
xor
or
arpl
addl
sub
mov
mov
jno
dec
mov
inc
mov
lods
push
popa
int3
mov
mov
pop
cs
dec
mov
andl
mov
loope
mov
pop
and
popa
inc
mov
fldenv
stos
sub
mov
movsl
cmp
or
int3
mov
adc
or
addr16
mov
jo
popa
mov
or
test
mov
popa
cmpb
mov
or
pop
stos
popa
mov
or
dec
cmp
pop
in
mov
or
addr16
jmp
addr16
popa
xchg
shll
out
sub
mov
ret
insl
test
pop
or
mov
cmp
sarb
lods
push
cmp
pop
dec
jne
in
xchg
arpl
lods
movsl
popa
int3
mov
mov
xchg
sub
mov
scas
mov
or
andl
popa
enter
andl
sub
pop
dec
sub
mov
movsl
cmp
or
daa
mov
push
push
or
scas
mov
dec
imul
sub
dec
pop
test
popa
mov
addr16
cmp
pop
mov
into
test
mov
sub
pop
in
sub
mov
cmp
adc
mov
popa
mov
outsb
jno
scas
mov
inc
mov
imul
jmp
mov
or
mov
addl
mov
sub
pop
and
mov
call
insl
loopne
in
cmp
pop
or
daa
xor
popa
jl
int3
or
addr16
imul
popa
mov
test
leave
xchg
popa
push
addr16
and
ret
mov
lds
lret
mov
lea
mov
int3
mov
add
popa
sbb
outsb
push
mov
sub
mov
jmp
pop
dec
dec
popa
inc
mov
add
lods
ret
popa
movsb
mov
mov
mov
mov
pushf
mov
insb
in
popa
mov
cld
mov
out
popa
push
mov
fsubl
or
popa
test
addr16
mov
mov
popa
and
pop
jecxz
addr16
or
stos
mov
lods
outsl
popa
dec
mov
aas
mov
dec
dec
popa
in
mov
lahf
fadds
mov
mov
jg
mov
pop
or
popa
mov
mov
enter
mov
out
pop
or
popa
stos
mov
into
shrb
pop
lea
mov
dec
mov
and
popa
cmp
out
add
pop
sbb
adc
or
jns
popa
jno
push
mov
pop
arpl
mov
sub
mov
or
dec
cmp
pop
in
cltd
popa
or
xchg
or
loopew
int3
cmp
pop
addr16
popa
xchg
fldenv
out
sub
mov
cmp
push
add
sbb
adc
jecxz
popa
or
movsl
js
dec
pop
jo
popa
dec
mov
lods
mov
push
addr16
test
xchg
addr16
dec
pop
mov
popa
mov
test
pop
nop
push
or
and
inc
pop
enter
mov
stos
mov
and
jecxz
fisttpl
cmp
pop
dec
add
mov
or
sbb
mov
imul
jnp
jmp
addr16
mov
enter
mov
stos
mov
mov
xchg
imul
push
cmpsb
cmp
pop
repz
mov
inc
mov
rorl
popa
lret
mov
into
mov
xor
or
addr16
mov
adc
popa
push
mov
mov
jb
popa
dec
xchg
or
dec
cmp
pop
in
push
popa
insb
mov
mov
pop
inc
mov
out
mov
andb
pop
into
xchg
popa
imul
cli
pop
dec
repnz
call
addr16
cmp
pop
ret
shlb
lea
and
cmp
in
mov
add
pop
int3
adc
mov
jge
outsb
mov
dec
mov
dec
pop
popa
jmp
xlat
ds
test
popa
enter
arpl
mov
sub
or
addr16
imul
or
xlat
cmp
cmc
lods
popa
int
int3
or
addr16
xchg
aad
popa
sub
dec
or
addr16
mov
xor
popa
or
leave
or
addr16
pop
adc
jno
addr16
mov
jl
popa
je
stos
or
addr16
lods
or
dec
push
popa
lea
movsb
mov
dec
mov
mov
test
pop
pushf
popa
inc
mov
in
mov
scas
cld
popa
into
mov
int3
mov
sub
popa
dec
mov
daa
mov
arpl
popa
mov
addr16
mov
push
popa
mov
movsl
ja
dec
pop
outsl
or
inc
mov
int3
mov
cmpsl
xchg
mov
dec
mov
xchg
popa
jg
dec
or
addr16
pop
out
popa
fistpll
mov
pop
dec
popa
mov
lods
lret
cmp
ret
or
addr16
ds
dec
ss
in
mov
push
mov
cs
popa
dec
mov
mov
test
and
cmp
add
add
popa
mov
addr16
pop
ljmp
addr16
mov
inc
daa
popa
pop
mov
mov
mov
sub
addr16
pop
orb
mov
add
pop
mov
or
addr16
lock
dec
cmp
fsubs
or
popa
lods
mov
xor
mov
mov
jmp
pop
dec
inc
imul
loop
or
mov
ljmp
addr16
mov
shrb
cmp
addr16
pop
pop
xor
or
addr16
pop
mov
mov
mov
sub
dec
mov
add
mov
xlat
ds
push
popa
mov
movsl
mov
dec
pop
in
popa
test
dec
imul
and
pop
cmp
xchg
call
pop
outsb
add
mov
jp
imul
stc
mov
add
rorl
fnstcw
cmp
push
mov
or
xor
pop
or
popa
add
xchg
push
into
or
or
test
inc
mov
test
push
cmp
loop
add
addr16
cmp
pop
mov
popa
mov
lret
fisubs
add
mov
insb
clc
popa
lods
mov
enter
rolb
fsubs
mov
and
out
xor
mov
add
leave
imul
inc
or
addr16
enter
inc
dec
popa
jecxz
mov
mov
or
popa
cmpl
mov
mov
fwait
addr16
mov
jmp
popa
ret
mov
sub
lret
jmp
or
addr16
cmp
pop
xor
or
cmp
mov
lret
fdivp
cmp
jp
insb
cmp
pop
in
dec
popa
addr16
pop
mov
scas
stos
popa
into
mov
mov
pop
or
or
addr16
ljmp
addr16
mov
or
or
addr16
fidivrl
pop
shr
jns
sbb
cmpsl
popa
cmp
outsb
mov
add
mov
fsubl
add
popa
inc
mov
or
stos
sbb
mov
movsl
imul
jno
lods
mov
inc
pop
popa
pop
mov
out
test
dec
popa
mov
addr16
mov
mov
pop
test
sahf
or
addr16
mov
add
popa
mov
fisubs
sub
sub
or
or
pop
imul
mov
into
dec
imul
in
mov
popa
and
int3
mov
dec
fsubl
mov
or
pop
sub
aaa
mov
int3
imul
fadds
out
popa
outsb
mov
dec
add
mov
adc
enter
sbb
jae
sub
push
stos
popa
cmp
lret
iret
test
lea
sub
sbb
insb
addr16
dec
pop
daa
inc
popa
inc
mov
lods
mov
dec
mov
mov
pushf
mov
test
cld
or
addr16
mov
enter
mov
aam
sub
sarb
das
imul
or
insb
mov
addr16
popa
pop
mov
mov
inc
out
popa
aas
mov
test
cmpsl
mov
mov
scas
andl
sub
addr16
mov
or
dec
addr16
pop
insb
iret
popa
mov
mov
out
popa
push
mov
outsb
mov
imul
sub
mov
call
add
jmp
push
popa
mov
movsl
mov
sub
mov
dec
mov
andb
jnp
or
or
pop
test
pop
or
addr16
mov
pop
and
or
mov
sub
stos
cmp
mov
or
jb
dec
pop
dec
mov
mov
or
cmp
pop
dec
xchg
mov
xchg
mov
mov
fbld
ret
out
popa
push
or
addr16
xlat
dec
popa
iret
mov
sub
es
pop
ds
popa
ss
inc
mov
push
cs
push
mov
out
mov
cmp
or
addr16
add
pop
int
popa
in
mov
popa
mov
dec
jno
push
cmp
pop
ret
pop
popa
ljmp
test
cmp
pop
mov
sub
addr16
mov
cltd
andl
dec
or
iret
test
or
popa
daa
mov
leave
mov
test
rorl
sub
and
sbb
mov
stos
or
addr16
fisubs
cmpb
lea
or
lods
sbb
mov
imul
jnp
scas
mov
dec
mov
mov
sub
stos
mov
mov
xchg
or
mov
jecxz
or
or
addr16
mov
ret
lods
popa
sti
mov
addr16
xchg
sub
popa
and
out
mov
or
or
addr16
mov
push
popa
bound
ret
mov
dec
mov
xchg
or
dec
cmp
pop
in
stos
popa
or
mov
mov
inc
mov
mov
lcall
ljmp
cmp
pop
sub
popa
dec
mov
ret
cmp
pop
jecxz
popa
or
mov
cmp
or
addr16
pop
insb
sbb
or
xlat
cmp
pop
gs
cmpsl
mov
jne
scas
cmp
pop
into
inc
popa
imul
popa
test
movsl
or
addr16
pop
mov
test
addr16
mov
dec
loop
in
sub
in
mov
cmp
pop
int
popa
lds
scas
mov
sub
popa
and
jmp
mov
or
popa
add
inc
or
jcxz
adc
or
insb
stos
popa
movsl
dec
cli
cmp
je
insb
cmp
pop
mov
mov
push
mov
sub
jmp
cmp
pop
test
popa
enter
mov
cmp
pop
push
popa
mov
movsl
hlt
cmp
pop
int3
or
les
daa
mov
mov
scas
mov
das
dec
popa
pop
mov
or
bswap
popa
addr16
jecxz
ja
or
outsl
stos
popa
inc
mov
or
add
int
cmpsl
or
addr16
mov
int3
scas
popa
addr16
jg
cmp
pop
outsb
popa
mov
fbld
mov
popa
sub
mov
arpl
mov
push
popa
mov
or
push
int
push
mov
in
mov
cmpsw
popa
jle
or
outsb
mov
inc
into
popa
pop
mov
mov
cmpsb
dec
popa
mov
and
inc
pop
xchg
popa
sahf
mov
dec
mov
out
fidivrl
mulb
dec
popa
mov
mov
cmpsl
and
mov
xor
scas
add
mov
adc
mov
jns
and
pop
orl
mov
pop
call
lea
mov
int3
mov
mov
popa
mov
dec
mov
jmp
and
addr16
mov
leave
or
mov
or
fadds
sub
mov
cmp
daa
or
mov
sbb
out
push
or
addr16
leave
cmp
pop
push
inc
or
addr16
mov
ret
test
or
mov
lret
cli
and
or
addr16
mov
call
push
or
addr16
mov
shrb
fdivrs
leave
mov
fldt
or
arpl
addl
sub
mov
ljmp
sbb
mov
imul
jnp
daa
mov
dec
mov
into
pop
popa
imul
addl
mov
or
mov
jecxz
mov
repz
lret
jp
or
sarl
pop
lret
mov
mov
xchg
xor
or
or
adc
popa
push
dec
or
addr16
pop
jb
popa
dec
mov
cmp
pop
mov
test
in
stos
mov
lea
mov
popa
mov
daa
mov
xchg
out
ljmp
mov
repnz
mov
jmp
pop
rorb
and
mov
jecxz
popa
or
add
insl
lcall
sub
andl
jge
in
pop
jne
popa
dec
mov
mov
push
scas
jno
addr16
mov
mov
sub
cmp
pop
popf
enter
mov
mov
std
sbb
int
or
mov
frstor
popa
aad
addr16
xchg
cs
or
popa
add
out
or
or
test
fs
mov
dec
inc
popa
inc
mov
or
lods
lret
movsl
insl
adc
addr16
or
mov
lods
test
mov
xchg
mov
fsubl
mov
daa
mov
test
das
or
addr16
mov
arpl
popa
ret
mov
addr16
pop
cmpsb
insl
and
int
outsl
insb
mov
push
addr16
dec
mov
cs
jg
popa
xchg
mov
or
fildll
popa
idivl
add
push
or
mov
lret
addr16
push
lods
outsb
iret
ds
data16
jle
insb
or
lods
mov
inc
xchg
mov
scas
clc
pop
into
popa
cmpsb
mov
mov
mov
xchg
add
out
jecxz
out
or
es
sub
pop
js
popa
dec
mov
int
pop
cmp
pop
push
dec
popa
test
int3
or
addr16
mov
mov
popa
mov
into
mov
nop
mov
mov
or
enter
mov
inc
fadds
jecxz
fstpt
dec
mov
add
dec
adc
or
insb
jae
lods
mov
lods
xchg
pop
movsb
xchg
mov
dec
mov
test
popa
pushf
mov
leave
mov
mov
or
sub
ljmp
mov
dec
cli
popa
in
mov
lret
cmp
pop
fisubl
mov
lods
sahf
cmp
pop
and
mov
cmp
pop
add
add
cmp
cmpb
mov
pop
push
mov
pop
or
addr16
mov
mov
mov
pop
into
lea
mov
popf
mov
call
in
mov
cmp
pop
dec
int
ljmp
ds
aad
popa
sub
insb
or
mov
daa
pop
xor
popa
or
or
outsb
mov
adc
popa
insb
mov
or
je
popa
inc
mov
andl
dec
popa
movsb
mov
or
add
or
cld
mov
in
int3
popa
pop
mov
fsubl
scas
daa
popa
into
mov
aaa
mov
dec
pop
popa
call
addr16
mov
or
stos
mov
ja
insl
sub
outsl
int
inc
mov
lods
mov
dec
xchg
mov
mov
scas
dec
popa
xchg
or
mov
jecxz
idivl
pop
out
mov
movsl
or
mov
iret
popa
dec
mov
mov
cmpsl
ss
mov
push
mov
sub
popa
dec
mov
mov
test
popa
enter
arpl
mov
sub
dec
mov
cmpsb
imul
or
insb
mov
mov
inc
mov
out
popa
mov
into
clc
pop
imul
sub
dec
pop
sub
popa
and
andl
dec
popa
add
or
add
or
popa
or
addr16
int3
cmp
pop
addr16
popa
xchg
pop
mov
sub
or
addr16
pop
test
popa
add
cltd
mov
push
popa
mov
movsl
stc
cmp
pop
icebp
in
popa
leave
mov
dec
mov
roll
popa
sub
push
mov
xor
popa
or
mov
adc
or
jcxz
js
or
jo
popa
dec
mov
insl
test
rolb
push
popa
lods
mov
mov
pop
xchg
or
andb
pop
dec
nop
popa
or
loopne
enter
arpl
jecxz
mov
mov
or
popa
cmpl
mov
mov
or
addr16
mov
jmp
popa
sub
test
bound
pop
jp
popa
inc
mov
stos
mov
movsl
insl
xchg
cmp
mov
xchg
insb
popa
add
mov
addr16
mov
jmp
popa
push
mov
icebp
mov
dec
shll
fldenv
call
and
cmp
xor
or
popa
mov
stos
mov
iret
cmp
pusha
or
js
lods
or
addr16
mov
inc
popa
pop
mov
mov
mov
leave
or
addr16
cmpb
mov
call
stos
or
addr16
lods
insl
in
enter
popa
insb
mov
and
pop
xor
mov
sti
mov
sub
popa
test
and
cmp
and
popa
mov
stos
clc
pop
mov
mov
cmp
pop
mov
cli
cmpsl
mov
or
popa
mov
adc
jmp
addr16
test
dec
pop
enter
mov
in
mov
dec
mov
daa
leave
sub
int
aaa
addr16
mov
pop
addr16
mov
dec
mov
addr16
or
addr16
mov
dec
pop
jl
popa
je
dec
int
dec
pop
mov
pop
popa
out
push
or
lods
mov
mov
mov
add
pop
sub
in
lds
fdivrl
pop
aam
popa
dec
mov
into
mov
mov
arpl
mov
mov
popa
lea
mov
jmp
popa
ret
mov
test
lret
mov
inc
mov
ljmp
aad
cmp
mov
or
mov
andl
xchg
popa
out
mov
jcxz
scas
cmp
pop
into
repz
imul
sti
pop
test
popa
enter
inc
and
cmp
or
popa
stos
xchg
arpl
insl
sub
sbb
mov
bound
jb
inc
mov
inc
push
popa
pop
mov
into
mov
mov
sub
addr16
mov
andb
mov
sub
loop
popa
cli
mov
insl
and
cmp
ret
mov
shlb
pop
popa
and
addr16
mov
or
sub
cmp
pop
insl
sub
addr16
pop
jne
jno
arpl
jecxz
mov
stos
or
addr16
lods
or
mov
in
mov
dec
std
popa
mov
xchg
mov
cld
popa
dec
mov
int3
mov
leave
fsubl
mov
das
mov
inc
jmp
mov
pop
mov
sub
pop
mov
lea
inc
dec
popa
aas
mov
inc
mov
cmpsl
dec
imul
scas
mov
leave
jg
push
addr16
mov
inc
out
popa
jecxz
or
addr16
pop
ljmp
mov
in
mov
mov
int3
mov
push
xchg
mov
dec
mov
jle
popa
jbe
test
mov
pop
test
push
mov
arpl
mov
dec
or
addr16
sahf
repnz
out
mov
mov
popa
daa
mov
into
mov
push
sub
mov
cmp
mov
popa
sub
adc
and
arpl
jno
jecxz
dec
pop
sub
push
pop
or
addr16
mov
or
or
addr16
mov
insb
pop
mov
cltd
addr16
mov
jmp
outsb
or
scas
mov
leave
or
mov
mov
and
popa
cmp
mov
add
popa
sbb
or
pusha
or
lea
add
mov
popa
int3
mov
arpl
cs
daa
mov
popa
mov
or
test
cli
mov
enter
arpl
ret
fidivrl
dec
call
and
cmp
int
add
addr16
mov
insl
cmpsl
jno
addr16
mov
jne
popa
dec
mov
test
pop
push
push
or
addr16
add
cmp
popa
xor
orl
push
add
mov
sbb
popa
adc
insl
fs
popa
sub
jl
dec
addr16
in
into
popa
pop
mov
hlt
mov
push
les
mov
aam
or
pop
dec
pop
popa
mov
das
mov
mov
pop
or
punpckhwd
movsl
addr16
pop
pop
sub
ja
dec
or
addr16
mov
aas
cmpsl
popa
push
mov
push
mov
lahf
into
popa
mov
imul
cmp
pop
jg
popa
xchg
mov
inc
mov
out
sub
mov
mov
outsb
popa
insl
mov
jle
sub
jbe
dec
dec
popa
in
mov
push
mov
cmpsb
popa
outsb
mov
mov
sub
popa
dec
mov
sahf
mov
call
out
mov
cmp
pop
push
popa
stos
mov
fisubrs
dec
movsl
cmp
pop
sub
and
daa
mov
or
popa
add
scas
mov
imul
pop
jno
popa
dec
mov
inc
mov
push
or
mov
lods
inc
cmp
repnz
mov
daa
cltd
popa
cmpsl
mov
jmp
pop
out
stc
popa
or
leave
mov
push
rorl
sub
and
jecxz
popa
or
or
or
popa
adc
or
pusha
cmp
pop
js
popa
jo
addr16
addr16
inc
cmp
pop
pop
outsb
popa
test
scas
or
addr16
mov
call
and
sbb
jecxz
cmp
pop
fwait
mov
or
addr16
cmp
pop
xor
popa
sbb
mov
mov
mov
pop
mov
or
addr16
ljmp
addr16
mov
push
ret
fisubl
mov
push
cltd
mov
lods
lods
cmp
pop
dec
loope
sub
stc
or
pop
xor
addr16
xchg
xchg
cs
jecxz
dec
or
addr16
rolb
or
mov
leave
mov
rorl
or
addr16
mov
cmp
popa
xor
mov
ret
fisubl
push
mov
imul
or
addr16
daa
cmp
pop
inc
dec
popa
cs
mov
into
cmp
pop
imul
mov
mov
shlb
shlb
mov
or
xor
popa
sub
mov
or
mov
addr16
mov
xchg
sub
mov
or
push
push
popa
enter
add
ret
mov
mov
ljmp
insl
mov
or
scas
mov
mov
mov
popa
mov
imul
ds
into
push
popa
test
addr16
mov
add
mov
addr16
mov
cli
mov
mov
mov
out
popa
cs
adc
leave
arpl
mov
jae
jecxz
imul
inc
jno
test
push
cmp
pop
dec
int3
popa
jecxz
cmpsl
or
addr16
scas
pop
jmp
popa
ret
mov
sub
sub
pop
dec
inc
popa
and
push
mov
or
dec
or
inc
insl
in
mov
frstor
or
imul
popa
inc
mov
and
test
or
mov
or
lea
sub
push
or
pop
addr16
insl
in
mov
scas
scas
imul
les
fsubl
movsb
mov
test
mov
call
xchg
mov
add
ret
cmp
pop
jecxz
popa
or
dec
mov
insl
in
pop
pop
lea
mov
dec
mov
mov
cmpsl
mov
subb
mov
sub
shlb
or
popa
enter
arpl
mov
sub
or
mov
pop
loop
popa
cli
mov
lods
mov
fiaddl
popa
and
or
xor
mov
mov
or
insl
mov
addr16
mov
jne
popa
dec
mov
add
mov
sub
mov
popa
lea
or
dec
cmp
in
mov
insb
addr16
mov
pop
mov
lds
aad
push
mov
and
mov
pop
into
xor
or
add
mov
pop
leave
adc
or
mov
arpl
mov
inc
mov
dec
push
popa
mov
movsb
imul
popa
mov
lods
mov
xchg
daa
jno
addr16
cmpsl
pop
cld
popa
hlt
mov
mov
into
popa
fdivrl
test
pop
pop
push
or
addr16
arpl
jmp
or
addr16
mov
pop
or
lea
inc
mov
pop
push
popa
cmpsl
mov
cmp
dec
lahf
popa
mov
scas
mov
dec
jg
mov
mov
dec
fbld
mov
out
mov
inc
mov
or
addr16
mov
lret
insl
fsubl
ds
sub
push
cmp
pop
push
lods
popa
push
mov
daa
mov
jle
popa
jbe
out
dec
addr16
outsb
pop
pop
scas
popa
push
mov
or
cmpsb
test
or
addr16
pop
xchg
popa
out
mov
mov
pop
imulb
popa
into
mov
stos
mov
fcmovnbe
cmp
and
add
popa
in
mov
or
lods
sbb
mov
imul
mov
test
pop
scas
mov
or
mov
addl
mov
cmp
push
stc
or
addr16
mov
arpl
popa
mov
or
add
push
popa
stos
mov
inc
imul
pop
push
sub
test
dec
or
addr16
mov
mov
cmpsl
mov
loopne
popa
clc
mov
scas
mov
shrb
sarb
test
pop
xor
popa
add
test
adc
pop
or
popa
arpl
andl
or
addr16
mov
lret
lret
movsl
or
dec
cmp
xor
int
popa
or
add
sbb
adc
int3
push
pop
mov
jp
xchg
pop
dec
popa
push
mov
pop
mov
into
stos
popa
or
mov
pop
leave
mov
mov
inc
and
cmp
pop
push
sub
mov
stos
mov
in
cmp
cld
fadds
hlt
popa
in
mov
les
lods
pop
or
addr16
mov
jmp
mov
outsl
mov
outsb
aas
popa
scas
mov
dec
mov
imul
jmp
cmp
pop
push
iret
or
addr16
es
arpl
popa
mov
addr16
mov
push
popa
stos
mov
jle
or
popa
dec
mov
insb
mov
push
daa
popa
scas
mov
out
mov
scas
popa
mov
sub
xchg
test
or
sub
dec
pop
imul
popa
into
mov
mov
pop
push
sub
popf
scas
movsl
dec
mov
or
lods
sbb
mov
imul
mov
dec
mov
test
arpl
mov
or
mov
addl
mov
jmp
loope
lea
icebp
sub
leave
mov
lods
mov
shll
popa
sub
cmpsl
mov
adc
popa
push
scas
mov
test
popa
mov
addr16
pop
mov
popa
cmpb
mov
mov
inc
mov
lock
mov
lret
lods
insl
pop
cmp
pop
lea
popa
sub
fisttpl
addr16
mov
daa
push
popa
addr16
mov
pop
cs
outsb
mov
andl
xchg
popa
imul
fwait
pop
sub
popa
push
addr16
mov
and
popa
arpl
sub
or
popa
stos
mov
or
shld
cmp
pop
sbb
adc
in
mov
jp
popa
jb
or
outsb
mov
pop
sub
mov
jmp
pop
mov
enter
arpl
xchg
jecxz
ljmp
mov
repnz
sarb
fdivrl
fimull
xor
or
addr16
pop
daa
adc
pop
cmpsl
jge
mov
adc
mov
pop
into
cld
popa
or
int3
mov
leave
fsubl
mov
daa
mov
enter
mov
dec
mov
ret
fbld
mov
out
call
dec
popa
mov
addr16
iret
cmp
pop
cs
popa
es
xchg
push
dec
popa
push
mov
or
outsb
leave
popa
mov
jle
mov
dec
inc
popa
inc
mov
or
scas
lret
movsl
insl
ja
xchg
push
mov
out
sub
decb
mulb
into
pop
in
popa
daa
mov
mov
out
popa
cs
xor
out
add
mov
adc
mov
jns
push
dec
popa
call
addr16
mov
mov
mov
mov
stos
mov
mov
movsl
cltd
cmp
call
in
mov
shrl
mov
in
mov
xor
or
out
sbb
pop
adc
enter
shlb
fdivrs
pop
shrb
and
jmp
pop
sub
add
call
pop
jmp
popa
ret
mov
jecxz
sarl
pop
lret
push
or
mov
sbb
inc
cmp
push
add
in
mov
jb
insb
cmp
pop
lods
pop
popa
in
mov
stos
mov
cmpsl
mov
or
mov
addb
lcall
push
xor
or
jmp
mov
inc
test
pop
mov
and
add
movsl
mov
jecxz
mov
sub
lea
xchg
mov
ljmp
cmp
mov
or
insb
cmp
pop
mov
daa
mov
insb
mov
push
je
scas
mov
inc
mov
imul
test
pushf
pop
push
aam
and
mov
jecxz
popa
or
pop
mov
insl
push
pop
pop
lea
mov
dec
mov
ja
popa
outsl
mov
mov
mov
sub
lahf
jmp
or
addr16
mov
jg
popa
xchg
mov
inc
mov
ffreep
popa
idivl
dec
mov
mov
or
addr16
mov
or
popa
lods
mov
mov
xchg
popa
cs
push
mov
into
popaw
or
jbe
mov
pop
leave
inc
popa
or
push
mov
enter
mov
mov
ret
cmp
pop
push
popa
stos
mov
adc
mov
mov
mov
sub
dec
cmp
pop
inc
lods
popa
pop
mov
pop
mov
mov
outsb
mov
mov
popa
cmpl
or
mov
enter
add
icebp
inc
popa
leave
mov
ret
mov
rorl
sub
lret
lods
or
dec
or
mov
sbb
int3
push
or
addr16
cs
pop
dec
dec
popa
out
mov
pop
mov
leave
test
push
addr16
pop
inc
mov
mov
cwtl
mov
lret
insl
mov
loopne
lea
addr16
lock
pop
enter
mov
cmpsl
mov
and
jae
mov
addr16
mov
jnp
popa
push
mov
leave
mov
pop
dec
popa
mov
mov
addr16
add
mov
ret
or
addr16
jecxz
mov
fldt
addr16
in
cmp
pop
or
popa
lods
mov
lret
mov
xchg
popa
cs
push
out
cmp
pop
sub
dec
mov
dec
mov
test
popa
enter
add
mov
ret
lcall
ficompl
pop
rorb
cmp
mov
lods
fimull
addr16
sarb
cmp
push
jge
dec
mov
dec
mov
imul
leave
cmp
pop
push
mov
and
mov
jecxz
popa
sub
in
mov
sub
hlt
mov
in
imul
pop
pop
lods
jmp
mov
cmp
xchg
cs
cmpsl
mov
or
or
xchg
popa
call
addr16
mov
sub
popa
dec
mov
out
imul
or
insb
mov
cs
popa
es
out
push
cmp
pop
outsb
scas
popa
mov
jle
imul
mov
dec
mov
scas
enter
add
addr16
mov
mov
popa
xchg
ljmp
out
repnz
mov
mov
popa
daa
mov
fisubs
push
sub
mov
cmp
test
add
push
imul
cmp
pop
arpl
mov
addr16
mov
push
popa
stos
mov
mov
mov
repnz
andl
mov
loope
addr16
pop
cmpsl
icebp
popa
mov
shll
mov
mov
or
dec
mov
mov
andl
stos
popa
pop
mov
insl
fildll
mov
sub
popa
dec
mov
add
cmpsl
pop
popa
mov
stos
mov
sub
popa
dec
mov
cmp
xor
enter
arpl
cmp
pop
pop
push
push
mov
lret
inc
idivl
sub
pop
cmp
dec
mov
cs
cmp
pop
xchg
mov
dec
mov
push
or
mov
leave
mov
data16
mov
inc
mov
inc
or
mov
lret
lods
insl
out
cmp
pop
lea
or
add
cmp
adc
mov
arpl
imul
push
cmp
pop
arpl
jecxz
dec
or
addr16
cmp
sub
movl
mov
in
mov
xchg
out
mov
out
mov
repz
or
addr16
pop
shl
popa
lret
mov
ljmp
cmp
in
xor
mov
add
out
popa
outsb
mov
bound
jmp
dec
or
addr16
mov
jecxz
popa
push
stos
or
addr16
xlat
movsl
mov
insb
popa
mov
addr16
out
xchg
outsb
popa
ljmp
mov
repnz
or
arpl
jecxz
shrb
cmp
ljmp
cmp
insb
popa
or
addr16
out
adc
out
push
lahf
cmp
sarb
push
pop
inc
arpl
mov
push
add
popa
movsl
movsl
insl
cs
mov
insb
cmp
pop
in
test
mov
xchg
mov
out
in
imul
int
call
add
jecxz
loopne
or
clc
stos
popa
lock
insl
es
shlb
shlb
mov
cmpsl
sub
mov
cmp
sub
popa
dec
mov
sbb
test
popa
enter
arpl
mov
sub
dec
mov
pop
imul
or
insb
mov
xchg
daa
popa
mov
out
fwait
cmp
pop
repz
popa
jmp
into
or
imul
popa
lret
mov
call
pop
cmp
or
addr16
add
lcall
cmp
push
in
cmp
pop
or
popa
lods
mov
dec
mov
xchg
cs
stos
mov
or
or
mov
addb
lcall
addr16
cli
popa
stos
mov
cmp
insl
push
pop
ret
fidivrl
dec
call
and
or
addr16
pop
outsb
add
or
addr16
xchg
cmp
pop
cmpsb
sub
mov
test
mov
pop
xchg
popa
sahf
mov
mov
pop
out
popa
mov
stos
mov
fildl
cmp
mov
in
mov
jecxz
insb
cmp
pop
lods
repz
in
mov
ret
mov
cmpsl
shll
mov
sub
scas
in
daa
in
out
popa
in
sub
imul
popa
les
push
pop
daa
call
or
arpl
mov
mov
push
sarl
fldl2e
popa
rcll
mov
mov
xor
sub
popa
insb
mov
sbb
daa
push
or
lods
in
out
and
outsb
or
scas
mov
add
imul
sub
cmp
pop
dec
call
or
arpl
mov
movsl
addr16
mov
fistl
cmp
test
pop
popf
popa
int
xchg
or
addr16
mov
mov
cmc
mov
xchg
popa
mov
aad
dec
cmp
pop
mov
popa
into
mov
aam
dec
cmp
pop
mov
popa
leave
mov
das
mov
mov
popa
enter
add
mov
sbbl
mov
outsl
mov
mov
popa
lret
cmp
outsb
or
cmpsl
cmp
pop
lahf
or
mov
mov
addr16
mov
mov
mov
out
popa
fistpll
mov
movl
mov
cmp
pop
lea
popa
or
ds
addr16
push
pop
xchg
popa
mov
push
mov
mov
into
addr16
or
pop
dec
dec
popa
mov
pop
mov
dec
scas
popa
mov
mov
pop
inc
mov
mov
sahf
mov
dec
out
popa
mov
imul
popa
mov
or
cmp
pop
sub
cmp
mov
or
or
addr16
mov
imul
mov
mov
leave
mov
push
dec
popa
test
addr16
add
mov
popa
mov
ret
mov
xchg
dec
popa
jmp
addr16
lods
or
dec
leave
popa
lea
fldenv
dec
sub
mov
cmp
inc
or
mov
sbb
dec
push
or
addr16
or
pop
dec
dec
popa
mov
pop
mov
dec
test
mov
mov
pop
inc
mov
mov
cwtl
mov
dec
call
or
addr16
imul
popa
sarb
mov
and
xor
mov
add
or
addr16
mov
mov
into
mov
imul
mov
leave
mov
dec
dec
popa
mov
addr16
add
stos
inc
popa
adcl
pop
xchg
or
mov
mov
repz
dec
mov
sti
mov
dec
lret
popa
in
mov
and
xor
mov
add
dec
adc
mov
bound
enter
mov
inc
mov
dec
push
popa
ljmp
mov
int
mov
insb
or
mov
daa
pop
lcall
ljmp
pop
cli
into
popa
repnz
mov
fimull
sarb
movsl
add
ret
mov
or
sub
sbb
addr16
mov
mov
int3
mov
dec
xchg
mov
dec
mov
mov
test
pop
mov
popa
lea
and
xchg
jecxz
in
mov
stos
rolb
lret
movsl
insl
scas
cmp
lds
dec
aad
in
mov
and
cmpsl
cmp
pop
xor
outsb
mov
add
sub
pop
dec
adc
jmp
addr16
jl
enter
mov
inc
mov
or
mov
movsb
mov
or
popa
mov
int
pushf
cmp
pop
xchg
dec
popa
in
mov
int3
mov
hlt
inc
popa
int3
mov
mov
aam
popa
daa
mov
sub
das
jmp
or
addr16
pop
cmp
pop
packsswb
mov
sub
outsl
ljmp
aas
push
mov
dec
popa
insb
mov
lahf
mov
inc
scas
popa
out
xchg
addr16
dec
cmp
pop
mov
or
fbld
testl
mov
mov
pop
mov
popa
enter
add
mov
xorl
ret
mov
push
mov
mov
popa
lret
cmp
mov
iretw
ds
jle
popa
jbe
insb
or
mov
daa
pop
pop
inc
popa
push
mov
push
mov
mov
imul
mov
dec
mov
out
add
mov
ret
mov
into
mov
mov
or
dec
cmp
pop
lea
popa
int
cmp
xor
or
mov
popa
int3
mov
adc
xchg
mov
jno
dec
cmp
sarb
pop
mov
dec
test
or
addr16
pop
call
orl
cmp
pop
push
popa
mov
movsl
stc
cmp
pop
icebp
in
popa
leave
mov
lods
mov
shll
sub
mov
xor
popa
or
dec
mov
adc
popa
push
addr16
mov
jo
popa
dec
mov
inc
mov
push
ret
popa
test
or
addr16
mov
mov
popa
mov
or
addr16
mov
int
popa
or
loopne
dec
addr16
mov
int3
enter
rorb
fsubs
and
mov
xor
into
add
mov
adc
leave
arpl
mov
jae
mov
pop
enter
mov
push
mov
push
popa
mov
movsl
mov
dec
pop
stos
in
popa
cmpl
mov
mov
jecxz
xchg
addr16
dec
pop
jmp
popa
ret
mov
test
pop
lret
push
or
addr16
add
xor
or
ret
mov
adc
push
mov
addr16
lods
or
dec
dec
popa
lea
pop
mov
dec
stos
popa
mov
mov
pop
inc
mov
mov
lcall
ljmp
cmp
pop
leave
repnz
push
addr16
cmp
pop
inc
shlb
xchg
or
and
lret
movsl
insl
out
or
mov
dec
adc
or
xlat
cmp
inc
jge
xchg
dec
mov
dec
pop
popa
mov
ds
or
or
addr16
leave
cmp
pop
or
or
addr16
mov
add
popa
inc
mov
cmp
ret
int
or
frstor
insl
incb
sub
popa
and
arpl
xor
popa
or
pop
or
cmpsl
mov
adc
popa
insb
mov
sub
je
popa
dec
mov
test
pop
cmp
pop
push
arpl
mov
ret
mov
mov
popa
mov
lret
lods
or
dec
in
popa
lea
cld
mov
dec
int3
popa
mov
faddl
pop
aam
inc
mov
pop
mov
push
das
popa
dec
mov
jmp
dec
punpcklwd
mov
pop
mov
enter
mov
aas
mov
dec
dec
popa
ljmp
lahf
iret
ds
mov
popa
scas
mov
mov
xchg
inc
popa
mov
push
pop
fisttps
idivl
cmp
or
mov
mov
or
mov
mov
push
add
mov
andl
or
mov
mov
dec
or
dec
addr16
mov
insb
scas
popa
mov
mov
pop
out
popa
push
mov
sahf
mov
imul
or
addr16
mov
call
call
pop
ret
popa
push
sub
and
cmp
popa
or
int
sbb
pop
adc
mov
int3
mov
jno
popa
dec
mov
mov
push
dec
popa
test
addr16
mov
mov
popa
mov
leave
pop
cltd
or
mov
mov
stc
add
mov
andl
or
mov
mov
cmp
dec
mov
add
or
popa
dec
mov
pusha
mov
inc
jo
out
dec
or
addr16
mov
into
push
popa
imul
mov
call
andb
pop
ret
nop
popa
push
call
sbb
mov
addr16
enter
popa
dec
mov
shlb
pop
mov
sub
push
cmp
mov
or
or
popa
dec
mov
imul
jnp
dec
mov
dec
mov
add
or
mov
push
popa
mov
movsl
xchg
cmp
pop
mov
popa
jecxz
or
fwait
lods
mov
jmp
popa
ret
mov
mov
lret
out
popa
sub
test
pop
xor
or
and
adc
popa
push
or
stos
mov
jb
daa
cmp
lea
pop
mov
in
stos
popa
pop
mov
mov
pop
outsb
mov
mov
lcall
ljmp
addr16
mov
arpl
popa
cmpl
mov
ljmp
and
xchg
mov
or
pop
daa
sbb
or
insl
mov
mov
jne
imul
or
mov
mov
mov
pop
inc
lea
mov
popf
mov
dec
in
popa
mov
std
imul
or
iret
cmp
fisttpll
aad
dec
or
mov
int3
pop
cmp
popa
xor
inc
or
xchg
movl
mov
mov
jl
or
addr16
mov
inc
leave
popa
pop
mov
dec
mov
movsb
enter
add
addr16
rolb
popa
add
or
imul
add
mov
lea
ret
addr16
mov
dec
test
or
addr16
pop
inc
mov
mov
cltd
mov
dec
push
mov
jp
dec
cmp
pop
jmp
sbb
adc
cmp
cmpb
mov
push
mov
mov
or
dec
cmp
pop
int3
popa
int
insb
xor
or
fs
mov
je
popa
dec
mov
cmpsl
push
mov
push
out
movsl
addr16
dec
pop
mov
popa
lea
test
pop
lds
popa
fnstsw
test
sub
call
push
mov
andl
or
mov
lret
lods
insl
adc
pop
cld
popa
int
hlt
or
addr16
mov
mov
popa
int3
mov
daa
mov
xchg
or
addr16
mov
sub
popa
dec
mov
mulb
test
popa
enter
arpl
mov
sub
popa
dec
mov
xor
imul
insb
mov
mov
or
lods
and
pop
cmp
or
or
test
adc
test
bound
pop
jp
popa
jb
inc
or
jcxz
inc
cmp
pop
pop
dec
popa
push
mov
lods
popa
cmp
pop
dec
mov
or
mov
addb
lcall
addr16
cli
popa
mov
lret
cmp
pop
into
fisubl
mov
lods
push
cmp
pop
and
or
cmp
pop
add
add
cmp
cmpb
mov
dec
fstpt
inc
push
mov
push
popa
sub
jmp
pop
lods
mov
or
lea
test
cmpsl
popf
popa
out
xchg
or
addr16
mov
into
std
popa
or
int
mov
or
sub
mov
pop
enter
mov
or
jecxz
add
sub
push
adc
stos
insb
mov
or
popa
je
lea
addr16
inc
cmp
pop
pop
dec
jno
mov
daa
pop
movsb
addr16
mov
addr16
dec
pop
cld
out
popa
hlt
mov
test
pop
fsubrl
mov
call
pop
arpl
mov
jecxz
outsl
cmp
pop
inc
dec
popa
aas
test
in
push
mov
ds
cmpsl
int
lahf
mov
dec
mov
xchg
popa
jg
arpl
dec
popa
out
mov
or
mov
out
or
mov
enter
add
iret
inc
popa
cs
ret
mov
ss
popa
push
mov
lret
lods
or
dec
outsb
popa
lea
jle
dec
cmp
pop
in
dec
popa
daa
mov
pop
mov
out
popa
push
mov
mov
dec
mov
mov
jmp
out
or
addr16
call
mulb
mov
mov
lret
dec
pop
and
mov
or
cmp
pop
xor
popa
or
cmpsl
mov
adc
popa
imul
or
jno
popa
dec
mov
mov
add
popa
push
mov
andl
cld
pop
push
popa
stos
mov
mov
rol
popa
lret
mov
or
bound
pop
mov
daa
or
addr16
mov
test
pop
mov
or
addr16
add
imul
or
addr16
mov
test
popa
call
xor
dec
pop
jecxz
popa
sub
xchg
mov
mov
movsl
insl
popa
mov
addr16
add
mov
cmp
sysret
popa
cmpsl
xchg
addr16
out
testl
push
mov
sub
mov
mov
aaa
movsl
sub
pop
dec
jle
call
addr16
mov
mov
push
or
scas
mov
mov
cmp
mov
mov
add
pop
int
popa
insb
mov
cmp
daa
fs
inc
mov
je
push
lods
push
pusha
into
popa
js
imul
cmp
incl
or
addr16
pop
fsubs
or
addr16
fstpt
jmp
or
addr16
in
cmp
pop
or
popa
lods
mov
or
xchg
popa
cs
push
out
cmp
pop
or
popa
test
addr16
mov
dec
lret
mov
fisubl
cmp
pop
shrl
mov
lods
mov
sub
dec
and
mov
xor
int3
add
mov
adc
dec
pusha
popa
out
mov
jo
test
inc
popa
push
addr16
mov
inc
mov
or
addr16
stos
cmp
pop
lret
insl
mov
cwtl
mov
sub
call
in
popa
clc
mov
cmpsl
mov
shrb
mov
sub
fucomi
popa
xor
test
add
pop
cmp
adc
sub
sbb
popa
jae
or
mov
jnp
insb
mov
dec
mov
inc
pop
popa
out
mov
push
stos
mov
into
mov
or
mov
test
mov
and
addr16
mov
je
pop
or
mov
pop
imul
pop
lods
or
movsb
mov
mov
mov
out
int3
cmp
pop
les
or
imul
popa
aaa
mov
call
pop
jmp
or
addr16
scas
mulb
xchg
and
addr16
mov
xchg
xchg
addr16
mov
out
popa
mov
sub
orl
mov
or
or
call
addr16
pop
jecxz
popa
or
jge
lahf
arpl
popa
sub
inc
or
addr16
mov
pop
sbb
movsl
mov
dec
xchg
popa
out
mov
in
mov
dec
mov
lds
adc
sub
and
mov
sub
and
sub
add
dec
pop
sbb
popa
adc
pop
or
cmpsl
mov
jl
popa
je
scas
or
addr16
mov
pop
test
or
addr16
mov
mov
ljmp
push
loopne
mov
mov
addr16
rorb
fsubs
out
and
mov
xor
push
cmp
adc
or
mov
insl
icebp
and
mov
insb
mov
inc
inc
popa
jnp
cs
mov
popa
mov
addr16
mov
and
stos
mov
or
mov
insl
leave
cmp
pop
int
popa
lods
mov
repz
outsb
ret
popa
into
mov
shll
mov
popa
arpl
cmp
shll
xchg
jecxz
add
pop
sbb
push
out
bound
pop
jp
popa
jb
test
mov
pop
arpl
mov
cmp
mov
or
addr16
insb
cmp
pop
int3
andb
lcall
cmp
xchg
mov
cli
mov
add
popa
jecxz
ret
addr16
sub
pushf
int
pop
movsl
pop
lds
fnstsw
pop
mov
and
popa
cmp
mov
or
mov
add
popa
sbb
mov
add
addl
or
mov
mov
dec
mov
jns
dec
cmp
pop
int3
dec
popa
inc
mov
pop
mov
dec
test
or
andl
popa
push
loopew
and
pop
inc
icebp
popa
cmpl
mov
ljmp
iret
ds
mov
or
xor
pop
or
popa
add
xchg
push
dec
or
addr16
mov
dec
imul
addr16
pop
test
popa
mov
andl
lcall
or
dec
pop
or
or
insb
mov
push
pop
or
cmpsl
mov
dec
push
popa
inc
mov
into
mov
test
popa
mov
addr16
bound
arpl
nop
jecxz
call
addr16
mov
lock
dec
shlb
pop
insb
shlb
mov
sub
mov
cmp
or
popa
test
imul
pop
call
push
or
addr16
mov
mov
mov
or
dec
pop
sub
mov
lods
mov
sti
addr16
sarl
mov
mov
popa
into
movsl
mov
imul
sub
mov
mov
push
movsl
and
pop
inc
pusha
popa
cmpl
mov
dec
push
popa
mov
mov
mov
lea
mov
mov
add
cmp
test
mov
or
popa
dec
mov
lds
test
popa
enter
arpl
mov
sub
push
add
mov
call
dec
popa
cs
or
ds
pop
ss
popa
push
mov
cmpsl
mov
push
push
popa
outsb
mov
mov
popa
mov
mov
dec
dec
popa
inc
mov
add
mov
push
mov
fistl
cmp
andl
mov
loope
addr16
pop
xchg
popa
cs
shll
shll
sub
and
push
xor
or
add
jecxz
popa
or
push
insl
lcall
cmp
pop
dec
dec
popa
inc
mov
pop
mov
test
popa
mov
mov
sub
mov
cmpb
mov
call
arpl
andl
pop
enter
mov
or
add
popa
int
fisttpl
xor
sub
daa
add
mov
adc
scas
arpl
mov
jae
mov
pop
sub
dec
mov
push
mov
mov
pop
mov
mov
andl
mov
or
mov
int3
mov
repz
popa
jmp
out
or
addr16
mov
rorl
or
addr16
mov
cmp
in
mov
add
xchg
popa
outsb
mov
rolb
popa
or
dec
mov
jecxz
popa
or
cmp
lret
insl
dec
and
addr16
mov
pop
sub
lcall
mov
loop
popa
cli
mov
push
pop
ret
fidivrl
ljmp
pop
and
or
xor
cmp
pop
add
xchg
cmp
cmpb
mov
out
leave
popa
mov
mov
push
inc
popa
push
mov
dec
mov
jle
daa
pop
jbe
dec
mov
inc
mov
in
andb
cwtl
or
addr16
mov
dec
jb
into
mov
inc
mov
leave
push
popa
push
addr16
cmp
pop
inc
in
daa
mov
or
cmp
pop
or
dec
sub
and
or
popa
lods
movsl
pop
mov
int3
or
iret
cmp
pop
cmpsl
imul
mov
mov
or
addr16
mov
movsl
aam
cmp
and
das
jecxz
pop
mov
stos
mov
daa
test
popa
lea
ja
dec
cmp
pop
in
inc
popa
pop
mov
push
mov
push
cmpsl
popa
scas
mov
scas
mov
test
xchg
mov
mov
popa
and
mull
jecxz
daa
and
popa
mov
or
or
or
addr16
std
cmp
pop
cmc
mov
push
and
movsl
cmpsl
sub
out
mov
push
pop
jg
popa
xchg
mov
sub
imul
popa
push
iret
cmp
js
jno
addr16
mov
or
mov
jmp
lcall
cmp
loop
dec
or
addr16
mov
aad
popa
sub
xchg
addr16
mov
xor
popa
or
mov
addr16
mov
adc
popa
insb
mov
leave
mov
je
popa
dec
xchg
call
pop
pop
or
mov
or
lea
pop
int
popa
or
xchg
or
addr16
mov
addr16
popa
xchg
int3
mov
out
fsubl
mov
daa
mov
push
outsl
or
addr16
rolb
popa
mov
addr16
mov
lret
dec
mov
mov
int
scas
addr16
mov
jg
popa
xchg
mov
dec
mov
fildll
popa
idivl
jmp
pop
mov
and
arpl
addl
sub
mov
ljmp
dec
repnz
pop
mov
mov
or
addr16
pop
push
mov
mov
sahf
mov
mov
popa
sub
mov
enter
fisubs
pop
subl
sub
cmp
lret
insl
cwtl
and
xchg
jecxz
sbb
imul
in
pop
jno
popa
inc
mov
cmpsl
mov
test
outsb
or
scas
mov
mov
popa
cmpl
jmp
loope
push
pop
icebp
call
mov
sbb
or
addr16
pusha
cmp
pop
js
popa
xor
push
mov
cmp
adc
or
in
arpl
mov
and
xor
mov
add
into
adc
mov
bound
leave
jb
push
pop
int
insl
and
adc
popa
insb
mov
dec
mov
je
daa
call
inc
mov
in
push
popa
cmpsl
mov
movsb
mov
dec
mov
out
mov
test
jmp
popa
leave
mov
arpl
shrl
popa
sub
ljmp
xor
mov
add
mov
popa
daa
mov
pusha
mov
push
jo
mov
inc
mov
leave
push
popa
push
cmp
pop
add
or
addr16
or
pop
hlt
insl
daa
clc
int3
popa
lea
fsubl
in
daa
popa
pop
mov
dec
sbb
mov
pop
scas
popa
push
mov
imul
mov
call
pop
pushf
mov
or
addr16
in
mov
cld
fcomi
cmp
int3
mov
or
popa
lods
mov
daa
mov
xchg
popa
cs
pop
mov
or
popa
test
addr16
pop
pop
mov
and
inc
mov
or
stos
mov
cmpsl
imul
pop
mov
popa
scas
mov
in
mov
xchg
cmpsl
popa
mov
outsb
mov
imull
popa
out
mov
jmp
pop
xlat
test
iret
xchg
ljmp
andl
sub
addr16
mov
push
or
dec
addr16
mov
insb
popaw
mov
jbe
inc
cmp
pop
out
popa
push
mov
push
mov
mov
mov
pop
dec
mov
mov
sahf
mov
ret
out
popa
push
out
mov
call
dec
popa
into
mov
or
fidivrs
pop
int3
popa
sub
xchg
xor
or
cmp
sbb
or
addr16
pop
jns
popa
jno
inc
or
jcxz
inc
cmp
pop
pop
stos
popa
push
mov
insl
shrb
mov
sub
popa
dec
mov
andl
mov
loope
mov
pop
sub
popa
dec
mov
shll
shll
mov
and
sub
popa
dec
mov
add
and
mov
insb
mov
js
popa
jo
inc
or
addr16
inc
cmp
pop
pop
scas
popa
push
mov
imul
mov
call
pop
cwtl
mov
or
addr16
loopne
mov
clc
fcmovnu
cmp
enter
rolb
fsubs
mov
and
mov
sub
out
cmp
mov
or
push
jae
and
incl
or
addr16
or
pop
stos
dec
popa
lret
cmp
xor
mov
sub
stos
dec
popa
cmpl
mov
mov
popa
jecxz
outsb
or
mov
sub
jmp
popa
ret
mov
or
lret
enter
arpl
andl
pop
xor
or
or
add
popa
int
push
insb
bound
jp
daa
jb
inc
mov
inc
mov
scas
push
popa
into
mov
mov
pop
sub
or
andb
pop
mov
ljmp
cmp
fwait
mov
repnz
in
mov
fisubrl
insl
jae
addr16
pop
xchg
or
addr16
pop
or
or
insl
mov
mov
jne
inc
cmp
pop
jecxz
popa
or
push
mov
cmp
movsl
mov
sub
mov
dec
pop
in
popa
test
cmpsl
mov
in
outsb
popa
in
mov
cmp
pop
int
popa
lds
test
aad
enter
popa
and
orl
sub
or
popa
add
or
mov
insb
jno
addr16
jl
daa
je
inc
mov
inc
mov
scas
push
popa
into
mov
movsb
mov
sub
call
cmp
pop
mov
in
or
addr16
mov
sub
and
mov
in
mov
fsubrl
daa
addr16
xchg
aaa
cs
das
mov
out
mov
imull
or
addr16
pop
xlat
and
mov
jecxz
es
pop
ds
popa
ss
insl
arpl
mov
sub
popa
dec
mov
mov
cmpsl
jbe
movsl
stos
mov
outsb
cmp
stos
or
insl
into
mov
mov
popa
mov
sub
xchg
call
cmp
jecxz
inc
data16
popa
or
dec
call
jp
dec
es
in
mov
add
int3
dec
popa
addr16
pop
mov
dec
stos
popa
out
mov
mov
pop
mov
or
addr16
mov
mov
popa
enter
add
mov
or
ret
mov
and
mov
popa
lret
fs
dec
push
lea
mov
or
in
cmp
pop
pop
push
popa
cmpsl
mov
cltd
mov
mov
popa
into
mov
stc
mov
mov
cmp
add
popa
mov
addr16
push
dec
pop
mov
cmp
pop
addr16
mov
test
popa
mov
addr16
mov
mov
or
outsb
mov
loopne
popa
clc
mov
jmp
pop
shrb
shlb
mov
xor
popa
sub
mov
lods
adc
arpl
or
in
cmp
pop
daa
outsl
popa
addr16
mov
out
scas
pop
xchg
mov
xchg
mov
sub
or
addr16
mov
sub
popa
push
outsb
mov
and
arpl
mulb
sub
popa
push
sbb
adc
popa
sub
jns
insl
or
iret
ds
pop
in
popa
push
mov
insb
mov
jmp
daa
or
addr16
cmpsl
pop
leave
out
cmp
outsb
mov
dec
out
popa
inc
mov
imul
mov
push
jmp
mov
imul
popa
sub
in
mov
or
or
mov
popa
fnstsw
int3
mov
sahf
cmpsl
popa
xchg
mov
push
mov
jmp
popa
ret
mov
test
pop
sub
or
or
arpl
pop
sbbl
ret
mov
js
add
lret
cmp
dec
or
adc
mov
or
rolb
in
mov
xor
movl
or
adc
or
dec
arpl
mov
jae
test
imul
inc
popa
arpl
push
mov
mov
pop
mov
loope
lods
stos
mov
in
mov
or
mov
jecxz
int3
fwait
popa
addr16
jmp
cs
pop
dec
sti
popa
out
mov
lret
mov
leave
and
mov
xor
arpl
popa
cmpl
mov
ljmp
xchg
jecxz
jb
int
dec
or
inc
mov
in
mov
stos
addr16
mov
addr16
mov
cs
mov
lret
mov
xchg
test
or
addr16
pop
bnd
or
addr16
mov
rorb
jno
lcall
cmp
sub
mov
xor
lea
sbb
dec
or
addr16
pop
daa
popa
jge
inc
or
addr16
dec
cmp
pop
inc
scas
popa
pop
mov
imul
mov
push
pop
call
or
arpl
addl
sub
mov
ljmp
int
mov
fldl
or
popa
lods
mov
and
daa
cmp
pop
addr16
cmpsl
mov
add
outsb
cmp
pop
mov
sub
mov
leave
je
or
inc
mov
and
mov
movsb
mov
stos
mov
lret
cmp
orl
cmp
pop
xchg
dec
popa
in
mov
int3
mov
hlt
inc
popa
int3
mov
mov
aam
popa
daa
mov
into
mov
das
test
or
addr16
pop
xchg
popa
xchg
mov
cmp
out
popa
fistpll
ljmp
repnz
xlat
mov
mov
popa
daa
mov
mov
cs
popa
dec
mov
push
mov
test
data16
addr16
mov
pop
and
inc
mov
pop
mov
stos
scas
popa
lret
cmp
xchg
or
mov
sub
mov
mov
in
mov
out
addr16
mov
mov
fimuls
pop
mov
jmp
or
addr16
pop
cmp
popa
xor
inc
mov
sbb
popa
adc
ljmp
jp
mov
dec
mov
mov
daa
mov
call
cmp
pop
cmovle
mov
or
outsl
leave
popa
inc
mov
mov
dec
inc
popa
cmpsl
mov
or
scas
lret
movsl
insl
jecxz
jg
lea
mov
dec
out
in
mov
mull
mov
outsb
addr16
pop
sub
popa
dec
mov
mov
test
popa
enter
arpl
mov
sub
popa
dec
mov
imul
mov
insb
mov
xchg
daa
jno
cli
or
xchg
push
mov
add
pop
into
adc
or
xlat
cmp
mov
leave
mov
dec
mov
mov
enter
arpl
ds
mov
push
or
pop
lret
push
add
or
lods
repz
daa
fisubrl
and
in
popa
movsl
mov
lods
mov
lea
test
mov
in
out
popa
in
or
cmp
pop
int
popa
lds
test
aad
call
and
arpl
addr16
cmp
pop
or
popa
add
dec
or
addr16
popa
insl
mov
jl
in
je
sub
dec
pop
mov
pop
popa
int3
mov
lods
mov
addr16
or
addr16
mov
dec
in
popa
mov
cld
mov
jmp
les
fsubl
aam
arpl
popa
cmpl
mov
ljmp
xchg
jecxz
pop
cmp
pop
cvttps2pi
mov
mov
outsl
inc
popa
xchg
mov
push
fadds
scas
popa
fistpll
imul
mov
test
iret
cmp
pop
arpl
mov
or
push
lret
movsl
int
cmp
push
mov
daa
popaw
inc
mov
jbe
cs
pop
outsb
inc
popa
mov
cmp
test
sahf
or
addr16
mov
call
decb
mulb
into
pop
sub
popa
dec
mov
mov
insl
sar
and
mov
or
mov
int3
mov
imul
jns
mov
dec
scas
popa
inc
mov
imul
mov
mov
mov
cmpl
or
jmp
lret
pop
insl
lret
insl
test
lea
pop
sub
popa
dec
mov
mov
cmpsl
cwtl
popa
mov
call
pop
sub
popa
imul
rolb
fsubs
mov
and
arpl
popa
cmpl
mov
and
popa
in
mov
sbb
int3
imul
inc
or
addr16
xchg
pop
dec
popa
push
mov
pop
mov
into
stos
popa
or
mov
pop
leave
mov
mov
fwait
mov
enter
mov
sti
mov
ret
lret
popa
push
call
and
mov
or
add
mov
push
popa
bound
out
jb
cs
dec
outsb
popa
inc
mov
out
mov
stos
imul
addr16
pop
mov
cmpb
mov
ljmp
insl
shlb
stos
test
mov
or
in
cmp
pop
in
popa
std
mov
addr16
cmpsl
pop
fnstsw
scas
mov
and
popa
cmp
dec
or
mov
leave
pop
mov
popa
test
mov
in
add
mov
sub
fsubr
popa
aam
or
mov
test
insb
mov
mov
pop
mov
mov
cwtl
mov
scas
call
or
addr16
mov
test
rorb
fsubs
add
popa
mov
xor
sub
popa
cmp
mov
sbb
or
addr16
dec
pop
jnp
popa
push
mov
or
pop
jmp
or
addr16
cmpl
mov
inc
or
andl
lcall
dec
mov
ret
fildl
cmp
rcr
add
popa
in
mov
and
lods
xor
mov
cmp
inc
sbb
mov
push
dec
cmp
pop
out
jp
or
dec
mov
or
test
push
or
stos
mov
cmpl
dec
mov
subb
xchg
mov
or
loop
dec
pop
cli
mov
mov
pop
mov
fiaddl
leave
and
popa
scas
mov
or
pop
imul
mov
mov
jne
enter
inc
inc
popa
ret
mov
ds
stos
movsl
popa
ljmp
mov
dec
decl
int
popf
cmp
pop
xchg
dec
popa
in
mov
int3
mov
lds
or
addr16
mov
and
popa
cmp
imul
cmp
pop
add
popa
sbb
mov
add
addl
or
mov
or
add
mov
int3
mov
in
push
popa
daa
mov
mov
jbe
outsb
mov
xor
jmp
sbb
adc
imul
bound
jns
lea
addr16
dec
cmp
pop
inc
inc
popa
pop
mov
scas
mov
mov
push
mov
jmp
mov
mov
leave
stos
popa
sub
mov
mov
push
pop
insb
js
int3
mov
dec
mov
cs
popa
mov
mov
pop
test
popa
add
andb
and
insb
mov
clc
cmpsl
popa
lock
out
mov
fsubrs
popa
sarb
arpl
xor
dec
cmp
cmp
int3
or
mov
in
and
cmp
pop
std
dec
popa
cmc
mov
enter
mov
aad
ljmp
xor
jp
popa
jb
sub
dec
insb
rolb
popa
pop
mov
addr16
cmpsl
pop
mov
push
or
addr16
mov
subb
ret
or
addr16
sub
or
addr16
incl
jp
inc
addr16
jecxz
mov
stos
mov
xchg
shrb
in
lcall
cmp
pop
add
popa
mov
pop
imul
pop
stos
popa
outsb
mov
mov
pop
or
or
addr16
mov
dec
jmp
mov
sti
mov
inc
lret
popa
cmpl
pop
push
popa
stos
xchg
arpl
or
popa
ret
or
addr16
sarb
sub
in
mov
or
pop
xchg
or
iret
cmp
scas
inc
popa
into
mov
pop
mov
leave
loopne
jne
popa
clc
mov
enter
popa
sarb
mov
fisttpl
xor
lret
lods
or
dec
or
mov
push
mov
int3
stos
popa
pop
mov
xchg
mov
outsb
jmp
mov
lret
mov
mov
leave
mov
andb
xchg
popa
inc
movsl
add
sbb
push
movsl
ljmp
xor
mov
sbb
mov
daa
mov
js
popa
jo
cs
outsb
mov
push
out
popa
test
sub
addr16
mov
cwtl
or
mov
call
xor
andl
push
sbb
lods
mov
sti
popa
lea
or
lods
imul
pop
pop
jno
inc
mov
inc
mov
outsb
push
popa
scas
mov
mov
pop
dec
mov
jmp
andl
popa
add
loope
cmpl
ret
leave
popa
push
sbb
adc
push
pusha
dec
popa
js
lea
addr16
dec
cmp
pop
inc
dec
popa
pop
mov
int3
mov
mov
pop
cmpsl
mov
movsl
push
cmc
cmp
out
mov
fisttps
idivl
or
mov
arpl
addr16
cmp
pop
es
ds
mov
dec
push
popa
in
mov
push
mov
in
dec
popa
pop
mov
pop
mov
outsb
scas
popa
mov
mov
pop
jmp
xchg
addr16
mov
arpl
popa
cmpl
mov
mov
movsl
cmp
pop
fimuls
or
addr16
mov
cmp
popa
xor
mov
sbb
or
addr16
mov
jno
popa
dec
mov
mov
push
add
mov
jecxz
mov
dec
popa
mov
lods
lcall
lea
loope
dec
cmp
pop
mov
daa
mov
jo
out
dec
pop
cs
popa
dec
mov
push
mov
dec
mov
or
addr16
push
orb
cwtl
mov
mov
loopne
push
pop
mov
ljmp
cmp
pop
mov
int
mov
mov
lcall
ljmp
cli
mov
dec
mov
ret
sub
and
mov
cmp
jmp
or
test
add
call
cmp
pop
mov
fs
addr16
mov
xor
lods
dec
pop
insl
inc
jno
addr16
rolb
popa
insb
mov
mov
pop
inc
add
mov
adc
mov
or
mov
leave
dec
popa
push
addr16
mov
inc
test
or
addr16
pop
lret
insl
loop
dec
mov
sub
nop
cmp
pop
call
daa
or
addr16
mov
enter
mov
scas
mov
and
popa
fstpt
leave
mov
add
or
arpl
addl
sub
mov
mov
inc
popa
dec
mov
push
mov
lods
mov
or
mov
addb
lcall
addr16
std
daa
lds
or
addr16
fnstsw
inc
mov
cmp
popa
xor
push
or
mov
sbb
dec
mov
insb
mov
lods
jl
int3
mov
dec
mov
push
popa
outsb
mov
movsb
mov
or
leave
test
pushf
pop
mov
arpl
mov
sub
popa
dec
mov
les
lret
cmp
pop
aam
popa
daa
mov
lods
mov
aas
pop
popa
push
mov
fadds
outsb
popa
lahf
mov
into
mov
xchg
or
addr16
pop
out
popa
fistpll
andl
dec
popa
fidivrs
or
add
popa
int
cmp
xor
or
daa
add
mov
adc
scas
popa
popa
into
mov
jno
mov
pop
sub
dec
mov
mov
pop
inc
mov
mov
cwtl
mov
lret
insl
fisubl
loopne
lea
addr16
lock
pop
enter
mov
cmpsl
mov
and
fstpt
or
imul
jmp
addr16
mov
mov
mov
movsb
mov
ret
mov
or
test
or
cmp
adc
in
pop
test
dec
pop
xchg
int3
popa
in
mov
xchg
cmc
mov
mov
mov
aad
popa
sub
enter
inc
imul
loope
or
popa
dec
mov
dec
mov
or
dec
popa
mov
addr16
mov
pop
orb
addr16
xchg
add
popa
cmp
scas
mov
dec
or
mov
jmp
pop
fwait
dec
popa
repz
and
push
popa
bound
push
mov
stos
dec
mov
ret
and
ds
adc
or
movsl
cmp
pop
std
in
popa
cmc
mov
inc
mov
pop
cs
push
mov
mov
aaa
imul
addr16
mov
xchg
test
mov
add
jle
popa
jbe
sub
addr16
mov
sub
popa
imul
mov
int
popa
or
sbb
adc
test
daa
mov
or
addr16
add
outsb
cmp
mov
dec
mov
test
cmp
xor
dec
pop
call
lcall
scas
daa
int3
sub
mov
mov
jne
popa
push
movsl
insl
xor
lea
mov
frstor
in
insb
popa
pop
mov
mov
ljmp
fimull
les
pop
pop
sub
popa
imul
testl
movsl
sub
cmp
add
xor
popa
or
stos
mov
adc
and
push
or
addr16
int
outsb
aaa
cmp
pop
data16
popa
jle
int3
or
addr16
xchg
inc
cs
pop
mov
mov
cmpsb
imul
addr16
pop
xchg
sahf
mov
and
out
popa
mov
dec
mov
fildl
addr16
mov
sub
popa
dec
mov
xor
pop
add
mov
adc
push
popa
popa
dec
mov
jno
sub
bound
pop
mov
or
or
addr16
pop
mov
orl
cmp
pop
lret
insl
sbb
or
addr16
icebp
cmp
pop
leave
in
popa
inc
mov
inc
mov
dec
push
popa
mov
addr16
mov
stos
dec
popa
cmpl
mov
sub
pop
call
cmp
arpl
mov
jecxz
popa
sub
addr16
pop
pop
ljmp
insl
mov
mov
or
xlat
cmp
pop
iret
mov
mov
addr16
cmpsl
pop
cmpsb
out
mov
outsb
mov
xchg
popa
sahf
mov
dec
mov
out
popa
mov
call
pop
arpl
mov
ret
mov
and
or
pop
or
dec
cmp
pop
lea
popa
int
adc
imul
popa
daa
mov
dec
mov
cs
popa
outsb
mov
test
pop
imul
pop
dec
andl
addr16
mov
jecxz
popa
sub
nop
mov
gs
mov
in
mov
enter
mov
addr16
xchg
and
popa
fstpt
out
mov
add
or
addr16
pop
arpl
popa
sbb
jecxz
imul
inc
stos
popa
jnp
lret
cmpsl
nop
pop
push
movsl
lea
mov
dec
mov
in
mov
andl
xchg
popa
outsb
mov
jecxz
sub
pop
dec
repz
jmp
addr16
mov
enter
mov
sub
pop
and
mov
movsl
xor
popa
or
lods
mov
adc
or
scas
mov
jb
popa
dec
mov
dec
mov
push
and
mov
mov
pop
mov
popa
mov
stos
mov
xchg
dec
xor
loop
or
cli
pop
dec
repnz
mov
push
mov
xchg
addr16
dec
pop
mov
popa
scas
mov
test
pop
xchg
push
or
and
inc
pop
mul
popa
out
mov
stos
mov
xlat
insl
daa
inc
iret
popa
lea
mov
in
ss
pop
mov
push
mov
outsb
push
popa
mov
popw
dec
jle
jmp
addr16
mov
enter
mov
scas
mov
dec
mov
cmp
pop
or
rcll
int
popa
or
or
pop
setle
lock
xchg
mov
mov
imulb
out
mov
std
mov
mov
popa
leave
mov
frstor
and
arpl
cmp
jecxz
xor
sub
push
add
stos
addr16
lret
sub
push
pop
insb
lea
mov
dec
mov
mov
cmpsl
mov
push
outsb
popa
lods
mov
out
mov
mov
popa
mov
sub
in
test
in
enter
arpl
int3
sub
mov
ljmp
jno
addr16
mov
insb
das
popa
lods
mov
fadds
pop
popa
inc
mov
addr16
pop
pop
outsb
ja
mov
inc
mov
test
xlat
or
addr16
mov
enter
inc
popa
ret
mov
push
daa
xor
sub
pop
pop
insl
popa
aaa
xchg
jecxz
das
cmp
pop
pop
sub
mov
lods
mov
xchg
popa
jg
addr16
cmpsl
mov
mov
outsb
mov
out
out
popa
outsb
mov
imul
mov
push
pop
push
call
or
arpl
mov
sub
push
cmp
sarb
lods
mov
mov
mov
sub
popa
insb
mov
xchg
mov
loope
outsb
mov
icebp
mov
or
popa
dec
movsl
call
loopne
sub
lock
or
addr16
cmp
pop
shrb
and
lods
mov
xor
mov
add
int3
adc
mov
arpl
mov
sub
inc
mov
push
dec
or
addr16
pop
popa
ret
mov
stos
mov
lea
mov
addr16
mov
jecxz
popa
fwait
mov
addr16
out
ret
push
popa
sti
mov
into
mov
mov
push
pop
xor
popa
or
cmp
sbb
or
pop
dec
test
mov
insb
jb
mov
inc
mov
push
popa
outsb
mov
mov
mov
mov
cmp
pop
lds
fnstsw
sub
and
popa
cmp
or
mov
add
insb
mov
adc
daa
cmp
pop
inc
fs
out
jl
push
addr16
mov
sub
jmp
cmp
mov
or
add
popa
inc
mov
imul
addr16
sub
pop
dec
insl
popa
inc
mov
int
push
cmp
pop
test
mov
addr16
mov
mov
or
outsb
mov
jmp
sub
addr16
mov
leave
or
mov
and
sbb
or
pusha
imul
popa
dec
mov
pop
mov
push
popa
test
outsb
or
mov
sub
mov
popa
mov
leave
pop
cwtl
push
or
and
arpl
enter
mov
sub
and
or
lods
in
sub
insl
add
mov
adc
arpl
mov
jae
or
pop
jmp
jnp
and
mov
sub
mov
std
and
iret
ds
mov
sub
mov
mov
fwait
in
popa
repz
inc
mov
fmul
pop
push
aam
scas
mov
pop
mov
imul
or
jmp
pop
pop
mov
popa
and
ja
mov
inc
popa
push
aas
or
addr16
sub
pop
scas
dec
popa
xchg
or
xchg
cmp
pop
int3
popa
out
inc
or
addr16
mov
out
into
popa
mov
jmp
pop
iret
test
es
arpl
push
jecxz
outsb
mov
stos
mov
jbe
daa
int
popa
in
mov
pop
mov
scas
popa
out
mov
outsb
mov
xchg
imul
mov
arpl
popa
mov
addr16
mov
push
popa
stos
mov
sub
lds
cmp
popa
xor
in
mov
sbb
popa
adc
outsb
mov
jns
popa
jno
imul
jmp
or
addr16
pop
sub
or
arpl
mov
stc
mov
dec
pop
rorl
cmp
insl
mov
sub
popa
insb
mov
push
pop
daa
js
addr16
loopne
out
clc
pop
cs
outsb
mov
shlb
shlb
mov
fcmovnb
add
or
dec
mov
enter
mov
stos
mov
mov
and
mov
popa
lret
cmp
aad
add
mov
adc
popa
push
dec
or
addr16
mov
dec
cmpsl
popa
inc
mov
outsb
mov
stos
sub
mov
jmp
pop
mov
or
arpl
addl
sub
mov
ljmp
lret
ret
fisubl
sar
mov
sarl
mov
xor
scas
or
addr16
mov
adc
dec
or
addr16
pop
enter
add
cmp
xchg
mov
stos
mov
or
dec
addr16
int
sbb
insb
mov
in
addr16
jl
cmpsl
je
mov
inc
mov
or
popa
test
push
insb
test
test
fs
or
arpl
mov
pop
mov
push
lods
cmp
pop
movsb
ljmp
mov
insl
cmp
repnz
pushf
mov
insb
in
popa
lods
mov
cld
pop
daa
hlt
popa
addr16
cmpsl
or
pop
movsl
cs
mov
scas
mov
cmc
or
mov
mov
jo
leave
cmp
pop
push
lret
addr16
cmp
pop
mov
or
and
mov
xchg
or
dec
cmp
pop
in
sbb
or
insl
mov
pop
jp
xchg
mov
dec
inc
popa
mov
push
mov
mov
mov
call
test
popf
pop
jecxz
popa
or
in
ljmp
cmc
lcall
popa
fnstsw
in
mov
and
popa
cmp
or
outsb
rolb
popa
add
sub
imul
popa
fs
call
pop
je
popa
dec
mov
ret
mov
push
mov
xchg
or
dec
cmp
pop
in
mov
sub
mov
test
pushf
pop
pop
xchg
popa
cmpsl
mov
in
outsb
cmp
pop
mov
popa
sub
les
mov
daa
mov
push
popa
mov
or
in
popa
pop
mov
dec
mov
pop
pop
popa
ja
xchg
addr16
scas
pop
aas
sub
mov
leave
mov
lahf
call
or
addr16
cmp
pop
jg
popa
xchg
mov
lret
lods
insl
adc
filds
mull
mov
mov
in
xlat
popa
pop
mov
mov
mov
mov
or
popa
test
addr16
mov
test
popa
call
addr16
mov
push
daa
pop
push
stos
mov
insl
insb
insl
mov
pop
or
popa
lods
mov
lcall
ljmp
addr16
mov
imul
or
fisubl
sar
inc
fistl
sub
lods
or
in
mov
mov
xchg
or
addr16
cmpsl
pop
or
or
scas
mov
addl
or
push
call
lcall
cmp
pop
jbe
popa
dec
mov
out
pop
cmp
pop
push
dec
popa
scas
mov
sub
out
jmp
or
addr16
into
cmp
pop
mov
or
lods
je
sub
dec
and
mov
xor
daa
cltd
popa
inc
mov
jmp
pop
dec
sub
mov
jo
dec
cmp
pop
jmp
pop
or
iret
cmp
and
or
arpl
sbb
stos
dec
daa
test
popa
movsb
mov
dec
insl
mov
int
mov
addr16
rolb
xchg
popa
in
xchg
addr16
in
cmpsl
cld
popa
mov
test
pop
sub
or
mov
adcl
cmp
pop
mov
popa
jno
or
stos
mov
pop
or
dec
addr16
enter
test
popa
mov
addr16
xchg
mov
popa
cmpb
mov
call
leave
or
addr16
mov
pop
and
mov
addr16
stos
cmp
sub
xchg
jecxz
aas
cmp
pop
push
in
popa
dec
mov
mov
mov
popa
scas
mov
dec
mov
xchg
dec
popa
mov
add
imull
popa
out
mov
stos
mov
xlat
insl
daa
push
iret
popa
lea
mov
dec
ss
int3
mov
push
mov
push
popa
dec
mov
mov
sub
mov
inc
mov
jecxz
popa
dec
mov
cmpsb
imul
pop
mov
popa
mov
int3
pop
sahf
addr16
xchg
mov
mov
scas
popa
idivb
or
fmulp
popa
mov
and
cmp
or
or
dec
pop
sbb
popa
adc
or
addr16
mov
dec
jno
mov
inc
mov
xchg
mov
mov
pop
mov
or
andl
popa
sub
loope
call
icebp
popa
inc
mov
shll
shll
mov
or
cmp
pop
xor
add
mov
adc
popa
push
mov
into
pop
dec
or
mov
mov
test
popa
mov
addr16
mov
mov
cmpb
mov
nop
pop
insl
call
mov
sub
popa
insb
mov
shlb
shlb
mov
or
or
add
cmp
push
or
arpl
sbb
sub
stos
mov
inc
imul
pop
push
dec
popa
dec
mov
xchg
mov
popa
stos
mov
leave
mov
xchg
call
or
sub
mov
rep
daa
test
jno
addr16
mov
mov
popa
addr16
sub
dec
sbb
mov
push
test
stos
popa
push
addr16
pop
inc
mov
mov
lcall
and
mov
in
mov
lret
ret
or
addr16
xchg
add
cs
cmp
pop
sub
or
addr16
pop
and
jecxz
gs
xlat
cmp
xchg
and
lea
cmp
pop
pop
daa
popa
push
mov
movl
mov
test
pop
test
popf
mov
enter
jecxz
in
popa
std
mov
lret
lods
insl
in
cmp
pop
lea
sub
cmp
lods
addr16
pop
cmp
pop
out
popa
dec
mov
dec
mov
push
xchg
or
xlat
cmp
sub
popa
stos
mov
movsl
daa
cmp
pop
pop
in
popa
aaa
mov
mov
incl
or
mov
sub
pop
dec
popa
ja
mov
addr16
mov
aas
mov
xchg
call
pop
cmpsl
jecxz
lahf
mov
stos
mov
xchg
cld
jg
lea
mov
in
fbld
mov
out
mov
mov
xlat
mov
test
es
addr16
ss
mov
push
or
addr16
call
lcall
cmp
pop
jle
popa
jbe
daa
or
cmpsl
mov
pop
dec
popa
push
mov
sub
mov
push
mov
sahf
inc
popa
xchg
mov
or
dec
popa
mulb
push
mov
fisubs
mov
sub
in
cmp
mov
or
out
popa
cs
imul
mov
dec
mov
dec
pop
popa
call
cmp
pop
mov
mov
cmp
mov
fisttpll
dec
addr16
int
and
or
popa
lods
mov
insb
mov
jl
outsb
mov
dec
mov
mov
mov
lods
mov
add
popa
mov
addr16
stos
cmp
sub
and
jecxz
ja
int
outsl
or
inc
mov
in
mov
sub
or
scas
mov
or
add
or
or
call
hlt
or
addr16
mov
or
dec
addr16
mov
pop
lret
or
dec
or
addr16
mov
ljmp
packuswb
mov
mov
mov
mov
sub
dec
pop
xchg
popa
sahf
mov
test
out
cmp
pop
out
popa
mov
or
lret
movsl
insl
daa
cmp
sub
lods
cmp
mov
or
push
sbb
mov
imul
mov
dec
mov
inc
pop
popa
ret
mov
test
pop
lret
insl
pop
and
lods
mov
cltd
out
xchg
mov
or
stc
push
or
and
inc
pop
popa
sarl
ljmp
cmp
mov
or
mov
popa
daa
mov
push
pop
push
js
dec
mov
dec
mov
imul
sub
mov
call
mov
mov
lods
xchg
arpl
pop
mov
popa
ret
movsl
or
mov
lret
popa
or
sub
sbb
adc
int3
push
pop
mov
jp
xchg
pop
dec
popa
push
mov
pop
mov
into
stos
popa
or
cli
mov
sub
popa
dec
movsl
pop
sbb
and
add
movsl
mov
jecxz
mov
sub
lea
test
ljmp
in
cmp
jmp
lcall
cmp
pop
hlt
dec
popa
xlat
mov
daa
shrb
inc
mov
mov
cltd
mov
sub
popa
dec
mov
stc
pop
or
popa
test
mov
mov
addl
dec
addr16
mov
or
or
addr16
lock
sub
imul
xchg
popa
pop
mov
in
out
std
pop
push
mov
mov
into
or
imul
es
sub
popa
push
addr16
mov
and
popa
arpl
outsb
mov
sub
push
jbe
stos
addr16
mov
pop
and
insl
or
iret
ds
scas
in
popa
cmpsb
mov
insb
mov
mov
popa
xchg
addr16
cmpsl
pop
out
out
out
cs
outsb
mov
into
out
popa
mov
imul
mov
push
pop
or
popa
add
arpl
imul
or
stos
mov
dec
insl
daa
cmovno
addr16
pop
or
popa
dec
movsl
stos
mov
mov
addr16
imul
movb
fisubs
mov
sub
imul
or
or
add
mov
popa
and
imul
mov
dec
push
movsl
dec
pop
pop
in
popa
push
mov
lods
mov
mov
cmpsl
or
addr16
mov
cltd
scas
popa
xchg
mov
imul
mov
mov
flds
rcll
sub
and
cmp
or
add
popa
in
mov
adc
lods
pusha
popa
in
mov
jo
addr16
pop
cmpsl
inc
popa
out
pop
or
addr16
mov
scas
mov
or
and
cmp
test
or
add
sbb
test
popa
call
bound
jp
mov
dec
mov
push
popa
stos
mov
cmp
ja
mov
iret
ds
mov
popa
mov
insb
mov
xchg
in
popa
ljmp
mov
repnz
lret
or
outsb
mov
shr
jno
fwait
or
imul
sub
mov
test
popa
call
addr16
popa
mov
addr16
mov
push
popa
stos
mov
sub
movsl
mov
ds
mov
popa
lea
insb
mov
xchg
in
popa
in
mov
addr16
cmpsl
pop
cmc
out
int
cs
outsb
mov
aad
popa
sub
sub
imul
popa
or
sub
addr16
pop
adc
popa
insb
mov
or
je
popa
dec
xchg
or
insl
cmp
repnz
fcomi
cmp
dec
mov
add
or
addr16
mov
arpl
popa
sbb
inc
mov
mov
insl
aas
insl
push
mov
lods
mov
or
addr16
dec
cmp
pop
sub
or
addr16
mov
mov
fwait
or
iret
cmp
popa
ret
mov
addr16
movl
mov
jmp
pop
xor
popa
or
push
sbb
call
orb
or
bound
jp
inc
jb
cs
inc
mov
leave
push
popa
test
stos
or
addr16
cmp
pop
dec
mov
cmp
mov
lcall
ljmp
cli
mov
sub
ret
fidivrl
stos
call
lahf
pop
and
dec
or
addr16
mov
add
into
or
addr16
pop
gs
mov
dec
mov
pop
insl
mov
movsl
mov
lods
mov
pop
mov
test
sub
or
addr16
enter
mov
int
ljmp
fnstsw
pop
aad
jno
addr16
movl
mov
jmp
pop
sbb
popa
adc
orl
push
fs
jl
xchg
imul
out
mov
sbbb
and
nop
mov
imul
or
addr16
rolb
shlb
mov
fcmovnu
pop
xor
mov
cmp
sub
popa
push
xlat
jp
stos
or
lods
jg
cs
dec
es
in
mov
mov
in
push
popa
daa
mov
jbe
out
mov
outsb
mov
and
sub
popa
imul
mov
or
or
addr16
mov
ret
leave
popa
or
adc
sub
pop
push
in
or
addr16
mov
mov
mov
pop
mov
lock
enter
shlb
mov
into
popa
mov
or
addr16
mov
mov
test
mov
mov
fwait
arpl
mov
or
or
pop
mov
or
push
int
lods
mov
cmp
mov
pop
or
addr16
mov
int3
cs
test
scas
imul
dec
mov
xchg
mov
dec
in
call
addr16
mov
ret
les
mov
aam
mov
pop
lret
or
dec
or
lea
int
decl
pop
mov
in
mov
lcall
inc
pop
popa
xchg
addr16
mov
scas
popa
into
mov
scas
mov
sub
popa
push
addr16
mov
and
popa
arpl
cwtl
mov
cmp
pop
mov
ljmp
std
pop
insl
cmc
jno
addr16
pop
lds
mov
aad
int3
cmp
pop
addr16
cmpsl
mov
sahf
mov
outsb
out
popa
mov
fwait
mov
mov
popa
leave
mov
sti
mov
enter
mov
and
or
popa
dec
xchg
arpl
scas
daa
test
or
addr16
int
daa
pop
or
popa
lods
mov
das
mov
xchg
popa
cs
xor
sub
popa
imul
jo
dec
mov
mov
mov
arpl
mov
dec
xchg
popa
ljmp
jecxz
ds
fwait
int
repz
mov
sti
inc
popa
sarl
push
mov
and
popa
xor
mov
sbb
adc
add
jp
popa
jb
push
dec
mov
daa
pop
popa
dec
movsl
or
add
cmp
pop
adc
addr16
addr16
pop
cs
jne
dec
or
addr16
mov
pop
test
leave
mov
test
call
adc
mov
addl
mov
or
loope
insb
pop
stc
mov
mov
cmpsl
mov
fldcw
or
mov
or
cmp
popa
xor
ret
mov
sbb
popa
adc
or
addr16
mov
int3
jo
inc
mov
inc
mov
scas
push
popa
into
mov
mov
pop
sub
or
andb
pop
jecxz
popa
push
call
imul
pop
lock
enter
shlb
fdivrs
pop
rorb
imul
in
mov
imul
or
addr16
sub
pop
dec
cmp
call
pop
std
lcall
pop
lds
in
mov
lret
lods
insl
cs
pop
popa
int
sbb
insl
lods
rolb
popa
jne
pop
or
cmpsl
mov
pop
outsb
popa
push
mov
sub
movsl
test
or
addr16
mov
test
popf
mov
sub
in
es
cmc
pop
sub
popa
lods
mov
test
out
popa
cs
in
out
cmp
pop
or
popa
test
les
faddl
dec
aam
mov
pop
mov
or
popa
stos
mov
ljmp
movsl
pop
cmp
pop
jge
or
insb
mov
outsl
in
popa
inc
mov
addr16
cmpsl
pop
dec
out
or
mov
mov
popa
scas
mov
sub
xchg
test
or
or
dec
pop
testl
mov
xlat
ret
popa
iret
mov
or
lea
pop
sub
popa
dec
mov
outsb
mov
addr16
popa
cmpsl
movsl
mov
cmp
outsb
mov
loop
popa
cli
mov
mov
lret
ret
adc
jmp
pop
inc
bound
mov
jb
stos
cmp
pop
lret
insl
push
and
addr16
mov
pop
sub
lcall
mov
xchg
ljmp
mov
fimull
or
mov
mov
mov
ds
enter
mov
mov
sub
ljmp
cmc
addr16
mov
lds
mov
mov
daa
mov
adc
popa
insb
mov
scas
mov
push
imul
sub
dec
pop
mov
popa
in
mov
mov
pop
hlt
push
int3
mov
lods
push
cmp
pop
dec
das
popa
in
mov
jmp
int3
punpcklwd
addr16
pop
pop
ja
outsb
mov
inc
mov
dec
push
popa
jmp
cmpsl
mov
enter
mov
xchg
dec
xchg
popa
ljmp
out
ds
popa
idivl
mov
mov
out
iret
addr16
mov
es
popa
ds
jmp
pop
push
test
push
mov
arpl
outsb
mov
or
sub
dec
pop
dec
ljmp
pop
or
addr16
mov
insb
cmpsb
popa
mov
mov
addr16
pop
xchg
or
addr16
mov
mov
mov
push
or
fisubs
pop
ret
sub
mov
cmp
movsw
xor
popa
or
insb
mov
adc
popa
imul
push
pop
jno
popa
dec
mov
imul
mov
call
pop
mov
popa
mov
or
xchg
lret
movsl
insl
jle
loope
lea
mov
dec
leave
popa
in
mov
fldenv
xchg
popa
cs
cmp
test
add
sbb
adc
and
arpl
js
jecxz
jo
sub
push
inc
or
addr16
mov
jbe
test
jecxz
mov
or
mov
lods
or
addr16
mov
cwtl
inc
popa
nop
mov
push
mov
clc
out
popa
lock
mov
fmuls
pop
mov
jecxz
xor
stos
mov
cmp
dec
adc
mov
arpl
int3
jae
addr16
inc
mov
outsb
push
popa
scas
mov
mov
pop
jmp
stos
or
andl
pop
arpl
or
addr16
mov
stos
jmp
ljmp
sti
cmp
pop
rorl
or
addr16
and
pop
cmp
popa
xor
addr16
cmpsl
pop
sbb
or
addr16
mov
jp
popa
jb
sub
imul
popa
push
mov
push
pop
mov
and
arpl
mov
xchg
mov
stos
mov
cli
insl
daa
pop
repnz
lea
ret
popa
lods
mov
int3
and
and
addr16
mov
or
into
or
or
test
andl
test
pop
popf
call
or
arpl
addl
sub
mov
mov
fisttpll
dec
mov
and
pop
cmp
insb
mov
or
daa
cmp
pop
addr16
cmpsl
mov
insb
mov
mov
mov
dec
mov
leave
pop
popa
or
lods
mov
enter
mov
mov
sub
popa
push
mov
mov
or
popa
outsl
mov
lods
mov
push
xchg
mov
dec
mov
mov
popa
scas
mov
mov
xchg
push
or
addr16
arpl
mull
or
addr16
mov
testb
mov
fwait
mov
inc
jmp
cs
sti
mov
dec
lret
popa
jmp
bound
jp
enter
mov
inc
mov
stos
push
popa
lret
imul
pop
mov
dec
or
addr16
mov
lcall
ljmp
pop
cli
out
popa
repnz
jmp
pop
popa
push
xor
mov
outsb
popa
sub
jle
stos
cmp
pop
ljmp
insl
mov
mov
sub
mov
mov
in
mov
out
inc
popa
out
xchg
addr16
scas
pop
into
out
popa
cmp
dec
mov
add
popa
sbb
inc
mov
popa
stos
popa
jns
lret
pop
insl
mov
mov
insb
pop
popa
in
mov
test
pop
push
mov
or
addr16
mov
mov
popa
sub
stc
mov
add
popa
inc
mov
fldenv
dec
sub
mov
or
xor
pop
or
mov
pop
mov
push
out
or
imul
popa
inc
xchg
arpl
push
arpl
mov
lods
sahf
cmp
repnz
mov
daa
cwtl
popa
cmpsl
mov
call
pop
sub
popa
test
addr16
rolb
fsubs
mov
and
xchg
and
mov
insb
mov
cmp
or
addr16
mov
sbb
popa
jae
test
mov
jnp
popa
push
mov
inc
mov
pop
push
mov
mov
idivl
dec
movsl
sti
or
sbb
or
add
addr16
cmpsl
mov
gs
jno
addr16
mov
in
into
popa
in
dec
or
addr16
pop
int
popa
lds
andl
push
dec
mov
or
add
mov
movsb
mov
daa
mov
inc
addr16
mov
cs
popa
outsb
mov
jmp
or
popa
test
addr16
mov
dec
outsl
popa
call
addr16
mov
jecxz
popa
push
cmpsl
or
addr16
call
insl
popa
scas
xchg
jecxz
xchg
xchg
mov
int3
mov
testl
addr16
outsb
pop
xlat
scas
popa
iret
mov
or
ds
or
addr16
pop
push
and
mov
jecxz
test
dec
popa
mov
addr16
lods
insl
idivb
pop
lea
or
addr16
mov
pop
add
mov
adc
scas
pusha
popa
into
mov
jo
mov
pop
sub
test
pop
or
addr16
mov
cmpl
dec
mov
mov
mov
mov
lcall
ljmp
pop
cli
cmpsl
popa
repnz
or
scas
cmp
pop
out
out
popa
sub
mov
jmp
push
or
pop
sbb
cmp
pop
push
popa
bound
sub
mov
insl
insl
pop
mov
sub
popa
dec
mov
mov
pop
pop
test
or
and
mov
mulb
mov
or
sub
popa
dec
mov
pop
mov
inc
test
or
addr16
pop
stos
stc
popa
lret
cmp
fimuls
xor
jo
mov
addr16
mov
pop
popa
cmpb
mov
call
and
outsl
or
addr16
mov
add
inc
mov
xlat
mov
or
popa
dec
mov
outsb
call
insl
popa
jle
jecxz
mov
sub
mov
lods
mov
sbb
or
outsb
mov
js
popa
jo
test
mov
pop
and
mov
sub
jecxz
out
lods
fwait
cmp
pop
repz
popa
jmp
sub
ret
addr16
mov
shll
lret
mov
outsb
mov
insl
adc
jmp
cmp
pop
mov
and
pop
mov
push
or
movsl
imul
pop
mov
popa
cld
mov
addr16
out
les
popa
fdivrl
sub
pop
jmp
or
addr16
pop
jmp
popa
dec
mov
ljmp
push
pop
lea
or
addr16
pop
mov
mov
sahf
mov
imul
or
sub
and
add
popa
mov
or
add
ljmp
mov
insb
mov
mov
xchg
addr16
mov
subl
xchg
imul
popa
fwait
mov
push
mov
pop
and
popa
inc
mov
lods
gs
pop
adc
ljmp
jno
movsl
mov
or
popa
lods
mov
cmc
mov
cmpsl
lds
mov
aad
scas
cmp
pop
into
sbb
imul
push
pop
mov
arpl
mov
push
popa
mov
movsl
int3
cmp
pop
cs
es
lods
mov
jbe
popa
dec
mov
cmpsl
mov
sahf
cs
xchg
mov
mov
mov
jmp
pop
jns
popa
add
and
or
popa
arpl
mov
imul
inc
or
addr16
insb
cmp
pop
mov
pop
mov
xchg
mov
scas
loop
into
mov
repnz
sub
popa
dec
mov
shlb
orl
stos
jmp
cmp
je
int
popa
insb
mov
pop
mov
inc
lods
popa
mov
mov
pop
or
popa
test
addr16
mov
enter
mov
mov
dec
ds
lret
cmp
imul
dec
lods
popa
inc
mov
cmpsl
mov
test
mov
sub
dec
pop
mov
popa
cmpl
add
jne
mov
clc
or
addr16
enter
imul
int
and
fstpt
mov
sub
add
mov
adc
scas
push
popa
out
mov
mov
pop
jmp
cli
or
addr16
lret
xor
or
addr16
sbb
fstpt
ljmp
push
or
xlat
ds
mov
or
addr16
cs
pop
dec
cmc
popa
sub
cmp
leave
cmp
pop
push
addr16
addr16
mov
jecxz
popa
sub
xchg
ljmp
insl
mov
mov
or
outsb
cmp
pop
scas
mov
mov
inc
mov
inc
outsb
popa
pop
mov
or
mov
push
mov
andb
nop
addr16
mov
lret
dec
daa
dec
sub
mov
cmp
daa
or
mov
sbb
mov
sub
cmpsl
pop
cmp
pop
movsl
test
mov
addr16
mov
test
popa
popf
mov
lods
inc
cmp
pop
dec
in
or
mov
mov
popa
pop
mov
cmp
push
jmp
mov
pop
imul
or
outsl
mov
arpl
popa
jecxz
mov
xchg
sahf
sub
pop
pop
xchg
lea
mov
dec
mov
mulb
into
mov
mov
into
popa
sbb
leave
mov
pusha
call
or
addr16
cmp
pop
inc
dec
popa
pop
mov
or
add
push
cmp
daa
mov
xor
popa
or
or
adc
push
arpl
jecxz
jo
popa
mov
mov
mov
call
or
addr16
mov
dec
enter
rorb
fsubs
or
cmp
and
movsl
movsl
mov
mov
stos
mov
hlt
imul
pop
les
mov
daa
mov
ucomiss
mov
into
mov
lahf
leave
popa
mov
dec
or
and
mov
mov
insl
mov
cmp
pop
insb
push
popa
daa
mov
pop
mov
out
scas
popa
test
addr16
mov
arpl
popa
cmpl
mov
mov
cmp
in
mov
jo
popa
dec
mov
xchg
orb
shlb
fdivrs
pop
shr
popa
and
sub
pop
stos
popa
sbb
jae
popa
pop
mov
daa
mov
subl
mov
or
addr16
pop
or
test
pop
or
addr16
mov
sub
sub
and
ljmp
jl
or
addr16
dec
cmp
pop
push
mov
mov
inc
mov
cmpsb
push
popa
mov
addr16
mov
mov
sub
sbb
popa
pop
mov
mov
sub
mov
push
popa
mov
movsl
jno
dec
pop
dec
in
popa
inc
mov
dec
mov
test
inc
or
xchg
sub
lea
push
in
test
or
imul
popa
or
or
addr16
mov
inc
enter
arpl
addr16
cmp
pop
xchg
sub
mov
stos
mov
pop
or
dec
addr16
mov
insb
outsl
popa
int3
mov
aas
mov
jg
dec
mov
mov
test
jb
dec
addr16
mov
add
or
fisubl
sar
or
popf
cmp
mov
movsl
or
dec
addr16
lea
xchg
cmp
lods
mov
mov
popa
mov
mov
xchg
mov
mov
imul
in
or
dec
cmp
pop
enter
mov
les
stos
aam
lret
cmp
loope
pop
lea
sub
das
dec
popa
pop
mov
cmp
dec
xchg
mov
scas
mov
mov
mov
mov
popa
mov
add
rol
fnstcw
lret
lods
insl
stc
cmp
pop
lea
popa
sub
xor
or
add
pop
sbb
mov
push
pop
mov
or
addr16
sub
pop
dec
andl
mov
mov
ret
jecxz
push
fwait
or
addr16
in
dec
cmp
or
addr16
pop
pop
sbb
or
insl
mov
mov
sub
mov
jmp
popa
mov
addr16
arpl
addr16
mov
or
pop
insl
leave
insl
adc
sub
popa
insb
mov
mov
pop
cmpsl
loopne
out
clc
or
addr16
enter
popa
test
cmp
pop
dec
adc
mov
push
mov
push
popa
mov
movsl
add
lcall
mov
cmc
and
mov
mov
mov
out
lea
cs
outsb
mov
frstor
sub
popa
dec
mov
out
mov
push
xlat
or
addr16
mov
jecxz
popa
sub
sub
insl
stos
mov
jp
daa
fnstenv
lea
mov
or
popa
lods
mov
lcall
fisubl
mov
lods
lds
pop
adc
sub
mov
mov
dec
mov
mov
popa
lea
sub
mov
lods
sarl
pop
lea
sub
adc
dec
insb
mov
inc
lock
xchg
add
dec
adc
mov
dec
mov
dec
xchg
popa
mov
jecxz
dec
cmp
pop
mov
popa
enter
add
mov
orl
mov
lret
lods
insl
sub
sub
std
or
addr16
mov
pop
lds
xchg
ljmp
pop
popa
out
mov
addr16
pop
pop
or
test
outsl
or
addr16
mov
adcl
mov
cmpsl
mov
insl
and
out
lea
mov
mov
into
inc
popa
mov
push
mov
sub
popa
and
mov
js
popa
jo
and
addr16
cmp
pop
pop
push
push
mov
lods
cmp
pop
dec
mov
or
mov
addb
ret
popa
inc
mov
shll
out
sub
mov
cmp
push
add
sbb
adc
ret
pop
daa
aad
popa
push
mov
insl
xor
sub
mov
dec
lea
test
pop
popf
popa
cmpsl
mov
in
mov
out
daa
popa
or
aaa
mov
push
decl
addr16
mov
jecxz
popa
or
insl
sub
mov
lods
mov
dec
pop
stos
in
popa
adcl
pop
ret
mov
mov
addr16
cmpsl
pop
sbb
popa
adc
scas
mov
stos
or
mov
jmp
pop
cli
dec
popa
repnz
and
and
cmpl
mov
inc
imul
pop
push
or
inc
lods
mov
xor
or
mov
pop
dec
popa
cwtl
mov
into
mov
and
fstpt
leave
mov
imul
mov
or
arpl
pop
xorl
dec
or
addr16
mov
lret
insl
sbb
lods
mov
int
mov
dec
popa
stos
mov
or
inc
cmp
pop
out
popa
push
mov
add
or
popa
test
addr16
mov
test
popa
call
jcxz
inc
cmp
loop
repz
and
cmp
ljmp
xchg
jecxz
jb
popa
dec
mov
int3
mov
add
lcall
mov
sub
test
cmp
addr16
and
pop
inc
dec
popa
jecxz
mov
andl
imul
or
addr16
sub
xchg
mov
inc
mov
adc
mov
mov
pop
out
lea
mov
popf
mov
or
popa
test
in
call
cmp
pop
arpl
popa
mov
ret
or
or
stos
pop
or
popa
jo
or
dec
cmp
pop
in
pop
popa
sub
adcb
pop
mov
or
shlb
and
mov
sub
into
jae
or
inc
mov
test
popa
call
addr16
mov
or
popa
stos
mov
sub
js
outsb
movsl
int
popw
or
popa
dec
mov
mov
int3
cmp
pop
pop
into
popa
inc
mov
fisubs
push
adc
mov
test
pop
or
je
mov
or
mov
jle
popa
jbe
orl
or
mov
daa
jo
popa
sub
xchg
addr16
mov
out
daa
mov
dec
or
mov
into
pop
jnp
popa
push
mov
or
mov
popa
stos
mov
arpl
xchg
jecxz
mov
dec
pop
fwait
ljmp
jmp
mov
sti
popa
insb
mov
lret
mov
inc
and
mov
xor
out
add
mov
adc
leave
bound
mov
xchg
mov
inc
repnz
cmpl
mov
stos
shlb
xchg
or
insl
and
in
mov
or
pop
in
sbb
or
insl
mov
into
jp
or
mov
mov
mov
pop
mov
add
jecxz
pushf
mov
ljmp
mov
in
mov
daa
popa
pop
mov
mov
outsl
test
or
addr16
pop
xchg
and
mov
sub
testl
daa
cmp
pop
xchg
popa
outsb
mov
mov
or
popa
mov
push
mov
popa
arpl
push
pop
dec
outsb
popa
int3
mov
jle
outsb
cmp
pop
sub
or
mov
xchg
jecxz
popa
stos
mov
or
out
daa
pop
out
idivb
or
fimuls
mov
jecxz
and
pop
cmp
mov
or
add
sbb
outsb
adc
mov
popa
mov
mov
arpl
inc
mov
or
popa
test
lods
mov
mov
popa
mov
push
mov
xchg
or
mov
or
icebp
add
mov
or
xchg
or
lea
cli
mov
pop
shlb
popf
jl
mov
or
or
enter
popa
insl
mov
ljmp
jno
addr16
mov
insb
pop
jno
addr16
pop
xchg
or
addr16
mov
or
popa
call
lds
fldl
dec
aad
ljmp
and
in
mov
xor
popa
or
inc
or
addr16
sbb
dec
pop
adc
popa
insb
mov
mov
mov
popa
dec
mov
mov
insl
nop
xchg
xchg
jecxz
add
popa
loopne
sub
clc
insb
mov
enter
mov
xchg
cmp
adc
into
mov
jae
popa
imul
mov
pop
mov
mov
inc
mov
repz
mov
stos
mov
and
call
xor
cmp
pop
dec
sbb
mov
pop
mov
cmpsl
stos
popa
out
mov
mov
out
andb
lcall
cmp
pop
sub
popa
push
addr16
lret
ret
mov
and
insl
cmp
in
mov
add
pop
mov
mov
out
popa
cs
popf
mov
out
in
popa
sub
aad
test
and
sub
mov
call
mov
mov
jecxz
popa
sub
fsubl
ljmp
addr16
mov
addr16
pop
mov
int3
mov
incb
idivb
mov
fimuls
mov
into
mov
xor
mov
mov
popa
inc
mov
xchg
or
or
addr16
insl
lock
inc
popa
idivb
sub
cmp
pop
fisubrs
sub
pop
and
cmp
mov
add
or
addr16
mov
or
dec
mov
mov
add
cltd
jecxz
xchg
mov
push
loope
stos
pop
stc
ljmp
leave
push
mov
fldenv
mov
add
inc
adc
mov
pusha
mov
scas
jo
sub
xchg
mov
or
popa
dec
mov
sub
add
popa
add
xor
cmp
pop
test
popa
pushf
mov
lret
lods
insl
rcl
lea
pop
mov
mov
popa
daa
mov
pop
mov
cmp
pop
add
cmp
into
mov
outsb
aaa
pop
dec
popaw
mov
jbe
dec
cmp
pop
call
pop
or
addr16
mov
push
popa
mov
movsl
jnp
dec
pop
push
in
popa
dec
mov
lods
mov
jecxz
popa
fwait
mov
mov
cmp
popa
xor
test
pop
dec
push
or
arpl
jecxz
lcall
ljmp
fldt
cmp
dec
mov
xchg
addr16
dec
pop
dec
sub
mov
sub
mov
popa
test
mov
pop
in
push
in
mov
xchg
mov
dec
mov
xchg
mov
lods
shll
mov
and
cs
popa
dec
mov
jo
or
pop
test
mov
addr16
cwtl
popa
arpl
fsubs
stos
pop
cmp
fisttpl
arpl
pop
sbb
pop
addr16
dec
pop
stos
out
popa
cmpl
mov
repnz
arpl
andl
pop
rorb
cmp
or
or
popa
mov
insb
mov
cs
popa
push
mov
out
data16
pop
jle
popa
cmpsb
mov
imul
mov
call
pop
fiadds
or
stos
mov
imul
mov
mov
pop
daa
loope
cmpsl
mov
icebp
mov
out
mov
cmp
sub
popa
dec
mov
adc
mov
sbb
addr16
mov
lods
sbb
dec
mov
insb
mov
lods
mov
int3
movsb
mov
xchg
popa
cs
hlt
mov
or
popa
test
iret
cmp
dec
pop
popa
enter
inc
addr16
mov
or
cmp
cmp
fistpll
pop
testl
mov
mov
pop
and
mov
jmp
cmp
pop
test
popa
enter
arpl
mov
sub
popa
dec
mov
subb
movsl
cwtl
popa
nop
mov
insb
mov
and
popa
fstpt
out
sbb
pop
jae
popa
imul
mov
subl
mov
addr16
pop
roll
pop
mov
fisttpl
cmp
bound
insb
mov
or
addr16
xchg
pop
push
in
ja
popa
cld
mov
mov
les
fdivrl
add
pop
ret
popa
aaa
mov
mov
test
movsl
dec
cmp
pop
in
adc
mov
pusha
mov
addr16
mov
mov
dec
cmp
pop
out
lock
or
shlb
cmp
mov
or
mov
mov
pop
cmp
pop
mov
popa
fwait
mov
addr16
xchg
ret
outsb
imul
xor
pop
sub
or
addr16
pop
mov
push
pop
mov
jno
jae
push
addr16
mov
push
or
scas
mov
int3
mov
out
popa
mov
dec
mov
xor
jno
addr16
pop
sbb
or
addr16
mov
test
or
mov
stc
popa
lods
mov
cmp
or
mov
jae
jmp
inc
or
addr16
enter
arpl
cmpl
mov
ljmp
xchg
jecxz
lret
cmp
pop
sub
mov
daa
mov
jp
popa
mov
addr16
mov
mov
or
addr16
mov
fisubl
add
sbb
mov
jnp
inc
xchg
jecxz
pop
cmp
pop
push
insb
popa
lods
mov
daa
mov
mov
push
mov
mov
imul
sub
mov
call
pop
loope
popa
stc
mov
push
lcall
cmp
shlb
or
and
addr16
mov
mov
mov
mov
popa
lea
mov
lds
or
addr16
mov
adc
popa
insb
xchg
or
dec
cmp
pop
int
popa
mov
inc
mov
and
push
mov
mov
dec
mov
add
popa
sbb
test
adc
enter
arpl
andl
sub
addr16
mov
xchg
or
dec
addr16
int
daa
pop
insb
pop
popa
mov
pop
mov
outsl
popa
outsb
mov
scas
mov
mov
sub
mov
sarb
mov
or
or
addr16
imul
test
addr16
mov
jmp
scas
or
addr16
mov
leave
mov
mov
dec
mov
sub
popa
and
ret
mov
or
mov
sbb
in
push
or
addr16
int3
cmp
pop
addr16
popa
xchg
pop
mov
out
test
or
mov
pop
push
andb
nop
popa
jecxz
call
mov
lret
mov
pop
stos
jp
lea
mov
dec
inc
popa
in
mov
push
mov
mov
mov
pop
sub
or
addr16
mov
test
popa
enter
arpl
mov
sub
popa
dec
mov
insb
imul
or
insb
mov
mov
jno
addr16
mov
int3
push
popa
les
into
mov
pop
mov
mov
mov
cmpsl
mov
push
mov
fstpt
addr16
mov
dec
ss
daa
mov
push
mov
dec
inc
popa
sub
push
mov
or
or
addr16
arpl
pop
andl
sub
xor
or
or
addr16
inc
cmp
pop
pop
int3
popa
cmpl
push
pop
jmp
imul
into
popa
cmp
arpl
jo
popa
dec
mov
insl
mov
mov
sub
popa
dec
mov
xchg
mov
mov
fwait
mov
mov
popa
sub
sti
mov
or
popa
test
sub
and
cmp
xorl
sub
push
mov
or
or
addr16
loop
insb
pop
cli
mov
mov
inc
imul
popa
scas
mov
inc
mov
mov
sub
xchg
pop
add
popa
mov
addr16
mov
insl
fwait
pop
cmp
popa
xor
sub
or
mov
dec
out
inc
mov
out
mov
pushf
leave
popa
xchg
mov
mov
daa
inc
popa
pop
mov
or
ja
popa
outsl
movsl
insl
repz
cmp
sub
popa
dec
mov
xchg
mov
xlat
popa
outsb
mov
mov
sub
dec
mov
jle
inc
cmp
pop
or
or
mov
inc
mov
addr16
mov
daa
leave
popa
inc
mov
fldenv
scas
sub
mov
cmp
sub
popa
dec
mov
sbb
mov
pusha
or
addr16
mov
stos
mov
mov
call
pop
lods
clc
popa
int3
mov
xor
add
mov
inc
mov
test
mov
mov
and
popa
mov
mov
popa
ljmp
bound
mov
jb
popa
dec
mov
inc
mov
orb
lcall
mov
ror
jns
jnp
mov
insl
mov
inc
jp
jecxz
movsl
mov
stos
mov
lret
cmp
rorl
int
popa
lds
int3
mov
sbb
popa
adc
push
or
scas
mov
lods
dec
popa
movsb
mov
push
pop
cld
add
mov
sub
ds
movsl
insl
lret
cmp
push
mov
dec
push
popa
in
mov
mov
jbe
outsb
mov
inc
mov
dec
push
popa
jmp
cmpsb
mov
enter
mov
mov
dec
and
mov
or
jns
popa
jno
insb
or
mov
daa
pop
mov
cmpl
scas
pop
fxch
popa
sarl
leave
mov
push
add
andl
pop
mov
or
lea
mov
in
shlb
fcoms
cmp
dec
adc
mov
arpl
leave
mov
or
addr16
and
pop
inc
repz
jecxz
jmp
or
mov
lret
insl
cmp
add
insb
mov
pop
pop
popa
push
mov
mov
ljmp
cli
sub
call
ret
or
sub
jg
ljmp
mov
or
addr16
cmpb
lcall
ljmp
pop
cli
push
popa
repnz
into
mov
fimull
pop
insl
xchg
movsl
dec
cmp
pop
call
xor
mov
push
or
movsl
push
movsl
dec
mov
std
or
cmc
mov
int3
mov
or
popa
add
cs
addr16
mov
pop
or
mov
leave
mov
in
call
or
andl
aaa
mov
lret
lods
dec
add
pop
sub
popa
dec
mov
push
mov
fimull
addr16
mov
or
popa
test
addr16
ds
mov
and
jbe
jecxz
dec
pop
or
or
xchg
sbb
or
fidivrs
int3
mov
adc
popa
imul
or
mov
or
addr16
mov
sub
filds
jecxz
popa
or
ret
mov
insl
adc
rorl
or
addr16
mov
cmp
imul
fmull
addr16
push
cmp
pop
scas
punpcklwd
mov
pop
mov
sub
popa
dec
mov
push
mov
mov
scas
or
cmpsb
mov
insl
push
out
popa
mov
lods
mov
xor
or
addr16
mov
inc
mov
mov
dec
mov
and
or
addr16
mov
add
dec
adc
push
mov
add
sbb
push
popa
insl
mov
into
enter
movsl
mov
sub
pop
call
or
addr16
cmp
pop
in
push
in
mov
pop
insl
jp
pop
mov
or
popa
lods
mov
outsl
pop
movl
mov
mov
sub
or
addr16
inc
cmp
pop
or
stos
mov
dec
imul
pop
pop
sub
push
mov
in
mov
mov
or
outsb
mov
mov
dec
or
addr16
pop
repz
and
arpl
or
jno
addr16
clc
pop
ljmp
pop
mov
or
popa
lods
mov
ljmp
add
and
sub
test
jne
push
pop
movsb
arpl
mov
sub
mov
or
add
popa
int
in
insb
addr16
mov
daa
cltd
popa
inc
mov
jmp
pop
scas
sub
mov
cmp
sub
dec
mov
cmp
add
or
andb
pop
lret
dec
pop
and
mov
or
and
pop
or
arpl
push
mov
imul
mov
or
fstpt
jecxz
sub
add
cmp
lret
insl
push
fwait
and
sub
sbb
in
add
xlat
pop
popa
sbb
cmpsl
or
addr16
mov
push
mov
mov
dec
mov
in
popa
cld
mov
enter
arpl
das
andl
sub
addr16
mov
aas
insl
daa
stos
push
popa
lea
cmpsl
mov
daa
out
inc
mov
testl
mov
mov
or
cmp
add
mov
popa
mov
cmp
lcall
cmp
pop
sub
popa
lods
mov
repnz
cs
mov
shlb
ljmp
or
addr16
pop
inc
add
or
addr16
pop
dec
gs
ljmp
jne
in
pop
dec
insb
imul
or
addr16
cmpsl
cmp
pop
movl
mov
mov
dec
mov
or
pop
inc
ds
test
pop
cmp
pop
push
arpl
andl
pop
in
dec
popa
in
ljmp
and
add
int
xor
insb
addr16
mov
pop
daa
dec
popa
inc
mov
pop
mov
into
pushf
popa
imul
aam
call
pop
or
addr16
mov
ljmp
xchg
jecxz
inc
cmp
pop
cmpsb
in
popa
mov
cmpsl
mov
xchg
sahf
mov
sub
out
popa
mov
test
xchg
cmp
pop
mov
jecxz
orl
sub
pop
dec
popa
and
or
add
int
jb
insb
addr16
mov
daa
mov
xchg
call
pop
dec
ret
mov
shlb
push
or
addr16
mov
mov
or
add
or
addr16
addr16
pop
xchg
popa
cs
les
or
popa
test
addr16
mov
mov
popa
and
shll
or
popa
stos
mov
pusha
imul
pop
mov
dec
or
addr16
mov
lock
popa
enter
shlb
fdivrs
pop
cmp
adc
sub
dec
enter
arpl
andl
pop
fwait
mov
test
sbb
ret
addr16
and
cmp
pop
mov
add
pop
outsb
adc
or
addr16
popa
jmp
addr16
mov
enter
mov
scas
mov
dec
mov
imul
or
insb
mov
or
popa
add
mov
pop
into
popa
push
mov
jmp
loop
enter
arpl
icebp
stos
popa
leave
mov
insl
cli
insl
fldenv
cmp
pop
mov
addr16
xchg
cs
cltd
dec
popa
xchg
mov
or
stc
leave
popa
cmpb
mov
ljmp
insl
push
movsl
or
lret
cmp
repnz
lahf
cmp
pop
jne
popa
dec
mov
in
mov
test
or
addr16
mov
aad
popa
sub
mov
or
test
fs
inc
or
sub
dec
pop
mov
popa
mov
push
cmp
insb
mov
adc
popa
imul
cmpsl
pop
push
out
test
outsb
mov
mov
popa
jmp
imul
popa
leave
mov
push
pop
xor
popa
or
arpl
adc
popa
dec
mov
push
pop
cmp
pop
push
ljmp
mov
repnz
jp
sub
jb
insb
dec
popa
lods
mov
mov
pop
mov
mov
lcall
lret
xchg
call
pop
sub
popa
imul
sbb
or
insl
mov
call
jne
arpl
popa
mov
addr16
pop
push
popa
stos
mov
inc
call
insl
popa
push
xchg
jecxz
dec
cmp
pop
cmpsl
sub
lahf
mov
lods
mov
out
popa
fistpll
cmpsl
mov
cs
xlat
cmp
ds
popa
ss
sub
jle
popa
jbe
jmp
mov
pop
test
push
mov
and
sahf
mov
or
sub
push
test
popa
mov
lods
sarb
pop
insl
mov
andb
pop
sub
popa
insb
mov
shlb
shlb
mov
cmp
or
arpl
sbb
out
push
popa
sub
mov
pop
jmp
stos
or
cmp
xor
call
add
sbb
adc
jecxz
daa
data16
mov
stos
mov
in
fnstcw
insl
mov
aad
in
sub
or
mov
lods
xor
in
mov
mov
cmpsl
je
out
dec
or
addr16
mov
scas
mov
out
mov
test
test
cmpsl
or
addr16
mov
test
popa
call
addr16
arpl
pop
mov
decb
mulb
into
pop
ljmp
addr16
mov
rorl
lret
mov
int3
mov
cmp
or
addr16
mov
sbb
popa
adc
leave
mov
jp
popa
jb
and
addr16
mov
pop
or
mov
lret
insl
daa
cmp
mov
sub
mov
daa
lcall
addr16
cli
popa
dec
mov
lret
cmp
pop
call
rorb
lods
jle
or
and
dec
xor
or
or
addr16
pop
insl
popa
xchg
jge
dec
popa
out
mov
inc
mov
leave
push
popa
push
cmp
pop
and
or
lea
test
stos
popf
popa
lret
cmp
or
mov
std
dec
popa
cmc
mov
cmpsl
mov
aad
into
or
mov
sub
cmp
popa
xor
and
jcxz
add
or
sbb
popa
adc
mov
cmp
loop
jl
mov
mov
inc
inc
popa
out
pop
or
addr16
mov
into
movsb
popa
imul
mov
dec
test
mov
xchg
mov
ret
in
push
cld
or
addr16
call
dec
popa
les
or
aam
lods
pop
daa
int3
popa
pop
mov
mov
pop
mov
mov
test
pop
addr16
or
arpl
addl
sub
mov
lods
adc
cmpsl
popa
in
mov
mov
lods
cmp
pop
int3
xchg
mov
xchg
pop
cs
popa
dec
mov
fbld
test
or
addr16
pop
and
popa
inc
mov
mov
stos
ss
lret
adc
in
movsl
push
cmp
pop
push
or
push
mov
pop
mov
mov
dec
clc
pop
or
mov
leave
mov
scas
add
mov
ret
mov
mov
dec
addr16
mov
insb
out
popa
mov
mov
out
popa
push
mov
fisubs
imul
or
cmp
xor
call
add
sbb
adc
push
popa
mov
movsl
jns
dec
pop
jno
popa
dec
mov
lods
mov
push
inc
popa
test
outsb
mov
mov
popa
mov
sub
xchg
and
mov
ret
mov
icebp
lret
lea
push
lods
pop
rorl
mov
int
sub
pop
and
mov
int3
mov
add
sbb
mov
pusha
dec
popa
js
mov
addr16
mov
inc
dec
popa
pop
mov
leave
mov
mov
mov
addr16
movsl
arpl
pop
mov
orl
mov
pop
lret
insl
dec
and
mov
sub
repz
sub
dec
pop
in
pushf
popa
pop
mov
in
mov
outsb
daa
popa
scas
mov
aaa
mov
imul
leave
addr16
mov
dec
xchg
mov
xchg
mov
mov
iret
or
addr16
push
sub
inc
ljmp
or
addr16
jle
insb
pop
jbe
jno
addr16
mov
pop
popa
push
mov
or
dec
cmp
pop
leave
push
popa
dec
mov
jbe
arpl
incl
pop
mov
ljmp
xchg
jecxz
xchg
cmp
pop
out
insb
popa
fidivrs
daa
mov
and
popa
cmp
scas
mov
jns
popa
jno
mov
sub
dec
pop
mov
popa
mov
mov
pop
leave
push
sarl
insl
push
movsl
inc
cmp
pop
pop
in
popa
push
mov
lods
mov
mov
xchg
addr16
dec
pop
xchg
out
popa
jmp
addr16
pop
sub
and
and
or
popa
js
or
stos
mov
inc
insl
ret
or
mov
addb
cwtl
popa
in
mov
call
pop
shlb
mov
dec
arpl
mov
jae
test
imul
inc
popa
arpl
stos
mov
mov
xchg
imul
or
insb
mov
sub
popa
and
xchg
push
popa
bound
or
stos
jmp
or
addr16
mov
enter
popa
cli
mov
sub
ret
fisubl
push
aad
pop
add
insb
or
mov
daa
pop
pop
inc
popa
push
mov
push
pop
movsl
scas
jno
addr16
mov
in
popa
std
mov
dec
mov
cmp
popa
xor
mov
mov
sbb
popa
dec
xchg
or
dec
cmp
pop
in
push
popa
or
lods
pop
mov
xchg
popa
addr16
in
cs
pop
dec
daa
popa
out
mov
aaa
mov
leave
pop
popa
push
addr16
add
pop
mov
aas
or
addr16
mov
lea
xchg
int
xchg
insb
popa
mov
daa
mov
iret
out
cs
scas
mov
outsb
imul
sub
dec
pop
dec
call
or
addr16
cmp
pop
xchg
sahf
mov
lods
test
pop
dec
fisubs
mov
sub
int3
adc
mov
popa
mov
dec
test
or
addr16
pop
leave
mov
mov
icebp
mov
inc
shll
shll
sub
ljmp
xchg
jecxz
sbb
push
addr16
mov
jo
popa
dec
mov
scas
mov
subl
mov
test
mov
jmp
mov
fwait
addr16
mov
jmp
lea
sub
cmpsl
cmp
mov
or
sub
popa
mov
push
ret
cmp
pop
stos
jb
lret
cmp
in
or
pop
cmp
pop
push
dec
popa
stos
mov
pop
mov
insl
scas
pop
gs
outsb
mov
cmp
sub
dec
mov
sbb
or
pop
test
popa
enter
arpl
mov
sub
mov
pop
imul
or
insb
mov
mov
jno
addr16
mov
push
push
popa
dec
xchg
call
pop
lahf
imul
sub
dec
pop
imul
or
addr16
mov
leave
lret
movsl
dec
std
cmp
or
in
sbb
mov
push
cmp
pop
outsb
jp
mov
dec
mov
dec
pop
popa
mov
stos
mov
test
popa
enter
add
mov
ret
xchg
popa
push
ljmp
cmc
pop
cli
dec
popa
repnz
or
lods
cmp
pop
int3
inc
popa
addr16
push
mov
dec
cmpsl
popa
out
mov
mov
test
xchg
mov
cmpsl
mov
mov
or
sub
push
test
or
lods
int
in
pop
insl
in
dec
addr16
mov
sub
or
lds
fldl
in
aad
daa
mov
and
cmpsl
cmp
pop
out
popa
cs
add
scas
cmp
pop
out
adc
sub
mov
jmp
dec
or
addr16
mov
call
lods
or
movsb
mov
jecxz
popa
sub
test
ljmp
insl
mov
mov
sub
int3
cmp
pop
les
aam
daa
clc
pop
addr16
pop
mov
out
das
cmp
pop
pop
outsb
popa
mov
out
mov
imul
addr16
pop
inc
push
or
addr16
pop
cmpsl
arpl
mov
jecxz
scas
cmp
pop
xchg
jg
stos
or
addr16
popa
insl
mov
testl
mov
mov
pop
in
iret
popa
daa
mov
mov
out
popa
cs
push
mov
out
push
popa
sub
mov
jmp
dec
or
addr16
mov
call
scas
or
cmpsb
mov
mov
mov
stos
sahf
popa
ljmp
out
cmp
jmp
lcall
cmp
pop
into
insb
popa
mov
in
mov
sub
and
out
xor
pop
or
add
out
mov
imul
pop
jno
popa
dec
mov
test
pop
cmp
pop
push
and
mov
mov
pop
mov
popa
mov
stos
mov
xchg
sbb
insl
popa
loope
jecxz
stc
cmp
push
fidivrl
mov
insb
les
faddl
in
aam
daa
xchg
addr16
sub
cmpsl
and
mov
xor
scas
add
mov
adc
leave
pusha
jno
addr16
mov
pop
and
inc
mov
pop
mov
stos
test
ljmp
mov
lcall
cmp
pop
cwtl
insb
popa
nop
mov
in
mov
clc
inc
popa
lock
push
mov
fmul
popa
sarb
dec
mov
xor
popa
sub
dec
mov
adc
popa
or
inc
mov
jae
popa
imul
mov
cmp
pop
lea
sub
mov
mov
pop
stos
popa
inc
mov
mov
pop
push
mov
mov
fwait
mov
test
ret
or
addr16
mov
and
popa
inc
mov
and
dec
xor
mov
add
xor
sbb
push
int
bound
mov
jb
popa
dec
mov
pop
mov
push
xchg
mov
push
mov
mov
popa
mov
or
xchg
mov
mov
or
repnz
mov
add
rolb
ret
addr16
pop
dec
xor
or
addr16
sbb
sub
insl
mov
in
mov
mov
mov
pop
pop
or
addr16
add
movsl
mov
or
enter
arpl
cmp
pop
in
dec
popa
in
ljmp
cmc
fadds
int
or
mov
lods
aad
in
mov
and
addr16
pop
cmpsl
xor
cs
cmp
sub
test
insb
mov
call
je
mov
cmp
pop
or
dec
mov
inc
mov
or
or
addr16
cmpsb
cmp
pop
mov
daa
push
mov
out
sahf
mov
scas
mov
mov
jmp
pop
into
call
add
movsb
mov
sub
stos
test
pushf
sub
adc
xchg
lcall
cmp
pop
fsubl
aam
xchg
addr16
mov
push
mov
mov
imul
mov
mov
inc
arpl
mov
ret
mov
xchg
mov
test
insl
addr16
mov
dec
into
popa
int3
mov
fisubs
out
andl
addr16
mov
push
imul
in
mov
rorl
mov
addr16
movl
mov
leave
mov
xchg
inc
popa
mov
ljmp
popa
in
mov
cli
mov
cmp
pop
xor
xchg
cmp
pop
pop
out
popa
popf
mov
test
pop
sub
popa
and
mov
addr16
add
je
jecxz
dec
or
stos
pop
test
popa
pushf
movsl
insl
je
fmull
cmp
pop
dec
addr16
in
mov
ja
cmpsl
cmp
pop
scas
popa
outsb
mov
mov
dec
xlat
popa
jmp
addr16
ss
enter
mov
outsb
mov
dec
dec
popa
ljmp
scas
iret
ds
cmpsb
int
mov
addr16
add
popa
xchg
mov
out
idivb
pop
into
scas
popa
xchg
arpl
and
or
addr16
mov
popa
add
mov
ret
mov
push
mov
xchg
or
dec
cmp
pop
in
stc
popa
or
cmp
xor
or
addr16
popa
xchg
pop
mov
out
nop
popa
or
and
push
jae
and
mov
mov
mov
pop
lret
insl
pop
and
mov
sub
push
dec
pop
in
popa
jp
pop
or
cmpsl
mov
mov
lret
or
sub
dec
sub
xchg
pop
jmp
insl
or
xlat
ds
enter
mov
std
mov
dec
int
ljmp
cmpsb
popa
in
int
das
insb
mov
daa
popa
es
out
xchg
pop
scas
popa
popa
mov
imul
mov
call
pop
shlb
shlb
mov
adc
and
arpl
or
dec
popa
inc
mov
pop
mov
mov
outsb
mov
xchg
dec
xchg
popa
jmp
addr16
test
filds
enter
mov
mov
dec
xlat
popa
ljmp
cs
ds
es
ds
mov
push
inc
popa
push
mov
push
mov
data16
popa
jle
imul
cmp
pop
inc
dec
popa
pop
mov
add
cmpsb
ret
popa
mov
mov
daa
mov
sahf
or
addr16
mov
lods
popa
in
in
or
addr16
mov
int
popa
lds
dec
mov
ja
popa
outsl
mov
jmp
pop
fisubrs
mov
call
pop
cmp
xor
ret
mov
sbb
mov
push
pop
in
js
or
jo
lods
addr16
mov
addr16
popa
xchg
test
dec
cmp
pop
out
mov
or
mov
addb
call
or
addr16
mov
jecxz
popa
or
fsubs
mov
and
lea
inc
lods
popa
push
mov
addr16
xchg
sub
popa
and
mov
or
add
or
push
popa
bound
jecxz
cmpb
lcall
ljmp
lea
pop
sub
popa
dec
mov
ret
cmp
pop
shlb
xchg
or
pop
cmp
pop
out
popa
bsr
addr16
mov
ja
popa
outsl
mov
lret
daa
pushf
push
popa
or
and
cmp
cmp
pop
or
push
or
scas
mov
insl
or
mov
sub
pop
dec
popa
dec
mov
add
push
ret
jno
addr16
movsl
cmp
pop
mov
jno
lea
test
insb
popf
popa
mov
in
mov
std
popa
outsb
mov
int
sub
jmp
addr16
dec
cmp
pop
call
xor
mov
cmp
pop
push
popa
mov
lods
insb
popa
dec
mov
jl
sub
je
dec
mov
mov
pop
popa
inc
mov
lods
mov
scas
mov
or
mov
test
jmp
xchg
or
xlat
cmp
enter
mov
hlt
mov
or
popa
dec
mov
aam
lret
sub
in
pop
lcall
cmp
pop
pop
mov
mov
pop
mov
addr16
pop
mov
outsb
mov
inc
out
popa
aas
mov
imul
mov
mov
xchg
popa
jg
inc
or
andl
pop
out
popa
fistpll
mov
or
dec
mov
iret
mov
dec
es
in
mov
enter
mov
fmuls
or
addr16
mov
xor
popa
sub
dec
cmp
hlt
cmp
or
int3
sbb
mov
imul
jnp
sub
dec
mov
ret
pop
popa
stos
mov
or
cmpl
mov
xchg
outsb
mov
fwait
test
or
addr16
pop
sti
sub
mov
insl
les
mov
lods
cmp
mov
or
sub
popa
mov
push
enter
mov
jb
ljmp
inc
cmp
pop
pop
mov
mov
mov
mov
jmp
mov
lcall
ljmp
push
lods
cli
addr16
repnz
pop
lret
ret
or
mov
or
mov
popa
or
xor
pop
addl
mov
imul
popa
push
mov
pop
mov
mov
outsb
mov
xchg
or
addr16
pop
out
popa
fistpll
ljmp
repnz
xlat
mov
lods
cs
int3
mov
mov
xchg
popa
mov
push
mov
into
outsb
popa
imul
or
dec
add
mov
adc
jecxz
popa
sub
jno
ljmp
inc
lcall
cmp
pop
test
int3
or
addr16
mov
mov
popa
cmpl
into
pop
jmp
dec
or
mov
leave
bound
test
fnstcw
pop
shll
sub
sub
xor
popa
or
or
add
popa
int
push
mov
daa
jo
addr16
inc
mov
dec
push
popa
out
mov
mov
pop
push
mov
andb
pop
jecxz
popa
sub
loopne
stos
cmp
pop
mov
jno
pop
or
sarb
mov
int3
mov
xor
or
addr16
mov
adc
popa
or
leave
mov
jae
popa
imul
mov
push
push
dec
mov
insl
ljmp
mov
int
popa
or
orl
mov
pop
mov
mov
fwait
mov
mov
jno
addr16
mov
mov
popa
sub
sub
and
popa
arpl
or
dec
sbb
mov
movsl
bound
jb
int
dec
addr16
inc
cmp
pop
pop
mov
mov
pop
mov
mov
cs
outsb
mov
lcall
ljmp
cli
mov
sub
ret
fidivrl
and
sub
pop
arpl
or
addr16
pop
push
popa
stos
mov
adc
insl
mov
gs
ds
jge
jno
addr16
dec
cmp
pop
inc
lods
popa
pop
mov
daa
enter
movsl
mov
out
mov
cs
lea
test
out
mov
in
imul
addr16
pop
int
popa
lds
call
pop
sub
popa
and
mov
mov
or
popa
add
stos
or
pop
or
in
cmp
pop
dec
fs
daa
mov
je
outsb
cmp
pop
into
inc
popa
test
addr16
mov
inc
movsb
popa
sub
mov
insl
pop
movsl
mov
in
int3
or
addr16
xchg
int3
cs
les
out
mov
daa
test
or
addr16
pop
pop
and
mov
jecxz
or
stos
jno
addr16
cld
insl
and
lea
aas
mov
in
dec
popa
pop
mov
lahf
pop
mov
outsb
mov
xchg
dec
mov
or
addr16
or
pop
test
popa
call
addr16
mov
and
sub
lock
outsl
and
mov
in
mov
xor
add
mov
adc
or
imul
mov
arpl
push
push
dec
mov
xor
movsl
popa
mov
sub
stos
lods
mov
mov
cs
scas
mov
fwait
imul
addr16
mov
sti
mov
mov
inc
mov
and
cmp
lods
aas
cmp
pop
dec
add
mov
adc
int3
bound
mov
jb
cs
pop
dec
inc
popa
out
mov
push
mov
leave
mov
or
addr16
add
pop
addl
or
or
ljmp
cli
addr16
mov
cmp
enter
arpl
mov
push
popa
ljmp
sbb
lcall
sub
jge
insb
push
lahf
cmp
pop
dec
int3
popa
inc
mov
inc
mov
mov
dec
mov
mov
popa
lea
mov
test
or
arpl
addl
sub
mov
ljmp
shl
mov
sub
mov
popa
daa
mov
add
adc
mov
bound
test
dec
or
addr16
cmp
pop
addl
mov
ljmp
or
addr16
or
in
dec
addr16
mov
daa
int
inc
mov
frstor
scas
sub
into
mov
cmp
jmp
or
test
add
enter
arpl
pop
subl
fs
addr16
dec
cmp
pop
ljmp
xchg
jecxz
push
cmp
pop
lods
or
movsb
xchg
arpl
mov
popa
mov
push
mov
xchg
into
popa
in
mov
mov
int3
test
daa
mov
inc
mov
das
or
mov
lret
lods
insl
scas
cmp
pop
lea
or
addr16
mov
in
out
daa
mov
mull
out
popa
cs
jle
out
cmp
pop
or
test
addr16
mov
mov
popa
and
fisubs
jecxz
popa
sub
cmp
mov
movsl
mov
in
popa
mov
or
mov
mov
cltd
addr16
xchg
xchg
ljmp
or
scas
gs
into
mov
pop
mov
jmp
popa
cmp
enter
arpl
jecxz
popa
fwait
mov
dec
mov
xor
dec
addr16
mov
cmp
pop
adc
jno
addr16
mov
inc
xchg
mov
movsl
dec
mulb
mov
mov
dec
es
enter
inc
loopnew
ret
cmp
pop
dec
lock
lret
cmp
xchg
or
fdivrs
pop
ror
popa
and
mov
sub
popa
add
push
pop
or
or
stos
mov
imul
inc
mov
mov
pop
mov
mov
pop
out
mov
ret
stos
mov
push
xchg
or
mov
popa
push
fwait
or
repz
pop
ret
dec
popa
sti
mov
inc
mov
sub
or
addr16
pop
or
popa
add
sub
push
daa
fbld
lea
jb
in
cmp
pop
addr16
popa
mov
push
mov
test
mov
mov
jecxz
popa
push
rorb
lods
popa
scas
daa
mull
or
addr16
pop
lods
add
or
addr16
pop
cs
dec
mov
cmp
or
popa
mov
dec
jns
test
inc
cmp
pop
pop
mov
or
addr16
mov
dec
mov
andb
nop
popa
mov
loopne
jmp
lock
enter
mov
fsubs
mov
or
fstpt
pop
xor
popa
sub
out
cmp
pop
adc
popa
or
push
pop
jae
popa
imul
jnp
mov
addr16
mov
in
pop
popa
addr16
stos
mov
sub
or
mov
jecxz
arpl
mov
lret
jp
or
sarl
pop
lret
pop
popa
sub
outsb
mov
xor
or
test
sbb
pop
adc
mov
jp
daa
iret
jb
int
dec
or
addr16
mov
xchg
push
mov
mov
pop
leave
mov
push
andb
pop
mov
ljmp
cmp
pop
ljmp
lret
ret
fisubl
rolb
sub
daa
jno
popa
xchg
cmpsl
mov
out
sub
mov
dec
mov
into
jecxz
mov
or
in
cmp
pop
dec
and
mov
xor
imul
or
adc
imul
mov
push
mov
lods
popa
inc
mov
mov
test
or
mov
popa
mov
lret
lods
lea
cmp
pop
insb
jmp
or
addr16
mov
sub
popa
jmp
fldenv
roll
jecxz
popa
stos
mov
or
xor
pop
or
add
mov
push
mov
addr16
mov
dec
ljmp
pop
or
addr16
mov
cmpsl
mov
or
addr16
test
andb
cwtl
or
addr16
mov
push
and
mov
dec
mov
enter
mov
scas
mov
and
or
addr16
pop
add
popa
cmp
jecxz
or
sub
pop
pop
stos
xorl
insl
mov
jmp
cmpsl
or
addr16
scas
pop
leave
into
popa
sarl
mov
sub
and
and
or
popa
add
stos
mov
push
jno
addr16
in
cmp
pop
sub
popa
dec
mov
pop
mov
cmpsl
test
out
mov
mov
out
mov
mov
cwtl
mov
or
popa
dec
mov
clc
mov
add
mov
mov
popa
lret
cmp
or
dec
mov
sub
add
mov
or
arpl
push
mov
imul
inc
mov
mov
mov
popa
stos
mov
add
ljmp
mov
popa
call
dec
popa
jno
lea
addr16
mov
daa
popa
mov
scas
mov
xchg
dec
popa
jmp
addr16
mov
icebp
arpl
mov
sub
ror
popa
sub
or
cmp
xor
in
or
mov
sbb
dec
push
or
addr16
mov
push
rorb
fsubs
jecxz
popa
or
xor
insl
dec
pop
add
popa
cmp
pop
mov
mov
outsb
or
mov
sub
orl
mov
or
repz
mov
sub
dec
fildl
inc
push
mov
push
popa
lods
mov
mov
pop
mov
dec
mov
andb
xchg
popa
dec
mov
loop
add
pop
xor
sub
ret
fisubrl
pop
and
mov
movsl
lods
cmp
pop
daa
cmp
or
addr16
pop
dec
sbb
or
insl
mov
mov
aad
mov
imul
popa
xor
lods
push
mov
cmpsl
popa
sbb
cs
scas
mov
fs
popa
jl
leave
or
addr16
mov
inc
arpl
mov
push
lods
cmp
pop
movsb
insl
daa
scas
mov
or
mov
test
addr16
popa
out
xchg
push
mov
in
dec
mov
hlt
mov
add
or
scas
mov
cmpsb
and
dec
or
addr16
mov
out
popa
fistpll
out
out
cmp
pop
mov
mov
mov
mov
mov
andl
lret
movsl
dec
mov
addr16
mov
int3
popaw
xchg
jbe
dec
mov
mov
cmp
test
popa
and
sbb
dec
imul
mov
jns
int
jno
dec
pop
dec
in
popa
inc
mov
out
push
cmp
pop
test
imul
mov
arpl
xchg
stos
popa
jmp
sub
or
icebp
mov
inc
shll
shll
mov
jmp
cwtl
or
addr16
mov
mov
clc
or
addr16
enter
pop
shr
fdivrs
mov
fildl
or
scas
mov
cmp
or
addr16
mov
sbb
or
mov
daa
sahf
jnp
in
mov
dec
mov
addr16
popa
out
sbb
adc
push
dec
bound
mov
jb
test
dec
pop
and
mov
addr16
mov
mov
mov
cmp
pop
mov
mov
pop
mov
ljmp
cli
addr16
mov
lret
ret
or
arpl
ret
sub
or
addr16
xor
mov
mov
cmpsl
mov
int
popa
lds
or
sub
popa
and
dec
or
addr16
pop
or
popa
add
ret
or
addr16
mov
insb
insl
daa
out
popa
in
mov
je
in
cmp
pop
cmpsl
inc
popa
cs
push
mov
dec
movsb
popa
sub
mov
and
pop
inc
test
mov
outsl
imul
pop
aas
mov
mov
xchg
lahf
into
popa
mov
test
mov
jg
popa
xchg
mov
mov
cmp
pop
sub
popa
in
mov
mov
mov
popa
test
addr16
es
mov
ss
into
or
push
cmp
pop
push
pop
popa
push
mov
popa
mov
or
sub
and
dec
mov
or
mov
sbb
cmpsl
imul
addr16
dec
cmp
decl
mov
mov
or
ljmp
mov
daa
popa
mov
xchg
scas
mov
cltd
sub
mov
arpl
pop
fcmovnbe
cmp
test
int
mov
in
mov
mov
cs
popa
scas
mov
call
pop
leave
clc
popa
push
addr16
rolb
fsubs
mov
and
insl
sub
xor
sub
int3
mov
adc
popa
or
or
jae
popa
imul
mov
cmp
xor
insl
and
mov
insb
adc
mov
bound
jb
dec
mov
inc
mov
leave
push
popa
dec
mov
mov
pop
xorl
lret
imul
pop
xchg
dec
popa
ljmp
mov
repnz
popa
lret
or
addr16
push
lea
mov
popf
mov
stos
in
jno
xor
std
sub
cmc
mov
in
mov
fucom
popa
aad
outsb
or
mov
sub
cmp
popa
xor
sub
addr16
add
enter
popa
adc
or
mov
or
lea
xchg
addr16
inc
pop
inc
pop
popa
mov
pop
rolb
jmp
mov
pop
mov
pop
add
cmpl
mov
or
popa
push
mov
mov
lahf
xchg
mov
mov
jg
popa
xchg
mov
mov
filds
or
mov
or
xlat
popa
or
iret
or
addr16
es
xchg
popa
push
mov
cmp
or
popa
mov
sahf
mov
add
popa
cmpl
mov
or
popa
mov
mov
sub
or
mov
or
mov
or
mov
andl
pop
jns
popa
jno
or
lea
mov
mov
pop
mov
mov
decl
mov
pop
andl
addr16
mov
subl
mov
js
or
lea
dec
dec
popa
inc
mov
cmpsl
mov
test
popa
mov
addr16
mov
mov
popa
cmpb
mov
call
popa
in
mov
lock
xchg
popa
push
mov
shlb
leave
mov
sub
sub
popa
ljmp
or
mov
sbb
popa
jae
xchg
outsb
mov
ret
imul
addr16
mov
sub
or
mov
insl
dec
cmp
pop
sub
popa
lods
mov
adc
push
bound
mov
jb
leave
dec
popa
dec
mov
pop
mov
push
popa
ljmp
mov
cmp
pop
mov
popa
cmpb
mov
ljmp
cli
addr16
repnz
pop
lret
dec
mov
dec
mov
pop
imul
mov
mov
cmp
pop
mov
popa
lea
cmp
popf
dec
popa
xchg
mov
inc
mov
std
mov
movsl
dec
push
cmp
lds
dec
frstor
mov
sub
dec
cmp
pop
into
cmp
dec
mov
or
mov
pop
inc
sbb
ret
mov
insb
mov
lea
je
int3
push
mov
popa
pop
mov
dec
mov
daa
dec
popa
pop
mov
andl
lret
movsl
dec
mov
addr16
mov
pop
inc
pop
popa
mov
outsl
mov
mov
push
mov
inc
cmpsl
popa
ret
mov
mov
dec
mov
pop
xchg
mov
xchg
out
popa
fistpll
leave
mov
movl
xlat
addr16
mov
lea
mov
popa
dec
mov
mov
pop
mov
mov
sahf
mov
leave
out
popa
dec
mov
mov
ret
into
popa
dec
mov
fimuls
or
sub
int3
cmp
mov
or
into
sbb
mov
imul
mov
dec
mov
lret
dec
andl
test
cmp
pop
mov
or
addr16
mov
add
sbb
dec
mov
pusha
inc
popa
js
ret
or
addr16
mov
inc
dec
daa
cltd
pop
popa
int
push
or
addr16
int3
cmp
pop
inc
mov
or
mov
addb
cwtl
popa
leave
mov
call
pop
inc
clc
popa
ret
mov
enter
shrb
sarb
int3
mov
xor
popa
sub
into
mov
mov
dec
or
addr16
addl
push
repz
insl
jmp
cmp
pop
lods
shll
mov
sub
mov
popa
dec
mov
or
and
popa
mov
mov
imul
or
addr16
mov
inc
out
pop
mov
out
mov
mov
mov
add
addl
or
mov
push
push
sub
insl
lods
popa
gs
out
pop
mov
mov
mov
push
enter
jecxz
movsl
cmp
pop
mov
insl
icebp
cmp
test
inc
xchg
popa
mov
in
or
test
int
and
mov
push
imul
or
cmp
mov
xor
popa
or
outsb
or
addr16
mov
adc
popa
insb
mov
inc
mov
cld
dec
popa
hlt
mov
shrl
lods
cmp
pop
daa
aam
cmpsl
xchg
arpl
out
aaa
popa
mov
pop
mov
add
popa
ret
mov
imul
pop
ja
popa
outsl
mov
mov
push
into
popa
dec
mov
or
mov
popa
scas
mov
stos
mov
cmp
pop
or
popa
mov
fbld
dec
jle
imul
inc
pop
call
push
or
scas
mov
dec
sub
mov
mov
cmpsl
mov
sahf
scas
popa
xchg
mov
jmp
pop
incb
popa
idivb
or
fsubrp
daa
and
popa
insb
mov
and
xor
mov
add
dec
adc
mov
popa
mov
cmp
jno
jecxz
dec
cmp
pop
leave
pop
popa
sarl
mov
sub
popa
and
or
xor
mov
sbb
popa
adc
or
lea
pop
or
popa
mov
inc
mov
push
push
popa
mov
mov
pop
or
mov
sbbl
mov
imul
popa
lock
pop
mov
fmuls
popa
push
mov
or
pop
fimull
mov
add
xorl
xchg
cmp
pop
mov
lea
repz
pop
ret
popa
xchg
shll
or
popa
mov
cmp
add
popa
cmpl
pop
mov
imul
or
jp
mov
jb
popa
dec
mov
push
mov
push
or
mov
movsl
or
add
or
pop
lret
dec
adc
adc
addr16
mov
jge
jno
addr16
mov
inc
or
mov
dec
enter
movsl
mov
ret
mov
lea
or
mov
mov
popa
addr16
std
mov
into
int
dec
mov
frstor
add
cmpl
mov
dec
pusha
pop
mov
popa
mov
int3
mov
xchg
cs
in
mov
sub
hlt
sub
mov
add
aam
popa
daa
mov
insl
js
aaa
mov
insb
pop
popa
in
mov
pop
mov
dec
addr16
into
mov
ja
leave
cmp
pop
test
popa
and
push
mov
stos
cmpsl
imul
or
scas
cmp
pop
xchg
popa
push
mov
outsb
mov
push
imul
addr16
jle
and
jbe
popa
dec
mov
mov
cmp
pop
in
scas
popa
insb
mov
mov
pop
mov
mov
sahf
mov
or
popa
call
addr16
mov
push
popa
lret
je
add
or
sub
and
xchg
popa
outsb
mov
or
jmp
ljmp
jmp
or
addr16
imul
popa
sarl
mov
sub
or
addr16
pop
or
or
jcxz
adc
pop
push
dec
push
cmp
jo
lods
cmp
pop
daa
inc
popa
cmpsl
mov
cmp
out
test
imul
mov
enter
mov
cwtl
mov
loop
lods
call
insb
mov
jae
addr16
pop
out
popa
outsb
mov
push
mov
jmp
pop
or
addr16
arpl
pop
jecxz
popa
push
mov
imul
pop
jecxz
popa
fwait
mov
addr16
out
ret
outsb
popa
sti
mov
imul
mov
arpl
or
add
insl
mov
cmp
pop
insb
bound
mov
cli
mov
outsb
lret
mov
fisubl
push
or
arpl
jecxz
xor
ljmp
sbb
pop
insb
insl
popa
in
mov
jge
out
popa
outsb
mov
inc
mov
jmp
jmp
pop
arpl
or
lea
test
popa
xchg
mov
in
pop
in
popa
std
mov
outsb
mov
dec
imul
addr16
pop
lods
mov
or
mov
or
in
test
mov
xchg
mov
cs
mov
hlt
mov
dec
les
mov
aam
or
pop
ljmp
mov
dec
mov
incl
or
mov
imul
mov
and
aas
or
mov
dec
nop
insl
iret
mov
dec
es
int3
mov
mov
into
push
popa
dec
mov
push
mov
inc
popaw
ret
mov
jbe
lret
jmp
mov
int3
push
popa
inc
mov
cmpsb
fadds
mov
or
mov
xchg
enter
mov
out
mov
dec
loopne
dec
popa
idivb
inc
mov
fimuls
mov
test
mov
addr16
mov
mov
clc
cmp
cmp
dec
jmp
or
addr16
mov
into
leave
popa
dec
mov
flds
test
popa
inc
mov
and
lret
jp
or
add
pop
sbb
adc
scas
mov
js
popa
jo
dec
pop
mov
mov
or
addr16
lods
dec
enter
int
popa
lods
mov
sub
dec
cmp
mov
or
mov
jae
ret
cmp
pop
stos
inc
imul
or
addr16
mov
mov
dec
or
addr16
mov
or
mov
addr16
mov
jecxz
popa
fwait
mov
cmpsl
fdivrs
pop
dec
ret
popa
int3
mov
shll
scas
sub
mov
cmp
enter
movsl
out
mov
lret
imul
pop
dec
popa
mov
addr16
mov
cs
popa
es
dec
mov
push
dec
popa
push
mov
inc
mov
outsb
dec
popa
mov
jle
dec
and
mov
dec
inc
popa
int3
mov
push
mov
push
cmpsb
jno
addr16
pop
imul
mov
add
popa
cmpl
mov
into
mov
in
mov
lods
popa
sub
inc
mov
xor
or
imul
mov
enter
arpl
jno
popa
dec
mov
dec
mov
push
or
lea
mov
pop
daa
mov
mov
cltd
mov
scas
fimull
loopew
imul
sub
shll
shll
mov
and
or
or
addr16
js
insb
pop
jo
popa
dec
mov
xchg
mov
popa
mov
imul
mov
cmp
fsubs
sarb
push
fstpt
pop
xor
xlat
cmp
insb
cmp
mov
or
outsb
sbb
mov
imul
inc
popa
dec
mov
push
mov
sub
pop
insl
cmp
mov
lods
mov
xchg
inc
popa
mov
dec
mov
repz
popa
jmp
leave
or
addr16
mov
roll
lret
mov
push
and
pop
cmp
adc
popa
in
mov
add
cmp
pop
and
popa
cmp
outsb
or
addr16
mov
add
popa
sbb
push
mov
fs
jl
push
je
ljmp
inc
pop
in
pop
popa
insb
mov
lods
mov
out
popa
outsb
mov
mov
jmp
xchg
or
addr16
mov
jecxz
popa
push
hlt
or
addr16
imul
pop
fsubrl
mov
addr16
out
aaa
outsb
popa
mov
out
or
imul
popa
xchg
mov
cmp
out
popa
fistpll
ljmp
movl
mov
iret
mov
out
popa
outsb
mov
mov
jmp
push
or
addr16
mov
jecxz
popa
push
jle
ljmp
dec
cmp
pop
inc
insb
popa
pop
mov
addr16
out
cmpsb
outsb
popa
mov
imul
popa
add
arpl
imul
jns
dec
imul
int
dec
pop
dec
inc
popa
int3
mov
push
mov
scas
mov
or
addr16
or
pop
mov
or
addr16
mov
ljmp
addr16
mov
leave
in
popa
sarl
mov
sub
popa
and
sub
or
popa
add
sub
nop
or
lea
clc
mov
inc
enter
rorb
fsubs
test
fisttpl
xor
sub
cmpl
lret
sub
push
pop
or
popa
arpl
daa
mov
imul
inc
mov
or
add
popa
dec
mov
enter
inc
pop
mov
popa
stos
mov
or
lea
pop
or
popa
mov
push
cmp
pop
dec
jp
into
mov
dec
mov
call
push
or
stos
mov
lret
lea
or
mov
pop
pop
lcall
ljmp
pop
cli
sub
mov
inc
mov
fimull
sarb
insb
add
insb
cmp
pop
in
xor
or
addr16
pop
or
or
addr16
jge
arpl
popa
sub
int
sub
inc
lcall
cmp
pop
sub
popa
and
cs
scas
mov
or
popa
add
test
sbb
and
insb
or
xchg
or
add
mov
inc
mov
cs
popa
scas
mov
movsb
mov
or
mov
cmp
pop
stos
xchg
imul
lods
mov
hlt
cmpsl
popa
int3
mov
sub
push
sub
mov
and
mov
popa
scas
mov
lods
mov
xchg
or
addr16
mov
daa
fbld
mov
out
mov
sub
or
addr16
mov
and
popa
mov
addr16
push
sub
mov
push
lods
popa
outsb
mov
cmpsl
mov
jbe
popa
dec
mov
test
pop
push
test
scas
mov
mov
pop
mov
popa
mov
fadds
sahf
popa
sub
xchg
or
addr16
mov
cmpsl
popa
cs
into
mov
test
or
sub
and
mov
xor
or
loopne
lods
add
sbb
sub
popa
lods
mov
popa
mov
jno,pn
scas
mov
inc
mov
sub
test
test
mov
sub
pop
insl
fwait
movsl
add
or
lods
mov
loope
jno
addr16
scas
pop
leave
sub
mov
sub
mov
mov
pop
xor
rep
add
add
popa
sub
adc
addr16
pop
cmpsl
js
cs
dec
mov
test
push
or
mov
popa
mov
addr16
stos
cmp
sub
and
cmp
pop
nop
lods
popa
call
cmpsl
mov
xor
or
addr16
pop
adc
or
addr16
cmp
pop
jb
popa
dec
xchg
or
add
sub
push
or
stos
mov
cmpsl
mov
or
mov
addb
lcall
addr16
cli
popa
sub
lret
sti
inc
lcall
cmp
sub
and
mov
cmp
pop
scas
or
or
addr16
pop
test
popa
and
jge
sub
popa
stos
mov
movsl
inc
popa
pop
mov
lods
enter
movsl
mov
mov
lea
popa
test
sub
in
and
mov
sub
int
lret
cmp
fldl
sub
popa
lods
xchg
arpl
cmpsl
cmp
cs
or
sub
pop
test
adc
test
insb
mov
mov
je
stos
addr16
cwtl
cmp
incl
pop
addr16
push
cmp
bound
cmpsl
mov
mov
popa
mov
test
pop
xchg
test
in
mov
mov
hlt
mov
lods
and
repnz
aam
lods
cmp
bound
aaa
mov
scas
pop
popa
sub
pop
mov
test
popa
and
ja
sub
pop
stos
inc
jno
cmp
push
sub
dec
mov
daa
mov
out
idivb
scas
mov
mov
mov
and
cmp
add
add
popa
sbb
mov
popa
popa
dec
mov
jno
or
dec
pop
lods
inc
popa
int3
mov
push
mov
mov
or
addr16
or
pop
test
cltd
or
addr16
mov
and
popa
inc
mov
cmp
or
popa
stos
mov
fldcw
or
sub
and
in
mov
or
or
outsb
mov
push
dec
or
addr16
pop
dec
test
inc
mov
arpl
test
popa
mov
addr16
mov
mov
cwtl
mov
mov
popa
daa
mov
clc
mov
push
enter
rorb
fsubs
mov
popa
sub
xor
add
mov
push
popa
mov
movsl
sbb
imul
mov
push
addr16
dec
mov
mov
mov
popa
stos
mov
test
pop
xchg
push
or
and
inc
pop
repz
jmp
or
stos
mov
shrl
adc
popa
lea
and
in
xor
mov
add
cmp
pop
pop
out
popa
pop
mov
imul
mov
push
pop
outsl
call
or
arpl
mov
cmpsl
mov
push
mov
stos
pop
scas
ljmp
jg
dec
cmp
pop
fbld
mov
out
mov
mov
or
addr16
mov
out
jno
addr16
ss
scas
push
popa
out
mov
push
mov
test
data16
addr16
push
dec
popa
call
addr16
mov
mov
cmpsb
or
addr16
add
or
addr16
call
insl
popa
xchg
jecxz
fidivrs
sub
lods
mov
imul
or
xchg
push
pop
jmp
or
mov
sub
mov
call
pop
xor
or
sub
push
imul
jnp
lods
jp
push
pop
insl
mov
mov
sub
popa
insb
movsl
movsl
or
daa
mov
out
push
mov
scas
mov
mov
mov
sub
dec
pop
int3
call
or
addr16
cmp
pop
pop
push
add
sbb
adc
in
popa
xor
or
mov
int3
popa
sbb
addr16
xchg
cs
push
dec
popa
lods
mov
or
in
popa
cld
mov
or
and
pop
inc
lret
movsl
xchg
push
stos
mov
std
insl
daa
dec
and
lea
xor
dec
cmp
pop
in
je
pop
mov
inc
mov
outsb
and
jo
popa
cmp
imul
mov
test
push
enter
popa
jp
inc
or
subl
movsl
sub
pop
stos
push
jno
inc
or
out
in
pop
fisttps
ds
int3
mov
inc
xchg
mov
dec
mov
and
imul
xchg
mov
dec
jecxz
add
repz
insl
pop
pop
lret
lea
mov
dec
mov
xor
popa
or
mov
adc
popa
push
dec
or
addr16
mov
jb
popa
dec
mov
add
or
pop
and
push
movsb
mov
in
mov
mov
pop
addr16
cmpsl
mov
andb
xchg
popa
scas
mov
loop
or
pop
test
lret
addr16
cmp
pop
and
popa
arpl
mov
cmp
ljmp
add
sub
adc
pop
in
gs
addr16
push
pop
push
inc
popa
out
mov
push
mov
mov
mov
pop
ret
lea
mov
popf
imul
pop
in
dec
popa
in
int3
or
addr16
mov
int
popa
lds
leave
mov
sub
popa
and
jecxz
cmp
dec
mov
or
dec
addr16
int
sbb
insb
adc
int3
xchg
arpl
jl,pn
scas
mov
dec
mov
sub
mov
lods
mov
cmpl
mov
sbb
popa
imul
mov
push
popa
stos
mov
mov
xchg
or
mov
mov
repz
or
and
inc
pop
shl
popa
lret
mov
stos
mov
add
mov
or
dec
mov
pop
pop
pop
cmpsl
popa
push
mov
outsb
mov
mov
or
jmp
mov
andb
pop
arpl
or
loopnew
dec
cmp
pop
ljmp
xchg
jecxz
sarb
mov
daa
mov
adc
popa
push
mov
scas
mov
pop
imul
sub
dec
pop
mov
add
addr16
cmp
pop
jmp
jno
mov
daa
lcall
in
sbb
adc
lods
push
int3
mov
jp
xchg
pop
popf
dec
popa
xchg
mov
or
std
leave
popa
cmc
mov
cmp
frstor
popa
sub
inc
or
jcxz
or
stos
popa
pop
mov
insl
xchg
insl
outsl
mov
sub
popa
dec
mov
out
pop
cmp
pop
cmpsl
mulb
mov
mov
sub
popa
dec
xchg
arpl
or
test
inc
or
addr16
mov
subl
dec
addr16
out
and
xchg
jecxz
lret
cmp
pop
sub
mov
daa
mov
or
imul
mov
into
mov
or
lea
test
dec
popf
popa
call
addr16
mov
ret
pop
popa
push
decl
addr16
call
dec
popa
addr16
or
mov
pop
xchg
popa
sahf
mov
xchg
out
popa
mov
or
adc
popa
push
cmp
pop
js
popa
jo
inc
or
jcxz
mov
loop
stos
or
addr16
lods
insl
cli
cmp
pop
ret
popa
sub
sti
or
shll
gs
cmp
pop
jge
jno
addr16
mov
inc
mov
mov
dec
enter
hlt
mov
test
les
pop
fsubl
aam
orl
sub
aaa
ljmp
pop
push
mov
scas
popa
insb
mov
mov
pop
inc
mov
mov
sub
into
cmp
mov
or
dec
sbb
mov
pusha
mov
ret
jo
push
dec
or
addr16
push
movsl
dec
mov
mov
lods
or
addr16
mov
mov
mov
loopne
popa
enter
shlb
fdivrs
pop
shrb
and
cmp
xor
sub
or
arpl
or
pop
insl
ret
mov
sub
popa
dec
mov
mov
pop
cmpsl
mov
mov
andl
xchg
popa
dec
mov
repz
test
popa
enter
arpl
mov
sub
mov
lods
or
xchg
arpl
insb
sbb
or
insl
mov
out
popa
push
mov
pop
mov
imul
mov
dec
mov
call
addr16
mov
ret
in
push
std
or
addr16
call
dec
popa
lds
or
and
lods
pop
cmp
popa
xor
addr16
xchg
cs
sbb
popa
adc
out
or
or
test
xchg
mov
mov
cld
inc
popa
hlt
mov
or
daa
lret
mov
outsb
movsl
lea
mov
dec
mov
addr16
popa
pop
mov
mov
inc
mov
mov
dec
mov
mov
popa
scas
mov
enter
arpl
xchg
andl
sub
addr16
mov
or
dec
xlat
mov
insb
cs
mov
mov
out
popa
push
mov
outsb
mov
imul
sub
mov
call
popa
inc
mov
ret
mov
test
or
pop
mov
in
mov
mov
pop
int3
andb
lcall
cmp
pop
dec
repnz
out
mov
or
add
push
or
and
inc
sub
lock
jecxz
popa
or
sbb
jg
lods
popa
mov
in
mov
or
addr16
out
mov
andb
cwtl
or
addr16
mov
test
clc
or
add
sbb
mov
push
mov
jp
dec
bound
dec
or
addr16
mov
dec
stos
popa
in
movsl
popf
enter
xchg
addr16
cmpsl
pop
cmc
out
int
cs
outsb
mov
imul
popa
mov
dec
pop
add
or
addr16
mov
mov
andl
dec
popa
pop
mov
test
int
popa
lods
mov
mov
cs
pop
out
andb
cwtl
or
addr16
mov
jecxz
popa
stos
mov
cmp
fisubs
pop
in
sub
mov
popa
mov
dec
icebp
popa
out
mov
shll
fwait
popa
leave
mov
jmp
mov
pop
and
popa
inc
mov
lret
mov
lret
mov
int
xor
pop
or
popa
add
mov
push
popa
bound
test
pop
dec
push
or
and
inc
pop
stos
jecxz
mov
mov
or
mov
lcall
ljmp
addr16
mov
scas
lret
mov
fisubl
sub
fdivrs
enter
inc
pop
xor
dec
or
addr16
fisubs
gs
or
xlat
cmp
int3
jge
inc
mov
cmp
push
inc
popa
scas
mov
push
mov
mov
mov
pop
arpl
or
addr16
mov
insl
jge
in
mov
in
insb
mov
cmc
daa
popa
int
inc
or
addr16
fnstsw
pop
aad
popa
sub
into
or
imul
popa
or
dec
or
addr16
pop
adc
popa
insb
mov
push
jl
mov
je
jne
dec
push
pop
cmp
pop
in
pop
popa
or
push
or
mov
popa
addr16
mov
cs
pop
dec
test
mov
xchg
mov
leave
in
push
addr16
mov
inc
les
mov
aam
lret
ret
pop
addr16
aaa
cmp
pop
das
int3
popa
pop
mov
mov
bswap
popa
addr16
leave
mov
outsl
enter
inc
or
addr16
mov
dec
lret
xchg
mov
lahf
mov
dec
scas
popa
int3
mov
jg
cmp
pop
dec
popa
into
mov
fbld
dec
out
popa
enter
inc
addr16
pop
dec
iret
popa
lret
cmp
pop
or
ds
pop
ss
popa
push
mov
inc
mov
push
mov
mov
leave
mov
jbe
popa
dec
mov
ret
mov
and
popa
stos
movsl
or
mov
xchg
popa
insb
mov
jecxz
daa
cmp
pop
inc
repz
out
sti
or
shll
lret
pop
into
sub
mov
cmp
dec
or
movsl
pushf
sarb
inc
mov
in
popa
cld
mov
stos
mov
les
pop
cmp
pop
in
daa
popa
or
pop
or
addr16
mov
pop
mov
cmpsl
jmp
pop
pop
dec
punpcklwd
mov
pop
mov
or
mov
aas
mov
or
mov
or
mov
or
scas
mov
mov
cmp
xchg
push
popa
mov
or
testl
or
add
addl
or
mov
lods
mov
jle
int
jbe
dec
cmp
pop
int3
inc
popa
inc
mov
push
mov
into
cmpsb
popa
dec
mov
mov
dec
cmp
pop
enter
mov
xchg
mov
mov
out
jecxz
cmp
pop
imulb
addr16
mov
dec
popa
sub
dec
mov
xor
or
and
adc
or
sub
push
jno
popa
dec
xchg
or
cmp
pop
lods
push
popa
daa
mov
mov
pop
out
stc
popa
imul
inc
pop
sub
push
addr16
mov
mov
stos
call
cli
or
lea
sub
sti
insb
popa
sarl
daa
mov
and
or
addr16
mov
push
or
mov
jmp
pop
mov
popa
mov
and
xchg
andl
sub
addr16
sarb
mov
sub
cmp
movsl
cmp
pop
dec
or
or
addr16
pop
dec
insl
popa
into
mov
jge
leave
cmp
decl
or
addr16
mov
ret
push
popa
dec
xchg
jmp
lret
mov
addr16
mov
test
popf
mov
dec
pop
in
into
popa
in
imul
call
or
sub
ljmp
jno
mov
addl
mov
jmp
pop
out
stc
popa
imul
roll
fldenv
mov
sub
ljmp
mov
lods
mov
sbb
popa
adc
sub
js
popa
jo
mov
add
addl
or
mov
or
lea
pop
or
popa
mov
andb
ljmp
addr16
mov
dec
lret
mov
fisubl
mov
insl
cmc
pop
xlat
int
iret
mov
pop
mov
ds
popa
ss
mov
push
enter
mov
mov
jle
int
jbe
sub
dec
mov
addr16
popa
mov
cmp
or
or
addr16
and
pop
addl
lret
fsubrs
lds
out
or
out
in
or
addr16
mov
into
mov
mov
leave
mov
xchg
arpl
sub
fnstsw
adc
int3
arpl
mov
jae
scas
cmp
pop
or
xor
popa
add
push
mov
insb
jecxz
fs
ljmp
dec
pop
int
popa
lods
mov
push
mov
dec
movsb
popa
sub
mov
or
pop
mov
andl
or
pop
mov
imul
or
int3
cmp
pop
les
popa
fdivrl
push
mov
pop
or
mov
or
incl
popa
pop
mov
or
jns
and
jno
or
dec
mov
inc
pop
popa
mov
test
pop
mov
or
addr16
mov
ret
pop
popa
dec
mov
stos
shrb
pop
mov
dec
or
addr16
mov
orb
lcall
mov
loop
popa
cli
mov
jecxz
lret
pop
ret
fisubl
or
lods
sub
pop
and
addr16
addr16
or
out
popa
sbb
addr16
pop
gs
or
jcxz
pop
push
inc
mov
insl
or
lahf
mov
sub
popa
dec
mov
jg
daa
cmp
pop
inc
popa
out
out
or
addr16
mov
mov
popa
into
mov
mov
jmp
ss
addr16
mov
enter
mov
outsb
mov
ret
jle
push
jbe
mov
mov
or
or
lea
int
cmpsb
or
mov
addr16
mov
xchg
popa
sahf
mov
outsb
mov
out
or
sub
dec
pop
into
leave
popa
mov
mov
sub
or
addr16
mov
or
sbb
add
adc
mov
popa
mov
in
jno
daa
mov
inc
mov
push
push
popa
scas
mov
mov
pop
mov
or
andl
xchg
mov
in
mov
stc
dec
popa
icebp
mov
test
pop
fldcw
sarl
call
pop
cmp
or
or
dec
pop
sbb
int
push
mov
outsb
jo
mov
inc
mov
sub
or
addr16
pop
ret
mov
mov
cwtl
call
cli
or
addr16
mov
clc
dec
popa
lock
daa
mov
fsub
popa
sarb
outsb
mov
xor
jno
imul
popa
adc
dec
mov
sbb
popa
jae
jecxz
imul
inc
cmp
jnp
jl
push
push
mov
mov
or
addr16
cmpsl
cmp
pop
andl
mov
mov
or
popa
dec
mov
repz
arpl
popa
jecxz
sti
or
addr16
sub
pop
adc
or
lods
mov
jb
popa
dec
mov
dec
mov
push
dec
popa
stos
mov
dec
mov
mov
popa
mov
mov
pop
xchg
sub
mov
stos
mov
repnz
pop
dec
mov
mov
mov
clc
cmp
pop
pop
and
or
outsb
mov
add
imul
call
or
addr16
pop
mov
or
addr16
push
cmp
mov
addl
or
mov
inc
mov
test
sub
or
addr16
test
std
pop
and
popa
mov
lds
pop
and
mov
ds
and
popa
dec
mov
lods
rolb
popa
push
mov
mov
mov
leave
or
mov
mov
pop
movsl
insl
push
cmp
pop
mov
inc
outsb
popa
push
mov
jle
into
cmp
pop
imul
sub
mov
mov
or
addr16
ret
cmp
pop
push
popa
mov
lods
xchg
push
pop
cmp
pop
mulb
mov
mov
mov
popa
int3
mov
and
xchg
popa
mov
add
mov
popa
into
mov
popa
mov
push
dec
or
addr16
mov
jecxz
popa
or
mov
sub
movsb
pushl
lea
cltd
or
xchg
mov
mov
stc
pop
popa
icebp
mov
mov
or
addr16
mov
cmp
popa
xor
enter
or
sub
lret
in
daa
mov
js
int3
addr16
addr16
pop
xchg
push
mov
push
mov
dec
mov
or
addr16
test
mov
and
or
addr16
mov
or
popa
stos
mov
enter
movsl
sarb
mov
in
mov
xor
push
mov
mov
mov
dec
mov
sbb
popa
jae
test
imul
inc
cmp
pop
jnp
popa
push
mov
dec
mov
pop
or
dec
stos
mov
insb
mov
mov
pop
jecxz
cmpsl
mov
repz
dec
ret
popa
into
mov
shll
jmp
and
cmp
xor
sub
popa
dec
mov
sbb
sub
pop
adc
or
addr16
jp
lods
pop
jb
popa
dec
mov
cmpsl
mov
push
outsb
popa
stos
mov
sub
mov
popa
mov
test
lcall
ljmp
mov
repnz
pop
dec
fisubl
mov
lods
cmp
pop
and
push
or
scas
mov
add
mov
cmp
pop
gs
jge
enter
arpl
mov
push
mov
lret
movsl
insl
xchg
cmp
popf
pop
sub
popa
dec
mov
in
daa
cmp
pop
inc
cmc
popa
cs
lds
out
aad
sub
and
jmp
xor
and
add
jecxz
sbb
or
dec
mov
imul
or
addr16
inc
cmp
pop
pop
int3
popa
push
mov
xchg
mov
dec
or
mov
or
pushf
test
push
cmpsb
cmp
pop
in
popa
cld
mov
add
les
popa
fdivrl
lret
lods
insl
in
pop
pop
lea
popa
sub
das
or
addr16
mov
mov
pop
cs
pop
scas
pop
popa
out
mov
outsl
mov
leave
aas
popa
push
addr16
mov
arpl
or
scas
mov
push
popa
stos
mov
jmp
lcall
cmp
pop
out
mov
mov
xchg
iret
mov
mov
mov
ss
push
mov
inc
mov
dec
dec
popa
inc
xchg
or
lea
pop
insb
scas
popa
int3
mov
mov
pop
out
mov
mov
sahf
mov
enter
mov
mov
dec
into
popa
lret
cmp
int3
or
cmp
pop
sub
and
cmp
xor
or
mov
adc
popa
imul
leave
pop
jno
popa
dec
mov
inc
mov
push
dec
popa
test
iret
test
int
popa
dec
mov
andl
mov
loope
mov
pop
sub
popa
imul
cmp
push
or
add
sbb
inc
push
or
addr16
dec
cmp
pop
lret
insl
fsubl
pop
mov
or
mov
in
popa
mov
daa
or
addr16
cmpsl
pop
nop
out
call
outsb
mov
enter
mov
dec
mov
and
popa
fstpt
call
pop
add
lret
mov
arpl
sbb
or
add
int
jnp
insb
addr16
mov
daa
mov
or
addr16
push
cmp
pop
scas
andl
mov
mov
push
repz
addr16
add
pop
inc
sti
popa
cmpl
mov
and
cmp
or
popa
mov
sbb
inc
adc
mov
bound
sub
dec
mov
mov
pop
call
orb
lcall
ljmp
pop
movsl
cli
cmp
pop
repnz
lret
or
addr16
mov
rorb
jno
adc
dec
cmp
pop
sub
or
addr16
jge
cmpl
addr16
mov
or
jno
addr16
movsl
cmp
pop
mov
int3
or
addr16
mov
popf
cs
xchg
mov
sub
std
leave
popa
cmc
mov
dec
mov
popa
aad
add
addr16
mov
fadd
popa
aam
or
addr16
mov
mov
or
mov
pop
mov
or
popa
dec
mov
ja
pop
cmp
pop
cmpsl
inc
popa
out
aas
or
addr16
mov
into
cmpsl
popa
imul
scas
pop
push
jg
call
cmp
pop
arpl
popa
mov
mull
out
pop
stos
popa
ljmp
xlat
push
mov
cs
sub
es
addr16
ss
in
push
popa
daa
mov
push
mov
outsb
mov
mov
mov
dec
jbe
jmp
addr16
mov
test
popa
call
cmpsb
mov
xorl
dec
xchg
sahf
pop
lret
or
push
out
lea
dec
popa
idivb
lods
mov
fisubs
mov
mov
cmp
pop
mov
sub
mov
call
pop
popa
mov
or
or
stos
pop
inc
ljmp
push
or
addr16
pop
lods
mov
or
mov
addl
mov
jmp
pop
sub
popa
imul
popa
or
xor
inc
add
mov
dec
mov
mov
xchg
jecxz
push
cmp
pop
test
popa
mov
addr16
out
mov
cmpb
mov
call
arpl
lock
enter
shlb
fmuls
lods
shlb
and
fildl
insb
xor
mov
add
out
popa
cs
ljmp
arpl
mov
jae
push
dec
popa
arpl
pop
mov
or
or
addr16
sub
pop
decl
int
fwait
cmp
pop
repz
popa
jmp
pop
or
xchg
cs
sub
and
sub
or
popa
push
dec
or
addr16
pop
jb
popa
dec
xchg
addr16
ljmp
popa
in
mov
mov
pop
in
mov
daa
mov
andb
xchg
popa
scas
mov
loop
imul
or
popa
adc
addr16
in
call
hlt
mov
mov
pop
fsubrl
popa
aam
push
jbe
stos
mov
inc
fldt
pop
or
addr16
fadds
scas
popa
in
mov
shll
shll
mov
and
out
popa
cs
pop
mov
out
stos
popa
sub
and
cmp
or
mov
call
pushl
mov
pushf
or
mov
mov
push
popa
lea
outsb
mov
cmpsl
jle
push
mov
dec
mov
sub
mov
scas
inc
fimull
pop
dec
sbb
mov
cmp
pop
in
push
popa
insb
mov
movsb
mov
out
popa
outsb
mov
test
jmp
test
mov
jecxz
popa
push
mov
subl
in
pop
xchg
insb
popa
jmp
addr16
out
icebp
outsb
popa
mov
imul
mov
arpl
repnz
lret
or
pop
insl
dec
insl
fisubl
insb
out
jae
popa
fistpll
out
out
cmp
pop
out
popa
mov
addr16
pop
cs
or
jcxz
ss
pop
mov
popa
andl
mov
mov
popa
daa
mov
icebp
mov
cmp
pop
and
popa
cmp
or
mov
push
movsl
or
pop
mov
popa
enter
inc
sub
and
or
popa
stos
mov
or
sub
pop
add
popa
sbb
mov
jns
popa
jno
xchg
addr16
mov
add
popa
sbb
mov
js
popa
jo
mov
enter
pop
inc
test
mov
xchg
mov
lret
insl
mov
aam
lea
addr16
pop
cmp
pop
aaa
in
popa
addr16
cmpsl
mov
outsl
outsb
popa
inc
mov
sub
scas
dec
popa
xchg
or
enter
arpl
andl
pop
cs
popa
push
mov
or
add
int
jle
insb
scas
mov
daa
mov
or
mov
incb
scas
mulb
xchg
addr16
movb
fisubs
mov
add
add
jno
imul
popa
mov
call
mov
or
loope
lods
or
addr16
mov
leave
fimull
addr16
dec
pop
or
popa
add
test
pop
inc
push
or
and
inc
pop
cwtl
jecxz
nop
mov
stos
mov
clc
insl
daa
jg
popa
lea
xor
in
add
mov
imul
jnp
mov
andl
xchg
popa
or
jecxz
enter
arpl
popa
cmpl
pop
dec
cmp
mov
or
jp
popa
jb
insb
or
mov
daa
pop
mov
popa
mov
push
mov
lret
ret
or
mov
sub
pop
and
sbb
mov
mov
jge
push
ds
mov
mov
in
popa
lea
lods
mov
int
popa
lds
mov
add
popa
sbb
or
addr16
pop
pop
push
or
and
inc
pop
mov
or
stos
mov
hlt
insl
daa
out
popa
lea
das
mov
in
pushl
addr16
mov
es
out
mov
mov
inc
push
popa
push
imul
in
pop
jno
popa
dec
mov
test
pop
push
and
mov
push
mov
popa
in
mov
andl
mov
loope
dec
stc
popa
add
leave
mov
out
and
xchg
push
sarl
and
int3
mov
or
or
addr16
mov
push
test
mov
dec
mov
mov
inc
mov
test
popa
mov
addr16
lods
insl
cmp
pop
lea
or
addr16
mov
xchg
popa
outsb
mov
lock
or
popa
mov
shlb
inc
xor
mov
add
stos
adc
mov
movsl
arpl
jae
in
mov
inc
in
popa
jnp
pop
or
cmpsl
mov
mov
scas
mov
stos
imul
addr16
mov
mov
popa
jecxz
inc
or
addr16
mov
jmp
popa
ret
movsl
or
lea
mov
lods
sub
mov
cmp
xchg
popa
mov
sbb
out
push
or
movsl
mov
mov
mov
add
addr16
cmp
pop
subb
mov
lods
iret
cmp
ret
or
addr16
cmp
pop
lods
shlb
xchg
or
or
cs
sbb
addr16
mov
gs
or
addr16
mov
and
cmp
pop
mov
popa
lea
lret
lods
insl
cs
pop
cmc
popa
sub
int
dec
lds
fldl
pop
cmp
cmpsl
mov
or
outsb
cmp
pop
mov
sub
insb
mov
or
mov
push
mov
andl
addr16
mov
or
or
addr16
cld
cmp
pop
hlt
mov
mov
inc
pop
pop
out
aaa
mov
scas
mov
ljmp
pop
mov
sub
inc
call
or
addr16
cmp
pop
cmpsl
push
xchg
or
lea
pop
or
popa
mov
mull
push
iret
popa
mov
mov
mov
push
mov
andl
mov
jbe
or
lea
inc
or
pop
mov
pop
mov
mov
popa
xchg
or
xchg
mov
mov
mov
fiadds
or
mov
or
lea
popa
or
adc
imul
jno
addr16
mov
pop
or
or
addr16
pop
add
or
addr16
mov
or
popa
leave
mov
mov
roll
or
mov
or
sbb
or
mov
add
js
popa
pop
mov
mov
cmp
pop
lea
or
mov
call
cs
lock
or
popa
test
xor
sub
mov
popa
and
adc
or
stos
mov
jnp
insl
push
movsl
push
cmp
pop
dec
sub
mov
addr16
mov
xchg
cmpsl
popa
mov
outsb
mov
repz
mov
jmp
pop
and
or
arpl
addl
sub
mov
ljmp
dec
pop
in
inc
popa
insb
mov
push
mov
out
jno
andb
pop
imul
mov
arpl
popa
jecxz
rorb
cmpsl
cmp
lods
insl
data16
pop
in
xor
or
insl
mov
out
popa
outsb
mov
cmp
imul
push
cmp
pop
arpl
or
addr16
mov
insl
jle
in
mov
int
insb
mov
fucom
popa
aad
scas
or
imul
popa
xor
mov
mov
sbb
in
mov
insb
mov
jl,pn
out
mov
dec
mov
and
mov
lods
imul
pop
mov
cmpsl
or
outsb
mov
pushf
jmp
or
arpl
sub
cld
ljmp
pop
int3
insb
popa
les
out
aam
scas
pop
daa
imul
addr16
pop
pop
push
call
mov
lods
addr16
addr16
mov
out
outsl
popa
test
addr16
mov
jecxz
popa
stos
mov
or
mov
in
pop
scas
cmpsl
popa
xchg
sub
mov
sub
out
subb
mov
pop
out
jno
addr16
es
sub
popa
call
addr16
mov
cmpsb
and
mov
lods
mov
cs
jle
out
or
addr16
pop
inc
and
mov
stos
mov
mulb
xchg
call
pop
cmpsl
mov
mov
sahf
mov
test
popa
arpl
mov
jns
into
mov
daa
mov
scas
popa
sub
sub
xor
cmp
mov
mov
insb
mov
inc
cmpsl
popa
aas
mov
out
mov
cmpsl
sub
mov
arpl
xchg
xchg
mov
daa
fbld
mov
out
mov
test
xlat
or
addr16
mov
sub
popa
mov
or
push
cmp
pop
push
pop
popa
push
mov
dec
mov
mov
mov
enter
mov
mov
test
sub
popa
mov
cmp
scas
or
add
sbb
dec
adc
mov
popa
mov
lret
das
inc
cmp
dec
pop
or
popa
in
mov
push
mov
mov
or
addr16
test
mov
add
or
addr16
call
lea
mov
int3
mov
leave
push
popa
dec
mov
dec
mov
push
mov
mov
ret
mov
mov
daa
decb
or
addr16
mov
xchg
popa
outsb
mov
clc
mov
or
popa
call
fsubs
rolb
mov
imul
or
lods
mov
add
popa
cmp
sub
arpl
sbb
mov
pop
inc
ljmp
push
mov
mov
popa
addr16
and
or
popa
jmp
add
sbb
adcl
push
addr16
bound
mov
in
dec
popa
inc
mov
pop
mov
imul
mov
jecxz
popa
dec
mov
movsl
lcall
ljmp
mov
repnz
popa
lret
or
sub
mov
shlb
cmp
pop
stos
movsl
imul
dec
mov
test
or
addr16
mov
in
popa
std
mov
ret
mov
vmovaps
aad
int3
cmp
pop
xchg
dec
mov
xor
leave
cmp
pop
mov
inc
mov
adc
mov
sub
and
fs
jl
lods
or
addr16
mov
inc
scas
popa
pop
mov
sub
movsb
mov
or
lods
cmp
pop
lea
popa
insb
mov
pop
mov
push
addr16
out
mov
ja
sub
pop
mov
arpl
push
mov
or
popa
lahf
mov
daa
mov
mov
into
mov
mov
inc
mov
out
mov
movsl
insl
or
xlat
mov
pop
cs
out
es
addr16
ss
mov
popa
push
xchg
sahf
pop
or
push
arpl
movsl
out
sub
decb
into
addr16
out
pop
fisubrs
or
and
jecxz
cmp
sbb
add
mov
imul
mov
dec
mov
push
popa
lret
inc
jns
lods
test
int3
popa
mov
addr16
mov
or
or
addr16
mov
push
insl
imul
dec
pop
pop
inc
popa
out
pop
or
addr16
mov
mov
or
addr16
mov
andb
cwtl
push
arpl
nop
cmp
pop
call
addr16
addr16
mov
enter
mov
dec
mov
mov
push
xor
ljmp
pop
jg
pop
add
cmp
inc
mov
arpl
or
mov
sub
ret
dec
popa
sti
mov
add
sub
imul
das
or
addr16
call
cli
or
addr16
mov
mov
mov
inc
mov
mov
scas
mov
dec
or
mov
jmp
pop
scas
dec
popa
xchg
enter
add
popl
out
orl
ret
mov
out
dec
popa
mov
lret
cmpl
movsl
mov
pop
pop
ss
push
mov
into
mov
mov
call
pop
jle
popa
jbe
dec
or
addr16
lods
lea
pop
pop
or
popa
int3
mov
cmpsb
mov
cs
popa
mov
into
mov
dec
fisubs
mov
sub
dec
cmp
mov
movsl
or
sbb
mov
push
lods
or
addr16
mov
dec
inc
popa
inc
mov
mov
test
popa
mov
addr16
mov
mov
popa
cmpb
mov
mov
arpl
lock
enter
shlb
fdivrs
pop
shr
popa
and
mov
mov
add
dec
adc
mov
arpl
xchg
mov
inc
mov
mov
into
mov
mov
pop
mov
or
andl
pop
and
mov
sub
or
pop
into
jecxz
test
ljmp
lea
pop
sub
popa
dec
mov
cmp
cmpsl
or
mov
sbb
sub
dec
mov
jns
or
pop
test
popa
and
pop
rolb
popa
or
mov
insl
lcall
cmp
pop
orl
addr16
mov
loope
popa
stc
mov
mov
rorl
mov
or
and
popa
cmp
andl
dec
popa
sbb
lret
lods
or
mov
jo
int
dec
pop
or
popa
dec
mov
push
mov
pop
mov
or
addr16
jmp
scas
ret
popa
into
mov
lret
mov
leave
and
mov
xor
enter
mov
adc
ret
bound
mov
jb
mov
popa
lret
cmp
mov
pop
iret
cmp
push
lea
mov
or
mov
mov
mov
pop
mov
xchg
dec
popa
ljmp
mov
repnz
mov
mov
rolb
jno
fwait
or
cmpl
mov
add
pop
lret
or
push
gs
pop
jge
popa
jne
or
lahf
cmp
pop
inc
mov
mov
pop
enter
movsl
mov
mov
lea
test
into
mov
in
dec
popa
in
ljmp
or
mov
mov
aad
popa
sub
inc
or
sub
mov
xor
daa
orl
lods
addr16
pop
cmp
pop
inc
test
mov
xchg
mov
mov
popa
sub
hlt
mov
sub
popa
push
addr16
enter
add
daa
repz
popa
fstpt
ret
mov
add
cmp
lret
lods
or
mov
jae
int
imul
pop
jmp
dec
or
mov
daa
pop
adc
popa
insb
mov
mov
je
popa
dec
mov
or
push
jmp
or
addr16
mov
mov
popa
mov
andl
push
in
mov
lret
lods
insl
xchg
cmp
repnz
les
lods
aam
in
mov
pop
mov
out
popa
cs
jmp
sub
or
mov
jmp
inc
or
addr16
mov
call
mov
mov
ret
mov
mov
cltd
mov
jmp
pop
loope
popa
stc
mov
dec
mov
shll
fnstcw
xchg
and
cmp
into
mov
add
or
or
test
pusha
call
or
addr16
mov
inc
sub
mov
mov
mov
or
addr16
int
mov
insb
andb
clc
or
addr16
enter
popa
out
fmuls
shlb
dec
pop
scas
inc
popa
out
mov
push
mov
jmp
mov
mov
enter
mov
xchg
mov
sub
popa
dec
mov
repnz
or
addr16
sarb
cmp
jbe
cmp
and
inc
mov
or
pop
outsb
jge
scas
mov
cmp
or
dec
mov
push
mov
mov
mov
pop
inc
lea
mov
popf
pop
or
or
addr16
insl
icebp
movsl
std
cmp
pop
cmc
sub
int
dec
or
addr16
mov
aad
popa
sub
xchg
addr16
mov
xor
popa
or
into
or
or
dec
pop
adc
popa
insb
mov
or
je
popa
dec
mov
add
mov
popa
scas
mov
push
jg
stos
pop
xchg
ljmp
out
insl
cmp
repnz
out
mov
mov
or
addr16
mov
xchg
popa
mov
mov
mov
push
mov
or
dec
mov
jle
enter
add
inc
mov
pop
rolb
popa
or
cmpsb
mov
lret
or
jecxz
fdivrs
or
popa
int3
mov
dec
mov
out
push
popa
dec
mov
mov
mov
or
addr16
mov
imul
mov
and
popa
xor
dec
mov
adc
or
addr16
jp
enter
popa
dec
mov
ljmp
lret
cmp
in
mov
mov
mov
test
popa
xchg
mov
add
std
or
mov
loope
push
movsl
insl
frstor
aad
lods
sub
pop
mov
cmp
scas
cmp
pop
imul
call
adc
sub
imul
pop
aam
popa
daa
mov
mov
decl
popa
bsr
or
addr16
mov
outsl
andl
sub
stos
mov
dec
or
in
mov
mov
daa
cmp
pop
out
popa
dec
mov
xchg
mov
mov
popa
arpl
mull
or
popa
mov
addr16
mov
xchg
sahf
mov
mov
enter
mov
mov
and
insb
xor
or
out
popa
dec
mov
adc
push
xor
xlat
cmp
ret
leave
daa
sub
shll
sub
sub
cmpsl
xor
mov
push
pop
test
popa
inc
mov
mov
lret
sub
sbb
mov
pop
or
addr16
mov
lret
dec
jno
or
enter
jno
and
insl
adc
or
cmpsl
or
outsb
mov
mov
test
pop
cmp
pop
push
ret
jno
stos
mov
addr16
cmp
pop
lods
test
mov
xchg
mov
jmp
std
or
addr16
mov
lret
lea
fnstsw
daa
mov
mov
or
addr16
mov
in
inc
popa
in
or
addr16
lods
lea
aam
dec
daa
jno
addr16
mov
dec
das
popa
into
mov
jmp
add
popa
sub
pop
imul
jno
addr16
mov
push
mov
mov
and
mov
popa
scas
mov
cmpsl
dec
cmp
pop
or
popa
int3
mov
push
mov
imul
or
addr16
jle
push
jno
inc
or
inc
cmp
pop
pop
pop
popa
scas
mov
cmp
mov
sub
addr16
addl
stos
popa
xchg
xchg
or
out
mov
pop
popa
mov
into
mov
or
or
pop
test
mov
pop
inc
mov
cmpl
mov
dec
xchg
popa
mov
loope
or
popa
or
int
sbb
pop
adc
mov
int3
mov
jo
popa
dec
mov
mov
call
mov
addr16
mov
enter
mov
leave
mov
and
fstpt
enter
add
jnp
or
andl
pop
mov
dec
or
mov
lret
or
mov
mov
int
popa
or
ljmp
or
mov
sbb
xchg
mov
jp
dec
cmp
pop
mov
or
addr16
mov
mov
popa
leave
mov
repnz
mov
popa
enter
add
insl
xor
mov
jge
popa
jne
or
dec
pop
inc
mov
mov
or
mov
mov
or
lds
frstor
aad
int3
sub
pop
mov
cmp
xchg
pop
or
push
mov
sbb
mov
pop
into
movsb
popa
or
mov
mov
pop
leave
test
mov
xchg
mov
enter
mov
pop
mov
ret
pop
popa
or
addr16
pop
pop
lret
or
push
inc
cmp
pop
aas
int
push
mov
dec
mov
test
or
addr16
mov
xlat
popa
iret
mov
dec
mov
ds
popa
dec
mov
dec
mov
push
leave
popa
scas
mov
dec
mov
mov
popa
mov
inc
mov
sub
popa
and
dec
mov
or
popa
add
push
pop
cmp
pop
lea
int
popa
or
addr16
dec
cmp
pop
mov
or
addr16
mov
xchg
popa
mov
icebp
mov
mov
popa
into
mov
push
pop
mov
leave
mov
dec
clc
pop
inc
popa
mov
push
mov
inc
mov
or
addr16
rolb
fsubs
mov
and
mov
mov
int
add
pop
cmp
mov
int3
mov
mov
popa
stos
mov
mov
xchg
dec
popa
mov
into
mov
repz
popa
or
leave
mov
adc
push
ljmp
add
mov
andl
or
mov
mov
repnz
pop
cmp
pop
fisubl
mov
jns
sub
mov
cmp
pop
inc
popa
inc
mov
push
mov
mov
mov
pop
into
lea
mov
popf
mov
leave
and
or
xor
mov
pop
enter
mov
adc
cmpl
ret
fs
addr16
dec
cmp
pop
mov
or
cmp
in
lea
mov
or
hlt
cmp
pop
int3
mov
xchg
arpl
addr16
popa
pop
mov
mov
inc
dec
popa
aas
mov
into
mov
cmpsl
dec
popa
lahf
mov
leave
mov
or
add
enter
add
imul
test
mulb
mov
mov
orl
mov
loopne
or
clc
pop
dec
lock
mov
aaa
add
mov
pop
push
popa
mov
into
mov
mov
mov
dec
mov
inc
add
mov
ret
mov
cmpsl
mov
popf
jo,pt
fisubs
or
addr16
jg
lods
pop
xchg
int3
popa
mov
xchg
testl
or
test
iret
mov
mov
ds
popa
ss
or
push
lret
movsl
insl
loopne
outsb
or
addr16
jle
dec
jbe
in
mov
inc
mov
push
popa
outsb
mov
cmpsb
mov
dec
mov
jmp
xchg
sahf
pop
enter
mov
out
sub
pop
dec
mulb
mov
or
fmulp
popa
mov
mov
cmp
xor
push
mov
sbb
popa
adc
mov
popa
sub
mov
call
pop
inc
mov
or
addr16
test
fcomi
cmp
mov
in
mov
mov
cltd
mov
addr16
or
addr16
mov
out
test
or
mov
pop
dec
mov
mov
cwtl
mov
sub
popa
dec
mov
clc
imul
ret
addr16
sarb
fsubs
popa
sarb
mov
xor
sub
imul
mov
call
adc
ret
mov
mov
lods
sarb
mov
pop
mov
lods
stos
popa
int3
mov
lea
insl
xchg
popf
mov
mov
jmp
pop
std
mov
mov
mov
pop
out
push
out
ljmp
testb
into
popa
mov
fisubs
push
sub
mov
cmp
sub
popa
test
add
sbb
adc
subl
mov
jns
dec
cmp
pop
lret
insl
shlb
inc
mov
sub
push
cmp
pop
test
pop
or
xchg
push
pop
mov
or
imul
or
addr16
stc
cmp
pop
icebp
arpl
mov
ret
mov
shrl
and
cmp
in
or
mov
sbb
out
popa
cs
dec
mov
sub
test
addr16
pop
mov
mov
sub
or
addr16
call
cli
or
addr16
mov
clc
lods
popa
lock
pop
mov
fsubrs
popa
sarb
scas
rolb
popa
xor
jmp
pop
cmp
adc
and
jmp
popa
sub
icebp
mov
or
or
addr16
sarl
pop
sub
cmp
mov
or
add
imul
addr16
pop
jo
popa
dec
mov
dec
mov
push
or
dec
addr16
cmp
pop
insb
mov
int3
mov
andb
nop
popa
push
mov
jp,pn
imul
mov
mov
pop
push
or
mov
mov
jle
daa
add
dec
addr16
mov
mov
daa
mov
cmp
cmp
mov
or
jmp
jae
call
mov
mov
push
mov
insl
cmp
mov
and
jl
mov
inc
mov
int3
pop
dec
les
mov
daa
mov
sub
popa
dec
mov
shll
shll
mov
xchg
or
xchg
lret
movsl
insl
adc
fbld
dec
out
popa
in
mov
mov
pop
iret
popa
outsb
mov
mov
imul
or
addr16
mov
mov
popa
enter
add
mov
jecxz
popa
or
inc
pop
lret
mov
int
scas
cmp
pop
cmpsb
int3
popa
mov
addr16
mov
xchg
popa
sahf
mov
leave
mov
out
popa
mov
inc
mov
or
mov
lret
lods
insl
arpl
pop
lea
popa
sub
xor
or
add
pop
sbb
mov
imul
mov
cmp
jmp
pop
or
addr16
mov
mov
mov
xchg
mov
subl
popa
xchg
mov
insb
mov
stc
daa
popa
icebp
mov
out
sarl
fldcw
or
imul
popa
xor
call
pop
sbb
or
addr16
pusha
cmp
js
jae
jo
pop
cmp
pop
in
inc
popa
or
pop
or
addr16
mov
addr16
mov
mov
dec
cmp
pop
out
andb
cwtl
or
addr16
mov
push
clc
or
addr16
enter
popa
or
shlb
insl
imul
lea
mov
dec
mov
cmp
popa
adc
mov
sbb
push
cmpsb
cmp
pop
inc
jmp
or
addr16
dec
cmp
pop
mov
orl
sub
mov
or
add
or
addr16
mov
daa
jmp
inc
mov
sti
mov
scas
lret
popa
into
mov
and
sub
popa
dec
mov
add
mov
push
mov
jp
cmp
jb
cmp
mov
or
pop
cmp
pop
push
daa
popa
stos
mov
mov
mov
popa
mov
jmp
pop
xchg
test
ljmp
mov
repnz
xchg
call
pop
fimull
dec
lods
inc
cmp
pop
and
mov
cmp
pop
add
push
or
scas
mov
imul
addr16
pop
dec
popa
inc
mov
add
mov
push
mov
fisttpl
lea
test
in
popf
popa
or
xchg
or
addr16
mov
addr16
popa
xchg
int
dec
cmp
pop
out
frstor
mov
sub
leave
cmp
pop
push
xor
and
mov
jecxz
popa
or
insb
mov
insl
mov
je
sub
dec
mov
popa
pop
mov
cmpsl
mov
movsb
outsb
popa
mov
sub
dec
pop
test
popa
pushf
mov
test
in
cmp
pop
in
popa
cld
mov
andl
or
mov
mov
pop
or
mov
mov
int
popa
dec
mov
adc
bound
mov
jb
dec
cmp
dec
fimull
addr16
mov
inc
stos
popa
ret
mov
mov
lret
mov
dec
mov
xchg
inc
popa
ljmp
mov
repnz
mov
leave
mov
rorb
and
mov
sub
pop
insl
stos
movsl
add
sub
addr16
mov
ja
popa
outsl
mov
cmpsl
mov
push
cs
dec
mov
scas
mov
mov
popa
scas
mov
test
pop
xchg
or
mov
mov
pop
and
mov
andl
dec
popa
mov
addr16
lods
or
mov
cwtl
mov
dec
call
mov
mov
or
addr16
mov
scas
pop
popa
into
mov
push
mov
sub
or
addr16
add
pop
mov
jg
dec
addr16
mov
insl
mov
fistpll
int3
mov
ss
push
mov
or
xchg
sub
mov
and
cmp
popa
xor
dec
mov
sbb
xchg
cmp
imul
mov
dec
mov
in
pop
popa
daa
mov
test
pop
out
popa
scas
mov
mov
dec
cltd
popa
enter
inc
addr16
pop
push
popa
ljmp
sub
cmp
and
popa
cmp
mov
add
popa
push
scas
mov
jo
popa
dec
mov
sub
push
mov
mov
mov
pop
mov
popa
mov
loopne
outsb
aaa
sub
movsl
nop
addr16
mov
fisttpl
mov
daa
mov
ljmp
cli
addr16
mov
lret
ret
or
addr16
arpl
dec
addr16
lret
adc
addr16
mov
jge
popa
jne
xchg
out
pop
inc
sub
mov
test
movsl
mov
push
pop
call
or
addr16
cmp
pop
in
popa
std
mov
mov
lds
repz
mov
sub
mov
pop
int3
cmp
xchg
or
outsb
cmp
pop
mov
sub
insb
mov
sub
mov
dec
mov
inc
pop
popa
cmpl
mov
stos
mov
cmp
jmp
mov
mov
pushf
insb
popa
xchg
mov
daa
mov
cld
cmpsl
popa
hlt
mov
mov
aaa
into
popa
das
mov
mov
pop
dec
popa
addr16
and
outsl
andl
ret
or
or
dec
pop
scas
mov
popf
aaa
arpl
xlat
pop
iret
popa
sub
cs
addr16
ds
daa
ss
inc
mov
push
mov
push
push
popa
scas
mov
mov
mov
sub
inc
mov
and
inc
mov
cmpsb
mov
stos
mov
ljmp
xchg
ds
sahf
int
xchg
mov
mov
into
xchg
mov
mov
mov
leave
mov
xor
imul
or
addr16
push
jno
ljmp
lcall
addr16
mov
daa
int
cmpsl
mov
frstor
out
sub
or
cmp
sub
pop
dec
or
enter
add
mov
or
mov
or
je
or
dec
lods
popa
inc
mov
addr16
xchg
lods
cs
movsb
mov
out
mov
mov
or
addr16
mov
in
add
mov
ret
mov
int3
lret
xchg
or
insl
fsubl
dec
ja
in
mov
inc
mov
mov
jle
or
pop
mov
popa
or
mov
andl
lret
mov
lret
insl
and
add
or
adc
pop
imul
or
xchg
push
pop
dec
mov
mov
mov
test
and
addr16
mov
mov
cmpl
fadds
jmp
or
addr16
mov
addr16
popa
xchg
fldenv
sub
popa
test
cmp
pop
test
popa
and
pop
mov
stos
test
cmp
or
jnp
popa
push
mov
daa
mov
cmp
jno
addr16
scas
pop
add
popa
sbb
jmp
pop
bound
or
addr16
cmp
pop
inc
or
mov
or
lea
pop
or
popa
mov
mov
fimull
addr16
mov
mov
popa
into
mov
repnz
or
popa
test
fimull
shlb
daa
xchg
andl
ljmp
fildl
cmp
add
in
mov
insl
mov
in
jge
pop
mov
cmp
movl
into
addr16
mov
mov
mov
mov
cmpl
mov
sbb
call
int
cmovl
mov
cmp
ja
popa
outsl
mov
scas
mov
push
dec
popa
dec
mov
or
mov
popa
scas
mov
jecxz
jg
push
xchg
ljmp
out
lea
mov
dec
out
popa
in
mov
mov
pop
iret
popa
outsb
mov
mov
mov
popa
sub
push
mov
add
popa
mov
addr16
jle
pusha
cmp
jbe
mov
xchg
mov
in
mov
mov
cltd
mov
out
pusha
popa
sub
jo
test
inc
popa
or
push
mov
enter
mov
mov
cmpl
ret
andb
cwtl
or
addr16
mov
lret
or
push
lock
pop
enter
mov
mov
and
fstpt
out
sub
pop
add
cmp
out
mov
arpl
sbb
jmp
pop
inc
push
or
addr16
and
add
push
mov
mov
mov
cmp
lea
mov
mov
sub
pop
insb
popa
in
lods
or
addr16
mov
int
popa
lds
out
aad
cs
sub
popa
and
scas
or
addr16
mov
or
popa
add
jmp
mov
insb
test
fs
and
dec
mov
or
sub
push
lods
stos
popa
movsb
xchg
call
jb
popa
insl
mov
mov
pop
dec
mov
mov
sahf
mov
out
popa
outsb
mov
mov
dec
into
popa
jmp
fisubs
pop
test
popa
call
cmp
xor
mov
add
sbb
adc
stos
imul
mov
addr16
add
in
mov
pop
mov
lods
test
or
addr16
pop
cmpsl
mov
mov
cltd
mov
cmp
pop
lcall
pop
lret
addr16
mov
cmp
pop
enter
add
addr16
rolb
popa
inc
mov
or
mov
lret
lods
or
mov
andb
xchg
popa
dec
mov
loop
int3
cmp
pop
pop
repnz
inc
mov
cmp
fisubl
mov
lods
fidivrl
pop
and
or
cmp
pop
add
or
cmp
pop
gs
add
andl
ret
or
or
dec
mov
mov
lods
or
mov
test
int
popa
or
xchg
or
addr16
mov
int3
std
popa
pop
mov
int
xchg
push
mov
sub
mov
pop
into
cmp
or
inc
mov
jmp
dec
or
cmpsl
mov
push
scas
or
xchg
jg
call
or
addr16
mov
mull
mov
mov
ljmp
insl
mov
mov
sub
ss
pop
push
lods
popa
push
mov
daa
mov
outsb
cmpsl
popa
mov
jle
mov
dec
scas
popa
inc
mov
sub
scas
test
or
sub
push
xchg
and
out
mov
or
sub
push
into
stos
popa
mov
cmp
cs
insl
ljmp
lcall
cmp
pop
xor
mov
in
mov
adc
test
cmpsl
or
xchg
out
mov
popa
mov
push
mov
nop
dec
popa
call
mov
into
pop
lock
mov
mov
rorb
popa
and
mov
sub
jno
addr16
mov
adc
popa
or
dec
mov
jae
popa
imul
pop
cmp
pop
lea
int
dec
or
addr16
cmp
pop
mov
or
andl
pop
xchg
or
jcxz
dec
cmp
pop
mov
popa
into
mov
ret
mov
mov
popa
leave
mov
sub
mov
popa
enter
add
mov
sbbl
ret
mov
push
dec
cmp
pop
mov
lret
cmp
mov
pop
xchg
lea
mov
or
cli
cmp
pop
repnz
mov
pop
rolb
inc
popa
sarb
pop
push
and
or
addr16
pop
dec
add
or
addr16
pop
dec
gs
call
addr16
mov
test
mov
xchg
mov
dec
in
stos
mov
cmc
mov
lret
cmp
mov
mov
cmp
cmp
popa
xor
lods
or
addr16
mov
sbb
popa
adc
cmpsl
or
addr16
fs
pop
jl
popa
je
scas
or
addr16
mov
pop
imul
addr16
pop
mov
test
mov
mov
pushf
arpl
mov
jecxz
in
sub
cld
push
hlt
mov
ljmp
fdivrl
daa
addr16
mov
aaa
insb
popa
das
mov
in
mov
pop
addr16
bsr
pop
pop
cs
ja
outsb
or
scas
mov
aas
sub
mov
test
pop
lahf
or
mov
add
jg
popa
xchg
mov
cmp
out
daa
sbb
int
testl
cmp
pop
out
popa
push
mov
iret
mov
sub
popa
imul
push
pop
sub
popa
push
addr16
mov
arpl
popa
mov
addr16
mov
dec
fisubs
mov
sub
lcall
in
or
addr16
mov
sbb
popa
adc
out
popa
cmp
pop
jns
popa
jno
into
or
or
test
push
mov
call
pop
mov
orl
ret
mov
cltd
stos
popa
xchg
xchg
or
insl
cmp
pop
icebp
popa
int
leave
or
shll
pop
mov
popa
int3
mov
and
xchg
popa
cs
js
out
cmp
pop
or
dec
mov
pop
mov
push
mov
pop
add
or
andb
pop
or
or
loopnew
insl
ljmp
sub
enter
shlb
fdivrs
pop
shlb
or
scas
mov
arpl
popa
sbb
dec
mov
inc
enter
arpl
andl
pop
mov
ljmp
popa
insl
mov
mov
or
mov
jcxz
mov
pop
int3
repz
addr16
ret
mov
mov
popa
or
sub
or
popa
test
xor
or
add
inc
sbb
mov
push
pop
bound
mov
jb
insl
cli
movsl
dec
cmp
pop
inc
or
pop
mov
mov
mov
inc
or
addr16
mov
pop
subb
mov
into
mov
loop
jno
addr16
mov
lret
ret
or
addr16
call
stos
and
and
xor
mov
movsb
in
mov
dec
insl
movsb
mov
addr16
mov
mov
push
push
or
pop
mov
into
mov
cmp
mov
or
addr16
and
mov
mov
sub
pop
dec
popa
gs
mov
test
movsl
jne
ljmp
or
xlat
cmp
mov
pop
addr16
mov
mov
cmp
push
push
popa
scas
xchg
imul
cmp
jmp
mov
call
xlat
cmp
inc
lea
xchg
imul
addr16
sarb
cmp
lea
and
or
insb
enter
in
int3
push
movsl
cmp
pop
std
cmpsl
popa
cmc
test
cs
arpl
insl
and
popa
fnstsw
push
add
mov
mov
sub
pop
push
cmp
mov
daa
fidivl
and
and
mov
cmp
dec
add
in
xchg
imul
addr16
cs
popa
outsb
mov
cmp
into
fs
imul
je
ljmp
or
inc
dec
and
jno
add
inc
mov
addr16
enter
push
mov
daa
shrb
loope
movsb
mov
dec
mov
cmp
addr16
cmpsl
xchg
imul
test
popa
imul
popa
mov
in
incl
cmp
addr16
ret
out
popa
push
cld
push
cmpsb
out
popa
lret
sbb
movsl
int3
and
jno
addr16
mov
mov
addr16
aam
push
movsl
cmp
pop
daa
out
jno
sub
dec
mov
addr16
pop
push
push
movsl
cmp
pop
pop
add
addr16
mov
mov
push
pop
mov
pop
arpl
and
insl
mov
addr16
pop
insb
popa
outsl
mov
in
pop
inc
daa
jno
iret
cmp
aas
out
add
mov
mov
imul
mov
test
lahf
call
mov
mov
or
pop
mov
mov
insl
cmp
insl
sbb
movsl
mov
and
insl
gs
movsl
and
mov
and
inc
mov
addr16
enter
movsl
testl
movsl
out
mov
imul
popa
push
cmp
call
iret
mov
mov
cmp
or
popa
dec
xchg
imul
xor
insl
or
jae
push
jecxz
insl
mov
addr16
pop
int3
popa
push
mov
cmpsl
pop
push
out
add
mov
mov
pop
out
jbe
sub
inc
mov
sub
push
cmpsb
mov
arpl
or
xchg
sahf
pop
stos
xchg
popa
ljmp
out
dec
pop
decb
or
insb
mov
fmulp
popa
mov
inc
mov
cmp
popa
xor
dec
mov
sbb
popa
adc
test
jns
push
mov
inc
and
mov
mov
pop
mov
push
mov
stos
mov
sbb
insl
addr16
fadds
jmp
or
addr16
mov
lods
leave
popa
in
mov
sub
out
and
push
movsl
cmp
pop
cmp
mov
mov
jmp
add
mov
mov
inc
enter
push
cmp
pop
pusha
dec
jno
mov
lret
or
loopne
dec
mov
mov
push
movsl
cmp
pop
pop
in
jno
addr16
cmpsl
push
test
cs
pop
scas
mov
mov
mov
cmp
mov
sub
or
addr16
mov
mov
lock
or
popa
stos
mov
shr
sub
pop
and
fistl
in
pop
sub
add
int3
mov
or
or
addr16
mov
inc
into
popa
jnp
imul
cmp
pop
mov
mov
and
arpl
andl
xchg
or
dec
pop
jecxz
popa
fwait
movsl
or
mov
ret
popa
or
sti
or
shll
lret
pop
daa
sub
mov
cmp
dec
or
mov
sbb
mov
leave
mov
jp
mov
pop
enter
mov
pop
mov
sub
push
mov
mov
cmp
mov
cmp
orb
xchg
insb
mov
loop
or
pop
movsl
cli
arpl
enter
repnz
sub
mov
and
movsb
dec
popa
ret
push
movsl
cmp
mov
push
lahf
or
pop
stos
out
arpl
jge
movsb
dec
xor
movsb
lea
pop
pop
insl
lods
addr16
in
movsl
and
popa
cmpsl
xchg
ljmp
cmp
xlat
cmp
imul
dec
mov
and
call
movsl
cmp
pop
add
decl
cmp
addr16
movsb
lahf
insl
insl
loope
lea
out
popa
or
imul
xlat
cmp
cmpsl
gs
out
imul
xlat
cmp
into
cmp
xlat
cmp
mov
leave
xlat
cmp
dec
dec
popa
and
popa
jecxz
push
mov
movsl
pop
xor
movsb
in
insl
arpl
xchg
imul
out
cs
mov
mov
test
pop
popf
sub
mov
decl
in
add
mov
jecxz
int
push
lds
stos
cmp
sarb
cmp
pop
xor
dec
mov
add
int3
cmp
pop
pop
adc
inc
mov
mov
push
je
dec
mov
inc
mov
imul
push
mov
push
addr16
test
add
mov
addr16
pop
stos
popa
in
sbb
dec
movsl
cld
or
sub
hlt
lods
jno
addr16
clc
pop
pop
jno
addr16
imul
or
insl
cmp
outsb
pop
fmull
enter
aam
mov
leave
mov
addr16
pop
call
mov
mov
sub
aaa
push
add
loope
and
xchg
imul
mov
imul
mov
dec
insl
and
popa
pop
mov
scas
pop
pmaxsw
or
dec
mov
addr16
pop
push
push
movsl
cmp
pop
outsl
arpl
addr16
cmp
mov
dec
insl
rep
mov
mov
push
movsl
cmp
pop
dec
mov
addr16
mov
mov
dec
enter
mov
imul
jno
addr16
mov
mov
or
ret
popa
xchg
mov
stos
pop
pop
or
dec
insl
aaa
test
movsl
fbld
int
or
mull
popa
pop
mov
cmp
mov
outsb
iret
cmp
sub
mov
mov
or
addr16
mov
mov
movsl
fsubs
movsl
es
mov
ss
insb
xlat
cmp
mov
or
xor
and
pop
push
outsb
jno
addr16
mov
mov
mov
pop
sub
mov
mov
enterw
arpl
pop
movsl
mov
enter
jbe
lret
cmc
or
lea
mov
movsl
pop
int3
pop
popa
pop
mov
scas
mov
mov
pop
mov
mov
dec
mov
cmp
or
mov
and
or
inc
xchg
movsl
jecxz
arpl
mov
out
lret
or
movsl
dec
cmp
sarb
sub
lods
cmp
mov
or
sbb
mov
imul
xchg
arpl
push
mov
enter
cmp
orl
lahf
ret
xlat
mov
cmp
pop
cltd
ljmp
xchg
movsl
insl
or
iret
ds
loope
popa
stc
mov
dec
addr16
mov
mov
cmp
addr16
roll
rorl
in
and
mov
cmp
dec
and
mov
xor
jno
lahf
ljmp
add
jno
addr16
loope
movsl
jecxz
adc
addr16
lahf
lret
lods
or
rep
and
mov
addr16
mov
mov
lahf
daa
enter
push
mov
mov
cmp
push
pop
mov
mov
or
in
and
mov
cmp
leave
orb
arpl
nop
call
loopne
arpl
pop
xor
ret
mov
shlb
shrb
xchg
and
mov
loope
mov
pop
insb
sub
xchg
imul
cmpsl
adc
or
push
arpl
mov
jae
sub
pop
dec
inc
daa
mov
sub
mov
enter
popa
dec
mov
addl
ret
jno
or
dec
mov
xchg
dec
movsl
and
jnp
stos
and
push
movsl
popa
cmpl
pop
mov
in
mov
mov
cmpsl
enter
jecxz
cs
movsl
cmp
pop
fwait
mov
addr16
mov
mov
mov
pop
leave
popa
ret
mov
dec
pop
sti
mov
addr16
add
addr16
enter
sub
daa
in
popa
insl
pop
insl
and
lea
popa
sub
imul
or
popa
outsb
mov
cmp
dec
sbb
xchg
imul
addr16
ret
out
popa
ljmp
loope
int
jp
and
out
popa
pop
mov
cmp
cs
popa
dec
xchg
imul
addr16
mov
leave
mov
movsb
or
stos
call
and
or
xlat
cmp
cmpl
push
mov
mov
or
iret
cmp
dec
cmc
movsl
and
lea
or
test
insl
movsb
mov
cmp
dec
cmp
addr16
mov
xchg
imul
mov
push
lea
push
movsl
cli
movsb
jmp
or
xlat
cmp
jecxz
popa
or
imul
inc
insl
movsb
fimull
movsb
in
popa
ret
push
movsl
cmp
mov
and
out
or
shlb
popa
scas
xchg
or
sub
aaa
or
movsb
jmp
add
mov
mov
arpl
xor
sub
pop
push
or
scas
dec
lds
add
cmp
int
mov
lods
enter
add
mov
mov
push
pop
insl
dec
jno
addr16
pop
into
popa
gs
test
jge
sub
pop
push
mov
mov
arpl
dec
mov
enter
andl
pop
ljmp
pop
lahf
insl
insl
fsubs
cmp
ljmp
cmp
lods
mov
pop
int3
out
pop
mov
cmp
cmpsl
mov
cmp
sarb
aaa
out
push
movsb
sub
mov
jmp
mov
and
and
or
xlat
cmp
adcl
dec
popa
in
mov
cmp
or
mov
addr16
lds
mov
cmp
daa
sub
inc
mov
inc
xor
push
pop
cmp
jno
addr16
mov
or
test
cmp
pop
or
test
insb
or
addr16
jl
inc
je
jecxz
dec
or
addr16
mov
ljmp
ja
dec
insl
mov
movsl
aaa
insb
push
movsb
lods
addr16
and
mov
mov
dec
enter
test
mov
pushf
or
addr16
xchg
cmp
mov
movsl
pop
and
ret
movsl
cld
mov
or
hlt
ljmp
int3
fcomps
mov
ljmp
mov
mov
mov
cmp
push
daa
popa
dec
xchg
imul
addr16
mov
mov
insl
movsb
enter
adcl
mov
cmp
mov
popa
lret
imul
insl
arpl
mov
addr16
pop
int3
popa
ja
pop
push
movsl
cmp
pop
outsl
out
add
mov
test
addr16
mov
arpl
dec
pop
add
or
addr16
sub
pop
push
popa
mov
movsl
xchg
popa
mov
or
movsl
pop
or
addr16
cmpsl
mov
out
pop
cs
arpl
into
mov
addr16
push
and
addr16
mov
mov
cmp
arpl
arpl
jecxz
sub
scas
ljmp
mov
jns
in
cmp
jno
sub
popa
insb
mov
pop
mov
daa
test
cmp
movl
scas
mov
mov
dec
enter
popa
test
loope
andl
cltd
or
xlat
mov
addr16
ret
popa
jmp
cmp
pop
loope
jno
lods
add
stc
lahf
insl
insl
fsubs
icebp
popa
in
xchg
imul
shll
daa
mov
insl
push
insl
mov
addr16
add
loope
and
xchg
imul
cmp
popa
enter
mov
or
xchg
imul
push
dec
movsl
sbb
daa
cmp
adc
popa
outsb
mov
cmp
mov
or
cmp
call
imul
addr16
inc
or
lea
out
popa
lods
mov
cmp
xchg
xchg
imul
mov
mov
popa
mov
and
cwtl
ret
popa
nop
mov
stos
mov
clc
insl
daa
insb
lock
lea
mov
and
sarb
pop
fadds
add
mov
mov
or
pop
dec
popa
fstpt
push
add
mov
mov
pop
ljmp
or
arpl
sbb
insb
jae
mov
inc
cmpsb
inc
xor
and
pop
jnp
jno
outsb
mov
mov
sub
pop
imul
cmp
push
pop
movsl
sub
mov
mov
mov
add
addr16
mov
mov
popa
mov
movsl
stos
or
addr16
and
and
mov
pop
or
jae
dec
insl
mov
movsl
pop
pop
lret
mov
fisubl
dec
popa
and
addr16
mov
or
popa
sub
or
addr16
cmp
enter
popa
or
orl
sub
mov
push
sbb
lret
imul
insl
arpl
imul
pop
enter
fs
dec
mov
addr16
enter
add
rolb
jno
addr16
add
dec
mov
sub
and
stos
cmp
addr16
inc
or
dec
movsl
push
pop
push
movsl
push
lods
and
xlat
cmp
int3
movsb
popa
inc
xchg
imul
addr16
scas
out
popa
out
mov
cmp
mov
dec
cmp
pop
call
mov
pop
ret
or
addr16
mov
hlt
lret
addr16
dec
movsl
fsubl
mov
daa
mov
mov
popa
int3
mov
cmp
cmpsl
jmp
mov
pop
mov
pop
sub
sub
cmpsl
mov
jmp
pop
scas
dec
popa
xchg
enter
add
popl
out
orl
ret
mov
out
stos
popa
mov
or
insl
xor
and
xlat
mov
or
iret
lods
jno
addr16
mov
mov
scas
enter
ds
sub
ss
add
mov
mov
or
ret
popa
push
mov
ljmp
sub
outsb
arpl
mov
movsl
cmp
pop
jle
jno
xchg
push
mov
cmp
loop
imul
sub
mov
and
push
xorl
sub
mov
insl
lods
movsl
inc
and
movsl
mov
mov
xchg
movsl
mov
ljmp
pop
push
movsl
cmp
pop
xchg
jno
addr16
mov
mov
into
enter
out
mov
jmp
add
mov
mov
add
pop
mov
mov
aaa
arpl
movsl
fisubs
lea
or
lods
insl
call
and
out
popa
cmpsl
mov
cmp
scas
cmp
xchg
imul
or
popa
dec
mov
cmp
and
popa
arpl
adc
or
or
addr16
or
lea
xor
dec
mov
jns
inc
cmp
xlat
cmp
jno,pn
dec
xchg
imul
imul
sub
mov
test
push
call
mov
mov
lret
or
lea
insl
and
int
popa
dec
xchg
imul
andl
or
xlat
cmp
sub
mov
xchg
imul
addr16
mov
mov
cmp
ret
leave
popa
or
shll
push
movsl
and
movsl
push
fldenv
xlat
cmp
dec
shll
xchg
imul
and
cmp
dec
pop
xor
push
imul
sbb
test
adc
int3
mov
cmp
xchg
cs
imul
addr16
test
dec
or
xlat
cmp
test
popa
arpl
pop
jmp
cmp
addr16
mov
mov
lods
mov
or
movsl
push
mov
movsb
sub
imul
xlat
cmp
pop
fimull
xlat
cmp
out
arpl
enter
cmpb
pop
cwtl
leave
jno
addr16
mov
addr16
enter
loopne
sbb
dec
movsl
clc
or
cmp
sub
movsl
cmp
pop
enter
addr16
sarb
mov
out
enter
sarb
jmp
add
mov
mov
inc
enter
lret
enter
add
mov
cmp
insl
movsl
adc
and
mov
addr16
pop
dec
popa
arpl
popa
sbb
out
jae
jno
outsb
loope
movsl
scas
mov
jnp
imul
push
addr16
mov
subl
stos
cmp
pop
ljmp
mov
sub
mov
decl
mov
cmpsl
or
loope
movsl
push
mov
ret
mov
test
lret
xor
push
test
movsl
cmp
pop
and
jno
pop
jmp
pop
cmp
jno
stos
enter
xor
movsb
int
and
mov
or
lods
mov
lahf
jmp
cmp
out
sbb
jno
sub
mov
popa
into
xchg
imul
jmp
bound
test
cmp
call
insl
cmp
inc
mov
mov
ret
xlat
arpl
pop
mov
movsb
dec
xor
lahf
or
xor
pop
int
inc
insb
pop
or
arpl
xlat
mov
addr16
add
enter
push
mov
test
mov
inc
pop
stos
ret
jno
addr16
pop
mov
pop
or
pop
insl
mov
in
insl
push
pop
dec
cmc
insl
pop
lret
mov
xchg
imul
xlat
cmp
into
xor
dec
pop
mov
enter
xlat
cmp
and
mov
or
pop
mov
movsl
insl
les
insl
pop
int
insl
mov
lods
movsl
xchg
cmp
daa
mov
cmp
mov
addr16
pop
sub
addr16
mov
dec
mov
cmp
pop
cli
or
addr16
enter
add
or
int
push
pop
insb
in
pop
lods
pop
insl
pop
pop
in
lret
xchg
imul
cmp
decl
cmp
xlat
cmp
out
cmp
fisubl
popa
test
out
popa
sub
cmp
call
cmp
arpl
add
arpl
insl
lea
mov
movsl
pop
repnz
insl
pop
lahf
int
loope
or
cmp
popa
mov
popa
pop
mov
cmp
out
or
xlat
cmp
outsb
or
mov
xchg
ljmp
cmp
xlat
cmp
or
or
addr16
arpl
popa
ret
mov
cmp
mov
or
xlat
cmp
or
xor
pop
or
jae
lods
insl
mov
cmpsl
enter
add
enter
jge
into
push
movsl
cmp
mov
cmp
pop
jne
jno
addr16
pop
mov
mov
mov
dec
pop
movsl
pop
insl
shll
mov
pop
sub
andl
pop
cmp
mov
cmp
mov
addr16
pop
dec
jno
addr16
inc
addr16
enter
inc
addr16
add
movsl
mov
or
cmpsb
mov
cmp
aaa
jmp
pop
inc
in
pop
int
movsl
mov
or
insl
pop
ljmp
pop
lea
xchg
imul
cmp
ljmp
cmp
xlat
cmp
jmp
enter
add
mov
mov
jecxz
in
ljmp
mov
dec
movsl
in
pop
sub
jae
dec
insl
mov
cmp
pop
std
out
add
enter
insl
mov
pop
jmp
mov
cmp
pop
int
jno
addr16
pop
ljmp
lds
sbb
insl
mov
ljmp
cmp
imul
mov
xlat
cmp
mov
sub
lret
insl
jmp
pop
inc
in
pop
mov
movsl
and
daa
pop
insl
pop
jmp
or
xlat
cmp
out
cmp
sub
popa
mov
xor
enter
out
popa
mov
cmp
ljmp
cmp
xlat
cmp
mov
or
addr16
insl
pop
movsl
fcomps
pop
insl
mov
int
push
pop
dec
movsl
push
sbb
in
xlat
cmp
pop
cmp
xlat
cmp
xchg
xchg
imul
cmp
ljmp
cmp
push
fs
cmp
xlat
cmp
cmpl
ret
addr16
or
popa
dec
xchg
imul
int
mov
pop
lods
xor
pop
inc
pop
dec
xchg
addr16
enter
add
mov
mov
dec
mov
addr16
pop
dec
jno
cmp
addr16
pop
xorl
sub
pop
dec
popa
lods
mov
and
movsl
movsb
movsb
rep
mov
cmp
pop
mov
int3
enter
mov
inc
push
movsl
cmp
mov
scas
enter
add
mov
mov
push
add
enter
daa
ret
popa
xchg
mov
movsb
dec
enter
in
movsl
or
dec
dec
insl
pop
lea
insl
mov
insb
movsl
in
pop
lods
mov
cmp
mov
cmpsl
enter
add
enter
hlt
mov
sub
cmp
push
int3
and
ja
arpl
fsubl
mov
daa
mov
stos
aaa
ret
mov
and
movsl
das
cmp
in
mov
lods
enter
fsubs
mov
addr16
pop
decl
pop
add
in
and
mov
cmp
dec
inc
arpl
or
cmp
test
popa
enter
arpl
popa
cmpl
ljmp
or
addr16
call
lahf
dec
insl
loope
lea
out
popa
dec
xchg
imul
xlat
cmp
out
popa
outsb
xchg
imul
test
xchg
enter
jg
call
xchg
mov
jecxz
imul
mov
out
in
and
mov
cmp
dec
mull
xchg
imul
addr16
addr16
into
mov
cmp
test
iret
arpl
add
cmp
and
addr16
enter
es
ljmp
mov
push
movsb
in
in
movsb
dec
mov
cmp
pop
cmp
addr16
mov
mov
cmp
or
push
mov
mov
push
jle
enter
arpl
inc
sub
mov
stos
imul
cmpsb
and
pop
insl
and
int3
mov
mov
outsb
cmp
mov
or
xchg
popa
or
cmp
enter
xchg
imul
addr16
insl
dec
movsl
loope
lea
out
popa
in
mov
cmp
daa
sub
add
addr16
and
addr16
mov
mov
cmp
or
or
arpl
and
push
xor
mov
sbb
sub
and
mov
or
imul
push
int
popa
and
insb
cmp
addr16
int3
out
popa
addr16
cmp
push
dec
popa
dec
xchg
imul
addr16
mov
mov
popa
and
cmp
jecxz
popa
or
mov
adc
pop
movsl
pop
mov
popa
mov
lods
mov
xchg
pop
popa
jmp
addr16
stc
cmp
pop
icebp
out
popa
sub
dec
mov
xor
jno
addr16
add
pop
sbb
popa
adc
sub
js
popa
jo
ljmp
inc
mov
sub
popa
dec
mov
mov
pop
pop
mov
inc
xchg
ljmp
fsubs
mov
and
into
xor
mov
add
leave
adc
mov
arpl
add
popa
enter
add
mov
mov
push
mov
dec
mov
pop
insl
scas
movsl
mov
dec
pop
stos
in
popa
cmpl
mov
mov
popa
jecxz
inc
or
xchg
movl
mov
into
mov
lret
leave
imul
gs
movsl
and
xlat
cmp
cmpl
sub
inc
movsb
ljmp
movsl
movsb
rep
mov
sub
movsl
or
mov
arpl
daa
enter
add
enter
xlat
cmp
mov
arpl
enter
adc
jmp
add
mov
mov
or
sub
mov
ljmp
and
arpl
movsb
dec
mov
jl
lahf
pop
insl
mov
movsl
out
cmp
mov
stos
test
insl
arpl
mov
mov
leave
enter
mov
test
mov
and
xchg
mov
jecxz
and
inc
loop
mov
mov
lcall
ret
pop
fcmove
popa
sarb
movsl
dec
cmp
pop
mov
cmpb
enter
daa
mov
and
out
popa
imul
lea
call
adc
inc
popf
popa
jecxz
imul
ljmp
in
insl
inc
insl
and
or
addr16
enter
cmc
mov
lods
pop
int
jno
add
daa
sbb
pop
inc
lds
xchg
imul
xlat
cmp
into
cmp
addr16
test
imul
mov
and
imul
mov
ljmp
test
add
or
in
mov
int3
cld
popa
addr16
int3
pop
les
mov
aam
sub
pop
pop
jmp
or
addr16
pop
and
lods
cmp
push
jmp
xlat
cmp
sub
popa
push
imul
fisttps
mov
addr16
pop
dec
popa
ja
mov
int3
pop
outsl
pop
jno
cmpsl
mov
mov
dec
enter
push
mov
imul
or
dec
mov
addr16
popa
mov
inc
push
movsl
cmp
pop
scas
ret
jno
addr16
mov
xchg
or
insl
insl
push
and
addr16
mov
mov
cmp
out
or
iret
cmp
into
fbld
xchg
imul
cmp
jmp
or
addr16
mov
out
or
and
mov
xlat
cmp
dec
mov
addr16
enter
cs
movl
addr16
mov
xchg
into
mov
decl
cmp
test
arpl
enter
push
mov
addl
ret
jno
or
dec
mov
pop
insl
movsl
inc
and
movsl
data16
jle
lods
push
movsl
cmp
pop
jbe
jno
cmpsl
mov
outsb
mov
mov
or
pop
dec
popa
push
mov
sub
scas
push
loope
movsl
call
addr16
arpl
pop
mov
imul
mov
decl
movsl
insb
insl
insl
arpl
mov
addr16
enter
cmp
push
pop
xor
add
mov
mov
mov
pop
sub
mov
call
add
mov
mov
stos
enter
jns
sbb
insl
movsl
jno
and
mov
addr16
pop
dec
popa
inc
mov
daa
pop
pop
addr16
cmpsl
mov
mov
scas
enter
mov
mov
leave
mov
xchg
and
addr16
mov
xchg
movsl
or
mov
ljmp
xchg
jecxz
leave
cmp
pop
shrl
mov
mov
and
or
addr16
outsb
pop
add
or
addr16
mov
pusha
sub
mov
test
dec
mov
add
pop
pop
andl
ret
sbb
lahf
pop
or
popa
mov
lock
lea
mov
dec
mov
add
sbb
movsl
pop
add
or
iret
and
or
xlat
cmp
into
arpl
xchg
imul
addr16
push
imul
cmp
and
arpl
jnp
jecxz
or
addr16
mov
mov
push
movsl
and
movsl
pop
mov
movsb
mov
popa
daa
mov
insl
and
popa
stos
mov
scas
pop
subl
mov
xchg
pop
test
jmp
push
cmp
pop
add
popa
jecxz
xor
mov
popa
mov
adc
movsl
push
popa
bound
sub
jb
insb
pop
dec
lods
popa
inc
mov
daa
mov
stos
cmpsl
popa
mov
addr16
outsb
sub
xchg
mov
popa
into
mov
repnz
mov
popa
leave
mov
shlb
mov
mov
add
or
sub
cmp
pop
insl
or
dec
addr16
int
in
lcall
std
mov
xchg
aad
popa
xor
out
or
or
test
fs
or
enter
mov
mov
addr16
enter
push
mov
mov
lret
imul
lea
and
pushf
arpl
loope
movsl
in
xchg
addr16
in
cmpsl
cld
popa
out
hlt
or
addr16
mov
cmp
pop
decl
popa
pop
mov
dec
mov
pop
andl
sub
outsl
imul
mov
pop
aas
int3
popa
push
mov
push
fadds
out
popa
lahf
mov
sub
xchg
jg
ret
or
stos
mov
cmp
pop
in
fbld
mov
out
mov
and
mov
addr16
mov
call
add
mov
mov
out
push
movsl
mov
or
sbb
pop
pop
ss
cmpsl
mov
push
sub
cmp
sub
mov
jle
ret
cmp
pop
stos
dec
imul
dec
mov
scas
xchg
xchg
ljmp
test
or
addr16
pop
xchg
sub
sbb
mov
jecxz
movsl
out
inc
inc
movsl
gs
movsl
and
xchg
imul
addr16
mov
mov
cmp
leave
fisubs
xchg
imul
sub
and
movsl
cmp
movsl
xor
add
dec
mov
imul
or
addr16
mov
dec
sub
sahf
and
iret
cmp
sub
or
iret
lods
popf
cmp
pop
pusha
add
mov
ret
mov
inc
lret
test
inc
lods
push
mov
in
mov
mov
push
or
addr16
mov
cwtl
sub
mov
mov
clc
push
or
addr16
pop
fsubs
or
or
sahf
insl
dec
loope
and
xchg
imul
repnz
sub
cmp
decl
mov
mov
mov
cmp
out
arpl
popa
sbb
into
mov
inc
mov
mov
mov
mov
orl
ret
mov
orl
jecxz
cmp
sbb
sub
roll
insb
lret
popa
lods
mov
es
daa
xor
mov
add
mov
cmp
mov
stos
dec
popa
mov
sub
push
add
mov
loop
popa
cli
mov
pop
ljmp
mov
lea
mov
or
adc
int3
mov
cmp
pop
out
popa
cs
sbb
pop
jmp
gs
inc
jge
mov
mov
dec
xchg
ljmp
popa
insl
fcomps
sbb
cmp
xlat
ljmp
cmp
in
pop
movsl
pop
jno
addr16
loope
and
xchg
imul
lea
pusha
jmp
pop
mov
and
popa
popf
mov
call
movsl
cmp
pop
in
xorl
sub
inc
movsl
in
movsb
stos
enter
add
or
pop
insl
mov
ja
mov
mov
int
and
mov
addr16
pop
popa
fnsave
movsb
out
popa
aad
movsl
sub
pop
imul
and
push
pop
cmp
jno
arpl
mov
or
or
pop
dec
popa
add
mov
lret
insl
inc
cmpsb
movsl
and
movsl
arpl
enter
add
mov
movsb
addr16
movsl
cmp
push
fs
xlat
cmp
push
jl
scas
xchg
imul
addr16
mov
sub
push
pop
lods
enter
add
addr16
mov
in
or
sub
and
addr16
stos
out
popa
ljmp
loope
insl
movsl
hlt
mov
int
int3
or
xlat
cmp
dec
les
xchg
imul
cmp
or
jno,pn
outsb
enter
daa
test
imul
cmp
or
addr16
pop
and
arpl
mov
movsl
cmp
pop
pop
dec
jno
addr16
or
dec
pop
insl
movsb
push
int
pop
and
or
or
addr16
mov
popa
pop
mov
pop
mov
cs
pop
out
inc
arpl
test
dec
mov
call
pop
mov
popa
scas
mov
dec
mov
xchg
or
dec
addr16
mov
insb
xlat
popa
mov
mov
ds
out
insl
xchg
and
mov
push
movsb
jmp
mov
outsb
movsl
call
cmp
pop
inc
jbe
cmpl
mov
ljmp
mov
and
cmpsb
popa
in
xchg
imul
addr16
int3
out
popa
addr16
cmp
out
adc
cs
cmp
outsb
xchg
mov
into
pop
sahf
or
addr16
xchg
pop
jecxz
insl
and
push
enter
add
loope
movsb
adcl
jecxz
movsl
movsb
ljmp
inc
movsb
dec
movsl
divb
lea
movsb
int
movsl
cmp
pop
into
dec
jno
addr16
enter
mov
xchg
outsb
enter
add
mov
mov
dec
pop
sub
enter
and
or
cmc
xchg
movsl
insb
movsb
insl
insl
inc
movsb
in
movsl
xor
sub
pop
insb
jno
addr16
mov
mov
push
pop
add
add
enter
sbb
push
xlat
cmp
call
imul
addr16
or
popa
dec
mov
cmp
lret
or
dec
loope
inc
and
xchg
imul
mov
push
movsl
int3
sbb
pop
addr16
and
popa
mov
cmp
pop
mov
dec
mov
mov
dec
enter
cmpl
jecxz
cltd
or
xlat
arpl
insl
nop
int
out
movsb
insl
movsl
push
jmp
movsb
int
cmp
insb
loope
lods
xchg
imul
cmpsl
mov
addr16
enter
leave
mov
or
rorl
addr16
mov
addr16
sub
movsb
mov
loope
and
xchg
imul
ljmp
lret
and
movsl
or
int
mov
lods
enter
sbb
addr16
adc
mov
mov
mov
pop
or
mov
jmp
add
mov
mov
add
pop
inc
popa
pop
mov
ret
pop
push
or
lods
idivb
lahf
insl
insl
gs
movsl
mov
mov
cmpsl
cmp
addr16
into
out
popa
jmp
xlat
cmp
add
mov
lret
in
into
or
mov
addr16
loopne
dec
push
movsl
cmp
clc
ficoml
or
lock
jno
mov
leave
mov
addr16
enter
fdivrs
add
shlb
cmpl
ret
xor
mov
mov
pop
lods
or
dec
stos
popa
lea
mov
pop
lods
mov
mov
fwait
mov
dec
or
dec
ljmp
cmp
pop
leave
push
popa
push
cmp
pop
and
insl
cmp
push
xchg
cmp
pop
in
or
in
mov
hlt
mov
inc
les
mov
jmp
pop
mov
popa
sub
leave
mov
add
popa
jecxz
rorl
sub
and
stos
cmp
mov
movsl
or
popa
inc
dec
popa
int
mov
mov
in
stos
popa
pop
mov
ret
popa
ficompl
mov
sub
mov
cmp
pop
test
popa
call
addr16
pop
subl
xchg
ljmp
jne
dec
sub
or
rolb
popa
pop
mov
inc
enter
movsl
mov
outsb
imul
cmp
pop
movsb
or
mov
jmp
pop
test
popa
pushf
mov
inc
mov
cmp
andl
or
pop
stos
popa
in
sbb
insl
movsl
cld
arpl
hlt
mov
pop
loop
out
movsl
cmp
pop
out
jno
sub
mov
addr16
pop
enter
movsl
mov
aaa
popa
mov
pop
imul
popa
bsr
pop
cmp
pop
ja
popa
outsl
mov
or
dec
leave
popa
cmpsl
mov
enter
inc
pop
scas
ret
popa
xchg
lret
lods
insl
xor
pop
insb
out
lods
mov
mull
mov
mov
sub
popa
enter
cmp
sub
jp
push
push
cmp
call
mov
dec
addr16
in
cmp
pop
or
popa
dec
mov
loope
insl
daa
mov
icebp
cs
leave
mov
sub
ror
popa
sub
mov
xor
popa
or
ret
sbb
and
push
or
addr16
pushf
add
adc
cmp
in
cmp
addr16
mov
or
addr16
mov
inc
into
popa
pop
mov
leave
mov
mov
inc
or
addr16
mov
or
cwtl
movsl
dec
sbb
call
pop
int3
clc
popa
inc
mov
enter
rolb
fsubs
mov
and
loope
xchg
imul
sub
adc
add
mov
cmp
inc
adc
xchg
imul
arpl
popa
jmp
xlat
cmp
test
popa
call
cmp
incl
inc
mov
mov
lods
insl
sub
movsl
push
pop
sub
push
dec
and
xlat
cmp
cmpsl
mov
mov
out
cmp
mov
mov
or
stos
mov
mov
cmp
jecxz
arpl
popa
xchg
xchg
sbb
inc
movsl
mov
mov
mov
out
pop
out
jno
addr16
mov
mov
ret
arpl
addr16
sti
cmp
mov
roll
mov
and
mov
inc
movsl
sub
jno
cmpsl
mov
mov
mov
pop
sub
mov
leave
pop
or
add
mov
mov
ret
enter
adc
daa
jno
popa
dec
pop
insl
and
int
popa
or
imul
addr16
out
popa
cs
cmp
mov
sub
pop
decl
push
mov
mov
cmp
add
mov
ret
cmp
addr16
stos
out
popa
ljmp
and
mov
push
movsl
cmp
pop
lcall
xchg
cmp
mov
cmpsl
enter
loop
mov
sub
cli
imul
cmp
mov
movsl
aaa
dec
push
movsb
mov
mov
arpl
mov
dec
enter
cmp
xor
jne
mov
cmp
int
mov
lods
enter
xor
cmp
pop
or
push
mov
mov
dec
enter
adc
cmp
pop
insl
add
addr16
cmp
mov
movsl
aaa
ljmp
insb
insl
mov
in
mov
push
movsl
cmp
cmpb
xchg
xchg
jmp
pop
dec
int
mov
frstor
dec
sub
mov
and
mov
cmp
push
cmp
enter
arpl
add
jecxz
sbb
sub
push
insb
or
imul
in
mov
or
movsl
je
lods
push
movsl
cmp
pop
dec
cmpsl
jno
outsb
mov
pop
movsl
sub
mov
mov
or
mov
call
test
adcl
addr16
stos
cmp
pop
ljmp
mov
cmp
les
fsubl
gs
insb
movsl
aam
and
mov
pop
addr16
outsb
pop
das
out
popa
pop
mov
imul
mov
add
pop
mov
ret
ja
or
outsl
pop
lret
sub
mov
push
mov
dec
cmpsl
popa
mov
mov
loopew
xchg
insl
push
and
xchg
popa
into
insl
jne
imul
movsl
cmp
pop
xchg
xorl
pop
sub
imul
dec
or
mov
mov
cs
test
enter
out
mov
enter
or
addr16
xchg
push
insl
cmp
mov
imul
sub
mov
cmp
pop
iret
int3
jno
addr16
enter
cs
push
push
es
xlat
cmp
sub
popa
imul
or
addr16
mov
arpl
addl
popa
push
mov
pop
lret
pop
insl
mov
movsl
lea
mov
or
scas
lahf
dec
mov
pop
mov
xchg
imul
cmp
out
xor
mov
cmp
imul
push
test
arpl
loope
movsl
arpl
jno
jecxz
pop
and
loope
mov
and
or
pop
enter
inc
and
or
repnz
mov
addr16
imul
push
push
shlb
mov
addr16
xchg
imul
inc
sub
enter
cmp
adc
or
sub
jae
popa
imul
dec
cmp
pop
in
push
popa
insb
mov
mov
pop
pop
mov
inc
mov
andl
xchg
popa
mov
jecxz
or
pop
dec
repz
mov
ret
mov
test
popa
call
sub
and
mov
xor
or
add
xchg
and
mov
ds
push
popa
bound
insb
mov
dec
in
or
jmp
popa
inc
mov
cmpsl
mov
cmp
push
push
popa
scas
xchg
imul
addr16
out
popa
sub
cmp
mov
mov
jecxz
or
andb
ljmp
movsl
and
movsl
mov
mov
insb
cmp
ljmp
mov
mov
cmp
out
fimull
xlat
cmp
dec
lret
xlat
cmp
sub
popa
push
cmp
jmp
cmp
shlb
mov
dec
or
dec
mov
movsl
divb
pop
insl
loope
cmp
and
addr16
lahf
lods
insl
mov
addr16
enter
add
mov
mov
mov
sbb
imul
mov
dec
mov
cmp
add
adcl
ljmp
jne
insl
stc
movsl
icebp
and
movsl
fisubl
or
or
xlat
cmp
in
jp
daa
addr16
mov
mov
cmp
scas
sbb
xlat
ds
dec
movsl
popa
jmp
cmp
ljmp
mov
arpl
cmp
ljmp
or
addr16
mov
icebp
and
movsb
loope
in
and
mov
cmp
insb
pop
std
lods
popa
cmc
mov
addr16
out
fisttpll
popa
aad
scas
or
addr16
pop
int
or
mov
popa
test
push
pop
in
call
or
addr16
mov
pop
leave
pop
sub
popa
push
das
or
addr16
mov
mov
mov
mov
sub
push
cmp
pop
dec
lods
popa
cmpsl
mov
daa
mov
mov
and
push
movsl
cmp
pop
xchg
add
mov
mov
mov
fiaddl
or
in
movsb
test
out
call
sbb
movsl
pop
mov
out
or
addr16
mov
mov
jno
rorl
popa
ds
sub
push
cmp
pop
push
lods
popa
push
mov
daa
mov
scas
dec
pop
cmpsl
cmpsb
popa
out
mov
pop
outsb
mov
scas
mov
xchg
imul
jmp
push
cmc
and
addr16
call
decb
xlat
cmp
xor
ret
mov
and
or
stos
movsl
pop
fmulp
popa
movsl
or
lahf
dec
movsl
and
mov
adc
mov
test
pop
inc
mov
or
addr16
mov
dec
fimull
shll
dec
cmp
jmp
mov
mov
or
popa
add
mov
push
movsl
cmp
pop
adc
sarl
lahf
dec
insl
mov
pop
or
arpl
lods
pop
dec
daa
popa
inc
mov
mov
test
popa
mov
cmp
pop
mov
imul
cmp
cmp
addr16
mov
sub
nop
mov
inc
movsl
call
pop
pop
popa
loopne
push
movsl
cmp
pop
clc
out
jno
or
mov
cmp
mov
incl
cmp
jecxz
mov
or
dec
insl
mov
in
mov
push
movsl
cmp
pop
and
mov
mov
cmp
addr16
add
mov
pop
adc
or
addr16
imul
adc
cmp
imul
sub
test
lods
or
addr16
mov
stc
addr16
icebp
mov
mov
rorl
or
addr16
mov
sub
sbb
or
arpl
mov
xor
push
and
movsl
mov
sub
and
in
mov
mov
int3
mov
xchg
mov
scas
mov
inc
imul
sub
dec
sub
shll
call
mov
dec
mov
cmp
dec
or
loope
insb
movsl
test
loope
pushf
and
xchg
imul
movsb
dec
mov
and
sub
or
ja
jmp
sub
les
add
pop
mov
or
sub
push
inc
stos
popa
aas
mov
lods
add
pop
insl
cmpsl
jno
addr16
mov
sub
popa
insb
mov
jg
int3
cmp
pop
addr16
popa
cmpsl
mov
fbld
into
out
popa
or
mov
pop
sub
popa
push
addr16
ss
orl
or
push
imul
pop
lea
or
addr16
pop
pop
stc
popa
cmpsl
mov
leave
mov
sub
popa
test
sub
and
call
xor
or
add
mov
insl
adc
cmp
sub
and
dec
pusha
popa
int3
xchg
imul
addr16
scas
out
popa
into
mov
cmp
test
imul
addr16
mov
mov
cmp
sbb
insl
and
popa
mov
cmp
pop
mov
jno
addr16
mov
mov
out
enter
cwtl
mov
sub
nop
dec
jno
mov
and
addr16
enter
clc
mov
or
lea
sub
insl
push
and
shlb
addr16
cmp
shlb
xchg
imul
imul
mov
call
pop
or
arpl
sub
imul
js
and
mov
xor
or
or
pop
cmp
pop
inc
jne
xchg
cmp
push
pop
popa
dec
mov
ds
sub
push
cmp
leave
mov
xchg
mov
mov
inc
mov
cmc
sub
mov
lret
lods
or
dec
and
lea
xor
or
popa
lods
mov
sbb
scas
cmp
pop
into
insb
popa
or
jl
or
pop
call
inc
or
addr16
mov
sub
stos
addr16
ljmp
test
mov
xchg
mov
lods
in
int3
movsl
cld
dec
cmp
mov
push
movsl
cmp
mov
call
out
mov
aam
imul
mov
ljmp
or
addr16
mov
mov
cmp
mov
movsl
jmp
loope
and
xchg
imul
insl
cmp
jecxz
movsl
addr16
push
movsl
cmp
pop
pop
lods
jno
addr16
mov
mov
xchg
pop
popa
inc
pop
sub
pop
push
into
popa
dec
mov
mov
mov
popa
scas
mov
mov
pop
xchg
sub
mov
lret
lods
or
dec
out
popa
lea
mov
pop
dec
iret
popa
mov
mov
ss
scas
mov
push
mov
jmp
outsb
or
addr16
jle
add
inc
mov
inc
mov
lret
or
dec
or
lea
int
mov
popa
mov
mov
xchg
addr16
out
mov
out
cmp
pop
imulb
into
mov
out
mov
dec
popa
sub
leave
mov
xor
or
add
adc
or
or
dec
pop
jno
popa
dec
mov
or
dec
cmp
pop
lea
or
addr16
pop
mov
mov
cltd
mov
dec
jmp
mov
mov
leave
mov
inc
fldenv
mov
sub
lret
andb
insl
and
mov
cmp
xchg
popa
xchg
imul
add
popa
dec
mov
cmp
mov
imul
mov
insl
arpl
int
arpl
jo
daa
push
movsl
cmp
mov
addr16
pop
jno,pn
outsb
mov
mov
or
pop
test
enter
push
mov
mov
addr16
pop
mov
mov
mov
mov
jae
insl
insl
and
xchg
movsl
enter
ret
lods
rolb
popa
mov
or
push
andb
cmp
cs
popa
dec
xchg
imul
addr16
jmp
sub
cmp
mov
arpl
insl
arpl
push
lock
sub
cmp
push
or
addr16
jns
movsl
movsl
loope
dec
movsl
rorb
sub
cmp
dec
fsubs
xchg
imul
xlat
cmp
cmp
and
popa
into
xchg
imul
inc
xor
jno
addr16
popa
sub
ret
mov
add
stos
cmp
xlat
cmp
andb
mov
int
insl
cmp
or
adc
addr16
enter
or
mov
addr16
enter
add
mov
mov
add
jae
jno
addr16
enter
imul
lea
movsb
int
movsl
inc
movsb
insb
jno
addr16
enter
jnp
inc
push
movsl
cmp
mov
addr16
enter
add
mov
mov
dec
pop
mov
inc
enter
pop
mov
stos
mov
mov
inc
movsl
insb
movsb
in
insl
inc
movsb
sub
stos
arpl
add
mov
mov
push
pop
mov
into
enter
xchg
mov
leave
mov
addr16
pop
call
mov
mov
ret
pop
fwait
dec
jno
addr16
insb
movsb
insl
insl
lret
movsb
outsb
insl
arpl
mov
cmp
pop
ret
addr16
addr16
pop
push
popa
sti
mov
out
mov
addr16
add
mov
xchg
ljmp
inc
push
movsl
cmp
mov
addr16
enter
add
lods
loopne
cmp
in
insl
push
movsb
sub
xor
xchg
imul
xlat
cmp
movl
mov
mov
cmp
mov
or
adc
popa
mov
push
mov
popa
stos
mov
aaa
movsl
push
loope
jp
dec
xchg
imul
xlat
cmp
cmp
addr16
mov
xchg
imul
xlat
cmp
test
popa
enter
arpl
popa
adcl
push
imul
repnz
insl
movsb
push
in
movsl
mov
or
xlat
cmp
in
mov
mov
mov
cmp
dec
cmp
inc
mov
jno
imul
movsb
or
pop
dec
jno
addr16
mov
cmp
pop
xchg
ret
jno
addr16
pop
stos
popa
ljmp
enter
inc
movsl
loop
lea
insl
cmp
sub
mov
mov
pop
pop
jno
addr16
mov
mov
mov
lret
add
enter
ret
push
movsl
cmp
mov
addr16
push
add
lock
jno
iret
cmpsl
shr
push
mov
movsl
int
or
insl
or
add
sbb
adc
cmp
lods
or
insl
jge
fs
jne
cld
outsb
lods
movsl
into
cmp
sub
mov
pop
sub
pop
push
imul
pop
bound
movsl
movsl
pop
jge
sbb
sub
push
inc
lods
mov
ret
mov
lea
adc
fldenv
xchg
cmp
add
in
xor
jno
lods
in
int3
cmc
pop
ds
movsl
ljmp
cwtl
movsb
int
push
sbb
cwtl
lds
cwtl
ds
mov
cwtl
sub
push
fisubrl
jmp
cwtl
cmp
movsl
xor
movsb
xor
push
popa
das
pop
or
movsl
js
sbb
jb
es
and
sbb
movsl
fsubrs
in
adc
jo
and
cmp
in
movsl
jle
inc
dec
jl
dec
push
mov
jmp
movsl
movsb
mov
or
pop
pop
lahf
pop
sub
mov
push
adc
mov
and
movsl
lods
cmc
daa
fstpt
mov
lods
cmp
int
movsl
pushf
sub
fildl
in
movsl
xchg
dec
scas
inc
pop
xchg
xchg
dec
sarb
lods
movsl
jns
loopne
in
push
movsl
inc
ds
fcomi
mov
lea
les
push
pop
gs
fcoml
and
mov
daa
lods
mov
pop
or
aaa
daa
imul
pop
cmp
ljmp
sub
cld
pop
pop
jg
cmp
mov
lods
mov
ds
dec
fs
arpl
gs
jne
insl
dec
sbb
lods
fs
insl
mov
movsl
mov
inc
insl
lea
test
or
mov
int
out
lds
or
cmp
xor
or
xor
adcl
fs
dec
pop
cmove
mov
movsb
mov
mov
mov
test
insl
mov
in
cld
in
int
pop
pinsrw
aam
daa
or
mov
pop
pop
ud0
mov
pop
mov
inc
pop
xor
mov
lahf
mov
xchg
jg
xchg
mov
fistpll
pop
movswl
mov
es
push
pop
clts
xor
mov
mov
jbe
dec
pop
cmovbe
mov
cmpsb
mov
mov
xchg
mov
out
in
int
pop
shufps
arpl
or
mov
or
add
mov
test
scas
mov
push
inc
mov
int
pop
pop
mov
cmp
lret
movsl
mov
sub
insl
shlb
sub
aam
xchg
call
mov
jbe
mov
std
int
aaa
out
mov
int
push
push
sub
xchg
mov
push
cld
int
cmpsb
scas
pop
mov
scas
out
push
ss
cmpsb
pop
sub
ja
lock
lock
scas
movsb
iret
insb
scas
push
out
mov
and
pop
daa
mov
das
rolb
and
push
data16
iret
mov
outsb
push
mov
push
mov
mov
sub
mov
dec
ss
xchg
addr16
adc
mov
push
arpl
push
data16
mov
ds
aaa
jg
cld
dec
and
adc
mov
mov
push
outsb
push
out
int3
jns
dec
push
fwait
out
int
push
and
and
add
sbbl
mov
dec
ss
pushf
push
addr16
frndint
mov
daa
je
fmuls
xchg
out
es
dec
mov
or
xor
scas
test
jg
pushf
mov
push
jne
xor
inc
arpl
fiadds
addr16
subl
xchg
jns
jns
in
sahf
sbb
aas
and
jmp
push
sbb
es
cld
mov
jle,pt
ljmp
mov
aaa
or
xchg
cmpsb
mov
sub
scas
push
xchg
push
movsl
int
shlb
test
outsb
and
repz
fs
push
and
dec
in
and
jge
cs
adc
cmpsb
mov
sub
jmp
ret
add
daa
and
adc
insl
mov
pop
sti
cmp
jecxz
or
xor
push
scas
add
pop
iret
int
and
das
insl
mov
cltd
sub
mov
add
add
mov
enter
roll
xor
popa
fisubl
or
addr16
mov
inc
mov
or
addr16
xchg
cmp
pop
pushf
xchg
popa
jle
cmp
addr16
mov
repz
imul
or
addr16
mov
fnstcw
or
pop
xor
cmp
aaa
pop
xchg
pop
popa
cmp
cli
mov
ds
lods
ljmp
insl
sub
or
lds
movsl
std
popa
or
cmc
or
addr16
push
and
jmp
cmp
pop
lea
or
cmp
pop
imul
mov
sub
lret
mov
mov
cmp
int
dec
in
out
mov
movsl
in
or
addr16
mov
out
popa
xchg
or
inc
cmp
pop
pop
sbb
in
lods
out
sbb
fs
jns
sub
mov
and
inc
jb
sarl
sbb
mov
dec
adcb
xchg
iret
sbb
jcxz
repz
icebp
and
cltd
cld
pusha
repz
pop
push
push
mov
mov
addr16
push
add
mov
in
sbb
cmp
imul
out
pop
add
aaa
sbb
cs
call
mov
push
aas
inc
adc
ljmp
mov
call
add
push
outsb
jb
imul
popa
jae
inc
add
shr
sub
lcall
mov
adc
or
test
movsb
imul
mov
cmp
aam
in
jecxz
sti
push
aaa
mov
push
inc
pop
imul
cmp
out
fwait
mov
adc
jno
mov
mov
repnz
inc
jb
arpl
mov
incb
or
rcrb
mov
dec
jecxz
jge
and
inc
out
dec
sbb
lods
dec
adc
xchg
repz
loope
neg
stos
adc
pop
mov
push
sbb
jae
hlt
lahf
mov
or
or
push
add
ss
jns
repnz
mov
pop
les
jge
xchg
cmp
mov
push
xchg
ret
adc
cmp
in
mov
push
pop
lea
and
mov
fmull
sbb
repnz
in
flds
lret
mov
xchg
mov
xor
pop
jmp
in
and
cmc
push
lods
lods
into
loope
insl
out
mov
dec
inc
mov
push
les
mov
arpl
int3
hlt
push
sub
and
fsubrp
mov
mov
xchg
dec
fdivs
sbb
in
mov
mov
xchg
mov
lahf
mov
in
xchg
addr16
mov
adc
rorl
sub
pop
add
ds
inc
mov
rcll
add
fsubrl
cli
mov
cmp
sbb
mov
push
scas
ja
in
adc
pop
in
inc
fisubrs
stos
popf
xor
lock
mov
movb
rep
jmp
roll
sub
dec
cmp
add
mov
jo
adc
stos
out
lods
aaa
fucomp
inc
aaa
mov
leave
movsl
sub
je
js
gs
shlb
dec
call
testb
xor
js
inc
jno
jg
pushf
mov
cmp
in
cld
lock
fstpl
and
sbb
add
mov
jb
fsubrs
stos
sub
arpl
jl
mov
testl
push
pushl
lea
jb
pusha
pushf
movw
push
pushl
ret
push
lock
std
std
mov
outsl
sbb
inc
sbb
ret
into
aas
mov
mov
pop
call
mov
mov
ja
in
push
sbb
pop
pop
rolb
shrl
adc
test
mov
mov
mov
nop
shr
xchg
push
stos
and
pusha
push
cmp
pop
dec
stos
push
in
mov
fisttps
xchg
pusha
jmp
cmp
clc
cmp
xor
mov
mov
inc
call
cmc
stc
cmp
pushf
pushf
call
cmp
cmc
cmc
neg
pushf
stc
stc
cmp
pop
jmp
pop
ret
sub
and
into
lret
xor
ret
cli
sub
in
fbld
sbb
dec
lret
mov
xchg
or
stos
mov
out
and
insb
fbstp
xor
mov
enter
mov
insl
sti
push
rorb
lock
pop
xlat
call
adc
xchg
dec
cmc
pop
adc
xchg
filds
leave
sbb
rcrb
lods
sbbb
xor
xchg
add
and
jne
btr
sets
sub
movzbl
movzbw
mov
pushf
mov
pusha
movb
lea
jmp
roll
fimuls
fsts
add
loopne
sbb
test
mov
jo
out
push
and
cmp
ret
inc
mov
sti
pop
les
adc
jmp
shlb
sbb
cmpsb
cwtl
cs
jo
fnstsw
xorb
repnz
andl
out
cmp
ficoms
mov
inc
sub
mov
dec
inc
repnz
xchg
ss
inc
jne
pop
adc
jl
adc
push
les
and
mov
fwait
pop
jmp
in
negl
xchg
xlat
scas
cmp
lret
stos
jb
sti
or
adc
and
adcl
adc
and
jmp
inc
mov
fadd
test
pop
or
bnd
or
lret
shr
lods
movsb
push
int3
cmp
popf
sub
jns
xchg
jb
lahf
jno
mov
outsl
xchg
cmp
mov
adc
popf
pop
xlat
pop
adc
xor
push
nop
ds
cmp
iret
jb
aaa
cs
cmp
fldenv
pop
xor
jmp
jae
or
int
push
insl
add
cs
out
inc
mov
mov
ficomps
jmp
jnp
mov
leave
xchg
data16
mov
out
jp
out
stos
fisubrl
shrb
add
rclb
sar
inc
aaa
jb
pop
aas
lock
shlb
inc
push
mov
out
js
sarl
and
sti
jnp
fldenv
xorl
cwtl
and
add
fcmovb
and
stos
inc
cltd
arpl
addr16
cmp
add
or
mov
data16
jns
out
xchg
cmc
out
xchg
pop
inc
in
popa
sub
jp
pusha
les
add
imul
gs
or
dec
or
js
sub
sti
mov
out
fistpll
aaa
sti
adc
push
jne
add
repnz
adc
add
add
xor
or
jle
and
push
ljmp
aam
imul
adc
xor
icebp
test
icebp
jge
out
lcall
insb
sarl
mov
cmp
or
int3
push
sbb
cltd
or
sti
jmp
ljmp
push
test
bt
push
add
movl
test
cmp
cmp
mov
cmc
call
xor
in
pusha
sub
shr
push
pusha
inc
jo
adc
inc
in
mov
enter
sub
sbb
sub
imul
jno
imul
jp
cmp
pop
out
xchg
ja
test
seto
jb
cmpsb
cmp
icebp
mov
pop
pop
adc
mov
cmp
pop
jb
jnp
jmp
xchg
cmp
movsb
xor
push
aam
fstpt
fstp
or
add
add
test
fs
jae
push
mov
shl
mov
bt
bsf
mov
pusha
bt
pusha
sub
add
jg
repnz
jg
jne
test
adc
mov
add
rcr
sub
inc
and
mov
cmc
push
cmp
sub
movb
movb
call
bswap
push
movzwl
pusha
lea
movzbw
mov
pushf
movb
lea
jp
call
call
xchg
pop
lea
mov
mov
push
mov
movsbw
bswap
movzbw
bswap
mov
setg
push
movzbw
mov
pushf
mov
jmp
test
lock
mov
sub
mov
sub
sub
and
scas
inc
jmp
xchg
mov
sub
lds
ret
and
dec
lock
jnp
sub
mov
inc
mov
push
das
testl
mov
sub
imul
jns
daa
or
aaa
add
mov
iret
pop
pushf
push
xchg
mov
insl
xorl
jecxz
mov
mov
sbb
inc
ret
cmp
sub
fmul
mov
subb
sub
lods
push
ret
shrl
mov
sbb
loop
or
jmp
or
push
pop
sub
int
inc
lods
pop
cmp
adc
es
and
movsl
mov
fimull
stc
inc
scas
or
ficomps
in
test
ljmp
dec
test
xchg
sub
dec
lods
jnp
sub
cld
or
sbb
jmp
cmp
fs
mov
addr16
xor
arpl
lods
pusha
pop
fdiv
aad
or
cmpsb
popf
mov
or
or
out
push
outsb
pop
ja
vmovapd
add
dec
sub
fstpl
mov
inc
add
add
movsl
push
lods
pop
inc
shrl
outsb
dec
add
sub
inc
jb
xchg
mov
adc
in
jg
sub
xchg
cld
sub
hlt
test
in
sub
jo
ret
lods
movsb
mov
mov
adcb
sub
push
imul
dec
sub
push
mov
fisttpl
pxor
int3
repz
jae
sub
mov
test
sub
daa
dec
and
mov
repnz
jns
lret
and
jno
cmp
sub
xor
mov
sub
pop
les
pop
sub
cmp
test
mov
repnz
cmp
nop
lret
xchg
dec
cmc
stos
jle
lahf
hlt
and
shlb
outsb
cmp
cmp
insb
or
fstpl
pop
jmp
mov
sub
sub
subb
loope
jle
mov
add
pop
out
sbb
outsb
or
jns
jae
stos
int3
cmp
popa
addr16
sub
das
jecxz
sub
mov
bt
imull
inc
mov
jae
aas
mov
push
aaa
and
mov
mov
in
bnd
shll
inc
push
add
push
and
pop
mov
out
and
sahf
test
xchg
adcl
icebp
ret
sub
fbstp
sub
mov
mov
adc
or
hlt
cmp
sbb
sub
fisubl
js
movsl
ret
sub
sti
es
sub
xor
int
je
jno
aas
ljmp
inc
cwtl
aam
jp
jge
push
and
sbbb
outsb
data16
inc
push
mov
inc
adc
test
sub
in
dec
sub
mov
sbb
dec
xor
jp
sub
mov
xchg
sub
dec
in
idivb
into
imul
cmc
in
mov
lahf
sub
int3
fidivs
gs
mov
or
ds
shlb
xchg
sub
sub
popa
movsb
pop
mov
mov
fldenv
sub
mov
mov
ss
jp
insb
pop
aad
sbb
aas
and
xchg
test
sub
pop
mov
add
adc
outsl
sub
dec
test
sbb
push
cmp
xchg
mov
push
cmp
sub
pop
sti
and
sub
jns
bound
adc
xor
add
sub
int
scas
lds
dec
lods
insb
in
cmp
fisttps
call
dec
or
out
rcrl
push
sbb
xor
jecxz
fldl
pop
loope
and
mov
in
add
int3
je
sub
jl
dec
inc
cld
gs
leave
mov
dec
sbb
add
and
cmpsb
je
imulb
fisttpl
adc
mov
mov
sub
adcb
or
dec
imul
sub
sbb
or
and
mov
sub
ss
dec
jmp
nop
out
notb
jge
insb
sub
int3
sub
lods
dec
cmp
les
pusha
inc
out
lahf
out
sub
lcall
std
divl
push
out
sub
mov
dec
sub
add
and
mov
adc
sub
xor
sub
mov
jae
jo
mov
inc
sub
pop
repnz
hlt
sub
lcall
mov
xchg
and
rcr
and
and
sarl
aam
jno
fsts
sub
aaa
popf
arpl
pop
loope
daa
jmp
add
sub
loop
int
pop
mov
dec
int3
insb
cli
sti
lods
and
pop
fwait
ss
jbe
cmp
cmp
arpl
rorb
jno
in
cltd
cmp
clc
rcl
mov
jle
push
insl
push
adc
lods
ret
into
pop
sub
push
clc
scas
mov
fsubrl
xchg
movsl
lret
int3
and
lods
movsl
and
decb
inc
lahf
pop
fsubs
jae
xchg
xchg
or
popa
or
cwtl
mov
scas
hlt
ljmp
gs
or
sub
or
mov
xor
push
ds
insl
xchg
jno
into
mov
faddl
aas
in
add
lods
das
in
pop
push
shr
pop
push
out
add
lods
pushl
mov
aaa
divl
pop
pop
pop
ljmp
and
dec
jp
xchg
xchg
in
dec
sbb
add
mov
push
lods
nop
cmpsl
insb
mov
enter
insl
mov
insl
mov
subl
pop
xchg
scas
dec
es
push
out
mov
lcall
aas
clc
sar
mov
pop
or
pushf
in
sbb
gs
bound
push
mov
push
call
push
ss
cmpsb
rcll
push
test
cld
out
sahf
mov
aas
mov
cmp
mov
jp
ljmp
rolb
cmp
lock
lea
sub
data16
push
push
test
xchg
sahf
and
lea
movsl
inc
imul
pop
scas
push
dec
or
inc
lds
scas
and
sbbb
mov
mov
pop
jnp
pop
clc
lea
scas
fsubrs
add
outsl
dec
cmp
scas
out
mov
push
push
and
in
add
mov
mov
scas
out
insl
fs
icebp
in
jmp
or
int
dec
lea
outsb
mov
in
fs
outsl
pop
aaa
ret
dec
data16
mov
jae
or
cmp
inc
mov
sub
jl
lods
mov
cmp
pop
push
sbb
andl
cmp
lods
mov
lods
fcoml
dec
daa
mov
popa
jb
jmp
cmp
movsl
iret
cmp
sub
repz
push
daa
push
mov
movsl
mov
or
addr16
xchg
and
in
jae
sbb
sub
in
in
out
in
lock
adc
pop
jmp
and
loope
jne
inc
jmp
sbb
lods
or
mov
insl
pop
and
sbb
lret
data16
movsb
out
ljmp
fldenv
pop
jl
int
sub
lret
push
cltd
mov
ljmp
push
pop
mov
popa
sarb
push
addr16
mov
xor
loop
lea
leave
pushf
mov
pop
add
and
gs
sub
mov
in
xor
movsb
mov
test
cmp
lds
jns
or
fisttps
insl
aaa
pusha
or
leave
mov
sub
es
lods
das
mov
fistps
adc
int3
dec
movsl
in
and
js
in
icebp
cmpsb
daa
rol
and
movsb
add
outsb
or
cmc
pop
xor
lret
mov
adc
in
push
addr16
inc
aad
dec
scas
pop
in
cmp
lret
mov
lods
in
stos
mov
mov
cli
and
xchg
lcall
enter
add
lods
or
addr16
inc
cmc
mov
cmp
stos
adc
movsl
push
cmp
pop
adc
mov
lods
lods
mov
scas
pop
cmp
bsr
or
inc
cmc
loope
sbb
out
out
popa
sub
or
mov
pop
adc
and
pop
xor
mov
popf
inc
and
insb
shrl
push
lea
jge
sbb
or
lds
mov
inc
ja
pop
push
push
sbb
xchg
das
mov
daa
push
cld
lret
sahf
cmc
fists
movsl
xchg
jecxz
xor
mov
sti
ds
pushf
xchg
fucomp
out
ss
in
mov
mov
cmpsl
mov
inc
loope
repz
test
and
loop
push
arpl
or
xor
nop
push
je
cmp
sub
xchg
aaa
dec
mov
faddl
insl
pop
daa
in
mov
and
test
es
in
fwait
jl
sbb
out
sbb
add
ja
pop
in
sahf
arpl
mov
movsl
lods
out
loop
cmc
out
in
cmp
pop
loop
push
mov
xor
or
jne
addr16
test
arpl
push
insl
pop
cli
in
xor
fldt
mov
les
cmpsl
fs
xlat
cmp
fildl
rcrb
sub
push
xchg
mov
inc
arpl
int3
das
lea
daa
cs
xor
dec
outsb
int3
lods
lret
movsb
dec
mov
fnstenv
push
push
and
sbb
in
sbb
movsl
dec
je
push
lods
dec
or
insl
stc
insl
sbb
out
push
push
add
fisttpll
pop
es
addr16
push
mov
out
ljmp
sub
pushf
cmp
popa
dec
and
cmpsl
push
add
lret
stos
dec
and
xor
pushf
sub
sub
push
sub
xchg
xchg
gs
dec
and
xor
in
cmpsl
dec
stc
pop
andb
decl
data16
jns
mov
sub
and
in
xchg
out
in
cmp
roll
jno
jae
mov
ret
cmpsl
and
lods
and
mov
aad
xor
pop
mov
push
dec
mov
fs
mov
addr16
int
inc
inc
daa
imul
mov
and
or
sahf
push
mov
push
dec
sbb
push
lcall
ret
push
push
add
push
das
aas
dec
inc
insb
out
dec
push
lea
dec
jae
sbb
jmp
int
push
movsl
lret
or
andl
movsl
or
sub
cmp
es
loop
arpl
test
inc
push
fldt
dec
jle,pt
push
ret
pop
mov
test
sahf
stos
sbb
lcall
or
sbb
fs
arpl
mov
loope
mov
mov
pop
les
cmp
mov
loop
cmpsl
and
lods
pop
inc
mov
add
testb
sub
scas
lahf
jecxz
or
xor
mov
in
ds
mov
orb
rcll
ja,pt
subl
dec
add
aas
xor
mov
pusha
and
lret
pushf
aam
xor
mov
rorl
jmp
cmpsl
pop
shrl
xchg
aaa
sub
xor
cltd
in
arpl
and
mov
sbb
out
pop
fdivr
popa
push
out
xchg
data16
xlat
add
pushf
test
push
test
add
push
aad
pop
ret
scas
push
subb
cmpsb
das
scas
ss
aaa
stc
andl
ss
ret
jae
ljmp
sbb
insl
jge
lret
dec
inc
subb
in
addr16
mov
lea
aaa
add
or
push
hlt
insl
test
daa
int3
movsb
je
insl
jb
and
cwtl
cmp
or
ja
and
fbstp
fdivr
inc
jecxz
cmpsl
int3
dec
test
movsb
rcl
xor
mov
bound
jbe
mov
inc
gs
pusha
add
leave
out
lods
cld
fldz
sahf
push
inc
pop
xor
mov
add
arpl
pop
loop
mov
adc
dec
xchg
stos
test
fs
in
out
les
add
and
or
cmpsb
add
mov
jne
es
dec
dec
pop
lods
das
cmp
in
js
fwait
mov
mov
mov
and
sarl
and
jmp
mov
jns
mov
int3
mov
addr16
xlat
sub
pop
and
subb
fsub
into
lea
daa
sti
pop
push
jb
jns,pn
in
scas
fs
in
pop
call
add
aam
xchg
sbb
pop
aaa
inc
scas
push
mov
pop
push
loop
lea
pop
rolb
cmp
cmpsl
cmpsb
mov
inc
push
push
pop
and
dec
cwtl
push
jb
push
cmp
jbe
sub
gs
in
je
nop
imul
push
mov
es
ss
inc
mov
jp
arpl
sbb
lcall
mov
cmpsl
call
lods
out
scas
jb
mov
in
inc
xchg
lods
pop
shlb
in
or
ja
xchg
lods
push
jmp
sahf
mov
inc
movl
dec
addb
inc
mov
lods
xor
js
cmc
test
sbb
out
fsubl
movsl
mov
mov
loope
mov
aas
in
rorb
or
repz
icebp
insb
mov
pop
xor
mov
dec
das
cmpsb
lea
pop
fs
xchg
jg
inc
out
mov
lahf
adc
mov
jbe
lods
loop
imul
dec
sbb
outsb
imul
std
test
push
mov
xchg
mov
popf
push
insl
mov
in
or
insl
xchg
or
dec
insb
and
outsl
mov
daa
push
or
lds
movsl
lea
jecxz
xor
jg
out
leave
adc
jmp
in
xchg
shlb
aaa
lcall
dec
mov
gs
imul
int3
or
in
push
dec
shrl
mov
push
arpl
int3
daa
lods
in
push
xlat
sub
incl
mov
inc
jecxz
mov
sbb
outsb
andl
outsl
dec
rorl
dec
or
and
int
or
jmp
test
xchg
ds
mov
loop
adc
push
mov
mov
roll
inc
xchg
mov
pop
in
jmp
mov
or
int
lea
aaa
jg
add
or
test
insl
adc
clc
shll
movsl
stos
push
call
into
inc
pop
scas
pop
xchg
dec
out
push
cmp
mov
xchg
insl
mov
ret
setp
lea
insl
ja
sub
test
addr16
ss
ds
mov
sub
jge
or
cmpsb
pop
lods
sub
mov
jecxz
add
in
in
xchg
push
das
xorb
insl
out
pop
insl
out
pop
lods
in
ljmp
dec
mov
sub
push
gs
xchg
sub
out
xor
pop
xchg
daa
mov
inc
movsl
shll
popa
fndisi(8087
pop
lods
and
movsl
jl
imul
int
cld
push
out
in
pop
call
out
into
out
dec
dec
roll
push
movsl
dec
and
fs
or
ret
ret
insb
adc
and
push
pop
or
imulb
imul
stos
into
sub
xor
dec
fcomi
cmp
in
out
in
and
loope
bound
mov
sub
fimuls
xchg
movsl
push
pop
adc
mov
rcrb
mov
shll
mov
add
pop
push
cmp
addr16
cmpsl
int3
int3
das
inc
aas
jmp
push
out
inc
lcall
xchg
in
fisttpll
add
std
fisubrs
sub
mov
lods
or
out
mov
xchg
stc
sbb
or
ret
test
lds
inc
cld
or
adc
sti
lea
in
xchg
inc
bnd
subl
jecxz
stos
xchg
push
out
pop
imul
mov
cmp
repnz
aas
sub
in
add
in
addr16
int
int3
addr16
ljmp
mov
push
or
mov
das
cwtl
mov
xor
or
stc
in
gs
mov
mov
xor
mov
cmp
push
shll
inc
and
rcrl
popa
jo
xor
xchg
xor
lret
mov
push
add
insl
mov
movsl
push
xor
mov
stos
fildl
iret
push
stos
push
dec
mov
push
jmp
popf
cmp
sub
stos
lods
sbb
imul
cmp
stos
dec
sub
lods
rclb
lea
in
dec
adc
push
cmpsl
add
in
loop
movsl
ja
and
test
mov
popa
and
int3
pop
dec
jecxz
lock
jecxz
sub
inc
mov
dec
xor
add
jmp
mov
lods
nop
or
addr16
xor
loopne
inc
mov
sbb
arpl
add
or
pop
enter
or
loopne
adc
and
mov
scas
push
test
ret
clc
ljmp
push
fwait
decl
dec
sub
daa
stos
pop
mov
in
imul
stos
insl
cwtl
daa
mov
roll
or
jle
dec
mov
cmp
repnz
addb
pop
hlt
add
inc
push
test
xrelease
xchg
pop
ds
or
or
xor
add
pop
gs
mov
decb
in
call
push
in
sub
enter
jge
pop
out
lahf
mov
out
xchg
inc
or
pop
mov
std
push
push
ret
fisttpll
js
jne
pop
ljmp
data16
stos
mov
push
xchg
outsb
mov
adc
data16
mov
sbb
lds
ret
xchg
out
or
mov
dec
int
mov
cmpsl
cmpsl
js
popf
xchg
lret
loop
out
push
ret
cli
in
inc
ljmp
or
sbb
pop
pop
xchg
sbb
lods
xor
pop
pop
insb
mov
cwtl
push
mov
or
push
scas
jmp
loop
scas
out
stc
sti
clc
repz
rcrb
scas
lods
lahf
sbb
cmc
insb
icebp
roll
pop
mov
pop
cmp
mov
mov
fs
and
ljmp
xlat
xchg
mov
in
xor
jle
pop
fdivrl
mov
xor
xchg
dec
fxch
dec
mov
sub
pusha
push
int
fisubrl
out
xchg
out
pop
mov
out
rorb
mov
pushf
std
dec
fwait
sbb
cmp
imul
movsb
shl
cmp
fwait
aaa
cmpsl
stc
mov
dec
sub
mov
xor
and
out
adc
jno
sub
add
dec
sub
in
jno
xor
arpl
mov
cmp
pop
xchg
imul
xchg
mov
add
pop
fs
movsl
cmpsl
cmp
pop
arpl
jno
push
or
in
mov
pop
or
int3
loopne
or
lea
test
imul
mov
jmp
sub
gs
cmp
push
push
xor
enter
mov
mov
adc
jecxz
lcall
sub
iret
decl
icebp
pop
or
or
lds
int
insl
js
insl
dec
sub
push
je
sbb
pop
mov
insl
lods
pop
add
cmpl
out
leave
mov
and
in
out
leave
cld
inc
out
mov
pushf
dec
cmp
xor
xor
fnstcw
xchg
gs
mov
fildll
sahf
dec
imul
or
in
lods
ss
add
ja
and
pop
aaa
push
pop
pop
sbb
addw
into
movsl
pop
push
add
les
out
xchg
mov
or
jbe
mov
pop
fdivs
mov
push
popl
cld
cli
in
inc
xchg
or
movsl
scas
xchg
insl
pop
imul
insb
pop
or
sub
es
pop
or
jge
or
test
add
gs
pop
jbe
mov
mov
xchg
jns
adc
push
imul
repnz
popa
xchg
leave
or
cs
sub
sub
mov
rcrb
pop
inc
cs
mov
mov
jge
lahf
or
outsl
je
inc
inc
es
cmc
iret
das
jmp
gs
sahf
mov
pop
jnp
push
push
dec
push
mov
imul
mov
push
mov
out
pop
test
dec
mov
mov
and
push
cmp
xchg
dec
bswap
pop
loope
sub
ds
enter
or
mov
and
or
mov
and
sbb
sub
push
lods
movsl
mov
popf
xchg
in
in
sub
aad
and
sub
adc
fs
je
inc
pop
push
lods
movsb
mov
pushf
xchg
in
in
sub
aam
pop
aaa
sub
packuswb
sub
dec
cmpsl
lahf
mov
scas
xchg
out
imull
iret
cs
push
push
outsb
data16
dec
addr16
mov
imull
out
or
shlb
mov
fdivrl
scas
mov
push
or
or
mov
fwait
or
or
or
pop
push
pop
ds
add
pop
xchg
fs
rclb
fwait
xchg
sbb
xor
lods
cwtl
dec
in
cmp
lods
xchg
addr16
scas
in
xchg
lods
enter
aas
xor
outsb
inc
xor
out
xor
int3
ljmp
addr16
sbb
and
sub
lea
cmp
cmpsl
jmp
inc
arpl
dec
sbb
xchg
sub
mov
dec
fwait
cmp
mov
add
lods
shrl
inc
jge
stos
inc
dec
scas
xor
adc
push
paddusw
pop
sbb
mov
lods
das
fisttpl
push
cs
dec
data16
fsubrl
mov
insl
xchg
push
fmul
movsb
mov
popa
jmp
cli
ss
push
insb
lods
outsb
pop
fisubrs
add
test
add
imul
test
popa
test
mov
add
or
xchg
xchg
adc
adc
mov
dec
addr16
cmpsb
pop
imull
cmpsb
sub
pop
adc
loopne
and
inc
cmp
xor
or
not
and
ds
add
xchg
lret
sahf
push
pop
sbb
sub
mov
lea
lods
push
insb
push
xor
push
into
xchg
aam
and
out
push
dec
aad
out
pop
sbb
vprotd
dec
jbe
enter
pop
mov
aas
negb
cmovbe
mov
mov
push
xchg
insb
mov
add
dec
push
repz
sbb
lds
mov
dec
lret
aaa
mov
push
jge
shrl
jecxz
divb
mov
mov
xor
push
filds
sbb
mov
std
jno
push
sahf
push
fs
jae
das
subl
sub
mov
jp
fdivl
ja
std
pop
cld
in
dec
mov
xchg
cmp
and
push
cmpsb
inc
aaa
push
sub
test
scas
xchg
ficompl
pop
push
and
push
mov
cs
iret
xchg
loope
mov
rorb
mov
out
sbb
add
push
or
insb
dec
in
dec
repz
ja
cmp
push
std
std
inc
fldcw
sete
inc
inc
xchg
dec
jl
sarb
ret
sbb
inc
mov
subb
mov
adc
push
mov
data16
mov
popa
mov
mov
jno
jns
test
inc
mov
cmp
dec
pop
in
nop
pop
addl
mov
jp
aaa
add
sub
sbb
cmp
sbb
das
je
jno
pop
inc
adcb
outsb
jge
mov
xchg
mov
das
xchg
push
outsb
fsubrl
adc
cmpsl
adc
cld
sub
out
jecxz
jne
xchg
inc
cmp
jl
sarb
xchg
xor
pop
sahf
popf
jmp
xchg
ds
xchg
mov
stc
sbb
adc
loop
data16
jae
out
sbb
jno
pop
adc
lret
xor
addr16
pop
pop
sahf
iret
les
in
jl
add
test
lahf
jbe
adc
mov
mov
outsl
insb
mov
pop
mov
mov
push
cmp
aaa
lods
jbe
push
test
add
faddl
xor
lds
mov
stc
sbb
aam
lods
sub
mov
add
jb
lret
mov
stc
ja
into
ds
test
test
fdivrp
scas
outsl
iret
push
sub
push
dec
loope
mov
push
outsb
sub
cmp
or
and
adc
xchg
mov
outsb
jo
fs
stc
fmull
enter
adc
outsb
ljmp
adc
mov
cmc
sbb
push
xchg
jb
or
mov
mov
sub
test
adc
out
cmp
ja
sbb
fmulp
push
ss
jnp
mov
mov
mov
imul
xor
sbb
sub
scas
xchg
pop
incl
pop
add
out
inc
mov
push
push
inc
mov
imulb
inc
bound
cmp
mov
pop
imul
jp
push
jno
jnp
fmul
je
inc
pop
ljmp
pop
movsl
sub
jno
add
dec
sbb
cltd
pop
data16
lcall
or
mov
xor
jmp
mov
addr16
cmp
sub
jno
pop
aad
daa
inc
mov
leave
je
lea
mov
cmpsb
lret
in
sbbb
xchg
sub
andl
sbb
sub
int3
cs
mov
sahf
je
cmp
out
push
pcmpgtd
stc
xor
mov
or
or
sub
inc
jl
fistpll
and
out
outsl
lea
or
or
popf
jge
imulb
mov
insl
dec
mov
pusha
lods
out
dec
clc
sub
add
outsb
cmpsl
sahf
cmpb
and
out
mov
outsl
and
test
cs
inc
jmp
aaa
inc
cmpsb
and
mov
ds
push
out
xor
outsb
pop
push
stos
int
mov
xchg
in
jmp
xchg
repz
mov
cs
and
jecxz
cmpsl
xlat
aam
pop
adcl
xor
adc
imul
inc
ja
add
mov
mov
or
data16
jmp
ficoms
sub
daa
repz
cs
orw
sub
cmovno
ds
repz
xchg
sbb
sbb
xor
jge
mov
add
in
gs
or
addr16
into
xchg
pop
lds
fisubrs
dec
jmp
push
push
insl
movsl
int3
mov
push
das
inc
fdivrl
mov
fdivs
cmc
jl
int
fists
out
movsl
push
lea
mov
or
notl
inc
and
out
jmp
push
in
mov
scas
adc
std
pop
lret
pop
daa
or
in
orl
dec
dec
push
or
scas
ret
in
enter
pusha
movsl
out
les
add
mov
and
imul
ret
pop
mov
test
or
add
push
inc
gs
mov
in
lods
or
test
imul
mov
outsb
mov
out
xchg
addr16
daa
pop
int3
in
popa
mov
insb
mov
int
popa
lea
popa
or
loope
ljmp
cmpl
mov
cmpsl
lods
jno
pop
stos
jmp
cmp
pop
dec
pop
popa
insb
mov
dec
imul
mov
jmp
insb
call
call
or
addr16
popa
lret
xchg
and
test
leave
movsl
lods
dec
or
push
pop
and
and
ficoms
daa
lea
cmp
int3
imul
cmp
cmp
mov
cmp
cmp
sub
in
mov
rcr
fs
mov
sub
or
sub
jns
dec
inc
sub
mov
cltd
xchg
jmp
shrl
xor
add
js
dec
inc
sub
mov
cwtl
nop
call
shrb
sub
cmp
jae
inc
jnp
push
dec
mov
mov
fwait
repz
sti
sub
cmp
or
sub
jp
dec
inc
sub
mov
lcall
ret
sarb
fildl
push
sub
push
pop
push
addl
mov
dec
adc
shrl
dec
in
cmp
pop
decb
inc
repnz
push
int
xchg
or
mov
cmp
gs
mov
push
das
dec
test
or
movsb
xor
xchg
pop
fsub
movsl
pop
and
xor
cmp
in
jns
pop
lods
and
cmpsl
shlb
lods
pop
leave
in
sub
cli
popa
push
add
nop
daa
das
fs
in
sub
data16
push
mov
xorl
adc
subl
add
sub
sbb
cmpsl
insl
insb
aam
cld
inc
jge
into
out
faddl
mov
or
cmpsl
jg
in
push
insl
mov
lea
daa
addr16
add
jae
scas
push
dec
in
test
or
call
and
dec
pop
stos
fsubs
lods
pop
loope
jno
jecxz
out
mov
pop
movsl
test
imul
call
into
mov
jge
es
push
inc
or
xor
mov
push
fidivs
insl
outsb
or
xor
in
inc
insl
mov
cltd
dec
and
scas
sub
xor
cld
and
scas
outsb
cmpsl
loop
jbe
rcll
xor
pushw
xchg
mulb
mov
sarl
add
sbb
mov
and
pushf
sahf
enter
out
lods
sub
imul
das
int3
adc
fsubl
mov
cld
mov
push
pop
dec
sub
adc
into
add
pop
outsl
inc
mov
push
sarb
xchg
shll
dec
mov
xchg
outsb
mov
andl
loope
cmp
mov
loope
push
aaa
push
cld
xor
pop
loopw
aam
jg
stos
cmpsl
sub
sbb
xchg
push
add
inc
add
pop
sbb
pop
push
inc
insb
jbe
popa
roll
mov
jmp
adc
sub
popf
popf
pusha
imul
in
or
daa
mov
das
and
in
add
push
pop
jge
add
or
lods
or
fs
aad
mov
lods
daa
push
test
sub
adc
mov
ret
push
xchg
aaa
xchg
pop
dec
outsl
rcl
mov
call
xchg
pop
inc
or
daa
cmp
mov
subl
cmp
jae
sbbl
fstps
dec
xchg
mov
and
ret
dec
fwait
ja
mov
imul
adc
popaw
xchg
inc
add
test
hlt
aam
mov
iret
mov
loope
or
mov
dec
sbb
xchg
fdivl
push
sarb
dec
mov
js
or
inc
in
ljmp
jp
dec
push
outsb
in
fsubp
scas
jge
jno
subb
pop
scas
das
pop
adc
jl
mov
xchg
dec
movsl
std
push
mov
sub
and
test
sub
pushf
lcall
mov
stos
or
jns
jbe
lahf
daa
add
test
loopne
mov
pop
out
adc
push
jns
xor
mov
xchg
add
mov
push
push
jae
fucomp
mov
lods
aaa
sbb
cmp
out
sbb
sbb
mov
arpl
pop
mov
pop
insb
rcrl
mov
das
bound
pop
mov
pop
inc
or
push
mov
lods
nop
push
test
jbe
push
clc
aad
je
lret
mov
add
mov
xor
or
xlat
jmp
ja
inc
xor
mov
mov
notl
je
mov
aas
push
in
sbb
or
xchg
stos
jb
inc
pop
mov
mov
mov
cmp
jg,pt
les
test
inc
xchg
sbb
adc
mov
insb
fiadds
mov
xchg
insb
ja
jge
fs
inc
or
pop
insb
stc
mov
cld
push
fs
add
leave
mov
out
popa
cltd
aas
adc
push
xchg
sarl
push
or
lret
scas
dec
mov
push
adc
jb
and
or
mov
sar
dec
add
dec
scas
pop
out
mov
push
cmpsl
xchg
stc
fcmove
loope
das
stos
sbb
fsubl
out
pop
sbb
sbb
fwait
jle
sbb
cmp
xchg
push
inc
orb
pop
jns
outsl
cmpsl
and
jae
popf
pop
aaa
push
mov
jb
int3
cmp
les
jl
test
sub
adc
or
pusha
sbb
xlat
mov
inc
pop
decb
ja
push
ds
mov
push
pop
push
sti
inc
xchg
mov
jns
push
cmpsb
mov
and
add
adc
inc
lahf
cmp
lahf
cld
dec
and
test
jae
or
inc
sub
outsb
movsb
jle
mov
sub
in
in
adc
lods
rclb
or
pop
cmp
shl
nop
xorl
push
out
leave
mov
inc
mov
dec
es
lods
cmp
mov
cmpsb
mov
lret
imul
adc
jg
mov
pop
dec
push
insb
sub
cs
imul
jnp
das
mov
or
aaa
insl
cmpsl
jo
cld
and
daa
cs
pop
stos
imul
outsl
insl
test
loopnew
cmpsl
push
movsl
stos
daa
sbb
movsb
mov
andb
movsb
and
daa
in
or
insl
push
popf
call
out
ljmp
lea
inc
lahf
out
push
sub
sub
movsl
jg
add
jg
or
out
mov
addb
pusha
aas
or
inc
ss
fsubrp
mov
sub
cmpsl
inc
movsl
inc
ja
pop
jle
insl
dec
movsl
pop
imull
pop
push
push
pushl
fs
gs
adc
in
gs
add
es
addr16
outsb
cmp
or
insl
es
lret
add
cmc
pop
xchg
xor
inc
xchg
ret
ds
sbb
jbe
in
add
je
out
dec
ja
mov
movsl
or
sbb
gs
cmp
pop
sahf
xchg
mov
cmpsb
mov
inc
dec
popa
jbe
jle
data16
mov
outsb
push
mov
jmp
into
push
daa
jno
ret
cmp
stos
add
pop
scas
sbb
nop
out
imul
inc
fstl
sub
cmp
cmp
mov
and
add
xor
mull
cmp
pop
jg
popa
mov
lahf
or
addr16
mov
outsl
ja
pop
mov
popa
jno
xchg
iret
lretw
mov
jl
adc
push
sbb
xor
cmpl
push
test
lret
dec
jae
pop
push
jne
lds
push
fstpl
push
insl
dec
mov
ljmp
in
push
adc
dec
or
stos
inc
jo
movsl
out
addr16
jns
mov
or
in
in
add
dec
test
out
out
inc
pop
out
es
dec
cmpsb
jmp
mov
ljmp
inc
mov
outsb
enter
xchg
jo
in
jnp
mov
fsubrs
mov
gs
je
cwtl
ds
test
mov
ja
fucom
cmp
cwtl
xchg
push
mov
and
movsb
mov
mov
scas
das
fidivrl
aaa
lods
aas
mov
xchg
scas
lods
loop
fadds
mov
or
movsb
inc
inc
in
jnp
dec
inc
ss
lret
mov
inc
cmc
or
inc
and
jb
iret
fs
lea
cltd
ds
lret
aad
outsb
pop
dec
jmp
scas
in
movsl
pop
das
jecxz
push
ds
insl
dec
xchg
out
adc
push
jg
pop
push
scas
fdivr
in
adc
adc
daa
mov
mov
or
addr16
mov
fs
scas
push
push
gs
imul
dec
or
iret
test
or
mov
movsl
or
in
pop
out
dec
enter
pop
call
pop
mov
inc
xchg
xchg
inc
jne
int3
lcall
xchg
push
mov
jae
pushf
dec
js
lods
outsb
xor
inc
pop
push
lods
movsl
movsl
pop
outsb
inc
loop
int3
inc
gs
pop
sub
cld
jmp
mov
xchg
je
push
adc
mov
lea
bnd
out
mov
adc
or
ss
loopne
std
mov
stos
dec
insb
addr16
dec
pop
adc
lds
repz
enter
es
sub
test
add
daa
inc
xorb
jg
mov
mov
repz
cmp
stc
std
dec
mov
fs
adc
xchg
xchg
cltd
in
dec
pop
mov
lret
sbb
sub
test
ljmp
mov
loop
cltd
mov
fcomps
pop
je
adc
mov
sub
add
or
mov
pushl
stos
mov
add
loop
inc
sbb
out
xchg
ds
pop
mov
xchg
ficomps
jns
popa
and
jg
sbb
jo
sahf
imul
push
dec
test
dec
sahf
aaa
inc
dec
push
push
out
outsl
xchg
loope
mov
xchg
rcll
nop
add
or
mov
mov
mov
rcr
or
mov
xor
das
lcall
push
fcompl
cltd
out
ljmp
inc
in
int3
mov
and
out
nop
rorl
lcall
das
in
hlt
pushf
xor
lods
inc
cmp
addl
sub
mov
ljmp
dec
pop
in
popa
int
sub
insb
lods
mov
cmpsl
popa
xchg
mov
mov
popa
imul
gs
cmp
push
mov
lods
addr16
mov
outsb
popa
mov
mov
sub
popa
push
mov
and
add
inc
mov
sub
lret
cmp
sub
insb
cmp
or
int
cmpsb
xchg
cmpsl
push
dec
movsb
push
int3
lds
and
daa
enter
xor
or
cmp
lret
cmp
out
push
dec
popa
mov
mov
dec
mov
mov
jecxz
sub
pop
stos
ljmp
cmp
in
sub
insb
mov
mov
call
or
out
fimuls
loop
aad
adc
and
xchg
cld
pop
sub
xor
cmp
sbb
movsb
in
mov
lods
pushf
cmp
pop
mov
dec
sub
mov
daa
movsb
or
or
test
data16
insb
out
out
mov
xchg
movsb
sub
mov
mov
loope
inc
or
dec
sbb
sub
mov
xchg
sbb
das
sub
mov
les
push
inc
mov
dec
testl
mov
imul
lret
adc
push
mov
xor
sub
loopne
jae
pop
or
push
js
imul
sbb
daa
dec
sub
cs
addr16
mov
fcoml
or
sub
mov
daa
mov
mov
test
in
sub
adc
scas
dec
jb
xchg
das
xchg
jae
mov
push
push
mov
lods
orl
adc
pop
sarb
xchg
fisttpl
mov
xor
dec
cmp
push
mov
enter
mov
clc
mov
push
xor
inc
daa
and
and
in
dec
jecxz
ret
xor
mov
sbb
mov
dec
xor
cs
cwtl
bound
push
sub
mov
lret
fldt
and
loopne
and
mov
sub
call
and
lea
js
push
push
mov
fdiv
sbb
jl
in
fnstenv
xchg
inc
mov
add
loopne
test
inc
dec
jnp
mov
cmp
nop
aad
xor
sbb
pop
loop
sub
or
sbb
mov
cmp
pop
mov
ja
lods
nop
and
in
dec
dec
daa
nop
sbb
or
push
and
jns
cltd
int
sbb
test
cmpsl
or
jnp
pop
push
stc
int
enter
daa
and
mov
mov
xchg
or
and
or
fwait
js
stos
inc
pop
mov
dec
sbbb
stos
lea
addr16
cmpsl
sub
mov
cli
sub
in
fdivs
cwtl
mov
lods
pop
mov
leave
sarl
enter
js
dec
repnz
cli
dec
addr16
jge
inc
call
xor
xchg
mov
xchg
or
dec
enter
push
inc
pop
dec
or
add
fcoms
inc
jo
dec
ja
call
jae
test
rcrb
fucomi
inc
out
andl
xor
xor
mov
clc
xor
or
mov
rorb
in
pop
pop
test
xor
mov
bound
rolb
push
call
mov
inc
or
mov
and
mov
xor
mov
sti
bswap
add
nop
add
jecxz
xor
js
mov
fdivrs
pop
stos
loop
cmp
imul
loope
dec
dec
fisttpl
dec
fdivl
rorl
mov
or
inc
insl
sub
aam
shrl
mov
push
fs
insb
loopne
insl
shlb
xchg
sbb
adc
mov
sub
push
clc
mov
std
arpl
dec
xor
adc
loope,pn
mov
lods
insb
cwtl
xchg
sbb
ret
scas
mov
jecxz
lods
movsl
or
mov
dec
call
mov
loopne
call
or
push
adc
mov
lds
adc
sbb
insb
insl
cmp
fs
cwtl
jecxz
rolb
add
jae
enter
jecxz
mov
or
or
test
out
imul
mov
cmpsl
fidivrs
mov
sub
stos
cmp
mov
nop
adc
leave
xchg
mov
movsl
in
add
dec
enter
mov
adc
stc
test
mov
dec
mov
dec
sbb
mov
jl
cmp
dec
cld
insl
imul
pop
jno
jne
cmp
sub
xor
lret
xchg
fsubrs
or
pushf
insb
mov
aaa
jecxz
call
pop
insl
cmpsl
or
sbb
rcrl
ljmp
push
jae
xchg
sbb
enter
int3
aaa
std
sub
arpl
pop
mov
out
sub
rclb
push
or
or
in
mov
push
dec
rorb
mov
mov
repz
int
out
inc
sub
cmp
out
test
cmc
or
cltd
sub
sbb
lods
sub
jmp
fwait
inc
call
cmp
in
lock
fwait
and
pop
lods
jns
fsubs
addr16
jae
leave
xor
stos
mov
mov
mov
stos
jp
ret
jcxz
std
outsb
mov
push
cld
sbb
adc
mov
test
or
std
cmp
inc
and
or
in
lods
in
fisttpl
dec
pop
loope
lods
test
fadds
out
xchg
and
adc
imul
addl
enter
sbb
stc
mov
dec
sbb
push
pop
mov
inc
sub
or
int
cmp
push
mov
lcall
sub
mov
lods
push
repz
dec
and
pop
pop
pop
dec
daa
inc
and
loopne
sub
inc
test
push
mov
fadds
out
dec
mov
dec
mov
scas
cmp
mov
xchg
mov
or
loopne
cs
xor
sbbl
pop
mov
pop
or
and
or
aaa
sbb
jp
inc
sub
fdivs
inc
or
sbb
mov
xchg
and
push
or
adc
dec
add
push
loopne
adc
pushf
addr16
enter
insb
dec
pop
call
push
loopne
pop
sbb
mov
jae
or
sbb
or
sbb
insl
mov
aaa
pop
pop
sub
call
adc
cmp
mov
jns
ljmp
fistpl
ror
xchg
xor
shlb
sbb
mov
fwait
cmp
push
inc
mov
xor
add
pop
gs
sub
scas
mov
sub
mov
ret
push
gs
enter
or
jmp
inc
xor
sbb
push
mov
lock
cwtl
mov
sub
lea
pop
mov
inc
mov
in
or
or
adc
xchg
or
and
or
sbb
stos
call
jbe
and
scas
add
jge
enter
out
adc
xchg
clc
loop
adc
in
or
mov
nop
movsb
jecxz
cmp
or
scas
mov
mov
add
imul
int3
popf
pop
sbb
test
loop
sbb
cmp
mov
mov
mov
add
ljmp
ret
mov
jns
fidivl
dec
fldl
adc
mov
fs
jnp
cmp
xchg
je
dec
mov
mov
pop
imul
xor
jns
cs
test
rcrb
adc
or
mov
mov
imul
add
repnz
and
inc
addb
test
test
mov
stos
stos
xor
jo
mov
cmp
test
push
jae
enter
xor
or
js
gs
repz
push
mov
cwtl
nop
ljmp
mov
call
dec
in
imul
insl
adc
push
push
dec
je
dec
fucompp
jae
or
lods
xchg
or
adc
add
inc
ja
push
xchg
sub
cmpsl
and
sub
sub
pop
adc
lret
aaa
xchg
jge
and
mov
cmp
in
aad
fisubrl
jl
fwait
dec
mov
xor
in
gs
popa
out
imul
sub
xor
inc
inc
daa
pushf
sub
cmp
int3
inc
outsb
scas
and
fisubl
dec
ret
incl
mov
fs
data16
or
add
or
mov
jo
divb
int
orb
dec
stos
cmpsl
mov
sti
mov
stos
out
jnp
jo
call
jne
fisttpl
sbb
jecxz
cld
or
dec
sub
imul
or
sbb
push
sbb
xlat
mov
jmp
push
inc
mov
cmpsl
pop
rolb
mov
jb
dec
dec
xchg
mov
pop
add
and
dec
sub
mov
xchg
or
dec
fildl
lret
sub
test
lea
jecxz
mov
add
loopne
bound
fisubl
xchg
pop
or
inc
sub
mov
push
loopne
add
sub
or
lods
or
push
mov
sbb
inc
out
sub
push
mov
pop
dec
daa
popa
or
sbb
jnp
out
insl
jecxz
mov
add
shrb
dec
stos
mov
xor
mov
es
clc
mov
sub
cmp
inc
fldt
arpl
bound
adc
outsl
cli
pop
lods
inc
dec
xor
clc
out
int3
or
scas
sub
inc
fldt
mov
cmp
push
sub
or
jle
lods
or
or
mov
push
in
push
dec
test
sbb
xchg
inc
iret
dec
or
xchg
mov
inc
addl
jge
sub
adc
or
stos
bound
dec
cltd
dec
call
and
and
rclb
pop
sub
and
in
insb
sahf
in
lods
ficompl
lret
jge
in
sub
xorl
mov
insl
pusha
or
loopne
je
mov
and
cmp
addr16
outsb
inc
out
dec
daa
sbbb
arpl
cmp
nop
lods
add
xchg
dec
sub
push
push
aas
int
int
mov
dec
addr16
mov
out
repnz
xor
adc
pop
lods
test
call
cmp
push
dec
push
or
push
nop
insl
and
or
add
cmpsl
sbb
dec
sbb
sbb
orl
std
and
out
add
out
jnp
jnp
mov
nop
mov
call
and
mov
sub
out
xchg
mov
call
enter
popf
and
shll
mov
mov
cwtl
cltd
inc
aas
jae
imul
fiaddl
enter
jecxz
shlb
mov
mov
mov
pop
mov
dec
jae
or
and
and
cwtl
mov
and
push
imul
mov
ret
lahf
fdivl
fs
dec
int
push
ljmp
add
daa
gs
push
imull
xlat
je
subb
pop
pop
cmp
and
fmul
ja
mov
push
ja
push
aaa
and
jp
daa
mov
sub
test
adc
mov
dec
push
adc
or
bound
cmp
mov
mov
inc
stos
sub
shll
push
sarb
and
ret
ljmp
and
sub
andl
data16
cmpsb
xchg
sub
and
mov
pop
or
ljmp
mov
jl
dec
in
sub
rclb
mov
int3
clc
cmp
pop
sbb
xchg
sub
mov
add
xchg
stc
pop
jns
dec
cmp
out
leave
pop
push
sbb
sbb
out
mov
rolb
fsubrp
or
adc
push
cltd
mov
shr
pop
enter
test
movsl
xor
cmp
test
popa
dec
jb
push
ljmp
sbb
in
daa
mov
and
mov
mov
xchg
call
cmp
pop
push
leave
sub
mov
in
dec
dec
test
mov
or
gs
or
clc
pusha
lret
lods
shlb
cwtl
stos
cmp
jmp
cld
mov
stos
lret
or
mov
add
jne
fucomi
inc
and
cwtl
insb
mov
arpl
jae
mov
insb
cwtl
mov
dec
out
or
gs
ficompl
gs
jmp
fdivrs
pushf
loop
dec
mov
push
cli
test
faddl
push
sub
pop
and
or
pop
dec
push
sti
out
jae
xchg
orl
add
bound
fsubs
or
jle
rorb
sarb
cltd
dec
pop
js
repz
jnp
movsb
or
ljmp
mov
cmp
shlb
add
loopne
fistl
loope
insb
cli
xchg
andb
nop
sub
jmp
push
and
dec
addr16
lea
jnp
sub
xor
mov
xor
inc
repz
cmp
or
test
lock
jmp
adc
cmp
pop
mov
fs
fisubrl
mov
and
aaa
mov
outsb
mov
sub
xchg
dec
nop
inc
jnp
fildl
cmp
lods
enter
jno
sbb
mov
call
mov
adc
or
cwtl
nop
addr16
jmp
dec
scas
xchg
fadds
and
add
in
dec
pop
jp
ret
psrlw
call
insl
clc
lret
pop
cmp
loopne
fists
inc
push
and
loop
cld
xchg
push
inc
sub
add
sbb
xorl
dec
pop
xor
mov
mov
pop
mov
ja
and
arpl
dec
movsb
insl
dec
lods
stos
sub
ret
add
leave
jecxz
call
cmp
imul
mov
and
loopne
cmpsb
roll
dec
add
sti
xlat
dec
and
xchg
inc
insb
out
mov
mov
and
imul
pop
insb
xor
ret
xor
dec
imul
inc
mov
xor
inc
jl
pop
push
sub
leave
arpl
arpl
xchg
jecxz
jae
cwtl
dec
mov
cmp
mov
cmp
push
mov
stos
mov
sub
lods
movsb
jl
lret
and
arpl
lret
mov
enter
aaa
cltd
cmp
dec
sub
mov
dec
or
test
loopne
cli
inc
sbb
sub
daa
adc
or
fistl
mov
in
mov
or
dec
in
jle
aaa
dec
cmpsl
or
and
sub
pop
ret
mov
dec
outsb
mov
jb
loopne
or
push
mov
cmp
mov
movsb
pop
imul
jecxz
add
jge
mov
sbb
int
dec
xchg
push
arpl
xor
cmp
test
arpl
test
orl
sbb
push
cmp
aad
test
push
adc
mov
or
enter
daa
mov
jbe
out
imul
adcb
ss
mov
loopne
ljmp
int
pusha
mov
or
sub
inc
dec
sbb
movsl
lods
mov
lret
adc
or
fldt
sbb
lock
into
dec
xchg
daa
dec
shr
ljmp
das
enter
pop
lcall
call
adc
xchg
test
or
out
mov
addr16
stos
add
add
mov
jae
pop
arpl
add
cwtl
mov
xchg
pop
leave
cmp
out
inc
sti
mov
andl
call
mov
movsb
pushf
movsb
arpl
dec
mov
inc
sbb
mov
mov
popa
repz
test
adc
push
mov
enter
sbbl
inc
add
mov
adc
add
fldt
cmp
aad
sbb
mov
and
dec
sub
cmp
mov
imul
insl
dec
fcomps
cmp
lods
mov
stos
mov
call
mov
decb
jnp
mov
ret
jno
fcmovnbe
out
pop
mov
loopne
pop
repz
jle
cmp
dec
push
dec
jge
jp
sbb
or
jnp
ret
std
push
ret
int3
dec
stos
jno
inc
or
xor
mov
sub
stc
pop
dec
int3
xchg
je
pusha
into
jno
gs
jae
jae
add
enter
pop
jne
out
or
pop
push
lock
mov
xor
cmp
and
sbb
stos
insb
or
sbb
ds
lahf
inc
pop
stc
cmpsl
jecxz
dec
enter
sub
xor
fsubr
lret
jae
mov
bound
xor
sbb
into
xchg
dec
push
cmp
ret
mov
shr
sbb
mov
stos
test
mov
daa
mov
lahf
pop
fldt
mov
gs
and
xor
movsb
add
jp
mov
scas
shr
sbbb
lahf
fisttps
nop
cmp
mov
in
mov
scas
arpl
dec
aaa
jae
fs
fstpt
inc
insl
mov
mov
insl
lea
sbb
dec
stos
sbb
mov
pop
dec
repnz
into
sbb
pop
cmc
push
and
fdivrs
int
push
xlat
mov
cwtl
push
adc
fstpt
xchg
mov
cltd
test
sub
push
mov
lock
mov
out
fwait
push
pop
scas
ret
mov
mov
test
jae
in
add
inc
push
shr
in
enter
dec
mov
out
or
sub
loopne
push
dec
sub
clc
stos
cmp
push
sub
cvtps2pd
pop
movsb
insb
mov
lods
or
dec
mov
cmp
push
or
jo
sbb
inc
nop
sub
mov
jnp
pop
subb
and
insb
cmpsl
or
sbb
lods
stos
mov
pop
fsubrs
nop
pop
ja
mov
outsb
adc
ret
jnp
stos
jae
ret
and
dec
mov
stos
mov
sbb
or
and
imul
dec
daa
stos
mov
loopne
and
mov
xchg
xor
mov
jecxz
ljmp
xchg
adc
subb
xchg
adc
or
cmp
jae
dec
inc
test
mov
inc
lods
daa
inc
push
push
mov
mov
sbb
lea
adc
lea
inc
pop
imul
push
and
push
rcl
adc
sahf
ret
add
mov
enter
jae
loopne
cmp
lret
pop
leave
stos
pop
sbb
cmp
jae
into
cmpb
jmp
pop
jnp
clc
ljmp
jp
dec
mov
mov
cmp
jnp
sub
fdivs
mov
and
and
cwtl
scas
int
mov
xchg
xchg
repz
loopne,pt
xchg
inc
mov
nop
jle
dec
push
xor
pop
clc
mov
sub
insb
repz
dec
lret
and
fmull
or
popf
add
push
jmp
in
and
xor
jp
add
in
arpl
fisubl
leave
mov
scas
cli
in
or
or
mov
shrl
rolb
aaa
and
and
repz
repnz
mov
fstp
jmp
xchg
sub
push
adc
ljmp
adc
fcoms
mov
xchg
jae
cmp
sub
jl
leave
inc
lock
js
ret
or
sbb
fcomps
pop
lret
xchg
dec
cmp
out
or
dec
jne
cmp
push
ret
rorb
nop
mov
or
fcom
arpl
addr16
dec
inc
int
dec
rcll
loopne
adc
add
or
push
mov
bound
addr16
gs
mov
cs
pop
js
jno
cmpsl
mov
ret
xchg
sub
or
les
inc
dec
push
mov
pop
sub
lret
xor
cmpsl
jl
cmp
inc
push
insb
mov
dec
lea
mov
or
mov
stos
mov
pusha
lea
enter
xchg
std
pop
xlat
leave
ds
cmc
out
xchg
aaa
dec
xchg
mov
or
adc
iret
inc
adc
dec
xor
xor
out
popf
ret
mov
int3
push
test
xchg
or
xor
decb
xor
xchg
sub
mov
pop
mov
js
adc
rep
clc
stos
leave
fcmovnb
cmp
dec
ljmp
out
adc
dec
nop
stos
and
or
jne
jb
lods
mov
in
pop
push
cltd
and
mov
lods
sbb
jecxz
pop
scas
and
add
lock
andl
xchg
mov
inc
adc
mov
add
cs
jnp
dec
out
jbe
out
pushl
popf
lcall
insb
into
stos
add
orl
xchg
or
test
nop
cmp
and
sub
pavgb
sub
mov
mov
mov
xchg
stos
add
enter
loope
cmp
jno
mov
nop
lock
fildl
lret
mov
sub
mov
repz
push
orb
test
cmovnp
mov
cli
mov
pop
jecxz
fwait
ljmp
cmp
fisttpl
lea
cli
xchg
xor
inc
sub
sub
mov
fdivl
test
sub
fnstenv
xchg
arpl
sub
call
cld
push
mov
xor
jl
mov
or
int3
fadds
push
mov
xchg
mov
arpl
jl
sbbl
push
add
mov
popf
ja
out
cmpsb
push
mov
test
cmpsl
push
inc
out
lods
inc
cwtl
repz
dec
mov
jno
xor
sub
add
xchg
sub
push
movsb
stos
inc
or
sub
lock
loop
or
pop
ljmp
lods
dec
call
sub
bound
clc
sub
or
cli
nop
mov
enter
enter
sar
inc
cmp
sbb
test
mov
loopne
xchg
popa
sbb
lcall
jp
mov
sub
imul
sarl
test
test
mov
mov
out
lcall
cmp
cld
insl
push
xchg
lock
leave
loopne
sar
dec
aaa
jb
dec
xor
cs
lret
dec
jne
gs
lret
pop
jmp
xor
outsb
out
dec
add
js
loop
mov
add
mov
les
adc
push
addl
loopne
sub
xlat
mov
dec
arpl
insl
mov
xorb
push
sbb
dec
and
rol
add
sbb
insl
fdivs
mov
jmp
sub
sub
test
xchg
repnz
rorb
int
sbb
leave
and
xor
mov
and
ret
stos
fisttpll
int
add
arpl
jae
fisubrs
xor
js
push
pop
insl
mov
and
xor
dec
mov
adc
pop
stos
or
std
sub
mov
cmpsl
iret
das
cltd
nop
inc
rclb
rorb
or
fistl
lret
int3
leave
and
or
test
cmp
dec
mov
fldenv
push
mov
loopne
mov
lock
sbb
orl
stc
fsubs
dec
push
ja
jge
cmp
xor
into
sub
cwtl
xor
sbb
lea
arpl
inc
sbb
es
das
stc
popf
push
or
inc
ljmp
nop
push
daa
gs
sarb
inc
push
mov
cwtl
xchg
pop
data16
stos
sahf
daa
aad
dec
sbb
xchg
sbb
xchg
call
mov
lock
xchg
mov
cs
daa
mov
mov
pop
daa
push
mov
dec
mov
inc
shlb
sti
and
mov
test
enter
ljmp
mov
and
mov
movsb
sub
shrb
lods
movsl
outsb
int3
in
imul
out
arpl
pop
cwtl
push
mov
inc
je
jns
rclb
xchg
int
outsb
daa
mov
int
xchg
xor
mov
add
insl
xor
or
mov
js
mov
dec
scas
pop
or
orb
fdivrs
fistpl
nop
in
scas
dec
mov
in
cmp
adc
clc
sub
mov
or
xchg
lea
sub
aaa
lods
test
mov
xchg
jae
daa
into
pop
pop
je
pop
jmp
loop
jge
ret
mov
push
das
test
push
cmp
mov
arpl
sub
jmp
dec
out
ror
test
or
ss
sbb
pusha
or
sbb
adc
or
dec
int3
dec
sub
ret
dec
mov
push
scas
mov
and
push
xor
mov
or
stos
and
iret
jecxz
test
in
mov
cltd
lods
call
sbb
fsubs
mov
push
lods
aas
out
dec
leave
jno
xchg
repz
sub
add
cs
mov
mov
push
ret
push
in
pop
dec
adc
mov
jb
xchg
adc
adc
ja
cwtl
loop
push
iret
call
mov
jne
mov
test
mov
andl
inc
jmp
cmp
sub
xlat
and
mov
xchg
mov
ja
jp
inc
lret
cbtw
sbb
jmp
pop
rcrl
mov
xrelease
cwtl
cld
jno
imul
leave
dec
insl
cmp
es
gs
movsbl
cs
mov
shr
sbb
mov
or
fimull
fadds
imul
ret
xor
bound
mov
adc
adc
sub
mov
dec
xor
into
shr
add
std
imul
ljmp
clc
imul
lods
mov
and
add
int
xchg
jecxz
shll
xchg
adc
popa
and
push
mov
leave
cmp
std
cmpsl
and
mov
sbb
jo,pn
dec
shr
mov
jnp
cmp
xchg
dec
out
pop
clc
sbb
arpl
pop
add
sub
clc
fdivrs
sub
mov
out
xchg
jae
lods
dec
dec
xor
sub
clc
test
mov
cmp
lea
in
push
imul
in
stos
mov
test
mov
or
xlat
aaa
sbb
xadd
add
loopne
pusha
int
nop
imul
mov
push
lea
dec
lea
mov
loopne
in
or
mov
mov
sub
xor
add
es
sbb
add
js
decb
rorl
or
dec
or
arpl
pop
dec
shrb
xlat
into
add
mov
jne
and
lahf
sub
rorb
xchg
fidivrs
push
mov
cmp
mov
sub
inc
sbb
jae
mov
lods
or
ljmp
lock
fidivrl
test
mov
dec
cmp
cli
pop
ja
push
mov
xlat
std
mov
push
lods
scas
adcl
jge
pop
xchg
lock
dec
mov
push
loope,pt
and
sub
mov
mov
ja
addr16
int
sar
jl
xor
dec
mov
adc
mov
bound
dec
dec
outsl
cmp
mov
out
push
inc
sbb
dec
insl
xchg
xor
and
adc
lods
dec
stos
adc
int
inc
jmp
loopne
dec
mov
lock
dec
nop
roll
outsl
or
mov
sub
mov
inc
or
sbb
dec
jmp
inc
cld
cmp
add
cmp
jle
int3
imul
push
add
shrl
ja
and
mov
bound
add
ret
add
push
add
or
sahf
and
mov
int
cwtl
fcmovb
out
imul
add
repz
addr16
xor
fidivl
imul
add
or
push
cmp
rorl
int
cwtl
fiaddl
arpl
ret
out
imul
add
xchg
jae
adc
cltd
xchg
or
sub
in
outsb
dec
xor
or
dec
jne
mov
cmp
xchg
lods
leave
sub
orl
push
scas
xchg
dec
sbb
push
cmpsb
lret
stos
loop
sub
mov
adc
daa
shlb
pop
dec
out
in
xor
mov
stos
push
pop
int
cmp
xchg
fdivl
mov
mov
add
cmp
push
aaa
mov
xor
loopne
fdivrs
mov
add
mov
inc
ljmp
or
addr16
notl
into
hlt
call
add
push
xor
daa
cmpsl
lock
add
rcrb
sbb
or
repnz
and
shrb
dec
sub
fsubrs
sub
sub
push
inc
mov
enter
jae
or
ret
sbb
push
daa
addr16
lods
mov
sub
dec
sub
or
test
lods
arpl
cmp
movsl
inc
repz
ret
popa
clc
cmp
cli
out
addl
faddl
mov
xor
sub
mov
stos
mov
out
ja
out
rcrl
orl
sub
mov
inc
jbe
lods
fisubrs
cmp
fimull
inc
out
lods
fstpl
mov
int3
xlat
mov
xchg
mov
sbbl
adc
push
dec
cmp
push
mov
ja
cmp
ret
pop
cs
mov
sarl
xorl
testl
mov
insb
sub
aaa
loop
sbbl
bound
or
inc
and
jnp
insl
adc
xchg
or
xor
stos
sub
and
cwtl
mov
mov
cmp
push
in
test
xor
push
mov
enter
enter
mov
dec
daa
adc
xchg
std
imul
xor
in
mov
mov
arpl
xchg
popa
and
adc
rorl
lods
sti
mov
decl
out
lods
popa
stos
mov
inc
sub
inc
call
jae
inc
mov
scas
and
pop
lcall
sub
push
fistl
ret
in
add
sbb
mov
mov
call
sbbb
xchg
stc
cmp
mov
cs
mov
ret
inc
add
xchg
or
jmp
inc
lds
sub
mov
bound
pop
std
pop
jns
bound
dec
sub
jl
adc
mov
add
ret
xlat
out
pop
lea
aad
or
pop
and
ljmp
repnz
cmpb
cli
dec
stc
lods
push
cmpsl
cmp
cmpsl
jb
sub
push
push
jbe
push
add
cmp
xlat
mov
enter
outsb
test
sbb
sbb
or
dec
mov
mov
out
pop
orb
std
into
inc
pop
lcall
mov
cmpsl
dec
shrl
xor
sub
movl
nop
push
cmpsl
sbbl
inc
clc
imul
xlat
imul
incb
jl
xchg
lahf
xchg
push
dec
and
insl
hlt
shrl
and
or
cmp
pop
and
je
out
sti
negl
adc
xlat
mov
push
in
test
mov
leave
enter
rorb
dec
xor
cmp
mov
loopne
sub
js
adc
out
add
insl
xor
adc
enter
mov
loopne
scas
lret
jnp,pn
inc
add
insb
mov
lods
mov
push
add
or
lods
sub
fs
dec
cltd
inc
push
lret
adc
jo
adc
int3
shl
sbb
dec
cltd
enter
or
out
xchg
in
jne
sub
or
imul
and
lcall
or
or
or
or
or
enter
push
int
shrb
push
inc
or
lret
dec
shll
imul
push
stos
push
add
mov
in
lock
ja
and
enter
mov
mov
out
mov
pop
in
and
nop
mov
test
jns
scas
push
loopne
mov
test
call
dec
jb
inc
cmp
dec
lods
stos
xchg
dec
sub
push
xchg
scas
add
into
jl
imul
loop
xchg
test
lret
mov
push
and
jge
dec
bound
inc
cmp
and
push
ljmp
push
stos
and
loop
xlat
addb
adc
and
mov
jae
sub
push
dec
gs
pop
cmp
mov
inc
insl
pop
repnz
ret
dec
fcoml
push
dec
pop
repz
inc
or
dec
lods
mov
sub
andl
mov
lds
js
ljmp
ret
sarb
mov
dec
stos
mov
sbb
push
mov
scas
fdivrl
stos
stos
pop
loopne
bound
xchg
sub
sub
jae
lret
jae
xor
pop
into
mov
sbb
push
lret
and
sub
lock
stos
mov
inc
mov
insl
lret
lods
push
data16
jmp
and
fdivs
fldt
cli
cld
or
dec
dec
repnz
or
jo
mov
push
iret
repz
mov
fisubrl
rclb
cld
jge
lea
mov
sub
into
repnz
fmull
test
mov
fxch
lea
int
jo
out
pushf
je
lea
lret
lea
int
enter
mov
jge
xchg
lea
inc
movsl
sub
shlb
rorl
sub
mov
stos
mov
cmp
cld
sub
fs
push
pop
insb
out
dec
mov
cltd
inc
jae
push
mov
out
or
jp
push
insl
addr16
pop
jge
fwait
or
clc
mov
sub
mov
pop
mov
loopne
or
mov
outsb
dec
push
mov
cltd
cmp
ljmp
or
or
std
fbld
fdivrs
fcomi
or
dec
lahf
dec
mov
push
jb
add
mov
notl
imul
enter
sbbb
mov
scas
add
mov
mov
lea
sub
dec
dec
leave
jle
mov
xchg
fimull
lea
gs
insl
int
mov
mov
imul
sub
mov
outsb
xorl
mov
sbb
je
pop
ljmp
imul
ret
xchg
sub
lods
inc
and
loopne
scas
jbe
popf
fisubrs
sub
or
mov
dec
outsb
cmp
arpl
cmp
mov
call
inc
xchg
sbb
or
mov
sarl
lahf
ja
iret
sub
in
dec
add
push
aaa
add
mov
mov
and
call
repnz
or
ljmp
es
lods
out
ret
popa
jnp
jno
jo
pop
xchg
stos
dec
sahf
xlat
mov
fsubs
and
and
in
sub
arpl
jnp
fisubrs
dec
inc
out
loopne
out
popa
stos
les
cmpsb
mov
push
sub
out
xor
dec
cmp
in
mov
lds
loopne
dec
rcll
adc
in
sub
aas
cmp
xchg
push
dec
gs
pop
mov
cli
rorb
stos
stos
sub
jb
loope
popa
mov
insl
lods
dec
mov
dec
xchg
inc
dec
mov
and
lock
xchg
mov
fsub
outsb
aaa
fisubrs
sub
jb
cs
inc
cs
mov
loopne
jecxz
out
xor
cmp
pop
xchg
mov
xor
jmp
mov
imul
mov
ds
mov
cmp
xlat
int3
push
test
shll
gs
test
inc
in
push
mov
out
jle
lcall
cmp
adc
insl
ja
or
sahf
or
or
xor
pop
cs
aaa
or
xchg
mov
inc
dec
push
xchg
mov
movb
add
cmpl
pop
clc
leave
arpl
sub
pop
arpl
xchg
mov
dec
inc
lods
jl
dec
inc
mov
stos
dec
cwtl
pop
repz
inc
inc
lods
dec
xor
jo
dec
inc
int3
pop
flds
mov
jle
add
iret
cld
push
stos
mov
ret
rorb
push
mov
mov
mov
push
ja
insb
fildl
rorl
cmp
mov
adc
out
xchg
fsub
sub
loopne
mov
ja
test
mov
pop
in
jmp
pop
push
test
push
popf
jnp
insb
mov
repnz
inc
or
mov
dec
cmp
ret
xchg
jae
mov
mov
mov
or
pop
clc
sbbb
lods
stos
mov
stos
movsl
mov
addr16
testl
cmp
mov
sub
daa
sti
dec
sti
add
jmp
or
gs
dec
mov
lods
fdivrs
sub
lock
pop
and
in
push
sub
andl
popf
lcall
inc
fstpl
movl
call
sbb
jne
dec
gs
push
inc
subb
cmovge
mov
add
push
arpl
mov
lret
add
cmpb
xchg
lret
mov
mov
fs
pop
mov
lea
jecxz
sbb
adc
pop
call
pop
cmp
sbb
popf
ret
mov
push
jbe
in
xchg
mov
leave
mov
cmp
arpl
dec
or
add
or
dec
jnp
shlb
mov
jb
insl
xchg
std
jbe
movsb
insl
insb
jle
jbe
ljmp
mov
int
insl
or
pop
dec
add
cmp
mov
sub
nop
enter
outsl
mov
jb
sahf
in
lods
lock
add
lods
mov
out
repnz
iret
aad
add
mov
inc
sbb
mov
sar
call
mov
xor
push
mov
pop
inc
lods
or
sub
stos
mov
cmp
dec
in
rolb
scas
fsubrs
in
lods
mov
rcll
or
sbb
or
add
sbb
icebp
xchg
mov
int3
insl
adc
adc
add
into
movsb
mov
xor
in
xchg
inc
loop
push
dec
out
mov
push
pop
test
add
sti
jnp
imul
int3
call
lods
testl
inc
xchg
mov
inc
or
inc
lods
xorb
sbb
out
out
lods
cmp
inc
add
lods
mov
mov
mov
cmpsl
fsubs
xorb
dec
dec
or
std
xor
sub
arpl
in
fadds
inc
std
push
js
xor
outsb
addr16
out
jno
and
or
sub
fs
dec
jbe
push
cmp
xchg
in
popa
jae
mov
into
mov
cmp
js
addl
pusha
dec
sub
xchg
hlt
jb
outsb
and
out
dec
das
into
xchg
lret
cmp
jmp
pop
mov
add
out
push
mov
dec
ljmp
and
pop
ljmp
inc
ret
rolb
insl
dec
in
inc
nop
sub
fistpl
and
xchg
mov
mov
inc
and
mov
mov
sbb
addb
push
or
pusha
lea
adc
sub
dec
dec
nop
adc
shlb
pop
scas
add
sub
add
mov
cld
and
push
test
mov
call
cwtl
sub
jne
test
and
mov
cmp
or
loopne
insb
sbb
imul
dec
xlat
mov
enter
loop
inc
pop
and
mov
pop
shlb
mov
jmp
pop
inc
push
popf
dec
xor
arpl
fmull
sti
insl
fs
stos
cmp
fcmovnbe
outsb
and
mov
loopne
ljmp
mov
mov
xchg
or
mov
mov
or
imul
adcb
sub
cmp
mov
sub
xchg
ja
mov
dec
cmp
rcl
imul
inc
mov
xor
xor
push
test
lea
enter
jnp
push
cmpsl
mov
ret
lahf
jecxz
lcall
jne
loop
pop
ds
mov
mov
sub
sbb
pushf
popa
cmp
sahf
addl
jns
fisttpll
outsl
cmp
lock
sub
arpl
sub
enter
or
inc
imul
or
xchg
sbb
cmp
test
cmp
xchg
stc
std
mov
dec
xchg
loopne
pop
lcall
xlat
imull
jecxz
mov
leave
cwtl
mov
ja
xchg
sub
cmp
dec
xor
loopne
ljmp
jl,pt
arpl
pusha
stos
dec
jmp
lock
iret
int
mov
int3
addr16
add
sub
cmp
pop
dec
scas
loopne
xchg
ds
and
adc
or
cwtl
insb
lods
or
js
mov
dec
pop
jae
cs
shlb
stos
and
jb
fistl
sti
mov
loop
pop
in
ds
mov
ljmp
push
push
jecxz
int3
xorb
or
dec
in
test
jp
cmp
in
lea
arpl
arpl
shlb
xchg
inc
lock
mov
rep
pop
lea
add
lret
pusha
cmp
inc
pop
cld
xorl
shlb
repnz
insl
mov
loopne
into
test
lret
in
push
sbb
into
jnp
pop
fstpt
lods
cmpsl
enter
mov
dec
das
rclb
in
roll
lret
sub
jne
xchg
outsl
sub
sub
test
fldt
roll
dec
clc
add
cs
dec
popf
clc
repz
mov
dec
xlat
andb
sti
ljmp
addr16
jg
ja
jp
push
push
dec
mov
in
mov
adc
ret
xchg
dec
mov
outsl
jae
xor
mov
js
and
in
mov
and
in
leave
clc
dec
mov
loopne
mov
dec
aas
in
or
mov
push
add
dec
cmp
stos
sarb
out
mov
push
icebp
mov
cmp
addl
jle
or
jnp
inc
cmp
or
mov
xor
mov
shrl
ds
addr16
or
add
shl
iret
and
pop
xchg
dec
sub
rorb
and
jle
test
mov
lock
lret
fwait
int
or
in
mov
addr16
mov
adcl
mov
mov
cs
mov
mov
lret
in
addr16
in
leave
inc
or
arpl
in
lock
jae
xchg
inc
add
or
test
pop
dec
add
lcall
inc
fimull
popf
mov
push
or
mov
in
mov
mov
gs
push
sub
cmp
mov
addb
rol
daa
inc
arpl
push
fidivs
fcompl
cmpsl
mov
inc
arpl
cltd
sbb
stos
shl
jo
pop
out
int
and
pop
push
jmp
dec
jmp
flds
or
insl
mov
sub
iret
mov
push
pop
bound
ds
nop
bnd
call
inc
mov
sub
or
repnz
loopne
std
enter
ljmp
loop
stos
jo
mov
sub
jecxz
jo
cld
mov
enter
dec
jae
add
mov
cli
addr16
mov
sub
sub
mov
popa
enter
scas
dec
adc
sub
xor
addb
push
insl
dec
inc
sti
daa
data16
test
cld
add
dec
repz
pop
ljmp
inc
dec
sbb
imul
in
inc
test
fs
movsb
pop
mov
mov
xor
dec
lock
sahf
pop
mov
push
push
push
and
je
scas
mov
push
mov
sbb
sub
push
jno
fmul
stc
addr16
ljmp
mov
inc
adc
lods
push
subl
jnp
push
pop
fists
aas
or
inc
pushf
pop
sub
lods
mov
mov
sub
add
inc
mov
int
mov
inc
lods
cmp
xor
aaa
lea
sub
sbb
push
out
mov
addr16
lea
and
in
inc
mov
out
cld
mov
or
enter
repz
or
imul
call
ss
mov
add
in
push
xor
dec
sahf
push
clc
add
or
cmc
dec
gs
loopne
cmp
insb
cmp
stos
push
adc
arpl
rcr
lods
dec
sub
and
addb
mov
imul
push
xchg
test
or
nop
cli
dec
in
jecxz
clc
dec
lea
cwtl
jnp
cli
sub
mov
mov
repz
xchg
cld
or
lods
sub
mov
insl
cmpsl
xchg
jae
mov
and
add
and
or
pusha
mov
popa
out
lods
movl
std
inc
divl
mov
pusha
sti
dec
cld
xor
add
das
lock
popa
inc
sub
stos
jb
jnp
dec
dec
or
jecxz
test
lods
test
inc
jnp,pn
in
hlt
adc
add
nop
mov
or
mov
rcrl
loopne
stos
push
mov
push
sub
mov
and
xor
or
bound
enter
in
mov
imul
clc
ficoml
nop
jle
xchg
pop
jae
lret
jecxz
xchg
sub
mov
xchg
jp
dec
mov
jecxz
imul
add
push
orl
jg
or
fisttps
test
in
add
add
stos
sbb
mov
ja
and
in
or
cwtl
push
stos
mov
jnp
sbb
sbb
adc
sub
jl
xchg
in
aas
inc
and
push
lods
dec
xor
push
or
mov
pop
dec
enter
insl
popf
fcom
fiaddl
je
dec
imul
or
dec
mov
and
dec
into
jnp
sbb
inc
mov
addr16
adcb
dec
insb
mov
in
pop
enter
bound
xchg
or
and
cmp
dec
xor
jnp
or
add
push
add
push
and
inc
push
insl
test
sbb
ja
adc
sahf
xor
fisttpl
shrb
adc
pusha
push
test
daa
push
stc
pushf
mov
mov
loopne,pn
jecxz
mov
jne
jnp
lcall
xchg
mov
dec
add
in
iret
scas
sti
imul
divl
jae
out
jecxz
jnp
and
nop
lock
mov
ret
pop
lea
lods
jnp
mov
lret
xor
clc
adc
je
ljmp
push
sub
rclb
add
aam
cmpsb
clc
and
stos
mov
add
mov
lahf
jns
pop
jae
les
sub
jmp
arpl
int
lods
pop
xchg
push
fistl
pop
xor
push
sbb
popl
and
inc
or
sub
pop
cwtl
add
lea
mov
test
dec
popf
cmp
out
scas
add
fnstsw
cmp
mov
mov
mov
mov
cli
mov
int
cmp
sub
sub
in
outsl
daa
mov
outsb
out
inc
adc
imul
cmp
sub
or
and
mov
stc
fimull
push
and
cwtl
stos
mov
dec
push
fmul
mov
inc
loop
sub
outsl
ljmp
xor
lea
nop
loopne
cmp
fsubl
mov
arpl
in
dec
pop
clc
pop
dec
mov
add
add
daa
mov
push
and
xchg
stos
xor
add
push
dec
sarb
lcall
sub
in
stos
mov
xchg
push
inc
adc
jmp
in
insl
repz
mov
data16
and
insl
fucomp
and
dec
mov
inc
mov
fcomi
push
call
push
js
mov
push
or
dec
and
adc
or
pop
popw
test
xchg
or
push
dec
cld
movl
mov
stc
jnp
sub
inc
mov
addr16
xchg
mov
sub
rclb
filds
lods
cmpsl
lock
pop
cmp
shrb
insl
add
cmp
jecxz
dec
add
dec
jle
gs
and
cmp
mov
enter
mov
and
dec
mov
cwtl
mov
push
dec
push
lods
push
mov
pop
in
pop
or
repnz
pop
mov
nop
cmp
scas
sub
cmp
sbb
mov
fcomps
fdivrl
lcall
xchg
fists
dec
imul
push
jae
mov
push
push
in
jno
loope
inc
pop
dec
add
jp
adcl
adc
pusha
push
push
and
dec
mov
jae
sahf
lods
push
xor
cmp
jecxz
inc
mov
scas
mov
dec
cmp
out
inc
or
mov
push
sbb
xchg
or
outsl
loopne
and
xchg
jp
push
jne
jo
adc
jge
xchg
int3
mov
add
xor
jmp
sbb
jnp
ljmp
xchg
pop
bound
aaa
in
mov
mov
dec
sbb
das
lods
mov
cmpsl
aaa
lods
add
mov
insb
lods
cwtl
movsl
nop
mov
sub
lods
sub
inc
daa
push
pop
fisubrl
jnp
fs
imul
sub
xchg
push
dec
sbb
lods
test
lods
shll
add
pop
mov
pop
and
dec
cmp
mov
loopne
into
fwait
mov
cmpb
aaa
lods
daa
dec
rolb
cmp
jmp
cmp
xchg
cwtl
subl
ljmp
leave
sub
call
loopne
popa
sub
lock
in
sti
add
dec
in
loopne
ds
xchg
jg
jge
testb
outsb
pop
imul
mov
arpl
enter
adc
test
in
arpl
cmp
insl
cmp
in
inc
shrb
cmpl
mov
lret
dec
xchg
or
jmp
lret
add
lock
int3
jae
arpl
test
cmp
dec
add
cmp
add
sbb
pop
inc
xchg
loope
inc
lret
nop
sbb
mov
push
adc
in
dec
in
adc
negl
jecxz
fldt
imul
or
add
dec
stos
sbb
or
xchg
in
mov
or
add
and
sub
test
mov
dec
or
stos
xor
lcall
jle
fnstsw
add
test
std
frstpm(287
xor
lods
insb
or
or
adc
jmp
mov
or
call
call
arpl
mov
stos
insl
mov
push
xchg
es
pop
int
push
sub
sbb
cmp
imul
sub
xor
or
rclb
clc
in
loop
nop
mov
call
fs
aaa
push
push
push
xor
loopne
rclb
cmp
dec
pop
sub
push
jmp
jecxz
in
and
lock
cmpsl
jne
bound
cwtl
ficoml
arpl
mov
pop
rorl
sbb
fadds
imul
bound
jno
ja
ret
mov
jo
stos
sub
clc
and
stc
nop
arpl
std
jle
lods
or
loop
sub
sbb
lods
push
js
cwtl
ljmp
ret
lea
or
daa
sahf
andl
mov
int3
loopne
ja
push
dec
add
lret
shll
pusha
xchg
test
mov
mov
sbb
xorb
xchg
or
sub
fmuls
mov
cli
mov
pop
test
fisubrs
shrl
cmp
mov
mov
jecxz
test
pop
mov
jns
call
in
enter
fdivrp
add
insl
lods
cli
jae
mov
subl
pop
jns
xor
sbb
fisubl
stos
sub
lods
xchg
inc
or
out
xchg
mov
pop
sub
ja
sub
dec
lea
cmp
cmpsl
sbb
lcall
shl
ljmp
mov
pop
mov
out
adc
testl
sti
sub
lods
inc
jae
mov
push
cmp
test
jne
arpl
pop
fsubrl
and
jne
mov
jb
push
outsl
jmp
mov
fstpt
mov
popf
jmp
enter
orb
out
in
mov
mov
pop
and
jmp
cs
int
sbb
inc
dec
imul
mov
mov
clc
lret
daa
test
lods
dec
push
imul
jno
jae
or
xorl
lods
jnp
fisubrl
jecxz
repz
sub
fwait
dec
jns
nop
lea
out
push
ja
mov
xchg
dec
push
pop
daa
arpl
and
cwtl
subb
in
imul
or
mov
ljmp
and
mov
jecxz
or
andb
xchg
dec
in
mov
int
fcomps
fwait
sub
jg
or
ds
insb
repz
lock
imul
fcompp
aaa
and
stc
out
mov
add
stc
pop
int
test
nop
pop
jge
leave
scas
sub
stos
repz
enter
xchg
stos
pusha
pop
ja
dec
or
sti
out
les
out
lock
add
lret
cli
mov
stos
sbb
mov
or
das
or
roll
pusha
sub
shlb
push
add
outsb
ds
lret
mov
and
call
popa
cmp
pusha
int3
lods
mov
mov
je
mov
cs
mov
pop
movl
xchg
ljmp
enter
loopne
cli
decl
stc
call
mov
cli
movb
cli
mov
jle
sbb
mov
lea
pop
jge
mov
lods
jl
cltd
and
stc
ljmp
lea
lods
dec
dec
call
cmpsl
cmp
insb
push
loop
ja
cmp
xor
inc
or
mov
push
inc
mov
add
sub
fsub
xchg
cli
pop
mov
aaa
nop
cmp
xorl
xchg
dec
or
push
rorl
insl
nop
ret
mov
mov
push
sub
dec
cmp
test
pop
mov
lret
jae
add
inc
and
insl
sub
test
adc
enter
push
mov
mov
mov
pop
orb
jnp
sub
mull
pop
outsl
test
cmp
test
popa
mov
push
push
push
popf
fnstcw
cli
xchg
lock
cwtl
nop
jbe
dec
cmp
fldt
test
xor
xchg
loop
adc
mov
sub
and
pop
ljmp
mov
mov
add
clc
lret
adc
and
ret
cs
js
sbb
ja
sub
aaa
push
lods
dec
mov
mov
xchg
ljmp
hlt
jno
or
mov
cwtl
fidivl
shr
add
sub
pop
sbb
outsl
test
imul
mov
stos
mov
imull
mov
xchg
xchg
dec
push
jecxz
mov
addr16
mov
ret
xor
repz
jae
jbe
cmp
ds
call
fldl
lods
pop
int
xchg
scas
outsl
and
clc
cmp
fs
or
test
stos
jne
mov
cwtl
in
lock
ret
add
push
inc
or
push
add
sub
repnz
jno
inc
mov
cmc
bound
mull
lea
cs
sub
cld
mov
shlb
aaa
in
cmp
lahf
ret
sub
sti
or
fwait
sub
mov
inc
loope
inc
fimull
pop
xor
call
cmp
adc
nop
fwait
test
jp
dec
sbb
repz
xchg
jl
push
mov
push
fwait
inc
push
mov
or
or
mov
fwait
lods
nop
lcall
sbb
fidivs
test
int3
outsl
and
jae
dec
dec
ljmp
popf
call
imul
add
mov
lods
or
xlat
pop
dec
dec
pusha
sub
cld
cmp
mov
mov
rcr
adc
jp
pop
lea
mov
shlb
or
ret
rcrb
roll
add
call
fldt
add
push
xchg
adcl
out
sbb
cmpsl
dec
lret
or
mov
mov
sub
mov
out
jno
popf
cmpb
or
cmp
lea
nop
stos
cltd
sbb
insb
sbb
mov
lods
dec
arpl
mov
ret
sti
cld
lods
xchg
or
lea
or
ljmp
xor
js
testl
in
inc
mov
std
das
int
mov
shrd
mov
add
xchg
pop
cli
inc
lea
xor
scas
popf
mov
sbb
pop
call
dec
aam
or
int
call
rcll
lods
outsl
ljmp
popa
in
arpl
int3
inc
stc
jmp
xchg
dec
pusha
sub
in
xchg
jae
adcb
dec
and
aaa
imul
sub
scas
or
repz
mov
aaa
lea
sbb
mov
insl
inc
orl
pop
int
daa
test
or
aaa
mov
arpl
adc
ret
loope
and
sub
mov
lock
or
cmp
stos
push
mov
test
cwtl
lock
nop
je
addr16
xchg
adc
xchg
mov
mov
shrb
test
lods
ds
es
outsl
lods
data16
test
mov
into
aad
adc
jo
sarb
sub
xor
out
xor
rcr
mov
lods
out
dec
ja
mov
fs
cmc
mov
xlat
bound
stos
mov
dec
mov
add
call
out
movsb
mov
inc
dec
push
leave
push
push
decl
ljmp
and
lcall
mov
in
push
subb
shl
dec
fistl
cli
dec
addb
cs
inc
jnp
xchg
cs
and
cli
pop
xchg
outsb
adc
xchg
inc
cmp
xchg
stos
scas
mov
pop
imul
sbb
sbb
xchg
in
hlt
test
mov
dec
out
outsb
int
xor
stos
xchg
add
and
mov
dec
sbb
dec
dec
lods
mov
lods
jle
insl
rolb
cmp
fdivrp
lods
or
push
gs
dec
daa
add
pop
lods
and
sti
sti
push
lods
mull
stos
loop
adc
subl
dec
mov
pop
nop
or
test
lods
mov
repnz
lods
sub
sub
inc
das
mov
add
subl
push
push
insb
fisttpl
cwtl
aaa
adc
or
inc
nop
xchg
pop
insl
je
jl
xor
inc
test
lock
xor
pop
data16
mov
lret
test
jecxz
lods
pop
xor
dec
lods
push
inc
test
fildl
dec
xchg
push
or
stos
adc
push
add
orb
dec
xchg
or
or
mov
and
and
mov
inc
add
mov
outsb
fimuls
mov
fimull
lret
push
adc
xchg
subb
fisttpl
nop
or
stos
sub
sbb
and
xor
xchg
adc
ret
js
jge
sub
xchg
lcall
sti
push
out
aam
mov
fisubs
jge
fidivl
pop
dec
pop
jmp
fdivs
enter
test
call
ret
or
lods
sbb
inc
mov
mov
leave
or
push
pop
test
frstor
push
cmpsl
int3
cli
enter
bound
or
sbb
sub
mov
dec
nop
jmp
in
inc
fmuls
or
pop
dec
xchg
jne
mov
std
out
std
dec
insl
pop
insl
ds
mov
dec
jge
fcoms
out
cmp
lods
adc
scas
repz
scas
cli
or
dec
cmp
filds
fisttpll
out
and
dec
bound
pop
dec
add
movsl
stos
ret
mov
ljmp
xchg
stos
or
call
xchg
cli
mov
jnp
mov
xchg
xchg
lods
or
dec
out
mov
shl
mov
sar
or
or
or
scas
shlb
inc
mov
je
xlat
mov
push
xchg
pop
mov
aas
and
ret
lea
loope
mov
imul
mov
sbb
xchg
adc
mov
ja
cmp
push
enter
int
mov
fs
js
insl
ret
iret
clc
stos
mov
cwtl
inc
dec
rcrb
sub
or
mov
insl
jp
push
lret
dec
arpl
sbb
ljmp
nop
adc
mov
popf
mov
add
aaa
int3
xor
fisttpl
cmp
mov
pusha
pop
out
xor
insl
and
jo
jnp
popa
dec
mov
aaa
lea
cwtl
push
stos
add
fwait
ljmp
pusha
ljmp
loop
push
jecxz
jae
loopne
mov
mov
sbbl
mov
cmp
xor
jge
sbb
cmpb
inc
test
adc
insl
sub
pop
pop
js
mov
sbbb
loopne
hlt
xchg
dec
lea
ret
add
mov
cmp
aam
nop
xchg
sub
mov
loopne
dec
sub
nop
jecxz
scas
inc
insl
push
mov
xor
data16
leave
push
sub
out
pop
ljmp
dec
push
push
add
sbb
insl
xor
mov
inc
push
push
push
out
loop
dec
mov
lret
shll
xchg
gs
push
cli
sub
bound
pop
nop
cmp
jae
xchg
insl
mov
lods
in
jae
push
mov
dec
mov
add
lock
imul
and
gs
cmpl
loopne
nop
dec
stos
xchg
repz
and
xor
lcall
mov
fildl
cmpsb
arpl
adc
jns
dec
into
rolb
in
jo
xchg
cld
or
push
int
jecxz
insl
xor
dec
imul
push
ljmp
dec
outsl
xor
imul
push
insl
ret
ficompl
xor
xchg
and
nop
cmp
lcall
packssdw
arpl
or
or
insl
test
stos
rorb
bound
inc
lea
cmc
dec
bound
dec
push
fs
or
addb
add
insb
xchg
pop
test
inc
and
push
mov
jae
dec
dec
lret
or
mov
or
or
sbb
daa
xor
cmp
xchg
insl
mov
adc
dec
jns
dec
xchg
jo
scas
dec
std
fdivrs
mov
cmpl
ret
mov
stos
sbb
enter
and
dec
xchg
bound
outsl
insl
push
mov
pop
dec
cli
les
cmp
dec
fdivrs
lahf
mov
testl
out
push
mov
insl
pop
aaa
arpl
dec
ljmp
lods
arpl
enter
fadds
out
mov
add
push
jb
push
pop
js
mov
dec
adc
sbb
movsb
imul
mov
jnp
call
adc
pop
and
mov
outsb
or
jbe
or
outsb
dec
adc
clc
insl
adc
cmpsl
xor
jnp
popf
adc
jp
dec
add
sarb
enter
imul
lods
loop
gs
sub
sub
movsb
mov
xchg
mov
fs
or
stos
mov
and
js
mov
xchg
push
or
outsl
rcrb
jg
shrl
push
gs
xor
stos
arpl
xor
and
imul
and
adc
and
mov
fldt
test
shrb
add
mov
mov
add
mov
lods
or
adc
dec
sbb
push
xor
cwtl
test
in
mov
pop
adc
mov
in
imul
sub
fcmovnb
enter
xchg
push
inc
mov
lcall
sub
arpl
cld
test
xchg
or
into
cltd
lea
and
ret
mov
sub
add
adc
subb
std
sub
mov
pop
shl
xchg
inc
int
jmp
arpl
fisubl
outsb
mov
stos
jge
xchg
lcall
loopne
mov
cmp
push
je
mov
cmp
lea
or
stos
lock
push
and
or
or
mov
or
xor
dec
andb
dec
push
dec
push
andl
call
lods
bound
insl
cmp
xor
in
cmp
adc
lods
gs
and
push
div
int3
out
dec
xor
popf
scas
and
arpl
push
test
jle
xchg
ljmp
popf
stos
stos
mov
mov
mov
adc
adc
or
subb
rcr
das
rcr
das
test
push
call
imul
insl
mov
in
mov
xorl
add
std
insl
push
mov
push
or
fnsave
out
dec
dec
cmpsl
xor
or
out
dec
mov
arpl
andl
fcomps
sbb
push
mov
mov
inc
jp
mov
and
cmpsl
mov
add
pop
insl
mov
fldcw
flds
push
aaa
sub
dec
into
test
imul
mov
mov
push
insl
arpl
mov
out
push
bound
xor
stos
jmp
dec
dec
std
push
cmpsb
or
add
imul
inc
push
mov
dec
lods
jnp
add
lock
xor
dec
and
push
or
add
ljmp
dec
insl
jnp
mov
outsl
repnz
jnp
push
enter
aad
lea
aaa
jnp
int
addr16
addr16
inc
or
add
or
dec
popf
ret
sbb
in
in
jmp
xlat
inc
mov
subb
jae
insb
sbb
int3
sub
lods
int
sbb
rol
out
xchg
mov
and
push
xchg
mov
mov
ret
add
stos
pop
mov
out
sbb
lods
repnz
jo
subl
loop
sub
sub
mov
js
push
lods
loop
inc
gs
dec
clc
or
imulb
sub
adc
into
xor
xor
jnp
call
sbb
xorl
mov
call
pop
subl
insl
sub
xchg
in
outsb
stos
and
insl
shl
fsubs
dec
mov
sub
scas
jo
js
sbb
ljmp
sub
repz
arpl
rclb
jl
sub
repnz
in
dec
add
aam
sahf
movsl
mov
aam
dec
adc
mov
jae
mov
into
fistpl
outsb
jnp
or
add
cli
xchg
mov
fdivr
loopne
shrb
jge
or
imul
clc
mov
repnz
push
insl
pusha
mov
js
sarb
mov
mov
xchg
insl
stos
cwtl
nop
mov
jb
jmp
test
lret
dec
loop
fisttpll
push
jno
ret
loop
mov
mov
mov
ret
iret
push
iret
imul
cli
outsl
imul
fisttpll
outsl
cmp
aaa
insl
mov
lock
push
shlb
or
cli
fdivs
xchg
repnz
into
ja
push
cmp
ret
ljmp
sub
pop
sub
push
jae
insl
cmpb
clc
lods
les
sbb
cli
shlb
les
jg
pop
add
inc
scas
jecxz
xor
inc
lahf
dec
and
adc
sub
and
inc
scas
stos
lret
inc
out
outsb
and
jmp
cmp
xchg
arpl
mov
mov
push
fldl
iret
scas
cwtl
dec
and
sbb
jbe
insl
xchg
insl
ret
cmpb
xchg
dec
mov
lods
cmp
mov
nop
sbb
xchg
in
sub
jp
insl
scas
imul
loopne
clc
repz
xor
sbb
inc
pop
cmpsb
out
test
enter
mov
gs
mov
dec
lea
test
dec
repnz
pop
dec
sahf
jecxz
imul
jnp
js
lods
pop
xchg
xlat
or
pop
movsb
jmp
int
adc
mov
cmp
cli
pop
sub
dec
xchg
clc
lcall
add
mov
test
jae
xchg
clc
cs
cld
mov
call
repz
mov
add
sar
jg
push
test
sbb
xchg
or
push
dec
and
jae
add
cmpsl
mov
daa
jnp
xchg
loop
movsb
mov
shl
mov
jnp
ljmp
and
pop
loopne
push
mov
stos
add
mov
jae,pn
stos
xor
gs
sti
insl
and
or
inc
test
or
cmp
jo
and
xor
cltd
mov
insb
lods
test
orl
xchg
out
mov
into
adcb
nop
stos
push
fcompl
xor
mov
or
dec
fldenv
sbb
mov
cmp
scas
or
imul
in
mov
dec
xor
dec
lock
loop
adcb
insl
cmp
lcall
dec
stos
test
mov
loop
xor
jge
jb
mov
rcrl
mov
rcrb
mov
fistl
dec
xor
ret
jecxz
popa
out
bound
lret
orb
adc
insl
jo
dec
shrb
mov
dec
pop
sbb
shrb
mov
fmul
and
jnp
insl
sub
add
or
sub
imul
clc
in
adc
push
jmp
insb
daa
push
jp
xchg
inc
fiaddl
test
sub
mov
push
xor
lock
stos
dec
or
lods
cmp
stos
clc
push
mov
xor
mov
pop
scas
and
insl
pop
pop
ljmp
or
call
insl
pop
in
daa
leave
sbb
add
lods
inc
adcl
mov
lret
sahf
aam
lea
insl
xchg
loopne
sbb
dec
push
mov
insb
stos
clc
ja
repnz
mov
sub
dec
mov
pop
pop
mov
js
push
imul
dec
or
add
lods
dec
xchg
dec
and
call
inc
lea
rclb
dec
pop
dec
addr16
test
arpl
nop
and
jp
mov
clc
mov
mov
lods
cmp
cli
add
lods
enter
arpl
sarb
loop
push
cmp
add
sub
int3
lahf
cmp
sub
pop
cmpsl
mov
jae
cmpsb
cmp
or
sarl
or
nop
pop
mov
and
jp
stos
and
lds
test
sub
subb
mov
push
pusha
lea
in
push
insl
push
mov
enter
mov
popf
lea
outsb
imul
dec
sub
mov
mov
rcrb
dec
lret
pop
or
jmp
lods
adc
shll
rorb
insl
or
ljmp
xor
or
insl
leave
jmp
jg
sub
gs
cmp
cmpsl
cmp
xor
jge
lret
sub
and
mov
lods
je
rorl
jecxz
dec
pop
daa
mov
inc
jnp
outsl
fsubrs
and
repz
xor
add
or
lret
sub
jns
fucomip
popa
stos
add
or
cli
and
aaa
mov
popa
dec
ljmp
test
or
test
in
mov
or
insl
clc
dec
sub
mov
dec
in
lods
cmp
and
mov
inc
mov
es
lcall
cli
mov
or
in
or
mov
mov
xchg
test
mov
pop
sbb
or
arpl
jae
or
mov
or
jae
out
adc
dec
imul
lea
inc
add
in
dec
fcom
mov
dec
and
sub
mov
jns
outsb
fs
inc
lods
adc
and
in
hlt
sti
pop
or
arpl
dec
hlt
nop
int3
pop
in
cld
adc
pop
in
dec
fmul
xor
add
loopne
xchg
lret
pop
in
adc
addr16
aas
lods
hlt
mov
aaa
lea
dec
lods
lret
stc
xchg
mov
stos
mov
dec
push
dec
dec
shl
pusha
xchg
dec
sub
lret
stos
and
cmp
mov
fwait
or
aaa
and
inc
clc
in
or
dec
mov
insl
je
mov
in
cmp
inc
into
xchg
lea
shrb
push
mov
dec
cmp
mov
push
push
adc
loopne
fisttps
lods
mov
dec
sbb
push
andb
dec
mov
or
cmp
out
je
dec
or
add
cmp
xor
lret
sbb
dec
or
lods
jle
mov
stos
and
adc
pop
dec
cli
testl
insl
out
bound
sub
dec
dec
jnp
inc
or
repz
dec
add
mov
enter
pop
or
mov
dec
dec
addl
sbb
repz
dec
int3
cmp
addl
imul
and
mov
cwtl
lahf
ret
insl
push
test
pop
dec
movsb
enter
cmp
lods
pop
dec
popa
insl
fcomps
mov
out
sub
cmpl
or
loop
or
dec
ret
jo
jl
call
lods
mov
and
dec
nop
dec
and
call
das
fwait
or
in
stos
das
rol
mov
or
loopne
xchg
mov
sub
jae
inc
fdivs
xor
fwait
jmp
sbb
jb
mov
popf
popa
mov
xor
pop
imul
mov
inc
arpl
cmpsl
mov
jl
dec
dec
aam
test
dec
adcb
addr16
addr16
insl
in
test
sbb
daa
pop
pop
push
outsb
repz
or
xor
js
cmpsl
out
cmovno
lcall
enter
push
lock
jecxz
or
int3
xlat
dec
push
adc
enter
inc
dec
sbb
test
lret
sub
rolb
mov
decb
mov
lods
movsb
lret
pop
repnz
adc
loopne
xor
imul
insl
mov
in
ja
mov
packsswb
sahf
insb
popa
into
mov
ljmp
call
xchg
sub
daa
mov
mov
inc
add
enter
daa
xor
lret
adc
lcall
mov
sbb
cwtl
test
xchg
bound
jo
sub
jmp
enter
xchg
mov
lea
mov
or
inc
xor
jae
adc
xor
lods
mov
jb
rcrb
mov
cwtl
push
mov
or
xor
push
int3
sar
sti
pop
dec
rcl
push
je
popa
sbb
inc
iret
add
rorb
orb
inc
lret
add
jae
pop
inc
test
jo
jmp
fiaddl
or
cwtl
cs
sub
lret
jae
adc
inc
mov
dec
add
lea
mov
mov
enter
lea
push
push
in
jge
loopne
lods
scas
clc
push
xor
jo
test
sub
jge
roll
sub
add
fnclex
and
cmp
into
inc
mov
add
sub
mov
xor
jnp
imul
lcall
call
mov
jns
aaa
lea
and
cwtl
sub
lea
lea
ror
xor
ja
xor
ja
jge
inc
mov
clc
jg
out
inc
push
add
mov
or
fsubrl
xchg
mov
ja
mov
outsb
lea
enter
add
out
je
jle
jnp
or
repnz
ret
subb
mov
mov
or
lods
mov
xchg
pop
dec
pop
arpl
fsts
arpl
enter
mov
lea
mov
dec
jae
mov
fdivs
pop
mov
enter
mov
push
dec
xor
mov
test
cs
out
pop
and
xor
xchg
jecxz
aas
lea
das
cmp
mov
xor
jecxz
rolb
loope
mov
int3
les
jmp
movsl
test
mov
sub
mov
xor
cli
aaa
imul
cmp
mov
stos
mov
out
gs
movsl
adc
nop
sub
add
lret
int3
mov
dec
sbbl
aam
int3
test
pop
and
ja
mov
lods
nop
mov
in
adc
lock
dec
xchg
mov
jno
out
jns
mov
xchg
push
cmpb
loopne
sub
fiaddl
pop
or
xor
into
dec
push
js
jmp
push
fidivrs
cmp
in
in
dec
or
sar
mov
jbe
sub
dec
repnz
inc
inc
fistl
orb
clc
and
das
jecxz
xchg
and
enter
mov
daa
inc
mov
push
enter
sub
jmp
sub
adc
cli
stc
or
lods
in
stos
push
shlb
or
jmp
in
xchg
dec
loopne,pn
movsl
nop
mov
dec
lea
cmc
lock
bound
rorb
add
addb
in
enter
sbb
sub
mov
out
mov
jnp
test
arpl
xlat
clc
movsb
jecxz
jnp
popf
lods
push
ret
shlb
and
fmull
mov
sub
xor
mov
sub
xor
cmp
xor
shll
pop
inc
sub
sti
stos
add
scas
fdivrs
dec
xor
call
dec
or
xchg
and
imul
lods
mov
into
push
mov
jae
ret
js
leave
scas
jne
fwait
loop
lock
add
xchg
leave
mov
lahf
sbb
fwait
in
sbb
ret
insb
inc
out
call
mov
lods
add
repz
mov
pop
xchg
xorb
dec
xor
sbb
dec
clc
test
mov
ret
lret
addr16
pop
loop
inc
and
icebp
inc
sub
arpl
sarb
adcl
add
add
decl
fadd
arpl
enter
sbb
je
inc
or
int3
or
ja
out
dec
lock
in
mov
dec
dec
adc
dec
fdivrs
pop
mov
fwait
pop
fcoml
xor
xlat
divb
fstpt
mov
mov
adc
fisubrs
mov
insl
mov
cwtl
fcoms
xchg
adc
test
or
sbb
xchg
push
insb
into
sbb
imul
xorb
lock
mov
mov
mov
aad
mov
fimull
repnz
sub
xchg
mov
sub
lret
mov
in
adc
and
insb
scas
cs
adc
push
xchg
add
inc
iret
bound
cwtl
push
lods
cltd
andb
or
stos
shrb
lods
outsl
jecxz
sub
fsubrs
lret
dec
mov
lret
fs
aam
jns
clc
ret
into
ja
jg
jmp
mov
ja
push
or
aaa
in
jno
xchg
stc
or
cmp
jecxz
lahf
sub
xchg
jbe
fldenv
cmp
mov
mov
cmp
mov
sub
roll
lcall
shl
int
mov
pop
pop
leave
lods
jae
ret
lahf
dec
push
add
loop
cwtl
mov
xchg
xchg
fs
mov
or
inc
lods
rolb
sbb
push
xchg
dec
cltd
xchg
rep
fimuls
test
inc
out
inc
dec
ret
sahf
jae
mov
les
jae
dec
push
xor
lret
sub
push
mov
dec
call
cmp
push
dec
and
add
mov
or
ret
pop
insl
popf
dec
adc
les
fs
addr16
scas
test
xchg
or
dec
pop
dec
pop
out
pop
add
push
xchg
das
lea
mov
dec
pop
sbb
insl
adc
bnd
andb
mov
clc
push
mov
xchg
xorb
lods
int
insl
lock
shrb
shlb
jnp
fisubs
outsb
lods
lods
imul
out
cmp
xor
mov
cmp
movsl
mov
imul
cli
fwait
pusha
outsl
lods
mov
cmp
inc
dec
addb
xchg
pop
ret
lea
jne
pop
mov
adc
lods
xor
and
stos
call
jae
fistps
cmp
fadds
mov
and
ret
xor
mov
sub
movsb
lods
add
sub
out
push
sub
rcl
or
and
gs
adc
pop
xor
stos
push
inc
sbb
or
jnp
xchg
outsb
jg
es
add
pop
outsb
imul
mov
in
ljmp
subl
lock
inc
dec
adc
cli
dec
dec
fs
arpl
pop
mov
cmovge
mov
shl
pop
sub
add
jl
mov
mov
shl
arpl
add
sub
imul
enter
adc
xchg
cli
sbbl
mov
rolb
pop
enter
rol
and
testb
loopne
inc
xor
insl
insb
fmuls
dec
jecxz
sti
push
and
fisttps
jecxz
dec
out
lahf
orl
push
inc
sub
sbb
bound
ja
mov
mov
push
xchg
icebp
jo
je
lods
test
inc
rorb
inc
mov
popf
mov
mov
pop
shrb
cmp
push
addl
hlt
pop
cmpsl
fadds
ljmp
mov
pop
test
repnz
cmp
dec
orl
mov
mov
pop
mov
stos
lods
sbb
jae
mov
sub
addl
or
bound
jno
mov
adc
mov
subb
lods
test
xchg
rcrl
and
jecxz
aas
push
fisttpl
mov
lock
test
iret
jmp
arpl
sub
xchg
test
enter
mov
mov
dec
sbb
mov
lea
rol
mov
jp
pusha
adc
sbb
aad
loop
xchg
repnz
ret
sub
add
shrl
mov
mov
cmp
into
add
mov
jo
xor
jae
aas
lods
cld
iret
call
cli
out
sub
mov
xchg
pop
pusha
or
clc
sub
jmp
jne
insl
cmpsl
dec
xor
ljmp
ret
sahf
lods
adc
push
or
sub
insb
or
mov
pop
stos
jo
mov
int3
outsl
repnz
cmp
lock
inc
cmpb
scas
fisubrs
push
addl
imul
insl
loopne
dec
dec
pop
or
addr16
outsl
cmpl
dec
fstpl
cmp
in
mov
test
outsb
leave
mov
xor
fcoms
test
mov
iret
cmp
sub
out
sub
sub
shr
pop
mov
push
fimull
xor
jp
jae
clc
call
and
inc
add
js
pop
mov
nop
push
sub
pusha
and
push
cmpb
push
repnz
jmp
ret
or
cmp
push
push
mov
sbb
mov
add
xor
sub
pop
and
pop
push
sub
and
clc
sub
push
inc
jnp
mov
mov
inc
aaa
mov
gs
sbbl
add
stos
outsb
dec
insl
lock
jmp
mov
xchg
jae
fwait
sub
mov
mov
subb
inc
lea
jbe
xor
lods
mov
dec
push
dec
jns
cmp
outsb
inc
int3
cmp
stos
dec
push
push
xor
dec
xor
jae
aas
jmp
dec
push
mov
pop
arpl
ljmp
dec
push
add
sahf
mov
xor
dec
pop
mov
hlt
lods
mov
and
pop
dec
or
in
arpl
lods
out
andl
jecxz
loope
mulb
sub
out
push
sub
data16
cli
mov
mov
scas
mov
leave
or
addr16
idivb
jg
sub
adc
or
loope
rcr
jae
lods
testl
pop
int
cwtl
xchg
outsl
mov
rol
out
sub
dec
cmpb
adc
and
sub
jae
and
xorb
fiaddl
dec
lret
dec
dec
mov
mov
nop
push
or
subb
repnz
xor
imul
push
dec
push
add
je
loopne
sti
pop
sarl
movl
mov
mov
arpl
cwtl
into
fmuls
jecxz
and
mov
jae
pop
js
ret
loopne
xlat
dec
fdivs
sti
mov
cmp
dec
into
loope
add
daa
xor
sbb
xlat
loopne
out
push
enter
dec
addr16
mov
mov
popf
push
sub
fninit
jnp
movsb
pushf
mov
push
dec
lock
or
mov
jl
int
mov
xchg
loop
out
cmp
add
add
sarb
push
xchg
loop
sub
test
sub
cwtl
and
adc
jle
scas
jnp
enter
ret
xor
in
repnz
in
inc
test
or
mov
nop
add
xchg
dec
insl
mov
add
lock
jnp
lods
sub
cli
pop
in
sub
lods
lods
cmc
int
pop
sub
pop
lods
mov
aam
shlb
aas
lods
gs
and
insb
mov
lods
lods
xor
lods
sarb
and
in
enter
int
add
in
and
sub
lods
lods
mov
in
mov
mov
bound
arpl
insl
inc
adc
int
rcl
push
mov
fwait
xchg
js
jno
mov
sub
fsubl
sub
repz
call
les
jne
loopne
sti
add
mov
jo
sbb
mov
adc
xor
shll
inc
lods
jno
mov
call
pop
dec
lea
lods
mov
cmp
or
lods
cs
push
cmp
pop
jns
pop
arpl
cmp
or
lods
dec
arpl
lock
add
call
inc
push
rorb
imul
and
out
xchg
dec
ljmp
pop
es
sbb
xchg
cmp
adc
lods
mov
cmp
xor
mov
lods
fistl
mov
popf
sub
dec
add
mov
sub
insl
add
mov
jnp
fcomps
loope
in
out
movsl
insl
call
clc
insl
or
lcall
cmp
ret
bound
mov
dec
and
adc
adcb
jmp
mov
dec
push
nop
stos
and
or
or
dec
nop
lret
or
add
aam
in
stos
stos
mov
ret
mov
mov
test
addl
enter
frstor
adc
pop
popa
pop
mov
adc
push
dec
mov
in
mov
nop
cltd
sub
stc
fldl
test
test
inc
push
lret
add
imul
mov
fidivl
fwait
pop
lea
gs
jbe
addr16
dec
jbe
or
push
cs
mov
jae
push
scas
insb
cmp
dec
adc
cmpl
sub
xchg
fs
lea
sti
sub
enter
dec
mov
mov
pop
xchg
shlb
push
dec
and
mov
cmp
enter
jge
dec
xor
sub
push
outsl
adcl
mov
xchg
xor
scas
mov
dec
stos
enter
jbe
jnp
dec
into
roll
xchg
stos
dec
or
enter
lock
insl
push
shrb
clc
ja
add
add
pop
jns
daa
pop
mov
dec
dec
int
subb
cmpl
inc
dec
jnp,pt
mov
jb
push
sbb
inc
sbb
addl
or
mov
inc
fsubrs
js
mov
test
je
out
dec
in
test
ljmp
lock
orb
scas
xor
jp
cmp
imul
rorl
xchg
std
test
jecxz
gs
adc
fwait
lea
xchg
test
jp
cmpsl
sub
adcl
mov
cs
and
call
pop
and
add
pop
or
mov
fsubs
aam
mov
test
in
sub
mov
fwait
int3
jp
dec
out
jbe
lea
cwtl
sbb
cs
dec
add
rorb
pop
mov
insl
inc
mov
or
xor
iret
int
or
jo
int
mov
out
shr
xor
shlb
add
int3
and
bound
pushf
or
add
loope
push
dec
or
mov
dec
mov
dec
jge
or
xchg
ret
lods
and
xor
jecxz
test
dec
ja
cmp
leave
ja
sub
lea
cmp
daa
and
enter
dec
add
shr
adc
je
sarb
push
and
insl
xchg
jo
std
test
mov
add
repz
xchg
mov
mov
call
rol
ljmp
cmp
pop
ljmp
jg
pop
dec
ja
lods
mov
push
mov
call
stos
cmp
nop
dec
in
rcll
or
adc
outsl
ljmp
sub
mov
lcall
inc
jl
int3
sub
lods
push
ret
test
insl
sti
clc
daa
jno
inc
jecxz
push
xor
out
add
fcoml
orb
mov
pop
addl
stos
lock
in
les
dec
and
int3
in
loop
push
sub
dec
push
mov
dec
dec
and
xchg
mov
lods
daa
insl
jb
clc
outsl
cwtl
mov
adc
sub
sub
stos
sar
scas
dec
fmuls
mov
xchg
imul
dec
add
call
lcall
lock
pushf
sub
cwtl
dec
inc
arpl
repz
push
mov
subb
dec
lock
in
iret
sub
stos
enter
adc
mov
rorb
repz
lret
inc
cmp
dec
je
js
sbb
int
and
jns
pop
mov
in
sbb
xor
jge
lret
insl
xchg
push
int3
or
dec
imul
mov
jl
shrb
jae
mov
subl
fisubrl
aad
push
and
push
mov
jg
lods
cmp
lock
mov
shlb
mov
inc
add
int3
add
orb
mov
cmp
cs
shll
cmp
sub
shrb
fwait
mov
mov
test
jnp
push
dec
cwtl
xor
sub
cmpsl
stos
enter
jmp
sub
jl
mov
inc
dec
mov
fwait
icebp
or
hlt
jmp
shlb
out
adc
adc
shlb
add
mov
stos
pop
cwtl
cmpsl
lods
add
mov
jl
mov
pop
arpl
or
mov
mov
insb
dec
push
dec
ljmp
and
push
push
cmp
test
scas
fsubs
fiaddl
fimull
push
jmp
and
add
lea
dec
add
clc
jecxz
sub
cmp
mov
sub
cmpsl
jnp
dec
dec
dec
xor
into
into
xor
cli
push
imul
push
or
dec
cltd
fcomps
add
cli
xchg
push
pop
cmpsl
arpl
cs
sarl
ret
push
xchg
or
or
cmp
add
sub
mov
sti
xor
repz
out
mov
add
sub
inc
push
cmp
xchg
lods
pop
shl
push
xchg
dec
ds
test
dec
aaa
cwtl
push
cmpsl
push
xchg
bound
cs
cmpsb
dec
pop
jg
test
aaa
jnp
and
rolb
insl
or
insl
xor
fstpt
stos
sub
fldl
and
and
pop
into
or
jnp
call
in
sbb
jne
nop
fcomps
dec
lahf
mov
jmp
sub
mov
cmp
jmp
fidivrs
add
jl
sub
inc
xchg
mov
aaa
insl
and
adc
dec
outsb
mov
cmp
xchg
dec
aaa
cmp
in
add
fcmovb
mov
ljmp
sbb
or
jmp
mov
dec
sub
cmp
fwait
dec
cmp
xor
or
mov
jmp
mov
lods
push
lods
and
lods
fsubr
mov
jmp
mov
jb
lods
shrb
mov
fdivr
stos
outsb
dec
andb
add
in
or
addr16
push
mov
and
imul
jge
mov
mov
adc
jb
or
mov
dec
clc
imul
cmp
dec
pop
xchg
lods
lock
cli
repz
cli
mov
lret
fmull
push
add
push
mov
mov
xchg
add
mov
xchg
sub
mov
mov
subl
lfs
sub
sar
jmp
repnz
out
rolb
ljmp
scas
inc
rorb
sti
adc
add
jae
xchg
pop
leave
outsb
jge
stos
mov
and
jmp
pop
jecxz
ret
mov
aam
sbb
xlat
test
ficompl
add
insb
fistpl
int3
and
add
lods
aaa
imul
lock
or
pop
add
adc
outsl
insl
hlt
int3
stos
out
mov
loope
pop
js
mov
sti
imul
mov
rorb
sti
into
pop
in
in
nop
subb
mov
push
sub
sub
cwtl
mov
ds
mov
and
xor
cmp
aaa
or
call
insl
mov
insl
imul
xor
lock
dec
fnsave
mov
scas
xor
lods
and
mov
xlat
jae
ljmp
jae
out
or
dec
arpl
dec
inc
jecxz
cwtl
imul
je
popf
pop
cmp
sub
addr16
push
dec
and
and
add
and
adc
inc
xor
push
lret
outsb
hlt
mov
mov
lret
or
rcrb
dec
cwtl
mov
jo
jge
loopne
out
subl
pop
xchg
cli
cltd
cmp
lods
mov
loopne
push
dec
xor
fisubrl
push
call
cwtl
fimull
and
mov
insl
or
test
mov
sub
or
mov
and
mov
in
insl
loopne
jge
cmp
rorb
pop
push
cmp
cmp
mov
adc
test
adcb
and
or
out
arpl
nop
or
fisubrl
aaa
enter
stos
mov
fsubs
jmp
adc
aad
or
lret
or
dec
mov
push
mov
sbb
and
jno
inc
testl
insl
popf
jnp
jb
ljmp
cltd
inc
jp
mov
lods
push
mov
ljmp
inc
jno
iret
cmp
and
add
push
mov
movsl
out
int
shlb
in
add
mov
std
out
mov
cmp
popf
test
lea
scas
sbb
popa
nop
out
adc
xchg
mov
ljmp
push
jae
int
cmpsl
mov
fwait
outsl
mov
enter
add
in
insl
lock
xor
sti
xlat
dec
scas
out
cmpsl
mov
mov
insl
iret
sub
or
ds
push
mov
idiv
jnp
clc
mov
test
mov
fldt
ficompl
in
inc
mov
mov
into
ret
push
lea
into
inc
lea
xor
and
cmp
andb
movsb
lods
imul
lea
test
jmp
rorb
sti
out
or
lret
mov
inc
and
popa
jne
lea
sub
scas
lcall
adc
mov
xor
repz
scas
cli
lods
and
mov
xor
jnp
pusha
in
loopne
sbb
repz
and
imul
dec
xchg
mov
mov
clc
lods
arpl
lock
mov
xchg
cmp
push
jmp
xor
xor
adc
push
call
loop
int3
fcoms
mov
adc
lods
int3
clc
mov
insb
orl
mov
pop
sbb
push
mull
adc
and
nop
cmp
sti
adc
xchg
in
inc
clc
and
push
cwtl
dec
cltd
xchg
pop
push
enter
lods
mov
lods
stos
insl
add
in
dec
call
sub
lods
push
js
dec
push
sub
mov
fsubrl
mov
lea
mov
and
jle
insb
xchg
xor
mov
ret
and
aaa
adc
outsb
out
and
push
sub
and
xchg
js
mov
mov
xor
mov
add
shlb
gs
xor
mov
sub
cmp
mov
and
ja
test
cs
or
mov
addr16
in
repz
insl
lret
jae
adc
add
int
xchg
mov
sahf
into
mov
imul
xor
or
or
dec
adc
adc
std
lea
inc
mov
mov
ret
jne
adc
xchg
mov
cmp
stos
imul
lods
xchg
pop
add
ja
cltd
push
mov
clc
dec
or
or
jmp
or
push
jbe
pop
sbb
insb
and
call
out
int
add
xchg
jecxz
jecxz
scas
insl
popf
or
jb
lods
ficoms
enter
ret
scas
cmpsb
sub
cmpsl
add
or
repz
push
lret
idivl
insl
test
xchg
push
subb
lods
dec
adc
dec
call
pop
adc
insb
sub
cltd
pushf
les
sbb
lock
adc
inc
subb
or
dec
or
inc
add
dec
dec
iret
push
mov
stos
mov
loop
aaa
dec
push
bound
int
mov
pop
sub
push
lock
clc
int3
xor
inc
insb
or
pop
daa
and
lcall
scas
jno
or
js
insl
orb
jbe
xchg
lret
mov
xor
jge
arpl
call
sub
or
lret
xor
mov
insl
pop
push
ret
sti
dec
negb
in
icebp
fs
andl
or
add
andl
adc
inc
sub
dec
ret
sbb
movsl
rcrb
pop
pop
int
fdivs
sub
dec
mov
cld
call
dec
scas
dec
int3
mov
jmp
or
mov
or
fwait
imul
pop
mov
insl
shll
mov
cs
or
xor
stos
pop
insl
es
in
mov
andl
loopne
mov
add
jl
lea
ja
gs
dec
fsubl
arpl
mov
add
hlt
jns
test
call
mov
addr16
sub
in
stos
call
outsb
mov
loopne
mov
dec
sub
jns
scas
and
fsubs
scas
stos
mov
adc
stos
mov
or
clc
mov
test
insb
jnp
jecxz
inc
cli
int3
or
push
gs
dec
push
xchg
sub
adc
mov
out
jae
stos
jp
push
push
cmp
movsl
test
sub
or
shrb
arpl
sub
adc
fadd
stos
dec
or
ret
jnp
adc
stc
sub
into
sbb
jge
pop
lock
clc
jb
xchg
loop
add
sarb
mov
sub
js
sbb
cli
inc
mov
pusha
lahf
outsb
cmp
sub
dec
xchg
bound
leave
jmp
or
pop
stos
leave
mov
and
sbbb
pop
sub
fstpt
ja
insb
lret
mov
dec
addr16
mov
cmpsl
push
shrl
mov
cmpsl
lea
mov
into
mov
aaa
ja
scas
lea
mov
imul
mov
xchg
fimuls
dec
push
xchg
mov
sub
sub
outsb
cltd
mov
jge
ja
loope
and
gs
sti
lods
fmull
arpl
stc
mov
call
or
dec
add
cmp
dec
lsl
jecxz
sub
lea
mov
dec
or
cmp
jnp
int
push
jmp
repnz
pushf
lods
lret
push
mov
insl
dec
stos
push
mov
insb
mov
leave
pop
mov
addl
adc
out
cltd
insb
idivl
in
sub
or
enter
out
dec
mov
fisttpl
addl
inc
push
out
mov
and
pop
xor
and
pop
sahf
inc
incb
int
insb
daa
mov
push
sub
mov
jmp
movsb
int
mov
in
cmp
dec
mov
xchg
inc
dec
adc
mov
adc
int3
or
leave
inc
and
outsb
push
insl
leave
add
lret
insb
int
push
es
loop
insl
sub
enter
outsl
xor
popa
pop
call
cmp
mov
cwtl
in
dec
icebp
in
les
mov
add
movsb
mov
mov
adc
inc
sub
test
push
push
mov
pop
dec
ljmp
outsb
shlb
ljmp
outsl
iret
mov
rorl
dec
sub
inc
pop
xchg
jle
iret
clc
dec
gs
cltd
ret
popf
mov
jl
leave
push
or
mov
pop
dec
in
mov
iret
ljmp
scas
daa
pop
arpl
addr16
add
mov
jecxz
fisubs
mov
fimuls
jne
push
lea
dec
iret
adc
fs
cld
add
dec
mov
add
int
insl
cmpsl
sub
pop
adc
arpl
aaa
mov
scas
or
and
and
lods
fimull
xchg
scas
or
cmp
mov
scas
mov
fldl
or
dec
out
nop
ja
ret
mov
xlat
test
imul
jecxz
xchg
adc
sbb
scas
dec
mov
cmp
xor
lret
or
stos
push
stos
shlb
ret
shl
dec
test
jp
xchg
arpl
dec
cltd
mov
lret
jnp
pop
dec
sub
outsl
cmp
out
or
inc
cld
int3
cltd
test
cli
mov
rolb
dec
push
or
sub
les
jecxz
lea
call
call
mov
enter
call
or
or
mov
ljmp
adc
cmpsl
pop
xchg
sub
fldl
pusha
cmp
test
adc
insb
inc
daa
loop
cmp
or
test
sbb
cmp
xchg
cli
jp
ret
shr
or
andl
jl
push
mov
enter
pop
in
xchg
or
jb
or
lods
jge
pop
or
into
and
inc
fwait
scas
dec
pop
xchg
lods
decb
add
or
lods
js
dec
cmp
clc
pop
shrl
sub
cld
inc
ret
insb
cwtl
fildl
mov
shl
stos
cli
shr
sub
dec
push
ret
mov
shlb
pop
in
or
dec
and
rcrb
jl
mov
dec
gs
test
mov
dec
lock
push
pop
pop
movsb
out
push
cmpsl
add
subb
and
call
or
xor
sub
cmp
xchg
cli
insb
addr16
lods
xor
loopne
lret
or
mov
dec
xor
sub
adc
sub
adc
sub
adc
inc
xorb
and
dec
out
orl
shlb
movl
jae
mov
push
fsubrl
clc
mov
jne
mov
jmp
insl
imul
loopne
test
dec
mov
out
xchg
push
push
test
or
mov
mov
ljmp
test
mov
js
mov
and
mov
dec
mov
das
dec
lea
shlb
mov
movsl
lea
mov
jb
jno,pn
pop
and
or
imul
notl
pop
push
clc
repz
enter
nop
imul
xlat
push
shrb
sub
push
mov
fnstsw
mov
inc
dec
inc
dec
cld
and
in
dec
lock
push
ret
mov
pop
lcall
dec
push
sahf
pop
xlat
jmp
lods
mov
jcxz
cmp
push
mov
out
popf
sub
adc
test
mov
dec
xchg
cmp
or
insl
add
imul
sbb
cmpsl
mov
sti
mov
jnp
clc
sarb
repnz
mov
outsl
lret
add
in
mov
lods
cmp
inc
insb
jge
sub
rorb
cmp
cs
mov
pusha
test
mov
fcmovne
mov
fucomip
testb
subl
mov
jle
insb
push
sbbb
fwait
inc
push
test
pop
cmp
in
dec
push
add
not
lods
push
ret
adc
insl
mov
enter
mov
sub
aas
sbb
add
lock
loopne
mov
bound
push
sbb
insb
into
lret
fcomps
add
dec
mov
gs
cli
enter
sti
add
nop
jp
clc
pop
int
in
xor
pop
lods
sub
add
mov
cmp
inc
and
sbb
mov
xor
cmp
jo
mov
nop
out
and
imul
test
mov
pop
sub
or
mov
pop
cmp
sbb
and
lea
lahf
mov
test
mov
in
outsl
repnz
mov
dec
cs
lock
dec
mov
dec
xor
fstpt
xor
enter
bound
mov
push
pop
sub
sbb
rol
sbb
jle
sarb
stos
adc
or
pop
insb
rorb
mov
repnz
adc
inc
sbb
xchg
or
notl
stos
xchg
adc
jo
mov
jnp
xor
outsb
mov
repz
enter
mov
mov
mov
arpl
mov
xchg
imul
dec
xor
xchg
std
fucomp
xchg
dec
sbb
xor
andl
dec
sbb
mov
dec
mov
scas
sub
mov
sbb
dec
jbe
cmpsl
cmp
push
dec
cmp
lea
dec
xchg
cld
or
insl
dec
int3
arpl
int3
sub
dec
int3
cmp
int3
mov
xor
sub
dec
int3
cmp
int3
insl
dec
int3
arpl
int3
adc
scas
xor
sub
dec
int3
cmp
int3
insl
dec
int3
arpl
int3
push
insb
int3
arpl
int3
sub
dec
int3
cmp
int3
insl
dec
int3
jg
mov
lcall
sub
addr16
arpl
jge
cmp
loop
pop
jecxz
test
adcb
inc
movsb
in
in
addl
push
in
movsl
dec
in
mov
dec
outsb
movsb
dec
arpl
sbb
or
dec
or
xchg
loopne
out
or
and
lods
add
dec
and
cmp
jno
outsb
stc
and
cmp
and
lret
adc
in
and
lods
aaa
daa
or
and
nop
and
insl
lods
enter
mov
push
in
mov
add
xchg
adc
cs
cs
jp
es
jp
cmp
sub
clc
add
xchg
sbbb
fs
cli
xchg
int
cmpsl
daa
lods
loopne
sub
cmpsl
mov
xchg
out
leave
lods
ljmp
test
mov
dec
mov
jns
push
call
test
dec
in
or
dec
int3
mov
or
int3
or
dec
int3
test
dec
in
int3
stos
fsubp
aaa
subb
in
adc
add
sub
int3
insl
cwtl
xor
dec
xor
sub
dec
int3
cmp
int3
add
call
mov
arpl
int3
sub
mov
cmpsl
jno
jbe
popf
insl
xchg
in
insl
dec
in
out
pop
in
outsl
orl
int3
movsl
dec
int3
test
dec
in
or
sub
inc
nop
repnz
inc
jg
mov
imul
mov
dec
dec
mov
scas
cld
push
in
popa
mov
insb
xchg
lea
int3
or
xchg
adc
push
mov
pop
enter
add
mov
mov
push
mov
or
lock
inc
cli
jmp
in
nop
mov
dec
test
cwtl
je
int
sbb
mov
int3
mov
pop
addr16
jp
imul
xlat
add
mov
mov
mov
test
mov
and
ljmp
xlat
push
daa
stos
jp
insb
js
call
sbb
mov
or
ficompl
lret
cmpsl
arpl
out
push
xchg
in
xchg
je
push
xchg
ljmp
test
mov
jge
out
sbb
lods
xorl
test
fldl
xchg
and
and
mov
xor
push
into
dec
jb
sub
addb
cli
mov
arpl
sub
and
push
cmp
or
cwtl
pushf
fdivrs
xchg
nop
stc
and
lcall
fisttpl
push
inc
pop
push
sbb
imul
lret
adc
dec
rcr
jp
dec
push
xchg
sbb
push
xchg
shrl
push
xchg
xchg
push
push
xchg
push
outsb
or
and
xor
pop
jp
inc
adc
in
into
iret
repz
mov
fsubs
fidivrs
jb
cwtl
xchg
dec
jb
pop
in
ficoms
test
outsb
add
cmpl
dec
nop
pop
in
iret
inc
stc
mov
mov
lods
pop
lods
ficoms
addl
sahf
xchg
dec
jb
pop
push
sub
dec
jb
cmp
stos
add
cli
sti
push
cwtl
ja
mov
dec
mov
mov
inc
mov
pop
jl
into
iret
dec
cmp
in
iret
dec
frstor
std
in
ficoms
dec
mov
ficoms
cwtl
cmp
or
or
dec
cli
jno
aaa
push
mov
push
cli
rcrl
dec
cli
mov
fs
std
pop
ja
rorl
in
push
push
sub
xor
call
in
jge
loopne
cli
ret
mov
cmp
push
into
shlb
cli
in
out
out
or
imul
arpl
push
adc
mov
scas
mov
sbb
and
adc
aaa
nop
xchg
jp
sahf
int3
mov
mov
pop
inc
ret
fisubs
pop
testl
int
mov
mov
sti
dec
inc
sub
mov
insl
iret
sti
dec
ds
dec
add
daa
enter
or
push
js
dec
cmpl
adc
rclb
sarb
or
mov
insl
and
mov
mov
cs
cli
loope
mov
cmp
outsl
mov
fs
in
insl
mov
test
jmp
add
dec
pop
mov
xor
mov
and
insb
jae
mov
dec
dec
addr16
and
push
mov
or
mov
cmp
jg
inc
and
sub
sub
mov
dec
into
jnp
pop
call
add
out
mov
stos
stc
inc
lea
ret
mov
mov
int3
sbb
arpl
xlat
nop
insb
inc
sub
jns
ja
pop
outsb
push
or
cmp
movsl
scas
stos
adc
rcrl
and
ret
adc
pop
pop
and
add
sub
fmuls
sub
mov
mov
nop
test
lods
add
lahf
mov
sub
bswap
mov
repz
lret
lea
test
add
lea
aad
and
sub
push
jle
sbb
mov
out
inc
in
mov
pop
xchg
xchg
test
in
mov
inc
push
sub
jo
aas
jnp
add
push
loope
xor
imul
push
lret
mov
scas
push
add
lahf
arpl
mov
mov
shrb
xchg
cmp
sbb
repz
mov
fldl
sub
mov
push
xchg
cmp
inc
xchg
dec
push
shrl
outsb
pop
push
sub
int
repz
stos
cmp
jecxz
dec
int3
imul
jae
mov
test
mov
lcall
dec
rcr
test
mov
and
rcl
cld
mov
jg
gs
insb
dec
jbe
sub
push
js
stos
dec
lods
xor
fdivs
imul
lock
dec
arpl
mov
pop
lea
sar
mov
lods
iret
outsb
clc
push
mov
addr16
insl
sub
or
stc
fs
lcall
in
insl
fisttpl
dec
push
cld
adc
gs
lret
mov
ljmp
cli
insl
sub
je
daa
or
xlat
clc
sub
shlb
cli
mov
lahf
lods
bound
sar
mov
xor
or
xchg
pop
into
ror
adc
lods
fildll
stc
push
mov
jl
jecxz
lods
adc
insb
or
mov
add
loopne
ja
push
int
out
aam
mov
mov
insl
cli
cmpsl
mov
pop
push
mov
stos
insl
xchg
dec
mov
cli
bound
sbb
adc
or
sub
and
lods
cmp
fisttps
mov
fisttpll
iret
bound
call
lcall
and
stos
sub
mulb
xlat
lock
xchg
sub
jecxz
mov
adc
mov
or
pop
and
mov
inc
adc
shlb
sahf
testb
mov
outsl
pop
push
out
and
mov
nop
push
add
sbb
stos
xor
xchg
test
push
xor
mov
rorb
mov
inc
stc
inc
mov
or
or
rorb
fdivrs
jg
push
mov
push
dec
pop
int
lods
daa
fisttpll
in
pop
imul
sbb
sub
in
xchg
out
cmp
lods
jmp
lods
and
mov
insb
or
pop
lret
mov
jae
ljmp
and
push
sub
nop
sti
in
lock
mov
dec
adc
int3
aaa
dec
aaa
jge
dec
aaa
cmpsl
jo
adc
add
pop
int
repnz
jle
mov
jl
outsb
pop
dec
xor
add
pop
mov
pop
or
push
pop
or
dec
xorl
or
lock
inc
push
addb
shrl
test
jnp
xor
cmpsl
out
pop
jmp
adc
xlat
lods
sbb
dec
add
jmp
ret
fwait
ret
add
jae
lods
xchg
jnp
mov
ja
call
cmp
adc
jg
or
rcll
or
jg
jecxz
mov
pop
cmpsl
mov
mov
xchg
and
jg
in
add
in
jbe
cltd
bound
add
or
outsb
and
fadds
mov
outsl
shlb
pop
push
cwtl
mov
add
push
lahf
dec
scas
outsl
enter
dec
jnp
movsb
push
nop
dec
ja
push
pop
jl
xor
mov
dec
mov
imul
sahf
lods
mov
fsubs
dec
iret
nop
pushf
int
or
xor
mov
lcall
call
lods
daa
jecxz
cs
stos
or
mov
outsl
jae
cmp
out
push
loopne
popf
jmp
pop
test
lret
out
cmp
pop
pop
cmpsb
mov
and
bound
xor
sub
scas
popf
ja
jecxz
shll
or
pop
mov
cld
push
mov
cmp
lock
xchg
les
or
test
push
test
stos
push
jg
mov
pushf
xor
stos
pusha
outsb
mov
jb
call
mov
cmp
fdivrs
add
or
repz
rcr
jns
rorb
pushf
add
inc
nop
jmp
dec
mov
loopne
inc
cmp
pop
sbb
dec
daa
xlat
inc
push
xor
mov
xchg
sbb
rcll
lods
mov
and
adc
clc
out
jl
and
fmuls
dec
lods
arpl
clc
jns
shlb
and
loop
jae,pt
movsl
nop
lcall
movl
pop
jae
mov
stc
push
xchg
inc
cmp
in
push
subb
insb
clc
mov
out
mov
add
repnz
mov
add
inc
cmp
iret
dec
xchg
jnp
inc
mov
push
xor
mov
xor
mov
mov
sub
mov
outsb
stos
add
popa
lods
fcoms
and
mov
in
dec
mov
dec
test
add
cwtl
or
lds
fdivs
mov
cmp
pop
lods
and
loop
out
stos
mov
fwait
outsb
mov
ljmp
xchg
loopne
in
mov
or
loopne
in
pop
adc
jecxz
dec
int
mov
sbb
jge
jo
arpl
nop
lods
mov
addr16
sbb
jge
inc
addr16
mov
or
or
adc
or
mov
das
lea
add
test
jge
out
lea
mov
leave
int3
dec
lea
int3
pop
leave
pop
cs
in
and
insb
mov
int3
rcrb
arpl
dec
iret
mov
arpl
rolb
cmp
mov
and
addl
sub
sub
sbb
adc
jb
int
push
adcb
nop
inc
or
sub
pop
stos
sub
jae
adc
pop
out
repz
fucomi
xor
adc
push
or
cs
mov
cmp
mov
rclb
test
stos
insl
mov
sbb
mov
stc
leave
jg
out
sbb
sbb
scas
and
pop
add
js
lods
ja
in
pop
orl
jns
mov
scas
add
fisubs
inc
xor
sub
sub
test
cmp
jnp
add
jp
lret
sbb
fmuls
cmp
or
sbb
repz
or
dec
dec
or
and
call
bnd
and
roll
lods
sbb
push
mov
pop
cmp
insb
jb
mov
or
mov
or
xor
jp
xor
adc
xchg
push
mov
and
mov
cmc
imul
push
mov
aam
scas
or
xorl
imul
adc
dec
lods
lret
mov
dec
xchg
adcl
mov
push
les
jl
cmpsl
outsl
les
int
pusha
mov
insb
dec
jae
andb
mov
dec
add
sub
dec
decb
pop
or
jl
loop
subl
sub
sub
pusha
in
jg
inc
int
add
jae
in
out
jecxz
sub
lods
pop
bound
mov
jnp
pop
or
mov
lea
lea
fwait
int3
xlat
sti
enter
loopne
ret
mov
cwtl
mov
leave
out
or
pop
pop
int
imul
push
cmpsb
mov
cmpb
nop
repnz
dec
mov
pop
scas
sub
dec
mov
mov
and
outsb
jb
popa
xchg
xchg
lock
mov
in
aaa
arpl
and
jg
into
sar
mov
shlb
mov
add
arpl
pop
mov
jo
sub
pop
push
mov
dec
arpl
aaa
stos
loop
or
or
pusha
lea
xor
adc
pop
xor
ret
dec
push
arpl
gs
or
repnz
fs
insl
mov
jo
sub
in
mov
gs
lods
jne
cmp
and
test
adc
insb
cmpsl
fstps
push
lods
ljmp
lret
ljmp
in
sbb
and
outsb
push
test
jp
lret
into
test
mov
int3
js
push
mov
or
mov
test
xchg
push
adc
add
pop
stos
movsb
scas
arpl
dec
pop
insl
mov
jle
test
pop
pop
out
arpl
mov
mov
mov
inc
mov
ret
js
ret
cmp
or
insb
hlt
jb
sbb
dec
dec
enter
test
addr16
shrb
or
dec
mov
and
or
andl
jae
or
es
cmp
in
add
inc
add
and
jae
fcomps
insl
pop
or
cmpl
cwtl
sub
loopne
or
test
dec
mov
jge
and
dec
aaa
nop
adc
or
jmp
mov
icebp
adc
addr16
mov
out
xchg
adc
mov
push
sub
pop
dec
fs
sub
or
ljmp
into
inc
test
out
subl
insl
mov
loop
dec
pop
sbb
aaa
imul
push
loopne
pop
mov
insb
xor
sub
mov
xor
add
and
and
repz
push
jnp
out
jp
and
ss
pop
ljmp
pop
int
add
das
lods
outsl
dec
push
mov
into
inc
cmp
adc
stos
mov
mov
mov
sbb
push
cli
adc
sahf
push
add
push
cs
insl
push
das
lea
mov
clc
push
lods
ljmp
dec
add
daa
mov
rorb
sbbb
rorl
lea
lea
jb
mov
mov
cmp
sbb
mov
add
inc
add
jae
or
dec
xor
arpl
loopne
out
test
loopne
inc
addl
imul
sub
mov
dec
repz
scas
push
orb
xchg
dec
add
jecxz
shll
cmp
call
arpl
mov
test
mov
arpl
pushf
out
jl
mov
call
jecxz
lods
bound
pop
pop
jle
pop
push
inc
mov
jo
and
lods
mov
or
out
lea
mov
mov
lea
sub
sub
cli
aaa
jb
add
ja
add
js
push
das
dec
stc
mov
and
lea
in
inc
or
add
ds
xchg
pop
or
push
clc
cmp
mov
addr16
dec
pop
mov
sbbb
sahf
xchg
or
jge
or
loop
fiaddl
fstps
xchg
cld
mov
push
loopne
lea
lods
or
cld
shrb
and
outsl
dec
in
mov
call
mov
outsb
add
add
shlb
shll
outsb
out
mov
sub
pop
sbb
mov
jp
ds
mov
push
popa
adcb
cli
adc
xchg
dec
inc
or
in
mov
data16
adc
and
pushf
sahf
adcl
in
mov
cwtl
fisubl
je
clc
inc
sbb
sub
sub
sbb
arpl
or
call
pusha
arpl
mov
cmp
sub
sti
sub
cli
mov
adc
dec
insl
imul
fdivrs
movsl
shlb
pop
dec
hlt
mov
jo
ret
aad
adc
nop
mov
and
call
jnp
out
inc
xchg
or
mov
mov
clc
mov
dec
ljmp
ret
test
lods
cltd
in
daa
mov
cli
mov
adc
mov
sub
insb
sub
pop
lods
dec
adc
fisttpl
push
nop
into
out
add
push
cli
push
inc
popa
inc
in
mov
addr16
mov
mov
inc
dec
cwtl
and
cmp
pop
arpl
repnz
xor
scas
stos
sub
stos
push
add
or
adc
out
imul
pop
mov
ret
or
add
scas
fsts
inc
testb
fsubs
stos
mov
sbb
aam
lret
and
push
imul
jecxz
rolb
test
fidivs
xchg
test
cmp
inc
dec
insl
cmp
cmp
sarb
inc
sahf
xchg
int
test
data16
mov
jnp
jne
mov
cmpsb
int3
sub
mov
adc
push
pop
or
mov
inc
or
subb
test
dec
and
xchg
movsl
push
mov
or
or
inc
push
mov
in
sub
cmp
cs
in
sub
or
and
outsl
xor
loope
and
add
mov
shl
aaa
push
jo
mov
adc
and
out
xchg
xlat
mov
or
pusha
int
insl
add
test
cltd
sbb
xor
mov
adc
imul
mov
loop
aaa
inc
mov
mov
dec
add
dec
sub
jo
and
cmpb
mov
in
std
mov
dec
call
shl
inc
insb
or
mov
and
xchg
sbb
dec
aas
xor
out
sbb
or
testb
mov
sbb
js
sbb
mov
lea
dec
mov
nop
popf
ror
or
inc
je
push
in
and
call
dec
mov
dec
je
push
mov
mov
sbb
and
fwait
sub
mov
xchg
addr16
arpl
jb
loopne
daa
dec
stos
xchg
mov
mov
lret
imul
cld
adc
mov
clc
in
ret
outsl
pop
add
movsb
leave
jmp
cmpsb
mov
aaa
mov
push
mov
shll
outsb
dec
bound
popf
sbb
mov
mov
in
mov
cwtl
push
xlat
or
nop
cli
cmp
fs
push
sub
jo
movsb
shlb
sub
lods
jae
and
in
cld
xchg
lret
mov
add
popf
dec
pusha
daa
stos
mov
xchg
pop
lret
sub
and
ss
cwtl
clc
pop
ret
enter
fimull
push
sahf
add
mov
lods
and
or
or
mov
or
or
repnz
or
dec
lahf
and
subb
js
insl
mov
dec
push
test
cmp
add
mov
int
jnp
add
out
push
ljmp
xchg
lods
or
repz
mov
dec
inc
mov
mov
adc
mov
ljmp
pop
mov
popf
dec
xor
mov
add
dec
out
shl
dec
loopne
mov
inc
cmpsl
pop
mov
or
lock
dec
dec
loopne
mov
test
shlb
pop
dec
je
and
scas
adc
shlb
das
ja
sar
ret
call
test
sub
adc
mov
ret
add
imul
xchg
jnp
jl
mov
into
bnd
xor
mov
insb
mov
shll
or
mov
and
mov
and
int3
dec
nop
fiadds
test
loop
push
aam
add
stos
inc
xor
jg
sahf
std
in
dec
insl
jg
mov
shlb
mov
cli
mov
imul
xlat
add
push
pop
lods
faddl
aaa
ret
adc
push
xor
mov
xchg
push
cmp
sub
mov
add
pop
insl
xchg
jnp
jge
fiadds
xor
orl
xlat
jle
and
or
test
nop
cmp
cmp
adcl
push
lret
insl
xchg
sub
lods
or
xchg
scas
add
cli
bound
dec
mov
adc
dec
out
ror
cmp
lcall
lea
cmp
lods
mov
or
lods
int
add
repnz
jle
jg
int
ret
cmp
mov
dec
cmp
aad
aam
jp
arpl
nop
cmp
cmp
add
lock
push
in
push
leave
adcb
pop
repnz
mov
lea
dec
hlt
sub
cwtl
outsl
in
ret
call
jp
sub
pusha
insl
pop
lea
repz
addl
dec
lods
rorb
add
mov
in
and
out
xchg
jg
cld
cwtl
js
push
push
rorb
or
or
cs
lret
adc
mov
mov
enter
dec
scas
int
iret
int3
ret
ror
mov
iret
xor
mov
sub
arpl
inc
fwait
sub
jae
lret
fs
xorl
sti
inc
repz
shll
mov
adc
inc
mov
add
pop
rclb
adc
mov
mov
mov
sbb
push
push
fs
stos
dec
add
inc
mov
pop
jg
sub
insl
xor
ja
enter
test
xor
adc
mov
xor
push
or
lret
nop
push
sub
clc
inc
enter
and
adc
xchg
addr16
aad
adc
cli
addr16
push
arpl
xor
int3
enter
cld
out
xchg
xchg
daa
call
sahf
xor
lods
nop
pop
int
arpl
and
jecxz
jbe
add
rorl
insb
dec
or
ret
xchg
cwtl
out
and
js
in
push
into
movsl
or
mov
mov
dec
ret
xchg
add
out
je
sub
push
nop
outsb
cltd
mov
mov
or
nop
cmp
mov
gs
add
dec
dec
push
cmp
arpl
pop
iret
push
sub
sbbl
ja
repnz
lods
mov
or
mov
outsb
mov
fisttpl
ss
inc
jns
and
mov
inc
cmp
add
xor
dec
push
mov
or
and
mov
xchg
loop
dec
push
push
dec
lea
adc
neg
ljmp
shl
lret
fadds
mov
sahf
dec
jge
add
lods
push
xor
push
push
pop
out
push
sub
mov
fmuls
js
cmp
enter
dec
mov
std
enter
shrb
sub
pop
sbb
imul
iret
push
test
xchg
jmp
movb
aad
sbb
punpckhwd
add
dec
imul
into
arpl
dec
sub
jmp
mov
aam
mov
mov
or
insl
add
mov
dec
mov
sub
pop
enter
mov
jmp
mov
sbb
ljmp
int
dec
shlb
xchg
lock
jns
iret
dec
in
stos
clc
mov
outsl
xchg
ret
clc
lahf
inc
int
lods
dec
pop
cmpsl
sub
lods
inc
adc
dec
ja
in
je
outsb
or
push
inc
push
test
sub
and
imul
inc
adc
lods
add
mov
mov
dec
nop
mulb
xor
ljmp
pop
lods
jp
jbe
leave
int3
cmp
sub
lcall
mov
lods
sti
push
in
cmp
jae
mov
cmp
mov
cmp
nop
out
dec
dec
or
xchg
int3
push
add
cltd
pop
shlb
cmp
std
sub
addr16
imul
adc
mov
lea
lods
sar
mov
sub
xor
jo
outsl
cld
mov
shl
sbbl
leave
mov
xchg
cmp
cmp
pop
sub
cmpsl
mov
stos
add
and
dec
ja
or
sbb
sbb
push
stos
mov
mov
lret
lret
sub
push
mov
jecxz
addr16
or
mov
leave
sub
fimuls
ljmp
sbb
std
sub
nop
call
fisttpll
out
stos
mov
scas
lods
lods
sarb
fs
aam
or
fisttpl
mov
mov
jg
ja
push
mov
sbb
sbb
xchg
xor
outsb
add
bound
mov
xor
dec
lods
or
fsubr
imul
or
stos
out
inc
push
orb
push
jmp
mov
enter
dec
push
loop
jno
shll
pop
insb
add
or
in
cmp
cwtl
js
outsb
clc
es
outsl
shr
mov
sbb
int
or
repnz
lods
fimull
add
push
fsubrl
sub
mov
cmpsb
cmpl
xor
ljmp
roll
adc
push
push
gs
shlb
add
lcall
mov
cli
loope
hlt
nop
jmp
dec
addr16
xor
addl
or
idivl
in
mov
jae
push
dec
popa
insb
jnp
jg
insb
vphaddbw
or
scas
sbb
inc
and
inc
lcall
xchg
cmp
loopne
jg
movl
mov
movb
lods
inc
fwait
sub
add
lea
arpl
call
out
jo
daa
adc
test
dec
fcmove
sbbb
fidivl
fmull
fwait
mov
je
or
dec
lea
add
fiadds
fucomi
xor
pop
cmp
dec
jp
cli
je
or
addr16
or
cltd
jecxz
sub
jae
xlat
dec
dec
dec
cs
dec
test
pop
test
ret
testl
cmp
lahf
dec
popf
cmp
cmp
jle
mov
in
outsb
adc
push
sub
jnp
or
fdivrs
adc
repnz
dec
fsubl
test
jle
ljmp
ret
mov
jns
outsl
or
dec
mov
push
mov
adc
ret
lcall
subb
jnp
pop
jmp
xchg
in
inc
jae
roll
stos
ljmp
add
in
or
adc
ret
xor
int
fldt
mov
pop
inc
sbb
imul
mov
lods
stos
xor
nop
xchg
mov
fildll
fcoml
push
or
insl
fdivs
cmp
fcomp
dec
and
mov
out
call
hlt
sti
sub
leave
cmp
inc
out
add
fimuls
mov
add
xlat
sbb
inc
rorl
int3
xor
sub
lock
aaa
ljmp
jge
and
mov
push
mov
mov
xchg
clc
mov
lods
mov
pop
lods
cwtl
ret
sbb
rorb
packssdw
mov
dec
cmp
mov
fiaddl
or
xor
dec
push
sub
or
or
pop
test
sbb
mov
xchg
or
rorl
xchg
push
lret
lods
push
xlat
lret
loop
je
inc
popa
inc
mov
and
mov
clc
out
push
or
lods
aaa
dec
insl
fsubl
adc
aaa
lods
add
cmp
mov
xchg
xor
call
ret
pusha
stos
insb
dec
lahf
test
fdivp
mov
jmp
dec
mov
nop
pop
add
fwait
clc
mov
lea
popf
fcmovnbe
push
add
mov
rclb
mov
mov
lods
and
jge
push
shlb
gs
adc
dec
or
xor
shlb
outsl
bound
mov
or
push
sbb
pop
dec
dec
mov
or
call
jg
mov
sub
enter
jno
lock
cld
in
xchg
dec
pop
lret
pop
pop
xchg
cmp
cmp
orb
xchg
ror
cmpsl
shrb
lret
cmpsl
or
nop
lahf
lods
jno
or
pop
mov
or
mov
or
dec
xchg
stc
pop
in
insl
pusha
cmp
movsb
mov
xorl
int
jo
leave
loopne
inc
lahf
dec
jb
or
xchg
int
cwtl
lods
dec
stos
and
cmp
push
sub
ljmp
mov
lods
ret
jge
movsb
insl
push
mov
mov
lret
movsb
loop
cwtl
loopne
outsl
mov
std
push
or
sar
mov
push
cmp
mov
bound
gs
shrl
mov
lea
daa
fdivrs
arpl
fstpl
add
or
or
ds
das
das
mov
pop
mov
xchg
xchg
imul
pop
lods
pusha
mov
arpl
add
cli
movsb
in
call
dec
ror
stos
push
mov
add
push
orb
jge
fidivrl
or
push
ret
pop
mov
lahf
or
inc
sub
testb
mov
stc
adc
repz
adc
push
or
xchg
mov
fxch
roll
or
dec
out
mov
sub
mov
jnp
add
push
xchg
mov
lret
pop
push
mov
testl
pop
xor
lods
pop
fstl
ret
add
fwait
sub
lods
mov
insl
movsl
enter
and
js
int3
fiadds
or
pop
pushl
jg
pop
adc
lret
scas
sub
cmpl
lods
xchg
xchg
jae
addb
pop
pop
lea
in
dec
push
arpl
js
fsubr
mov
add
sub
add
dec
mov
jno
xchg
pop
scas
lret
into
outsb
sub
pop
mov
cmpsl
cwtl
xchg
sub
leave
daa
nop
fimull
cmpsl
outsl
addl
mov
out
decb
rcr
dec
xchg
cli
pop
sub
enter
fimull
ror
bound
subb
mov
jb
dec
jo
mov
popf
or
int
mov
or
add
outsb
or
xchg
mov
test
fucomi
sub
mov
inc
mov
mov
and
pop
push
pop
adc
int
es
mov
push
cmp
mov
sub
lret
adc
stos
pop
mov
and
add
insl
sub
arpl
pop
xor
dec
sti
jle
jnp
inc
stos
xchg
add
cmp
test
fsubrs
mov
lea
push
xchg
jns
ja
jecxz
push
dec
and
ret
jns
pop
adc
jb
andl
cld
fs
lods
mov
dec
and
mov
loope
jle
scas
jns
xchg
xchg
xchg
aad
add
or
clc
adc
dec
jae
out
cmp
jecxz
arpl
lcall
iret
bswap
add
int3
ljmp
stos
into
orl
or
int3
sub
stos
jecxz
iret
jae
orl
add
iret
punpckhwd
int
mov
dec
or
test
shrb
or
inc
sub
dec
jnp
mov
scas
push
enter
stos
das
fwait
jp
mov
lods
mov
into
sub
repz
xor
shl
add
xor
inc
fidivrl
or
jbe
imul
and
sub
aaa
dec
or
in
insb
push
sub
xchg
ret
je
jp
outsl
iret
insb
sub
scas
jmp
movl
push
cmpsl
sbb
movsl
add
pop
inc
clc
cs
fwait
out
in
and
pop
int
ret
test
or
insl
test
out
je
lods
or
dec
mov
repnz
je
or
xchg
pusha
lea
mov
fdivl
lea
int
fcoms
or
or
repz
cli
fisttps
lods
pop
dec
out
mov
push
dec
fildl
jae
fisttps
int
dec
pop
sahf
push
mov
push
daa
cltd
dec
mov
cmpsl
or
lods
mov
iret
adc
out
testl
mov
sub
xor
sub
cmp
mov
int3
lods
or
insl
mov
fwait
lret
dec
ljmp
stos
add
enter
add
out
into
insb
inc
pop
rol
daa
ret
ljmp
add
ret
rclb
das
dec
cltd
bound
dec
pop
add
out
jle
call
insl
cmp
jne
mov
nop
or
sbb
add
push
icebp
add
add
nop
or
scas
sar
and
xorl
call
ret
lods
add
xchg
fs
movsb
in
and
negb
jge
or
int
dec
ljmp
jmp
popf
mov
jb
lea
ret
pop
test
stos
js
xchg
cmpsl
xchg
orb
mov
rol
daa
scas
inc
inc
inc
and
cld
mov
push
out
lods
and
test
leave
addr16
insl
stos
add
addb
stos
push
xchg
or
addb
dec
nop
mov
add
fs
jbe
push
push
shrb
push
mov
sbb
lods
fs
jp
gs
sbb
insb
sbb
inc
leave
and
mov
dec
cmp
and
dec
inc
add
and
imul
test
daa
inc
fwait
pop
mov
subb
js
sub
adc
loopne
xor
ds
add
stos
rorb
arpl
loopne
inc
push
test
jns
mov
lea
test
nop
sbb
dec
data16
insl
or
lret
lret
mov
insl
nop
mov
xor
sub
push
push
into
or
nop
mov
or
xchg
mov
cld
cmp
loopne
pop
stos
jecxz
jae
in
jae
arpl
xchg
dec
sbb
jmp
cmp
call
into
ja,pt
scas
arpl
mov
test
arpl
sbb
scas
push
arpl
dec
mov
out
cld
dec
mov
or
mov
and
enter
sbb
fisttpl
js
in
cwtl
dec
add
dec
int3
sub
shr
xor
fsubrl
dec
xlat
out
mov
in
in
push
js
mov
mov
and
insb
add
cwtl
test
mov
scas
shlb
sub
or
test
lods
adc
add
sub
adc
adc
xor
mov
aaa
sub
outsb
push
stc
dec
imul
add
mov
mov
dec
test
dec
push
enter
jge
daa
jns
add
push
mov
lea
mov
mov
es
adc
into
or
mov
pusha
jbe
lods
lea
insl
push
lock
sarb
int
insl
mov
insl
and
jbe
mov
insl
out
mov
cmp
jge
pop
lods
pop
cmpsl
sbb
dec
loop
xor
dec
sub
shr
in
and
dec
daa
loopne
adc
adc
arpl
jae
mov
add
or
lods
data16
lods
pop
test
lods
pop
test
dec
pop
test
lea
or
push
push
or
in
lods
pop
push
std
imul
push
pop
push
test
dec
mov
out
or
push
test
dec
push
test
insb
pop
cmpsl
das
test
lods
pop
test
addr16
in
aam
addr16
lods
pop
test
lods
pop
test
dec
pop
test
dec
das
test
lods
mov
test
insb
or
cmpsl
pop
test
lods
ljmp
test
pop
call
and
pop
into
loop
into
loop
lods
pop
call
dec
mov
movsl
pop
call
movsl
pop
call
dec
std
aaa
lods
das
test
lods
mov
test
dec
test
push
test
dec
push
test
insb
pop
cmpsl
das
test
lods
pop
test
addr16
in
mov
mov
or
and
add
mov
or
push
int
sub
dec
add
xchg
mov
test
lods
push
lods
outsl
out
fwait
in
push
or
adc
test
clc
dec
inc
mov
add
scas
movsb
sub
jae
jecxz
or
lret
loopne
clc
adc
into
push
sarb
repz
scas
dec
add
movsb
add
fmull
add
lea
mov
jmp
cwtl
mov
dec
mov
gs
out
fcompl
mov
lock
jno
ret
cmpsl
sbb
bound
ret
js
enter
pop
sbb
arpl
mov
mov
pusha
pop
mov
add
ret
mov
dec
movsb
daa
fcomp
lea
lods
or
push
fisttps
rclb
data16
int
fcmovnb
mov
jge
xchg
mov
add
jge
sub
jnp
or
mov
mov
add
xchg
sub
mov
out
push
xor
lock
adc
mov
rolb
out
sbb
imul
lods
stos
loop
mov
mov
dec
insl
pop
ret
xor
cmp
lea
fs
lods
in
in
daa
mov
jge
pop
test
arpl
or
in
lods
or
sub
in
gs
in
gs
lea
mov
sub
in
in
jmp
fs
sub
lods
pop
sub
mov
or
sub
add
and
xor
and
xor
and
cmp
pop
dec
adc
and
xor
xor
int
sub
gs
dec
and
arpl
lods
insl
sub
sub
dec
mov
sub
sub
add
int
sub
gs
int
sub
pop
call
dec
shll
shll
shll
shll
shll
pop
call
loop
int3
and
call
shll
test
call
fs
repz
inc
mov
outsl
cmp
insb
out
ljmp
popf
jge
divl
jnp
mov
orl
lea
cmp
imul
jbe
mov
test
mov
push
imul
adc
rolb
push
out
pop
mov
pop
test
enter
mov
orl
lea
stos
nop
adc
push
dec
push
mov
shlb
dec
pop
push
in
mov
and
clc
in
inc
into
sub
mov
sti
ret
out
lea
clc
mov
repnz
mov
push
test
xor
lcall
push
xchg
ret
sub
fs
cmp
inc
adc
dec
mov
notl
shrl
and
in
mov
insl
mov
insl
or
cld
outsl
pusha
inc
pop
jecxz
mov
out
lea
dec
repnz
or
adc
push
imul
push
pop
adc
mov
into
cmp
lcall
adc
mov
mov
repz
dec
test
in
dec
or
in
lods
in
gs
in
out
insl
inc
in
gs
pop
or
lods
pop
or
pop
or
dec
pop
or
dec
das
or
mov
das
or
or
push
or
mov
or
or
or
in
gs
pop
or
lods
das
or
lods
pop
or
lods
pop
or
imul
or
or
lods
or
push
or
dec
mov
or
pop
call
and
pop
into
loop
out
or
into
loop
lods
pop
call
dec
test
pop
call
in
lods
pop
or
lods
pop
or
dec
aaa
or
push
jecxz
or
dec
das
or
dec
mov
or
or
in
xchg
pop
sub
jae
fs
push
repz
lea
sbb
dec
add
out
and
mov
sub
daa
shl
inc
adc
aam
mov
xchg
fsubr
mov
ficompl
and
add
push
dec
dec
and
push
or
mov
or
mov
and
mov
and
mov
faddp
std
faddp
pop
decl
sub
rolb
dec
or
sbb
push
or
adc
push
dec
insl
adcl
mov
insb
xor
mov
mul
sub
dec
dec
push
lea
stos
test
stos
push
adc
adc
test
sbb
push
call
jo
stos
dec
pop
or
ss
fmuls
fisubl
in
push
lahf
cmp
pop
xor
ja
mov
addr16
sub
and
pop
popa
adc
inc
in
mov
in
or
mov
xor
add
stos
xchg
scas
or
call
pop
fsubl
jns
mov
push
imul
jne
insl
lock
push
xor
cld
sub
dec
cmp
pop
adc
jo
jecxz
call
mov
shll
call
mov
shll
call
mov
call
mov
bound
test
mov
xor
mov
xor
mov
insl
call
test
mov
insl
call
mov
push
dec
shlb
xor
ret
mov
mov
shll
leave
sub
inc
dec
push
outsb
dec
lret
aam
and
xor
mov
pop
insb
inc
xlat
jl
pop
outsb
mov
mov
sbb
je
xchg
dec
lds
adc
lea
dec
xchg
in
xlat
cs
insb
push
jge
and
xor
insl
xchg
test
std
push
pushf
into
cmpl
xchg
inc
sbb
mov
inc
repz
sahf
ja
dec
nop
mov
out
and
cmp
xchg
add
or
mov
jne
mov
xchg
jmp
lods
cmp
add
push
cmp
add
inc
push
and
xor
outsl
cli
lret
or
mov
add
or
movsb
and
mov
dec
and
nop
lcall
jnp
xor
dec
add
dec
shll
inc
or
sbbb
xchg
add
and
mov
insb
mov
dec
data16
arpl
dec
sbb
xchg
insl
dec
mov
lods
sub
stos
mov
xchg
insl
and
xchg
cli
aaa
sbb
insl
sub
fs
pop
insl
mov
xchg
adc
jge
xor
sti
or
cmpb
dec
jns
push
fcomps
dec
and
sti
push
pop
add
out
in
pop
addr16
dec
test
xchg
mov
and
hlt
dec
in
outsb
dec
into
mov
outsb
push
mov
jge
lods
mov
lods
cmp
test
sub
push
xchg
push
mov
jae
mov
jnp
dec
sbb
stc
xlat
sahf
or
jge
or
sar
int
or
test
cmp
int
dec
jmp
jmp
and
xor
and
xor
and
xor
adc
lret
mov
push
sbb
and
arpl
imul
xor
xor
adc
sub
mov
push
arpl
jmp
arpl
jmp
jmp
jmp
arpl
jecxz
jmp
addr16
arpl
push
cltd
int3
dec
jmp
xor
jmp
jmp
stos
dec
cmp
sar
jmp
pop
call
dec
shll
shll
shll
shll
shll
shll
shll
shll
shll
loopne
xor
frstor
push
pop
ja
movsl
in
in
mov
or
call
or
mov
fstpt
int3
xor
or
sub
lret
mov
fsubrs
jp
or
xor
js
jg
mov
call
in
out
lock
inc
pop
lods
sub
xchg
out
push
sub
dec
dec
add
sub
push
add
xchg
fidivrl
cwtl
sub
lock
add
lods
xor
shlb
arpl
int3
cmpb
mov
mov
xor
imul
cwtl
cli
stos
push
dec
lods
nop
cmp
outsb
insl
mov
push
dec
xchg
jbe
mov
add
sbb
xchg
repz
jae
insl
mov
in
retw
arpl
fucomi
aaa
push
jge
stos
mov
xor
mov
dec
insl
lcall
dec
in
mov
subb
ja
mov
dec
dec
addr16
mov
testb
jecxz
dec
cmp
lcall
inc
leave
shlb
fmull
dec
inc
mov
call
arpl
cld
or
cmpsl
mov
jb
scas
insb
pop
dec
test
add
cld
shrb
mov
fst
inc
fdivrs
mov
inc
std
mov
mov
in
mov
loopne
or
stc
cmpsl
inc
pop
jae
inc
fmuls
or
ljmp
inc
push
dec
push
and
in
dec
enter
dec
outsl
out
outsb
xchg
lcall
push
movsb
stos
cwtl
cli
add
in
in
ds
stos
mov
ret
lret
scas
cmp
cwtl
push
pop
jge
fwait
sbb
insl
int
jo
and
add
loopne
mov
cwtl
and
in
imul
pop
iret
mov
repnz
mov
insl
add
jnp
xor
inc
or
arpl
jae
addr16
and
push
mov
adc
sub
subl
dec
dec
cmp
dec
dec
xchg
or
jae
or
sbb
scas
jns
sahf
push
leave
mov
and
push
lds
into
xor
popf
push
mov
cmp
leave
pop
dec
pop
leave
aaa
dec
pop
leave
aaa
dec
aaa
leave
aaa
or
leave
das
scas
pop
leave
push
sti
sub
push
fwait
stos
leave
in
in
fmull
scas
leave
adc
pop
leave
aaa
dec
pop
leave
dec
roll
leave
push
dec
push
leave
or
push
leave
or
or
fs
leave
les
das
leave
mov
in
in
fmull
xchg
leave
aaa
dec
pop
leave
dec
leave
enter
mov
leave
mov
add
or
leave
call
and
call
shll
shll
shll
shll
shll
shll
shll
pop
call
int
sarl
mov
leave
adc
dec
leave
or
sbb
into
mov
xor
leave
and
xor
xor
sub
adc
add
imul
dec
imul
fdivrs
in
scas
lods
clc
fs
dec
push
xor
stos
mov
subl
lods
mov
jo
and
in
or
or
push
jns
scas
pop
ja
insl
imul
dec
lea
push
mov
jp
jp
je
fiadds
sub
sahf
subl
or
mov
cmc
popf
inc
mov
les
cmp
mov
xor
sbb
pop
jmp
adc
int3
fsubr
rcrl
mov
shlb
pop
pop
ljmp
insb
mov
bound
sub
or
insl
inc
mov
jae
dec
scas
into
jns
or
xor
adc
mov
add
xor
pop
int
xchg
mov
enter
movsl
out
mov
loop
aaa
insl
sub
add
jmp
pop
dec
fsubs
arpl
rcr
push
jecxz
dec
mov
and
mov
int
int
push
data16
sbb
lea
xchg
fisubl
test
jo
int3
push
jae
pop
test
add
mov
std
in
call
data16
xchg
jg
dec
mov
mov
js
xchg
mov
jge
dec
sbb
sbbl
pop
xor
inc
mov
fs
inc
add
insl
lock
mov
outsb
clc
andb
dec
push
add
test
push
stos
jp
insl
ds
cli
loope
adc
adcl
add
clc
adc
pop
sbbl
or
shll
cwtl
insb
outsb
mov
dec
push
mov
dec
mov
inc
add
cmp
xor
stos
loop
sub
jp
mov
repnz
gs
mov
out
jnp
outsb
sub
stos
std
into
dec
sub
jne
jg
leave
cmp
daa
arpl
pop
ret
jge
inc
dec
orl
sub
push
dec
add
or
add
pop
testl
and
cmpl
insb
sub
push
dec
and
outsb
add
loopne
add
into
mov
xor
test
ret
dec
dec
mov
int3
xchg
in
mov
sti
xor
mov
enter
jb
leave
out
mov
mov
jge
jle
mov
jge
cmc
mov
jnp
in
int3
sub
and
adc
push
outsb
mov
push
insb
sbb
stc
sub
xchg
mov
sbb
or
push
cld
dec
lods
lods
and
adc
lcall
daa
cmp
pop
pop
call
adc
xchg
and
xchg
stos
jge
out
dec
scas
mov
out
mov
or
mov
js
add
jo
dec
std
sbb
movsb
dec
mov
jb
clc
rcrl
addr16
pusha
mov
xor
mov
sbb
je
xor
add
insl
sbb
in
adc
and
lret
fs
lods
push
mov
mov
xorl
lods
testb
sub
daa
sbb
dec
rcrb
test
xchg
jge
test
lock
adc
fmul
mov
mov
jno
lret
jmp
rcrb
fidivrl
cli
mov
cmp
fcmovnb
or
sbb
nop
sbb
subl
sub
push
or
movsb
dec
push
daa
outsl
jp
xchg
loopne
enter
test
mov
mov
popa
sub
fs
imul
in
sbbb
movsb
xor
shlb
dec
test
mov
insb
lea
push
mov
cli
sbb
gs
cmp
call
mov
daa
imul
js
inc
and
clc
mov
arpl
jae
ljmp
or
mov
inc
aaa
inc
add
sub
add
cmpsl
jae
fsubr
mull
flds
jp
dec
arpl
cwtl
into
sub
lods
shlb
stos
push
dec
cmp
les
dec
and
fcomps
add
fmuls
pop
or
ss
mov
enter
xchg
mov
jecxz
pop
jnp
cmp
sbb
insb
and
and
cmp
inc
sbb
mov
scas
xchg
sbb
jbe
pop
pop
mov
imul
cmp
cwtl
shll
or
mov
enter
js
push
hlt
orb
mov
rcrb
cli
jns
imul
inc
and
arpl
sub
rclb
fsubl
test
imul
adc
mov
leave
mov
std
mov
mov
in
or
adc
sub
mov
test
sbb
or
cmp
mov
jg
std
or
lea
test
das
int
fmuls
push
lea
push
insb
psubw
lea
ja
pop
lea
repz
and
and
fs
adc
xor
and
xor
or
mov
test
lds
mov
popf
mov
or
std
mov
lods
mov
aaa
inc
test
std
int
and
cld
dec
aaa
sbb
pop
lea
cmp
and
jmp
in
inc
lods
or
lods
aaa
sbb
sbb
dec
pop
or
lods
test
pop
push
cmp
shll
pop
mov
cmp
ja
xchg
fs
mov
sbb
fs
mov
pop
add
ja
xchg
sahf
ja
xchg
push
ja
xchg
xchg
pop
adc
sbb
sbb
dec
outsb
sub
mov
mov
scas
mov
xor
test
nop
xchg
dec
fimull
adc
lods
dec
or
int3
or
sahf
pop
in
das
fisubrs
pop
in
pop
pop
test
jl
pop
fldcw
imul
xchg
lea
imull
or
lret
or
mov
stos
or
dec
das
push
cld
or
sub
jnp
pop
mov
pop
mov
roll
adc
add
cmp
mov
jo
push
arpl
mov
jp
fs
sub
mov
test
dec
arpl
xchg
add
addr16
addr16
xchg
mov
xchg
mov
mov
sbb
dec
dec
xchg
mov
mov
add
adc
cmp
mov
xchg
repnz
add
jmp
mov
aam
add
dec
mov
call
xchg
aam
xor
add
push
mov
xchg
jmp
add
inc
in
xchg
test
xchg
fwait
loope
lret
cmp
sbb
clc
cmpsl
xchg
xchg
subl
mov
fimull
mov
add
dec
inc
sbb
out
in
add
push
lea
out
sub
dec
in
xchg
mov
lahf
mov
xchg
mov
dec
or
pop
dec
xchg
mov
mov
mov
mov
xor
sahf
mov
push
sbb
mov
push
mov
mov
scas
jae
sbb
testb
ljmp
sub
pop
pop
pusha
jnp
mov
mov
inc
mov
jbe
inc
rcr
mov
lea
sub
mov
insl
nop
jmp
aaa
mov
movsl
xchg
cld
sub
into
push
pop
sbb
repz
jmp
push
dec
test
xchg
cmp
mov
inc
loopne
rolb
enter
push
lods
loopne
inc
mov
or
addl
lods
mov
mov
mov
ret
xchg
imul
mov
orl
pop
and
pop
insl
xor
lock
and
pop
sbb
mov
jae
dec
cltd
pop
daa
insl
mov
xchg
repnz
cltd
in
cmp
xchg
bound
add
insl
shrb
push
nop
fcmovu
movsl
mov
jge
in
call
lahf
mov
jnp
inc
lds
or
loopne
pop
in
testl
imul
pop
pop
imul
mov
aaa
push
jnp
dec
xor
push
out
lods
xorl
add
dec
arpl
shlb
movsl
xchg
push
shll
subl
call
stos
loop
ja
lcall
mov
scas
mov
inc
jecxz
int
fdivrs
test
pop
mov
subb
sub
clc
pop
pop
mov
xor
test
push
mov
mov
pusha
dec
outsb
sub
clc
imul
lcall
and
pop
movsb
sub
stos
in
out
push
mov
pop
adc
sbb
jmp
push
dec
inc
ljmp
and
rolb
sub
and
dec
dec
or
jl
xchg
adc
cmpsl
test
dec
mov
mov
test
imul
and
mov
testl
inc
iret
imul
insb
in
int3
loop
aaa
jo
add
in
dec
mov
pop
xchg
paddsb
clc
xor
stos
mov
jnp
xor
decl
xor
or
popf
xchg
mov
rol
inc
imul
mov
push
add
cmp
xlat
mov
adc
xor
mov
idivl
dec
inc
imul
arpl
outsb
js
scas
sub
arpl
sbb
cltd
andl
mov
mov
adc
in
sbb
lods
aaa
dec
mov
addl
loopne
pop
dec
ja
pop
in
dec
mov
xor
dec
popf
rolb
xorl
repz
xchg
out
dec
in
fs
jecxz
pop
iret
insb
push
dec
dec
add
pop
mov
push
scas
pop
test
mov
daa
sahf
mov
popf
push
and
dec
es
mov
lea
mov
jmp
mov
outsl
lods
or
mov
and
and
adc
add
aaa
pop
ja
dec
fbld
test
pop
cmpsl
xorl
xchg
fisubl
insb
enter
cli
test
lods
inc
insl
in
dec
inc
mov
add
inc
mull
mov
push
cmpsl
shrl
aaa
out
fiaddl
dec
jae
addr16
imul
dec
dec
or
lods
dec
add
and
xor
jae
std
dec
scas
scas
xchg
lret
int3
subl
fmull
dec
stc
out
dec
fsubrl
and
pop
sarb
into
mov
call
lret
inc
xchg
insb
or
stos
adc
jns
pop
daa
arpl
mov
push
sub
jecxz
aaa
cmpb
mov
stos
xlat
sub
or
repz
jl
push
or
lods
mov
out
lcall
lret
cmp
mov
fisttps
lahf
cmp
mov
daa
push
pop
cli
sub
shrb
ficomps
test
popf
out
inc
dec
orb
sbb
nop
mov
dec
in
jne
cli
xchg
fdivrs
enter
pop
in
mov
mov
xchg
xchg
dec
jge
jb
lods
bound
jle
mov
mov
cmp
push
daa
mov
stos
dec
or
jp
mov
shl
cmp
push
or
insb
ljmp
addr16
and
rolb
dec
sbb
dec
mov
test
fistpl
add
mov
and
mov
lods
std
call
dec
sub
mov
je
in
cmp
lock
mov
sbb
mov
scas
sub
cmpsl
xchg
mov
loopne
in
add
stc
cld
std
inc
fisubl
cmpsl
push
sbb
dec
jl
sub
std
xor
sarb
mov
inc
ja
pop
stos
jne
dec
and
loopne
pop
into
loop
into
loop
into
loop
faddp
jge
sbbb
push
lock
jmp
mov
push
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
or
repz
loopne
adc
adc
and
repz
or
repz
in
or
repz
repz
or
repz
repz
sbbb
pop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
faddp
jge
sbbb
pop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
or
repz
loopne
repz
das
rcr
aaa
and
repz
or
repz
pop
lods
loopne
ljmp
rcr
aaa
and
repz
or
repz
sub
sbb
fsubrl
rcr
das
rcr
das
rcr
das
rcr
das
rcr
aaa
push
lock
das
rcr
aaa
mov
mov
in
or
mov
in
or
mov
in
or
sub
sbb
sub
in
dec
stos
fwait
imul
sbb
shrb
fdivl
and
sbb
lods
sub
adc
adc
push
sub
dec
and
mov
fsubrl
rcr
das
rcr
das
rcr
das
rcr
das
rcr
das
test
and
pop
ljmp
pop
dec
dec
lahf
push
mov
mov
dec
fldcw
dec
adc
push
sbb
mov
xchg
or
scas
jae
adc
push
sbb
mov
dec
fldcw
dec
adc
push
sbb
push
pop
fldcw
or
push
dec
les
dec
dec
inc
push
mov
lods
xchg
push
inc
stos
add
dec
mov
aaa
pop
dec
mov
int
push
imul
stos
fwait
push
daa
dec
inc
push
in
les
sub
stos
add
outsb
dec
out
push
ljmp
lea
loop
int
mov
loop
int
mov
push
rep
out
push
shll
shll
shll
shll
shll
shll
sub
int
mov
insl
sub
stos
sub
add
adc
into
add
sub
xchg
insl
sub
scas
mov
adc
and
sbb
mov
sub
or
mov
in
or
mov
in
dec
testb
mov
int3
mov
mov
inc
jmp
cmp
enter
ds
lret
pop
shlb
inc
jecxz
in
in
or
dec
xchg
and
xchg
sti
pusha
clc
inc
and
dec
push
xchg
shll
push
dec
and
xchg
jle
xor
push
or
dec
nop
push
xchg
lods
or
pop
push
mov
dec
in
mov
in
dec
sbb
add
dec
lods
inc
push
jae
rorl
inc
dec
paddsw
sub
sbb
pop
mov
arpl
dec
out
lahf
dec
dec
cltd
add
dec
orl
mov
into
loop
into
loop
into
loop
faddp
jge
sbbb
pop
into
loop
into
loop
pop
dec
lods
pop
pop
add
or
mov
mov
or
push
push
and
or
push
dec
sarb
movsl
or
in
add
or
in
out
or
or
xchg
in
and
test
lods
enter
popf
mov
or
or
repz
cmp
push
divl
imul
popf
dec
dec
imul
int
mov
loop
int
mov
loop
int
mov
loop
int
mov
xchg
xchg
dec
xlat
and
xor
jae
and
and
and
jae
adc
jae
scas
mov
adc
jae
aas
dec
dec
rol
das
rcr
das
rcr
das
rcr
das
rcr
das
rcr
das
rcr
das
rcr
das
rcr
das
stc
in
push
out
stos
jge
pop
out
mov
stc
int
dec
addr16
xor
sub
dec
dec
cmp
add
sbb
insl
out
dec
sbb
bound
lahf
or
stos
lods
pop
mov
mov
mov
or
or
arpl
out
xchg
or
dec
sub
fs
or
or
lods
and
dec
imul
mov
xorb
popa
or
or
or
or
leave
mov
test
popf
or
or
sbb
idiv
scas
add
leave
loop
mov
cli
lea
int
mov
loop
int
mov
loop
int
mov
insl
jae
stos
jae
adc
into
adc
into
add
xchg
into
out
inc
aam
add
incb
xor
aad
jae
dec
shll
shll
js
aad
out
insl
jnp
mov
arpl
arpl
arpl
enter
rep
xchg
leave
push
arpl
aaa
jae
int
mov
loop
int
mov
loop
lea
pop
mov
dec
xchg
insl
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
in
cmpsb
mov
and
shll
shll
shll
shll
shll
jae
mov
dec
bound
aad
es
xlat
and
and
jae
push
insl
jae
scas
mov
adc
xor
xchg
xor
lea
mov
shll
shll
shll
shll
shll
shll
in
push
dec
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
movsl
jnp
and
pop
data16
ficoms
jnp
scas
mov
adc
xor
mov
jnp
lea
test
mov
fs
sub
das
lret
and
test
les
dec
data16
call
inc
lret
or
testb
mov
out
push
mov
movsb
dec
mov
mov
enter
jo
cmp
cmp
mov
jmp
push
cmp
fwait
mov
mov
ljmp
fildll
dec
outsl
sub
dec
enter
mov
lods
shr
inc
mov
ljmp
pop
outsl
sti
ljmp
imul
ljmp
daa
mov
mov
test
ljmp
testl
test
les
adc
das
lret
xor
mov
les
mov
ret
inc
rclb
lret
and
mov
into
inc
rclb
lret
and
mov
into
adc
packsswb
push
dec
shll
shll
shll
shll
shll
shll
shll
jae
pop
ljmp
dec
gs
cltd
and
out
in
or
stos
dec
xor
sbb
mov
stos
dec
outsb
mov
outsl
les
dec
cld
mov
in
ljmp
xchg
sar
leave
or
in
pop
mov
loop
mov
imul
shlb
out
stos
and
jne
dec
mov
imul
addr16
jns
cs
das
push
xlat
inc
leave
pop
call
rcr
cmpxchg
sbb
dec
or
insb
dec
sbb
lret
mov
mov
mov
sub
xor
leave
dec
rcrl
fadd
push
out
and
jnp
faddl
or
mov
in
or
mov
in
or
cmp
mov
out
pop
dec
mov
pop
dec
mov
pop
dec
lahf
out
jge
pop
ret
jge
pushw
add
xor
xor
ja
aas
in
aam
cmpl
fldcw
adc
push
or
mov
jl
jnp
bound
sahf
xchg
cmp
xor
into
out
dec
sbb
out
in
subl
and
add
inc
inc
lods
inc
sub
mov
out
jge
xchg
enter
pop
pop
fs
movsl
inc
outsb
mov
inc
in
push
lahf
inc
dec
rorl
aaa
mov
lods
or
inc
pop
dec
outsl
addl
rolb
outsl
add
dec
or
fs
push
lahf
inc
dec
mov
inc
pop
cmpsl
mov
inc
test
in
int
pop
js
test
lods
push
inc
inc
gs
push
lahf
inc
sub
addb
push
in
in
push
inc
inc
gs
push
lahf
inc
addl
aaa
jecxz
lcall
pop
add
nop
dec
test
dec
test
dec
test
dec
test
in
sbbl
mov
cmpb
mov
loop
int
mov
loop
int
mov
loop
xchg
insl
pop
add
into
adc
into
add
pop
add
insl
pop
add
push
stos
pop
add
fmul
adc
into
add
add
and
add
and
shll
shll
shll
shll
shll
shll
add
arpl
cltd
out
lods
inc
lret
cltd
jecxz
mov
loop
int
mov
loop
int
mov
loop
int
mov
loop
int
mov
xor
int
sub
jecxz
rorb
or
fs
in
or
add
pop
add
sbbb
jge
lahf
add
pop
add
arpl
fsubrs
lret
and
test
les
adc
ja
out
and
test
les
adc
das
lret
xor
mov
les
arpl
pop
lret
and
arpl
inc
rclb
lret
and
arpl
adc
packsswb
xlat
arpl
cmpl
fsubrs
lret
and
test
mov
in
push
mov
or
push
into
adc
das
lret
and
test
les
adc
das
lret
and
mov
push
into
add
arpl
arpl
shrb
and
arpl
arpl
add
test
dec
clc
stc
insl
xchg
pusha
ljmp
mov
fbstp
sarb
sbb
clc
lods
outsl
fimuls
mov
lock
daa
shlb
xor
test
aad
add
sub
inc
push
or
cmp
push
cwtl
scas
jnp
mov
loope
add
push
dec
cmpsl
push
adc
mov
lea
ret
lods
test
xorb
ret
dec
jge
dec
arpl
mov
sbb
test
mov
shrl
mov
sahf
adc
or
jnp
pop
loop
into
loop
into
loop
faddp
jge
sbbb
pop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
into
loop
or
adc
adc
push
cmpsl
adc
xor
or
lods
enter
cmpsl
adc
call
enter
sbbb
jne
enter
dec
pop
push
cmpb
mov
loop
int
mov
loop
int
mov
loop
int
mov
loop
mov
cli
lea
int
mov
loop
int
mov
loop
int
mov
insl
enter
adc
fmul
adc
into
add
adc
xor
adc
and
and
enter
mov
insl
enter
enter
and
shll
shll
shll
shll
shll
shll
test
repnz
dec
into
paddsw
xchg
push
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
mov
lods
enter
add
dec
push
ret
and
adc
and
and
enter
enter
push
xor
adc
enter
lods
inc
push
mov
in
or
mov
in
or
mov
in
or
mov
in
or
mov
in
or
mov
in
or
mov
in
or
mov
in
or
mov
in
or
mov
in
or
mov
jl
enter
adc
faddp
pop
into
loop
faddp
std
faddp
push
or
adc
mov
data16
mov
lods
enter
test
enter
enter
or
mov
in
or
mov
in
or
mov
in
or
lds
push
into
ret
push
dec
jbe
push
push
fmul
adc
into
adc
into
adc
ficoms
fmul
adc
ficoms
fmul
adc
into
adc
into
adc
into
adc
into
adc
ficoms
fmul
push
sub
add
outsl
jbe
adc
xor
adc
adc
arpl
enter
adc
into
add
enter
xchg
and
insl
insl
jae
add
push
es
in
push
gs
or
push
insl
xor
js
adcl
push
dec
xor
ret
inc
lods
mov
pop
movsl
mov
or
inc
es
push
in
clc
push
shl
int
or
xor
add
xor
insl
lock
shrb
movsb
fisttpl
mov
movsl
adc
clc
pop
insl
mov
xor
dec
or
inc
lods
imul
and
in
add
jo
pop
test
sbb
cmp
stos
pop
test
xor
or
push
mov
sbbl
push
cli
lahf
mov
in
loopne
cmp
ret
or
dec
es
xchg
in
xchg
pop
or
xor
mov
and
pop
cmp
push
es
mov
pop
imul
or
dec
int3
movsb
mov
test
or
cmp
adc
in
imul
es
cmp
add
lock
jae
sbb
stos
insl
mov
stos
shll
sbb
lods
sub
insl
imul
lods
sub
push
insl
aaa
xor
xor
adc
pop
adc
and
sbb
insl
dec
int3
and
insl
fldt
stos
jp
dec
sub
adc
outsb
sub
xor
or
push
xor
mov
sub
dec
xchg
fdivs
leave
movsb
and
insl
xor
mov
imul
nop
sbb
and
das
dec
fisttpl
insl
insl
sarb
jae
dec
sbbl
pop
or
lods
fsubr
dec
xor
mov
arpl
cwtl
dec
gs
ret
and
or
and
fdivrs
lcall
arpl
stc
lods
inc
test
lods
icebp
cs
xor
mov
repnz
mov
or
in
mov
push
inc
mov
insl
daa
insl
nop
pop
xor
add
bound
lock
sbb
mov
aaa
lods
addr16
jmp
or
clc
pop
lods
mov
dec
push
xor
lea
xchg
cmpsl
loopne
dec
xorb
out
out
mov
ljmp
sbb
arpl
pop
cltd
sub
lods
dec
sbb
insl
orl
enter
pop
add
cmp
xchg
subl
ja
out
and
xor
orl
insb
orl
sbbl
insl
orl
and
pop
mov
pop
dec
leave
insl
xor
add
xorl
add
andl
fdivrs
test
lods
sbb
mov
dec
sub
insb
or
lahf
andl
scas
subl
mov
pop
cs
sub
sbb
aas
andl
int
mov
loop
int
mov
loop
shr
in
ja
imul
test
dec
test
push
mov
dec
test
dec
test
dec
test
dec
test
dec
test
or
in
or
ljmp
aaa
fld
aaa
and
ljmp
pop
lods
mov
ljmp
rcr
das
rcr
das
rcr
das
rcr
das
rcr
das
rcr
aaa
mov
xrelease
xorl
jecxz
pop
lahf
sbb
adc
into
adc
into
adc
into
adc
into
adc
into
adc
into
adc
into
adc
into
adc
into
adc
into
adc
into
adc
into
push
insl
mov
stos
mov
adc
incb
xor
int
mov
xor
int
mov
stos
mov
dec
dec
out
lock
xchg
into
loop
popf
loop
or
arpl
adc
nop
dec
shll
rcr
aaa
lret
fmul
add
xchg
in
add
adc
nop
dec
shll
rcl
xor
fmul
add
into
loop
into
loop
ffree
repnz
rcr
aaa
lret
fmul
push
shlb
int
ret
inc
mov
arpl
xchg
push
mov
jmp
movsb
jns
into
loop
ffree
repnz
repnz
push
lret
mov
fmul
add
into
loop
data16
subl
in
lahf
adcl
dec
shll
shll
shll
shll
shll
shll
shll
dec
sbb
xchg
mov
loop
int
mov
loop
int
mov
loop
int
mov
loop
int
mov
loop
int3
cmp
adcl
xchg
lret
scas
mov
adc
and
lret
lret
adc
into
add
pop
lret
pop
lret
jmp
mov
loopne
movl
orl
xor
sub
movsb
enter
mov
mov
add
mov
int
push
and
loop
imul
sbb
xor
or
iret
adc
pushf
dec
mov
pop
dec
mov
fcoms
js
jnp
push
or
dec
movsl
fadd
mov
stos
repz
inc
dec
jle
rclb
push
pop
mov
hlt
addb
mov
xchg
std
in
stos
or
mov
mov
call
jnp
lcall
cmp
lret
jp
push
dec
dec
add
ljmp
pusha
or
jns
fsubl
hlt
out
adc
mov
ret
mov
es
jg
lock
push
cmp
data16
addl
in
or
xchg
jp
dec
insl
or
mov
fwait
sub
mov
mov
jp
mov
add
adc
push
aaa
rcl
lret
nop
cmp
jnp
inc
enter
jl
cli
or
mov
add
dec
dec
shl
xor
or
xlat
test
arpl
pop
inc
cmpsl
adc
pusha
fs
inc
scas
mov
ds
mov
jne
dec
jae
cmp
ljmp
mov
stc
cwtl
lea
int3
mov
mov
stos
dec
test
fadd
scas
push
mov
xchg
dec
dec
mov
sub
imul
decb
push
xor
mov
push
mov
mov
les
xor
jb
jecxz
xor
stos
call
enter
imul
nop
repnz
repnz
repz
mov
ljmp
fisubl
add
dec
lods
push
xchg
xor
repnz
int3
test
pusha
movsl
push
dec
fcomp
mov
dec
mov
pop
dec
bound
leave
cmovge
psubsb
mov
dec
loop
lea
dec
lret
inc
xchg
adc
jl
mov
sub
dec
xchg
dec
or
and
lret
jae
bound
dec
sbb
ss
jmp
dec
sbb
add
insl
or
push
xchg
fiaddl
movsl
sub
jp
mov
xor
xor
push
mov
test
movsl
xchg
bound
int
dec
mov
push
mov
gs
js
fisttpll
pop
inc
dec
scas
mov
dec
mov
in
mov
dec
sbb
mov
mov
xor
addl
daa
mov
mov
out
or
mov
mov
sahf
es
dec
sbb
dec
sbb
stos
int
or
sub
loopne
dec
mov
mov
or
in
mov
shlb
mov
dec
xchg
dec
mov
cwtl
fiaddl
xor
xchg
insl
imul
and
add
adc
and
imul
mov
daa
sub
jne
push
loopne
sti
dec
push
cmpsl
call
into
adc
or
call
push
cmp
sarb
lods
adc
add
shrl
push
daa
in
xchg
or
imul
mov
ljmp
push
int
mov
in
rorl
dec
enter
xchg
fdivs
sub
insl
cmp
lods
adc
into
pop
int
add
lock
lret
add
sahf
daa
into
xchg
fildll
stos
inc
loopne
dec
lea
mov
test
rorb
call
test
dec
and
xor
and
xor
cmp
pop
lods
insb
mov
mov
sub
in
dec
and
je,pt
dec
add
xchg
xor
or
dec
je
cmpsl
mov
clc
addb
dec
xchg
das
arpl
dec
enter
cwtl
in
fldl
sub
imul
push
addr16
cmp
cmp
mov
cmp
xchg
pop
stos
push
mov
xchg
addr16
mov
and
lods
clc
jb
lock
pop
and
push
or
or
or
or
or
or
sub
or
aaa
mov
cmpl
xchg
push
lock
inc
scas
aaa
insl
call
js
cmpsl
push
mov
insl
call
xchg
clc
or
pop
adc
rorl
or
outsb
cli
insl
dec
adc
bound
insl
mov
and
insl
sub
mov
cwtl
mov
stc
sub
mov
sub
lret
mov
scas
out
arpl
adc
push
and
lea
mov
jns
stos
insl
jg
mov
imul
adc
test
mov
add
mov
insl
and
fldcw
mov
add
imul
dec
mov
cmp
aaa
sahf
test
sub
jp
ljmp
sbb
ja
xor
sarb
mov
insl
xchg
stos
insl
and
jecxz
lea
insl
js
add
fwait
push
push
cmpsb
mov
add
clc
scas
mov
or
dec
cmpb
call
dec
loopne
dec
jl
rol
fisttpl
add
or
mov
xchg
lret
jl
icebp
dec
mov
daa
or
stos
cmp
add
lods
out
sub
mov
enter
mov
push
cmp
pop
insl
ds
js
and
dec
fiadds
cmpsl
jecxz
cltd
leave
orl
rolb
cs
push
mov
sbb
or
or
inc
imul
in
int3
addr16
cmpsl
repnz
js
dec
push
clc
mov
ljmp
sbb
nop
loopne
imul
mov
push
xor
xchg
jp
cmp
in
push
sar
xor
jae
outsl
mov
inc
dec
ljmp
mov
push
mov
or
push
in
sub
xor
das
mov
cwtl
or
sub
and
mov
and
and
sub
call
and
inc
add
or
or
and
push
daa
insl
sub
aaa
push
orb
jecxz
sub
push
pop
mov
mov
lea
lods
cmpsl
loopne
in
cmp
mov
or
xchg
in
mov
data16
in
scas
and
cmpb
dec
dec
lea
push
lret
mov
dec
cld
lea
jmp
lea
cmp
cmp
dec
int
into
std
and
inc
fisubrl
mov
xchg
cmp
sub
jae
mov
lret
imul
push
sarb
dec
bound
insb
roll
cmp
mov
lret
or
mov
sbb
rcrb
cmp
loope
std
lea
add
dec
mov
cmovl
cmp
mov
std
popf
pop
scas
mov
sub
add
lock
add
fiadds
push
clc
jae
jbe
xchg
popf
jmp
or
andb
dec
test
fdivrs
jbe
popf
or
dec
test
test
dec
test
adc
jmp
arpl
loop
int
mov
fmul
adc
into
adc
into
adc
into
adc
aas
or
into
loop
into
loop
and
push
test
push
push
mov
dec
or
dec
mov
rcr
das
stc
lds
orb
or
in
adc
jae
add
into
adc
leave
pop
loop
int
dec
lds
arpl
into
adc
aas
int
pop
add
loop
jle
ljmp
adc
add
fsubrl
test
jecxz
das
lret
and
ja
mov
arpl
arpl
fsubrl
rcr
das
test
in
mov
mov
in
lea
shll
arpl
mov
add
push
shll
shll
or
addr16
mov
mov
in
or
das
mov
fsubrl
test
pop
test
mov
lea
rorb
dec
shll
shll
shll
shll
fisttpl
loop
int
mov
mov
and
fidivrl
mov
in
or
mov
in
inc
das
dec
rcr
das
rcl
rcr
das
test
mov
lret
adc
call
jmp
insl
sub
call
push
pop
stos
pop
aaa
subl
fsubrl
rcr
das
rcr
das
or
mov
mov
in
or
mov
in
or
inc
das
dec
rcr
das
push
add
sub
test
jae
and
fisubl
nop
push
or
aaa
int3
into
loop
into
loop
fsubp
pop
into
loop
xchg
mov
fsubrl
rcr
das
rcr
das
rcr
das
or
in
or
add
pop
into
loop
aaa
or
rorb
jecxz
clc
xor
popf
cs
loopne
mov
jge
addr16
sbb
mov
push
dec
in
gs
pop
ljmp
cld
int
sub
push
popa
insl
and
insl
inc
xorl
sbb
insl
pop
jecxz
lods
mov
jecxz
in
lea
addl
loop
mov
or
inc
push
std
mov
dec
and
push
or
rol
sbb
xor
addr16
lods
jnp
or
nop
ret
sub
jnp
pop
daa
or
and
enter
in
dec
jnp
push
or
and
xorl
push
sub
shll
push
inc
sub
orb
or
fidivrs
xor
push
in
nop
daa
repz
nop
insl
mov
adc
mov
cwtl
jmp
push
sbb
js
dec
dec
orb
stos
scas
lret
ret
orl
mull
rorb
int
ret
sub
or
mov
in
adc
sub
lret
andl
jo
lret
dec
cltd
fwait
inc
and
fidivrs
rorb
push
stos
sbb
mov
inc
dec
sub
std
dec
sbb
imul
dec
dec
nop
push
or
fs
arpl
aaa
or
aaa
daa
loope
mov
in
mov
jnp
iret
mov
pushf
pushf
sub
loopne
sub
mov
test
orl
dec
call
or
jae
and
arpl
dec
lea
mov
stos
jge
push
cmpsl
das
test
lock
jp
leave
lea
insb
fcom
out
push
xor
and
mov
in
cli
jge
cwtl
inc
sub
mov
loopne
insl
stos
lea
je
add
xor
clc
lea
mov
add
rcr
and
stos
xor
incl
daa
sub
mov
push
call
xor
cwtl
sub
or
and
dec
inc
lret
je
lods
aaa
cmp
mov
test
pop
orb
stos
int3
sbb
test
sbb
repz
movsb
or
jp
ret
jnp
rorl
lods
cmp
xchg
test
lcall
sbb
cli
push
pop
xor
lret
push
dec
sub
dec
insb
fadd
fwait
dec
mov
dec
addl
imull
je
insl
daa
dec
and
sub
cwtl
loopne
dec
mov
or
ret
icebp
in
test
add
test
pushf
mov
add
inc
mov
arpl
jp
in
sub
mov
dec
dec
mov
loopne
insl
jmp
jo
ja
aaa
sub
or
xchg
push
pop
xor
pushf
or
or
dec
scas
pop
jge
outsb
sbb
int3
addr16
out
test
dec
cmp
insl
cmp
sub
inc
aaa
dec
pop
pop
in
pop
ja
lock
or
mov
ljmp
dec
lods
sti
ljmp
sbb
into
cmp
push
xor
lea
insl
or
fistl
and
ficompl
imul
fmull
cmp
lret
ljmp
xlat
add
xchg
jae
jbe,pn
int
mov
jecxz
enter
cs
insl
cwtl
sub
call
and
into
loop
into
loop
pop
dec
pop
enter
cs
call
lods
out
dec
ret
loop
mov
lods
dec
out
mov
push
movsl
fxch
pop
pop
insl
mov
arpl
ja
leave
lods
cld
lea
cmp
stos
shl
or
cwtl
in
insl
ret
cwtl
aaa
fmuls
lods
or
fxch
pop
out
mov
mov
in
or
mov
in
in
push
sub
repnz
push
xor
cmpl
or
mov
out
lods
adc
dec
mov
lea
fidivl
int3
mov
mov
jge
mov
and
ljmp
mov
lea
out
gs
ffree
aaa
lea
ret
jge
mov
ret
or
ret
out
ffree
aaa
dec
mov
mov
out
gs
ffree
aaa
lea
ret
test
int3
mov
ret
gs
ffree
das
inc
fisttpll
or
fdivr
or
out
gs
ffree
aaa
lea
ret
test
or
lods
ret
int3
inc
or
ret
aaa
lea
ret
test
lea
jge
popf
call
call
lret
and
lret
jne
call
lret
call
call
lret
pop
lods
call
jne
call
lret
call
call
lret
pop
lods
call
lret
and
lret
jne
call
lret
loopne
xlat
push
lahf
push
lea
popa
cld
jge
or
inc
lea
aaa
lods
int
lock
pop
mov
das
lods
and
cmp
imul
mov
mov
or
add
lea
xchg
or
orb
dec
aam
leave
mov
xchg
inc
daa
dec
repz
jns
sub
inc
or
lea
rolb
mov
adc
mov
sti
lahf
scas
and
das
mov
scas
lea
mov
lea
pop
iret
mov
ja
dec
fdivs
fsubrs
mov
dec
push
and
movb
clc
pop
sbb
loop
dec
imul
ja
scas
repnz
jae
mov
mov
push
jp
dec
pop
xchg
jae
pop
adc
js
int3
add
sub
sub
lods
insl
cmp
mov
add
dec
sub
and
fs
addr16
mov
push
insb
pop
pop
mov
jecxz
mov
loopne
dec
or
fdivrs
dec
xlat
pop
movsl
insb
mov
mov
lds
jbe
add
jl
push
and
add
dec
lods
out
mov
or
push
sub
loopne
add
jo
mov
adc
jb
cs
call
add
insl
sahf
pop
cmp
stos
and
hlt
add
dec
or
xchg
iret
test
pop
js
ret
in
pop
jg
int
xorb
leave
sbb
or
mov
add
dec
mov
outsb
pop
call
pop
mov
pusha
call
lahf
or
ret
push
leave
jl
mov
loop
xchg
pop
sbb
shlb
pop
dec
aad
mov
inc
and
mov
inc
arpl
mov
out
sbb
mov
test
mov
js
fisttps
dec
outsl
pop
sub
enter
pop
add
stos
mov
repz
xchg
mov
lock
jl
dec
mov
lock
jmp
hlt
cwtl
jnp
sbb
sbb
int
imul
inc
mov
mov
dec
or
in
add
mov
or
in
sbb
arpl
jb
test
loop
adc
dec
iret
ds
fiaddl
mov
pop
and
push
sbb
cmp
lret
mov
adc
test
xchg
dec
mov
add
jge
int
xorb
lods
or
sub
jnp
test
ja
fildl
out
scas
shl
mov
push
push
mov
jmp
lods
popa
cmpsl
dec
jb
lea
or
jb
inc
outsl
xchg
addr16
push
push
inc
pop
or
dec
rcrb
out
push
int
sub
xlat
popa
imul
stos
mov
mov
lret
ja
cmp
push
fisttpll
lock
int
mov
sbb
jae
mov
loope
hlt
mov
mov
loopne
xor
add
lcall
mov
cmp
enter
add
jb
xor
or
cmp
mov
fdivs
inc
addr16
xchg
cmpl
xchg
inc
sti
cmpsb
or
sub
lods
sub
jp
jg
insl
jmp
pop
xchg
int
and
mov
stos
mov
or
ret
clc
push
push
push
iret
popa
test
lods
in
clc
lret
jo
lret
js
mov
dec
or
in
pop
or
subb
push
pop
push
dec
xchg
dec
mov
ficoml
dec
popa
mov
xor
xor
lea
lods
sarl
out
xor
f2xm1
xor
lods
mov
mov
lret
sub
hlt
mov
adc
and
jge
sbb
stos
mov
sbb
xor
xor
sbb
mov
ljmp
lahf
test
xor
bound
je
mov
push
dec
pop
fidivrs
test
ret
mov
lods
pop
and
and
arpl
cmp
enter
dec
jo
inc
stos
mov
xchg
mov
or
add
and
xor
xor
and
arpl
loopne
int
xchg
call
cmpsl
fwait
ret
or
xorl
lds
sub
inc
cmp
mov
daa
arpl
lret
mov
cmp
mov
cmp
lea
xchg
add
cmp
mov
mov
lret
jp
clc
mov
rorl
jb
repz
dec
cmp
fadds
lods
clc
add
rolb
ret
sbb
movsb
aam
mov
lods
int
sub
adc
in
mov
std
loopne
int
sbb
fcomp
sbb
call
jmp
push
xchg
fistl
sub
cmp
ror
mov
pop
jns
xchg
lods
mov
mov
xor
push
cld
into
xlat
mov
mov
inc
in
outsl
sti
aaa
mov
ret
dec
imul
add
sub
mov
imul
lret
xchg
jl
inc
pop
loope
jl
push
dec
in
pop
dec
push
fdivrs
and
add
in
or
adc
or
mov
xchg
jnp
nop
sbb
dec
sub
or
mov
pop
mov
js
mov
adc
stos
pop
adc
js
int
js
dec
push
test
call
pop
xchg
js
scas
mov
dec
push
push
movsl
cmpsl
dec
and
xchg
jnp
jge
mov
rolb
insb
add
popf
ds
adc
pop
dec
in
mov
cwtl
mov
ljmp
jmp
lock
cltd
ret
dec
sub
xchg
or
jb
test
sub
roll
test
test
into
mov
int3
mov
or
jae
mov
andl
sub
dec
pop
dec
nop
push
fisttps
jp
push
push
dec
add
lods
gs
gs
add
lret
add
sbb
mov
mov
sbb
mov
aaa
pushf
in
adc
and
mov
clc
sbb
push
in
cmp
mov
nop
adc
jnp
insl
cmp
test
cmp
mov
sbb
push
sub
ljmp
cmp
mov
insl
inc
sarl
ret
shlb
sbb
jle
mov
enter
int
aaa
add
pop
in
outsl
push
loope
in
push
enter
mov
and
lahf
lods
arpl
shlb
into
lcall
cmp
or
pop
mov
scas
lock
fcomps
and
jp
push
or
lods
lods
pop
dec
pop
mov
mov
ret
test
lods
mov
cmp
sahf
inc
pusha
jecxz
mov
fwait
dec
pop
mov
scas
push
add
pop
xchg
data16
xor
stos
test
xchg
pop
xchg
xchg
pop
xchg
stos
pop
xchg
bound
adc
arpl
ljmp
cltd
adcb
stc
dec
cmpsl
clc
push
jne
mov
bound
lods
mov
mov
adc
xchg
push
daa
jge
subb
lret
mov
mov
xchg
push
push
mov
add
add
daa
mov
mov
and
sbb
sbb
sbb
aaa
stos
xor
push
sarl
mov
je
lcall
push
sub
xchg
xchg
mov
jge
push
pop
fwait
or
push
repnz
jl
sahf
scas
orb
sub
test
out
into
mov
push
pop
lods
push
int
push
dec
mov
cld
lock
inc
ljmp
mov
enter
adc
mov
cwtl
enter
dec
ds
int
sarl
stos
dec
stos
sub
jo
shl
lods
cld
lock
mov
add
inc
dec
cld
lock
inc
std
into
push
fimull
fs
pop
insb
outsl
push
add
lods
in
lods
or
stos
mov
fidivl
or
mov
ljmp
cld
fmuls
test
sub
push
loope
pop
lea
popa
in
jge
lea
loopne
sar
ret
aas
dec
or
mov
fsubs
xchg
aaa
or
clc
xor
inc
sub
int
shr
dec
dec
ror
insb
dec
xor
ds
dec
mov
in
fwait
jp
ror
into
dec
sbb
sbb
adc
push
mov
xchg
lock
dec
jp
insb
mov
cs
je
xchg
outsb
mov
and
or
ret
dec
mov
sub
lock
fisubl
ret
rcll
loop
mov
test
xorb
fisttps
inc
addr16
and
fsubrs
push
jp
add
in
add
or
mov
adc
push
pop
jmp
or
push
mov
addr16
inc
cltd
test
loopne
jge
loopne
jl
loopne
and
repz
lods
sub
push
ret
js
int
mov
popf
aaa
mov
sub
cld
movsl
sub
add
jns
aaa
mov
sub
aaa
xchg
sbb
adcl
mov
lds
pop
jae
mov
cli
lds
aaa
jnp
lds
pop
mov
jl
imulb
mov
push
pop
and
xor
test
cld
outsb
int3
jnp
cltd
loopne
andl
mov
add
or
data16
outsb
dec
jecxz
arpl
arpl
fwait
enter
add
or
mov
enter
enter
mov
rcr
das
and
adc
faddp
pop
leave
mov
inc
aaa
mov
or
cld
movsl
mov
adc
bound
pop
outsb
orb
push
mov
lret
mov
xor
ja
xorl
mov
cld
mov
mov
push
imul
ja
jge
sbb
pop
ljmp
pop
lcall
lret
sub
dec
or
std
mov
pop
dec
xchg
je
aaa
std
test
mov
in
mov
dec
sub
ret
and
repz
pop
loopne
push
sub
std
push
sub
cmpl
ret
aaa
std
xchg
les
push
ret
or
sbb
test
mov
dec
or
ret
xchg
adc
jae
aaa
jae
test
cmpsl
jnp
inc
aas
mov
cs
mov
arpl
in
insb
dec
inc
std
dec
jle
call
pop
ja
xchg
test
sub
cs
xor
test
xor
scas
mov
arpl
inc
ret
push
mov
mov
das
adc
dec
adc
aaa
enter
enter
adc
enter
adc
enter
xor
scas
mov
and
mov
cli
test
insl
mov
xchg
ljmp
ret
ret
ret
push
imul
cld
test
outsb
popf
pop
push
dec
dec
or
lods
add
mov
lods
push
out
and
divl
ja
xchg
dec
add
call
lods
sub
xorb
roll
dec
ret
jno
aaa
dec
test
insl
dec
xor
jp
repnz
aaa
mov
cmp
lods
andl
inc
cmpsl
and
xchg
jmp
sbb
jmp
aam
es
test
cli
jp
sub
pop
or
mov
xchg
sub
cmpl
call
push
dec
push
dec
mov
jae
ja
xbegin
loope
adc
sub
js
xor
push
xchg
test
insl
mov
sub
cmc
xchg
stos
into
pop
pop
or
pop
push
push
fmuls
insl
pop
ret
roll
fcomps
popa
inc
jnp
mov
and
mov
into
cld
inc
or
pusha
jl
cwtl
push
adc
lahf
mov
fwait
pop
mov
inc
adc
call
sahf
mov
clc
insl
push
loopne
xor
cwtl
push
icebp
test
notb
out
bound
loopne
sti
mov
call
ds
lea
mov
sbb
pop
xchg
xchg
stos
enter
adc
arpl
call
push
fdivs
sbbl
sub
add
add
subl
mov
shrb
cmp
arpl
xchg
call
in
jbe
mov
loop
sub
lea
sub
dec
mov
nop
push
push
ljmp
shll
push
push
stos
test
mov
jge
adc
pop
in
nop
sbb
xchg
and
jb
mov
sbbl
lods
pop
movsb
es
cmp
cs
loopne
jo
and
and
loop
aad
jae
sub
and
xchg
jmp
shlb
mov
push
cmp
rep
incb
ljmp
inc
or
sub
adc
mov
test
adc
push
mov
push
mov
stos
outsb
pusha
cmp
sbb
roll
jmp
sub
adc
mov
scas
enter
push
out
dec
pop
inc
push
xor
inc
inc
lods
insl
cltd
in
lods
arpl
sub
jl
arpl
test
xchg
sub
mov
mov
sti
cmp
sub
mov
push
cwtl
loopne
sbb
jnp
mov
aam
dec
jae
daa
sub
ret
mov
ljmp
fisttps
sub
shr
lock
mov
xor
and
sbb
cmp
js
dec
add
ror
pop
pop
sub
mov
jnp
and
pop
sbb
adc
iret
movsb
jp
mov
add
mov
push
push
push
xor
push
xchg
mov
shrl
addr16
outsl
ret
mov
imul
outsb
mov
add
sub
addr16
outsl
ret
or
jmp
dec
add
mov
inc
lods
mov
lods
adcl
pop
lods
iret
jo
imul
aaa
lods
xchg
jp
test
xchg
jae
iret
pop
push
cs
cmp
rclb
push
mov
pop
test
nop
jge
pop
in
int
sub
pop
push
mov
ret
xor
push
mov
inc
sahf
test
test
lret
or
sbb
test
test
stc
outsb
int3
push
xchg
ljmp
fwait
testl
lcall
clc
mov
push
leave
or
daa
jge
fneni(8087
enter
pop
test
cmp
mov
loopne
or
adc
add
insl
fs
dec
lods
rcrb
lea
lods
and
imul
insb
dec
lods
rcrb
dec
lods
pop
dec
nop
cmpsl
or
movsl
ret
add
addr16
lods
xlat
repnz
gs
and
nop
adc
xchg
fcomps
dec
cs
cmp
xchg
fcomps
push
mov
and
bound
pop
int3
xlat
repnz
into
inc
ljmp
testb
jno
ja
add
fcomps
repnz
add
push
mov
fsubr
sub
add
ret
pop
lods
xlat
jb
in
testb
in
and
dec
mov
pop
add
out
mov
mov
sti
into
push
out
xlat
jb
sub
dec
testb
dec
pop
mov
inc
push
xchg
stos
nop
adc
sub
jb
or
xlat
jb
sub
lods
pop
sbb
addr16
add
or
addl
and
data16
enter
test
cld
addr16
aaa
or
out
xchg
add
jb
push
arpl
rclb
fbld
or
mov
mov
mov
xchg
ret
inc
imul
sub
nop
orl
dec
test
dec
add
jecxz
int
sbb
ret
and
lret
push
lods
out
jb
or
insl
stos
dec
pop
nop
cmp
fadds
int3
inc
sub
jb
dec
or
enter
insb
sbb
xchg
ficompl
lods
add
cwtl
pop
aaa
scas
cltd
cli
fwait
addr16
data16
push
fdivs
fcomps
jb
dec
ds
stos
cmpsl
or
add
cwtl
sub
add
out
jb
imul
mov
or
push
sub
call
ja
pop
push
push
jb
daa
dec
pop
lods
out
jp
or
pop
jb
mov
in
in
add
cwtl
into
mov
xor
nop
addl
push
sub
bound
sbb
fcomps
sbbl
in
push
push
push
pusha
sub
or
xchg
inc
sub
outsb
xor
sub
sub
ficompl
sbb
insl
push
cmpb
sub
leave
mov
scas
ja
mov
push
jg
push
dec
sbb
adc
push
or
mov
mov
push
mov
movsl
adc
jo
ret
sahf
call
dec
fmuls
pop
test
ljmp
mov
push
mov
mov
rol
repz
cmpsl
jge
mov
cs
push
mov
and
cli
lods
add
dec
mov
cmp
xlat
pop
push
sub
lods
rol
mov
mov
add
stc
ret
mov
or
imul
inc
lcall
jae
mov
mov
sub
mov
outsb
inc
mov
add
in
scas
add
sub
stos
mov
push
andb
add
lods
cltd
fimull
loope
outsl
add
add
out
fwait
int
and
pop
xchg
loop
addl
pop
das
jmp
sarb
add
pushw
into
insl
out
ljmp
or
fs
cs
push
or
push
insl
pop
in
push
add
mov
inc
jmp
movl
push
int
cli
out
test
or
jecxz
fmul
pop
push
push
cs
mov
stos
sbb
out
xchg
lock
add
les
testb
sbb
push
out
into
cmpsl
mov
push
sub
test
bound
call
imul
sub
jge
arpl
xchg
shrl
fldenv
xchg
out
out
or
movl
mov
int3
jb
add
popf
sub
shll
lret
or
or
call
mov
xor
mov
and
mov
insl
call
mov
insl
call
mov
xor
mov
xor
mov
push
inc
xor
mov
mov
mov
andl
insl
call
mov
xor
mov
mov
inc
inc
cmpb
pop
dec
leave
and
push
inc
subb
mov
in
nop
addl
mov
insb
mov
inc
insb
jae
loopne
insb
out
jp
lods
pusha
addr16
push
addr16
jb
insl
pop
mov
bound
enter
dec
and
loope
in
or
fcoms
outsb
mov
cltd
cli
stc
dec
pop
insb
out
jb
imul
mov
jp
imul
mov
int
add
sbb
dec
fs
lods
push
push
out
jp
dec
je
mov
in
bound
jns
out
cli
test
jecxz
in
push
out
mov
xchg
in
mov
cli
push
test
jmp
push
mov
pop
dec
loope
es
push
push
out
cli
push
mov
push
mov
dec
pop
fcompl
lea
adc
mov
ret
sbb
xchg
xor
dec
cltd
push
lods
push
bound
imul
rclb
mov
inc
ljmp
arpl
push
out
repnz
lods
jno
out
repnz
aam
push
mov
mov
jp
mov
inc
xchg
call
js
leave
fwait
sub
dec
addr16
add
mov
fstl
mov
sbb
and
fadds
andb
dec
and
fldcw
rolb
push
jbe
leave
fs
push
enter
jo
lods
dec
insl
cmpb
ja
mov
in
push
dec
xlat
jo
int
dec
xlat
pop
lods
xchg
or
xchg
adc
push
jg
mov
out
out
in
add
dec
sub
pop
cltd
sub
out
clc
loope
xor
mov
pop
sbb
xlat
insb
call
lods
adc
mov
loopne
xor
repz
xor
repz
repz
mov
lods
adc
mov
lods
adc
mov
lods
adc
mov
lods
adc
mov
adc
xor
dec
push
int3
pop
sub
adc
mov
loop
fstp
shll
data16
dec
outsb
and
and
arpl
or
imul
lea
inc
xchg
mov
shrl
imul
sub
mov
aaa
loopne
int3
xor
repz
repz
xor
repz
mov
testb
cmpsl
arpl
and
arpl
and
arpl
and
arpl
mov
sub
movhlps
lahf
adc
shll
aam
mov
sti
xor
mov
mov
inc
je
pop
mov
and
sbb
and
imul
dec
nop
lods
lock
adc
cltd
pop
enter
push
data16
call
stc
inc
pop
push
inc
cltd
jo
xorl
and
repz
cwtl
loopne
out
dec
out
jmp
arpl
xchg
popf
adc
mov
lods
mov
in
cld
bound
mov
call
cmpsl
adc
enter
dec
adc
fdivl
dec
arpl
insl
jnp
mov
mov
pushf
imul
push
out
jge
test
or
movsl
fdivrs
les
dec
jmp
mov
std
faddp
pop
repz
repz
addr16
or
lcall
dec
rolb
mov
mov
data16
or
into
into
mov
dec
stos
scas
xor
dec
lret
xor
adc
mov
inc
aas
mov
ficoms
mov
rorb
shrl
mov
jnp
std
addr16
or
cmpsl
das
mov
inc
out
test
int
jno
loopne
lods
and
pop
and
stos
jge
out
js
mov
movsl
loopne
adc
repz
loopne
repz
repz
mov
dec
pop
inc
int3
pop
cs
ljmp
lods
or
mov
std
outsl
fimull
ljmp
das
adc
enter
mov
cs
arpl
cmpsl
jnp
adc
mov
repnz
sbb
lds
and
outsl
jecxz
cwtl
push
sti
mulb
jecxz
sub
scas
or
xchg
push
or
adc
insl
loopne
stos
loopne
push
insl
loopne
into
ljmp
fldenv
dec
fcmovnb
arpl
dec
mov
stos
leave
arpl
mov
std
test
sbb
mov
fwait
insb
pop
cs
lods
mov
shrl
push
fisttpl
and
enter
mov
adc
mov
loop
fstp
das
mov
jnp
std
or
in
insl
sbb
mov
mov
adc
test
out
lock
dec
cmp
pop
stos
ja
lods
mov
lods
inc
sti
mov
sbb
notl
mov
loopne
repz
repz
loopne
repz
repz
jae
frstor
or
jae
xchg
or
out
add
into
lldt
movsl
add
add
out
add
movhlps
lahf
adc
adcl
adcb
pop
adc
or
adc
mov
lods
mov
in
pop
rorb
frstor
ljmp
fcomps
stos
mov
repnz
cwtl
repz
fmuls
mov
loopne
stos
loopne
push
xor
repz
xor
xchg
xor
int3
xor
xchg
or
stos
jae
push
fdivl
dec
imul
ljmp
push
int3
cli
adc
xor
dec
push
mov
outsb
and
lret
fmull
mov
sbb
and
arpl
stos
mov
push
insl
mov
mov
sub
mov
sub
clc
shl
push
inc
insl
or
pop
and
repz
repz
or
repz
movsl
loopne
and
frstor
xchg
push
or
pop
movsl
jae
adc
add
mov
add
pop
add
pop
add
adcb
movhlps
cmpsl
adc
enter
enter
data16
dec
jmp
loopne
cltd
jo
push
mov
cmpsl
stc
loopne
in
add
mov
ljmp
inc
dec
or
stos
mov
call
imul
inc
xchg
addl
repz
repz
loopne
ret
xor
repz
int3
xor
xchg
xor
aad
xor
cmpsb
jae
int3
ljmp
imul
scas
pop
add
xor
dec
push
aad
xor
scas
enter
mov
dec
dec
data16
out
fmull
pop
mov
arpl
or
adc
or
or
lret
fwait
and
in
add
sub
inc
arpl
ljmp
outsb
push
loopne
repz
repz
faddp
push
or
repz
movsl
loopne
and
jge
jae
data16
movsl
jae
call
aaa
add
or
data16
movsl
pop
add
pop
lldt
cmpsl
adc
adc
faddp
push
or
adc
enter
dec
add
arpl
push
test
mov
insb
sbb
mov
pop
ljmp
xor
dec
lret
and
int
sub
pop
mov
arpl
xor
outsl
mov
push
jg
pop
xor
aaa
loopne
int3
xor
repz
repz
loopne
ret
xor
repz
int3
xor
xchg
xor
aad
xor
cmp
int3
ljmp
cmp
xchg
insl
pop
add
adc
cli
adc
xor
adc
or
mov
negl
addr16
push
test
dec
packsswb
mov
out
mov
ljmp
scas
xlat
pop
cmp
sbb
lods
loopne
test
fcmove
lods
rol
arpl
insl
sub
stos
sub
push
insl
sub
mov
sbb
lret
aam
mov
arpl
lret
fdivl
dec
imul
ljmp
push
int3
cli
adc
xor
dec
push
int3
xor
xchg
xor
int3
xor
xchg
xor
int3
dec
ljmp
ljmp
push
fsubr
sub
clc
push
insl
push
lods
jb
dec
xlat
imul
stos
lea
aaa
sub
int3
xor
sbb
sub
int3
xor
sbb
sub
int3
lret
aam
mov
arpl
lret
fdivl
dec
imul
ljmp
push
int3
cli
adc
xor
dec
push
push
insl
jae
stos
jae
push
insl
jae
stos
jae
push
insl
mov
stos
mov
push
insl
mov
stos
mov
push
or
out
cmp
pop
stos
stos
add
insl
aaa
cmpsl
rcrl
repz
into
lea
sbb
sbb
sub
xchg
insl
sub
mov
mov
lret
aam
mov
jnp
add
jnp
int3
ljmp
imul
scas
pop
add
xor
dec
push
xchg
insl
enter
enter
xchg
int3
xor
xchg
xor
xchg
lds
cmpsb
jae
int3
xor
ljmp
ljmp
test
imul
in
psubsw
mov
mov
notl
or
sbb
cltd
rcrb
sub
stos
sub
add
sub
mov
mov
aam
mov
arpl
scas
jnp
inc
les
dec
imul
aam
add
xor
dec
push
test
and
scas
enter
jae
stos
jae
push
mov
xchg
xchg
xor
outsb
mov
ljmp
xchg
mov
xchg
xor
gs
inc
or
cmpsl
fmull
adc
or
int
xor
sbb
sub
int3
mov
adc
sub
xchg
insl
sub
stos
cmp
aam
mov
jnp
add
jnp
mov
add
add
pop
add
xor
dec
push
lds
adc
xor
adc
jae
int3
xor
xchg
xor
lds
xchg
xor
xchg
aaa
mov
int3
xor
ljmp
ljmp
fcomi
dec
movsl
stos
test
cwtl
fwait
sbb
imul
in
out
bndldx
sub
out
sub
sbb
sub
jne
sub
data16
mov
test
mov
jnp
std
decb
add
movsl
add
add
cld
xchg
add
pop
add
testb
rcrl
cld
lods
enter
pop
adc
jae
out
jae
xchg
or
cld
lods
jae
call
mov
out
mov
ljmp
ljmp
out
adcb
pop
lods
xlat
fimull
dec
jo
ljmp
sbb
js
dec
bound
lods
out
test
pop
rolb
mov
arpl
arpl
arpl
arpl
arpl
push
les
adc
adc
adc
push
push
mov
lods
inc
mov
mov
push
ret
adc
mov
lods
int
cmp
add
sbb
xchg
int3
test
push
mov
push
lods
jle
stos
mov
mov
xor
addr16
and
arpl
inc
cmpsl
test
rorb
arpl
arpl
arpl
ficoms
arpl
mov
out
adc
lahf
adc
push
pop
adc
dec
int3
mov
enter
sbb
jns
lods
repz
arpl
mov
sub
push
add
sbb
addr16
leave
lods
rol
dec
mov
popf
ret
lea
or
dec
mov
sbb
mov
imulb
or
mov
test
or
arpl
arpl
push
arpl
fbld
testb
fldenv
adc
mov
jl
movlps
lods
imul
lea
mov
sub
add
addr16
xor
arpl
pop
inc
outsb
sbb
xchg
pop
loope
in
hlt
enter
xchg
or
pop
jno
test
xlat
pop
push
arpl
jge
xlat
pop
in
push
cs
mov
mov
arpl
mov
packsswb
xchg
aaa
arpl
adc
jge
cmpsl
adc
adc
or
adc
sbb
test
bnd
pop
cs
or
cs
das
cs
mov
das
cs
sub
lock
mov
mov
add
out
mov
cmp
add
sub
ret
mov
cs
or
das
fldt
pop
cs
mov
int3
cs
test
push
mov
xor
or
arpl
push
arpl
out
movhlps
mov
jge
lahf
adc
enter
repz
outsb
fldt
addr16
or
mov
adc
add
or
lock
std
cs
or
cs
into
pop
lods
iret
jb
lods
imul
dec
in
add
push
inc
int
in
sbb
xchg
rcrb
xchg
lret
fsubrl
pop
int
cs
or
mov
xor
or
arpl
arpl
arpl
arpl
inc
adc
testb
fldenv
cmc
or
adc
sbb
test
and
in
and
mov
inc
ljmp
sub
mov
in
lods
mov
fs
shrb
or
lret
mov
lods
sbb
cmp
aaa
jnp
int3
dec
lods
or
xor
push
lods
sbb
cmp
xor
aaa
jnp
int3
dec
lods
or
xor
push
lods
sbb
add
or
mov
lret
dec
pop
iret
inc
outsb
or
je
lret
add
xor
test
insl
pop
mov
push
dec
push
dec
pop
sbb
xchg
in
aaa
lods
scas
mov
test
or
test
out
xorl
mov
push
adc
jmp
jnp
int3
xor
push
lods
xor
sub
jmp
push
mov
loop
outsb
in
arpl
arpl
arpl
mov
pop
mov
mov
sub
aaa
fsubr
mov
add
stos
shl
out
mov
cwtl
fmuls
imul
mov
loop
int
mov
xor
or
pop
stos
mov
mov
imul
or
jns
outsl
pop
or
push
mov
cmp
aaa
int
mov
or
cmp
addr16
dec
test
jb
mov
add
in
add
lea
pop
enter
jno
mov
gs
iret
sbb
or
fcmove
arpl
mov
lods
je
or
imul
or
push
mov
mov
mov
lods
je
jmp
lcall
sub
je
or
or
push
lcall
dec
mov
push
mov
rcrb
and
xor
add
mov
loop
addr16
iret
pop
dec
add
add
mov
loop
lods
sbb
dec
jmp
test
add
and
add
mov
fisubrl
mov
and
add
mov
mov
sbb
dec
int3
adc
jp
and
lods
and
or
mov
jecxz
ret
sub
push
mov
xor
mov
mov
pop
jl
les
fs
adc
xor
jge
ret
jg
lods
arpl
adc
sub
push
insl
sub
stos
sub
push
fdivl
dec
imul
xor
or
arpl
arpl
shll
adc
adc
repnz
loop
fucomp
lcall
rcrb
sub
pushf
or
cmpsl
mov
sub
fldenv
out
sub
sub
stos
or
mov
shlb
cwtl
lods
or
dec
xchg
mov
lods
std
cmpsl
movsl
sub
adc
sbb
sub
sbb
sub
out
sub
sbb
movsl
mov
add
into
shll
packsswb
loop
aad
arpl
adc
adc
xor
arpl
mov
adc
dec
jecxz
cmpsl
inc
cmp
lret
lret
xor
arpl
shrl
add
loope
pop
xor
mov
sbb
out
sub
sbb
sub
out
sub
sbb
sub
shll
out
mov
or
into
arpl
arpl
mov
push
aam
push
aam
adc
adc
ficoml
push
push
mov
fwait
xchg
push
dec
mov
xchg
fildll
lret
mov
push
les
dec
addr16
lea
jb
dec
addl
lahf
test
lahf
pop
pop
test
mov
mov
push
inc
in
out
das
sbb
sub
jne
sub
bound
shrl
mov
or
arpl
enter
xor
dec
arpl
mov
adc
insl
enter
adc
repnz
pop
sbb
aam
lods
xlat
cli
in
fucom
aaa
stc
test
pop
inc
iret
mov
sub
push
aaa
lret
lea
mov
addr16
mov
sbb
std
ja
stc
mov
popf
ja
jns
test
frstor
sbb
sub
fsubl
mov
mov
mov
jnp
push
shll
packsswb
sahf
das
arpl
push
aam
adc
adc
enter
stos
lea
push
ret
or
lret
data16
or
in
cltd
lock
pop
fisttps
and
lret
std
divl
or
test
dec
test
out
cmp
mov
data16
stos
enter
pop
and
out
stos
loopne
inc
mov
cwtl
sub
js
mov
sbb
movsl
mov
add
or
jle
jnp
mov
arpl
pop
arpl
push
aam
adc
adc
enter
imul
jp
call
jmp
idiv
movsl
andl
or
out
lret
pop
lret
lods
cltd
push
fwait
cmpsl
jge
loop
ret
lods
push
cltd
push
fwait
addr16
loop
ret
lods
push
cltd
push
fwait
scas
jge
loop
lret
lods
cli
lods
pop
call
or
addr16
lods
ror
mov
mov
adc
mov
ljmp
or
imul
xchg
lods
mov
lods
iret
inc
xchg
scas
cmpsl
and
iret
inc
xchg
scas
out
and
iret
push
or
mov
andl
movb
xor
sub
lods
ret
mov
and
lods
mov
lods
mov
mov
pop
add
xchg
inc
mov
loop
and
dec
test
sub
jo
lea
lods
fdivs
sub
pop
lods
or
sub
loopne
sub
lods
pop
ja
sub
pop
lods
or
sub
loopne
sub
lods
cli
lods
sbbl
cltd
clc
popa
out
pop
push
dec
add
dec
pop
dec
bound
sub
or
pop
dec
cltd
clc
or
jno
das
dec
push
xor
add
dec
into
addb
sub
dec
into
sbb
ror
xor
into
adcb
xchg
mov
xor
into
adcb
xchg
scas
xor
into
adcb
xchg
push
xor
xor
into
adcb
xchg
xorl
dec
into
xchg
mov
push
mov
cwtl
push
lods
dec
jnp
inc
shlb
insl
mov
ljmp
jge
mov
cmp
lea
test
enter
dec
xor
subb
sbb
add
insb
mov
and
xor
lods
and
clc
and
fadd
xor
aaa
and
mov
pop
lock
test
add
inc
stos
inc
repz
insb
insb
sbb
jge
shrb
insl
movsb
sub
mov
leave
or
call
dec
fisttpl
cmp
testb
jp
aaa
loopne
mov
jge
adc
sub
subl
mov
mov
cmp
cmp
fs
shrb
pop
sbbb
loopne,pn
adc
hlt
add
adc
sub
mov
or
std
aaa
sub
in
mov
mov
and
push
clc
es
repz
mov
adc
pop
dec
lods
dec
dec
insl
mov
mov
ja
or
enter
ja
add
add
loopne
dec
dec
xor
mov
stc
mov
popa
clc
sti
or
inc
push
ja
int
rcl
pop
jg
sub
dec
packssdw
lock
in
lods
jnp
or
out
call
int
jo
aaa
mov
push
pop
sub
mov
xchg
lahf
add
pop
cmpsl
mov
mov
clc
addr16
lods
mov
jge
dec
fiaddl
mov
dec
or
in
push
das
add
adc
adc
adc
or
outsb
cs
cmpsl
imul
int3
and
arpl
into
adc
into
adc
into
adc
scas
aaa
cs
pop
imul
lods
mov
dec
xchg
imul
push
add
mov
dec
in
push
das
add
add
imul
push
add
cmp
and
pop
lods
push
add
aad
cmpsl
and
lret
test
lret
test
into
loop
into
loop
into
loop
lods
stos
mov
dec
test
pop
sub
mov
divl
xor
mov
pop
mov
sub
cltd
aad
sub
sbbb
inc
dec
inc
push
pop
and
mov
mov
in
jne
fcoms
sbb
or
andl
jb
scas
popf
dec
mov
xlat
dec
mov
out
xor
inc
loopne
imul
dec
pushf
stos
in
scas
dec
std
sub
lea
in
sarb
movsb
dec
mov
fsubs
std
pop
movsb
lea
in
xchg
call
std
dec
cmp
lock
inc
cmpsl
movsb
jge
in
cld
push
aad
jmp
push
pusha
cli
push
pop
push
mov
pop
xchg
inc
shrb
int
push
arpl
scas
xchg
adc
jae
shrb
and
push
ret
xlat
lea
call
pop
test
add
cmp
xchg
ds
mov
addr16
pop
fcmove
inc
or
or
orl
xchg
cs
orb
xchg
ljmp
cmp
xor
mov
into
or
add
mov
add
cmp
push
xor
ret
out
movsl
lods
out
dec
pop
out
dec
pop
out
lods
pop
out
lods
pop
out
or
and
repnz
cwtl
xor
aam
push
test
ficomps
aaa
lods
aaa
dec
test
fidivrl
jb
push
push
ret
lea
ljmp
loopne
lods
dec
mov
lods
gs
mov
in
mov
int3
and
daa
or
pop
or
jnp
in
loopne
in
enter
push
add
sbb
orl
sbb
mov
movsl
idivb
jo
insb
or
or
or
or
or
or
push
inc
mov
gs
and
mov
das
addr16
mov
pop
dec
aaa
lods
dec
lock
jge
fs
mov
cmp
mov
lods
and
sub
cmp
push
lods
cs
sub
lods
sub
cmp
int
cmp
pop
cs
or
mov
lea
leave
fisttpll
adc
xor
lea
insb
or
int3
mov
clc
dec
mov
xor
adc
rol
imul
dec
push
push
cwtl
push
enter
mov
dec
arpl
dec
or
inc
or
dec
sub
mov
stos
ljmp
orb
push
stos
mov
lods
nop
dec
mov
lods
push
clc
lods
outsb
lods
xor
ret
or
lods
cwtl
sub
mov
pop
loopne
pop
push
adc
push
push
xchg
subb
sbb
sub
cmp
cwtl
int
iret
ds
mov
and
pop
lock
outsl
fimull
sub
ljmp
sbb
mov
rorl
xor
fsubrs
push
lods
stos
pop
stos
lods
rcr
or
lods
pop
add
mov
cmp
sbb
sub
pop
and
gs
inc
fwait
fwait
add
mov
js
scas
mov
ds
jecxz
andl
not
sub
pop
pop
fstpt
ljmp
enter
mov
dec
dec
xor
jae
or
xchg
mov
mov
push
jecxz
mov
pusha
pop
in
fsubr
clc
das
lods
adc
jecxz
mov
or
cli
arpl
mov
lods
test
cmpsl
jne
dec
pop
imul
mov
dec
dec
insl
mov
add
or
add
dec
mov
lock
dec
stos
andb
jge
lods
loopne
xchg
sub
jp
pop
or
adc
xchg
pop
dec
les
lahf
pop
dec
cmpl
mov
dec
xchg
jge
jp
mov
pop
dec
cmpsl
and
mov
adc
adc
adc
or
test
sbb
fadds
addr16
ret
lret
mov
fs
leave
pop
dec
mov
jge
adc
enter
pusha
ret
imul
and
add
loop
adc
adc
imul
in
and
dec
dec
insl
add
fnclex
scas
adc
adc
test
jnp
adc
orl
dec
and
pop
lods
push
add
fnclex
pop
lods
adc
and
cmp
and
dec
lods
imul
push
add
fnclex
and
lret
pop
lods
test
adc
push
aaa
and
imul
loop
adc
pop
lods
test
and
cmp
and
int3
mov
add
push
add
fnclex
pop
lods
adc
and
cmp
and
test
lods
imul
push
add
fnclex
and
lret
pop
lods
test
and
cmp
and
or
add
push
add
or
in
adc
lret
or
cmp
and
in
mov
insb
dec
imul
or
in
loop
lods
adc
and
cmp
and
dec
lods
imul
push
add
fnclex
and
lret
pop
lods
test
and
cmp
and
sub
add
push
add
fnclex
pop
lods
adc
and
cmp
and
mov
jge
lods
imul
push
add
fnclex
and
lret
pop
lods
test
and
cmp
and
and
pop
lods
push
add
fnclex
pop
lods
adc
and
cmp
and
ret
inc
and
lods
imul
push
add
fnclex
and
lret
pop
out
das
imul
cmp
add
popf
lods
mov
add
push
add
fnclex
pop
lods
adc
and
cmp
and
dec
or
in
push
das
add
lods
and
lret
pop
lods
test
and
cmp
and
mov
das
add
push
add
fldt
loop
adc
in
test
imul
cmp
add
cltd
insl
mov
add
push
add
fnclex
pop
lods
adc
and
cmp
and
dec
or
in
push
das
add
fnclex
in
adc
lret
or
pop
and
or
das
add
push
add
fldt
loop
test
pop
lods
fdivrs
sbb
mov
out
aaa
and
imul
push
das
add
fnclex
in
lret
pop
lods
test
and
cmp
and
scas
mov
insb
dec
imul
or
in
or
cmp
and
dec
lods
imul
push
add
fnclex
adc
lret
in
test
imul
cmp
adc
cltd
in
mov
add
push
add
fnclex
pop
sahf
das
lret
or
cmp
and
dec
inc
and
lods
imul
push
add
fnclex
adc
lret
in
test
imul
cmp
and
and
aaa
and
test
pop
lods
fnclex
and
lret
pop
hlt
test
or
cmp
inc
and
and
pop
lods
push
add
fnclex
pop
lods
adc
and
cmp
and
dec
or
in
push
das
add
fnclex
in
adc
lret
or
cmp
and
inc
and
lods
imul
push
add
fnclex
adc
lret
in
test
imul
cmp
inc
and
and
pop
lods
push
add
fnclex
pop
lods
adc
and
inc
push
push
je
pop
push
dec
dec
and
add
push
add
and
loop
insl
lret
scas
test
adc
cmp
sti
dec
add
dec
cmpsl
das
dec
cltd
ror
adc
xchg
repz
mov
test
cld
cmp
ja
adc
call
cmp
in
repz
or
dec
dec
sbb
xor
insl
call
fcmovnu
jo
mov
dec
and
lret
arpl
xor
test
inc
int
mov
jne
lock
dec
inc
in
mov
sbb
fs
sbb
adc
imul
outsb
in
insb
int
inc
mov
imul
xor
jae
rorb
or
xchg
push
sub
sarb
addr16
outsb
inc
insb
mov
xor
fnstenv
or
dec
or
div
aas
lods
js
jbe
lret
icebp
dec
mov
lea
call
pop
in
add
cmp
sti
imul
imul
or
ljmp
xchg
pop
or
and
outsl
cli
mov
insb
mov
xlat
lret
ljmp
arpl
shlb
push
sub
jo
cmpl
adc
int3
lea
int
test
mov
push
cmp
jge
shr
mov
inc
sarb
in
nop
mov
or
in
dec
call
dec
jae
pusha
jle
sbb
push
or
call
lret
and
lret
push
or
lret
faddl
js
sub
mov
loop
ljmp
stc
sub
lds
and
lahf
in
dec
sahf
jae
cmp
mov
subl
cs
lcall
mov
lods
imul
rclb
push
jg
mov
add
lods
lret
jmp
push
xchg
sti
inc
test
cmpsl
xor
arpl
ret
xchg
clc
loope
jge
loop
inc
sub
clc
sbb
pop
mov
testb
dec
clc
xlat
jb
cs
dec
xchg
clc
sbb
mov
mov
mov
dec
mov
mov
sti
dec
mov
push
pushf
test
lods
add
outsb
test
addr16
xchg
lea
ret
mov
dec
mov
ret
push
xchg
mov
and
sbb
inc
in
add
ret
imul
and
add
loop
adc
adc
imul
fs
and
dec
aaa
imul
and
add
loop
adc
adc
imul
adc
or
fwait
inc
cli
mov
mov
test
lods
mov
les
gs
ret
scas
mov
dec
hlt
and
cmp
cmp
xchg
int3
push
loope
dec
mov
in
or
js
pop
mov
add
shll
lods
hlt
push
pop
dec
push
cli
movsl
pop
dec
test
cmpb
lods
mov
pop
or
xor
mov
ss
inc
dec
out
rclb
pop
lods
in
stos
add
mov
and
stos
lock
ret
daa
dec
dec
add
and
mov
ds
loopne
mov
cwtl
or
dec
lods
mov
xchg
lods
iret
xchg
pop
outsb
lcall
pop
mov
dec
cli
add
lock
fs
adc
repnz
test
rorb
mov
sub
insl
cmp
jb
sbb
lods
cmp
fcoms
sub
out
adc
int3
fsubs
mov
and
nop
adc
je
arpl
cmp
inc
insb
aaa
lods
test
pop
outsb
shr
cmp
lods
mov
sub
sub
jnp
mov
repz
loopne
xchg
sub
sbb
imul
add
jnp
mov
dec
pop
sub
jle
lods
scas
and
cmpb
cmp
mov
lret
jae
jmp
push
insl
xchg
lods
cmpsb
mov
clc
ljmp
xchg
lock
or
xlat
int
lods
pop
mov
daa
lret
add
mov
jo
pop
enter
and
xadd
dec
lahf
mov
dec
sub
rorl
bound
add
lods
jle
cli
mov
cmp
jbe
xchg
dec
lods
xchg
lods
aas
mov
adc
sub
pop
out
jo
daa
xor
cmpsl
pop
mov
test
mov
addr16
clc
stc
or
sub
mov
add
in
pop
dec
dec
test
or
out
jo
pop
mov
shr
jo
jmp
mov
inc
mov
inc
lcall
fldcw
nop
or
mov
arpl
pop
fidivrs
test
and
clc
mov
test
arpl
pop
xorb
xchg
es
mov
jo
int
sahf
out
push
xor
pop
lahf
mov
sub
nop
test
lea
movsb
inc
cmp
jmp
aaa
mov
pushf
and
xor
aaa
mov
ds
iret
jecxz
dec
pusha
add
adc
add
lods
call
or
lods
or
dec
sub
sub
mov
add
push
and
xor
int3
pop
arpl
dec
repnz
in
sub
xchg
rep
or
jmp
cld
jb
ljmp
in
hlt
push
fs
lods
fimuls
adc
jnp
out
pop
das
lret
xor
mov
xchg
call
pop
add
enter
das
ljmp
xor
xor
sub
dec
mov
lcall
adc
pop
lret
push
fidivrl
aaa
lods
mov
mov
lods
test
cmp
in
xor
ja,pn
push
shll
push
lods
jns
das
lods
mov
cmp
or
in
jns
pop
lods
addr16
or
addr16
inc
addr16
lea
aaa
xchg
and
adc
mov
lcall
pop
jp
fldcw
addr16
adc
arpl
lret
sbb
ficompl
xchg
loopne
mov
or
pop
lods
enter
ljmp
lea
and
mov
dec
add
punpckhwd
lea
enter
fisubl
lea
loop
arpl
jg
mov
pop
mov
insl
pop
out
xchg
jae
fisttps
inc
into
mov
mov
aaa
lea
lea
lods
hlt
enter
or
dec
cli
pop
lods
mov
or
ficompl
lret
pop
mov
sbb
lea
pop
lods
movsl
mov
xor
data16
pop
sub
repnz
lods
movsl
cmp
and
repz
repnz
jl
lea
enter
loop
shrl
sbb
nop
fidivl
jnp
in
pop
or
pop
ret
mov
lods
and
sbb
fimuls
adc
pop
lret
das
xor
lods
or
pop
lods
aas
jns
lods
imul
mov
add
xlat
sbb
and
loopne
std
aas
xchg
test
cld
push
cmp
mov
ja
or
repz
lods
inc
mov
cmc
in
movsl
call
aaa
lea
mov
or
push
mov
lods
aas
mov
mov
mov
lods
aas
mov
or
push
mov
lods
aas
mov
out
pushf
mov
lea
or
lods
mov
ljmp
pop
sub
repnz
lods
movsl
cmp
and
repz
mov
outsb
enter
xchg
pop
lods
jae
call
nop
fidivl
jnp
in
mov
mov
test
fstp
movlps
pop
lret
das
xor
add
orl
pop
leave
mov
lods
insl
enter
mov
movsl
loopne
or
scas
mov
mov
mov
mov
inc
daa
jbe
cltd
repnz
test
js
sbb
xchg
add
or
arpl
and
jo
and
call
or
cld
sbb
sub
pop
or
jecxz
lcall
lods
loopne
sar
mov
mov
pop
lret
jl
addr16
dec
sbb
lret
int3
sar
add
dec
out
dec
dec
fiaddl
clc
sub
mov
inc
popa
stos
je
push
inc
cmpb
mov
cmp
sbb
dec
dec
dec
ret
nop
mov
lock
mov
mov
pop
addr16
iret
mov
loope
cs
pop
or
movsl
pop
enter
adc
das
sbb
xor
mov
in
lock
cs
orl
inc
shlb
dec
add
ret
mov
xchg
inc
call
jge
not
sub
imul
mov
jnp
sbb
cmpsl
pusha
js
push
sbb
clc
aam
pop
xchg
ljmp
or
shl
mov
nop
mov
dec
bound
loop
and
cli
sub
or
dec
je
test
add
push
int3
ja
dec
push
and
mov
add
or
jnp
fwait
jo
inc
sub
push
arpl
add
pushf
and
loopne
mov
add
or
mov
push
inc
pop
ljmp
sbb
jl
adc
mov
push
shrb
insl
fdivs
jb
jns
popf
and
pop
push
cmp
lea
push
push
mov
xchg
bound
popf
mov
clc
or
in
sub
adc
mov
into
test
popf
sbb
adc
jge
sub
lock
xchg
add
pop
xchg
cmpsl
gs
in
flds
push
pop
sbb
in
outsl
mov
sbb
enter
mov
or
mov
sbb
push
mov
loop
outsl
movb
push
sbb
out
lock
int3
xor
sti
inc
or
cmp
ja
xchg
mov
add
or
lcall
jns
mov
dec
addr16
sbb
fnstenv
in
and
imul
test
xorl
xchg
pusha
in
cmpsl
mov
or
insb
orl
cld
xor
outsl
scas
mov
cli
push
popa
or
in
shll
dec
fs
or
jnp
leave
sub
popf
orb
fwait
outsb
std
cmpsl
cld
lds
lods
sbb
push
into
mov
js
out
and
pop
jnp
mov
pop
out
add
pushf
push
imul
fcmovu
or
loopne
mov
out
daa
dec
lcall
sub
and
cmp
in
jnp
cmpsb
pop
loop
sbb
rorl
cmp
jg
pop
decb
jno
jo
rorb
sub
scas
dec
add
adc
nop
repz
inc
shlb
xchg
mov
inc
lods
sub
push
in
ret
test
out
test
sbb
int3
mov
andb
popa
or
push
subb
jp
xchg
mov
sub
bound
jge
sbb
imul
jnp
adc
mov
push
mov
mov
aad
mov
push
mov
dec
sub
mov
leave
dec
cmp
adc
or
adc
fsubl
int
sbb
mov
and
mov
mov
or
mov
or
jnp
xor
mov
orl
lahf
fwait
push
mov
ret
jmp
or
cmp
xor
pop
arpl
pop
mov
out
mov
and
mov
fcomps
cltd
adc
xchg
clc
sbb
add
popf
ljmp
sub
mov
in
jp
mov
push
in
mov
je
and
pop
sbb
mov
ja
and
es
and
ficoms
lret
mov
xchg
bound
clc
adc
jne
sti
ja
push
pop
sub
mov
inc
mov
inc
pop
sbbb
data16
push
addr16
jae
xlat
inc
mov
mov
dec
push
or
adc
out
cs
jae
arpl
imul
cwtl
mov
mov
and
mov
push
inc
rcrb
scas
and
shl
orl
jmp
add
pop
pop
dec
ret
insb
push
out
lods
mov
pop
lods
sbb
cs
loopne
pop
xlat
jo
mov
or
adc
add
and
cwtl
sub
dec
mov
daa
sbb
into
push
imul
dec
mov
inc
repnz
adc
lods
movsl
in
mov
lods
daa
shld
addl
mov
mov
lods
jl
test
sub
mov
dec
mov
movsl
and
cli
mov
imul
sub
adc
dec
fldt
bound
sbb
mov
mov
nop
dec
test
mov
in
and
enter
xchg
mov
cltd
push
sbb
popf
data16
pop
daa
inc
lea
lea
inc
or
or
lret
lret
xor
or
adc
adc
jb
int
dec
and
rep
mov
int
mov
cld
sbb
push
pop
dec
or
xchg
sub
mulb
mov
sub
add
insl
and
and
cmp
mov
sahf
cmp
inc
mov
daa
lods
arpl
movsl
jecxz
adc
and
jae
add
lods
lcall
dec
jmp
xchg
mov
dec
dec
fildl
daa
dec
jp
push
dec
adc
clc
jo
pop
dec
nop
testb
inc
or
stc
popa
repnz
sbb
push
mov
sub
or
lods
mov
or
mov
mov
mov
or
lods
fldl
jae
mov
icebp
mov
ret
push
in
mov
iret
jnp
push
js
mov
cmp
mov
mov
js
or
dec
and
ljmp
cli
mov
dec
dec
and
test
clc
test
pop
adc
fisubl
add
mov
xor
in
sbb
jae
mov
movsl
push
xchg
rorb
dec
push
dec
sbb
inc
dec
dec
and
arpl
fdivs
sub
cwtl
es
xlat
dec
xlat
shrb
xor
jp
add
cmp
insb
ret
or
inc
int
mov
and
mov
int
mov
and
and
dec
sbb
lock
or
pop
xor
push
mov
or
clc
stc
enter
scas
jno
adc
nop
xchg
sub
pop
into
or
pushf
stos
insb
inc
cmp
mov
jecxz
xor
lock
sub
and
mov
aas
mov
insl
dec
enter
dec
arpl
xchg
push
insl
jbe
dec
outsb
popf
mov
pop
nop
ja
jg
push
orl
mov
add
ja
add
int
inc
shlb
mov
loopne
or
mov
xchg
add
inc
test
add
pop
sbb
mov
jnp
and
and
lret
sub
and
dec
jge
cmp
xlat
pushf
test
adc
xchg
iret
dec
xlat
mov
cltd
mov
sti
imul
aaa
mov
push
out
into
ja
lea
cmp
or
xchg
xor
mov
dec
add
inc
mov
daa
lahf
dec
pop
dec
test
push
test
mov
mov
std
mov
fsubrs
xor
mov
jno
add
dec
pop
ljmp
in
mov
fneni(8087
dec
call
and
imul
xorl
dec
cs
loopne
mov
mov
sub
inc
add
cmp
cmp
xor
sub
or
test
push
mov
ret
loopne
sub
mov
push
cmp
int3
cli
fiaddl
xor
int3
dec
lea
mov
pusha
sarb
mov
call
xchg
sub
rcr
int
dec
push
push
leave
mov
add
or
int3
jno
cmp
cltd
inc
sbb
mov
filds
push
and
jecxz
in
vfrczps
dec
and
dec
imul
fcoml
dec
lods
sbb
mov
call
sahf
loopne
inc
stos
test
inc
sub
xchg
xchg
adc
lock
push
dec
or
lret
jecxz
in
popa
mov
sti
xchg
or
clc
outsb
int
or
test
addr16
cli
mov
addb
stos
xor
test
cmp
ds
ljmp
ret
push
insl
enter
cli
jno
lahf
into
mul
inc
mov
nop
ficompl
lret
push
cmp
addr16
cmp
iret
xchg
jecxz
cli
decb
inc
or
pop
dec
or
mov
enter
stos
loope
movsb
imul
scas
inc
enter
dec
lods
or
int
sbbb
scas
mov
enter
inc
mov
lods
mov
iret
in
push
adc
sub
xchg
lahf
out
add
mov
mov
test
clc
mov
or
dec
mov
push
cmp
or
int3
cmp
jo
lods
xchg
xchg
hlt
mov
out
xchg
ja
rol
and
enter
and
sub
sub
xchg
inc
daa
push
xchg
add
cmp
or
mov
jl
jae
push
or
gs
scas
lea
cmpsb
lods
sahf
shll
mov
sub
mov
pop
mov
xchg
repz
pop
enter
cmpsl
scas
mov
or
leave
jp
or
lods
pop
aam
jnp
adc
pop
dec
lods
call
nop
mov
dec
arpl
jge
mov
add
and
cwtl
adc
in
xchg
icebp
sbb
pop
je
inc
insl
sbb
mov
lock
or
addr16
cs
mov
inc
jae
sbb
iret
jp
jmp
out
aaa
lods
xchg
push
sbb
aaa
lods
mov
mov
pop
aaa
insb
lods
cltd
jnp
jge
fsubrl
mov
shrb
ffree
lret
push
addr16
mov
stc
add
or
insb
sti
test
lods
lea
inc
dec
lea
outsb
ljmp
mov
test
insl
sbb
mov
push
mov
inc
and
or
aaa
and
shlb
add
insl
mov
push
jnp
sub
rorl
mov
cwtl
test
inc
jnp
or
push
bound
loopne
repnz
xchg
out
mov
imul
inc
or
add
push
or
out
inc
scas
or
mov
xchg
jl
mov
or
mov
out
mov
or
and
mov
add
inc
dec
mov
mov
repz
xchg
lcall
mov
push
add
mov
inc
decb
mov
outsl
pop
sbb
mov
xchg
mov
inc
cmpsl
add
cmpl
imul
rcrb
popf
movsb
pop
inc
jecxz
mov
inc
inc
lret
xchg
lock
push
jae
mov
pusha
insl
or
cmp
jnp
in
or
xrelease
pop
sbbl
pop
and
push
fisubrs
adc
mov
js
addl
insl
sub
ja
cmp
inc
scas
test
xchg
jecxz
or
mov
insl
mov
and
insb
hlt
inc
out
out
sub
mov
mov
fcomps
fsubr
sti
mov
sub
lods
inc
xor
add
outsb
test
push
lods
or
mov
dec
addr16
inc
pop
std
dec
dec
and
test
arpl
scas
mov
inc
mov
cld
or
mov
sub
andb
into
insl
push
add
add
mov
ret
xor
push
ret
jae
sbb
orl
pop
fadds
pop
iret
cmpsl
inc
shr
imul
pop
xchg
lods
add
cmp
cltd
ret
outsl
loopne
call
nop
fisttpl
mov
push
dec
xchg
fstpt
inc
sbbb
cli
jecxz
jae
dec
aaa
test
or
jmp
rcrb
fadd
and
bound
lods
and
arpl
dec
sbbl
push
dec
adc
int3
bound
repz
repz
stos
inc
test
mov
or
or
fimull
dec
dec
and
test
lods
shlb
mov
mov
mov
or
lea
ljmp
add
cmpsb
in
adc
jns
pop
out
mov
js
stos
int3
addl
dec
fisttpll
lea
lea
repnz
cltd
lea
and
xchg
sub
mov
jb
cmpsb
insb
lea
insb
aam
daa
sub
pop
jge
xchg
nop
add
cwtl
and
imul
iret
jne
repnz
out
mov
add
push
arpl
and
outsl
lret
pop
ljmp
add
mov
mov
insl
xor
jb
mov
lods
sarb
and
push
sub
or
add
jle
add
push
jae
or
mov
lods
je
dec
insl
xor
outsl
mov
or
lret
nop
cmp
xor
mov
mov
test
mov
fldcw
mov
add
ja
or
cli
rorl
mov
mov
lods
sub
pop
gs
jp
aaa
test
insl
xor
arpl
jne
lret
insl
mov
lods
or
call
dec
in
jae
roll
sbb
sbb
add
ja
fdiv
sub
mov
mov
mov
orb
xchg
in
inc
and
or
mov
bound
mov
xchg
fiaddl
js
mov
sbb
lret
push
dec
add
pusha
loop
imul
or
cmp
shrb
jae
arpl
mov
out
jns
cmp
xorb
repnz
mov
mov
in
lods
lea
add
mov
mov
adc
arpl
fwait
mov
sbb
mov
xor
inc
xchg
push
or
mov
pop
jns
lahf
or
dec
dec
lea
mov
insl
addr16
outsl
dec
pop
push
push
xchg
cwtl
repnz
cmp
gs
and
pusha
sbb
int
sub
sub
subb
imul
sub
repz
lcall
popa
pop
xchg
clc
inc
int
test
insl
mov
inc
enter
sbb
subl
mov
mov
sbbb
sub
sbb
pop
loop
pop
dec
add
imul
mov
repz
mov
aaa
out
push
push
xchg
mov
pop
out
nop
jae
stos
stos
ljmp
aas
int
mov
dec
bound
xor
jmp
pusha
std
cs
sub
jae
push
loopne
sbb
pop
out
mov
lods
js
sbb
dec
js
sbb
push
inc
xor
sbb
add
lods
std
lods
or
adc
mov
cmp
cmp
xor
xor
xor
xor
popf
or
fcoms
addr16
jge
das
lea
push
pop
cmp
xor
lods
subb
sub
mov
outsl
sahf
call
out
mov
lods
lea
add
or
insl
and
arpl
lods
in
sarb
mov
lods
int
cmp
dec
jl
insl
xor
lods
aaa
xchg
mov
repz
adc
mov
enter
sbb
movsl
sbb
js
jle
xlat
lods
pop
cmp
push
cmp
jecxz
jae
insl
insl
pop
push
mov
lds
test
frstor
lods
mov
arpl
in
pop
pop
xchg
lods
orl
fdiv
jno
fsubrs
int3
cmp
test
or
lods
xor
sub
dec
dec
jne
jb
rolb
inc
mov
flds
add
mov
mov
mov
push
lods
cmp
sub
and
fwait
sbb
mov
inc
fs
lods
sbb
lahf
jno
cmpb
movsb
cltd
add
mov
inc
ret
rolb
fnstcw
or
scas
add
adc
sub
cmp
out
cmpsl
and
loope
call
movsb
or
mov
lods
ds
adc
inc
cmp
dec
insl
cwtl
mov
or
lock
push
lock
or
fdivrs
or
jl
and
or
lods
enter
clc
sub
sub
leave
lods
mov
push
insb
mov
arpl
in
cwtl
sbb
rol
sbb
mov
mov
into
or
sub
mov
mov
mov
push
cmpb
add
scas
cmp
lods
sbb
movsb
cmp
out
mov
jl
ret
push
daa
rcrb
mov
push
push
cmpsb
mov
stos
sub
call
loop
add
jge
xor
pop
cwtl
pop
and
mov
sbb
sub
cmp
sub
dec
or
xor
stos
push
mov
call
pop
mov
mov
mov
or
xor
cmp
jnp
sub
lods
and
cmpsl
xor
jnp
jge
push
clc
stos
call
loopne
jne
mov
shll
insl
jne
lret
lea
jp
aad
ret
rcl
mov
aad
leave
jecxz
xabort
mov
and
mov
adc
or
sbb
mov
mov
sub
dec
push
iret
enter
stos
sbb
repnz
leave
xchg
mov
adc
mov
movsb
xchg
mov
daa
pop
cwtl
dec
mov
pop
lods
mov
dec
or
test
mov
mov
mov
lods
jns
out
sub
mov
jbe
leave
cmp
stos
mov
pop
or
add
lea
cmp
popa
nop
xchg
ficomps
and
fwait
adc
shl
insl
jge
jo
inc
mov
mov
xchg
mov
dec
in
sub
ljmp
out
push
stos
stos
or
jecxz
push
clc
insb
rcrl
dec
jbe
gs
mov
dec
push
sub
dec
mov
xor
shl
xor
shl
xor
sar
push
dec
lahf
pop
cmp
pop
mov
iret
ret
mov
mov
mov
mov
dec
mov
dec
fisubrl
push
test
push
in
push
dec
add
std
dec
add
sub
rorl
add
jecxz
dec
add
add
dec
add
test
dec
xchg
fmuls
sbbl
mov
loop
clc
or
or
jle
add
dec
or
int3
pop
dec
loop
add
push
pop
dec
loop
pop
lods
fsubs
in
fistpl
divl
push
jge
and
push
fstl
int
out
and
mov
call
push
int
in
imul
inc
mov
mov
stc
int3
int
add
sbb
sub
imul
mov
orb
push
fwait
inc
sbb
test
sub
mov
clc
cmp
sbb
outsb
scas
xchg
xchg
sbb
fildl
sub
sahf
pop
lea
sub
add
out
mov
mov
jnp
pop
or
imul
dec
dec
and
add
and
loopne
je
mov
arpl
adc
in
fildl
stos
add
lods
add
mov
cmp
or
xchg
mov
je
mov
es
push
xor
std
outsb
mov
popf
ja
call
jae
ss
xchg
std
enter
dec
in
rcrb
popa
cwtl
movsb
dec
pop
pop
jecxz
lock
repz
sbb
push
rcl
adc
xchg
cmpsb
mov
iret
adc
call
lea
fistps
fistps
lock
mov
mov
lods
mov
xchg
cmp
and
pop
push
movsb
enter
enter
popa
mov
or
loop
sbb
test
dec
lods
rolb
testb
and
gs
stos
adc
add
or
or
jge
test
sub
mov
sub
mov
adc
adc
mov
int
sbb
cmp
lods
or
mov
call
imul
outsb
xchg
mov
jp
adc
adc
push
add
push
lods
inc
cld
daa
and
jb
in
jge
int3
xor
cltd
lods
popf
add
stos
out
mov
ret
xchg
dec
mov
sub
mov
addr16
jae
stc
lahf
xor
in
pop
movsb
mov
pop
jns
mov
scas
leave
cmp
cmp
mov
mov
incb
adc
scas
inc
xor
or
outsb
insl
pop
jne
mov
enter
jne
xchg
dec
sub
mov
mov
outsl
in
sti
adcl
mov
lods
arpl
enter
insl
pop
lret
jg
dec
mov
js
dec
decl
test
ljmp
dec
jge
lods
andb
jo
enter
xchg
jne
mov
in
and
mov
fimuls
dec
and
repz
push
shll
mov
xcrypt-ofb
cmpsl
sub
adc
clc
into
loop
cmpsl
and
mov
loop
aaa
dec
and
mov
mov
xchg
test
dec
cmp
pop
dec
add
and
cld
and
jnp
jne
mov
or
xchg
andb
ja
aaa
addr16
or
mov
or
or
or
adc
arpl
or
js
cmpsl
into
and
mov
and
dec
jmp
dec
std
popf
and
in
jge
xchg
pop
aaa
lods
sti
xor
push
addr16
arpl
outsb
ret
lods
mov
std
lods
mov
sub
jnp
cmc
scas
adcl
push
andb
pop
jp
scas
xchg
mov
les
je
and
arpl
scas
sub
push
insl
nop
push
and
cmp
and
mov
repz
pop
leave
cmp
lods
and
sbb
jp
lods
insl
enter
cmpsl
lods
aas
lods
sbb
mov
scas
loopne
lods
cltd
in
pop
lods
pop
scas
push
andb
or
pop
lods
add
pop
sub
stc
lods
out
or
lods
aad
or
push
and
xlat
and
subl
lods
dec
pop
mov
dec
adc
dec
mov
and
ja
xor
cld
or
adc
or
pop
aaa
xchg
andb
fs
aaa
xchg
adc
push
dec
xchg
adc
arpl
clc
cmpsl
mov
js
cmpsl
into
and
mov
and
prefetch
arpl
mov
lea
lods
cmpsl
enter
mov
lods
bound
lods
jnp
cmc
scas
mov
adcl
lods
mov
out
orl
addl
lcall
cmp
sbb
cmpsb
punpckhbw
lahf
push
movsb
adc
inc
orl
ljmp
data16
mov
popl
leave
int3
cli
xchg
in
clc
das
or
push
lods
and
mov
js
xchg
in
or
in
mov
cmp
in
sub
adc
pop
imul
in
mov
push
pop
push
test
or
lods
mov
push
jecxz
in
and
mov
mov
push
mov
sbb
aad
sbb
sub
aad
and
xchg
arpl
add
pop
pop
inc
add
sbb
addr16
xchg
in
and
mov
dec
and
mov
adc
jl
add
dec
test
addr16
pop
dec
adc
addr16
sbb
addr16
inc
aad
pop
shll
or
cmpsl
pop
shll
lret
sbb
addr16
nop
push
aad
addr16
into
sbb
loope
cli
jle
movaps
into
adc
xchg
and
loope
mov
mov
push
in
aam
adc
loope
mov
sub
test
mov
sub
in
mov
push
loope
mov
daa
and
loope
mov
out
cmpsl
mov
addr16
scas
and
mov
mov
push
sbb
or
into
jmp
jle
movaps
into
adc
scas
imul
dec
sub
cwtl
sbb
rorl
int3
lea
adc
loopne
cltd
jl
jg
int
jecxz
dec
sub
sti
sbbl
adc
fldcw
lea
lock
xlat
mov
out
and
jne
mov
push
lock
jbe
insb
jae
test
enter
stos
jnp
add
xchg
insl
enter
pop
add
xchg
jne
xchg
xor
xchg
push
pop
loopne
test
lea
movl
leave
or
nop
mov
into
inc
lea
sbb
and
mov
leave
in
add
loopne
dec
jl
xlat
test
dec
mov
dec
add
sarb
mov
xor
xor
push
arpl
jge
orl
fistpl
stos
test
mov
or
sbb
lea
enter
aaa
adc
in
cmp
lahf
fdiv
dec
mov
inc
jge
push
enter
aaa
mov
loope
adc
in
out
daa
cmp
dec
mov
loopne
repz
and
pop
fadds
lea
enter
dec
arpl
or
cmp
push
enter
and
scas
jnp
add
mov
insb
arpl
jns
lea
jmp
je
aaa
cli
adc
cli
pop
aaa
cli
adc
cli
pop
aaa
cli
adc
cli
pop
aaa
cli
and
cli
jne
sbb
pop
lods
sbb
call
sbb
jne
sbb
pop
lods
sbb
call
sbb
jne
sbb
pop
lods
sbb
call
sbb
jne
sbb
pop
lods
sbb
call
sbb
jne
sbb
pop
lods
sbb
call
sbb
jne
sbb
pop
lods
sbb
call
sbb
jne
sbb
pop
lods
sbb
loopne
cmp
dec
scas
out
push
mov
fadds
test
cmc
insb
and
mov
js
cld
lea
xor
mov
bound
adc
outsb
lea
enter
jnp
add
enter
enter
in
lock
outsb
lea
mov
lock
mov
enter
dec
pop
out
repz
jnp
xchg
xor
outsl
cwtl
out
inc
lea
adc
mov
cmp
scas
push
mov
enter
mov
in
cmc
insb
and
mov
js
cld
lea
and
mov
sbb
insl
jnp
mov
lock
mov
push
or
mov
repz
inc
mov
mov
rorb
lods
push
pop
cmp
sahf
mov
cmpl
lea
push
cmpsl
loopne
mov
lea
enter
ret
xchg
mov
sbb
lods
jnp
loop
mov
lods
enter
mov
or
push
insb
inc
dec
xchg
aaa
push
and
push
pop
lods
xchg
push
call
xchg
push
jne
xchg
push
pop
lods
xchg
push
call
xchg
push
jne
xchg
push
pop
lods
xchg
push
call
xchg
push
jne
xchg
push
pop
lods
xchg
push
loopne
push
jne
xchg
push
pop
lods
xchg
push
call
xchg
push
jne
xchg
push
pop
lods
xchg
push
call
xchg
push
jne
xchg
push
pop
lods
xchg
push
call
xchg
push
jne
xchg
push
pop
lods
xchg
push
call
xchg
push
jne
xchg
push
jl
inc
or
inc
mov
sbb
pop
lea
dec
dec
inc
insb
test
jl
jg
lds
in
das
sbb
jnp
pop
imul
test
mov
ljmp
loopne
pop
mov
loopne
dec
in
addl
inc
pop
in
xor
pushw
pop
lea
loopne
jl
mov
loopne
mov
lea
enter
ret
xchg
je
paddsw
sub
fsubrl
mov
inc
inc
fucomp
lods
enter
inc
out
mov
lea
lods
mov
xor
xor
push
arpl
jge
xorl
mov
lea
aaa
sbb
stos
push
lea
jge
das
dec
xchg
inc
inc
fisttpll
loope
fisttpll
sbb
or
adc
xchg
inc
inc
fisttpll
cmp
jge
cmp
aaa
lea
enter
dec
add
inc
pop
leave
test
mov
dec
sahf
inc
pop
lea
enter
push
fdiv
mov
or
dec
fidivl
insl
push
cmp
cwtl
fisubl
arpl
gs
outsb
cwtl
call
add
call
add
dec
cmpsl
or
cs
or
fisubs
add
lock
push
jnp
into
lcall
push
insl
test
mov
int
sbb
add
mov
insl
iret
or
mov
mov
mov
fs
insl
sbb
stos
bound
add
imul
xchg
pusha
lea
in
pop
dec
pop
or
int
dec
cmp
or
lea
dec
mov
cmp
lea
test
xor
sub
addr16
mov
adc
xor
addr16
mov
cs
insb
xor
inc
cmpsb
stos
inc
test
add
jo
into
jecxz
jnp
das
dec
mov
xor
test
jge
pop
or
in
int
push
jmp
in
push
mov
or
jmp
mov
lods
jp
or
push
sbb
pop
push
js,pn
fsubl
lods
mov
or
or
and
sub
add
frstor
or
arpl
fadds
int
in
mov
into
js
mov
sub
mov
or
enter
ret
lea
pushf
divl
ret
mov
and
or
scas
clc
subl
dec
jge
insl
movsb
lods
and
out
lods
sar
jae
xchg
inc
fwait
xor
push
lret
and
sub
jge
rorb
sub
sub
xor
cmp
orb
mov
in
loopne
cmp
xor
sti
cmp
sbb
repz
in
jp
popf
mov
cld
ret
cmp
pop
sbb
ret
push
enter
jnp
orb
dec
jae
jmp
ret
adc
rcrb
dec
mov
mov
mov
in
push
cmp
sub
ret
loopne
adc
push
int
mov
or
sub
pop
lods
stos
mov
sub
xchg
adc
mov
inc
sti
cmp
shl
test
insl
push
jo
int
inc
adc
or
jecxz
mov
shlb
cmp
lods
ljmp
nop
xor
stos
inc
pop
movsl
cmp
adc
or
popl
cmp
push
daa
adc
mov
mov
fisubl
fiaddl
dec
push
into
sbb
xchg
into
jae
xor
into
jge
mov
insb
mov
into
sub
shr
or
dec
cwtl
and
je
insl
jg
rcl
cmc
stos
dec
and
add
enter
sti
stc
sub
inc
lea
call
insl
mov
andl
lret
xor
mov
hlt
push
add
sbb
mov
cltd
outsb
adc
pop
mov
arpl
xchg
enter
ret
mov
mov
or
nop
and
mov
popf
clc
adc
pop
stos
xchg
mov
ja
jnp
push
mov
cs
cltd
into
bound
hlt
out
pop
insl
popw
mov
jecxz
adc
xor
add
pop
rcrb
inc
cmpsl
adc
mov
xchg
mov
lea
mov
xchg
jo
mov
add
lock
insl
std
shrb
call
push
mov
or
inc
xchg
add
lock
dec
cmp
sub
lea
dec
lea
jge
andl
push
cs
mov
dec
dec
mulb
sbb
dec
dec
add
sub
add
jge
dec
insb
mov
dec
mov
and
pop
js
and
outsb
dec
jbe
xor
mov
lret
lea
jp
arpl
movl
nop
xor
cmp
adc
or
jae
fildll
sub
repz
dec
sub
fs
in
fdiv
movsl
orl
ljmp
sbb
test
cmp
lea
dec
dec
int3
dec
xchg
jo
lea
mov
mov
ljmp
sub
fisubl
sub
push
xchg
mov
lods
dec
lock
adc
dec
adc
sub
mov
lods
mov
add
lea
and
or
lods
add
lea
push
and
push
arpl
retw
cltd
sbb
or
in
pop
or
inc
into
sbb
or
cmp
int3
pop
dec
pop
mov
js
in
movl
dec
nop
adc
add
insl
sub
sar
cmp
out
sub
rcrb
lods
and
mov
addr16
pop
sbb
cmp
dec
mov
sbbl
in
shl
mov
insl
dec
mov
dec
jae
int3
fs
pop
sub
jecxz
jnp
xor
enter
or
jae
test
fistpl
into
cmpsb
adc
mov
das
dec
gs
sbb
imul
fmul
add
insb
mov
insb
out
mov
fs
fisttps
dec
jnp
lcall
mov
sub
repz
out
sbb
dec
xor
test
hlt
jo
cmpsl
jp
addr16
data16
lods
addr16
xchg
mov
adc
mov
lcall
sub
lock
insl
insb
inc
lock
and
add
sub
stos
fdivs
jo
cmpsl
jnp
fdivrs
call
mov
xchg
pop
pop
mov
arpl
outsl
pop
and
andb
jecxz
sbb
mov
or
mov
and
arpl
dec
xorb
sbbb
xchg
add
mov
or
repz
out
lods
scas
or
mov
adc
sub
mov
rcrb
xchg
sbb
int3
or
leave
sbb
or
jg
cmp
mov
jge
push
out
in
mov
cltd
xor
push
int
call
mov
enter
sub
mov
add
ds
in
and
shr
lea
xchg
or
sahf
lea
int3
sbb
shlb
fcoml
dec
gs
fcoml
dec
dec
jo
outsb
sub
sub
mov
mov
mov
scas
mov
xor
push
stos
push
add
mov
and
aaa
adcb
cmp
lret
mov
or
pop
js
mov
inc
mov
mov
int
arpl
push
push
lea
mov
in
mov
cmp
mov
cmpb
pop
ljmp
jne
xchg
mov
adc
mov
push
xchg
scas
push
ret
pop
sbb
xor
aam
mov
add
xchg
mov
mov
and
jae
sbb
push
xchg
scas
add
lods
or
mov
jne
jmp
in
push
int
arpl
outsb
and
sub
cmp
mov
dec
mov
lods
call
lret
and
lret
jne
call
lret
loopne
clc
fmul
outsb
sub
arpl
stos
xchg
push
ja
mov
loopne
jl
mov
and
lret
jne
call
lret
ljmp
push
or
lret
fsubrl
aaa
lret
and
lret
jne
call
lret
add
add
aad
lods
dec
enter
dec
push
and
cld
lea
call
imul
mov
dec
and
dec
fadd
mov
and
dec
fsubrl
aaa
dec
and
dec
pop
data16
xchg
sub
dec
cmpsl
mov
xchg
or
insl
sub
push
pusha
push
mov
mov
mov
roll
int
stos
mov
xor
jae
mov
in
push
lret
arpl
addr16
mov
push
xor
push
ljmp
push
or
push
ljmp
aaa
in
mov
outsl
inc
add
outsl
inc
arpl
outsl
inc
inc
insl
in
xchg
pop
mov
mov
or
mov
aam
sub
xchg
lret
and
or
les
in
lcall
aaa
outsb
mov
xchg
das
mov
mov
add
int3
aaa
int
pop
out
outsb
cltd
jl
aaa
int
out
jge
fisttps
or
outsb
test
aaa
in
xchg
lahf
scas
or
dec
out
fwait
lock
lea
mov
aaa
call
call
lret
into
and
lret
stos
call
lret
aad
call
lret
lahf
nop
push
adc
mov
insb
into
push
das
lret
and
lret
push
mov
or
mov
jmp
or
lret
pop
movsl
call
lret
and
lret
push
or
lret
fcoml
push
mov
mov
mov
and
aaa
mov
mov
add
xlat
lea
adc
out
jge
into
sahf
add
jmp
dec
pop
in
sub
push
pop
mov
leave
outsb
ret
das
dec
mov
lret
or
and
loop
pushf
dec
and
pop
or
cld
outsb
out
mov
adc
mov
aad
mov
ret
fidivs
xchg
insl
mov
ret
jns
psrlq
sub
mov
adc
mov
aad
lods
push
out
stos
imul
sub
insl
dec
mull
xchg
insl
stos
imul
sub
insl
sbb
push
fsubp
outsb
insl
iret
sub
mov
lds
nop
sti
cmp
lds
sti
sti
push
push
insb
add
or
imul
leave
lds
lret
push
inc
add
shlb
cmp
lds
insl
insl
dec
mov
and
mov
cld
sub
ljmp
in
cli
insl
mov
pop
adc
xlat
xor
das
insl
pop
aam
lds
ret
lods
dec
iret
inc
add
out
ljmp
push
repz
cmp
mov
test
dec
cmpsl
adc
mov
jbe
ljmp
sub
add
dec
leave
push
lock
inc
push
dec
sub
or
dec
int
insl
jbe
pop
fsubl
test
xor
mov
mov
xchg
mov
jge
xchg
add
insl
cmp
in
pop
insb
and
insl
push
sti
mov
add
xor
pop
sub
push
sti
mov
add
gs
subl
cmpsl
lea
enter
xchg
int
mov
int
pop
lret
mov
push
add
add
jae
adc
jecxz
jnp
adc
xchg
or
enter
xchg
int
jecxz
insl
jnp
mov
xchg
inc
orl
add
clc
and
mov
stos
mov
sbb
jge
sub
mov
cmpsl
shlb
test
jne
insb
and
jmp
jecxz
inc
dec
addr16
and
scas
add
fucom
mov
mov
dec
sbb
push
mov
or
cld
cmp
push
mov
stos
in
jo
leave
ja
sub
jae
stos
outsl
or
popa
in
lods
hlt
bound
std
or
mov
push
loopne
inc
mov
mov
std
pop
jle
mov
lock
ret
xchg
mov
jo
lock
push
add
into
lea
inc
dec
dec
arpl
push
aaa
cmp
lcall
push
push
cli
sbb
sbbl
mov
js
or
push
int
and
pop
xchg
stos
mov
fbstp
sbb
sub
sarb
insl
add
lods
mov
ror
hlt
lods
mov
bound
dec
xchg
xor
nop
imul
xchg
lea
addr16
stc
outsb
sarb
mov
mov
fiaddl
dec
mov
xchg
and
lods
dec
sub
pop
pop
leave
lods
sub
das
jp
sarb
lret
in
int3
inc
and
ret
xlat
inc
push
pop
pop
addr16
fmuls
insl
lock
scas
jnp
adc
ret
aas
jbe
lea
pop
xor
enter
je
xchg
push
push
ds
add
mov
rorl
or
call
cmp
pop
test
leave
xor
lock
aad
ss
mov
pop
ret
jg
mov
jg
mov
push
sub
cmp
xor
imul
jae
mov
mov
int
or
mov
mov
nop
pop
xor
cltd
mov
mov
or
mov
es
pop
in
pop
in
pop
dec
pop
int
lock
nop
push
insl
in
in
in
in
lods
dec
fcmovnu
xor
add
push
insl
in
in
in
in
popa
in
mov
stos
mov
nop
dec
xor
dec
int
fdivs
enter
mov
push
in
lds
or
lcall
arpl
sbb
xchg
sbb
fucomi
xchg
sbb
loopne
sbb
repz
cmpsl
lods
int3
out
mov
nop
add
mov
lods
mov
sub
and
cwtl
inc
sub
dec
xchg
rcrb
ds
js
mov
ret
js
mov
cmp
and
push
and
or
ficomps
pop
lahf
std
loopne
or
or
mov
mov
and
or
pushf
adc
lea
lcall
pop
and
in
and
dec
stos
mov
push
pop
lods
insl
stos
lods
sub
and
int
ror
jns
sub
mov
pop
add
pop
mov
out
insl
daa
mov
dec
jge
arpl
test
cli
dec
nop
cmp
dec
add
mov
sub
sbb
or
jecxz
clc
add
dec
leave
lock
or
or
and
sub
out
mov
xor
enter
out
xchg
bt
or
lea
xchg
mov
popa
imul
xor
js
mov
popf
imul
shl
or
inc
stos
movl
dec
sbb
inc
xchg
mov
scas
sbb
int
mov
add
test
fstpl
addb
or
fcoms
shlb
loopne
pop
lahf
ja
sub
movl
sbb
dec
nop
daa
pop
dec
je
pop
mov
dec
je
inc
mov
int3
je
or
addr16
je
dec
mov
dec
jae
add
mov
mov
push
roll
aaa
js
jp
int3
adc
sub
xchg
into
add
fwait
cs
aaa
insb
mov
mov
mov
mov
push
pushw
mov
lcall
call
scas
rcl
scas
and
fiaddl
xor
jb
nop
gs
insl
pop
mov
sbb
adc
aas
inc
call
scas
rcll
mov
inc
push
out
xchg
pop
int
pop
adc
ljmp
jb
leave
xchg
roll
sti
insl
adc
pop
jg
stos
xchg
imul
xchg
jb
or
mov
repnz
mov
xchg
xchg
ljmp
xor
cld
fmuls
imul
add
pop
in
in
mov
pop
lea
clc
outsb
xchg
push
dec
scas
pop
out
dec
pop
int3
push
jo
int
in
aaa
int3
push
js
mov
outsb
out
dec
arpl
sbb
addr16
pop
repnz
and
aas
out
in
in
push
fimull
enter
int3
push
repnz
push
fs
xor
dec
xor
add
inc
outsb
add
and
push
scas
sub
pop
in
repz
out
pmulhw
outsb
movsb
out
scas
leave
and
aaa
loopne
int
jae
insl
pop
add
push
repz
xchg
scas
pop
add
and
add
inc
mov
dec
insl
loopne
scas
jae
adc
add
adc
into
adc
into
adc
into
adc
into
add
dec
dec
add
loopne
mov
xchg
int
pop
add
pop
xchg
jmp
and
aaa
loopne
int
jae
xor
int
int3
xchg
xchg
mov
sub
xor
int
pop
add
pop
xchg
scas
ljmp
and
mov
pop
add
dec
int3
cmpb
mov
loop
int
mov
fmul
adc
into
adc
into
adc
into
adc
inc
arpl
dec
lds
and
jnp
int
pop
add
pop
xchg
sub
int
jnp
xor
int
int3
adc
xchg
pop
lods
add
arpl
enter
cmp
mov
fdivrs
arpl
imul
lods
mov
push
push
test
dec
dec
arpl
and
add
push
stos
xor
mov
fs
and
dec
push
arpl
dec
out
stos
or
adc
mov
xlat
in
arpl
mov
arpl
fs
pop
out
inc
xor
insl
sub
scas
jnp
adc
push
js
jecxz
dec
or
sbb
jnp
mov
arpl
add
fmul
adc
into
adc
into
adc
into
adc
dec
orl
sub
xor
arpl
pop
into
loop
into
loop
into
loop
into
loop
iret
rorb
cs
sub
pop
lods
jnp
mov
rorb
shr
adc
dec
int3
repz
xchg
cli
fwait
dec
and
in
iret
jp
add
pop
dec
xchg
push
fwait
leave
push
xchg
lret
lock
xchg
rorb
sbb
lret
xor
adc
insl
mov
aam
iret
push
ret
ljmp
xchg
inc
lods
imul
mov
lret
sub
xor
cli
int3
out
mov
xor
fstl
scas
jae
mov
in
xchg
out
call
or
add
ror
lods
movsl
nop
fisubl
enter
sub
and
frstor
and
shlb
xchg
pop
mov
lods
insl
loopne
stos
enter
cmp
stos
jae
push
xor
pop
mov
popa
add
mov
push
lods
sbb
mov
lods
jnp
push
mov
movsl
pop
lret
jns
add
push
pop
or
loope
gs
pop
sbb
jnp
mov
lret
xchg
out
jle
cmp
lcall
loopne
mov
dec
outsb
lods
pop
add
lods
insl
jae
stos
jnp
inc
and
pop
xchg
xor
fcmovu
sub
loopne
add
mov
xchg
mov
jp
mov
sub
jge
or
xchg
mov
mov
movsl
mulb
imul
xor
orl
sbb
pop
arpl
push
adc
or
test
data16
imul
mov
xchg
xchg
mov
xchg
sbb
push
cli
xchg
push
leave
mov
into
or
or
repz
test
orb
cmp
subl
lock
sbb
xor
jmp
jo
inc
fisttpll
mov
mov
test
fcmovne
dec
mov
dec
jnp
inc
and
add
mov
sbb
scas
enter
lds
arpl
cmp
adc
lods
mov
push
cmpsl
jl
imul
test
lea
mov
mov
and
stos
cli
arpl
stos
fmuls
and
insb
cmp
sub
lods
or
cmp
mov
and
sub
sub
mov
push
jae
insl
sarb
add
js
sub
cmp
xchg
add
mov
jecxz
andb
mov
xor
imul
mov
mov
daa
mov
outsb
or
imul
cmc
outsb
lods
mov
mov
shlb
sbb
and
sbb
mov
and
xchg
lods
sub
mov
mov
cmp
lock
rcll
sub
int
sbb
outsl
cmpl
cmp
outsl
enter
push
pop
test
rorl
push
sub
sbb
into
leave
arpl
push
sbb
gs
dec
mov
push
lock
dec
loop
jmp
fisubrs
pop
mov
push
jp
js
std
orw
int3
arpl
jle
jecxz
popf
mov
xchg
cmp
shlb
ds
loop
inc
sbbb
mov
or
jmp
loopne
mov
push
test
mov
mov
jne
mov
push
dec
or
rolb
les
stc
stos
mov
xor
lods
call
rol
sbb
dec
adc
insl
insb
dec
xor
dec
xchg
mov
dec
imull
inc
in
and
fidivrs
sub
dec
shl
test
dec
dec
lret
insl
dec
lods
add
mov
out
int
mov
mov
in
imul
mov
dec
sbb
shlb
jle
lea
inc
xor
or
sub
or
add
sub
and
jae
stos
and
arpl
aaa
cmp
pop
sub
adc
pop
data16
pop
mov
sub
pop
insb
dec
pop
pop
pop
sbb
mov
adc
sbb
lcall
es
push
add
pop
les
sbb
mov
into
jecxz
sar
pop
stc
dec
js
call
sub
push
ror
adc
fcmove
xor
bound
sub
dec
mov
dec
or
lea
or
testl
nop
insb
jle
int3
test
add
add
jmp
lods
cmp
xor
lea
push
or
not
fnstsw
fistl
dec
cli
shr
push
cwtl
shrb
pop
pop
mov
ret
test
mov
push
push
mov
pop
push
jnp
hlt
push
jae
pop
xchg
js
xor
leave
sub
add
sub
or
mov
adc
pop
mov
xchg
jno
cwtl
inc
ljmp
pop
and
ljmp
inc
mov
lods
stos
jp
cs
clc
inc
out
sbb
dec
enter
imul
mov
hlt
enter
xchg
mov
outsl
ljmp
xchg
repz
orl
lock
shr
jmp
xor
cmc
and
lahf
push
mov
lods
mov
sub
insb
xor
outsl
rcr
push
int
inc
mov
test
jae
inc
jmp
insl
sub
nop
loopne
sbb
int
scas
add
cmp
push
jno
mov
sub
test
jae
aaa
in
xchg
call
adc
loopne
pop
call
inc
mov
inc
insb
or
addr16
pop
js
enter
mov
in
outsl
push
lods
roll
outsb
out
and
daa
outsl
mov
and
sub
mov
sub
stos
push
sbb
popa
jmp
in
mov
in
ja
scas
mov
cmpsl
cli
xchg
sti
ja
adc
dec
out
aaa
dec
cltd
lea
or
pop
mov
inc
dec
mov
xor
pop
sub
jae
lods
les
int3
dec
jmp
clc
scas
adc
out
insl
push
out
cmp
insl
cmp
addr16
popf
dec
mov
ret
push
inc
add
inc
mov
cli
push
inc
mov
xchg
int3
lods
out
add
add
lods
and
cmpsl
addr16
xchg
adc
mov
mov
adc
jo
inc
ljmp
addb
dec
lods
sub
test
aas
outsl
scas
mov
mov
and
clc
repz
enter
dec
nop
jmp
imul
mov
pop
mov
add
dec
mov
mov
lahf
imul
dec
sahf
sbb
sub
imul
fisubl
mov
add
ret
pop
call
leave
or
jmp
push
push
es
and
push
xlat
dec
sub
push
xchg
and
sbb
ret
loopne
mov
pop
loope
ds
push
in
test
push
sub
lods
lods
pop
mov
dec
es
push
fistpll
scas
stos
call
daa
or
outsb
sub
lea
ret
mov
in
cmp
or
test
fisttpl
inc
or
lods
sub
outsb
lea
dec
scas
push
xor
and
sub
mov
push
arpl
dec
ljmp
insl
jge
js
jecxz
int3
xor
inc
pop
pop
mov
sbbb
sub
push
or
pop
gs
cmp
in
out
insl
cmp
pop
pop
or
fstpt
cmp
adc
xchg
dec
aam
je
dec
cmp
dec
jnp
mov
lods
sub
cmpl
mov
arpl
xchg
or
lret
mov
dec
mov
jae
notb
stos
xchg
push
xchg
push
mov
mov
cmpl
addr16
mov
or
addr16
sbb
or
mov
lods
movaps
and
sub
or
jae
fs
ss
repz
sarl
and
mov
jae
mov
arpl
hlt
and
dec
shll
xlat
xor
add
or
mov
xchg
mov
mov
fisttpll
int
cmp
add
push
or
lods
stos
call
dec
cmpb
mov
xor
and
fwait
lods
jge
adc
adc
dec
jecxz
mov
jbe
enter
nop
push
shlb
dec
lret
xor
xor
pop
out
dec
or
lods
pusha
or
cwtl
cli
jmp
loope
inc
or
push
leave
stc
and
data16
adc
and
sub
loope
arpl
cmp
jmp
cmp
pusha
jns
mov
arpl
inc
enter
sub
lea
sti
jecxz
loope
adcb
lods
pop
jecxz
nop
adc
test
cmp
test
out
insl
xor
mov
jmp
movsb
leave
stos
add
and
repz
dec
or
pop
arpl
mov
push
dec
outsb
add
pop
cld
ds
jne
test
stc
mov
push
xor
xor
sbb
lcall
mov
out
dec
aad
mov
adc
adc
mov
lret
or
sbb
int3
mov
mov
add
sbb
or
jecxz
dec
sbb
push
dec
lea
lock
aas
pop
out
insl
mov
test
or
cs
or
movl
das
stc
in
sbb
mov
cmp
jns
movl
or
outsb
or
repnz
cs
scas
call
mov
cmp
aam
dec
inc
or
in
xor
mov
out
cmp
xor
mov
mov
push
jg,pn
mov
ds
sub
pop
jmp
out
mov
int
pop
paddsb
imul
in
int
pop
sete
mov
es
mov
dec
push
mov
mov
push
movsl
shll
pmaxsw
mov
pop
dec
mov
xchg
ljmp
out
or
inc
insl
mov
daa
into
shl
dec
mov
mov
call
add
or
sub
dec
test
jnp
insl
mov
in
movsb
lods
lds
in
int
pop
jl
arpl
mov
mov
outsl
or
aaa
sub
cwtl
bound
or
insb
lods
out
movsl
shll
pmaxsw
mov
out
pop
mov
xchg
ljmp
out
jns
xchg
jae
shr
cmp
stos
stos
roll
mov
enter
dec
sbb
pop
xchg
loopne
outsb
int3
ret
inc
mov
clc
repnz
mov
pop
mov
scas
insl
push
test
in
pop
pop
in
mov
movsb
arpl
pushf
int
pop
paddsb
cmpsl
xor
enter
mov
xchg
imul
push
adc
push
lods
sbb
jb,pt
and
adc
jae
xchg
ljmp
mov
lahf
imul
outsb
push
sbb
in
int
pop
je
arpl
or
cmpsb
movsb
lods
lds
in
int
pop
jl
arpl
mov
out
lfs
mov
xchg
mov
mov
cmp
add
xor
pmaxsw
lds
in
lds
hlt
add
xor
or
pop
mov
lds
hlt
add
xor
pop
mov
lods
jae
movsb
arpl
mov
test
in
clc
mov
bsf
mov
pushf
mov
in
xor
lods
mov
mov
mov
test
in
pop
sbb
mov
xchg
ljmp
out
pop
jl
cmp
add
xor
pmaxsw
test
pop
mov
xchg
imul
out
pop
das
pushf
dec
sub
mov
mov
addr16
mov
in
dec
dec
mov
insl
mov
mov
xchg
mov
dec
xor
shlb
in
mov
imul
out
pop
enter
insl
lods
into
int3
lcall
or
mov
in
mov
pop
shld
mov
mov
arpl
in
pushf
lds
xor
popa
test
push
insl
fmulp
cmp
inc
add
cmp
pop
xor
out
popf
insl
ds
add
jge
mov
das
dec
and
add
nop
sbbb
das
in
or
cmpsl
in
movsb
gs
test
xchg
pop
in
in
aaa
dec
cmc
dec
jnp
insl
mov
pop
je
arpl
or
es
mov
mov
jl
arpl
mov
add
xor
or
pop
mov
mov
imul
pop
mov
mov
imul
out
pop
rol
cmp
add
rcrb
dec
pand
mov
loop
sbb
mov
movl
gs
fdivl
and
jle
mov
mov
adc
mov
sahf
pop
xor
imul
jecxz
mov
cld
ljmp
bound
jb
lock
data16
sub
or
lods
test
lock
hlt
mov
jno
repz
jmp
mov
mov
test
cwtl
sti
and
insl
mov
nop
adc
add
std
or
fsubr
mov
add
fwait
push
and
push
mov
jbe
in
and
cmp
mov
inc
dec
mov
adc
sub
enter
sub
mov
push
and
and
push
ret
mov
and
xchg
insb
push
and
mov
out
js
dec
ds
loop
mov
pop
imul
ret
insl
jae
and
jecxz
std
pushf
lcall
pop
enter
mov
add
xor
repnz
inc
rol
fistl
cmp
xchg
xchg
arpl
fadds
cmpsl
mov
xor
xor
lea
push
adc
scas
and
jnp
lea
sub
sub
and
pop
jp
shrb
mov
aas
xlat
sub
jae
add
test
xchg
imul
sub
cmp
sub
xor
mov
xlat
add
jecxz
mov
clc
out
stos
adc
cmp
dec
add
in
ret
pop
sti
in
mov
aaa
or
scas
rorb
mov
xchg
mov
enter
inc
int3
inc
or
xchg
push
dec
bound
or
aad
mov
or
rolb
adcl
cmp
mov
test
dec
lea
sub
or
stos
push
arpl
ret
fwait
add
xor
mov
clc
cmp
cld
xor
in
fimull
dec
and
add
stc
rcrb
outsl
mov
pop
nop
movsl
sbb
mov
sub
ret
test
and
cmp
add
jo
ds
stos
mov
enter
out
sub
adc
cmp
lods
cmpsl
xor
call
mov
lret
shlb
and
subl
inc
jp
lret
int3
test
imul
shr
stc
xchg
push
in
gs
jle
xchg
stc
xchg
pop
daa
rcrl
ror
mov
rcrl
jnp
add
lret
shrb
pop
dec
xchg
ja
pop
outsb
in
dec
or
repz
sub
inc
mov
jae
pop
adc
cld
push
addr16
pop
inc
ljmp
fadds
pop
push
and
mov
mov
sbb
insl
lret
in
js
imul
or
sub
dec
add
loope
hlt
call
jae
clc
popa
jl
stos
mov
sbb
imul
or
lods
xchg
addr16
imul
xchg
mov
loopne
inc
sbb
arpl
test
pop
nop
enter
and
and
or
sub
inc
or
jp
xchg
rol
dec
aaa
or
jnp
or
ret
cmp
jmp
xchg
fsubr
cwtl
add
insb
and
sub
test
xchg
sub
add
jmp
shlb
sbb
cs
cli
jne
repnz
xchg
pop
dec
cltd
mov
aas
or
loopne
in
fidivs
pop
sub
and
dec
xor
lods
push
mov
jnp
pusha
mov
or
movsb
push
sub
adc
or
insb
ret
int
loopne
scas
xor
lock
lods
ret
inc
xchg
std
pop
mov
mov
push
or
lcall
popf
mov
inc
out
mov
mov
and
mov
lods
mov
cmp
aaa
or
mov
sub
xchg
jecxz
sahf
rcll
stos
or
dec
mov
lahf
pop
in
ja
jnp
cld
inc
dec
inc
cmpsl
lret
push
add
insl
imul
mov
std
or
sub
std
pop
xchg
ja
arpl
jmp
pop
sub
mov
andl
jp
sub
movsl
arpl
mov
add
pop
xchg
dec
gs
clc
mov
jnp
insb
add
jb
and
mov
and
sbb
lods
gs
sub
orb
andl
popf
enter
push
xor
jle
mov
sub
pop
sbb
cmp
movd
clc
dec
or
or
jo
out
inc
cmp
add
mov
imul
lret
data16
test
ret
out
mov
imul
and
inc
xorb
mov
das
stos
cmp
jo
inc
mov
mov
sbb
mov
insb
sbb
or
nop
mov
and
mov
or
or
dec
jnp
or
mov
xchg
cmp
cmpsb
and
add
test
jp
xchg
or
dec
pop
test
lods
and
in
in
pop
inc
pop
or
pop
cmp
mov
mov
sub
mov
and
mov
or
mov
or
add
sub
insb
pop
xor
stos
push
or
pop
std
or
add
sub
xchg
or
adc
push
fdivrs
cmp
sub
ret
and
aas
mov
sbb
xor
mov
popa
cs
jp
stos
xchg
scas
jmp
pop
enter
cmpsl
cmp
xchg
sub
adc
subl
sarl
sbb
imul
insl
mov
mov
xchg
xchg
andl
jle
xchg
fldt
dec
mov
pop
lret
cmp
xor
sbb
dec
or
loope
push
cmp
leave
out
push
sahf
inc
out
roll
xchg
jnp
fsubrs
and
sbb
in
mov
jl
xchg
lea
nop
sbb
arpl
xchg
sub
pop
lea
sbb
pop
shll
jbe
jecxz
dec
mov
mov
inc
lahf
mov
call
pop
cmpsl
add
xchg
jne
js
sbb
leave
jae
rcrl
popf
push
repz
mov
es
mov
mov
ret
and
mov
pushf
and
or
jae
push
ret
insb
test
sbb
in
cmp
das
or
push
or
jnp
add
decb
into
sub
pop
jae
or
mov
sub
dec
test
fisubrs
addr16
sbb
mov
arpl
loopne
and
pop
mov
mov
int3
xlat
push
add
popf
into
lock
adc
sub
test
jne
or
pop
and
jnp
jbe
sub
stos
jb
mov
daa
fstps
cs
and
enter
jmp
fsubrs
mov
jns
push
lods
sub
shlb
mov
inc
add
lret
and
push
or
std
jecxz
mov
xchg
mov
and
mov
ja
push
mov
mov
rcl
or
and
and
lods
inc
xchg
call
clc
jae
ja
add
rclb
cmp
call
mov
mov
mov
aaa
push
iret
js
mov
test
mov
test
xor
inc
adc
pop
js
add
or
rolb
or
lret
or
push
or
push
or
adc
stos
sub
shll
lret
scas
cmp
daa
call
call
jge
dec
dec
lahf
sub
jae
dec
add
jb
lret
push
or
leave
sbb
insb
lock
mov
inc
stos
mov
dec
ret
mov
fucomi
clc
lret
out
subb
repz
test
add
addl
sbb
sub
shrb
dec
cmp
enter
out
pop
addr16
jne
call
add
adc
es
enter
or
mov
push
leave
adc
rolb
inc
cs
mov
faddl
mov
mov
dec
jl
dec
enter
mov
sbb
xor
cmp
mov
outsb
sbb
fmuls
inc
lahf
mov
pop
sub
xor
dec
adc
pop
mov
add
mov
stos
pop
jp
clc
test
scas
sub
cmp
inc
lcall
cs
cmp
lods
push
xchg
lods
stos
repz
pop
sub
and
movsb
sub
out
into
cmp
les
nop
mov
test
lea
push
cmp
ja
mov
push
xchg
rolb
test
stos
jp
and
enter
outsl
xor
arpl
rolb
lods
lods
add
fwait
lock
ss
adc
in
jns
in
xor
or
lods
test
lods
mov
movsl
pusha
inc
xchg
dec
or
lods
cltd
into
data16
aaa
outsb
lea
inc
cmp
mov
xor
lahf
cltd
insl
lods
clc
mov
subb
lods
xor
mov
je
sub
stos
mov
ret
mov
pop
or
push
add
mov
and
imul
loopne
stc
pop
scas
sub
xchg
mov
jns
jmp
mov
insl
or
clc
dec
loope
enterw
cmp
sbb
mov
dec
in
scas
pop
mov
insl
xor
mov
pop
mov
sub
or
pop
outsl
mov
mov
loopne
ljmp
xor
std
fildl
nop
insb
sbb
daa
out
push
dec
or
mov
cwtl
stos
ds
push
mov
movsb
xchg
and
push
mov
nop
mov
stos
addr16
mov
push
mov
fwait
xchg
push
dec
gs
cmpsl
aaa
sub
pop
cmp
out
add
dec
repnz
ljmp
add
add
xlat
xor
ljmp
cld
jge
and
arpl
pushf
mov
dec
sbb
ret
loopne
dec
sbb
mov
out
jns
and
or
or
add
push
lea
jnp
sbb
jno
sbb
pop
leave
daa
mov
mov
fsub
shlb
ret
and
scas
ret
inc
sti
stc
or
xor
xchg
insl
fdivs
mov
push
scas
inc
fmuls
scas
test
fdivs
lods
jnp
or
test
adc
fmul
addb
lods
and
lcall
dec
inc
or
sahf
push
loop
push
gs
je
or
mov
orb
and
pop
cmp
jmp
inc
shrb
cmp
xor
or
add
je
mov
nop
stos
jnp
incb
sbb
es
cmp
adcl
imul
orb
mov
inc
dec
xor
icebp
xor
lea
in
lock
sbb
clc
ret
or
mov
clc
in
loop
bnd
push
out
sub
arpl
dec
nop
or
addr16
mov
insl
fs
mov
push
test
inc
cmp
and
sub
adc
clc
xchg
imul
mov
cmpsb
jecxz
out
adc
call
mov
xchg
enter
dec
out
mov
mov
mov
mov
stos
std
or
or
es
or
add
add
and
daa
out
or
mov
push
lock
push
mov
mov
cs
nop
jb
js
nop
int
mov
push
inc
add
fisubrs
sti
leave
out
fcmovnb
call
rclb
loop
or
and
test
sub
test
jecxz
pop
push
push
jb
pop
dec
bound
xchg
test
jae
inc
cmpsb
mov
dec
add
pop
pop
pusha
es
cwtl
jo
pop
sub
mov
cmp
mov
mov
das
or
mov
xlat
pushf
lods
test
sub
imul
ret
mov
out
lret
mov
arpl
bound
imul
inc
push
testl
or
push
inc
jmp
insl
dec
pop
pop
adc
sub
mov
stos
mov
mov
stc
orl
clc
sbb
xchg
in
clc
mov
sub
push
mov
enter
lods
in
mov
push
repz
push
or
loope
add
add
cld
or
fisttpll
lret
rorl
cmpsb
sub
lret
call
repnz
push
fisubrs
test
clc
xor
lods
jne
dec
rorl
jb
cmp
insl
nop
pop
dec
test
jp
daa
add
mov
cwtl
mov
insl
pop
fdivrp
in
dec
outsl
jmp
add
cmp
loopne
outsl
test
mov
cmpb
push
out
out
ror
push
push
and
add
daa
icebp
loopne
add
adc
or
js
jns
into
dec
adc
jmp
lods
jnp
add
rcrb
sub
jb
outsb
mov
mov
pop
pop
sbb
mov
cmpsb
sub
rolb
xor
or
add
int
mov
pop
pop
fs
sub
xchg
loop
cltd
loop
out
inc
lret
or
add
sub
mov
inc
sti
fs
mov
and
sub
daa
and
sbb
fists
cld
lds
lock
je
pop
dec
mov
cmp
and
cmp
inc
push
aaa
scas
mov
add
sbb
cld
stos
xchg
pop
or
xchg
sub
jno
fildll
and
pop
mov
addl
ljmp
stos
ret
cld
call
lock
mov
ljmp
js
mov
lods
stos
es
mov
mov
dec
mov
stos
sbb
mov
cwtl
pop
cmpsb
mov
call
dec
ds
xor
xchg
jmp
insb
fcoms
xchg
xchg
jb
sbb
dec
call
ret
add
dec
stos
cmp
popf
dec
pop
fadds
jl
insb
xor
push
sbb
in
addr16
push
jae
addr16
stc
or
jnp
mov
sarl
pop
testb
inc
sbb
or
mov
dec
jno
add
insb
adc
cmp
popf
cli
or
xorb
or
std
jge
jmp
daa
andl
dec
leave
mov
out
stos
jae
xchg
in
push
inc
pop
mov
mov
popf
insb
and
jp
stc
pop
jge
arpl
aam
jl
jnp
in
xor
ja
cmp
jno
mov
rclb
or
pop
mov
mov
sub
dec
xchg
pop
sub
nop
rorb
in
fistpl
sub
test
or
pusha
mov
loop
cmp
cmp
mov
in
mov
sbb
call
or
sbb
mov
sub
jb
push
inc
cs
dec
call
outsb
out
sub
cwtl
test
pop
dec
sar
or
xchg
push
adc
mov
pusha
dec
imul
and
arpl
and
and
leave
jno
out
inc
or
lods
imul
fadds
mov
or
pusha
ljmp
mov
jnp
sti
shr
or
dec
mov
mov
mov
andl
pop
mov
mov
popf
cld
cli
pop
lods
addr16
xchg
xchg
mov
add
xchg
dec
sub
jle
pop
fmull
dec
mov
add
test
dec
ret
loopne
mov
lret
jle
or
mov
call
insl
clc
dec
xor
adc
enter
stos
add
paddsw
mul
ret
dec
mov
ljmp
adc
dec
lea
sub
sub
pop
out
inc
in
inc
in
dec
or
int3
mov
mov
push
mov
push
frstor
push
cli
or
cmp
mov
dec
push
sar
in
arpl
mov
dec
mov
jae
subl
and
decb
jmp
cmp
lods
push
dec
dec
inc
sub
jo
cs
imul
adc
sub
insl
or
test
sub
and
jnp
ja
sahf
aaa
insl
out
lock
mov
mov
mov
scas
outsl
test
call
pop
mov
mov
fsubrl
imul
fnstenv
sarl
xchg
xchg
lret
mov
jb
jae
sbb
imul
cmp
sub
test
rcrb
jns
call
cwtl
ljmp
ljmp
dec
ret
imul
sbb
gs
sbb
popa
xchg
jle
xchg
mov
arpl
or
stos
or
insl
or
dec
insl
mov
fisttpll
mov
dec
bound
mov
into
mov
dec
mov
add
cmp
add
cwtl
insl
lods
in
xor
imull
mov
mov
pop
rcrb
sub
insb
mov
and
add
sub
test
jle
sub
or
addr16
mov
and
cmp
jge
pop
and
fs
fdivrp
sub
pop
and
fwait
mov
aam
mov
dec
inc
je
idiv
sub
inc
and
jae
dec
or
imull
int
lods
imul
lods
push
shrb
pop
lods
sub
sub
loopne
dec
mov
mov
mov
jmp
fmuls
mov
sub
lret
dec
test
mov
test
sub
inc
or
aas
or
addr16
test
lods
test
dec
and
or
pop
dec
dec
add
pop
sbb
mov
dec
pop
push
sub
push
ja
stos
dec
call
enter
repz
push
clc
aad
fwait
xor
cmp
mov
pop
mov
test
jecxz
xchg
inc
sub
xchg
stc
xchg
or
lods
and
push
dec
outsb
lea
imul
incl
stos
movsb
enter
into
insb
mov
jge
add
repnz
or
cmpsb
stos
lea
jae
sub
lods
and
andl
sub
jb
xor
and
fmull
sub
push
pushf
loopne
int3
pop
mov
mov
pusha
mov
fiaddl
insl
nop
and
nop
push
add
scas
cmp
movsb
arpl
mov
push
mov
popl
sub
sub
repnz
jae
fadd
pop
sub
and
ljmp
lods
ficompl
out
lods
jbe
add
or
mov
fmul
jne
mov
test
lods
push
in
mov
mov
stos
sub
pop
leave
add
clc
push
dec
and
mov
xor
jae
mov
pop
arpl
imul
cmp
dec
sub
sahf
inc
test
and
cs
fisttpl
cmpsl
push
jle
in
shlb
dec
jp
iret
stc
js
outsb
aad
jnp
imul
sub
addb
mov
ret
mov
int3
nop
out
addr16
sahf
enter
xchg
jbe
pop
lods
sbb
mov
cmp
popa
inc
and
ljmp
adc
in
jae
popf
rclb
xor
mov
pusha
jmp
dec
dec
mov
std
leave
movsl
mov
jl
inc
mov
hlt
clc
dec
sbb
lea
lcall
dec
lahf
outsb
and
jne
push
rorb
stos
cld
add
or
outsb
dec
xchg
sarb
jae
jecxz
xchg
mov
jb
dec
nop
aaa
pop
dec
adc
add
or
aam
inc
scas
add
clc
sbb
xor
or
xor
addr16
mov
mov
xchg
fisttpll
or
shl
addr16
jb
xor
or
sti
ret
clc
in
mov
lea
repz
jns
sti
mov
enter
add
daa
in
xor
lret
mov
add
mov
popa
cwtl
push
mov
or
pusha
or
dec
leave
inc
in
clc
stos
pop
inc
adc
sti
pop
dec
nop
push
cli
mov
fmuls
lods
adc
imul
negl
xchg
mov
pop
xchg
in
les
push
test
stos
xor
dec
addr16
mov
fidivl
and
lods
sbb
enter
jmp
lret
lret
rcrl
or
test
movsl
lods
andl
lods
movsb
sub
sub
mov
sub
insb
ljmp
or
or
mov
out
inc
cmpsb
aaa
insl
in
stos
ds
jo
dec
inc
fcoms
stos
rolb
jmp
pop
inc
jle
pop
pop
jnp
cs
cmp
push
or
cmpsl
xchg
lods
and
arpl
xchg
ds
pop
gs
outsb
dec
sub
xor
orl
xchg
jo
stos
jle
in
popa
rcr
imul
addl
stos
xor
or
mov
iret
fmuls
fwait
pop
stos
cld
adcb
inc
jmp
inc
imul
push
cld
mov
push
push
xchg
dec
fcomps
mov
add
jmp
mov
imul
or
sbb
inc
or
add
or
test
addr16
call
call
neg
scas
lahf
push
sub
test
rol
cwtl
sub
push
rol
and
xor
test
in
mov
insl
insl
lods
mov
outsb
cmp
xchg
mov
xchg
lret
sub
mov
sub
arpl
fimull
cli
test
and
jae
xor
pop
pop
pop
xor
add
in
cmp
mov
mov
push
mov
and
pop
addr16
out
jnp
in
gs
into
movl
out
xchg
pop
subl
gs
popa
mov
mov
arpl
mov
add
inc
sub
cmpsl
les
cmp
hlt
ret
jae
pop
insl
pop
inc
gs
xchg
jp
call
jb
out
shr
or
dec
or
xlat
push
pop
xchg
sub
xchg
xchg
xlat
out
mov
mov
jecxz
addr16
jmp
les
pop
call
iret
shll
xlat
add
adcl
ret
push
pop
or
fs
sub
int
cwtl
stos
pop
jo
sbb
mov
scas
mov
out
out
push
add
mov
insb
mov
mov
or
mov
rol
enter
xlat
push
push
arpl
adc
push
sbb
pop
addr16
pop
mov
mov
pop
int3
pop
dec
pusha
sti
lods
and
push
sub
lea
adc
aaa
xor
cli
push
mov
mov
aaa
jnp
ss
pop
inc
loop
or
mov
pusha
jno
in
stc
xchg
push
lock
inc
or
mov
push
add
ljmp
or
nop
xor
and
and
mov
clc
push
cmpsl
stos
dec
and
sbb
and
enter
incb
cmp
ss
bound
or
xchg
in
lods
or
fsubrs
out
inc
pop
shrl
pushf
daa
inc
inc
inc
jecxz
mov
cmpsl
insb
cmp
lods
arpl
or
sub
dec
and
bound
lods
xor
or
adc
insl
sub
test
rclb
cld
inc
pop
in
test
gs
lret
push
loopne
fwait
mov
pop
js
push
int
xchg
push
xchg
int3
add
stos
xor
pushf
mov
imul
and
and
mov
int
movsb
sbb
or
xor
mov
cwtl
repnz
push
mov
clc
or
jbe
mov
clc
mov
jo
lods
nop
xor
xchg
xchg
adc
dec
sbbb
push
sub
pushf
ds
or
lock
adc
cmp
or
or
int3
or
in
popf
dec
mov
int3
js
dec
test
inc
stos
sub
mov
xchg
dec
xchg
cli
popf
out
mov
addb
mov
xchg
das
sub
cmp
push
cmpsl
das
vcvtps2dq
dec
stos
js
adc
push
xchg
pop
out
daa
sub
rol
pop
insl
sbb
js
mov
cmp
lahf
stos
fst
in
or
mov
dec
mov
sbb
mov
mov
mov
cwtl
fisubrl
mov
cld
or
pop
roll
sub
sbb
decb
and
cmp
dec
add
jae
mov
enter
mov
inc
cltd
sub
into
orb
or
adc
int
iret
inc
rcl
mov
cs
call
mov
rolb
sub
or
adc
cwtl
mov
cli
nop
cmp
or
imul
cld
mov
mov
adc
stos
inc
pop
cmpsl
cltd
mov
stos
rorb
lahf
push
es
leave
dec
clc
jbe
add
test
arpl
jge
xor
dec
ficoml
enter
shll
lock
cmp
pusha
addr16
mov
mov
lods
out
out
insl
cmp
jge
cwtl
lods
aaa
clc
dec
mov
or
clc
jns
mov
leave
les
insb
mov
sti
push
mov
push
loopne
jae
dec
xor
inc
xchg
fadds
cmp
cli
cwtl
dec
fdivr
xchg
pop
dec
sahf
mov
arpl
sbb
enter
inc
inc
lods
cld
dec
into
jae
sbb
or
mov
lea
test
in
sub
test
fistpl
daa
pop
call
pop
cmpsl
out
sti
dec
movsb
lock
mov
insl
or
daa
addr16
clc
push
fwait
pop
insl
add
int3
js
add
push
cmp
xchg
scas
lahf
rol
cmp
in
sarb
mov
daa
or
mov
gs
sahf
enter
xor
cmpsb
loopne
mov
les
or
and
cwtl
mov
jnp
mov
mov
pop
push
loop
fdivs
sub
subl
push
xchg
cmp
xchg
ljmp
lods
movsb
mov
cmp
adc
rorb
dec
faddl
stos
fcmovu
outsb
sti
daa
dec
xor
insb
add
imul
adcb
fsubr
sub
jnp
jmp
nop
and
cmp
dec
xchg
bound
fiaddl
dec
inc
mov
mov
push
mov
addr16
gs
outsb
insb
in
mov
and
scas
mov
cmp
iret
clc
mov
hlt
and
jecxz
ret
sbb
cmp
pop
out
popa
xor
push
out
into
leave
jecxz
mov
add
mov
push
in
mov
push
mov
dec
mov
push
es
lret
adc
xor
out
mov
test
add
stc
arpl
xor
xor
sub
stc
cld
loop
mov
mov
int3
mov
shlb
jmp
push
nop
adc
js
add
dec
dec
scas
jge
mov
and
adc
jp
in
dec
mov
and
or
rcrb
test
shrl
xchg
mov
jnp
pop
cmp
and
cmp
into
ljmp
inc
and
sar
addr16
fwait
cmp
out
fwait
cmp
cmp
repz
mov
stos
ja
mov
cld
call
cmpsl
test
jecxz
lods
aam
mov
jo
mov
std
push
arpl
inc
add
loop
sub
pop
mov
sub
arpl
fistl
sub
sarb
int3
mov
mov
xor
push
dec
push
shlb
or
jo
out
or
xchg
jmp
mov
into
outsb
cld
mov
and
int3
jl
stos
mov
ljmp
int
xor
pop
int
test
push
jge
adc
stos
enter
stc
sub
dec
jb
flds
rcll
jge
js
mov
add
popf
xchg
xor
fisttpll
enter
adc
add
or
push
sub
inc
mov
sti
xchg
sub
push
xlat
cmp
lahf
pop
hlt
xor
and
test
jge
ljmp
repnz
cmp
push
adc
mov
test
neg
mov
jae
inc
fcmovb
in
pop
jmp
cmp
outsl
out
xchg
js
dec
sarb
int
pop
dec
xlat
or
lret
ret
add
cwtl
insb
dec
imul
or
push
cld
cmp
and
and
push
inc
addr16
inc
out
lods
add
mov
int
lods
and
imul
pushf
jl
outsl
jb
pop
cmp
mov
out
jae
jge
lock
jge
jmp
imul
out
sbb
or
xchg
cmp
add
jae,pn
fs
mov
push
lcall
push
fcmovnu
scas
insb
and
pop
mov
adc
mov
loop
mov
push
or
pop
js
ret
adc
sub
ljmp
test
cmpsl
add
xor
and
jne
xor
ret
addr16
push
mov
fxch
test
icebp
addr16
jecxz
pop
sub
int3
test
sub
mov
dec
cmp
jno
lret
jae
xorb
dec
dec
mov
call
add
xor
stc
mov
insl
pusha
cmpsb
or
lods
test
inc
sarb
push
xchg
mov
jmp
pop
dec
sbb
mov
call
sub
mov
stos
xchg
or
lcall
std
nop
insb
sbb
jp
lods
and
push
in
lods
add
or
push
push
in
inc
lret
cmp
push
flds
in
inc
stc
push
lahf
insb
adc
cli
and
aaa
jnp
dec
push
outsl
stos
sub
inc
aaa
mov
add
or
xor
xor
push
out
sbb
ljmp
loop
jae
xchg
int3
iret
orb
shlb
outsb
and
sub
neg
movsb
imul
scas
lods
jnp
imul
sub
jb
mov
sub
mov
call
jne
push
fadds
adc
js
sub
jne
lods
arpl
inc
cwtl
mov
imul
mov
pop
and
jmp
fcomps
mov
inc
sub
lea
stos
ret
insb
pop
mov
push
or
jns
add
out
pop
mov
int3
out
pop
cltd
in
rcrb
lea
ja
jb
mov
sbb
fnstsw
hlt
sbb
xchg
dec
cmp
int
push
or
push
test
js
or
subl
mov
mov
lahf
dec
leave
mov
and
aad
pop
dec
mov
out
jl
or
mov
nop
ret
dec
rorb
ret
fldcw
push
push
inc
adc
dec
outsb
es
ja
lahf
cld
dec
mov
mov
addb
adc
cltd
into
fidivl
xchg
mov
jge
cmpl
int3
int
enter
dec
add
cmpsl
add
cmp
mov
decl
mov
xchg
hlt
and
test
push
push
dec
sub
imul
pushf
xlat
and
jl
xlat
and
outsl
jp
daa
dec
test
test
xchg
shlb
add
stc
or
ret
pop
jb
int3
add
int3
fs
imul
jmp
push
adcb
mov
rcrb
jae
mov
xchg
inc
rcl
cmp
out
mov
stos
fisttps
lea
sub
jl
mov
mov
mov
lods
mov
stos
popf
sbb
daa
lods
orl
mov
mov
add
jo
cmpsl
pop
inc
imul
into
data16
gs
mov
data16
fildl
add
clc
mov
xor
shlb
cmp
push
inc
mov
mov
repnz
xor
ljmp
jge
xchg
call
mov
clc
jp
mov
xor
ljmp
in
out
xor
enter
and
lret
xchg
push
adc
jne
lret
dec
rcrl
inc
arpl
std
mov
sbb
addb
enter
cwtl
xchg
xchg
jae
andl
and
sbb
push
cld
push
sarb
cmp
or
lea
mov
pop
mov
scas
addr16
inc
pop
mov
ss
inc
jnp
jp
mov
cmp
test
fildl
cwtl
loop
lods
inc
insb
jl
push
in
xor
inc
repz
rcrb
or
add
push
or
sub
dec
cmp
mov
insb
sub
adc
popa
pop
movsl
add
pop
add
scas
add
ret
aaa
stc
mov
adc
xchg
lea
shlb
test
subl
mov
lahf
or
jge
outsl
into
jecxz
mov
lcall
add
call
xchg
dec
sarl
pop
inc
out
xchg
mov
mov
frstor
mov
inc
push
scas
insb
push
lea
mov
call
ljmp
sbb
push
subl
outsb
sub
insl
mov
adc
inc
lods
sbbl
cmp
pop
in
xor
adc
das
into
std
xor
mov
mov
in
enter
sub
mov
sbb
std
enter
add
jb
faddl
mov
sbb
adc
out
cld
cli
or
sub
or
bound
int
mov
lret
jnp
or
sub
xchg
xchg
and
insl
mov
sbb
gs
push
xor
rolb
pop
inc
loop
mov
out
scas
adcl
imul
cmp
cmp
imul
lret
mov
sub
pop
mov
call
sbb
in
arpl
sub
mov
and
inc
sahf
sub
mov
cmpb
xlat
add
inc
lods
adc
fldt
cwtl
sub
andb
mov
dec
cbtw
pop
stos
shl
orl
int3
or
add
sti
out
add
inc
mov
ja
jnp
pop
lods
inc
movsb
aaa
or
pop
cmp
xchg
insl
movsb
jmp
cmp
xchg
mov
data16
xchg
aaa
sbb
pop
scas
imul
and
addr16
dec
adc
cmp
push
cmpsl
pop
mul
mov
mov
or
and
push
sbb
sbb
out
xor
int3
sbbl
lock
lods
and
jo
mov
sub
rorl
cli
pushf
jmp
lcall
ret
mov
pop
push
js
sbb
sbb
test
dec
add
std
test
in
push
int
rcrb
mov
mov
repnz
popf
adc
and
or
adc
jmp
repnz
xorb
dec
fisubl
inc
dec
xchg
sbb
cmp
aaa
jnp
mov
imul
jp
or
lahf
cwtl
inc
jle
mov
repz
lods
and
sub
and
push
sub
lds
and
inc
and
jmp
mov
insl
dec
clc
pop
mov
stos
push
jb
into
sbb
imul
sbb
ret
add
sub
fimull
or
sub
xor
or
call
mov
push
xchg
pusha
xchg
pop
push
mov
or
popf
sub
mov
imul
roll
gs
insl
jo
outsb
dec
out
mov
ljmp
push
test
popf
insb
lods
in
jecxz
push
mov
pop
adc
mov
and
andb
sti
addr16
mov
popl
addr16
lret
xchg
xor
xchg
lods
mov
shlb
mov
imul
sbb
hlt
out
push
movsl
cwtl
int3
or
mov
or
clc
xor
lods
push
cmpsl
and
pop
jecxz
enter
mov
rolb
std
enter
test
loopne
stos
repz
sbb
mov
mov
enter
mov
inc
clc
stos
ja
loop
movsb
xchg
adcl
pop
data16
add
enter
and
pusha
lods
cmp
mov
call
sub
out
push
je
mov
push
jnp
lods
dec
in
stos
ror
fwait
lock
pop
orb
aas
jb
mov
lcall
lea
popa
int3
adc
fs
int3
fcmovb
sub
push
aaa
add
push
lret
mov
dec
pop
dec
cs
fbstp
mov
and
pop
bound
and
bound
cmpsl
adc
xchg
outsl
mov
mov
mov
inc
mov
enter
jp
orl
aaa
or
test
xchg
push
mov
enter
das
popf
mov
mov
outsl
fsts
jnp
pop
enter
push
xchg
sub
push
rorb
sub
bound
out
adc
adc
xlat
or
or
adc
adc
js
mov
divl
mov
lahf
sub
cld
mov
jo
jp
lret
mov
test
lret
cld
mov
pop
jae
cmp
inc
call
fidivl
dec
call
or
mov
lea
sahf
lahf
daa
bound
dec
dec
gs
mov
call
sarb
insb
sbb
mov
inc
into
outsb
sub
push
sub
inc
fimull
std
daa
dec
pop
jp
pop
add
xor
and
loop
dec
xchg
test
std
inc
outsl
lret
xlat
lea
dec
add
test
imul
jae
test
cmp
jnp
push
mov
lock
add
int3
in
inc
mov
stos
test
scas
mov
fnsave
in
or
popf
out
call
cmp
pop
sub
fnclex
stos
cwtl
or
rorl
cltd
aad
insl
adc
mov
cmc
imul
stos
fmull
test
adc
push
bound
imul
xchg
lret
cmp
jns,pn
jp
ja
imul
pushf
imul
lcall
nop
scas
outsl
enter
pop
mov
add
ljmp
mov
or
mov
aaa
or
jno
cmpsb
in
cmp
xor
mov
xor
idivl
xor
push
andb
cmp
loope
xor
adc
or
clc
push
loope
sub
rclb
in
imul
lea
cwtl
sub
xchg
mov
mov
push
int3
or
mov
or
adc
fimuls
dec
push
add
xorl
push
in
xchg
inc
mov
add
mov
cmp
and
repz
inc
sub
push
push
call
adc
ja
pushf
or
xorl
mov
sbb
mov
scas
cli
jns
sahf
inc
sub
dec
mov
clc
mov
clc
and
gs
and
notb
mov
test
mov
dec
dec
or
aaa
mov
mov
enter
sbb
adc
pop
push
pop
push
jb
mov
in
or
pusha
pop
daa
stos
xorb
inc
jge
cwtl
es
test
insb
out
mov
push
dec
ja
into
lcall
cli
jg
dec
mov
andl
jecxz
jbe
in
in
lods
jb
and
pop
adc
cs
outsb
mov
dec
add
cld
cmp
test
push
movsl
cs
out
mov
orb
clc
cmp
inc
mov
dec
popf
dec
mov
mov
mov
push
mov
or
cmp
fmul
leave
push
pop
mov
dec
nop
push
dec
rcl
or
loope
clc
movsb
les
jge
test
mov
daa
aam
arpl
sahf
sub
ret
inc
sub
mov
mov
std
mov
fs
pop
adc
inc
or
rcrl
scas
lret
push
mov
negl
mov
sub
test
int3
sub
pop
mov
pop
imul
push
sub
nop
or
and
mov
dec
mov
and
inc
add
out
dec
nop
push
xor
push
pushw
dec
outsb
daa
adc
insl
pop
mov
lods
test
or
jns
adc
cmpsb
arpl
dec
je
fs
sbb
or
xor
cmp
adc
sub
push
dec
outsb
xor
or
push
inc
daa
insb
push
adc
sahf
insb
push
jle
sub
fmuls
cmp
push
mov
ja
pop
test
aaa
leave
mov
iret
mov
xlat
shr
insb
lea
ljmp
jae
enter
pop
call
inc
nop
inc
mov
adc
mov
mov
cli
add
leave
inc
fnstcw
or
dec
cmp
sub
lods
and
or
lcall
xchg
mov
movsb
lods
repnz
add
ja
inc
adc
imul
mov
fdivrs
lods
mov
jb
or
stc
lea
cwtl
xchg
lret
stc
jae
mov
nop
lret
sti
and
ret
adc
scas
adc
into
dec
sar
mov
cltd
mov
in
push
loop
jle
inc
mov
sub
into
scas
pop
mov
repz
fs
notl
fldt
loopne
sbb
pusha
ret
fidivrl
data16
in
jge
xor
inc
push
add
mov
or
insl
dec
mov
daa
divl
icebp
dec
arpl
mov
xor
push
push
mov
and
repnz
sub
fimull
inc
sub
add
lods
cmp
add
or
dec
xchg
jae
or
insl
push
fwait
or
mov
shll
mov
lods
cmp
push
ja
repnz
mov
sbb
xor
loope
and
cltd
mov
aaa
mov
rorl
aaa
lea
xor
pop
dec
mov
fwait
enter
xor
cmp
pushf
inc
arpl
in
sub
jmp
mov
repz
fldcw
xchg
or
mov
lea
mov
repz
push
cwtl
or
push
mov
loopne
stos
cmpsl
sbb
dec
insb
pop
shlb
adc
sbb
dec
repz
mov
or
gs
enter
jae
out
insb
mov
sub
xor
mov
std
jge
in
sarl
jae
xor
lods
shr
ror
mov
lahf
leave
adc
push
push
test
mov
addb
dec
les
or
gs
mov
inc
test
loopne
and
shrl
lods
jae
add
cmp
dec
xor
fdivrs
jecxz
cmp
mov
js
push
jecxz
mov
jge
dec
jae
aaa
mov
jb
jae
movsb
lea
pushf
cld
xchg
test
sbb
loopne
sti
lods
add
mov
stos
push
into
pop
ret
sub
iret
ret
lods
fistl
mov
pop
js
in
jns
stos
int
xlat
push
inc
jecxz
andl
xchg
cmp
and
ds
ds
jge
dec
dec
jge
leave
push
testb
fldt
sbb
int3
adc
push
inc
or
ljmp
call
xor
addl
xchg
xor
les
call
sub
insl
or
xchg
std
data16
inc
int3
imul
sti
arpl
or
js
mov
call
xchg
imul
jecxz
imul
mov
enter
dec
call
jle
fxch
push
test
mov
pop
lods
jge
and
out
addr16
lahf
mov
mov
adc
lahf
dec
dec
xor
jno
pop
out
shll
inc
repnz
pushf
xor
fisttpl
xor
sub
fcmovb
cmpsl
inc
insl
imul
add
fwait
or
leave
mov
dec
or
pop
lods
dec
insl
or
cmp
fistl
daa
insl
mov
pop
xchg
cltd
xchg
outsb
jecxz
jl
dec
xchg
repnz
leave
fisubrl
jp
xchg
in
inc
push
int3
ljmp
sti
mov
cwtl
stos
arpl
nop
push
int
repnz
arpl
rcrb
jmp
inc
dec
dec
mov
pop
test
xchg
std
dec
gs
pop
arpl
xchg
lods
or
test
mov
lods
sub
push
in
jp
cmp
push
add
mov
imul
mov
cmp
mov
cmp
fmulp
ds
inc
out
pop
in
jbe
xorb
int3
add
mov
insl
int
jnp
and
fs
cmp
pop
inc
xchg
xchg
push
dec
jo
adc
jmp
cmp
sbb
shll
jnp
cmpsl
push
mov
nop
cmp
push
insb
sti
cmc
insl
aaa
mov
push
ljmpw
lahf
fstl
pushf
dec
or
stos
sub
pop
push
cmpsl
sar
aaa
dec
popa
imul
jmp
in
mov
aad
or
mov
std
mov
adc
jge
sub
enter
aaa
sbb
jge
mov
call
imul
dec
cmpl
mov
xchg
jmp
or
or
out
mov
jmp
mov
lret
leave
mov
ds
outsb
mov
mov
ret
lret
pop
js
test
push
or
add
push
add
mov
or
jns
dec
mov
das
addb
leave
arpl
lods
jecxz
imul
rorb
sahf
sbb
sti
fimull
jecxz
insl
pop
pop
imul
enter
mov
ds
cs
call
je
shlb
cli
mov
xchg
mov
cmp
mov
mov
sub
jbe
outsb
les
ds
addr16
mov
and
adcb
bound
cmp
rorl
jo
insb
mov
push
mov
and
jne
lock
ljmp
or
dec
inc
mov
sbb
xor
int
mov
pop
pop
je
push
cld
shlb
mov
inc
mov
int
shll
out
xchg
sub
adc
cmp
int
or
lods
xor
push
cmp
push
in
enter
push
adc
mov
idivl
dec
rcrb
insl
int
outsl
add
mov
dec
inc
out
jns
fistps
in
in
jmp
dec
or
cs
jecxz
addr16
add
xor
clc
je
add
fcomi
mov
adc
sub
loop
and
sbb
ja
dec
mov
jno
cmp
ret
out
xor
mov
mov
adc
jg
mov
pop
lods
andl
ljmp
sbbl
into
aas
js
rcll
or
imul
mov
add
cs
rorb
addr16
arpl
pop
mov
stos
mov
bound
loopne
int
bound
xor
push
lods
rclb
adc
fldenv
outsb
lods
test
cmp
adc
test
push
xchg
js
cwtl
and
ret
xlat
orl
leave
xchg
and
or
cwtl
or
bound
int
std
out
test
shr
add
stos
mov
int
mov
mov
xor
cvttps2pi
test
jnp
movsb
cmpsl
jge
or
fs
stc
jl
lods
fnclex
sub
add
aaa
cmp
adc
jge
inc
clc
mov
sub
test
jge
rolb
lahf
sub
mov
cwtl
mov
or
cmp
dec
loopne
add
or
mov
mov
aaa
jo
mov
ret
inc
lods
and
js
fisubrl
sar
cs
push
xchg
repnz
pop
jns
cmpsb
pop
addr16
leave
aas
push
sbb
imul
add
icebp
imul
sub
push
mov
adc
aaa
fwait
pop
ds
xchg
push
dec
and
and
inc
push
dec
daa
sar
or
lea
add
sub
add
aaa
lock
pop
repz
jg
scas
rolb
int
js
mov
test
adc
push
xor
sub
jns
mov
mov
sub
outsb
or
xor
insb
insb
mov
mov
fcomp
or
mov
mov
lds
in
and
jle
cmp
push
mov
sbbb
sarb
pop
or
sti
cmp
outsb
push
pop
cs
push
xchg
add
xor
mov
add
mov
dec
lea
in
dec
lock
xchg
in
xchg
fisubl
dec
scas
imul
mov
and
lret
sbb
add
xchg
popf
mov
shr
rolb
xchg
stos
mov
sbbl
dec
loop
pop
cmpsb
lcall
test
loop
and
aaa
mov
ljmp
cmp
mov
stos
pop
sbb
nop
lods
dec
lock
shrb
push
cmpsl
push
jecxz
out
xor
shll
push
lock
call
mov
lods
scas
cmp
and
loop
popf
loop
or
insl
out
dec
in
mov
stos
into
and
data16
test
mov
mov
loop
mov
pop
or
dec
mov
ljmp
xchg
call
int3
into
cmp
push
mov
loope
add
dec
jmp
or
shlb
mov
jecxz
push
lret
popf
xor
lea
xchg
sub
dec
sub
stc
push
lea
adc
popf
adc
inc
dec
leave
ret
int3
test
xchg
sbb
mov
xchg
inc
xor
push
insb
adc
leave
jmp
into
xor
xchg
mov
mov
mov
mov
bound
jl
push
and
cmp
push
test
test
into
ficompl
cli
shlb
pusha
dec
call
jecxz
or
out
lods
jns
mov
outsl
sahf
jecxz
and
lea
mov
pop
std
fwait
xor
lods
fcompl
mov
jae
lods
pop
ljmp
or
test
jns
gs
movsb
jge
mov
lods
cmpsb
xlat
movsb
push
sub
cli
cmp
inc
mov
mov
movsb
test
mov
aam
cltd
fdivr
leave
cmp
ja
cli
les
xchg
subl
lea
mov
add
cld
cltd
jp
loop
jecxz
fcomi
jo
or
inc
pop
je
popf
adc
clc
test
mov
dec
sub
mov
insl
insl
mov
cmp
add
movsb
insb
lock
in
mov
repnz
bound
cmp
rorb
das
push
push
loopne
lahf
mov
lods
lods
test
insb
inc
lods
mov
mov
mov
inc
dec
sub
stc
insl
add
cmp
jmp
sub
cmp
mov
pop
cmp
daa
or
cmp
mov
scas
mov
lods
es
or
fisttps
add
js
xchg
lods
or
mov
je
cli
in
sub
aaa
jecxz
dec
mov
dec
or
addr16
mov
mov
adcl
lret
insl
popa
cwtl
cmp
or
xor
loopne
orl
or
call
gs
je
iret
mov
jmp
enter
fsubs
push
jb
mov
ja
in
mov
repz
add
out
inc
or
ljmp
add
ds
lahf
push
into
lea
mov
test
pushf
pop
cmp
ret
test
xchg
adc
orl
out
aad
and
out
jne
mov
aaa
test
enter
in
pushl
jb
pop
out
aad
and
out
jne
mov
sbb
xchg
or
mov
xchg
xchg
lods
cwtl
mov
sbb
xchg
std
aaa
pop
jae
imul
mov
sub
fs
arpl
xchg
test
or
push
pop
adcl
dec
jge
mov
mov
add
xchg
push
and
out
jne
arpl
push
arpl
xchg
push
int
mov
lock
test
pop
dec
push
loopne
push
dec
or
sub
jno
mov
lahf
mov
sub
arpl
pop
add
ljmp
inc
scas
incb
int
sub
mov
and
stos
dec
adc
mov
lret
cwtl
xchg
lret
inc
xor
out
cs
adc
adc
push
mov
xchg
repnz
aaa
nop
xor
cwtl
addl
lcall
and
rolb
sbb
jne
mov
jb
sub
dec
addl
push
push
sub
arpl
xor
dec
and
or
ficomps
dec
xor
call
int
mov
scas
adc
icebp
fdivl
lea
or
push
shr
lock
sbb
in
adcl
ds
mov
insl
out
sub
enter
sub
clc
fisubl
fisttps
int3
inc
repnz
ret
gs
mov
mov
push
clc
or
jecxz
mov
insl
cmp
mov
pop
jmp
xor
jmp
leave
adc
fsubrl
shlb
mov
mov
or
test
popf
repz
repz
cmpsl
lea
sar
ds
addr16
not
or
repnz
adc
mov
add
in
and
add
adc
cmp
ret
fdivs
loopne
pop
cmp
pop
lods
pop
pop
aaa
or
sub
je
mov
ret
or
sbb
repz
jg
sub
adc
add
cltd
jb
int3
push
nop
in
iret
push
or
int3
in
pop
int3
fidivrs
mov
dec
jae,pt
xabort
std
sahf
int
cltd
into
jbe
movsb
addr16
loopne
js
fdivrs
dec
test
pop
push
imul
leave
push
cmp
inc
mov
add
or
test
cmpl
sti
push
imul
test
add
and
dec
cmp
lods
shr
enter
ljmp
sbb
or
jnp
pop
mov
jp
cmp
mov
iret
pusha
mov
nop
cmpsb
outsb
sub
jp
sbbl
lds
dec
mov
popa
add
pop
js
sub
xchg
and
rclb
jecxz
adc
stos
xchg
sub
ljmp
sbbl
or
add
cmp
dec
mov
lods
inc
cwtl
adc
pop
push
fimuls
jns
mov
cmpsl
cmp
dec
pop
lods
inc
frstor
dec
mov
pop
dec
incb
enter
xor
repz
mul
mov
lea
cmpsl
in
mov
push
jp
mov
out
je
int3
xor
test
rclb
out
mov
test
lea
sub
lock
lods
mov
push
push
push
cmp
lret
xor
out
sub
push
mov
call
mov
out
or
push
lea
lcall
or
jp
mov
mov
adc
push
dec
lcall
insl
dec
fsubrs
adc
adc
inc
test
frstor
add
insb
mov
lock
jge
xor
dec
sti
sarb
bound
enter
cmpsl
push
xchg
scas
mov
mov
jb
dec
mov
popf
mov
mov
sub
sbb
xchg
loop
add
or
fisttpl
add
insb
lods
pop
arpl
test
or
or
and
push
sbb
imul
pop
sub
lret
loopne
stos
cmp
and
sti
mov
int3
pop
adc
stos
clc
gs
adcb
pop
insb
mov
outsl
or
int
cs
add
int
push
push
adc
mov
movb
mov
sti
dec
ja
test
xor
push
lods
push
dec
in
aaa
insb
and
imul
mov
fildl
nop
jmp
or
dec
or
sub
cmpsl
test
inc
in
dec
nop
das
jmp
lods
lea
loop
xchg
insl
mov
mov
aaa
lods
daa
rcr
psubusw
adc
andl
mov
movsb
xchg
xchg
aad
mov
test
fdivs
xor
rcrb
mov
mov
or
es
nop
je
out
inc
lahf
ret
jno
daa
sbb
pop
orl
inc
insb
sub
mov
iret
jnp
je
mov
ret
sub
mov
sahf
insb
push
xchg
mov
int3
jmp
in
mov
xlat
loop
xchg
pop
loope
in
fimuls
fmull
mov
lods
and
stos
dec
jbe
daa
bnd
lea
rep
xchg
pop
dec
insl
sbb
repz
adc
jne
out
jl
fcom
inc
mov
pop
mov
arpl
jnp
jg
dec
pop
loopne
adc
outsl
xchg
mov
roll
xchg
loopne
test
add
ret
test
and
jmp
add
shr
dec
stos
repz
bound
push
clc
xor
arpl
ja
repnz
pushf
cmp
push
data16
push
xchg
popa
pop
xchg
ret
and
xchg
imull
stos
pop
dec
dec
push
fcmovnb
xchg
or
cli
popf
loopne
iret
ret
loopne
mov
xchg
mov
repz
jmp
sarl
dec
xlat
or
pop
dec
call
cltd
push
xor
mov
push
adc
push
mov
mov
es
shr
arpl
add
clc
and
call
iret
jne
adcl
fldcw
or
out
cltd
sub
shll
push
inc
insl
mov
ljmp
imul
fwait
out
pop
inc
lret
cmp
pop
mov
iret
shrl
xor
or
orb
sub
sarb
out
xchg
int3
inc
enter
jne
jae
shlb
fs
in
stos
nop
push
ret
add
nop
sbb
loope
movsl
or
dec
lods
and
and
aaa
inc
cli
mov
cmpsb
dec
jb
fisttpll
sbb
push
dec
dec
cmpsb
add
nop
hlt
lret
mov
and
pop
imul
js
hlt
inc
mov
mov
mov
lcall
mov
sbbb
lea
lea
mov
jecxz
add
xor
xchg
aaa
cmpsl
lret
push
cld
enter
imul
loopne
xchg
subl
mov
inc
xorl
pop
in
out
pop
jnp
cld
xor
repz
dec
scas
shll
stc
xchg
xchg
cmpsl
jno
loopne
lret
out
cmpb
push
cmp
ror
xchg
adcb
jecxz
add
outsl
xlat
mov
outsb
adcl
add
mov
stos
rcrb
fmuls
leave
inc
mov
ss
pop
or
arpl
int3
dec
xor
loop
sub
add
iret
mov
jecxz
mov
nop
adc
daa
cs
and
or
cmp
cmpl
es
fwait
xor
rol
in
test
rorb
xchg
stos
out
jl
nop
in
mov
xor
fimuls
inc
ja
mov
jcxz
dec
arpl
jbe
or
sbb
mov
add
popf
mov
mov
xchg
movsb
mov
mov
inc
addr16
sub
xor
mov
sub
or
mov
outsl
test
add
sub
dec
or
mulb
scas
mov
fs
jle
pop
lods
cmp
shrl
testb
loope
loope
pushf
cmpsl
cmpsl
shlb
and
cwtl
xchg
loopne
fbld
cmp
clc
lcall
divl
mov
jo
out
js
repnz
pop
lock
xor
mov
mov
sub
sbb
xchg
mov
test
in
lea
loopne
sub
dec
pop
test
cmp
cmpsl
pushf
test
jge
pop
insb
sub
adc
pop
aaa
pushf
in
in
in
and
icebp
int3
xor
mov
sbbl
dec
mov
ds
push
dec
aaa
push
lods
lods
dec
ljmp
cmp
or
jnp
gs
cld
mov
cmp
sub
push
jp
push
jmp
ds
xor
mov
sub
mov
nop
scas
outsb
inc
push
rcr
push
out
into
inc
negl
in
xor
adc
mov
repz
mov
mov
popa
out
sub
push
sarb
pop
fwait
lea
hlt
cmp
scas
nop
push
out
add
call
lcall
add
mov
outsb
mov
and
int
mov
lods
add
xlat
sub
cs
pop
jg
int3
mov
adc
lods
movsb
inc
inc
dec
testl
fdivs
pop
pop
sub
pop
mov
dec
ja
or
ja
stos
ja
imul
inc
out
dec
push
pop
int
call
mov
bound
mov
ds
call
sbb
fidivl
push
arpl
mov
jo
sti
pusha
and
push
mov
xchg
and
add
in
andl
sub
jecxz
push
push
add
sub
test
cmc
arpl
sub
imul
and
mov
ljmp
cmpsl
jnp
sub
adcl
sti
divps
mov
pusha
pop
or
dec
mov
cmp
test
sbb
lods
ja
call
in
jecxz
jo
call
jnp
mov
pop
incb
lea
dec
xor
ret
jmp
mov
pop
or
adc
sbb
mov
xor
push
dec
mov
mov
pop
lods
cld
ror
push
or
sar
adc
pop
sbb
pop
pop
lods
sbb
sbbb
mov
push
jae
gs
adc
add
call
inc
js
mov
jae
aas
mov
fsubl
mov
addr16
test
mov
xchg
lea
fsubl
add
push
fsub
outsb
cltd
push
mov
jl
lods
push
daa
fistpl
call
enter
xchg
loop
sbb
adc
lret
push
cmp
fcmovu
pusha
pop
loopne
cmp
or
dec
out
sar
mov
imul
ret
scas
cld
xor
sub
jnp
mov
sbb
jae
stos
into
mov
or
rolb
fcomps
add
xor
xchg
xor
lods
and
hlt
mov
int3
push
je
lea
mov
xchg
sbb
js
leave
mov
shlb
sub
insb
add
jmp
shll
sahf
pop
lret
clc
lret
lods
xchg
mov
sub
xchg
mov
dec
daa
loopne
xor
ret
dec
add
mov
jge
addl
xor
lods
test
popf
lret
fimull
into
push
sbb
jbe
and
daa
jge
jae
pop
leave
pop
shlb
mov
add
into
sub
imul
adc
mov
dec
mov
adc
outsb
mov
cmp
fildl
dec
insb
mov
nop
push
sti
rcrb
or
aam
stos
mov
pop
mov
loopne
call
mov
lahf
std
insl
xchg
xchg
inc
leave
push
push
xchg
cld
insl
xchg
jne
cwtl
mov
mov
add
adcb
pop
fmuls
and
lock
jae
adc
mov
scas
fst
mov
adc
in
push
enter
cmp
fcmovnbe
mov
nop
mov
mov
je
outsb
lahf
xor
fdivrs
rolb
xor
imul
ret
add
idivb
pop
dec
dec
outsl
fcomps
fsub
lcall
cmp
lods
xchg
stos
mov
movsl
inc
and
xor
dec
aam
sub
mov
cmp
leave
push
loope
cwtl
xor
outsl
fcomps
mov
cmp
mov
aad
sti
dec
jge
push
inc
lods
arpl
aaa
daa
decl
add
inc
adc
pop
cli
fs
add
lret
cmp
jns
int
fnclex
inc
lods
lds
xor
test
int3
cmp
pop
mov
xor
int3
xor
add
push
add
xor
loop
adc
test
push
insl
fdivrs
stos
outsb
lret
mov
lea
ret
inc
adc
stos
or
mov
int
push
psubusb
mov
scas
pop
scas
test
and
lods
shlb
loop
mov
ds
dec
cmpsl
push
ret
dec
scas
or
mov
dec
or
mov
ja
mov
mov
shl
mov
jno
sbb
mov
lods
bound
adc
ljmp
aaa
or
leave
lods
mov
mov
scas
mov
ja
sbb
mov
ret
dec
mov
aam
inc
outsl
pop
adc
cmp
repz
std
adc
cmp
icebp
push
outsl
int3
nop
subl
push
test
js
cmp
xchg
mov
inc
pop
mov
or
or
mov
int3
adc
outsb
repz
xchg
mov
cvtps2pd
lahf
xor
sub
add
inc
sub
inc
mov
xchg
sub
xchg
fldt
insb
call
mov
clc
mov
repnz
dec
mov
mov
std
or
pusha
jp
dec
adc
jnp,pn
jl
jae
in
outsl
shl
cmp
xchg
inc
adc
adc
dec
jno
xor
mov
clc
dec
ret
or
pushf
int3
xor
mov
mov
sbbb
lahf
or
dec
xchg
mov
ljmp
jecxz
sbb
mov
xchg
sti
jmp
adc
sub
inc
sub
in
lea
cli
popa
sub
mov
push
imul
add
int
xorl
add
movl
popf
inc
adc
mov
jae
dec
loopne
popf
je
pop
mov
jecxz
push
mov
or
xchg
cmp
mov
sbbl
sbb
lahf
lods
lcallw
ds
mov
sub
mov
ja
add
mov
into
and
push
fdivrs
pop
mov
cs
jo
imul
sub
xchg
fadds
aad
jo
popa
mov
xchg
pusha
cli
lea
subb
ror
inc
xchg
cmp
mov
add
mov
jae
insb
add
or
loop
mov
push
test
rclb
jb
or
mov
dec
fildl
pop
aaa
popf
int3
clc
into
aas
push
xchg
out
cmp
push
mov
aas
fwait
movsl
sub
jo
xlat
cmpsl
and
test
lock
push
fcoml
int3
pusha
jmp
or
mov
sbb
mov
popf
sbb
mov
outsb
xchg
dec
test
xchg
push
sahf
mov
ja
push
clc
or
mov
int3
rcr
push
fs
pop
sub
fsub
orb
fs
push
imul
lods
ja
outsb
mov
lcall
sub
pop
mov
add
push
pop
mov
popa
xchg
fildll
ja
mov
aaa
fistpl
pop
outsl
push
ret
pop
gs
cwtl
add
mov
lret
dec
movsb
cmpsl
ret
test
dec
in
enter
add
rcrl
add
pushf
sbb
insb
outsl
jge
les
lea
pop
mov
fisubrl
push
cld
mov
jne
ret
gs
shrb
fildl
enter
sbb
sbb
lea
push
and
je
pop
mov
fwait
jae
sub
orb
fcmovnbe
fisubrs
and
enter
adc
dec
jb
in
insb
inc
movsb
shll
pop
mov
repnz
dec
popf
ret
ret
outsb
movsl
mov
xchg
jnp
mov
lock
stos
mov
clc
inc
popf
and
and
jae
cmpsb
push
je
std
inc
pop
test
sbb
je
sub
mov
dec
call
stos
push
add
inc
jecxz
lea
inc
in
xchg
mov
fstpt
pop
subl
js
mov
in
jbe
dec
xor
into
insb
test
push
mov
inc
push
outsl
xor
gs
mov
fstps
cmpsl
xor
mov
lret
mov
mov
stos
cmc
daa
mov
popa
jl
arpl
jg
ljmp
mov
popf
out
mov
push
or
inc
in
xlat
lods
jnp
es
hlt
movsb
stos
call
lcall
add
xchg
ss
push
leave
int
lahf
push
push
or
popa
xchg
movsl
out
cmp
dec
cmp
repz
hlt
mov
mov
hlt
or
mov
sbb
addr16
test
int
mov
cmp
sbb
push
lods
addl
mov
jp
and
or
dec
sbb
add
jnp
iret
and
movsb
in
sub
push
mov
repnz
mov
mov
jl,pn
mov
lods
in
jbe
pushf
lods
stos
pop
dec
mov
fsubs
ds
inc
sarl
stos
inc
dec
sbb
xor
inc
mov
and
mov
dec
inc
repz
sbb
or
insb
into
mov
jecxz
push
jecxz
dec
rcrl
push
fucomip
add
sub
jmp
mov
test
mov
gs
cltd
mov
adc
add
in
lock
fcomps
in
pushf
adc
pop
cld
in
or
xchg
loop
arpl
mov
or
mov
adc
mov
pop
jecxz
int3
pop
test
jae
insb
mov
jp
xchg
out
adc
inc
jp
cmpsb
mov
cwtl
cmp
aaa
sub
fsubr
cmpl
in
mov
ljmp
adc
addr16
sbb
fisubrs
test
int3
addr16
insb
icebp
adcb
add
sbb
in
int3
mov
and
inc
aaa
inc
cmp
fwait
mov
loope
or
sub
int
pop
xchg
xor
addr16
rolb
arpl
mov
in
cmp
pushf
mov
stos
test
jb
pop
sbbl
cmp
iret
clc
dec
andb
ret
push
cmpsb
lock
adc
int3
cltd
and
push
push
cld
scas
pop
jo
jecxz
add
or
and
mov
cld
and
add
lret
insb
iret
fwait
cmpsl
sub
jp
xchg
fwait
mov
sbbl
nop
xlat
cltd
test
test
inc
ffreep
bound
push
test
xchg
popf
inc
mov
pop
cwtl
imul
decl
cmp
rorb
mull
add
push
andl
fnstsw
xor
mov
mov
cmc
test
lods
and
push
fld
scas
lock
cs
mov
cli
cmp
je
insl
and
int
clc
in
sti
repnz
imul
cld
mov
loopne
add
cwtl
mov
clc
dec
pop
out
inc
sub
lahf
mov
jge
push
xor
inc
and
xchg
add
xchg
clc
call
cs
sbb
rcr
rcr
nop
fsubr
nop
clc
call
mov
insb
mov
frstor
insl
sub
nop
mov
inc
mov
insl
scas
sbb
pop
leave
cmp
fs
mov
mov
jnp
pop
lcall
add
or
scas
mov
insl
mov
xor
inc
sahf
mov
sbb
pop
addl
imul
mov
fsubrs
jo
scas
sub
mov
mov
fsubl
fs
add
mov
scas
lret
call
jns
outsl
js
cmp
out
out
outsl
jae
aaa
push
push
mov
jnp
gs
mov
mov
test
jecxz
pushf
mov
sub
inc
scas
hlt
test
mov
sti
jo
push
sbb
jge
mov
mov
cmp
nop
jae
popf
sub
mov
mov
out
or
repz
dec
cmp
mov
sub
scas
mov
jb
push
mov
mov
inc
dec
fcoml
jae
inc
addr16
loope
sti
je
cmp
pop
insl
in
clc
or
mov
mov
push
fs
sarb
or
pop
add
sub
or
in
into
sbb
orl
dec
cmpsl
or
push
xorb
jo
mov
lea
mov
mov
pusha
inc
sti
stos
mov
movl
mov
inc
mov
and
or
inc
insb
mov
pushf
leave
leave
jmp
mov
push
clc
mov
mov
rclb
andb
push
popf
cmp
sub
shlb
mov
out
cmp
mov
add
leave
addr16
mov
jnp
pusha
jmp
cltd
dec
add
call
std
push
test
or
inc
xchg
mov
scas
cmp
dec
stos
jae
and
sub
add
cmp
or
sub
push
insl
popa
arpl
cmp
cwtl
or
or
movsb
adc
mov
or
ljmp
imul
or
shrl
arpl
lods
dec
test
adcb
loop
pop
mov
push
xchg
mov
fisubrl
xor
leave
push
cwtl
popa
mov
jno
cli
or
dec
adc
arpl
mov
dec
inc
sar
mov
push
ret
xchg
jge
mov
lods
sub
or
mov
mov
arpl
mov
mov
xchg
mov
pop
enter
and
out
gs
mov
inc
fmul
push
dec
je
lret
push
cmp
push
shl
or
push
mov
push
jmp
sub
push
add
fsubrs
or
xchg
pop
or
inc
mov
lret
clc
sub
call
clc
and
mov
push
mov
sub
fs
mov
test
mov
outsl
xchg
mov
daa
jmp
sar
xchg
fisubrl
jp
insl
loopne
lods
or
lock
sbb
mov
jb
or
add
or
test
insl
aaa
push
lods
ljmp
mov
or
cmpb
mov
mov
sub
insl
pop
sub
mov
pop
mov
sub
in
pop
sub
push
std
int
int
dec
insl
mov
add
insl
clc
pop
mov
fmuls
mov
filds
fdiv
xor
pop
mov
or
mov
out
gs
xchg
push
js
imul
lods
add
sbbl
sbb
push
shr
pop
mov
clc
lret
lods
mov
repnz
and
insl
jnp
mov
in
lods
mov
xchg
jbe
sub
ret
xlat
push
cmpsl
cwtl
ficoml
arpl
mov
flds
into
ret
dec
cmp
inc
mov
ljmp
sbb
stos
and
loopne
fisubs
insl
or
jbe
aaa
imul
cwtl
fisubrl
test
enter
arpl
fs
jl
inc
pop
sub
test
sub
sbb
mov
aaa
pop
mov
bound
cld
arpl
adc
xor
fsubrp
mov
mov
xor
addb
stos
jb
std
pop
push
sbb
daa
popa
jb
mov
add
or
adc
out
lods
xchg
sbb
shrb
orl
jmp
ljmp
push
mov
subl
dec
sbb
xor
push
inc
loopne
or
and
mov
call
enter
int3
cmpsl
mov
adc
pop
enter
call
push
test
cmp
mov
ljmp
add
mov
bound
lret
fimuls
out
dec
pop
lret
mov
mov
mov
sub
and
fsubs
sub
push
lret
stc
xor
mov
jle
mov
adc
sub
fmuls
dec
imul
jno
loopne
insb
and
push
sbb
xor
lcall
orb
sub
imul
in
xchg
mov
addr16
sub
dec
mov
mov
mov
push
loop
xlat
mov
mov
xor
stc
add
mov
dec
arpl
pop
or
fcoml
arpl
out
mov
or
or
test
out
sub
mov
nop
adc
mov
test
es
or
push
or
stos
mov
fs
hlt
cli
fs
lods
popf
and
in
in
mov
mov
lea
leave
hlt
test
je
add
cmpsl
shrl
dec
jge
cmp
ds
test
xchg
push
or
call
xor
stos
jmp
int
insl
sbb
mov
xchg
or
pop
enter
test
cmp
adc
inc
jno
out
flds
shr
mov
push
jmp
shlb
repz
arpl
addr16
lods
sbb
or
xchg
mov
mov
sahf
jmp
or
cmp
mov
ficompl
sahf
pop
lock
xorb
mov
mov
cmp
lods
insb
insl
mov
mov
rclb
std
push
sbb
arpl
fadds
dec
jge
mov
dec
pop
test
or
or
jno
outsb
cmp
cli
dec
insb
jne
mov
sub
xor
pop
jae
mov
js
int
mov
xor
jecxz
and
xor
bound
loop
int
mov
xchg
loopne
pushf
gs
int
push
iret
push
scas
add
inc
arpl
into
je
dec
sbb
lock
and
sahf
push
xlat
testb
cwtl
mov
out
jmp
dec
mov
repz
int
mov
cs
insl
ds
sub
cmp
mov
lock
dec
xor
sub
jle
xchg
mov
mov
je
adc
imul
mov
out
push
pusha
pop
mov
add
clc
jnp
and
add
lods
push
leave
sub
fstpt
rorl
std
leave
push
push
lcall
outsb
push
test
inc
push
into
inc
ss
and
dec
sti
sbb
addb
sub
into
sarl
add
pushf
inc
jecxz
loop
incl
or
xchg
xor
in
adc
pop
fwait
repnz
test
mov
cmp
into
outsb
cmp
fdivrs
jecxz
mov
stos
lea
mov
sbb
stos
mov
or
push
rcrb
lea
jecxz
sbb
or
sar
aaa
mov
adc
add
mov
insl
dec
pop
enter
icebp
inc
mov
cli
insl
nop
mov
pop
jg
jnp
adc
mov
adc
clc
dec
bound
push
add
cld
inc
cmp
ret
call
push
mov
inc
fcomp
ljmp
sub
xchg
out
lea
sub
jo
imul
outsb
fsubs
or
mov
push
push
fisubrl
mov
loopne
mov
sbb
leave
pop
pop
inc
out
xchg
xchg
lods
mov
xchg
js
lcall
cmp
fwait
pop
popa
mov
sub
lock
arpl
shlb
dec
dec
mov
xchg
or
dec
add
cmp
mov
mov
shr
pop
nop
ja
clc
or
fisubrs
test
out
cltd
inc
in
testl
testl
xor
pusha
scas
xchg
mov
mov
fldt
data16
fs
sub
inc
fbstp
pop
sub
xchg
fsubl
add
and
dec
jns
pop
js
add
jle
cmp
ljmp
jge
nop
sub
stc
call
sub
insl
xchg
mov
dec
sbb
into
lods
adc
lret
dec
adc
mov
enter
cmp
fistl
call
aaa
leave
xchg
jp
leave
pop
dec
xlat
ljmp
sbb
or
xchg
insb
inc
loopne
jbe
dec
insl
jp
inc
dec
insl
insl
stos
xlat
sub
mov
mov
loopne
cmpsl
inc
stos
outsl
jb
cs
add
rorb
arpl
mov
lods
and
and
rolb
call
dec
stos
movsb
test
mov
popf
lcall
or
ficoms
sub
jp
xor
xchg
push
orl
bound
inc
dec
and
mov
test
adc
cs
arpl
jge
jo
push
dec
and
push
xor
push
fcoms
cs
jp
mov
mov
or
inc
ret
mov
mov
popf
pop
ljmp
or
xor
arpl
aaa
mov
xor
daa
shll
push
repz
sub
lret
icebp
js
lods
dec
push
clc
mov
adc
addb
mov
js
enter
push
stc
insl
push
stos
loop
pop
adc
popf
inc
mov
xchg
jae
pop
lock
out
mov
inc
push
or
mov
mov
mov
or
pop
mov
mov
stos
enter
mov
stos
test
xor
pop
insl
lock
jae
mov
bound
aaa
cmpsl
insl
movsl
add
or
es
in
insb
adc
mov
mov
dec
push
mov
js
cmp
sbbl
and
sub
arpl
mov
sbb
popa
clc
stos
lret
cmc
inc
sub
cmp
mov
sti
arpl
loop
inc
or
and
or
aad
and
enter
popl
mov
push
push
or
sub
xchg
dec
clc
lock
mov
and
ljmp
subl
mov
pop
pop
or
sbb
out
sbb
mov
xchg
repz
xchg
repz
gs
pop
fsubl
mov
adc
sbb
mov
imull
dec
mov
pop
popf
or
mov
test
or
dec
mov
int
mov
les
mov
cmp
adc
fnstsw
lcall
inc
xchg
pop
insl
xor
leave
push
fildl
out
cmp
lea
rclb
adc
gs
or
mov
mov
dec
or
sub
fisttps
adc
sub
jecxz
cld
fdivrl
push
jnp
shl
xor
insl
or
nop
push
int
cwtl
dec
xor
int
js
clc
adc
insl
imul
ret
sarb
cmpb
int
fisttpll
imul
push
mov
sub
xchg
insb
mov
rorb
outsl
sub
mov
lea
cmp
jp
pop
arpl
mull
sub
out
cmp
cltd
push
xchg
andl
push
imul
std
into
out
call
push
ret
mov
pop
mov
fisubrl
pop
aaa
test
sub
add
sub
ljmp
add
imul
stos
imul
mov
push
pop
stos
mov
ljmp
add
pop
jo
in
add
inc
fwait
into
bound
fsubs
int3
push
dec
dec
pop
push
dec
lock
sbb
or
push
mov
cld
addr16
dec
sub
dec
pusha
jnp
xlat
push
jnp
mov
or
mov
fcmovbe
mov
loop
cmp
xlat
sbb
mov
rorb
push
cmp
mov
mov
pop
into
mov
lods
pop
repz
std
daa
lret
pop
test
das
sbb
aam
test
dec
inc
int
imul
fs
scas
test
and
clc
mov
in
imul
dec
xor
add
arpl
jecxz
add
inc
lcall
or
lods
push
into
sbb
push
jbe
hlt
or
and
mov
mov
roll
dec
mov
pop
addr16
adc
jmp
push
ljmp
sbb
sub
jns
sbb
scas
in
and
inc
jecxz
test
add
sete
mov
out
fwait
rcrb
adc
je
imul
dec
lret
cltd
adc
fildl
or
cmpl
test
push
adc
imul
cli
lods
pop
inc
or
pop
adc
in
fcmovnu
shrl
dec
or
mov
add
mov
mov
imul
push
or
div
xchg
pop
js
in
in
lock
jp
iret
jo
mov
mov
int
ljmp
or
add
jnp
fdivrl
jl
xchg
xchg
andl
or
mov
adc
lret
push
mov
ja
scas
pop
sub
mov
lods
sti
mov
lock
test
cli
sub
sub
sub
outsb
cmp
sub
jmp
int
mov
push
or
adc
dec
shlb
mov
and
push
call
add
pop
imul
in
push
mov
fildll
sub
insl
std
sub
arpl
pop
clc
inc
shrb
cmp
loop
mov
sub
out
push
les
xchg
lds
shrl
in
arpl
mov
xchg
icebp
daa
lahf
xchg
push
enter
dec
icebp
dec
aas
in
imul
pop
sub
push
push
xor
cmp
jp
mov
dec
aaa
jns
sbb
jmp
dec
lret
mov
call
mov
mov
out
mov
push
add
mov
inc
dec
bound
shlb
push
xor
daa
je
pusha
imul
push
or
in
and
test
cmp
adc
cli
add
in
jns
mov
subl
out
orl
mov
push
mov
and
imul
rclb
arpl
adc
std
in
mov
out
insb
adc
sbb
push
and
cmpsl
push
ret
push
jae
gs
mov
daa
scas
rolb
loope
imul
cmp
lcall
mov
outsb
sub
add
subb
push
aaa
push
aaa
cmpsl
int
mov
mov
clc
dec
mov
add
in
push
and
jbe
std
mov
jp
sbb
out
dec
pop
ljmp
lret
xor
mov
in
jle
int
and
outsb
ss
mov
pop
movsl
mov
mov
push
dec
xor
in
mov
sub
movsl
and
lods
out
add
in
out
or
adc
gs
jnp
icebp
dec
mov
add
scas
data16
jge
out
push
pop
ds
mov
aad
push
ss
push
pop
xchg
mov
xchg
jmp
iret
sub
pop
imull
test
test
in
fsubrl
lods
ss
and
fisubs
mov
mov
lahf
das
inc
pop
push
xor
push
out
mov
iret
cmp
xchg
nop
pop
fidivs
push
mov
mov
daa
and
mov
outsl
push
mov
fistpll
sbb
data16
adc
mov
iret
dec
popf
xchg
and
es
inc
or
and
enter
and
mov
pop
js
push
mov
jae
lock
call
pop
and
or
insb
outsl
mov
dec
out
sbb
roll
and
xchg
push
lea
aas
push
stc
xchg
out
mov
push
adc
pcmpgtd
cli
and
mov
addr16
mov
sbb
mov
sbb
xchg
arpl
push
add
lods
lods
mov
adc
es
cmpsl
xchg
cli
insb
cmp
sti
push
add
and
cmp
and
push
mov
pop
pop
pop
fmull
mov
es
push
cmpsl
das
es
xlat
add
cmp
scas
xor
cmpl
rcrb
pop
gs
and
je
cmp
mov
data16
adc
out
pop
push
popf
xchg
mov
je
ss
inc
cmp
adc
aam
fs
add
dec
push
adc
sub
mov
pop
sub
scas
mov
push
out
mov
pop
push
push
xchg
and
enter
mov
mov
mov
inc
out
fstpl
mov
inc
insb
das
sub
cmpsl
push
jge
mov
xchg
dec
aaa
xchg
pop
cmp
mov
push
cmp
push
pop
xor
lret
mov
nop
repnz
dec
or
or
add
or
call
push
sbb
jns
mov
or
xchg
popf
repnz
cmp
popf
cmp
push
and
mov
loope
insb
xor
dec
std
add
int
int
es
add
outsb
fisttpl
push
push
out
lret
aaa
rol
dec
pop
jb
pop
add
push
ja
inc
mov
ljmp
ds
fisttpl
adc
pop
mov
and
lock
lods
mov
pop
lret
daa
in
mov
aad
mov
mov
daa
mov
push
lods
insl
lods
mov
js
and
dec
insl
and
jae
inc
dec
in
or
cli
in
test
inc
pushf
call
test
lret
addb
cmpsl
cmp
scas
popa
sbb
sbb
mov
bnd
sub
mov
mov
enter
lret
mov
fcompl
sbb
mov
call
xchg
scas
insb
insb
pop
das
in
aad
sbb
inc
xor
lods
cmpsl
call
jl
std
test
out
pop
sbb
dec
sub
xchg
or
mov
fadds
ficoms
lret
add
jne
lods
sub
es
pop
or
dec
cmp
mov
mov
in
aaa
mov
lea
sub
mov
inc
pop
mov
sub
stc
and
ja
sub
out
popa
sub
sarb
fmul
stos
or
into
test
sub
push
add
stc
push
daa
addr16
pop
push
lods
add
inc
or
sub
andb
pop
movsl
cmc
jno
mov
push
movsl
jbe
dec
dec
mov
mov
cmp
lea
push
sub
aaa
xor
jne
int
das
sbb
jle
pop
xchg
cmp
pushaw
add
sbb
das
cld
out
ljmp
push
int3
sbb
dec
push
aaa
or
pop
dec
and
pop
sub
dec
dec
sub
das
movsb
mov
mov
cmpsl
xor
sahf
push
sbb
pusha
test
aad
mov
xchg
inc
outsl
lea
gs
jmp
mov
lods
data16
repz
das
dec
mov
mov
in
dec
sub
cmc
add
dec
sbb
and
icebp
push
inc
je
cmp
notb
jge
dec
insl
rol
addr16
sti
addb
andl
jle
inc
outsb
sub
negb
sbb
inc
int
call
add
xchg
mov
rcrb
xor
fneni(8087
sbb
mov
faddl
fdivrs
lods
cmp
ds
in
sbbb
dec
or
push
add
inc
test
mov
imul
lcall
add
sbb
lods
inc
mov
adc
adc
push
insl
test
dec
stc
push
mov
pop
push
in
outsb
push
xorb
add
fmul
adc
lret
in
push
test
dec
pop
push
arpl
loopne
int
push
movsb
dec
xchg
dec
and
adc
jnp
dec
sub
dec
or
sbb
jnp
mov
jae
in
pop
das
add
enter
xchg
addr16
pop
xchg
dec
lods
sub
and
pop
lods
jae
and
pop
lods
enter
xchg
bound
iret
sbb
jmp
or
lret
das
arpl
or
imul
sub
pop
dec
das
mov
xchg
push
addr16
ds
sbb
and
mov
xchg
test
dec
insl
pop
lret
adc
inc
aaa
push
in
jnp
mov
xchg
push
iret
pop
jne
les
movsb
pop
pop
mov
add
mov
enter
lods
xchg
test
les
add
pop
lock
sub
test
add
jae
test
in
mov
addl
xchg
xchg
loope
add
lods
scas
es
sbb
mov
mov
mov
and
pop
ftst
jnp
int3
fdivl
lea
lahf
and
imul
shrb
lea
add
insl
xor
xchg
insb
inc
xorb
pop
mov
mov
mov
lods
cmp
fstpt
xchg
and
xor
addl
cwtl
push
adc
pop
mov
push
out
imul
sar
lods
sbb
jne
pop
sub
cmpsl
adc
pop
lock
lcall
test
repnz
dec
cltd
adcl
in
xchg
push
daa
dec
mov
fsubrs
mov
pop
dec
dec
subb
add
and
fldt
sbb
xlat
cmpsl
insl
dec
add
repnz
pop
mov
insl
in
or
mov
xchg
sub
popf
xorb
cmpl
sub
add
mov
mov
sub
nop
add
or
jb
mov
cld
data16
push
pop
jp
mov
shrb
mov
out
mov
mov
out
dec
jnp
pop
mov
ja
hlt
push
mov
dec
push
jae
mov
push
xchg
lods
adc
sub
sahf
push
imull
add
daa
clc
dec
jae
push
jmp
mov
add
mov
int3
push
push
xor
lcall
outsb
and
mov
ret
dec
mov
cmp
aas
mov
addr16
or
mov
sub
lods
fcoms
stos
jo
dec
pop
mov
cwtl
bound
mov
xchg
lahf
xchg
int
adc
xlat
dec
leave
jge
nop
loopne
mov
in
pop
mov
and
outsb
sub
inc
mov
shl
jmp
or
aam
mov
inc
lods
pop
sub
mov
shlb
sbb
push
and
scas
in
xchg
fsubrs
test
nop
mov
jl
dec
jl
daa
pusha
dec
mov
outsb
mov
outsl
popa
push
push
int
insb
enter
in
add
addr16
icebp
daa
outsl
icebp
dec
ja
into
push
cmpsb
call
pop
inc
scas
xor
decl
jg
call
mov
in
scas
fsubrs
ja
or
test
push
pushf
mov
push
out
in
sub
push
adc
int3
xor
lea
pop
dec
outsl
loope
pop
inc
dec
xor
movsb
sub
test
mov
iret
in
jl
daa
into
inc
mov
or
mov
movsl
dec
mov
sbbl
pop
jnp
pop
test
outsb
ja
sub
scas
aaa
cmpsl
arpl
jge
sub
gs
adc
js
mov
out
dec
or
mov
sub
jae
nop
pop
mov
addl
arpl
dec
aam
jl
pop
dec
scas
mov
xchg
mov
insl
xor
in
cmpsb
inc
mov
mov
pop
mov
dec
fidivrl
es
mov
mov
out
jge
and
mov
mov
icebp
das
lods
jle
xor
mov
dec
dec
mov
sub
mov
mov
lods
addr16
push
sti
clc
pusha
outsb
push
inc
mov
movsb
cwtl
lods
adc
sub
adc
xorb
mov
mov
ds
faddl
xorl
leave
arpl
jp
adc
jb
cmp
mov
dec
arpl
dec
int3
adc
jle
xchg
jmp
mov
imul
or
sbb
popf
lods
pop
mov
mov
arpl
inc
call
lea
mov
lcall
xor
mov
dec
movsb
das
inc
lret
and
out
out
fisttps
mov
or
adc
sub
loope
and
add
pop
add
and
lods
mov
xchg
arpl
jmp
jne
pop
and
subl
pusha
enter
arpl
out
shlb
adc
js
push
lret
or
stos
sbb
mov
add
cmpsb
enter
sbb
fdivs
lods
out
lods
sub
jp
pop
mov
pushf
in
xchg
out
xchg
lahf
mov
push
out
rorb
add
movsb
dec
dec
mov
inc
cmp
mov
sub
mov
fucom
push
packuswb
and
jge
and
push
test
or
dec
addr16
insl
cmpsb
dec
dec
mov
xchg
lahf
cmp
mov
data16
movsb
lods
inc
push
sub
movsl
lods
mov
lods
bound
mov
push
sub
test
add
lret
mov
aaa
or
clc
and
push
incl
aaa
xchg
mov
and
in
lahf
fistps
dec
pop
inc
bts
sub
mov
mov
push
mov
push
ljmp
enter
mov
jge
fistpl
dec
lret
xchg
and
insl
fwait
sbbb
popa
scas
cs
cmp
or
out
and
pop
iret
mov
jae
in
xchg
cmp
mov
pop
fiadds
push
frstor
mov
call
mov
lods
jge
push
ds
inc
push
leave
out
push
aas
or
dec
arpl
repz
xorb
lock
leave
scas
add
mov
push
aas
sbb
push
sahf
xchg
cltd
out
and
ja
xchg
gs
test
push
xor
es
pop
shlb
xor
add
pop
mov
jbe
add
pop
sbb
sub
jg
jne
insb
sbb
lock
push
insb
or
sbb
fcomps
stc
and
mov
movsb
shrl
cmpsl
int3
insb
mov
or
mov
pop
add
add
jb
fmull
enter
dec
bnd
pop
xchg
ret
sti
shl
pop
adc
lcall
popa
sub
insb
je
cmp
add
cli
adc
mov
lea
add
aam
insl
xor
adc
jg
adc
push
xor
push
or
data16
add
int3
push
cwtl
adcl
lods
pop
arpl
test
clc
scas
test
cltd
and
fildl
push
rorb
pusha
or
ret
dec
dec
xchg
pop
in
cmp
mov
cmp
inc
cli
mov
adcb
or
ljmp
mov
add
mov
jle
or
int
lods
pop
sub
pop
bound
jns
sbb
dec
and
mov
aaa
mov
and
push
push
mov
dec
xchg
jecxz
notb
inc
int
jnp
mov
popf
stos
push
dec
jns
mov
mov
testl
inc
int
pop
dec
push
hlt
insl
lods
pop
stos
mov
nop
cmpsb
imul
call
lods
or
inc
lods
mov
and
and
lods
or
std
gs
leave
add
xor
cmpsl
sub
aas
pop
loop
jg
sub
int
ljmp
cmp
lods
mov
in
movsl
ret
addr16
cmc
lods
sbb
in
movsl
inc
adc
dec
inc
xor
lods
xor
or
mov
insl
pop
and
out
lea
loopne
inc
sbb
pop
sub
jae
insl
arpl
in
mov
fidivrl
push
mov
sarb
jge
and
or
fisubs
pop
pop
loop
pusha
leave
pushf
inc
or
adc
or
and
lods
lahf
subl
mov
lret
test
add
lods
pop
mov
xor
mov
decw
insl
aaa
sbb
mov
in
push
or
sub
in
lods
xchg
ret
gs
and
cs
filds
stc
pop
andb
mov
mov
lods
or
test
shl
sub
pop
and
mov
mov
cmp
mov
int
jle
or
pop
sub
xor
and
push
scas
mov
dec
sarl
int3
xchg
sub
push
push
dec
rcll
outsb
cmpsl
out
scas
cmp
pop
jmp
test
inc
fnstcw
cmp
cmpsl
mov
mov
in
or
lods
insl
in
push
xor
es
or
mov
dec
lahf
xor
push
lods
jecxz
movsb
shl
xchg
jg
out
gs
out
and
xchg
fistpl
out
mov
cmpsl
dec
mov
call
fwait
test
ljmp
sbb
or
imul
in
cmp
int
adc
sub
clc
test
mov
inc
fs
push
sub
jno
mov
shlb
add
insb
adc
and
and
call
or
jae
and
adc
ds
fiaddl
outsb
cmpsb
sub
and
int
add
mov
sub
clc
stos
or
mov
add
mov
sbb
sub
adc
push
or
mov
cmpsl
lds
cmp
insl
mov
ja
out
jno
cmpsb
mov
mov
sub
les
insl
test
mov
insl
sub
sti
scas
stos
mov
mov
jmp
or
imul
insl
je
popa
int
and
pusha
imul
loopne
sbb
movsl
cs
mov
test
add
imul
rorl
das
lods
jno
pop
dec
xchg
cmpsb
stos
test
insb
sub
repz
cltd
insb
push
xchg
cmp
test
in
xchg
scas
in
jecxz
push
sub
scas
and
lcall
adc
pop
movsl
stos
sbb
or
jae
lods
cmp
sub
cmp
mov
movsb
sti
add
mov
in
mov
in
insl
ret
jno
cmpsb
cmpsl
emms
in
cmp
int
das
loope
push
outsb
lea
jbe
or
scas
sbb
cmpsl
cmpsb
push
xchg
add
sbb
sub
pop
pop
gs
sub
mov
inc
xchg
es
cmpsb
mov
pop
pop
pop
xchg
cmp
push
push
bound
push
cmp
repnz
mov
int3
fsubrl
dec
negl
xchg
lods
and
iret
mov
and
cmpsl
mov
fldt
pop
cmc
or
jg
test
sub
inc
mov
and
mov
iret
movsl
sub
mov
mov
lds
cmp
enter
cmpsb
loopne
loope
adc
mov
mov
ret
adc
push
pop
dec
mov
lods
ja
daa
or
dec
test
pop
mov
ljmp
in
fwait
ret
les
cmp
movsl
xchg
sub
idivb
popf
int
adc
stos
and
out
leave
test
out
or
stos
mov
sbb
dec
lods
ds
adc
jno
movsl
and
daa
cli
push
pop
gs
insl
cltd
aam
int
lods
es
popf
and
cmp
pusha
shrb
int
daa
and
fildll
lods
pop
in
sbb
popf
and
cmc
movsl
lea
add
and
adc
and
lahf
jl
and
sub
fisttps
mov
das
mov
mov
rclb
cmp
and
repz
sbb
daa
xchg
and
imul
pop
and
pop
inc
outsb
stos
daa
and
sub
push
push
sub
lods
and
pop
movsl
daa
mov
fstp
and
inc
dec
sub
pop
movsl
and
cs
jecxz
sbb
or
leave
movsl
pop
cmp
sti
jb
cmp
sub
pop
pop
push
movsl
daa
sub
sub
fndisi(8087
int
dec
cmp
in
popf
in
sub
bound
xor
sub
mov
cmpsb
lods
and
cmp
in
lods
loop
dec
out
stos
dec
cmovs
insl
sub
dec
insl
int3
sbb
insl
mov
std
xor
insl
inc
int
dec
xor
push
mov
push
or
dec
sub
and
or
in
or
sub
add
sub
mov
dec
lods
and
sub
in
xor
mov
push
cmp
jae
pop
push
movsl
daa
or
cs
or
in
int
das
xor
das
lods
xor
insb
call
movsl
sub
movsl
mov
movsl
hlt
arpl
inc
sub
sub
xor
mov
and
daa
movzbl
mov
and
lods
daa
jne
sub
mov
and
in
daa
pop
mov
mov
and
shld
xor
jmp
imul
in
sub
ds
xor
lahf
in
xor
insl
sub
lods
push
cmp
mov
es
sbb
xchg
lcall
daa
repnz
movsb
sub
jmp
xchg
push
sahf
pop
jmp
xchg
ds
and
mov
daa
aad
and
scas
jmp
mov
loope
es
ss
dec
sub
sarb
daa
jno
test
add
xchg
push
pop
es
ds
cs
pop
testl
dec
outsb
push
cwtl
aam
test
or
loopne
stos
fidivl
or
daa
shll
aam
sbb
aaa
push
nop
sub
int
and
cmp
and
cld
mov
aam
cmp
test
cld
push
ret
sub
inc
jo
fbld
es
push
adc
je
sub
mov
jo
adc
sahf
cmpsl
add
shrl
and
cs
xor
fiadds
out
push
or
sbb
fistpll
dec
frstor
sub
daa
inc
arpl
xchg
ja
insl
lahf
stos
das
sub
jg
sbb
and
imul
xor
aam
mov
xchg
pop
and
sub
inc
cmp
in
test
xchg
add
pop
sub
and
popl
sub
mov
cmpb
xor
sub
push
insb
loop
cs
pushf
gs
mov
insl
lcall
add
mov
sub
int
daa
int3
stos
dec
xor
hlt
fimuls
adc
das
dec
sub
andl
cs
pop
cmpsl
mov
cs
fdivl
jns
dec
orb
out
stos
aam
mov
dec
aaa
pop
popf
ja
iret
sub
aam
lret
outsl
and
pop
pop
mov
sub
inc
or
ljmp
inc
sub
imul
insl
cmp
xor
adc
movl
aam
push
cld
cmp
sub
push
or
cmp
or
dec
movsb
sub
jecxz
mov
lods
pop
stos
push
jns
sub
sub
jae
call
cs
cld
pop
sub
lret
cmpsb
pop
rclb
fldcw
push
adc
aas
and
jo
out
push
lods
jge
imul
repz
dec
fwait
xchg
dec
and
in
pop
push
fsubrs
inc
jge
test
mov
jmp
aam
aad
gs
cmpsl
sub
mov
addr16
lods
sbb
pop
clc
cs
and
shrb
or
and
xor
loope
push
sti
aam
xchg
cmpsl
sub
in
sbb
dec
sub
js
es
test
jb
rcl
and
popf
and
mov
aad
cli
lea
out
aam
xor
dec
push
sub
test
dec
ret
sbb
int3
sub
out
pusha
dec
scas
sub
mov
insb
xchg
sub
jge
out
in
dec
pop
cs
sub
mov
mov
sub
pop
add
and
adc
cs
daa
sub
in
jae
sub
push
daa
sub
cmp
jg
sub
pop
rorb
add
xchg
and
ret
jecxz
insl
add
aaa
pop
and
int3
scas
jecxz
add
dec
pop
sub
imull
xor
add
lods
cmp
int
push
adc
dec
lods
orb
xor
test
cmp
rolb
sub
sbb
ret
mov
sub
lret
lods
in
sub
jle
fsubl
pop
or
in
xor
inc
dec
sub
pop
xor
lods
adc
add
jmp
call
xchg
pop
rcll
lret
pop
sub
aam
shrl
js
loope
xchg
sarb
mov
cmp
xchg
mov
sub
daa
stos
mov
rolb
xchg
xchg
mov
jbe
sub
adc
movsb
and
pop
in
xor
rclb
pop
outsl
mov
inc
mov
and
and
xor
out
sbb
enter
jns
lods
sub
xor
jle
sub
shrl
das
popf
fistpl
dec
sub
movsb
mov
inc
sub
int
mov
mov
adc
sub
pop
sub
in
gs
jl
test
pop
daa
and
test
mov
sub
sub
or
adc
cld
gs
out
mov
sub
repz
out
sub
and
out
dec
dec
or
shll
mov
lds
cmp
data16
sub
sub
mov
sub
sub
les
sbb
scas
lret
sbb
pushf
sub
dec
jnp
gs
push
and
stos
inc
shl
adc
mov
sub
out
sub
shr
xorb
pop
test
repnz
in
loope
ja
lock
dec
jae
and
sub
jo
mov
sbb
push
ss
and
addr16
pusha
arpl
sarb
popa
inc
pop
sub
or
mov
sub
and
xchg
xchg
inc
sub
pop
fisubs
sub
ror
fcmovnu
fstl
jbe
inc
sub
cmp
adc
sub
cmp
addl
aam
mov
fs
adc
rol
add
pop
sub
jle
loop
ljmp
lahf
hlt
xor
inc
pop
sub
mov
lods
sub
xchg
es
and
call
cmp
cltd
sub
inc
xor
shrl
outsl
pop
xchg
jne
rorb
test
add
daa
pop
mov
rcrb
mov
mov
clc
out
enter
adc
xor
lcall
pop
pop
jp
imul
mov
hlt
mov
dec
cli
adc
and
gs
mov
nop
sub
ljmp
ret
cwtl
rclb
mov
movsb
pop
xchg
jp
movlps
movsl
add
aas
jb
sub
mov
in
add
cmc
daa
mov
enter
xor
mov
xchg
test
push
adc
in
and
test
mov
enter
int3
fs
fldt
fcoms
js
or
into
jmp
int
lods
cmp
ret
adc
jns
mov
or
jnp
inc
cmp
pop
pushf
add
and
outsl
cmp
cmc
pop
and
pop
test
rcl
aas
mov
push
cmpsl
sub
xchg
shlb
mov
inc
sub
aam
dec
push
movsl
loopne
pop
sub
adc
mov
add
mov
sub
inc
add
xchg
sub
jnp
clc
ss
jnp
cmp
shlb
mov
lret
repnz
cli
int
pop
pminsw
mov
mov
mov
pop
cvtps2pd
mov
jp
in
int
pop
bndldx
mov
cmp
lret
pop
psrlq
mov
repz
mov
xchg
xor
mov
sub
pop
cmovnp
mov
imul
pop
ud2
xor
mov
sub
and
sbb
frstor
push
and
sub
pop
das
insl
scas
pop
xor
pop
movsl
sub
pop
movsl
add
inc
ds
daa
lds
in
and
movaps
call
imul
cmp
jge
sub
daa
pop
and
and
gs
mov
and
sub
and
daa
scas
pop
xor
sbb
pop
movsl
add
add
lds
in
and
daa
call
imul
cmp
cmp
pop
and
and
and
ret
xor
and
jnp
and
cmpsl
and
jg
lods
lcall
sub
aam
lds
gs
and
rcr
lret
hlt
dec
ja
xor
sbb
es
imul
sub
fxch
aad
pop
int3
lods
adc
aam
insl
inc
dec
dec
xchg
imul
pusha
xchg
jb
sub
sub
xchg
popa
stos
pop
imul
cli
fisubl
push
hlt
in
aam
and
adc
jp
sub
push
gs
cmp
mov
rcrb
nop
mov
sub
aam
mov
cs
sub
inc
repz
push
mov
movsb
lods
stos
sbbl
inc
aam
fdivrs
sarb
and
push
aam
pop
lcall
sub
aam
xor
push
dec
adc
cmp
aam
int
insl
mov
sub
aam
sub
inc
and
aam
or
insl
inc
imul
lahf
test
aam
mov
pop
pop
sub
push
aam
cmp
mov
ljmp
and
aas
mov
aam
stos
dec
subb
sub
and
aad
enter
leave
stc
mov
insl
cld
push
fwait
ljmp
cmpsl
sti
shrl
pop
lret
mov
mov
aam
mov
in
aad
mov
push
or
daa
daa
cmpsl
scas
arpl
xchg
mov
cmp
sahf
mov
lds
xor
sub
test
addr16
sub
cmpsb
adc
sub
sub
out
aam
mov
mov
fcmovnu
out
aam
cmp
test
sub
xchg
insb
divb
cltd
mov
push
dec
pmullw
aaa
and
sub
mov
mov
cs
into
aam
xorl
mov
ljmp
daa
jmp
and
int
fldenv
pop
dec
sub
aam
cmp
insl
push
repnz
int3
xor
clc
mov
popa
push
mov
sub
je
or
clc
xor
das
test
sub
scas
inc
outsl
iret
imul
mov
sub
sbb
jne
insl
pop
mov
fisttps
add
pop
je
and
aam
aad
mov
cmp
ljmp
xor
jno
fildl
stos
push
rcrl
insl
stos
into
mov
sub
call
xor
jmp
sub
cli
insb
sbb
and
xchg
lret
shrd
xor
pop
insl
jecxz
inc
outsl
and
lods
and
cmp
lcall
sub
loop
loopne
xchg
addr16
test
aam
test
ljmp
lods
jmp
sub
cmpsb
shrb
mov
cmp
dec
and
test
jne
orl
clc
ljmp
mov
andl
add
xor
sbb
inc
scas
das
rol
mov
and
aam
jo
out
aam
jbe
cmp
sub
call
std
pop
scas
shrl
sahf
shrb
nop
adc
sub
xchg
or
lahf
sub
cli
cmp
pop
cmp
xchg
cs
sub
lret
dec
push
mov
call
pop
or
sub
sbb
stos
inc
stos
and
add
dec
fistps
sub
pop
inc
in
into
sub
jnp
sub
js
sahf
or
arpl
sub
fdivrl
pop
imul
and
xchg
add
loopne
test
add
insb
stc
push
loopne
rcrb
and
or
sub
sahf
cmp
dec
insl
enter
sub
jne
pop
std
push
sbb
jno
shrb
add
sub
mov
cs
sub
adc
lods
xorl
or
mov
cmp
mov
and
sub
test
dec
rcl
jo
and
push
shlb
fcomps
lods
cs
movsb
lods
cli
pop
lea
pop
movsl
mov
cmp
aaa
sub
popa
xchg
jge
and
mov
inc
sar
loop
inc
popa
jnp
movsl
jmp
cmp
jb
das
test
and
sbb
in
mov
cmp
ja
push
or
jbe
pusha
mov
imul
in
out
sbb
jge
mov
sub
sub
shl
jns
insl
fidivrs
sub
arpl
in
sub
movsl
pop
je
mov
shlb
int3
mov
daa
in
outsl
sub
xor
xchg
xor
mov
shlb
push
inc
test
jo
stos
sub
and
pop
mov
inc
mov
flds
and
clc
push
dec
and
iret
enter
imul
insl
push
daa
jo
xchg
shlb
mov
adc
dec
ds
shlb
adcb
inc
aaa
and
lods
cmp
pop
mov
out
cmpsl
nop
mov
aas
cmp
mov
sub
mov
add
or
iret
xor
sub
inc
mov
xlat
sarb
jno
aas
sub
shlb
cmp
push
out
shrb
sti
lock
aam
sub
ja
daa
fistps
pop
daa
cmpsl
pop
divl
out
stos
insl
mov
pop
daa
clc
sub
ror
jae
dec
ret
push
daa
test
jle
jg
shl
mov
dec
ret
test
xchg
js
pop
jno
inc
fdivs
into
inc
push
imul
and
and
push
cmp
sub
dec
shr
cmp
mov
and
push
out
inc
rcl
cmp
dec
add
xchg
das
daa
sub
lcall
add
loop
imul
stos
cld
cmpb
cs
pop
rclb
add
sub
pop
rcl
or
mov
sub
out
fwait
int3
and
push
lods
mov
lea
insl
lret
sbb
movsb
adc
cmpsl
insb
dec
hlt
fdivrl
addr16
mov
rolb
cmp
mov
sub
in
addr16
sub
stos
cmp
test
xchg
lea
ljmp
daa
pop
push
or
in
mov
pop
les
and
mov
sub
xchg
scas
setl
mov
daa
lods
lods
and
inc
xor
insl
sub
or
sbb
and
xor
xor
and
sub
frstor
sub
in
int
std
pop
pop
in
and
in
int
dec
xor
lods
in
xor
mov
and
daa
gs
unpckhps
sub
cmp
in
and
or
daa
lret
cli
xor
loop
jle,pt
insl
sub
xor
mov
daa
mov
daa
push
dec
xor
inc
insl
daa
dec
push
insl
jb
sub
xor
in
sbb
daa
pop
add
or
es
in
ror
ret
pop
por
insl
daa
jecxz
and
dec
xor
mov
xor
mov
and
daa
imul
xor
mov
push
or
fucomi
and
shlb
or
push
or
int
pop
jo
mov
push
int
dec
sub
xor
jo
js
push
and
pop
invd
xor
mov
in
arpl
push
insl
shll
icebp
in
int
pop
pop
xchg
movsl
and
mov
in
xor
imul
mov
cmpsb
daa
shl
or
hlt
add
dec
and
insl
or
in
lds
in
in
sub
cltd
out
pop
jno
shll
mov
test
push
mov
inc
in
int
pop
sbb
daa
jns
sub
movsl
add
imul
pop
sbb
insl
sub
xor
xor
and
and
hlt
xor
insl
and
push
movsl
add
es
in
in
daa
testb
insl
and
push
movsl
add
out
sub
xor
imul
mov
cmpsb
daa
mov
sub
mov
xor
daa
scas
xor
push
mov
cmpsb
daa
pop
in
sub
inc
movsl
and
xor
daa
jbe
sub
or
pop
outsb
movsl
and
leave
xor
daa
push
xor
push
lods
and
dec
and
sub
movsl
and
leave
xor
daa
xor
lods
and
dec
and
daa
pop
xlat
movsl
sub
xor
out
lods
and
dec
and
daa
pop
fbld
push
insl
cmp
xchg
lods
and
and
daa
pop
xchg
mov
insl
cmp
lahf
lods
and
pop
dec
movsl
sub
and
push
insl
cmp
inc
lods
sub
xor
ja
daa
add
pop
and
xor
mov
and
call
and
adc
fcompl
dec
lea
pop
fdivrl
jno
pusha
ds
sub
xlat
insl
pop
inc
std
xor
test
sub
fdivl
cmp
sbb
lods
outsb
xor
push
sbb
shll
and
or
repz
pop
repnz
das
jecxz
sub
fdivl
int
push
lods
out
adc
hlt
add
dec
xchg
aaa
daa
int
gs
lock
xchg
sub
and
loopne
inc
insl
dec
sub
mov
sti
and
or
xor
fsubl
or
aas
adc
sub
mov
sbb
repnz
sub
jge
sub
xchg
lret
mov
aaa
aaa
int
jne
sub
push
call
sub
ret
push
and
dec
pop
inc
pop
sub
sub
push
call
sub
fdivrl
xor
sub
sub
jnp
xor
sbb
and
mov
insl
insl
sub
and
push
push
dec
mov
xor
jo
or
sbb
sub
sub
movsl
inc
aaa
push
lods
sbb
cmp
jg
cmp
and
data16
pop
fs
sub
setle
mov
or
dec
and
mov
inc
aam
in
pop
jle
push
daa
lods
push
lea
sub
inc
sub
pop
push
cs
cmp
sub
test
push
lods
add
xor
xor
stos
mov
inc
pop
int3
insb
sub
jl
addr16
jl
sub
and
inc
pop
or
mov
jmp
mov
stos
and
pop
sbb
cmp
push
in
cmp
outsl
sarl
lods
adc
sbb
aaa
mov
inc
or
sub
cmp
mov
lods
mov
lock
adc
pop
pop
aam
jb
xchg
or
jmp
and
sub
jae
int3
imul
push
test
xor
repnz
daa
lods
sub
pop
and
hlt
sbb
and
fldenv
insl
lcall
out
outsl
mov
cmpsl
fwait
sub
push
mov
sbb
and
mov
inc
insl
es
inc
pusha
mov
outsl
cmp
lds
sub
lods
sbb
push
cmp
hlt
xchg
mov
sub
mov
sbb
sub
jl
xor
mov
loopne
cmp
dec
scas
sub
into
pop
xchg
imull
sub
sub
es
aaa
ja
lds
in
xor
dec
adc
loope
aaa
sub
test
fnstenv
lods
adc
sub
movsb
incb
clc
daa
lods
in
mov
sub
mov
mov
add
gs
mov
mov
lret
sub
lods
mov
pop
lods
xchg
aam
or
fstpt
or
scas
sub
fs
fsubrl
movsb
mov
xchg
loop
lds
in
sub
jnp
push
sub
cmpsl
mov
xor
or
test
sub
adc
push
xchg
daa
in
sub
idivb
fidivrs
dec
pop
in
sub
mov
insl
sbb
cld
stos
sub
cmp
popa
das
daa
adc
cmpsl
std
jne
inc
testb
and
movsl
and
jge
dec
and
and
cmp
pop
or
and
push
and
inc
test
sub
icebp
jo
roll
pop
sub
aam
pop
xchg
jnp
or
cmp
inc
test
mov
dec
push
lods
rcrb
lods
xchg
cwtl
lahf
dec
bound
test
jnp
add
mov
ret
pop
sub
dec
cmpsl
sub
adc
sbb
sbb
in
xchg
pop
mov
pop
cmpsl
adc
daa
inc
jge
lods
xchg
cli
rdtsc
fidivrs
sbb
outsl
or
and
mov
cmpsl
pop
hlt
inc
inc
lods
cmp
dec
dec
sub
bound
stos
outsl
and
sbb
pop
test
mov
insl
rcrb
stos
adc
and
mov
loope
and
or
lock
jmp
stos
sub
cmp
loopne
and
and
enter
out
or
enter
cmpsl
sub
adc
aaa
pop
int
test
and
add
cld
insl
cmp
pushf
push
and
xchg
jecxz
dec
js
insl
mov
insl
cmp
aam
xchg
and
xor
xor
sbb
cmp
in
sub
mov
out
mov
imul
shll
mov
xchg
mov
sub
jne
and
xchg
mov
sub
sub
stos
cmp
repnz
adc
and
adc
xchg
and
scas
dec
daa
sub
mov
hlt
sub
out
and
or
sub
push
xchg
fistps
daa
jecxz
mov
push
movsb
sub
push
sbb
repnz
les
and
lods
subl
movsb
pop
xor
cmp
dec
mov
push
into
jno
add
pop
push
pop
test
insl
pusha
push
mov
pop
shlb
sub
sub
pushf
pop
sub
sub
or
sbb
shrl
aas
in
add
test
jae
vxorpd
and
in
pop
cmp
out
insl
aad
mov
lods
sub
in
add
test
xchg
mov
sub
test
xchg
sbb
fidivrs
inc
adc
lods
sub
bound
push
mov
xor
pop
sbb
pop
lds
push
gs
push
cmpsl
lods
fucomip
sub
or
insl
arpl
push
inc
lea
insl
mov
lods
mov
xchg
sub
or
pop
rclb
lret
popf
rclb
loopne
adc
stos
push
call
daa
insb
cmp
sub
lods
or
mov
sub
faddl
jl
xchg
lods
lods
into
mov
dec
loop
push
aas
or
rclb
xor
in
pop
jp
dec
sub
test
cmpsb
repz
aaa
movsb
insl
std
or
sub
push
cmpsl
loopne
pop
lea
in
insl
cmp
adc
jno
jo
sub
fwait
daa
aad
add
add
scas
sbb
push
shlb
jbe
daa
insl
stos
fdivp
and
js
rcrb
and
aaa
or
adc
xchg
fs
iret
sub
jne
repnz
mov
pop
xor
sub
rcrb
add
inc
cmp
sub
lods
cwtl
mov
push
adc
shl
pop
insl
inc
lret
int
mov
push
out
lret
sub
jge
jle
push
sub
pop
sub
sub
test
aaa
sub
dec
and
rolb
xchg
fmulp
iret
lds
and
adc
add
aaa
pop
insl
das
cmp
outsl
and
push
mov
lea
mov
mov
push
sub
adc
scas
jecxz
cs
sub
loop
pop
lods
rolb
sub
lret
movsl
shlb
sub
aas
lods
jle
and
xchg
loope
sti
and
daa
or
lahf
jg
xlat
lcall
dec
sub
mov
sbb
enter
aad
cmp
inc
jo
ljmp
in
pop
into
hlt
mov
sub
ret
lea
lods
xchg
push
sub
std
xchg
mov
lods
mov
sbb
das
or
sbb
sbb
mov
bound
xor
mov
lods
aad
or
sub
gs
add
dec
mov
roll
jnp
in
pop
test
les
popf
insb
pop
test
sbb
pop
ret
enter
daa
aam
fidivl
cmpsl
sub
and
pop
mov
dec
jl
shrl
add
imul
sub
lea
hlt
lods
sub
rcrb
jl
fldt
lret
sub
and
rorl
push
aad
fcomi
inc
mov
mov
daa
jge,pn
mov
add
iret
xor
testl
sarb
hlt
pusha
gs
and
and
sub
sbb
sbb
mov
mov
jae
mov
sub
shlb
shlb
cmp
or
daa
ljmp
jns
daa
aam
and
jg
enter
lret
insl
sub
adc
sbb
sub
add
ja
xchg
out
loope
stos
and
sub
mov
adc
adc
pop
and
outsb
dec
xchg
daa
lods
in
push
sub
or
ljmp
push
sub
xchg
jge
sti
dec
lock
push
call
and
sahf
inc
and
adc
and
or
and
test
xor
jb
xor
loop
add
daa
mov
cld
std
mov
or
ja
or
push
add
inc
daa
pop
cmp
pop
adc
pop
daa
aam
cmp
fsubrl
xor
incl
sahf
das
or
pop
bound
in
pop
stos
aad
pminsw
adc
stos
adc
dec
aaa
repz
pop
dec
into
mov
jbe,pn
or
pop
lods
mov
rolb
mov
test
sbb
enter
std
ljmp
movsl
cmp
cmovg
or
popl
lods
or
hlt
and
ss
push
adc
mov
das
jp
rcr
cwtl
out
dec
jge
test
fcmovu
shll
clc
pop
movsb
adc
sub
push
in
xchg
xchg
or
repnz
push
sub
aas
cmp
jg
movsl
or
cmp
sub
orl
cli
fsubs
loope
adc
pop
insl
or
mov
push
sbb
mov
mov
pop
sub
xor
jecxz
ljmp
xchg
stc
rorl
xchg
fsub
daa
inc
inc
push
addr16
rcrb
mov
xchg
insl
outsb
lods
adc
in
insl
lcall
sub
cmp
push
sub
sbb
pop
inc
and
std
or
nopl
sti
movsl
inc
sub
sub
sbb
inc
xchg
jl
bound
mov
or
and
adc
in
loop
mov
dec
adc
push
lcall
sub
cli
and
bound
add
cmp
faddp
and
daa
lcall
pop
imul
lods
mov
dec
fdivrs
add
es
call
sub
cmp
repnz
sub
and
sbb
inc
inc
and
adc
loope
or
stos
repz
inc
push
outsb
cli
shrb
fsubrs
pop
fildll
sub
add
and
mov
repnz
fsubrs
dec
bound
push
push
mov
sarb
fadds
or
and
push
add
in
lods
sub
lret
fmuls
pop
jp
scas
mov
pop
shrb
inc
into
jge
lods
test
fadds
imul
xchg
sub
xor
fcoml
stos
sub
stos
fsubs
fildl
shlb
jge
and
in
cs
fdivrs
xchg
fdiv
cmp
push
shld
jns
pop
sub
push
sub
add
add
sub
test
mov
xchg
adc
aam
pop
push
cltd
sbb
out
and
xstore-rng
cmpsl
subb
das
pop
xchg
popa
xlat
cs
popf
sub
and
es
int3
inc
sub
mov
xor
pop
push
das
lds
sbb
aad
mov
or
mov
inc
int3
rcrl
scas
sbb
mov
dec
enter
and
or
int3
xor
les
sub
push
or
subb
sbb
jmp
je
inc
sub
dec
cmp
int3
cmp
mov
mulb
daa
int3
cmc
lret
sub
repnz
sub
jbe
lahf
out
and
mov
inc
lods
cmp
dec
and
jl
or
stos
mov
lea
pusha
pop
sub
aaa
cld
fstps
cs
add
gs
loopne
jle
cmp
negb
sub
pop
test
aad
in
loop
sub
xor
mov
push
jb
xor
out
sub
or
adc
sbb
insl
outsb
movsb
adc
and
lds
inc
sub
jmp
dec
ds
mov
ja
xchg
sub
cltd
sbb
aad
int
add
and
decb
or
int3
or
lahf
add
jg
jns
int3
sti
into
cmp
pushl
sub
xor
and
and
or
cld
aad
stc
enter
add
sub
push
push
sbb
test
daa
call
xchg
ret
jge
enter
or
add
xchg
cmp
push
fsubl
dec
sub
xor
call
cmpsb
int3
and
ficompl
and
and
inc
lret
sub
or
sub
rcrb
and
fistps
and
cmp
in
pop
sub
cld
xchg
adc
cmpsb
and
jp
rol
arpl
and
pop
dec
enter
inc
lds
fldenv
xchg
roll
mov
adc
sub
andb
pushf
aad
xchg
xor
sub
jmp
sbb
cmp
sbb
or
repz
int
dec
or
loop
or
pop
xchg
and
sub
mov
mov
enter
fwait
subb
sub
out
xor
or
cs
push
and
sub
pop
icebp
addr16
and
sub
pop
outsl
mov
int3
mov
daa
sbb
xor
xor
stos
mov
jl
sub
xchg
fcomps
imul
adc
pushf
mov
cmp
dec
push
xchg
inc
das
dec
and
mov
out
jle
jmp
jmp
rcrl
fbstp
enter
cmp
popf
andb
mov
sub
enter
in
je
sub
lods
stos
lds
push
mov
lahf
sub
add
push
leave
outsb
inc
enter
in
pushf
orps
mov
in
and
or
cmpl
mov
mov
adc
pop
add
int3
nop
and
jns
sbb
cmc
outsl
shrb
and
in
test
sub
sbb
lods
loop
sub
loopne
and
xchg
mov
cmp
mov
dec
cld
test
or
cltd
hlt
mov
test
sub
sbb
roll
cmp
cmp
push
sub
int
fists
gs
icebp
enter
inc
cmpl
push
fcoml
cs
jnp
push
fldcw
and
adc
shl
jne
xchg
rclb
xchg
popa
mov
push
int3
mov
mov
enter
lahf
loop
shrb
pop
add
imul
xor
loope
sub
divps
sub
add
mov
fwait
push
aaa
xchg
jb
or
inc
movsb
xor
or
sub
shr
dec
sub
popf
gs
adc
and
loope
sub
enter
cld
and
aas
popf
pop
inc
mov
push
dec
pushf
mov
sub
cmp
mov
sub
xchg
inc
sbb
push
inc
loope
daa
add
push
mov
ror
or
bnd
xor
xchg
daa
sub
pop
in
icebp
fwait
outsb
sub
lcall
enter
xchg
or
sub
xor
sub
dec
and
xchg
mov
sbb
dec
sub
js
xchg
add
pushf
xor
sub
cmp
adc
mov
and
pop
out
and
add
jnp
xchg
or
and
iret
push
jmp
imul
sub
in
add
cmp
cmp
and
out
in
and
clc
adc
sub
mov
sub
stos
xor
cmp
add
mov
into
add
and
sub
inc
sbb
in
or
int3
push
add
cli
cs
sub
mov
inc
ja
icebp
lods
sub
jo
pop
ffree
insb
test
mov
jg
sub
pop
inc
jmp
push
sub
out
lods
mov
out
sub
cmp
inc
imul
fldcw
movsb
lds
sub
jbe
and
dec
adc
inc
mov
mul
shrl
aad
inc
mov
int3
push
cwtl
sub
repnz
or
inc
adc
lods
daa
test
cmp
lods
xlat
sub
filds
inc
mov
clc
and
enter
mov
add
out
sub
and
lods
test
sub
lods
fwait
pop
dec
stos
lret
mov
outsl
test
or
inc
mov
cli
mov
out
xor
jbe
jae
daa
mov
in
loop
cmpsl
jge
push
lods
and
and
daa
sub
ljmp
and
inc
pop
mov
addr16
sarb
imul
sub
sub
enter
test
sub
and
pop
bound
inc
xor
mov
sub
sarl
hlt
jecxz
sub
inc
lods
ret
cmc
out
xchg
ret
test
insl
adc
add
cmpsb
mulb
lods
sub
bnd
in
out
sub
xchg
out
mov
sbb
sub
push
popa
jno
xor
cmpsb
addb
xor
cmpsl
cs
stos
sub
xor
stos
out
repz
lods
xchg
lret
outsl
in
in
dec
jnp
cs
ficoml
test
cwtl
call
jno
pop
cmpsl
sub
and
fnstenv
int3
arpl
lods
repnz
and
cmp
and
repz
sbb
xchg
fdivrs
lods
sub
dec
and
inc
movsl
mov
sbb
cli
sub
test
or
xchg
clc
sub
rcl
das
pop
sub
mov
daa
decl
out
sahf
cmpsl
sub
ljmp
mov
ret
sub
test
sub
fistl
sub
mov
adc
int3
mov
stos
sub
cltd
mov
int3
xor
jns
and
adc
sub
lods
in
roll
jns
mov
jg
aam
sub
test
push
jo
xor
pop
cmp
push
rol
rclb
push
in
shlb
sbb
daa
ljmp
and
mov
loopne
sub
lods
cmp
int3
stos
cltd
icebp
sbb
in
in
sub
incl
lahf
and
in
mov
movsl
aaa
cmp
inc
fbstp
add
shll
or
push
inc
add
xlat
dec
movsb
mov
mov
insb
es
xor
lods
std
lods
ss
in
arpl
xlat
push
xor
add
fwait
lea
dec
cwtl
mov
icebp
hlt
ds
out
mov
push
mov
pop
sbb
mov
mov
gs
sub
add
mov
enter
jno
insl
mov
pushf
and
enter
mov
outsl
sub
into
fdivrl
aas
sub
inc
fwait
sbb
hlt
in
xor
mov
jbe
jb
pushf
sub
and
and
fldl
pop
aaa
cmp
addr16
aas
mov
lods
dec
mov
lods
mov
int
or
fs
int
xchg
lea
sub
push
add
popa
dec
int
adc
xchg
and
cmpsb
lods
xchg
push
lea
out
add
mov
and
cmp
push
or
and
xchg
into
push
popl
add
and
mov
insb
or
sub
sub
loop
outsl
cmpsl
daa
and
loope
arpl
pushf
cmp
pop
push
sub
aaa
add
in
cmp
outsb
xor
cs
out
cmp
dec
xor
mov
in
xor
out
mov
imul
mov
scas
or
cmpsl
lahf
mov
insb
mov
gs
and
arpl
mov
sub
mov
in
gs
jne
test
in
push
fs
int3
call
adc
xor
cmp
lea
andl
mov
lret
in
jns
cmpsl
mull
xor
jmp
cmp
incl
ja
lods
int
ljmp
or
idivl
inc
lea
aas
out
pop
push
adc
leave
outsl
outsb
push
leave
sub
scas
push
jecxz
call
arpl
xchg
insb
xor
ljmp
or
out
inc
xchg
mov
movsl
or
add
dec
xor
cld
int3
pop
mov
mov
mov
dec
loop
mov
and
jne
enter
add
or
mov
and
add
mov
out
sbbl
adc
sub
sub
push
cmp
pop
ret
mov
out
movsl
aas
lods
push
out
lods
lea
lret
dec
and
inc
shr
stos
or
and
je
or
mov
sub
or
push
int3
fnstsw
pop
and
pop
push
and
loop
aad
cmpsl
bswap
add
pop
in
mov
lret
inc
fwait
lret
scas
xor
les
out
push
out
push
add
out
jmp
or
test
jmp
call
or
int3
call
sub
fdiv
pop
adc
and
inc
inc
cmpsl
movsl
sub
dec
jg
sub
cwtl
cmpsl
pop
dec
leave
push
call
into
sub
inc
aad
ret
cmovp
fimuls
inc
arpl
imul
and
or
mov
int
out
add
mov
xor
into
sub
call
jmp
pop
dec
bound
add
cmpsl
and
daa
push
sub
sbb
repz
pop
int3
mov
outsb
xchg
jae
cmpsl
cmpsl
fwait
cs
int
scas
push
cmpsl
mov
arpl
fists
xor
jbe
or
cmp
dec
dec
pop
lret
pop
mov
mov
scas
and
nop
lcall
outsb
xchg
pop
dec
inc
andl
pop
sub
sub
and
pop
scas
cmp
mov
lea
mov
cmp
add
inc
lret
inc
fsubrs
jp
sub
inc
mov
fs
outsb
std
addr16
das
outsb
arpl
mov
mov
push
dec
addr16
or
mov
subl
xchg
xor
cld
and
mov
cmp
mov
pop
cmp
ds
test
mov
or
int3
xor
cwtl
cmpsl
pop
add
ret
popa
ljmp
punpckhwd
fimuls
ljmp
out
outsb
fsubrl
mov
push
dec
or
pop
flds
mov
and
add
imul
out
inc
lea
or
int
jae
repz
stos
insl
ljmp
dec
xor
cld
and
stos
mov
or
inc
mov
aad
push
dec
fdivl
or
or
mov
adc
or
or
pop
push
in
and
outsl
inc
and
ljmp
into
push
in
and
xor
mov
lahf
mov
stos
ret
iret
push
in
pop
cmpsl
lods
ret
push
leave
stos
cmp
push
ret
in
and
jns
inc
dec
cmpsl
scas
addr16
ret
inc
xor
cmpsl
aaa
in
and
or
aas
dec
fs
push
cld
mov
arpl
enter
inc
and
add
addr16
or
into
sub
addr16
in
and
mov
inc
das
sub
outsb
cmp
scas
out
outsb
cmp
mov
test
enter
mov
cmp
cmovp
and
pop
dec
inc
inc
stos
xchg
lods
into
sub
in
pop
insb
add
jle
fbstp
dec
cmp
push
outsb
and
ja
mov
in
add
inc
mov
arpl
inc
mov
mov
lods
int3
ret
xchg
fcomip
xorl
xchg
lea
pop
and
add
jecxz
dec
pop
jmp
adc
test
lea
sub
ja
sub
ret
and
gs
adc
std
inc
in
lods
xchg
sub
ss
and
out
sub
in
test
mov
insl
je
int3
or
lods
outsl
test
jns
mov
in
and
mov
arpl
ret
fistpll
test
test
aad
into
mov
int
inc
insb
push
sub
addr16
loopne
cmp
cltd
in
mov
das
add
lods
scas
insl
je
inc
push
or
add
push
das
addr16
cmp
adc
insl
aas
mov
leave
dec
xchg
mov
fmull
mov
in
aas
loop
or
xchg
aaa
xor
lods
dec
gs
or
mov
lea
mov
aaa
daa
adc
cmp
or
sub
ja
popa
or
sub
push
dec
sub
inc
pop
lods
enter
out
mov
dec
aas
fldl
pop
mov
sub
pop
push
pop
dec
outsb
pop
call
inc
dec
cmp
insb
mov
imul
or
push
int3
adc
cmpsl
mov
cmp
pop
sub
add
test
cs
lret
dec
popa
inc
add
jno
push
mov
pop
add
push
imul
stos
mov
inc
insl
or
mov
mov
mov
popa
cmp
adc
pop
ret
or
out
jns
lret
je
adc
and
out
mov
out
cmpsl
lahf
fnstsw
punpckhbw
test
or
dec
jno
mov
repnz
out
dec
push
ret
movsl
mov
add
into
outsb
popa
sub
add
movntq
test
and
bound
imul
push
mov
xor
xchg
stos
aad
or
and
push
cmp
pop
outsb
sub
sub
inc
out
cmpsl
xchg
outsb
xchg
lea
orl
lods
sub
ljmp
jno
daa
xchg
leave
and
dec
inc
cmpsl
and
cmp
jg
or
in
lcall
pop
sub
cli
int
cwtl
sub
aaa
insb
lcall
mov
insl
push
inc
and
ja
mov
xor
or
and
addr16
mov
pop
das
jecxz
or
pop
in
inc
adc
mov
cmp
aad
inc
out
dec
cmp
xchg
int3
push
mov
incl
out
cmpsl
push
fisubrs
out
hlt
daa
fs
jmp
insl
stos
scas
jne
fsubr
daa
xchg
mov
dec
mov
test
mov
sub
dec
movsl
mov
outsb
adc
stc
pop
fisubrs
mov
mov
and
or
stos
fwait
mov
cmpsl
cmp
push
inc
lea
sub
sbb
call
xor
adc
pop
in
mov
sub
sub
mov
mov
or
dec
enter
mov
and
jae
loopne
push
sub
push
in
inc
inc
xor
push
repz
mov
sub
movsl
aaa
inc
and
pop
and
sub
outsb
jns
imul
xchg
adc
sti
sub
lods
out
popa
jmp
mov
scas
in
sub
push
xchg
idivl
rolb
out
or
sub
pop
xor
sub
and
xor
push
push
inc
in
pusha
mov
mov
push
mov
imul
fists
out
repnz
inc
out
cltd
iret
mov
cs
das
aas
lahf
xor
std
jno
jmp
sub
das
mov
push
stos
leave
sub
sbb
test
popf
pop
outsb
jnp
call
lods
push
mov
shlb
je
test
push
sub
aad
cmpb
cmp
test
and
pushf
sbb
and
ss
inc
into
and
je
movsl
sahf
jmp
xor
fnstsw
fildll
leave
lea
sbb
and
dec
sub
sub
mov
and
pop
or
sub
xor
push
call
shrl
pop
sbb
jmp
pop
inc
or
xchg
adc
sub
push
push
outsb
sub
icebp
popf
mov
sti
push
repz
mov
xchg
dec
dec
neg
sub
leave
dec
out
xor
inc
ret
sbb
loop
test
es
jecxz
inc
add
out
push
jnp
xlat
lods
jl
sahf
dec
sub
xor
dec
sub
push
and
int
and
daa
ja
dec
gs
sahf
xor
insl
sub
aas
pop
sub
cmp
inc
popa
mov
mov
in
push
out
sti
pop
push
cltd
rol
push
or
js
and
sub
mov
push
sti
pop
cmc
fcoms
dec
sub
aam
cli
fcmovne
movsl
mov
sub
and
lods
repz
andb
dec
cmp
shll
jmp
mov
ds
imul
daa
loopne
push
add
outsl
ret
sbb
fisubrl
fldt
jnp
xchg
cmp
cmp
pop
cmpsb
cs
dec
sub
in
mov
mov
pop
je
outsb
jecxz
mov
data16
dec
push
lea
dec
sub
pop
or
ret
sbb
out
sub
or
cltd
push
dec
test
jae
mov
pop
sub
and
xchg
or
stos
adc
sub
pop
sub
jp
cmp
add
adc
sub
into
je
dec
jmp
add
push
test
cmpsl
aad
dec
sbb
or
addr16
mov
cld
push
sub
enter
lcall
test
push
dec
jnp
loope
je
test
mov
or
movsl
sub
int
mov
ja
sub
sbb
pop
mov
xchg
sub
mov
leave
js
lds
xchg
jmp
xchg
xchg
mov
mov
sub
jb
jp
or
mov
sub
sbb
push
ret
ja
mov
rcll
sub
lods
cmp
pop
adc
test
and
pop
xchg
sub
lods
sub
insl
xchg
fldcw
mov
sub
jle
movsl
add
mov
dec
push
mov
loope
adc
xor
cmpsl
and
and
jge
sub
xchg
or
sbb
dec
and
sahf
dec
and
fcmovnbe
xor
int3
jne
mov
xchg
and
sub
jae
das
out
sub
mov
and
pop
push
push
out
add
mov
add
lock
ljmp
xchg
adc
sub
imul
lahf
cmc
xchg
ret
mov
push
fcompl
sub
popa
jns
push
sub
push
push
and
xor
sbb
ds
leave
pop
orl
pop
or
mov
inc
movsl
int
jge
imul
mov
ljmp
lds
xchg
ljmp
add
aad
xlat
pop
or
insb
into
or
sub
and
ret
sub
or
or
jns
outsb
dec
movsl
daa
daa
in
cmpsl
mov
scas
repnz
fidivl
roll
aaa
dec
and
movsl
arpl
cmp
test
sub
dec
daa
or
dec
push
inc
arpl
imul
iret
ljmp
imul
lea
test
and
or
cmpsb
dec
cs
imul
xor
lods
std
mov
add
hlt
mov
movsl
or
arpl
sub
dec
xor
insl
mov
std
orl
xor
add
and
loope
popa
es
test
sub
outsb
jno
cs
movsb
or
shrd
lret
mov
mov
sub
call
push
xor
es
je
test
dec
lret
ret
je,pt
imul
sub
cmpsl
ds
leave
gs
ret
xchg
dec
or
push
movsl
loopne
xchg
lods
call
out
cmc
arpl
mov
xor
add
mov
or
aad
lods
shlb
or
arpl
mov
push
insl
int
insb
adc
jecxz
inc
or
or
sub
push
call
add
jo
into
fsubl
arpl
push
mov
pop
push
push
mov
lods
cmp
outsb
pop
lods
sub
xor
sub
aad
push
imul
sub
ret
xchg
test
and
push
stos
and
adc
xlat
adc
lods
or
das
push
cmp
fisttpll
fidivl
or
add
cmpsb
dec
movsl
xchg
aam
test
jns
or
mov
insl
push
scas
mov
mov
jne
fildll
rcrl
cs
loop
mov
lods
scas
aas
pop
cmp
dec
addl
ret
loop
or
push
emms
and
mov
in
out
loope
push
lea
imul
xor
fucomip
pop
ret
imull
push
lahf
add
rorl
sub
arpl
sub
test
and
lods
out
or
out
ljmp
lods
inc
int
scas
sub
jecxz
cmp
sub
or
ss
xchg
test
loopne
xchg
push
mov
add
add
fstpt
dec
cmp
cltd
dec
pop
dec
mov
lods
mov
shll
sub
out
add
fsubrl
pop
int3
outsb
das
xor
inc
lods
mov
inc
sub
outsb
in
repnz
cmpsl
movsl
ret
movsl
xor
in
lahf
arpl
sub
lods
and
xlat
dec
jns
cs
push
mov
mov
test
mov
mov
mov
inc
jbe
add
mov
insl
popf
xor
jbe
ret
or
into
fs
cmp
lahf
test
and
add
and
dec
or
icebp
out
mov
lods
dec
xchg
arpl
ret
ljmp
and
pop
and
inc
or
or
jns
into
orb
xor
lods
push
inc
mov
lods
insl
movsb
xor
arpl
loope
xor
inc
fwait
dec
sahf
inc
daa
pop
in
out
aad
addr16
jmp
leave
adc
and
or
int3
push
divps
cmp
xor
xor
push
ljmp
mov
int3
das
cmp
scas
push
call
test
dec
dec
push
jns
lods
push
popa
int
arpl
stos
in
scas
dec
jecxz
mov
pop
mov
mov
movsl
mov
cwtl
pop
sub
fdivrs
outsb
scas
fiadds
les
add
mov
mov
arpl
add
int3
inc
push
or
out
push
or
int3
or
insl
sbb
jl
lret
insb
in
jecxz
out
add
insb
mov
push
sub
mov
xor
mov
xchg
inc
int3
sub
mov
mov
enter
inc
dec
test
mov
rep
dec
add
repz
pop
daa
jge
mov
mov
mov
popf
cmpsb
in
xchg
daa
cmp
sub
aam
mov
aad
arpl
je
jl
mov
aaa
adc
push
fisttps
inc
and
add
mov
ds
push
ja
fs
dec
push
jecxz
insb
js
jle
cwtl
test
lods
push
ja
mov
mov
lret
xchg
daa
mov
mov
jecxz
fmull
shrb
sub
fistl
jns
sti
ja
pop
dec
push
lods
pop
cld
cs
test
sub
test
xor
je
sub
imul
xor
shrb
jge
cmp
je
inc
cmpsl
ret
in
movsl
stos
outsb
sub
inc
daa
jns
mov
in
ja
lret
jecxz
hlt
movsl
mov
fwait
sbb
mov
mov
jg
adcl
cmp
movsl
mov
mov
push
insb
or
dec
mov
in
jmp
insl
add
out
push
inc
push
test
jno
mov
testl
movlps
loope
aad
stos
cs
jnp
fisubs
jge
insl
add
daa
in
aas
scas
insl
push
xor
out
sti
jge
insl
fwait
insb
movsl
push
pop
pop
fistl
pop
xor
decb
or
mov
cs
add
xchg
popa
cmpl
and
incb
test
pop
or
pop
xor
imulb
movsl
pop
lret
mov
mov
fisttps
dec
jecxz
xor
pop
gs
pop
notl
int3
cmc
mov
or
fimuls
cmpsl
rorb
into
aam
mov
and
add
sub
iret
insl
push
mov
test
insb
xchg
push
jmp
jns
mov
cmp
mov
sub
imul
lods
cmp
xchg
arpl
int3
clc
int3
and
clc
ret
xor
cs
and
fisubs
mov
imul
dec
lahf
mov
arpl
out
aad
scas
out
dec
inc
sbb
shrb
mov
ds
loopne
insl
fcmovne
sbb
pop
inc
cmpsl
dec
or
test
dec
lods
push
dec
pop
sub
cmp
sub
jge
dec
dec
cmp
insl
scas
in
int
pop
punpckhwd
popa
test
push
ret
push
cmpsl
fistpl
arpl
pop
mov
dec
sub
in
or
lods
push
jnp
addr16
int3
movsl
sub
in
mov
mov
fldz
mov
xchg
pop
lods
imul
and
insl
and
or
inc
out
into
fsubs
jecxz
xlat
add
or
je
leave
and
mov
inc
cmp
ret
jl
xor
or
push
xor
test
fs
dec
xor
cmp
and
mov
sub
pop
jge
movsl
imul
mov
arpl
cltd
or
or
jno
xchg
xchg
xor
movsl
inc
gs
mov
xor
stos
aaa
cmp
imul
mov
inc
push
movsl
gs
cmpsl
fwait
scas
lea
testb
mov
or
dec
xor
mov
mov
insl
jecxz
outsb
aaa
dec
or
subl
imul
xor
sub
movsl
test
jmp
dec
add
jecxz
sub
jb
setp
ret
jns
in
xchg
push
adc
jl
arpl
mov
dec
fimull
lods
lods
cmpsb
jmp
outsb
push
push
push
daa
addl
movsl
cs
fucom
and
or
dec
add
jge
into
sbb
mov
enter
int
pop
psllq
mov
mov
mov
mov
test
dec
inc
push
mov
cs
mov
xchg
push
into
pop
mov
call
loopne
test
insl
call
push
mov
bound
dec
in
dec
sub
or
xor
ja
pop
sub
fstl
leave
subb
cmpsl
ds
mov
lods
pop
paddsb
mov
dec
mov
insb
jmp
fsubrs
cs
xor
adc
mov
cmp
fisttpll
arpl
push
pop
xchg
test
fs
insl
mov
lahf
jns
cmpsl
mov
cmp
mov
mov
mov
insl
push
and
je
pop
fwait
stos
int
adc
mov
popf
loope
cmp
arpl
jno
enter
push
or
sub
leave
sub
fildll
push
movsl
or
mov
adc
fs
lret
sub
xchg
pop
jne
mov
mov
sub
in
das
dec
push
insb
mov
call
lods
or
mov
dec
mov
mov
cmp
sub
scas
insb
dec
lret
cmp
lret
in
nop
or
sub
jge
dec
inc
pop
fmul
pop
int3
dec
out
ljmp
inc
xchg
sub
jp
lahf
sub
cmpsl
add
insl
subps
mov
ds
lea
mov
cmp
out
pop
mov
lods
arpl
out
into
stos
xchg
pop
movsl
sub
call
push
das
and
insl
pushl
or
imul
cs
insl
mov
sbb
sub
sub
push
inc
and
mov
mov
andl
outsb
fildll
pop
add
in
idivl
enter
test
sbb
int
pop
movsl
lods
and
movsl
add
sarb
int
imul
fisttps
mov
sbb
cs
sub
xor
add
enter
adc
jecxz
lds
insl
movsl
pop
mov
pushl
lea
xor
mov
stc
cmp
sbbl
mov
test
insb
xor
enter
cs
or
ret
mov
jge
nop
mov
ljmp
sub
rolb
outsb
in
mov
in
or
shlb
mov
insb
insb
shll
int3
mov
out
sub
mov
cmpsl
in
popa
imul
fs
daa
int3
push
mov
xchg
dec
mov
out
imul
mov
insl
mul
cmpsl
loope
jnp
shrl
jle
mov
in
pop
daa
sub
in
inc
ja
subl
mov
inc
sub
cs
shrl
ja
jecxz
add
addr16
cli
mov
sub
cld
mov
inc
sub
stc
or
into
sub
cmc
scas
push
mov
out
push
lea
mov
push
pop
fs
inc
loopne
jmp
call
pop
das
lret
arpl
fidivrl
adcb
push
inc
movsl
lods
sub
arpl
scas
int
sub
push
xor
loop
dec
jecxz
adc
dec
mov
int
stos
inc
mov
mov
lahf
mov
movsl
int3
cltd
ljmp
dec
mov
mov
cmp
into
test
mov
mov
or
fstl
lods
cmp
rorb
aad
sub
jo
popa
push
cmp
ret
jbe
insl
cli
xor
clc
add
insl
inc
jl
jle
dec
mov
dec
aas
or
insb
mov
inc
or
mov
cmp
xlat
sub
lods
aad
cs
cmp
mov
push
int3
push
scas
dec
outsb
jecxz
add
loope
stos
fisttpll
lods
mov
inc
sti
ljmp
sub
dec
insl
cs
movd
mov
imul
xor
mov
arpl
sub
push
stos
mov
shll
fmuls
xor
mov
lods
mov
addr16
xor
mov
scas
mov
imul
sub
or
int
pop
bt
mov
add
divl
ljmp
mov
add
out
insl
cmp
aam
cmp
or
push
adc
and
fisttpl
add
push
test
mov
cmp
or
leave
mov
daa
lea
insl
push
cmpsl
xchg
mov
inc
mov
lea
or
mov
inc
arpl
fimull
mov
lods
jle
mov
fs
and
insb
or
dec
add
flds
xchg
adc
fcom
aas
test
jae
mov
cmp
scas
add
mov
adc
add
out
movsb
aaa
push
and
fnstenv
cmpsl
fldlg2
sub
sub
add
cmpsl
or
lds
cld
jns
leave
insl
push
jno
inc
cld
into
addr16
pop
leave
pop
sbb
mov
or
fisubs
mov
mov
dec
mov
mov
jg
push
inc
pop
lods
jae
je
jecxz
add
imul
mov
mov
imul
outsb
andl
jmp
sub
imul
and
call
out
aaa
dec
and
and
scas
and
daa
sbb
sub
call
int3
jno
mov
mov
dec
xchg
or
dec
push
dec
lods
sub
cmp
aam
cmpsl
daa
lods
out
mov
testl
dec
outsb
and
and
push
or
fldcw
mov
or
pushf
jno
leave
lea
sub
in
outsb
xor
sub
mov
je
inc
fwait
sub
jb
inc
mov
dec
xor
insl
pop
insb
arpl
test
add
ja
fs
sahf
mov
insb
dec
sbb
jp
pop
jl
ljmp
outsl
push
or
insl
jns
cmpsl
mov
lods
scas
add
sub
jo
in
xchg
in
mov
in
loop
or
lahf
in
mov
insl
cmp
icebp
cs
movsl
lods
sbb
sub
in
je
in
pushf
mov
loopne
mov
add
mov
lahf
sbb
pop
scas
mov
scas
pop
leave
or
lahf
cmp
mov
out
cmc
arpl
arpl
arpl
stos
cmc
arpl
cmc
arpl
lods
push
test
push
shrb
jecxz,pt
aam
lods
out
movsl
sub
and
je
outsl
mov
je
lods
push
dec
into
xchg
push
mov
psubsw
loop
aad
loopne
add
mov
jno
js
dec
div
sub
mov
push
dec
xor
movsl
jnp
push
dec
xchg
popa
adc
scas
out
out
pushf
dec
add
inc
dec
add
mov
pop
ds
insl
iret
insl
inc
dec
sar
out
and
insl
aaa
push
dec
movsb
imul
mov
insl
pop
je
mov
xchg
push
fdivs
add
in
push
dec
insl
mov
xor
inc
lea
mov
fs
insl
mov
adc
rcrb
or
mov
movsl
out
loop
pop
insl
push
sub
push
pop
jae
or
dec
test
lea
mov
mov
pop
int
pop
movntq
shr
inc
mov
mov
jmp
imul
popa
fwait
dec
mov
mov
call
or
pop
lods
lea
or
push
or
ss
in
sub
cs
xor
enter
out
sub
inc
mov
adc
pop
out
adc
adc
lods
push
rcrl
lods
sbb
dec
pop
call
lods
testb
enter
loop
ljmp
add
lret
dec
ljmp
lods
lods
xchg
cltd
pop
arpl
mov
push
lea
jmp
inc
frstor
mov
cmpsl
movsb
sahf
sub
sub
xchg
arpl
mov
cmpsl
je
fldcw
or
arpl
lret
sub
cmp
out
sub
sub
inc
xor
cld
xor
sysenter
fldl
fstl
fstp
je
movsl
jne
in
sub
sbb
push
xor
fldcw
cmpsb
sub
lods
mov
in
sbb
cmpsb
ljmp
sub
test
out
mov
fisttps
jae
dec
fucomip
aad
sub
ret
insl
arpl
lahf
or
int3
arpl
adc
arpl
test
ja
mov
stos
push
xor
ljmp
cmpsl
adc
call
in
fisubrl
test
push
fisubrl
sub
fisubl
pushf
add
and
or
and
cmp
mov
mov
xchg
mov
or
sbb
out
movsb
adc
pop
out
out
loope
cmp
testb
test
enter
aam
sub
add
insb
dec
out
push
or
cmpsl
lods
int3
outsl
outsl
loope
cmp
dec
lods
rep
lahf
sub
or
xchg
and
cmp
and
mov
jae
out
push
fisubl
gs
imul
dec
ret
out
out
sub
sub
fldcw
int3
sub
stos
int3
dec
bswap
and
out
insb
mov
mov
insl
pushl
in
sahf
add
je
pop
jecxz
cld
fldcw
sub
hlt
mov
rcl
cmpsl
mov
lods
shrb
in
and
sub
out
mov
arpl
dec
clc
lods
xchg
fwait
cmp
scas
imul
iret
arpl
ds
dec
mov
jle
cmp
inc
mov
push
inc
lea
cmpsl
mov
add
add
xchg
sub
push
cld
dec
movsb
sub
add
adc
gs
sbb
add
dec
sub
xor
fisubl
adc
cmp
imul
dec
jb
fildl
stos
sub
adc
jnp
imul
xchg
pop
ret
pop
mov
aam
sbb
cltd
sub
adc
popf
test
test
scas
iret
icebp
cmpsl
xor
add
mov
adc
dec
mov
insb
int
inc
xchg
sub
jecxz
xor
fisubrs
in
or
add
xchg
jp
adc
scas
cs
ret
cmp
clc
popf
sub
mov
sahf
jecxz
insb
notl
scas
inc
sub
dec
dec
pop
jge
int3
dec
cld
in
lods
mov
mov
xor
mov
sub
cmp
movsl
movsb
push
aas
push
fwait
and
gs
jns
mov
ja
int3
cmp
pop
int
imul
sbb
arpl
sub
pop
fisubs
mov
aaa
mov
sbb
imul
inc
loope
gs
pushf
pop
pop
popa
outsb
mov
sub
sbbl
movsl
lods
jnp
cmp
fsubl
mov
pop
leave
popa
push
pop
push
andl
imul
or
addr16
jle
into
pop
cltd
pop
popa
arpl
fisubrl
dec
movsl
sbb
in
pop
cs
popa
sub
mov
pop
pop
fisubl
loope
mov
add
jns
out
cmp
pop
notl
cld
mov
cli
jae
bound
popa
push
addr16
mov
pushf
frstor
movsl
lret
mov
add
flds
dec
popa
push
mov
mov
cmp
popa
inc
mov
leave
mov
pop
xchg
popa
fdivrl
ljmp
inc
pop
enter
mov
mov
pop
cmp
pop
sub
jno
pop
pop
adc
mov
pop
sbb
inc
mov
cmp
add
addr16
mov
jle
mov
pop
or
addr16
in
cmp
sub
add
jp
popa
clc
mov
in
test
dec
call
cmp
insl
xor
mov
xor
xchg
jl
movsl
fsubl
or
pop
cmp
cmp
pop
mov
mov
sbb
popa
jns
into
or
xlat
mov
pop
cmp
mov
xchg
or
arpl
pop
dec
stc
popa
into
mov
pop
mov
dec
lret
jp
repz
sbb
scas
mull
mov
sbb
popf
cmp
pushf
fiaddl
jecxz
inc
mov
sahf
mov
fcompl
mov
or
xor
jmp
mov
ds
fdivrl
pop
fisttpll
lret
jp
ret
or
addr16
mov
jns
daa
jecxz
imul
fidivrs
cmpsl
addr16
mov
mov
push
and
addr16
leave
pop
test
xchg
addr16
sub
mov
fdivrs
or
out
popa
pushf
mov
sub
xchg
cwtl
and
xchg
sbb
mov
in
xchg
or
loope
gs
mov
lods
mov
test
popa
decb
and
xchg
inc
jne
gs
lea
pop
mov
out
push
andl
enter
pop
pop
mov
subb
inc
and
jmp
das
pop
xlat
xor
outsl
rcrb
ss
in
cld
pop
std
sub
add
shrl
mov
sbbl
arpl
daa
xor
sub
push
adc
in
gs
lret
push
push
enter
arpl
cs
inc
mov
xor
lds
push
sub
cmp
or
sub
mov
aas
pop
fcomi
push
ret
ffree
xor
cltd
inc
push
cmp
inc
push
mull
mov
in
in
adc
pop
sub
cmp
jno
sub
adc
repz
pop
subb
scas
fcmovnu
cmpsl
mov
pop
adc
inc
add
into
ss
fs
dec
iret
addr16
out
sbb
cmp
mov
popa
jl
aam
ja
push
sub
sub
jae
nop
adc
inc
daa
out
cld
sbb
mov
aam
mov
mov
pop
in
sub
lea
adc
cmp
test
aaa
ljmp
cmp
jb
sahf
xor
movsl
or
pop
jmp
jg
and
ret
fstl
lods
adc
sahf
sub
lar
inc
scas
es
cmpsl
add
jns
xchg
mov
mov
sub
mov
mov
ja
sub
push
lahf
sub
lods
arpl
mov
fsubrs
cmpsl
xor
ljmp
ljmp
int
or
lods
dec
iret
or
outsb
mov
shll
subb
xchg
test
sub
in
fldenv
sub
mov
inc
sub
jns
sub
shrb
call
push
and
adc
sub
jo
out
sub
pop
or
mov
out
cs
sti
sub
insb
stos
data16
int
sbb
xchg
mov
lds
lods
inc
push
sub
lahf
or
sub
dec
aad
test
jns
sub
gs
xor
jo
cmp
mov
xchg
imul
int3
stos
scas
in
xor
xchg
repz
inc
pop
inc
and
mov
mov
mov
push
clc
xchg
sub
adc
and
cmp
cmp
cltd
and
lods
xchg
mov
sub
or
dec
stos
mov
in
sbb
test
sahf
fldcw
jae
mov
dec
enter
in
jmp
fists
xchg
sub
ss
jecxz
xor
jp
adc
in
movsb
dec
pop
xchg
or
mov
jnp
movaps
xor
fs
stos
add
into
fldcw
jno
xor
pushf
adc
sub
popf
enter
mov
sub
jnp
arpl
mov
cmp
xchg
mov
xor
gs
ja
sub
cmc
fstp
xchg
sbb
sub
xchg
sub
dec
sub
aam
nop
xor
daa
xor
aas
adc
bound
and
lods
lret
and
nop
ret
add
and
fidivrl
sub
or
mov
xchg
sub
jmp
mov
sub
andb
add
mov
call
sahf
jnp
lret
mov
inc
loop
add
mov
xchg
pop
pop
sub
and
sbb
xchg
es
lahf
and
in
sub
das
mov
ja
adc
outsl
sub
or
imul
fbstp
loope
sub
xchg
out
rcrl
into
add
sub
hlt
dec
sub
xlat
mov
js
inc
inc
sbb
mov
idivb
mov
je
jno
std
mov
jne
add
sub
jp
cmp
mov
sti
mov
xor
sbb
int
test
fs
test
adc
in
fnstcw
call
cmpsl
dec
pusha
mov
mov
and
xor
lcall
push
sub
mov
fnsave
mov
mov
sub
xor
ret
lds
mov
leave
sub
pop
call
cld
pop
sub
cmpsb
stos
jne
mov
loop
jecxz
pop
fwait
and
push
sub
dec
imul
cld
sub
mov
sub
enter
cs
inc
cmp
movsl
sbb
cmc
cmp
sub
inc
xor
cmpsl
andl
mov
sbb
out
lcall
dec
mov
sub
dec
repz
addr16
aam
ljmp
div
cltd
jbe
add
add
push
sub
lock
and
pop
sti
sub
cltd
cli
imul
in
lret
cmc
xor
cld
jmp
inc
and
pop
test
nop
lea
psllq
adc
mov
das
push
scas
addr16
adc
mov
sub
fbld
cmp
dec
inc
sti
jns
sub
and
mov
xchg
out
cmp
cmp
std
mov
mov
jge
adc
daa
js
ds
ljmp
nop
lods
dec
and
int3
add
mov
inc
jmp
jbe
fwait
jne
mov
inc
and
dec
mov
shrb
sub
test
sub
lret
push
mov
or
adc
sub
loopne
or
sub
xchg
out
sub
xor
or
arpl
push
addl
mov
mov
lods
adc
jge
shrb
and
add
add
test
dec
fiaddl
sub
ja
mov
mov
push
mov
loopne
faddp
pcmpgtb
xor
or
faddl
sub
push
or
ficomps
xchg
fdivl
lds
jecxz
sub
das
out
insb
in
popf
imul
stc
mov
xor
inc
push
or
mov
sbb
shll
aam
out
cmp
jae
xchg
clc
test
mov
lahf
lods
mov
sub
aad
loop
stos
pop
sub
jmp
testb
push
das
je
push
sub
test
aas
inc
sub
testl
and
enter
ds
sub
cmc
cwtl
pop
jbe
dec
sub
mov
int3
or
sub
and
add
out
cld
leave
and
push
addl
jle
in
das
mov
xchg
lret
inc
test
jg
sub
ss
stos
sub
iret
push
pop
scas
jge
enter
rol
jne
sbb
hlt
xchg
aad
jecxz
out
adc
mov
sub
sub
sub
dec
push
cltd
in
sub
push
pop
mov
cmp
rcrl
push
push
out
mov
ds
sub
mov
sub
lea
popf
sub
mov
sbb
and
inc
daa
lods
popa
movsl
mov
xor
pandn
push
and
test
sub
aaa
cmp
out
sub
mov
cmp
ret
aas
scas
push
sub
dec
sar
push
sub
inc
scas
sub
scas
cmp
std
sub
aaa
cmp
pop
adc
das
lods
shll
imulb
hlt
add
sub
ljmp
int
stos
and
cmp
call
addr16
rcr
or
movsb
ret
fcoml
jl
inc
loop
add
insb
adc
jb
gs
pop
pushf
xchg
in
out
mul
cltd
jns
pop
aad
or
out
mov
loopne
sub
mov
sub
add
popa
pop
sub
adc
mov
ret
loope
add
mov
iret
repz
mov
repz
sub
mov
insb
dec
sub
pushf
ljmp
je
push
jne
sub
lcall
mov
cltd
mov
cmp
rcr
std
sub
dec
inc
mov
dec
int3
testb
ljmp
pop
and
push
sub
test
and
mov
ret
jnp
or
and
mov
cmp
sub
hlt
hlt
repnz
pushf
into
into
xor
mov
inc
je
loopne
sarl
pop
test
push
mov
mov
add
add
int
jno
and
cmp
ret
mov
int
pusha
mov
les
pushf
sub
sbbb
dec
push
adc
jecxz
add
jge
mov
push
mov
pop
push
and
sub
push
leave
sbb
es
pushf
xchg
adc
mov
arpl
sub
fnstenv
repz
shll
in
sahf
xchg
mov
fs
mov
xor
inc
outsl
ret
and
ds
and
pushf
mov
mov
jmp
sub
sub
test
lret
or
cld
arpl
aaa
sbb
cmp
dec
pop
int3
insb
std
xchg
mov
and
jge
nop
adc
stos
add
sub
cmp
in
sub
and
test
dec
push
loope
sbb
ljmp
sub
pop
stos
sub
pushf
and
idivl
and
mov
nop
dec
jecxz
fwait
or
dec
mov
insl
sub
mov
jae
and
mov
sub
ffreep
testb
shr
sbb
scas
pusha
and
and
addl
int
fwait
push
inc
and
lods
jnp
xchg
or
and
push
sub
sub
sub
ds
sub
sub
cli
xor
jecxz
ja
inc
sub
or
idivb
and
sub
push
icebp
fwait
and
ffree
out
xchg
repz
push
pop
ss
inc
mov
sub
scas
neg
sub
xchg
aad
les
in
ds
into
inc
iret
jb
and
cmp
sub
sub
mov
insl
shrb
test
inc
outsl
sub
pop
mov
cltd
sub
adc
jne
pushf
gs
mov
sahf
cli
mov
sub
cwtl
addr16
push
xor
push
sub
mov
sbb
mov
out
cmp
sub
dec
cmpsl
ds
add
inc
and
xchg
shlb
lods
xchg
xor
repz
sub
xor
jg
sbb
test
jb
jno
push
push
mov
stos
inc
sub
test
mov
in
sub
adc
popa
sub
add
jnp
push
icebp
sahf
xor
sub
outsb
pop
mov
adc
sbb
enter
xor
mov
jecxz
mov
pop
into
test
mov
push
int3
gs
in
imul
outsl
sahf
mov
stos
jae
adc
cmpsl
into
sub
mov
in
ret
loop
sub
test
jmp
inc
xor
add
shrl
sub
adc
xchg
int
pop
fwait
push
inc
pop
pop
and
jmp
orb
inc
mov
dec
sub
mov
or
lret
mov
insb
hlt
and
std
dec
mov
sub
je
das
lret
out
sbb
and
cmp
adc
jbe
sbbl
push
mov
pop
mov
or
jbe
mov
pop
fs
scas
jle
xor
cmpsl
push
mov
and
fdiv
scas
xor
fisttpl
fwait
notl
sub
add
or
ret
mov
adc
idivb
shrb
fidivs
das
lahf
mov
sub
push
gs
lock
mov
loope
jge
adc
ftst
cld
pop
sub
inc
push
fwait
movsb
mov
pusha
adc
mov
scas
repnz
sub
push
pop
pop
lock
and
or
sub
jle
pop
fstl
and
mov
xchg
int
sub
jl
cli
sub
inc
sub
fldenv
into
test
sarl
sub
pop
insb
pop
adc
cmpsl
jns
sub
maskmovq
notl
mov
xor
mov
mov
jb
push
sub
sub
loope
rcl
adc
xchg
xor
fmul
sub
dec
lods
pop
data16
push
int3
fcomi
adc
fsubrl
push
ja
inc
and
xchg
add
movsl
mov
inc
enter
xor
lret
inc
and
popa
shll
sub
sub
jl
lret
inc
push
inc
sahf
sti
fsubrl
push
mov
mov
pop
pop
popf
mov
sub
ss
sub
mov
out
xchg
lds
js
and
jb
xchg
push
push
lret
rcrb
iret
sub
popa
xor
xor
mov
arpl
loope
dec
xchg
leave
push
loopne
dec
lret
sub
insl
push
fdiv
xor
add
imul
xor
xor
hlt
and
mov
jb
jmp
int
sub
jl
cmpsb
imul
sub
dec
test
xchg
dec
add
cmpsl
pop
out
push
sub
imul
pop
mov
popa
sbb
cmp
jg
xor
in
sub
mov
and
lret
push
sub
imul
xchg
sub
cmp
insb
mov
sub
xchg
sbb
clc
mov
add
ret
inc
jo
in
and
pop
jae
sbb
inc
cs
add
stos
or
int3
adc
sub
xor
subl
sub
mov
aaa
mov
mov
pop
loopne
hlt
sub
xor
xor
int
jp
sub
xchg
ss
lret
lock
push
and
movsb
push
xchg
pop
xchg
and
hlt
xchg
setp
sub
and
and
loop
dec
int3
mov
subl
sub
cmc
repnz
sti
sub
fisubs
jle
adc
fidivl
cmp
mov
adc
ret
sub
lret
push
cs
cli
or
cmpsl
jo
inc
dec
sub
sbb
jl
sub
mov
and
xor
push
and
sub
xchg
enter
add
dec
add
jno
ja
cmp
add
jmp
in
mov
jne
xor
sub
and
inc
andb
adc
or
sub
and
shlb
or
sahf
test
repz
jae
xchg
mov
sub
mov
and
repnz
push
cmpsb
nop
sub
loop
push
fisubrs
jae
test
sub
xlat
aaa
int
xor
mov
cmpsl
fcompl
jle
push
js
fwait
cmp
scas
sbb
in
fucomp
jl
popa
cmp
and
movsl
es
inc
mov
add
ret
mov
popf
push
aas
cmp
cmpsl
adc
adc
or
sub
cwtl
icebp
ljmp
dec
sbb
andb
bnd
and
or
sub
mov
out
int3
std
sub
jno
sub
adc
lds
lods
int
add
roll
arpl
mov
and
pop
xchg
and
sub
rorl
mul
hlt
mov
sub
xchg
mov
jno
sarl
xchg
mov
sbb
pop
cli
jmp
push
sub
outsb
scas
aam
xchg
call
fldl2e
lods
xor
je
xor
xchg
movsb
outsl
sub
or
or
jns
mov
inc
fiadds
fnsave
dec
jne
repz
aad
xor
xor
dec
sub
sub
push
inc
push
dec
scas
mov
fs
clc
sub
inc
inc
js
sub
add
xchg
sub
jg
cmp
cli
fwait
adc
inc
xchg
into
add
sub
push
add
jns
sub
xor
push
adc
repz
daa
aas
sub
pop
mov
lret
and
call
mov
lea
add
adc
enter
int3
nop
or
cmpsl
mov
mov
bound
lds
icebp
xor
imul
dec
cmpsb
shrb
test
and
cwtl
rcrl
mov
sub
xchg
mov
pushf
call
mov
sub
sub
mov
sub
xor
mov
loopne
mov
pop
mov
xchg
xor
adc
arpl
cmpsl
stc
ljmp
pop
rolb
scas
cmp
pop
push
push
lock
aad
lahf
fildll
cs
sbb
fsubs
repz
pop
sub
fwait
xchg
sub
iret
orl
adc
movsl
and
mov
mov
sub
or
mov
xor
imul
ret
xchg
mov
scas
xchg
mov
pop
and
popa
pop
push
cli
jo
and
pop
roll
es
stc
sub
aas
cmp
stos
add
lcall
sbb
jmp
les
jmp
mov
push
pop
mov
ja
sbb
test
sub
pop
jns
out
and
cmp
push
jnp
outsb
inc
and
or
add
cmp
into
jae
das
inc
mov
and
sbb
sbb
cwtl
lods
lcall
nop
inc
sbbl
sub
jmp
pop
mov
mov
outsl
or
sub
test
jge
clc
pop
jb
mov
mov
stc
out
stos
cmpsl
xchg
jne
jnp
xchg
int
pushf
pop
adc
in
hlt
jmp
sub
pushf
sarl
sub
push
or
mov
mov
sub
aaa
es
insl
std
or
sub
popf
aas
ret
cmp
or
and
add
mov
push
aad
mov
push
pop
callw
and
add
push
mov
leave
pop
push
mov
sarl
inc
push
in
imul
xor
adc
inc
popa
adc
stc
pushf
sub
jmp
mov
fldenv
adc
pop
sbb
sub
jnp
jecxz
sub
fcoms
ja
and
dec
frstor
mov
in
add
sub
mov
in
scas
sbb
aam
inc
jmp
and
mov
enter
and
lret
sub
lock
pop
xor
inc
shll
fstl
xchg
pop
ret
mov
push
mov
cmpl
jb
fidivs
fnsave
fwait
push
sub
sbbl
out
lahf
jmp
fldln2
adc
jle
push
mov
lea
dec
and
call
fdivrl
daa
sbb
iret
inc
scas
mov
icebp
cli
sub
cmp
and
ja
loop
test
sub
pop
shrl
mov
cmp
in
mov
iret
push
pop
jns
pushf
or
xlat
jo
and
adc
enter
mov
sub
xor
jmpw
adc
lea
push
jmp
adc
dec
sub
sub
jge
es
arpl
rol
ja
push
lret
aam
dec
addl
xorb
int
jge
sub
push
decl
jnp
lret
std
insb
xor
das
and
insl
xchg
inc
test
xor
pop
icebp
jo
xor
mov
sbb
mov
mov
sub
xchg
sub
jp
lods
sbb
push
cmpsl
cmp
popa
test
sub
lcall
mov
pop
jmp
rorl
adc
xchg
xchg
fsts
or
shll
iret
lods
inc
daa
sub
sub
mov
pop
test
lods
stos
cmpsb
push
popw
mov
cs
sbbl
xchg
jle
adc
pop
or
jo
xchg
xchg
mov
push
mov
add
sub
jle
and
or
sub
xor
ss
lds
stc
dec
sub
insb
sahf
sbb
jp
jmp
xchg
pop
sub
push
arpl
mov
push
xchg
scas
or
out
movsl
xchg
push
and
mov
pusha
jg
sub
and
mov
or
xchg
icebp
xchg
in
test
and
lods
dec
cmpsl
xchg
imul
popf
sub
subb
xchg
scas
sub
jne
dec
xchg
int3
adc
or
mov
and
cmc
adc
rclb
lods
pop
daa
sub
mov
mov
and
lock
sbb
xor
sbbb
daa
mov
xor
pop
out
shrb
pop
lock
jmp
aaa
data16
lret
pop
and
pop
loope
mov
add
jge
arpl
push
rorb
fbld
cli
pop
call
int3
jp
daa
mov
in
xorl
mov
mov
add
data16
loop
sahf
ret
call
sti
dec
nop
inc
xor
mov
addl
adc
and
shrl
es
push
shr
out
jne
iret
pop
xor
rcll
cld
test
mov
jg
mov
inc
push
cmp
aaa
ret
into
aaa
xchg
xor
popf
or
or
jp
mov
push
or
pop
into
mov
inc
ja
adc
mov
pop
mov
or
arpl
dec
jl
adc
add
cld
and
clc
mov
lods
stc
aam
push
inc
and
rclb
fiadds
jae
inc
cmpsl
jno
aam
ds
shl
pop
das
es
xchg
into
packsswb
xor
adc
lea
es
subb
jl
inc
sub
xchg
push
xorb
xchg
fidivs
lcall
xchg
shlb
inc
mov
sbb
sti
test
xor
std
jno
mov
sbb
jg
xlat
setnp
insb
stos
dec
and
mov
inc
mov
sbb
jae
push
jecxz
lret
test
hlt
stos
int3
aad
push
push
cld
or
jns
xchg
xchg
rclb
repnz
inc
mov
in
movsl
mov
push
lock
out
mov
cmpsl
jbe
loope
fcoml
jns
mov
or
insb
mov
or
xor
mov
leave
mov
fcmovnu
clc
and
std
es
outsb
push
fstl
iret
cmp
scas
in
pop
pusha
jae
movsl
and
xchg
ret
les
xchg
jle
es
mov
mov
sbb
pop
or
dec
xchg
imul
rclb
or
les
or
cli
pop
fldl
pop
gs
lock
or
mov
and
int3
xor
jge
inc
xchg
mov
push
ljmp
es
xchg
cmpsb
hlt
xchg
mul
andl
xor
mov
pop
data16
lret
fisubs
movsb
popa
fiadds
pop
pop
pop
shl
sbb
into
inc
scas
jae
xchg
test
je
xlat
mov
mov
add
and
adc
and
sbb
and
js
sub
sbb
adc
add
add
cmp
sbb
iret
xor
enter
aam
cmp
push
mull
hlt
mov
lret
sti
sahf
push
loopne
shlb
xchg
daa
xchg
sub
out
push
ljmp
pop
mov
xchg
xor
hlt
jae
cmpsl
inc
leave
dec
jns
xlat
mov
sbb
add
push
mov
add
mov
and
call
xchg
add
mov
inc
lret
fwait
cs
imul
out
mov
dec
push
cmp
adc
in
cmpsb
sbb
inc
lds
out
push
pop
jnp
sbb
bound
jge
xchg
fsubrp
xor
jbe
jl
push
les
jle
lahf
mov
xorb
leave
pop
fwait
mov
jp
push
mov
cltd
add
in
mov
xor
js
mov
jmp
pop
dec
xor
push
mov
dec
jmp
cmpsl
lea
ja
not
cmc
sub
pusha
sub
push
neg
sub
add
js
not
mov
sub
mov
bt
repnz
push
pushl
jmp
repz
or
ret
movaps
or
xchg
mov
mov
mov
nop
xor
mov
pop
xchg
or
adc
jae
sbb
mul
ret
ds
popa
lea
mov
out
pop
add
frstor
push
lods
dec
rcrl
dec
in
push
jns
dec
aam
lea
mov
sub
cs
add
lret
aas
into
fistpll
fstpt
stc
scas
lret
jle
orl
das
js
insl
loopne
int3
mov
cmp
in
mov
xor
push
jnp
out
ljmp
insl
or
nop
sbb
stos
adc
iret
push
iret
popf
shrb
movsl
xchg
ss
aas
cmp
rcll
xchg
cwtl
insl
pop
jb
inc
mov
fistps
addr16
xchg
sbb
out
mov
jnp
inc
pop
int3
pop
dec
popf
mov
jecxz
aam
cld
inc
pop
repnz
sbb
push
setae
inc
sar
add
pushf
bt
xchg
sub
or
clc
mov
cmc
mov
stc
jmp
andl
pop
ds
scas
cmpsb
daa
fldenv
ficoms
xchg
xor
lret
mov
int3
addr16
add
sub
lret
mov
movsb
push
inc
movsl
inc
jmp
lds
xchg
pushf
push
add
push
sti
pop
in
ljmp
jns
subl
bound
and
les
data16
push
mov
incl
pop
test
lods
mov
incl
ss
jecxz
mov
test
cmp
jle
iret
mov
mov
dec
pop
xchg
sub
xor
mov
push
mov
insl
adc
hlt
and
sti
lret
inc
fisubrl
push
add
jb
test
fmul
push
sub
pop
jnp
stos
jmp
mov
jge
pop
aas
sahf
sub
sti
sub
das
fs
push
dec
mov
lcall
pushl
popl
pusha
cmp
call
lods
lock
das
into
push
inc
ljmp
add
fcoms
das
out
xor
sarl
lret
mov
xchg
test
pop
jb
pop
into
test
add
pusha
jno
sbbl
dec
insb
add
ja
xchg
mov
jecxz
add
pop
aas
and
movsb
in
enter
repz
int
mov
push
inc
popf
lods
xchg
xchg
sub
or
mov
pop
lret
pop
adc
icebp
inc
mov
aaa
bound
push
jg
addr16
mov
fimuls
js
stc
out
fdivp
aas
mov
stos
push
or
loopne
test
xor
jge
push
lea
pop
and
shl
inc
addb
out
mov
in
push
aaa
test
xor
std
push
nop
addr16
clc
xchg
and
jns
mov
and
out
and
push
iret
xchg
adc
add
xchg
add
rcrl
and
jmp
ficoms
mov
loope
mov
push
and
sub
cmp
mov
add
fists
add
cmpsl
fwait
and
xor
jbe
xor
enter
arpl
andl
inc
xchg
dec
jns
add
mov
loop
jbe
stos
xchg
mov
xchg
cmp
pop
inc
ds
lahf
or
shrl
mov
push
inc
xchg
sbb
xor
dec
or
push
inc
and
rcll
cmp
dec
ds
xor
std
cmpsb
call
ljmp
clc
add
adc
loope
mov
shrl
add
stos
in
popa
add
shl
cs
lock
mov
pop
fwait
int3
repnz
repnz
cmp
mov
sub
mov
pushf
sbb
aad
sarb
and
adc
aaa
ret
rorl
stos
inc
in
xor
mov
out
cmp
ds
repnz
or
inc
xchg
enter
jg
out
add
sub
stos
add
push
push
lea
jmp
and
ret
mov
mov
and
in
pop
pop
cs
pop
rclb
nop
inc
in
das
push
dec
fwait
mov
shrb
and
subl
fnstenv
mov
pop
xor
push
push
jb
pop
jbe
jecxz
jb
mov
mov
xchg
inc
inc
xchg
sbb
out
insl
incb
dec
adc
aaa
and
pop
int
jo
inc
mov
inc
cld
push
jmp
mov
mov
or
lds
or
push
insb
dec
inc
inc
fwait
push
or
cmp
push
xchg
inc
out
jecxz
cwtl
shlb
mov
mov
in
rolb
out
lahf
rcr
jb
arpl
inc
jp
xchg
inc
ds
adc
xchg
outsb
stc
adc
xor
push
out
leave
mov
jl
in
sbb
sub
push
mov
test
shll
cmp
mov
mov
daa
pop
fsub
and
push
in
fsts
data16
test
jmp
lea
call
pusha
pushl
call
stc
pop
and
es
shlb
pushf
push
jg
movsb
add
jb
lret
jo
cwtl
shlb
jns
cmp
dec
repnz
repz
cld
push
push
xchg
rol
add
lods
rorl
mov
js
adc
jns
sbb
jmp
insl
stc
xchg
jg
xor
inc
dec
test
or
rcll
dec
push
inc
xor
mov
sub
imul
push
add
fadds
sar
setp
mov
movw
mov
test
pusha
pusha
call
rcrb
fbld
mov
push
fistpll
insb
scas
xchg
push
pop
cmpsb
popa
adc
mov
je
jg
xchg
aad
fwait
sarb
aam
ss
inc
xchg
out
js
ja
sbb
adc
shrl
xchg
cmp
dec
xor
dec
into
jnp
dec
ret
pop
pop
add
cmp
sbb
xor
popa
into
jbe
add
xchg
and
cmp
loope
lods
aas
out
outsl
int3
xchg
jecxz
iret
xchg
jle
es
es
popf
inc
repnz
loopne
fwait
in
jns
cld
and
lret
imull
shll
ja
icebp
xchg
cmp
lret
movsl
xlat
into
test
leave
fs
shl
out
xchg
fpatan
inc
adc
lret
dec
mov
dec
dec
enter
bound
dec
or
idiv
or
xor
ja
adc
push
jle
dec
mov
out
loope
loop
dec
repnz
xchg
frstor
mov
dec
mov
dec
pop
adc
outsl
mov
das
mov
jns
xchg
aaa
mov
jp
movsb
mov
mov
dec
aad
or
dec
push
pop
fisttpll
in
pop
sub
addb
and
and
xor
rcrb
sbb
icebp
add
jecxz
lahf
test
js
mov
mov
sbb
enter
adc
mov
imul
cld
loopne
fldcw
movb
out
ret
push
cmp
xor
bound
sbb
xor
mov
loope
pop
mov
fs
adc
movsb
jge
repnz
mov
data16
sub
push
dec
cmp
or
push
add
xor
outsl
mov
loopnew
jecxz
aaa
mov
decl
mov
popf
imul
mov
push
dec
js
lahf
stc
pop
fdivs
push
movsl
arpl
lret
aaa
ss
or
cli
mov
jae
adc
xor
inc
mov
es
push
mov
dec
add
ret
mov
xchg
in
dec
fwait
adc
adc
data16
cmc
jne
sarb
mov
dec
jo
mov
test
daa
mov
pop
ficomps
popa
mov
pop
inc
adc
fnstsw
xor
dec
jns
ljmp
enter
jg
dec
mov
cld
push
aaa
movsb
out
fisubl
and
mov
mov
pop
je
jns
mov
or
popf
ljmp
dec
cli
incl
sub
es
ds
xchg
shrl
leave
pusha
cmp
mov
aam
adc
incl
pop
mov
loopne
cmp
subb
xchg
xchg
test
fldz
mov
mov
cmp
stos
sbb
mov
in
dec
and
addr16
daa
in
gs
aad
xor
icebp
push
adc
mov
push
mov
lahf
push
push
fdivrs
push
add
leave
scas
outsb
sub
mov
sub
lods
xor
sub
xlat
xor
xchg
seta
mov
pop
pusha
push
mov
call
sub
sbb
sbb
outsl
dec
lcall
lock
fnstsw
add
js
cmp
mov
test
sbb
inc
xor
push
sbb
addr16
jae
or
nop
add
popf
in
popa
leave
cmp
sbb
cmp
jg
sbb
shll
push
push
jmp
add
pusha
xchg
ret
adc
imul
inc
cmpsl
sbb
mov
mov
mov
lods
aam
sub
lcall
xor
mov
inc
fiadds
in
push
inc
push
mov
call
sarl
pop
or
sub
dec
or
ret
dec
add
rorl
in
mov
xchg
lds
call
push
rcrb
filds
mov
xchg
test
inc
jle
push
sbb
and
cmpsb
jnp
nop
pop
imul
mov
rcl
inc
insb
pop
add
sahf
pusha
sti
nop
imul
push
mov
cmpsl
pushf
mov
inc
call
stc
push
add
call
lea
ja
rcr
pusha
neg
sar
sub
or
add
add
mov
and
mov
xor
xor
rol
neg
mov
jmp
pushl
push
lea
jne
call
lea
jne
jmp
push
pusha
inc
movb
push
push
push
adc
push
movw
pushf
pushf
pushl
ret
cld
and
fldenv
mov
sub
and
aas
movsb
aaa
imul
or
cmpsb
inc
jo
xor
push
jbe
dec
or
das
es
aas
mov
fisttpll
aas
mov
aaa
mov
fmul
inc
jb
xor
xchg
push
push
test
sub
sbb
jmp
popf
sbb
push
movsl
mov
mov
test
xor
xchg
repnz
test
into
jp
mov
jmp
xor
mov
icebp
fnsave
mov
pop
decb
jmp
pop
inc
sub
es
ljmp
cmpsl
xchg
and
dec
rorb
pop
inc
xchg
adc
test
add
dec
xlat
test
and
sub
cmpsl
in
int
cli
enter
outsl
daa
mov
adc
pop
fldl
add
scas
dec
loope
push
ja
sbb
pop
add
shll
loope
xchg
and
lea
int
inc
mov
xchg
mov
push
daa
inc
mov
xchg
jbe
into
mov
lods
lods
movsb
push
jge
or
clc
or
int
sub
call
cli
notl
fldenv
mov
cmpsb
ss
adc
test
xor
mov
mov
mov
out
clc
mov
cmp
fdivrl
xchg
and
mov
cs
int3
rcll
vmptrst
sbb
xchg
int
dec
sub
add
in
test
outsb
jns
mov
jecxz
aam
push
mov
mov
add
add
es
inc
jnp
fldcw
jo
jns
cmp
lds
jecxz
out
mov
add
add
test
shrd
pushf
movsbw
mov
aaa
lea
rcl
rcl
mov
bts
add
sub
bts
lea
rcl
daa
push
shld
mov
bts
push
btc
bsr
aas
push
neg
sub
pushf
mov
movsbw
pushl
lea
call
cmp
mov
lret
mov
fstps
pop
js
adc
xchg
jae
adc
ja
mov
pop
test
lahf
adc
pop
mov
leave
mov
sbb
shlb
xchg
mov
fs
push
sarl
jne
adc
push
or
xor
push
jmp
pop
fisttps
adc
pop
xchg
cmp
pop
repnz
xor
xor
sbb
nop
rcr
or
pop
out
dec
lods
pushf
inc
mov
jno
xchg
fsubl
addb
push
out
jmp
out
loope
add
movb
movl
movb
mov
pusha
pushf
pushl
ret
jb
or
es
inc
xlat
js
enter
cs
xor
inc
sbb
or
mov
lretw
pop
ss
inc
pop
adc
stc
mov
jl
sub
bnd
shll
xchg
mov
in
imul
pop
push
jne
dec
test
push
sbb
push
roll
mov
xchg
adc
mov
or
lock
out
pop
daa
nop
push
push
sub
mov
mov
out
pushf
sub
mov
lds
inc
sbb
adc
je
sbb
mov
shrb
inc
int3
popf
sbb
fst
and
pop
jne
push
lock
jle
mov
and
lcall
rclb
in
xchg
loopne
pusha
dec
xor
clc
mov
jne
inc
movd
cli
xchg
mov
or
push
popa
inc
cmp
jmp
lret
test
jae
xor
daa
push
sarl
and
fisttps
xrelease
call
mov
lret
or
xlat
das
insl
lods
xchg
jmp
mov
mov
or
sbbb
xor
jecxz
or
enter
in
inc
or
adc
in
jp
lret
pop
scas
jns
mov
or
sti
pop
dec
into
sahf
sbb
sahf
stos
rclb
jae
sbb
mov
xchg
leave
fcmovbe
sbb
adc
jmp
add
push
lea
jmp
scas
aad
mov
xor
fstpl
sti
out
hlt
xchg
fiaddl
gs
lret
pop
int
mov
mov
lods
mov
outsb
xchg
or
cmpsl
push
rcrb
inc
adc
cwtl
add
mov
adc
pop
mov
movsb
push
shr
jl
int
inc
les
aad
and
int
psubq
fisubrs
faddl
stc
and
cmp
sbbl
lock
push
addr16
push
ljmp
ror
xchg
cwtl
ror
pushf
lahf
mov
shl
mov
stc
push
xchg
movzbw
adc
clc
btc
mov
bt
sub
call
push
stc
btr
dec
mov
clc
pusha
sub
pushl
rep
not
movsbw
call
mov
out
es
xchg
in
jnp
test
push
sbb
and
shl
xchg
cltd
aad
dec
lods
add
shlb
mov
insl
inc
pop
add
das
daa
xchg
mov
dec
in
pop
mov
lods
rcll
xchg
xor
jge
dec
pop
ret
sub
dec
sub
xchg
ret
inc
mov
out
leave
cs
inc
inc
mov
sbb
add
divb
rcll
jnp
popf
sub
inc
fsts
xchg
cltd
ret
inc
pushf
pushf
push
lea
jmp
pusha
dec
mov
not
pushf
inc
movb
jmp
cmp
pushl
mov
lea
jb
push
clc
bt
cmc
cmp
movw
jmp
bt
xor
pushl
call
and
shll
popa
je
jecxz
wbinvd
sub
leave
lods
icebp
nop
les
mov
mov
and
mov
dec
popa
add
mov
xchg
cli
add
mov
inc
scas
sub
mov
jae,pn
movsb
dec
sbb
jp
cmp
data16
je
push
loop
xchg
scas
aad
sub
pop
add
dec
and
jo
sub
leave
out
out
pop
out
sbbb
mov
pusha
jmp
xchg
jecxz
rorb
repz
in
jb
sub
xchg
jle
xor
push
dec
or
inc
aaa
sbb
test
inc
cli
decl
mov
push
add
aad
push
add
mov
andb
leave
hlt
xor
mov
sbb
lods
clc
and
dec
sub
dec
ret
repz
cmpsl
sarb
popa
and
push
fadd
mov
xor
fcompl
push
xor
out
sub
ret
and
jo
imul
xchg
addl
daa
dec
gs
push
arpl
and
mov
pop
inc
cs
xlat
fisttpl
popf
les
jnp
add
shlb
mov
imul
sub
xlat
movsl
std
and
xor
lea
test
fstps
inc
dec
repnz
ss
jp
pop
test
cli
cltd
mov
cmpsl
stos
inc
sarl
xor
loope
icebp
je
or
inc
sub
inc
daa
in
loope
cwtl
bound
mul
inc
push
in
sbb
jecxz
mov
fstl
cli
sbb
je
pop
jp
lcall
or
xchg
mov
rolb
inc
fldenv
dec
daa
mov
or
fs
je
push
movb
adc
pushf
pushf
pusha
lea
jmp
mov
mov
aas
shll
es
movsl
cwtl
xchg
sub
pop
bnd
arpl
into
in
cmpsb
shlb
or
jp
pop
add
lods
stos
xchg
add
loop
mov
adc
cwtl
inc
lret
or
loope
mov
ds
or
std
xchg
ja
or
call
aaa
sbbb
stc
cmp
push
dec
sub
dec
xchg
pop
lods
inc
stos
push
mov
movb
call
imul
bt
call
mov
mov
ss
lods
add
ljmp
mov
inc
call
ds
sbb
pop
les
and
push
sub
loopne
int3
jne
xchg
sub
cmp
jbe
xor
push
mov
mov
mov
push
div
pop
cld
pop
dec
into
leave
push
add
pop
ljmp
jnp
push
iret
mov
or
or
aas
mov
insl
in
push
dec
dec
inc
inc
push
push
xor
cs
insb
add
or
adc
cli
pushl
jmp
lea
ja
jmp
stos
cmpsl
rcl
mov
loop
xchg
lods
into
nop
jge
iret
insl
int
sbb
lret
mov
fdivl
xchg
inc
daa
sub
lret
aas
push
ja
inc
popf
pop
mov
or
push
mov
test
gs
inc
shl
out
dec
pop
ret
sbb
inc
repz
fnstcw
mov
adc
in
inc
lock
rcl
and
mov
xor
push
sbb
xor
stos
andl
mov
mov
out
fiaddl
cmp
mov
xor
repz
gs
adc
push
sub
icebp
test
push
add
jno
cmpsb
inc
das
dec
shlb
mov
daa
imul
sbb
call
pop
push
dec
mov
shrb
mov
push
jle
mov
jp
xor
pushf
jo
push
mov
dec
pop
xchg
cvtps2pi
lcall
push
mov
sbb
adc
mov
pushf
cld
pop
xchg
movl
outsb
push
fsubrs
jns
mov
jp
and
inc
repnz
mov
push
add
mov
mov
mov
mov
lea
add
inc
hlt
mov
ja
sbb
xchg
cmp
std
xchg
fidivs
add
pop
and
popa
inc
mov
mov
jge
addb
or
popa
xor
push
leave
scas
das
outsb
mov
inc
fdivr
cltd
cmpsb
lret
sarb
dec
ljmp
aas
movsl
imul
cmc
cmp
pop
jae
mov
je
dec
xacquire
cltd
lret
push
push
or
pop
insb
push
inc
repnz
lea
cs
shlb
sub
mov
call
pusha
push
cmp
loop
movsl
ret
and
and
int3
or
cltd
jge
dec
and
aaa
out
and
leave
popf
cmpsl
sub
cmc
lods
or
push
jp
mov
es
insl
pop
lock
cmpsl
scas
jns
push
sub
jb
cltd
push
sbb
test
fdivrs
pop
push
dec
insb
inc
lds
lret
sbb
mov
push
or
int
aad
jo
pop
das
xchg
jle
mov
test
pop
xchg
jmp
pusha
lods
cld
mov
mov
lea
inc
and
call
add
cltd
dec
loop
xchg
push
add
add
es
dec
xchg
mov
call
xor
mov
outsb
stos
dec
mov
ret
es
or
dec
jo
inc
inc
pop
dec
xchg
mov
das
fimuls
cli
enter
cwtl
lock
jbe
int
push
dec
dec
or
jae
pop
clc
inc
std
ljmp
pop
xor
add
cmpsl
push
mov
mov
sbb
test
fs
mov
push
out
adc
sbb
cmpsl
sbb
fimull
shlb
or
and
aaa
lds
mov
xchg
int3
es
ljmp
jp
xor
mov
std
dec
cmp
fcmovne
mov
je
mov
jbe
popa
lahf
pop
push
testl
add
cmp
pop
repz
std
mov
and
fs
mov
in
mov
imul
mov
incl
xchg
or
pop
and
inc
nop
fwait
imul
mov
outsb
add
out
mov
sti
jmp
add
add
add
add
add
add
add
cmp
add
add
sub
add
push
add
outsl
cwtl
and
add
add
or
add
cmp
add
aad
cmp
add
add
sbbb
add
lret
cmp
or
add
jl
add
xchg
cmp
jns
cmp
inc
mov
add
add
add
add
lret
es
enter
loope
push
rcrb
sub
jg
and
mov
adc
ljmp
imul
test
mov
ljmp
sub
lret
repz
xchg
push
push
dec
loopne
pushf
sbb
std
xchg
aad
xchg
jle
and
movaps
stos
test
mov
cltd
or
sub
inc
dec
push
pop
dec
out
psubusw
mov
std
outsb
int3
into
mov
outsb
mov
daa
jo
dec
xor
andb
cltd
dec
cs
dec
enter
das
mov
aas
jo
inc
xor
das
push
push
in
ret
push
pop
xchg
les
pop
sub
mov
ja
ds
cltd
arpl
inc
icebp
fidivl
and
push
inc
xor
mov
shlb
mov
js
scas
cmp
or
addl
lret
es
pop
test
cmp
add
lock
shll
pushw
mov
push
mov
jnp
adc
ja
and
dec
leave
sarl
xchg
mov
notl
push
scas
inc
orb
jp
das
jp
cld
flds
mov
adc
addb
and
mov
dec
dec
jnp
and
lock
mov
mov
ljmp
mov
inc
cmp
dec
aam
xchg
daa
mov
shlb
jp
call
add
mov
repnz
pop
call
fmull
mov
push
push
in
push
iret
popa
xchg
mov
cmc
cmp
daa
pop
inc
syscall
test
or
dec
adc
pop
ja
mov
je
stos
mov
loope
test
aaa
sbb
mov
push
ljmp
pop
xchg
outsb
and
rorb
aas
mov
pop
and
mov
pushf
leave
lods
std
adc
mov
lods
xor
jmp
xchg
movsb
lret
sub
popa
push
pop
das
xor
out
inc
cmp
push
or
mov
leave
adc
sub
sbb
cs
xlat
push
push
cwtl
jae
cs
faddl
fxch
xchg
fsubrs
ret
daa
mov
repnz
outsb
daa
pusha
jae
and
lods
push
sub
or
test
test
and
fstps
addr16
out
inc
in
xor
outsb
push
loope
mov
sub
data16
icebp
add
add
mov
in
sub
cmpsl
push
xor
popa
out
dec
leave
push
or
lret
les
insb
sub
mov
lea
loope
or
mov
popa
sub
insl
push
cmp
pop
dec
inc
imul
push
xor
or
sub
std
push
jns
stc
in
xor
jne
call
push
fdivp
pop
cmpsb
repnz
and
clc
pop
sbb
test
or
jno
adc
lods
in
cmp
cwtl
aad
mov
call
cmp
lds
lds
and
inc
cmpsl
xor
pop
xchg
popa
jne
xor
out
jecxz
js
in
mov
gs
ret
fisttps
xor
cwtl
mov
cmp
and
cmp
add
test
jge
aad
inc
int
pushf
fcompl
pop
popf
int
int
push
cmpsl
rorl
push
mov
out
fisubrs
int3
add
xor
add
jmp
icebp
outsl
imul
or
notl
lea
sub
test
aas
movsl
cmp
pop
pop
and
jl
mov
sbb
dec
test
pop
in
inc
popl
xor
lods
cwtl
mul
jge
push
lcall
push
repz
jns
lods
push
icebp
mov
jbe
pop
out
sbbb
xor
jge
dec
loop
adc
mov
dec
lahf
push
cmp
leave
push
push
or
imul
bound
sbb
into
pop
pop
mov
test
mov
outsb
les
stc
lahf
lahf
popa
daa
leave
cmp
test
mov
in
xor
xor
gs
sbb
mov
xchg
mov
jno
and
out
xchg
and
mov
ss
test
dec
out
repnz
stos
lods
xchg
out
scas
lock
sub
fsts
jmp
aam
cmp
pop
mov
lea
mov
shll
push
push
outsb
mov
dec
xor
push
jg
push
jne
jle
add
shrb
leave
mov
pop
movsb
adc
cli
dec
push
cwtl
push
cmpsl
or
cmpsl
sahf
lds
cs
and
in
xchg
shll
pop
sub
xchg
repnz
mov
lods
sbb
push
xchg
mov
clc
mov
xor
jg
loopne
bound
cmp
sbb
cmc
xchg
fcmovnu
cmp
mov
loop
sub
and
cmp
sub
imul
call
mov
mov
ds
test
cmp
cmpsl
sbb
fidivl
int3
test
fisttpll
je
jno
gs
mov
ja
lds
enter
outsb
and
and
popf
or
sbb
test
mov
lret
and
mov
out
inc
shrl
insb
sub
jb,pn
jno
loopne
mov
xor
xor
sbbb
jg
outsb
jb
leave
test
lahf
jno
arpl
xchg
xor
mov
shr
test
add
add
das
jno
fadds
subl
lret
lock
xchg
addr16
mov
add
iret
xchg
pop
mov
jecxz
add
outsb
and
insl
or
imul
xor
loopne
mov
inc
inc
pop
dec
sub
clc
jmp
dec
test
lods
in
std
and
cltd
in
sub
fs
lods
scas
popa
clc
int3
mov
bound
cmpsl
xor
insb
ljmp
mov
outsb
nop
out
ljmp
imul
jge
dec
mov
inc
push
popf
xchg
inc
and
out
mov
out
sub
fsubrl
fnstenv
xchg
int
mov
mov
cwtl
or
push
enter
add
add
popf
fisubs
fldenv
icebp
xor
lods
adc
cwtl
jns
fdivl
popa
repnz
mov
jo
sub
or
mov
test
pop
rcrl
lods
lahf
dec
jmp
cmp
ret
cmp
mov
stos
jecxz
scas
pusha
std
dec
push
imulb
cwtl
ds
pop
mov
jmp
xor
test
dec
jg
mov
ficompl
pushf
addb
mov
or
jo
cmp
mov
push
imul
or
or
stc
nop
pop
dec
mov
pop
std
gs
ret
dec
or
gs
lock
mov
jge
pop
push
or
dec
mov
mov
xchg
scas
adc
cmp
loopne
ds
inc
xchg
jns
sbb
in
push
lods
je
cs
scas
ret
pushf
add
pop
imul
pop
out
das
dec
popa
mov
out
notl
jb
ja
jno
insl
add
push
jmp
mov
mov
sub
jl
sbbb
sub
cmp
sub
jg
outsl
and
sbb
push
cs
outsb
and
call
lods
dec
inc
insl
daa
dec
imul
mov
mov
sbb
add
insb
arpl
push
lods
push
arpl
cmp
faddl
addr16
out
lret
dec
sbb
repz
shll
pop
mov
and
mov
rcrl
sbb
test
test
adc
enter
or
add
xchg
adc
or
bound
cltd
sbb
add
filds
mov
add
ja
dec
fwait
cltd
dec
scas
sbb
aas
popa
sbb
sub
sub
popf
lock
cmp
sbb
xor
xor
xor
les
inc
cmpsl
inc
scas
mov
mov
imul
daa
jecxz
movsl
leave
jl
sub
pusha
fiaddl
pop
xchg
testb
push
mov
ja
nop
sub
arpl
addr16
pop
in
in
push
test
or
loope
sbb
jge
sahf
loopne
es
bound
jbe
inc
xchg
decb
sahf
icebp
mov
daa
mov
sub
movsb
ret
lret
pop
sbb
lahf
add
xlat
andb
and
add
pushf
insl
lcall
dec
mov
decl
dec
jecxz
movsb
jae
push
stc
mov
cwtl
adc
loop
push
dec
jg
sti
insl
stos
divl
push
and
cwtl
jno
arpl
outsb
dec
subl
mov
mov
sub
mov
xor
cmp
and
loope
insb
dec
sub
dec
outsb
js
mov
mov
mov
insb
or
repz
mov
lcall
xchg
outsl
mov
daa
enter
addr16
cmp
inc
add
push
iret
shl
xor
mov
push
push
jg
and
imul
faddp
bound
stc
test
rcl
insl
or
icebp
movsb
inc
xlat
xor
test
lods
pop
aad
dec
les
ret
orb
mov
out
gs
add
call
movsl
adc
jns
mov
out
popw
lret
push
scas
mov
dec
test
inc
fsubrs
mov
mov
push
sbb
stos
in
xchg
pop
inc
loopne
addr16
pusha
pop
mov
insl
pop
mov
lahf
xlat
mov
xlat
or
mov
xchg
mov
and
lret
arpl
adc
movsb
cltd
push
sub
loop
cmp
mov
in
jb
out
dec
shlb
aaa
inc
push
sbb
int
add
sub
outsb
mov
and
xor
sub
mov
sub
test
pop
movsb
sahf
imul
leave
mov
inc
bound
and
inc
push
dec
dec
sub
out
divb
sub
push
mov
shrl
jge
pushf
inc
or
cmpsl
mov
push
lds
shrl
inc
pop
fdivrl
repz
ds
and
mov
fidivrs
ret
mov
jne
mov
addr16
mov
cld
mov
jmp
cmp
daa
jecxz
sub
jb
jmp
xchg
out
fldt
lock
xchg
push
ja
in
out
push
dec
and
scas
and
add
dec
inc
sub
dec
in
leave
mov
or
ljmp
ds
jae
bound
orb
xor
pop
fsubrs
imul
jp
sub
outsl
sub
bound
imul
add
and
or
pop
loop
in
leavew
mov
mov
aas
mov
mov
hlt
popf
jge
sub
inc
push
or
jl
cmpsb
cmp
loopne
and
mov
or
gs
fs
sbb
xor
mov
push
dec
lahf
cmpb
jecxz
outsl
outsl
pop
pusha
mov
push
ja
scas
mov
pop
or
mov
outsb
neg
cmpsl
outsb
lret
pop
lahf
and
out
or
mov
xchg
leave
pusha
and
int3
test
js
dec
xchg
lret
call
xor
out
xchg
push
rclb
mov
loop
push
out
and
sub
jo
fs
add
int
scas
popa
out
pop
popa
imul
dec
jmp
sbb
pop
add
daa
dec
bound
cld
out
jnp
mov
outsb
outsl
push
adc
sarw
push
jae
push
icebp
mov
daa
inc
inc
push
popa
jns
cwtl
push
outsl
test
fnstsw
ds
gs
fdivrs
mov
jo
adc
dec
gs
mov
int3
adc
sbb
and
mov
or
neg
test
pop
jmp
adc
jbe
jnp
loop
mov
xor
and
pop
push
add
mov
sbb
scas
js
and
mov
jecxz
outsb
cmp
shl
ja
push
cmpb
gs
xchg
mov
fs
and
call
pop
xor
outsb
xchg
dec
xlat
or
sub
fcmovnu
jmp
xor
punpckhwd
cs
jmp
xchg
fisubrs
popf
mov
mov
or
xor
jno
push
or
xlat
mov
scas
sub
push
enter
jg
ss
bound
add
test
push
decl
mov
in
icebp
dec
xor
xor
add
push
les
nop
inc
inc
ret
jp
jae
mov
into
cltd
sub
dec
icebp
mov
pushl
and
pop
sub
jg
jmp
and
rolb
jp
jmp
cmp
jae
shrl
or
je
std
sbb
push
mov
jg
test
and
cld
imul
dec
inc
subb
pxor
inc
ljmp
dec
and
cmpsb
push
jno
or
movsb
sub
push
or
outsb
jne
push
out
cmp
in
mov
bound
rep
das
or
inc
cwtl
mov
push
mov
cmp
sub
push
aas
testb
adc
sbb
xorl
jb
push
mov
mov
jbe
lcall
and
jno
pusha
add
cmp
gs
cmpsl
xor
mov
pusha
out
mov
insb
gs
stos
push
cmpsl
fcmovu
jl
inc
outsb
xchg
mov
push
int3
mov
pop
jp
mov
jp
sbb
cs
pop
mov
xor
inc
outsl
pop
out
mov
dec
insl
add
popf
fistpl
sub
adc
es
adc
mov
xchg
arpl
lods
mov
and
xor
bound
fsts
in
sub
or
int
call
xor
popa
rorl
out
dec
aad
mov
cmc
mov
ret
ljmp
sbb
int3
cmc
pop
addl
mov
adc
mov
xor
fwait
loop
push
sbb
in
pop
pop
inc
jecxz
jb
cltd
add
test
jle
loope
out
mov
add
adc
js
or
mov
aad
and
add
sub
lods
push
lret
pop
sarl
test
sub
dec
int3
es
push
cmp
lcall
test
xor
sbb
insl
jmp
xchg
sahf
push
dec
cwtl
add
outsl
jno
and
pop
and
pushl
scas
fildll
mov
inc
sub
and
adc
add
or
mov
cs
xchg
popf
pop
push
call
int3
sub
jno
test
push
movsl
push
sub
mov
lahf
inc
add
loopne
xchg
sub
in
shrl
xchg
and
mov
or
scas
or
out
scas
dec
xor
bound
mov
insb
lea
jns
pop
mov
scas
push
xor
mov
sbb
sbb
sbb
push
mov
arpl
popa
and
adc
mov
dec
xlat
stos
icebp
lods
dec
fildll
xchg
les
lock
adc
pop
int3
push
or
cmp
mov
addr16
subl
push
shll
inc
push
pop
into
lahf
inc
adc
push
push
outsb
xor
and
fisttps
imul
sahf
mov
xor
inc
push
push
mov
lcall
fiaddl
sbb
jp
cwtl
push
push
dec
xor
dec
pop
lahf
loop
push
sub
mov
shlb
int3
add
repnz
jl
and
push
outsb
jmp
mov
xor
popa
cld
aam
test
mov
pusha
dec
xchg
mov
loop
mov
popa
test
mov
push
ret
int3
mov
mov
aas
or
mov
mov
or
jbe
ret
cmp
stc
jge
sbb
bound
movsb
dec
mov
repz
cmp
pop
xor
jnp
mov
je
mov
psrad
outsb
mov
outsl
sub
inc
mov
lds
add
dec
mov
inc
mov
out
rorb
clc
push
or
popa
mov
add
iret
xchg
xchg
mov
test
stc
cmp
inc
popf
fistl
mov
or
int3
xchg
mov
jae
imul
and
lock
sub
bound
sub
jne
insb
ljmp
in
xchg
push
jg
pop
add
mov
fnstsw
xor
push
scas
mov
mov
test
out
or
arpl
icebp
int3
gs
in
cmc
addb
testb
fs
movsl
imul
or
pusha
shll
popa
arpl
mov
pop
bound
shl
jmp
into
insl
fldt
movsb
mov
test
scas
add
xor
mov
dec
cmc
mov
in
jns
jno
sbb
enter
clc
arpl
lock
push
sub
and
pop
jle
mov
iret
push
sub
gs
rolb
fldenv
hlt
or
cmp
cld
dec
pop
lods
leave
bound
addr16
xchg
and
rclb
clc
push
push
jne
jg
jns
jns
bnd
or
arpl
mov
lock
ds
xchg
sbb
gs
aas
rorl
dec
and
outsb
lcall
ds
dec
jb
jle
xchg
push
mov
ljmp
inc
jne
jo
xor
outsb
jge
and
xchg
lock
dec
xchg
and
jl
xchg
push
push
xor
cltd
xor
ret
stc
lods
enter
mov
fcos
jo
dec
mov
adc
mov
xchg
movsb
jmp
jmp
aad
outsb
fnstcw
mov
popl
add
xchg
test
sub
lds
cwtl
add
cmc
aaa
bound
dec
out
jns
xor
lods
xor
bound
pop
xchg
inc
cmc
gs
sub
cmp
outsb
hlt
lahf
jno
arpl
cmp
add
lods
push
lahf
nop
stos
pushf
push
ja
sahf
lea
fmuls
mov
js
pushf
out
sub
sub
xlat
stos
mov
popa
shll
leave
or
sbb
jle
out
insl
imul
div
loopne
push
xlat
pop
or
or
push
or
jge
mov
repz
jno
lods
outsb
mov
bound
fsubs
jno
invd
out
popf
mov
adc
push
pop
or
dec
mov
mov
xor
lea
jle
outsl
jo
lcall
xor
hlt
pop
pop
mov
popa
gs
aaa
adc
sub
push
shll
scas
fdivrl
cmp
mov
lods
xor
fimull
xchg
fstpl
push
imul
adc
call
push
push
inc
sub
adc
pop
lods
push
ss
add
aas
dec
ret
mov
mov
pop
adc
jb
fwait
jmp
mov
xor
mov
cmc
inc
cmp
hlt
aad
rcll
test
mul
out
mov
xchg
add
cmpsb
imul
imul
jne
push
sub
xor
sub
inc
sbb
mov
fwait
mov
fprem
hlt
sub
jmp
fildll
lcall
sub
je
push
or
int3
sub
icebp
inc
mov
jle
cld
and
enter
and
cltd
in
xchg
add
pop
in
aad
pop
daa
push
pop
mov
mov
and
mov
sub
lret
lcall
inc
sub
pop
adc
pop
int3
mov
fsub
loopne
push
or
xchg
and
sub
js
movsl
pushf
or
aam
repz
int
mov
ret
mov
scas
push
out
and
in
sub
jne
insb
pop
xchg
icebp
test
cmp
aas
je
js
test
adc
cwtl
inc
lds
mov
test
sub
dec
stos
cmp
sbb
fcoms
out
xor
lret
jnp
cmc
enter
imul
or
pushl
cltd
adc
mov
xchg
pop
push
cs
lods
stos
sub
mov
mov
push
sub
push
int3
sbb
pop
lea
dec
mov
add
inc
cwtl
inc
mov
xchg
clc
rep
mov
lcall
xchg
scas
sub
fldt
push
fmuls
das
push
sub
inc
mov
sub
sbb
xchg
rcrl
adc
sub
outsl
shll
or
push
push
and
jmp
xchg
sub
pop
inc
inc
in
sub
mov
fisubrs
sbbb
je
mov
xor
cmp
and
mov
mov
das
lock
aas
clc
sub
ljmp
or
dec
fnstcw
jmp
je
mov
jg
aad
xor
daa
dec
add
rolb
pop
mov
inc
ret
sbb
jbe
sub
cli
pushf
jl
sub
lcall
pop
jmp
xor
adc
enter
ja
mov
cmp
pop
jl
sub
incl
mov
and
sbb
in
mov
lahf
cmp
mov
hlt
pop
jae
mov
mov
push
jmp
int3
sub
clc
mov
xchg
int
mov
mov
inc
jp
xchg
sub
jne
and
pushf
pop
loop
loopne
inc
sbb
or
fadd
sub
stc
sub
xchg
xor
pusha
rorb
mov
insb
lea
clc
pop
sub
jl
sub
add
push
icebp
and
stos
mov
sbb
insb
int
add
data16
sub
cmpsb
add
xchg
mov
in
shrl
sub
data16
mov
test
jns
and
add
adc
pop
inc
push
insl
popa
daa
mulb
add
cmp
lret
cmc
mov
sub
mov
in
fisubrs
sub
xor
jne
lods
rol
movsl
stc
sub
mov
test
sub
cltd
pop
mov
cmpsl
inc
dec
scas
sub
fimull
ds
mov
lods
fstpl
push
dec
and
and
clc
inc
cmp
mov
mov
push
inc
test
daa
add
fildll
mov
push
in
sub
fsubrl
sub
filds
jge
add
lods
push
fwait
push
cmpsl
sub
out
sub
mov
jecxz
adc
cmp
repz
lret
inc
imul
int
sub
push
fistpl
out
mov
sub
pop
pop
xor
dec
fsubr
lock
adc
or
jg
xchg
sub
ss
sub
pop
cmp
sub
mov
push
out
test
les
add
lock
into
jb
js
pop
and
inc
fsubrs
push
jmp
scas
sub
shrb
sub
jo
cmp
mov
push
fmuls
das
dec
shlb
movzwl
mov
lcall
jle
repz
decb
addr16
add
adc
mov
dec
xlat
cmpsl
mov
into
xor
repnz
nop
jns
dec
inc
out
sub
mov
scas
pusha
sub
fwait
test
out
sub
mov
adc
lcall
jp
xchg
imul
sub
repnz
jns
sub
pop
and
and
call
mov
adc
push
inc
jmp
pop
sub
sub
pop
cltd
mov
push
adc
iret
sub
push
push
mov
mov
dec
in
es
or
movsl
addr16
sub
aaa
mov
xor
repnz
jge
fldt
mov
cs
loope
sub
add
rorl
lods
and
adc
sub
xchg
ds
cmp
and
xor
and
popf
cmp
xchg
stos
add
sub
cmp
and
mov
pop
call
push
addr16
lea
mov
push
popa
sub
out
pop
out
ja
frstor
in
pushf
pop
insl
sub
xchg
add
les
lret
mov
dec
inc
sahf
outsb
stc
jl
mov
and
call
sti
sub
idivb
subb
hlt
fistl
pop
add
mov
push
les
inc
mov
push
push
inc
jbe
xor
lock
jge
adc
ljmp
sub
adc
and
in
je
lret
sbb
lock
mov
inc
pop
add
mov
inc
insl
pop
ret
xor
or
jne
and
inc
dec
and
repnz
shlb
and
out
ret
and
aaa
movsb
push
fwait
adc
das
sub
cmp
pop
or
out
push
scas
push
push
jl
fidivs
lret
pusha
daa
insb
jnp
xchg
jg
test
testl
bnd
ret
jae
mov
stos
mov
cmp
jge
int3
out
out
adc
sub
inc
hlt
divl
gs
gs
test
sub
mov
push
in
ret
inc
rolb
jmp
sub
cmpsl
mov
mov
dec
xor
adc
jne
scas
cld
aad
or
and
and
dec
inc
lods
pop
mov
cmpsl
outsb
xor
stc
pop
lock
mov
sub
decb
dec
push
sub
mov
subb
loopne
in
sub
add
pop
mov
pop
dec
stos
pop
sub
hlt
mov
add
adc
pusha
ss
addb
and
adc
and
ret
arpl
adc
call
xor
mov
and
adc
enter
aam
xor
jbe
push
cwtl
fcom
push
ret
jae
shll
jmp
jp
shlb
pop
jl
xchg
movsb
sub
sbb
andl
in
ret
sub
mov
sub
mov
xchg
ret
aaa
mov
sub
mov
xchg
ljmp
bound
arpl
stc
sub
add
cmpsb
adc
imulb
es
dec
pop
and
mov
adc
lahf
xchg
jns
sbb
mov
pop
aam
add
push
cmp
and
les
fwait
xchg
and
push
dec
cmp
add
mov
push
xlat
fnstenv
inc
ds
cmc
inc
test
out
and
and
inc
call
xchg
sub
inc
iret
ror
es
push
int3
mov
fnstenv
aam
gs
dec
sbb
dec
shr
js
fstl
mov
adc
in
push
fmull
popa
fldt
push
sub
ja
and
cmp
mov
shrl
fisubrl
xchg
mov
insl
inc
sub
das
sub
mov
push
es
xchg
shll
test
sbb
jo
mov
xchg
push
icebp
adc
mov
xchg
mov
in
pushf
and
rclb
fiadds
repnz
dec
das
add
add
fdiv
lds
test
cltd
addr16
bound
icebp
daa
mov
test
adc
aad
das
int
push
test
inc
bound
es
xchg
jge
push
adc
fldl2e
cmp
mov
sti
xor
enter
test
push
js
test
jmp
mov
sub
movsb
push
and
cmp
xchg
fwait
or
fwait
jo
imul
and
clc
push
pop
fmull
hlt
xor
jmp
lock
je
pop
cwtl
lret
push
push
shrl
test
bound
shll
inc
xorl
or
cmpsl
je
movsl
std
push
add
cmc
push
dec
cmc
sub
pop
ja
cltd
jbe
or
js
bound
mov
enter
mov
sarl
insl
xorl
sbb
mov
ljmp
mov
stos
ds
cmp
add
lahf
cmp
push
sti
ljmp
push
jge
pusha
jecxz
pop
add
xchg
mov
dec
mov
test
out
arpl
mov
shl
lret
push
js
out
arpl
jle
andl
mov
push
lea
mov
out
lods
push
test
cmpsl
bound
stos
dec
les
lcall
mov
lret
inc
inc
pop
addr16
push
xchg
ljmp
adc
sbb
repz
sti
ds
push
jne
pop
and
mov
push
test
xor
push
or
lahf
mov
jno
bound
sbb
sub
cltd
sbb
idivl
into
adc
icebp
cmpsl
fcom
les
pusha
std
bound
cmpsl
outsb
pushf
mov
negb
bound
and
outsb
std
popf
push
out
push
ljmp
inc
sbb
js
insb
xor
add
sub
mov
or
mov
insl
loopne
add
push
inc
cmp
sbb
xchg
sub
or
dec
mov
rorl
mov
and
cmp
push
cmc
push
aaa
mov
pop
cmpsb
mov
jnp
xchg
scas
mov
xor
addr16
ljmp
and
xor
add
xor
mov
xor
std
pop
ret
dec
insb
push
or
aam
lock
jbe
scas
fistl
jmp
sti
fmul
xor
or
pop
jns
stos
fidivs
cltd
mov
data16
mov
arpl
adc
nop
out
jns
and
xchg
mov
clc
paddw
jge
jno
push
pop
jg
shrb
dec
lea
pop
leave
aas
push
and
inc
cs
cld
loope
push
sub
mov
fisttpl
aam
shll
movsb
test
mov
push
popa
addr16
mov
inc
ja
mov
adc
sbb
fsubrp
pop
sti
shlb
push
out
into
shrl
popa
sub
jne
push
leave
cmp
fwait
addl
jns
sahf
and
lock
inc
int3
aas
and
push
jno
inc
mov
cmp
fisttpl
mov
imul
das
and
scas
jg
xor
cmp
jle
xor
and
xor
loop
xchg
cmpsl
subl
sub
stc
cs
push
outsl
mov
mov
gs
test
test
iret
push
and
inc
outsb
popa
jb
add
mov
jb
daa
jnp
mov
orl
push
ja
push
sub
inc
pop
scas
std
xor
cwtl
sahf
dec
xchg
push
fs
pop
dec
inc
xchg
xor
add
lea
pop
sub
mov
loopne
imul
in
mov
add
out
and
xchg
scas
jl
stc
inc
sbb
cs
fldt
fiadds
cmp
lods
fsubl
bound
cmp
lcall
inc
lret
jo
fwait
mov
lahf
fstp
jmp
add
or
nop
test
fs
or
or
pop
sub
dec
and
rclb
add
lods
dec
bound
inc
or
rorl
out
and
movl
cmp
inc
sub
ret
mov
cmp
frstor
outsb
mov
and
insb
mov
or
pop
jo
std
xchg
rorb
pop
mov
jae
cmp
stc
sbb
outsb
mov
add
addr16
mov
sbb
cwtl
pop
push
mov
mov
push
sahf
pop
out
sbb
sub
jg
daa
leave
cmpsl
je
enter
push
sub
bound
outsl
mov
leave
outsb
fiaddl
add
and
xchg
and
xchg
pop
notl
add
repz
sub
outsb
shr
inc
cmpb
xor
loop
or
dec
xor
or
ljmp
imul
addr16
mov
ja
mov
int
cmp
pop
lods
mov
aad
cltd
adc
pop
cmp
fldt
cmp
or
cmp
stc
sbb
sarb
mov
test
sarb
push
xchg
lods
jmp
aas
imul
xchg
and
push
and
sub
cmp
sub
push
cs
call
insb
mov
test
insl
lret
adc
mov
out
mov
gs
xchg
outsb
pop
sbb
ss
aad
orl
mov
sub
inc
jmp
loope
inc
insl
ds
bound
out
mov
mov
jmp
sub
test
cmpsb
out
dec
rcrl
pop
fistpl
dec
sub
ds
push
mov
jg
push
into
hlt
cmpsl
popa
add
push
jg
inc
movsb
push
dec
inc
adc
fildll
lret
xor
dec
pop
xchg
ret
xor
mov
xchg
scas
iret
test
lods
notl
push
xchg
arpl
sbb
push
lods
hlt
dec
daa
imul
test
cmpsl
bound
or
xchg
mov
leave
xchg
scas
xorl
jge
mov
adc
cmpsl
sub
mov
cli
sbb
lea
jne
shll
xchg
cmp
push
in
pop
ljmp
xchg
sub
push
dec
lods
fistps
mov
popa
out
jne
mov
cmp
cmp
push
fnstsw
fs
scas
jno
icebp
lods
test
lock
ret
pop
inc
in
xor
jge
hlt
arpl
icebp
bound
push
push
xchg
bound
and
adc
mov
fdivs
cwtl
gs
mov
inc
test
fdivl
xor
insl
push
jecxz
mov
jno
rorb
sbb
mov
aad
or
dec
mov
mov
loop
ds
les
cmp
movsb
sarb
or
pop
cmp
dec
sub
insl
push
pop
nop
daa
adc
cmp
and
into
into
mov
insl
inc
ja
xchg
inc
rclb
sub
push
and
mov
sub
inc
cltd
cli
cmc
mov
aaa
add
sub
icebp
outsb
cmpsl
jecxz
xchg
cmpsl
repz
inc
push
in
mov
rcrb
push
mov
loopne
and
out
xchg
push
jmp
cs
mov
or
das
cli
aaa
sub
pushf
mov
add
sbb
and
bound
mov
aas
xchg
shrl
inc
dec
inc
pop
sub
dec
mov
popf
out
aaa
outsb
add
mov
std
aad
or
fnsave
jns
or
outsb
jne
cmp
or
and
inc
fsubl
lds
pop
repz
mov
and
gs
sub
and
lcall
insl
imul
ret
mov
inc
and
pop
popf
dec
add
mov
out
and
and
adc
nop
inc
imul
push
add
loop
mov
mov
cmpsl
mov
push
xchg
cmp
daa
pop
outsl
push
outsb
sub
nop
xor
mov
jne
cltd
sub
outsb
cmp
stos
cmp
sbb
test
loope
cwtl
or
cmpsb
jno
xor
and
mov
adc
lock
cwtl
cmp
jno
xchg
xchg
jmp
out
push
call
and
mov
push
add
gs
in
loop
add
xchg
cmp
mov
sub
xchg
inc
dec
xchg
pop
ja
fdivrs
sub
test
mov
insb
into
and
xchg
subl
stos
cmc
sahf
outsb
je
test
add
and
dec
int3
pop
sub
dec
pop
mov
or
je
shrb
int
cmp
sub
jns
add
push
dec
xor
sub
jbe
pop
jns
ficoml
ret
mov
mov
movsb
xlat
inc
xor
mov
out
and
push
fldt
jp
xchg
stos
xchg
cwtl
and
insb
test
add
cmp
sub
mov
aad
push
add
ljmp
ret
ja
aaa
jmp
sub
inc
sbb
sub
mov
xchg
mov
loopne
call
sub
cwtl
xchg
and
or
inc
hlt
xchg
mov
pop
mov
int
mov
mov
mov
jp
incl
and
mov
xchg
scas
add
ljmp
loop,pt
mov
rorb
outsl
cmpsl
data16
sub
dec
jb
cmp
mov
test
mov
sahf
push
imul
sub
dec
jae
stos
in
sub
insl
lahf
sub
pop
pop
cmpsl
xchg
sub
stc
xor
lock
sub
sub
pop
sub
mov
mov
loope
jnp
sub
std
cltd
in
push
or
cmpsb
push
pop
sub
data16
sub
mov
dec
jb
jle
cmp
cmc
jae
popf
pop
int3
sub
pop
sahf
or
decl
sti
jnp
fildll
lods
cmpsl
and
or
pop
bswap
lds
mov
or
inc
mov
xchg
frstor
add
adc
and
out
xchg
out
sub
nop
stos
movsb
push
testb
inc
cmpb
enter
aaa
mov
mov
aas
arpl
fdivr
xchg
sub
mov
lods
cmp
xchg
mov
sbb
sub
icebp
out
movsb
sub
test
das
and
in
xor
xchg
js
mov
insb
sub
pop
pop
cmp
das
mov
xchg
pop
imull
aas
mov
std
push
filds
pop
in
lahf
xor
adc
clc
cmp
in
cmpsl
xchg
adc
sub
push
movsl
clc
jecxz
or
cmpsb
sub
cmp
mov
sub
sbb
cmp
std
and
out
jbe
mov
push
fsubrs
dec
cmp
je
int
adc
lds
jo
sub
bound
adc
jp
mov
sub
mov
push
sub
fistpl
push
mov
inc
push
sbb
inc
enter
pop
sub
sub
jle
cli
mov
xchg
daa
add
ja
cmp
mov
mov
adc
lods
sub
and
decb
dec
call
das
sbb
inc
subb
mov
lds
mov
ficoml
jg
pop
repnz
scas
cs
inc
sub
adc
mov
scas
mov
xchg
or
hlt
cwtl
daa
enter
sub
mov
insb
pop
sbb
sub
sbb
daa
sub
inc
aad
adc
xchg
sub
cmpsl
xchg
mov
or
pop
sub
imul
outsl
ljmp
xlat
push
inc
sub
or
out
dec
imul
mov
arpl
dec
jl
sub
divl
push
fidivl
dec
add
xor
stos
mov
push
inc
jmp
sub
cli
dec
imul
sbb
add
aam
mov
fildl
pop
fnstenv
fdivr
dec
into
dec
xchg
sub
aam
sub
xor
pop
xor
shrb
sub
pop
mov
sub
sub
in
sub
enter
sub
push
imul
inc
and
sar
out
mov
add
jle
cmp
push
mov
shrb
ja
cltd
sub
and
pop
in
cwtl
jge
mov
sub
add
negb
and
aad
push
inc
dec
xchg
js
sub
mov
cmpsl
and
out
decl
sub
sub
xchg
out
stc
sub
jo
mov
daa
jg
or
mov
sub
mov
leave
sti
sub
xchg
xchg
nop
hlt
sub
ds
sbb
insl
add
jmp
adc
insb
push
movb
jns
cs
shll
dec
icebp
inc
scas
pop
jbe
mov
push
xor
aad
lahf
lock
inc
sbb
mov
lds
js
inc
add
aaa
imul
sbb
shl
mov
mov
adc
lcall
or
imul
sub
mov
bt
lds
dec
test
aad
rcr
push
push
imul
jle
out
xchg
pusha
push
in
push
add
sub
insb
mov
into
stc
push
sub
xchg
xorl
and
adc
int3
cmpsl
cmp
int
adc
mov
sub
add
push
sub
rcrb
mov
or
mov
xor
lods
jg
sub
mov
imul
mov
sub
sbb
mov
sub
into
arpl
cmp
pop
divl
jno
jmp
dec
in
popa
sub
scas
dec
xor
and
aad
sub
jg
cli
popf
int
pop
xchg
add
pop
test
andl
jns
out
mov
cwtl
xor
imulb
pop
xchg
fcoml
stos
and
inc
mov
mov
pop
jb
or
or
out
xchg
lock
cmp
sub
mov
mov
ljmp
lods
cmp
mov
sub
mov
jecxz
inc
and
push
adc
cmpsl
lods
pop
jmp
sub
sbb
cld
ljmp
xchg
jo
int3
scas
outsl
sub
rorb
aad
adc
inc
insl
lods
xchg
sub
inc
inc
enter
push
jecxz
arpl
xchg
sub
out
clc
pop
dec
mov
jae
jne
es
fs
sub
clc
push
add
pusha
xlat
jp
mov
push
stos
and
hlt
dec
pop
or
mov
push
iret
inc
in
insb
sub
jle
loope
sub
pop
notb
subb
aad
mov
cmc
icebp
jns
in
xchg
scas
pop
ss
adc
arpl
into
jge
cmpsb
inc
gs
inc
dec
cld
xlat
sub
lcall
jno
push
data16
sbb
jecxz
cli
adc
daa
test
sub
fisttps
and
or
sbb
int3
inc
mov
sub
mov
cld
sahf
lahf
jo
add
mov
sbb
xor
sub
loope
pop
mov
sub
or
and
test
pop
out
dec
sub
iret
sbbb
mov
lahf
icebp
stos
xchg
xchg
sub
sub
xor
js
cmp
cld
fcoms
imul
fldl
movsl
sub
dec
rcr
sbb
or
mov
pop
add
fiadds
sbb
lds
jnp
leave
cmpsb
stc
out
or
inc
and
bound
sub
mov
das
es
inc
popl
mov
sarb
fcoml
xor
mov
push
and
sbb
and
sarl
test
cmp
mov
aam
out
jge
aad
or
mov
mov
xchg
addr16
fwait
aaa
xor
sub
inc
xchg
jb
sub
sbb
push
test
mov
stc
sbb
lret
cmp
test
repz
push
mov
fs
sub
lret
fisubrs
mov
aaa
inc
rcl
push
daa
div
fidivl
fildll
popf
pusha
xor
mov
sarb
adc
mov
sub
scas
xor
xchg
jge
clc
std
xchg
sbb
mov
mov
push
or
and
xchg
das
mov
mov
popa
into
or
pop
push
inc
xchg
sub
test
adc
pop
popf
pop
mov
mov
stos
bound
sub
jg
repz
pop
popa
cwtl
fildll
mov
dec
and
cs
repz
sub
loop
push
inc
sub
gs
cltd
in
daa
insl
add
jecxz
insb
lods
stos
mov
jo
bound
mov
mov
lods
daa
repnz
jne
cmp
lods
sub
lahf
gs
xor
sbb
sahf
aad
sub
sub
sub
sbb
ds
xor
pushw
mov
nop
icebp
fcmovnbe
test
sub
lret
push
sub
lds
sub
lods
dec
jecxz
loope
push
pop
rorl
insb
bound
or
pop
sub
shrb
test
mov
scas
xchg
xchg
lret
mov
sub
and
enter
add
iret
and
push
fidivrs
hlt
mov
shlb
mov
sub
ret
out
ljmp
push
and
out
and
shlb
push
bound
sub
test
test
jp
sahf
sahf
sub
rcll
sub
inc
mov
pop
sub
test
pop
clc
sub
jnp,pn
push
sub
les
jb
or
or
imul
in
fs
setle
lds
mov
or
lahf
mov
inc
mov
or
loop
fnsave
xchg
push
sub
lahf
mov
fwait
aam
jnp
sub
and
das
sub
hlt
push
cmpsb
js
sub
lods
or
insb
mov
nop
roll
inc
jmp
aas
cltd
sub
cltd
arpl
in
inc
sub
lods
pop
and
jle
mov
pusha
out
add
jne
add
jg
rcl
push
adc
imulb
mov
ss
cltd
les
jge
pop
mov
in
sub
loope
popf
and
xor
into
cmp
sub
daa
pushf
mov
xchg
insl
mov
jne
jl
loopne
sahf
fisubrl
cwtl
sahf
ret
lret
jne
xchg
loop
sbb
and
push
int
pop
jne
roll
adc
out
and
loop
imul
aaa
adc
adc
and
lss
scas
inc
sub
mov
iret
pop
and
jecxz
lods
mov
aas
xlat
adc
pop
cmp
push
aad
insl
sub
ret
jo
pop
mov
kmovb
dec
pop
jnp
sub
loopne
jne
sub
data16
sub
es
mov
sub
sbb
int3
dec
sub
xor
aas
push
sub
ljmp
adc
and
jnp
adc
sub
add
mov
iret
in
adc
inc
sub
mov
into
sub
xchg
and
loopne
fwait
mov
ror
outsl
mov
mov
jae
out
call
xchg
inc
fs
lea
fdivs
jg
sub
lds
std
loop
inc
in
int
and
lock
shll
pop
imul
dec
clc
jns
outsb
test
repz
icebp
and
sbb
sub
add
or
addr16
repz
fdivr
pop
xchg
pop
shrl
sub
test
mov
ljmp
pop
lods
sub
fsts
pop
mov
mov
push
scas
xchg
mov
jecxz
dec
xchg
jmp
xchg
cs
pop
out
or
pop
push
add
pop
xor
negb
ljmp
bound
xor
and
imul
test
in
lret
mov
pusha
adc
sub
clc
add
inc
sub
hlt
adc
sub
jae
inc
lret
sub
rcr
subl
sub
cmp
in
out
aad
xchg
or
dec
cli
scas
je
pop
arpl
mov
mov
sub
test
sub
aaa
xchg
aam
jne
and
mov
shl
lahf
cli
dec
out
mov
cmc
xchg
fs
mov
std
test
hlt
cmp
sub
fstpl
mov
mov
outsl
jno
xchg
jo
jecxz
dec
pusha
sub
cmpsl
fldt
sub
insl
mov
push
and
repz
mov
in
les
out
jp
mov
xor
cmp
and
dec
pop
arpl
dec
mov
fldt
push
in
aad
jmp
push
fwait
push
xchg
les
adc
xchg
pusha
icebp
mov
inc
mov
pop
mov
aam
sub
pop
mov
mov
dec
cmpsl
and
sub
test
lock
sbb
daa
jo
enter
mov
outsl
cld
jle
das
and
pop
addr16
daa
add
daa
sbb
ja
int3
idiv
test
rolb
mov
lahf
enter
mov
sbb
and
lcall
out
mov
test
cld
mov
jne
mov
sub
lret
push
sub
lods
cwtl
jno
add
fldcw
mov
or
out
aad
sbb
sub
mov
dec
xor
sub
ds
xchg
lret
into
daa
adc
loop
adc
aad
ja
sub
scas
pusha
and
sub
div
push
and
mov
stos
push
sub
out
lcall
cltd
popa
int
sub
gs
movsb
and
shll
aas
adcl
sub
bnd
mov
cmp
repz
aad
or
mov
aas
cwtl
in
cmpsb
mov
inc
mov
mov
adc
pop
dec
sub
sub
rol
repnz
es
mov
xchg
mov
aam
dec
mov
and
push
aad
jl
and
gs
movsb
cmp
or
jnp
pop
out
in
fldl
ja
sub
inc
pop
jnp
sub
repz
in
sub
push
insl
mov
xchg
movsb
sub
pop
push
ljmp
mov
dec
xorb
or
cs
mov
lock
fwait
pop
sub
jne
out
mov
sub
loopne
das
into
pop
sti
nop
iret
je
jl
mov
xchg
sub
leave
inc
inc
mov
xchg
push
sarb
mov
sub
ret
insl
adc
and
xchg
and
push
sub
fwait
pushf
or
inc
sub
xor
mov
or
sti
pop
sahf
into
xchg
sub
test
in
xchg
fdivl
faddl
data16
and
fwait
adc
lods
shlb
mov
andb
sbb
sub
jge
sbb
sub
cmp
insb
les
pushf
mov
sub
mov
xchg
xor
sub
jle
adc
aad
or
mov
ret
pushw
insl
sub
out
mov
push
movsl
daa
and
int
loope
mov
fstl
loop
imulb
dec
mov
add
inc
mov
pop
push
hlt
out
sub
or
imul
jle
push
mov
test
sub
dec
inc
loop
icebp
scas
xlat
sub
test
jp
imul
cli
mov
dec
push
shrl
hlt
sbb
push
imul
psubd
dec
dec
mulb
push
push
jle
cwtl
add
fmul
dec
lods
cmpsl
sub
outsl
std
iret
fsubrs
push
nop
and
enter
out
add
mov
ja
lock
jmp
cwtl
lcall
sub
pop
stos
and
cli
inc
xchg
or
test
sub
mov
cmpsl
sub
cs
mov
faddl
push
imul
push
movsl
sub
das
mov
jns
xchg
addr16
test
jnp
sub
lods
adc
es
icebp
dec
cmpsb
dec
in
add
sub
ljmp
dec
push
loopne
sub
sub
fdivs
sbb
rclb
push
sub
jne
cmpsl
push
cmp
mov
sub
movsb
dec
les
pop
mov
adc
imul
stos
jmp
jne
push
imul
data16
inc
jmp
lods
je
cld
sub
mov
sahf
scas
not
push
sub
popa
xchg
sub
add
clc
sub
fdivrs
sub
movsb
mov
inc
cmp
outsb
and
add
dec
sbb
out
and
add
scas
sub
icebp
rcll
lods
popa
sbb
cmp
mov
scas
sub
sbb
mov
int
dec
ja
out
imul
in
sbb
xchg
adc
daa
adcl
andb
mov
and
mov
lret
arpl
stc
xor
cmp
jecxz
cld
out
in
dec
mov
adc
nop
mov
insl
sub
jge
lds
fcompl
mov
shrl
sbb
pop
lods
xchg
outsb
idiv
inc
mov
daa
popa
int3
lcall
mov
outsl
ret
push
loope
mov
sahf
push
jne
inc
pop
es
mov
lds
cli
dec
rcrl
mov
fsubs
sbb
movsl
mov
insl
dec
inc
les
mov
out
cld
or
mov
fisttpl
rorb
ficomps
dec
pop
bound
jge
adc
gs
jg
adc
mov
mov
jg
mov
mov
sti
hlt
fisubs
stos
daa
aam
pop
bound
mov
int
inc
cltd
clc
cmp
adc
or
xchg
xor
push
add
cmpl
sahf
call
push
push
scas
fs
push
push
jne
bound
sahf
insl
add
movsl
inc
or
inc
or
pop
push
cs
mov
fistpll
xchg
mov
or
or
and
mov
leave
jg
sub
lret
sub
outsl
es
bound
imul
insl
cmc
ret
les
ds
and
fsubrs
lea
stos
ffree
cmp
cmp
cmp
mov
icebp
push
pushf
and
arpl
popa
test
pop
popf
xchg
add
mov
jmp
cmc
dec
je
and
pop
mov
into
test
mov
push
or
jmp
mov
negl
and
mov
push
cmc
push
outsb
js
and
arpl
push
pop
in
push
aad
jns
stos
sub
inc
cltd
test
int3
inc
mov
movsb
clc
popf
cmp
fisubl
lock
fidivrl
dec
stos
xor
jp
jo
mov
in
addr16
icebp
inc
mov
cmpsl
not
fcmovnb
fnsave
push
jge
mov
ret
subb
jle
jo
push
push
imull
mov
fdivl
int3
xchg
sbb
jmp
and
das
popa
mov
push
out
cmc
bound
jne
pusha
mov
je
aas
add
into
xchg
mov
mov
pushf
into
mov
mov
push
clc
adc
mov
push
iret
ret
jp
rolb
pop
mov
push
flds
jbe
in
rol
call
clc
movsb
inc
jecxz
and
loope
mov
push
add
aad
adc
aam
and
popf
cmpsb
push
lea
adc
test
xchg
ret
leave
inc
daa
add
js
pop
je
pop
ja
push
ljmp
enter
jge
or
dec
jb
outsb
lods
and
push
repz
cmp
sub
gs
adcl
test
jbe
andl
or
xor
xor
icebp
add
pushf
pop
cmp
outsb
fwait
lds
bound
jbe
push
jns
or
dec
cwtl
cmp
sub
cs
jno
int
enter
push
push
cmp
jle
and
pop
into
inc
imul
ss
pop
mov
fwait
mov
push
add
fistl
bound
inc
lahf
add
imul
and
arpl
popf
fistpl
push
ds
sub
and
push
mov
mov
cwtl
insl
outsl
jecxz
mov
out
pop
lcall
jo
mov
adc
add
mov
jecxz
decl
outsb
sub
jno
adc
scas
aad
lahf
ljmp
es
popa
push
mov
imul
sbb
pop
sub
jae
popf
dec
nop
sub
jbe
ficompl
gs
push
push
pop
xchg
push
and
sub
push
repnz
lods
or
clc
mov
fcoms
popa
adc
xor
daa
leave
clc
dec
es
push
sbbl
into
mov
cs
mov
test
mov
lods
lcall
adc
sub
ja
sbb
daa
cmc
xor
dec
leave
push
popa
xchg
in
int
bound
push
outsl
shl
es
add
or
dec
adc
lret
iret
scas
pop
xor
add
inc
les
aas
mov
mov
mov
sbb
push
push
push
sbb
sbb
in
bound
imul
movsb
jmp
shr
mov
and
push
jl
jnp
out
aad
xlat
adc
iret
or
leave
add
push
pop
sbb
cli
sbb
test
add
std
push
ja
xor
orl
pop
movsb
dec
bound
sbb
inc
sub
outsb
shll
sbb
cmpsl
and
jg
jl
xor
gs
jb
fisubrl
fstps
insl
daa
imul
lcall
dec
shlb
lea
loopne
outsb
push
rcrb
jnp
lock
xchg
std
bound
mov
movsl
mov
push
pop
subl
and
cmp
imul
test
sub
inc
testb
jo
xor
repnz
out
dec
push
jmp
inc
jmp
sbb
pop
push
outsb
cs
mov
shrl
dec
les
dec
push
xor
fwait
add
and
inc
xchg
inc
or
outsb
jb
and
pop
iret
mov
rolb
dec
ss
xor
dec
test
jle
std
xchg
adc
aas
clc
imul
imul
inc
call
movsl
or
testb
jg
mov
pop
insl
and
lea
xchg
cld
dec
js
js
cmp
ret
cmp
test
mov
cld
in
mov
bound
pop
fiadds
inc
popf
cli
push
iret
sub
int3
adc
jne
leave
cwtl
mov
rclb
dec
shll
cwtl
adcb
test
outsb
jns
mov
ret
test
pop
rcll
add
hlt
push
sub
cmpl
add
adc
push
in
stos
rcrl
mov
dec
add
push
mov
ja
dec
cmp
dec
jg
cs
test
jge
test
adc
dec
or
aaa
jno
dec
cmp
bound
xlat
loopne
in
jmp
xor
ret
jns
pop
dec
bound
sbb
xchg
cwtl
cmp
pop
int3
lods
mov
push
and
dec
sub
push
dec
std
mov
jmp
stc
les
add
jae
emms
xor
int3
sub
scas
cld
flds
xor
aaa
out
sub
into
jns
mov
lods
sub
pusha
jno
call
add
cltd
fnstenv
or
shlb
mov
pop
inc
ret
and
sub
ret
lock
sub
xchg
mov
push
pop
adc
aad
test
xchg
push
stos
sub
out
add
sub
pop
decb
dec
fsub
adc
in
lcall
push
fnstenv
xlat
cmp
push
jge
push
sbb
movb
cmp
in
fcompl
xchg
mov
xor
xchg
mov
imul
or
inc
in
arpl
xor
cmpsb
xor
out
and
jmp
addr16
test
sub
or
icebp
scas
and
aaa
outsb
mov
out
lret
ret
pop
xor
pop
in
jp,pn
jnp
outsb
mov
push
das
sub
jg
or
sub
push
lret
sub
xor
sarl
sub
fsubs
roll
push
push
movsl
pop
repz
loopne
stc
aas
sub
popf
add
pop
xor
adc
aaa
mov
les
jne
and
imul
out
inc
jne
adc
sub
mov
pop
sbb
into
adc
mov
sub
sar
or
mov
roll
jnp
sub
movsl
jecxz
aad
cmp
xor
insb
lods
or
cmp
adc
push
mov
sbb
aam
sub
adc
imulb
cmc
inc
loop
cmp
inc
sti
stos
lret
mov
jl
xor
loopne
shrb
inc
icebp
sub
push
pop
insl
outsl
iret
daa
xchg
xchg
sub
aam
in
sub
cmp
push
pop
repnz
sub
cmpsl
lea
adc
push
or
cmp
sbb
inc
xchg
dec
jae
jl
dec
sub
xchg
pop
test
loopne
mov
fidivs
pop
insl
cld
sub
dec
add
sub
popl
mov
sub
sbb
dec
and
adc
fwait
scas
js
adc
mov
xchg
popf
sub
push
das
adc
push
fistps
lds
sbb
cmp
es
sub
nop
insb
dec
lds
icebp
push
cmpsb
adc
ficompl
test
aad
xchg
mov
cmp
sub
cmc
nop
mov
and
dec
rol
pop
pop
and
push
dec
inc
mov
sub
std
jle
jnp
cmp
sub
push
and
aad
ret
mov
cs
ficoms
andl
sub
bsr
xchg
enter
lahf
sub
xlat
push
shll
pop
mov
xor
mov
and
add
push
test
jnp
dec
mov
int
int3
pop
mov
cld
sub
out
sarl
gs
adc
cmp
lods
dec
filds
jbe
in
ret
pcmpeqb
and
mov
or
lods
xlat
add
lahf
mov
sub
jbe
rcrl
add
mov
loopne
xchg
jmp
sub
aad
bound
push
push
push
jp
sub
mov
fiaddl
insb
leave
lods
pop
cltd
mov
cmp
xor
mov
pop
sti
clc
pop
pop
push
pusha
cmp
bound
mov
cmp
inc
icebp
or
bound
rclb
mov
jno
cmp
inc
insl
cwtl
idiv
loope
in
test
scas
inc
and
mov
outsl
bound
sub
inc
mov
loope
int3
pop
jns
xchg
ljmp
pop
inc
mov
fstpt
out
inc
and
and
mov
jge
add
shlb
push
dec
add
lahf
fwait
out
jne
fistpl
sarb
cmp
arpl
jne
fsubrs
out
xchg
enter
push
and
add
sahf
imul
mov
sbb
mov
cmc
or
cli
bound
push
xchg
cmp
lods
mov
adc
cmc
sub
mov
mov
outsb
mov
inc
lret
sub
bound
push
test
test
add
add
adc
lods
aam
mov
xor
out
and
ja
and
mov
and
scas
push
lahf
cs
mov
jno
std
pop
es
mov
icebp
inc
or
push
mov
mov
push
pop
cli
bound
jae
mov
lods
clc
mov
sbb
mov
xacquire
pop
gs
leave
xchg
xchg
popf
out
lods
imul
addr16
jmp
jl
sub
pop
imull
inc
or
insl
jnp
cmp
out
mov
cmpsl
dec
xchg
push
sbb
sub
push
orb
nop
cmp
arpl
sub
dec
xchg
ljmp
push
cli
call
popf
adc
inc
push
lea
jg
pop
mov
push
les
xchg
int
in
cmpsb
loop
sbb
ss
cltd
jmp
fisubrl
cli
and
xchg
repz
scas
jl
mov
leave
fstpl
dec
inc
call
jo
lock
jne
jno
cmp
andl
ljmp
bound
push
fwait
push
pop
repnz
adc
in
and
jge
push
bound
repnz
jnp
in
jb
dec
pop
imul
xchg
icebp
sub
decl
popa
insb
ret
pop
add
movsb
out
das
mov
mov
aad
test
ret
pop
sub
adc
int
or
jbe
pop
or
ficomps
dec
dec
mov
ret
outsl
bound
ljmp
ss
mov
mov
push
xchg
xor
icebp
adc
mov
std
ret
add
std
push
xor
popf
or
xchg
repz
jge
and
lea
sbb
xchg
popa
push
mov
xchg
fists
in
push
pop
repz
fwait
jne
or
cmp
pop
cmp
push
addl
add
leave
or
fsubrs
xchg
xchg
adc
cmp
pop
rolb
sub
in
lds
lods
or
cmpb
cmp
add
cmpsb
iret
dec
popa
push
loope
fsubrl
xchg
pop
sub
lds
pop
sub
or
js
pusha
sbbl
mov
xor
lods
push
orb
test
fidivs
mov
push
in
clc
ja
cmp
lahf
or
inc
ljmp
lcall
dec
test
xor
cltd
arpl
or
cmp
arpl
add
aam
stos
stos
ja
pop
stos
mov
mov
lock
xchg
loopne,pt
popf
int3
scas
repz
lahf
and
cmp
xor
lea
test
pusha
imul
sbb
xchg
xchg
gs
inc
js
popa
push
ret
aam
iret
cmp
fdivrl
pop
add
repz
fidivs
ret
push
out
mov
cltd
scas
bound
test
scas
push
stos
inc
fidivrs
jae
mov
addl
inc
pop
xchg
cmpsl
sub
or
sbb
push
mov
int
ret
insl
leave
adc
add
in
mov
xor
push
mov
addr16
xchg
lods
cld
mull
cmp
mov
popa
add
test
arpl
je
push
mov
jne
adc
xchg
inc
mov
sub
cmp
loope
push
adc
push
gs
bound
nop
sbb
cmp
outsb
mov
leave
jb
test
cmp
adc
xchg
jmp
sub
jge
jg
push
cmp
jle
jle
outsl
inc
and
and
fbstp
xchg
xchg
mov
dec
jbe
subl
sbb
addr16
or
lods
inc
lods
and
call
bound
sub
scas
cmpsb
leave
orb
bound
and
and
punpckhwd
shll
add
dec
jae
aad
adc
inc
jmp
mov
or
xchg
cmp
pop
ja
and
and
bound
std
and
xchg
test
mov
xor
fucom
dec
movsl
pop
cltd
sub
adc
xchg
sbb
mov
xor
push
andb
fsubrp
push
loop
sub
xchg
sub
daa
or
cmp
ficomps
sbb
loop
mov
mov
or
ret
scas
shl
xor
xchg
inc
push
jge
push
adc
sbbb
mov
shll
negb
push
and
fisttpl
or
or
mov
movl
popa
out
ss
pop
outsb
fistpll
rcrb
ja
jne
test
dec
cmp
shlb
pop
lret
pop
add
cs
push
inc
cli
mov
xchg
and
lret
sub
dec
push
insb
pop
inc
pusha
add
out
jbe
rcl
jmp
mov
sub
pop
push
or
sub
std
movl
movsb
mov
push
xor
cs
mov
mov
stc
mov
mov
pop
jge
or
jmp
mov
cmc
popf
xor
ja
xchg
xor
bound
scas
sbb
rcrl
subb
xor
push
leave
inc
out
out
xor
mov
ret
push
push
mov
inc
insl
fisttpl
scas
pop
loop
mov
adc
aad
cmp
push
cwtl
xchg
adc
push
rorb
add
stos
mov
bound
mov
cs
push
ljmp
or
xchg
mov
pop
mov
push
fisttps
cmpsl
dec
or
xor
bound
insl
xchg
adc
scas
mov
bound
push
and
pop
mov
push
outsb
xchg
dec
sbb
dec
mov
dec
insl
sub
test
cmp
mov
into
mov
add
cmpsb
adc
dec
push
ss
lods
rol
xor
fs
cmc
xchg
in
add
loopne
adc
test
mov
mov
mov
adc
cld
imul
lcall
add
push
fsubs
lds
or
mov
mov
cmp
sahf
jno
lock
mov
hlt
mov
inc
dec
stos
dec
rorb
notb
push
cmp
dec
sbb
cs
loopne
and
jecxz
cs
xchg
sbb
test
mov
jne
fmul
or
rcrb
mov
dec
mov
inc
outsb
shlb
out
push
fdivrs
ffreep
jge
mov
push
dec
add
lds
scas
mov
pop
mov
jne
jecxz
ret
mov
je
outsl
insl
dec
sahf
aaa
lcall
add
les
movsl
push
xchg
gs
mov
push
mov
add
push
pop
in
adc
mov
test
cmp
mov
adc
xor
mov
test
add
xor
js
inc
jo
roll
push
jmp
jg
or
popa
int
pop
jae
fdivrs
ret
push
rcrl
sub
lods
lahf
push
pop
cmpsl
or
icebp
dec
adc
fwait
mov
arpl
adc
bound
sbb
mov
xchg
out
sub
dec
ret
call
mov
pop
out
inc
popf
cmp
arpl
gs
push
sub
orl
or
push
mov
dec
adc
pop
ds
bound
dec
xchg
or
pushf
leave
fidivs
jne
add
loop
lock
pop
pop
mov
cmp
daa
cmc
mov
bound
cmp
xor
ja
pop
ds
sub
loope
loope
int
lcall
add
imul
jge
sar
cmp
lds
ja
sub
aad
rolb
mov
push
mov
dec
popl
cmpsl
popa
xchg
lods
lods
mov
xchg
cmp
push
pop
bound
stos
mov
and
lods
mov
adc
push
rclb
adc
das
mov
out
cmp
xor
push
dec
out
add
ret
add
scas
cmp
sub
sahf
enter
adc
test
insb
aam
daa
cmpsl
xchg
lret
adc
add
arpl
lahf
imul
pop
lea
mov
push
test
out
inc
out
mov
jae
pusha
cmc
cs
std
pop
cli
stos
cltd
outsb
sbb
jns
popf
call
mov
stos
out
negl
xor
arpl
xor
add
cmp
pop
mov
cwtl
fstpt
and
add
stos
sub
mul
test
push
fchs
add
or
xlat
push
aad
cmpsl
insl
mull
notl
gs
outsb
leave
jl
adc
js
clc
dec
jb
lods
inc
pop
mov
dec
cmc
xchg
cmpsl
pop
mov
push
jb
in
dec
shl
jne
mov
jo
je
orl
hlt
pop
stos
ja,pn
gs
movsb
jl
js
dec
inc
std
imul
dec
insb
into
arpl
pop
mov
jne
bound
mov
out
sub
lock
adc
mov
cmpsb
mov
push
cs
cmp
lahf
adc
cld
sbb
mov
ss
lret
sub
sarb
mov
in
add
test
pop
dec
push
push
fildll
fldt
jecxz
repz
dec
int3
push
test
decb
and
test
aaa
xor
push
stos
dec
mov
daa
mov
mov
sub
cs
popf
leave
xor
mov
movsb
out
jbe
dec
outsb
gs
popf
jp
popf
mov
sub
push
jae
pop
lcall
pop
out
call
jmp
mov
mov
addr16
scas
iret
nop
push
jae
stos
or
fisubrl
in
sub
jnp
movsb
sahf
xchg
int
gs
mov
dec
cwtl
les
cmp
int
or
adc
xchg
std
sarb
lret
lods
add
mov
cmp
scas
arpl
stos
inc
mov
pushf
mov
ja
sub
push
pop
js
int
jmp
aad
push
addr16
dec
shlb
mov
into
das
nop
pop
adc
sarl
scas
adc
loopne
or
loop
cmp
inc
call
ficoml
lods
push
and
lods
mov
callw
inc
mov
sbb
sub
sub
sahf
adc
jle
in
rolb
addr16
xchg
inc
dec
xor
and
adc
loopne
gs
mov
pop
rorb
push
ret
mov
insl
cmp
test
and
inc
enter
mov
bound
fs
add
idivl
ds
test
mov
lds
les
mov
mov
popa
cmp
lret
inc
test
lea
cmp
sub
jbe
stos
sbb
sub
call
lods
push
jae
sbb
sbb
mov
mov
xchg
inc
push
push
and
dec
popa
jne
stc
sub
jnp
xor
sbb
dec
and
jle
js
mov
cmp
fimull
stc
add
add
sub
icebp
insl
imull
add
mov
loop
xchg
lret
pop
outsl
aam
mov
test
mov
push
xchg
hlt
mov
xchg
push
mov
push
sub
pop
mov
in
pusha
popf
mov
imul
outsb
mov
jno
jae
jecxz
sbb
mov
fidivl
outsb
iret
xlat
ror
into
daa
mov
add
cmpsl
ficomps
and
pop
jp
popa
sar
dec
inc
mov
ret
add
xlat
and
inc
pop
sbb
test
mov
push
lcall
add
dec
mov
test
pop
add
bound
jmp
dec
adc
jge
ja
or
lock
loope
arpl
ljmp
call
imul
aaa
insb
into
cmp
pop
cs
sbb
or
sbb
in
fstl
stos
aas
iret
inc
std
dec
and
mov
xchg
add
cs
mov
pop
repz
jne
js
xchg
shrl
xor
jg
adc
call
jne
outsb
inc
push
jmp
test
dec
push
cmp
rorl
subb
aaa
jae
mov
lods
mov
xchg
mov
in
mov
cmp
cli
mov
aaa
sarb
ljmp
outsb
add
popf
enter
mov
out
dec
cmp
lods
fldt
movsl
sub
andl
shll
lret
aad
jg
sbb
push
pop
fsts
int3
and
out
cmp
test
inc
shlb
sub
outsb
sub
push
js
and
call
std
sbb
js
push
mov
inc
cmpsl
test
negb
dec
mov
cmp
lods
mov
and
mov
cs
lahf
jmp
push
adcl
stc
in
movsb
fcmovnb
xor
xor
push
mov
push
mov
adc
push
cld
mov
inc
ret
adc
lock
adc
dec
dec
mov
jne
jge
push
outsb
mov
data16
xchg
pop
stos
cmc
dec
lock
mov
jg
shr
or
daa
mov
lahf
cmpb
fwait
jns
push
add
mov
add
xchg
inc
push
jecxz
mov
lea
lock
lds
inc
pop
imulb
negb
leave
scas
jbe
call
mov
test
adc
cmc
fwait
xchg
push
outsb
pop
sub
xor
gs
xor
cmp
decl
dec
inc
push
lcall
sub
bound
in
xchg
mov
push
xor
add
pop
push
jnp
jp
sub
mov
out
or
fs
insl
push
add
adc
in
loop
xchg
lcall
add
movsb
mov
cmp
cltd
movsl
or
call
xor
ljmp
icebp
test
or
bound
mov
xchg
fimull
and
adc
and
insb
bound
xchg
add
cwtl
mov
sbb
outsb
inc
shrl
imul
dec
cmc
or
mov
pop
inc
insl
bound
or
push
inc
adcl
pop
and
out
xor
push
daa
insb
add
mov
push
dec
push
mov
bound
in
mov
in
ficoml
daa
mov
mov
mov
dec
lods
mov
lock
or
mov
aas
out
or
into
loope
std
add
mov
pop
rolb
movsl
add
lods
inc
pop
mov
pusha
cs
jl
ret
mov
icebp
ljmp
xor
fwait
xor
iret
adc
insb
dec
fisubl
cwtl
sub
cmp
mov
pop
nop
imul
push
lcall
xchg
add
push
cmc
ljmp
popa
push
jnp
inc
lods
or
add
std
test
mov
into
cmpsb
aaa
imul
mov
dec
and
call
xchg
add
cwtl
or
sub
and
xor
cmpsb
aaa
or
mov
dec
outsl
cs
int
lea
sub
push
jg
aad
lcall
xchg
mull
fadd
cmp
xchg
adc
cli
je
inc
pop
fildl
popa
mov
leave
popf
push
lea
jo
pop
adc
rorl
jnp
adc
iret
push
scas
lcall
mov
add
jae
sub
cwtl
ret
push
into
add
push
fsubs
sti
mov
xor
lds
add
bound
push
mov
mov
mov
push
pop
sarb
in
cmpsl
lcall
popf
push
push
xor
mov
adc
in
jg
and
add
xchg
dec
je
daa
pop
lcall
in
cmp
repnz
push
clc
add
test
xchg
in
mov
sbb
cmp
cltd
repnz
les
dec
insb
loop
mov
cmpsl
sarl
leave
insb
gs
int3
stos
adc
loopne
lods
out
or
mov
inc
ret
lods
mov
lds
jb
mov
push
push
jo
lcall
inc
pop
fsubl
test
jmp
sub
push
cmpsb
mov
imul
sbb
mov
mov
out
shl
mov
sub
movsl
xchg
adc
jp
mov
insb
jb
pop
pop
push
pop
test
rcrl
jbe
and
outsb
lods
pop
sbb
mov
inc
sti
or
cmp
mov
cmp
icebp
inc
movl
add
or
popa
idivl
sbb
dec
adc
out
int
mov
xchg
ss
jb
dec
lods
outsb
fdivrs
mov
mov
dec
xor
ljmp
xorb
push
arpl
jbe
and
adc
cmc
out
dec
mov
inc
mov
push
lahf
stos
pop
nop
xchg
jb
sbb
js
std
add
cli
hlt
fs
push
shlb
or
lock
dec
pop
lea
test
push
xor
in
mov
out
sub
popf
mov
adc
inc
add
add
jle
xchg
out
jbe
arpl
dec
shr
sub
mov
and
fwait
push
mov
aad
and
lret
add
inc
lahf
pop
stos
mov
jb
sub
arpl
loopne
jp
xor
je
push
dec
push
inc
inc
popf
into
out
jge
add
out
fwait
inc
mov
xor
xor
dec
bound
push
fucomip
gs
iret
lods
jb
stos
dec
xchg
loop
in
push
cwtl
fistl
out
bound
stos
ja
mov
test
mov
aad
aam
lcall
in
jne
popa
inc
mov
jno
add
es
popa
xchg
push
jnp
jmp
insl
push
jno
sub
and
bound
ffree
outsl
fistl
insl
push
mov
ljmp
repz
inc
sub
call
xchg
aas
jg
pop
shlb
and
sub
repnz
and
test
mov
imul
xor
aam
jmp
xlat
fdivrs
or
push
sbb
data16
idivl
cltd
in
or
add
sub
jae
das
push
bound
imul
or
outsb
sub
out
out
mov
push
lret
xor
pop
dec
fsubs
int3
and
and
test
or
or
jmp
xchg
mov
inc
adc
cmp
jno
cmpsl
cmp
dec
fidivrl
pop
cmc
jo
mov
inc
or
mov
sbb
scas
mov
sub
add
dec
inc
sbb
pushf
test
outsb
fstpt
sti
fs
or
cmp
or
inc
add
mov
aas
and
push
loopne
push
sub
xlat
jno
mov
movsl
push
push
mov
sarl
push
pushf
syscall
outsb
addb
fmuls
cld
cld
mov
dec
jae
sbb
stc
sbb
xchg
je
movsb
insl
mov
mov
negl
sbb
repz
fsubs
pusha
xor
pop
test
or
adc
and
jb
cmp
and
mov
test
jnp
rclb
and
xor
mov
xchg
push
push
xor
test
and
mov
bound
ds
and
push
or
icebp
xorl
inc
gs
jno
jae
sahf
mov
xor
sub
mov
test
ja
pushw
arpl
cmp
cmp
popa
mov
hlt
mov
imul
cltd
lock
gs
xchg
test
clc
adc
orl
je
sub
cmpsl
icebp
dec
or
push
mov
push
test
push
push
push
aam
shlb
hlt
mov
scas
stc
mov
int3
ret
fisubrl
std
jg
jge
call
bound
cld
imul
pause
mov
push
jle
lcall
push
dec
aas
jae
nop
xchg
mov
movsl
mov
outsb
jne
dec
test
ljmp
repz
cmpsl
scas
xor
sub
inc
in
enter
add
add
out
test
sub
leave
jno
out
mov
push
scas
inc
sub
or
daa
loop
ljmp
sub
out
sarb
pop
mov
jb
fwait
jmp
gs
aad
int3
iret
inc
mov
sub
outsb
add
adc
dec
pop
test
insl
das
mov
and
shll
push
repnz
dec
xchg
ret
push
mov
cwtl
add
cmp
mov
lret
jp
sbb
out
je
cmp
add
xor
scas
and
xchg
sub
call
fcomp
out
gs
lret
sbb
lock
pop
xor
mov
and
mov
add
mov
and
dec
or
movsl
scas
bound
and
cmpsl
or
mov
or
inc
xor
push
jne
jno
or
sub
shl
push
jmp
punpckldq
loope
push
into
mov
mov
push
push
imul
mov
add
pusha
stc
sub
push
cmp
lods
pusha
cmp
js
bound
fsubrl
or
popf
dec
test
loop
jbe
out
shlb
call
lahf
push
movsl
lock
nop
mov
das
test
dec
call
mov
test
jge
shlb
xchg
pop
repnz
push
shrl
gs
aaa
adc
inc
push
imul
ljmp
gs
push
xlat
sub
repnz
cmp
bound
inc
xchg
jle
mov
xchg
fldl
adc
cli
mov
jno
jb
ret
roll
jo
daa
lret
out
lock
bound
fmuls
cmpsb
fdivrl
xchg
insb
push
loop
adc
jg
cmpsb
cmp
cmp
ss
outsb
jnp
loope
mov
ja
popa
or
into
fdivrs
aam
adc
mov
fisubrs
cs
mov
push
fidivrl
notl
outsb
lcall
negl
sub
cmp
jnp
mov
xchg
in
iret
outsb
in
stos
push
out
cltd
jbe
xor
test
pusha
xchg
sub
lahf
bound
loop
mov
hlt
bound
cmp
incl
cwtl
mov
pushf
xchg
xor
adc
pop
pop
testl
imul
repnz
and
jbe
or
xchg
fwait
lods
or
mov
sti
cmp
mov
sub
mov
sbbl
sub
mov
leave
adc
int
imul
or
xchg
cmp
and
outsb
movsl
jo
mov
jbe
add
popa
daa
add
push
push
daa
and
mov
bound
push
inc
or
adc
xchg
cmp
sub
lea
add
sahf
popa
mov
jl
leave
xor
daa
inc
shll
or
notb
or
fistl
faddl
sbb
mov
sub
dec
cmp
into
in
push
mov
sub
insl
push
cli
mov
push
jae
sub
out
cmp
mov
fst
ds
add
mov
xchg
mov
mov
mov
sbb
jbe
aas
insb
aaa
mov
and
xor
inc
mov
mov
ja
std
push
loop
cs
inc
pop
outsl
cmp
addr16
adc
and
lahf
neg
and
push
pop
popa
dec
pop
xor
mov
pop
push
mov
add
mov
lcall
jmp
jl
aas
adc
psrlq
push
aaa
mov
das
mov
test
add
in
adc
xor
mov
test
sbb
gs
stos
bound
sub
push
test
xchg
mov
cmp
xor
arpl
push
scas
mov
xchg
das
insb
adc
mov
pop
pushf
aas
out
xor
repnz
add
das
movsb
mov
aas
loop
lret
shll
test
mov
inc
inc
in
je
add
outsb
and
pop
jnp
stos
sbb
bound
xchg
pop
scas
cli
and
or
mov
test
pop
xchg
xchg
rorb
sbb
int
cwtl
inc
aaa
fisubs
pop
sti
and
adc
shlb
xlat
enter
out
leave
adc
sub
popf
jno
testb
loop
or
mov
cltd
movsl
sub
push
out
mov
loop
dec
or
push
jl
jg
or
sub
ljmp
xchg
mov
sbb
pusha
cmp
pop
xchg
add
into
loop
lods
mov
pop
data16
fwait
cwtl
sub
add
gs
sbb
call
dec
imul
mov
push
daa
fisubrs
inc
loope
adc
outsb
loope
xor
stos
push
add
cmpsl
and
xor
or
jo
loopne
ja
xlat
sub
bound
sub
cmpsl
bound
xchg
lods
shrl
jp
shl
test
dec
out
les
push
sbb
insb
pop
enter
xor
xchg
push
add
rcll
arpl
sbb
insb
pop
int3
pop
adc
push
mov
lods
leave
lcall
sub
dec
push
loopne
fnstsw
and
in
stos
push
outsl
pop
das
addr16
aas
mov
daa
cmp
cmp
iret
pop
mov
and
pop
push
pusha
aaa
into
mov
fsubl
mov
fcmove
lcall
mov
add
std
adc
stc
aaa
pop
push
out
mov
mov
test
add
jp
dec
jae
cmp
imul
xchg
leave
popf
jno
sub
stos
push
pop
sbb
mov
dec
mov
pop
testb
addr16
inc
sub
sbb
inc
jecxz
subb
lock
scas
and
lret
push
shll
test
pusha
jmp
sti
loop
add
xchg
rol
or
call
pop
int3
iret
xchg
imul
scas
jmp
xchg
cmp
lds
cmp
cs
loopne
pop
xor
popf
push
ds
cld
fistpl
pop
sbb
movsb
repz
jg
mov
leave
mov
pusha
pop
xor
mov
mov
sub
insl
pop
sbb
sub
push
sar
insb
es
cld
arpl
dec
cltd
or
cmpsl
push
inc
fldcw
clc
jecxz
pop
mov
arpl
xor
xlat
std
bound
cmpsb
xchg
sbb
add
dec
lea
xor
push
fwait
push
scas
xor
mov
fs
test
bound
or
faddl
push
cmc
ds
lahf
pop
cmp
fstp
and
inc
xchg
push
pop
inc
jbe
mov
cmp
xor
bound
outsb
inc
dec
aas
mov
daa
cld
stos
mov
int
jnp
jno
xchg
pop
ss
test
fcmovb
xchg
imul
jg
negb
imul
add
cmp
gs
push
pop
jno
push
push
cmp
iret
mov
dec
xchg
mov
test
cwtl
ret
lahf
adc
mov
mov
arpl
dec
repz
sub
imul
xchg
sbb
mov
scas
sub
test
cs
push
mov
inc
sub
dec
add
inc
mov
pcmpgtw
jne
sub
loop
insb
push
mov
xor
in
add
push
arpl
fisttpl
daa
mov
popf
xchg
bound
add
repnz
fidivs
jg
mov
aam
jne
jg
andb
addr16
jne
outsl
xlat
aam
sub
mov
ds
mov
cmpsl
bound
out
dec
lahf
mov
insb
mov
mov
call
cli
icebp
cmc
push
bound
loope
sbb
das
lahf
popa
lods
adc
out
mov
dec
sbb
pusha
icebp
sub
xchg
cltd
lods
mov
pop
aad
pop
dec
dec
sub
xor
sbb
push
ret
mov
pop
hlt
gs
lods
dec
and
fdivl
popa
mov
xchg
shlb
push
andl
popa
fcom
xchg
jb
sub
mov
jmp
bound
jge
leave
call
into
bound
lods
pusha
lea
mov
sub
xor
insb
mov
add
jg
ret
mov
leave
add
inc
dec
adc
fwait
sti
test
pop
lcall
xchg
rorl
or
in
push
jo
fsubrs
sub
bound
xlat
out
jp
fcomps
test
inc
or
outsb
sub
pushf
rolb
dec
scas
cmp
fldpi
and
js
inc
pop
es
mov
xor
push
nop
lods
pop
mov
mov
movsl
sub
je
mov
mov
inc
jge
inc
loopne
add
rolb
add
jge
ret
dec
sub
icebp
mov
bswap
push
jns
ret
cmp
pop
jno
leave
ja
mov
adc
and
add
notl
adcl
inc
mov
cmp
mov
leave
xor
ret
push
dec
sbb
jns
cltd
pop
inc
add
cwtl
jle
xchg
cmp
jbe
mov
imul
xchg
stos
xchg
inc
xchg
adc
xlat
pop
pop
cld
xor
dec
mov
mov
aad
mov
fnstenv
push
ret
aaa
gs
mov
xchg
adc
rcll
stc
mov
rorl
ja
mov
and
bound
fmuls
or
aaa
cmpl
lahf
bound
shl
popf
insl
std
gs
in
sbb
cli
test
stos
cli
dec
push
std
dec
pushf
pop
mov
push
insl
mov
jnp
push
mov
arpl
mov
push
int3
and
adc
cli
std
daa
insl
or
fsts
movlps
cwtl
shr
push
xor
cmp
daa
xchg
mov
add
popf
and
cmpsb
int3
in
mov
push
mov
jge
mov
push
out
xchg
sahf
sbb
popa
xor
xchg
iret
cmc
out
inc
push
jb
sbb
icebp
into
mov
mov
out
mov
push
jmp
enter
cmp
sub
lea
mov
popa
inc
pop
and
leave
outsb
adc
mov
into
cs
lahf
push
inc
and
mov
jns
fists
sbb
push
fwait
push
adc
sub
add
dec
sahf
pop
inc
cmp
movsl
mov
in
iret
and
fisubs
bound
clc
lock
sbb
sbb
dec
sti
in
out
cmpsl
leave
in
outsb
ficoms
add
adc
jle
push
dec
inc
mov
fldenv
push
pop
inc
jno
dec
sbb
inc
sbb
ret
addr16
stos
jno
dec
dec
test
loope
adc
and
or
sub
pop
imul
dec
push
cmpsb
jp
xchg
jae
push
adc
xor
ss
leave
inc
fdivrs
push
imul
fidivs
cmpsl
push
xchg
jp
test
popf
in
in
xchg
and
je
lock
dec
into
add
sahf
scas
lret
nop
mov
psrlw
test
or
iret
fs
pop
pusha
test
int3
push
aad
mov
lods
jmp
shlb
mov
fcompl
shll
push
jbe
sahf
mov
push
lods
imull
popf
inc
mov
cmp
int3
inc
xchg
les
push
cs
push
popf
fimull
jge
mov
push
dec
into
xchg
cli
movsb
das
pop
imul
xchg
cmp
lcall
and
iret
mov
push
adc
ds
xlat
insb
gs
lea
inc
in
dec
fwait
lahf
in
lahf
or
subl
outsb
xor
adc
popa
mov
push
push
js
pusha
cmp
testb
dec
loopne
daa
test
push
jg
cltd
jecxz
xlat
subb
outsb
adc
jmp
push
or
in
jb
mov
and
mov
aas
xchg
add
pop
mov
pop
or
shl
bound
xor
inc
pop
push
pop
arpl
and
repnz
sub
out
add
push
leave
mov
sar
loop
sbbl
lock
in
cmp
jno
xchg
insl
dec
push
or
sub
ljmp
cs
cmp
adc
int
or
or
push
dec
jmp
lea
sub
jb
ja
and
mov
or
pop
popa
and
nop
xchg
sbb
dec
dec
xchg
xchg
daa
or
push
adc
lahf
mov
cltd
adc
sarl
mov
jg
pop
sahf
inc
stos
xchg
not
inc
sub
es
fsubs
sti
pop
mov
xchg
push
dec
insl
jge
mov
leave
into
xor
mov
shlb
pop
add
or
std
leave
pop
outsl
sbb
leave
data16
js
pop
push
lods
fdivrl
mov
int
scas
sub
pop
les
sbb
add
lret
and
mov
mov
fwait
data16
and
xlat
mov
cmpsl
add
jno
adc
mov
in
mov
pusha
push
outsb
or
outsb
dec
push
ret
or
in
sub
cmpsl
outsb
dec
mov
daa
aaa
mov
and
sub
mov
pushl
scas
outsl
dec
jb
fcompl
pop
pop
into
daa
add
pop
test
ss
rorl
in
fwait
lock
jmp
dec
shll
inc
repz
iret
jl
adc
leave
arpl
add
mov
dec
addr16
sbb
adc
mov
jno
fisubrs
xchg
jbe
push
xchg
out
rcll
or
mov
outsb
imul
mov
adc
pusha
fstpt
jo
jl
xchg
iret
ljmp
push
pop
xor
data16
jns
rcrb
data16
icebp
pop
iret
cmpsl
or
icebp
adc
cs
pop
push
cmp
es
call
test
pusha
sahf
cli
negb
fs
mov
jb
dec
cmc
inc
repnz
shll
movsb
test
adc
rcrb
push
xchg
inc
cmpsl
scas
enter
push
addr16
test
bound
lahf
in
gs
pop
xlat
push
pop
sbb
fiadds
jecxz
popf
bound
lock
outsb
add
dec
dec
xchg
dec
test
lods
mov
and
mov
add
push
inc
inc
call
das
and
jle
push
and
popf
dec
lahf
pop
cmpsb
jbe
mov
mov
cmp
mov
in
sub
xor
xor
push
sub
pushf
hlt
push
lea
xor
and
or
sub
xchg
std
jp
lcall
pusha
push
or
sub
popf
xor
jno
push
pop
cwtl
sub
dec
cmp
mov
pop
push
add
pop
sub
cli
mov
lcall
push
mov
pop
ja
push
jg
inc
push
lods
xchg
mov
push
add
add
enter
sub
add
pop
jbe
popa
adc
insl
negl
xor
jno
aad
cmp
loop
cmp
mull
movsb
out
pop
xchg
push
add
nop
insl
xchg
push
mov
sub
inc
dec
inc
aaa
cwtd
mov
cmp
loopne
lds
push
xor
popa
in
inc
xor
addl
data16
xchg
test
bound
in
ret
insl
shl
pop
or
arpl
aam
dec
dec
sbb
and
imul
add
jg
fldcw
jno
in
bound
pop
mov
cmpb
add
test
cmpsl
mov
loope
aad
lahf
scas
push
push
push
jbe
movsl
jge
vmwrite
push
shrb
imul
outsb
dec
or
cmpsl
ja
sbbb
testb
xor
jno
in
ret
inc
stos
int3
push
outsb
jno
sub
arpl
mov
loop
je
sub
cmp
ficomps
or
shlb
mov
xor
lods
call
popa
or
sub
test
adc
sub
mov
cwtl
dec
push
jle
jp
add
test
jle
addr16
push
ja
dec
aas
or
sbb
push
aad
mov
inc
mov
dec
mov
mov
in
popf
lahf
xor
xor
bound
mov
repz
pop
notl
fstpt
add
jle
jbe,pt
ja
xor
outsb
clc
aas
sbb
inc
push
sahf
gs
or
iret
or
xchg
cmp
mov
sub
int
iret
in
int
loop
sub
jae
sti
mov
sub
mov
cmovnp
sub
inc
push
and
jecxz
test
in
movsl
daa
sub
mov
lret
adc
add
insl
pop
fisttpll
hlt
dec
xchg
or
mov
ficoml
clc
test
orb
arpl
add
scas
fisubl
nop
movsl
mov
mov
push
mov
mov
push
push
inc
call
cmpsl
mov
push
push
test
pop
sbb
shrb
lahf
mov
cmp
mov
aad
sub
sbb
repz
test
shlb
icebp
jmp
jge
lcall
sub
mov
xchg
ljmp
iret
fdivrl
adc
adc
out
insl
jo
lahf
xor
scas
sbb
and
push
sub
jne
push
fidivs
cmp
add
pop
or
insb
popa
stos
sub
push
test
negl
call
ret
sub
push
ss
and
and
lret
add
or
mov
mov
mov
sub
nop
cwtl
stos
sub
xchg
mov
cmpsl
sub
jne
out
ror
aas
cmpsl
jg
dec
int3
sub
mov
orl
dec
sub
insb
inc
dec
mov
ss
xchg
into
out
push
repz
pop
lock
and
cs
fdivs
sub
aad
iret
push
int
push
shrb
rcl
or
adc
cwtl
mov
inc
pop
lahf
push
mov
and
call
enter
xor
sub
mov
cs
aaa
sbb
mov
test
sbb
push
sub
jle
cmp
sub
xchg
in
adc
loopne
lcall
push
cmp
stc
cmp
dec
hlt
out
lcall
fildll
aam
arpl
and
in
sub
dec
push
xor
jmp
lret
sub
pop
les
cmp
mov
sahf
dec
and
xchg
bound
int
aaa
sub
movsl
mov
cmp
mov
push
jns
movsl
aad
push
cld
mov
xor
jecxz
fwait
mov
push
xchg
xlat
int3
bsr
dec
and
repnz
jmp
pop
sti
inc
dec
insl
mov
mov
jp
lds
sarb
or
mov
adc
cmp
les
push
adc
movsl
and
sub
insl
sub
lret
and
lahf
jnp
test
push
iret
call
xor
das
pop
jmp
pop
popf
cld
inc
jbe
mov
ja
or
outsl
and
int
aam
leave
add
sub
popf
mov
mov
hlt
flds
std
cld
mov
insl
ss
inc
mov
or
pop
sub
sub
pop
ret
sub
popf
bound
mov
pusha
xor
cltd
into
sub
cs
inc
sub
sub
into
pop
mov
sub
inc
push
lret
insb
sub
mov
ret
jnp
mov
xlat
lods
sub
loop
pop
test
leave
cmp
out
scas
sub
fildl
lret
add
add
pop
popf
mov
cwtl
stos
stos
fcomi
dec
fcomp
test
jp
cli
fstpl
and
ljmp
fisubl
or
sub
add
sub
stos
cmpsl
xchg
or
aas
push
adc
sub
xor
les
mov
and
xor
lcall
or
call
test
cmp
xchg
sub
cmp
adc
sti
sbb
sub
add
inc
lea
jecxz
jne
sub
and
mov
mov
repz
jg
in
shlb
pop
fildll
and
test
and
push
shll
int3
fs
pop
ret
test
in
aaa
gs
repz
addr16
dec
or
sub
call
pop
add
jbe
decb
xchg
pop
or
sub
repz
sub
jmp
je
scas
jb
test
icebp
call
dec
dec
jns
ja
test
fwait
movsl
pusha
out
and
es
sub
shrl
test
xchg
imul
icebp
pop
mov
cmpsl
test
call
xor
sub
push
lds
or
int3
jp
lahf
inc
cld
xor
aaa
sti
jb
dec
and
fwait
mov
xor
shll
cmp
jmp
pop
mov
adc
and
mov
xor
daa
fsubrs
sub
ja
push
addr16
loop
xlat
mov
rcrb
ret
and
push
xchg
stos
clc
dec
sub
and
sahf
subb
ljmp
dec
fldenv
sub
or
and
and
mov
test
sub
in
push
dec
push
sti
sub
ss
or
jbe
xchg
cmp
sub
or
sbb
stc
jg
sub
sub
fucomp
lcall
sub
mov
sub
xchg
mov
sub
mov
pop
cmp
push
insb
mov
je
push
adc
jecxz
xor
mov
xor
xor
repz
adc
add
movsl
lods
fs
or
sbb
outsb
mov
add
ds
popa
fdivrl
cmp
sbb
or
jbe
sub
xlat
adc
fwait
sub
sbb
mov
insb
sub
dec
lock
fcmovnu
and
jmp
and
push
leave
cli
ror
push
dec
dec
jmp
mov
in
and
lahf
jg
scas
xor
push
lock
repnz
mov
sub
mov
sub
movsl
xor
adc
inc
adc
nop
sub
mov
push
bound
stos
mov
divl
jnp
lock
push
jl
pusha
pop
pop
sub
push
pop
aaa
lcall
loop
xchg
loopne
sub
push
cmp
xor
sub
cmp
scas
adc
roll
ret
mov
lods
push
mov
fisttpll
aad
arpl
nop
test
sub
mov
addl
lods
int
hlt
dec
and
pop
fwait
popa
or
lret
imul
outsb
push
sub
andl
or
das
xchg
jge
push
ud2
cmp
cs
ljmp
sub
cld
jmp
pop
mov
inc
ss
jmp
into
sub
iret
ljmp
adc
int
sbb
icebp
ds
or
jge
cmp
mov
push
adc
popa
aam
sub
aaa
icebp
inc
jmp
adc
scas
cs
xchg
sub
push
push
mov
xor
inc
je
notl
fsubrp
sub
or
fwait
sub
scas
arpl
dec
sub
push
popf
loopne
sub
ror
dec
sub
out
inc
addr16
fisubs
in
dec
mov
mov
cmp
shl
aam
sub
cli
mov
loopne
mov
cmc
sub
adc
aaa
xor
ds
cli
dec
pop
js
icebp
lahf
orb
push
gs
pop
lcall
pop
jmp
in
jp
repz
xor
sarb
cwtl
adc
js
divb
cmp
ret
xchg
pushf
mov
adc
add
sub
in
aaa
aam
fsts
out
adc
add
movsb
aad
pop
cmp
push
stos
add
jo
xor
fbld
push
sub
sub
xchg
int3
int
sub
jo
and
sub
pop
test
movsb
sub
cmpsl
test
push
loope
adc
rcrb
mov
stos
dec
sahf
mov
push
inc
in
lds
jnp
push
push
sub
out
subb
inc
rolb
sub
jb
repz
mov
daa
add
es
inc
push
cmp
sub
add
dec
and
daa
cmpsb
xor
mov
inc
mov
repz
sbb
sub
jp
repz
in
xor
xchg
and
ss
pop
xchg
lret
popf
popa
ja
jae
sub
int3
cs
in
and
lahf
rclb
fsts
mov
jo
adc
imul
sarb
jb
jne
cmp
add
or
imul
cmpsl
mov
and
xchg
push
pushf
or
lds
sub
push
sahf
aam
lcall
xchg
bound
add
fs
ds
pop
mov
stc
movsb
xchg
mov
push
enter
outsb
inc
aaa
xchg
inc
mov
mov
aaa
nop
cmp
hlt
notb
mov
sbb
xchg
jp
in
jl
or
cmc
sti
ret
sti
mul
dec
cld
jno
jne
movsl
xchg
xchg
add
into
rorl
or
mov
jno
icebp
xor
mov
jecxz
iret
out
or
pusha
int3
movsl
add
dec
shll
int3
push
shl
adc
fiadds
add
jne
adc
scas
jno
clc
cmp
imul
popa
sti
in
test
pop
dec
das
mov
cwtl
in
imul
mov
rcrl
or
test
dec
sub
push
fdivs
daa
loope
stos
sub
popa
addl
adc
shl
and
test
test
add
ljmp
rolb
mov
jge
ror
scas
inc
mov
push
cmp
and
ror
icebp
sub
jl
jg
out
dec
mov
or
add
int3
shrb
call
bound
fcomp
cmpsl
xchg
push
and
pop
dec
xchg
xlat
push
sub
mov
js
xchg
insl
test
or
cld
xchg
and
mov
hlt
cmpl
iret
jg
and
aam
enter
stc
pop
mov
mov
jae
fldt
bound
sbb
mov
fidivl
scas
mov
lcall
adc
and
test
jne
push
popf
out
push
inc
inc
es
mov
out
int3
test
movb
jp
call
jo
out
xor
in
mov
xchg
adc
mov
mov
fisttpll
in
test
shrb
cmpsb
sbb
popa
je
scas
jb
jno
xchg
push
dec
test
cmp
jne
test
ret
jns
shll
fstps
push
jg
cmpsb
sub
lock
cltd
lods
xchg
stos
out
cs
lods
sub
scas
fs
xchg
cwtl
mov
cmp
pop
xor
cli
jg
xor
bound
push
rcrb
pop
rcrb
fdivs
jmp
nop
outsl
dec
rcrb
scas
mov
lock
rcll
xchg
mov
stos
push
jl
and
imul
iret
cmp
imul
je
pop
in
bound
lss
scas
jecxz
push
orb
data16
in
out
jl
dec
insl
adc
scas
xchg
bnd
mull
loopne
and
dec
lods
in
loope
outsb
fnstenv
fldenv
pop
pushf
cltd
xor
out
push
gs
add
jl
mov
mov
mov
mov
ret
sub
fidivrl
dec
xlat
aam
push
xchg
mov
jge
push
shlb
mov
fwait
add
dec
add
mov
daa
jno
pusha
scas
ret
dec
cmp
sub
lock
dec
loopne
jmp
xchg
sub
mov
cld
bound
lea
inc
stos
xchg
call
xor
sub
pusha
add
xchg
rclb
push
mov
cmpsl
xchg
mov
in
data16
inc
cmp
xchg
outsb
xchg
jp
orb
add
xchg
es
cwtl
cli
jl
jns
add
push
fwait
lea
cmpsl
push
xchg
loope
sub
popa
and
and
leave
rcrb
add
lods
pop
jmp
inc
jmp
popa
pop
push
loope
push
test
sub
sar
cmp
add
and
xor
jge
jns
lock
das
mov
bound
dec
loopne
jge
cmpb
jns
fwait
pop
ja
xor
jg
push
jne
xchg
cmp
mov
cs
fisubrl
int3
xchg
aad
call
adc
and
pop
cmp
out
orl
adc
out
popa
mov
mov
sbb
int
adc
shll
push
dec
mov
sbb
mov
movsb
incb
gs
fwait
lahf
sub
and
dec
mov
or
mov
inc
xor
jle
pop
lods
push
gs
mov
mov
ficompl
pop
xchg
jno
and
sbb
pop
xor
leave
data16
adc
loope
push
or
shrb
jecxz
clc
jno
mov
xchg
enter
dec
lds
mov
popa
ds
adc
loop,pn
adc
xor
leave
pop
cmp
out
mov
fnstcw
mov
mov
lret
or
sbb
mov
xchg
movsl
sti
xchg
lods
push
adc
mov
shlb
test
cmpsl
andl
out
xchg
shll
push
in
xor
shlb
and
jns
aam
or
outsb
mov
aad
test
stc
mov
outsb
insb
outsb
sbb
jno
fdivrs
inc
sbb
fimuls
outsb
adc
push
sbb
pop
mov
and
test
subl
dec
add
cmp
and
push
shll
and
cmp
pop
or
pmaxub
pop
jg
adc
dec
stc
les
ror
or
dec
sub
or
loop
outsl
sub
add
add
cs
pop
push
in
cmp
fldl
scas
loop
jle
jne
or
test
loope
jae
arpl
imul
push
test
cmc
and
int
test
int
pop
sub
ljmp
fisubrs
inc
jae
xchg
jp
mov
sub
xchg
scas
push
shrl
push
into
js
scas
stos
cmpb
jg
mov
movsb
ja
movsb
movsl
and
adc
add
add
sub
mov
ds
cmc
jno
sti
cmc
shl
sbb
xchg
jns
lahf
or
insl
gs
pusha
rorl
lods
jg
push
add
insl
mov
movsl
mov
inc
push
push
fildll
cmpsb
mov
data16
push
adc
sub
xchg
cwtl
xor
fxch
ljmp
xor
dec
mov
and
nop
cmp
pop
xchg
int
orl
sbb
aas
cli
gs
dec
pop
sahf
sbb
inc
and
pop
sti
lcall
xchg
jnp
jbe
jle
fdivrl
jno
adc
adc
dec
rclb
jae
add
fsubrl
and
or
jnp
push
subb
jne
out
addl
cmc
fnstsw
pop
xor
mov
stos
mov
mov
sub
cmp
data16
fs
roll
testb
mov
pop
mov
fiaddl
add
dec
jg
icebp
int3
sub
lods
fidivs
jae
pop
pop
sub
cmp
ret
sub
shrl
call
push
mov
fucomp
imulb
fldl
arpl
repnz
adc
sarl
imul
mov
sub
dec
dec
sti
das
sub
cmpsl
xor
call
mov
clc
test
mov
mov
inc
sub
and
or
imul
movsl
aaa
adc
pop
ljmp
inc
popa
ljmp
dec
cs
ret
lds
xchg
cmc
insl
mov
pop
fmuls
mov
xchg
iret
sub
sbb
sub
mov
sub
xor
lcall
pusha
inc
cld
in
mov
jnp
push
cs
add
cld
mov
add
sub
lret
adc
outsb
addr16
cld
stos
jo
lods
sub
in
mov
in
push
stos
jl
scas
repz
add
ljmp
adc
inc
int3
pop
dec
cmp
dec
push
sub
push
aaa
sbb
dec
and
adc
jge
cli
fstps
inc
sub
push
sub
cmp
sbb
sub
pop
mov
xor
mov
pusha
icebp
or
jp
and
jecxz
div
jl
sub
jbe
fnstsw
mov
cmp
data16
jecxz
mov
imulb
shll
push
fldcw
mov
sub
mov
pop
gs
clc
jo
enter
pop
push
jmp
std
cmp
xor
jmp
and
divl
mov
aas
inc
popf
into
mov
add
pop
sub
jmp
int3
lea
imulb
xchg
daa
into
test
or
gs
xchg
ret
add
push
imul
sub
adc
loope
inc
xchg
add
hlt
inc
or
stc
mov
sub
sbb
sbb
hlt
dec
mov
into
cmc
push
mov
mov
pusha
jne
or
cmp
clc
fildll
test
outsl
sbb
int
int3
daa
mov
loopne
scas
mov
add
fmull
out
sahf
pushf
ret
cli
dec
and
xor
lods
movsb
mov
xchg
sbb
push
xor
popl
or
fsubs
sub
xchg
sbbb
sahf
sub
mov
or
popf
addr16
fisubl
pop
inc
mov
loop
scas
imul
and
outsb
sahf
std
sub
imul
mov
dec
sub
sub
mov
out
sub
mov
inc
or
dec
sbb
mov
leave
fs
sub
loope
jl
sub
mov
test
fldcw
lods
push
add
into
shll
ja
mov
xor
mov
dec
add
mov
das
and
fs
stc
cmpsl
push
je
imull
mov
fidivrl
sub
loope
sbb
addr16
lcall
add
mov
sub
ss
ja
add
clc
test
js
pusha
and
push
dec
sub
and
sub
je
push
push
mov
out
xchg
ffreep
fwait
add
push
sub
jecxz
arpl
mov
add
enter
mov
sub
xchg
jae
sbb
in
add
fistps
and
je
mov
nop
sbb
pop
adc
push
sub
inc
mov
inc
fisubl
fistps
dec
ds
jae
mov
popa
mov
xchg
inc
sub
jb
lods
and
sub
pop
repz
sbb
sub
cwtl
lcall
push
sub
pop
sub
mov
or
clc
dec
sub
aas
out
test
mov
pushf
add
xchg
cld
sub
test
outsb
sub
ret
movzwl
sub
mov
lods
test
push
in
sbb
sbb
cmp
jp
adc
mov
sub
out
jle
subb
insl
imul
adc
push
sub
roll
jmp
outsl
les
sub
ljmp
mov
stos
outsb
jecxz
pop
ds
cli
pop
sub
in
repz
sub
cmp
xor
sub
pop
ja
sbb
out
sbb
sub
xor
cltd
sbb
push
clc
fs
inc
fnsave
movsb
xor
dec
dec
mov
or
adc
aaa
pop
lock
mov
cltd
sub
push
jmp
out
dec
jge
cmp
add
sub
dec
and
or
fstps
sub
fdivp
ds
sub
cmp
jbe
sub
data16
xchg
sub
cmp
movsl
lods
cmp
inc
test
lret
inc
xchg
inc
jne
aad
fmull
and
or
sti
andb
mov
fs
imul
out
dec
out
out
test
fcoms
psubq
sub
cmpsb
xor
jmp
xor
rcrl
aam
sar
loop
jo
test
sti
jmp
cwtl
dec
mov
sub
and
xlat
mov
and
test
adc
shrb
push
mov
in
test
fcompl
cmp
pop
sub
popf
push
sub
dec
dec
ljmp
adc
cs
xchg
add
gs
loop
mov
push
jns
addr16
pushf
jg
lods
add
mov
mov
and
jecxz
push
sub
xchg
ss
push
dec
loope
push
xor
mov
hlt
movl
test
jno
xchg
adcl
jg
sub
jmp
lret
sub
push
xor
ds
mov
sub
adc
xor
outsl
test
loope
movsb
mov
stos
lock
sub
aas
cmp
sub
js
sub
aaa
mov
mov
mov
sub
mov
jge
and
pop
lahf
jmp
ret
xor
in
add
and
adc
repz
inc
stos
xor
es
pop
or
fisubrl
and
pop
test
mov
pop
cmp
aaa
mov
lret
xchg
gs
xor
pop
push
pop
sbb
sub
and
jae
sub
lret
aas
test
sub
push
sub
cmpsl
in
js
scas
sub
jo
cmc
add
mov
jle
lcall
stos
sub
pop
call
sub
cmp
mov
pop
repz
jns
mov
adc
mov
pop
mov
xor
cs
adc
add
fisubs
or
popf
sbb
add
std
sub
inc
shlb
test
popa
iret
shrb
jns
iret
push
stos
sbb
and
adc
add
mov
cwtl
andl
jnp
fdivs
ja
jg
inc
lods
push
aam
scas
mov
outsl
clc
shll
call
lods
sub
sub
ss
add
mov
js
mov
sub
pop
mov
stos
xor
xchg
adc
addr16
push
mov
and
push
in
jnp
lcall
fsubr
xchg
aas
jl
push
add
sub
or
jb
xor
stos
ja
out
mov
mov
push
loop
iret
ror
andl
fcoms
and
and
pop
pusha
push
ss
int3
stos
or
jne
call
fidivl
xchg
xchg
mov
test
jbe
into
roll
js
xchg
bound
call
push
repnz
mov
cmpsb
icebp
mov
jae,pt
mov
sub
bound
push
aad
mov
sbb
jp
jg
leave
adc
rol
lods
jne
mov
dec
ljmp
bound
out
xchg
shrb
xor
push
inc
bound
mov
lea
pop
movsb
shll
adc
add
stos
inc
push
stos
add
clc
dec
mov
sub
into
enter
testl
jne
adc
or
ss
push
fsubs
shlb
rcrb
loopne
inc
lods
mov
mov
dec
sub
push
mov
shrl
sti
and
inc
mov
in
cwtl
lret
mov
xchg
pop
sub
scas
daa
or
loope
add
xor
push
or
sub
sti
lods
add
cmp
shrb
ret
popa
jg
sar
daa
push
lret
xchg
pop
imul
mov
fs
jns
xchg
inc
mov
loopne
add
test
dec
lret
mov
mov
mov
dec
insl
and
lds
fidivl
xchg
add
adc
loop
dec
pop
dec
dec
lret
cmpsb
rorl
pop
cmp
add
cmp
dec
mov
push
and
js
sbb
cwtl
orb
enter
jmp
push
outsl
out
in
lds
insl
cwtl
add
in
dec
adc
loope
test
xchg
adc
int
mov
adc
pop
sub
or
decl
xor
cld
or
jmp
mov
push
and
inc
fdivrs
jne
bound
movsl
out
fsubs
sbb
xorb
movsl
leave
out
fistl
xchg
push
adc
mov
stos
sbb
into
jmp
faddl
es
sbb
or
sbb
in
iret
cli
xchg
addl
mov
loop
insl
jno
jae
pop
adc
fs
pushl
scas
subl
sub
lahf
or
xor
inc
popa
adcb
data16
sub
cmp
add
gs
xor
mov
adc
ljmp
dec
aad
repz
mov
pop
insb
dec
jbe
mov
dec
ss
je
inc
idivl
push
mov
cld
xchg
jmp
cltd
int3
mov
xchg
xchg
cwtl
jg
or
fcmovb
rolb
xor
mov
shrl
push
pop
mov
xlat
pop
inc
pop
cmc
bound
xor
or
cmp
mov
adc
dec
add
insl
cmpsl
test
inc
popf
push
xchg
add
cs
imul
push
outsl
dec
mov
aam
test
and
testl
mov
mov
jg
pusha
hlt
pop
ret
mov
pop
sub
insb
bound
scas
sbb
cwtl
cmp
sub
mov
fisttpll
mov
push
imul
push
cmpb
notb
cld
add
xchg
jno
testl
add
filds
xchg
dec
int3
popl
cs
iret
outsb
jno
mov
add
sub
jmp
mov
push
jp
lcall
adc
or
dec
enter
pop
xor
imull
in
shll
outsb
xchg
dec
dec
cmp
in
lcall
inc
lods
push
out
pop
inc
jo
jge
fwait
xor
or
mov
sub
sbb
pop
mov
xchg
add
in
sub
pop
push
cwtl
push
or
add
sub
jmp
adc
std
jecxz
jno
out
cmp
add
bound
je
fildl
dec
push
xchg
adc
loop
aaa
pop
outsl
fucomi
xchg
cmp
xor
sahf
xchg
or
out
push
push
jb
or
dec
xor
popa
ret
js
or
sahf
mov
xchg
mov
push
int
fwait
je
cwtl
loope
out
leave
xchg
cs
sbbl
jnp
mov
or
push
mov
push
inc
popf
pop
shlb
jmp
push
or
add
adc
lods
pop
fistpll
dec
icebp
add
dec
sub
cmc
push
xchg
mov
stos
iret
and
stc
lods
mov
jmp
pusha
aam
das
addr16
inc
rcrb
mov
bound
imul
sbb
popf
pop
add
and
jne,pn
add
mov
dec
xlat
jnp
jbe
inc
jp
dec
popa
fcompp
ds
xor
push
dec
pop
bound
jns
cmp
ret
loop
or
std
imul
inc
jle
dec
and
imul
mov
dec
sti
jae
xlat
dec
sarb
mov
fs
lods
pop
movsl
test
mov
stc
inc
sub
dec
and
mov
push
loope
sbb
ja
jge
sub
inc
repnz
cmp
jp
xor
gs
sbb
stos
imul
lds
adc
push
push
cmc
pop
jnp
xchg
dec
push
fsubp
iret
or
dec
dec
aaa
push
add
sbb
mov
repnz
inc
pop
mov
push
cmp
out
mov
cmp
insl
xchg
mov
mov
movsl
aam
dec
jno
div
inc
andb
xlat
shlb
mov
pop
mov
push
xchg
sub
stos
fadds
outsb
dec
aas
mov
add
xchg
push
ja
stos
push
popa
andl
test
or
cmp
pop
pop
jne
fdivl
neg
shrb
sbb
xlat
fildll
jno
cmp
test
lds
iret
adc
nop
sbb
sbbl
outsb
or
push
xchg
cmpsb
push
add
xchg
insl
nop
hlt
add
repnz
jbe
dec
xchg
add
cmpb
cs
sbb
les
or
addr16
clc
xchg
ds
popf
callw
shrb
loope
dec
cmp
aaa
out
lea
sub
fisubrs
cmpb
xlat
xchg
nop
imul
pop
sbb
push
ret
jno
mov
fdivp
jo
in
mov
bound
pop
scas
cmp
xchg
push
cmpsl
dec
or
aas
adc
stos
roll
lods
xor
or
sahf
jne
jl
fimull
cmpl
aam
mov
lcall
sub
call
sub
rclb
push
push
test
fistpl
cs
mov
adc
cli
pop
sub
sub
mov
insl
jge,pn
ret
leave
pop
fists
or
testb
pop
push
gs
negl
lret
add
sbb
cmp
faddp
iret
mov
pop
adc
fdivp
xchg
push
enter
adc
sbb
lods
fs
mov
pop
loopne
add
cs
mov
mov
loope
test
repnz
mov
in
test
repnz
clc
xor
jp
iret
shlb
pop
daa
int
stc
ja
push
inc
gs
pushf
cmpsl
xor
ljmp
in
adc
and
or
iret
int3
and
outsb
mov
jb
dec
xor
std
cs
jmp
cwtl
test
lods
icebp
lds
mov
push
int
shlb
mov
in
test
sbbl
sti
jo
mov
or
ds
mov
push
sbb
es
mov
popf
xchg
andl
sarb
push
add
mov
test
nop
push
push
addr16
bound
cmp
xchg
es
push
sbb
sub
and
out
pop
mov
mov
inc
xor
popa
jb
lahf
cld
add
je
adcl
fdivr
mov
jb
test
mov
movsb
call
jo
or
or
ja
loop
loope
stos
loopne
cmp
xchg
cmp
sub
jnp
decb
insl
sub
xchg
cltd
cmpsl
outsl
fneni(8087
and
jg
sub
insb
and
sub
cmp
mov
jg
jp
xchg
repnz
push
mov
into
push
mov
fs
or
call
and
adc
call
mov
adc
enter
dec
and
fs
ss
mov
outsb
xchg
or
lcall
sbb
xchg
and
lods
sbb
xor
mov
and
mov
lahf
sub
stos
nop
icebp
xor
jmp
sub
jle
mov
push
test
mov
rolb
fiaddl
rclb
inc
xchg
fists
xor
sbb
or
pushf
push
std
push
daa
call
jnp
les
call
and
out
sub
lea
mov
bound
push
mov
fisubrs
inc
loope
daa
pop
push
sub
xor
insl
sub
dec
les
daa
pop
mov
cwtl
clc
cltd
int
xchg
in
cwtl
rcrb
lahf
movsb
xor
adc
inc
arpl
pop
arpl
in
push
cmp
pop
cli
inc
dec
test
popf
add
mov
leave
sahf
test
data16
push
in
jne
or
mov
push
inc
popf
push
data16
jecxz
bound
dec
outsb
jge
sbb
xor
outsl
xchg
xor
daa
stos
lods
leave
push
popf
lock
sub
lahf
out
popl
in
lock
push
push
popl
loop
mov
adc
in
adc
ret
cmpsl
lcall
xchg
pop
add
xchg
xlat
jle
jbe
cltd
and
dec
repnz
sbb
push
lahf
scas
lcall
rorl
mov
popa
push
ffreep
xor
ret
inc
inc
pop
mov
imul
adc
adc
pop
lods
add
cwtl
adc
inc
into
leave
push
out
outsl
dec
add
arpl
mov
je
mov
addr16
cwtl
add
inc
lretw
in
ds
mov
cli
push
scas
dec
shrl
movsb
mov
js
push
push
inc
mov
iret
cmp
xor
xchg
add
dec
xor
cs
call
fsubrp
mov
pop
mov
xchg
jo
rorb
cld
mov
add
and
outsb
xchg
lret
sbb
xlat
gs
in
push
lock
xchg
inc
dec
int3
gs
xor
cmpsb
or
jo
fidivs
scas
pop
mov
mov
lods
rclb
fstpt
popf
cs
adcl
les
mov
xchg
jae
xchg
sbb
sub
inc
adc
stc
adc
clc
or
inc
pop
dec
shlb
mov
mov
xlat
cmp
mov
in
mov
mov
mov
testl
mov
jns
out
bound
fdivrs
mov
mov
dec
icebp
adc
xor
inc
xchg
adc
mov
add
cli
jbe
mov
and
push
imul
pop
dec
sub
movsb
cmp
jp
push
pop
repz
xchg
mov
es
jno
jmp
sbb
ja
iret
jo
add
test
jle
xchg
notl
jecxz
scas
cmp
mov
test
dec
mov
arpl
mov
push
scas
nop
lahf
dec
jno
xchg
add
mov
movsl
shll
xor
mov
in
movsb
in
ficompl
ljmp
mov
adc
imul
sub
inc
and
mov
and
lret
or
test
fisubrs
cltd
and
test
and
jno
adc
xchg
lock
pop
rcll
sbb
nop
adc
and
std
fbld
adc
test
push
imul
imul
dec
jmp
nop
cmc
mov
push
and
ljmp
add
sub
sahf
nop
push
sub
mov
cmpsb
and
clc
inc
lock
dec
xor
call
cltd
xor
outsl
rcr
dec
sub
cs
push
adc
call
jge,pt
inc
clc
mov
mov
mov
hlt
test
dec
mov
dec
cmp
xor
sub
xchg
fidivrl
dec
jecxz
sub
shlb
leave
push
gs
pushf
mov
loope
mull
nop
andl
dec
and
call
inc
mov
fstpt
or
out
sbb
scas
pusha
push
pop
or
imul
xlat
ret
adc
pop
xor
lea
popa
cmp
lret
mov
xor
adc
or
and
adc
pop
ret
jae
sbb
cs
sub
mov
cs
stos
or
addl
bound
mov
mov
sub
movsb
xchg
pop
xchg
jne
pop
mov
push
fucomp
push
lahf
popa
mov
mov
xchg
iret
cli
xchg
jns
fwait
nop
inc
mov
or
mov
dec
xchg
call
pop
mov
inc
xor
sti
in
ljmp
push
pop
dec
outsb
xor
mov
xor
das
sub
xchg
psrlw
jbe
in
xor
fnstcw
cmp
ret
adc
fldl
sbb
scas
test
bound
cwtl
out
cmp
es
fwait
lods
out
scas
inc
xor
xchg
sub
sbb
test
stos
sbb
add
xchg
xor
pop
sar
arpl
push
daa
xchg
jo
sti
sub
outsb
popf
mov
addr16
xchg
bound
or
or
insl
rcrl
rclb
push
stos
push
sub
sub
shrl
in
test
out
push
in
pusha
movsl
sahf
loopne
insb
mov
shrb
lahf
loopne
mov
mov
jbe
inc
mov
add
ret
xchg
into
dec
lret
dec
mov
pop
dec
xchg
push
push
cmp
adc
push
out
test
test
mov
mov
in
push
ss
pop
stos
iret
add
out
push
mov
fs
sbb
shrb
xchg
jmp
fwait
push
faddl
ror
push
mov
jl
pop
daa
jnp
push
movsl
inc
scas
cmp
add
daa
hlt
mov
into
mov
ret
xchg
mov
push
dec
pop
mov
xor
rclb
or
sbb
or
add
pop
test
fidivrl
jmp
repnz
inc
dec
dec
jecxz
and
test
lds
xor
push
ja
or
jbe
lods
pop
pop
pusha
mov
mov
push
xlat
shrl
leave
push
cmc
mov
or
movsb
ljmp
pop
daa
loop
xor
sbb
out
outsl
mov
mov
cmpsl
scas
sbb
or
outsb
mov
push
and
rorl
xlat
enter
xlat
stc
cs
mov
or
scas
aas
cmp
pushf
lret
addl
mov
lods
roll
add
and
addl
in
adc
push
add
pop
loope
jmp
clc
ja
and
je
fisubl
insl
push
sbb
movsl
cmp
stc
push
mov
stc
fcoms
inc
and
pop
mov
popa
xchg
sarl
leave
xchg
jmp
push
dec
dec
mov
gs
aaa
xchg
add
push
shl
or
aas
inc
adc
icebp
rolb
lods
sbb
imul
into
xchg
mov
or
inc
ds
xchg
jno
nop
icebp
fsubl
into
pop
shlw
outsb
and
dec
dec
and
mov
mov
test
insb
nop
push
sub
push
add
push
and
popf
data16
mov
out
dec
in
rcr
pop
in
mov
lahf
stc
sub
int
push
jmp
outsl
insl
dec
xchg
sahf
xor
shrl
mov
cmpsb
or
add
push
mov
mov
call
fsub
shlb
jb
and
xor
sub
cmp
dec
adc
push
jnp
add
xor
jae
jge
outsb
in
or
mov
pop
mov
cmpsb
enter
aam
movsl
in
sub
inc
pop
or
pop
mov
cmp
int
movsl
and
in
loope
sub
shlb
add
shrl
and
outsl
in
mov
dec
lods
sub
gs
or
add
cs
lds
xchg
iret
call
inc
test
repnz
mov
sahf
xorb
je
xor
mov
in
scas
mov
or
adc
xchg
bound
stos
insl
mov
add
and
shll
popa
and
adc
popf
gs
loopne
shlb
cmp
cmc
cli
xlat
push
push
mov
add
icebp
daa
ret
xchg
das
sti
pop
pop
imul
outsb
xor
dec
lea
push
add
cmp
lods
inc
mov
testl
call
mov
lods
xchg
mov
mov
jb
gs
push
insl
jle
lcall
mov
cwtl
sti
adc
or
sarl
jae
addb
xchg
int3
dec
cmpb
test
inc
xlat
in
stos
scas
lcall
pop
cmpsb
jge
insb
test
xor
mov
inc
xchg
dec
dec
xchg
daa
sub
xchg
test
fstpt
testb
adc
pop
adc
cmpl
push
gs
xlat
add
stc
lock
inc
and
sub
jbe
jne
inc
add
test
outsl
insl
fildl
ja
mov
test
ror
pushf
jno
dec
or
lahf
popa
jne
and
inc
inc
and
mov
aas
xor
inc
mov
cmp
push
sbb
leave
jle
inc
ret
loope
gs
push
mov
mov
lret
cltd
sbb
in
cmpb
add
popf
les
pushf
call
push
pop
mov
xchg
cmp
rcrl
sti
lahf
adc
jl
lret
fcomi
mov
adc
fs
mov
add
xor
loopne
push
xor
jb
jno
nop
pusha
loopne
or
inc
lock
imul
xchg
loopne
inc
gs
jmp
stc
jb
xor
int3
dec
cmp
push
pusha
jne
jns
fwait
mov
shrl
clc
xlat
negl
jge
xor
ss
xchg
adc
dec
les
sub
xor
mov
mov
or
rorl
inc
and
mov
mov
jmp
out
std
push
sbb
lret
push
icebp
in
fistpll
aas
loope
push
sbb
mov
push
and
inc
cmp
aaa
iret
sub
test
cmpsb
push
pop
jo
ljmp
repz
leave
imul
call
pop
out
shll
test
addl
xchg
mov
cmp
push
dec
push
add
enter
cs
outsb
clc
cmp
gs
xor
jno
xor
or
sbb
mov
addr16
dec
xor
mov
pop
sbb
leave
bound
iret
fisttps
lods
dec
test
pop
roll
jmp
jle
mov
mov
mov
aam
clc
mov
scas
mov
adc
ffreep
call
sbb
addb
loope
fcoml
int
int
fisttps
sub
mov
sbb
aas
into
adc
cmp
xor
xchg
es
pop
or
pop
cmp
mov
pop
add
enter
lods
loope
inc
in
sub
dec
dec
adc
ret
jg
std
mov
xor
and
jne
push
jo
scas
subb
pusha
sti
sub
pop
in
cltd
add
insb
bound
mov
mov
out
scas
adc
lods
hlt
push
neg
sbb
jne
mov
dec
loopne
mov
mov
in
test
sub
jmp
lds
mov
dec
mov
cs
decl
ficoml
dec
outsl
int
mov
push
stos
sub
inc
dec
or
cmpsb
mov
cmpsl
cli
adc
sti
and
jmp
test
push
jmp
jae
mov
cs
shl
pop
icebp
cwtl
jmp
cmp
jne
sub
mov
xor
and
scas
mov
and
outsb
push
out
ror
xchg
adc
add
movsb
push
aam
pop
lods
imul
mov
clc
mov
out
dec
imul
loopne
lret
movq
push
bound
cmp
xchg
push
push
push
push
xchg
mov
jmp
jg
cmc
in
push
dec
scas
bound
or
lods
pop
jnp
pop
sub
bound
jne
int
or
addr16
xchg
sbbb
fisubs
lret
xor
clc
popf
sub
or
sbb
mov
cs
sub
inc
es
aaa
cmp
cmp
gs
out
popf
xor
fdivrl
cmpsb
sub
sbb
jg
mov
imul
mov
enter
ret
int
cwtl
repnz
test
adc
inc
inc
repz
adc
xchg
rclb
mov
mov
mov
hlt
cld
scas
or
add
jge
fwait
jmp
inc
mov
in
adc
push
and
in
or
cmp
cltd
fimull
test
mov
adc
sub
in
sbb
adc
push
imul
pop
outsb
jne
or
cmp
testb
and
popf
or
jge
push
mul
jge
adc
jne
xchg
aad
jmp
jle
loopne
cmp
fsubr
xor
cli
xor
int
xor
push
mov
loop
jl
outsl
pop
loopne
rcll
mov
jno
lods
les
jecxz
or
mov
test
dec
push
sub
mov
jae
test
jnp
cld
std
gs
push
fs
sbb
cs
lods
dec
pop
pop
add
mov
push
fldt
jne
cld
mov
mov
xchg
push
xchg
loope
mov
push
popa
ja
and
test
bound
stos
leave
rcll
rcrb
insl
out
icebp
push
xor
xchg
gs
pop
imul
ret
into
or
ret
jne
cmpsb
mov
enter
out
xchg
imul
loope
fs
pop
sbb
mov
jo
frstor
jle
ficompl
lods
inc
insl
pop
push
subl
xchg
add
fisubrl
rorb
lds
jns
mov
imul
shlb
imul
leave
ret
js
insl
out
cmpb
jo
xchg
dec
sub
jnp
frstor
mov
sub
add
in
jecxz
mov
frstor
mov
push
add
or
sub
dec
imul
mov
pop
imul
jmp
fstpt
inc
jno
add
add
add
inc
mov
in
jns
imulb
adc
call
cmpsl
pop
fdivs
xchg
xor
pop
cmpsb
mov
lea
jns
inc
call
adc
sar
or
loop
divb
test
fwait
dec
hlt
inc
xchg
lcall
mov
test
and
fstl
ss
ret
cmp
sbb
repz
pop
out
push
in
shrl
cltd
stc
lock
inc
test
pop
xlat
sub
cmpl
shrl
xor
enter
cmpsl
fcomps
add
sub
cli
add
sbb
xchg
and
sub
scas
adc
adc
arpl
inc
sbb
xorl
aas
sbb
or
call
loop
or
out
fcmove
and
outsb
xchg
sub
sub
sti
cmp
jbe
gs
push
dec
cmpb
test
bound
xor
out
sbb
loop
or
fsubl
mov
xor
ret
shl
adc
sahf
fmul
outsl
pusha
jmp
div
cmpsl
pop
sub
push
mov
xchg
sub
push
sbb
dec
bound
dec
xchg
ret
ret
inc
arpl
insb
mov
pusha
pop
addr16
dec
fnstcw
pop
lea
ja
pop
bound
dec
jnp
jo
test
xor
es
cmpsb
xchg
stos
iret
and
xor
mov
mov
in
dec
aam
rclb
lock
ljmp
cld
pop
insb
xchg
loop
add
ret
arpl
bound
add
popa
lcall
and
xor
mov
lahf
fsub
pop
sahf
xchg
in
adc
add
sbb
cmp
in
lret
mov
mov
popa
xchg
enter
lcall
ret
pop
rorb
dec
mov
dec
dec
sahf
cltd
pop
mov
divb
dec
xor
xchg
pop
jp
cmp
mov
and
xchg
insb
sub
sub
aam
adc
rcll
js
imul
jb
adc
bound
loop
cmp
out
test
fstps
outsb
test
xor
ja
inc
push
dec
outsb
in
outsb
jne
jp
cmpsl
insb
ja
cmp
mov
sub
cmp
xchg
jecxz
loop
cmp
int
and
xor
cs
shl
imul
add
frstor
shlb
and
inc
dec
cmpsl
push
call
inc
add
sti
push
js
mov
jp
dec
cmpsl
lock
push
sub
enter
lret
int3
lcall
mov
mov
pop
mov
aam
push
adcl
add
sbb
inc
dec
aam
rcll
cmp
push
xor
sub
adc
pusha
sti
sbb
scas
pop
mov
and
pop
aas
push
scas
mov
pop
ja
mov
loope
mov
cli
jns
gs
shlb
icebp
push
fidivl
mov
cmp
insb
mov
or
fs
outsb
push
mov
fwait
jno
dec
or
dec
outsl
insl
sub
push
dec
and
loop
jnp
je
popf
and
stos
mov
popa
fisubs
stc
mov
int
es
leave
xchg
cmp
xchg
sub
imul
or
adc
cld
inc
cmp
loopne
imul
mov
pusha
jp
cmp
in
andb
daa
adc
push
pusha
jp
dec
push
test
sub
adc
hlt
test
scas
xchg
pop
outsb
push
leave
lods
aad
lds
mov
insb
xchg
push
dec
and
fimuls
pop
or
popf
dec
pop
xor
mov
sub
fmul
into
js
dec
push
add
ficompl
ja
and
or
lock
xchg
adcl
xor
jns
arpl
jg
pop
mov
xchg
jp
std
mov
out
mov
push
insl
sbb
outsb
and
loope
inc
cmp
pop
ret
jb
lock
int
fstl
iret
ret
push
mov
inc
bound
andb
push
or
xchg
pop
or
jnp
dec
loopne
pop
and
test
mov
adc
mov
sarb
popa
iret
dec
insl
push
lods
mov
mov
mov
mov
push
sub
iret
jle
pop
xchg
bound
aas
mov
push
jo
jp
bound
loop
ja
xchg
or
mov
pop
pop
sahf
mull
mov
outsl
pop
cmpsb
insl
in
mov
sar
fwait
je
push
mov
mov
cmp
or
clc
ja
jg
xchg
stos
pop
push
or
movsb
pop
push
repnz
add
cmp
popa
and
and
jg
sbb
push
sbb
es
adc
faddl
dec
out
loopne
mov
into
add
dec
sbb
out
push
jmp
lcall
ret
in
inc
repnz
add
popf
xchg
and
mov
mov
adc
dec
pop
gs
bound
inc
addb
xchg
sub
cmpsl
push
ds
mov
pop
sar
and
leave
ret
lods
add
nop
out
xor
andl
sub
js
cmpsl
or
sub
nop
dec
loopne
mov
lret
sub
push
cmc
sbb
xor
mov
out
pop
xor
jecxz
mov
lgs
cli
daa
movsl
inc
push
xchg
fcmovne
popf
bound
scas
cmp
pop
arpl
aas
and
sub
mov
xchg
and
xchg
pop
clc
clc
or
out
xor
idiv
nopl
in
push
lahf
add
fnstsw
mov
sbb
mov
in
push
shrl
or
mov
pop
aaa
and
xchg
imul
push
inc
imull
out
xchg
enter
xchg
ds
int3
adc
mov
mov
scas
sbb
jne
or
inc
pop
push
rcrl
cs
push
ja
je
xor
mov
or
inc
sahf
pop
mov
add
in
pop
pusha
call
add
pop
cwtl
xor
ds
test
and
mov
pop
imul
cld
dec
xor
sub
dec
sbb
mov
lahf
arpl
mov
pop
inc
jae
stos
cmpsl
mov
sbb
shll
out
and
push
iret
jmp
out
sahf
jae
sub
or
pop
push
push
mov
pusha
shlb
sbb
push
shrb
imul
loop
incl
arpl
cli
loope
sub
dec
call
or
fnstsw
push
leave
sbb
nop
cmp
xchg
cli
and
mov
dec
cmp
sub
push
xor
or
xchg
popf
and
dec
jb
pop
clc
inc
push
jno
push
mov
test
cltd
push
rcl
xlat
add
cmp
idiv
inc
lods
push
rcll
push
insl
cli
push
cmp
or
ja
jbe
lock
int
and
ljmp
push
pushf
subl
cmpsl
inc
mov
mov
stc
arpl
pop
jg
mov
daa
enter
sar
adc
dec
cmp
loop
or
push
pop
xchg
addr16
pop
sbb
into
shlb
dec
lea
leave
ret
iret
push
dec
xor
add
pusha
push
cmpsl
daa
or
das
iret
cmp
cwtl
inc
add
leave
jne
xor
or
repz
js
lea
dec
push
jno
icebp
mov
or
mov
sub
imul
imul
gs
add
stos
addb
cmp
js
sub
test
mov
mov
xchg
popa
adc
bound
std
sbb
push
repz
js
push
push
and
sbb
push
mov
scas
iret
sub
push
lock
sbb
mov
jp
push
and
mov
or
sarl
lahf
and
jle
mov
dec
stos
clc
cmp
push
or
sbbl
into
push
add
push
js
frstor
jge
xchg
xlat
adc
cmp
and
push
cmpsl
scas
hlt
and
sahf
or
mov
subl
pop
push
mov
das
clc
jae
popf
pop
nop
or
inc
mov
sti
and
inc
js
push
xchg
and
jno
sub
gs
pop
lea
sti
mov
xor
les
movsb
pop
cmc
cmpsl
je
mov
mov
fsubrl
lea
jp
loope
insb
jno
cmp
jmp
jle
orb
sub
mov
fmul
lahf
cmp
jb
sub
sub
shlb
lea
push
push
ds
xchg
or
sbb
hlt
adc
ljmp
sub
and
fldcw
pop
inc
jb
mov
imul
dec
leave
pop
and
cmpsb
aaa
cwtl
js
push
les
mov
dec
iretw
pusha
cmp
das
or
add
dec
test
bound
out
jg
jbe
js
push
sub
loopne
test
cmp
bound
stos
or
lret
add
add
adc
and
push
cmpl
ja
push
xchg
lahf
lods
or
adc
cmpb
dec
mov
sub
pop
repnz
mov
mov
pop
cmp
or
rcrb
or
push
mov
dec
sbb
aad
xchg
shrb
movl
lods
mov
aam
jns
pop
jne
sbb
ficoms
outsb
rol
fldenv
stos
repz
inc
inc
addr16
imul
icebp
mov
cmp
repnz
out
xor
xchg
mov
xchg
dec
call
std
push
pop
dec
sub
cmp
cmp
subl
push
xchg
std
loop
das
mov
dec
pop
jmp
lahf
and
xor
lods
add
and
pushf
scas
test
adc
xor
mov
popa
cmpb
out
push
add
leave
call
inc
mov
jg
outsl
insb
js
push
push
sbbb
dec
jl
cmc
jae
adc
push
dec
lret
inc
inc
movsb
dec
pop
movsl
push
clc
out
pop
fstp
cmc
das
sub
mov
cmp
fstpl
test
jo
inc
adc
nop
mov
imul
cmp
cs
loope
or
mov
or
push
test
add
ljmp
sub
iret
sahf
test
or
in
shll
aas
xor
daa
cmpsb
bound
aam
divl
push
fldl
adcb
out
scas
xchg
ljmp
jecxz
and
xchg
aas
adc
sarl
jg
and
enter
lods
adc
out
fsubr
mov
fwait
in
addr16
mov
pop
push
jmp
insl
mov
xchg
sub
sub
mov
push
into
cmp
stos
cmp
inc
adc
rcrl
pop
inc
enter
call
jg
xchg
jl
pop
imull
lret
aaa
push
jb
in
pop
stc
mov
daa
or
cmpsb
add
incl
test
gs
xchg
jno
dec
cmp
cmc
stos
sub
jmp
cmp
not
mov
daa
mov
roll
rol
imul
push
mov
cmp
repz
repnz
mov
ret
mov
jge
lock
ret
mov
jg
mov
inc
cmp
xor
jne
iret
daa
lret
jae
out
sbb
cmp
daa
xchg
mov
mov
repz
add
xchg
xchg
popf
hlt
xchg
cltd
popa
fistps
mov
sbb
dec
jg
js
in
lods
sub
ja
add
mov
jecxz
dec
push
push
repz
loop
jmp
mov
mov
int
and
sbb
push
xchg
cmc
pop
mov
xor
lock
cmc
cltd
loop
int3
push
insb
dec
les
fwait
test
test
icebp
mov
lahf
pop
dec
aas
and
loopnew
cmp
push
mov
fsubrs
pop
pop
push
push
sbbl
loope
xchg
push
dec
mov
and
shrb
mov
repz
inc
pop
push
lea
push
mov
cmp
adc
dec
in
in
push
xor
pop
xchg
fisubl
mov
shll
cs
aam
cld
popa
insl
sahf
movsb
sub
bound
ret
mov
push
test
xchg
push
or
mov
mov
xor
sbb
jl
scas
jno
adc
jle
lds
fwait
xor
les
lret
dec
or
iret
movsb
stos
in
movb
aas
addr16
addr16
inc
sbb
roll
aas
inc
push
sbb
add
pop
push
jnp
push
push
inc
mov
mov
rolb
mov
lods
sbb
scas
cli
pop
rcll
xchg
lret
push
sbb
fmuls
mov
je
mov
pop
add
test
insb
mov
or
mov
dec
cwtl
rcrl
insl
decl
mov
int
nop
and
jns
mov
mov
sti
xor
push
inc
call
adc
pop
xor
pop
and
fdivl
jbe
push
into
test
outsb
push
popa
mov
and
arpl
fisubrl
push
push
jg
push
cmpsb
stos
jmp
pop
in
xor
dec
or
sub
push
and
xchg
sub
push
cmp
xchg
jns
lock
mov
or
test
mov
lahf
jno
jb
xchg
mov
mov
mov
jp
dec
in
xor
inc
lret
std
inc
push
imul
mov
sahf
insl
in
movsl
shlb
std
test
out
adc
add
or
push
xchg
xchg
test
cmp
mov
and
xchg
mov
and
ret
jmp
jo
jmp
cld
xor
jge
xchg
jmp
or
in
rolb
repz
clc
call
jnp
inc
mov
pop
mov
divl
push
into
push
sub
stos
pop
mull
xchg
pop
das
lods
out
dec
or
lahf
loope
jnp
push
bound
lahf
pop
xchg
push
push
add
jae
fstps
je
ret
rorb
xlat
jne
mov
js
rcll
lea
pop
sub
subb
mov
mov
mov
fldt
xchg
jo
cmp
call
add
jns
dec
test
mov
sub
push
repnz
xlat
aam
repnz
popa
push
sbb
sbb
repz
sub
push
mov
dec
inc
testb
mov
cmc
xchg
xchg
or
mov
xchg
xchg
mov
xchg
push
sti
ret
popf
dec
aaa
rol
mov
cmp
inc
iret
mov
je
push
inc
int
pop
cmp
xlat
mov
xchg
mov
mov
test
push
or
stos
jp
mov
add
cmp
popa
fimuls
pop
outsb
lds
hlt
mov
cmp
test
mov
pusha
movsl
inc
insb
out
inc
lods
xlat
xchg
jae
ss
mov
test
pop
clc
and
sub
cmp
mov
lret
stos
jb
inc
stos
aas
mov
mov
iret
dec
sub
mov
mov
in
adc
pop
outsb
imul
jmp
fildll
iret
lret
int
cmp
lcall
push
mov
xlat
test
js
shl
push
andl
sub
je
movl
jg
and
jecxz
or
popa
mov
sub
bt
jne
push
andb
sbb
clc
cmc
shrb
ljmp
fdivs
add
loop
shrb
xchg
adc
xchg
dec
xor
bound
push
mov
push
xor
mov
adc
xorb
imul
or
repnz
and
out
bound
xchg
dec
mov
mov
xlat
xchg
cmp
insl
enter
loope
ret
es
jne
xlat
outsb
bsr
mov
cmp
push
jmp
dec
stos
push
push
jae
lods
out
shlb
adc
jno
pop
and
addr16
test
mov
sbb
xor
popa
sbb
and
nop
sub
fwait
rorb
push
mov
in
mov
jmp
or
imul
fmul
je
pop
lods
jbe
loopne
add
dec
inc
xor
push
inc
cmp
movsl
xor
outsl
call
bound
adc
cmp
push
cmp
adc
sarl
sbb
push
scas
addr16
add
jno
and
insl
test
cmp
scas
out
push
mov
sub
cmp
ja
mov
mov
xor
dec
fisttpl
notb
jne
lahf
cmpsb
jmp
popa
test
inc
iret
cmpsl
push
cmpl
test
xor
lock
js
adc
bound
stos
adc
lcall
dec
dec
ljmp
or
push
xlat
addr16
ljmp
insl
mov
jbe
push
xor
mov
or
test
dec
aad
jne
arpl
addr16
cmp
inc
cs
je
bound
imul
push
leave
xor
in
sub
testl
xlat
sub
shll
dec
add
cmp
out
or
cmp
xchg
pushf
insl
fisubl
jge
sbb
ja
sbb
adc
mov
les
cmp
ficoml
mov
jg
call
xchg
jl
leave
xlat
xor
adc
dec
repnz
mov
jno
idivb
cltd
leave
cmp
mov
imul
cmp
pop
imul
pop
sarb
gs
jno
ret
arpl
insb
xchg
pop
insl
mov
outsl
xor
pop
ljmp
jne
cs
pop
ret
iret
je
or
rcll
add
inc
loop
lock
fdivrs
xchg
xchg
cmp
outsl
and
inc
std
push
daa
mov
cltd
mov
sbb
and
xchg
pop
sub
mov
sti
insl
push
in
cmp
outsl
insl
sub
outsb
mov
mov
out
dec
addr16
push
jl
xchg
sub
mov
cmc
pusha
cmp
movsl
jmp
push
arpl
js
and
and
push
cmpsb
scas
sub
pop
cmp
mov
imul
bound
mov
test
mov
popf
mov
xor
mov
jb
push
addr16
jg
fisubrl
inc
jns
shrb
loope
mov
cltd
int3
popf
gs
push
mov
pop
pop
dec
mov
inc
outsb
test
outsl
xlat
xchg
push
push
inc
xchg
ret
movsl
and
roll
dec
sub
add
popf
and
insb
adc
xchg
add
test
adc
shll
mov
push
out
lcall
push
lock
aam
or
mov
mov
or
ret
mov
xor
stos
pop
sbb
dec
pop
mov
sbb
lahf
lock
cmc
xchg
sti
lock
fcomi
jo
or
enter
imul
sub
xchg
popa
pop
roll
sub
data16
loope
or
xchg
into
aad
add
mov
inc
inc
pop
sub
lcall
ret
xchg
ficoml
mov
mov
cli
insl
idivl
lahf
lcall
mov
cmp
add
lea
or
data16
and
shl
add
shrb
mov
cmpxchg
mov
xor
popa
mull
cmc
push
out
fsubr
jno
add
test
imul
add
movsl
outsb
popl
mov
icebp
and
pop
dec
negb
cmpsl
xchg
xor
jo
and
insb
sub
imul
ljmp
in
xchg
out
sub
and
outsb
lock
mov
mov
sub
and
xchg
negl
and
pop
ljmp
push
dec
add
push
sti
ljmp
es
mov
xor
dec
fsubr
mov
clc
sub
sub
int
dec
sub
lock
and
add
jmp
ret
sub
scas
aam
mov
clc
testb
pop
insl
adc
xor
and
call
sub
and
out
js
cmpsb
xchg
sub
inc
cmp
ret
xor
push
mov
mov
seta
mov
sub
fs
outsb
stc
mov
jp
jns
pop
mov
test
in
ffree
insb
push
sub
sbb
daa
and
and
jecxz
adc
push
icebp
loopne
into
push
es
lcall
sub
pandn
add
sub
push
cmp
fwait
sbb
jno,pn
xor
mov
push
ljmp
cmc
cld
test
int
out
shll
mov
je
sti
incl
loop
or
jnp
mov
stc
sub
add
push
insl
test
in
cmpsb
or
dec
out
mov
jo
dec
aam
into
jmp
pop
pop
mov
pop
sub
out
out
add
adcl
shrb
scas
mov
popa
imul
sar
sub
jg
xchg
sbb
jp
fldenv
in
adc
pop
sub
lcall
cwtl
test
test
frstor
xor
lods
sub
test
jp
sub
dec
outsb
jmp
xchg
fwait
testb
sbb
sbb
cvtps2pi
xor
rolb
enter
rorb
push
lods
test
dec
insb
pop
xlat
mov
add
mov
add
loop
adc
loopne
lods
sub
or
mov
loope
shlb
pop
pop
cmp
fstl
sub
insb
stos
dec
negb
sub
pop
lds
sub
imul
and
dec
sub
sub
int3
adc
test
jns
les
sub
mov
dec
popa
popf
iret
rcrl
and
and
mov
cmp
xchg
mov
sub
adc
out
adc
in
sbb
stos
sbb
andb
popa
outsb
sub
and
frstor
mov
out
lcall
mov
xchg
lds
loopne
mov
mov
out
fdiv
sub
aad
movsl
inc
sub
sub
xchg
ja
loopne
jle
inc
sub
fisubl
push
sub
faddl
push
sub
xorl
xor
in
fsubp
iret
cmc
jmp
mov
cmp
test
aad
xchg
int
repz
daa
push
orl
pop
shrb
xor
popa
test
push
fsts
mov
mov
xor
ficoml
hlt
sbb
fcomps
mov
sub
sub
out
nop
mov
jb
and
inc
mov
and
sub
mov
and
mull
out
push
sub
loop
aam
sub
mov
adc
sub
shlb
sub
pop
fnstsw
sub
scas
mov
mov
jbe
arpl
inc
pop
mov
pushf
add
lods
ds
loopne
ljmp
inc
sub
mov
pop
push
inc
loop
daa
pop
les
lock
lcall
sub
pop
dec
mov
lret
jnp
test
insb
aad
js
inc
sub
popf
push
rorl
jb
cmp
push
aaa
mov
dec
daa
mov
lds
push
shll
xor
outsl
sub
shlb
aam
mov
stos
ret
stc
cmpsb
push
sub
add
mov
inc
and
movsb
and
dec
jmp
popf
mov
call
adc
mov
or
call
out
cltd
test
jge
fisttpl
sbb
jbe
test
jae
pop
dec
adc
mov
sub
shrl
xlat
or
hlt
pop
mov
xchg
imull
pop
jg
insb
loope
mov
mov
sub
xor
std
pop
pusha
sub
jle
hlt
inc
bound
xchg
and
nop
lret
sub
popf
mov
xor
test
jbe
sub
cltd
adcl
insb
sub
rcll
fldl
mov
or
out
jg
loopne
fnstcw
ret
or
jae
orb
pop
cmp
int3
sub
ror
mov
sub
shrl
in
dec
fdivl
mov
inc
mov
sub
fwait
inc
xor
negl
adc
adc
repz
sub
add
leave
mov
and
fiaddl
mov
sub
sbb
bound
jl
fmul
test
inc
daa
push
sub
mov
sahf
sub
add
push
hlt
push
cmpsb
aad
ljmp
fwait
push
arpl
mov
addb
cmpb
sub
pushf
or
sbb
fwait
lods
inc
sub
xor
jne
dec
cmpsb
cmp
out
sub
cltd
fnclex
lret
mov
cmp
cld
pop
sub
dec
xor
fdivs
shlb
and
lds
xchg
mov
and
jns
test
daa
cli
adc
loope
sub
mov
stc
jne
push
orb
mov
mov
in
insl
and
fiaddl
cmpsw
sub
mov
mov
inc
mov
sub
std
idivl
xor
test
paddsw
sbb
sub
popa
mov
std
stos
mov
sub
mov
out
push
repnz
sub
mov
sub
or
or
rol
jmp
lods
sub
nop
mov
sub
cld
mov
imul
cmp
sub
jecxz
out
fnstsw
inc
daa
pop
test
or
and
xchg
mov
scas
ljmp
ret
aad
mov
fmull
test
stos
sarl
sub
adc
mov
enter
sbb
dec
aam
sub
xchg
xchg
mov
mov
or
mov
inc
push
sahf
sub
shl
xchg
and
jbe
jl
and
addl
pop
ja
sbb
mov
push
mov
sbb
ss
xchg
loopne
mov
into
pop
jmp
loop
cmp
xchg
movsb
dec
imul
sub
xchg
or
call
inc
mov
lds
stos
lret
add
inc
hlt
lea
and
loopne
xor
shl
cli
xor
cmp
or
add
jnp
subl
push
stos
fsubrp
pop
or
fcmovne
lds
jno
sub
push
push
jmp
mov
and
in
pop
or
lret
dec
xchg
adc
pcmpgtd
mov
mov
mov
pop
gs
sub
stc
shlb
push
fiadds
arpl
pop
adc
mov
dec
xor
aad
addr16
or
add
pop
and
loope
mov
adc
sub
sub
addr16
cmp
lret
arpl
push
sub
test
je
ss
scas
movsb
cmp
jmp
xchg
pop
fdivs
sub
sub
jle
dec
pop
int3
push
push
jmp
pushl
lock
sub
andl
cmpb
out
add
pop
test
and
fwait
insb
sarl
sub
into
and
dec
or
inc
sub
mov
ja
dec
push
arpl
sti
sub
lea
dec
lock
outsl
jecxz
jge
gs
pop
mov
aad
cmpsl
mov
lcall
sub
mov
xor
mov
mov
js
sub
add
bound
clc
outsl
rol
cmpsb
repz
sarb
pop
or
dec
pop
sbb
xlat
mov
insl
xor
mov
cmp
scas
push
jp
or
fcmovb
ljmp
sub
or
and
push
xchg
lods
mov
jns
outsb
or
sbb
call
mov
sub
loopne
push
int
scas
bound
stos
dec
push
push
mov
data16
dec
fiaddl
idivl
cs
adc
ljmp
fimull
roll
pop
jo
ja
or
imul
dec
ljmp
push
loop
sbb
lret
jmp
xchg
mov
fidivrs
or
or
dec
sar
rorl
xor
outsl
push
xchg
sbbl
rcrb
push
daa
push
ret
stos
shlb
sub
lods
jmp
jne
icebp
loope
xor
mov
xchg
add
xor
jo
in
cmpsl
xlat
mov
add
repz
fisubl
dec
lcall
cld
lods
outsb
std
mov
dec
mov
and
xchg
dec
push
jno
lea
inc
adc
lods
push
aaa
mov
inc
dec
testb
mov
sub
loopne,pn
ds
mov
push
ja
dec
jne
push
push
push
sub
das
notl
adc
push
xor
lret
sub
mov
dec
mov
jb
xchg
inc
dec
dec
mov
pusha
mov
and
or
iret
test
bound
imul
mov
lcall
ror
push
sub
andl
popa
mov
imul
je
fildll
pop
inc
bound
bound
out
enter
push
mov
cmp
shll
mov
ss
pop
notl
insl
subl
ljmp
inc
hlt
jnp
sub
lods
mov
scas
mov
aaa
rcrb
push
and
mov
popf
cmp
or
fst
fbstp
push
aas
and
or
cmp
mov
pop
scas
inc
xor
push
outsl
insb
dec
xor
mov
ljmp
adc
mov
jnp
fldcw
mov
add
pop
pop
lods
jg
mov
push
cmp
pop
jl
test
adcb
cmp
sahf
in
jae
adcb
push
adc
out
popa
pop
add
stos
add
repnz
ret
push
xlat
sarl
or
inc
scas
push
insb
mov
adc
testb
popa
jne
fdivrs
push
cld
insl
jno
add
mov
repnz
js
mov
cs
shll
mov
lds
mov
aaa
or
fs
and
lea
mov
sub
fsubrs
test
jl
jl
dec
fcomip
cltd
cmp
lcall
jnp
sub
and
aaa
popa
in
mov
inc
mov
scas
sahf
push
adc
mov
xchg
aas
sub
cltd
mov
and
inc
pop
repz
gs
mov
mov
nop
movsb
ja
jg
pop
lret
aaa
pop
push
addb
ja
mov
inc
jmp
push
shrb
or
sbb
xchg
lea
xlat
fisubs
fwait
and
dec
popa
std
jmp
lock
mov
test
jb
mov
dec
lcall
push
iret
pop
in
xchg
inc
adc
jmp
sahf
cmp
xchg
mov
fs
cmp
or
adc
scas
and
inc
dec
scas
popa
lahf
jg
lahf
pop
push
sub
mov
cmp
xchg
jno
mov
in
xor
mov
dec
into
mov
push
add
push
dec
sub
insl
dec
icebp
inc
dec
jne
out
sub
inc
std
mov
stos
aam
outsl
mov
enter
xor
das
mov
jl
mov
dec
xlat
fsubrs
sarb
add
dec
xchg
jns
insl
gs
cmp
pushf
mov
xchg
or
mov
push
std
cli
jl
sub
scas
jmp
fmull
adc
and
xchg
inc
add
scas
sti
dec
add
xor
bound
mov
punpckldq
sub
dec
cltd
xor
push
jno
daa
call
and
add
mov
sbb
lcall
or
hlt
sbb
jecxz
arpl
or
jl
mov
ds
out
cmp
jg
push
jne
insb
scas
je
int
gs
adc
mov
sub
lea
je
inc
mov
pop
jge,pt
mov
scas
icebp
or
scas
cli
jp
jb
sahf
adc
imulb
push
out
in
add
xor
or
xchg
mov
jnp
jne
lret
jo,pn
mov
bound
adcb
inc
sbb
jp
pop
cli
imul
stc
and
jae
scas
dec
insl
nop
push
int3
outsb
leave
dec
push
add
out
inc
in
dec
fcmovnu
push
fwait
sub
pop
repz
lods
sbb
xchg
outsb
jo
ret
bound
adc
jle
xchg
stos
lea
dec
bound
push
ljmp
into
cmp
stc
and
xchg
dec
leave
mov
mov
test
or
lahf
xchg
and
orl
add
sti
gs
dec
inc
sbb
sarl
es
lahf
mov
leave
inc
sar
in
adc
xchg
dec
push
xor
mov
sbb
addr16
sub
stos
and
push
push
mov
xchg
cltd
bound
ds
test
arpl
call
push
idivl
push
pop
popa
jmp
push
bound
ret
pusha
ret
inc
push
xlat
popf
mov
sbb
xchg
adc
cmp
cmp
daa
andl
outsl
pop
cmc
xchg
add
push
daa
mov
int
shll
xchg
mov
cmp
inc
sub
fsubrs
mov
sub
lcall
dec
leave
mov
or
outsl
mov
push
jne
fyl2xp1
addr16
mov
ds
xor
stc
push
jno
mov
bound
rolb
mov
jno
push
mov
jno
sbb
xchg
add
sbb
mov
ret
xchg
and
adc
mov
xor
ds
and
cli
mov
xchg
iret
mov
sub
insl
adc
xchg
pop
lret
sub
lods
in
out
nop
insl
repnz
inc
push
and
cld
jnp
push
cli
leave
sarb
add
lods
push
push
in
adc
add
sbb
iret
jecxz
xchg
inc
sbb
push
rcll
ficompl
lahf
fiadds
dec
ljmp
adc
adc
cmp
fdivrp
lcall
mov
aam
addr16
adc
pusha
gs
xchg
subb
inc
pop
sti
pushf
in
push
mov
jb
clc
push
iretw
jecxz
outsl
iret
call
outsb
dec
ret
mov
lret
push
ror
stc
xor
mov
sbb
stc
test
adc
subb
int
sbb
xchg
stos
adc
bound
sub
cs
pop
pop
pushl
out
clc
sti
decl
push
or
dec
mov
data16
lcall
and
data16
mov
gs
push
in
bound
int
icebp
mov
mov
mov
xchg
sbb
push
xchg
pop
loope
popf
jp
pop
mov
push
dec
dec
int
aad
icebp
test
push
inc
and
repnz
or
outsl
stc
cwtl
inc
adc
lods
repnz
or
jne
jp
sbb
andl
xlat
or
mov
dec
sbb
sbb
pusha
adc
fstpt
fildll
ss
mov
sub
rcll
mov
ja
ficomps
xchg
fptan
addb
call
sub
gs
cmpsl
gs
in
cmc
adc
pop
jg
push
mov
jnp
lock
iret
jno
mov
add
scas
mull
xchg
lahf
mov
or
cmp
loopne
fldcw
adc
test
out
jns
adc
push
push
shrl
add
fisubrl
ja
pop
lcall
add
sub
adc
insb
incb
lcall
test
dec
cmp
mov
push
aaa
mov
dec
aam
sbb
or
je
mov
add
inc
mov
jns
adc
mov
cmp
andl
push
xchg
addl
pop
adc
push
inc
sub
dec
add
insl
push
arpl
sub
cmpsb
jp
mov
inc
xchg
std
call
add
cld
cmp
lret
and
movsb
lods
shrb
pop
mov
lcall
rorl
lret
iret
int
push
in
movsb
test
xorb
cwtl
and
lock
dec
test
divl
mov
fs
cld
xor
outsl
enter
xchg
in
js
fadds
test
lahf
inc
enter
jp
push
in
xchg
push
add
mov
pop
std
cmc
bound
pop
cmp
sub
lods
cmp
cmc
lods
push
lahf
mov
insb
movsb
loope
test
sub
and
xchg
push
inc
sbb
test
outsb
std
pop
mov
gs
xchg
sub
test
scas
pop
adc
out
push
fs
push
out
and
sahf
clc
cmpsl
popa
rcr
cli
mov
ljmp
fidivrl
pop
daa
nop
pusha
aas
xchg
mov
xchg
cmp
leave
idivl
nop
clc
adc
popa
mov
sbb
scas
test
xor
rorb
into
ret
pop
ficomps
test
lds
fnstsw
xor
repz
popa
andl
push
mov
sbb
xchg
or
mov
xor
sbb
sub
cmpl
dec
aas
sub
roll
test
bound
jle
aaa
sbb
into
pusha
xor
imul
aaa
push
sti
inc
xchg
mov
in
fsubl
fisubrl
loop
ja
mov
push
movsb
fiadds
jno
xorb
popf
dec
xchg
fxch
mov
adc
jecxz
popa
jg
adc
and
imul
dec
jns
call
loop
lods
mov
shrb
cmp
int3
xchg
push
cmp
stos
xchg
dec
ja
daa
push
inc
jo
test
cmp
add
testl
mov
jns
ficoms
jbe
jnp
add
jecxz
pop
out
in
insb
mov
popa
push
subl
inc
mov
and
and
cmc
sti
dec
imul
jne
mov
push
bound
pusha
xchg
mov
sbb
inc
inc
push
aaa
xchg
notl
pop
lods
push
clc
rcrb
std
inc
sub
jl
and
jbe
cmpsb
or
test
add
enter
rep
jg
mov
mov
frstor
daa
sub
xlat
int
fnstenv
dec
sbb
sub
push
add
bound
lahf
lods
cli
or
xchg
xchg
loop
xchg
popf
fstps
sub
adc
dec
and
rorb
mov
lods
in
movsb
xor
sub
mov
popf
and
lds
scas
cmpl
and
outsl
jo
jecxz
call
dec
pop
rclb
jge
jne
repnz
cli
add
sub
push
bound
and
pop
cmp
sbb
xor
outsb
inc
ss
in
clc
xchg
and
cwtl
es
popa
adc
sbb
sub
xchg
imul
mov
addb
int
sub
inc
fwait
xchg
stos
lds
jns
inc
sub
mov
lods
out
sub
cli
add
data16
adc
mov
and
sbb
or
insb
clc
sub
cmp
sub
arpl
ljmp
xor
push
jns
roll
sbb
jo
sub
dec
stc
movsb
fisubrl
or
test
outsl
jbe
mov
sub
xchg
dec
adcl
iret
repnz
xorl
pop
dec
repz
sub
cmp
sub
cld
and
lock
aas
inc
sub
movsl
lret
sub
jb
hlt
dec
mov
cld
and
fmuls
xchg
ret
adc
sub
aad
jl
pop
jno
ds
sub
add
imul
ret
fstl
inc
sub
subl
sbb
into
xor
dec
loop
ds
call
leave
and
cs
mov
dec
outsl
cmp
stos
sub
add
inc
xchg
push
jg
adc
sti
mov
and
mov
mov
fisubrs
pop
pop
xor
sub
sub
mov
jbe
sub
add
xchg
les
inc
cs
sub
fisubl
inc
out
jmp
mov
es
pop
andb
mov
jns
subl
sub
lds
ljmp
mov
mov
outsb
sub
les
cmp
lds
sub
push
jbe
lea
add
icebp
mov
mov
lret
sub
enter
sub
aas
ss
aam
test
les
dec
pop
sub
dec
xchg
sub
inc
sbb
outsb
aad
and
subl
sub
push
mov
les
sub
mov
sub
adc
cmp
sub
lods
in
add
lret
pop
mov
iret
cmp
sub
std
int3
sbb
mov
pop
pop
ret
mov
jne
sub
je
adc
xchg
mov
push
and
loop
lret
lods
and
loopne
fcomip
sub
dec
mov
jp
xchg
into
adc
lret
xchg
cmp
jo
js
adc
rcll
outsl
sub
mov
sub
test
subl
sub
pop
movsb
popa
iret
sub
mov
int3
pop
out
fcoml
test
insb
adc
xchg
pop
sub
enter
insl
inc
jl
fldcw
sub
pop
addr16
gs
jnp
xor
jb
and
pop
in
jp
inc
cmpsb
mov
dec
mov
sub
enter
sub
fadds
in
inc
sub
xor
fbld
sub
popf
push
ret
mov
mov
shrl
or
cltd
mov
mov
cltd
outsl
fs
loopne
sub
adc
dec
mov
and
pop
cmpsb
btl
mov
rolb
xor
mov
jno
es
mov
decl
sbb
mov
fsubp
jo
in
inc
in
sbbb
imul
xchg
rol
iret
sub
and
and
hlt
in
sub
sub
push
sub
insl
jno
loopne
nop
xorl
jo
mov
jl
sbb
push
in
lret
movsl
pop
pop
pop
add
jnp
sbbl
xchg
sbb
jne,pn
and
test
push
mov
inc
mov
loope
sbb
or
ret
push
inc
lret
xchg
or
jbe
add
in
mov
fnsetpm(287
sub
pop
mov
sub
mov
int3
fwait
sub
inc
cmp
adc
in
insb
sub
inc
jl
inc
sarb
jle
fdivrs
sub
jns
movsl
les
cmp
gs
sub
pop
push
ss
lret
dec
push
dec
daa
mov
cmp
aam
push
mov
mov
inc
sub
xlat
mov
pusha
iret
or
repnz
popf
xchg
mov
mov
sub
jnp
xchg
pop
dec
inc
insl
shrl
lcall
xor
mov
mov
sub
test
mov
shrl
dec
sbb
call
hlt
pop
out
pop
cmc
loopne
sub
add
push
add
sub
cmc
bndldx
sbb
mov
xlat
adc
roll
test
adc
fnstsw
sub
cmpsb
add
mov
movsb
call
subb
mov
cmc
mov
fsubrl
mov
fwait
shrl
sub
lret
fistps
push
inc
loop
fadds
cs
mov
js
popf
lods
pop
scas
and
stos
mov
sub
add
jae
jmp
mov
ja
sbb
cmpsl
iret
in
xorl
jnp
cltd
ds
pop
rol
pusha
sub
mov
cmp
hlt
sbb
std
xor
xorl
shr
dec
xchg
push
and
lahf
sub
mov
scas
mov
sub
in
outsb
sbb
pusha
cmpsl
xchg
inc
mov
add
push
or
sub
arpl
aas
jno
icebp
int
xor
mov
sub
ds
xchg
cmpsl
sub
leave
mov
pop
push
mov
in
cmp
mov
stc
loop
and
pop
insb
shrl
lock
clc
fldl
pushf
adc
add
arpl
cs
cmpsl
mov
int3
fstp
sub
xchg
sub
loop
add
dec
xchg
ret
adc
xor
jne
and
mov
mov
mov
dec
sahf
dec
push
lock
adc
ret
mov
sti
cmp
or
hlt
jo
cmp
roll
inc
cwtl
jle
dec
dec
xchg
lds
mov
jno
push
pop
adc
les
sbb
lahf
scas
sub
popf
add
xor
std
mov
xor
jge
stos
outsl
adc
sub
neg
pop
xchg
aad
mov
cltd
mov
inc
lret
clc
fst
out
add
int3
jne
xor
dec
xchg
mov
ljmp
out
stc
or
das
call
xlat
xor
fsubp
mov
push
sub
data16
stc
cwtl
xor
sbb
in
fmuls
mov
imul
sub
inc
pop
leave
repnz
jb
sub
arpl
pushf
aas
adc
mov
loope
clc
sti
pop
pop
frstor
inc
in
outsb
push
mov
mov
cmp
push
insl
dec
rcrl
inc
push
stc
jne
push
cs
mov
fstl
mov
xchg
dec
dec
nop
imul
xchg
popf
in
int3
dec
dec
aaa
mov
testl
pop
mov
sbb
adc
mov
fs
enter
sub
daa
sub
mov
into
xchg
adc
in
dec
loop
lock
insl
pop
movsb
daa
inc
jno
popl
and
leave
repz
aad
testl
cs
cmpsb
insl
mul
inc
xlat
xchg
sbb
push
cvtps2pi
xorl
roll
push
mov
shrb
and
xchg
pop
and
xor
insl
add
mov
je
aam
mov
cmpsb
lock
mov
in
push
loopne
lahf
outsb
and
push
push
xchg
mov
cmpsl
addb
adc
fimuls
rolb
cmp
mov
lods
mov
xchg
hlt
jecxz
push
cwtl
jg
and
fadd
fs
mov
mov
push
imul
push
pop
mov
cmp
dec
push
out
iret
mov
pop
xchg
pop
and
es
adc
xchg
les
cmpsb
insb
jne
push
push
push
sub
arpl
sub
mov
sbb
in
xor
rcrb
jns
fnstsw
aam
or
call
subl
testb
mov
scas
jbe
lods
rcrl
and
add
mov
les
add
add
cmp
and
ret
mov
es
movsb
inc
outsl
popf
mov
mov
or
push
in
sbb
and
lods
scas
cmpsl
mov
sbb
mov
push
mov
inc
bound
popf
cld
add
add
or
aaa
adcb
iret
mov
jp
gs
and
push
adc
dec
jmp
mov
and
xchg
mov
mov
int
inc
pop
xchg
mov
andl
int3
add
push
add
cmpsb
rclb
lods
shrl
xor
jno
loop
mov
sub
bound
enter
out
push
inc
xor
adc
clc
adc
enter
ljmp
jne
bound
inc
mov
cmp
leave
fmulp
jbe
push
sub
nop
sahf
push
outsl
jmp
add
popa
ljmp
cli
add
bound
mov
insb
popf
out
jg
xor
loop
xchg
push
adc
popa
fs
cmp
add
sahf
enter
push
icebp
int
int3
ret
add
imul
xchg
sub
inc
adc
push
add
cmp
ficoml
insl
cs
xchg
mov
fiaddl
mov
lods
pop
insl
outsb
fdiv
testb
xchg
and
ret
clc
das
bound
cmpsb
addr16
push
xchg
inc
iret
test
scas
push
pop
push
mov
outsb
shrl
ds
xlat
dec
mov
cld
lods
arpl
sub
mull
call
jnp,pn
push
out
mov
std
mov
in
test
iret
or
push
push
and
bound
add
leave
cmpsl
fistpll
push
test
inc
mov
ret
addr16
cmp
fidivrl
loopne
punpckhdq
pop
sub
inc
adc
cli
pop
pop
mov
or
inc
add
dec
push
dec
and
cmp
out
mov
inc
fcmove
loopne
jl
and
xor
cmp
or
lret
xchg
mov
mov
or
test
lea
xchg
test
jl
xor
test
arpl
rcrb
and
and
imul
addr16
notb
cli
loope
lea
mov
cmp
xor
sbb
pop
jg
fidivrs
sub
mov
pop
ljmp
sub
inc
ficoml
cmp
mov
repz
push
gs
mov
aas
nop
ffreep
sub
and
sub
loop
push
idivl
mov
pop
mov
jne
sbbl
add
push
addr16
mov
xor
adc
push
sub
gs
xor
push
sbbl
xor
test
popf
call
push
jle
adc
push
test
jp
frstor
rorb
dec
clc
mov
imul
outsl
dec
jp
fistl
xchg
aam
pop
push
push
add
dec
mov
sbb
add
dec
inc
popf
xchg
out
xchg
adc
test
push
loope
xor
mov
jnp
addr16
mov
filds
rclb
mov
jmp
xchg
les
test
pop
imul
test
leave
or
xchg
and
mov
mov
cs
push
test
imull
pop
in
js
out
shlb
loopne
lds
movsl
mov
in
stos
adc
int
cmpsb
sbb
jo
mov
or
adc
in
jmp
push
fmull
mov
js
jb
imul
arpl
or
or
jb
popa
stc
pop
mov
ret
mov
add
orl
inc
loope,pn
xchg
sub
sub
mov
xchg
divb
popa
push
cli
jmp
aad
push
dec
insb
mov
cmpsl
xlat
es
in
jl
mov
cmp
lahf
cmp
inc
mov
out
das
add
lcall
xchg
or
sub
push
dec
in
cwtl
sbb
jecxz
jo
rolb
xor
cli
xchg
push
and
xorl
shrl
inc
xor
aas
jne
outsl
orl
add
inc
mov
js
jno
or
or
popf
mov
inc
test
bound
fisubs
push
jge
cmp
sub
cmpsb
rcll
mulb
rcr
mov
dec
rolb
mov
sub
shll
xchg
sbb
jg
add
call
in
int
sub
fcoms
and
inc
cmp
popa
fidivrl
ds
arpl
bound
bound
xchg
or
and
inc
icebp
adc
jp
pop
ja
cmpsl
pop
insl
enter
daa
js
orl
std
cmp
iret
fmuls
stos
jmp
inc
scas
rclb
cmp
test
jmp
rolb
call
cs
clc
out
jae
leave
jo
mov
lret
jle
test
shll
add
inc
adc
push
pop
addr16
popa
lahf
xchg
jmp
pop
sbb
mov
inc
jae
sub
lahf
dec
fcmovnbe
add
mov
iret
jl
add
addr16
sub
jg
xor
bound
popa
scas
jne
dec
xchg
and
sbb
sbb
jmp
inc
mov
bound
lret
lds
mov
popa
jb
pop
push
push
and
cmp
adc
cmp
lods
and
inc
shlb
sti
and
mov
nop
in
mov
inc
mov
in
push
imull
dec
dec
push
cmpsl
mov
ret
mov
loopne
lods
filds
test
mov
adc
leave
xchg
xor
gs
in
mov
addb
fisubrs
cmpsl
js
sarb
and
sarb
lahf
fisubl
mov
push
ljmp
into
adc
and
bound
dec
jge
int3
xchg
fldcw
xchg
jne
jb
mov
bound
rcrb
and
es
jge
ja
sarb
stos
mov
or
xor
lds
iret
mov
mov
mov
mov
jnp
inc
imul
fldcw
test
sbb
out
fstpt
stc
stos
mov
leave
and
test
or
jmp
out
lcall
mov
aad
fbstp
mov
sub
inc
mov
les
cli
pop
out
fisttpll
xlat
jns
and
push
test
jmp
mov
jbe
mov
shlb
bound
fdivs
jae
insl
cmp
sub
cli
jecxz
les
push
push
std
adc
mov
dec
outsb
pop
cmc
mov
cmp
mov
dec
stos
push
aaa
sbb
inc
or
mov
sbb
cmpsl
repz
cmpb
or
ljmp
and
or
xlat
lods
xlat
lea
inc
jmp
or
pop
or
shlb
inc
sub
inc
popf
gs
push
jg
jl
repz
xchg
sarb
pop
jmp
outsb
sbb
mov
test
jo
enter
lahf
ja
jp
add
jb
nop
imul
loopne
sbb
int3
push
jno
test
mov
add
cs
jl
sub
inc
arpl
or
xchg
aad
xchg
push
cld
push
out
xchg
aas
xchg
div
test
push
mov
jo
loope
jae
ret
stos
jnp
dec
cmp
and
lcall
xor
sahf
inc
add
jge
cs
sbb
xchg
sbb
mov
dec
clc
arpl
add
xchg
test
roll
movsl
and
pop
pop
ljmp
fs
xchg
mov
js
imul
outsl
loopne
cmp
test
ret
sub
jne
ret
push
cmc
out
insl
popa
dec
mov
leave
add
mov
ret
daa
imul
sub
pop
shlb
sbb
sub
out
aam
mov
cmc
outsb
mov
ficompl
add
push
aad
or
hlt
inc
jne
pusha
or
add
add
leave
or
add
dec
mov
jno
push
ret
mov
add
notb
ficompl
dec
in
push
adc
rcr
add
mov
outsb
ret
cmp
jmp
popl
lcall
and
and
pop
test
or
out
sub
roll
xchg
xor
jmp
cmp
dec
bound
movswl
mov
xchg
cmp
and
out
je
adc
imul
bound
in
adc
loop
pop
and
inc
jo
pop
cli
jne
jae
mov
daa
pop
daa
outsb
jecxz
add
push
cmp
pop
ret
add
cmpsl
fcomp
lock
xchg
cltd
fsubs
fstpt
xor
movsb
jbe
icebp
inc
lahf
insb
push
sub
xchg
push
addr16
in
fiadds
mov
dec
arpl
call
xor
stos
push
mov
shrb
pop
scas
loopne
fwait
popf
add
outsb
std
into
add
jno
repnz
pop
mov
cmp
push
outsl
shlb
sub
push
int3
xor
mov
outsl
pop
cmp
popa
fs
dec
fcmovnb
cwtl
mov
popf
idivb
push
ja
cmp
bound
pushf
outsl
stc
out
pop
das
test
or
aad
push
add
arpl
pop
daa
cs
test
jge
xchg
ljmp
add
push
pop
fadds
into
or
sbb
cmp
popa
imul
ds
sub
mov
dec
dec
or
and
inc
fwait
add
pusha
loope
notl
in
aas
pop
arpl
cmp
out
mov
mov
mov
scas
into
lock
mov
pop
push
or
bound
jae
inc
iret
gs
popa
mov
pop
sub
push
push
or
out
popa
push
add
bound
xchg
scas
xchg
int
jno
push
int
and
mov
adc
jo
jno
leave
out
jae
push
test
sub
repnz
push
pop
add
xor
mov
lods
arpl
call
jbe
and
xchg
cmp
cmp
lods
xlat
pop
mov
lcall
cmc
jbe
sbb
cmp
push
mov
dec
mov
mov
movsl
mov
pop
adc
cltd
push
dec
add
insl
pop
cwtl
xlat
in
push
sbb
outsb
jge
scas
clc
ja
aaa
nop
lcall
shlb
es
inc
mov
xchg
cwtl
push
or
push
push
neg
pusha
outsl
bound
dec
loopne
push
or
insb
mov
jge
pop
test
push
test
dec
jmp
push
test
inc
lcall
sti
cmpsl
pop
ds
outsb
repnz
mov
mov
ret
cmc
daa
out
sbbl
fdivs
inc
jg
mov
jo
jb
dec
filds
mov
in
aaa
popa
leave
push
and
in
push
dec
andb
inc
cmp
addr16
movsl
mov
lret
xorb
pop
lahf
imul
stos
fs
leave
mov
popa
inc
test
and
rcrb
clc
psubb
cmpsb
scas
or
add
cmp
cmp
add
repz
insl
push
sbb
sub
test
xchg
rcl
jp
mov
xchg
cwtl
icebp
sub
divl
shll
push
ss
inc
and
es
xor
clc
and
sbb
out
sub
outsl
sbb
xor
iret
test
or
mov
jge
notl
add
jno
xchg
jecxz
in
bound
jl
addr16
fsts
mov
fildll
sarb
call
movsl
mov
dec
mov
shll
jmp
inc
dec
push
leave
shll
pop
sti
orb
mov
sub
jnp
out
mov
adc
cmp
fsubs
in
inc
insl
negb
sub
push
out
dec
add
shlb
fadds
dec
mov
xchg
cld
fists
xchg
rorl
insb
lcall
mov
fistps
repz
mov
out
xchg
in
adc
lahf
imul
sub
and
adc
andl
add
les
push
mov
mov
jne
xor
jb
inc
pop
cli
add
pushf
adc
push
js
xlat
lods
cltd
jp
sub
push
scas
xchg
and
inc
notl
rorb
je
cmp
jg
psrad
gs
shrl
negl
jmp
dec
loope
leave
stc
shl
shrl
loope
outsb
idivb
push
stos
daa
mov
push
or
out
popa
popa
push
out
fldl
or
mov
call
sub
or
or
jp
clc
mov
sbb
push
int
test
add
xor
icebp
bound
mov
xchg
cs
push
outsb
mov
xchg
fwait
bound
jecxz
push
das
pop
xchg
mov
dec
in
adc
addr16
push
or
test
nop
mov
stos
jne
cs
in
cli
bound
cmp
stc
ja,pt
fmuls
lea
mov
pop
jl
lods
outsb
mov
mov
jns
or
or
jae
scas
ss
daa
lods
outsb
cmp
mov
mov
stos
mov
push
out
add
cwtl
xchg
adc
pushf
or
es
repnz
cmp
xor
jne
sbb
pop
or
lock
cmp
js
jmp
mov
stos
outsb
xchg
rclb
repz
clc
dec
popf
call
jb
dec
flds
popf
fsubrs
arpl
loopne
add
loop
stc
jne
xchg
jns
mov
push
jnp
inc
mov
jnp
and
sub
stc
sub
in
jne
sbb
into
stos
sub
jl
in
push
stos
and
add
and
outsl
and
aaa
adc
sbb
arpl
inc
adcb
mov
int3
cmp
cmpsb
push
cli
test
test
jg
pop
mov
cmp
lahf
jo
push
xor
or
icebp
pop
aaa
pop
bound
testb
arpl
lahf
in
test
cmp
sub
fst
in
rcrl
fstpt
icebp
int3
sub
imul
addr16
xchg
leave
lret
fidivrl
insb
add
xor
add
pushf
sbb
cmp
out
or
inc
aam
adc
sbb
ds
int3
cmp
and
cmp
andb
add
or
or
jnp
cmp
in
xchg
xchg
int3
popa
adc
pop
jle
out
cmp
mov
imulb
lock
shl
cmp
leave
popl
jl
sub
cmc
lcall
or
mov
addr16
mov
jecxz
push
add
dec
mov
imul
add
sbb
mov
push
aam
xchg
mov
pop
call
cmp
in
mov
sbb
pop
inc
idivl
adc
or
rolb
bound
scas
stc
mov
jg
sub
stos
test
out
lahf
cmp
jle
mov
scas
dec
popa
hlt
sarb
mov
fidivl
ja
pop
and
aaa
test
lds
rclb
loope
aam
inc
je
and
bound
pop
xor
test
push
negl
gs
imul
or
or
outsb
lret
rcrl
lea
fimuls
jg
push
lea
andb
pop
cmp
ds
pop
enter
mov
inc
je
add
lods
sahf
fisubs
cs
cltd
or
dec
nop
and
dec
adc
pop
idivl
and
fmull
mov
cmp
push
lock
cmp
and
out
add
imulb
pop
push
mov
mov
push
out
push
xlat
repz
out
mov
dec
int3
nop
sbb
scas
cmpsb
int3
xor
insl
loop
cmp
or
adc
lock
xor
cmpl
push
add
dec
sbb
lods
mov
in
mov
jmp
and
jp
pop
add
or
add
bound
rol
add
mov
stos
xlat
popf
push
shl
movsl
in
into
in
and
out
lock
iret
lods
lcall
xchg
and
push
cmpsl
cmpsb
jg
jle
pop
xchg
js
rcrl
pop
mov
xchg
fnstenv
pop
or
push
scas
adc
dec
jg
sub
stc
aas
sub
jmp
rorl
lcall
xchg
jl
jno
jno
int
mov
clc
add
jae
popf
mov
mov
xorl
insl
jg
inc
pushf
bound
lds
lahf
push
aas
loopne
std
sbb
cmp
inc
dec
mov
nop
fwait
mov
out
outsb
jmp
mov
out
sub
sub
jne
mov
and
push
sub
clc
jbe
loope
dec
cltd
cmp
rorb
fidivrl
loop
sub
inc
in
test
lock
add
xor
mov
imul
cwtl
lahf
loopne
faddl
out
xchg
test
notl
cmp
lcall
xor
and
jns
jecxz
ja
sub
test
std
push
sub
jae
repz
mov
mov
sbb
jne
int
add
push
mov
and
stos
jge
cs
push
les
leave
xlat
nop
bound
ret
or
add
sbb
jne
jns
dec
imul
scas
push
jne
insb
sbb
mov
adcb
repnz
orl
mov
lret
mov
cmp
fnstsw
push
adc
or
mov
int
push
outsb
sub
sbb
test
cld
pop
int
lea
mov
dec
test
mov
add
add
push
jo
sub
lock
push
pop
push
scas
adc
cmpsl
lods
adc
adc
iret
test
enter
sbb
pop
fstl
fisubrs
repnz
jno
fwait
mov
insb
cwtl
popf
jae
repz
and
inc
lock
filds
imul
push
rorl
jmp
fcomps
andl
into
outsb
cmp
aas
push
stos
xor
andb
das
fisttps
jge
push
xchg
add
leave
call
out
jge
push
ret
clc
xchg
pop
xor
or
data16
jmp
fbld
jle
loopne
mov
mov
push
xchg
out
add
pop
fucomi
mov
pushf
jb
add
mov
ret
movsl
movsl
xchg
hlt
in
sub
mov
sbb
addr16
cmpsl
push
test
shlb
sub
xchg
stc
mov
jp
inc
cmpl
xor
push
push
sahf
pop
add
sub
add
push
sub
imul
cmpsl
call
jb
mov
xor
insb
xchg
pop
sub
roll
xchg
cld
ja
pop
sti
push
stc
push
lahf
xchg
xchg
ret
dec
mov
imul
aas
cmp
test
add
sti
adc
xchg
sbb
push
cmp
or
imul
inc
push
roll
mov
mov
sti
mov
imul
mov
pop
rorb
pop
ficoml
or
in
gs
push
orb
push
andl
cltd
pop
cmc
orl
dec
fcmovb
clc
sub
and
stos
adc
leave
cmpsb
jmp
mov
imul
sub
mov
mov
mov
adc
jns
lret
fwait
inc
lea
push
out
arpl
push
out
xor
xor
dec
mov
jnp
je
xchg
mov
aad
jmp
fidivrs
test
inc
xchg
xchg
dec
mov
sar
shl
rolb
push
pop
xchg
enter
or
leave
shrl
pop
pop
or
add
or
jae
cmpsl
sahf
jl
leave
push
mov
cmpsb
clc
out
push
lahf
pop
outsb
dec
pop
sub
in
mov
in
cmp
iret
mov
adc
adc
loop
xchg
inc
scas
mov
mov
arpl
xchg
rcrb
jns
fwait
aad
push
test
sbb
bound
sbb
lcall
inc
xchg
add
test
push
fwait
or
jle
popf
pop
add
dec
rcr
int
rorb
std
imul
rcrb
jo
push
mov
push
lods
sahf
mov
cmp
call
loope
lods
cs
mov
mov
rorb
mov
stc
mov
leave
push
push
mov
jge
lret
sbb
mov
sbb
outsb
dec
pop
fstpl
dec
pop
xchg
or
jbe
test
sti
in
insb
jbe
aas
sub
lahf
sbbb
jmp
inc
test
mov
loop
sbb
div
cmp
mov
jge
ror
data16
jae
push
incl
dec
jle
xlat
cmp
stos
xchg
gs
mov
mov
lret
iret
jno
add
insb
and
sub
ja
das
jge
leave
ret
mov
out
cmpps
push
leave
in
or
and
dec
outsb
scas
std
bound
test
xchg
and
xor
add
xchg
jno
cwtl
mov
push
fwait
pushl
dec
jae
insl
cmp
out
int
stc
push
sbb
inc
in
ret
push
loop
sub
add
push
out
push
dec
das
lcall
gs
mov
mov
das
movl
mov
xchg
addr16
mov
popa
lret
fmuls
stos
je
ret
cli
mov
popf
xor
leave
daa
scas
and
addr16
xchg
sti
push
lret
add
mov
jp
insl
fdivs
subb
cmp
imul
out
and
dec
insb
pop
popf
das
rorb
subl
movb
push
leave
cli
or
cmc
fsubp
bound
ja
daa
jbe
iret
mov
adc
clc
test
xchg
sub
bound
mov
movsl
add
cmp
rolb
clc
sub
mov
andb
dec
pushf
adc
sub
xor
pop
sarl
loopne
mov
sub
adc
enter
jne
aam
fdivr
gs
hlt
scas
or
jns
pop
mov
pop
cld
sub
sub
add
cmp
mov
mov
xor
int3
insl
push
mov
xor
roll
pop
mov
out
push
sub
ja
dec
pop
sub
push
cmpsb
jae
cmp
add
and
pop
adc
sub
adc
pushf
and
add
roll
dec
sub
mov
into
call
sbb
insb
jae
jg
insl
in
popa
sub
rcrl
adc
inc
pop
addb
sub
sahf
mov
or
push
mov
in
xchg
cmpsb
subl
clc
pop
xchg
push
sbb
and
sub
addr16
sub
pop
mov
sub
movsl
in
pop
fisttps
dec
and
jmp
and
sbb
cmc
pop
sub
jne
pop
push
sub
mov
adc
into
and
sahf
xchg
pop
xchg
call
fistl
cmp
out
repz
and
lods
sub
and
push
cmpsb
filds
and
and
push
sub
inc
mov
sbb
ret
imul
xchg
outsb
cmp
xchg
leave
xchg
rclb
int
scas
sbb
outsl
mov
adc
dec
lcall
cmpsb
pop
nop
and
or
ret
adc
and
push
sbb
jle
repnz
shl
mov
xor
push
dec
into
sub
jg
out
hlt
add
or
test
mov
mov
gs
int3
cmpsl
psrlw
jmp
jnp
push
ret
cmpsl
mov
xorb
push
idivl
stos
ja
shlb
push
sahf
jae
nop
adc
mov
dec
outsb
aad
mov
fldt
lahf
je
cmp
or
shlb
jecxz
jg
cmc
dec
leave
pop
pop
add
mov
inc
mov
loope
outsb
scas
fisubl
xchg
decl
adcl
pop
js
xchg
or
push
cld
lods
or
add
pop
xor
scas
or
add
mov
mov
clc
sbb
fwait
jecxz
in
outsb
add
mov
jno
ret
stos
popf
popa
leave
notl
roll
cmp
std
xchg
repnz
xchg
incb
push
gs
mov
in
jb
icebp
pop
pop
outsb
inc
xchg
iret
xchg
mov
pop
cld
cs
inc
cwtl
je
mov
out
mov
mov
pop
lds
sbb
pop
lcall
dec
pop
sub
popa
repz
lea
insl
ljmp
cmp
mov
add
jnp
jno
inc
push
mov
and
lock
lods
dec
xor
call
cmp
sub
cmpsb
sub
mov
push
lock
cmp
mov
mov
mov
fsubrl
adc
sbb
cmp
push
dec
xlat
test
popa
jo
xor
push
push
xchg
ljmp
or
jmp
addr16
movsl
or
nop
jns
cmp
in
push
sub
pop
add
cwtl
popa
test
test
push
jge
leave
mov
or
inc
or
push
sub
xchg
enter
sbb
dec
andl
push
push
stos
cmp
icebp
dec
outsl
inc
jne
push
ficompl
repz
dec
mov
lahf
mov
adc
idivb
pop
adc
mov
cmpsb
popa
dec
inc
pop
test
and
push
xchg
ret
out
or
call
mov
dec
fcoml
stc
jl
pop
bound
test
mov
jmp
mov
inc
insb
sbb
in
fdivs
decl
xchg
roll
jmp
or
cli
mov
lahf
bound
orl
leave
scas
xor
jbe
pop
push
ljmp
lcall
push
ror
cli
mov
lahf
cmp
or
cmp
test
in
bound
loopne
adc
clc
in
ds
insl
push
icebp
mov
out
or
inc
sub
cs
mov
stc
add
lods
adc
adc
cmp
adcl
ficompl
aas
lock
adc
add
mov
mov
jns
sub
mov
push
outsl
icebp
or
add
shl
popf
imul
ret
pop
push
cs
and
mov
lock
iret
mov
bound
and
push
lock
fistpl
cmpsl
xchg
sar
adc
repz
sbb
ret
ret
jo
in
add
mov
ret
lcall
lahf
mov
sti
mov
cmp
out
pop
sub
inc
ja
adc
lahf
lret
mov
mov
cltd
pop
add
jmp
or
js
or
mov
add
and
icebp
xchg
lahf
and
mov
sarl
shrb
test
cmpsl
jns
xchg
inc
dec
mov
js
ret
jp
enter
and
call
push
cmp
in
and
into
mov
mov
jo
pop
pop
outsl
mov
ret
cwtl
scas
divb
sub
pop
xlat
xor
pop
jno
iret
sbb
lret
sub
xor
rclb
mov
dec
imul
into
xlat
jmp
daa
and
shll
xchg
cli
sbb
or
xchg
aaa
mov
inc
or
call
jno
gs
jg
jo
mov
loope
cld
mov
cs
data16
mov
xchg
or
xchg
leave
jo
inc
loop
dec
dec
mov
aad
mov
jne
iret
mov
mov
add
or
lret
cwtl
repnz
aad
popa
mov
xorl
xchg
or
push
mov
sub
pop
iret
add
ds
pop
mov
jno
pop
dec
dec
push
mov
dec
cmc
lahf
adc
outsb
lods
scas
leave
pushf
pusha
lods
test
les
js
xchg
xchg
jecxz
pop
outsl
orl
inc
std
dec
rcrl
push
dec
jg
sub
mov
dec
xor
cmpsb
and
mov
mov
inc
lret
lea
popa
jns
in
arpl
movsl
cli
dec
inc
xchg
shll
pop
lea
enter
fisttpl
mov
inc
int
call
lahf
inc
rcrb
jo
lret
repz
mov
jae
out
call
pusha
lods
and
popl
lods
mov
outsb
dec
sti
dec
loop
fs
xchg
mov
pop
mov
bound
push
pusha
arpl
ljmp
pop
cmc
sahf
test
loopne
fdiv
mov
popf
int3
scas
nop
lock
dec
xor
inc
call
sub
leave
xchg
pop
rcll
ds
pop
jmp
loope
and
xchg
popa
inc
lcall
mov
adc
and
fwait
je
mov
lcall
ret
mov
daa
pop
mov
orl
pushf
mov
ret
pop
popa
push
out
int
daa
pop
popl
push
lret
clc
add
mov
fs
into
adcb
insb
jg
cmp
push
pop
stc
pushf
dec
add
insl
jb
int3
rclb
dec
iret
subl
push
xor
jle
outsl
repz
pop
nop
pop
pusha
cmpsl
lods
movsl
xor
push
jne
arpl
mov
stc
stos
dec
bound
jle
mov
push
mov
xchg
or
hlt
imul
push
add
sbb
jo
add
xor
inc
mov
cli
mov
nop
cld
imul
inc
imul
cmp
and
xor
mov
popa
mov
jno
xor
cmc
imul
add
fcmovbe
adc
mov
in
and
inc
xchg
notl
mov
iret
subb
push
adc
and
iret
roll
pop
xor
rcrl
xchg
or
cmpl
iret
rcrb
mov
ds
outsb
pop
iret
pop
shlb
clc
mov
add
mov
or
push
xor
js
ljmp
jmp
pop
push
pop
cs
cmp
imul
mov
lods
xchg
push
outsl
ss
cmp
ret
sub
pop
jg
int3
xor
xchg
xor
cmp
push
mov
mov
mov
imul
arpl
in
icebp
mov
xor
into
daa
dec
xlat
bound
lea
push
and
lret
xchg
aad
or
add
or
sahf
dec
sub
xor
and
les
and
leave
adc
popf
add
dec
fsts
jo
stos
rcll
lds
adc
popf
xlat
add
test
popf
lcall
pop
sub
outsb
test
inc
dec
les
gs
out
arpl
inc
add
add
arpl
sahf
cmp
mov
int3
sub
ret
cmpsl
cmp
stc
inc
sub
xor
push
cwtl
addl
ja
adc
lea
negb
test
into
movsl
clc
pop
out
sbb
imul
cltd
sub
dec
leave
shrb
mov
or
mov
addr16
or
sbb
out
xchg
mov
pop
mov
loopne
xlat
clc
or
mov
enter
jg
loop
in
push
jmp
mov
mov
push
jne
adcb
pop
xchg
aam
xor
inc
popf
insb
cmp
cmpsl
sub
std
lret
xor
fcoml
addl
cmpsb
cmp
repz
jno
fists
jne
cmpsl
in
test
clc
ficoml
xchg
mov
dec
pusha
negl
bound
or
dec
aas
dec
negl
int
pop
ret
push
lret
roll
cmpsl
insb
lahf
xchg
arpl
shll
push
mov
stos
sub
clc
xchg
sub
cmp
pop
xor
or
aaa
inc
or
in
xchg
push
lds
lahf
pop
jno
mov
and
outsb
mov
lahf
pop
fnsave
les
rcl
fadds
mov
mov
jl
mov
xchg
dec
jb
sub
pop
fldcw
sub
outsl
inc
sub
jno
mov
outsl
or
mov
cli
mov
xchg
shrl
cld
out
pop
int3
andb
sbb
and
jle
sarl
call
fnstenv
cmp
and
sarl
sbb
push
nop
pop
fwait
popa
lret
pop
gs
jb
sbbl
fs
adc
xor
cltd
outsb
adcl
cmp
or
pop
pop
xor
ret
ret
cwtl
fists
in
lock
popf
and
outsb
inc
jmp
adc
inc
or
outsb
adc
popf
push
imul
sbb
aaa
bound
xadd
push
sub
mov
mov
pop
data16
jmp
pop
and
or
inc
mov
dec
add
push
shlb
mov
inc
add
arpl
mov
call
cmp
shlb
inc
pop
bound
xlat
or
xchg
mov
call
xchg
iret
sub
daa
sub
inc
push
push
pop
mov
cmp
mov
loopne
fcoms
out
and
xor
push
or
into
imul
int
push
pushf
data16
dec
pop
dec
mov
pop
mov
cli
jno
inc
push
push
shll
push
movsb
addr16
sbb
sub
in
sbbl
and
aad
push
fadds
or
hlt
jecxz
lods
add
cwtl
leave
movsl
nop
or
sbb
adc
xchg
daa
inc
shrb
mov
mov
adc
aas
cmpsb
pop
xchg
rcrl
cmp
adc
movsb
stc
in
xchg
mov
push
mov
lock
mov
fsubrl
bound
adc
aad
in
je
test
adc
xor
cmc
mov
popf
xchg
stc
gs
aaa
dec
jmp
mov
lods
in
outsb
xor
xchg
js
pop
jns
cmp
push
clc
cmp
dec
in
insb
inc
xchg
push
or
push
fidivl
pop
cmpsl
cld
inc
jno
lret
mov
cmp
pusha
popa
and
push
lea
jmp
cmp
addr16
xchg
out
dec
popf
aam
repnz
or
jecxz
test
mov
sarb
cltd
push
or
mov
and
push
cmp
and
call
inc
push
cmpsl
dec
jp
les
jae
inc
icebp
inc
in
pop
add
xchg
mov
mov
cld
imul
nop
fstps
cmp
jmp
jge
shlb
xchg
repz
mov
jne
cmp
dec
adc
xchg
test
sbb
xlat
js
mov
bound
pop
push
jmp
repz
popf
push
mov
inc
mov
lea
pusha
ret
dec
push
faddl
sbb
adc
pushf
cs
cmc
adc
sub
addl
push
mov
xchg
insl
cmp
movsl
inc
sbbl
and
cs
frndint
jo
add
xchg
popf
push
enter
test
mov
pop
mov
push
stc
insl
sub
pop
out
jp
rcl
jae
jg
repz
call
jp
adc
call
xchg
fadds
mov
push
mov
cs
out
out
or
fisubrs
inc
jg
dec
es
mov
mov
fstps
and
fisttpl
inc
call
rolb
jb
and
pop
sub
push
xor
inc
ljmp
rclb
cmpsl
outsb
ret
xchg
bound
push
insl
lcall
dec
rcll
push
dec
in
cs
jo
shll
add
mov
cwtl
fdivrp
daa
mov
push
push
push
negl
pop
inc
dec
sub
bound
sub
lods
push
pop
iret
fs
rcrb
jmp
outsb
jne
add
clc
push
sbb
xor
sub
test
out
repnz
outsb
gs
pop
iret
icebp
mov
gs
sbb
mov
mov
int3
xchg
int3
add
cmp
pop
cmpsl
sub
shlb
or
sub
cld
mov
mov
xlat
push
mov
xchg
insl
mov
mov
push
fmul
outsb
iret
test
xchg
adc
loope
daa
ja
jb
cld
in
pop
mov
or
mov
push
push
test
and
cmpsl
bound
mov
sbb
mov
cmp
cs
adc
sub
and
and
cmpsb
or
loopne
out
clc
popf
dec
add
xor
pop
stos
sub
cwtl
loop
cltd
cs
mov
dec
ret
into
pushf
sub
or
inc
jge
sbb
adc
test
ret
sub
inc
repz
mov
jecxz
mov
sub
jmp
rcll
inc
mov
sub
loopne
fimull
adc
call
sbb
jge
jecxz
xor
xchg
adc
stos
cs
mov
orb
inc
in
sub
mov
mov
ja
adc
sub
dec
test
sub
lods
mov
push
xchg
stos
pop
sub
jae
int
xchg
daa
mov
dec
dec
xor
and
rcrb
ljmp
and
sub
push
fmull
xchg
add
in
sub
pushf
xchg
sub
cld
adc
sub
xchg
mov
push
and
sub
adc
test
aam
cmp
sub
je
cmpb
mov
stos
enter
es
mov
test
imul
stos
sub
subl
aas
call
data16
push
test
xor
sub
imul
and
cmp
lahf
sub
dec
in
sub
and
sbbl
outsb
lcall
stos
lahf
repnz
test
or
cli
sbb
add
sub
rol
push
addr16
sub
push
bound
shr
mov
add
ss
xor
cmp
or
lods
push
pop
cli
or
sbb
ja
adc
sub
inc
vaddsubps
in
mov
xchg
dec
pop
lret
sbb
stos
mov
jne
jb
addb
xchg
in
popa
sbb
repz
pushf
add
cmpsb
jne
call
ljmp
and
cmp
aad
imul
xchg
ja
stos
sbb
popa
or
jle
or
rorl
jns
lea
jnp
jae
jg
dec
cld
mov
mov
gs
xchg
cmp
or
and
lret
sbbl
dec
xor
mov
push
mov
or
callw
jp
fsubrs
aam
pop
pop
pop
pop
insl
push
push
or
gs
out
leave
ficompl
mov
lock
outsb
or
shrl
mov
pop
cwtl
in
mov
hlt
xchg
push
bound
xchg
jecxz
mov
or
idivl
insl
pop
out
xchg
add
pop
lea
add
add
lock
jge
ljmp
ret
sbb
in
add
add
lods
mov
xor
xchg
push
and
sub
aad
push
test
fisubl
aaa
lahf
jmp
cmp
jb
bound
les
xor
jno
cmp
fstps
bound
addr16
cmpsl
jp
movsb
lea
sub
iret
adc
iret
jne
mov
add
iret
xchg
or
sbb
repnz
mov
dec
out
or
hlt
js
xor
mov
xchg
jbe
adc
rclb
inc
iret
imul
cmp
xchg
in
mov
arpl
push
xchg
pop
sbbb
adc
mov
mov
jno
lods
bound
mov
pop
or
ljmp
in
or
ret
adc
std
fstpl
mov
arpl
add
xor
bound
out
inc
rcll
or
inc
adc
mov
mov
addr16
outsl
shrb
push
faddl
mov
leave
push
or
daa
or
in
jmp
xchg
ret
icebp
dec
cmp
push
outsl
sub
popa
gs
xor
dec
mov
cmp
add
popa
rorl
rolb
mov
xchg
cmp
adc
mov
imul
cwtl
xchg
repz
nop
sahf
pop
es
push
shl
add
dec
xchg
or
int
push
es
cli
mov
ret
int3
xor
pushf
fidivl
inc
pop
push
pinsrw
push
inc
add
mov
jnp
mov
dec
in
iret
outsl
xlat
push
jne
movzbl
rcrb
jno
sahf
out
or
in
outsb
fistl
fadds
jno
loopnew
in
ret
lret
sbb
aas
sub
aam
or
add
popf
sub
ss
fmulp
clc
mov
outsb
adc
scas
add
push
loop
inc
pop
jge
rcll
mov
mov
lock
and
loopne
aam
aam
inc
test
fidivl
dec
mov
sbbl
loope
test
dec
xchg
lods
sub
not
into
cmc
xchg
push
bnd
mov
or
cmp
push
mov
fadds
and
mov
push
push
mov
mov
fdivs
add
push
test
dec
mov
bound
aam
shrb
rorb
dec
jne
call
sub
sti
cs
enter
mov
adc
mov
icebp
insl
pop
nop
movsl
or
lahf
imul
in
mov
nop
mov
inc
scas
stos
push
inc
clc
repz
repz
and
sbb
out
je
jp
mov
sbb
fwait
adc
xor
movsb
in
dec
lock
daa
xchg
ret
add
insb
mov
in
mov
jb
push
sub
add
cmp
xchg
gs
push
scas
idivb
std
test
out
or
int3
pop
mov
mov
popf
test
push
sti
into
sbb
clc
jnp
popf
mov
in
lods
cmp
sbb
xchg
sub
test
inc
mov
or
mov
push
bound
push
lret
add
ja
ds
dec
and
jae
push
icebp
jo
repz
cmc
add
mov
pop
bound
sub
lds
pusha
stc
stc
or
jno
lahf
outsl
mov
push
jmp
cltd
jns
sub
adc
movsb
pop
mov
push
outsb
movsl
iret
cmp
icebp
xor
loop
out
sti
pop
or
lret
sbb
cmpsb
push
pusha
outsl
xchg
cmpsb
test
cwtl
stos
xchg
dec
pushf
lock
xchg
sub
mov
leave
cmpsl
sbb
inc
fstpl
sub
cmp
push
ja
cmp
ds
xchg
xor
ljmp
jle
mov
addr16
mov
test
push
ja
mov
inc
add
add
sbb
fisubrl
sti
sbb
sahf
addr16
fistpl
sbb
or
inc
sub
int3
xor
lret
pop
mov
insl
or
cmp
or
xchg
daa
arpl
jecxz,pn
sub
int3
les
cwtl
roll
mov
idivb
xor
out
mov
and
or
stos
adc
or
pusha
into
push
dec
xlat
or
mov
fwait
dec
lret
adc
push
movsl
ss
insl
or
enter
add
and
and
cmp
xchg
loopne
jmp
add
or
push
sub
push
pop
les
mov
cmpb
and
xchg
loop
or
cmp
mov
xchg
stc
ss
push
dec
xor
or
shrl
xchg
mov
andb
call
imul
sbb
stos
sbb
addr16
aaa
mov
push
inc
mov
sarb
stc
imul
call
xchg
xchg
sub
adc
cmpsl
jbe
pop
pushf
pop
adc
push
out
leave
xor
or
cld
shl
jae
fiadds
jno
xchg
cmp
scas
jne
inc
push
js
mov
inc
cltd
shll
push
xlat
adc
neg
int3
jns
dec
jl
push
pop
xchg
jmp
mov
inc
cmp
pop
adc
int
daa
inc
loopne
mov
sti
fistpll
add
cmpsl
xchg
xchg
leave
imul
adc
lea
fiadds
out
pop
adc
sti
sub
cmp
cmc
test
sbb
imul
add
pop
sub
add
and
rorb
ja
aam
icebp
sub
test
inc
dec
mov
jecxz
daa
enter
mov
jns
and
ss
xor
mov
fbstp
std
shrl
mov
sub
fsts
or
imul
and
fists
sbb
insb
dec
icebp
packuswb
sub
cmp
sbb
clc
jmp
pop
push
mov
xor
fsubrl
ljmp
scas
jge
xlat
cmpsb
dec
aam
fmuls
hlt
loop
shrb
sub
jnp
sub
lds
loop
cmpsl
sarl
bound
mov
sub
loopne
adc
sti
daa
pop
repnz
xlat
sub
or
push
dec
sub
lods
fs
int
cmp
and
mov
data16
int
scas
lret
mov
sub
hlt
les
imul
stos
sbb
int
test
mov
popf
sub
scas
push
xchg
xchg
sub
xor
in
pop
dec
ss
lods
movb
and
push
mov
and
into
sub
mov
lcall
sub
lods
cli
xor
xor
shrl
mov
das
push
mov
and
push
sub
dec
jecxz
xchg
sub
stos
cs
sub
pushf
cmp
dec
sub
bound
arpl
and
lret
sub
or
pop
dec
sbbl
mov
and
test
in
cwtl
mov
aaa
jbe
or
adc
gs
fnsave
cli
loope
or
js
xchg
or
insl
pop
aad
bound
test
sub
popf
adc
js
xchg
dec
ret
and
jb
clc
push
shlb
fcomi
addr16
fdivp
inc
fnstenv
jg
loop
add
shll
sarb
dec
push
xchg
jo
cmpsl
lds
sbb
fnstsw
cmpsb
sub
mul
add
dec
dec
aam
jb
sub
orl
jmp
sub
cs
repnz
cli
dec
int3
cmp
sub
shll
out
scas
cs
mov
test
outsb
fadds
leave
or
cwtl
pop
adc
bound
std
push
outsb
cmp
test
jne
loopne
sub
bound
xor
cmc
push
dec
les
pop
dec
ja
sti
push
and
add
jnp
cld
fsubrs
and
idiv
add
adc
aas
cmpsl
in
orps
outsl
add
clc
lea
ret
and
pop
sub
mov
mov
sbb
xchg
xchg
jns
cmp
cmp
jo
shrl
lock
or
mov
xchg
sub
lods
mov
and
mov
push
inc
push
js
rorb
sub
xlat
push
call
ficompl
outsb
je
or
imul
aad
bound
fdivrl
jbe
shl
cmpsl
cltd
push
repnz
loopne
add
add
sub
xchg
xchg
jmp
push
mov
pop
fisubrs
xlat
jne
adc
lea
jno
test
std
fwait
ret
scas
mov
lcall
popa
mov
loopne
cmp
mov
sbbl
test
lods
clc
xor
in
mov
add
fnstcw
cmp
and
loop
ret
jnp
in
call
stos
mov
add
repnz
xorl
sbb
mov
lock
xchg
arpl
cmp
lret
iret
cli
arpl
jecxz
mov
pop
dec
cld
pop
data16
add
xchg
jb
inc
fwait
jnp
dec
xchg
xor
pop
sub
dec
fiaddl
mov
lods
test
lds
int3
add
insl
jae
ret
std
sbb
mov
int3
jo
setae
rorb
fimuls
lock
xor
inc
ficoml
jmp
add
inc
pop
xchg
int3
or
les
push
pop
cmp
push
jnp
test
push
or
gs
ljmp
ja
pop
int3
adc
mov
mov
and
sti
mov
test
sbb
push
sub
test
insl
out
ficoml
cld
push
xor
mov
mov
jecxz
pop
in
loope
sti
or
inc
int3
rcrb
cmp
xor
xchg
lock
call
add
xor
aaa
lods
push
add
nop
inc
push
lahf
push
jne
jg
inc
mov
jo
sbbl
jg
xor
gs
bound
push
mov
stos
xor
mov
fs
sbb
add
mov
inc
sub
mov
or
xor
mov
cs
pop
jno
lods
hlt
sahf
sbb
cmpsb
or
pushf
push
pop
inc
xchg
xor
jg
call
and
add
add
cmc
ss
pop
add
or
daa
push
leave
pop
cmpsl
int3
and
jl
subb
test
loope
test
mov
cmp
mov
jno
pop
pop
in
push
jl
outsb
sub
jne
xchg
or
jmp
sbb
xlat
es
data16
aam
mov
aas
leave
fs
push
push
fsubrl
mov
inc
lcall
and
dec
push
sar
jmp
push
mov
mov
push
test
loopne
loop
adc
jbe
popf
mov
and
imulb
into
int3
xchg
dec
jl
insl
lcall
cmpsl
clc
arpl
add
popa
les
mov
ljmp
sbb
lds
push
test
dec
cmpsl
jae
sbb
jmp
mov
push
stos
fwait
leave
sub
push
addr16
sub
lods
cli
push
cmpl
mov
imull
jns
inc
insb
inc
sub
push
adc
nop
dec
movb
data16
ret
xlat
ret
outsb
out
add
and
cld
out
je
mov
mov
testb
sub
mov
cmp
js
fwait
xchg
add
xchg
push
loop
pop
dec
rolb
adc
jmp
sbb
xor
push
mov
js
test
cmc
andb
lahf
js
pop
outsb
mov
mov
push
lret
test
xlat
das
dec
movsl
xor
jecxz
sbb
aad
inc
and
je
sti
push
sub
sub
pop
leave
fstps
repz
insl
pop
cmpsb
push
push
jbe
int3
push
std
xchg
in
cmp
mov
cmpsl
sahf
popa
insl
pop
sub
xchg
mov
mov
outsb
pop
fs
sub
leave
adc
push
jg
lret
or
add
int3
jl
sub
jmp
lret
and
cmpsl
mov
xlat
cmp
ljmp
jbe,pt
mov
nop
lea
mov
jne
dec
mov
lock
jl
sub
xchg
pop
inc
sbb
xlat
filds
imul
sub
sub
jns
sarl
and
mov
iret
dec
call
clc
adc
mov
outsl
fidivl
dec
loop
ja
insb
fcompl
lcall
leave
idivl
xlat
outsl
sub
jnp
rcrb
cs
enter
outsl
xchg
pusha
jg
add
jg
popa
cmp
or
sub
outsb
jo
jae
jp
mov
jecxz
lea
repnz
jnp
sbb
or
jnp
and
mov
push
lock
bound
ret
loope
jl
mov
movsl
in
test
rcl
xor
jns
insb
sbb
dec
xor
loope
or
dec
inc
test
dec
js
sbbl
push
rcr
xchg
int3
mov
icebp
addr16
stos
arpl
sub
cltd
xchg
sub
cmp
lds
lret
inc
pushf
xchg
dec
outsb
pop
pop
out
fsubl
or
je
fistpl
in
gs
popa
xlat
mov
out
iret
fmuls
jle
in
mov
dec
lret
or
pop
lods
in
push
ja
cli
push
and
idiv
push
add
jmp
xchg
test
or
mov
fwait
test
repnz
rorl
adc
or
cs
mov
iret
test
ja
ljmp
push
insl
jo
imul
pop
add
xor
addr16
shrl
inc
aas
add
add
push
bound
aam
into
imull
cmp
jg
out
loope
mov
sub
fcomi
aad
xchg
scas
bound
stos
sbb
clc
mov
clc
pop
shrl
sub
leave
mov
hlt
adc
icebp
mov
outsb
adc
ds
mov
dec
test
subb
cmpsb
cmp
mov
mov
dec
add
bound
fldl
mov
mov
add
outsb
sub
mov
and
stc
data16
add
out
cwtl
ja
test
adc
and
shll
aam
adc
cmp
call
jnp
out
adc
mov
stos
call
lds
leave
pop
push
lret
push
sub
sub
imul
dec
daa
pushf
cmp
sub
jnp
jp
jmp
stc
adc
std
std
mov
fmull
mov
sbb
mov
jge
mov
addr16
std
bound
mov
shr
jb
in
mov
loop
pop
pop
pop
fistpl
daa
hlt
inc
xor
push
andb
push
shrl
mov
or
jmp
pop
pop
lret
mov
in
mov
mov
test
arpl
in
sub
outsb
or
push
sti
jb
inc
mov
insl
and
bound
popa
push
mov
out
pop
or
mov
arpl
pop
dec
ret
mov
lock
and
jno
rcrl
xchg
orl
cli
call
bound
push
cld
pusha
and
inc
and
lock
cli
pop
addr16
in
adc
sbb
inc
movsl
xor
cwtl
loopne
out
jns
jo
mov
sub
mov
push
int3
imul
pop
hlt
push
int
ret
mov
jp
lods
xchg
sub
imul
xchg
arpl
aad
xchg
sub
xor
and
jle
sub
and
iret
cmp
sahf
mov
sub
dec
push
in
repnz
sbb
ja
sub
call
xchg
mov
scas
cwtl
xor
and
add
mov
mov
inc
jg
sub
fstl
jb
ljmp
out
pop
push
daa
pop
mov
iret
sub
jge
mov
imul
jl
mov
testb
cmp
push
jp
sub
dec
jne
and
mov
ret
push
sub
mov
int
in
xchg
daa
mov
pushf
sub
cld
push
and
sub
jae
or
aad
or
sub
ljmp
das
add
repz
cwtl
mov
testb
push
scas
clc
rclb
adc
xor
and
xor
mov
pop
sub
cs
xchg
std
adc
or
xor
push
sub
notb
fs
sub
jle
jmp
sub
sbb
hlt
repz
hlt
scas
xchg
movntq
test
mov
out
sub
cmp
pop
int3
sub
jp
xorb
sahf
inc
cmp
lods
xchg
or
sub
xchg
lret
pop
fdivs
xor
sub
addr16
mov
sahf
hlt
mov
push
popa
adc
test
xchg
sub
loop
aad
sub
adc
sub
mov
sub
shl
pop
mov
sub
cmp
rclb
dec
mov
aam
lret
xchg
lds
mov
push
lock
outsl
add
stos
and
in
mov
sub
xor
add
cmpsl
mov
inc
imul
js
mov
mull
clc
lds
dec
sbb
fsubrl
subl
stc
gs
sub
mov
sbb
repnz
xlat
in
jne
cmpsb
jmp
loope
xchg
cmpsl
aam
ret
adc
test
dec
es
mov
xchg
jnp
sub
push
dec
jmp
xor
push
sub
cli
mov
sarl
mov
iret
decb
ds
push
sbb
sbb
sub
sub
xor
sbb
jne
rol
inc
dec
fcoms
stos
inc
jae
pushf
or
sub
dec
ja
imul
or
sub
in
xchg
jns
adc
sub
pop
push
into
sub
fldcw
mov
jno
push
mov
jecxz
push
jmp
mov
bound
sub
loope
aas
aam
cmpsb
test
loopne
add
jg
dec
lods
push
nop
or
mov
stc
les
call
out
jne
sub
fbld
mov
mov
sub
lahf
mov
xchg
js
jg
mov
cmp
movsl
mov
leave
add
scas
push
scas
adc
cld
sub
xchg
shl
inc
xor
test
pusha
or
push
cmpsl
sub
clc
ss
adc
dec
call
jo
add
xorl
out
out
imull
in
xchg
je
mov
and
stos
das
fs
sub
pop
popf
xchg
push
sub
repnz
fmull
jl
sbb
jae
imul
sub
mov
jl
in
mov
arpl
sub
sbb
cmpsb
stc
dec
mulb
xor
daa
sub
sub
in
scas
push
cmp
sub
icebp
into
popf
sbb
sub
es
jno
popf
add
adc
sbb
sub
pop
adc
fwait
notl
sub
inc
lods
std
push
cmpsl
shrl
into
mov
mov
jecxz
sub
mov
mov
mov
lret
lods
loop
mov
xchg
iret
pop
mov
cmpsl
mov
sub
les
sbb
adc
push
mov
int
sbbl
cli
sub
jge
je
sub
popa
out
xchg
cvtps2pi
test
fldt
int3
pop
inc
loope
test
mov
sahf
and
gs
jp
stos
mov
lea
je
xchg
mov
movsl
sub
leave
add
sub
out
sti
test
stos
in
xorb
lea
and
dec
enter
je
sub
faddp
xchg
jbe
scas
cmp
imull
roll
sub
fsubl
cmp
push
inc
ds
inc
pop
sahf
mov
push
les
mov
hlt
push
adc
or
sbb
push
sbb
mov
xlat
cmpsb
lds
sahf
out
scas
sub
mov
lea
stos
and
flds
lock
pop
push
cld
jp
pop
mov
aaa
push
adc
sub
nop
scas
sub
push
jmp
repnz
out
je
iret
sub
int
cmp
stos
lcall
es
jl
pop
mov
sub
jne
push
in
sub
loope
inc
sub
gs
jns
hlt
or
fs
ja
sub
testl
jo
cmpsb
sbb
xor
adc
sub
pop
push
add
cmp
sbb
xor
out
fmuls
sub
xlat
pop
inc
inc
pop
imulb
leave
sarl
ljmp
subps
xor
cmp
xor
int
lret
dec
mov
jae
cmp
sbb
enter
sub
out
or
sub
lahf
cmp
call
mov
aas
push
push
sub
mov
jge
loop
push
test
arpl
sub
xchg
pop
dec
sub
and
mov
sbb
push
jb
out
pop
cld
cmpl
imul
add
adc
or
mov
mov
sbb
sub
sbb
sub
callw
sub
adc
push
testl
add
cwtl
dec
dec
sub
frstor
enter
sarl
fs
or
adc
outsb
imull
sbb
imul
sbb
sub
mov
sub
xor
outsb
sbb
pusha
dec
sub
out
lret
insb
data16
mov
sub
inc
mov
dec
enter
sub
ds
dec
aas
jne
aam
lods
jae
and
xchg
dec
mov
mov
int
sbb
jns
sti
in
xchg
clc
push
adc
dec
fs
xor
and
push
fwait
sub
ret
in
adc
lods
sub
int3
add
mov
adc
repz
daa
xor
and
je
sub
ds
mov
int3
iret
fisubrl
add
xlat
out
mov
adc
mov
imul
sub
adc
push
dec
add
or
xchg
repnz
cld
js
imulb
pop
mov
int
cld
jl
sub
in
repnz
pmuludq
mov
stos
cld
in
sar
jns
cltd
sub
bound
ljmp
pop
int
addr16
mov
sub
in
sub
add
lods
mov
data16
mov
aas
mov
sub
pop
jbe
out
cmp
pop
je
cs
mov
sub
and
jbe
push
insl
test
loope
fisubs
arpl
bound
inc
jge
sbb
push
outsb
jno
int
add
insb
aam
arpl
ret
add
push
sbb
js
std
cmp
pop
es
aam
cld
mov
pop
and
mov
jnp
aam
dec
pop
ret
shll
sub
pop
shlb
out
xor
loop
xor
addr16
cs
jecxz
jp
fistpll
outsb
mov
jl
stos
and
cmc
dec
stos
dec
pop
pop
adc
subl
outsb
xchg
jo
mov
xchg
sub
mov
xchg
in
cld
out
jbe
clc
dec
jo
cs
rorb
xchg
mov
loope
dec
imul
jg
push
mov
adc
roll
fnop
lret
dec
pop
xor
adc
xor
mov
sub
xchg
lods
pop
bound
xor
xchg
push
xlat
add
mov
in
cmpsb
fiadds
cmp
out
shll
rcrb
xchg
divb
adc
arpl
enter
movsb
fs
gs
jg
or
mov
sbb
cmp
mov
ljmp
mov
sbb
fwait
lahf
add
xchg
push
adc
jbe
jp
mov
or
push
shr
outsb
xchg
xor
adc
lret
push
xor
dec
inc
add
fcomps
xorl
xchg
xor
clc
xor
jns
in
jg
mov
imul
xor
outsb
shlb
pop
jle
fstpt
in
shrl
data16
mov
or
stc
popf
inc
sub
inc
ja
cli
mov
mov
stos
sbb
dec
dec
sbb
fldt
push
xchg
push
cmp
or
mov
popa
or
fadds
push
xchg
add
xchg
adc
jae
imul
cmp
and
std
cmp
aam
xchg
jne
sti
pop
cli
jmp
xlat
and
or
fs
outsb
mov
sbb
and
cmp
xlat
lods
cld
ret
insl
dec
ljmp
cmp
lea
jg
clc
push
or
jo
shrb
xchg
fldt
push
add
mov
mov
mov
push
adc
pop
add
push
insl
lcall
mov
push
test
lods
sbb
pop
pop
dec
add
out
testl
fildl
outsb
out
jg
jnp
push
addr16
dec
mov
mov
mov
add
leave
jecxz
fmuls
mov
shr
adc
outsb
pop
lods
lcall
cmc
test
insl
int3
add
pop
in
aam
push
inc
jnp
test
addl
mov
imull
test
repz
lcall
mov
push
iret
mov
mov
aad
mov
fsub
test
sbb
cltd
test
sbb
bound
aad
cmpsb
push
xor
pusha
pusha
mov
out
push
cmpsb
pop
cmp
jge
xor
testl
cld
push
les
out
bound
jle
stos
push
or
jns
lahf
int3
push
mov
lea
ja
jno
in
jecxz
out
bound
cltd
out
ja
fmulp
mov
xchg
aam
cli
fidivrs
es
stos
jge
jnp
and
cmp
jge
mov
pop
test
repnz
fcomps
mov
ja
cmpsl
inc
negl
call
inc
cmp
push
stos
or
and
outsl
jno
pop
cmp
je
sti
mov
push
movsl
jle
icebp
cltd
and
or
cmc
mov
or
mov
sub
add
jmp
add
push
mov
subb
sbb
jmp
sbb
xor
xlat
cmp
add
jp
inc
push
sub
dec
push
sti
jno
sbbl
ret
pop
sub
dec
mov
xor
mov
add
int3
loopne
test
hlt
xlat
and
roll
cmpsb
jmp
pop
sbb
cmp
scas
cmp
mov
mov
outsb
jb
mov
xchg
mov
dec
movsb
mov
push
push
mov
push
xor
mov
out
xorl
sub
cmc
add
lret
hlt
sub
aaa
sub
xchg
xchg
adc
jle
fs
test
cs
mov
sub
xchg
jne
fadd
and
daa
mov
sub
fiadds
mov
xor
sbb
in
sub
mov
add
dec
cld
sbb
push
sub
xor
loop
sbb
test
out
sub
jge
cmp
push
je
xor
inc
int3
fildll
add
xchg
scas
and
xchg
mov
lret
je
enter
pop
pop
mov
xchg
dec
sub
sub
adc
ds
mov
int
lods
jne
mov
iret
cs
cmpsb
mov
push
jo
sti
je
sub
cmp
fnop
and
test
insl
adc
hlt
cmpsl
push
ja
cli
mov
aad
jbe
es
stos
clc
sub
adc
imul
inc
neg
xor
adcl
aad
popa
sub
push
loop
divb
inc
ljmp
cmc
jp
lods
mov
add
sub
rcl
popa
sub
orl
ss
add
sub
sub
test
pop
pop
pop
mov
or
out
sub
ror
and
stc
push
xchg
das
out
leave
inc
jmp
mov
test
movsl
sub
pop
push
push
ret
shll
mov
xchg
mov
push
xchg
fsubl
aam
adc
mov
andl
mov
inc
pop
mov
das
push
mov
push
mov
in
aas
and
pop
mov
fwait
inc
es
add
lcall
loopne
adc
stos
push
mov
mov
add
je
pop
cld
sarb
leave
add
push
adc
jg
adc
cmpb
loope
cmpsl
mov
push
adc
push
xchg
push
adc
add
jb
lahf
cmpsl
jp
loope
adc
test
out
lods
mov
bound
or
rcrl
add
dec
lods
mov
cmc
outsl
cmpsl
es
jg
push
inc
pop
xor
sub
push
mov
lds
iret
sub
outsl
mov
cmp
mov
dec
mov
dec
sti
pop
adc
ds
into
cmp
pop
add
lea
add
xchg
in
mov
fsubrs
adc
push
outsb
es
and
and
ds
mov
shlb
add
out
xchg
pop
gs
fsubp
rol
mov
pop
pop
mov
cmp
or
jl
xchg
mov
mov
in
outsb
sub
mov
and
jecxz
insl
hlt
jo
xchg
mov
icebp
or
out
enter
mov
repnz
push
outsb
cwtl
mov
lret
adc
repz
shll
ja
scas
adcb
clc
sti
fs
xchg
stos
insl
add
or
lods
adcl
mov
push
mov
sbb
imul
bound
in
push
jl
add
js
lock
push
ljmp
inc
inc
pop
mov
add
notb
mov
adc
sbb
jns
add
ds
mov
insl
cs
cld
mov
cli
fsubs
int3
sub
sub
outsb
adc
sub
sahf
shr
call
pop
add
loopne
mov
ds
jg
fmuls
pop
pushf
lcall
cltd
cmp
fldl2e
and
out
jl
mov
cmp
pop
pop
mov
lcall
and
sti
mov
pop
ss
jecxz
inc
jno
shl
clc
std
lcall
mov
cwtl
aas
add
ljmp
push
repnz
jns
das
push
outsb
orb
shl
sbb
loope
sub
mov
std
notb
xchg
out
sbb
push
bound
pushf
fdivrs
or
insl
push
xchg
or
or
js
mov
push
dec
and
xor
mov
sbb
popf
push
inc
imul
arpl
pop
xchg
enter
fiaddl
jno
sbbb
out
mov
test
xchg
rolb
sbb
adc
add
popf
popa
stos
adc
gs
push
movsb
xchg
rclb
pop
mov
mov
mov
cltd
dec
bound
push
lock
lahf
arpl
cld
ret
dec
out
jg
sbb
xchg
jnp
loope
mov
fldenv
jmp
push
iret
adc
mov
push
inc
and
imul
xchg
icebp
jnp
bound
cwtl
int
mov
and
in
jbe
sub
mov
mov
outsl
in
test
jmp
push
or
es
outsb
test
mov
adc
fdivl
imul
push
dec
icebp
popf
push
imul
lods
pop
fisubl
repz
dec
sub
and
dec
scas
lahf
bound
sbb
fsubs
push
in
sti
push
shrl
xor
inc
push
pop
test
bound
pop
xchg
lea
pop
mov
cli
data16
and
or
out
movsb
mov
inc
and
add
rep
xor
push
lods
dec
inc
cmp
outsb
cmp
lret
outsb
adc
mov
adc
mov
int
adc
in
push
inc
inc
jb
insb
out
jmp
cmc
ja
aad
mov
push
lcall
arpl
pop
loop
xchg
dec
scas
mov
popf
or
leave
rcr
xorb
xchg
mov
scas
lea
inc
adc
mov
out
adc
pop
mov
inc
sar
bound
cmp
fs
jne
insl
push
xchg
push
repz
cmp
or
mov
decl
cmp
lret
outsb
nop
out
out
ret
fwait
mov
idivb
mov
sub
fdivr
sub
nop
or
cmpsl
out
and
cwtl
inc
dec
mov
movsb
mov
outsl
lods
and
roll
cltd
aam
mov
fimuls
in
or
imul
lock
sub
std
mov
mov
outsb
cmp
mov
loope
stos
cmp
or
fidivrl
adc
jmp
outsb
daa
out
lds
and
add
mov
xor
mov
mov
pop
xchg
push
xchg
xor
aam
push
cmp
or
add
loop
pop
out
and
mov
fsubrs
push
adc
ds
push
sbb
call
sti
pop
cs
add
add
mov
int3
mov
dec
bound
icebp
shlb
pusha
jmp
push
adcl
mov
aaa
ret
ljmp
or
stos
rorb
movsb
jle
adc
dec
and
fidivl
rclb
call
arpl
stc
push
xchg
mov
out
fisubs
ja
ljmp
push
add
mov
sti
mov
push
add
xchg
cld
lret
mov
mov
aam
add
cmp
jg
std
mov
ja
inc
inc
xchg
jo
ds
ret
pop
bound
cmc
push
movsl
popf
mov
arpl
fimull
mov
mov
fdivrp
hlt
jmp
inc
in
xchg
pop
inc
jg
push
outsb
ljmp
cli
cmp
outsl
into
xor
mov
inc
or
xchg
sbb
and
push
jo
xor
test
jl
mov
imul
rclb
adc
lods
dec
outsb
cmp
cli
outsl
pop
xor
data16
push
xor
xor
lahf
inc
test
mov
ja
cmp
aam
add
sub
stc
pop
repz
mov
jnp
xor
and
fxch
popf
call
bound
cli
mov
inc
adc
xchg
repnz
test
mov
aaa
roll
js
fsubrs
sub
xchg
lret
cld
jg
push
rcrb
ja
bound
fldt
adc
fisubs
ret
cmp
mov
iret
pmuludq
rcrl
push
add
or
pop
push
pop
stos
fisubrl
in
out
mov
fiaddl
aaa
je
push
push
sub
ss
lds
icebp
popf
add
lods
aam
mov
cld
pusha
xchg
push
pop
add
mov
insl
insb
lea
out
or
mov
inc
sub
add
and
gs
imul
fimuls
add
sbb
jo
jbe
or
xchg
or
and
test
pop
inc
fadds
adc
cld
sub
fidivs
mov
sbb
test
or
add
fsubrs
xchg
push
cmc
ja
push
test
mov
shlb
rolb
sub
loop
test
cmp
ja,pn
inc
lret
cmpsb
dec
orb
popl
outsb
inc
push
jnp
sub
loopne
add
inc
sub
push
lea
add
bound
pop
or
stc
ret
cmpsb
call
jo
cmpsb
and
and
and
hlt
push
xor
out
inc
cmp
push
mov
imul
enter
mov
repz
fbstp
inc
outsb
jl
mov
inc
xchg
mov
popa
pop
lret
cmpsb
inc
push
lea
mov
out
push
sub
mov
sub
fdivrp
ficoms
ljmp
cmp
cli
dec
test
push
mov
int
cmp
pop
mov
dec
in
scas
jl
sub
int
addr16
pop
cmp
testb
mov
iret
adc
iret
pop
adc
lahf
dec
push
pusha
ret
and
pop
aad
dec
mov
shrb
cltd
mov
xorl
pop
mov
orb
hlt
fisubs
jmp
jns
orl
lds
rcll
fwait
data16
dec
bound
cld
pop
push
aad
outsb
gs
mov
xchg
pop
push
adc
leave
lahf
and
mov
sbb
aas
jno
lret
mov
test
stos
add
jae
inc
movsb
sub
mov
in
jp
adc
hlt
lds
sub
repz
pop
add
jmp
insl
stos
dec
mov
sub
inc
xchg
je
sahf
mov
lods
ljmp
lods
and
xor
sub
or
xchg
lcall
mov
xchg
jne
adc
jns
cmpsl
inc
sub
xchg
pop
mov
stc
into
ja
adc
fiadds
and
push
push
aad
adc
mov
loope
and
sub
mov
jle
sub
mov
pop
fidivrl
fs
pop
jecxz
xlat
push
jmp
cli
fstl
xchg
push
mov
imul
fs
stc
push
adc
fsubs
sub
xor
push
subb
and
and
mov
dec
fbld
cmp
in
mov
sub
mov
mov
add
adc
sbb
sbb
pop
icebp
or
test
clc
and
es
test
mov
sub
gs
das
lds
leave
scas
mov
rcr
subb
loope
sarb
sub
aam
push
lock
mov
ja
sub
aam
rolb
dec
aaa
jns
div
call
xchg
sub
loope
fisttpl
xchg
aam
push
push
or
jne
imul
hlt
xor
sub
out
adc
lcall
nop
sub
ret
imul
mov
sbbl
daa
xor
out
mov
orl
loop
into
and
scas
push
xor
pop
popa
xchg
sub
and
test
pop
stc
inc
sub
mov
jae
mov
loopne
daa
inc
adc
sbb
negl
mov
sub
pop
lods
xor
push
les
fnstcw
mov
out
push
pop
cmp
orb
cmpl
mov
mov
push
adc
push
xchg
fldcw
sub
sub
sti
mov
lea
jle
in
add
add
insb
xor
inc
aad
xchg
sbb
shlb
xchg
push
push
sub
pop
xchg
inc
and
dec
cld
jns,pt
cmp
mov
sbb
call
repz
xor
int
and
mov
outsb
sub
lock
mov
int
imul
cmp
jbe
or
loopne
push
sub
imul
xchg
sub
sub
out
clc
dec
leave
sub
das
hlt
jae
xor
inc
xor
cmc
and
and
arpl
stos
pop
and
popa
mov
pop
sub
dec
flds
mov
sarw
pop
mov
sub
jecxz
inc
pop
sub
cmp
push
mov
aad
push
andl
cs
sub
test
cmp
cli
sub
lods
xchg
out
mov
test
imul
push
dec
mov
xor
pop
jp
daa
orb
sub
mul
sub
lds
or
mov
jo
ds
or
out
movsl
sub
pop
mov
adc
and
or
xor
sbb
rcrb
and
in
stos
and
cld
push
stc
repz
addr16
movsb
fisubrs
dec
mov
into
sub
out
leave
sti
cld
cmp
syscall
xchg
push
sahf
gs
call
in
addr16
daa
fstps
mov
mov
dec
insl
out
sub
out
add
adc
lock
push
subl
sub
pop
add
movsb
jmp
out
sub
js
push
add
cltd
enter
sub
pusha
mov
inc
xor
ffree
xor
daa
aad
test
scas
sbb
pop
pop
std
jno
sub
in
push
int
jne
inc
mov
mov
arpl
xchg
and
movd
dec
nop
fs
mov
and
jge
adc
mov
inc
loop
sbb
add
lret
xchg
cmp
xchg
mov
xor
push
ficompl
mov
scas
push
push
loop
addr16
in
ss
xor
out
test
mov
loop
into
push
sub
sub
subb
cs
pop
sub
xor
adc
mov
push
mov
test
cs
fs
push
and
mov
or
out
cmp
add
daa
aad
stos
sub
aam
push
sub
pop
inc
test
sub
inc
lret
dec
and
add
push
cmpsl
fbld
jbe
cmpsb
pop
jecxz
jge
es
loopne
call
daa
outsb
lret
push
fadd
mov
pop
jae
push
call
cmp
sub
cmp
mov
ficoms
sub
ss
mov
in
add
shll
cmpsl
xor
and
shrb
fimuls
push
mov
mov
xchg
adc
and
sub
mov
mov
psubsw
push
mov
cli
or
inc
loopne
mov
mov
sub
aad
jmp
sub
iret
mov
ffree
cwtl
imul
sub
subb
sub
out
xchg
cwtl
sub
add
add
mov
sub
jg
roll
sbb
addr16
sbb
in
mov
cmp
cmpsl
push
push
sub
lea
or
sub
test
and
sub
jmp
xor
mov
sub
cmp
or
sbb
jb
add
icebp
and
dec
add
and
push
fs
sub
in
cmp
or
stos
xor
insb
lcall
push
mov
sub
push
xor
pop
test
stos
imul
aam
into
inc
mov
add
push
xor
pushf
mov
aaa
xor
lea
mov
xchg
xchg
leave
rol
cmpsl
shlb
out
ret
or
sub
add
dec
push
int3
pop
xchg
js
rcrb
push
mov
sar
ret
sub
clc
and
inc
sub
loop
outsb
sbb
jp
into
loopne
sub
ds
xchg
xor
jg
mov
repnz
sub
dec
push
inc
iret
sub
sbb
test
mov
imul
insl
shll
cmp
and
scas
sub
adc
adc
stos
fwait
dec
sub
adc
call
repnz
mov
std
nop
inc
inc
mov
aad
cwtl
outsb
jb
rcl
sub
jne
rolb
push
scas
fldcw
xor
jnp
ret
ds
jle
add
sti
pop
inc
out
nop
mov
aam
loope
in
xor
mov
add
jp
xchg
pop
xlat
arpl
add
mov
xor
es
adc
fbstp
call
add
jl
dec
adc
sbb
into
imul
cmpsb
lods
inc
mov
les
ss
ljmp
dec
cmpsb
popf
and
je
push
pop
outsl
sub
lret
and
fbld
bound
shlb
andb
icebp
push
lret
sub
dec
in
ljmp
push
dec
arpl
cltd
rolb
add
dec
fisttpll
jne
push
lret
out
xor
dec
adc
daa
std
dec
dec
out
lods
sub
mov
sub
stos
xor
cltd
adc
lret
rclb
mov
or
loopne
stos
fsubrs
jb
shr
sub
push
pop
idivl
and
or
sbb
test
add
popa
xlat
mov
rcll
cmpsl
mov
data16
mov
adc
lods
sbb
mov
icebp
or
aam
sbb
sub
add
mov
ret
sarb
mov
push
add
inc
and
mov
fiaddl
mov
dec
add
shr
js
out
inc
repz
or
or
lods
xchg
dec
sub
lcall
and
stos
outsb
jne
pop
cmp
jle
movl
ret
jae
sbb
cs
popf
mov
mov
cmp
int
cli
mov
rorb
faddp
adc
sbb
shl
dec
insb
inc
pop
add
test
test
insb
jg
inc
cmpsb
fisubrs
sbb
imul
sub
inc
adc
lock
out
js
shll
jg
cmpsb
mov
inc
jp
xchg
das
and
xor
leave
stos
mov
rcll
outsb
jle
dec
xchg
adc
cmp
push
loopne
orl
cmp
mov
inc
fcoml
push
fcomi
lret
inc
out
popa
sbb
fisubl
jp
add
xchg
pop
imul
test
mov
sbb
std
mov
pop
fildl
inc
mov
repnz
cmp
dec
outsb
mov
out
jnp
jae
lea
jno
mov
and
mov
bswap
out
loope
sbb
pushf
jp
sarl
mov
cmp
dec
dec
sbb
xchg
cmp
jo
stos
and
shrl
fisubs
mov
jae
dec
pop
insb
dec
jmp
mov
outsb
stos
cs
ljmp
add
lods
repz
dec
mov
sbb
push
ficoms
bound
inc
addr16
jmp
xor
jns
and
and
mov
data16
sbb
jmp
out
jo
dec
daa
sub
dec
bound
cwtl
push
adc
outsl
aad
movsb
sub
ret
mov
cltd
mov
jmp
test
cmpsl
add
lea
xchg
push
sub
push
and
sub
dec
sbb
fwait
xchg
adc
cltd
sbb
pop
cmp
mov
sti
adc
mov
in
dec
mov
adc
lret
jl
insl
arpl
ret
push
add
add
ret
jmp
jmp
or
repz
shlb
dec
mov
shrb
outsb
pop
aaa
push
push
jbe
movsl
adcl
fldenv
mov
pop
lret
sbb
dec
outsl
xchg
mov
mov
cmp
es
popa
mov
fnstenv
inc
cmp
test
outsb
mov
data16
xchg
and
cs
ljmp
pop
out
mov
imul
cmpl
lcall
push
fsubs
stos
jl
dec
hlt
sub
test
popf
adc
stos
outsb
mov
lock
pop
adcb
icebp
mov
ja
lock
fwait
insl
push
shlb
lods
mov
push
inc
cmp
push
push
pop
push
fistps
mov
int3
sub
sbb
testb
movsb
add
jb
cmp
fiadds
sti
jecxz
icebp
call
pop
ret
imul
push
scas
outsl
dec
out
cmpsl
bound
pop
xchg
jp
in
shrb
dec
sbb
dec
mov
pop
cs
cmp
inc
or
xorl
or
cmpsb
sbb
lods
arpl
scas
add
shr
and
inc
in
jle
pop
js
push
mov
bound
dec
shll
xlat
mov
out
push
test
lds
and
sbb
add
or
jae
and
fdivrs
or
xchg
daa
sub
or
outsb
mov
mov
fistpll
out
gs
dec
pop
jecxz
lods
add
xchg
mov
jne
xchg
and
mov
into
mov
rcr
xor
add
push
mov
in
bound
jg
jbe
jmp
and
popf
dec
or
push
xchg
pusha
jle
sahf
dec
outsb
push
jp
mov
mov
outsb
cli
pop
sbb
add
sarl
pop
aaa
pusha
test
sti
adc
jno
lcall
or
add
and
sbb
dec
or
scas
mov
mov
popa
cmc
ficompl
push
idivl
mov
stos
or
adcl
jmp
aaa
test
xchg
ds
bound
push
nop
mov
scas
jne
push
imul
out
sub
in
imul
test
mov
sub
inc
pusha
jns
sbb
scas
pop
mov
repnz
jp
nop
movsl
jmp
xchg
xchg
xor
sbb
sub
sub
lret
mov
stos
out
lock
pusha
ficoml
icebp
mov
mov
out
fwait
push
loopne
outsl
cmp
movsb
cmp
into
lock
mov
nop
cvttps2pi
shr
fmulp
mov
daa
imul
nop
sbb
sahf
jle
fidivs
or
cmp
mov
inc
or
icebp
adc
js
int
mov
sub
fcoms
cmc
push
mov
cmp
insl
cs
inc
not
mov
rorb
add
imul
in
loopne
dec
in
xchg
subb
popa
adc
leave
and
inc
xor
sub
fcoms
push
jns
loope
push
jno
push
gs
sub
push
inc
or
data16
jmp
rolb
shll
gs
pop
movsl
out
jne
icebp
push
jnp,pt
inc
dec
mov
into
lret
pop
sub
add
cmpsl
mov
mov
push
mov
rorb
jo
inc
sub
out
leave
xor
mov
jo
mov
in
cmp
xor
push
and
lds
stc
notl
push
pop
mov
mov
fwait
arpl
fucom
arpl
mov
daa
mov
add
mov
jb
xchg
lods
or
jg,pn
inc
inc
adc
push
fsubrl
fbstp
mov
and
imul
jo
sub
jns
in
or
mov
push
nop
mov
call
outsb
xor
leave
sbbb
inc
sbb
pop
aaa
mov
in
lods
cli
lock
xor
cs
loop
aad
lods
add
xchg
mov
sub
xchg
inc
and
bound
or
inc
ja
push
popa
pop
xchg
push
aad
jl
js
add
mov
xchg
xchg
pop
xlat
gs
mov
xlat
in
cld
mov
mov
cmp
mov
xchg
xor
shr
pop
lds
js,pn
daa
nop
lcall
outsb
scas
gs
xor
lea
lea
popa
mov
test
mov
out
adc
mov
sarl
fisubrs
mov
int
sbb
sbb
add
sbb
mov
sbbb
xchg
xchg
fcompl
sub
dec
xor
adc
fildll
add
jne
jns
push
add
lahf
jmp
imul
cmp
pop
sub
pop
bound
add
add
movsb
pop
cs
lods
inc
daa
xchg
jle
shlb
jo
add
xchg
sbb
or
je
mov
xchg
test
or
pop
dec
mov
or
outsb
out
jb
mov
jo
fucom
jns
jge
adc
out
cltd
inc
mov
sbb
leave
insl
dec
inc
cmp
inc
and
jnp
sub
iret
mov
daa
adc
mov
sub
push
insb
lods
mov
lret
in
jne
popa
add
mov
mov
ds
leave
dec
adc
popa
call
and
test
sub
mov
jno
xchg
or
mov
mov
fwait
cli
adcb
push
dec
mov
xchg
xchg
outsl
and
sarb
call
das
clc
leave
stc
insb
dec
mov
aaa
ljmp
cmp
addr16
push
cmp
ja
aam
neg
sarl
or
in
mov
push
subb
add
push
and
daa
xor
je
jmp
mov
jne
insl
fildll
sub
in
xor
jl
sub
sub
ljmp
test
or
mov
shlw
mov
add
pop
and
enter
cmpsb
mov
mov
jmp
in
pop
call
mov
aad
mov
mov
jmp
cmp
in
push
or
daa
js
outsb
or
call
push
push
lcall
cmpsl
mov
into
cmp
in
add
jbe
sbb
into
dec
scas
lods
xchg
xchg
out
fstps
pushf
sti
xchg
dec
sub
sub
in
out
scas
sub
fmulp
lds
int3
xchg
inc
scas
in
lcall
and
xor
pop
add
sub
inc
sub
sub
je
mov
push
lods
and
hlt
and
sahf
scas
pop
push
and
sub
aam
xor
push
lock
mov
in
stc
test
sub
xchg
sub
ret
sub
pop
sub
xor
and
sub
adc
add
out
ret
dec
scas
call
sbb
push
sub
ljmp
lds
cmc
cmp
dec
jmp
mov
ds
sub
xor
insl
jns
stos
and
xlat
push
mov
daa
in
cmp
sub
cli
adc
mov
xor
pop
mov
dec
imulb
sub
pop
sub
adc
and
pop
popa
aas
mov
mov
jo
inc
fcmovne
pop
inc
cs
dec
sub
arpl
les
lea
cmp
int
daa
adc
fadd
and
sub
xchg
push
jmp
push
popf
mov
gs
and
dec
test
cltd
mov
loop
daa
int
sahf
adc
mov
lea
mov
rcl
xchg
fistpll
in
pop
jnp
pop
pop
or
add
ja,pn
pop
rcr
xor
mov
mov
ret
mov
xchg
jb,pn
aam
lcall
push
pop
cld
sub
sub
clc
xor
jo
test
jp
ja
xor
jmp
adc
mov
mov
shlb
sub
ficomps
and
sub
fcoms
adc
dec
sub
and
je
imul
and
jmp
fnsave
aad
push
ret
and
jp
mov
inc
mov
adc
push
fsubrl
repz
pop
dec
or
dec
sub
ror
lods
daa
sub
mov
mov
insb
add
inc
in
mov
out
sub
fisubl
cmpsb
adc
or
inc
pushf
and
out
sub
mov
in
sub
jl
cmp
sub
stos
pop
out
xchg
or
mov
mov
jmp
sbb
add
mov
jmp
cmp
daa
out
cltd
aam
clc
pop
dec
pop
xchg
sbb
sub
fstps
jle
or
ja
jo
cmpsl
sbb
pop
jle
stc
mov
adc
fcmove
sahf
sub
pop
xchg
mov
xchg
xor
inc
sub
loop
xchg
jle
cmpsl
test
mov
mov
std
add
into
jmp
jecxz
dec
push
es
sub
cmp
loop
add
and
push
push
repnz
xchg
gs
xchg
mov
mov
add
adc
cmp
cmpsl
imul
and
out
push
and
int3
sub
pop
mov
cmp
lcall
jecxz
sub
shrb
xlat
pop
sarb
xor
cmp
or
int
jp
lret
pop
jne
sub
pushf
xor
mov
in
jae
sub
adc
jp
sub
xor
push
pop
cmp
addr16
cmc
sbb
inc
or
sub
mov
lret
jns
sub
scas
sub
stc
fdiv
ljmp
iret
test
sub
aaa
mov
pop
mov
movsb
ds
mov
sarl
push
mov
mov
xlat
and
std
in
leave
mov
outsl
cmpsl
jo
addr16
notb
xchg
mov
mov
cwtl
and
sar
mov
cmpsl
repnz
mov
xchg
push
mov
std
jl
cmp
in
lea
pop
jns
jo
aaa
xlat
mov
mov
and
mov
je
lds
movsb
rcll
subl
xchg
cmp
mull
add
mov
jge
push
xchg
push
in
cwtl
jb
in
mov
mov
pop
xchg
pop
mov
push
mov
in
mov
or
push
sar
cmpsl
test
push
fcmove
das
ss
bound
sub
push
jmp
push
js
sub
loope
jne
stos
fcoms
lea
and
dec
leave
push
fwait
popl
mov
out
lods
sbb
sub
mov
inc
popf
sub
pop
jg
sub
lret
ja
jo
xor
jnp
insb
lret
lahf
bound
dec
jnp
and
push
xor
jns
xchg
sbb
mov
fwait
notl
or
imull
popf
leave
cli
mov
xor
mov
mov
clc
inc
mov
pop
sub
int3
mov
ret
or
call
sub
cwtl
jae
jno
and
jbe
mov
or
fdivrp
int
loopne
pop
bound
sub
fisubrs
outsb
in
inc
and
out
gs
jnp
mov
lret
icebp
nop
sbb
je
repz
insl
mov
push
mov
cmp
lea
jle
popa
stc
push
dec
cs
test
cmp
push
mov
pop
push
or
mov
mov
push
cmpl
xchg
lea
mov
mov
pop
int
mov
pop
jle
lock
xchg
fwait
enter
pop
sbb
scas
mov
popa
cmp
push
ljmp
test
stos
cmp
fidivrl
cs
bound
pop
movsl
add
xlat
dec
cld
sarb
mov
mov
or
lods
push
repz
sbb
dec
lret
push
xchg
xchg
leave
fs
pushf
xchg
scas
out
shrl
or
jae
mov
test
mov
cmp
mov
lahf
iret
or
leave
ror
aas
test
bound
mov
jo
adc
fistpl
pop
cwtl
ss
out
pop
mov
mov
dec
imul
mov
insl
xor
testb
fwait
add
adc
sub
cmpsl
lods
push
loopne
sub
push
gs
into
mov
xchg
mov
mov
push
jo
xchg
sub
sti
push
push
outsl
in
xchg
imul
addr16
call
adc
or
outsl
mov
mov
ficoml
xchg
rcrl
xor
add
cmp
xchg
xor
sarb
lods
xorb
mov
je
jmp
lds
scas
mov
dec
cmp
add
jp,pn
pop
mov
push
or
int3
inc
fsubrs
in
jp
imul
rcrb
mov
add
mov
imul
imull
addb
mov
pop
jne
in
lea
and
push
and
test
xchg
rcl
mov
cwtl
xor
xor
in
fwait
dec
xchg
push
inc
icebp
sbb
mov
xchg
or
cmpsb
mov
mov
lahf
jne
std
add
sbb
cmp
cmp
not
sbb
aam
scas
push
fs
add
icebp
adc
mov
or
xlat
cmp
lahf
es
push
lea
test
pop
ret
or
xor
adc
shrl
bound
xchg
adcb
push
int3
ret
bound
rcrb
xchg
ja
shlb
xor
je
pop
icebp
sub
lea
fwait
sbbl
divb
and
rcrl
dec
lret
in
imulb
push
jg
iret
xchg
xchg
test
fcmovnb
dec
xchg
add
rcrl
insb
ljmp
lock
out
shrb
lcall
push
cmp
lock
jp
or
mov
test
iret
xlat
or
hlt
cmp
aam
cmp
faddl
lea
jnp
inc
lcall
call
jno
cmp
imul
loopne
add
jb
sbb
aad
dec
jno
mov
fstpt
sahf
std
add
popf
dec
mov
dec
cmp
add
inc
fdivrs
imul
jge
xorl
push
sbb
ret
push
mov
andl
cmp
jno
jg
push
push
subb
pop
add
sbb
mov
push
adcb
adc
cmp
push
push
mov
add
in
popl
pop
mov
mov
rcr
fldenv
cld
pop
imul
mov
lods
es
push
inc
inc
xlat
stos
ss
pop
inc
jnp
adc
mov
bound
je
xchg
sub
and
xor
fs
jle
pop
shr
inc
ret
jns
cli
mov
dec
jnp
outsl
xchg
sub
mov
outsl
testl
sub
int
call
jmp
push
mov
arpl
insl
mov
aas
int3
test
paddb
ds
push
out
inc
arpl
pushf
lods
jns
inc
bound
cmp
in
push
jbe
jo
imul
pop
pushf
and
or
mov
add
cmp
pusha
fwait
sub
ret
outsb
dec
mov
addr16
push
in
rolb
sub
ds
or
mov
out
nop
into
and
dec
adc
enter
pushf
sub
aaa
lcall
jae
daa
xor
mov
xor
sub
adc
add
out
popa
inc
test
sti
inc
imul
ror
call
in
mov
lcall
sub
dec
in
xor
adc
sub
push
and
xor
xchg
lcall
aad
sub
mov
sbb
in
stos
daa
push
cwtl
adc
daa
lahf
jl
cmp
sbb
inc
es
xchg
lods
pop
xor
ljmp
push
adc
jns
dec
jo
dec
xor
stos
xchg
aam
push
rcrb
push
jns
bound
inc
jnp
cmp
inc
daa
negb
xor
xchg
push
mov
test
and
mov
div
fwait
jmp
mov
or
lock
cs
sbb
push
cli
mov
inc
cmp
ja
imul
mov
dec
mov
sbb
dec
inc
stos
mov
mov
sub
xor
and
adc
stos
jmp
pop
mov
cmp
jnp
inc
dec
shl
fwait
mov
and
enter
scas
lret
pop
clc
mov
or
fwait
or
mov
mov
repnz
cs
aam
xor
fidivrl
mov
push
cmpsl
cmp
dec
sbb
pop
mov
push
inc
lret
mov
sti
xor
sbb
pushf
lret
inc
into
stos
mov
and
pop
and
jle
js
and
or
cmp
in
bound
loop
stos
jl
xor
test
out
faddp
dec
xor
sub
mov
xlat
push
mul
in
sub
pop
test
sti
lods
jns
cs
mov
scas
jno
xchg
adc
xchg
out
cmpsl
shll
adc
test
lahf
call
iret
lahf
sub
inc
ja
imul
ljmp
jns
mov
out
mov
in
and
push
enter
dec
call
and
outsb
jecxz
or
out
jnp
mov
dec
cmpsb
mov
pop
xor
jmp
mov
jnp
mov
aas
fcomp
pop
gs
cmp
cmpb
outsb
das
je
sarb
xchg
jp
dec
xor
mov
dec
pushf
push
flds
frstor
or
test
popf
rolb
mov
leave
ret
rorb
insl
sbb
std
and
inc
push
or
or
int3
outsl
leave
add
dec
cmp
xchg
jl
jnp
es
lock
int
jmp
dec
xrelease
mov
mov
fcom
sbb
enter
imul
orb
xchg
mov
icebp
or
pusha
mov
dec
dec
lea
int
xchg
and
lahf
jmp
lea
xchg
mov
xchg
dec
in
insl
cld
iret
mov
push
mov
sub
pop
cmp
push
or
mov
xchg
push
mov
xchg
aaa
inc
push
cmp
xchg
mov
int3
cmp
popf
or
and
mov
aaa
pop
and
ret
add
dec
push
test
sub
mov
sarb
xchg
fcomi
xchg
jbe
icebp
divl
scas
ja
dec
dec
adc
mov
outsb
jns
clc
mov
mov
imul
mov
je
into
movsl
dec
lea
xchg
inc
inc
out
mov
mov
xchg
dec
cltd
std
aam
push
iret
cltd
cmc
rclb
loopne
out
mov
pop
es
push
xchg
jl
inc
xor
cli
test
clc
hlt
lret
in
negb
sub
lods
fldenv
and
lods
sub
outsb
shll
movsb
rcrb
rorl
out
cmp
xchg
pop
lahf
push
in
xor
mov
lcall
cmp
ret
jmp
nop
icebp
push
je
xlat
cs
add
idiv
sahf
movb
inc
imul
xchg
sbb
adc
mov
inc
sbb
cmp
xor
stos
xor
aam
fwait
inc
xor
push
out
inc
mov
adc
mov
clc
cmp
andb
push
xchg
add
mov
add
rolb
jo
iret
stc
xor
daa
mov
mov
fsubrs
xchg
bound
adc
lock
pusha
pushf
or
dec
inc
ret
cwtl
inc
aam
fadd
scas
xchg
mov
ljmp
es
push
cltd
and
jl
aad
rcrl
xchg
in
call
int3
or
adc
xchg
test
mov
mov
lea
pop
movsl
fildl
sub
bound
sub
push
lahf
nop
cmp
iret
fwait
sti
and
xchg
or
pop
idivl
mov
mov
adc
imul
xchg
in
test
ljmp
sbb
xor
xchg
xor
inc
pop
in
push
pop
dec
inc
or
mov
icebp
jo
jb
xchg
outsl
lds
mov
scas
mov
mov
lods
andb
cmp
jle
add
loopne
idivl
aas
push
in
dec
jp
in
popf
loopne
or
pop
into
inc
lods
gs
mov
out
add
cmp
popa
repz
addr16
inc
sub
inc
lock
mov
insl
sbb
mov
scas
fstpl
adc
mov
mov
mov
popf
bound
loop
xchg
test
sub
and
shlb
adc
ret
in
pop
sti
fmuls
mov
mov
stc
adc
xchg
xlat
dec
bound
insl
mov
push
cmp
cmpl
and
fistpll
ret
imul
outsb
popf
or
roll
xchg
cltd
popf
sub
stc
push
cmp
pop
enter
cmp
jnp
call
ret
pop
addr16
les
popa
cmp
sbb
fwait
in
popa
xchg
cmp
int
mov
jne
leave
mov
inc
fstpt
mov
fists
inc
daa
ret
fld
test
imul
mov
popa
das
ret
fists
popf
xor
bound
xor
lods
sbb
push
scas
xchg
dec
les
outsl
push
jae
movsb
inc
or
shrb
stos
test
outsb
sub
gs
bound
movsb
dec
fs
fisttps
pop
mov
dec
jns
add
ret
nop
adc
popa
bound
pop
push
pop
mov
cmp
mov
imul
push
mov
clc
imulb
cmpsl
inc
icebp
mov
out
popf
sub
lret
mov
and
pop
std
sbb
subl
and
xchg
push
bound
pop
push
call
dec
jg
push
xor
adc
and
pop
dec
sub
lods
sub
push
cltd
mov
sub
scas
rol
ss
xchg
sbb
and
dec
jl
pop
mov
rolb
jb
dec
mov
mov
push
lds
push
dec
push
rcr
stos
mov
cmp
in
pop
addr16
cmp
cmp
lret
bound
js
mov
inc
xchg
xlat
int3
sub
and
mov
cltd
or
lahf
and
push
icebp
jbe
inc
xor
cmp
test
flds
dec
es
popa
inc
jmp
pop
mov
iretw
cmpsb
pop
popf
repz
cmpsb
fmul
scas
pop
in
outsb
push
sbb
push
cmp
mov
jns
jp
mov
dec
scas
inc
jge
ret
popf
dec
cli
cmp
push
inc
push
insl
addb
lds
fiadds
cmp
jg
xchg
cmp
cmp
xchg
and
imul
rorb
xchg
or
jo
movsb
aaa
lahf
adc
js
xchg
mov
adc
mov
int
xchg
sarb
push
pop
rolb
in
inc
xchg
pop
inc
cmp
scas
scas
push
and
sbb
mov
dec
das
push
pop
jns
out
pop
pop
pushf
in
lock
push
shrl
outsb
es
dec
popf
sbb
xorb
bound
daa
insl
test
or
cli
cmpb
inc
inc
bound
pushf
mov
push
xchg
adcl
push
int3
ss
pop
xor
xchg
adc
test
je
xor
test
and
fcompl
xor
out
jbe
mov
subb
test
push
xchg
adc
cli
shr
lock
or
aam
and
push
lods
mov
adc
mov
test
sbb
or
jbe
rcll
xchg
sti
sbb
leave
xorl
bound
sarb
or
int3
outsl
leave
and
popa
js
lods
test
bound
je
dec
rcrl
or
add
and
getsec
mov
xchg
shlb
stc
movsl
iret
or
xor
mov
stos
mov
std
insl
mov
mov
nop
lcall
cs
je
and
aam
or
or
out
cmpsl
pop
inc
lret
mov
rclb
pop
or
add
mov
mov
loop
jo
pop
repz
sub
fdiv
icebp
fwait
lcall
mov
aaa
push
jne
lret
in
imulb
pop
sbb
popf
cmp
dec
shrb
mov
dec
inc
imul
stos
lahf
mov
in
into
adc
ret
sar
scas
push
out
inc
sub
sub
sub
in
add
mov
add
dec
push
cltd
shr
mov
int
fwait
inc
test
pop
mov
and
fcoms
or
xor
push
ds
cmpsl
mov
in
shrb
xor
fwait
hlt
rclb
mov
fmull
mov
outsb
enter
xchg
cmpsb
and
push
aad
outsl
popa
sub
fistps
int
push
pop
mov
add
gs
daa
lret
outsb
jbe
mov
cmp
lahf
dec
js
xor
insl
sub
add
test
mov
rorb
repnz
and
and
bnd
push
mov
pop
in
hlt
sub
outsb
adc
dec
fimuls
xchg
xor
sbb
cmp
mov
fwait
jbe
sub
arpl
iret
jecxz
iret
dec
loop
cmp
or
ret
sub
daa
inc
jno
mov
push
jo
xor
loope
ret
outsl
daa
popa
outsb
jno
xor
cltd
int3
jnp
ret
aad
inc
xchg
ret
in
pop
mov
dec
pop
ja
pop
cmc
lods
cmp
shll
and
sub
daa
inc
outsb
mulb
bound
add
ja
adc
ret
inc
xchg
sub
icebp
sub
xchg
outsl
hlt
push
cmpsl
xchg
mov
lea
les
xor
insl
jnp
xchg
cmp
xor
push
sbb
out
pop
push
aam
mov
not
sahf
and
mov
cs
sti
dec
lret
das
int
or
or
xchg
push
xlat
lods
mov
in
mov
movsl
xchg
lret
bound
jb
lret
icebp
js
push
or
xlat
add
inc
and
adc
pop
jp
jg
popf
xor
mov
cmp
sub
cmp
imul
xlat
push
mov
or
adc
ficompl
lret
cmp
std
mov
xchg
cmp
scas
jp
imul
push
push
clc
sub
scas
sbb
loopne
lods
add
arpl
push
lahf
adc
rorb
xchg
xor
sub
adc
pop
inc
xchg
mov
ljmp
mov
movsl
stos
sub
dec
in
test
pop
faddl
xchg
outsb
xchg
mov
sahf
int3
or
fmuls
add
mov
mov
cltd
stos
insb
mov
jo
push
outsb
daa
xchg
test
sti
test
imul
fs
push
popa
xor
push
loopne
mov
and
fst
mov
push
mov
mov
lret
dec
sub
gs
or
inc
imul
loop
push
out
mov
loopne
icebp
cmp
bound
add
jg
xor
dec
cmpsl
push
cmpsb
dec
ljmp
jl
loope
jno
leave
sahf
lea
xor
gs
cld
js
mov
push
bound
iret
sub
shrb
pop
push
sub
inc
mov
loopne
jmp
cmp
movsb
in
popa
lods
mov
cmpsl
xor
aas
daa
inc
mov
cmp
outsb
xor
inc
je
fwait
cmpsl
mov
ret
cwtl
loop
adc
push
arpl
xchg
jle
mov
ret
pop
outsb
arpl
push
sbb
daa
jmp
icebp
push
cwtl
fcmovnu
lock
sub
scas
jno
mov
mov
imul
punpckhdq
daa
and
and
andl
loopne
inc
insb
xor
push
arpl
rcrb
in
outsb
push
cmp
insb
xchg
mov
enter
sbbl
ret
call
mov
mov
and
in
ljmp
xor
nop
adc
mov
subl
pop
mov
sub
cwtl
aam
mov
xchg
loop
push
jecxz
lds
lods
sub
add
lahf
lret
mov
xor
or
outsb
push
imul
sub
mov
in
pop
test
dec
push
xchg
clc
mov
cwtl
inc
mov
cld
frstor
ficoml
xorl
mov
pusha
lahf
in
repz
mov
xchg
inc
push
and
nop
or
or
or
outsb
pop
lods
ds
and
popf
mov
sub
jge
insl
and
adc
push
pop
leave
pop
sbb
popl
xchg
fsubr
imul
xlat
inc
sub
bound
xchg
hlt
fisubrl
jp
int3
add
mov
out
mov
enter
shl
mov
jns
and
sbb
and
out
cwtl
dec
jle
stos
subl
xchg
sahf
popa
add
mov
cwtl
out
test
and
out
dec
pop
mov
push
arpl
jp
or
adcl
out
addr16
dec
leave
stos
push
ret
imul
mov
xor
gs
std
in
dec
es
push
call
popf
in
in
in
inc
push
cs
popf
adc
inc
arpl
cli
push
xchg
sbb
jle
jb
cmpsb
gs
clc
gs
xchg
mov
pop
push
cs
mov
mov
mov
ret
dec
mov
lea
or
jb
insb
sub
sahf
xor
mov
sarb
vmread
pop
cmp
sarb
dec
inc
xor
cld
xor
bound
mov
jbe
cmp
xchg
fisttpll
out
out
add
jb
jnp
pop
cmovnp
rorl
push
in
jg
aas
xor
xor
popa
xlat
pop
repnz
imul
orb
jb
ss
pop
push
mov
xchg
ret
xchg
pop
push
jmp
or
inc
or
or
out
lods
cmp
clc
rcl
pop
cmp
cmp
leave
jmp
sub
mov
xchg
mov
xchg
stos
test
int
cmp
out
enter
std
cmp
and
add
add
jae
out
enter
imul
mov
inc
or
mov
lcall
lret
stc
mov
in
lcall
aas
mov
sub
dec
pop
in
into
dec
xlat
or
and
fistpl
fildl
and
shrb
or
add
lcall
stos
and
je
nop
outsb
into
mov
js
movsl
lock
cld
jns
pop
rclb
out
pop
mov
fisubl
or
loopne
adc
jecxz
jge
insl
out
dec
int
into
cmc
jl
stos
add
push
sbb
lahf
andb
lock
mov
mov
shlb
outsb
fistpl
sahf
ja
orl
inc
andb
aad
pop
jns
into
inc
aas
ret
and
cmp
addr16
js
mov
lret
call
push
push
cmp
popa
xor
mov
mov
cs
rcrb
jmp
sub
cmp
out
or
push
imul
cmp
mov
or
insl
stc
pop
jbe
mov
sbb
sbbb
pop
adc
mov
outsb
popw
fwait
sub
les
ret
cmp
fsts
in
pop
insl
sub
sub
add
ja
pop
xchg
add
cmpsb
push
hlt
mov
jge
jno
and
daa
int3
jle
into
scas
leave
popa
insl
and
enter
jg
rcl
inc
push
sbb
pop
pop
adc
inc
sbb
push
mov
mov
movsb
ljmp
pop
cs
mov
push
inc
mov
js
adc
adc
xor
pop
pop
push
add
je
roll
lret
dec
stos
cmpsl
ja
and
mov
or
test
outsl
mov
push
xchg
xchg
dec
shll
sbb
ret
lods
shll
test
inc
int3
roll
inc
cwtl
xchg
and
jb
jp
jne
or
dec
sub
mov
lahf
jno
lds
jmp
mov
push
dec
xchg
ret
xchg
mov
or
xorb
mov
cli
shrl
sbb
loop
add
sub
push
add
rcll
xchg
push
dec
or
xor
lret
pop
rol
or
push
mov
daa
divb
mov
popf
xorl
jl
mov
xchg
stc
cmp
xchg
pop
pop
jne
fsubs
fisttps
and
inc
xchg
xor
mov
test
sub
stc
and
xor
xchg
and
xchg
cld
push
mov
bound
in
dec
push
test
clc
xchg
movsl
and
mov
cltd
add
imul
push
mov
mov
gs
aam
sub
or
cmp
outsl
stc
xchg
out
push
pop
ret
call
jl
fsubrl
pop
bound
push
loop
jp
jno
jg
mov
ret
push
bound
ficompl
shlb
das
or
shll
fwait
mov
enter
bound
shrl
and
mov
rolb
cltd
aaa
push
stos
repz
jp
adc
lahf
sbb
xor
push
arpl
jge
adc
xchg
cmpsl
pop
bound
add
adc
ss
pusha
gs
fs
iret
clc
sub
pusha
imul
xor
fdivrl
push
dec
into
dec
dec
cli
mov
push
xchg
or
adc
lea
fbstp
mov
les
std
lahf
idiv
pop
cwtl
inc
enter
xor
xor
cmpsl
addr16
out
orl
jo
pop
push
fists
and
push
add
pop
bound
outsl
jp
xchg
imull
xchg
xchg
or
insl
outsb
xchg
mov
cli
jae
xor
push
mov
stos
xchg
xor
ja
stos
or
and
and
sbb
lret
dec
test
sbb
mov
sbb
or
loop
ja
sub
mov
mov
dec
jmp
mov
sub
bound
pandn
pop
sub
jp
mov
push
gs
xchg
mov
xorb
test
sub
push
lock
out
mov
popa
std
cwtl
xor
sub
ds
and
shlb
add
cmp
cli
push
xchg
leave
jg
daa
lret
test
jbe
outsb
popa
xchg
cmpsb
or
pop
xor
bound
push
sbb
sbb
mov
out
xchg
ret
add
daa
mov
in
xchg
pop
aaa
xchg
addb
jne
scas
sti
xchg
xor
cmp
push
lods
xor
xchg
sbb
outsl
fldenv
pop
or
xchg
pop
pop
into
or
arpl
sub
sub
sbb
and
scas
ficompl
adc
mov
inc
imul
mov
pop
and
add
cmp
cmp
dec
cmp
int
mov
xor
imull
jno
dec
popa
push
mov
lahf
sbb
bound
push
pushl
subl
subl
dec
lahf
or
mov
test
sub
bound
aam
scas
dec
inc
cmpsl
bound
adc
adc
inc
adc
xorl
jbe
lea
jo
push
sbbl
cmp
push
cmp
mov
pusha
pop
push
mov
lods
cs
pop
sahf
out
outsb
jo
stos
dec
cmp
fidivrl
nop
mov
cmp
or
push
leave
push
add
testb
mov
repz
pop
bound
dec
jbe
movsb
push
dec
in
adc
fs
push
cmp
loop
addr16
insl
out
sub
push
lret
and
aas
mov
daa
inc
leave
iret
in
pop
push
outsl
inc
adc
mulb
pop
gs
sub
stos
daa
sub
push
dec
daa
scas
jmp
add
lods
adc
vrsqrtss
pop
push
jg
rolb
dec
fisubrs
cmp
inc
filds
out
leave
adc
arpl
cmp
into
xorl
gs
pop
scas
adc
push
pop
inc
in
repnz
mov
jnp
xlat
jns
movsb
hlt
sub
pop
jnp
or
add
sti
and
ffree
push
pop
sub
push
pop
cmp
xchg
mov
mov
or
mov
repnz
sub
and
cmpsl
popa
sarl
mov
push
sbb
lea
pop
sbb
bound
sub
mov
inc
js
inc
xorb
xchg
leave
push
lods
inc
bound
sub
xchg
cmp
push
fisttpl
push
inc
adc
mov
sub
ds
push
lods
aam
mov
push
popa
iret
cmp
xchg
mov
xlat
dec
ds
and
add
arpl
jbe
inc
jnp
hlt
test
xlat
js
xchg
cmp
mov
test
pop
inc
shll
add
mov
ds
adc
arpl
sub
mov
inc
push
fiaddl
bound
or
push
mov
inc
jge
lea
sub
jg
pusha
xorb
ret
aam
or
in
mov
lret
push
mov
repnz
cmp
xchg
popa
dec
or
andb
js
mov
mov
dec
frstor
jecxz
push
xor
shll
cmpsl
add
jae
jg
out
movsl
push
cltd
mov
cltd
loopne
sarl
jp
sub
adc
test
jmp
in
push
xchg
pop
xchg
imull
push
imul
push
pop
pusha
repnz
push
loopne
xchg
fcmovne
insl
incl
xlat
pop
pop
in
movsb
cli
push
add
daa
lods
push
mov
shrl
clc
dec
outsl
test
pop
add
ds
decl
mov
adc
or
jb
pop
add
mov
mov
sbb
cs
ret
loope
imul
xchg
xchg
scas
sti
rclb
add
lret
mov
cmp
out
jge
mov
xorb
inc
rcll
xor
enter
rcll
cmp
jne
loopne
add
inc
mov
cwtl
rorl
jmp
or
pop
fadd
push
jb
out
cmp
xchg
ss
adc
pop
nop
add
gs
lods
ret
mov
mov
and
imull
insl
aam
js
add
outsl
or
mov
rcr
sbb
cwtl
mov
daa
stos
bound
rcrb
in
push
push
popf
bound
cmc
sbb
adc
sbb
icebp
xchg
bound
cmpsb
pop
dec
aad
outsl
xchg
ja
mov
mov
jo
push
xor
shr
mov
sub
xchg
lcall
cmpsl
mov
mov
cmp
mov
dec
and
inc
int3
cmp
sbbl
xchg
mov
popa
insb
mov
ljmp
push
jbe
mov
and
xchg
out
and
cld
loopne
jmp
push
fs
xchg
hlt
adc
jmp
dec
xchg
mov
idivl
mov
push
rorb
aaa
shll
in
outsl
jns
inc
xor
lods
je
sub
lahf
add
adcl
aad
outsb
jne
scas
out
loope
xchg
dec
fisubs
test
xchg
sahf
jns
imul
popa
cld
jge
cmp
xchg
shrb
in
pop
cld
and
aaa
rorb
and
enter
mov
rcrl
jmp
call
repnz
pop
sarb
jno
mov
shll
or
test
test
bound
movsb
xchg
inc
xor
call
pop
dec
cli
cmpsl
pushf
rcrb
add
dec
and
push
push
sub
mov
sbb
dec
sub
add
mov
ss
arpl
shlb
jb
mov
jne
shlb
scas
popa
fnstcw
movsl
or
test
outsl
pop
je
cmp
lret
aad
fst
aad
lds
scas
aas
sbb
pop
lret
and
mov
xchg
jg
fsts
ret
or
arpl
push
call
rorl
or
outsl
enter
dec
imul
sbb
mov
lret
inc
push
iret
pop
pushf
cs
add
cmp
enter
outsb
mov
in
jns
insl
sub
mov
lock
mov
iret
repnz
bound
pop
mov
sbb
adc
popa
lret
int
bound
or
push
xor
popf
jmp
and
outsb
mov
dec
add
mov
lods
outsb
aam
std
mov
push
cli
pop
mov
fdivr
lock
jp
outsb
cmp
adc
rcrb
jp
loope
cmp
jbe
in
insb
ss
in
cltd
jno
add
push
inc
lcall
arpl
sarl
lods
mov
xlat
inc
adc
push
fiaddl
stc
push
fmulp
xchg
mov
mov
sub
enter
test
add
shr
pusha
cmpsl
mov
jns
aad
bound
mov
test
xchg
lds
bound
insb
cld
xchg
pop
jge
xchg
lock
arpl
push
or
fisubs
mov
dec
ss
je
daa
xor
in
aas
outsb
call
ljmp
insb
outsb
loope
xchg
xor
das
adc
mov
pop
cltd
test
pop
fisttpll
and
repz
shrb
out
lods
popa
in
bound
mov
outsb
and
push
pusha
lret
data16
fcompl
push
sub
test
daa
andb
daa
outsb
iret
mov
push
xor
dec
gs
fs
daa
mov
outsl
addl
jb
xchg
mov
stos
mov
sbb
ljmp
stos
std
add
cld
int
jne
lret
jg
mov
adc
dec
pop
mov
ja
fcoms
xchg
arpl
mov
test
or
sub
call
bound
lds
aaa
adc
call
leave
dec
and
mov
mov
cmp
enter
sub
cs
or
jae
lcall
or
jb
cmp
test
cmp
xchg
inc
lahf
xlat
inc
lds
sub
aam
ret
adc
call
xor
xor
mov
lahf
jp
dec
out
pop
iret
mov
cmp
dec
iret
lahf
and
popl
cmp
test
movsb
sub
stos
adc
ret
mov
daa
mov
inc
mov
popa
push
or
pop
notl
cmpsl
push
roll
outsl
mov
add
lods
pop
xchg
cmpb
popf
int3
pop
and
push
jno
lods
and
popf
pop
arpl
sbb
cmpsl
sbb
jmp
in
pop
xor
xchg
jecxz
out
dec
pop
test
stos
imul
sbb
loopne
mov
in
test
jmp
push
popa
aaa
lret
mov
out
fistpl
arpl
jmp
call
jg
mov
jae
xchg
fadd
sub
lock
xlat
cmp
dec
rcrl
jno
xchg
mov
mov
arpl
xor
fucom
aad
adc
mov
sub
scas
fisubrs
xlat
or
pop
add
imul
sbb
ret
xchg
jmp
clc
imul
mov
mov
aad
mov
cli
sahf
adc
xlat
sahf
outsb
push
jne
icebp
pop
xor
shll
ds
mov
push
cmpsl
popa
inc
jb
push
or
jmp
mov
jae
cs
mov
jg
nop
push
in
insb
cmpb
addl
clc
adc
mov
push
inc
adc
movsb
cmp
mov
popa
popf
bound
mov
mov
mov
add
xor
push
leave
xchg
mov
ljmp
pop
outsb
inc
divl
mov
jbe
in
add
rol
xor
cwtl
arpl
call
mov
or
cmpsl
imull
dec
sahf
in
and
mov
and
ret
cmp
mov
popa
fabs
add
test
cmp
mov
adc
aam
mov
jne
mov
adc
adc
call
enter
xchg
jp
ret
popf
adc
jle
sahf
lcall
movsb
lcall
mov
test
push
mov
xor
rdpmc
test
xchg
jbe
lods
mov
fdivs
in
stos
lods
dec
adc
cmpsb
xor
cmp
jb
out
fisubs
andl
jno
mov
dec
cmp
or
and
add
ror
inc
lret
cmpsl
push
shlb
lahf
bound
jl
adc
lods
or
push
jmp
or
and
das
xchg
jle
sub
cltd
add
outsb
clc
cmp
xlat
arpl
mov
adc
mov
outsb
push
jb
test
sub
jae
iret
repnz
sub
mov
jo
js
mov
mov
push
xchg
stc
in
jg
iret
pop
mov
mov
scas
xchg
ja
sub
testl
inc
sti
repz
jae
add
outsl
add
sub
testl
pop
xchg
mov
and
pop
out
add
pop
or
sbb
sbb
push
mov
cmp
xor
xor
dec
pop
shll
jp
and
pop
dec
mov
mov
iret
std
fadds
inc
sub
adcb
imul
repz
lcall
mov
push
lds
fmuls
inc
push
popa
dec
cld
cmp
or
push
and
or
xchg
cmp
xchg
push
jbe
jecxz
sbb
int3
insb
int
xchg
in
and
cmp
repnz
fnstsw
rolb
inc
cmp
sub
push
insl
outsb
fmuls
jb
nop
jmp
xorb
pop
sahf
scas
addr16
jmp
lret
xor
insl
jg
add
je
or
cmpsl
jno
add
aad
or
leave
lock
mov
jg
fisttps
mov
sbb
shlb
gs
mov
out
mov
adc
movsb
loop
in
daa
push
int3
sub
lahf
rol
addb
xor
fildll
sbb
int
out
pop
push
inc
test
mov
mov
pop
cmp
insb
js
push
ds
mov
dec
test
jl
pushf
push
cmp
lret
push
scas
and
add
outsl
xor
mov
push
mov
cmp
idivl
push
add
pusha
cmp
push
xor
xor
mov
scas
push
insl
jae
imul
pop
add
shrb
mov
pop
mov
pop
pop
push
mov
or
dec
adc
mov
lcall
pop
fisubs
mov
mov
dec
imul
test
push
pop
or
stc
add
scas
loopne
mov
pop
jecxz
xchg
mov
int3
outsb
pushf
pop
incl
xor
mov
mov
push
lahf
xchg
mov
outsb
inc
mov
pop
xor
jecxz
jge
outsl
pop
jb
mov
jo
hlt
in
sahf
les
inc
fildl
mov
es
jno
in
mov
and
outsb
pop
cmp
mov
and
test
pop
lods
mov
sahf
jne
testl
xchg
ljmp
add
push
outsl
fwait
mov
xor
inc
mov
shlb
jns
jne
xlat
adc
jno
bound
movsb
pop
mov
mov
xor
iret
mov
dec
jbe
inc
mov
adc
pop
sbb
adc
test
shll
rorl
inc
cs
pop
dec
pop
subl
in
dec
mov
dec
and
shrl
into
cmp
jle
mov
or
js
fldenv
stc
in
xchg
mov
mov
mov
cmpsl
shrb
idivb
clc
popa
adc
cmpsb
xchg
xchg
dec
sbb
xchg
je
sahf
mov
push
je
outsb
addr16
dec
mull
inc
xchg
mov
lea
daa
xor
push
mov
test
push
loopne
aam
mov
jb
dec
lods
or
leave
stc
cmp
mov
mov
mov
lods
pop
inc
mov
cmpsb
test
add
sbb
jp
lds
imul
dec
jb
out
mov
inc
jg
xor
lret
testb
sub
outsw
scas
lret
xchg
data16
shll
adc
push
adc
and
or
jb
adc
mov
out
add
xchg
fcom
mov
cltd
fisubrs
mov
sbb
and
push
mov
imul
or
sub
in
lahf
popa
push
cmp
dec
daa
mov
std
cmp
out
add
pop
push
xlat
in
pop
pushf
xchg
dec
int
enter
or
or
jmp
mov
outsl
add
and
js
sub
outsl
cltd
sbbb
push
mov
or
sbb
mov
ret
push
mov
iret
mov
jo
push
sub
lcall
shr
push
clc
cmp
sub
push
and
mov
addr16
fisubrs
push
xchg
xchg
sbb
and
sub
out
push
faddl
sbb
cmpb
sub
sbb
andl
outsl
dec
in
xchg
sti
pop
dec
sar
xchg
sub
andb
scas
nop
cmp
or
jp
mov
push
mov
mov
pop
xchg
cmp
jecxz
add
fs
xchg
sub
ds
cs
iret
inc
gs
lea
repnz
loopne
pop
shl
iret
xor
and
xor
push
out
ret
std
popf
cmp
mov
adc
jmp
sbb
les
sub
push
mov
mov
bound
nop
outsb
xor
xor
in
repz
cmp
shll
lret
ret
ja
mov
cmp
mov
mov
into
sbb
cmp
ror
cmp
pop
into
fucomip
out
sarl
dec
loopne
dec
sbb
gs
loop,pn
outsl
gs
fs
add
or
arpl
test
divl
in
pop
cmp
xorb
cmp
in
movsl
inc
cs
inc
js
sbb
popl
ds
xchg
adc
dec
nop
into
ds
xchg
fwait
adc
xlat
iret
or
int
mov
inc
int3
or
jb
rolb
mov
add
push
cs
cli
or
scas
xor
jecxz
test
ret
rcrb
andb
arpl
sub
mov
in
sub
mov
push
lea
xorl
loope
or
arpl
daa
hlt
int
cmp
or
idivl
subl
rcrl
mov
pop
pop
and
bound
movsb
pop
bound
sbb
mov
mov
fs
xchg
fsubs
lock
xor
std
or
sahf
mov
jne
mov
lahf
leave
scas
sub
imulb
sbb
ss
stos
dec
bound
inc
mov
ds
add
inc
int3
sahf
xchg
ds
xchg
out
movb
pusha
shlb
xchg
arpl
lahf
imul
dec
push
xchg
shr
loopne
cld
and
pop
xchg
adc
sub
popf
ds
scas
call
push
test
lods
pop
lock
xor
xchg
jmp
aad
mov
sbb
aas
test
aam
sbb
dec
xor
pop
jbe
mov
add
add
scas
inc
jno
std
dec
xchg
mov
mov
mov
nop
iret
movsb
push
mov
mov
shl
push
jno
add
outsl
popl
rclb
cwtl
popa
inc
and
push
mov
sbb
inc
imul
scas
add
fsubs
push
sarb
and
mov
fiadds
xchg
jmp
or
lret
pop
inc
daa
inc
mov
jae
adc
cmp
mov
stos
inc
jge
xchg
fidivrl
sbb
lods
jmp
push
lret
lret
dec
inc
mov
sbb
bound
das
repz
aam
mov
mov
push
sbb
test
mov
popa
cmp
fidivrs
lcall
mov
sbb
stos
and
dec
fwait
mov
push
sbbl
mov
gs
adc
and
nop
cs
lret
enter
pop
iret
test
idivb
lret
sub
out
sahf
dec
inc
mov
xlat
test
jge
in
outsb
mov
xor
add
sub
xchg
ds
xchg
mov
rcl
es
bound
cld
mov
jg
ds
aaa
andb
xchg
movsb
jo
add
xchg
push
ja
cmp
orl
xor
out
sarb
mulb
ret
pop
dec
adc
mov
and
jg
jne
scas
add
adc
ficoml
popa
and
movsl
dec
pop
pushf
xor
lods
dec
inc
adc
dec
fs
ja
or
aam
push
das
mov
sub
sub
dec
fwait
inc
test
test
mov
pop
addr16
shrl
xor
sub
cmp
pop
subl
lret
jns
pop
dec
shrl
pop
rcl
cmpsl
mov
pop
push
add
fs
xchg
jb
mov
push
sbb
pop
jg,pn
sbb
loopne
jnp
or
addl
dec
push
jb
int3
sbb
popa
decl
clc
pop
outsb
xor
out
imul
jnp
push
mov
adc
inc
push
jo
sbb
inc
call
sbb
roll
subl
mov
pop
rolb
call
jp
add
jle
fwait
adc
ja
inc
popa
push
mov
int3
jge
cmp
imul
mov
shll
leave
pop
and
and
and
clc
mov
rolb
adc
sub
xor
imul
jg
scas
popa
sbb
pop
daa
xchg
cmp
aam
xchg
pop
inc
jbe
or
push
and
ja
cmp
cltd
xor
notb
mov
cs
cmp
mov
fwait
inc
rorb
cmp
xchg
sbb
push
jp
mov
push
or
push
mov
add
dec
or
jne
les
insb
mov
lea
dec
test
test
cmp
loopne
paddw
push
push
add
xchg
xchg
bound
int3
jmp
int3
or
mov
cmp
dec
popf
pushf
lock
xor
outsb
dec
repnz
outsb
pop
test
dec
bound
filds
aam
xchg
xchg
push
fisttps
xor
push
or
hlt
cmp
sti
cmc
mov
lahf
iret
and
arpl
cmp
lods
jle
and
bound
jo
aaa
lret
push
mov
imul
dec
std
dec
and
clc
mov
imul
xorl
adc
sbb
cmpsb
loope
push
jmp
push
jae
mov
mov
mov
or
insb
mov
imul
mov
negl
mov
mov
cmp
test
scas
cs
mov
add
xchg
test
push
sub
outsb
fisubs
sbb
cmpsl
lds
jg
or
or
idivb
lods
in
xor
mov
bound
gs
mov
aaa
mov
inc
sbb
dec
or
add
stc
bound
fists
push
shrb
outsb
xchg
in
fs
jno
mov
pop
popf
pop
sub
adc
fildl
dec
repz
jg
mov
mov
fildll
jg
adc
outsb
sub
cmp
xchg
xchg
fmuls
imul
pushf
or
cs
lods
sub
xor
mov
popa
pop
fs
aam
or
repnz
push
lahf
divb
inc
cmp
cmp
jo
xchg
cmp
cmp
inc
push
inc
pop
shrl
mov
pop
jecxz
cld
inc
or
xor
add
stos
out
lds
xchg
mov
loop
rcrb
cmc
and
cs
push
cwtl
fldl
push
cltd
sub
add
sbb
out
push
lock
outsl
scas
sarb
rorb
lret
push
or
popf
cs
aaa
cmpsl
pop
out
inc
mov
sti
adc
xor
andl
int
scas
xor
in
or
ljmp
aaa
xor
pop
loop
loop
mov
imul
or
imul
das
push
mov
xchg
xchg
cltd
dec
subb
mov
xor
jp
sub
outsb
xchg
sbb
and
bound
xchg
push
inc
lret
pop
shl
pop
dec
mov
pop
jne
ficoml
mov
and
loop
inc
loope
xor
ret
sbb
and
push
and
bound
cpuid
pop
xchg
daa
add
mov
push
push
mov
nop
mov
adc
and
mull
jae
lock
jo
add
clc
dec
xchg
daa
mov
xlat
mov
inc
push
mov
mov
and
popa
jg
mov
sub
mov
mov
push
jmp
or
adc
popf
add
mov
jg
mov
dec
int
enter
add
jo
dec
cwtl
call
ja
cli
add
pop
addl
pop
xlat
mov
mov
arpl
in
lahf
push
add
outsl
mov
and
ret
and
push
mov
mov
stos
dec
test
push
inc
outsb
sahf
xchg
arpl
push
fs
mov
daa
push
push
orb
push
cmp
loopne
mov
push
shll
lret
add
outsl
mov
lods
insl
pop
push
nop
stc
inc
js
pop
out
in
jge
pop
outsb
fldl
roll
movl
call
pop
aaa
mov
xor
rorl
daa
shr
test
mov
and
cmpsl
loope
mov
or
cmp
dec
fimull
jge
xchg
nop
fmull
jmp
outsb
xor
and
fwait
adc
lea
scas
xchg
cmpb
sbb
imul
leave
mov
push
adc
mov
inc
mov
sub
aaa
sub
hlt
pushf
cwtl
xchg
sub
cmpb
sub
mov
adc
sub
jbe
fnstenv
adc
stc
sahf
outsl
test
mov
test
sub
ja
test
dec
sub
push
ret
and
inc
sbb
mov
test
pop
sbbb
sub
pop
cld
loop
mov
aas
sub
rolb
pop
lcall
ljmp
les
pusha
lcall
push
rorl
and
inc
xor
pop
iret
sub
sub
cmp
sbb
jmp
hlt
jg
pop
in
pop
xor
icebp
in
or
addl
js
lds
mov
cs
iret
test
xchg
mov
fisubrs
dec
cmp
sub
and
fst
sub
out
push
and
dec
add
aas
movsl
mov
sub
repz
stc
and
add
sub
imul
sub
rcll
jle
aad
xchg
jae
and
es
cmpl
ja
dec
inc
mov
adc
sarl
addr16
ror
push
mov
sti
jnp
sub
mov
xor
xchg
inc
mov
jnp
pop
pop
test
xchg
cmp
and
xor
cltd
and
xor
daa
dec
iret
xchg
adc
in
sub
jmp
push
cmp
pop
sbb
xchg
ljmp
inc
mov
mov
call
pop
sub
aad
jge
sub
fwait
mov
je
cmp
jmp
mov
das
jge
out
sti
sar
loope
lock
clc
sub
shr
dec
in
cmp
push
out
lret
jp
dec
mov
sbb
xor
test
pop
push
sub
mov
fbstp
add
xchg
rcl
fstps
insb
push
jnp
adc
add
fs
rolb
jae
je
test
popf
bound
xchg
hlt
cs
lret
das
cs
sub
sbb
int3
out
ss
sub
mov
lock
loopne
les
inc
mov
fistl
pop
movsl
inc
sahf
ds
cli
ja
daa
jb
sub
sbb
jns
sub
mov
sbb
mov
jg
and
inc
cmpb
scas
xchg
add
or
mov
pop
fisttps
neg
sub
mov
mov
rcrl
mov
xchg
ret
xchg
xor
xchg
in
cs
icebp
fstpl
add
adc
jns
xor
push
xchg
loopne
cwtl
sub
pop
push
repnz
sub
movsb
leave
xor
pop
cld
dec
iret
cmp
dec
jl
out
and
adc
imull
mov
mov
dec
pop
sub
shrl
and
xlat
and
pop
dec
into
subl
mov
pop
lds
xor
add
jae
sub
push
fbstp
or
insb
das
cmp
ss
std
mov
push
in
pop
aaa
or
divl
sub
cmpsl
adc
lcall
sbb
mov
dec
or
sti
aas
mov
in
mov
test
add
push
inc
jnp
insl
test
dec
out
xlat
stc
pop
cmp
js
xchg
test
rcl
sub
shlb
sub
lock
jbe
mov
aas
ljmp
adc
fcoml
je
test
push
stc
jo
jle
out
mov
adc
mov
sub
push
mov
mov
add
xchg
adc
test
sub
or
pop
inc
scas
fisubs
inc
adc
mov
out
fisubl
sub
or
mov
mov
mov
lret
imul
les
jnp
dec
cld
insl
sub
shrb
sbb
pop
sub
popa
push
sub
aaa
pushf
out
sub
xlat
xor
ljmp
and
sub
sbb
pop
jae
in
jb
and
mov
outsb
dec
xor
dec
push
test
addr16
sub
mov
sub
std
jne
xlat
sub
pop
imul
loopne
mov
xchg
cmp
adc
in
imul
mov
dec
dec
sub
push
add
shl
pop
or
pop
adc
add
inc
addr16
mov
jns
sub
les
fsts
sub
mov
mov
fwait
xchg
jp
add
je
insl
dec
sub
or
or
cld
bound
jne
add
mov
mov
loopne
je
add
sub
mov
mov
cmp
sub
sub
jg
sti
pop
cmpsl
sbb
xchg
sub
xchg
ret
sub
cltd
lock
mov
adcl
pop
fisttps
sub
inc
xor
int3
sub
je
cmp
add
push
sub
mov
fcoms
and
nop
mov
add
push
cmp
dec
movsb
sub
add
and
fidivl
std
xchg
push
xsaves
repz
dec
sub
cmp
outsl
mov
pop
pop
cli
outsb
mov
mov
and
mov
jp
aam
cmpsb
sub
push
out
mov
inc
and
xor
mov
push
xchg
sub
push
cmp
jns
shll
lock
lahf
jae
mov
sub
cmp
jns
adc
adc
pop
jmp
imul
aas
dec
mov
in
push
hlt
xor
cmp
fdiv
ljmp
mov
pusha
imul
pop
jb
stos
dec
leave
xlat
roll
jp
jl
out
mov
stc
sub
dec
xor
sub
aam
or
sub
mov
fldt
mov
and
imul
or
daa
adc
sbbb
in
mov
inc
insl
pusha
stos
sub
jg
xchg
mov
mov
jl
sub
add
adc
cmp
cmpsl
sub
aas
xchg
mov
xchg
stos
add
fstl
mov
mov
sub
mov
or
pop
adc
mov
sub
outsl
mov
sub
ja
and
jo
jecxz
adc
jne
sub
shll
ja
add
jnp
xchg
ljmp
mov
inc
out
xor
inc
pop
test
repz
and
cwtl
xor
stos
jle
sub
ljmp
int
or
lods
push
push
sbb
xchg
or
ds
or
cmp
sub
in
inc
mov
jl
or
sti
movsb
mov
incl
rol
sub
push
arpl
int3
mov
add
adcl
inc
sub
in
and
or
inc
pop
add
into
jmp
jg
inc
xor
add
or
sub
pop
jg
inc
dec
pop
and
stc
enter
mov
dec
or
sub
fs
nop
dec
lea
sub
pop
shll
test
and
sti
xor
jge
outsl
dec
or
push
and
or
sub
add
adc
jns
dec
xchg
imul
in
inc
sub
pop
daa
imul
lock
pop
inc
xchg
js
sub
cltd
jns
pop
adc
mov
adc
bound
sub
neg
enter
xor
int3
adc
stos
cmp
push
cmpsl
adc
jnp
xor
ret
cmp
dec
xor
out
sub
lahf
mov
inc
loopne
or
cmp
mov
mov
cmc
jae
mov
sub
scas
mov
dec
sub
and
or
jp
stos
int
cld
sbb
pop
sub
sub
mov
mov
jo
mov
dec
cmc
iret
adc
cmp
jmp
rcll
add
mov
ret
fs
inc
mov
or
mov
push
ds
push
sub
rclb
dec
pop
int
push
aad
sub
insb
test
test
sub
sarb
repz
sti
xor
pop
inc
add
es
out
sub
int3
data16
push
lret
dec
subl
mov
jno
ljmp
pop
je
rorb
add
add
pop
test
cmpsb
sbb
pop
lock
out
xor
ss
divb
mov
sub
xchg
dec
and
adc
and
dec
leave
jne
sub
bound
push
out
add
aas
sub
dec
mov
cltd
outsl
enter
sub
mov
adc
adc
mov
shlb
test
pushf
sahf
pop
inc
or
cwtl
push
sub
sti
cmpsl
sub
mov
add
and
cmp
aad
ljmp
or
sub
xorb
xor
sbb
sub
lea
cmp
xor
sbb
and
sub
popa
pop
mov
sub
bound
sbb
inc
push
test
das
jo
mov
jg
scas
sub
sbb
and
divl
sar
popf
bound
and
pop
pop
push
add
out
imul
or
dec
xlat
adc
movsb
jge
sub
mov
inc
shl
jle
leave
pop
adc
call
imul
or
dec
mov
add
rorl
xor
lret
out
sarb
sub
lods
pushf
cwtl
cs
xchg
jge
sub
cmpsl
into
imul
cmp
pop
xchg
subb
xchg
hlt
xor
or
cmp
sub
sahf
sbb
sbb
and
jg
inc
pop
outsl
lods
popf
scas
adc
xchg
in
sbb
leave
cmp
xlat
std
ljmp
xor
sub
sbb
int
je
xchg
sub
jnp
sub
loope
loopne
and
dec
aaa
jb
cld
fildll
rclb
sub
push
inc
mov
cli
pop
arpl
in
fisubs
test
or
mov
lods
sub
and
sub
insb
add
pop
and
repnz
sub
xor
outsl
sub
mov
add
pop
or
adc
or
pop
mov
ljmp
jl
out
ja
sbb
lock
mov
jmp
push
and
test
sub
mov
xlat
push
cs
loopne
or
push
ficompl
adc
mov
addr16
cltd
lret
cmp
out
je
cmp
mov
mov
ljmp
aam
int3
nop
cmc
push
lds
push
add
iret
xor
push
ljmp
push
hlt
mov
stos
pusha
mov
push
push
sbb
push
pop
jne
sub
out
in
and
daa
lea
pop
mov
fcomi
push
iret
jecxz
sub
add
es
loopne
cli
repnz
xorb
icebp
test
shrl
mov
lods
sar
mov
loopnew
shrb
cmp
push
sbb
les
mov
dec
gs
mov
inc
sub
sbb
push
pushf
push
pop
mov
pop
mov
xchg
in
push
xchg
mov
sub
sub
cmp
call
xchg
movsl
dec
adc
add
stos
cmpsl
mov
mov
iret
in
or
fnsave
cmpsb
or
mov
sub
mov
mov
cmp
and
aas
xchg
sub
lcall
xor
and
xchg
mov
jp
or
sub
pushf
scas
push
pop
xor
inc
add
cmp
dec
mov
imul
dec
adc
test
jns
out
in
xor
sub
inc
pop
cmpsb
sub
in
divb
and
dec
cmc
xchg
sbb
jp
sub
xchg
into
push
addb
in
pop
imul
dec
push
push
add
imul
add
mov
push
adc
aam
andb
andl
xchg
scas
in
mov
sbb
cmp
call
dec
orl
stos
and
lods
test
jo
fldcw
cld
xchg
adc
lods
xchg
mov
mov
mov
imull
jle
fstl
lds
cmp
mov
mov
sub
bound
mov
daa
add
les
pop
or
sub
jo
jecxz
test
cmp
ja
pushf
mov
popf
inc
sbb
inc
loope
subb
jb
cmpsb
push
mov
scas
push
push
cli
sub
mov
hlt
arpl
xchg
sbbl
ja
jbe
inc
pop
jns
push
imul
and
pop
pop
or
push
sub
and
pop
and
dec
add
ret
outsb
or
xchg
and
into
aam
into
lea
imul
cmp
jg
inc
shll
call
mov
fiaddl
xor
ret
sub
pop
out
out
lods
adc
and
xor
fidivl
and
cld
or
dec
jne
lret
les
sub
lds
sti
mov
push
xchg
pop
arpl
mov
inc
jmp
push
out
pusha
and
cltd
pop
lods
sub
dec
int
or
shrl
and
movsl
inc
insl
ret
fcoms
xbegin
sti
add
mov
andl
dec
add
add
aas
addb
pop
mov
sbb
sub
pop
bound
fisubrs
repnz
clc
scas
mov
sub
lcall
sti
pop
xchg
hlt
mov
stos
xchg
test
sub
push
sub
or
shr
sub
or
xor
sub
inc
lret
aad
sub
fstl
imul
sub
stos
clc
bound
mov
cmp
cmp
outsl
aaa
sub
je
adc
daa
cmp
sub
xor
std
movsl
pop
mov
sbb
outsl
mov
ss
mov
and
stos
sub
adc
ret
out
sti
movsl
sub
daa
sbb
mov
xchg
pop
movsb
xlat
mov
adc
sub
and
dec
sub
dec
movsb
out
jne
push
inc
mov
cmp
sub
fwait
xor
dec
lea
ss
cwtl
repz
sub
ljmp
pop
scas
aas
sub
xchg
sub
adc
pop
xor
call
movsl
xor
imul
pop
jecxz
arpl
add
push
lods
out
sub
push
jns
sahf
and
push
adc
aad
out
scas
cltd
sub
hlt
mov
sahf
fwait
sub
iret
or
pop
sub
dec
arpl
test
cmp
dec
jbe
sahf
fcmovnb
sub
mov
insl
add
push
stos
sub
mov
adc
arpl
dec
test
stos
jne
in
adc
dec
inc
sub
pop
mov
sub
or
js
pop
add
in
clc
and
xor
and
jae
mov
cmpsb
mov
sub
mov
and
sub
jg
push
add
push
dec
test
sub
in
xchg
out
sub
outsl
hlt
push
pop
popf
pop
mov
cmpsl
xchg
in
sub
push
push
push
imull
rcll
dec
adc
loop
ljmp
and
xchg
adc
jmp
sub
xor
fldt
pop
andl
jmp
int
cmc
sub
or
sub
std
test
mov
in
rcl
sub
sahf
push
or
jp
jecxz
lods
cmp
xlat
pop
loope
hlt
sub
and
pop
mov
loop
pop
mov
sub
dec
out
ss
xchg
mov
into
mov
push
dec
clc
sti
inc
pop
lds
jp
pusha
sub
icebp
popa
mov
pop
adc
repz
dec
mov
push
adc
xchg
inc
xor
inc
shrl
sub
jl
cli
xchg
imul
cmp
adc
cmpsl
jp
and
jae
rcll
sub
mov
cmp
out
loope
imul
mov
rcrl
push
and
test
xor
fimull
test
repz
int
and
lods
nop
mov
jg
push
xchg
data16
inc
or
outsl
cmp
pop
and
mov
sub
mov
in
fisubs
arpl
dec
or
sub
lcall
rcrb
push
ret
out
sub
imul
mov
push
sti
adc
pop
lods
pop
mov
sub
mov
and
mov
shrb
iret
aad
sub
neg
in
or
add
fs
sub
roll
xchg
arpl
cld
in
mov
jae
and
mov
ucomiss
jmp
rcll
cwtl
jmp
xor
test
xor
xchg
loopne
bound
dec
push
sub
mov
out
sub
cmp
aaa
stc
insb
sub
in
sub
cmp
jge
test
shll
outsb
mov
push
fistps
lcall
mov
mov
mov
addl
lcall
adc
dec
leave
sbb
push
loopne
sub
sub
jge
clc
adc
inc
add
xlat
sbb
adc
out
mov
test
inc
out
lods
sub
xlat
sbb
mov
add
int
xchg
ficomps
out
pushf
ret
sub
xchg
fmuls
add
shl
xlat
repnz
hlt
outsb
push
iret
test
or
insl
jno
mov
xchg
mov
jg
mov
imul
jl
repz
cmp
jae
dec
imul
mov
aam
outsb
movsb
add
xchg
push
bound
mov
add
inc
mov
jb
stos
sub
orb
js
fstl
push
dec
cmp
mov
lret
bound
shr
cltd
movsl
dec
fsubrs
insl
and
mov
popf
jno
push
lret
lock
gs
mov
popf
orb
nop
pop
jns
mov
push
adc
mov
enter
adc
cmp
jg
cmpsl
add
outsl
adc
sub
cmp
in
adc
pop
mov
mov
adc
imul
push
mov
push
add
pop
inc
clc
pushf
imul
mov
and
test
lods
and
popa
pop
ret
sub
dec
cs
pusha
movsb
lods
jno
push
iret
subl
sti
adc
adc
scas
jp
sbb
cmp
cmpsb
push
cmp
out
push
add
out
xchg
push
add
jo
shrl
add
shrb
outsb
mov
dec
mov
rcll
mov
inc
sbbl
mov
lods
sbb
ds
cs
or
xor
xlat
out
xlat
loope
sub
insb
ret
mov
lea
ja
fadds
bound
sbb
or
lret
mov
mov
ret
pop
sub
outsb
push
stos
inc
mov
movl
imul
cmpsb
push
stos
fwait
push
lock
int
cmp
sbb
lcall
loopne
adc
xchg
push
push
mov
push
push
enter
lret
mov
inc
jae
imul
int3
rcrb
mov
test
icebp
xorl
xchg
outsl
imul
and
pop
push
aad
shlb
cmpsl
mov
sub
rorl
dec
sbb
pushf
cwtl
repz
mov
inc
shll
out
mov
sub
sub
cmp
cmp
sub
and
mov
pop
pop
dec
mov
pop
sub
xor
mov
add
adc
dec
inc
inc
xorb
xor
push
ds
dec
mov
loop
sub
mov
fcompl
mov
sub
sub
js
cld
mov
cmp
xor
cmpsl
leave
sub
pop
cmp
xchg
push
jb
push
mov
dec
dec
sub
xor
jno
sub
int
clc
out
adc
cmp
xlat
arpl
fstl
xchg
hlt
sub
sahf
andl
push
aad
sub
sbb
cld
and
into
and
dec
lret
sub
mov
das
push
nop
push
addr16
fsubs
push
xor
sub
inc
jecxz
fs
ds
arpl
popf
mov
inc
out
pop
hlt
pop
insl
adc
dec
ljmp
rol
sub
rcrb
sub
inc
mov
mov
cmp
cld
stos
and
cmp
pop
in
mov
and
push
mov
fcoms
or
add
jl
xlat
xchg
sub
sbb
movsl
mov
sub
bound
repz
jno
pop
and
rcrb
mov
jnp
gs
mov
ds
movsl
es
adc
into
insl
xchg
push
sub
push
cs
outsb
arpl
cmp
sbb
int3
mov
fs
dec
xchg
cmp
fimull
shrb
in
mov
call
and
sbb
repz
sti
pop
jecxz
xor
lret
inc
sbb
lret
xor
ret
or
pop
sub
pop
andb
lock
pop
imul
rclb
fwait
inc
fstps
cmp
stos
and
sbb
cmp
sahf
ss
scas
jl
mov
jecxz
clc
or
fisubrl
or
dec
push
mov
cmp
xchg
shrb
bound
iret
rolb
and
scas
aam
ja
sarb
push
mov
roll
xchg
insb
adc
pushf
in
popf
insb
out
and
gs
hlt
mov
popf
bound
shrb
lods
test
adc
add
outsl
add
adc
xchg
pusha
mov
mov
mov
mov
fwait
lcall
xchg
cs
stos
or
shll
int3
adc
sub
lret
mov
sar
imul
jno
mov
and
lcall
mov
addl
test
ss
jecxz
inc
jle
orl
das
dec
push
adcb
or
test
jl
fiadds
clc
fldl
iret
in
adc
mov
jno
lahf
cs
dec
dec
shl
add
aas
pop
popf
ja
fsubr
vmwrite
and
add
cmp
cld
jle
outsb
imull
popa
js
stc
xor
push
cmp
mov
fists
pop
cld
jbe
out
push
fcoms
sub
ret
xor
test
rcr
or
icebp
jge
inc
sbb
lods
xor
cmpb
imul
push
and
xor
fwait
shll
das
rorb
in
insb
lret
mov
cmp
call
cmpsl
fs
adc
push
roll
dec
push
lcall
cli
fsubs
daa
pop
dec
xchg
mov
and
mov
mov
out
mov
fldt
cltd
arpl
fidivl
xor
into
fdivs
movsl
pop
or
sbb
or
fcmovu
inc
negb
popa
cmpsl
add
pop
pop
add
clc
sub
dec
cs
in
std
xor
mov
xor
xchg
test
rep
fsts
ljmp
cmp
in
mov
fs
push
popa
aaa
pusha
sbb
fiadds
cmp
cmp
mov
or
aas
clc
jg
dec
sbb
pop
js
imul
fcomps
sahf
xchg
sub
inc
lods
pop
sub
mull
sub
pop
iret
addl
pusha
shll
lret
push
es
sub
push
dec
mov
aad
mov
test
and
scas
and
das
jbe
lret
and
clc
inc
je
stos
cmp
sub
cmpsb
mov
mov
lahf
test
pop
xchg
subl
dec
sbb
lret
and
sti
and
xlat
jg
imull
fists
sub
decb
ret
sub
imul
mov
mov
aas
cs
adc
sub
fstpt
dec
aad
xlat
fldl
sub
es
push
push
sub
fsubrs
push
fimuls
aaa
sub
sub
jecxz
xchg
sub
in
push
or
add
fadds
incb
ljmp
xor
mov
wbinvd
pop
in
test
pop
dec
mov
cld
mov
in
sbb
jg
dec
sub
shrl
sub
icebp
filds
dec
sub
inc
and
add
subb
push
arpl
cmp
and
imul
hlt
push
lds
sub
rclb
cltd
test
sub
mov
mov
repnz
das
sub
mov
sbb
mov
js
push
sub
xchg
dec
hlt
cmp
push
into
sub
loopne
les
cmc
or
outsb
or
sahf
or
jne,pn
inc
fs
imull
in
insl
and
cmp
sub
std
popf
stos
sub
psraw
cltd
test
add
pop
sub
std
pop
push
xchg
je
pop
cltd
das
adc
divb
or
data16
test
xchg
sub
jb
dec
inc
sub
or
cmp
mov
ds
nop
xchg
sub
jno
dec
sbb
mov
sub
hlt
inc
ljmp
out
jbe
jae
inc
arpl
gs
test
test
movl
mov
mov
and
rorb
mov
sub
xchg
negb
lock
out
sbb
les
jno
cmc
mov
dec
dec
jne
jns
fldt
push
mov
mov
sbb
jmp
fstpl
arpl
mov
sub
fisubl
inc
sbb
mov
dec
pop
daa
inc
jecxz
xchg
sub
iret
lds
pusha
sub
jbe
push
rclb
movntq
pop
jl
in
lea
jle
shrb
leave
push
aad
pop
sahf
xlat
iret
sub
sub
movsb
inc
out
or
sub
adc
dec
sub
cld
mov
fstpl
push
cmp
xor
aam
mov
xchg
sub
fdivs
xor
inc
stos
fwait
call
sbb
dec
adc
andb
pop
sub
push
dec
fsubs
sbb
shlb
sbb
lods
jg
mov
das
cmp
sub
lods
sbb
cltd
in
xchg
fs
cmpsl
notb
arpl
and
mov
add
and
es
jmp
out
xchg
pop
mov
into
sbb
stc
or
push
imul
out
sub
mov
in
aam
insb
dec
ljmp
lods
or
lret
movsl
mov
out
adc
inc
xchg
rorb
daa
mov
mov
mov
sbb
sbb
sub
add
in
pop
xchg
push
fwait
mov
sub
inc
or
repz
sub
sub
and
das
sub
mov
cmpl
push
xor
imul
stos
call
jmp
sub
sub
jns
adcl
mov
loop
add
push
mov
lret
fldt
mov
imul
mov
sahf
mov
mov
cmp
jns
mov
mov
and
lret
sub
pusha
cld
mov
jb
push
movq
lods
and
sub
jno
pop
notb
inc
daa
mov
cmpsb
adc
push
and
sbb
xchg
dec
out
adc
and
mov
pop
sub
xor
push
pop
adc
jno
push
cmp
push
and
dec
add
fucomip
push
sub
add
mov
les
mov
dec
movsl
and
into
xchg
mov
pop
cmp
cli
sub
push
push
mov
outsl
rorb
adc
sub
std
mov
sub
lods
pop
cmpsl
enter
adc
sahf
cs
shrl
imul
xchg
sub
xchg
push
insb
cs
shrl
sub
scas
fstl
mov
jle
test
das
loope
mov
adc
mov
mov
inc
ss
mov
jmp
push
inc
mov
sub
popa
mov
gs
iret
imul
pop
addr16
sub
cmpsl
cmp
mov
aas
fcom
adc
sub
mov
lret
fdivrp
xor
lahf
fistl
das
test
int3
push
cmp
mov
lea
adc
pop
adc
and
jle
sbb
and
fiaddl
push
daa
test
or
xor
adc
int3
jns
adc
icebp
test
or
adc
xor
pop
cs
add
dec
mov
scas
or
ja
sbb
mov
lea
aas
push
fadd
fsubrp
adc
adc
je
scas
sub
push
sub
sub
ss
cmp
inc
mov
pop
jle
cmp
addb
test
cld
push
adc
into
sub
iret
inc
sub
inc
in
stos
xchg
xor
pop
sbb
or
sub
add
lods
push
dec
mov
xlat
jg
stos
inc
push
dec
lods
jns
in
enter
repnz
ljmp
sbb
dec
ss
shll
insl
out
call
loope
mov
sub
js
mov
out
iret
jnp
cs
fidivl
sub
ret
inc
sub
dec
and
dec
sbb
mov
inc
mov
or
test
scas
sub
test
add
adc
sub
pop
pop
movb
mov
lret
iret
xorl
mov
ret
sbb
push
sbb
cs
adc
adc
enter
and
lret
ret
mov
adc
dec
xchg
xor
xchg
ljmp
dec
mov
xor
xor
add
jns
clc
lea
pop
scas
xor
clc
sub
out
shlb
sub
lea
faddp
jge
out
loopne
enter
test
sub
xchg
js
jne
push
ret
jge
xchg
ds
dec
rolb
push
lods
dec
sbb
into
movsl
or
xchg
mov
pop
or
imul
jno
sub
adc
shlb
test
cwtl
mov
es
sbb
pop
fidivrl
stos
xchg
leave
bound
dec
hlt
fnsave
push
xchg
nop
fsubp
outsl
mov
fsts
call
jp
sbb
or
lcall
bound
enter
bound
test
mov
push
outsb
stos
push
iret
xchg
sbb
and
inc
fs
lock
xchg
mov
stos
and
mov
xchg
je
pop
and
jg
pop
outsl
data16
jo
das
xchg
sahf
inc
imul
out
jnp
sub
jg
sti
cs
outsb
shl
sahf
iret
dec
shrb
cmp
mov
pop
stos
jmp
xlat
mov
push
jg
dec
cld
mov
pop
outsb
addr16
push
xor
adc
cs
push
xchg
leave
shrb
cmp
fsts
push
cmp
mov
jp
add
lret
int3
loopne
sbb
lods
es
movsl
cwtl
pop
daa
cmp
push
nop
pop
dec
rcl
push
out
and
mov
and
add
lock
mov
test
rcrb
inc
rorl
mov
orb
popa
mov
and
jbe
out
or
test
add
fs
mov
pop
nop
xor
jg
jo
or
aas
mov
and
push
mov
push
inc
or
ret
mov
inc
mov
mov
jg
call
sbb
jecxz
cmp
xchg
insl
mov
cs
inc
mov
test
mov
xor
test
mov
mov
nop
mov
or
cmp
pop
jne
stc
outsb
arpl
add
dec
jg
jno
mov
jbe
jae
repz
insb
push
mov
inc
bound
aas
and
gs
mov
and
test
stos
cs
mov
inc
xchg
add
mov
sub
fs
cmp
adc
movsw
push
mov
mov
mov
das
sbbb
mov
icebp
mov
pusha
add
rcrb
ret
push
mov
daa
cli
push
mov
clc
imul
dec
or
push
jo
and
ret
or
or
test
jl
shlb
inc
pop
stos
adc
xor
jbe
into
pop
arpl
adc
out
inc
mov
popa
insb
fwait
push
mov
sahf
lea
mov
popa
adc
mov
ret
std
inc
sbb
lds
xchg
repnz
test
sahf
fldcw
test
push
mov
push
lret
sub
jp
mov
lcall
pushf
insb
lret
add
out
mov
fucomi
test
ret
jnp
mov
vpshufbitqmb
xchg
fwait
or
lods
pushf
cwtl
dec
and
add
enter
scas
mov
xchg
dec
cmpb
dec
shll
sub
jnp
pop
push
sub
add
or
js
sbb
scas
xchg
push
sub
test
inc
mov
jb
subl
xchg
and
xchg
mov
scas
sub
pop
push
pushf
icebp
sub
mov
call
xchg
int
dec
shrl
push
sub
das
shll
cmp
loope
loope
push
lods
adc
imul
jns
mov
inc
adc
dec
shr
negb
sub
cmp
inc
mov
or
fs
or
mov
and
jns
or
shll
cli
sub
sbb
xor
mov
xchg
sahf
insb
out
sub
rorl
je
or
aam
sub
out
enter
sub
sarl
xchg
push
shll
sub
movsb
popf
cmpsb
inc
push
push
mov
mov
popa
js
and
cmp
stos
mov
sahf
insl
sub
dec
icebp
or
push
mov
mov
fcmovb
bound
jno
cld
es
jb
inc
and
aas
loop
js
sub
pop
jo
ret
sub
fcompl
pop
push
cs
xor
nop
add
insl
sub
mov
adc
jmp
loope
dec
cmp
das
in
scas
subb
push
dec
cli
cmp
and
sub
lret
stos
adc
sarb
mov
and
bound
sbb
lods
lods
lahf
test
clc
popf
cmp
adc
sarl
dec
mov
xchg
fsubp
add
jnp
popa
int3
movsl
lret
stos
xchg
fldt
sub
ds
inc
fcomip
fisttpl
pop
loop
lcall
cli
stc
sub
cmpsb
sbb
ss
push
fbstp
in
push
pop
mov
xchg
mov
or
lcall
bound
dec
dec
adc
cld
jp
repnz
jg
mov
push
pop
inc
jbe
movsl
cmp
push
jg
jns
mov
sub
sbb
sbb
push
push
add
xchg
pop
imul
stos
mov
and
imul
jno
in
sbb
and
fiadds
xchg
sub
int
insb
xor
xchg
out
cmp
push
mov
sti
mov
push
aam
insb
bound
inc
adcb
lea
pop
push
push
cmp
test
shlb
or
inc
push
sbb
gs
lret
add
call
add
push
outsl
xor
daa
sbbb
mov
fwait
push
xlat
jne
mov
push
aaa
and
dec
pop
cmp
adc
sub
outsb
out
rol
add
push
bound
js
ffree
vshufps
and
pop
je
mov
xor
daa
lea
fisubl
mov
es
sub
lods
inc
or
or
popa
fcmovne
and
push
outsl
je
add
stos
sbbl
jo
xor
sbb
mov
fsub
xlat
mov
outsl
fimuls
add
lret
xor
add
xlat
or
cltd
dec
movl
addr16
push
add
sbb
test
xlat
jg
cmp
test
xchg
add
pop
xor
nop
dec
mov
xchg
cmp
push
mov
push
jb
pop
sbbb
add
std
xchg
fdivp
sub
ret
in
shrl
push
jg
cs
sbb
mov
lahf
push
test
sbb
jl
xchg
mov
pop
loop
popa
lea
test
dec
dec
sbb
xor
imul
cmp
mov
dec
leave
jg
int3
test
cltd
jb
jb
or
sar
fdivl
or
stos
imul
frstor
test
les
loope
or
mov
pop
mov
pop
and
je
stos
lds
ja
gs
add
cltd
push
push
aam
lret
jo
addl
vfrczss
sub
or
dec
push
movsl
xrelease
nop
mov
lea
mov
sbb
push
cli
frstor
add
imul
ret
adc
dec
sub
je
add
outsb
ja
call
out
cmp
popf
add
pusha
or
rcrb
push
ljmp
loope
xchg
push
imul
mov
popa
adc
mov
sar
xchg
lret
sbb
add
stos
push
jbe
mov
insb
cmpsl
js
sbb
xchg
mov
mov
push
insl
leave
jb
sahf
mov
sarb
mov
add
push
fdivl
clc
std
mov
or
jl
adc
mov
sub
sub
jecxz
mov
test
or
add
mov
sub
inc
add
sub
in
sbb
mov
sbb
ficoms
clc
sahf
js
leave
inc
subb
stc
hlt
bound
and
mov
das
mov
or
loopne
jp
mov
inc
scas
jle
into
fsubs
push
push
mov
push
dec
add
nop
pop
mov
sbb
jl
out
and
gs
mov
add
mov
lods
roll
ljmp
lahf
inc
mov
imul
rorb
sub
xchg
xor
aas
sbb
dec
mov
lods
adc
lock
add
push
pusha
sbb
jnp
push
inc
ja
cs
aam
xor
sub
je
and
imul
lea
test
mov
pop
mov
mov
lock
xchg
lea
add
and
ret
push
divl
mov
dec
xchg
cltd
xchg
aam
sub
xor
mov
fsts
ja
pop
cwtl
inc
cmp
int
out
sub
xor
je
pusha
push
push
leave
and
stos
fnsave
ret
pop
adcb
xor
ja
int
mov
lcall
mov
jbe
cmpsl
xor
leave
rolb
sti
mov
xchg
mov
jp
xchg
jno
andb
pop
mov
push
imul
fwait
xchg
cwtl
and
push
sub
mov
imul
imul
ja
dec
xchg
mov
lahf
lods
jecxz
fstpt
and
xor
lcall
pusha
subl
test
or
outsb
push
mov
dec
bound
pop
insb
mov
addr16
or
push
ja
mov
pop
mov
cli
fstpt
stc
sub
xchg
insl
stc
cmp
lea
sub
pop
mov
mov
testl
adc
sar
dec
push
leave
gs
pop
imul
jecxz,pn
ret
mov
push
dec
lcall
jne
sti
mov
adc
ds
cmpb
xchg
inc
jmp
into
loopne
cli
popa
xchg
or
jnp
jnp
enter
shll
out
jg
in
mov
notb
cmp
sbb
test
jle
lahf
pop
int3
rcrb
dec
idivb
dec
jbe
sarl
pop
enter
aad
cmp
bound
mov
mov
bound
jmp
pop
clc
les
bound
aam
inc
adc
jae
xor
cmpl
int
mov
or
popf
fildll
sub
jmp
jp
inc
jge
xor
out
or
xchg
sbb
adc
scas
jb
sub
pusha
ret
inc
fsubrl
and
imulb
in
xchg
stos
xchg
lock
rcrb
jp
mov
movsl
or
cmpsw
iret
mov
mov
lcall
ja
push
mov
push
daa
push
inc
sbb
mov
cwtl
bound
hlt
mov
dec
push
pushf
rcll
mov
lods
jecxz
xor
xor
sub
scas
adc
xchg
arpl
xor
inc
fwait
mov
ljmp
pop
cs
mov
mov
jl
mov
bnd
push
dec
dec
pop
stos
jecxz
and
add
jnp
sub
xchg
aad
repnz
loope
stos
and
xchg
movsb
jne
imul
add
or
movsl
les
aas
or
sub
jnp
sub
in
push
mov
cmc
data16
jb
mov
icebp
out
ret
jno
cltd
addr16
xchg
fadds
out
stc
pushf
aad
pop
test
push
mov
lea
mov
out
mov
and
push
mov
lcall
mov
push
mov
sub
call
sub
arpl
adc
movsb
push
or
sub
lds
mov
movsb
fimuls
dec
cltd
pop
pusha
ficomps
mov
mov
push
pop
int
stos
jmp
cmp
or
pushf
or
in
jmp
fwait
push
daa
nop
and
xchg
adc
push
and
ja
mov
jecxz
sub
push
mov
arpl
xor
jns
sub
ss
xor
dec
pop
dec
or
mov
dec
das
or
xchg
mov
daa
push
pushf
mov
sub
insb
and
mov
mov
int3
jge
jae
add
cmp
cmp
push
mov
movsl
lods
push
sub
cmp
fpatan
push
and
and
mov
mov
sahf
or
inc
sub
notb
and
sub
xlat
xchg
mov
xchg
dec
mov
ljmp
and
mov
ljmp
fimull
mov
out
loop
cmpsl
and
inc
subb
push
mov
push
insb
pop
cmp
and
outsb
int3
push
les
push
mov
or
inc
sbb
pop
daa
sbb
dec
sub
inc
test
or
and
addr16
or
pop
daa
mov
xorl
ret
ds
stc
outsb
add
xorb
aad
push
sub
sub
ds
sub
sub
loopne
sub
and
aas
sub
out
mov
xchg
mov
sbb
inc
scas
test
sub
test
add
add
test
aam
adc
jae
add
or
fisttpll
and
xchg
aaa
jecxz
sub
sbb
sub
daa
mov
push
out
dec
xor
adc
and
and
add
cs
push
neg
inc
das
daa
xchg
stc
lods
or
in
jmp
out
add
sub
jmp
lods
inc
fs
fcomi
sub
insb
pusha
dec
sub
dec
into
lea
sub
sub
scas
lods
cmpsl
fimuls
out
subl
or
lods
call
and
jmp
or
addr16
xchg
ss
cs
mov
lret
pop
ds
push
lods
or
and
dec
movsb
push
leave
and
xor
loope
sub
push
mov
daa
lret
pop
mov
lcall
and
sub
arpl
into
loopne
sub
inc
inc
arpl
cli
pop
les
mov
jne
mov
pusha
lret
or
jp
xor
icebp
lea
or
subl
ss
test
cmp
add
mov
jmp
sub
mov
xor
cltd
movsb
jecxz
mov
xlat
stos
lods
cmpsl
rolb
adc
dec
cmpsb
gs
add
stc
inc
jae
mov
in
out
aas
dec
inc
shrl
sbb
out
in
iret
xor
pop
xor
xor
sbb
add
int3
enter
xorl
add
test
mov
mov
xor
ffreep
mov
daa
addr16
int
bound
fildll
jp
hlt
lret
jne
pop
pushf
mov
jle
jecxz
and
roll
mov
in
daa
cmpsb
cli
add
mov
or
popa
movsb
and
cmp
flds
xchg
mov
or
cs
and
pop
add
sbb
or
push
or
add
enter
outsb
sbb
lcall
inc
add
jmp
push
sub
dec
cld
imul
test
xchg
mov
insl
test
cmpsb
les
loop
mov
gs
inc
incb
mov
lret
pop
or
loope
and
sub
add
adc
sbb
das
cmpsl
icebp
test
inc
daa
xlat
push
or
test
sub
pushl
adc
test
pop
test
or
lods
scas
addr16
sbb
lcall
mov
dec
out
sub
not
cmpsl
int
sub
mov
loope
clc
popf
mov
inc
nop
ror
add
mov
and
in
and
aaa
mov
cmp
pop
fcoms
outsb
jge
cltd
mov
push
dec
cmp
dec
cmp
sub
mov
iret
push
push
mov
and
push
and
jle
xchg
js
cs
add
push
sub
loope
std
mov
sbb
push
or
pusha
out
data16
icebp
sub
adcl
sub
cld
cmp
mov
test
or
xlat
sub
call
out
add
or
sub
fs
mov
int3
cmpsl
mov
adc
gs
inc
and
jg
jmp
fcom
fbld
or
mov
aaa
pop
clc
imul
enter
out
cmp
and
loopne
or
iret
sub
dec
gs
bnd
pop
push
int
out
lahf
inc
push
sub
jbe
push
lea
jae
sub
adc
sub
sub
outsb
or
and
push
dec
inc
mov
lods
and
cli
movsl
mov
out
cmp
or
pop
ret
jge
and
scas
dec
cmp
adc
cld
mov
mov
mov
stc
scas
daa
arpl
push
ds
aam
jecxz
lods
enter
mov
jecxz
dec
outsl
or
nop
int3
and
mov
or
cs
cmpsb
imul
out
sub
pop
add
dec
in
fwait
ss
or
fildll
mov
and
cmp
outsb
sub
outsb
and
xchg
mov
sub
or
adc
out
sub
leave
negb
into
mov
and
idivl
push
int3
and
cmp
jo
sub
int3
popa
pop
movsb
addr16
jbe
out
mulb
fs
jmp
add
fldenv
sub
cs
orb
in
shll
adc
cs
in
push
sub
ret
lods
sub
pop
sbb
shr
adc
ljmp
ficompl
jl,pt
fildll
daa
mov
xlat
insb
sub
mov
cmp
sub
xchg
push
or
incb
js
or
xor
loopne
and
out
ja
xchg
xchg
testl
leave
sub
stos
inc
dec
sti
inc
fistpll
inc
call
jge
in
mov
xor
and
mov
jmp
je
sbb
gs
mov
sub
jne
mov
mov
mov
xchg
addr16
adc
out
sub
ret
and
leave
out
mov
inc
test
jne
imul
or
sbb
mov
mov
sub
ret
pop
mov
lods
jecxz
cmp
movsl
jbe
or
es
sbb
sub
push
adc
jmp
ljmp
or
ret
popf
mov
xchg
cmp
mulb
push
insl
out
mov
and
adc
lahf
outsl
lret
fcmovbe
or
push
xor
adc
pop
dec
movsb
cmp
das
cmp
pusha
or
cmp
inc
sub
imull
in
xchg
xchg
add
in
cltd
xchg
mov
dec
xchg
dec
daa
inc
js
mov
into
pop
and
xor
push
nop
sahf
mov
popf
or
pusha
dec
stos
jae
xchg
push
cmp
xchg
scas
sub
rolb
dec
adc
or
lea
lret
movsl
mov
cmp
into
xchg
aad
int3
push
dec
sub
push
cmp
mov
lret
addb
or
sahf
or
ret
pop
aaa
push
mov
enter
mov
js
cli
xor
cmp
and
mov
adc
mov
jge,pt
test
int3
cs
and
pop
mov
cli
inc
test
test
pop
roll
mov
outsl
mov
cmp
jae
jecxz
iret
add
inc
fisubrs
in
xchg
jne
pop
and
jmp
out
mov
mov
lock
cmp
dec
push
inc
fistl
stc
xorb
pop
popa
xlat
movsl
mov
sbb
jle
push
in
aad
out
in
add
push
in
ljmp
mov
loop
aad
push
call
mov
stos
and
aam
fmuls
leave
test
fisubl
das
lret
cmp
sbb
aam
ljmp
enter
mov
aas
addr16
jns
push
push
adc
mov
inc
sub
xchg
std
xchg
jno
lock
add
inc
or
dec
out
daa
int
test
test
imul
push
sub
je
lods
leave
dec
dec
pop
lods
dec
sub
cmp
rcrb
or
sub
add
insb
sub
lret
popa
inc
in
pop
outsb
popf
ds
mov
xor
imul
insl
test
mov
aad
js
int3
sbb
sub
test
cmp
scas
xor
in
ss
lods
daa
mov
lods
mov
cs
test
mov
xorl
popf
bound
sub
imul
adc
out
lret
sbb
pushf
lea
push
das
pop
jp
movsb
sub
in
gs
push
mov
jge
sbb
cmpsl
xchg
xchg
dec
outsb
push
icebp
in
sub
test
sub
sub
and
mov
mov
ja
dec
sub
mov
pop
fstpt
sbb
bnd
xchg
xchg
sbbl
xor
pop
jmp
adc
mov
mov
cs
xchg
push
lods
cmp
mov
mov
aad
fnsave
add
push
xchg
into
lret
and
mov
call
sub
inc
sub
or
push
data16
pop
les
jno
inc
ret
jbe
leave
stos
les
adc
shlb
mov
jge
std
mov
pop
xchg
insl
cld
push
lock
dec
aaa
stos
or
test
jle
cmp
push
fiaddl
or
jno
in
dec
and
push
sub
mov
arpl
add
leave
dec
jl
outsl
or
out
addl
pop
pop
sub
mov
hlt
sahf
lods
or
testb
and
sub
sub
imulb
int3
lcall
gs
imul
mov
and
jle
xchg
es
scas
sub
mov
leave
decl
lods
lret
or
sub
lods
mov
stos
leave
and
mov
cmp
mov
into
lods
daa
iret
or
and
lret
jg
cltd
insb
pop
dec
daa
add
push
int
xor
mov
cmp
xor
in
in
or
pop
mov
loope
mov
dec
out
leave
imul
je
out
arpl
jno
js
enter
fndisi(8087
mov
pop
jecxz
or
into
inc
mov
mov
int3
and
adc
aas
xrelease
pop
jecxz
jnp
outsl
cmp
push
xchg
sbb
imul
jecxz
sub
cmp
cmp
pop
push
mov
adc
int
movsb
push
sub
push
sbbb
xor
xchg
or
dec
and
jno
inc
jb
inc
jmp
mov
or
inc
sub
stos
enter
enter
stc
mov
mov
jbe
adc
or
sub
out
jbe
lods
arpl
dec
pop
gs
add
mov
aad
andb
pop
stc
or
cmp
cmp
sub
lods
pop
dec
inc
or
and
inc
or
xchg
out
and
inc
andb
xchg
into
loope
lods
and
cmp
call
fs
sub
leave
jp
jnp
test
sti
mov
jmp
out
lods
push
adc
mov
lods
es
cmp
lea
xor
js
pop
sub
mov
pop
adc
sbbl
dec
and
and
scas
pop
int
out
fnsetpm(287
cmp
mov
sbb
and
mov
ret
mov
dec
mov
add
sbb
leave
aas
fiadds
mov
xchg
or
cmp
fstl
fsub
sub
or
push
les
and
dec
int
mov
test
insb
cs
out
addr16
mov
mov
lock
mov
sub
movsl
inc
fs
popf
jecxz
or
xor
mov
jecxz
mov
jo
dec
mov
addr16
sub
gs
or
leave
push
push
push
jnp
jns
sub
ud1
sarb
ret
add
mov
mov
mov
divl
mov
dec
aad
jmp
mov
and
jae
pop
outsb
xchg
sub
aas
pop
mov
push
pushf
out
dec
mov
movsb
lods
and
lock
mov
leave
daa
gs
cmp
push
xchg
imul
inc
fstpt
movsl
sbb
lods
add
sbb
scas
andl
or
lock
add
dec
out
lods
add
lods
jecxz
and
push
inc
add
and
adc
leave
ss
jns
pushf
or
or
aad
subl
xchg
mov
lret
outsb
cmp
into
out
into
dec
daa
mov
out
call
leave
xor
and
or
aam
or
iret
lods
outsb
leave
repz
in
cmpsl
add
dec
and
mov
inc
xor
pop
dec
xchg
jge
aaa
jecxz
xchg
or
int3
fstl
jnp
arpl
mov
sarl
pop
add
outsb
pop
into
adc
dec
sbb
pop
movsb
lret
mov
aad
push
lea
pmuludq
xchg
mov
or
lods
xchg
cmpsl
mov
es
jmp
jne
mov
sub
push
fildll
mov
hlt
adc
push
add
enter
outsb
stc
or
or
aas
int3
arpl
sub
xor
push
mov
iret
imul
mov
mov
add
aam
test
mov
mov
in
mov
notb
mov
sub
in
scas
loopne
add
ds
in
and
mov
mov
in
sub
mov
and
addr16
mov
rclb
fstl
out
addr16
mov
mov
andl
ds
xchg
push
insb
test
iret
jge
dec
je
push
sub
popa
and
pusha
and
sub
ss
inc
xor
pop
rcr
push
sub
stos
sub
scas
and
xlat
pop
and
popa
mov
in
test
jne
stos
test
pop
stc
test
mov
in
and
enter
and
imul
int3
push
pop
out
subl
cltd
lods
sub
mov
insb
insb
push
dec
test
test
add
pushf
pop
mov
pop
jo
or
lea
and
sub
stc
dec
jmp
iret
pop
or
xor
pusha
add
test
enter
addr16
movsb
add
into
sbb
leave
int
mov
sub
cmp
scas
imul
cmpsl
rorl
leave
ret
cmpsl
fstpl
inc
cmp
orb
inc
out
insl
add
cmpsl
or
xchg
adc
into
mov
movsl
aaa
mov
mov
push
jp
ret
jg
add
ret
or
or
inc
dec
into
pop
stos
or
dec
jecxz
jmp
enter
in
mov
push
pop
test
dec
enter
addl
mov
push
push
test
xlat
and
mulb
or
sarb
in
push
sub
and
mov
push
push
ja
xchg
popa
pop
sbbl
adc
leave
fmull
mov
stos
scas
push
movsb
mov
mov
inc
jae
mov
scas
repz
icebp
pushf
ret
push
out
cmp
mov
xchg
ret
jmp
xchg
push
xor
out
hlt
daa
cmp
sub
mov
test
cmp
dec
jno
arpl
ss
pop
in
clc
push
mov
jecxz
push
fldcw
lock
pop
cmp
in
outsb
ljmp
out
test
lods
int
sub
xchg
sub
push
lods
test
add
xchg
insl
xchg
aam
outsb
adc
lods
mulb
push
fdivs
and
out
sub
out
sub
inc
xchg
cmp
and
sub
push
lods
out
sbb
loopne
mov
mov
pop
popf
sub
int
xchg
sub
add
andl
inc
sbb
cmpsb
shr
mov
mov
inc
mov
daa
or
dec
cmp
les
push
hlt
and
cli
xchg
xor
and
dec
mov
mov
into
pop
push
jp
dec
insb
and
lcall
sub
xor
xor
adc
addr16
sbb
iret
xchg
add
and
shrb
inc
imul
jecxz
jl
icebp
ljmp
inc
sub
pusha
xlat
mov
out
adc
inc
sub
add
clc
jecxz,pn
sbb
cmp
cmpsb
sbb
mov
sub
or
lods
jmp
push
lds
out
add
or
mov
push
movsb
out
dec
xchg
push
inc
xor
clc
push
or
insb
lret
or
jne
sbb
lcall
adc
push
mov
lret
loop
divl
and
mov
mov
mov
sti
insb
push
int3
adc
inc
pop
dec
mov
or
rcll
push
or
in
test
andb
lods
fcompl
ret
lea
push
adc
ljmp
jge
inc
mov
pop
or
mov
mov
sub
inc
cmpl
cs
mov
inc
rorl
pop
outsb
hlt
cmp
fdivrl
insb
outsl
mov
mov
jmp
xorl
mov
popa
push
xchg
dec
sbb
sub
mov
pop
mov
pop
mov
lods
mov
cmp
rolb
fucomip
and
lods
sub
adc
pushw
xor
sub
arpl
shrl
mov
gs
jns
mov
mov
leave
cmp
shr
ljmp
add
out
sub
xlat
pop
insl
cmpsl
cs
cmp
sahf
loope
sub
xchg
or
mov
clc
mov
or
jne
sub
outsb
jno
pop
int
lods
sbb
dec
sub
call
ret
out
mov
fwait
dec
xor
test
test
in
cmp
inc
cmp
xchg
sub
outsb
imul
and
mov
jae
dec
and
mov
sbb
out
fs
sbb
cmp
xor
or
jge
popa
xchg
or
push
adc
jecxz
mov
xchg
sub
in
fstpl
int
mov
cs
lods
adc
out
inc
and
mov
scas
test
mov
mov
nop
push
inc
push
mov
int
mov
sbb
scas
enter
lods
push
adc
incb
sbb
gs
dec
pusha
xlat
sub
adcb
dec
outsb
sub
dec
push
adc
mov
add
mov
xor
add
lret
ja
inc
push
stos
inc
out
out
sub
jae
pusha
std
stos
mov
inc
jne
in
sbb
or
out
lea
dec
idivl
sbb
int3
mov
out
push
call
aaa
mov
mov
cmp
inc
sbb
or
cmp
jnp
jae
mov
mov
xchg
pop
or
clc
dec
lods
test
les
mov
and
mov
add
ja
pop
push
enter
vorps
sub
add
lret
loope
testl
mov
sub
sbb
arpl
push
mov
sub
fisttpll
fstpt
je
mov
lcall
imul
pop
pop
adc
jno
imul
jmp
rcr
push
inc
cmp
jno
sbb
pop
andl
sbb
push
iret
mov
inc
or
mov
repz
and
test
iret
out
imul
in
add
and
mov
dec
sbb
sar
xor
fsubrp
mov
or
dec
push
sbb
jl
outsl
and
in
and
sbb
daa
je
daa
xchg
in
movsb
dec
fs
dec
and
mov
xchg
fs
out
jecxz
and
mov
lock
fwait
and
shr
add
insb
clc
mov
inc
call
cmp
popa
mov
mov
sbb
popf
in
fisttpll
xchg
ret
inc
jns
jmp
movsb
push
jp
jecxz
pop
mov
nop
mov
mov
pop
loop
push
insb
or
and
xor
mov
push
pop
inc
add
inc
add
push
xchg
pop
xchg
add
xchg
daa
imul
testl
xchg
insl
cmp
cmp
adc
or
sub
pop
scas
cmp
rep
or
daa
ljmp
movsb
cmpsb
out
outsb
or
and
dec
aam
or
test
sub
clc
lods
dec
pop
and
test
out
mov
cs
mov
push
aam
mov
inc
arpl
push
stos
insl
mov
xlat
fcoms
mov
sub
mov
xor
sub
or
sbb
cmpsl
sub
aad
fcomps
les
or
sbbl
mov
lods
add
dec
xchg
or
out
xlat
aas
mov
pusha
sub
pop
shr
ljmp
and
push
stc
ljmp
sub
clc
mov
jmp
mov
xor
pop
fwait
daa
inc
enter
imul
jbe
ds
and
adc
mov
sub
mov
leave
pusha
sub
rorl
insl
pop
loop
sub
push
in
sub
inc
mov
popa
mov
in
or
cltd
sub
subl
test
pop
push
daa
lods
or
xor
lock
adc
mov
stos
cmpsl
test
mov
in
stos
ljmp
xchg
and
out
daa
push
fidivrl
adc
xchg
lea
in
add
sbb
dec
in
and
lods
in
jmp
and
ret
mov
push
jg
mov
adc
cltd
dec
femms
xchg
stos
mov
xor
cmp
sub
jecxz
jecxz
push
daa
imulb
or
cmp
into
lods
leave
adc
pop
push
inc
or
cltd
repnz
sub
sbb
subb
adc
xchg
daa
aaa
push
imul
cli
lock
cltd
mov
xor
inc
mov
imul
mov
push
cmpsl
mov
inc
outsb
jecxz
pop
mov
outsb
fnsave
rcll
movsl
daa
or
nop
sub
xor
push
mov
mov
jl
mov
cmp
adc
dec
arpl
mov
int3
call
into
lods
pop
or
fldcw
sbb
cmpsb
icebp
cmp
pop
mov
in
lods
mov
fidivrl
rep
pop
dec
sub
push
add
mov
and
or
xor
icebp
push
ja
ret
cs
aad
dec
lret
int3
loope
mov
add
push
inc
in
sub
popa
pop
icebp
scas
adc
mov
fwait
add
insb
push
div
enter
out
sub
adc
push
and
call
inc
loopne
in
mov
in
cmpsl
in
inc
nop
addr16
push
cmpsb
push
mov
outsb
insl
mov
out
lods
pop
cmp
mov
lret
or
jp
dec
daa
div
gs
movsb
jbe
arpl
out
sub
push
ds
sub
in
int3
arpl
aas
lcall
mov
add
sti
test
ja
jecxz
imulb
cmp
or
cmpsl
test
cmc
push
sbb
sub
nop
lret
scas
lret
stos
and
psubusb
cmc
gs
ds
xchg
iret
adc
or
or
jmp
loop
aad
cmp
jg
jp
jle
test
test
clc
stc
sub
decl
ret
int
push
stos
cmpsb
sub
sub
xlat
sub
mov
test
and
sbb
sbb
cmpsb
leave
sub
inc
icebp
add
cmpsb
out
shll
in
sub
int
dec
fildll
je
out
enter
sub
inc
nop
incb
dec
pop
outsl
mov
xchg
or
out
inc
outsb
xorl
imul
and
pusha
daa
movl
push
aam
xchg
mov
int3
or
sbb
aas
fsubs
fidivrl
sarl
es
mov
nop
add
push
sub
fdiv
xlat
dec
test
xchg
ja
lock
xor
pop
xchg
data16
arpl
mov
js
and
inc
push
push
xchg
push
sub
mov
sub
mov
cwtl
arpl
cmp
jmp
mov
lea
imul
mov
sub
xor
ret
in
dec
mov
dec
dec
add
lret
fsubr
mov
and
scas
xchg
sub
fsubrl
test
pop
sub
and
nop
pop
test
jno
lods
push
pop
into
daa
outsb
insb
out
pop
aad
or
scas
sub
lcall
pop
stos
dec
ljmp
int3
cmpsb
or
int3
popa
out
mov
movsb
mov
in
push
or
out
pop
leave
lods
les
mov
and
push
ret
daa
cmp
inc
adc
aad
sbb
lea
mov
add
dec
and
leave
add
mov
ss
lds
or
jmp
dec
pop
xchg
xchg
jb
inc
ja
dec
stos
or
jl
dec
and
mov
call
xor
cmpsb
or
sub
or
leave
xlat
dec
mov
and
mov
xchg
cli
sub
outsl
dec
in
cs
ror
adc
jmp
cmpsb
stc
xlat
int
adc
popf
arpl
mov
xor
pop
fidivl
pushf
add
cmp
or
imul
lahf
add
sbb
mov
xchg
mov
dec
add
test
sub
dec
mov
push
dec
faddl
insb
cmp
mov
sub
cli
aad
mov
sub
int
insb
mov
cmp
fldl
sub
aaa
pop
enter
jnp
mov
scas
xor
dec
mov
fwait
pop
and
in
mov
aaa
aam
jmp
xor
in
ret
jecxz
mov
out
sub
call
sarl
mov
insl
cmp
dec
or
lret
and
scas
fstpl
addr16
mov
mov
push
sub
ljmp
gs
jp
loope
sub
jno
mov
inc
sub
push
sub
jmp
or
lea
je
dec
cs
pop
push
add
in
fcmovnbe
and
mov
xchg
inc
or
or
add
out
cwtl
insl
daa
xlat
insl
pop
ficomps
in
test
push
sbb
xchg
in
sub
dec
in
ja
test
arpl
imul
push
mov
xor
jbe
sub
inc
imul
push
out
xchg
in
sub
ds
out
xchg
dec
cs
jns
xchg
adc
xchg
in
lahf
in
enter
xor
mov
mov
insl
cmp
movsl
jp
jmp
mov
inc
int
or
push
repz
andl
mov
adcl
add
clc
outsb
xor
in
into
es
sub
movsl
sub
mov
shrl
mov
mov
inc
shll
add
in
inc
xchg
in
scas
sub
mov
daa
and
test
filds
mov
push
incb
jne
mov
inc
int
push
mov
loope
neg
jg
enter
add
je
fisubrl
mov
cmp
stc
insl
stos
daa
cmp
shrl
subl
ja
mov
and
int3
and
mov
test
adc
and
lret
sbb
aad
jl
and
jle
mov
adcl
leave
subl
push
xor
and
movl
cmc
scas
xchg
inc
push
aas
popa
test
add
lcall
jmp
cmc
cmpb
rorb
sub
ja
push
inc
jl
cmpsb
call
ljmp
cmp
sub
jp
mov
xchg
xchg
test
sub
push
in
bound
sahf
and
out
aas
out
lods
xchg
sub
push
and
xchg
sbb
jb
daa
ror
adc
pop
inc
mov
out
sub
lahf
cmp
out
loop
in
push
scas
push
pop
xor
inc
das
in
inc
fisubrl
cs
or
xchg
out
rclb
mov
cmp
adc
mov
mov
fdivrl
sbb
xchg
jnp
dec
jbe
test
xchg
leave
ljmp
xlat
push
dec
gs
addr16
pop
scas
adc
xchg
jp
cltd
sbb
push
jge
sub
inc
mov
mov
add
sub
cli
inc
xchg
int
mov
in
mov
dec
jle
xchg
push
inc
push
addr16
sub
es
and
out
rcr
cmpsl
push
mov
and
repz
in
mov
daa
les
insb
std
fsub
lcall
jl
bound
push
sahf
les
lret
int
or
or
icebp
loopne
push
ds
into
adc
push
xor
sub
mov
test
addr16
lods
push
fcmovnbe
out
scas
inc
inc
mov
sub
dec
in
mov
sub
pop
cli
insl
mov
mov
inc
ljmp
mov
xor
push
lds
mov
mov
fs
dec
insb
cmp
outsl
outsl
pop
inc
mov
inc
mov
or
xor
or
or
shr
in
push
mov
and
push
push
dec
lahf
mov
push
push
nop
enter
inc
call
out
js
pushf
cli
loope
push
out
or
pop
xchg
adc
arpl
adc
sbb
ljmp
pop
add
out
clc
scas
lea
cmpsl
sub
push
pop
adc
dec
mov
add
xchg
imul
inc
add
shlb
push
and
jl
sub
and
mov
shll
shl
fstpl
mov
das
xchg
adc
in
dec
fucom
les
adc
xlat
pop
jmp
test
daa
sti
dec
add
rcrb
outsb
fs
lods
sti
jmp
push
sbb
mov
xor
neg
mov
cmp
fwait
cs
les
pusha
fwait
xchg
sub
test
bswap
jge
fldt
push
sub
mov
scas
dec
push
pop
loopne
or
imul
lods
in
iret
sbb
add
mov
and
mov
or
leave
add
cltd
call
scas
xor
and
xchg
pop
dec
cmp
mov
mov
jne
mov
cs
ficompl
mov
jno
les
jae
dec
push
ljmp
add
cld
loop
sub
movsl
or
pop
mov
add
sti
addr16
scas
mov
push
push
mov
orl
cmp
dec
and
cli
or
mov
sbb
daa
cmpsb
aas
jne
inc
out
jecxz
jecxz,pn
jl
insb
mov
testl
push
hlt
jnp
stos
das
cltd
mov
push
cmp
push
gs
mov
and
int3
and
or
mov
leave
shlb
aam
xchg
mov
shll
pushf
or
xlat
arpl
test
test
scas
enter
int
rcrl
xchg
cwtl
mov
nop
ret
mov
or
or
xchg
cmp
push
jbe
inc
aad
shlb
lret
and
cli
sub
sbb
sub
arpl
in
outsb
mov
jne
xchg
sub
adc
push
mov
mov
lret
iret
jae
leave
jecxz
sub
xchg
and
sub
arpl
mov
adc
jle
mov
pop
sub
sahf
lods
mov
jecxz,pn
add
push
mov
stos
ss
loopne
cmp
sub
lods
lds
inc
add
int3
cmp
out
xor
sub
dec
xchg
adc
ljmp
sub
int3
cmp
pusha
and
movsl
xlat
jl
mov
or
mov
add
mov
inc
push
out
or
mov
lcall
push
mov
push
nop
dec
call
pop
movsl
push
loop
sub
lret
popl
je
jmp
icebp
leave
mov
mov
dec
insb
and
out
mov
sahf
xorl
add
pop
je
xor
jbe
gs
xchg
xchg
mov
enter
xlat
gs
aas
mov
call
dec
add
shlb
mov
and
nop
jp
dec
sbb
outsb
into
cmpsb
push
cmpsb
enter
xor
push
mov
insl
daa
adc
mov
iret
mov
adc
jo
inc
cmpsb
loop
mov
sub
and
jmp
mov
jmp
xchg
xor
inc
test
cli
mov
inc
sub
inc
sbb
mov
mov
xchg
in
or
xchg
sbb
or
xor
and
dec
cmpsl
inc
addr16
sbb
imul
ja
sub
xchg
arpl
insb
jle
push
jg
add
sarb
movsl
mov
div
lods
out
sub
or
and
ret
enter
dec
jmp
cli
inc
inc
mov
imul
xchg
sbb
jle
push
or
out
sub
iret
negl
cwtl
dec
sub
sbb
lds
fldenv
movsl
test
lods
mov
cs
mov
xlat
sub
aam
xchg
dec
test
mov
ret
mov
sub
inc
adc
test
or
adc
test
push
lahf
arpl
sub
mov
add
dec
inc
mov
sub
mov
push
adcl
sahf
dec
fdivrs
arpl
push
sub
dec
or
push
mov
mov
add
push
call
insl
push
lods
iret
adc
out
fs
lods
mov
leave
and
ja
cmpb
mov
daa
push
push
mov
dec
sub
lods
push
jle
lods
movsb
repnz
pop
sub
and
hlt
mov
addr16
and
cld
je
int
jne
adc
fwait
data16
or
and
inc
sub
es
push
dec
test
add
lods
mov
stos
lahf
popf
sub
in
cmp
sub
out
fcomps
test
lock
es
test
mov
push
adc
mov
insl
sub
divb
hlt
push
stc
dec
daa
leave
or
fndisi(8087
subl
push
jae
lahf
out
xchg
andl
into
and
adc
pop
leave
lock
dec
adcb
dec
fdivl
ds
mov
sub
xor
and
or
sub
dec
jle
mov
mov
cmpsb
cmp
test
and
xor
push
mov
lods
leave
data16
int3
icebp
sub
or
sub
mov
cmp
je
int
fildll
and
shlb
enter
cmp
mul
and
imul
inc
sub
outsb
mov
xchg
mov
lock
lds
hlt
imul
and
fwait
sub
in
out
and
sub
into
mov
test
out
adc
lods
or
add
inc
mov
int3
jl
xchg
pop
jmp
jns
in
in
pop
out
cmp
and
add
jl
insb
fldl
out
push
dec
jne
adc
orl
push
sub
je
arpl
out
jno
lods
insl
jecxz
sub
push
dec
mov
ljmp
cmpsb
and
call
jno
xchg
mov
jno
test
sub
add
mov
jnp
mov
stos
jecxz
sub
or
sub
add
addr16
pusha
xlat
mov
movsb
push
mov
mov
fimull
and
adc
out
jne
xor
pop
mov
int3
lock
or
leave
sub
aad
push
add
cmpsb
xchg
mov
lret
jmp
insl
push
or
or
cmp
mov
xor
std
gs
inc
or
sbb
cmp
cmp
shll
mov
daa
push
cmp
mov
inc
mov
push
ret
mov
pusha
into
and
xchg
scas
jbe
or
dec
dec
inc
cmp
lods
out
mov
lods
nop
inc
or
addb
jno
addr16
mov
inc
in
or
mov
jl
mov
idivl
or
sub
cld
outsl
mov
outsl
mov
xchg
xchg
xor
in
aam
add
arpl
gs
aaa
inc
mov
inc
xchg
push
xchg
jbe
mov
out
aad
pop
xor
sbb
sub
dec
xor
push
mov
jbe
xchg
pop
dec
or
out
sub
daa
fiaddl
jmp
lret
js
lods
push
cmp
sub
cmc
nop
pop
cmpl
pop
jae
sub
adc
pop
xchg
popf
pop
movzbl
xchg
mov
mov
out
adc
je
cmp
xor
fsubl
mov
xor
push
pop
aam
scas
test
fmuls
sub
and
scas
std
out
int3
scas
sub
in
ss
div
sbb
inc
in
push
adc
mov
cmp
mov
outsb
xor
jmp
stc
push
add
pop
sub
push
lods
out
xchg
mov
xchg
cmp
dec
jns
jl
lret
mov
cs
pop
filds
xor
mov
cltd
dec
test
insl
dec
pop
ret
orl
out
fidivs
mov
dec
test
dec
add
fmuls
outsl
sbb
jecxz
faddl
jle
jmp
inc
pop
mov
jecxz
dec
adc
int
imul
mov
dec
into
and
iret
test
stos
outsb
adc
jp
daa
daa
mov
pop
xor
test
xchg
mov
ja
add
repnz
cld
arpl
into
jmp
pop
sub
fisubrs
dec
lock
sub
cmp
xor
mov
dec
xlat
cmp
pushf
xchg
and
popf
leave
outsb
xchg
jp
and
out
rcll
sub
jp
shll
movsl
leave
sti
or
push
sbb
mov
ds
cs
int
sbb
inc
and
inc
imul
rcrb
push
arpl
pop
ds
outsb
sub
adc
or
addr16
inc
loopne
in
in
addr16
add
jg
addr16
stc
shrb
add
inc
pusha
xchg
in
cmp
xchg
pop
lret
xchg
fdivr
lods
jns
pop
imul
add
jne
sub
jbe
mov
stos
jne
icebp
mov
sbb
jmp
xchg
inc
push
mov
lods
pop
adc
popf
fs
lods
dec
orl
xchg
sub
mov
cmp
fdivl
sub
inc
stc
push
daa
inc
xchg
xor
sub
and
or
ret
and
jns
popl
fstps
addr16
daa
insb
repz
dec
and
mov
call
push
adc
sbb
push
dec
push
or
sub
sub
pop
fnstcw
mov
jle
fsubs
jg
mov
cmp
ficoml
push
dec
cmp
cltd
mov
test
push
jne
scas
or
mov
push
les
testl
xor
dec
xor
nop
xor
add
sahf
or
ret
pop
jno
test
stos
sub
sub
pop
out
lods
mov
cs
and
adc
xchg
pop
mov
mov
mov
or
sub
imul
push
mov
adc
or
sub
das
out
xor
insl
or
loope
jecxz
in
or
xlat
jecxz
outsl
gs
jbe
sub
call
scas
jle
out
and
out
hlt
push
aad
cmp
sub
scas
cmc
adc
add
imul
cmp
gs
mov
fists
xchg
or
jno
add
mov
cmpsb
fcmovne
jl
adc
add
dec
fistpl
jp
push
sarb
repnz
ficompl
loopne
push
dec
pop
and
es
std
xchg
ret
mov
xor
pop
push
sbb
dec
in
mov
push
add
mov
sub
mov
mov
repnz
int
mov
jne
pop
add
mov
pop
push
pop
jne
imul
inc
js
test
adc
adc
arpl
out
or
cmp
inc
add
jo
add
inc
mov
dec
push
ja
lods
push
cmp
rcrb
mov
inc
ds
mov
xchg
mov
fisttpll
aaa
pop
mov
push
mov
mov
insl
and
jae
in
xchg
clc
loopne
in
dec
xchg
or
jnp
call
and
jecxz
mov
and
sub
or
rorl
sbbl
mov
enter
or
push
into
in
outsl
fwait
xlat
sub
cmpsb
jl
dec
jmp
leave
lcall
cmp
pop
adc
test
inc
outsw
mov
or
jmp
cmp
outsb
fxch
cs
pop
enter
inc
jmp
lock
jb
pop
addr16
fwait
sti
dec
pop
ret
lret
nop
inc
mov
and
je
jecxz
sub
push
mov
cmp
cmp
mov
lods
int3
loope
lods
out
sub
mov
mov
sub
cmp
jl
lcall
jl
jbe
daa
imul
flds
add
out
lea
sar
cli
leave
cld
loop
jno
scas
imul
cmp
and
xor
pop
add
jecxz
shrb
cmpsl
daa
out
sbb
pop
mov
popf
cli
or
addr16
movsb
and
cmp
dec
inc
cmpl
xchg
scas
adc
lret
inc
orl
test
inc
mov
iret
cmpsb
rolb
addr16
push
push
dec
es
jmp
insl
or
mov
dec
or
pop
and
subb
cs
fstpt
push
add
mov
popa
mov
out
sub
jnp
out
mov
lods
cmp
popf
loopne
inc
and
jle
mov
mov
dec
mov
xor
push
jnp
push
lods
in
add
hlt
or
in
test
pop
jl
mov
ret
cs
xchg
jmp
sbb
ss
popa
lea
jecxz
and
jo
into
push
cmpl
lcall
push
push
and
mov
lods
imul
cmpsb
xchg
insb
out
lret
ljmp
loope
sub
test
cld
sbb
lods
test
lods
in
sub
pop
xor
shl
divl
mov
cmc
mov
sub
and
jecxz
imul
xchg
in
js
or
add
leave
mov
push
loop
aaa
xor
mov
and
cmpsl
fiaddl
cmp
ds
xor
cs
mov
mov
or
mov
dec
clc
sbb
scas
test
xlat
imulb
sub
xlat
inc
jecxz
in
or
stc
xchg
leave
inc
or
push
cmpsl
scas
bound
and
add
push
dec
stos
cmp
nop
js
mov
sub
idivb
xchg
adc
adc
leave
xchg
or
ljmp
addr16
jmp
ds
mov
adc
push
stos
or
pop
and
mov
imul
ja
imul
adc
stos
scas
orl
push
sub
jnp
push
mov
push
aad
scas
test
jecxz
dec
movsb
negb
dec
xchg
mov
mov
and
pop
fsubrl
idivl
dec
arpl
lret
popa
sub
scas
and
outsb
nop
sbb
sub
lcall
xor
sub
mov
mov
cmp
loopne
or
into
mov
subl
mov
sbb
je
xchg
sub
bound
jae
and
push
cmp
jp
in
int
adc
or
dec
cs
lods
sbb
sub
xor
and
mov
cld
cmp
loop
mov
popa
shrl
mov
out
push
pushf
repnz
lods
inc
lods
inc
push
test
leave
sbb
inc
xor
andl
int
loopne
daa
cmpsb
aam
int
ret
push
adc
addl
popf
leave
stos
xchg
shr
sub
stc
dec
enter
dec
add
xchg
in
sub
call
dec
sub
lods
cltd
mov
sub
jmp
sub
dec
sahf
stos
scas
push
sub
dec
and
movsl
push
fmuls
mov
xchg
mov
or
push
out
jb
mov
dec
lods
or
mov
rep
xchg
mov
push
mov
xchg
lods
inc
dec
ja
push
push
sub
add
imul
rorl
popf
imul
push
sub
jbe
ja
adc
add
out
fsubrs
rcll
daa
lret
cmp
and
test
cmpsl
daa
jne
mov
pop
push
or
pushf
xor
pop
int
jge
sbb
outsb
jl
enter
mov
or
movswl
xor
xor
jmp
mov
jp
inc
and
xchg
sub
and
mov
loop
or
fisttps
popf
mov
and
rorl
int
sub
js
jp
add
push
insb
pop
xchg
pop
inc
cmp
sahf
out
sbb
adc
loop
pushf
jno
xchg
sub
inc
out
test
push
jb
scas
test
xor
add
mov
inc
mov
pop
fwait
xlat
mov
das
fsubrs
xchg
add
jns
addr16
add
outsb
lock
or
inc
popf
add
xlat
xchg
xor
mulb
jmp
and
imul
rclb
push
lods
es
stos
fisubrs
aam
mov
fistpl
mov
repz
mov
stos
sub
push
sbb
jmp
cmpsb
ret
mov
add
stc
dec
rorb
enter
push
daa
mov
jmp
shrb
xlat
jp
push
rorb
sub
xor
ds
mov
daa
mov
or
dec
lock
in
jg
dec
push
ror
dec
cmp
jmp
dec
stos
sub
push
mov
jb
test
adc
mov
sarb
push
cmp
out
sbb
or
mov
in
loop
stc
outsb
inc
adcb
xlat
repnz
lret
cmp
mov
jb
hlt
outsl
sbb
dec
int
ss
mov
push
ja
push
pop
scas
and
leave
outsb
cmpsb
mov
sbbl
and
pusha
inc
shrl
rcll
test
adc
sub
insb
or
insb
mov
xor
loope
pop
adc
pop
mov
xor
mov
dec
xchg
xchg
int
dec
icebp
call
fmuls
cmpsl
icebp
shr
jecxz
jne
arpl
insl
mov
jb
or
mov
add
movsl
scas
ss
enter
dec
outsl
push
jbe
in
dec
sub
movsb
jb
adc
dec
cmp
sahf
outsb
pop
int3
sub
cmp
and
jecxz
leave
gs
push
out
test
pop
inc
or
mov
mov
loop
and
or
fnstsw
jecxz
es
pusha
gs
cmp
scas
sub
push
aad
andl
lods
add
add
jecxz
cmp
dec
sub
and
or
enter
es
xor
ss
xchg
dec
sub
and
or
mov
cs
inc
push
test
xor
loopne
xchg
cmp
dec
mov
mov
mov
nop
jmpw
mov
sbbl
scas
repnz
dec
inc
adcb
test
mov
imul
or
cli
in
out
repnz
xchg
jne
cmc
in
dec
popa
pop
fisttps
jnp
idivb
popf
sub
leave
dec
daa
aam
sti
sbbl
xchg
insb
push
mov
push
sub
cs
mov
test
and
dec
scas
hlt
or
out
imul
push
sbb
movsb
daa
scas
jmp
xor
arpl
out
inc
push
push
js
and
into
sbb
leave
dec
push
gs
or
inc
sub
mov
fs
aas
push
je
lock
leave
jnp,pn
call
nop
in
sub
leave
add
addr16
add
xor
or
mov
push
pop
add
mov
in
and
mov
fdivp
lea
mov
leave
subl
call
push
lods
xchg
ror
inc
cmpsb
mov
lcall
sub
cmp
dec
sub
pop
mov
mulb
pushl
jmp
push
pop
subl
mov
sub
mov
test
addb
adc
and
push
clc
outsb
daa
cmp
cmp
mov
sbb
adc
lods
dec
mov
mov
and
mov
cmp
cmpsl
and
enter
fnsave
loop
sub
test
mov
cmp
adc
dec
sub
push
mov
dec
into
test
or
mov
sub
inc
pop
call
shrb
xor
or
outsb
xor
adc
mov
cmp
rorl
cmp
sbb
scas
xchg
sub
xchg
jae
xor
add
stos
js
push
leave
mov
test
clc
add
pop
mov
mov
test
int
xchg
jns
push
int3
std
andb
mov
and
mov
jmp
fwait
js
jp
dec
dec
sub
cmpsl
sbb
dec
daa
jle
loop
movsb
outsl
orl
inc
rorb
pop
call
dec
lret
dec
or
ja
push
or
and
add
mov
iret
aam
int
dec
insb
or
push
dec
cs
fs
test
test
sbb
or
push
sub
stos
dec
and
fcmovnb
gs
or
andl
sub
nop
mov
inc
das
gs
pop
int3
xor
pop
sub
test
adc
addr16
scas
in
cs
mov
mov
xlat
out
test
cmpsb
mov
xlat
or
pop
lret
loope
fbstp
mov
sbb
mov
shrb
or
ss
pop
aas
mov
test
dec
push
cmp
repz
dec
arpl
sub
xchg
sahf
in
dec
lock
lret
push
mov
out
gs
inc
into
outsb
loop,pn
cmp
iret
pop
sbb
cmp
mov
cmp
lods
mov
ja
dec
lods
daa
in
mov
mov
sub
xlat
xchg
lock
in
sbbb
cmp
int
dec
inc
movsb
lds
test
cmc
adc
stos
fists
sub
daa
push
dec
add
loop
insl
in
mov
cmpb
inc
cmpl
push
jg
insl
or
mov
mov
mov
xchg
or
jle
mov
mov
into
sub
cmp
int
add
mov
orl
into
sub
popf
lret
xor
xchg
jmp
pop
add
xor
divb
push
mov
rcrb
sbbl
mov
test
inc
jns
cmpsb
lahf
outsb
add
pop
add
fwait
addl
push
mov
out
mov
daa
filds
sbb
mov
add
lock
push
mov
andl
out
jae
xchg
xor
xorb
sbb
ret
lahf
es
mov
add
fisubl
inc
in
out
pop
outsl
sub
push
mov
xchg
out
imull
lret
pop
adc
sub
popa
rcll
pop
pop
sbb
jg
add
cld
pop
or
or
inc
xchg
lods
ss
dec
loop
fstps
mov
and
push
inc
gs
les
mov
ret
inc
or
call
jmp
rolb
xchg
or
and
cmc
sbb
out
or
pushf
add
movsb
jmp
fs
aad
fmull
sub
inc
pushf
jp
mov
iret
sarl
dec
or
imul
pushf
mov
push
or
mov
jmp
adc
adcb
jne
sbb
rcrl
in
or
in
mov
dec
das
repz
xchg
lret
xchg
pop
in
mov
cmp
rcl
daa
and
mov
jno
xchg
lret
cmp
stos
push
adc
inc
ja
ljmp
sub
call
loope
imul
and
cs
sub
and
jb
scas
pop
lcall
cmp
cmp
test
mov
sub
ret
push
popa
fwait
mov
push
aas
add
pop
imul
loop
fnstcw
test
dec
add
mov
int
and
inc
rcrb
cmp
aas
mov
mov
repz
andl
pushf
jmp
adc
and
addr16
daa
xlat
cmp
mov
enter
sbb
and
jl
jmp
mov
adc
cmpsl
add
or
std
or
sbb
adc
jo
mov
pop
and
adc
cmp
pop
nop
xchg
int
ja
mov
and
addr16
dec
and
mov
lods
or
mov
dec
mov
push
dec
daa
inc
out
addr16
xlat
outsb
cmpsl
stos
scas
idiv
shl
movsl
nopl
xor
or
jmp
in
sbbl
mov
mov
inc
loop
jmp
in
movsb
in
sub
inc
xchg
jp
mov
mov
dec
popa
inc
push
fisttpll
sbb
das
call
hlt
xor
fwait
hlt
lock
add
ds
lea
stc
xor
in
pop
js
dec
or
jp,pn
gs
shrb
pop
subl
std
pop
pop
je
icebp
test
and
pop
pop
in
dec
out
cs
fnstenv
insb
mov
addr16
adc
pusha
or
in
aad
movsb
xchg
sub
roll
sub
jnp
pop
add
daa
inc
jne
cli
mov
pop
out
sub
cmpsb
mov
ret
xor
mov
daa
or
xor
movsb
cmp
fstpt
adc
xchg
pop
mov
out
push
cwtl
cmpsl
pop
and
movsl
mov
test
insb
imul
push
push
mov
inc
pop
or
mov
mov
out
and
popa
or
mov
adc
pop
mov
or
lods
sub
inc
sub
cmp
pushf
mov
mov
repz
mov
dec
ljmp
jg
jge
pop
xchg
or
into
or
stc
mov
jae
int
push
jle
dec
dec
hlt
insb
jp
mov
dec
cmp
lahf
or
mov
leave
outsl
sub
mov
fiaddl
dec
adc
stos
pushl
daa
out
dec
insb
add
sub
scas
push
or
loop
insb
push
aas
or
popf
pusha
mov
int3
repnz
jae
out
cmp
andb
cmpsl
push
sub
das
dec
loop
jecxz
push
sbb
test
in
movsb
add
rorb
shl
dec
sub
mov
shr
dec
adc
les
push
mov
pop
sub
lods
ljmp
mov
add
imul
ret
dec
and
or
jge
and
mov
add
mov
repz
fidivrl
push
ss
adc
outsb
inc
andl
mov
lods
lret
pop
in
jae
pusha
push
sub
xchg
push
sbb
out
or
mov
sub
mov
out
fmul
daa
fstl
cmp
or
dec
sub
dec
mov
stc
negl
stos
out
outsb
lods
gs
enter
dec
push
dec
or
jg
mov
jmp
shrb
push
fadds
cmpl
mov
dec
pop
stos
cmp
hlt
and
add
adc
adc
push
call
mov
fsubrs
and
xchg
sub
add
out
push
and
enter
fwait
dec
sub
aam
in
adc
xchg
lods
sub
jge
lods
fisttpll
insb
dec
stos
sub
adc
cmpsb
enter
cmp
mov
dec
xlat
xor
pop
push
lds
jnp
and
mov
mov
testl
xchg
jnp
jmp
or
subl
cmp
xor
mov
stos
je
fwait
mov
mov
push
mov
lock
jo
mov
in
sbb
enter
fs
or
and
dec
notb
mov
lret
push
jp
ret
stos
mov
subb
or
xchg
mov
and
dec
enter
cmp
push
aas
jl
and
pop
out
jae
inc
out
sub
adc
cmpsb
inc
xor
mov
mov
pop
inc
loop
pop
je
add
add
jle
iret
xchg
dec
cmpsb
mov
or
and
jnp
fsubrl
add
leave
dec
sahf
mov
enter
push
repnz
cs
jmp
sahf
call
or
or
dec
xor
and
fcoms
sub
filds
rcl
cmpsl
push
gs
data16
cmpsl
push
stos
nop
jmp
mov
jno
xchg
jmp
xchg
push
sub
fistl
sub
rcll
adc
sbb
aaa
test
cmpsl
add
inc
daa
and
and
or
es
lods
orl
repnz
sarb
in
stos
or
xchg
lahf
mov
jae
stc
scas
pop
push
or
push
popf
xor
add
dec
sub
ja
xor
leave
adc
dec
xor
or
lock
mov
hlt
lock
or
pop
mov
and
lret
lea
sbb
mov
or
les
mov
dec
enter
and
lods
add
jecxz
or
aas
or
test
xor
arpl
fs
arpl
push
dec
out
and
pop
nop
sub
test
scas
into
pop
sbbl
push
xchg
pop
mov
outsl
insb
fstps
sbb
cmp
cld
cmp
nop
push
daa
add
arpl
in
pop
add
test
iret
mov
repnz
out
in
sub
add
mov
xchg
xchg
ljmp
adc
mov
mov
xor
loop
ja,pt
xchg
push
mov
loope
push
mov
inc
inc
adc
stos
in
or
or
inc
push
sub
lret
and
or
imulb
xor
mov
mov
inc
dec
or
cmpsb
out
loop
add
mov
push
mov
dec
dec
std
jnp,pn
in
imul
cmp
in
imul
sub
sahf
push
xchg
es
sub
stos
adc
mov
test
mov
pop
inc
dec
rorb
out
add
push
sbb
and
iret
in
addr16
mov
lea
pop
push
daa
sub
jg
or
or
adc
in
mov
out
daa
and
nop
jle
sub
sbb
sub
push
rolb
arpl
sub
int
xchg
int
inc
jb
jno
in
and
mov
inc
push
xchg
lods
add
dec
mov
iret
cmp
in
ljmp
adc
mov
out
xor
mov
or
xchg
sub
adc
dec
sub
mov
xchg
lods
cmpsb
xor
mov
sub
fsubrs
dec
mov
imul
mov
lods
xchg
cmp
mov
mov
pop
in
out
add
fdivrs
xchg
test
enter
mov
mov
mov
or
lret
lcall
mov
int
ja
pop
mov
and
xlat
int3
xor
push
ja
icebp
fsubs
dec
or
jne
std
xchg
aad
imul
adc
xchg
push
out
out
adc
jno
aad
imul
inc
cmp
xchg
ret
dec
and
movsl
sti
and
movsb
mov
test
jne
mov
fwait
pop
insb
jecxz
mov
lods
mov
cltd
mov
outsb
dec
addr16
add
in
ja
push
fbstp
lock
addr16
nop
or
inc
pop
orb
fistps
lret
add
or
sub
xor
xor
int
mov
mov
lods
xchg
mov
cmp
stos
mov
stos
test
mov
mov
enter
dec
xchg
adc
addl
sub
push
int
cmp
cltd
daa
out
mov
popf
cvtps2pi
and
mov
daa
imul
push
ds
cmc
test
insb
xchg
xor
mov
fwait
out
gs
xchg
lret
ja
arpl
or
jo
lret
push
mov
dec
out
and
outsb
push
lahf
dec
out
and
mov
test
inc
pop
icebp
fwait
jmp
adc
fildll
imul
or
push
out
mov
sarb
mov
lods
and
arpl
dec
dec
fimull
sub
out
and
dec
repz
add
and
in
push
lock
mov
inc
inc
or
les
out
or
push
into
dec
pop
mov
sti
xor
enter
pop
sbb
aad
jno
or
repnz
mov
jecxz,pt
ljmp
xlat
inc
out
mov
cmp
and
int3
inc
iret
popa
mov
jne
aam
lods
or
and
nop
mov
xchg
test
orl
jne
xchg
leave
push
fldt
and
adc
mov
insb
jl
jmp
sub
incb
into
or
push
dec
jmp
js
adc
push
outsl
mov
adc
movsb
jne
and
inc
in
outsb
mov
sar
sub
daa
lret
lcall
and
lret
inc
push
dec
push
rorb
test
mov
add
push
mov
dec
outsl
enter
jl
mov
test
or
adc
dec
sub
cmp
pusha
mov
push
pushfw
mov
in
cmp
pusha
push
subb
push
into
mov
int3
cs
and
in
or
and
push
mov
mov
pop
push
cmc
add
push
inc
adc
push
or
add
push
sbb
fidivl
gs
f2xm1
pusha
loope
push
push
in
adc
mov
ret
and
push
mov
dec
fisubl
push
and
sbb
subl
daa
loope
adc
mov
jle
push
dec
bound
adc
repnz
test
xchg
or
lret
or
pushf
jecxz
les
and
mov
xchg
dec
rclb
pop
jge
imul
icebp
daa
out
scas
sub
in
adc
add
sub
cmp
xchg
pop
dec
pop
and
xor
sbb
adc
cmpsb
xlat
call
or
or
jl
fstpt
xchg
sahf
pop
cmp
incl
push
insb
test
mov
mov
jecxz
jo
shlb
test
jl
lret
iret
xor
sbb
jbe
dec
dec
inc
cs
hlt
add
ljmp
xchg
fdivrl
cmpsl
sub
mov
loop
mov
js
insl
sbb
xorb
pop
push
cmp
add
or
ja
mov
movsb
int3
or
out
dec
shlb
cmp
subb
jno
jae
leave
ljmp
dec
mov
nop
lock
or
scas
and
insl
xchg
shll
cmp
lahf
test
inc
mov
xor
fbld
jbe
fs
mov
sbb
lret
mov
fnstcw
ja
jecxz
xor
sbb
out
cmp
in
pop
subb
pop
jle
inc
push
daa
les
sbb
bound
add
jg
in
mov
add
dec
xchg
lea
dec
jne
pop
das
push
jae
fisubrl
jb
mov
lods
jl
stc
xlat
pop
mov
push
xor
xor
or
sbb
jecxz
inc
gs
mov
mov
stos
add
cmpsl
fists
and
mov
lods
into
in
data16
fidivrl
sub
xlat
cmpsl
xlat
mov
mov
insl
lock
sarl
sub
add
fildll
mov
sub
jle
pop
popf
pushf
mov
inc
fmuls
movsb
lods
adc
loopne
imul
aam
adc
inc
jmp
mov
int3
push
xor
scas
cmpsl
mov
leave
and
test
loopne
or
mov
jns
mov
out
pop
and
xchg
dec
add
mov
or
push
ret
and
loope
data16
rcll
mov
jno
cmp
ljmp
mov
fwait
into
sub
call
sbbb
or
rclb
les
daa
sbb
sub
sahf
cs
or
int
push
daa
sbb
cmp
jg
cmp
pop
jb
enter
or
shl
out
and
aas
enter
pop
mov
mov
and
fidivl
push
or
jge
sahf
sub
call
or
push
dec
lea
mov
ja
dec
lods
and
inc
repnz
test
push
daa
add
xchg
stos
jb
dec
push
jecxz
lods
insb
ss
sub
into
cmp
sbb
mov
imul
insl
les
cmp
add
mov
jno
jmp
mov
push
gs
xor
mov
test
or
lea
leave
je
scas
enter
xor
out
pop
cmc
mov
jae
adc
cmpsl
sub
subb
dec
mov
mov
jecxz
out
and
shlb
insb
or
mov
shrb
mov
push
jecxz
pop
cmpsb
mov
cmp
jg
xchg
ljmp
xor
push
sub
fs
pop
mov
mov
adc
push
mov
pop
bnd
or
je
inc
sub
flds
test
xlat
push
and
inc
std
shr
inc
inc
adc
push
movsb
out
sub
outsl
and
in
push
and
call
cltd
mov
js
scas
xchg
enter
and
or
dec
dec
sub
and
cmpsl
jb
fisubs
jge
xlat
or
mov
clc
dec
jecxz
or
ja
lods
mov
sbb
and
sub
add
popf
sbb
add
clc
lods
inc
pop
ss
test
push
mov
insb
mov
mov
nop
int
dec
inc
lcall
mov
lods
cmp
lods
ret
jg
addr16
sub
popf
mov
cmp
jnp
push
push
push
xor
in
mov
xlat
xchg
cs
xlat
jle
mul
shrl
outsl
dec
mov
leave
cmp
pop
testl
xorl
mov
sub
int
call
adc
out
fs
xor
or
lds
pushf
test
mov
lea
out
sub
inc
mov
or
mov
cmpsb
andl
scas
pushf
rcrb
jo,pn
enter
popl
xchg
lods
rcrl
cmp
mov
movsb
lods
add
xchg
popf
leave
sub
or
stc
jne
adc
sarb
mov
xlat
xchg
jle
cs
fldl
sub
loope
lods
inc
cmp
lock
leave
mov
sub
cltd
f2xm1
dec
xchg
add
or
sub
jmp
push
mov
jno
pop
cmp
push
insb
add
inc
out
dec
loopne
add
test
scas
xchg
cmp
popf
jl
mov
test
outsb
jecxz
or
leave
pop
or
jae
out
mov
or
outsb
js
push
or
insb
sub
and
cmp
xchg
sbb
sub
int
fwait
imul
repz
push
cmp
mov
add
adc
push
xchg
scas
and
or
mov
cmpsb
jns
clc
sbb
ljmp
or
cmp
lods
push
test
sub
iret
lods
lret
out
add
cs
outsb
cmp
adc
int
sub
mov
gs
inc
add
shll
call
lret
pop
xchg
xchg
cli
int
pop
pop
fisubrs
loope
fs
daa
daa
lahf
xor
push
jg
nop
out
pop
in
or
cmp
push
and
xor
mov
in
dec
mov
mov
sbb
ret
lret
inc
iret
in
sub
adc
xchg
into
out
xor
cmp
in
ss
sub
jb
fmull
mov
jg
sub
xchg
push
inc
sti
dec
out
jno
std
fisubs
push
out
arpl
and
in
jmp
mov
clc
add
movsl
or
add
mov
out
sub
ficoms
sub
cmp
dec
add
mov
sub
ja
pop
insl
aad
mov
push
pop
cmpsl
imul
sub
repz
popf
aaa
jp
xor
sub
adc
mov
and
sbbl
into
insl
adc
rcrb
imulb
cmp
imul
daa
sub
rclb
cmpsb
mov
jne
ror
lods
pop
mov
mov
pop
gs
xchg
in
int3
sbb
jne
inc
push
loopne
cmpsl
fisttpll
mov
jp
js
or
in
jne
lods
or
sbb
ds
and
xchg
adc
daa
jecxz
cmp
mov
jmp
mov
sbb
lods
dec
xchg
out
iret
mov
pop
mov
shr
sub
xchg
sub
aaa
clc
test
test
into
jo
adcb
adc
mov
xchg
jmp
and
mov
cmp
mov
leave
cs
push
in
cmpsb
lea
pop
add
test
cltd
xchg
aad
jg
enter
cmp
add
ret
inc
out
cmp
popa
xor
gs
popf
dec
pop
aaa
test
mov
mov
aad
pop
xchg
sub
call
jl
imul
pop
inc
xlat
pop
fwait
outsl
into
and
daa
jno
dec
fistl
popa
scas
fmul
sub
xchg
mov
cs
pusha
or
into
sub
mov
xchg
pop
xor
mov
ljmp
roll
dec
and
add
cmpsb
outsb
cmp
cmp
je
fstps
andl
fnsave
pusha
or
sbbb
inc
fisubl
adc
gs
mov
int3
js
popl
bound
je
mov
lret
pop
pop
lret
subb
int3
or
sub
enter
mov
int3
pop
jo
enter
and
xchg
test
mov
sub
aam
daa
out
shll
xchg
add
sub
bound
mov
inc
xor
and
push
sub
popf
push
call
scas
scas
gs
sahf
sub
movsb
inc
lods
arpl
in
into
out
gs
sbb
xlat
push
dec
push
sub
push
adc
ds
out
mov
and
ljmp
mov
jmp
mov
pop
push
lret
aas
les
sub
mov
shrd
pop
in
lods
and
sub
shr
xor
sub
xchg
cmpsl
jl
xchg
xor
sub
xor
xor
jne
and
pop
dec
or
out
push
push
mov
dec
dec
imul
mov
pop
ds
push
into
adc
and
jbe
bound
les
popa
inc
mov
in
mov
push
les
or
in
and
sbb
out
xor
dec
lret
adc
or
or
cld
lahf
sub
push
in
scas
repz
fildl
sub
xchg
gs
or
jb
push
out
adcl
aam
scas
nop
cltd
call
pop
sub
icebp
xchg
andb
repnz
or
aas
pop
inc
loop
sar
faddp
stos
adc
fisubrl
lds
xchg
sbb
mov
xchg
int
lret
out
lret
add
cld
mov
or
jge
jge
in
adc
cmp
sub
jbe
sub
daa
jns
pop
cmc
jne
xchg
ret
int
test
or
mov
aas
pop
inc
dec
scas
test
mov
xor
mov
in
xlat
sub
mov
mov
xor
lods
cs
push
xchg
loop
adc
or
push
int
xor
cmp
jmp
or
dec
and
idivl
insl
push
outsb
sub
cmp
jle
inc
cmp
cmp
mov
popf
xchg
ljmp
push
divl
xor
pop
mov
inc
sbb
loope
xchg
cmp
lret
test
pop
jno
out
or
xchg
or
dec
mov
mov
sub
into
neg
mov
or
in
lret
das
aad
pop
addr16
shrl
sbb
lods
into
add
or
jns
bound
cmp
xlat
movl
mov
dec
pop
daa
push
sbb
dec
xchg
mov
mov
mov
mov
and
mov
fldl
push
mov
mov
daa
dec
jnp
cs
aas
pop
lock
jno
push
jne
sbbl
add
fs
xchg
mov
xchg
jne
orl
out
mov
mov
arpl
orb
insl
pop
adc
and
pop
loope
imul
cmp
sub
iret
pop
arpl
cmpsb
pop
addr16
mov
jne
out
pop
loopew,pt
fisubrl
adc
enter
lret
cmpb
and
outsb
out
sub
cmp
fldenv
es
pop
sub
lret
ficoml
ret
push
cli
dec
sub
add
icebp
addr16
mov
inc
add
xor
fbld
add
push
xor
out
or
lret
inc
daa
cmp
mov
xchg
push
sbb
loope
push
sub
das
jg
jecxz
pop
andl
ljmp
mov
imul
out
lea
mov
popa
cli
sub
mov
jne
adc
xor
notl
adc
in
cmpsl
mov
in
out
fisttps
xchg
fildll
add
sbb
cmp
add
shrb
push
dec
push
or
dec
adc
lea
out
fistl
dec
ja
push
push
movsb
cs
cs
int3
divl
cmp
adc
mov
decb
daa
sahf
adc
add
dec
aaa
sbb
jno
or
int
and
mov
inc
push
xchg
cs
daa
enter
imul
mov
cmp
cmpl
into
add
pop
dec
inc
repz
xor
dec
jmp
mov
jge
arpl
sub
push
xchg
dec
test
jmp
or
lret
add
daa
add
insb
adc
lods
int
or
push
dec
push
cmpsb
cmp
out
fldcw
pop
fs
cmp
lea
dec
jle
cltd
lea
out
in
and
popf
dec
cmp
pushf
daa
iret
scas
lds
dec
dec
sub
movsl
loope
add
inc
test
lods
inc
dec
icebp
or
mov
pop
mov
xchg
pop
sbb
mov
cmpsb
insb
jne
mulb
test
mov
stos
out
pop
jbe
pop
pop
popf
test
mov
and
jg
in
das
stos
popf
cmpsb
add
dec
out
loop
sub
call
add
rorb
mov
test
or
in
cmp
cmp
in
or
push
pop
std
adc
lahf
bound
cmp
fsubrs
push
addb
mull
fs
cltd
out
sub
sbb
dec
daa
repz
je
inc
daa
shl
dec
and
fdivs
cmp
push
jb
cmpsl
inc
mov
in
jno
push
iret
jmp
jle
push
push
sub
xor
gs
mov
cltd
pop
mov
flds
inc
or
sub
cmp
inc
lcall
popf
xchg
mov
mov
mov
mov
cmp
sub
cmp
test
insb
mov
popf
daa
arpl
je
adc
insl
stc
sub
inc
cmp
and
dec
insb
xchg
xor
ds
xor
mov
push
aam
testb
fwait
dec
int3
int
and
cmp
ret
ret
mov
sub
inc
or
jns
xor
sub
jg
jno
lock
mov
test
stos
lods
jp
mov
ret
stos
sub
xlat
arpl
jmp
mov
cs
jg
in
aad
aam
dec
int3
xor
out
push
aas
and
jno
test
into
adc
inc
jns
fisttps
fwait
jle
int
movsl
mov
or
push
je
dec
cs
xor
xchg
xchg
sub
add
icebp
sub
mov
mov
jle
rclb
inc
loop
popf
int3
mov
sub
aad
ds
orl
lret
mov
push
inc
lahf
movl
jno
pop
outsb
xor
mov
lret
xlat
mov
int
stos
sbb
adc
xchg
mov
sub
mov
or
fldt
pop
and
test
repnz
pop
xor
cmp
sub
lahf
mov
jae
mov
sub
fidivrs
mov
repnz
fildl
lds
int3
dec
mov
adc
lcall
add
dec
xchg
test
adc
mov
mov
jno
jp
xchg
sub
lret
decl
pop
mov
and
leave
aas
or
out
pop
sub
xchg
push
mov
xchg
mov
add
xor
xchg
ljmp
decl
add
sahf
out
out
stc
or
popf
mov
adc
dec
rclb
dec
ja
jecxz
lcall
mov
sub
xchg
pop
lret
aam
js
add
mov
out
xchg
leave
imul
outsl
shl
cmp
cmp
pop
mov
out
aad
pop
in
dec
ljmp
mov
out
lock
inc
dec
or
mov
gs
inc
mov
leave
daa
or
outsb
lcall
push
mov
dec
insl
out
mov
enter
xchg
fsubr
sub
ja
dec
or
stos
or
subl
pop
call
insb
lods
and
into
inc
and
jo
mov
rorl
cmp
cmpsl
ret
in
scas
pop
xor
mov
lcall
clc
lods
in
in
push
push
pusha
frstor
fimull
shll
cli
inc
xchg
jmp
mov
sbb
mov
jns
sti
push
fsub
stos
lcall
pop
test
and
out
and
je
dec
fdivrs
cmpsb
pusha
je
lods
mov
and
adc
fisubs
mov
movl
lods
sbb
out
cs
call
out
int3
add
dec
sbb
push
mov
push
mov
xchg
add
or
andl
cmp
sub
ss
inc
sub
or
jb
int
xor
inc
xchg
or
pop
int
adc
pusha
push
in
out
or
clc
inc
arpl
inc
sahf
sbb
insl
loop
jecxz
jmp
xchg
xchg
sub
sub
or
nop
mov
cli
sub
aad
jbe
adc
imul
pop
push
mulb
jg
inc
or
outsb
and
inc
fadds
push
mov
je
push
ljmp
cmp
and
inc
jne
fstpl
push
mov
inc
int3
fcmovnbe
movsl
fdivrl
inc
cs
ss
xor
dec
cs
sub
fstps
add
ficoml
inc
pushf
fcoml
or
or
dec
sbb
test
lret
cs
shl
xor
cmp
add
daa
sbb
fmulp
mov
stos
jp
inc
jle
push
xor
enter
sbb
sbb
or
mov
mov
loope
je
fiadds
addr16
int
push
cli
imul
stos
into
mov
and
sbb
gs
xchg
mov
dec
mov
dec
mov
add
movsl
fwait
sub
and
mov
jle
jge
ret
js
mov
daa
loopne
mov
imul
inc
into
data16
or
xchg
push
and
jbe
addb
pop
mov
cmpsl
out
call
hlt
outsl
test
dec
fidivrl
jle
rorl
in
jecxz
mov
rcrb
cmp
sub
mov
mov
arpl
cmp
iret
or
mov
cltd
sub
scas
stos
mov
push
mov
out
push
cltd
jecxz
call
push
enter
andb
mov
sbb
mov
rcr
ds
mov
sub
ja
gs
add
addr16
rcr
sub
aaa
stc
sub
and
add
test
and
iret
outsl
mov
mov
sub
adc
pop
fbld
sub
adc
xor
xchg
imulb
mov
push
or
lret
dec
mov
mov
scas
and
mov
and
in
je
daa
push
pop
mov
mov
sub
in
lea
push
and
lods
je
cwtl
jmp
test
add
mov
mov
adc
adc
add
cmp
test
out
cli
adc
sub
pop
outsl
mov
and
lock
inc
add
lds
jae
add
dec
daa
out
rclb
addl
in
daa
outsb
lahf
or
jo
imul
ret
xor
sbbb
lods
mov
inc
xlat
lahf
dec
arpl
jge
pop
xchg
imull
mov
fidivl
fidivrs
cmc
in
mov
dec
clc
lods
jecxz
int
or
lcall
lahf
mov
or
cmpsb
xchg
inc
mov
xchg
sub
mov
sub
pop
lock
xchg
cmp
leave
mov
cmc
pushf
in
xchg
into
out
loope
sub
sbb
pop
ss
daa
adcl
and
dec
popa
dec
stos
dec
aas
cld
mov
sub
sub
testl
sub
dec
in
test
sub
cmpsb
and
mov
push
mov
ljmp
push
fsubrl
cmp
stos
jmp
in
in
adc
cmpsb
add
or
pop
xor
scas
jecxz
rcrl
cmp
push
aad
out
push
sbb
test
gs
imulb
ror
mov
dec
cmp
idivl
cli
shrl
out
cld
imul
dec
cmpsb
jbe
push
loop
mov
mov
push
cmpsb
inc
xlat
lret
mov
xor
fsubrl
pop
gs
adc
test
or
xchg
push
lods
loopne
jno
sub
je
insb
cmpsb
call
and
lcall
push
dec
lods
and
movsl
and
jae
adc
fwait
or
dec
xor
pop
push
insb
lods
and
mov
and
mov
add
add
jno
lret
stos
pop
sub
insl
icebp
mov
leave
mov
and
ror
or
xchg
arpl
cmp
xchg
sbb
fwait
testb
sub
std
fsub
int
sahf
outsl
in
mov
jl
sub
and
out
pop
sub
dec
out
stc
jbe
out
sub
push
push
ror
or
or
fbstp
jno
pop
bound
mov
in
sub
lcall
or
lods
sub
daa
movl
and
mov
js
lcall
enter
jecxz
mov
inc
inc
jns
fstps
in
out
sub
adc
insb
dec
and
push
gs
testl
mov
insl
rorb
mov
xor
dec
jns
or
lock
outsl
mov
ja
dec
pop
sarb
or
daa
into
jmp
add
daa
outsb
enter
mov
mov
xchg
test
push
adc
outsb
test
mov
dec
enter
sbb
hlt
sub
add
std
or
dec
into
out
xchg
adc
into
daa
push
mov
movsb
cli
scas
imul
xchg
inc
push
or
inc
pop
inc
test
ficompl
popa
mov
gs
sti
dec
push
xchg
in
leave
nop
and
dec
cmpb
in
outsl
outsl
inc
insl
sbb
or
lods
ret
adc
or
cmpsb
sub
jne
into
ds
jmp
lock
loopne
dec
aad
shll
les
push
sahf
cmp
bound
mov
mov
mov
lock
lret
inc
cli
scas
sub
dec
xchg
inc
mov
lods
insl
loop
xchg
es
repnz
dec
and
call
or
hlt
popf
ret
dec
lods
aad
cmc
testl
lods
or
push
data16
inc
sub
pop
leave
xor
pop
rcrb
add
icebp
mov
mov
sub
xchg
lahf
sub
int3
sub
sbb
cs
xchg
dec
sub
pop
out
xchg
add
xchg
imul
or
popf
mov
mov
ja
call
cmpsb
push
out
push
fisubrs
jp
fsubrp
inc
in
ljmp
popf
pop
dec
jne
orl
xchg
dec
es
xor
or
xchg
xchg
sub
push
imul
cmp
loopne
push
mov
inc
pop
shlb
jg
into
dec
inc
cmp
dec
or
pop
arpl
cmp
adc
sub
popf
pop
or
leave
imul
int
mov
fs
popa
cmp
insl
cmpsl
cltd
jae
dec
push
or
test
outsl
iret
jecxz
sub
test
ljmp
mov
arpl
and
rorb
or
push
sub
or
xor
push
or
loopne
push
push
mov
lret
xchg
test
inc
inc
out
or
in
or
pop
mov
dec
call
inc
repz
push
or
dec
into
mov
mov
sub
dec
push
lods
add
lods
or
add
pop
decl
sub
cmp
cltd
jp
cltd
arpl
cmp
or
dec
int3
test
adc
fucomp
push
aam
lods
pop
jp
sbb
ljmp
hlt
icebp
jg
inc
mov
or
fs
sub
sub
adc
jb
mov
rcll
mov
add
leave
insb
rcll
sub
jecxz
add
mov
pop
sub
jae
aaa
jbe
pop
arpl
adc
xchg
adc
sub
mov
pusha
or
push
push
stos
cmp
ret
insl
jmp
cmp
push
sub
inc
add
stos
add
xchg
sub
stc
fiaddl
push
xchg
insl
insl
jecxz
and
mov
jecxz
inc
cmp
rclb
mov
pushf
outsb
test
mov
or
gs
jne
insl
mov
pop
add
add
js
andl
pop
lret
add
inc
fbld
ss
addr16
and
stos
es
dec
int
or
mov
enter
add
sbb
cltd
sub
mov
in
jmp
outsl
jnp
cmp
inc
rolb
rcrl
sub
dec
lahf
inc
pop
test
rep
push
or
imul
cmc
push
fsubs
sbbl
push
shrl
add
sub
out
sub
ffreep
jno
sub
fmull
jl
mov
daa
push
cmpsb
cmp
sbb
xchg
test
stc
push
or
in
stos
and
xor
bnd
mov
or
adc
and
mov
cmp
pushl
int
sub
xor
push
and
xchg
iret
xor
pusha
bound
jns
aam
push
insl
sub
mov
xor
and
fcoml
or
and
mov
sub
dec
mov
push
cs
xchg
jge
jbe
push
pop
adc
imul
stos
ret
sub
in
stos
xor
ret
gs
incb
pop
je
sbb
int
inc
cmp
lds
daa
xor
sub
push
and
rorl
enter
test
fcmovne
mov
or
lahf
bnd
push
or
loop
or
push
cs
cmc
push
sub
add
mov
or
pop
mov
push
jecxz
movsb
outsl
shlb
or
xor
sub
push
dec
adc
cmpsl
adc
dec
in
int3
push
roll
mov
cmp
out
adc
mov
arpl
addr16
xrelease
shlb
pusha
test
add
fisttps
fstpt
add
sub
repnz
mov
shrl
jmp
loope
cmpsl
mov
daa
mov
jne
sub
addr16
add
add
xchg
dec
jae
dec
out
fbld
jecxz
jl
pop
xchg
ds
les
aad
xchg
xchg
inc
and
xor
push
xor
sub
jmp
adc
iret
clc
dec
xchg
mov
addr16
test
push
xchg
adc
or
xchg
dec
jae
in
dec
dec
pop
dec
mov
and
jns
ss
xor
and
dec
test
push
das
mov
dec
imull
jnp
sbb
fwait
mov
mov
std
xchg
andb
les
xor
dec
push
pop
or
jle
xor
xor
push
jne
adc
cmp
adc
xlat
movsl
outsl
rolb
icebp
add
mov
pusha
push
add
mov
test
mov
adc
mov
loop
mov
push
and
iret
ds
test
lods
insb
fstpl
shl
jne
sbb
xor
jmp
sub
pop
es
das
lea
imul
gs
push
mov
xchg
dec
scas
xlat
mov
ds
mov
lret
cli
into
push
mov
insb
inc
dec
sub
cli
hlt
into
lahf
fld1
cmpsb
fmuls
add
into
sub
or
popf
xor
add
imul
add
or
int
rcrl
pusha
movsb
xchg
in
or
jl
movsl
jns
push
lret
mov
push
lea
push
or
and
adc
push
fwait
insl
xor
adc
cmp
int3
pop
adc
xchg
pop
popf
test
into
and
push
jne
pop
into
adc
adc
sbb
enter
mov
push
xchg
fwait
inc
lds
fisubrl
out
call
lds
into
and
stos
pop
pop
lret
add
pop
jne
ret
sbb
ret
in
arpl
sub
sbb
mov
mov
jg
mov
bound
testl
ljmp
push
cmp
xchg
push
lret
xor
js
xlat
test
test
cmp
inc
and
dec
sbb
jo
xchg
push
int3
incb
fucomip
and
xor
mov
pop
mov
inc
sbb
call
mov
cmp
inc
add
dec
insl
or
insl
fidivrl
les
ret
mov
pop
mov
arpl
lds
dec
mov
ss
jp
lods
mov
fdivrs
jmp
cld
sarb
jnp
sub
add
lods
lcall
xlat
sub
cli
jg
outsb
test
push
arpl
adc
mov
inc
loopne
cld
pop
mov
cmp
pop
inc
mov
out
xchg
lock
call
jne
pop
lahf
or
ljmp
arpl
dec
xor
rcrl
cmp
ret
dec
pop
mov
test
mov
cs
imul
hlt
out
lods
out
pop
rcrb
daa
sub
outsb
inc
in
daa
orb
insl
jnp
out
int
lret
cs
lods
xchg
mov
dec
push
cmpsb
pop
sub
out
jl
loopne
sub
sub
adc
mov
sbb
cs
daa
xchg
iret
scas
and
dec
inc
aad
movsl
pop
fs
addr16
jge
in
pop
cmp
lahf
subl
int3
push
sub
lret
jae
dec
sub
mov
popf
cmp
and
lds
daa
and
in
pop
lock
push
popf
jb
sub
xchg
inc
insb
hlt
pop
dec
xchg
loope
int3
enter
ljmp
inc
xor
fldl
and
iret
cmp
int
mov
add
sub
daa
aam
inc
xor
xchg
int3
pop
roll
push
movsl
mov
loopne
adc
loop
lea
push
stos
xchg
outsb
int3
sub
adc
jbe
xchg
mov
test
mov
clc
arpl
dec
cmp
fdivrp
mov
and
inc
jbe
dec
cmp
cmc
jg
in
loop,pt
lahf
push
jg
jo
sahf
jl
cmpsl
add
cmp
mov
fstl
sbb
adc
daa
out
add
cmc
mov
cmp
inc
ror
lods
inc
int
sbb
mov
ja
lods
cmpsl
jmp
inc
fisttps
sub
data16
push
jne
mov
jbe
in
movsb
cmpsl
jno
shlb
in
mov
and
lods
int
dec
loopne
pop
das
pop
pusha
and
repz
icebp
ds
mov
inc
cmp
es
cmc
dec
adc
adc
shrb
stos
mov
mov
jmp
cld
push
mov
push
adc
imul
xlat
pop
dec
lods
and
add
mov
lea
lret
mov
movsl
inc
notb
xchg
sbb
mov
adc
mov
add
rolb
jl
addl
faddl
fsubl
mov
add
lret
insl
ret
add
daa
xchg
loop
arpl
add
mov
and
pop
jle
dec
mov
mov
out
outsl
xchg
loopne
add
int3
add
jmp
sub
jmp
cmpsb
call
dec
icebp
and
pop
and
dec
and
lret
or
xchg
adc
push
push
xlat
pop
mov
add
jae
gs
mov
mov
insl
cmp
and
fisttpl
push
jne
mov
inc
dec
sub
cmp
in
mov
in
lods
stos
jns
push
jecxz
add
mov
lret
loope
sbb
mov
dec
lret
or
mov
or
push
incl
mov
dec
dec
and
ss
imul
fwait
test
mov
dec
or
push
imul
loop
out
dec
and
dec
in
mov
iret
lods
xchg
into
cmpsb
push
daa
testb
jl
out
out
sub
mov
or
sub
mov
out
fsubrs
cld
ds
add
pop
push
add
fwait
dec
cmp
pop
push
dec
cmpsb
into
pushf
rcll
mov
cmpsb
out
sub
lock
test
push
xchg
adc
shrb
dec
and
pop
mov
sub
nop
pminsw
xor
mov
lods
int
aaa
lcall
mov
add
in
pop
sbb
or
add
leave
addl
jecxz
jl
and
aaa
mov
int3
xor
sbb
sub
test
and
stos
inc
add
test
mov
add
popa
cmp
mov
lods
cld
add
mov
in
push
jae
arpl
xor
test
enter
popl
popa
push
pusha
out
pop
xchg
cmp
mov
cmpsb
in
push
fidivrs
pop
aad
mov
inc
push
or
cmp
fcmovb
mov
imul
cmp
mov
jno
mov
inc
push
jle
lods
or
call
in
ljmp
mov
cld
inc
jno
mov
daa
fsts
pop
sub
push
xor
fwait
repz
mov
or
mov
pusha
cmpsl
sub
arpl
loop
test
sbbl
or
mov
ret
jecxz
sbb
aad
in
pop
xor
out
shlb
push
stos
shr
push
add
fdivl
dec
and
int3
popa
fsubrl
push
jl
ljmp
iret
mov
and
cmp
lds
inc
addr16
gs
sbb
push
jecxz
sub
adc
jge
mov
cs
fistl
push
rcrb
jge
add
out
cmp
xor
jg
lods
mov
sub
fsubr
scas
cmpsb
insl
push
push
ljmp
add
sub
cmp
arpl
dec
add
mov
sub
push
xchg
leave
ret
add
lods
out
sub
push
stos
jge
jl
dec
leave
pop
pop
ljmp
mov
xor
cmpsl
and
pop
push
divl
sub
add
mov
out
popf
pop
pop
mov
xor
dec
dec
mov
sub
scas
pop
jmp
cs
mov
mov
add
pop
fisubrl
sbb
aam
mov
in
xchg
loopne
dec
in
or
or
cmp
cld
xlat
dec
ret
and
push
aas
xor
pop
or
or
push
pop
lea
mov
fildll
lock
call
pop
jmp
push
aam
outsb
scas
outsl
jle
out
xor
and
mov
lret
xchg
test
ljmp
xchg
ja
push
xchg
push
dec
jae
lea
iret
popf
push
imull
jecxz
mov
xor
outsl
lds
push
mov
imul
dec
aas
mov
add
jg
leave
and
mov
xchg
orps
lret
das
push
xchg
ja
dec
or
sbb
clc
cmp
adc
jne
sbb
stos
negb
or
xchg
cmpsb
test
lods
test
mov
inc
xor
test
or
cltd
clc
fisttpl
addr16
sti
dec
int3
mov
fdivs
fwait
mov
cmp
repz
daa
adc
jle
mov
movsb
or
call
sub
lods
out
out
ljmp
hlt
mov
sti
xchg
mov
jno
push
pop
or
ds
jle
mov
adc
test
mov
stos
jg
push
mov
sub
in
daa
dec
dec
or
mov
mov
sbb
in
mov
xchg
sub
sub
loopne
mov
inc
cmp
daa
add
and
or
jnp
lods
dec
mov
adc
dec
cmpsb
inc
pop
pop
dec
fs
test
or
and
loopne
jmp
stos
and
lret
pop
fxch
dec
cs
or
rorl
mov
out
test
and
sub
pop
add
push
scas
dec
fcompl
cmpsl
dec
push
and
out
cmpsb
lods
dec
or
adc
mov
and
sbb
test
lret
mov
je
in
sub
test
push
pop
loopne
or
leave
enter
fisttpl
cmp
scas
or
repz
out
xor
mov
inc
push
sub
pusha
fimuls
std
or
cli
rorl
stos
push
jmp
into
pop
leave
add
xor
sub
pop
inc
in
adc
ss
sarb
pop
dec
ret
sti
add
iret
cmp
push
mov
cmpsb
daa
xor
push
xchg
out
dec
cmpsl
jne
bswap
add
dec
sub
test
xchg
mov
mov
test
stc
add
xchg
lods
jecxz
xchg
popf
mov
mov
test
mov
arpl
push
sub
mov
cmpsb
cmpsb
insl
hlt
arpl
jno
stc
addr16
sub
xor
lods
and
mov
cli
ret
and
fmuls
shll
ret
sbb
clc
enter
mov
repnz
xlat
ret
call
or
daa
in
xchg
dec
mov
pop
inc
ljmp
stos
and
into
fdivl
jbe
cmpsl
xor
lret
mov
test
leave
fsub
in
arpl
add
push
mov
push
and
test
or
jmp
lret
ja
clc
mov
add
sbb
loopne
pop
inc
iret
out
rcrl
inc
in
push
xchg
and
mov
sbb
arpl
add
jae
test
add
xchg
dec
push
sub
dec
jns
repz
in
jae
dec
loopne
ja
dec
shll
inc
push
nop
loop
xor
xchg
ret
push
jl
sub
jne
or
push
sub
push
mov
sbb
sbb
testl
mov
mov
or
cs
in
inc
xchg
mov
push
xor
fucomp
les
repnz
xor
mov
lret
ret
dec
xchg
dec
mov
dec
sbb
scas
and
inc
test
daa
mov
mov
pop
sbb
sub
cmpsb
bswap
leave
mov
push
add
aam
popf
stos
or
push
or
cmovae
int
add
pop
mov
cmp
pushf
or
mov
push
gs
mov
push
fs
xchg
jecxz
xchg
push
lods
scas
pop
cmp
or
and
jle
inc
aaa
lret
stos
ret
dec
clc
outsl
sub
mov
out
es
inc
mov
or
push
jo
xchg
sub
std
dec
fildll
dec
lds
dec
int
lea
and
int3
loop
sub
mov
cmpsb
adc
jl
dec
mov
sub
sarl
and
repnz
pusha
mov
mov
sub
jae
mov
push
sub
adc
fcmovne
lcall
mov
push
scas
in
cmp
or
inc
mov
popf
jecxz
arpl
out
sub
push
adc
loop
mov
lea
add
jno
push
ds
pop
cmpsl
adc
xchg
lret
adc
enter
push
iret
pop
popf
jge
and
aas
push
es
enter
mov
enter
in
lea
xchg
popf
sub
lock
dec
aam
add
push
push
adcl
ret
mov
and
inc
hlt
adc
loope
jg
repnz
and
sub
dec
call
xor
mov
sub
jne
cli
call
xchg
rcr
sbb
sar
jno
lods
jmp
test
in
mov
jne
add
loopne
test
sbb
jmp
imul
push
iret
dec
mov
xor
add
testl
push
repz
ja
add
xchg
ret
lods
inc
clc
mov
addl
sub
adc
push
ret
xchg
dec
push
or
xchg
or
imul
sub
xchg
or
out
stos
daa
loop
adc
testl
push
stos
mov
mov
xor
mov
rorb
inc
dec
in
es
mov
xor
inc
test
loop
adc
in
or
mov
sti
add
or
push
mov
popa
js
mov
mov
and
inc
int
jne
xchg
sub
dec
add
lds
sbb
int3
xor
repz
jle
imul
andl
cmp
or
sub
cmp
leave
stc
lret
cmc
stos
enter
mov
cmp
ffreep
leave
jecxz
out
or
adc
sbb
cmp
test
lods
or
add
fnop
mov
mov
jb
mov
cmp
jmp
sbb
shrb
sbb
repnz
fsubr
lods
inc
iret
loopne
stos
add
outsl
dec
xor
out
in
xor
lret
push
ret
ja
in
mov
xchg
loop
jnp
hlt
mov
pop
shlb
imul
rcrb
or
inc
jo
mov
call
decb
out
xor
in
aad
xor
aas
dec
dec
or
sub
inc
ror
inc
fs
xchg
cs
clc
push
xchg
pop
xchg
out
adc
inc
and
mov
fldt
andl
push
popf
arpl
add
dec
imul
mov
add
jae
add
pop
ljmp
pop
sbb
cmp
fmuls
in
jmp
mov
lahf
call
xlat
xor
js
push
or
shrl
xlat
test
xchg
dec
out
and
into
in
push
jecxz
xor
sbb
jecxz
icebp
add
and
test
and
sub
lods
ja
lods
mov
mov
cltd
out
push
addr16
xor
pop
and
jns
ljmp
shlb
dec
pop
call
mov
and
adc
scas
lahf
sub
mov
mov
sbb
mov
push
movsb
pop
xchg
add
clc
orl
cmp
inc
lods
mov
or
mov
dec
sub
cmp
hlt
ret
out
mov
add
sbb
mov
stos
jge
jecxz
repnz
daa
das
cmp
ss
sub
push
dec
mov
fs
jmp
mov
fnsave
lods
push
pop
cmp
mov
data16
and
inc
sub
dec
mov
stos
test
fisubl
mov
xlat
in
lods
imul
ret
inc
leave
sub
adc
dec
testb
jo
cmp
ss
mov
and
pushf
lcall
mov
int
or
sub
xor
ljmp
add
mov
cmp
push
enter
sbb
mov
mov
sbb
cs
adc
sub
xchg
daa
daa
xlat
lock
pop
mov
scas
test
sub
lahf
jmp
sub
inc
jb
loop
sub
pop
jns
fldenv
mov
call
int
mov
jecxz
sbb
js
addl
inc
sub
or
add
imul
push
jne
sar
lret
jae
xor
xchg
loop
xor
add
fisubl
xor
ficoml
arpl
xchg
adc
mov
mov
fcoml
mov
jne
add
out
outsl
pop
mov
jp
cmp
dec
test
std
xchg
mov
or
clc
ljmp
push
scas
fmull
sub
dec
mov
dec
dec
push
mov
or
loope
mov
lahf
das
inc
mov
shr
shlb
loopne
sub
and
cltd
lret
ficomps
ds
iret
jmp
xchg
dec
jnp
scas
dec
loope
dec
divl
sub
or
push
sub
ljmp
xlat
loop
leave
xor
mov
rolb
daa
and
dec
fcompl
or
iret
clc
dec
call
rcrb
movsl
fsubrs
test
es
jle
cltd
xchg
js
inc
sub
mov
push
inc
xchg
push
or
es
in
dec
dec
outsl
enter
push
loopne
dec
xchg
or
shr
push
lret
mov
test
inc
test
add
cltd
mov
push
movsb
pop
insb
mov
push
in
nop
or
popf
and
or
leave
leave
push
cli
lret
and
mov
das
mov
xor
push
dec
cltd
lods
call
daa
push
or
bound
sub
imul
arpl
and
arpl
inc
ja,pn
mov
mov
mov
mov
xchg
out
ret
and
xchg
orl
mov
rcrl
push
xchg
push
push
shll
xchg
cmp
dec
sub
sbb
ret
call
jl
std
imul
mov
aad
lods
push
adc
cmp
mov
pop
push
js
add
mov
in
mov
cmpsl
and
shlb
pop
jl
jmp
xchg
mov
clc
sbb
je
mov
sbb
rclb
pop
pop
inc
sub
jmp
dec
shll
jne
mov
call
cld
dec
sub
dec
add
outsl
cmp
ljmp
jl
push
enter
mov
dec
xor
add
out
mov
int
das
insl
jbe
test
dec
ljmp
es
dec
push
push
mov
add
xor
push
or
jecxz
mov
fwait
adc
sub
sti
fs
clc
mov
xor
ret
ror
sub
xchg
shrl
test
insl
ja
cmpsb
pop
mov
hlt
jmp
popf
and
out
lret
dec
rolb
xor
movsb
xchg
stc
jb
or
sub
mov
ss
loope
ret
pop
sarb
mov
insb
fidivl
pop
jle
out
inc
xchg
cmpsb
out
inc
mov
orl
pushf
lahf
lods
ss
in
movsb
cmp
stc
push
mov
and
dec
jge
sub
and
mov
sub
mov
cmpb
out
scas
aas
std
or
add
or
popa
or
sti
movsl
inc
loope
movsb
fcmovnbe
int3
sub
mov
dec
mov
aas
daa
add
notl
decb
aam
mov
mov
stos
js
mov
insl
mov
lods
sub
xchg
xlat
test
xor
stos
dec
and
jbe
movsl
les
sbb
in
dec
mov
sub
mov
sbb
cmpsl
xchg
pop
andl
dec
ret
xor
jmp
push
jecxz,pn
mov
push
aam
sahf
fstl
mov
mov
filds
out
dec
cmc
sbbb
xor
jo
xchg
xor
out
push
push
or
pop
sahf
insb
cmpsb
mov
int
cmp
mov
lock
add
fisubrs
mov
lods
fldcw
mov
mov
cmp
mov
pushf
gs
or
jmp
mov
in
leave
out
xlat
or
mov
push
sub
inc
inc
orl
out
aaa
bound
and
jge
mov
lods
pop
dec
mov
mov
sub
add
lcall
jno
mov
fisubs
clc
pop
in
dec
add
dec
lods
mov
jp
push
push
aaa
pop
shrl
xchg
test
and
cmpsb
pop
sar
int
mov
nop
outsb
lods
and
jp
jecxz
lock
pop
call
push
hlt
pop
lea
dec
mov
movb
sub
add
popf
add
into
push
sar
sub
lods
and
lret
adcb
push
sub
or
fs
enter
cltd
fisubrl
mov
stos
mov
or
or
prefetcht2
imul
mov
dec
dec
mov
lret
daa
imul
add
daa
addr16
in
xlat
jmp
xlat
inc
mov
or
dec
push
mov
inc
cmp
out
sub
sub
add
test
xchg
mul
aam
hlt
push
add
add
leave
xor
inc
mov
lods
dec
fwait
rorb
dec
test
test
xor
fisubrl
ret
rorb
pop
mov
repz
jnp
mov
fdivs
and
loope
cmp
xchg
fucomp
inc
lcall
inc
pop
sub
fwait
xchg
and
lods
push
sbb
jp
sub
pop
jl
dec
inc
and
and
aam
int
jae
lods
add
arpl
mov
mov
sbb
cmp
and
sub
cmp
mov
add
or
push
adc
insb
ret
mov
inc
aam
jo
addr16
jge
mov
faddl
inc
jo
mov
xor
lock
xchg
fsub
add
imul
mov
lds
xchg
test
lcall
mov
xor
mov
jp
xchg
xchg
fldt
jmp
loopne
stos
nop
sub
aam
dec
xchg
cmp
push
push
mov
add
jnp
test
adc
syscall
cmp
jb
arpl
scas
mov
test
mov
imul
scas
insb
add
sub
xlat
sub
mov
pop
xchg
dec
or
and
mov
sti
pop
lods
into
mov
mov
arpl
xchg
shl
lods
and
cmp
push
or
cmp
cli
jae
int
push
jle
loop
sub
cmp
xlat
enter
inc
dec
test
enter
mov
gs
jg
dec
mov
jne
sub
nop
mov
push
mov
out
inc
mov
cmp
lds
repnz
push
xchg
xor
arpl
mov
push
or
add
add
xchg
lods
lods
dec
sbb
inc
xchg
pusha
jge
pop
mov
fisubrl
in
adc
lahf
mov
sub
inc
out
lock
cli
jo
mov
dec
adc
pop
xor
dec
adc
out
xchg
push
jnp
adc
out
lea
jb
mov
or
fimuls
dec
cs
inc
ja
shlb
out
aas
std
cld
push
lods
enter
notb
ds
addr16
out
jne
lahf
mov
cmpsl
push
mov
push
or
insl
add
or
int
cmp
mov
in
sub
sub
into
sbb
cmp
push
sub
jg
ds
adc
mov
into
insl
movsl
sbb
jecxz
jmp
dec
or
ljmp
gs
lods
daa
mov
or
xchg
jmp
hlt
sahf
dec
imul
and
fwait
mov
test
aas
or
inc
and
in
mov
add
add
inc
push
or
call
clc
sub
sbb
mov
sbb
mov
jle
aaa
jge
mov
sub
and
mov
ds
jmp
lret
mov
cmp
lcall
sub
pop
icebp
push
add
cs
test
loope
and
notb
stos
popf
fistps
leave
and
xorb
push
cmp
loope
loop
ds
int
inc
sub
add
jmp
pop
std
aas
inc
jge
lods
or
sub
scas
out
push
dec
fmulp
popf
ja
mov
dec
stos
push
jecxz
arpl
mov
jmp
mov
ret
xor
in
push
insl
loop
repz
lea
out
sub
and
xorl
cmp
movsb
push
loopne
xchg
jb
and
dec
mov
sub
xchg
fidivrs
ret
ret
fstpl
xor
rcr
popf
dec
sbb
mov
addr16
pop
dec
xor
in
arpl
push
push
mov
sarb
and
push
fisubl
popa
movd
cmc
jne
loopne
leave
pop
sub
je
xchg
or
jb
lret
movsb
ja
or
in
push
xor
mov
mov
and
and
push
push
fidivs
sarb
int
nop
lds
jno
cmp
pop
mov
int
and
fs
or
outsl
rcl
arpl
in
in
jmp
inc
pusha
jne
sub
sub
daa
repz
sub
sti
sub
gs
in
mov
and
xor
sub
in
dec
mov
cld
gs
inc
icebp
add
ds
or
push
in
test
add
mov
xchg
out
outsl
aad
or
mov
cmp
jg
mov
andb
xchg
je
cs
ja
aad
cmp
outsb
cs
push
push
push
test
pushf
testl
push
fcomps
adc
xor
test
mov
inc
jno
pop
int3
jge
push
pop
sub
mov
push
pop
loop
idivl
xchg
aad
mov
out
push
out
push
dec
lods
popa
iret
imul
add
lods
inc
test
push
dec
cmpsl
and
repnz
lahf
into
dec
mov
dec
mov
add
js
cs
stos
mov
stos
fdivs
lods
gs
jmp
pmaddwd
rorb
arpl
jge
lcall
xor
add
xor
pop
pop
cmpl
movsb
and
stos
out
sub
jae
add
out
mov
or
jecxz
or
sbb
ljmp
sub
in
daa
out
dec
jge
popa
xorl
out
jg
xchg
adc
cmpsl
daa
xlat
rorl
cmp
add
inc
adc
fcoml
pusha
dec
imul
imul
leave
cmpsb
cmp
scas
mov
add
mov
call
cmc
ss
arpl
fidivl
fistpll
jg
or
repnz
int3
fsubl
or
in
out
repnz
add
push
ret
pop
out
jmp
dec
psubusw
scas
dec
pop
roll
dec
popa
fptan
xchg
jmp
mov
sub
stos
imul
jp
add
xor
mov
jecxz
cmpw
push
or
adc
mov
fdivs
push
aas
fmulp
scas
ds
rcrb
cmp
lret
out
mov
or
pop
imul
pop
push
arpl
in
in
int3
faddl
xlat
xchg
imul
and
sub
xor
cmpsl
xor
in
leave
xor
mov
iret
xchg
pop
cmpsl
pop
push
mov
mov
cld
or
or
or
lret
call
lods
mov
mov
repnz
and
es
dec
mov
mov
xor
xchg
sbb
loop
sarb
ret
iret
or
dec
mov
arpl
ss
sbb
add
dec
jecxz
jl
bound
xor
pop
mov
jmp
cmp
insb
scas
bound
stos
adc
mov
mov
xchg
add
inc
mov
pop
loop
push
sbb
popf
subl
pop
inc
insl
sub
xor
xchg
call
roll
mov
dec
lea
dec
dec
stc
dec
push
dec
inc
out
in
adc
push
sub
insl
push
xchg
in
or
push
add
test
push
cs
push
pushf
mov
test
mov
or
and
fsts
rcl
and
les
push
cmp
addr16
sbb
adc
daa
es
cmp
out
aam
mov
mov
push
add
dec
and
cld
arpl
sarb
or
push
adc
or
lods
mov
gs
decb
xchg
jmp
inc
pop
in
ljmp
into
mov
cltd
stos
shll
inc
aad
gs
outsb
test
inc
ljmp
sbb
ja
or
and
xlat
and
add
push
jg
pop
sbb
mov
and
or
hlt
push
or
adc
dec
add
clc
imul
add
shl
cmpsb
fs
push
insb
lea
push
and
push
sti
gs
inc
inc
push
mov
ja
cmp
sub
cltd
xchg
iret
int3
pop
mov
push
or
add
loopne
add
push
jmp
sub
stos
dec
mov
sub
mov
mov
pop
sub
mov
dec
mov
mov
pop
sub
mov
lods
pop
jb
ja
inc
jmp
xchg
bound
jae
and
fbstp
sub
pop
dec
xlat
aad
orl
pop
jo
sub
inc
call
lods
or
pop
cmp
or
mov
daa
fidivs
and
js
outsb
daa
outsb
test
pop
sbb
out
inc
and
xor
or
xchg
mov
or
add
call
and
es
xchg
outsb
and
pop
fs
data16
xchg
dec
cltd
shrb
int
leave
dec
dec
test
int
mov
lods
sub
jbe
mov
push
adc
mov
jo
subl
test
scas
and
xchg
adc
and
stos
xor
sub
js
mov
pop
loopne
xor
cmp
int
or
jne
mov
xchg
outsb
cs
lock
cs
xchg
out
push
mov
fisubl
js
push
lret
iret
mov
out
sub
or
shr
loope
gs
lcall
jl
stos
xlat
ss
adc
gs
or
fldcw
dec
movsl
lods
lret
push
in
sti
cs
lods
and
cmpsl
xor
inc
sub
push
dec
mov
xor
dec
popl
fcom
sub
jno
ljmp
cld
mov
add
cmpsb
sub
std
movsb
sub
cmp
pop
out
subl
das
and
test
adc
xor
out
and
cmp
fcoml
lcall
in
jmp
rcr
icebp
lahf
mov
into
xor
mov
adc
pop
pop
daa
xorb
xchg
daa
sbb
lods
stos
loop
loope
cld
jno
mov
ljmp
add
in
push
int3
and
stos
pop
dec
sub
inc
jg
xchg
sub
dec
mov
jl
adcl
je
sahf
test
mov
or
mov
lea
call
mov
fcomps
sbb
lret
mov
int3
mov
sbb
adc
daa
cmpsb
out
call
call
pop
cmp
sub
adc
cs
gs
inc
lods
or
inc
adc
adc
push
in
mov
mov
lock
enter
out
sub
jmp
mov
daa
or
ss
mov
ljmp
int3
outsb
xchg
xlat
fidivs
into
and
testb
lea
fcomp
daa
scas
rcr
mov
sub
pop
dec
iret
xchg
arpl
or
pop
imul
mov
and
fwait
mov
jbe
sub
push
push
push
xor
push
mov
scas
std
fyl2x
out
mov
pop
adc
loope
out
loope
adc
rcl
jg
lods
aam
and
cs
xchg
push
or
dec
mov
insb
cs
aad
xchg
xlat
popf
jecxz
xlat
or
mov
pop
test
fcompl
outsl
mov
sar
dec
or
dec
ficompl
cmpsl
sbb
cs
cltd
add
xor
xchg
pop
sbb
add
dec
jg
add
cmpsl
jne
dec
lret
je
in
or
pop
faddp
in
sbb
xchg
or
jg
cmpsb
les
insl
mov
and
inc
addb
gs
loopne
dec
add
popa
into
in
out
jg
dec
sub
lret
mov
mov
and
lock
insb
pop
push
test
sub
je
sahf
fimull
jnp
fiadds
cmpsl
inc
dec
pop
popf
in
inc
dec
push
sbb
jno
jge
test
pusha
sbb
mov
outsb
xor
int
push
inc
xor
gs
inc
xchg
mov
aad
cmp
xchg
in
xchg
rcrb
push
fsub
mov
mov
xor
ss
pop
icebp
mov
in
push
push
out
sub
cmp
add
pop
cmp
xchg
adc
movsb
test
test
subb
call
pop
and
mov
xchg
movsl
daa
ss
mov
fisubrl
hlt
or
call
addr16
add
cmp
bound
pop
sub
fstpt
push
jl
int3
mov
xlat
add
and
int
rorb
sub
adc
dec
repnz
sbb
xorb
and
cmp
add
push
sarb
mov
jp
mov
and
lcall
scas
jno
jmp
fisubrl
bound
shrl
out
js
test
pop
fmuls
and
xchg
pop
push
or
xchg
pop
scas
inc
aam
mov
sub
mov
push
outsl
shrb
cmp
nop
mov
dec
xchg
mov
push
mov
push
in
insb
fmuls
pushl
cld
outsb
and
out
sub
adc
add
xchg
testl
mov
mov
add
and
dec
in
aad
pop
xchg
adc
dec
arpl
cltd
icebp
xor
mov
ljmp
fdivrl
rorl
mov
les
fistl
and
add
scas
and
lcall
xor
xchg
push
add
jecxz
call
addr16
push
sub
sbbb
in
popf
adc
inc
mov
push
cmp
lods
call
loope
idivb
out
or
int3
add
mov
sub
movsb
gs
add
into
sbb
and
test
pop
sub
std
inc
xchg
dec
sbbl
or
cmpsl
shr
daa
mov
and
les
sub
jecxz
inc
cs
imul
daa
pushf
addr16
mov
cmp
or
stc
xlat
imul
aaa
mov
scas
mov
jl
sbb
xlat
fisttpll
test
sub
sbb
cmp
dec
push
dec
enter
xor
add
jae
lea
mov
and
lds
fwait
pop
push
sub
push
in
aaa
ret
cmp
arpl
push
mov
cmp
dec
and
ja
in
mov
dec
int
dec
and
and
mov
push
pop
lock
pop
shll
das
cmc
inc
push
arpl
jne
or
mov
movsb
adc
ret
stos
jbe
out
sbb
inc
in
sbb
add
ret
stos
imul
push
dec
dec
and
insb
ret
idiv
inc
arpl
xorl
or
mov
mov
repz
mov
aas
loopne
sub
pop
push
and
bound
in
sub
push
push
inc
push
lea
and
mov
and
leave
cmp
xor
or
in
xchg
adc
ss
in
pop
xor
mov
sub
out
ret
gs
or
jmp
xchg
mov
imul
dec
vmovaps
lcall
roll
lahf
push
pop
mov
sar
or
inc
mov
adc
insl
cmpleps
cmp
push
int
inc
cmp
andb
shrl
and
mov
pop
sti
leave
insb
add
xlat
add
aaa
fidivrl
test
cmp
xor
cmpsb
test
bound
negb
gs
dec
out
pop
mov
pushf
push
pop
jg
dec
les
mov
cld
sub
mov
sub
std
sbb
lods
sarl
stos
popf
jmp
fistpl
dec
movsb
jl
cmp
dec
cmp
xor
adc
popf
ja
dec
call
out
lea
sbb
jne
lret
dec
lock
lea
push
pop
dec
or
fwait
or
adc
lea
sub
scas
out
or
mov
insl
scas
pop
add
sbb
and
jne
add
arpl
insb
out
fmuls
pcmpeqw
xchg
mov
jmp
mov
mov
ljmp
arpl
insl
jbe
push
scas
or
xchg
push
inc
insl
fnstenv
enter
int
dec
int
lods
and
mov
push
fucomip
mov
scas
ss
mov
out
add
sub
rcrb
test
add
test
lods
insb
jo
fs
push
jg
push
mov
ljmp
push
popa
xor
cld
jle
cmpsb
out
cmp
or
repz
mov
lret
mov
sti
stos
rol
out
mov
in
loop
push
enter
jnp
in
into
pop
sub
outsl
bswap
in
dec
ret
cmp
int3
popa
rcrl
mov
dec
and
dec
dec
add
mov
jl
leave
jg
enter
or
es
or
test
lods
inc
mov
fldcw
and
and
or
sub
cmp
outsb
push
adc
dec
push
push
pop
data16
aaa
dec
cmpsl
test
cs
push
loop
pushl
fimull
fdivr
pop
xor
cmp
dec
fistpl
loopne
mov
out
sub
jmp
aam
sbb
es
sub
outsl
dec
cmpsl
cmp
cli
mov
enter
push
je
test
andb
pop
loop
pop
out
and
and
push
mov
and
loop
jl
or
or
jmp
mov
pop
test
and
sub
in
pop
and
das
pop
lock
sub
sahf
cmp
sub
leave
and
in
adc
call
ja
jne
and
pop
sub
test
push
or
cmpsl
xor
sbb
sub
mov
mov
and
lret
ljmp
movsb
add
nop
pop
sub
inc
bound
jge
xchg
popf
push
or
jne
jl
jecxz
lret
lock
out
adc
shrb
cmp
jmp
in
pop
imull
daa
popl
adc
sub
xor
fs
dec
push
lret
lock
and
push
mov
or
mov
and
xor
cmpsl
sti
xlat
subl
sbb
mov
popf
out
jmp
mov
cmp
in
or
std
add
addr16
int
and
and
iret
jp
sub
pop
neg
cmpsl
xor
and
lods
sarl
rolb
push
fmul
jecxz
jbe
mov
xchg
jmp
fwait
add
push
out
out
hlt
push
data16
mov
sbb
fwait
dec
sarb
dec
dec
hlt
pop
loop
xchg
hlt
mov
daa
or
icebp
ret
movsl
inc
out
inc
and
rcl
mov
repnz
dec
mov
sub
jo
inc
test
dec
push
repz
das
sub
and
test
push
and
sub
aad
inc
push
mov
xorl
cmp
lahf
mov
rorl
in
xchg
aam
roll
sub
insb
aaa
cmp
mov
in
loopne
fwait
daa
fmull
imul
or
mov
das
cmp
loope
cld
cmc
test
sub
cmp
pop
fisubrl
rorb
aas
clc
mov
sub
sub
xchg
push
and
push
out
enter
inc
clc
fldl
or
adc
dec
in
inc
mov
lods
add
popf
fldt
mov
out
and
fisttpll
fsubr
mov
cltd
enter
jae
mov
in
xor
jmp
lahf
hlt
mov
and
and
movsb
arpl
into
sub
iret
nop
mov
leave
int
int
mov
outsb
sub
aaa
in
and
ret
sarb
and
into
into
flds
dec
fstl
sub
lods
fs
and
sub
daa
mov
neg
and
jmp
aas
imul
pop
les
mov
imul
pop
and
insb
data16
pop
add
in
lods
or
dec
jecxz
pusha
gs
sub
xchg
cmpsb
ret
sub
jle
mov
leave
mov
mov
out
es
sub
test
sarl
repnz
dec
and
cmp
add
push
ret
push
mov
in
adc
dec
cwtl
dec
add
add
imul
shll
out
push
sub
inc
cld
js
outsl
mov
dec
aaa
and
xor
push
add
sbb
int
inc
and
mov
mov
mov
mov
outsb
div
jno
or
pop
fisttps
mulb
out
dec
and
pop
out
and
aad
adc
ret
inc
insb
lcall
inc
jl
fsubl
add
cmp
jae
into
xchg
leave
sub
dec
dec
and
ljmp
ror
add
mov
loopne
fsubrs
sub
push
mov
jmp
out
sub
inc
xchg
clc
iret
mov
jp
pop
jp
enter
fidivrl
dec
inc
and
jns
inc
pop
sbbb
jle
lret
or
lret
mov
js
push
and
and
inc
jo
xor
fstpl
push
mov
or
cmpl
cltd
das
testb
push
and
adc
sub
xchg
mov
or
sub
jl
outsl
in
mov
lret
cmpsb
jle
mov
int3
int
dec
add
sub
dec
inc
fucomi
mov
and
or
pop
pcmpeqw
fwait
iret
sar
mov
inc
and
mov
lea
jle
lds
push
push
and
jmp
out
mov
in
sub
fidivrl
rcll
lods
int
mov
popf
mov
in
lods
or
dec
lock
scas
outsb
mov
mov
mov
push
and
into
xor
aaa
fistpl
ficoml
and
shr
push
aas
stc
mov
mov
sub
or
sti
ret
mov
jmp
inc
mov
rol
cld
jp
mov
cmpsb
cmp
test
mov
mov
lcall
iret
cmp
popf
ret
inc
sub
addb
mov
gs
in
in
sbb
inc
sahf
int3
or
cmp
test
inc
inc
sbb
lcall
sub
iret
loope
dec
and
xchg
cmp
outsl
clc
dec
test
sub
or
out
mov
pop
addr16
and
lods
movsb
jmp
sbb
lahf
push
data16
adcl
xchg
in
int3
inc
push
or
add
jge
or
loopne
push
sahf
mov
or
xchg
sbbl
jne
fnstcw
xchg
inc
incl
cmp
decb
push
mov
sbb
cmp
cltd
jg
sub
mov
sub
push
stc
push
push
sarb
aad
pop
pop
mov
shll
mov
add
stos
lahf
sub
loopne
sahf
sbb
lds
or
sbb
mov
data16
and
dec
rcr
push
mov
xlat
testl
lods
adcl
jbe
mov
push
call
lods
lret
cmp
mov
and
shll
sub
pop
ds
mov
test
mov
fmul
jae
mov
gs
arpl
int
xchg
ficoml
aad
sarl
cmp
push
jno
mov
mov
fmull
ret
add
cmp
test
out
stos
pop
lock
int
inc
insb
gs
test
leave
cmpsl
adcb
leave
xchg
sub
push
push
dec
xchg
decl
lods
or
dec
cmp
xchg
sub
popf
dec
test
and
push
lods
test
xchg
push
mov
mov
xor
sub
inc
cmp
adc
mov
pop
call
dec
imul
jg
into
inc
sti
mov
mov
je
sub
out
push
mov
into
mov
mov
mov
cmp
sar
enter
lahf
pushl
iret
lods
test
push
in
mov
enter
mov
mov
mov
fwait
mov
mov
sub
mov
dec
and
inc
test
out
and
xor
xchg
fisubrl
insl
cmp
test
in
aam
and
jmp
das
jmp
add
or
fs
add
shl
fisubl
pop
enter
mov
mov
movsl
pop
pop
out
sub
clc
push
or
jp
add
or
xchg
in
lods
addb
addr16
imul
dec
nop
mov
sub
daa
lods
ja
in
imul
inc
fildll
repnz
jmp
mov
test
in
popf
je
pop
lods
ret
les
das
push
add
push
add
movsb
or
pop
lea
lahf
dec
lods
mov
arpl
jp
or
test
enter
dec
pop
shlb
jne
push
mov
jne
mov
push
xor
andl
mov
test
stos
pop
pop
ja
rorb
xlat
and
or
xor
cmpsl
xchg
jge
sti
inc
test
sbb
fwait
xchg
test
fldt
lahf
xchg
push
call
mov
and
ret
int
sub
mov
fdivl
xor
inc
enter
adc
push
aam
pushf
push
fiaddl
push
xchg
es
sub
lods
insl
shl
cld
fwait
shlb
imul
adc
jmp
jecxz
sub
adc
or
dec
sub
mov
xchg
push
lods
sub
notb
test
add
sbb
mov
hlt
xor
cmp
out
lods
and
xor
mov
or
mov
rcll
jg
and
mov
jb
push
pop
icebp
mov
and
outsl
mov
pop
push
into
pop
aas
out
dec
and
stc
or
sub
add
inc
mov
dec
add
mov
in
rcrb
sahf
or
mov
lods
sub
jge
out
nop
push
mov
mov
sub
mov
jb
mov
xor
inc
jmp
cmp
stos
shrl
jge
movl
ret
int3
mov
movsb
clc
hlt
mov
xchg
push
lahf
push
popf
in
add
das
jg
out
pushf
aam
dec
add
push
mov
lret
rcrb
scas
test
imul
dec
movsl
ds
and
scas
and
popa
shrl
fidivl
das
adc
movb
add
daa
lret
data16
ret
or
jle
out
jnp
dec
gs
enter
jecxz
ret
lods
pop
rol
cs
dec
pop
insb
lods
jmp
mov
leave
add
cltd
fsubr
stos
xchg
loope
sub
leave
inc
mov
pop
push
dec
popf
inc
xorl
sub
push
scas
test
fsubrs
arpl
jge
das
wbinvd
mov
in
pop
sub
lret
jp
adc
and
lods
call
nop
pop
dec
in
push
call
fisubl
jmp
into
repnz
mov
mov
test
ja
inc
mov
add
int3
adc
cltd
mov
pop
cmpsb
dec
sub
xor
adc
or
mov
and
lahf
daa
and
xchg
pop
or
jecxz
leave
or
pop
enter
mov
jp
dec
popa
mov
xchg
int3
cmp
arpl
decl
int
lahf
push
and
add
int
stos
shr
jmp
leave
mov
fidivs
addr16
fcomps
lods
jecxz
in
gs
xor
jg
mov
inc
out
pusha
sub
pop
cmp
pop
mov
add
shr
test
ror
stos
dec
outsb
sub
and
cld
out
sub
cmp
add
cmp
test
add
es
loopne,pn
push
push
in
adc
daa
ds
add
mov
push
popf
jns
and
dec
sub
or
jge
in
test
push
hlt
dec
sub
iret
leave
mov
push
xorl
mov
push
lods
lods
and
imul
mov
xchg
test
divl
jmp
and
cli
xchg
ret
stos
mov
scas
aas
jno
or
xor
mov
int3
aam
or
orb
sub
xchg
ss
and
push
mov
or
sub
cmc
in
jmp
push
dec
cmp
in
inc
dec
sub
das
iret
mov
add
inc
std
push
add
mov
inc
pusha
mov
push
jmp
ret
push
repz
in
sub
inc
jmp
js
cs
sub
add
inc
mov
cld
cmp
in
in
cmp
xchg
icebp
lods
cmpsb
push
lods
out
and
adc
or
leave
xor
aad
add
xor
lock
leave
cs
cltd
xchg
add
lods
mov
ja
mov
add
fisubrs
mov
mov
or
in
aam
inc
aad
iret
mov
es
mov
add
inc
in
pusha
mov
sbb
fs
push
sub
xchg
in
mov
sbb
fsubrs
or
cmp
pop
add
int
cmp
mov
dec
jg
mov
dec
dec
add
mov
jmp
loop
push
stos
lcall
mov
and
outsb
mov
addr16
cltd
jo
or
dec
cmpl
insb
inc
push
arpl
pop
and
hlt
push
int3
gs
decb
or
aas
push
fcoml
daa
dec
sbb
in
test
sahf
xor
mov
xchg
mov
adc
aad
lcall
popa
mov
out
xor
enter
adc
mov
fistps
adcb
push
or
test
mov
lods
mov
and
and
cmp
int3
and
int3
mov
outsl
fwait
je
int
jmp
cmp
test
or
and
ret
mov
and
mov
pushf
scas
pop
lea
popf
jmp
add
sbb
shrl
jbe
insl
add
cmpsb
push
popa
repnz
push
sbb
mov
mov
adc
out
fidivrl
or
dec
jge
pop
inc
mov
bnd
pop
ds
add
pextrw
test
daa
and
mov
sub
sub
mov
addr16
xchg
mov
cmp
scas
out
and
mov
bound
xchg
test
stc
insl
mov
or
and
lods
out
enter
insl
jmp
jae
fldcw
daa
mov
pop
jg
add
push
int
stos
pop
sbb
inc
and
and
hlt
lods
cs
int3
into
dec
cwtl
subl
sub
cmpb
xor
and
sub
cmpsb
sar
es
fimuls
dec
xlat
xchg
arpl
lds
dec
mov
mov
scas
in
push
pushf
sub
inc
inc
mov
shll
int
or
or
mov
mov
pop
subb
push
test
loop
inc
xor
push
mov
xor
jae
adc
inc
and
mull
sbb
ss
and
push
out
imul
sub
out
mulb
popa
push
call
add
inc
cmpsl
sub
out
inc
loopne
xor
inc
rorl
nop
pop
iret
fwait
arpl
sub
jecxz
loop
push
aas
add
mov
leave
dec
adc
ss
cs
jp
je
cmpsl
adc
and
xchg
outsl
or
ljmp
add
ja
push
jbe
dec
jne
add
lods
outsb
xor
xchg
out
movsl
push
insb
dec
pop
adc
out
lods
test
fidivl
repz
scas
mov
pcmpeqd
rcrl
jmp
jns
rol
dec
add
and
sbb
or
mov
push
outsb
sbb
arpl
add
je
inc
cmpsl
fimuls
mov
lods
dec
push
fistps
lret
xchg
or
add
mov
call
push
mov
pop
dec
testb
scas
and
xchg
data16
push
add
xchg
and
sarl
jne
int3
mov
fst
mov
mov
rcll
or
adc
imul
daa
or
or
mov
std
movsl
push
sub
lea
addr16
shlb
lret
popa
cmp
loope
leave
mov
nop
enter
daa
popa
mov
sub
imul
pusha
or
sub
fsubrs
cmp
sub
sub
mov
dec
fistpl
js
insb
jb
fldenv
cmp
rcr
sub
mov
cli
xchg
and
js
sub
lcall
jne
loop
outsb
lahf
or
xchg
incb
mov
push
aad
jmp
dec
sbb
push
or
arpl
arpl
mov
pop
inc
leave
popa
gs
lea
in
icebp
jnp
pop
sub
inc
aam
call
lea
movl
or
test
std
or
insl
mov
icebp
sub
inc
xlat
out
pop
sub
roll
test
jnp
pop
fimull
push
loope
in
cmp
xchg
iret
adc
lret
mov
add
call
aam
sbb
cmpsl
rcrb
cmp
sub
inc
jno
notl
outsl
dec
sti
hlt
and
inc
insb
popa
fisubrs
jns
enter
movl
add
sub
outsl
xchg
cmp
sti
sub
stos
pop
std
lods
dec
shrl
push
or
mov
add
or
sub
sub
jb
ljmp
gs
test
minps
jae
xchg
and
sub
scas
jb
leave
push
sub
fwait
sub
popf
or
jg
ret
test
in
push
mov
lds
outsb
ror
or
ret
mov
mov
out
daa
mov
jl
xchg
jecxz
hlt
mov
sub
add
int
add
xchg
cltd
sub
cmpsb
mov
mov
lods
jb
push
add
dec
or
cld
rol
scas
lods
test
push
scas
xchg
mov
mov
and
inc
addr16
cmpsl
push
jne
loop
repnz
sub
int3
in
jmp
fcoml
sub
fnstsw
gs
into
daa
int3
iret
sbb
sub
or
out
push
mov
xchg
push
sub
enter
outsb
pop
jmp
lods
repnz
ret
mov
rcll
push
sub
sbb
rorl
mov
insl
jne
test
int
adc
add
scas
cmp
cmpl
sub
or
es
sarl
nop
pop
dec
dec
push
and
dec
and
add
mov
cs
cmpsl
imul
mov
fdivs
dec
int
xchg
or
mov
fstps
xor
inc
jl
dec
pop
or
add
pop
mov
jecxz
orl
imul
xor
imul
or
mov
push
mov
jp
mov
aad
test
mov
dec
sub
cmp
dec
into
out
push
inc
insb
popa
or
sbb
inc
dec
fsubl
cmpsb
inc
jno
mov
call
pusha
mov
enter
lcall
lods
dec
subl
pop
andb
cmp
jmp
cmp
in
cmp
aam
jg
sub
in
inc
dec
cmp
push
dec
adc
push
mov
hlt
sub
in
add
jbe
jecxz
sub
lods
clc
mov
out
and
fimuls
rclb
out
out
cmp
push
cmpsl
gs
movsl
add
mov
mov
dec
xlat
lret
mov
jb
aaa
push
lcall
and
and
push
jno
mov
ret
repnz
jnp
stos
addr16
outsb
sub
lcall
push
je
aaa
fstpt
imul
repnz
jmp
or
cmpsl
and
push
fsubl
pop
pop
adc
insb
nop
sub
add
pop
cmpsb
sbb
int
push
in
mov
in
mov
mov
imul
or
inc
clc
mov
dec
imul
test
data16
sub
jl
mov
rolb
sbb
ljmp
xor
jg
daa
sub
gs
andl
gs
mov
test
out
cmp
add
paddsb
sbb
dec
imul
dec
in
sub
mov
stos
sbb
in
or
mov
jnp
push
out
enter
or
dec
stc
nop
in
mov
xchg
add
lods
ret
pop
bound
int
mov
add
mov
sti
insl
xlat
sub
push
push
scas
dec
into
out
or
or
mov
pop
dec
clc
fcmovnb
inc
daa
daa
popa
lgs
xchg
push
popa
into
pop
sbb
and
test
pop
inc
add
sbb
add
inc
andl
jmp
xlat
pop
gs
in
add
or
ret
fs
mov
shlb
inc
adc
xchg
sub
out
ficomps
inc
pop
lods
sub
sub
test
dec
push
sub
add
pop
enter
add
or
nop
lds
scas
cmp
icebp
ret
dec
pop
mov
jne
int3
push
mov
es
xlat
push
dec
pop
jo
lret
mov
sub
push
cmp
scas
add
cltd
scas
ja
lret
js
push
jno
popf
mov
popf
adc
push
or
out
jl
inc
sub
push
pop
sub
out
popa
call
aad
out
sub
std
pop
or
lock
jp
nop
nop
dec
in
jne
push
lods
and
mov
sbb
mul
xchg
xchg
mov
dec
test
or
or
int
mov
lret
push
mov
in
pop
daa
xchg
test
xchg
jne
xlat
xlat
lods
cs
in
jmp
inc
jle
stos
xchg
rorb
mov
mov
daa
mov
lods
movsb
shr
cmp
mov
sti
cmpsb
test
dec
sub
sahf
dec
rcrl
ror
sub
scas
leave
out
pop
sti
aad
hlt
mov
inc
dec
xor
out
aam
jecxz
ss
adc
sub
popf
test
cmpsb
pop
ret
cs
shl
sub
orl
mov
std
lahf
outsl
dec
inc
sub
mov
call
in
sub
xchg
rcl
dec
push
mov
jo
scas
jae
rcr
mov
xor
ret
xchg
pop
shr
sar
jne
call
mov
push
inc
jne
and
stc
push
nop
scas
add
cmpsb
cmp
lret
jge
xor
leave
test
enter
jl
mov
adc
pusha
push
aam
test
sub
rorl
mov
in
ret
fwait
imul
inc
dec
mov
and
inc
test
cltd
leave
scas
add
mov
jmp
mov
dec
inc
lret
add
enter
xor
add
fcoml
cs
dec
push
and
lea
and
inc
adc
inc
inc
add
xor
in
mov
call
sbbl
das
pop
adc
lods
lods
imul
pop
dec
add
or
jge
cmpsb
jmp
mov
dec
mov
ret
cld
fsubrs
xchg
xor
jp
sub
popf
cmp
cmp
sbb
xchg
lea
imul
ret
sub
add
xchg
nop
xchg
cmpsl
and
es
pop
addr16
and
in
fldt
mov
movsb
rorl
loopne
mov
and
cs
and
loopne
fmulp
and
scas
sar
xlat
mov
in
pop
imul
lods
sub
data16
jmp
fimuls
fs
push
pop
push
test
out
xor
sub
xor
rcrb
dec
dec
fdivl
xchg
inc
int
dec
dec
cwtl
out
adc
lret
or
mov
or
add
mov
imul
gs
int
js
cmp
xor
insl
fisubrs
leave
nop
out
lds
sbb
mov
in
and
je
in
dec
imull
xchg
imull
dec
in
cmp
xor
call
imul
imul
pop
or
nop
pop
insb
jmp
rclb
xor
fsubl
and
iret
loopne
or
xchg
push
push
leave
fcmovne
jle
in
andps
push
and
and
pop
imul
cs
jne
dec
sbb
pop
jmp
ret
shr
sub
jge
insl
pop
xorb
fsubrs
adc
and
fildll
dec
cs
jb
jmp
push
mov
and
jp
imul
sub
insb
lea
popf
scas
or
stos
loope
sub
into
adc
jl,pn
int3
push
xchg
shl
aaa
jns
mov
jge
mov
lods
stos
push
gs
xchg
mov
cmp
mov
jne
jbe
inc
leave
enter
ror
fisttps
pop
cs
mov
cmp
test
stc
shr
scas
sub
add
push
dec
jge
jl
inc
xor
jae
aam
sbbl
icebp
jns
jg
or
pop
pop
mov
fiadds
inc
jp
arpl
ret
lret
xor
cld
pop
lcall
cmp
in
inc
inc
dec
cmp
fldl
daa
daa
xchg
mov
dec
popa
repz
mov
cs
mov
in
cmpsb
jmp
mov
dec
lods
mov
popa
adc
into
inc
cs
push
in
cmp
cmp
mov
jnp
aam
mov
sub
add
adc
pop
cmp
sbb
pop
daa
push
pop
add
cld
lock
hlt
loop
push
in
jae
jne
popf
pop
iret
jmp
mov
jl
dec
in
xchg
mov
xchg
into
sub
fwait
or
sbb
lods
push
and
inc
push
inc
notl
mov
call
push
or
sarb
dec
int
xchg
gs
rorl
jmp
and
gs
stos
xorb
cli
and
cs
sub
add
shl
jmp
mov
nop
das
and
xor
pop
in
add
neg
xor
and
ret
mov
imul
mov
jecxz
lret
sbb
sub
into
in
sub
xor
cmp
into
scas
mov
mov
xchg
pop
mov
adc
add
xor
call
int
inc
cltd
out
in
int3
jo
gs
fcompl
lret
ljmp
sbb
push
in
pop
adc
pop
push
xchg
iret
out
mov
xchg
icebp
sub
dec
jmp
add
mov
scas
out
adcl
cmp
subb
pushl
mov
sbb
inc
nop
ret
mov
cmp
mov
inc
or
sbb
inc
leave
je
xchg
push
popf
xor
shrb
mov
push
adc
inc
xchg
lods
lods
adcl
sub
xchg
mov
push
mov
push
pop
ficoml
scas
or
xor
into
adc
push
mov
add
jmp
cld
push
or
lret
mov
imulb
inc
orl
in
sub
pop
xchg
jb
sub
jmp
or
fildll
in
mov
push
xchg
stos
xchg
iret
test
adc
pop
scas
test
cmpsb
adcl
arpl
scas
xor
inc
into
out
scas
test
popa
insl
pop
lret
xor
and
xchg
inc
xchg
or
mov
inc
push
push
add
mov
cmpl
lret
push
insl
jge
push
xchg
xorb
dec
inc
lock
in
add
ss
xchg
out
enter
sbb
push
dec
inc
jp
cmpsl
imul
pop
push
add
nop
loop
sub
out
cmp
add
cmp
jle
sub
ds
sub
notl
push
mov
loop
or
jns
push
mov
addl
test
cltd
out
cltd
stos
daa
inc
mov
lock
push
dec
sub
js
pop
or
sbb
sbb
push
shlb
pop
push
cld
push
dec
add
xlat
test
xlat
push
cmp
sbb
pop
xor
cmc
iret
fs
push
pop
xchg
out
fmull
mov
jb
aaa
mov
lods
ds
outsl
arpl
les
add
cs
jo
out
loopne
or
lods
or
mov
or
repnz
mov
lea
or
dec
daa
pop
xchg
cmp
add
hlt
push
lods
mov
pusha
or
sub
jno
mov
inc
mov
sbb
sahf
cmpsb
outsl
push
stos
ja
mov
call
js
js
mov
daa
movsb
sarb
push
mov
dec
or
es
mov
and
je
jmp
push
imul
lret
sbb
jbe
sub
xchg
sbb
rcrb
lea
ljmp
outsl
fstl
std
out
mov
jl
icebp
jp
jmp
dec
jbe
insl
cmp
js
or
cmpsb
out
xor
cmp
je
pop
or
inc
aaa
inc
aad
pop
ds
ljmp
jb
sub
loop
stos
adc
fwait
pop
daa
fisttpl
aad
into
sub
xlat
nop
imul
sub
fidivs
mov
push
arpl
cmp
cmpsl
iret
fsubrs
pop
sbb
sub
xchg
add
pop
or
popf
int3
out
fcompl
mov
or
push
insb
leave
cld
xchg
push
pop
jne
imul
ja
cs
cmpsb
imul
mov
test
divl
sub
outsl
mov
das
sub
lret
ds
mov
call
mov
divl
mov
mov
imul
repnz
pop
sub
jae
inc
fisubl
cwtl
pop
and
iret
in
test
sarb
dec
in
je
mov
stos
sub
and
pusha
lods
mov
xor
scas
xor
scas
mov
and
sbb
sub
fnstcw
mov
adc
cmc
shrb
push
ret
mov
insl
xchg
pop
push
or
int
out
in
push
cmp
into
cmp
test
sub
mov
andb
cmp
jmp
aam
xor
mov
gs
jecxz
es
inc
mov
clc
push
or
out
mov
sub
inc
sbb
faddl
sub
push
or
pop
loop
sub
insl
cmpsb
add
pop
adcb
scas
push
out
mov
sub
add
xor
cmpsb
jmp
sub
test
cmp
or
addr16
fwait
in
dec
hlt
in
push
rcrl
xchg
add
xchg
mov
lret
call
fsubrs
inc
inc
add
adc
lods
dec
and
lods
xchg
int3
jne
in
scas
add
mov
xor
lods
mov
sbb
cmp
test
dec
testb
dec
sub
mov
and
xlat
jle
call
movsb
cmp
mov
rclb
dec
add
int3
in
scas
fs
inc
jecxz
imul
dec
xchg
jg
push
add
sub
outsb
dec
mov
xchg
insl
movsb
inc
out
mov
and
mov
add
sbb
adc
mov
orl
or
testb
in
and
cltd
data16
mov
shll
lret
fisttpl
cmp
loop
xor
shrb
outsb
and
das
jp
dec
pop
xchg
popa
into
mov
inc
mov
loope
jg
and
addr16
in
ljmp
aad
daa
cld
mov
cmpsb
dec
push
jg
lret
loopne
fmull
jp
int3
xorl
mov
repnz
xor
test
lods
fmull
pop
jb
adc
cmp
sbb
stc
sbbl
rorb
in
jo
push
jmp
dec
hlt
dec
in
xchg
push
mov
shll
inc
rclb
and
dec
cmp
mov
callw
insl
pop
sub
call
arpl
out
xchg
jne
add
scas
mov
cmpsb
pop
push
out
addb
cmp
test
mov
fnstcw
push
inc
test
add
mov
sub
enter
jecxz
mov
arpl
mov
nop
int
addl
int3
fbstp
jecxz
mov
xor
or
sub
andb
sub
or
in
mov
test
pop
movl
inc
ror
add
cmp
test
jle
mov
inc
jnp
imul
mov
sub
movsl
jge
xchg
adc
mov
or
enter
xor
mov
sub
pusha
andl
adc
xor
inc
and
aam
insl
fsubr
call
scas
cld
icebp
lahf
test
cltd
int
pop
mov
or
mov
sub
or
dec
adc
scas
inc
cmpsb
sub
push
ret
mov
sub
and
mov
cmp
pop
cmp
xchg
jno
ds
adc
mov
leave
hlt
cmp
fdivrs
dec
lds
cmpsb
add
push
cmp
pop
leave
inc
je
lahf
xchg
xchg
xor
adc
sub
in
cmp
sbb
jmp
xchg
pop
test
fcmovnb
mov
in
cs
aad
jp
test
subl
jmp
ret
fsubrs
xchg
rol
lret
pop
sub
and
sub
add
jnp
mov
or
jb
mov
and
fbld
je
int
add
mov
test
hlt
sbb
test
cmp
mov
and
jne
fs
push
pop
mov
or
mov
or
in
push
gs
add
cmpsl
loop
fdivrs
xor
fildl
mov
mov
sahf
cs
xchg
ret
and
pop
xchg
add
sbb
mov
dec
adc
adc
push
fdiv
in
test
pop
inc
scas
dec
xchg
leave
movl
fs
mov
sbb
or
ret
test
lea
jmp
shr
dec
mov
or
movsl
pop
cmp
or
icebp
fidivrl
arpl
ss
xor
jne
adc
loope
dec
cmpsl
pop
dec
enter
lar
gs
clc
or
cli
jmp
fldt
or
mov
mov
call
dec
in
or
mov
test
jmp
leave
lods
andl
shr
push
test
push
cmc
add
xor
sub
aaa
push
dec
in
mov
enter
sbb
test
scas
xor
lret
sbb
daa
popa
xchg
fdivrl
hlt
jmp
cs
pop
adc
lds
and
sub
xor
stos
cli
lods
ljmp
rcrb
mov
insb
push
outsb
in
fcoml
jp
pop
pmuludq
cmp
add
ss
adc
icebp
mov
imul
leave
cs
and
push
or
sub
lods
inc
mov
add
jp
in
outsb
jno
gs
lret
ret
push
and
jp
dec
and
sbb
push
shrl
dec
sub
bswap
xor
sub
pop
mov
fsubp
dec
in
cmp
adc
xchg
dec
mov
imul
inc
sub
xchg
je
out
aaa
pop
ja
lods
push
repnz
out
insl
dec
mov
pop
mov
dec
adc
leave
sarl
jecxz
fdivs
push
sub
imul
mov
mov
dec
and
add
or
cmc
test
jo
imul
repnz
sti
xor
sbb
and
movsb
repz
int3
mov
and
daa
icebp
fsubrp
add
push
sti
mov
push
scas
cmp
mov
xor
ror
xchg
popa
jnp
in
xchg
outsl
test
sub
sub
mov
fsts
jns
into
and
bound
inc
xchg
sahf
or
shll
scas
pusha
mov
xchg
adc
dec
sbb
pusha
cmp
adc
sub
aas
fldenv
sbb
inc
push
scas
in
ret
cmpsl
aaa
mov
aaa
imul
int3
fbstp
cld
in
push
sub
out
daa
test
cmp
fisttpll
jns
mov
lcall
aam
lods
cltd
xor
jno
xchg
xor
mov
jb
xchg
cs
shll
jnp
lods
stos
and
aam
insl
inc
dec
leave
lea
and
pop
into
pop
scas
sub
shr
out
cli
outsl
xchg
sbb
icebp
aas
lret
outsb
int3
sub
and
repnz
orb
sub
popf
cmpsb
popa
out
imul
insl
iret
dec
mov
jecxz
xchg
mov
cs
jbe
or
mov
lods
imul
imul
sub
orb
addl
xchg
cmpsl
or
sbb
lods
jp
inc
cs
fs
loopne
and
or
fcompp
xlat
inc
xor
lock
pop
sub
and
cmp
jmp
arpl
sub
dec
push
nop
adc
jnp
pop
cmpsl
and
shll
mov
jmp
ret
push
or
dec
jge
inc
inc
stos
push
ficoms
lea
aaa
push
in
movsb
roll
sub
cs
cmpsl
scas
ds
mov
xchg
aad
adc
gs
pop
xchg
fld1
ja
pop
lea
mov
pop
sub
dec
iret
loopne
and
xor
fwait
cmp
adc
lcall
mov
imul
sub
sub
pusha
dec
inc
jo
jecxz
jnp
popf
jbe
dec
imul
mov
adc
dec
sti
int
xlat
outsl
add
fmul
out
addl
and
mov
popl
dec
add
xchg
ljmp
mov
mov
and
movsb
cmp
inc
sub
cmpxchg
cmpsl
inc
imul
xchg
and
adc
fistpl
stos
daa
out
lcall
sub
sub
lret
mov
in
out
dec
dec
or
out
insl
inc
and
dec
je
or
sub
in
mov
add
lret
mov
dec
sub
mov
adc
out
sbb
cmc
aad
add
add
cmp
insb
pusha
es
jno
inc
inc
roll
and
jae
xchg
mov
jmp
push
jmp
test
xor
orl
mov
jo
out
and
push
and
mov
movsl
pop
xor
fnstcw
stos
fmull
addr16
aam
ret
mov
jae
jmp
into
aas
nop
into
lods
push
out
sbb
jp
xchg
shrl
in
lea
ds
or
mov
lods
pop
inc
ficoml
cs
cmp
popf
mov
inc
outsl
pusha
inc
mov
es
push
mov
mov
mov
addl
push
inc
stos
pop
ja
dec
into
and
out
pop
dec
cs
or
jo
mov
in
cmpsl
add
es
lahf
mov
pop
pop
fmulp
sub
push
aad
xchg
addl
subl
add
jg
or
or
jmp
popa
dec
fnstcw
cs
add
push
stos
fmuls
outsl
sub
sub
lcall
jp
xchg
fsubrs
inc
or
mov
dec
cmpsl
ja
xchg
jns
mov
jmp
inc
fstl
mov
push
pushf
mov
or
adc
ret
out
pop
arpl
or
sar
scas
mov
and
imul
gs
cmpsb
imul
push
sub
out
or
lret
repz
sub
adc
enter
xlat
imulb
jmp
pop
insl
xchg
mov
pop
sbb
call
out
lods
sbb
lods
jecxz
and
fisubrs
dec
sub
add
adc
jae
cli
sbbl
and
xor
pop
lds
ror
enter
test
lods
repnz
ljmp
lods
into
push
push
dec
pop
dec
gs
es
out
int
mov
cmp
int
sbb
mov
pushf
mov
nop
push
scas
stc
push
sar
jns
sub
and
push
lock
dec
or
push
test
mov
mov
jae
xor
and
push
xchg
xlat
jecxz
lods
and
clc
fcoml
mov
fwait
ret
popf
adc
imul
xorb
sub
sbb
or
lahf
or
mov
cmp
or
daa
add
les
pop
lods
sbbb
sub
xchg
out
and
popa
call
lods
pop
imul
and
cld
ret
or
out
in
dec
int
jne
out
xchg
cmp
lods
sbb
cmp
push
mov
push
or
leave
sub
into
dec
xchg
lock
push
xor
lcall
push
mov
add
shrb
movsl
repnz
push
xchg
cltd
mov
in
test
popf
dec
enter
lret
insl
fwait
imul
jge
ret
and
sub
add
sbb
mov
aas
ds
add
adc
shl
rorl
dec
dec
jbe
fisubrs
mov
gs
lock
push
outsl
adc
lahf
mov
sbb
jle
push
mov
lods
and
je
pop
inc
dec
inc
pop
jecxz
repz
sub
pop
popa
mov
add
aam
xor
aaa
ret
insl
add
mov
and
dec
fsubrp
pop
and
sub
push
sti
mov
mov
push
fnstcw
imul
push
inc
dec
cmpsl
gs
lods
mov
cmp
test
icebp
inc
aad
and
inc
push
andl
outsb
ja
mov
out
xor
andb
mov
mov
dec
push
outsb
clc
xor
jb
pop
add
fs
lret
popf
gs
add
adcb
rol
je
out
ds
lret
push
orl
loopne
sarl
mov
inc
cmp
aad
pushf
pop
in
insb
jno
mov
outsl
and
or
sub
leave
dec
stos
push
push
incb
outsb
mov
std
cmpsl
jp
test
add
ret
xchg
mov
cs
lds
add
mov
and
dec
mov
aas
das
inc
adc
mov
daa
xor
fcmovnb
decl
mov
mov
add
lock
sub
sub
mov
pop
imul
scas
outsl
mov
rorb
mov
stos
lock
nop
cltd
lods
push
in
out
sub
cmpsb
adc
movsl
sahf
cltd
lret
lea
sub
mov
xchg
mov
inc
xchg
iret
lods
lods
sub
popf
xchg
addr16
sarb
cld
dec
pop
add
lods
int3
leave
add
mov
fs
ret
add
shlb
shl
ss
xchg
fwait
enter
mov
int3
repz
aaa
ljmp
adc
or
or
mov
fisttps
sub
dec
xchg
notb
popa
ss
pusha
pop
mov
lods
lods
pop
push
sbbl
cmp
jl
cmp
addr16
andl
ljmp
lahf
push
or
out
mov
mov
cmpl
sub
inc
stos
sbb
jle
pop
pop
mov
or
or
lsl
dec
outsb
aaa
adc
cmpsb
cmp
ds
inc
cmpsb
ljmp
je
dec
sub
in
dec
adc
call
daa
jo
int3
jmp
lods
cmp
mov
shlb
pop
xor
ret
add
das
dec
push
out
lods
dec
popa
xchg
pop
dec
testl
push
arpl
and
push
sub
sahf
ss
inc
and
repnz
outsl
outsb
dec
pop
nop
fwait
iret
test
es
mov
std
int3
out
shl
pop
fwait
out
jbe
dec
mov
push
pusha
xor
jne
jnp
xchg
mov
xchg
test
sti
lods
push
ss
int3
into
jnp
push
push
test
stos
mov
daa
pop
lds
into
ja
jb
insb
arpl
xchg
add
adc
loope
outsl
rcrb
lods
dec
out
or
jns
adc
xchg
fldcw
or
push
sub
bound
cmpsb
out
dec
pop
jecxz
jno
xchg
xchg
in
push
pop
inc
gs
stos
movsl
or
mov
or
or
int
pop
outsb
push
push
clc
cmp
insb
or
lcall
pop
push
ja
rorb
rolb
out
in
xor
sub
jnp
int
lods
out
out
sub
or
js
in
insl
outsb
inc
fisubrs
and
cmc
cltd
or
xchg
sub
pop
shll
push
sub
outsl
sbb
fisttps
add
pop
adc
sti
sub
xchg
out
sbb
test
test
lcall
cs
aad
add
and
call
rcrb
push
or
js
daa
xor
inc
imul
or
jo
ljmpw
xchg
test
mov
and
aas
push
repz
inc
shrb
sarl
adc
popa
shr
into
ss
cmpsb
out
imul
jno
pop
mov
rclb
imul
inc
cmp
add
cmp
nop
xor
in
int3
sarl
dec
mov
jno
or
arpl
push
pop
pop
or
xchg
sub
inc
mov
stos
mov
mov
and
mov
sub
jecxz
sub
and
lret
push
cmp
push
dec
mov
inc
incl
loopne
or
mov
mov
ds
mov
pusha
push
jle
loope
push
add
pop
dec
outsb
fcmovnbe
loopew
mov
jecxz
sub
cmpsb
insl
push
and
imul
dec
jb
push
mov
adc
enter
pop
add
cmp
cmpl
ret
pop
or
and
lods
push
loope
add
add
add
xchg
seta
pop
jg
loopne
out
insl
into
ficompl
adc
mov
add
mov
lea
stos
or
mov
lods
sub
xchg
sub
subl
push
dec
adc
xchg
mov
into
insl
cs
in
outsl
movsl
loopne
sub
das
inc
mov
ret
shrl
daa
fwait
lahf
cmp
cmp
lods
sub
pop
outsl
scas
iret
jmp
cmp
push
and
movsb
fimuls
stos
sub
into
adc
daa
sub
or
xlat
dec
push
and
ss
sbb
sub
rcll
mov
loopne
xor
jle
andl
out
and
loopne
mov
notl
xchg
dec
sub
std
xchg
xchg
or
cmp
jae
adc
mov
lcall
lock
andb
dec
sub
xor
cmp
jmp
imul
stos
aam
xchg
pop
or
inc
pop
test
mov
push
jnp
cmpb
cld
mov
lds
cmp
jmp
mov
lea
dec
cmp
int
ja
lods
mov
adc
test
lcall
xorb
add
enter
mov
lret
cs
mov
int
mov
xchg
pop
inc
sub
xchg
outsl
daa
or
dec
popa
adc
outsl
arpl
nop
mov
dec
xor
jne
pop
xchg
add
dec
pop
inc
mov
adcb
sub
call
int
sbb
mov
xor
dec
loopne
nop
mov
xchg
mov
add
rcll
mov
push
add
xchg
in
sub
mov
mov
stos
jbe
and
les
aam
mov
xchg
stos
int
in
add
dec
gs
mov
test
lret
mov
insb
xor
popf
ret
sub
lea
add
adc
aam
popf
ja
push
jno
pop
sub
add
sti
cltd
mov
jmp
out
shrb
pop
add
aaa
rorb
dec
mov
enter
or
call
into
sub
add
add
sti
shr
sub
jle,pn
lds
sahf
xorps
dec
dec
pop
test
jo
lea
out
push
and
xor
and
inc
dec
fiaddl
jmp
cmp
xor
mov
aam
pop
or
cmp
lods
adc
out
test
pop
ret
dec
test
mov
mov
or
adc
pop
test
or
add
inc
fsubr
dec
inc
or
mov
add
mulb
cmp
and
mov
int3
mov
and
sbb
or
and
rclb
sub
jmp
pop
push
mov
push
pop
xor
push
push
in
add
sbb
fnstcw
cmp
test
xor
outsb
imul
dec
sub
cmp
std
pop
out
daa
jo
jne
dec
dec
sub
jecxz
int
mov
push
mov
jecxz
sbb
xor
cmpsb
lcall
jo
pop
xor
enter
das
xor
xor
ret
fldcw
mov
fwait
in
pop
inc
jl
test
int3
dec
push
adc
dec
daa
lret
loope
xor
call
fsubrs
add
rcrl
dec
cltd
sub
cmp
imul
sbb
add
xchg
adc
push
pop
pop
cmp
fstpt
or
and
bound
mov
cmp
xchg
xchg
push
or
push
inc
fiaddl
pop
inc
mov
mov
or
xor
shlb
cli
scas
hlt
popf
dec
stos
mov
int3
in
jecxz
dec
clc
dec
jecxz
and
in
xchg
mov
test
stos
xor
push
sub
sub
loop
and
testb
subl
out
or
fcoml
dec
cmp
stc
out
cmpsb
sub
mov
cmp
arpl
xchg
cmp
cmp
je
loop
ds
xlat
or
sub
xor
xchg
lret
pop
inc
test
jae
inc
inc
add
fwait
sub
rclb
cld
jl
inc
pop
cmpsl
in
ljmp
mov
xchg
out
mov
inc
rcrl
or
jmp
cmc
std
jo
daa
push
test
pop
decl
add
or
adc
push
mov
pop
movsb
addb
pop
fcmovb
roll
dec
sti
in
outsb
ds
gs
or
lods
jb
add
insb
sub
inc
add
fildl
mov
add
sub
fcoms
cmpsb
sub
lret
aam
dec
pop
int3
mov
mov
and
lds
in
add
out
pop
mov
movsb
cmpsl
pop
jge
movb
cltd
daa
adc
ja
in
cmpl
sub
mov
push
mov
int
clc
pop
xchg
imul
sub
jbe
loopne
cltd
and
dec
or
sub
dec
sub
leave
lods
mov
enter
lret
int
add
dec
sub
xchg
adc
adc
insb
ret
mov
adcb
xor
xchg
dec
push
sub
rcr
mov
fadd
sbb
push
sub
out
jge
dec
shl
dec
xor
jecxz
pushf
subb
insb
in
movsl
iret
xlat
mov
jecxz
pop
push
xchg
sbb
aas
std
shl
push
and
loopne
or
jle
int3
jno
icebp
test
dec
inc
gs
clc
int3
mov
in
add
dec
aaa
cltd
pop
sub
daa
shll
cmp
mov
fcmovbe
arpl
cmpsb
into
and
movsl
add
fsubr
pop
cmp
int
or
sbb
aam
adc
mov
cmp
lea
cmp
mov
dec
rcrl
in
and
leave
sub
jns
and
xor
or
adc
jmp
mov
call
mov
sub
xchg
fwait
bound
test
add
in
lahf
mov
roll
xchg
lcall
mov
insb
cmp
jecxz
loop
fwait
and
adcb
xchg
jle
jecxz
cmp
adc
or
in
stos
jg
test
arpl
dec
or
push
lods
dec
and
xor
out
jo
imull
daa
cmpsl
sarl
add
mov
xor
aaa
cmp
int
push
lret
outsl
mov
xor
jo
enter
inc
mov
xor
cs
sub
mov
mov
imul
sub
push
cld
dec
fstpt
add
or
dec
or
inc
loop
fcmovnu
sub
jmp
and
ljmp
pop
shrb
std
iret
lcall
or
push
jecxz
sub
lds
in
push
cmpsb
or
mov
sbb
test
loope
ja
ljmp
cmp
dec
out
daa
xchg
aam
test
push
pop
sbb
sub
shr
and
pop
cld
jmp
sbb
or
push
sti
pop
mov
ljmp
ret
or
jl
or
ja
push
ljmp
add
popa
cmp
add
leave
lcall
sub
cs
dec
lcall
mov
adc
inc
cli
jno
popf
xchg
mov
dec
test
out
sbb
out
cmp
push
jge
sub
pop
push
sub
test
jp,pn
xor
inc
aad
mov
push
pop
sub
and
xor
rclb
dec
pop
ficoms
pop
push
sub
push
in
jl
mov
mov
add
sbb
inc
pop
add
and
cmp
fcomp
pop
pop
add
or
ss
inc
bound
sti
xchg
pop
cltd
shll
bound
loopne
jl
dec
add
mov
adc
push
push
imul
imul
jnp
in
stc
js
cltd
mov
cmpsb
sub
sub
sub
mov
xchg
dec
cmp
dec
cltd
or
cmpsl
cs
push
dec
jae
mov
cmpsl
mov
lods
and
sub
out
jl
int
mov
xlat
test
fisubrl
adc
xlat
dec
push
inc
sub
cmp
lock
xchg
or
mov
ucomiss
and
push
sub
sub
outsl
cltd
in
sbb
mov
out
and
lods
or
dec
or
pop
inc
sub
int3
fs
adc
cmpsl
cmpsb
inc
aam
insl
popf
pusha
and
imul
cli
lret
push
pop
jno
add
fwait
outsb
xor
test
mov
scas
mov
lods
ja
into
add
int3
movsb
sub
adc
push
in
jnp
outsb
repz
loop
sub
je
pop
movsb
mov
gs
add
jmp
sub
mov
xchg
cmp
inc
push
dec
in
mov
or
sub
fdiv
mov
fistps
jmp
sub
and
jge
sub
mul
sahf
sub
inc
test
fsubrs
adc
ret
or
add
jb
dec
pop
jne
rcrl
xchg
test
pop
pusha
popf
mov
cmc
shrb
or
test
arpl
insb
ret
addl
push
sub
fs
push
cmp
or
inc
mov
add
mov
push
or
hlt
mov
pop
dec
and
mov
cmpsl
xchg
sub
in
daa
mov
add
cmp
outsb
lods
ret
rcl
jecxz
int3
sbb
andl
lds
dec
and
pop
sub
lcall
or
push
adc
inc
and
jecxz
and
mov
clc
test
sahf
out
out
dec
rcrb
jo
mov
push
cmp
lret
jno
and
mov
mov
lcall
test
out
int3
popf
fisttps
dec
jg
test
sub
gs
mov
mov
inc
cld
xor
inc
sbb
les
mov
lods
sub
gs
jno
popl
inc
xchg
push
and
and
jmp
lds
mov
call
shl
dec
push
out
pop
aaa
pop
enter
fcmovnb
cld
out
in
or
and
dec
out
sbb
loop
sub
cmp
mov
roll
lret
dec
dec
pop
mull
and
add
pop
cmp
imul
or
mov
call
jno
scas
outsl
nop
jp
or
xor
jmp
idiv
push
cmpsl
xchg
cmp
mov
and
scas
mov
hlt
push
dec
mov
add
mov
cmp
mov
scas
mov
dec
mov
orb
cli
sbb
fwait
popa
ret
and
inc
mov
out
add
pop
push
enter
inc
and
or
test
and
loope
out
mov
cmp
sti
mov
add
in
fs
addr16
dec
dec
fxch
jmp
mov
bound
mov
push
call
inc
out
fdivl
gs
lret
iret
mov
cmpl
sti
ja
in
dec
mov
push
sbb
or
sbb
inc
inc
mov
and
mov
test
or
dec
repnz
mov
loopne
mov
pop
jb
dec
pop
lret
mov
out
pop
mov
lock
cmp
lcall
mov
int
sarl
mov
jne
in
fisttpll
cmc
out
push
push
sub
scas
cmp
in
mov
aam
sbb
int
add
inc
adc
or
lock
je
insb
sub
scas
cmp
add
pop
push
arpl
inc
sahf
mov
arpl
xchg
lahf
ljmp
int
inc
adc
cmp
das
xchg
fsubr
or
iret
push
inc
or
jne
xchg
ja
dec
push
pop
and
neg
mov
fcoml
das
sahf
dec
cs
shrl
addr16
push
mov
dec
scas
aad
loope
data16
out
cmpsb
lea
mov
test
inc
xlat
out
ds
adc
outsb
cmpsb
dec
add
push
inc
scas
arpl
test
mov
inc
pop
dec
stos
mov
or
outsb
push
arpl
add
lock
in
adcl
fidivl
sar
dec
mov
sub
cmp
and
mov
or
pop
lods
sub
aas
sub
scas
or
lods
dec
fsubrl
out
fisttpl
lods
add
pop
mov
dec
push
dec
sub
xchg
cmp
sub
enter
xor
dec
xchg
iret
xchg
ljmp
call
push
cli
jecxz
filds
aas
and
push
jle
mov
xchg
leave
jmp
call
in
dec
sub
cmp
cmpsb
nop
inc
je
push
mov
sub
fisttpll
ret
fs
call
or
lods
cmp
scas
test
dec
gs
lods
rorl
cs
sbb
inc
inc
inc
orb
roll
mov
mov
mov
rorl
lods
mov
subl
mov
enter
fcmove
or
leave
cmp
cmpsb
addr16
cmp
in
int
cltd
jne
aaa
lock
loope
out
insb
ret
mov
cmpsl
adc
xchg
mov
clc
repnz
sub
push
dec
out
test
movsl
or
mov
mov
out
cmp
adc
mov
enter
pusha
int
testl
shrl
inc
and
jnp
arpl
and
pop
cmp
or
ds
sbb
int
mov
fwait
mov
out
cmp
andl
aam
mov
into
or
pop
inc
fucomi
test
inc
mov
cli
aas
out
out
cli
daa
pop
int3
cmp
inc
sub
mov
arpl
cmpsl
cmp
xor
cs
popf
out
jbe
dec
jecxz
xor
leave
icebp
push
in
test
pusha
and
sti
dec
xlat
dec
in
les
sarb
sub
nop
mov
in
cmp
lods
stos
data16
js
and
repz
mov
lds
pop
je
enter
dec
push
sbb
pop
and
dec
fs
enter
mov
bound
inc
mov
cmp
ja
dec
mov
mov
sbb
enter
xchg
je
dec
mov
les
and
stc
js
or
add
mov
adc
jne
mov
xchg
out
iret
and
shlb
call
inc
inc
adc
and
jns
mov
adc
inc
dec
outsb
inc
mov
mov
adcb
aaa
lods
mov
add
lock
push
dec
inc
cli
xchg
inc
mov
xorb
scas
in
jno
push
jp
out
lret
cmp
dec
hlt
jbe
ljmp
cmpsl
jne
push
mov
push
inc
enter
xor
int
cs
pop
in
mov
int3
cmpsl
enter
mov
cmpsb
pop
in
call
cmp
addr16
call
jne
shr
loopne
mov
dec
lea
bts
lods
mov
fldt
add
add
aad
mov
arpl
push
xchg
push
ret
mov
lods
push
dec
mov
repnz
inc
incb
pop
jne
jbe
sub
pop
test
mov
jmp
mov
jmp
dec
sti
xchg
pop
mov
pop
add
adc
in
adc
push
sarl
and
test
mov
sub
dec
sbb
cmpsl
aad
dec
in
or
sti
jo
lea
fstl
jp
pop
xchg
dec
fnstcw
cmpsl
out
mov
jbe
ss
fidivrs
xchg
or
sub
and
pop
add
mov
pop
mov
adc
jp
ljmp
popf
pop
es
lret
jmp
inc
int3
push
or
sub
inc
sahf
popf
lret
and
dec
sahf
icebp
xchg
out
sarl
xor
sbb
addr16
xor
dec
xchg
and
pop
xor
jbe
sarl
or
mov
push
dec
mov
jg
xchg
push
stos
gs
leave
xchg
cmp
mov
nop
pop
outsb
inc
hlt
andl
sub
call
repz
xchg
adc
loopne
in
iret
push
mov
les
mov
mov
movsb
cmp
mov
cli
in
mov
mov
xchg
lcall
mov
or
imul
push
jp
mov
xchg
mov
mov
xchg
cli
xor
xchg
popf
lret
insl
xlat
arpl
add
mov
xchg
test
dec
inc
add
repnz
and
test
iret
jno
in
pminsw
or
in
or
dec
in
insb
mov
aas
inc
mul
push
movsb
into
leave
sub
xchg
repz
or
jmp
mov
xchg
jp
push
out
loopne
mov
jecxz
cmp
shl
lret
pop
fsubr
adc
and
add
mov
rcll
clc
pop
daa
pop
in
in
and
test
cmp
push
jo
sub
dec
cmc
push
cmpsb
sub
call
xchg
nop
or
imulb
lcall
mov
bound
es
insl
sub
gs
stos
push
adc
hlt
pushf
leave
gs
or
cmpl
fisubl
lock
add
inc
out
sub
jge
bnd
lods
sbb
inc
incb
mov
shl
jmp
fldcw
fiaddl
add
cmp
in
xor
lods
dec
fisubrl
test
cltd
sbb
inc
fsubrp
jecxz
gs
sahf
sbb
mov
mov
pusha
sarl
fwait
push
aad
or
test
push
jns
js
scas
and
insl
dec
dec
in
sub
adc
test
fldt
ret
mov
jns
xor
and
pop
inc
lods
add
cmc
adc
push
mov
add
inc
lods
jmp
arpl
fmul
or
inc
mov
test
test
push
push
test
lods
sar
fxch
add
jnp
push
cs
ljmp
push
sub
int3
pop
sub
lahf
cmp
mov
mov
push
jno
aad
mov
and
test
jbe
xor
ret
xchg
mov
hlt
pop
xchg
dec
cmp
jmp
leave
cltd
ret
mov
sub
or
xor
and
insl
xor
addr16
gs
in
pop
fldl
cmp
leave
jecxz
sub
lods
daa
pop
dec
xchg
bnd
clc
xchg
out
sbb
and
shrb
xchg
pop
cmp
inc
fmuls
pop
test
inc
add
pop
ja
shlb
in
dec
mov
adc
cmpsb
push
rorl
cmp
lret
out
push
enter
mov
xor
scas
lret
in
add
xchg
cli
add
mov
xchg
sub
sbb
enter
insb
in
fisttpl
mov
rolb
pop
ret
les
mov
xchg
dec
inc
andb
or
sbb
call
mov
sbb
leave
xchg
or
cmp
and
sbb
je
test
or
sbbl
and
mov
imulb
sub
movsl
mov
cmp
rorl
cs
sbb
adc
lods
test
mov
push
int
push
mov
sbb
ret
imul
sub
jb
aas
jne
nop
inc
arpl
stos
fs
push
fcmove
lods
push
mov
sub
dec
mov
negl
lods
decl
lret
js
mov
cmp
fdivrp
insl
and
sbbb
daa
mov
add
jge
jecxz
jecxz
mov
sub
mov
fbstp
icebp
fdivs
shrl
stos
sub
cmp
xchg
add
rol
sub
xor
into
mov
and
pop
ljmp
cmp
mov
rclb
mov
pop
sub
mov
scas
jp
add
test
xlat
jl
add
out
gs
xor
dec
jne
mov
gs
or
dec
lods
jns
imul
push
mov
out
insl
sub
dec
jne
enter
sbb
gs
or
or
lock
adc
into
adcl
popf
xchg
mov
test
adc
loopne
sub
pop
mov
sub
jg
push
xchg
loop
testb
or
jnp
inc
mov
jne
xchg
ja
jg
xchg
sub
leave
mov
push
arpl
int3
mov
jb
ret
pop
push
pop
lods
sub
fwait
stos
dec
daa
scas
mov
sub
int
jmp
mov
bound
jmp
jnp
inc
xorb
cld
and
call
mov
sub
popf
rcrb
inc
out
mov
xor
pushf
mov
or
dec
pop
cmp
notb
lods
sbb
outsb
inc
movsb
jne
imul
ret
cs
jo
int3
pop
mov
loop
pusha
bound
cmp
sbb
filds
jbe
test
je
or
cmp
sub
dec
daa
push
sarl
push
sbb
push
mov
cmp
mov
or
call
divl
push
fldt
adc
mov
scas
or
mov
cmp
into
ficomps
enter
cmpsb
les
mov
mov
and
mov
popf
imul
add
push
ret
ret
sbb
leave
lods
mov
cli
xor
clc
outsb
out
add
xor
and
jo
hlt
mov
outsl
sub
jecxz
dec
mov
dec
jne
xchg
xchg
iret
addr16
mov
call
push
mov
sub
js
enter
or
scas
mov
cmp
add
push
jne
sbb
mov
in
in
inc
ss
and
sbb
gs
mov
adc
fisubl
iret
out
fwait
and
and
cmpsl
xchg
insb
add
inc
push
hlt
dec
scas
cmp
movsl
out
pop
arpl
mov
insb
jne
jns
pop
imul
pop
loope
stos
push
xchg
sub
shl
or
movsl
sbb
int
popf
inc
imul
pop
xchg
fisttps
sub
cltd
test
xlat
mov
xor
dec
ror
inc
daa
ljmp
push
popf
mov
or
rclb
arpl
gs
dec
sub
out
or
dec
lock
push
leave
out
rcrl
fwait
mov
cmpsl
cmpsl
imul
or
push
push
pop
scas
mov
insl
addr16
cmpsb
int3
add
fidivl
sbb
mov
mov
xor
xor
inc
mov
addr16
cmp
mov
or
push
popf
imul
and
mov
out
jb
or
loop
sbb
push
aaa
mov
mov
inc
cs
imul
test
mov
mov
add
dec
jb
dec
leave
mov
call
lahf
dec
ror
cmpsl
out
ljmp
mov
add
push
jl
or
lret
xor
lods
inc
xchg
ret
int
mov
mov
lea
fwait
xlat
in
mov
push
test
lahf
dec
ds
mov
add
and
arpl
sub
cmp
popa
out
cs
adcl
movsl
ljmp
int
into
fsubrl
mov
dec
add
sarb
or
out
cmp
lahf
mov
xchg
push
in
dec
mov
add
xchg
lods
movl
test
push
jecxz
cltd
adc
inc
push
in
in
sbb
mov
out
xchg
cmpsb
push
in
or
add
jae
push
sub
ret
test
movsl
rcl
mov
lret
xchg
push
or
sub
push
mov
fnstsw
scas
add
cmp
xor
test
fmuls
push
pop
dec
lret
aas
dec
mov
xchg
pop
xchg
dec
popf
aad
mov
pop
mov
push
dec
push
scas
js
add
insb
dec
ret
and
xor
mov
shrl
into
and
daa
xorl
adc
fidivs
imul
je
mov
inc
and
leave
xlat
cmp
insl
in
xchg
and
arpl
xchg
lods
cmp
leave
sub
xchg
out
sub
lods
lock
cmp
pop
mov
dec
sub
imul
test
inc
aaa
add
stos
mov
jp
cmp
and
dec
fmull
sub
jns
popf
xchg
rorl
lods
or
or
rorl
aad
jecxz
rcrb
add
jmp
lea
and
sub
mov
mov
jno
sahf
xor
mov
out
xor
sbb
push
dec
push
mov
add
jmp
fildll
aaa
fmul
iret
in
mov
loope
sarb
sub
xchg
ds
jecxz
sub
idivl
pusha
mov
daa
lods
loop
mov
in
add
dec
mov
stos
out
shrb
jle
pop
add
int
or
insl
fbld
lea
mov
push
outsb
xchg
lds
jo
int
and
xchg
mov
insl
out
or
cld
mov
mov
sub
repnz
jmp
inc
test
sub
cmpsb
fadd
push
insb
mov
andl
test
pop
pop
bnd
in
push
jne
push
xor
mov
mov
gs
lahf
pop
sar
pop
stos
xor
out
call
and
add
in
cmp
fnstsw
test
add
lret
ljmp
stos
cmp
and
test
adc
ret
cmpl
mov
or
dec
call
sub
xchg
pop
xor
inc
sub
dec
frstor
and
out
out
ficoms
mov
mov
mov
jmp
inc
popa
stc
push
test
scas
jnp
loope
enter
mull
push
cmp
sbb
adc
dec
je
inc
jnp
insb
cmc
mov
not
dec
and
inc
mov
movsl
mov
pop
ss
sub
sub
sub
push
loop
inc
xorb
cli
aam
int
xlat
addr16
daa
bound
cmpsb
inc
sub
data16
mov
or
loop
in
sub
add
pop
mov
pop
sub
jnp
or
sub
outsb
mov
jns
lret
adc
daa
stc
ljmp
xor
add
push
xor
push
jne
jle
lret
test
dec
and
lods
and
xlat
cmp
xchg
imul
int
and
out
inc
leave
rorb
lods
fisubrl
xchg
cmpsb
dec
lock
int
mov
push
xchg
cld
or
lods
and
xor
xchg
push
lods
jmp
add
shlb
jge
iret
mov
cmc
outsl
popf
and
mov
fidivs
mov
mov
addr16
call
testl
lods
loopne
xchg
in
sbb
mov
leave
in
xchg
cmp
mov
out
test
mov
in
inc
lea
mov
or
mov
add
aad
push
jle
enter
mov
cmp
daa
or
xchg
xchg
inc
mov
cmp
in
mov
push
or
popa
sub
xor
insb
and
inc
sbb
mov
xor
and
std
fistpll
mov
outsb
inc
daa
into
and
xlat
pop
lods
inc
or
ret
rclb
mov
push
hlt
xor
lods
cmp
cltd
out
or
aas
outsb
scas
and
iret
icebp
arpl
cmp
cmp
bound
sti
daa
push
shr
cmp
mov
dec
popf
jg
or
out
mov
dec
push
jb
cli
out
or
lea
fistpl
sub
and
xor
sub
lea
push
sbb
pop
inc
cmp
mov
or
pop
lret
add
push
mov
xor
sbb
jp
dec
sub
add
insb
inc
int3
add
sahf
pusha
sub
rcrb
jmp
mov
dec
out
daa
or
sub
or
call
add
fwait
enter
mov
xchg
pop
or
subb
insl
cmp
and
sub
lods
inc
adc
out
mov
dec
daa
add
cvttps2pi
cmp
pop
jno
or
push
scas
mov
dec
out
xor
sti
pop
cmp
shlb
cmp
push
clc
push
popf
enter
dec
out
xchg
outsb
cmpl
mov
cmpsl
stos
and
cmp
xor
psubsb
dec
sub
mov
cmp
xchg
ret
add
dec
addr16
dec
dec
jg
fwait
imul
out
jmp
xchg
pop
dec
pop
inc
jge
lods
inc
insl
mov
gs
sub
mov
lret
sarb
lds
mov
fldcw
int
jge
mov
add
loope
mov
out
jb
enter
jo
jle
inc
adcb
xchg
add
fisttpl
inc
mov
loop
push
movsb
popf
es
pop
cs
cmp
ja
mov
aas
push
fidivs
push
add
mov
out
mov
inc
shr
int
iret
loopne
dec
mov
and
lcall
cmpsb
rol
test
outsb
sub
mov
sti
pop
dec
cmpsl
mov
loope
pop
enter
adc
fwait
outsb
sub
fisttpll
or
shl
gs
test
stos
sbbb
test
mov
or
lahf
lods
fcos
xor
ja
in
cmpsb
into
and
cld
xor
xchg
mov
outsb
mov
cld
mov
mov
je
ljmp
mov
cmp
std
lahf
out
arpl
dec
or
pop
scas
xchg
push
cmp
cs
jmp
mov
pop
dec
and
shll
movsb
dec
subb
jp
outsb
fisubrl
dec
pop
cmc
jne
push
cmpb
leave
mov
ret
push
ja
xchg
mov
or
mov
or
jno
pusha
lret
in
enter
xor
or
ret
call
mov
int3
nop
arpl
jle
in
mov
adc
or
jp
scas
and
dec
lcall
sub
sub
adc
cltd
call
sub
jne
ja
ficomps
sbb
sub
xchg
gs
mov
fsub
lods
add
mov
ret
arpl
outsl
data16
addr16
jecxz
popf
or
adc
dec
or
pop
pop
push
dec
mov
pop
fsubrs
pop
push
mov
mov
stos
sbb
nop
cmp
call
ljmp
add
push
fisubrs
cltd
push
ror
test
popa
ror
and
cltd
lods
add
test
pop
cmpsb
jo
dec
nop
fcmovb
daa
psllq
dec
and
add
or
or
bound
jle
mov
sub
xchg
inc
mov
dec
ds
add
or
mov
std
pop
dec
mov
es
inc
pminub
lcall
sub
jo
out
add
pop
cmp
mul
ja
popf
clc
jb
test
rcrl
je
and
fsubr
mov
pop
mov
push
and
mov
mov
pop
push
in
mov
xchg
push
push
dec
push
mov
fs
dec
sub
stos
pop
test
outsb
daa
adc
or
xlat
js
dec
pop
lds
out
jg
push
and
cltd
lods
xor
mov
push
stos
sub
or
mov
dec
and
sbb
pop
push
xchg
mov
shlb
gs
mov
ret
ret
std
ja
clc
mov
fcmovne
xor
imul
insb
inc
sub
iret
out
lods
inc
sub
adc
notl
lock
mov
or
outsb
gs
dec
xchg
mov
dec
int
js
lea
add
in
cmp
mov
inc
mov
inc
dec
icebp
mov
and
into
jb
inc
repz
mov
jg
int
outsl
stc
shrb
jne
cmp
xchg
pop
int
lock
orl
outsb
ss
mov
int
cmpsl
add
sub
dec
sub
into
shll
xchg
ret
test
jb
push
stos
pop
into
mov
mov
xor
cmp
enter
or
or
fdivrs
icebp
or
insb
xchg
pop
addr16
repnz
mov
rorb
add
dec
cli
jmp
push
ja
mov
gs
rorl
gs
inc
dec
inc
dec
cmp
iret
jns
dec
and
cmpsl
lcall
mov
je
leave
lea
adc
dec
fimuls
mov
iret
or
scas
xor
and
cmp
sub
insl
sub
add
push
ret
jge
pop
test
cmpsb
setae
push
push
mul
push
dec
fwait
in
sti
cltd
add
jecxz
cmp
adc
iret
pop
mov
sub
imul
imul
xchg
and
ret
sub
cmp
orl
lods
xor
cmc
or
xor
shl
jmp
push
adcl
inc
or
test
mov
xchg
fs
rorl
xor
mov
imul
xchg
push
push
aas
cmpsb
icebp
rcll
js
push
xor
ljmp
mov
mov
decb
pop
add
ret
mov
push
xor
add
call
pop
xchg
or
stos
fwait
mov
inc
lea
pop
or
jb
push
fs
mov
inc
rcr
shl
sub
sbb
xor
mov
subb
push
mov
mov
sbb
mov
mov
mulb
fwait
push
in
lods
subl
sti
and
fstps
push
movsb
push
dec
sub
lock
int
sbbl
sub
sarl
and
stos
lahf
orl
daa
xor
out
out
pushf
test
push
test
stos
cmp
repz
loope
fildll
xlat
int3
daa
out
mov
xlat
js
jmp
das
out
mov
pop
test
sar
lahf
xchg
xchg
test
mov
out
sub
add
push
scas
jp
mov
and
loope
js
imul
sub
xlat
push
mov
lea
imul
negl
sub
mov
clc
arpl
sbb
addr16
mov
or
int
inc
adc
xlat
or
sub
jecxz
enter
in
lods
inc
sub
pop
cmc
sub
or
leave
sub
out
push
lods
lods
ljmp
inc
icebp
mov
xchg
xor
push
arpl
rolb
mov
gs
and
scas
sub
imul
add
cmp
enter
fisubl
scas
cmp
sub
xchg
mov
xchg
insb
into
cmp
into
dec
test
inc
insl
ds
mov
and
mov
cmpl
out
sbb
xor
push
or
push
sub
dec
test
push
mov
and
das
sbbl
jbe
or
outsl
fs
shrl
loope
fidivrl
mov
push
repz
dec
mov
push
xor
cmp
idivb
add
adc
movsb
xchg
jcxz,pn
jmp
mov
dec
add
push
push
dec
sub
gs
and
cmp
mov
inc
call
fadds
lahf
mov
push
inc
xchg
cs
fwait
and
cmp
xchg
sti
mov
xchg
xchg
in
fildl
adc
or
jecxz
lods
or
lret
or
push
mov
dec
and
sub
daa
sub
add
iret
mov
add
mov
cmpsl
js
stc
inc
sub
cs
das
popf
pop
rcr
push
ss
and
repnz
ret
mov
gs
lret
xor
dec
into
imul
mov
outsb
adc
cmp
out
xlat
mov
mov
mov
push
stos
sahf
out
mov
mov
stos
and
fsubr
push
push
pusha
jae
xor
test
lock
fimuls
mov
adc
daa
call
mov
cmp
imul
add
mov
or
mov
push
sub
test
enter
in
or
inc
ror
ret
icebp
lock
add
mov
lahf
insb
or
das
sub
pop
or
sub
insl
stos
shll
and
hlt
in
jmp
add
inc
cmp
xor
pop
jmp
in
pop
dec
jne
int3
mov
ljmp
test
mov
adc
fdivrs
mov
enter
sahf
in
inc
pop
add
ja
rorb
add
dec
add
inc
sub
outsl
pop
clc
sub
shll
push
fwait
cmp
dec
pop
sub
and
cmp
add
out
cmp
cli
xchg
jg
lea
jae
and
mov
rcrb
xchg
or
inc
xchg
push
lret
sbb
mov
push
and
nop
jge
jp
inc
push
fisttpll
cmp
aam
jbe
inc
scas
sti
sbb
sbb
daa
sub
jg
lock
or
fcmovnu
jecxz
jmp
sub
dec
out
das
mov
lock
jo
dec
popf
outsl
push
rolb
sbb
jnp
dec
mov
sahf
test
sub
daa
mov
sub
jp
insl
dec
out
mov
dec
sbb
call
mov
push
or
imul
aaa
shrb
jge
dec
outsb
stos
jl
out
insb
or
loope
shrl
fs
jno
mov
dec
incl
aaa
or
outsb
ret
test
mov
push
sbb
and
daa
push
scas
add
jae
or
add
mov
in
or
rcrl
inc
sub
push
mov
fcmovnu
xor
and
xchg
mov
sub
xor
fsubrl
hlt
dec
add
into
sarl
popa
push
in
sbbb
mov
adc
outsl
divb
test
cmp
or
fs
int3
sbb
add
pop
sub
or
inc
mov
mov
mov
stos
xlat
arpl
scas
movsl
dec
or
sub
lods
cmp
inc
sti
cmpsb
or
cmc
shrl
cs
push
adc
cli
push
insb
xchg
jle
pop
xchg
into
lods
test
in
popa
add
cmp
aad
inc
jbe
dec
push
adc
or
and
pop
or
dec
out
aas
or
adc
fdivrs
es
mov
mov
ja
pop
daa
pop
jb
testl
and
pop
inc
fimuls
out
cs
jp
insb
sbb
pop
cmp
shrl
dec
cmp
mov
sub
or
aas
mov
lods
jo
test
addr16
cld
or
leave
jmp
insb
xchg
mov
in
and
cmp
cmp
pop
mov
mov
add
jmp
dec
in
xchg
push
mov
cmpsb
subl
ds
lret
lods
cli
iret
xor
xchg
and
xchg
jl
int
push
ja
gs
mov
ret
cmp
icebp
stos
or
sub
mov
sub
cmp
xchg
push
lret
out
mov
sub
cmpsl
add
cmpl
cmc
leave
dec
cs
fcompl
aaa
pushf
stc
cmp
xchg
push
orl
add
push
imul
int
outsl
decb
and
ret
test
data16
cmp
lods
mov
aam
lret
jp
hlt
jno
mov
dec
lock
push
or
dec
and
push
xor
sub
dec
daa
stos
push
imul
cmpsb
fucomi
test
rorl
jecxz
andl
push
mov
out
fs
outsb
mov
inc
das
pusha
lret
lock
shll
adc
inc
mov
dec
mov
movsl
adc
cmp
lahf
stos
sub
pusha
cmp
sub
stos
mov
and
dec
test
out
and
lcall
cli
or
xchg
sub
or
jle
outsb
and
scas
ss
inc
outsl
les
and
push
iretw
mov
mov
out
adc
mov
inc
cli
xchg
aam
add
cmp
fsubrp
fwait
arpl
ds
mov
andb
mov
inc
loop
sub
rcrb
scas
loope
adc
dec
popa
les
scas
xlat
adc
aas
push
or
sub
ficomps
push
subb
in
mov
cmpl
mov
call
sbb
mov
ret
fidivrs
imul
or
out
xor
dec
mov
fisttps
mov
cmp
cmp
pop
cs
fdivrl
mov
mov
jne
movsl
popa
or
sub
mov
shl
arpl
jne
jecxz
pop
into
leave
cs
adc
add
and
jmp
in
xchg
repz
mov
and
xor
fbld
fstpt
dec
jb
sub
sub
jmp
pop
or
fs
sub
sbb
aas
xchg
arpl
inc
insl
stos
mov
dec
into
dec
jg
stc
aas
inc
enter
push
xchg
or
ret
outsb
inc
das
fdivrs
cmpsl
gs
sbb
cmp
pop
push
xchg
cwtl
push
in
test
add
adc
adc
fsubr
jle
jae
ljmp
std
jne
lcall
insl
rorb
addl
mov
out
sub
jmp
lods
enter
sbb
ret
mov
push
push
insb
popfw
sar
arpl
pop
gs
pop
test
call
jns
dec
addr16
pop
xor
or
sub
addr16
jl
add
outsb
xor
divb
clc
imul
jns
mov
jb
push
test
jne
lods
and
clc
lock
cmpsl
dec
inc
sub
push
jg
push
ss
pusha
dec
dec
lea
stc
or
clc
cmp
aam
pop
adc
fisubrs
sti
lods
stos
ficomps
in
in
notl
xor
and
pop
mov
jo
into
insl
rcrl
addr16
jb
cmp
pop
andl
rol
ret
ss
cmp
cltd
mov
mov
and
fisttpll
xor
test
in
outsb
ds
cli
mov
adc
out
and
fdivl
shlb
insb
dec
arpl
xor
daa
bound
in
and
adc
hlt
pop
lods
int
fwait
and
inc
adc
push
adc
or
jmp
mov
sub
add
or
pop
jne
ljmp
inc
mov
test
xchg
popf
jle
pop
sbb
ljmp
mov
addl
or
lock
cs
dec
inc
push
pop
gs
add
xorb
inc
pop
lods
xor
mov
add
cmp
add
out
pop
jne
ret
and
lcall
cmpsl
inc
out
lret
jge
dec
sti
jne
test
ss
jae
mov
fldcw
leave
rolb
or
stos
pop
mov
mov
push
pop
sarl
jg
sub
cmp
jno
xchg
lods
in
and
in
jo
jg
dec
popa
cmpb
or
push
js
outsb
fimuls
pop
arpl
dec
inc
in
arpl
inc
fs
out
loop
sub
or
sbb
into
jl
sub
js
fisubrl
adc
and
test
jge
ss
cmp
sub
test
out
cmp
or
and
test
movsl
int3
aam
sub
xchg
or
xchg
xchg
dec
jmp
sbb
jae
and
jmp
dec
jecxz
push
and
fnstsw
inc
cld
dec
dec
sub
andb
insl
add
or
mov
cmp
mov
testb
xor
cmp
lret
lea
mov
jmp
or
push
orl
cmp
mov
popa
out
or
mov
cli
mov
cli
xchg
mov
mov
sbb
and
add
cs
or
stos
add
insl
and
and
jl
ljmp
mov
outsb
adc
out
dec
cs
adc
mov
or
imul
mov
scas
jecxz
or
lods
sub
fimuls
mov
mov
adcb
gs
iret
mov
in
sub
andl
sub
mov
cmp
lret
xorl
test
cli
fsts
in
sub
sub
cs
mov
ret
pop
mov
fld
inc
sub
in
dec
jg
mov
mov
and
mov
push
inc
test
xchg
test
push
mov
test
mov
xchg
push
cld
mov
xchg
lods
sub
xchg
gs
insl
fcoms
stos
jb,pn
inc
hlt
xchg
stc
mov
inc
in
dec
pop
mov
or
outsb
sub
mov
insb
and
or
inc
mov
add
cmp
or
cltd
adc
popf
daa
add
int
add
popa
adc
inc
add
lods
mov
sbb
in
mov
pop
arpl
lcall
fdivrs
mov
ljmp
out
mov
mov
push
inc
call
jne
out
pop
jb
cmpsl
pop
imul
lock
test
arpl
and
sahf
stos
pop
cs
jecxz
test
jmp
sub
loop
sub
pop
xor
add
sub
loop
rclb
cli
xchg
out
xlat
xor
mov
fsubl
ret
arpl
ja
mov
out
repnz
gs
int
jl
mov
cmp
test
pop
scas
int3
mov
jae
popf
mov
movsb
mov
jno
int
outsl
mov
loop
clc
cmp
pop
pop
popf
sbb
je
clc
lret
mov
cld
shrb
dec
aad
cmp
scas
push
sub
jl
cltd
or
or
or
aam
sub
inc
pop
movsb
push
cmp
cld
cmp
mov
push
aam
mov
mov
jo
lods
out
mov
sub
dec
popf
mov
pop
mov
sub
dec
shll
add
push
mov
pop
cmpsb
cmc
or
inc
insl
or
sub
mov
rorl
jne
adc
or
push
ret
popa
dec
mov
sub
mov
daa
or
xchg
jo
add
mov
or
stc
fmuls
xor
sub
aaa
je
cmp
pop
lahf
xor
jl
mov
cmp
jmp
and
shrl
lock
cmpsb
and
dec
and
xchg
subl
cmpsb
int
jno
inc
pop
cmp
imul
push
stos
out
ja,pn
ljmp
jb
sub
cmpsb
lods
cs
dec
cmp
out
lock
or
push
xchg
fisubs
jmp
dec
addr16
xor
push
scas
sahf
mov
and
inc
lock
push
mov
jbe
pop
pop
cmpsl
cmp
outsl
scas
pop
ret
aaa
mov
into
dec
cs
sub
mov
inc
mov
insl
pop
mov
jg
mov
pop
dec
mov
out
sbb
dec
mov
add
jb
mov
test
push
jne
pop
or
add
pop
jmp
sbb
into
pop
call
jl
or
push
stos
and
jo
test
out
push
cmp
movsl
adc
mov
dec
jo
aam
lcall
arpl
cmpsb
int
cmp
cli
inc
fld
adc
dec
xor
sahf
add
sub
jp
fucomp
popf
adc
sahf
mov
out
or
in
clc
dec
test
dec
call
mov
fwait
mov
loopne
sub
fwait
popa
cs
and
lds
pop
pop
jecxz
popf
fstps
ret
fmulp
mov
pop
test
outsl
jg
int3
mov
call
out
neg
mov
imul
mov
mov
lds
mov
lret
xchg
inc
mov
ret
push
xchg
mov
and
int
jl
inc
sub
mov
into
sub
shlb
int3
pop
js
mov
lock
and
std
in
jecxz
insl
cmp
and
shl
inc
lcall
loope
mov
jne
sub
push
xor
push
sbb
idivl
lods
push
cmp
int
pusha
cli
xchg
fucomip
and
je
mov
inc
subl
mov
jmp
addr16
daa
insb
lods
mov
push
test
sbb
mov
add
addr16
aam
dec
sbb
test
pop
mov
repnz
lods
jae
scas
in
ja
mov
jecxz
loope
push
popf
mov
int
or
xchg
clc
cmp
adc
je
stos
scas
jmp
arpl
sbb
je
in
or
add
mov
popf
mov
jbe
mov
mov
out
imul
int3
pop
jne
int3
xchg
mov
jno
cmp
sub
mov
iret
adcb
scas
sub
or
popa
rcll
pop
dec
push
push
rcrb
dec
das
in
adc
sub
add
gs
decl
in
pop
cs
rolb
xor
and
test
mov
xchg
jge
sub
and
fsubrs
mov
gs
adc
mov
test
and
adc
insb
sub
sarb
lea
es
sub
adc
xchg
xchg
in
push
xor
xchg
enter
inc
jg
jae
pop
stos
cmp
inc
push
pop
daa
mov
push
cs
push
ja
add
lock
ret
arpl
mov
mov
es
mov
movsl
xchg
lret
mov
add
xor
jecxz
adc
or
jmp
mov
movsl
ja
sub
jbe
mov
mov
ret
mov
call
mov
loope
jl
js
jecxz
repz
dec
cmp
stos
decb
xor
fnstenv
and
sbbb
cmp
mov
jmp
or
in
cmpsb
jecxz
xchg
jbe
mov
add
jnp
mov
bnd
or
jb
int
aam
jo
in
jo
sub
imul
iret
cmp
popa
and
iret
out
pop
dec
mov
xor
push
stos
addr16
jne
or
icebp
cli
dec
add
pop
xchg
add
into
lret
jmp
test
xor
je
int3
mov
sarb
lods
dec
jecxz
lahf
lods
cltd
jl
out
daa
into
les
call
in
scas
sbb
int
mov
lods
inc
cmpl
cmp
iret
or
add
imul
repz
cmp
push
in
out
jmp
jecxz
sub
out
pop
inc
test
in
push
sub
enter
jp
inc
cmpsl
cmp
lock
dec
mov
mov
lret
leave
xlat
sub
mov
sub
sbb
sub
or
jns
loope
inc
jp
and
xchg
mov
mov
push
je
lods
lods
pop
sub
mov
xchg
in
inc
int
jne
imul
int3
and
divl
push
sti
and
fmul
or
scas
pop
sbb
sbb
adc
js
scas
fsubr
std
mov
adc
loop
ljmp
adc
lea
sbb
nop
pop
dec
inc
je
js
dec
and
jbe
dec
fiaddl
inc
rcll
in
js
cld
ja
fiaddl
sub
in
les
pop
or
sti
outsb
jg
call
push
xor
mov
mov
lret
fisubrl
mov
sub
aam
cmpsl
mov
cmp
xchg
jmp
fs
sub
or
out
shrb
adc
inc
inc
mov
loop
add
dec
push
adc
dec
sub
mov
fbld
lret
daa
rcr
push
pusha
or
sub
and
push
insb
data16
sbb
sub
inc
inc
insb
cmp
xchg
leave
sub
mov
mov
icebp
leave
call
addr16
xor
and
or
mov
mov
int
imul
or
enter
push
mov
shlb
in
mov
imul
stc
jb
inc
rcll
dec
inc
sarb
jne
push
sbb
in
sub
ret
mov
mov
sbb
dec
out
push
mov
test
divb
pop
adc
sbb
jl
loop
sub
pop
int3
jle
and
push
sub
mov
pop
fisubs
jmp
cmp
inc
lock
xchg
gs
mov
insl
sub
iret
mov
or
in
out
or
movsl
repz
sarl
pop
fdivl
out
out
jno
in
adc
cmp
mov
sbb
add
out
inc
sub
add
adc
cmp
arpl
adc
xlat
int
mov
push
out
cs
in
or
addr16
mov
cmp
mov
lret
loopne
aad
adc
inc
scas
int3
inc
sub
es
push
sarb
ret
or
lock
xorl
sbb
dec
in
adc
cltd
rorl
stos
out
add
movsl
or
clc
pop
mov
lahf
sub
scas
dec
mov
sbb
stos
ljmp
subl
cmpsb
and
mov
insl
mov
popa
push
or
pop
sub
and
jmp
inc
leave
dec
mov
pop
data16
aad
mov
fxtract
xchg
mov
cmp
sbb
fucomip
sub
sbb
mov
stos
cmp
inc
scas
cmp
gs
iret
lret
clc
leave
and
inc
pop
mov
dec
cmp
sub
sbb
test
xchg
dec
mov
inc
sub
push
adcb
and
inc
push
in
insb
and
mov
adc
inc
mov
inc
mov
in
jmp
add
cmp
inc
and
clc
shll
mov
addr16
mov
cmp
mov
int3
or
mov
inc
rorl
repz
iret
jecxz
add
clc
fstpl
aas
je
popf
and
sahf
ds
sbbl
aad
dec
dec
add
test
out
lret
add
cs
cmp
addr16
sti
out
push
dec
pop
and
out
dec
sub
jecxz
orb
or
out
push
mov
cmpsl
aad
pop
add
lods
and
cmpsb
mov
pop
movsb
mov
outsb
cs
mov
jb
stc
scas
insb
dec
sub
sbb
or
daa
mov
or
sahf
xchg
out
push
and
cmpsl
push
push
xchg
test
repz
add
jb
or
or
lahf
outsl
mov
stos
or
push
ja
and
jns
fcoms
pop
loop
mov
in
enter
sub
cltd
and
xchg
ja
xor
cmp
mov
cmp
jmp
jge
mov
ret
and
add
int3
sub
xlat
cmp
sub
sti
test
push
lahf
mov
jmp
sarb
int
insb
sbb
or
sub
test
pop
sar
jo
outsb
sbb
int
cli
sbb
push
sub
add
lods
out
sub
out
mov
in
bnd
dec
out
aas
jmp
mov
ds
out
insl
and
std
push
sbb
xlat
loopne
mov
ja
push
mov
cmp
fcoms
mov
test
push
cmp
arpl
xchg
pop
adc
std
fucomip
rcll
inc
mov
xor
ret
test
push
cs
insb
push
push
out
cmp
cmp
mov
pop
adc
int
push
cmp
dec
sub
addr16
cmp
sti
jg
inc
out
imul
addr16
repz
add
dec
fwait
insl
dec
sti
mov
xchg
xchg
mov
push
out
imul
sub
and
or
xorl
neg
ret
mov
in
cmpl
mov
jno
into
lea
clc
shl
sub
lds
jne
pop
dec
xchg
repnz
or
and
cltd
ret
push
xchg
cltd
push
add
rclb
fstpl
gs
adc
test
jno
cmpsb
daa
xor
push
loop
sub
arpl
fisubs
sbb
lods
or
mov
fwait
push
and
int3
jg
push
jbe
scas
fisubrs
fmuls
jns
push
cmpb
pop
dec
mov
inc
cmpsl
les
in
sub
sub
scas
hlt
push
lods
add
hlt
jne
in
outsl
lret
mov
mov
jecxz
dec
sub
push
sti
addl
jg
call
dec
push
stos
jmp
jne
mov
pop
push
imul
imul
lea
push
add
ja
cmp
jne
sub
loop
push
in
or
adc
pusha
ret
or
into
cmp
mov
jne
movsl
loopne
xchg
lea
mov
sbb
mov
mov
xchg
or
pop
arpl
mov
je
dec
and
jle
or
rcrb
and
mov
lods
out
fdivl
insb
test
and
imul
adc
jge
mov
sub
fildl
lret
cmp
sbb
mov
mov
xchg
inc
sub
shlb
mov
sub
outsl
fnsave
push
or
pop
dec
call
jecxz
into
jne
sbb
lahf
movsl
mov
in
sub
sahf
jbe
mov
push
sub
addl
inc
xchg
sub
cmpsb
dec
mov
or
lea
sub
jmpw
arpl
fadds
rorb
cmpsl
xchg
int
outsl
cld
jmp
mov
shrb
cs
imull
out
add
inc
mov
out
mov
sub
push
in
ret
push
push
xchg
xchg
daa
jns
scas
js
pusha
or
or
and
test
push
enter
cmpsb
jb
dec
mov
lods
cmpsb
stc
lods
mov
mov
mov
out
mov
mov
out
push
xchg
in
cmpsl
adcb
inc
out
sub
test
push
sub
xlat
cmp
out
rclb
cmpsl
ffree
fildll
cmp
push
mov
push
in
or
jne
sbb
test
push
cmp
and
mov
mov
pop
shrb
insl
push
shr
xchg
xlat
int3
cmpsb
or
rcrb
leave
or
push
sarb
push
pop
dec
sub
int3
adc
inc
ja
dec
outsb
mov
dec
rcrb
das
cmp
call
cmp
daa
mov
lret
xor
movsb
idivb
push
xchg
pop
lods
and
add
mov
inc
sub
jl
xchg
lds
mov
out
push
cmpsl
lret
or
dec
sub
aas
das
add
lea
outsb
xor
jo
lods
lods
jne
pop
jge
sub
out
out
sub
iret
push
pop
xchg
add
cmpsb
lret
xor
lret
push
push
adc
xchg
push
daa
push
cmp
lret
jle
pop
ffree
fsubrs
aad
je
or
pop
out
xchg
cltd
int
jbe
add
dec
sub
xchg
out
mov
orps
push
scas
repz
fwait
cs
push
pop
cs
mov
lods
sub
lock
sti
lea
mov
addr16
cmp
test
pop
gs
pusha
push
lods
arpl
mov
pop
xchg
popf
or
addl
jo
stos
push
outsl
push
shlb
push
test
and
lret
push
sub
shr
add
orl
lret
shr
and
mov
aam
jb
or
dec
sub
test
jge
pop
enter
jg
inc
push
dec
loope
pop
sub
dec
lods
add
add
test
fistl
jno
lods
pop
ss
mov
orl
mov
fisttpll
jbe
in
fdivrs
pop
lret
les
daa
pop
push
push
in
push
rclb
pop
rclb
out
or
pop
push
mov
and
dec
pop
push
test
cmp
fistl
cmp
pop
mov
popf
pop
filds
std
inc
test
sub
push
cltd
mov
ds
adc
jecxz
mov
adc
sbb
mov
test
repnz
xchg
mov
ss
push
cltd
out
lea
fnstenv
outsb
lods
inc
loop
xchg
sbb
insb
or
sub
enter
jns
mov
sbb
ret
fs
sbb
xchg
add
ret
fsubl
sub
inc
mov
lcall
dec
test
je
leave
push
shlb
fs
out
subl
push
dec
or
and
jnp
bnd
add
mov
fsubl
add
xchg
lea
jecxz
sub
mov
jb
xchg
shlb
pop
scas
jecxz
fldz
orb
cmp
sbb
sahf
jmp
or
ja
test
out
sub
movsb
pop
cmp
push
lea
sub
jne
lods
mov
fildll
add
js
inc
test
pop
mov
dec
or
fcompl
cmp
jmp
cmp
xchg
mov
add
sahf
sub
adc
shr
sub
ret
fdivr
cmp
cli
mov
add
call
dec
cmp
sahf
out
roll
scas
lahf
jp
adc
sub
mov
movsl
mov
dec
sbb
push
pop
push
daa
push
dec
mov
ja
pop
loope
add
adc
out
subl
pop
popa
xchg
inc
cs
test
mov
addr16
or
or
sub
mov
fimuls
fisttps
adc
gs
out
popf
test
push
sbb
sbb
jmp
cmc
scas
or
mov
cld
outsl
scas
adcb
xor
push
sbb
or
inc
adc
or
or
test
dec
pop
orl
jmp
insl
mov
push
add
cmp
push
sub
negb
loopne
imul
or
sub
push
dec
sub
out
and
scas
mov
mov
les
sub
xchg
dec
lret
or
and
inc
inc
clc
lock
iret
mov
ret
inc
imul
orb
fcmovbe
adc
ror
imul
mov
sub
rol
addb
or
jmp
movsl
enter
jmp
xor
mov
in
leave
lret
dec
mov
call
dec
mov
in
mov
and
push
inc
out
lahf
dec
sub
jl
sub
js
jne
jo
dec
pop
cmpsl
and
push
lods
in
sbb
and
xchg
and
push
add
jl
or
sub
mov
imul
dec
fmuls
mov
push
in
cld
dec
pop
and
sub
inc
add
insb
iret
sbb
mov
sbb
dec
hlt
adc
sub
out
gs
mov
push
push
mov
mov
shll
push
cs
push
jno
inc
sti
xchg
cltd
inc
sbb
mov
test
mov
mov
and
push
mov
jp
inc
inc
push
lcall
out
or
fnstenv
or
out
xchg
jmp
mov
arpl
sub
fdivrs
arpl
cmpsl
push
sbb
daa
popa
or
scas
adc
inc
mov
inc
cmp
pop
outsb
xchg
ret
aaa
jle
lahf
in
sub
and
subb
movsb
xor
mov
adcb
cltd
adc
outsl
fisubl
cs
pushf
mov
or
in
jns
stos
inc
pop
jbe
jle
leave
cmp
adc
shr
into
aaa
sub
aad
lods
cmp
or
push
sub
loop
push
jne
cltd
rcrb
pop
test
pop
push
jno
repnz
mov
je
fsubrs
in
dec
and
mov
mov
je
xchg
xor
jo
xchg
pop
and
repnz
lret
push
fimull
in
mov
mov
and
push
dec
and
ret
in
and
adc
ja
shlb
pop
add
jmp
aas
loope
aas
outsl
lods
pop
mov
sub
dec
leave
stc
mov
sub
pop
shrb
lods
mov
push
dec
aad
xor
lods
lret
mov
leave
cmp
mov
es
mov
mov
mov
add
inc
push
push
insl
xchg
aad
loopne
mov
cmp
decl
mov
cmp
sarb
lret
add
mov
aad
mov
leave
cs
jp
push
into
cmp
mov
dec
out
dec
ja
mov
jp
int
mov
xlat
sub
mov
out
pop
mov
faddl
sbb
xchg
push
add
es
mov
outsl
push
cs
sub
sbb
push
push
and
repnz
out
mov
sub
sti
mov
add
dec
arpl
outsl
je
xchg
out
fisttpl
xchg
fcoml
jne
cmpsb
adc
lret
int
inc
cmove
or
or
sub
pop
dec
and
mov
adc
push
mov
nop
popa
pop
or
sub
es
xor
or
adc
pop
or
loopne
movsl
fisubrs
mov
sub
fstps
push
nop
stos
mov
mov
dec
ljmp
lds
int
xor
cmp
inc
jg
dec
mov
fisubl
mov
stos
sbb
daa
sbb
push
test
je
mov
xchg
adc
xchg
mov
dec
pop
sub
outsl
test
in
and
inc
mov
inc
clc
or
jmp
sbb
pop
and
xchg
add
dec
pushw
sub
xchg
or
push
in
or
lahf
mov
and
into
pop
nop
lahf
int
mov
aam
mov
xchg
popf
add
arpl
imul
ljmp
aaa
rcr
dec
pop
fneni(8087
mov
push
mov
xchg
and
in
xchg
ret
sub
push
mov
mov
add
mov
and
and
ja
pop
adc
mov
iret
sti
add
mov
cmp
insl
ss
stc
sub
mov
mov
cmp
or
test
leave
xchg
lods
or
mov
lock
repnz
or
xor
in
insl
jge
push
rcrl
add
daa
inc
lods
test
cs
mov
rol
push
xor
popa
clc
lcall
push
pop
repnz
add
xchg
xchg
repnz
jp
sub
or
es
or
fs
stos
or
mov
lea
lret
pop
cmp
sub
ret
xlat
leave
push
and
xorl
aam
mov
fcompl
mov
xchg
push
cs
int
lods
ret
sbb
out
stos
dec
inc
and
bound
fisttpll
iret
sbb
subb
test
andl
subb
sahf
sub
into
dec
inc
jecxz
int
add
xor
dec
cld
aas
imul
arpl
lods
test
and
fsubrs
jge
lock
jmp
lcall
ficompl
lret
pop
imul
sub
repz
sbb
aad
lcall
xor
jle
leave
dec
in
xor
cli
jp
push
jg
inc
push
or
add
sbb
loope
sub
sub
xchg
movsl
scas
mov
add
psubb
repz
test
sub
add
std
shl
int3
sbb
jge
mov
pusha
jne
stc
mov
jg
cmpsl
jno
jmp
inc
mov
rorl
stos
jmp
xchg
fstpt
loop
adc
jb,pn
cld
aad
dec
scas
lock
mov
xchg
jnp
sub
call
or
lods
or
cmpsb
xchg
jne
test
inc
ss
stos
iret
push
push
test
cld
add
push
in
adc
fwait
dec
dec
jno
int
jl
and
daa
pop
rolb
fdivs
add
out
es
pop
les
xchg
push
cmp
inc
lret
fwait
inc
pop
jle
cmpsl
lret
push
sbb
pushf
or
aaa
lcall
xchg
inc
add
or
popf
jecxz
aad
or
push
movsb
jle
inc
push
imulb
test
pop
mov
outsl
xchg
stos
dec
popf
push
and
push
sub
sbb
loopne
out
pop
mov
mov
bnd
sub
and
test
sarb
mov
mov
lods
bound
or
test
sub
ja
sahf
out
pop
out
sub
fcmovu
gs
add
dec
test
scas
addr16
pop
mov
lret
jmp
xchg
adc
jne
test
in
push
push
jno
stos
pop
dec
cmp
or
xchg
loopne
mov
and
dec
or
repz
test
loop
daa
rclb
gs
test
xchg
add
jl
scas
fwait
xchg
es
in
out
xchg
sbb
push
mov
cmpsb
out
data16
mov
sbb
sarl
cmpsl
jl
addr16
stos
mov
sub
out
push
ret
or
mov
subb
xchg
xchg
in
xchg
sbb
and
mov
pop
insb
lods
cmpsb
ja
in
mov
or
test
jmp
negb
cs
arpl
ljmp
pop
inc
daa
inc
call
fimuls
sub
mov
clc
jo
cs
daa
pusha
insb
mov
stos
push
cmp
in
cmp
int3
and
xor
cmp
xor
stos
dec
cmp
add
lret
cltd
or
sti
fimull
imul
fs
stos
mov
sub
sub
mov
lret
sbb
and
imul
fsubrs
or
out
fsubs
inc
add
mov
sti
pusha
outsl
push
lret
lahf
call
jmp
mov
hlt
inc
js
das
fsubr
outsb
scas
rcrl
jae
out
fisubs
mov
je
outsb
and
lods
jmp
rep
sahf
mov
jb
mov
dec
jne
sub
and
in
push
pusha
pop
jno
mov
loop
mov
add
popf
les
push
leave
int
sbb
outsl
repnz
inc
call
pop
mov
test
xchg
pusha
test
inc
jp
push
or
mov
bound
gs
jmp
xor
out
lods
jecxz
add
add
cli
dec
pop
or
or
lcall
orl
aaa
or
push
stos
adc
fists
xor
jns
aad
repnz
mov
ret
dec
jmp
out
cmp
xchg
subb
mov
lahf
sub
inc
cs
and
dec
jns
dec
xor
pop
dec
pop
pop
jecxz
mov
loop
call
mov
mul
dec
test
mov
xor
dec
inc
sub
popf
push
or
sub
xor
mov
push
push
dec
test
out
sub
mov
fidivs
dec
fldt
or
shll
mov
jne
pusha
xchg
fwait
imul
dec
cs
insb
jge
insl
jbe
test
and
test
or
fwait
push
rcrl
xor
or
faddl
pop
fnsave
lods
jmp
adc
leave
test
in
and
rclb
jle
or
mov
mov
out
ret
call
into
or
in
push
ljmp
or
sub
sahf
aam
xor
or
test
cmp
addb
pop
mov
in
cs
mov
add
dec
mov
movsl
xchg
test
add
sar
addr16
mov
pop
loopne
orb
cmp
scas
mov
push
adc
lret
pop
pop
mov
mov
in
lret
push
xchg
shrl
and
adc
popl
jecxz
jge
orl
in
bound
test
jns
push
mov
hlt
cmp
jo
addr16
add
gs
add
push
sub
rcrb
xor
sbb
aam
add
jmp
cmp
orb
dec
subb
and
fildl
lret
dec
nop
sahf
cmpsl
sahf
mov
xchg
loopne
fldl
into
in
out
pop
mov
out
xchg
sub
adc
in
lea
sub
into
mov
xchg
push
ljmp
jb
fwait
lea
mov
pop
inc
xchg
xlat
add
xchg
fucomip
jl
and
mov
inc
rol
loop
jno
faddl
mov
jp
add
insl
popa
aam
mov
rorb
aad
adc
fsubrl
arpl
stc
inc
daa
mov
iret
nop
mov
cmp
movq
mov
sub
imul
ret
push
jb
push
add
mov
test
pop
stos
xchg
stc
push
mov
stos
nop
mov
and
push
adc
mov
sub
hlt
lret
dec
dec
and
cmp
xchg
xor
and
fimuls
enter
ss
add
push
stos
cmpsb
sub
lods
mov
dec
rorl
or
jmp
pop
scas
clc
test
in
mov
test
jne
jg
xchg
add
push
dec
ds
enter
in
mov
mov
ja
xor
cmp
mov
sub
xchg
in
jecxz
lahf
les
xchg
inc
fwait
loope
arpl
dec
mov
mov
into
sub
test
lret
lods
inc
mov
subb
cmp
ljmp
mov
push
lods
in
sub
negl
imul
scas
rcrl
mov
leave
ljmp
xchg
sub
rcrl
leave
movsb
or
fmulp
in
sub
outsl
incl
popf
jmp
mov
add
or
or
mov
pop
or
cmp
mov
cmp
adc
push
insl
mov
push
inc
add
je
stos
xor
push
mov
arpl
adc
js
lods
or
cmp
adc
mov
daa
stos
and
jg
cld
dec
pop
test
dec
aad
push
fs
jl
xchg
shlb
cmp
lock
or
fstpt
xchg
sub
mov
sub
inc
testl
lock
dec
and
push
ljmp
push
xor
aaa
addr16
or
nop
lock
shr
mov
xchg
lahf
jmp
or
or
jnp
dec
inc
xor
call
xchg
adc
cs
inc
in
sub
sub
xchg
and
mov
into
dec
shll
jecxz
add
mov
xchg
ror
xor
lods
add
sub
and
xlat
test
push
add
test
cmp
xchg
xchg
adc
repz
cmc
or
popl
jmp
pop
sub
fldcw
in
arpl
xor
mov
push
ljmp
mov
cmc
fidivrl
cmp
pop
mov
and
push
rolb
xchg
dec
cmp
mov
mov
and
in
add
push
pusha
adc
mov
jno
leave
sub
dec
in
dec
int
andb
in
ljmp
mov
fiaddl
lea
loopne
push
sub
icebp
rol
daa
mov
jo
ja
push
dec
lea
orl
fstps
push
insb
out
push
and
and
sbb
repz
imul
or
test
es
test
test
fnsave
lods
enter
mov
xchg
pop
into
push
mov
jecxz
or
push
cli
in
jp
int
or
insl
dec
loopne
testl
and
icebp
std
mov
aad
or
or
push
rolb
mov
gs
mov
test
mov
int3
cmp
pop
test
mov
add
int3
addb
jne
mov
push
jb
lods
or
in
lea
iret
pop
and
inc
xor
pushf
xchg
mov
clc
jno
xchg
xchg
loop
xor
push
xchg
dec
loope
out
aaa
cli
mov
std
cmp
xchg
in
leave
insl
push
mov
enter
int3
and
or
mov
rcll
inc
sub
sahf
jle
mov
inc
mov
inc
in
ret
jb
pop
sbb
mov
js
test
and
leave
jno
js
in
push
dec
sub
push
sbbl
push
xor
cmpsb
enter
mov
add
inc
adc
ret
and
xlat
mov
insb
arpl
jnp
push
popa
and
push
add
mov
sub
inc
fistps
xchg
mov
mov
jno
gs
add
rcrb
pop
popa
inc
lret
jmp
adc
mov
fstpt
iret
fiadds
inc
or
in
insb
dec
pop
into
in
sub
adc
xor
cmp
mov
cmp
out
test
mov
mov
jecxz
out
jns
dec
gs
fimull
ret
insl
jecxz
sub
les
xchg
lahf
out
sub
sti
xor
xchg
pop
les
faddl
lcall
into
out
outsb
mov
and
adc
ja
and
lcall
add
xor
add
mov
sub
into
mov
mov
leave
mov
push
mov
test
inc
iret
call
adcl
test
rcll
inc
aas
pop
mov
in
mov
adc
jne
cmc
mov
roll
jb
dec
dec
scas
push
adc
lods
add
xchg
jo
call
cs
adcl
sti
pop
dec
cmp
mov
mov
scas
sti
jmp
mov
dec
repnz
lods
xchg
sub
stos
or
dec
pop
lock
push
mov
addr16
push
mov
arpl
outsl
test
cmp
add
mov
or
ds
popf
push
mov
mov
data16
mov
rcr
lea
sarl
in
xchg
popa
push
and
mulb
rol
dec
sub
out
and
pop
lods
lods
inc
mov
xlat
jnp
lret
in
test
or
int3
mov
cmpsb
or
xchg
pop
push
mov
or
adc
lret
les
test
or
int
or
out
pop
lods
cmpsl
sbb
lea
xor
lods
fisubs
aaa
push
cld
mov
sub
dec
add
loopne
and
mov
addr16
fdivrl
lock
popf
and
xchg
mov
mov
dec
jno
in
mov
btc
test
cmp
or
inc
into
ljmp
pop
movsb
jle
cmpsl
mov
xorl
test
cmc
xchg
stos
inc
pop
out
and
lahf
and
add
std
mov
inc
sbb
xor
xchg
mov
xor
mov
loopne
in
cltd
dec
into
mov
and
shrl
xchg
dec
call
dec
mov
loop
and
fmul
test
daa
out
jno
in
jle
clc
enter
mov
jne
loopne
sub
jne
xchg
in
or
mov
arpl
sub
loope
jp
xor
out
mov
pop
inc
sub
add
movsb
jmp
pop
sub
lahf
sub
es
arpl
fwait
ja
or
jmp
sub
pop
jo
lea
and
pop
lea
mov
push
push
and
add
add
andl
in
dec
and
les
adc
add
cmp
jg
inc
add
clc
lret
pop
pop
dec
sub
pop
ret
dec
xchg
into
push
imul
xchg
mov
or
jbe
add
jmp
mov
mov
or
jl
pop
clc
pop
in
mov
mov
and
addr16
xchg
shrb
pop
test
xchg
shlb
or
lret
mov
push
adc
test
idiv
fisubrl
push
add
push
lods
out
nop
gs
jecxz
or
push
sub
xor
and
scas
jns,pn
aad
rcr
sub
jo
mov
movsb
fxch
cs
fisubl
jecxz
jb
in
inc
push
mov
sub
dec
jecxz
pop
jge
mov
cmp
movsb
ret
sub
xor
inc
push
shr
dec
xchg
mov
clc
iret
cmp
pop
cmc
dec
test
lods
std
jnp
adc
sub
and
in
cmp
mov
int
xchg
fistpll
dec
insl
movb
cmp
lcall
or
rcll
cmpsb
rolb
fimull
stos
fisttps
xchg
cmpsl
clc
dec
pop
sbb
cmp
lock
gs
inc
scas
add
mov
test
cmp
ret
gs
fs
lret
push
cs
jae
mov
sub
jns
push
sbb
popf
lock
mov
xor
mov
sub
mov
leave
and
out
int3
int
call
cmovp
js
daa
mull
clc
push
push
xchg
pushf
ja
movsl
mov
and
out
je
dec
push
mov
jno
cmp
mov
cmp
xchg
cs
inc
sub
sarl
add
sub
sub
aas
mov
mov
loop
lret
fldcw
inc
pop
mov
pop
roll
sub
jmp
or
negl
sub
lahf
call
fcmove
or
inc
pop
dec
mov
jmp
mov
outsl
add
add
adc
push
xchg
push
sub
icebp
mov
inc
out
call
mov
xchg
hlt
push
mov
pop
push
push
xor
mov
sub
pop
ss
mov
xchg
imul
cs
push
lods
lods
ds
inc
ret
mov
mov
or
xorb
or
ror
in
or
xlat
mov
jo
xchg
scas
orb
gs
mov
ljmp
xchg
cld
divb
cmp
mov
fcomps
rcll
pop
sub
iret
sahf
push
in
insb
testb
sub
mov
or
mov
cmp
mov
rolb
mov
fldl
mov
out
pop
cmp
daa
rorb
adcl
mov
inc
jecxz
lods
outsb
jnp
test
arpl
xchg
mov
mov
lods
enter
cld
mov
dec
lods
and
js
xor
or
add
add
arpl
dec
sub
sub
and
jecxz
or
sti
jne
lock
andb
push
test
sub
mov
shll
mov
dec
scas
imul
cmp
pop
jle
test
jnp
aad
xchg
pop
jmp
jae
and
call
daa
fsubrl
and
ret
arpl
xchg
ljmp
ss
add
cli
mov
push
sub
xchg
push
jae
mov
sub
stos
adc
add
sub
rolb
lret
jmp
arpl
jge
cs
cmp
mov
mov
in
or
outsl
fdivs
push
adc
jmp
cs
imul
mov
cli
inc
and
mov
pop
cmp
and
push
sbb
lret
and
loop
sub
cmpsl
inc
iret
ds
lret
popf
outsb
inc
int
pop
jecxz
jns
push
into
daa
in
cmpsl
daa
push
ret
fsubrs
std
mov
push
xchg
in
or
cmpsl
jne
stos
arpl
test
cmc
inc
gs
ja
jg
insb
aaa
mov
int3
jp
pop
ljmp
mov
dec
jnp
outsl
jns
cs
dec
movsl
add
pop
insl
or
pop
call
mov
fldl
push
pop
and
aaa
inc
mov
lods
mov
js
call
adc
adc
jns
popf
sub
dec
and
into
mov
es
cmp
jl
daa
enter
xchg
cltd
test
xchg
mov
pushl
pop
mov
ret
ror
inc
jp
inc
or
out
sub
movsl
mov
xchg
loop
in
fcomi
inc
dec
cmp
rcr
and
jge
in
pop
dec
lods
mov
inc
das
in
call
loop
jnp
add
sub
jo
push
dec
ja
inc
fldt
in
fisttpl
rcrb
xor
add
nop
mov
out
cmpsb
lcall
test
sub
lea
dec
xchg
sahf
ljmp
lret
xor
mov
ja
mov
mov
into
iret
cmp
adc
outsb
out
ss
cmovle
lock
lods
mov
mulb
daa
andb
adc
inc
insl
jmp
mov
sub
mov
adc
mov
lods
push
pop
data16
call
xor
mov
cmpsl
and
jecxz
lds
jp
fadd
lahf
sub
cli
cld
pop
lods
leave
mov
and
scas
aad
mov
xchg
cld
pop
lods
out
stos
pusha
cltd
into
test
sub
repnz
int
pop
lret
aam
fists
jns
sbb
in
enter
arpl
dec
test
arpl
and
xchg
testl
or
push
icebp
mov
insb
daa
outsb
fs
jo
cmp
cmp
daa
push
mov
enter
add
arpl
mov
mov
sub
xchg
mov
cmpsl
ret
stos
rcrl
notl
neg
lret
fisttps
sub
adc
daa
fs
lret
nop
push
addr16
pop
mov
xorl
inc
xchg
xchg
in
lods
jne
mov
test
shl
les
cmp
rorl
lea
dec
sbb
jl
lea
popf
pop
aaa
mov
xchg
sub
lods
popa
xchg
dec
jne
insl
push
adc
or
mov
test
scas
xchg
push
ret
or
imul
mov
push
xor
jne
mov
jbe
arpl
les
roll
mov
dec
ljmp
das
xor
cmp
pushf
repnz
in
or
insb
gs
dec
subl
dec
fistpl
rcll
ret
outsb
sub
cmp
add
adc
push
jb
add
aad
cmp
mov
xor
xchg
xchg
jmp
add
adc
test
dec
sub
mov
hlt
fisubrl
rclb
dec
add
or
mov
sub
outsb
sbbb
and
adc
cld
leave
dec
xlat
mov
addr16
mov
mov
in
cli
and
shll
cmpsb
inc
call
stos
clc
test
in
rorb
lds
dec
sub
adcl
mov
sti
add
adc
and
out
pop
mov
mov
jmp
int3
gs
dec
ljmp
addr16
std
mov
out
push
sbb
in
mov
stos
mov
sbb
jae
scas
sbb
lods
insb
sbb
fidivl
push
inc
int3
int
dec
lcall
lret
xorb
xor
mov
test
jmp
out
mov
mov
js
outsb
jle
int
fstpl
and
mov
xchg
sbb
loopne
push
inc
adc
or
aad
sub
int3
mov
jne
push
arpl
push
xchg
inc
xchg
mov
int3
sub
lea
xor
push
popa
loopne
lea
sti
cmp
mov
cmpsb
sbb
into
cs
adc
popl
ret
jmp
xor
stos
mov
or
jp
mov
int3
nop
pop
lods
inc
ljmp
popf
in
mov
and
xor
sahf
leave
das
movsb
test
and
sbb
pop
orb
lods
xor
sbb
sub
leave
adc
xchg
ror
lods
enter
push
lahf
fiadds
xor
test
xlat
or
imul
cld
add
aam
popf
dec
out
cmp
lret
sbb
pop
xchg
loope
dec
imul
pop
jecxz
les
roll
popa
jl
pop
push
and
xchg
dec
fwait
hlt
add
dec
lock
bound
or
inc
int3
outsb
xor
scas
adc
mov
sub
lea
arpl
sbb
sub
pop
in
mov
sub
push
scas
fdivl
movsb
mov
mov
test
dec
sarb
cmp
lea
out
sub
sbb
loop
sub
gs
xchg
sub
cmpb
or
xor
xchg
mov
ret
loopne
test
aaa
ds
xchg
xor
jne
jae
xor
in
scas
hlt
rcl
scas
adc
push
loop
adc
dec
or
fldcw
push
pop
mov
lret
lret
add
mov
mov
lods
insb
ret
lods
gs
mov
dec
cmp
mov
pop
ljmp
sub
pop
lret
push
xchg
xor
and
inc
adc
cmp
cmpsl
mov
out
out
outsl
jle
cs
cmc
mov
subl
mov
push
sub
push
jecxz
add
push
push
jl
shr
sub
lods
scas
stos
add
push
xchg
movsl
out
pop
loop
cmp
lret
xchg
sub
adc
call
push
inc
cmp
fwait
jne
jmp
pop
dec
lea
cltd
dec
stos
sarl
xor
pop
inc
aad
daa
popa
mulb
fisttpll
sub
add
rcrb
out
inc
popf
clc
lahf
sbb
ljmp
and
lods
sbb
mov
mov
xor
aad
lea
add
lods
in
aam
insl
pop
ror
add
mov
lea
pop
repnz
arpl
in
or
cmp
jae
int
pushf
loopne
aaa
lods
add
push
into
cmp
imul
call
inc
push
lock
jmp
push
aas
in
and
inc
mov
mov
push
cmp
int
rorl
sub
pop
xor
in
aas
test
inc
into
inc
sub
cmp
xchg
dec
lods
inc
adc
dec
xchg
jo
mov
shlb
adcb
add
push
and
sub
jnp
imul
outsl
mov
ljmp
aas
rorl
subl
mov
mov
lods
aas
in
jne
inc
bnd
push
mov
mov
xor
decl
xchg
sahf
push
sbb
and
jle
jbe
lea
jno
lods
scas
int3
shr
in
scas
gs
ss
mov
movd
mov
call
rclb
or
add
insb
leave
sub
clc
dec
mov
out
gs
and
mov
mov
popf
adc
int3
mov
xchg
inc
jo
or
jmp
or
sub
lods
fmul
jnp
out
lods
test
mov
arpl
xchg
or
in
and
sub
lods
mov
ja
xchg
inc
out
and
cmp
add
ja
ljmp
jnp
or
push
xchg
xchg
fimull
shlb
out
lret
jmp
outsl
fisubrs
stos
addl
push
and
jbe
cmpsl
cmp
jne
cmp
shr
test
test
mov
jle
and
int
fisttps
and
push
fucomi
xor
sub
stc
push
mov
ljmp
daa
xchg
jnp
pop
mov
hlt
adc
dec
xor
or
dec
cmp
test
out
adc
cli
cmp
cmp
pop
mov
pop
mov
in
lock
cmpsb
add
dec
xor
leave
pop
add
in
xor
xchg
lods
rol
loop
and
push
xor
add
pop
and
call
test
fwait
inc
and
sbb
and
out
jmp
pop
cmp
orl
cmc
push
ja
jb
push
mov
lock
dec
xchg
filds
mov
sub
ffree
xchg
in
push
in
in
add
test
cmc
pop
xchg
scas
fstpt
ss
push
stos
popf
int
in
loopne
sub
adc
mov
cltd
sub
shlb
or
and
repz
mov
stos
push
cmp
add
in
sbb
jne
retw
dec
out
push
mov
movsl
xchg
or
loop
and
in
cld
lods
out
test
push
dec
rcll
gs
jl
lods
cmpsl
int
rclb
js
insb
push
pop
call
pop
xchg
pushf
ror
out
shll
mov
ret
test
stos
scas
lret
pop
in
add
jo
pop
ds
inc
sub
xor
cs
ret
sub
xchg
js
outsl
leave
sub
daa
fs
adc
jns
in
shlb
add
cmc
dec
andl
xchg
imul
popf
lret
lret
cmpsb
cmp
sub
add
xor
sub
jnp
clc
inc
stos
xchg
or
add
jne
inc
mov
aad
and
cltd
enter
xchg
xchg
out
mov
mov
jp
cmc
nop
lahf
inc
pop
mov
mov
xor
add
adc
loopne
push
and
es
mov
gs
sbb
xchg
shr
sub
cltd
popf
nop
and
fdivs
in
lret
out
pop
leave
mov
sbb
cmp
jne
and
les
add
daa
add
subl
lods
jbe
ljmp
dec
daa
push
xchg
sahf
mov
mov
sub
adc
jne
rclb
fisttps
sub
icebp
adc
in
sub
add
jns
xlat
inc
add
enter
in
imulb
cltd
jl
out
subb
int
push
dec
pusha
sub
sub
lahf
in
inc
mov
fmull
xlat
pop
movsb
jecxz
xchg
imul
add
xchg
pop
test
les
andl
sub
cmc
lods
iret
add
adc
cmpl
xchg
roll
inc
gs
ret
or
es
push
pop
inc
in
sbb
mov
jmp
jle
inc
test
cmc
cmp
imul
ja
out
out
xor
mov
fmuls
mov
popa
add
addps
add
adc
and
fwait
mov
outsl
push
inc
pop
in
add
dec
cmp
sbb
in
mov
sub
int
jecxz
gs
and
pop
mov
fdivr
lods
insb
js
loope
mov
in
mov
ds
loop
xor
jg
dec
adc
push
shr
ret
jo
popf
lret
notb
jbe
insb
and
js
pop
push
jp
jecxz
inc
gs
mov
test
jecxz
ficoml
loopne
data16
loop
bswap
call
xchg
popl
scas
in
lea
xchg
movb
or
jae
out
in
test
es
mov
cmp
mov
lcall
xor
fists
lods
sub
outsl
pop
inc
sbb
pop
push
mov
test
sub
loop
mov
mov
inc
mov
dec
and
mov
and
aad
imul
fiadds
cmpsl
out
sbb
int3
outsl
mov
hlt
pop
test
ljmp
mov
lahf
mov
xor
cmp
stc
orl
push
push
cs
xorb
push
push
xchg
call
and
or
pop
jp
inc
ds
push
lret
dec
sub
xchg
inc
and
lods
sub
pop
in
imul
mov
repnz
or
cld
psrld
out
aad
les
js
lea
sub
push
negb
addl
jo
sub
mov
subl
cmpsl
out
in
jae
subl
sahf
sbb
ljmp
insl
sbb
js
lods
or
push
fcmovnu
addr16
outsb
cmp
push
iret
jmp
or
js
into
and
add
mov
in
and
adc
pop
insl
into
adc
or
xor
push
ds
cmp
xchg
data16
in
enter
enter
lret
sub
mov
pop
movl
imul
push
daa
popa
pushf
xchg
lahf
dec
aaa
sbb
arpl
scas
hlt
jne
push
lods
or
int
xchg
mov
xor
cmp
arpl
lahf
ret
sub
ja
rclb
pushf
shr
or
push
dec
cli
dec
into
out
xchg
into
add
mov
or
mov
jp
int
imull
inc
pop
or
sub
mov
mov
pop
sub
or
jp
lea
xor
cmp
dec
aaa
mov
or
or
lods
scas
push
xor
cmp
ret
mov
cltd
sub
add
adc
adc
call
cmp
loopw
hlt
dec
dec
addr16
jmp
cmp
loopne
push
enter
out
xor
popa
scas
xchg
and
out
mull
cmpl
shl
mov
adc
mov
add
hlt
imul
add
pop
mov
sahf
xchg
ret
adc
ret
xor
jne
cli
jno
jne
test
add
xor
pop
sysret
out
int3
imul
das
xor
dec
or
call
movsb
ret
mov
jae
xor
pop
decb
lahf
ja
xor
xorl
movsb
cmp
xchg
lods
dec
adc
dec
fucompp
and
into
sub
test
setp
ljmp
cmp
addr16
push
push
fstpl
in
pop
popf
loop
sub
adc
xchg
mov
jge
add
insb
adc
sahf
dec
dec
push
pop
cmp
sbb
mov
movsl
or
jno
ror
sub
push
imul
pop
dec
dec
xor
jle
cmpsb
pop
dec
inc
and
or
add
and
jmp
test
push
rclb
hlt
inc
push
mov
mov
push
xchg
ror
pop
add
sbb
mov
push
insl
mov
fs
fidivl
clc
dec
or
adc
divb
add
mov
out
call
and
mov
cmpsl
pmovmskb
into
test
ds
outsb
out
lods
mov
jae
mov
scas
jnp
lea
mov
xchg
rcl
xchg
fidivrl
fwait
int
cmpsb
fdivr
or
mov
mov
cmp
cmpsb
leave
sub
xor
jecxz
movsb
add
jmp
fwait
or
nop
fimuls
jle
scas
aad
lods
into
cmp
lock
rcr
stc
call
lret
xor
dec
lods
mov
daa
or
and
out
js
adcl
ss
add
aaa
xchg
ljmp
popf
popa
idivb
lods
jg
sub
pop
dec
mov
int
fildll
xchg
pop
jne
in
sub
xchg
loop
lret
push
dec
cmpsl
sbb
and
dec
sub
and
repnz
inc
adc
add
pop
mov
mov
popa
inc
jmp
fidivrs
push
enter
scas
fwait
lea
sub
and
popf
movsl
scas
sub
ret
out
ljmp
aam
andb
push
or
popf
sub
test
stc
xchg
pop
jg
call
xchg
mov
cmp
cli
imul
jno
lret
or
test
xchg
sarl
insb
iret
popf
loope
daa
ret
arpl
stc
scas
daa
xchg
adc
or
xchg
xchg
inc
push
sub
sarb
push
xchg
out
ss
sub
inc
fcoml
popf
mov
jge
push
and
pop
and
filds
scas
and
in
idivl
push
ret
out
iret
push
sahf
aas
fdivs
in
sub
add
xor
inc
or
inc
ljmp
js
lret
dec
xchg
hlt
dec
lret
and
ss
pop
insb
dec
xchg
add
mov
dec
and
inc
outsb
test
push
jbe
aaa
insb
jg
mov
jmp
mov
in
xchg
jecxz
imul
adc
xor
jp
add
lods
into
xchg
vphsubdq
or
insl
adc
popf
bound
mov
mov
lea
and
lahf
xchg
mov
sub
push
inc
mov
cs
cmp
cmp
test
insb
inc
or
or
push
sub
outsl
out
add
inc
mov
and
pop
push
jno
dec
and
push
push
out
xor
insb
add
mov
pop
js,pt
jmp
sub
or
fnstenv
insl
push
or
jb
int
leave
popf
mov
mov
leave
jmp
mov
lds
repz
shll
lods
in
push
stos
bound
push
xchg
and
xor
mov
or
lcall
mov
dec
imul
fidivrs
fimull
sahf
pop
sar
ret
data16
and
mov
stos
push
mov
daa
int3
jle
cs
pusha
push
lcall
shrb
or
mov
or
movsb
mov
push
add
sub
sbb
sub
sub
add
ja
jp
into
mov
lods
fimuls
push
fucom
jmp
xor
out
hlt
push
adc
lods
iret
imul
dec
mov
pop
dec
xor
mov
sub
adc
add
mov
pop
add
in
jg
orl
enter
loope
in
fstl
sbb
xchg
mov
inc
int3
scas
and
decb
adc
repnz
stos
lcall
out
mov
int
jne
cmp
mov
and
mov
cmp
push
add
dec
filds
add
adc
roll
xchg
cmp
data16
dec
cmpsl
mov
cltd
mov
gs
adc
lods
and
mov
repnz
xor
pop
dec
stos
sub
inc
pop
insb
sbb
mov
in
or
mov
ljmp
push
push
imul
mov
or
fs
mov
gs
mov
fsubrl
divl
fadds
lock
pop
sbb
insb
dec
gs
xchg
dec
lock
and
std
gs
inc
inc
lret
gs
cmpsb
jb
jns
cmpsl
xor
fisttps
imul
mov
add
pop
out
push
push
fiadds
in
fucomip
sub
mov
scas
fcoml
movsl
dec
icebp
loope
sub
or
adc
les
push
stos
dec
push
gs
fdivr
mov
push
sub
mov
pushf
xor
loope
pop
or
mov
dec
test
aas
push
lock
mov
lea
std
jne
rol
je
lret
iret
sti
fstpt
arpl
add
or
and
lds
gs
in
dec
test
and
push
sub
pushf
out
pop
jno
arpl
push
pop
push
lret
aad
sub
gs
subl
add
sub
xor
push
ljmp
or
pop
lods
mov
in
and
and
aad
add
ficomps
and
jmp
sbb
sti
and
mov
js
enter
inc
in
and
sub
sahf
popa
jg
sub
or
fists
xchg
scas
inc
dec
les
or
inc
test
pop
scas
stc
sub
int
aas
sub
pop
repz
mov
orb
lret
pushf
in
out
mov
sub
fimull
shrb
pop
rcrb
sbb
and
cwtl
push
cmp
ljmp
inc
adc
rcrb
jge
sub
xchg
sub
addr16
test
insb
inc
lret
push
sub
mov
inc
adc
test
out
xchg
lea
xor
sub
out
fiadds
dec
ret
or
push
sub
jb
cld
sub
pusha
dec
xor
sub
addr16
pop
sbb
cwtl
xchg
insb
inc
mov
adc
ljmp
adc
mov
sub
jne
in
sub
arpl
out
adc
inc
mov
xchg
pop
sti
data16
mov
popa
stos
in
mov
cmp
xchg
fs
ljmp
mov
outsl
sub
pop
stc
clc
xor
loopne
orb
push
sbb
stos
fisubrs
xchg
popa
inc
push
xor
inc
mov
stos
sub
fdivs
ljmp
push
out
mov
fldt
aad
jmp
mov
les
adc
jp
sub
xor
sbb
sub
push
sub
push
sbb
subb
iret
hlt
jne
xor
das
push
subl
dec
popf
adc
mov
sub
cmp
rcrl
sub
xchg
add
lea
mov
mov
iret
sbb
sbb
in
mov
fcmovbe
enter
sub
jo
jmp
test
ljmp
int
ja
cmp
lds
jnp
scas
mov
notb
pusha
outsl
sub
sbb
sub
mov
test
bound
inc
mov
nop
leave
and
in
fdiv
adc
cli
or
mov
je
sub
sarb
sub
or
rcrl
test
sub
test
dec
daa
sub
xchg
je
xlat
sub
in
jl
and
jns
mov
mov
xor
jmp
sub
xchg
mov
sub
mov
loopne
sub
push
push
pop
mov
inc
stos
add
gs
and
lret
ret
sub
clc
add
in
test
mov
mov
sbb
ljmp
addl
mul
mov
dec
int
sub
subb
mov
lock
cltd
pop
mov
push
jp
and
xchg
rclb
and
sub
add
cld
or
mov
outsl
cmp
push
add
or
cmpl
mov
jmp
pop
push
sbb
das
cmpb
cmc
sbb
int3
mov
mov
xor
jo
mov
rol
push
cmp
lahf
xor
add
subl
pop
dec
dec
push
sub
cmpsl
and
ja
loope
push
xchg
js
enter
cli
push
shlb
cwtl
imul
xor
and
and
dec
sub
sub
int3
mov
xchg
in
mov
sub
xchg
adc
cmc
jae
mov
xlat
push
insl
scas
jmp
inc
cltd
into
ljmp
xlat
mov
inc
and
mov
lret
out
in
and
or
mov
fldl
dec
sub
jnp
sub
jp
mov
jg
sbb
xchg
popf
in
or
fildl
push
scas
scas
fildll
add
leave
xchg
int3
lods
cmpsl
sub
pusha
pop
ret
xchg
jbe
aam
int
sub
es
repz
add
mov
icebp
loope,pn
aam
xchg
sub
mov
jae
sbb
sub
inc
rorb
les
sub
repz
mov
pop
inc
fldl
shrl
cwtl
lret
xchg
cld
sub
add
sub
nop
dec
scas
repnz
adc
sub
push
lods
pop
cmc
sub
test
in
lds
sub
sub
cmc
adc
cld
sub
adc
sub
stos
sub
inc
or
push
das
xorl
xchg
stos
sub
mov
adc
imulb
sub
push
add
cli
sbb
hlt
iret
sub
jno
and
pop
xchg
stc
mov
out
ds
das
mov
xchg
addb
mov
into
in
movsl
repnz
push
sbb
sahf
mov
adc
and
ret
dec
sub
outsb
pop
stc
inc
sub
inc
insb
scas
sub
sbb
xor
lds
mov
call
push
add
dec
mov
fildll
fstps
mov
sub
dec
es
shrl
mov
gs
jp
add
cmp
mov
and
sub
in
cmp
mov
sub
pop
adcb
iret
out
mov
jle
shlb
jbe
aam
sub
sbb
gs
adc
xor
push
and
pop
sub
iret
push
or
push
test
sub
xchg
dec
pop
adc
mov
mov
movsl
pusha
lds
std
fstpl
cs
sub
push
fwait
cmc
mov
daa
aaa
repnz
subl
xchg
xlat
xor
sub
xchg
add
sbb
push
je
dec
push
call
push
and
repnz
jmp
ljmp
pop
in
aam
mov
daa
add
ljmp
push
lret
jge
rcrb
into
xor
and
in
aam
stos
lock
sub
loop
ret
xchg
stos
adc
fisubs
testb
int
push
sub
mov
subb
shrb
sub
sbbl
mov
clc
jecxz
pusha
adc
mov
insl
sbb
xor
xor
or
test
out
subl
ljmp
test
cmpsl
data16
pusha
test
jno
sub
cmp
push
jp
lods
inc
xchg
mov
ljmp
dec
outsl
xchg
jbe
dec
dec
mov
pop
cltd
or
popa
fstps
dec
push
or
negb
cld
pop
push
call
pusha
mov
or
push
cli
cvtps2pi
add
sub
xchg
mov
fidivl
xor
jp
adc
mov
imul
subb
dec
lock
fucomp
in
jo
lea
jmp
pop
adc
xchg
ja
imul
out
sub
and
cwtl
imul
notl
add
push
xor
jno
jecxz
xchg
jb
shrb
cld
and
push
lret
jno
cmp
mov
sub
adc
lret
inc
mov
aad
xor
les
jg
cld
movsl
mov
xchg
push
in
add
xchg
dec
fisubs
cmp
mov
in
cmp
mov
subl
pop
std
sarl
pop
popf
sub
sub
dec
fists
in
push
dec
repnz
stos
jae
pop
sbb
shlb
aas
inc
sub
dec
repz
xor
std
outsb
mov
pop
sub
pushf
adc
jnp
lea
out
mov
mov
xor
and
cmp
shrl
sbb
out
sub
inc
cmpsb
ret
ds
jge
in
imul
lahf
imul
sub
ja
add
sub
sbb
cmp
push
lods
addr16
push
in
and
jecxz
test
dec
push
mov
adcl
jbe
cmpsb
imul
rcll
cmp
add
lds
popf
lahf
stos
sbb
mov
adc
add
shrl
lds
add
sub
sub
xor
xchg
add
and
adcl
repnz
jmp
xchg
stc
out
xchg
inc
sub
dec
or
in
xchg
and
sub
inc
mov
test
or
je
hlt
les
mov
sub
nop
adc
insb
xor
mov
xor
and
push
jg
cld
lea
mov
sub
loop
out
add
gs
mov
rorl
sub
mov
add
imul
xchg
pushf
sub
fisubrs
mov
loop
hlt
cmp
sub
push
or
lods
sub
lds
scas
push
sub
nop
xchg
int3
andl
mov
pop
out
imul
stos
push
stc
push
jbe
mov
jno
in
sub
mov
iret
adc
or
push
int3
cmpb
adc
and
pusha
jl
icebp
jmp
arpl
sub
and
add
add
rclb
fwait
mov
add
sbb
lods
add
adc
fsubrs
out
pop
mov
cltd
movsl
es
cmp
jecxz
cmpsb
sub
cmp
pop
fildll
add
fisubrl
aas
xor
and
add
ljmp
aam
sub
sahf
incl
sbb
popa
jmp
shrb
inc
push
jb
and
cmp
nop
jecxz
sub
test
das
lcall
sub
and
pop
mov
inc
cmp
nop
sub
sbb
add
pop
or
xor
lret
jecxz
xchg
sub
dec
addr16
push
mov
sbb
movsb
sub
jo
aas
fs
cld
sub
xor
push
adc
jo
flds
sub
pop
nop
dec
insl
lock
sub
mov
sbb
stos
mov
sub
jns
arpl
mov
popl
or
cmp
loope
and
mov
ss
cmpsl
push
sbb
jp
pop
adc
sub
ficompl
pop
sub
sbb
push
lahf
sub
xchg
aas
push
mov
mov
sub
jb
lcall
ds
adc
sub
sub
jmp
icebp
sub
xor
pop
sub
dec
jb
sub
js
xchg
sub
pop
nop
sub
or
pop
out
xchg
push
push
xchg
sti
mov
out
xchg
lret
addr16
in
gs
sub
sbb
or
int3
call
push
and
push
sub
xor
fsubp
cmp
inc
dec
pop
mov
sbb
insl
ret
add
dec
aaa
fisubrs
mov
push
imul
in
jmp
mov
outsb
mov
sub
negl
mov
dec
xor
cmp
mov
test
sub
sbb
cmp
pop
sub
jbe
pop
push
cmp
ljmp
cmp
pop
sub
xorps
sub
dec
inc
data16
imull
lcall
bound
mov
mov
sub
cmp
push
jmp
pop
xor
out
push
adc
inc
push
sub
sub
call
out
sub
sahf
aam
sub
jecxz
push
ds
sti
sahf
sub
jl
scas
data16
and
pop
out
mov
xchg
inc
mov
sub
fstps
sub
adc
ss
xchg
arpl
and
inc
push
das
pop
sub
xchg
js
adc
rcr
inc
sub
mov
and
sub
xor
rorb
dec
cmp
sub
enter
sub
fdivrs
sub
jo
fisttpll
in
cld
fidivrs
sub
mov
int
lds
sub
jl
mov
dec
cmp
pop
stc
stos
xchg
dec
adc
insb
push
mov
jnp
cmp
fcomps
fdivrp
jne
mov
int3
mov
daa
jle
pop
sub
jp
dec
adc
push
test
sub
ljmp
std
jecxz
mov
dec
pushf
sub
jnp
cmp
sub
js
fidivrs
sub
pop
jmp
imul
pop
cmpsl
hlt
inc
jne
outsl
sahf
int3
and
sub
sar
pop
xor
mov
imul
mov
or
inc
and
out
add
addr16
mov
sbb
sub
or
das
lret
fisubrl
jl
insl
cmpsb
push
cmp
nop
cmp
add
sub
mov
pop
lds
dec
xchg
cltd
push
cmp
add
jae
sub
in
hlt
mov
test
and
xchg
arpl
sub
jno
out
scas
xor
imul
sub
int
adc
cmp
jmp
fistps
out
mov
aam
daa
aad
lock
jo
sbb
incb
jmp
sub
mov
dec
es
cmp
mov
xchg
in
jnp
lea
lcall
cmc
sahf
or
mov
sub
sub
fcoms
add
pop
cwtl
cmp
xor
mov
imul
lret
fnsave
fmull
cmpl
sub
lret
setle
adcl
fsubs
cltd
mov
fnstenv
inc
sub
mov
add
lock
mov
xchg
sub
icebp
pop
jae
in
xchg
inc
aad
inc
sub
std
mov
mov
mov
out
iret
push
loope
jle
push
fsubrl
pop
push
xor
sub
adcl
and
cmc
sub
pop
inc
mov
push
insb
sub
mov
sbb
les
push
and
shlb
in
cmp
pop
ss
loopne
mov
cmp
adc
add
fmulp
push
sub
dec
inc
daa
xchg
adc
ja
or
xchg
adc
ret
mov
push
jle
rcl
push
cwtl
lahf
iret
mov
or
sbb
push
imul
mov
mov
push
xor
jno
fidivrs
mov
sub
jb
insl
jne
add
jle
icebp
sub
bound
int
jne
das
mov
jmp
mov
andb
cs
fidivs
add
add
fdivrp
out
testb
dec
mov
gs
sub
outsb
sub
call
shl
movsb
popf
cmp
push
sub
or
xor
dec
and
mov
dec
or
xchg
sbb
ja
jbe
ret
gs
sub
mov
repz
and
jbe
cmp
sbb
clc
pop
addr16
mov
ss
gs
mov
sub
fistps
fcmovnbe
addr16
cmp
mov
sbb
xlat
pusha
ljmp
shrl
xchg
xchg
ds
inc
push
xor
aaa
scas
and
xchg
sub
scas
add
pop
pop
out
outsl
sub
and
cmpsb
sub
jecxz
cmc
adc
add
fwait
mov
inc
inc
or
adc
xchg
and
cmp
and
adcl
fdivl
inc
mov
mov
inc
sbb
xchg
inc
push
xchg
ret
insb
sbb
out
mov
or
sub
mov
mov
pusha
scas
sub
cmp
sub
push
mov
dec
incb
pop
iret
push
xor
sbb
stc
sbb
adcl
jnp
sub
add
mov
sub
and
push
inc
sti
sub
push
push
push
out
cmpsb
and
cmc
jns
int
cmp
pop
sub
jae
scas
popa
xchg
xchg
sub
mov
icebp
pushf
mov
jmp
int
lock
push
ret
fildl
loop
cmp
aam
loopne,pn
test
xorb
push
mov
xchg
xor
int3
jb
push
mov
dec
xor
out
adc
sahf
push
imul
fsubrs
xlat
xor
lea
jmp
aas
mov
sub
mov
push
ja
mov
jne
pop
inc
repnz
int3
cmp
sub
and
jl
sub
mov
cmp
lds
cltd
ss
xchg
mov
sub
sub
aaa
dec
or
sub
test
mov
jecxz
out
jb
inc
xchg
ljmp
movsb
imull
dec
aaa
into
push
xor
sub
adc
mov
sub
mov
sbb
and
stos
int3
aam
sbb
sbb
hlt
sub
xlat
jmp
xorb
and
jns
lea
shr
mov
jb
lcall
adc
repnz
push
and
add
lret
cmpsb
push
mov
addr16
pop
inc
dec
cltd
imul
sbb
lret
lahf
mov
cmpsb
sub
int
mov
inc
jecxz
xchg
cld
xor
sbbl
or
sub
aad
cmp
sub
and
gs
fmuls
das
sarl
xchg
or
es
sub
xchg
xchg
sahf
pop
sub
sbb
jecxz
sub
add
cmp
pop
cvtpi2ps
hlt
sub
inc
cmpsl
add
inc
sbb
cmp
jge
xor
or
lahf
adc
push
aas
sub
jp
scas
xor
xor
dec
gs
inc
cmp
fldl
shl
adc
test
cmp
and
fyl2x
sub
jmp
dec
push
pop
ja
lods
push
xchg
sub
sub
lock
mulb
insb
or
popa
jb
les
fldl
mov
clc
test
dec
push
xchg
int
push
add
fcmovne
sub
xchg
and
fstl
push
gs
mov
rcrb
or
stos
xor
pop
fsubl
cld
pop
ljmp
cmpl
sub
aas
cmp
sub
notb
movsl
dec
in
inc
and
sub
sub
sbb
cmp
sub
mov
dec
shrb
ffreep
xchg
pop
sub
dec
in
inc
test
lods
enter
scas
cs
pop
popa
fisubrs
dec
pop
ret
int
sub
jp
repz
sub
push
inc
outsb
shrl
notl
outsl
dec
pushf
mov
gs
sbb
repz
shrb
xor
test
lcall
gs
inc
push
sahf
sub
mov
push
loope
int
adc
imul
push
dec
sub
push
sahf
cmp
xor
or
stos
inc
stos
in
stos
sub
mov
int
xchg
scas
aad
cmp
fmull
jne
into
jb
sub
adc
or
adc
int
roll
push
adc
mov
sub
pusha
xchg
xchg
jmp
adc
shl
lret
sub
mov
sub
shl
cmc
push
stos
dec
add
dec
sub
cmp
or
or
dec
icebp
jno
sub
pop
cvttps2pi
in
mov
sub
shll
cmp
pop
xor
cli
inc
ret
jecxz
out
scas
lahf
lods
popf
sub
in
mov
daa
insb
lcall
sbb
in
aaa
mov
mov
sbb
out
push
mov
gs
sub
add
mov
sbb
loopne
sub
mov
xchg
sbb
rcll
sub
ret
adc
lods
xchg
mov
and
sbb
out
adc
dec
test
xchg
add
or
adc
adc
int3
sub
imul
mov
inc
add
pop
xor
arpl
pushf
add
sub
iret
push
mov
mov
ficompl
sub
inc
push
mov
sub
sbb
mov
dec
push
in
ret
lds
sbb
mov
xor
fwait
xchg
imul
mov
test
mov
hlt
sub
and
in
adc
adc
les
pop
push
inc
jp
add
inc
pop
xchg
dec
xor
adc
push
pop
mov
cli
pop
ret
sbb
iret
xchg
or
hlt
sub
jmp
inc
mov
aad
sbb
sub
dec
jmp
ret
rcrb
sub
js
mov
or
leave
mov
mov
addb
inc
pop
cli
in
sbb
pusha
cmc
lods
lret
sub
cli
clc
or
in
xor
addr16
aam
inc
sub
fistps
inc
mov
test
es
fs
jecxz
int3
mov
pop
jno
sub
out
sub
adc
fcoms
mov
xor
popf
es
push
inc
xchg
or
ljmp
in
pop
xchg
xchg
repnz
fisttpll
sub
sub
push
in
gs
add
and
pop
addl
mov
stos
jo
or
jb
sub
mov
adc
pusha
push
aas
or
sub
inc
out
dec
xor
mov
mov
inc
push
bound
inc
sbb
int
mov
sub
enter
fldl
inc
scas
icebp
mov
mov
adc
out
adc
rcll
test
cmp
or
adc
adc
mov
push
test
xor
sar
imul
add
je
cmpsb
mov
lahf
ds
push
xor
adc
cs
sbb
push
cs
lods
sub
movsb
out
mov
mov
and
dec
add
daa
cvtps2pi
fadd
add
pop
and
aad
sub
add
sub
cmp
sub
popa
mov
mov
add
fbstp
arpl
dec
xchg
imul
xor
rcrb
dec
sbb
int
loop
cmp
iret
es
outsb
in
dec
sub
js
push
xchg
jae
daa
cmp
xor
adc
fisubl
mov
sub
sub
pop
push
cmpsl
jge
xchg
scas
in
js
sub
add
mov
push
in
or
test
xlat
cmp
mov
mov
jno
mov
sub
push
and
imul
or
mov
cld
fsubrl
test
xchg
sub
inc
inc
mov
pushf
mov
subb
push
xchg
push
dec
sbb
sub
jge
add
pusha
xchg
hlt
mov
imul
and
mov
iret
xchg
mov
popa
push
mov
jecxz
sub
stos
or
in
cmp
sub
mov
fs
pop
add
aaa
je
and
and
adc
sub
sbb
stos
insb
mov
iret
jnp
popf
xor
push
add
push
je
popa
ficompl
jmp
cvtpi2ps
sub
aam
add
xor
cmp
cmp
sub
add
pop
stos
sub
inc
jecxz
cltd
sub
jns
out
push
sub
mov
dec
ficomps
cmp
xor
lods
movsb
and
subb
js
jne
shrl
movsb
clc
mov
push
ficoms
cmp
loope
pop
addr16
inc
dec
push
sub
push
xor
lcall
inc
mov
and
sub
out
inc
ficompl
test
dec
mov
gs
xor
addr16
imul
and
mov
pop
jae
jb
add
pop
mov
sub
addr16
pop
sub
repz
pop
fstps
mov
push
sub
mov
mul
sub
hlt
mov
mov
lahf
scas
xchg
adc
pop
lock
xor
pop
orl
push
aam
fmuls
adc
sub
fildl
sub
jmp
out
mov
lea
jns
imul
adc
aad
sbb
stos
inc
sub
push
loopne
mull
jb
test
stos
adc
scas
les
mov
in
dec
ror
lcall
clc
mov
lcall
jnp
lret
inc
sbb
lea
mov
sub
fs
mov
mov
ss
aad
cs
and
les
cs
aad
and
dec
in
xchg
mov
push
int
mov
fcoms
sbb
fwait
or
sub
mov
cmp
sub
cmp
push
lret
pop
fsubs
addl
mov
jo
aas
pop
fistps
imul
jae
nop
in
push
jno
mov
aam
push
sub
adc
sub
jp
rcrb
mov
jb
das
mov
xor
loop
sub
pop
repz
jle
ja
pop
and
or
push
xor
shrb
lods
mov
push
les
nop
jne
inc
out
sub
das
sub
test
pop
sub
push
jbe
loop
jno
sahf
gs
sub
decb
data16
sub
insl
dec
test
mov
lds
sub
sub
dec
mov
mov
sarl
add
outsb
flds
mulb
xor
mov
and
addl
outsl
call
lods
fldt
jae
sub
stos
testb
fbstp
mov
xchg
dec
sub
outsb
jg
fidivrl
fistpl
sub
mov
mov
repz
dec
hlt
xchg
jle
daa
add
sbb
sub
jno
cmp
sub
sahf
out
shrb
in
and
sbb
mov
out
daa
jb
xchg
inc
insl
xor
adc
test
push
xchg
mov
cltd
in
push
call
cmp
outsl
mov
scas
sub
addr16
pop
cmp
iret
ficoms
jle
and
sub
or
mov
int3
xchg
cld
sub
fucomp
arpl
jmp
jno
sub
das
sub
shlb
pusha
or
lods
hlt
sub
cld
cmp
and
or
les
faddl
sub
xchg
dec
push
test
imul
xchg
lea
pop
out
add
sub
sbb
mov
in
jno
xchg
hlt
inc
cmp
add
or
push
scas
aad
pop
sub
outsl
sub
and
stc
sarl
adc
sub
fdivs
lea
xor
dec
or
popf
fsubrl
sub
jb
xor
or
add
in
imul
dec
xor
add
fstl
jecxz
jo
les
sub
xchg
mov
in
add
sub
loop
aam
sub
xor
lods
pop
dec
test
test
ds
mov
dec
jmp
movsb
scas
mov
scas
adc
sub
testl
cli
or
xor
aad
outsb
jne
sub
gs
adc
jo
sti
into
stos
fsubrp
in
ds
dec
arpl
int
sub
cmp
test
xor
mov
test
pop
cltd
dec
inc
xchg
mov
stc
sub
mov
xchg
aaa
add
sub
test
xchg
sub
inc
in
jb
pop
sub
fwait
movsl
addl
test
fidivl
cmpsl
xor
inc
call
mov
mov
lret
loop
pop
outsl
sbb
pop
test
sub
daa
adc
sub
repnz
and
add
xor
popa
xor
dec
jo
sub
rclb
xor
leave
ret
in
lcall
inc
or
and
loopne
inc
or
push
sub
cmp
inc
subb
pop
imul
adc
mov
clc
jge
jle
sub
arpl
inc
sub
negb
sub
cmp
sub
adc
movsl
sub
xor
fildl
xor
lock
mov
flds
in
push
jno
push
sub
ljmp
push
sub
or
stos
xchg
sarl
jle
sub
xorl
sti
clc
aaa
or
or
std
out
xor
push
aas
mov
sub
and
mov
pop
push
sbb
pop
sub
pusha
rolb
and
fnstsw
xor
imulb
cli
pop
cmpsb
or
sub
xchg
xor
inc
sti
sar
xor
daa
mov
mov
or
cmpsb
movsb
pop
out
leave
icebp
orl
push
dec
stos
jno
test
iret
fildl
add
inc
cli
das
and
and
mov
nop
or
push
and
adc
dec
sub
xor
push
sub
or
ret
sub
and
loopne
ds
sub
out
sub
push
sahf
js
sub
aam
call
shrl
fidivl
pop
lret
fbld
pop
iret
int3
xor
cmovnp
or
adc
jne
loopne
scas
sbb
dec
jecxz
mov
cmp
test
outsb
pop
movb
adc
sub
pop
pop
ja
mov
mov
movsl
sub
and
adc
shll
std
repz
inc
mov
sub
jge
jl
xchg
lods
decb
inc
or
addr16
sub
in
andb
cmp
xchg
adc
add
into
scas
lret
test
cmp
outsl
aam
add
dec
adc
cmpsb
mov
iret
adc
push
arpl
dec
fbstp
sbb
ljmp
xchg
ljmp
int
adc
daa
sub
imul
hlt
insb
std
pop
dec
loopne
and
and
sub
xor
add
out
shlb
sub
xchg
xlat
outsl
xchg
mov
fcoml
dec
in
jg
sub
push
inc
ficoml
mov
nop
dec
mov
sub
ret
fwait
xor
mov
mov
mov
pop
insb
jnp
sub
sub
pop
sbb
xor
adc
mov
mov
or
fcoml
pop
sub
iret
shrb
inc
lea
jmp
push
sub
dec
push
sub
hlt
fcmovne
sub
adcb
pop
xchg
sub
push
mov
out
daa
mov
loop
test
fldcw
and
mov
orb
jae
shrb
push
int
movsb
outsb
mov
add
sub
roll
adc
xchg
adc
jmp
adcb
dec
mov
iret
pop
incl
push
sub
ficoml
mov
add
cmp
cmp
mov
sub
xchg
cmp
imul
sub
add
sub
rorl
inc
push
sub
outsb
je
and
jb
test
leave
or
xor
sbb
aad
inc
sub
push
lds
mov
mov
sub
movsb
pushf
pop
xor
out
dec
aam
cli
dec
adc
ljmp
xchg
adc
or
push
lcall
sub
dec
ss
push
jmp
xor
movb
es
dec
popf
or
fwait
adc
jno
add
cmpsb
sub
jp
stos
sti
sub
or
imul
xlat
sbb
movb
clc
les
cs
addr16
dec
sub
sbb
enter
movl
mov
add
and
sub
lret
sub
dec
jecxz
shrb
in
es
adc
int
xchg
mov
leave
cmp
xchg
and
lcall
push
adc
cmp
stos
icebp
cmpsl
imul
int
push
jo
sub
xor
dec
lret
arpl
mov
sub
dec
mov
push
xor
mov
rolb
mov
add
fldl
pop
icebp
and
pop
sbb
or
sub
stc
xchg
cmp
out
cs
shlb
xorl
jnp
and
mov
cs
sti
sub
cmp
push
movsb
sub
jno
ljmp
test
pop
jp
pop
push
sub
or
ja
fdivr
sub
jno
daa
into
xchg
dec
bound
jne
lret
sub
lea
fiadds
lds
int3
sub
jge
dec
sub
sub
js
mov
mov
jmp
popf
lahf
jl
xor
pop
adc
call
sbb
aam
mov
insb
sub
sbbb
test
rorl
cli
sub
mov
repz
sub
loopne
outsb
popa
pop
xor
inc
stos
sub
pop
push
xor
mov
int3
or
mov
ret
sub
in
xlat
cmp
xchg
mov
push
and
jge
mov
xchg
mov
jmp
cmpsb
je
lea
pop
lahf
out
mov
inc
cmpsb
mov
sub
cmp
pop
sub
scas
jno
stc
sub
pop
jae
and
into
xchg
insb
mov
cmpsb
dec
mov
sub
arpl
imul
sub
xchg
mov
sub
shr
fisubrl
jmp
out
add
shrb
mov
jp
adc
mov
xor
out
cld
mov
and
xchg
and
mov
cli
lret
insb
or
sbb
test
fs
fsubrl
gs
push
adc
je
add
ret
or
sbb
mov
add
push
dec
inc
jnp
repz
xorb
sub
clc
popa
divb
sub
out
or
dec
fldcw
fnsave
adc
sub
loopne
sbb
sub
js
das
xchg
sub
bound
lods
xlat
pushf
aaa
xchg
inc
mov
adc
push
mov
jmp
sub
test
fists
xor
les
push
cmp
jne
stos
adc
in
aam
and
sub
scas
imul
fsubrp
sub
lock
lea
in
data16
and
and
sub
sub
ret
or
sub
fldenv
and
push
jle
jl
sub
pushf
in
sub
mov
mov
rolb
stos
enter
jno
inc
dec
pop
andl
adc
or
fidivs
in
push
leave
dec
scas
aas
movsl
cmp
dec
sbb
push
pop
pop
sub
adc
pop
movl
pop
sub
pop
or
aas
daa
mov
xchg
xor
xlat
or
out
jmp
sub
mov
jns
pmuludq
jmp
ret
jg
sub
std
pop
xor
in
loopne
and
fsubrl
xchg
and
subb
rcrb
sub
imul
push
ss
scas
aas
test
shl
sub
jo
out
jg
push
and
jecxz
and
clc
in
jnp
fs
dec
xchg
sti
mov
dec
aad
imul
out
fdivs
cs
in
pop
sub
lretw
mov
xchg
cltd
sbb
ljmp
sub
dec
mov
add
pop
loope
and
push
sub
dec
les
pusha
pop
xor
lock
imull
pop
sub
lret
insb
sub
sub
add
aas
sub
loop
mov
mov
gs
hlt
nop
sbb
mov
scas
inc
sub
jecxz
or
sub
dec
sbb
xor
shl
bound
out
xchg
xchg
es
pop
sbb
arpl
subl
ja
or
mov
cli
ficoms
jp
test
push
sub
add
decb
jno
and
and
mov
lds
fsts
insl
rorl
inc
adc
sbb
imull
int
jne
cmpsb
bound
inc
pusha
adc
sbb
push
fsubrs
sub
inc
scas
fdiv
pop
decb
sub
repz
xor
push
dec
mov
sub
cwtl
popf
loopne
or
daa
mov
cmp
sub
lea
dec
pop
mov
xor
stos
adcl
lods
xchg
add
jo
inc
sub
repz
or
mov
or
push
popa
pop
sub
iret
jle
mov
add
inc
lods
shl
or
das
cmp
fsubrp
lods
sbb
jns
inc
sbb
sub
xor
aam
mov
inc
popa
mov
js
sahf
lea
scas
xor
or
cmp
rorb
lods
das
adc
mov
and
dec
outsl
lds
ret
jp
daa
sub
cld
sub
sar
bound
lock
inc
push
jb,pn
aaa
dec
sub
cltd
xchg
imul
sub
push
sub
insb
fcoml
adc
and
hlt
sbb
loope
and
and
ret
sub
sub
push
mov
xchg
or
xchg
ljmp
sti
daa
aas
cmp
fnstsw
adc
inc
adc
psrad
idivl
lahf
xor
cmp
adc
insb
sub
jnp
sub
loope
xor
sahf
pusha
sub
popa
mov
or
xchg
sub
ds
add
lds
mov
or
mov
jae
sub
sbb
es
int
jge
add
std
lea
and
add
lods
xor
adc
push
xchg
aaa
sub
sub
shlb
pushf
inc
das
adc
pop
and
jmp
push
in
push
xor
cli
sub
data16
sbb
iret
rol
ljmp
push
mov
lock
sub
popf
iret
dec
gs
fiadds
sub
and
jge
vandnpd
cltd
cmpb
add
jge
push
aaa
fsts
ljmp
test
mov
jl
sbb
aad
cli
sahf
cmp
testl
sbb
outsb
sub
adc
cltd
and
mov
sub
xor
outsl
mov
sub
sti
mov
pop
cmp
push
movsb
cmp
and
cld
mov
add
xchg
add
dec
lcall
sub
or
daa
aam
loopne
sub
cmp
int3
push
xchg
adc
int
sub
fldcw
jg
lret
adc
mov
xor
std
test
mov
mov
aaa
mov
sbb
pushf
cmp
jmp
cs
fs
je
push
sub
sub
add
xchg
jg
fcoms
addr16
sub
dec
mov
test
sub
xchg
stos
xor
js
xor
cli
xchg
sub
hlt
pop
jge
sub
out
or
cmp
push
out
mov
lods
roll
sub
js
ja
sub
pop
mov
gs
adc
pop
jns
adc
cs
jge
xor
ljmp
and
mov
in
out
push
sub
and
lock
sub
add
pushf
shrl
xchg
sub
adc
sarb
repz
vmovq
xor
out
adc
ds
shrb
sub
in
xchg
push
test
test
shrl
aad
cmpsl
pop
and
and
sbb
std
sbb
and
mov
push
mov
cmpsl
and
stc
lret
sub
ja
mov
in
xchg
or
mulb
dec
rcl
jne
and
sbbb
cs
call
dec
shrl
sub
mov
outsl
fs
lds
jno
xor
or
mov
in
lods
rcll
jg
std
in
xchg
jmp
mov
pop
fxch
sub
or
lds
outsb
xor
and
push
test
cwtl
push
ss
nop
inc
daa
sbb
xor
sar
lret
fisttpll
cmp
lock
sub
leave
inc
mov
scas
xor
and
xchg
test
inc
in
sub
out
xchg
movsl
mov
or
sub
fdivrl
mov
sbb
dec
mov
jno
or
sub
push
jns
inc
sub
jg
cld
les
repnz
arpl
in
sub
das
ljmp
sub
mov
mov
sub
sub
into
adc
fsub
jecxz
sub
dec
cli
jnp
adc
jle
ret
lods
stos
mov
xchg
adc
inc
leave
or
in
into
or
inc
and
dec
cmpsb
mov
ret
in
shrb
je
aad
test
cli
mov
stc
adc
sbb
adc
ljmp
mov
inc
jge
sub
xchg
inc
int
sub
dec
add
add
add
pop
jmp
test
outsb
sub
pop
les
mov
dec
lds
int
lcall
push
pusha
add
jb
xchg
adc
push
add
ljmp
push
sub
arpl
jecxz
movsb
inc
shll
adc
scas
std
imul
sbb
int3
push
mov
adc
mov
xchg
sub
mov
rcr
adc
repnz
imul
into
cwtl
mov
xchg
xor
sub
dec
in
iret
and
xchg
daa
addr16
xchg
add
lock
pop
xchg
sub
decl
cli
sub
pop
mov
pop
inc
pop
jb
dec
movsl
lods
sahf
push
adc
add
je
inc
sub
sarl
mov
pop
sub
dec
xchg
rcl
sub
mov
pop
ljmp
inc
or
jmp
fsubl
ret
adc
shll
jmp
inc
sub
iret
stos
call
dec
mov
sarb
out
adc
push
xchg
int
stos
pop
pop
sub
adcb
add
sub
mov
cmp
subl
addr16
fs
mov
jo
sarb
adc
pushf
fisubs
ror
jecxz
fcmove
sub
mov
push
fsubrs
dec
xchg
add
or
es
mov
pop
xchg
sub
loopne
sti
bound
sub
inc
or
push
int3
push
cmp
xor
cmp
pop
mov
sub
mov
push
int
loopne
fstps
sub
sub
xlat
sbb
xor
xor
inc
mov
add
pop
mov
mov
ljmp
sub
jp
lds
sub
sti
ja
mov
mov
les
jmp
and
dec
mov
scas
jb
fcoml
jmp
push
inc
mov
inc
inc
xchg
popa
fucomp
jno
sub
push
mov
xor
loope
cld
ret
insl
mov
mov
sub
xchg
lret
aas
mov
jmp
bound
mov
mov
or
add
movsb
faddp
pop
inc
mov
jecxz
das
dec
jl
sub
pop
js
and
out
mov
into
pop
cmp
sub
stc
mov
insb
mov
fistpll
cld
test
dec
mov
loopne
popf
jg
shlb
sub
xchg
mov
sub
jmp
push
repz
sub
outsb
cli
pop
sub
out
pop
cs
aam
ss
inc
sbbb
jl,pt
mov
sub
sub
cmp
xlat
pop
std
out
sub
sar
repnz
jge
sbb
lea
mov
sub
lods
sahf
xor
cs
or
mov
cmp
cmp
sub
leave
push
test
mov
adc
sub
in
cmpsb
sub
scas
insl
rcll
mov
int
in
sbb
nop
das
sub
mov
sbb
scas
fbstp
mov
inc
sub
sub
cs
cltd
fadd
negb
or
dec
push
push
int
and
jle
loopne
xchg
sub
jb
pop
mov
xchg
jle
addr16
mov
pusha
loopne
outsl
sbb
dec
cmp
and
push
bound
ret
mov
stos
out
loope
pop
xchg
xor
adc
lahf
adc
stc
fisttpll
into
adc
loopne
inc
jnp
mov
sub
xor
mul
sub
popa
sub
loopne
mov
and
adc
jmp
jl
cmc
cmp
lcall
jae
mov
xchg
fcoml
sub
les
leave
and
mov
add
popf
in
repnz
int3
xor
lret
sub
scas
gs
sub
push
outsl
pop
lods
sub
int3
das
push
sub
cli
leave
cmp
sub
imul
popa
or
xor
lea
mov
dec
mov
sub
push
cmp
sub
repnz
jl
sub
and
push
dec
push
mov
sub
sub
cltd
mul
test
mov
mov
or
ss
test
sub
xor
pop
sub
jb
enter
cmpsl
cld
scas
movsl
adc
xchg
sub
push
and
inc
lock
adc
aaa
and
or
push
or
mov
popa
daa
and
jb
in
ljmp
xorb
xor
sub
jmp
test
ret
loop
lock
or
xchg
jne
mov
fisubl
push
addb
sub
xor
ds
lret
sub
mov
outsb
sub
into
addr16
sub
and
push
push
pop
and
sub
insl
mov
jle
mov
add
hlt
sub
fidivrs
stc
fsubs
pop
inc
lock
xchg
aam
sub
lret
pop
pop
clc
ljmp
aad
xchg
inc
sub
or
int
loope
in
popa
cmp
sub
rcrb
inc
pop
push
imul
imul
ljmp
sub
and
xor
xor
mov
scas
gs
jns
xor
mov
loopne
cli
and
inc
mulb
icebp
jmp
stos
add
push
inc
sub
arpl
out
mov
mov
dec
inc
sub
xor
loop
pop
test
adcb
ds
sub
dec
sub
out
or
rcr
jno
mov
enter
sub
sub
push
lret
fldcw
enter
jb
sub
lods
or
inc
mov
sub
mov
int
lret
int3
mov
sub
sbb
add
repz
notb
pusha
push
sub
and
pop
mov
shrl
shr
nop
loop
sub
popf
mov
inc
ja
pop
mov
out
sub
xor
pop
sbb
dec
lods
test
jp
push
sub
pop
adc
mov
repz
lds
pmullw
roll
inc
mov
ss
jns
dec
jmp
fisubs
sbb
xor
and
cmp
mov
out
add
jns
jl
jle
loopne
jge
aad
xchg
pop
adc
daa
xchg
mov
push
push
xor
or
sub
jnp
cmp
aam
ffreep
test
lret
in
nop
sub
outsl
jle
pop
xor
cmpsb
cmp
cld
xor
in
adc
sub
inc
xor
out
sub
xchg
cmp
push
pusha
cmpsl
into
inc
sub
jg
rorl
bswap
sub
push
mov
out
sub
mov
sub
push
sahf
and
nop
mov
sub
jmp
out
sbb
push
xor
or
ljmp
sub
ss
in
in
mov
mov
rclb
les
pop
xrelease
xor
lahf
push
jns
pop
test
sahf
lock
mov
xor
sbb
test
xchg
mov
outsb
stos
or
mov
in
sub
pop
sub
fnstcw
mov
cmc
movsb
mov
push
fistl
out
jae
and
nop
sub
lahf
es
push
sub
cs
push
shrb
sti
out
lret
in
push
sub
test
dec
fists
cwtl
jnp
jne
fs
pop
mov
or
imulb
imul
push
dec
sub
push
lea
pop
enter
cmpsl
push
ljmp
aas
sub
lods
ficoml
pop
push
jne
rcrl
xor
xor
sti
push
mov
pop
insb
mov
sub
or
lea
leave
fwait
daa
fildl
decb
pop
mov
mov
scas
xchg
mov
mov
movsl
sub
fnstenv
es
mov
cmp
mov
xor
mov
add
mov
mov
insb
cmc
xor
ljmp
add
sub
leave
lds
and
push
nop
inc
xchg
mov
sub
stc
push
fwait
lcall
ds
cmp
fucom
loop
and
popf
sub
stos
or
out
or
ljmp
sub
in
lods
mov
clc
int3
pop
leave
adc
push
push
cmp
cs
inc
xchg
insb
mov
mov
sti
xchg
lcall
inc
loope
mov
inc
adc
lea
sub
pop
pusha
hlt
fcoms
lock
std
dec
add
cmpsl
sub
sub
ljmp
mov
xchg
push
fbstp
mov
loope,pn
cmc
sub
jp
mov
out
push
out
fnstcw
dec
jmp
sub
fbstp
nopl
sub
mov
inc
std
stos
mov
adc
or
push
aas
insb
sub
add
sub
jo
gs
mov
mov
lods
fmuls
test
mov
add
ret
mov
sub
dec
jmp
xor
pop
repnz
ja
shll
sub
out
sbb
rorb
mov
mov
push
mov
sub
push
jbe
ja
shr
sub
push
sub
lods
mov
cmpsl
mov
bound
ljmp
mov
sub
sbb
cmp
mov
rclb
mov
lret
jb
stos
cs
sub
out
sub
out
sub
negb
xchg
and
and
sub
pop
inc
shrb
shll
adc
mov
test
pop
push
sub
or
dec
push
hlt
push
jle
sub
in
pop
or
scas
sub
lahf
out
sub
repz
and
outsb
stos
push
ret
inc
xchg
int
push
pop
sub
daa
sub
sbb
lock
jns
pushf
imul
pop
inc
sub
rorl
in
sub
inc
xchg
jecxz
and
inc
dec
mov
scas
in
cmp
inc
outsl
sahf
sub
dec
sub
mov
cmp
cmp
push
testb
sub
sub
pop
gs
test
into
pop
subb
cld
xchg
mov
and
arpl
lahf
mov
sub
push
sbb
das
faddl
push
sub
pusha
bswap
sub
cmp
and
pop
push
add
sub
icebp
hlt
aaa
pop
cld
addr16
sub
and
mov
inc
gs
jnp
into
out
sub
outsl
call
push
add
push
mov
loopne
jnp
add
adc
mov
add
sub
push
pop
sub
ret
jmp
sub
std
stc
or
sub
mov
sarl
dec
cli
sbb
sarb
xor
popa
push
pop
sub
test
push
sub
sub
cld
flds
inc
cmc
cs
in
int
cmpsl
or
jecxz
data16
xchg
enter
sub
cltd
loopne
pushf
mov
or
jne
mov
sub
cmp
xchg
aad
jmp
and
push
and
push
movsl
xor
loope
adc
or
cmp
push
lds
insb
and
inc
add
push
push
xor
cld
dec
rorl
add
xchg
sub
iret
negb
rclb
test
enterw
aas
or
and
pushf
sbb
jl
loop
mov
dec
sarl
lds
lret
mov
enter
repz
fwait
sbb
xorl
push
pop
add
mov
sub
push
aas
xchg
xor
test
cmp
dec
cs
popa
sub
fcomp
xor
push
cli
pop
dec
sub
insl
sbb
or
aad
jmp
out
mov
jmp
pop
jg
jbe
pop
int
inc
xor
sbb
add
jmp
ret
sti
sub
mov
fiaddl
mov
lea
push
mov
pop
stos
rclb
fdivl
pop
jl
add
mov
lret
adc
mov
push
push
fsubr
add
shrl
jmp
or
adcl
or
sub
aad
aas
loop
sub
add
inc
sbb
lock
push
dec
scas
sub
inc
imul
dec
sub
ljmp
sahf
xchg
mov
and
or
pop
loope
lds
insl
sub
sub
orl
push
add
mov
sub
mov
adc
sub
sub
aas
sub
adc
mov
jns
daa
mov
pop
in
js
sub
imulb
sub
icebp
xchg
mov
sub
pop
mov
xor
sub
jne
cwtl
out
mov
leavew
or
inc
out
sub
add
ja
dec
jbe
pushf
pop
or
push
xor
mov
sub
mov
dec
mov
sub
or
aad
sbb
lods
cmp
mov
mov
mov
cwtl
dec
push
add
testb
or
sub
js
add
movl
sub
popf
xor
xor
pop
pop
push
outsb
stos
xor
pop
add
lods
or
xchg
test
pop
push
sub
fcomps
mov
js
sub
outsb
jbe
stc
sub
pop
adc
ss
je
xor
xor
sbb
dec
outsb
mov
rcrb
sti
sub
int3
pop
pop
shrl
ss
inc
inc
sub
jmp
inc
sub
js
les
outsb
imul
aas
pop
repnz
movsb
inc
dec
cmp
stos
sub
fildll
test
jl
pop
int
sub
and
loope
ljmp
imul
fbld
cmp
cld
jb
sub
mov
sub
fsubrl
push
mov
and
mov
sub
mov
data16
or
pop
hlt
mov
outsl
sub
out
adc
int
sbb
sub
xchg
mov
pop
mov
shrl
xlat
in
lret
cmp
rol
push
sbb
mov
test
and
daa
je
mov
push
sbbl
adc
sub
lcall
adc
sub
mov
std
es
sub
out
mov
sub
cmpsl
sub
cmc
adc
hlt
lods
sbb
sti
movsb
sub
jle
notb
and
iret
jns
lea
xor
repz
dec
fnstsw
cmp
push
push
clc
test
sub
inc
push
mov
dec
cmp
add
pop
cli
test
xor
out
fisubrl
fsubrl
movsb
push
mov
out
stc
adc
retw
mov
mov
sub
mov
xor
movsl
sub
cmp
repnz
xor
sub
mov
jecxz
mov
and
outsl
in
sbb
mov
pop
mov
imul
push
aaa
ret
dec
fisubrs
ds
mov
pop
in
jb
pop
dec
sub
movsl
dec
adc
sub
or
insb
jg
inc
and
js
xor
jb
pop
xor
dec
dec
sub
daa
sarb
sub
xlat
loope
and
inc
xchg
out
pop
sub
jns
mov
in
mov
sub
lcall
sbb
push
loopne
icebp
sub
adc
mov
ljmp
sbb
imul
pop
lret
xchg
sub
clc
cmp
sub
test
sub
mov
sub
sub
loop
fs
aam
sub
aaa
jns
mov
add
jbe
xchg
pop
cli
dec
jmp
pusha
mov
and
sub
inc
cmp
in
nop
pop
sti
add
jmp
test
xchg
pop
or
add
aam
push
pushf
add
cmpsl
push
std
ja
outsl
dec
inc
ret
imul
jg
add
sub
mov
in
adc
sub
xchg
aas
jl
xor
sbb
mov
mov
enter
and
inc
jnp
shlb
cld
daa
ljmp
cmp
mov
sub
dec
mov
and
xchg
imulb
xchg
jmp
push
out
mov
sarb
stc
or
push
sub
mov
lahf
push
push
lds
test
cli
outsl
xchg
addr16
xchg
sub
lock
lods
sub
mov
decb
cmp
loop
sub
inc
aad
inc
sub
xor
xor
mov
mov
mov
fs
cs
sub
pop
inc
fcompp
or
sub
dec
xchg
pop
sbb
loopne
into
das
add
call
push
sub
subl
or
xchg
loop
xor
sub
mov
lods
add
scas
fstpt
pop
xchg
pop
jae
sbb
jbe
int3
stos
int
adc
fsubrl
sub
outsb
sbb
pop
pop
inc
or
sbbl
mov
loopne
das
sub
sbb
sub
sub
rolb
push
in
sub
out
mov
outsl
and
jge
out
aaa
sub
in
ljmp
cmp
sbb
and
repz
mov
push
cmp
adc
dec
test
insl
lret
test
pop
pop
shlb
in
outsl
nop
sub
ja
loope
cld
int3
mov
jecxz
shrl
ljmp
sub
stos
call
pusha
test
mov
or
pop
sub
ja
add
sub
push
cmpsb
hlt
sub
mov
popa
pop
mov
in
or
out
mov
pop
sub
mov
fldlg2
sub
in
xchg
mov
dec
push
push
sbb
mov
test
sbb
adc
cmp
sbb
inc
adc
adc
insb
add
jnp
sub
sub
xor
xor
addb
cltd
mov
dec
push
sub
clc
fldcw
fcomps
dec
sub
mov
xor
xchg
cld
inc
add
int3
sbb
cmp
mov
sub
loop
add
cmp
push
pop
lods
in
rcr
shrb
mov
jg
adc
push
sub
movsb
sub
sub
inc
adc
sahf
lds
inc
mov
mov
fdivr
lea
sub
iret
loopne
sub
push
fnstenv
mov
jb
push
dec
jno
and
jl
sub
mov
jg
in
sbb
cmp
cltd
adc
push
adc
sub
push
add
leave
sub
fwait
xchg
xchg
aaa
lods
inc
mov
test
sub
cld
jo
push
lret
movsl
xor
clc
dec
or
sub
pop
add
sub
jge
xor
sub
sub
pop
sub
xor
mov
std
jge
dec
add
xlat
loopne
sub
inc
pop
int
test
jns
iret
jp
ja
push
adc
jg
pop
push
sub
arpl
das
and
jg
loopne
mov
sub
push
movsb
fildl
stos
and
cltd
pop
add
add
pop
stos
imul
mov
mov
jmp
popf
pop
filds
jb
sbb
and
pop
cmpl
insb
dec
mov
lds
es
inc
inc
add
mov
sarb
dec
pop
cmp
xorl
mov
lods
ljmp
rcll
xchg
dec
or
int3
or
cmp
and
add
mov
mov
sub
push
pop
in
mov
movsl
push
and
js
cmp
aas
mov
pop
inc
sub
or
xchg
jns
out
mov
mov
scas
inc
cmpsl
and
add
fnstsw
mov
out
dec
leave
push
ss
jne
repz
mov
out
cmp
nop
cwtl
call
xchg
lret
pushf
and
pop
out
mov
lods
ret
push
insl
enter
dec
or
xor
sub
dec
jno
and
cmp
or
adc
push
cmp
repnz
arpl
icebp
clc
sbb
ja
mov
jge
sub
mov
lret
addr16
cs
push
xchg
push
out
mov
push
dec
pop
jg
and
push
sbb
repz
lahf
adc
shrl
dec
mov
out
pop
iret
pop
es
fildll
sbb
adc
lods
sub
sub
outsl
xchg
jbe
adc
pop
mov
lods
sub
inc
or
push
adc
inc
jne
mov
push
sbb
ss
out
mov
push
xor
or
rolb
movsb
dec
sub
roll
jns
out
jecxz
adc
mov
sub
xchg
jl
out
sub
ss
rcrb
bound
inc
or
das
sub
cmp
loop
cmp
scas
ss
xor
imul
mov
loop
cmpsb
and
xor
mov
arpl
sub
mov
mov
fisubrl
dec
mov
and
xchg
dec
adc
cmp
data16
mov
pop
push
fdivrl
hlt
sub
into
cmp
mov
xchg
pop
jns
sub
mov
or
ret
or
and
fsubl
mov
add
sub
cmp
ret
cmp
fnstcw
stc
shll
clc
adc
sub
mov
in
sbb
hlt
dec
pop
rorl
mov
mov
cmc
int
sub
sub
inc
jno
fldcw
inc
xchg
sub
jne
mov
sub
loop
push
mov
inc
lds
mov
sahf
adc
push
xchg
cwtl
sub
cmp
mov
out
mov
sahf
mov
mov
ds
jo
mov
adc
and
adc
add
sub
push
in
out
rcr
cltd
sub
in
jae
call
test
sub
mov
push
sub
mov
jge
push
stc
daa
cmovp
dec
dec
and
pusha
outsl
mov
loop
popf
fldt
aaa
cltd
ja
sbb
mov
sub
mov
int
xor
cmc
dec
adc
inc
sub
mov
pop
lret
jecxz
jb
arpl
lds
idivl
je
sarb
cmp
inc
fdivrs
add
sub
dec
loopne
mov
aad
xchg
pop
mov
pop
cmpsl
aam
or
in
lcall
lret
fwait
jmp
push
sbb
dec
mov
sub
cmp
pop
jmp
pushf
sub
shrb
or
shrb
sub
jnp
fucom
push
lods
pop
mov
sub
sub
mov
push
or
jp
fidivrs
clc
insl
dec
sub
add
mov
int3
sub
loope
sub
adc
fs
jmp
aad
sub
ljmp
lock
jg
sbb
add
mov
dec
or
xchg
sub
push
jne
sti
gs
fdivs
cmpsl
push
mov
out
sub
jp
loop
sub
movsl
push
mov
int
cmpsl
or
mov
pop
clc
jo
in
cs
sub
push
xchg
test
aam
add
jecxz
aas
ljmp
cmp
int
mov
daa
gs
or
mov
rcrb
hlt
sub
lods
sub
push
sbb
or
adc
pop
in
cmp
xchg
fildll
push
out
pop
mov
das
cwtl
repnz
decl
jl
imul
push
sub
pusha
iret
xchg
jnp
push
dec
loope
jno
test
enter
mov
incb
pop
mov
ret
inc
inc
pop
bound
xor
mov
push
mov
sahf
imul
cmpsl
sbb
lret
push
jl
adc
or
or
dec
sub
dec
dec
in
sub
js
leave
xchg
sub
call
rol
jecxz
dec
mov
cmp
jle
inc
fists
adc
daa
pusha
dec
jb
add
lods
jmp
dec
jg
lret
xchg
jbe
or
xlat
mov
repz
in
sub
inc
mov
sub
jns
mov
sub
mov
mov
shlb
push
lret
push
shrw
daa
sahf
inc
adc
inc
cmp
cs
xchg
bound
inc
push
lcall
xor
or
sub
fwait
push
push
shrb
mov
fstpl
add
std
jne
pop
cmpsb
ljmp
inc
adc
jecxz
sub
sbb
jbe
sub
and
cmp
or
test
pop
sub
andb
fdivrl
sub
hlt
fisubrl
test
adc
push
mov
aad
cmp
out
aas
sub
dec
cmp
cs
push
xchg
in
xchg
cmp
xor
sub
and
xchg
inc
je
inc
das
push
adc
jne
icebp
sub
insl
cwtl
adc
insb
cmp
jp,pn
mov
das
sub
mov
js
inc
mov
lock
sub
sub
js
cmc
int
and
inc
fstpt
sub
xor
xchg
call
into
nop
push
aad
sarl
push
sahf
sub
or
cmp
in
pop
push
sub
es
sub
push
shll
int3
decl
push
nop
add
ss
inc
cs
lods
sub
xor
lea
imul
fisttpl
sub
inc
iret
sub
inc
sub
sub
lods
cltd
repnz
sub
jmp
and
sub
das
inc
mov
xor
mov
ljmp
xor
sub
push
pop
ja
fisubs
dec
icebp
out
sub
mov
aaa
sub
test
leave
mov
push
out
mov
pop
sub
push
sbb
cwtl
adc
adc
scas
and
fdivrs
cmpsl
mov
das
daa
cmpsl
pop
xchg
sub
xlat
cmp
xchg
sub
inc
xchg
std
add
jns
loope
sub
jmp
ret
add
adc
repnz
or
lret
mov
les
out
pop
sub
sub
sub
bound
lret
adc
mov
hlt
loope
xor
addr16
inc
sub
cld
xchg
sub
shll
sub
insb
fs
out
mov
fcmovnu
aad
cs
inc
lods
sub
fcom
fwait
xlat
sub
dec
int
ss
jp
xchg
adc
ljmp
xchg
aad
xlat
pop
leave
mov
or
ja
loope
sub
jge
scas
push
inc
inc
cmpsl
lret
sub
subl
shll
mov
jmp
sub
adc
pop
in
jecxz
cmp
and
pop
sbb
cmp
stos
shlb
hlt
pop
mov
jge
loopne
xchg
xchg
lods
clc
xchg
sub
dec
pop
icebp
mov
test
and
pop
popf
loopne
ja
push
add
out
adc
sar
sub
subl
sub
lea
add
shrb
cmp
push
pop
xchg
or
jno
pop
daa
or
imull
frstor
push
adcl
scas
sub
sbb
ret
in
xor
out
mov
int
enter
out
sub
cmp
inc
add
call
mulb
push
outsb
dec
xchg
sub
test
xchg
sbb
sub
or
mov
mov
pusha
rolb
xchg
stos
fildll
rcrb
dec
out
shlb
mov
inc
pop
sub
fidivrl
jno
sub
int3
xor
jmp
paddusb
outsb
and
fwait
jno
addl
sub
mov
sub
push
mov
sarb
sub
mov
stos
das
sub
jno
dec
fcomps
and
jge
out
popa
xchg
push
fs
mov
sahf
xor
popa
test
or
sub
aad
jl
and
adc
pop
sub
outsl
or
lcall
sub
repnz
mov
xlat
arpl
xor
test
sbb
scas
xchg
jle
sub
std
jecxz
mov
inc
addr16
pop
iret
pop
sub
bound
add
in
mov
dec
mov
and
sub
sbb
out
imul
xchg
daa
ror
inc
mov
mov
xor
inc
jne,pn
pop
push
xor
out
and
pop
pop
sub
std
adc
sub
mov
xor
cmp
insb
popf
jb
imul
dec
sbb
test
xor
sub
not
sbb
push
add
and
fld
jp
stc
cmc
outsl
cmpsl
ret
je
mov
jae
and
pop
xchg
xchg
sbb
sub
mov
lds
and
std
cmp
push
sub
mov
xchg
cmp
jne
daa
sub
adc
inc
cli
and
lods
sub
mov
psubsw
xchg
mov
pop
in
mov
sub
push
test
dec
jle
in
scas
dec
repnz
inc
je
and
push
mov
xchg
iret
in
in
sub
fists
lss
sbb
adc
loop
divb
pop
pusha
ljmp
xor
add
stc
pop
add
or
mov
notl
test
or
fimuls
sbb
xlat
adc
inc
add
adc
lret
lods
inc
mov
aam
jl
daa
jbe
sub
arpl
add
aam
jmp
cmp
pop
and
shlb
jns
pop
lahf
nop
adc
test
ret
rcrl
lods
sub
sub
outsb
mov
cmp
push
scas
lock
sub
sbb
or
loope
jno
and
repz
bound
pop
xchg
rclb
sub
dec
sbb
pop
sbb
pop
mov
xchg
in
fs
stos
xor
fcomps
jecxz
pushf
ja
int3
add
les
sub
dec
icebp
lds
push
sub
repz
jp
sub
ljmp
jnp
xchg
daa
outsb
mov
cmp
enter
sub
xor
mov
clc
in
and
cvtps2pi
and
jo
pop
es
pop
lds
jl
std
sti
mov
and
rclb
aas
adc
sbb
movsl
push
jmp
addr16
xchg
mov
shlb
jnp
mov
and
add
pop
sbb
icebp
ds
mov
hlt
sub
cmp
push
sub
out
lcall
cwtl
and
inc
mov
in
jecxz
adc
fdivrs
call
add
sub
lahf
lds
jno
orb
mov
cmc
sub
insl
jbe
lods
inc
lock
and
mov
bound
je
and
add
jmp
add
cwtl
sub
mulb
cmp
sahf
js
cmp
aaa
xchg
sub
call
sub
mov
xchg
adc
pop
sub
and
test
mov
cs
pusha
in
hlt
jecxz
jns
inc
jg
adc
stos
cmp
inc
jmp
int
xchg
int3
mov
repz
sbb
cmpsb
jo
mov
push
pop
out
dec
cmp
xor
negl
sbb
xchg
in
mov
mov
out
pop
cmp
lret
and
shrl
push
dec
mov
bound
gs
inc
xchg
xor
and
out
sub
dec
scas
jecxz
fnstsw
or
inc
in
cmpsb
mov
xchg
push
leave
adc
mov
out
sub
mov
lcall
sbb
cld
sub
sub
xor
inc
xchg
jg
das
shr
lds
jne
pusha
movsl
mov
sahf
sarl
and
xchg
add
ret
iret
fsubrl
mov
dec
sub
add
jle
add
leave
pop
out
sub
sub
and
xor
in
xor
movsl
inc
push
and
nop
mov
jne
fsub
pop
sub
std
je
sbb
sub
sub
cwtl
cmpsb
aad
adc
mov
loop
sub
in
xorl
test
sub
jmp
cmp
push
loop
scas
sub
test
call
fldcw
cwtl
cmc
push
fisttpl
or
scas
mov
mov
xchg
sub
mov
cmp
sub
sbb
test
sub
or
and
test
je
mov
or
xchg
jne
push
in
int3
icebp
fisubrs
cli
mov
aad
adc
das
xor
push
and
jns
push
addr16
push
push
sbb
les
test
jns
scas
sub
xor
sub
dec
xchg
mov
sub
jl
sub
jne
pushf
popf
jnp
sub
ret
cltd
mov
add
sub
lods
mov
jbe
filds
adc
daa
enter
insl
dec
pop
add
inc
and
push
aam
divl
cmpsb
inc
or
push
jno
inc
sub
loop
jl
pop
into
and
xchg
add
push
aam
hlt
inc
daa
sub
xor
xlat
sub
add
enter
push
imul
lods
es
xor
xor
pop
mov
popf
sbb
addr16
sub
aad
lock
scas
scas
push
inc
dec
stos
and
jbe
inc
add
push
imul
add
mov
pop
jns
adc
incl
sbb
sub
adc
sbb
bound
aam
jno
pop
jmp
push
int
out
or
sub
jge
mov
mov
pushf
call
sub
sti
addr16
add
test
sub
fnstcw
out
and
iret
cmpsl
sub
rcrb
and
lock
push
dec
mov
sub
xchg
std
test
enter
push
mov
dec
cmp
std
fs
mov
xchg
mov
addr16
sub
mov
push
loopne
lahf
adcl
dec
add
push
int
jae
sub
xchg
cltd
sub
out
mov
cmpsb
bound
mov
add
hlt
lahf
mov
out
dec
outsl
nop
sub
test
cmp
movsl
push
mov
sbb
enter
mov
push
cmp
sahf
mov
daa
inc
jecxz
sub
sub
jns
dec
mov
js
out
mov
lret
sub
je
add
aas
test
sub
sbb
mov
js
adc
xchg
cmp
mov
mov
xchg
jno
xor
pop
test
sahf
fildll
add
push
dec
sub
dec
jae
jg
sub
jbe
ret
inc
mov
mov
repz
sub
lcall
negb
movsb
mov
mov
test
add
ret
sub
fsubrp
mov
lret
xchg
and
jge
pushf
fcoms
shrl
shl
clc
sahf
incb
adc
or
jo
xchg
cmp
mov
push
leave
jp
arpl
lahf
sti
xor
lock
jmp
icebp
aaa
stc
cmpsb
es
xor
mov
arpl
inc
faddl
sbb
inc
push
das
aad
iret
inc
aaa
mov
mov
mov
stos
xor
sub
aad
mov
fcompl
jne
push
dec
insb
sub
sub
out
mov
inc
dec
ficoml
mov
sub
in
orb
cld
lcall
push
daa
jle
mov
adc
mov
addr16
in
lahf
sub
stc
data16
les
icebp
jnp
mov
stos
sbb
push
ja
sub
push
and
sub
jmp
cli
push
jl
outsb
les
sub
pusha
cld
push
dec
sub
push
hlt
fdivs
pop
loopne
xchg
addb
dec
les
mov
pop
mov
and
push
xchg
push
sub
idivb
mov
sub
jo
sbb
subb
xor
add
leave
int3
adc
aaa
movsb
scas
sbb
sub
stc
imul
or
xor
hlt
lea
mov
jp
xchg
cli
sub
adc
repnz
adc
cmp
mov
jl
int
cmp
paddsb
add
lcall
mov
xor
or
aaa
scas
push
push
dec
call
mov
xchg
jb
and
leave
mov
cltd
pop
dec
mull
es
or
and
adc
or
xor
mov
outsl
bound
fnstcw
aam
cmpsl
sub
jmp
js
sub
jbe
por
jecxz
cmp
inc
push
test
jo
les
sub
mov
dec
lcall
xchg
in
inc
or
inc
xor
arpl
sub
insb
orb
adc
lret
adc
pop
adcl
sub
cmp
push
inc
sub
add
dec
dec
or
jp
sub
int3
jo
aad
lret
sub
insl
add
xor
scas
fmuls
jl
lock
mov
insl
fisttps
jp
aad
xchg
sub
icebp
or
and
adc
or
jp
cmp
not
in
cmpsl
ret
addl
push
mov
xlat
out
sub
std
das
in
adc
push
mov
jl
mov
mov
add
xor
rclb
inc
cld
sub
add
xchg
fisttpll
and
dec
mov
repz
ja
sub
inc
xor
ror
pop
cwtl
adc
cmp
or
sub
sub
ds
andb
mov
ret
xchg
sub
push
call
dec
add
enter
mov
and
sahf
insl
sub
push
cwtl
sbb
jmp
and
xchg
bound
mov
lret
xor
jle
and
dec
sub
negb
leave
sub
and
cs
popl
jae
out
rcr
rcrb
mov
pop
imul
aam
mov
and
test
dec
push
sub
ffree
jg
jne
fs
int
dec
jbe
das
pop
pusha
sub
dec
shl
push
dec
sub
outsb
arpl
cmc
pop
fiadds
imulb
stos
sbb
sbb
popa
inc
sub
rclb
xor
xchg
cmp
ljmp
dec
lret
jnp
pop
sub
add
jle
add
mov
testl
mov
cwtl
xchg
adc
popa
cs
les
scas
jl
hlt
lds
cwtd
outsl
mov
adc
mov
xchg
ret
pop
fucomp
adc
pop
daa
arpl
movl
push
cld
iret
das
lds
xchg
in
daa
sub
sbb
pop
int
jne
and
hlt
cmp
stos
je
neg
les
cmp
lock
push
nop
aad
sub
imull
xchg
insl
mov
mov
mov
dec
sub
push
rcrl
inc
sub
test
xchg
subl
and
lahf
xchg
cmpsl
lret
adc
push
lods
insb
adc
inc
jne
aad
sub
mov
inc
mov
push
xchg
push
jne
test
and
cmc
jecxz
mov
push
xchg
mov
cs
imull
pop
les
xor
icebp
push
mov
aam
inc
cmp
xor
lods
sub
mov
dec
jne
mov
int3
sub
jl
mov
sub
mov
rcll
loop
adc
cmpsl
jg
cmpb
rol
mov
iret
mov
loop
and
lods
fisubl
add
mov
inc
mov
push
xchg
sti
mov
pop
cltd
in
sub
mov
sub
push
add
xor
lods
aaa
cmp
or
xchg
mov
and
push
scas
jb
aaa
ljmp
inc
mov
mov
push
add
icebp
inc
fistpl
push
fnsave
stc
stos
dec
mov
pop
ret
xor
aam
outsb
dec
daa
enter
jmp
sub
testl
or
lods
jns
xor
es
sub
fildll
stos
sub
add
imul
inc
xchg
cmp
sub
jbe
sub
nop
xor
sub
adc
mov
mov
mov
pop
adc
sahf
sub
inc
popf
sarl
adc
sub
out
sahf
adcl
cmpsb
dec
mulb
mov
sub
sbb
sub
fdivrs
jae
lock
jnp
adc
jp
shlb
sub
lret
cltd
sub
inc
xorl
loope
stos
insb
sub
push
dec
mov
cmpsl
outsl
js
or
sbb
pop
jo
lret
gs
pop
cmp
xchg
adc
dec
cmpsl
int
add
sub
repnz
sbb
in
mov
sub
ret
mov
sbb
cmp
fstl
fisttpll
dec
aaa
inc
jne
ja
fs
leave
push
out
pop
test
cwtl
pop
ja
push
mov
xor
cs
cmc
jno
cmpsb
mov
sub
nop
xchg
sub
push
jno
inc
call
repz
mov
hlt
jge
sub
stc
inc
sub
push
divb
sub
test
dec
pop
mov
cmp
pop
incl
imul
fsubp
mov
idivb
cmc
sub
js
addr16
popf
popl
repz
sub
pop
pop
int3
and
sub
xor
gs
dec
adc
sbb
pop
nop
mov
jbe
clc
lds
xchg
dec
and
paddb
mov
gs
sub
cmp
rorl
in
push
mov
push
pop
popf
push
sub
cmp
iret
repz
out
jmp
sub
sub
jge
add
xchg
or
xchg
aas
add
sahf
sub
cmp
adc
aam
es
cmp
addr16
scas
scas
add
sub
xor
or
outsl
and
sub
cmpsb
sub
and
out
dec
shl
repnz
out
pop
xor
adc
or
dec
out
sub
or
jmp
sarl
add
mov
inc
xor
lret
hlt
call
ficompl
std
jle
xlat
push
sub
mov
sub
xchg
xchg
imul
mov
mov
or
push
xchg
push
fimull
lcall
pop
call
xchg
std
out
roll
sub
or
fs
and
xor
xor
ret
pop
int3
mov
idivl
xchg
jg
outsb
sub
aaa
adc
add
fldt
mov
xchg
sub
xor
inc
les
xchg
sub
out
loop
fisttpll
and
mov
inc
lods
int3
sbb
in
scas
cmpsl
fsts
and
out
int
fbld
jnp
rcll
and
sub
xor
push
jl
ss
and
sub
lahf
mov
iret
mov
hlt
sub
mov
or
and
dec
out
dec
and
shlb
movsb
mov
sub
lea
outsl
cltd
aad
loope
sbb
jnp
sub
mov
lea
mov
cmp
mov
mov
jb
mov
lea
imull
movl
push
sub
insb
jnp
adc
pusha
inc
fwait
mov
sti
pop
in
lock
mov
xlat
add
fucomp
insl
dec
and
outsl
sub
or
cmc
add
jns,pt
ljmp
inc
mov
cmpsl
pushf
lcall
in
or
ret
cwtl
loopne
pop
pop
add
aam
sub
sub
sbb
pop
add
inc
imul
js
mov
clc
cld
jmp
and
pop
inc
ret
sbb
jo
mov
mov
mov
fldenv
shrl
mov
ja
aad
cld
xor
sub
pop
dec
fsubrs
daa
xchg
dec
sub
pushf
xchg
adc
sbb
and
movsl
bound
mov
inc
mov
mov
fadds
or
or
and
pop
sub
cmpsl
negb
in
pop
bound
pusha
loop
mov
xor
sbb
jecxz
pop
adc
aam
sbb
ds
in
sbb
xor
enter
jg
lea
gs
ret
rcll
or
add
fnsave
fildll
push
gs
push
daa
and
sub
shl
and
jp
pop
cwtl
inc
dec
mov
mov
mov
mov
fnstcw
or
lahf
sub
dec
xchg
fsubrp
pop
jno
mov
enter
mov
adc
xchg
adc
inc
daa
mull
jbe
adc
xor
and
bound
mov
xchg
sub
xor
fs
pop
add
and
cwtl
xchg
xchg
sub
dec
pop
ljmp
js
adc
sub
call
adc
shrb
mov
pop
test
fbld
sub
stc
xchg
lods
ret
jmp
sbbb
cmp
lock
int
push
test
mov
subb
pavgb
and
pop
cmp
jnp
sub
movsb
jne
xor
sbb
sub
push
and
repnz
sub
jge
scas
inc
adc
adc
jae
jno
mov
add
mov
push
sahf
fmul
sub
mov
sub
xchg
cmp
es
call
scas
sub
sbb
xchg
scas
ljmp
int
adc
cld
cmpl
adc
cmpl
xchg
incb
daa
mov
push
das
hlt
jb
xchg
cvtps2pi
mov
scas
sub
sub
xchg
sub
sbb
aad
sub
cmpsl
dec
data16
xchg
and
sti
loop
pop
imull
adc
push
xchg
fdivrl
mov
pop
or
sbb
sub
clc
cmp
jg
fcoml
mov
mov
out
int3
sub
je
pusha
push
sub
add
dec
stc
sub
out
insb
sub
xorl
std
xor
call
pop
lods
das
jns
mov
xchg
sub
ret
sub
cmc
pushf
out
sub
fisttpl
sub
xchg
mov
and
fcoml
adc
mov
xor
popf
push
xor
xchg
sbb
test
lods
sub
inc
loopne
push
sub
aam
int3
sysexit
dec
push
movsb
jecxz
dec
dec
sub
sub
adc
add
dec
xor
lea
out
xchg
mov
iret
mov
mov
jne
fimull
xchg
push
repnz
pop
jae
test
jno
sub
call
cmpsb
in
xlat
jbe
faddp
sub
clc
jb
loop
sbb
mov
pusha
les
dec
mov
jle
insb
sub
lret
out
pop
mov
mov
leave
xchg
inc
sub
testl
inc
std
push
add
les
jne
adc
loop
sub
pop
mov
xor
jo
ret
adc
ljmp
sub
aad
inc
loope
mov
and
sub
xchg
inc
into
cmpsb
sub
lcall
movsl
push
or
pop
xchg
mov
adc
and
push
pop
stos
inc
orb
pop
sbbl
sbb
stos
lret
fsubrl
clc
inc
std
ljmp
mov
jns
or
and
sub
push
ss
data16
subb
aad
push
sbb
les
sub
fsubrs
push
ss
popf
es
dec
sub
xchg
ds
data16
or
mov
inc
cmp
or
xor
in
rcl
sub
dec
dec
xorl
fisubl
enter
iret
pop
scas
pop
mov
adc
hlt
adc
mov
cwtl
sub
and
sbb
push
mov
push
lods
pushf
lock
or
rolb
in
adc
add
mov
icebp
aas
mov
sub
pop
out
nop
insb
sub
xchg
mov
enter
mov
mov
mov
or
adc
ds
leave
adc
icebp
xchg
cmc
test
sub
jno
lret
enter
mov
std
adc
push
stos
aaa
aam
insl
mov
xor
or
sbb
xlat
arpl
sub
and
frstor
sub
add
push
call
sub
dec
loope
rcr
and
dec
and
out
mov
jo
call
push
push
sub
sahf
mov
sub
fildll
in
movsb
pop
push
dec
or
lods
jecxz
daa
xchg
jg
sbb
ljmp
mov
sub
mov
repz
lret
lods
outsb
in
imul
fdivl
daa
sub
mov
iret
sbb
xor
mov
inc
adc
pop
sub
fistpll
add
scas
xchg
inc
pop
int3
mov
adc
jbe
jge
cmp
xchg
inc
cmp
push
in
icebp
pop
xor
sahf
and
xchg
test
daa
inc
hlt
sub
cmp
inc
and
scas
sub
sub
outsl
flds
imul
enter
adc
sub
stos
inc
mov
leave
sbb
push
sub
xchg
xchg
xor
popa
lock
jbe
shll
xchg
dec
sub
aaa
mov
push
fsubrl
ja
hlt
or
movb
pop
sbb
cld
sub
je
jp
sub
add
sub
std
mov
in
std
sub
repz
enter
mov
pop
addr16
sub
mov
ljmp
sub
idiv
test
xchg
adc
insb
sub
cmpsl
sbb
sub
or
jae
mov
sub
push
push
cmp
xchg
fstps
push
adc
dec
sub
sub
out
xchg
mov
loope
pop
les
jge
pushf
hlt
mov
cs
das
data16
sub
fcomps
jae
scas
and
lods
mov
inc
mov
icebp
jne
js
int3
mov
sub
mov
sbb
sub
dec
add
inc
in
mov
mov
xor
mov
cmp
insl
cmp
xchg
xor
push
pop
sti
jp
fisubrl
pop
xchg
repnz
push
test
and
jno
mov
stc
mov
loope
sub
ds
cld
js
sub
std
movb
enter
das
cmpsl
or
sub
mov
xchg
test
mov
xor
push
out
stos
leave
rolb
cmp
mov
insb
fisubrs
pop
lcall
adc
sub
stos
mov
pusha
dec
jp
sahf
in
aam
leave
loope
daa
inc
sbb
sbb
out
jmp
sub
insb
dec
and
jle
jns
jge
stos
and
push
int3
ret
repnz
stos
jge
test
loopne
ret
sub
cmp
setae
pop
sub
andb
ds
imul
mov
sub
scas
mov
xchg
push
outsl
popf
addr16
sub
xor
sbb
sub
cwtl
push
subl
mov
cs
outsb
js
and
aad
xchg
sbb
sub
std
jae
fsubrs
mov
in
dec
gs
dec
sub
addr16
adc
gs
jne
mov
jbe
mov
sub
sarl
dec
cwtl
mov
push
andl
dec
sub
xor
sub
mov
add
aas
lods
out
mov
fs
xor
add
adc
mov
ss
xchg
sub
fcmovu
and
shl
into
add
dec
and
push
test
xchg
xor
push
in
pop
inc
cwtl
mov
sub
or
daa
inc
popf
ds
lret
push
test
aad
xchg
mov
push
sub
movsl
ja
enter
mov
sub
push
fiadds
insl
stos
dec
sub
and
cmpsb
mov
push
dec
mov
or
bound
lds
pop
and
add
or
fisubrs
jle
movsl
dec
sub
ja
mov
int3
cli
aad
sub
sbb
mov
pop
out
mov
lods
pop
std
sub
iret
and
movsb
dec
xor
sub
xor
push
adc
int
add
mov
repz
imul
mov
xor
mov
jmp
dec
jo
mov
outsb
cmp
xor
sarl
test
jbe
sub
test
gs
sub
sub
outsb
aas
and
test
sub
and
and
sub
aaa
test
sub
mov
imul
in
outsb
loope
sub
xchg
inc
jp
sub
mov
dec
in
outsl
inc
mov
jbe,pn
sbb
cmpsb
int
mov
outsl
push
sub
jns
arpl
cmp
sbb
sub
jmp
mov
mov
lcall
sub
xor
dec
faddl
lock
dec
aam
xchg
popa
and
push
jle
sub
push
arpl
add
rolb
xchg
lea
pop
xor
dec
in
loopne
cmp
sub
mov
test
mov
lods
sub
lahf
scas
push
divb
adc
mov
ss
jnp
xor
and
and
xchg
mov
ds
sub
dec
dec
mov
xchg
sub
add
mov
cmc
mov
fisttpll
stos
and
mull
lret
test
cmp
les
jmp
pushf
orb
push
test
inc
cvtps2pi
fidivrl
cmpb
cld
sub
jne
repz
movsb
sbb
push
aad
push
aam
adc
loop
jae
xchg
inc
jmp
aas
cld
xor
lea
fs
mov
sub
jnp
sub
fiaddl
cld
sub
dec
loopne
jno
and
cltd
gs
in
cmp
push
lds
stos
and
sbb
add
popf
test
cmpsl
aaa
imul
iret
mov
push
sub
ret
leave
js
adc
mov
xor
or
cmpsb
dec
inc
sub
jne
and
sub
xor
fstpl
sub
sarb
sub
insb
aas
dec
lcall
outsl
sub
jns
shlb
movsb
cld
and
movsb
push
mov
sub
imul
xor
ja
test
lcall
and
loop
leavew
sub
rclb
lea
xchg
out
ss
sub
add
fxch
sub
icebp
mov
clc
sub
pop
jl
addr16
mov
fsubrl
rolb
loope
mov
daa
sub
lret
sub
pop
pushf
jmp
lcall
lods
dec
mov
sub
pop
jp
cld
sub
jne
xor
push
xchg
sahf
dec
sub
adc
js
pop
cmp
push
sub
push
sub
nop
ret
fsubp
sub
jb
stc
addr16
sbbl
sub
push
adc
test
lret
aas
xchg
stos
pop
sbb
incb
or
sub
fsubs
ljmp
xchg
add
fnsave
or
fimuls
xor
ja
repnz
and
mov
lret
aam
cwtl
xchg
inc
xor
ja
push
xchg
bound
push
fdivr
sub
and
sbb
add
jno
sub
mov
mov
and
xor
outsb
jecxz
dec
sahf
sub
adc
or
push
mov
mov
mov
lret
fiadds
adc
loop
aad
jp
cs
icebp
dec
sub
es
lret
inc
incb
call
ror
jecxz
adc
shlb
push
pop
jnp
fcomp
and
dec
clc
arpl
push
cmp
jg
dec
mov
jnp
sahf
inc
int
scas
sub
lods
repz
loope
fwait
setl
outsb
push
mov
fistl
inc
sahf
sub
lea
sbb
fcomps
push
cmpsl
adc
jge
gs
and
xchg
shll
test
cmpsb
sub
add
sahf
and
sub
cwtl
in
sub
shll
sahf
adc
mov
scas
xor
arpl
in
sub
cmp
push
xchg
scas
rcll
test
or
fstps
into
pushf
dec
rcll
cmpsb
inc
xor
sub
adc
je
fisubs
int
inc
add
fwait
sbb
push
sub
pusha
mov
adc
mov
xchg
sub
sub
adc
pop
lods
fsubrl
sub
dec
js
mov
sbb
and
xchg
and
pop
sub
mov
xchg
mov
mov
in
in
lods
hlt
shrl
lret
sub
mov
test
int3
lds
pop
daa
ret
jns
in
js
adc
stc
icebp
insl
fsts
insb
pop
xchg
push
jnp
sub
bound
xor
mov
call
popa
fwait
xchg
push
mov
mov
and
leave
adc
add
sbb
mov
fbstp
sub
jae
cs
sub
jecxz
mov
pop
out
ljmp
jo
fists
loop
sub
fcoml
pop
add
lods
push
dec
cmc
sub
push
jne
jnp
inc
int3
arpl
movsb
mov
loope
stc
adc
enter
sub
cmp
pushf
cmc
dec
stc
xor
dec
stos
xchg
pop
scas
sbb
pop
dec
xchg
dec
or
sub
lods
loopne
insb
repnz
fwait
arpl
es
mov
jl
imul
push
adcb
jle
cltd
push
pushf
mov
push
push
xchg
add
mov
in
dec
sub
repnz
and
dec
pop
rorb
pop
leave
jg
push
movsl
sub
outsb
sub
or
dec
mov
inc
pop
add
adc
mov
xor
test
mov
xchg
je
mov
aam
aad
daa
sub
sbb
xlat
sub
pop
mov
sub
jns
dec
ficoml
jmp
sub
push
mov
adc
test
pop
push
adc
stos
fstps
sub
repz
mov
mov
jge
mov
mov
fwait
lods
mov
sub
loope
out
and
push
mov
lock
add
and
cli
ret
sub
sub
int3
add
sub
in
ret
sub
stc
cld
es
ss
xchg
xchg
aad
jo
ljmp
xor
and
subb
hlt
cmp
push
js
add
adc
dec
jbe
sarb
nop
and
mov
fs
shrl
aas
fisubrl
sub
rorl
sbb
call
and
outsl
add
fstl
jne
icebp
jge
neg
dec
jnp
lcall
leave
daa
ja
cld
mov
xchg
dec
sbb
sub
cwtl
loope
xor
or
daa
push
ds
shrl
push
xchg
addr16
mov
mov
mov
sub
das
in
sub
aaa
sbb
mov
outsb
mov
jbe
sub
lret
shrl
inc
cs
sub
cld
mulb
sub
mov
and
scas
push
ret
sbb
mov
mov
fdivl
fiadds
fistpll
jne
adc
and
pop
jg
scas
jmp
pop
das
push
and
int
mov
cmp
push
ljmp
xchg
sub
mov
pop
sub
inc
out
jbe
sub
mov
cmp
shlb
dec
and
rcrb
rcll
arpl
loop
xor
dec
jmp
and
xchg
sub
test
jae
inc
scas
cmpsl
fabs
or
into
push
sbb
inc
push
sbbb
test
mov
mov
outsl
jb
mov
mov
cld
and
inc
cmpsl
push
lret
sub
dec
sbb
sbb
das
push
sub
mov
lcall
or
cmp
sub
mov
lods
sub
push
test
dec
and
lahf
repz
lods
out
aam
sub
mov
adc
sub
hlt
js
in
lock
sti
cmp
jmp
mov
test
rcl
pop
adc
test
test
sbb
sub
xchg
shrl
movsb
fwait
jbe
push
cmpsl
xchg
stc
inc
sub
jmp
cmpsl
push
and
mov
mov
pop
pop
add
xchg
lea
mov
jl
cmpsb
fldt
push
jae
mov
addr16
pop
push
adc
sub
ffree
repz
mov
stc
sub
sub
popa
sbb
pop
push
inc
mov
adc
xor
adc
call
pop
movsb
mov
out
inc
mov
cwtl
subl
push
push
sub
xor
lea
scas
adc
inc
bswap
xchg
sub
mov
lret
mov
and
dec
push
xchg
shrl
xchg
mov
mov
in
ja
and
lds
lcall
sti
call
scas
aaa
sbb
xchg
test
mov
sub
and
jmp
test
subl
lods
or
shrb
pop
adc
mov
mov
imul
push
mov
aam
cmpsl
pop
daa
and
out
popf
icebp
ret
sub
jmp
inc
push
shll
pop
sub
inc
nop
fsubr
sub
jbe
ss
negb
xchg
std
cmp
stos
les
daa
fnsave
and
loop
dec
subb
pop
imul
cmc
adc
mov
in
je
adc
add
fwait
inc
sub
sbb
sub
out
sbbl
into
lcall
es
xchg
push
aad
lods
in
pusha
in
subl
int3
xchg
ret
sub
dec
ja
hlt
es
sub
xlat
push
cmp
ljmp
daa
xor
mov
push
or
aad
fwait
loope
int
cmp
gs
shll
sbbl
jecxz
xchg
sbb
and
and
lods
adc
sbb
fdivrs
mov
xlat
xor
jo
mov
pop
xchg
gs
out
ljmp
xchg
sub
sti
sub
negl
sub
pop
addl
cmp
xchg
pop
and
out
aad
rol
lds
cwtl
ret
movsl
jb
jo
lret
jle
pusha
sahf
push
out
sub
xor
push
into
cmp
sub
and
sub
jno
jae
sub
mov
sbb
push
dec
icebp
add
fmul
rclb
repz
adc
cli
imul
mov
sub
loop
cltd
sub
xchg
push
fiadds
sub
or
dec
call
mov
push
sub
js
outsl
xchg
add
call
jle
sbb
inc
data16
or
push
and
fisttps
int
das
dec
sub
loope
sub
pop
pop
shrb
int
jle
sub
repz
jo
outsb
add
mov
inc
lret
scas
enter
jg
ss
loope
mov
aaa
cmp
mov
shlb
mov
jbe
mov
mov
movsb
xorl
inc
cld
adc
frstor
ja
add
xchg
cltd
cli
or
negb
shrl
or
xchg
ja
enter
push
jge
sub
scas
push
adc
sbb
sbb
outsl
notl
sub
mov
xchg
cmpsb
or
stos
and
or
push
sbb
test
sbb
or
xchg
and
mov
rorl
lods
adc
call
movsl
sbb
push
clc
pop
inc
hlt
xor
std
and
lods
sub
ficoms
mov
xchg
mov
into
andb
mov
sub
sub
cmp
outsl
push
push
in
mov
std
test
and
pop
jge
shlb
push
ret
sub
and
and
inc
and
jnp
push
repz
xor
out
push
xor
popa
or
mov
test
mov
jns
sub
out
sub
and
scas
dec
sub
aad
jp
jge
in
lahf
xchg
loopne
mul
add
sbb
stos
test
push
push
xor
add
dec
aad
mov
xlat
sbb
adcb
rcpps
sub
int3
fstp
int3
and
pop
out
jbe
sub
int
aas
nop
jp
and
ja
in
scas
push
xor
fldt
sub
iret
adc
ret
push
loop
cmp
add
daa
stos
mov
xor
std
mov
inc
cmpsl
sub
lock
add
sub
mov
pop
jl
shlb
push
adc
inc
xlat
xor
test
test
mov
jle
pop
sub
imul
jo
fbld
sub
mov
sbb
std
inc
mov
lea
mov
icebp
sub
cmpsb
mov
aam
daa
dec
daa
out
pop
ljmp
xor
sub
pop
mov
sub
das
fnstenv
and
andl
scas
jge
in
lcall
lsl
pop
mov
cmp
or
fisubrs
orb
pop
xchg
xlat
sub
fmul
imul
xchg
outsb
adc
xor
sub
pushf
sbb
loope
dec
sub
mov
fs
popl
sbb
lods
inc
add
leave
add
cmp
mov
dec
int3
addb
and
dec
xchg
jge
cli
sub
popa
xchg
and
jmp
cs
cwtl
loope
lret
dec
xor
push
sub
addr16
pop
subl
sub
cwtl
jnp
pop
sub
jmp
mov
fidivs
jle
inc
fsubrs
jns
adc
sub
pop
gs
pop
repz
lret
jp
and
popf
sub
mov
aaa
icebp
in
pop
sub
sub
sub
pusha
xchg
sbb
cld
jae
ss
sub
xchg
mov
leave
sub
nop
out
push
cmpl
out
addr16
jno
mov
frstor
adc
stos
mov
pop
mov
in
xchg
push
inc
jb
sub
inc
fildl
ljmp
les
cmc
sub
leave
adc
lret
jmp
int
imul
add
imul
sbb
and
and
fldt
call
ror
xchg
popf
cmpsl
insl
jmp
sub
pop
pop
mov
sub
test
iret
xchg
lods
aad
in
stos
push
sub
gs
xor
push
mov
repz
cmp
mov
jne
outsb
sub
sbb
lea
cmp
daa
adc
mov
rclb
xchg
lret
das
add
sub
subl
jle
sub
mov
pop
xchg
sti
in
in
adc
shrl
cmp
shrb
jg
adc
jp
sub
in
push
push
sub
cmp
cmpsl
or
pop
data16
jmp
mov
fucom
push
cmpsb
or
fwait
cld
sub
jno
sub
jae
divl
pop
sub
sbbl
pusha
nop
lock
shll
mov
cld
ljmp
out
dec
jb
cwtl
sub
jle
xor
sub
out
movsl
daa
ljmp
sub
es
or
in
js
cmp
mov
pop
sub
scas
lods
je
sub
adc
push
jp
out
bound
dec
insb
iret
sub
adc
xor
pop
bound
popa
fsubl
mov
push
or
sub
es
fldcw
int
int3
dec
and
or
xchg
dec
sub
in
xchg
les
ficomps
test
cli
cmp
dec
dec
and
imul
lods
loopne
sub
push
pop
ljmp
les
push
movsb
cmp
je
cli
mov
jle
imul
add
shl
cmp
lea
add
xchg
mov
adc
push
sub
jne
mov
adc
dec
mov
sub
sub
pop
in
and
ss
mov
fisttps
add
lods
xchg
std
sub
jg
test
mov
sbb
shrl
leave
xchg
insb
push
pop
movsl
add
test
and
dec
push
sub
filds
adc
mov
sub
mov
aam
rcr
mov
cmpsb
or
sbb
push
jle
lock
test
sub
push
push
jns
pushf
add
shr
push
adc
ret
ds
sub
std
or
xchg
loopne
xor
addl
and
int3
xorb
sbb
sub
sbb
sub
mov
clc
shll
adc
sub
aas
inc
push
sbb
aam
daa
sub
sub
xor
subl
popa
jns
adc
stos
aad
shrb
lcall
pop
inc
fdivrs
mov
lock
in
mov
ljmp
sub
push
sbb
xchg
cmp
mov
sbb
fsub
add
ds
aam
pop
push
or
mov
push
fldcw
adc
es
je
std
pop
sub
out
fsubrs
sub
jns
sbb
sub
lahf
orb
daa
cs
rcr
push
xor
jb
test
fstl
cmc
icebp
push
sub
inc
cltd
pop
cmp
das
rcll
or
negb
cwtl
ds
sub
dec
or
adc
stos
test
out
sub
dec
test
pushf
sub
bound
decl
jno
sub
std
mov
incb
sahf
push
jp
xor
mov
stos
sarb
sub
les
sub
and
sub
int3
roll
pop
cli
add
push
fwait
push
cs
jo
ret
idivb
cmc
push
loope
rclb
push
popl
cmp
pop
sti
mov
shrl
lds
mov
xchg
cmpsb
pop
loop
jo
sub
xor
dec
sub
cli
mov
dec
pop
xchg
sbb
mov
pop
inc
mov
repz
push
bsf
js
cmc
cwtl
cmp
ljmp
ss
and
sbb
xchg
or
mov
sbb
sub
sbb
cmc
rcll
or
sub
insl
push
jge
lods
int
xchg
leave
js
in
sub
add
fildll
sub
and
sub
mov
push
scas
cmp
xchg
ucomiss
inc
jne
dec
outsl
in
push
into
pop
stos
cmpsb
cmpsb
sub
in
pushf
adc
jns
fisubl
mov
mov
stos
sub
xrelease
pop
sarb
lret
lahf
sarl
jne
add
cmp
jo
bound
sarb
and
cmp
pop
lret
stc
out
inc
cmp
mov
xchg
xor
mov
sbb
sub
push
lcall
xchg
test
sahf
push
pop
sub
add
sub
lret
lahf
sbb
push
repnz
insb
repz
sahf
jnp
push
sub
inc
xor
ljmp
loopne
sbb
les
push
xor
sub
pop
mov
fnstcw
fsubrs
fstpt
jno
jae
sub
sub
repnz
push
dec
sub
pop
xchg
add
add
loop
std
sub
lea
leave
call
lcall
test
das
int3
sub
pop
movsb
xor
push
push
data16
dec
inc
cmc
adc
fwait
sub
sub
inc
ds
int3
sbb
sub
jns
cwtl
sub
filds
fcmove
shrb
dec
mov
sub
mov
sub
push
in
repnz
xlat
lds
sti
cltd
mov
loope
cmp
addl
or
inc
and
dec
pop
fbld
and
sub
pusha
xor
leave
sub
lret
imull
mov
jecxz
lret
inc
cs
sub
pop
mov
mov
fildll
outsb
and
and
push
sub
sbb
aad
jmp
mov
and
stos
scas
ret
fs
nop
mulb
bnd
cmp
stos
sub
arpl
scas
loopne
lret
cmp
sbb
and
subb
ficomps
mov
push
imul
inc
mov
clc
mov
repz
popa
ja
cmpsl
cmp
inc
test
dec
inc
xor
dec
sub
fs
sbb
aad
into
repnz
sub
fldenv
sub
dec
jno
cmp
push
lcall
sub
ljmp
mov
mov
or
or
loope
sub
jecxz
push
sbb
icebp
jo
ficoml
inc
pop
and
and
sub
pop
movsb
adc
pop
std
pop
or
sub
sbb
sub
sbb
sub
sub
mov
ljmp
mov
lds
sub
xchg
mov
lahf
into
icebp
in
ud0
jecxz
adc
sbb
je
add
mov
mov
jmp
stos
inc
add
ds
mov
mov
xchg
out
push
cltd
mov
enter
or
push
jne
clc
push
sub
push
xor
mov
jmp
mov
dec
pop
bound
sahf
repz
lret
in
and
and
jge
push
ficoms
test
testb
clc
dec
sbb
and
sub
jae
jno
jg
call
lret
sub
and
mov
ljmp
fbld
xor
sub
loop
inc
sub
inc
push
jbe
sub
sub
mov
repz
xor
mov
cltd
push
mov
ss
jb
sub
sbb
outsb
cmp
rolb
sbb
enter
cmp
sub
inc
repnz
cld
sub
jge
movsl
jg
xchg
out
rclb
push
dec
jge
sahf
xchg
jno
scas
dec
iret
outsl
or
fwait
shl
out
aam
and
push
scas
call
sarl
push
sub
fcompl
into
mov
ret
adc
clc
pop
sar
dec
jecxz
popa
sub
xchg
cmp
sub
xor
das
mov
push
test
ljmp
mov
pop
int
push
sub
ss
dec
je
fcoml
jae
dec
inc
jle
sbb
stos
out
adc
bound
xchg
sbb
leave
sub
in
cli
jne
cmp
fldenv
push
jg
sub
test
xchg
je
sub
cs
lahf
mov
std
cli
push
adc
insb
jg
sbb
sbb
test
xor
subl
dec
sub
fsubs
inc
sub
aaa
inc
add
push
xlat
cmc
pop
and
sub
fisttpl
mov
aaa
jmp
jecxz
sub
lret
cvtps2pi
in
lods
adc
popa
mov
push
ret
or
mov
push
adc
xor
int3
shrl
sub
cli
jmp
outsb
lcall
cmp
cmp
xor
lea
scas
bound
mov
sub
iret
pusha
or
sub
push
pop
mov
bnd
xchg
sub
and
inc
pop
adc
mov
sub
adc
cltd
nop
sub
orb
fwait
pop
mov
aaa
daa
pop
dec
dec
jnp
es
out
pop
btc
sub
leave
sub
movsl
scas
sub
test
push
in
inc
test
sub
jp
mov
lds
pop
and
add
lock
cld
les
jae
aaa
sub
xlat
dec
fisubrs
jne
in
inc
sub
jle
into
sub
nop
cld
lock
sub
ret
outsl
sub
stos
mov
or
scas
sub
pop
daa
cmp
ljmp
stos
push
arpl
jns
sub
loope
xlat
sub
cmp
sbb
adc
in
push
outsl
pop
sub
add
gs
addl
fwait
loopne
adc
lahf
sub
or
push
fsubs
xlat
lock
sub
cmc
cltd
es
cmp
xchg
imull
hlt
adc
int
mov
xchg
insl
stos
pop
mov
push
or
lods
call
cmp
add
mov
andl
mov
aam
nop
xor
std
mov
popa
sub
push
aas
and
lds
sub
mov
push
mov
into
pop
ror
ss
sub
loop
sub
int
test
cmp
dec
inc
push
out
stos
sub
xchg
xchg
aam
test
out
mov
sbbl
or
pop
fdiv
mov
ljmp
xchg
sub
jmp
fldenv
sub
push
xor
jl
mov
sbb
xor
addr16
bound
cmp
dec
lret
in
push
pusha
cs
movsl
bswap
fidivs
mov
jo
and
add
sub
aad
rorl
sub
sbb
loope
test
pop
push
mov
fildll
and
jle
into
push
aad
lods
test
sarb
mov
pop
int
movsb
jbe
sub
mov
mov
repz
push
push
shrd
inc
testb
rcll
mov
mov
add
pop
mov
rolb
lret
sub
clc
test
out
mov
sbb
add
jge
popf
clc
mov
in
adc
stos
lods
daa
sahf
in
sub
fmull
jmp
push
out
cmp
ds
sub
test
test
stos
outsl
popf
fbld
in
and
test
cmp
inc
push
sub
dec
stos
das
aaa
pop
sbb
out
cmp
mov
sub
shrl
aad
sub
add
divl
hlt
aam
dec
cmpsb
dec
sub
inc
jle,pt
sub
leave
xor
xor
pop
fdivrl
xor
sub
sub
cmp
stos
sub
mov
test
cli
jge
cltd
in
jno
les
xchg
lahf
mov
dec
and
mov
sub
push
add
test
popa
xor
xor
dec
adc
sub
add
stos
movsb
neg
sub
insl
xchg
in
shrb
neg
jne
mov
bound
push
jecxz
mov
ljmp
push
sub
sti
cwtl
loop
sub
jnp
push
outsb
sub
jno
sbbb
sub
sub
shll
inc
pop
ficoml
out
adc
add
and
addr16
xchg
xor
sub
cld
insb
sub
pop
iret
arpl
or
sub
cmp
test
ljmp
sbb
int
sub
sbb
call
sub
iret
outsl
cltd
sub
daa
pop
cli
add
loope
subb
push
pop
test
rdtsc
add
leave
jb
adc
leave
stos
hlt
mov
lods
idiv
xchg
out
sub
jle
pop
adc
shrb
sub
pop
es
mov
mov
xor
idiv
ficoml
sub
push
or
jmp
gs
ret
sub
sub
nop
loop
and
ret
push
lcall
sub
lods
loopne
sub
cmp
imul
stos
and
push
sub
imul
adc
mov
in
adc
mov
addr16
mov
repnz
jbe
int3
sub
nop
andl
mov
mov
loope
aad
cmp
sub
loop
jb
push
popf
xor
outsl
imul
jp
bound
sub
ljmp
mov
add
mov
arpl
or
data16
cmp
push
or
mov
sbbl
aas
and
outsb
jecxz
lret
xor
pop
shrl
push
outsb
sub
pop
sub
arpl
loop
iret
dec
jnp
xor
out
bound
popa
inc
fimull
mov
icebp
mov
pop
loopne
or
movsb
gs
adc
sub
dec
adc
jno
cwtl
je
bound
or
adc
sub
ds
std
fcoml
and
push
jb
or
cli
ret
sub
enter
sub
incb
mov
sub
insl
add
mov
inc
mov
fmul
test
aad
cmp
test
or
subb
nop
cs
sub
ljmp
idivb
or
dec
sub
and
sub
xor
gs
ss
inc
sub
jne
mov
insb
dec
fnsave
icebp
cmp
xchg
lock
ret
sub
xchg
jge
divb
gs
jbe
cmp
push
sub
repz
xor
outsb
dec
pop
and
lods
pop
mov
or
jp
sbb
sub
sti
mov
pop
and
aam
cmp
mov
shrl
sub
pop
push
inc
pop
mov
push
and
gs
jl
xchg
fwait
mov
cmp
hlt
sahf
fmul
sub
or
jnp
in
add
or
nop
push
push
scas
jg
scas
pop
clc
mov
mov
outsl
add
jge
jae
xchg
mov
and
adc
cmp
ret
lcall
or
xchg
xor
rcl
cli
call
ficompl
daa
cli
jmp
fadd
sub
je
dec
xchg
sub
in
cmpb
loopne
xchg
and
out
ret
sub
xchg
dec
in
sub
or
in
jmp
cmp
call
decb
call
pop
loop
stos
je
sub
jl
lahf
jne
popa
mov
adc
insb
outsl
push
jnp
adcb
xor
cmp
mov
push
lds
jo
mov
pop
add
jle
fldenv
lea
dec
cmpl
and
lret
sub
cmp
xchg
push
dec
ss
add
xchg
sub
push
sbb
pop
xchg
loop
mov
jo
lock
sub
lods
add
cmp
add
sub
push
test
aad
test
daa
push
aas
movsb
je
cli
mov
imul
mov
jmp
jl
out
xlat
push
and
mov
shrb
push
int
inc
sub
repnz
xchg
and
and
cmpl
mov
in
dec
xchg
or
cltd
les
sub
add
cld
jne
mov
cmp
dec
jno
ficoms
ljmp
adc
iret
jb
sub
aam
movsl
and
aas
popa
imul
push
sub
sub
xor
adc
cmc
pop
jecxz
or
aam
arpl
scas
daa
pop
xchg
inc
imull
jmp
sub
inc
or
and
xor
pusha
nop
imul
sub
ss
lcall
sub
or
sub
js
cmp
lret
inc
nop
stos
cmc
sub
pop
sbb
lods
jbe
iret
and
stc
mov
sub
addr16
je
sub
sbb
aaa
sbb
adc
fs
loopne
mov
fdivs
push
sub
sub
jns
sbb
xor
cmp
xchg
inc
push
push
es
ljmp
jecxz
loop
stc
xchg
jle
adc
pop
jp
mov
mov
and
sub
push
pop
jno
popf
push
das
sub
cmpsl
push
push
into
cld
subl
sub
and
pop
pushf
sub
jge
adc
and
imul
rorl
xor
daa
aaa
xor
xor
push
sar
mov
js
add
hlt
pushf
cmp
mov
cmp
nop
sub
ja
jle
xor
out
sub
mov
add
loop
out
jo
and
push
cwtl
filds
test
sub
lods
mov
aam
ljmp
enter
sub
in
jo
xor
insl
sub
add
mov
das
xor
loope
mov
sub
jno
mov
adc
cmc
scas
add
adc
or
mulb
or
mull
add
jmp
mov
roll
cli
sub
pop
add
pop
sub
xor
gs
lods
push
into
mov
jb
xchg
or
jbe
dec
call
and
repz
mov
mov
pop
mov
xchg
into
lods
and
mov
sub
jae
mov
sub
movsb
or
cmp
daa
shll
sub
dec
jge
push
cld
and
xchg
jmp
fwait
push
inc
aam
shrl
aaa
scas
out
popa
or
mov
in
dec
sbb
xor
scas
sbb
test
mov
clc
adc
outsl
test
test
cmpsb
aam
paddb
sbb
push
arpl
xor
sti
sub
in
das
cs
rcr
pusha
jns
xchg
jbe
mov
movsb
jo
loope
xor
add
sub
cmp
jecxz
daa
adc
inc
sub
out
in
scas
mov
lods
xchg
push
call
shl
or
in
pop
inc
cmp
pop
cltd
push
mov
into
mov
and
je
xchg
adc
ret
cmp
lahf
ds
stc
and
testl
jnp
das
ficomps
xor
pop
imul
mov
ja
inc
sub
jae
cld
sub
dec
xchg
ja
xor
jae
ljmp
jecxz
sub
les
push
sub
mov
inc
add
loop
arpl
sub
xchg
lods
sub
cmpsb
lahf
push
test
cmpsb
xchg
mov
inc
sub
movsb
test
cs
sub
cmpsl
shrl
scas
mov
jge
push
sub
lea
sub
fdivp
mov
iret
sbb
sub
lds
cmp
push
xchg
dec
into
gs
pop
and
sub
jnp
mov
xor
lds
test
cmp
cs
add
mov
sub
jae
sub
test
mov
cmpsl
xchg
das
jb
sub
popf
dec
movsl
out
rcl
scas
sub
icebp
subl
sbb
inc
lret
adc
mov
mov
daa
aam
dec
sub
popf
sub
mov
lea
decl
je
xlat
jg
imul
inc
mov
mov
sub
nop
xchg
mov
outsl
ret
stos
pop
lcall
js
mov
sub
xchg
push
fsubrs
fcomip
sbbb
push
push
imul
and
mov
fsts
push
adc
sub
pop
inc
pop
dec
sub
dec
dec
out
adc
arpl
xchg
popa
inc
fs
adc
jp
pop
jmp
sub
pop
movsb
call
xchg
jmp
lods
sbb
es
ret
jecxz
repnz
test
ljmp
mov
cmp
or
mov
cmp
cmp
lea
orl
and
inc
fdiv
pop
sahf
sub
and
inc
test
push
aas
pushf
lret
sub
imul
mov
jbe
gs
les
pop
shl
fildl
cmp
pop
dec
adc
test
adc
subb
xchg
xchg
or
sub
mov
loopne
subl
or
push
out
ds
pop
push
sub
inc
sti
cwtl
xchg
cmp
and
push
push
sub
sub
dec
inc
aam
add
inc
je
and
xor
jp
mov
inc
bound
xchg
adc
andl
pop
add
mov
dec
mulb
mov
aam
mov
cmp
js
sub
pop
cmp
or
negb
mov
xlat
and
fwait
inc
xor
or
push
push
jg
vaddsd
cltd
sub
int
lds
stc
daa
fucomip
adc
inc
adc
cld
sub
and
ss
and
sbb
das
xor
cltd
and
sub
rcrl
mov
push
mov
cli
repnz
dec
inc
xchg
sub
ret
mov
arpl
mov
adc
sub
fisttpl
in
dec
test
cmp
iret
push
push
inc
lret
sub
and
pop
lock
sti
sub
into
sub
jbe
cmpsb
popf
mov
cld
in
les
arpl
mov
and
sbb
frstor
fs
and
sub
rol
daa
mov
sub
jge
add
fisubrl
hlt
inc
shl
dec
inc
pop
adc
jg
movsl
sub
xchg
xchg
lods
mov
jns
add
dec
ja
notl
sub
in
outsl
pop
sub
push
pop
or
mov
notb
arpl
mov
sub
ret
inc
das
jp
lahf
loopne
sub
sbb
mov
mov
jnp
mov
sbb
xor
test
shlb
idivb
bound
sub
jne
add
gs
cmc
jle
jl
cmp
mov
xchg
dec
imul
lcall
lret
push
int3
dec
lea
cmp
inc
ret
lods
jmp
pop
sub
push
mov
add
jne
mov
add
cli
push
dec
cmpsb
sub
imul
sub
push
pop
call
jnp
lea
add
mov
aas
inc
and
push
jl
add
jbe
xchg
xchg
mov
cli
add
lock
jl
sub
stc
pop
in
cmp
jae
lds
fcomps
mov
leave
scas
add
or
dec
pop
jo
test
mov
in
mov
sub
fsubl
divl
sub
mov
inc
ss
mov
xor
aaa
jge
mov
mov
and
daa
pushf
cs
pushl
ljmp
and
and
mov
jns
sub
fmull
sub
daa
gs
inc
jp
dec
sub
and
gs
or
cmpb
addr16
xor
lret
jb
and
sub
int3
jmp
xchg
sub
mov
sbb
adc
dec
test
sub
mov
sbb
aad
sub
or
aaa
fadds
dec
mov
and
loope
xchg
xchg
dec
cld
ljmp
int
lea
dec
xor
pop
push
lods
cmp
push
and
pop
sbb
pop
stos
pop
dec
mov
lds
pop
or
adc
dec
sub
test
aas
roll
int
lods
or
gs
call
psrld
mov
je
test
aad
icebp
daa
fs
dec
ljmp
cmpsb
ja
sub
int
out
adc
dec
cs
mov
xor
push
and
out
pusha
cli
and
push
sub
insl
hlt
mov
sub
add
xchg
add
enter
mov
fiadds
cmp
dec
repnz
sub
sub
sbb
cmp
jns
sub
sub
inc
ss
sub
push
and
roll
and
lods
add
jb
cmp
call
sarl
mov
mov
test
je
enter
sub
dec
cmp
int
and
sub
sahf
jbe
dec
cmpb
test
popf
cmovl
dec
outsb
ret
inc
xchg
sub
add
mov
mov
in
jg
sub
mov
shlb
push
xchg
das
dec
sub
push
rcrl
cmp
cmpsb
inc
xor
push
and
sub
popf
xor
or
push
xor
scas
aad
jno
sub
xlat
pop
in
push
sub
mov
call
add
rcrb
test
sub
sub
push
cld
jbe
sub
scas
arpl
dec
dec
sbb
fidivrs
xchg
cmp
mov
xor
scas
js
test
sahf
jmp
dec
fmul
dec
hlt
sub
jecxz
cmc
and
push
sahf
sarb
xchg
sub
aas
in
loop
repnz
push
arpl
daa
sub
test
call
je
cs
ret
sub
lods
and
stc
sub
dec
popa
add
add
jnp
sub
sbb
and
insl
adc
ljmp
ret
imul
cmpsl
push
add
sub
fnstenv
loope
sub
xchg
sub
lret
jae
call
lahf
repz
inc
jne
loopne
sub
mov
outsl
sub
loop
ljmp
push
sub
pushf
mov
sub
cmp
dec
push
stos
clc
sub
and
xchg
arpl
push
imul
xchg
push
xor
lods
adc
movsl
mov
iret
pop
and
sub
movsb
mov
arpl
aas
xor
dec
mov
daa
and
add
lret
lea
insl
lds
sub
add
xchg
aaa
rcrl
or
test
mov
aad
pop
icebp
cs
jb
iret
cwtl
xor
push
lcall
jb
subb
loope
inc
jae
inc
adc
sub
mov
aas
or
mov
aam
clc
jns
push
sub
push
xlat
sub
or
imul
mov
subb
sub
add
orl
loopne
and
cmp
cmp
stos
dec
fstpl
inc
pop
push
test
lret
xchg
mov
clc
or
or
addr16
xlat
lds
sub
addl
mov
outsb
aad
fsubrs
xchg
mov
mov
sub
es
sub
xchg
push
xchg
subl
aam
or
mov
cmpsb
fisttpll
xor
daa
loope
pop
out
cmp
push
cs
add
sub
adc
addl
mull
jo
sub
das
xchg
pop
hlt
sub
or
dec
push
or
push
repz
idiv
sub
mov
rorb
cltd
sub
fisttpll
cmp
dec
xor
lods
and
pop
push
sub
out
out
jo
rorb
cwtl
xchg
xchg
or
je
subl
xchg
push
scas
sub
dec
ret
jne
push
push
imul
mov
lds
cld
push
xor
and
stos
inc
loop
in
subl
clc
mov
jae
sub
mov
lret
stos
dec
cmp
xor
or
sub
fnstenv
cli
sbb
cmp
js
cmp
add
sub
and
popf
outsb
sub
jb
pop
pop
sub
adc
insb
aad
sti
dec
sub
cmc
sub
pop
inc
mov
and
int
pop
scas
sub
repz
notl
out
testb
or
cmpsb
ss
and
cs
mov
ror
add
jmp
in
dec
sub
out
leave
sub
out
sbb
jge
mov
in
adc
movsl
popf
sub
ds
push
sub
aaa
popa
in
cmpsb
or
mov
ret
cmp
in
imul
fildll
into
sahf
sbb
sub
fldenv
adc
xor
arpl
inc
mov
cltd
cmp
das
inc
mov
xchg
in
push
rcrl
jle
sub
mov
sub
adc
js
sub
sbb
xor
ss
push
mov
adcb
lret
out
bound
cld
mov
xchg
in
stos
out
and
adc
in
mov
or
jnp
call
jmp
gs
inc
pop
add
je
shrl
stc
lahf
push
adc
lods
adc
pop
xchg
cmp
sub
in
sbb
xor
mov
scas
cmp
mov
sub
cmp
rolb
iret
dec
xchg
flds
xchg
sub
mov
pop
orl
xchg
or
jecxz,pn
pop
pop
les
fwait
or
push
mov
sahf
loop
push
orl
fdivp
mov
pop
in
push
fists
sub
sub
and
aas
cli
jae
sbbb
ds
push
imul
dec
imul
nop
xor
lea
push
ret
sub
hlt
fmulp
ss
int
push
in
mov
es
dec
shrb
jno
in
sub
mov
int
lds
and
insb
pop
add
pop
std
sub
dec
adc
push
jnp
mov
pop
fidivrl
arpl
pop
cmp
sti
aad
lret
sub
or
push
cmp
inc
movsb
sub
push
xorb
sub
xlat
movsl
pop
mov
outsb
add
push
adc
clc
sub
and
movsl
jne
faddl
sub
mov
mov
and
sub
xchg
clc
jmp
ret
and
stos
inc
jae
or
mov
sub
cmp
out
imul
stos
adc
pop
xorb
sbb
xchg
sub
lret
outsl
add
xchg
sub
xchg
iret
addr16
cmpsb
dec
sub
sbb
or
pop
sub
fsubrs
mov
xlat
pop
aad
sub
mov
mov
sub
loop
int3
dec
out
sub
in
jp
mov
sub
sti
sub
stc
popa
test
cmpsl
or
loope
into
mov
call
jp
repnz
lods
orl
loop
jo
arpl
sub
mov
sbb
dec
adc
dec
push
aas
jbe
push
sbb
pop
jns
mov
mov
cmp
jne
scas
xor
add
fisttpll
adc
pop
dec
push
jno
popf
pop
clc
es
ja
cmp
call
sub
mov
mov
in
fisttpll
xchg
dec
adc
fdivl
sub
push
mov
fsubs
cmp
or
jno
or
pop
mov
jecxz
pop
push
sub
dec
cmpsl
scas
inc
xchg
sub
xorb
xchg
inc
cwtl
mov
fildll
mov
lret
mov
dec
add
sub
ljmp
mov
call
sub
push
pushf
and
fisttpll
shrl
sub
movsb
pop
lahf
mov
fs
mov
pusha
lods
sub
shll
pop
out
inc
and
int
sub
cmp
mov
into
mov
inc
add
pop
mov
cmp
nop
mov
rcr
sub
out
sub
sbb
push
mov
jecxz
outsb
sub
add
arpl
dec
in
cmp
inc
mov
jecxz
jo
lds
or
out
in
fists
pusha
cmp
movsb
pop
push
adc
test
pop
add
mov
jne
into
and
sub
sar
les
arpl
rolb
jns
sbb
xor
and
pusha
pop
push
push
add
std
sbb
roll
lds
push
fmull
hlt
fwait
add
pop
sub
xchg
jle
pop
sub
jno
or
lds
xchg
repnz
mov
or
fadds
sub
adc
lahf
mov
cmpsl
sbbl
or
or
pop
aad
xchg
shrb
mov
insb
mov
cs
sub
pushf
pop
fcoml
mov
subl
ljmp
adc
sub
jmp
xchg
shrd
mov
adc
jmp
cmpsb
out
jecxz
stos
cmp
adc
int
pop
mov
cmp
and
push
sub
push
jle
push
cmp
lods
dec
lock
subb
sub
jne
pop
xchg
cltd
sub
cmpsb
bnd
fadd
xchg
int
es
jle
sub
testl
and
les
cmp
push
sahf
sub
and
fcmove
sbbl
repnz
dec
insb
popf
in
and
mov
in
mov
mov
das
sub
or
pusha
cltd
sub
std
xchg
add
jmp
inc
aaa
sub
push
dec
test
or
and
loope
cmp
mov
leave
ffreep
sub
testl
inc
push
push
test
scas
cmp
mov
loope
cli
mov
je
aaa
mov
push
push
sub
arpl
insb
es
js
ds
int3
mov
and
inc
jns
fisttpl
push
mov
inc
jmp
push
xor
mov
or
or
cmp
mov
cld
sub
stos
cmp
jns
pop
jg
jno
imul
add
pushf
sub
push
mov
push
adc
enterw
jl
inc
xchg
sub
sub
sub
jnp
cmp
imul
pop
add
jmp
lods
sti
lock
fisttps
imul
sbb
jp
cmp
sub
ljmp
gs
xchg
mov
in
mov
out
out
popf
cli
addr16
xor
call
sub
pop
in
test
push
insb
xchg
aad
bound
xlat
adc
inc
push
mov
add
sbb
xor
testb
sub
addb
iret
out
sub
js
fsubrl
icebp
pop
and
nop
pop
lahf
mov
push
ja
jl
or
imul
mov
negl
cwtl
cmpsl
mov
fldenv
cmp
jg
inc
mov
sub
push
movsl
dec
lea
xchg
fcomp
sub
jno
jp
sub
mov
xchg
imul
and
insl
adc
or
push
icebp
sub
fwait
pop
mov
rol
outsl
mov
lret
movsl
add
sti
add
mov
ficomps
push
pop
es
inc
dec
rcl
lods
sub
js
pop
loope
xor
push
rcll
xor
pop
movl
mov
sub
mov
jg
xor
pop
mov
loope
sub
push
and
mov
repz
punpcklbw
dec
mov
fwait
pop
mov
ss
inc
mov
xor
mov
lds
xor
and
in
aad
sarl
add
sub
mov
jge
aad
xor
mov
sub
sahf
pop
lods
or
or
push
add
cmpb
ret
fs
std
scas
test
call
and
cmp
mov
add
and
arpl
push
push
inc
cs
mov
das
je
mov
adc
adc
fwait
sub
sub
stos
loope
or
inc
mov
test
dec
in
into
and
and
sub
repz
fdivs
push
pop
dec
ret
sub
xor
jl
mov
test
mov
call
sub
mov
mov
pop
jne
inc
cmpsl
sub
scas
sbb
xor
popa
pop
mov
loopw
jne
lds
push
dec
sub
jmp
inc
add
in
hlt
push
sbb
dec
pop
shrl
cli
jae
cmp
and
jo
mov
pop
sbb
ljmp
rcr
sub
test
stos
sub
in
dec
push
aad
push
jne
xchg
sub
or
lods
dec
and
cs
cmp
cmp
daa
inc
ljmp
push
das
insb
lea
bnd
mov
iret
and
push
pop
ret
fcomp
adc
scas
daa
xchg
int
and
fisubrl
icebp
stos
in
pop
shlb
sub
dec
push
sub
lods
add
test
fwait
into
lret
jecxz
and
cmp
mov
pop
add
jb
lods
scas
leave
or
jne
sub
sub
or
and
mov
shlb
adc
push
sub
loop
scas
xor
xor
sub
mov
int
push
sub
cmp
inc
sar
sub
cmp
xchg
jns
sub
and
dec
mov
lcall
cwtl
orb
repnz
add
jl
sub
stos
jmp
and
daa
and
mov
sub
lret
jl
mov
sar
in
adc
sub
xor
leave
inc
xchg
jnp
sub
fistl
fwait
call
or
data16
xchg
sub
fsubrs
test
aad
lret
push
ret
dec
and
js
sar
or
cld
lock
ljmp
out
xchg
sub
jecxz
mov
clc
or
pop
test
sub
cmp
push
pop
sub
cmp
into
lea
push
sub
movsl
inc
std
dec
xor
mov
inc
aas
in
out
or
xchg
jg
mov
mov
mov
sub
and
aad
aad
and
inc
push
sub
dec
or
enter
scas
loope
mov
cmp
mov
adc
cwtl
sub
sub
aas
pop
out
call
popf
cmp
out
sub
xchg
and
dec
and
mov
fldcw
push
sub
push
insl
cmp
or
fiadds
sub
push
mov
lret
lods
adc
add
fisubs
vpshufhw
and
dec
cmp
xor
fisttpl
and
fsubrl
mov
sub
push
jae
jmp
insb
mov
test
out
sub
dec
pop
push
xchg
sub
cs
sbb
test
jecxz
insl
cvtps2pi
outsb
bound
mov
ss
and
and
shlb
push
testb
mov
xchg
mov
popf
and
adc
mov
jno
jg
jne
popf
sahf
movsb
clc
in
insb
scas
and
lods
or
andb
push
insl
or
sub
sti
and
pop
sub
pop
enter
xchg
inc
or
cld
xchg
xor
lock
and
loope
aad
subb
clc
jl
xchg
xor
mov
lods
mov
sub
hlt
leave
stc
add
mov
mov
and
push
jle
pop
sub
lret
or
lea
sub
jae
lret
sbb
and
sbb
dec
mov
jnp
out
sub
cmp
xor
loop
cmp
mov
enter
out
sub
or
sub
xor
arpl
mov
insl
mov
or
sub
xchg
add
sbb
jg
rorb
mov
jb
jae
out
sub
jecxz
outsb
jg
les
xlat
and
push
mov
shl
sbbl
pop
cmp
iret
lods
cmp
stc
je
cmp
xor
xchg
movsb
imul
sbbb
imul
sbb
dec
push
xor
dec
pop
in
mov
mov
iret
sub
mov
repnz
and
pop
out
or
setns
fisubrs
in
pop
pop
ffree
mov
daa
cltd
mov
sub
xchg
fwait
mov
xor
aaa
jb
stos
dec
or
es
lock
sub
jb
xchg
bound
movsl
ds
sub
or
fldenv
sub
inc
push
dec
sahf
sub
xor
adc
lcall
sbb
aam
mov
pop
daa
rorb
xlat
adc
pop
and
inc
mov
stos
out
adc
bnd
ret
add
stos
cli
mov
loopne
call
jp
sub
jmp
daa
mull
imul
sub
clc
mov
cmc
sub
inc
inc
hlt
mov
dec
movntps
iret
sub
sbb
insb
xchg
mov
sub
out
imul
jecxz
lock
loopne
outsl
es
inc
or
int
ljmp
sub
lret
sub
and
and
lods
sub
je
sub
and
cs
and
icebp
fsubrs
mov
mov
andl
shrb
jl
add
push
ret
aas
sub
sbb
push
xor
jmp
testl
test
and
int
sbb
or
add
push
or
jnp
mov
ja
cltd
lods
hlt
xchg
mov
fidivl
push
sub
mov
or
fimull
mov
push
push
dec
sbb
cmp
daa
sbb
sub
pop
xchg
sub
jmp
inc
sub
xlat
adc
sub
int3
ficomps
and
outsb
adc
bound
scas
mov
lret
dec
inc
ror
and
add
dec
call
cmp
dec
mov
cmpsb
js
jl
lret
and
ret
jne
mov
add
xchg
mov
mov
push
sub
xchg
gs
jecxz
xor
cs
jns
js
jno
xor
sbb
inc
cmp
sub
aam
ret
inc
dec
and
cs
test
rol
out
movsb
sub
cmp
push
adc
jg
sub
inc
fldt
pop
jge
push
sub
sbb
lcall
mov
scas
sub
imul
std
in
fidivs
adc
iret
mov
pop
scas
pop
shlb
or
adc
cmc
xchg
outsl
ret
sbb
cmp
pushf
cmpsb
sub
sub
mov
incb
jmp
inc
pop
add
sbb
sub
push
jl
fisubrs
mov
mov
mov
sub
out
test
add
cmp
lahf
pop
dec
push
inc
jle
lret
cld
sub
mov
or
out
mov
push
outsb
and
pop
adc
or
in
lret
cmpsl
pop
sbb
jne
add
add
add
pop
movsl
gs
mov
cmp
lahf
sub
loope
adc
insb
xor
xchg
jnp
xor
cld
mov
sub
popa
mov
int3
push
mov
xor
dec
sub
scas
sbb
fldenv
sbb
sub
dec
or
jae
out
ret
xchg
sub
inc
jecxz
mov
or
pushf
mov
add
jp
jno
out
xor
push
loopne
ret
out
test
fists
sub
mov
sub
lcall
sub
imul
insl
dec
imul
add
sub
lea
and
mov
iret
lret
and
ret
cwtl
sbb
fcmovb
dec
sub
iret
dec
data16
or
sub
pop
in
or
dec
ret
cltd
jg
xchg
mov
adc
add
jp
loop
fimull
sub
test
mov
jns
inc
and
leave
testl
sub
sahf
cli
or
inc
test
inc
jnp
or
xor
xor
movsb
mov
loop
sub
aam
shl
jecxz
pop
aad
shlb
sub
push
lcall
adc
test
mov
sub
pop
add
sub
and
stos
pop
sub
movsb
insl
loopne
sub
jo
push
mov
push
ret
adc
adc
xor
dec
cld
sub
clc
xor
lcall
inc
cmp
inc
sub
sub
mov
imul
adc
shrl
xor
pop
sub
fcomps
sub
mov
sub
jp
mov
sub
mov
mov
push
xor
jecxz
or
cmpsb
mov
adc
push
hlt
xlat
mov
aam
arpl
sub
rclb
add
mov
pop
push
test
fistl
sbb
add
cmp
mov
jb
cmc
jg
and
mov
mov
sarb
jmp
js
aam
or
scas
lock
int3
icebp
sub
dec
jno
pop
and
xchg
repz
dec
and
shrl
sub
or
mov
push
inc
or
xlat
sub
aaa
ds
movsb
and
inc
test
ret
addb
or
mov
sub
es
and
rcl
pop
daa
fisttpl
mov
lea
mov
sub
xor
or
xchg
sub
pop
mov
pusha
js,pn
sti
add
dec
mov
mov
sub
pop
ljmp
daa
sub
and
fisubrs
xchg
xchg
push
stos
mov
movsl
xor
cmpsl
add
mov
cltd
lods
fdivl
jg
adc
hlt
popa
loop
push
dec
xchg
int
test
dec
mov
or
sbb
and
sub
adc
shrb
mov
imul
rorb
xor
mov
shrl
adc
inc
xchg
lea
push
jge
rclb
or
movsb
sub
int
sub
sbb
and
mov
adc
scas
and
sub
ret
outsl
dec
sub
xor
cld
rcrl
arpl
and
inc
test
inc
sub
jecxz
sub
pusha
aaa
adc
sub
rcrl
cmpsb
push
je
in
lret
aad
call
arpl
adc
jle
daa
fistl
out
lods
xor
cwtl
xor
adc
sub
add
mov
cmp
push
jle
loop
cs
and
loop
cmp
mov
les
adc
insb
fstps
cld
sub
out
xor
sub
xchg
mulb
pop
lret
sbb
xchg
cmp
aaa
punpckhbw
sahf
add
jp
cmc
mov
dec
mov
push
fbld
es
pop
sub
xchg
iret
sub
jecxz
fisubrs
pushf
insb
sub
jmp
nop
pop
sub
in
sub
lods
out
icebp
sub
push
arpl
or
int3
out
shl
movsb
jnp
xchg
cli
sbb
pop
ficoms
pop
stos
cmp
sub
push
orb
mov
out
leave
lods
jnp
data16
ror
fcmovb
inc
divl
xchg
dec
pop
push
out
mov
jecxz
outsl
jecxz
repnz
adc
and
out
sub
mov
cmp
sub
lds
or
cltd
in
pop
dec
mov
jo
and
fwait
and
push
movsl
cmp
cmp
sub
pop
inc
sub
leave
add
lods
and
out
sub
push
daa
jne
mov
out
scas
xchg
fists
inc
and
and
mov
xlat
inc
jmp
ja
jge
pushf
and
sub
hlt
call
sub
ret
xor
stos
mov
xor
out
mov
in
sub
stos
push
inc
jmp
lahf
pop
and
dec
addr16
mov
clc
pushf
and
sti
shlb
xlat
xchg
inc
mov
sbb
sub
and
adc
mov
xchg
or
lods
sub
xchg
mov
test
dec
dec
or
and
jp
mov
xchg
push
sub
cmp
sbb
xor
or
jnp
loope
aad
dec
cmp
stc
mov
adc
subl
out
loope
lods
sub
or
sbb
push
aas
pop
jp
sbb
sub
push
mov
add
pop
xor
shlb
hlt
test
adc
add
fstpl
inc
xor
push
lds
ja
mov
sub
out
or
sub
cwtl
sbb
repnz
or
mov
mov
int
adc
and
test
ljmp
push
cld
sbb
adc
enter
mov
xor
in
sti
cmp
sub
inc
mov
add
xor
adc
xorl
adc
lods
xor
xlat
cmp
and
call
jns
mov
push
iret
js
imul
mov
ret
jo
shll
ja
mov
sub
and
ffreep
fnsave
loopne
mov
in
sub
push
pop
bound
jbe
repz
out
push
into
push
mov
mov
clc
test
testb
fs
ss
ds
test
mov
loope
and
cmp
xchg
mov
fdivs
mov
cmpsb
sub
jge
push
movsl
sub
in
dec
ja
scas
sub
inc
add
or
js
sub
push
add
test
scas
lret
test
pop
sub
into
out
sbb
and
cld
mov
sub
jno
inc
lret
add
xor
cmp
pusha
in
ljmp
sub
xchg
cmc
add
sub
mov
cmp
and
jle
push
sub
out
outsl
mulb
sti
sub
stc
repz
jne
or
jb
cs
inc
stos
sub
push
sbb
sub
test
mov
je
leave
push
test
arpl
aam
xor
xor
push
ret
jmp
and
and
lods
jg
sub
adc
test
popa
sub
jp
cmp
aam
subb
push
mov
add
in
fldcw
fisubl
dec
sub
ljmp
xchg
fstl
daa
jecxz
popf
and
ja
jmp
sub
mov
pop
mov
lret
mov
pop
inc
push
ret
lods
mov
das
subb
cmp
int
int3
ljmp
sub
arpl
adc
inc
sub
or
bound
push
xor
push
pop
stos
mov
mov
iret
vunpckhps
sub
test
fidivl
ljmp
dec
aam
daa
and
jae
jnp
in
cli
mov
lds
mov
cmpsb
test
inc
gs
fwait
out
sub
or
js
pop
push
fcmovu
test
push
and
dec
mov
mov
test
mov
imull
ret
cltd
xchg
sub
inc
icebp
iret
out
adc
xor
fimuls
fsubrp
hlt
mov
aam
shlb
pop
pusha
add
ljmp
sub
jle
jmp
sub
inc
and
fiadds
adc
pop
or
jb
ret
cmpsl
pop
lcall
pop
jne
push
loopne
ja
cmp
sub
arpl
subb
sbb
or
sub
pop
push
adc
or
rorl
cld
sub
xchg
pop
fldt
sub
sub
xchg
cmp
and
out
add
dec
fsubrs
icebp
fs
dec
test
in
mov
sbb
push
cwtl
lahf
ljmp
test
xchg
dec
test
push
mov
loope
adc
stc
cmp
mov
inc
or
adcl
outsb
adcb
lock
pop
leave
lcall
adc
out
mov
xchg
lods
inc
aas
sub
ds
nop
xor
hlt
push
sub
into
iret
pop
mov
shrb
in
add
fucom
or
sub
cmpsl
xor
mov
mov
jp
out
jns
shrb
sahf
call
cltd
or
rolb
sub
mov
es
xor
sub
insb
jae
cli
cld
mov
and
push
jg
mov
je
sub
ret
jp
push
insl
pop
testb
sub
std
xor
inc
ret
push
bound
adc
sub
dec
nop
cs
push
out
push
sub
push
rorl
cld
and
and
test
js
mov
jmp
lret
shrl
subb
sub
mov
cmp
sub
inc
mov
stos
cmc
add
popf
imul
pop
int
sub
insl
jecxz
or
scas
shrl
sub
cld
add
sub
stc
push
mov
adc
cmp
arpl
xchg
and
add
sub
jnp
pop
lcall
jp
stc
and
jge
cli
xchg
pop
xor
mov
sub
les
mov
scas
push
inc
sub
jmp
clc
in
sub
lahf
stos
push
or
imul
pop
cwtl
xchg
and
push
dec
or
xor
sub
cld
xor
daa
pusha
shll
loope
inc
xor
or
sub
xchg
not
lds
hlt
xor
arpl
adc
push
sub
hlt
mov
call
dec
lods
mov
and
add
daa
sub
sub
push
mov
xchg
inc
cmp
xchg
lcall
cmp
jo
push
mov
cli
add
jecxz
cs
sbb
test
icebp
xor
or
mov
sub
sub
push
scas
xor
test
mov
xor
int
fs
and
movsl
loope
lods
js
sub
jle
insl
cmc
jecxz
addr16
sub
push
and
xchg
inc
xchg
sti
push
repnz
test
les
pop
xchg
xor
test
imul
push
ret
cwtl
lods
pop
enter
jns
loope
pop
mov
mov
arpl
into
aad
push
or
imul
subb
jge
push
xor
mov
push
icebp
jae
test
sub
sub
sbb
mov
fcoms
icebp
dec
js
ret
mov
nop
jmp
mov
test
sub
sub
cmpsb
jmp
push
aaa
xchg
adc
dec
and
es
cmp
xlat
js
mov
mov
jb
pop
out
out
push
in
sub
neg
sbb
ljmp
push
mov
xor
pop
adc
and
mov
mov
das
or
insl
push
pusha
daa
fs
jp
xlat
mov
push
lock
and
mov
pop
jo
mov
xchg
int3
nop
inc
sub
pop
ret
cld
into
lcall
dec
je
ds
loopne
sub
mov
pop
sbb
sub
inc
mov
and
in
mov
leave
sub
push
push
addr16
scas
roll
cmp
sbb
sub
xchg
addl
gs
fs
xchg
add
or
or
xchg
mov
imul
fcoms
or
sub
int
lods
sub
mov
mov
or
xchg
push
sub
cld
lods
or
sub
aad
cmp
push
sub
icebp
mov
mov
jbe
pop
jo
sub
call
pop
lahf
std
jne
sbb
xor
mov
push
int3
jg
sbb
xor
int3
mov
lea
mov
or
adc
dec
push
jbe
lods
in
mov
push
outsb
icebp
sub
hlt
rcl
sub
cmpsl
sarl
xchg
sub
mov
test
sub
dec
sbb
mov
jp
mov
pop
inc
sub
dec
scas
clc
ds
outsl
pop
enter
adc
int
sub
sub
add
xor
cmp
mov
sahf
ss
bound
and
inc
test
cwtl
adc
sbb
syscall
lret
imul
push
add
enter
push
mov
popf
movsb
push
jecxz
inc
dec
out
and
das
sarl
arpl
ret
cmc
call
and
sub
xchg
pop
fnstenv
mov
xor
mov
divl
lahf
jle
jg
ds
pop
push
sbb
sub
mov
repz
pusha
xor
inc
cwtl
mov
cld
ss
mov
lods
inc
sarb
daa
mov
and
jnp
mov
sub
mov
and
sbb
ja
xchg
sub
cmp
sub
sub
cmp
in
cmp
push
adc
mov
xor
mov
fcmove
pop
push
clc
je
sub
insb
out
adc
sub
popl
daa
add
lock
stos
xchg
sub
iret
mov
jne
inc
shll
cmp
clc
add
push
fsubl
cli
hlt
sub
push
dec
icebp
out
jne
mov
mov
stos
xchg
inc
and
fldt
and
sub
frstor
aad
and
mov
les
push
daa
lahf
push
adc
mov
test
pop
shll
push
mov
add
sbb
or
in
adc
push
pop
pop
jnp
sub
pop
add
decb
pop
sub
cmp
aad
es
sub
xor
add
inc
or
mov
jp
sbb
and
jae
cmpsb
jecxz
leave
sarl
sub
jmp
sub
jl
push
js
add
cmp
pop
sub
lods
mov
sub
push
cmpsb
xchg
pushf
out
sub
dec
xchg
movsb
mov
dec
xchg
cli
ds
lahf
adc
out
push
aad
push
adc
inc
or
call
xor
ret
sub
mov
iret
sub
mov
mov
pop
repnz
xor
adc
jl
jecxz
mov
pop
cmp
lds
es
daa
mov
lcall
fwait
adc
jbe
dec
dec
sub
fstpt
pop
popf
push
pop
jb
add
xor
mov
mull
dec
cvtps2pi
int3
dec
inc
data16
adc
shrb
mov
test
sub
mov
adc
das
fwait
lret
sub
xchg
xlat
xchg
sub
push
push
inc
imul
and
jns
ret
shl
jmp
and
mov
stos
add
ljmp
loopne
fisttpll
cmp
dec
mov
mov
pop
jns
inc
add
lret
dec
shlb
sub
rcrl
add
fmuls
add
inc
xchg
push
adcl
mov
mov
sub
mov
movsl
cld
inc
xor
jmp
pop
cmpsb
dec
mov
cmpsl
test
jp
push
and
inc
call
mov
inc
xchg
scas
adc
mov
sub
out
loope
sub
push
loopne
nop
and
xlat
int
ret
pop
push
and
xor
jecxz
insl
sub
std
fdivrs
out
mov
cmpsl
cmp
xor
and
outsb
push
sub
sbb
stos
mov
fwait
push
gs
xor
pop
fnstsw
je
mov
add
lret
sti
test
sub
pop
mov
das
mov
cs
shlb
lds
in
and
push
and
dec
add
mov
sub
dec
add
push
xor
insb
jno
sub
enter
call
cltd
into
in
sub
insl
or
mov
xchg
sbb
mov
mov
outsb
inc
cmpsl
bound
and
lret
jp
dec
cs
sub
and
fsubrp
sub
sbb
dec
imul
js
sub
mov
adc
or
mov
test
mov
xor
fistpll
push
ljmp
pop
leave
sub
jg
cwtl
mov
jbe
and
inc
mov
jge
scas
loopne
cmp
shrl
sub
iret
int3
pop
sbb
mov
jecxz
das
outsb
into
lcall
fimuls
sub
cltd
xor
int
jae
rcll
and
aad
and
loop
cs
xchg
pop
in
shrl
ljmp
inc
push
movsl
or
push
pop
cmp
sbb
sub
scas
inc
sbb
sub
pop
into
fistpll
outsl
insb
push
test
loop
push
cmpsb
scas
push
jb
cld
sub
sub
inc
mov
adc
sbb
xchg
aad
mov
lock
sub
lcall
sub
faddl
inc
dec
addr16
loopne
dec
sub
mov
or
dec
fcmovne
out
lret
pop
mov
mov
inc
jmp
or
mov
out
lods
or
inc
push
lcall
notl
pop
and
fisubl
ret
sbb
scas
sub
stc
xchg
pop
adc
insb
and
mov
xor
xor
jnp
inc
lcall
push
adc
push
leave
adc
scas
pop
cmp
fisttpll
xchg
and
pop
cmpsb
sub
fcmovnb
sub
jae
iret
jmp
out
out
add
les
jl
pushf
mov
inc
into
push
test
sbb
cmp
psubd
and
lods
add
stos
push
push
xchg
mov
push
stc
ror
or
adc
sbb
subl
jbe
sub
mov
out
pop
lea
adc
enter
xchg
push
push
iret
pop
ret
sub
out
push
daa
bound
dec
dec
push
cli
repnz
rol
add
and
lret
xor
sub
jo
inc
mov
enter
or
jb
mov
sub
add
pop
fwait
ret
inc
push
sub
cmp
mov
out
leave
ret
cmp
cli
sub
testl
and
inc
mov
sub
lret
xor
or
test
xchg
inc
aam
or
daa
iret
sub
inc
push
xlat
loop
cltd
push
inc
cwtl
jne
mov
jns
push
sub
jmp
ret
mov
hlt
stos
subl
or
cmpsb
dec
loopne
adc
into
and
lret
sub
cmpb
lds
cmp
imul
loopne
test
sub
sti
lods
adc
int
mov
mov
inc
add
push
sub
sub
sbb
sub
fs
roll
xchg
aad
pop
inc
sub
add
fdivs
or
push
pop
mov
xlat
pop
pop
jp
and
jne
jle
ljmp
pop
inc
xchg
xchg
jbe
sbb
cltd
or
inc
idivl
push
popf
movsl
adc
je
rcrb
movsb
sbb
and
mov
fscale
cmpsb
dec
out
and
xchg
call
aas
jge
cmpsl
sbb
xor
int
xor
mov
xchg
mov
inc
ret
add
pop
cmpsb
or
fnstsw
addr16
cmp
dec
movsl
daa
pop
pop
gs
clc
mov
out
adc
jbe
cmp
cli
lds
mov
ds
xor
pop
loop
mov
lret
sub
icebp
add
test
adc
push
mov
insl
cmpsb
lret
sub
inc
sbb
roll
pop
bound
aam
push
lret
gs
les
js
cmp
cmpsl
dec
pushf
mov
fnstcw
ret
lahf
cld
mul
cltd
call
rorl
popf
sub
cli
pop
pop
pop
sub
in
cmc
xor
fdivs
sub
jg
inc
gs
jl
sub
int
adc
gs
repz
and
inc
lds
or
ss
jmp
add
fisttpll
mov
rolb
jno
cmp
ja
push
out
xor
jo
push
push
mov
enter
int
outsl
je
in
out
and
dec
sahf
sbb
into
or
or
movsb
xor
jae
pop
fnstenv
push
xor
adc
outsl
xchg
sub
aam
cmpsb
jl
mov
cld
leave
xchg
add
lret
arpl
sbb
inc
jmp
mov
das
xor
repz
pusha
test
shll
movsb
pop
cwtl
sub
sub
dec
fstp
push
sub
orl
pop
jle
sub
rdpkru
xchg
movl
xchg
lods
cmpsb
inc
mov
sub
jno
in
cmp
push
repz
incl
insb
outsl
test
push
and
je
and
ret
lahf
lcall
aam
es
or
add
lods
jl
inc
sub
mov
pop
iret
sub
dec
mov
mov
xor
jle
scas
fwait
cld
jp
sub
cltd
fistpl
sub
sbb
jecxz
sub
les
cltd
mov
xor
test
imul
loop
mov
cmp
out
push
lods
aad
sub
push
xchg
push
jne
stos
and
int3
dec
out
mov
sub
cli
arpl
stos
imul
lds
push
test
data16
lds
iret
loope
sti
sub
sahf
cld
or
daa
fisubrl
imul
and
mov
fs
mov
outsb
push
lret
mov
add
fwait
sub
scas
dec
imul
mov
sub
pop
ret
adc
jb
imul
adc
notl
cs
sbb
and
fstl
aas
outsl
add
sub
in
mov
lcall
aam
push
outsl
daa
sub
adc
in
call
inc
sub
repz
jns
fisubs
in
addb
fwait
lcall
gs
xor
jl
pop
cmp
pop
pop
push
movsl
vpmaddwd
mov
imul
lret
push
mov
clc
test
adc
repnz
inc
adc
sahf
movsb
dec
sub
imul
mov
or
adc
pop
push
cmc
sub
daa
rolb
pop
das
fsubr
and
out
dec
into
sbb
xor
sbb
ljmp
mov
imul
loope
cmp
jbe
cmpl
repz
popa
sub
dec
mov
mov
fs
es
push
addr16
pop
fdiv
fdivr
jne
rcll
sub
dec
aas
sub
pop
inc
mov
sub
push
andl
sub
ja
int
roll
filds
data16
sub
insb
icebp
or
cmc
dec
lret
pop
sub
pushf
adcl
shl
xchg
sub
mov
and
sub
out
data16
push
push
mov
lahf
xchg
mov
sub
jno
push
scas
sub
mov
sub
mov
stos
adc
pushf
shrl
sbb
adc
bound
insb
sbb
xchg
pop
and
cmp
xor
divb
dec
dec
and
cmp
js
or
les
xor
and
push
mov
mov
test
cmpsb
aaa
sub
xor
push
mov
jnp
or
pop
xor
fs
mov
lahf
call
push
cvttps2pi
dec
outsb
fistpl
mov
dec
sbb
cld
sahf
mov
sbbl
shrb
adc
pop
inc
roll
sub
and
int
cli
fwait
cmp
mov
xchg
sub
jo
das
fstpl
sahf
pop
xchg
test
or
sub
push
mov
cmp
rol
fnsave
mov
push
outsl
sbb
dec
aam
cmp
and
int
dec
mov
adc
xchg
sub
inc
mov
sub
mov
or
dec
mov
sub
shll
mov
xchg
add
mov
sub
hlt
push
or
adc
and
fstpl
cs
daa
cmpsl
cltd
out
mov
sub
xchg
loope
adc
in
int
cmp
ds
or
sahf
mov
sub
adc
sub
ret
int3
sbb
and
stc
ret
adc
insb
sub
in
or
xchg
sub
mov
and
mov
lret
sub
pop
xchg
add
sub
cmc
jnp
sub
adc
jae
sub
adc
and
frstor
les
sub
rcl
mov
mov
dec
adc
push
out
lods
and
inc
push
std
cld
cmp
int3
test
sub
push
cmp
pop
cmpsl
lds
add
inc
fildll
pop
push
out
push
outsb
cmp
xlat
push
pop
sub
mov
iret
call
adc
sub
fidivrl
sahf
mov
xchg
stc
mov
or
lea
in
and
or
jge
cmp
push
mov
sbb
cmpsb
add
inc
and
dec
xchg
sub
mov
pop
jnp
shlb
sbb
sub
std
xor
lods
xor
lret
cmp
push
fisubs
adc
push
repnz
loopne
jge
pop
rcr
mov
aam
bound
daa
andl
push
and
sub
jmp
dec
sub
jnp
cmpsb
imul
jns
sub
popf
subb
sub
mov
pop
scas
mov
repz
int
stos
sbb
sub
dec
pop
mov
sub
or
or
lds
outsb
jg
adc
lcall
loopne
loop
inc
sub
mov
xorl
lcall
pop
mov
add
jns
fsubrs
sbb
movsl
in
es
push
in
ljmp
daa
ljmp
xor
xchg
adc
scas
add
shl
fwait
insl
cmpb
andl
ja
cmpsl
nop
pop
aam
clc
sub
mov
dec
shl
std
mov
pop
push
aas
jecxz
mov
outsb
xor
and
mov
mov
outsl
ss
and
and
inc
frstor
xchg
sub
dec
adc
pop
pop
xchg
je
sub
push
add
out
xor
aam
cwtl
out
push
hlt
mov
push
jl
or
pop
aas
and
push
or
or
xchg
add
fidivl
int3
inc
enter
ret
jl
dec
or
insl
mov
jnp
sub
xor
sub
push
sbb
add
jge
rorl
pop
pop
push
adc
loop
pop
sub
aad
dec
dec
sub
mov
js
or
sub
call
and
leave
popf
dec
sub
mov
adc
xor
xchg
dec
jecxz
adc
fwait
jg
scas
add
push
and
dec
mov
cmp
movsb
repz
sub
outsb
int3
sub
pop
rcll
sub
nop
dec
mov
push
push
sbb
ds
mov
shrb
mov
sub
jns
sub
and
and
jge
sbb
xchg
sbb
sub
clc
jp
sub
shrb
or
and
les
es
movl
xchg
and
push
cmpsb
jecxz
jnp
sub
xchg
mov
dec
inc
push
int
sbb
fistpl
loope
sub
xor
clc
cmp
aad
pop
insb
sub
into
faddl
mov
push
dec
bndstx
mov
ljmp
pusha
sti
shr
sub
or
sbbl
sub
xchg
std
cmp
xor
lahf
sbb
test
or
jp
ret
adc
stc
test
sub
pushf
insb
repnz
push
sub
cmp
lahf
mov
jns
outsb
mov
sub
mov
sub
loope
test
sub
and
fldt
andl
into
mov
ret
pop
imul
pushf
ret
mov
dec
sub
mov
sti
cmp
mov
push
xchg
fisubrl
mov
inc
subb
jne
lret
int3
add
jge
pop
cmc
and
or
xchg
or
imul
adc
add
cmp
out
sub
cld
iret
sub
mov
push
sub
jg
cltd
repnz
fldt
and
into
mov
test
lds
std
stc
mov
rorb
sub
cmp
pop
aaa
aam
xor
ds
sub
cmp
pop
shrl
and
loope
xlat
or
adc
mov
adc
fcoml
mov
addr16
jp
adc
xor
sub
test
test
xor
cmp
jnp
cmpsb
xchg
sub
mov
mov
jmp
adc
inc
test
cmp
pop
loopne
sub
and
daa
push
sub
sub
and
popf
in
dec
dec
xchg
sub
inc
mov
clc
icebp
aad
adc
sub
sub
mul
mov
imul
ljmp
aad
shlb
repnz
xchg
add
sbb
and
gs
into
ljmp
jp
inc
mov
ljmp
sub
mov
xlat
and
mov
lods
mov
sub
shlb
xorl
sub
dec
xchg
sub
sbb
cmpb
sub
xchg
sub
mov
xor
ret
gs
sbb
xor
int
dec
cmp
xchg
dec
sub
and
mov
inc
ljmp
dec
call
xchg
ljmp
mov
adc
ss
mov
sub
or
aad
mov
mov
sbb
jns
xchg
push
sub
push
sbb
mov
sub
jge
fsubrs
xchg
push
xchg
pop
push
insl
mov
mov
fstps
int3
jae
mov
inc
mov
into
imull
lret
push
and
sub
push
pop
fisubs
testl
sub
and
in
sub
in
fiadds
roll
sub
sbb
push
xor
xor
jbe
xor
jl
lods
lods
sub
mov
scas
int3
outsl
jbe
imul
insl
jne
mov
xchg
pop
adc
outsb
lods
nop
test
loopne
bound
sub
sbb
adc
push
sbb
and
jl
push
sarb
cmp
aas
ret
mov
loopne
rclb
inc
dec
jecxz
and
jge
mov
xchg
sub
popa
pop
pop
pop
mov
cmp
sub
xor
inc
mov
test
push
fmuls
cld
mov
stos
pop
insl
aas
xchg
outsl
or
pop
cmpsb
push
sbb
xor
mov
pop
arpl
or
aas
inc
sbb
les
out
cmpsl
cmpsl
mov
pusha
cli
cltd
mov
sub
pop
xor
leave
call
fdivl
inc
inc
jecxz
mov
pop
in
inc
jle
nop
xor
mov
mov
xchg
aad
push
mov
inc
sub
shl
add
jae
shlb
fisubl
sub
dec
inc
xor
sub
mov
mov
push
stc
ss
adc
sahf
push
jnp
mov
fstpt
repz
sub
and
push
std
clc
cld
mov
sub
js
add
aam
stc
cmc
je
testb
sub
shlb
aad
mov
xchg
mov
sub
jmp
xor
daa
sbb
inc
push
es
and
cli
out
ljmp
popf
mov
and
mov
pop
sub
sub
xlat
int3
sub
add
cli
and
jg
adc
inc
adc
mov
fimuls
sbb
mov
jmp
adc
xlat
mov
sub
mov
repnz
addr16
dec
jne
mov
rcll
mov
adc
in
xchg
mov
ljmp
mov
in
add
fwait
daa
adc
aaa
pusha
jb
into
dec
sub
inc
mov
negb
loop
sub
faddp
leave
mov
xor
imull
xor
push
fstpl
inc
and
adcb
xor
lret
adc
sub
fisubl
mov
xor
push
daa
imul
subb
inc
sub
inc
mov
and
lds
add
gs
nop
scas
sub
outsb
ret
ja
lcall
jo
or
rclb
addr16
imul
push
pop
daa
jns
sbb
cld
sub
pop
loop
adc
imul
iret
lret
mov
call
adc
shrl
sbb
xor
mov
lcall
es
aad
jns
and
add
sbb
fsubs
sub
cmp
dec
adc
int3
int
clc
inc
stc
jp
push
loop
xchg
adc
sub
sti
and
and
movsb
mov
imul
or
es
lods
mov
and
cmpsl
std
fildll
negb
jnp
out
mov
in
sub
ja
les
call
push
aas
sbb
sub
orl
fwait
sub
push
push
shll
xchg
fstpl
adc
shrl
ror
pop
sub
cmp
ljmp
rcrb
sbbl
xchg
das
sub
jg
add
xor
popf
xchg
in
sub
mov
xor
sub
stos
add
incb
and
mov
in
adc
sbb
xor
mov
xor
fwait
sub
lret
add
mov
lar
jns
movsb
imulb
outsl
lods
and
xor
js
stos
mov
xchg
mov
add
popf
mov
and
sub
filds
mov
or
xor
jg
inc
push
insl
jbe
fwait
or
sub
mov
add
sub
rcrl
test
sub
add
jecxz
sub
fisttpll
sbb
or
outsl
shrb
jecxz
lea
mov
xchg
push
xor
pop
mov
sub
iret
jge
ret
sub
in
pop
call
sub
scas
lcall
fs
outsb
mov
shrl
sub
jle
mov
jb
outsb
outsl
scas
or
into
adc
sbb
and
xchg
arpl
bound
cmp
sbb
add
shrl
ja
xchg
mov
mov
pushf
insl
rcrl
or
fdiv
mov
sub
int3
outsb
orl
outsl
jle
test
xchg
adc
and
jo
test
sub
mov
out
gs
in
pop
dec
cmp
jl
sub
sub
movsl
je
xor
dec
ret
les
lahf
fs
cmp
popf
imul
mov
xchg
js
sbb
xor
add
sbb
sub
cmp
xor
aam
mov
fldt
fldcw
mull
dec
fidivrs
xorl
mov
pop
jecxz
dec
fwait
les
xor
mov
dec
cld
decl
sub
nop
mov
stos
push
andb
lds
shll
bnd
push
sub
loop
adc
cli
sub
xchg
mov
pop
xor
push
push
and
sbb
rorb
popa
std
sub
outsl
dec
xor
jp
sub
stc
in
sub
div
adc
dec
dec
xchg
and
sub
sbb
in
mov
aad
xor
insb
mov
cmp
add
cmc
pushf
aaa
enter
sub
xlat
xor
sub
outsb
ljmp
sub
aad
maskmovq
imull
repz
push
push
sub
ds
scas
sub
inc
mov
cwtl
sub
dec
mov
aam
push
adc
sbb
idivb
insb
dec
jmp
dec
popa
inc
aas
xorl
jns
xor
call
ret
jbe
lcall
mov
add
and
sbb
insb
dec
inc
push
inc
sub
jnp
inc
pop
sub
jge
insl
lret
add
clc
sub
mov
addr16
insb
cmp
out
sub
xchg
lahf
and
inc
push
mov
sub
aad
shr
sub
jl
fmuls
jge
lock
mov
cmp
sub
xchg
scas
pop
sub
imul
push
sub
jbe
movsb
into
jp
sub
fisubs
push
adc
lret
cmpsl
subb
pop
sub
mov
ret
loopne
pop
xchg
sub
push
adc
add
sarb
inc
fbstp
push
xor
xor
fdivr
sub
loopne
dec
test
mov
add
pop
mov
leave
cmp
inc
or
dec
sub
mov
out
scas
mov
cli
pushf
sub
push
decl
sub
inc
subl
aad
out
push
adc
stos
xchg
test
xor
adc
out
enter
mov
sub
cmp
insl
inc
adc
sub
sbb
inc
sub
mov
or
fisubl
jns
mov
lret
sub
call
shrl
imulb
aas
dec
in
and
nop
movsb
or
cmc
sahf
sub
gs
jp
call
mov
mov
ss
mov
dec
mov
out
lcall
dec
push
sub
mov
sti
sub
out
jbe
jo
xlat
int
cmp
jae
enter
xor
push
mov
ja
adc
sub
or
pop
mov
jle
sbb
cli
sbb
lods
adc
sub
cmp
int3
out
not
cld
jmp
adc
icebp
and
jge
subl
in
rcl
das
lret
sub
and
scas
adc
mov
movsb
test
push
into
sbb
scas
push
jbe
fiadds
fidivs
into
movsb
cmp
fdivrs
dec
sub
je
or
incb
pop
xchg
das
roll
sti
xchg
jp
sub
inc
add
clc
fisubrs
and
jb
sub
and
cmp
dec
xchg
push
rcrl
fldcw
lods
xor
push
add
std
ret
cmp
insb
push
sub
sbb
test
lret
jecxz
jae
push
out
lahf
sub
ja
adc
dec
ret
jnp
sub
inc
xor
sub
icebp
push
popa
push
xor
mov
out
xchg
lret
and
push
loopne
lret
sub
dec
lds
pop
xor
pop
nop
rorl
jecxz
int3
das
les
mov
mov
sub
outsl
loop
pop
stc
in
mov
push
addl
xorb
insb
push
sbb
aaa
dec
int3
sbb
inc
out
movsb
mov
sar
out
repnz
imul
orb
sub
lea
stos
sub
mov
iret
xor
mov
hlt
sub
repnz
vandnps
inc
and
aaa
sbb
and
in
inc
sub
dec
cmpsl
mov
sub
sub
and
dec
sbb
inc
mov
pop
imul
jb
mov
inc
leave
mov
popa
movsl
test
cltd
xchg
sub
push
hlt
sub
adc
xchg
adc
push
pop
int3
inc
inc
xor
xor
daa
and
sub
dec
out
jmp
mov
and
jne
xor
jmp
sub
sahf
data16
sub
clc
xlat
pop
loopne
cwtl
lret
out
outsl
push
cmp
ret
xor
sub
pop
shrb
adc
sub
addr16
clc
and
mov
imul
sub
jg
add
test
mov
shlb
mov
add
or
ret
lods
and
inc
mov
sahf
fcoms
pop
outsb
lock
dec
adc
push
pop
jp
pop
sub
jne
bnd
xchg
sti
dec
mov
xorb
stos
movsb
dec
loope
mov
jbe
push
cmpsl
add
jecxz
mov
xor
xor
jne
arpl
push
ss
sub
mov
sbb
jns
xor
pop
test
rcrl
gs
pushf
mov
rorb
and
and
sub
lret
inc
adc
sbb
push
xor
xor
sub
into
or
cwtl
sub
ds
push
or
pop
gs
fdivrl
or
fisttpl
test
aad
sti
loope
push
sub
test
mov
adc
and
adc
sub
fldt
sub
xor
sbb
and
and
push
sbb
add
mov
mov
lret
sub
cs
or
mov
xchg
dec
call
push
xor
sub
popl
jl
popa
shl
mov
mov
outsb
insb
pop
sub
ss
les
sub
psubq
push
jg
inc
sub
jbe
pop
adc
gs
sub
call
sbb
icebp
xor
push
dec
sub
sub
mov
cmpsl
mov
test
sub
dec
shrb
pop
pop
jnp
or
fsts
cmp
inc
and
and
xchg
add
repnz
clc
out
sub
sahf
jmp
xchg
fisubrl
inc
in
sub
das
cwtl
sub
subl
pop
mov
movsb
sub
lds
cld
push
dec
adc
pop
push
insl
arpl
push
inc
cmp
adc
das
ret
xchg
xor
test
sub
jb
fsubrl
sbb
add
stos
jl
sub
mov
push
and
sub
lock
add
sub
pop
mov
xchg
outsb
inc
adc
fbstp
sub
pop
sub
andb
test
and
and
mov
mov
sub
in
into
fldt
mov
adc
adc
in
sbb
xor
sub
mov
push
add
xchg
pop
mov
adc
dec
scas
sbb
add
gs
call
sub
jae
mov
sub
inc
les
out
xorb
cmp
and
cmp
mov
add
lods
pop
cmp
cmp
sub
mov
inc
cmp
lahf
sbb
in
jl
sub
adc
fcompl
aad
ret
and
push
adc
pop
lea
dec
adc
jp
cmc
pop
sub
sub
sbb
cmp
and
jne
add
gs
jl
sub
cmc
xchg
mov
popf
fsubr
sub
cwtl
sub
pushf
mov
cmp
clc
repnz
loope
cmp
sub
and
mov
and
out
cmp
sub
sub
negl
out
push
add
inc
and
mov
and
adc
pop
cmp
imul
sti
ret
sub
int
xor
sub
pop
sbb
and
aas
and
jno
scas
adc
sub
xchg
jmp
ret
sub
mov
decl
inc
dec
sarb
les
or
das
stos
xchg
pop
bound
pop
cmp
sub
ja
aad
sub
jl
mov
sti
sarl
inc
lcall
push
sub
ja
subl
outsb
mov
xchg
in
repnz
sub
pop
cmp
jae
inc
lock
insb
mulb
es
or
xchg
sub
pushf
pop
or
fistl
addr16
shrb
loope
test
adc
push
push
sbb
inc
or
push
mulb
sub
data16
mov
cmp
xchg
and
fwait
stc
shrb
cs
jmp
sub
dec
xor
repnz
call
mov
mov
push
push
in
test
xor
inc
pop
sub
icebp
dec
mov
xor
pop
jl
push
ja
sub
stos
sub
sbb
pop
pop
cwtl
js
enter
inc
mov
or
xor
ds
mov
push
cmp
inc
sub
xchg
sub
push
repnz
sub
xchg
pop
lea
sub
insl
enter
inc
add
xor
sub
mov
arpl
cmp
imull
pop
adc
add
in
fisubrs
les
rorl
xor
jg
add
push
js
and
push
out
call
shrl
cmpsb
popf
sub
xor
push
arpl
xor
sbb
shrl
jg
push
fcomps
andb
int
mov
repz
gs
xor
mov
lret
mov
cmp
jge
adc
mov
sub
fs
fwait
cmp
lock
xor
out
call
in
xor
ljmp
or
or
cmp
in
add
mov
ret
cmp
xchg
std
xchg
insl
pop
scas
sub
shlb
sub
outsl
sub
or
jne
jnp
and
mov
loopne
pop
inc
call
sub
rolb
xchg
push
mov
hlt
jge
sub
add
and
hlt
pop
scas
push
dec
sub
jge
out
jle
fdivrs
dec
or
jns
and
sub
push
test
cmp
shl
inc
mov
sub
in
lock
je
adc
add
jp
lahf
pop
add
stc
push
dec
adc
repz
sub
mov
leave
xor
aad
mov
sub
mov
cwtl
gs
test
xchg
shlb
arpl
jmp
ds
mov
xor
xchg
aad
xchg
scas
inc
sub
insl
les
inc
jge
mov
xchg
and
sub
xchg
outsl
cmpb
std
or
push
mov
leave
lahf
dec
andb
sub
loope
into
mov
pop
movsb
and
js
inc
jns
adc
in
cmpsl
inc
hlt
sub
aam
jno
cmp
sub
sub
jnp
pop
ljmp
cmpsl
sub
pop
sub
mov
or
mov
dec
jecxz
push
sub
lock
mov
stos
aam
in
sub
sbb
sub
jge
pop
add
addb
sub
xchg
mov
int3
cld
mov
mov
movsl
mov
sbb
enter
das
or
cs
sub
ret
push
sub
imul
sub
add
pop
test
jmp
movsl
stc
inc
cwtl
sub
scas
fsubs
sub
mov
ss
mov
ret
sub
out
stos
inc
xor
aas
insb
loopne
jge
sub
jl
les
cmpb
pop
adc
adc
test
mov
stc
fxch
adc
jecxz
pop
inc
sti
pop
cmpsb
sbb
jne
pop
sub
stos
popa
cmpl
fxam
mov
cmp
xchg
sub
movsl
dec
push
or
sub
pop
dec
mov
sub
xchg
jp
into
sub
push
ljmp
fisubl
inc
dec
aam
mov
sbb
adc
test
sub
andl
ss
ficomps
and
sub
lea
psubsb
pushl
ljmp
fwait
sarb
jmp
lods
sbb
push
xor
mov
loope
iret
mov
rolb
mov
js
and
inc
stos
icebp
fidivl
dec
xchg
pop
cmp
lods
adc
cwtl
inc
mov
mov
mov
push
or
xlat
test
gs
and
sub
adc
adc
mov
mov
sub
inc
jnp
xor
pop
ja
insl
nop
push
cmp
dec
sbb
pop
mov
stc
cmp
inc
outsb
mov
and
popa
cld
sub
mov
popf
into
testb
dec
sub
lret
js
mov
cmp
test
fisttpll
xor
mov
xor
fidivs
sub
sbb
lods
mov
adcl
xlat
int
jmp
push
mov
jg
sub
outsb
fldl
std
push
pop
or
push
movsl
inc
out
mov
jecxz
xor
xchg
cli
or
rolb
hlt
and
or
sub
outsl
out
jp
push
mov
and
sub
das
es
xor
subl
fldl
push
or
sub
sahf
push
in
mov
test
sbbb
push
xor
sub
imul
sbb
adc
mov
out
cmpsl
mov
pop
sub
push
xchg
sub
push
shll
sub
sub
dec
out
jp
sub
dec
sbb
sahf
sub
jle
gs
xchg
xor
int3
out
push
sar
sub
xchg
pop
lret
insb
sub
or
in
rcll
fstl
and
mov
adc
inc
imul
ret
bound
mov
jp
adc
sti
push
dec
jnp
sahf
out
sbb
test
jns
mov
pop
sub
mov
jg
cmp
insl
add
inc
xchg
jbe
push
dec
cmc
popf
fisubl
fldt
es
mov
into
pop
mov
shl
sub
inc
std
pusha
xor
push
cmpsb
imul
les
dec
sub
inc
mov
adc
jl
cli
cs
cwtl
mov
cli
js
cmp
enter
leave
orl
clc
sbb
dec
xor
je
push
cwtl
sub
leave
or
das
lds
cmp
xor
and
fstl
sub
in
fdivrs
adc
cltd
dec
std
mov
fwait
sub
scas
dec
dec
stos
aaa
lds
frstor
xor
test
sub
mov
jb
mov
mov
movsl
divb
out
push
fstpl
test
jb
adc
push
daa
add
push
icebp
sub
out
dec
rcrl
sub
aam
sub
lcall
xlat
mov
add
inc
loop
adc
mov
or
push
nop
cmp
sub
jo
ffree
adc
lock
sub
fdivrl
mov
pop
mov
stos
inc
push
sub
int3
pop
pop
outsb
and
aas
jecxz
daa
sub
jnp
dec
inc
clc
sub
lods
stc
sub
inc
add
xchg
add
sub
mov
lret
pop
out
mov
xchg
aad
arpl
shrl
mov
lods
sub
in
dec
fisubrl
dec
cmpl
cmp
mov
adc
add
xchg
cmpsl
sub
adc
or
divl
mov
negb
stc
cmpsl
paddd
pop
dec
jl
jo
out
shrl
pop
test
repz
adc
ja
out
and
push
test
add
shrb
sar
inc
sub
mov
rorb
cld
outsb
pop
in
pop
add
les
in
dec
xchg
popf
pop
out
fidivs
push
pop
push
xchg
mov
sub
cwtl
lods
cs
mov
lret
or
andl
ds
push
cmpsb
push
sub
pop
pushf
xchg
in
pop
push
fcomi
push
enter
adc
lods
aas
ficoms
mov
mov
mov
xor
sbb
mov
bound
jo
arpl
jbe
lret
sub
insb
cs
add
fsubp
out
div
adc
subb
mov
pusha
sub
mov
jmp
sub
popf
and
mov
lock
fildll
push
xor
lods
inc
arpl
jnp
out
jg
mov
aaa
pop
sub
and
mov
rep
push
mov
sbb
adc
ss
sub
sbb
mov
push
call
jb
and
inc
sarb
jae,pt
roll
in
mov
and
jge
sub
xchg
sub
jb
add
adc
es
scas
call
sub
mov
pop
push
ljmp
iret
mov
outsl
sub
adc
xchg
es
push
add
adc
scas
jnp
arpl
nop
push
negb
dec
addr16
das
sub
ss
jne
hlt
add
pop
shll
sub
popl
icebp
mov
push
xor
adc
dec
sub
in
push
aas
jle
or
xchg
jl,pt
out
sub
jecxz
adc
sub
jg
rorl
sub
pushf
outsl
sub
jo
sbbl
sub
mov
aam
ret
pop
imul
adc
mov
adc
insb
out
xchg
or
les
std
xor
fwait
sub
cmp
cmpsl
mov
mov
ljmp
and
jmp
sbb
add
mov
jecxz
loop
dec
les
sarb
in
xchg
jge
push
sub
pop
inc
outsl
cmp
cmpsl
clc
lods
aam
dec
sub
push
mov
sub
gs
sub
mov
adc
push
add
inc
sub
test
pop
xor
lea
ds
pop
sub
test
sub
in
shlb
fidivl
pop
sub
int
and
push
mov
popf
mov
loop
push
lds
stos
sub
cmp
add
add
fwait
xor
sub
add
pmuludq
test
rolb
insb
xchg
jb
test
ja
mov
mov
sub
mov
pop
push
xchg
add
inc
xchg
mov
int
xor
and
mov
pop
lret
cmp
into
fldenv
daa
inc
fs
mov
aaa
jmp
ret
or
sub
cmp
jmp
push
lods
sub
stos
jp
or
or
mov
fildll
cltd
stos
addr16
subb
jmp
dec
int3
scas
pop
mov
clc
cmp
mov
sub
push
sbb
jmp
insl
pop
andl
push
fs
lcall
aad
inc
dec
sub
stos
stos
add
out
sub
aaa
lock
cltd
dec
inc
movsb
es
arpl
xor
ljmp
pop
xchg
mov
sub
rorl
shlb
push
loope
stc
loopne
daa
push
push
xor
int3
sbb
mov
ljmp
jle
and
ljmp
xchg
pushf
ficomps
scas
sub
sbb
outsl
mov
lret
adc
sbb
shrb
sub
and
insb
dec
daa
cwtl
xor
dec
aam
inc
pop
push
sub
test
xchg
movsb
in
out
out
mov
shr
jnp
cwtl
mov
dec
mov
or
out
pop
mov
jle
shrb
stc
sub
push
or
mov
mov
incb
cltd
push
dec
fstp
inc
insl
xchg
jbe
popl
cmp
xor
xlat
cmpsb
bound
lahf
lret
aam
pop
cs
and
jecxz
ja
push
inc
dec
push
cli
sub
lea
js
negl
mov
popf
movsb
sarw
sub
mov
cmp
sub
jmp
or
sub
aaa
lods
mov
sub
xchg
pop
insl
das
sub
pop
int
cli
and
xor
lock
cvtps2pi
outsb
lea
mov
jp
sbb
push
inc
sub
lahf
sbb
aas
sub
push
outsl
mov
jle
cmp
sub
ret
stos
sub
xlat
and
jge
push
sub
sbb
ja
sahf
fldt
fsubl
pop
mov
sbb
cmp
sub
leave
scas
sub
lea
pop
sub
inc
fistpl
std
cmpsb
test
stc
test
insb
or
out
fnstenv
pop
xor
in
in
xchg
pop
cmp
imul
jl
sub
sbb
lret
cmp
pusha
hlt
xchg
leave
sub
frstor
dec
mov
into
leave
and
mov
out
add
clc
jge
mov
sub
or
in
daa
mov
sbb
mov
orl
movsb
xchg
ret
sub
mov
in
stc
sub
pop
pusha
insb
adc
das
sub
xor
leave
enter
sub
mov
mov
dec
sub
lea
and
mov
mov
lcall
inc
and
sub
mov
pushf
test
mov
pop
pop
xor
cmp
push
inc
jg
inc
xchg
sub
ret
push
test
sub
ror
ret
ljmp
add
adc
jl
test
out
jle
push
mov
or
dec
lea
das
add
adc
push
sub
dec
xor
xor
push
add
aam
inc
ficoms
adc
sbb
dec
movb
cmp
xor
xchg
sub
xchg
lds
hlt
sbb
xchg
dec
jle
and
divl
loopne
pop
mov
sti
test
mov
clc
repz
rol
sub
push
movsl
or
push
or
pop
sub
adcl
xor
cmp
push
pop
popf
pop
jo
cs
pop
aam
cvtps2pi
imul
mov
dec
pop
sub
and
shlb
mov
xor
sbb
and
jecxz
cmp
loopne
and
out
push
or
inc
add
xchg
xchg
pop
or
jge
sub
push
jg
mov
mov
adc
adc
jmp
sbb
xlat
fldl
lret
and
sub
add
sub
fs
in
lcall
xchg
cltd
push
sub
sbb
ret
fcoms
inc
aad
dec
subl
inc
jp
mulb
and
popa
ljmp
mov
inc
mov
sub
mov
pop
movsb
cmp
je
push
aam
xchg
sub
jmp
jo
sbb
sub
xlat
lahf
cmp
sub
cltd
add
push
aas
xchg
es
sbb
sub
movsb
mov
stos
gs
fnsave
mov
push
les
outsb
mov
cmp
icebp
jno
mov
jl
adc
sbb
ja
adc
fs
stos
cld
vcvtsd2si
mov
mov
mov
popf
out
dec
int
lds
add
fstps
or
dec
push
xor
sbb
mov
pop
or
sub
push
insl
push
dec
mov
out
push
add
mov
jp
add
mov
lret
xlat
loope
mov
sub
out
loop
sub
cmp
sub
push
lods
test
fiadds
lret
cmc
popf
push
sub
mov
and
repnz
nop
pop
sub
mov
insb
push
jle
adc
in
xchg
jo
int
cs
sub
sub
popf
push
or
pop
sub
fcoml
test
xchg
ss
arpl
mov
hlt
or
daa
dec
mov
cld
jp
shll
andl
sbb
sub
xchg
movsl
in
inc
sub
dec
push
ss
pop
sub
popf
in
es
mov
sahf
adc
aad
scas
and
sub
cwtl
call
in
mov
push
addb
hlt
mov
lahf
sti
sub
stos
pop
sub
sbb
movl
mov
cld
jnp
les
jno
jmp
cmp
movsb
sbb
dec
das
push
or
pusha
mov
pop
sbb
rcrl
dec
sub
gs
sub
push
push
hlt
sub
jge
xor
sub
jns
mov
test
and
lods
sbb
cmp
mov
sub
adc
push
sbb
sub
lds
test
add
or
sbb
dec
xor
rcrl
in
repnz
insb
push
scas
adc
lds
add
pop
adc
xor
mov
jb
popa
loopne
mov
sub
mov
jl
add
xchg
sub
mov
pop
adc
iret
xchg
xchg
dec
int
and
push
popa
loope
mov
adc
xchg
data16
mov
mov
and
lods
insl
int
orb
push
ljmp
cmpsl
int3
insb
lods
inc
movsb
out
sub
adc
and
add
sub
cld
push
cltd
jne
mov
dec
shrb
lea
sub
mov
cld
fldt
das
sub
fdivrp
sub
test
cmpsl
push
jl
cmp
aad
inc
stc
out
sub
dec
xlat
in
sub
test
addr16
test
sub
mov
pop
into
pop
dec
mov
outsl
test
mov
lds
jns
jnp
xchg
sub
sub
adc
lahf
stos
mov
cmp
clc
adc
int
xor
and
inc
sub
pop
mov
sub
adc
mov
sub
xor
decl
sarl
push
and
arpl
sub
fsubs
ret
aam
lcall
lret
push
cmc
pop
loopne
nop
jmp
cmp
pop
push
sub
fisubl
dec
daa
movsl
mov
int
lret
push
mov
sub
inc
inc
cwtl
lds
inc
push
sbb
cmpsl
dec
sub
and
in
pop
cmpl
daa
cltd
xor
add
xchg
jmp
out
sub
jle
aam
sub
push
sub
ficoml
mov
in
inc
xchg
loope
pop
mov
fucomi
rcr
pop
andl
push
xlat
sub
int
mov
fists
xchg
jo
xor
and
sub
push
mov
test
lret
push
aas
shrl
mov
aad
es
lret
and
and
sub
iret
fstpl
cmp
inc
dec
cs
mov
sub
stc
mov
fldcw
out
scas
cmpsb
rcr
int
cwtl
loop
jg
int3
cmpsl
add
sub
pop
loopne
ds
dec
cmp
test
xchg
add
inc
jno
sub
mov
mov
pop
push
jnp
jmp
pop
inc
stos
pop
out
and
scas
daa
jbe
cld
cmpsb
rcrb
pop
mov
lret
addb
add
fidivrs
insb
ret
push
ds
js
xchg
jecxz
push
or
xor
popf
jl
insb
mov
cmp
mov
sbb
ja
and
loope
lods
sbb
sbb
test
sub
int
jle
xor
repz
inc
jno
jge
roll
mov
dec
sbb
aas
sti
mov
bound
mov
add
jbe
mov
xchg
sub
lret
sbb
gs
xor
fmul
jge
scas
rcll
int
rol
scas
sub
cmp
push
mov
dec
sbb
shrb
mov
jne
test
push
mov
outsl
imul
insb
and
xchg
sbb
and
lods
jo
loop
inc
dec
loope
sbb
sub
das
and
imul
rorl
mov
sub
dec
sub
hlt
lods
inc
sub
test
sub
dec
xchg
mov
ret
xchg
aad
xor
mov
xchg
cli
sahf
lahf
sub
es
or
in
scas
inc
cmp
jmp
push
loopne
mov
xor
sbb
je
jo
and
lahf
and
stc
pop
sub
push
pop
insb
sbb
pop
xchg
xor
pop
stos
mov
frstor
xchg
lods
mov
sub
pop
push
mov
sub
dec
je
fsts
mov
mov
fldt
fwait
jae
sub
xchg
pop
xor
xor
clc
push
jnp
mov
add
adc
cmp
sub
jns
xorb
sub
adc
scas
and
movsb
lea
enter
sub
xchg
in
inc
pop
sub
jnp
xor
xchg
sub
sbb
xchg
iret
sub
push
mov
mov
lds
repnz
or
dec
push
leave
xor
sub
mov
push
js
addr16
nop
mov
xor
fstpl
mov
jecxz
add
pop
mull
aaa
xchg
xchg
sub
test
mov
sub
cmp
mov
sub
div
jg
adc
push
pop
fwait
inc
jne
sbb
adc
mov
sub
pop
pop
push
adc
aam
or
jmp
hlt
cmovns
or
mov
inc
sub
mov
gs
nop
push
in
ret
stos
lcall
push
je
adc
pushf
loopne
sub
cmp
subl
sub
inc
nop
imul
sbb
sub
mov
cmp
sub
sbb
sub
andl
sub
mov
cmp
lret
sub
mov
mov
jmp
lock
lea
js
fisubs
popa
jne
or
pushf
dec
and
ljmp
insl
push
xchg
dec
cmpxchg
mov
sub
pushf
xor
cmpsl
cmp
bound
cmp
jnp
int3
sti
sub
mov
or
jbe
pop
pop
cmpsb
dec
sub
mov
mov
fs
decl
sub
xor
out
inc
lea
imul
add
bound
add
xor
xchg
icebp
ljmp
adc
mov
cmpsl
ja
sti
in
xor
sub
add
cwtl
int3
sub
pop
sbb
dec
out
inc
sub
push
sub
jbe
xchg
aas
cli
inc
jno
adc
loopne
mov
pop
mov
fsubrs
inc
clc
pop
in
sub
xor
test
sub
bound
add
sbb
sub
or
add
xorb
dec
add
ljmp
aam
mov
pop
int3
xchg
or
jb
popf
inc
and
insl
out
ljmp
stc
xor
adc
and
lods
or
clts
pop
movsb
or
push
mov
iret
stc
mov
repz
sub
outsb
add
icebp
inc
shrb
lret
cltd
pushl
cs
sub
mov
shrb
and
repnz
shll
mov
or
and
js
sub
in
mov
ffree
xchg
cwtl
and
sub
das
mov
mov
push
mov
sub
test
push
dec
outsl
cld
test
ffreep
dec
mov
into
sub
xchg
adc
jecxz
arpl
sub
mov
mov
dec
xchg
push
pusha
sub
pop
mov
sub
push
ret
sub
pop
dec
mov
fcompl
sub
dec
sub
sub
jle
pop
mov
cli
out
pushf
in
and
xchg
rcr
cwtl
mov
sbb
in
int
mov
daa
shll
in
and
sub
test
push
call
je
pop
cs
daa
sub
pop
sub
es
shr
pop
xor
lock
mov
aad
xor
and
adc
jmp
adc
add
and
cmc
and
add
mov
sbb
jnp
aad
add
mov
pushf
shll
pusha
mov
sub
xchg
sub
and
cmp
push
push
inc
sub
pop
enter
mov
jmp
sahf
pop
imull
movsb
jb
push
insb
adc
add
inc
inc
mov
mov
jp
lea
xchg
cmp
inc
out
mov
iret
dec
mov
mov
sub
xchg
test
pop
sub
push
ljmp
adc
cld
lods
in
add
cmc
rcrb
mov
outsl
sbb
addr16
sub
aaa
push
insb
clc
pop
dec
test
dec
sarb
pop
xor
jb
fldl
leave
adc
movsl
pop
xchg
imul
or
push
sub
adc
insb
mov
add
data16
cmp
cmc
aam
sub
sar
xor
stos
xlat
xor
sbb
and
and
xchg
sbb
adc
repz
jmp
inc
or
lcall
movsl
xchg
or
mov
inc
cmp
lret
or
mov
cmpsb
addb
das
pop
mov
or
sub
lret
sub
ljmp
int
mov
test
inc
cs
sub
fadds
fs
xchg
aad
data16
or
xor
fcom
iret
jns
sub
test
lea
pusha
fs
insb
ljmp
bound
aad
lea
or
loope
inc
das
jbe
dec
or
push
push
sub
fs
icebp
out
aaa
jo
pusha
sub
pop
pop
shrl
pop
adc
and
aas
dec
jb
negl
cmpl
sub
or
ss
sub
rcl
shrl
push
add
sub
in
push
iret
dec
gs
imul
push
and
dec
mov
cmp
sub
shrb
jae
mov
repz
or
lret
ds
loopne
push
hlt
pop
or
xchg
jo
ja
push
lods
xor
test
add
sub
push
imul
dec
inc
and
insb
in
xor
sub
lock
mov
lret
rcll
je,pn
sbb
ret
sub
cwtl
inc
negb
lods
xchg
and
or
sub
popl
push
sub
shll
sub
mov
adc
pop
push
in
mov
sub
stos
stos
xlat
sub
lods
addr16
jg
xchg
sub
jbe
and
push
sub
sbb
repz
bound
adc
int3
pop
lcall
inc
mov
jge
sbb
xor
mov
rol
sub
lods
cmp
mov
out
or
add
or
jge
loopne
xchg
shrb
xchg
fsubrs
push
lods
sub
in
dec
sub
push
scas
inc
sub
test
dec
add
mov
add
push
mov
sbb
xchg
movb
hlt
sbb
and
xchg
fistpll
sub
shll
lcall
sub
lock
add
dec
pop
sub
hlt
mov
outsl
mov
jle
adc
mov
sub
xchg
sub
ljmp
mov
movsb
dec
cmp
xchg
sub
mov
mov
jnp
jmp
sub
lahf
push
sahf
stc
cmp
scas
out
xchg
insb
rolb
ret
sahf
sub
add
pop
mov
and
popa
fucomp
sarb
push
repnz
sub
add
add
pop
test
into
lods
sub
xchg
cltd
cli
xor
xor
sub
xchg
insl
sbb
and
testl
xor
push
sub
in
subb
mov
add
int3
pusha
shll
adc
mov
xchg
jl
sub
lea
push
and
loopne
mov
ds
cmp
outsl
dec
xor
je
push
loop
and
cmp
sub
sub
mov
sub
xchg
add
mov
mov
pop
add
mov
cmp
sub
lock
mov
pop
dec
sub
loope
cwtl
sti
hlt
std
movsl
sub
xchg
and
sub
shlb
sub
xchg
aad
xor
push
jg
pop
faddp
xor
in
ljmp
cmpsb
lcall
pop
xlat
sub
icebp
mov
cli
scas
and
sub
jns
cltd
xor
nop
leave
pusha
xchg
jmp
ret
dec
lcall
and
outsb
jmp
cmp
das
ret
sub
mov
sahf
pop
sub
mov
lret
push
inc
mov
shlb
pop
push
sbbb
inc
out
test
sbb
test
sub
aam
jle
sub
mov
sub
mov
fisubrl
sub
aaa
dec
fcmovnu
sub
in
dec
sub
nop
pop
jp
int
lods
xchg
enter
pop
in
dec
sti
pop
cmp
in
mov
sub
std
loope
mov
test
push
adc
popf
sub
addl
pushf
mov
jno
pop
clc
xchg
or
stos
fsubrl
lret
aas
mov
ds
xchg
sub
scas
mov
push
call
outsl
mov
int
jecxz
sub
imul
loop
cmova
jg
cmp
int
dec
and
je
out
ss
sahf
mov
insl
int
or
and
out
nop
mov
sub
std
sbb
test
pop
cmp
xchg
sbb
push
sub
int
add
sub
inc
leave
pop
sub
jae
sub
mov
push
push
imul
cmp
and
lret
sub
or
lret
repz
adc
or
xor
clc
test
and
stos
and
decb
in
dec
loop
call
and
mov
mov
cmc
mov
leave
mov
xor
fnstcw
loop
mull
jge
pop
xchg
insb
jecxz
mov
dec
or
repz
sub
in
xchg
outsb
negb
push
inc
inc
sub
pop
loop
mov
mov
xchg
sub
mov
rcrb
sub
xchg
dec
sub
imulb
mov
mov
dec
and
jge
push
xchg
into
sub
fwait
and
push
mov
bound
or
fldl
cmp
pop
push
repz
mov
pop
lret
hlt
jl
dec
adc
into
pusha
ret
sub
mov
arpl
movsl
push
inc
and
mov
outsb
das
or
add
xor
sub
sarl
inc
aad
add
jle
adc
hlt
stos
mov
test
sbb
ljmpw
cmp
dec
test
xchg
das
js
mov
push
sbb
icebp
in
adc
sub
push
xchg
xor
mov
ljmp
outsl
je
sub
ret
cltd
test
sub
stc
or
leave
lds
daa
jnp
sub
inc
sbb
lds
inc
mov
test
popa
subl
sahf
sub
adc
mov
cmc
iret
or
xor
inc
fcoml
xchg
sub
or
pushf
push
inc
call
xchg
sub
fwait
dec
loop
les
push
jns
inc
lods
mov
bound
and
mov
and
cmp
fsts
sub
movsl
cmc
inc
sub
cmp
stc
xor
out
enter
pop
sub
push
iret
jle
sub
addr16
adc
mov
sub
dec
xchg
les
lods
daa
cmpsb
sub
scas
mov
jecxz
imul
in
out
pop
sub
dec
in
sub
mov
xor
xlat
sub
inc
xchg
sub
lret
dec
push
add
loopne
or
inc
mov
pop
sub
and
shld
nop
push
mov
push
jbe
pop
out
push
inc
add
daa
shl
imul
and
stos
push
pop
scas
arpl
sarl
push
and
scas
push
sub
mov
movsl
test
sub
push
adc
and
popa
test
nop
out
lret
jmp
in
stc
sbbl
add
in
ret
inc
xor
sub
cmp
outsl
stos
and
testl
sub
mov
fsubl
call
sub
lods
addr16
sub
mov
sub
jge
mov
push
sub
mov
in
pop
imul
fadds
jmp
inc
nop
es
push
stos
jle
cvtsd2si
sti
mov
add
mov
shr
sub
jmp
xchg
cmp
push
sbb
xlat
das
adc
sub
add
lret
dec
addr16
movsl
mov
clc
xchg
adc
sub
xchg
test
sub
icebp
sub
sub
inc
adc
gs
ror
ror
ret
cmp
daa
fiaddl
push
icebp
sahf
inc
test
fistl
sub
ja
fwait
call
shl
in
mov
cmp
add
jnp
or
pop
xchg
loop
pop
test
sub
mov
scas
movsl
jno
and
scas
sub
dec
paddusb
push
sbb
iret
inc
push
pop
sbb
sbb
push
dec
xor
pop
cwtl
mov
sub
orl
sub
roll
add
daa
ficomps
out
sub
and
fmull
sub
call
rolb
sub
mov
fcompl
push
adc
mov
xor
ret
lods
test
sub
pop
mul
mov
xor
pop
or
sub
test
adc
inc
mov
int3
ss
les
fdiv
test
pop
daa
mov
mov
add
and
aas
adc
scas
int
or
ds
inc
daa
inc
aaa
and
jge
push
cltd
xchg
hlt
xchg
cmp
in
insl
les
dec
sbb
sahf
pushf
sub
mov
sub
push
cli
cmp
sub
cltd
xor
test
xor
push
pushf
imull
sub
and
cmpsb
stc
push
jp
fimull
int
dec
sub
inc
insl
adc
mov
das
mov
sub
pusha
add
into
sub
sub
xchg
ss
fsubrl
sub
and
and
sbb
lock
adc
xchg
xchg
sbb
add
in
and
cmp
and
test
loop
outsl
xchg
stos
sub
pop
mov
movsb
int3
je
sub
lahf
les
lods
sub
insb
xorb
sbb
xor
xor
adc
mov
scas
lcall
add
sub
cs
dec
sub
add
mov
push
xchg
jge
mov
mov
xchg
movsb
aaa
pushf
sub
sub
mov
xchg
pushl
adcl
dec
aad
orb
xor
jne
in
sub
ja
scas
sbb
js
addr16
inc
cmp
out
sub
lea
xor
fistpll
iret
popa
outsb
sbb
sub
aam
pop
repnz
icebp
sbb
and
push
sub
daa
mov
sub
cli
lds
xchg
data16
pop
pop
sub
sub
sub
rorl
xor
push
inc
mov
and
and
movsl
mov
sub
cmovae
or
mov
inc
imul
jb
xor
or
sub
aam
pop
mov
xor
popl
and
jmp
popf
and
sub
lds
jns
jge
out
nop
std
rcr
jmp
lret
jle
push
lcall
dec
or
sub
cmp
cmp
mov
stos
and
movb
sub
int
fsubl
dec
lret
fbld
clc
push
cmp
out
addr16
jb
lret
sbb
in
fwait
sub
sub
je
inc
and
pop
sub
cmpsl
stos
neg
insb
or
hlt
dec
xchg
sbb
scas
sub
faddp
xchg
cld
dec
and
into
sti
lret
xchg
and
add
cmc
lret
sub
mov
cmp
test
sub
lret
pop
add
test
sub
xchg
popf
lcall
and
int3
sbb
ret
sub
xchg
mov
sub
inc
ror
mov
addr16
sub
add
es
lods
adc
orl
xchg
shlb
cwtl
sub
or
clc
hlt
out
addl
lds
xchg
addr16
enter
mov
mov
arpl
dec
inc
xchg
lcall
xor
mov
cmp
out
and
lret
in
jp
sub
push
aas
add
lahf
mov
out
into
sub
mov
js
cld
mov
mov
out
sub
loop
add
pop
push
mov
fildll
fs
dec
pop
mov
lods
sub
push
jg
mov
ret
stos
cld
ficomps
rcrl
add
shrd
subb
fdivrl
cli
jecxz
mov
jmp
sti
sub
test
pop
cmp
into
and
sub
push
out
sub
adc
ja
sahf
in
and
mov
push
stos
out
test
or
pop
inc
in
push
lcall
stos
sub
mov
sub
loopne
popf
add
sbb
into
shlb
add
stos
xchg
sub
lcall
push
shlb
ret
sub
fildl
sub
xchg
sbb
inc
daa
aad
sub
cmp
add
push
nop
hlt
sub
dec
push
std
and
stos
sub
mov
testl
and
push
cmp
mov
out
fcmovnbe
cmp
ja
sub
sbb
jg
sub
lcall
subl
mov
xchg
stc
inc
das
jno
adc
lods
lret
adc
sbb
enter
mov
jne
popa
xor
pop
sub
dec
out
lds
fldcw
cltd
call
cmc
rcrb
inc
test
fucomi
movsb
adc
mov
add
xchg
sbb
inc
jecxz
popa
or
pushf
jp
sub
sub
loop
mov
aam
push
addr16
loope
lods
jl
cltd
sbbb
jecxz
jne
pop
inc
mov
movsb
paddq
je
sub
and
and
sbb
ljmp
pop
out
jae
std
adc
sbb
push
sbb
pop
fidivrl
int
bnd
mov
daa
and
in
sbb
in
pop
sub
insl
cltd
repz
lock
add
jmp
sbb
mov
fldt
test
mov
push
jbe
mov
push
add
movsl
jns
arpl
idiv
sub
or
adc
xchg
cwtl
insl
sub
xor
int
sub
pop
pop
nop
pop
mov
aam
scas
or
mov
jmp
xlat
push
arpl
cmp
sub
xchg
and
sub
lods
mov
fwait
sub
push
ret
aad
lcall
jle
or
pusha
jl
ja
and
sub
test
imul
sahf
shrl
mov
mov
push
clc
jmp
pop
scas
xchg
sbb
mov
xor
lret
bound
cmp
sub
cmp
cmpsb
mov
mov
imul
je
fsubrs
pop
push
lock
es
idivl
clc
xchg
out
repz
rcrb
xchg
or
je
push
mov
cmp
or
dec
adc
push
add
jecxz
lea
ss
pop
adc
movsl
sub
xor
test
rolb
mov
push
cmp
push
cmpsb
push
sbb
sub
jl
mov
sub
negb
cmp
hlt
sti
cmp
dec
aaa
and
fucomp
sub
icebp
xor
dec
xchg
je
pop
adc
or
cmp
fs
out
out
jge
mov
cwtl
jno
and
xor
out
test
mov
cmc
test
jae
sub
push
enter
jno
mov
and
jnp
mov
stc
cwtl
push
and
insl
add
test
sub
sbb
pop
sub
mov
mov
xchg
test
sub
add
out
fimuls
xchg
iret
dec
enter
and
mov
cmc
bound
in
call
sub
enter
add
and
lcall
and
lods
jb
imul
lods
adcl
push
jmp
xor
repz
iret
sub
add
jecxz
add
jle
pop
test
adc
std
mov
into
in
mov
das
mov
cmc
cmp
int3
rcll
inc
out
sub
inc
and
data16
and
fisubs
shrl
push
xchg
scas
jge
sub
ret
ret
and
lcall
push
cmp
test
push
pop
sub
push
ljmp
jl
cmc
cmpsb
addr16
cld
mov
push
cmp
sub
xchg
jge
sbb
stos
das
mov
sbb
adc
daa
and
shrl
ja
sub
xor
add
sti
rolb
dec
xchg
rclb
and
push
push
xchg
xchg
and
mov
or
jb
leave
pop
lcall
sub
and
fs
mov
sub
adc
pop
lahf
je
out
adc
test
sub
dec
out
insb
sub
idivb
jno
sub
imul
mov
cli
mov
loop
pop
jno
and
loopne
ss
xor
fnstenv
push
cmc
and
mov
cmp
jge
sub
dec
clc
jg
in
or
pushf
inc
lret
mov
fmull
mov
and
mov
or
xor
adc
and
sti
and
push
inc
inc
push
jl
and
icebp
movsb
fstpl
iret
lahf
adc
pop
sub
pushf
inc
test
sub
iret
xor
lea
cs
sub
or
sbbl
add
dec
cmpsb
push
sub
jo
dec
in
adc
test
dec
push
lock
rcll
mov
push
imull
fwait
mov
adc
pop
dec
jbe
and
cli
mov
mov
sub
xchg
inc
les
and
sub
xlat
or
sub
stos
inc
xchg
sub
lds
pop
mov
xlat
sub
or
push
mov
push
pop
daa
cs
incl
insl
ret
xlat
sub
outsl
fildl
adc
fsubl
out
jp
jns
or
nop
jmp
ror
ret
add
sti
aam
stos
sub
sbb
cmc
loopne
and
in
add
xchg
aas
in
imulb
sub
pop
pop
adc
adc
mov
clc
sub
push
adc
mov
int
and
inc
jae
sub
sub
out
loope
lock
fs
xchg
jne
mov
loopne
and
jo
and
xlat
adc
fcomps
daa
in
add
inc
es
xlat
cli
jp
or
repnz
sub
jo
sub
mov
jne
xchg
or
xor
cmp
push
sub
cmpsl
push
rcl
sub
pop
jns
add
movl
leave
imul
pop
adc
test
xor
xor
cmpsb
je
gs
pop
pop
mov
repz
sbb
les
sub
add
icebp
in
idivl
cmp
cs
push
das
sub
push
push
sub
rclb
bswap
mov
sub
or
aad
push
cmp
xor
mov
addr16
fs
jno
or
sub
mov
out
pop
pushf
push
adc
insl
sub
cmp
dec
sub
jno
mov
int
inc
bound
jl
mov
lret
xchg
inc
cs
rolb
ficoms
cmpsb
or
sub
clc
or
sub
mov
sub
popf
sbb
sub
pop
add
shrl
xor
pop
sub
lods
adc
aam
pop
xor
jbe
sub
add
mov
repz
sub
adc
shlb
add
sub
xlat
pop
sbb
jp
xor
cmp
mov
cmp
add
ss
out
push
inc
mov
cmp
sub
xchg
out
inc
pop
sub
and
rcrb
ja
or
std
in
pop
fsubrs
push
pop
ds
scas
test
in
icebp
xor
andl
into
jg
roll
aad
call
mov
xor
sub
inc
shl
sub
das
daa
cmpsb
lods
int
lahf
out
pusha
jle
aad
shlb
rcr
mov
xchg
add
jae
fsubrl
sub
cwtl
dec
ds
repnz
cmp
dec
xchg
xchg
jne
out
jmp
jo
xchg
adc
jbe
bound
jmp
mov
sub
mov
pop
enter
mov
cmp
sub
add
adc
sbb
outsl
lret
push
sub
xor
jbe
xor
popa
cmpsb
arpl
mov
jl
adc
jecxz
xor
adc
cmc
stos
and
aas
mov
jae
push
test
sub
sti
pushf
scas
aas
sub
in
push
movsl
subl
cmp
push
add
les
adcb
sbb
mov
jne
adc
movsb
sbbb
inc
adc
mov
sub
stos
popf
push
pop
or
aaa
lea
jbe
insw
mov
sub
loope
rolb
push
fidivrl
ret
in
dec
sub
and
jbe
jl
aad
sub
nop/reserved
mov
xorl
pop
pop
hlt
xor
and
dec
jae
in
sub
cmp
or
sub
inc
inc
jmp
loope
adc
imulb
pushf
dec
inc
and
nop
adc
les
mov
mov
pushf
push
mov
sub
testb
push
xlat
orb
sub
inc
and
adc
push
sub
cltd
adc
ret
mov
sub
xor
or
out
mov
jo
cmpsl
sub
xchg
stos
xchg
or
inc
sbbb
sub
ja
jp
lds
clc
fisubrl
adc
leave
push
cs
mov
push
lds
daa
adc
xor
inc
into
sbb
sub
pop
into
xchg
pop
nop
fildl
adc
sub
sbb
scas
push
and
out
sbb
dec
xchg
into
xor
mov
xchg
sub
mov
popa
or
nop
ljmp
push
cmp
dec
cmpsl
jae
sub
jo
inc
xor
imul
xor
pop
pop
inc
adc
xor
inc
cmp
enter
sub
mov
and
es
cmp
pushf
xchg
mov
ds
dec
sub
fstp
cmp
jne
mov
hlt
jnp
mov
sub
inc
pop
sub
rcr
mov
cwtl
movsl
stos
inc
mov
jns
jns
sub
push
or
addr16
imul
sbb
imul
sub
adc
das
and
jo
out
sub
insl
imulb
push
lea
xor
sub
or
xor
lock
lret
xchg
les
jnp
adc
sbb
sub
jle
dec
mov
lods
push
lret
js
sub
xchg
insb
call
shr
jl
aaa
mov
fnstcw
filds
sub
xchg
dec
out
js
lods
and
sub
bound
xchg
sub
jbe
jecxz
sub
mov
repz
xlat
mov
pushf
sub
inc
test
insl
daa
push
ss
sub
xor
jecxz
arpl
cmp
imul
sub
sbb
fldl
xchg
push
and
dec
ret
int
daa
mov
inc
test
sahf
aaa
into
cmp
or
sub
pop
cmp
mov
jmp
or
imul
pop
cmc
push
cli
stos
outsl
das
sub
sub
push
cmpsb
lcall
les
sub
loope
adc
sub
inc
nop
das
dec
sub
cmp
add
rcll
daa
add
push
test
xor
mov
icebp
jnp
in
and
in
sub
stos
sub
mov
xchg
mov
cld
outsb
sbb
popa
sub
cmp
mov
and
test
sub
and
je
sub
out
lahf
loope
ja
stc
pop
mov
adc
insb
and
push
jnp
sub
or
xor
mov
pop
mov
popa
dec
pop
push
adc
sbb
xor
sub
pop
add
shrl
pop
dec
cmp
test
sub
dec
jge
jo
dec
xchg
sbb
cmp
xchg
and
ret
pop
orb
xchg
sub
and
dec
sub
push
add
andb
sub
push
in
and
int3
jo
sub
inc
sub
test
adc
fcompl
mov
jne
movsb
cmp
pop
repz
cmp
add
mov
sub
imul
imul
repnz
sub
insl
aaa
and
sub
cmpl
in
cmp
pop
cltd
xor
mov
inc
xchg
outsb
add
sub
adc
aad
fs
and
or
cmpsb
repnz
jmp
mov
call
push
push
xchg
push
mov
cmp
inc
ds
inc
shll
push
filds
popa
dec
adc
aam
xor
sub
pop
sbb
insb
rcl
sub
xor
pushl
out
jg
adcb
inc
ret
and
movups
nop
popf
xchg
sbb
ret
sub
ss
sub
or
sti
int3
fucom
push
dec
sub
push
sub
ret
les
add
imul
mov
mov
and
adc
lret
sub
lods
mov
mov
cltd
shrl
andl
adc
loop
sbbb
inc
mov
and
add
sub
dec
into
lock
cmp
pop
fistpll
sub
mov
mov
jmp
jae
mov
pusha
ret
out
push
mov
pop
sbbl
adc
add
int3
pushf
pop
sub
jle
mov
sub
cltd
pop
add
sub
sub
push
adc
dec
sub
loopne
push
sub
xorb
add
xchg
or
xlat
mov
in
sbb
cmp
frstor
mov
icebp
push
and
sti
pop
dec
jg
ja
inc
adc
dec
stos
sub
xchg
rclb
fistps
fisttpl
mov
es
shrb
push
push
xchg
fbld
sbb
sub
push
push
loop
sub
enter
out
in
arpl
shr
push
push
add
outsl
add
mov
mov
push
adc
xor
lret
xlat
std
sub
add
stos
fdivrp
sub
xchg
jg
ret
push
and
mov
js
jmp
pop
jne
shr
clc
sarl
dec
mov
add
push
pop
icebp
sub
cmp
xor
jecxz
xchg
lods
into
xor
sub
pop
pop
xchg
mov
int
sti
shrb
repz
pop
or
outsb
mov
xchg
sub
pop
jne
jp
subl
and
and
push
adc
sub
adc
mov
mov
shll
mov
aas
sub
imul
mov
aaa
add
lcall
sub
sahf
add
lea
shl
sti
mov
sub
xchg
rolb
inc
sub
ljmp
jnp
fs
imul
push
mov
inc
jno
xor
das
xlat
cli
imul
out
mov
mov
hlt
ja
enter
sub
sub
fcoml
sub
mov
add
jle
sub
lahf
adc
pop
add
mov
sub
cmp
in
sub
and
push
lods
dec
mov
test
into
adc
fs
test
ret
jmp
stos
jb
stc
loop
popf
adc
insb
int
mov
sbb
xor
add
mov
cld
sub
mov
in
jno
jge
sub
xchg
fnstcw
out
cli
dec
jnp
pop
std
fistl
cwtl
imul
fsub
xor
mov
ja
clc
push
adc
repz
add
lcall
cltd
ret
pop
cmpb
stos
jne
in
clc
int3
sub
fmulp
cli
sub
das
sub
imul
mov
sub
js
cld
lock
dec
mov
iret
or
lods
sub
ljmp
and
mov
adc
cli
sub
shlb
cs
sbb
sbb
mov
sub
push
fwait
sub
shr
enter
mov
test
sub
repnz
mov
xor
leavew
ss
mov
sub
adc
les
xor
jg
xchg
add
dec
decb
mov
dec
mov
aam
inc
imul
adc
repnz
pop
inc
push
xor
les
movsb
jns
or
nop
mov
sub
inc
lcall
xor
xchg
jnp
sbb
push
cmp
pop
dec
push
imul
or
push
mov
nop
je
daa
cmp
mov
fs
push
cwtl
addr16
repnz
sbb
pop
push
sub
addl
xchg
leave
adc
aad
cmp
sub
pop
pop
jno
mov
mov
ja
dec
inc
fisubrs
jp
cmp
xchg
push
push
popa
jo
bound
mov
imul
stos
daa
stos
or
mov
jg
cmp
daa
sub
scas
mov
addr16
mov
ret
ljmp
pop
cmc
ja
std
stos
testl
and
jns
sub
sbb
jo
xor
xchg
les
cmc
inc
test
aam
nop
call
or
sub
icebp
test
das
in
pop
call
in
jnp
xchg
add
scas
out
mov
int3
cwtl
xchg
sbb
mov
and
ja
mov
sbb
push
mov
dec
mov
sub
sbb
addr16
enter
mov
movsl
sub
pop
dec
insl
cmpsb
aad
or
dec
sbb
bound
mov
andb
mov
es
sub
sub
mov
fldl
lea
sbb
cmpsl
popa
cli
dec
outsb
sub
add
js
adc
jae
call
shll
popf
arpl
adc
sbb
pop
mov
push
dec
xchg
xor
lods
adc
and
dec
and
int
pop
and
pop
mov
outsb
jecxz
addl
lea
pop
pop
jg
ss
xor
out
mov
push
fdivl
pop
push
push
shlb
inc
cmp
inc
jg
out
sub
sti
imull
and
jge
cmpsb
bound
jle
inc
sub
arpl
xchg
scas
xor
push
mov
in
notb
xorb
adc
test
and
sub
sub
or
add
fimull
adc
adc
sub
mov
lcall
xchg
dec
jge
mov
xchg
add
xlat
sub
insl
iret
add
data16
hlt
and
xor
scas
rcll
push
jle
les
jmp
pop
popa
cmpb
jmp
pop
pop
or
in
imul
inc
aam
test
sub
jl
nop
lret
ret
das
xor
lahf
push
sub
jp
outsl
mov
out
insb
xchg
add
jnp
fnsetpm(287
sbb
sub
mov
or
xchg
cmpsb
mov
adc
add
push
sub
jg
push
and
push
xchg
js
pop
adc
mov
mov
xor
daa
mov
pushf
sub
sbb
loop
dec
push
cmp
xor
mov
and
cmpsb
push
adc
mov
in
mov
cli
jl
sub
jg
pop
pop
sub
int
xchg
addr16
and
jb
push
sub
pop
mov
in
das
les
push
in
jbe
sbb
ret
cwtl
repnz
lds
push
jl
push
cmpsb
mov
ljmp
cltd
pusha
sub
jnp
jo
sub
xorl
shrb
test
mov
xlat
push
fstpl
jb
sub
leave
pop
outsl
jp
test
sub
jbe
ja
scas
sub
movsl
jns
adc
push
push
sub
mov
adc
cmpsl
mov
gs
push
cmc
daa
sub
pop
lcall
mov
into
inc
stos
mov
xor
pop
jo
nop
mov
jmp
ret
jnp
bound
sbb
orb
loopne
sti
or
cmp
jne
push
hlt
mov
roll
pop
mov
scas
jecxz
js
sub
push
insb
jg
sub
ds
inc
push
jae
sbb
call
mov
subl
adc
mov
shl
call
sub
rolb
out
cli
repnz
lahf
cmp
push
clc
xor
xchg
sub
ljmp
adc
cmp
pop
jl
loope
out
cmp
sub
out
mov
xorl
pop
mov
addr16
mov
sbb
adc
movsl
push
aas
outsl
cmp
stos
test
add
sub
fwait
arpl
gs
cmp
xchg
test
add
fstl
popa
icebp
sarb
lds
and
stc
xorl
sub
or
out
xchg
les
mov
cbtw
vmovaps
lcall
out
inc
sub
rclb
cmp
daa
xchg
dec
jmp
adc
mov
enter
mov
test
xor
mov
jne
sbb
ljmp
sub
les
and
jae
cs
mov
jl
fidivs
mov
sub
and
hlt
inc
sub
or
xchg
sub
shll
loope
mov
push
pop
int3
mov
enter
mov
mov
and
jg
fsubrs
std
jbe
mull
in
push
inc
repz
jge
or
scas
popa
sub
push
pop
movsl
adc
dec
mov
adc
mov
pushf
push
mov
aad
fwait
sub
cmp
mov
js
push
outsb
and
jo
jle
sub
sub
lahf
jge
insb
xor
sub
adc
sub
jne
jg
sub
cld
jo
in
shrb
push
jl
sub
push
test
lods
pop
add
outsl
test
and
push
sub
movsb
or
dec
shlb
sub
cmp
out
and
lea
sub
gs
shrl
push
dec
insb
add
dec
lods
cmc
hlt
sub
pop
jbe
and
pop
mov
xchg
out
or
mov
xchg
out
sub
adc
stc
or
ljmp
xor
push
pop
mov
sti
sub
pop
or
sub
xchg
lahf
fyl2xp1
and
scas
rclb
insb
mov
aas
sub
inc
xor
test
clc
mov
cli
pop
popa
loop
mov
jo
pop
mov
sub
inc
mov
mov
ljmp
out
dec
xor
fldt
or
outsb
xchg
xor
mov
mov
pushf
into
pop
test
push
push
pop
loop
xchg
dec
cmp
ficoml
cmp
and
push
leave
jmp
jne
jg
and
sbb
push
cli
mov
sub
jae
mov
push
sub
and
testl
iret
loope,pt
sub
cvtps2pi
push
aad
cli
fimull
xor
imul
sbb
in
lcall
cltd
dec
sub
inc
mov
cmp
daa
cmpb
test
and
lret
and
mov
idivl
or
sub
sub
out
sub
divb
adc
pop
jne
in
mov
pop
sub
insb
jmp
ljmp
and
pop
push
xor
inc
fcom
xchg
and
jne
jns
sbb
jmp
ret
dec
lcall
outsb
jbe
ret
sbb
out
xlat
cmp
sbb
stos
aaa
fisubrl
cmpb
push
inc
imul
lods
lret
shrb
clc
jae
add
imul
ficompl
dec
stos
sub
sub
sbb
mov
cmp
fwait
push
sub
sub
addb
lods
sub
loop
sbb
mov
jmp
and
jle
inc
sub
jno
mov
xor
cltd
pop
loope
pop
ret
cmp
push
fisubl
mov
pop
out
push
jo
sub
ret
sbb
int
std
and
sub
aas
mov
mov
movsb
xor
inc
mov
fnsave
pop
rolb
sahf
imul
icebp
pop
sub
outsl
cmp
movsb
cli
sub
xchg
xor
mov
adc
cld
adc
xorl
out
ja
cmp
push
mov
pushf
in
xchg
jp
pop
mov
aad
xor
dec
stos
mov
xchg
adc
js
insl
cmpsl
dec
inc
inc
adc
push
and
adc
test
lret
bound
leave
fs
mov
in
lahf
add
and
test
sub
lds
push
lea
ss
sbb
sbb
mov
scas
les
fistps
inc
inc
sub
dec
xorb
inc
cmc
sarl
inc
in
mov
out
int
push
cltd
inc
mov
and
popa
cmpsl
jae
push
icebp
sub
insb
pop
lea
pushf
ss
mov
sub
rcl
ret
and
gs
sbb
repz
push
xchg
sub
jge
cmc
adc
in
sub
movb
ja
push
in
xchg
scas
or
or
cwtl
sub
push
cmp
ret
xor
scas
scas
sub
test
adc
dec
outsl
sub
dec
stos
das
cmpsb
sub
push
dec
nop
adc
es
arpl
pop
jg
sub
lret
das
sub
addr16
pusha
sub
ret
jp
rcrl
sbb
or
push
cltd
cmp
push
cmpsl
pop
fcmove
lds
and
movsb
xchg
mov
aad
out
shrb
mov
sub
sahf
outsl
sub
in
sub
scas
gs
sub
xor
roll
pop
and
cmp
sub
dec
lahf
adcb
lods
stc
mov
fdivrs
pop
fstpl
and
fldt
add
mov
and
pushl
cmp
ljmp
test
icebp
in
sbb
or
pop
sub
fcmovne
mov
sub
xchg
cmp
pop
and
les
pop
pushf
sub
in
loop
push
arpl
loop
add
inc
cmp
cmp
push
es
sub
sbb
xchg
sub
lcall
insb
outsb
and
push
pushf
lret
or
mov
and
xchg
and
xor
jmp
loopne
mov
and
subb
adc
mov
pop
pop
repnz
shll
shrb
push
mov
pop
push
icebp
lds
sub
sbb
add
cwtl
aaa
fwait
xor
sub
sub
push
test
mov
or
xorb
xor
fsubs
lret
out
or
stc
push
aad
aam
sub
hlt
shrl
mov
add
pop
cmp
mov
aam
xor
daa
cmp
fwait
push
sub
jmp
addr16
sub
and
lret
mov
or
xchg
sub
xor
stos
jno
add
outsl
mov
cmp
stos
dec
int
loop
or
fnstsw
inc
sub
imul
outsb
fisubs
clc
ret
adc
sub
xor
in
testb
pop
sbb
sub
jmp
sbb
fs
push
adc
sub
aad
cli
subb
xor
fsubrs
rorb
dec
push
pop
mov
and
cmpl
sub
adc
movl
gs
or
divb
xchg
mov
sub
push
push
adc
inc
sub
iret
mov
sub
dec
adc
sub
sub
jbe
and
imul
sub
fistpl
cwtl
test
pop
mov
sub
out
push
mov
adc
fldl
push
sub
fmull
or
xor
ja
mov
icebp
sub
shlb
push
cwtl
cs
mov
push
cmp
fwait
js
ds
adcl
cs
out
mov
and
repnz
mov
js
and
test
ds
inc
pop
add
sub
cltd
scas
lds
bound
aam
jle
lods
jno
cs
add
data16
neg
lcall
and
stos
sub
jns
cmp
jbe
fldl
sub
out
mov
and
jo
fildll
loop
xor
jl
dec
xchg
jle
jg
cmovno
jbe
repz
sub
mov
in
and
fcomip
outsb
dec
aaa
mov
inc
mov
and
xchg
push
cs
lods
adc
shrb
push
mov
leave
test
and
lret
idivl
mov
cmpsl
rorl
jnp
out
gs
xchg
rorb
and
pop
test
xchg
mov
icebp
xor
jb
inc
pusha
sahf
mov
sub
popf
xor
fdivl
push
mov
sub
pop
jns
lcallw
into
mov
cmpsb
fs
cld
xchg
sub
adc
sahf
adc
inc
test
sub
int3
jns
mov
repz
cmp
push
sub
sub
dec
fs
fdivl
xchg
mov
dec
or
js
and
xchg
jle
shlb
sub
out
cli
jbe
sub
xchg
and
pop
lods
or
in
and
cmp
int
push
dec
pop
and
test
xchg
pop
pop
sub
add
shll
or
cmp
lds
fildll
insl
jne
jnp
mov
out
mov
mov
in
pop
sub
or
rcrl
subl
fsubl
ljmp
fidivs
xchg
push
xchg
arpl
aaa
jecxz
pusha
aam
les
in
mov
lret
and
scas
xor
loop
mov
in
scas
xchg
push
les
cmc
and
cs
push
jmp
js
or
cmp
and
popa
cli
sub
push
adc
scas
sub
jns
and
and
mov
ror
int3
pop
lea
ja
data16
inc
mov
iret
sub
add
fisubrl
cmp
adc
xlat
or
stos
jle
sub
pop
inc
in
sub
mov
mov
movsb
jb
into
inc
sub
insb
aaa
outsl
pop
push
jo
or
stc
cmp
int3
push
js
pop
adc
jb
mov
icebp
movsl
aaa
jo
push
idivl
pop
arpl
inc
sub
sub
jmp
xchg
dec
repnz
cmpsl
sub
pop
mov
aam
insl
vcvtss2si
lcall
cmp
xchg
jmp
daa
ss
mov
sbb
jns
out
cmpsl
nop
es
mov
ljmp
pop
lcall
ret
cmp
cmp
sub
push
jecxz
dec
stos
ljmp
pop
imulb
mov
mov
and
lods
sub
lock
addr16
hlt
shrb
cmc
push
xor
cs
sub
mov
ja
and
mov
pop
mov
cmp
push
hlt
fldl
repnz
fdivs
or
lock
dec
in
add
mov
push
inc
mov
fcoml
daa
insb
cmp
push
aam
xchg
das
repnz
dec
fildll
sub
loope
fadd
fdivrl
enter
dec
test
sub
pop
aam
pop
test
test
sub
pop
xchg
imul
mov
test
outsb
call
stos
sbb
adc
sub
mov
test
and
mov
mov
stc
repz
and
pusha
jg
inc
sbbl
shrb
xor
test
push
ret
cwtl
xor
dec
mov
jne
or
lret
out
push
mov
clc
enter
add
jg
mov
cmpl
dec
enter
mov
sti
sub
push
rcr
xchg
insl
mov
sub
lock
sub
mov
pop
in
jnp
nop
mov
push
xor
add
lods
mov
int
idiv
ljmp
and
jg
adc
call
shrl
add
scas
mov
add
pop
mov
adc
push
sub
or
dec
mov
or
lods
sub
jg
sub
imul
push
push
test
repz
adc
adc
add
test
ss
sub
test
mov
in
shl
leave
sub
or
lret
out
stc
sub
cltd
fldl
popa
xor
bound
inc
test
xchg
pop
adc
pop
mov
rcl
scas
cmp
test
push
jmp
shl
notl
fs
repnz
sbb
add
xchg
movsl
outsl
sti
sub
cmp
mov
cmpsb
fstpl
adc
mull
pop
inc
pop
cmp
das
fs
jnp
xchg
cld
and
mov
pop
jg
mov
sub
add
sbb
hlt
pop
adc
sbb
xor
xchg
jle
sub
imul
test
inc
mov
outsb
mov
mov
mov
in
xor
cmp
mov
sub
mov
test
cmpb
push
or
adc
stc
cs
in
adc
xchg
jnp
rcrb
repz
mov
cs
popa
mov
sbb
sub
sub
out
aam
fldenv
rcr
cmc
push
ss
fstpt
inc
shll
daa
ja
sub
lods
mov
ret
sub
and
pop
sub
shll
loop
push
push
cmp
aad
mov
test
add
sub
aad
int3
inc
sub
nop
cmp
lcall
push
imul
push
pop
push
das
lcall
lea
xchg
lret
pop
inc
aam
shrb
shrl
int3
jns
push
mov
mov
cmp
and
dec
or
in
sub
cmp
fwait
movsb
stc
sub
mov
pusha
es
add
test
aaa
xlat
sub
sti
xchg
test
cwtl
sub
sub
jb
sub
and
fdiv
incl
pop
sub
movsb
enter
hlt
jno
icebp
xchg
divl
sbb
add
and
sub
mov
sub
in
cmp
inc
mov
sub
inc
rcrb
jns
push
leave
sub
jmp
ret
ds
xchg
mov
pop
mov
imul
rolb
adcb
cmpsl
cmp
fsubrs
lret
das
mov
ss
push
adc
mov
aad
cmp
xchg
or
stos
lds
adc
shlb
mov
and
addr16
sub
test
add
mov
lock
or
mov
sub
sub
cmp
ljmp
sub
inc
mov
and
mov
clc
mov
in
sub
cld
nop
push
cmc
sub
push
les
pop
cmp
jle
jg
cmp
cmp
xchg
std
mov
cwtl
sub
push
aas
adc
xor
outsb
or
out
subl
sub
add
mov
imul
pop
lcall
fwait
xchg
sub
lods
pushf
rclb
cwtl
sbb
fdivs
or
fldenv
out
out
ds
jmp
mov
fs
in
adc
nop
and
xor
in
bound
mov
lods
jmp
fists
fcomp
movsl
insl
sub
push
inc
sub
or
xor
mov
or
jl
sub
jmp
call
fisubrs
shlb
and
repnz
js
ret
sub
aaa
call
rorl
popf
xor
dec
fsubr
pop
sti
pop
sub
shlb
adc
in
push
lods
fsts
sub
pop
sahf
icebp
les
jle
int
movsl
mov
sub
jge
xchg
bswap
lcall
es
nop
pop
ss
or
inc
sbb
pop
sub
shl
sbb
sub
cmp
and
mulb
lea
sub
jge
mov
xor
addr16
sahf
sub
scas
pop
pop
sbb
push
push
add
test
mov
flds
scas
and
outsl
or
cmpsl
aaa
sub
jne
into
inc
push
sub
jb
ret
out
xlat
lock
fsubrl
and
add
dec
xchg
push
sbb
scas
sub
rcrl
pop
cmp
add
outsl
cmp
hlt
subb
dec
clc
les
adc
sub
mov
fucomp
scas
sub
xchg
push
aam
sub
push
or
in
popa
and
push
ja
xlat
mov
test
cmp
roll
je
out
adc
stc
or
lahf
cli
adc
adc
sti
dec
jnp
sub
loope
xor
dec
mov
popa
fs
aaa
fnstsw
cmp
cs
dec
dec
stos
cmp
and
dec
dec
xchg
icebp
fistpl
sub
rorl
jmp
les
dec
pushf
imul
arpl
aad
cltd
jo
push
fisubrl
dec
cs
sub
push
insb
das
lock
mov
sub
movsb
inc
cmpl
js
les
call
push
adc
xor
xor
sub
xchg
out
iret
shll
stc
push
hlt
sbb
and
repnz
js
dec
mov
mov
int3
sub
jl
sub
in
aad
into
scas
lds
in
mov
sub
push
rcrl
aaa
cmpsb
rol
xor
jns
mov
mov
shrb
leave
push
fwait
dec
movsl
stos
jno
lods
imul
orl
dec
hlt
pop
sub
inc
adc
mov
xor
lds
and
adc
mov
xchg
js
add
decl
sub
push
jmp
leave
popf
jae
jle
mov
or
test
inc
fwait
dec
nop
dec
scas
xor
pop
jmp
mov
stos
sub
dec
andl
add
cmc
fstpt
stos
push
stos
pop
pop
xchg
faddl
pop
sub
imul
adc
or
adc
mov
jnp
sub
pand
and
fnstcw
mov
rorl
add
xchg
popa
stos
pusha
inc
mov
sub
push
sar
es
aam
jp
and
ljmp
rclb
cld
sub
outsb
or
pop
frstor
push
out
cmp
shlb
pop
adcl
cmpsb
jo
fbstp
out
sub
add
mov
dec
xor
push
xchg
adc
sbb
cmp
add
mov
cmpsb
mov
sub
sub
jp
icebp
js
mov
dec
cmp
cli
pop
inc
sub
lods
mov
sub
rclb
cmp
dec
cmp
mov
fimull
add
sub
jge
test
sub
jp
push
stc
sub
sbbl
mov
das
lcall
insl
scas
xchg
js
inc
and
xchg
xor
out
sub
lock
aad
scas
call
sub
add
shlb
xor
dec
jp
push
and
cmp
frstor
sbb
sub
xchg
jle
imull
int
pop
push
cmp
fadd
sub
xor
mov
mov
jg
movsl
cmp
jbe
jecxz
int
sub
std
ljmp
add
outsb
clc
sub
jae
pop
sub
inc
jg
fnstcw
xor
imul
xchg
and
sub
setl
fstl
dec
out
cltd
cs
inc
iret
in
in
sub
jge
aaa
and
push
arpl
sub
sub
scas
sub
adc
in
and
sub
push
add
jb
scas
mov
fldcw
cmp
jecxz
sbb
cld
lods
xorl
mov
daa
jle
inc
ret
adc
cmp
paddsb
mov
in
add
roll
dec
ja
add
aam
fdiv
xchg
xchg
sbb
adc
jns
and
push
sub
xchg
push
mov
cmp
mov
jl
scas
gs
outsl
dec
sti
in
cs
roll
push
pop
pusha
cmc
imul
jge
pop
sub
lahf
clc
jg
adc
xchg
cli
stc
push
jecxz
adc
out
inc
jnp
into
sub
sbb
shrb
pop
popa
sub
sub
into
sub
data16
fsts
xor
jno
cld
mov
cmp
sub
scas
jae
lods
or
and
jl
js
imul
sbb
mov
sub
mov
fs
push
push
sti
xchg
or
ds
inc
inc
xchg
pop
sub
push
movsb
or
push
cltd
adc
lds
mov
xor
pop
add
xor
or
mov
iret
ret
out
mov
lahf
sub
jns
push
subl
in
pop
jl
cmpsl
mov
in
div
popa
lds
fimull
cltd
hlt
sub
push
mov
rcrb
sub
ja
test
mov
test
es
leave
lods
add
sub
divl
mov
push
lcall
adc
sub
loop
outsb
inc
sbb
adc
aam
push
push
daa
pop
sub
lret
std
xlat
scas
sub
pop
add
jg
imul
daa
cmp
sub
cmpsl
pop
nop
pop
int
and
ret
js
lcall
gs
or
repz
loopne
push
jmp
push
xchg
stos
and
imul
popa
xchg
clc
sbb
or
addr16
enter
adc
shrl
sub
adcl
sbb
sub
push
and
fstp
inc
repnz
idivl
es
into
in
push
xchg
out
xchg
pop
shr
cmp
lds
sti
mov
and
rcrb
fnstcw
sbb
jmp
pop
sub
sbbl
mov
sub
pop
into
and
sub
adc
push
sub
sub
movsb
add
mov
dec
cmp
mov
shrb
mov
add
fucom
ljmp
dec
test
bound
or
mov
ja
int3
jl
xlat
cmp
push
out
and
cs
cwtl
dec
and
or
xchg
sub
ds
pop
sub
test
and
sub
push
ljmp
enter
xchg
mov
sahf
add
push
mov
insl
push
hlt
aaa
inc
scas
inc
xchg
sbb
mov
cmp
bound
sub
hlt
sbb
daa
adc
int3
sub
adcb
sub
dec
jg
in
and
mov
js
sub
jp
sahf
sub
sar
arpl
mov
fdiv
pop
mov
sub
xor
mov
dec
mov
mov
adc
pop
es
jbe
xor
push
idiv
sub
repz
sub
or
push
sub
mov
inc
aad
out
mov
mov
fildll
shr
push
sub
cmp
or
out
test
xchg
mov
and
repz
sub
in
adc
mov
sub
sahf
rorl
push
xchg
subb
xor
mov
push
push
and
xchg
test
sub
ret
out
xor
add
cld
ss
gs
arpl
idivb
sbb
aad
xchg
sub
jg
pusha
lods
sub
sbb
mov
sub
and
adc
mov
in
hlt
scas
xchg
in
test
or
aam
stos
sub
sbb
inc
sub
xchg
inc
repz
mov
and
in
in
int3
sub
insl
adc
test
pop
fwait
sub
je
sti
shrl
lahf
push
sub
jle
scas
mov
arpl
scas
pop
mov
sub
xchg
jo
mov
cs
mov
cmp
icebp
fxch
out
sub
cmc
mov
ss
push
aam
pop
call
rclb
jecxz
cli
in
push
les
insb
sub
mov
inc
push
and
loop
jne
gs
jae
adc
mov
jbe
cmpb
push
pop
pop
arpl
int3
scas
loope
movsb
out
adc
sub
hlt
sub
out
dec
sub
add
inc
sub
xor
mov
pop
sbb
iret
int
out
sub
cmp
pop
sub
jns
repnz
pushf
arpl
jle
in
sbb
stc
mov
xchg
fiaddl
mov
test
cltd
and
mov
push
loopne
fwait
push
push
test
xor
test
sub
mov
or
leave
lock
and
jbe
xlat
and
or
mov
std
aad
adc
sub
xor
mov
sbb
sub
mov
aam
xor
shlb
test
sub
mov
jo
sub
daa
lods
mov
jns
jne
nop
sub
or
push
push
lcall
and
mov
rcl
and
xchg
stos
push
int
sub
pop
adc
and
lret
mov
push
out
cld
or
addr16
push
hlt
inc
nop
mov
sub
lock
mov
sbb
daa
sub
sub
pop
or
jns
cmp
lods
adc
xchg
inc
loope
ljmp
cmc
sub
outsb
sub
cmp
push
jmp
push
in
sahf
mov
mov
and
jo
in
sub
adc
mov
std
jbe
test
xchg
push
aas
int
cmp
cmp
push
mov
jmp
mov
rclb
out
sub
mov
push
icebp
insl
ds
xchg
cld
dec
pop
lock
mov
mov
out
push
ljmp
push
pop
mov
aad
pop
push
xor
ds
aaa
jecxz
test
mov
xchg
jmp
jno
sub
fsubs
sub
pushf
subb
movsl
mov
fcmovne
xor
insb
cmp
mov
ja
mov
lret
jo
movsl
cs
lahf
add
lds
in
data16
negb
and
xchg
and
cmp
js
mov
sti
int3
sysexit
call
and
mov
sub
dec
inc
mov
or
pop
fisubrl
xchg
fbstp
outsl
xor
push
cld
lods
sub
jno
xor
jbe
sub
int
sub
push
mov
sub
outsb
test
into
sub
pop
sbb
and
fisttps
lods
int
jbe
and
push
rclb
cltd
jmp
es
cmp
call
inc
test
mov
jge
insb
int3
xchg
inc
sti
lcall
pop
mov
fcoms
and
adc
out
sub
push
das
repz
test
xchg
sub
outsl
loope
pushf
adc
cmpsb
mov
and
sub
arpl
lods
dec
xor
sbb
inc
das
push
sbb
aas
mov
sbb
xchg
mov
sub
mov
cmp
aas
jno
and
mull
movsb
and
jecxz
jle
pop
pusha
push
out
and
lods
xor
xchg
test
mov
jo
mov
cmp
sub
cltd
xor
test
rcrl
mov
je
add
stc
pop
shlb
sub
mov
adc
insb
push
scas
jnp
dec
imul
sbb
and
jne
xchg
pop
popa
and
inc
mov
rclb
jbe
add
inc
jecxz
cmc
sub
mov
dec
lods
adc
subb
into
cmpl
out
sub
movsl
mov
scas
sub
loop
sub
test
mov
push
movsb
stos
aad
push
pop
sub
aam
aad
mov
and
sub
and
sbb
sub
push
dec
or
xlat
lea
add
pop
mov
hlt
pop
push
sub
push
mov
fisubl
insb
repnz
loopne
dec
xchg
enter
cltd
mov
pushf
in
mov
jge
mov
mov
lods
testl
fwait
sbb
aaa
icebp
inc
ljmp
leave
adc
test
jb,pn
or
lret
pop
pop
movsl
mov
or
jne
push
jne
popa
pop
inc
push
adc
and
sub
fisubl
sub
insb
aam
lock
clc
sub
mov
jecxz
je
xchg
and
xor
mov
and
cmpss
sub
outsb
or
and
stos
cmp
mov
cli
test
sub
jp
out
test
sub
xor
sub
neg
mov
push
mov
sbb
call
insb
bound
sub
xchg
jno
sub
push
or
movsb
fdivrs
fwait
sub
ds
xor
mov
sub
frstor
xchg
gs
mov
sub
int
dec
adc
in
cmpsl
mov
sub
std
pop
pop
cmpsb
sbb
jo
pop
inc
sub
sub
notb
cmp
sub
aas
xor
push
popa
aad
clc
add
mov
movsb
sub
cwtl
mov
rclb
or
and
and
adc
xchg
scas
dec
dec
out
sub
ja
test
sub
out
ss
ffree
imul
cwtl
mov
les
call
loope,pt
mov
test
xchg
stos
xchg
das
and
dec
sub
fidivrs
imul
aam
push
clc
push
adc
insl
pop
pop
inc
sub
jmp
push
and
stos
add
mov
push
repnz
add
cs
or
je
cs
imul
xchg
fdivp
xlat
xchg
testb
into
iret
dec
je
pop
and
sub
int
lds
shrl
cmp
jne
push
xchg
gs
or
xor
das
sub
insb
sub
or
xlat
sub
and
clc
sub
repz
outsb
xchg
inc
ret
pop
or
ss
xor
jp
mov
sub
mov
lret
rcll
orb
sub
jo
sub
dec
pop
push
in
sub
mov
xor
xlat
scas
inc
out
or
mov
fldz
push
push
sub
aaa
scas
inc
xchg
push
pop
ret
subb
into
sub
xchg
cld
sbb
push
sbb
testb
sbb
adc
das
sub
mov
sti
mov
outsl
sarl
loop
sbb
test
fmull
mov
orl
and
cli
jle
sbb
mov
out
sub
mov
xor
push
dec
sub
and
jecxz
out
push
adc
xor
test
mov
inc
je
push
fld
sub
xchg
orb
xor
sub
push
sbb
xor
ljmp
popa
add
sub
fldenv
sub
fstp
je
and
xchg
sub
xlat
fcmovnb
xchg
lds
sub
jne
loop
adc
mov
dec
mov
xchg
xchg
daa
mov
cmpsl
ficompl
cmp
loopne
cli
push
cwtl
inc
lods
or
sub
mov
mov
addr16
int3
or
sub
pop
cli
sbbb
xor
fcmovne
iret
inc
sub
mov
cmp
lea
sub
loopne
cwtl
bound
iret
sub
das
jnp
push
out
sub
push
repnz
add
sbb
jle
sub
lock
in
sub
leave
cld
cli
cltd
sub
mov
pop
cmpl
sub
fdivl
test
mov
fwait
push
and
movsl
inc
ret
fs
mov
push
mov
inc
sub
js
repz
pop
ficoms
lods
sub
enter
sub
or
rcrb
fcompl
xlat
fbstp
jmp
clc
cmp
xor
xchg
mov
nop
outsl
mov
jmp
push
pop
js
stos
mov
push
sub
loopne
xor
push
pop
imul
cmpsl
enter
cmpsb
insl
xorb
mov
shrb
stos
xor
clc
ds
adc
sub
cmpsb
adc
jge
sub
jo
sub
jecxz
cmp
dec
dec
fs
sti
std
mov
sub
mov
sub
mov
je
test
inc
inc
dec
icebp
sub
add
rol
push
popa
fdivl
das
ljmp
mov
xchg
mov
jns
or
outsl
mov
cmp
push
lcall
xor
arpl
cmp
int
sbb
and
adc
pusha
adc
adc
mov
sub
xor
adc
and
mov
shr
dec
test
xor
dec
sub
icebp
push
sub
inc
pop
bound
mov
xchg
icebp
mov
es
sarb
je
mov
aaa
cmpsl
or
jecxz
sub
ds
cwtl
mov
cltd
test
pop
ret
mov
push
sbb
int
imulb
orb
sub
icebp
push
push
loopne
repz
aad
inc
lret
adc
into
test
xor
bound
fucomp
mov
daa
fs
movsl
data16
sbb
idiv
or
sub
popf
arpl
and
xchg
lea
out
and
int3
call
push
push
adc
pop
lea
loopne
loop
push
xor
cmp
dec
int
movsb
lods
add
std
jg
sub
aam
jbe
sub
mov
mov
repz
and
sar
inc
and
jo
dec
sub
pop
fimull
sbb
ret
and
in
subb
and
inc
cmp
or
ss
mov
push
ljmp
push
mov
sarl
xchg
je
cmp
call
into
lods
adc
scas
pop
jbe
lds
add
cmp
mov
or
scas
arpl
daa
std
pop
rolb
enter
stos
mov
sub
lret
adc
ffreep
ja
mov
out
sub
das
sub
sub
repz
cmp
mov
pop
xor
adc
int3
lods
leave
fmull
xchg
sub
mov
pop
sub
lret
jne
xlat
xchg
sub
xchg
ss
sub
pushf
jl
mov
pop
pop
cs
sub
jb
test
add
enter
scas
test
mov
pop
sub
shrl
mov
sbb
adc
insb
push
adc
inc
sbb
sub
and
popa
sub
cltd
inc
clc
xor
mov
jo
push
test
fnstenv
fdivrp
daa
dec
sbb
fcmovnb
mov
xor
push
sub
xchg
sub
movsb
jecxz
in
cld
xor
pushf
mov
mov
test
sub
sub
xchg
insb
push
and
andb
push
xchg
pushf
pcmpeqw
push
imul
insb
inc
sub
hlt
imul
mov
xor
jg
shll
lea
and
mov
out
mov
mov
ficoml
adc
pop
xor
inc
test
push
scas
sub
jne
cli
push
push
xor
sub
cltd
jne
dec
int3
add
lret
sub
or
mov
shrl
mov
pop
int3
and
jge
enter
xor
adc
sub
insb
das
push
ss
popl
ficoml
pop
inc
jno
xor
and
xchg
add
pop
outsl
jecxz
aam
call
sub
sbb
xor
inc
and
clc
pop
icebp
jns
leave
push
nop
sub
test
ret
and
stos
xor
in
int3
cmp
sub
sub
push
fsubl
in
andb
adc
imul
sub
subb
clc
sub
out
in
addr16
dec
jmp
sbb
xchg
and
subl
xchg
repz
sti
fnstsw
int
mov
and
mov
fsub
pop
sub
xor
sub
stc
int3
jg
sub
xchg
jl
push
mov
mov
sti
dec
mov
sub
mov
lret
loope
aad
cmp
push
jg
aas
cmpsl
and
mov
orl
rcrb
jg
jecxz
or
sub
dec
push
sub
push
inc
fnstenv
sub
or
gs
daa
pop
cmp
int
movsl
xlat
sub
pop
or
je
cmp
imul
and
adc
sub
or
sub
in
sbb
mov
jno
or
cmp
and
sub
dec
mov
jno
lods
enter
sbb
aaa
js
push
push
call
mov
sbb
das
sbb
pop
sub
mov
mov
sub
mov
insl
dec
stos
cs
push
test
xlat
fisubs
or
divb
and
subl
stc
sub
ss
mov
xchg
pop
sub
pop
mov
inc
sub
sbb
lods
lret
jp
and
xor
and
movsb
adc
jbe
sub
sbb
mov
push
repz
inc
sub
es
imul
jecxz
adc
or
sbb
xchg
sub
jae
adc
and
push
scas
push
lds
or
jge
js
shr
mov
daa
xor
int
sub
jo
je
sub
iret
jns
cmp
add
cld
push
sub
scas
inc
xor
sub
pop
cmp
sub
mov
stc
cmpsb
and
mov
push
clc
stos
adc
out
arpl
lret
loopne
iret
dec
sub
test
xor
jbe
mov
push
mov
and
shrl
into
out
das
stos
je
sub
push
clc
decb
mov
sbb
dec
outsl
lock
ja
pmaxsw
sub
and
or
in
xor
sti
fisubrl
push
adc
xchg
lods
mov
adc
sbb
popf
je
xor
test
icebp
stc
mov
ss
sub
or
sbb
xor
mov
aad
popa
mov
pop
mov
ret
stos
movsl
sub
dec
sub
fsts
and
loopne
pop
jp
jecxz
jge
jb
cmp
sahf
nop
jecxz
and
fcompl
lret
sbb
push
in
xchg
sub
dec
ficomps
insl
out
mov
lods
test
sbb
push
sahf
and
cmp
sub
movsb
nop
enter
out
cmpb
imul
je
test
shlb
fsubrs
jns
int
mov
jmp
repz
rolb
or
fidivrl
testl
and
adc
sub
sub
jp
rcrb
lods
cs
add
sub
mov
es
lret
test
adc
shrl
fmul
push
jne
movsl
cli
inc
sub
js
sarb
sub
adc
push
vcvtss2si
cmp
pop
cmp
loop
push
shlb
ss
sar
push
cmpsb
sub
shll
inc
jmp
in
mov
test
sub
ror
std
nop
sub
mov
lcall
stos
mov
sub
and
and
test
mov
test
movsl
pop
mov
gs
rorl
jns
lods
cmp
arpl
and
add
xchg
mov
sahf
xor
add
sub
sub
cmp
mov
mov
cmp
add
imul
fdiv
repz
lock
cmpsl
dec
cmpsb
sub
mov
jp
sub
pop
cmp
push
pop
stc
imul
out
fwait
and
or
dec
ret
insl
mov
repnz
add
mov
loope
cmp
push
shrb
mov
push
js
std
xchg
jno
sub
push
aas
call
ret
mov
enter
jno
gs
shlb
sub
gs
mov
pop
loope
icebp
add
jne
jle
pop
xchg
lret
ja
or
in
mov
out
cmc
push
shlb
imul
sbb
sub
add
sub
test
sub
sub
push
dec
mov
jl
enter
sub
incb
nop
pop
dec
insl
test
lods
sub
sbb
adc
cwtl
call
or
sub
add
lret
adc
mov
sub
outsb
popa
and
or
int
mov
orl
mov
cmp
loopne
sub
call
rol
push
popf
dec
push
je
mov
xor
jl
cli
sub
xor
xchg
sub
lods
icebp
sarb
pop
cmpsl
into
xlat
adc
int
mov
mov
repz
and
lret
sub
inc
mov
sub
pop
xchg
mov
sub
lods
adc
or
enter
movsb
and
mov
insb
add
inc
and
pop
frstor
loope
ficoml
pop
int
jae
in
sahf
dec
fwait
ds
cli
sub
pushf
mov
popf
sub
fimuls
push
rol
dec
scas
and
test
mov
sub
outsl
jg
xlat
sub
cmpsb
call
js,pt
adc
mov
sub
inc
pop
loop
lds
std
and
and
xchg
and
ret
dec
ret
sub
ja
xchg
inc
daa
pop
int
fmuls
dec
adc
jle
fdiv
xchg
sub
inc
inc
dec
mov
enter
mov
icebp
rorb
in
add
movsl
dec
mov
mov
test
and
sub
ret
sbb
shlb
test
into
insb
xor
in
outsl
push
xor
cmpl
popa
jle
in
mov
div
push
sub
add
loop
pop
cmc
ret
inc
inc
sub
fstpt
cli
les
xchg
out
mov
nop
sub
xor
adc
push
mov
sbbb
icebp
sbb
push
xchg
cld
add
test
sbb
sub
push
mov
mov
rcr
movsb
lret
mov
sahf
mov
adc
add
inc
sub
push
push
out
mov
mov
popa
fsubrs
and
and
iret
nop
sub
rolb
dec
cvtps2pi
lods
push
sub
and
mov
out
mov
les
mov
movsl
xor
les
lret
xchg
cwtl
add
and
aaa
lcall
xchg
mov
cmp
pop
dec
jecxz
mov
lahf
dec
idiv
sub
and
inc
inc
add
repnz
frstor
pop
pop
insb
leave
cmp
cs
daa
lods
jno
xor
mov
inc
in
jmp
and
and
sub
add
jmp
sarl
out
inc
xchg
rorb
lret
mul
cmpsb
lret
cmp
sub
stos
sub
aad
mov
sahf
adc
lret
mov
xlat
clc
mov
sub
xor
mull
rcrb
jbe
sub
cmc
mov
xchg
inc
mov
cwtl
loopne
stos
and
mov
out
mov
add
or
aam
sub
mov
xor
and
push
js
clc
vpsraw
mov
mov
fcmovb
stos
xor
cmp
mov
and
aam
sub
lcall
mov
movsb
test
jp
jne
adc
sbb
xchg
aas
and
das
and
xor
mov
inc
sub
jae
scas
sub
sub
xchg
lds
sub
pop
sarl
adcl
rclb
out
fidivl
mov
jp
or
scas
outsl
out
push
sub
adc
fnsave
pop
daa
movsb
cwtl
inc
push
dec
sub
cmc
in
std
sub
cmpsl
cmp
fs
cwtl
pop
subl
xchg
sub
sbb
mov
mov
pop
push
loop
sub
jmp
das
sub
add
xor
mulb
test
dec
push
and
int3
outsl
js
add
adc
rorl
sbb
popf
push
mov
jb
mov
fldcw
mov
jge
divl
lods
sahf
mov
mov
jbe
pop
xchg
int
sub
lret
jne
pushf
arpl
shrl
xchg
push
mov
add
int3
pop
test
lcall
fnstsw
and
daa
lods
xor
shlb
pop
add
xchg
shll
lret
xorl
mov
test
out
imulb
xor
scas
pop
imul
test
cmc
push
fldcw
cmp
xor
pop
outsb
bound
sub
into
add
push
fistpl
cld
adcl
shll
cwtl
inc
inc
jle
sub
das
lods
cli
jne
and
jg
mov
and
adc
xchg
add
aaa
sub
inc
xor
xor
and
gs
mov
sub
out
flds
push
les
mov
sub
sbb
in
sub
adc
push
and
pop
ljmp
dec
out
add
ret
lock
mov
sub
test
sub
mov
inc
sbb
xor
lret
cmp
fsubs
and
sub
cmp
std
and
inc
and
xor
cmc
jne
gs
adc
inc
dec
jae
and
lcall
lock
pushf
sub
mov
push
adc
loop
push
fisubs
push
lcall
sub
push
daa
mov
scas
jne
fiaddl
lods
fbld
adcb
xor
shr
adc
rcl
fnsave
lea
inc
int
mov
xchg
cmp
sub
push
mov
out
call
orb
jmp
es
scas
addr16
in
xchg
fistl
cltd
test
stos
add
fwait
loopne
xor
dec
push
and
xor
int
test
pop
push
jge
shrl
push
mov
jns
test
sub
mov
add
adc
sub
mov
rcll
cltd
sub
sub
inc
mov
sub
jmp
pop
add
and
stos
sub
jns
sub
fs
ret
jge
cmpsl
push
sub
or
movsb
or
cmp
pop
jne
stos
sbb
push
sbbb
mov
imul
sbb
lret
insl
push
popa
arpl
adc
cmp
in
inc
and
sub
sub
sbb
xchg
mov
mov
dec
sub
add
adc
add
lock
sti
dec
movd
imul
adc
decb
pop
and
daa
mov
add
adc
test
pop
xor
cld
cmpsl
add
mov
aam
lds
and
pop
pop
and
arpl
ret
sti
ret
sub
aaa
adc
int
mov
aas
sbb
push
in
lcall
gs
out
sub
cmpsb
shlb
pop
sub
cmpsl
xor
sub
sub
dec
in
pop
jmp
jecxz
ds
xchg
scas
and
movsb
rcrb
sub
mov
rolb
adc
out
std
pop
ds
sub
pop
cmc
test
out
fisubrs
push
mov
xchg
pop
clc
enter
mov
jmp
in
push
xorb
sub
sbb
xchg
ds
xor
enter
mov
pop
mov
lret
push
ja
cs
repnz
add
mov
imulb
aaa
in
and
and
cmp
sub
shrl
adc
mov
icebp
aaa
pop
daa
push
hlt
jmp
xor
data16
movsl
lods
lahf
and
out
lcall
popa
push
sub
int
cmp
jnp
repz
xor
outsb
mov
fldl2e
pop
in
sub
fiaddl
std
sub
mov
mov
shlb
sub
xor
rcrl
ljmp
outsl
dec
adc
xchg
adc
sahf
adc
scas
mov
arpl
jmp
fwait
jg
or
dec
cmp
and
push
sub
cmp
test
enter
mov
arpl
ret
push
repz
in
jg
loope
pop
xor
rclb
stos
sub
pop
xchg
das
sub
pop
push
pusha
pop
aas
push
sub
inc
sahf
dec
sub
add
sti
lods
insb
fsubrl
fiaddl
sub
jle
pop
lds
out
xor
pusha
and
xchg
aaa
pop
ret
mov
iret
xchg
stos
dec
and
xor
xchg
xchg
sub
push
and
repz
mov
je
sub
ss
xchg
sahf
adc
insb
pop
movsb
add
xchg
sbb
ljmp
popa
out
pop
mov
cmp
out
loopne
pushf
add
rcll
ret
sbb
aam
fcomi
cld
xor
aaa
or
cmpsl
jae
push
sub
jecxz
xor
mov
mov
outsb
push
inc
inc
and
cmp
vunpckhps
add
push
push
xor
shlb
subl
arpl
sub
lcall
inc
pop
lret
sub
es
and
aad
push
sbb
mov
cmpb
push
and
bnd
inc
push
xor
xlat
and
sub
cmp
mov
iret
adc
mov
adc
ljmp
sub
in
dec
in
sub
js
into
or
xor
addr16
dec
movsl
rorb
sarl
jb
dec
jl
inc
mov
pop
adc
int3
add
adc
popf
sub
mov
aam
xor
xor
ljmp
mov
inc
sub
popf
cmpsb
sbb
out
sub
jmp
ret
ljmp
aam
or
pavgb
adc
cmp
mov
push
push
inc
pop
inc
stos
and
ljmp
jp
jns
imul
adc
or
lea
xor
std
sub
daa
cmpsl
andl
push
adc
rcl
fldcw
mov
jb
lcall
mov
push
mov
fidivrl
arpl
sub
sub
in
xchg
or
sub
stos
or
aaa
loope
call
sub
xchg
cmpsl
jg
sub
mov
xchg
jo
js
mov
sub
push
std
cmpsl
or
jge
mov
inc
add
sub
lods
mov
lea
adc
push
sub
dec
mov
fsubrs
dec
insl
sub
ret
pop
sbb
jg
sub
sub
sub
cwtl
adc
mov
inc
or
inc
je
jne,pt
cld
push
hlt
pop
xor
xchg
dec
jne
push
adcl
adc
adc
push
ljmp
sbb
add
ds
shrb
mov
or
out
bound
loop
fsub
fdivl
js
in
mov
add
inc
and
mulb
inc
out
push
mov
cmpsl
js
or
bnd
cmp
test
int
outsl
jecxz
fisttps
adc
add
adc
jg
sub
inc
pop
in
out
jne
leave
sub
push
js
outsb
repz
fisttps
lret
pop
int
insb
pop
push
push
cli
sub
ss
push
mov
sbb
and
stc
rol
lods
inc
xchg
and
inc
sub
mov
frstor
lods
and
hlt
mov
daa
sti
in
iret
xchg
jg
sub
andb
sub
subl
hlt
loope
cmp
out
push
sahf
sub
addb
cmc
outsl
cmp
sub
cmpsb
les
mov
xor
mov
sbb
push
xor
xchg
stc
bound
mov
out
sar
dec
pop
sub
mov
sub
add
imul
sub
lahf
or
xchg
stc
sub
mov
xchg
or
pop
sbb
xlat
cmp
fwait
xor
xor
aaa
mov
add
outsb
test
or
addr16
xchg
stc
and
dec
enter
inc
dec
dec
jnp
inc
sub
pop
xor
cltd
sub
loopne
dec
fsubrl
icebp
out
sub
mov
insb
iret
sub
fdivp
sbb
add
adc
xor
sbb
sbb
shrl
mov
aad
xor
loop
adc
xchg
jp
push
mov
stc
lods
pop
mov
mov
push
sbb
shrl
or
adc
das
adc
or
movsb
push
and
and
and
mov
stc
push
iret
daa
cvttps2pi
add
jp
push
and
fcmovu
mov
sub
dec
ds
sub
jl
loopne
mov
inc
push
or
popf
movl
xchg
add
adc
sbb
dec
out
out
test
mov
je
mov
jb
into
mov
daa
mov
iret
jbe
lcall
sub
inc
std
fsts
sub
xor
dec
sub
pop
inc
lret
mov
sub
out
clc
jle
arpl
xlat
je
and
cmp
inc
jmp
inc
test
jbe
inc
push
nop
cmp
sub
mov
pop
sub
stos
pop
push
sub
loopne
mov
sub
push
inc
and
sub
orb
cs
imul
xchg
insb
xor
enter
xchg
add
sub
push
sbb
fsubrl
test
fs
cmp
mov
mov
clc
sub
add
xor
lock
lds
fstpl
jp
lret
or
out
and
sti
push
test
sub
sub
jbe
sub
dec
cmp
push
lods
mov
or
outsb
pop
bound
and
dec
jne
fnsave
shll
std
lock
adc
dec
sub
je
xchg
negb
sti
jp
xor
and
shlb
scas
cmpsl
mov
movups
mov
lods
fisttpll
lock
jne
mov
sub
sbb
out
fidivs
rol
sub
or
mov
or
sub
cmp
mov
xor
and
sbb
sti
jno
imul
fsubrp
dec
and
push
mov
mov
enter
icebp
sbb
inc
jle
fwait
or
mov
shlb
mov
lretw
xor
enter
test
fisubrs
and
pop
cmp
js
repz
mov
jns
insl
shl
scas
sub
mov
addl
fildll
cmp
call
adc
ljmp
adc
push
jecxz
jno
vpcmpgtd
cmp
test
mov
outsb
imul
mov
fisubs
test
push
sbb
sbb
sub
rclb
bound
cmp
sub
ror
push
sub
dec
insl
imul
fsubp
test
jge
push
sub
xchg
add
leave
sub
sahf
ljmp
mov
iret
inc
aad
in
adc
xor
stos
push
hlt
es
je
jecxz
xor
xchg
outsl
sub
into
int
cmpsb
xchg
sub
mov
cmp
pop
in
aam
sti
inc
sub
sbb
jmp
xchg
shlb
fs
mov
push
mov
arpl
cmp
mov
fsub
xor
cltd
dec
call
stos
and
jle
lea
aad
loop
aad
mov
arpl
shl
loopne
sub
add
mov
iret
and
mov
test
gs
pop
push
adc
ret
sub
sbb
xchg
sub
adc
enter
sbb
xor
sbb
sub
mov
imul
xchg
sub
push
jmp
cmc
jmp
outsb
lcall
jae
push
pop
xchg
mov
mov
jp
sub
jle
mov
in
js
loop
xchg
xor
rclb
and
lods
and
andb
push
bound
lods
int3
mov
mov
mov
testl
push
imul
adc
icebp
push
push
sub
xor
lea
jmp
mov
iret
mov
jmp
test
ficompl
pop
push
xchg
repnz
sub
xchg
cmp
sub
push
mov
lcall
imulb
int
cmc
rclb
ds
mov
sbb
fisttps
mov
jge
and
aad
jb
daa
loop
fadds
movsl
xor
pusha
cmpsb
call
test
jo
and
dec
mov
dec
jl
pop
sub
clc
adc
add
daa
sub
std
sub
xlat
push
pop
sub
inc
xor
loope
and
rcll
jns
clc
mov
sti
jmp
ret
call
stos
sub
lds
sub
dec
xchg
push
int3
je
and
hlt
lods
mov
push
imul
lret
sub
idiv
or
sbb
les
inc
sub
cmp
int3
sub
mov
aad
orl
andb
mov
dec
jg
aad
inc
pop
sub
jp
pop
fdivr
jl
sub
lahf
cld
je
imul
jp
loope
xchg
cmp
cltd
jno
sub
sub
push
xor
outsl
int
and
xchg
push
push
mov
cmpsl
jne
jecxz
lret
cli
pop
pop
enter
call
imul
cwtl
iret
std
sbb
and
aas
add
out
sub
inc
xor
ret
sub
mov
cmp
and
aam
pop
push
mov
xchg
add
pop
cs
hlt
push
call
movsb
pop
jge
sub
jbe
xorl
out
popa
shlb
add
mov
mov
mov
jmp
mov
sub
test
mov
out
push
out
shrb
fmul
adc
sub
jmp
mov
mov
mov
push
push
lods
push
into
sbb
std
xor
stos
sub
cld
mov
lret
xor
cs
fisubrs
dec
xor
and
dec
lea
mov
shll
sub
lahf
mov
dec
test
cmpsl
es
filds
imul
dec
sbb
lret
pop
gs
pop
sub
in
int
rol
mov
sub
cli
mov
outsb
sub
test
push
pop
push
pop
adc
and
mov
mov
xor
mov
rclb
push
and
sub
stos
rcl
das
cmp
filds
and
push
jge
and
xchg
push
sub
xor
movb
mov
add
sub
sub
pop
xor
push
std
stos
pop
scas
ljmp
js
pop
mov
sub
into
mov
jb
xchg
cld
es
test
or
jp
inc
sbb
sub
xchg
lcall
add
jp
int3
and
add
mov
in
push
fs
and
test
jle
dec
rcll
out
mov
mov
jno
lea
or
in
inc
inc
cmp
fmuls
mov
sub
pop
out
adc
sub
ret
push
sub
stc
push
cmp
lds
xor
enter
das
push
sbb
sbbl
mov
jno
xor
cmp
sub
add
or
pop
int
jg
mov
mov
add
jecxz
sub
and
adc
push
inc
xor
cmp
cltd
pop
int
mov
into
push
addb
loop
jne
mov
xor
movsb
popf
cli
inc
lret
enter
xor
push
jp
mov
push
lea
xchg
mov
fwait
mov
iret
mov
dec
sub
cmp
sub
fimull
les
mov
sub
jl
push
xor
mov
xlat
push
lds
test
sub
add
call
aaa
jg
xchg
insb
dec
pushf
fdivrl
rcrl
xchg
jb
push
sub
leave
inc
pop
movsl
or
fisubrs
push
adc
sbb
xor
sti
xor
mov
inc
pop
imulb
jbe
aam
sub
cmp
or
sub
inc
pop
aas
add
jns
push
test
das
sub
mov
sub
lcall
cmpsl
shll
loopne
nop
push
cmp
jge
cwtl
stos
in
mov
daa
inc
pop
add
imul
mov
clc
cli
or
adc
in
in
inc
aam
imul
jbe
push
sub
mov
fs
cmp
int3
aad
jae
jo
ds
mov
aas
out
lock
add
in
push
jmp
repz
jo
into
xor
test
ss
cmp
or
xor
or
push
sub
in
and
das
and
scas
bound
mov
outsb
rcrl
out
sub
loop
and
shlb
aas
cmp
loopne
sub
inc
lcall
gs
jl
add
rcrb
scas
int
fsubrp
push
add
push
sub
dec
dec
sbb
jge
and
pop
ja
imul
sub
aad
aas
cld
int
lret
mov
test
xlat
push
and
test
dec
add
popf
lea
and
mov
lret
enter
pop
mov
adc
int3
je
fnstcw
xor
adc
lret
or
mov
scas
fisubs
dec
sub
cmpsb
lret
and
mov
add
outsl
ficomps
inc
mov
dec
pop
mov
sub
sub
call
push
sbb
push
mov
cld
and
sub
mov
roll
lods
shr
jg
sub
mov
nop
sbb
shlb
sbb
stos
cvtps2pi
call
dec
inc
and
pop
inc
into
push
pop
int3
cmp
sub
sbb
loopne
int3
rolb
xchg
and
lock
xor
jae
jecxz
ss
pop
pop
jge
xchg
sub
mov
test
mov
inc
scas
subl
xor
sbb
lret
sub
add
mov
outsl
push
popf
out
into
faddp
pop
xchg
mov
adc
lahf
aam
arpl
sub
adc
dec
test
pop
fildl
pusha
inc
xorl
shll
sub
stc
add
lret
jmp
lods
or
add
sub
mov
xor
mov
mov
sub
push
out
or
in
sbb
xorl
sub
fldenv
test
add
pop
jmp
hlt
shlb
ret
pop
sbb
or
aaa
and
adc
insb
les
sub
pop
xor
lret
mov
mov
sub
cs
test
sub
leave
add
fdivrl
cmc
cmc
lcall
cmpsl
fisttpl
loop
adc
sub
xchg
fstps
fucompp
mov
push
or
fs
out
xchg
sub
jg
inc
into
sub
fisubrs
xchg
rol
push
push
add
int3
adc
jmp
ljmp
lds
int3
inc
jns
and
inc
push
loop
aam
push
lea
dec
sub
and
mov
sub
cltd
aas
and
repnz
jns
xor
cmp
sub
mov
sub
jo
iret
jbe
cmp
loopne
fadds
cmpsb
adc
lcall
sub
jl
dec
mov
pop
xchg
push
inc
leave
lea
cltd
movsl
sub
push
mov
dec
inc
push
or
inc
sub
cmp
shlb
sub
dec
push
pop
push
mov
cmp
aas
sub
and
shlb
jge
jmp
jo
ljmp
push
jns
pop
push
fcoml
sub
adc
sub
testb
or
lock
loopne
pop
mov
mov
xor
or
imul
dec
lret
jbe
mov
faddl
adc
arpl
inc
sub
pop
push
cmc
sub
sti
xorl
push
mov
mov
sub
ljmp
in
lock
push
sub
xlat
imul
sbb
mov
adc
cmp
int
ljmp
mov
sub
aas
pop
imul
loope
mov
sti
stos
push
aas
and
sub
cmp
adc
sub
sub
aad
sub
sub
int
xor
loop
jmp
popa
testb
sub
aad
repnz
stos
xor
scas
rcrb
lret
mov
lds
icebp
inc
shlb
mov
pop
pop
in
push
sub
or
xchg
mov
xchg
inc
out
test
cs
test
sub
adc
out
sub
cmp
and
fwait
ret
sub
mov
jno
cld
jecxz
sub
jle
mov
repz
push
test
ret
mov
xor
nop
xor
bound
test
jne
sub
jge
leave
scas
lret
sub
mov
add
cmpsb
test
imulb
mov
frstor
adcl
setns
sbb
jmp
pop
push
push
popf
pop
adc
pop
xchg
leave
scas
fildll
mov
stos
cmp
jg
cmc
stc
pop
cmpsl
add
in
ficompl
push
xor
outsb
fnstenv
jp
loop
lea
xchg
pop
int
dec
ss
or
mov
rorb
mov
lods
sub
aaa
hlt
add
out
loop
ret
pop
cltd
add
jge
mov
push
in
outsl
sub
jecxz
sahf
je
or
push
inc
sub
cmp
mov
mov
adc
paddusw
inc
cltd
add
sub
movsl
out
adc
loope
cmp
sub
inc
stc
arpl
sub
push
and
cmp
dec
pop
mov
stc
mov
shrb
add
outsl
stos
pop
add
push
mov
fdivrl
shlb
sub
and
jns
adc
xchg
sub
push
jmp
call
sub
lock
in
or
cmp
into
cmc
mov
test
pop
fcompl
in
sbb
mov
sub
stc
xorb
pop
insb
daa
ds
lret
roll
or
bnd
pop
js
popa
jo
outsb
jae
and
and
int
sbb
sub
pop
lahf
arpl
pop
cmc
add
jno
outsl
dec
fs
pop
xchg
sub
mov
jnp
fbstp
pushf
sub
jbe
add
push
xor
or
inc
cmp
adcl
dec
sbb
push
push
sub
stc
sbb
push
mull
mov
rcll
push
lods
ja
or
cmpsb
fistl
xor
lea
aaa
pop
mov
and
lahf
push
cmpsb
push
ret
imul
js
repnz
dec
negb
xchg
and
movsl
jl
mov
mov
xor
inc
cltd
adc
sub
mov
xor
idivb
or
mov
jecxz
mov
nop
mov
pop
leave
shl
push
xor
lcall
push
sub
sbb
adc
sub
jl
data16
pusha
mov
cs
daa
jnp
pop
sbb
sbb
and
nop
shrb
jmp
test
xor
les
btr
jmp
pop
aam
lcall
fisttpl
cli
loopne
ja
cmp
arpl
ljmp
test
cmc
push
dec
imul
or
clc
cs
xor
adc
and
sbb
insb
sub
cmp
fs
lret
push
sub
and
jmp
shl
or
lock
sbb
out
es
les
xchg
mov
cmovge
sti
imul
xchg
dec
sub
jb
sub
cmpsb
and
cmp
pop
inc
pop
sub
leave
and
fs
push
mov
jne
jae
mov
sub
xchg
add
or
negb
sub
mov
lock
xor
dec
and
insl
sub
std
icebp
int3
addr16
shll
xchg
pop
dec
and
lea
mov
out
and
shr
sub
sub
or
test
sub
ret
ds
shrl
lcall
xor
leave
jno
xor
lds
mov
incb
mov
insl
sub
inc
add
scas
or
cltd
sub
les
jbe
lret
aad
cmc
mov
sub
and
fmulp
sub
mov
dec
add
or
sub
clc
int3
inc
fmull
sahf
jmp
loop
popf
or
and
or
fbld
push
int3
xor
xor
lods
mov
test
pop
outsb
push
mov
adc
test
repnz
repz
call
push
outsb
mov
or
pop
ja
xor
ret
sub
inc
mov
shlb
and
aas
sub
or
insl
lcall
inc
in
sub
sarb
and
stos
in
sbb
cmp
lea
or
cmp
in
arpl
push
mov
push
adc
xchg
shrl
test
sar
outsl
jnp
cmp
sub
scas
ss
adc
and
je
xchg
fisubrs
aaa
das
in
sub
mov
icebp
mov
jbe
rorl
add
out
cs
push
dec
hlt
push
sub
cmp
nop
jle
jl
xchg
sub
add
mov
xchg
xor
mov
ds
sub
inc
or
cmp
pusha
mov
push
jmp
xchg
mov
test
jb
hlt
je
dec
pop
ret
rcll
cmpsl
lahf
mov
add
iret
daa
out
adc
insb
mov
and
mov
pop
sbb
pop
fwait
sub
popa
cmp
aas
dec
mov
mov
outsb
movsl
sub
jmp
fnstenv
bound
xor
lea
adc
and
xchg
scas
mov
enter
mov
xchg
xor
pop
sub
clc
cmp
pop
xchg
lods
inc
stos
icebp
fldl
xchg
xor
sub
in
sub
xchg
dec
in
adc
imul
push
sbb
xor
lea
int3
pusha
data16
ds
iret
push
push
daa
sub
push
or
sub
repnz
fstp
out
in
and
sub
aam
in
mov
lea
add
pop
roll
fstp
nop
fwait
sub
aaa
pop
cwtl
and
test
mov
lret
jb
repnz
leave
jle
sub
shl
xchg
or
and
push
adc
sub
mov
mov
push
sub
aam
stc
loope
daa
push
sub
inc
inc
iret
sub
jmp
rcr
jne
push
dec
xchg
sub
jl
rcrl
jmp
ret
adc
stos
in
cmp
or
icebp
je
fs
sbb
adc
fildll
sarb
dec
outsl
imul
iret
sub
mov
clc
mov
insb
adc
adc
cmp
mov
mov
dec
sub
push
dec
xorl
xchg
enter
test
aad
cli
loop
mov
push
sub
fcomps
inc
add
mov
addr16
jp
xchg
add
cmp
xchg
and
mov
pop
sub
loope
in
mov
push
scas
jne
test
in
lea
jg
testl
into
sbb
adc
sahf
test
push
aas
pop
stc
sbb
and
testl
fidivrs
aaa
int
sub
cmc
jbe
decb
jns
dec
pop
push
enter
out
inc
les
mov
shll
popf
fucom
mov
jnp
push
or
nop
xor
inc
push
fidivrs
xchg
aad
push
adc
dec
jno
xchg
mov
mov
sub
fcoms
jmp
inc
push
mov
mov
sub
ljmp
mov
fnstcw
lret
fadd
out
clc
ret
add
popf
xor
mov
sub
pop
push
sub
and
js
xchg
sbb
cmp
sub
push
push
popf
or
repnz
sub
xor
cmp
push
out
ja
jle
pop
imul
jbe
fs
les
repz
and
lret
outsb
cs
jecxz
pop
aas
xchg
cld
fnsave
fldl
popf
mov
int
sub
shlb
xor
and
repz
shll
and
inc
push
imul
xchg
dec
push
adc
pusha
sbb
adc
scas
and
or
add
xchg
cmp
sub
mov
dec
test
movsl
inc
pop
sub
mov
into
mov
pmaxsw
inc
pop
and
push
ret
sbb
xchg
inc
push
sub
add
xchg
ret
inc
pusha
mov
add
rcrl
test
enter
outsl
add
lds
jp
leave
outsb
sub
and
hlt
add
xchg
and
shrl
xchg
jmp
xor
or
pop
sub
push
cmp
lds
xor
test
je
jl
ret
ja
sbbl
sub
fucomp
insb
pop
sub
and
sbb
xor
cmp
cmc
popa
loope
daa
mov
mov
pop
jecxz
mov
cmp
mov
cmc
xor
adc
shrb
popf
sub
mov
les
call
cltd
out
push
in
fwait
loop
and
cmp
lods
outsb
data16
out
shrl
imul
movb
inc
test
sub
jo
aam
and
xor
lea
or
pop
mov
mov
sub
sub
popf
pminub
lods
push
dec
or
sti
or
repz
outsb
in
dec
mov
cmp
cltd
push
cld
aaa
fsubr
mov
jecxz
stos
and
sti
dec
mov
lock
sub
jb
or
dec
movsl
cs
test
shrb
dec
mov
sub
adc
mov
pop
mov
lahf
test
mov
stc
or
xor
sub
sub
jmp
shrb
xchg
add
add
jmp
into
lea
mov
movl
cmpl
xor
pop
stos
sub
push
pop
sub
mov
enter
add
mov
xor
aas
jnp
addr16
adc
xor
xchg
sub
sbb
lcall
pop
cmp
lock
mov
stc
fcomps
sub
cmpb
mov
popa
cli
jp
in
xchg
lret
pop
leave
sub
sti
in
sbb
loop
sahf
inc
mov
icebp
fwait
or
lret
inc
stos
cmp
push
jle
cmpsl
mov
inc
or
test
sub
fildl
sub
std
test
insl
ficoms
sub
pop
cmp
fsubrs
mov
xor
cmp
mov
sub
shlb
jb
sub
sub
add
sbb
adc
pop
ret
sub
xchg
push
xchg
les
rclb
sbb
mov
cld
addr16
rcr
or
pop
test
shlb
test
and
xchg
daa
jno
scas
dec
sub
mov
mov
jle
inc
cmp
mov
ficompl
xchg
pop
popa
xor
movsl
je
bound
test
cmp
cs
pop
push
lods
ficoms
imul
les
in
stos
and
dec
ljmp
shll
push
shll
adc
inc
lods
test
jge
es
lods
lods
lret
jg
mov
ret
and
add
fxch
ror
mov
and
mov
add
iret
cmpsb
es
ja
stos
sub
mov
out
sub
data16
out
and
mov
inc
rcll
out
sub
push
adc
and
jge
mov
mov
pop
into
sti
mov
sahf
sub
lods
mov
add
cmp
test
push
ds
xchg
daa
idivb
push
sub
xlat
outsl
jo
sub
mov
adc
cs
sub
imul
lds
sahf
sbb
jecxz
sub
xchg
lods
sub
mov
lret
cmp
roll
mov
cmp
fdivl
push
hlt
mov
daa
xchg
and
sub
add
out
cmpl
adc
cmp
dec
out
in
xchg
dec
sub
push
loope
test
mov
xor
push
mov
imulb
lahf
nop
sub
adc
insb
fs
sarb
inc
mov
lahf
test
arpl
mov
mov
jecxz
sub
mov
mov
mov
xor
and
jns
rol
stc
sub
jg
mov
sub
es
loop
adc
std
lods
push
jnp
adc
xorb
lds
sub
int3
mov
sbb
cli
dec
aam
or
dec
cwtl
adc
lcall
push
out
ja
xor
xchg
or
adc
incl
iret
inc
sub
in
push
mov
mov
pop
repnz
scas
push
sub
and
out
sub
mov
xor
lds
jbe
xor
add
repnz
mov
stos
jb
cltd
aad
push
mov
sub
lret
in
ljmp
xchg
mov
imul
jne
or
xlat
in
inc
jb
inc
sub
xor
in
mov
dec
aad
push
arpl
aam
ljmp
push
out
inc
mov
lds
pop
mov
sub
push
add
or
jmp
ret
adc
sub
nop
pop
add
xchg
xchg
cmp
push
icebp
xchg
stos
cli
cmpb
pop
xchg
imul
dec
cmpsb
mov
xor
inc
mov
addr16
je
sub
cli
adc
sub
gs
add
ret
jne
push
and
xor
lret
int3
jbe
sub
es
push
sub
fnstsw
sub
cmc
xchg
enter
mov
dec
das
or
aam
in
loope
js
cmp
push
sub
cmpsl
inc
xchg
loop
fstpl
lea
sub
lret
in
aaa
sub
jne
dec
pushf
sub
insl
adc
push
jmp
sub
out
xor
push
fimull
inc
xchg
or
in
enter
add
jg
and
cmp
xor
dec
dec
cs
and
out
ja
ljmp
out
mov
shrb
stos
cwtl
sub
jbe
mov
ljmp
xor
push
int3
cmp
test
stos
xchg
inc
xchg
inc
lcall
push
arpl
stc
mov
mov
jae
insl
je
stc
imul
xor
adc
aaa
mov
mov
sub
lret
into
push
sub
add
add
or
xchg
test
aas
pop
and
andb
sub
adc
es
popf
aas
stc
fsave
xor
repz
sub
inc
rorb
dec
inc
mov
jg
stos
stos
pop
mov
xchg
pop
ror
push
inc
pop
cs
jp
aad
stos
inc
sub
pop
scas
xchg
sbb
xchg
mov
jg
sub
mov
insl
in
mov
stos
cmp
gs
jg
or
sub
and
jge
jne
xchg
ror
mov
addl
or
scas
iret
adc
xchg
cmp
sub
popa
std
scas
push
sub
vminps
aad
ja
shll
into
mov
inc
cmpsb
andb
lods
adc
jl
cmp
inc
mov
js
lock
js
das
adc
pop
xchg
jle
pusha
sub
mov
xor
add
pop
sub
das
sub
pushf
mov
sub
xchg
fmul
mov
insl
mov
xchg
lds
fcomp
or
mov
sub
dec
inc
mov
test
sbb
sub
dec
and
sub
cmpsl
sub
stc
fistl
push
sub
insb
or
pop
mov
test
xor
sub
cmc
mov
adc
dec
loop
cmpsl
xchg
jge
mov
xor
cli
dec
std
and
dec
mov
cmpsb
inc
jae
test
xchg
inc
ss
mov
imul
mov
popa
push
push
push
sbb
scas
loop
cld
cmp
jecxz
dec
sub
ret
repz
push
sub
fisubrs
movsb
imul
and
adc
imul
mov
mov
push
or
aaa
stos
cmp
sub
mov
out
gs
loopne
push
inc
test
leave
test
pop
cs
jbe
repz
les
adc
in
jmp
cs
cltd
ret
jmp
pop
mov
add
sub
lret
sub
jle
dec
scas
sub
adc
hlt
loop
das
cwtl
divl
sub
lret
imul
pop
icebp
mov
mov
lds
inc
sub
adc
sub
pop
and
pop
jmp
and
ret
dec
cld
push
daa
in
or
xlat
lret
in
jmp
loopne
sub
ja
jns
sbb
jmp
ret
fstps
stos
sbb
dec
shll
cmpsb
pop
ljmp
lea
mov
fcomps
xchg
and
sub
push
lock
clc
dec
fsubrl
adc
aad
sub
lret
sbb
movsb
sbb
sub
xchg
cmpsb
subl
cmp
aad
aas
fwait
sub
cmc
push
push
ds
std
and
dec
xchg
xchg
jle
gs
inc
push
mov
add
sti
push
push
fsts
mov
and
cmp
push
insb
dec
in
cmpsl
insl
cmp
jl
sub
adc
adc
sahf
out
int3
pop
das
adc
repnz
mov
sbb
sub
in
push
sbb
push
sub
mov
das
in
out
xchg
test
adc
sub
es
fldl
mov
xor
pop
je
inc
ja
sub
js
out
sub
popf
negb
mov
scas
icebp
or
ret
adc
xchg
push
cmc
daa
cmpsl
test
insb
jno
xchg
out
push
test
sub
inc
dec
mov
fwait
jbe
push
jo
or
inc
and
in
les
test
lahf
and
mov
pop
adc
mov
lret
icebp
mov
jno,pn
test
xor
addr16
rcr
sbb
popa
mov
clc
mov
sub
sub
call
rcrl
mov
cmc
or
pop
fcomip
sub
xor
aad
call
out
jg
sub
pop
mov
bound
inc
sub
mov
repz
movzbl
aad
cs
and
pop
cs
addr16
leave
lods
sbb
sub
xchg
jp
pop
jge
cmp
sub
int3
test
or
into
inc
sub
repz
jge
sub
sbb
mov
fldenv
add
scas
pop
jge
or
js
cmpsb
cmp
sub
push
scas
xor
cmpsl
test
clc
in
pop
sub
outsl
popa
cmpsb
aam
shl
ds
cld
adc
mov
in
arpl
std
dec
fistps
fcoml
and
xchg
mov
in
sub
sub
out
test
inc
mov
mov
mov
sarb
outsl
jle
fisubrl
out
pop
push
popf
xchg
sub
mov
add
or
bound
jmp
mov
test
pop
lcall
outsl
mov
and
sbb
mov
mov
imul
outsb
sbb
xor
mov
popa
in
ficoml
aad
sub
sub
push
sub
inc
outsb
and
aaa
fld
inc
xor
lods
jno
dec
and
sbb
sub
xchg
dec
mov
mull
ljmp
cwtl
mov
outsb
jbe
push
clc
loop
js
test
sub
lods
out
cltd
aad
and
and
cmpsb
cli
jne
sub
add
add
jl
int
imul
lcall
lea
movsl
sub
mov
iret
mov
push
adc
and
loopne
fcmovu
pop
repnz
hlt
shlb
lds
fdivrl
sub
in
sub
dec
lret
cltd
mov
lds
add
inc
and
and
dec
dec
dec
ljmp
daa
lds
pop
sbb
popf
adc
leave
cs
movsl
push
mov
lret
adc
mov
lds
xchg
adc
mov
jmp
pop
sub
subb
mov
xchg
push
test
sti
jmp
xlat
sbb
call
mov
push
jns
pop
lds
dec
xchg
mov
pop
sub
iret
or
fbstp
cmp
xor
push
stos
push
ds
inc
and
fcompl
in
scas
imul
aaa
jbe
sub
int
and
adc
lods
mov
or
adc
sub
sub
ja
fs
sbb
xchg
aad
sub
fdivrs
cmp
lods
add
xor
sub
or
jp
mov
dec
pop
ljmp
shrl
adc
push
adc
loope
pop
ljmp
adc
cmpsl
xor
add
test
and
and
pop
jecxz
add
jg
and
xchg
or
mov
lahf
sbb
sub
test
mov
sub
xlat
adc
faddl
sub
loop
sub
fstl
adc
dec
pushf
femms
sub
ja
push
jge
xchg
inc
in
out
pop
and
inc
cwtl
cmp
mov
orb
jae
out
jmp
xor
push
cli
and
test
inc
sub
push
mov
fsubrl
lret
enter
sub
decb
sbb
push
js
jnp
mov
imul
and
mov
mov
bound
lret
lret
clc
mov
in
add
mov
sub
testb
sbb
js
sub
pop
icebp
call
fsubr
or
sub
jge
sub
fistpll
mov
dec
test
mov
dec
jg
mov
pop
popf
sbbb
pop
out
dec
enter
lods
jg
repz
add
sub
outsb
jmp
inc
xor
pop
fildll
dec
imull
pushf
xchg
sbb
fcmovb
inc
rclb
sub
jo
cmp
arpl
lods
push
and
call
mov
and
stos
jecxz
lds
lods
inc
mov
mov
movsb
or
sub
popf
jp
push
jp
and
scas
test
dec
pop
mov
into
idivb
cld
loop
and
xchg
lock
sub
dec
test
pushf
xchg
xchg
addr16
pop
sub
mov
push
ljmp
jbe
sub
hlt
and
sub
and
push
pop
jle
xchg
xchg
aam
mov
and
cmp
mov
sub
sub
in
pop
and
push
cwtl
push
pushf
cmpsb
mov
jecxz
pop
pop
ret
aaa
xor
ret
lcall
in
stc
adc
dec
adc
out
outsl
idivl
jp
cli
inc
xor
jb
sbb
push
fwait
xchg
dec
mov
pop
jl
sub
sub
mov
cmc
aam
jge
dec
jo
push
fildl
mov
ja
je
das
cmpsl
jecxz
cmp
les
or
movsb
dec
push
pushl
sub
cmp
jle
mov
and
push
or
jne
vpsubsw
sub
mov
ja
adc
add
cmpsb
orl
jmp
mov
cmp
insb
xchg
sbb
sub
sbb
dec
push
sub
stc
xor
ljmp
jnp
and
insl
sbb
jl
pop
sub
push
in
lock
lcall
mov
adc
mov
aaa
sub
pop
mov
xchg
addr16
gs
sub
add
sub
xchg
testl
ja
into
inc
sub
repz
xor
and
sub
mov
call
sub
daa
push
xor
not
popa
add
push
inc
adc
sub
cli
jns
insl
nop
hlt
mov
in
push
sub
js
or
les
sub
push
or
test
cmp
xchg
push
fiadds
ret
xor
cltd
adc
mov
mov
sub
fisttpl
inc
subb
jp
jo
and
fsubl
stos
cs
js
mov
sub
sub
fdivrs
inc
jmp
pop
xlat
es
andb
push
adc
xchg
xchg
int
ljmp
popa
xchg
add
lcall
loope
pushf
aad
mov
sbb
mov
add
sub
inc
lds
and
and
sub
or
mov
sbb
sub
sub
dec
mov
sub
jno
sti
sbb
out
sub
fnstsw
xor
loopne
fbld
mov
xchg
jno
fsub
adc
cmp
fsubr
mov
nop
push
or
out
ja
fistpll
and
push
fwait
adc
sub
mov
jns
jge
enter
inc
mov
aam
pop
adcl
cld
mov
adc
sbb
sub
sub
adc
dec
push
lret
fwait
je
sub
add
jo
ficomps
cwtl
testb
pusha
in
dec
pop
and
and
xchg
add
sub
call
rcl
xor
mov
in
jno
add
mov
xor
sub
adc
jg
sub
add
and
mov
xchg
daa
xchg
mov
repz
popf
pop
xsha1
cmpsb
dec
inc
pop
outsb
xchg
or
pop
movl
or
sbb
sub
push
rolb
es
xchg
cmp
repz
cmpsl
out
aaa
ja
dec
inc
lock
and
jge
jnp
xchg
cmc
push
sub
xlat
dec
cld
inc
bound
sub
mov
or
in
cmp
es
push
mov
mov
popa
pop
push
mov
mov
push
testl
mov
adc
inc
sub
jg
push
adc
sub
sub
push
add
or
sub
imul
fsubrl
cmpsl
lcall
and
outsl
jle
fs
out
movhps
jmp
push
sbb
sub
or
insl
sub
test
test
movsb
and
aad
fs
mov
sub
outsl
ret
and
xchg
lahf
stc
repz
sbb
test
push
sbb
and
out
cmp
dec
cmc
sub
inc
jl
sub
addr16
fldenv
xchg
pop
cmc
sub
cltd
fs
adc
aam
adc
xchg
and
pushf
push
outsl
dec
stos
adc
sub
mov
add
sbb
add
stos
push
sub
push
imul
push
pop
and
jne
push
fs
cmpsl
iret
add
out
dec
adc
insb
ret
int
dec
pop
sub
push
add
mov
lea
ss
aad
repnz
push
iret
arpl
sub
pop
mov
daa
push
test
fcmovbe
pusha
lret
or
fimuls
mov
and
mov
jl
lods
mov
hlt
in
lcall
jnp
xchg
cmp
sbb
movups
push
and
inc
loop
mov
cmc
loope
jb
xor
sub
sub
mov
lods
test
xchg
push
jecxz
inc
adc
rcll
sub
stos
inc
mov
pop
pop
js
das
mov
adc
jns
xchg
xchg
fsubrs
xchg
jmp
ret
jne
inc
mov
scas
cmpb
cmpsl
add
jmp
shlb
in
lret
out
ds
lret
jl
jle
push
and
stos
add
iret
xchg
andb
jg
imul
adc
sbb
pop
and
cmp
out
mov
sub
sbb
jl
sub
addl
dec
mov
leave
add
loope
mov
lods
mov
fsubrs
xor
sub
sahf
adc
or
sub
xchg
inc
ljmp
sub
sub
or
xor
mov
sub
cmpsl
scas
fldl
or
in
mov
pop
ss
addr16
imul
sbb
fistl
sbb
mov
mov
fdiv
sub
adc
int
cmpsb
inc
es
pop
cmp
xor
imul
out
ja
scas
dec
xchg
push
xchg
mov
cwtl
sub
adc
clc
or
and
pop
dec
cs
jmp
loopne
push
in
sub
enter
push
mov
mov
mov
mov
sub
add
fiaddl
xor
jle
and
mov
lret
ljmp
aad
pop
insl
int
mov
mov
xor
and
jnp
lret
out
jns
inc
movsb
call
adc
test
popf
fstpt
mov
js
pop
dec
les
jno
popa
dec
std
lcall
add
jae
jbe
call
mov
mov
sub
xorl
hlt
pop
or
ss
les
imul
inc
and
je
or
dec
cmp
xchg
adc
sub
sub
sbb
orb
cs
repz
dec
mov
lret
stos
movsb
scas
icebp
inc
inc
or
sub
pushl
gs
mov
sub
or
pop
mov
jg
std
sub
adc
adc
cld
xor
pop
mov
arpl
pop
inc
dec
std
xchg
das
cmp
cmc
addr16
movsb
push
sub
shrl
mov
push
mov
xchg
fdivr
sub
add
dec
dec
ljmp
sub
cmp
sbb
cmp
mov
xchg
or
pop
sbb
sub
push
mov
aam
mov
push
dec
andl
movsl
dec
and
aam
shrb
sub
test
jae
sub
mov
je
sub
and
xor
mov
mov
sub
mov
inc
inc
xor
jns
lret
fstps
lods
sub
pop
dec
and
mov
jae
jg
lock
pusha
daa
add
movsb
es
mov
sub
daa
mov
fnstcw
pop
loop
test
mov
lcall
iret
jne
mov
out
movsb
sub
jno
out
stos
test
or
pusha
sub
push
insl
lahf
sysexit
pop
test
lea
lds
data16
sub
inc
iret
sub
or
enter
adc
sub
push
pop
shll
pushf
cmp
jl
mov
inc
in
sub
mull
cltd
lcall
adcl
sub
mov
test
dec
add
ja
fcoml
xchg
xlat
jb
xor
leave
ljmp
div
sub
outsl
or
sub
pop
inc
pop
xor
and
sarb
adc
pop
mov
push
in
sub
xchg
scas
fcomps
xlat
dec
enter
insl
andl
adc
fildl
or
pop
sub
addr16
ret
inc
lcall
mov
std
sub
enter
arpl
and
mov
pop
sub
inc
jb
lret
popf
aad
int3
inc
and
stos
adc
mov
mov
sub
push
sbb
dec
xchg
adc
pop
roll
mov
jmp
fldt
scas
das
imul
jo
xor
xchg
test
pop
es
xor
cmp
xchg
fistpll
jp
push
aad
fsincos
sub
push
jno
and
fisttps
nop
stos
pop
loope
fs
cmp
sub
mov
xorl
test
aad
dec
mov
xchg
pop
rcl
imul
lcall
push
sub
and
dec
sub
pop
gs
sub
je
cmc
pop
scas
imulb
daa
orl
icebp
mov
dec
xchg
push
xchg
ja,pn
das
mov
test
push
adc
sahf
lods
xchg
push
lcall
and
call
cmp
adcb
pop
test
nop
test
push
gs
in
sub
mov
cmp
sub
int3
insl
add
sub
push
sbb
sub
rorl
add
mov
lret
xchg
mov
xchg
stos
push
imul
loopne
fiadds
cmp
sbb
xchg
js
and
sbb
pop
call
roll
popf
or
outsb
and
pop
repz
imul
xor
lods
outsl
cmpsl
sarb
sub
and
fisubrl
adc
jno
mov
scas
outsb
mov
cmp
stos
sub
mov
push
mov
xor
jb
and
jg
shrl
push
out
sub
add
sub
js
sub
in
rcll
or
push
aaa
push
scas
jp
inc
rdmsr
pop
stos
in
stos
ss
push
lods
jno
scas
pop
sbb
sub
pop
addb
outsl
ljmp
mov
cmpsb
insb
cli
mov
adc
sub
enter
sub
pop
stc
das
mov
sbb
inc
pusha
scas
sub
std
sahf
rcl
sbb
cmpb
sub
sbb
je
sub
and
push
jle
push
popf
movsb
xchg
out
insb
out
push
rorb
sub
xor
mov
loop
or
cmp
jno
pop
ret
stos
pop
sub
in
test
aam
pop
or
pop
sub
xchg
xchg
push
stc
daa
add
adc
insb
push
pop
sub
dec
pop
sbb
xor
sbb
sub
mov
jbe
andl
xor
fs
push
stos
dec
and
push
mov
jae
sub
sub
les
pop
push
sub
mov
pop
inc
sub
loop
sub
sub
push
adc
add
add
stc
sub
jne
pop
cmp
cld
daa
fisubrl
ljmp
adc
punpckhwd
sub
sbb
pop
xor
in
lock
cs
iret
add
mov
push
ret
sub
imul
loop
jns
dec
pop
into
xchg
and
sub
adc
mov
dec
sub
lds
add
fnstenv
dec
mov
pop
fwait
mov
sub
popf
xchg
mov
mov
pushf
imul
xor
mov
xor
test
jecxz
inc
jg
add
shlb
or
lock
adc
cmpl
mov
xchg
daa
and
outsb
cmpsb
jmp
sbb
subb
out
and
jns
add
nop
out
or
jmp
ret
push
lcall
mov
or
out
sub
cmp
rorl
adcb
xor
imul
mov
aad
xchg
lds
je
in
adc
sub
jle
inc
js
xor
jae
out
jbe
ja
fs
mov
mov
dec
stos
call
pushf
add
sub
lock
dec
pusha
das
es
mov
sub
xchg
jmp
notl
sti
lods
jl
hlt
xchg
int3
push
jmp
mov
push
and
xor
adc
outsl
pop
les
push
sub
cmpsl
dec
icebp
scas
cmpl
dec
mov
or
jnp
xor
adc
repnz
sub
ret
add
aas
push
loop
sbb
or
mov
sub
cltd
sub
mov
int
idivl
add
sub
xor
dec
push
cmp
fistps
sub
int
xchg
arpl
adc
mov
cwtl
sub
call
sub
out
ds
test
sub
lahf
popf
test
jbe
push
push
rol
cmp
in
enter
mov
jecxz
mov
into
insl
sub
ror
sbb
aam
sub
fcos
ja
sub
addr16
push
pushf
fiaddl
xor
movsb
add
or
sub
lahf
lcall
and
shrb
cmp
sub
in
call
rorl
sub
sbb
add
sub
lods
xor
les
lods
sbb
inc
jg
push
pop
xor
jbe
insl
mov
sub
dec
fcom
repz
pop
movsb
sub
popf
sub
into
pop
push
mov
les
jmp
adc
mov
sub
jnp
cmp
and
sub
je
adc
sub
pop
and
jge
or
out
sub
cmpsl
and
sahf
iret
aad
scas
in
adc
pop
scas
les
aam
push
cltd
sub
mov
in
jp
jmp
xor
xorb
shrb
movsb
push
adc
sub
lret
rcll
cs
sub
insl
mov
mov
orb
mov
out
sub
fs
sub
hlt
mov
xor
sub
jle
sub
jns
out
ljmp
ficoms
and
push
or
in
sub
mov
sub
int3
dec
dec
test
int
mov
fcmovb
cmp
in
lret
stc
mov
stos
adc
insb
sbb
jnp
adc
inc
cli
mov
add
les
sub
add
sub
aam
repnz
sub
das
pop
in
jae
shrl
adc
jecxz
adc
lret
mov
fcomi
push
xor
ja
loop
xlat
stos
inc
push
sub
daa
aas
subb
stos
gs
xchg
jl
sub
movsb
mov
mov
cmpsl
out
adc
xchg
sub
push
pop
call
les
pushw
and
ss
adc
lods
push
xor
xor
repnz
int3
iret
and
push
pop
mov
fwait
mov
mov
in
push
sub
loopne
and
sub
adc
jp
sub
getsec
in
mov
sub
add
sub
xorl
sub
int
in
mov
mov
push
or
dec
inc
enter
sub
lds
mov
add
imul
jbe
aam
mov
xchg
sub
xlat
fldl
lahf
inc
inc
mov
push
fwait
mov
push
nop
xchg
adc
or
push
and
mov
stos
push
sub
pop
or
bound
sarl
xor
fs
fsubp
int
stos
pushf
sub
xchg
inc
adc
popa
insb
adc
jbe
push
lret
adc
mov
xlat
sub
add
mov
add
push
inc
sub
mov
fs
cs
inc
adc
sub
sbb
add
jmp
fsubs
mov
and
sub
jp
mov
xchg
mov
push
sti
lahf
pop
and
sub
jnp
mov
mov
push
ds
imull
xchg
or
sub
out
out
pop
ljmp
andl
and
inc
or
xor
sub
arpl
inc
out
out
mov
int
push
sub
push
sbb
cmp
fldenv
pop
icebp
mov
call
fdivrs
xchg
sub
add
lret
cmpsb
in
mov
cmc
or
sbb
lock
sub
inc
mov
sub
cmp
jecxz
sub
orb
daa
fiadds
jne
jle
sub
jmp
pop
inc
sub
dec
std
xor
data16
int3
xor
ror
jg
xchg
cs
cmp
sbb
dec
imulb
jecxz
sub
in
data16
sub
add
jg
sub
cmp
jmp
adc
incl
xor
xchg
int3
cld
dec
leave
cwtl
lods
daa
and
push
cli
pop
adc
rorl
mov
repz
dec
inc
sub
fbstp
inc
scas
fldl
mov
inc
xlat
sub
mov
sub
and
shr
ljmp
lret
push
sub
movsb
out
mov
xchg
ja,pn
lock
pusha
test
xchg
imul
sub
jp
sub
inc
or
xchg
scas
or
sbb
clc
mov
cmp
popf
adc
sbb
into
pop
adc
sbb
ljmp
or
pop
mov
sub
cmpsl
rcll
das
sub
into
hlt
push
pusha
sub
stos
jnp
shll
mov
fsubrp
add
xor
dec
hlt
dec
sub
int
and
sub
xchg
xchg
sub
imul
fcoml
std
cmp
or
mov
hlt
mov
mov
xchg
test
pop
sub
cmpsl
call
xor
stc
sbb
rcll
and
push
fwait
sub
xor
out
inc
sub
popa
arpl
or
dec
sub
add
push
mov
out
adc
fldt
xchg
dec
add
ds
pushf
les
mov
inc
and
in
cs
lret
cmp
and
popf
pop
mov
je
out
lods
icebp
sub
sbbb
sub
iret
dec
cld
clc
int3
sub
ret
movsb
dec
mov
cli
pop
or
adc
sahf
fisubrl
cltd
sub
sbb
lods
xor
dec
ds
sub
daa
mov
lret
and
cli
inc
addb
popa
sub
repnz
xlat
sub
push
and
jle
out
mov
pusha
sub
fcmovnb
dec
bound
hlt
mov
lods
sub
rcrb
je
pop
dec
gs
dec
test
mov
ljmp
push
sub
inc
or
sub
mov
xchg
or
dec
mov
push
and
pop
adc
mov
xor
mov
sbb
mov
aam
inc
daa
daa
lcall
inc
xlat
call
sub
pop
mov
sbb
push
pop
nop
lcall
out
out
les
fldcw
mov
orl
dec
shlb
sahf
enter
mov
addr16
lds
fsubrs
out
push
sub
mov
clc
mov
into
inc
xor
inc
out
call
dec
insb
sub
push
dec
mov
shlb
mov
icebp
cmp
sub
movsl
add
cmp
out
xor
push
dec
ds
adc
jp
sub
enter
sub
sbb
sub
or
push
cmp
or
cmpsb
ds
fldt
adc
pop
test
loop
mov
xor
cvtdq2ps
fcmovne
sub
adc
mov
outsb
aas
mov
jge
fnsave
mov
sub
out
mov
shr
pop
or
mov
pop
addr16
push
dec
call
arpl
ja
sub
dec
sti
out
sub
popf
sub
mov
sub
sbb
sti
sub
sub
mov
pop
sub
xchg
sub
jno
and
insl
ja
xchg
mov
cmp
lret
jge
inc
mov
sbb
in
push
imul
sub
or
mov
sub
adc
inc
or
xor
les
sub
in
and
pushf
sub
mov
mov
sarl
push
popf
int
daa
mov
mov
lods
xor
adc
sub
dec
sub
ret
shll
jg
out
sub
outsb
test
add
inc
cld
cmp
sub
rclb
mov
pop
jbe
sub
mov
fstpt
in
out
sub
popf
pushf
cmp
gs
out
sub
mov
call
adc
cmp
xchg
xchg
mov
mov
push
stos
sub
cmp
mov
sub
int
jo
movb
daa
sub
ret
enter
and
pop
xlat
bound
popf
into
jne
pop
adc
je
xchg
adc
mov
and
jbe
adc
pop
pop
fmull
sub
in
sbb
daa
mov
and
ror
icebp
push
sub
push
inc
dec
add
stos
xor
and
lock
dec
cmpsb
pop
icebp
and
adc
push
pop
xchg
pushf
loopne
out
pop
aaa
sub
xchg
mov
int
stos
paddusb
int3
jle
sub
push
stos
xchg
addr16
cmp
ljmp
xchg
je
stos
sbb
iret
jl
xchg
adc
adc
mov
sub
jecxz
in
sub
aam
loop
sub
addr16
cwtl
sub
jle
xor
jmp
cmc
mov
sub
add
jae
fimull
jecxz
vpmuludq
out
ljmp
jne
inc
push
adc
jp
sub
or
mov
lods
lcall
dec
push
pushf
leave
mov
or
and
shlb
popl
sub
imul
lea
xor
and
mov
xchg
and
mov
or
sbbl
cwtl
ficoml
sbb
sbb
mov
ja
jl
push
sub
mov
push
mov
cltd
pop
lahf
cmp
sub
sub
dec
and
jae
outsb
cmpl
xor
mov
test
pop
jb
jmp
leave
sub
movsl
adc
notl
cmpsl
or
subl
push
sub
adc
sub
xor
in
mov
lock
pop
ret
lds
mov
sub
iret
xor
out
sub
lds
lds
or
in
jns
xor
nop
cmpb
cwtl
ret
jo
lcall
js
or
insl
cmp
and
cmp
mov
push
int3
push
mov
mov
or
sub
lret
test
mov
icebp
shlb
addr16
iret
jmp
fnstenv
sub
dec
pushf
pop
fs
mov
sbb
sub
mov
in
xchg
addl
ret
jo
es
mov
mov
xchg
jg
sub
imul
push
fsubl
mov
nop
pop
or
stos
xor
push
cmp
sub
sub
inc
addl
mov
jo
into
push
sub
mov
mov
sub
or
out
sbb
add
in
inc
scas
scas
xor
pop
dec
add
sub
push
inc
cltd
rolb
ljmp
scas
pop
sti
dec
sub
xor
jne
xchg
add
repnz
sub
inc
mov
cwtl
xchg
or
mov
mov
jecxz
push
mov
rclb
mov
fidivrs
jno
fldt
mov
cmpsb
jg
push
xor
cmp
fcoml
sbb
sub
and
add
mov
ljmp
or
push
fisubrs
sub
mov
and
lds
js
cmp
cmp
iret
add
popa
sub
pop
mov
lret
sub
inc
fbstp
push
pop
dec
xchg
push
out
lods
aad
mov
jecxz
dec
dec
ljmp
in
leave
mov
repz
add
cmovl
cvtps2pi
stc
mov
fsubl
xchg
inc
pop
pop
push
sub
mov
neg
sub
mov
rcll
inc
and
sub
cmp
mov
sub
out
imul
fldcw
jge
dec
xor
jae
pop
test
insb
lds
scas
lret
inc
sub
push
add
ds
mov
push
hlt
scas
stc
mov
adc
pop
pop
test
sub
pushf
xchg
cmpsb
sub
xlat
popf
pop
adc
das
shr
arpl
stos
inc
adc
xchg
mov
jnp
lea
pusha
push
test
mov
lahf
push
ret
shl
mov
xchg
add
cmp
orb
and
das
mov
and
sub
mov
inc
xchg
test
call
test
inc
cmp
mov
push
mov
sub
incl
xchg
je
xchg
std
popa
ret
xor
leave
adc
dec
xor
xchg
insb
xchg
scas
es
aad
sbb
adc
push
mov
cwtl
cli
cltd
mov
adc
aam
int
sbb
and
push
dec
flds
imul
cld
jae
push
xor
hlt
jecxz
leave
and
sahf
pushf
loope
mov
testl
pop
loop
sub
cmp
xor
pop
lods
lahf
lahf
test
fwait
arpl
push
sub
les
int3
sub
divl
cli
sub
cmp
imul
sub
ret
call
or
lea
imull
xor
sahf
adc
mov
xor
sub
sbbb
dec
inc
or
pop
sub
push
cmp
in
out
jmp
imul
jae
mov
leave
push
add
sub
pushf
aaa
mov
or
xor
sub
fdiv
inc
jb
mov
sub
and
jbe
jl
out
push
sbbb
inc
mov
push
push
repz
mov
aam
or
iret
test
sub
es
ret
stos
sub
mov
and
adc
pop
sbb
pop
jmp
sub
pop
aas
lds
or
sub
loopne
fucompp
xchg
and
cmc
stos
in
je
js
pop
mov
call
aaa
mov
daa
sub
clc
sub
aaa
popf
mov
jmp
lea
adc
sbb
ljmp
or
fs
out
shlb
fisubrl
sub
imull
mov
push
sub
dec
in
shrb
stos
jp
movsl
sub
sub
sti
adc
xchg
idiv
sub
nop
or
sub
xor
push
imul
add
jo
pop
push
jae
out
pop
pop
lcall
sbb
add
mov
and
jge
pop
in
lret
sub
jo
ds
push
ret
pusha
sub
xor
dec
icebp
shll
xchg
dec
pop
sbb
decb
jne
ja
sub
and
mov
jno
cld
sub
and
or
outsl
sub
lods
cltd
push
sub
fisubrs
xchg
jno
sbb
and
jl
cmp
sub
sbb
cmp
push
inc
inc
sub
sub
or
out
sub
sti
bound
int3
push
sub
repnz
mov
fiaddl
fildl
daa
jge
fidivs
pop
adc
in
mov
or
pop
fsubrl
rorb
call
test
xor
lcall
movsl
nop
jo
jp
ss
adc
dec
sahf
daa
mov
mov
fnstcw
add
or
add
and
repz
sub
jmp
cmp
ss
xchg
sbb
aam
mov
fsubrl
sub
cmp
push
iret
sub
out
jno
dec
hlt
inc
insb
sub
push
jge
sub
scas
gs
add
xlat
into
daa
pop
cmc
sahf
jbe
insb
sub
or
ret
bound
cmp
xchg
ret
jge
jae
or
sub
pop
or
repnz
outsl
sub
dec
loop
out
jle
push
mov
push
mov
jp
xchg
gs
or
fwait
sub
pop
aam
sti
sub
xor
shl
jnp
sub
gs
add
sub
fmull
or
cld
dec
pop
out
sub
jle
xor
sub
out
or
or
lock
mov
sub
xchg
jecxz
dec
aad
sub
push
pop
sub
or
test
sub
add
or
push
clc
sub
stc
shrb
push
xchg
mov
sbb
xor
pop
rorl
sub
imul
sbb
dec
outsl
add
out
mov
pop
arpl
cmc
nop
cmp
fstpt
out
pop
lds
leave
sub
mov
movsb
in
les
repnz
pushf
ret
pop
cltd
inc
mov
and
push
ror
push
loop
pop
pop
sub
dec
push
ds
mov
add
push
lret
jne
ja
int3
dec
int
mull
xor
in
adc
incb
sub
lcall
lea
xchg
jg
fiadds
iret
aaa
mov
daa
push
sarb
mov
mov
fwait
aam
push
lods
iret
and
sahf
sub
andb
or
jp
pop
pop
gs
inc
out
xchg
sub
popf
inc
aaa
pop
fwait
add
xchg
push
dec
sbb
or
mov
pop
and
sub
pop
int
in
insb
push
testl
inc
ljmp
sub
inc
mov
mov
fistpll
jg
pop
jb
sarb
aam
xchg
arpl
ja
imul
mov
cli
ret
enter
outsl
mov
jns
or
mov
std
jmp
ret
xor
stos
int
stos
or
xchg
sub
xor
push
mov
out
int3
dec
stos
sub
sub
aam
pop
sub
lret
cmp
js
daa
pusha
adc
push
jno
inc
std
jmp
cmp
xor
subl
int
mov
into
sub
outsl
sub
es
fadd
loopne
fdiv
stos
inc
add
sbb
dec
sub
adc
ljmp
and
stos
and
or
jle
loop
cmpsb
loope
mov
dec
cmp
sub
cltd
add
sub
fwait
sub
insl
sub
pusha
or
sbb
bound
push
aas
mov
mov
add
ret
mov
bound
mov
jns
scas
dec
sub
jle
std
fstp
jl
sub
push
dec
stos
dec
out
sub
int3
ja
adc
ljmp
std
lock
mov
mov
and
cmp
daa
mov
pop
adc
sub
or
push
xorl
mov
jmp
je
sub
insl
or
xchg
inc
adc
sub
cmp
subl
and
pop
loope,pn
fildl
cmp
sbb
or
movsl
and
ljmp
das
xchg
xchg
call
rorl
out
mov
xchg
sbb
sub
and
inc
xor
mov
inc
xchg
pop
jg
mov
mov
xchg
jbe
cwtl
lods
int
push
jne
mov
sub
data16
outsb
in
je
inc
dec
pop
insl
pop
mov
pushf
and
mov
cmp
pop
shrb
xchg
cli
mov
out
sub
mov
test
jge
cmp
xchg
ljmp
mov
or
test
ljmp
mov
in
mov
pop
std
push
sub
cmpsl
out
mov
adc
shrl
cmpsb
mov
add
arpl
or
mov
xchg
sbb
out
and
sub
push
lds
shll
cs
xor
aas
sub
jp
arpl
sub
out
and
fistpl
xchg
mov
sub
push
mov
xchg
fimuls
outsb
or
push
jp
cmp
je
push
sub
mov
sub
jne
jno
call
loop
repz
mov
mov
pop
sub
fnstsw
repnz
and
int
dec
popa
or
mov
add
pop
sub
bound
and
repnz
sub
mov
out
push
movl
xchg
cmp
sub
leave
pushf
aad
xor
insb
push
test
sti
int3
and
les
outsl
push
lods
adc
push
imul
lret
das
lods
jne
cmc
mov
mov
jb
stos
in
adc
pop
pop
xchg
inc
test
and
adc
sub
lock
xlat
fmul
es
cli
sub
sbb
mov
test
scas
xchg
sub
pop
jl
inc
sub
add
out
push
sub
insb
cltd
push
xchg
sub
xchg
and
sbb
fldlg2
sub
jmp
inc
cmpsl
dec
pop
hlt
sub
xchg
sub
or
add
jnp
aam
cmp
xor
xchg
lret
rclb
lock
outsb
xlat
enter
sub
jnp
mov
inc
xchg
int3
daa
sub
ljmp
pop
add
jmp
lahf
pop
faddl
mov
or
call
and
shr
ret
xchg
dec
xchg
or
or
inc
sub
je
pop
cmp
fwait
ret
sbb
mov
sub
mov
cmp
lds
sbb
daa
push
mov
daa
lea
add
mov
cld
sub
mov
out
repz
sub
and
scas
fldl
pop
in
lock
inc
dec
pop
and
xor
jp
adc
xchg
mov
icebp
push
sti
lea
and
cmpsl
and
loope
mov
cmp
dec
sub
lods
test
pop
int3
inc
xchg
xchg
jo
add
loopne
and
loop
std
inc
shlb
adc
aas
sub
sbb
dec
jno
mov
daa
gs
and
rorb
cmp
xor
pop
cmpsl
icebp
inc
cmc
xor
pop
push
sub
stos
arpl
dec
sub
push
daa
cwtl
and
cmc
jecxz
inc
sub
and
imul
push
test
iret
jmp
xchg
and
xchg
jno
push
insl
in
inc
sub
add
jge
adc
nop
insl
xor
mov
sub
xor
cs
mov
sub
lret
stos
pop
and
daa
add
pop
cmp
dec
sub
dec
sub
xchg
into
js
sub
lret
lret
sub
mov
mov
mov
sbb
pop
adc
inc
inc
xor
dec
mov
xchg
dec
stos
jge
pop
test
sub
xchg
int
cmpsb
jecxz
mov
jmp
push
leave
outsb
pusha
lahf
arpl
pop
cld
ret
adc
ss
les
sub
sbb
in
xor
ror
mov
aaa
pop
cmp
sub
and
fisubrl
repz
pop
sub
mov
loop
imul
mov
mov
adc
dec
sub
xor
cmp
lock
scas
jo
fwait
sub
pop
jp
mov
into
nop
ljmp
cld
xchg
sub
daa
sti
pop
sub
inc
adc
adc
push
daa
xchg
lea
dec
mov
sub
in
lods
fisubrl
add
mov
push
mov
xor
dec
pop
dec
sub
xchg
jle
pop
sub
push
out
divl
push
loopne
pop
dec
jne
mov
insl
xor
pop
insb
pop
push
cmp
fsubrs
dec
inc
push
mov
test
pop
xor
xor
lahf
sub
shlb
adc
insb
outsb
clc
jg
dec
int3
and
xor
dec
adc
popa
cmc
test
scas
pop
add
mov
add
ljmp
dec
fwait
out
adc
jae
xchg
sti
jecxz
xchg
nop
les
ds
in
bswap
popa
fisttpll
mov
dec
loop
add
test
mov
sub
sbbb
xor
sti
mov
aam
lret
sub
cli
xor
rclb
aad
stos
dec
imul
cs
push
sub
jnp
xor
adc
dec
sub
mov
iret
sub
sub
sub
pop
test
xor
movsl
fbld
pop
sub
std
in
mov
test
sub
mov
mov
jns
out
jb
sub
fwait
mov
aaa
jo
mov
or
int3
nop
mov
adc
xor
xor
push
mov
movsl
cmp
sub
or
fsubrs
or
adc
xchg
xor
adc
or
and
push
aam
ret
jmp
fldcw
and
shrb
pop
push
and
push
popf
insl
nop
mov
out
addr16
sub
xchg
or
pushf
or
cmp
sub
jns
stos
out
pushf
scas
subb
hlt
imul
in
pop
mov
clc
test
out
mov
sub
bnd
sub
sub
xor
in
fs
out
dec
xchg
aad
xor
and
int3
aas
sub
lock
outsl
xchg
sub
es
loop
jp
and
sbb
sti
lcall
mov
mov
out
push
dec
movsl
loope
or
hlt
jmp
leave
sub
xchg
sbbl
push
jo
out
loopne
jle
xor
shl
push
adc
aad
push
cs
lods
in
sbb
add
in
mov
jecxz
sub
out
cltd
add
mov
mov
out
sub
les
pop
dec
dec
arpl
sub
mov
xchg
and
adc
outsb
mov
js
pop
insl
add
out
sbb
sub
push
push
roll
test
lods
adc
push
mov
mov
jno
int
enter
mov
les
push
shrl
jae
inc
jg
cwtl
mov
es
xor
je
inc
bound
push
pop
mov
push
sub
out
addb
sub
sub
lcall
sub
das
push
fldt
inc
mov
add
enter
cmp
fnstenv
fists
xor
mov
inc
dec
ljmp
ja
mov
add
sub
fsubs
cmp
sub
rep
sub
and
or
dec
movb
ds
jg
shrb
loope
int3
subl
cmc
test
hlt
and
mov
shr
adc
int
inc
pop
sub
jge
jne
sub
in
cwtl
add
sub
sahf
mov
sub
or
mulb
or
mov
adcl
jnp
lock
rclb
sub
cld
jl
aad
adc
and
jmp
xor
sbb
ljmp
xchg
mov
pusha
jne
mov
call
xchg
cmp
sub
add
jg
daa
hlt
sbb
jb
push
sub
sbb
jle
sub
mov
out
addl
out
aad
mov
dec
adcl
sub
mov
test
pushf
inc
pop
pop
sub
je
sub
stc
repnz
xor
in
sub
adc
mov
mov
adc
xor
push
sub
popa
mov
or
cmp
add
cmpsl
mov
pop
and
arpl
es
fstpt
mov
jle
sub
push
iret
enter
pushf
add
mov
sub
ret
outsl
pop
sub
push
rcrb
sub
dec
shrb
jne
inc
int
int3
inc
outsl
push
movsb
cwtl
mov
into
adc
pop
adc
cld
popf
das
sub
xor
stc
aad
aas
sub
pushaw
sub
icebp
pop
iret
shrl
mov
and
fcmovb
mov
repnz
push
in
mov
and
dec
mov
das
cmp
pop
sub
lcall
cvtps2pi
int
xchg
jl
fwait
js
enter
xchg
fisubrl
lahf
fs
jne
cltd
or
pop
ja
or
pop
stc
adc
movsl
out
sub
sti
or
int
push
vlddqu
arpl
repnz
pop
xor
mov
cmpsl
push
je
loopne
sub
daa
jmp
cmp
iret
jmp
cmp
lods
and
testl
jmp
ret
push
lcall
clts
or
and
sahf
cmp
xchg
cmc
sub
sub
or
pop
sub
mov
loop
push
xchg
xchg
leave
mov
sub
cwtl
adc
mov
fwait
ljmp
sbb
push
add
adc
xor
enter
sub
mov
cmovs
xor
sub
ret
sub
es
adc
jp
jbe
test
mov
pop
cmp
mov
hlt
mov
cltd
loope
in
cmp
push
repnz
cmpsl
adc
push
sbbl
out
jo
scas
cmp
sub
pop
movsl
push
std
idivb
inc
pop
push
aas
or
pop
sbb
dec
popf
outsl
xor
mov
push
mov
cmpl
ds
add
sub
out
addr16
sub
xchg
add
sub
and
out
cmp
jp
push
push
cs
test
shl
sub
out
push
sub
rcll
scas
sub
dec
xchg
xchg
ret
lods
pop
xor
mov
sub
es
and
int3
pop
fiaddl
xor
mov
bound
sub
lret
mov
jle
xor
xchg
mov
sbb
negb
mov
dec
xor
mov
shr
iret
xor
fwait
sub
popf
xchg
or
xchg
pop
shrb
fists
aam
xor
pop
jg
dec
mov
and
sub
and
jbe
sub
call
lahf
psubsb
cld
stos
sub
cmp
movl
xchg
test
sub
sbb
adc
mov
clc
stc
out
and
cmpsl
fistpll
lahf
mov
mov
out
paddw
inc
sbbl
sub
enter
sub
add
out
xchg
loop
scas
mov
adc
shrb
push
sbb
dec
es
pop
sub
pop
test
mov
sub
inc
stos
sub
cld
fnstenv
sub
cmc
aaa
arpl
mov
sub
adc
loopne
pusha
mov
int3
mov
push
jno
sub
cltd
cmp
sub
push
xor
dec
std
call
dec
out
jle
popa
loopne
test
into
out
mov
sahf
in
xchg
or
xchg
movsb
mov
inc
mov
mov
sub
sub
dec
mov
pop
sub
aaa
loop
ret
sub
repz
sub
insb
xlat
inc
sub
mov
xor
xchg
mov
popa
mov
sub
pop
push
and
add
jle
sub
call
push
lea
jae
ret
hlt
xchg
aad
mov
in
les
mov
xchg
sub
push
sbb
test
cmp
sar
adc
enter
imul
sub
int3
in
arpl
movsb
inc
sub
lods
or
xor
push
imul
pop
xor
shrb
mov
es
addb
push
cmc
adc
sub
dec
or
dec
scas
aaa
mull
int
adc
xchg
dec
decl
in
and
adc
mov
cmp
aaa
xor
jb
call
dec
cmp
mov
pop
inc
mov
arpl
sbb
sub
movsl
mov
sub
lret
mov
loope
mov
adc
xchg
mov
xor
cs
pop
or
pushf
int
dec
xchg
xor
mov
decl
and
testl
push
xchg
sub
nop
push
inc
sub
dec
enter
dec
ficompl
lcall
je
or
pop
and
cmp
xlat
lret
sub
xor
adc
rorl
shrb
mov
cmpsl
mov
lcall
mov
sbb
jnp
sbb
lahf
and
iret
xor
ficoms
dec
add
and
sub
fsubs
sbb
mov
dec
dec
xor
stos
push
xchg
dec
sub
xchg
sti
popa
cmp
mov
and
add
pushf
loope
movsl
nop
sub
push
divl
ret
jbe
orl
scas
xchg
test
mov
pop
add
push
and
adc
sub
push
aas
pop
pop
xchg
aad
adc
shlb
and
and
add
jge
sbb
push
jns
cs
sub
inc
repnz
ja
jl
or
and
cwtl
loopne
inc
popa
jae
cmc
mov
push
rorb
pop
adc
sub
pushf
mov
sbb
and
push
cli
ficompl
enter
pop
mov
mov
hlt
xchg
push
xor
xchg
sub
fcoml
sbb
sbb
lret
sub
icebp
shl
mov
int
daa
popf
cs
fidivrs
rcrb
push
push
mov
cmpsl
xchg
call
shll
adc
fsubp
repz
mov
ret
xor
xchg
sub
mov
sahf
jg
cld
cmp
cmp
in
cmc
stc
sub
or
mov
push
negl
outsb
std
les
int3
pop
sub
push
lds
mov
sub
adc
pop
fbld
and
mov
paddsb
and
sahf
ret
sub
push
and
jge
and
xchg
push
sub
cli
and
dec
scas
sub
mov
dec
jmp
xor
pushf
scas
jmp
mov
mov
aad
into
in
movsl
inc
cmpsb
pop
xlat
sub
dec
adc
sub
repnz
enter
sbb
scas
das
adc
sub
and
enter
imul
sub
popl
sub
adc
in
sub
pop
adc
and
jnp
jmp
sub
push
in
out
sub
rorl
xchg
push
or
sub
jo
push
in
jb
sub
push
popa
cvtps2pi
mov
mov
sub
inc
je
jecxz
push
ret
add
jmp
dec
adc
sub
es
inc
push
xor
mov
jns
sub
js
frstor
mov
stc
add
sub
mov
cmp
dec
xor
jo
jae
pop
cmp
ja
daa
out
mov
gs
je
es
mov
xchg
xchg
aad
cmp
mov
lods
test
sub
in
push
jbe
incb
sub
ss
movsb
sub
enter
adc
lods
daa
roll
jmp
fnsave
adc
lret
sub
xchg
sub
mov
or
cmp
das
adc
ret
sub
andb
out
sub
insb
mov
jb
popf
in
clc
aaa
arpl
ss
cltd
icebp
cmp
test
add
sti
add
inc
sub
pop
aaa
or
adc
inc
cmpsl
pop
cmc
adc
stos
pop
lods
pop
adc
pop
sahf
sub
push
movsl
adc
sahf
repnz
or
push
mov
sub
out
adc
or
pop
fcompl
mov
fs
daa
aad
push
mov
jno
push
xlat
mov
inc
adc
sub
outsb
jns
nop
mov
mov
popa
repz
sub
jmp
in
sub
xchg
imul
adc
and
push
sub
stos
push
data16
andb
sub
xor
push
inc
mov
mov
clc
fs
addr16
sub
mov
sub
and
nop
out
pop
sub
sbb
adc
in
jecxz
or
xor
inc
out
mov
pop
es
iret
and
stos
pop
sbb
push
add
sub
inc
xchg
dec
sub
mov
in
or
inc
pop
cmp
push
loopne
mov
sti
xor
and
pop
arpl
cmpsb
out
negb
pop
addl
std
in
jp
adc
jecxz
push
aas
andl
and
mov
xchg
outsb
mov
shrb
pushf
in
add
fstp
and
loopne
add
and
add
ja
sub
xchg
fdiv
sub
pop
sarb
sbb
sub
pop
out
dec
sub
jno
dec
sub
mov
xchg
sub
sti
mov
lods
jno
sbb
push
out
mov
loope
xchg
imul
insl
stos
cli
adc
jp
sbb
sub
dec
dec
inc
int3
bound
add
sub
jl
add
jb
notb
jmp
sub
js
push
mov
push
call
sar
push
popf
sbb
aas
pop
ja
scas
xor
mov
fdivs
inc
cli
sub
lods
mov
xor
pop
fucomi
sti
jbe
adc
dec
daa
mov
repz
in
testl
outsb
xorl
lea
dec
sbb
fldt
imul
pop
mov
xor
and
adc
std
inc
js
dec
and
call
push
outsb
cmp
adc
andl
sub
or
inc
movsl
sub
cmp
addb
pop
ds
xchg
shrl
fstpl
mov
jle
into
fisttpl
cmp
sub
jns
int3
mov
aad
inc
xor
mov
jb
jle
das
cwtl
mov
pop
and
mov
les
int
push
out
int3
add
add
inc
ret
daa
clc
and
aad
scas
jle
mov
xchg
pop
mov
out
pop
cli
out
mov
aas
sub
mov
and
adc
in
push
call
movsb
push
push
xchg
xor
test
call
loop
je
aaa
sub
lahf
imul
cmp
popa
jnp
fldl
xchg
sbb
cmpsl
sub
sub
mov
idivb
daa
mov
icebp
or
fldenv
sub
pop
aad
push
dec
pop
sub
fisttpl
sub
mov
xchg
rcl
sbb
pop
sub
or
xor
add
lret
pop
gs
loop
cmp
sbb
sub
push
mov
xchg
jae
push
jbe
jne
mov
cwtl
int3
pop
ficoms
hlt
call
pop
mov
cmc
and
adc
mov
push
divl
mov
pop
mov
xor
inc
imul
ficompl
pop
sub
aad
sub
and
stos
jl
sub
mov
sbb
ret
pop
xor
or
mov
ds
sub
dec
pushf
in
lds
mov
test
mov
mov
inc
add
sub
cli
movsl
xor
fcomps
inc
push
sub
sbb
jmp
mov
mov
pop
push
adcb
daa
jmp
stos
daa
sub
mov
mov
jbe
xor
sub
inc
and
mov
pusha
nop
inc
fsubrl
xor
cld
or
push
stos
push
cmp
mul
fmul
arpl
and
inc
stos
add
sub
mov
inc
imul
and
and
xchg
test
adc
jae
sbb
fcmovbe
xchg
sub
movb
sub
dec
xchg
sub
or
repz
jno
xchg
fsubrs
jge
jmp
cli
xchg
sub
push
jp
dec
sub
pop
ljmp
sub
xchg
push
xor
inc
or
add
sarl
push
in
ds
cmpsl
call
mov
xlat
xorb
lcall
mov
sub
enter
and
repnz
lret
sbb
and
pop
adc
mov
ror
push
inc
in
mov
cmp
daa
adc
push
enter
nop
int3
pop
sub
lahf
xchg
sub
stos
push
fadd
pop
or
nop
sbb
js
out
or
inc
and
sub
or
mov
push
and
and
or
xor
pop
mov
gs
xchg
icebp
lcall
inc
mov
andl
jmp
jb
bound
sub
adc
jno
sub
or
dec
fidivrs
mov
xchg
int
dec
push
sub
push
and
or
add
mov
fildl
popf
daa
sub
fstps
ja
jbe
pop
xor
test
and
mov
pop
sub
mov
daa
int
cmpsb
fwait
movsb
mov
sub
ss
fldt
lods
fcomps
sahf
mov
jmp
mov
sub
adc
rclb
imulb
popa
roll
xchg
mov
sub
adc
lods
jge
adc
subb
cmp
js
sub
daa
add
push
dec
or
mov
scas
in
cmp
sbb
fnsave
push
sub
test
inc
outsl
out
sub
adc
cld
lcall
fbld
push
cmpsl
inc
jns
sub
dec
das
push
sub
popa
pusha
adc
sub
mov
fldcw
push
daa
fsubl
sub
jnp
out
pushf
imulb
repnz
mov
xchg
sub
and
sbb
sub
pop
or
in
repnz
cmp
rdpmc
mov
adc
and
aam
divl
mov
repnz
sub
xlat
stc
or
push
adc
dec
rol
jnp
in
xchg
sbb
iret
das
outsb
mov
pop
pop
popf
mov
lea
sub
sub
mov
decb
add
sbb
divb
ja
xchg
movl
adc
mov
mov
inc
push
jle
and
adc
mov
push
stc
dec
push
sub
fs
dec
sbb
dec
jl
movsb
fisubrl
jne
mov
imulb
sub
cmp
repnz
sbb
add
push
push
sub
xor
shl
add
lahf
mov
iret
cmc
mov
sub
sub
fisubl
popf
push
repnz
mov
es
cmp
scas
or
cli
in
lods
mov
dec
mov
mov
xor
add
fsubs
fwait
sub
jge
std
dec
mov
cmp
mov
mov
xchg
fisubs
jb
ds
mov
mov
cmpsb
clc
out
or
and
mov
fs
dec
adc
xor
fwait
mov
das
sub
inc
mov
aam
push
push
daa
or
loope
imul
mov
scas
jmp
icebp
mov
iret
and
sarb
lahf
int3
cmc
nop
push
jnp
jmp
and
add
ljmp
mov
loopne
dec
sub
fistl
pop
sbb
xor
sub
lods
lcallw
mov
adc
call
sbb
cld
and
ficomps
mov
cli
mov
fs
sub
sub
ljmp
fdivrs
sbb
jle
push
adc
inc
xchg
xchg
dec
and
ljmp
add
sub
lahf
or
lret
loope
cmpsb
xchg
cmp
push
or
mov
mov
sub
data16
pop
pop
ror
jo
pop
jne
inc
jge
sub
or
ds
fisubrl
dec
push
xor
ss
rcrl
adc
push
pop
sub
jl
out
cli
notb
int
sbb
into
add
shrl
inc
icebp
xchg
sub
cmp
mov
xor
test
out
jae
shlb
cwtl
sub
loop
in
sahf
push
xor
or
or
add
lret
sub
xchg
ret
dec
out
sahf
lods
sub
mov
sub
stc
sbb
ficoml
pop
stos
lea
mov
add
fmulp
js
imul
jp
das
fsubrs
icebp
aaa
inc
testb
mov
cs
sub
cmpsl
out
sub
aas
xchg
add
push
jge
popf
xor
and
push
fildll
mov
adc
mov
lods
jle
adc
adc
sub
int
sub
or
mov
xchg
outsb
jno
loop
sti
ljmp
ss
mov
push
in
mov
pushf
inc
shll
cmp
xor
push
jge
sub
inc
sub
mov
in
fldl
sub
sbb
pusha
in
mov
sub
pop
sbb
or
sub
ja
push
cmp
jnp
insl
test
sub
mov
ja
into
loopne
mov
cld
fs
or
mov
cmpsb
xlat
sbb
andl
lds
push
mov
lods
sub
mov
addl
dec
in
pop
add
dec
adc
cli
mov
pop
mov
jnp
enter
mov
stos
ficomps
or
test
in
xchg
mov
test
inc
pop
and
jb
je
dec
fbld
pushf
cs
sub
pop
mov
cmp
test
sbb
xor
cwtl
push
fs
fimuls
cmpsl
pop
add
enter
scas
shrl
out
ljmp
jae
movl
jbe
pop
rclb
xor
and
hlt
push
adcb
shll
lds
aaa
dec
jmp
cli
lods
or
sub
push
lea
jne
sub
add
pop
cli
jg
inc
adc
sub
int3
xor
pop
rolb
push
mov
lods
push
lea
mov
mov
or
cld
push
icebp
sub
adc
je
fimull
sub
ret
sbb
dec
daa
mov
out
xchg
jmp
jbe
into
dec
mov
xchg
cltd
or
mov
and
adcb
push
pop
sub
dec
fisttpll
xorl
loop
pushf
sub
jb
fisubrs
sub
movsl
dec
imul
dec
sub
lahf
popf
push
sub
lods
jbe
jge
dec
sub
mov
mov
pop
xor
sbb
dec
shrl
ljmp
mov
jmp
jne
sub
and
in
stos
nop
je
mov
ret
in
adc
stos
and
jp
push
nop
fucom
dec
and
push
mov
and
std
scas
sub
imul
aam
push
sub
cs
clc
xor
xchg
lods
xchg
sub
sbb
xor
dec
cmp
cmp
mov
cmc
push
sub
sub
outsl
sub
fadds
outsb
das
push
dec
repnz
push
sub
jp
fidivs
sub
ljmp
push
sub
sbb
imul
xchg
push
sub
cmpsl
pop
sub
adc
xor
imul
data16
movsb
arpl
and
cltd
loopne
into
out
les
jg
je
repnz
ret
cmp
mov
jnp
subb
cmp
cmpsb
push
das
push
jno
sub
sbb
mov
ret
scas
out
pop
sub
fcomps
mov
dec
out
or
cld
mov
ds
outsb
adc
sbb
das
test
int3
lds
push
sbb
jno
out
and
loop
mov
push
pop
pop
push
loope
sub
roll
lds
mov
es
fildll
jns
xchg
sub
out
sbb
cmpsb
lret
cld
dec
sub
jl
mov
dec
push
dec
sub
in
leave
pop
cmp
daa
call
sub
adc
jmp
sub
mov
inc
xorl
or
dec
sub
incl
aam
sub
jp
jbe,pt
pop
test
int
outsb
adc
inc
repz
mov
ficomps
sbb
test
sub
mov
push
pusha
sub
lcall
mov
mov
cmp
jge
lods
out
sbb
inc
inc
jbe
or
sub
jne
dec
in
cmp
ljmp
scas
int3
ljmp
sub
mov
and
mov
test
pop
loop
lret
aad
mov
into
or
sub
push
cld
movl
int3
data16
add
sub
mov
das
pop
ss
xchg
xchg
or
js
mov
in
or
add
pop
lds
adc
test
daa
fcmovnbe
dec
sub
fs
sub
jb
mov
xchg
add
fsubrl
and
push
jb
or
adc
outsl
stos
cs
add
out
lret
add
xor
pop
pop
je
repnz
lahf
cltd
mov
stc
jge
push
add
cmp
mov
sub
inc
fisttpl
mov
xor
rcl
lds
add
sub
push
imul
sub
xlat
sub
xor
lea
fimull
xchg
repz
jecxz
sbb
mov
pushf
xchg
jo
mov
imul
sub
dec
push
in
cmp
rcr
popf
push
in
mov
jg
jns
push
movsb
and
sub
and
in
sahf
cltd
sti
int
ret
inc
lcall
in
xor
sbb
mov
add
push
push
fdivrp
pop
fadd
sbb
sub
sub
decb
cld
sub
mov
xchg
and
fmuls
sbb
mov
cltd
adc
mov
add
sub
mov
lods
xchg
pop
test
frstor
and
xlat
xchg
clc
sub
xor
je
cld
mov
or
mov
aam
inc
xchg
jns
mov
xor
push
in
mov
std
orl
lret
out
aam
dec
dec
daa
cld
mov
and
jmp
sbb
js
mov
and
dec
lock
add
in
ret
loop
sub
xor
push
or
sub
sub
mov
loope
pop
addl
daa
inc
xor
pop
lods
sub
imul
jb
out
dec
mov
clc
dec
sub
test
sub
inc
ljmp
sub
addl
mov
xor
in
aad
xchg
xor
es
mov
fsubrs
xchg
stos
cmc
dec
sub
test
scas
jp
mov
jne
ljmp
enter
aam
mov
orb
loope
sbb
cmp
add
mov
add
mov
xchg
lahf
jo
int
sub
pop
call
cmp
roll
sub
sub
sbb
sub
mov
icebp
sub
mov
rorb
shrl
fs
in
rcr
sub
aas
sub
pop
cs
int
bound
out
or
sub
aad
xchg
fldl
and
cmpsb
xchg
mov
ds
push
enter
movsb
xchg
xchg
adc
or
pop
mov
dec
mov
add
stc
sub
lahf
lret
sbb
pop
fstpl
mov
sub
push
xor
lret
push
sub
add
loop
fisubs
insl
and
dec
es
mov
mov
pop
test
mov
inc
sbb
pushf
mov
mov
cld
sub
add
xor
xor
inc
insl
dec
dec
push
add
push
repz
sub
and
pop
and
in
lods
xchg
jno
sub
sub
jg
inc
sub
push
adc
sub
enter
sub
repz
pxor
cmp
adc
repz
xor
inc
xor
push
shlb
sbb
jae
imul
stos
adc
xor
gs
shrl
insl
lea
sub
or
jne
lds
jp
fnstenv
sub
pushf
pop
sub
adc
mov
sub
fistl
sub
call
aam
mov
xchg
xchg
mov
pusha
sub
adc
pop
loopne
outsl
sub
push
dec
add
cmp
mov
push
leave
or
sub
inc
out
xchg
sub
mov
cs
pop
xchg
sub
out
out
xchg
in
fs
cmp
push
in
jns
push
pushf
cmpl
stos
daa
pop
sbb
adc
push
lods
lret
lahf
xor
rorb
adc
sub
push
ret
mov
xor
mov
mov
stos
xor
dec
enter
pop
jecxz
inc
add
icebp
fstps
inc
adc
movsb
insb
sub
shll
xchg
xchg
jecxz
inc
sub
dec
pushf
mov
mov
push
jne
sub
cmc
cmp
sub
push
lods
cld
ljmp
push
repz
sbb
int3
cld
out
mulb
lock
stos
adc
cmpsl
or
leave
and
push
sub
pushf
lock
lea
jle
cs
iret
out
mov
sub
int
push
jmp
pusha
fidivrl
cld
cmp
dec
popf
andb
sbb
push
jl
jnp
mov
cmp
ja
jae
sub
cmpsb
mov
in
add
fwait
je
sub
int3
dec
ret
jb
test
mov
aad
ret
xchg
cmp
add
test
push
and
sub
xlat
sbb
jmp
push
fimuls
aam
sub
test
out
sub
repnz
xlat
rcrb
or
inc
sub
inc
and
push
in
sub
sbb
jmp
sub
jl
mov
nop
or
scas
arpl
sub
inc
loop
push
sub
lods
and
xorb
and
imul
call
mov
arpl
mov
addr16
xor
rcrl
fidivs
subl
sub
xor
sub
cld
xor
add
dec
xchg
fsubrs
adc
dec
dec
sub
inc
orb
xchg
pop
xchg
dec
ljmp
inc
sub
lock
xor
pop
push
leave
and
cltd
cmpl
and
xchg
dec
mov
stos
sub
jo
mov
ret
push
jg
loop
xchg
sbb
lret
pusha
lcall
jmp
movsb
sarb
xor
mov
movsl
mov
shlb
pop
sub
xchg
cmp
icebp
or
xor
xchg
lods
sub
xchg
sub
sarb
adc
sbb
mov
sub
pop
push
adc
sub
rolb
push
inc
pop
jne
in
sub
lret
mov
mov
push
sub
mov
inc
push
sub
adc
adc
sub
mov
sub
adc
push
add
or
mov
and
js
or
push
call
mov
sub
sti
xor
jmp
xor
jno
repnz
or
xchg
ret
jg
sub
jmp
mov
lds
mov
repz
pusha
sub
inc
mov
xor
lods
arpl
sbb
mov
sub
ds
sub
sub
cmpsl
mov
roll
sub
and
jge
aaa
push
xchg
popa
lods
sub
rol
js
sub
subl
in
push
sub
out
push
shl
popf
cld
scas
shrl
cmp
add
sub
ret
jmp
stos
int
xchg
mov
cmp
aaa
sbb
inc
es
and
xchg
xor
jecxz
xchg
mov
rcll
adc
push
add
lock
shl
cmp
sub
and
aam
lock
inc
scas
in
inc
sub
xchg
int
sbb
into
or
in
dec
dec
cmp
sub
sub
sub
ret
jns
imul
ds
sub
hlt
add
scas
sub
es
lock
add
int
icebp
xchg
xor
popa
ja
inc
mov
out
dec
lret
sub
cld
sbb
add
adc
sub
dec
int
insb
sub
jae
xlat
jbe
xchg
out
sub
stos
rcrb
and
xor
jecxz
or
cmp
in
mov
stos
lods
xorl
push
into
push
rcrb
jne
sub
push
shld
hlt
cli
pop
call
pop
push
imul
call
sub
insb
es
mov
xchg
cmp
mov
daa
cmp
sub
repnz
scas
sub
and
xchg
sbb
jl
pop
testb
int
and
mov
sub
movsb
cwtl
add
mov
push
aaa
xchg
sub
int3
lds
pop
fisubl
mov
loop
mov
and
test
frstor
cmp
cmp
adc
push
arpl
sub
lahf
aas
aam
xor
cwtl
daa
scas
pop
and
or
cmp
mov
inc
sub
arpl
das
jns
mov
lods
into
jmp
inc
frstor
inc
and
and
sub
sarb
mov
jnp
jno
inc
subb
mov
mov
lret
xchg
push
lds
and
icebp
addr16
inc
std
mov
jbe
sub
xchg
subl
lcall
aad
add
sub
fcomp
sbb
dec
xchg
sub
ss
ja
xchg
imul
xor
mov
mov
or
loope
insb
sub
push
mov
xchg
rol
scas
xchg
les
cld
sub
xor
jo
jge
sbb
lcall
ja
sub
dec
push
aas
rorb
sbb
cmp
inc
arpl
pop
xchg
sarb
scas
subl
sub
stos
pop
and
mov
mov
sub
inc
out
inc
and
lea
mov
xchg
cmp
lret
or
xor
push
push
sub
test
cs
push
enter
push
ljmp
clc
insl
xor
push
push
mov
jl
xor
sahf
sub
jmp
mov
int
aaa
sub
aam
ficoms
shl
xor
xchg
ljmp
js
and
inc
cmp
in
pop
rorl
jb
popf
push
sub
sub
in
inc
xor
add
jg
int3
dec
pop
mov
dec
pop
jbe
mov
mov
repz
fsubs
shrl
fnstenv
jae
adcl
dec
or
das
sub
sub
sarb
pusha
xchg
ljmp
in
rorb
cltd
jp
sbb
mov
xchg
addr16
sub
lahf
loop
sahf
adc
fs
outsb
or
push
sub
and
ja
pop
push
fiadds
mov
pop
arpl
outsl
or
cltd
sub
cmpsb
push
leave
push
dec
cld
addb
arpl
dec
xchg
inc
inc
or
sbb
sub
dec
testl
mov
int3
xchg
pop
sub
bound
movsb
inc
in
test
aas
in
dec
mov
pop
xlat
cmpb
xor
out
sub
mov
xchg
lret
cmp
mov
hlt
sub
xchg
dec
mov
insb
cmp
pusha
into
push
cmp
add
mov
repz
pop
inc
sbb
pop
ret
mov
sub
push
stc
xor
sub
insb
pushf
loop
fidivrl
mov
sbb
sub
cmp
mov
not
sub
or
sub
insl
cmc
jb
adc
into
cs
and
sub
xchg
pop
pushf
jecxz
aaa
xchg
icebp
iret
adc
repz
mov
pop
jbe
sub
pop
cmp
xchg
fs
lods
stos
sub
orb
pop
repz
jo
outsl
int3
test
push
and
xor
test
jnp
or
pop
shrb
xchg
out
sub
out
sbb
iret
cwtl
call
jno
push
scas
push
adc
in
sti
loop
bnd
add
and
push
aaa
fisttpll
in
and
insb
mov
stos
adc
mov
sub
in
fwait
loope
xchg
data16
push
dec
stos
test
test
sub
cmp
aam
leave
mov
in
mov
sub
mov
inc
sub
popf
or
xor
mov
ret
mov
or
std
aam
cmp
jno
xor
repz
jo
mov
loop
cmp
mov
sbb
nop
adc
sub
add
or
sub
mov
mov
push
cmp
xchg
inc
cs
int
sub
sbb
sbb
pop
loopne
push
imul
pusha
push
mov
clc
pop
js
mov
add
lods
sbb
int3
mov
mov
cs
cwtl
ja
aad
xlat
mov
sub
subb
and
xor
lcall
int3
es
stos
adc
lods
sub
out
pop
ljmp
repnz
xchg
pop
pop
and
aaa
or
and
or
pop
jl
push
xor
repz
jecxz
adc
sub
in
sub
rclb
std
leave
sub
inc
adc
sub
mov
xchg
shrb
mov
jne
gs
cmp
clc
pop
and
cmp
dec
add
push
xor
std
icebp
aad
push
pop
xchg
in
pop
add
adc
lahf
rolb
sti
out
sub
rcrb
hlt
cwtl
and
cmp
or
jno
out
mov
push
incl
jae
push
lds
xchg
data16
mov
xchg
shrb
enter
mov
decb
scas
sub
insl
jno
xchg
sub
sbb
mov
adc
fcoms
scas
adc
and
mov
xchg
add
add
ja
imulb
cmp
inc
and
cs
dec
js
mov
and
mov
jo
rcrb
mov
mov
sub
jne
xor
xor
mov
int3
lea
sub
sahf
mov
insb
sub
lret
sub
pushf
repz
sub
call
outsb
mov
jp
fsts
jmp
sub
outsl
sbb
ds
xchg
lahf
pop
sub
adc
mov
push
out
daa
decl
inc
sub
je
aam
sbb
sub
sub
or
ljmp
dec
scas
out
loop
or
mov
sub
sti
inc
adcl
xor
add
sahf
jl
movsb
pop
jo
push
outsl
mov
sub
fwait
cmpsb
pop
test
xchg
adc
in
arpl
pusha
fisttpl
sub
adc
das
rcrl
xchg
pusha
and
sub
icebp
lret
xchg
and
in
xlat
xchg
daa
js
pop
gs
lret
sub
add
stos
jb
adc
jno
mov
xchg
cmp
cmp
orl
cmp
mov
jl
test
jmp
and
or
ret
mov
stc
xchg
adc
insl
stos
insb
mov
loope
sti
sbb
xor
pop
push
xor
mov
loope
xchg
cmpsl
sub
and
leave
push
std
pop
jg
dec
mov
out
sbb
xchg
xchg
mov
sub
les
xrstor
mov
jnp
mov
sub
add
ret
push
andb
lods
outsl
sub
leave
jmp
xor
cmp
int3
lds
fdivr
xchg
sub
imul
ret
lods
push
fistpl
mov
ss
dec
pop
mov
iret
mov
mov
in
push
imull
push
test
in
dec
int
and
jne
mov
cld
and
mov
aam
icebp
cltd
mov
or
mov
add
outsb
adc
into
dec
daa
dec
loop
push
sub
mov
pop
insb
movsl
loope
or
arpl
push
daa
lret
sarb
aas
or
dec
and
loop
inc
sub
in
data16
int
mov
sub
out
lcall
rcl
and
dec
daa
sub
sub
adc
push
por
call
sub
lcall
cmp
mov
imul
mov
or
or
out
sbb
sub
stos
pop
pop
jne
addb
fs
sub
imul
das
lret
jle
movsb
dec
sub
sahf
adc
sub
xor
pusha
sub
in
andl
sbb
mov
in
sub
and
mov
enter
pop
mov
push
xor
mov
xlat
and
sub
sti
push
sub
xchg
or
popf
loope
sub
arpl
rcrb
cmpsl
xorb
push
repnz
pop
xor
sub
stos
ss
xlat
pop
lea
daa
adc
or
mov
aas
jnp
pop
ret
jae
xor
out
mov
mov
add
and
push
push
and
push
mov
frstor
movsb
outsb
jg
xchg
sub
xorl
sub
lret
fldcw
jnp
or
adc
or
cmpsb
sbb
sub
jbe
jb
lret
test
adc
xchg
outsb
fdivp
sub
sbb
dec
enter
arpl
sub
mov
and
sbb
inc
aaa
loop
sbb
jl
cmpsl
mov
ja
mov
adc
out
push
mov
sub
inc
add
imul
dec
js
mov
stos
call
shll
dec
ret
xchg
pop
pop
sub
dec
aad
xor
push
dec
into
sbb
pop
push
fwait
sbb
int
jnp
loop
jns
repz
iret
movnti
cmpsb
outsb
inc
xchg
int3
cmp
or
ss
sub
jg
movsb
jl
fwait
xchg
sub
sub
and
sbb
pop
sub
cmp
cmp
xor
sub
imul
rcrb
sar
mov
scas
sub
sub
cmp
jl
popf
push
int3
fsubrs
test
pop
nop
jmp
popa
into
lock
mov
imul
pop
fsubl
jle
inc
jmp
xchg
das
pop
adcl
push
mov
inc
jns
aam
jmp
mov
hlt
jo
lods
sub
and
push
and
xchg
sbb
arpl
int
xchg
push
sub
es
or
in
jge
cmp
push
sub
mov
test
mov
cmp
ret
push
daa
dec
sub
popa
xchg
sbb
push
dec
mov
cmp
int3
int
xor
call
pop
mov
push
jecxz
mov
in
fcomps
sub
fnstenv
out
sub
dec
sti
push
call
shll
mov
xor
jecxz
push
les
mov
or
push
xchg
sbb
insb
sub
pop
sub
lods
sbb
in
cmpb
sub
push
cld
ss
int3
sbb
lcall
adc
or
adcb
push
pop
dec
adc
mov
sub
mov
xchg
iret
mov
sub
pop
and
fcmovu
xchg
arpl
lcall
aas
and
adcl
push
in
jnp
dec
lds
push
xchg
mov
movsl
push
xor
fwait
adc
sub
lcall
test
mov
jno
rolb
jb
in
leave
mov
mov
pushf
jp
imull
movsb
stos
sub
push
repz
push
sub
xor
daa
mov
lcall
ja
pushf
aam
imul
fcomi
sub
and
cmp
jno
xorl
mov
inc
push
jns
sub
or
jmp
ret
mov
out
sub
pop
jle
loopne
sub
in
out
push
dec
sub
std
add
pop
int3
push
push
dec
mov
call
sub
adc
popf
flds
push
int
sbb
cmp
inc
daa
and
lahf
hlt
fs
fnstenv
push
sub
sub
sub
inc
fcoms
xchg
sub
dec
aaa
sub
inc
jp
jle
lahf
xchg
pushl
ljmp
stc
mov
int
and
or
xchg
xchg
cmp
sub
test
cmpsb
sub
fnstenv
inc
sub
cmp
ja
js
ss
and
jmp
sub
cmpb
cli
and
int
dec
add
fstps
sub
jno
aam
adc
mov
push
inc
cwtl
sbb
cmpb
dec
scas
int
push
sub
loop
xorb
ror
pop
hlt
cwtl
adc
xchg
or
sbbl
nop
jno
fisubl
movsl
sub
xchg
imul
push
jecxz
cmp
mov
pop
fsubs
and
sbb
insl
and
xor
fs
sub
loopne
mov
cmp
movsb
mov
xchg
lret
xor
cmpsl
xchg
push
cltd
sub
test
push
cld
int3
dec
out
dec
mov
dec
js
shrl
popl
mov
push
popf
out
and
pop
cwtl
cli
out
mov
xor
sub
dec
adc
push
cmpsl
jg,pn
fdiv
adc
jbe
les
int
sub
dec
repz
sub
xor
outsb
push
bound
sub
jge
mov
mov
sbb
mov
lods
shrb
push
mov
sub
ret
xor
out
sub
inc
sbb
insb
fnstcw
fmul
xchg
sub
jae
sub
out
dec
scas
pop
popf
mov
aad
mov
loope
adc
cmc
xor
cs
icebp
test
call
fcomps
mov
sbb
cld
sub
mov
mulb
rcll
cltd
inc
xor
jo
das
rcl
xchg
subb
mov
pop
xchg
adcl
pop
and
loop
popf
pop
hlt
imull
js
push
sub
ds
push
jge
mov
fisttps
adc
mov
or
push
movsl
rcrl
aam
std
mov
test
mov
sub
clc
sub
inc
ret
scas
ds
or
sub
pop
xchg
adc
insb
adc
jnp
push
mov
sbb
mov
mov
popa
sbb
mov
dec
es
sahf
add
add
sub
out
or
add
cmp
lea
jecxz
addr16
out
subl
in
push
adc
push
loop
lods
cltd
cmp
mov
pop
lods
and
pop
mov
xchg
mov
sub
movsl
pop
out
movsb
and
clc
test
mov
fiaddl
cltd
inc
leave
or
pop
push
or
sub
lods
data16
cld
sub
movsl
iret
mov
in
je
sub
push
outsb
rcr
sub
add
mov
inc
add
in
enter
fists
sbb
in
sub
daa
and
mov
repnz
fdiv
mov
add
sub
pop
sub
adc
sub
lret
jmp
aad
inc
ljmp
push
mov
add
add
stos
es
test
mov
fcompl
push
stos
aam
iret
push
push
daa
ret
mov
xchg
sub
pop
push
and
xor
xor
lds
sub
push
stos
mov
sub
in
int3
lcall
cmp
add
inc
std
cmp
rcll
mov
test
sub
imul
add
mul
insb
and
lods
mov
sub
mov
rol
inc
cwtl
cmpb
aas
dec
sub
adc
mov
sub
sub
sub
xchg
sub
fdivrs
pop
fisubl
mov
lods
xchg
pop
and
jns
ljmp
push
notb
push
mov
dec
add
dec
xor
and
fcom
cmpsl
jbe
into
addr16
sub
popf
mov
and
and
inc
push
sub
push
aas
icebp
add
sbb
imul
sub
cmp
mov
xor
imul
icebp
push
push
fnstenv
pop
jp
call
xchg
push
sub
push
mov
jle
aas
mov
pop
xchg
adc
push
lea
mov
cmp
lods
test
fcmove
fldl
lock
push
sub
inc
xor
incb
sub
pop
cmove
gs
sub
dec
hlt
mov
cmp
push
test
jbe
idivb
ret
mov
xor
sub
ss
sbb
shrl
pop
mov
sbb
pop
sub
negl
xchg
ret
mov
jg
mov
pop
jmp
int
mov
das
repz
ds
xchg
xadd
jb
ss
notl
frstor
adc
and
sbb
mov
lds
hlt
mov
rcrb
and
sub
dec
rcl
xchg
sub
xor
fs
mov
lret
sub
jp
test
andb
jne
sub
scas
push
or
sbbb
push
movsl
sub
push
cli
aam
sub
test
xor
sub
into
movsl
sub
mov
pop
adc
lret
cmp
stc
sub
mov
inc
fisubrl
and
xchg
ficompl
loope
stc
shll
test
xchg
out
sub
hlt
gs
pop
cli
cmp
clc
cmpsl
xchg
or
mov
push
das
xchg
jb
inc
sub
or
in
adc
sbb
out
jae
test
xlat
sub
mov
sub
ret
fimull
clc
and
xchg
cmp
mov
in
aaa
sub
orb
shl
mov
sahf
cmpsb
mov
cmpsl
lahf
cltd
sub
fldcw
and
mov
mov
or
test
int
xchg
mov
shll
xchg
xor
cmc
sbb
sub
loop
out
int
rep
sub
lods
sub
out
sbb
inc
jne
and
add
gs
movsb
sub
xchg
xor
je
loop
test
xor
pop
test
sub
data16
xchg
iret
mov
sub
mov
fiaddl
sub
mov
cli
and
leave
stos
mov
sub
lods
ret
cltd
lret
mov
or
adc
std
jmp
subb
xchg
test
mov
lahf
sub
inc
jmp
sbb
jl
test
addb
sahf
sub
adc
pop
aad
pop
mov
mov
jns
mov
aam
cmp
xlat
pop
add
jecxz
pop
push
int3
lret
jmp
sub
inc
push
jl
sub
jns
stos
sub
nop
xor
test
mov
and
lcall
xchg
xor
sub
cmp
add
push
jp
sbb
subb
shrb
sub
cld
dec
mov
clc
divl
adc
call
outsb
lret
sbb
and
mov
push
jne
mov
leave
repnz
sub
pop
push
sub
sub
mov
cmc
jl
sub
popa
dec
scas
les
sub
jp
sub
ljmp
arpl
xchg
aas
daa
cmc
mov
sub
call
je
cmp
push
xor
pop
sub
jns
pop
gs
jb
ds
add
pop
pop
in
imul
mov
aaa
pop
push
aas
cmp
pusha
in
xor
aam
sub
sub
fisttps
ficomps
and
out
jne
add
negl
lret
ljmp
and
xchg
sub
and
and
push
cwtl
inc
add
mov
and
sub
out
dec
in
ds
pop
mov
sub
flds
cmp
int3
into
sub
dec
lret
adc
jae
insl
xchg
pop
pop
inc
sub
jno
repz
incl
bound
pop
mov
fistpl
pop
cs
lea
mov
xchg
pop
sub
dec
bound
sub
enter
sub
mov
fs
sub
rorl
std
mov
mov
push
sub
out
fsubrl
test
jg
popa
in
cmp
pop
sbb
aad
frstor
repz
cvtps2pi
imul
inc
sub
or
ss
sbb
sbb
in
scas
rclb
or
mov
sub
out
js
adc
sub
and
jo
pop
xchg
cmp
stos
shrb
mov
gs
roll
sub
and
daa
test
ss
fwait
sbb
and
test
adc
pop
sub
dec
or
into
adc
cmp
cld
mov
adc
movsb
mov
cmp
mov
mov
sub
out
cmp
inc
sbb
dec
cmp
dec
sub
cmpsb
push
jnp
aam
int3
hlt
call
popa
sub
and
mov
sub
dec
dec
gs
mov
sub
mov
pop
jge
inc
cmp
cmp
stos
sub
mov
test
push
adc
hlt
sub
xor
icebp
aam
ljmp
stc
cmp
sbb
insb
shrl
sbb
xor
sub
mov
leave
ss
mov
test
sub
and
add
lds
fldenv
xchg
jo
xchg
pop
xor
dec
sub
fmuls
adc
mov
adc
fisubrl
jnp
pushf
dec
sub
mov
push
jecxz
jp
loop
sub
xlat
push
movsb
sub
jno
orb
cmp
jne
sbb
pop
movsb
out
sub
cli
inc
dec
sbb
adc
add
xor
push
jnp
adc
sub
data16
xchg
lds
lahf
daa
cmp
sub
ficoml
or
adc
dec
daa
faddl
cvtps2pi
fidivrs
testb
sub
push
jmp
imul
mov
push
add
sub
mov
in
mov
mov
inc
sub
mov
sub
notl
adc
push
mov
sub
adc
aam
mov
jo
pop
mov
scas
mov
mov
and
daa
mov
cmp
pop
xlat
scas
sub
pop
cmpsb
cmova
mov
sub
or
adc
sub
push
fstps
stos
out
push
sbb
icebp
push
mov
aam
sub
xchg
aad
and
insb
cmc
add
xchg
lret
mov
sub
sub
cmpsl
sub
mov
roll
shlb
xor
cmp
xchg
sub
or
loop
test
adc
jecxz
mov
mov
push
add
out
leave
es
lea
jo
cmp
dec
aam
sti
or
stos
mov
icebp
test
mov
sub
std
out
cmp
push
inc
inc
test
andl
xor
mov
pop
add
std
sbb
adc
js
push
adc
pop
sub
xor
mov
cli
mov
in
xor
push
cmp
and
shl
sbb
ret
icebp
pop
inc
or
sub
adc
in
lods
sub
jo
mov
ret
mov
lds
mov
mov
call
jl
xchg
nop
in
sub
or
mov
icebp
push
and
sub
in
xor
sub
and
test
mov
sub
leave
xor
jmp
mov
sbb
out
mov
lret
sub
adc
fsubp
pop
sub
movsl
dec
loopne
test
sub
adc
sub
icebp
pop
push
shrl
aam
mov
and
out
fbld
lahf
pop
mov
push
insb
xor
cmp
add
pop
jmp
in
xchg
sub
jae
shll
repz
cmpsl
stos
outsb
fildll
sub
sub
sub
aad
mov
test
mov
push
sub
js
cmp
cld
cld
shrl
incb
push
out
cld
pop
jb
and
fld
sub
pop
in
jo
sub
mov
and
sub
push
or
sub
loope
enter
push
call
stos
sub
jecxz
std
jno
in
outsl
into
lods
push
icebp
sti
cmpsb
and
adc
inc
inc
lods
inc
sub
mov
jp
push
das
jle
aad
xchg
ds
mov
sbb
insl
lret
repz
lea
scas
hlt
push
mov
sub
outsl
jle
cmp
imul
xchg
sub
xchg
cmpsb
arpl
aam
cld
in
sub
stos
cmp
xor
addl
and
lcall
stc
jg
push
xor
in
and
jnp
xchg
adc
push
mov
sub
jno
cmpl
sub
adc
or
push
push
push
inc
divb
sub
xchg
fcomp
and
cli
scas
push
push
inc
sub
and
sbb
mov
xlat
sub
popf
loop
lock
ret
cmp
sub
jnp
mov
fldz
add
and
mov
mov
dec
sahf
cmc
fiadds
test
imul
fdivl
pop
sub
sub
data16
inc
enter
or
scas
xor
imul
sub
mov
pop
out
and
xchg
jl
and
mov
loopne
rol
mov
jecxz
mov
sub
ret
adc
stos
fwait
xor
inc
aaa
jmp
mov
adc
test
sub
xchg
pop
cmp
push
mov
imul
or
popf
or
inc
sub
insb
lods
xor
xchg
fisubs
es
int3
pop
sub
sahf
lcall
pop
xor
push
jmp
popa
jmp
aam
bound
lds
xchg
add
jmp
ret
cltd
lcall
jno
or
push
sub
mov
add
sub
jle
insl
mov
dec
subb
fisubrs
cmp
lret
je
push
mov
push
dec
addr16
push
inc
jbe
loop
sub
movsb
dec
dec
cmp
in
nop
fs
cs
sub
pop
add
ret
sub
inc
lock
imul
jp
in
sub
pop
daa
and
dec
adc
mov
mov
lret
or
xor
lahf
insb
cmp
dec
sub
adc
sub
outsl
bound
sub
or
push
xchg
call
mov
dec
out
mov
pop
pop
inc
xor
sub
jb
adc
and
push
add
adc
pop
push
dec
rcrb
inc
xchg
ja
mov
jae
out
in
dec
shrb
mov
mov
xlat
ret
insb
cs
sub
ficoms
ret
lret
aam
ret
fdivl
and
enter
ret
clc
pop
or
add
push
fdivs
stos
jp
nop
inc
cmp
mov
bound
lds
push
mov
lret
rcrb
xor
fisubrs
jge
xchg
dec
sub
jp
hlt
js
std
outsl
add
sub
sbb
pop
sbb
mov
sbb
mov
push
push
dec
sub
stos
push
mov
sub
arpl
lret
jbe
adc
scas
int
add
popa
repz
pop
sub
push
inc
ja
sub
sub
push
lods
xor
fistps
jmp
shlb
sub
lret
and
and
cmp
and
insb
out
insl
lret
sub
cmpb
sub
and
sub
ficomps
sub
mov
scas
mov
xchg
or
pop
inc
sub
push
xchg
sub
fiaddl
ret
outsl
inc
sti
sub
mov
cld
divl
data16
jl
mov
inc
xlat
aas
adc
sub
loop
pop
xchg
imulb
sub
insl
sub
sub
mov
add
arpl
dec
iret
aam
xchg
and
cmp
je
or
sub
incl
or
xorb
sub
pop
cmp
pop
cmp
bound
sub
pop
je
inc
mov
sub
mov
ds
sub
xchg
mov
mov
push
sbb
xor
sub
test
mov
scas
leave
sbb
and
pop
out
add
pop
fldenv
mov
jne
loopne
jae
inc
ret
cmpsl
jp
jecxz
mov
sahf
pushf
fnstsw
inc
stos
push
pop
add
dec
loop
pop
pop
cmp
push
or
inc
pop
xor
mov
ljmp
xor
rol
movsb
sbb
cmpsb
cli
xchg
sbb
sub
inc
in
push
and
xor
lea
pushf
in
int
mov
push
jo
sub
subb
inc
or
repnz
dec
fwait
pop
andl
lds
sub
mov
cmpsl
cmova
lds
mov
jmp
sub
add
aam
shrl
pop
out
xchg
in
mov
repz
sbb
mov
jb
in
sub
movsl
mov
subl
adc
xor
cmp
ds
and
imul
jmp
cltd
popf
daa
addr16
adc
xlat
clc
xor
ljmp
pop
pop
adc
lret
cs
pop
mov
and
stos
loop
inc
or
sub
pop
inc
cmp
sahf
in
push
adc
stos
or
adcb
sub
lret
adc
clc
mov
cs
sub
and
in
sbb
push
mov
sub
fs
test
sub
sub
sbb
test
jns
inc
jae
dec
mov
je
jp
sub
push
cwtl
ljmp
lock
cltd
sub
push
or
mov
imul
cmpsb
jbe
cmpsl
mov
sub
mov
lods
mov
fstl
test
cmp
add
ljmp
inc
push
leave
out
std
sub
lahf
sub
mov
sarb
mov
popl
pop
sub
outsl
sub
or
push
sbb
pushf
sub
out
mov
rcl
sub
mov
pop
in
or
div
ds
sbb
add
out
sub
pop
andl
adc
mov
dec
jle
int3
int
sub
lea
dec
insl
outsb
sbb
inc
dec
dec
aam
sbb
into
xor
mov
inc
sub
lods
in
int3
lret
frstor
test
std
movsl
call
aad
aam
mov
jp
push
inc
xchg
and
and
add
push
stos
aad
call
enter
popf
adc
adc
sub
pushf
mov
xor
cmp
lods
xor
jl
or
sub
sub
push
mov
repz
into
lods
setae
pusha
outsb
dec
cmp
inc
mov
inc
xchg
inc
ficompl
sub
and
bnd
dec
mov
js
push
mov
cmp
push
cmc
out
xchg
lds
fmull
ret
inc
mov
in
daa
adc
or
popa
xlat
cmp
insl
scas
es
xchg
imul
in
shll
and
mov
scas
sub
icebp
ja
pop
adc
int
into
lods
rorb
out
inc
sbb
ret
pop
outsl
hlt
fldenv
or
call
mov
xchg
das
imul
sub
sbb
add
sub
imul
inc
sti
fsubrl
sub
lock
jae
xchg
movsl
and
loopne
sbb
sub
dec
mov
xchg
xchg
mov
mov
adc
in
or
inc
cmp
mov
push
sub
add
xchg
sub
and
push
ret
js
std
lahf
ja
test
cld
lock
pop
push
fstp
jnp
sub
mov
cld
faddl
loopne
adc
sub
or
mov
les
imul
sub
add
sub
stos
dec
fs
sub
mov
out
stc
loop
dec
aam
sub
push
out
lods
adc
dec
mov
test
rol
fimull
cli
sbb
dec
das
sub
lods
xlat
imul
sub
inc
ds
das
lods
xor
mov
pop
pop
mov
push
sub
cmpsl
sbb
repnz
pop
gs
sub
setl
mov
push
stos
lret
in
mov
sbb
mov
shrb
clc
dec
mov
mov
pop
jo
sti
loope
jb
inc
add
movsl
sub
imul
adc
push
pop
and
sub
pop
xchg
xor
inc
mov
pop
sub
int3
je
aam
icebp
dec
daa
ss
mov
pop
jmp
push
add
aaa
and
xchg
call
mov
jmp
ret
pop
lcall
ret
or
pop
fcmove
loopne
and
sub
stos
fsubs
faddl
pop
inc
push
imul
jne
mov
sbb
adcl
or
mov
push
loope
sub
fs
sbb
dec
test
jmp
fnsave
xchg
outsl
and
pop
sub
out
push
in
sub
dec
sarb
frstor
mov
adc
xchg
shrb
call
orl
push
fnsave
or
sub
xor
push
ja
es
cmpsl
mov
lds
pop
daa
mov
mov
pushf
pop
xchg
dec
xor
mov
shrb
fldz
neg
sbb
in
fs
mov
cs
sbb
arpl
rcrb
lret
inc
sub
stos
sub
fstpl
arpl
sub
dec
mov
sti
mov
negl
or
out
jle
rcrb
pushl
or
test
push
push
ds
outsl
ficoms
sub
or
shrb
push
cli
ficomps
mov
adc
stos
iret
xchg
sub
insl
ss
sbb
mov
sub
bound
lahf
mov
les
mov
add
in
mov
int3
dec
cli
in
and
in
jge
js
mov
imul
pop
cmc
shll
sub
push
mov
mov
lea
ljmp
xor
jns
loope
pop
xchg
lods
popa
jb
and
cmpsb
push
dec
pop
pop
insb
sub
out
imul
jbe
sahf
jo
movq
cmp
sub
fdivr
pop
test
inc
std
ss
and
mov
mov
addr16
pop
and
nop
test
rcrl
in
sub
inc
push
pop
xchg
sub
jge
lods
lret
cmp
in
ret
sub
lods
cld
inc
lock
outsb
scas
stos
call
xchg
pop
dec
xor
and
cmp
xor
sub
outsl
jno
sub
mulb
cld
and
push
adc
stos
push
arpl
dec
scas
out
sbb
xchg
mov
xchg
data16
adc
roll
xor
sub
scas
fcmovbe
fsubrl
mov
mov
sub
cs
addr16
cmc
and
fucomi
lock
xchg
ficoml
sub
out
pop
js
push
test
push
pop
ficoml
sti
adc
sub
xor
or
adc
lahf
xor
pop
sub
insb
popa
dec
push
jnp
aad
mov
xor
mov
cmpsb
sahf
popa
stos
mov
jbe
mov
mov
jmp
loopne
aad
fsts
faddp
dec
sub
insb
incl
jae
stos
inc
loope
push
mov
stos
mov
incb
jbe
pop
rcr
sub
in
sub
mov
fs
cmp
inc
lods
lock
sub
in
push
icebp
fwait
sub
cmpsl
int3
mov
dec
movsb
jmp
dec
imul
addr16
sbb
fwait
sub
rorb
adc
mov
iret
out
aas
sub
dec
sub
fisubrl
rcrb
dec
pop
push
shll
and
int3
scas
jl
fldcw
pop
in
jle
adc
or
imul
add
leave
cld
fwait
imul
hlt
out
mov
mov
pop
sub
into
adcl
movsl
xchg
aaa
sbb
sub
fsub
push
adc
imul
adc
mov
out
cmp
inc
and
sub
in
daa
sub
repnz
insb
cmp
stc
sub
aad
pop
jecxz
pop
jns
pop
adc
jmp
xor
jne
push
xchg
ljmp
loopne
dec
sub
sti
push
call
and
push
sub
aaa
mov
lret
mov
cmp
sub
dec
orl
jbe
inc
sub
pop
sbb
imul
lcall
cmp
add
stos
mov
and
mov
xchg
leave
sub
cmpsl
outsl
sub
fadd
push
ljmp
pop
pop
es
lcall
lahf
ljmp
sub
in
mov
pop
sub
iret
loope
scas
sub
xchg
push
pusha
imull
push
sbbl
ljmp
mov
je
sub
inc
es
sub
xchg
adc
sbbl
mov
les
in
lahf
mov
or
jmp
sub
mov
popa
xchg
pusha
and
ja
mov
xchg
idivl
pop
cmp
daa
jle
inc
les
sub
lds
sbb
jl
sub
xor
int
in
cmpsl
aaa
sub
es
inc
mov
out
fidivl
push
out
push
sbb
jge
insl
push
xlat
repz
sbb
stc
jne
in
mov
add
mov
lret
and
popf
sub
subl
sbb
dec
push
stc
mov
pop
push
call
loopne
pop
inc
push
push
xor
push
popf
inc
mov
sub
dec
fistpll
rcll
sub
cmp
aam
and
pop
or
mov
sbb
sahf
ja
mov
xrelease
inc
outsb
push
out
inc
sub
mov
cltd
ss
sbb
call
push
pop
and
repnz
in
inc
lahf
adc
inc
test
popf
mov
stos
xchg
fmuls
int3
inc
mov
cs
sub
aam
orl
dec
sbb
in
inc
addr16
insl
sub
scas
or
sub
ss
sbb
sub
dec
into
mov
sub
push
cld
mov
aam
adc
in
arpl
cmp
inc
out
xor
pop
das
push
dec
icebp
jb
cs
and
rorl
popf
cld
sub
xchg
stos
xor
xchg
lea
sub
xor
test
sub
sahf
jle
outsl
adc
loop
lcall
addr16
push
mov
loope
push
insb
mov
sub
aaa
or
push
cmpsb
jecxz
add
jl
cld
stos
pop
and
jae
jb
fidivs
stc
and
lea
push
dec
xchg
jnp
in
sub
or
fldt
sbb
push
and
int3
mov
lods
jb
daa
sub
inc
add
lea
fldl2e
repz
and
test
cmp
shlb
sub
add
ror
jo
and
in
pushf
mov
push
push
xchg
sub
leave
cmp
sub
lahf
lods
fisubrs
cmp
lods
push
and
jne
pushf
jge
int3
fsubl
ljmp
jne
in
imul
sub
jp
sbb
les
dec
sub
mov
iret
dec
hlt
in
sub
inc
sub
or
cltd
and
cmp
pop
daa
repz
std
jge
and
inc
lock
in
add
lds
pop
mov
mov
shlb
adc
aaa
xor
cmpsl
call
gs
or
jo
xor
jb
jbe
cs
imul
push
imull
pop
or
cmp
pop
sub
and
xor
xchg
mov
xlat
mov
call
mov
ljmp
xor
mov
daa
and
ss
sub
mov
inc
adc
lcall
sub
sub
jecxz
cmp
sub
push
pop
andl
aas
cld
sub
mov
imul
jb
mov
dec
pop
sub
out
addr16
fisubrs
test
ja
mov
sub
cmp
push
ret
scas
loopne
and
inc
aad
movsb
sub
mov
leave
fcom
push
lock
cs
sbb
jp
sub
les
sub
sub
mov
sub
mul
inc
pop
sub
push
push
insl
out
scas
cmpsl
outsb
cs
cmpl
mov
jo
push
sub
or
add
std
repnz
push
aas
dec
ljmp
jg
mov
sub
adc
aas
rcl
adc
sub
sub
ret
imull
pop
dec
jo
sub
pop
ja
cli
sub
pop
out
cmc
push
mov
cwtl
aam
aad
out
lds
out
dec
sub
xor
sub
fldenv
int
jno
sub
enter
das
mov
sub
jno
inc
insl
sub
es
adc
cmp
mov
loop
push
mov
notb
mov
leave
pop
add
aad
ret
and
mov
insb
and
jns
js
dec
ficoms
sub
movsb
push
mov
sub
dec
cmc
ret
pop
sub
jmp
clc
xor
rclb
shrb
push
arpl
jbe
xor
in
int
repnz
repz
inc
scas
xchg
sub
cwtl
inc
sbb
hlt
mov
ss
lcall
cs
aam
rclb
lret
pop
sbb
cmp
adc
scas
sub
hlt
inc
call
jnp
movsl
inc
and
sahf
rcll
out
call
ljmp
lea
xchg
jle
outsb
in
jbe
cmp
push
xor
scas
arpl
xor
je
popa
jnp
sub
fsubrl
xor
sbb
call
jp
xchg
iret
fildl
push
cmpsb
aad
jno
sub
std
dec
out
sub
xlat
sti
add
sub
mov
ficomps
fsubl
mov
mov
and
xor
and
movsb
xchg
rol
loop
mov
sub
mov
pop
in
faddl
sub
xchg
jecxz
mov
test
test
je
shrb
int3
lahf
sub
xorl
sub
jnp
pop
jmp
jns
dec
mov
mov
subl
mov
dec
ds
add
ret
cmc
sub
sub
push
sub
loopne
jecxz
lds
add
fst
les
mov
xor
test
mov
push
or
fwait
and
and
sub
cltd
jne
sbb
inc
movsb
cmp
sub
adc
jge
sub
dec
inc
xorl
leave
push
lret
dec
shll
lea
push
data16
aas
iret
jne
and
sub
sub
repnz
sub
jae
dec
add
clc
and
sarl
int
mov
cmp
and
cmc
lds
mov
dec
sbb
sub
lcall
lret
in
enter
push
cmp
sbb
mull
movsl
lcall
sub
mov
xor
inc
loope
adc
xchg
sub
int
pop
push
jno
leave
or
mov
aam
loopne
daa
mov
sub
mov
pop
dec
sub
add
and
jns
or
fwait
cmc
jmp
dec
lahf
popf
sub
test
outsl
fsub
add
sub
or
adc
lret
add
sar
mov
jmp
sub
rcr
test
sub
xchg
inc
sub
cs
push
sub
shlb
add
xchg
mov
sub
dec
add
pop
sub
aaa
lock
cmp
fisubl
xchg
adc
sub
push
ljmp
int
cmp
and
or
push
mov
jmp
nop
cmpsl
das
ss
orl
add
and
or
cmp
adc
mov
pop
push
aas
stos
test
sub
test
stc
inc
pop
mov
rcr
and
icebp
enter
jno
jmp
dec
lods
sbb
adc
cltd
pop
sub
cmp
pop
ja
mov
lock
lahf
adc
cmc
aas
mov
cwtl
cmp
fisttpl
sub
mov
jge
int
xchg
push
daa
repz
sbb
or
jp
stos
cld
sbb
mov
lcall
sub
jns
push
xor
mov
sub
sub
or
mov
sub
cmp
lret
stc
cmpsb
clc
sbb
mov
fisubrs
jne
testb
in
and
mov
xchg
fwait
push
call
out
sub
adc
pop
in
cmpsl
fistpll
sub
xor
cvtps2pi
pop
nop
fistl
jbe
lcall
sub
cli
clc
mov
sub
hlt
or
inc
jmp
sub
adc
mov
xchg
sbb
xlat
imul
sub
xchg
or
out
sub
lods
movsl
in
and
jge
xchg
popf
arpl
mov
pop
imul
mov
xchg
scas
mov
loop
jmp
pop
inc
test
and
mov
cld
sahf
test
sub
mov
and
xor
sub
or
arpl
and
sbb
adc
das
add
shll
jmp
jnp
shll
insl
scas
sub
add
dec
sub
hlt
and
jns
and
jne
jle
sub
cmp
out
dec
mov
sub
xchg
xor
push
in
or
in
sbbl
cltd
add
dec
sub
call
sub
jmp
ret
xchg
sub
test
adc
into
xchg
sub
in
xchg
sub
push
insl
xor
jo
sub
popa
jg
sti
and
pop
shrl
xor
push
daa
in
sub
sub
dec
jne
jl
mov
dec
aad
xchg
sbb
stos
les
xor
push
mov
jecxz
push
sub
push
lret
mov
sub
ja
sbb
movsb
ret
push
sub
lea
ror
mov
cli
add
bound
hlt
sub
ret
push
js,pt
scas
xor
in
push
sub
cmp
iret
jl
mov
jg
adc
or
ret
xchg
call
andb
outsb
inc
ljmp
jns
in
cmc
test
and
cltd
lea
mov
add
sbb
or
imul
sub
sub
outsw
mov
sub
push
leave
and
cld
add
xchg
or
ljmp
adc
inc
cmpsb
xor
fisttps
mov
pop
mov
aam
xchg
mov
test
loop
jmp
jns
xor
ds
and
mov
pushf
and
les
jmp
ljmp
fldt
push
mov
leave
call
fs
add
stos
jl
sbb
mov
push
or
fisubrl
pop
test
mov
fs
add
sub
imul
jno
scas
push
xorl
mov
fucom
adc
or
sub
pop
add
es
sub
lock
mov
jo
xchg
sub
jp
test
in
lock
repz
subl
sub
bound
loope
inc
sub
push
adc
sbb
sub
and
test
add
insb
adc
pop
lods
adc
popf
lds
push
cld
and
sbb
sub
test
mov
cli
and
jecxz
mov
rol
call
sub
fnstsw
out
sub
pop
in
subl
sub
shlb
adc
cwtl
sub
and
or
mov
idivb
enter
push
loopne
sub
xchg
push
cwtl
inc
mov
enter
sub
rorl
cli
or
fidivl
push
push
sub
xor
add
mov
repnz
bound
lods
mov
lea
sub
testb
int
adc
pop
sti
mov
dec
sub
mov
mov
sub
je
mov
sub
push
test
mov
mov
sub
ret
xor
shrb
lods
cmpb
push
jg
scas
sbb
mov
mov
xchg
xor
mov
repz
or
lahf
int3
jge
sub
mov
inc
or
pop
cmpsb
mov
sbb
sarb
sarb
xchg
and
ret
das
or
pop
andl
cmc
push
sub
dec
sub
ljmp
inc
dec
jmp
lcall
sub
in
mov
sub
sub
jnp
scas
sub
fidivrs
pop
sub
movd
into
mov
cmpsb
testl
dec
fsubl
ret
jp
sub
data16
scas
cmp
inc
pusha
decl
mov
or
adc
xor
fcoml
lods
loope
shlb
mul
jnp
lods
daa
jle
popa
movsl
out
xchg
sub
sub
add
mov
ljmp
xchg
push
adc
pop
jle
sub
fadds
pop
scas
int
je
jge
adc
and
cmp
les
insb
xchg
xor
mov
mov
inc
jp
mov
inc
xlat
mov
add
stos
ljmp
mov
loop
lcall
jae
rcrb
jecxz
icebp
outsb
les
push
push
lods
mov
lds
dec
loop
push
adc
push
adc
sbb
adcb
push
sub
xor
jecxz
movsb
lods
cmpsl
add
call
insl
lcall
inc
cmp
sbbl
xor
push
xor
mov
sub
pop
sbb
push
sub
sarb
test
gs
dec
xor
and
lea
add
sub
mov
pop
cltd
cli
in
mov
movsl
or
fs
nop
pop
pop
sub
cmpb
inc
jmp
test
test
mov
jb
movb
movsl
mov
cmp
sub
push
adc
push
lahf
insb
adc
dec
push
xor
or
ficompl
jl
mov
sbbl
mov
dec
in
std
sub
movsl
xor
sub
nop
repz
ret
lret
xchg
xchg
fisubrs
mov
cmp
sub
jns
ljmp
stos
add
sub
pop
daa
mov
int3
mov
fs
sub
clc
add
dec
adc
mov
inc
enter
sbb
cld
iret
sub
insl
ja,pt
sub
sub
inc
cltd
addr16
mov
and
add
lods
jg
fsubrs
test
pop
dec
popf
or
add
lahf
stos
xor
sub
ljmp
pop
jns
insb
adc
mov
movsb
int3
or
gs
mov
std
cmp
push
add
jnp
loop
or
cmpl
sub
outsl
mov
cli
pop
insb
adc
std
lea
sahf
push
mov
stos
shll
mov
mov
imul
sub
rorb
sub
imul
test
sub
push
jmp
jne
mov
in
cli
xchg
jl
fistps
mov
negb
mov
js
test
ret
and
and
es
jmp
enter
mov
pop
inc
push
loope
movsl
jno
and
ljmp
adcb
mov
mov
push
imul
scas
xor
sbb
fisubrs
xchg
in
mov
cmp
or
cmp
jecxz
imull
enter
add
in
mov
dec
sub
xor
jno
jecxz
js
insl
cmpsl
jle
sbb
mov
daa
sti
rcrl
mov
loopne
push
mov
pop
push
lcall
xor
jl
dec
int
dec
lods
mov
adc
sub
test
shrb
mov
repz
mov
movsb
mov
aad
pop
rcrb
ss
xchg
mov
mov
sbb
imulb
enter
adc
fsubrl
sub
lahf
sbb
sbb
addr16
jge
pushf
mov
push
in
xor
sub
lret
fists
scas
notb
notl
cmpsb
cmp
xchg
movsl
scas
mov
loope
sub
mov
cwtl
cmp
scas
cmpsb
push
movsb
add
xor
arpl
push
xchg
out
cli
dec
cs
push
sub
mov
sub
mov
shrl
jne
js
xor
sub
xor
lret
repz
inc
pop
sub
mov
lret
jns
std
adcl
out
mov
xchg
popa
sub
mov
repnz
cwtl
in
inc
sub
inc
push
xchg
jecxz
sbb
pop
test
jg
movsl
pop
cwtl
push
je
ret
ret
dec
icebp
test
stc
inc
push
push
adc
insb
stos
les
xorl
xchg
xor
add
in
popa
das
imul
out
hlt
sub
xlat
testl
push
fstps
or
sub
and
cmp
pop
jae
scas
and
popa
js
dec
jecxz
in
xlat
rcrb
cmpsl
mov
addr16
sub
enter
sub
insl
or
lret
adcb
lahf
lcall
jp
push
movsb
adc
jb
and
imul
popa
mov
sub
pusha
lea
sub
sbb
cmp
outsb
mov
sub
adc
cmp
stos
bnd
pop
adc
and
adc
jmp
in
mov
cld
pop
mov
stc
push
inc
mov
sub
stos
mov
icebp
sub
xchg
dec
inc
pop
sub
mov
pop
push
or
jb
and
movsl
ja
insl
sub
or
xor
inc
push
dec
or
xor
lret
rcrl
push
adc
xorl
andb
fwait
cwtl
fldcw
mov
repz
sub
xchg
adc
and
aas
ja
loope
lea
ret
js
lcall
cmp
lcall
mov
push
sub
popa
stos
sub
testl
imul
lret
leave
loope
sub
clc
out
and
addr16
xlat
inc
xor
int
sub
fs
subl
mov
mov
insl
cmp
sub
xchg
inc
sub
lock
sahf
jno
dec
sub
push
cmp
dec
mov
pop
sub
lcall
sub
xchg
jb
mov
clc
or
xor
bound
push
mov
xor
andl
cmp
sub
sub
pop
js
sub
adc
inc
xor
aas
insl
sub
es
pop
orl
jmp
xor
repnz
sub
arpl
sub
mov
sub
dec
sbb
insb
pop
push
and
ja
cmp
out
fsubrl
jmp
or
mov
xchg
jp
or
cmc
and
jmp
mov
dec
sub
clc
sub
inc
stos
jno
sahf
push
call
mov
add
adc
call
sub
sbb
or
mov
int3
fdivrs
xchg
sub
push
lods
add
sub
dec
xor
dec
into
imul
pop
js
push
xor
pusha
sub
loope
sarl
std
popf
into
xchg
addr16
notl
fists
lret
dec
mul
cmp
jg
pop
sti
sub
jbe
lret
int
cmp
mov
mov
mov
cmovg
flds
sub
cmp
adc
int3
sub
leave
pusha
shlb
mov
adc
xchg
xchg
out
daa
daa
mov
push
sub
fs
lret
sub
mov
std
sub
pushf
mov
add
das
and
jnp
adc
out
int
push
adc
scas
pop
ret
pusha
test
pop
sbb
outsl
add
es
cmpsb
insl
daa
dec
cld
mov
psignb
sub
cltd
add
shrl
cwtl
repz
pusha
mov
add
mov
subl
xlat
add
shrl
lahf
dec
nop
sub
sub
jle
sub
and
sub
xchg
inc
ds
aaa
fisttpl
in
push
cwtl
cmp
aad
sub
mov
test
sbb
stos
add
je
mov
ret
jle
jns
pop
test
stc
sub
pop
sub
jnp
int3
cmp
xor
imul
sub
clc
dec
movsb
mov
outsl
pop
inc
sub
leave
jnp
fldenv
test
dec
cmp
pop
dec
inc
popa
adc
jae
shll
jecxz
xchg
pushf
inc
push
rclb
ficoml
push
loop
push
mov
imul
sub
stos
fistl
sub
push
lods
int3
test
insb
movsb
shll
das
cli
fisttpll
adc
test
inc
scas
xor
xor
loope
sbb
mov
iret
adc
sub
or
aaa
and
scas
cs
fwait
sbb
dec
sbb
dec
sub
in
cmp
in
inc
sub
lds
mov
add
icebp
sub
fwait
mov
add
jg
je
xlat
sub
mov
pop
mov
lods
xor
movsl
and
dec
out
pop
loope
push
sub
mov
insl
mov
mov
mov
cmp
mov
aam
sub
daa
sub
pop
sub
xlat
mov
jo
jmp
mov
inc
adc
xor
jns
or
int3
sub
ret
lds
sub
or
sub
push
pop
cmp
js,pn
hlt
xor
pop
inc
push
imul
sub
mov
clc
jno
rcll
mov
popa
mov
jns
lcall
ret
les
fs
test
xchg
pop
push
xchg
jbe
daa
cs
fdivr
pop
sbb
lock
xor
push
stos
xor
pop
jp
fstpt
out
in
lods
ljmp
sub
fidivs
or
mov
daa
push
sub
sub
sbb
nop
subl
mov
and
pop
xchg
mov
inc
out
int
cs
push
sbb
int3
sbb
sub
dec
mov
fidivrl
push
pop
mov
push
scas
hlt
sub
adc
sub
cmp
fisubrl
ja
rolb
jle
push
loopne
pushf
rclb
dec
mov
add
pop
or
daa
fisttps
sub
dec
push
xchg
jnp
dec
inc
mov
out
jle
iret
cld
fidivl
jmp
imul
pop
bound
hlt
push
sbb
out
daa
xchg
jo
or
sub
xorb
pop
jne
mov
fisubrs
popl
inc
mov
lret
popf
cmp
xor
rclb
fimuls
movsb
dec
in
adc
nop
and
loopne
inc
js
pop
rorl
bound
ja
mov
sub
mov
andl
pop
dec
divl
sub
repz
lods
sub
mov
hlt
jbe
mov
ficoms
inc
gs
in
cvtps2pi
push
outsb
adc
fs
sub
cmp
mov
mov
mov
ret
mov
sarb
pop
dec
and
stc
cmp
shll
hlt
mov
fld
inc
ret
push
and
jge
das
pop
xchg
in
out
sub
fldt
stos
xor
scas
in
repnz
adc
in
into
lret
cmp
push
popf
sub
scas
bound
jecxz
pop
ljmp
xchg
sub
gs
cld
add
lea
xlat
push
inc
movb
dec
das
sub
dec
pusha
sub
js
jne
lds
sub
inc
mul
hlt
and
hlt
les
or
push
movsb
and
push
jno
sub
mov
bound
fldl
ds
mov
jnp
or
in
jg
cmp
mov
leave
push
pop
test
into
int
je
push
cmp
pop
cmp
xor
stc
scas
mov
js
insb
sbb
fstpl
xor
push
outsl
mov
insl
xchg
popa
sub
aad
pop
call
mov
mov
jle
xor
sub
jmp
leave
dec
and
pop
std
les
mov
adc
pop
repnz
mov
inc
mov
jbe
push
pop
sahf
sub
mov
fdivs
imull
push
into
sub
mov
cmp
mov
fildl
lahf
rclb
mov
sub
ret
push
push
cltd
lea
xlat
push
sub
pop
mov
out
push
dec
sub
mov
push
sub
add
outsb
push
and
dec
leave
arpl
and
lret
and
hlt
sbb
in
sub
dec
cltd
or
fisubrs
mov
jecxz
xchg
fwait
cmp
loope
lds
sub
mov
xor
xorl
mov
cwtl
dec
movsl
ljmp
jecxz
inc
outsl
mov
into
sub
pop
or
xor
add
xor
adc
test
lock
decl
mov
test
fistl
stos
sub
jns
push
add
xchg
sub
popf
adc
mov
cmc
subb
out
loopne,pn
adc
dec
pop
push
xlat
jg
stos
cltd
sub
sbb
or
sub
js
movsl
sub
clc
fadds
adc
fisubrs
sbb
les
sub
sbbl
cmc
mov
sub
sub
out
neg
lahf
add
in
sub
jp
into
sbb
sub
inc
popa
ljmp
pop
arpl
mov
sub
inc
xor
cmp
push
aaa
leave
mov
jns
aam
adcl
and
and
std
and
mov
push
xchg
push
mov
xchg
xor
int3
test
gs
pop
mov
shl
ret
loope
cmp
iret
sub
fstp
inc
lret
sub
dec
inc
pushf
or
xorl
mov
xchg
out
or
repnz
pop
sub
mov
mov
mov
sub
push
test
adc
xchg
mov
dec
jno
and
enter
xchg
mov
jbe
je
push
add
ljmp
push
js
xor
daa
mov
sbb
pushf
cli
mov
test
out
add
sub
jge
imulb
sub
aas
mov
sub
xchg
dec
adc
push
sub
shl
ss
mov
mov
aas
sub
add
out
xor
cmc
lods
es
shrb
pop
sbb
scas
sub
int
mov
ret
out
les
outsb
cmp
sub
pop
arpl
sub
mov
mov
and
cmp
ret
sub
cmp
aas
jp
fnstsw
cld
inc
or
and
jge
imul
dec
outsb
lds
aaa
scas
sub
inc
or
sub
pop
out
inc
adc
mov
lret
sub
mov
jle
into
daa
add
cmpsb
cwtl
and
lods
jg
dec
push
mov
sbb
cmp
push
movsl
sub
pusha
and
cvtps2pi
mov
xchg
sub
push
xor
mov
push
and
dec
and
mov
lret
ljmp
notl
mov
icebp
cmp
mov
scas
sub
cmp
rclb
insb
lods
mov
cmc
sub
fildll
loope
lea
lahf
test
inc
stc
sbb
inc
sub
insb
es
lock
data16
sub
mov
jmp
dec
popa
push
pop
adc
or
push
sub
add
dec
sbb
jge
cwtl
jp
sub
movsl
aas
jae
sbb
xchg
adc
jecxz
sbb
push
pushf
mov
bound
push
adc
stos
jp
sub
mov
out
je
inc
push
mov
insl
pop
jne
mul
int3
jbe
jl
dec
popf
sub
adc
call
jmp
sub
xor
lea
data16
sbb
hlt
iret
cmp
scas
push
sub
pop
test
fidivl
ds
xchg
loopne
adc
out
inc
jge
mov
mov
jbe
aaa
gs
lds
int3
cltd
xor
enter
ja
add
pop
dec
fwait
daa
mov
aaa
dec
inc
int3
dec
bound
xchg
mov
out
mov
and
pop
sub
imull
dec
cmp
inc
xor
sub
test
mov
push
or
adc
daa
aam
es
daa
xchg
sub
xchg
xlat
in
lds
jmp
cmc
push
inc
rcrb
push
inc
out
jns
pop
out
sub
jmp
ret
lods
lcall
imul
shll
sub
cmp
sub
stos
mov
ret
pop
inc
mov
adc
lret
loope
mov
sub
leave
pop
addr16
sub
ja
sbb
adc
cmp
sbb
ds
mov
or
ljmp
dec
inc
push
fmuls
sub
mov
sarl
ljmp
sub
out
and
mov
ds
loope
loopne
cmp
push
and
stos
sub
pop
lods
mov
dec
xor
sub
std
sub
dec
adc
or
sub
add
xor
xor
imul
shl
in
inc
pop
sub
cmpb
and
mov
sub
pop
dec
hlt
xchg
ja
sub
xchg
sbb
sub
jno
cwtl
lea
xchg
adc
and
dec
mov
ds
push
adc
test
ret
xchg
sub
sub
push
dec
enter
std
mov
fldcw
repz
in
inc
mov
adc
xchg
adc
lods
sti
clc
mov
aam
lret
xchg
sub
add
sub
notb
fwait
sub
and
in
sub
js
in
push
fnstsw
iret
sub
cwtl
push
popf
cmp
mov
pop
out
push
mov
cli
xor
fisubrs
jg
xor
test
jbe
sbb
push
or
mov
repz
movsb
stos
cmovae
sub
inc
nop
inc
and
ss
adc
push
sbb
fisttpl
aas
shrb
jp
sub
cmp
fld
sub
inc
mov
mov
and
in
push
ja
sub
sahf
lcall
insb
in
nop
sub
or
imul
mov
push
dec
sub
paddsw
fadds
mov
mov
jbe
les
cld
jno
scas
adc
and
stc
out
inc
scas
in
xor
das
fnsave
sarb
imul
clc
ror
aam
sub
add
fsubrs
hlt
icebp
sarb
ljmp
adc
xchg
lods
and
out
push
sub
push
dec
xchg
sbb
pop
cld
or
in
pop
or
repz
mov
push
mov
mov
pop
jg
aaa
jno
je
sub
push
inc
lahf
test
stc
loopne
mov
dec
sub
mov
jnp
sub
dec
lret
xor
sub
xor
and
cmp
movsl
stos
in
mov
pop
add
in
xchg
cmc
in
loope
dec
inc
pop
daa
fistl
xlat
mov
xchg
add
sbb
filds
sub
mov
shll
jmp
mov
imulb
cmpb
add
push
pop
xchg
int3
sub
mov
call
shrb
daa
lret
inc
add
pusha
push
xchg
mov
adcb
and
cwtl
and
test
dec
push
sub
pop
in
ficompl
sub
es
mov
aam
sub
dec
mov
aad
lds
sbb
int
fildl
sub
xchg
mov
aaa
sub
addr16
test
mov
lock
fcmove
xor
sub
or
sbb
sub
into
push
and
push
adc
xor
lahf
mov
js
pop
sub
in
out
xor
cmpsb
inc
sub
clc
lods
pop
add
jmp
ss
sub
ret
jns
repnz
nop
subl
sub
inc
stos
test
or
pop
sub
data16
push
int
gs
inc
sub
ja
add
jno
push
js
imul
push
lret
mov
clc
or
out
xor
popa
addr16
aam
arpl
add
subl
stos
int3
mov
shl
aad
jle
pop
sub
orb
xchg
fildll
dec
sub
in
mov
jp
and
pop
jbe
lret
inc
or
mov
mov
sub
pop
cmp
push
sub
adc
subl
sub
pop
sub
pop
test
sub
mov
imul
out
or
repnz
stc
std
mov
jmp
cld
mov
rclb
mov
aad
stc
pop
rcr
icebp
sub
xor
sub
ja
pop
movsl
xchg
sub
out
and
sub
mov
sub
cmp
ds
mov
push
test
xor
xchg
enter
add
jo,pn
mov
pop
repnz
stc
insl
movsb
cmp
inc
loope
and
aad
jg
and
lods
mov
lcall
mov
lret
mov
lock
sub
dec
fisubs
jecxz
into
neg
xchg
test
fisubrl
imul
stc
adc
shll
test
mov
fwait
sub
fcmovu
mov
sub
aad
xchg
cli
sub
aam
xchg
scas
sub
mov
enter
out
push
mov
repz
cld
je
outsl
jbe
jge
jmp
pop
and
repz
adc
mov
rcl
pop
daa
stos
ficomps
mov
out
sub
roll
lea
inc
jbe
pop
xchg
xchg
cwtl
hlt
sub
mov
pop
or
sub
aaa
data16
ljmp
mov
cli
les
sbb
outsl
sub
cltd
in
cmpsb
scas
push
and
pop
adc
cmpl
xor
mov
mov
sbb
xchg
sub
jne
shl
sub
push
roll
sub
adc
ja
sub
dec
imul
jle
stc
pop
xchg
jg
cmp
icebp
mov
xchg
out
dec
mov
add
pushf
add
and
cmp
dec
and
mov
pusha
test
cmp
sub
in
xchg
ret
xor
adc
hlt
loop
sub
xor
xor
jnp
mov
shrb
enter
sub
sbb
in
sub
push
imull
add
rcll
jmp
xchg
cmc
outsb
sub
mov
sub
xchg
pop
adc
mov
pushf
loop
dec
mov
lds
das
test
repz
pop
push
ss
and
loopne
mov
jne
jg
fcmovne
sub
fyl2x
cli
sub
cmp
pop
call
dec
xor
sub
mov
cmp
mov
iret
orb
cmp
jecxz
xlat
ficompl
adc
sub
sti
jne
and
in
iret
adc
call
ret
cltd
data16
ret
mov
mov
xchg
leave
fwait
pop
pop
sub
and
imul
mov
pop
jb
cmpsl
and
fwait
movsl
ret
imull
jge
mov
sub
pop
xor
xor
jl
push
push
cld
sub
or
mov
dec
pop
mov
test
pop
lods
inc
xlat
imul
xlat
mov
xor
mov
pop
jns
pop
adc
jmp
and
pusha
xchg
addl
fiaddl
roll
and
adc
aaa
fidivl
and
sahf
imul
xchg
lret
out
mov
clc
jne
sub
addr16
inc
adc
xchg
mov
pop
fs
iret
aas
enter
xor
sub
pop
pop
dec
fdivr
cmpsb
and
add
dec
mov
or
rcrb
ljmp
mov
lds
sub
int
jp
cs
push
push
iret
mov
cmpsl
cmc
ja
addl
fmulp
jo
cmp
push
pop
mov
pop
in
dec
adc
pop
push
aas
jne
lret
push
xor
push
gs
mov
rcrb
mov
pop
add
fstl
test
dec
ljmp
leave
ja
les
xchg
or
call
sub
cwtl
stc
movsb
loope
mov
sahf
aad
xchg
daa
xchg
fldt
enter
mov
xchg
jno
pop
cmp
add
jbe
push
cmp
and
sbb
fbld
xor
lret
push
adc
mov
lret
push
sub
add
jb
sub
testb
cld
dec
mov
stos
and
pop
xchg
js
sub
std
xchg
call
shrl
jae
mov
ss
cmpsb
fucomp
sbb
and
xor
mov
aad
mov
aad
mov
mov
jbe
xchg
lods
sub
mov
repz
jbe
fsubrl
push
movsb
inc
add
sub
pop
adc
ss
jne
mov
push
sub
cmp
rcr
sahf
leave
sub
cmp
mov
pop
and
jbe
fdivs
and
push
pop
dec
xchg
mov
sub
mov
sub
pop
jae
or
inc
pop
in
js
sub
push
jp
xor
test
add
outsl
cmpsl
xor
into
fistpl
xchg
sub
adc
push
cmp
inc
in
mov
sbb
mov
int3
nop
in
sub
pusha
sbb
sbb
jne
sub
mov
add
dec
faddl
in
hlt
loop
dec
dec
push
jnp
and
repz
pop
xchg
sub
out
pop
cli
jge
mov
cmc
bound
mov
sub
and
in
xchg
test
and
sub
mov
test
jae
sub
pop
sub
scas
iret
stc
aad
push
cmpsl
adc
mov
imull
sbb
xor
mov
mov
aas
cs
mov
push
outsl
mov
sub
sub
int
cmc
xchg
mov
ss
shlb
icebp
jae
icebp
sub
ja
mov
xor
lods
pushf
test
mov
adc
ret
loop
call
cmp
sub
pop
lods
sub
sub
xchg
dec
ljmp
movsb
movsl
cmpsl
pop
cli
lds
test
and
lock
inc
cltd
pop
rcrb
sbb
cmp
xchg
shll
sahf
in
rcll
ror
add
je
gs
lret
xor
in
repnz
push
sub
jle
sub
dec
cmp
in
cs
sub
loope
mov
fwait
push
ja
clc
and
mov
add
sub
testl
mov
add
pop
and
sub
jb
inc
sub
out
cmp
testl
les
mov
cmp
xor
sbbl
pop
imul
cs
jp
jo
adc
jmp
and
cmp
cmp
fsubp
add
je
hlt
jns
and
nop
mov
sbb
aaa
add
jo
dec
mov
repnz
or
fisubs
sub
push
pop
int
sub
cmp
mov
xor
xchg
imul
ret
sub
jns
xlat
adc
pop
or
inc
inc
nop
sub
or
xor
cmp
add
push
mov
xchg
cltd
aad
sub
push
add
mov
adc
mov
xor
mov
lods
pop
xchg
mov
sub
and
or
jnp
clc
xchg
aad
into
jg
push
and
or
in
loope
scas
dec
js
jge
andnps
stos
shll
xorl
mov
push
mov
adc
repz
and
fisubrl
mov
mov
data16
insl
sub
call
jl
test
rolb
pop
ret
ja
fnsave
pop
mov
cmpsl
mov
aam
add
stc
sub
push
lret
cwtl
sti
sub
out
or
xor
and
cmp
sub
push
mov
in
daa
xchg
popa
mov
ss
mov
enter
in
into
sub
and
push
dec
inc
or
cmpsl
sbb
xor
mov
aad
cmpl
loop,pn
insb
add
mov
test
adc
or
les
sub
aaa
xor
iret
cs
nop
sub
cmpsb
pop
mov
xor
fistps
sub
dec
subb
xor
jg
loop
pop
pop
sub
test
dec
pop
rcrb
cvtps2pi
lock
pop
clc
cmc
inc
sub
addl
test
xor
jle
mov
pop
daa
inc
rcrb
enter
jne
and
sub
sub
mov
xchg
mov
push
in
sub
or
pop
jp
scas
or
dec
inc
add
sub
ret
and
fsubrl
cwtl
xor
xchg
outsl
shlb
into
sub
mov
or
push
arpl
sub
addr16
das
xor
insl
sub
ret
fidivs
fwait
lods
sub
push
add
push
aad
fcoml
cmp
push
lcall
jle
rcrb
out
stos
or
sub
rorl
pushf
lea
or
push
scas
or
mov
push
push
inc
inc
mov
test
xor
mov
je
mov
sbb
lahf
add
jecxz
mov
pop
adc
insb
aas
rcll
add
out
sbb
add
lahf
mov
pop
popa
or
sub
mov
add
cmc
inc
movsl
add
adc
xchg
xor
int3
out
jae
lds
xchg
jecxz
mov
outsb
in
lahf
pusha
mov
adc
loop
sub
push
insb
push
and
adc
lods
and
cmpsb
orb
movsb
in
push
aam
shll
push
shrb
push
mov
cmpsl
aad
scas
adc
cmp
repz
push
ret
xor
out
icebp
jbe
lods
adc
sarl
adc
lcall
xchg
nop
sub
mov
jp
dec
mov
fwait
and
mov
int3
pop
jge
lcall
outsl
adc
cltd
push
push
inc
sub
add
loop
sub
aaa
ljmp
test
push
push
lret
arpl
and
or
xchg
movsl
jo
sbb
rorb
insl
and
out
gs
mov
and
sub
mov
and
or
mov
inc
sub
push
cmp
dec
sub
in
mov
movsb
sub
clc
daa
and
out
idivb
movsl
jae
mov
jmp
xor
push
sub
outsl
mov
xchg
loopne
and
and
arpl
mov
outsb
and
adc
sub
sahf
test
mov
mov
sub
sub
das
or
inc
mov
test
or
andb
repnz
add
fcmovnu
sub
fadds
xchg
dec
test
xor
pop
dec
xchg
cmpsl
mov
notl
and
sub
adc
xchg
daa
cli
mov
or
sub
mov
push
cmp
imul
repz
sub
dec
jo
ss
cmp
fwait
or
sub
jg
adc
lock
aas
fidivrs
mov
mov
cmp
in
outsb
add
ror
xchg
pusha
in
and
fldl
vpsubq
aam
pop
adc
test
out
rolb
fwait
jo
sub
rorb
loop
xor
loope
jecxz
adc
je
test
cld
fadds
mov
ret
enter
test
or
jle
stos
push
sub
cwtl
insl
mov
fnstenv
fmul
imul
mov
es
sti
and
jbe
mov
mov
dec
fisubrs
outsl
cmp
sub
das
fwait
mov
inc
ds
call
rcl
push
popf
and
mov
pop
sti
fildll
and
fisttpll
and
jg
loope
in
pop
andl
pop
int
push
cld
mov
repz
outsb
int3
gs
adc
and
imul
mov
leave
mov
mov
xchg
cmp
push
repnz
adc
inc
xlat
cld
sub
jge
push
dec
pop
xchg
mov
out
movsb
cmp
jo
ficomps
scas
sbb
add
cmp
inc
cmpsl
fstl
shll
scas
jne
in
test
sub
fildll
or
xchg
fsubr
cmpsb
in
pop
and
sub
sub
daa
jne
out
adc
fldcw
imull
dec
mov
enter
vpminsw
cwtl
pushf
add
mov
fdivrl
sub
int3
fldenv
outsb
lret
jle
rclb
clc
sub
xchg
xchg
and
cmp
or
xchg
push
sub
and
loop
ficoms
sub
mov
mov
dec
push
cmp
adc
arpl
call
sbb
xor
inc
jb
xchg
jge
pop
sub
adc
pop
sub
push
push
sub
lock
sub
stos
xor
scas
imul
pop
lret
les
xor
xor
push
mov
mov
and
ret
xor
test
cwtl
push
cmp
xorl
jno
int3
aaa
or
movsb
sub
xor
adc
shll
or
call
xor
lea
frstor
mov
popa
sub
sub
inc
mov
pop
scas
repnz
dec
pop
fst
sub
jl
push
leave
mov
push
sub
call
xorl
mov
lcall
shrb
sub
sub
ud2
jb
shrl
jl
sub
mov
mov
sub
adc
inc
lds
stos
sub
vpmacssdd
sub
call
sub
xchg
push
adc
jmp
dec
mov
sub
fildll
pop
jns
mov
push
nop
mov
and
fiadds
out
lcall
scas
cmp
mov
cmp
adc
push
jmp
loop
lcall
hlt
cwtl
imul
enter
push
inc
clc
stos
push
sti
adc
fdivr
mov
fstpl
and
popf
sub
xor
mov
mov
sbb
adc
mov
sub
pop
and
in
mov
icebp
jp
jnp
mov
movsb
lea
nop
leave
sti
cmc
loopne
xchg
pop
xor
dec
ret
inc
sub
pushf
cmp
push
into
scas
test
andl
popf
sbb
and
out
loopne
and
sub
or
mov
ucomiss
daa
push
cltd
sbbb
sub
mov
fnsave
sti
gs
jmp
pop
shlb
fildll
sub
icebp
dec
es
jmp
pop
aad
mov
sub
out
pop
mov
mov
sub
or
lret
dec
sub
ds
and
adc
test
imulb
mov
mov
jno
xchg
enter
mov
inc
cmpsl
das
xchg
jge
movsb
inc
test
cmp
cmp
and
or
inc
or
lret
push
out
cs
dec
push
add
jecxz
notb
subl
and
out
sub
dec
and
mov
roll
std
popa
add
jmp
jne
push
sbb
call
or
scas
out
sub
add
enter
add
shlb
sbb
in
adc
icebp
outsb
or
jae
repz
ss
inc
add
sbb
cmp
push
popf
add
jbe
sub
cmp
into
aaa
sub
out
ljmp
das
and
fldt
mov
mov
jnp
mov
out
adc
icebp
dec
subl
outsl
push
lret
scas
push
lret
fwait
test
nop
in
pop
pop
outsl
sub
aaa
mov
jb
sub
aad
and
push
inc
push
xor
sub
std
incl
pusha
jb
scas
mov
xor
out
lcall
push
fsubrl
cmpsl
jecxz
negb
sahf
daa
and
popa
pop
jle
adc
icebp
jno
sub
push
jnp
sub
subl
in
sbbb
in
sub
lret
mov
test
std
pop
movsb
push
and
pop
ret
push
or
and
xchg
insb
das
popa
or
ja
sbb
xor
movsb
push
mov
mov
push
stos
inc
das
pushf
xchg
sub
cmc
es
lds
pop
insl
sub
loope
sub
fldt
xchg
and
or
stc
push
xor
pushf
shrl
add
sahf
sub
push
and
sub
sub
lods
lds
cmpsb
add
push
test
jne
fwait
pop
int3
inc
test
movsb
sub
cwtl
push
push
adc
stc
or
push
xor
dec
pop
lea
popa
sbbb
lcall
sub
lods
lea
testb
fcomi
lahf
pop
push
adc
add
sub
in
or
sub
cmp
mov
sub
xchg
imul
aaa
sub
cmpsb
mov
pop
js
lret
jecxz
mov
incb
movsl
sub
adc
mov
pop
mov
sub
mov
push
or
push
lods
ficompl
mov
imul
daa
sub
mov
jp
mov
push
or
aam
sub
stos
push
hlt
jns
jne
sbb
mov
hlt
mov
popf
xchg
aas
sub
bound
add
and
lcall
mov
xchg
adcb
push
pop
out
mov
sub
cs
xor
and
xchg
addr16
xor
fstpl
and
subl
jg
mov
jo
in
aad
lods
out
sub
xchg
fists
lock
test
dec
sub
jno
inc
jp
daa
jb
scas
das
imul
aad
sti
sub
adc
or
loope
ljmp
push
jmp
sub
ret
subl
or
jo
cli
in
dec
add
xchg
std
mov
pop
lds
lods
sub
pop
sbb
dec
sub
popf
mov
out
push
loope
pop
mov
mov
int
jo
xor
sub
popf
hlt
pop
and
stc
sub
mov
xchg
test
cmp
sub
jae
mov
shll
or
mov
sbb
rcll
push
dec
inc
test
pop
cmpsl
xchg
loopne
and
ret
sub
inc
mov
mov
fnsave
insl
in
sbb
rcrb
sub
mov
mov
or
mov
lret
pop
ss
jae
sub
or
and
pusha
daa
cli
dec
aam
dec
and
cmpsb
and
pushf
call
rorl
cli
lds
adc
push
pop
fildll
adc
push
mov
jg
stc
lock
pop
out
pop
adc
push
int
inc
or
sub
xlat
xchg
or
sub
shlb
inc
in
and
sub
sti
nop
xorb
adc
repz
or
out
repz
push
and
sub
sub
out
adc
dec
inc
mov
and
jge
std
lods
xchg
sub
pop
int
gs
add
mov
sbb
mov
int3
cmp
das
ljmp
fisubrl
mov
xchg
outsl
dec
sub
sahf
cmpsb
xor
shlb
fisubs
pushf
mov
orb
sub
out
in
xchg
cmp
mov
test
popa
sub
pop
push
cltd
add
bound
hlt
sub
xor
and
ljmp
test
lods
outsl
mov
xchg
fsubrl
or
xor
pop
adc
mov
sub
dec
mov
test
sbb
nop
sub
add
idivl
leave
stc
jb
sub
iret
insb
fmul
and
push
fiadds
out
jle
jp
pop
popa
sub
nop
cwtl
dec
sub
dec
mov
add
pop
adc
cmc
scas
rcll
dec
push
mov
mov
lods
jmp
xchg
rorb
and
sub
das
adc
pushf
and
cmp
cmpsb
loop
cmp
lea
cwtl
sub
jmp
leave
mov
out
push
push
bnd
pop
xor
aam
jmp
bound
leave
imul
fcompl
push
xor
sub
stos
data16
mov
loope
fchs
push
jne
xchg
pop
sub
repnz
sub
loop
sub
dec
dec
and
xchg
lds
fimuls
xor
out
ss
arpl
mov
lcall
fstpt
cmp
dec
cmp
test
sarb
inc
sub
adc
sub
test
mov
dec
or
push
ret
push
enter
xor
adc
xchg
mov
out
adc
mov
aam
xchg
test
inc
xchg
jmp
insb
repnz
sub
adc
data16
inc
popf
sbb
xor
inc
stos
sub
pop
in
orb
nop
das
loopne
sub
pop
push
xchg
dec
subl
pop
and
sub
mov
clc
xchg
push
xchg
adc
mov
je
xor
adc
mov
mov
xlat
out
sub
mov
pop
les
ret
add
loope
fsubrs
dec
pop
cmp
push
in
es
or
mov
rcll
jnp
sub
xchg
popa
je
sahf
mov
add
add
out
cmp
push
cld
mov
or
fwait
pop
cmp
sub
test
lods
ss
adc
adc
sub
test
pop
cmpsb
and
mov
in
bound
add
mov
shlb
mov
mov
icebp
sub
add
pop
push
jns
sbb
out
inc
jg
cltd
pop
sub
or
mov
xor
sub
sub
jecxz
add
sub
push
div
sub
push
enter
jecxz
xor
mov
push
cmp
lret
cltd
sub
add
push
or
mov
sub
jne
mov
sub
leave
cs
les
add
sub
mov
loopne
js
lock
imul
lods
hlt
sub
cmp
lret
mov
scas
and
std
mov
mov
rcr
sti
adc
xor
loopne
push
dec
movsb
add
in
jg
ds
pop
fcoms
jbe
stos
xor
and
test
es
jl
outsb
sub
imul
inc
loope
ret
mov
cmp
push
hlt
shl
shll
adc
dec
sarl
sub
push
inc
aad
in
and
adc
stos
xchg
sub
dec
scas
sbb
sub
call
or
jnp
in
xor
arpl
jecxz
mov
test
mov
xor
testb
jmp
loopne
adc
stos
and
and
mov
jno
leave
fldt
mov
adc
jo
pusha
fwait
repnz
popa
sarl
mov
sub
xchg
sub
aam
hlt
inc
push
rcl
xchg
sub
jecxz
inc
mov
and
and
stos
xchg
jp
push
mov
mov
push
pop
in
imul
push
data16
loop
dec
push
pop
test
xchg
mov
je
lcall
lahf
and
or
ljmp
popf
jnp
xchg
sub
push
xor
xor
pop
cwtl
popa
cs
mov
sub
lods
add
scas
fsts
negb
cmp
dec
lcall
sti
jae
inc
lds
jecxz
int
les
jno
cmpsl
mov
lea
push
mov
adc
cmp
xchg
cmp
cwtl
jae
xorb
sub
jne
sub
fimull
pop
and
into
sbb
jle
or
test
divl
gs
xor
lea
std
scas
xchg
stos
aad
mov
shlb
mov
mov
fidivl
push
and
sub
inc
jl
cmp
sbb
std
or
and
ljmp
inc
cwtl
fwait
ljmp
lock
and
sub
pusha
pop
scas
call
aad
mov
adc
lds
in
push
or
adc
xor
ljmp
pop
fldl
adc
cmp
sub
jbe
xlat
sub
inc
inc
sbb
test
aam
sub
outsl
test
bound
ret
xchg
stos
test
xchg
enter
cvtps2pi
cmp
cmpsb
push
test
xor
push
andb
rcrl
or
pop
lret
mov
mov
sub
int
movsb
les
sub
mov
sub
inc
and
sub
adc
aad
pop
subl
sub
dec
sbb
jo
dec
std
add
aaa
lods
jp
mov
ljmp
add
xchg
inc
out
mov
fbstp
cmpsb
loope
xchg
cmp
and
mov
les
mov
pop
insb
aam
jo
insl
dec
add
xor
sub
out
daa
inc
adc
sahf
rorb
xor
cmp
sti
sub
int
mov
xor
mov
cli
aam
sub
loopne
out
icebp
shrl
dec
scas
test
pop
or
imul
out
cmpsl
mov
les
sub
mov
mov
aam
out
ljmp
mov
push
pop
dec
int
test
call
out
push
sub
pop
jae
enter
scas
mov
sub
into
js
insl
jge
clc
mov
sbb
fdivl
mov
dec
imul
test
adc
lret
pop
inc
das
sub
sub
fisubl
mov
adc
test
and
loopne
sub
xlat
scas
ja
call
xchg
mov
mov
mov
jge
fisttps
dec
fcoms
lods
or
jg
pop
popf
sub
jbe
add
sub
lds
sub
xor
sub
pop
xor
mov
mov
repnz
inc
out
sub
shl
push
dec
adc
cmp
mov
and
xor
inc
jge
mov
jp
imul
stc
jmp
and
movntq
mov
mov
ljmp
in
pusha
inc
cmp
sub
mov
scas
xchg
sub
mov
dec
inc
outsl
jp
pop
into
sub
sub
xor
icebp
adc
sbb
inc
xor
sub
das
cltd
cmp
sub
pusha
mov
test
outsb
out
sub
dec
ja
add
shlb
fnstsw
hlt
mov
mov
adc
call
cmp
xchg
pop
sub
jbe
mov
xchg
inc
outsl
mov
pop
sub
data16
cmp
mov
pop
ljmp
stc
daa
push
pop
test
in
ret
test
sbb
outsb
inc
mov
sub
insb
mov
cwtl
idivb
jne
sbb
lods
push
pop
sub
inc
inc
popa
mov
lret
enter
dec
fidivrl
sub
daa
fnstcw
or
dec
add
mov
push
sub
mov
xchg
mov
jg
pop
les
push
jmp
insl
inc
push
aam
inc
loop
test
adc
push
daa
jp
lods
pop
adc
test
cmp
cmpsb
int3
pop
andl
test
sub
xor
inc
mov
dec
jmp
xor
lea
lcall
iret
ret
sarl
push
gs
fisubrl
mov
mov
and
fnstcw
mov
ret
in
jg
sub
movsl
cltd
fcom
popf
shll
call
push
mov
lret
dec
sub
and
mov
sub
out
arpl
notb
movsl
xlat
mov
adc
jmp
inc
in
mov
xor
mov
imul
das
test
pop
daa
sub
sub
bnd
test
xchg
pop
sub
sbb
mov
dec
adc
or
loopne
lcall
adc
mov
fnstenv
jl
push
lea
bound
or
sbb
es
jne
out
mov
stos
clc
enter
sub
jl
ds
sub
inc
mov
sub
or
fs
scas
sub
or
or
sub
lcall
mov
jp
hlt
dec
adc
mov
les
push
ljmp
seta
insb
arpl
xor
rorl
push
push
ljmp
roll
jno
xor
add
test
sbb
mov
sar
je
iret
adc
mov
ret
jmp
sbb
scas
into
xor
sbb
sub
icebp
rclb
scas
insl
call
mov
pop
dec
icebp
arpl
out
test
inc
ja
loope
xchg
adc
les
cs
sub
mov
dec
adc
out
jecxz
adc
in
test
sub
fsubrl
jno
push
enter
sub
data16
sub
insl
gs
jl
sbb
xchg
mov
nop
sub
nop
or
out
loopne
sub
push
cs
fcomp
adc
dec
loopne
fsubp
movsb
repz
adc
mov
mov
popf
sub
inc
push
call
push
and
stos
mov
sub
sub
outsl
lret
xor
in
dec
push
ja
lods
sub
sti
jecxz
or
jbe
sub
pop
push
jmp
pop
repz
jecxz
cmp
sub
aas
mov
push
pop
sbb
cmp
sbb
hlt
mov
rclb
xchg
iret
loop
test
jne
out
mov
push
daa
jo
jge
inc
add
inc
cmpsl
repz
cmp
pop
sub
pop
scas
sub
or
loop
sub
imul
push
sub
mov
test
loopne
sub
fistps
sub
inc
cmpsb
int
call
fcoms
dec
cmp
jle
mov
push
or
das
sub
jae
enter
sub
inc
shll
ds
add
sbb
sub
xor
std
dec
sub
jmp
mov
stos
add
leave
imul
mov
xchg
scas
bswap
mov
lods
inc
mov
in
cmp
jbe
adc
stos
mov
test
addr16
shlb
push
xor
sub
rcr
cmp
adc
push
dec
hlt
jnp
push
add
sbb
aam
sahf
mov
push
push
mov
ror
xor
rolb
add
and
jno
mov
adc
pop
jae
dec
adc
adc
lods
sub
in
jle
cli
pushf
ret
fsubs
push
cmpsl
and
adc
push
inc
stos
push
out
jge
xchg
or
mov
subl
orb
mov
adc
and
or
mov
and
pop
lds
sub
inc
iret
repnz
xchg
stos
lods
jg
fcmovbe
bound
fildl
dec
dec
test
and
pop
aaa
sub
mov
dec
sub
lds
sub
or
sub
push
ljmp
dec
rcl
adc
mov
pop
pushf
jne
jb
sub
leave
sbb
sub
jmp
pop
scas
sub
jb
inc
js
push
inc
lldt
push
and
xor
into
daa
mov
dec
adc
dec
leave
mov
push
mov
ss
ljmp
sahf
pop
aad
sub
jb
xchg
and
xor
mov
jp
sub
ret
sbbb
add
ret
or
add
loopne
jg
insb
cmp
mov
ds
scas
inc
sbb
sub
push
imul
leave
sbb
clc
xor
std
fsub
addr16
push
pop
inc
xlat
jno
sbb
fwait
inc
sub
push
lods
dec
fs
xchg
outsl
test
xchg
sub
or
mov
cmp
lock
sub
es
adc
xchg
xor
fisubrs
aam
rcrl
aad
xchg
imul
loope
in
ds
push
daa
bound
pop
or
pop
jo
leave
sub
xchg
pop
jp
sub
lds
aaa
xor
fprem1
aas
das
push
sub
push
xor
outsb
sub
push
inc
mov
pop
mov
outsl
ffree
pop
add
sub
scas
icebp
xchg
jge
dec
sbb
sub
sub
ss
movl
xor
mov
lods
adc
xor
xlat
sub
xchg
push
sub
cwtl
pop
fldl
sub
inc
sbb
enter
mov
dec
dec
inc
push
jb
lock
adc
call
cmp
out
mov
lea
outsl
mov
lret
jns
stos
test
shl
addr16
add
and
jb
xor
and
jne
sub
inc
sarb
sub
ss
mov
imul
pop
sub
xor
xchg
cmpsb
dec
push
daa
ljmp
cwtl
test
pop
adc
mov
into
dec
sub
ljmp
xor
je
jb
pop
inc
sub
bound
and
fidivrs
mov
or
gs
rcrb
arpl
mov
or
int
xor
add
xor
in
mov
les
and
xor
and
jnp
orb
stc
sub
fs
lds
dec
scas
inc
jbe
xchg
test
mov
icebp
into
in
mov
cld
popa
cmp
adc
std
mov
cmp
cli
inc
lahf
call
mov
add
add
xchg
repz
adc
mov
mov
orb
push
cli
sub
pop
dec
sbb
sub
xor
sti
aam
xchg
push
loop
out
es
aaa
mov
mov
mov
sub
dec
fwait
or
sub
jmp
sbb
test
sub
in
sub
sbb
popf
imul
nop
add
insb
js
xchg
jnp
sahf
cmp
sbb
sub
popf
jmp
jg
mov
xlat
call
inc
sub
fldenv
push
das
mov
sub
jae
negl
xchg
repnz
lret
mov
test
cmp
jmp
fsubrs
flds
xchg
lods
or
sub
sti
mov
mov
data16
sub
js
movsb
sbb
ss
adc
in
shrl
and
xchg
inc
je
xchg
sub
xor
lea
imul
sahf
fsts
mov
mov
xchg
inc
inc
fimull
rorb
jno
sub
and
das
xchg
push
mov
imul
lds
pop
sub
sub
rcll
dec
fidivrl
xchg
mov
loope
sub
imul
jle
test
or
or
and
push
scas
les
adc
sub
adc
movsl
sub
and
aam
iret
adc
jmp
sub
jmp
lahf
sub
fwait
and
repnz
aam
jne
sub
vpmovsqd
lcall
orb
xchg
xor
sub
mov
sbb
cmpb
pop
inc
xchg
sub
in
pop
shl
aas
mov
cmp
repnz
cmpsb
push
jo
sub
jns
lock
pop
sub
dec
add
sub
xor
sub
testl
sbbb
stos
lret
dec
sub
fisubl
jp
dec
je
jo
or
adc
add
std
sub
pop
or
jne
push
push
cwtl
sub
push
adc
push
pop
lahf
mov
je
mov
jmp
out
fistl
push
ss
js
in
jno
cltd
daa
ja
and
and
fwait
mov
rclb
nop
push
cmp
cmp
fnstsw
sub
dec
sub
pusha
dec
fdivs
xchg
xchg
xchg
out
and
out
test
inc
mov
aas
mov
popf
mov
out
stc
inc
lret
ds
test
sub
xchg
sub
sbb
dec
jno
push
xchg
fbld
ffree
mov
and
lret
imull
js
rcl
and
mov
aam
xchg
mov
cmp
mov
lret
pusha
movsb
xchg
pop
sub
jnp
lods
push
sub
dec
xchg
in
and
out
push
js
into
shrb
call
rcll
popf
sbb
xor
stc
push
dec
sub
movsb
leave
fnstsw
sub
ja
dec
inc
jb
lods
add
adc
lret
sub
int
sarl
sub
repz
paddsw
pop
sub
fldl
inc
or
pop
jge
dec
inc
xor
in
loop
mov
mov
jo
and
inc
rolb
dec
test
das
pop
dec
sub
out
mov
test
push
push
jge
icebp
popa
sub
in
out
adc
sub
sahf
sbb
pop
sub
or
push
sub
cmp
cmpl
push
sub
pop
ret
outsl
xchg
push
lods
into
pop
push
push
mov
fsubrs
int
arpl
in
scas
sbb
int3
jle
sub
push
xchg
popf
sub
lock
push
cmp
push
sub
arpl
add
adc
fcomi
push
rorb
cwtl
sub
loopne
cmpsb
xchg
sub
mov
mov
add
push
dec
stos
adc
cltd
out
sub
out
pop
mov
out
jb
pop
xor
sbb
ret
sbb
ljmp
adc
out
cmp
fistpl
pop
mov
out
das
popa
int3
mov
mov
mov
sub
and
repz
pop
aad
dec
sbb
cmp
mov
movsb
jae
dec
into
enter
lret
jecxz
sbb
adc
pushf
xchg
and
mov
mov
push
in
loop
fwait
sub
sub
xchg
sub
add
push
push
out
jne
je
repnz
push
jno
movsb
sub
sub
test
ljmp
cmp
ljmp
xor
sub
scas
aam
mov
iret
in
lcall
fstl
jne
push
sub
sub
dec
sub
lcall
mov
mov
in
sbb
xor
pop
cltd
adc
and
and
imulb
test
mov
pushf
sbb
pop
aad
jbe
adc
sub
sbb
xor
or
addr16
push
xor
pop
inc
mov
dec
adc
and
bound
pop
cli
xor
pop
aam
mov
adc
adc
push
jge
pusha
add
mov
decb
jns
fstl
jmp
push
aam
cmp
sub
addr16
push
cmc
add
sub
cmp
xor
sbbb
sub
fmul
fwait
mov
stos
clc
jg
sub
xchg
addr16
shrb
popa
sbb
xor
filds
movsb
test
mov
mov
call
sub
repz
cmpsb
fsubr
dec
sub
add
sub
mov
lahf
cld
adc
mov
and
xchg
out
push
pop
or
pusha
loope
sarb
test
xor
jns
adc
fldcw
adc
std
pop
jbe
and
sub
jnp
aas
sub
pop
pop
leave
xor
adc
cltd
gs
ljmp
rolb
scas
pop
and
gs
decl
sub
fimull
out
and
xor
lods
xchg
xchg
sub
push
xor
shrb
stos
mov
xchg
iret
dec
or
add
out
lahf
pop
ds
cli
jmp
in
dec
xchg
arpl
shrl
dec
jno
jecxz
or
or
scas
mov
sub
out
mov
movsl
xchg
inc
cli
jne
sbb
lods
sahf
mov
sub
add
cmc
push
lret
arpl
stos
add
inc
ficomps
xor
iret
push
ljmp
fwait
pop
js
dec
in
imull
mov
popf
lcall
mov
faddl
lret
call
sbb
dec
dec
lds
lods
sub
sub
jbe
xchg
int
mov
repz
inc
int3
push
outsb
and
add
pop
push
sub
daa
mov
loope
test
stos
rolb
adc
cmpb
push
daa
and
inc
sub
sub
and
jge
or
adc
xor
loopne
sahf
inc
mov
or
jmp
cmp
sub
sbb
scas
xor
loopne
pop
ds
sbb
into
push
addr16
jnp
sub
pop
sub
and
sbb
sbb
mov
lahf
xchg
pop
pusha
dec
dec
sbb
dec
shrl
sub
mov
cld
int
dec
add
outsl
and
sarl
push
imul
mov
loopne
mov
lret
sub
lods
mov
fsubrs
add
sub
loopne
pop
sbb
mov
xor
inc
jp
arpl
lahf
add
hlt
and
insb
sub
sbb
xor
adc
mov
jle
pusha
sub
leave
sub
ret
lods
add
push
adc
popf
push
enter
inc
or
push
data16
scas
jae,pt
mov
xchg
out
sbb
sbb
inc
mov
loop
mov
lds
or
arpl
and
add
push
sub
sahf
in
sub
movsb
xchg
mov
cmp
adc
and
icebp
test
sub
lds
fdivp
dec
sub
mov
iret
out
ljmp
in
or
fidivl
std
in
out
sahf
aaa
shrl
jl
leave
push
sub
in
pop
pop
subb
jae
push
xchg
mov
stos
outsl
add
cmp
aaa
xor
push
sub
mov
pop
iret
jge
jb
and
sub
movsl
clc
xor
sub
or
mov
aad
inc
fcoml
sub
movsl
mov
outsl
test
xor
in
ljmp
cmpb
pop
stos
out
iret
jo
jmp
sub
inc
dec
sbb
andb
and
sub
and
test
cwtl
mov
lcall
xor
or
add
jae
cmp
dec
pop
push
test
sub
xor
push
scas
sarl
or
nop
sub
lret
mov
clc
imul
or
jo,pt
mov
ljmp
loope
addl
loopne
imul
in
xchg
int
mov
and
in
fsubrs
sbb
jle
es
stos
clc
jp
jbe
dec
xchg
fiaddl
ljmp
mov
xchg
cmc
jae
mov
push
sub
add
sti
push
sarb
jbe
cmpsl
dec
cmpsb
cmp
ret
lret
mov
sub
lret
pop
push
shlb
adc
test
outsl
push
aas
out
es
sbb
mov
aad
mov
push
sub
mov
shlb
shrl
test
sub
inc
icebp
or
sub
negl
mov
and
or
aad
jb
sub
mov
mulb
pusha
sub
lods
or
out
insl
sub
enter
sub
mov
push
loopne
xor
outsl
enter
lods
sub
add
xchg
pop
sub
cmp
aad
sbb
stc
xor
sub
add
adc
mov
add
push
fmuls
sub
dec
push
ss
mov
mov
push
call
dec
cmp
add
pop
jp
sbb
adc
sub
das
dec
jbe
sub
xchg
jg
cmp
pop
pop
roll
gs
rolb
sub
adc
sbb
xlat
and
jl
pop
push
sub
mov
sbb
mov
adc
sub
sti
cmp
test
sbb
scas
xor
sub
and
fbld
xlat
in
pop
jns
clc
sub
sub
mov
lds
in
cmp
cmp
xor
xor
sub
pop
test
call
outsb
shll
stc
ss
cmpsb
out
cmp
xlat
adc
mov
jne
inc
sbb
repz
es
and
mull
jo,pn
sub
push
or
sub
push
xor
fsubrl
fsubrp
jne
sub
xchg
mov
icebp
inc
xchg
pop
addl
xchg
sub
inc
dec
pop
or
in
mov
cmp
xchg
jmp
mov
ret
or
and
ret
aad
orb
cmc
rcrb
stc
mov
shlb
gs
mov
sub
negb
sti
aad
jl
sub
cmpsb
hlt
xor
fdivs
scas
add
leave
fchs
repnz
cmc
test
insl
dec
fmul
fildll
jae
ret
mov
xchg
in
sub
sbb
rcrl
pop
inc
mov
lcall
and
out
jne
push
mov
pop
adc
inc
daa
jbe
lds
ror
sbb
scas
cli
xor
push
mov
mov
and
push
sub
add
rorb
popw
jnp
mov
iret
xchg
fnstsw
je
dec
popa
insl
fisubrl
sbb
addr16
sub
sar
jl
leave
into
jle
in
aas
pop
fsubrl
mov
sub
push
mov
jbe
cmp
push
mov
fwait
aaa
jnp
outsl
shrb
imul
mov
xor
arpl
cs
movsl
cmp
sub
xor
fisubrl
sub
push
sub
mov
xchg
rorl
xorl
mov
sub
shlb
mov
fisubl
bound
adc
push
pop
and
mov
fists
jmp
mov
jnp
xchg
stos
es
or
in
jmp
sub
sbb
jno
jb
adc
imul
sub
push
rorl
clc
lock
cmp
movsl
loope
inc
sub
leave
not
sub
jmp
mov
aad
xchg
sub
stc
jge
sub
xlat
jb
lock
leave
inc
clc
es
jecxz
push
outsb
aas
sub
mov
adc
xchg
sub
mov
add
sub
test
inc
cmp
push
stos
enter
iret
or
sbb
decb
jo
outsb
add
sti
outsl
mov
adc
xchg
and
mov
scas
mov
sub
mov
or
gs
sbb
aaa
rol
jns
scas
sub
xchg
popf
call
or
mov
xor
mov
movsb
xchg
ja
ret
add
out
or
sahf
int
fmul
push
outsl
or
add
xchg
add
sub
pop
jne
test
inc
sub
sbb
call
xchg
jnp
repz
outsb
movsb
out
mov
stos
adcb
sub
jmp
xor
pop
cmc
dec
bound
jecxz
push
lret
in
pop
lds
cmp
data16
fisubrs
and
dec
dec
lds
aaa
fstpt
test
daa
sub
loope
adc
sub
push
xor
inc
pop
addb
or
aam
dec
jae
sub
lds
add
test
ljmp
pop
mov
repz
outsb
cmp
sub
ss
insb
cltd
mov
jne
sbb
sub
shrb
sti
dec
mov
sub
scas
test
inc
dec
mov
and
jge
mov
sub
inc
movsb
pop
sub
mov
pop
or
daa
cli
in
nop
sub
adc
xlat
push
sub
das
subb
insb
cmp
outsl
or
adc
jno
sub
dec
xchg
arpl
jg
pop
adc
mov
das
pop
dec
sbb
xor
sbb
stos
shll
fucomi
adc
mov
inc
movsb
aaa
rcrl
sub
cbtw
iret
add
stos
ja
hlt
inc
dec
jns
cmp
push
and
sub
xchg
imul
ret
mov
aam
sbb
mov
sub
xchg
in
inc
fwait
push
sub
cmp
sub
push
mov
sub
stc
fcmovu
ret
and
mov
int3
add
out
mov
and
stos
cmp
dec
xor
daa
xrelease
shrl
mov
sub
mov
add
int3
out
cmc
imul
jg
sub
mov
jae
push
add
hlt
testb
mov
and
and
fstl
stc
iret
in
pop
dec
popa
push
cwtl
add
fildl
sub
xchg
jne
fcomip
int3
stos
sbb
jb
add
test
and
push
jnp
inc
out
je
sub
fldcw
xor
shl
sub
mov
sub
push
shll
push
push
mov
adc
and
sub
cmpsb
and
push
movsl
add
nop
insl
and
lods
cltd
cmpsl
and
subl
aaa
sbb
in
test
mov
push
add
aaa
jb
scas
jne
mov
outsb
add
pop
sub
lret
dec
sub
or
xor
dec
lods
mov
outsl
sub
aam
inc
xchg
daa
sub
cltd
jo
add
clc
mov
push
and
cltd
int
ljmp
jb
jmp
ret
xchg
stos
test
pop
or
sub
inc
ljmp
push
sub
popl
in
mov
imul
push
lret
push
sub
clc
pop
test
sub
addr16
push
shrb
aad
xchg
sbbl
inc
adc
mov
cmp
and
cwtl
xchg
js
addl
or
dec
adc
pushf
test
fisubrl
sub
sti
and
cs
xchg
fstpl
mov
or
adc
pop
dec
xchg
push
mov
cld
jo
adcl
sti
mov
daa
mov
sub
mov
inc
cmp
ror
push
aas
pop
sub
jno
xor
ret
pop
or
rclb
xor
sub
in
loope
cmp
mov
pop
add
cmp
setbe
subl
or
rcll
ds
pop
adcb
pop
popa
test
jg
xchg
cmp
repz
dec
daa
enter
push
mov
icebp
sub
mov
insl
jb
add
hlt
lcall
xor
out
mov
sub
sub
mov
lret
add
mov
sbb
jmp
nop
fidivrs
int3
into
mulb
mov
sub
push
xchg
jae
sub
shll
sub
mov
pop
jl
pop
sub
pop
inc
xor
fs
movsl
sub
inc
xor
add
stos
clc
and
dec
cmpsb
lods
pusha
ss
xchg
pinsrw
dec
outsb
mov
roll
xchg
sub
xchg
mov
sbb
sub
aaa
shrb
ljmp
rcrl
push
xor
mov
adc
daa
sti
xchg
adc
pop
push
shrl
sahf
mov
out
adc
gs
sub
sbb
sub
outsb
push
sub
jp
test
jne
in
pop
mov
dec
cs
cmpsb
sbb
pop
leave
cld
imul
sub
sbb
cltd
int
das
sub
repnz
cld
mov
push
rcl
fadd
xor
add
lret
pop
fdivl
ret
or
dec
and
add
jns
sub
das
mov
mov
xchg
cmp
push
push
inc
in
xor
dec
push
fdivs
mov
test
xor
push
je
popa
outsb
xlat
inc
or
pushf
imul
adc
movsl
test
mov
stc
mov
test
popa
in
sub
stos
insb
out
fabs
sub
fdivrs
add
xor
cli
imul
sub
jae
dec
cmp
and
mov
sub
or
xchg
rorl
dec
test
loop
sub
cmp
lds
lods
jo
and
push
xor
add
push
sub
out
movsb
lret
into
cli
mov
repnz
inc
pop
fwait
mov
xchg
xor
lret
jecxz
push
jb
mov
iret
cmp
sub
jo
push
mov
xor
mov
nop
test
sub
jl
fbstp
mov
mov
clc
aad
movsl
cltd
xchg
sub
push
testb
lcall
aaa
ret
push
hlt
mov
fidivrs
xor
jb
ljmp
movsl
sarb
divl
lret
push
sbb
inc
mov
rclb
aad
xor
outsb
lods
mov
mov
and
mov
and
sbb
sub
or
push
sub
sti
arpl
xchg
sub
lds
adc
push
out
jo
push
lcall
lret
pop
or
loopne
daa
roll
in
push
xor
stos
and
fdiv
pop
jno
imul
sub
or
sub
adc
adc
jecxz
push
sbb
or
fwait
andl
push
push
mov
sub
adc
lcall
sub
sub
dec
mov
cmpsb
idivb
fsubrs
xchg
hlt
ljmp
rorb
xchg
mov
push
or
in
fldl
lcall
test
or
daa
push
ja
jo
sub
mov
adc
insb
std
lods
xchg
sub
sub
aas
inc
iret
lods
sub
xor
cld
dec
sub
adcl
mov
arpl
sub
jle
add
pop
sbb
xor
dec
arpl
push
pop
leave
sub
data16
popf
sub
pushf
repz
and
dec
dec
or
sbb
inc
sub
sub
or
lds
push
jg
stos
sub
sbb
enter
sub
push
hlt
adc
mov
mov
inc
cmp
loopne
frstor
xor
adc
pop
xchg
lret
jl
clc
xchg
xor
cs
les
lds
dec
inc
lea
adc
hlt
push
xchg
scas
xchg
xor
pop
push
movsl
jns
mov
or
pop
mov
mov
sub
stc
xor
cmpsl
cmp
ja
movsb
adc
pop
in
enter
add
int
xor
sahf
mov
sub
cltd
push
sbb
dec
sahf
mov
or
mov
mov
mov
mov
pop
cmp
pop
ljmp
out
ret
or
and
mov
sbb
push
jle
dec
into
sahf
xchg
inc
and
jno
sub
cmp
lret
push
int
adc
test
cmp
scas
cmp
into
sub
inc
pop
cld
lock
adc
and
jae
inc
stos
mov
dec
insl
das
pop
adc
push
imul
jnp
rorl
mov
sub
fcompl
arpl
push
into
jne
jle
inc
imulb
out
fiadds
pop
mov
cmp
push
sub
in
movsl
pop
xor
push
and
outsl
adc
pop
aam
and
stos
popf
ret
insl
in
jl
xchg
sahf
stc
bound
mov
jne
jnp
adc
add
repz
fisubl
ret
push
mov
in
mov
fiadds
push
add
adc
sub
fistl
sbb
mov
and
lret
or
pushf
and
xchg
mov
xor
subl
cmp
fbstp
lods
sbb
sbb
sub
jne
inc
hlt
sub
movsb
stos
mov
pop
sub
imul
xorl
xor
lea
dec
data16
scas
add
adcl
add
ja
fcmovbe
jne
jge
xchg
sub
cmp
dec
cmp
jl
es
mov
inc
mov
lds
loope
sub
mov
imul
fwait
adc
sub
dec
in
movsl
cli
sub
mov
pop
jb
loopne
stos
xchg
inc
les
xchg
negl
or
movl
into
call
add
aas
popf
repz
and
rorl
daa
and
rolb
xlat
jb
popa
xchg
jmp
sbb
xor
and
cmpsl
jns
sub
enter
test
sub
lcall
sub
or
mov
and
push
sub
in
sub
orb
out
imul
sub
test
dec
pop
mov
xchg
jno
adc
cwtl
inc
cmp
xor
popa
sub
int3
mov
or
enter
into
adc
push
lods
add
andl
mov
ds
sub
imul
fwait
and
ljmp
fisubrl
int3
mov
xor
add
jg
lahf
sub
push
stos
arpl
mov
xchg
mov
xor
inc
sub
outsl
cmpb
sub
lock
xchg
push
aas
lea
sbb
shll
sub
mov
js
gs
outsl
mov
sti
rclb
scas
sbb
dec
adc
adc
daa
sub
dec
mov
sub
mov
sub
ret
xchg
mov
jne
push
shrb
pop
inc
mov
jae
add
sbb
jg
sub
push
mov
xor
lahf
test
or
pop
stos
mov
in
cli
jno
ss
out
push
movsl
mov
xor
mov
and
or
inc
pop
gs
sbb
outsb
mov
bound
inc
mov
lret
ss
xor
mov
xor
pop
xchg
add
mov
pop
test
dec
jecxz
addr16
and
and
js
xchg
lret
sbb
mov
popf
mov
xchg
shl
pop
or
scas
sub
dec
adc
jno
adc
fisubrl
sub
mov
repz
sahf
testb
scas
sub
cmpsb
sub
pop
fidivrl
cmp
dec
sub
dec
mov
pop
push
imul
jmp
sub
sbb
dec
lea
sub
jge
sarl
xor
ss
sbb
sub
sbb
or
push
pop
in
push
sub
cmp
jmp
das
out
test
enter
pop
repz
outsl
sub
into
pop
lret
cmpsb
addl
shlb
jnp
call
cmp
sbb
idivb
dec
xchg
sub
or
jno
xor
iret
add
push
sahf
fsubr
or
dec
mov
pop
and
jbe
pop
xchg
sub
loopne
adc
xchg
imul
nop
mov
cmp
aad
fmuls
daa
clc
aaa
pop
ficompl
ljmp
mov
jecxz
sbb
sub
repz
insb
xchg
sub
es
xor
inc
add
popa
jno
int3
mov
nop
pop
sub
sbb
push
push
mov
xchg
lcall
mov
xlat
fcmovnu
or
jge
mov
and
sbb
scas
push
pushf
test
inc
pop
jl
mov
jno
rolb
loopne
sub
loope
push
lods
or
sub
inc
dec
iret
int3
sub
js
lahf
cli
add
mov
add
and
push
adc
jne
xor
inc
cmpsl
jl
lds
out
lahf
iret
mov
push
sbb
push
addr16
xchg
out
repnz
mov
mov
xor
mov
cltd
out
in
xor
add
ffreep
mov
gs
cmc
and
fnstsw
lret
sub
mov
les
jae
rcrb
mov
push
push
leave
fisubrs
xor
shrl
push
sub
jp
adc
sub
inc
iret
mov
enter
ret
sub
int3
pushf
lock
insb
popa
xlat
pop
ss
sub
or
fstl
loope
push
xchg
or
fwait
popa
and
or
and
loopne
inc
lahf
outsb
cmp
push
mov
xchg
repnz
push
imul
lret
sti
push
mov
and
inc
adc
int3
fwait
int3
inc
cltd
ret
push
and
adcl
and
aad
test
sub
sub
and
fdivrs
mov
lock
sbb
xchg
shll
adc
xchg
push
mov
in
popf
hlt
or
sub
lds
or
jnp
loope
jle
sub
push
dec
jl
sub
or
sbb
mov
popa
outsl
and
std
ret
sub
xor
push
imulb
sub
xor
jp
sub
gs
insb
sub
rcrb
sub
sub
fstl
push
or
add
ja
ja
xchg
mov
nop
popa
shrb
inc
sub
mov
jo
sub
out
sbb
sub
push
xor
fisubrs
xchg
ljmp
jno
push
xchg
sub
mov
decb
pushf
sub
inc
stos
es
and
xor
mov
and
outsl
jnp
cs
mov
lret
cmp
or
loop
mov
sub
idiv
add
and
mov
cmp
sbb
call
rcll
or
das
sub
gs
cmp
dec
pop
sub
lods
cmp
testl
cli
cld
sub
bound
mov
sub
sub
sub
and
cmp
lock
sub
sbb
shrb
pop
loope
cmp
lret
jo
out
cmp
sub
sbb
jge
xchg
or
ret
movsb
and
sub
repnz
inc
scas
sub
js
ftst
cmp
lcall
xchg
iret
int
dec
pop
mov
outsl
daa
lret
into
cmpsb
mov
lods
jo
sti
cld
out
and
cs
aam
arpl
mov
dec
sbb
xor
sub
sub
loop
test
call
mov
inc
xchg
sub
bound
enter
add
jle
push
mov
out
mov
and
lret
sub
mov
popl
sub
insb
repz
nop
push
faddp
xor
and
in
sub
pop
sahf
ret
idivb
lahf
push
add
stc
dec
push
sbb
insb
cmp
nop
sub
sbb
xor
or
sub
mov
xchg
add
sub
lcall
call
dec
mov
into
fldt
and
jae
std
xchg
xchg
mov
popf
adc
les
jne
pushf
dec
xor
sub
push
inc
in
sub
cmp
mulb
sub
lods
enter
subb
xor
int3
leave
xor
sub
cli
aas
sar
adc
imul
inc
ss
xlat
aam
scas
and
jns
mov
mov
mov
sub
lea
adc
dec
ljmp
insb
jl
jle
sub
in
xor
sub
cltd
repnz
mov
imul
pusha
aaa
test
sub
push
push
cs
movsl
cli
sub
jb
jo
adc
fs
rcl
cmp
int
inc
fsubs
add
push
sbb
inc
scas
push
push
xor
push
mov
xor
pop
mov
aam
xorl
out
movsb
add
jmp
mov
insl
xor
sub
movsl
mov
fstps
jmp
sub
int
das
stos
sub
stos
and
loopne
add
cmp
xchg
and
jae
adc
mov
xor
imul
and
call
sub
mov
sub
movb
lea
mov
dec
andl
stc
pop
ret
mov
das
sub
sub
fadds
sub
xlat
dec
mov
push
fwait
es
cmp
jp
arpl
ljmp
inc
test
mov
test
push
loope
mov
bound
sub
pop
sub
lods
pop
data16
sub
pop
mov
cmovo
arpl
adc
mov
adc
cmp
out
xor
imull
jnp
pop
mov
push
xor
repnz
mov
or
adc
add
jg
dec
popa
or
and
stos
cmpsb
sub
out
xchg
lcall
inc
push
or
or
sub
or
sub
xchg
fisubrl
xchg
jno
jl
enter
push
sub
push
movsl
sbb
mov
inc
mov
jb
xor
add
pop
bound
jns
mov
and
mov
mov
jge
fidivrs
iret
adc
sub
js
and
mov
std
call
adc
stos
and
mov
dec
jge
fbld
fnstcw
add
ja
lods
push
lds
mov
jo
jbe
mov
sub
mov
xrelease
pmulhuw
xor
fdivrl
scas
sub
or
mov
sub
adc
cmp
inc
or
pop
xchg
cmp
ss
sarl
sub
mov
inc
xor
faddl
push
lea
dec
xchg
xor
in
cmpsl
out
sub
sahf
lods
and
or
dec
mov
popa
js
push
loopne
insb
sub
test
ds
outsl
push
mov
and
cmpsb
sub
js
xchg
and
inc
cs
ret
adc
mov
es
mov
int3
or
sbb
or
sub
enter
int3
xchg
dec
bound
sub
jle
in
xchg
sub
repz
push
mov
into
mov
pop
arpl
push
push
cmp
iret
xor
lret
std
jmp
push
movsl
pusha
test
sub
aas
push
sub
ret
mov
mov
stc
cmp
loop
pop
insb
ret
or
sbb
xor
jmp
mov
add
mov
fstpt
pop
pop
cmpsb
sub
imul
frstor
cmc
cwtl
push
outsl
dec
xor
dec
mov
sub
jge
xlat
sti
sub
pop
pushf
push
test
mov
arpl
repz
in
cld
push
mov
push
movsl
add
movsb
lods
xchg
xchg
fldl
push
cltd
xlat
lahf
sub
or
sub
pop
cli
sub
adcb
add
loop
push
inc
mov
mov
cld
lds
mov
iret
and
sahf
add
xchg
push
cmp
push
repnz
js
daa
pop
clc
and
push
jge
and
mov
sub
insl
jg
lock
stos
cltd
sub
out
mov
xor
sub
jg
sbb
scas
mov
or
sub
cmp
daa
movsl
cmc
dec
adc
dec
pop
sub
shrb
xor
inc
inc
push
daa
jg
add
pop
xor
dec
notb
add
xor
insb
sub
shrb
mov
cmp
icebp
and
or
sub
xor
push
adc
jle
daa
mov
stos
sub
notb
cmpsb
cmp
pusha
adc
addb
imul
sahf
push
mov
clc
inc
mov
adc
mov
bswap
push
ret
sub
sub
add
xchg
bound
mov
aad
mov
cld
sub
nop
jo
call
lods
sub
lock
arpl
dec
and
jnp
mov
xchg
sub
inc
sbb
sub
scas
sahf
jae
sub
incb
sub
aas
cmp
sub
and
testl
jo
int3
mov
in
pop
hlt
cmpsl
adc
std
ret
sub
repz
leave
aas
pop
mov
push
shll
ret
popf
push
mov
gs
jmp
and
pop
cltd
andb
xor
nop
fnstsw
jnp
or
mov
cltd
sub
and
mov
mov
int3
popa
out
shlb
cli
dec
mov
sub
inc
out
or
scas
stos
sub
test
pop
sub
repnz
and
xchg
mov
enter
mov
daa
and
push
scas
aaa
sub
mov
add
pop
lea
mov
sbb
jae
inc
lret
and
icebp
push
add
mov
fisubrs
sub
decl
shll
mov
adc
mov
out
call
sub
and
and
pop
pop
xchg
iret
mov
xor
mov
mov
inc
jg
inc
sub
mov
and
jl
iret
daa
adc
and
insb
jno
sub
outsb
loopne
sub
inc
sub
and
jne
mov
shl
mov
rolb
lret
mov
sub
add
sub
sub
popa
xor
cmc
jge
icebp
add
jne
jl
ret
sahf
sub
xor
jno
sub
mov
xchg
xchg
inc
dec
scas
cmp
inc
adc
sub
test
push
cmpsb
fildll
adc
sub
cmpsl
arpl
pop
out
push
in
das
in
bound
xchg
loop
pusha
push
aam
clc
mov
mov
push
and
jne
sub
sub
xor
xchg
dec
sub
xchg
cmp
mov
out
cmp
fsubrs
mov
xchg
pop
sub
adc
adc
cltd
mov
pop
lahf
push
int3
push
and
lds
add
je
mov
sub
or
stc
sub
out
aad
insb
push
sub
mov
sub
or
mov
jecxz
pop
popa
fidivs
push
mov
mov
subl
or
pop
add
cmc
add
mov
fldt
sti
loopne
sub
cmpsb
add
cs
les
rcll
sub
mov
insl
sahf
sub
loop
lahf
and
push
stos
scas
inc
lods
mov
ficomps
push
mov
fsubrl
idivl
repz
mov
push
cmpsb
lods
cli
mov
cmc
out
push
sub
imul
lock
test
je
xor
xchg
loop
sub
mov
iret
cmpsl
setns
movsl
xchg
xchg
and
fidivrl
ljmp
push
add
test
inc
mov
in
lret
lds
push
cltd
and
cmp
pop
fwait
sub
aaa
hlt
sub
js
test
mov
xchg
lcall
leave
sub
movsl
mov
cmp
popf
pushw
mov
inc
mov
imul
adc
fs
stc
sub
daa
inc
mov
call
sub
inc
jmp
sub
fprem1
and
and
xor
nop
adc
adc
outsb
sub
push
lcall
jg
or
and
mov
add
dec
add
subb
inc
pop
jbe
andl
mov
sub
clc
sub
leave
and
addr16
pop
stos
inc
outsl
push
xchg
adc
movsb
sub
ss
sub
or
aad
out
mov
sub
scas
sub
inc
loop
popa
sub
stos
and
ret
mov
adc
jno
mov
and
aad
sub
pop
cmp
push
dec
and
in
or
jne
hlt
push
pop
cmpsl
xchg
je
icebp
sub
pop
adc
inc
adcb
sub
fmul
aas
test
dec
in
sbb
popf
xor
nop
sbb
or
stos
shlb
repnz
mov
pop
mov
mov
dec
iret
aam
ret
in
push
pop
stos
ja
xor
out
dec
data16
inc
pop
cwtl
mov
in
fcoml
popa
or
outsb
cmp
and
js,pt
cli
rclb
jecxz
test
aad
adc
pop
mov
push
add
jno
sub
mov
mov
jnp
adcb
fstp
das
insl
fsubrl
mov
mov
mov
sub
mov
mov
lret
psubd
cs
pop
sub
into
xchg
push
arpl
jp
sub
or
mov
filds
mov
pushf
push
mov
mov
mov
sub
lret
into
push
xor
cmp
and
pop
cmpsb
insb
sub
sbb
mov
lds
push
jmp
jo
sub
mov
sbb
jl
xchg
jge
xchg
sub
mov
sbb
mull
mov
shlb
sub
cmp
jmp
arpl
or
bound
cmp
loopne
sub
mov
xlat
cs
adc
jg
xor
jb
add
and
mov
add
das
loop
push
xchg
sbbb
add
mov
fisubrs
outsl
inc
jb
into
mov
sub
insl
iret
mov
out
jb
cmp
mov
mov
sub
stc
sbb
out
test
sub
sbb
dec
faddl
adc
mov
lock
jle
adc
xchg
popa
and
mov
sub
add
nop
sub
jnp
or
push
icebp
fisttpll
pusha
test
sub
dec
ret
iret
cld
sub
dec
stc
outsb
adc
icebp
insb
mov
sub
dec
sbb
xor
and
daa
insl
dec
popa
cmp
out
mov
outsl
sub
jno
fldcw
pop
test
cmc
lea
push
sti
fcomi
dec
pop
jae
aas
into
mov
jecxz
cmpl
dec
xchg
mov
mov
sub
icebp
push
cmp
dec
and
lods
jnp
and
add
test
int3
lds
push
movsb
sbb
sbb
cltd
adc
sub
or
es
pop
xor
lea
push
daa
data16
push
mov
iret
push
push
jp
les
sub
inc
jbe
repnz
in
xchg
and
ljmp
lods
dec
aam
in
sub
icebp
lds
jge
cmp
xchg
clc
daa
xor
fwait
cli
pushf
dec
aaa
push
hlt
sub
stos
test
mov
repz
xchg
lahf
sub
movsl
sbb
je
testl
nop
push
inc
sti
icebp
mov
mov
mov
and
adcb
xor
cli
or
jnp
cs
jmp
je
adc
and
pop
out
jns
sub
push
lock
ret
and
stos
fwait
xor
mov
bound
jo
push
push
add
stos
sub
push
cwtl
subb
jmp
push
add
sub
lret
out
mov
sub
js
bound
mov
mov
mov
imul
xorl
loop
jmp
add
xchg
xor
mov
in
int
sahf
into
push
lock
je
mov
mov
pop
jp
arpl
xchg
cs
das
sub
xchg
lcall
or
jno
outsb
ss
cs
adc
pop
cmpsl
xchg
jbe
and
mov
and
movl
pop
inc
adc
push
xor
aas
xchg
sub
sbb
into
movsb
xor
leave
ret
mov
sub
mov
push
sti
xchg
and
jle
fnsave
sub
and
dec
ja
sbb
sbb
push
sub
mov
sbb
ror
sub
mov
jecxz
or
mov
cmp
and
cmpsl
test
sub
pop
jge
adc
xchg
fidivl
mov
enter
adc
sub
pop
call
movb
xor
xor
imul
xchg
fnstcw
in
fimull
cs
push
sub
lret
mul
push
dec
dec
push
sub
sub
mov
cmpsb
mov
leave
push
bound
push
or
aas
aad
mov
xor
adc
jmp
jg
test
pop
jno
xchg
jbe
sub
sub
mov
inc
sets
xor
mov
pop
lea
and
cmpsb
ss
and
sbb
out
mov
sarb
pop
and
lods
enter
cmp
sub
stc
iret
and
jge
sbb
xchg
sub
xchg
in
and
sub
dec
sahf
adc
sbb
jnp
xchg
inc
xchg
in
ret
stos
cmp
aaa
dec
xor
push
je
or
not
fldt
lret
and
vmovq
cld
inc
inc
movsb
adc
xor
xor
in
xchg
cmpsb
xchg
xor
xor
jmp
rcrl
inc
sub
xor
sub
fsubrl
lahf
out
sub
cli
dec
and
js
mov
outsb
out
sub
mov
xchg
popl
mov
sub
cmc
in
cmp
mov
and
test
inc
pop
je
and
rclb
push
adc
stc
cmc
ds
insb
pop
mov
imulb
pop
jle
test
icebp
mov
push
sti
popa
fbstp
lock
mov
test
daa
add
mov
mov
outsl
fldt
daa
testl
jne
mov
sub
shlb
push
fwait
mov
loop
xor
das
sub
pop
lea
je
dec
rcll
repz
jne
add
outsl
movsb
sti
adc
sub
inc
push
xlat
sub
sarb
push
sub
dec
mov
xor
stos
and
aam
iret
sub
mov
push
add
test
fs
addl
or
push
jl
adc
inc
in
push
mov
ficomps
sbb
das
aad
movsb
sbb
movsl
aaa
es
lret
test
mov
les
push
mov
das
push
leave
sub
andb
push
repz
test
aaa
imul
mov
xor
les
mov
xchg
adc
mov
rcl
notl
daa
sub
aaa
rclb
jmp
outsl
mov
mov
xchg
jns
sub
push
pop
nop
fst
test
fadd
int3
fdivs
cmp
sub
adc
int
sub
cmp
vandps
sub
clc
subb
jle
imul
test
add
dec
adc
addr16
in
mov
jns
push
sub
fisubrl
fs
repz
aad
push
push
enter
sub
loope
addr16
iret
cmpsl
imul
mov
test
sub
sti
fwait
in
popa
xchg
loopne
pop
mov
dec
sub
imul
repnz
test
sbb
and
sub
aad
push
pop
xor
gs
imul
pop
jg
mov
cmpb
and
subb
jo
push
aas
fidivrs
cs
daa
sbb
ret
roll
mov
stos
xor
js
sub
fstl
mov
sub
pop
rclb
sub
xchg
dec
adc
sub
sub
inc
fmuls
fldcw
fsub
mov
lds
lock
test
push
push
jns
mov
sub
mov
mov
xchg
inc
cmp
insl
sub
loop
xchg
push
cld
xor
pop
sarl
sub
inc
lret
lds
adc
sub
or
addr16
sub
cmp
dec
sub
jg
call
sub
add
ja
clc
mov
push
inc
xchg
out
mov
xor
loop
and
mov
ljmp
mov
xor
je
push
imul
mov
test
mov
inc
ljmp
dec
ss
loopne,pt
xor
mov
mov
shlb
mov
and
aaa
out
pop
add
add
sub
pop
cwtl
xchg
lret
xor
pop
push
inc
jl
stos
or
fldcw
or
push
in
jge
cmp
mov
scas
inc
inc
int3
ret
aaa
mov
aas
outsl
jbe
sub
lea
cld
xchg
sub
fwait
arpl
dec
lods
mov
das
xchg
or
inc
pusha
pop
icebp
mov
sub
sar
or
sub
cmpsl
mov
xor
xchg
dec
xor
sti
dec
jle
jae
xchg
push
rolb
fwait
mov
xchg
std
sub
mov
pop
or
hlt
add
or
fbld
mov
test
and
adc
jne
je
add
js
lahf
and
into
adc
insb
mov
sahf
sbb
movsl
orl
popa
mov
lcall
sub
int
add
cmp
pusha
sub
dec
js
or
jae
dec
fisubrl
jecxz
addr16
fstpl
pop
pushf
and
lcall
push
cmp
mov
fldcw
adc
subl
or
mov
cli
scas
fldl
sub
imul
sbb
push
test
outsb
push
xchg
sub
cmp
mov
jb
cmp
ss
sub
inc
imulb
jl
inc
mov
cmp
aaa
sub
push
mov
subb
fwait
outsb
loopne
cmp
mov
fisttpll
dec
jge
push
xchg
lea
mov
sub
es
stos
mov
sub
movsl
sub
icebp
out
outsl
or
mov
add
inc
xor
mov
mov
or
pop
pop
into
sub
sub
rorl
and
and
cs
ret
sti
push
call
jb
pop
je
jns
push
pause
call
loope
ret
pop
lea
xchg
aaa
sub
ds
cmp
and
add
scas
pop
stos
out
test
add
iret
sub
pop
sub
mov
clc
loopne
adc
dec
mov
rolb
mov
sub
subl
jae
cmp
aam
mov
pop
inc
aad
sub
gs
ror
iret
sub
adc
mov
mov
xchg
jb
xchg
rcr
sub
in
call
nop
xchg
and
andb
sub
daa
or
xchg
loope
push
adc
popa
adc
cmpsl
mov
sbb
pop
out
popf
fidivs
fstl
pop
cwtl
pop
dec
dec
sub
and
mov
xchg
aaa
sub
add
sbb
in
mov
mov
sub
mov
shlb
pop
and
mov
bound
icebp
popa
adc
or
xchg
ja
in
lcall
int
push
sarb
push
sub
sbb
test
pop
inc
ds
sub
lret
test
inc
and
mov
inc
ljmp
sub
aad
jge
xchg
push
add
fwait
sub
sbb
loop
je
jne
outsb
mov
sub
imul
int3
add
adc
add
cmp
scas
dec
cmp
insb
and
sub
or
push
aad
pop
call
jp
enter
imul
ss
add
imulb
lods
add
xchg
pop
lahf
daa
inc
jbe
and
aam
mov
mov
fs
jp
outsb
add
jae
iret
sub
pop
mov
in
xchg
ss
mov
int
scas
sbb
or
mov
arpl
das
mov
fnstsw
xor
out
xchg
inc
clc
mov
pusha
test
or
dec
xchg
dec
mov
mov
nop
mov
sahf
inc
subl
or
sub
cwtl
cmp
movsb
sub
lahf
scas
adc
sub
in
pop
sbb
repz
mov
das
cmpsb
movl
out
repz
and
mov
sub
pop
das
sbb
imul
sub
hlt
rorl
clc
xor
add
ljmp
push
hlt
xor
movsl
jge
sub
test
ficompl
xchg
push
fstpt
xchg
sti
push
pusha
mov
movsb
cmp
or
mov
cmp
jl
call
bound
pop
lods
jns
das
je
stos
push
sub
lahf
jecxz
push
xor
adc
sub
in
cmp
and
sub
adc
lods
cmp
cmp
scas
push
lock
lods
rcll
sub
sub
xor
clc
ret
jno
mov
and
scas
jae
mov
sub
pop
les
fcmove
je
sub
pusha
loop
or
in
push
dec
stos
mov
stc
enter
pushl
push
int3
fsts
inc
cli
sub
jb
stc
imul
sub
jae
orb
rcll
lret
pop
sub
sahf
sub
cs
and
lcall
int
xchg
daa
and
inc
popa
cmp
in
add
jp
cltd
pop
pop
jno
sub
outsb
inc
sub
test
orb
es
sub
xor
outsl
adc
sbb
mov
imull
mov
mov
ds
mov
insb
sub
arpl
pop
add
jmp
adcl
loop
adc
mov
xor
jecxz
add
loopne
and
fdivrl
sub
adc
push
xchg
int3
ret
pop
lcall
pop
jbe
mov
sub
mov
push
inc
or
in
andb
push
pop
adc
mov
cmpsb
sub
xchg
clc
dec
ja
in
adc
fbld
lds
sub
sub
cmp
ds
fldt
mov
mov
sub
test
or
add
mov
test
hlt
mov
jp
mov
int
ljmp
in
push
xchg
aam
ds
outsl
push
mov
popf
cmp
push
jecxz
cmpsl
arpl
ret
int3
mov
daa
jo
aaa
push
pushf
sub
sub
out
cmp
cmc
in
xchg
aaa
sub
sbb
adc
push
mov
xor
push
jo
iret
clc
xchg
and
xor
push
fisttpll
sub
call
sub
xlat
xorb
in
cld
sub
xor
push
cwtl
shll
dec
mov
sub
jl
out
sub
mov
xchg
sub
xchg
jns
aad
cmpsl
loope
jno
lret
sub
mov
jle
mov
shrb
adc
inc
pop
popa
pop
int3
sbb
sub
xor
and
xchg
jbe
mov
sub
insl
xchg
add
lds
or
sbb
dec
lods
sub
inc
scas
js
sub
test
call
shll
sub
dec
ljmp
fcomip
sbb
xor
xor
jmp
jg
mov
jge
jbe
xor
mov
repz
int3
sub
inc
adc
mov
and
jne
mov
arpl
test
mov
rclb
lods
in
sbb
add
loop
xchg
adc
inc
and
and
jge
sub
sti
in
mov
xlat
jno
sahf
mov
pop
fnsave
shl
jle
push
cmp
sub
aad
scas
cmp
js
pop
bound
inc
jne
fldcw
pop
xchg
cld
sbb
lahf
and
sbb
push
inc
repz
daa
ficoml
test
push
lods
pusha
xchg
nop
mov
mov
or
movsl
sub
xchg
adc
add
push
rcr
cmpsb
ja
sub
dec
jbe
push
sub
jle
sti
fldt
out
mov
and
xor
mov
fwait
dec
sub
in
cmp
cmpsl
push
xchg
mov
mov
mov
add
pop
fldt
push
xchg
push
sub
adc
insb
lret
push
popa
jnp
out
repnz
xor
pushf
sub
negb
fisubl
sub
push
cltd
in
inc
push
pop
sub
fnstcw
mov
cs
push
fistpl
je
inc
and
sub
les
or
mov
enter
and
xchg
jo
sub
push
outsl
insb
pusha
sub
andb
out
sub
jne
xchg
xchg
sub
movsb
ds
out
cli
mov
aas
lods
sub
inc
mov
loopne
push
aam
mov
fucomip
jo
lea
mov
sub
iret
jb
shrl
push
sub
clc
sub
bnd
sub
and
sub
test
in
daa
sub
sahf
cltd
mov
scas
pop
and
sbbb
sub
or
mov
push
adc
aam
leave
xchg
ret
movsl
add
xor
inc
push
sub
push
mov
sub
xchg
mov
pop
movsb
xchg
pop
into
mov
sub
aam
inc
shrl
jmp
inc
and
jmp
pop
cld
sub
enter
jns
fiadds
int3
mov
cmp
movsb
dec
les
lcall
xor
sarb
sub
add
scas
push
lret
or
mov
ficomps
repz
xchg
imul
fmul
cmp
mov
pop
sub
sub
adc
loope
dec
sbb
and
sub
mov
iret
add
sub
dec
mov
pop
sub
mov
iret
add
int3
fdivrs
popa
icebp
pop
dec
sub
es
jp
fs
lahf
iret
ljmp
je
cmp
fldl
or
inc
xor
ret
dec
arpl
cmp
lds
mov
or
outsl
xchg
and
mov
arpl
mov
sub
les
sbb
adc
fwait
and
incb
fists
fidivl
sub
fstl
sub
dec
lcall
xchg
ja
xor
xchg
dec
popa
int
fnstcw
cwtl
cmp
mov
ljmp
or
inc
shl
scas
sub
imul
xor
lcall
xchg
lahf
jno
xor
jmp
mov
lods
rcrl
mov
inc
insb
sub
shr
sub
pop
mov
mov
sbb
andb
int3
add
sub
in
idivb
xor
and
sub
add
popl
mov
push
shr
add
popf
mov
arpl
pop
fldcw
out
xor
sbb
jg
sub
pop
add
cmp
adc
hlt
repz
jb
mov
lcall
pop
in
sub
mov
nop
iret
aad
fsubrs
imul
cltd
js
sub
out
stos
sub
sbb
and
test
lahf
xchg
int
shr
sub
add
mov
xchg
scas
shrb
push
in
or
sbb
sub
test
into
adc
mov
cmpsb
sub
loopne
inc
adc
jge
call
or
sbb
push
das
or
lret
js
pusha
pop
lock
sarl
dec
xchg
sub
in
push
add
inc
repz
es
adc
and
sahf
mov
out
addr16
loopne
sub
dec
stos
aad
sub
sub
jne
sub
sahf
adc
ss
loope
pop
cmpsl
dec
sub
ret
cwtl
push
sub
push
stc
adc
dec
sbb
mull
ret
jnp
in
and
cmpsb
xor
push
mov
test
mov
jns
push
mov
jg
add
fldcw
leave
shl
shrb
mov
jnp
pop
push
jae
repz
xchg
jb
inc
jecxz
idivb
les
fwait
pushf
or
movsl
mov
mov
push
aas
loop
pop
sahf
lods
cmp
jl
jo
mov
mov
imulb
push
or
in
jne
cli
cld
mov
movsb
in
adc
add
lret
jo
and
iret
inc
icebp
ljmp
xor
jmp
inc
sti
mov
dec
iret
jge
jg
mov
and
in
int3
lret
test
cmpsl
push
and
sub
xor
call
lds
push
cltd
sub
cmp
dec
add
inc
outsl
das
aaa
in
jbe
dec
pop
imul
jmp
sbb
int3
jb
fs
or
add
movsl
sub
mov
cmp
push
push
clc
xor
sub
jecxz
and
xor
mov
jp
adc
xchg
pop
sub
push
jp
call
ljmp
jle
sub
and
scas
add
mov
stos
gs
sub
lcall
mov
or
ficomps
loopne
mov
cmp
xor
cli
dec
and
add
mov
lret
xor
clc
or
int
mov
orb
das
push
mov
jbe
in
cmpl
fs
lds
mov
sub
and
fsubrs
pop
pop
dec
jne
sahf
stc
es
pop
adc
xor
xchg
icebp
sub
in
inc
sti
xchg
cmpsl
xchg
cmp
daa
or
jne
leave
loope
xor
cmp
sbb
xor
pop
jo
xchg
ffree
dec
arpl
pop
mov
ffree
push
adc
push
mov
sub
xor
mov
ss
mov
sti
icebp
inc
rol
mov
stos
mov
mov
dec
or
sub
xor
sub
ja
mov
jo
lods
sub
cwtl
add
lret
in
jno
or
in
jge
sub
adcb
sub
mov
dec
enter
popf
sbb
jno
sbb
adc
dec
cmpsb
xor
data16
call
push
inc
sub
cmpb
push
or
jecxz
or
lds
fucom
mov
cs
jns
mov
aam
or
sbb
lds
jne
pusha
call
ror
xchg
popf
xchg
xor
dec
aam
or
sub
jecxz
pushf
jne
dec
dec
rcrl
lods
push
clc
int
inc
into
mov
fisubrs
hlt
int
jmp
dec
jecxz
inc
xor
dec
xchg
outsb
popf
sbb
dec
mov
pop
mov
fs
and
sbb
mov
cli
popa
fbld
int3
aad
adc
xor
inc
sar
and
cmp
testb
and
xor
in
insb
divb
sub
sahf
xchg
jecxz
sub
or
jge
in
pop
jno
and
mov
cmp
xlat
pop
push
add
adc
xor
mov
mov
bound
gs
xchg
sahf
mov
sbb
mov
dec
xchg
cmpsb
xor
rcr
sub
sub
sub
push
push
fcoml
lods
sub
dec
pop
adc
jle
shlb
xchg
lock
sahf
loop
popa
stos
fsubrs
mov
mov
push
dec
in
popf
mov
adc
mov
sub
pusha
in
mov
insl
and
cmpsl
ret
es
inc
outsl
stc
add
movsb
xchg
insb
mov
aas
clc
out
sbb
sub
sub
popa
dec
loopne
add
sbb
fldcw
xor
push
add
daa
pop
cmc
sub
xchg
or
fldt
shl
cwtl
xchg
sub
pushf
mov
lds
sub
xor
add
ljmp
mov
push
and
int3
subb
adc
aad
xor
movsb
lods
scas
sub
push
lret
dec
add
inc
cmp
je
sub
xchg
xlat
push
lea
sub
mov
iret
mov
xor
pop
xchg
mov
push
mov
sbb
and
mov
jl
cltd
push
dec
js
ljmp
das
xor
stos
xchg
mov
leave
jnp
popa
sub
adc
aaa
and
push
adc
mov
dec
and
lock
sub
xor
movsl
stos
push
cmc
notl
ret
aad
movsb
push
sahf
xchg
inc
psrlq
mov
test
add
pop
jle
and
aam
jns
sub
call
dec
push
sub
inc
cmpsb
sub
test
jns
ljmp
jmp
ret
dec
lcall
jno
or
mov
loopne
jle
sub
push
and
sysexit
stos
add
inc
stos
sub
imul
loopne
add
into
sub
adc
daa
sub
inc
leave
xor
sub
sub
fwait
mov
and
test
sub
stos
test
jne
adc
pop
call
jp
pop
add
ljmp
mov
xchg
imul
ja
sub
cmp
push
add
daa
inc
cmp
pop
or
xchg
sub
fwait
and
test
cltd
cmp
lods
sbb
and
aas
and
or
fsubrs
push
cli
mov
and
lods
and
pop
ror
mov
and
lods
scas
lea
icebp
decl
into
sub
pop
test
cmp
xchg
jge
push
out
push
loop
pop
mov
dec
sbb
jg
pop
repnz
loope
ds
lret
push
out
data16
xchg
test
push
ror
mov
jmp
int
mov
mov
mov
xchg
and
and
fnsave
fsubs
mov
jb
sub
outsb
cmp
call
int
mov
mov
cmpsb
iret
idivl
dec
sub
pop
js
cltd
mov
je
stos
adc
dec
sbb
ficoml
fbstp
popf
sti
sub
lds
pop
sub
cltd
add
jg
fs
sti
push
divl
sub
int
xlat
test
mov
and
decb
aad
les
dec
sub
repnz
sub
ss
pop
jnp
mov
sbb
add
sub
rolb
inc
pop
jne
mov
sub
dec
out
push
popf
test
and
cltd
mov
fstl
repz
push
out
aad
loope
lock
into
in
sub
jo
push
test
mov
mov
mov
sub
mov
shll
cld
sub
dec
cmpsb
arpl
sbb
imul
and
das
xor
push
pop
pusha
int
push
xchg
mov
xor
jnp
xor
pop
add
repz
aam
shrb
pop
or
aam
sub
cli
hlt
popa
out
aaa
sub
push
fists
mov
orl
inc
in
mov
cmp
std
xchg
push
sti
stc
or
sbb
shrl
je
icebp
inc
and
lahf
mov
push
aas
cmp
repnz
sahf
and
sbb
and
xor
or
popa
sar
mov
dec
jno,pn
sub
int3
xchg
or
push
pop
fwait
sub
sub
pop
or
pop
repz
lahf
sub
or
mov
shrl
mov
push
mov
popf
loop
leave
xchg
jno
ljmp
imull
cwtl
adc
jle
mov
xor
ja
stos
movsb
ljmp
out
dec
sub
lea
data16
arpl
std
subps
push
stos
clc
xor
mov
iret
addr16
push
sbbl
mov
dec
out
sbb
pop
and
xor
ds
lds
cli
sbb
mov
and
fwait
sub
stos
nop
jno
int3
dec
shl
add
mov
push
push
jb
adc
lods
jl
test
std
dec
repz
nop
push
push
jne
inc
pop
ret
sub
xor
dec
aaa
pop
pop
xor
inc
lret
aam
dec
sub
jle
fidivs
xlat
sub
arpl
xchg
and
and
jns
jb
nop
out
sub
ret
sub
jae
cmp
xlat
sub
loopne
add
cmp
sub
lods
fdivrl
iret
add
jne
mov
aas
adc
lret
cld
push
mov
call
mov
sbb
adc
and
popa
mov
xorl
mov
repnz
stos
movsl
xor
jl
add
inc
sub
cltd
and
adc
andl
jp
cmp
add
dec
sub
and
outsl
sbb
mov
lods
fldenv
xchg
fsubl
bound
addr16
push
push
sbb
sbbl
popf
jge
jo
fcmovbe
sub
iret
jg
out
sub
push
push
aas
push
and
fistl
mov
mov
mov
adc
mov
int
call
sbb
fstp
and
mov
pop
and
sub
out
jg
xchg
shlb
cwtl
jo
stc
mov
and
or
cmc
sub
ds
adc
shrb
sub
arpl
sti
enter
mov
incb
inc
mov
sub
inc
sti
sub
xor
scas
jecxz
mov
call
movsl
mov
lret
mov
cli
or
jmp
mov
sub
and
rorb
popa
pop
jae
call
inc
push
xchg
gs
ret
dec
lcall
sub
lret
and
dec
sub
jne
mov
xor
hlt
push
loop
inc
ljmp
repz
inc
andps
push
aad
dec
adc
inc
ds
push
pop
sub
bts
sbb
sub
shrb
mov
fistpl
sub
lahf
push
sub
mov
popa
test
cmpl
cli
jnp
sahf
ret
inc
or
cmpsb
popf
dec
in
sub
mov
push
sub
pop
adc
test
xchg
movsb
outsl
out
mov
scas
cmpsb
test
std
cld
xchg
mov
dec
sub
sub
sub
mov
jge
xor
jle
arpl
roll
jecxz
subb
add
lret
sub
jmp
imul
adc
mov
or
mov
insl
xchg
dec
std
sub
popf
or
in
lcall
push
mov
sub
test
cmp
shrb
mov
nop
xor
pop
stc
sub
adc
insb
imul
cmc
pusha
lods
push
sbb
adc
mov
push
sub
je
mov
sub
inc
push
fldenv
push
pop
cmc
dec
jbe
jmp
fstpt
or
cs
jecxz
sub
jo
pushf
aas
sub
and
sub
scas
pop
cmp
or
push
or
lods
add
cs
push
aas
and
rcrl
push
sub
cli
fidivrs
inc
lret
imul
sub
push
outsl
je
xor
loop
xlat
data16
aad
sub
push
and
or
fwait
xchg
fiaddl
sub
lcall
and
add
xor
mov
in
dec
sub
push
cmp
xor
rorl
sub
jne
pop
out
test
ffree
loopne
pop
mov
pop
bound
movsl
and
fldt
or
mov
popa
inc
test
jmp
xor
addr16
xor
mov
pop
out
cmpsb
or
aam
xchg
ja
sub
icebp
test
mov
xchg
mov
aas
and
cmp
nop
sub
repnz
pop
jnp
mov
stos
daa
and
ja
and
pop
cmp
iret
enter
icebp
aaa
push
orb
pop
push
push
lret
adc
int3
cs
aad
mov
hlt
jb
or
sbb
push
les
sub
jno
cmp
mov
mov
push
sub
xor
fisubl
fcomps
ja
call
or
and
rclb
push
std
jg
sti
sub
inc
xchg
pop
inc
adc
or
int
test
push
sub
mov
subl
mov
inc
sahf
dec
pop
cwtl
int
std
repz
sub
push
dec
adc
mov
sub
gs
fiaddl
aaa
sar
pop
adcl
lock
icebp
xor
fcomi
pop
rcr
sub
xchg
imul
test
sub
mov
mov
sub
out
adc
pop
insl
push
pushf
pop
mov
test
pop
out
mov
fcoml
or
jno
pop
sub
fs
pop
xchg
push
xchg
insl
sub
adc
dec
and
loope,pn
cld
test
bound
insl
stc
cmpsb
lret
sub
mov
dec
add
nop
xchg
xor
push
imul
mov
sub
pop
pop
in
sub
rorl
mov
xchg
aas
inc
pop
add
movsb
fildll
push
loope
dec
sub
sbb
jg
aaa
cld
mov
jbe
or
push
cmp
push
sbb
orb
pop
dec
outsb
sub
arpl
add
pop
pop
sub
ss
pusha
hlt
mov
aam
aas
and
sub
lret
sarb
sti
mov
cmp
rcl
xor
std
out
push
or
inc
int3
cmp
sub
jge
and
xchg
int
xchg
fistps
jle
jecxz
jb
adc
loop
sub
in
ret
cmp
sub
push
push
pushf
test
pop
and
out
pop
out
and
sub
rorb
jle
sub
sbb
lock
mov
mov
xchg
jge
fnstenv
rcr
pop
adc
add
jnp
out
fisubl
mov
cmp
push
jle
testl
sub
scas
sub
xchg
push
stc
jno
jne
mov
xchg
xor
bound
adc
lods
int3
push
mov
aaa
adc
pop
ret
imul
xchg
cmp
stc
mov
adc
std
test
pop
sub
sub
sbb
xor
lods
sub
popa
movsl
aam
xor
fsub
shll
sub
add
test
cli
mov
xchg
sub
jnp
jae
out
pop
xchg
adc
adc
add
bound
mov
test
or
sub
sbb
push
sbb
in
and
mov
jmp
and
movsb
adcl
xor
adc
dec
lahf
imul
jne
scas
xor
lea
mov
cmp
sub
aad
pop
push
sub
arpl
fimuls
lret
and
aam
test
push
sub
jge
insb
int
sub
sub
mov
xlat
sbb
js
dec
sub
aaa
loop
movsl
sub
test
mov
jg
xchg
sub
dec
dec
movsl
jecxz
gs
sti
rclb
sub
into
add
push
xor
in
pop
dec
sub
and
aam
fisttpll
call
decl
fs
mov
sbb
addb
dec
frstor
push
daa
jns
inc
cwtl
nop
xchg
lds
ret
lret
and
dec
fisttpll
inc
shrb
cmp
fdivs
fsubl
sbbb
and
imul
lret
test
cmp
fisttpll
andb
test
js
dec
push
repnz
sub
push
es
cmp
insb
push
sub
mov
jae
fsubs
pop
outsb
adc
es
push
mov
test
xor
jg
jmp
sbb
sub
inc
cmp
loope
jnp
cmp
lcall
addb
inc
pusha
cmpsb
jo
mov
xchg
pop
sub
std
sub
inc
addl
aas
cwtl
mov
sub
jp
in
movsl
sub
jo
fs
adc
stos
adc
pop
jbe
fst
das
pop
icebp
mov
stos
dec
inc
mov
xchg
pop
xchg
jmp
mov
sub
in
out
lret
cmp
insb
cwtl
xchg
daa
mov
in
lcall
sub
push
test
pop
sub
xchg
push
push
cmp
dec
daa
adc
enter
int
sub
push
lock
insl
icebp
add
fwait
sbb
mov
mov
bound
jg
mov
xchg
add
gs
popa
mulb
imul
and
inc
jge
js
add
sti
or
shrl
sbb
mov
adc
pop
test
and
add
cmp
mov
lods
sub
popa
pop
add
lret
jbe
mov
int
xor
mov
repz
lahf
push
cvtps2pi
outsb
cmp
lods
rol
pop
insb
pop
lahf
ss
jns
add
sub
mov
and
fsubs
push
dec
sti
ret
rcrl
mov
mov
adc
aas
and
jge
push
xchg
mov
in
in
add
lret
or
out
scas
sub
mov
in
adc
pusha
sub
in
or
push
pop
hlt
sub
xchg
ret
sub
les
call
add
pop
test
rcrb
lods
xchg
sub
xchg
pop
mov
sub
rol
mov
mov
add
pop
fsubrl
sub
hlt
inc
mov
cmpsl
dec
xchg
int3
or
jle
hlt
push
xchg
nop
sub
cltd
xor
xchg
mov
sub
test
in
sub
dec
clc
push
lahf
sub
mov
test
sub
pop
xchg
je
add
loope
and
or
push
xchg
adc
insb
fldt
adc
sbb
xor
enter
hlt
add
mov
callw
push
sub
repz
cmc
jp
aas
add
pop
pop
pop
jae
sub
xchg
sbb
sub
les
stos
arpl
enter
loop
adc
repnz
push
add
in
out
sub
les
hlt
cmp
int3
imul
movsb
dec
bound
mov
sub
xorl
push
lahf
xchg
xor
lea
in
shrl
adc
movl
pushf
fidivl
loope
xchg
add
sbb
hlt
stos
outsl
jl
mov
loopne
in
sub
push
mov
cltd
sub
inc
or
pop
fwait
sub
pushf
aaa
sub
sbb
mov
and
dec
jle
ret
call
cmpl
leave
jecxz
pop
movsl
sub
mov
jbe
sub
shrb
adc
scas
dec
pop
mov
adc
adc
les
daa
sub
sbb
xlat
mov
jg
mov
lds
push
lods
jns
int
cwtl
shrl
cmc
sub
das
je
push
sub
mov
movsb
fidivrl
pushf
and
fldt
sti
mov
push
mov
sub
mov
lahf
and
enter
mov
movl
int3
adc
andl
stc
sub
test
loopne
sub
push
shrl
xor
sub
and
les
sub
xchg
xchg
jne
ljmp
test
xchg
mov
mov
sub
jmp
pop
fs
cmp
push
and
cmpsl
sub
push
push
pop
scas
add
mov
ss
pop
push
xchg
imul
adc
imul
lds
cs
mov
pop
lret
sub
fistpll
shr
mulb
sub
sub
testb
and
out
pop
sbbl
ja
arpl
sbb
adc
shlb
and
lods
stc
or
rorl
notb
in
and
xchg
inc
popf
push
add
jno
xchg
sti
stc
enter
mov
vrcpss
insl
cltd
popa
xor
fstps
sub
mov
stc
pushl
pop
icebp
mov
imul
push
sub
notb
mov
dec
and
sub
jbe
sub
mov
sbb
cmp
lcall
addl
fists
sti
xor
sub
push
lods
int
jg
sub
into
sub
push
int
rclb
mov
adc
cmovs
test
sbb
jb
sub
mov
mov
and
pop
arpl
and
aad
sub
aad
cmp
out
out
inc
dec
jg
mov
sub
lret
cmp
cltd
gs
in
dec
sub
mov
scas
xchg
mov
or
in
aaa
in
scas
cmp
push
cmp
insb
les
test
mov
cmp
outsl
mov
out
imul
xor
cld
jb
or
sub
loop
or
mov
das
fiaddl
sub
pusha
ljmp
jl
sub
mov
sub
fcompl
inc
shrl
dec
out
out
test
jle
decl
gs
pop
lahf
aam
inc
cmpsb
xchg
xchg
subb
mov
addr16
ja
in
test
cmp
push
sahf
cld
push
test
jmp
and
mov
es
push
add
call
test
sub
pop
mov
int3
add
les
sub
xor
jb
mov
and
popa
shlb
pop
insl
sub
xlat
xor
out
sbb
fnstenv
scas
push
dec
dec
inc
loop
fisttpl
aad
addr16
and
sub
pushf
popf
rol
adc
push
lods
rclb
cmp
adc
sub
mov
adcb
lea
jne
xor
int3
sub
movsb
bound
jno
xor
jbe
ss
add
sub
inc
mov
neg
adc
jnp
lret
ret
mov
add
test
push
mov
pop
pop
fdiv
adc
clc
sub
mov
cmp
cs
push
sub
mov
adc
sub
fwait
clc
popa
addr16
clc
sub
sbb
mov
cmc
sub
xchg
and
xor
cld
xchg
sbb
inc
mov
dec
pop
insl
and
adc
lret
sub
div
mov
sub
repz
pop
sbb
sub
cmc
or
sbb
cwtl
inc
insl
mov
lcall
xchg
jmp
ret
in
adc
sbb
jb
cli
loopne
lret
sbb
mov
orb
sub
stc
imul
ror
mov
sub
or
lahf
adc
add
imul
sub
aaa
orl
mov
push
dec
lahf
pop
dec
sub
addr16
add
adc
lds
lock
pop
sub
es
push
test
jecxz
add
sub
xchg
jg
xor
or
mov
fs
push
sub
mov
addl
stos
jne
jo
cli
dec
pop
sub
ja
std
mov
sti
mov
push
aas
or
xchg
sbb
and
shrl
iret
or
add
xchg
add
call
int
std
fisttpll
scas
push
aad
lods
cld
daa
dec
ss
pop
xor
imul
sbb
lock
ret
sub
fdivrs
sub
ds
sub
cwtl
xchg
test
xchg
sub
addr16
sub
cmp
shrb
push
ss
and
inc
out
call
push
xor
out
mov
pop
push
int
mov
jp
test
lret
cs
add
mov
and
fnsave
dec
imul
fisubl
int
add
call
pop
sub
push
dec
mov
and
dec
or
sub
dec
mov
bound
xchg
into
in
sub
jbe
clc
and
mov
aam
mov
outsb
ljmp
pop
pop
xchg
sub
dec
mov
sub
stc
mov
ror
jg
and
gs
fildll
fmul
mov
and
jge
dec
or
jns
xor
cltd
cmpsl
or
scas
sbb
or
cmp
enter
sub
repnz
negl
fwait
test
dec
enter
outsl
fldt
roll
cld
fstpl
int3
sub
inc
mov
popf
or
sub
mov
and
lahf
mov
mov
cli
push
sub
cmp
fsubl
scas
hlt
sub
sub
jecxz
jle
cmp
sbb
rcrl
push
xchg
call
aad
or
es
pop
aas
sbb
daa
inc
lahf
mov
pop
add
xchg
sub
rcrl
stc
inc
push
fists
nop
mov
pushf
pop
sbb
adc
sub
inc
popa
sahf
jmp
mov
adc
mov
xor
cmc
addr16
mov
sub
mov
or
shl
jmp
sub
bound
leave
loopne
xchg
push
mov
aaa
pop
push
das
nop
or
sub
push
fwait
out
sub
int3
and
stc
sub
cli
ja
jl
adc
aas
and
cmp
push
push
loope
xor
lea
add
pop
addr16
jbe
aam
xor
aam
stos
imulb
fisubl
inc
rorb
in
and
adcl
or
imul
and
mov
push
fwait
add
pop
andb
or
xchg
sti
test
mov
fimuls
aam
test
sub
loopne
or
jns
push
add
lods
pop
adc
fidivl
jge
pop
imul
and
inc
mov
add
dec
movq
and
pop
jl
fadd
cmp
mov
test
mov
xchg
and
push
sbb
xchg
adc
and
gs
mov
out
loopne
dec
cmp
sub
adc
stos
adc
jbe
cwtl
pop
mov
out
mov
pop
inc
lods
sub
aam
cmp
inc
jmp
test
jecxz
mov
xchg
xor
shlb
mov
sub
adc
sub
cmp
div
and
ljmp
push
addl
xchg
adc
sbb
cltd
ret
std
jbe
mov
push
xlat
sub
loope
jnp
popf
cmp
aam
int3
cmpsl
divb
loope
int
jo
cltd
push
sub
jb
adc
sbb
push
jb
stos
sbb
pop
movsl
call
lahf
gs
sar
ror
lcall
add
fisttpll
jl
icebp
iret
xchg
sub
aaa
pop
cld
inc
adc
pop
sub
xchg
jl
sub
mov
sub
mov
sub
or
jne
fdivrs
sub
mov
fmul
inc
xchg
xchg
rclb
outsl
sahf
mov
leave
xchg
enter
loopne
sub
decb
rclb
sbb
dec
lret
cs
xorl
sub
shr
bound
std
dec
mov
mov
fdivs
add
sub
mov
aad
dec
push
xchg
pop
and
sub
sub
call
shrl
movsl
mov
jne
sysret
pop
sub
fistpll
loop
xor
fwait
in
pushf
fs
mov
call
js
jl
adc
imul
pop
popa
vmread
jg
mov
nop
cmp
pop
movsb
mov
daa
mov
call
sub
rcr
push
cli
sub
cmp
pop
out
xor
out
outsl
mov
and
jge
sub
sub
in
ljmp
jbe
sahf
je
rcl
test
cmp
cmp
testb
jae
dec
scas
subb
xchg
pop
or
ljmp
sub
xchg
and
cld
lahf
adc
cmp
js
dec
inc
loop
test
sbb
pop
pusha
das
int
mov
mov
mov
sub
test
sub
and
inc
adc
daa
sbb
hlt
fwait
sub
mov
and
pop
xchg
lods
jle
sub
int
out
or
arpl
imulb
cld
pusha
or
in
mov
jp
push
pop
mov
jl
test
jne
ljmp
icebp
ret
pop
sub
jmp
stc
sub
imul
cmpsl
sbb
xor
test
popa
inc
mov
lret
daa
pop
rcr
sub
xor
aaa
arpl
cmpsb
jnp
cmc
xchg
lret
lods
dec
sub
sbb
fildl
xor
jae
loope
sub
jecxz
sub
les
sub
pushf
leave
adc
data16
sub
loop
jmp
and
push
cmp
daa
pusha
dec
data16
subb
adc
jne
sbb
int3
inc
sub
sbb
cli
sub
rclb
gs
fwait
stos
push
repz
pop
sub
lea
or
mov
iret
cmp
mov
or
sub
dec
push
sub
mov
sub
in
scas
fcmovnu
sub
cltd
dec
push
cvtps2pi
xchg
push
mov
sbb
fimuls
hlt
sub
mov
pop
and
jb
jns
sub
movsl
mov
jno
testl
push
sub
inc
in
adc
sub
xor
popf
push
sub
pop
jo
into
sub
aam
fcom
sub
ljmp
pop
sub
jmp
add
inc
rcrl
je
pop
sub
bound
jmp
ret
ss
cmp
or
divl
loopne
sub
cmp
rcll
pop
sub
cmpb
cmp
add
sub
clc
jp
xor
addr16
sub
sub
test
ds
cmpsb
mov
js
mov
sub
mov
aaa
sub
test
push
dec
ss
xchg
cvtps2pi
mov
mov
in
pop
and
lret
pop
xchg
orl
cmp
and
popf
cltd
cmp
flds
int
xorl
les
loop
lds
inc
adc
shrb
sub
out
xor
stos
sub
jle
mov
sub
jae
mov
rolb
daa
repz
jl
pushf
fnstsw
xchg
icebp
pop
sub
sub
pop
sub
or
xchg
das
sub
cmp
repz
mov
inc
sub
out
push
dec
sub
push
mov
loope
pop
xchg
cmp
int
pop
push
add
es
icebp
cli
xor
sub
insl
sub
cmovl
mov
adc
das
mov
loop
mov
lret
mov
jno
xor
jmp
test
out
dec
sub
dec
js
add
cmp
sub
xchg
test
mov
pop
and
and
fsubs
xor
dec
xor
inc
aas
sub
pop
sub
cli
jbe
mov
lcall
sub
and
sub
inc
adc
sbb
and
sub
and
into
rol
pop
xchg
lea
sub
xor
mov
xchg
inc
stos
inc
mov
sahf
jge
cmp
xchg
ljmp
sbb
or
pop
mov
scas
or
adc
pop
in
adc
cmp
stos
sahf
push
pusha
test
sub
test
or
mov
cmpsb
mov
sub
add
sbb
cmp
push
dec
sub
fwait
inc
pusha
sti
xor
in
pop
xlat
mov
sub
jl
or
adc
dec
xor
imul
clc
mov
adc
mov
sub
lret
xchg
sub
icebp
xchg
faddl
addr16
xchg
and
lods
inc
scas
loop
pop
lret
scas
sub
mov
test
imul
je
lods
sub
loopne
sub
or
mov
bound
insb
inc
inc
xor
sbb
sub
data16
cs
xor
fnstsw
add
stos
inc
add
gs
lock
pop
stos
sub
or
icebp
sub
pop
jecxz
gs
sbb
lret
fwait
dec
mov
call
cmp
loop
jle
loopne
ret
push
and
or
andb
mov
ror
sub
loope
xchg
xchg
sub
dec
cli
test
sub
dec
imul
mov
push
jge
lock
sub
movsl
mov
iret
sub
sbb
pop
push
adc
imul
sub
and
fidivrs
mov
clc
xchg
in
sbb
push
sub
dec
arpl
in
mov
jo
add
sub
push
aaa
xor
decl
imul
xchg
lea
jg
jb
ja
leave
or
in
jno
call
or
add
jo
jl
inc
fistpl
adc
insb
cmp
out
pop
cmp
add
adc
daa
and
dec
jmp
or
stc
repnz
and
js
sub
nop
mov
mov
ficompl
lcall
nop
mov
xchg
cmpsb
cmp
and
push
loope
sub
shrb
loop
dec
pop
call
xchg
rcl
lret
out
mull
inc
adc
xor
ljmp
rcrl
sub
cmp
sub
aad
xor
cmpsb
dec
test
adc
fsubrs
xor
sbb
lds
les
jp
and
test
mov
mov
sub
shlb
or
std
mov
mov
ret
cmpsl
movsb
and
loop
pop
scas
xchg
sub
push
pop
sub
pop
and
daa
std
dec
dec
adc
insb
sub
cs
loopne
je
sbb
adc
pop
jmp
mov
stos
mov
cs
and
rol
lahf
or
fwait
enter
push
ja
sub
sub
out
xchg
cmp
adc
xlat
adc
inc
int
daa
push
lahf
cvtpi2ps
push
scas
mov
aas
xchg
pop
sub
jno
jbe
sub
mov
jae
lea
cmp
insl
cmp
int3
xor
fldcw
pop
stos
mov
into
pop
mov
lret
test
imull
mov
sub
fisubs
in
adc
dec
and
dec
and
into
ret
sub
aaa
push
rcl
call
fdiv
outsb
popf
movsb
or
sub
pop
adc
xchg
cltd
xor
out
dec
pop
cwtl
pop
adc
shll
xchg
mov
sub
sbb
push
data16
cmp
orl
pop
xchg
push
ss
stos
mov
mov
repnz
sub
and
sub
sarl
and
out
pusha
lods
sub
and
jge
imul
inc
mov
sbb
sub
scas
stos
xor
js
in
mov
cs
push
imul
or
test
lds
aam
xchg
xor
cmpsb
sbb
insl
scas
adc
rorl
cs
sbb
sub
mov
push
and
ffree
mov
sub
adc
sub
subl
in
or
or
sub
test
lret
and
xchg
and
add
mov
ja
adc
cmp
xor
add
fisttpll
sub
sub
or
sub
ret
push
xchg
hlt
lahf
dec
sub
jb
adc
insb
fisubrs
loope
jecxz
stos
xchg
xor
dec
aam
add
inc
mov
sub
sub
mov
adc
xlat
pop
cmp
mov
loope
test
mov
cwtl
sub
lahf
adcb
sbb
out
mov
cmp
mov
sub
loop
shrl
cmp
push
adc
sbbb
sub
jne
in
pop
int3
cmp
sub
pop
stos
cli
xor
push
pop
imul
and
pop
push
sub
and
lea
cwtl
sub
xor
xchg
lods
arpl
pusha
cli
sub
push
jnp
repz
repnz
push
testb
js
pop
call
cwtl
sub
in
sbb
int3
lds
rorl
mov
lods
add
pop
or
inc
movsl
dec
or
dec
mov
pop
adc
pop
or
xlat
bound
idivl
rcll
sub
inc
sbb
fisubrl
xor
dec
sub
mov
aam
or
lcall
mov
jmp
mov
mov
sub
scas
adc
jmp
xlat
sub
mov
mov
stos
cld
js
cwtl
in
pop
loopne
mov
cs
in
push
out
lds
mov
sub
adc
fcompl
frstor
lret
out
sub
clc
cmpsl
inc
push
sub
addr16
xchg
sbb
movsl
lods
sub
in
inc
xchg
cmpsl
mov
es
jbe
insl
xor
fmuls
lock
sub
inc
push
inc
jp
fadds
xchg
movsl
sub
fisubrs
repnz
push
mov
inc
dec
sbb
loope
mov
mov
push
and
adc
and
iret
pop
inc
jo
sub
mov
pop
xchg
xchg
sub
adc
lds
sub
aas
sub
xlat
or
fwait
jne
xor
cs
repz
fldcw
mov
shrb
shl
cs
push
sub
icebp
dec
adc
sub
pop
shl
mov
stos
xchg
fcmovnbe
push
or
adc
shrb
mov
pop
sub
insl
out
add
stos
and
test
adc
xchg
stos
ljmp
nop
sbb
or
push
iret
sub
pop
lret
inc
test
inc
std
xor
push
push
dec
mov
jl
inc
xor
mov
dec
into
mov
push
sub
mov
fimuls
pop
mov
dec
mov
rorl
and
stc
add
add
mov
mov
lcall
mov
dec
scas
pop
push
push
jg
and
imul
icebp
sub
mov
repz
ret
unpcklps
pop
outsb
or
stc
sub
pop
cld
xchg
pop
sub
mov
mov
mov
jmp
test
sarb
xor
imul
inc
pusha
pushf
or
bnd
arpl
xchg
lahf
adc
lea
mov
and
cmp
push
in
fcoml
cs
sub
push
push
sub
jp
test
push
sub
outsl
mov
nop
add
cld
jp
push
adc
andl
mov
push
sbb
dec
test
sub
mov
les
push
sub
test
faddl
sbb
dec
push
xor
and
dec
mov
jle
xlat
jno
and
loop
jg
sub
push
lret
add
cmp
or
les
jae
push
jno
inc
sub
test
arpl
or
sub
lahf
das
push
lock
adc
insb
xor
dec
jnp
or
lock
xor
popa
mov
xchg
mov
xor
or
mov
repnz
inc
fldenv
clc
mulb
xor
lock
jecxz
popf
sbb
into
call
stc
ds
dec
sub
das
loop
mov
or
sarl
push
addb
les
loopne
int3
sub
sahf
insb
nop
cli
sub
roll
mov
adc
xchg
push
ss
xor
sbb
movl
shrl
push
andl
inc
repnz
or
sbb
cmp
jl
sub
scas
loop
or
out
mov
mov
adc
dec
test
push
fmulp
pop
push
dec
xor
cli
insb
mov
pop
jge
cmp
mov
movsl
in
push
cmpsl
daa
or
dec
push
rcll
sub
pop
cmp
int
mov
inc
cmp
aam
dec
test
out
xchg
ljmp
repz
jmp
pop
leave
sub
and
std
jl
or
mov
lcall
repz
outsl
loopne
and
mov
sub
stos
mov
jle
adc
fisubs
int
mov
sub
fsubl
clc
xor
sub
nop
inc
cmp
sub
cmpsb
sub
xor
cmp
aad
mov
add
std
mov
repz
or
sub
jbe
xor
addl
cmpsl
test
sub
cmp
int
sub
icebp
push
or
repz
sub
cmp
push
lock
jne
adc
sub
push
pop
xor
push
mov
add
ljmp
loopne
fsts
sbb
and
sub
sahf
cmp
ret
dec
lock
pop
adc
xor
xor
mov
bound
mov
icebp
push
sub
sub
pop
cltd
jmp
fbstp
stos
enter
inc
out
ds
int
mov
rol
and
out
adc
ds
repnz
push
sub
js
push
xchg
mov
pop
cmp
adc
lods
mov
insl
out
cmp
movsl
sbb
shrl
adc
bound
pop
mov
lret
pop
sbb
jl,pn
and
loop
dec
mov
negb
rcll
dec
and
cmp
and
daa
xor
dec
mov
popf
nop
subb
push
and
xchg
inc
fs
dec
mov
fsubr
push
jg
push
ljmp
jbe
xor
xor
mov
fsubrs
add
pop
inc
and
in
es
mov
outsl
mov
mulb
and
xchg
inc
cmp
sub
jbe
adc
mov
and
jge
out
xchg
lods
fnsave
in
mov
rcrb
cmpsb
gs
mov
in
test
test
push
pop
mov
cmp
test
loopne
pop
sub
mov
jnp
rol
cmpsb
xchg
icebp
gs
mov
jae
cltd
mov
adc
sbb
push
fwait
das
out
je
sbb
sub
cmp
adc
cltd
sub
lret
loopne
sub
jnp
adc
scas
inc
and
add
mov
out
test
pushf
rcll
sub
jae,pn
in
mov
sub
dec
cmp
cld
mov
dec
or
pop
int
xor
daa
cmp
adc
mov
adc
insb
fisttpll
jnp
clc
cmpsb
inc
and
loope
mov
sbb
mov
xor
pushf
sub
hlt
mov
jmp
push
dec
jp
and
inc
jae
scas
fwait
in
lret
rol
jecxz
aam
xor
daa
leave
adc
mov
push
popa
lret
sub
cwtl
cmp
mov
test
das
push
addr16
int3
jb
sub
cli
sub
sti
push
or
xor
inc
push
pusha
ja
adc
leave
sub
pop
data16
sub
movsl
sub
jmp
mov
arpl
or
cli
outsl
sbb
dec
or
andl
mov
inc
iret
add
test
sub
inc
cltd
sub
xchg
mov
xchg
and
xchg
aaa
sub
subb
shll
inc
dec
sahf
lods
sub
add
loope
sub
in
call
rcrb
mov
popf
adc
mov
cmpsb
sub
adc
xchg
mov
aam
fists
incl
stc
pop
xlat
sub
fstps
inc
and
push
mov
inc
subb
jmp
ret
jl
out
sub
add
inc
insb
lret
lods
xchg
push
cmp
xor
push
sub
push
out
subb
out
imul
scas
repnz
sub
ret
addr16
mov
pop
inc
and
sub
sbbl
jo
fdiv
adc
shrl
pop
push
sbb
sub
push
mov
imul
cli
icebp
lock
or
xchg
cmp
sub
ficoml
ljmp
sub
sub
or
mov
sub
shll
cmp
and
sub
cmpsl
xor
fstl
push
and
add
sbb
loop
popa
test
mov
push
les
add
and
out
rcll
pop
daa
pusha
sbb
push
sub
cmp
add
jge
fistl
jnp
sub
sub
sahf
adc
icebp
sub
add
and
xchg
aam
sub
enter
and
into
mov
ret
add
sub
fldenv
sub
fidivrl
test
sbb
xchg
sbbb
in
jno
sub
enter
mov
fbld
int
mov
jl
xor
mov
lahf
sub
out
sti
jbe
mov
inc
jg
cmp
and
imul
pusha
fimull
ficoms
and
adc
daa
ror
mov
inc
shll
mov
fdivrl
pop
insl
sub
pop
sub
std
pop
int3
xchg
dec
movsl
sub
lods
loope
leave
sub
pop
mov
int
or
sub
repz
push
aad
cli
xlat
outsb
pxor
cmpsl
mov
mov
ss
xor
mov
cli
mov
cmc
mov
shl
mov
sarl
adc
fmull
jbe
inc
scas
jle
mov
into
and
xchg
dec
dec
and
dec
aad
ds
and
sahf
push
mov
inc
sub
pop
and
adc
fsubrl
push
add
lret
into
mov
test
cltd
jle
out
hlt
push
cmpsb
push
lea
mov
arpl
into
sbb
jae
adc
addl
loopne
inc
mov
movsb
adc
sub
dec
or
push
fsubr
pop
dec
hlt
sbb
sub
lea
inc
pop
sub
xchg
push
bound
cmpsl
mov
dec
ja
xchg
and
jbe
arpl
jo
dec
cmp
mov
push
sub
push
jns
test
mov
sub
je
mov
cwtl
ret
push
frstor
lahf
and
cmc
rclb
sub
and
push
sbb
xor
add
mov
daa
adc
mov
cmp
adc
push
cmpsl
sub
mov
imull
cs
movsl
bnd
jo
rclb
cli
mov
cmp
jb
jl
mov
xchg
xor
lea
inc
idivl
pop
sub
jge
lods
mov
ds
subb
push
push
je
mov
jne
stos
sbb
xor
push
mov
sub
test
imul
xchg
cmp
lea
mov
xchg
lret
sub
iret
roll
sub
mov
sub
repnz
nop
dec
cmp
sub
sub
pop
mov
repnz
in
sub
or
out
sub
mov
push
jo
jecxz
mov
or
inc
leave
test
mov
mov
inc
mov
lret
adc
call
sub
inc
cmc
mov
adc
xor
sub
mov
mov
aam
popa
call
ljmp
sbb
jmp
mov
xor
fiaddl
mov
sub
scas
pusha
gs
adc
sub
or
pop
cmp
test
out
subb
sbbb
pop
aam
mov
sub
fstpl
aad
adc
xor
aam
scas
and
sbb
mov
ret
and
outsb
push
test
mov
ljmp
rclb
xchg
fmuls
or
dec
mov
add
jp
cmp
in
xchg
push
jg
outsb
mov
cli
sti
scas
pusha
out
xchg
dec
cmpsb
push
lods
mov
jnp
or
pop
cmc
cmp
addr16
sub
adcl
push
xor
mov
stos
cmp
std
sub
or
stos
push
aas
jg
inc
adc
mov
xor
or
mov
sub
stc
inc
mov
dec
test
in
sub
jnp
sub
cli
jmp
mov
add
ja
in
subl
adc
rol
cwtl
sub
mov
cmc
int3
or
out
stc
or
xor
adcb
mov
sub
push
roll
jno
in
insl
enter
mov
cltd
in
iret
push
and
out
inc
lods
daa
pop
sub
xor
inc
xor
mov
adc
mov
dec
or
add
pop
rcr
test
sub
and
enter
xor
call
xor
xchg
mov
inc
out
sbb
mov
dec
fisttps
inc
mov
dec
scas
outsl
xor
ret
xchg
sbb
jbe
xor
sub
mov
repz
pop
invd
arpl
jg
mov
inc
dec
inc
ret
pop
das
sub
and
mov
sbb
sub
pop
insl
shr
sub
xchg
pop
stos
mov
out
push
pop
mov
adc
sub
jge
lcall
daa
adc
adc
jl
sahf
shrb
push
adcl
ss
push
or
sub
je
pop
pushf
sub
add
into
xor
inc
mulb
xor
xchg
subb
ss
jne
das
sahf
sub
and
pusha
test
pushf
sbb
sub
repz
add
movl
subb
or
jns
jle
sub
cmp
sbb
or
mov
mov
push
lret
or
cmp
sub
push
ss
sub
mov
je
sub
popa
in
lahf
addr16
fdivl
adc
insb
lea
jnp
sub
orl
lods
sub
pushf
mov
xchg
and
test
sub
jecxz
fnstcw
out
cmc
mov
dec
scas
sub
jae
movsb
ror
mov
sub
pushf
pop
sub
mov
mov
fidivrl
ret
xor
sbb
pop
data16
cmpb
push
pop
or
int3
push
pop
xor
cli
push
imulb
test
inc
sub
imul
clc
sub
add
push
xchg
xchg
sbb
sub
es
sub
push
bound
or
repnz
sub
jl
rcll
call
mov
addl
sbbl
mov
jecxz
push
sub
test
jle
sub
je
cmp
pop
fnstsw
jb
sbb
sub
neg
xor
ss
add
push
adc
insl
stos
xor
sub
pop
xchg
cmpsb
mov
imul
cld
test
sub
and
ljmp
jne
sahf
jns
sub
inc
pop
cld
sub
ret
adc
stos
cwtl
scas
mov
int3
loopne
jle
hlt
cmp
sub
mov
xchg
add
pop
pop
adc
adc
lret
std
sub
clc
int
in
and
addr16
add
sbb
xor
addl
push
xorb
push
adc
mov
sbb
sub
dec
add
xor
jp
jecxz
xchg
inc
pop
mov
idiv
test
in
test
insl
cmp
pop
inc
sub
cmp
push
jecxz
mov
sub
fldt
sbb
mov
inc
sbb
mov
xor
mov
xor
xchg
sbb
add
inc
mov
mov
sarl
dec
scas
adc
add
xor
push
mov
out
ja
mov
sub
mov
sbb
add
adc
fldt
sub
dec
push
inc
ds
imul
xchg
xchg
push
adc
les
or
outsl
and
mov
push
adc
data16
sbb
and
xlat
jne
sub
in
popa
lret
sub
repnz
loop
sub
in
cltd
mov
pusha
dec
sub
push
and
lods
stos
js
cmp
mov
sysexit
lods
shll
nop
popf
sub
mov
xor
sub
daa
leave
out
cmp
jle
dec
push
cmp
sub
sub
cwtl
int
add
or
mov
mov
push
pop
in
outsb
mov
pop
notl
cmp
sub
mov
push
mov
stc
sub
into
cmp
or
add
jg
sub
jge
sub
push
in
jno,pt
out
push
test
sahf
sub
xor
or
mov
enter
mov
inc
in
scas
sub
daa
adc
pop
in
cmp
mov
push
mov
sub
adc
repnz
in
pop
jmp
fiadds
mov
sub
xchg
shrl
xor
add
and
hlt
pop
cmp
xchg
dec
movsl
add
lock
repz
out
pop
sub
pop
xchg
mov
and
dec
or
in
sub
add
push
adc
push
push
test
sub
in
jge
dec
jp
pop
ret
lock
stc
push
mov
pop
insb
push
fidivrl
jnp
movsl
std
sbb
xor
adc
popa
pop
sub
inc
call
shrl
movsb
pop
add
inc
jg
cmc
and
aam
fistpl
sub
jbe
xchg
int
push
jecxz
and
in
sarl
mov
pop
shlb
adc
jp
hlt
pop
and
pop
mov
add
int3
out
pop
sub
cli
cmp
sub
imul
or
fstps
push
test
sub
outsl
cmp
imul
sub
std
push
stos
sub
mov
repz
dec
add
add
mov
mov
lds
and
shll
lret
sub
aaa
jae
repz
test
mov
cltd
xchg
push
jb
scas
sub
movsl
xorl
sub
push
in
repnz
aas
adc
sub
mulb
xchg
adc
lods
mov
aam
nop
dec
daa
add
aas
and
xchg
clc
shrl
outsl
pop
sub
jns
inc
icebp
out
nop
pop
ret
rcrb
and
xchg
mov
mov
addb
cli
adc
mov
stos
lret
fldenv
imul
or
and
adc
mov
cmc
adc
mov
pop
inc
fsubrl
fistps
inc
rcrl
fs
xlat
mov
pop
push
aad
daa
cltd
sub
push
sbb
or
sbb
out
arpl
cmp
lcall
aas
xchg
inc
mov
ljmp
daa
insl
xchg
mov
mov
or
mov
ret
cmp
sub
scas
inc
cmp
pop
push
lcall
mov
dec
sub
adc
cmp
sub
push
aas
xor
push
rcrb
push
xor
mov
jp
test
and
pop
inc
mov
push
add
iret
push
sub
jne
sbb
and
lea
sub
xchg
sub
push
fs
shrb
dec
xorl
out
sub
js
adc
and
and
and
and
orl
enter
mov
dec
mov
sbb
push
mov
sub
test
inc
xor
cmp
cli
bound
cmp
inc
lret
jle
sub
stos
add
out
jne
idiv
xlat
sub
andb
fnstsw
bound
dec
call
shrl
popf
sub
xchg
mov
lock
pop
lods
clc
fildll
scas
std
dec
dec
aad
inc
add
jl
lock
fbld
inc
jbe
cs
inc
ret
xor
mov
jns
sub
mov
mov
sarl
ss
sub
sbb
adc
fwait
mov
lcall
xor
shr
mov
out
sub
daa
mov
xor
sub
arpl
vmovupd
sub
inc
xorb
mov
aam
cmp
fcoms
push
xor
lcall
lret
outsl
push
out
cmp
cld
bound
adc
sbb
mov
xchg
sbb
jnp
xchg
fscale
sub
sarl
mov
add
add
aaa
hlt
lahf
cmp
andl
sub
dec
es
sub
mov
sti
xchg
sub
shrb
sub
in
aad
cmp
push
sti
pop
mov
test
mov
in
je
addr16
fstpl
repz
xchg
sub
adc
insb
jge
in
jnp
push
sub
xorl
fst
mov
or
xor
fmull
sub
insl
inc
lods
pop
xor
movsb
dec
push
les
rclb
jecxz
xchg
bound
mov
decb
loop
pop
xchg
push
std
jp
lods
pop
sub
pushf
dec
push
subl
mov
andb
jae
adc
sub
loopne
push
mov
jecxz
push
lea
gs
data16
jnp
fistl
push
icebp
sub
push
xchg
dec
jp
fisubl
mov
and
jl
cmp
mov
xchg
mov
je
sub
int3
gs
cltd
or
movsb
add
lret
fwait
xlat
mov
mov
rcrl
test
mov
loop
jnp
jb
sub
and
testl
sbb
aam
sub
ja
and
and
mov
repz
pop
inc
dec
mov
adc
ljmp
cmpsl
xor
jmp
xchg
in
sub
and
push
lds
nop
jb
jge
jmp
addr16
xor
xchg
push
mov
adc
inc
sub
adc
sub
push
mov
stos
xchg
cmpb
and
inc
mov
imul
loopne
lret
jne
fsubrs
lcall
sub
inc
add
repnz
sbb
or
xor
std
jp
sub
aad
ret
sub
loopne
fbstp
or
lock
push
fisttpl
dec
imulb
jp
testl
inc
ljmp
in
into
xchg
cmpb
cltd
or
jb
xchg
cmp
ljmp
push
xorl
lock
sub
mov
sub
std
mov
and
xlat
sub
sbb
lock
mov
jmp
pop
mov
pop
rolb
add
adc
loop
fnstsw
aad
lds
cmp
ja
sub
fwait
mov
mov
ljmp
and
mov
mov
inc
jnp
push
popa
movb
xchg
imul
jno,pn
mov
push
push
sub
std
pop
insl
iret
push
sti
adc
sbb
les
bound
sahf
lret
popa
sub
xor
add
int
pop
ficomps
mov
testb
nopl
sub
jno
or
bnd
call
dec
lcall
mov
sub
xor
xor
jmp
mov
out
jg
nop
sub
sub
int
scas
pop
pop
xchg
sub
fdivrs
sub
inc
int
or
inc
pop
xchg
push
mov
mov
mov
add
shlb
mov
and
in
test
xor
mov
in
out
mov
orl
jge
out
sub
in
jecxz
push
sub
sahf
sbb
sub
or
xchg
inc
mov
cmp
add
and
xchg
lock
and
and
outsl
xchg
ret
or
iret
dec
cld
int
lahf
sub
xchg
arpl
or
notl
sbb
mov
pusha
cmpl
rcrb
add
push
out
fcoml
or
inc
jae
mov
bound
push
arpl
sub
test
xchg
xchg
scas
enter
ljmp
fwait
fwait
lods
cmp
xchg
or
cmc
and
pop
sub
inc
xchg
lock
adc
aas
mov
sub
insb
add
sub
mov
inc
and
out
mov
or
and
sub
scas
mov
stos
fldcw
fisttpll
dec
sbb
orl
or
sbb
std
les
jle
lcall
ret
jmp
loop
jg
or
adcl
sub
mov
nop
jbe
sbb
fildll
out
movsb
sub
mov
adc
daa
std
ret
push
in
mov
lret
xor
mov
stos
add
fstps
pusha
sub
xchg
fcmovb
sub
push
pop
jb
repnz
sub
jg
and
loopne
jl
fdivrs
jp
sub
sarl
mov
loopne
add
fwait
sub
jecxz
sub
test
mov
ljmp
leave
ret
hlt
jns
stc
cmpl
or
clc
push
rcr
sub
sub
mov
testb
mov
rcl
push
daa
inc
daa
cli
clc
inc
ljmp
int
adc
adc
and
mov
cmpl
mov
js
sub
cmp
push
mov
negl
xor
inc
loopne
scas
xchg
cmp
out
or
stos
movsl
xor
ljmp
push
test
sub
inc
clc
and
adc
not
sub
sbb
mov
sub
sub
movsl
mov
push
sub
fcmovnu
enter
push
lea
sahf
lcall
mov
rorb
insb
sub
add
mov
stos
xchg
sub
xchg
dec
sti
sub
call
xchg
das
loope
mov
jae
andb
cmpsl
gs
cmp
pop
lea
sub
mov
out
or
adc
daa
sub
insl
push
aas
mov
pop
sub
pop
sub
mov
jecxz
lahf
mov
rorb
push
push
jg
add
shrb
icebp
sub
into
out
pop
aam
in
ja
push
daa
xchg
cli
test
clc
sub
cwtl
jmp
sbb
or
movsb
cmp
ds
dec
sub
or
xchg
xchg
sbb
aas
cmp
loopne
cs
jnp
lds
int3
insl
negl
inc
sub
cwtl
in
xor
out
shll
or
mov
push
inc
pusha
jns
and
and
divb
jg
dec
int
jecxz
and
ret
out
js
mov
pop
mov
xor
sub
ljmp
sub
arpl
push
xor
mov
jecxz
xor
or
arpl
pop
ds
mov
pop
into
xor
sub
xor
pop
mov
jbe
mov
dec
insl
call
pop
mov
fmull
sbb
test
leave
rorb
cmp
cmp
mov
aad
and
popf
inc
or
or
bound
pop
adcb
lcall
sahf
sbb
fnstsw
rcrb
cmp
or
test
test
xor
sub
sbb
xchg
cmpsb
and
cld
dec
inc
sub
xchg
ret
inc
sarb
sub
nop
addb
test
sub
pusha
dec
pop
ja
popf
push
sub
shrb
add
jge
xchg
hlt
lea
into
jae
add
and
xchg
call
lock
mov
sub
std
xor
je
mov
cmp
or
fcoms
push
or
sti
mov
test
sub
mov
enter
lahf
or
mov
adc
sub
cwtl
sub
pop
xor
jecxz
xlat
mov
cmp
pop
sub
mov
scas
sub
xor
add
sahf
and
cmc
aas
mov
dec
xor
jbe
mov
xchg
sub
mov
inc
sbb
dec
mov
or
sub
dec
das
or
sub
jecxz
mov
sub
sbb
push
sub
xor
int3
push
cli
add
movsb
or
scas
imulb
adc
dec
jbe
adc
cmp
fs
in
rorl
mov
mov
iret
in
negl
loope
sub
fidivrl
cli
aas
or
dec
sub
jecxz
popa
jle
mov
mov
test
jl
shlb
pop
movsb
ss
jb
sub
dec
leave
xor
aas
jo
cmp
pop
shlb
lock
sub
jo
movsl
stc
ret
ja
jp
or
xor
push
sub
xor
adc
push
cmp
xchg
mov
aam
in
daa
test
sub
xlat
rcl
jne
jmp
sub
dec
or
stos
es
clc
jnp
nop
data16
jmp
ret
xchg
stos
mov
pushf
sti
mov
cmp
aas
push
scas
pop
in
and
ljmp
dec
imul
mov
push
cmp
dec
out
sub
inc
addr16
cmpsb
and
and
xchg
sub
scas
mov
fs
mov
xchg
adc
sub
xor
add
sub
adc
lock
xchg
lods
es
notb
cmp
fwait
mov
ljmp
insb
mov
mov
rcrl
or
sahf
sub
push
xchg
dec
push
and
adc
inc
test
and
std
pop
ljmp
les
adc
xor
mov
push
cmp
or
imul
inc
and
addr16
sub
dec
push
sub
lcall
xchg
loopne
clc
out
sub
fisttps
jmp
test
lds
and
arpl
push
btc
sbb
adc
sub
push
dec
sbb
sub
enter
sub
incb
popf
sub
adc
or
in
xorb
dec
cli
sub
add
lods
sub
lret
or
ja
cs
pop
inc
add
sub
add
jle
mov
pop
dec
dec
int3
lret
sub
or
out
inc
mov
fmuls
sub
mov
pop
incb
lods
lahf
cmp
jge
xor
outsl
jo
lods
adc
jbe
leave
pop
scas
es
hlt
push
out
int
mov
repz
pop
ret
outsb
enter
inc
mov
push
pop
mov
popf
sahf
ss
xor
mov
sub
dec
scas
lds
shrb
cmp
adc
shrl
cmpsl
popa
pop
inc
and
sub
sarb
xchg
pop
fsubl
jl
push
aaa
add
sub
scas
stc
or
ja
in
enter
and
pop
sbb
sub
pop
add
xchg
sub
cld
cmp
push
les
sub
add
sub
mov
das
pop
sub
lds
xor
fdivs
or
sub
or
push
lcall
sub
push
sbb
and
rcrb
sub
out
inc
sub
add
xchg
ret
sub
mov
sub
ljmp
cmp
aam
mov
sti
stc
add
pop
pusha
sbbb
out
ret
push
pop
push
lahf
repnz
stc
lods
out
push
sub
insb
testb
sub
sbb
xor
sub
popa
jge
sbb
cmc
xchg
mov
sub
fxam
mov
fcompl
ret
popf
fstpt
and
stos
jecxz
dec
add
les
enter
push
lcall
sub
cmpsb
lds
lock
nop
inc
shrl
sub
lret
dec
jne
xor
push
add
pop
adc
add
imul
divb
sub
sub
lea
in
data16
dec
jbe
dec
push
mov
pop
ds
sub
loop
push
dec
jl
jge
mov
lahf
aas
dec
pop
fstl
and
ret
lret
xor
in
ret
test
cmpsb
rcrl
add
sub
fwait
cmp
sub
popf
inc
stc
cs
jno
insb
pop
in
mov
cmp
enter
add
mov
mov
call
test
push
mov
inc
add
add
lret
sahf
pop
fisttpll
arpl
jl
movsl
cmp
aam
fninit
daa
lods
addb
mov
xlat
ds
sub
and
dec
pushf
jns
movsb
dec
nop
insb
cs
shll
and
jnp
movsb
stos
pop
inc
dec
or
mov
cmp
movsl
and
daa
daa
in
push
dec
jp
fildll
shl
sub
adc
pop
or
lret
sub
lcall
cs
rep
mov
sub
xor
sub
mov
aad
inc
adc
testb
sarb
cmp
lock
jg
lret
mov
xor
pop
jp
adc
addr16
fldl
sti
testl
ss
adc
mov
test
clc
cmp
cmpsl
sub
cmp
pop
repz
sub
les
call
mov
adc
fistps
aas
shlb
sbb
adc
lret
add
idivb
cvtps2pi
push
nop
mov
xchg
mov
adc
push
ljmp
xchg
out
dec
inc
out
leave
sub
mov
mov
adc
or
insl
sub
aam
add
sbb
int
cmp
dec
push
sub
fcmove
sub
loope
pop
sub
xchg
pop
sub
cmpsl
xchg
inc
mov
jno
xor
pop
mov
int
pop
mov
lret
sbb
shrb
int3
cmp
and
hlt
push
imulb
mov
mov
sub
sbb
int
rcll
and
cs
orb
mov
jge
dec
jg
sub
push
xor
std
cmp
sub
adc
sub
stos
inc
push
jbe
xlat
sub
int
sub
mov
repz
jo
psubusw
sub
movsl
inc
in
xor
or
push
push
fcompl
mov
sarb
adc
cmp
mov
ljmp
dec
mov
cltd
pop
jge
cmpsl
ret
xchg
sub
gs
mov
sub
mov
pop
ja
lret
inc
pop
mov
push
fsubrl
push
mov
xor
pop
mov
outsl
push
sub
pop
repz
push
xor
and
push
mov
jbe
inc
jnp
xchg
pop
sbb
data16
rcll
xchg
mov
dec
sub
sub
xchg
int
mov
dec
sbb
pusha
push
and
and
mov
and
pop
icebp
out
pop
mov
pop
dec
xor
mov
test
jl
in
sub
cmp
sub
mov
test
test
rcr
je
leave
and
mov
sub
mov
adc
insb
lcall
jb
aaa
xchg
and
mov
adc
popa
and
das
cld
clc
and
nop
fwait
add
scas
vpsubusw
test
lea
sub
sbb
jae
sub
mov
mov
rcrl
lds
push
and
test
sub
push
iret
es
push
cltd
and
push
and
jns
mov
imulb
jne
adc
dec
dec
movsb
add
and
fildll
inc
adc
sub
xor
mov
add
mov
sahf
sub
movsb
mov
mov
push
ljmp
mov
jno
mov
lret
in
adc
lods
lods
fstps
mov
and
add
aaa
orb
pop
insb
jmp
xor
add
pop
add
push
cli
jb
movsl
add
dec
addr16
jmp
sub
outsl
jb
dec
sub
or
mov
xorl
shrb
push
xchg
daa
outsl
test
sub
xlat
add
popf
sub
enter
xor
dec
nop
adc
sbb
or
in
lea
or
add
arpl
mov
cmp
roll
stos
sbb
lock
pop
out
dec
cltd
imul
movsb
lret
mov
std
repz
push
nop
ficoms
subb
ljmp
popf
lcall
sbb
shlb
mov
aam
add
sub
jne
add
sub
je
lock
pusha
push
dec
push
mov
push
jp
insb
push
adc
arpl
sti
and
ja
xchg
and
mov
xor
cmp
push
mov
adc
orl
mov
xor
sub
pop
sti
outsb
and
adc
dec
mov
sub
pusha
scas
sbb
cmpsb
je,pn
arpl
into
sub
mov
shr
jae
out
std
dec
add
pop
sub
fsubl
les
lds
inc
xchg
xchg
mov
jle
rcrb
cwtl
es
inc
jl
pop
das
cmp
out
sub
xor
add
sti
and
xchg
mov
push
jno
stc
cmc
sub
mov
repnz
xchg
insl
outsl
sub
mov
sbb
sub
jb
mov
mov
mov
lret
add
roll
fidivs
test
test
and
jbe
insb
inc
sub
fsubr
mov
xchg
shrl
je
sub
cs
cmp
push
xchg
xor
leave
fs
xchg
xchg
jg
mov
pop
add
pop
aam
int
or
sub
lds
call
sub
loopne
out
mov
leave
mov
rolb
mov
movsl
cwtl
incb
aam
clc
rcrl
fldt
mov
into
and
sarl
pop
xchg
or
fldl
sahf
mov
in
inc
push
inc
lock
or
jno
shll
stc
scas
xchg
and
jbe
mov
stos
fisubrl
into
cmpsl
aas
mov
sub
push
or
sub
inc
sub
daa
push
int
cmp
dec
std
sub
mov
aad
roll
test
mov
dec
cmp
mov
leave
enter
dec
roll
dec
mov
sub
xchg
adc
xor
ds
xor
or
in
jl
cmp
pop
jp
mov
test
into
pop
push
sub
icebp
mov
pusha
adc
arpl
insb
cmpsb
rclb
sub
lea
inc
aad
mov
add
cli
pop
mov
cs
sub
pop
in
add
push
mov
cmc
sub
mov
lods
shr
jae
jns
xchg
sub
mov
jne
sub
xor
dec
and
push
and
loop
push
cmp
xchg
mov
cmp
notb
sub
push
push
aad
int3
sub
js
ret
sbb
imul
daa
mov
imul
and
add
aam
cmp
fidivrs
add
sub
pushf
fwait
sub
xor
xchg
sub
cmp
sub
test
gs
sub
mov
or
add
xchg
fwait
test
int3
movsl
test
sub
sbb
shrl
or
cwtl
jb
and
push
adc
and
push
jmp
sub
or
ret
jl
lret
sub
cmpsl
mov
aam
sub
pushl
fmul
adc
jmp
pop
movl
cwtl
data16
xor
fs
call
ret
loope
mov
test
push
or
js
dec
push
inc
or
push
sub
jb
stos
and
and
out
out
sub
lret
frstor
clc
and
out
and
pop
addr16
dec
cmp
sbb
test
xchg
sub
push
push
fs
sub
inc
mov
xchg
mov
out
int3
fmuls
lcall
es
xlat
aas
jp
sub
rcrl
addr16
push
and
xor
fisubrl
out
push
cmpsb
mov
cmpsl
xchg
inc
aaa
sub
cs
mov
orl
mov
or
push
inc
fnsave
xor
int
mov
mov
pop
cmpsl
dec
fdivr
ror
push
pop
stc
add
aad
repnz
mov
out
sub
jo
xchg
fldcw
and
shrb
sbb
das
or
xor
rclb
popa
test
in
xlat
adc
sub
pop
mov
enter
mov
sub
xchg
hlt
insl
xor
cmp
push
sub
pop
mov
mov
jmp
mov
subb
dec
jo
push
mov
aaa
test
sbb
ret
les
pushf
jge
call
sarl
sbb
pop
jbe
outsl
fildll
cmp
pop
sub
daa
and
in
sub
int3
xor
int
rcll
out
sub
leave
sbb
out
ret
out
sub
ljmp
mov
mov
sbb
sub
adc
arpl
and
adc
insl
shll
dec
xchg
sub
mov
xchg
test
mov
sbb
in
rorl
iret
push
test
adc
enter
ret
sub
lret
scas
jb
pop
test
push
stos
hlt
outsl
xor
test
cmpsb
sti
adc
add
mov
mov
mov
pop
imul
sub
dec
das
pop
call
xchg
andb
fs
mov
movsb
roll
shrb
push
sub
mov
test
insl
sub
inc
jle
out
sub
sbb
sub
rorl
enter
mov
sbb
in
in
pop
sub
push
sub
mov
test
inc
popf
je
xlat
or
ret
lea
lahf
sub
or
shrb
and
lea
xchg
inc
mov
pop
jmp
insl
mov
ljmp
jmp
arpl
pop
xor
gs
fisttpl
loopne
divl
test
xchg
jg
jecxz,pt
inc
cwtl
fadd
pusha
into
movsl
pushf
les
xor
mov
int
push
xchg
add
mov
mov
and
lods
push
add
loop
scas
ja
sub
fdivrp
jae
sbb
scas
movsb
cmp
cmpl
imul
or
sub
or
push
sbb
fs
iret
mov
test
and
jbe
fcmovu
sub
repnz
cmp
and
jnp
sub
mov
inc
repz
lds
cs
pushf
pop
sub
lods
add
or
lcall
in
sti
shrl
lret
outsl
sub
mov
ljmp
lcall
add
out
mov
jp
out
pop
inc
clc
add
adc
stos
lock
mov
in
inc
out
sub
aam
mov
jmp
ljmp
fisubrs
jmp
inc
jbe
call
sub
push
loope
push
sub
jecxz
ret
sub
xlat
jge
stos
pop
pop
dec
or
sub
loopne
lcall
push
dec
jmp
stos
mov
sub
sub
adc
jg
mov
mov
dec
sahf
adc
jg
inc
sub
xor
sbb
adc
sub
sub
pop
pop
mov
sub
and
push
add
xchg
xor
adc
in
div
sub
shll
outsb
xchg
paddb
inc
sbb
imulb
sar
dec
ss
xchg
adc
jno
or
aas
out
sub
push
mov
cmp
sub
xchg
jo
data16
fsubrl
jb
popf
xor
aad
pop
iret
das
push
aas
mov
cmp
sub
xlat
lea
and
rcrb
push
inc
scas
pusha
sub
dec
out
sub
mov
pop
mov
inc
pop
sub
sub
enter
movl
cwtl
adc
mov
or
and
add
sub
dec
push
sub
push
ret
inc
fstl
jmp
lahf
and
push
lock
xchg
sti
insl
pop
add
dec
sbb
fucomp
xor
repz
int
and
xchg
pop
sub
das
fisubrs
stos
sahf
mov
push
sub
sbb
and
popf
in
push
stos
lds
sbb
int3
xchg
sub
ss
jle
push
in
int3
pop
mov
cmpsl
sub
sahf
rol
adc
jecxz
fimull
dec
lds
adc
sub
cmp
popa
and
daa
repz
dec
and
out
push
pop
and
pop
xlat
xchg
dec
ss
mov
mov
movsb
addb
outsb
mov
jb
mov
mov
dec
lret
sub
pop
cmp
inc
sub
pusha
out
dec
stc
sub
aad
in
sub
pop
xchg
out
sub
ljmp
jno
xchg
scas
sub
sub
push
cmp
shrb
subb
out
xchg
pop
outsl
mov
fldt
inc
cld
push
pop
sub
push
arpl
push
ljmp
inc
adc
xor
xchg
outsb
and
addr16
stos
xor
jbe
sub
add
loopne
xchg
hlt
std
fcmovne
arpl
push
and
pusha
jecxz
imul
ja
add
jns
in
sub
push
xchg
push
sub
decl
in
js
cmp
xchg
sub
mov
jnp
loop
ss
test
or
sub
adc
stc
sub
jmp
ss
xor
adc
arpl
xor
push
adc
sbb
or
xchg
sub
add
dec
out
hlt
mov
cmc
in
mov
jle
pop
dec
fcmovnbe
loopne
sub
xchg
idivb
jecxz
sub
push
pushf
popa
sub
stos
push
cmp
fldcw
cmp
mov
fsubrl
fistl
gs
sbb
xchg
mov
inc
loope
sub
movsb
jns
insb
push
cli
cmp
out
imul
fstl
push
adc
sub
lea
ret
mov
iret
stos
js
sub
scas
outsb
adc
fisubl
cmc
popf
repnz
sub
and
arpl
in
sub
jae
cltd
loop
sbb
lock
jne
test
sub
aaa
add
dec
xchg
les
int3
mov
pop
cli
push
jb
inc
mov
leave
sar
shlb
negl
mov
or
mov
inc
std
inc
and
push
sub
xor
pop
imulb
pop
or
ljmp
aam
dec
sbb
xor
xlat
pop
sub
xor
push
movl
xchg
lods
jns
test
sub
ret
jo
lcall
popf
pop
or
and
loopne
adc
cmp
jne
push
imul
sub
pop
cmp
cmc
fisubrl
in
cmp
mov
clc
adc
adc
sub
push
jbe
insl
sub
mov
scas
out
fs
add
aad
loope
sub
push
cmp
ja
xor
or
adc
es
daa
jp
sub
repz
ljmp
insl
aas
xchg
ja
or
or
push
add
cmp
adc
out
mov
out
cmpsl
je
sub
pop
push
pop
push
jo
and
bound
pop
popf
cmp
adc
pusha
mov
scas
sbb
and
xor
sub
rcrb
ja
sub
sub
cmpsb
jo
xchg
sub
jle
dec
fisubrl
push
and
out
sub
mov
out
sub
in
cwtl
jl
rcr
mov
test
sub
ds
pop
icebp
add
cmp
test
leave
push
testb
out
enter
mov
decb
cltd
hlt
dec
insl
sub
inc
mov
arpl
add
leave
in
mov
leave
adc
and
mov
sub
pop
xchg
fisubrs
icebp
insb
jae
add
jmp
ret
sbb
pop
add
xchg
shrl
pop
cli
mov
xor
leave
pop
and
mov
and
sbb
lods
add
push
xor
sub
data16
lret
adc
xrelease
jo
xor
aam
inc
sub
es
loop
sub
cmc
lods
fwait
sbb
lret
cmp
inc
rcrb
sub
sarl
sbb
ljmp
arpl
sub
test
push
jge
out
leave
lcall
subb
inc
test
sahf
adc
add
inc
or
sub
sbb
push
les
scas
push
in
test
lea
jns
into
pop
loopne
cmpsb
jno
xchg
in
cmp
xor
arpl
jmp
dec
lcall
adc
inc
or
sub
mov
sub
adc
sub
sub
movl
ret
iret
cli
hlt
sbb
pusha
sbb
mulb
pop
jle
xchg
add
push
repnz
xchg
mov
push
mov
adc
les
cmp
xlat
imul
mov
jne
lods
inc
gs
fcom
jp
icebp
test
push
adc
insb
cmp
jnp
jge
xor
xor
imul
fs
mov
or
jl
lods
out
sub
fldenv
or
push
call
adc
jae
push
in
into
xchg
stos
and
jecxz
inc
xchg
out
shrb
mov
lret
mov
inc
sub
adc
mov
lods
int
sub
mov
cmp
mov
arpl
es
sub
adc
call
cmpsl
sub
jmp
fdivr
xor
sub
xlat
data16
mov
scas
iret
mov
hlt
ret
daa
push
push
test
fimull
push
js
repnz
aad
sub
shrl
scas
ljmp
lds
enter
jns
inc
jne
sbb
sub
aad
adc
iret
dec
xchg
and
call
pop
movsl
sub
xor
popa
les
add
daa
xlat
mull
xor
or
sub
addb
sub
int
xor
nop
mov
fildl
pop
cmc
outsb
sub
aam
push
push
mov
xlat
mov
mov
mov
sub
das
fwait
jns
sub
test
mov
sbb
stos
inc
sub
mov
loopne
sub
jge
push
js
stc
call
adcb
mov
loope
push
call
sub
clc
std
call
in
adc
stos
cmp
sbb
sub
cmp
cmpl
pop
cmp
sub
sbb
sub
fadds
jle
lock
jmp
add
jp
pushf
or
aaa
ljmp
adc
mov
std
or
xor
and
inc
push
sub
cmpsl
sbb
xor
cwtl
pop
sbb
sar
mov
adc
mov
out
loope
mov
sub
pop
mov
cltd
xor
pop
mov
in
inc
jecxz
mov
movsl
rolb
insb
in
sub
test
aam
icebp
fisubs
and
add
and
xchg
mov
mov
hlt
rorb
or
sub
test
xchg
out
dec
int3
in
and
das
test
pop
mov
lods
push
xlat
push
shlb
in
sbb
movsl
push
sbb
inc
sub
nop
mov
lahf
and
inc
jmp
dec
jge
lds
outsl
in
xor
sub
sub
mov
lret
and
jmp
add
mov
mov
and
rorb
mov
call
rcll
cmp
mov
adc
pop
dec
jbe
lahf
sub
push
dec
add
mov
lcall
xor
sarl
sub
push
jmp
outsl
pmulhw
fldcw
push
inc
pop
push
sub
mov
mov
sub
cwtl
or
rolb
dec
and
sub
xchg
sarl
hlt
adc
xor
int3
inc
xor
and
jge
cmpsb
daa
xchg
sub
dec
in
test
dec
aas
movb
adc
scas
and
or
sub
lret
loope
fdivl
test
sub
sub
into
lret
sub
cld
mov
fsubrl
arpl
push
and
sbb
dec
das
icebp
sub
sbb
mov
adc
test
jne
cwtl
add
test
hlt
out
sub
repnz
and
xor
xchg
xor
repnz
mov
xchg
pop
fisttpl
mov
sbb
jge
aam
inc
sub
push
rclb
mov
adc
scas
sub
je
aam
sub
lahf
add
and
push
scas
insb
movsb
jno
sub
sbb
adcb
mov
mov
mov
mov
cmpsb
push
fnstenv
jno
cmc
cltd
orl
insb
neg
repz
mov
les
push
sub
mov
sbb
jmp
inc
sahf
loopne
pushf
scas
fdivs
lods
xchg
mov
data16
dec
std
cltd
jne
sub
jae
movsb
in
ficomps
pop
adc
mov
jne
jl
mov
sub
lea
movsl
into
data16
fstpt
iret
and
out
sbb
scas
call
inc
adc
sub
and
pop
adc
pop
nop
mov
and
mov
dec
mov
arpl
mov
aaa
imul
dec
test
or
pop
mov
lahf
sub
leave
mov
lds
push
ljmp
push
mov
jmp
adc
leave
aas
xor
sub
pop
shrb
adc
mov
xor
aas
xlat
mov
sub
lea
adc
imul
cmp
jmp
ret
or
sub
jmp
das
loopne
out
sub
int
popa
ss
enter
sub
shrl
sub
clc
mov
adc
sub
faddl
loop
jmp
pop
xchg
push
sub
xchg
inc
subl
mov
mov
addl
sub
jmp
test
mov
mov
int
sub
pminsw
sub
xchg
mov
inc
push
test
mov
jae
loope
add
inc
or
push
lods
cmpsl
and
fcompl
ret
loop
jo
stos
aam
mulb
std
int3
mov
push
cmp
xor
ljmp
gs
xor
jge
cmp
or
ffree
les
inc
gs
dec
adcl
jecxz
xor
iret
gs
out
sub
sub
cwtl
test
and
pusha
or
sbb
sbb
push
sub
test
push
sub
cmp
int3
imull
mov
cli
sbb
mov
mov
fincstp
add
push
add
xor
bound
sub
lret
sub
clc
cs
in
dec
fisubrs
cmc
stos
popa
dec
sub
mov
and
mov
call
rcrl
sub
fnclex
or
sub
imul
jmp
or
das
lods
sub
popf
cmc
pop
sub
ljmp
xor
repz
jmp
in
faddl
clc
in
pop
jne
insb
sub
sti
sub
or
mov
pop
hlt
dec
and
sub
inc
adc
out
sub
sbb
and
xlat
cli
fs
cmp
or
jp
test
sub
or
lahf
mov
nop
inc
sub
push
out
sub
jp
test
daa
push
pop
repz
aad
adc
daa
cmpsb
in
movsl
cld
adc
daa
add
cmpsl
xorl
jmp
das
jl
pushf
xchg
mov
sbb
mov
pop
shll
mov
jbe
mov
cmp
cmp
ret
adc
mov
and
or
test
cmp
jae
sub
mov
cli
cld
shl
sahf
xor
test
dec
mov
sub
lahf
je
mov
out
dec
sub
adc
insb
jecxz
cmp
mov
and
les
sub
jg
mov
sub
pop
sub
push
add
xor
sub
pop
dec
pop
mov
test
sub
push
out
sub
fwait
pushf
mov
push
pop
mov
mov
shl
sub
and
push
mov
dec
and
jbe
and
sub
cld
lods
inc
int3
sub
push
dec
mov
dec
adc
insb
imul
movsl
in
sub
lods
sbb
and
push
cmp
mov
lods
jne
sub
push
fidivl
mov
mov
mov
jl
mov
mov
sub
dec
lds
sbb
pusha
mov
enter
mov
negl
icebp
stos
cmp
sahf
sub
insl
mov
pop
mov
stos
leave
lret
ljmp
idivl
xchg
xchg
or
sbb
and
out
xchg
sbb
movsb
adc
test
xor
pop
gs
sub
aam
inc
test
sbb
stos
sub
mov
aad
jmp
and
and
cmp
nop
sub
arpl
or
sub
cmp
jle
push
or
mov
loopne
mov
xor
sub
arpl
pop
cli
adc
aam
and
lret
sub
dec
clc
sub
jle
addr16
bound
add
fwait
dec
sub
arpl
lret
fs
sub
aad
int3
int
sub
sub
add
xlat
mov
sub
fisubl
dec
sub
add
orb
stos
dec
ljmp
cmpsl
xor
mov
sub
mov
pop
loope
cwtl
jae
and
mov
cmpsl
insb
cli
xchg
cmpsb
pop
add
sub
sbb
ljmp
sub
pusha
push
sub
gs
in
mov
ret
mov
in
outsl
cmpsl
xchg
sub
cmp
sbb
add
lods
sub
mov
xchg
pop
push
mov
ja
push
out
sub
push
stos
shrb
cmp
mov
fstpl
or
sub
jge,pt
xor
andl
ror
lret
aaa
scas
sub
sbb
jno
push
sub
xchg
fldl
sub
jne
dec
add
lahf
sbb
push
mov
das
sub
sarl
lret
rcr
adc
add
pop
and
inc
divb
mov
and
js
mov
cmp
cltd
push
jle
sub
or
outsb
mov
test
push
fildll
xor
xor
sub
lods
mov
cmp
xor
dec
jbe
in
sub
inc
mov
sub
xchg
les
sub
jge
test
sub
push
mov
mov
pop
gs
xchg
shrb
daa
jno
xchg
sub
rcl
mov
mov
inc
fucomip
cmp
xor
lahf
xchg
nop
sub
pushf
test
sub
cmp
mov
sub
mov
jo
daa
in
cld
loop
int3
push
jae
push
jecxz
scas
sahf
stos
sub
adc
stc
and
sbb
mov
cmpsb
and
std
dec
or
fsubl
insb
arpl
add
fstl
sbb
das
loopne
sub
adc
hlt
push
imul
adc
cmp
lock
pop
sub
mov
aad
sub
pusha
jle
test
sahf
out
add
push
add
mov
aad
sub
add
inc
out
je
sbb
xchg
push
sub
pusha
js
test
inc
and
mov
ret
rorb
lahf
mov
inc
stc
arpl
sub
es
scas
cmpsl
sub
ficomps
xor
sub
push
mov
loopne
mov
sub
es
add
movsb
loop,pn
mov
sub
clc
aad
jae
inc
cli
loop
lods
repz
pop
les
cmp
and
pop
and
arpl
not
and
and
push
lret
inc
add
insl
push
andl
adc
addr16
cli
pop
or
mov
sub
ljmp
xor
lea
fwait
sub
mov
dec
mov
out
dec
pop
push
fisubrl
and
addr16
cmp
test
ret
sub
in
mov
lds
ds
cltd
add
add
add
sub
sti
or
pop
aad
mov
test
adc
dec
sub
adcb
movsl
pusha
push
loopne
testl
lahf
adc
add
xor
mov
mov
stc
sub
dec
jl
icebp
adc
fidivl
xlat
adc
inc
dec
or
es
sub
jmp
ret
xchg
lcall
shlb
sbb
les
stos
xor
hlt
mov
pop
pop
sub
cmp
ss
repnz
clc
mov
repz
jbe
pop
sub
scas
push
sbb
sub
dec
dec
xorl
mov
mov
sub
add
sub
sbb
xor
xchg
and
dec
xchg
xor
ss
cmp
xchg
daa
cmp
cmp
adc
xchg
lods
pop
shll
xor
fnstsw
push
jo
sub
add
pop
push
pop
mov
lds
mov
pushf
xchg
pop
ror
stos
testl
push
ds
aas
xchg
lea
loopne
repz
sub
mov
int
fwait
aaa
sub
push
lock
in
jne
sub
cli
pop
sbb
adc
out
scas
std
xchg
mov
imul
mov
sub
push
out
insl
pusha
rorl
sub
or
jno
sub
xor
sub
push
fisubrs
inc
dec
sbb
sub
pop
xchg
xchg
mov
popf
fsubrl
aas
or
sub
repz
inc
add
mov
shrb
insb
mul
std
add
outsl
sub
push
js
aaa
sub
dec
call
ror
imul
iret
dec
pop
inc
cmpsb
pop
fistps
xchg
jmp
dec
cmp
fsubrl
jg
call
inc
jbe
cmp
shlb
pop
outsb
stc
setns
jecxz
and
aam
pop
inc
ljmp
mov
ficompl
sub
mov
not
fimull
leave
and
dec
rorl
sub
outsb
inc
pop
in
stos
and
out
loop
xchg
sub
pushf
sub
sahf
push
fidivs
adc
or
sti
in
xor
mov
jo
scas
sub
out
enter
sub
mov
into
cmp
rcll
insl
cmpsl
cld
aas
mov
sub
arpl
das
push
sub
sbb
sub
outsb
es
mov
cmp
sub
sbb
xchg
neg
sub
outsb
lods
hlt
sub
jns
shll
sahf
sbb
fistl
out
cli
sub
pop
xchg
sub
mov
lock
in
and
cmp
popf
xor
jmp
test
or
icebp
je
mov
mov
lahf
sub
imul
js
gs
pop
je
sub
xor
cmp
test
sub
dec
mov
sub
sub
in
dec
add
addl
cmc
and
aad
mov
shlb
cli
sub
jecxz
sbb
pop
pushf
xlat
dec
and
in
push
dec
loop
clc
cmp
push
lock
lods
imul
popf
insb
pop
jne
sub
sub
out
fistl
jnp
push
imul
popf
sub
leave
lea
sub
jp
clc
jl
jg
pop
fscale
sub
adc
out
test
repnz
or
sbb
jl
stos
rcl
sub
loopne
sub
cltd
arpl
sub
add
mov
sub
out
sbb
mov
pop
sarl
leave
test
mov
mull
mov
or
js
inc
lret
gs
adc
xor
mov
xchg
pop
xchg
jg
mov
cld
das
sub
xor
fistpll
xlat
lds
mov
es
jns
or
insb
bnd
ret
sbbl
daa
into
and
loopne
sub
dec
sub
xchg
jo
fmulp
out
sbb
fwait
popf
sahf
pop
xlat
imul
test
mov
clc
sub
scas
adc
insl
addr16
loop
sbb
push
jnp
or
aaa
and
mov
or
sub
pop
or
add
inc
cli
mov
loop
xor
sbb
adc
rol
xchg
es
das
or
xchg
or
ljmp
fnstenv
mov
mull
add
aaa
pushf
cmp
sub
mov
ror
adc
jo
imull
inc
pop
test
xchg
std
jg
pop
adc
jne
sarb
mov
xchg
xor
dec
cmp
xor
mov
shlb
jb
add
imul
sbb
sub
shl
ja
std
jb
xchg
push
fisubrs
add
sub
out
sahf
mov
enter
fidivrl
sub
jbe
ret
pop
sub
mov
jp
jle
dec
xchg
dec
enter
mov
dec
push
add
cmc
inc
sub
ja
adc
movsb
test
sub
cmp
ret
xor
add
leave
fmulp
clc
xor
or
mov
adc
and
daa
call
xor
popf
js
sub
call
inc
xor
ja
insb
dec
and
pop
or
sub
mov
cmp
sub
js
and
cmc
jne
xor
sbb
sub
jnp
sub
inc
sbb
lds
shlb
sub
int
xchg
mov
push
sub
inc
and
xor
cs
jnp
xlat
sub
leave
xor
xchg
jbe
js
cs
sub
fndisi(8087
mov
sub
test
sbb
adc
dec
adc
shlb
test
std
outsl
cmp
xchg
cmpsb
fcomp
jbe
out
push
xlat
arpl
ljmp
sbb
jmp
das
sub
pop
movsb
ss
sub
out
pop
add
xor
int3
fisubl
add
pop
sub
mov
dec
subb
and
es
out
adc
lret
es
jecxz
sub
xchg
out
mov
sbb
lods
cltd
mov
dec
outsl
cmp
cs
sub
iret
in
mov
jle
inc
xchg
mov
and
mov
sub
es
stc
sub
mov
pop
imul
mov
movsl
fdivp
sub
add
pop
mov
lahf
lret
jae
xchg
ds
or
xchg
cld
div
mov
aaa
dec
jge
movsl
fldt
shrb
pop
and
in
cld
fiaddl
cmc
push
roll
push
add
in
xor
sub
lods
xor
push
out
mov
sub
int3
stos
popf
xchg
sub
cli
dec
jg
sub
imul
adc
lods
xor
lea
and
jne
iret
mov
aaa
mov
push
mov
enter
xor
mov
clc
xor
ss
jl
jmp
mov
daa
add
lds
sub
aaa
add
xor
cs
sbbl
sub
test
mov
sub
into
movsl
pop
leave
sub
cmp
div
sub
mov
inc
mov
fisttps
adc
xchg
loop
in
fstpl
pop
sub
mov
aam
mov
daa
fsubl
sub
xlat
and
sub
sbb
pop
jns
xor
nop
fnstenv
pop
dec
inc
ljmp
push
adc
xchg
std
js
ficompl
push
push
add
xchg
test
pop
add
sub
imul
leave
xor
fsubp
sub
nop
addr16
sub
or
fldenv
xchg
inc
add
adc
lcall
out
pop
add
xlat
xchg
fmul
inc
sub
adc
gs
and
cmp
fsubs
shr
in
sub
rcll
fs
call
fabs
cwtl
fisubrl
push
mov
aas
push
push
daa
pop
call
jecxz
jnp
jb
xor
dec
nop
sub
insl
xor
adc
sbb
mov
cmp
sub
ljmp
xor
mov
int
call
es
fstpl
jmp
inc
sub
pop
pop
mov
adc
push
sub
adc
and
inc
xchg
sub
and
or
or
js
cmp
mov
ret
jg
sbb
xchg
jnp
add
push
or
push
sub
adc
cld
push
inc
jns
insl
fstp
les
inc
sub
cli
pop
xor
lret
fnsave
aam
daa
sahf
push
movsl
lret
int
vucomisd
dec
into
fisubrs
mov
test
shlb
cld
mov
jl
pop
call
sub
inc
adc
pop
sub
lret
push
ljmp
movsl
fwait
les
out
jb
pop
mov
mov
jae
cmp
xchg
jns
add
push
pop
mov
jmp
mov
sti
aad
ficompl
xor
inc
shrb
inc
mulb
outsl
adc
cmp
jecxz
shll
mov
stc
mov
cld
int3
popf
and
fiadds
adc
jo
adc
xchg
cmpsl
fs
rcr
iret
or
inc
jne
in
jmp
sub
sub
adc
pop
test
push
mov
outsl
sub
stos
pop
sbb
cld
mov
mov
sub
stos
add
sbb
push
xchg
sub
xorb
pop
xlat
mov
push
addb
xchg
popf
sub
pop
cmpsl
in
hlt
xor
sub
inc
and
stos
adc
xchg
rcrl
pushf
sub
mov
cmp
fimuls
sub
cmp
jmp
lds
pop
jp
loope
xor
je
add
sub
inc
stc
and
push
adc
add
sub
mov
lea
in
push
xor
add
mov
adc
sub
xchg
stos
mov
shrl
pop
sub
add
arpl
std
sub
pop
cmpsl
dec
subb
cld
jae
sub
imul
les
bound
xlat
add
sub
push
dec
stc
iret
sub
cmp
cmpsb
sub
lods
push
adc
push
sub
stos
jne
lcall
movsb
jbe
or
lret
sub
shlb
icebp
xchg
inc
sub
add
js
mov
mov
fsubrs
sub
iret
dec
sub
mov
push
dec
jne
xchg
gs
sub
repz
sub
mov
add
vandps
cltd
push
push
jge
lods
mov
add
pop
cmp
adc
cmpsl
gs
mov
ss
add
leave
and
pop
lds
cltd
imull
ljmp
inc
mov
mov
test
mov
jns
pop
add
mov
aam
push
outsl
and
adc
mov
xor
lods
xchg
cmp
daa
cvtdq2ps
xor
xor
mov
pop
lcall
in
rorb
aam
loopne
inc
cmp
jno
sub
aam
pop
sub
imul
lcall
jne
dec
sub
cld
shlb
sbb
jbe
sub
xor
leave
lahf
cmp
aad
call
xor
icebp
fsub
cmpsb
gs
clc
dec
sub
ljmp
xor
adc
scas
imulb
sti
adc
push
fdivrl
or
push
loope
xlat
sub
add
cmpsl
sub
inc
cmp
cmc
inc
add
sub
and
xor
scas
aas
fisubrs
insl
push
les
sbb
pop
sub
mov
outsl
mov
aam
scas
dec
push
daa
push
in
add
dec
cmp
icebp
fucomp
pop
ret
mov
movsb
ja
xchg
mov
out
das
sub
mov
jb
mov
pop
sub
dec
out
std
mov
pop
push
lock
test
jbe
add
xlat
xor
push
mov
inc
jnp
enter
mov
loop
adcl
xchg
movsl
sub
inc
and
test
xor
or
pop
loopne
into
mov
lret
hlt
rorb
test
scas
std
fisubrs
addr16
sbb
dec
adc
sbb
gs
fld1
cmp
and
xchg
popf
lods
or
sub
push
jg
ffreep
icebp
pop
mov
dec
rclb
lods
rolb
out
shll
fmul
and
push
mov
repz
mov
out
outsb
sub
std
sbb
sub
mov
sub
mov
aad
arpl
and
popa
inc
shrl
fwait
jge
or
aad
inc
add
mov
xor
push
in
jecxz
loopne
sub
lods
ja
scas
in
push
insb
xor
mov
in
fists
and
hlt
mov
test
fisubrs
popa
into
fidivrl
shll
adc
jb
clc
arpl
int
sbb
cmp
daa
mov
fsubs
es
arpl
shrl
mov
fsubrl
xchg
mov
int3
psubusw
je
aas
jle
jno
xchg
sub
mov
cmc
das
xchg
sub
mov
loop
in
inc
int
cmp
push
mov
sub
aas
pop
out
sub
jbe
xchg
lahf
sub
mov
adc
insb
aam
sub
iret
arpl
sbb
lea
jns
add
and
mov
sub
mov
enter
shrb
cltd
dec
sub
leave
fcomi
popf
adc
clc
sub
jnp
sub
pushf
and
cmp
or
mov
sub
xor
xor
push
je
lds
pop
jae
push
and
sbb
jne
add
int3
fs
test
movsb
aaa
sub
cmp
imul
roll
xor
lea
data16
mov
imul
sub
arpl
sub
pop
sti
ret
sub
or
mov
cs
mov
dec
call
xchg
cmp
add
adc
cltd
movsl
rolb
cs
stos
sub
mov
jg
dec
push
mov
xchg
pop
and
adc
xchg
leave
pushf
mov
movsl
add
es
mov
push
sub
inc
out
adc
mov
mov
jl
andb
sub
lcall
push
xchg
sub
jmp
jge
sub
and
je
adc
nop
push
gs
arpl
lahf
int3
lret
stos
subb
lds
add
push
push
sub
stos
push
pop
nop
or
mov
sub
imul
je
lret
fwait
mov
clc
jno
adc
inc
insl
test
pop
cwtl
cmp
sbb
jecxz
xchg
sub
mov
das
jle
aad
mov
addr16
fdivrs
cli
data16
xor
xchg
jnp
jp
sub
iret
ljmp
aaa
jae
ds
mov
sub
shll
or
ss
push
adc
jmp
addl
cwtl
pusha
cli
sub
pop
cld
cmp
push
in
mov
sub
jp
sbb
sub
lock
divl
mov
rcl
adc
out
das
mov
sahf
fstl
sub
or
mov
pop
ds
jae
xchg
dec
out
mov
shr
cs
aaa
cmpsl
ljmp
or
fiadds
push
sub
test
data16
mov
jno
pop
adc
mov
decb
push
ja
inc
insl
inc
daa
pop
cli
sbb
aas
xchg
mov
pop
scas
int
jbe
mov
repnz
loopne
xchg
fisubrs
test
mov
out
or
dec
and
call
pop
xchg
sub
stc
mov
out
sub
fwait
cmp
fbstp
mov
int3
lods
repz
sbb
xchg
imull
mov
dec
leave
js
test
xchg
repz
mov
cmp
loop
pop
out
imul
mov
pop
sub
js
sbb
sub
pusha
cmp
sub
shr
mov
sub
ss
jge
mov
xchg
lret
and
jnp
pop
movb
sub
pop
scas
sar
or
and
pop
jecxz
push
mov
int3
mov
xchg
ss
pop
dec
in
or
into
fs
cmpsb
lret
jnp
sub
jp
push
arpl
and
daa
sbb
or
xor
pusha
pop
sub
push
sarl
cmpsl
sub
push
add
pop
sub
push
hlt
pop
inc
sub
mov
aaa
lahf
sub
cli
xchg
movl
sbb
push
inc
jo
int3
sub
in
cmp
xchg
push
xchg
mov
mov
test
ds
test
sub
pop
ret
popf
add
aaa
stc
bt
shrl
adc
adc
jo
aam
push
sub
test
in
mov
pop
pop
sub
rolb
pop
adc
jle
lret
imulb
stos
fildl
xor
add
and
jecxz
pop
and
into
pushf
or
mov
sub
out
pop
inc
sub
push
push
jge
sub
testl
jne
push
sub
out
sub
sbb
fisubrs
mov
xchg
aad
sub
arpl
lea
and
data16
mov
sbb
jp
add
mov
sub
fstp
leave
mov
push
repnz
inc
jp
test
sub
scas
jl
dec
sub
mov
jmp
les
cltd
andl
push
cmp
addr16
fwait
inc
cmpsb
sub
out
push
xchg
sub
mov
push
sub
mov
and
push
sub
sub
lahf
loopne
mov
call
mov
inc
leave
xor
adc
cmc
pop
stos
xor
imul
sub
cmpsl
pusha
push
xlat
sbb
sub
or
int
dec
and
sub
mov
mov
lcall
mov
push
loopne
popa
sbb
nop
mov
push
push
jp
add
lds
pop
sub
sub
lret
insb
mov
clc
mov
cs
faddl
pop
sub
add
outsl
xchg
xor
and
stc
mov
idivl
mov
sub
sbb
pop
fadds
jg
imul
stc
xchg
dec
jbe
sub
lret
mov
adc
dec
sti
jg
jno
add
and
lods
or
sub
loope
jne
cmp
push
sbb
xchg
xor
shrb
mov
dec
rcrl
sti
inc
std
and
lea
push
aas
cli
in
sbb
cmp
mov
gs
sub
sbb
jne
sahf
mov
add
fnstsw
xchg
pop
dec
pop
es
loop,pn
push
ja
sub
test
out
sub
movl
mov
mov
or
push
and
into
sbb
push
or
in
test
pop
int
dec
xchg
or
jno
and
out
pop
mov
iret
out
hlt
push
pop
and
mov
cmp
ss
xor
sahf
push
mov
lods
shrl
xchg
popa
lret
out
sub
and
jle
sub
sbb
notb
push
shll
and
sub
js
dec
mov
pop
call
daa
aam
jae
cwtl
cmc
sub
mov
in
fbld
push
xor
jmp
out
aas
add
data16
lods
sub
aaa
mov
sub
movsl
ret
mov
dec
xchg
dec
cmpsl
into
pop
push
ss
gs
and
pop
ds
shrb
leave
jge
cmp
mov
push
inc
shll
sub
fcoms
imul
sub
inc
scas
dec
test
dec
add
call
and
ljmp
fmull
fistps
push
push
movsb
into
sub
std
inc
cmpsl
cld
sub
bound
arpl
imul
sub
roll
add
push
sub
mov
push
pop
or
inc
test
fcoml
stos
nop
xchg
dec
and
mov
pop
pop
or
ljmp
subl
mov
dec
and
sub
xchg
leave
mov
sub
cmp
mov
test
mov
orb
rcll
ret
sub
shl
stc
sub
pop
and
insb
sub
inc
adc
sbb
xor
ja
mov
dec
imul
sub
add
test
je
cwtl
es
fistl
iret
stos
cmp
jecxz
ja
les
adc
mov
cmpsb
xchg
and
loop
bnd
dec
or
lods
dec
jnp
testb
inc
jne
stos
test
aam
xor
movsb
sub
mov
and
inc
cmp
mov
int
sbb
sub
data16
mov
iret
gs
call
jae
pop
in
sub
repnz
bound
cmc
dec
and
stc
xor
add
jns
mov
popf
testl
xchg
sub
xchg
xor
bound
test
aaa
sub
cld
mov
sti
xchg
test
mov
dec
pop
fcompl
ljmp
movsl
mov
fisttps
or
adc
pop
lods
int
adc
into
sub
dec
add
sub
pop
ja
push
push
daa
js
arpl
pop
mov
mov
jbe
pop
rol
jae
sbb
dec
nop
stc
mov
xor
lcall
mov
add
std
cmp
sub
shrl
pop
rcr
pop
sub
jecxz
out
clc
sub
clc
add
sub
lret
addr16
xor
jns
imul
jo
cmpl
fs
inc
jno
aad
mov
adc
xchg
push
fsubrs
push
or
cmp
fisubs
push
mov
mov
cmp
and
or
out
sub
outsl
mov
add
sbb
mov
inc
out
push
ljmp
jne
and
fwait
pop
pop
push
sub
push
xchg
pop
sub
sbb
orl
adc
mov
es
aam
and
mov
sub
pop
mov
ror
adc
sub
sub
mov
add
cmp
xor
sub
fwait
pop
rclb
out
sbb
shlb
cwtl
arpl
push
mov
fidivrs
or
and
pop
push
sub
into
xchg
dec
xchg
fildll
jno
inc
shll
and
mov
outsl
insl
jge
jbe
xchg
sbb
scas
sub
sub
stos
mov
pop
mov
jmp
into
mov
add
pop
das
ljmp
sub
stos
js
or
je
jl
daa
call
rcrl
fistpl
mov
in
lods
pop
push
call
or
xor
sub
push
lods
test
mov
xlat
jbe
scas
mov
shll
cmp
test
imulb
in
pop
addr16
ss
das
sub
sbb
fwait
sub
dec
rorb
sub
mov
std
jle
pop
rol
lods
stos
out
movsl
mov
aas
mov
mov
mov
cmp
mov
enter
fs
inc
or
js
sub
push
scas
stos
dec
sbb
add
sub
fisttpll
cmpsb
mov
scas
sbb
arpl
inc
push
sub
cmp
gs
lret
ds
rorb
sub
sub
mov
ds
rcrl
mov
cli
jle
inc
sub
repz
push
sub
test
pop
packssdw
mov
and
pop
hlt
dec
cmp
shlb
sbb
mov
pop
sahf
xchg
sbb
je
in
ret
dec
adc
lahf
lea
stc
inc
leave
ret
adc
insb
test
jg
mov
sbb
int3
bound
in
popa
and
jl
in
lods
push
dec
pop
aaa
sub
sub
push
inc
pop
cmc
les
lds
sub
lret
mov
cmpsl
mov
jecxz
sub
sub
and
negb
pop
cs
gs
arpl
lods
lods
js
sub
adc
sbb
xor
js
sub
cmp
stos
push
aam
imul
insb
cmp
xor
pop
lahf
sub
insl
mov
iret
insb
enter
sub
push
sub
cmp
repnz
sbb
mov
mov
jp
hlt
in
lahf
sub
cli
nop
rcrl
sub
add
out
stos
aaa
mov
cli
pop
dec
dec
lretw
test
mov
push
leave
pop
jb
ret
mov
movsl
jge
mov
or
shlb
pop
bound
and
sub
das
ret
in
lret
xchg
and
mov
adc
cmp
xbegin
in
push
mov
les
jns
popa
cs
filds
sub
ret
xchg
adc
mov
int
loopne
xor
push
sub
stos
sub
jecxz
pop
xor
loope
imul
lea
fisubrs
clc
in
mov
mov
addr16
gs
ss
cmc
xor
pusha
cld
sub
push
and
fs
mov
or
sub
mov
imul
lock
xchg
test
pop
sub
es
sub
lods
lea
ljmp
subl
sub
loope
packuswb
push
pop
aas
cs
andl
xor
jo
ret
not
aaa
mov
pop
aam
ljmp
and
sub
aas
arpl
sub
xor
mov
testb
cwtl
out
mov
lock
sbb
sub
add
sub
xchg
and
pop
adc
cli
ja
inc
fimull
out
push
inc
jge
jle
sub
mov
imul
daa
fmul
out
out
fistpll
cmp
xchg
push
pop
xchg
stos
sub
xchg
popf
adc
inc
test
sub
mov
cmp
insl
sub
rol
sbb
lods
xor
mov
cld
mov
nop
shrb
cs
pop
sub
cwtl
fimuls
aaa
mov
pop
and
adc
jb
movsw
scas
sub
roll
pop
popf
int3
add
pop
cli
and
sub
xor
inc
adc
lods
sub
jg
xor
adc
jecxz
ljmp
mov
rep
in
out
andnps
jmp
sub
ss
mov
sbb
test
mov
shrb
sbb
and
and
mov
sub
dec
and
inc
sub
pop
mov
fcmovb
imul
sahf
int3
adc
push
sahf
or
call
fisttpll
scas
push
sub
clc
ret
xor
into
addr16
cmpsb
arpl
cld
mov
les
or
xor
jle
xchg
adc
sbb
clc
mov
add
sti
mov
dec
ror
fwait
cmp
sub
cs
mov
push
in
dec
xchg
andb
adc
sub
and
xchg
sub
add
mov
xchg
dec
stos
push
mov
aad
testb
lock
push
mov
imull
test
aam
sub
je
stos
shrb
lahf
jbe
ds
adc
insb
je
sti
jnp
test
xor
mov
and
add
cmp
mov
pop
test
cli
add
fmul
sub
cmc
dec
movsl
adc
aad
dec
push
stc
int
xchg
insl
out
jecxz
in
mov
les
mov
sub
sti
jl
mov
pop
cmp
jp
sub
add
add
and
daa
imul
mov
flds
sub
shr
dec
adc
inc
adc
or
lods
shrl
jo
sub
xchg
fists
sub
idivb
iret
prefetch
mov
fiaddl
loope
orb
mulb
sub
dec
mov
and
lds
cld
int
sub
mov
aaa
repz
mov
pop
sub
cmp
mov
mov
sbb
cmp
mov
mov
inc
in
or
sub
adc
fcoml
xor
mov
test
mov
aam
jbe
daa
sub
imul
ss
stos
inc
adc
sub
aas
jns
daa
sub
mov
out
icebp
sub
jo
mov
movsb
mov
fisttpll
and
mov
scas
ds
push
sub
repnz
mov
cmpsb
pop
adc
xchg
subl
xor
popf
adc
and
ds
ja
cmpsb
sbb
dec
mov
sub
xorl
int3
fs
mov
mov
cmp
inc
sub
mov
fcomps
int3
cli
lock
dec
test
es
and
outsb
flds
xchg
in
popa
sub
dec
sub
fcoms
mov
mov
or
or
pop
loope
ret
popf
cmp
xor
outsb
cmpsl
sub
stos
lods
jmp
bound
xchg
sub
cltd
jo
sub
pop
cmpsb
xchg
mov
add
push
in
sbb
xor
mov
sub
jle
pushf
inc
cld
xor
shl
cwtl
fisubl
or
sub
aas
leave
int
icebp
xor
or
pop
fsubs
xchg
outsb
push
adc
cwtl
push
sub
add
testb
mov
xlat
lock
sub
fs
inc
sub
mov
mov
in
jno
leave
bswap
jp
sub
scas
ljmp
pop
insl
sub
xchg
sbb
mov
mov
dec
add
sub
xchg
popa
cmp
sub
cmpsb
xchg
fidivs
mov
icebp
jmp
stos
daa
add
mov
push
pusha
jg
rorl
adc
pop
sub
pop
cli
mov
testl
sub
xor
push
cmp
mov
repz
cvtps2pi
cmc
outsb
adc
adc
pusha
mov
aaa
ss
shll
call
sub
jle
shrl
inc
ret
sub
xor
js
inc
leave
scas
rorl
push
sub
xchg
ljmp
push
and
sub
scas
fwait
je
sub
in
data16
sub
push
pop
mov
pop
scas
pusha
inc
test
ja
pop
call
xchg
or
mov
cmc
cld
add
or
mov
fbld
les
xchg
sub
call
shr
pusha
jp
mov
pop
rcr
push
jno
out
das
fildl
es
sub
sub
push
cmp
scas
mull
sub
cmp
xchg
sub
in
ljmp
and
jb
daa
or
in
cmp
xchg
push
mov
arpl
sub
int3
sbbb
jle
loope
xor
aad
sub
jns
insb
sub
xor
xchg
sbb
jl
jno
lds
popa
mov
addr16
jmp
xchg
sub
jl
sub
push
icebp
sub
in
xchg
sbb
lcall
loope
shl
ret
xlat
les
call
mov
and
in
jp
sarb
fsubrp
vorpd
and
or
pop
xor
jne
xor
int3
sub
jae
sub
movsl
jns
adc
test
inc
xchg
or
inc
xor
mov
imul
and
push
cmpsl
sub
fs
xor
sub
add
mov
mov
and
rcll
cmp
sbb
or
fadd
addr16
fs
rcll
add
sbb
popf
xor
pop
mov
inc
mov
pop
addb
inc
and
movsl
call
cs
subb
inc
cmp
sub
add
dec
jo
in
imul
mov
aam
adc
and
mov
xlat
test
jmp
xor
xor
and
imul
jo
nop
mov
jmp
ret
cs
xchg
cmp
les
in
and
sub
xchg
mov
subb
sarb
jne
lret
mov
clc
fdivrp
xchg
adc
int
mov
frstor
push
sub
es
adc
mov
sbb
stc
aad
dec
arpl
adc
cmpsb
add
add
fsubs
orl
dec
xchg
or
sub
jmp
ficoms
ljmp
mov
adc
mov
cmpsb
or
sub
fdivrl
push
sub
repnz
sub
jmp
inc
mov
ja
inc
or
push
aas
cltd
shlb
into
xor
and
dec
gs
adc
push
fcom
loop
lds
cmp
cmpsb
std
push
hlt
movsb
fstp
popf
icebp
mov
inc
lods
negb
jg
mov
ficoml
add
jmp
cwtl
mov
mov
in
shrl
ret
xor
ljmp
sub
cmp
or
mov
mov
push
mov
add
inc
jno
sub
xchg
xor
xor
xor
mov
push
lret
orb
dec
add
jle
xor
imulb
pop
sub
add
scas
sub
pop
adc
xchg
in
jmp
call
mov
pop
cmpsb
lods
adc
or
aad
fwait
and
leave
jg
jle
mov
aad
les
or
repz
sub
mov
adc
je
pop
imul
mov
pop
stc
sbb
sub
ror
and
adc
cmp
ljmp
flds
sbb
or
and
jge
pop
fwait
xchg
nop
cmpsb
lds
mov
and
scas
sub
pop
adc
xor
sub
or
neg
je
icebp
jbe
outsl
test
ficoms
ss
cltd
cld
in
shrl
arpl
scas
xor
in
sbb
dec
xchg
das
sbb
and
lds
arpl
push
lods
ret
dec
mov
sub
jne
add
xor
sahf
hlt
sub
aas
push
mull
hlt
subb
or
xchg
xchg
add
jecxz
add
pop
push
mov
clc
dec
fimull
pop
stos
inc
add
dec
push
sub
mov
sub
sarl
lret
pop
pop
lahf
sub
adc
adc
insb
and
leave
ret
sbb
sub
jl
sub
outsb
cmp
pop
dec
ja
sub
mov
push
push
addr16
jae
ss
and
sub
adc
lods
mov
sub
mov
cmpsl
mov
cwtl
fisttpl
int
and
and
sub
xchg
xchg
sub
test
lds
and
adc
je
cwtl
movsb
inc
push
adc
mov
imul
and
mov
push
ljmp
sub
aaa
iret
sub
std
push
push
sub
outsl
jo
repnz
or
mov
sub
mov
sbb
loop
cmp
cs
sub
bound
test
rcrl
dec
mov
sbb
test
dec
stos
int
pop
in
and
jb
sub
leave
cmp
push
icebp
sub
and
cltd
push
and
scas
adc
lea
sbb
test
adc
mov
aam
insl
or
popf
movsl
js
mov
xchg
jmp
jecxz
int3
sub
bound
jns
inc
jae
sub
pop
cmp
push
lcall
xlat
inc
or
xor
cmp
cmp
cld
add
sub
dec
sub
ds
andl
dec
enter
jmp
addr16
mov
or
mov
popf
sub
cmpsb
fs
out
gs
pop
ret
es
push
add
pop
leave
in
mov
pop
dec
cmp
dec
or
push
mov
mov
ljmp
addl
mov
sub
scas
push
loope
sub
popa
xor
es
dec
mov
ljmp
mov
sub
pop
pop
aaa
mov
adc
arpl
loop
push
ret
jl
sub
in
xor
sub
cltd
sub
shr
mov
push
pop
add
es
sbb
dec
jecxz
sahf
sub
ja
sbb
sub
sarb
mov
cwtl
addl
fildl
sahf
out
out
aaa
mov
sub
mov
cmc
xchg
leave
push
add
outsl
lcall
nop
cmp
xlat
subb
pop
sub
addr16
inc
mov
mov
subl
adc
mov
lret
lea
push
scas
mov
fidivrs
push
jo
inc
insl
andl
and
sbb
cli
call
sarl
gs
mov
adc
pop
sub
int
cmpsl
xor
out
cmp
jg
sub
pop
sbb
outsl
jbe
cmp
int
mov
jo
repz
cmovns
fwait
outsb
sti
mov
sub
leave
xchg
rcrl
es
mov
shrb
mov
daa
jmp
pushf
call
adc
lcall
mov
xor
adcb
dec
outsl
dec
pop
popf
add
xchg
int3
ret
jg
sub
cmp
in
andb
sub
test
fcomps
outsl
mov
je
int
aas
aad
adc
daa
data16
adc
test
sub
inc
jne
xchg
sub
das
rcrl
mov
std
pusha
jecxz
js
mov
or
ror
adc
sub
sbb
push
xchg
jecxz
fcoml
mov
cld
sub
and
inc
sub
xchg
xchg
stos
mov
mov
jg
dec
aad
popa
cmp
in
xchg
int
cmp
mov
xchg
test
mov
shlb
fwait
ret
in
sub
xchg
pop
stc
out
push
popa
adc
leave
sub
jl
sbb
xor
inc
cmpsl
mov
jg
popa
lret
mov
mov
in
cltd
sub
insb
jecxz
mull
test
loop
xchg
dec
aas
sub
mov
jae
fisubrl
jmp
jecxz
cmp
sbb
sub
adc
push
and
loop
pop
loope
cmp
xchg
orps
mov
sub
cmpb
lahf
call
int3
sub
insb
cli
xchg
arpl
sub
repz
adc
sub
xor
clc
sub
sahf
fcoms
push
iret
or
imul
sub
push
fimuls
lds
and
jno
sub
in
les
cmpsl
lds
rcrb
sub
and
negb
cmp
sub
sub
pop
neg
insb
sub
leave
xor
and
notl
dec
scas
outsl
outsl
out
clc
add
adc
fbstp
jmp
jno
mov
int3
push
pop
sarl
aam
sub
mov
dec
out
in
negb
ss
push
into
sub
rclb
std
nop
jg
pop
jmp
ret
push
jecxz
fnsave
loope
sub
xlat
cmp
and
and
sub
push
lock
xchg
aas
mov
clc
or
sbb
sub
inc
rcrb
iret
sbb
dec
or
add
addl
xchg
int
push
inc
scas
aad
mov
sub
jb
cmp
nop
lock
cmp
es
sub
mov
mov
sti
aam
or
fidivs
xor
add
sub
and
cmpsl
sub
sub
les
call
jecxz
sub
xor
subb
adc
sub
dec
aas
push
jp
ficomps
inc
enter
xlat
and
jb
icebp
dec
iret
mov
rcl
ret
lods
jne
out
imul
or
lods
sub
pop
xor
lcall
rorb
mov
dec
mov
fcomps
mov
sub
out
mov
push
test
mov
cmp
push
sub
add
enter
add
into
mov
pop
sbb
cs
xchg
sbb
cwtl
test
dec
mov
cmpsl
into
bound
and
mov
mov
mov
ficoms
fisubrl
or
lret
and
lods
xchg
inc
sub
gs
shll
addr16
int
jnp
and
push
fildll
insl
fisubrs
jnp
mov
sbb
mov
cmpsb
les
call
pop
mov
repz
jne
outsb
out
pop
inc
shrl
pop
pop
pop
xchg
lods
ss
les
sbb
jae
mov
sub
faddl
cmp
inc
sbb
out
pop
and
mov
dec
xchg
test
hlt
sbb
and
or
scas
jne
jl
or
lods
in
sub
cld
push
imul
scas
sub
push
ds
sub
and
sub
sub
or
fdivrp
or
xchg
adc
sbb
xchg
adc
mov
inc
dec
sub
shlb
add
sub
shr
cmc
add
bound
hlt
jge
sub
cmp
xor
sub
cmp
sub
scas
dec
jmp
sub
out
je
mov
imul
pop
mov
movsl
push
push
clc
mov
inc
dec
pop
ret
imul
je
mov
test
stc
sub
imul
mov
sbb
xor
sub
in
xor
jecxz
xchg
shll
xchg
fldt
sub
sub
dec
cmc
insb
sbb
and
push
mov
cmp
and
xchg
or
dec
cmp
test
loopne
inc
mov
scas
sub
out
loop
insl
or
cmp
sub
into
lods
sub
out
mov
in
and
test
int3
and
movsb
int
mov
and
xor
xor
sub
mov
push
sub
mov
add
xchg
inc
adc
iret
sub
sub
jmp
mov
arpl
sbb
scas
and
cmpsb
jl
ljmp
in
out
es
rorb
sub
jo
mov
mov
mov
sub
gs
inc
sub
and
sub
pop
sub
movsl
dec
shlb
or
stos
push
mov
sarb
push
movsb
pop
sub
mov
sti
mov
mov
push
sub
jbe
jmp
fnstsw
mov
scas
sub
sub
mov
jmp
ret
std
lcall
hlt
rorl
sub
xor
cmp
sub
xor
xchg
add
outsl
cmpl
das
lret
push
sub
push
mov
rclb
xchg
inc
sub
les
sbb
sub
imul
adcl
xor
aad
aaa
sbb
test
sub
xor
fdivr
sub
lock
dec
out
adc
enter
setno
pop
mov
sti
sub
sub
mov
fcomps
pop
lods
pop
adc
ret
mov
cmp
sub
jmp
xchg
pop
sub
and
fistpl
inc
pop
xor
sbb
mov
and
imul
lods
mov
mov
mov
pop
xor
outsb
mov
int
or
dec
cmpsl
xor
std
aam
cld
dec
push
pop
fiadds
ja
clc
jge
xchg
push
dec
push
or
dec
scas
cwtl
imull
ja
or
jb
ss
or
and
test
jae
xchg
jo
ss
sub
enter
xchg
mov
add
push
sub
dec
dec
mov
dec
sbb
loopne
xor
and
stos
bound
xchg
sahf
adc
jo
aad
xor
popf
cld
dec
scas
cmp
and
pop
sub
mov
or
test
cmpsl
call
repnz
mov
popl
fistpll
xorl
dec
popf
subb
sub
out
pop
push
sub
mov
int
and
addr16
dec
add
push
vmwrite
cs
adc
pop
mov
sub
mov
sbb
std
add
shrl
pop
in
pop
les
add
je
mov
inc
addr16
and
jge
leave
sub
in
add
inc
lds
xor
or
scas
pop
sub
cmp
aas
jnp
push
js
sub
cmpsb
loopne
sub
pop
ror
aad
ret
inc
sub
cli
imul
vunpcklps
jge
lret
inc
and
loop
mov
ret
pusha
adc
mov
popa
lods
xchg
sar
loopne
sub
add
add
sbb
hlt
ljmp
xchg
and
fistps
enter
data16
or
das
and
jmp
dec
mov
sbb
mov
loope
jecxz
cmp
and
shrl
mov
test
xor
and
arpl
lahf
sub
lret
test
ljmp
fisubl
in
sbb
sub
fisubrs
fsubrs
mov
sbb
clc
sub
and
mov
pop
cmc
popl
add
jae
sub
arpl
mov
nop
mov
push
std
cmp
lret
mov
adc
scas
test
and
push
cmp
sub
loopne
push
int
jnp
jne
xchg
dec
sub
and
cli
sti
sub
add
sub
xchg
arpl
cld
sub
in
lea
push
mov
adc
sub
cmp
fimull
div
sub
and
aam
fnstsw
daa
mov
int3
sbb
mov
push
lds
aam
mov
subb
fwait
add
cld
dec
aaa
sub
adc
push
mov
pop
mov
or
addr16
leave
in
pop
movsl
pop
lea
sub
or
sub
addb
sub
cwtl
xor
sub
loope
jno
adc
jbe
pop
mov
cmpsb
ljmp
fcmovnbe
adc
test
sub
mov
jb
and
inc
nop
stos
push
jmp
ret
jo
inc
dec
cltd
pop
enter
sub
xchg
sub
mov
rsm
xor
mov
test
sub
adc
clc
ja
in
adc
imul
sbb
lods
std
sub
jne
sub
fs
in
sub
aad
outsb
iret
sub
add
mov
sub
lock
sub
es
or
sub
mov
movsb
push
sti
inc
pop
xchg
les
notb
loopne
mov
movsl
cmp
push
fisubs
xchg
cmp
loop
jp
jo
push
mov
pop
pop
arpl
loopne
popa
bound
and
mov
dec
pop
rclb
sbb
stc
cmp
rol
xor
popa
fbld
rolb
sub
xchg
icebp
fnsave
popa
push
pop
rol
dec
loope
cmc
mov
mov
ds
xchg
xor
ss
mov
sub
cld
pop
mov
push
push
sbb
out
add
lea
clc
mov
js
or
in
push
pop
jp
jge
xor
cltd
sub
xchg
mov
jb
pop
js
aad
adc
inc
adc
cmp
imulb
mov
iret
aad
aaa
mov
cmpsb
call
lahf
aam
cmp
mov
test
es
push
js
adc
pop
mov
sub
popf
push
and
sub
pop
int3
int
sub
xor
xor
lods
inc
call
push
xlat
pop
mov
pop
push
sub
push
sti
and
add
gs
fwait
mov
pop
mov
push
and
mov
adc
add
shrb
adc
mov
fisubrs
mov
test
out
nop
fsubrl
xchg
mov
inc
xchg
in
sub
fidivs
sahf
push
sub
stos
mov
adc
in
sti
push
push
popa
inc
mov
and
or
adc
push
and
or
into
dec
push
sub
cld
or
iret
xchg
arpl
rclb
sbb
sub
inc
ret
xchg
mov
or
shl
out
sub
ljmp
fcoml
sub
dec
loop
and
jle
in
xchg
mov
sub
out
aam
mov
sub
fld
subb
shll
test
push
push
inc
add
std
sub
pop
je
push
adc
push
jo
ret
in
or
stc
mov
sti
jne
insb
inc
aad
push
aaa
arpl
xor
mov
sub
mov
sahf
lea
sub
jmp
out
fprem1
jns
sbb
dec
pop
add
shrb
xchg
in
sbb
int3
sub
xor
pop
mov
sub
mov
hlt
stos
sub
loop
and
out
and
sub
adc
call
cmp
pop
out
sbb
lock
int3
mov
jge
movsb
push
dec
adc
sub
inc
stc
sub
ljmp
sub
out
push
cltd
mov
iret
and
sbb
mov
fimull
insb
sub
jg
xchg
jne
jp
shr
mov
xor
push
adc
mov
add
jnp
ret
fdivl
jmp
add
sub
sub
or
xchg
jb
scas
imul
add
iret
sub
or
xor
mov
adc
insl
or
sub
cmp
mov
sub
aas
mov
daa
cmp
sarl
and
scas
jmp
iret
mov
xor
cmp
sub
push
nop
cld
mov
xchg
scas
imul
push
xor
stos
loopne
pop
cli
cmp
out
test
sbbb
cmp
dec
lret
ficomps
rolb
cmp
add
adc
xor
mov
mov
sub
inc
pop
sub
in
add
daa
pusha
popa
adc
jnp
lds
insl
ljmp
aam
sub
aaa
lds
push
std
mov
xchg
daa
push
out
ljmp
mov
cmp
mov
or
loope
sbb
xor
and
lahf
cmpsl
mov
stc
sub
push
jo
aad
adc
pop
sub
xor
in
insl
cmp
ret
aas
loope
scas
sbb
bound
push
mov
andb
loop
insb
ret
jmp
sub
mov
or
mov
pop
sub
cmpsb
fdivrs
xchg
sub
inc
dec
int3
shrb
sbb
mov
shrb
out
sbb
mov
sub
dec
xchg
sub
insl
jno
jecxz
test
mov
jl
add
daa
cmp
insl
sub
pop
out
sbb
popf
in
and
cmp
cmc
push
mull
dec
lret
test
call
xor
fisubs
adc
pop
dec
fs
mov
pop
js
insl
sub
adc
fldcw
lret
mov
movsb
inc
fbld
adc
xor
mov
dec
addl
mov
jp
xor
cmp
int
cld
lahf
pop
mov
sub
imul
outsl
inc
mov
and
xchg
sub
mov
int3
add
sub
add
mov
rclb
lea
adc
sub
mov
inc
frstor
mov
jge
adc
sub
in
cmc
sub
sub
sahf
movsl
add
scas
mov
mov
adc
cmp
mov
mov
scas
imul
test
sti
pop
cmp
mov
jb
mov
stos
addr16
xchg
xor
lret
sub
sub
mov
or
pusha
mov
inc
and
ss
lds
add
cltd
xchg
sub
hlt
xchg
dec
inc
cld
dec
push
sub
jle
lods
loopne
out
sub
arpl
adc
mov
mov
mulb
cmp
and
inc
mov
sub
pop
mov
es
ret
add
lahf
sub
cmp
sub
imul
lea
int
cmpsb
xor
sub
into
or
push
lcall
add
aaa
shr
cmp
loop
sahf
jp
push
xchg
pop
sub
shll
sub
imul
loop,pt
cmp
sub
push
and
sub
adcb
sbb
adc
adc
cmp
sti
cli
das
addb
shrb
fadds
sahf
cmp
xor
sbb
data16
pop
mov
sub
inc
dec
sub
xchg
inc
sub
cwtl
shl
ds
loopne
and
je
jl
add
sub
lds
xchg
mov
in
sub
fwait
mov
or
insb
dec
or
inc
pop
test
push
aas
add
sub
jb
dec
cmpsb
leave
push
insb
mov
jp
xchg
jg
mov
sub
jle
inc
adc
dec
addr16
adc
xchg
mov
sub
out
es
dec
sub
imul
dec
xlat
adc
call
cmc
and
mov
mov
outsb
sub
ret
jp
lcall
ds
loopne
ja
sub
push
out
aas
sub
subb
jecxz
mov
int
add
repz
pop
mov
clc
test
movsl
adc
cld
sub
inc
icebp
cmp
and
sub
ljmp
lods
xlat
sub
aad
pop
inc
in
and
stc
sub
cli
sub
and
out
adc
sub
dec
insb
xchg
sub
xchg
pop
or
sub
sub
push
mov
dec
and
loope
fwait
sub
inc
push
int3
addr16
add
sub
repnz
sub
xchg
jl
std
pop
aad
cmp
xor
lcall
stos
lds
xor
ja
mov
xchg
mull
mov
shlb
sub
loopne
in
daa
inc
fisubrs
cmp
or
push
push
add
out
mov
shlb
mov
sub
pop
adc
mov
sub
push
push
mov
test
mov
xacquire
push
adc
adc
xchg
dec
in
sub
mov
aam
test
imul
xorb
and
xor
mov
xchg
cs
loop
add
pop
sub
mov
mov
es
js
push
hlt
shlb
add
cmp
ss
outsl
icebp
mov
dec
in
pop
sub
push
xchg
aam
sub
mov
mov
pop
das
enter
jae
pop
call
mov
sub
mov
repz
push
outsb
sub
movsb
outsl
pop
sub
roll
icebp
add
mov
shl
daa
cmp
js
xchg
fwait
xor
shl
inc
dec
out
sub
xchg
sahf
jge
sbb
xchg
xor
xchg
imul
mov
xchg
cld
scas
cmp
out
push
inc
in
test
mov
sbb
inc
sub
push
sub
cmpsb
sub
ja
mov
lret
fwait
push
arpl
mov
mov
cmp
xor
pusha
fmul
xchg
sub
dec
mov
ljmp
sub
mov
xchg
dec
dec
pop
cmpsl
call
jle
dec
pusha
sub
out
adcb
sub
xchg
or
icebp
sub
or
in
rorl
sub
mov
test
movsl
add
mov
mov
vorps
push
cld
lahf
xor
cli
ljmp
jge
xor
mov
dec
sbb
xor
mov
popa
mov
or
in
xor
movsl
or
add
cs
cmc
dec
cli
dec
dec
sub
in
jae
push
scas
xchg
sub
inc
and
rcrl
popf
out
xlat
sub
jns
cmp
out
sub
lods
sti
cld
adc
push
cmp
sub
int3
inc
test
movsb
xchg
xor
sahf
mov
sub
testl
nop
and
int
mov
sub
jo
iret
aam
mov
popl
mov
xor
repnz
imull
and
add
fsubrl
in
or
movsb
cltd
sub
adc
pop
and
aaa
roll
jne
sub
test
push
mov
pop
jle
mov
add
inc
movsl
in
cmp
imul
pop
xchg
push
and
ud0
sub
mov
outsl
pop
sub
fwait
and
int
daa
xchg
sub
push
pop
inc
out
cli
xlat
js
inc
jmp
subl
sub
test
sbb
test
sub
add
xchg
lcall
or
sub
push
loopne
in
cmp
mov
mov
stos
sub
push
mov
negl
sub
lret
sbb
sub
xor
sub
push
loopw
sub
xchg
sbb
jmp
jg
subl
sub
and
aad
mov
stc
add
jmp
fcomps
shll
dec
or
cmp
cmpsb
sub
sub
pminsw
dec
sub
les
or
jecxz
loope
call
add
push
icebp
out
popa
cmpsl
jae
sub
inc
sub
in
pop
push
mov
push
fstl
sbb
daa
sub
rcrl
sahf
int3
gs
jae
sub
sub
push
and
ror
mov
divb
sub
sti
fisttpll
repnz
neg
sub
test
mov
pushf
mov
xor
push
push
daa
cwtl
push
out
pushl
or
insb
out
or
lods
push
ficomps
cmpsb
je
push
pop
push
sub
mov
aaa
cmc
mov
out
xorl
jecxz
addr16
sub
or
mov
xor
ljmp
dec
lret
push
jle
jns,pn
lret
nop
fisubs
push
stos
push
subw
movsb
adc
popa
scas
imul
push
ret
rorl
xor
xchg
push
cs
sbb
cltd
pop
mov
mov
xor
mov
mov
dec
pop
cmc
adc
adc
test
add
fmull
sbb
filds
add
pop
shr
leave
ss
jb
mov
je
and
sub
bound
add
shl
lods
sub
or
sbb
add
jge
mov
push
in
mov
loopne
outsl
sahf
xchg
mov
push
xchg
or
cltd
sub
add
adc
into
scas
and
jecxz
pop
mov
inc
aaa
pop
into
mov
sahf
sar
lcall
and
mov
fldcw
in
movb
cmp
xchg
mov
sub
aas
mov
adc
push
test
jmp
xchg
aam
xchg
jle
lea
xchg
cmpsl
ret
xchg
sub
mov
xchg
adc
mov
push
outsl
cwtl
in
add
cmp
outsb
mov
mov
test
pusha
pop
xchg
mov
ret
std
sub
scas
sar
jo
das
jns
pop
sbb
icebp
je
daa
xlat
daa
sbb
xor
lock
popa
pusha
dec
mov
cmp
sub
add
or
mov
add
xor
fldt
cwtl
jae
mov
xchg
jp
sub
xor
insl
movsb
mov
add
push
sbb
loop
cmp
je
ficomps
lods
in
stc
addl
jne
jns
int3
sub
inc
and
cli
xor
rclb
daa
shrl
test
pop
jmp
xor
lea
sub
mov
iret
xlat
pop
adc
push
lock
sub
and
decl
jp
jl
enter
xchg
clc
jns
sub
sarl
lds
ljmp
inc
add
xchg
cs
push
aaa
stos
pop
pop
dec
sub
lret
test
mov
jnp
or
les
ds
add
movsl
xor
out
pop
jecxz
call
pop
sub
mov
test
mov
jns
cmpsl
pop
push
inc
sarl
aam
inc
shlb
js
aas
decl
outsl
hlt
xlat
nop
sub
jmp
mov
cmp
jns
inc
scas
rclb
fcmovnu
xchg
lcall
lret
dec
stc
push
loopne
sub
scas
push
popf
pop
lock
incl
pop
sub
xor
inc
lret
jecxz
mov
adc
sti
sub
addr16
lds
sub
sbb
cmp
push
cmp
pop
dec
cmp
and
fdiv
sub
pushf
sub
pop
sub
cmp
inc
cld
cmpsb
dec
push
mov
es
sub
ljmp
inc
sti
fs
sub
out
mov
popf
sub
xchg
push
add
pop
cmp
cli
pop
push
sbb
add
aam
jo
pop
inc
stos
inc
or
add
push
std
add
scas
adc
sub
or
push
jae
icebp
sbb
adc
xor
mov
scas
lods
mov
shlb
dec
jp
sub
xchg
hlt
xor
sub
ljmp
adcl
jge
xchg
aad
sub
mov
xchg
jmp
xor
mov
dec
xchg
adc
fisubrs
sub
test
movsl
adc
cmp
jno
aam
cmp
inc
sbb
mov
incb
or
les
fmull
sbb
xchg
jo
and
int
sub
hlt
lret
sub
inc
out
cs
fdivs
push
fisubrs
in
aad
dec
sub
addr16
mov
int
pop
xchg
lret
sub
mov
dec
popf
repz
mov
fisttpll
inc
ffreep
subb
dec
mov
loop
sbb
mov
pop
sub
orb
sub
cmc
pop
jne
sub
add
cld
jb
inc
ficoml
sub
rolb
mov
cmp
fnstsw
shl
add
sub
adc
shrl
popf
pop
in
inc
sub
mov
and
push
enter
adc
in
cs
cmp
cs
insb
sahf
repz
or
inc
mov
push
test
lods
out
scas
ret
fsubs
test
mov
pop
ror
es
cmpsb
pop
sub
pop
imul
aad
arpl
testb
das
or
popa
sub
pusha
loope
testl
sub
xchg
jns
sub
cmpsb
fsubrl
or
gs
cli
aam
sbb
jle
dec
fisttpll
out
je
cli
mov
xchg
js
xor
imul
cmp
mov
push
mov
nop
inc
xchg
je
pop
movsb
lcall
pop
dec
mov
mov
sbb
cmp
jnp
lods
sub
mov
and
push
sub
sub
sub
sbb
pop
loop
jno
invd
aas
sub
adc
sub
lds
sbb
sub
xchg
faddp
pop
jecxz
imul
pushf
outsl
mov
shll
mov
ret
loop
fisttps
cmp
pop
push
sub
mov
jge
sub
jno
arpl
xchg
and
imul
addr16
adc
test
aaa
inc
pushf
xchg
mov
fmuls
xchg
mov
call
sub
pop
push
xor
mov
pop
dec
aad
xchg
stos
xor
mov
cs
repz
lds
lretw
cltd
in
lock
mov
inc
cmp
inc
lods
or
aam
or
sub
and
imul
add
pop
popa
adc
dec
leave
test
or
push
je
xchg
push
fldl
add
daa
xchg
mov
inc
repnz
lcall
into
adc
pop
sarl
jne
sub
sbb
shll
xor
je
and
stos
push
sub
insb
inc
mov
rcll
icebp
jns
mov
notb
jmp
ret
rcrl
stos
shld
adc
jecxz
push
sub
mov
push
stos
out
sub
xchg
imul
in
sub
and
ret
xor
les
imul
sbb
fisubrl
sbbl
xor
call
cmp
in
aam
or
cs
inc
push
sub
rorl
sub
fidivrl
mov
movb
cmpsl
pop
sbb
mov
adc
or
or
loope
cmp
mov
push
and
cwtl
mov
pop
lcall
sub
pop
lret
test
in
inc
adcl
push
test
lock
mov
xor
sub
push
gs
pusha
sahf
xchg
and
test
sub
out
fucom
lods
mov
cld
fildll
sub
sahf
pop
pop
or
fisubrs
xchg
shll
cwtl
rol
mov
repnz
jmp
push
ds
xor
mov
test
and
sub
push
ret
mov
pop
sbb
jmp
push
pop
pop
xor
int3
jl
insl
push
in
pop
loopne
js
sub
jge
enter
sahf
pop
mov
fisubl
mov
adc
lret
dec
outsl
sub
out
add
shrb
jg
or
mov
and
rclb
dec
xor
pop
popf
push
inc
add
pop
sub
filds
inc
xchg
cmpsl
mov
mov
jg
sar
pop
sub
or
push
jp
mov
or
lods
movaps
aad
andb
jnp
push
cld
idivl
rolb
inc
jp
sub
sbb
jbe
sub
shr
xchg
fs
cmp
cmp
in
decl
push
and
jge
jg
xchg
pop
scas
pop
adc
daa
xchg
sahf
lds
fisttpll
lret
jle
xor
sub
jl
scas
xchg
and
push
cltd
pop
arpl
adc
outsl
js
cmpsl
into
xor
mov
xor
jne
adc
imul
xor
jne
mov
xchg
sbb
clc
jbe
test
divb
sub
jo
adc
mov
call
jnp
or
jle
sub
test
sub
push
cmp
enter
gs
in
rorl
cli
sub
sbb
test
mov
pop
std
aam
dec
je
xchg
ret
scas
fisttpll
shrl
repz
and
add
cmc
sbb
stos
test
mov
mov
sbb
mov
sub
ds
add
ja
and
sub
add
cmp
jg
cwtl
push
movsb
xchg
and
test
or
lahf
add
jge
xor
sub
in
loop
push
xor
jbe
sub
imul
pop
sub
jne
sbb
in
pop
pop
xchg
push
cmp
jge
cmp
pop
sub
enter
stc
ja
lea
pop
lcall
leave
add
sub
sbb
cmc
dec
repnz
fmull
jns
mov
jl
rol
orb
adc
test
pop
adc
sub
xchg
sub
inc
aaa
xchg
stos
in
cmpsb
dec
sub
nop
jae
and
mov
outsb
jecxz
pop
sub
sahf
movsl
not
fwait
mov
aad
mov
push
jns
sub
scas
int
mov
jg
jb
sub
outsb
mov
lds
mov
cmpb
and
sbb
adc
lahf
mov
sbb
mov
inc
std
dec
sub
lds
sub
xlat
and
cmp
and
stos
sub
enter
hlt
adc
sub
lret
mov
sub
xchg
mov
jp
sbb
xchg
xchg
mov
sub
xor
imul
sub
mov
sub
add
or
xor
js
dec
dec
ljmp
lahf
in
jp
adc
in
sub
xor
xchg
push
inc
xchg
dec
je
mov
or
insl
sbb
mov
int3
roll
call
jecxz
pop
add
outsl
ss
jo
push
xchg
sub
scas
sub
sub
adc
xor
aas
leave
test
sbb
shlb
push
call
dec
mov
rclb
sub
mov
aas
push
icebp
cmp
cmp
sub
add
popf
dec
sub
mov
jg
rorb
shrl
push
test
xor
or
imul
pop
push
jo
push
test
sub
xchg
inc
lds
scas
sub
enter
out
mov
fs
pushf
leave
insl
sbb
or
sbb
cmpsb
sub
mov
fs
mov
lret
je
aas
xor
add
test
fsubrp
cli
out
sahf
sbb
mov
xor
xor
mov
test
sub
popf
cs
imull
pop
ficomps
adc
jmp
dec
push
lds
mov
pop
pop
sub
xchg
popa
int
in
sbb
repz
addr16
dec
sbb
out
hlt
adcl
cltd
les
jmp
outsl
mov
test
insl
sub
add
popf
sbb
dec
cmp
mov
out
sub
adcb
adc
cmp
sub
xor
dec
fcompl
sub
faddl
or
add
in
xchg
adc
sub
scas
sub
sub
fstps
out
fwait
outsl
in
pop
into
sub
ret
inc
mov
sub
jmp
mov
sub
jl
dec
sbb
add
and
dec
mov
lret
sub
cmp
cmp
sub
and
mov
fidivs
icebp
ss
adc
out
and
mov
xchg
lods
call
xchg
or
in
push
sub
in
rcll
pop
mov
sub
or
hlt
cwtl
ret
cmc
sti
pop
lahf
aad
xchg
mov
add
jl
sub
inc
jp
dec
fidivs
ss
sub
mov
pop
movsl
popa
pop
cmc
sub
xor
sub
xchg
pop
sbb
fs
cmp
test
sbb
inc
jae
les
sub
pop
les
pop
mov
arpl
jns
loop
aas
sub
pop
push
cmc
cmp
mov
andb
or
jne
int3
shrb
push
test
aaa
push
mov
imul
xor
outsb
xor
sti
pop
gs
sub
ss
sahf
iret
lock
adc
mov
repnz
andb
push
and
dec
adc
lret
sbb
cmpsl
imul
sub
xor
push
add
xor
mov
aaa
jl
mov
popf
test
mov
shrl
jge
scas
leave
cs
xchg
xchg
or
inc
mov
sbb
sbb
adc
pop
xor
xlat
pop
inc
out
push
mov
ja
lea
sub
in
mov
dec
jmp
inc
sub
and
pop
dec
mov
stos
test
sub
and
lcall
aas
mov
loopne
cmp
cmp
loop
push
sub
jp
xchg
xorb
arpl
repnz
aas
lret
sub
xchg
clc
push
push
loop
repz
adc
lds
sub
dec
push
scas
sbbl
test
push
mov
daa
xor
lcall
out
mov
mov
ret
and
mov
jp
inc
xchg
sub
dec
out
add
out
fsubrl
push
xchg
mov
nop
lea
push
and
adc
push
xchg
push
repz
mov
or
sub
sbb
ss
aad
jne
daa
js
or
fyl2xp1
sub
cmp
lret
pop
xor
mov
mov
jmp
pop
push
es
add
fst
das
push
icebp
sub
sbb
mov
ret
js
xchg
sti
aam
out
and
outsl
cmpsb
xchg
cwtl
and
loope
push
arpl
sub
mov
in
sub
sbb
sahf
cmp
push
push
sub
add
out
lds
cmp
push
sub
add
in
inc
sub
lods
sbb
xor
scas
inc
cmp
bound
sub
hlt
push
cs
mov
testb
sub
and
adc
bnd
int
inc
dec
mov
popf
xor
lods
sub
pop
popa
mov
sub
xor
pop
out
lods
jns
aas
sub
pop
adc
into
out
daa
xor
push
push
out
shrb
cmp
or
inc
iret
pop
sub
ss
fs
sbb
push
mov
subb
into
scas
lea
out
xor
sub
arpl
jge
shrl
in
in
mov
jmp
sahf
call
mov
jne
cmpsb
cwtl
lret
sub
dec
mov
add
adc
mov
fwait
inc
push
sub
cld
pop
push
dec
sub
arpl
fsub
adc
sbb
lret
das
mov
lahf
sub
pusha
ficomps
sub
mov
mov
pop
aad
or
test
imul
ds
jle
cld
jb
xchg
inc
sbb
mov
xchg
mov
pop
mov
mov
mov
lods
sbb
sub
push
pop
popa
mov
fists
sub
pop
sub
sbb
je
sub
ret
adc
lahf
xchg
and
pushf
ficoms
insb
jle
fnstcw
lret
ja
subb
xchg
jp
test
scas
mov
mov
push
sub
imul
sub
push
leave
fldcw
dec
pop
sub
fcmovnb
and
daa
sub
jecxz
inc
loop
rorl
sub
fcmovnbe
xchg
push
test
adc
fisubrs
xor
sub
dec
push
enter
sti
jne
rcr
int3
sub
popa
cs
cli
pop
lods
adc
inc
cmpsl
pop
cld
dec
inc
shlb
pop
daa
call
sub
dec
ljmp
repz
sub
popf
std
adc
sub
add
arpl
sub
jl
mov
in
sub
mov
push
imul
xor
daa
fwait
mov
sub
clc
xchg
test
mov
fcomip
xor
nop
jge
xchg
ljmp
testl
and
movsb
lods
inc
lods
ficoml
sub
cmpsb
insb
cld
mov
das
lock
sbb
sub
and
fucomp
cld
sti
test
push
and
and
jns
adc
jmp
insb
jecxz
jne
add
stos
mov
jne
or
push
stos
cmp
mov
adc
stos
stc
fldenv
xorb
pop
sub
aam
ror
sub
fldenv
sub
imul
add
jne
hlt
sub
cmp
mov
push
mov
cmp
aad
and
sub
outsb
sub
fadds
insl
mov
es
lcall
hlt
pop
sub
sti
cmp
sub
mov
mov
inc
or
imul
ds
dec
js
pop
sub
cmp
pop
movsl
popf
xchg
int3
jo
ja
leave
insl
jbe
pop
and
shrb
adc
sbb
push
jle
lods
mov
shrl
mov
and
shr
inc
jno
shlb
fistpl
sub
fnstsw
pop
inc
icebp
fcompl
xchg
sub
aad
pop
data16
arpl
mov
adc
ljmp
sets
push
fmuls
repz
sub
dec
out
push
or
pop
sub
sbb
xchg
enter
andl
push
in
sub
int
addb
sbb
sarb
cmp
bound
jmp
mov
sub
mov
repz
cmpsb
jecxz
adc
addl
popf
test
jns
enter
jmp
cwtl
call
rcll
popf
sbb
mov
fildll
adc
dec
pop
inc
jg
in
add
jbe
push
sub
sub
rorl
outsb
sbb
or
in
pop
dec
pop
cmc
ss
hlt
mov
fsubp
sub
rolb
lret
cmp
dec
sub
inc
jno
sub
outsl
jge
out
inc
xchg
jo
inc
in
in
lcall
sahf
sbb
test
shrl
sub
mov
and
nop
test
aam
and
or
or
clc
nop
out
sub
jmp
arpl
sub
pushf
and
mov
mov
icebp
cmp
mov
sub
shll
out
pop
add
stos
pushf
sub
hlt
sub
push
dec
lahf
inc
sub
jle
and
push
pop
out
andl
sub
xchg
cwtl
jne
pop
mov
and
in
cs
and
push
add
add
test
pop
das
jbe
addr16
sub
in
lahf
inc
sub
sbbb
insb
add
jnp
fdivrl
mov
sub
popa
lret
sub
ror
sub
add
mov
jnp
scas
mov
and
jae
out
sub
jecxz
sahf
inc
mov
shrl
mov
sbb
or
cvtps2pi
in
sub
lods
sarb
jecxz
aam
inc
sub
jne
adc
cli
movsb
cs
add
adc
sub
and
push
mov
xor
inc
aad
mov
ja
mov
loop
xchg
jp
out
xchg
sub
ficoml
cs
dec
imul
sub
jl
dec
cmpb
adc
nop
lds
sub
sahf
stos
mov
or
insl
fwait
mov
sub
dec
lds
mov
mov
pop
enter
sub
int3
mov
lret
push
notl
push
sub
incb
movsb
lds
and
mov
lcall
sub
mov
aam
insl
andb
rcrl
mov
into
ficomps
js
and
mov
or
in
push
adc
ds
out
or
ljmp
lcall
aas
stos
sbbb
data16
out
xchg
pop
test
sub
xchg
mov
clc
addr16
push
adc
push
das
addr16
test
scas
sbb
xor
jae
sub
jns
mov
mov
cmp
aas
sub
fildl
add
xchg
cmp
sbb
sti
sub
mov
sub
pop
xchg
xchg
js
cmp
sti
dec
jle
xchg
in
into
fs
or
dec
mov
push
xchg
push
mov
fs
xorl
or
fwait
mov
adc
adc
sub
xor
sbb
push
fwait
xor
mov
rsm
imulb
mov
rorb
rclb
sbb
xchg
sub
sti
push
dec
ret
int
out
pop
sub
pop
mov
mov
sub
cwtl
ljmp
push
sub
addr16
movsl
and
iret
mov
xor
sub
xchg
pop
leave
jno
mov
sub
mov
xor
stc
push
in
mov
test
lea
popf
sub
mov
jecxz
ds
das
mov
lret
imul
mov
fisubs
xor
dec
and
sub
js
dec
xor
call
xchg
sub
cmp
mov
push
jg
pop
rol
pandn
mov
sub
lods
daa
adc
sub
pop
inc
test
jbe
cmpsb
out
int
call
or
repz
cli
lods
movaps
jne
and
bound
mov
xor
push
sub
pop
mov
xchg
adc
mov
lea
jnp
sub
cmp
shrl
test
inc
sahf
hlt
leave
mov
jge
fstpt
xchg
jle
fucomi
mov
mov
ljmp
jbe
je
pusha
or
insb
mov
in
push
dec
push
push
fdivrs
scas
xor
je
pop
cmp
popf
outsl
push
add
cmpsb
es
mov
call
xchg
sbb
jno
lret
cmp
cmp
mov
xchg
sub
mov
repz
sub
sub
pop
or
add
xchg
xchg
fdivrl
es
push
movsl
sub
adc
sub
cmpb
popl
out
mov
nop
mov
out
decb
or
fld
fdivrl
pop
jbe
mov
gs
mov
pop
sbb
sub
ret
int
push
sub
stc
sti
push
mov
insb
lock
or
cmpsl
rolb
dec
cli
and
mov
test
inc
xor
add
lods
and
cmc
inc
fcomip
jecxz
sub
in
jae
dec
pop
xchg
in
subl
pushf
stc
sub
cmpsb
or
je
sti
xor
dec
fwait
and
imul
scas
lods
ds
hlt
sub
loope
push
cli
push
fnsave
mov
std
testl
push
sub
push
mov
nop
aad
sbb
cmp
inc
loopne
xchg
xor
fcompl
data16
cmp
iret
in
fstl
sub
push
add
jbe
fidivrl
xor
xchg
and
dec
or
in
lods
mov
pop
jp
and
jle
mov
sub
add
sub
sub
aaa
ss
pop
in
into
inc
xlat
sub
adc
stos
adc
jb
hlt
fcmovne
xor
and
js
sub
sbb
adc
lds
lods
xorl
aad
push
test
fldl
dec
aam
sub
xchg
xchg
ljmp
gs
inc
sub
pop
sbb
adc
pop
pop
xchg
jmp
sub
ja
subb
pop
adc
loopne
lret
or
cmpsl
xor
stos
sub
aas
subb
xchg
icebp
imul
bound
mov
clc
xchg
adc
loopne
sbb
bound
pop
sub
aas
adc
push
mov
lods
clc
adc
sub
sbb
daa
xchg
sub
bnd
lock
mov
dec
sti
subb
aas
adc
push
cmp
clc
sub
mov
adc
sub
fdivrs
push
mov
xor
hlt
in
sub
jo
outsl
sub
xor
jg
ret
or
lret
sub
in
lock
xor
mov
jecxz
mov
push
fidivl
xchg
shlb
mov
add
aam
sub
or
xchg
pop
and
mov
xchg
loope
mov
sub
cwtl
hlt
fwait
sub
or
arpl
push
ds
scas
ja
add
inc
sub
dec
xor
pop
enter
or
and
pop
jmp
sub
inc
add
inc
sahf
sbb
ficoms
xor
jge
mov
lret
adc
mov
or
dec
adc
or
xor
dec
dec
gs
sub
js
mov
subb
leave
loopne
rol
sti
popf
dec
movsl
sub
pop
js
scas
and
xor
orl
nop
lods
cmc
jo
jg
sub
inc
adc
dec
sub
push
mov
mov
sub
inc
mov
sub
cltd
mov
sub
mov
shlb
cmp
cmp
scas
cli
arpl
lods
sub
cmc
fisubl
jge
shl
xchg
fs
loop
ja
inc
popf
sahf
dec
negb
sbb
or
push
or
push
aam
or
jp
int3
xchg
xchg
sub
xor
into
negl
int
in
add
cld
and
adc
sub
sbb
inc
adc
cmp
das
and
scas
sub
pusha
ss
sub
rorl
jbe
sub
fs
add
lret
lds
jmp
sub
jle
ljmp
out
inc
data16
sub
xchg
int3
push
add
lea
in
and
push
push
ss
mov
test
xor
call
ret
or
and
push
adc
insb
sub
inc
out
jne
or
cmp
popa
jp
fidivrl
bnd
sub
sub
fcomp
out
sub
ss
int3
subl
jae
fwait
sub
mov
enter
les
pop
divl
cwtl
es
lods
sahf
mov
cmp
stos
pop
push
xchg
fs
lods
addb
cmpb
push
sti
sub
cmp
int3
add
mull
dec
jae
and
mov
cmc
sub
sbb
lea
imul
push
and
subl
mov
push
dec
jae
test
repnz
adc
ret
and
loopne
ljmp
jge
mov
subl
add
xor
imul
dec
sub
aad
fsubrs
sub
sub
ror
or
cmp
inc
or
and
fwait
ds
call
mov
adc
cmpsl
js
popf
pop
sub
cmpsb
inc
test
sub
test
jg
xlat
xor
jmp
or
xor
jns
mov
out
in
jmp
ret
jmp
lock
and
scas
or
or
push
cmp
jo
add
in
stos
sub
ret
pop
lcall
dec
lret
shll
clc
not
pushf
sub
pop
adc
outsb
sub
mov
push
sub
insl
fs
mov
sub
aad
test
jecxz
sub
add
imul
fisttpll
xchg
test
es
xor
adc
jne
jl
psubq
fldcw
in
mov
aad
in
or
aam
xchg
cmp
mov
sub
pop
subl
cld
push
or
sub
sbb
jle
pop
adc
imul
and
rcll
cmp
aaa
and
sti
sub
sbb
not
int
scas
loopne
in
sti
sub
outsl
sbb
sahf
dec
mov
pop
jbe
ja
and
add
shrb
aas
mov
or
loope
out
gs
ds
clc
sub
sbb
cmp
xchg
dec
sub
cmp
stc
push
sub
insb
fidivrs
add
mov
inc
cmpsb
lea
pusha
xor
sub
sbb
mov
mov
adc
cs
push
and
ficoms
fimull
push
xor
and
sub
lcall
sbb
or
cli
sub
mov
or
data16
pop
ljmp
jns
inc
les
mov
mov
pop
dec
int
mov
add
repz
and
pmaxub
sub
inc
in
jg
pop
subb
ss
add
sbb
imul
in
jae
mov
movsb
and
stos
cmp
cmp
and
shll
iret
inc
cmp
sub
fs
pop
xchg
push
in
in
ret
cmpsl
push
mov
dec
or
mov
fdivl
pop
in
add
mov
add
xor
push
cltd
outsl
pop
sbb
into
sub
push
inc
jl
sub
xchg
mov
arpl
inc
sti
jmp
push
lds
xrelease
imul
mov
sbb
rcrl
or
iret
add
test
test
scas
pop
hlt
inc
arpl
loope
and
in
mov
shll
addr16
mov
rcrb
sub
or
in
adc
or
fdivs
dec
imul
dec
push
inc
cmp
cld
and
cltd
cmp
pop
insb
stc
das
data16
xchg
and
imul
ja
enter
jg
es
push
cmp
stc
adc
lock
sub
add
cmc
jno
cmp
sub
fdivl
sub
mov
arpl
sub
xchg
ret
push
pop
sub
loop
jbe
sub
push
sahf
mov
push
xor
push
and
fdivs
adcb
add
loopne
cli
pop
les
sub
imul
outsb
push
xlat
test
jb
lea
ljmp
sub
sub
mov
ja
repnz
xchg
dec
dec
push
mov
mov
xchg
sub
mov
sub
cltd
lods
sub
lock
add
sub
jp
aaa
popa
test
mov
ss
sbb
fistpl
cmp
dec
pop
sub
movsl
insb
repz
imull
mov
push
sub
in
fwait
adc
scas
push
mov
aad
insb
mov
cmp
and
mov
xor
jmp
mov
adc
and
hlt
ljmp
or
int
fsubrl
mov
dec
stos
popf
scas
hlt
outsl
fnstsw
sub
loopne
cmc
fdivrs
xor
pop
imulb
repnz
jno
fwait
jo
cmp
out
out
cld
sbb
mov
mov
sub
imul
sbb
sub
adc
jmp
xor
ficompl
mov
sahf
sub
jg
pop
sub
lock
in
or
cmp
std
lret
scas
out
ja
push
sub
cld
sti
es
stc
sub
or
pop
js
loope
nop
arpl
mov
cli
and
adcl
shll
fldt
ffree
addr16
sub
std
lds
ret
adc
sub
xchg
pop
sbb
lahf
mov
push
sahf
lds
mov
shlb
arpl
mov
xlat
or
sub
cmp
push
jle
cmp
in
xchg
xchg
imul
std
cwtl
fldt
adc
or
pushf
sahf
inc
ds
xchg
test
dec
std
xchg
push
mov
nop
imul
ds
out
and
push
test
push
sub
sbb
adc
hlt
mov
cmp
mov
fnstsw
lret
add
or
ret
ret
lcall
data16
xor
and
mov
int
mov
inc
call
sub
mov
cltd
cmp
sub
jp
sub
iret
lods
aad
pop
andb
fcmovu
pop
cltd
clc
sub
xor
mov
sub
arpl
xor
push
cmpps
outsb
mov
sub
pop
call
test
mov
add
inc
inc
popa
shlb
call
mov
cwtl
subb
sub
xchg
adcl
dec
test
sti
gs
sub
jmp
mov
xchg
sub
in
or
or
push
push
mov
or
imul
outsl
mov
vcvtss2si
call
cld
jne
and
arpl
sub
je
sub
xchg
mov
lea
inc
call
or
add
sub
sub
leave
jg
pop
dec
ret
and
sarb
sub
jne
out
xor
xchg
test
mov
ret
lret
or
in
mov
hlt
sub
mov
test
or
push
loopne
ret
lds
popf
lahf
popa
sub
xchg
ljmp
lds
jnp
imul
lds
mov
xor
sbb
or
sub
push
or
and
sub
fnop
in
cmc
clc
sub
in
pand
out
gs
mov
les
add
sub
mov
outsl
subl
xor
push
jg
mov
insl
sub
xor
xor
inc
ror
sub
and
mov
addb
insb
adc
stos
sub
adc
lea
push
pop
iret
xchg
sbb
push
cli
int3
ds
test
repnz
dec
xchg
sub
mov
jl
and
call
in
daa
pusha
inc
vcvtsd2si
hlt
cltd
stos
and
repz
cmp
test
aaa
leave
stos
mov
loope
inc
in
fmull
mov
pop
addr16
jb,pn
aam
sub
movsl
sub
in
sub
sti
or
fs
loop
push
scas
mov
adc
and
mov
daa
add
pop
cltd
fldenv
rcl
fstpt
sar
push
int3
xlat
insl
cmp
jge
cs
jmp
enter
fbld
mov
ret
lea
stos
shlb
push
int3
loopne
sub
pop
push
inc
sub
cmpsl
add
inc
sub
pop
mov
sub
sub
push
clc
and
mov
xorl
or
mov
mov
add
sub
push
outsb
pcmpgtb
jg
pusha
adc
dec
imul
add
push
mov
sub
dec
mov
movsb
pop
sub
fisubrs
fwait
xchg
sbb
ljmp
adc
mov
les
push
loope
stos
sub
pop
push
lahf
das
fisubl
sbbl
stos
jo
cmp
aam
mov
ja
mov
cmp
xor
cli
or
inc
loopne
lcall
divl
xor
fisubrl
lcall
dec
rcll
push
dec
push
mov
aad
frstor
in
dec
and
repz
sub
add
adc
lods
push
sub
xor
mov
sub
push
out
inc
sbb
sub
jmp
aam
sub
bound
jno
cmp
and
adc
sar
pop
imul
jne
cmp
sbb
jae
add
pushf
enter
add
jmp
nop
sub
sub
aam
push
ljmp
daa
sub
repnz
call
sarl
shlb
pop
imul
fildll
add
ja
and
dec
pop
cli
push
jl
ret
pop
loop
stos
ret
sub
inc
sbb
ljmp
sub
push
flds
inc
sub
int
pop
or
and
pop
cwtl
and
imul
xor
sbb
insb
ja
bound
cmp
jge
dec
dec
xchg
push
pop
sub
fadd
aam
sub
sbb
or
mov
sub
and
arpl
mov
or
test
sub
xchg
aas
into
jmp
cmp
cmpsb
sarb
cld
imulb
cs
add
imul
xor
push
das
push
or
cmpsb
and
add
mov
aaa
fwait
rorl
sub
gs
ljmp
outsl
mov
sub
int3
lahf
mov
cltd
xchg
adc
add
sub
jno
xchg
add
ja
mov
push
inc
or
in
aad
cmp
mov
call
sub
pop
mov
in
lret
arpl
stos
and
stc
pusha
cld
stos
adc
insb
inc
jle
jnp
cmp
sub
xor
fstl
cmp
stos
sub
jecxz
pop
and
add
lret
or
lds
out
ret
mov
sub
push
sbb
test
mov
inc
sub
es
mov
adc
sub
loop
dec
cmp
push
mov
dec
adc
jecxz
push
sbb
push
insb
pushf
movsb
mov
imul
hlt
repnz
sub
xor
daa
inc
inc
ds
dec
xor
lea
frstor
les
insb
or
je
sub
mov
pop
fcmovu
or
push
dec
cmp
push
and
mov
cmpb
popf
in
inc
and
imul
inc
fsub
add
adc
shrl
test
mov
jo
add
jb
cmpsb
cs
ljmp
negl
insb
sub
inc
stc
pop
adc
xor
rorl
inc
call
jge
aam
movaps
and
ja
xlat
jo
push
jmp
sub
mov
inc
sub
dec
dec
nop
ljmp
cmpsl
jecxz
mov
sub
lods
inc
or
adc
push
es
scas
pop
cmp
stos
daa
pop
enter
orb
sub
je
scas
repz
xchg
clc
lea
cwtl
je
xor
sbb
xchg
xor
int
stos
pop
adc
pop
mov
into
popa
and
int3
or
lds
inc
daa
ss
xchg
fcoms
add
sbb
es
xor
mov
cmp
xchg
sti
push
arpl
pop
mov
mov
ljmp
sub
test
mov
addl
andnps
rcrl
jne
or
xor
popf
adc
imulb
mov
subl
out
mov
push
sbb
mov
sub
mov
rclb
enter
popf
add
fisttpll
dec
and
mov
ret
sub
push
sub
sahf
out
jmp
add
dec
pop
cwtl
cmpsl
mov
xor
mov
int
out
or
dec
sub
xor
dec
xchg
ljmp
mov
clc
and
cmp
push
cld
mov
sub
inc
sbb
lahf
sub
mov
and
xchg
mov
sub
mov
pop
add
test
out
imulb
jmp
pop
mov
sbb
lds
int3
scas
popf
out
xchg
bound
xchg
jl
in
shrb
lods
adc
cmp
push
loopne
pop
xchg
popa
jbe
jne
in
bound
jnp
repz
add
sub
insl
test
pop
and
fcoms
sbb
lods
rorb
idivb
push
mov
xchg
pop
xlat
lods
cmp
ds
sub
out
dec
aad
inc
sub
loop
and
add
sub
stos
and
ljmp
cwtl
push
cmc
or
mov
mov
cmp
daa
test
mov
imull
out
xor
xchg
outsl
sub
jge
sub
mov
mov
call
stos
inc
and
ljmp
pop
imul
das
xchg
jl
cmp
add
sub
outsl
test
sub
cli
push
inc
add
lods
out
in
mov
ljmp
data16
je
adcb
out
sub
xchg
addr16
or
clc
push
mov
sti
and
mov
fstpl
test
xchg
lcall
mov
jp
xchg
mov
stc
sub
lock
xchg
insb
push
or
sbb
scas
iret
in
jno
mov
arpl
popa
adc
mov
xchg
mov
sub
flds
in
loopne
dec
push
and
and
ret
cs
xor
push
es
nop
mov
add
mov
mov
ret
push
pop
sub
shrb
bound
sub
jne
or
int3
movsb
in
aas
dec
jle
sub
adc
fisttpll
rcrl
mov
into
sub
lea
xchg
aam
repnz
aaa
adc
sub
fcmove
sub
repnz
fdivs
dec
aas
inc
push
and
ljmp
mov
sub
push
lock
fildll
sbb
add
sub
push
clc
aaa
xor
popa
add
mov
repz
pop
adc
cmp
leave
fdiv
sbb
mull
sub
push
enter
and
lahf
int
xor
test
mov
or
xchg
sub
daa
lret
cmp
xlat
push
and
jmp
hlt
ror
sub
add
jns
mov
nop
or
pop
xorb
loopne
sbb
loope
sti
jne
mov
xor
sub
insb
cmp
shll
movsb
add
push
xor
cltd
pop
cmp
int
addr16
sub
icebp
push
mov
clc
rsm
jns
mov
add
inc
xchg
inc
xor
sub
loop
orl
arpl
fwait
and
aad
ret
movsbl
add
xor
js
insl
adc
dec
rcll
cmp
xchg
or
pminsw
xchg
inc
and
push
add
cmpsl
sub
ljmp
push
fisttpll
and
loop
into
sub
inc
mov
fcmovnb
pop
and
pop
cmp
adc
cli
pop
fs
aas
hlt
dec
push
sub
xor
push
ja
mov
imull
cmp
inc
jmp
pop
fsubrs
sub
mov
fisttpl
mov
icebp
push
sub
ret
jns
fwait
inc
ja
loope
xchg
xchg
in
sbb
shlb
mov
sub
or
je
sub
mov
cmp
mov
xor
jmp
imul
pop
ret
mov
mov
xor
mov
leave
dec
sub
loop
sbb
xor
sub
imul
sbb
aaa
leave
mov
push
ljmp
fisubrs
shll
sub
js
fldenv
fucomip
and
push
negb
xor
and
mov
sub
dec
sbb
jp,pt
jg
dec
inc
test
push
mov
jbe
and
int
andl
repz
stos
paddd
in
andb
pop
fldt
arpl
mov
loopne
sbb
movsb
jmp
pop
stc
push
inc
cwtl
daa
adc
sub
rorl
push
es
ljmp
add
cli
lds
jg
movb
stc
sahf
lock
mov
and
lcall
fs
cwtl
pushf
sub
adc
test
pop
adc
das
or
sub
das
into
sub
jbe
ss
scas
and
fwait
arpl
cltd
sub
dec
sbb
outsb
das
dec
xor
pusha
adc
loopne
ja
jle
sub
lahf
add
adc
hlt
lods
pusha
mov
adc
shrb
pop
ss
mov
xchg
jne
fs
and
ja
push
frstor
push
fmull
test
sub
ds
ljmp
out
fnstsw
fisttpll
push
sub
adc
sub
pop
xchg
pop
sbb
xor
arpl
lods
pop
or
test
popf
inc
fstl
scas
daa
lret
stos
rcr
push
in
mov
jecxz
vcvtsd2si
xchg
mov
jbe
xor
les
dec
mov
push
push
inc
enter
fdivl
cli
iret
int
push
mov
jl
subb
jb
jne
jo
inc
sub
pop
lret
push
cli
xchg
inc
sub
popf
imul
xor
add
jle
xor
sub
sub
push
popa
clc
iret
gs
lock
xchg
push
xchg
cli
fisubrl
mov
roll
jl
icebp
adc
ljmp
sub
dec
insb
mov
add
and
sub
aaa
mov
inc
add
dec
add
cs
imul
cmpsb
jb
adc
leave
bound
push
or
cmp
in
add
daa
ljmp
xchg
adc
sti
sub
ljmp
repnz
aam
sub
ljmp
mov
mov
xor
and
popf
sub
jmp
xor
ret
add
stos
dec
mov
or
or
push
loopne
mov
jle
sub
mov
cmp
imul
jae
mov
sub
fsubrs
jmp
inc
aam
inc
sbb
out
sub
mov
jmp
xor
cmp
sub
mov
add
jnp
out
lock
sub
inc
es
push
jp
mov
fistl
sub
ret
xchg
sub
ficoml
xchg
or
xor
sub
jnp
push
incl
dec
sub
jo,pn
inc
sti
cs
sub
pop
loopne
sub
adc
sub
sbb
aas
cmp
lock
ss
jae
xor
sti
mov
loop
sub
in
int
push
fiaddl
fnsave
jecxz
dec
pop
cmpsb
rclb
ja
and
out
add
cwtl
jnp
xlat
mov
or
mov
mov
dec
pop
mov
push
pusha
in
xchg
fdivrs
mov
mov
cmpsb
lea
dec
sub
xlat
xchg
push
movsb
and
dec
int
mov
jo
sti
xor
sub
adc
mov
lret
es
adc
add
lcall
and
and
aaa
sub
sub
mov
call
rcll
pop
popf
fiaddl
sub
pop
dec
inc
pop
sub
xor
push
mov
or
jg
xor
fdiv
jbe
sub
mov
sub
psrad
sub
pop
add
popf
mov
sbb
jns
rolb
dec
insl
and
cmp
sub
int
ja
daa
push
inc
xor
mov
pop
jge
dec
out
xor
pop
in
lods
sub
popa
mov
ficompl
out
or
sub
stos
cmp
dec
xlat
sub
scas
sub
out
sub
pop
pop
shll
test
cmpsb
aaa
xor
fs
pop
mov
sub
inc
lods
pop
scas
fcompl
dec
fldenv
and
jns
pusha
inc
mov
scas
and
sub
jne
add
iret
js
hlt
out
outsb
jge
daa
sub
and
out
pop
sub
mov
push
push
cmp
sahf
xchg
and
xchg
mov
sbb
mov
in
aad
icebp
pop
xor
ret
scas
mov
test
pusha
dec
pop
out
sbb
and
sub
sbb
sub
mov
xor
push
pushf
adc
rolb
lds
xorl
jmp
adc
adc
jno
pop
add
cmp
mov
sahf
hlt
pop
jnp
fcoms
fisttpl
sbb
xor
mov
dec
and
push
push
sub
mov
imul
sub
sbb
pop
leave
fnsave
mov
loope
xchg
aaa
push
push
out
and
pop
int3
adc
shll
daa
lret
imul
imul
cli
push
push
xor
imul
data16
mov
and
jl
sub
pop
jo
adc
xor
sbb
adc
pop
jl
sub
sub
in
mov
cltd
lret
inc
dec
sub
add
inc
mov
cli
sub
test
mov
adcl
jb
adc
leave
mov
fs
notl
add
push
paddusw
lea
xor
adc
pop
sub
sbb
fimuls
aam
shll
call
test
xlat
mov
dec
or
sub
xor
and
add
mov
out
shrb
lcall
inc
rorb
vrsqrtss
sub
dec
aam
xor
stos
jnp
cmp
sub
imul
pop
lret
lcall
sub
push
pop
addr16
incl
inc
or
mov
pop
stos
aad
aaa
sub
repnz
sub
pop
mov
scas
sub
fstps
out
pop
adc
push
push
sbb
sub
rorb
js
xchg
cmp
ljmp
or
xchg
lods
sub
push
lret
clc
dec
pop
cmp
push
jnp
andl
pop
dec
insl
repz
aas
jns
rcrl
lods
ret
std
leave
inc
mov
hlt
push
gs
outsb
sbb
sub
repz
mov
aam
mov
scas
push
outsl
mov
rorb
jge
add
push
lds
and
pop
call
lds
repz
test
cwtl
lods
jno
mov
aad
mov
daa
dec
jle
sbb
loop
daa
cmp
test
adc
xchg
cltd
jbe
and
push
mov
mov
and
inc
dec
push
lods
jmp
sub
jg
pop
sub
mov
mov
repnz
lret
sub
xor
int
in
fmull
repnz
dec
fwait
sub
sub
js
sub
out
jo
lock
xor
popf
fistpl
cmp
xchg
and
sub
xor
add
lods
in
lcall
pop
xor
stos
mov
inc
mov
push
xchg
mov
outsb
out
adc
xor
dec
pop
or
sub
mov
inc
int3
or
rorb
add
aam
push
sub
roll
xchg
pusha
sub
inc
push
sub
addr16
out
xchg
ds
lock
scas
sahf
pop
ljmp
or
mov
in
ret
sub
out
scas
imulb
out
pop
cld
add
and
adc
call
setle
sub
mov
inc
xchg
adc
repz
xchg
or
in
iret
push
into
shrl
out
imul
sub
hlt
adc
sub
test
rcrb
sub
mov
xchg
mov
sub
enter
sub
xchg
dec
push
lret
mov
pop
sti
in
test
ret
sub
push
and
lahf
int3
clc
int
stc
xchg
xor
jnp
int3
sub
and
xor
sub
dec
punpcklwd
and
xchg
xor
add
mov
pop
sub
cmp
dec
pusha
addr16
jbe
xor
dec
imull
jecxz
insl
or
pushf
mov
mov
and
xor
pop
cmp
fcoms
xchg
push
lods
mov
xor
push
mov
std
fcoms
movsb
push
push
jge
xor
push
push
push
roll
mov
scas
cltd
ja
ljmp
nop
xor
mov
iret
lods
sub
sub
sbb
fidivrl
repnz
movsl
jge
pop
adc
sbb
and
test
jbe
cmp
je
cltd
sub
sahf
inc
sub
fwait
xor
cmp
dec
mov
cmp
pop
xchg
push
mov
jb
push
and
aam
fsubs
aaa
cmp
pushf
into
sub
mov
mov
adc
sub
adc
nop
repz
and
adc
aam
fstpt
pop
daa
aas
idiv
add
and
sub
lods
sub
out
and
sub
jns
and
insb
sub
mov
insl
aas
stos
ja
xor
sub
add
cmp
sub
dec
sub
insb
les
dec
pop
je
sub
subl
sub
sahf
sub
dec
sub
imul
sbb
data16
ret
and
sub
sub
jmp
sbbb
shl
fdivs
rcll
lods
andb
cwtl
sub
shlb
cmp
sub
fs
sti
outsl
and
jmp
shrb
loope
lret
cmp
dec
fcoml
lret
push
push
sbbl
jb
and
ja
adc
push
sub
sar
or
xchg
inc
add
aas
scas
sbb
xor
notb
adc
mov
fnsave
xchg
sub
sub
test
aam
aad
es
dec
cmpsl
sbb
sub
mov
ficomps
out
imul
scas
je
add
sub
mov
sub
iret
mov
aad
hlt
cmp
bound
cmp
adc
or
cmpsb
mov
incb
or
push
push
fidivrl
insl
sub
outsl
sub
movsb
xor
repnz
rcrb
or
sarl
into
popa
add
mov
dec
sub
dec
dec
pop
ret
and
cmp
sub
lcall
mov
test
sub
shll
xor
xor
test
sub
xor
and
push
ja
or
mov
repz
jecxz
unpcklps
in
inc
jp
popl
pop
jae
push
ss
aam
loope
sub
sbb
mov
mov
jo
push
sub
cmp
push
sub
out
push
loopne
jmp
jg
data16
mov
pop
and
sbb
sub
sahf
or
test
dec
in
sub
int
push
xchg
sub
repnz
test
lds
adc
inc
cmpsb
stos
cmp
and
and
inc
fidivl
ljmp
loope
xchg
aas
out
pusha
cmc
inc
mov
rorl
pop
push
push
sub
add
sub
popa
sbb
mov
push
sub
jle
add
iret
and
mov
xchg
jno
or
clc
jae
inc
sub
fidivrl
lods
mov
orb
sub
xor
jl
jg
push
sub
stc
insb
lea
xchg
sub
add
dec
or
push
sub
imul
mov
adc
add
fldenv
jno
dec
mov
mov
pop
jae
subl
mov
mov
pushf
sbbb
lds
pop
std
push
loop
sub
dec
add
sub
test
insb
notb
jns
jne
inc
es
movsb
adc
nop
sbb
and
pop
inc
pusha
imul
divl
insb
xor
es
ds
inc
iret
push
xchg
mov
push
sub
aas
mov
sub
loop
inc
and
mov
mov
lea
lds
push
jle
mov
mov
adc
clc
or
dec
adc
cs
mov
pop
stc
jmp
sub
lret
movsl
popa
clc
sub
les
cwtl
add
jns
roll
hlt
xor
cmp
stos
sahf
mov
aam
jp
daa
outsb
and
ljmp
dec
sub
repz
sub
ret
es
mov
js
call
hlt
jmp
jg
sub
sbb
or
es
loopne
add
or
sub
ret
lods
sub
scas
imul
data16
jmp
sub
ja
push
bound
cmc
inc
mov
mov
or
fsubrl
inc
fs
mov
push
sub
cli
jg
lds
in
mov
stos
movsl
jp
pop
scas
xchg
sub
cmp
mov
fcompl
sub
jp
shl
insb
mov
xchg
push
jno
push
cmpsl
sub
jmp
mov
jp
repz
and
fcoms
or
lcall
aas
sub
dec
les
xlat
out
mov
int
aas
call
add
fistl
sub
iret
pop
pop
sbb
movsl
ja
cmpsb
dec
xchg
cmpsl
mov
out
fwait
in
rcl
sub
daa
mov
dec
aad
or
iret
push
call
fisubl
test
shr
sub
push
scas
mov
loopne
mov
movsb
jo
sub
iret
push
pop
fsubrs
xlat
inc
inc
xor
and
or
sub
call
inc
mov
fmuls
cs
outsl
stos
add
sub
leave
neg
lods
sbb
jg
inc
and
js
inc
mov
pop
call
rol
iret
popf
xor
aam
push
inc
arpl
fists
sti
sub
sub
push
lahf
in
sub
outsl
inc
sbb
cwtl
sub
int
mov
mov
repz
iret
xchg
bswap
sahf
mov
inc
inc
lahf
dec
sub
push
sahf
mov
jp
sbb
mov
mov
ja
sub
aad
mov
je
push
out
mov
inc
or
int3
gs
sbb
sub
in
sub
lds
sahf
push
or
arpl
cltd
push
sub
fs
pop
xchg
sub
cltd
fiaddl
cmp
sub
dec
cmpsb
and
inc
fwait
in
push
jle
icebp
arpl
cmp
add
das
insb
pop
xchg
mov
add
aad
sub
jns
addl
arpl
and
jp
xor
xchg
jle
je
xchg
sub
sub
lock
xchg
sub
mov
mov
add
cmp
xlat
mov
test
mov
pop
or
hlt
je
and
jae
test
clc
stc
jmp
lds
insb
pop
mov
jnp
jg
cmpsl
sbb
xor
add
popa
in
sub
dec
mov
ret
hlt
push
mov
inc
mov
sub
les
rcr
movsb
sbb
cmp
dec
fdiv
sbb
sub
pushf
in
andb
les
sub
loop
lahf
inc
cmp
mov
push
push
cmc
sti
enter
mov
jne
sub
cmp
fwait
popf
stos
adc
inc
push
mov
rorb
aam
sahf
shrb
lea
fsubl
shrb
std
add
xor
sub
stc
sub
outsl
repnz
sub
push
mov
gs
push
aad
mov
in
dec
scas
jmp
jbe
insb
adc
mov
fs
stos
fwait
mov
and
pop
dec
mov
hlt
test
mov
sub
inc
shlb
sbbl
clc
imull
sub
int
dec
push
sub
lahf
adc
sub
fmuls
pop
mov
loope
jl
jns
std
xchg
sbb
fwait
decl
jecxz
ds
mov
add
nop
lods
enter
xchg
xchg
sub
xor
sub
push
jb
push
sub
push
loopne
pop
adc
in
test
sub
fnstenv
cmp
imul
icebp
outsb
push
mov
sarb
sub
or
inc
sub
xchg
ja
sub
fsubr
aad
adc
pop
pmaddwd
push
lock
mov
fbld
int3
add
dec
aad
jo
es
or
sub
stc
nop
ljmp
xor
out
mov
sub
sbb
sub
jae
push
jp
or
cmpsl
mov
mov
pop
sbbb
inc
sub
dec
pop
test
push
dec
adc
jbe
push
aas
fsubrl
lcall
mov
sub
mov
adc
sub
pop
je
cltd
jmp
sbb
icebp
std
fmuls
sub
ja
imull
out
arpl
rclb
jae
fwait
or
mov
dec
and
out
jb
in
test
xchg
cmpsb
test
jbe
sub
jno
add
sub
mov
mov
push
inc
cmp
mov
mov
test
nop
push
jl
mov
out
mov
sub
push
sbb
sti
adc
mov
add
fisubrs
insl
repz
std
sub
hlt
js
lret
adc
mov
dec
push
mov
sub
jge
xchg
mov
pop
and
mov
cmpsl
inc
leave
xor
and
dec
lods
sub
movsl
pop
pop
pop
cmp
sub
jb
mov
mov
and
andb
inc
call
sub
push
and
sbb
adc
push
lods
and
xor
shrl
and
leave
movsb
and
xchg
and
mov
in
lods
outsl
and
sahf
jge
lea
or
jmp
jb
and
shl
dec
pop
jae
test
daa
mulb
into
insl
add
cmpsb
fldcw
pop
adc
sub
mov
fistps
call
lret
xchg
jns
pusha
gs
fdivl
add
shll
add
ja
add
lock
dec
jg
xor
adc
sbb
xchg
sub
jmp
inc
mov
sub
cmp
sub
sub
repnz
push
aas
mov
test
mov
pop
sub
int3
ret
test
sub
pop
stc
pop
shlb
xorb
jnp
push
cld
push
sbb
pop
xchg
lods
mov
test
cli
jge
movsb
mov
sub
fisttps
fldcw
mov
jle
sub
jae
push
in
pop
loope
jecxz
jecxz
les
notb
jmp
sub
cmp
aas
or
xorb
pop
ja
push
jmp
into
test
adc
jno
and
mov
push
loop
cvtps2pi
xchg
popa
jmp
fidivrs
iret
inc
stos
out
mov
fidivl
subl
and
add
lds
sub
jns
dec
fwait
lds
lret
mov
popw
add
sub
or
aad
test
stos
ds
sub
jb
dec
mov
imul
or
sub
sbb
lahf
sub
mov
jg
pop
push
mull
mov
aam
paddsw
fnstenv
dec
push
test
xlat
sub
pop
jmp
sub
push
cmpsb
and
pop
sub
nop
ficoms
int3
xor
lcall
sbb
or
loopne
sub
and
push
add
xor
sub
imul
xor
mov
clc
out
mov
or
rcll
sub
sbb
adc
das
mov
jne
add
pop
sub
test
dec
and
mov
sub
lock
sub
es
out
and
xchg
fldenv
roll
xchg
int3
and
xchg
or
incl
ja
fildll
fsts
inc
das
dec
sub
pop
in
pop
ds
outsl
in
sub
std
outsb
in
sub
push
aas
add
arpl
mov
jecxz
push
mov
int
gs
mov
mov
shrb
dec
fsubrl
sub
icebp
pop
scas
push
outsb
pop
lea
adc
push
loop
shrb
mov
jb
not
or
repz
repnz
xor
adc
enter
test
or
or
inc
push
jno
mov
sub
pop
sbb
jne
push
dec
jae
sub
sub
cld
jo
xor
in
jmp
lea
lret
cs
test
jbe
notb
add
xor
and
dec
pop
or
push
adc
and
sub
sub
mov
and
sub
xor
jg
dec
and
or
pop
push
mov
js
call
cltd
jl
mov
sub
mov
outsb
sub
aad
push
pop
dec
in
sub
push
mov
imulb
insl
mov
shrb
repz
popf
jg
ror
lcall
xchg
mov
and
fnstsw
outsl
xchg
xlat
sub
push
gs
fsts
scas
lret
xor
ja
mov
sub
mov
sub
arpl
sbb
sub
mov
outsl
push
stc
repz
into
daa
mov
cmpsb
xchg
sub
mov
inc
in
sub
mov
aaa
sub
mov
pop
push
xor
push
pusha
sub
mov
fsubrl
xchg
xchg
iret
stc
stos
sub
loopne
sub
mov
cmp
cmpsl
xchg
xor
xchg
lea
shl
mov
mov
dec
insb
in
mov
imul
sub
stc
ljmp
pop
ja
add
xor
ret
sub
std
lahf
sub
pop
sub
shrl
jecxz
out
sub
ret
xor
sbb
mov
adc
out
rcl
sbb
sub
in
fsin
mov
mov
jg
sub
mov
pop
gs
cmp
jbe
sub
fadds
mov
movsb
aad
push
push
and
loop
mov
jnp
push
dec
daa
test
fnstcw
xchg
xor
bound
fadd
jne
xchg
mov
int3
xlat
and
movsb
sub
aam
and
xchg
inc
imul
or
push
sub
jns
sub
data16
mov
iret
dec
adc
les
lea
cwtl
inc
daa
repnz
in
pop
dec
sub
idiv
mov
sub
inc
and
sub
fmull
int3
popf
mov
inc
add
fwait
pop
gs
aaa
sub
cmc
sub
push
mov
pop
sub
xlat
jb
xor
dec
leave
add
sub
pop
xchg
jne
cmp
xor
ficoms
jmp
das
les
adc
idivl
aam
and
loopne
sub
xlat
sub
test
inc
scas
mov
mov
xchg
nop
les
imul
ja
fs
cmp
shl
sub
mov
add
push
stos
mov
subb
imul
sti
mov
clc
dec
mov
or
movl
sub
addl
cmpsl
xorb
fdivrp
imull
sub
add
icebp
push
mov
lock
addb
out
jp
lahf
sub
ljmp
and
xchg
rcl
lahf
and
push
or
adc
cmp
push
push
imul
loopne
jo
fisubrl
hlt
pop
sub
jg
adc
and
dec
inc
cld
sbb
add
xchg
std
mov
sub
sub
aad
scas
xor
sub
add
and
out
dec
dec
add
call
mov
addb
inc
popa
nop
out
xor
pop
rorb
mov
mov
in
jne
mov
sub
mov
sbb
test
mov
enter
mov
lock
sub
cwtl
sbb
filds
popf
jo
out
es
sub
sar
xor
adc
js
loope
sub
mov
adc
jne
out
add
scas
mov
std
negb
loopne
or
sbb
push
inc
aas
daa
adc
cmp
mov
pop
mov
sub
xchg
fildll
mov
shl
in
lods
xor
inc
pop
int
jl
pop
xor
popf
mov
repz
sub
sub
cmp
and
push
imul
xor
arpl
rclb
adc
adc
xchg
mov
out
push
and
sbb
shrb
movsl
xchg
cld
lds
mov
subb
test
and
xchg
fsubp
in
jl
loope
lock
push
sub
aaa
sti
push
test
pusha
stc
lahf
outsl
xchg
xchg
into
xlat
out
pop
cmpsb
inc
cli
add
push
lock
ret
inc
stc
scas
sbb
mov
loope
xchg
pop
repnz
xchg
or
dec
sub
sub
enter
movsl
jns
fsubl
shrb
and
repnz
xchg
ret
adc
mov
cs
dec
sub
in
stos
lcall
mov
jl
sub
jae
pop
inc
cli
dec
je
sub
push
jmp
push
sub
pushf
aad
mov
jge
insb
sarl
adc
sub
jp,pn
push
sub
mov
cmp
mov
push
ficoml
add
push
jnp
cmp
fimuls
mov
aad
lcall
xchg
dec
scas
xchg
popf
jecxz
or
adc
and
lods
dec
push
cld
sub
fwait
sbb
shlb
sub
lods
mov
popa
sub
push
and
pop
aad
and
and
in
cmp
and
mov
js
or
sub
repz
shrb
loopne
aam
lea
bound
and
sub
iret
scas
sub
sub
push
daa
adc
pop
ficompl
jb
fildl
scas
mov
or
mov
scas
in
pop
rcr
lds
sub
insb
and
add
xchg
adc
dec
int
testb
pop
mov
sbb
lea
fdivr
jnp
cltd
outsb
add
neg
call
ljmp
in
out
xor
xor
add
sub
mov
aam
mov
addl
movsl
xlat
push
and
repnz
sub
sahf
lock
nop
sub
dec
mov
ret
jg
lcall
mov
dec
loopne
add
cmp
aaa
movsb
push
sub
push
push
dec
subb
pusha
imul
mov
pop
sub
sub
jae
xchg
addr16
pop
stos
nop
sbb
sub
scas
subl
cmp
adc
lods
rcrb
mov
and
add
ret
mov
sub
pop
cvttps2pi
cs
in
lret
xchg
sub
pop
cld
movsl
sti
sub
xor
fisttpl
and
xor
adc
test
sbb
call
shrl
pushf
dec
pop
pop
std
inc
jl
push
push
adc
ret
mov
aas
mov
xchg
test
out
fwait
mov
lcall
add
sub
daa
das
rcr
in
cmc
cs
je
or
push
sub
sbb
pop
aaa
sahf
adc
scas
sub
loop
out
sub
jo
cwtl
cmp
in
or
push
ljmp
sub
mov
sub
xchg
sub
ret
aam
fldcw
aaa
imul
push
dec
pop
push
jl
cltd
insl
mov
mov
inc
push
mov
sub
sbb
mov
test
xor
ret
sbb
sbb
das
xchg
or
aam
testb
sbb
js
aaa
mov
call
ljmp
hlt
sub
fwait
sub
fistpll
xor
js
fisubrl
mov
jg
xchg
ss
mov
scas
push
int
in
mov
test
fstps
sub
outsb
out
mov
cmp
pop
fwait
imul
inc
mov
sub
or
rclb
dec
sbb
sub
rcll
mov
mov
mov
sub
jge
mov
xchg
ret
adc
pop
cmpsl
cmp
adc
scas
test
sub
mov
jo
push
mov
and
leave
mov
sub
into
popa
test
ror
cld
out
push
andb
std
sub
sbb
mov
push
xchg
or
mov
into
popf
jmp
sub
sub
add
sub
hlt
and
sub
mov
and
lahf
test
enter
or
xchg
xor
aaa
mov
adc
daa
ds
pusha
cmpb
imul
mov
test
je
pop
lods
mov
ret
sahf
cld
inc
lahf
sub
adc
fcoml
insb
std
and
sbb
mov
lods
xchg
sbb
lret
stc
inc
mov
mov
jl
add
xchg
and
push
mov
mov
aad
inc
enter
xchg
pop
xchg
hlt
jo
and
hlt
in
les
pushfw
sub
mov
cmp
xchg
cmp
jp
add
sub
push
sub
push
cli
jne
xchg
jno
push
adc
insb
and
xor
imul
cmp
pop
xor
out
daa
cmpsl
dec
icebp
xor
iret
jae
or
int3
mov
push
push
paddusw
fcmove
xchg
dec
ljmp
xor
sarb
imul
mov
in
or
dec
sub
cltd
mov
sub
mov
fdivrl
ss
jnp
xor
dec
pop
sub
subb
sbb
sub
jb
cltd
sub
xchg
movsl
int3
pop
sub
sahf
or
filds
ja
not
push
xor
sbb
mov
imul
cs
mov
lods
in
jmp
gs
jl
mov
sbb
mov
pop
jns
and
mov
jmp
ret
xchg
lcall
adc
sub
or
int3
daa
adc
cmp
or
stos
ja
ret
clc
fdivr
sub
lret
sti
sub
clc
mov
sub
addr16
sbb
or
sub
fs
adc
aad
stos
repz
sub
xor
fadds
sub
push
stos
dec
imul
sub
xchg
sub
ljmp
cmpsl
xchg
add
push
sub
or
cli
sub
cmp
push
push
cmp
cmpsl
faddl
xor
pop
dec
and
sub
pop
cmpsb
imul
jg
sub
pop
stc
sbb
and
xchg
xor
mov
lods
lods
pop
sarb
sahf
mov
mov
aad
inc
icebp
sub
shll
sub
ja
movsl
pop
pop
xchg
jne
out
in
mov
adc
jecxz
xlat
or
out
push
sbb
push
fists
mov
push
xchg
pop
fldt
jno
leave
sub
mov
rclb
dec
push
fs
enter
sub
jg
xor
adc
mov
adc
bound
sub
mov
lret
fildll
sub
add
aam
ficomps
insl
testb
push
push
and
xor
cmp
imul
call
rcl
adc
ja
sub
pop
daa
add
fbld
and
dec
mov
test
cwtl
jg
push
rcrl
xchg
jbe
in
int
xor
repz
xor
outsb
xchg
cs
xchg
pop
lock
ja
sbb
lods
add
rolb
mov
inc
popf
cmp
and
imull
ljmp
hlt
adc
dec
jge
shrd
push
add
pop
movsl
sahf
sub
inc
stc
add
sub
jmp
and
mov
scas
sub
lea
push
add
into
mov
cli
push
das
cld
dec
clc
sub
mov
inc
mov
ret
add
sbb
cmp
into
xchg
add
push
mov
sub
xor
and
inc
add
dec
movsb
sub
hlt
mov
and
mov
jle
pusha
int
xchg
divb
sub
or
fidivrl
xchg
sbb
mov
xlat
pop
add
in
xor
cmp
icebp
dec
sti
push
sbbl
rcrl
pop
fnsave
push
mov
and
rcrb
stc
imull
mov
call
jnp
inc
mov
sbb
stos
dec
and
popa
dec
inc
iret
mov
inc
loop
sub
xchg
sub
loope
popf
aad
mov
jae
in
sbb
xchg
push
and
sub
adc
mov
icebp
sub
push
loop
mov
xor
push
sbb
sbb
in
loope
sub
xor
fcmove
lret
loop
mov
add
mov
inc
sub
add
xchg
xor
jmp
outsl
xor
mov
bound
jne
push
loopne
fisubrl
cmc
sarl
pop
mulb
and
mov
sub
cmpsl
in
sahf
and
add
frstor
add
or
sub
cs
inc
fs
jne
cmpsl
push
sub
divl
pushf
int3
pop
leave
and
push
ret
xor
jbe
sub
ljmp
sub
add
dec
pop
and
repnz
scas
addl
call
dec
in
add
push
inc
movsb
repnz
jns
fiadds
sub
jmp
ret
rcrb
mov
in
or
mov
sub
push
xor
add
mov
hlt
imul
cmp
jns
and
clc
sub
arpl
inc
mov
sti
rcrb
clc
jl
xor
es
cmp
mov
jg
dec
add
xchg
je
fsubrs
fcomi
adc
mov
lcall
push
xchg
stc
insb
popf
mov
sti
mov
add
or
adc
cmp
cmp
xchg
testl
xor
xor
pop
arpl
das
push
adc
mov
sub
sbb
sub
scas
cmp
insb
mov
mov
ror
std
fldcw
mov
in
and
test
cmpsl
fisttpll
xchg
mov
sub
out
lds
gs
les
adc
push
or
sub
ljmp
test
fistl
jns
sub
jbe
sub
mov
mov
sub
scas
mov
cwtl
sub
and
xor
and
jo
sub
shl
out
leave
cs
sub
dec
cmc
fisubs
pop
inc
dec
sub
and
js
mov
cmpb
push
call
pop
add
popf
fwait
sub
mov
or
xor
cld
sub
lods
stos
pop
jno
jg
pusha
inc
out
movsb
jbe
cmpsl
test
daa
aaa
pop
mov
repz
cmpsb
outsb
sub
lock
dec
pop
sub
ljmp
and
push
insl
sbb
rorb
nop
sub
cld
rol
add
test
mov
jb
and
xchg
stos
sub
out
xor
cltd
sub
mov
subb
daa
in
dec
and
xor
jmp
scas
jecxz
test
or
pop
mov
dec
push
into
lret
int3
xor
sub
and
repnz
imul
sbb
pop
or
add
mov
ret
dec
fidivs
sub
hlt
add
pushf
int
dec
dec
lods
and
fcmovne
xor
clc
jne
out
cmp
scas
loopne
xchg
pusha
sub
sbb
mov
pop
aaa
cmpl
push
mov
xchg
pop
xchg
sub
mov
ret
inc
sub
xchg
outsl
adc
lods
sub
in
sbb
xor
jne
mov
nop
imul
push
inc
ret
fimuls
xchg
add
out
sub
cmc
lds
gs
and
push
and
mov
fs
fmul
les
mov
pop
push
push
jmp
add
loop
andb
push
sub
loope
push
jl
sbb
insl
int3
jge
fidivrl
adc
cli
mov
repz
adc
push
xchg
and
inc
subl
or
bound
jae
int
es
sub
insl
sub
sbb
jg
lea
bnd
or
push
and
in
js
pusha
mov
test
lret
sub
or
add
hlt
xor
mov
cmp
dec
dec
test
test
xchg
aad
mov
daa
pusha
ja
or
mov
leave
adc
fisubrs
push
sub
push
xlat
inc
pop
sub
pop
insl
xor
adc
inc
sub
and
jecxz
sbbl
faddl
xlat
or
sub
inc
int
sbb
jns
insb
add
jmp
sbb
mov
out
rorl
sub
cld
fwait
push
daa
int
outsl
stos
and
lahf
ret
pop
das
sub
xor
lret
dec
bound
out
cmp
adc
mov
mov
sbb
push
test
sub
out
stos
aad
cs
fldcw
fwait
pop
imulb
sub
push
fcmovnu
je
push
ja
xchg
inc
std
dec
and
push
sarl
mov
ljmp
push
stc
xchg
jne
xchg
pop
mov
or
or
jecxz,pn
call
or
jp
mov
dec
pop
adc
ss
daa
cmp
pop
aad
sbb
std
adc
adc
and
fcmovnb
ja
popa
mov
xor
mov
loope
sar
mov
or
pop
and
cs
pusha
rclb
loopne
mov
xor
ja
les
adc
or
shrb
movb
sahf
or
or
dec
mov
and
push
xchg
dec
dec
test
into
xor
push
leave
fldt
pop
enter
sub
incb
insb
inc
push
cltd
sub
and
cli
bndldx
cmpsl
xor
scas
mov
bound
cmp
sub
adc
out
lock
cmp
cmpsb
dec
leave
stos
sti
sub
js
loop
sub
call
roll
popf
leave
test
mov
sub
xor
fisttps
int
rorb
and
jg
push
pop
and
lcall
mov
mov
mov
sub
inc
cmp
push
sub
ss
mov
loop
ret
xor
xchg
shrb
mov
jp
sub
mov
sub
and
jge
aas
mov
in
clc
adc
cs
test
scas
jle
pop
or
sub
push
stos
cmp
cmpsb
dec
push
sub
fidivl
pop
daa
fdivrs
outsl
cmp
sub
cmpsb
push
mov
pop
leave
arpl
sub
out
pop
sbb
movsl
dec
loopne
sub
stos
int
mov
jae
popa
rcl
ret
and
cld
and
jle
pop
push
add
mov
ds
gs
xchg
loop
fs
sub
xchg
int
xchg
sub
lret
or
in
and
ljmp
int
test
pop
sub
out
pop
jmp
sub
outsl
jge
stc
and
push
insb
aad
jno
push
jnp
jmp
int
xor
pop
mov
push
add
test
xor
les
sub
add
dec
pop
fldcw
inc
nop
or
dec
mov
in
jae
add
bound
dec
push
pop
jl
ds
hlt
mov
flds
loop
ret
cmp
adc
xor
xlat
cltd
push
dec
sub
stc
int3
test
sub
dec
cli
fmul
jne
adc
inc
and
mov
cs
stc
and
arpl
sub
cmpsb
cld
popa
mov
iret
adc
xchg
sub
cmc
rcr
mov
ds
mov
jnp
adc
sub
imul
mov
xchg
lds
and
mov
dec
into
mov
fwait
and
sbb
in
and
inc
cmp
out
cwtl
xor
aaa
sub
xor
dec
sub
inc
push
ja
mov
adc
sbb
xor
sub
jle
in
dec
pop
mov
aam
ror
daa
cmp
sub
mov
nop
insb
push
daa
adc
imul
and
lock
sub
shlb
aam
ret
sub
lds
loopne
mov
stos
cmp
mov
inc
adc
push
and
sbb
sbb
into
xor
mov
clc
sub
cmpsb
jnp
sub
jl
iret
sbb
dec
or
adcl
sub
mov
shrl
sub
adc
insb
lods
push
cltd
lock
dec
iret
clc
es
inc
sub
xchg
in
mov
xor
sti
js
cmp
sbb
sub
sub
lock
push
xor
cmpsl
sub
mov
jle
cld
jo
stos
and
mov
ficompl
sahf
mov
xchg
adc
arpl
lods
aas
sub
or
in
mov
dec
or
in
sar
jl
sub
cs
imulb
sbb
dec
ds
enter
sub
aad
movsl
jne
addr16
sub
outsb
rorb
movsb
and
sub
out
mov
dec
xor
daa
cmpsl
sub
sub
push
mov
xor
sub
in
sub
push
sbb
aas
sub
inc
or
lea
lret
je
bound
mov
cwtl
inc
sub
add
mov
fstp
xchg
fsubrl
negb
pop
dec
adc
fistps
mov
adc
call
mov
sub
int3
pop
push
sub
xchg
xor
adc
daa
dec
lods
sbb
cmpsb
mov
jb
sub
int
jmp
bound
pop
lds
pop
sub
ror
pop
add
inc
out
shrb
xor
mov
shlb
add
sub
shrl
sub
dec
test
sub
and
jge
xlat
sub
in
in
add
sahf
lret
and
loopne
lret
cs
in
sub
cmp
push
pop
outsl
pop
mov
cmp
jne
in
pusha
ja
outsl
mov
mov
stc
aam
ljmp
adc
mov
xchg
xchg
aas
cmc
das
cmp
int3
jae
adc
xchg
mov
fiaddl
aam
shrl
subb
lods
add
sub
test
hlt
sti
jmp
sub
and
jecxz
jle
and
jl
out
cmp
or
xchg
push
jne
mov
sbb
aad
arpl
in
jle
cmp
mov
sub
add
aam
ja
inc
ret
cmp
jnp
lahf
cmp
xchg
mov
mov
pop
cli
mov
sti
jnp
mov
inc
xor
sub
or
popa
pop
hlt
push
cmp
aam
or
sub
add
cmc
pop
flds
int3
sub
pop
push
dec
mov
clc
sub
jae
cltd
lcall
adc
insl
repnz
pushf
cmpsl
sub
outsb
add
pop
loop
pop
sub
push
push
sub
cli
aas
orb
and
jne
sub
push
xor
cmpsb
stos
adc
imul
xchg
das
test
jge
or
jae
data16
nop
xchg
mov
iret
pop
and
sub
pop
pop
sub
fisubrl
into
sub
dec
enter
and
loopne
jl
and
xchg
in
sub
in
hlt
cltd
daa
sub
adc
jle
pop
push
pusha
ret
loopne
out
dec
jl
inc
test
mov
test
mov
sub
xchg
les
sub
xchg
mov
pop
push
sub
int3
shll
adc
sahf
cmp
mov
and
mov
mov
out
add
incl
cmpsl
jne
addl
addb
push
add
adc
nop
lods
push
dec
jmp
ret
adc
stos
sub
in
sub
xor
fisubrl
lds
sub
stc
popf
imul
cmp
jae
mov
clc
shll
and
cmp
mov
scas
sub
sub
mov
sub
fs
in
lret
sub
aad
push
mov
sbb
outsl
pop
sub
lock
push
sub
es
push
push
jp
push
jae
popl
and
test
ret
mov
push
mov
loop
or
sub
out
xchg
cmp
push
cmp
das
cmpsl
js
push
lahf
adcl
pop
test
out
inc
xchg
movswl
into
adc
jbe
das
les
inc
fstps
pop
nop
xor
add
gs
cltd
rcrb
dec
mov
xchg
lods
jo
icebp
mov
aas
pop
pop
pop
test
mov
push
adc
sub
dec
mov
xor
int
or
arpl
icebp
ds
push
push
fcoml
push
dec
test
xor
push
aad
ds
shlb
enter
adc
mov
sub
or
push
sti
sub
jno
je
pop
pop
mov
outsl
cs
mov
lret
mov
sub
imul
sub
in
dec
mov
scas
mov
js
cmp
clc
cmp
fdiv
shl
sbb
xchg
mov
mov
aam
pop
shrb
mov
inc
sub
fwait
add
lods
and
sub
pop
adc
pop
sub
int
mov
xlat
iret
repz
or
inc
sub
cltd
inc
stos
sub
pop
inc
ss
or
sub
adc
mov
and
jns
cmp
js
sbb
mov
push
xor
mov
xchg
xchg
out
mov
insl
mov
sbb
push
or
xor
cwtl
cs
or
scas
push
adc
xchg
pop
repnz
push
into
xchg
xchg
sub
xor
adc
sub
dec
ss
or
mov
inc
stos
xchg
sub
push
mov
ficoms
and
fcoml
add
and
xor
dec
stos
fisttps
pop
or
subl
sub
out
mov
fdivr
mov
mov
in
bound
in
mov
cmp
scas
or
movsl
sub
jp
test
push
and
je
arpl
pop
jnp
sub
stc
sbb
xor
insb
and
and
movsb
xor
sub
mov
push
fs
sub
jne
add
xor
loope
dec
sub
int
jno
sub
cmp
sub
mov
hlt
add
push
sub
loop
push
test
pushl
mov
push
stos
les
int3
jno
pop
movsb
dec
adc
cli
or
xchg
inc
sub
movsl
out
fidivl
lea
das
and
loopne
add
mov
or
xchg
sub
jo
mov
sub
adc
fldenv
mov
aad
daa
and
sbb
in
ds
jno
dec
ret
xor
xchg
xor
sub
sub
popa
mov
xor
sahf
pop
test
inc
jb
mov
inc
leave
jmp
push
add
mov
fisttpl
sub
dec
xchg
inc
sub
data16
jo
stos
or
sbb
bswap
adc
sahf
daa
or
and
jecxz
test
inc
sti
pop
movsb
mov
sbb
nop
push
sahf
jnp
jmp
jmp
adc
sub
push
push
call
lret
add
sub
rcrl
adc
test
ss
xchg
mov
clc
movsl
mov
adc
repnz
addr16
and
sbb
mov
xchg
rolb
les
mov
fwait
or
sub
inc
dec
je
sub
ss
rorb
and
and
sub
ljmp
out
xchg
xchg
jne,pn
jle
cmpsb
or
orl
cmp
pop
loop
cmpsl
sub
xlat
repz
lahf
jo
and
pop
pop
or
scas
std
sub
outsl
sub
pop
aas
sti
push
sub
and
cmpsl
push
sub
mov
subb
shr
pop
scas
pop
fnstsw
lds
fstp
loope
icebp
push
jne
dec
in
mov
adc
mov
ja
add
jbe
out
and
cwtl
mov
orb
xor
push
lock
shrb
xchg
mov
jno
popf
loopne
enter
mov
fdiv
mov
adc
xchg
fs
sbb
sub
push
mov
negl
xchg
mov
sub
addr16
xchg
add
inc
push
sub
dec
sti
jg
sub
js
add
lcall
sarl
arpl
mov
and
fcoml
xor
xchg
cmpsb
dec
in
sub
push
lods
movl
pop
fs
cs
int
sub
lcall
cmovle
in
outsb
les
pop
inc
jb
lods
sub
mov
pop
push
fidivrs
shrb
sbb
sub
shll
cmp
out
inc
call
jae
mov
sub
mov
stos
cmp
call
shl
scas
adc
out
stos
cmp
jne
and
push
inc
sub
ljmp
shl
sub
fmul
sub
cmpsb
inc
scas
mov
ja
add
call
rcrb
pop
jmp
loopne
or
sub
aad
xchg
mov
iret
not
int
cld
sub
add
les
hlt
xchg
shlb
inc
and
and
xchg
cwtl
sub
iret
cs
xchg
sbbb
mov
sub
inc
sub
jp
cmp
cmp
and
scas
cvttps2pi
test
jne,pt
je
sub
out
lahf
cmpsl
cmp
sti
sub
insb
lret
sub
sbb
xor
push
cmp
addr16
subb
add
out
mov
mov
sub
ret
sub
dec
or
fwait
sub
pop
mov
xchg
push
sub
xchg
add
xor
int
cltd
les
jne
pushf
xchg
push
fldt
push
adc
sub
jle
push
or
push
aad
sahf
subb
push
cwtl
inc
loopne
push
sub
int3
and
push
mov
jecxz
sub
imul
mov
lods
jge
in
sub
xchg
sarl
out
mov
xlat
sub
cmpsb
leave
xchg
fisubrl
cmp
dec
sub
mov
add
inc
mov
das
sub
sahf
cmp
cltd
pop
adc
sub
sub
sub
lea
lret
pop
sub
movsb
test
mov
jmp
sub
xchg
leave
das
cmp
negl
aaa
sub
mov
cli
push
sub
inc
adc
sub
decl
pop
push
push
mov
aam
mov
sub
jge
jmp
mov
sub
arpl
and
cmc
int3
in
nop
sub
or
cmp
adc
or
push
push
cmp
jle
cmp
sub
mov
push
orb
cld
pop
dec
aam
dec
imul
in
lret
cmp
sub
pop
fwait
cmpsb
adc
mov
lret
jne
sbb
adc
subl
mov
sub
dec
popf
sub
pusha
add
nop
xchg
sbb
sbb
push
pop
dec
aas
es
call
shr
sub
ljmp
repnz
xchg
and
or
cmp
add
pop
loopne
sub
loop
addl
push
sub
and
push
das
sub
popf
std
mov
sub
mov
push
aas
pop
xchg
popf
sbb
sub
sub
pop
mov
xchg
jae
push
popf
call
outsl
sub
ret
mov
into
int
stos
sub
xor
sub
sbb
or
and
jno
inc
mov
sub
mov
and
push
cmp
nop
test
lods
dec
clc
xchg
movsb
loop
sub
inc
iret
adc
sub
push
xor
sbb
filds
mov
sub
mov
fidivrs
mov
mov
or
bound
sub
xchg
lcall
fnstenv
fisubrs
call
shll
popf
push
or
add
sbb
fstp
mov
push
xor
mov
sub
jg
jnp
sub
jbe
cmpb
loope
adc
mov
pop
shr
jb
pop
outsb
call
fmuls
scas
shrb
sub
sub
call
and
out
rcl
fildll
cmp
lcall
daa
ret
cmp
mov
data16
jge
lds
call
inc
inc
sub
sahf
push
sbb
in
aad
in
cmp
repnz
jo
subl
arpl
pop
fldt
dec
test
cwtl
sub
movsl
inc
cld
shrl
mov
subb
xchg
and
fdivrp
xchg
push
pop
sbb
mov
sub
gs
add
pop
mov
ljmp
mov
sti
mov
out
add
out
fs
mov
xor
in
sub
popf
in
xchg
cmp
je
push
sub
insl
stc
sub
pop
cmp
mov
and
scas
stc
dec
int3
mov
pop
insb
xchg
movsl
pop
jnp
lods
fs
xor
cmp
sahf
popa
pushf
sub
mov
push
outsl
dec
sub
shll
lret
in
xor
pop
add
addr16
xchg
or
sub
les
add
test
push
mov
fisttpll
int
xchg
adc
push
xor
or
ret
sub
jne
shll
jmp
repz
cli
cmp
dec
adc
aas
das
imul
loope
push
xchg
sub
jo
lea
sub
sbb
imull
sub
out
push
mov
mov
test
inc
dec
ret
sub
jl
ja
jne
or
out
sub
cld
cmpsb
hlt
cltd
popa
je
mov
lds
jbe
sub
xor
imul
test
cli
repz
sub
jb
jge
aam
pop
sub
push
jns
js
cmc
push
or
adc
xor
movsl
add
sbb
dec
ja
inc
sub
sub
jmp
cmp
adc
mov
gs
and
das
sbb
mov
aad
adc
sub
inc
stos
aas
add
push
loopne
repz
das
push
icebp
iret
sub
pop
xorb
scas
mov
inc
movsl
lret
sub
insb
clc
xchg
mov
dec
adc
add
scas
mull
dec
sub
xchg
xchg
lret
cmp
mov
int3
repz
push
jne
push
xchg
insb
lcall
lock
call
dec
insb
sub
mov
xchg
out
nop
sub
sti
pop
cs
dec
mov
in
and
push
loope
stos
fnstsw
push
rclb
mov
pop
lcall
dec
loop
sub
outsb
std
push
cmc
jne
adc
sub
aas
sub
test
pop
mov
add
or
xlat
and
mov
sub
xor
adc
aad
sub
pop
cli
mov
out
les
out
mov
jmp
call
or
imul
ds
sub
pop
test
subb
push
jne
sub
daa
enter
sub
jmp
xchg
push
cmp
jmp
inc
inc
imul
jle
and
cmp
mov
addr16
push
mov
sub
fidivrs
pop
cmp
xor
dec
push
dec
sub
sbbb
sub
or
loopne
shrl
dec
mov
mov
int3
xchg
fistpll
call
lcall
scas
jg
and
stos
jbe
nop
sub
jns
addr16
icebp
repz
call
outsb
mov
and
les
mov
mov
in
je
movsb
sbb
popf
ds
rcr
fmuls
je
or
and
fucomp
jne
mov
push
add
sub
add
ret
sahf
jb
cltd
scas
sub
std
cmp
in
inc
out
sub
mov
scas
sub
push
js
pop
sub
stos
xlat
jns
cld
and
cld
movsl
or
les
pop
sub
pop
xor
nop
sub
push
das
ret
dec
xor
cltd
pusha
push
fidivs
shl
mov
hlt
add
push
mov
dec
sbb
sub
pop
inc
mov
sub
push
sbb
cmp
push
test
outsb
es
hlt
mov
out
pop
mov
dec
in
jbe
cmp
sub
inc
mov
test
push
cmp
sbb
lahf
fcmove
add
sub
jl
lret
mov
push
and
mov
aad
jae
sub
pop
movsb
addr16
sbb
sub
leave
movsb
sub
je
dec
xor
bound
jae
adc
daa
scas
jecxz
push
adc
les
dec
mov
lcall
add
loop
and
in
push
cmpl
jbe
sub
cmc
adc
jne
cmp
and
movsb
mov
cmp
imul
mov
add
stc
nop
cmp
lea
pop
mov
sub
lcall
sub
mov
aam
xchg
sub
test
sub
and
cmp
sub
mov
cwtl
adc
lds
xor
push
in
test
sub
and
stos
add
pop
sub
xor
es
ret
mov
fmuls
fs
sub
inc
jecxz
call
sub
mov
ss
jbe
out
daa
jp
pop
aam
push
nop
sub
fildll
outsb
call
mov
inc
fldenv
pop
and
mov
test
ds
xchg
xor
stos
leave
fistpll
pop
loopne
inc
cmpl
push
decb
push
stos
cmp
xchg
dec
xorb
pop
imul
and
lret
and
clc
js
mov
outsb
adc
inc
lods
sbb
and
sub
mov
mov
movsb
mov
push
arpl
sub
adc
jae
lock
cmp
sub
es
mov
pop
xchg
scas
in
sub
sti
inc
pusha
in
sub
mov
xchg
sub
loope
xor
sub
push
xlat
sti
test
cmpsl
popf
scas
and
fildll
imul
sub
mov
std
in
xchg
data16
push
aas
mov
sub
pop
hlt
mov
pushw
mov
sarb
into
sub
sub
fnstsw
sub
pop
cmp
shr
pop
sub
sub
xchg
xor
mov
adc
cmp
mov
in
aad
cmp
out
into
lods
mov
sub
cwtl
stc
test
dec
xchg
sub
push
pop
sub
jno
aam
and
es
decb
jle
sub
inc
adc
jmp
fnstenv
push
or
add
bound
imull
lret
lahf
enter
in
aaa
lds
xchg
sub
test
sbb
andl
or
hlt
sub
es
aad
popf
pop
clc
jle
mov
fstp
pop
leave
ljmp
sub
mov
pop
lods
inc
sub
pop
mov
jp
jbe
inc
stos
int
sub
repz
jnp
punpckldq
fldcw
daa
popf
inc
dec
pop
add
pop
mov
ss
pop
sahf
cli
adc
mov
sarb
sbbl
cmp
rorb
cld
sub
adc
and
jge
faddl
xor
or
sahf
pop
gs
scas
pop
push
jns
add
cmpsl
and
out
mov
sub
cs
mov
pop
pop
pop
adc
mov
xchg
cld
pop
inc
fs
arpl
jbe
adc
sbb
fcmovu
xchg
pusha
sub
pop
lret
into
mov
add
sub
dec
jl
addr16
mov
sub
aad
and
sub
lret
shrl
xor
xchg
ficompl
imul
sarb
in
cmp
sbb
inc
movsb
sub
test
sub
jbe
gs
out
mov
stc
mov
pusha
jnp
insb
inc
test
dec
call
repz
xor
xchg
mov
push
and
rcr
pop
mov
add
cs
xchg
popf
add
inc
jns
sub
xlat
test
push
pop
sub
mov
ret
stos
sub
inc
xchg
ds
sub
arpl
pop
sbb
jp
mov
push
sub
add
mov
rcr
push
sub
js
adc
push
iret
test
int3
xchg
cmp
cli
and
sub
fildl
mov
into
xor
notb
sub
hlt
scas
sarl
iret
and
sub
subb
ficoml
dec
xor
dec
fidivs
push
sti
jl
movups
in
push
jo
lds
push
out
mov
fs
add
sti
nop
fwait
sub
in
inc
mov
add
adc
pop
or
cmpsl
adc
movsl
outsl
adc
cmp
shlb
or
call
push
inc
aam
pop
adc
mov
int
mov
pop
cmp
and
aam
or
stos
in
cmp
xlat
add
sub
and
mov
mov
test
pop
sub
lcall
cmpsb
and
sub
mov
aaa
jmp
inc
fldcw
and
sbb
xlat
pop
mov
popf
sub
and
mov
scas
shrl
adc
aam
inc
addr16
sub
jl
mov
inc
arpl
in
pusha
mov
add
and
sub
xchg
sub
sub
imul
aad
mov
pop
mov
cmpl
sub
mov
mov
xor
mov
mov
sub
xor
push
rcrb
cmpsl
and
jne
pop
outsl
call
pop
dec
fwait
pop
jp
test
xor
adc
jl
js
aam
aas
out
cs
xchg
push
sub
mov
inc
fsubl
sub
mov
mov
nop
pop
int
jb
add
aas
sub
gs
dec
or
sbb
ja
into
movsb
sub
out
xor
rcrb
add
das
shll
dec
or
xorb
mov
incl
lods
daa
add
xchg
pop
push
sub
pop
sub
enter
sub
jns
sbb
daa
insl
aaa
sub
inc
pop
sub
jnp
xor
mov
bound
add
scas
sub
imul
popa
sub
es
jb
sub
fst
sub
js
mov
sub
call
rcr
aad
mov
mov
mov
add
cmp
lods
arpl
mov
pop
adc
iret
jbe
dec
in
int
pop
daa
adc
repz
push
sub
inc
mov
dec
fcoml
xchg
mov
bound
sbb
andl
lret
sub
cmp
mov
mov
and
jge
mov
xchg
mov
push
in
testb
lcall
sub
inc
mov
push
cmp
add
mov
scas
je
xchg
test
test
pop
outsl
push
push
adc
into
mov
sub
cld
xchg
outsb
sbb
arpl
fwait
es
scas
scas
subb
cli
andl
push
pusha
mov
outsl
xor
shr
test
mov
pop
fdivrl
xchg
and
dec
add
adc
xchg
mov
rep
mov
mov
mov
push
xor
in
das
inc
cmp
sub
ret
cld
mov
test
and
sub
fiaddl
les
add
nop
jmp
jnp
xchg
sbb
xor
fldt
popa
icebp
imul
mov
pop
js
sub
mov
insb
sub
adcb
fildll
int
jae
stos
loop
push
scas
jb
jecxz
mov
les
cmp
pop
aam
mov
push
loop
imul
cmpsl
jmp
adc
test
sub
jg
jne
sub
xchg
test
idiv
xor
movsl
adc
mov
jno
inc
lods
mov
push
sub
cwtl
out
lea
jmp
in
mov
and
daa
push
inc
and
negl
dec
test
sub
hlt
and
pop
or
mov
pop
sub
popa
repz
cltd
mov
mov
adc
fwait
test
sub
insb
jns
test
pushf
pusha
sub
dec
shrb
leave
push
arpl
nop
idivl
adc
jge
sbb
sub
sbb
movsb
inc
xor
push
aam
pop
fbstp
dec
mov
cld
daa
ret
lcall
int
sub
fcmove
inc
mov
aam
and
add
jns
daa
and
jmp
repnz
ret
mov
cld
push
fs
sub
and
fsubrs
cli
lcall
sub
sbb
mov
mov
clc
lods
xor
sarb
out
inc
not
push
sub
sub
ja
and
lods
stos
dec
mov
sub
mov
inc
jne
and
shrb
lods
dec
loop
sub
inc
stc
clc
sub
ljmp
adc
jg
sub
or
lods
aad
es
cmp
int
mov
addr16
fistpl
pop
aad
ja
jo
mov
jb
mov
add
int
add
mov
sub
les
loope
lock
dec
rorl
bound
mov
mov
imul
add
stos
lods
pop
fdivrl
rorb
incb
sub
push
out
jns
shrb
cwtl
xor
xchg
mov
push
dec
or
mov
jbe
stos
and
mov
test
fmuls
xchg
mov
sub
dec
enter
frstor
in
das
jno
aad
sub
sub
and
xor
jo
push
jns
inc
mov
dec
cs
adc
fimuls
int
stc
call
sub
daa
loopne
jle
cmp
add
and
cmp
mov
adc
sub
push
fisubrl
mov
lahf
lods
xor
mov
sub
adc
inc
int
sub
movsl
repz
movlps
sub
ss
cli
xchg
xchg
and
dec
add
add
push
xchg
xor
icebp
shl
jge
sub
sub
jmp
data16
sahf
and
sub
movsl
cli
add
out
mov
mov
cmp
daa
sub
fmuls
sarl
sub
pop
scas
sbb
sub
xor
les
inc
cmpsb
cs
cld
js
mov
int3
arpl
sub
mov
sbb
popa
mov
or
sub
pop
mov
sub
push
add
mov
addl
and
mov
lock
xchg
mov
test
dec
jmp
sub
mov
xchg
in
sub
in
add
cmp
cmpsb
fstl
dec
and
push
test
je
jg
ret
dec
les
sub
aad
sub
insb
ss
adc
sbb
xor
popf
mov
popa
mov
pop
cltd
xor
push
rolb
lock
sub
cmc
add
cmp
jecxz
dec
xor
xchg
sub
or
pop
inc
les
int3
cmp
pushf
add
xchg
sub
push
fdivs
cmpsl
fucom
imul
cmp
add
push
sub
sbb
addb
data16
or
sub
pushf
fnstsw
cli
xchg
in
insb
adc
inc
adc
imul
fwait
jnp
push
xor
add
movsl
aad
pop
fs
xchg
adc
stc
cs
jo
sub
fcmovb
sbb
push
mov
sub
das
sub
mov
ds
push
in
add
add
jge
cltd
orl
jae
mov
jl
aam
fcoml
sub
sbb
pop
jae
jb
mov
dec
adc
add
push
sub
push
faddl
sub
adc
sub
mov
mov
dec
je
jbe
jne
daa
in
mov
inc
imul
jmp
stc
repnz
and
push
xor
mov
push
sub
lcall
pop
pop
or
repz
cld
loopne
pop
aad
outsb
jo
xchg
mov
dec
sub
sub
mov
jb
mov
gs
or
adc
push
aam
inc
push
ficomps
sbb
push
sub
fs
cmc
or
or
mov
lcall
mov
nop
fsubrl
es
xchg
lods
lock
sti
cmp
subl
sub
loope
xchg
cmp
testb
sub
subl
gs
sub
pop
pop
shlb
push
inc
adc
dec
les
aas
psubsw
sub
xor
call
sub
mov
rclb
xor
cmpsl
push
je
adc
test
sub
pop
xchg
fistpl
push
xchg
daa
pop
sbb
cmp
add
rclb
cwtl
adc
and
xor
jge
ds
sub
test
mov
xor
push
xchg
bound
jno
add
sub
mov
stos
stc
sub
insl
in
sub
and
sbb
sub
lea
out
mov
or
or
lret
pop
pop
cld
sub
push
add
push
nop
pop
negb
jno
dec
iret
into
test
sti
xchg
stc
cltd
call
inc
sub
sbb
push
sub
in
daa
fists
sub
xlat
repnz
mov
ficoms
jg
sub
scas
push
jbe
sub
inc
sbb
lahf
in
xor
push
add
aad
jmp
stc
pop
ret
push
mov
jne
aam
ds
jp
and
xchg
sub
or
pop
and
jge
test
xchg
mov
mov
adc
sub
scas
movsb
out
sub
in
fisubs
add
xor
test
sub
cmpsl
sub
outsl
dec
mov
in
cmpsb
xchg
lahf
das
cld
sti
enter
adc
mov
inc
jg
cmp
das
in
dec
fwait
sub
pusha
cmp
sub
rcll
mov
dec
push
fsubr
sub
outsl
outsb
dec
stc
push
adc
jle
aaa
lods
xchg
lods
pop
cltd
aam
cmpsl
sub
test
cmp
or
in
dec
push
dec
jge
lret
aam
mov
test
cwtl
mov
mov
push
leave
ret
mov
ljmp
sbb
icebp
insb
sub
outsl
pop
sbb
xor
sti
popa
mov
jge
xchg
idiv
sub
cmp
or
sub
aaa
pop
rcr
push
or
lret
cli
fcmovnb
and
pop
sub
sub
dec
les
add
in
mov
mov
push
loop
int
cmp
xlat
jp
lods
cld
jmp
sti
fistl
cmpsb
adc
aas
test
lds
imul
jae
adc
sbb
inc
cld
push
xor
push
sbb
lods
ret
push
data16
sub
or
faddl
das
insb
push
icebp
jl
neg
sub
repnz
sub
inc
jl
imul
aam
cs
pushl
add
sub
xchg
aaa
lahf
int
cmp
sub
test
mov
inc
cmp
sub
movsl
cmpsl
aaa
cmp
aas
or
xchg
jge
mov
dec
sub
xor
shrb
bswap
sub
cwtl
aam
and
push
decl
lret
pop
inc
mov
jmp
cli
hlt
inc
ja
cmc
and
jnp
xor
jmp
mov
lcall
sub
xor
sub
push
lcall
je
pop
push
cs
imul
cmc
xchg
lret
inc
mov
clc
sahf
cmp
adc
leave
xchg
addr16
or
adc
scas
sub
sub
push
fidivl
test
sub
out
arpl
sub
dec
test
fistl
pop
sub
stos
pusha
inc
xchg
dec
pop
dec
ljmp
cwtl
pop
xchg
fimull
stos
cmp
add
loope
dec
dec
inc
cmp
sub
cmp
jns
pop
add
jo
adc
es
cmpsl
xor
add
jle
add
in
push
cs
jmp
lds
rcrl
xor
cld
sub
push
gs
xchg
cmp
mov
add
pushf
sub
icebp
jge
sub
sub
inc
adc
inc
xchg
shlb
imul
lcall
mov
xchg
outsl
sub
out
mov
ds
fsubs
subb
into
clc
xchg
push
sub
aad
hlt
fwait
enter
mov
sub
sbb
lds
pop
sub
inc
xor
ficoml
xor
mov
fs
cmc
lods
ret
mov
sub
add
xor
cmpsl
imul
dec
jae
mov
stos
xchg
ficompl
sub
cmp
outsb
shll
mov
fcmovb
in
arpl
dec
fildll
repz
lcall
sub
and
mov
jbe
jnp
int
icebp
push
sub
rep
leave
sub
lahf
outsb
stc
adc
and
sub
adc
dec
mov
and
arpl
fwait
jecxz
and
xor
mov
fcmove
sub
lea
jo
adc
or
sub
push
rcrb
gs
daa
sahf
adc
sub
scas
sbb
push
in
or
sub
dec
mov
cmp
cmp
test
scas
int3
jae
iret
test
dec
sub
cmp
call
sub
cld
lods
addb
arpl
int3
out
sbb
cmp
pop
adc
cli
pusha
out
jp
and
subb
inc
outsl
sub
inc
fdiv
aas
sub
mov
mov
mov
fmulp
xchg
sub
jno
mov
xchg
jge
xchg
je
push
sarb
shrb
push
gs
cwtl
sub
mov
add
loopne
mov
add
cs
sub
push
stc
fsubrs
jno
insb
fisttps
leave
sub
aaa
in
and
mov
sub
add
dec
jmp
fsts
sub
std
mov
xchg
add
push
test
jecxz
cmp
les
inc
sbb
pushf
jo
shlb
push
orl
in
xchg
cmp
sti
out
les
lods
mov
and
xorb
shrb
int3
xor
movsb
or
xlat
cli
fisubrs
clc
imul
fs
movsl
dec
xor
adc
mov
inc
iret
cs
mov
aad
push
cmp
clc
repnz
scas
xor
dec
push
andl
jge
mov
das
in
cld
sub
pop
sbb
mov
sbb
jnp
or
aaa
push
sub
dec
and
jge
test
or
aad
jb
pop
std
leave
stos
sub
push
divl
orb
sbbb
xor
dec
cmp
and
fcoml
addr16
sub
in
mov
aam
cmpsb
andl
pushl
insb
xlat
cmpsl
or
dec
jmp
frstor
add
fdivr
and
and
out
gs
scas
adc
stos
adc
leave
or
mov
dec
cmpl
jle
dec
push
mov
insl
int3
jo
or
xor
clc
mov
sub
enter
sub
lods
push
sbb
js
mov
and
sub
int3
mov
das
sub
and
loope
sub
inc
fmuls
test
mov
fbstp
int3
jp
rolb
xchg
pop
add
cmpsb
sti
lods
mov
push
xchg
dec
ds
loop
sub
fsub
sbb
popa
sub
push
in
cmpsb
cmpsl
sub
cltd
into
add
shlb
pusha
sub
ret
xchg
cmp
jmp
xchg
push
push
aas
test
clc
sbb
arpl
mov
adc
enter
subl
or
int
iret
sub
inc
mov
xlat
stos
icebp
in
test
int3
test
stos
shll
mov
movsl
sub
sti
adc
cwtl
inc
insb
mov
out
or
adc
out
test
ds
outsl
sub
dec
push
jo
sub
xchg
xchg
mov
pop
lea
lods
adc
dec
dec
push
add
adc
ljmp
sbb
outsb
pop
mov
test
bound
sub
push
cltd
cs
jne
add
sub
notb
sub
fs
and
sub
outsb
sub
call
std
sbb
lret
rorl
stos
sub
and
xor
xchg
in
dec
lods
ss
push
jg
outsb
test
sub
sub
pop
sub
sbb
or
mov
mov
rcll
sub
xchg
ss
add
sub
sbb
loope
sub
shr
imul
out
int3
cmp
and
and
cs
pop
inc
jl
sbb
jns
cmpb
mov
xchg
push
push
movsb
movlhps
adc
sahf
sbbl
movsl
or
stos
lret
test
sub
push
add
lods
sub
test
shll
jns
inc
xchg
daa
cmpsb
add
cli
cld
das
sub
push
arpl
mov
dec
sbb
dec
sbb
pushf
in
faddl
pusha
scas
mov
mov
push
inc
lret
rorl
pop
addl
int
xchg
daa
xchg
jmp
mov
inc
sub
and
jo
inc
jle
and
movsl
out
cmpsb
pop
mov
xchg
jnp
xor
pushf
inc
dec
in
or
mov
outsb
mov
sbb
cld
icebp
or
jo
sub
ret
mov
insl
lds
cmpsb
jmp
add
addr16
test
xor
mov
mov
popa
pop
or
fcmovbe
and
add
add
js
jae
lahf
adc
cltd
test
cli
popf
cld
pop
subl
xchg
les
in
sub
push
iret
xchg
xor
cmp
sub
push
int
xorb
cmpsb
push
sub
jp
int3
pop
sub
xor
cli
push
sub
shlb
dec
inc
ret
push
dec
cmp
and
mov
mov
fisubl
fwait
sub
imul
ficompl
aam
repnz
jp
dec
and
in
sub
roll
in
sub
pop
popf
jne
adc
mov
sbb
xchg
scas
lcall
and
cmpsb
lret
pop
fdiv
and
aam
fidivrl
lods
sub
xor
imulb
mov
in
aaa
out
xchg
adc
or
xor
mov
inc
mov
sbb
daa
and
inc
xlat
mov
sub
jb
sub
lea
sub
inc
flds
sub
clc
xchg
lds
cmp
jle
loopne
fsub
push
and
aas
push
mov
shrb
fisubrs
sub
test
lret
fdiv
mov
sub
lock
fbld
ja
addb
cld
sbb
inc
add
sub
xchg
or
dec
and
in
or
sahf
sub
jne
mov
in
dec
xchg
mov
inc
enter
dec
sub
and
imul
sti
lea
xchg
push
sub
jg
or
pop
sbb
les
xchg
cmp
push
jmp
daa
ret
sti
mov
pop
jo
in
jmp
sbb
fistpl
outsl
std
inc
and
push
mov
jp,pt
sbb
mov
mov
mov
push
gs
jbe
mov
push
int
sub
lea
jp
into
sub
iret
clc
dec
imulb
fsub
ja
sub
push
int
scas
sub
or
push
xor
inc
jb
or
jg
out
push
sbb
xor
test
push
and
push
daa
aam
pop
sub
mov
jae
sbb
pop
push
popa
jecxz
push
cmc
sub
lods
xchg
inc
cmpsb
sub
mov
jmp
mov
add
cld
mov
jne
pop
cs
push
int
and
mov
adc
and
xchg
js
fst
lret
or
call
rcrl
jns
and
mov
out
jne
rcll
hlt
fbstp
subl
push
xor
lods
push
mov
shrl
mov
dec
int
push
jo
pusha
cs
xchg
hlt
pop
sub
outsb
test
lcall
ss
adc
scas
sub
mov
rclb
sahf
gs
sub
out
xchg
or
and
jge
sub
xchg
inc
push
in
cmp
cli
inc
pop
aam
sahf
and
sbb
xchg
adc
adc
outsl
sub
dec
ljmp
mov
loop
adc
outsl
cmpsb
push
or
sub
cld
sahf
and
mov
inc
jge
subb
cmp
loope
xchg
pushf
pusha
push
test
mov
sub
jno
sub
sub
pop
cwtl
fsubl
sub
ucomiss
jb
and
sbb
lods
push
xchg
inc
push
ret
out
and
jbe
scas
xchg
test
test
sub
in
push
popf
mov
push
or
sarl
and
sub
je
fists
pop
lahf
iret
cmp
sub
aaa
arpl
insb
dec
mov
jb
sbb
lret
fnsave
mov
or
popa
pop
and
mov
iret
jmp
xchg
mov
fnstcw
aad
inc
cmc
popl
fistpl
mov
outsb
or
jecxz
mov
scas
pushf
movsb
leave
sub
pop
push
jp
lds
adc
cmpsl
cmp
push
repnz
andb
daa
sub
jle
int3
int
jnp
daa
mov
test
imul
or
in
push
push
popf
lds
xor
sub
sarb
xor
imul
pop
sbb
gs
daa
repnz
pop
adc
jg
ljmp
stos
and
test
cli
push
cmp
xor
xor
xor
adc
aaa
jns
lcall
scas
sub
pop
xchg
test
jb
fildll
mull
pop
sub
sub
pusha
inc
push
adc
aaa
xor
mov
dec
pop
add
adc
sub
cmp
in
decb
sub
jne
sub
sti
jns
jae
out
nop
sub
push
out
scas
es
xor
cmp
jmp
cmpb
mov
push
mov
xchg
stos
aad
test
pop
jae
sub
lret
lret
sub
js
push
jg
cmpsl
jp
sub
hlt
inc
fisubl
adc
sbb
sub
xor
push
mov
xchg
hlt
mov
sub
mov
mov
mov
sub
adc
push
jp
dec
sbb
shr
iret
sti
fsubp
push
xchg
sub
xchg
pop
pop
or
adc
cmp
push
xchg
mov
cmpsl
mov
sub
sbb
pop
dec
adc
sub
sub
fisubrl
mov
or
push
xor
sbb
imul
inc
sub
clc
gs
push
sbb
incb
cmp
repz
push
add
fst
out
ret
xchg
enter
push
lock
mov
xor
xchg
int3
test
lcall
sbb
cwtl
mov
dec
mov
push
sub
and
test
stos
sbb
dec
mov
xchg
xchg
push
xchg
sub
jno
mov
out
and
aad
decb
rorb
cmp
lret
inc
out
in
and
xor
cmpsl
and
and
bound
daa
mov
lret
jl
sbb
add
cmc
orl
add
jne
inc
jge
js
popa
ret
into
or
sub
popf
xor
clc
mov
push
int
bound
call
mov
pop
and
popf
lods
jg
jo
sub
jbe
push
xchg
aad
leave
dec
leave
mov
ja
xor
outsb
jne
inc
sub
pop
gs
cmp
pushf
mov
sub
sub
mov
rcrb
jp
jne
movl
xchg
xor
call
mov
sub
mov
rol
repz
scas
inc
bound
in
inc
addb
scas
aas
inc
xor
enter
outsb
sub
mov
cmpsb
mov
dec
jae
pusha
mov
pop
push
arpl
fldcw
outsl
sbb
mov
pop
jmp
in
shll
adc
sub
fmull
adc
hlt
movsl
push
js
pop
sbb
and
push
outsb
bound
int3
push
mov
out
scas
imul
inc
stos
movsl
in
out
inc
cmp
push
push
sbb
in
mov
arpl
pop
sub
fimuls
rol
sub
cwtl
jne
stc
xor
cmp
sub
sub
int
js
sub
sti
mov
aaa
fdivrs
sub
ljmp
and
stos
pop
cmc
push
mov
xor
fcmovne
jg
mov
jecxz
or
into
test
and
push
xchg
in
loop
push
imul
addb
push
jnp
or
push
push
mov
mov
int3
push
imull
pop
cli
mov
aad
in
imul
mov
mov
xor
sub
lret
mov
iret
clc
sti
repz
nop
pop
ficompl
dec
sub
and
mov
lret
ds
mov
push
jnp
jb
in
adc
mov
rorl
and
dec
popf
aaa
inc
movsl
and
sub
xor
mov
jb
sub
jge
movsl
dec
sub
imul
sub
sub
lods
add
inc
sub
mov
jl
mov
aam
sub
daa
sarl
test
mov
mov
inc
inc
lcall
cmpb
add
nop
jo
shr
cld
sub
inc
or
stos
lea
call
loopne
icebp
inc
cmp
jp
int3
push
mov
sub
sbb
sub
jg
lret
pop
sahf
mov
aaa
sub
cmpsl
push
addr16
sub
mov
sbb
sub
mov
jo
repz
jp
or
int
jle
mov
add
pop
add
test
stc
mov
sub
jp
xchg
addr16
ljmp
cmp
jmp
mov
imul
loope
addb
push
xchg
jmp
sbb
jbe
jmp
cmpsb
cmp
mov
lret
pop
and
mov
into
push
aas
ja
adc
jo
mov
xor
and
lods
mov
aas
into
mov
sbb
icebp
inc
fnsave
cmp
dec
adc
rorl
or
pop
incl
sub
xchg
repnz
test
sub
imul
sub
stos
outsl
or
call
mov
pusha
push
pop
xor
jp
test
clc
movsl
sub
jno
in
push
cmp
mov
push
and
stc
xor
mov
int3
sbb
lret
sub
mov
xor
iret
mov
mov
clc
push
or
fsubrl
int
mov
cmp
fimull
js
push
scas
call
rcll
popf
pop
push
sub
pop
mov
cmpsb
fildll
pop
popa
dec
aas
sub
mov
ds
pop
jle
xchg
jbe
jmp
fsubrl
repz
insb
jno
mov
sub
inc
hlt
inc
add
push
dec
ss
pop
nop
bound
xlat
outsb
scas
sub
sarb
push
and
lret
mov
xor
jo
jns
xor
adc
sub
addr16
add
cld
cli
and
ret
sub
and
or
fildll
in
mov
inc
cmp
inc
and
arpl
scas
sub
pop
ret
adc
cmp
into
push
lret
cmpsb
sub
ret
sti
inc
adc
loopne
or
ss
inc
adc
mov
les
pusha
jg
loope
arpl
insb
shrl
call
leave
les
fcompl
sub
dec
sub
insb
cltd
jle
add
cwtl
sub
mov
xchg
popf
add
mov
sub
mov
in
xchg
sub
push
add
movsb
int
jmp
sub
xor
mov
ret
pop
jb
pop
lahf
inc
loopne
sub
mov
and
ljmp
sbb
ret
and
and
fdivrl
sahf
pop
lahf
ror
add
and
aaa
add
pop
out
sub
cmc
rcll
mov
push
jae
xchg
cmp
divl
jnp
mov
and
nop
test
push
je
sub
mov
int3
int
loopne
push
and
adc
sub
xchg
sub
xorb
sub
inc
mov
aaa
adc
xchg
imul
mov
sub
cmc
ja
stos
and
out
xchg
mov
fwait
xchg
adc
push
daa
popa
out
fimull
inc
or
jne
bound
sub
aam
jl
int
adc
sbb
dec
adc
cltd
lods
dec
mov
xor
fwait
mov
mov
push
stos
test
and
movsl
cmpsl
jb
jg
cmpsb
leave
les
jbe
xor
nop
es
push
jne
inc
lahf
fcomps
xor
xchg
rorb
stc
sub
dec
test
add
movl
sub
mov
popl
and
sub
xchg
out
jmp
ret
repnz
xor
or
push
dec
loopne
mov
sub
push
lahf
pop
lock
andb
addb
cmpsl
jnp
lret
or
out
xchg
pop
adc
sub
inc
gs
sbb
sub
sub
fs
mov
cmp
inc
sub
add
ljmp
lock
sysenter
fisttpll
cmp
adcb
jp
mov
jns
js
ljmp
int
xchg
out
and
mov
dec
push
sub
loope
and
test
push
andb
cmpsl
sbb
bound
xchg
jo,pt
sub
pop
cmp
in
aad
ret
std
sub
sarl
cmp
fstpt
mov
pop
dec
test
or
adc
push
gs
sub
sbb
dec
ss
sub
ret
mov
add
push
and
mov
xorb
sub
sub
and
xchg
sub
out
xor
mov
ror
cmp
mov
pop
push
sub
dec
xchg
mov
sub
incl
cld
ja
sub
mov
sub
push
in
mov
cmpsl
addb
sbb
pop
mov
inc
sub
cmc
lret
sub
dec
mov
into
mov
imulb
and
cmp
js
cmpsb
sub
das
jp
shrl
idivb
push
sub
pop
fildll
in
arpl
dec
mov
sub
or
push
pop
or
daa
sub
int
das
mov
test
ucomiss
mov
inc
je
and
pop
push
gs
ss
clc
mov
lahf
mov
or
mov
sub
mov
roll
add
and
mov
mov
and
jge
aad
xchg
ret
mov
sub
xor
sti
push
sahf
popa
adc
sub
fwait
lret
adc
cmp
loopne
push
daa
sub
fsts
mov
cmp
mov
into
push
lret
mov
cld
push
stc
and
xchg
scas
sub
inc
ror
cmp
jnp
mov
sub
dec
cmp
shrl
sub
mov
hlt
xor
out
int
inc
and
sub
mov
xchg
js
rcrb
mov
sub
icebp
mov
sub
in
lcall
cmp
lods
les
or
jp
xchg
lea
es
sbb
sub
lahf
push
jns
and
adc
and
push
mov
jmp
dec
int
sub
pop
mov
mov
sbb
out
int3
popl
pop
sub
and
sub
testb
lds
cmp
dec
sub
jecxz
jl
sub
pushf
cli
mov
cmp
push
jno
repnz
jge
inc
cmp
sub
lods
clc
sub
cmp
testl
stos
ja
sub
hlt
orb
imul
lods
push
int3
call
cmp
fsts
and
xor
sub
fcomip
xchg
push
sub
mov
clc
bound
and
sub
fwait
mov
pushf
out
inc
hlt
or
lds
or
pop
mov
and
add
fwait
jo
ds
sub
cmc
into
test
mov
out
popa
sub
setge
push
jge,pn
aad
cmp
fadds
inc
shrl
and
xor
sbb
mov
cmpsb
jno
movsl
sub
xchg
fwait
aam
and
mov
lods
cmp
sub
jmp
dec
aaa
sub
and
xchg
xchg
xchg
ljmp
lcall
sub
mov
mov
push
lods
mov
pop
mov
ret
mov
add
or
and
inc
clc
push
nop
aaa
jne
pushf
daa
leave
inc
sub
in
movsb
sub
push
pop
subl
mov
test
outsl
adc
jge
add
adc
ret
fsubr
test
lock
lahf
mov
daa
jle
add
sub
push
sti
mov
push
mov
mov
lahf
jb
sub
in
cltd
cmp
push
lea
sub
loop
rcrb
xchg
cmp
jo
fs
xchg
sub
leave
adc
ret
aas
dec
push
movsb
sbb
ljmp
frstor
inc
sub
add
jno
scas
mov
enter
lods
sub
sub
or
add
adc
rcrl
ret
shlb
xchg
dec
addr16
adc
mov
sub
push
js
or
push
mov
jnp
test
adc
addb
inc
rorb
jno
dec
ss
rcr
mov
sub
xchg
push
aam
aad
jecxz
daa
inc
fists
sbb
ljmp
mov
add
add
sub
dec
cs
lcall
jb
imulb
inc
mov
and
mov
and
sarb
sti
lods
push
inc
fs
push
pop
jge
sub
sbb
inc
pop
sub
xor
sub
lods
cli
and
push
xchg
lds
scas
repz
cvtps2pi
push
outsb
into
inc
or
sub
mov
mov
adc
sbb
jne
sub
mov
fisubl
sub
mov
mov
add
mov
cmpsb
clc
jge
enter
gs
mov
jns
jl
in
inc
and
in
inc
out
js
cmp
adc
sub
test
cmpsl
sub
outsl
sbbb
sub
aaa
sub
movsb
fsubl
adc
pop
pop
cs
mov
test
popf
mov
pop
pusha
cli
cs
sbb
push
cltd
sub
or
js
and
faddl
fcomi
and
rcrb
ds
bound
scas
fwait
mov
xchg
leave
adc
dec
sub
repnz
in
sub
xchg
mov
jp
sub
dec
in
pop
push
pop
mov
ret
adc
sub
stc
stos
or
shrl
sub
jnp
in
sub
xor
rolb
lds
jae
loope
int
popf
sub
sub
leave
push
add
out
jle
int3
aad
fs
sub
cltd
sub
xchg
jecxz
xor
int
cmc
xchg
mov
scas
add
ja
push
popf
xor
mov
imulb
push
dec
lods
test
jae
push
out
jne
sub
loop
movsb
pop
sub
mov
adc
mov
in
and
lds
lea
and
mov
iret
xchg
jp
jmp
roll
test
fiaddl
sub
in
and
cmp
push
in
jge,pn
lods
inc
in
adc
stos
and
aam
scas
lods
cmp
cmp
sub
in
lock
test
push
lret
sub
sbb
sub
mov
sarb
fldenv
mov
sub
mov
sub
lcall
imul
sub
ss
daa
stos
and
incl
mov
add
nop
sub
data16
pop
testb
push
dec
jmp
cmp
lcall
lods
add
inc
loopne
pop
pop
cmp
jecxz
stos
pop
jne
ja
je,pn
pop
xchg
ss
and
sub
mov
clc
jmp
mov
cwtl
and
sub
add
dec
sbb
cli
shrl
arpl
cmpl
pop
hlt
mov
fldenv
aad
cld
sub
mov
add
dec
fcomp
call
dec
repz
enter
es
mov
xchg
insl
hlt
cmp
sub
stc
sti
std
cltd
add
addr16
out
or
cmpsl
sbb
jl
push
mov
lcall
xlat
jnp
stc
testb
mov
sbb
mov
xchg
stc
stos
sub
sbb
cmp
aam
les
mov
mov
jl
cld
sub
nop
insl
push
fnsave
clc
push
icebp
scas
fwait
imul
pop
rcrl
ja
frstor
xor
cli
jae
sub
cwtl
roll
repnz
or
jl
sub
cmp
sub
test
pop
pushf
sub
push
push
inc
inc
sub
enter
sub
imul
jo
insl
lods
mov
sbb
sub
les
mov
or
ret
mov
mov
lret
sbb
cs
in
add
sub
fldt
push
lret
sub
hlt
enter
inc
out
call
or
sub
ficoml
pop
test
mov
std
xor
aad
fmull
mov
mov
sub
jbe
shlb
int
imul
bound
pmovmskb
fldcw
inc
loop
push
fcoml
test
mov
push
into
lahf
adc
mov
mov
ret
cmp
lret
shll
mov
inc
dec
jne
sub
jge
inc
cvtps2pi
test
inc
enter
cmp
or
andl
in
int
cmp
pop
mov
leave
scas
loopne
mov
pop
addr16
mov
ljmp
adc
cmp
and
inc
ljmp
das
test
and
frstor
lods
cmpsl
mov
sub
dec
sub
mov
dec
fsubrl
ss
mov
jle
push
xor
out
sub
sarl
xchg
iret
adc
mov
push
or
or
dec
inc
or
dec
sub
fisubl
or
dec
pop
inc
xchg
add
ret
mov
iret
lahf
mov
xor
outsl
adc
cmpsb
cwtl
cmp
mov
daa
faddp
xor
jl
cmp
sub
push
out
sub
push
fsub
add
into
in
cmc
jbe
xor
test
shlb
hlt
jae
ret
push
xchg
int
aas
jecxz
mov
lock
cmc
mov
leave
pushf
sub
lods
mov
shrb
loop
cmp
pop
sub
in
insb
lods
scas
test
int
push
sub
jo
cs
sub
cmp
xor
add
subl
cmp
lcall
mov
sbb
cmp
adc
push
mov
inc
or
repnz
add
dec
adc
xchg
jl
into
orl
vpmuludq
scas
popa
das
mov
xchg
sub
in
sub
push
out
dec
sub
cmpsl
test
mov
jmp
jb
inc
sub
jmp
insl
push
sub
or
das
sub
jb
dec
add
test
xor
js
jg
sbbb
xchg
push
mov
sub
jne
mov
xlat
cmp
jmp
xchg
jno
inc
cmp
pop
and
push
loope
scas
jne
push
and
sbb
xor
or
sub
stos
cmpsl
add
sub
out
cmp
pop
xchg
mov
push
and
fwait
pop
in
fisubrs
push
sub
jnp
repz
sub
lea
addb
addr16
and
sbb
aam
push
sub
adc
fs
xchg
add
aad
and
xchg
dec
in
fsubrs
or
xor
adc
les
cli
xlat
sub
jbe
ficoml
xor
pop
push
test
fstpt
sbb
ret
scas
loope
ficompl
cmp
push
mov
pop
cmpsl
test
dec
or
mov
jmp
pop
sub
scas
xor
aad
dec
mov
aas
sbb
fdivrl
xor
in
mov
rcr
rcrb
mov
sub
faddl
sub
pop
dec
ret
adc
xor
out
xchg
xchg
aam
sub
and
rcrb
cwtl
and
sub
cmpsl
or
pop
sub
inc
ds
sub
sbb
rcll
fwait
push
mov
sahf
sub
pop
mov
lock
mov
test
or
jmp
xor
dec
xchg
mov
stos
cmp
mov
lret
cmp
sbb
and
jae
xchg
jecxz
mov
int
and
mov
jge
nop
jb
call
shll
mov
sub
fiadds
sub
fucom
filds
test
and
and
lcall
ljmp
sub
orl
sub
fisttpll
fidivs
test
mov
cld
ffree
mov
rcrb
in
adc
rclb
rcrl
pop
sbbl
jge
iret
mov
cltd
in
sub
out
repnz
jno
ljmp
add
or
add
scas
lea
mov
pop
je
cmp
sbb
cmpsb
adc
push
nop
pop
shll
sub
push
enter
push
sub
dec
jnp
pusha
out
mov
mov
mov
roll
sub
fiaddl
call
mov
in
into
jb
cmp
and
add
xchg
push
mov
out
out
ss
pop
sub
jmp
mov
jns
inc
or
cmp
xchg
cmp
sub
xchg
test
and
cmpl
sub
xchg
sar
xchg
pop
fstl
xchg
movsb
sub
push
sbb
xor
pop
sub
call
pop
mov
in
cld
sub
sub
add
aad
popf
cmc
stc
dec
push
lods
mov
stos
das
jo
lock
xor
xor
xor
lds
dec
xchg
sub
and
cmp
fwait
mov
hlt
test
lods
imul
hlt
and
push
add
dec
sub
int3
sub
movsb
lcall
js
mov
sub
scas
push
pop
mov
cmp
rolb
mov
dec
adc
iret
jg
sub
or
repz
sub
ret
lods
sub
cmp
push
jl
and
jge
lret
sbb
mov
enter
ficompl
lret
dec
sub
fsts
clc
mov
pop
push
or
leave
addr16
xor
out
push
xchg
push
push
xchg
sub
adc
mov
pop
sub
pop
sahf
add
movsl
and
daa
sbb
and
das
jecxz
xlat
outsb
sub
mov
sbbb
push
cld
jns
sub
fists
jmp
ret
fstpl
stos
sarl
sub
push
inc
fldt
cmp
add
stos
sub
mov
iret
pop
int
push
imul
out
lret
mov
or
sub
jno
addr16
and
inc
outsb
push
cs
pop
test
andl
and
pop
aad
test
popa
add
fisubrl
fadds
or
lock
cmp
sub
movsl
or
jp,pn
sub
ljmp
cmp
mov
xchg
and
pushf
sub
jecxz
and
sub
xchg
cmpsl
test
sub
scas
pop
cs
or
jo
push
push
aaa
loopne
pop
cs
or
adc
ret
test
push
aas
sub
insb
sbb
outsl
push
xor
stos
mov
enter
test
scas
movsl
sub
cmp
mov
lea
shrb
dec
push
ljmp
test
test
and
scas
lret
test
sub
cmp
mov
jnp
jge
jb
mov
jecxz
ljmp
scas
push
sub
pop
jno
scas
sub
jns
adc
pop
pop
or
cld
sub
pop
inc
xor
mov
cmp
js
sub
icebp
bound
pop
mov
lret
or
cs
sti
jmp
cltd
inc
not
xor
dec
test
dec
and
xchg
aaa
leave
js
inc
mov
callw
add
sub
test
mov
fsubrl
pop
je
xchg
fildll
add
xor
jb
sub
repnz
jbe
flds
mov
repz
sbb
sub
in
dec
cmc
loop
sub
cmp
scas
xchg
lods
add
pop
jne
scas
stos
sub
mov
lock
loopne
push
out
and
cmp
pop
sub
lcall
aam
es
aad
ljmp
pop
jge
mov
loope
stos
mov
push
adc
push
loopne,pn
cmpsb
jbe
in
xor
cmp
insb
xchg
jmp
fcoms
or
stos
inc
sahf
out
aad
sbb
sub
mov
sub
insb
or
lahf
rorl
subb
sbb
jno
je
cmpsb
dec
arpl
mov
jle
in
xchg
sub
fnstenv
stc
mov
xchg
add
dec
mov
fistps
xor
aad
sbb
sub
push
lds
push
test
mov
stc
stos
ret
and
and
lea
dec
in
jnp
sub
sbb
addr16
push
cmpsb
mov
mov
popa
push
sbb
xor
call
sbb
fnstenv
cltd
dec
cmc
or
mov
aad
xchg
jae
inc
fcoml
jecxz
push
mov
pushf
sbb
scas
sub
sbb
push
mov
sub
inc
sub
movsl
cmpb
je
jne
cmp
int3
push
inc
fiadds
mov
fdivrp
adc
mov
push
inc
test
fstl
add
pop
xor
sub
adc
mov
iret
mov
cltd
sub
and
fidivrl
arpl
mov
insb
and
xchg
repz
sub
adcl
push
sub
push
mov
ljmp
fwait
adc
sub
mov
jecxz
sub
inc
mov
pop
jne
cli
jb
mov
int
movsl
cwtl
sub
or
mov
sbb
sub
xor
movsb
mov
sub
cmpl
daa
int
sub
pusha
cwtl
ljmp
repnz
sub
mov
add
out
not
and
jne
mov
jmp
sub
cwtl
out
mov
sub
cli
sbb
cld
fidivrl
sub
test
stos
addr16
sub
pop
rolb
mov
lret
push
jae
imul
adc
cmp
enter
repz
ljmp
sub
adc
or
mov
ret
xor
outsb
sub
dec
pop
std
add
out
fcoms
and
cmp
ret
es
inc
sub
mov
cmp
ljmp
inc
dec
xchg
sub
mov
pop
loope
repz
mov
push
test
lods
adc
addl
push
add
fiaddl
adc
xor
ret
adc
shrb
ret
inc
sub
in
dec
mov
adc
gs
sub
sbb
adc
insb
sti
or
sub
sub
repz
stos
cld
ficomps
gs
lea
or
xchg
xchg
mov
ror
sub
loope
cmp
and
jbe
or
dec
ds
xor
test
scas
sbb
cs
or
push
int3
adc
inc
pop
enter
mov
and
in
push
sub
and
pusha
test
addr16
fcomp
cmpsl
mov
fisttpl
mov
lret
xor
shrl
fisubrs
push
movsl
pop
dec
ljmp
dec
js
cmp
popl
lods
sub
out
add
leave
mov
pop
sbb
sub
fildll
jmp
adc
lods
adc
lcall
enter
sub
pop
inc
cmp
repz
por
in
xchg
outsb
sub
jle
pop
lock
pop
sub
mov
xchg
sbb
mov
rclb
pop
and
inc
push
mov
iret
push
mov
enter
sub
in
sub
add
cli
adc
sahf
sahf
jecxz
imul
cs
cmpsb
cmp
xor
scas
jae
sub
and
push
gs
outsl
cmpsb
mov
aad
inc
push
mov
xor
stc
adc
aas
sub
adc
sbb
paddusb
sub
push
inc
mov
pop
jmp
fldt
adc
popf
inc
hlt
repz
in
pop
mov
mov
sub
jle
into
sub
cmp
fwait
movsb
sub
in
xchg
push
insb
sub
loopne
mov
cs
sub
ret
test
xorb
sub
stos
nop
jb
and
enter
icebp
fimuls
insb
sub
adc
sbb
xor
mov
mov
sbb
mov
out
sub
xchg
sub
push
stc
jecxz
push
mov
cmc
xor
addr16
and
fst
sub
pop
xchg
cmpl
jecxz
sbb
xchg
pushf
pop
fsubrl
push
sub
sub
iret
js
cmp
or
pushf
push
mov
sub
jg
sbb
cld
xchg
push
adc
sub
mov
ja
adc
cld
dec
sub
or
xor
inc
int
sub
dec
xor
lea
rolb
iret
mov
ljmp
push
mov
repnz
inc
clc
dec
and
or
add
xorl
in
and
iret
lds
loopne
inc
mov
imulb
add
xor
test
xor
sub
xchg
mov
push
int3
shrb
fistpl
shlb
ds
sub
fldcw
sub
in
or
mov
dec
ja
and
jo
sub
clc
mov
lock
pop
push
xchg
bound
aam
lret
mov
daa
sub
ljmp
pop
and
ss
inc
xor
push
jns
fdivl
dec
jmp
ret
bound
stos
les
or
subl
xor
jno
arpl
xor
jae
cmp
cli
imul
repnz
sub
cwtl
clc
adc
add
vpsrld
pushf
data16
and
int3
sub
adc
or
fnstenv
aad
sub
sub
ds
rcr
stos
jp
and
outsb
jno
push
std
insl
sub
or
sahf
stos
ret
mov
xchg
sub
push
cmp
fnstsw
clc
cmp
push
inc
sub
fiadds
pop
sbb
or
inc
idivb
adc
aaa
sub
or
repz
icebp
aas
cmc
fwait
jae
and
pop
and
gs
or
sub
dec
or
das
push
in
add
xchg
mov
pushf
xor
cli
sub
ja
out
xchg
mov
mov
sub
xor
pop
fidivl
adc
hlt
jb
movsl
mov
xchg
pop
sub
sub
cli
adc
jno
sub
sub
incb
mov
je
inc
test
imul
cmc
mov
call
pop
push
ret
sub
leave
mov
jb
ficompl
fidivs
adc
ss
and
sub
inc
xchg
mov
jp
add
xchg
mov
mov
inc
xchg
pop
pop
inc
repz
xor
scas
dec
sbb
popa
out
pop
add
jg
daa
repz
aad
xor
int
sbb
pop
cmp
ss
imull
and
cmp
iret
add
cli
fs
ss
pop
pop
or
shrl
dec
and
rcrb
dec
and
sub
cmp
sub
stos
imul
shll
jge
sub
repnz
subb
dec
sahf
cmc
sub
je
or
clc
cmp
outsl
hlt
cmp
jp
in
sub
adc
cmpl
and
pop
xchg
cmpsb
or
fcmovbe
cld
pop
or
arpl
sub
sbb
je
inc
sbb
inc
jne
and
mov
push
fst
ja
sub
add
push
outsb
fmul
es
hlt
popa
mov
dec
fldcw
pop
jle
adc
imul
lea
or
xchg
jbe
hlt
mov
xchg
sub
in
pop
fildll
push
loope
mov
push
mov
jns
incl
je
and
jle
lahf
mov
lret
sub
adc
insb
cmp
jnp
or
imul
pop
mov
xlat
xchg
popa
lds
loop
lcall
fadds
cltd
push
adc
insl
lds
sbb
sub
mov
mov
add
jae
test
inc
jecxz
shrb
pushf
dec
int3
cmp
mov
mov
push
jnp
mov
loop
mov
push
mov
sub
jg
subb
adc
jne
sub
mov
movsb
and
repz
sub
add
inc
xor
hlt
push
dec
and
lcall
mov
mov
repnz
sahf
ja
fiaddl
mov
subl
in
and
xor
jl
mov
insl
add
lds
or
ja
dec
cmpsl
add
xor
xorb
cltd
dec
in
repz
mov
mov
leave
pop
sub
xchg
push
test
in
jle
jl
outsb
inc
addr16
adc
sbb
push
mov
and
jno
jmp
sub
aam
fisubs
mov
jecxz
sub
sub
mov
push
sub
ljmp
push
sub
repz
sub
imulb
or
sub
loopne
pop
pop
cmp
jle
jge
sub
ds
push
pop
sub
xchg
imul
mov
repz
xor
mov
inc
sub
outsl
bound
cmpl
xchg
push
mov
xor
aad
sub
lahf
andl
cmpsb
inc
sub
fmull
mov
outsl
jns
xchg
mov
xchg
sub
mov
out
sub
shll
fcoms
cmp
push
push
scas
cmpsl
adc
sub
mov
mov
inc
clc
xlat
movl
pop
outsl
or
sub
lret
xchg
sub
sub
movb
cmp
push
mov
ljmp
pop
add
push
xchg
icebp
sub
pusha
into
lcall
add
pop
or
sub
jge
cmp
sub
daa
pop
fisttps
aam
mov
out
push
jne
or
sub
test
xchg
iret
sub
push
enter
or
adc
jae
insl
xchg
je
pop
inc
xchg
or
stos
xor
mov
pop
sub
xchg
push
mov
negb
ljmp
mov
xchg
xchg
sub
dec
push
subl
xchg
sub
sub
sub
sub
xlat
adc
sub
inc
pop
rcr
sub
fsubs
inc
bound
aam
dec
mov
cmp
fcmove
sub
push
ret
xor
fwait
or
outsb
xlat
lods
sub
jge
or
or
sub
sbb
lds
sub
loope
dec
shrb
or
idivb
sub
cmp
adc
xor
je
push
xor
icebp
test
fldenv
sahf
sub
mov
movsb
or
and
sub
jo
sub
inc
test
lds
sub
sub
push
cmpsb
cmp
sub
lret
adc
mov
push
arpl
outsl
xchg
sbb
cmp
das
cs
xchg
call
mov
sub
ret
fcoml
xchg
jbe
inc
int
in
fisubrl
xor
es
xor
ss
mov
stos
out
dec
jge
repnz
pop
mov
fwait
cmp
in
sub
imul
mov
test
btsl
je
sub
xchg
lahf
cmp
adcb
lds
inc
jnp
add
stos
xor
add
mov
fisubrl
cli
sub
jb
mov
xor
jo
test
add
fldl
fildl
sub
call
jecxz
xor
and
pushf
aad
pop
jle
outsb
cli
pushw
out
sub
and
inc
xchg
xor
mov
shlb
jne
repz
adc
pop
movsb
ljmp
lcall
xor
adc
aas
and
xor
lea
data16
mov
mov
pop
sub
aad
push
lcall
add
xor
mov
and
push
inc
jl
cmp
pop
mov
inc
out
jecxz
cmp
mov
and
jo
dec
in
aaa
addr16
ss
test
mov
and
add
lock
push
lods
or
hlt
cmp
push
movsb
dec
inc
push
and
int3
xor
pop
ret
sub
pop
mov
fisubrl
aam
mov
jae
dec
push
repnz
jmp
imul
jns
sub
int
jmp
ret
push
lcall
popf
adc
jbe
fucom
cmc
pop
daa
cmp
mov
cmp
andb
pop
push
and
sub
mov
clc
sub
test
dec
dec
addr16
int
or
push
nop
push
lock
jmp
popa
adc
pop
xor
sub
sub
push
inc
lock
les
dec
fsubrl
sub
js
jmp
mov
iret
sti
xor
call
cmp
and
les
push
push
inc
int3
je
cmpsl
and
cmpl
mov
ret
sub
mov
push
std
lret
adc
data16
dec
xchg
sub
int3
sbb
adc
sub
popf
gs
call
mov
sub
sbb
insl
icebp
inc
into
xor
mov
sbb
lcall
xchg
mov
dec
mov
shlb
icebp
test
or
fisubl
out
sub
rorl
push
sub
shrb
xchg
push
imulb
jno
ret
enter
mov
clc
mov
push
lods
cmp
rolb
xlat
addl
xor
cmp
mov
sbb
mov
jno,pn
jmp
add
mov
fsubp
stos
xor
dec
in
inc
les
sub
adc
add
call
pop
jne
sbb
mov
inc
mov
sub
in
cmp
pop
push
xchg
das
dec
or
fsubrs
jg
outsb
cltd
pop
add
pop
mov
mov
repz
mov
out
in
sub
inc
xchg
mov
sub
clc
sbb
es
shrb
and
push
lods
sar
inc
arpl
sub
pop
shlb
jge
lods
cmp
aaa
data16
in
xor
lock
sahf
and
or
sub
xchg
cld
call
mov
in
pop
lahf
scas
scas
jmp
movb
sub
jl
adc
call
or
dec
out
sub
xchg
mov
sbb
jp
aas
ljmp
into
sub
sub
je
cmpsl
add
cmp
hlt
int
dec
test
mov
js
out
in
sub
fstl
xchg
jns
test
xchg
mov
or
lea
pushf
repz
sahf
add
adc
or
pop
fldl
push
xchg
ret
sub
add
stc
mov
in
push
loope
jmp
int
sbb
xor
or
sub
mov
mov
xor
add
add
fsts
mov
cmc
xor
inc
stos
mov
jae
aas
inc
xchg
movsl
dec
shrl
les
mov
arpl
push
xor
popf
sarb
sub
or
int
ffree
sub
mov
jne
sub
jle
movsb
dec
mov
push
add
push
push
nop
imul
movsb
aas
push
mov
pop
dec
dec
lea
cmp
mov
iret
stos
mov
mov
xor
jns
aaa
sub
dec
pop
inc
mov
sbb
mov
mov
pop
stc
and
cltd
cmp
and
inc
or
and
dec
xchg
xor
daa
mov
and
xchg
mov
pusha
pop
leave
shll
cmp
idivl
or
or
cltd
es
inc
popf
sub
mov
movsl
pop
xor
sub
mov
sbb
sub
daa
sub
sbb
add
jmp
sub
push
and
pop
jns
xchg
iret
test
jmp
ret
loope
sub
jl
mov
sub
mov
cmp
add
push
jbe
push
subb
outsb
pop
jno
jp
add
into
sub
inc
clc
into
daa
add
nop
and
insb
xchg
inc
mov
lahf
cli
jae
mov
imul
pop
mov
mov
aad
sub
sub
iret
sub
fdivl
jnp
dec
pusha
les
sub
lds
lret
xchg
ljmp
std
mov
sub
aam
pop
loope
pop
das
mov
sub
ret
cmpsl
into
jns
sub
xchg
sub
hlt
jo
cs
or
je
insb
std
push
scas
push
jg
subb
arpl
cmpsl
mov
negb
sbb
mov
jno
sub
and
lods
add
and
outsb
mov
pushf
icebp
into
leave
pop
ret
lret
push
fwait
shll
jo
xchg
cmpsb
js
out
cltd
cld
xchg
shrb
ret
cwtl
mov
mov
pop
rorl
mov
push
aas
xor
push
push
stos
imul
xchg
or
fs
imul
adc
xlat
mov
inc
popf
xor
jae
cmp
movsl
inc
jmp
lock
inc
loop
out
sub
scas
dec
mov
lret
sbb
push
cli
add
sub
insl
idivb
sub
or
and
fiaddl
sub
movsb
push
insl
pop
call
test
push
jp
cmpsl
xor
dec
mov
mov
lcall
adc
inc
loopne
adc
adc
repnz
push
outsb
xchg
mov
aad
pop
jl
lea
push
in
or
sbb
aam
push
shlb
mov
int3
clc
fsubrs
cmp
shrl
and
scas
inc
in
add
jge
mov
xchg
mov
sub
and
or
push
scas
mov
pop
or
pop
insb
pusha
cmp
dec
pop
xchg
lods
push
pushf
adc
fcomps
outsl
sub
mov
mov
jmp
adc
pusha
sub
testl
mov
dec
xchg
pop
sub
scas
mov
push
sub
ret
fs
aaa
faddl
cltd
aad
dec
lret
mov
cmpsb
jle
mov
pop
sub
cmp
mov
mov
decb
in
data16
cmp
hlt
cmp
or
mov
popa
sub
mov
setg
jl
rcll
push
sub
sbb
mov
sub
jbe
cmp
xchg
stos
and
sub
faddl
hlt
je
sub
mov
mov
test
xor
arpl
xchg
mov
pop
jecxz
scas
sub
mov
int3
dec
and
sbb
pop
jbe
loop
inc
idivb
cli
shr
jle
adc
and
daa
fcmovnu
push
sub
data16
dec
int3
jne
mov
movsb
sub
dec
sub
imul
mov
xor
adc
loope
and
sub
inc
mov
push
mov
out
lods
and
dec
sub
xorb
mov
mov
out
cltd
pop
cmp
cwtl
xor
jmp
stc
je
aaa
pop
cmp
adc
and
test
fdivl
movsb
mov
and
sub
cltd
addl
sbb
lea
aaa
sti
js
cwtl
xchg
xor
ds
or
sub
pop
aam
fmull
pop
sar
inc
and
sub
jmp
mov
inc
popf
int
and
sahf
push
nop
sub
mov
cmpsb
lcall
mov
or
mov
loopne
sub
ds
adc
xor
adcb
cld
xor
or
lret
je
mov
mov
negl
addr16
xchg
inc
mov
insl
xchg
sbb
test
sub
scas
xchg
mov
fs
movsl
inc
mov
in
inc
aad
nop
inc
dec
sub
into
push
cltd
sub
cmp
dec
lea
cwtl
dec
scas
aad
and
ds
cwtl
mov
pop
xchg
sub
outsl
cmpsl
lret
ja
dec
loope
sub
adcb
cmc
push
cmpsl
pop
addb
mov
clc
fwait
sti
jg
push
pop
cmp
movsl
iret
test
pop
sub
aas
nop
pop
fisubrl
xor
aaa
xchg
sub
fcoml
imul
sub
cmp
aam
icebp
imul
adc
pop
adc
mov
jne
lods
jns
sub
cmpsb
mov
mov
popf
ss
out
stos
nop
ds
rol
sub
xchg
sub
dec
mov
sub
mov
push
lahf
sub
jg
pop
sub
xor
inc
dec
cli
mov
cmp
or
aad
pop
bound
cmp
fxch
test
sub
xlat
xor
adc
shlb
and
sbb
xor
arpl
outsl
sub
call
ror
xor
aad
mov
ljmp
xchg
lret
gs
ds
inc
in
js
jge
pop
jo
lcall
sub
mov
repz
xchg
inc
mov
rcrl
loop
ficomps
data16
sbb
pop
lret
sarb
adc
mov
pop
sub
js
nop
mov
and
stos
add
push
gs
sub
dec
fisubrl
or
add
xor
xor
sub
mov
repnz
pop
ja
cmp
leave
xchg
sub
cmpsb
adc
jo
inc
sub
push
arpl
cmp
sbb
lcall
mov
push
push
sub
les
sub
insb
in
hlt
sub
ja
dec
and
jae
jge
int
out
je
sub
aam
xchg
pop
xchg
add
sub
fmuls
in
push
cs
out
rclb
stc
addl
pop
or
ret
sub
jae
out
stc
adc
popf
stos
arpl
sub
int
push
imul
mov
xor
sbb
adc
mov
aam
mov
sub
cwtl
cmc
les
ds
lret
push
jg,pn
xchg
push
jb
jecxz
push
addl
jmp
jg
and
loop
mov
sub
sbb
rcll
push
fisubrs
mov
dec
popa
jp
sub
jecxz
scas
int3
and
out
mov
inc
push
sub
addb
lds
xor
sub
test
dec
sbb
pop
adc
sub
push
inc
or
jne
sbb
mov
test
fsubr
lds
or
mov
push
insl
inc
lds
imul
xor
add
pop
stc
sub
dec
mov
icebp
test
mov
pop
mov
sub
leave
sub
and
inc
imull
test
shrl
dec
fidivrs
jmp
add
in
sub
mov
aam
jp
daa
xor
sub
into
xlat
sti
inc
sub
jae
cli
cmc
sub
sbb
daa
sub
int3
jmp
xchg
ret
sub
insl
stos
arpl
add
sub
sub
and
xor
lahf
rcrb
test
mov
clc
sbb
dec
mov
inc
loopne
sub
mov
dec
scas
and
lods
fs
dec
xchg
aad
repz
sub
inc
into
fcmovnu
loopne
sub
sbb
jecxz
shlb
mov
jmp
xchg
aam
sub
or
out
and
imul
loope
and
and
lods
sub
sub
test
aas
jo
pusha
popf
pop
sub
sarl
test
cld
adc
punpckhbw
fstpl
sbb
pusha
jb
cs
mov
pop
push
or
pop
add
jae
cmpsb
push
sahf
pop
fstpl
sub
xor
dec
jg
inc
and
ja
sub
inc
lret
cmp
adc
adc
or
mov
xor
ds
loope
shlb
mov
test
js
fwait
jno
and
enter
movsb
mov
scas
loop
sbb
inc
xor
and
jo
xchg
sub
sbb
sub
ss
cli
lret
sub
test
addb
pop
xchg
fidivrs
cmp
notb
daa
mov
jmp
sub
push
scas
sub
lods
shll
sub
leave
mov
cli
sbb
sub
inc
push
mov
jge
cmp
scas
lods
gs
inc
jg
mov
idiv
jbe
inc
xor
push
mov
jmp
mov
aaa
and
rclb
lods
cs
sub
mov
aam
int
pop
stos
sub
mov
frstor
mov
adc
pop
out
sbb
push
and
jge
popa
fstl
mov
out
sahf
sub
scas
xor
sub
leave
push
mov
mov
dec
dec
test
and
mov
std
into
xor
ficoms
sub
jmp
in
inc
dec
adc
ljmp
cltd
xchg
bound
aam
add
mov
fsubr
push
sub
and
xchg
sub
les
inc
jne
hlt
jo
lds
into
xchg
cld
sbb
or
in
loope
cmp
stos
push
loop
sub
mov
ss
fstl
je
dec
ret
mov
and
sbbl
xor
jl
jnp
mov
sbb
mov
add
subl
addb
test
sub
pop
sub
dec
jae
std
sahf
fcomi
lods
cld
sub
mov
push
fwait
cli
sub
jmp
sub
push
or
aad
loop
pop
push
cmp
xchg
jmp
push
inc
sub
lods
xor
cmp
push
cmc
and
jne
out
jl
mov
or
xchg
jns
cli
dec
cmp
adc
jecxz
cs
dec
lock
filds
cli
lea
adc
and
iret
and
testl
mov
ret
test
dec
push
sub
addr16
cld
sub
push
in
jp
mov
lds
sub
xor
add
sub
pop
cs
mov
jbe
test
mov
and
movsl
sub
leave
sub
mov
div
icebp
push
or
adc
mov
push
mov
pop
mov
sub
pop
pop
sub
sub
daa
ficompl
sub
xlat
sub
jge
shll
jb
inc
add
inc
sub
stos
shlb
cltd
sub
lcall
sub
or
popa
jle
loopne
adc
cmp
mov
sub
stos
loope
and
pop
mov
scas
cmp
sub
sbb
mov
clc
fwait
mov
dec
sub
push
inc
sub
out
sub
sub
push
jnp
push
or
and
pop
subb
sub
sub
fadd
aad
lock
xchg
daa
dec
jp
lcall
sahf
cwtl
pop
xchg
fsubp
pop
sub
sti
sub
in
xchg
leave
rol
mov
inc
inc
or
sub
dec
or
insl
push
fs
cmpsl
inc
adc
fldt
pop
out
repz
or
jmp
pop
pop
pop
inc
inc
int
std
arpl
adc
pop
cmp
aas
add
xor
loop
mov
gs
and
pop
shrb
sub
sub
ret
dec
frstor
inc
icebp
fs
mov
pusha
inc
ja
scas
call
mov
sarb
and
cwtl
into
dec
ds
sub
scas
out
out
fdivl
inc
push
leave
aas
adc
xchg
or
enter
sub
sbb
test
push
dec
jge
insl
rorl
repnz
sub
mov
lahf
adc
mov
lret
ret
lods
addr16
lods
add
xor
xchg
dec
insb
and
push
sub
sub
adc
jns
or
inc
mov
ja
ret
pop
jle
xor
push
fbld
subb
vminsd
sub
sbb
xor
scas
jbe
fdiv
int
lcall
repz
setle
ljmp
mov
ss
rorl
mov
outsb
test
and
sub
rcll
xor
repz
jge
cmp
xchg
fmull
sbb
sbb
mov
sub
rolb
jl
dec
dec
add
cmp
imul
scas
ud1
jmp
pop
outsl
outsb
ds
mov
cmp
adc
xor
cmpsl
dec
jmp
rcrb
rcll
jnp
sbb
clc
xchg
sub
mov
mov
sub
add
pop
hlt
sub
sub
add
idivb
or
push
nop
out
sub
push
mov
and
pop
push
xor
push
add
int
xor
sub
mov
test
fstps
es
daa
jmp
add
sub
adc
stc
and
jg
or
insl
sub
sbb
xor
sub
popa
adc
xor
sub
add
je
fpatan
cmp
pop
inc
sbb
mov
aam
fldt
inc
mov
lods
sub
scas
or
mov
repz
push
push
sub
or
inc
adc
lret
fidivrl
fstps
jne
fldt
movsb
je
aaa
lret
notb
jno
ljmp
push
ret
or
xor
lea
ja
ficoms
mov
mov
sub
notl
roll
sbb
pop
inc
das
dec
stc
sub
imul
loop
inc
inc
in
add
mov
vpavgb
mov
add
sub
aaa
test
and
sub
mov
pop
xor
adc
lods
cs
leave
outsl
and
out
mull
mov
push
push
jb
sub
adc
xor
and
das
lds
or
ds
jno
aam
cmpsl
in
push
dec
push
sub
jmp
pusha
movsl
sub
and
outsb
adc
nop
lds
sub
ret
mov
stos
push
inc
test
push
loopne
mov
sub
push
or
in
stos
mov
sub
pop
xchg
sub
xchg
jmp
insb
sub
lods
push
clc
dec
and
fdivrl
sub
sbb
dec
repz
cmp
xlat
pop
mull
dec
sub
aad
fcomi
pop
sub
add
daa
imulb
fcom
sub
call
sub
push
xor
sub
mov
mov
xchg
iret
sub
xor
jbe
cmp
cmp
push
imul
lea
push
sbb
xchg
xor
mov
xor
je
repnz
sub
push
aas
dec
ljmp
xor
gs
mov
and
push
cmpsl
rolb
xorl
or
jo
icebp
out
mov
lcall
xor
mov
out
ret
mov
or
arpl
lahf
push
int
lods
test
pop
int
fnstsw
sub
jno
push
insb
and
loopne
cld
push
jne
xchg
insl
out
aad
inc
and
ds
outsl
xor
mov
stos
ss
out
mov
gs
lret
repnz
xor
int
mov
notb
sub
or
and
sub
sbb
popl
cltd
call
mov
stos
mov
sub
fucomip
ficoml
test
sub
adc
lods
rcr
dec
iret
jg
dec
cmpsb
pop
sbbl
or
and
sub
repz
pushf
sub
daa
das
and
pop
test
pop
ss
push
rcrl
sub
bound
adc
sbb
and
pushl
sub
out
pop
adc
and
sti
pop
push
test
in
mov
repnz
fisubrl
std
mov
or
sub
out
push
mov
mov
scas
cmp
test
gs
and
into
scas
inc
adc
cld
sbb
sub
arpl
inc
xlat
sub
and
subb
adc
pop
mov
mov
sub
sub
add
mov
mov
mov
add
cmp
and
in
jle
pop
push
xchg
sti
sub
mov
jmp
cld
xchg
and
into
mov
cmpsb
sbb
or
pop
daa
repnz
nop
adc
sub
pop
inc
adc
mov
cs
dec
xchg
das
sub
adc
insb
rorb
push
in
sbb
dec
cmc
insl
mov
adc
lahf
out
push
sbb
dec
or
loop
sub
outsb
gs
scas
arpl
sbb
jmp
je
jae
adc
sub
les
sbb
pushf
subl
mov
mov
movsb
push
jb
test
and
fs
ret
je
cli
out
cli
push
adc
int3
hlt
imull
in
inc
add
mov
xor
inc
sub
inc
xchg
mov
iret
jno
shrl
sub
imul
pop
dec
add
sub
mov
mov
jle
mov
mov
add
sahf
sub
out
dec
push
outsb
sub
add
cmp
pop
sbb
xchg
movsl
cmp
add
sub
mov
ret
inc
in
adc
mov
pop
inc
loope
int
popf
mov
aam
insl
inc
daa
sub
popa
or
xlat
in
adc
sub
xor
sub
xchg
fwait
inc
nop
sub
push
jo
ret
aad
lcall
and
sti
lods
jae
loopne
xor
jecxz
lds
shlb
mov
pop
cli
sub
or
scas
sub
xor
clc
aam
jmp
mov
cmp
inc
pop
stos
das
sbb
mov
jl
adc
outsb
sub
mov
in
sbb
sub
shlb
add
xor
mov
mov
dec
es
mov
cmp
lret
sub
sti
pop
jne
ficoms
push
cmc
mov
sahf
sub
loope
stos
cmp
push
adc
loopne
sub
lahf
sub
add
jo
push
test
and
cli
out
std
pop
leave
or
mov
js
push
scas
sub
loopne
xor
fistl
xor
sub
jge
rcr
in
push
push
adc
sub
cmpsl
fisttpll
ds
adc
dec
popf
sub
bound
ja
adc
movsb
mov
fsubrs
inc
shl
sub
cwtl
cmp
mov
sub
out
and
pusha
aad
push
testl
add
scas
dec
mov
push
fisubrl
ret
dec
mov
sbb
insl
sub
inc
repnz
fldt
pop
repnz
mov
scas
push
loopne
ret
mov
and
cs
xor
mov
outsl
adc
sub
dec
lock
fldt
js
mov
push
cmp
jecxz
or
mov
dec
xor
loope
add
mov
xor
shlb
shrb
pop
xchg
mov
sub
int
adc
mov
decb
xchg
mov
mov
pop
in
mov
clc
sub
add
sbb
shll
sub
cmp
pop
nop
scas
inc
test
sub
adc
jge
mov
movsl
sub
test
add
out
sub
mov
cmp
sbb
fldt
ret
pop
sub
push
scas
ret
test
xchg
mov
sbb
out
or
cmpsb
xor
call
sahf
je
mov
es
and
sub
mov
pusha
push
xchg
inc
mov
cwtl
sub
pop
sub
scas
sub
push
mov
js
and
aam
sahf
and
mov
out
dec
test
mov
xchg
xor
or
sub
in
test
cmp
push
daa
push
popf
jno
pop
adc
mov
pop
scas
inc
aaa
je
lods
ffreep
in
dec
sub
adc
mov
call
lret
inc
sbb
sub
sbb
popa
sub
scas
lret
push
pop
inc
cmpsb
sub
iret
out
add
and
sub
rorl
ret
jno
lock
xchg
jae
dec
mov
test
les
sub
clc
mov
sti
sub
mov
das
cmp
shl
lods
sub
arpl
pushf
xchg
jne
or
add
imul
frstor
scas
daa
lahf
in
inc
hlt
cmpsb
xor
ret
xor
sub
dec
aaa
mov
iret
js
mov
sub
adc
fisubrl
inc
loope
dec
sub
outsb
mov
jl
mov
mov
mov
sub
dec
subb
cld
sub
incl
fnstenv
iret
fwait
inc
shl
aaa
jnp
jne
dec
pop
dec
and
dec
pop
push
pop
bound
xchg
movsl
sub
sbbl
or
out
push
mov
sub
pop
jne
mov
mov
mov
jle
cmp
ljmp
imul
pop
jge
sub
and
sbb
sub
jl
out
xchg
sub
int3
stos
or
outsb
mov
loopne
xchg
push
cmp
gs
js
and
pop
pop
sti
orl
sub
fisubs
mov
adc
sub
iret
inc
jg
sub
scas
sub
xor
sbb
pop
mov
std
aaa
loop
mov
sub
popa
push
xchg
fdivr
sarl
xchg
sub
inc
es
or
xor
ljmp
xor
divb
adc
cmc
sub
cmp
push
pop
pop
jns
fsts
sub
cmp
out
push
jo
mov
and
inc
std
and
sub
push
aas
clc
mov
xchg
sbb
xor
sub
adc
pop
dec
sub
mov
rol
inc
imul
mov
dec
jae
lds
repnz
loopne
sub
cmp
jb
sub
ds
mov
icebp
mov
addr16
or
or
out
sub
push
push
sub
and
lds
push
pushf
fdivr
jno
push
sub
popa
mov
sub
gs
jle
sub
push
mov
sbb
sbb
xor
fbld
mov
inc
lahf
bound
push
dec
das
lret
sbb
aam
sub
jl
sub
or
or
sub
add
add
pop
jo
in
push
call
sarb
rcrl
mov
std
cmp
or
lret
xchg
mov
test
lods
xchg
xchg
cli
pop
stc
ss
shrl
icebp
ljmp
repz
push
and
sub
pushf
mov
mov
int3
push
ss
fisubrs
adc
lcall
cmp
sbb
scas
sub
sub
adc
dec
inc
icebp
dec
xor
jge
add
xchg
negb
xor
in
addr16
and
sahf
add
or
in
pop
dec
cmp
cwtl
sub
mov
sbb
pop
dec
sub
or
gs
lea
sub
xor
cld
test
pusha
je
arpl
mov
sub
or
sub
sub
lods
dec
pop
pusha
sub
or
cmp
xchg
es
subl
fmull
mov
dec
sub
in
jbe
sub
out
jl
out
xor
fs
push
pop
sub
loop
adc
nop
js
cmp
xchg
scas
test
stos
jnp
je
mov
lcall
stc
clc
cltd
cmp
insb
adcb
scas
inc
xor
mov
mov
inc
sbb
mov
fiaddl
sub
fwait
push
jg
int3
loop
sub
jns
dec
fstpl
mov
inc
aad
xchg
jecxz
loop
les
adc
sub
cmp
add
push
sub
repnz
push
or
adcb
push
push
jbe
sub
int3
sub
test
lcall
imul
push
aas
push
push
ret
sub
xor
fldenv
ss
mov
sub
pop
xor
sub
lret
xor
cmp
sahf
sub
sub
mov
loop
pop
lds
sub
ja
add
xchg
or
sub
ret
inc
mov
test
mov
inc
iret
adc
leave
sub
push
adc
adc
shrb
mov
movsb
inc
adc
inc
ret
xor
or
iret
pop
jecxz
push
sub
aam
sbb
daa
jle
cli
call
adc
clc
sub
pop
and
xchg
cs
imull
mov
outsb
lds
xchg
xchg
mov
scas
data16
or
adc
loopne
pop
cmpl
push
pop
mov
jae
andb
lods
pop
and
sub
lret
jp
mov
mov
sub
faddl
cli
sub
mov
stc
dec
fldl
test
or
aad
call
pop
addb
jmp
jg
adc
stc
es
sub
lea
mov
add
int3
cmp
movsb
mov
jb
or
sahf
loop
mov
bound
sub
out
loop
sub
or
xchg
jno
fwait
xchg
pop
sub
mov
inc
adc
mov
inc
aas
and
sub
rcl
jae
mov
mov
sub
sbb
hlt
rol
pop
push
sub
in
push
fldl
add
sub
ja
jne
sub
out
orb
bound
cwtl
imul
cmp
sub
ds
jl
sub
test
inc
mov
jne
in
stos
jno
fwait
sub
mov
mov
ret
insl
pop
mov
inc
cltd
adc
pop
sub
adc
bound
movsb
mov
lret
out
cs
repz
add
dec
scas
cli
sub
and
or
js
sub
mov
call
rcrl
popf
in
or
loop
mov
fcmovnu
sub
call
cld
mov
sub
pop
ret
sub
int
fdivrl
fucomp
xchg
repz
sub
outsb
mov
icebp
or
hlt
ss
dec
mov
test
mov
rorb
scas
lods
and
rep
mov
mov
pop
sar
sbb
and
sub
cld
shrb
popf
mov
xor
dec
scas
stos
fsubr
or
push
jmp
call
sub
adc
mov
cld
xchg
into
aam
cmp
mov
ret
push
aad
das
inc
cli
xor
pop
arpl
ss
fldl
enter
lea
sub
sub
add
cli
gs
hlt
iret
mov
lcall
jle
jae
xchg
stc
mov
out
ds
shl
xchg
gs
ss
mov
pop
sub
sub
mov
test
out
or
and
jg
dec
mov
shlb
lods
sub
repnz
xchg
sbb
stos
xor
dec
and
in
sub
pop
int3
pop
mov
sub
push
cmpsb
add
sub
xchg
mov
out
dec
es
shrl
gs
adc
dec
pushf
jl
mov
scas
push
hlt
xchg
add
loop
enter
pop
push
sub
lods
jle
push
lds
sub
xlat
dec
mov
shll
push
out
adc
push
aad
mov
inc
adc
cmp
ds
mulw
ja
mov
push
jae
sub
cld
push
test
lcall
dec
pop
movsb
int
cltd
stos
mov
mov
and
addr16
mov
xlat
and
mov
xchg
aaa
pop
fiadds
dec
cs
ss
mov
push
addb
adc
or
xchg
test
sub
idiv
mov
js
push
sbbb
push
xor
ja
xor
adc
sub
mov
aam
ja
daa
add
stc
cmp
jmp
cmp
inc
sbb
and
sub
nop
in
cmp
cs
fcompl
stos
cmp
or
lahf
fists
jns
ret
roll
sub
lret
sub
subb
pop
xor
imul
lret
mov
mov
jecxz
fbld
sbb
inc
xor
jg
sbb
xlat
fldt
fs
subl
hlt
sub
push
add
and
inc
push
sub
test
fdivs
mov
mov
sub
mov
inc
sub
shrb
mov
xchg
jbe
push
xchg
aam
repnz
loope
mov
push
mov
or
cmp
jmp
scas
int3
jo
sub
lods
pop
shrb
sbb
adc
pop
mov
inc
imul
sbb
pusha
xor
addr16
mov
shrl
not
testb
cld
add
in
sub
aad
dec
mov
mov
notb
out
inc
icebp
mov
cwtl
imul
mov
int
cmp
mov
xor
int
xchg
jae
test
push
cltd
xchg
hlt
addr16
pusha
adc
sub
mov
incb
sub
push
adc
cmp
mov
sbb
inc
push
xor
jle
sub
mov
sub
fisubrs
fnstsw
adc
pop
imul
and
pop
sub
mov
popf
lret
sti
mov
pop
sub
clc
or
sub
xor
mov
arpl
je
sahf
sub
pop
cs
adc
int
out
mov
repz
cmovnp
test
cmp
dec
xchg
fdivrl
out
mov
mov
and
shlb
push
mov
outsb
cmp
adc
and
out
sub
and
jge
je
cmp
out
pop
in
fcomps
xlat
stc
sub
lret
sub
or
add
in
add
push
push
sub
jge
test
jae
xor
sub
mull
cld
mov
jae
arpl
in
sbb
popf
in
or
jl
jecxz
mov
adc
xchg
pusha
mov
sbb
jg
sub
add
lcall
fadd
jecxz
hlt
lods
pop
decl
and
dec
mov
push
pop
inc
xchg
fldcw
je
xchg
sub
das
sub
in
scas
jno
cmp
fisubl
and
loope
mov
dec
sbb
lahf
or
test
adc
jb
push
jnp
push
dec
sbb
xor
lods
lret
pop
jo
popa
cld
jno
mov
imul
sub
add
fldcw
and
scas
pand
mov
xchg
add
inc
sub
pop
gs
inc
pop
notl
push
stos
push
loop
sub
out
dec
push
push
dec
xor
adc
xchg
ret
inc
pushf
sub
int3
subl
sub
inc
lock
stos
cltd
mov
jbe
sbb
in
sbb
mov
iret
and
popa
loopne
scas
cmpsl
or
repnz
aam
dec
mov
or
sub
outsb
in
inc
and
sti
rcrb
mov
cwtl
daa
add
push
fwait
mov
orl
jo
mov
enter
cltd
ficomps
repz
sub
pop
movsl
and
adc
inc
sub
jecxz
push
sub
push
mov
sub
out
js
loope
lods
sub
mov
aam
mov
daa
sub
adc
xlat
mov
jnp
jmp
pop
hlt
xor
call
sub
icebp
jmp
ret
aas
lcall
add
or
pop
loopne
pop
jl
cmp
dec
xor
lock
subb
movsl
push
imul
push
and
mov
sub
dec
adc
mov
sbb
sub
dec
sub
or
es
movsb
cmp
das
aad
push
test
sub
fsubrs
add
sub
mov
fcoml
cld
je
sti
sub
pop
sbb
sub
cmp
loope
and
cmp
sub
push
or
subl
sub
inc
sahf
and
xchg
shrl
cli
push
fistl
push
mov
mov
aas
push
fildll
sub
mov
inc
xor
inc
mov
int
fldenv
add
fucomp
add
icebp
das
inc
sub
sbb
ficoms
shll
insb
in
sub
sub
xchg
push
addr16
sub
add
jae
dec
jne
ds
xchg
enter
mov
rcr
push
sub
in
out
inc
enter
push
mov
sub
sbb
and
pop
sbb
into
pushf
xor
fdivl
sub
lret
cltd
mov
xor
popa
fimuls
sub
push
in
or
add
jg
sub
mov
in
leave
mov
lock
pop
test
sub
and
push
sub
xchg
lods
sbb
cmp
cli
jbe
ficomps
ljmp
cmp
pop
mov
cvtps2pi
adc
adc
add
aad
dec
sub
fistps
sub
iret
cltd
sbb
jns
jne
loope
and
mov
sbb
out
cs
iret
and
jge
enter
call
dec
jle
jns
xor
scas
loope
lds
push
sub
and
sub
gs
add
test
call
outsl
lock
into
sbb
xchg
movsl
mov
arpl
fwait
jo
inc
ret
cs
jbe
das
sub
lods
xchg
push
dec
sub
rcr
dec
pop
cmpsl
sub
test
add
fsubl
stc
shrb
dec
cmp
and
jle
add
xchg
in
sub
sbb
imul
mov
xor
pop
in
cmpsb
cwtl
idivb
sub
and
int
mov
bound
jnp
sub
ret
cmp
sahf
mov
stos
ja
adc
insb
push
pop
stos
jnp
rol
sbb
std
xchg
lods
sub
popa
mov
sarl
lahf
sub
add
loopne
xor
sub
fistpl
add
jae
mov
adc
pop
jno
les
add
es
mov
enter
dec
sub
fadd
popa
sub
lods
sub
lret
in
or
inc
push
cmpsl
fstl
mov
and
movsb
test
pop
aas
cli
add
imul
mov
jno
pop
sub
add
out
addr16
insb
mov
sbb
stos
sub
das
xor
adc
dec
xchg
int
pop
and
lret
shrl
out
sahf
in
sub
insl
xlat
arpl
mov
lahf
xchg
add
sub
dec
aaa
in
sub
call
insl
mov
xchg
jb
add
leave
aas
dec
test
lods
imull
jnp
or
sub
roll
dec
in
pop
adc
add
xor
scas
mov
xchg
pop
push
dec
out
mov
aam
lret
inc
daa
xor
dec
and
popf
pop
jmp
sub
and
subl
out
xchg
mov
ret
mov
xchg
stos
sub
mov
loopne
ljmp
push
sub
popf
bound
cltd
jp
sahf
repz
lret
sub
jne
fmull
sub
nop
addr16
mov
cwtl
js
push
lret
syscall
cmp
cli
xchg
sub
xchg
aad
stos
sub
xchg
add
dec
sub
test
mov
ss
es
test
icebp
enter
dec
mov
sub
mov
mov
stos
add
inc
push
sub
daa
cmp
push
xor
cmpsl
jge
sub
push
pop
inc
pop
sub
test
pop
inc
insl
push
std
sub
ficoms
and
xor
ret
xchg
in
cwtl
sbb
pop
fldt
fsubrp
sub
lods
mov
shl
jo
sub
sub
div
sub
inc
je
pop
push
test
cmpsl
ja
xchg
imul
out
push
add
shrb
cwtl
lahf
cmp
pop
or
sbb
xor
imul
mov
adc
ljmp
inc
sub
push
mov
jb
aas
push
add
lock
mov
xchg
sbb
xor
sub
pop
in
in
bound
dec
imul
cs
sbb
pop
dec
sub
push
cli
icebp
ret
imulb
inc
imul
cmpsl
sahf
dec
js
mov
add
call
shl
sbbl
pop
mov
add
xor
ds
dec
xchg
loopne
adc
fs
sbb
inc
jbe
imul
xor
ljmp
jnp
cmp
cmp
mov
mov
addr16
xor
add
js
clc
sbb
dec
push
add
arpl
push
cmp
in
out
xlat
jecxz
inc
sub
cmc
mov
xchg
push
xchg
and
in
sub
push
xor
pop
scas
and
lods
or
xchg
scas
inc
sub
mov
scas
add
sub
pushf
outsl
xor
xor
push
cmpsb
pop
push
movsb
jecxz
fs
adc
sub
inc
sub
lods
stos
ljmp
sub
cli
and
and
rcll
adcl
insb
cmp
fdivl
cmpsl
fidivrs
sub
inc
aam
and
mov
push
sub
mov
xchg
mov
repz
xor
or
adc
xcrypt-cfb
cmpsl
mov
int
xchg
incl
or
iret
jne
je
sbb
sbb
test
fcoml
insb
and
xchg
sbb
xchg
cmp
aad
and
insb
sub
mov
xchg
push
jns
add
dec
jecxz
cmc
lcall
mov
cmp
in
xchg
sub
jecxz
or
mov
jge
push
loop
daa
pusha
cmp
int
push
add
push
lods
imulb
adc
push
mov
jecxz
shlb
cld
inc
movsb
dec
neg
add
or
xchg
addb
fisubs
push
imul
sub
push
pop
and
aam
sub
iret
ljmp
sub
pop
cmc
push
ja
sub
loopne
nop
jb
dec
dec
adc
cld
and
in
sub
mov
adc
push
cmpsl
movsl
cltd
ss
movsb
jns
mov
and
sub
or
lods
mov
jecxz
adc
adc
nop
fbld
imull
dec
fisttpl
inc
push
xor
iret
xor
sub
fs
sbb
sbb
aam
test
out
daa
xchg
sub
xlat
sub
cmpb
and
in
cmp
imul
xchg
rol
sub
out
sub
aad
outsb
loopne
push
mov
pop
push
rolb
stos
sub
push
das
pop
sub
cld
fisubl
and
sub
or
mov
sub
jecxz
aas
sbb
mov
sbb
sbbl
pop
and
sub
jmp
and
enter
ja
popf
mov
leave
adc
aaa
push
int
int
cmpl
sahf
xor
and
jecxz
sub
inc
mov
add
jns
pop
fisubrs
lea
push
cmp
mov
pop
out
sub
inc
xor
or
andl
inc
idivb
aas
push
adc
jp
divl
lods
sub
ja
or
call
shlb
cltd
add
cmp
sbb
xor
jmp
sbb
sub
das
out
arpl
aaa
cwtl
mov
test
lret
push
or
lea
jb
cmc
mov
sub
addb
add
mov
sti
enter
mov
sub
or
cwtl
or
inc
mov
mov
lds
jno
cld
add
mov
lret
andl
xor
lds
notb
and
sahf
and
sbb
jno
rorl
lret
clc
sub
gs
cld
sub
xor
jmp
sub
sbb
and
out
dec
in
dec
inc
lods
enter
jg
adc
popa
and
cmp
push
rcrl
repz
jge
andnps
push
inc
xchg
and
sub
lea
mov
and
cmpsb
mov
shrb
cld
mov
xor
and
bound
push
out
inc
fsubrs
mov
mov
cli
sub
cmp
push
adc
test
sahf
out
pop
ds
xchg
cmpsl
sub
push
call
adc
sub
ja
sub
aad
pop
test
or
in
mov
jb
cld
cmpsb
inc
or
adc
scas
sub
mov
imul
dec
das
flds
sub
mov
jmp
xor
out
ror
push
jne
sub
aas
sub
jecxz
fsubrl
cmc
test
sub
dec
add
mov
mov
sub
xchg
test
mov
or
in
add
notl
mov
mov
cmp
int3
jp
insl
adc
xor
lahf
lods
inc
scas
int
in
sub
insb
sub
xor
inc
shlb
lahf
or
sub
mov
sub
outsb
cmp
ljmp
push
loopne
subl
pop
jae
dec
out
add
popf
mov
sbb
mov
sub
movsb
add
in
xchg
push
cltd
cmp
mov
lods
xchg
sub
andb
jae
add
int3
scas
and
pop
cli
xchg
ret
cmp
mov
sub
and
xor
xor
sub
into
mov
int3
iret
push
sub
xlat
push
lahf
shlb
repnz
div
adc
and
jmp
out
mov
imul
sub
add
jge
sub
mov
jg
sub
fwait
xchg
pop
mov
sub
test
mov
hlt
nop
mov
ss
leave
xor
aaa
negl
jne
clc
push
shr
sub
adc
ja
xor
push
mov
dec
sbbb
rol
mov
lods
cmp
decb
sub
jmp
negb
inc
insb
pop
pop
and
roll
sub
cmpsl
loope
jmp
mov
sub
or
aam
sub
cmp
ret
leave
clc
imul
pop
daa
int
imul
sub
mov
clc
or
loopne
xor
sub
inc
shrb
mov
push
and
orl
mov
dec
int3
subb
adc
aad
cli
push
sub
cmp
add
sub
jbe
lock
inc
pop
shlb
jmp
and
movsl
xchg
sbb
and
sti
ror
ljmp
lods
loop
or
sub
fidivrl
push
int
sub
cmp
cmpsl
and
in
pop
mov
loop
jo
mov
pop
in
jl
pop
out
outsl
adc
mov
push
xchg
adc
sbb
aas
or
pop
les
inc
into
adc
aam
mov
gs
sbb
rclb
sub
sub
cmpsb
fldl
sub
jbe
dec
xor
mov
ja
jp
pop
xchg
push
push
jbe
jmp
mov
dec
sub
push
dec
mov
aad
cld
or
loope
ds
xchg
push
mov
push
sub
xchg
imul
enter
ja
daa
test
lahf
andl
insl
stos
lret
inc
imul
test
pop
mov
int3
es
sub
adc
or
fidivs
mov
fadds
fisttps
push
ss
pushf
cmpl
add
gs
shll
popf
insl
loop
and
sbb
out
xor
sub
jg
xchg
cmc
xchg
nop
lcall
sub
loop
loope
sub
iret
lea
outsb
in
push
testb
and
pop
push
adc
sub
daa
jnp
sbb
insb
and
sub
js
shrb
mov
cmp
adc
push
out
enter
inc
lds
and
sub
sbbb
push
pushf
push
sub
sub
push
cmc
inc
in
xor
push
cmp
aas
sti
push
sub
jbe
test
and
sbb
es
xchg
into
popf
push
jmp
xchg
or
sub
xor
sub
mov
scas
pop
sbb
inc
lods
movl
mov
sahf
add
and
ret
repz
mov
mov
jae
sub
les
jle
scas
sub
mov
adc
mov
xchg
mov
inc
or
xor
repnz
aas
adcb
mov
sbb
pop
add
sub
xchg
push
jl
sub
adc
xchg
adc
sub
pop
push
sbb
xor
pop
or
popf
add
insl
aad
ldmxcsr
sub
not
cmp
xor
shrl
movsb
sub
enter
adc
xor
call
sub
pop
mov
clc
add
loop
dec
test
daa
xchg
in
push
xor
shrl
xor
xchg
dec
sub
movsb
clc
popa
in
cli
jle
add
cmp
gs
inc
dec
xlat
sub
xor
pop
sub
push
scas
mov
iret
xor
ficomps
sub
lahf
cwtl
popf
repnz
dec
rorl
and
and
jl
call
pop
insl
in
popa
test
cli
daa
and
cltd
jmp
jbe
xchg
jb
xor
pop
aaa
test
mov
mov
mov
pop
fstps
cmpsb
leave
push
jno
movsl
sub
loopne
loope
adc
mov
mov
aas
sub
sbb
dec
pop
sub
mov
sub
dec
mov
stos
or
sar
and
sub
mov
mov
xor
pop
es
shr
pusha
mov
and
lcall
dec
jne
pop
test
movsl
mov
into
out
test
stos
adc
sub
cli
pop
mov
in
jmp
lret
sub
outsb
clc
mov
sub
fsubl
js
pushf
inc
sbb
sub
add
mov
out
jne
fnstenv
je
mov
sub
incb
sub
lock
lods
es
jne
adc
xchg
daa
les
xchg
pop
sti
mov
cld
xchg
mov
cmpsb
cmpsl
sub
loope
cmp
sub
push
lret
xor
sub
addl
lods
dec
jo
int3
in
fildll
cmp
std
adc
pushf
push
aas
jno
pop
sbb
push
nop
mov
gs
cwtl
mov
rcrb
mov
enter
sbb
shrb
dec
pop
out
pop
repz
ja
xchg
push
xchg
or
and
shrb
scas
call
or
cltd
xlat
ds
dec
xor
fisubrs
pop
lds
inc
push
sti
and
enter
sbb
or
icebp
push
sub
dec
jno
inc
sub
inc
mov
sub
jo
bound
mov
add
inc
mov
add
test
sub
inc
cmp
cs
and
inc
jb
sub
push
cld
ljmp
lods
cmp
popf
sub
stos
ja
pop
pop
mov
add
xor
sub
dec
xchg
inc
and
sub
dec
sbb
jbe
jae
pop
int
pop
xchg
mov
sub
ja
popf
outsb
sub
add
lahf
bound
ss
adc
dec
mov
sub
in
dec
cmp
push
xor
ficoml
pop
push
and
jge
daa
rcll
push
mov
icebp
sahf
outsl
lcall
or
stos
fsub
mov
sub
enter
cmp
fiaddl
or
dec
push
into
pop
push
xor
and
adc
cmp
arpl
cwtl
inc
sub
loopne
hlt
das
add
shlb
pusha
sbb
sub
cld
and
daa
mov
and
jl
hlt
fsub
dec
push
repnz
clc
shrl
sub
rol
movsb
out
add
sub
icebp
jae
cmpsb
mov
adc
or
sub
sub
out
push
sub
imul
test
sbb
sub
lds
stc
rol
mov
in
insb
mov
cmpsb
jnp
repz
dec
xor
imulb
popa
inc
shrb
sbb
in
cmp
fsubrs
sub
sbb
pop
sub
in
xor
shrb
leave
stc
or
xchg
test
sub
scas
pushf
enter
mov
sub
loop
sbb
lret
jno
push
sub
dec
jb
subb
sub
push
jne
test
ss
dec
and
movsb
mov
shll
adc
cmp
fs
inc
mov
mov
pop
cli
adc
sub
mov
push
data16
outsb
mov
sub
jo
sahf
push
mov
mov
shl
sbb
call
sarb
pop
mov
xchg
inc
xor
dec
stos
call
imul
mov
fwait
push
sbb
push
dec
sbb
mov
xor
and
pop
add
loop
pop
movsl
sub
dec
mov
test
inc
sub
mov
xchg
xor
movsb
pop
pop
mov
sub
mov
pop
cld
sub
repz
adc
pop
mov
fstp
pop
pop
and
idivl
leave
jp
sub
xor
sub
sub
dec
mov
cmpsb
or
and
loopne
or
adc
mull
sub
add
mov
sub
mov
clc
jge
mov
and
pop
sbb
sub
stc
sbb
movsb
sub
sub
fs
sub
push
sub
fisttpl
jle
pop
cmpsl
cmc
sub
es
sub
xor
ljmp
out
sub
push
pop
pop
or
stos
jp
cmp
push
fcompl
mov
fcmovnb
mov
bnd
das
sub
and
frstor
adc
push
inc
int
adc
mov
icebp
xor
xchg
out
or
test
sbb
push
jae
xchg
mov
sub
sbb
cmpsb
imulb
push
xchg
xor
insb
sbb
xor
cld
mov
xor
enter
scas
mov
sub
movsb
mov
clc
stos
xchg
dec
rclb
lds
or
and
mov
nop
mov
sub
imul
sub
setp
and
aad
pop
repnz
and
cs
cltd
add
sub
add
int
int3
push
dec
adc
shlb
aaa
js
mov
out
call
xchg
or
popf
sub
cmp
lea
xchg
lret
fbld
cltd
shlb
pop
mov
sub
mov
cmpsl
pop
mov
jo
test
dec
xchg
jl
ds
and
sbb
outsb
pop
ljmp
pop
xchg
sub
pop
xchg
sbbl
mov
adc
mov
xchg
cmp
pop
add
push
sub
fwait
inc
and
xchg
xchg
int3
and
lds
mov
ret
in
sub
hlt
xor
sahf
pop
ljmp
or
sub
jae
push
pop
aad
cli
scas
sub
push
stos
pop
pop
adc
outsl
sub
xor
into
dec
sub
in
cld
or
and
arpl
ja
inc
sub
jns
das
outsl
movsb
add
pusha
push
jno
int
pop
and
sub
out
add
sub
test
hlt
insb
sub
dec
sub
pop
sub
sahf
add
out
rolb
mov
xchg
xlat
pop
xorb
sub
push
dec
ret
mov
add
mov
pop
xchg
test
adc
popa
and
fwait
repnz
xor
stc
mov
cmp
pop
insb
jnp
push
ds
xchg
add
jbe
xor
lcall
or
fsubl
add
clc
icebp
sub
ss
inc
bound
sub
sub
xlat
fcmovne
xor
sbb
lahf
xchg
aaa
sub
push
aad
push
sub
mov
push
std
push
insl
mov
loop
push
jg
cmp
movsb
arpl
or
lods
adc
sub
push
shlb
xchg
jnp
xchg
movq
cli
mov
sub
sub
push
fwait
mov
fisttpl
data16
xor
mov
ljmp
dec
push
push
aaa
arpl
xchg
adc
xor
and
jl
cmpl
in
pop
mov
adc
cltd
push
pop
stc
mov
fisttps
and
dec
xor
out
jmp
test
outsb
mov
cli
jmp
leave
or
mov
and
push
jmp
outsb
aam
mov
pop
adc
mov
sbb
pop
push
sub
mov
mov
decl
xlat
sub
mov
bound
aaa
xor
jns
xchg
nop
mov
enter
test
ret
sub
stos
imul
or
push
inc
adc
ret
enter
cltd
push
in
sub
and
cld
jecxz
sub
or
sbb
sub
jns
adc
sub
and
test
or
fs
aad
add
addb
inc
and
mov
mov
rclb
dec
pop
or
mov
repz
and
xchg
ljmp
cmpsb
xchg
add
rcr
lds
ljmp
cmp
daa
mov
in
inc
and
outsl
dec
jo
mov
sub
pop
les
adc
scas
push
aas
fistpll
adc
mov
sub
mov
je
sub
lahf
jmp
stos
loop
mov
pop
pop
or
sub
xchg
cmp
jne
dec
cmc
dec
sub
sub
xor
cs
jnp
jl
out
mov
push
xchg
in
sub
test
push
sub
push
movsb
sub
hlt
enter
sub
jp
nop
scas
push
int
scas
insl
and
inc
inc
push
mov
push
xor
daa
smsw
fildll
xor
roll
cmpsl
cmp
add
jmp
fisubs
test
imul
in
bound
jge
in
xchg
cmp
bnd
rcl
mov
aad
and
adc
call
sub
lds
lods
insb
dec
js
jg
int3
push
pop
test
xchg
xor
int
and
mov
repz
data16
packuswb
fldcw
xor
cmpsl
jecxz
mov
cmp
hlt
nop
rol
dec
pop
and
mov
cmp
xchg
sbb
inc
test
and
sbb
es
in
jmp
scas
sub
sahf
pop
mov
mov
or
sub
mov
insb
sub
adc
xchg
sub
outsl
pop
sarl
cmpsb
data16
adc
enter
and
filds
aaa
ret
shlb
int3
sub
pusha
mov
icebp
lret
daa
sbb
out
das
aas
sub
sub
jmp
je
hlt
mov
sub
jle
popf
int3
sub
out
cld
jmp
adc
adc
or
jle
push
adc
cmp
jp
push
inc
push
imul
test
jl
pop
push
sub
leave
dec
ret
or
xchg
notl
adc
insb
addr16
clc
sbb
xor
xor
subl
in
mov
or
add
cwtl
sub
pop
lahf
and
jmp
dec
lods
sti
stos
and
jae
inc
jecxz
and
bound
les
aaa
loope
mov
sub
jne
loop
sub
jge
push
sub
pop
sbbb
cmpsl
push
cmp
push
sub
movsb
aam
push
cmp
adc
and
imul
pop
scas
mov
xor
lea
cmp
mov
adc
adc
pop
iret
sub
mov
inc
jp
sub
repnz
lds
orl
push
and
mov
ret
cmp
lds
mov
dec
jno
add
fistpl
push
adc
test
mov
or
sahf
xchg
jb
insl
outsl
leave
dec
ficompl
push
sub
pop
gs
inc
sbb
mov
sub
pop
in
cmpsl
mov
aam
shlb
sub
xlat
or
outsl
sub
inc
orl
and
pop
push
sub
jmp
ret
icebp
lcall
sub
dec
loopne
sub
pop
outsb
push
in
cli
test
stos
in
adc
subb
jne
pop
lock
imul
imull
mov
clc
scas
sub
adc
mov
fcoms
out
int3
jg
sbb
xor
sub
fs
pop
inc
sub
aad
sahf
cmp
add
sub
sub
lock
ljmp
mov
sub
xchg
mov
mov
cmp
xor
and
lods
or
mov
adc
lret
cmpsl
sub
and
and
cld
pop
out
sub
mov
pop
xor
jecxz
lret
jmp
sbb
xor
or
pop
cli
sbb
insl
mov
sahf
mov
insb
sub
out
sub
in
mov
scas
test
jecxz
lock
dec
ljmp
pop
shll
daa
or
sbb
out
and
shlb
cwtl
sub
push
loope
or
mov
cli
jp
push
sub
dec
test
fs
pop
push
lea
xor
enter
mov
js
pop
inc
jp
and
rol
or
inc
sub
pop
sti
out
xor
jne
lret
bound
inc
into
and
sub
scas
pushf
stos
fisubrs
lock
dec
sub
repz
mov
jae
push
sub
push
call
roll
mov
inc
mov
sub
sbb
push
mov
dec
adc
xor
cmc
fnstsw
jbe
mov
int
add
add
adc
or
sub
jne
testl
pop
xor
xchg
sub
jae
loope
sub
pop
out
out
loopne
mov
sbb
and
jge
ss
xchg
mov
cld
shrb
lahf
js
sahf
lea
xchg
or
sub
jne
adc
sbb
test
stc
sub
les
int
mov
xor
sub
iret
adc
loope
imul
push
sub
fldt
ds
sub
rcll
sahf
sub
add
loope
hlt
sbb
jle
dec
push
je
and
mov
sub
cld
xor
xchg
jp
xchg
or
and
mov
sti
dec
sub
loopne
movsb
xor
jecxz
test
mov
mov
jb
push
add
sub
and
pop
sub
ja
sbb
xor
call
fildll
popa
mov
or
adc
mov
xor
and
mov
lock
repnz
jecxz
pop
fcmovnu
jp
adc
pushf
ret
cmp
push
ljmp
cmp
fisttpll
call
sub
and
jg
test
add
je
fistpll
mov
popf
loope
cli
pushf
shlb
push
imul
xor
xchg
xor
lea
cmp
adc
rol
push
sub
mov
scas
fisubrl
pop
cmp
and
push
subl
aam
or
push
lds
sbbb
into
or
mov
aaa
fnstenv
xchg
dec
xor
call
inc
mov
jl
jb
sub
cli
and
sub
testl
sbb
icebp
push
inc
xchg
sub
adc
loope
and
mov
aad
pop
mov
outsl
push
sub
sti
loopne
sub
jmp
cs
sub
and
cld
sub
nop
mov
push
adc
cmp
stos
callw
imul
loopne
xchg
cmpsb
cmp
test
push
xchg
sbb
stos
mov
pop
int
adc
daa
pop
fldcw
imul
mov
ja
clc
xor
fxam
push
mov
aaa
icebp
je
or
lods
loop
xorl
cmpsl
push
mov
popf
addr16
sub
push
add
sub
jbe
lock
add
push
addr16
stos
sub
sti
xor
mov
mov
xor
mul
imul
sub
push
out
lahf
cwtl
sub
subl
test
jo
imul
pusha
pop
pop
push
mov
adc
ret
ss
aas
adc
sub
xor
mov
mov
frstor
pop
pop
clc
sub
sarb
fidivs
fnsave
cmp
sub
pop
pushf
mov
ja
push
stos
xchg
sub
jns
out
enter
dec
cwtl
cmp
outsl
fmull
xor
test
inc
sub
jmp
test
adc
add
push
xchg
jp
jno
sub
jae
mov
cmpsl
fcmovnbe
push
fisubrl
xor
fmuls
sbb
test
xor
xchg
sub
bound
dec
adc
pop
mov
push
add
push
icebp
scas
mulb
dec
sub
mov
les
test
cs
call
rorl
popf
sub
push
std
add
mov
jne
fistps
sub
sub
sarl
jg
std
iret
sbb
aad
jbe
sbb
sub
repz
mov
aad
in
and
repnz
pop
push
mov
nop
call
pop
mov
sar
fiadds
and
pop
sub
cli
shl
out
adc
adc
cld
and
mov
sub
push
out
mov
imul
sbb
jns
jg
jnp
xor
sbb
xchg
test
adc
dec
add
push
and
push
push
cmpsb
sub
les
sub
sub
cwtl
mov
sub
loope
ljmp
les
aad
in
mov
inc
dec
rcrl
xchg
sub
push
fsub
repnz
jb
cli
in
xor
add
scas
xlat
xchg
sub
test
cmpsl
mov
and
mov
sub
cmp
lea
pushf
push
jns
jb
mov
dec
inc
sub
je
pop
add
lahf
cld
cmp
adc
insb
fdivr
jp
imul
jecxz
fisubrl
rcl
mov
out
scas
popa
adc
xchg
sub
mov
daa
ljmp
sub
xchg
call
mov
fidivrs
push
adc
jecxz
sub
les
clc
dec
xor
mov
mov
scas
enter
in
cmp
fcompl
inc
lods
ljmp
stos
push
outsb
jecxz
jne
cld
add
movsb
inc
sahf
es
adc
push
inc
push
sub
sub
xor
int
jl
fstpl
mov
xchg
mov
test
cwtl
fisubrl
inc
or
and
jnp
xor
mov
arpl
in
iret
sub
push
dec
cltd
call
sahf
and
add
inc
fwait
pop
sub
je
dec
cmp
outsl
pop
stc
mov
pop
inc
pop
int3
jb
out
movsl
lods
jnp
xor
push
sbb
push
sub
xchg
adc
sub
xor
mov
adc
cs
aam
sub
mov
mov
or
aam
fsubrl
or
adc
inc
test
popf
push
ret
insl
lcall
int
and
into
sbb
jecxz
mov
cmp
repnz
pop
fsubrp
mov
and
imul
ret
lret
xor
cmp
imul
add
sbb
xor
and
adcl
sub
ficoml
aad
adc
sub
insb
lods
add
sti
leave
fstp
bound
mov
sub
push
push
xor
sub
mov
ret
cltd
sub
sar
std
sub
sub
or
mov
loopne
xchg
sarl
cmpsl
cmp
mov
jmp
cmpsb
xchg
jo
add
popa
pop
push
and
lahf
push
adc
popf
sub
lods
sbb
or
xor
leave
pop
mov
add
idivb
push
mov
add
lret
adc
dec
mov
sub
adc
lret
sub
jbe
rcrb
mov
dec
sub
shl
out
test
int3
ds
sbb
mov
push
scas
test
dec
jno
insb
sub
enter
mov
xor
and
insl
mov
inc
into
inc
xor
ljmp
and
in
mov
lret
inc
xchg
fsubp
or
repz
jge
pop
dec
jl
sub
js
sub
nop
inc
call
shrl
subb
insb
je
xor
xor
sub
sub
pushf
dec
jg
pop
sbb
fidivs
imul
mov
cmpsl
mov
subw
std
inc
scas
add
and
ss
pusha
orl
and
shlb
loopne
je
sub
jecxz
adc
lahf
dec
out
xchg
out
fldl
arpl
arpl
ljmp
mov
sub
sub
mov
imul
in
jbe
cmp
test
cmp
mov
mov
aad
repnz
xchg
sub
cmpsb
pop
or
sub
adc
lret
test
arpl
test
dec
addr16
xor
mov
lods
fbld
xchg
or
sarl
ficomps
testb
aaa
cld
fdiv
lahf
mov
mov
and
jbe
inc
push
jns
dec
and
out
jb
repz
xchg
jle
cltd
mov
and
mov
in
mov
out
sub
mov
test
sub
inc
sbb
add
xlat
push
stc
mov
mov
aad
fldt
push
out
xor
sub
jb
popa
sub
mov
mov
and
adc
les
sub
cmc
cmp
xor
mov
insl
xchg
faddl
mov
sub
cmp
add
xchg
mov
in
dec
cmp
dec
mov
lods
scas
sub
jno,pt
outsl
aad
sbb
mov
jp
add
test
into
sub
mov
inc
lcall
and
in
lea
push
insl
mov
iret
in
sub
cmp
mov
repnz
fwait
and
lret
jmp
sub
jl
shlb
pushf
in
stc
adc
lret
ret
jb
jmp
ja
add
and
sbb
test
mov
stos
jo
jb
push
sub
movsl
adc
lcall
nop
mov
sub
adc
ljmp
xor
add
fnstenv
mov
icebp
sub
pushl
aaa
sub
jmp
or
inc
xor
in
sub
nop
push
jo
sub
ret
into
popf
lcall
inc
or
cmp
inc
sub
push
xorb
push
shrb
aas
stc
pop
push
sub
pop
sbb
inc
sub
pop
test
adc
xor
addr16
sub
add
cmp
mov
fs
pop
repnz
ret
sub
xor
stos
push
lock
clc
nop
es
push
jne
dec
movsb
sub
ljmp
mov
out
mov
repz
or
push
loope
xor
cmp
in
and
sbbl
imul
in
pop
enter
ljmp
mov
mov
sbb
daa
sbb
mov
or
or
mov
cmpsl
in
repz
sub
inc
cmp
mov
icebp
in
out
dec
stos
scas
add
push
ss
sub
xchg
fldenv
inc
in
lods
hlt
iret
cwtl
dec
sub
out
or
hlt
call
out
mov
inc
sub
test
push
lret
sub
push
sarb
sub
enter
xor
cwtl
stos
lods
push
lret
and
inc
jle
scas
ss
mov
xor
sub
inc
cmp
lret
and
jne
add
and
test
pop
notb
out
dec
jnp
in
aad
and
rcll
mov
nop
mov
insb
popf
mov
in
inc
pop
mov
jle
mov
movsb
xor
and
dec
xor
sub
cltd
jbe
ret
int
and
repz
pop
insl
or
cmp
lcall
push
addl
dec
adc
bound
mov
sub
lock
negb
shll
sub
push
test
jo
jge
std
mov
lahf
in
out
enter
sub
lret
mov
or
adc
mov
scas
xchg
sub
cs
xchg
shrl
icebp
into
das
int
inc
cmpsb
cmp
out
cld
xor
sub
out
arpl
sub
sbb
push
popf
jl
xchg
inc
fisubl
cmpsl
mov
mov
insb
mov
or
inc
add
jmp
icebp
jne
mov
es
pop
push
test
pop
sub
jle
icebp
adc
and
sbb
movswl
inc
add
mov
int3
adc
mov
inc
mov
xlat
test
test
push
repz
test
sub
scas
lahf
sub
pop
and
sbbb
jp
faddl
sbb
test
or
popa
and
sti
insl
es
sub
cmp
jmp
ja
jge
xor
movsb
sub
sahf
dec
push
stos
cmpsl
fistl
les
dec
sbb
mov
movsl
pop
rcrb
xor
push
shlb
pop
loop
mov
push
sub
jb
cmpb
push
xor
sbb
sub
pop
loop
movsb
icebp
fnstenv
cli
dec
pop
sub
inc
imul
iret
push
push
dec
shrl
lea
pop
mov
mov
iret
movl
push
sub
pop
push
dec
repnz
ja
xchg
and
sti
xor
cs
in
nop
jecxz
fadd
pop
sub
pop
mov
sub
cmp
push
sub
popl
dec
and
pop
sub
pop
scas
cli
jb
shrb
leave
repnz
movsl
shrl
mov
sub
push
mov
and
adc
pop
mov
mov
push
and
test
fidivrs
aam
sub
push
ljmp
shl
jmp
in
lret
daa
test
sub
cwtl
jns
sub
pushf
jmp
ret
test
fidivl
mov
test
cmp
mov
and
stos
or
scas
sub
pop
ucomiss
and
mov
lret
lea
clc
int3
es
sub
js
imul
inc
sub
sbb
orl
lock
inc
push
loopne
or
aad
xor
mov
pop
add
sub
ret
mov
dec
add
sub
xchg
sub
ljmp
mov
adc
xor
loope
call
ss
cmpsl
jmp
shr
pop
jne
push
jo
outsl
ffreep
sbb
lcall
adc
xor
cmp
aas
push
sbbb
add
cld
dec
mov
sbb
daa
pop
mov
jge
jae
inc
ror
push
push
push
lds
repnz
icebp
cmp
jmp
or
sub
mov
out
or
rorb
xor
mov
xchg
sahf
or
adc
dec
mov
sub
push
jbe
mov
outsl
xchg
jl
push
sub
jno
rol
test
mov
bound
adcb
push
shrl
sbb
xor
xor
stos
cltd
mov
xor
or
ljmp
add
xchg
fsubp
sub
dec
dec
and
mov
aad
cltd
inc
push
pop
sub
call
and
push
inc
popf
sub
xor
into
jecxz
pop
fsubrl
mov
xor
dec
push
inc
jl
mov
push
sub
or
scas
mov
int
or
sub
repz
mov
fisttpll
sub
pop
push
xchg
lock
les
sub
cmpsl
mov
fidivrs
xchg
mov
dec
or
xorb
rorl
sub
ja
inc
xchg
mov
and
inc
iret
loopne
xchg
inc
dec
es
cmp
xchg
sub
or
insl
cmpsl
xor
cmp
test
and
scas
mov
mov
sub
shrl
sarb
sub
sub
cmp
xchg
sub
test
arpl
sub
ja
sbb
fldt
add
lods
rorl
sub
or
shll
cmp
add
int3
shrl
scas
hlt
aaa
sti
cld
dec
dec
sub
push
jle
ror
sbb
out
es
std
mov
xchg
stos
insb
cli
scas
repnz
les
loopne
and
pop
push
adc
mov
test
dec
bound
sti
fs
xchg
addr16
sub
aam
movsl
stc
test
pushf
sub
push
dec
jecxz
into
push
fcompl
sbb
rorb
mov
in
popa
sub
mov
sub
lock
add
inc
mov
cmc
sub
cmpsl
xchg
rcr
int
pushl
data16
pop
jecxz
adc
call
mov
sub
and
cmp
mov
hlt
gs
push
pop
andb
outsl
jne
jmp
mov
lret
inc
cli
and
and
sbb
out
jg
push
push
sbb
rcll
xor
aam
iret
testb
push
leave
push
test
lretw
aam
inc
lret
dec
orb
jl
sub
imul
lods
sub
adc
cltd
and
sub
add
sub
aaa
jp
movsl
sub
test
mov
cwtl
int3
push
jb
sub
ljmp
negl
sub
adc
inc
popa
vmovss
and
lods
xor
push
sub
pop
dec
je
mov
or
mov
pop
loop
lret
sbb
lcall
aad
jbe
sub
inc
dec
jns
frstor
nop
and
sbb
ret
mov
lahf
stos
add
add
stc
cmp
mov
push
mov
mov
subb
ljmp
test
mov
scas
push
clc
daa
lds
sub
add
fcmove
sbb
cmc
pop
sub
push
cltd
pop
fs
xchg
test
xor
and
es
ret
adc
in
mov
sub
in
push
dec
scas
jnp
es
dec
mov
ljmp
fiadds
mov
mov
xchg
arpl
or
xchg
mov
xor
mov
test
or
pop
divb
push
lea
sub
inc
and
xor
xor
ljmp
dec
out
lds
sub
sbb
insl
js
xorl
cmpsb
hlt
sub
loopne
repz
push
call
pop
pop
ret
sub
notb
and
icebp
xchg
cmp
dec
pop
mov
xor
in
aas
sub
shlb
mov
mov
call
jle
out
dec
sub
lret
push
ja
les
sub
arpl
push
sub
inc
and
enter
xor
int
aas
push
sub
or
roll
sub
mov
mov
cli
imul
sub
dec
lret
jge
sub
dec
add
imul
ja
sub
dec
jbe
sub
add
in
sub
test
inc
out
mov
mov
xor
pop
sub
fistpll
sub
push
adc
ja
mov
jg
xchg
jbe
inc
xor
lret
xchg
mov
js
push
mov
outsb
jbe
pusha
cmp
loop
pop
sub
ss
scas
mov
les
or
stos
rcrb
mov
movl
les
and
and
sub
xchg
dec
cmpsb
les
movb
cmpsl
hlt
scas
aas
mov
or
movsb
and
aam
ds
pop
test
sub
sub
outsl
addr16
ljmp
cld
gs
xchg
adc
sub
ret
pop
les
sub
xor
xor
pusha
fmull
scas
into
sarl
bound
xchg
hlt
sub
sbb
push
nop
xchg
sub
leave
loop
mov
sub
iret
pop
pop
or
in
sub
in
and
sub
mov
push
cltd
mov
sub
sbb
mov
pusha
sub
cmp
jl
sarb
cmp
xor
sub
push
popa
jmp
and
mov
cmp
fsubl
sub
add
push
sub
sbb
mov
jecxz
ret
sub
pushf
cmpl
loope
mov
fcompl
push
jmp
clc
lds
lods
push
pushf
incb
push
mov
out
arpl
add
stc
movsb
test
test
ficoml
out
push
adc
push
jb
mov
out
fs
lea
fldenv
sbb
cs
adc
sub
xor
and
repnz
mov
stos
and
sub
in
adc
ret
sub
and
scas
push
leave
jmp
and
ret
scas
pop
mov
push
nop
les
mov
pop
in
push
jb
daa
cmp
lahf
sub
fcompl
testl
insb
sub
scas
mov
jp
inc
sahf
xor
in
xchg
pop
xor
shlb
push
adc
ljmp
ss
xlat
loope
das
pop
cli
jmp
push
and
sub
nop
jno
mov
push
mov
lcall
sub
loopne
mov
adc
push
scas
xchg
in
notl
nop
cmpb
pop
inc
popa
sub
sub
mov
xlat
sub
and
loope
stos
add
inc
testl
xor
sub
test
add
ja
add
sub
push
cwtl
add
or
xchg
stos
add
sub
test
jp
sub
jno
ljmp
push
pushf
xchg
test
add
sub
int3
cmp
push
pushf
fcmovnb
cmpsl
push
subb
outsl
sub
pop
insl
jo
int
xchg
dec
mov
push
fldt
fdivr
movsl
dec
jecxz
adc
sbb
push
aas
jl
jae
jne
sub
pop
mov
subl
mov
ror
adc
pop
sbb
sub
les
sub
dec
mov
fs
mov
js
jmp
add
sub
sarb
sti
sahf
mov
push
or
std
pop
xchg
decb
pusha
push
cmpsb
mov
xchg
scas
and
lret
jno
sbb
enter
inc
mov
dec
and
cwtl
insl
icebp
and
mov
sbb
sarb
rcrb
lret
out
sbb
cltd
cs
sti
sub
stc
cmpsl
push
fcompp
and
mov
push
dec
and
push
add
icebp
lods
and
outsb
sub
cmp
sbb
xchg
mov
nop
and
lods
cli
xor
scas
out
mov
inc
pushf
sub
pop
sub
rcrb
gs
mov
mov
orl
and
inc
add
dec
sub
ss
sub
std
sbb
xchg
sub
fwait
rolb
sub
sarl
mov
lcall
mov
sub
xchg
jbe
stos
sub
enter
sahf
sbb
push
scas
leave
fs
sub
in
pusha
push
pop
cmp
lret
cmc
sub
imul
insl
sub
cmp
sub
into
add
mov
fdivr
int3
or
sub
arpl
aaa
sbb
pop
sbb
sub
sub
test
test
out
mov
nop
cmpsl
rcrl
in
add
add
mov
mov
scas
sahf
dec
sub
imul
in
cmp
xchg
outsl
fxtract
out
mov
push
sub
xchg
sahf
into
rcrb
repnz
in
sub
sub
push
push
sub
push
imul
je
mov
and
cmp
and
adc
jnp
sub
inc
sub
xlat
fisttpl
popa
enter
xchg
imul
and
cmc
xor
jecxz
repnz
fnstenv
sti
jle
sbb
hlt
mov
jae
sahf
cld
mov
jecxz
add
les
xchg
jg
repz
inc
loop
mov
stos
push
and
jbe
rol
ss
mov
icebp
lods
cmp
inc
movsb
loope
fisubrl
outsl
mov
xchg
imul
mov
adcb
sub
mov
cmp
stos
clc
mov
sbb
xor
sub
fstp
cmp
sub
push
mov
sub
xchg
and
sub
mov
mov
add
xor
adc
mov
push
fldt
xchg
sub
dec
sti
std
add
sub
sub
pop
aam
shrl
push
out
sub
sub
nop
inc
sub
fldt
inc
sub
popa
adc
sub
fisttps
pop
ficoms
jno
xor
andb
sbb
call
sub
lds
frstor
cli
xchg
daa
jns
mov
nop
ja
pop
fucomp
jg
pop
ret
jae
or
stos
das
pop
mov
sub
push
sub
in
stos
add
rclb
rcrb
lahf
cltd
imul
dec
lret
jecxz
test
and
sub
jmp
icebp
int3
mov
sbb
popf
or
or
mov
aad
jp
sub
push
or
jmp
xchg
lds
pop
lods
sub
xchg
jp
jne
adc
jle
loope
mov
mov
dec
mov
jnp
test
sub
loope
arpl
sbb
jnp
add
fs
mov
xchg
sbb
pop
mov
and
in
xlat
std
add
push
mov
cmp
sub
pop
test
xor
add
mov
out
fs
mov
rolb
cmpsl
sub
sub
cmp
es
leave
cmpsl
xor
sub
sbb
xchg
aam
in
cmp
shrb
mov
call
xchg
sbb
fucom
pop
sbb
jmp
icebp
dec
test
cmp
sub
push
pop
aaa
inc
sub
enter
out
in
fdivrs
and
jg
jp
aad
sbb
xchg
divb
push
jecxz
pop
mov
mov
mov
lret
addr16
mov
dec
cmp
mov
sbb
lret
ss
cli
sbb
js
clc
dec
repz
into
fucomp
xor
rcrl
mov
mov
outsb
pop
iret
sub
push
adc
loope
loopne
dec
dec
adc
and
pop
sbb
pop
inc
daa
xorl
mov
dec
mov
rep
adc
psubd
inc
lods
jne
lahf
pop
sub
arpl
insb
mov
adcb
pop
mov
pop
and
sub
or
inc
stos
sub
icebp
inc
pushf
mov
arpl
sub
mov
mov
decb
sahf
bound
jb
and
inc
in
push
cmp
or
lcall
test
mov
sbb
push
or
cmpsb
sub
push
jbe,pn
fsubr
clc
arpl
loope
sbb
mov
inc
mov
fisttpll
and
dec
cmp
scas
dec
sub
fwait
add
jecxz
ret
inc
sbb
dec
les
aaa
and
mov
es
xchg
jns
les
out
pop
clc
mov
in
sub
pop
or
in
inc
dec
cmp
stos
sub
mov
popf
lds
ljmp
int3
add
lahf
sub
rorl
dec
insb
sub
insl
jnp
into
sub
out
dec
les
mov
sub
mov
int
inc
sub
movl
cltd
sub
cmc
inc
sub
out
pop
int3
sub
xchg
loop
push
jecxz
and
and
aad
rorb
xor
cmp
sub
int
std
pop
scas
adcb
cmpsb
push
cmp
ds
sub
movsb
xchg
shrl
pop
xchg
dec
sub
inc
out
push
sub
cltd
mov
lea
jae
push
mov
jecxz
xor
movsb
push
call
mov
ret
repnz
push
outsb
dec
sub
sbb
pusha
mov
push
in
push
fldt
lds
or
ja
and
sbb
fwait
sub
xor
orb
push
aas
test
sub
mov
mov
leave
adc
xchg
movsl
cld
dec
div
jle
sub
lahf
push
mov
gs
adc
dec
arpl
mov
hlt
pop
pop
sub
shll
xchg
sub
test
mov
mov
lret
into
out
out
and
and
stos
mov
pop
jmp
sub
jge
ret
stos
xchg
jns
loopne
add
rclb
lods
scas
and
sub
stos
pop
imul
sub
dec
pop
sub
xlat
adc
cltd
lret
and
xor
inc
sbb
sub
sub
mov
frstor
push
pop
xor
out
sub
fimull
fdiv
mov
inc
sbb
xor
cld
es
add
ljmp
daa
push
xchg
icebp
jo
mov
or
loopew
loop
fidivrl
sub
lret
in
fwait
sub
cmpsb
dec
jo
sub
insb
push
pop
push
mov
sub
adc
in
sub
aas
ljmp
inc
xor
mov
or
push
cmc
or
shlb
xchg
adc
sub
insl
mov
or
adc
xchg
sub
std
sahf
xchg
fbld
adc
and
xor
mov
mov
or
imul
mov
ljmp
mov
jno
sub
daa
inc
mov
incb
inc
mov
insl
xchg
push
sbb
sub
es
xchg
inc
bound
fiadds
sub
sub
adc
cmp
sub
or
imulb
dec
or
xor
ds
push
in
push
call
rolb
std
mov
fdivr
pop
ljmp
adc
dec
scas
sti
dec
sub
jmp
mov
adc
pop
dec
jbe
mov
ret
mov
addr16
shr
lds
ret
into
movsl
inc
mov
xchg
sub
pop
mov
lods
sub
bound
shlb
dec
stos
cmp
lods
ss
mov
adc
call
jge
fwait
stc
xchg
xchg
bound
pop
in
push
pop
outsb
cmp
fsubs
dec
sahf
dec
inc
add
or
xchg
and
xchg
dec
sub
or
scas
sub
lret
pop
sub
adc
out
cmpsb
ljmp
xor
movsl
pop
arpl
sbb
sbb
sub
faddl
jne
testb
cmpsl
jge
push
mov
nop
sub
test
movsb
fmull
ficoml
sub
and
jg
dec
xchg
sbb
jne
aas
pop
cmp
xchg
lret
push
mov
rcr
jnp
fwait
in
sub
clc
jecxz
xor
sub
test
xchg
pop
sbb
int3
je
lock
ret
adc
jle
stc
cs
pushf
adc
insb
and
sbb
sbb
repnz
cmp
js
sub
lock
sub
add
in
div
sub
dec
lret
jno
cmp
test
das
ss
mov
push
push
mov
mov
dec
sahf
cs
fiadds
sub
push
and
lods
xchg
and
push
rorl
adc
movsb
pop
xchg
sbb
mov
sahf
inc
xor
mov
icebp
fmull
add
data16
mov
iret
mov
xchg
sbb
push
scas
out
repnz
sub
dec
es
outsl
cld
and
sub
jnp
in
lret
ljmp
add
mov
scas
cmp
fwait
xor
sub
dec
icebp
nop
mov
test
pop
imul
aaa
push
imul
and
movsl
mov
sub
sub
sub
adc
xlat
enter
lock
mov
aam
rorb
cmpsl
iret
addr16
xlat
cmp
imulb
inc
xchg
add
add
jns
dec
pop
xor
jmp
sti
sub
pop
daa
stos
and
adc
jmp
cmp
mov
lret
pop
jae
or
scas
pop
cwtl
rcl
imul
mov
clc
hlt
inc
rclb
cltd
and
sub
inc
cmp
or
daa
cmp
shrl
sub
je
sub
push
or
fcom
sub
xor
sub
enter
mov
dec
ljmp
ficoml
mov
stos
and
loope
jnp
cmp
push
scas
sub
cmpsl
lret
cmpsb
jg
subl
divl
fidivrl
add
mov
mov
aad
push
xor
test
dec
or
sub
data16
in
out
sub
xchg
filds
or
mov
js
dec
mov
cmpsl
and
ja
or
sub
ds
xor
cwtl
fsubr
mov
sub
enter
sub
aad
push
adc
loop
xchg
push
js
jno
sub
mov
mov
push
push
push
lcall
testl
leave
mov
dec
push
push
pop
and
mov
sub
inc
cs
sub
aam
adc
and
test
xchg
mov
aas
inc
js
sbb
loopne
in
and
test
sub
xchg
lock
xor
and
dec
addb
sub
mov
and
mov
out
jbe
int3
xchg
int
push
idivl
cmpsl
sahf
pop
xchg
cvtps2pi
bound
fcompl
in
sbb
mov
push
sbb
fs
testl
stc
mov
push
shrl
loopne
inc
dec
pusha
gs
jge
jbe
xchg
push
arpl
sub
sahf
push
sti
xchg
cli
popa
sub
add
mov
cmp
and
push
rorl
jge
test
jecxz
sub
outsl
or
jmp
sub
cld
mov
cltd
mov
pop
sub
sbb
mov
sub
xchg
ficoms
sub
mov
cmc
dec
pop
and
flds
jecxz
inc
sub
dec
mov
mov
and
cmp
fstl
imul
cmpsl
xchg
ror
sbb
jecxz
jmp
inc
and
mov
and
mov
add
or
rol
inc
es
stc
lods
cltd
js
fisubrl
push
bound
fidivl
sub
arpl
mov
sub
out
jmp
dec
sub
add
xor
sub
outsl
pop
sub
fnsetpm(287
aam
xchg
jae
lea
xchg
xor
repnz
xor
mov
loop
loope
pop
cmp
or
pushf
mov
lock
sub
movsl
andb
and
jge
adc
push
iret
and
inc
sub
dec
callw
mov
iret
popf
clc
mov
xor
sub
ljmp
nop
and
ja
mov
xchg
sbb
sahf
cltd
sub
pop
or
sub
xchg
leave
aaa
pop
jmp
jno
test
xchg
xchg
test
sub
push
pop
mull
les
push
inc
dec
mov
add
xor
ret
adcb
lret
sbb
mov
cmp
pop
daa
jbe
stc
cmp
leave
fistps
add
or
cwtl
pop
sub
aaa
xor
jns
xchg
xchg
sub
jmp
ret
inc
lcall
dec
mov
fwait
xor
cmp
push
mov
roll
pop
loope
jl
lock
xchg
xor
mov
pop
jae
adc
dec
and
inc
es
or
xchg
subl
and
divb
aad
cmp
sub
inc
ret
out
lock
sahf
sub
repz
jp
mov
xchg
adc
mov
ljmp
testl
or
push
out
cmp
push
mov
sub
test
mov
movsl
sub
insl
mov
pop
vmovddup
sti
pop
inc
gs
int3
inc
sub
adc
aas
adc
rorl
sub
gs
dec
pop
sub
shlb
leave
sub
fstl
addr16
icebp
ds
push
mov
add
daa
addr16
and
out
test
subl
mov
pop
cmp
ds
add
xchg
push
notb
imul
enter
adc
lods
xor
cmc
lcall
insl
jbe
sub
loopne
iret
or
sbb
sub
je
and
push
add
insb
and
add
jl
xor
dec
cmp
and
xchg
and
jno
xchg
stos
imul
sub
jne
ficompl
mov
sahf
clc
pop
xchg
sub
lret
sti
sbb
mov
stos
dec
sub
mov
loope
sub
fnstenv
inc
jae
int
xor
cli
repz
sub
adc
inc
or
inc
add
enter
xor
std
jnp
cmp
inc
and
shlb
out
iret
pop
cmp
insb
sub
sti
out
push
cmc
gs
inc
xchg
dec
sub
jno
addr16
shrb
mov
in
lock
sahf
mov
jecxz
outsl
or
sub
cli
cmp
sbb
fwait
push
sub
in
inc
test
sub
outsl
mov
sub
pop
cmpsb
sbb
push
mov
adc
xchg
push
arpl
inc
sub
cmpsb
das
fst
and
add
or
mov
dec
sub
dec
sub
jno
outsb
add
cmp
mov
sub
cmp
sub
lods
jle
out
add
por
out
sub
sbb
sub
dec
or
in
ror
stos
xchg
or
push
sub
adc
mov
pop
sub
mov
ret
sub
pop
fisttpl
sub
nop
rep
cmp
loop
and
in
cld
es
mov
mov
andl
push
stc
mov
sub
lret
imul
and
xor
fsubs
push
cmc
mov
mov
leave
jae
sbb
imul
mov
cmp
and
xor
jno
dec
or
pop
sub
and
inc
sub
push
xor
push
cmp
ss
jne
push
movsb
sub
mov
adc
push
adc
scas
push
and
add
adc
push
cmp
mov
test
je
jns
adc
clc
faddp
data16
or
adc
sub
sub
sub
cmp
mov
rorl
mov
popa
leave
add
lods
jo
aaa
sub
fisttps
test
adc
enter
insl
dec
aam
jb
lock
fst
pushf
inc
daa
xor
or
pop
sub
repz
mov
cmp
lea
daa
rcl
sub
fldl
pop
xchg
daa
ss
sub
sbb
ljmp
arpl
cmpl
and
xchg
sub
fcoms
jmp
lret
sub
stos
cmpsl
sahf
sbb
sub
fidivs
loopne
sub
es
push
inc
and
adc
push
jns
pop
into
ret
jl
push
add
mov
push
into
cltd
adc
daa
mov
sub
sub
mov
stc
sbb
leave
and
aad
popf
arpl
pop
sub
cmpsb
push
fmuls
out
pusha
dec
mov
mov
lcall
ljmp
lahf
adcl
sub
xchg
sbb
fldcw
mov
lock
subl
repnz
jo
rcll
sub
inc
in
std
test
enter
push
jecxz
aas
inc
stos
icebp
and
xor
inc
mov
imul
xor
xchg
sub
shrb
lahf
in
push
and
dec
scas
dec
pop
int
and
cmpl
aam
out
mov
cs
test
add
daa
mov
data16
inc
mov
outsl
sub
jle
test
sub
or
push
mov
sbb
daa
enter
das
mov
enter
mov
icebp
insl
push
adc
mov
cmp
sub
xor
add
sub
ret
nop
fdivl
lret
sub
adc
adc
sarb
dec
sub
mov
insb
js
imul
call
sarl
cmpsl
mov
xor
pop
jno
mov
ljmp
fisttpll
mov
lods
dec
dec
dec
jg
sub
mov
loopne
mov
int
int
sub
xchg
in
jp
fmull
bswap
xchg
add
sub
adc
icebp
pop
sub
or
je
sbb
lea
mov
cmpsl
or
cmp
mov
mov
in
ss
pop
fstl
cmp
pop
jge
mov
lcall
daa
sarb
sahf
sub
mov
adc
dec
or
idivb
xor
cmp
leave
sbb
test
pop
cmp
sub
icebp
inc
andl
hlt
fildll
adc
sub
add
andps
add
sbb
lods
and
lea
sub
stos
cwtl
loope
int
sub
xor
adc
int3
aad
hlt
jne
dec
insb
outsl
jnp
sub
out
push
stos
xchg
lds
mov
fidivrl
mov
lock
mov
ss
adc
cld
inc
lds
jns
loopne
daa
sbb
mov
mov
lds
add
xor
lahf
sub
pop
scas
stc
pushw
and
sub
cs
nop
sbb
xor
sub
pop
popa
sub
xchg
jmp
cli
bound
fldcw
pusha
adc
shr
sub
pop
dec
sbb
sub
inc
int3
xor
sub
push
enter
out
std
arpl
xchg
daa
ljmp
mov
xor
dec
subb
push
sub
fisttpll
mov
xor
mov
stos
imul
test
je
or
sub
orl
sbb
mov
sub
add
stc
push
sub
xlat
inc
div
sub
cmp
and
xchg
mov
sub
cmpsl
in
adc
xchg
sub
dec
mov
jae
fwait
push
xor
in
call
inc
push
sub
pop
jbe
rcll
leave
daa
mov
movsl
cltd
sub
loope
repnz
das
mov
jge
mov
adc
sub
lods
xchg
mov
mov
mov
aam
push
add
and
dec
mov
jbe
out
adc
stos
jecxz
mov
dec
jns
pusha
jl
nop
add
ret
pop
xor
push
pop
jecxz
or
out
arpl
xchg
lret
cmp
sub
jp
into
and
jg
pop
jecxz
hlt
sub
lret
cltd
sub
clc
cmpl
sub
cmp
inc
push
mov
sub
notb
or
ficoms
lock
in
daa
loope
inc
aas
fdivs
cmp
rorb
mov
xor
xchg
add
lret
cli
sti
push
sub
xchg
adc
push
int3
or
mov
and
out
dec
cmpsl
mov
add
pop
xor
jg
jo
cmp
cltd
sub
std
das
inc
mov
adc
push
sbb
fstl
sbb
xor
cmpsl
dec
arpl
in
sub
rclb
inc
mov
das
add
mov
adc
icebp
and
and
ja
mov
std
out
sub
xchg
scas
cwtl
adc
cmp
je
out
bound
roll
push
ss
je
adc
jb
jno
sub
or
aas
sar
outsb
push
push
mov
add
jnp
subb
push
push
mov
cmpsl
mov
ja
bound
imul
pop
adc
cs
push
fldl
add
and
scas
int
negb
adc
dec
out
int3
and
xchg
js
sub
xlat
scas
call
rcr
je
in
adc
les
xor
sub
lods
psrad
jg
push
jne
pop
int
aaa
jbe
mov
pop
daa
mov
push
dec
mov
lret
outsb
arpl
inc
pop
sub
mov
mov
jns
mov
sub
scas
add
std
and
add
sub
ror
fs
out
dec
je
inc
jnp
into
pop
and
add
cmp
sbb
mov
pop
in
pop
sti
scas
sub
push
or
mov
dec
cmp
lcall
scas
jl
dec
test
lahf
inc
xchg
outsl
push
sub
cmp
cld
pop
in
adc
inc
sub
xor
aaa
sub
cmp
lds
mov
pusha
rolb
dec
shrl
clc
xchg
hlt
add
mov
std
lods
rcrl
mov
sub
jb
rclb
in
mov
xor
adcl
sub
cmpsb
aam
cmp
shrl
xor
loope
and
out
je
adc
mov
mov
int3
lahf
sub
int
cmp
insb
adc
mov
sub
xor
adcl
popa
sbb
mov
xchg
in
sub
push
js
fnstcw
adc
or
sbb
ficompl
aas
xchg
mov
sub
adc
stos
sub
pushf
pusha
adc
into
push
cmp
sub
sub
push
lods
and
ljmp
inc
xor
int3
mov
jl
push
cli
stc
subb
imul
lret
push
adc
mov
addb
mov
mov
sub
push
push
arpl
mov
inc
repnz
inc
adc
js
push
outsb
mov
aas
cltd
in
sub
in
out
mov
and
push
add
jnp
xor
aaa
cmp
dec
xchg
and
test
mov
push
shr
xor
fiaddl
sbb
mull
push
or
xor
push
add
fcmovnb
dec
sub
xor
mov
pop
pop
scas
mov
mov
rclb
sub
jmp
test
das
jle
inc
fsubrl
daa
jns
scas
ja
add
mov
jmp
out
int3
lcall
mov
xor
inc
dec
cmp
or
subb
divb
pop
sub
jne
imul
mov
mov
adc
mov
mov
sbb
sbb
shr
sub
sub
int3
mov
mov
aad
sub
xchg
out
add
or
sub
lock
arpl
sahf
es
das
jp
lods
sub
adc
nop
inc
xchg
jle
cmpsl
add
fidivs
shl
sub
jo
push
dec
fwait
test
or
adc
sub
gs
mov
std
lcall
mov
sub
sbb
scas
sub
mov
test
sub
mov
rcrb
sbb
add
frstor
cmpsb
jnp
push
cmc
cmpsb
sub
pop
ja
lcall
out
cmp
shrb
mov
mov
mov
or
sub
aaa
nop
cmpsb
push
and
test
xchg
sbb
cmp
jno
aad
gs
mov
decb
jg
xor
inc
scas
and
sbb
out
sub
mov
addr16
mov
lret
cmp
push
aas
add
daa
mov
mov
sbb
sub
js
lock
adc
call
sub
xchg
mov
inc
pop
and
push
clc
in
pop
xor
adc
es
jg
ficoml
sbb
dec
imul
mov
aaa
aas
sub
or
lea
sub
add
sub
hlt
inc
ficomps
sbb
sbb
adc
and
sub
lock
jmp
fwait
incl
int3
inc
and
jge
loop
xchg
or
push
xlat
aas
mov
sahf
idivb
sbb
sub
pop
popf
in
fldt
push
imull
lock
dec
shrb
aad
and
and
jp
je
fs
stos
inc
unpcklps
jg
inc
xor
sti
push
ss
adc
sub
push
mov
cmp
add
jl
cmp
std
add
inc
scas
and
pop
hlt
sub
jl
mov
lock
or
mov
cmpl
stos
mov
sarb
push
sub
jno
mov
test
ja
pop
call
add
shlb
sub
stc
dec
insl
bound
insb
cmp
pop
mov
mov
mov
cltd
sahf
popa
sub
or
mov
sub
sbb
outsb
in
test
adc
mov
ret
sub
mov
xchg
mov
shrb
les
dec
pop
movsb
mov
ret
loope
push
inc
iret
imull
lcall
orps
sub
xchg
pop
push
dec
xor
sbb
loop
cs
xchg
jmp
call
cs
jl
sub
mov
push
push
lock
mov
iret
mov
xchg
mov
icebp
fimull
xchg
lret
mov
les
clc
leave
and
out
or
inc
in
xor
into
lds
ret
cmp
jns
sbb
xchg
mov
push
sub
aad
push
leave
fldcw
movsb
lcall
sub
pop
and
idivl
loop
cld
push
or
insb
mov
mov
sub
lock
pop
aam
or
daa
out
or
call
cmp
sub
fsubl
cmc
enter
mov
ret
lds
xchg
mov
stos
dec
imul
loopne
sub
cmpsl
push
sub
mov
aaa
test
pop
add
ret
imul
mov
pop
xbegin
mov
out
mov
sbb
shrl
mov
sub
fs
lds
mov
cmp
mov
test
dec
lock
adc
xor
pushf
pop
jle
les
test
movsl
or
sti
shlb
aas
xchg
inc
stc
cmp
or
mul
das
pop
sub
movsb
push
pop
aam
adc
xorl
in
jo
jmp
outsb
aaa
pop
out
sub
inc
adc
mov
push
sbb
ds
sbb
jno
xor
dec
mov
loopne
and
add
or
cld
cs
stos
fstpl
dec
icebp
sub
push
dec
gs
cmp
xor
xchg
sub
and
ret
cwtl
inc
push
dec
mov
out
sub
loopne
mov
sub
jle
and
sub
dec
xchg
fisubs
inc
jno
cmp
enter
push
mov
aam
js
push
dec
cmp
das
cmp
pop
sbb
push
cs
xor
add
imul
daa
sub
lret
and
sub
xlat
add
cwtl
cld
sub
dec
xchg
test
ss
lahf
js
cli
sub
call
rcll
lock
fcom
sub
push
pop
dec
push
sub
lds
fisttpll
fsubl
mov
cmp
sbb
sub
push
or
repz
loopne
add
fcom
and
mov
pop
sub
movsb
std
jbe
mov
sub
and
sub
or
or
adc
cmp
inc
sub
shlb
jno
or
in
sub
mov
jmp
or
sub
pop
cmp
mov
sub
inc
scas
sub
sub
sti
pop
xchg
pushf
sub
inc
into
int
sub
adc
push
adc
stos
pop
arpl
stos
sub
lds
hlt
sub
mov
inc
pop
push
push
mov
sbb
rcrl
and
mov
mov
hlt
in
mov
dec
fsubl
sub
pop
mov
pop
jnp
cmc
xchg
sub
pop
out
push
movsl
xor
ljmp
sbb
test
in
dec
push
cmp
mov
mov
add
cmc
rol
mov
sub
sbb
fldl
cmp
or
ds
mov
jnp
addl
xchg
xor
or
stos
popa
mov
fcmovbe
sub
outsl
enter
ret
fnstenv
mov
and
fidivrs
mov
leave
jae
mov
sub
push
ds
push
xchg
addr16
or
push
call
inc
clc
inc
cmp
jl
push
push
mov
or
or
aad
jne
jbe
xor
psubd
movsb
cmpsl
call
scas
cmpb
cmp
dec
call
xor
lea
inc
data16
dec
loopne
mov
lcall
fimull
std
sub
addr16
xor
sub
fwait
jl
enter
mov
sbb
adc
hlt
lods
cltd
shrl
xchg
add
dec
sub
icebp
dec
mov
hlt
cmp
sub
sbb
pop
mov
xor
adc
gs
repnz
ss
push
sub
inc
adc
call
sub
clc
movsl
mov
aam
pop
cli
daa
mov
daa
xchg
jl
xchg
repnz
inc
loope
daa
and
sub
push
nop
aaa
sub
dec
mov
or
mov
sub
cld
xchg
loopne
xchg
adc
push
out
fs
andb
pop
and
sbb
or
inc
outsb
out
inc
aas
sub
addr16
divb
sbb
arpl
bound
and
aad
fbstp
dec
sub
add
lods
fsubrs
push
mov
sub
sbb
adc
fsubrp
inc
or
stc
xchg
test
adc
nop
cmp
and
jnp
mov
cmp
xorl
es
enter
iret
mov
add
mov
adc
gs
push
sbb
sub
xor
fldenv
lods
inc
repnz
mov
add
adc
fisttpl
repnz
fs
lcall
sub
sbb
out
sub
push
add
mov
and
out
lret
in
xchg
lods
sub
test
mov
arpl
push
sub
jno
jbe
enter
adc
std
sub
pop
loopne
mov
es
pop
mov
mov
bound
addr16
mov
add
mov
scas
sub
dec
loope
out
mov
sbb
adc
mov
jp
call
push
int
and
es
jne
pop
nop
or
xor
mov
jecxz
dec
repz
and
jmp
cmpsl
jbe
das
sub
mov
repz
sub
sub
and
pop
adc
addr16
mov
enter
stc
pop
mov
rolb
pop
and
sub
sub
add
nop
int3
out
in
push
inc
pop
fcmovb
and
jge
test
sub
icebp
jg
mov
and
push
loope
daa
sub
mov
arpl
scas
hlt
dec
pop
sub
pop
cli
jmp
push
fmulp
setp
cmpsb
fwait
mov
cld
adc
sub
mov
inc
mov
movsl
das
jae
lods
sub
pusha
or
loopne
mov
xlat
cmpsb
shrl
lahf
and
add
in
ljmp
cld
sub
subl
out
out
sarl
inc
inc
xchg
cmp
jno
mov
lahf
sub
xchg
jae
std
add
push
sub
xchg
lock
mov
pop
mov
fidivrs
jb
sub
push
and
stc
test
scas
sub
insb
sub
nop
sti
out
sub
adc
mov
int3
cmp
or
add
push
call
jl
add
cwtl
repnz
cmc
push
pop
ds
fldt
push
outsl
pop
xchg
mov
loope
add
mov
sar
xchg
push
inc
xchg
push
das
mov
sub
sub
push
scas
adc
out
mov
sub
jne
in
sub
movsb
push
or
cli
mov
popa
adc
xchg
sub
inc
mov
lods
xchg
cmp
sub
sub
adc
mov
mov
mov
movsl
popa
repnz
push
cmc
std
and
cmp
jle
cmpsb
sub
loope
in
lds
orb
xchg
add
push
pop
fwait
das
adc
int
lock
daa
dec
mov
pop
test
mov
xchg
sub
push
jbe
shrb
mov
jmp
or
addr16
mov
mov
xor
sub
inc
xor
test
dec
ret
dec
sub
call
cmp
out
jmp
sbb
inc
or
mov
rclb
push
aas
push
lcall
scas
or
sbb
pop
cmp
repz
fstl
daa
stos
push
call
mov
imul
or
ret
test
mov
clc
sub
or
push
or
mov
cmp
cs
sbb
cmp
jmp
daa
lret
or
in
sub
aad
cli
pop
sub
add
and
sub
lock
lds
jbe
es
into
push
jp
and
adc
cmp
mov
and
or
mov
sub
in
fstl
sub
add
andl
add
adc
pop
adc
mov
fwait
adc
lret
lods
sub
sbb
out
xor
arpl
adc
adc
imul
addr16
sub
xor
icebp
into
jmp
out
pop
sub
jp
adc
out
inc
mov
dec
cwtl
mov
sbb
or
sbb
daa
or
fnstsw
jl
sub
test
jp
sub
push
pop
icebp
cmc
addr16
sub
mov
aas
shlb
insl
sub
cmp
sub
xor
icebp
add
bound
pop
repnz
lret
iret
adc
cs
xor
add
mov
sub
idivb
mov
and
push
mov
imull
roll
insl
push
mov
ret
xor
in
jg
or
pop
inc
lods
mov
out
das
lods
xchg
jbe
mov
jo
mov
out
fiadds
sub
outsb
mov
sub
pop
jns
bound
mov
mov
sub
mov
shlb
lods
and
cmp
sub
shll
ja
out
outsb
into
xchg
inc
out
fsubrl
jge
mov
sub
in
pop
cltd
test
aaa
ret
adc
scas
mov
jae
in
sub
fstpt
hlt
scas
cltd
mov
xchg
sbb
sti
push
imul
mov
sbb
xchg
popa
mov
sub
sarl
das
fbstp
push
popf
shlb
sub
sbb
cmp
sbb
aad
add
cmp
faddl
cmc
add
out
dec
aam
inc
test
and
daa
fistl
out
add
ret
and
mov
or
in
stos
fidivrs
sub
cmc
push
dec
mov
test
xchg
gs
lret
push
jp
sub
push
in
sub
mov
add
ss
push
xor
gs
bound
sbb
jg
lret
jecxz
mov
cmpsb
sub
jne
mov
jmp
dec
gs
int
sub
xchg
mov
test
add
les
adcb
xor
push
enter
cmc
pop
lods
cmp
dec
test
daa
aas
adc
fwait
and
fidivs
add
int3
pop
shr
movsb
xor
cmp
sub
jae
xor
jmp
mov
sub
lahf
data16
sub
mov
shrb
dec
outsb
pop
push
or
shl
fldt
xor
mov
mov
mov
in
sub
pop
cltd
add
dec
dec
mov
sub
jg
in
mov
aaa
push
pop
mov
jae
bound
push
push
sub
icebp
jb
pop
sub
mov
sub
adcb
sahf
or
cmpsb
xorb
adc
xchg
dec
popf
mov
daa
outsb
pop
sub
pop
sarl
hlt
mov
sub
sub
stc
xor
jmp
shlb
inc
inc
push
int
and
jle
pop
nop
mulb
sub
ja
test
mov
sub
pop
loopne
scas
sub
cmpsb
push
adc
lds
adcb
cltd
xor
jb
sub
adc
ja
js
stos
inc
hlt
adc
adc
sub
mov
sub
sub
repnz
test
mov
aad
lahf
jae
and
pop
les
lcall
daa
dec
mov
es
stos
inc
cmp
ljmp
mov
sahf
push
fs
je
mov
loope
ficoms
cmp
push
outsl
adc
sub
out
fs
sub
stc
xchg
mov
pop
faddp
into
std
sub
cwtl
mov
push
aas
xchg
cmc
sub
xor
or
mov
fstpl
cmpsb
ror
cmp
addl
sub
jo
inc
dec
sub
sbb
ja
cvtps2pd
xchg
lods
xor
out
mov
sbb
cwtl
sub
inc
sub
adc
xchg
dec
xchg
shlb
push
fsub
cli
test
mov
push
push
adc
sub
xchg
enter
mov
sub
push
loop
addr16
inc
dec
mov
or
or
je
sub
mov
sub
test
fimuls
and
dec
aad
sub
cmp
nop
and
jne
js
pushf
sbb
call
int
jno
sub
rclb
jns
fistps
cmp
aaa
add
lods
pop
arpl
sub
jne
mov
int
int
call
mov
repz
pushf
ret
cmpsb
push
sub
push
pop
inc
out
shll
xlat
scas
dec
mov
sub
cmpsb
mov
jge
add
dec
mov
mov
test
adc
inc
lea
and
dec
mov
insl
jge
das
daa
xchg
sub
out
cli
cltd
push
jle
bound
sub
adc
sub
lods
in
lods
sub
ja
xchg
fisubrs
je
pop
and
xor
add
jmp
sub
sub
push
and
pop
sbb
xchg
sub
xchg
mov
jns
cmp
pop
sub
fldt
add
imul
js
jbe
sbb
imul
out
cs
mov
mov
mov
push
or
or
ret
pop
int
mov
sub
shll
sub
ret
jns
sbb
lahf
js
dec
stc
icebp
lock
pop
insb
pop
pop
inc
adc
sbb
cmp
inc
cmp
fwait
jne
bound
mov
movaps
mov
mov
fcomip
sub
dec
sub
mov
and
jecxz
push
inc
cmp
pushf
sub
test
fwait
pop
loop
adc
notl
or
sbb
orb
push
and
call
xchg
ds
loope
pop
push
adc
sub
inc
sub
pushf
fldenv
lea
imul
mov
iret
pop
jo
sub
jb
bound
scas
imul
sub
decl
in
push
lods
mov
cltd
sub
push
rorl
fwait
mov
and
dec
mov
bnd
mov
sub
inc
cld
xchg
leave
sub
sub
sahf
icebp
or
dec
jnp
inc
add
popf
sub
add
sti
mov
xchg
cmp
sub
repz
stos
incl
fldt
mov
sahf
and
lret
sub
jmp
sub
push
and
sahf
loopne
nop
sub
mov
pop
stos
mov
pop
sub
mov
lahf
lret
sbb
mov
sbb
dec
pop
addr16
push
sub
jnp
nop
jbe
int3
sub
pusha
sbb
push
lahf
fs
xchg
daa
mov
jnp
aad
cwtl
fsubs
add
and
lods
outsl
js
mov
lret
dec
daa
add
and
mov
ljmp
jnp
xchg
and
cli
cwtl
ret
scas
inc
xchg
sub
sbb
sbb
dec
aad
cmpsl
mov
xchg
push
pop
mov
sub
inc
cs
lcall
addr16
xchg
sub
push
push
aas
push
sbb
in
popa
sub
daa
leave
cwtl
gs
movsl
int3
sub
int
cmp
sub
xchg
cld
adc
lock
ficompl
and
mov
sbb
xchg
sub
inc
lcall
cwtl
loope
mov
adc
pop
pop
or
cmpsl
inc
push
push
cld
rcll
mov
inc
sub
sbb
shrl
or
mov
sbb
inc
and
les
mov
inc
aad
jecxz
pop
aas
sub
int3
mov
jbe
jle
sub
sub
les
addl
adc
push
dec
repz
and
out
jmp
hlt
callw
faddp
das
mov
popf
jae
sub
push
mov
movsl
add
sub
dec
and
mov
jg
sub
sbb
jp
jo
mov
repz
jo
js
xchg
inc
out
fsubl
pop
test
jle
fisttpll
mov
idivl
shlb
int3
and
xchg
push
and
pop
jbe
sub
inc
dec
mov
sub
jge
outsb
pushf
int3
xchg
iret
sub
enter
test
jae
dec
scas
cmpsl
sub
and
sbb
jg
dec
jge
cmpb
test
clc
ljmp
jb
mov
arpl
mov
cld
sub
push
adc
dec
aas
sub
cltd
lods
inc
dec
sub
inc
push
das
xchg
sub
les
pusha
sbb
movsl
mov
sub
adc
sub
sub
cmp
fdivl
scas
fs
sbbl
dec
test
outsb
aam
mov
cli
or
fstpt
xchg
stc
and
mov
popf
xlat
sub
in
sub
and
push
fwait
call
ja
test
or
adc
into
lret
push
data16
and
jp
adc
insb
sub
idivl
fwait
push
sbb
xor
out
je
push
and
sub
mov
mov
dec
mov
add
pop
push
sub
mov
ds
sub
add
push
jecxz
add
repz
sub
mov
bound
icebp
loop
sub
sub
lods
xor
scas
dec
sub
adc
push
int3
mov
or
inc
insl
sub
dec
cmpb
inc
push
inc
rcrl
loopne
lret
sbb
lock
and
nop
and
fisubrs
xor
sub
push
sbb
repnz
jecxz
dec
push
cmp
and
mov
xchg
xchg
ja
sahf
lds
jo
ss
sti
stos
add
sub
jg
mov
dec
xor
xchg
and
xor
mov
inc
leave
sub
sbb
div
mov
or
push
cld
and
adc
xchg
daa
cmp
sub
in
cli
mov
sub
xlat
mov
rorl
sub
cmovp
js
and
out
jns
rcll
nop
fcoml
mov
ss
sub
stos
xchg
dec
sub
loopne
fsubrs
out
movsb
or
loopne
xor
stos
loop
scas
sub
pop
mov
out
out
xor
mov
in
xlat
adc
pop
addr16
sub
mov
sbb
sub
adc
sbbl
in
jmp
lds
aad
push
dec
sub
push
sub
fmul
clc
push
sub
dec
ja
aas
sub
jp
or
les
in
inc
ret
sti
sub
ja
xchg
sub
cli
adc
loope
scas
push
cmp
push
gs
push
cmpsl
inc
sub
pop
push
pop
jecxz
sbb
jle
jne
or
dec
in
addl
mov
aad
sbb
sbb
mov
jmp
out
gs
dec
add
push
test
jmp
jmp
add
frstor
xlat
icebp
lea
adc
or
ja
mov
inc
aad
push
xchg
lcall
jo
cmp
dec
out
outsb
arpl
xor
sbb
lods
jmp
fildl
inc
sub
jno
xlat
in
enter
mov
sbb
or
aad
pop
push
imul
jno
adc
jne
xor
int
pop
bound
sbb
adc
enter
lods
outsl
sub
fstp
push
mov
notb
lds
and
adc
pop
js
fdivs
push
insb
sub
movsl
popf
inc
dec
int3
add
xor
sbb
or
divl
dec
adc
out
sbb
xlat
jns
pop
sub
int3
xlat
int
sub
loopne
repz
jl
outsb
add
insl
mov
clc
test
sub
mov
inc
and
mov
addr16
pop
xchg
fldenv
xchg
loope
sbb
mov
xchg
jge
push
pop
jmp
in
xchg
lahf
dec
out
pop
arpl
sahf
inc
unpckhps
ljmp
dec
cmp
fldt
scas
adc
mov
test
inc
pop
sbb
sub
into
mov
lods
and
cld
stos
jge
adc
xor
iret
in
mov
jecxz
sbb
or
das
sbb
push
repz
and
incl
sub
scas
push
add
push
sti
dec
push
xor
and
sub
loop
and
sub
pop
xchg
fisubrs
inc
mov
mov
xlat
sti
subb
push
or
in
pop
test
cmp
lods
gs
in
mov
imull
arpl
pop
jge
push
and
ret
sub
rorb
jnp
sub
int
insb
or
sbb
sub
test
mov
loop
inc
pop
rcl
test
mov
daa
add
push
fsin
cld
mov
cmc
and
ds
test
rclb
addl
pop
jecxz
mov
sub
xor
push
push
pop
es
sub
cmp
dec
mov
xor
xlat
and
sub
push
and
or
arpl
pusha
cli
sub
jbe
and
dec
sub
pushw
int3
adcl
xchg
mov
xor
inc
push
call
sub
loop
pop
ficompl
push
xor
dec
sub
js
std
imul
inc
sub
in
movb
vcvtss2si
mov
or
mov
dec
sub
dec
test
push
cs
hlt
lahf
pop
xor
fldt
xor
notl
and
mov
in
push
cld
add
pop
pushf
adc
xor
xor
sbbb
mov
aam
or
daa
sub
cmp
jbe
sbb
jecxz
xor
test
cmp
sub
das
mov
adc
stc
scas
jge
dec
lcall
cltd
mov
test
pop
jle
cmp
or
sti
stos
xchg
sub
mov
xchg
pop
sub
inc
lret
sub
xchg
clc
dec
push
sub
push
addr16
fisttpll
push
sub
leave
sub
lea
fs
pop
int3
mov
ret
jl
mov
mov
dec
add
bound
stos
lock
dec
add
es
pop
pop
scas
xchg
sub
mov
ret
adc
xchg
shl
sub
or
or
push
cmp
outsb
mov
xchg
cmpsl
addr16
loopne
inc
cs
aam
push
clc
loop,pn
out
icebp
pop
xor
and
mov
push
inc
add
sbb
jbe
mov
xor
pop
ror
popa
and
push
adc
daa
stos
icebp
in
out
out
pop
jno
data16
sub
sub
xor
out
test
stos
cltd
cwtl
aad
fldt
or
ror
ds
stc
inc
sub
test
dec
push
sub
push
mov
push
cltd
mov
adc
sahf
int
sub
push
jb
pop
sub
inc
fcmovne
and
xor
adc
push
mov
lret
jmp
subl
push
jg
add
and
fisubrs
pusha
sub
dec
test
xchg
sub
js
mov
or
call
mov
cmpsl
imul
dec
lret
pop
pop
out
fcomip
push
divb
push
pop
sub
lods
aad
xchg
out
jg
cmp
jbe
push
mov
mov
adc
inc
insl
cmpxchg
mov
inc
pop
cmc
int
lock
les
jecxz
mov
add
adc
in
push
rclb
iret
test
sbb
enter
pusha
roll
or
mov
lret
outsl
fldcw
xchg
sti
jecxz
xor
shrl
sahf
cmpsl
adc
ljmp
or
jp
inc
cmp
imul
and
mov
test
andl
sbb
scas
test
cld
sbb
jno
inc
arpl
mul
ret
sbb
cmpsb
sub
xchg
jae
sub
mov
and
stos
sub
xor
push
add
mov
sbb
mov
jb
data16
sbb
xchg
shrb
stos
mov
xchg
sub
mov
lahf
ret
fs
push
sbb
mov
mov
test
push
pop
inc
stos
push
sub
ret
jno
mov
cmp
sub
insb
iret
or
sub
sbb
xor
rcl
repnz
sub
mov
push
push
xchg
sub
ret
sub
fsincos
int3
rcll
sub
sub
add
xchg
dec
sub
stos
pop
les
add
mov
push
dec
test
loop
sbb
sub
push
imul
sub
push
pop
jmp
sub
int3
pop
push
mov
or
mov
jle
in
imul
rcr
add
lea
sub
sub
iret
jbe
enter
aaa
roll
sub
lds
dec
pop
jno
and
pop
sub
mov
pop
sub
lds
fisubrs
mov
insb
sahf
xchg
sub
push
cmp
std
sub
mov
fidivrl
cmp
popa
jb
sub
stos
dec
movsl
add
add
or
mov
adc
cmp
sub
pop
lret
sub
aam
into
sub
jmp
or
sbb
or
lock
and
imul
cmp
ljmp
jmp
mov
cmpsb
adcb
or
cmp
clc
and
pop
push
mov
out
stos
push
sbb
xorb
or
test
into
lret
repz
shrb
rcr
std
adc
jnp
addr16
faddl
sub
xor
sub
and
cmp
sub
pop
and
aad
mov
fdivrs
sub
mov
dec
sub
or
sub
jbe
sub
ljmp
stos
sbb
sub
or
add
pop
sub
cmpsl
xor
xchg
xchg
subl
sub
shll
pop
and
int
pop
mov
sub
push
mov
mov
insb
xor
and
movsb
gs
sub
mov
xor
daa
add
fstl
inc
icebp
push
andl
cmp
ja
adc
mov
sub
orl
or
idivb
sub
std
push
cld
sub
mov
xchg
mov
insb
lds
call
movsb
push
mov
inc
in
mov
insl
mov
bound
or
sbb
jns
jne
mov
pop
pop
mov
lret
cli
or
mov
fidivs
jno
idivb
stc
je
and
pop
mov
in
mov
call
daa
add
popf
mov
pop
sub
pop
loop
cmp
xor
call
addb
sbb
shrb
sub
mov
repz
push
jnp
cmc
adc
iret
sub
loope
test
or
sbb
xchg
test
and
shlb
shrl
jle
out
scas
jmp
sub
and
jge
push
iret
xchg
leave
imul
fwait
ret
sub
scas
or
out
sbb
sub
push
mov
mov
sbb
ljmp
je
pop
cmc
mov
cmpsb
sub
or
notb
inc
pop
idivl
sub
das
or
imul
pop
daa
popa
mov
adc
int3
test
sub
fmull
and
dec
xchg
inc
lret
pop
cmp
inc
test
lret
sub
mov
xchg
xor
and
in
nop
cmpl
sub
pushf
clc
mov
test
rolb
je
mov
int
lahf
sbb
pop
sysexit
adc
repz
and
inc
hlt
sub
xor
xchg
mov
mov
ret
loopne
insl
and
fbstp
fldcw
sub
push
cld
jae
stos
cmpsl
xchg
jbe
push
sub
les
mov
push
mov
sub
add
pop
fnstsw
mov
and
sub
inc
push
subb
mov
jne
in
mov
movsb
out
sti
sub
adc
sub
push
inc
cmc
pop
and
aam
outsb
cs
lea
inc
fbstp
test
dec
mov
mov
adc
jge
repnz
dec
scas
daa
mov
nop
pop
add
mov
jge
repnz
sub
cltd
mov
mov
add
dec
pop
jo
inc
sbb
aaa
inc
xchg
dec
inc
pop
outsb
sub
mov
pop
pop
loop
jb
mov
out
mov
lret
cmp
push
sub
es
jecxz
pop
inc
cs
mov
std
pop
sub
outsl
mov
cmc
sub
fnstcw
aam
loope
daa
push
xchg
sub
mov
sbb
sub
lcall
stos
lods
pop
jns
mov
push
nop
divb
jmp
ret
sub
stos
sub
arpl
aam
sub
mov
push
push
sub
jge
lds
pop
les
popa
jecxz
rcrl
mov
clc
mov
cmp
fisubl
sub
push
test
cmpsb
cld
jb
and
fdivrl
mov
enter
icebp
int3
cli
sub
add
lock
je
stos
es
pop
fistpll
mov
lret
gs
in
xchg
in
sub
iret
or
push
sub
repz
push
sbb
mov
andl
add
test
mov
adc
adc
xlat
adc
cmp
stc
sub
sbb
sub
loope
mov
gs
push
pop
mov
lds
sub
cltd
pop
ret
mov
and
imul
sub
pop
sbb
out
out
sarb
sub
mov
mov
pop
inc
out
mov
ds
out
push
in
in
test
sub
aad
push
cltd
clc
ss
popa
push
sub
orl
loopne
insl
push
hlt
or
fistps
xor
imul
cvtps2pi
mov
in
das
and
xor
add
sub
sub
dec
sbb
insb
pop
js
lds
call
ror
cmp
mov
lea
pop
or
push
ss
cwtl
sub
xor
jg
jmp
push
in
and
mov
fsubl
inc
sub
outsl
jp
outsb
cltd
xor
inc
lea
sub
ss
cli
xchg
sub
sbb
pop
cmp
rolb
sti
and
mov
lds
mov
and
std
mov
out
cmp
cld
hlt
and
jge
or
ficoms
in
push
sub
out
scas
dec
sub
push
jg
out
add
cmp
insl
adc
nop
scas
call
sub
ret
adc
inc
sub
cmpsb
clc
vcvtsd2si
dec
psubd
jne
sub
inc
insb
iret
leave
sub
das
mov
lds
add
pop
mov
sub
hlt
sub
aam
dec
rorb
fcoml
jmp
jge
loop
cmp
jle
sub
cmp
gs
sbb
jo
mov
inc
or
in
movsb
jecxz
out
mov
fsubs
jb
and
pop
mov
and
in
ret
sbb
lds
std
inc
arpl
insb
jg
imul
les
xchg
mov
dec
cmpb
sbb
inc
es
sub
insb
xchg
fldcw
mov
lods
xor
loope
fisttpl
sub
test
movsl
jecxz
cmpsl
or
sahf
sub
in
mov
sub
xchg
push
sub
sbb
lds
sub
cmovnp
subb
shlb
and
arpl
shrl
add
cli
jmp
outsb
andb
sub
inc
cmp
cmp
xor
lea
hlt
pop
data16
jecxz
mov
iret
pusha
int3
sub
push
adc
push
pop
adc
xor
and
jge
dec
hlt
fisttpll
cmp
sub
cmp
xchg
pushf
cmpsl
push
lds
nop
stos
or
add
sub
jle
jnp
int3
stos
test
lods
imul
dec
xor
ja
mov
cwtl
sbb
jne
arpl
or
mov
inc
mov
lds
xor
mov
pop
jp
mov
pop
fwait
sub
jae
jne
cmp
dec
and
sub
inc
mov
es
int
and
jmp
ror
inc
lcall
mov
or
lds
jl
jle
movsb
sub
stos
push
xor
sub
pop
sub
leave
jne
xlat
xor
sub
add
push
and
imul
stc
and
sub
and
addl
mov
or
lahf
sub
ds
add
sub
cmp
lock
sub
sbb
es
cmp
push
or
or
mov
mov
mov
sub
dec
mul
mov
push
pop
imul
into
adc
orl
mov
nop
pop
shrl
std
mov
sub
push
aas
and
sub
popf
xor
pushf
les
cmp
clc
xor
and
add
adc
int
cmp
sub
pop
lods
sub
sbb
xchg
jns
cmpl
mov
shrb
jnp
mov
lock
xchg
addb
sub
or
xchg
push
mov
jno
cs
mov
mov
repnz
in
mov
push
insl
jl
push
mov
sbb
fcompl
jo
inc
mov
pop
mov
in
add
icebp
add
mov
mov
sub
bound
mov
enter
cmp
push
rcrl
ja
sub
push
mov
jecxz
xor
clc
js
into
adc
loop
mov
xor
pop
jbe
dec
fwait
int
mov
xchg
sub
pop
shrd
arpl
mov
add
decl
add
daa
mov
sub
mov
jle
pop
clc
enter
inc
jne
scas
sub
repz
sub
std
xchg
push
in
and
stos
incb
dec
scas
jmp
test
in
in
sub
cmp
addb
sub
push
xor
mov
arpl
into
rorl
cmpsb
mov
and
add
arpl
ljmp
aaa
xchg
pusha
leave
js
mov
dec
jl
shrl
faddl
add
pop
pusha
hlt
aam
sub
or
and
ret
ljmp
out
xor
add
xchg
data16
mov
sub
in
dec
pop
sub
push
mov
fisubs
sbb
mov
je
mov
sub
lahf
mov
stc
jnp
pop
adc
insb
mov
mov
sbb
xor
push
pushf
push
and
cmpb
dec
push
sub
fdivl
add
imull
aas
cmc
sti
xchg
adc
lods
testb
dec
xchg
bound
inc
lcall
jns
pop
mov
stc
ds
xchg
icebp
outsb
xchg
out
les
mov
mov
sbbb
std
jne
add
sub
cmpsl
cli
imul
push
pop
imul
bound
push
addr16
xor
lea
cmp
cld
aad
mov
and
imul
out
les
test
sub
jns
jge
dec
sbb
out
sahf
sub
int3
leave
mov
cmp
cmpsb
lret
test
stc
sub
insl
mov
add
sub
fucomi
dec
dec
sub
out
sti
mov
pop
push
sub
popf
add
leave
or
lcall
insb
nop
sub
push
or
lods
stos
adc
out
xor
sub
roll
es
xchg
mov
and
ficompl
xlat
push
sub
in
addl
and
push
leave
hlt
nop
loop
fucompp
and
sbb
sub
stos
cmp
xor
loopne
and
xlat
fistl
sub
subb
pop
xor
jnp
mov
pop
mov
loopne
xchg
aam
adc
add
push
ds
xor
sbb
sub
stc
pop
andl
mov
in
ljmp
aad
and
sub
add
mov
xchg
popf
in
pop
dec
es
and
int
push
and
mov
sar
in
scas
xchg
imul
pop
or
gs
cmp
or
int3
sbbl
daa
cmp
xor
outsb
adc
lret
sub
sub
mov
out
sub
xor
pop
mov
mov
cmp
iret
ss
xor
out
imul
add
fucomp
mov
icebp
mov
dec
xchg
loope
pop
or
add
insb
xchg
pop
sub
mov
shrb
pop
push
mov
popa
cli
cs
fildll
xor
adc
sub
and
cld
clc
cmpsl
and
add
mov
add
inc
mov
sub
sbb
out
xor
pop
mov
test
dec
sub
cs
addr16
sub
fimuls
cmp
fcomi
and
inc
and
gs
call
roll
push
jae
mov
hlt
lcall
xchg
mov
cli
sub
lods
jno
sub
pop
and
divb
mov
outsb
mov
repz
nop
sub
add
inc
cmp
sub
ss
aad
mov
and
lods
movsl
shlb
jns,pt
or
inc
sub
shrl
ret
out
sub
cmp
or
xor
jge
test
mov
in
fldl
and
pop
and
sahf
sub
xor
in
ljmp
push
fucomp
push
scas
pop
sub
push
pusha
outsl
add
arpl
cmpsb
outsb
cmc
dec
sub
adc
and
ljmp
sbb
jmp
pop
push
xchg
sub
stc
sahf
mov
sub
call
ficoml
cmp
hlt
pop
sub
and
and
mov
lret
adc
xchg
stos
lret
enter
or
add
and
push
mov
push
mov
inc
in
pop
loop
sub
pop
ret
xchg
mov
sub
sub
adc
xor
jnp
icebp
mov
das
subl
popa
std
imull
sbb
jo
sub
mov
mov
cmc
dec
xor
inc
xor
mov
xchg
mov
pop
jecxz
frstor
je
jnp
addr16
sub
pop
pusha
loop
sub
push
test
jge
aad
add
sub
push
jnp
mov
bswap
mov
sub
pusha
adc
xor
mov
and
imul
das
out
xlat
data16
sub
xor
iret
adc
mov
cmp
repnz
inc
dec
movsl
int3
jnp
sub
outsb
jl
mov
scas
xchg
in
dec
cmp
cmp
cltd
les
stos
push
add
jns
sub
aaa
push
test
and
mov
mov
sahf
fcompl
cmp
and
int3
lcall
pop
sub
inc
cmpl
std
fiaddl
test
xor
push
daa
sub
xlat
and
jmp
mov
inc
or
pop
sbb
adc
mov
push
mulb
int
aas
jge
sub
stos
pop
push
and
or
sub
sti
cmp
lret
je
stos
cmc
adc
sub
pop
sbb
sub
lret
add
mov
jbe
push
sub
addr16
sbb
pop
inc
jp
jb
inc
cmp
pop
xorl
fs
test
jmp
aad
jl
sub
and
add
inc
pop
fcomps
jb
lock
mov
or
data16
jecxz
imul
jle
cmpsl
and
mov
sub
cmp
sub
sub
cmpsl
push
aam
sub
pop
jl
inc
dec
mov
inc
inc
ret
arpl
test
adc
hlt
push
aas
dec
sbb
adc
mov
sub
push
adc
sub
adc
hlt
fwait
cmp
xor
es
cmp
nop
rcrb
xlat
jns
ja
sub
cmpsl
test
in
xchg
or
mov
push
stc
sbb
out
stos
test
jg
loope
cwtl
push
hlt
test
sub
jmp
aam
insb
jno
add
enter
hlt
mov
in
aad
push
sub
insl
sub
jno
rorl
dec
sub
insb
cmpsb
mov
aad
bound
xor
adc
add
imull
mulb
or
int3
and
dec
add
loopew
sub
roll
mov
testb
sub
push
icebp
xor
cmp
lods
push
aad
jp
sti
sub
jbe
jne
xor
out
pop
mov
repz
subps
mov
inc
pop
jecxz
pop
add
decl
mov
pop
aam
mov
cmp
inc
rcl
cmp
daa
shll
int
les
xchg
sub
jge
xor
adc
fwait
ss
sub
sahf
shll
sbb
in
and
jle
push
ret
add
test
and
outsl
mov
test
sub
stos
shrl
mov
sbb
sub
incl
cmp
subb
pop
cmp
in
pusha
cs
pop
mov
mov
cmpsl
in
sub
loope
sub
and
fstl
shll
and
popf
jle
mov
pop
xchg
ljmp
mov
xchg
push
imulb
divb
push
in
out
push
aam
sbb
push
mov
test
loopne
mov
sub
add
cmp
loopne
stc
mov
pop
push
adc
adc
test
cmp
mov
xor
cli
out
mov
mov
push
mov
sub
mov
xor
and
dec
in
icebp
mov
mov
test
sub
dec
xchg
push
and
fisubrl
pushf
lods
sub
enter
pop
inc
xchg
loop
and
cmp
push
in
sbb
mov
and
test
divl
int3
sub
add
movsb
test
cmp
sub
inc
nop
les
mov
or
lea
sub
xchg
mov
sbb
idivb
push
xor
popa
fisubl
icebp
fdiv
push
and
push
cli
and
adc
movsb
sub
in
and
cmp
and
aad
shll
add
fwait
sub
aaa
out
mov
mov
mov
pop
daa
testl
xor
push
sub
or
sbb
inc
lret
cli
sbb
pop
ja
mov
or
inc
mov
aam
mov
daa
cmc
dec
push
decl
dec
xlat
jg
lret
fisttpll
iret
and
jns
sub
cltd
test
pushf
in
jbe
ret
lcall
mov
loopne
jecxz
sarl
xor
sub
sub
sbb
dec
mov
pop
imul
lret
push
push
mov
fnstcw
adc
add
repnz
pop
scas
sub
fisubrs
adc
pop
push
adcl
aas
mov
adc
aad
nop
pushf
sub
add
fcom
movsb
jmp
lock
orb
adc
add
repnz
xchg
ljmp
sbb
inc
mov
inc
sbb
loope
sub
lds
shlb
adc
mov
ret
imull
jo
dec
jl
push
call
mov
std
inc
mov
mov
push
aas
sub
dec
icebp
xor
jmp
mov
arpl
loope
scas
out
push
cmp
pop
dec
fst
stos
sub
sub
inc
pusha
add
sub
mov
xchg
sub
cmp
mov
sub
mov
adcl
sahf
jb
out
push
adc
icebp
sub
inc
in
jge
push
jns
ret
jmp
enter
jg
sub
pop
outsl
pop
fucomp
jge
cltd
insl
cmc
xor
sub
push
leave
xor
jb
sub
bound
pop
mov
lret
xorl
fiaddl
gs
rcr
mov
insb
pop
dec
nop
sub
jmp
out
shrb
jmp
pop
shl
ja
cmp
sub
lret
lods
sub
rorb
ret
adc
gs
fsub
enter
sbb
mov
repz
inc
add
subb
push
add
mov
loope
sbb
into
mov
shlb
repnz
insb
lahf
cmpsl
int3
cmp
call
out
fcoml
addb
andb
push
lret
and
sub
std
push
sahf
cmp
xchg
gs
and
notl
mov
mov
lds
test
outsb
and
and
push
pop
into
sub
mov
lods
cld
in
mov
adc
pop
je
add
adc
orb
scas
sub
add
rol
iret
fldt
xor
cmp
xchg
inc
lods
jmp
mov
jle
push
sub
imul
mov
mov
lds
fwait
in
cmp
push
push
pop
xor
sub
xchg
pop
rclb
xor
sub
push
stc
sbb
icebp
adc
pop
push
sub
stos
sbb
xor
pop
sub
stc
mov
bound
in
push
inc
jne
add
dec
out
sub
cmp
lods
imul
pop
xchg
sub
cmp
test
adc
scas
daa
cmp
push
int3
fsts
pop
ss
push
push
add
jmp
jno
sub
divb
rcl
add
outsl
sub
movsb
xchg
dec
subl
cmp
imul
pop
hlt
cmp
xchg
sub
jmp
dec
cld
sbb
nop
dec
mov
sub
xchg
and
dec
call
lock
mov
mov
add
sub
mov
inc
jbe
mov
fwait
sub
sub
fmull
jge
cs
dec
pop
movsb
pop
sub
xchg
mov
loopew
lock
dec
pop
call
inc
ss
xor
fs
int3
mov
ret
mov
mov
sub
jno
pushf
mov
sub
xlat
ljmp
sbb
shll
vmwrite
enter
or
mov
adc
lcall
int3
test
xchg
mov
hlt
cmp
shl
stos
pop
sub
cmpb
je
imul
push
push
mov
sub
aam
adc
sub
mov
repz
cmp
cwtl
int3
icebp
fwait
sub
push
cs
pop
mov
out
sub
into
sub
dec
pop
ljmp
xor
mov
sub
add
pop
sub
mov
lods
rclb
sub
adc
in
lods
cltd
loope
ljmp
pop
push
and
sub
sbb
stos
movsl
xlat
sub
loopne
pop
sub
and
lods
adc
dec
pushf
push
aas
shll
ja
sub
mov
and
add
cmp
in
movsb
mov
int
test
and
and
imul
out
sub
pop
dec
out
sub
xchg
sbb
xchg
rolb
jne
cwtl
mov
fbstp
and
lds
xchg
divb
aam
push
mov
insl
cltd
sub
push
add
xchg
mov
cs
xor
fmulp
scas
push
or
or
insl
popf
adc
mov
sub
push
orl
mov
lret
mov
roll
inc
sub
inc
adc
push
sub
stos
aam
hlt
js
out
adc
call
inc
push
repz
mov
adcb
stos
out
or
xor
sub
lods
int
int
jg
pop
cmc
pop
bound
or
fs
testl
pop
cmovl
adc
sub
pop
mov
mov
xor
and
jmp
push
and
jle
sub
sub
inc
add
inc
pop
mov
loope
jge
out
inc
xchg
popf
cmp
in
dec
iret
sub
loopne
add
sub
mov
adc
jb
fnstsw
push
mov
imulb
and
outsl
das
mov
ror
test
aaa
cmpsb
add
jbe
bound
mov
xchg
rclb
stos
sub
mov
outsl
das
into
fisubrs
out
out
aaa
jne
mov
subl
scas
dec
sub
nop
fcompl
fisubrs
jno
jecxz
sub
add
push
sahf
in
out
pop
pop
fstpt
xchg
xchg
sub
mov
fsubr
aad
add
xor
adc
xor
sub
nop
je
sbb
sbb
stc
loope
mov
insb
enter
mov
inc
push
shlb
sub
jbe
lds
cmpsl
cmp
imul
xchg
add
mov
shl
loope
int3
dec
inc
fucomi
arpl
fsubrl
sbb
xchg
mov
xchg
pushf
cltd
and
mov
outsl
push
mov
or
add
jnp
or
sub
xorb
sbb
iret
out
int3
sub
mul
cli
xchg
sub
aad
imul
xchg
xchg
xor
sub
xor
and
sbb
iret
arpl
xchg
push
movsb
rcll
sub
repnz
mov
stos
xor
mov
shrl
push
scas
inc
sub
lds
mov
sub
fwait
mov
cmp
dec
push
sub
jo
pop
icebp
sub
push
dec
leave
xor
sbb
push
mov
or
sub
inc
jae
mov
popf
xor
lahf
pop
aad
bnd
idivl
lods
sub
fnstsw
std
pop
add
xlat
icebp
sub
int
imul
jns
out
xor
jmp
ret
mov
pop
jecxz
stos
fsubrs
sbb
loopne
sub
push
into
cltd
cmpsl
sub
orb
ret
out
or
mov
or
xor
packuswb
in
sbb
lds
orl
adc
mov
hlt
out
aad
sub
popf
add
jne
jnp
xchg
shrb
push
mov
xchg
dec
popf
inc
enter
and
jp
sbb
sub
test
sti
sub
mov
wbinvd
xor
es
pushl
xchg
push
cs
test
sub
sub
leave
pop
scas
shlb
pop
push
pop
sub
mov
jnp
xchg
je
jge
loop
cmp
or
sti
cmp
repz
out
cmp
hlt
orl
mov
sub
leave
mov
pop
fisttpll
and
xor
pop
xor
sahf
ja
call
adc
sub
dec
pop
xchg
mov
push
mov
xor
addl
adcb
nop
test
fiaddl
push
push
jp
pop
mov
dec
mov
jp
cmpsb
push
divb
sub
mov
loop
sub
lea
gs
fldl
movsl
out
adc
lret
sub
aad
and
sub
sbb
or
insl
push
insb
and
loopne
js
in
push
testl
sbb
mov
or
sub
fbstp
insb
add
sub
loopne
xchg
aad
pop
adc
lock
ljmp
sahf
sub
mov
in
sub
pop
xor
sub
xor
sub
in
cmpsl
xor
shrb
xlat
xchg
dec
cmp
dec
sub
test
insb
mov
jge
mov
push
adc
arpl
cwtl
sub
outsb
rcrb
fstpl
addr16
push
dec
jnp
in
hlt
mov
mov
fnsave
int3
scas
repz
loope
sub
and
fildll
pop
arpl
sub
fwait
cld
hlt
fxch
sub
lds
arpl
add
lods
jl
cltd
add
sbb
inc
cmp
mov
popf
lds
lds
shl
popa
test
sub
popf
mov
fsubrl
js
jecxz
sub
xor
lods
jle
cmc
cmp
fsubrp
test
mov
loope
in
mov
cmpsb
mov
sbb
in
cmp
xor
fsubl
sub
xor
add
je
jnp
ret
sub
push
lds
add
jbe
xor
cmpl
pop
xor
xor
sbb
mov
scas
sub
sub
sub
cmp
loopne
sub
andb
mov
out
cmp
loop
movsb
pop
cs
or
adc
sub
cs
pushf
sub
stc
pop
dec
push
sub
push
inc
inc
cmp
sub
ljmp
in
rclb
fbstp
sub
and
out
movsb
sub
jae
pop
adc
aas
push
lret
imul
mov
sub
lahf
push
mov
sub
inc
add
add
pop
mov
sub
sub
mull
sub
push
xor
bound
adc
mov
sub
pop
lds
sub
xor
outsl
xchg
aas
mov
sub
lahf
cmpsl
aaa
mov
adc
push
dec
imul
sbb
pop
daa
push
pop
cmp
jae
sub
inc
movsb
push
sub
xor
fsubrs
pop
mov
sub
aam
mov
mov
das
sub
jmp
aas
add
and
push
fcoms
jmp
bound
aam
stos
inc
in
aad
sbb
sub
ret
sub
xchg
into
stos
adc
sbb
sub
insb
ror
jne
sahf
shll
sub
mov
jae
inc
sbb
push
sub
xchg
popa
test
mov
mov
movsb
fisubl
jne
mov
adc
fsubs
or
lock
push
test
push
xor
adc
push
mov
out
fdivr
sbb
pop
sub
or
adc
cmp
rorb
pop
sub
orl
jo
stc
mov
or
mov
sub
push
pop
push
sub
cmpsl
mov
loope
mov
jl
sub
mov
rcrb
fdivr
add
fisttpll
imulb
lret
les
sub
clc
ljmp
xchg
or
sub
mov
imul
add
mov
and
je
add
fsubs
rolb
push
imul
jno
mov
std
lret
adc
push
push
cmp
outsl
push
inc
sub
imul
jge
dec
bound
adcl
and
fsub
in
add
dec
ljmp
aas
scas
jp
mov
push
sub
pop
cmp
cmp
call
sub
je
adc
mov
fistpll
sbb
hlt
xor
cwtl
out
push
lods
mov
lret
sub
pop
push
mov
imul
or
insl
fs
repnz
sub
add
out
mov
lods
test
mov
rcr
push
ret
gs
sub
imul
inc
sub
and
jge
arpl
push
xchg
mov
shr
into
cmp
push
sahf
jo
sub
adc
repz
ret
sbb
sub
push
scas
test
int
pop
push
test
les
dec
mov
mov
pop
scas
pop
adc
pop
sub
std
inc
out
sub
cwtl
das
leave
lods
sub
cld
pusha
push
sbb
jmp
sub
rcl
add
lahf
add
lcall
fisttps
and
stc
sarl
xchg
push
lock
or
sarl
xchg
repnz
and
or
and
sub
inc
lods
adc
sub
incl
stos
adc
mov
lods
lahf
fcomps
add
shrb
ud0
sub
sbb
xor
daa
into
mov
dec
lea
adc
sub
ss
add
jmp
sahf
sub
pand
or
xor
jecxz
les
pop
pushf
int
sbb
push
sti
push
sub
cmp
ret
cmp
dec
sub
sub
or
sub
hlt
movsb
cmpsb
adc
cmpsl
adc
shrb
imul
test
and
scas
sub
pop
int
fsubrs
mov
sub
fiaddl
or
cmc
dec
mov
insl
push
in
jl
jns
mov
sub
in
sub
pextrw
or
cltd
sub
imull
add
ljmp
sti
sub
test
mov
es
jb
cmp
leave
fildll
sub
testl
dec
pushw
jne
aad
jmp
fsubs
xor
sub
inc
adc
int
cmpb
pop
push
daa
adc
lds
into
mov
ss
test
in
add
nop
mov
cmp
jmp
test
sub
inc
cli
or
cmp
loopne
out
dec
cmp
imul
cmp
or
mov
pop
lds
xor
pushf
jmp
loopne
clc
jle
xchg
adc
outsb
movsl
adc
inc
lods
or
sub
and
jmp
das
mov
xor
lea
and
fadd
scas
scas
sub
dec
sub
sub
xchg
mov
dec
out
mov
adc
mov
pop
insl
mov
in
pusha
out
sub
ss
push
popa
mov
sbb
stos
cmp
sub
stos
leave
pop
in
arpl
push
fwait
dec
ret
jge
push
aas
mov
or
scas
or
mov
cwtl
gs
xchg
fcmovnbe
test
fidivl
cmp
js
sbb
jle
pop
repz
pop
lods
jmp
loopne
call
cmp
sub
jns
out
and
out
stc
cwtl
xorl
sub
cmp
out
sub
jp
push
movsl
sub
sbb
xchg
fldl
out
push
fndisi(8087
cltd
jno
fucomip
enter
mov
xchg
aad
cli
push
and
jne
in
sub
xor
sub
imul
mov
movsl
sub
jne
add
fildll
test
imul
dec
or
and
call
xchg
sub
jp
mov
cmp
daa
and
and
lret
sbb
push
sahf
sub
lods
inc
cld
gs
mov
loope
cs
imul
mov
add
cmp
cvtps2pi
push
outsb
pop
adc
inc
inc
adc
push
mov
and
mov
jg
push
std
or
fs
xlat
or
mov
rcrl
sarl
mov
xchg
scas
sub
fnstcw
repnz
sub
and
pop
mov
rclb
test
ss
push
fs
scas
and
mov
pop
xor
aad
arpl
inc
in
sub
test
or
and
and
fldl
cltd
and
leave
testl
xchg
iret
pusha
mov
into
xor
sub
lock
sub
js
insl
iret
xor
xchg
and
and
inc
cltd
out
sub
pop
inc
mov
rol
and
rolb
daa
jne
loop
into
push
aas
popa
sbb
fwait
test
xchg
add
in
aam
sub
mov
inc
mov
jnp
add
adc
scas
jmp
ficoms
int3
or
mov
lcall
arpl
sub
rep
dec
pop
sub
xchg
mov
sub
sbb
pop
sub
scas
repnz
iret
sbb
pop
mov
loopne
and
loopw
mov
aad
xor
push
and
clc
addb
sub
fcmove
xchg
sub
add
lods
xor
test
or
sahf
test
push
sti
pop
nop
xor
hlt
frstor
sub
into
push
iret
and
cs
pop
xor
xchg
dec
pop
repnz
out
mov
adc
xchg
xchg
mov
sub
cli
jmp
lds
sub
mov
sub
sub
fwait
into
sub
movsb
sbb
dec
test
addr16
sbb
jb
or
push
and
not
sahf
lret
or
pop
cld
push
sub
inc
rorb
fisubrl
mov
sub
movsb
movsl
mov
aam
pop
adc
stos
into
call
out
jge
loop
mov
inc
sub
jns
pusha
dec
nop
mov
sti
adc
xchg
mov
lcall
add
push
jmp
jbe
cmp
cmp
cs
stos
popf
les
pop
in
xchg
push
icebp
imul
jns
mov
shrl
addr16
pop
jg
xchg
ds
cmpsl
dec
adc
fs
push
or
sub
pop
orb
inc
fdivrl
add
sbb
pusha
lock
ret
sub
rorb
setno
lret
xchg
xor
mov
popa
jle
or
sub
loope
lds
cmpsb
push
xlat
cmpsl
mov
cld
lds
into
sub
in
cltd
push
sub
outsb
dec
xor
movsb
cmp
jle
loop
in
lret
sbb
sub
cmpsb
jle
sub
repnz
rorl
nop
add
inc
dec
loopne
icebp
les
enter
dec
sub
xchg
cmp
mov
test
mov
cltd
daa
or
sub
or
sub
test
stos
push
and
rorb
sub
roll
ja
in
push
sub
cmp
inc
pop
push
or
xor
sub
xchg
mov
inc
out
sbb
mov
adc
adc
dec
and
enter
adc
xor
sar
rcr
push
test
lahf
sub
mov
mov
mov
mov
jge
jg
and
adc
fwait
sub
mov
repz
insl
imul
pop
nop
pop
add
lods
pop
aas
add
add
sbb
into
add
sub
push
cltd
adc
cli
jmp
test
jno
fdivrl
sub
sub
mov
hlt
mov
jne
jbe
sahf
movsb
ret
lods
je
or
or
daa
std
pusha
sub
scas
jb
lods
out
sti
scas
adc
outsl
pop
je
sub
cmpsb
pop
and
cld
xchg
subb
sub
xchg
sub
inc
psrlw
nop
das
clc
loopne
adc
pusha
cmpsl
std
divb
shl
ret
sub
add
push
fdivrl
aas
aaa
dec
or
dec
sub
sub
adcb
sub
dec
sbb
and
xor
test
cmp
dec
mov
shll
lcall
or
sub
stc
push
incl
sub
insb
push
dec
pop
add
xor
mov
nop
add
mov
mov
pop
sub
add
rcl
into
cmc
jg
pop
cmp
outsl
popa
sub
xor
les
dec
test
in
or
add
add
lods
ss
sub
cmp
rcll
shrb
int3
cmp
aaa
lods
movsb
aad
or
in
iret
push
inc
imul
and
mov
scas
push
dec
xor
lea
sub
and
iret
and
jnp
push
aas
adc
or
repnz
jmp
dec
out
jnp
les
push
mov
sub
lds
mov
sub
iret
pushf
fwait
mov
std
mov
jb
push
dec
or
and
push
sub
add
cmp
push
mov
movsl
ds
sahf
xor
pop
push
out
inc
push
sub
adc
sub
loop
mov
cmc
sub
sbb
mov
dec
xor
daa
shlb
adc
adc
cmpsb
test
popa
push
sub
and
jle
sub
nop
mov
sub
sbb
mov
inc
mov
or
sub
push
adc
subl
mov
jle
dec
xor
pop
cmc
mov
mov
out
mov
clc
mov
std
and
incb
scas
dec
sbb
and
mov
adc
adc
aad
sub
out
add
push
fisttpl
addr16
lock
loopne
add
mov
xchg
sub
xchg
leave
nop
sti
sub
xor
push
add
dec
mov
loope
and
hlt
cmp
sub
dec
mov
subl
xor
clc
insl
and
je
sub
adc
mov
idivb
sub
xchg
out
scas
xlat
mov
mov
adc
mov
int
mov
add
xlat
aad
dec
push
fisubrs
ja
popa
int3
add
adc
lret
push
shll
or
pushf
inc
out
test
outsb
ds
cmp
cli
popf
mov
lock
cmp
in
arpl
daa
test
mov
inc
test
mov
call
push
sbb
inc
stos
xor
xchg
lahf
or
jbe
sub
mov
lret
dec
dec
adc
push
cli
call
out
fimuls
imulb
enter
mov
fdivrl
stc
push
shll
pop
call
roll
pop
popf
mov
sub
rcr
and
mov
sub
jg
pop
push
sub
xchg
mov
xchg
out
mov
jno
cwtl
unpckhps
mov
stos
std
in
pop
pop
sub
aam
lahf
mov
xchg
mov
shr
sub
and
xchg
shr
xchg
fmull
fs
sub
and
mov
lcall
gs
mov
sbb
or
xor
adc
iret
jle
push
adc
mov
inc
fimull
outsl
ret
into
sub
sub
cld
sub
out
arpl
pop
dec
fstps
sub
pop
mov
cmp
jl
mov
cmp
cli
rcll
xchg
lcall
add
sub
inc
and
lret
nop
adc
sub
cmp
out
adc
push
lods
fstl
mov
jns
fistpll
sar
cmp
xchg
push
jne
add
test
imul
mov
sub
push
std
fstps
sub
inc
push
adc
insb
xor
and
nop
popf
mov
and
idivl
adc
inc
and
or
out
movsb
pop
and
testb
imul
or
jae
into
and
mov
xchg
sub
sub
mov
lret
cmp
mov
mov
xor
loop
dec
sub
xor
call
lods
ret
dec
addb
jne
in
loop
aas
jo
movsb
lcall
cltd
sub
mov
stos
xor
xor
sub
and
dec
sub
inc
iret
lret
sub
test
xchg
sub
repnz
lods
mov
jmp
sub
xor
in
mov
jns
jg
sub
mov
pop
fwait
jp
xchg
aaa
fiaddl
std
test
mov
jns
in
jb
pop
inc
adc
testl
fs
push
and
in
inc
jnp
out
pop
hlt
repz
xor
aas
mov
pop
test
sub
sub
sar
sarb
xlat
jae
daa
jmp
add
inc
sub
cmpsl
xor
xor
jmp
ret
push
lcall
cmp
gs
loopne
pop
sub
fcoml
push
int3
mov
pop
stos
mov
and
sub
mov
lcall
adc
fisubrs
inc
sub
push
sbb
dec
lods
imul
ss
dec
int3
mov
jno
ret
aad
xor
adc
in
cs
outsl
lock
or
push
es
sub
mov
cli
ljmp
in
xchg
and
cmc
mov
xor
out
inc
cmp
xor
push
sbb
arpl
ret
ds
daa
movl
push
paddw
dec
and
lret
xchg
test
pop
and
jae
add
ret
and
loopne
mov
lcall
jo
dec
sub
popf
adc
outsl
ljmp
pop
rorb
and
mov
sub
out
call
add
sub
xchg
notb
adc
scas
and
js
fisubl
sub
sarl
xor
inc
into
repnz
lds
andl
mov
ljmp
pop
sub
xchg
popl
fimuls
push
frstor
lock
aad
pushf
and
push
sub
xchg
daa
jo
imul
inc
fnstsw
popf
xchg
xchg
sub
or
repnz
daa
xor
ss
imul
cli
adc
sub
xor
or
fadd
sti
cvtps2pi
sub
cwtl
cli
inc
sub
shl
ss
xchg
aaa
xor
sub
cmp
or
sub
add
aas
cmp
call
pop
repz
adc
sub
lret
test
and
test
movsb
fsubp
sub
nop
jbe
scas
mov
je
in
dec
sub
sbb
inc
fisttpll
and
jne
jbe
jp
stos
imul
sub
sar
pop
mov
inc
arpl
test
push
das
jecxz
sub
sub
shrl
or
cltd
in
inc
sub
jae
add
lahf
jecxz
call
test
data16
sbb
and
scas
leave
out
xchg
lcall
mov
cmpb
dec
add
sub
dec
dec
pop
push
sub
xchg
stos
test
dec
sub
mov
sub
push
lahf
std
mov
jns
sbb
ret
jnp
aam
lret
into
push
xor
dec
pop
mov
and
mov
aaa
push
test
inc
ljmp
in
mov
icebp
ss
push
pop
ljmp
adcl
sub
insb
ja
int
add
and
gs
and
sub
pushf
sub
ds
lods
out
int
or
sub
sub
mov
int3
out
sub
cmpsb
adc
sbb
push
push
imul
popa
popf
or
rcll
lea
sub
adc
iret
fcmovb
dec
arpl
xchg
jp
push
out
dec
and
repnz
mov
lods
sarb
sub
mov
or
and
fcompl
xchg
imul
and
mov
repnz
cmp
push
test
lds
pop
inc
int
daa
jb
in
leave
add
lods
out
imul
mov
fcompl
push
cmpb
test
pop
xor
rcrb
pop
adc
inc
xchg
daa
mov
sub
pop
xlat
pop
or
hlt
mov
fstpl
dec
inc
jge
outsb
les
adc
mov
lds
pop
sub
lret
jecxz
push
loope
inc
sbb
pop
stos
loopne
test
inc
cli
push
sub
push
adc
subb
and
lret
fwait
mov
clc
pushf
push
mov
sub
inc
negb
int
shll
sbbl
fdivrs
mov
and
test
sub
hlt
sti
or
lock
hlt
aam
dec
push
int
es
sub
fdivrl
inc
sub
and
add
mov
xor
or
jecxz
mov
push
enter
test
cwtl
cmpsl
sub
arpl
sbb
add
mov
xor
sub
pop
sub
mov
add
lock
aas
pop
lahf
mov
iret
adc
push
mov
add
and
ret
and
adc
cmp
jae
sub
pop
inc
dec
sub
es
shlb
cmp
rcrb
into
ret
jl
lahf
or
data16
add
lds
inc
inc
pop
test
scas
sub
lock
cld
bound
xchg
enter
mov
xor
and
insl
mov
sub
nop
sbb
insb
pop
xor
and
out
mov
lret
inc
push
jl
and
add
lods
cmp
test
call
jns
popa
and
js
lods
int
sub
shll
xor
arpl
imul
jns
stc
ljmp
ret
lods
in
sub
outsb
pop
flds
and
sub
or
sub
mov
push
outsb
sub
adc
push
mov
sub
mov
ds
sbb
cmpsl
sbb
shl
xor
nop
cmp
fadds
pop
cwtl
rol
inc
add
and
jge
cmpsl
xchg
dec
push
xor
mov
sahf
cli
add
mov
dec
lods
daa
add
and
ss
movb
adc
sub
pop
cmpsb
push
pop
sahf
cld
mov
rolb
adc
lret
sbb
sub
adc
pusha
sub
arpl
fcom
sub
dec
mov
sub
hlt
jge
mov
clc
and
xchg
jle
repz
inc
out
outsl
cwtl
mov
mov
jae
push
orb
or
aam
sub
add
sbb
mov
popf
ret
add
mov
xor
adc
in
fs
sahf
pop
movsb
sbb
and
sub
and
xchg
mov
and
pop
pop
add
psubusw
cmp
dec
sub
ljmp
test
pop
push
les
sub
mov
cs
mov
and
leave
push
ret
lods
sub
sub
push
sub
xchg
jno
int3
sub
or
repnz
sub
xchg
ja
push
adc
jo
stc
lea
mov
mov
push
vcvtdq2pd
sub
jnp
ds
push
imul
push
push
scas
dec
adc
mov
popa
jl
aas
sub
in
cli
pop
or
xor
cld
mov
mov
add
lcall
push
jp
dec
pop
mov
rcr
mov
cmpsl
in
sub
push
leave
test
sub
add
outsl
inc
sub
mov
fiadds
adc
xor
insl
push
jns
sub
shr
dec
aam
in
daa
pop
add
ljmp
lods
inc
lret
jmp
aas
js
inc
and
and
sub
nop
sub
sbb
push
ret
lret
cmc
push
enter
stos
sub
loopne
imul
cmp
lds
and
subb
mov
out
mov
inc
push
std
loopne
pop
clc
sub
into
xor
jmp
push
sbb
mov
fs
jnp
daa
adc
mov
in
dec
leave
aad
sub
xchg
dec
pop
lock
cli
push
cwtl
es
sbb
push
xorb
lods
insb
sti
sub
dec
scas
mov
or
adc
push
loop
dec
and
push
pop
pop
pop
insl
sub
jo
or
pop
leave
aas
push
std
out
adc
dec
push
mov
sub
jo
mov
adc
xchg
mov
pop
shrb
popf
add
fucom
adc
xchg
dec
cmpsl
pop
or
pop
sub
cmpsb
xchg
xchg
fmulp
pusha
je
daa
pushl
mov
mov
xor
mov
ds
test
push
dec
adc
xchg
xchg
repz
xchg
stos
add
sub
lcall
ret
sahf
stc
inc
ja
push
popf
sbb
mov
outsl
adc
bound
sub
xchg
mov
sub
and
lods
or
dec
and
xchg
and
sub
add
cmp
xchg
int
shl
push
sti
popf
shr
mov
int
les
and
ljmp
xor
mov
add
and
jbe
sub
lods
pop
mov
repz
jg
or
mov
sub
dec
and
ss
pusha
mov
sbb
xchg
icebp
mov
shr
mov
and
and
lods
shll
pop
lock
cs
iret
and
jge
scas
inc
xchg
sub
adc
inc
sub
les
scas
sub
int
mov
sub
in
or
push
sub
xor
test
loop
cwtl
arpl
shrb
cmpsb
add
xor
aad
push
arpl
dec
push
dec
inc
xor
sbb
imulb
lcall
pusha
lods
mov
jecxz,pt
addl
addl
xor
mov
jecxz
lods
shrb
jle
jae
in
xchg
pop
cmp
out
sbb
cmpsb
add
mov
fstps
lcall
scas
cmp
jge
mov
test
dec
pop
cld
or
je
pop
cs
test
ret
lret
stc
sub
or
adc
xor
xor
sub
cs
ja
sub
les
arpl
cmp
lods
movsb
sub
jns
movsl
pop
aad
dec
cmp
stos
fistl
jp
sub
sti
pop
sbb
sub
mov
pop
xor
push
aad
sub
popa
cmp
jb
dec
push
ret
xor
mov
jns
daa
push
pop
mov
pop
dec
int3
sub
jl
mul
sub
jp
out
shrb
ret
ret
sub
fdivs
lea
sub
ret
cmpsb
mov
inc
sub
ficoml
fsubrs
lds
jl
mov
xor
test
add
cltd
sub
shlb
xor
sub
dec
sub
mov
es
add
sub
leave
out
clc
fldt
neg
into
cld
add
push
js
inc
cmp
pop
jge
ljmp
outsl
mov
insb
sub
mov
insl
pop
sub
fs
cmpsb
insb
xlat
mov
mov
jmp
mov
xor
jns
stc
xor
inc
xchg
jmp
and
fs
pushf
mul
pop
or
aas
fisubrs
xchg
cmp
adc
inc
test
sub
pop
adc
and
lret
ljmp
leave
push
imul
addr16
int3
inc
mov
sub
sub
ljmp
and
cmp
aad
popf
or
mov
popa
cmp
push
mov
in
dec
push
adc
mov
xchg
inc
arpl
xor
cmpb
push
sub
gs
notb
mov
ret
cmp
push
out
cmpsb
cmpsl
ljmp
icebp
pop
jbe
popa
sub
push
ljmp
std
jne
rclb
mov
adc
test
out
sub
call
les
rorb
xor
lods
scas
sbb
add
int3
jge
push
add
xor
ja
call
mov
xchg
rolb
push
inc
cwtl
dec
data16
mov
sub
outsl
out
jge
ds
mov
push
xor
test
pop
adc
push
sub
inc
or
xor
jmp
pop
add
fstl
jmp
and
pop
popl
sahf
sub
xor
ds
bound
cmp
mov
xchg
imulb
xor
and
call
sub
cmp
jecxz,pn
and
idivl
sub
mov
loope
in
jp
popf
sub
lock
out
pop
sub
jo
repnz
dec
loopne
lods
jp
int3
pop
jg
pusha
sub
bound
ds
loope
mov
repz
insb
adc
adc
mov
pop
adc
jbe
mov
jecxz
sub
mov
rorb
mov
xchg
rorl
lea
inc
mov
sbbl
inc
les
jnp
je
in
cmp
push
pushw
sub
scas
shll
xor
in
mov
sbb
scas
mov
and
pop
loope
subb
push
add
xchg
pushf
pop
mov
imulb
dec
fadds
mov
and
adc
pusha
stos
mov
mov
push
sarl
sub
shrb
fsubl
mov
popa
dec
icebp
adc
out
sub
inc
pop
xchg
inc
push
shlb
fldt
fistpll
xchg
cmpsl
and
jnp
mov
add
or
cmp
mov
sub
mov
test
sub
shrl
je
mov
sbb
stc
or
adc
insb
push
enter
cmp
sub
xor
pop
test
mov
mov
pop
adc
cmp
aad
fisubrl
shrl
jge
inc
sub
pop
dec
test
mov
fistpl
stos
push
push
dec
adc
jecxz
ficomps
mov
mov
out
sub
loop
mov
addr16
push
lock
sbbb
loopne
mov
xchg
sub
stos
cli
ds
out
adc
cmp
inc
lds
mov
dec
push
lcall
sub
cmp
cwtl
mov
iret
xlat
sub
push
sub
sbb
pop
repnz
test
xor
adc
stos
stos
cmp
xor
orl
xchg
mov
cmp
ja
adc
adc
test
in
shrb
gs
pop
popf
sbb
js
sbb
nop
mov
scas
mov
push
push
inc
add
push
sub
fptan
fisttpll
pop
dec
sub
addr16
adc
clc
dec
fwait
lods
sahf
sub
nop
jmp
fadd
inc
sub
dec
jnp
jns
push
adc
fs
xor
and
and
sub
cmpb
pop
push
scas
pop
and
lret
sbb
pop
jns
imul
nop
test
sub
sti
shll
add
cmc
add
je
sbb
inc
add
adcl
xchg
fs
adc
aad
mov
fcom
mov
mov
loop
ljmp
push
push
or
dec
daa
sub
ljmp
ss
fs
cmp
or
or
cmp
nop
sub
in
orl
push
adc
pop
and
dec
cmc
pop
push
mov
std
fadd
dec
adc
mov
add
sbb
push
pop
sbb
pop
mov
sub
aam
mov
rcrb
test
add
sub
icebp
cmp
cwtl
xor
lds
add
lret
sub
shlb
sub
mov
cmp
sub
out
sub
sub
or
test
sub
and
push
xor
push
cmp
pop
or
subl
xchg
insl
or
das
test
lods
xchg
hlt
xor
ds
bound
iret
sub
lret
jp
add
popf
fimull
sub
sub
test
dec
imul
and
lods
adc
and
call
insb
imul
dec
pop
pusha
sub
add
ljmp
inc
or
popf
ret
or
jbe
sub
xchg
adc
and
sbb
and
sub
pop
sbb
cmpsb
sub
adc
pop
dec
rcrb
lahf
mov
jnp
adc
das
sub
inc
and
push
pop
jge
fdivrs
dec
orl
add
sub
mov
movsl
cmc
cmp
cs
aaa
daa
sub
cmpsl
test
jl
cmc
pop
into
int3
iret
outsl
insb
fsts
sub
cld
ds
sbb
sub
and
movsb
repz
into
xchg
fstpl
adc
sub
sti
sub
test
pop
test
loop
and
lahf
and
sbb
jg
dec
sub
out
lret
cli
mov
mov
pop
xchg
sub
cld
mov
out
xor
dec
mov
and
adc
pop
sub
cli
and
lahf
sahf
and
adc
jns
aam
jnp
xor
ss
in
pop
sub
push
ja
add
sub
xor
fcomps
push
mov
xor
cmc
push
sub
dec
icebp
sub
mulb
xor
jo
lods
ffree
aam
daa
pushf
mov
mov
sub
lret
sarl
sub
out
stc
fwait
cltd
add
andb
cmpsb
push
xchg
gs
jecxz
movsb
cmp
sbb
xorl
aad
imul
aad
xlat
push
sub
scas
sub
enterw
mov
incb
negl
xor
push
fimull
ss
repnz
mov
sub
iret
and
sub
sar
mov
sub
outsb
or
enter
cltd
sub
mov
mov
pop
shrb
mov
xlat
fstpl
test
mov
out
rolb
mov
xchg
sbb
repz
test
push
aad
sub
adc
mov
xor
rolb
cwtl
mov
pop
and
sbb
ljmp
vpmovmskb
in
jmp
pop
and
sub
jns
ds
cli
xchg
xchg
xchg
ret
sub
stos
cmpl
nop
loopne
gs
push
cmp
scas
sbb
mov
push
push
in
lret
ljmp
mov
jmp
test
jnp
inc
add
sbb
mov
pop
sub
test
not
sub
mov
loop
loopne
cmp
inc
sub
jg
fwait
cmp
fdivrs
push
aaa
xchg
xchg
xlat
sub
jbe
sbb
loope
sub
xchg
xchg
mov
loope
into
xor
push
popf
scas
inc
sub
xorl
add
test
jae
enter
and
cmp
adc
scas
sub
aas
jge
xlat
sbb
scas
ret
ja
mov
sub
push
mov
rolb
mov
add
fnstsw
jb
icebp
sbb
pusha
xlat
dec
sub
pop
gs
sub
xchg
lock
add
sub
cwtl
mov
mov
mov
lahf
mov
push
sub
push
gs
or
push
and
adc
sub
enter
mov
and
pushf
push
in
in
insl
lret
repz
inc
rcrb
je
mov
fidivl
rorl
xchg
into
bound
push
lret
sub
mov
incb
and
mov
dec
pushf
test
jge
ret
add
call
sub
sbb
cli
lods
fldl
mov
imul
in
fidivs
sbb
aaa
popa
lods
add
jg
mov
and
adc
adc
cs
rclb
outsb
pop
jb
stc
inc
or
inc
push
adc
mov
les
fstl
sub
leave
rolb
dec
sbb
add
ja
mov
inc
jo
test
jge
mov
sub
in
out
ffree
leave
xor
ret
scas
into
mov
orb
xor
in
sub
sub
outsb
jge,pt
cmpsb
push
and
mov
inc
xchg
sub
jl
in
out
xor
arpl
and
stos
inc
jmp
push
pop
iret
das
xor
sub
sub
lea
aas
xchg
sub
in
push
add
push
sub
and
imull
rcrl
jle
loope
fstl
sub
out
out
xor
and
xchg
sub
pushf
cmp
mov
incl
xor
cmpsl
pop
lods
sub
xor
mov
jnp
add
ja
sub
dec
insb
add
les
ret
xor
sub
popa
leave
ret
shrl
mov
stos
fldcw
mov
fcomp
clc
and
aad
sbb
outsl
sub
jae
mov
jecxz
into
jne
sbb
mov
shll
push
and
cli
loop
outsl
push
sub
push
out
in
lods
aad
inc
or
popa
sub
jne
lods
add
int3
dec
sbb
movsb
sub
sub
xchg
sub
jp
push
subb
jmp
mov
call
and
iret
loope
lods
sub
movsl
jne
mov
push
xchg
add
and
add
std
leave
fldcw
lds
test
ficoml
sub
and
loopne
mov
repnz
scas
sub
push
sbb
mov
ret
sub
pop
je
in
inc
sub
xchg
or
sub
push
int
sub
adc
push
shrb
mov
inc
pop
mov
add
addr16
mov
leave
jmp
test
inc
and
and
jns
xlat
daa
cmpsb
insb
nop
jl
mov
ret
adc
lcall
out
or
fnsave
jle
stc
and
sub
stos
test
add
pop
sub
imul
dec
lret
lods
mov
clc
test
or
repnz
mov
fstpl
lea
or
adc
push
dec
mov
xchg
pop
sub
cmc
cld
add
sub
or
lock
sub
sti
loopne
xchg
loop
xchg
ja
cli
mov
sti
dec
push
sub
mov
aad
popf
or
stos
add
and
xor
repnz
aam
xor
jo
mov
scas
lds
mov
and
sub
dec
push
aas
cmpsb
jns
sbb
test
pop
mov
sub
in
cmp
sub
arpl
jo
adc
fldl
and
ds
lret
pop
sub
or
sub
scas
mov
pop
and
mov
sub
or
lret
out
sub
ds
lcall
test
pop
pusha
xchg
push
sub
leave
jno
fcmovu
sub
mov
cmp
fs
inc
sbb
out
pushf
mov
jae
mov
pop
fidivrl
mov
insb
adc
xchg
sub
and
aas
sub
divb
push
push
dec
and
cs
push
js
sub
cs
xor
sahf
cmpsl
mov
ljmp
and
mov
lret
mov
dec
dec
dec
fisubrl
or
mov
int
sub
push
sti
sub
outsb
cmpsb
pop
dec
gs
jp
pop
sbb
mov
sub
cmp
and
push
pusha
xor
roll
jle
and
mov
scas
mov
jge
ret
xchg
xchg
daa
sub
mov
dec
sub
sahf
pop
xchg
addr16
or
int3
ja
push
jae
int
push
xlat
int
cmp
and
es
aaa
push
add
sub
jle
cmpsb
and
dec
sbb
adc
fisttpll
lods
inc
lcall
das
mov
test
jns
mov
popa
sub
sub
push
dec
sub
fdivrl
cs
dec
ret
repz
mov
test
dec
out
mov
sub
dec
in
sti
pop
xor
fsubrl
xchg
pop
mov
popf
sbb
pop
adc
rclb
int3
pop
andl
cs
ret
popa
adc
sub
data16
sbb
xor
iret
lods
mov
sub
mov
lret
sub
add
sub
cmc
jnp
add
xchg
push
mov
ja,pn
fwait
shlb
xchg
fisubrl
clc
xor
mov
rcrb
push
outsl
lahf
icebp
loop
dec
fstps
push
sub
dec
mov
push
std
sub
lock
sahf
sub
dec
cld
loopne
sub
dec
jg
sub
sahf
sbb
lea
js
xchg
iret
call
cmp
mov
fidivrl
add
dec
xchg
add
xchg
gs
mov
and
ret
jge
cmp
js
lea
add
push
in
aaa
xor
scas
dec
int
sub
jo
or
or
jecxz
mov
and
and
jae
into
or
fimuls
inc
fstps
cmp
jnp
or
sub
cmp
or
addr16
sub
xlat
fldenv
inc
dec
fucom
inc
and
aad
jns
mov
and
jmp
popf
sub
xchg
imul
loopne
sub
outsb
push
stos
in
push
sub
rclb
adc
sub
lret
out
sbb
sub
adc
lcall
adc
sub
aaa
add
stos
out
test
cmpsl
nop
daa
aad
mov
mov
sub
mov
in
sub
aas
sti
int3
es
sub
xchg
popa
jp
sub
sti
mov
hlt
pop
xchg
repnz
xor
or
enter
xchg
cmp
push
sbbl
mov
loopne
push
pop
xchg
lds
mov
dec
xchg
sub
adc
rclb
adc
cmpsb
das
stos
xor
dec
sub
or
outsl
cmp
ss
frstor
sub
or
negl
sub
loopne
int
sub
loop
rcr
dec
shrb
mov
or
outsb
cmp
ds
or
fsubrs
inc
sub
push
sub
out
into
enter
sbb
incb
mov
insl
mov
xor
push
push
mov
cli
hlt
bound
ret
les
lret
push
cs
or
sub
mov
lods
dec
in
mov
jecxz
xor
int3
sub
fdivl
and
push
mov
ljmp
fists
add
outsl
dec
imul
lods
hlt
sti
sub
xchg
mov
scas
cmp
mov
cmp
loop
xchg
imul
sub
sub
nop
cmc
mov
dec
sbb
xchg
mov
rorb
dec
and
fisubs
out
mov
xor
sub
in
out
xchg
sbb
cli
in
push
push
addr16
imull
mov
or
popf
jne
xchg
fsubs
iret
scas
pushf
test
add
xor
xchg
into
fmull
sub
cmp
xchg
mov
sub
push
xor
mov
das
xor
sti
pusha
shrb
pop
shrl
pop
sub
add
inc
xlat
push
push
dec
jl
sub
popf
xchg
pusha
int
push
out
inc
daa
icebp
mov
sub
dec
cmpsl
hlt
or
in
jg
cmp
xor
and
fdivs
fs
sub
or
lock
idivb
stc
test
les
stos
pop
sbb
cmp
mov
icebp
mov
lea
mov
fistpl
bound
gs
xchg
add
loope
cmc
lret
or
dec
push
fstpt
xlat
xchg
sub
xchg
jmp
ret
sbb
les
sti
inc
mov
fldcw
or
or
or
cli
xchg
sti
ljmp
inc
into
add
jne
jbe
sub
movsb
pop
mov
aad
adc
hlt
mov
rcrl
repnz
and
lea
lcall
mov
and
mov
popf
test
das
jg
jmp
xor
dec
fldt
insl
lock
pop
or
and
xchg
das
lds
sti
enter
dec
and
cmp
cmp
divb
sbb
ja
mov
cmp
xor
leave
mov
and
cmpsl
sub
xlat
stos
aaa
sub
inc
add
pop
sub
mov
addr16
mov
aam
movsl
shll
test
sub
aas
xlat
cmp
sub
jb
xchg
ds
jae
insl
jecxz
jns
jo
nop
sub
je
lods
ret
mov
cmp
mov
pushf
loopne
into
mov
mov
stos
sub
aam
mov
shll
sbb
lret
sub
enter
push
push
sahf
fcomi
addr16
sub
arpl
imul
cmp
push
shll
aad
ret
dec
sub
repz
add
fcompl
push
data16
dec
into
test
xor
lods
sbb
cltd
pop
sti
repz
adc
mov
inc
dec
or
mov
mov
lock
and
mov
subl
testl
sub
sbb
outsb
insb
adc
in
repz
sub
mov
hlt
xor
cmp
leave
gs
fldt
jle
jp
scas
inc
sub
xchg
js
mov
ret
dec
sub
push
sub
sub
ljmp
adc
adc
cwtl
lods
fstps
ret
xchg
or
aas
sub
aad
sub
jg
sbb
add
push
push
add
repz
in
sub
decb
push
cld
xchg
inc
sub
mov
sub
aaa
xor
push
fmull
leave
lahf
jnp
sub
push
mov
cs
daa
add
push
or
ficoms
lods
xchg
idivb
mov
dec
lds
pop
xchg
lds
push
test
sub
sub
add
popf
sub
push
mov
mov
cmp
aad
sub
add
jg
daa
int3
pop
scas
rcrl
or
cwtl
mov
repz
fucom
jmp
sub
loopne
push
pop
sub
adc
xor
mov
shrb
lcall
sub
mov
xchg
out
call
dec
pop
fwait
and
adc
imul
sahf
jbe
dec
call
inc
or
xchg
jg
adc
jns
lret
mov
data16
out
cmpsl
fildll
lods
int
or
sbb
cmpsb
push
sub
lock
sahf
sub
push
inc
aas
popf
mov
sub
xchg
jp
xchg
and
mov
jg
sub
sub
xchg
cwtl
sub
fsubl
inc
enter
jecxz
and
push
push
jle
jl
xchg
push
inc
out
and
aam
outsl
aad
in
xlat
mov
icebp
ret
sub
repnz
add
sub
test
sub
scas
sbb
cli
mov
ret
mov
stos
cmpsl
stc
ss
movsl
popf
insb
sahf
and
sub
xor
bound
sub
mov
cld
mov
sub
fucomip
add
cmp
dec
dec
ja
mov
dec
xchg
pop
gs
jecxz
push
dec
and
leave
loope
daa
sub
movsl
ds
es
push
add
push
and
mov
jb
mov
addr16
shlb
test
pop
scas
adc
es
das
sub
je
aas
sub
lret
fisubrs
and
mov
push
cmpsb
mov
iret
lcall
xchg
mov
mov
out
sub
stos
cmpsb
dec
dec
sub
and
movsb
mov
sbb
in
xchg
jnp
sub
cltd
lods
cld
pop
sub
add
and
cmpsb
fwait
out
adc
dec
and
arpl
mov
add
sub
ret
icebp
sub
imull
ds
push
popa
dec
add
adc
sub
xor
pushf
es
shlb
mov
or
sub
fisubl
imul
ss
jge
xlat
add
sub
das
inc
ds
lods
and
mov
sub
push
cmp
jmp
sub
stos
loopne
stos
and
or
push
daa
sub
mov
pop
pop
sub
arpl
sub
icebp
jle
lret
jae
mov
sub
xchg
pop
addr16
pop
cmp
sub
and
xor
sub
cltd
jecxz
add
addb
les
lock
mov
adc
test
or
jp
je
sub
ljmp
fildll
xchg
and
insb
push
mov
sub
mov
cmovns
mov
or
cs
pop
jge
lods
xchg
jo
fucomp
daa
outsb
sub
ret
adc
lds
xlat
jbe
sub
mov
xor
sub
xchg
rcrb
mov
jmp
shl
mov
popa
loope
frstor
ficompl
aaa
icebp
or
push
push
sub
cmp
nop
push
and
xchg
fadd
pop
mov
and
into
mov
push
rorl
sbb
sub
leave
ds
aas
sub
mov
xchg
addr16
jno
adcl
add
xchg
mov
jne
leave
mov
sub
cmp
mov
sbb
mov
or
bound
xchg
and
cmp
add
jns
or
sub
cmp
clc
bound
pop
ret
cmp
mov
and
popf
mov
scas
sbb
dec
filds
mov
xor
mov
pop
cwtl
sarl
mov
mov
les
repz
sbb
xadd
fisubrl
adc
call
push
jae
mov
clc
cmp
cli
imulb
mov
mov
jecxz
xor
arpl
cwtl
shrl
pop
and
add
sub
clts
sub
sub
in
add
sahf
sub
call
bound
aam
ficoms
js
scas
xorl
pop
jb
sub
insl
into
mov
sbb
and
push
arpl
push
inc
sub
and
das
sub
dec
sub
pusha
sub
cs
shrl
or
cmp
sub
mov
xor
dec
lds
and
ds
subl
sub
out
mov
and
ja
clc
scas
lcall
ljmp
pop
sub
xor
sbb
push
inc
sub
jnp
lahf
fs
cmpsb
stc
popf
hlt
push
jecxz
mov
into
push
imul
mov
xor
out
pushf
fdivrl
xor
aam
arpl
cltd
cmp
sub
aas
dec
mov
test
lds
or
popf
sub
int3
les
stos
stos
pushf
sub
dec
arpl
push
push
sub
cmp
fsubs
stos
lods
jno
jp
repnz
lock
xchg
mov
in
movsb
mov
sub
inc
imul
jae
push
and
xor
test
sub
xchg
mov
in
pop
sub
push
stc
aad
fcmove
sub
std
dec
sub
je
data16
and
popf
mov
out
jb
int
jge
sbb
imul
fwait
lods
lds
sub
test
mov
outsb
out
mov
insl
arpl
aad
sub
divl
repz
sub
push
and
fs
dec
xchg
fwait
sub
mov
and
jbe
mov
aam
pop
stc
daa
sbb
sub
xlat
insb
jp
and
inc
aas
test
and
sub
sbb
and
ret
xor
stos
iret
and
or
adc
adc
popf
inc
or
and
lcall
mov
jge
mov
mov
clc
and
mov
addr16
outsl
mov
pop
sbb
xchg
lea
sbb
mov
lret
sub
push
aad
sbb
adc
lret
fmuls
inc
sub
cmp
mov
stc
es
ljmp
aam
xor
insb
pushf
cltd
xchg
sub
movsb
outsl
and
int
call
mov
adc
subb
pop
sub
xor
hlt
sub
sbb
int3
std
stos
add
add
pop
addr16
inc
and
lcall
mov
add
sub
bound
insb
jbe
sub
sub
mov
cmpsb
imul
sub
subb
mov
lods
je
sub
adc
mov
pop
or
sub
jo,pt
cmp
sub
call
lret
ret
test
mov
sub
lods
hlt
inc
mov
pop
repnz
loop
loopne
lods
insl
adc
push
sbb
jle
ja
sub
jns
lcall
or
fwait
out
add
imull
inc
iret
sub
pop
dec
aas
xchg
sub
pop
js
bound
out
call
sarl
sub
movl
fisttps
xor
dec
daa
dec
cmc
daa
inc
sub
jg
or
adc
push
sub
int
sub
movsb
jnp
int3
aad
mov
outsb
sub
jl
adc
mov
or
mov
das
dec
sub
shrb
icebp
xchg
pop
sub
push
inc
aaa
outsb
and
jge
imul
sub
incb
xchg
sahf
jg
movsb
sub
or
out
fwait
int3
cmp
in
inc
sub
scas
push
adc
sub
pop
push
es
sub
into
repnz
mov
cld
icebp
aad
adc
xlat
lcall
cmc
cmp
das
es
sbb
mov
pusha
push
sub
mov
mov
jge
testl
or
jb
cmpsb
sub
and
loopne
xor
xchg
push
arpl
xlat
sub
cli
pop
xchg
add
ret
push
hlt
test
pop
cmp
cmp
mov
test
dec
je
shrb
shrb
lahf
sub
sbb
repnz
insb
dec
out
sub
sbb
xor
or
mov
and
gs
sub
testl
pop
fnstcw
aam
cmc
sub
lds
enter
add
sub
mov
inc
cld
les
test
adc
adc
push
xchg
jb
loope
outsb
lahf
push
cmp
orl
sbb
sub
jle
fisubl
jecxz
movsb
mov
mov
mov
pop
dec
sub
das
sub
ljmp
mov
shrb
sbb
sub
mov
icebp
sub
add
enter
sub
bound
xchg
xchg
mov
jg
jmp
inc
out
fadd
sub
cwtl
dec
dec
mov
dec
push
mov
stos
jb
fwait
punpckldq
ret
dec
sub
in
xor
pop
imul
sub
mov
sub
negl
stos
sub
fldl
ljmp
xor
sub
mov
dec
fistpl
sub
adc
ljmp
outsb
xlat
imul
jmp
sub
cmpsb
test
jns
cmpsl
nop
add
cwtl
jae
mov
sahf
dec
pop
stos
pop
sub
bound
loopne
sub
jns
push
dec
fimuls
sub
orb
push
mov
aam
xor
mov
mov
mov
mov
out
cmp
lea
sub
jmp
fs
and
leave
sub
dec
inc
sub
repz
or
xor
dec
shlb
bound
and
stc
push
sub
xchg
adc
sub
int3
stc
loope
sub
fisubrs
popa
mov
sbb
jp
dec
sub
fcomp
jecxz
pop
dec
addr16
adc
sub
inc
and
mov
inc
test
push
xorb
mov
loopne
gs
jge
mov
or
jg
push
ss
add
xchg
push
jge
sub
mov
push
pop
stos
arpl
xchg
test
xor
sbb
into
imul
push
sub
out
or
int3
xor
and
aam
das
sub
test
shl
sbb
outsb
addr16
sub
jl
mov
and
push
stos
sub
fdivl
inc
and
sbb
lret
jp
cs
xor
bound
jecxz
mov
lret
sub
cs
sub
jmp
fisubs
pop
ret
call
aad
sarb
aam
popl
sub
imul
jmp
sub
aaa
ss
pop
and
lods
adc
jb
pop
into
sub
int
sub
pop
or
push
sub
mov
sub
xchg
pop
rcrl
jne
mov
sub
xor
rorb
pop
adc
imul
sub
test
pop
nop
hlt
and
add
cmp
scas
in
lods
popf
jbe
sbb
movsb
jl
xchg
sub
add
in
sub
pop
out
out
mov
xchg
scas
sub
out
sub
outsl
movsb
dec
arpl
sbb
mov
mov
iret
and
mov
arpl
sub
aad
sbb
and
jle
xchg
lret
and
sub
sub
jge
sub
fsub
aad
mov
dec
mov
ljmp
fwait
jecxz
xchg
add
cli
out
loope
sbb
xchg
outsb
push
ret
push
cmp
in
adc
cmp
sub
test
test
adc
pop
je,pt
into
ret
mov
cmp
lahf
mov
sub
out
pop
xlat
mov
adc
sub
adc
mov
dec
xor
xchg
mov
leave
popa
push
hlt
mov
xchg
aas
pop
sub
dec
lock
add
ret
int3
cmc
call
sub
or
sub
jecxz
xchg
sub
pushf
gs
out
mov
xor
outsb
int
aad
daa
cmp
add
push
mov
add
lods
pop
sti
sbb
push
sub
lahf
push
pop
adc
lods
icebp
test
mov
aas
test
inc
ret
sub
mov
xor
lea
enter
mov
mov
scas
clc
lods
pop
sub
and
and
js
and
repnz
mov
pop
sarb
mov
sub
sti
popf
cltd
out
insl
fs
mov
fimuls
aaa
cmp
xchg
sub
sbb
adc
pop
movsl
dec
xchg
jb
add
sub
movsl
jnp
scas
adc
or
sub
js
adc
and
lcall
pop
or
jnp
sti
xchg
cld
shr
sub
das
jmp
pop
pusha
shr
xor
cld
sbb
push
scas
and
cmp
jns
pop
sub
imul
ret
and
stos
or
adc
call
and
popa
push
outsl
sub
sub
pop
cmp
in
imul
lret
aaa
adc
clc
stos
xor
adc
sti
fwait
scas
inc
lcall
or
sub
fs
iret
mov
aad
insb
cwtl
push
pop
sub
fdivs
cmpsb
mov
dec
insb
ljmp
jp
ljmp
ljmp
leave
jecxz
jae
push
mov
sub
lea
loope
sub
cmpsl
movsl
push
push
hlt
jp
jo
incb
pop
sbb
test
data16
sub
std
xchg
mov
sub
push
aas
jmp
nopl
cmp
sub
gs
jbe
mov
push
std
lock
mov
lods
fstl
dec
and
inc
sub
ja
adc
xchg
mov
arpl
xor
inc
pop
cwtl
js
shll
or
push
out
sub
xchg
mov
sub
cmp
xchg
adc
push
vmovaps
jns
enter
pop
mov
lea
addl
push
inc
cmpsl
mov
xor
xor
mov
clc
sub
push
test
jne
adc
cs
xor
dec
fidivs
mov
cwtl
dec
xor
or
mov
ja
mov
pop
cld
call
rclb
mov
and
test
stc
rorb
in
jbe
push
dec
sbb
aaa
lods
cmp
adc
pop
lret
sub
jns
int
cmp
sbb
cmp
loopne
paddw
outsb
xor
sub
pop
and
cmp
icebp
jae
out
fmuls
shrb
fs
cmp
aaa
jge
and
inc
sub
lods
mov
jge
ljmp
stos
xchg
cmp
sub
jmp
test
xor
in
lods
cmp
xchg
inc
mov
cld
adc
sub
shr
push
pop
sub
sub
jle
sub
jne
xor
sub
mov
xrelease
rcll
pop
pop
mov
dec
in
xchg
sub
inc
mov
sub
cwtl
sub
jnp
pop
add
or
shlb
sub
pop
shrb
cld
and
sub
inc
xchg
or
les
jns
jge
sub
nop
pop
inc
or
in
lret
sub
rcll
xor
sub
cwtl
adc
ret
sub
pop
int3
pop
stc
sub
repz
and
sub
dec
sbb
xor
add
popa
sti
mov
sub
cwtl
push
push
mov
sub
cmc
adc
sub
fildl
xchg
ds
les
sub
sbb
push
inc
lods
lahf
loop
sub
ljmp
leave
dec
add
push
dec
sub
jne
sub
xlat
jmp
and
rcl
lahf
cs
in
cmpsl
inc
sub
jns
repz
lea
dec
xor
dec
mov
mov
lock
fisubrl
mov
cvtpi2ps
scas
pusha
leave
jl
lock
push
in
out
xor
inc
cltd
int3
test
adc
jge
addl
pop
and
sub
sbbb
dec
int3
xchg
pop
sub
cmpsb
sbb
sbb
es
jecxz
or
sub
lret
xchg
fwait
xchg
push
mov
popl
pop
and
fnsave
arpl
sub
lods
lea
aam
fsubr
pop
daa
xchg
mov
xchg
xchg
xlat
movsl
sub
mov
andb
pop
out
sub
adcl
jbe
sub
pop
pop
test
inc
mov
or
jecxz
loopne
nop
sub
notb
sub
cmc
cmpb
daa
sub
or
lret
testl
clc
sub
cmpsb
call
mov
sbb
jne
fildll
scas
jl
subl
andl
aad
sbb
xchg
cltd
add
sub
inc
lock
mov
add
sub
xchg
push
fwait
xchg
and
cmpsb
jb
jecxz
add
add
flds
daa
aas
loope
mov
jg
push
pop
je
enter
mov
pop
sub
inc
sahf
xor
sub
add
sub
in
jl
adc
aaa
cmc
sub
mov
mov
jp
loope
sub
sbb
add
push
fisubs
test
sub
and
fistl
adc
mov
out
imul
mov
xchg
xchg
mov
adc
add
iret
sub
and
sbb
or
push
sub
mov
out
sub
inc
or
fstl
pop
pop
mov
nop
js
inc
xchg
ficompl
sbb
xchg
and
cmp
or
mov
lret
and
popa
mov
aam
sub
dec
dec
and
pop
lods
movsb
and
jae
js
mov
mov
fsubr
sub
xchg
rcll
jb
adc
mov
pop
sub
pop
lods
pop
xor
add
jmp
daa
cs
aaa
cmp
popa
push
call
das
repz
movsl
psraw
jne
outsb
fisttpll
sub
in
push
sub
mov
xor
lock
pop
sub
ret
and
aad
ss
xchg
sarl
loop
dec
out
jp
push
inc
xor
or
movsl
xchg
das
sub
je
lods
jno
sub
sub
adc
test
loope
sub
add
pusha
push
in
ret
add
adc
pop
xchg
mov
inc
outsl
push
out
fadd
sub
int
cmp
cld
push
mov
rclb
mov
arpl
mov
aaa
sub
repnz
jbe
aad
jnp
cmp
shll
sub
add
inc
nop
dec
hlt
pop
ljmp
and
sub
or
cmp
mov
cmp
mov
inc
cs
in
cmp
pushf
push
xchg
aaa
sub
or
sub
sub
mov
stc
and
insb
sti
mov
shlb
xor
pushw
xor
popa
xchg
out
push
sub
insl
or
jo
aam
add
mov
fnstenv
jge
cmc
popf
inc
adc
sub
jae
xchg
xchg
mov
mov
jne
repz
add
in
pop
lds
cmp
fcoml
cmpsb
cmpsl
adc
xchg
jnp
lahf
push
dec
dec
sbb
ret
cmpsb
int3
sub
call
cs
add
cmp
mov
cld
push
inc
cmp
sub
xchg
data16
push
sbb
mov
adc
push
sub
adc
add
pop
das
scas
sub
pop
lods
and
test
jl
pop
jne
mov
fdivrs
or
cmc
add
mov
push
inc
add
movsl
cmpsb
and
dec
sbb
aaa
insl
mov
or
in
test
mov
mov
mov
lret
mov
iret
movsl
divb
and
xor
out
stos
push
dec
sub
mov
jle
jmp
jp
or
mov
jne
xchg
aam
jmp
sub
xlat
mov
sub
scas
inc
loop
xchg
mov
jns
in
pop
nop
fidivrs
sahf
ret
jne
lcall
decl
out
push
cmp
jmp
imul
mulb
jbe
inc
lods
lods
sbb
xor
push
imul
jne
lret
sub
jnp
cli
clc
push
xor
mov
call
add
sbb
jecxz
sub
or
xchg
pop
push
shrl
adc
scas
sub
ljmp
lods
sahf
sub
cmp
fisubrl
mov
push
lcall
aaa
add
ljmp
mov
jnp
mov
cwtl
sbb
mull
pop
or
inc
lea
cmpsl
es
cmpl
sub
mov
fs
test
imul
lods
xor
test
xchg
xor
cltd
sbb
arpl
mov
lods
enter
out
pop
xor
or
sub
jne
les
sbb
inc
addr16
pop
pop
out
loope
pop
or
int
sub
push
mov
sti
sub
out
pushfw
cs
aaa
jne
sub
pop
xchg
or
sub
cmp
xor
adc
imul
and
inc
pop
fstl
sbb
push
xor
daa
std
mov
push
pshufw
sub
inc
cs
test
sub
in
imulb
loop
andl
and
push
call
sub
and
mov
mov
pop
xchg
adc
dec
xor
push
push
out
in
push
loopne
pop
add
jbe
out
jns
int
dec
jno
aam
repnz
mov
icebp
outsb
sub
xor
adc
or
ss
cmpsl
mov
jo
mov
and
sub
arpl
stos
popf
ds
jne
mov
xchg
in
pop
jae
pop
icebp
cs
aam
mov
xchg
cmp
es
cmp
sub
sub
in
xchg
insb
pop
cmp
mov
out
or
icebp
xchg
movl
fidivrs
sub
and
push
out
test
inc
mov
or
aas
sub
das
sub
ss
cmp
sub
addr16
push
sub
test
mov
fdivrl
sub
fwait
dec
sub
in
ficoms
jle
or
inc
xchg
ds
ss
xchg
sub
jg
cmp
in
xchg
sub
leave
jge
mov
test
dec
push
je
mov
ret
xor
cmp
adc
out
jne
jnp
or
sub
sub
or
popa
sbb
xchg
xor
mov
mov
add
bswap
fldcw
decl
push
jg
fs
ja
and
jecxz
pop
mov
daa
pushf
mov
fbstp
push
xor
loop
sub
cmp
cwtl
into
sub
lods
mov
ljmp
push
mov
clc
or
sub
cli
mov
xlat
sub
imul
sub
xor
lea
sub
pop
imul
sub
sahf
xchg
ror
fidivl
shl
mov
and
add
sub
in
loop
push
lds
cli
inc
cltd
xor
lods
mov
xor
xor
adc
dec
lea
jl
test
ror
outsb
sub
jb
or
sub
movsl
mov
and
idivl
sub
test
inc
xchg
sub
mov
std
leave
mov
push
mov
mov
into
les
daa
inc
pop
or
sbb
pop
mov
fiadds
stos
popf
and
jns
sub
sbb
sub
movsl
repnz
pop
sub
sub
ja
cmp
sub
roll
stos
fisubl
test
outsl
pop
adc
sub
mov
jae
ds
clc
and
lds
push
jp
addr16
push
filds
mov
sub
sub
fcoms
daa
inc
clc
sub
aad
inc
mov
sub
pop
es
ds
fdivs
out
dec
jmpw
pop
test
sub
xchg
and
ljmp
or
inc
mov
lock
inc
loope
pop
jmp
daa
repnz
inc
push
js
in
cmpsl
int3
fildl
andl
jno
mov
jle
push
adc
push
vmovupd
xorl
aad
popa
in
xor
in
mov
movntps
push
jbe
imul
sub
xchg
hlt
add
sub
mov
int
aam
and
ja
cld
push
sub
out
add
and
cwtl
mov
xorl
outsb
rclb
out
and
sahf
in
push
dec
sub
sub
xchg
stos
pop
push
push
xchg
shll
ss
adc
pusha
mov
incb
stos
push
dec
ffree
jae
sub
cmp
sub
xor
fs
mov
or
lret
aam
xchg
sub
add
or
divb
movsl
test
and
je
js
and
and
call
mov
sub
xchg
pop
pop
cmp
push
mov
aam
sbb
or
sti
mov
sub
pop
insl
sbb
lret
add
mov
sub
xchg
into
mov
sub
jns
cwtl
pop
sub
push
int3
pusha
mov
add
sub
and
add
lret
sub
push
addr16
adc
jge
test
xchg
sub
sbb
dec
xor
or
scas
mov
je
dec
in
test
cmp
push
mov
push
mov
inc
scas
sub
lea
repnz
inc
dec
or
test
outsb
fildll
arpl
mov
fstpl
mov
in
das
out
clc
sub
lock
loope
mov
or
sbb
xor
aad
hlt
xchg
outsl
fisttpll
dec
and
jle
in
cwtl
push
and
std
mov
xchg
mov
xchg
inc
or
jecxz
push
in
pop
sub
push
repnz
mov
test
adc
sub
ret
aam
inc
sub
stc
popl
push
lret
stos
sub
sub
xor
jo
sub
popa
aaa
xorb
mov
xchg
add
push
dec
cmc
mov
out
mov
jb
jae
test
loopne
jecxz
aad
xor
pushf
test
cs
push
pop
cmp
repnz
sbb
lods
inc
mov
icebp
push
test
rcl
jne
xchg
or
ret
movsb
push
pop
xor
adc
imul
push
arpl
jmp
testl
mov
iret
dec
aaa
inc
sub
cmpsl
sub
fiaddl
lea
dec
in
iret
pop
and
jl
out
mov
and
lds
nop
sub
mov
jmp
in
adc
fwait
mul
xchg
aaa
pop
sub
popf
cmpsl
test
mov
clc
les
sub
leave
jge
mov
testl
pop
add
jae
jbe
lret
sub
mov
fildll
mov
cmc
sub
jno
incl
loopne
cli
xchg
repz
sub
out
and
sub
mov
decl
ret
dec
lcall
adc
or
test
cmp
adc
out
xor
sub
pop
pop
mov
xor
lret
shll
mov
jb
pop
pop
lret
or
adc
mov
scas
sub
movsb
fs
sub
inc
mov
xchg
sub
xchg
out
sbb
fidivrl
mov
lock
sub
idivb
out
cs
jge
leave
mov
sub
cmp
psubq
mov
adc
mov
or
rcrb
arpl
sub
or
mov
in
mov
mov
ljmp
sub
xlat
push
fsubs
push
subl
sub
in
jg
sub
jl
fstpl
adc
out
adc
push
fcmovbe
xor
jno
xor
jl
outsl
sub
adc
adc
mov
shr
negb
sub
mov
mov
sbb
push
sub
repz
int
sub
adc
xor
cs
enter
mov
sub
xor
push
jmp
stos
cmp
inc
sub
xchg
popf
xor
jle
insl
fmull
mov
sub
testl
int3
sub
mul
mov
sub
jbe
fidivrs
in
lods
daa
test
lahf
loopne
rcr
popa
sub
lret
cmpsl
sub
cmp
sahf
leave
xor
outsl
dec
mov
pop
xor
pop
pop
int
mov
and
mov
in
mov
pop
aaa
or
lret
nop
outsb
push
fcoml
inc
mov
inc
loop
fisubrs
out
sbb
hlt
sub
or
jp
sub
loop
scas
stos
sub
mov
xchg
daa
sub
cmpsb
and
jge
and
in
sub
sbb
pop
sahf
and
and
xor
pushf
cmp
addr16
push
ljmp
or
sub
stos
outsl
mov
imul
push
mov
cld
jnp
and
jns
arpl
add
sbb
in
xchg
das
mov
in
loop
test
xor
add
push
stc
sub
sub
push
sub
add
shrl
jle
cwtl
gs
and
mov
mov
xchg
xchg
push
add
test
les
lea
inc
adc
test
fnstenv
inc
je
test
jp
outsl
lahf
adc
bnd
xchg
inc
les
insb
sub
cmc
push
sbb
xor
mov
pushf
lock
loopne
int3
push
push
sub
lds
lret
enter
push
flds
pop
and
adc
pop
ljmp
xchg
dec
jmp
jecxz
push
pop
insl
les
push
xchg
push
test
push
push
push
js
loop
test
and
scas
lods
insl
mov
subb
adc
jp
int3
insb
out
xchg
loop
adc
aas
push
sub
pusha
inc
iret
out
and
stc
xor
sub
cmpsl
xor
iret
pop
pop
mov
mov
fisubrl
cmpsl
fdivs
inc
and
dec
push
mov
push
popl
cmpsb
cltd
es
inc
mov
stos
add
subl
add
out
sub
mov
pop
lds
lods
jb
ljmp
movsl
sub
cmp
arpl
scas
or
vpsllw
and
xor
inc
imul
sub
into
fs
pop
clc
mov
or
mov
subb
inc
clc
xchg
mov
xor
iret
imul
lret
push
aam
stos
push
outsl
jne
das
sbb
cmp
jg
push
call
push
sbb
sub
imul
je
mov
clc
push
mov
adc
mov
sbb
xchg
lret
push
lea
sub
pop
mov
cmpxchg
cltd
cmp
jnp
inc
fiaddl
out
mov
sub
aam
addr16
sub
xchg
shlb
push
sbb
in
adc
lds
movb
jb
sub
sti
push
jns
sub
cmc
adc
mov
mov
outsb
and
xchg
pop
xorb
pop
adc
jno
daa
aas
shrl
xchg
cmpsl
xor
jle
sub
xchg
fistpll
and
adc
cs
sbb
test
cmpsl
fcompl
lds
outsl
ja
or
xchg
push
cmp
pop
jl
mov
loop
xchg
mov
ror
sub
out
scas
jno
ds
sbb
call
xchg
adc
jno
inc
arpl
les
mov
pop
sub
cwtl
insl
xor
subl
xor
mov
outsb
sub
mov
cmc
adcb
push
aam
cmp
cmp
imulb
rorl
jp
and
cmc
sarl
sub
xor
dec
stc
sub
popf
jl
loope
mov
pop
xor
and
loopne
inc
sub
sbb
adc
jg
sub
mov
arpl
mov
repz
pop
jno
jge
dec
inc
out
push
pop
stos
sub
dec
xor
sbb
adc
shlb
jbe
test
cmpl
sub
out
sbb
cmp
inc
push
mov
and
jge
pop
fstl
and
sub
sahf
jl
lods
jmp
or
iret
clc
in
sub
test
push
subl
sub
cltd
out
imul
and
cld
adc
push
mov
out
inc
dec
sub
jecxz
int
das
fmulp
xchg
int
ret
pusha
daa
mov
cli
and
inc
sub
imul
fdivl
mov
adc
xchg
data16
mov
test
out
repnz
xor
cli
in
iret
mov
lods
cmpsl
or
in
adc
push
add
loopne
cmp
test
adc
es
mov
sbb
sbb
adc
sub
movsl
inc
mov
xor
ret
cmp
int
lods
js
mov
sub
xchg
scas
cmp
leave
fsts
mov
aas
dec
jns
push
fistl
mov
jl
pop
and
jecxz
ret
clc
pop
ja
icebp
lods
pop
sbb
pop
push
pop
sub
loop
mov
xchg
jmp
xchg
fisubrl
mov
push
push
jmp
xchg
and
int3
scas
dec
ljmp
dec
push
out
adc
xlat
sub
inc
pop
pop
mov
andb
lea
and
xchg
in
sub
sub
neg
mov
scas
test
dec
push
cmp
frstor
xor
jl
mov
in
js
rol
sub
and
mov
les
cwtl
fwait
arpl
outsl
dec
dec
movsb
xor
or
mov
sub
insl
or
mov
ss
sub
push
gs
adc
cmpl
mov
mov
fcompl
adc
and
daa
fcoms
push
xlat
test
sbb
sub
and
push
sub
nop
fisttpll
mov
ret
enter
sub
stos
mov
dec
sbb
nop
cmpb
fisubs
test
add
cmp
push
add
mov
push
lret
mov
outsb
clc
loope
or
adc
imul
adc
inc
cs
int
aaa
in
sub
loopne
inc
pusha
or
les
jmp
orps
mov
cmp
leave
fcmovu
lock
js
mov
popa
lret
adc
fsubrl
sub
mov
pop
mov
cmpsl
or
std
insb
cmp
push
bound
lds
adcl
mov
pop
jo
stos
fadd
jbe
out
sbb
ss
sub
mov
fsubrl
sub
inc
sbb
out
leave
rorb
sti
push
mov
mov
imul
add
fstpl
movsl
sub
dec
sub
xchg
pop
mov
ja
mov
dec
out
movsl
in
pop
rolb
int3
popf
lds
or
inc
out
pop
or
push
arpl
test
sub
or
sti
shlb
mov
outsb
or
mov
pop
call
cmp
popa
arpl
xchg
icebp
inc
clc
adc
enter
add
cld
mov
sub
cld
mov
lret
leave
in
test
test
mov
ljmp
dec
add
sub
js
inc
push
ficompl
negb
push
and
ja
mov
out
jge
jne
das
and
sti
and
daa
xchg
lods
or
jg
ljmp
jbe
clc
sub
cli
mov
repz
jge
add
sub
gs
js
mov
fs
add
shrb
and
popf
shrl
mov
push
cltd
sub
jge
rcrl
jnp
mov
sub
sahf
inc
shl
and
or
sub
mov
nop
pop
cmp
aas
daa
push
mov
mov
scas
out
sub
mov
loopne
cld
or
into
scas
xor
jge
ret
sub
adc
and
fsubrs
sub
das
sbb
xchg
push
sub
movsl
int3
mov
aad
jmp
sub
adc
dec
sub
hlt
ss
mov
and
scas
es
xchg
xlat
int
sahf
out
dec
xchg
mov
movsl
xchg
shrb
gs
in
addb
in
sub
jns
test
mov
mov
ffree
daa
fs
lahf
in
insb
stc
es
int
mov
jnp
cmp
sbb
xor
dec
fimull
popa
sub
jmp
cmp
sub
and
stc
pop
add
aam
enter
jne
sti
xchg
jnp
ljmp
es
rcll
loope
mov
pop
test
dec
lret
xchg
sub
cmp
mov
push
rclb
pop
cmp
mov
push
ljmp
int3
ficomps
sub
cli
iret
addr16
adc
cmpsb
sub
sub
inc
inc
jp
sub
xor
lea
adc
data16
popa
cltd
iret
dec
stos
sub
sbb
sahf
xor
pop
mov
aas
and
inc
movsb
adc
daa
out
in
add
sub
fistps
sub
mov
fwait
sub
push
hlt
pop
dec
aam
mov
movsl
cmp
cld
pop
jecxz
sub
leave
jne
mov
movsl
lds
imull
xchg
push
sub
inc
mov
mov
aam
cmp
and
sub
mov
aam
xchg
es
fwait
adc
pop
lods
xlat
xor
sub
inc
test
add
jns
push
jle
nop
sti
loope
jmp
jp
repz
stos
sbb
or
loopne
and
and
push
push
repnz
sub
cwtl
addb
pop
sub
mov
push
shr
xor
jle
adc
int3
les
cld
mov
psadbw
sbb
sub
sub
and
subl
aas
pop
mov
mov
fildll
or
add
hlt
jl
fcom
cmp
popf
push
jne
sub
sub
sub
or
jmp
rcll
mov
sahf
push
je
jp
sub
dec
nop
stos
push
sub
push
inc
data16
fmuls
jo
psubsw
popf
push
sub
ss
mov
sub
in
aas
dec
mov
mov
addl
pop
and
pushf
lea
mov
rol
scas
arpl
pop
cmpsl
cmp
fdiv
in
sar
dec
sub
outsl
in
scas
sub
sub
sub
outsb
cwtl
inc
sub
pop
or
lret
ds
inc
sub
insb
test
xchg
fisubrs
push
lods
adc
or
mov
and
sub
imul
sub
and
stos
sbb
cmpsb
mov
sub
add
mov
push
push
mov
je
cld
add
mov
fisubrs
sbb
rclb
adc
das
scas
sub
cmp
cmpsb
dec
mov
inc
lcall
fcomip
inc
fnsave
and
cmp
shlb
adc
jg
fsubs
mov
push
lea
scas
jns
andl
repz
loopne
cmpxchg
add
dec
pop
sub
ss
lahf
sub
sbb
std
and
mov
or
pop
adc
add
mov
out
or
add
push
and
jge
dec
jle
shrb
into
fdivs
ljmp
or
jae
sarl
lds
or
lods
nop/reserved
outsl
pusha
mov
sub
cmpsb
dec
jge
push
mov
dec
fistl
popf
jp
sbb
pop
cmpsl
das
xchg
sub
pusha
xchg
mov
hlt
pop
shll
push
adc
add
mov
xor
hlt
mov
sbb
sub
jle
pop
test
xchg
shll
pop
mov
sub
pop
mov
sub
fisubl
gs
popa
push
push
xchg
cmp
mov
jnp
xchg
je
or
xor
lahf
push
push
mov
and
repz
insb
rclb
and
divb
sbb
xor
iret
cmp
popa
fstl
mov
push
stc
jnp
aas
sub
sub
cmc
lods
lea
and
fistpl
xor
sub
les
inc
pushf
and
sub
push
divl
dec
lret
xor
push
push
jo
pop
sub
imul
push
push
and
mov
movsb
xor
adcl
imul
aad
jns
loopne
mov
sub
mov
iret
outsl
jne
sub
test
push
xchg
sub
repnz
cmp
in
and
sub
arpl
sub
mov
push
mov
fstp
mov
ds
add
pop
cmpsl
aaa
dec
jbe
dec
push
rol
test
mov
pop
push
cmc
sub
leave
cwtl
imul
xor
jmp
sub
push
fstps
inc
fwait
aas
repz
sub
sub
pop
ret
sub
cmc
ss
sub
push
mov
sub
jmp
and
sub
and
xchg
loope
jns
popf
xlat
nop
leave
outsb
imul
ret
adc
stos
xchg
push
insb
loopne
mov
cmp
loop
push
das
ret
dec
test
sub
cli
xchg
sub
ss
mov
cld
int3
mov
mov
shrb
inc
sub
and
inc
pop
jl
dec
sbb
mov
sub
push
in
subl
rcrb
das
push
mov
sub
aam
loop
push
aaa
xchg
rcr
and
mov
bound
cmp
sub
in
xor
enter
pop
movsl
sub
add
sub
pushf
add
loope
or
hlt
cmp
sub
xor
ss
fcmovb
push
test
inc
std
pop
addr16
sub
cmp
sbb
sub
adc
pop
sub
cmc
ror
xlat
xchg
sbb
cmpsl
sub
imul
jne
jno
icebp
sub
dec
xchg
mov
in
ja
add
sub
out
mov
shrb
cmpsb
lea
or
add
mov
cmp
or
std
add
and
push
mov
jecxz
int
sub
ljmp
dec
iret
adc
jae
adc
hlt
stos
imul
push
xor
adc
mov
aas
mov
repz
daa
fisubrs
subb
and
shll
and
les
pop
pop
popf
mov
int
cmc
cs
mov
mov
sub
xor
pop
sub
sub
lahf
pop
add
jno
jbe
jp
int
dec
mov
repz
and
loopne
mulb
jecxz
sub
loop
shll
sub
mov
jle
fstl
sbb
adc
rcrb
mov
sub
dec
inc
scas
fldt
aas
jge
inc
aad
xchg
into
cld
in
sub
pop
mov
and
lds
nop
cmpl
popf
cwtl
in
mov
pop
sub
inc
test
dec
jns
outsl
in
add
dec
cmpsb
sub
and
jle
arpl
mov
and
xchg
sbb
cmp
cmpsb
xchg
xor
sub
cmp
adc
mov
sub
jecxz
cwtl
std
and
mov
mov
sub
and
xor
hlt
xchg
das
inc
aaa
mov
mov
sub
in
fsubrs
popa
push
xchg
cmp
pusha
test
add
shlb
and
jo
sbb
sub
and
cld
xchg
sub
in
stc
test
sahf
add
jg
adcl
pop
data16
pop
test
sub
xchg
add
sub
daa
cmc
adc
outsl
test
sub
dec
jae
dec
pop
pusha
xchg
sub
jecxz
shll
push
pushf
push
inc
test
leave
roll
pop
xor
pop
outsb
jns
mov
scas
lods
mov
pop
mov
push
out
sub
int3
adcl
ljmp
pop
iret
sub
inc
repnz
inc
mov
jge
out
adc
sub
mov
push
iret
jle
add
mov
repnz
sub
or
dec
lods
jo
and
jl,pn
sbb
in
out
into
jnp
dec
sub
jb
mov
int3
pop
cmpsl
and
push
setnp
or
inc
sub
or
test
mov
mov
popa
mov
loopne
movsl
ret
pop
adc
and
push
jae
cmp
push
dec
xor
sub
aam
mov
sub
sub
js
mov
jmp
pop
daa
inc
push
mov
xor
adcb
js
xor
in
pop
mov
sub
add
pop
or
insb
subb
ret
push
data16
fstpt
inc
sub
scas
outsb
imul
int3
shll
clc
mov
data16
addr16
fildl
test
negl
pop
sub
jge
inc
fs
cli
mov
repz
ds
cmp
stos
stos
and
push
fadds
mov
pusha
in
push
sub
push
imul
ljmp
in
xchg
add
push
jp
sub
sbb
cmp
push
sbb
sub
fistpl
pop
es
pop
je
dec
sub
popa
arpl
and
inc
cwtl
adc
test
jnp
sbb
xor
add
push
gs
sub
mov
sbb
imulb
mov
xor
fistl
sub
xchg
jo
jg
sub
lods
jmp
and
cmp
jle
sub
fsub
jp
sub
dec
call
lods
lds
mov
bound
mov
dec
xchg
cmpsl
push
sbb
test
insl
push
sahf
xor
sbb
mov
std
int
sti
scas
sub
dec
add
push
fisubs
sub
cs
gs
add
mov
jnp
push
jge
dec
sub
jo
js
sub
and
out
sub
dec
mov
mov
inc
in
push
sbb
fbld
sub
popf
xchg
icebp
dec
ret
shrb
jnp
addr16
pop
test
insb
adc
nop
xor
jecxz
adc
setno
lods
outsb
lcall
in
lret
push
ss
into
mov
sbb
mov
sub
jmp
addl
sbb
out
lds
sub
jge
cmp
xchg
hlt
xchg
loopne
in
insl
ljmp
sahf
push
lea
scas
push
jp
sub
int
xchg
cmp
out
jge
movsl
cli
sub
test
sub
in
outsl
adc
inc
lods
cmpsb
stc
vshufps
sub
arpl
movsl
das
inc
insl
int3
xor
or
pushf
sub
and
sarl
pop
dec
mov
xchg
mov
mov
fcoml
mov
pop
dec
and
fisubs
fwait
pop
shrb
adc
xchg
cmc
cli
std
sub
stc
test
mov
sbb
xchg
in
in
call
stos
adc
jp
and
test
popf
jecxz
mov
sbb
je
fdivrs
pop
lahf
les
ss
icebp
adc
push
pop
mov
inc
sbb
sub
fisubrs
ljmp
xorl
stos
push
sub
aad
pushf
sub
jb
lret
mov
xor
jge
arpl
popf
push
sub
adc
pusha
mov
sub
sub
loop
cld
mov
sub
aad
lods
sub
dec
sub
jne,pt
adc
and
jg
sub
ljmp
je
dec
cmp
inc
sub
add
outsl
xor
lea
test
scas
fildll
in
pop
imulb
push
fcmovbe
insb
xor
stos
dec
jecxz
andl
sbb
scas
mov
xor
rol
pop
mov
ret
xchg
dec
sub
ret
add
sub
call
adc
dec
les
mov
jecxz
jecxz
out
int3
fwait
leave
sub
add
sub
cmpsl
aad
push
mov
mov
adc
mov
mov
mov
into
lds
mov
and
jl
dec
daa
dec
ljmp
fwait
sub
mov
ja
int
jns
xor
sub
push
es
pop
lcall
data16
and
into
dec
cmp
jle
sub
stos
cmp
sub
pop
sub
or
lret
stc
mov
clc
push
test
outsb
adc
inc
cs
sbb
jne
sti
sub
sub
cmpl
dec
xchg
mov
mov
movsb
sub
mov
repz
insb
or
cvtps2pi
popa
dec
xchg
mov
add
int3
xchg
cld
pop
push
or
jne
xchg
outsb
ljmp
mov
mov
mov
sub
cmpsl
in
sbb
cmpl
in
adc
xchg
or
push
std
xchg
mov
push
aas
and
pop
sbb
sub
xor
xchg
sub
fdivrl
sahf
adc
movsl
sub
and
icebp
add
inc
mov
lods
fldenv
xchg
jle
add
mov
mov
shlb
cwtl
addr16
mov
mov
add
or
inc
jmp
push
jecxz
andl
xor
xchg
int3
mov
sub
mov
mov
pop
out
insl
jns
jle
xchg
sti
dec
sub
xor
das
xchg
adc
bound
push
daa
mov
lret
in
gs
cs
add
lahf
mov
test
dec
sub
lock
daa
or
imul
int
loopne
sub
push
fsubl
and
sar
int
subb
or
pop
sub
fs
ds
int
sarl
sub
sub
cmp
sub
inc
out
es
sub
ss
popa
insb
mov
add
pop
test
rorb
push
pop
and
inc
mov
lds
sbb
and
sahf
and
pop
mov
push
mov
or
out
jecxz
lock
fucomp
andl
push
add
mov
iret
xor
test
mov
mov
lcall
cmpsl
cmpsb
add
adc
cld
cld
popa
movsb
sub
mov
sub
sbb
iret
jle
das
cmp
clc
xchg
fldt
sub
shll
cmp
sub
add
clc
mov
pop
and
and
add
das
and
cmp
or
xchg
sbb
mov
mov
inc
in
sub
pop
push
mov
sbb
push
pop
lcall
jle
dec
cmc
and
mov
stos
sub
jl
insb
lods
xchg
arpl
sub
jns
xor
sub
xchg
loope
xor
fbstp
ljmp
fstps
add
hlt
jb
pop
sbb
sub
dec
and
xchg
fucomi
arpl
jae
sub
out
jecxz
lcall
pushf
jp
fistpl
push
das
push
sub
in
loop
adc
mov
push
addr16
sub
sbbb
lock
int3
jl
pop
sahf
movsb
setge
cli
je
xorb
adc
and
xor
xor
lea
das
data16
fisubrl
mov
push
lcall
fidivrl
jmp
daa
mov
and
in
sub
in
pop
sbb
mov
pusha
mov
mov
sub
fwait
jmp
aad
aaa
mov
int
dec
loope
sub
mov
pop
push
push
xor
sub
movsl
jns
jl
idiv
xlat
lcall
pop
xchg
sub
xor
je
sub
pop
pop
pop
jns
mov
mov
in
leave
sub
aad
xlat
push
jbe
sub
inc
int3
outsb
xchg
sub
jns
xor
dec
fs
ret
push
lcall
loopne
or
mov
ja
daa
sub
push
sub
jne
subb
sub
imul
sub
mov
clc
jmp
mov
jg
sub
pop
pusha
sbb
sub
jb
subl
pop
lcall
sbb
cmpsl
aam
dec
sub
mov
cmc
fldcw
dec
xchg
es
aaa
xchg
xchg
out
in
ljmp
adc
mov
fsubl
mov
pop
ss
aam
jecxz
sti
push
add
adc
andl
add
xchg
les
sub
adc
and
push
cmpsb
jecxz
sbb
in
mov
sub
mov
dec
nop
shl
into
js
dec
mov
jns
fucomp
push
out
sub
dec
xchg
popf
leave
sub
ja
ljmp
out
jae
shlb
xchg
bnd
call
xor
out
lods
cmpb
sub
xor
sub
out
push
enter
jno
cmp
mov
jnp
push
or
sahf
dec
inc
les
mov
xor
adc
test
adc
lret
xchg
dec
cmp
and
iret
sub
mov
xor
sub
outsl
add
decb
call
roll
popf
adc
sub
pop
adc
and
dec
lock
aam
clc
popa
jg
ss
and
push
dec
inc
add
cli
and
scas
mov
scas
mov
sbb
push
push
out
pop
push
sub
mov
into
test
mov
sub
mov
cmp
imul
movsb
xchg
out
push
cli
inc
push
lret
sub
pushw
xchg
sub
fdivp
mov
sub
enter
sub
xor
in
sbb
pop
push
and
scas
push
sub
pop
test
dec
pop
jg
in
lods
outsl
push
ror
jl
and
cmpsb
addr16
out
mov
push
and
xor
mov
shrb
sbb
pusha
mov
sahf
mov
mov
adc
mov
ss
hlt
push
sub
jle
and
push
repz
out
mov
jne
xchg
dec
and
sti
push
or
in
jmp
jle
push
mov
xor
jnp
lahf
sub
je
push
dec
push
ret
xchg
jp
sub
add
sub
ljmp
imulb
test
mov
sub
popa
cli
insb
mov
mov
jno
test
loopne
lods
test
fstps
cli
clc
sub
dec
dec
jb
sub
jae
mov
sub
jecxz
xchg
sub
mov
stos
or
push
sbb
mov
sbb
pop
push
adc
repnz
cmp
push
push
inc
push
in
jne
sub
xchg
push
movsb
fisttpll
sub
inc
mov
cmp
test
mov
fimuls
movsw
vphaddubd
popf
iret
or
lods
jg
lret
push
fiaddl
ja
sub
or
cmpsb
cmp
jle
and
jo
jnp
sub
js
lds
sub
gs
push
sub
je
fwait
mov
adc
fs
test
faddp
outsb
adc
sub
jb
into
xchg
sub
movsl
and
jmp
testl
lret
sub
inc
xchg
outsb
aad
xor
xor
mov
pusha
ja
pop
call
sub
test
sub
xlat
mov
aad
adc
lahf
in
out
fisubrs
nop
jmp
cli
jecxz
ret
lods
lcall
loopne
or
mov
jo
cmp
adc
sub
lock
adcb
loopne
pop
jae
imul
jnp
lret
repz
clc
daa
andl
addr16
das
inc
jae
popa
sub
sub
insb
stc
sub
fs
pop
xlat
pop
mov
dec
sub
sub
lea
sub
fcomps
jmp
lock
sub
mov
xchg
push
out
xchg
call
cli
loopne
sti
ja
mov
xchg
pop
add
mov
sub
jnp
loope
sub
mov
push
xor
pop
mov
subl
sub
movl
mov
std
clc
sub
lods
ret
int
push
aas
sub
mov
xor
sahf
js
gs
addr16
mov
repz
add
sub
adc
inc
imull
xor
mov
fsubrl
gs
xchg
adc
jmp
xchg
ljmp
mov
or
popf
clc
out
loopne
andb
push
cltd
mov
sub
fldt
or
jno
scas
mov
pushf
mov
sub
adc
insl
mov
cmp
in
sub
rdtsc
int3
std
sub
popf
bound
sub
loop
xchg
loope
insb
cs
mov
fidivs
cmpsb
push
mov
sub
sub
into
sub
fs
roll
cmp
pop
sub
pop
cltd
add
sub
std
mov
lods
sub
cmp
pop
sub
push
out
int
call
jae
repz
pop
mov
cmp
mov
add
cwtl
mov
cmp
sub
jp
nop
ror
cmp
sub
lcall
xchg
push
fldt
shlb
jge
out
xchg
out
ret
or
cld
in
sub
sahf
shl
int
scas
pop
daa
pop
cmpsl
dec
in
ljmp
pop
push
pop
pop
sub
xchg
test
in
fisubrs
adcl
shll
cld
push
fldcw
adc
cmp
arpl
fstpl
sub
adc
scas
daa
sub
call
add
rcr
mov
sub
and
mov
hlt
rsqrtps
jecxz
and
pop
js
cmp
les
shlb
cmp
jmp
pop
arpl
mov
outsb
cltd
or
in
push
cmp
mov
scas
mov
test
enter
jp
bswap
aaa
inc
cld
in
sub
xchg
ficoml
insb
sbb
jmp
inc
sbb
repz
test
xchg
popa
cmpsb
lahf
jecxz
iret
mov
dec
subb
adc
or
dec
dec
in
cmp
sub
outsl
les
mov
lret
jecxz
cld
sbb
shrb
pushf
sub
inc
push
inc
push
sub
jle
cmpl
push
sbb
sub
mov
push
lods
xchg
cld
adc
sub
lea
sub
mov
decl
sub
xchg
clc
sub
es
lea
pushf
push
insw
xchg
jg
sbb
sub
push
sub
call
arpl
dec
ret
int3
lret
or
fnstcw
stc
mov
jle
ss
mov
lds
sub
dec
mov
cmp
jae
pop
mov
aad
dec
aaa
rol
cs
out
cmp
or
push
push
leave
inc
xchg
mov
inc
imull
cld
mov
push
push
mov
and
sbb
mov
mov
cmpsl
adc
inc
lahf
movsb
fiaddl
push
aam
mov
push
mov
adc
sub
mov
push
fnstcw
jg
loopne
adc
cltd
movsb
jnp
subl
pusha
stos
sub
xor
icebp
and
bound
pop
stos
xchg
int
sbbb
mov
jno
sub
fsubs
clc
fisubrl
sub
roll
pop
dec
sbb
sub
sub
pushf
pop
lock
sub
sub
mov
popa
add
pop
out
mov
xchg
pop
dec
xchg
push
es
xchg
rcll
xchg
lock
jne
xchg
mov
mov
out
inc
dec
cwtl
loope
nop
push
xor
cmp
mov
les
popa
jo
pop
sub
pop
inc
xlat
inc
std
xor
adc
ss
sub
sbb
push
sub
push
mov
aad
in
inc
das
xor
ror
out
add
pop
xor
xchg
icebp
sub
sbb
pop
mov
and
jne
out
sub
pop
out
movsl
sub
fwait
je
xchg
fmul
sub
sbb
sbb
push
xchg
test
or
pop
imul
xor
mov
xor
push
cmp
xor
inc
jne
stc
sbb
inc
sub
mov
cmp
bound
or
push
sub
jnp
mov
sbb
clc
push
out
sub
in
dec
mov
out
into
sub
push
test
sub
shr
pop
sub
mov
inc
mov
xchg
filds
xchg
fldcw
dec
out
pop
pop
lods
and
xor
arpl
dec
sub
int
mov
fcomps
sub
outsb
cmp
xchg
xor
pop
insl
push
inc
enter
pop
sbb
les
push
shrb
in
imul
mov
or
inc
adc
jmp
cmp
fsubrs
xchg
pop
xor
push
shlb
xor
loopne
or
jne
mul
icebp
cmp
ljmp
subl
repz
pop
cmc
sti
sub
mov
cmpsb
sub
jmp
push
adc
cmp
xchg
fcmovnu
stos
fsubrl
cmpsb
dec
sub
inc
sbb
aad
push
mov
sub
xor
sub
aam
lds
xor
pop
pop
hlt
dec
cmp
jnp
stos
and
mov
xor
stos
lock
sub
mov
cld
xchg
xchg
or
in
xchg
adc
mov
lret
test
sbb
aad
lret
fwait
and
sub
loope
or
arpl
adc
mov
sub
pusha
adc
xor
adc
xorl
push
sbb
sbb
stos
sub
aaa
push
add
stos
cmc
ja
fidivrs
fldt
mov
push
lea
cmp
sub
mov
mov
push
inc
loop
inc
sub
push
add
inc
sub
xorb
adc
jne
inc
or
sub
cli
add
sub
imul
fisubs
push
movsb
dec
sub
lea
js
data16
push
iret
add
stc
test
push
jge
arpl
int3
sub
dec
movzbl
sub
jl
insl
aas
sub
in
cmp
sub
cltd
xor
subl
addl
es
dec
testb
test
dec
sub
and
jb
sub
cmp
movsl
push
sub
pushf
fwait
or
and
inc
das
stos
fisubrs
xor
xchg
sub
pop
sbb
mov
lahf
out
sub
pushl
dec
or
sbb
mov
rcr
jns
pop
stos
nop
popf
sub
sub
imulb
inc
adc
or
outsb
inc
loopne
sub
rcrb
sahf
xchg
add
loopne
dec
sub
loope
lret
mov
mov
movsb
push
adc
push
sub
addr16
push
lret
addr16
ja
jb
mov
mov
in
andl
imul
inc
dec
adc
and
adcb
sub
jp
es
hlt
out
stos
sub
pushf
stos
cwtl
sub
sti
jmp
mov
mov
out
lods
mov
mov
jle
cmp
push
and
mov
fcmovu
mov
pop
daa
fmul
jo
jle
sub
pop
add
sub
adc
in
or
roll
aas
popf
sbbb
sub
mov
mov
sub
and
xor
add
adc
push
lcall
dec
fsubl
lods
dec
addr16
xor
mov
ljmp
push
sub
mov
mov
xor
out
stos
stos
ds
test
push
xchg
jg
outsb
adc
jge
push
push
ret
add
jno
cmp
pop
xor
shr
push
fldt
pop
mov
mov
mov
and
mov
bound
daa
xchg
pop
rcr
clc
lret
sub
xchg
outsb
xor
inc
outsl
sub
testb
dec
sub
adc
insl
js
outsl
test
sbb
call
sarl
hlt
popf
mov
aam
sbbb
icebp
imull
fildll
xchg
xor
jg
loop
xchg
pop
pop
jbe,pt
fwait
pop
ror
pop
imul
repz
dec
push
cwtl
outsb
push
mov
decb
jne
sub
adc
lret
repz
shlb
xor
cmp
pusha
jecxz
out
aas
jae
std
inc
mov
dec
xchg
jge
aaa
nop
xlat
xchg
lcall
dec
cmp
ljmp
sub
imul
sub
scas
lret
jno
pusha
test
out
pop
ficoml
outsl
mov
jg
loope
jnp
push
cld
imul
adc
push
lods
sub
inc
jno
inc
sbb
xlat
daa
addl
out
ror
popf
repz
mov
inc
fcoml
xor
daa
cmc
dec
in
push
sub
cmp
xchg
xchg
sub
lcall
xchg
mov
ja
aaa
or
jns
sub
loope
lods
outsl
fidivs
sub
cmp
rcrb
sub
inc
ret
jmp
stos
aaa
sub
loop
nop
adc
sub
test
pop
sbb
xor
mov
jno
iret
push
push
add
dec
and
jge
jne
add
shrl
sub
jnp
mov
sub
cld
jae
fldenv
xchg
cmp
jecxz
rcl
pushf
lcall
push
adc
outsb
loop
jecxz
loope
or
push
push
add
xchg
lods
cltd
xchg
sub
push
sub
shll
imul
cli
xchg
sub
shll
movsl
inc
push
clc
mov
arpl
pop
int
cmp
and
lcall
sahf
iret
or
or
arpl
movsl
sub
xor
repnz
sahf
adc
and
js
cmp
mov
push
shlb
popf
sub
hlt
and
add
into
insl
fwait
nop
push
and
dec
imul
mov
jb
dec
aam
ss
stos
mov
scas
or
loopne
std
xor
fiaddl
ljmp
shll
ds
pop
vmovlps
aam
dec
or
cli
test
adc
jmp
sbb
xor
insb
jns
sub
push
jmp
ret
xor
stos
fnstenv
movsb
and
cmp
ret
push
movl
jno
pop
sub
data16
lret
inc
mov
sub
ss
xor
mov
cmp
sbb
mov
sahf
push
addl
mov
mov
sbb
aad
fstpt
add
in
fmuls
mov
sub
or
mov
ljmp
fcoml
mov
jl,pn
xor
adc
loope
dec
aam
or
push
daa
int
sub
pushl
pop
mov
cmp
rorb
pop
pop
sub
cmc
and
std
stos
sub
xchg
shrl
add
hlt
sbb
sbb
xor
add
gs
adc
push
and
nop
clc
lret
add
neg
or
or
dec
das
sbb
test
ja
and
fsub
icebp
inc
mov
dec
adc
lret
and
or
cmp
mov
imul
push
mov
dec
test
mov
inc
push
push
sbb
add
push
add
sbb
movsl
cmp
insl
cmpsb
xlat
sub
sbb
idivl
rcll
dec
sub
es
lretw
add
xor
dec
in
ficomps
and
dec
outsb
mov
int3
popf
js
pop
sub
pop
call
shll
popf
arpl
mov
mov
pop
and
fildll
imul
aaa
lds
xchg
addr16
push
jbe
push
xor
inc
mov
aad
and
in
jecxz
sub
loopne
pop
out
cmc
pop
xor
mov
sbb
mov
shrb
call
push
cmp
inc
ljmp
inc
sti
lcall
icebp
jge
push
scas
xchg
aam
sbb
lcall
fisubrl
or
sub
cmp
rcl
outsl
aad
iret
cld
shld
sahf
loopne
and
jbe
or
or
sub
inc
arpl
xchg
call
lcall
xchg
sub
jle
shrl
jae
jecxz
sub
data16
hlt
push
jns
fisttpl
inc
and
sbb
mov
out
pop
add
stos
push
sub
mov
sub
xor
in
push
mov
sub
bound
sub
je
jb
sub
lahf
lret
dec
repnz
xchg
sub
pop
sbb
xor
imul
dec
popa
xchg
cmp
mov
adc
adc
pop
stos
fnstcw
jecxz
cmc
push
mov
fistl
jno
jae
sub
xchg
or
sub
or
in
fwait
push
mov
push
arpl
nop
push
fcmovu
xor
ret
mov
xor
push
jne
outsb
mov
movsb
imull
adc
aas
call
insl
inc
inc
test
imul
sub
inc
cmp
mov
iret
das
repz
in
mov
jne
mov
and
cmp
enter
sub
arpl
les
cmp
cmp
push
jo
pop
fwait
and
sub
imull
mov
xlat
mov
daa
xchg
leave
pop
lcall
mul
pop
or
cmpl
mov
out
and
mov
sub
sbb
sahf
daa
inc
ljmp
xlat
fnstenv
int
jmp
pop
jb
stos
into
dec
lret
sub
xor
jmp
sbb
lcall
ds
jo
sti
fidivs
cmp
fsin
loope
hlt
mov
stos
adc
js
aam
out
adc
test
scas
jecxz
ret
lret
test
push
shl
clc
sub
cmpb
push
mov
nop
in
sub
xchg
cmp
fs
mov
shll
jb
sub
adc
sub
fisubs
dec
shll
push
pop
jo
mov
inc
cmp
sbb
pop
sti
and
xchg
cli
sub
mov
rolb
or
insl
loope
test
cmp
sub
out
pop
js
lds
sub
popf
popa
mov
hlt
in
sub
out
in
std
xor
jns
mov
scas
aas
outsl
gs
xor
lea
mov
jge
mov
int
xorl
xor
adc
div
rorb
mov
pop
stc
jbe
emms
jne
sub
out
ljmp
cwtl
repz
and
push
loope
sub
mov
fucomp
dec
xchg
mov
push
sub
mov
or
popf
and
mov
pop
bound
pop
insl
dec
jge
inc
sub
out
divb
xor
push
mov
push
enter
fisttpll
mov
fildll
flds
add
movsb
sub
loope
inc
pop
mov
dec
stos
sub
cmpb
mov
out
sub
mov
jno
inc
mov
fsubrl
xchg
fistpll
or
icebp
add
clc
lods
mov
repnz
pop
push
and
sub
push
fdiv
sbb
fsubs
scas
or
iret
sbb
in
mov
stc
rcrb
fisttpll
xchg
pushf
and
and
add
pop
shrl
jo
cld
inc
sub
sub
fidivrl
insb
cmp
mov
cmp
sahf
lds
test
orl
in
xchg
in
mov
cmp
xchg
dec
push
gs
or
push
jg
pop
sub
test
mov
push
xchg
cld
movsb
xchg
sub
mov
jnp
fists
sbb
xchg
sub
add
pusha
pop
cmp
mov
xor
jmp
push
adc
fmull
sub
mov
jle
incb
push
cmpsl
pop
adc
xchg
sub
or
mov
push
out
hlt
or
and
sbb
daa
les
mov
or
addl
xchg
je
sbb
mov
stc
sub
adc
insb
mov
mov
shlb
popf
xchg
mov
hlt
popa
aad
out
sti
dec
jo
sub
sbb
sbb
add
adc
cmc
sub
xor
fcmovnbe
add
sub
jecxz
sub
inc
add
sbb
cmp
adc
cmp
scas
aad
cmp
aaa
inc
andb
int
push
leave
fdivrs
sub
movsb
lahf
jnp
sub
adc
shrl
inc
mov
fld
push
clc
pop
push
xor
mov
or
mov
iret
dec
out
int
scas
sub
aad
xor
mov
mov
dec
imul
sub
out
addr16
mov
sbb
lds
mov
and
mov
ret
xlat
add
add
add
mov
pop
xchg
into
test
and
sbb
sub
pop
leave
loopne
sub
popf
testl
lahf
push
out
fiaddl
out
sub
loopne
out
sub
sub
out
push
dec
mov
pop
sub
daa
adc
dec
test
mov
cwtl
xlat
pop
cmpsb
jb
sbb
fcomps
ja
and
xchg
and
jmp
scas
sub
sub
stos
int3
adc
mov
pop
insb
cmp
lods
push
std
cmpsl
stos
aaa
fbstp
sbb
push
test
imul
sub
inc
mov
clc
jae
dec
adc
insl
sub
mov
aas
push
push
xor
mov
sub
scas
mov
push
xor
sub
pop
sub
and
les
or
sub
adc
ficoml
ljmp
jecxz
xchg
rclb
cmp
loope
and
mov
sub
mov
int
pushf
add
subl
roll
movl
sbb
adc
sbb
dec
inc
js
daa
lret
sub
lds
inc
mov
sub
dec
mov
rolb
mov
in
fnsave
test
push
dec
sub
ja
lods
xchg
xor
jo
sub
cld
inc
gs
sub
stos
xchg
popa
or
cmp
pop
ds
mov
mov
fstl
push
pop
popf
pop
jno
xor
xchg
movsb
mov
xchg
or
insl
jp
xchg
sbb
mov
repz
mov
fdiv
mov
mov
roll
cmp
mov
imulb
fcoml
sub
or
call
xchg
inc
or
mov
dec
stos
pop
sub
pop
push
cmpsl
xor
cmpb
and
add
ljmp
int
pop
mov
repz
lods
outsb
push
popf
and
dec
insb
xor
lea
mov
mov
repnz
pushf
shrb
lods
dec
dec
cmp
xor
test
repz
gs
cli
sbb
sub
add
sub
movl
fimull
cmp
cmc
in
sub
push
cltd
push
gs
scas
sub
jecxz
lds
sub
outsl
rcr
mov
dec
push
sub
cld
push
aad
sub
arpl
add
sbb
jl
and
xchg
stos
pusha
les
inc
pop
ret
shlb
in
jg
sub
xorl
hlt
ljmp
shlb
sub
addr16
stos
xor
mov
stos
int
mov
xchg
fst
mov
or
push
stc
sub
or
inc
subb
test
jo
jp
cmpl
sbb
lahf
sbb
dec
stc
mov
shrl
jnp
subb
xor
cld
sub
push
mov
cmp
sub
aas
rolb
sbb
sbb
push
jae
mov
imul
les
mov
mov
xor
movsl
loop
ret
sub
out
push
es
sub
mov
adc
sub
loop
hlt
mov
aam
mov
xchg
cli
sub
daa
test
sub
std
push
push
sub
dec
or
sub
jmp
xchg
mov
iret
and
jecxz
sbb
sbb
sub
repnz
cmp
inc
and
pop
in
xor
cmp
repnz
jno
sub
and
lret
cmpsb
fcomi
fwait
sub
mov
in
cmc
mov
pop
or
cli
jb
stos
test
mov
lret
dec
enter
cmp
jno
sbb
and
sbb
jo
mov
push
lahf
pop
adc
mov
mov
jle
cmp
cs
mov
inc
inc
pusha
jp
and
lea
nop
mov
les
lret
push
mov
push
jne
dec
aad
fstl
in
loop
and
pop
sbb
sbbb
mov
imul
mov
mov
ret
push
adc
rcrl
xor
inc
mov
sahf
sbb
mov
sub
inc
mov
fs
pop
clc
sub
mov
aad
in
sub
imul
pop
lock
sub
bnd
dec
sub
test
sub
mov
fcoms
mov
xor
loope
jae
ds
adc
sub
adc
ret
xor
test
in
pop
sub
leave
std
dec
out
sub
jl
jae
sub
sbb
cwtl
in
sub
xor
mov
mov
rorb
test
sbb
inc
in
icebp
sub
or
arpl
mov
xchg
push
notl
pop
out
shlb
sub
mov
sub
pop
xchg
out
es
pop
push
sub
sbb
xchg
mov
mov
aaa
lods
mov
js
jns
and
addb
sbb
cltd
rorb
mov
xchg
daa
sbb
lret
sub
addl
xor
pop
divb
pusha
adc
push
js
aaa
arpl
call
fisttpll
push
jnp
movsb
sub
pop
or
out
xor
les
mov
sub
pop
mov
outsb
sbb
mov
in
xchg
test
insl
sub
shlb
mov
adc
xchg
jle
imul
shrb
sub
ror
adcl
and
gs
roll
jne
inc
fnstcw
and
pop
sub
add
jbe
jb
ficomps
scas
mov
sub
cmpsl
and
in
xor
sub
push
push
xor
scas
outsl
sti
add
push
pop
jns
sbb
pop
loopne
into
sub
in
cld
xchg
push
lock
inc
add
mov
sub
imul
mov
add
pusha
mov
cmpb
jno
sub
lcall
fdivl
sub
inc
loop
push
cmpl
mov
mov
xchg
and
jg
jl
jne
push
cmp
sub
and
sub
subb
pop
fistpl
insb
stc
cmp
cmp
arpl
jmp
sub
mov
stos
xor
popa
hlt
push
mov
or
inc
sub
adcl
fsubrl
adc
dec
out
sbb
cmp
pop
xchg
out
and
cli
push
lret
and
mov
pop
xor
pop
lahf
sub
cmp
daa
cli
sub
adcb
lret
jge
jne
sub
adc
movsb
shlb
push
xchg
adc
push
pop
and
inc
and
stos
scas
adc
lea
sub
out
jno
sub
xor
and
ljmp
repnz
sub
and
inc
xor
mov
stos
test
pusha
sub
leave
lods
cltd
mov
jmp
sub
hlt
fwait
mov
and
outsl
xchg
dec
or
jg
sbb
pop
adc
push
leave
push
out
data16
and
dec
lcall
sbb
sub
sub
xor
adc
negb
popa
lret
dec
enter
inc
daa
std
fidivl
push
pusha
sub
inc
mov
les
adc
pop
mov
jmp
ret
inc
lcall
je
or
cmpsl
sub
cmp
subb
jecxz
xchg
subb
xor
imul
lret
sti
xor
lea
inc
adc
iret
sub
inc
inc
cmc
xor
xor
imul
ljmp
sub
aad
fmull
sub
testb
ja
fdivs
dec
inc
lock
or
sub
mov
sbb
ljmp
popf
das
xchg
sub
add
or
push
loope
adc
cmp
enter
cmpsl
dec
push
std
andl
popf
rcr
jo
pop
jnp
sub
dec
pop
xchg
hlt
xchg
sub
cmpsb
imul
sub
sbb
sbb
hlt
sub
repnz
lds
sti
shlb
pop
repz
lods
int
cmp
dec
push
test
iret
call
repz
out
mov
or
sub
or
addr16
sub
ds
dec
push
adc
test
sub
das
sub
jno
rcr
enter
mov
sti
sub
lds
lcall
fdivl
sub
mov
int3
sub
mov
lret
push
test
mov
mov
dec
aam
idiv
notb
add
and
lret
jns
push
mov
adc
mov
call
and
mov
mov
cld
fists
ljmp
dec
mov
jbe
lods
sub
jg
inc
xchg
push
pop
in
inc
sub
sub
dec
ret
repz
push
xchg
adc
pushf
outsb
add
sub
std
out
sub
mov
sub
mov
shl
sub
and
cmp
mov
xor
out
in
mov
sbb
and
cmpsl
sub
xchg
mov
xchg
pusha
int3
mov
cmpl
scas
cmp
xchg
in
xor
enter
jg
xor
test
call
std
cmp
sub
mov
inc
cld
sub
jle
iret
fbld
sub
cmp
das
sbb
roll
shlb
add
jl
lcall
and
hlt
pop
cltd
test
dec
sbb
testl
push
out
test
sbb
call
mov
sub
or
ror
sub
push
jb
or
test
cmp
pop
cmpsb
sub
push
loop
push
in
push
lahf
sub
add
pop
adc
xor
xchg
jnp
sub
sti
inc
xor
sub
jo
popa
mov
or
xor
sub
add
adc
push
push
mov
not
fstpt
daa
jae
mov
xchg
sub
imul
sub
pop
aam
cwtl
aam
lahf
rcl
lock
sbb
xor
aad
and
xorb
push
fstps
pop
je
int3
inc
lods
shld
imul
repz
dec
push
imul
inc
mov
movsb
jne
xor
mov
shrb
add
push
mov
mov
repnz
sbb
pop
and
rcr
mov
sub
mov
lds
adc
mov
xor
mov
ljmp
push
dec
ss
popa
sbb
lods
or
aas
pop
jp
xor
test
clc
dec
mov
movsl
loope
push
idiv
shll
pop
lret
and
cmp
adc
std
enter
push
testb
sub
je
aam
mov
ror
ret
cmc
daa
xlat
jl
shr
dec
sub
push
xchg
out
jns
sub
jmp
popf
and
stos
fs
pop
insb
loopne
add
push
nop
fldcw
stos
scas
pop
lock
xchg
mov
imul
ret
mov
clc
ss
mov
xlat
fildll
inc
cmp
and
leave
loop
cmpl
adc
jns
jge
aad
cmp
sub
add
shll
sub
lock
sub
imul
jp
mov
xchg
test
sub
cmp
or
mov
int3
test
sar
sub
cmp
push
cmc
fs
or
cltd
mov
cwtl
jo
pop
dec
cmp
sub
std
mov
hlt
sub
push
aas
adc
popf
push
enter
ja
jb
mov
dec
inc
sub
shlb
add
mov
xchg
icebp
mulb
mov
pop
lcall
xchg
sub
test
out
jb
int
push
cltd
sub
sti
sub
popf
out
sub
xchg
test
pop
cld
stos
imulb
jns
out
xchg
cwtl
mov
push
nop
xor
and
mov
lods
pop
sub
fadd
scas
insl
sub
in
xchg
sbb
mov
sub
ud1
or
ds
insl
jmp
gs
add
cmp
ficoms
adc
out
adc
sub
mov
ret
sub
adc
arpl
xchg
push
sub
mov
sti
ret
stos
fbld
adc
xlat
lret
sub
in
jg
test
pop
pop
icebp
call
inc
int
lods
pop
fsubl
sub
sbb
aam
add
and
sub
pop
mov
jo
cli
mov
shl
add
and
insl
and
xchg
shl
hlt
and
inc
mov
and
jge
cmpsl
ljmp
sub
sbb
sahf
xchg
mov
mov
or
xchg
fiaddl
mov
ss
sbb
fisubs
fstps
add
enter
into
inc
xor
and
ret
sub
arpl
and
sbb
sub
aas
xchg
sbbl
sub
pop
je
sahf
sub
mov
in
rorb
hlt
and
and
clc
and
sbb
jle
jnp
sub
out
scas
xchg
push
sub
xchg
push
cmp
push
enter
in
sub
mov
das
mov
inc
sub
pop
cmpsb
je
and
stc
mov
fimull
fisubrl
roll
lcall
test
fmul
sub
in
jl
sub
mov
cmp
mov
add
or
mov
xor
dec
cmp
cs
ljmp
xchg
sub
int3
jecxz
lods
sub
add
imul
jecxz
loop
cmp
jbe
cltd
fsub
push
mov
sub
jae
ret
adc
les
pop
sarl
into
movsb
inc
into
dec
adc
adc
push
shrb
aam
sub
push
adc
lea
xchg
and
and
cmpsl
mov
lods
push
hlt
inc
ret
sub
repnz
fistpll
dec
mov
sub
scas
mov
mov
in
aad
jbe
lds
ret
pusha
sub
add
cli
test
fwait
and
aaa
cmpsb
fcmovnbe
dec
xor
sub
lahf
pop
aas
jp
lea
mov
leave
ljmp
and
ljmp
jb
lret
inc
lea
sbb
xor
lds
sub
dec
adc
into
stos
daa
scas
in
sub
xlat
jnp
push
xor
inc
jle
pop
and
sub
inc
cmpsb
nop
dec
pop
adcl
pop
sub
jbe
lcall
mov
sti
loopne
sbb
sub
pop
push
mov
pop
sbb
lods
lret
sub
ret
subl
lret
bound
in
les
pusha
flds
or
aad
mov
adc
rorl
lock
mov
and
cmp
jp
mov
jne
sub
sub
inc
arpl
mov
mov
jae
vphsubbw
daa
out
pop
xor
push
jmp
addr16
push
or
add
int
scas
sub
sbb
std
add
fsubrl
mov
aas
push
sub
pmulhw
fildll
cld
mov
cltd
mov
cmpsb
in
test
aad
sbb
inc
inc
icebp
js
inc
dec
cmp
add
ja
xor
loopne
out
ret
shrb
cmp
mov
dec
lea
pop
and
out
ss
popa
test
add
ret
mov
push
xchg
jno
or
hlt
add
pusha
lcall
shlb
adc
inc
or
and
xor
ret
mov
test
xchg
enter
stc
sub
add
adc
mov
iret
sub
dec
jp
int3
sub
js
mov
movzbl
add
sub
popf
negl
shlb
movsb
pop
push
jge
ffreep
mov
dec
dec
cmpsb
pop
outsl
sub
jg
out
sub
jbe
or
mov
repz
shr
smsw
lds
insb
or
sub
test
inc
sbb
sub
mov
shl
lea
cs
add
inc
rcr
clc
sub
inc
iret
xor
int3
scas
sub
test
xchg
push
adc
sub
sub
in
scas
sub
push
or
inc
out
cmp
fwait
and
scas
dec
or
pop
mov
fisubl
into
jecxz
ljmp
lods
arpl
inc
mov
sub
sbb
pop
and
xchg
sub
mov
dec
shrl
add
add
hlt
negl
or
jmp
jb
inc
mov
sub
cmpsb
dec
out
jo
shlb
mov
sub
mov
sub
nop
inc
in
adc
sub
pusha
inc
mov
test
aad
xchg
je
pusha
cltd
ret
jmp
xchg
xchg
leave
test
into
adc
out
xor
xor
adc
xor
push
mov
inc
popa
sub
push
test
sub
addr16
iretw
jg
adc
fildll
dec
cld
fisubrs
fninit
push
ret
xor
push
xchg
fcmove
push
cs
or
jl
dec
sub
mov
push
das
jae
fwait
arpl
fs
test
lods
mov
lock
xor
xor
xchg
call
pop
movsb
or
cmp
imul
pop
sub
cld
fisttps
xchg
dec
inc
mov
iret
ret
sub
aaa
out
fidivl
add
sub
dec
rcrl
push
sarb
mov
fisubrl
xchg
fadd
adc
mov
or
xchg
inc
sub
dec
mov
imul
cli
jns
mov
test
fwait
sub
leave
lods
cmpsl
sahf
sub
divl
js
or
add
sub
negb
mov
and
les
add
sbb
pop
xlat
adc
aam
inc
jecxz
pop
sub
push
or
scas
pop
and
jg
rolb
jns
jno
nop
pop
jmp
out
inc
sub
loope
imulb
out
or
sub
mov
and
sub
gs
out
subb
dec
imul
mov
mov
sbb
adc
addr16
nop
and
cs
cmp
cld
sub
mov
fs
mov
imul
sub
push
movb
push
fadds
jp
fistl
ret
dec
pop
stos
loopne
aad
mov
daa
push
jns
xchg
pop
lds
ret
sti
mov
dec
outsl
xor
and
ret
sbb
hlt
jns
sub
push
fwait
xchg
cmpsl
sub
pushf
xchg
cmc
pop
sub
addr16
lds
into
out
lcall
or
aas
sub
xor
jmp
movl
aam
shrb
jg
fiaddl
int
icebp
ficoms
fwait
xchg
sbb
and
rclb
and
lret
aam
cwtl
dec
and
sub
or
andb
ds
hlt
nop
push
sub
and
push
jmp
jno
pop
xlat
dec
in
xchg
shlb
sahf
jecxz
push
push
cmc
insl
sub
jl
pusha
sbb
mov
push
and
sarb
lret
dec
idiv
cs
outsb
sub
sbb
jns
loope
sysret
ja
jg
sub
mov
mov
jmp
xchg
xor
mov
sub
mov
pop
fists
pushf
dec
xor
xlat
cmp
movsl
lods
sub
ss
pop
sub
or
ror
sub
mov
or
cmp
outsb
test
xchg
pop
mov
ss
inc
jo
mov
ret
and
loope
sub
add
in
adc
xor
negb
sub
pop
mov
rcll
add
out
sub
aas
inc
ja
sub
fidivrs
push
sbb
scas
pop
lds
jne
sub
mov
pop
cmp
xor
cwtl
jnp
push
stc
mov
scas
nop
pop
xor
xor
outsl
jl
sbb
ljmp
xor
mov
pop
arpl
push
push
inc
sub
sbb
xchg
aas
add
aad
sub
daa
lods
mov
aad
rorl
es
add
sub
ret
hlt
scas
adc
shll
lea
in
push
jp
push
out
sbb
pop
and
shll
dec
or
sub
mov
insl
sub
out
repz
je
inc
hlt
xor
and
mov
fwait
adc
mov
xor
push
sbb
sub
and
cmp
mov
cs
sub
cli
add
jae
inc
cmc
mov
add
lret
adc
int3
stos
pushf
and
jecxz
adcb
pop
xchg
adc
pop
imul
xor
sub
mov
pop
enter
sub
sub
dec
push
pop
movsl
sub
adc
pop
add
lahf
cli
push
imulb
test
dec
inc
rcr
push
inc
test
adc
pop
cmpsb
and
xchg
sub
pop
sub
sub
sbb
sbb
mov
jmp
int3
cmc
sub
sbb
push
sub
mov
xchg
test
fwait
sub
aaa
xchg
jne
xchg
dec
sub
cld
test
mov
mov
inc
sub
leave
lock
sub
not
mov
sub
push
movsb
add
adc
jae
sub
mov
mov
pop
ret
sub
daa
popa
js
sub
xlat
mov
jle
jmp
jecxz
inc
daa
repnz
and
fimull
nop
jnp
push
mov
or
ret
cwtl
add
popf
mov
int3
or
lcall
pop
jmp
bound
push
xchg
test
or
js
adc
in
sub
mov
clc
gs
or
out
sub
jge
mov
aas
xchg
sub
sub
pop
adc
dec
sub
lea
mov
test
cmpsb
sub
lock
jnp
dec
cmp
add
mov
xor
jmp
popf
inc
sub
xor
or
stos
inc
xchg
loope
shrl
in
sub
mov
inc
mov
cli
jo
sub
in
test
fisubrs
std
jbe
daa
adc
movsb
and
lock
xor
sbb
gs
setb
rclb
mov
add
insl
lods
mov
pop
sub
test
dec
xchg
sub
mov
mov
adc
cmpsb
jae
fmuls
pop
jge
out
and
rcll
sub
mov
push
stos
mov
mov
call
sub
das
sbb
mov
pusha
imul
insl
pop
pop
sub
aas
sbb
adc
mov
pop
push
mov
jo
popa
cs
inc
or
fisubrs
lcall
andb
sub
add
mov
sub
push
sbb
mov
fidivl
fbstp
fstpl
xor
push
dec
push
cmp
lods
push
sub
cmpsb
pop
add
xchg
movsl
push
fstl
pop
cmp
rdtsc
fsubrs
mov
mov
ss
inc
sub
mov
lods
mov
mov
and
xor
xchg
sbb
push
stos
sub
mov
inc
inc
test
and
sub
inc
leave
add
push
pop
ficoms
sahf
adc
fsubrs
out
in
lods
sub
sub
mov
sub
pop
loop
pop
outsl
sub
pop
jo
cmpsb
xor
cltd
xchg
adc
subb
inc
js
lds
sbb
mov
xchg
adc
push
jmp
imul
and
cmp
mov
or
push
jmp
sbb
sub
jne
jns
sub
cmpsl
adc
or
in
jo
add
stc
sub
or
test
mov
subb
ret
icebp
mov
aaa
push
stc
pop
add
daa
sub
sbb
mov
xor
test
fst
in
and
xchg
mov
shlb
xchg
add
inc
mulb
lods
dec
int
fistpl
xor
jecxz
cmpsl
xchg
repnz
out
adc
pushf
sub
mov
sub
les
dec
hlt
call
pop
lods
sbb
xchg
subb
xchg
jne
mov
ret
mov
xor
adc
aas
sub
sub
or
adc
rclb
and
lea
add
bound
adc
push
std
sub
outsb
sub
add
and
lds
in
mov
movsb
test
sub
xor
xor
or
sub
daa
mov
out
test
sub
sahf
jg
jb
jns
jnp
push
ss
movsl
sbb
out
imull
nop
add
push
inc
sbb
inc
ret
adc
push
xor
sahf
adc
jno
inc
test
mov
aam
negl
fdivrp
loopne
not
cwtl
sub
sub
inc
je
stc
lds
dec
sub
jns
add
nop
sub
orl
sub
or
dec
repnz
cmp
sub
xchg
inc
xorb
dec
sub
jns
inc
lret
sub
clc
push
push
adc
push
sub
sbb
mov
nop
xchg
subl
fcompl
sub
xor
js
mov
lds
movsl
dec
lods
insb
and
inc
pop
jno
cli
xchg
sub
out
frstor
jo
fsubrl
dec
or
lea
mov
add
popf
into
cmpsl
sub
add
pop
dec
pop
and
jae
sub
pop
jl
inc
sub
adc
cmp
sub
aas
xor
jle
xor
sub
push
push
mov
rcr
call
add
aam
orl
dec
xor
pop
mov
mov
xchg
sub
pop
frstor
mov
mov
in
lds
dec
in
out
std
loopne
loope
sub
in
test
mov
push
adc
jno,pt
sub
pusha
mov
inc
mov
jecxz
insl
pop
cld
das
sub
sub
test
stos
mov
xor
int
push
lret
jae
adc
add
and
je
dec
jnp
or
sbb
sub
shrl
sub
mov
lds
sbb
fildll
cmp
pop
adc
lods
sub
lcall
jbe
pusha
pop
int
enter
sub
sbb
sub
outsb
je
int
sub
fs
ss
xor
pusha
sbb
push
hlt
leave
shrb
mov
lret
rcll
xor
in
sub
fsubs
jge
int
xchg
sub
ret
sub
xor
imull
or
mov
jne
push
jp
lds
scas
inc
pop
fldl
jecxz
outsl
sub
fbstp
sbb
pop
cld
sbb
sub
ds
mov
jl
das
mov
sub
cmpl
arpl
shrb
mov
adc
sbb
rclb
dec
push
mov
sub
sub
out
insl
ret
mov
xchg
mov
xor
dec
and
test
cli
cmp
adc
test
test
test
xor
fst
jmp
mov
stc
xchg
push
sub
sub
ljmp
jae
stc
xor
pop
adc
andb
push
sub
fsts
aaa
sub
outsb
mov
dec
lods
dec
sub
pop
dec
repnz
rcrl
lahf
sub
sbb
ljmp
mov
outsb
sub
cmpl
call
push
lret
daa
mov
or
arpl
push
mov
jne
pop
nop
pop
int3
or
movsb
sub
sbbb
adc
fldt
cmpsl
push
mov
loopne
in
inc
insb
xor
mov
call
sub
outsb
sub
dec
fiaddl
sub
xlat
dec
sub
icebp
add
sbb
in
jne
and
leave
or
mov
imul
sub
sti
sub
aaa
sub
fdivrl
test
mov
sub
out
pop
leave
int
jo
and
push
testl
fsubrs
sub
push
adc
mov
pop
sbb
mov
aam
pop
daa
rorb
and
sub
icebp
xlat
fistps
xor
popf
and
int
jns
sub
psubsw
push
pop
inc
cmp
sub
inc
and
cmp
mov
inc
sub
pop
jnp
sub
jns
pop
ficompl
mov
ds
cmp
sub
cs
jne
mov
pop
push
sbb
sahf
and
lock
push
adcl
cmp
aad
cmpsb
lret
aas
sub
pop
fadds
leave
sub
es
sarb
mov
ljmp
sub
outsb
mov
fildll
loope
jae
mov
cmp
sub
lcall
sub
pop
mov
test
fstps
and
data16
sub
outsb
adc
adc
cmpb
xor
sbb
orl
popf
gs
xchg
mov
rclb
pop
mov
add
lret
icebp
push
push
and
loopne
bound
ja
cltd
jb
xchg
icebp
scas
cmp
ljmp
mov
test
jbe
outsb
mov
sub
cmp
dec
pop
and
fsubrs
pop
ret
or
jno
cmp
sub
mov
push
push
or
loopne
subl
inc
lret
outsl
negb
mov
sub
mov
sub
das
rcrl
lret
arpl
cs
or
cmp
xlat
and
testb
ja
and
inc
sub
int3
stos
out
out
and
sub
push
dec
mov
negb
xchg
adc
lea
pop
xor
pop
jne
dec
inc
aas
xor
add
sub
sti
sub
dec
jbe
sbb
je
push
or
mov
jge
outsb
sbb
shrl
dec
scas
sub
jle
pop
jp
test
fimull
sub
adc
dec
cmp
inc
not
js
adc
sub
sub
mov
xchg
push
stos
sub
into
mov
cmp
mov
pop
jmp
push
or
push
sub
arpl
test
rclb
add
xchg
aaa
jno
or
sub
lret
adc
fucomip
and
inc
out
js
enter
jnp
xor
sub
mov
adc
movsl
cmpsb
xor
push
add
mov
fwait
sub
pop
xor
mov
sub
out
xchg
fldenv
fs
pushf
inc
sbb
pop
sub
mov
adc
sub
push
push
add
sub
jmp
push
cld
and
loopne
inc
sub
ret
sahf
mov
out
stc
js
sub
lds
hlt
sub
movsl
cmp
sarl
mov
scas
sub
sarb
les
sub
pop
jb
mov
shl
fs
js
mov
mov
xchg
cli
lock
add
sub
test
sub
in
loop
ds
cmp
ffreep
sahf
lods
xor
rclb
push
xchg
in
inc
jne
fdivrl
jb
movsb
sub
insb
sub
sub
enter
mov
mov
xor
lea
scas
xchg
mov
iret
out
mov
sub
xlat
dec
sbb
push
cli
push
bnd
or
outsl
jmp
ljmp
cli
xor
sbb
sub
jecxz
daa
pop
jmp
add
jp
cmp
mov
sarl
mov
pop
int3
cwtl
jmp
inc
leave
enter
addr16
pop
notl
adc
sub
xchg
push
ret
adc
pop
stc
xor
and
mov
sub
repz
lcall
out
lret
jmp
push
xor
jns
dec
push
jnp
jge
mov
enter
or
adc
adc
add
in
jecxz
cli
adc
mov
es
test
push
sub
lret
jecxz
mov
sub
adc
cmp
xor
xchg
sub
js
add
pop
sbb
aad
mov
push
imul
cld
fcmovu
out
mov
lock
sbb
sub
jp
push
xor
ljmp
fidivl
jmp
out
or
push
movsb
cmp
cmp
les
push
jg
jmp
sub
pop
mov
jo
pop
pusha
or
test
mov
adc
sub
popaw
aas
lahf
ficoms
xor
bound
sub
gs
psubusb
rorb
and
fldt
push
popa
fldl
sub
mov
jb
sub
adc
xchg
imull
out
push
adc
shl
pop
cwtl
out
cli
or
nop
repz
add
out
sub
insb
lea
sub
loop
xchg
sub
hlt
int3
jno
pop
jbe
enter
mov
aaa
sub
cmpsb
dec
insl
cld
adc
repnz
sbb
pop
enter
fldcw
bound
pop
mov
lret
insl
mov
dec
jge
les
es
fisubs
cvtps2pi
divb
out
sub
idivl
add
cli
stc
push
sub
jb
fs
adc
mov
fbld
into
cld
xor
fsubrs
dec
inc
in
stos
lods
sub
or
sbbl
pop
lds
outsb
jge
sub
push
mov
repz
mov
dec
inc
outsb
and
frstor
pop
push
and
mov
xchg
sub
mov
dec
and
jge
loop
sub
and
inc
sub
sbb
cld
xchg
xchg
jp
stc
in
sub
xor
movsl
sahf
sub
jo
insb
or
iret
pop
jnp
sub
sub
and
sbbb
mov
int
dec
into
push
push
aam
mov
cld
push
inc
lods
adc
out
mov
sub
scas
mov
xor
mov
jmp
or
addr16
mov
add
sub
xchg
sub
sub
jp
sub
jbe
int3
arpl
and
out
dec
sub
xchg
mov
mov
xchg
loop
pop
das
mov
xor
or
in
imul
ret
mov
sub
test
sub
shl
ret
leave
sub
imul
mov
sub
mov
xchg
ret
stc
add
xor
push
sub
popa
mov
imul
ret
mov
stos
mov
dec
mov
xor
cmc
inc
sub
dec
pop
sub
and
cmp
loopne
mov
and
pop
dec
pushf
std
sub
in
outsl
push
jo
cmp
loop
test
sub
lods
repz
sub
push
fcomip
cmp
int3
repz
movsb
nop
cmpsb
mov
cli
out
push
adc
aad
inc
in
rcrb
jecxz
jmp
sub
fdivs
inc
adc
iret
jmp
xchg
cmpsb
push
fdivl
mov
out
orl
data16
lds
mov
in
sub
in
and
imul
cltd
jge
mov
sub
fwait
outsl
jno
sub
dec
lret
add
mov
shrl
mov
leave
push
mov
inc
movsl
xor
push
mov
mov
ficomps
ds
xor
jnp
sub
mov
aam
lahf
daa
sbb
call
ljmp
in
sub
xchg
mov
lahf
out
sub
nop
sbb
add
mov
sbb
aam
stos
mov
gs
xchg
mov
mov
inc
mov
mov
out
pop
mov
or
lret
shlb
clc
arpl
adc
lcall
scas
inc
scas
sbb
fisttps
sub
cmpsl
lahf
pusha
outsb
sub
mov
xor
pop
sub
or
push
add
sub
test
lock
cmpsb
mov
jl
add
sub
pop
sti
mov
sub
inc
mov
shrl
loope
sbb
sub
mov
test
and
jae
pop
or
mov
and
fsubrl
adc
out
sub
jb
call
pop
and
mov
sub
frstor
in
test
lcall
add
sub
add
lods
dec
sub
xchg
adcb
into
xchg
out
xchg
in
sub
iret
xchg
sub
jbe
lock
or
adc
mov
addr16
ja
mov
fstl
adc
test
jmp
xchg
dec
mov
cwtl
enter
mov
incb
nop
inc
jae
test
push
scas
sbb
jns
xor
xor
push
bound
sub
cmp
adc
xchg
cs
outsb
test
dec
negb
pop
fwait
dec
sub
frstor
inc
xor
stos
call
rol
imul
out
mov
in
inc
fists
dec
mov
lods
dec
out
jo
sbb
jg
xchg
stos
sub
jbe
pop
mov
mov
xor
out
outsb
leave
div
adc
pop
daa
in
out
ss
sub
das
sbb
adc
shlb
test
shll
jnp
lcall
mov
adc
popl
test
pop
mov
sub
dec
int
scas
cli
sub
fldt
xchg
cmp
movsl
iret
push
shrb
sbb
test
sub
and
outsl
jg
lock
repz
xor
cld
ds
adcb
pop
jne
scas
paddq
icebp
sub
std
into
push
and
xchg
ljmp
dec
repnz
ficoms
cmpsl
faddl
inc
sub
dec
adc
sti
and
mov
or
mov
xchg
enter
dec
jle
sub
in
ret
daa
int3
cmp
std
sbb
test
adc
scas
sub
ret
jbe
daa
dec
stc
lods
push
xchg
adc
sub
push
sub
xor
or
sub
popa
jle
sbb
idiv
jmp
lret
jns
sub
cmc
ret
div
sub
fstpt
mov
mov
xchg
out
mov
jecxz
and
and
pushf
mov
arpl
push
xchg
outsl
loop
pop
sub
push
xchg
and
mov
subb
sub
jne
loope
sub
movsb
pop
inc
and
adc
fisttpl
sub
subl
in
popa
sub
and
je
iret
nop
sbb
sub
push
insl
neg
sub
lret
xchg
or
fwait
cmp
ret
mov
mov
adc
stos
lds
jnp
bound
add
fwait
cmp
jecxz
dec
out
test
cmp
mov
cmp
pop
cmc
cmp
movsl
lahf
xor
sti
jnp
in
or
sub
out
inc
add
js
xor
sub
push
jb
insb
push
mov
mov
xor
lods
sbb
xlat
aaa
aad
enter
xchg
inc
mov
dec
sub
jns
sbb
arpl
jno
ret
xor
and
and
or
jle
loopne
mov
and
push
push
subb
sub
sahf
out
jle
imul
lret
sub
repnz
imul
lahf
jg
out
cld
ret
pop
sbb
sti
lock
cmc
into
mov
and
stos
daa
cmpsl
push
int
add
daa
mov
lock
ret
int
sub
in
dec
arpl
ljmp
sub
sub
adc
or
stos
idivl
sub
mov
jg
sub
sub
sub
clc
fisttps
subl
imul
fisubs
or
push
aas
aad
sub
iret
xor
push
sub
dec
gs
cmp
pop
shlb
adc
xchg
jp
jecxz
repnz
imul
icebp
hlt
mov
sub
mov
pop
pop
pushf
sub
mov
jecxz
sub
stos
rclb
sub
outsl
mov
in
ds
rorl
out
push
out
sub
sbb
sub
test
cmp
dec
enter
mov
push
cwtl
inc
pushf
insl
lods
mov
pop
sbb
dec
mov
mov
sub
dec
mov
lret
pop
out
dec
cmp
push
and
xor
dec
mov
scas
xor
sbb
sbb
fwait
push
sub
add
mov
dec
xchg
adc
fldenv
sub
dec
jge
xchg
and
jg
jmp
pop
mov
jbe
sub
outsb
jo
sub
repz
imul
fisttpll
fisubrl
sub
dec
jmp
mov
adc
sbb
adc
or
mov
jns
and
sub
outsl
sub
out
lret
add
inc
test
sub
jge
insb
sub
in
bound
cmc
sahf
push
pop
push
pop
sub
outsb
in
sub
add
push
fnstenv
push
fwait
sub
jns
outsb
into
inc
pop
outsl
add
sub
cmpsb
push
sub
and
adc
adc
addr16
sub
das
lods
gs
pusha
repz
popf
sub
rcrl
pop
sub
jp
add
push
push
dec
hlt
inc
sub
cmp
jle
fisttps
arpl
fwait
movsb
shrb
cmpsl
sub
mov
jmp
dec
cmp
xor
xchg
mov
fisttpll
xor
push
je
mov
sub
stc
sub
sub
jmp
lods
jnp
inc
imul
jae
pop
mov
subl
cmp
std
sbb
arpl
add
pushf
sub
clc
dec
adc
or
jae
lods
or
jecxz
add
lock
and
sub
or
push
sub
repz
cld
pop
icebp
sub
inc
mov
fmull
push
and
sub
sub
push
jbe
sub
push
insl
imul
adc
xor
xor
xchg
das
je
cmp
xchg
pop
popf
sub
lea
sub
jecxz
mov
sub
dec
xor
xor
jl
adc
push
lds
pushf
cltd
or
xor
cld
jne
dec
fwait
loopne
inc
aaa
gs
sub
xor
test
mov
incl
jb
or
shlb
shl
test
mov
jecxz
inc
inc
sub
adc
inc
out
sub
shrl
bound
cmp
and
iret
xlat
add
jmp
sub
lret
sub
mov
pop
in
xor
stos
stos
adc
and
cmp
sub
push
cmp
add
ffreep
mov
sub
mov
clc
pop
mov
jg
adc
jnp
and
scas
sub
sub
sbb
jo
xchg
mov
mov
fiadds
sub
mov
sub
adc
psubd
sub
jp
cmpsl
ljmp
add
inc
sti
and
test
outsl
sub
mov
or
adc
stos
daa
cmp
push
mov
dec
xchg
pop
jo
in
and
scas
mov
nop
jne
shll
push
aas
sbb
jmp
xor
push
mov
sub
mov
jne
das
std
adc
jbe
add
fstpl
sub
cmp
int3
inc
dec
lds
call
push
ja
mov
xchg
xchg
push
cli
sub
rcrb
and
mov
push
dec
or
aad
or
ds
rolb
test
fwait
xor
xchg
lds
add
jno
daa
mov
cmp
mov
jmp
rcll
sub
ds
inc
imulb
add
mov
loopne
dec
bound
jb
mov
sub
add
jp
cmp
dec
aaa
sub
les
ret
out
call
shrl
and
jle
sub
fistpll
mov
push
bound
jg
cmp
aad
popf
dec
push
int
sub
scas
or
sub
shufps
adc
inc
sub
push
test
cmp
sbb
jl
mov
shlb
sbb
sub
rcrl
adc
inc
nop
sub
and
adc
stos
lds
daa
cld
jae
mov
jmp
sub
cmp
pop
mov
scas
mov
test
and
jbe
inc
mov
sub
imul
arpl
cs
pop
sti
adc
push
sub
out
das
sub
inc
fwait
in
fcompl
shll
inc
subl
sub
scas
out
div
aad
inc
movsl
daa
mov
sub
mov
adc
xor
fwait
mov
xchg
aaa
or
dec
xor
inc
xor
xchg
sub
cmp
addl
je
lods
movsl
ret
shrl
lahf
gs
xor
stc
sahf
push
inc
adc
mov
and
nop
or
cwtl
xor
das
popa
out
mov
lods
loopne
pushf
sub
out
sub
jbe
and
dec
mov
cs
jae
jmp
hlt
xchg
lcall
lods
les
loopne
pushf
mov
inc
mov
repnz
mov
test
push
mov
jb
xchg
sub
sub
test
or
call
sub
out
sub
fildll
lahf
sub
sub
es
in
int
sub
mov
aad
pushf
sub
sbb
iret
sub
ja
int3
push
and
repnz
cwtl
inc
push
mov
out
and
sub
cmp
in
mov
pop
pop
cltd
sub
xor
sub
stos
ljmp
dec
in
sbb
mov
sub
or
dec
leave
inc
outsb
jge
fldt
or
sub
add
inc
mov
cwtl
cmp
loopne
pop
xor
sub
ja
pop
popf
sub
test
cmp
dec
sub
mov
sub
dec
inc
inc
sub
insl
loope
out
sub
and
jmp
ret
rcrl
aam
push
or
es
sub
cmp
sbb
inc
xor
stos
and
pushf
cld
addb
pop
int3
cwtl
shrb
daa
insl
lret
out
lahf
jno
sub
adc
insl
inc
sub
aas
sbb
lds
scas
sub
lcall
xlat
xor
mov
mov
cmpsb
sub
ret
mov
jbe
mov
xor
dec
mov
sbb
add
ljmp
cmc
push
or
mov
movsl
add
or
loope
xlat
push
out
pop
pop
mov
mov
mov
pushf
sbbl
xchg
and
aad
mov
push
pop
mov
ret
mov
push
aas
inc
dec
lods
sbb
dec
sub
rorb
lea
mov
insl
lret
scas
in
sahf
inc
lds
add
movsl
es
sub
insl
jbe
pop
sub
jg
sbb
out
xor
shrb
mov
mov
mov
insb
or
inc
cmp
jne,pt
xor
pop
sub
nop
xchg
popf
cmpsb
push
xorl
sub
mov
pop
cmp
push
mov
mov
mov
ds
sbb
daa
sub
mov
push
gs
mov
lret
sub
inc
push
add
xor
pop
mov
inc
and
outsl
stos
js
xchg
mov
call
sarl
and
mov
jo
pop
outsl
imul
mov
push
lods
dec
int
jg
sub
cs
jbe
aam
movsb
sub
js
mov
repz
pop
outsb
inc
xor
push
sub
pop
add
fdivr
sbb
and
mov
shr
cmp
fwait
mov
aas
sub
cmp
sbb
in
sub
rolb
sahf
in
orb
insb
mov
in
hlt
cmpsl
push
cmp
jb
push
sub
push
lahf
cmp
pop
fidivl
xchg
sub
cmp
cld
repnz
adc
sub
or
rol
sbb
xor
ja
pusha
arpl
add
stc
rorl
inc
sub
inc
sub
inc
fcompl
imul
push
sub
sbb
in
add
fsub
in
mov
add
loop
push
or
sub
ja
sub
and
push
mov
mov
mov
mov
dec
ret
loopew
lahf
cs
sub
adc
enter
insb
inc
and
sbb
xor
add
mov
movsb
sub
out
mov
add
sub
cmc
data16
fistl
adc
push
xchg
stos
pop
repz
sub
add
jnp
mov
pop
push
push
mov
push
sub
push
mov
jecxz
pop
aas
enter
hlt
aam
sbb
ror
popa
int3
sbb
inc
sub
cli
adc
xchg
fstl
mov
and
lret
dec
inc
mov
or
lea
adc
into
mov
aad
mov
sub
jg
and
mov
repnz
cmp
add
jl
lds
xor
sub
addr16
popf
insb
adc
add
sub
inc
mov
out
and
sub
mov
pop
je
fbstp
jbe
mov
ffree
inc
movsl
and
imul
jae
leave
cld
inc
std
jne
adc
mov
sub
inc
mov
mov
aam
cltd
je
sub
jle
xchg
xlat
mov
add
andl
sub
jbe
call
and
inc
push
ret
sub
pop
stos
pop
xchg
add
lahf
and
popa
cmp
inc
cs
stos
sub
mov
lcall
filds
lret
push
and
clc
mov
hlt
adc
aaa
mov
lea
push
shrl
or
sub
pop
mov
mov
mov
push
add
std
or
cld
lock
dec
lds
test
jp
sub
aaa
push
ljmp
adc
push
sub
in
or
push
iret
and
rclb
lret
or
mov
and
rclb
ret
fdivrs
inc
pop
jno
push
sub
adc
push
inc
sub
aas
xchg
xchg
xor
aaa
mov
sub
jbe
mov
rclb
push
push
add
fisttpll
jp
sub
pop
mov
int
addr16
test
outsl
sub
and
cwtl
or
decl
cmpsl
out
xchg
fs
sub
mov
inc
xchg
inc
loop
sub
test
dec
mov
pop
andb
add
fsubrl
and
inc
pop
or
sub
mov
xor
mov
jb
subb
sub
int3
dec
fisubrs
mov
dec
in
in
and
js
aas
ret
mov
jns
hlt
shl
cmpsl
sbb
ljmp
les
xchg
or
and
dec
adc
add
jg
push
jbe
pop
test
sub
and
dec
int3
popf
psadbw
movb
and
pop
fsub
mov
sub
test
aam
adc
mov
adc
aaa
xor
jb
jmp
and
into
mov
xchg
xchg
inc
inc
subl
jge
stos
fidivs
adc
std
lods
push
push
das
or
rdtsc
dec
sbb
iret
mov
inc
hlt
cmp
mov
push
test
cltd
scas
sub
jecxz
jge
sbb
hlt
mov
sti
mov
sbb
add
inc
push
pop
sbb
scas
scas
insl
arpl
sub
push
aad
bnd
sbb
shrb
sti
lret
xchg
adc
pusha
shrb
dec
shrl
jmp
inc
jns
push
mov
loope
sbb
dec
scas
dec
mov
stos
mov
add
out
scas
inc
sub
xchg
arpl
push
mov
sarb
sub
push
iret
sub
sub
test
cmpsl
sbb
je
cmpsl
ret
mov
push
adc
stc
test
sub
xchg
mov
adc
loopne
xor
sub
imul
mov
xchg
in
mov
add
gs
gs
cmc
jmp
and
jae
mov
xchg
mov
dec
mov
sub
mov
inc
mov
add
rcrb
xor
push
mov
lods
and
cmpsl
jle
bound
sub
mov
jp
and
idivl
lahf
adc
and
pop
xor
push
xor
jae
lea
mov
hlt
mov
sub
mov
push
imul
jb
cmp
cmp
in
or
sub
in
lods
mov
cmp
js
sub
cmc
push
pop
add
out
lods
push
sub
imul
imul
and
mov
pop
pop
imul
fsubs
pop
enter
sub
jg
cli
sub
adcl
xor
call
sub
xchg
mov
aam
push
inc
daa
into
jge
int
mov
lds
mov
xor
int3
and
xchg
xlat
inc
sub
push
jmp
ret
sub
sub
add
loopne
aas
stc
data16
and
stos
xchg
jp
xor
sub
sub
shrl
mov
xchg
or
les
shlb
sbb
push
call
orl
stc
fs
adc
insb
cs
dec
pop
jne
or
bound
jl
pop
cmpsb
lock
into
sub
mov
es
sub
dec
and
ljmp
sbb
pop
mov
mov
or
cli
cmp
push
push
mov
push
adc
pop
sub
xlat
jo
sub
sahf
or
popa
std
cwtl
or
adc
cmpsl
cli
push
aas
lock
rcrb
sub
jb
mov
insl
cmp
mov
sahf
pop
rclb
pop
pop
pop
ss
add
sub
adc
dec
shrl
add
ja
sub
jae
out
add
lock
mov
cmpsb
and
jmp
and
lds
pop
test
inc
cld
xchg
daa
and
mov
sub
mov
jg
add
mov
xor
sub
sahf
sbb
sub
cmc
mov
lock
adc
out
adc
pop
cs
xchg
push
add
sub
lods
test
adc
fisubrl
stos
fstpt
es
lea
call
sub
lock
fidivl
pop
es
mov
sbb
sbb
sbb
lods
cmp
sub
lret
insl
sub
add
repz
mov
dec
xchg
inc
test
sub
insb
cmp
adc
aam
sub
push
rclb
aad
and
sub
mov
sub
inc
out
xchg
pop
lods
and
out
jmp
and
mov
sub
or
xchg
in
push
adc
clc
cs
xor
sub
shll
rcl
outsl
sub
ljmp
jb
pop
cld
es
cmc
adc
mov
cltd
sub
lret
into
pusha
sub
sub
sub
in
aam
nop
sub
sub
and
sub
fmul
andb
hlt
fs
push
and
lcall
add
lods
mov
jno
push
mov
and
fldt
in
mov
pop
notb
xor
cld
test
ret
fistpl
adc
call
daa
fnstcw
pop
sub
test
clc
test
repz
js
fstpl
das
cmpsl
xor
shrb
cltd
sub
outsb
or
pushf
sub
fstpt
mov
scas
loop
mov
jae
lods
add
jecxz
sahf
sub
pushf
dec
jg
jne
loopne
xor
loop
adc
fs
mov
lret
andb
ret
xchg
jno
ds
int3
scas
das
cltd
movsb
xor
adc
shrb
inc
xor
push
jp
sub
in
lea
mov
mov
mov
lods
sub
push
push
fwait
inc
jne
push
ficomps
sub
in
mov
sub
mov
xor
sub
cmpl
int
jp
inc
movl
cmpl
dec
pushf
shr
cmpsl
mov
mov
pop
mov
fstp
sub
movsl
or
into
xor
loopne
jne
push
cmp
inc
out
iret
sub
scas
data16
sub
idivb
fadds
aam
inc
cli
daa
sub
out
mov
sub
xchg
inc
pop
in
int3
into
and
es
insb
das
nop
or
jmp
sub
sub
xor
lock
ja
loopne
pop
mov
sub
jge
lret
mov
adc
in
jmp
lret
sub
sbb
cli
mov
xor
in
lea
rcrl
stc
sub
cmpl
mov
cmp
daa
aad
cli
bound
lods
dec
add
cltd
xor
fdiv
sub
sub
jmp
xlat
sub
mov
in
jns
xchg
inc
mov
dec
push
or
test
mov
push
pop
popf
and
subl
mov
xchg
mov
pop
or
push
sub
adc
das
sub
cld
sbb
outsl
sub
hlt
mov
out
or
add
sub
pop
cli
and
movsb
icebp
shrl
dec
dec
sbb
add
ds
frndint
out
fstpt
pop
sarb
cwtl
aad
sub
outsl
adc
mov
dec
sub
das
push
and
imul
jno
and
enter
cltd
sub
adc
xor
pop
inc
sub
ret
je
cltd
xor
add
dec
bound
sarb
lret
and
mov
push
incl
cli
jle
adc
sahf
xor
sub
and
aas
pop
mov
popf
and
sub
stos
insb
adc
test
mov
lds
fbld
in
jno
int
lods
in
shrb
gs
cmp
xor
sbb
shl
add
xchg
sub
out
sbb
insl
inc
leave
push
sub
sub
mov
inc
aad
sbb
mov
shrb
or
insl
popf
shll
inc
ret
jae
loope
ss
xchg
jge
sbb
sub
test
mov
je
fisubs
testl
sub
sbb
nop
push
xchg
push
fsubrs
push
sub
pop
mov
mov
push
add
je
xor
cltd
cld
mov
push
cmp
test
cs
test
sub
movsl
das
repnz
pusha
inc
dec
lds
shll
fwait
sub
test
testb
lea
push
lret
lock
hlt
shlb
and
and
popa
lods
sub
push
aad
ss
push
out
lcall
dec
xchg
cmp
sarl
call
test
test
sbb
jmp
sub
ret
pop
sub
mov
stc
aaa
sub
test
insb
les
sub
sbb
xor
jne
mov
les
xlat
mov
test
insb
int
jne
and
sarb
fldcw
scas
sub
dec
faddl
sbb
dec
push
cmp
jae
sub
sub
fcmovbe
lds
mov
out
popa
mov
shr
sub
cmp
sbb
dec
adc
cmpsl
mov
notb
lds
jge
int3
adc
jmp
out
sub
in
imul
sub
add
sub
outsl
stos
sbb
jge
and
pop
iret
cmpsb
cld
pop
in
sub
sbb
cltd
xchg
fisubrl
xor
insl
dec
inc
xor
sub
jl
fildll
cmc
in
fldl
sbb
cltd
iret
pop
sub
push
add
inc
inc
imul
dec
addl
sub
cmp
mov
fstps
lea
jnp
notl
push
call
push
sar
inc
sub
cmp
loopne
sub
dec
mov
pop
push
mov
test
aam
mov
daa
and
shr
in
pop
loope
js
xchg
repz
mov
mov
pop
seto
inc
std
sbb
adc
sub
sub
lock
loopne
add
cmp
pop
inc
stos
sub
sbb
push
pop
and
sbb
push
cltd
sub
je
inc
imull
frstor
sub
lahf
sbb
push
xor
xor
lods
xor
sub
ljmp
ret
ret
add
jp
and
mov
sahf
push
sub
push
es
pop
sub
adc
addr16
fnstsw
mov
lods
jb
xchg
arpl
cs
stos
sbb
test
sub
popa
cmpl
clc
jo
cmp
int
test
int
fwait
adc
loop
sub
mov
fstps
sbb
push
xor
ds
mov
stos
jae
mov
rorb
aas
and
sub
shll
icebp
sub
mov
pop
sub
and
je
sub
into
test
shlb
dec
loope
push
sub
or
pop
inc
pushf
ds
and
mov
sub
and
leave
jno
ds
int
repnz
repz
push
test
xor
ljmp
pop
pushf
shll
out
mov
adc
pop
sub
es
lds
or
push
mov
push
xchg
push
fisubrs
ljmp
fistps
and
jb
xchg
js
gs
mov
hlt
stc
jmp
adc
pop
jle
mov
out
sub
mov
push
push
jecxz
mov
repnz
lods
jmp
enter
add
out
mov
jle
sub
shl
lahf
adc
mov
xor
pop
js
ss
dec
mov
stos
mov
pop
dec
fucomp
and
fisubrl
aaa
xor
or
inc
push
in
imul
mov
xchg
sub
outsl
loope
adc
fldt
ja
xor
in
sub
sub
shll
movl
sbb
sub
inc
mov
pop
outsl
xlat
sub
sub
loope
mov
and
cmpsl
dec
subb
mov
sub
ds
jns
mov
popa
pusha
or
jmp
add
insb
sti
jns
or
fdivrl
adc
dec
mov
sub
jle
jge
xchg
aaa
pop
cmpsb
out
js
sub
imul
test
or
in
out
push
cmp
sub
imul
pop
fsub
sub
jmp
mov
and
sbbb
aam
call
sti
xchg
jnp
enter
push
lds
or
lret
sub
jo
sub
lahf
adc
cmp
sbb
pop
add
jecxz
fldenv
add
mov
add
out
jae
addr16
pusha
jecxz
push
sub
aaa
pushf
mov
xor
sbb
or
sub
outsl
push
lods
jecxz
popa
cmpsb
mov
sbb
mov
stc
xchg
movsb
sub
mov
cmp
sbb
lret
mov
push
sub
push
or
lea
aaa
add
mov
iret
test
lahf
jae
push
shll
fidivrl
pop
add
mov
and
pushf
jmp
sub
and
movsb
test
in
fisttps
sub
cmp
cld
xchg
cltd
sub
mov
movsl
fwait
xor
testb
test
sub
add
pop
nop
xchg
and
mov
shrb
movsl
and
xor
fsubp
nop
xchg
roll
dec
adc
adc
cmp
and
popw
add
pushf
and
pop
aam
movsl
cwtl
daa
jnp
ljmp
nop
mov
jo
pop
push
mov
sub
xchg
cld
push
nop
sub
push
pop
sbb
stos
sub
pop
popa
pop
loopne
mov
rcrb
rsm
push
xchg
xor
aaa
imul
sub
mov
cs
jns
addr16
sbb
pop
gs
jo
lahf
sub
mov
fs
cmp
in
test
sub
es
mov
mov
mov
push
dec
sbb
mov
jle
lds
ljmp
addr16
xchg
mov
mov
cs
mov
jmp
cmpsb
in
insl
cmp
push
dec
inc
ret
sub
scas
in
push
sub
cli
dec
jae
arpl
cli
sub
mov
adc
xor
aas
stos
fsubp
aad
out
xor
mov
test
gs
sti
sarl
xor
call
add
frstor
popf
adc
sub
pop
dec
mov
push
xor
out
sub
fxch
cwtl
stos
sub
ds
out
out
mov
daa
jp
notl
sub
adcb
sub
mov
sub
mov
incb
xor
push
ret
insl
sub
fsubl
mov
mov
sub
jnp
mov
lret
aad
ucomiss
jae
add
leave
lret
sub
jl
sub
jge
sub
inc
pop
sbb
stos
mov
subb
mov
add
pop
sub
aad
adc
insb
or
bound
test
jg
cmp
pop
outsb
mov
push
int
test
push
mov
push
cli
sub
inc
sub
clc
inc
jle
cmpsb
pop
sub
push
fdivs
sub
or
jns
aad
jne
and
fs
cs
cltd
shrl
insb
imul
and
sub
and
in
adc
cmp
sub
cmp
jno
sub
data16
push
pop
bound
ss
xchg
test
shrl
jnp
xor
mov
scas
cld
jmp
adc
pop
sub
xor
sub
out
das
in
sub
shll
imul
in
lsl
pop
sbb
push
and
cmp
aam
add
push
hlt
mov
push
rcll
xchg
ror
sub
add
mov
xchg
sbb
mov
or
rcr
in
fidivl
xor
add
mov
test
and
je
fcoml
pop
sar
cli
sub
push
xchg
dec
pop
insb
mov
pop
push
jnp
jmp
sbb
sub
sahf
mov
cmp
cmp
mov
imulb
pop
ret
repz
movsl
jo
cmc
xchg
sub
int
std
mov
xor
jmp
pushf
sub
sbb
iret
loopw
cmpsb
ja
mov
sub
bound
add
push
xchg
sub
jp
mov
pop
inc
cli
sbb
sub
imul
push
fstps
mov
mov
mov
sub
inc
mov
jne
sbb
sub
sahf
sub
fcomip
and
or
out
in
or
sub
mov
mov
lret
pop
hlt
rcrb
popl
mov
aaa
pop
sbb
sub
sub
inc
mov
pop
std
jae
jb
jp
leave
sub
sbb
sub
pushf
or
mov
adc
imul
daa
cltd
scas
or
cmp
sbb
aam
in
daa
push
sub
and
testl
movl
sub
vmwrite
nop
sub
ss
and
shrb
sub
fisttpl
push
adc
stos
xor
lea
imul
and
or
push
mov
clc
mov
dec
adc
fs
jb
sub
mov
sub
mov
adc
lods
mov
insl
daa
aad
in
sub
sbb
cwtl
popf
lods
lock
or
dec
es
iret
sub
lea
ljmp
mov
jb
inc
or
push
xor
push
jne
lds
xchg
sub
sub
mov
jo
mov
cmp
fsubrl
mov
scas
or
sub
test
and
mov
scas
mov
xor
and
sub
lcall
jbe
bound
mov
scas
je
adc
mov
pushf
adc
roll
push
mov
scas
in
or
das
push
out
clc
add
sub
fisubs
outsl
push
data16
mov
mov
sbb
lret
mov
sub
shl
cmp
sub
sbb
or
mov
aaa
inc
sub
test
out
lret
sub
clc
jmp
lds
xchg
dec
negb
push
jno
and
mov
xchg
lods
xchg
in
call
rol
mov
dec
mov
jae
pop
inc
aas
push
push
fists
adc
dec
sub
push
aam
jg
ja
sub
imul
jbe
in
sub
xchg
mov
repz
in
jo
lcall
loope
pop
aam
pop
pop
sub
cmp
sbb
mov
mov
fsts
and
sub
out
jo
shrl
or
push
adc
jge
sub
pop
sub
pusha
scas
mov
fisubrs
popf
sub
fucomp
cmp
cmp
cwtl
ja
xor
mov
pop
sub
mov
outsl
int3
sub
les
cmpsb
cvtps2pi
cld
inc
mov
adc
jp
sub
push
push
sub
das
push
fists
inc
pusha
mov
add
sub
sub
push
and
fsubl
sbb
loope
jle
fistps
pop
jmp
xor
pop
stos
and
sub
mov
xchg
xchg
mov
cmc
lock
in
sub
cmp
aaa
push
mul
adc
test
subb
je
sub
ja
fldt
stc
out
push
cmp
pop
lods
leave
jnp
sub
dec
pop
xor
and
iret
or
inc
sub
mov
mov
pop
ljmp
adc
andl
shrb
outsb
sub
jae
cmpsl
ficompl
push
scas
jecxz
sub
fimuls
pushl
push
in
sub
mov
adc
xchg
sub
addb
and
jne
jmp
daa
out
lds
cli
fildll
push
mov
inc
aam
jecxz
push
lcall
sub
data16
hlt
sub
mov
push
mov
push
movsb
push
jo
sub
repnz
mov
xor
and
pop
jl
sub
mov
ficomps
lds
sub
movsl
ret
add
cmpsb
push
cmp
and
xchg
call
cs
movb
cmp
adc
imull
popf
adc
dec
cmovno
sbb
cltd
or
add
mov
push
pop
sub
ret
stos
sub
sub
xor
push
jp
pop
ret
jmp
and
sub
nop
sub
jnp
jne
lcall
leave
or
in
sahf
sub
jns
outsl
daa
dec
push
sbb
stos
jne
out
sub
sub
imul
test
mov
adc
in
adc
or
enter
push
ja
xchg
dec
xchg
push
stos
js
sbb
push
fs
sub
aad
sub
imul
inc
fcomps
sub
or
mov
sub
xor
lahf
xchg
lret
in
xor
sti
in
mov
sub
or
lret
or
cmp
push
sub
xchg
roll
test
jo
sub
push
pop
subl
sub
sub
xchg
xchg
xor
movsl
int3
mov
pop
sahf
sub
shlb
jns
sub
hlt
sub
fstpl
mov
and
pop
scas
pop
ret
pop
ja
cmp
xchg
push
sub
add
rclb
sbb
fbld
mov
dec
popa
rorl
ror
out
pop
bswap
lods
dec
xchg
mov
mov
lods
fimuls
in
jno
notb
sub
adc
push
push
inc
and
mov
dec
sbb
mov
lahf
mov
je
jae
cli
jmp
jle
jg,pn
sub
cmc
fidivrs
imul
fldenv
in
popf
dec
jo
fsubrp
dec
and
out
jns
dec
mov
push
pop
xor
inc
add
xor
pop
dec
es
lods
fs
cmpb
std
pop
pop
aam
enter
push
int
jns
stos
jne
xor
sub
xchg
movsb
sub
pop
cmpsl
test
pop
pop
mov
mov
mov
frstor
sub
cmp
mov
sub
out
sbb
cwtl
inc
push
mov
xchg
xchg
add
xchg
aad
xlat
in
sub
cmpsl
shl
sahf
sub
lods
and
sub
push
cmp
xor
inc
push
dec
mov
dec
cli
pop
ss
adc
in
cmpsb
xchg
sub
push
adc
push
sub
lods
inc
inc
mov
adc
xchg
sub
dec
mov
mov
fnstenv
sub
shl
add
test
movl
dec
mov
pop
cld
ljmp
or
out
out
jnp
lret
sub
insb
mov
ja
mov
repnz
arpl
negb
cmp
pop
push
loope
add
pop
sub
push
subl
sub
sbb
pop
xchg
sub
aam
fs
adc
sbb
lahf
and
popa
sub
decb
sub
fwait
push
mov
cmc
sub
jp
sub
sub
mov
push
xchg
sub
jns
cmp
and
bnd
mov
and
pop
jno
cmp
jnp
pop
lods
sub
mov
out
push
jmp
mov
movsl
mov
mov
mov
push
sub
inc
sbb
xchg
sub
xor
lea
int3
outsb
sub
iret
inc
cmp
and
mov
mov
mov
sbb
and
lods
jl
daa
or
pop
sbb
in
jge
xchg
gs
jbe
daa
in
mov
cmpsl
sub
xor
aaa
mov
dec
movsl
arpl
test
mov
sub
jb
leave
pop
jle
and
test
sub
mov
push
adc
pop
inc
jb
js
sub
mov
in
mov
mov
sub
and
fucom
repnz
rclb
por
stos
test
aam
push
int
jns
cmc
sub
cmp
fwait
in
mov
into
negl
stos
nop
sub
adc
stos
sub
push
push
fdivl
addb
and
xchg
imul
arpl
lds
mov
dec
adc
sub
mov
jnp
sbb
cli
js
sub
jns
subl
fmuls
and
adcl
xor
fmul
aaa
sub
cwtl
dec
jge
adc
adc
xchg
pop
frstor
cmp
add
or
mov
lock
or
popf
and
inc
push
sbb
add
sbbl
push
sub
xor
imul
pop
dec
inc
mov
push
sub
inc
push
aas
add
das
sbb
out
nop
mov
sub
out
or
in
je
pop
lret
add
inc
add
add
sbb
sahf
dec
cs
pop
or
inc
sub
xchg
push
xor
lret
rclb
fcompl
mov
cmp
and
xor
leave
or
sub
mov
xchg
int
lods
push
inc
push
icebp
enter
and
sbb
push
dec
sub
test
inc
stc
popf
mov
jecxz
xor
pop
mov
cmp
notl
and
mov
sub
cs
cmpsb
sub
mov
fiadds
outsl
and
dec
add
inc
sub
decb
adc
sub
icebp
popf
aas
mov
ja
pop
xor
fildll
iret
push
dec
sub
or
jecxz
jae
mov
in
mov
popf
adc
jl
mov
sbb
outsb
add
cmpl
pop
scas
std
ja
sub
shrb
sbb
out
stos
rorb
je
xchg
cmp
test
lret
repz
sbbb
sub
stc
std
bound
fidivl
xchg
shl
pop
sub
xchg
mov
pop
enter
sbb
scas
dec
pop
xchg
in
inc
sub
aad
push
sub
push
mov
test
pop
or
add
mov
mov
adc
cld
mov
popf
adc
sub
fst
inc
mov
cwtl
jne
lock
das
adc
dec
movsb
pusha
sub
mov
mov
or
sub
xor
mov
dec
daa
xchg
sub
jle
push
addr16
out
cltd
jmp
sub
xchg
cmp
or
inc
enter
cmp
js
mov
ja
lret
and
je
cmc
mov
sub
mov
stc
fldt
dec
jmp
or
push
int
mov
pop
inc
mov
adc
and
cmp
in
xchg
sub
mov
jge
sub
cli
insb
mov
rclb
lret
or
jae
push
insb
in
inc
cmp
jecxz
jmp
les
mov
aad
mov
sub
push
mov
and
out
push
dec
ljmp
repz
jp
fldt
jne
int3
rcrl
adc
rcrb
fwait
adc
imul
inc
jmp
gs
lea
and
xor
test
dec
xchg
cmp
xor
and
rclb
dec
xor
repz
jecxz
jnp
and
shr
ljmp
mov
int
sub
push
arpl
rorl
daa
test
mov
das
in
ss
stc
adc
jbe
aad
movsl
pop
sub
int3
or
cmp
sub
xchg
xor
pop
sub
adc
dec
sub
lock
imul
stos
cmp
cwtl
xlat
and
inc
testb
bound
aad
xor
shlb
ret
sbbb
sbb
xchg
sub
mov
cmpsb
and
mov
orb
pop
xchg
cli
int
imul
lret
shlb
clc
dec
cmpsb
sub
outsl
fst
icebp
sub
adc
xor
inc
mov
cmpl
sub
add
mov
in
mov
sub
jbe
push
fsubrs
lock
clc
scas
dec
sub
sub
jp
gs
xchg
mov
cs
cmpsb
xchg
sbb
wbinvd
jno
and
icebp
cmp
call
insl
sub
addl
jle
jo
sahf
xor
das
and
icebp
sub
cld
adc
push
aas
dec
adc
cmpb
xor
mov
xor
das
and
inc
call
push
mov
sub
repnz
sub
jp
outsl
push
sub
jnp
sub
fistl
xor
int
rorb
inc
mov
clc
push
decb
mov
sbb
pushf
shrb
inc
test
xor
rcr
push
test
mov
jmp
lret
sub
jo
mov
aaa
inc
and
sub
mov
out
cmp
xor
lret
icebp
sub
into
add
enter
fisubs
out
negb
sub
dec
push
and
lahf
orl
rcll
popa
sub
pop
pop
int3
pop
sub
xor
and
rcll
sub
jbe
pop
add
int
pop
stos
mov
repz
mov
outsb
mov
test
imul
pop
pop
sbb
sbb
adc
leave
push
and
cmp
les
rorl
or
mov
and
mov
movsb
sub
jns
xchg
shr
sub
fldcw
sub
scas
pop
fists
sub
in
je
sub
push
mov
push
xor
test
dec
ds
into
roll
and
cld
adc
add
inc
std
mov
sub
das
jg
cmp
insl
pusha
xchg
lods
out
mov
subb
imul
add
lea
fsubl
mov
xor
and
sub
out
pop
popa
pop
in
mov
sub
mov
movsl
int
in
pop
call
adc
mov
mov
inc
cmp
aad
sub
outsl
shrb
stc
mov
jae
insb
aad
push
pop
jnp
push
sbb
push
and
xchg
pop
mov
push
jnp
xchg
inc
xor
repnz
jge
push
clc
sub
mov
add
pop
dec
cmpsl
push
jecxz
cmp
push
sub
stc
mov
nop
xor
sub
loopne
xor
mov
mov
jae
mov
and
xchg
jne
jge
int3
xor
cmp
ljmp
jl
dec
imul
rcl
xor
lea
test
mov
dec
iret
in
dec
sub
push
and
sahf
repnz
push
pop
dec
add
sub
mov
daa
test
mov
lcall
add
sub
lods
add
popf
addb
and
jo
dec
outsl
cwtl
test
mov
sbb
mov
sub
popf
fmull
add
adc
ljmp
mov
lds
inc
loopne
std
adc
jns,pt
daa
outsb
and
pop
enter
mov
or
fimuls
xlat
sbb
imul
arpl
mov
andl
sbb
jns
sub
sub
cmp
ljmp
stc
mov
loopne
insb
jl
cmp
in
mov
and
pop
std
cmc
jno
imul
ret
aam
mov
daa
sti
rclb
ja
inc
push
test
out
inc
pop
xchg
stmxcsr
sub
adc
test
fs
push
mov
jmp
add
cmpb
and
dec
sub
iret
es
hlt
loopne
jp
addr16
leave
je
ljmp
clc
sbb
sub
js
cltd
sbb
outsb
loope
call
sarb
and
cmp
mov
pop
sub
popf
add
sub
stc
jecxz
std
or
and
test
aas
sub
ljmp
mov
sub
shlb
sub
pop
rcr
jb
sti
sub
jo
cmpsl
fnsave
adc
imul
xor
popa
ja
cmp
xchg
sub
shll
shrb
cld
lods
mov
gs
or
jg
out
cmp
pop
push
cli
sub
sub
add
insl
push
sub
lret
enter
repz
int
sbb
daa
js
iret
insl
mov
sub
xor
and
sub
push
mov
lods
dec
sbb
lret
clc
dec
xchg
cs
sub
fidivs
test
sub
jmp
stos
and
mov
dec
sub
call
out
push
jns
popf
stos
pop
cmp
pop
loopne
and
mov
adc
xchg
clc
sub
cli
add
lds
push
mov
dec
sub
repz
xchg
decl
mov
jmp
addb
loop
pop
fistpll
ss
mov
sub
xchg
out
sub
mov
pop
aaa
add
and
adc
cmp
stos
sub
out
mov
jae
inc
mov
jb
sub
xchg
in
int3
in
inc
sub
out
scas
out
fs
aaa
jmp
sub
cmp
mov
dec
scas
lds
jge
dec
adc
sub
into
sbb
out
loop
sub
sub
dec
ljmp
push
adc
add
nop
pusha
pop
sub
push
mov
xchg
inc
add
mov
pop
stc
hlt
and
push
dec
popf
insl
jecxz
cmp
sbb
enter
out
dec
inc
jl
cmp
xchg
mov
push
jg
or
sub
sbb
repz
lock
sub
pop
test
pop
inc
sbb
lcall
mov
adc
jmp
adc
shrl
push
jnp
sbb
sub
xor
jmp
add
popa
xchg
cmc
rcl
pop
sbb
sub
shrb
daa
cltd
ret
aam
jle
jo
scas
cld
fildl
push
jae
mov
cmp
mov
sub
mov
jmp
les
ljmp
add
mov
jle
mov
sub
push
or
jne
mov
int3
sub
sbb
add
push
adc
imul
cmp
insb
sbb
sub
sub
daa
iret
ja
add
fildll
push
and
and
dec
cld
jp
test
insl
sub
ja
jo
fidivs
lds
out
fisubrl
inc
and
sub
push
mov
sub
inc
loop
dec
sub
adc
ss
and
lahf
jb
pop
sub
dec
movsl
enter
jb
popa
aad
mov
jmp
movsl
lret
adc
and
inc
imul
insb
rcl
popf
pop
scas
daa
push
fsub
ljmp
popa
push
sub
mov
jmp
nop
hlt
scas
shrb
in
sub
pop
sub
or
sbb
loopne
sub
js
push
cmp
sub
add
pop
ret
sub
lret
stos
mov
mov
sub
enter
sub
fcomp
sub
test
mov
divb
aad
imull
sub
fildll
fadds
je
sub
dec
outsl
sbb
es
dec
mov
sub
ljmp
xor
add
lcall
int
lock
and
sbb
in
xor
fstpt
inc
sub
pop
mov
and
shr
lods
leave
jmp
jp
repnz
xor
mov
int
movsb
and
pop
sar
outsb
xor
mov
jae
icebp
and
out
and
adcl
xchg
jmp
sub
out
push
or
cwtl
push
mov
sbb
sub
cmp
push
fwait
push
sbb
xchg
pop
sub
jno
out
addr16
mov
aam
jae
push
pusha
in
insl
push
loopne
sub
sbb
xchg
jmp
push
mov
inc
icebp
bound
dec
lock
lret
fwait
ja
sub
add
pop
and
testb
inc
dec
push
cmp
push
frstor
outsl
or
inc
call
shll
sbbl
aam
data16
mov
ljmp
in
lods
cmpl
mov
jbe
add
int
fildll
sub
xsha1
cmpsb
lea
outsb
subl
pop
adc
fisubl
xor
mov
add
jp
and
negb
repz
clc
mov
inc
lock
and
jge
and
int3
in
outsb
push
dec
dec
sub
ja
scas
inc
xor
adc
in
mov
sub
push
mov
sub
rcrl
dec
int
outsl
push
sbb
mov
stos
test
dec
cmpl
adc
imul
mov
in
imul
sub
cltd
sub
pusha
push
ret
dec
aad
or
shll
cli
inc
sub
fcoml
cmpsl
sub
pop
and
jne
iret
jle
xor
das
cs
cmpsb
push
mov
push
sub
mov
inc
test
in
aam
sub
push
test
and
sub
iret
jbe
mov
jnp
je
jmp
sub
pushf
insl
lahf
lds
fcoml
insb
test
mov
sub
xor
mov
mov
dec
mov
add
inc
sbb
sub
and
pop
and
sub
push
sub
dec
cltd
jmp
mov
sub
jecxz
shr
pop
les
icebp
mov
sub
lcall
cmp
jno
push
pop
out
icebp
jne
push
sbb
adc
or
mov
fsubrs
cli
out
imulb
imul
add
push
add
sub
lea
pop
xchg
out
and
imull
sub
push
push
int3
push
fcmovbe
inc
and
dec
mov
sub
inc
lds
in
lcall
sub
mov
ljmp
fwait
mov
aad
sub
sub
in
xor
mov
dec
lret
shlb
jmp
idivl
test
or
push
sub
scas
int3
inc
adc
adc
pop
cwtl
xor
pop
and
daa
fldenv
dec
aam
andb
and
arpl
sub
fwait
jne
inc
sub
jl
call
pop
nop
cli
pusha
dec
jmp
ret
fstps
sub
mov
pop
loopne
mov
or
push
sub
add
pusha
addb
and
imul
sub
jp
push
add
mov
jb
jne
sub
cmpsl
mov
cld
cmp
fs
inc
push
sti
aad
movsl
or
sub
lods
icebp
imul
jmp
cwtl
and
sbb
and
or
std
mov
dec
sti
ret
stos
lahf
or
pop
cmp
dec
mov
loope
mov
outsb
push
push
out
shlb
xor
clc
pop
or
bnd
ret
pop
sub
addr16
std
sub
scas
cmp
aas
fildl
sbb
sub
mov
mov
push
fidivrs
into
jp
push
cmpsb
insl
daa
add
sub
add
and
cmp
xchg
pop
stos
lods
jbe
loopne
push
xchg
lcall
push
shlb
push
cwtl
push
push
sub
jp
and
push
mov
cmpsl
test
push
sbb
xchg
adc
cli
jno
cmp
adc
mov
scas
mov
mov
movsl
pop
insl
add
pushf
and
adc
out
js
add
dec
bound
inc
xor
lret
ljmp
stos
add
cmc
mov
divb
and
dec
cld
js
sub
icebp
call
rcll
leave
popf
fbstp
out
imul
sbb
jecxz
rcrl
lods
scas
mov
scas
or
jbe
mov
fisttpll
repz
sub
outsb
pop
arpl
aad
hlt
pop
daa
pop
iret
jae
ss
test
mov
mov
rorb
sub
lret
sub
rol
cltd
daa
sub
inc
sbb
push
lods
and
or
repz
and
adc
sub
fwait
mov
scas
ret
bound
out
inc
in
lret
cmp
loope
push
mov
stos
add
adc
outsl
lods
xchg
xor
sub
lahf
and
cld
stos
cmpsl
sub
call
inc
fmull
sub
or
das
cmp
cmc
addr16
pusha
insb
sub
adc
sub
mov
sub
mov
push
fsub
std
xchg
xor
shlb
mov
mov
jg
xchg
sub
cmp
mov
xchg
fs
daa
or
xor
pop
bound
push
mov
sub
test
stos
aad
pop
xchg
daa
pcmpeqb
inc
ret
jmp
stos
les
stc
hlt
dec
rcll
gs
jnp
mov
in
and
mov
sub
and
cmpsb
inc
and
cmp
into
add
int3
sbb
xchg
dec
and
imulb
jo
pusha
mov
and
pop
pushf
ja
and
push
out
jne
loop
ret
sub
push
sub
jns
mov
push
js
jecxz
sub
jns
clc
movsb
mov
movsl
mov
adc
push
in
imul
sub
pop
mov
test
data16
ret
push
mov
iret
imul
mov
mov
xor
mov
ja
orb
loopne
xor
sub
fs
pop
dec
sub
mov
dec
ret
fwait
mov
cmc
aaa
mov
push
dec
sub
sti
lahf
pop
mov
sub
ud1
xchg
leave
sub
js
idivl
andl
push
xor
les
sub
xor
dec
sub
scas
pop
and
pop
mov
aam
adc
daa
sub
fsubs
iret
cs
insl
add
inc
leave
ljmp
jns
and
push
jmp
sub
cli
mov
stos
sub
flds
insb
loopne
jl
pop
cmp
xor
daa
adc
andb
pop
sub
idivl
mov
or
xor
addr16
sub
popa
hlt
push
or
sbb
call
fs
jb
mov
cs
lods
sub
rcll
add
sub
lret
mov
ss
and
imul
jp
in
dec
xchg
fildll
loopne
sti
xor
jno
lea
or
js
dec
cmp
push
mov
andl
sub
jo
movsb
xchg
dec
cmp
dec
and
push
pusha
rclb
adc
jnp
pop
aas
test
fcomps
pop
and
icebp
xor
aad
mov
sub
scas
xor
scas
sub
add
fucom
repnz
icebp
mov
mov
pop
adc
scas
ja
pushf
mulb
je
scas
out
push
cmp
cwtl
sub
lcall
out
adc
test
push
xchg
fsubs
fiaddl
int
mov
jno
sub
enter
sub
incb
mov
sub
insl
add
pop
jl
pop
cmp
test
mov
lea
mov
cs
jmp
and
xorl
idivb
stos
adc
sbb
and
push
jbe
js
mov
sbb
leave
sub
roll
sub
mov
push
dec
cld
pop
repz
xor
sub
dec
imul
pop
sub
inc
xchg
int
sub
cmp
repz
imul
outsb
inc
xor
cmp
fwait
pop
ds
rorl
mov
sbb
iret
inc
mov
shlb
into
and
and
adc
bound
fiaddl
mov
jge
adc
loope
xor
sarl
aaa
xor
mov
pop
or
or
jns
sub
cmpsb
push
mov
aaa
scas
adc
daa
pop
subb
in
into
jns
sbb
mov
pand
arpl
cwtl
push
xor
ja
scas
sub
xchg
imul
icebp
sub
sub
test
or
aad
pop
sbb
and
sub
xchg
out
xor
aam
imul
mov
into
xchg
push
or
in
aad
cmp
lods
sub
inc
mov
test
sub
pop
scas
je
jmp
adc
xchg
shrb
lahf
sub
daa
mov
adc
insb
jne
mov
out
fsubrs
xor
andb
popa
repz
jbe
sbb
in
movb
sub
cs
cmc
inc
sub
push
js
jae
mov
gs
les
push
sub
mov
sti
fisubl
loop
xchg
jecxz
imul
push
adc
outsb
insb
sub
push
inc
jbe
sub
int3
add
cmp
cli
fcoms
adc
lds
mov
push
push
jno
cmp
in
lea
fsubs
mov
out
inc
adc
xor
mov
sub
loop
add
pop
adc
aas
inc
jns
dec
aaa
sub
in
dec
lahf
sub
inc
cltd
ret
inc
mov
and
lret
inc
rcrl
aaa
sbb
adc
xchg
jg
xlat
pop
sub
fdivl
clc
fcmove
sub
fldt
mull
pop
insl
sbb
imul
mov
or
repz
lea
mov
cmp
les
popa
xlat
mov
xchg
pop
stos
inc
adc
and
xorl
xor
daa
xor
or
inc
mov
lcall
xor
and
and
cmp
stos
push
stos
sub
push
mov
sbb
imul
xchg
inc
aad
test
and
je
ret
push
addr16
js
nop
sbb
dec
sbb
sub
outsl
subl
mov
sub
dec
mov
imul
sub
add
lea
sub
jmp
mull
cmp
mov
and
or
pop
or
cs
and
sahf
lods
addl
mov
shrl
pop
lcall
xor
pop
cs
push
aas
push
sub
shll
mov
xor
sub
ss
clc
call
inc
mov
pop
and
add
mov
scas
in
repz
xchg
sub
jae
jge
sub
pop
scas
sub
xor
jo
sub
push
lods
xor
fistl
lcall
and
sub
jno
fldt
enter
mov
jecxz
cmp
sbb
fnsave
inc
or
mov
dec
les
bound
mov
adc
mov
mov
dec
pop
negb
adc
daa
and
cmpl
aad
dec
call
lea
and
mov
jge
cmp
add
fistps
aam
push
sub
ficompl
cmp
push
mov
int3
jbe
xchg
fcmove
in
sbb
sub
repz
lcall
outsb
or
mov
pop
push
repz
ss
sub
mov
fnstenv
ja
add
and
jnp
mov
sub
out
dec
or
into
mov
sub
jge
mov
in
sub
mov
and
ds
sub
rorl
pop
hlt
and
cmp
push
cmp
scas
popa
sub
test
jmp
push
sub
into
adcb
rolb
xor
arpl
xchg
push
sub
sbb
push
das
sub
xchg
ja
jae
scas
inc
cmpsb
rcl
and
add
cmpsb
les
hlt
mov
sub
ss
jle
xchg
scas
fsts
ljmp
xchg
xchg
push
dec
sahf
sub
or
in
mov
push
mov
test
int
and
jae
jmp
cmp
ss
rclb
mov
push
adc
insb
sbb
dec
jnp
xor
inc
sbb
clc
fldt
mov
iret
mov
jge
sub
sub
inc
mov
cmc
repnz
push
sub
lds
xchg
adc
xchg
sub
les
out
jge
insl
mov
lods
lods
push
cmpsb
adc
ja
mov
insl
push
sbb
js
sub
or
sub
jne
sub
sub
movsb
mov
mov
dec
enter
xchg
shrl
xor
lea
mov
add
iret
adc
sub
xor
fisubrl
loop
push
int3
jae
and
cmp
sub
mov
mov
insl
mov
and
push
sub
add
es
aaa
in
ss
test
add
mov
jb
push
sub
movsl
in
outsl
lea
and
sbb
cld
sub
inc
adc
sbb
xor
in
mov
push
int
push
gs
out
mov
jmp
sub
pop
xlat
test
testb
sub
mov
push
scas
sub
and
fsubr
lcall
ret
sub
or
mov
hlt
jmp
dec
mov
mov
adcb
jne
imul
mov
mov
clc
xlat
imull
adc
mov
xor
mov
lods
sub
xchg
sbbl
mov
mov
sub
aad
sub
sbb
jl
sbb
cli
fsubs
mov
jb
es
push
in
xchg
mov
and
cmp
sub
data16
es
xchg
loope
sahf
and
and
ds
jl
sub
jecxz
aas
mov
aad
fistl
out
xor
gs
jnp
adc
sub
sub
lcall
and
decb
mov
add
adc
in
add
and
mov
xor
mov
xchg
adc
sub
inc
rcr
sub
xchg
or
sub
movsl
push
jg
cmp
rolb
sub
adc
inc
enter
lahf
mov
adc
add
insl
jmp
sub
or
dec
ret
sub
pushw
jge
sub
cmc
aad
lret
adc
inc
sub
add
push
xor
imulb
push
lret
mov
fisubrl
in
ret
sub
sub
jmp
sub
hlt
cmp
popf
cmp
sub
sahf
pop
stos
lcall
xor
popf
dec
mov
and
pushf
pop
pop
sub
sarl
int
sub
scas
mov
in
sub
fisubrl
xorl
pop
arpl
mov
mov
pusha
sbb
pop
mov
shlb
xor
and
push
xor
ds
push
in
and
jge
leave
adcl
sbb
pop
sbb
stos
sub
dec
in
mov
xchg
cli
push
inc
xchg
fiadds
mul
iret
outsl
xor
sbb
into
cld
sub
lahf
cld
sub
decl
push
arpl
or
and
das
push
mov
and
or
mov
sub
adc
sub
sub
or
fdivl
sub
out
xchg
dec
inc
sub
vfrczss
jne
sub
sub
ret
xchg
mov
and
call
xchg
fnstsw
push
cli
daa
push
mov
cmp
imul
loopne
aam
ret
aas
in
lahf
out
dec
mov
adc
insb
and
or
sbb
pop
adc
mov
xor
stc
arpl
popl
shrl
lea
adc
push
jg
sub
aaa
add
sub
xchg
sbb
out
mov
sahf
subb
loop
lret
push
cmp
cmp
sub
subb
xor
jne
bound
mov
lret
insl
adc
adc
xchg
imul
xlat
cmp
push
ret
int
sub
lea
xchg
sub
mov
iret
add
inc
push
jp
test
jl
sub
sub
neg
and
sub
push
fucomp
cmp
jae
xor
lret
mov
cmp
aaa
inc
fmul
sub
test
mov
ljmp
lcall
push
pop
cld
divl
dec
mov
xor
arpl
js
adc
push
sub
scas
sub
pop
hlt
mov
aam
sub
mov
test
call
and
enter
xor
sub
nop
lcall
daa
ret
mov
xchg
stos
push
sub
or
negl
cmp
pop
shrb
pop
dec
cld
or
lret
aad
mov
mov
pop
negb
sub
sbb
push
sub
andl
push
sub
mov
pop
jl
inc
sub
xchg
xchg
add
pop
scas
sbb
lock
inc
dec
fimull
es
outsl
jp
leave
mov
mov
sub
add
and
jecxz
leave
loope
or
fstl
push
dec
adc
test
js
mov
xor
mov
sub
adc
dec
sub
aas
mov
jge
add
mov
imul
or
inc
shr
mov
sub
add
pop
lds
icebp
sub
data16
ja
fdiv
xchg
pop
sub
pop
insl
rolb
sub
mov
cmp
mov
sti
inc
sub
hlt
addr16
les
sub
xor
push
cmp
scas
push
enter
push
mov
fsubrl
loope
insl
xchg
and
fldt
sub
mov
and
mov
popa
arpl
je
faddp
cwtl
and
push
sub
jno
and
insb
aas
lret
fcompl
sbb
scas
inc
sarl
dec
popf
push
sub
push
pop
repnz
xor
xor
call
loopne
xchg
cmp
pusha
pop
scas
jbe
sub
adc
repz
inc
mov
xor
inc
mov
clc
cmp
mov
mov
stos
aad
fisubl
and
sub
out
inc
mov
xchg
and
cmp
lahf
mov
sub
sahf
add
test
or
inc
xchg
sub
cmp
xchg
notb
dec
scas
aam
in
test
mov
inc
shrl
cmpb
inc
jmp
sub
adc
test
test
inc
jbe
mov
xchg
das
fdiv
ret
cvtps2pi
mov
gs
ror
sub
subb
sbb
loopne
hlt
lock
and
cmc
and
outsb
out
mov
pushf
ljmp
mov
test
sub
or
in
fmul
sub
rol
stos
and
xor
xchg
cmp
xor
je
sub
lahf
mov
fildll
push
adc
insb
into
sub
sbb
xor
cwtl
jge
scas
dec
xlat
xor
mov
addr16
mov
pop
mov
cmc
fbld
lock
inc
sub
ljmp
add
popa
jecxz
sub
lret
mov
sbb
adc
mov
cmp
push
sub
lods
lcall
push
push
adc
adc
int3
aad
sub
cmpsl
lret
cli
adc
xor
cltd
imul
lea
xchg
sahf
scas
stc
shlb
sub
jecxz
out
iret
cs
lcall
push
addr16
sti
dec
mov
mov
mov
mov
mov
jmp
cltd
pop
lea
mov
xor
scas
add
xor
iret
sub
fsubs
test
mov
push
ret
bound
xor
mov
sub
or
sub
in
inc
jns
sub
fnsave
hlt
mov
je
pop
ret
add
aam
sub
sbb
sub
out
jmp
add
sub
je
lds
adcb
xchg
cmp
xor
cmp
fs
in
jae
fdivrl
loopne
pop
popa
cmp
dec
push
sub
dec
push
jge
sub
dec
mov
mov
mov
adc
add
sbb
mov
mov
sub
dec
and
or
stos
lods
sub
cmpsl
sub
lret
add
lock
xchg
call
dec
sub
popf
shll
in
adc
jns
jg
insl
ljmp
pop
mov
mov
sbb
or
shll
es
xor
sub
sub
pop
mov
push
sub
push
jmp
outsl
loopne
mov
cld
adc
push
add
fld
xor
sub
mov
mov
ljmp
into
add
or
shr
xor
dec
pop
jp
sub
xchg
add
repnz
dec
rolb
cmpsb
cwtl
xchg
adc
mov
adc
mov
out
cmp
jbe
push
mov
xchg
sub
xchg
push
pop
sub
enter
mov
cmpsb
sub
add
sarl
add
sbb
push
mov
bound
daa
mov
lret
mov
sub
and
add
xchg
add
xlat
les
sub
fst
pop
mov
jg
cmp
call
popa
mov
aaa
push
mov
pop
sub
cmpsl
fbstp
push
stos
dec
xchg
push
sub
and
cmpsb
sub
std
jbe
inc
sbb
push
push
stos
mov
xchg
jns
sub
in
test
aad
pop
out
ss
bound
call
shrb
fst
sarl
rorl
movsl
out
insb
cli
jb
les
test
jge
xorl
das
in
jae
sub
sub
insb
pop
xor
testl
sub
stos
pop
bound
je
enter
fwait
cs
pop
sub
bound
or
insl
adc
sbb
xlat
pop
sub
adc
mov
jp
sbb
cmp
jb
push
daa
or
shl
pop
aaa
sub
mov
fcompl
jecxz
hlt
sub
xor
das
pusha
sub
jmp
addr16
xchg
out
lcall
mov
ljmp
fmuls
in
test
sub
push
mov
test
mov
pop
call
or
xor
add
sub
je
insb
pop
xchg
push
jnp
sub
sbb
or
mov
shlb
cmpsb
sub
loope
adc
adc
out
aad
cmp
into
subb
dec
in
and
inc
jae
pop
xor
imul
popl
sub
loope
out
mov
divl
test
mov
push
mov
xchg
mov
sub
test
push
in
xor
cltd
and
int
mull
fisubl
subb
imul
inc
lcall
xchg
hlt
sub
stc
lea
add
and
mov
iret
xor
lds
lods
xlat
stos
push
fsubrp
sub
fdiv
subb
jg
pusha
push
sub
jnp
push
es
in
out
pop
pop
sub
ja
gs
xor
scas
add
and
fwait
sub
mov
or
xchg
test
adc
fsubs
pop
jb
and
jo
movsl
lds
jmp
pop
ret
lods
inc
sub
adc
or
int
xchg
shr
mov
loop
mov
insl
leave
push
xor
mov
and
movsb
ljmp
mov
mov
cmpsb
dec
xor
shrl
pop
xor
adc
mov
and
or
jecxz
sbb
sbb
or
jns
fildl
dec
dec
push
or
mov
sbb
xor
popf
dec
push
push
les
dec
mov
jmp
sub
mov
in
adc
aad
push
loope
or
insl
xor
scas
inc
push
push
mov
lods
push
testb
insl
xchg
jae
rorb
sub
mov
lods
imul
lcall
dec
fcomps
xchg
sub
and
push
and
or
aaa
leave
bound
and
jecxz
lock
movsl
fwait
outsb
repz
dec
xlat
insb
cltd
test
dec
in
popa
xchg
dec
mov
xchg
xor
bound
push
pop
popa
int3
sarb
adc
lods
sar
cli
cmpsl
lea
test
push
or
mov
xor
mov
lods
mov
outsb
or
jmp
or
add
xor
and
cmp
xchg
sbb
aam
sub
sbb
bound
and
mov
pop
jmp
inc
xor
xchg
inc
push
jge
sub
popa
and
inc
xor
pop
sbb
push
mov
out
dec
mov
addl
jne
pop
leave
orl
sub
mov
sub
lods
cs
addr16
mov
dec
aaa
mulb
adc
daa
jmp
popa
mov
xchg
imul
add
or
test
inc
sarb
jge
mov
and
movsb
adc
lahf
and
jno
loopne
lea
inc
sbb
cs
dec
inc
int
pmulhw
jae
js
sub
xor
mov
ror
stc
lds
push
ds
push
sub
movsl
sub
xchg
sub
movsb
add
jno
insb
adc
pop
jae
test
cmpsb
jmp
mov
sahf
jle
mull
cmpsl
push
xor
sub
sbb
dec
xchg
cmpsl
mov
scas
jno
sub
loop
xchg
dec
push
xor
mov
cs
inc
inc
xchg
insl
adc
inc
push
mov
jbe
mov
push
fisttpll
lods
ficompl
dec
std
xlat
push
cs
popf
pop
cwtl
out
adc
inc
jmp
gs
pop
push
adc
loope
fldenv
xor
mov
rclb
aad
ljmp
mov
mov
sub
xor
xor
jno
push
push
loopne
mov
and
push
jbe
sub
pushf
add
enter
xchg
and
adc
push
lret
cmp
enter
inc
and
pop
mov
das
push
jb
xor
ljmp
int
cmp
jle
lds
add
movsb
stc
dec
and
push
push
adc
ret
xor
mov
enter
jno
inc
mov
and
sub
jg
cmp
jnp
out
add
cmp
push
push
subb
add
rorl
cmpl
sub
xlat
je
sbb
jmp
adc
jno
in
pop
movsl
sub
xchg
sti
and
vlddqu
xor
mov
xchg
xor
orl
dec
notb
fcompl
jp
mov
add
in
mov
scas
ds
aaa
pop
icebp
fwait
dec
mov
sub
test
jmp
arpl
sub
enter
sub
inc
cwtl
jne
pop
ds
in
mov
out
out
adc
xchg
test
sub
leave
sahf
addr16
aaa
mov
es
out
sub
lock
in
mov
sub
cmpb
xor
and
pop
jb
pop
mov
jnp
push
mov
jbe
jno
rcr
push
push
test
dec
clc
jnp
sahf
pop
cs
shrl
and
mov
pushf
pusha
das
fcomps
push
call
mov
and
dec
test
shll
mov
xchg
inc
icebp
sub
jns
ret
lret
sub
jl
mov
inc
out
dec
scas
sub
testb
dec
sub
cmp
mov
sub
xchg
imul
or
dec
cmpsl
xchg
ret
enter
xor
gs
jb
sub
sbb
sub
cmp
shrb
sub
jo
enter
sub
test
test
and
push
movsl
pop
sub
cli
int3
cld
aaa
les
cmp
dec
inc
lock
sbb
mov
sub
and
lods
adc
push
sbb
subl
imul
sub
push
inc
inc
stos
fmull
leave
test
and
sub
adc
sub
pop
mov
inc
sti
push
scas
cmp
test
cmc
mov
xchg
jecxz
cmpsb
sub
out
adc
push
jge
fst
xchg
sub
sbb
fdiv
and
pop
enter
pop
pop
jl
jo
mov
and
ljmp
and
cltd
and
sub
imul
divw
int3
std
push
hlt
jae
adc
aad
sub
movsl
add
pop
dec
jg
adc
popa
adc
dec
and
arpl
xor
mov
mov
les
add
xchg
push
shlb
add
stos
sti
pop
and
les
inc
shrl
in
sub
cmp
fildll
jno
lret
fisubrs
shl
aaa
ja
sti
fsubrl
mov
fsts
movsl
bound
shll
jp
jb
and
outsb
add
dec
lret
jo
or
cmp
sbb
sub
dec
adc
leave
sub
stos
add
push
jno
lods
outsb
imul
mov
and
fisttpll
ret
scas
imul
or
xchg
sub
jnp
sbb
leave
shr
cmp
dec
cmp
add
lcall
pop
inc
fs
adc
movsb
bound
push
lret
xor
inc
pop
pop
ret
push
leave
ret
sbb
push
jb
int
call
jb
mov
and
push
inc
dec
cmpsb
add
lods
fsubrs
mulb
test
pop
dec
movsl
aad
rcrb
frstor
mov
stos
aaa
sub
cs
pop
dec
and
bound
inc
leave
jg
outsb
push
sar
mov
or
adc
fldenv
adc
mov
adc
cmp
mov
inc
loopne
adc
push
inc
popf
mov
sbb
inc
outsl
cwtl
cmp
and
push
inc
rdpmc
mov
outsb
idivl
lahf
xor
test
add
xor
mov
ds
cmpsb
cs
mov
jle
int3
pushf
std
pop
andb
push
and
pop
xor
xor
or
jno
xor
sub
adc
dec
add
cmpsl
or
leave
popa
inc
and
outsl
lea
sub
inc
mov
bound
xchg
ds
ljmp
cs
adc
icebp
cld
insb
add
cmp
sub
pop
cmpsb
aaa
push
cmp
pop
inc
test
adc
cli
cmp
imul
and
aaa
into
cs
gs
pop
sbb
je
cmp
sub
pop
xor
mov
notb
dec
push
js
cmpl
stc
int3
mov
inc
adc
xchg
insb
aaa
test
in
xlat
daa
sub
push
out
add
and
adc
xor
addr16
jne
lret
gs
mov
ljmp
mov
mov
imul
call
jge
mov
inc
inc
lea
mov
arpl
outsb
sbb
das
or
xchg
fisttps
loope
sub
xchg
test
scas
popf
test
mov
loop
mov
sub
mov
outsb
lods
mov
sub
das
scas
and
les
int
mov
fsubs
mov
cwtl
bound
lretw
jl
mov
jge
sbb
mov
jnp
push
and
cmc
cmp
and
jle
sbb
mov
mov
jge
mov
fnstenv
int3
inc
push
pop
aad
int3
into
cs
jae
stc
sub
lcall
add
sahf
pushl
jp
sbb
xchg
cmp
cli
push
das
xor
ds
inc
cmpb
push
imul
sub
test
mov
mov
pop
mov
test
loopne
xor
cwtl
cmpb
and
jnp
mov
or
insl
movsl
mov
out
orl
sbb
lea
lcall
lret
in
xchg
leave
jnp
xor
insl
push
in
test
xchg
sbb
lcall
sub
pop
outsb
int3
popf
cmp
inc
sub
xchg
adc
push
jecxz
cltd
rolb
xchg
dec
gs
std
push
ja
mov
pop
lret
scas
fildll
adcl
js
push
dec
das
mov
pop
out
or
sub
addr16
xor
xor
aas
sub
mov
sbb
mov
add
mov
lea
mov
test
pop
or
bound
xlat
xchg
lcall
in
and
xor
lods
mov
adc
bound
jmp
mov
es
adc
cltd
fcoml
lahf
outsb
incb
cmc
push
mov
movsl
daa
add
jle
and
cs
push
pop
pop
test
bound
cltd
mov
mov
mov
test
hlt
jae
sarb
sub
lret
inc
int3
mov
cs
or
jp
das
and
add
popf
push
mov
insb
xlat
pop
cmp
cmpsl
pusha
and
mov
mov
int
lcall
xchg
cmpsl
mov
xchg
sbb
dec
and
xchg
std
bound
jbe
stos
ret
jo
es
adc
test
xchg
inc
popf
aaa
arpl
inc
xor
mov
int3
movq
repnz
lret
add
rdmsr
out
or
mov
mov
jmp
cmp
adc
xor
push
lea
pop
mov
xor
aas
cs
iret
pop
test
lea
jmp
bound
inc
ljmp
lods
sbb
cmpsl
aaa
mull
fwait
inc
push
ja
fwait
sub
bound
insb
sub
xchg
push
jae
push
lret
mov
cmpsl
adc
repz
and
push
aad
cmp
int3
insb
fsts
insl
leave
bound
ljmpw
mov
xchg
mov
add
sbb
inc
mov
inc
dec
fstpt
in
or
jg
adc
js
bound
or
pop
cmpsl
jno
scas
mov
sbb
or
inc
and
adc
and
adc
filds
lock
push
pop
mov
add
popa
imul
leave
lock
jecxz
insl
jno
bound
shll
mov
subl
outsb
fwait
lds
adc
out
jo
popa
pop
sub
push
gs
leave
testl
stos
xchg
mov
sub
ret
and
loope
mov
cld
ljmp
fbstp
js
call
xchg
ss
sub
outsb
gs
lds
inc
dec
sub
sti
sbb
sbb
dec
cmpsl
push
mov
mov
sbb
cmpsl
mov
and
arpl
icebp
push
je
pop
lock
sbb
jmp
insl
ljmp
repnz
gs
adc
pop
sub
insb
jns
out
hlt
jl
xchg
shlb
push
outsb
jl
cmovge
push
xchg
jge
add
iret
or
cli
leave
push
sub
adc
hlt
inc
in
mov
call
daa
mulb
push
xor
in
stc
movsl
imul
dec
inc
jne
popf
das
adc
inc
in
and
mov
or
jno
rorb
adc
loope
inc
mov
fs
adc
mov
sbb
mov
xor
inc
push
mov
test
lods
push
push
or
mov
inc
jbe
jnp
adc
cmp
xor
dec
sub
pop
jg
sbb
mov
dec
pop
mov
ret
test
insb
imul
movsl
pop
xor
dec
lock
and
or
push
dec
sbb
pop
sub
in
mov
rcl
std
test
call
dec
push
out
sub
ffreep
jl
sub
xchg
sub
ror
and
lret
xor
jle
mov
push
call
adc
data16
push
arpl
push
gs
cmp
out
push
jnp
xchg
sub
mov
ljmp
sub
push
push
jecxz
lods
mov
push
sub
testl
sub
mov
lahf
fs
or
sub
mov
add
fldcw
loopne
sahf
adc
mov
test
cmp
hlt
js
mov
stc
cld
inc
or
xchg
leave
data16
jge
loop
aam
cs
sub
sub
imul
mov
testb
jg
sub
das
orb
out
in
imul
sub
leave
jb
lods
xor
mov
jmp
mov
mov
mov
jne
popf
test
mov
pop
cmpsb
out
xchg
xchg
pop
nop
ds
rol
stc
sub
inc
mov
jge
pop
les
lcall
xchg
mov
mov
adc
adc
addr16
fistpll
push
call
popf
mov
imull
add
scas
add
mov
mov
cs
shll
mov
push
aaa
mov
dec
sbb
rcl
outsb
test
clc
cmpsb
push
aaa
test
pop
cmp
std
sub
sub
cmp
fwait
into
lcall
or
gs
ss
test
outsb
dec
xchg
cltd
fcmovnu
in
xor
pop
cltd
and
push
nop
jo
xchg
push
sahf
cwtl
rclb
lods
test
push
arpl
mov
sub
mov
add
shr
mov
pop
fisttpll
cmp
sbb
jae
pop
in
enter
adc
lret
ljmp
xchg
add
mov
bound
dec
dec
sbb
mov
mul
mov
ds
scas
aaa
scas
std
inc
iret
fisubl
mov
and
call
std
cs
fldt
bound
data16
jecxz
enter
inc
push
xor
imul
aas
inc
adc
lods
sub
mov
fidivl
push
xchg
cmp
jne
xor
lods
test
xchg
int3
insl
jae
andb
cli
jle
push
int
inc
lods
int3
jmp
cli
pop
sub
sub
fwait
adc
bound
repz
sbb
inc
or
jecxz
cltd
add
mov
or
aas
dec
aaa
and
cwtl
xor
dec
pop
cwtl
fdivl
stos
fsts
dec
cmpsb
ficomps
lds
add
jg
cmp
mov
add
or
jns
mov
dec
lods
or
inc
mov
sub
xchg
in
inc
sub
add
push
or
inc
sub
add
and
sbb
inc
add
sbb
fidivrs
bound
mov
dec
adc
mov
cmp
adc
add
sub
and
shl
cwtl
fildl
push
arpl
push
xor
xchg
call
bound
cmp
jmp
jb
ja
jle
mov
int3
xor
sti
or
imul
xor
mov
mov
clc
pop
or
shr
bound
mov
imul
dec
js
inc
idivb
inc
push
inc
ret
rclb
fistps
inc
dec
inc
addb
in
ljmp
jo
sbb
cmp
popf
cmp
push
or
xchg
fadds
gs
test
lea
in
push
insl
or
les
and
sbb
adc
hlt
out
push
iret
iret
push
popl
mov
xor
negl
add
ja
cltd
jl
loopne
insb
sub
sbb
std
insb
xor
or
or
ja
daa
cwtl
sub
sbb
push
jnp
xor
imul
insb
cs
fwait
or
lock
sub
push
dec
xor
daa
push
mov
jge
call
cmpsl
sub
xor
push
sbb
mov
xlat
pop
mov
rcrb
test
js
int
mov
outsb
push
hlt
popf
fsub
jl
cmc
gs
sub
sub
idivl
scas
das
call
scas
outsl
daa
and
insl
pushl
inc
lret
inc
mov
out
push
bswap
lcall
push
cmpb
or
icebp
or
pop
lock
stc
in
push
add
out
xlat
dec
add
cli
or
sub
test
push
ret
mov
addr16
mov
xor
aam
ljmp
adc
aam
movsb
daa
test
fiadds
lret
and
sub
xor
xor
adc
lock
and
lcall
fnsave
xlat
dec
imul
sub
inc
roll
adc
mov
jno
mov
dec
mov
lea
fwait
mov
push
cmpsb
jecxz
mov
xchg
xchg
out
aam
mov
insb
push
gs
mov
movsb
pop
cmpsl
sub
imul
pusha
lcall
or
add
mov
scas
cmpsl
sbb
jno
xchg
ss
cmpps
fwait
push
mov
mov
jnp
and
orl
call
dec
pop
cmc
push
inc
mov
jno
pop
mov
stc
out
xlat
push
sub
imul
fisubs
push
loopne
repz
mov
mov
and
cs
in
dec
jne
popa
pop
daa
fiadds
jmp
sbb
and
mov
and
xor
push
push
mov
push
popa
out
xchg
or
dec
bound
mov
scas
xchg
jo
push
fcoml
movsl
and
loope,pn
add
jg
xchg
jne
aam
add
enter
sbb
into
ret
fucom
cmp
lock
sub
inc
popf
cli
stc
sub
test
mov
loopne
jg
lret
lods
jmp
sub
sbb
sbb
or
fnstenv
mov
insl
sbb
xchg
out
sub
stos
cld
push
repnz
ljmp
push
mov
xor
fisttps
cwtl
push
push
xor
xor
dec
sub
and
jno
leave
fldt
bound
ja
pop
jne
push
pop
sbb
aad
push
cmp
push
pop
lods
mov
lea
lret
test
imul
cmp
inc
jp
fwait
sub
mov
into
mov
and
sub
orl
fstps
in
dec
test
dec
hlt
adc
aad
cmp
mov
mov
xchg
arpl
imul
mov
mov
popf
int3
icebp
inc
cmp
pop
mov
lods
and
cmp
mov
mov
cmp
inc
jge
pop
ds
arpl
filds
and
add
cmp
mov
adc
add
push
inc
mov
cmp
sti
sahf
popf
scas
sbb
push
cs
insl
xor
fdivrs
out
cmpsl
shrb
aas
dec
hlt
fmull
pop
outsb
in
xchg
jp
and
lcall
fldt
dec
sbb
or
xor
leave
lcall
inc
rcrl
sub
cs
ss
adc
dec
jnp
jne
movsl
jmp
int
lret
in
push
cmpsl
xor
icebp
addr16
lcall
gs
lahf
mov
push
repz
bound
cmp
push
dec
cli
pop
pop
test
aas
stc
in
mov
cmp
cmc
and
mov
adc
or
push
push
ret
pop
cmpsl
and
or
movsl
cmp
test
dec
cli
push
fs
addr16
pushf
daa
insl
mov
adc
pop
sbb
dec
lods
inc
sbb
mov
gs
pop
xchg
bound
inc
xchg
xlat
scas
fwait
mov
enter
movsb
lods
xor
bound
out
scas
dec
mov
emms
cmp
lea
ja
aas
and
outsl
lcall
loope
xchg
inc
paddq
ret
shlb
popa
arpl
das
cmp
mov
push
icebp
arpl
pushf
pop
test
add
xor
xor
sub
adc
incb
fwait
push
aaa
test
and
outsb
cmpsb
ss
jge
fildl
fnsetpm(287
jp
xchg
adc
int3
inc
outsl
lea
mov
pop
mov
inc
popf
jp
leave
lcall
xor
shlb
cmpsl
mov
pop
cltd
xor
inc
jle
dec
orb
std
sbb
repz
and
jnp
insl
adc
movsl
push
xor
inc
jmp
in
int
les
inc
icebp
push
in
outsb
mov
imul
mov
insl
cs
jne
pop
push
outsb
int3
int3
add
pop
pop
iret
push
inc
ja
movsb
sbb
jne
fsubs
pop
orb
adc
xchg
jmp
xor
xor
in
or
rolb
dec
cmpsl
loopne
or
mov
dec
iret
jg
insl
cmpsl
fs
mov
call
dec
xor
mov
mov
cltd
pop
push
imul
add
mov
mov
inc
stos
imul
mov
cmc
bound
into
cli
leave
push
and
push
sarl
enter
outsb
push
fs
test
mov
jbe
ret
bound
mov
loop
sub
ljmp
cmp
or
add
insb
pusha
out
mov
cmp
subps
dec
jno
pop
or
test
bound
pop
pop
xchg
add
pop
pusha
lods
roll
notb
dec
add
imul
xlat
mov
sub
push
frstor
mov
inc
loopne
ja
or
jbe
aas
outsb
jle
pusha
mov
or
pushl
aaa
loopne
inc
mov
sbb
mov
outsl
sbb
xor
add
adc
fs
mov
shll
into
mov
sub
pop
add
outsb
inc
mov
push
and
push
adc
sub
push
mov
cmp
js
loope
sub
or
push
in
and
adc
inc
aas
bound
in
leave
jae
and
mov
mov
popf
repnz
xor
pop
cmpl
pop
jne
scas
mov
inc
cwtl
jne
jns
sbb
repz
mov
out
fstpl
and
push
outsb
or
mov
fidivrl
sub
scas
aaa
outsb
lret
sbb
jne
repz
add
xor
or
outsl
ror
hlt
insb
sahf
into
inc
scas
cmc
lods
ret
inc
ds
rcrb
jp
push
ljmp
jge
repnz
adc
repnz
shr
dec
or
push
in
ja
outsb
test
scas
inc
lahf
mov
inc
or
sbb
das
cmp
popa
sub
xor
mov
inc
or
jle
cmc
jmp
mov
adc
fisttpl
mov
fidivrl
pusha
enter
or
mov
sub
inc
adc
cld
into
js
rcll
iret
lods
mov
in
pushf
cmc
mov
xchg
adc
mov
mov
xor
inc
mov
jns
jne
pop
push
cmp
cs
jecxz
movsl
cwtl
or
push
sbb
test
jo
or
gs
add
cs
icebp
shll
push
fimull
mov
lcall
stos
mov
cwtl
dec
xor
fwait
gs
pop
shlb
push
sub
insb
push
fldcw
jae
sub
fcomps
xchg
roll
push
neg
pop
gs
add
gs
adc
push
loope
push
push
es
jp
pop
mov
iret
fdivrs
sub
push
xchg
add
or
cltd
fs
int3
mov
add
mov
repz
dec
fistps
lock
inc
push
inc
adc
mov
inc
add
xchg
sbb
int
push
mov
cmp
jmp
sbb
ss
pusha
lret
subb
jl
push
sub
jg
fnclex
shlb
je
cmpsl
int3
inc
push
xor
jl
and
iret
push
pop
and
jecxz
rclb
ja
xchg
int3
dec
and
stos
push
xchg
shlb
stos
add
mov
movsl
inc
loope
jl
mov
clc
mov
loopne
mov
inc
dec
repz
sub
leave
adc
jae
sbb
cmp
insl
adc
fisttps
or
lcall
xor
loop
mov
vprotw
cmpsl
jle
cs
cmp
out
cli
sub
jp
inc
mov
fcoml
add
mov
ja
fwait
sub
jle
repz
push
xor
loopne
lock
mov
and
mov
inc
fsts
lret
cmp
add
mov
sbb
fwait
xor
iret
popa
xchg
xlat
cmpsl
enter
fsubrs
or
mov
pop
shlb
xor
sar
mov
pop
adc
test
cwtl
mov
dec
sahf
mov
stos
out
in
mov
jp
cmp
push
push
add
in
mov
xor
mov
mov
pop
cld
xchg
sbb
test
ljmp
bound
daa
pop
dec
pop
movntq
cmp
mov
mov
cmp
int
inc
dec
cs
leave
mov
mov
and
bound
push
inc
test
jl
test
stos
rcrl
push
scas
push
lahf
mov
add
push
or
push
out
ret
pop
push
mov
xchg
mov
imul
mov
out
pop
outsl
mov
mov
dec
cmp
or
pop
cmp
mov
scas
dec
and
insl
push
add
mov
and
nop
cli
pop
mov
xor
cmpsl
iret
xchg
mov
test
mov
ss
jmp
xor
fildll
adcl
pop
arpl
sub
sub
mov
jo
cmp
jp
jbe
jmp
pop
mov
cmpsl
mov
jno
push
sti
addr16
sbb
or
repnz
xor
ljmp
bound
out
adc
mov
sbb
pop
jg
stos
out
nop
push
jge
imul
icebp
enter
mov
call
pop
cmp
cltd
add
xchg
push
lods
mov
add
or
pop
shld
pop
subb
sub
push
mov
movb
add
andb
push
out
mov
test
xchg
mov
xor
add
push
cmp
outsb
gs
mov
add
jp
xchg
cmpsl
jno
cmp
movsb
xchg
iret
test
repz
mov
ret
mov
push
scas
cmpsl
or
dec
data16
pop
bound
pop
or
lods
dec
pop
xchg
addr16
mov
dec
cmp
adc
and
loope
cmp
push
sub
fsubrl
sarb
in
cmp
ds
int3
adc
and
fisttpll
das
dec
jp
daa
xor
pop
mov
dec
ds
outsb
nop
and
mov
or
in
mov
mov
insl
in
aam
add
test
pop
xchg
xchg
bound
sbb
outsl
les
fcmovnbe
ret
shrb
and
fs
and
test
push
cmpsb
mov
dec
loop
fmull
popa
leave
into
xor
cmpsl
or
mov
test
mov
inc
stos
inc
adc
xorps
mov
sbb
pop
out
add
xor
ja
add
loopne
in
call
and
fs
popa
inc
loop
popa
cli
out
sub
fdivl
out
flds
inc
cwtl
sub
bound
sub
jmp
dec
cmp
shrl
fnstenv
scas
push
orb
jno
enter
das
push
cs
mov
inc
arpl
xor
test
aas
mov
inc
nop
pop
cld
je
push
rorb
insb
adc
inc
mov
and
js
push
fidivs
lcall
fisubrl
jmp
rclb
out
xchg
imul
push
imul
inc
mov
popa
mov
loop
int
mov
dec
dec
test
or
outsl
add
popl
jmp
xor
jne
repz
jns
icebp
add
cmp
xchg
in
mov
or
fstl
and
add
pop
popf
fisubs
cmpsl
mov
push
push
or
icebp
pop
mov
test
lds
xor
incl
push
adc
add
roll
add
cmp
jb
push
mov
xchg
jg
jo
in
shll
insb
je
xlat
lcall
pop
es
in
xchg
push
or
dec
fs
mov
add
jle
adc
mov
mov
fildll
das
lods
pop
imul
stos
mov
out
in
addr16
jp
sbb
nop
xchg
jno
jae
lea
das
dec
mov
pop
std
pop
ret
jle
imull
adc
js
insl
lods
push
adc
scas
dec
lret
ds
jns
das
shll
dec
xor
in
popa
mov
dec
mov
insl
and
xchg
xchg
xor
jge
sbb
outsb
out
popf
mov
shrb
mov
jp
add
mov
test
jae
mov
pop
call
jle
lea
in
mov
jae
push
mov
shrb
test
imul
sbb
lret
in
mov
add
test
cs
xlat
push
sub
outsb
ss
sub
outsl
bound
xchg
neg
out
test
sub
xor
lods
in
cmp
cmpsl
sahf
ret
jns
fwait
ds
push
and
lods
mov
or
stos
adc
adc
in
daa
imul
fcmovnbe
ficomps
sub
rcrl
add
sub
fstps
mov
popf
pop
rcll
lds
daa
mov
sub
adcl
sub
sub
pop
xchg
or
clc
mov
outsb
lods
in
lret
or
lods
xchg
xor
push
or
pusha
insl
ficoms
cli
push
lcall
or
insl
mov
add
aad
sbb
clc
mov
dec
sarl
jns
mov
sub
jb
mov
sub
sub
in
aaa
jge
push
xchg
sub
jnp
pop
cmpl
sbb
pop
push
mov
aas
add
pop
pop
rorl
mov
std
cld
arpl
loop
shl
pop
out
call
out
out
outsb
and
jbe
and
test
push
ret
pusha
adc
sbb
add
aaa
push
into
cld
sub
clc
pop
adc
jp
test
ss
movsb
in
cmp
pop
push
popf
mov
je
jl
pop
bound
jmp
inc
jmp
push
fcmovne
insb
clc
push
jnp
bound
sahf
pop
aaa
lods
leave
incb
mov
popf
imul
lds
xchg
fcoms
and
cmp
jae
mov
lods
ja
int
pop
outsb
dec
and
xchg
or
push
sbb
lods
cmp
push
lcall
andl
lss
adc
inc
das
imull
or
and
ret
stc
nop
mov
mov
sahf
shll
mov
jae
inc
adc
jne
scas
pushf
or
jmp
add
clc
dec
dec
and
add
mov
ja
xor
pop
stos
jo
sub
or
test
popa
jmp
neg
outsb
arpl
shll
sub
in
mov
in
pop
inc
adcb
cltd
xchg
jne
ret
loope
cmpsl
sub
mov
xchg
adc
call
stc
mov
rorb
enter
shrl
cmpl
adc
imul
out
xchg
jmp
aaa
jne
jecxz
inc
jle
sahf
daa
aaa
rcr
xor
sbb
testb
popa
out
iret
test
sub
lahf
mov
daa
sti
lds
xor
insb
lods
sbb
mov
xlat
xchg
bound
xlat
xchg
test
sub
jns
cwtl
pop
cli
out
jg
stos
addb
dec
sbb
jge
in
xor
push
push
mov
stos
jecxz
loopne
cmp
repnz
clc
jp
sub
xchg
scas
pop
inc
call
in
push
adc
cmpsl
cmp
testl
push
jo
xchg
sub
jns
loop
ss
outsb
cmp
xlat
sti
stc
sub
ficoms
mov
scas
ret
test
and
dec
pop
sub
push
mov
inc
and
sub
jp
cwtl
call
in
scas
push
jo
frstor
mov
mov
daa
iret
and
stos
ljmp
push
add
cmp
push
inc
repnz
dec
pop
xlat
jg
xchg
and
lahf
jno
push
in
addr16
les
fisttpl
cmp
and
pop
iret
pop
gs
jae
sub
xor
in
push
mov
bound
aad
mov
jae
test
mov
mov
and
out
je
mov
xchg
and
dec
xchg
mov
call
add
outsb
jne
mov
cs
movsl
shll
jae
add
and
insb
inc
shlb
sti
cltd
xor
and
xchg
sub
stos
push
inc
and
bound
pop
mov
or
sub
push
aad
jne
mov
mov
scas
or
outsb
cmp
and
dec
test
lahf
or
ds
or
mov
outsb
popa
pop
mov
movsb
ret
push
push
hlt
xorb
cmp
gs
daa
jmp
mov
pop
dec
sti
fnstenv
fisttpl
sbb
pop
imul
stos
cmpsl
out
jno
cwtl
dec
shrl
lods
mov
inc
imul
xchg
pop
arpl
iret
rol
push
or
pop
test
rorb
lret
aas
pop
adc
and
test
ljmp
adc
mov
clc
in
sub
mov
add
ss
inc
mov
push
gs
shl
push
sub
xchg
sub
outsb
in
push
cmp
aaa
jno
popf
pop
sub
mov
and
dec
lahf
scas
sub
inc
mov
arpl
hlt
mov
out
cmpsl
shrl
call
mov
popa
cwtl
and
js
lods
jne
das
push
scas
imul
enter
shlb
insb
xchg
outsb
dec
out
jne
bound
jnp
mov
js
inc
bound
mov
das
mov
pop
sahf
dec
push
and
bound
inc
lods
lods
pop
movsb
mov
or
in
add
aaa
in
add
xor
mov
xchg
push
push
dec
fs
sub
mov
aad
cltd
dec
aaa
cmp
or
mov
sbb
lahf
repnz
das
mov
adc
jb
pop
inc
jecxz
movsb
test
fcompl
pop
inc
gs
notb
adc
fisubrs
movnti
and
push
dec
cmp
push
scas
sahf
fcomps
out
daa
cmp
sbb
bound
push
stos
push
xchg
imul
push
pop
movsb
pop
lea
jecxz
jmp
jo
mov
xor
or
pop
jl
outsl
add
stos
push
jle
jmp
call
and
sbb
lret
loop
nop
sub
divb
adcb
cwtl
repz
int3
insl
or
xlat
mul
in
or
sub
mov
xor
mov
adcb
leave
xchg
shr
sub
ds
or
imul
jne
mov
push
pop
jmp
add
fimuls
mov
jnp
xchg
es
fnsave
sub
mov
call
fs
add
cmp
push
adc
clc
iret
inc
addl
fists
popa
out
xchg
sbb
adc
xlat
cmpsb
addr16
pop
push
dec
adc
ja
cs
sub
icebp
out
sub
push
push
mov
add
dec
inc
push
add
bound
out
pop
inc
mov
das
mov
dec
sbb
or
push
adc
iret
pusha
sub
dec
adc
cmp
inc
jecxz
sub
pop
push
es
add
daa
pushf
xor
std
sub
xchg
cmpsl
inc
pop
mov
add
sub
nop
lock
ljmp
sub
ret
sub
lahf
or
inc
pop
mov
mov
xor
xchg
push
imulb
je
or
into
dec
sub
mov
arpl
loop
jno
mov
push
iret
out
jmp
leave
out
dec
int3
std
into
jno
pusha
idivl
pop
xchg
outsl
arpl
mov
xlat
idivl
inc
mov
aaa
lcall
iret
cmp
sbb
mov
xchg
bound
inc
mov
sbb
mov
loope
arpl
mov
xchg
arpl
sbb
cli
pop
popa
fwait
dec
cli
call
pop
push
aas
mov
lods
out
inc
bound
xor
jns
popa
ss
cmp
mov
imul
ret
jg
loopne
insl
push
leave
fldt
fwait
in
out
lret
and
rolb
push
pusha
cmp
jmp
or
pop
mov
cmp
or
sub
gs
inc
test
jp
in
jno
jb
jae
xchg
aam
and
inc
test
hlt
mov
and
notl
outsl
in
imul
pop
push
cltd
imul
fs
or
jmp
out
jne
pop
lea
sar
jb,pt
daa
out
sarb
cmp
bound
cmp
cs
test
adc
inc
test
inc
sub
or
mov
pop
sub
jmp
outsb
gs
das
movsl
fisubl
pop
push
cmp
fisttpl
scas
dec
sub
xchg
fisttpl
cmp
jno
jmp
dec
bound
je
sbb
outsb
stos
loop
out
les
out
nopl
mov
push
and
shl
imul
gs
mov
aaa
ja
mov
roll
push
stc
xor
data16
mov
sub
or
lahf
sub
sbb
and
ja
insb
jne
xchg
adc
in
push
mov
pop
xchg
frstor
repnz
out
sbb
insb
mov
push
movsb
inc
mov
mov
cmp
es
xchg
arpl
adc
cmc
inc
fninit
mov
sbb
dec
rcrl
daa
cs
add
pop
xchg
rorb
out
cli
aad
xor
jo
mov
pop
clc
stos
test
mov
mov
xchg
movsb
push
fidivl
dec
decb
ret
jecxz
inc
cwtl
movsl
mov
rolb
test
shl
push
out
icebp
sbb
and
mov
sbb
insl
sbb
and
dec
fidivrs
jb
mov
xor
bound
cld
dec
sub
cmpsl
mov
add
pop
dec
ficoms
inc
xchg
sbbb
and
shr
mov
sub
and
popf
es
mov
movl
gs
push
xchg
test
fidivs
jns
fisubrs
sbb
inc
pop
mov
push
xchg
bound
out
inc
inc
ja
mov
addl
pop
mov
add
scas
cmp
call
enter
push
mov
sub
cmp
daa
fisubrs
adc
testb
dec
and
adc
mov
jmp
mov
in
repnz
aas
adcb
push
call
jmp
les
push
xchg
inc
pop
push
sbb
xchg
and
xlat
pop
inc
sub
mov
inc
add
rclb
gs
adc
pop
imul
pop
xor
cmpb
or
cmpsl
xor
add
popa
int3
mov
das
add
inc
add
xchg
sub
fstpt
add
fisubs
loop
mov
pop
inc
mov
add
test
popa
lahf
ja
cmpsb
jp
xlat
ret
xlat
sbb
inc
cmpsl
cltd
adc
xchg
push
cmp
je
loop
jge
add
aaa
clc
popf
outsb
mov
sub
aam
sbb
pop
pop
mov
xor
dec
outsb
cmp
mov
sahf
aas
stc
jg
push
mov
xor
popa
xchg
and
push
cmpl
aas
pop
ja
sbb
popa
sub
movsl
pop
cmp
lds
jg
sub
add
cmp
pop
sbb
mov
cmp
push
cmp
push
fidivrl
pop
mov
add
gs
mov
xchg
cwtl
fwait
pop
cmp
rclb
cmp
aas
cmp
cltd
flds
fnstsw
clc
pop
pop
xchg
cmp
int3
pop
imul
mov
ljmp
insl
sub
imulb
test
ljmp
lcall
pop
adc
daa
add
rorl
filds
jb
leave
inc
jns
push
add
cmp
xchg
push
jne
lahf
cmp
mov
aaa
push
mov
push
push
or
in
sti
into
mov
lahf
push
cmp
lcall
sub
lret
nop
adc
and
cmpsl
inc
sbb
mov
ja
mov
dec
mov
cs
lods
bound
gs
daa
outsb
insb
or
add
xchg
gs
add
sub
and
test
sub
mov
sbb
mov
outsb
fnstenv
xchg
insl
inc
mov
lds
insl
imul
clc
mov
pop
scas
pop
jo
mov
fnstsw
pop
lret
mov
cmc
and
fldl
pushf
mov
fs
mov
dec
jecxz
or
sbb
fistps
mov
lock
adc
add
aam
adc
out
and
inc
popf
and
les
ret
or
lcall
int3
shll
cmp
and
xchg
sbb
lods
incb
push
pop
cmp
pop
add
ljmp
cmpsl
xchg
repnz
add
lods
pushaw
test
fucomp
addr16
pop
push
repz
dec
or
cmp
and
out
lods
xchg
cs
lret
addl
mov
pop
mov
sbb
sbb
jne
mov
in
mov
fbstp
push
jbe
out
outsb
scas
or
jnp
push
mov
mov
cltd
and
mov
adc
leave
jae
idiv
movsl
push
jnp
icebp
add
and
out
or
ret
sub
adc
fsubrl
xor
pop
xchg
dec
insl
imul
jp
push
mov
jbe
cmp
or
outsb
mov
sub
push
and
xchg
leave
sub
lcall
jl
fwait
sbb
adc
int3
inc
sti
jl
lods
xchg
scas
jmp
jnp
jo
es
pop
mov
xchg
out
pop
cmpsl
imul
push
arpl
cmpsb
mov
mull
movsb
or
mov
mov
aas
jmp
test
adc
and
mov
lods
popf
cmc
or
pop
pop
xchg
enter
imul
cwtl
add
outsl
fldcw
pop
cmpb
push
cld
lret
mov
outsb
enter
push
jae
adc
mov
pop
aas
inc
cmp
xchg
into
xlat
push
mull
cltd
xor
xor
add
loop
mov
inc
push
and
ss
arpl
cwtl
cli
popa
fcomi
stc
adc
lds
adc
push
inc
adc
int
mov
or
cld
int3
shll
sub
cltd
or
jns
aam
movsb
rorb
je
mov
xchg
mov
aam
pop
outsb
or
leave
push
bound
call
lods
xlat
cs
pop
test
sbb
lahf
test
xchg
xor
add
divl
xchg
outsb
or
jo
cli
mov
dec
and
and
addb
std
adc
pop
std
xchg
mov
add
rolb
cwtl
xor
test
mov
testb
fadds
dec
shlb
cli
insb
js
mov
push
or
mov
out
mov
lock
add
fsubr
imul
cld
stos
mov
mov
hlt
dec
sbb
movsb
mov
rep
jg
fimull
int3
inc
jno
cmp
sub
scas
cwtl
xor
js
subl
test
cmp
clc
out
movsb
xchg
out
dec
inc
in
sbb
les
mov
orb
movsl
inc
jns
inc
xchg
adc
lret
ja
add
mov
outsb
adc
or
in
jmp
mov
test
or
fstpt
mov
pop
cmp
bound
loop
stc
jge
inc
xchg
fistl
ljmp
int3
outsb
movsb
push
add
adc
or
pop
push
dec
js
aam
cmpsb
adc
push
or
and
xor
outsb
xchg
xchg
int3
cs
in
icebp
lcall
dec
rcrb
gs
pop
add
das
std
pop
addr16
pop
pop
rcrb
aaa
cmp
outsl
sub
shrl
push
lods
xor
cwtl
mov
adc
add
or
xor
pusha
jecxz
sub
out
cs
cmc
pop
sti
call
dec
add
sub
mov
iret
sbb
popf
push
mov
sarl
mov
popa
outsb
mov
push
fwait
or
in
pop
out
dec
sub
lcall
sub
or
and
stc
push
rolb
jle
lret
push
and
mov
scas
je
in
inc
cs
jecxz
sub
add
lock
push
sbb
ljmp
pop
inc
and
sbb
push
and
pop
lcall
adc
out
popa
xchg
lret
mov
jb
cmp
mov
cli
cmpsl
in
in
dec
cmpsb
lods
cli
leave
mov
negl
xchg
pusha
mov
inc
cmp
inc
push
push
or
int
pop
jne
in
push
mov
dec
ds
mov
dec
bound
push
scas
mov
js
scas
add
mov
aam
mov
imul
jns
mov
jl
clc
xor
mov
xor
adc
add
adc
pusha
mov
andb
jbe
push
jne
out
jl
and
loopne
jg
leave
pop
popf
xchg
stc
mov
dec
xchg
mov
aas
sarl
fs
in
test
jbe
add
subl
inc
or
push
addr16
xchg
imul
popa
cld
test
cs
rorl
scas
add
adc
pop
outsl
test
in
stos
icebp
push
mov
pop
xchg
cs
clc
sub
idiv
cmp
test
imul
aam
iret
arpl
in
in
repnz
dec
xor
outsb
lds
sub
push
xorl
loop
mov
test
pop
xchg
cmc
sbb
adc
dec
push
enter
xor
or
test
out
gs
and
rorl
insl
outsb
jecxz
lods
push
xchg
push
jl
lds
roll
outsl
mov
lahf
pop
inc
das
and
mov
and
adc
adc
aad
mov
jl
or
adc
sub
arpl
aam
ljmp
inc
inc
test
pop
pop
dec
or
out
cli
mov
or
popf
movb
fsubr
jae
repz
lods
jp
clc
mov
mov
dec
bound
aas
xchg
lods
ja
jle
or
and
inc
xchg
inc
dec
bound
sbb
pop
clc
dec
jecxz
sub
inc
add
push
jmp
and
xlat
nop
cmp
add
mov
jb
aaa
out
icebp
mov
scas
dec
cmp
out
cltd
push
inc
push
cmpsl
mov
bound
fsubrl
mov
inc
test
clc
fdiv
xor
inc
jge
jl
mov
adc
ret
or
icebp
push
nop
push
addr16
into
lods
pop
lods
lods
bound
shll
mov
test
xchg
add
jno
adc
mov
lret
xor
cmp
mov
aaa
sub
sahf
mov
out
cwtl
mov
xchg
cltd
addr16
jne
mov
push
cmp
rcrl
add
dec
jno
or
ret
xchg
push
pusha
adcl
popa
xlat
rcrb
push
neg
and
and
and
jae
mov
iret
cmp
xor
in
out
dec
add
aaa
insl
adcl
stos
rorb
jno
sarl
xchg
loopne
jb
mov
sub
sub
inc
ja
jge
mov
mov
or
or
aas
cmc
es
and
inc
decl
adc
xchg
addr16
sbb
in
xchg
sub
ds
jp
and
das
in
call
adc
xchg
test
pushf
popa
push
mov
sbb
je
lahf
cli
out
or
adc
cmp
dec
loop
xchg
mov
inc
lods
lea
cs
or
lock
test
daa
mov
sbb
mov
pop
pusha
sti
cmp
pop
lcall
adc
lods
data16
wbinvd
inc
cmpsl
pop
sti
imul
loopne
shr
mov
loopne
and
call
repnz
adc
jl
mov
add
in
and
jne
hlt
cmpsb
out
rorb
xchg
pop
nop
aad
orl
add
popf
push
mov
xor
and
xor
jl
push
cmc
les
xchg
call
pop
scas
adc
push
mov
and
popa
in
dec
movsl
push
pop
push
push
adc
test
imul
loop
cmc
push
xchg
imull
inc
outsb
jmp
sub
sub
adc
and
push
lds
test
aas
sbb
repnz
faddl
push
add
xchg
adc
jne
scas
xor
ret
push
jle
push
pop
lock
xlat
sahf
mov
jmp
out
insl
lret
mov
xchg
mov
xor
or
leave
loopne
in
daa
stc
testl
popf
clc
addr16
shlb
nop
jg
cmp
cltd
mov
xchg
push
xchg
dec
seto
icebp
stos
sti
cld
push
rolb
mov
and
mov
leave
jb
daa
rcl
aam
jge
xchg
aad
lret
inc
sbb
mov
inc
imul
daa
int
jne
push
xchg
not
inc
cs
pusha
mov
loope
sub
lds
pop
jb
mov
in
push
rorl
and
or
out
mov
arpl
xchg
jns
cmc
bound
ja
imul
iret
fldenv
push
and
sbb
adc
pop
push
outsl
xchg
sub
outsb
lret
cmpsl
sub
shrl
bound
hlt
sub
in
imul
push
pusha
pop
push
popa
or
cmp
scas
loop
mov
mov
iret
roll
lret
call
popa
adc
and
xchg
test
jno
cmp
hlt
fcmovnb
jae
mov
and
ficompl
test
rcrl
dec
imul
inc
stc
rcr
test
xchg
call
mov
cwtl
lds
test
sub
sarb
sub
imul
sub
mov
jb
sub
push
mov
lcall
jecxz
mov
inc
jb
pop
daa
sbb
or
rcrl
jmp
hlt
xchg
sub
dec
inc
adc
adc
call
xor
push
lods
scas
fisubrl
or
sbb
mov
and
sbb
pop
pusha
shrl
sbb
je
ds
mov
or
lds
cwtl
jbe
or
push
sbb
push
out
pop
and
push
imul
stos
mov
ss
or
xlat
jge
lcall
sbb
push
mov
lods
sub
xchg
outsb
xchg
leave
fdivl
jp
mov
inc
loope
cmp
sti
and
jle
mov
sbb
dec
insb
jmp
and
mov
xlat
xor
lret
sub
rcrb
xchg
mov
inc
call
test
int3
xor
pop
adc
lds
clc
sub
jo
jno
les
push
cmp
fidivs
adc
sub
aad
or
sub
cmp
cmp
cmp
subb
jl
mov
adc
jmp
sub
insb
xchg
push
or
jg
enter
cli
push
xor
mov
cltd
inc
push
xchg
sub
xchg
push
push
sub
sti
and
mov
xor
bound
mov
mov
pop
inc
movsl
mov
push
out
add
xchg
lods
outsb
mov
stos
cwtl
out
js
xor
mov
or
in
je
inc
loopne
mov
sub
jge
jp
test
ljmp
pop
into
cmp
repnz
rclb
out
shrl
out
lds
test
movsb
mov
jno
xchg
pop
in
mov
push
and
sbb
push
sub
std
bound
xchg
sub
sbb
mov
in
mov
lret
ret
bound
jno
push
fsub
aas
ficomps
sbb
inc
jge
jno
imul
inc
rcrb
jb
cwtl
inc
in
hlt
pushf
fsub
inc
mov
shlb
lea
dec
fwait
and
hlt
cmp
dec
sub
fsubrs
add
dec
dec
push
arpl
cmpsl
mov
inc
mov
fldcw
ret
in
mov
inc
push
leave
mov
sub
mov
cli
orb
test
loop
inc
adc
lods
test
mov
sbb
mov
jo
pop
gs
and
aaa
insl
addl
out
sub
outsb
scas
mov
sub
adc
adc
in
jmp
les
xor
cmpsl
fsubs
mov
adc
sub
mov
dec
or
sbbb
cmpsl
scas
inc
adc
test
ret
fwait
and
outsb
ror
dec
test
lods
insl
xchg
jp
daa
jne
out
mov
jmp
adc
inc
or
rcll
pop
lods
into
xchg
inc
inc
dec
xchg
sub
jp
jbe
jge
lret
inc
cli
sub
mov
shlb
push
mov
sbb
jae
jl
lods
push
add
sub
xchg
pop
mov
mov
fdivrl
popa
inc
lahf
addr16
std
or
loop
mov
ja
lret
fdivrl
dec
pop
fidivl
sbb
je
inc
or
jbe
and
pop
daa
push
out
pop
repnz
aam
jg
outsb
gs
fistps
cmp
and
cmpsl
jno
inc
sarb
pop
inc
push
fisubrl
ret
movsb
dec
inc
in
imul
aam
cwtl
sbb
negb
leave
adc
jbe
cli
adc
leave
rcl
aam
pop
xchg
sbb
xchg
orl
or
mov
jb
adc
cmp
lods
xchg
rcrb
out
stos
cs
push
imul
cmp
outsb
adc
pop
mov
mov
test
add
mov
pusha
xchg
push
adc
xchg
sub
bound
mov
or
insl
inc
add
scas
mov
pop
jg
cmpsl
popa
push
inc
fadds
jb
call
cmc
cmp
cld
xor
sub
aad
addr16
leave
roll
lods
mov
imul
push
mov
cwtl
sub
xchg
mov
test
sbb
or
jecxz
and
lret
inc
cmp
imul
adc
outsb
call
test
cli
mov
jg
inc
int
stos
mov
push
xor
inc
gs
les
clc
xchg
jg
dec
lret
sub
xchg
dec
mov
sub
xor
test
stc
pop
pop
fsubrl
mul
dec
filds
das
add
lods
mov
daa
jno
dec
sub
mul
jecxz,pt
xchg
mov
sti
push
mov
out
and
test
and
stos
fstl
in
xor
insb
mov
xor
lods
mov
and
test
ljmp
in
lret
test
fnstcw
jecxz
sarb
inc
out
sub
in
jmp
sbb
sub
mov
add
sub
es
and
jmp
imull
aaa
push
adc
add
and
and
mov
rorl
dec
out
sub
dec
pop
aad
xor
inc
and
or
rol
adc
sub
add
jno
mov
mov
and
and
mull
pop
adc
and
mov
frstor
test
scas
cmp
lcall
test
pop
push
gs
ljmp
enter
test
push
cmp
jns
add
mov
sub
cwtl
aad
lods
push
pop
std
xchg
pop
dec
sub
fbstp
sub
fimuls
pop
xor
into
leave
mov
repnz
loopne
aas
mov
jmp
push
daa
cld
xor
out
xlat
xor
sub
push
push
sub
jb
jne
repnz
or
adc
xchg
clc
and
sub
repnz
sub
notl
mov
xchg
pop
cwtl
and
xor
mov
int3
mov
sub
stos
and
jmp
cmp
scas
jne
dec
lods
dec
sub
lret
outsl
in
xchg
cltd
xor
sub
cmp
fists
pushf
pop
mov
push
fwait
ljmp
mov
repnz
fsts
sub
push
sahf
jb
mov
fidivs
test
ss
aam
je
sub
lods
cmp
xchg
sahf
sarl
ljmp
ret
add
iret
sub
lret
shrl
add
mov
add
cs
lods
sub
movsb
in
lock
lret
int
add
fdivl
ds
jns
lahf
sub
sub
xchg
sub
bound
pop
or
sub
xchg
jge
fld
repz
pop
push
call
rolb
pop
imul
sub
sub
pop
pop
sbb
sub
and
out
outsl
sbb
ss
lods
ja
mov
inc
icebp
sub
mov
push
cmp
pop
push
cmp
cltd
or
cmpb
movsb
icebp
mov
mov
mov
flds
cmpsl
cwtl
inc
jp
sub
sbb
sub
and
fbld
dec
fs
push
int3
mov
psubd
mov
sahf
stc
ljmp
cmp
test
pop
sahf
sub
xchg
aas
int3
cli
adc
cld
cs
mov
idivb
pop
cmp
das
mov
mov
aad
xor
pop
push
sti
arpl
mov
jnp
fucomp
fcoml
push
aam
inc
push
roll
inc
fldcw
inc
cmovp
push
sub
andl
sub
cmp
xor
xor
ret
sub
cmpsb
daa
stos
test
adc
ret
adc
daa
rcrb
lret
or
jle
and
fistpll
xor
or
lds
movsb
sub
test
add
cmpsb
mov
les
push
loopnew,pt
jge
add
sub
jle
test
lret
jo
lret
inc
mov
mov
xchg
shlb
push
jecxz
sarl
pop
loop
cmp
pop
mov
mov
sub
mov
and
pop
sub
and
xor
pop
pusha
out
shl
loopne
repz
adc
lcall
xchg
dec
pop
sub
test
mov
ret
cltd
in
or
aaa
mov
sub
outsb
out
sub
lret
or
stc
icebp
iret
inc
mov
adc
xchg
mov
and
inc
leave
pushf
and
jbe
inc
enter
pop
into
adc
test
test
lods
int
enter
ret
sbb
cmp
mov
push
xor
pop
dec
jmp
xchg
fldenv
ret
push
mov
out
push
leave
mov
sub
jle
sti
jne
mov
sub
int
xor
xchg
xchg
ljmp
pop
push
pop
inc
rolb
cmp
and
mov
ret
or
daa
sub
mov
mov
sub
jb
lret
and
mov
je
in
les
iret
xor
aam
mov
lret
adc
jns
dec
xor
enter
scas
and
pop
or
dec
push
cmp
dec
jo
xor
xor
dec
andb
cmp
sub
enter
cmp
push
sti
and
jge
sub
inc
xchg
xor
xor
test
outsb
insl
sub
ljmp
add
stc
imull
lods
dec
into
inc
sub
xor
pop
and
aam
jns
addr16
xor
shrl
in
mov
sub
dec
dec
insl
rcl
and
adc
dec
mov
je
lret
dec
in
and
cmpsb
fildll
loopne
shrb
cmp
jne
orb
movsb
sub
add
inc
enter
negb
sub
movsb
pop
jge
sub
xchg
fimuls
cmp
lds
sbb
sub
movsb
jle
mov
lods
mov
pop
stos
call
sub
jl
lret
adc
es
inc
popf
sahf
test
dec
cmp
xor
xor
push
jmp
adcl
iret
xlat
icebp
leave
xor
mov
jmp
loopne
mov
test
call
dec
rclb
sbb
je
cmpsl
fisubrl
jecxz
in
jns
xchg
ljmp
adc
hlt
sub
lahf
cli
adc
jge
imul
xor
mov
or
cmp
pop
push
jmp
icebp
sub
test
out
bound
mov
call
pusha
jecxz
add
sub
fs
loopne
call
in
push
adc
push
inc
cs
pop
sub
or
ljmp
jno
dec
in
insl
and
mov
pushf
cltd
add
ds
sub
aas
out
adc
sub
cmp
add
cmpsb
sub
adc
sub
push
xchg
std
pop
int
mov
stc
sub
mov
dec
cmp
sub
fs
sub
ror
cmp
sbb
push
mov
sub
pop
out
into
push
fsts
gs
out
sub
mov
enter
stc
jne
mov
das
xor
inc
mov
jge
jns
jmp
sub
inc
inc
sub
and
xchg
or
sub
movsb
ljmp
sub
inc
mov
mov
add
aas
sub
in
imul
mov
sub
ljmp
xchg
lock
jne
aas
std
dec
loope
pushf
lods
repnz
sub
fwait
mov
add
sub
das
test
cmp
cmp
cs
scas
inc
adc
mov
jmp
inc
xlat
dec
sub
xor
jo
jae
mov
fisttpll
repz
cmp
mov
divl
andb
adc
dec
mov
test
cmpsb
add
outsl
repz
popa
sub
cmp
cmp
lock
jae
or
cmp
xchg
inc
inc
fdivs
clc
mov
shlb
pop
xchg
dec
mov
sub
jb
jecxz
push
imulb
adc
xor
movl
push
push
jno
or
push
fwait
mov
hlt
xchg
sbb
cmp
cmpsb
push
and
push
cmc
pop
dec
mov
mov
adc
repnz
inc
cwtl
int3
popf
or
out
jnp
fidivs
dec
cmpsl
jle
push
and
jo
daa
sub
test
xchg
and
inc
out
sbb
test
mov
iret
call
test
bound
lods
push
and
sbbl
xchg
push
add
js
push
fsubs
jae
jecxz
inc
loopne
and
dec
or
enter
xchg
insl
sti
push
mov
sub
cmpb
in
cs
cmp
mov
mov
sti
call
push
bound
cwtl
dec
jge
es
push
cmpsl
adc
mov
iret
test
js
mov
mov
int3
push
dec
cs
mov
jno
outsl
mov
or
ljmp
add
pop
lock
sar
pop
jge
test
or
lret
inc
push
xlat
dec
out
cmpsb
inc
adc
push
shll
imul
outsb
std
push
jae
andl
dec
push
negb
les
or
jmp
dec
dec
lahf
es
bound
dec
push
jae
sub
push
push
imul
cs
adc
adc
or
cmpsl
fistpll
ja
dec
pusha
or
fsubs
fildll
insb
ret
dec
mov
xchg
xchg
scas
jno
test
push
and
inc
sub
lcall
out
mov
adc
inc
sbb
xchg
cmpl
imul
bound
jge
push
jle
daa
lea
pop
addr16
cmp
push
pop
sbb
push
mov
jp
test
leave
mov
rorl
fadds
jecxz
sub
mov
in
push
adc
cld
filds
ret
add
xchg
cmp
cmpsl
popl
xchg
lock
int
adc
je
pop
pushf
xchg
out
jge
bound
popa
adc
pop
jns
sbb
outsl
mov
add
pushf
or
mov
popf
popf
push
sbbb
iret
addr16
inc
les
xchg
mov
int
cmp
jle
or
sub
movsl
in
jnp
pop
cltd
cs
bound
jae
rorl
mov
cli
sbb
xlat
jne
push
int
movsb
mov
sarl
imul
pushf
aaa
pushf
push
mov
arpl
fsubrs
mov
lret
imul
sub
mov
imul
pop
jno
fwait
push
cmp
repz
in
mov
movl
fcmovnbe
nop
or
add
mull
jo
aaa
js
push
arpl
lcall
mov
icebp
mov
loope
inc
popa
ljmp
inc
iret
bound
mov
js
and
adc
xchg
push
scas
fsubrl
mov
test
pop
jne
xor
rcrl
push
insb
mov
sbb
mov
sub
cmp
inc
sbb
and
lds
cmp
stos
adc
lds
addr16
loope
mov
popl
out
in
push
inc
loope
js
mov
shrl
sar
sub
sub
inc
in
pop
xchg
dec
or
lea
ja
data16
lods
mov
mov
xor
ficompl
sahf
push
adc
inc
lock
imul
mov
dec
mov
xchg
cs
xchg
bound
out
clc
das
inc
dec
outsb
and
fimull
mov
js
test
repz
and
ror
pushf
outsl
pop
mov
xchg
push
cmp
mov
add
jmp
in
mov
lcall
sub
bnd
add
xchg
jnp
sub
in
cmp
sub
jb
mov
call
inc
push
jge
popa
or
adc
inc
xchg
scas
sub
sub
enter
jne
loopne
ret
xchg
adc
insb
pop
lahf
inc
fisubrl
ja
lds
sbb
test
inc
mull
pop
gs
clc
push
add
ljmp
mov
and
lods
jbe
jmp
jle
xchg
cmp
push
push
fwait
stos
sbb
bound
mov
repz
cmp
jno
mov
rolb
push
jns
push
add
dec
dec
push
cmpsl
mov
xor
mov
loopne
dec
mov
gs
push
leave
leave
push
mov
mov
push
cltd
mov
rorb
xlat
fisttps
shl
scas
jl
and
cmc
push
cmpsb
dec
or
inc
mul
ja
cmc
add
rcll
adc
mov
adc
popf
add
pop
popa
sbb
in
out
sbb
sbb
cmp
inc
insl
cmp
add
leave
in
ljmp
test
inc
jbe
mov
data16
ss
int
or
outsl
sti
or
xchg
mov
pop
add
xchg
ljmp
fmulp
call
sub
cmp
mov
mov
xorl
push
mov
xlat
pop
jl
rolb
movsl
or
cmp
jne
lock
in
popa
rcrb
popf
clc
outsl
aad
lret
and
in
cld
or
test
mov
mov
or
daa
cs
dec
shlb
jb
cmpl
pop
out
mov
cmp
pusha
jno
pop
scas
orl
cmp
stos
xchg
and
scas
flds
nop
mov
insb
outsl
leave
mov
pop
movsb
inc
out
andb
xchg
or
push
lods
or
dec
jg
mov
ret
shlb
adc
cmpsl
xchg
daa
leave
out
cmp
aam
shrl
insl
push
sub
outsb
aam
or
out
mov
fbld
cmpsl
lock
pop
icebp
add
aas
jl
adc
mov
inc
jne
mov
mov
and
hlt
fists
les
shll
in
addl
or
popf
inc
cmp
or
hlt
lcall
jl
leave
mov
ss
nop
pop
mov
fs
or
push
loopne
nop
popa
xor
mov
cmp
cmp
fbld
xchg
mov
pop
push
cmpsb
mov
adc
dec
and
sub
cwtl
test
mov
jne
bound
add
dec
mov
stos
clc
mov
rcll
std
cmc
xchg
cmp
push
loope
aad
adc
mov
into
ss
pop
loope
xor
gs
bound
mov
int3
lcall
sbb
sub
cmpsl
xor
adc
andl
cltd
or
jmp
cs
mov
fwait
sti
xchg
adc
cmp
sub
jg
shlb
inc
movsb
jl
jne
bound
mov
xchg
scas
sub
andb
stc
int3
jge
push
lcall
adc
and
loope
into
push
aas
idivb
push
out
mov
int
pop
inc
cmpsl
mov
mov
fsubs
and
int3
ljmp
mov
rorl
pop
jno
or
test
fdivl
sub
xor
and
push
push
and
outsb
dec
dec
repz
imul
lret
mov
add
ret
sbb
cmc
aad
popf
sub
xor
mov
imul
test
and
je
or
adc
lret
mov
xchg
mov
test
test
div
popf
dec
pop
repnz
dec
pop
shrl
pop
xlat
dec
sbb
xor
rcrl
addl
arpl
lahf
std
sbb
popf
cltd
pop
cltd
leave
scas
mov
bound
dec
mov
ja
pop
leave
outsb
xchg
mov
jl
loopne
push
mov
in
jb
popf
or
and
outsb
and
cmpsl
xor
xchg
or
imul
xchg
inc
arpl
in
cli
mov
gs
ds
cmp
movsb
js
dec
add
les
fldt
enter
int
mov
fistpl
fcoml
and
inc
mov
lret
clc
pop
pop
arpl
stos
push
cs
rcrb
arpl
in
and
inc
jno
dec
cmp
sarb
dec
sbb
cs
mov
fiaddl
mov
xlat
fsubs
mov
pop
xchg
push
inc
push
push
sbb
out
sub
and
addl
das
mov
sub
rorl
loopne
xlat
push
enter
dec
daa
and
cmp
daa
mov
push
inc
jne
popf
xor
lret
pop
aam
cmp
add
jmp
in
jnp
aad
jne,pn
int3
xor
pop
ret
push
aam
sub
sub
cmp
and
cmpsb
sub
sbbb
jae
js
jne
fwait
lret
xchg
push
aam
dec
or
mov
fcmovnbe
loope
aam
jns
aas
and
lds
sub
mov
xor
mov
add
movsb
clc
pop
jp
cli
mov
fs
dec
cmp
pop
nop
test
es
imul
iret
and
push
movsb
dec
gs
cmpsl
nop
and
bound
fidivl
aaa
ret
push
sbb
out
jmp
adc
mov
out
stos
jp
mov
xor
jo
cmp
xchg
je
inc
fs
push
lret
jnp
sarl
icebp
jg
lret
shrb
push
movl
cltd
in
dec
cltd
insl
add
clc
mov
cmc
insl
inc
repnz
jb
or
add
adc
shr
imul
and
fwait
lea
adc
lods
imul
mov
jl
pop
sub
inc
dec
and
mov
pushf
test
push
cmpsl
jg
sub
add
sbb
xorl
sub
push
or
mov
not
sub
pop
cwtl
dec
scas
lds
frstor
jo
xchg
fisubrs
adc
or
mov
adc
test
mov
cmp
and
inc
or
daa
pop
pop
sub
xchg
aaa
nop
cmp
int
add
or
adcl
jmp
test
sbb
or
lds
ret
aad
mov
sbb
sub
sub
out
mov
and
mov
nop
mov
xor
out
imul
inc
inc
es
daa
and
jo
adc
and
gs
insl
or
addl
fs
xchg
or
jns
inc
leave
and
pop
add
ds
cmp
add
cld
shl
and
in
cs
std
repz
inc
in
cmp
ret
pop
mov
out
orl
pop
push
mov
imul
dec
rol
bound
pop
cs
lods
mov
addr16
in
mov
xchg
or
adc
xlat
lods
xor
pop
sahf
repz
cwtl
sbb
pop
loopne
sub
add
or
cmpsl
and
dec
imul
sub
inc
dec
or
addr16
or
adc
push
into
cs
ret
out
and
or
imul
icebp
sbb
or
sub
and
pop
jo
pop
sbb
xor
sbb
cld
or
jno
insb
into
lods
cmp
pop
or
dec
adc
or
push
scas
sub
adc
les
add
sub
or
vcvtdq2pd
insl
push
sub
or
add
divl
jl
mov
sub
pop
pop
pop
pusha
insl
xor
movsb
pop
int3
push
sub
mov
cmp
insb
scas
and
ja
mov
xor
mov
and
mov
aaa
aad
dec
mov
mulb
push
call
lods
sti
or
mull
and
into
aas
sub
imul
mov
sub
xor
jns
jae
les
pushf
pop
ret
lret
outsl
dec
jns
xchg
mov
xor
and
imul
inc
sub
push
and
jno
stos
or
call
filds
cmpsb
sub
daa
repnz
xlat
xor
add
out
lods
test
inc
sub
xchg
movsl
adc
xor
mov
cmp
cmp
pop
sub
adc
and
clc
fimuls
aam
mov
fdivs
or
sub
push
cmpsl
sub
sub
xor
mov
out
jbe
xchg
pop
sub
dec
pop
icebp
inc
sub
xorl
or
pop
cmp
mov
and
mov
mov
insl
movsl
jmp
push
mov
adc
stc
aad
xchg
les
lcall
sub
call
mov
dec
pop
sub
sbb
roll
and
sub
mov
mov
xchg
shrl
mov
push
daa
dec
cld
xor
mov
push
cmp
ficoml
loope
lods
pop
add
sar
cs
in
jno
dec
sub
popa
pop
lret
test
cltd
jl
inc
inc
sub
mov
sbb
sub
stc
mov
xor
lods
jmp
int
sub
pop
or
mov
or
cmpsb
or
and
mov
sbb
or
cmp
outsb
and
mov
sub
inc
fchs
push
pop
pop
push
xchg
or
int
into
sub
std
inc
divl
sub
psubsw
mov
arpl
mov
dec
insl
jne
or
xchg
daa
arpl
mov
dec
sub
and
insl
roll
sbb
movl
shlb
je
mov
xchg
dec
sub
xor
mov
inc
and
sub
loop
jp
shlb
xor
push
out
call
cmpsb
in
xchg
adc
jnp
sub
pcmpgtd
aam
xchg
sbb
jecxz
orl
lahf
mov
dec
icebp
push
cmp
mov
xor
or
rcrb
sub
inc
lahf
sub
fnstenv
adc
pop
cmp
cmpsl
or
mov
lock
sbb
jnp
nop
push
es
cmpsb
daa
add
and
dec
sub
and
test
add
sub
pop
outsb
xor
pop
mov
adc
cs
inc
gs
fisubl
in
mov
sub
out
data16
fldz
daa
xor
dec
jge
pop
or
jmp
xor
pusha
sub
lods
adc
xor
jl
jmp
jo
subl
add
or
icebp
xchg
lods
in
test
jnp
and
dec
pop
test
mov
sub
xchg
shll
sub
inc
sub
sub
add
xchg
mov
jbe
adc
mov
xor
jmp
or
xor
aam
jne
test
mov
fmuls
inc
sub
mov
js
rcr
scas
sub
mov
jl
jp
daa
stc
das
and
mov
cmc
jae
ja
adc
mov
xor
add
push
ljmp
cmpsb
out
or
ss
into
adc
cmp
sub
mov
or
popf
xchg
fisubl
bound
push
pop
std
inc
sub
pop
sub
test
mov
ja
jne
pop
pushf
lods
cmp
sub
xor
lret
and
mov
out
and
or
cmc
mov
call
ja
je
int
adc
mov
fldcw
sub
inc
jg
pop
cmpsb
sub
inc
adc
mov
loop
repnz
dec
mov
xchg
cli
out
xchg
lahf
sub
push
sub
sub
ret
aaa
adc
cmp
lcall
add
daa
pop
sahf
sub
rolb
mov
int3
jne
pop
mov
ret
pop
push
das
or
and
popf
aad
mov
icebp
sub
fndisi(8087
fisubs
mov
test
or
sbb
sub
jae
and
sub
xor
pop
addr16
sub
sub
jecxz
outsb
push
shll
lds
shll
mov
std
aas
cmp
inc
ds
and
ffree
loop
das
insl
call
xchg
imul
and
or
fadds
enter
mov
sub
jmp
mov
inc
aas
mov
cld
and
cmc
test
sub
cmpsb
and
pop
dec
sbb
inc
mov
mov
daa
shll
imul
fs
push
arpl
sub
mov
adc
adc
mov
jmp
inc
dec
xchg
rorl
sub
or
push
sub
aaa
sub
adc
jnp
push
rcrl
sbb
iret
xor
inc
or
sub
push
xor
andb
or
sub
sub
push
xlat
stos
xor
add
and
fs
xor
and
std
add
fstps
push
push
pop
in
popf
jae
mov
push
aas
adc
cs
push
and
arpl
scas
mov
dec
xor
sub
test
lods
arpl
and
push
pop
addb
mov
js
cltd
out
cmpsl
jmp
stos
in
test
inc
or
test
sub
loopne
push
loope
jnp
push
sub
daa
in
loop
push
rcrl
movsl
jno
jp
lret
sub
jg
aad
lods
adc
mov
mov
mov
cmp
mov
cltd
sub
cmpsl
les
xor
push
addr16
das
mov
fidivrl
sub
mov
test
and
fnstenv
and
cmpsl
and
sub
pop
mov
fnstsw
ja
sub
push
pop
lods
ss
or
call
mov
lds
pop
push
daa
cld
into
xchg
add
cmp
mov
xor
xor
xor
mov
std
sub
in
outsb
and
xchg
fucom
sub
dec
adc
sub
in
jge
dec
incb
sub
mov
cmp
in
mov
inc
push
sub
enter
mov
sub
daa
fidivrs
pop
dec
popa
lods
inc
addl
into
pop
addr16
and
ja
jns
movsl
outsl
ds
add
mov
xorl
push
ret
scas
or
and
cmp
sub
in
mov
mov
test
push
mov
xor
pop
add
out
ljmp
fistl
ftst
das
xchg
int
pop
daa
pop
dec
adc
sub
push
hlt
add
sub
inc
xchg
or
sbb
dec
popa
daa
cmp
and
jb
stos
sub
aad
cmp
sub
pop
mov
imul
stos
test
mov
shr
je
fwait
mov
rcl
sub
jnp
fisttpl
aam
xchg
xchg
mov
add
loopne
lods
addr16
push
aad
cmp
gs
xor
in
in
and
cltd
in
and
ljmp
jae
imul
scas
lcall
fsubrl
rorl
andb
sbb
mov
scas
ljmp
xchg
fldt
push
pushf
popa
lret
and
pop
cmp
sbbb
out
fwait
out
sub
mov
cld
and
rol
dec
cmp
or
sub
lahf
shrl
mov
icebp
shlb
jl
out
inc
pop
mov
testb
adc
push
dec
sub
out
pushf
daa
imul
insl
push
scas
and
sbb
mov
cmp
lahf
dec
stos
mov
ljmp
data16
seto
mov
push
jecxz
mov
popf
mov
pushf
int3
shrl
xchg
out
shrl
adc
andb
hlt
mov
int
aam
sar
pop
fnstenv
fnstsw
sbb
push
or
adc
inc
stos
mov
in
aam
dec
outsl
dec
jnp
dec
mov
dec
loope
rorl
dec
jo
mov
dec
mov
dec
and
dec
dec
dec
mov
sbb
pop
cmc
dec
mov
and
or
push
dec
sbb
add
addr16
sub
in
int
pop
hlt
push
int3
push
jmp
lcall
pop
dec
sub
push
and
dec
orl
add
sub
xor
mov
mov
in
xchg
xor
push
mov
sub
test
pop
push
dec
in
in
outsl
cld
hlt
int3
mov
lods
cmp
out
daa
pop
out
aam
int3
push
les
dec
aam
aam
aam
aam
aam
aam
aam
xor
mov
inc
sub
rorl
and
push
xor
jge
in
xor
mov
sub
sbb
mov
fwait
mov
mov
subb
add
xor
mov
sub
stos
fidivs
or
aaa
push
dec
stos
imul
mov
adc
or
mov
les
out
andb
stc
jae
mov
pop
fildll
sbb
adc
imul
loop
movsb
sbb
mov
mov
mov
adc
pop
in
out
mov
sub
xchg
jl
es
mov
mov
pushf
adc
punpcklbw
xchg
and
mov
int
les
lcall
cmovno
inc
imul
jle
or
mov
movsb
mov
jmp
sub
xchg
mov
shll
cltd
pop
clc
jecxz
pushf
mov
je
xchg
das
sub
les
mov
stos
dec
xor
outsl
stc
and
or
repz
sbb
int
sub
mov
dec
fcoms
dec
in
push
int3
dec
daa
dec
pop
dec
addr16
dec
into
dec
subl
hlt
xor
insl
int
fsubr
roll
adc
push
adc
pop
out
mov
outsb
mov
mov
insl
xchg
aas
addb
pop
sbb
xor
mov
data16
sub
stos
xor
pusha
mov
subb
mov
push
lret
mov
or
cld
movsb
mov
les
push
pop
dec
shlb
insb
xor
mov
aam
aaa
xchg
xchg
pushf
test
xchg
int
in
pop
add
enter
sub
cmp
sti
push
in
mov
jecxz
int
out
mov
test
cwtl
in
test
add
dec
imul
push
hlt
fxch
jo
xor
mov
icebp
and
pop
rcrl
daa
imul
aad
int
mov
enter
mov
push
jle
das
cwtl
test
test
pop
cld
aad
mov
test
cmc
push
xor
mov
add
pop
or
push
dec
add
mov
pop
push
in
xchg
sub
cld
sub
mov
and
aaa
or
cs
mov
fsubl
mov
in
adc
nop
adc
pop
fildl
pushf
mov
adc
mov
xchg
imul
pslld
mov
adc
mov
and
jae
xor
mov
stos
sarl
mov
cmp
pushf
mov
cli
mov
inc
cs
mov
sahf
cltd
addr16
or
into
jae
mov
xor
insb
push
mov
dec
push
push
mov
push
or
dec
pop
dec
shrb
or
das
push
mov
sub
mov
out
adc
push
mov
mov
mov
negl
dec
call
push
orb
adc
inc
mov
xor
push
sub
stos
imul
mov
stos
mov
push
dec
jmp
sub
pushf
or
fs
push
into
mov
dec
fisubs
sbb
push
or
mov
mov
mov
pop
and
mov
into
loop
loop
loop
loop
loop
loop
loop
mov
in
addr16
jmp
lds
call
aad
adc
or
adc
mov
in
or
push
mov
addb
mov
out
mov
mov
cmp
jb
std
or
adc
shrl
mov
iret
rcrl
not
jns
xchg
rcrl
shll
rcl
mov
push
sub
popf
ja
push
push
push
dec
out
push
jle
xchg
imul
pop
cmp
push
add
mov
repz
xor
in
sahf
mov
int
mov
rcr
repnz
test
mov
sub
pushf
or
dec
pusha
cli
repnz
mov
sahf
jle
or
and
loop
jne
lds
repz
inc
cld
push
push
jns
cltd
xchg
fldcw
cmp
int3
divb
and
and
push
mov
sbb
jl
outsl
stos
test
inc
and
pop
mov
mov
and
outsl
pop
and
and
ja
xor
sbb
sub
jae
roll
dec
repz
xor
dec
pushf
mov
mov
mov
inc
add
sarl
ror
aad
rcll
in
mov
nop
sub
stos
pop
mov
stos
sub
sbb
into
push
dec
sbb
add
push
outsl
pop
out
dec
and
dec
test
sbb
xor
mov
sub
xchg
imul
int3
jne
mov
mov
mov
ljmp
ror
pop
in
push
cld
scas
hlt
and
sbb
jno
nop
aam
aam
aam
aam
pop
or
fs
es
push
dec
jbe
mov
dec
cmp
dec
mov
aad
or
cld
sbb
into
scas
fiadds
test
jo
fcmovnbe
adc
ret
aam
aam
or
mov
lods
sbb
mov
xchg
xchg
sub
cmp
into
lds
enter
jb
add
push
dec
jmp
loop
or
push
adc
sarl
xor
rorw
loop
ljmp
sahf
scas
out
out
mov
aam
addr16
sbb
push
hlt
pop
int3
leave
les
push
aam
adc
adc
push
icebp
adc
sbb
addr16
lahf
and
test
push
mov
bound
mov
lods
mov
dec
push
sub
dec
lret
cld
in
mov
das
cmpsl
into
iret
fimuls
neg
imul
mov
and
dec
faddp
fidivs
ljmp
lds
imul
insb
or
imull
dec
lret
mov
mov
int3
or
mov
jp
dec
aam
pop
jbe
cmp
mov
and
sbb
in
and
ds
leave
lcall
adc
push
ficoms
call
mov
mov
aam
jno
arpl
cmp
mov
gs
xor
mov
mov
ret
fmull
pop
push
dec
sub
test
push
dec
rcr
popf
lret
xor
sar
repnz
pop
xchg
jp
mov
sub
lds
test
fst
xor
out
out
out
push
mov
jmp
jae
mov
or
insl
or
adc
mov
movsb
add
pushf
hlt
sub
adc
ret
fcompl
ljmp
sahf
outsl
fbld
andl
jmp
ret
mov
pop
xor
pop
pop
mov
test
test
fldenv
cwtl
in
sub
in
lahf
cld
jle
fimuls
dec
sub
sub
in
cmpsl
mov
in
mov
lods
cmpsl
jecxz
stos
dec
mov
ljmp
push
aad
call
push
adc
push
nop
dec
inc
jae
dec
call
dec
xor
mov
mov
xchg
push
dec
fsubrs
push
push
jmp
cmp
cmp
mov
mov
mov
cli
adc
hlt
push
jg
test
orb
adc
mov
es
sahf
clc
mov
xor
and
sub
scas
fimull
lahf
xor
mov
ds
pop
clc
sub
sub
stc
sub
es
or
testl
fidivrs
rorl
movsl
xchg
mov
mov
xchg
sbb
pop
mov
std
push
mov
jp
adc
mov
adc
adc
and
sti
or
pop
test
jmp
dec
cmp
mov
sahf
mov
mov
pop
lods
into
and
bound
mov
daa
and
mov
mov
mov
pop
mov
in
scas
insl
mov
outsl
mov
sahf
and
adc
xchg
into
rcr
fistpll
sahf
mov
xlat
cld
hlt
dec
pop
add
pop
mov
jge
std
mov
cmp
out
adc
xor
mov
xor
mov
sub
and
push
dec
lock
sbb
cmpsb
lds
fld1
mov
sub
lods
jmp
cld
and
stos
sbb
outsb
in
mov
rorb
jecxz
jge
ljmp
push
cmp
and
mov
aad
aad
adc
pmaxsw
js
addr16
pusha
enter
pop
push
mov
cmc
mov
out
sub
int3
xor
sbb
aam
pop
and
push
sbb
pop
and
push
mov
jle
push
cwtl
or
rcl
sti
aad
adc
shufps
stos
lods
ljmp
push
mov
ret
pop
into
pop
pop
test
hlt
sahf
mov
aad
aaa
roll
stos
clc
push
pop
sub
mov
xor
cli
inc
and
sbb
pop
pop
or
sub
pop
outsl
mov
push
arpl
mov
movsb
lds
dec
adc
push
and
mov
cmp
dec
mov
shll
cwtl
shrl
aas
sbb
and
bound
out
in
pop
mov
add
clc
jmp
movsl
in
movsb
imul
lcall
dec
cmp
adcb
lcall
imul
push
int3
mov
cmp
adc
ja
imul
lock
leave
xchg
sub
lds
cwtl
push
stos
mov
cwtl
pop
adc
dec
test
jle
mov
sbb
dec
fimuls
cmpsl
pop
arpl
scas
push
dec
jne
jmp
fisttpl
push
sub
dec
lret
adc
sub
xor
cmp
mov
adc
or
cmc
sbb
js
shlb
cs
mov
xor
ret
int
push
jnp
adc
adc
cld
cmpsb
add
or
dec
push
dec
inc
stos
lret
in
pop
cld
out
xchg
int3
pusha
add
jge
dec
lds
loope
mov
mov
pop
movsl
aam
mov
xor
mov
xor
dec
daa
sub
imul
aas
sahf
out
out
fidivs
push
inc
mov
dec
pop
sbb
add
shll
or
je
out
dec
mov
fidivrs
out
in
pop
pop
cmp
loopne
rclb
sub
aam
pop
or
fiaddl
adc
mov
aas
mov
cmp
scas
cltd
incb
pushf
aaa
shr
call
sarl
aad
adc
xchg
cmpsl
adc
ldmxcsr
sub
mov
cld
xchg
lret
in
xlat
adc
sub
dec
push
jns
cmp
mov
cmpsl
sahf
out
mov
stc
lea
hlt
std
pop
pop
pop
lahf
imul
push
insb
or
dec
cltd
stos
push
mov
fmuls
push
rcr
sbb
adc
pop
jmp
mov
fistpl
xchg
sbb
push
fmuls
jns
fimull
lret
pop
dec
pop
out
fisttps
pushf
les
or
jb
cmc
mov
fnstcw
fstpl
fs
sub
test
adc
mov
adc
or
adc
cltd
fdivp
ficomps
out
pop
xor
arpl
cmp
lret
mov
lea
dec
xor
pop
dec
pushf
push
daa
dec
decl
dec
out
ds
push
imul
mov
jo
cwtl
mov
mov
loop
loop
loop
dec
ficomps
shll
pop
mov
aad
rcll
shll
shrl
mov
sarl
mov
cmpsl
mov
adc
jecxz
sti
aam
aam
pop
in
insb
fistpll
testb
mov
xchg
hlt
sbb
pop
cmp
aad
dec
or
mov
pop
add
xor
popa
icebp
mov
pop
cwtl
lods
mov
cmp
sub
sbb
sahf
mov
fdivl
sbb
dec
shll
aaa
dec
xor
mov
mov
sub
test
pushf
test
sbbl
in
sub
in
lods
outsb
pop
addr16
hlt
sbb
fistpl
loop
das
sbb
test
and
movsb
mov
mov
mov
inc
lds
mov
jo
xor
stos
aam
insl
out
imul
cmc
or
dec
xchg
int3
fcmovnb
repz
fsubrl
pop
les
or
or
adc
cltd
xor
sbb
xor
mov
and
test
sbb
dec
xchg
popa
dec
mov
dec
movsb
xor
das
pop
mov
adc
mov
push
push
mov
xchg
into
sub
stos
cmp
xchg
ret
out
fcomps
shll
sbb
fwait
shl
mov
mov
cmp
bound
hlt
mov
pop
test
int
adc
pop
nop
and
bound
in
dec
aam
aam
aam
aam
pop
xor
jno
and
and
pop
pop
fwait
mov
mov
xchg
sub
push
dec
dec
stos
dec
mov
cmp
popf
or
daa
xchg
leave
mov
into
hlt
mov
decl
ficoms
stos
bound
cld
test
ljmp
lods
shrl
ja
add
pusha
sub
cld
jbe
push
inc
nop
or
popf
stos
ret
out
adc
and
add
sub
jl
cld
push
add
cmp
in
hlt
push
gs
shlb
lcall
jne
and
sbb
stos
pop
out
cmpsl
out
sahf
out
pop
testl
sbbl
scas
cmp
mov
inc
push
aam
adc
or
push
dec
lret
dec
test
sbb
in
cld
insl
hlt
dec
int3
lods
add
adc
test
insb
lret
lods
call
int3
lret
adc
adc
cmpsl
loopne
cmp
in
fimuls
sub
mov
out
fadds
pop
and
lods
push
pop
in
div
sub
mov
add
xchg
inc
add
sahf
xchg
pop
mov
jne
test
insb
fnstsw
xor
divl
icebp
xchg
xor
std
in
dec
mov
jge
and
sbb
pop
sub
scas
pop
mov
or
ja
adc
pop
pop
or
dec
pop
xchg
xor
or
or
stos
insl
push
dec
lods
xchg
scas
pop
pop
jns
cmp
das
movsb
xchg
adc
orl
push
loopne
cmpsl
movsb
lcall
add
lcall
jl
aaa
xor
idivl
mov
xor
sub
dec
xchg
stos
or
adc
mov
or
ja
scas
lock
cmp
adc
push
push
mov
dec
fnstcw
add
jae
xchg
xor
out
int
in
mov
sbb
mov
arpl
mov
test
int3
test
stc
adc
in
aam
push
scas
mov
cmp
int
lods
sar
sub
sub
mov
xor
out
in
test
sahf
dec
jmp
jle
es
dec
pop
mov
inc
orb
jae
pushf
rcll
orl
gs
cmc
sbb
mov
arpl
mov
fdivl
loope
repz
call
sbb
inc
xchg
push
cmp
jecxz
mov
shrb
sub
scas
test
mov
pop
pushf
nop
and
in
push
cld
mov
and
mov
test
mov
jp
movsl
int3
outsl
add
cltd
faddl
lahf
mov
test
mov
and
ja
dec
nop
mov
cltd
into
pop
insb
into
ja
aad
clc
hlt
imul
jp
sbb
scas
dec
into
jmp
fcmove
lea
sahf
cmp
rorl
sbb
hlt
mov
movsb
cltd
cltd
dec
lods
adc
pop
lock
or
rorl
in
pop
mov
adc
cmp
xor
out
fdivrs
je
movsb
cmpsb
xchg
pop
sbb
add
rsm
pop
push
push
inc
mov
adc
push
outsb
adc
or
and
push
stos
mov
out
dec
popf
mov
insl
xchg
xchg
rorl
xor
dec
std
sbb
push
lods
rcrl
mov
inc
loopne
inc
arpl
xchg
movsl
fiaddl
sub
adcl
mov
aad
mov
xor
xor
test
fcoml
or
mov
aad
aad
cltd
sti
das
cs
aam
mov
xor
addr16
test
push
psadbw
movsb
xchg
jl
mov
xchg
sbbl
dec
lods
aam
adc
daa
jl
mov
pushf
dec
mov
sub
lea
jle
stc
leave
add
and
das
in
xchg
neg
popf
outsb
jne
shrl
or
int3
jmp
dec
mov
mov
fsqrt
sbb
mov
mov
ljmp
aad
rcll
roll
sub
mov
repnz
mov
dec
lods
inc
shr
inc
pop
mov
adc
out
pop
rcrb
cmpsb
pop
imul
aam
sbb
mov
icebp
sub
push
xchg
push
pushf
mov
inc
jno
add
mov
inc
pushf
mov
or
in
push
pop
lcall
test
fcomps
jne
outsb
jo
or
inc
lret
jp
loop
mov
cmp
dec
or
aaa
andb
cmpsb
loop
loop
loop
loop
dec
xor
jge
pop
sub
fcomp
int
mov
adc
pop
aam
aam
aam
push
ret
int
pushf
pcmpgtb
push
dec
dec
add
or
outsb
dec
scas
aam
jl
arpl
mov
clc
aam
add
adc
mov
cltd
jne
movsl
xor
mov
xor
mov
fiadds
fisubrs
sbb
fisubrs
sub
adc
inc
fidivs
mov
in
roll
xchg
sub
stos
movsb
test
andl
jp
in
sub
jl
hlt
int3
test
add
push
xchg
or
lock
push
in
add
xor
fildll
push
mov
mov
adc
pop
adc
es
je
jge
pop
cmc
mov
out
push
jge
dec
cmp
sbb
dec
sub
arpl
dec
aam
pop
or
pop
cltd
dec
jmp
cmpsb
inc
aad
sarl
mov
lret
loop
jns
test
movsb
dec
in
aas
es
data16
js
add
cltd
pusha
adc
adc
adc
roll
push
les
adc
cwtl
cmp
into
pop
gs
xchg
pop
arpl
xlat
mov
inc
sbb
or
mov
mov
daa
out
dec
test
test
popf
xchg
insb
and
cld
out
cmp
xchg
jmp
adc
pop
jb
sub
arpl
insb
add
js
stos
sbb
jmp
gs
mov
stc
ret
adc
pop
stc
arpl
or
and
sarl
sub
dec
or
mov
add
push
dec
mov
pop
sbb
shrl
mov
add
cld
aaa
hlt
jg
and
and
in
mov
push
dec
or
xchg
jne
into
cmpsl
mov
adc
mov
repz
mov
sub
push
mov
fcomps
push
iret
int
and
jecxz,pn
sbb
cltd
mov
sarl
sbb
jl
pop
xchg
fmul
aaa
lret
ja
dec
fcmovu
rcll
bound
cmp
pop
in
sub
es
or
out
hlt
push
or
or
inc
roll
or
mov
pop
lods
dec
mov
inc
mov
mov
xchg
or
int
rcll
pop
pushf
icebp
push
jns
pop
addr16
cmp
into
daa
xchg
cwtl
clc
mov
jne
lahf
pop
xchg
les
incb
jmp
aam
movsb
mov
push
sbbb
pop
push
cmp
lods
popa
inc
dec
and
dec
sbb
scas
push
out
outsb
inc
push
repnz
cmp
push
or
adc
int
in
or
cld
in
push
imul
ljmp
mov
mov
fdivl
stos
mov
sbb
arpl
pop
test
mov
add
sti
xor
mov
int
or
or
xchg
cld
adc
aam
mov
lret
fisttpl
push
mov
repnz
mov
and
or
mov
into
ficomps
in
push
jge
pop
mov
or
dec
cmp
std
jl
pop
mov
mov
fsubrl
push
push
adc
xlat
mov
dec
pop
daa
mov
sub
sbb
jns
or
sbb
aad
rcrl
sarl
pop
mov
pop
ja
loop
loop
loop
hlt
jne
xchg
cmpsl
fstp
rcr
cmp
push
into
pop
sbb
ficoml
sbb
dec
mov
fidivrs
sbb
jl
pop
adc
int
hlt
jmp
jl
dec
dec
push
dec
enter
xchg
cmp
adc
and
mov
xor
cmpsb
stos
sub
pop
cs
add
out
dec
mov
xor
out
dec
ja
xor
fidivrs
roll
mov
jmp
sub
mov
xor
cmp
pop
ja
fcompl
inc
mov
rol
lret
cwtl
pop
cld
and
mov
pop
movsb
jmp
xor
or
in
pop
fimull
mov
mov
xchg
fdiv
xor
xchg
sub
outsb
cmp
call
push
mov
ljmp
sub
xor
orl
mov
pop
shrl
jne
ret
mov
or
cwtl
xchg
mov
sub
decl
jmp
xchg
sub
cmp
dec
lds
fst
cltd
scas
add
add
call
and
ss
daa
xor
mov
and
jne
fldl
push
shl
fstp
add
je
into
ficoms
cmp
inc
xchg
shll
movsl
xchg
fstl
xsha1
cmpsb
push
cld
sub
inc
pop
cmpsl
in
mov
addl
test
aas
leave
js
adc
clc
fcmove
insb
fdivl
mov
xor
jecxz
out
pop
push
or
out
push
rorl
divl
pop
and
test
inc
lcall
add
jp
inc
or
incb
addr16
push
add
mov
pop
xor
sub
leave
rcll
dec
pop
cld
stos
jne
cld
adc
jne
or
pop
fs
cmp
pop
and
adc
adc
sub
add
mov
cmp
iret
aaa
sub
cmp
sbb
fdivrl
pop
out
int
mov
mov
xor
or
push
xor
dec
jbe
fiaddl
sbb
pop
dec
fdivl
mov
int
jne
xor
lods
int
pop
ljmp
imull
test
pop
cmp
mov
jg
xchg
jnp
inc
popf
ficoml
jg
mov
mov
mov
js
xchg
inc
pop
hlt
inc
pop
xchg
xchg
push
sub
pop
into
inc
orl
inc
fisubrs
enter
sbb
sub
int3
or
sbb
or
call
ja
xlat
xor
rcr
out
je
fdivrs
mov
dec
cmp
lret
mov
das
and
xchg
test
movsb
fadds
int
mov
into
sub
pop
pop
xchg
sbb
and
test
cli
dec
ds
inc
or
ret
and
adc
sbb
dec
loop
ljmp
xlat
xor
or
pop
fsubrs
add
arpl
pop
int
or
push
mov
xchg
and
dec
fistl
sbb
mov
stc
dec
pushf
mov
push
int3
jne
inc
add
stos
jns
cmp
hlt
clc
add
test
addr16
movsb
iret
mov
inc
push
dec
call
sub
popf
pop
fdivl
imul
daa
scas
mov
mov
lcall
out
fiaddl
mov
out
cltd
sub
and
and
in
pop
cld
aam
inc
mov
push
dec
popa
push
xor
fidivrl
orl
stc
dec
inc
pop
mov
lea
pop
pusha
mov
mov
mov
pop
pop
cmp
test
jecxz
cltd
aam
pop
bound
mov
sbb
lret
aam
cld
gs
inc
inc
movsl
popa
cmpsl
adc
add
lret
imul
lods
mov
int
mov
mov
stos
xor
enter
test
mov
mov
fidivrs
ljmp
mov
mov
dec
mulb
and
add
sbb
xchg
mov
aad
mov
das
lea
fimuls
xor
out
push
dec
xor
shll
inc
mov
inc
mov
dec
les
arpl
mov
pop
push
sarl
mov
mov
mov
mov
xor
lods
iret
add
sub
pop
insl
pop
pop
sub
hlt
cwtl
or
sub
dec
mov
push
out
pop
cwtl
pop
mov
dec
mov
pop
outsl
icebp
and
xlat
ss
mov
pop
mov
cwtl
pop
pop
lcall
das
add
jns
mov
mov
aas
daa
imul
lcall
dec
aad
sarl
stos
cmp
xor
cli
aam
inc
inc
and
loop
into
lret
inc
or
and
daa
jne
add
inc
push
mov
push
fdivs
pop
lret
into
adc
or
out
stos
or
ret
push
andl
ret
je
out
fmull
cmp
lods
aaa
sub
push
pop
and
add
mov
jecxz
push
mov
jmp
adc
add
dec
ds
adc
pop
repz
pop
ficoms
xor
sub
mov
scas
sub
mov
xchg
outsl
xchg
gs
bound
popf
je
aas
setns
pop
cmp
out
cmpsb
aam
jmp
and
mov
int
lods
or
cld
mov
shr
mov
or
lds
mov
addl
mov
sbb
es
push
sbb
sbb
in
fsts
pop
jae
in
cs
hlt
add
dec
in
push
stc
lods
dec
aam
fistps
dec
sub
or
push
inc
jmp
lods
or
xchg
in
inc
es
pop
cmp
jno
cmpsl
mov
orl
test
pop
cld
les
ja
cmpsl
push
hlt
outsb
nop
popa
mov
out
or
mov
or
add
dec
shrl
leave
ss
mov
loop
loop
loop
loop
push
mov
adc
or
aam
push
movsb
sub
cmpsl
inc
outsb
dec
mov
je
hlt
cltd
xchg
sub
sti
stos
in
rclb
or
or
in
cld
xor
pushf
cmp
fnstcw
int
call
push
or
jno
in
jmp
lret
sub
pop
sbb
ficoml
imul
push
adcl
and
jne
out
out
xor
fs
xchg
lcall
sub
mov
dec
or
mov
add
cs
mov
call
leave
push
enter
mov
ret
movsl
mov
sub
or
insb
push
cmp
sub
dec
and
lcall
pop
insb
sbb
lahf
jl
dec
inc
dec
mov
call
add
arpl
inc
out
leave
push
std
add
or
or
xor
pop
xchg
sub
stos
gs
test
mov
cltd
sbb
cltd
imul
call
mov
ret
in
push
sbb
je
js
data16
mov
mov
mov
sub
lods
cld
les
xchg
adc
ljmp
hlt
and
int
jl
test
lea
adc
adc
dec
mov
mov
cmp
iret
shlb
sbb
or
mov
pop
jecxz
pop
push
into
adc
or
test
pop
lret
ds
imul
dec
and
pop
cmpsb
sbb
stos
pop
push
sub
jecxz
ljmp
pop
pop
scas
sub
pop
pop
lods
bndstx
push
jne
push
daa
sbb
mov
push
mull
xor
sahf
mov
inc
outsl
fdiv
out
test
imul
ret
popa
and
lds
xchg
ja
and
xchg
subl
sbb
xchg
dec
imul
scas
push
hlt
cmc
int3
xchg
incb
out
jo
int3
xor
sub
add
cmp
nop
mov
test
sbb
je
aaa
out
push
xchg
pop
jbe
mov
inc
fwait
lret
movsl
imul
test
and
divb
cwtl
add
lcall
and
and
push
gs
xchg
sub
outsl
sub
scas
pop
fmulp
outsl
arpl
push
push
ljmp
xchg
pop
sbb
or
aad
or
cmc
stos
in
ja
sub
fsts
cld
pop
ficoms
push
pop
xchg
stos
jno
and
loopne
in
jg
cltd
out
int
test
sahf
cmp
dec
mov
pushf
pop
pop
xchg
push
stos
outsl
dec
dec
push
scas
outsl
mov
mov
fisubrl
mov
cmp
inc
repz
fsubp
scas
or
cwtl
insb
cltd
int
mov
rol
fldt
cmp
pop
or
lret
rolb
jge
cmp
jbe
push
push
jne
mov
add
imul
xchg
out
mov
in
cmp
lcall
hlt
jno
cmp
int3
xchg
xchg
mov
popf
clc
adc
call
and
mov
int
gs
xchg
ret
pop
xlat
ljmp
sahf
xor
push
leave
ljmp
cmpsl
or
mov
popf
aam
inc
popa
iret
mov
push
sub
lock
add
sub
lcall
dec
push
hlt
pop
inc
shll
or
mov
mov
mov
fs
lods
hlt
pop
int3
mov
push
cmp
jge,pt
push
ret
jbe
dec
stos
scas
pop
test
movsl
dec
mov
dec
nopl
out
add
pop
pop
pop
hlt
push
out
leave
sbb
jecxz
iret
ret
xchg
cpuid
adc
and
jbe
insl
frstor
call
fldt
cld
push
sbbl
je
ficompl
push
mov
sarl
popf
test
mov
mov
dec
mov
popf
cld
repnz
dec
in
xlat
inc
jne
les
jmp
cmc
fsubrp
lahf
fldl2t
mov
sbb
sub
xchg
add
aaa
push
nop
xor
cmp
fistpll
xlat
iret
or
test
xchg
pop
cs
hlt
gs
fistps
mov
push
test
adc
mov
enter
and
and
aam
or
push
lahf
inc
adc
pop
add
cmp
into
inc
add
mov
mov
ja
or
add
cmpsl
pop
fstl
and
cmp
addr16
mov
jo
and
bound
inc
add
mov
daa
sbb
xchg
je
in
fisttps
pushf
mov
or
cmp
popa
and
dec
fdivr
lods
mov
sbb
in
les
andl
loop
pop
arpl
call
hlt
ss
xor
and
add
insl
cs
pushf
xor
mov
push
mov
test
cli
xchg
mov
push
cmp
mov
and
out
lret
sub
das
addr16
add
adc
mov
pop
pop
lahf
mulb
inc
xchg
jecxz
sub
mov
icebp
mov
test
in
jg
xchg
les
or
pusha
stc
mov
or
jne
aam
sbb
add
in
popa
or
and
mov
cmp
sbb
cmpsl
fadd
mov
ret
daa
add
lods
lea
mov
cmp
lcallw
xchg
daa
int3
cs
mov
and
dec
or
mov
bound
xchg
inc
sub
imul
sarl
jp
mov
adc
add
or
roll
jnp
pop
cs
mov
mov
pop
lods
mov
pushf
enter
add
scas
daa
pop
dec
mov
mov
mov
jge
pop
mov
scas
std
mov
pop
dec
cmpsl
data16
ljmp
call
out
mov
lods
enter
test
xor
mov
and
shl
xor
xor
shll
sbb
lds
call
inc
add
jno
out
cmp
lcall
push
mov
add
add
sub
pop
sub
movsb
roll
push
les
insl
call
fdiv
je
cmp
pop
daa
push
gs
mov
dec
popf
mov
sarl
loope
or
es
js
rorl
adc
cli
cmp
pop
sarl
and
fcompl
mov
pop
or
fnsave
add
out
push
enter
gs
or
gs
mov
ret
mov
cltd
scas
add
pop
sbb
dec
call
arpl
mov
xor
shll
sub
xchg
mov
inc
inc
int
insl
rorl
mov
rcll
repz
or
aam
push
cmpb
push
inc
enter
outsb
jp
pop
xor
fucomip
pop
cld
test
pop
int3
sub
sbb
inc
or
cmp
mov
xchg
mov
insl
out
sbb
faddl
pop
jge
int
loop
cld
or
dec
sahf
shr
test
in
out
gs
aas
mov
push
inc
push
test
mov
and
push
xor
insl
iret
add
movsb
xor
es
inc
lea
lcall
inc
push
mov
and
aam
insb
fldenv
rorl
mov
push
xchg
cmp
xchg
mov
stos
lods
sbb
push
mov
stos
sbb
hlt
mov
push
pop
daa
je
pop
lods
jl
add
fisttpl
out
push
xchg
push
mov
out
and
cltd
xor
outsb
xchg
push
sub
mov
push
dec
in
mov
cltd
add
add
xor
mov
bound
jecxz
sub
fcmovb
lds
inc
inc
sbb
mov
xor
mov
pop
cmp
sub
in
push
aam
or
fdivs
fimuls
fadds
mov
jge
movsb
enter
pop
jl
in
cmp
stos
jle
cmp
ficoms
shrl
fldcw
int
aam
int3
fdivrl
out
out
xchg
fisttpl
aam
iret
cmp
lods
sbb
sbb
outsl
inc
cmp
ret
scas
popf
mov
sahf
cwtl
daa
add
pop
pop
xchg
cmpsl
stc
add
popa
sub
dec
adc
in
clc
mov
sub
popf
cld
jg
sbb
enter
int3
outsb
les
scas
pop
outsb
out
movsb
xlat
dec
movl
aam
add
add
out
ficomps
fidivs
or
andl
jno
in
xor
gs
push
fisubrs
sub
loop
in
in
sbb
pop
dec
or
jo
gs
sbb
movsb
jae
dec
add
jns
scas
inc
aas
imul
js
or
sub
or
adc
out
ja
out
fidivs
in
fcomps
aad
mov
ljmp
subb
sub
insb
jae
jno
and
arpl
out
loop
adc
adc
push
aam
or
into
jne
xor
cltd
xchg
jae
or
sbb
lods
shrb
sub
rclb
sub
mov
mov
lods
lds
cmp
pop
loopne
popf
stos
sub
es
pop
dec
fwait
lods
and
add
xlat
mov
in
mov
jl
int3
repz
cli
add
and
xor
gs
mov
or
sbb
hlt
cmp
fcmovb
mov
xor
faddp
mov
dec
jo
imul
mov
sbb
jns
sbb
xchg
push
adc
gs
cmp
cmpsl
mov
mov
pop
or
addl
push
adcl
call
mov
lods
jecxz
test
xlat
clc
sub
push
lock
aaa
sub
enter
adc
jl
or
cmp
cmp
mov
repz
or
mov
jno
stos
dec
outsl
popa
xor
mov
fsubr
mov
xchg
aaa
inc
xor
cmp
int3
fstpt
and
dec
dec
popa
stos
and
pop
jne
xor
out
sbb
mov
std
aaa
xchg
xor
lock
cld
scas
pop
dec
fsubrs
lret
adc
push
cmp
jle
sub
xor
mov
fcmovu
js
mov
mov
cmp
or
in
cld
mov
push
jl
push
daa
mov
cmp
lret
sub
jmp
sbb
pop
sbb
cli
cltd
mov
sub
ljmp
mov
xor
inc
mov
aad
lods
in
dec
inc
or
pop
and
mov
ret
cmp
mov
lods
mov
fisttpll
dec
test
mov
mov
mov
ljmp
cld
cwtl
shll
jns
cld
pop
or
popa
test
leave
xchg
cmp
movsl
out
inc
lods
mov
daa
xor
addr16
cmpsl
cmp
out
lcall
pop
mov
pop
fnstcw
push
sub
lret
add
sub
inc
xchg
pop
ja
into
or
pop
mov
outsl
out
cmp
jmp
dec
adc
push
lods
les
and
je
int3
ret
jne
sbb
stos
out
push
mov
push
sub
push
add
scas
or
pop
mov
push
jb
pushf
negl
xchg
or
sub
pop
hlt
addr16
inc
fisttpl
jp
bound
mov
les
popf
mov
cmp
daa
pop
aam
mov
or
into
sub
dec
pushf
stos
es
fwait
lret
cmp
imul
or
add
mov
mov
and
out
fcoml
cmpsl
aas
push
ficoml
mov
jno
lods
adc
movsb
enter
mov
out
sub
and
mov
cmpsl
fidivrs
test
cld
lods
and
div
ja
pop
dec
dec
popa
mov
mov
scas
lret
movsb
dec
adc
sbb
orb
cwtl
fadds
mov
pushf
pop
lds
fistl
nop
xchg
and
mov
and
lods
cltd
insl
nop
dec
push
negl
mov
sub
or
dec
std
dec
es
lock
mov
in
push
mov
and
jnp
cld
imull
jecxz
out
mov
push
rorl
cmp
xor
sub
daa
pop
dec
sbb
movsb
push
add
fldt
pop
ss
pop
arpl
add
mov
xor
mov
scas
pop
push
enter
int3
rcrl
cld
pop
push
xchg
pop
mov
out
mov
sbb
cld
rcrl
mov
ror
or
fsubrp
xchg
push
push
sbb
mov
int3
outsl
inc
xor
fwait
sub
roll
enter
inc
imul
push
jmp
xor
sbb
je
sahf
cmpsl
popa
push
out
sbb
call
or
mov
outsl
mov
std
sahf
or
aaa
add
or
sub
sub
test
stos
int3
subl
hlt
pop
mov
dec
mov
popa
clc
pop
mov
cmp
mov
mov
mov
lret
or
adc
subl
and
pop
sbb
lock
outsb
jl
dec
mov
imull
cwtl
out
mov
cmp
or
popf
mov
jns
jge
leave
mov
call
dec
adc
mov
call
add
sub
ret
lret
or
push
jl
dec
ljmp
es
xor
xor
mov
insb
and
ds
leave
outsb
icebp
test
scas
jle
jge
push
int
or
mov
dec
sub
ljmp
sub
mov
mov
sub
dec
lret
out
stos
mov
xchg
test
sub
cld
cmp
test
arpl
dec
movups
negb
sbb
aas
xchg
adc
aaa
loop
pop
xchg
daa
js
sbb
sub
movsb
dec
in
arpl
arpl
mov
add
sub
push
cmp
ljmp
xchg
jns
lds
fsts
xchg
sbbl
mov
outsb
push
int3
add
xchg
dec
or
daa
or
xor
mov
and
xchg
les
jb
cltd
out
push
xchg
push
leave
fidivl
and
sbb
push
fstpt
xor
in
adc
stc
sbb
outsb
insb
add
pop
fdivrs
pop
xor
jmp
and
or
xor
mov
xor
outsl
je
lods
adc
jb
repz
pop
jg
push
or
fisubrs
pop
push
popf
subb
stos
mov
stos
pop
fiadds
sub
mov
mov
fmul
and
pop
cltd
gs
and
sub
and
xchg
push
xlat
mov
hlt
mov
push
xchg
xchg
pop
call
jne
adc
bound
stos
dec
mov
mov
dec
cltd
or
test
in
xor
stos
insl
out
and
xor
mov
push
sbb
sub
out
ja
lods
push
shr
stos
cmp
jb
add
dec
pop
test
es
dec
aam
adc
notl
aam
mov
mov
repz
lds
pop
scas
dec
dec
fs
loop
mov
es
loop
dec
ljmp
daa
mov
mov
sbb
sbb
xorl
fistl
mov
mov
dec
fstps
dec
dec
jo
cmp
add
and
in
aaa
fwait
adc
jno
jge
push
pop
cmpsl
mov
cmp
mov
orb
repnz
fstpt
or
popa
mov
dec
in
fcmovnu
ficoms
fcmove
adcb
mov
insl
or
xchg
es
pop
daa
repz
or
clc
cmp
xor
scas
mov
test
push
dec
lds
pop
mov
cmp
inc
adc
fwait
dec
aam
adc
or
push
lret
fucomp
push
jne
test
mov
mull
xor
mov
cmp
fnsave
pop
mov
pop
adc
jmp
cmp
fcmovu
xor
pop
leave
jo
shlb
xchg
leave
popf
clc
sub
mov
cli
xchg
cltd
push
stos
ja
cmp
cwtl
lds
mov
insb
sub
ss
xchg
clc
dec
add
fdiv
pop
dec
jecxz
inc
sbb
addr16
dec
xchg
movl
movsb
das
or
fdivs
ja
mov
mov
cmp
clc
pop
cmp
stc
jmp
mov
push
jecxz
mov
mov
pop
and
jne
scas
lcall
jae
add
xchg
mov
shrl
dec
test
clc
mulb
js
add
sub
push
mov
stos
out
icebp
leave
fucomp
mov
insl
imul
cmp
jno
or
clc
cmpsl
mov
fnstsw
pop
mov
in
jmp
dec
or
adc
dec
xchg
cld
fdivl
sbb
test
movsb
in
negl
arpl
mov
fstpt
or
stc
lods
loop
lods
std
mov
adc
call
stos
rcl
and
xchg
sbb
movb
test
stos
mov
adc
jle
adc
jne
mov
add
pop
jg
fidivrl
stos
jle
jl
mov
xchg
pushf
mov
pop
outsb
sub
xchg
aaa
out
jp
mov
push
es
cmp
dec
xchg
cmp
cmp
or
push
pop
pop
jne
scas
arpl
xor
mov
mov
mov
cmp
sub
add
rorl
push
cmp
sub
lahf
dec
add
fiadds
dec
dec
aam
aam
aam
aam
push
mov
pop
add
jo
call
push
cmp
jnp
mov
pop
test
fdivrl
jmp
push
imul
xor
lret
mov
pop
cld
sub
push
mov
mov
out
dec
int3
inc
cmp
stc
sub
sbb
jne
shr
neg
mov
xor
or
mov
add
or
add
fsubs
jbe
stos
xchg
xchg
push
ljmp
repz
es
sti
loop
hlt
imul
cld
cmp
sub
hlt
dec
inc
popa
xchg
jo
adc
movsb
mov
out
cmp
cld
sub
pop
mov
out
adc
add
pop
cmp
or
mov
fdivrp
xlat
imul
out
sbb
jp
repnz
dec
lods
popf
aam
or
and
andl
ljmp
inc
sbb
daa
xchg
adc
cmpsl
sarb
scas
stos
dec
inc
and
sub
or
xor
mov
xor
adc
enter
add
arpl
xor
mov
mov
adc
sbb
fidivrs
or
cmp
xor
mov
arpl
xor
add
mov
aam
aam
add
out
mov
sub
or
shlb
lea
aam
aam
push
or
lods
dec
ficoms
mov
imul
or
push
decl
or
or
popa
testl
cmp
adc
fsubr
in
push
std
daa
imul
mov
add
in
dec
or
xchg
or
mov
jae
stos
dec
mov
int3
sub
dec
xor
stos
cltd
fimuls
lret
ljmp
fisubrl
aad
mov
mov
cs
stos
mov
ss
sub
or
or
adc
adc
call
mov
inc
sbb
mov
cs
cmp
dec
scas
lods
fimuls
sub
testl
jmp
jne
push
fimuls
and
xchg
mov
imul
ljmp
insl
push
sub
lods
xor
adc
or
std
iret
aam
aam
add
pop
xor
push
inc
scas
imul
cwtl
test
leave
hlt
jne
or
arpl
mov
and
aam
add
and
or
hlt
jne
push
pop
jmp
arpl
imul
ret
cmp
shll
lds
inc
dec
add
arpl
popf
cmp
adcb
into
lods
cltd
ficoms
mov
mov
in
or
push
mov
push
mov
sub
sbb
dec
mov
shr
cltd
leave
stos
enter
aad
cltd
test
xor
mov
sbb
ret
push
in
es
divb
insb
jecxz
imull
into
jmp
enter
aam
push
out
sub
enter
scas
push
outsb
mov
rclb
push
push
sub
mov
into
dec
sub
into
push
stos
fcmovne
ljmp
mov
lods
fisttpll
sub
jne
lahf
push
stos
js
addl
cs
sub
dec
mov
shlb
insl
sub
or
imul
xor
jmp
into
sub
sbb
jmp
adc
daa
mov
xchg
sbb
pop
mov
xchg
or
sbb
idivb
sub
incb
cmpsl
pop
imull
scas
into
sub
leave
xchg
dec
arpl
sbb
or
popf
mov
sub
add
lods
sub
cmp
out
fimuls
insb
in
cmp
pop
inc
daa
ljmp
sbb
out
ror
cltd
sub
aam
adc
push
xchg
fisubs
cmp
or
fmul
sbb
loopne,pn
jg
int3
outsl
int
add
cmp
cmp
mov
jecxz
ret
mov
outsl
cmp
ljmp
test
popf
sub
or
and
dec
loop
mov
lret
daa
addb
lret
out
test
clc
mov
outsb
out
dec
xor
mov
mov
shll
or
clc
dec
sbb
sub
insl
rcrb
lods
pop
lea
mov
movsb
int3
jecxz
xlat
pop
stos
out
inc
xchg
add
fimull
popf
push
sub
leave
imul
gs
xchg
cmp
test
mov
testb
push
fisttpl
xchg
pop
xor
jl
or
xchg
cwtl
dec
mov
cmp
lods
jo
in
adc
leave
mov
pop
or
push
dec
xor
lea
mov
test
insl
xchg
les
imul
out
fiadds
fisubrs
testl
cld
lea
pop
or
ret
jp
insl
mov
cmp
mov
lcall
cmp
dec
call
mov
xor
xlat
jle
add
mov
or
ret
out
push
add
jo
cmpsl
mov
dec
outsb
lret
pop
out
sub
sub
or
sub
popa
lea
push
mov
js
lcall
or
dec
mov
mov
scas
sub
call
mov
sub
call
mov
or
loop
loop
loop
fs
or
mov
movsb
mov
dec
pop
addr16
outsl
leave
int3
ljmp
inc
xor
out
pop
js
adc
sub
dec
xchg
push
sub
dec
lock
cmp
mov
mov
mov
dec
popf
dec
testl
mov
push
ljmp
daa
jno
inc
xchg
mov
dec
in
or
cmp
jbe
fstp
add
or
in
ret
xchg
sub
push
jge
loopne
jb
adc
sti
jbe
or
pop
scas
xchg
call
and
sbb
inc
insl
dec
dec
push
filds
pop
aam
inc
imul
sbbb
sub
lods
cmp
cmpsl
in
fisubrs
dec
mov
xchg
inc
sbb
mov
jecxz
jge
sub
sub
add
sub
int3
sbb
ret
pop
mov
aas
cwtl
pusha
les
mov
fsubr
mov
xchg
pop
daa
mov
sub
addl
add
sub
dec
or
ja
push
es
mov
add
dec
xchg
lret
mov
stos
jle
mov
test
pop
imul
cmp
lcall
mov
popf
cmp
xor
adc
or
rclb
inc
sbb
mov
in
inc
out
ret
dec
add
into
fwait
mov
adc
inc
inc
mov
lret
add
test
sbbl
mov
into
cmp
ja
sbb
ja
sub
dec
fxch
xchg
cltd
lods
imul
xchg
in
adc
js
or
pop
pop
push
or
pusha
mov
test
xor
dec
mov
loopne,pt
inc
xor
scas
mov
mov
sub
popf
cltd
pop
fwait
arpl
int3
sub
in
mov
scas
scas
or
andl
lea
fildll
xlat
sbb
inc
shll
push
mov
xchg
scas
fistps
add
jns,pt
or
mov
cmp
mov
arpl
shrl
aam
xchg
ljmp
fcomps
call
lret
jno
gs
mov
push
cmpsl
or
jle
mov
leave
mov
fldl
adc
lods
or
mov
popa
movl
jmp
dec
inc
sbb
push
or
arpl
dec
pop
sbb
js
sbbl
add
mov
mov
xchg
test
mov
inc
mov
mov
sub
out
loopne
pop
ds
or
orl
cmp
aam
adc
or
lods
sbb
pop
shrb
or
rorl
pusha
in
mov
pop
ja
scas
cmp
add
mov
sub
std
mov
lock
dec
stos
fildll
daa
dec
cld
ja
mov
out
mov
in
mov
rorl
or
leave
sbb
fmull
lret
jge
cltd
or
mov
mov
orl
add
jnp
ds
lods
stc
js
or
pop
imul
dec
shlb
fs
outsb
fmull
imul
inc
int3
sub
or
mov
dec
aad
rorl
enter
pop
lods
dec
dec
xchg
mov
pop
mov
cmp
push
add
imul
push
jecxz
stos
mov
adc
mov
int3
cmp
dec
cs
imul
jae
add
enter
mov
stos
dec
mov
pop
cmp
or
sub
imull
mov
popf
fdivl
scas
cmpsb
or
ljmp
sbb
insb
jbe
repz
movsb
dec
les
fiadds
push
or
mov
and
cltd
insl
popa
push
int3
cs
jl
mov
aam
inc
into
mov
test
arpl
cld
dec
jmp
add
rol
cltd
mov
int3
sub
xchg
mov
push
lods
dec
addr16
outsb
mov
push
cmp
out
adc
aam
aam
aam
push
dec
and
and
add
dec
mov
pop
and
in
pop
mov
cmp
push
fldcw
or
or
lret
pop
sub
in
out
adc
pop
fsubrp
push
test
out
mov
lods
lret
insb
mov
dec
mov
sub
sbb
ret
leave
push
pop
cmp
insb
mov
sbb
jmp
adc
mov
sub
mov
dec
cmpsb
cmp
inc
dec
adc
add
js
data16
addr16
or
jns
mov
sbb
dec
mov
cs
outsl
mov
ljmp
mov
test
cmp
sahf
add
fdivp
pop
pop
scas
fsubs
mov
fiadds
push
jmp
mov
mov
xlat
push
daa
stos
jne
fistpl
in
add
or
imul
pop
or
pop
dec
loopne
or
frstor
sub
int
sbb
mov
sbb
sbb
jmp
movsl
daa
ljmp
or
fwait
inc
mov
or
insl
push
insb
popa
mov
mov
sub
or
jno
ds
xchg
lea
pop
js
call
ret
pop
inc
mov
addr16
cwtl
mov
outsb
or
add
insl
mov
inc
pop
push
pop
adc
mov
popa
insb
or
pop
mov
xor
bound
mov
in
push
inc
mov
dec
out
cltd
jmp
call
insl
pop
lods
or
outsb
mov
adc
dec
and
sub
dec
pop
lret
or
int3
xchg
mov
imul
jmp
push
pop
mov
pop
enter
orl
or
mov
sub
insl
sbb
test
mov
mov
clc
ja,pt
mov
imul
xchg
xchg
lea
daa
or
sub
sub
mov
pop
daa
mov
int3
or
sub
fisubrl
fsubrs
mov
int
arpl
sub
or
and
mov
int
sub
cmpsl
jne
mov
dec
sub
pop
inc
lods
shr
add
popa
fisttpl
or
pop
pop
cli
dec
pop
dec
add
addr16
dec
fdivl
sub
arpl
cmp
int3
scas
push
test
lcall
scas
call
pop
xchg
mov
inc
mov
imul
cltd
insb
sbb
mov
push
out
pop
dec
add
xor
ja
sub
pop
adc
push
mov
cmpsl
jmp
pop
mov
daa
inc
push
stc
insb
sub
imull
ja
jecxz
enter
mull
mov
jmp
or
lret
insb
pop
testl
sub
or
call
push
insb
push
mov
lret
in
mov
mov
popf
or
mov
or
enter
mov
in
xor
scas
xor
pop
or
push
flds
popa
stos
loop
or
daa
push
fldl2e
popf
scas
mov
ja
arpl
rcl
arpl
mov
cmp
sub
push
ja
pop
int3
pop
xor
mov
cmp
jb
sahf
lods
or
addr16
test
ljmp
or
add
enter
fs
iret
or
push
add
or
xlat
dec
scas
arpl
mov
sub
jmp
dec
test
sbb
pop
mov
sub
insb
or
in
stos
fadds
jle
out
cltd
leave
mov
mov
iret
addr16
sub
rep
and
mov
int3
pop
jno
adc
leave
or
ret
std
push
clc
sahf
int3
out
arpl
pop
lret
iret
call
jae
push
mov
outsl
addr16
sub
enter
mov
add
gs
or
daa
mov
mov
jb
or
ljmp
in
push
sub
insl
lods
sahf
std
aad
mov
mov
fisubrs
mov
adc
or
or
cmpsl
and
fldenv
aam
sbb
pop
mov
stos
jle
dec
pop
adc
pop
call
cmp
lret
xorl
or
xlat
stos
pop
push
in
iret
dec
jae
cmpsl
mov
xor
loop
int3
cmp
popf
dec
pop
inc
int
add
push
cs
call
push
mov
sub
lcall
into
adc
test
call
adc
mov
dec
pushf
mov
mov
insl
in
addr16
or
cmp
or
cltd
orl
mov
outsb
cmpsb
jecxz
sub
jecxz
or
xor
push
addr16
gs
outsb
loopne
sub
push
test
sub
movsb
std
int
or
or
call
je
push
sub
andl
lret
into
mov
mov
arpl
fiaddl
movsl
cli
in
dec
cmp
mov
incl
fwait
out
mov
cmp
or
pop
jmp
sbb
cmp
in
sub
pop
cli
out
int3
adc
or
arpl
mov
or
cmp
ret
sbb
fidivrs
push
dec
out
dec
gs
enter
sub
ret
clc
faddl
cld
xchg
or
jmp
adc
or
pop
xchg
pop
outsl
dec
ljmp
leave
fistps
add
std
mov
mov
mov
xchg
rorl
cld
dec
push
outsb
call
cs
lea
daa
popa
inc
sahf
mov
out
jnp
sbb
xlat
rorl
mov
into
lods
andl
or
xlat
push
inc
inc
inc
test
adc
es
dec
mov
out
sbb
mov
fdivrs
mov
xchg
lea
daa
or
add
popf
dec
lcall
test
popf
aad
mov
mov
outsl
sbb
mov
or
adc
add
mov
adc
mov
ret
dec
pop
or
sbb
mov
or
lods
sub
mov
test
push
pop
cmpsl
push
inc
jne
int
arpl
dec
aaa
dec
sti
mov
movsl
insl
mov
sahf
push
xchg
lods
rclb
sub
dec
sbbb
or
xor
or
int
stos
cmpb
jmp
out
and
into
in
dec
in
fdiv
out
xchg
mov
dec
mov
adc
fldt
lods
in
cmp
in
pushf
inc
fldcw
cltd
mov
add
lods
int3
out
pop
popf
dec
mov
cwtl
sub
dec
pop
lods
pop
sbb
sub
mov
lods
mov
or
pop
mov
ret
cmpsl
fsubp
out
add
mov
fisttps
mov
dec
pop
cwtl
push
pop
bound
adc
inc
dec
and
call
sub
gs
pop
scas
leave
loop
in
cs
mov
push
fucomip
jl
cs
ja
cmp
push
dec
int
int3
popa
outsb
push
jl
jns
adc
dec
add
sbb
add
pop
add
ds
and
sub
xchg
loopne
push
mov
imul
or
daa
enter
fs
mov
add
cmp
scas
mov
mov
mov
dec
in
popa
pop
jmp
fwait
or
movzwl
mov
mov
mov
in
pop
leave
cmpsl
mov
mov
pop
addr16
decb
pop
arpl
sahf
lods
dec
jle
enter
ds
ja
lret
cmpsl
popa
scas
in
sub
in
inc
int3
inc
shll
test
shll
popa
dec
scas
sub
imul
cld
shll
arpl
mov
popa
dec
fistps
mov
mov
or
jbe
add
dec
outsb
xchg
dec
push
sub
mov
or
in
add
iret
cli
add
popf
push
jecxz
sub
insl
mov
sbb
pop
out
cmp
or
push
or
cli
mov
jnp
mov
dec
in
or
dec
inc
ds
sarl
sbbb
fcoml
push
jbe
ja
mov
shrl
test
stc
cmp
leave
dec
dec
xchg
jmp
or
xchg
push
rcr
neg
lret
fistpl
sahf
dec
outsl
xlat
into
push
pop
int
add
mov
xchg
pop
cmp
mov
or
dec
jl
jecxz
pop
popf
and
in
sub
or
or
dec
cmp
lret
pop
jns
mov
call
sub
push
or
lret
mov
dec
pop
fmul
cmpsb
mov
popf
push
pop
test
cmpsb
out
add
popf
leave
dec
jno
lahf
mov
lods
insb
add
cmp
adc
dec
inc
jae
mov
fmulp
dec
or
mov
clc
dec
int
enter
mov
inc
cwtl
add
mov
jne
or
inc
mov
mov
enter
and
int3
into
cmp
push
int
cs
clc
rorb
sub
mov
dec
out
dec
push
mov
sbb
mov
ret
out
cmp
xchg
inc
je
mov
mov
or
mov
enter
ficoms
ret
sbb
inc
cwtl
iret
or
adc
mov
jns
mov
push
mov
or
or
lret
enter
subl
test
sbb
sbb
push
pop
push
push
sub
add
mov
int
lods
dec
xchg
xchg
int3
sub
test
dec
rorb
dec
mov
leave
repz
addl
imull
pop
jmp
mov
mov
popf
mov
enter
sbb
dec
imul
pop
xchg
mov
mov
xlat
mov
or
out
out
jns
add
testl
dec
jb
cmp
xchg
dec
leave
or
dec
lret
or
push
inc
lret
dec
jbe
cmp
js
fldcw
or
popa
enter
inc
pop
orl
dec
enter
jge
out
mov
daa
jg
test
jg,pn
or
test
test
add
aaa
test
shlb
jg
test
sub
or
lods
jl
cmp
jge
lret
jg
aaa
daa
js
and
jg
test
scas
jg
or
jl
mov
sub
lret
jg
aaa
and
and
jg
test
stos
jg
pop
insl
movsl
jg
add
test
lods
jge
lret
jg
aaa
cmpsl
js
and
jg
test
sub
or
test
test
js
and
jg
aaa
mov
jg
test
lods
mov
jg
or
jo
lods
test
daa
and
adc
cmpsl
outsl
mov
lods
scas
stc
xchg
aas
push
mov
into
stc
sbb
dec
fstl
add
sub
mov
dec
nop
xchg
fcmovbe
test
jecxz
ljmp
or
sbb
cld
test
shll
pop
fstps
mov
rcr
shll
rcll
shll
push
shll
rcl
sarl
rcrl
sarl
pop
sarl
rcr
adc
minps
mov
or
adc
sbb
jl
pop
adc
lret
pop
lret
push
lret
xchg
lret
xlat
lret
push
lret
pop
lret
sahf
lret
fmulp
cmp
sbb
jns
pop
lret
cltd
lret
fxch
cmp
sbb
js
jns
pop
arpl
push
lods
xchg
mov
and
in
mov
fs
sbb
cmp
xor
sub
imul
ds
popa
push
dec
insb
in
js
sbb
jp
jp
adc
and
mov
sub
in
adc
dec
adc
mov
mov
mov
xchg
sub
pushf
aas
in
inc
in
shll
cld
mov
out
int3
call
int
mov
cmpsl
cmp
addr16
mov
sbb
in
mov
rorb
jne
adc
test
sbb
xchg
mov
in
int
in
ror
cld
mov
inc
lds
adc
mov
mov
pop
int3
cmp
sub
jns
add
lods
pop
cltd
popa
sbb
jb
gs
xor
test
lcall
xor
add
adc
push
mov
les
sub
inc
int
enter
cltd
scas
arpl
cmpsl
adc
mov
enter
ds
hlt
das
enter
pop
addr16
nop
pop
bound
adc
mov
cld
mov
movsl
hlt
std
lds
cmp
addr16
and
and
sub
jns
adc
mov
test
movsb
sub
and
jae
mov
inc
popa
sti
push
fnsave
and
jp
xor
adc
in
sbb
pop
xor
fldt
xor
mov
sub
bound
fdivl
or
inc
dec
mov
loope
sub
or
xor
test
or
jno
hlt
and
xor
push
mov
or
test
add
subl
mov
cmp
mov
cld
imul
mov
jno
mov
jae
jg
leave
or
shrl
hlt
rclb
daa
imul
mov
sahf
cwtl
mov
or
test
std
movsb
xlat
das
mov
fwait
mov
in
inc
cld
adc
xchg
sub
paddsb
and
in
jle
xor
loopne
jmp
inc
hlt
or
jecxz
pop
xor
sbb
mov
scas
fcompl
paddq
insl
inc
mov
lods
pop
movsb
lcall
xchg
mov
in
cmpsl
xor
or
aam
xchg
arpl
stos
and
movsb
sbbl
mov
dec
mov
mov
test
jne
mov
popa
in
jae
fs
ljmp
fsubrl
loopne
sbb
test
xor
and
mov
mov
in
cltd
mov
int3
xchg
or
in
ss
pop
test
sub
pop
movsb
mov
int3
xchg
das
push
mov
mov
add
cmp
test
ds
jno
or
jnp
push
and
lods
mov
in
out
in
xor
sub
insl
inc
test
cld
mov
mov
adc
pop
ud2
out
call
fcoml
lods
aam
lock
sub
pop
inc
int
lods
rol
stos
adc
cmp
outsb
outsl
nop
pop
in
das
pop
cmpsl
xor
pushf
loop
js
fsts
push
in
cmc
adc
pop
mov
jmp
adc
pop
jbe
mov
les
cmp
lods
cmp
push
adc
cmp
in
jecxz
arpl
les
jne
rorb
insb
lods
sarl
sub
push
cltd
mov
shr
xor
fists
pop
lahf
pushf
push
arpl
cmpsl
in
adc
pop
sub
std
mov
mov
add
mov
fdivrl
loopne
pop
mov
mov
outsl
inc
jb
cs
and
add
add
xchg
int
mov
mov
sub
pop
pushf
and
sbb
roll
sbb
cld
in
xchg
push
jg
sub
dec
adc
ja
push
ja
mov
loope
jo
sub
xchg
mov
out
movsb
ret
out
jmp
mov
cmpsb
test
mov
jne
popa
sub
inc
add
in
inc
mov
movsb
pop
cld
fsubrs
xlat
mov
xor
xchg
imull
in
pop
push
pop
pop
cs
xchg
adc
ds
sub
dec
leave
dec
lds
xchg
mov
adc
call
dec
test
pushf
sbb
or
cld
or
fcompl
push
lods
in
and
lods
mov
cltd
mov
adc
adc
mov
mov
push
insb
xchg
sahf
push
fdivs
jne
mov
in
or
dec
cld
fistps
outsb
hlt
or
sub
out
jge
aam
push
sub
pop
mov
pop
pop
cwtl
xor
mov
jns
mov
cmp
sub
in
cmp
stc
in
mov
pop
cmpsl
and
test
sahf
sbb
cli
lret
or
mov
xor
sbb
jo
imul
add
push
rcl
adcb
test
or
stos
out
mov
adc
in
and
adc
les
push
insb
aam
inc
daa
daa
insb
imul
mov
and
fwait
sbb
dec
lods
dec
test
sbb
je
popf
pop
push
dec
sbb
or
adc
pop
cmpsb
mov
xor
addr16
test
and
in
push
mov
mov
test
scas
pop
mov
data16
dec
mov
xor
in
mov
sub
mov
hlt
int
add
push
in
cmpsl
jns
xchg
test
lods
pop
lods
in
mov
hlt
ficompl
clc
adc
mov
add
adc
test
lcall
call
dec
cld
pop
test
cmpsb
push
ljmp
les
or
faddl
lods
sub
push
mov
movsb
pop
xor
and
icebp
push
and
add
push
fsin
lds
mov
xor
push
cmpsb
int3
mov
int
xlat
rcll
mov
incl
or
push
dec
fsubp
movsb
pop
push
dec
push
in
cltd
cmp
xchg
mov
jp
and
test
fucomp
into
or
aad
push
xor
sbb
insb
ret
jle
outsb
mov
mov
movsb
rcrl
pop
lret
fwait
popa
push
cltd
int
mov
add
adc
inc
push
movsl
cmp
inc
ret
fistps
repz
out
jbe
adc
inc
and
push
mov
scas
xor
and
roll
adc
in
push
arpl
in
ljmp
pop
cmpsl
sub
xor
fdivl
and
cmpsb
inc
cld
adc
adc
test
adc
add
leave
sub
lret
pushf
dec
push
dec
dec
xchg
lods
mov
cld
clc
jl
pop
mov
push
inc
mov
test
lods
in
sbb
mov
out
dec
in
and
pop
push
in
pop
ss
fisubrl
ljmp
mov
xchg
add
mov
jnp
jo
jge
inc
imul
and
xor
inc
xor
test
pop
jo
lock
int
in
sbb
cld
out
rcrl
push
aam
or
cmp
lods
bound
cmp
and
stos
pop
push
test
cmp
mov
pushf
adc
lret
in
jns
mov
iret
aaa
jae
inc
jp
ja
fisubs
fdivl
cmp
dec
pop
xchg
rorb
iret
stos
mov
inc
mov
enter
test
push
xchg
das
lea
cltd
adc
in
arpl
cmp
mov
xor
or
fmul
mov
jmp
pop
push
and
xchg
mov
cmp
in
cmp
aaa
push
cld
push
out
mov
int
pop
daa
mov
out
sub
in
cld
shlb
int3
xchg
sbb
mov
add
ss
int3
sub
movsb
add
and
pop
dec
jns
fsubs
pushf
shll
jp
xchg
sbb
stos
mov
xor
fsubrl
mov
test
dec
movsb
iret
les
daa
std
xor
push
ficoml
and
in
and
xchg
or
mov
insl
int3
xor
pop
dec
pop
in
es
test
aad
mov
mov
out
cmpsb
xor
mov
cli
in
in
cld
xchg
jno
nop
push
dec
xchg
in
movsb
aam
ret
lods
cs
addr16
sbb
movsb
xor
loope
cld
xchg
pushf
mov
frstor
mov
xchg
in
mov
mov
hlt
pushf
popf
int3
cli
les
inc
pop
shll
mov
lods
pusha
das
out
mov
mov
xor
ss
xor
stos
pop
push
cmpsb
ror
jnp
es
pop
in
add
xchg
push
pop
push
cld
pop
pop
je
and
pop
out
mov
pop
mov
adc
lods
sub
ja
fistpl
in
cmp
incb
inc
xchg
int
in
lock
ret
les
fs
pop
in
enter
testl
adc
xor
pop
fnstsw
mov
leave
jge
pop
or
fwait
das
mov
in
or
push
stc
fnstenv
movsb
int3
out
and
and
lods
mov
pop
movsb
cmpsl
mov
in
imul
in
sub
hlt
mov
sub
xchg
scas
pop
cmc
lods
add
out
outsl
jmp
test
mov
int3
aas
insb
addr16
daa
mov
adc
adc
daa
jp
daa
pushf
int
xchg
cwtl
cmp
in
mov
mov
cmpl
fldt
pop
mov
pushf
sbb
xchg
es
adc
push
fsubrl
cs
dec
subb
mov
mov
xor
mov
in
sbb
pop
push
adc
mov
outsl
inc
sub
test
int3
mov
popa
ja
test
push
ljmp
cli
lods
fldl
sbbb
add
jge
cltd
add
push
push
add
sub
call
movsb
das
pop
and
idiv
sub
mov
mov
xor
test
in
rcr
int
add
int3
enter
cmp
and
adc
pop
xchg
test
mov
outsb
pop
in
inc
jecxz
or
and
xchg
mov
mov
arpl
or
push
hlt
adc
dec
lods
in
arpl
adc
or
stos
mov
popa
out
fmull
js
iret
adc
xchg
pop
xor
or
sbb
dec
pop
mov
mov
or
test
pushf
std
xchg
mov
insb
in
scas
cld
sahf
in
xor
xchg
mov
test
cld
xor
mov
int3
sbb
and
mov
ret
rol
push
cmp
test
not
not
push
shrd
cmc
btr
movsbw
push
clc
btc
mov
bsf
shrd
pushf
xor
mov
call
add
add
sub
add
add
add
add
add
add
add
add
xor
push
or
dec
or
add
push
add
add
add
add
add
add
xor
push
or
aas
inc
jo
inc
inc
xor
add
dec
imul
dec
inc
add
mov
cmp
jae
bound
test
les
mov
lods
in
mov
cmp
jle
sub
inc
nop
xchg
addl
xor
int
cmp
xchg
xor
mov
inc
dec
and
add
stc
stos
enter
pop
shl
push
aam
dec
dec
jge
addb
add
xchg
pop
loop
popf
orl
push
leave
js
mov
arpl
sub
jb
xchg
add
lods
das
lcall
das
js
sub
sbb
mov
je
test
mov
jg
daa
pop
mov
push
bound
push
mov
rcrl
scas
adc
lock
inc
cmpsb
jae
ss
jne
xchg
xchg
push
shl
xor
std
femms
fstpt
loopne
inc
inc
iret
fcom
popf
fisubrs
add
jge
mov
mov
aas
les
addr16
in
push
test
shlb
and
add
xor
mov
scas
ss
add
mov
xlat
stc
jecxz
mov
sub
popl
loop
ss
addl
jne
push
mov
mov
out
xor
jbe
mov
pop
push
out
xchg
es
cmp
stos
mov
xchg
mov
xor
loopne
adc
and
inc
call
pop
int
sbb
fwait
movsl
xchg
subb
mov
hlt
ljmp
int3
ja
stos
sub
jns
sti
test
inc
push
pop
and
mov
hlt
dec
movups
test
adc
dec
mov
ret
xor
dec
data16
insl
jo
jmp
dec
and
xchg
outsb
mov
mov
xor
hlt
lea
inc
cmpsb
aam
aas
out
inc
cmc
int
sti
stc
int
out
mov
nop
test
cmp
cli
cmp
clc
dec
cmp
insl
inc
nop
push
pop
pusha
xor
mov
ljmp
js
push
iret
jmp
lods
jno
in
cmp
push
je
pop
std
mov
adc
aas
int3
jge
loope
insl
fsub
pusha
xchg
fsubp
dec
stc
xor
cmp
pop
cmpl
mov
sbb
andb
outsb
fwait
aaa
dec
mov
int3
pop
aas
xchg
shr
pushf
xchg
cli
jns
shlb
iret
rcrb
or
cmp
rcrb
push
xchg
negl
push
fwait
lahf
shlb
out
das
inc
pop
sbb
das
and
and
cmp
out
add
lahf
inc
cli
pusha
fisttpl
jg
call
xor
ffreep
xor
fdivrl
in
mov
filds
mov
movsb
insl
mov
iret
pop
out
andl
dec
pop
inc
dec
cmp
sbb
cmp
lock
add
lea
pusha
jmp
aam
inc
lret
ret
in
or
bswap
xchg
xor
cmpsb
shll
xchg
icebp
inc
fnsave
popf
addb
cmp
pop
push
shll
lea
popa
push
inc
fnstenv
pop
lds
mov
jo
mov
fnstsw
pop
cmp
imul
sub
or
loope
outsl
or
add
jae
fs
inc
repz
xlat
in
setp
adc
outsl
scas
stc
shll
sbb
fldenv
inc
rcr
and
clc
pop
sub
pop
pop
js
rcll
popf
icebp
neg
jb
mov
push
mov
mov
pusha
repnz
sub
jnp
mov
push
cld
inc
cmp
adc
add
cs
xlat
mov
sub
dec
js
inc
call
rcll
mov
lock
sarl
inc
repz
adc
lock
dec
adc
clc
lret
paddsb
push
sub
mov
mov
adcb
scas
inc
fistpl
pop
jmp
or
or
repz
cli
sub
scas
test
pmaxsw
sbb
mov
hlt
mov
lods
add
push
adc
in
jle
ljmp
lret
add
pop
sbb
mov
mov
sti
jmp
cmp
cmp
pop
jg
fbstp
cmp
push
pop
jne
adc
sbbb
sbb
pop
dec
loope
pop
stc
push
test
lods
xchg
out
in
insl
mov
pop
or
xor
xchg
adc
xor
std
lret
int
idivl
pop
mov
pop
rcl
lret
pushfw
jns
xchg
sahf
adc
and
fsubl
mov
xchg
push
sub
lret
inc
sub
jo
mov
jmp
push
rclb
mov
mov
fnsetpm(287
mov
fadds
lcall
fucomp
or
push
adc
rorl
inc
insl
push
js
imul
cmpsl
iret
mov
xchg
stos
and
push
imul
and
cmpsl
fs
inc
and
stos
das
hlt
pop
add
in
ds
pop
jno
push
adc
stos
stc
mov
jo
xlat
ret
data16
ret
mov
ds
sbb
jb
mov
gs
imul
mov
cmp
std
negl
mov
icebp
leave
cltd
insl
bound
cwtl
inc
pushf
sbb
ret
mov
les
shlb
fildl
xchg
add
popa
fidivrl
cmpsl
xchg
sahf
leave
xor
stc
cmp
sbbl
mov
push
cs
mov
push
lds
ja
popa
sub
xchg
jb
add
insb
mov
sbb
cmp
jmp
pop
jg
push
mov
pop
push
xchg
loope
xchg
mov
jge
mov
movsb
repnz
adc
mov
jmp
leave
pop
jp
pop
imul
mov
and
loope
fiadds
cli
pusha
cli
pop
mov
mov
and
mov
add
ljmp
int
pop
sarl
push
aam
mov
mov
mov
bound
mov
jb
sub
mov
inc
repnz
hlt
fnstsw
push
xchg
jae
in
push
inc
jp
lcall
sbb
pop
call
push
sbb
mov
lock
sbb
jmp
jae
push
sti
mov
push
mov
mov
and
sbb
mov
imul
fnstcw
fwait
call
std
test
pop
in
testb
sub
xchg
data16
jb
imul
pop
hlt
mov
push
xor
sub
jp
adc
push
movsl
enter
xchg
xor
jno
inc
cmp
arpl
daa
push
out
sbb
xor
adc
push
push
cmp
inc
add
push
jg
dec
dec
sub
jmp
push
cmp
data16
pop
hlt
outsb
pop
jo
std
mov
loopne
xchg
insl
out
cmp
add
notl
shrb
dec
cmp
pop
cmpsl
js
repz
lret
aaa
mov
scas
dec
cltd
and
out
push
inc
pop
and
pop
push
scas
push
mov
xor
je
jle
dec
out
faddp
fistpl
mov
faddl
mov
fwait
addr16
mov
subb
sbb
push
in
scas
cld
or
insl
sahf
fldenv
jb
mov
mov
imul
xchg
xor
lods
push
adc
rcrb
arpl
hlt
pop
test
jecxz
in
pop
incl
jecxz
popf
push
push
push
aaa
pop
imul
add
adc
or
loopne
or
and
jle
idiv
enter
arpl
inc
fs
cmp
sbb
ljmp
fisttpl
aad
je
inc
jnp
andnps
stos
or
mov
and
scas
cltd
mov
movl
jmp
jmp
jl,pt
mov
mov
test
mov
scas
jb
loopne
ja
xor
daa
jmp
cmp
cmp
pop
push
divb
int
aas
adc
sbb
rcl
xor
add
test
cmpsb
cltd
xchg
stos
sbb
and
jne
or
add
imul
and
cs
pop
push
xor
push
in
loop
adcb
adc
shl
mov
xchg
mov
inc
or
add
and
adc
push
push
rcll
hlt
sub
pop
mov
mov
and
mov
std
cs
lret
leave
jns
movsl
jp
cmp
mov
sub
push
fisubrl
mov
jns
dec
xor
dec
cli
jp
xchg
fsubl
loope
pop
call
jnp
jbe
movsb
jb
push
in
push
lods
or
sbb
in
imul
adcb
inc
test
dec
je
cs
int
lcall
dec
std
push
divl
sub
cmpsl
sti
adc
out
sub
pop
cmp
out
andl
lods
cmp
pop
cmp
xor
mov
subb
aaa
ss
dec
imul
ljmp
xchg
xor
dec
mov
sbb
adc
sti
bound
jecxz
lods
xchg
xchg
adc
and
out
adc
xchg
mov
xchg
imull
mov
fdivrl
or
cmp
push
js
in
adc
fwait
pushf
lcall
pop
fiaddl
int
test
shrb
cmp
not
mov
xchg
icebp
add
mov
out
fwait
and
pop
mov
out
xchg
dec
mov
imul
lahf
adc
sub
or
movsb
pop
imul
ror
mov
scas
push
jp
outsb
or
sub
insl
mov
xlat
ljmp
mov
idivl
mov
js
lea
push
sub
jno
mov
push
push
lcall
test
dec
lea
adc
icebp
mov
mov
add
sub
aaa
sarb
or
out
or
jl
out
sbb
pop
repnz
cltd
shlb
inc
mov
sub
inc
jnp
iret
pusha
lods
ds
shrl
sbb
pushf
int
sbb
dec
out
push
leave
cmc
mov
cmp
add
xchg
push
pop
xchg
add
int3
jecxz
mov
xor
and
cmp
mov
inc
mulb
test
mov
aaa
push
insb
push
sub
cwtl
push
cwtl
xor
jg
in
mov
push
out
adc
or
mov
jl
int
in
mov
lret
cmp
in
loop
mov
rclb
pop
mov
lcall
inc
adc
rcrl
add
xchg
mov
insl
popa
jp
cs
insb
add
add
push
xlat
icebp
lret
pusha
dec
mov
xchg
mov
fwait
pop
mov
movl
fdivl
pusha
std
inc
cmp
jmp
add
xor
push
cltd
cmp
dec
or
leave
jg
jno
xchg
arpl
mov
lret
cmp
enter
jbe
in
dec
xor
cmp
cmp
loope
cmp
mov
sti
loop
je
rcrb
adc
insb
cmpsl
vshufps
popf
cmp
xor
icebp
cmpb
cmpsl
lret
test
jmp
mov
adc
daa
and
mov
and
test
call
fists
hlt
sbb
lcall
fadds
dec
cmc
inc
sub
jp
xor
sahf
mov
lcall
lea
mov
pushf
setno
lea
push
movl
pusha
pushf
push
mov
push
mov
movw
pushl
ret
add
xlat
leave
sbb
inc
cmc
jno
xchg
scas
or
call
lods
psraw
xor
imul
mov
cmpsb
mov
cs
sub
daa
xchg
outsb
rcrb
mov
jnp
lea
mov
dec
mov
stos
mov
and
js
push
repnz
movl
or
pop
xchg
addr16
shrb
mov
movb
adc
jge
es
adc
xchg
fiaddl
insl
leave
push
push
movsl
fldcw
push
call
adc
test
enter
jmp
nop
dec
enter
push
stos
mov
ds
mov
xchg
out
insb
push
movsl
ds
mov
jbe
dec
and
pop
dec
cld
mov
cmp
cs
or
loope
leave
icebp
fpatan
mov
adc
arpl
jo
repnz
in
jne
mov
mov
pusha
fwait
mov
mov
mov
lods
lret
sub
cmp
adc
lds
vpsubw
dec
inc
or
adc
sub
outsb
mov
push
mov
push
enter
fstpl
stmxcsr
push
and
mov
fmul
pop
enter
mov
jbe
ficompl
dec
push
inc
adc
stc
cmpsb
cmp
neg
xchg
mov
sub
jmp
xchg
xor
data16
ja
cmp
sbb
outsl
xor
imul
lret
push
jns
shlb
adc
sub
pop
imul
cli
stc
jb
sub
ss
mov
dec
shll
cmpb
sbb
mov
test
jge
pop
mov
mov
xchg
int
in
dec
fisttps
jecxz
xor
jb
sahf
scas
inc
inc
dec
insl
pop
pop
pop
fildl
nop
xor
push
jge
popf
xor
dec
movsb
cmp
pop
jmp
cmp
data16
ret
mov
inc
push
sbb
jbe
rorb
jmp
mov
push
fwait
mov
adc
loop
xor
pop
cmp
jae
xchg
sub
pop
mov
sub
nop
mov
mov
sub
sbb
add
push
pop
loope
ss
lahf
insl
daa
sub
mov
in
xor
mulb
mov
imul
inc
int3
sub
fildl
or
ret
or
ficompl
dec
xchg
orl
sub
pusha
popa
mov
adc
addr16
push
mov
lret
mov
andb
adc
mov
or
xchg
adc
lret
rcrb
jl
inc
push
sarb
lret
addr16
push
sbb
jne
or
outsb
inc
aam
cld
fidivrs
xchg
mov
dec
dec
popf
aas
out
out
repnz
add
lcall
mov
xor
cs
mov
es
mull
out
movsb
cmc
jecxz
lods
mov
dec
movsl
sub
insl
sbb
xchg
adc
loop
shrl
lcall
jl
pushf
mov
push
jecxz
fimuls
lea
ret
cmp
pop
push
pop
flds
cltd
cmp
and
add
or
or
mov
bound
add
fs
in
add
push
xchg
leave
mov
lock
mov
xor
loope
mov
and
movb
push
push
pushl
ret
cld
lock
mov
call
test
mov
push
test
push
aas
lods
scas
pop
dec
loope
movsb
mov
repnz
jl
jnp
add
sub
jp
jbe
daa
lock
mov
ret
dec
sub
dec
inc
enter
out
js
into
ja
lods
divb
jno
scas
sub
enter
xchg
add
mov
pop
jno
js
sbb
andb
shll
sub
inc
mov
mov
pop
outsl
mov
mov
iret
fisubrs
das
mov
call
sbb
ja
mov
cld
xlat
popf
loopne
cmpb
jmp
out
jnp
add
movsb
testb
std
mov
mov
aaa
cmpsl
add
test
push
mov
inc
clc
out
js
push
lea
jge
push
pushf
push
call
shrd
mov
bt
push
shl
pushf
pushl
lea
je
call
test
rol
test
mov
rcl
stc
cmp
sub
adc
lea
mov
pusha
cmp
sub
test
pushl
popl
clc
test
cmp
pushf
pushl
lea
ja
not
dec
mov
neg
sub
neg
bt
movsbl
add
clc
stc
mov
neg
shl
call
xor
mov
inc
mov
mov
push
lods
push
or
out
gs
and
lods
cmp
push
dec
icebp
out
daa
pusha
cld
xchg
in
out
sbb
push
push
notb
xor
mov
mov
scas
cli
aad
aaa
into
inc
jb,pt
push
push
sub
cmp
iret
cmpl
pop
movsl
imul
xchg
inc
mov
sar
push
aas
or
add
sub
mov
jb
or
in
fimull
fcmovnb
test
dec
popf
sub
sbb
inc
or
mov
sbb
shlb
sbb
mov
xor
loopne
fmuls
and
lcall
cmc
fadd
clc
xchg
sti
pusha
aaa
sub
jae
out
les
frstor
mov
sub
imul
movsl
push
ficompl
adc
mov
or
inc
movsb
cmpsb
xor
addb
sbbl
adc
icebp
imul
call
add
push
cli
test
inc
dec
mov
pop
mov
mov
insl
mov
dec
fs
stos
cltd
cmp
test
shll
fs
adc
pop
inc
lcall
xchg
mov
add
add
out
inc
pop
call
jne
mov
fistps
lahf
stos
insb
mov
popf
clc
adc
aam
in
movl
push
pushf
call
call
lods
sub
and
xor
insl
lods
push
and
sub
scas
xchg
mov
fnstenv
dec
aaa
xor
jno
sub
jmp
outsb
mov
push
push
scas
xor
popa
or
ljmp
sub
in
sarb
or
sbb
pop
popa
xlat
out
daa
push
cs
inc
mov
ret
inc
adc
mov
or
inc
scas
sub
xor
dec
xor
xchg
jno
push
movsb
cs
mov
push
jno
adc
or
test
pop
lea
in
mov
pop
and
jge
pop
neg
daa
lea
and
lahf
lock
mov
cmp
insl
fcmovne
cmc
shlb
stc
insl
jmp
jp
in
daa
or
lahf
ficompl
inc
jns
leave
daa
mov
cmpsl
jg
jno
xor
ljmp
or
in
fbld
dec
mov
shll
into
or
inc
fdivs
movsl
lret
sbb
dec
rcl
mov
cmp
lods
xor
dec
movsb
in
push
sub
lea
lret
pop
cmp
cmc
xchg
xchg
int
xchg
insl
int3
test
push
mov
adc
pop
out
fistpl
add
dec
mov
jp
and
test
mov
lcall
int
push
cmp
mov
popa
js
fisttpll
and
mov
lea
mov
outsb
bound
pusha
pop
add
xor
cmpsl
popa
jmp
cmp
jge
int
rorb
popf
xor
lret
test
hlt
movsl
adc
jle
jecxz
cmpsb
jno
xor
or
ljmp
stos
adc
xor
dec
sbb
mov
iret
cmpsb
test
insb
dec
or
lods
cmpl
bound
imul
shlb
mov
xchg
lods
cmp
jb
pushf
aaa
add
push
popa
call
dec
insb
aad
loop
mov
fdivrp
stc
or
sub
pop
add
out
insl
sub
cwtl
pop
mov
insb
lods
sti
push
lock
aaa
push
sub
mov
jmp
ja
test
mov
push
mov
sub
scas
dec
lea
gs
xchg
fisubrs
mov
pop
jb
shrb
dec
sub
cmpsl
xor
lods
outsl
lds
daa
mov
jecxz
mov
clc
dec
and
push
imul
cmpsb
push
in
push
out
shll
insb
in
arpl
ljmp
xlat
cmp
jl
int
add
subl
mov
lret
mov
mov
sbb
jl
jae
je
es
fnsave
xor
daa
sub
and
and
ficoms
jmp
push
daa
gs
or
movsb
pop
inc
mov
mov
cwtl
imul
lret
xor
mov
pop
or
jne
in
rcrb
inc
ret
lea
jge
and
test
test
xchg
movsb
outsl
clc
cmc
mov
xchg
decb
mov
lea
dec
pop
and
inc
hlt
ret
add
xchg
lret
mov
dec
notl
cmp
push
pop
adc
fistps
aad
fldt
xor
cmp
inc
add
scas
call
inc
adc
stos
cmc
test
mov
out
xchg
lods
fimuls
and
repnz
insb
fmuls
and
and
mov
or
jg
xchg
bound
push
lods
pop
enter
and
loope
cmp
ljmp
call
les
aad
fiadds
sub
sbb
jb
into
and
mov
push
and
dec
add
jg
mov
and
or
inc
xor
jg
test
fidivl
into
xor
jge
lea
fadds
popa
and
test
decl
gs
xlat
add
out
or
xchg
push
arpl
shl
adc
dec
xchg
or
xor
inc
and
dec
push
out
xor
add
mov
inc
xchg
sub
in
jno
sub
scas
xchg
lcall
sahf
lods
inc
add
or
mov
and
push
cmp
mov
sbb
lea
roll
xchg
sbb
cld
je
movsb
pop
cs
mov
lret
xchg
addb
xor
add
pop
sbb
test
scas
jno
mov
mov
leave
lds
imul
nop
push
sub
adc
dec
test
test
hlt
ljmp
iret
test
add
test
mov
adc
popa
addr16
test
cmpsb
in
xchg
inc
sub
pop
sub
sbb
adc
sub
lods
pop
and
in
sbb
shr
cs
popa
or
mov
cli
lcall
sub
test
add
cmp
mov
or
sti
push
cmp
out
cmpsb
insb
daa
and
push
movsb
pushf
sub
outsb
out
shll
xor
imul
add
mov
int3
cmpsb
push
push
in
ds
pop
dec
adc
jbe
mov
cmpsl
add
push
jns
cmp
sbb
dec
or
in
scas
pop
fs
int
sub
push
sub
pop
and
push
mov
or
adc
test
mov
test
sbb
std
nop
idivl
pop
or
sbb
lea
add
cmpsl
stc
rorl
scas
lock
stc
pop
lahf
push
dec
mov
movsb
fimuls
xor
popa
int3
outsb
inc
ja
popf
lock
inc
inc
jns
xor
mov
ja
int
dec
mov
insb
add
xchg
sbb
cmpsl
jle
dec
mov
dec
jecxz
int
cmpsl
dec
xor
add
addr16
pop
leave
fdiv
cmp
or
adc
dec
sbb
cs
sbb
subl
pcmpgtd
adc
scas
addl
mov
sub
arpl
fisubs
and
enter
pop
je
xor
dec
jns
and
xchg
cld
stos
bound
xor
xor
or
mov
mov
outsb
dec
mov
mov
scas
push
data16
push
jnp
xor
add
sub
mov
mov
aas
and
xchg
in
xorl
xor
dec
jl
mov
imul
aam
je
imul
pcmpgtb
test
ret
outsb
loopne
xchg
adc
dec
pop
fidivl
neg
lds
fsts
insb
dec
sub
insl
sub
mov
push
cmpsl
dec
mov
out
lahf
mov
mov
cs
lods
lret
mov
jb
in
pop
out
fistpl
and
add
inc
mov
inc
leave
mov
ljmp
scas
jae
mov
mul
xchg
add
cwtl
pop
mov
and
repnz
cmp
push
xchg
dec
dec
ja
mov
xlat
xor
jecxz
lea
pop
lods
cli
lods
jno
mov
pushf
jmp
test
mov
scas
xchg
inc
dec
jle
pop
imul
pop
mov
and
daa
push
out
inc
cmp
leave
repz
gs
aad
sbb
mov
dec
cmp
lods
pop
mov
cmp
cmpsl
popa
or
lahf
insl
insb
or
movsl
mov
movsl
je
in
xchg
mov
push
mov
daa
in
mov
mov
jnp
movsl
cld
lods
xchg
mov
aad
xor
icebp
and
or
or
cmc
jecxz
mov
insb
sbb
into
roll
xchg
nop
xor
iret
das
pop
clc
dec
stc
repnz
lcall
iret
mov
fs
ja
out
dec
outsb
les
mov
scas
jle
pusha
ret
daa
mov
push
jl
dec
fs
push
dec
insl
cwtl
loope
cmp
loopne
sti
sub
sbb
or
rorb
shlb
lahf
or
and
pop
mov
push
stos
aad
cmpb
repz
dec
mov
xlat
and
push
and
jns
call
mov
lahf
scas
xchg
call
and
insl
inc
test
sbb
fcoms
insb
or
popa
test
sti
lea
add
dec
mov
or
test
inc
sub
das
lret
subl
hlt
cmp
and
push
sbb
jge
add
dec
lds
cmp
push
adcb
int3
test
jl
mov
mov
jp
or
pop
mov
add
xchg
jns
pop
pushf
insl
push
ds
jb
test
jmp
sub
or
pusha
scas
insl
mov
addr16
xchg
scas
jns
xor
lock
ljmp
fwait
push
mov
sub
pop
jmp
push
popa
xor
push
cs
sub
sbb
popa
xor
outsb
pop
hlt
gs
jno
inc
dec
push
insl
sbb
mov
xor
cltd
std
daa
xor
lahf
xchg
out
pushf
sbb
jg
call
into
in
movsl
push
pop
inc
lods
int
in
in
adc
push
test
addr16
push
mov
popa
fadd
mov
out
imul
cltd
dec
pusha
dec
decb
arpl
in
lret
je
inc
addr16
jae
stos
push
jge
xchg
out
cmpsl
adc
pop
repz
subl
lret
push
lods
adc
ljmp
mov
movsl
jg
inc
cmpsl
sti
scas
cltd
jl
sub
xor
jne
bound
bndldx
adc
cld
ljmp
into
xchg
cs
sub
mov
cld
iret
xchg
fldcw
add
add
push
outsb
inc
outsb
cs
imul
lods
sub
xchg
jg
fwait
lock
mov
sbb
cmp
sysenter
cmp
sbb
in
and
inc
pop
enter
frstor
pop
movsl
push
out
pop
call
sbb
inc
or
outsb
test
test
cmp
push
mov
xor
pop
lea
cmp
jl
and
fbld
sbb
dec
push
mov
push
test
push
pop
cmpsb
push
or
scas
sbb
or
test
outsb
push
xor
add
and
sbb
movsb
mov
in
jno
inc
push
fcomps
jle
xchg
shrb
and
rorb
adc
xchg
dec
lret
dec
and
std
and
xchg
sub
mov
or
pop
inc
adc
push
inc
cmp
cmpsl
xlat
andb
popf
and
inc
push
or
push
pop
fwait
shrb
lea
fisubl
sub
cmp
mov
sub
sti
push
pusha
ljmp
sub
xor
cmp
xor
jp
adc
sub
pop
jecxz
fisttpll
les
adc
xor
cmp
mov
cmpsl
movsb
jecxz
mov
or
or
dec
or
addr16
jle
popf
out
lea
lret
lret
sub
fisubl
lahf
clc
mov
xor
repnz
sbbb
repnz
sub
push
popa
incl
aaa
lcall
sub
push
sbb
cmpsl
leave
xlat
push
lds
loop
sub
popa
xor
dec
outsb
cmp
dec
push
cs
scas
loop
enter
adc
or
cwtl
cli
leave
xchg
jp
std
sub
bound
data16
xor
or
imul
imul
dec
jns
push
pop
shll
inc
addr16
bound
fwait
xor
clc
aas
inc
gs
or
leave
outsb
bound
pop
into
push
cmp
jge
cs
mov
sbb
xadd
loopne
lods
pop
inc
mov
jns
leave
aaa
icebp
jns
xor
syscall
sub
outsb
push
push
test
imul
jg
ror
xchg
inc
gs
int3
jl
fldcw
push
leave
shr
stc
int
jl
inc
mov
jge
adc
push
sub
mov
cs
adc
add
cmp
popa
xor
and
ljmp
push
jbe
pushf
xor
mov
cmp
push
jno
xchg
mov
and
mov
dec
inc
fnstcw
pop
popa
sub
jae
sub
add
dec
pop
mov
push
cmpsb
daa
mov
outsb
fistl
inc
shrl
push
mov
dec
sub
mov
outsb
stos
pop
cltd
aas
lret
sub
in
int
lock
jbe
mov
inc
or
push
pusha
loop
push
scas
fs
movsl
mov
mov
jno
cltd
xchg
mov
popa
pop
rcl
mov
push
add
jp
imul
push
mov
dec
mov
cmp
rclb
cs
sbb
mov
out
iret
aad
inc
data16
mov
daa
sub
lods
sub
pusha
xorl
add
jne
enter
adc
mull
insb
scas
xchg
popa
dec
mov
movsl
icebp
dec
lods
xchg
xchg
divl
adc
and
dec
xor
sub
xchg
jno
jbe
pushl
push
xor
jecxz
dec
push
addr16
into
popa
je
pop
cld
push
pop
sub
pop
or
push
clc
dec
add
test
aas
mov
lods
jg
mov
aam
cld
stos
pop
dec
xchg
into
xchg
add
pop
xor
mov
jge
adcl
cmp
add
imul
insb
stos
or
cmc
xor
push
pusha
mov
xor
lea
mov
mov
insl
sbb
shll
sbb
subb
dec
pop
lods
cmpsl
pop
sub
movl
outsb
lea
xorl
xchg
cmp
pop
xor
fmuls
pop
lahf
jecxz
cmp
jp
add
xchg
outsb
dec
adc
mov
mov
movb
mov
addr16
dec
orb
mov
iret
inc
jmp
dec
add
jb
aad
xchg
jecxz
mov
pop
ret
xchg
fs
loope
or
jle
je
xchg
lods
or
lods
fcoms
mov
xor
test
dec
push
mov
inc
sub
mov
rorb
cmp
push
and
js
and
addr16
xor
lea
xchg
out
jge
test
daa
pop
mov
lods
jno
push
cwtl
cmpsl
mov
dec
xor
daa
insl
in
ret
add
nop
cmpsl
pushf
xlat
jno
pop
sbb
outsl
in
insl
test
sub
jno
mov
jae
gs
mov
gs
mov
and
cmp
and
insb
push
mov
test
stos
or
mov
mov
fdivrs
es
push
pop
int3
stos
dec
sbb
inc
push
adc
push
push
cmp
add
jne
or
lcall
ret
decl
fidivrl
mov
mov
pop
sbb
cmp
push
cmpsl
lock
sarb
dec
les
mov
outsb
jmp
xchg
mov
mov
in
mov
xchg
stc
outsb
sbb
dec
mov
insb
shll
nop
and
loope
jp
jbe
jne
std
sahf
scas
and
mov
iret
push
pop
ds
scas
mov
movsb
dec
cmpsl
pushw
ja
sbb
inc
mov
fs
hlt
xchg
and
add
mov
dec
inc
pushf
imul
cmp
and
add
and
pop
or
and
ret
insb
or
cmp
outsb
push
stos
test
enter
adc
and
jnp
sbb
jb
adc
mov
sub
popa
imul
jp
mov
je
xor
sub
jno
xchg
cmp
stos
lahf
test
into
sbb
xchg
enter
popa
les
gs
movsl
lods
fisubrl
adc
dec
lods
in
add
add
or
lcall
sub
jno
test
addr16
mov
inc
out
mov
inc
cmpsl
ljmp
in
pop
aaa
mov
mov
in
addl
cs
hlt
test
xchg
cmp
fistl
or
movsl
mov
mov
addr16
add
xor
pop
sub
sub
xor
xor
inc
cmc
push
jmp
imul
orl
mov
mov
xor
lods
mov
stos
scas
xor
scas
mov
lea
sarb
out
mov
mov
sub
addr16
pop
es
push
push
scas
add
ja
hlt
sarl
testl
pop
movsl
mov
fsubs
rclb
jno
or
mov
bound
stos
fisubrs
inc
ljmp
cmp
out
push
addr16
std
movsl
jmp
aas
pop
test
aas
cmc
cmp
addr16
dec
sub
movsl
popf
mov
jns
repz
xchg
shlb
or
fcoms
fs
or
or
dec
fstpt
fsubrl
jmp
jbe
mov
test
adc
dec
xchg
mov
pop
stos
xlat
fucomp
mov
dec
imul
sbb
sbb
scas
pop
or
mov
inc
push
das
or
adc
xor
xor
lods
jmp
fimull
aad
or
xor
das
scas
dec
cmp
cmc
xlat
std
push
dec
and
icebp
cmpsl
leave
mov
xor
push
outsb
stos
int3
aaa
xchg
dec
push
sub
pop
test
mov
fldcw
inc
dec
jnp
jmp
or
std
bound
and
jle
bound
push
pop
rclb
call
je
stos
mov
loopne
rcrl
cmp
xor
addr16
xchg
sbb
stos
subb
add
and
shr
insb
call
aam
push
xchg
cs
insl
je
scas
mov
call
hlt
mov
or
cmp
int
lods
je
add
scas
push
cmp
or
mov
pop
arpl
movsl
push
xor
mov
lahf
scas
xor
ljmp
adcl
push
insb
mov
fsubrl
cmp
xchg
mov
loopne
cmpsl
clc
xor
cli
cmp
dec
or
int
and
add
inc
and
and
in
pushf
int3
stos
pop
aas
mov
dec
xchg
ficomps
adc
add
xchg
int3
add
jge
je
sub
hlt
loop
mov
stc
dec
popf
lods
push
lahf
sub
dec
je
in
ljmp
mov
call
cmp
idiv
and
sub
mov
ret
mov
add
cmp
sbb
popa
shl
jge
or
ljmp
sub
and
or
xchg
sub
pop
sahf
leave
mov
aad
subl
pop
xor
or
iret
int3
jg
mov
and
cmp
in
movsl
mov
and
add
sahf
cmp
sub
push
cli
mov
sbb
fcoml
arpl
out
out
jne
mov
xor
jns
sbb
test
jge
movsl
mov
int
in
cmpsl
cmp
push
gs
pop
scas
xor
enter
adc
adc
in
cmp
scas
or
rol
inc
ss
or
in
jb
jp
arpl
add
fs
sbb
lahf
push
or
outsb
cmpsl
lods
or
cli
in
mov
mov
fistl
bsr
cmp
adc
imul
jge
in
fisubrs
cmp
inc
or
addr16
cltd
aad
out
dec
mov
sub
mov
lahf
lret
or
xchg
or
cmp
mov
jge
shl
inc
aas
in
call
xor
jl
popa
enter
shlb
insl
flds
mov
cltd
into
gs
daa
pop
pushf
push
mov
outsl
push
mov
fs
test
push
dec
xchg
aas
push
mov
push
in
dec
fwait
xchg
je
mov
imul
nop
inc
mov
push
leave
and
aaa
mov
xor
xchg
in
sahf
js
jmp
adc
or
cmp
push
add
push
in
fstpt
test
dec
addl
iret
mov
lods
jne
push
imul
sub
stos
clc
cld
dec
dec
inc
ja
mov
jb
or
fwait
js
push
mov
adc
dec
js
imul
sbb
outsb
cmp
popf
push
mulb
lods
cmp
imul
push
xchg
lods
jns
daa
lahf
jne
or
fistl
lock
mov
sahf
subb
xchg
subl
jae
fisubs
sub
nop
dec
mov
mov
push
add
or
imul
or
in
out
jno
xorb
out
sub
jg
inc
sub
scas
outsb
sub
pushf
stos
lahf
ja
aad
or
aas
sub
lea
ja
adc
and
popf
sbb
cmp
xchg
mov
dec
outsl
stc
clc
cs
fistpl
arpl
jl
sub
sbb
daa
int3
in
push
es
cmp
lods
sub
xchg
andb
jnp
insb
mov
sub
cmp
add
and
das
gs
test
cmpsl
and
popf
mov
cmpsl
and
mov
mov
lods
call
ds
jg
pop
or
jmp
iret
cwtl
cltd
sub
and
out
xchg
jp
push
mov
jne
movsl
push
nop
xchg
inc
cmp
into
pop
xor
cmp
cs
ret
xor
cmpsl
dec
lods
test
hlt
adc
jp
and
jne
inc
stos
addr16
jbe
inc
loop
stc
lock
icebp
inc
mov
push
into
jecxz
xor
repnz
mov
in
das
or
mov
daa
dec
outsb
pop
out
in
jp
stc
out
hlt
xchg
mov
lahf
dec
lods
daa
mov
cmp
jle
mov
mov
out
sbb
xchg
test
pop
push
lcall
insb
ds
cmp
jno
fwait
push
xchg
out
push
push
daa
in
push
stc
lods
das
sub
mov
add
test
movsb
scas
clc
fidivrl
divb
repz
and
scas
inc
sbb
out
cmpsl
outsb
cmp
out
sub
or
jge
inc
adc
push
mov
cs
inc
jbe
add
push
mov
ret
lods
aad
in
mov
je
das
and
aam
test
in
add
in
gs
arpl
xchg
and
dec
or
mov
mov
and
and
test
les
in
push
push
sbb
inc
or
or
xorb
aaa
fldl
imul
push
mov
jno
sbb
sub
push
faddl
add
cltd
dec
or
dec
call
repz
and
call
add
sub
shll
push
stos
push
roll
pop
sub
inc
dec
and
push
push
adc
push
inc
ja
test
inc
addr16
test
outsb
lds
cmpsl
nop
scas
sbb
and
sbb
mov
jg
sub
dec
push
popa
addl
pop
mov
sub
aaa
ljmp
mov
mov
mov
inc
ficoms
sub
repz
push
idivb
lods
shrl
inc
test
push
movaps
xor
xchg
push
std
lahf
and
xor
adc
movsl
and
imul
scas
mov
test
mov
movl
sub
xchg
imul
neg
imul
inc
mov
mov
ds
jno
jmp
or
sub
in
jns
popa
mov
jbe
adc
jo
shrl
enter
jg
testb
popa
lods
sbb
push
xchg
mov
rolb
ljmp
aad
and
xor
or
clc
pop
push
mov
je
in
jge
jg
cmc
dec
movsl
pusha
add
jl
xor
xor
sub
push
cwtl
out
jo
sub
sub
cmp
mov
sti
sub
sbb
mov
lahf
mov
adc
cmp
roll
mov
and
movsl
addl
mov
dec
ds
sub
push
cmp
mov
lock
data16
sub
sbb
ds
push
ret
or
lods
dec
mov
outsb
mov
jg
xchg
sti
dec
not
data16
mov
xor
jl
addr16
pushf
mov
not
gs
or
xlat
outsl
sbb
rclb
cmpsl
adc
xor
dec
dec
add
insb
mov
or
cmp
push
movsl
lcall
push
int3
imul
xor
mov
inc
ficompl
enter
xchg
cmp
movsb
and
adc
mov
imul
test
mov
movsl
testl
out
int3
cmpsl
ja
ret
cmp
cmp
rcrl
sbb
int3
lds
xor
dec
mov
adc
int
cmp
mov
in
mov
inc
cmp
mov
int
lds
xchg
inc
lods
jb
int3
outsb
in
pushf
push
push
xor
lahf
adc
aam
push
xchg
inc
mov
fs
dec
into
leave
rcr
sahf
movsb
dec
lahf
nop
in
cltd
pop
xchg
movsb
data16
xor
movsl
xor
push
lret
cmpl
int
movsl
je
imul
roll
cmpl
in
test
adc
arpl
outsl
xchg
insl
inc
inc
sub
dec
mov
or
call
aas
cmc
es
stos
and
jno
jmp
mov
je
adc
jmp
pop
push
pushw
fldenv
jb
test
fwait
test
leave
push
and
pop
pop
inc
cli
daa
inc
in
addr16
popf
popa
push
mov
arpl
popf
mov
in
ffreep
jbe
xchg
outsb
xor
shlb
in
and
aaa
or
and
and
jecxz
insl
sub
cmpsb
push
adc
or
dec
inc
outsl
lahf
adc
enter
push
fs
cmp
xchg
sub
xor
popa
int
insb
mov
into
cmc
pusha
pop
int
outsb
imull
test
or
push
lahf
xchg
inc
sbb
pop
push
arpl
mov
mov
out
lds
push
and
adc
dec
pop
sbb
push
jge
outsb
push
xlat
xchg
jne
jne
mov
fdivl
mov
xlat
testl
jno
cmpsb
xchg
jmp
push
outsb
pusha
sub
jne
xchg
ljmp
cmp
and
jo
pop
out
outsb
push
mov
gs
xor
mov
mov
push
xchg
and
mov
cld
mov
imul
daa
jbe
dec
imul
jno
fidivrl
adc
sti
adc
testb
in
insl
and
mov
mov
sub
inc
outsb
pusha
adc
in
jmp
movsl
or
and
hlt
xchg
ds
push
mov
or
jle,pt
dec
inc
sub
mov
outsb
jno
loopne
inc
dec
pop
sbb
push
and
popa
aas
das
push
insl
cs
fisubl
imul
mov
popa
cmp
lods
aaa
insl
repz
sbb
ja
dec
sbb
inc
and
and
jecxz
push
lock
in
jecxz
pop
int
clc
sbb
jle
fnstsw
ficomps
cltd
xor
push
sbb
int3
sub
push
xchg
push
and
fsts
and
sbb
out
insl
mov
test
jge
sub
pop
add
push
adc
sub
and
xor
imul
test
mov
subl
adc
jge
mov
dec
dec
test
imul
gs
add
in
mov
sbb
subl
pop
dec
in
and
sub
push
add
lcall
and
mov
pop
xchg
push
test
dec
sbb
xor
pushf
insl
dec
push
pop
sbb
dec
movsb
jle
popl
mov
cmpsl
arpl
insl
or
notl
dec
cmovns
adc
arpl
movsl
cmpsl
movsl
mov
aas
mov
push
push
imul
fwait
jle
leave
int3
cld
inc
jae
inc
pop
push
jmp
loope
sub
mov
sbb
hlt
std
xchg
andb
cmp
cmp
out
push
imul
enter
push
push
cmp
mov
adc
enter
sub
insb
cmp
lcall
push
xchg
daa
cmp
jae
dec
jecxz
mov
int3
std
and
mov
mov
and
insl
insb
cmp
mov
popf
inc
enter
cmpsb
mov
imul
or
aas
cmpsl
adc
mov
push
adc
and
jecxz
scas
imul
dec
mov
adc
cmp
ds
loope
mov
sub
ss
aaa
fdivs
jmp
les
or
lahf
push
pop
int
mov
push
add
rcll
insl
cmp
add
test
mov
mov
sub
inc
jp
idivl
mov
xor
adc
push
daa
mov
stc
inc
and
dec
int
inc
stos
or
jmp
pop
mov
fmul
jmp
rorl
dec
sbb
push
lret
cmpl
push
fisubrl
push
cmp
lock
jbe
cmp
popf
xchg
push
sti
leave
xor
cmp
shrl
xchg
jge
test
sub
mov
idivl
pop
pop
pop
mov
in
mov
sbb
xor
ljmp
cmp
cwtl
dec
fs
es
in
lods
jle
sbb
in
sti
movsb
jecxz
les
and
aas
gs
dec
mov
in
cmpsl
js
addr16
loope
imul
pusha
out
and
add
std
push
outsl
xor
xchg
lcall
add
mov
in
popf
test
and
lods
icebp
adc
pop
inc
cmp
test
data16
bound
fwait
pop
in
add
dec
cmpsb
xchg
adc
adc
popf
ret
add
lods
shl
or
push
mov
mov
gs
jmp
inc
bound
sbb
mov
xor
movsl
mov
aad
cmpsl
adc
xor
xlat
or
dec
lcall
sbb
ja
add
dec
push
aam
xchg
iret
pop
subl
sbb
loopne
add
or
xor
add
in
dec
sti
sbb
outsl
or
mov
gs
jb
adc
aas
xchg
sbb
xor
jno
mov
movsb
leave
lds
lea
iret
arpl
in
mov
gs
jne
inc
loopne
stc
hlt
pop
cmp
mov
or
sbb
dec
jns
fs
enter
js
sarb
in
cmp
xchg
test
es
hlt
int3
pop
mov
push
push
xlat
popf
lahf
stc
fs
test
mov
cmp
or
mov
jae
jb
jb
fwait
xor
pushf
out
pusha
data16
mov
out
push
jmp
mov
popa
sbbl
push
push
xchg
and
cmc
mov
bound
mov
cs
push
sbb
jnp
push
in
jmp
cmp
fwait
cmp
dec
cmc
rorl
mov
mov
ret
bswap
mov
push
mov
ljmp
pop
cmc
hlt
add
enter
out
mov
push
nop
adc
pop
add
and
scas
mov
lret
inc
int3
lwpval
xor
xchg
push
movsl
popa
xlat
sub
mov
aas
sub
xor
push
mov
mov
xchg
dec
push
sbb
gs
test
js
test
arpl
or
mov
popa
dec
pop
out
add
int
add
xor
stos
add
and
insb
cmp
sub
and
inc
xorb
xchg
jns
data16
jae
je
test
mov
inc
test
aam
cmp
idivl
xchg
test
add
jnp
shlb
ss
out
addr16
or
adc
and
push
negl
es
lea
test
das
and
insb
in
adc
push
cmc
jp
scas
insl
jmp
insl
shrl
mull
jae
stc
or
outsb
jmp
and
test
jecxz
cmp
repz
movsb
mov
int3
mov
mov
lahf
fwait
out
sub
scas
movsl
enter
ljmp
or
jb
decb
lds
add
ss
ljmp
fs
test
inc
sub
test
sbb
dec
notl
imul
icebp
iret
insl
sarb
push
ret
push
pop
stc
adc
out
sub
sub
aaa
sub
movsl
fbstp
add
out
push
push
movsl
test
xor
fisttps
testb
vpmaddwd
popf
movsb
adc
stos
jg
hlt
xor
fsubrl
add
inc
add
mov
or
out
mov
pushf
fs
in
testb
mov
pushf
ljmp
shrl
pushf
and
jge
pusha
dec
pop
mov
hlt
xchg
push
and
and
jge
push
mov
cltd
icebp
hlt
jl
fstps
sbb
dec
imul
ds
mov
cmp
orl
inc
push
addr16
fbld
inc
or
insb
popl
xor
imul
out
int
int
fwait
mov
and
xchg
push
je
repnz
add
xor
fildl
pop
orb
sbb
test
cmpl
in
dec
push
scas
test
and
and
sbb
ret
dec
inc
cli
xchg
subb
movsl
jne
push
add
jg
dec
pop
xchg
test
imul
push
jne
mov
push
mov
cmp
imul
in
xchg
jg
fists
inc
shrb
cmp
mull
jl
jge
mov
insb
xchg
call
pushl
add
sub
icebp
add
dec
int3
sti
mov
adc
scas
inc
outsb
xor
sahf
pop
pop
hlt
mov
mov
iret
movsl
lods
adc
push
ljmp
idivl
shrb
xchg
cmovno
mov
adc
rcrl
xor
inc
repnz
jne
lods
inc
aam
jae
cmp
xchg
je
sub
xor
jp
push
pop
aaa
fsubl
into
or
pop
pushf
or
and
lods
repz
cmpsb
lahf
fiaddl
jmp
pop
or
push
mov
cmp
pop
push
mov
lods
push
or
in
cmpsl
ret
adc
fs
les
cmp
shlb
lods
inc
or
aaa
popa
dec
or
cmp
lods
and
pusha
and
sbb
test
and
jg
out
xor
or
mov
sub
dec
push
adc
cmp
scas
scas
jne
inc
inc
dec
pop
into
xchg
mov
clc
xchg
in
inc
push
insl
test
xor
inc
scas
sub
push
jmp
push
fs
aaa
dec
jmp
mov
fisttps
jle
insl
and
fmul
sub
aas
hlt
sbb
sub
pop
sub
cld
sub
aaa
ds
and
int3
sbb
das
sub
pop
sub
pop
mov
cmp
inc
and
cmp
xchg
add
insb
and
adc
gs
dec
dec
mov
insl
cmp
insl
leave
outsl
and
xchg
jg
xchg
lahf
adc
jge
cmp
pop
jae
lods
lods
cld
mov
pop
daa
outsl
mov
dec
cmpsl
push
fldenv
push
ljmp
or
jb
dec
daa
adc
push
dec
daa
adc
imul
lods
add
dec
sub
pop
call
add
dec
jecxz
fcomip
or
lea
dec
fs
out
adc
mov
and
push
xor
out
mov
sub
outsl
mov
jle
pop
outsb
lcall
stos
push
inc
cmpsl
inc
aaa
inc
mov
pop
mov
in
enter
push
imul
cmp
mull
in
xlat
addr16
insl
jno,pt
pop
out
ds
lcall
fistl
push
stos
out
sub
xchg
outsl
jo
dec
ror
sbb
cs
outsb
fcmovb
movsl
sub
jnp
stc
push
test
xchg
cmpsl
mov
jne
in
cmp
idiv
sti
pop
out
int3
sahf
adc
xor
cmp
jnp
icebp
mov
fwait
xor
mov
xchg
mov
push
jne
push
ficoms
xchg
scas
dec
mov
bound
add
push
mov
cmp
insl
lea
outsb
xchg
add
xchg
addr16
daa
xor
adc
xchg
and
insl
mov
loope
in
or
subb
fildl
bound
jl
cmp
xchg
adc
js
pushl
and
or
adc
xchg
cmpsb
nop
cmp
sub
test
loop
aaa
pop
in
mov
cmpb
shll
jmp
mov
lret
test
fstpl
push
xor
inc
jp
lahf
sub
insb
push
in
mov
pop
ljmp
pop
mov
dec
cld
call
push
push
cmp
outsb
scas
iret
cltd
bound
dec
push
add
cmp
inc
loopne
push
imul
push
sbbb
fxch
fidivl
out
pop
in
cmp
push
jno
mov
loop
xchg
arpl
sub
dec
mov
and
daa
out
sahf
lar
push
push
xchg
and
je
mov
mov
adc
outsl
lcall
scas
adc
cmp
int
in
lods
pusha
decl
stos
andb
jne
aaa
lods
movsb
adc
sub
repnz
add
sbb
andl
cmpsl
push
adc
out
xor
jbe
movsl
popa
sbb
xlat
cmpsb
and
jmp
ficoms
aas
ficomps
mov
fldcw
dec
out
jge
jno
cli
lock
mov
mov
or
cmpsl
into
gs
and
push
mov
mov
mov
adc
lahf
push
lods
cmpsl
or
in
push
push
and
sbbl
rorb
push
sub
xchg
cmp
adc
jg
es
dec
sub
sub
addr16
fnstcw
testb
pop
gs
fwait
adc
inc
cmpsl
cwtl
adc
insl
pop
test
push
sub
push
incl
in
sarl
xchg
fcmovnbe
jmp
pop
sub
xlat
daa
push
dec
int3
mov
jno
jl
xchg
cs
cmp
inc
mov
jae
jecxz
push
test
mov
mov
mov
dec
imul
and
push
push
sbb
mov
jl
inc
sahf
insb
popa
sbb
mov
add
cmpsl
in
aad
adc
lcall
xlat
lea
mov
lea
sub
jb
ret
aam
dec
push
insl
outsl
scas
push
mov
inc
push
out
adc
out
mov
imull
lods
add
push
fadds
add
cmc
cmp
and
xor
data16
pop
sahf
ret
call
sahf
je
mov
popf
or
mulb
stos
xor
in
push
mov
jmp
sbb
iret
cs
mov
mov
movsl
xor
push
mov
xchg
mov
push
aaa
mov
dec
fs
xor
jmp
or
add
push
fisttpll
jge
fbld
mov
cmc
aaa
into
jne
aam
adc
pushl
fistpl
je
mov
aam
xor
xor
mov
int3
jl
and
stos
js
mov
pop
mov
idivl
rcrb
out
addb
and
pop
stc
pop
jbe
ret
decl
popa
jno
loopne
jge
outsl
sub
insl
fcoml
stos
mov
mov
mov
into
add
xchg
jmp
popf
rorb
xchg
lahf
cmpsl
je
jle
lahf
push
sbb
test
gs
cs
test
push
test
jecxz
dec
xchg
test
addr16
loopne
mov
dec
cmp
sub
push
sub
insl
sti
jne
dec
push
lods
mov
arpl
leave
repz
test
test
insb
clc
dec
testl
jnp
out
cs
das
jno
and
push
mov
pop
and
mov
mov
add
ljmp
lods
jne
aas
push
aas
sbb
popf
dec
sbb
sbb
sub
call
xor
inc
test
insb
imul
scas
shll
scas
aad
mov
stc
aas
push
inc
or
lods
addr16
jb
cmc
xchg
arpl
ss
jp
or
xor
filds
out
pusha
add
pop
xor
out
cs
aaa
push
dec
gs
push
and
pop
sub
xor
xor
insl
cli
mov
popf
in
daa
aaa
pop
push
xor
mov
pop
mov
lods
sbb
cmp
sub
cli
pop
cli
or
xor
frstor
movsl
push
sub
inc
xlat
insl
add
sbb
xchg
int
sub
notb
aas
sbb
repnz
mov
dec
mov
inc
in
sarl
int
int
dec
sbb
dec
bound
std
sbbl
fwait
mov
loop
inc
addr16
addr16
jg
out
fmulp
xchg
push
popa
inc
mov
mov
stos
aaa
cli
push
je
sbb
rclb
fisubs
and
out
push
pop
lret
sbbb
lock
shlb
shll
in
xchg
dec
loope
cmpsl
outsl
lahf
cmp
push
cli
scas
cmp
lds
bound
outsb
decl
imul
int
in
aam
jl
movsl
pop
shr
mov
int
or
sbb
or
cli
in
fidivs
lods
in
loop
adc
add
mov
lods
ljmp
loop
movsl
pop
fstps
lods
fdivs
scas
xor
or
addr16
sub
iret
gs
shrl
into
call
lods
dec
jne
popa
movsl
dec
add
push
lahf
pushf
lods
arpl
lahf
cmp
inc
hlt
std
lcall
fisttpl
int3
test
mov
mov
jp
out
cmpsl
stos
dec
sbb
lea
mov
jnp
push
add
stos
xlat
or
clc
inc
ja
aaa
push
je
or
jns
test
dec
jbe
aas
inc
xchg
pop
inc
in
lods
sahf
lea
cmpsl
adc
or
xchg
std
dec
mov
movsb
cmp
inc
pop
mov
js
jne
ret
mov
clc
inc
cld
aad
lods
ss
popa
dec
sbb
repnz
sub
stos
leave
jno
iret
mov
pop
inc
sub
dec
sub
adc
sub
push
jl
loope
adc
mov
pop
ret
lds
cltd
sub
sbb
cmc
movsb
mov
aas
jbe
pop
addr16
sub
add
or
fldcw
mov
jle
mov
or
lods
lds
mov
in
push
inc
inc
jmp
adc
leave
cs
or
and
aas
daa
add
test
out
cmp
add
xor
xchg
dec
mov
xor
in
dec
cmp
push
or
aam
mov
negl
adc
jns
inc
and
cwtl
xchg
add
pop
stc
mov
sub
lods
jp
jb
adc
pusha
ja
cmc
cmp
sbb
mov
mov
adc
mov
xchg
push
hlt
sbb
push
sub
push
cwtl
cmp
loopne
mov
dec
sbb
dec
lds
jl
adc
decl
add
xor
add
loop
mov
ss
dec
gs
in
sbb
add
fs
jp
fwait
mov
mov
js
clc
push
and
icebp
sbb
fdivl
incb
xor
sbb
pop
push
adc
or
insl
sbb
mov
fsubrs
mov
dec
jp
xchg
sbb
mov
in
lods
push
ds
aaa
fildll
cli
and
into
add
test
mov
lret
adc
dec
rorb
and
das
pop
add
sub
lods
sbb
mov
cmp
mov
fdivs
addr16
inc
xchg
jne
jae
add
cli
or
cs
je
test
push
lds
je
adcb
icebp
push
sub
into
lea
mov
inc
xchg
mov
popf
sub
cmpsl
adc
dec
test
mov
mov
add
jno
test
add
pop
jmp
inc
stos
ljmp
vmovmskps
xchg
leave
scas
jno
inc
cld
repz
cmp
inc
fsub
push
into
mov
mov
push
mov
and
add
insl
sub
mov
xor
in
mov
aaa
adc
aam
cmp
out
mov
mov
outsl
ja
pop
push
and
int
fdivrl
dec
insl
mov
and
roll
xlat
insb
test
gs
sbb
sbb
mov
adc
movl
aas
lods
adc
mov
lods
and
mov
js
xchg
fs
test
popa
mov
xchg
mov
mov
sbb
setno
cmp
cs
pop
mov
aam
popf
cmp
mov
sub
in
icebp
ljmp
push
jp
pop
int
sub
push
pop
imul
inc
mov
cmpsl
inc
rorb
leave
mov
push
js
pusha
xlat
mov
mov
test
in
jg
shl
int3
add
pop
fs
and
dec
push
arpl
or
push
jnp
cmp
or
cltd
dec
scas
lret
or
insl
dec
adc
ret
call
inc
dec
pop
xor
push
js
sbbb
pop
sbb
das
out
data16
scas
addr16
add
cltd
or
and
lcall
cmp
xor
sahf
dec
sbb
inc
mov
shrb
aad
mov
xchg
js
iret
dec
add
movb
push
das
adcl
lods
bound
sbb
push
out
gs
pop
push
je
imul
inc
cmpsl
out
mov
mov
aad
mov
es
cltd
lahf
or
jmp
or
aad
cmp
xlat
lods
xor
gs
imul
shlb
hlt
ja
or
mov
hlt
push
arpl
fwait
mov
dec
inc
hlt
dec
js
push
in
dec
negb
ret
rcrb
add
arpl
rorl
sbbb
mov
dec
xor
in
mov
add
in
insl
je
loopne
adc
mov
or
ret
jno
mov
mov
or
adc
and
daa
movsb
inc
jl
or
adc
scas
lods
or
and
mov
and
mov
in
rorl
xlat
std
fnsave
mov
and
push
cmp
cld
gs
aaa
out
test
mov
sarl
fucomp
and
jg
das
outsl
cmp
inc
inc
aaa
cmp
popf
sub
ss
dec
cli
xchg
nop
sub
sub
mov
mov
hlt
push
std
pop
mov
sub
imul
pop
mov
sar
ja
aam
outsb
mov
mov
aad
enter
or
sub
xchg
add
fidivl
incl
fists
and
mov
loope
cwtl
push
ja
lock
dec
mov
lods
push
in
call
bound
push
repz
push
dec
mov
jb
mov
mov
divb
sub
imul
bound
je
fs
ss
arpl
mov
pop
or
jmp
int
add
fisttps
pop
insl
nop
pop
xchg
add
mov
or
mov
adc
xchg
mov
pushf
xchg
insb
mov
push
dec
es
pmaddwd
xchg
sbb
jg
xchg
push
cmp
lret
aaa
or
lods
insl
xchg
dec
adc
inc
hlt
jge
mov
cmp
push
test
cltd
push
jno
add
fldl
movsl
sbb
pusha
push
fdivs
sub
aas
in
push
xor
sub
or
cmc
jb
sahf
add
xchg
ja
into
dec
jb
shrl
out
dec
lret
xchg
sbb
insb
mov
ljmp
popa
lods
adc
mov
test
mov
jl
aam
push
add
inc
adc
dec
lock
icebp
jmp
pop
popf
test
ficoml
cmc
cmp
push
sbb
in
push
jb
bound
pop
or
mov
mov
gs
mov
aas
jl
mov
arpl
adc
or
inc
shll
test
popa
mov
ja
test
pop
dec
scas
bound
mov
inc
jmp
sbb
sbb
inc
sbbl
inc
lea
cmpsl
shl
sub
bound
or
jnp
icebp
pop
jns
mov
insl
daa
xor
into
stos
inc
xor
adc
fimuls
sbb
in
push
int
in
xchg
lea
cmp
push
hlt
repnz
aad
and
pop
inc
nop
into
inc
and
and
push
inc
cmp
ret
das
jns
or
in
cmpsl
into
in
pop
xchg
and
pop
aas
insl
sub
sbb
in
scas
testl
jg
xchg
imul
scas
push
insb
add
loopne
ror
hlt
mov
mov
sbb
mov
push
insb
xchg
adc
std
add
add
cmp
sarb
cs
fdivrl
xchg
jno
inc
jge
stos
fldl
jmp
lods
mov
pop
push
mov
in
clc
lods
and
lcall
jle
outsb
lea
xor
dec
hlt
outsl
dec
push
out
mov
dec
enter
les
jno
cmpsb
mov
push
sub
mov
sub
add
stos
push
test
daa
outsb
popa
add
mov
jnp
imull
in
sub
stc
add
xchg
int3
push
xchg
in
jecxz
rorl
push
add
and
pop
push
xor
and
out
push
dec
daa
inc
xor
or
aas
gs
dec
xorl
dec
or
mov
mov
outsl
or
repnz
hlt
fwait
data16
aad
popf
ds
add
test
jbe
push
pushf
mov
pop
scas
int
lods
dec
imul
mov
mov
mov
dec
mov
mov
insl
inc
dec
jb
push
pop
adc
push
dec
mov
movsb
fldt
mov
insl
test
push
inc
pusha
lock
xor
xchg
jno
xor
sbb
lcall
aaa
xor
mov
xchg
inc
inc
cmpsl
mov
out
jecxz
hlt
lea
iret
inc
mov
xchg
sub
in
insb
jb
mov
out
mov
in
push
cmp
pop
lods
lods
int
insb
mov
ja
out
rorb
test
push
cmp
in
jbe
or
int3
mov
sbb
fdivs
and
cmpb
sbb
xchg
dec
mov
in
mov
lods
lock
lahf
jne
inc
push
adc
or
in
add
adc
pop
xchg
int
sub
roll
sbb
xor
or
push
cmp
dec
dec
daa
imul
aaa
bound
out
mov
lock
fisttpll
hlt
pop
shll
repnz
pop
mov
scas
or
cmp
and
cmp
cmove
push
cmp
add
xor
xor
and
add
shlb
test
xchg
daa
push
test
jae
scas
stos
iret
pop
cli
lods
pop
lea
addr16
pushf
mov
xor
adcl
mov
ljmp
xchg
imul
inc
or
shrl
jg
frstor
add
cmc
or
adc
popf
out
or
adc
leave
fldl
adc
add
adc
mov
rclb
add
hlt
lods
je
lret
jne
fiaddl
aam
mov
mov
xchg
aad
dec
add
cmp
mov
in
xchg
sahf
sbb
in
sbb
and
or
fdivl
or
or
insl
test
cmpsb
fs
rcll
lea
inc
std
jl
fs
cltd
jge
cmp
mov
ds
xor
xor
xor
pop
ljmp
mov
cmp
imul
cmp
or
push
test
insl
mov
cmp
and
test
xor
jp
push
daa
cmpsb
lods
lods
jae
mov
and
lods
xchg
sub
daa
ljmp
or
xchg
into
enter
add
aad
imul
insl
ss
fcompl
bound
lods
jl
arpl
mov
jb
push
cmp
or
ret
inc
dec
pop
or
pop
sahf
cmp
leave
and
pop
fcom
fsubs
fsub
imul
lods
arpl
stos
jge
insl
lea
or
test
push
mov
movsl
leave
insl
ljmp
insl
mov
pop
imull
inc
insl
sub
or
push
outsb
iret
das
sub
jnp
dec
sub
mov
or
test
popa
fsubs
gs
pop
lock
in
mov
cmp
xchg
or
or
or
inc
sub
xchg
xchg
adc
mov
popf
ss
in
andl
shlb
pop
movsl
cltd
mov
lret
in
lret
aaa
mov
bound
fsubr
cmp
bound
in
lods
inc
popa
int3
xor
lea
fcomp
jge
jge
and
bound
sub
add
outsb
adc
cmp
pop
pop
and
jne
ret
pop
inc
inc
call
xchg
shrl
fistpl
fisubrs
movsl
lock
dec
pop
adc
shl
jp
pop
mov
lahf
or
xchg
sub
push
int
cmp
dec
sbb
and
popf
gs
mov
adc
gs
out
in
filds
cmpsl
movsl
push
and
or
xchg
loop
dec
scas
xchg
sti
or
popa
push
stos
mov
or
test
mov
inc
push
outsl
pop
push
push
movsb
loopne
or
add
loop
pusha
shrl
mull
and
loop
cli
sub
jg
hlt
xchg
cmpsl
mov
cmp
pop
push
jno
sbb
lods
aaa
lods
and
jnp
sub
or
jbe
test
fcomip
lods
lods
push
mov
push
mov
pop
test
cmpsl
lock
pop
or
jbe
les
popa
sub
ret
cltd
insl
leave
jae
lods
or
pop
icebp
push
cmpsl
pop
lcall
insb
sbb
subl
adc
mov
or
cmp
push
push
and
movsl
inc
xchg
push
xchg
and
and
cmc
add
xchg
scas
je
cmp
mov
dec
push
mov
mov
into
dec
mov
cs
in
xlat
mov
xor
sub
xchg
fdivrp
arpl
out
cmpsl
or
mov
aas
and
adc
nop
inc
pop
and
imul
jge
xchg
cmpsl
fists
or
sub
inc
sahf
lahf
aaa
js
je
lods
out
push
ljmp
clc
mov
fnstenv
push
out
xchg
jne
gs
inc
inc
cmpsl
pop
or
mov
popf
in
pop
xor
xor
inc
stos
mov
lods
arpl
sbb
jne
adc
pop
testb
mov
or
ss
push
clc
pop
ror
pop
and
push
in
dec
mov
pusha
outsl
push
or
mov
movsb
addl
xchg
xor
hlt
mov
call
mov
cmpl
bound
push
xchg
sub
jnp
movsb
push
loopne,pn
mov
lods
insl
pop
xchg
pusha
lret
mov
fistpll
mov
insl
pop
and
inc
fmull
xchg
adc
outsl
sbb
les
imul
lods
cmp
and
shll
hlt
ljmp
jns
fmull
pusha
popf
out
fwait
test
dec
in
xchg
orb
stc
mov
ret
push
inc
mov
addr16
popf
inc
gs
aaa
pop
push
in
xchg
and
push
dec
inc
std
insl
lret
adc
sbb
add
inc
fidivrs
ljmp
mov
js
sbb
add
lret
cmp
data16
movsl
pop
push
cmp
or
test
or
sub
outsl
pop
push
js
sub
es
divb
push
mov
ret
mov
inc
fidivrs
lods
andb
or
xor
mov
cmp
and
or
sbb
mov
hlt
cltd
stos
mov
clc
mov
mov
cmp
mov
int
ja
fcomp
mov
pop
gs
or
es
xor
cmpsl
push
dec
ds
add
lahf
sub
lret
lea
insb
add
insl
iret
test
aaa
nop
mov
sub
lock
push
bound
push
mov
clc
mov
jmp
gs
sbb
cmpsl
xor
jo
popf
mov
push
push
jnp
test
bound
xor
lods
or
je
shl
jbe
movsb
ret
dec
in
sub
hlt
shll
adc
pop
xchg
scas
mov
or
pushf
push
orl
adc
shrl
fdivl
dec
ret
push
or
jns
sub
mov
jl
icebp
fistpl
add
fiadds
ja
sub
fwait
and
gs
adc
cmp
dec
cs
pop
sub
test
loopne
sbb
jg
add
xor
sbb
or
inc
xor
fsubrs
jb
enter
mov
rcrl
ljmp
lcall
pop
adc
inc
mov
pop
mov
and
add
lea
les
mov
inc
mov
std
adc
mov
sarb
ja
into
inc
pop
push
arpl
and
add
sub
in
ja
mov
add
pop
cmpsb
lea
leave
test
inc
test
inc
dec
in
ret
sub
repnz
mov
adc
xor
insl
out
cmpsb
js
scas
push
xor
cmp
xchg
rorb
lret
clc
push
inc
ljmp
cmpsl
or
out
repnz
movsb
sbb
push
fcomi
les
popa
xchg
inc
pop
insb
std
ja
ret
pop
xchg
incb
bound
pop
mov
repz
arpl
aas
movsb
rcpps
inc
jg
or
xchg
mov
pop
mov
fbld
subl
pop
jg
or
popw
sub
push
fstpt
mov
out
push
mov
push
mov
mov
in
hlt
mov
fidivl
inc
push
cmp
out
insl
int
xchg
in
into
xchg
test
add
scas
mov
loopne
dec
push
std
sbb
ss
pop
jb
mov
mov
mov
xchg
adc
jne
cmp
test
addr16
push
mov
push
xchg
insl
mov
out
mov
ds
mov
je
mov
insb
mov
xor
mov
ret
sarl
test
out
mov
pushf
xchg
inc
rorl
and
and
mov
add
mov
inc
pop
lods
fwait
cmpsb
jo
cwtl
cmpsb
dec
shrl
cmpsb
push
xor
out
out
addr16
cmpsb
mov
pop
cmpsb
jl
cld
xor
jge
subl
jbe
push
insl
cwtl
sbb
and
scas
xchg
and
push
jecxz
push
adc
and
cmp
int3
xor
push
out
push
push
fcoml
jae,pt
test
jecxz
add
cmp
cwtl
inc
rcll
and
icebp
arpl
and
and
push
ja
mov
add
fwait
and
push
cmc
dec
xchg
outsb
add
or
and
in
inc
adc
ja
pop
push
in
or
ljmp
adc
movsb
fstl
call
xchg
xchg
push
or
add
inc
ja
xchg
xor
repnz
lods
lock
or
push
jnp
into
jbe
inc
mov
dec
clc
aam
aad
sbb
push
pop
xlat
sub
add
and
int
aaa
mov
lds
stc
lret
lea
jl
sbb
push
lahf
dec
sub
insl
adc
or
cmp
in
adc
mov
lds
loope
nop
pop
pop
sub
adc
jl
dec
dec
int
sbb
mov
andl
mov
mov
dec
ja
add
lret
dec
mov
push
fdivr
data16
mov
cmpl
pop
xchg
jg
jbe
ds
ret
fbld
mov
pop
cmp
xchg
cmp
push
and
in
jle
xor
bound
addb
loopne
xchg
test
aam
cmpsl
jecxz
in
and
xor
mov
adc
pop
mov
lods
popa
cmc
mov
daa
or
fucomp
hlt
mov
mov
push
lods
pop
push
sahf
fsub
loopne
xchg
sub
dec
sub
in
arpl
aam
sahf
xchg
jg
cmc
sub
xchg
or
inc
mov
fwait
lods
std
xor
lahf
fwait
sbb
mov
movsl
jge
mov
scas
push
sbb
js
lea
sub
aad
hlt
stos
enter
movsl
lea
addb
mov
rcl
ljmp
push
out
test
outsb
lock
jno
or
dec
cmp
dec
xlat
repz
lahf
popa
stos
or
shlb
or
sbb
gs
out
mov
sub
mov
jge
xchg
test
insb
aas
std
dec
lahf
push
scas
aad
clc
or
lahf
add
cmp
pop
repz
jmp
arpl
popa
mov
lock
lahf
xorl
insb
adc
inc
popf
imul
movsl
mov
mov
mov
xchg
jg
push
sbb
outsb
mov
ljmp
mov
ss
imul
push
add
aas
sahf
das
clc
stos
pop
mov
mov
add
cltd
inc
or
xor
add
pop
adc
insl
orb
lret
je
vprotq
cld
push
orb
sbb
or
mov
inc
stos
mov
jg
mov
subl
out
add
sbb
outsl
jnp
or
push
in
mov
cmpl
mov
mov
mov
jl
mov
xor
and
insl
adc
aas
sub
dec
int3
mov
dec
imul
cmp
sarl
fistl
sbb
jl
xor
pop
pop
add
pop
stos
or
data16
fimull
imul
sarb
sti
mov
sub
mov
inc
lods
inc
fiaddl
aad
push
test
cmp
nop
out
test
mov
movb
shrb
dec
xlat
scas
mov
xchg
fwait
mov
xorb
pop
push
je
cmpsb
pushf
or
xchg
in
sbb
stc
jp
jge
adc
xlat
lahf
fistps
daa
xchg
int
dec
add
push
push
lds
mov
pop
iret
arpl
addr16
push
dec
pop
mov
add
test
mov
pop
ja
stc
mov
mov
ss
add
mov
pop
imul
movsb
idiv
cli
pop
pop
and
or
jae
pop
sbb
mov
push
call
xchg
jae
pop
and
xlat
and
ds
xchg
fsubs
test
inc
in
mov
lahf
add
pop
stos
cmp
enter
loop
mov
push
icebp
add
fisttps
insb
stc
dec
div
adc
ja
ret
xlat
lea
push
jbe
aas
dec
push
sub
outsb
dec
imull
or
nop
gs
or
scas
jo
cmp
mov
cmpsb
scas
sbbb
into
aas
xchg
mov
into
add
std
mov
aad
mov
clc
adc
xor
in
xchg
imull
push
daa
std
lods
scas
jmp
fsubrp
lods
mov
xchg
lea
mov
cmp
repz
jbe
dec
sbb
mov
xor
mov
jl
or
cmpsl
loopne
mov
aad
sbb
xor
mov
jns
call
inc
mov
pop
xchg
mov
ja
shrl
int3
mov
inc
int3
add
mov
mov
test
add
aad
int
or
inc
mov
xor
lahf
enter
inc
test
je
aaa
cltd
pop
xor
add
subl
sarl
pop
cmp
pop
sbb
mov
xchg
pop
pop
in
adc
lods
test
cs
fisttpl
or
imul
xchg
out
popa
outsb
in
into
lretw
dec
sub
adc
addr16
and
out
out
cld
mov
in
lods
dec
loop
jnp
jbe
cmp
ds
jmp
fildll
out
mov
lds
mov
mov
iret
test
and
pusha
cltd
cmpsl
subl
xchg
push
jl
test
inc
out
xchg
or
pop
popf
xor
cmp
pop
shrb
lods
shlb
sbb
adc
sbb
sbb
push
mov
clc
xlat
add
push
jl
jle
inc
or
or
icebp
in
popf
xor
inc
daa
push
xchg
adc
adc
jns
add
mov
insb
fiadds
lods
pop
push
pusha
fidivrs
mov
add
addr16
fidivrl
or
adc
pop
sbb
ds
fs
xchg
sbb
xor
xchg
in
aaa
inc
fldcw
mov
sahf
or
outsb
sar
and
outsb
dec
mov
ljmp
loope
xor
mov
loop
push
lea
mov
je
hlt
adc
push
mov
mov
dec
jge
in
sub
rcl
add
addr16
mov
ret
test
add
xchg
mov
jge
sbbb
lds
inc
mov
popf
and
repz
or
pop
lea
int
mov
mov
call
lds
cmp
mov
aaa
and
add
sub
arpl
lea
test
mov
jp
push
push
mov
dec
dec
scas
aaa
push
jnp
dec
sbb
or
sub
insl
shl
out
daa
mov
jge
popa
sarb
into
iret
imul
add
add
scas
fsubrl
shrb
or
push
andb
and
adc
dec
rclb
mov
pushf
insl
dec
push
xchg
stc
push
out
add
andb
lods
daa
stos
into
xchg
mov
sub
or
jl
aad
mov
movsl
push
or
inc
hlt
push
adc
push
push
mov
xlat
sbb
xlat
add
dec
xlat
dec
push
outsl
pop
clc
outsb
and
addr16
sub
lods
cwtl
sub
mov
mov
mov
push
fwait
pop
ret
mov
cli
movsl
inc
out
popf
aaa
lea
dec
sbb
jns
mov
in
popf
iret
jl
outsl
popf
add
jne
cmp
nop
aaa
mov
lds
lock
testl
test
imul
ret
sub
cmpsb
and
insl
mov
mov
sti
int3
leave
test
mull
mov
add
jne
cmp
aaa
mov
mov
popa
add
nop
pop
scas
push
adc
cmpsl
mov
dec
hlt
ss
js,pt
adc
aaa
repz
jmp
cmpsl
jg
lods
cwtl
icebp
push
cmp
clc
inc
xor
dec
insb
sub
add
mov
add
lods
push
ffreep
or
sbb
cmp
pop
push
outsl
in
mov
jbe
stos
loop
and
mov
sub
add
lods
aaa
jmp
lods
jge
xchg
test
or
enter
filds
mov
cmp
mov
jp
pop
fnsave
ljmp
sub
mov
fsubrl
loop
add
pushf
cld
fimuls
cld
dec
mov
mov
cmpsb
enter
mov
mov
je
in
jns
inc
mov
arpl
or
loope
fstl
cmp
push
mov
popa
mov
dec
mov
dec
ret
pop
cwtl
xor
fnstcw
call
sub
fcoms
adc
and
mov
aad
hlt
push
xchg
lahf
inc
push
call
add
cmp
adc
mov
inc
push
je
lock
fs
jmp
mov
jp
popf
aad
imul
push
cmp
fwait
fs
mov
xchg
or
outsl
or
cli
imul
mov
sbb
mov
xchg
mov
dec
mov
in
fs
bound
fisubl
out
sbb
cmpsl
mov
xchg
lock
es
ret
rclb
jnp
out
sub
ljmp
testl
push
testl
movsl
cmp
insb
cmp
pop
fldenv
clc
aam
jae
push
into
adc
add
popa
inc
gs
or
lea
push
call
shlb
push
sbb
ja
shrl
rcr
scas
cwtl
lret
aas
movsb
inc
cmp
inc
aam
pushf
push
sbb
gs
rcrb
pushf
loope
scas
cmp
cmp
mov
loope
sahf
mov
push
in
push
iret
lds
mov
pop
movsb
mov
or
pop
xchg
iret
adc
jge
push
inc
out
pop
xchg
cmpsl
cmp
push
ficoml
mov
sub
int
xor
je
cmp
outsl
or
cmpsb
imul
pop
pop
jg
cld
xor
lock
lret
lods
inc
pop
lahf
jle
scas
jo
mov
jns
andl
add
das
sbb
dec
lds
insl
je
push
xchg
insb
in
les
add
xor
std
ja
out
in
inc
mov
adc
pop
test
jno
push
lahf
jb
sub
pop
inc
xchg
fdivs
jno
push
insb
scas
or
repnz
lea
in
jle
push
clc
xor
adcl
pusha
or
jae
add
cmp
jne
iret
pop
repz
xchg
ficompl
jae
insl
inc
hlt
cwtl
popa
ds
icebp
pop
mov
inc
fldcw
and
scas
test
pop
ja
je
inc
jl
call
lds
enter
pop
add
mov
push
mov
pushf
xchg
ja
idivl
and
sub
cmp
or
cli
add
fdivrs
pop
mov
sarb
jb
iret
inc
cmp
movsb
subl
mov
insb
xchg
pop
inc
inc
lods
insb
xor
mov
push
jbe
xor
xor
pop
xor
or
in
scas
mov
inc
mov
pop
jne
mov
sub
cmp
clc
das
fwait
jo
fcmovnb
pop
cmp
int3
lds
mov
push
pop
cmpsl
int
popf
sbb
pop
popa
xor
cmp
sub
or
sarl
sub
and
imul
xchg
and
push
xorb
xor
out
sahf
stos
xor
cmpsb
sbb
mov
sbb
adc
pop
mov
jns
scas
mov
jnp
jne
cmpsl
mov
inc
int3
xchg
out
push
mov
add
out
mov
sub
iret
xor
mov
outsb
cmpsl
out
cltd
test
xlat
add
gs
or
mov
jne
pop
or
out
mov
cmp
dec
test
dec
ljmp
jl
insl
and
fidivs
xchg
adc
lcall
or
shlb
jle
pop
arpl
fistpl
push
jle
xchg
jecxz
ret
cmp
cmpsl
iret
sbb
lods
xor
or
jns
test
lahf
lret
popf
popa
xchg
imul
stc
xchg
int
dec
in
inc
mov
mov
mov
xchg
mov
fwait
insb
unpckhps
jp
hlt
iret
pop
mov
jno
repnz
dec
cmp
fiaddl
xchg
pop
mov
data16
mov
decl
insl
mov
ljmp
adc
cmpsl
aaa
mov
jmp
xor
aam
inc
and
xlat
sub
daa
and
xchg
dec
outsl
fsubs
xlat
loop
xchg
jbe
jno
sub
jns
test
xchg
test
mov
mov
pop
notb
push
and
cmpsl
imul
jl
xchg
jnp
push
icebp
pop
mov
xchg
outsl
mov
mov
data16
mov
divl
test
pop
fnstcw
bound
ret
and
jp
mov
je
stos
xchg
xor
insl
sbb
lea
cmp
shlb
add
aaa
into
cmp
push
in
scas
adc
xlat
mov
xchg
jl
mov
mov
sub
test
dec
cmc
adc
in
out
iret
sbb
pop
lods
ja
dec
mov
loope
je
mov
adc
ja
pop
insb
and
test
popa
fstps
and
adc
or
data16
icebp
and
sub
lods
bound
inc
dec
xor
xchg
out
sbb
xor
push
dec
xchg
jmp
cmp
in
aaa
mov
mov
add
cmp
test
xchg
xchg
in
pop
pop
dec
das
imul
sub
adc
pop
push
das
pop
inc
gs
jnp
lea
push
sahf
enter
cmp
mov
sbb
in
mov
stos
mov
sti
stos
sbb
fsubl
xor
pop
or
jnp
lahf
sub
adc
and
jle
filds
out
jns
jne
mov
push
jb
out
pop
mov
cmp
or
divb
sub
fstl
dec
xor
pusha
dec
xlat
mov
xor
and
pop
ss
iret
in
call
xchg
sbb
imul
cld
jp
popa
mov
call
dec
jecxz
pop
xor
push
jecxz
iret
dec
loope
hlt
add
enter
sbb
in
aas
dec
popf
push
sbb
cmpsl
cli
inc
mov
int
call
sub
hlt
xchg
mov
sub
in
cmp
enter
xchg
idivb
xchg
and
mov
add
dec
or
xor
divl
jle
mov
pop
xchg
in
pusha
iret
add
fldt
and
add
xchg
or
scas
jle
fstps
jle
ds
mov
dec
xor
and
ret
add
inc
cmpsl
bound
and
imul
mov
lret
sub
dec
xchg
cmc
mov
out
mov
lret
iret
xchg
dec
bound
and
jge
mov
outsl
es
add
inc
movsb
aas
sti
mov
in
push
mov
sbb
adc
fdiv
jae
iret
fbld
das
fsubrl
mov
mov
xchg
mov
push
sbb
and
filds
adcb
div
push
mov
je
push
andb
xchg
lods
insb
xor
fwait
lret
shrl
cmp
dec
mov
add
xor
aaa
or
mov
ret
or
xor
test
test
xor
test
inc
push
jmp
xlat
inc
mov
cmp
loopne
xchg
push
lods
cld
mov
test
shll
in
cmpsl
imul
sarb
test
test
aas
gs
es
mov
sub
jmp
mov
xchg
lret
cmp
or
dec
mov
and
and
adc
jb
lods
push
loopne
lea
inc
hlt
insb
lret
dec
lods
insl
imul
mov
fs
and
ja
adc
mov
jb
lds
cld
sub
xchg
es
sub
sar
or
ja
insw
and
mov
xchg
iret
push
cmp
dec
jne
jecxz
ja
cmpsb
addr16
testl
inc
ljmp
cmp
xchg
cmc
push
in
and
dec
repnz
lret
mov
pop
daa
loop
aad
mov
mov
mov
jno
mov
push
call
in
mov
jne
add
dec
js
fmull
mov
lds
cmp
ljmp
xchg
cli
push
fsubs
sar
sub
inc
in
mov
mov
and
sahf
popf
push
test
aaa
cld
daa
mov
and
mov
mov
sahf
cmp
sbb
nop
sbb
push
xor
cli
rcll
push
push
xchg
inc
arpl
jle
lahf
rclb
not
lea
pusha
push
xchg
es
cmpsl
lahf
scas
aaa
pop
lods
popf
mov
ficompl
das
sub
popf
adc
xchg
std
adc
cmp
mov
jg
sbb
cmp
imul
jl
sub
push
cmpsl
cmp
daa
insl
or
jne
pop
jnp
cmp
sub
xchg
lahf
mov
xchg
lods
xor
adc
sahf
fwait
mov
lahf
sub
nop
mov
or
xchg
jbe
lock
sarl
cmp
xlat
cwtd
sub
jge
lcall
push
and
test
xchg
dec
mov
aaa
cmp
or
and
or
out
sbb
aad
mov
out
cmpsl
add
in
aad
ljmp
push
pop
mov
iret
xchg
sbb
xor
lock
xchg
push
mov
dec
push
rcrl
push
popa
xchg
in
out
mov
pop
lods
fwait
daa
inc
add
out
mov
arpl
mov
hlt
sti
and
jb
dec
and
lahf
popa
ja
mov
sbb
or
sub
cmp
loop
jnp
xchg
add
pop
cmp
popa
fs
outsb
pop
or
pop
push
popf
jmp
adc
ficoms
cmpsl
insl
movb
lret
and
out
dec
push
mov
and
leave
stos
rol
lods
cwtl
add
hlt
mov
mov
ss
movsb
bound
jbe
mov
fsubrs
adc
pop
and
fs
xchg
sbb
dec
nop
mov
pop
xor
or
xlat
les
pop
xor
movsb
xchg
dec
xchg
xchg
scas
insl
and
daa
inc
cmp
cmp
fwait
repnz
outsb
add
into
insb
loopne
in
or
cli
aam
mov
cltd
or
or
frstor
test
loope
shlb
lods
xchg
mov
jo
test
cmp
out
and
fs
cmp
xor
dec
mov
sub
fistpl
xchg
sub
test
mov
mov
and
es
mov
xor
aad
inc
jmp
out
xchg
addr16
push
add
mov
popa
fcom
call
xchg
sti
clc
aad
lods
add
xor
add
scas
pop
ret
imul
clc
inc
andl
popf
xchg
xor
and
sbb
repnz
and
ds
test
js
daa
mov
pop
std
out
xchg
out
and
dec
and
mov
add
clc
aaa
sub
insl
mov
sub
xor
sub
mov
jp
ja
repnz
lods
lret
jle
add
pop
addr16
mov
and
movb
repz
fbld
inc
scas
jae
out
adc
and
pop
sahf
cli
cwtl
sub
cmp
xlat
dec
popa
shll
push
and
push
outsl
pop
mov
mov
jne
arpl
int3
sub
cs
jge
pop
aam
dec
sub
std
mov
jns
add
add
unpckhps
call
stos
or
inc
pop
mov
arpl
pop
mov
testl
cmp
jge
ret
mov
or
inc
rorb
mov
push
xor
push
add
inc
cmp
imul
sub
fdivrl
outsb
adc
fwait
out
movsl
sub
in
movsb
orb
stos
inc
hlt
arpl
shrl
xchg
or
adc
lods
out
mov
lods
mov
or
dec
push
sub
outsb
shl
cmp
lret
xchg
mov
sub
call
outsl
arpl
aaa
mov
or
push
mov
and
cmp
push
sbb
mov
and
or
jle
cmc
and
and
cmp
std
outsb
das
out
insb
and
mov
outsb
ret
popa
mov
ja
and
cmp
xchg
imul
and
outsb
jge
sub
xchg
add
mov
add
push
cld
or
and
pcmpeqw
fcompl
and
stos
dec
cmpsb
dec
outsl
lmsw
sub
sub
dec
mov
push
pop
mov
xchg
inc
cmp
lcall
adc
stos
mov
aad
imul
scas
dec
lods
out
jne
or
dec
or
out
out
into
xor
sbb
jno
jmp
call
leave
in
pop
hlt
lahf
jmp
gs
cmp
insl
arpl
dec
aaa
popa
dec
leave
sbb
sub
stos
das
xlat
jno
lea
addr16
pop
or
mov
dec
pop
mov
sbb
or
jge
push
or
push
xor
sarb
push
jg
inc
mov
fwait
out
aam
cmpsl
sub
fisttpl
or
outsb
mov
out
leave
pcmpeqd
leave
pushf
sub
fbstp
ss
daa
sub
les
cltd
mov
rorb
mov
addr16
cmc
pop
lahf
sti
dec
aaa
out
and
add
or
int3
lahf
fwait
dec
aaa
aaa
mov
mov
imul
test
cmpsl
jg
jg
int
sahf
add
lods
fcomip
dec
test
popf
imul
sbb
test
fidivrl
mov
les
fsubrl
push
xchg
dec
adc
jmp
push
andb
aas
or
push
pop
shlb
pop
mov
mov
mov
jg
jmp
push
and
and
xchg
pop
or
and
in
push
dec
fisttps
cmpsb
cmp
or
aad
sub
daa
aaa
stos
enter
mov
fisubrl
imul
mov
lahf
insl
fs
sub
cmpsb
imul
ljmp
hlt
adc
aam
lret
mov
divb
outsb
pop
sbb
outsl
jge
sub
adc
push
xor
xchg
scas
lret
das
shrd
inc
mov
xor
aas
push
mov
cmp
dec
sub
fwait
pop
sbb
lds
jg
int
aaa
lods
xor
dec
incl
xchg
push
lea
test
xchg
add
int
mov
push
faddp
stos
jge
or
sti
outsl
sbb
jae
mov
and
mov
lea
mov
decl
mov
fs
dec
jbe
jb,pn
mov
xchg
pop
cmp
int3
pop
cmp
inc
mov
jae
insb
loopne
xchg
pushf
adc
xchg
outsl
mov
popf
xchg
mov
add
sti
icebp
inc
dec
jo
aad
shrb
mov
mov
mov
push
mov
test
lods
xor
sub
push
jmp
iret
push
movsl
imul
pop
pop
cmpsl
scas
or
dec
and
decl
mov
inc
and
lods
out
jmp
mov
les
or
adc
push
lret
popa
jns
or
fisubrs
mov
test
cltd
fistps
das
add
jb
cmp
xchg
pop
cmc
inc
into
in
sub
pop
leave
xor
lods
cltd
mov
imul
pop
push
cmp
movsl
mov
mov
pop
xorl
xor
movsl
xchg
or
in
lcall
in
jmp
das
cwtl
arpl
or
xlat
push
mov
mov
jecxz
mov
xor
sbb
sub
or
and
les
mov
out
in
dec
jmp
pop
pop
int
push
mov
xchg
and
mov
mov
loop
aas
xlat
jns
add
imul
xchg
jo
outsb
xchg
es
pop
in
xchg
mov
imul
lods
inc
and
fcom
cld
cwtl
in
lahf
sub
test
leave
mov
or
pop
xchg
inc
jno
mov
push
gs
mov
fwait
pop
adc
jnp
nop
lret
ljmp
stos
fdivl
fsubl
pop
and
stos
mov
pop
adc
loop
xchg
das
daa
xchg
or
xor
cmp
cmp
aaa
sbb
mov
or
aam
dec
lds
xor
push
test
in
cmpl
jmp
add
aam
repnz
and
fsub
in
insl
lea
jns
mov
pop
popa
in
pop
and
dec
stos
aad
loop
pop
mov
scas
sahf
pop
jmp
jb
mov
adc
inc
and
xchg
loopne
lock
adc
mov
insl
int3
add
mov
cmp
movsl
inc
jge
xor
movl
outsb
enter
mov
lahf
scas
aaa
insl
and
lods
into
cmp
or
dec
imul
lods
and
insb
pop
or
lds
pushf
call
sbb
lods
stos
arpl
inc
insb
jne
lods
xor
pop
ret
insb
stos
scas
mov
jl
dec
aaa
or
aaa
mov
mov
insb
and
cltd
jmp
sbb
pop
push
mov
pop
int
jecxz
mov
jecxz
xor
jne
and
inc
and
insl
imul
fisttps
add
clc
xor
mov
cmp
test
cmp
mov
cmp
push
pop
xchg
pop
loope
mov
mov
cmp
push
fwait
sbb
cwtl
lds
pop
xor
jno
int3
add
js
dec
outsb
push
sbb
jmp
push
es
xchg
pop
inc
mov
ret
mov
mov
cmp
cld
mov
cmpsl
and
stos
inc
jb
jae
mov
sbb
sub
add
or
add
cld
out
sub
shrb
xor
movsl
add
shll
int
aaa
dec
xor
movsl
sbb
imul
mov
in
dec
test
daa
inc
xor
push
dec
bound
inc
mov
mov
push
mov
jnp
cmpsl
scas
push
mov
pushf
pandn
jno
add
scas
add
aaa
cmpsb
cmp
jae
mov
lods
jns
xlat
icebp
les
lahf
ret
std
insl
jl
movsl
mov
cmp
test
pop
dec
mov
mov
xor
and
adc
xchg
outsb
mov
lahf
add
cmp
test
or
cmp
pushf
aaa
dec
and
lcall
and
and
insb
add
mov
adc
sbb
fildll
movsl
je
cmpsl
arpl
mov
lahf
push
fwait
mov
or
jle
xchg
cmpsb
clc
dec
loopne
cmc
clc
enter
out
jp
mov
sub
aaa
ljmp
movsl
loopne
clc
loop
and
lea
cmp
movsl
cli
gs
cmp
mov
bound
pop
and
cmp
or
dec
mov
push
mov
mov
int
mov
mov
cmpb
insl
sti
popa
cmp
lcall
insb
int
lret
lods
insb
test
lods
fisubrl
in
in
xchg
insl
addr16
lods
pop
imul
mov
rorb
mov
push
or
and
out
scas
sbb
lea
xchg
or
lods
icebp
imul
movsl
mov
or
aas
ljmp
ss
outsl
fs
mov
cwtl
and
ds
aam
insb
dec
lea
fidivrl
div
les
jbe
lods
xchg
push
or
clc
mov
cmpsl
pop
bound
sbbl
sbb
inc
and
push
popf
test
cli
push
mov
or
dec
mov
std
xchg
xchg
scas
out
mov
fucomi
mov
sub
mov
sub
ret
sub
or
fcmove
push
or
test
movsl
xchg
or
dec
pop
xchg
and
xor
insl
fnstsw
jns
cmc
mov
mov
cmp
sub
xor
dec
mov
push
out
mov
xchg
pusha
inc
das
pop
cmpsb
dec
push
xor
lods
adc
cmp
bound
adc
sti
mov
xor
xchg
rorl
sarl
cli
les
lret
rclb
aaa
mov
push
mov
mov
in
in
sub
lods
fmull
decl
xor
xchg
and
and
lds
mov
fstl
and
push
into
out
imul
push
and
sub
adc
jb
sbb
jecxz
pop
jecxz
sbb
mov
sub
daa
cmp
xor
insl
xor
rorl
mov
ror
arpl
cmp
insl
add
addr16
jbe
or
cs
scas
xlat
pop
arpl
push
and
or
jno
daa
inc
lahf
xor
in
inc
cli
xor
mov
in
add
mov
or
popa
add
rcl
sbb
mov
pop
imul
push
iret
push
outsb
or
push
jle
aas
jno
mov
sbb
loop
mov
sub
out
popa
lret
cmp
movsl
sub
das
and
xchg
xchg
jno
xor
and
xor
sub
mov
and
xor
fadd
lret
add
lock
dec
and
lock
sub
add
in
adc
xchg
mov
or
iret
lods
push
jp
mov
jg
lods
call
mov
push
cmp
nop
cs
push
cwtl
hlt
addr16
andb
lock
sub
inc
inc
ljmp
or
cltd
in
aaa
das
dec
cmc
xor
adc
adc
xchg
adc
dec
inc
inc
test
inc
nop
dec
jp
fisttpll
in
xchg
out
addr16
testl
push
daa
mov
and
push
push
cmp
test
stc
dec
dec
int3
lret
out
clc
cmp
rolb
mov
mov
mov
dec
mov
jge
daa
push
push
xlat
xor
pop
lea
fisttps
jo
neg
sub
in
inc
ficompl
xchg
push
xchg
mov
subl
adc
gs
push
loop
xchg
adc
in
arpl
loope
popa
dec
aaa
mov
mov
dec
mov
mov
push
push
mov
cmp
sub
mov
add
xor
mov
cmpb
jge
in
fnsave
shl
dec
xchg
sbbl
and
dec
push
inc
lock
push
stos
lds
or
cltd
iret
call
mov
add
mov
dec
cltd
in
daa
and
in
pop
test
daa
in
sbb
es
in
xor
cmp
mov
cmpsl
aam
xor
push
pop
rcr
mov
inc
xchg
pop
push
mov
and
mov
dec
repz
lods
push
je
lods
jbe
dec
jns
mov
test
cmp
dec
lret
xchg
push
fcmovnbe
lds
insl
pop
in
nop
xchg
mov
les
lock
jne
add
mov
popa
mov
in
mov
jp
or
and
scas
adc
cli
push
or
pop
inc
popf
push
nop
punpckhbw
in
ja
adc
mov
stc
or
pop
popf
and
in
mov
mov
lret
imull
cmpsl
jbe
ja
jae
mov
ret
xor
jl
and
cmp
scas
mov
movsl
movsl
or
cmc
mov
loope
in
bound
lods
lds
jne
pop
fimull
ret
mov
mov
mov
mov
push
ret
xor
fwait
xor
mov
orl
fs
mov
cmpsl
push
mov
add
jne
sbb
pop
jl
testl
sub
mov
outsb
into
pop
pop
inc
out
movsl
daa
pop
dec
sub
sbbb
jne
stos
jbe
ret
cs
add
and
insb
mov
mov
cmp
add
jle
loop
pop
insb
in
inc
gs
ds
test
cmp
xor
jge
push
lea
jne
xchg
push
pushf
or
inc
out
in
sbb
adc
jmp
mov
adc
inc
xlat
xor
xchg
loop
adc
mov
sbb
pop
into
mov
sbb
cmp
in
xchg
das
sbb
movsb
cmp
mov
mov
lods
jmp
mov
adc
pushf
sub
out
add
aaa
getsec
and
pop
push
out
jge
xchg
popf
jle
or
fs
fildll
mov
pop
dec
push
lahf
sub
mov
sub
mov
or
or
clc
frstor
dec
dec
sahf
add
test
cmp
dec
mov
push
shrl
aas
imul
mov
mov
je
dec
repz
nop
test
push
fnstsw
pop
xor
lret
push
std
inc
dec
arpl
sub
dec
lea
stos
dec
js
mov
dec
gs
pop
sti
test
subl
add
adc
xor
jno
lret
scas
insl
daa
rcrb
and
sub
test
or
sbb
jns
mov
insl
sarb
xor
shrb
sub
daa
mov
insl
push
push
pop
add
mov
mov
clc
add
lcall
jg
in
push
pop
and
xchg
nop
push
jg
ret
stos
xchg
or
test
imul
mov
pop
movb
cmp
rcl
out
dec
rcrb
push
cwtl
arpl
stos
clc
outsb
sub
insl
out
jecxz
lahf
jmp
outsb
xchg
lods
popa
call
sub
lods
mov
cmp
cltd
jmp
or
or
lods
outsl
insl
cld
frstor
mov
fldl
mov
push
add
ds
and
add
xchg
mov
jae
ds
je
lods
sti
imul
mov
push
test
or
xor
fists
outsb
and
ds
test
sahf
adc
mov
std
orl
das
mov
movsl
sub
loopne
subl
cmp
and
inc
and
test
xchg
cmp
in
insl
add
aaa
and
test
jbe
outsb
push
cs
in
insl
sub
sub
cmp
cmp
jecxz
mov
insb
pop
jecxz
stos
pop
mov
sub
lds
iret
stc
int3
mov
jnp
sbb
cs
nop
dec
pop
enter
ja
mov
or
jmp
lds
cmpsl
jl
mov
test
xchg
out
test
insb
iret
add
inc
pop
insb
clc
mov
add
les
sahf
add
xchg
or
mov
sbb
pop
nop
lea
inc
mov
push
sbb
imul
cmp
das
fstl
mov
inc
adc
mov
movsl
dec
xchg
and
fstpl
xor
cmp
pushf
xor
cmc
scas
jp
or
cld
or
xor
push
std
fsubrl
xor
imul
inc
or
cld
or
xor
jg,pt
lds
add
inc
test
lret
aaa
shrl
daa
cld
pop
pop
pop
test
imul
and
movsl
inc
mov
imul
ret
test
insl
xor
fidivs
cs
ds
jae
cs
movsl
push
push
lret
test
insl
fsub
fidivs
scas
xor
ds
xchg
test
sbb
mov
pop
mov
std
rcll
bound
or
sub
lahf
popf
push
adc
popf
push
inc
push
or
dec
into
das
in
jge
mov
cmp
jmp
arpl
in
fs
data16
stos
int
adcl
or
dec
cmp
movsb
jb
ret
das
xchg
or
in
push
mov
ljmp
movsb
lods
enter
in
or
xchg
sbb
mov
jbe
jnp
cmp
aaa
inc
xor
insl
xchg
insl
push
data16
ljmp
jmp
insl
orl
imul
sub
in
es
and
or
jle
aam
negl
movsl
lret
ljmp
repnz
and
mov
lea
popf
mov
or
mov
or
jnp
cmp
gs
cmc
stos
imul
in
and
pop
loope
xor
addr16
pop
fisubrs
xchg
pushl
cmp
or
add
push
scas
cmp
lea
aaa
sub
pop
mov
cmp
lea
in
int
push
roll
lods
mov
cmp
xchg
or
cmc
xlat
insl
mov
not
xor
add
xchg
cmpsl
sub
and
mov
pusha
lahf
in
int
iret
or
xchg
jp
sub
and
xchg
or
sbb
or
mov
lods
cmp
jnp
cmpsb
and
jle
add
je
addr16
std
mov
rcll
or
ret
adc
outsl
mov
mov
arpl
push
pop
sahf
mov
lods
cwtl
and
add
mov
jbe
jecxz
or
and
xor
xor
mov
jecxz
imul
push
or
xor
jne
jne
add
xor
movsl
or
mov
scas
inc
and
frstpm(287
push
insl
ljmp
lods
lods
inc
cmpsl
insl
jecxz
or
stos
pop
mov
or
dec
xor
push
xchg
in
and
xor
rclb
stos
or
je
movsl
adc
lcall
or
pop
or
mov
cmp
daa
std
mov
and
out
inc
push
pushf
and
das
mov
bound
jns
xchg
adc
rol
mov
inc
pop
and
lcall
cltd
pop
jp
mov
sbb
je
xchg
pop
arpl
in
xor
add
aad
dec
xchg
popf
push
dec
push
data16
or
into
mov
sbb
daa
xchg
xchg
or
rcl
sub
push
movsl
leave
int
std
lods
fdivrs
in
push
inc
cmp
in
insl
cmp
psubsb
xchg
sbb
lea
or
adc
rorb
push
jns
push
or
mov
and
lods
imul
add
or
pushl
lods
jge
roll
sub
repnz
mov
push
xchg
sbb
int3
adc
int
pop
jns
inc
lret
movsl
addr16
dec
cmp
movsl
fcmovb
leave
movsl
lahf
out
fisubl
movsl
arpl
orb
or
jo
sub
rclb
movsb
and
jmp
lods
das
cmp
push
xor
cmp
add
add
adc
add
sbbb
push
add
xchg
test
repnz
jno
lock
xchg
lea
and
adc
and
jmp
cmp
jno
pushf
jno
cmp
mov
pop
and
pop
cmp
push
pop
dec
pop
and
push
inc
push
lods
xor
popf
and
cmp
in
addr16
or
cli
mov
or
inc
enter
int3
xchg
sarl
sti
movsb
lock
push
push
mov
push
aas
hlt
mov
fisttpl
daa
lahf
outsb
xchg
std
xchg
scas
or
cmpsl
test
sti
cmp
dec
xlat
mov
xor
outsb
pop
sub
les
sarb
daa
sti
repz
cwtl
cmp
pusha
in
ret
sahf
cmp
cs
cmp
sti
add
lods
daa
imul
mov
mov
ja
pop
dec
pop
ror
shll
mov
mov
push
je
adc
test
adc
or
mov
or
sarl
out
cmpsl
imul
shll
jne
push
aas
fcmovb
lahf
cmpb
jle
xchg
ja
push
adc
cmp
push
xor
arpl
fs
out
sahf
xchg
mov
loope
mov
mov
loop
mov
test
je
push
xchg
fnstcw
lahf
popa
xchg
cs
insb
aaa
call
movsb
jno
dec
hlt
lret
fidivl
or
add
ljmp
adc
movsl
les
or
popf
mov
or
imul
mov
sarl
adc
in
xchg
push
sbb
and
loopw
jmp
sub
sub
add
ljmp
fdivrs
or
lods
mov
mov
inc
or
inc
pop
dec
in
or
jo
xchg
pop
or
lods
outsl
cmp
add
jb
les
inc
xor
mov
out
ja
repnz
xchg
and
js
test
push
or
or
rolb
aad
mov
inc
pushf
out
jns
lea
jo
push
add
sbb
lods
push
jmp
addr16
mov
lods
cmp
repz
addb
pop
pop
movsl
adc
insl
adc
or
mov
cmpsl
sub
push
sbb
outsl
xor
mov
outsl
shrl
inc
into
pushf
xchg
or
or
cs
cmpsl
fucomi
pop
into
xor
sbb
cs
push
addr16
or
or
insl
or
cmp
sbb
arpl
jns
out
test
inc
repnz
pop
sti
les
inc
dec
xchg
loopne
dec
mov
jge
mov
push
test
aam
cli
mov
pop
dec
sub
xor
lods
aas
mov
inc
mov
sub
test
and
test
cmpsb
sub
sbb
fisubs
arpl
cwtl
or
inc
aaa
jg
sub
or
es
cld
inc
pop
pop
pop
je
sbb
mov
xchg
mov
jo
mov
in
das
pop
xor
pop
arpl
or
inc
push
movsl
mov
test
and
xor
ljmp
sbb
inc
and
insb
sub
jecxz
inc
push
inc
popa
lahf
sub
push
adc
ret
int3
push
add
sub
push
cmp
sbb
inc
xchg
jbe
xchg
xchg
xchg
test
cltd
cmpsl
lock
mov
mov
aaa
xor
sub
lea
leave
pop
pop
addr16
jl
cmp
int3
lea
ret
test
push
dec
or
cmp
pop
lcall
mov
cmp
cmp
lahf
mov
aas
in
std
and
vxorpd
sbb
out
xor
pop
fistps
insl
adc
int
test
in
dec
clc
addr16
shr
push
adc
xchg
mov
jo
scas
mov
dec
add
jg
pop
and
push
pop
xor
mov
test
cmp
pop
and
push
xchg
xchg
lods
sbb
sub
push
mov
mov
test
add
and
pop
mov
pop
test
movsl
mov
and
mov
cmpsb
lcall
push
sbbl
push
sub
stos
push
or
cmp
inc
mov
or
and
lds
xchg
das
ret
jo
sub
dec
xchg
xchg
pop
aaa
or
push
add
and
xor
jne
pop
mov
add
mov
jnp
cmp
in
mov
xchg
lret
dec
xchg
adc
scas
jle
inc
ret
jnp
push
ja
add
mov
pop
jno
pop
inc
sbb
int
pop
mull
sbb
leave
adc
pop
sub
inc
mov
insb
clc
pop
lock
xchg
adc
and
add
or
cli
adc
fisubs
insl
int
mov
mov
sub
mul
jno
cmp
pop
mov
adc
stos
sti
popf
add
mov
out
mov
call
mov
adc
jmp
mov
imul
mov
cli
push
dec
cs
inc
imul
cmp
aas
insb
cs
daa
call
xchg
inc
push
out
sub
aas
push
fsubrl
inc
sub
adc
lret
pop
lret
lods
inc
mov
rorl
pop
mov
mov
pop
leave
pop
add
sub
test
popa
push
imul
stc
imulb
adc
push
enter
jno
push
mov
or
lods
xor
push
insb
pop
xlat
pusha
jl
outsb
jbe
xor
imul
ret
inc
lods
rorb
aaa
dec
cmp
mov
arpl
shr
mov
arpl
jb
lods
lods
std
mov
insb
cmp
jns
aad
insl
jb
mov
arpl
dec
in
gs
cltd
loopne
lahf
mov
xchg
jecxz
push
mov
ror
les
adc
in
add
push
ret
arpl
iret
xor
sti
jecxz
inc
mov
fwait
in
cmp
inc
jecxz
outsb
dec
xchg
stc
mov
mov
inc
mov
repz
negl
cmp
push
pop
das
dec
mov
int3
mov
xchg
insb
aas
daa
or
mov
xor
lods
dec
das
xor
shrl
mov
fs
xor
inc
out
xchg
mov
jge
jecxz
cmpsl
xchg
xor
dec
sub
insl
dec
and
and
pop
insl
lods
ljmp
dec
and
cmpsl
pop
cmp
pop
aaa
fs
das
ds
xchg
adc
xchg
data16
test
sub
insl
fcoml
lea
les
scas
fbld
test
xorl
dec
test
lods
dec
orl
dec
dec
lahf
js
test
lods
xlat
adc
push
mov
out
and
xchg
or
jbe
mov
leave
push
mov
jg
or
sub
mov
sub
sub
imul
aaa
cmpsl
mov
cmp
dec
pop
fcompl
sub
inc
test
mov
sarl
cmp
pushf
in
push
mov
enter
xchg
mov
enter
movsl
xchg
or
in
mov
lcall
dec
das
mov
xorl
in
mul
ds
imul
movsb
cmp
cmp
orl
mov
jne
imul
inc
fs
and
addr16
xchg
popa
inc
xor
cs
and
subl
xchg
adc
insl
cmp
clc
pop
cmpsb
adc
loop
in
cmp
int
pop
insl
mov
push
dec
sbb
and
arpl
rcrl
pop
cmp
sbb
mov
int3
loop
pop
sub
fsubr
jnp
mov
mov
cmp
jae
sbb
ret
jnp
leave
popf
or
mov
into
add
cli
in
lahf
scas
addr16
std
sets
and
pop
outsb
mov
lea
xchg
jb
loopne
lea
call
in
mov
imul
sbb
in
or
dec
dec
or
cmp
push
int3
aaa
out
and
lcall
imul
push
adc
add
pop
imul
lods
shlb
adc
in
ror
and
cmp
cmp
insl
aaa
scas
xor
xchg
aaa
add
or
arpl
jnp
aaa
xlat
mov
jne
cmc
into
mov
insl
add
pop
pop
pop
or
ja
bswap
daa
jmp
pusha
lods
arpl
movsb
and
nop
jnp
leave
pop
ss
and
cmp
sub
fs
mov
cmp
sbb
cmp
scas
arpl
push
jmp
adc
xchg
outsb
adc
mov
and
push
lret
xchg
mov
test
dec
cwtl
sub
arpl
mov
inc
rcr
lods
and
jae
lods
fs
test
cmp
aaa
add
in
outsb
push
cmp
das
sub
pop
lods
movsl
mov
jmp
in
daa
and
mov
push
dec
pop
das
les
lahf
mov
or
movsl
cmp
dec
nop
daa
push
mov
jmp
ret
lock
ds
ja
stos
out
mov
xor
lods
sbb
popf
mov
insb
lret
ljmp
pop
add
in
xchg
bound
hlt
mov
and
lods
jne
sub
and
mull
scas
shr
push
mov
aad
int3
insl
dec
push
sub
insb
jl
insb
addr16
or
add
cmp
imul
mov
movsl
int
fs
shlb
xor
mov
mov
sbb
jle
insl
or
shrl
cmp
mov
ja
mov
insb
jge
mov
inc
mov
jns
push
movsl
pop
imul
mov
mov
mov
and
mov
xor
mov
mov
lret
rep
and
and
or
stos
and
fidivrs
inc
leave
addr16
mov
enter
scas
push
in
rclb
stos
adc
out
mov
into
das
cmp
pop
or
jmp
pop
in
loopne
cmc
clc
mov
call
cmp
xchg
jb
or
mov
gs
adc
mov
test
jl
sub
jnp
jmp
inc
xor
gs
xchg
mov
cltd
arpl
or
mov
insl
xchg
lahf
pop
out
mov
lods
cmp
stos
scas
mov
sub
insl
mov
and
sbb
cs
imul
mov
cmp
test
adc
mov
xchg
xchg
pop
cmpsl
add
je
movsl
pop
mov
push
insl
mov
lret
jecxz
test
push
dec
push
movsl
in
rcll
iret
gs
sub
push
rep
fs
imul
add
inc
imul
jno
nop
mov
fildll
mov
mov
mov
popf
jecxz
imul
sub
stos
xlat
out
or
out
paddsw
pusha
call
lods
mov
in
and
popf
scas
fidivs
subl
test
pushf
repz
push
jl
jae
mov
in
shr
test
shlb
or
mov
insb
test
and
or
mov
xor
xchg
inc
add
shrl
and
xor
test
fs
push
test
daa
mov
ds
xchg
add
shll
in
cmp
stos
mov
cmp
dec
iret
push
cmpsl
jb
outsb
scas
incl
mov
loope
xlat
in
jb
cmp
or
stc
nop
pop
mov
mov
sbb
scas
xchg
or
xor
push
mov
sub
jo
xorl
add
and
fisttps
aas
cmp
inc
mov
imul
out
scas
mov
mov
arpl
xchg
xlat
dec
xchg
ss
daa
jno
push
inc
cmp
add
adc
sub
push
pop
adc
xlat
and
mov
and
idivb
ljmp
cltd
js
adc
mov
mov
push
mov
dec
jnp
jg
cmpsb
bound
inc
or
or
dec
idivl
inc
cmp
sbb
sub
data16
or
lcall
mov
cmpsl
test
pushf
mov
sub
push
sub
in
pop
cmpsb
sbb
pop
jp
mov
shrl
jmp
test
dec
mov
add
fimuls
int
push
xchg
mov
inc
cmp
fildl
popa
mov
test
mov
loop
je
cmp
in
inc
or
iret
cmp
jl
pop
pop
int
jno
popa
push
add
mov
outsl
jl
cmp
mov
outsl
rol
dec
je
sub
push
push
and
sbb
loopne
mov
cmp
xor
ret
xor
dec
movsl
andl
into
adc
movsl
pop
arpl
jmp
add
movsl
cmc
arpl
js
sbb
jns
and
test
es
fistpll
mov
cs
insb
movsb
add
jbe
cmp
les
out
and
daa
imulb
jnp
aad
and
cmpsb
xor
xchg
lahf
adc
add
or
adc
mull
mov
adc
fistpll
ds
or
loopne
adc
test
and
lods
notb
daa
sub
inc
movsl
shll
or
or
sub
sbb
lahf
push
mov
cmp
or
daa
hlt
inc
inc
sbb
imul
sbb
ror
fst
lret
and
mov
push
leave
loop
push
hlt
adc
imul
aaa
push
sub
dec
or
xchg
mov
fldpi
push
pop
pop
jg
int
fcmovbe
ljmp
pop
or
jge
pop
dec
cmpsl
xor
fidivrs
rcr
pop
cltd
add
popa
out
in
test
insl
add
mov
lods
xor
lods
xchg
mov
pushf
sti
or
testl
mov
insl
popa
inc
jge
in
fwait
in
daa
lods
cmp
sub
fldcw
movsl
dec
or
push
jg
sbb
fdiv
into
dec
int3
lods
xor
repz
pop
in
dec
add
lds
sub
cmp
aam
or
or
lods
sbb
fldcw
push
stos
iret
mov
cmp
and
pop
bnd
xlat
bound
and
jbe
lods
arpl
inc
mov
jbe
jge
pusha
lods
insb
lds
jo
push
dec
inc
insl
jae
dec
jmp
aas
push
lahf
out
inc
rcrl
push
inc
inc
or
inc
mov
out
lods
sti
adc
inc
push
ret
addr16
imul
sbb
popf
dec
xchg
or
add
and
lods
jno
sbb
mov
loop
fisttps
xchg
mov
sub
or
out
hlt
adc
push
push
das
sub
cli
jae
mov
ja
pop
dec
jmp
lods
outsb
mov
scas
popa
fdivrs
mov
insb
shrl
xchg
push
dec
lds
jp
nop
mov
test
movl
or
xor
jbe
mov
add
lret
js
lea
lea
loop
add
movsl
push
xchg
sahf
in
mov
std
stos
push
xor
and
sub
mov
lret
xor
push
mov
push
adc
or
jbe
dec
adc
xlat
xchg
jg
sub
xlat
lahf
lahf
icebp
into
inc
ljmp
iret
bound
cli
lods
xlat
mov
data16
inc
push
out
std
add
ja
mov
cmp
adc
push
push
sub
xchg
and
dec
scas
int3
imul
jl
dec
cmp
and
inc
out
ficoml
sub
sbbb
pop
push
enter
les
sbb
cli
inc
adc
pop
insb
mov
mov
mov
cli
cmp
mov
xchg
pusha
mov
sbb
fs
xor
push
dec
mov
xchg
outsl
js
ret
xchg
outsb
movq
inc
push
pop
vpperm
xchg
push
frstor
int
sbb
in
out
cmc
cmp
pop
scas
sti
and
ljmp
inc
andb
shll
out
adc
and
sub
dec
inc
cmp
jp
push
test
sub
push
out
mov
sarb
cmp
jmp
insl
movsl
clc
daa
popa
lds
xor
cmp
lahf
mov
pop
add
lcall
push
lods
and
cmp
std
jb
mov
push
std
mov
negb
movsl
ja
mov
or
insl
lods
jg
lret
pop
dec
int
aaa
cld
imul
js
mov
leave
and
push
lahf
lock
push
pop
dec
pusha
pop
out
xor
sub
ljmp
xor
enter
jno
jp
xchg
ss
enter
test
pusha
mov
sti
and
lret
jp
iret
sahf
cmpsb
xlat
dec
bound
outsl
and
lods
or
lret
mov
mov
jg
outsb
fildl
cmp
fstpt
into
leave
scas
mov
adc
aad
int3
lods
out
or
adc
or
add
lea
add
test
insl
orb
outsl
scas
jbe
in
or
popa
jmp
cmp
psubq
lea
movsl
jge
push
pusha
dec
inc
insb
subb
test
pop
and
jl
rcr
xor
hlt
roll
sub
in
mov
xchg
test
mov
in
xchg
jb
mov
cmp
cmp
dec
mov
xchg
cmp
repnz
mov
inc
cwtl
sbb
outsb
jecxz
push
cmp
xchg
cmpsb
jmp
mov
adc
lahf
xor
fs
andb
hlt
sub
push
jo
cmp
test
and
cmp
int3
push
lcall
adc
dec
jno
mov
in
ret
das
xor
rcrb
fimuls
fcomp
cwtl
jl
jl
lods
rolb
aam
dec
add
shlb
or
sub
inc
nop
sub
in
insl
or
popaw
cmpsl
out
jle
in
fs
jl
aas
cmc
mov
mov
shlb
adc
inc
dec
out
mov
push
or
jae
mov
cmp
cmp
jle
inc
rorb
daa
addr16
push
push
shr
outsb
jno
dec
mov
and
xchg
jmp
sti
pop
mov
cmp
sbb
hlt
mov
xchg
pop
pop
xchg
mov
mov
ds
pop
mov
jg
aam
ds
mov
outsl
mov
hlt
dec
mov
rclb
fisubs
or
fs
sbb
or
sub
addr16
hlt
push
daa
mov
and
adc
stos
out
int3
push
jbe
sbb
push
cwtl
and
nop
rolb
in
xor
clc
testb
cmp
jl
and
jg
lock
subl
mov
pop
fwait
dec
cmpsl
cmp
mov
xor
or
pop
add
insl
popf
xchg
ret
sub
jno
lods
test
into
jl
bound
scas
fidivrl
jo
xchg
cmc
jmp
lods
cmp
dec
sti
in
int3
or
or
mov
fldl
test
imul
and
adc
jns
sbb
loope
dec
ficoml
push
imul
sub
mov
or
lds
hlt
je
cs
jno
push
gs
jb
jno
add
xchg
or
iret
jb
outsb
dec
test
fwait
push
movsl
enter
shrb
outsl
pop
cmpsl
push
movsl
mov
push
test
jno
stos
or
xor
xchg
cmp
arpl
je
test
jg
mov
jne
jo
mov
and
cli
je
and
sub
xchg
cmpsl
gs
lock
test
lods
lods
lcall
push
insl
sbb
and
jg
push
outsl
cmp
mov
cmpb
xchg
push
je
jnp
or
cmp
sbb
imul
loope
stos
pop
pop
sbb
cmpsb
fsts
inc
outsb
in
cmp
aas
ficoms
pusha
add
es
xor
loope
ljmp
loope
add
sub
mov
push
dec
cmc
push
pusha
shlb
jne
or
sub
outsb
arpl
mov
push
mov
mov
insl
inc
sti
sahf
rcr
popf
xchg
clc
push
cmpsl
xchg
out
ljmp
mov
shlb
cs
cmc
pop
repnz
push
jb
inc
stos
mov
cmp
test
test
imul
jecxz
xchg
shll
sbb
insl
aam
into
and
dec
test
jns
pop
sub
jno
push
insb
mov
and
rorl
pop
fwait
cmc
inc
pop
inc
cld
aad
cs
mov
hlt
iret
les
lods
call
hlt
rcr
push
cmp
popf
push
call
add
mov
mov
int
mov
nop
out
dec
xchg
stos
vorps
sub
insb
rclb
insb
repz
fisubs
movsl
in
in
test
dec
shrb
xor
in
push
test
jns
insb
jmp
popf
sbb
dec
fstl
sub
xchg
jno
bound
out
mov
jb
shlb
add
push
jge
aas
fistps
gs
cmp
mov
jbe
insb
int3
int
and
ror
dec
or
jnp
mull
orl
push
in
scas
and
lcall
frstor
repz
in
inc
popa
shll
mov
sub
sub
ja
insb
scas
lods
sbb
insb
mov
ja
add
out
push
scas
aam
icebp
std
push
ret
daa
dec
mov
push
test
push
cmpsl
inc
cmp
in
scas
in
mov
test
jno
jl
mov
mov
jmp
or
call
mov
es
popa
test
movsl
movsl
dec
jae
cmp
xchg
mov
adc
das
jbe
pop
enter
mov
and
mov
rcrb
add
iret
mov
outsb
mov
mov
push
das
sbb
jbe
jg
insb
cmp
dec
imul
mov
add
dec
cld
daa
inc
xchg
out
sub
lea
shrb
jle
pop
sub
dec
and
fisttps
pop
xchg
xor
lds
jmp
inc
pop
popa
in
dec
bswap
jle
ss
cmpsl
push
push
mov
sub
and
cmp
ja
cmp
push
addr16
mov
xlat
pop
push
lods
popf
gs
pusha
sub
jo
loopne
into
xor
frstor
adc
xor
and
cmp
mov
cmp
out
fxch
xor
enter
mov
xchg
sub
fs
sub
pop
xor
cmp
xchg
sub
xchg
push
mov
icebp
cmovge
scas
inc
mov
insb
jl
add
rcrb
or
add
decl
jae
addr16
dec
jns
divl
leave
push
cmpsl
inc
jp
xchg
insl
mov
or
repnz
shrd
sub
mov
xchg
je
subl
ffreep
push
lret
mov
lea
gs
mov
fimull
pop
test
pop
push
lea
in
pusha
pusha
xor
repnz
scas
inc
dec
pop
imul
adc
pop
add
ljmp
push
mull
fistpl
ja
push
sub
mov
dec
mov
sarb
dec
movsb
test
test
ds
stos
xchg
or
or
jb
out
insl
pop
fcoms
mov
cmpsb
mov
adc
pop
test
addr16
xor
adc
push
or
pop
or
jae
repnz
cmp
in
test
cmpsb
test
adc
out
jmp
adc
out
repz
dec
ds
fidivs
push
adcl
dec
add
mov
cmc
and
or
push
fs
jbe
ljmp
andl
push
or
xor
pop
outsb
jmp
es
call
jno
iret
test
outsb
arpl
popf
xor
mov
mov
lods
jbe
aaa
mov
pushf
pushf
mov
lods
sahf
xlat
fildll
leave
scas
iret
insl
fs
ret
xor
pop
fwait
les
or
popf
or
popa
adc
xchg
mov
jmp
jne
inc
aam
movzbl
test
sbb
lods
iret
pop
cmp
or
jo
aas
loope
gs
test
pop
inc
pop
arpl
xchg
adcl
xchg
dec
sub
or
jp
clc
xchg
popa
fdivrl
cmpsl
int
aad
fsubrl
xor
loope
xor
in
lahf
lahf
pop
aad
pusha
xor
ss
jl
fsqrt
mov
dec
stc
popl
aam
daa
add
dec
ret
cmp
inc
xor
sub
cmpsl
shrb
and
pop
test
cmpsb
cli
xchg
imul
loope
mov
jno,pt
fsubl
out
pop
push
test
jo
ficomps
sbb
mov
pop
dec
decb
insl
pop
cmp
insl
jnp
mov
mov
xlat
sub
cmp
xor
cmp
adc
imul
adc
or
cmc
call
fildll
call
popa
mov
mov
xor
shl
xor
sbb
jl
outsb
in
enter
sbb
test
aaa
inc
movsl
mov
mov
cmpsb
jmp
cmpsl
rolb
ljmp
sti
movsl
dec
ror
and
cmp
ljmp
mov
inc
pop
cs
mov
ret
push
fs
mov
into
or
adc
test
loopne
mov
mov
stc
xor
insl
and
cmp
dec
into
fmulp
xchg
sti
movsb
andl
out
pop
fistpl
arpl
scas
shl
roll
adc
stos
leave
pop
lea
popa
push
or
adc
sub
jne
shrl
mov
out
call
test
cmp
movaps
xchg
pop
je
addr16
cmp
push
jmp
jle
into
or
lea
mov
or
in
xor
inc
inc
test
aad
sub
cld
stc
jne
jl
mov
jnp
aad
pop
dec
pop
jp
stos
gs
scas
jg
fbld
pop
ffreep
enter
and
xor
pop
sub
cmpsl
push
test
cmp
hlt
push
iret
cmp
les
push
clc
iret
mov
mov
inc
rorl
ljmp
les
inc
xor
jno
adc
add
and
and
xorl
pop
dec
in
xchg
cmp
insl
xor
mov
push
shrb
dec
push
hlt
mov
xchg
adc
push
add
fldt
aaa
pop
addr16
mov
mov
add
popa
fimuls
adc
ja
fdivr
push
mov
or
mov
in
jb
inc
mov
cltd
stos
mov
jg
notl
test
aas
nop
fidivl
aas
sub
or
daa
or
ds
test
dec
popf
aaa
int
gs
lea
sub
in
daa
jo
iret
ffreep
aas
lods
add
pop
inc
insb
jo
adc
xor
subb
leave
rcll
bnd
lds
gs
push
pop
in
pop
test
mov
aad
popf
lds
pushf
popf
lahf
dec
loop
cs
push
cltd
xchg
arpl
test
pop
jbe
add
push
shrb
or
mov
and
jge
int3
sub
or
mov
rorb
and
fnsave
les
dec
mov
inc
cld
adc
adc
sbb
jno
dec
and
cmpsl
lret
jg
push
pop
mov
mov
adc
decl
push
outsb
dec
push
rcrb
jecxz
sub
jg
xchg
sub
xchg
nop
cmp
shr
or
cmp
inc
out
lahf
push
xchg
jecxz
dec
rcr
cmpsl
jae
mov
mov
daa
jbe
outsl
aaa
inc
lds
add
mov
or
enter
push
cmp
sub
scas
int3
out
hlt
roll
insl
xorl
int
mov
lds
pop
sub
mov
jp
mov
mov
shrl
daa
sti
sub
cmp
xchg
xor
rcrl
jno
jmp
adc
test
push
push
out
lods
fwait
das
insl
dec
dec
in
jecxz
jmp
in
ljmp
ss
add
mov
lret
jb
gs
cmpb
int
xorl
push
adc
xchg
xor
andb
dec
pop
ja
jo
mov
dec
or
insb
fcoml
in
push
shlb
sbb
jo
bound
add
stos
jb
test
popa
fisubl
mov
cmp
inc
pmulhw
ja
ja
popf
xor
xchg
cmp
or
lcall
hlt
cmpsl
in
jge
imul
jmp
dec
xchg
rcrb
scas
pop
imul
fsub
fistpll
testl
jg
pop
ror
add
pop
inc
int
dec
shlb
in
insl
in
fdivrl
xor
jne
imul
int3
mov
jmp
mov
add
and
dec
in
aas
aas
or
cmp
mov
ljmp
adc
test
mov
fisubrl
inc
insl
push
arpl
movsb
cmp
jb
sarb
mov
mov
lcall
nop
xorb
push
and
pop
sub
in
jge
movaps
nop
jne
sub
in
cmp
scas
add
inc
pop
sti
xchg
cmp
cmpsl
outsb
in
mov
test
daa
mov
sbb
sub
adc
ret
mov
dec
lahf
cmpsl
or
int3
gs
pop
pop
insl
mov
jg
cmp
dec
mov
jo
and
mov
fimuls
jbe
mov
or
or
pop
push
arpl
push
fs
jg
pop
inc
subl
insl
pop
in
sub
negl
push
into
xor
ljmp
ds
inc
jg
test
cmc
into
pshufw
push
sti
pop
std
cltd
push
fwait
jne
je
inc
inc
cmpsl
push
test
dec
or
mov
shll
das
imul
pop
mov
iret
lret
sbbb
daa
add
sub
les
das
sub
sub
mov
fildll
in
mov
aad
mov
cmpsl
mov
xor
mov
in
lret
add
add
sub
ror
shlb
leave
sbb
xor
xor
lahf
push
outsl
lea
jmp
iret
ror
mov
xchg
test
jmp
into
in
insb
lods
push
adc
imul
repnz
mov
aaa
je
int3
xchg
push
daa
lcall
mov
in
ret
add
push
icebp
jno
fsubr
iret
push
mov
and
sub
roll
push
sub
std
lret
cs
je
mov
push
iret
cmpsb
pop
decb
jbe
xchg
mov
dec
arpl
jno
icebp
adc
xchg
into
cmp
xchg
fcomps
mov
sahf
xor
int3
lds
pop
cmp
and
int3
mov
fistpl
cs
in
jmp
adc
dec
in
sub
push
jp
leave
movsl
and
aas
lods
lcall
xchg
sar
shlb
mov
jmp
jae
mov
loop
cli
hlt
adc
dec
push
sbb
mov
sbb
movsb
lods
jecxz
in
add
jl
fabs
dec
cmc
and
push
loope
loopne
xor
cwtl
das
mov
lea
mov
test
jns
push
insb
jno
push
out
pop
int
mov
jbe
push
cmp
xchg
add
add
fcompl
fmuls
pop
insl
fisubrl
add
push
imul
inc
jns
sbb
leave
in
outsb
dec
cmp
jbe
xchg
mov
sub
xor
les
aaa
lods
jl
movsb
ja
loope
jp
je
cld
aam
add
mov
xchg
xchg
dec
mov
xchg
jmp
xchg
movl
out
jmp
movsb
mov
pop
xchg
data16
and
test
jno
dec
mov
xchg
test
sub
adc
push
sub
adc
cmp
cmc
and
push
dec
loop
into
adc
add
lds
inc
mov
inc
fiadds
mov
dec
cli
fcmovu
pop
adc
pop
jge
cmp
into
bound
mov
dec
cmpsb
scas
int
or
sub
in
dec
cmpsl
pusha
arpl
cmp
mov
push
dec
imul
arpl
bound
mov
popf
punpckhwd
or
sub
bound
jnp
in
jle
ret
or
pusha
cli
mov
mov
or
and
add
dec
add
jnp
in
jecxz
movsl
push
out
lea
push
fldl
inc
or
leave
and
insb
popf
clc
cmc
mov
repz
cmp
enter
sti
and
pop
and
cmpsl
mov
xchg
jle
rolb
or
and
popa
scas
je
test
mov
rolb
call
mov
loop
xorl
push
jge
loopne
out
lds
jecxz
fcoms
lret
scas
addr16
outsb
insl
dec
lods
and
push
rclb
or
cli
or
dec
fbld
stc
scas
shrb
ret
mov
lea
push
lds
mov
aad
lock
pop
xchg
xor
push
rcrb
lods
mov
add
adc
cmp
sub
mov
dec
int
movsb
cmp
dec
popf
pop
push
jl
jecxz
cmp
insl
pop
mov
push
jnp
gs
adc
push
imul
push
push
shrb
mov
jb
adc
push
pop
es
repnz
in
push
nop
fistpll
xchg
clc
jne
adc
sbb
flds
mov
inc
mov
call
xchg
lods
jb
jb
stos
mov
hlt
jo
xor
sti
mov
jmp
fisubrl
push
push
xor
roll
adc
lods
sbb
pop
das
sub
aam
imul
lret
xchg
lods
cmp
les
or
push
dec
out
and
mov
jno
push
cmp
sbb
push
or
xor
scas
rorl
inc
sbb
cltd
sub
stos
ret
sti
pushf
aaa
je
test
mov
out
xchg
mov
sbb
outsl
and
xor
or
shrl
loop
stos
sbb
sti
js
add
push
inc
and
jge
popa
jmp
lcall
mov
inc
enter
repnz
lods
mov
cld
mov
mov
mov
push
mov
add
mov
lods
add
mov
mov
aaa
mov
or
inc
in
std
int3
xchg
movsb
lea
dec
add
sbb
push
mov
push
pop
cs
pop
jle
or
mov
adc
dec
int
inc
icebp
stos
mov
arpl
xor
adc
test
sub
push
das
nop
push
enter
pop
popa
insl
jb
jle
xor
jecxz
mov
and
push
mov
mov
pop
push
outsb
popa
dec
mov
out
imul
push
inc
imul
movsl
mov
aad
out
sbb
pop
cmpsl
xchg
mov
out
int3
cs
add
enter
sbb
mov
add
into
repz
fldenv
mov
cltd
pop
mov
pop
je
call
pop
insl
out
inc
idivl
cmp
push
mov
xor
cmp
lcall
out
pop
insb
jb
mov
xchg
in
dec
cmpsl
insl
lahf
mov
in
daa
and
cmp
adc
lock
std
enter
orl
adcl
mov
jnp
icebp
adc
xchg
gs
lret
in
out
dec
dec
lahf
mov
loope
adc
xor
aam
sbb
cmp
or
xchg
cmpsl
mov
aaa
jp
xchg
out
xor
xacquire
xor
je
mov
insb
xchg
outsb
in
iret
dec
mov
sar
cli
ja
sbb
test
xchg
jno
sbb
mov
mov
add
xchg
pop
cmp
cmp
bound
mov
jle
and
push
cld
popa
add
dec
dec
outsb
icebp
jle
loope
and
cmp
decl
imul
das
cmp
dec
pop
mov
dec
movsb
lods
jp
pop
dec
bound
add
es
cmpsl
push
inc
loope
push
scas
jne
lret
cwtl
mov
xchg
stc
pop
mov
decb
pop
or
and
jl
in
adcl
jmp
inc
cs
pop
lea
xor
repz
in
cmp
das
and
jbe
xor
dec
in
dec
in
inc
outsl
outsl
sbb
pop
rol
je
cs
or
mov
lahf
mov
rorl
cmpsl
or
pop
data16
xchg
sti
std
xor
push
outsl
xchg
arpl
cmp
adc
push
int
decl
js
scas
lods
test
addr16
adc
fistpl
lcall
push
xchg
push
xor
lods
jecxz
test
aaa
cs
subl
pop
roll
sub
andb
cmp
clc
das
mov
xor
pop
jl
mov
imul
scas
xchg
popa
add
ljmp
adc
in
cmp
test
mov
sub
sbb
pop
mov
test
push
insb
xchg
out
xchg
push
lcall
sbb
inc
call
pushf
fsubrl
sub
mov
out
outsl
movsb
xlat
movsb
jge
lcall
icebp
call
xchg
cmp
push
xchg
mov
push
fiaddl
cmp
adc
lock
outsl
mov
imull
xchg
and
jbe
aas
stos
nop
test
jno
sub
add
out
stc
imul
aaa
sub
xor
ds
lcall
mov
imul
mov
insl
sub
cmp
lahf
rol
outsl
cld
test
mov
sbb
push
rol
lods
jmp
add
jo
cmp
test
popa
inc
sbb
fsubl
and
std
jno
aas
mov
lea
gs
sti
in
mov
iret
push
pop
mov
push
push
jmp
xchg
lret
adc
sub
insb
and
mov
push
lods
outsb
pop
aaa
imul
imul
data16
rcl
int
inc
test
sub
xchg
out
add
ret
push
sbb
sub
inc
fmuls
push
clc
inc
lcall
fidivl
and
add
adc
sub
daa
loop
testl
icebp
pop
lods
ljmp
push
sti
jae
sbb
dec
and
mov
mov
xchg
test
lods
cmp
mov
push
jp
inc
aad
mov
jmp
and
pop
pop
lret
add
fnstcw
movsl
mov
fstpl
push
in
and
decb
inc
fnstenv
lods
xchg
test
push
stos
adc
aas
xchg
daa
subb
xchg
cmpsb
cmp
pusha
or
dec
insb
pop
gs
xchg
dec
add
pop
iret
xor
jle
faddl
lods
pop
pop
ja
loop
sbb
jbe
pop
mulps
data16
dec
mov
loop
les
pusha
and
stos
lods
cs
and
testl
inc
pop
or
gs
outsb
imul
xchg
addr16
ret
cs
fs
jnp
cld
sub
lea
iret
pop
into
jge
xchg
mov
stos
or
and
enter
or
aad
xor
movsl
stos
lret
daa
iret
shll
jmp
scas
leave
dec
jmp
ret
and
pop
imul
imul
mov
lahf
es
outsb
sub
frstor
ret
and
inc
call
aaa
dec
jns
adc
fadd
inc
push
das
ds
mov
setnp
xchg
les
dec
out
aas
stos
jle
outsb
mov
adc
ret
movsl
dec
mov
mov
les
sahf
push
push
divb
jl
push
lcall
mov
aaa
xchg
pop
insb
or
sbb
adc
ret
and
jp
stos
dec
lret
or
xchg
movsl
mov
push
pop
std
mov
push
pop
dec
outsb
stos
jge
negl
ret
and
bound
mov
pop
in
xor
imul
inc
pop
xchg
or
dec
pop
inc
divb
add
out
xchg
testb
mov
movsl
xchg
pop
push
pop
in
mov
mov
bt
fwait
lods
fldl
mov
movsl
cs
aaa
orl
inc
les
das
sbb
add
mov
mov
popf
mov
push
add
insb
pusha
btr
testb
mov
mov
add
dec
mov
jb
xchg
test
arpl
xor
xchg
pop
cmp
adc
or
add
mov
imul
fistpll
in
stos
cmova
in
scas
adc
mov
iret
mov
xor
test
outsb
scas
insb
sbb
les
mov
pop
aam
out
decb
lahf
dec
bound
call
movswl
push
pop
inc
jae
insl
pop
mov
xlat
fisubrs
pushl
fwait
adc
or
movsb
stos
es
pushf
cmp
lea
jnp
fcoms
push
aaa
sub
or
lahf
push
xlat
sbb
lcall
stos
pop
push
mov
test
insl
lret
inc
mov
sbb
jp
sub
fisubs
pop
out
xor
fwait
dec
cmc
or
xchg
cmc
cmp
xor
imul
push
test
fidivl
subl
bswap
mov
xor
mov
outsb
sub
sub
or
scas
lret
xor
data16
fwait
pop
fldl
stos
inc
jbe
xchg
jle
or
shr
cmpsl
add
push
jae
and
neg
outsb
movsb
push
or
dec
sub
inc
cld
inc
clc
xor
pop
insl
mov
pop
incl
movsl
lcall
mov
pushf
repnz
and
mov
lret
pop
add
push
addr16
loopne
test
xchg
fbld
insl
inc
inc
test
adc
mov
jne
sub
xor
push
into
adc
cmpsb
mulb
imul
jmp
daa
mov
and
ds
fimuls
dec
test
das
inc
imul
mov
dec
mov
mov
aaa
retw
and
std
mov
fdiv
aad
cmp
xor
dec
rorl
loop
mov
mov
jne
adc
or
push
and
jno
jbe
ja
or
cmp
paddsw
inc
cmp
and
push
mov
cld
mov
inc
bnd
cmpsl
xor
push
fadds
iret
push
inc
xor
jecxz
push
scas
shll
fcmovne
shlb
jl
test
cmp
cs
outsb
jecxz
pop
push
xor
xor
cmp
sbb
inc
sbb
xchg
shll
mov
out
jns
pop
ret
dec
popa
mov
fsubrs
sub
call
and
sub
je
sub
orb
dec
loopne
add
fiaddl
mov
mov
rcr
pop
inc
inc
cmpsl
mov
inc
movsl
int3
gs
test
cwtl
push
push
testl
pusha
cmp
mov
jecxz
pop
nop
mov
xlat
mov
lcall
fstps
in
scas
sti
sbb
sub
or
pop
lahf
inc
mov
movsb
sub
mov
into
jg
js
adc
pushf
jo
hlt
cmpsb
insl
mov
jb
jno
iret
and
lock
add
sub
add
imul
int3
sbb
nop
xchg
jo
out
int3
and
icebp
sbb
xlat
xor
cmp
xchg
pop
jle
aad
pop
sti
cmpsb
and
cmpb
test
ret
cmpsl
xchg
aad
in
repz
adc
ficompl
iret
in
mov
lret
push
and
push
xor
sarl
rcrl
mov
push
test
popf
push
mov
and
pop
leave
repnz
jne
repz
ds
mov
inc
loope
hlt
mov
mulb
lahf
xchg
out
flds
or
push
pop
adc
and
lret
fs
into
dec
and
inc
pop
popa
int
mov
cmp
lea
sub
lods
dec
loop
push
fisttpl
xchg
push
dec
cld
push
outsl
mov
inc
jg
cli
mov
or
adc
popf
push
js
push
fsubrs
inc
pop
stos
adc
cmc
sub
movsl
outsb
fucompp
lds
adc
xor
dec
out
outsl
out
xlat
xor
sub
push
sub
and
cmp
jl
fbld
jge
dec
pop
lret
enter
xchg
in
xchg
test
push
rorb
ds
lods
xchg
insw
mov
in
adc
push
pusha
push
mov
out
int
in
xchg
ljmp
testl
or
lds
out
out
hlt
dec
outsb
pushf
scas
pushf
mov
jb
cltd
rcrl
cmpsb
sub
mov
mov
xor
repnz
insb
in
or
sub
or
or
lods
sbbb
cmp
mov
sbb
pusha
nop
out
cmp
mov
mov
mov
xchg
data16
xlat
jne,pn
test
ljmp
cmp
cmp
test
mov
xchg
sub
ljmp
mov
inc
dec
lahf
call
popf
push
jno
mov
ror
leave
in
mov
sti
cs
out
mov
adc
pop
sbb
mov
pop
insb
jbe
push
add
xor
lods
push
scas
push
jno
or
mov
or
jecxz
cmp
insl
outsb
int
and
adc
insb
pop
mov
jno
jle
jp
fwait
and
push
test
xor
loope
out
adc
and
pop
call
repnz
cmp
jno
std
and
add
push
jmp
jle
pop
insb
cltd
add
fwait
adc
aad
sub
insl
dec
xor
and
das
add
leave
adc
sub
push
xor
repz
negl
arpl
outsl
lahf
sbb
or
popa
and
sahf
popl
dec
sbb
dec
sub
popa
dec
jg
pop
inc
ds
fnstsw
movsl
mov
cmp
mov
pop
nop
fwait
stos
mull
insl
outsb
inc
push
insl
and
imul
push
pop
mov
cmp
dec
ret
xor
sub
pop
mov
arpl
push
outsl
sbb
jmp
xchg
imull
or
les
rcrb
xchg
outsl
push
insb
lahf
and
ret
nop
popa
out
loop
mov
hlt
or
test
stos
adc
sub
dec
aad
out
fnstenv
cmp
test
jne
daa
shll
out
lea
add
fadd
fdivl
add
add
add
mov
sbb
in
in
sbb
adc
inc
fdivrs
and
push
cwtl
and
out
push
rcrb
inc
dec
push
movsl
ja
cltd
call
or
cmpsl
mov
mov
insl
jo
inc
lods
ret
lods
sti
in
push
mull
mov
push
and
ror
lea
and
mov
pop
and
addr16
aaa
sub
pop
or
xorb
xchg
mov
test
and
sahf
jno
cmpsl
sub
and
pop
test
mov
and
in
sarl
pop
jae
clc
je
push
int
xlat
pushf
pop
mov
into
pop
shr
sbbb
outsl
xorb
sbb
xchg
dec
lcall
in
out
push
mov
scas
and
adc
jne
cmpsl
je
or
frstor
fistpll
lcall
xor
xchg
out
mov
movsb
shlb
imul
mov
jg
dec
mov
or
push
sub
jg
push
flds
xor
subb
mov
movsb
pop
adc
or
sbb
insl
dec
cmp
pop
or
fs
movsb
rcrb
fdivr
in
pop
sbb
or
ss
leave
jns
dec
sub
mov
cltd
xchg
mov
inc
std
pop
aaa
je
neg
enter
outsl
pop
push
jns
cmpsb
scas
mov
cs
pop
xchg
and
cmc
inc
sbb
outsl
lret
jb
mov
cld
daa
push
nop
mov
mov
xchg
cwtl
arpl
inc
imul
sarl
xchg
pop
push
add
clc
mov
jbe
frstor
lahf
nop
out
add
stos
sbb
mov
scas
mov
test
insb
mov
divl
mov
cmc
mov
and
popf
pushf
inc
loop
sarl
aaa
popa
cwtl
fiaddl
and
invd
mov
in
cmp
add
mov
ss
test
es
sub
dec
int
fwait
dec
lds
mov
or
jo
imul
push
loope
movsl
mov
aas
dec
push
jge
mov
loop
leave
shlb
push
mov
cmpsb
test
rcl
aaa
push
dec
or
pop
xchg
xor
add
scas
ja
lds
in
add
pop
out
fiaddl
and
in
push
adc
cwtl
incb
int
or
pop
mov
jge
mov
jns
mov
cltd
in
insb
stc
int3
test
inc
mov
movsl
push
mov
jecxz
test
inc
gs
hlt
fwait
mov
or
inc
dec
arpl
repz
mov
cs
movsb
lods
stos
bswap
pop
xor
fnstsw
fcompl
jo
ret
les
push
sub
lods
xor
mov
hlt
jecxz
enter
xchg
inc
xor
lds
out
ss
jg
arpl
jmp
cmp
pop
cmp
aaa
sbb
pop
int
xor
mov
scas
mov
or
aaa
push
loopne
pop
push
sbb
sub
pushf
aaa
insl
out
pusha
mov
mov
jmp
pop
cli
jmp
popf
dec
add
mov
mov
sub
mov
mov
xchg
sub
push
sub
shlb
dec
pop
dec
jns
jl
or
mov
in
sub
arpl
adc
adc
arpl
dec
ds
movsb
jecxz
arpl
ljmp
and
push
mov
ds
inc
in
addr16
pop
in
xor
movsl
push
imul
dec
add
dec
dec
pop
enter
push
add
sub
stos
arpl
jns
or
lea
mov
mov
jmp
imul
adc
popf
pop
stos
ret
mov
pop
xchg
mov
and
xor
inc
scas
nop
lahf
push
das
adc
or
js
lret
pop
int3
cmc
push
cmp
lods
in
mov
ja
repnz
xorl
jne
lcall
xor
cmpsl
xchg
or
cmp
ffree
pop
stos
pop
ja
xor
mov
mov
mov
push
iret
cltd
mov
imul
xor
jecxz
addr16
xor
and
push
shll
pop
out
in
aaa
lea
es
rcr
frstor
aaa
fwait
jne
add
push
inc
lahf
xor
popa
jae
movsl
arpl
sbb
fwait
push
push
fs
xchg
dec
push
mov
and
jp
ret
iret
or
push
xor
push
stos
mov
daa
or
sub
cmp
sbb
push
sub
adc
xor
xor
outsb
sbb
mov
jb
jmp
cmc
shl
add
mov
cmp
mov
add
out
lods
cltd
or
cs
imul
aaa
inc
fistpll
dec
push
or
jno
data16
in
xchg
cld
daa
dec
pop
jno
idivl
stos
mov
dec
push
std
nop
inc
stc
jae
push
jne
cmp
jae
std
xor
push
stos
lret
pop
aaa
lods
and
pop
inc
cmp
lea
outsb
jns
cmc
adc
ret
lods
jge
lret
cmp
and
in
lods
or
fidivrs
lea
test
in
stc
mov
fs
mov
push
jo
scas
bound
leave
dec
je
adc
jmp
mov
and
dec
push
mov
insb
sub
xor
dec
pop
adc
lahf
mov
rcrb
dec
in
loop
mov
in
cmp
and
cmc
cmp
or
test
pop
or
mov
movsl
mov
call
pop
mov
cmp
cmp
nop
pop
lods
test
push
mov
pop
push
pop
out
dec
sbb
outsb
and
mov
mov
ret
mov
mov
pop
sub
aaa
int3
imul
aaa
mov
in
push
lea
push
aaa
jp
in
xor
xor
xor
sbb
ret
and
mov
dec
add
dec
bound
sbb
test
push
test
or
sbb
dec
sbb
stos
aaa
pop
imul
in
pop
scas
pop
xchg
mov
scas
mov
dec
sub
incl
std
pop
xchg
or
push
or
adcb
in
in
mov
xchg
insl
leave
xchg
jmp
in
int
pushf
in
mov
sub
dec
and
xchg
pop
inc
dec
int
cmpsl
sbb
push
jb
jle
push
fldl
adc
xchg
jo
and
mov
int
pop
sub
add
push
mov
jb
jno
jb
and
xor
enter
lea
repnz
jge
push
stc
lds
adcl
lret
clc
add
mov
pop
loopne
movsl
inc
and
mov
stos
ljmp
hlt
cltd
mov
ffree
loop
or
insb
mov
cmp
cltd
test
push
xor
daa
mov
cli
or
daa
cmp
cli
and
cmp
lret
pop
in
sbb
or
insb
adc
dec
push
mov
add
fbld
shrl
lret
popa
into
ja
jecxz
push
jne
hlt
mov
adc
insl
jo
cmovge
call
adc
iret
dec
sbb
movsb
lcall
and
gs
xor
arpl
fcmovb
xchg
and
or
subl
rorb
cld
sub
lcall
mov
adc
xchg
cs
xor
dec
lret
push
or
dec
rcrl
mov
imul
lcall
or
je
or
shll
scas
gs
lea
xor
dec
and
in
push
mov
loopne
xchg
popa
xchg
das
pop
dec
divl
lret
and
add
xchg
push
scas
push
cmpsl
push
in
add
cmp
fidivrs
ret
js
jg
push
aaa
bound
push
cwtl
jg
dec
subl
in
imul
push
jb
lcall
xor
jp
mov
int3
movsl
aad
pop
jge
xlat
repnz
sub
imulb
test
and
test
jno
push
outsl
push
rcrb
scas
adc
sbb
push
mov
xor
and
neg
pop
pushf
stos
xlat
xchg
adc
xchg
mov
ret
fxch
xchg
mov
push
ret
or
int
aaa
into
test
pop
popa
mov
scas
adc
xlat
mov
shll
and
notl
in
mov
or
movsb
lods
pop
lahf
inc
xor
and
add
lret
lock
scas
scas
and
mov
pop
sbb
add
cmpsl
repnz
cld
in
pop
pop
dec
imul
cs
adc
mov
in
or
jmp
shlb
xorb
or
adcl
out
lea
sub
xchg
dec
dec
push
popf
pop
xor
and
out
add
fdivrl
cmpsl
ja
sbb
adc
sub
adc
pop
xchg
mov
dec
int
xor
push
mov
mov
out
and
aad
pop
and
and
jno
dec
lods
mov
lahf
lea
cmp
jns
or
ret
push
push
pop
ror
add
cmpsl
xchg
sbb
addr16
inc
jge
jmp
add
in
scas
or
rolb
aam
and
push
daa
or
dec
idivb
pop
rcr
enter
daa
push
or
jne
inc
lcall
outsl
and
mov
fiaddl
aaa
subl
mov
lahf
shll
add
shrb
into
jno
imul
stc
inc
popa
out
ds
in
icebp
insb
add
sbb
dec
mov
xchg
daa
push
fsubl
or
dec
add
mov
or
fbstp
test
push
ss
and
sub
adc
fbstp
rcll
pop
fisubrs
or
daa
hlt
jo
das
jo
push
scas
scas
push
jp
pop
pop
xor
cmp
or
lret
test
jne
xor
cmp
out
aam
jmp
outsb
sub
sbbl
cmp
inc
push
sub
ljmp
or
mov
clc
jno
fisubrs
push
mov
in
mov
icebp
rcr
sub
push
add
in
sub
mov
lods
lods
pop
adc
scas
pop
inc
mov
pop
xchg
test
mov
sahf
adc
dec
dec
fs
out
push
xchg
cltd
adc
in
adc
add
jg
cmp
mov
imul
sbb
out
insl
xor
mov
mov
insl
pushf
xchg
push
mov
cmp
jb
mov
jo
mov
jg
test
mov
xchg
out
popa
mov
inc
adc
outsl
or
cmp
stos
cmp
and
rcr
and
mov
mov
cmp
lea
push
jae
xor
in
mov
movsb
dec
insb
mov
fstpl
addr16
movsl
adc
xor
lea
sahf
add
or
mov
dec
mov
or
in
sti
stos
add
in
mov
ja
inc
push
jl
movb
std
and
push
xchg
add
negl
xchg
cmpsb
bound
xchg
iret
sub
cltd
orl
in
xchg
js
stc
mov
or
iret
mov
cltd
lea
jb
xor
xchg
add
sub
adc
dec
fwait
je
jno
jbe
iret
jns
es
xchg
insl
sub
jg
mov
xor
insl
out
pop
call
stos
addr16
jl
jnp
clc
es
xor
das
dec
add
inc
cmp
hlt
fwait
xchg
or
mov
in
les
ljmp
add
mov
lret
pop
mov
inc
cli
jns
sbb
xchg
jne
dec
push
pop
rcll
test
pop
adc
and
mov
and
sbb
cmpsb
imul
push
decl
mov
rcrb
and
mov
test
mov
push
xchg
ja
push
jno
arpl
fisubrl
dec
scas
repnz
ja
jo
jmp
cld
add
popl
add
push
pop
cmp
jp
or
or
das
dec
or
adc
adc
jno
adc
popa
mov
mov
sub
or
and
insl
adcl
int
jno,pn
std
insb
out
push
int3
inc
adc
arpl
xor
rorb
xor
jo
outsl
ret
aaa
loopne
arpl
lods
cmp
and
in
aaa
dec
inc
movsb
pop
lea
mov
jl
aaa
stos
mov
or
cli
add
lds
xchg
sub
cmc
mov
jae
or
mov
mov
pop
nop
mov
add
push
and
popf
adc
and
cmp
mov
test
subb
dec
sub
lret
jle
push
cwtl
cli
push
push
add
mov
rcll
push
xchg
lock
scas
or
fidivl
ret
and
inc
pop
add
jmp
shrb
mov
jp
mov
ret
push
xor
adc
stc
mov
out
pop
add
sti
outsb
dec
daa
sub
jnp
pusha
sub
lds
xchg
mov
es
push
adc
mov
arpl
mov
std
sub
cmpsl
adcb
and
lret
and
andl
arpl
shlb
scas
sub
or
je
repnz
sti
outsl
cli
jae
and
mov
ret
xchg
and
mov
fiaddl
fdivl
jmp
dec
cmpb
xchg
xchg
cmpsl
shrb
jnp
cli
fisubl
dec
enter
jae
in
sar
iret
rcrl
popf
xlat
fcomip
stos
in
push
icebp
sar
mov
jl
push
fcom
sub
mov
cmp
inc
fmulp
pop
mov
cmp
aam
adc
pop
cs
cmpsb
push
popa
and
sahf
mov
lods
outsb
add
lcall
cmpsb
adc
cmpsl
jg
sarl
sub
inc
mov
pusha
xchg
xchg
mov
nop
sbb
xchg
scas
add
aad
leave
mov
xchg
xor
int
movsb
inc
lea
daa
and
mov
idivb
sbb
push
xchg
push
or
int3
test
daa
shll
dec
fcmovnb
imul
xchg
rclb
jnp
lods
andl
insl
mov
lea
push
into
rcrl
and
cli
int3
dec
lahf
cmc
sbb
and
dec
cmp
jno
leave
push
cmp
pop
lods
dec
orb
adc
push
bound
aaa
adc
lods
lock
inc
pop
pop
insb
out
mov
mov
cmpb
clc
repz
xor
leave
mov
or
pop
and
jg
dec
scas
sub
loop
gs
pop
mov
xchg
cs
insb
icebp
sub
jle
jo
push
cmp
scas
cs
jno
sarb
mov
fildll
sbb
cmp
cmpsl
push
pop
mov
gs
mov
pop
inc
lock
sbb
insl
cmpsl
mov
sarb
das
addr16
cmp
das
test
fstpt
xor
aam
cmpsl
mov
and
mov
pop
fs
bound
out
push
xor
insb
cmp
loop
lods
mov
sub
push
mov
popa
gs
adc
test
iret
adc
cmc
cmpsl
cmc
dec
loop
mov
push
or
das
dec
pop
add
xchg
out
jg
jb
ficoml
sub
jno
int
pop
push
ljmp
cltd
pop
mov
add
and
xor
leave
cmp
sarb
jmp
xchg
rclb
cmpsb
pop
sbb
in
js
mov
js
call
xchg
inc
jne
stos
xor
adc
pop
add
jno
sub
xchg
rclb
loopne
ds
xor
xor
jmp
dec
or
mov
or
sahf
lea
rcll
jbe
inc
mov
mov
lock
test
clc
scas
adc
sub
and
push
sub
push
jl
mov
push
mov
xchg
hlt
and
cltd
or
pop
mov
push
mov
xchg
xor
sbb
jbe
push
dec
int
and
test
andl
in
dec
cli
int
push
lahf
sbb
pop
fldl
mov
stc
or
js
scas
outsb
cmpsl
arpl
adc
subl
lods
insl
ljmp
mov
pop
jp
mov
mov
je
add
push
stos
add
pop
insb
xchg
repnz
ds
fistpl
mov
push
dec
xor
cmp
scas
jg
leave
mov
dec
ja
rcll
addr16
out
cmp
dec
cmp
mov
dec
inc
and
popa
mov
mov
xchg
cli
xchg
lcall
or
das
popa
lahf
bound
in
and
lods
cmpsl
cmp
sbb
jb
sti
lods
push
mov
pop
ret
rorl
pop
pushf
into
rorl
xchg
mov
mov
movsb
xchg
inc
cmpsb
lods
jl
jecxz
push
push
orb
int
add
ja
cmp
fldenv
cli
les
jns
imul
inc
and
scas
jp
xchg
lods
cmp
pop
xchg
or
jmp
adcl
lock
ja
add
pop
cmpsl
sbb
adc
icebp
outsb
dec
cmp
and
xchg
stc
mov
aad
and
hlt
popa
jno
xor
add
cmpsb
or
roll
sbb
popf
fimull
test
mov
mov
push
and
mov
loop
fisubrl
sub
in
push
jl
jg
mov
hlt
imul
fisubrs
jmp
out
sub
into
dec
dec
test
mov
jecxz
xchg
loop
xlat
sti
js
sub
gs
jl
sub
hlt
or
dec
ret
and
sbb
xchg
arpl
out
mov
adc
xchg
jne
mov
dec
or
adc
aas
popa
pop
movsl
mov
pop
inc
cmp
sub
add
cvttps2pi
pop
xor
out
jbe
or
pushf
xchg
cmp
aaa
outsb
shlb
and
addr16
adc
mov
mov
jge
mov
psubb
adc
popf
mov
stos
jp
pop
fisubrs
daa
popf
push
add
push
shll
fdivr
mulb
mov
je
or
dec
les
stc
cmpsb
pop
pushf
fldcw
and
sbb
mov
or
in
aad
insl
in
ficomps
outsb
inc
dec
loop
xchg
ret
mov
test
sub
push
imul
in
pop
test
sub
ret
xor
inc
sbb
hlt
jo
into
push
xchg
popf
pop
inc
sub
call
out
adcb
mov
adc
jg
or
stos
lret
pop
inc
pop
cmp
sti
mov
sub
adc
push
outsb
jmp
test
push
jmp
xchg
test
xchg
inc
out
clc
mov
mov
dec
ficoml
sbb
ljmp
mov
jo
mov
fldenv
lahf
stc
xor
in
sbb
jmp
sub
cmp
pop
jmp
rclb
jg
mov
and
daa
sub
addr16
leave
push
mov
imul
movsl
fldcw
lods
push
push
pop
fdivl
xor
cmp
xor
sarl
xor
call
mov
mov
imul
xchg
imul
xchg
aad
push
cmp
iret
xchg
adc
dec
daa
mov
fcmovbe
lret
outsl
jmp
xor
movsl
xchg
pop
aam
mov
xor
jns
nop
scas
cld
mov
xchg
or
fdivrs
mov
imulb
test
mov
shll
mov
daa
je
push
sub
push
divl
mov
push
out
lea
cmp
mov
daa
lea
stos
xchg
into
sub
pop
fsts
in
stos
push
das
insb
cltd
add
in
insl
mov
push
mov
push
adcb
lods
and
mov
call
out
scas
push
repnz
out
dec
cmpsl
pusha
ss
shll
sbb
mov
dec
cli
adcl
popf
mov
pop
pop
push
test
sti
pop
inc
ficoml
adc
filds
iret
adc
ljmp
push
lds
dec
ja
jp
enter
ret
pop
fidivrs
push
loope
inc
insl
jo
cmpsl
push
mov
repnz
aad
pop
loope
movsl
jae
and
dec
ret
stc
dec
cmpsl
add
inc
imul
lret
mov
mov
or
push
adc
mov
dec
cwtl
popf
imul
stos
pop
cmp
mov
and
sbb
pop
sub
insb
and
mov
int
dec
ret
pop
fwait
out
lea
jno
gs
test
fildll
rcl
sub
int
push
loopne
jp
mov
rorb
xor
hlt
and
out
cmp
arpl
push
test
jae
lret
lret
lods
lea
jl
leave
pop
setl
xor
cs
mov
inc
or
add
jne
test
imul
dec
movsl
or
or
loop
sub
mov
icebp
lods
and
pop
sub
je
mov
lods
pop
mov
popa
test
pop
add
lods
leave
mov
mov
daa
pop
pusha
jne
ret
adc
push
or
cmp
and
test
aas
mov
jge
push
or
subl
adc
adc
push
cmpsl
or
cmp
ficoml
or
pop
and
and
pop
push
fstpt
jp
mov
insb
sub
adc
pop
jne
arpl
test
push
daa
outsb
cmpsl
out
pop
popa
add
cmp
lods
test
jo
je
adc
inc
push
pop
sub
or
ret
pop
jecxz
push
aad
subl
or
mov
push
enter
adc
cltd
pop
inc
lods
mov
jmp
repz
and
stos
sub
add
fldt
add
cmp
ljmp
push
jmp
lret
add
push
or
push
movsl
int
cmp
dec
sbb
into
movsb
adc
aad
fsubrl
cmc
out
in
fisttpll
test
and
and
fildl
dec
movsl
cmpl
push
fucom
arpl
test
adc
fs
xchg
and
dec
lods
stos
or
mov
cmpsl
je
insl
out
inc
jecxz
sbb
lret
cmpsl
andl
jmp
es
cmp
xor
cmpsb
call
pop
arpl
pop
dec
push
lds
insb
or
xor
or
pop
jbe
fcoml
or
ljmp
pop
and
insl
lds
aaa
insl
sub
cli
in
jmp
inc
or
push
cmp
or
insb
nop
or
adc
in
dec
sub
xor
mov
lea
out
and
fxch
mov
xor
aaa
or
movsl
mov
fstpt
xchg
jge
mov
add
mov
xchg
or
imul
mov
cmc
mov
xchg
xchg
or
pusha
and
and
dec
cmc
pop
das
push
ljmp
cmp
test
push
lea
push
movsl
subl
movsl
cmp
cli
or
adc
cmp
imul
fs
imul
shr
fwait
jl
nop
std
add
add
lahf
icebp
gs
adc
cmpsb
in
add
rcpps
jp
lds
push
cmp
fnsave
and
and
in
enter
push
imul
push
out
pop
and
cld
movsl
cmpsl
pop
xchg
inc
push
cwtl
loopne
push
ljmp
ja
mov
test
xorb
leave
xlat
push
idivl
push
mov
clc
in
aaa
mov
daa
lods
or
adc
pop
add
cmp
lea
jno
arpl
cmp
lea
push
cmp
in
bound
and
or
lahf
les
add
and
lea
mov
cs
cmp
in
push
pop
popa
dec
out
and
aaa
lea
pusha
lea
pop
outsl
test
mov
xchg
push
outsl
lods
cmp
movsl
in
jge
cltd
lods
daa
cmp
mov
and
in
rorl
mov
dec
bound
cmp
sub
in
xchg
and
lret
aaa
xchg
lods
iret
movsl
xchg
xor
cli
add
adc
cltd
mov
ret
in
iret
sub
shlb
and
insl
lahf
mov
or
sarl
pop
adc
addl
gs
mov
jmp
aad
insl
cmp
add
pop
mov
mov
mov
popl
cltd
clc
popa
shll
or
or
dec
sub
ret
push
xlat
and
movsl
ds
jbe
or
dec
dec
and
jnp
mov
xor
adc
jge
and
sub
push
lods
movsl
mov
popf
xchg
in
in
cmc
sub
sub
cmp
jne
add
adc
pop
jl
je
ja
jl
inc
pop
push
lods
mov
in
ja
mov
fdivs
jb
mov
sub
stos
cmpsl
lahf
dec
and
jecxz
xor
and
test
rcll
mov
je
pushf
in
outsl
fwait
dec
cs
fldt
mov
je
je
sub
adc
cmp
sub
xchg
push
nop
pusha
int3
lret
into
fcomip
std
adc
out
dec
test
or
cmp
xchg
gs
imul
in
sbb
test
pop
popa
dec
mov
dec
pop
gs
mov
sbb
cmpsb
and
das
jg
jbe
xchg
inc
adc
xchg
iret
jo
rolb
jg
adc
pop
xchg
cwtl
into
dec
subb
popa
int3
imul
hlt
pop
insl
mov
xchg
add
clc
loopne
fsubr
inc
sub
push
dec
xchg
push
call
jg
test
repnz
das
sub
sbb
pusha
andb
in
and
fnsave
lahf
or
jge
dec
sub
xor
in
mov
shl
negb
dec
imul
push
iret
pop
and
lods
test
popa
or
xor
call
ret
cmp
or
loop
or
jp
fbld
iret
mov
xchg
sub
jmp
mov
mov
out
and
mov
adc
sub
jno
popa
mov
xor
push
inc
inc
in
inc
or
pop
and
ja
inc
mull
cmpsl
in
sub
mov
xchg
mov
push
or
outsb
lret
aam
int
aaa
add
lcall
outsb
int3
pop
rcrb
aaa
jg
xchg
scas
scas
jno
and
jno
dec
popl
xor
mov
sub
and
fmuls
and
test
hlt
fwait
mov
pop
or
mov
outsb
jle
push
repnz
mov
add
inc
arpl
pop
cli
pop
mov
gs
jae
decl
aaa
lods
mov
mov
or
mov
lock
jle
imul
mov
dec
jns
add
jb
mov
jecxz
ds
mov
xchg
xchg
or
jbe
inc
in
and
cs
pusha
ljmp
push
or
dec
fnstsw
seta
lods
fisubrl
out
or
cmp
sub
test
lret
or
sbb
je
xor
in
movsl
pop
gs
jb
xchg
icebp
and
push
or
jl
aas
stos
js
arpl
icebp
sbb
cmc
insl
push
outsl
out
scas
iret
stc
mov
mov
leave
call
insl
push
test
mov
jg
cmp
fcmovne
and
adc
scas
fbld
push
clc
arpl
pop
pop
int
out
mov
das
in
pop
jl
or
ret
jno
push
jp
xchg
cmp
adc
pusha
ret
ret
mov
repnz
int
aas
add
inc
lcall
jae
imul
add
push
es
mov
mov
inc
pop
dec
or
aaa
dec
and
xchg
mov
repnz
jle
push
add
jae
loopne
and
jnp
or
test
loopne
and
inc
push
jns
mov
inc
aaa
cmp
mov
or
sbb
je
insb
mov
or
push
fs
pop
sub
push
mov
in
cmpsl
jbe
repz
push
mov
repnz
cmp
mov
push
cs
insb
popa
dec
mov
cmp
dec
loope
sbb
fisubl
or
adc
push
dec
fsubl
aad
loop
mov
call
fidivrs
cs
out
pop
iret
cmp
out
in
jp
cvttps2pi
rorl
lods
popa
mov
cltd
js
jp
mov
jge
aad
sbb
jmp
inc
lds
fnstsw
xor
lds
push
nop
outsl
in
and
inc
mov
dec
sbb
mov
xor
cmpsl
std
aaa
scas
imul
xor
lret
movsl
mov
fiadds
mov
pop
or
inc
lods
lock
movsb
dec
je
adc
test
das
xor
je
mov
int
movsl
and
lret
mov
pop
imul
pop
repnz
movsl
dec
push
loop
call
xchg
loop
out
jle
rcrl
enter
lea
in
mov
or
pushf
push
dec
lods
imulb
fstpl
sbb
or
lods
popa
dec
int
jno
insb
dec
mov
lods
int
mov
lcall
lods
pop
std
mull
adc
xor
hlt
or
mov
int
mov
pushf
or
sbb
jnp
pushf
jno
divb
pop
shll
xor
push
in
sbb
ljmp
mov
lds
std
subb
in
mov
ja
jl
jae
pop
mov
sub
dec
repnz
jp
and
ljmp
imul
stc
test
or
addr16
mov
fwait
push
lcall
loopne
ja
jg
and
dec
repnz
xchg
and
scas
push
lcall
xor
pop
push
xchg
scas
mov
fldt
add
ficompl
lds
popf
into
and
andb
sbb
dec
daa
iret
movsl
cmp
inc
sti
imul
and
mov
sahf
arpl
push
mov
lods
fwait
rclb
cmp
cmp
lds
lea
and
lea
mov
add
mov
out
mov
prefetch
or
adc
mov
fdivs
cmp
xlat
mov
xor
mov
and
mov
cmp
and
jge
ror
mov
and
imul
rcrb
scas
data16
cmp
jl
repz
icebp
cmp
fiaddl
push
and
mov
outsb
leave
and
fs
lds
sub
cmp
sti
sub
pop
mov
jne
cmp
pop
pop
mov
int3
stos
jo
arpl
ljmp
lods
or
mov
push
mov
mov
lea
mov
lods
dec
aaa
sub
mov
pop
repnz
xor
xchg
sub
or
mov
push
jmp
out
test
test
fcoml
ja
and
inc
loop
enter
push
lret
mov
pop
nop
xor
xchg
sub
cmc
xor
fstpt
sub
push
push
mov
mov
mov
or
sbb
jl
jmp
xchg
and
enter
inc
out
lock
or
sub
xor
in
outsl
rorl
sahf
out
xchg
aaa
cmp
mov
movsl
aaa
and
cs
movsl
lret
nop
in
jecxz
push
das
clc
mov
mov
dec
jbe
shll
dec
das
shlb
adc
bound
xchg
aaa
or
lds
jne
imul
jne
lahf
xchg
dec
adc
daa
inc
lds
and
pop
or
mov
mov
rcrb
sub
xorb
call
xor
push
adc
mov
loop
shll
sub
push
outsb
loopne
pop
enter
clc
cmp
scas
stos
inc
fwait
nop
push
imul
inc
add
hlt
xor
lahf
lock
ja
mov
popa
adcb
lods
mov
pop
insl
jle
js
hlt
popf
add
adc
into
add
stos
imul
ljmp
jecxz
jg
mov
sahf
fs
sbb
fs
pop
or
sbb
jecxz
imul
stc
add
jg
push
loopne
popa
mov
loopne
jg
mov
mov
ret
popa
push
lcall
lahf
rcrl
push
call
sbb
dec
testl
lea
hlt
in
dec
inc
push
mov
and
mov
push
push
push
in
mov
cltd
movsl
and
movsl
int
jmp
push
sub
sbb
xchg
cmpb
mov
imul
loop
inc
cmpsb
pusha
mov
lcall
stos
push
fs
in
pop
xchg
mov
fisubrl
adc
or
xor
shrl
fidivrl
iret
xor
dec
nop
sbb
adcb
lcall
pop
test
pop
or
loopne
clc
lods
xchg
sub
jge
inc
xorb
cmp
adc
filds
and
pop
pop
jl
mov
or
xchg
movb
pop
mov
dec
add
cltd
pop
stc
nop
sub
push
shlb
scas
mov
mov
les
push
push
outsb
xor
mov
mov
or
mov
loopne
in
cmp
cmp
insl
mov
and
xchg
pop
xchg
mov
popa
mov
xchg
mov
into
cmp
outsb
js
or
add
lds
jmp
adc
js
inc
dec
orps
test
out
and
adc
inc
mov
inc
jae
pop
and
pop
clc
lret
pop
mov
add
fiaddl
fsubr
jge
lods
shl
cmpsb
inc
xchg
clc
jecxz
test
in
inc
imul
das
in
call
mov
mov
in
mov
test
and
ja
inc
hlt
test
push
cmp
fs
int
inc
out
rcrl
or
shrb
sbb
mov
inc
sub
scas
iret
pusha
popa
fdiv
mov
and
mov
mov
lahf
sub
mov
mov
repz
clc
inc
pop
mov
arpl
push
test
arpl
or
push
push
sub
inc
adc
add
negb
jne
xor
lret
loope
pushl
cmp
in
mov
repz
ds
sbb
sub
in
outsb
xchg
ja
scas
dec
mov
dec
nop
insb
add
cld
lahf
dec
popa
in
ret
ret
inc
mov
cmpsl
in
das
clc
out
call
test
mov
getsec
push
in
mov
imul
and
xor
xchg
cmpl
add
xchg
imul
push
movsb
int
add
fstps
add
adc
stos
add
fiadds
mov
subl
adc
push
xor
inc
insb
and
add
xchg
xchg
jge
out
insl
and
inc
xchg
movsl
stos
repz
mov
aaa
sub
dec
or
push
nop
gs
std
loope
pop
lea
cs
loop
cwtl
int3
sbb
sub
loop
mov
jecxz
push
jnp
stos
fistpl
sbb
mov
inc
mov
jecxz
pushf
das
dec
sub
je
adc
aad
ljmp
or
loop
fwait
and
pop
ds
lcall
add
or
aad
xor
out
cmpsb
adc
mov
jns
in
add
adc
popf
xchg
loop
mov
dec
in
loope
outsl
psrad
setno
inc
idivb
push
pop
loop
mov
jecxz
je
push
add
jo
push
hlt
mov
push
pop
and
sahf
mov
mov
or
cmpl
cmpl
imul
xchg
outsl
lcall
jle
mov
push
xchg
rcll
xchg
jecxz
js
into
cmpsl
lret
imul
sti
insl
push
or
push
fstps
mov
fidivs
pusha
mov
sub
xor
mov
xor
call
dec
sbbl
push
ret
mov
xchg
ds
cmp
imul
mov
scas
adc
scas
loopne
popa
int
mov
jecxz
jbe
inc
mov
loope
sbb
cmp
xor
sub
push
pop
mov
jns
dec
or
fs
pop
pop
lea
adc
repnz
pop
add
jne
inc
sbb
xlat
jg
and
shll
jo
mov
mov
lahf
pop
or
mov
fstpl
dec
pop
test
cmp
out
push
dec
lods
repz
mov
aaa
in
push
imul
out
nop
aaa
mov
fsubrl
jecxz
pop
lahf
or
lcall
lea
dec
mov
stos
and
daa
jg
in
aas
cmp
inc
sub
sub
aad
add
xchg
push
cmp
mov
or
lret
cmp
ficomps
push
out
push
aad
inc
leave
scas
lock
mov
insl
cli
je
fldenv
adc
cmp
sbb
out
shlb
call
pop
popa
mov
adc
pop
lahf
mov
iret
and
inc
das
shll
aaa
int
xor
xchg
jmp
hlt
mov
imul
das
add
mov
add
jecxz
pop
dec
inc
arpl
lods
and
lock
inc
lahf
mov
pop
leave
stos
mov
lcall
and
mov
imul
jle
or
or
pop
cld
adc
hlt
movsl
pop
inc
dec
cmp
inc
and
push
add
push
xor
insl
ficoms
sahf
jmp
movl
dec
inc
jns
mov
xlat
out
mov
mov
cmp
imul
sahf
dec
push
dec
fildl
int3
push
rcrb
and
loope
jge
pop
sarb
jnp
fldt
fstps
sub
flds
inc
popf
rcrb
mov
jl
mov
and
enter
ljmp
add
leave
mov
cs
xchg
int
jmp
loope
lods
pop
daa
ret
pop
sub
xchg
in
push
sarb
iret
je
dec
fstps
cmp
jp
aad
pop
pop
daa
mov
pop
add
mov
push
sbb
pop
pop
inc
or
lahf
mov
mov
test
cltd
pusha
test
dec
fst
cmp
lea
bound
push
push
mov
std
add
in
push
add
in
mov
xor
push
bound
icebp
and
inc
in
out
imull
or
leave
push
inc
movsl
mov
test
push
leave
lcall
mov
cmpsb
sub
leave
and
mov
mov
loop
push
push
and
cltd
adc
mov
out
inc
sbb
sbb
or
jbe
sub
inc
aaa
xchg
aaa
inc
cmpsl
into
jmp
push
cmp
in
aas
test
sbb
inc
adc
dec
dec
jae
adc
pop
or
adc
push
stc
jg
out
decl
xchg
stc
push
int3
aaa
push
push
jle
testl
add
in
repz
cmpsl
jmp
inc
je
add
dec
movsl
jg
dec
lea
xor
lahf
adc
cld
sbb
aaa
das
or
jp
push
clc
xor
shlb
out
push
mov
repnz
xchg
movsl
pop
pop
inc
jmp
push
xchg
popa
sarb
and
ds
push
add
push
into
outsl
mov
mov
in
and
dec
subb
cmp
pop
loopne
movsl
dec
mov
pop
jns
fimuls
and
and
pop
xlat
xor
mov
adc
pop
add
pop
xor
add
lds
mov
and
mov
test
and
xchg
push
add
fisubs
xor
pop
or
pop
add
mov
add
scas
andl
jmp
xor
cld
lods
inc
cltd
lret
cltd
dec
ja,pn
bnd
and
outsb
add
pop
push
jl
push
inc
lret
dec
fsubs
jb
ss
test
xlat
lods
dec
mov
jg
jmp
insl
cmc
mov
rcrl
push
mov
mov
in
loop
fildll
or
push
jg
stos
pusha
gs
cwtl
int
andb
adc
dec
out
call
pop
fiadds
jp
sbbb
push
add
notl
popf
shrb
jns
sub
sahf
out
sbb
in
and
push
je
and
lea
jns
outsl
pop
pop
je
inc
bound
mov
into
cmpb
js
sbb
dec
or
dec
ja
and
test
popf
xchg
int3
add
stc
int3
mov
sub
out
mov
mov
jno
cmpb
cmpsl
call
mov
cs
push
insb
mov
int3
xor
and
shrl
int3
je
in
rcl
hlt
inc
cmp
mov
push
or
cmpl
jb
scas
sbb
xchg
addr16
les
jmp
out
test
push
in
call
daa
mov
push
jb
in
mov
out
and
pop
cmp
ja
outsb
pop
sub
add
mov
xchg
cmpsl
mov
push
cmp
inc
cmp
inc
lds
or
adc
jl
xor
cmpsl
push
mov
xchg
jecxz
cwtl
stc
and
test
sahf
cmp
in
gs
aad
stc
jg
mov
movsl
cmpsl
sub
das
stos
xor
dec
push
int3
adc
and
sub
dec
pop
out
push
enter
mov
and
mov
imul
shll
xchg
mov
xchg
sbb
mov
enter
pop
fldt
addr16
cmp
decl
ds
icebp
enter
dec
jo
pop
into
aaa
insb
xchg
outsb
sbb
fnstenv
insl
add
arpl
mov
sbb
cmpsl
int
js
das
jno
pop
sti
insb
clc
jae
push
outsb
js
fcompl
and
call
pop
ret
mov
outsb
lret
fidivs
loopne
sub
push
lcall
mov
inc
push
pop
xchg
mov
pop
push
inc
jnp
mov
or
jecxz
mov
aam
sbb
add
stos
mov
jmp
jmp
lea
cmpsl
or
mov
push
out
push
enter
fildll
push
outsb
das
dec
push
push
mov
daa
hlt
cwtl
pop
dec
cmpsl
cmp
mov
jl
repz
jl
lea
faddl
and
jno
push
mov
scas
imul
stos
std
or
inc
mov
lahf
nop
mov
cmp
pop
mov
hlt
pop
iret
test
insb
jp
ja
pop
int
jno
mov
push
shlb
inc
mov
inc
push
add
lods
pop
mov
mov
dec
xchg
jae
mov
pop
mov
jno
ret
add
ret
lds
mov
jnp
in
loope
pop
movsl
and
loope
in
lds
jge
add
jecxz
lret
sub
sti
and
xchg
add
jecxz
dec
adc
add
faddl
or
loope
sub
xlat
imul
pop
inc
movsb
xor
outsb
gs
mov
pop
inc
repnz
inc
pop
je
test
or
xlat
cmp
fisttpl
lretw
add
jp
insb
mov
lods
gs
arpl
and
push
sub
add
ficompl
lret
rcrl
test
xchg
js
push
ljmp
stos
dec
jge
subb
push
adc
loope
cmp
mov
inc
ljmp
jge
inc
add
shll
pop
add
in
pop
bsf
int
and
and
je
fs
jl
jmp
jecxz
mov
cmpsl
pop
mov
int3
mov
dec
or
xor
incb
xor
jge
dec
pop
insl
sbb
cmp
cmpsl
pop
cld
mov
lcall
and
mov
xchg
jp
sub
lcall
sub
mov
push
sar
or
fwait
dec
ffree
push
lret
lds
outsb
movsb
mov
gs
pop
jae
ret
out
jge
fisubs
pop
es
ljmp
jle
cmpsb
aad
sub
in
cmp
loop
mov
fstpt
cli
push
xchg
inc
inc
and
or
test
xchg
fldl
stos
mov
imul
aad
pop
loop
dec
mull
inc
mov
test
dec
dec
aas
lea
in
imul
in
test
fmuls
in
not
or
stc
gs
xchg
dec
loopne
mov
lock
out
mov
jmp
sbb
jnp
lcall
fdivl
addr16
insb
jns
notl
push
sbb
bound
out
jo
mov
cmp
sbb
cmpsl
jl
scas
lcall
lahf
xchg
mov
stos
jb
dec
jl
dec
sub
inc
fildll
sub
daa
div
xchg
push
loopne
int
xchg
mov
mov
jge
aaa
fcoml
pop
fisubrl
lods
add
jge
push
adcl
cltd
or
in
push
add
xchg
jecxz
test
out
jo
mov
mov
jle
push
or
clc
call
mov
or
or
bound
lret
and
dec
insl
mov
push
out
lea
cmp
sbb
and
les
out
ror
jbe
aam
xorl
mov
les
andl
outsl
test
rol
mov
loop
mull
mov
clc
jo
stos
jle
push
loopne
or
pusha
jg
and
sbb
pop
in
gs
stos
mov
mov
icebp
outsl
or
and
testb
pop
jnp
enter
inc
mov
stos
push
push
or
jge
xor
idivl
mov
je
in
cmp
andl
nop
into
inc
adc
fs
pop
pop
in
jno
iret
arpl
divl
fstl
std
sub
cmp
xor
into
js
xchg
push
push
xor
push
mov
pop
and
push
or
inc
bound
mov
cmp
pop
popf
es
jne
addl
call
scas
jg
lahf
adc
mov
lret
sbb
jmp
cmp
out
std
push
test
test
in
sbb
or
mov
push
push
sub
pop
adc
jno
sub
mov
and
or
mov
dec
test
arpl
out
test
pusha
lret
or
mov
int
incl
aaa
xor
in
sbb
push
jp
or
sbb
loopne
addr16
lds
fiadds
cmp
jbe
je
fbld
cmp
arpl
cld
bound
je
shrb
dec
adc
loop
int3
lcall
xchg
test
jnp
lea
sbb
dec
dec
stos
xor
or
add
mov
fs
scas
push
mov
pop
test
add
push
mov
mov
popa
lods
mov
call
hlt
outsl
mov
mov
out
adc
lea
insb
xchg
push
inc
jg,pt
inc
paddusw
add
lcall
test
and
clc
pop
mov
leave
clc
in
das
pop
jl
sub
push
mov
mov
aad
or
xchg
dec
add
pushw
cltd
jl
loopne
outsl
lds
dec
in
sbb
fisttpll
lods
ja
mov
adc
lahf
std
pop
xor
pop
jnp
fstp
bound
cmp
movsl
sbb
jb
mov
stos
push
addr16
pop
xchg
sub
pop
add
js
daa
xchg
xchg
jl
and
and
xor
lahf
and
pop
mov
pop
mov
imul
mov
pop
push
and
clc
push
xchg
xchg
adc
or
jg
test
or
test
dec
test
cmp
subb
pop
shrb
inc
dec
fwait
in
push
lahf
in
jl
jl
cmpl
sbb
sub
lea
inc
popf
dec
loope
stos
adc
add
hlt
sub
dec
jl
lret
insb
sti
imul
popf
xor
in
out
lods
add
jg
dec
cmp
lods
cmp
push
ds
mov
mov
mov
cmc
popa
js
arpl
mov
or
std
mov
inc
insb
mov
das
movsb
test
in
movsb
js
aaa
add
ljmp
cld
leave
xor
xor
adc
xchg
pop
xor
mov
movsb
fldcw
and
sbb
mov
push
shlb
push
fidivl
jp
jmp
into
in
mov
out
mov
sub
jne
mov
mov
adc
cmp
stos
sarb
out
mov
mov
or
add
push
dec
das
push
aaa
std
xchg
loop
imul
iret
inc
cmp
fdivl
and
ljmp
pop
lock
pop
xchg
stos
and
int3
es
and
xchg
xchg
outsb
cltd
inc
sarb
testb
mov
out
bound
push
cmp
int
pop
aad
jecxz
outsl
sbb
sti
or
and
mov
xor
sbb
loopne
mov
dec
lret
or
inc
dec
jae
outsl
sub
push
xchg
lahf
adc
dec
movl
stos
in
stos
xchg
xchg
loopne
daa
jl
ror
xlat
fdivrs
push
xchg
pop
sub
daa
sub
sti
fidivl
shrb
popa
cmc
js
add
sub
jno
xor
mov
mov
mov
popa
int
mov
test
lahf
xlat
sub
out
mov
faddl
sbb
inc
rclb
scas
push
mov
mov
push
or
pop
xorl
and
add
dec
arpl
fidivs
out
mov
and
mov
or
xor
dec
aaa
jg
add
repz
inc
inc
sahf
fldt
in
cmc
fwait
rol
pop
in
mov
and
mov
push
sti
lods
xor
inc
adc
jb
cmp
int
cmp
inc
das
pop
inc
jnp
mov
mov
js
jg
push
fs
fdivrp
dec
mov
hlt
cmpsl
incb
rcll
sti
pop
add
loope
jnp
cmp
xlat
fdivs
aad
lods
jmp
inc
pop
pop
popa
ror
shrb
jmp
push
cmp
cmp
dec
scas
xchg
jecxz
dec
or
popf
enter
dec
movq
das
int
adc
or
mov
scas
repnz
mov
xlat
notb
cmp
jae
cmc
cmp
lret
stos
inc
ja
xor
xor
test
cli
aaa
add
jo
mov
add
mov
add
ja
cwtl
sub
cmp
xor
jo
dec
adc
dec
leave
lock
inc
or
ljmp
mov
movsl
jbe
out
mov
idivl
sub
or
popf
pop
lods
cmp
outsb
daa
pop
je
int3
and
lods
frstor
fwait
wbinvd
xlat
pop
mov
mov
inc
xchg
pop
stc
lods
lahf
cmp
push
je
mov
dec
sub
ret
mov
bound
or
hlt
insb
adc
push
pop
mov
add
in
mov
push
inc
inc
sub
xlat
adc
xor
sbb
or
cwtl
pushf
mov
inc
ja
mov
imul
movntps
outsb
add
mov
stos
sub
xor
sbb
pop
and
pop
movsl
iret
ljmp
mov
imul
lods
push
jge
lock
into
cmpsl
mov
cmp
mov
adc
push
dec
mov
outsl
arpl
dec
fucomi
loope
loop
ljmp
movl
popf
movsl
iret
push
fs
test
cld
in
sbb
and
jae,pn
sub
lock
pop
add
outsb
in
mov
das
inc
sarl
test
lahf
inc
pop
test
mov
xor
or
dec
sbb
and
or
cmpsl
stos
jmp
lea
pop
cmc
adcl
dec
xchg
mov
int
cmc
pushf
mov
adc
ds
lcall
jb
gs
xchg
or
jno
mov
mov
xchg
pop
fadds
pop
xchg
jmp
xchg
add
popa
push
xchg
dec
fidivs
in
lret
les
xlat
push
out
in
fnstsw
cmp
comiss
arpl
lcall
jmp
fnsave
mov
ds
push
in
jb
arpl
mov
mov
test
xchg
sub
iret
jno
cmp
xlat
pop
data16
out
addr16
mov
xor
cltd
pop
dec
loope
sub
pop
outsl
dec
icebp
lahf
dec
cwtl
test
and
rcr
js
mov
xchg
je
aad
add
addr16
cmp
lods
cltd
cmc
decl
call
insl
cmp
mov
lcall
or
loope
adc
cmp
sub
je
int3
mov
in
push
rol
pop
inc
loop
aad
scas
mov
mov
mov
pop
xlat
lods
ret
into
inc
cli
repnz
push
mov
push
dec
mov
adc
test
ret
add
mov
addl
test
mov
test
xchg
int
jg
shrl
mov
add
ret
in
in
popa
dec
mov
push
scas
insl
lods
fdivs
int3
lret
dec
adc
adc
push
dec
cmc
dec
jb
mov
pop
inc
aaa
pop
mov
dec
cmp
adc
mov
xchg
push
test
in
push
aad
outsl
sbb
movsb
jle
outsb
dec
int3
test
std
cli
dec
xor
lods
ret
add
incl
int
and
insl
ret
rcll
scas
jle
or
arpl
nop
pushf
insb
enter
xchg
addl
push
xor
test
ds
popa
movsb
inc
lea
mov
test
test
fcoml
fsts
les
addr16
cmpsb
insl
cmpsl
adc
cmpsl
dec
and
cli
movsl
scas
imul
fwait
int
mov
dec
or
mov
xchg
mov
repz
in
xchg
dec
test
xchg
ja
icebp
pop
mov
and
clc
jge
cs
jecxz
js
in
std
jno
and
or
popa
fdivr
jmp
and
sbb
cwtl
pop
je
andb
sub
sar
add
jge
pop
mov
cs
sbb
stos
lods
aad
lock
xor
jg
test
mov
dec
and
add
cwtl
mov
push
jmp
jns
adc
mov
mov
xor
cwtl
xor
int
arpl
xor
loop
adc
arpl
test
fdivs
aam
and
jecxz
cmp
in
daa
arpl
push
sbb
daa
test
movsl
mov
fcoml
test
subb
inc
add
pop
daa
cmp
insb
jno
and
and
shll
mov
sbb
sti
and
pop
dec
sbbb
in
mov
int
ljmp
lcall
xchg
mov
test
push
lods
shrl
or
call
nop
stc
insb
push
pushf
outsl
adc
push
je
xor
insb
mov
or
ja
mov
sarb
sub
sbb
or
xor
sbb
push
xchg
push
insl
adc
push
orb
stos
jecxz
sub
fisubrs
lahf
int3
inc
in
mov
or
add
ficoml
xor
xchg
cld
pop
mov
push
shlb
in
outsl
addr16
pop
push
in
adc
mov
jl
push
lods
lea
data16
sub
mov
stos
mov
sbb
jmp
insb
xor
cmpsl
xlat
repnz
mov
or
out
cwtl
mov
rorl
dec
xor
outsb
dec
jno
lock
add
rorb
mov
dec
lahf
sbb
movsb
aam
lahf
sbb
jno
into
mov
pop
insb
push
cmp
and
fbld
mov
mov
mov
ds
sbb
pop
test
cmpsb
popa
mov
lret
test
test
leave
push
sub
lock
and
inc
dec
sub
ljmp
dec
or
mov
test
dec
daa
inc
lea
xchg
mov
jns
mov
mov
pop
leave
je
rolb
int3
clc
sub
in
and
jecxz
xchg
shrb
mov
mov
mov
scas
jno
push
outsl
mov
das
into
scas
lea
or
clc
xor
pop
fcmovnu
and
test
rcrl
cmp
loop
pop
mov
push
jne
pop
lea
add
pop
outsb
cmp
jle
je
mov
jno
popa
das
sahf
cmp
sbb
test
aam
dec
push
inc
psubusb
cs
fsubrl
and
inc
adc
pop
outsb
shrb
lds
or
jb
into
imull
xor
fisubrs
mov
je
sub
hlt
xor
adc
je
in
or
dec
cmpsb
lea
jns
xchg
dec
mov
hlt
push
sub
icebp
aad
push
pop
lods
fs
mov
cld
arpl
jns
inc
addr16
in
cli
popa
pop
gs
pop
dec
adc
adcl
pop
sahf
sbb
in
push
cs
lcall
push
lea
shrb
fsubl
push
ret
outsl
push
sub
daa
das
xlat
inc
das
xlat
push
xor
sub
pop
xchg
cmp
imul
outsb
push
loopne
xor
leave
sub
pop
shlb
jo
cmp
or
call
cmp
sbb
push
and
movsl
fildl
addr16
and
int
and
or
gs
inc
dec
daa
adc
add
gs
ficomps
lods
adc
adc
hlt
cmp
cs
xchg
imul
xlat
dec
lcallw
andb
sbb
adc
arpl
imul
xchg
adc
les
mov
test
cmpsl
pop
out
mov
inc
fisttps
jle
cmpsl
dec
lret
pop
clc
aaa
aas
xchg
adc
fimuls
jl
mov
and
insb
enter
cs
or
out
outsb
mov
outsb
dec
mov
lock
push
in
cmc
mov
adc
push
and
and
add
pop
and
fisubrl
dec
cmpsl
mov
mov
xchg
push
cmp
mov
popa
push
jl
push
xchg
xchg
rorb
ror
and
lods
pop
aam
pop
push
dec
xchg
pop
pop
jl
jne
push
ds
jle
subl
je
sub
adc
cmpsl
or
dec
std
test
out
sbb
adc
pop
stos
pop
mov
xor
adc
adc
xlat
int
inc
push
xor
pop
hlt
sbb
mov
jb
repz
sub
mov
rclb
sub
repnz
cmp
pop
imul
daa
ret
in
lods
lahf
jge
xchg
cs
loop
mov
out
jbe
mov
outsl
adc
popf
and
outsl
pop
pop
mov
pop
addr16
inc
insl
popa
insb
cmp
cmp
or
inc
fstl
mov
ja
stos
das
cs
out
mov
jge
push
cmpsl
loope
lds
daa
cmp
hlt
bound
fisttps
jb
insb
push
push
mov
add
pop
stos
out
imul
cltd
das
imul
adc
push
lods
mov
hlt
bound
push
mov
and
pop
dec
stos
add
mov
rcrb
fildl
daa
je
cltd
movsl
or
xchg
outsb
dec
rcl
jmp
sbb
iret
pusha
mov
jae
scas
test
sbb
je
push
jmp
es
fcmovne
aam
aam
cmp
popa
xor
movsl
out
dec
and
push
mov
xchg
popa
push
outsb
or
sbb
dec
inc
push
xor
adc
cmpsl
add
dec
ljmp
push
adc
sub
xlat
xchg
push
and
sbb
je
mov
fucomi
aam
inc
aas
mov
cmp
dec
in
mov
repnz
int3
test
outsl
mov
mov
adc
jecxz
clts
imul
xor
and
addr16
rorb
insl
mov
out
insl
dec
jbe
jne
push
leave
xchg
lahf
popf
and
insl
jp
test
mov
mov
movsl
fdivrs
jge
sbb
mov
aaa
cmp
movsl
push
jge
rolb
cmpsl
jl
pop
and
fstpl
jge
pop
aaa
stos
sahf
cmp
mov
popf
and
and
add
xor
dec
into
in
popf
cwtl
xlat
aaa
insb
adc
imul
cmc
lods
mov
or
xlat
and
cmp
es
je
aaa
cmp
jge
int
mov
pop
push
xor
or
gs
adc
and
in
testl
and
mov
or
iret
xor
cmp
jne
push
jge
mov
add
add
out
sbb
xchg
sbb
jle
or
cld
jo
adc
xor
jl
xchg
and
xor
bound
mov
mov
data16
mov
sub
push
add
imul
movsl
dec
push
hlt
lcall
popf
add
dec
test
lea
out
or
add
decb
dec
sbb
fsubl
dec
aad
je
push
xor
fs
cmp
fs
xchg
push
adc
push
sarb
std
fiaddl
pop
add
sbbb
mov
imul
mov
cltd
jecxz
push
int3
cmc
popa
adc
mov
inc
jb
pop
pop
mov
fistl
into
pop
int
mov
mov
shrb
inc
jl
add
stos
lods
bound
shll
fldenv
cmp
loop
push
or
lahf
cmp
enter
mov
push
sbb
popa
fidivrl
mov
or
cli
jae
cltd
cmpsb
stos
ljmp
xchg
and
idivl
insl
or
push
mov
movl
adc
push
and
aaa
mov
out
cmp
mov
push
call
rorb
xchg
xor
add
sub
mov
cmp
pop
cmpl
sub
in
inc
nop
shrl
pop
xchg
or
insl
mov
sub
in
sub
gs
outsl
mov
movsb
mov
pop
scas
or
xchg
mov
add
xchg
lea
or
test
dec
adc
xor
or
and
jb
add
mov
cmpsb
sbb
es
mov
stc
sarb
aaa
movsb
into
mov
dec
daa
inc
insl
in
ss
daa
or
lahf
in
adc
mov
ja
in
fistps
push
sbbl
jae
pusha
es
xchg
stos
jb
jno
in
xchg
inc
push
xchg
out
inc
repnz
shl
mov
sub
xlat
loope
pop
jnp
in
sub
add
and
jmp
mov
push
in
sbb
shll
loopne
enter
test
jo
add
cmp
aaa
sbb
dec
fsubs
or
xor
or
test
mov
aaa
jne
push
pop
dec
shl
cmp
xor
lret
popa
out
jle
das
aas
pop
enter
jae
in
pop
mov
or
add
imul
ss
mov
imul
xchg
dec
adc
inc
jecxz
mov
inc
int
mov
and
aaa
dec
insl
lahf
lahf
mov
adc
inc
ja
clc
jns
test
ficoms
xchg
or
xor
push
or
addl
test
add
add
dec
xchg
pop
add
inc
mov
sub
sbb
cmpsb
inc
adc
sarl
sbb
aas
in
or
out
insl
adc
lea
sbb
adc
lods
hlt
insl
dec
mov
rcrl
scas
xchg
cmpsb
repz
push
arpl
imul
mov
inc
inc
pop
mov
repz
popf
jne
incb
ret
or
gs
aaa
cmp
sub
sbb
test
hlt
jge
popf
cmp
adc
insb
outsb
movsl
jne
fidivs
jge
addr16
sbb
sub
rol
enter
popa
jle
les
jg
fcomip
incl
lods
popa
and
dec
insl
xchg
pop
dec
fnstsw
mov
mov
addr16
mov
push
sarb
cld
push
sub
int
jle
jne
lcall
out
sub
push
mov
sti
pop
mov
clc
lahf
pop
in
mov
dec
or
mov
sbb
xor
insb
mov
add
aad
jg
aad
push
mul
js
into
int3
jge
insl
inc
sbb
cmp
imul
mov
push
popf
in
cmp
out
adc
jg
je
das
mov
in
xchg
cs
pop
push
jb
jns
adc
dec
xchg
lods
mov
add
add
push
mov
js
adc
or
daa
cmp
push
clc
ficoms
push
stos
mov
icebp
pop
scas
pop
imul
add
lods
icebp
in
or
pop
and
fs
cmp
pop
pop
or
mov
adc
and
insl
jns
arpl
movsl
js
popa
in
mov
pop
or
popf
and
lret
lret
fs
ja
jno
xchg
loop
xlat
xchg
and
movsl
imul
pop
popa
popf
push
sahf
fidivrl
inc
in
out
pop
mov
fstpl
test
xchg
jl
adc
lods
jns
jmp
stos
cmp
es
hlt
push
lret
jb
out
test
inc
aas
divl
pop
movsl
sbb
add
adc
mov
mov
mov
lret
cmpsb
fs
and
jg
lret
mov
sbb
sahf
sbb
addr16
dec
xchg
jbe
xor
lods
and
xor
fsub
scas
sub
mov
les
cmp
or
insl
int
adc
pop
mov
pop
add
fdivrl
and
mov
dec
bound
in
stos
pop
cwtl
mov
jne
arpl
mov
ds
pop
aaa
jbe
lods
sub
lods
hlt
pop
shll
shll
jb
pushf
inc
inc
bound
aaa
xchg
cmpsb
shlb
mov
adc
mov
push
outsb
sbb
sti
in
sub
pop
fimull
lcall
mov
mov
sub
xchg
fxch
and
lea
in
lds
loope
mov
repz
mov
lahf
jp
jae
test
cld
add
cmc
push
sbb
mov
hlt
iret
cmp
fwait
iret
mov
arpl
call
loope
hlt
mov
inc
adc
sub
mov
jg
daa
enter
shr
sti
out
popf
or
dec
xor
jo
imul
jae
pop
aad
lock
xchg
je
xchg
pop
jp
pop
inc
arpl
mov
nop
xchg
xor
xchg
inc
sbb
jecxz
cmp
push
pop
or
dec
popa
mov
test
roll
xchg
jg
divb
idivl
test
sub
aaa
add
and
loope
cmp
js
jbe
hlt
repnz
jo
leave
xor
mov
sbb
inc
sbb
dec
scas
dec
in
leave
imul
push
loope
pop
je
scas
push
ja
dec
cwtl
pop
xlat
dec
hlt
push
pop
pushf
cmpsl
mov
pushf
ficompl
mov
std
push
ds
adc
int3
jno
add
insl
inc
jb
ret
pop
bound
mov
test
out
pop
repnz
mov
sub
or
and
xchg
add
gs
hlt
dec
mov
popa
jne
das
sub
push
xor
dec
and
icebp
lea
xor
jae
test
imul
sbb
xlat
sub
mov
adc
movl
xchg
mov
mov
jmp
fs
or
push
ret
fisubs
mov
jl
in
loopne
cmp
xor
and
and
daa
hlt
jecxz
cli
add
cmp
push
fnstsw
fistpll
sti
fs
cmp
lods
je
sub
arpl
xchg
push
orb
or
adc
push
sub
test
or
bound
inc
dec
mov
sbb
cmpsl
lea
incl
out
push
sbb
addr16
insl
sub
lahf
push
pop
or
xchg
les
pusha
and
inc
xchg
js
dec
out
subb
stc
or
rcrl
mov
mov
in
repz
mov
sub
dec
xchg
push
aas
mov
out
arpl
dec
gs
push
stos
push
or
leave
cwtl
cld
jae
mov
sub
ret
jne
mov
sub
dec
lahf
lahf
scas
loop
mov
cmp
fisttpl
pop
test
mov
inc
ret
mov
lods
ds
hlt
pop
cmpsl
jo
test
mov
pop
iret
mov
loop
out
int
out
jge
lods
imul
or
fiadds
pop
mov
shrl
inc
dec
imul
pop
cmp
mov
repnz
push
lret
mov
dec
insl
movsl
dec
dec
pop
mov
jp
xchg
xor
jmp
hlt
mov
mov
adc
daa
in
int3
jge
out
ror
sbb
insl
push
sub
xchg
iret
scas
sub
lahf
pusha
aad
adc
mov
test
dec
andb
add
sub
xor
movsb
popa
lods
dec
cmpsb
fsubrs
clc
pop
and
adc
xlat
lock
fstl
mov
insl
pop
mov
add
mov
push
out
arpl
mov
jge
mov
xchg
bound
ret
add
jae
sub
sub
adc
xchg
xlat
repnz
inc
mov
cmp
sbb
ljmp
adc
in
push
loop
jne
mov
lret
xlat
insl
xchg
xchg
adc
and
aaa
mov
push
aam
pusha
add
mov
or
fs
cli
xchg
int3
add
lret
fs
sbb
int
cmpsl
pop
insl
cmp
std
aam
cmp
test
jge
out
out
das
das
mov
jno
sub
shrb
pop
and
shlb
sub
insl
aad
arpl
lret
push
mov
jge
lcall
in
popf
sub
mov
xor
cs
mov
jmp
cwtl
les
push
daa
or
cs
cltd
daa
test
cmpsl
mov
daa
and
imul
cs
jne
push
sbb
mov
mov
js
sub
int
push
fs
data16
out
test
push
inc
pop
gs
gs
xchg
cmpl
sbb
cmp
mov
dec
and
jne
push
cmc
push
in
and
and
dec
nop
pop
in
pop
lgs
les
lds
push
mov
sub
mulb
and
sub
or
sbb
addr16
addr16
or
aaa
lods
mov
gs
jecxz
inc
addr16
inc
push
test
roll
in
jge
xchg
pop
jae
test
dec
cmp
or
lahf
test
jmp
outsb
cmp
inc
dec
pop
mov
jo
inc
outsb
loope
lea
int3
add
jae
incl
push
sbb
sub
fldl
cmp
movsl
push
jmp
cmp
dec
or
inc
inc
imul
and
inc
call
xor
cmp
push
insl
enter
lea
sub
insl
mov
ljmp
cmp
jns
cmp
mov
outsl
and
lods
adc
inc
jne
cmp
movsl
dec
loope
int
cmp
dec
mov
lods
cmp
outsl
icebp
inc
or
in
and
js
fimull
push
lcall
leave
rcrl
pop
pusha
mov
repnz
jg
xchg
jb
lret
xlat
shll
jb
cmpsl
dec
push
jo
icebp
aad
dec
xchg
popa
mov
jns
lahf
sbb
clc
popf
les
xor
in
mov
jae
lea
dec
fcmovb
out
dec
dec
push
sbb
xor
jb
scas
cwtl
mov
xchg
aaa
ret
test
test
test
dec
jne
jecxz
dec
push
clc
and
insl
xchg
movsl
lahf
or
test
jb
add
and
xlat
mov
lcall
mov
mov
insb
sub
dec
dec
add
testb
iret
adc
mov
pop
dec
fldcw
add
cmp
and
and
sbb
into
fucomi
jg
out
sub
mov
ret
sub
add
mov
loopne
inc
xchg
pop
pop
leave
dec
sbb
fucomp
in
ljmp
lret
push
shlb
or
xchg
sbb
mov
and
pop
mov
cmp
fwait
jno
int
mov
jne
ljmp
test
inc
cld
imul
dec
and
orl
and
push
cmp
je
or
dec
or
testl
cld
cmp
or
outsl
pop
cmp
add
shlb
or
or
sbb
xor
test
cmp
xchg
add
push
insl
lret
mov
xchg
lret
jge
pop
cmp
or
inc
scas
daa
data16
xor
stos
add
dec
mov
cmp
push
jge
out
insl
sbb
sbb
jae
insl
jl
dec
lods
pop
arpl
aaa
mov
test
das
sahf
and
scas
leave
cmp
shr
inc
jns
int
aaa
xchg
mov
jae
imul
sbb
ljmp
push
lods
add
ret
test
sbb
fidivs
gs
lock
insb
add
xchg
cmp
push
jb
inc
and
xchg
aaa
nop
and
xor
sub
xchg
add
cmp
jne
push
jno
mov
xchg
test
xor
add
out
cmc
cmp
insl
test
aad
subl
scas
mov
imul
stos
hlt
ja
and
jne
xor
outsb
xchg
lods
test
ljmp
jo
call
data16
pop
mov
test
ja
aaa
mov
mov
bound
aaa
mov
incl
ret
filds
lock
and
out
data16
je
mov
xor
nop
xor
xor
push
fdivr
cmp
mov
addr16
je
movsl
xor
and
out
ds
xor
decl
out
decl
and
jge
andl
xchg
test
divl
out
mov
xchg
addr16
cmp
jle
outsl
mov
test
outsl
test
scas
sbb
xchg
push
add
out
jecxz
add
fildl
addr16
cmp
das
aaa
mov
inc
outsl
mov
scas
test
xchg
push
iret
jmp
out
ss
sub
add
gs
xor
sub
or
jmp
add
ss
add
inc
iret
jmp
out
push
popa
jge
cmp
outsb
xchg
fiadds
jno
je
mov
cld
fisttps
sbb
je
pop
xchg
dec
incl
mov
pop
xorb
shll
mov
and
out
push
popa
loope
add
imul
popa
jbe
add
mov
push
popa
les
sahf
jle
sbb
stos
pop
popa
push
jge
movsl
push
lods
ljmp
aaa
cmp
jae
mov
cmp
sbb
cmp
add
add
into
xchg
enter
lahf
jg
inc
outsb
outsl
push
int3
sti
rcrb
popa
fistpll
push
push
sbb
loopne
cmp
into
pop
lret
cmp
jb
lahf
jb
inc
imul
rorb
inc
in
insb
rclb
push
push
cmp
sub
xchg
jecxz
xlat
cmc
and
nop
xor
sub
jecxz
sbb
cmp
outsl
int
stos
roll
std
fstl
insl
in
xchg
jle
push
int
add
test
scas
adc
and
int
scas
or
dec
mov
fwait
and
lea
jae
pop
push
xlat
push
sbb
add
push
jg
icebp
or
aam
xor
dec
inc
xor
leave
mov
cmpsb
pop
pop
scas
popa
xchg
negb
icebp
fs
sbb
sub
and
aaa
pop
lods
in
test
inc
jmp
out
in
test
mov
mov
mov
cmpsb
mov
fisubl
xchg
mov
loop
scas
adc
mov
insl
cmp
or
or
and
lret
fimuls
pushl
xchg
mov
dec
inc
sahf
lret
pop
sub
lods
or
lds
notb
add
cmpsl
sbb
sub
adc
sub
cli
addr16
ljmp
xchg
adc
mov
jae
in
jns
fdivrl
movsl
lods
sub
xchg
test
sbb
repnz
adc
push
jg
fldenv
xchg
jp
mov
sbb
lahf
pop
gs
pop
dec
mov
or
or
jg
pmuludq
jno
ja
sbb
das
lods
xor
out
jno
dec
in
pop
hlt
mov
scas
clc
insb
insb
cmp
xchg
mov
in
fdiv
aam
orb
adc
in
stos
aam
inc
ds
add
lret
sbb
shll
mov
bound
xchg
cli
fstpt
repnz
mov
fcomi
jnp
pop
insb
test
dec
push
pop
lret
scas
xchg
lret
inc
xchg
and
push
or
out
pop
gs
jmp
mov
cmp
adc
xlat
mov
cli
cli
push
loopne
lea
ret
push
add
movsb
out
fsubs
push
arpl
and
shll
and
add
mov
rcrb
dec
data16
pop
or
or
and
popa
or
mov
enter
in
daa
xchg
gs
test
mov
pushf
pop
xor
lods
movsl
rol
aam
mov
into
mov
and
js
inc
sbb
xor
inc
xor
jae
pusha
mov
fisubs
cli
cmp
leave
mov
das
cmp
lret
addr16
add
cmp
insl
or
dec
dec
hlt
pop
mov
pop
frstor
data16
enter
jp
and
movsl
aaa
push
cld
hlt
cmpsl
mov
push
popf
stos
mov
arpl
lret
xchg
push
mov
std
imull
or
mov
jb
xor
in
sub
inc
jns
lahf
lea
push
sbb
mov
mov
lods
bound
fmull
pop
cmp
test
dec
into
add
out
popf
adc
add
pushf
mov
dec
out
xor
into
pushf
insl
sub
inc
into
add
popa
inc
add
cmpsb
hlt
cmpsb
xor
cmp
lahf
fimull
dec
push
mov
jb
lds
cs
mov
mov
cs
and
xchg
hlt
jne
daa
movsl
inc
sbb
or
int
jl
les
push
int
xchg
inc
aam
aam
int
gs
fcmove
fisubl
jl
out
jl
ds
pusha
mov
paddsw
arpl
pop
pusha
imul
xor
push
xor
xor
xchg
outsb
xlat
cmp
fisubl
out
hlt
lods
movsb
xchg
add
test
incl
and
lods
push
push
insl
mov
je
mov
xor
or
dec
in
fbstp
and
in
out
mov
scas
cmp
or
sbb
ja
inc
mov
pop
fcmovbe
push
fists
and
fists
int3
movsl
aaa
lahf
dec
fsubr
inc
jne
sbb
pop
into
and
jb
outsl
bound
jns
mov
aas
std
sbb
into
mov
mov
aaa
xlat
mov
movsb
inc
ds
std
push
pop
xor
stos
mov
push
sarb
imul
addr16
movsl
scas
outsb
jne
sahf
sbb
pop
into
cmp
not
push
sbb
in
andl
imul
iret
fisttpl
push
lret
insl
or
xchg
cs
mov
loop
mov
jne
stos
lods
push
in
out
xor
mov
inc
sarb
xchg
push
mov
sub
jns
cltd
lahf
dec
rcll
stos
jo
sbb
shlb
int3
mov
pop
lea
nop
xchg
jno
ds
out
mov
in
xor
hlt
mov
fisubrs
cli
pop
iret
sti
repz
pop
pop
cltd
sub
or
jne
dec
push
imul
ljmp
vpunpckhqdq
mov
add
xorl
loope
in
daa
xchg
inc
pop
bound
jg
mov
mov
lods
sbb
idiv
pop
jecxz
daa
xchg
xor
adc
dec
pop
and
fwait
or
add
mov
xchg
mov
pushf
out
in
iret
incl
pop
push
or
add
sahf
mov
sbb
pop
push
mov
inc
int3
add
lcall
or
push
mov
and
hlt
addr16
into
pushf
call
call
jo
xchg
or
loop
aaa
fstpt
push
cmp
xchg
insl
push
adc
into
xchg
cmp
movsl
pop
or
jp
push
lahf
cmp
push
cwtl
xchg
mov
mov
inc
push
push
xchg
sbb
xchg
xor
mov
in
push
daa
mov
outsl
xor
daa
imul
hlt
xor
push
out
leave
sbb
xrelease
dec
lcall
cmp
push
mov
mov
pop
mov
jae
es
xor
movsb
sub
scas
sbb
addr16
mov
cmp
test
mov
popa
jbe
in
js
or
mov
gs
pushf
in
sarl
js
xor
inc
scas
sub
jbe
push
icebp
fimull
add
xchg
xchg
popa
mov
add
inc
sbb
jge
mov
inc
test
daa
rorl
loope
cmc
jmp
ja
loop
imul
xchg
mul
loop
ror
repz
pop
shrl
and
mov
daa
xor
into
jle
nop
mov
dec
add
adc
ret
js
mov
adc
pop
jns
mov
xor
shl
push
mov
clc
rorb
out
push
mov
lods
lods
push
mov
leave
mov
xor
in
repz
sub
push
repnz
mov
sub
test
daa
lahf
cmpsb
mov
sarl
xchg
outsl
popf
mov
xchg
mov
push
pusha
mov
int3
push
add
jecxz
shll
addr16
xor
arpl
insb
xor
sbb
mov
fnclex
xor
outsb
jo
mov
mov
lcall
ret
ds
jae
xchg
les
mov
mov
jmpw
mov
or
dec
adc
jmp
divl
sbb
mov
cmpb
jo
insl
sbb
dec
pop
sbb
in
popa
les
jb
in
scas
sbb
lea
or
mov
add
pop
cmp
pop
fsubrp
push
test
jb
in
dec
mull
mov
cmpsl
sub
gs
mov
adc
lods
mov
push
adc
jmp
mov
insb
mov
and
mov
jns
mov
lahf
pusha
add
xor
sub
dec
dec
jb
stos
push
pusha
pop
out
lods
add
jg
xor
or
fwait
pop
cmp
in
dec
scas
mov
xchg
sub
mov
lahf
push
xor
xlat
pop
push
sub
je
push
stos
sub
pop
mov
or
pop
dec
aaa
jbe
push
fcmovnbe
xor
adc
pop
jno
int3
push
lods
fsubrl
decb
mov
out
push
pop
mov
out
xor
jmp
stos
add
andb
insl
add
push
mov
je
xlat
push
into
imul
clc
adc
fs
lock
in
xchg
lods
hlt
out
push
scas
lods
arpl
nop
push
lock
stos
loop
cltd
dec
pop
enter
pop
pop
aaa
scas
arpl
push
fsubl
adc
jno
cmp
test
jmp
not
in
lods
std
xor
mov
into
push
dec
iret
sbb
inc
dec
jecxz
inc
dec
lea
mov
xchg
vpavgb
rcrl
dec
test
cmp
sbb
push
xor
in
in
cmpl
sbb
sbb
and
jb
xor
cmpsl
pop
jle
hlt
mov
aad
mov
mov
mov
sbb
push
insl
imul
inc
mov
xchg
xchg
push
inc
adc
jecxz
sarl
adc
int3
ljmp
cmp
aam
cmpsb
andb
movsl
jmp
test
pop
repz
movsb
pop
dec
xchg
lods
in
lea
and
xchg
xchg
jbe
mov
sarl
iret
mov
cmp
and
pop
ret
sub
movsb
sub
int
loop
pop
ds
xor
pop
aam
mov
and
rcll
fimuls
pusha
mov
out
stos
adc
loop
cmpsb
lods
pop
push
cld
cmp
cmp
icebp
outsl
xchg
xorb
daa
icebp
inc
movb
mov
add
leave
push
add
rorl
mov
lods
lret
int
stos
dec
mov
mov
and
inc
push
repz
adc
into
insl
inc
movsb
cmpsl
or
xor
or
pop
lock
pushf
xchg
mov
adc
lahf
inc
mov
or
push
inc
sbb
sub
and
inc
pop
xchg
mov
ds
xchg
dec
fs
mov
std
adc
aaa
scas
bound
dec
add
mov
sub
outsb
add
sbb
adc
mov
hlt
push
shlb
mov
insb
loope
xchg
insl
push
dec
cmc
push
dec
test
daa
stc
and
xorl
outsb
dec
out
out
push
pop
and
xchg
mov
mov
adc
adc
sub
dec
xchg
into
notb
cmp
nop
push
cltd
lea
dec
fmuls
mov
mov
lahf
test
sbb
loop
sbb
jns
xlat
jbe
aaa
cld
cmp
dec
mov
push
and
cld
jge
jg
dec
cli
ret
push
aam
jg
in
mov
add
ds
inc
xchg
mov
or
addr16
ds
jne
clc
cmpsb
jae
xchg
cmc
mov
sahf
xor
xor
scas
adc
cmpsb
inc
lahf
idivb
mov
popf
and
test
add
xchg
xor
scas
ret
negb
pop
cmp
sub
loopne
mov
and
imulb
sub
outsl
mov
stos
add
xchg
xor
jae
and
mov
scas
dec
nop
inc
or
and
cwtl
mov
mov
sbb
rcrb
lods
outsb
inc
icebp
in
add
cmp
xchg
lods
scas
push
sbb
jns
sbb
popf
lea
shl
lods
pop
jnp
add
adc
inc
out
push
or
mov
push
lods
add
xchg
xor
cltd
test
adcl
xor
outsl
fs
push
push
pop
popf
sbb
test
and
das
repnz
mov
push
mov
push
mov
jne
dec
mov
sub
sub
add
mov
jmp
ret
insb
xchg
gs
popf
or
outsb
cmp
addr16
cmp
add
adc
xchg
scas
gs
int
pop
sub
outsb
jge
test
sbb
cmc
aam
sub
mov
sbb
adc
adc
jg
push
push
cwtl
mov
ja
ror
xchg
push
mov
xor
jmp
and
xor
out
movb
adc
xchg
dec
in
int
mov
dec
in
xchg
test
add
scas
out
mov
jae
jne
js
pop
inc
and
insl
jb
jle
test
jecxz
push
add
jg
add
dec
movsl
or
push
jmp
cs
push
popf
adc
cli
mov
push
repz
shll
arpl
out
or
pop
scas
sbb
lcall
xchg
mov
jnp
and
aaa
lret
lea
lods
std
lret
xchg
das
pop
push
jb
jns
and
dec
jno
ret
adc
test
xor
outsb
in
xor
inc
mov
sbb
cmpsl
jb
or
dec
ficoml
add
insb
out
inc
lods
outsl
imul
outsl
lods
in
push
arpl
outsb
mov
loop
popf
mov
in
shrb
or
sub
test
jmp
cmpsl
test
mov
lcall
add
xchg
lods
repnz
fisubrl
mov
shll
pop
es
iret
sbb
ljmp
mov
aam
lcall
movsl
arpl
pop
ja
mov
push
ffree
sub
mov
in
xor
push
dec
add
mov
loop
out
xchg
icebp
dec
movsb
xor
lcall
xchg
cmp
int
inc
movsb
cmp
push
popf
fisttps
aas
jne
xchg
xor
cmp
pop
lods
movsl
add
adc
into
or
fdivl
fldenv
dec
cmpsb
adc
fidivs
movsl
fldenv
insl
fnstenv
ljmp
pop
push
arpl
or
int
movsl
dec
xorb
outsb
inc
movsl
repz
das
mov
movsl
ljmp
add
ja
fbstp
in
mov
scas
les
loop
lods
jmp
sbb
fmull
pop
test
psrld
or
mov
test
jg
imul
out
mov
cmp
xchg
adc
cmp
movsl
into
xor
test
push
movsl
fs
and
ja
pop
jae
stos
jo
dec
pop
in
clc
sti
aad
je
xor
and
lods
outsb
lea
dec
orl
jne
mov
repz
jmp
xor
imul
ret
in
xchg
sub
je
or
es
xchg
cmp
es
scas
in
xchg
mov
dec
mov
inc
out
test
shlb
xchg
loop
cmp
xchg
jecxz
hlt
out
dec
xchg
push
rclb
sub
jg
cwtl
cltd
xchg
sub
test
add
and
inc
out
cmp
sub
adc
std
fwait
lds
out
out
cli
mov
pop
arpl
cmp
sub
cmp
mov
mov
cmp
je
mov
and
pop
sub
sbb
jl
lea
out
ljmp
jae
xor
xor
shlb
aad
hlt
loop
iret
xorb
add
lcall
jno
mov
cli
sub
fimuls
clc
fists
adc
fcmovnbe
xor
or
fcmovb
xchg
dec
std
dec
or
aaa
out
int3
xchg
iret
sbb
clc
or
jg
xor
dec
mov
test
push
rcr
aaa
push
mov
lods
imul
inc
dec
or
int
dec
sub
or
arpl
or
or
fidivl
dec
or
cwtl
movsl
dec
cmp
xchg
jg
mov
jnp
push
jle
pop
out
mov
addr16
mov
lcall
jl
ret
mov
push
stos
fwait
mov
testb
mov
or
mov
sbb
adc
fwait
sub
sbb
fcmove
lea
or
jb
cld
cmc
push
repnz
lock
xchg
cmpsb
fmull
test
lods
cmpsl
andl
bound
cmp
fisttps
hlt
int
pop
dec
cs
insl
cli
inc
stos
divb
bound
fnstcw
test
sarl
jne
cmp
mov
push
add
ss
xchg
bound
sub
out
repz
fbld
jno
cmp
pop
xchg
push
push
inc
fisttpll
or
cmp
jl
mov
sub
cmp
lds
mov
int
push
fists
mov
fidivrs
sub
movsl
jge
gs
insl
lods
je
xchg
fsubrs
mov
pop
jb
and
subl
arpl
fwait
gs
or
xchg
inc
inc
pop
fisubrs
popa
mov
out
lods
cs
push
or
and
sub
in
gs
jle
dec
lds
cltd
mov
push
mov
fxch
aaa
push
popa
pop
push
leave
inc
orb
test
lahf
nop
and
and
cmp
movsl
imul
aaa
or
dec
sbb
xor
push
in
lods
mov
sub
mov
sti
xorl
adc
insb
daa
and
stos
or
pop
sub
out
pop
daa
or
mov
movsb
imul
add
dec
add
push
gs
int
aaa
sbb
sub
push
inc
lret
lods
xorb
in
test
mov
xlat
ret
nop
shrl
adc
pop
insl
mov
test
xlat
lcall
scas
in
in
lret
adc
ljmp
add
lods
and
xor
or
lods
in
mov
in
xor
aaa
mov
sub
add
into
mov
mov
pushf
or
push
insb
sbb
in
inc
mov
cmpsl
ficoms
std
cli
ret
std
and
aas
jge
pop
or
mov
dec
test
sbb
push
orl
push
in
dec
loop
pop
xchg
iret
lds
dec
fisubrs
neg
push
rcrb
jnp
out
add
or
fistpll
aaa
movsl
sbb
xchg
adc
cs
xor
es
dec
cwtl
int
lea
and
cmp
loop
cmp
cmp
lret
cmp
add
add
das
rolb
data16
push
lar
push
scas
andl
in
les
std
mov
cmp
mov
mov
lods
or
pop
or
jne
leave
movsb
push
test
ret
pop
jne
mov
pop
shll
or
mov
xor
mov
mov
aaa
mov
pusha
mov
inc
pop
inc
ds
dec
or
inc
and
push
cmpsl
mov
and
add
xchg
imul
pop
insl
stos
aaa
jge
insl
aaa
sti
jge
lret
insl
dec
dec
sbb
lods
lods
enter
lods
adc
xor
or
or
jge
in
mov
out
and
pusha
fisubrs
sahf
loope
mov
push
cmpsl
cmp
inc
mov
mov
pop
arpl
push
lods
mov
sub
cltd
mov
sub
insb
push
mov
dec
pop
lods
out
mov
into
mov
pop
scas
cmpsl
arpl
into
push
sub
or
in
pop
cmc
lods
imul
enter
lea
call
or
int
dec
les
iret
inc
inc
test
sub
mov
lcall
loop
and
sub
int
stc
mov
shr
in
iret
xchg
in
roll
lods
sbb
push
pop
inc
and
mov
dec
and
mov
fisubl
or
sub
pushf
jns
jecxz
imul
iret
in
mov
push
dec
daa
and
pop
add
insb
pop
pop
adc
insb
sbb
cmp
lea
adc
mov
stos
sub
inc
leave
jne
mov
cltd
dec
xor
rcll
lcall
inc
or
mov
xchg
jg
dec
add
add
xlat
jo
and
shll
add
ret
pop
cmpb
jle
jb
cmp
xor
jg
call
xchg
mov
jp
or
xor
ret
sub
cmpsl
push
xchg
fwait
lcall
test
mov
jne
adc
sbb
cli
dec
and
rorl
dec
dec
test
ficomps
cmp
cmp
cmp
and
pop
or
aaa
ror
xchg
dec
push
fcmovnbe
arpl
gs
sbb
lret
bound
adc
adc
jge
add
xchg
fsts
lea
mov
pop
push
pop
and
lahf
mov
mov
mov
repnz
inc
popf
mov
xchg
repnz
cmp
add
and
sub
rcll
pop
test
sti
xor
cmp
pop
inc
mov
adc
ds
lods
addr16
outsl
push
add
cs
ja
mov
out
mov
or
or
dec
mov
lods
mov
iret
sub
std
or
repz
cmp
fdivs
movsb
mov
push
mov
mov
xchg
scas
or
inc
and
jle
sub
es
cltd
dec
dec
rclb
add
xchg
cmp
imul
mov
jge
lods
push
imul
push
mov
cli
imul
std
xchg
push
adcb
mov
gs
out
adcb
andl
test
mov
and
popa
push
popa
mov
ffree
jo
sbb
mov
test
fstp
loope
jbe
not
and
in
shlb
test
dec
repz
jb
jmp
jnp
or
rcl
sub
add
mov
jge
lods
push
addr16
mov
shlb
push
xchg
pop
lahf
mov
and
loope
std
inc
xor
xor
push
daa
int
pop
sbb
sbb
add
lods
adc
push
xchg
aas
xor
sbb
mov
pop
mov
sub
sub
lahf
test
xchg
insl
xchg
jb
outsb
or
in
loope
fbld
xchg
pusha
and
cli
sarl
rorb
jne
lret
mov
iret
xor
sub
jge
sub
dec
cmp
jge
sbbb
pop
push
push
jb
jle
adc
and
popf
jb
push
cmp
add
outsb
arpl
imul
and
jg
sti
push
cmp
iret
mov
cli
push
or
lret
xor
es
je
push
mov
shrb
pop
mov
scas
daa
sbb
lds
inc
pop
mov
ficoml
cmpsb
add
xor
inc
int
push
aad
pusha
fsubrs
cmp
pop
xor
fimull
sbb
inc
xchg
xor
push
pop
outsb
cmp
outsb
scas
movsl
push
lret
outsb
cs
sub
inc
arpl
int
dec
movsl
mov
insb
sti
xor
push
movsl
mov
and
or
add
sbb
dec
das
lret
scas
and
test
mov
pop
lahf
xchg
popa
push
adc
mov
jge
xor
jno
xor
in
pusha
fdivp
sarl
popf
iret
push
jae
mov
sbb
or
add
inc
add
mov
insl
lock
test
xchg
pop
ret
test
out
mov
movsb
fnstsw
mov
test
push
inc
decl
mov
mov
out
pop
sbb
xlat
cmp
dec
xor
sbb
out
inc
aaa
jb
jb
and
clc
data16
xchg
movsl
gs
jecxz
cld
xor
insb
mov
xchg
jle
inc
xor
pop
mov
test
movsb
mov
sbb
in
clc
sub
cs
icebp
das
cltd
loopne
imulb
add
addr16
lods
inc
or
mov
outsb
sub
sub
push
inc
scas
mov
jge
adc
pop
imul
mov
mov
mov
xchg
loope
jne
scas
cli
cltd
inc
int
cli
xor
cmp
lcall
pop
cmp
mov
sahf
test
jbe
scas
adc
lret
lods
xchg
xor
sar
or
fcomps
xor
push
cmovge
std
mov
and
das
push
in
fldt
addr16
xchg
int
fstpt
pop
xchg
fcoms
or
sbb
leave
cmp
insb
dec
pop
sub
pop
cmc
sub
adc
popf
leave
add
ljmp
sub
cmp
add
insl
and
push
adc
and
xor
insb
scas
mov
mov
bound
push
das
cmp
enter
inc
xor
test
cmpsl
jle
adc
sub
jb
mov
xchg
popf
and
push
and
xor
jg
jne
aad
scas
cli
lahf
jge
bound
xor
ds
call
shrl
jbe
out
stc
and
loopne
cmpsl
cmpsl
clc
lahf
bound
andb
ljmp
daa
fisttpll
mov
or
rcll
xchg
sub
rorb
fildll
and
jb
sti
movsl
popl
outsb
xchg
xchg
and
stc
ds
or
mov
out
jp
cmp
or
add
call
cmpb
sub
and
sub
mov
insl
pop
lahf
xchg
adc
outsl
pop
jnp
inc
jle
rclb
adc
inc
add
dec
pop
addr16
cmpsl
dec
push
jge
jb
rolb
je
pop
sub
lea
and
jno
test
das
loopne
cltd
xchg
push
sub
cld
sub
lret
rcrb
aad
cld
call
mul
ret
add
dec
in
arpl
mov
cmovno
fldl
jno
xor
pop
ret
mov
and
mov
push
ja
les
pop
clc
mov
insb
pushl
xchg
jne
jge
bound
inc
push
xchg
mov
xor
jg
dec
lods
cmp
fidivrs
jae
insb
dec
setb
movsl
dec
bound
mov
ret
aaa
imul
std
jnp,pn
mov
out
loopne
movsb
fs
xchg
addr16
lahf
shlb
jb
repnz
incb
bound
xchg
popf
mov
rol
gs
jne
adc
outsb
jb
inc
sub
outsb
xchg
ficoms
sarl
or
mov
fnsave
int
scas
int
int
jle
je
es
and
stc
cs
adc
fimuls
jno
rcrb
or
mov
popa
mov
adc
cmp
outsb
call
inc
popa
scas
mov
or
pop
movl
xchg
in
add
sbb
test
pop
int3
jmp
out
jge
xchg
scas
gs
mov
sbb
add
leave
in
out
pop
sub
inc
fiaddl
mov
mov
push
das
hlt
or
fdivs
call
mov
fwait
divb
js
ret
push
push
or
sarl
ljmp
imul
push
fldcw
arpl
inc
nop
and
cmp
mov
add
mov
pop
pop
xor
jne
lea
push
je
or
test
in
sti
mov
mov
adc
push
int3
les
mov
lods
mov
mov
out
cli
adc
jne
cli
lret
sub
addr16
testb
jge
nop
lock
cmpsl
or
out
sub
sbb
repz
mov
adc
cmp
sbb
pop
ret
mov
and
arpl
push
lea
movb
xlat
mov
inc
mov
adc
pop
jns
ja
addb
cmp
adc
insb
js
popl
jle
in
mov
push
adc
ljmp
mov
jbe
aaa
xchg
mov
fmull
loop
sub
push
or
rcl
push
cwtl
scas
adc
testb
ljmp
xchg
sub
xchg
dec
orl
xlat
jb
dec
arpl
iret
mov
and
jno
pusha
and
test
leave
pusha
pop
shrl
cmp
push
inc
add
cmc
xchg
inc
jne
xor
and
xor
in
jb
and
or
insl
pop
mov
dec
popa
jno
jb
lret
inc
adc
out
add
int
xor
push
lret
xchg
push
inc
aas
mov
adc
jne
lea
or
xchg
in
lahf
lret
push
sbb
jg
jl
mov
adc
add
test
adc
xchg
jge
pop
int
test
neg
in
mov
sarb
mov
insb
aam
testl
jne
sti
popf
and
and
push
out
ljmp
into
xor
xlat
pop
mov
sub
pop
jle
lea
lea
into
loop
stos
dec
scas
push
cs
test
test
popa
adc
rcrl
loope
add
pop
add
mov
jle
add
mov
insl
cmp
mov
test
int
in
loope
es
lret
push
in
loopne
dec
or
into
fsts
movsl
mov
not
adc
lods
adc
xor
sub
insb
sub
cmpsl
or
dec
dec
jno
lret
or
or
in
mov
push
jl
popf
test
sub
sbb
pop
test
mov
jae
jbe
or
jns
testb
mov
dec
push
add
jne
in
xchg
pop
int3
stc
bswap
mov
push
int3
push
testl
xlat
aas
arpl
mov
push
add
flds
loope
xchg
add
lea
fists
popa
pop
out
sub
push
cmpsb
push
outsb
popa
call
or
and
jne
mov
push
test
dec
in
pop
out
jbe
mov
mov
xor
cmp
mov
ljmp
int3
mov
cmp
or
movsb
popa
cld
into
push
sbb
dec
dec
adc
ja
cwtl
notl
dec
cmp
sub
divl
add
jae
call
mov
mov
into
lret
aas
xchg
mov
aaa
or
adc
sahf
pop
int
popa
push
sbb
int
outsl
in
outsb
mov
xor
mov
scas
jns
mov
lock
and
out
inc
pop
xchg
or
pusha
xor
mov
lods
or
outsb
aaa
call
jle
pop
add
lods
push
lahf
push
inc
inc
add
add
clc
cli
mov
add
subb
and
int3
mov
xchg
arpl
clc
cmc
and
xchg
fsubrp
out
pop
test
lcall
cmp
xor
shrb
mov
jmp
mov
sub
push
mov
push
nop
jmp
sbb
push
fsts
or
ret
in
cmp
in
or
adc
jge
std
jns
pop
ljmp
rcrl
test
pop
popf
pop
pop
mov
fucomp
popa
xor
cmp
inc
int
and
dec
or
popf
lret
insb
popa
int
inc
in
orl
movsl
aas
cmp
pop
sub
mov
mov
mov
scas
push
out
outsb
mov
mov
ds
lea
mov
jmp
xor
out
push
push
imul
push
mov
pop
data16
sub
insb
arpl
aaa
mov
mov
and
add
sub
daa
lods
dec
arpl
sub
test
xchg
lcall
xchg
sub
push
mov
testb
and
movsl
mov
out
or
int3
xchg
ret
jcxz
and
out
out
xchg
jmp
xchg
popa
fwait
xchg
popf
pop
lods
dec
enter
aaa
pop
push
mov
sub
rclb
pop
inc
addr16
fs
out
pusha
push
inc
es
push
clc
outsb
stos
pop
arpl
pop
orb
ret
sbb
ret
int3
mov
lahf
cmp
xor
mov
movsb
push
jl
pop
xchg
mov
cmpsb
or
ret
sub
mov
cmpsb
sub
jg
mov
test
push
jmp
adc
shl
push
inc
addr16
dec
idivl
in
push
jle
sub
insl
cmc
and
pop
jnp
adc
mov
call
mov
lahf
mov
dec
sub
ds
mov
mov
rcr
jle
sbb
dec
pop
testl
fcmovne
push
imul
xchg
cmp
adc
enter
mov
sbbb
aas
dec
mov
lods
jae
push
mov
xorl
fiadds
push
in
in
ja
and
hlt
fcomps
mov
or
or
enter
in
cli
pop
jg
inc
mov
pop
mov
out
popf
out
pop
outsl
adc
mov
imul
lods
leave
ret
pop
fldenv
bound
jle
cmpsl
movsl
int
xchg
push
ficoms
pop
lret
xchg
in
sub
lods
into
jns
fcoms
jbe
lods
fdivl
mov
in
mov
dec
test
xchg
sbb
test
je
push
xor
push
xchg
out
pmaxsw
xlat
mov
or
xor
popf
inc
xlat
daa
test
push
out
mov
xchg
in
push
imul
lret
data16
cmpsl
into
cltd
jae
scas
arpl
shrl
fistps
dec
lea
or
fimuls
fidivs
and
inc
repz
pop
ds
mov
scas
cmpsl
lcall
fnsave
lds
outsb
mov
xchg
pop
js
sbb
push
jb
lea
lret
jne
out
dec
and
fsts
lcall
lea
jno
and
inc
jb
loope
lea
dec
inc
cwtl
jno
mov
addr16
jl
mov
mov
rcrb
xchg
rorl
fcomps
xlat
mov
cmpsl
cmp
mov
cmp
or
fiaddl
icebp
sti
inc
sub
sbb
xchg
dec
xor
lds
aaa
xchg
and
xchg
iret
movsb
add
stos
add
es
xchg
sbb
lea
nop
xchg
adc
mov
xor
imul
mov
mov
xchg
mov
arpl
mov
dec
add
push
push
insb
push
cmp
adc
xchg
lret
add
xchg
dec
cmp
xlat
aaa
or
xor
push
jp
jge
mov
cmpsb
push
mov
clc
decb
jmp
pop
cmp
mov
insl
mov
sub
add
xor
dec
jno
imul
leave
mov
popa
in
jne
inc
mov
dec
or
scas
xor
add
enter
inc
ds
aaa
in
xlat
les
or
inc
imul
imul
dec
cmp
test
out
shrl
test
iret
movsb
mov
cmpsl
sahf
pop
add
pop
not
popf
lcall
xor
clc
add
pop
and
lods
int
mov
lret
push
push
cmp
and
aas
mulb
aam
aad
and
add
mov
push
idivb
inc
fisttps
mov
jecxz
inc
sbb
push
imul
sahf
inc
or
fs
lods
jne
lcall
idivl
inc
sahf
and
dec
jns
fcomip
out
jae
push
imul
out
add
addr16
icebp
and
lods
or
push
test
adcl
fsubl
mov
jge
into
xor
lea
insb
imul
or
lods
cmp
jle
push
cmp
das
ret
mov
insl
lea
test
aas
aad
sub
fs
les
cmp
jl
or
lret
test
xchg
mov
shlb
or
mov
jl
sub
xchg
addr16
aaa
or
imul
cmp
daa
leave
mov
arpl
mov
push
dec
mov
pop
add
inc
dec
cmc
ret
push
mov
sbbl
cld
dec
ljmp
dec
lea
xlat
cmp
lcall
adc
xlat
and
insb
mov
or
repnz
jg
mov
mov
hlt
xchg
mov
ret
insl
sub
mov
pushl
loopne
lea
sbb
mov
outsl
mov
aas
push
and
out
clc
or
cmpsl
cs
lods
sub
add
or
outsb
insl
mov
mov
lods
xchg
call
sbb
cmp
push
sbb
mov
push
add
aam
xchg
mov
shlb
xchg
fnstenv
jle
cmc
push
mov
repnz
cmp
out
jbe
and
mov
sbb
arpl
ja
sbb
push
or
cmpsl
xor
xor
insb
mov
lods
sub
jl
insb
or
xchg
push
stos
repnz
push
and
and
sbb
dec
ds
inc
and
roll
mov
xchg
jge
push
jb
mov
pop
sub
cmp
push
or
aas
flds
repz
shrl
and
aaa
stc
pop
xchg
mov
cld
pop
hlt
xchg
xlat
dec
inc
sub
mov
je
dec
ficoms
bnd
gs
pop
mov
out
xorl
outsl
ret
stos
xor
int
imul
ficoml
xchg
add
sub
xchg
pop
mov
pop
imul
out
or
nop
call
fisubs
adc
rcl
rolb
xchg
adc
test
or
imul
inc
xlat
sbb
in
mov
dec
aam
das
xchg
mov
popa
mov
mov
sbb
dec
pop
lret
xor
xor
int3
and
sub
lds
jb
xor
insb
mov
in
mov
sub
in
sbb
fwait
push
dec
and
dec
mov
mov
and
and
in
insl
jns
jle
in
in
enter
push
sbb
mov
daa
cli
xlat
stos
ds
jmp
or
dec
xchg
mov
push
xchg
or
xchg
in
push
mov
in
test
push
xor
in
fcomip
jge
pushf
mov
and
gs
jb
add
arpl
sub
push
int3
adc
cmpsl
xor
or
pop
nop
push
xor
push
std
mov
cmp
cmp
or
xchg
lahf
aad
xchg
push
fwait
ds
fidivrs
mov
insb
xlat
inc
pushl
std
idivb
add
lds
adc
fidivrs
sub
add
xchg
xchg
sub
push
and
lret
test
stos
add
adc
imul
pop
lods
popf
lea
and
loop
loope
jne
out
repnz
push
or
nop
popw
gs
mov
jle,pt
or
sbb
adc
inc
push
or
push
pop
sub
push
fadd
xchg
add
adcl
inc
add
shll
mov
stos
inc
stos
jb
cmp
xchg
or
arpl
movsl
lahf
scas
jmp
jg
cmp
xor
outsb
sub
insb
test
lods
into
imul
xchg
push
lods
and
mov
scas
inc
or
addr16
inc
sbb
aam
mov
mov
cmp
adc
mov
sarl
mov
dec
xchg
test
jbe
shrl
decb
mov
mov
mov
bound
sbbb
and
inc
inc
int3
push
frstor
addr16
xchg
sub
push
jmp
fidivs
lods
loopne
cmpsb
shll
loope
sbb
stos
pop
add
out
dec
lds
das
insb
outsb
mov
movsb
push
shlb
or
ss
dec
inc
mov
in
daa
mov
cld
dec
sbb
jge
je,pn
mov
mov
jnp
dec
xor
clc
fisttpll
rcll
xchg
sbb
xor
sub
scas
jecxz
sahf
push
rorl
insl
ret
call
sub
xchg
mov
sub
dec
nop
and
push
js
mov
xchg
or
xchg
inc
jno
je
ja
cmp
sbb
fisubs
mov
inc
push
sub
dec
mov
mov
negl
mov
fists
cmc
mov
adc
mov
arpl
mov
inc
scas
cmp
xor
mov
fisubrs
push
jb
scas
imul
pop
daa
xchg
out
mov
daa
mov
push
cmpsb
push
add
inc
addr16
lods
dec
or
mov
insl
lret
jmp
xor
dec
or
cmp
cmp
and
rcl
scas
mov
jmp
ret
jo
or
test
mov
pop
dec
pop
inc
loopne
fnstsw
insl
mov
and
aam
mov
outsb
sub
pop
lahf
adc
aas
jns
inc
testb
adc
in
sub
mov
push
xor
in
xor
stos
in
sbb
dec
sub
gs
xor
push
mov
sbb
testl
fsubrp
je
mov
cmp
lods
das
and
mov
xlat
int3
in
pop
push
loope
out
orb
or
in
hlt
jne
jle
add
jne
or
sub
popa
rolb
out
jecxz
mov
mov
mov
or
mov
push
or
cmc
jle
pop
pop
push
push
cmp
aaa
ret
jg
movsl
jbe
xchg
pop
mov
pop
mov
mov
xlat
jae
inc
mov
arpl
add
insl
xor
outsl
and
shll
pop
inc
inc
in
cmpsl
mov
test
std
mov
inc
push
jne
lods
out
pop
sub
xchg
lea
gs
popf
stc
ljmp
out
ljmp
adc
insb
lret
mov
mov
or
mov
aas
mov
jle
aam
sbb
lods
mov
push
sbb
and
cmp
pop
xor
aaa
lret
or
in
int3
outsb
inc
sarb
xchg
pop
dec
mov
mov
or
loop
mov
mov
xchg
mov
cmpsb
shlb
pop
xchg
jbe
bound
xor
cmpsl
fadd
scas
lods
ret
push
mov
xchg
sarb
sbb
jns
jb
pop
add
cs
jle
loop
test
popa
xchg
adc
iret
add
into
pushf
sub
mov
addr16
idiv
push
clc
ljmp
jne
inc
std
sub
xor
outsl
test
pop
cmpsl
test
hlt
add
call
inc
mov
in
sbb
in
mov
pop
pop
push
enter
dec
or
ret
xchg
lea
imul
or
insl
push
repnz
or
mov
aad
insl
mov
xchg
test
movsl
cltd
sub
outsb
es
out
icebp
push
cmp
xor
sub
jge
xchg
xchg
mov
jl
lds
sub
push
xchg
inc
cmp
xor
and
jb
push
sti
jne
stos
xchg
mov
dec
mov
fnstsw
popf
dec
jb
push
xchg
xchg
aas
xchg
scas
push
push
addb
mov
jge
daa
stos
ja
arpl
push
insl
imul
mov
in
popl
lahf
jbe
pop
insl
dec
lret
inc
push
inc
inc
or
mov
xchg
mov
sbb
sub
pop
pop
int
mov
pop
jne
adc
mov
push
inc
scas
adc
inc
xchg
sahf
adc
pop
mov
ret
adc
cld
iret
lahf
sub
jno
fisubs
push
pop
cs
cmpb
inc
inc
push
fimull
test
adc
sarb
jo
lods
pop
fwait
push
incl
arpl
add
shll
hlt
lahf
stos
adcb
jb
cld
inc
xchg
bound
add
mov
outsb
pop
and
movsl
and
aaa
loopne
inc
xlat
jb
das
sbb
ret
ja
insl
xchg
mov
out
sbbl
pusha
xor
mov
adc
dec
pusha
lods
or
loop
mov
push
push
ss
mov
subl
xor
popf
les
outsb
test
jge
jne
lock
int3
stos
jle
and
outsl
rorl
jmp
dec
push
add
xor
fbld
xchg
add
movsl
inc
mov
lret
or
or
add
jp
mov
in
mov
mov
les
sbb
add
aam
hlt
xchg
lods
enter
movsb
rolb
shlb
in
or
es
stc
mov
or
jb
lods
add
ljmp
into
sub
stc
popa
js
lods
dec
mov
sub
mov
mov
aad
mov
push
push
adc
insl
hlt
cmp
add
adc
lds
iret
stc
shr
fs
fnstcw
xchg
xor
or
mov
fidivs
rcrb
iret
add
call
pop
pop
xor
add
shll
popf
hlt
repz
popa
mov
dec
sub
pop
gs
das
out
cmp
pop
enter
test
in
hlt
add
cs
mov
mov
xor
sub
inc
push
clc
mov
cmpsl
cs
cmp
into
cmpl
in
xorl
add
in
popa
and
and
pop
ficompl
xor
enter
pop
or
mov
or
cmp
dec
sub
inc
mul
aaa
dec
xchg
or
or
imul
pop
xlat
addr16
jbe
enter
adc
cmpb
mov
call
xchg
cmp
pushl
jae
stos
adcl
fsubrp
imul
lods
sub
daa
test
or
inc
lods
jmp
sub
or
adc
xor
dec
enter
mov
lds
ljmp
mov
cmpsl
sbb
mov
repnz
and
andb
and
xor
cmp
daa
pop
jno
addr16
dec
cli
jge
add
cltd
inc
pop
jae
dec
test
jle
and
and
cmp
imul
int
stc
iret
test
adcl
orb
cmp
sub
movsb
xor
mov
icebp
sub
xor
mov
daa
mov
mov
mov
out
cltd
fcoms
jl
mov
icebp
or
or
or
mov
popa
es
test
mov
iret
dec
in
mov
orb
push
mov
lret
lret
add
add
outsb
int
rolb
test
add
arpl
icebp
lods
push
jle
call
bound
popf
pop
xchg
fisttpll
enter
scas
int
incl
or
mov
in
push
mov
out
out
pusha
xchg
sub
sub
pop
stos
jb
cli
cmp
sbb
or
jl
sbb
and
dec
or
lods
inc
ret
jge
iret
aad
push
dec
gs
pushf
jbe
cmp
js
sbb
sub
jg
daa
or
mov
leave
ds
cmpsl
mov
push
pop
adc
enter
dec
push
pop
mov
call
pop
push
fs
pop
cmp
or
jle
inc
repnz
inc
lret
push
in
push
aad
bound
jbe
roll
add
inc
inc
add
je
sbb
ret
mov
push
lahf
outsb
or
movsl
sarb
andb
int3
test
mov
inc
push
rcrl
sbb
lret
or
push
mov
int
je
cmp
jno
sbb
mov
jb
xchg
jge
adc
andl
or
inc
jl
iret
add
test
xchg
push
add
adc
or
cmp
xor
shrl
stos
movb
mov
xchg
cmpsl
xor
dec
test
gs
test
insb
jle
sbb
xor
outsl
sbb
cmp
ja
add
insl
xor
dec
or
jecxz
js
sub
repnz
loop
mov
fadd
je
sarl
out
and
cltd
cmp
jl
sbb
or
ss
daa
imul
fimull
mov
in
push
loop
fstpl
je
adc
or
mov
insl
bound
repnz
sbb
push
popa
cmpsb
pop
frstor
lock
inc
mov
push
push
test
jns
mov
mov
add
fldt
aas
xchg
dec
mov
push
jge
push
jp
lcall
or
push
inc
mov
jae
pop
aad
lea
test
adc
mov
aam
stos
jbe
arpl
add
roll
and
jp
mov
add
mov
mov
faddl
int
cld
push
aas
int
cld
es
dec
scas
jle
pop
fcoml
sbb
inc
movsb
pop
in
les
out
mov
insb
mov
mov
scas
mov
ret
push
add
rorl
scas
mov
sbb
dec
fbstp
dec
lods
add
or
ret
out
mov
xchg
popf
shll
inc
sbb
adc
scas
filds
sub
and
insb
fisubs
out
or
mov
and
popw
shl
add
ret
test
jle
pop
in
jb
fisubrs
sbb
in
lea
dec
int
and
push
fsubs
hlt
mov
mov
dec
dec
dec
int
insb
in
inc
fcoml
jb
dec
xor
xchg
adc
xchg
push
jmp
push
and
int3
xchg
sub
iret
or
outsb
scas
jp
push
inc
jns
lods
jne
daa
lret
in
outsb
testl
cmp
mov
cmp
call
pop
mov
push
cmpsl
push
and
aad
out
sub
repz
scas
inc
ret
shll
or
test
mov
cmp
jmp
push
popf
sub
mov
repnz
jle
shll
sbb
cmp
jecxz
out
push
lret
push
pop
fsubrs
mov
dec
les
mov
pop
in
sub
mov
lret
xorb
dec
inc
addr16
imul
stos
cli
scas
pop
test
fucomp
addr16
adc
jle
sbb
dec
stc
fcmovbe
mov
jle
xchg
sub
jl
mov
ds
movsl
push
pop
pop
push
mov
addb
fistpl
sbb
cmpsl
push
les
aaa
lret
mov
cmp
inc
bswap
insb
lods
xor
cmpsb
or
pusha
jne
fisubs
stos
jl
dec
clc
sbb
gs
lods
fnsave
jle
jle
cmpsl
adc
loope
push
int3
insl
xchg
mov
sub
out
shll
jl
lret
addr16
mov
inc
and
jg
push
scas
stos
mov
cmp
test
mov
outsl
fists
push
sub
jl
out
ret
std
mov
scas
sbb
sbb
cwtl
jnp
add
adc
test
cmp
mov
and
adc
out
popf
lahf
push
push
in
dec
kmovb
dec
dec
insl
or
dec
dec
lahf
out
adc
adc
xorb
dec
daa
inc
hlt
movsl
xchg
lds
in
ljmp
and
daa
leave
pop
pop
or
mov
push
jns
lods
xor
dec
xor
mov
inc
push
fnclex
insb
xor
lds
and
mov
mov
in
cmp
mov
add
rolb
je
test
mov
add
lock
add
push
into
lods
sbb
dec
xlat
mov
mov
pop
xchg
fildl
ds
cmc
popa
fisttps
fnsave
aad
pop
ljmp
cmp
cmp
sub
jge
fadd
into
popf
insb
adc
test
or
call
add
pusha
xchg
sbb
outsb
out
cmpsl
dec
jne
daa
mov
addr16
stos
repz
andb
and
pop
xor
or
outsl
daa
int
push
popf
sahf
push
aas
or
loop
pop
cmpsb
aaa
xchg
jo
scas
fdivp
es
lods
sbb
push
nop
mov
xlat
mov
mov
shlb
dec
or
lods
bound
jge
cmp
cmc
jge
insb
xchg
sub
jae
jge
popl
out
scas
mov
jno
mov
push
in
mov
and
lahf
jecxz
pusha
dec
mov
mov
jo
and
xor
iret
incl
call
add
sbb
ret
xchg
xor
jg
xor
xchg
iret
cltd
sub
xor
xchg
lds
and
mov
mov
mov
jo
fsubrl
or
or
pop
ds
aas
test
movsb
arpl
inc
pop
push
dec
mov
repnz
mov
loop
mov
lret
les
call
pushl
xchg
mov
or
dec
lock
mov
sub
rclb
mov
insl
cwtl
xor
push
jge
xor
rcrb
dec
fs
inc
ja
rcrl
dec
sub
pop
mov
cmpb
dec
push
inc
scas
lea
push
mov
add
das
inc
jbe
cmp
jle
clc
add
arpl
jl
aad
fdivl
cmp
fimuls
dec
jb
mov
sbb
bound
inc
push
shrb
cli
es
in
xor
jb
in
push
jg
movsl
xchg
mov
or
push
mov
push
mov
mov
popf
mov
lods
insl
enter
and
push
cs
mov
dec
ds
movsb
and
xor
mov
data16
int3
outsl
or
inc
jmp
loopne
popa
fwait
or
lcall
or
xchg
adc
sti
insb
cmp
fbld
dec
bound
subl
jbe
dec
xchg
dec
ret
or
push
add
ss
lods
sub
les
mov
jle
fcmovne
inc
cmp
mov
sub
and
insb
les
jle
add
cmp
adc
mov
rcrl
mov
jno
push
mov
jp
into
push
jmp
aas
inc
fsts
sbb
or
fisttps
ja
imul
aaa
ret
mov
push
xor
ds
dec
xor
outsl
lea
pop
add
add
shrb
decl
mov
or
jle
xlat
xchg
inc
adc
jbe
cmp
je
pop
ja
sub
test
xchg
xchg
push
imul
jns
push
xor
hlt
dec
mov
test
cli
mov
add
jb
outsb
outsl
sbb
cmpsl
sub
lahf
dec
icebp
or
pop
sbb
pusha
cmp
inc
jo
sbb
shll
and
jg
lcall
clc
cmp
subl
popf
push
inc
jae
push
mov
hlt
mov
mov
dec
lods
inc
xor
mov
mov
das
nop
out
fldt
shrb
mov
insb
mov
xor
jae
fidivrs
inc
fs
es
sbb
je
or
iret
popa
outsb
jnp
fsubrl
fimuls
popa
pop
xchg
sub
sub
pop
or
cmp
xchg
push
into
xchg
notl
idiv
xchg
ljmp
movsl
outsb
popa
int3
push
adc
push
dec
das
lret
sbb
nop
jle
adc
dec
or
sub
dec
mov
push
inc
daa
popa
cmpl
mov
jl
push
ror
imul
gs
push
adc
xchg
mov
lods
ret
sub
daa
or
dec
cmp
sub
lret
sbb
lods
sub
and
stos
jge
outsl
add
or
out
inc
sahf
fwait
adc
pop
or
rclb
xor
aad
jns
cmpb
push
mov
mov
push
jecxz
lret
imul
call
or
popa
mov
das
popf
cmpsl
iret
aaa
xchg
shlb
movsl
hlt
pop
add
mov
sti
bound
scas
add
repnz
inc
lahf
test
adcb
dec
xor
pushl
cmp
repnz
xchg
fistl
cwtl
xlat
inc
jg
mov
mov
mov
jecxz
jg
xchg
xor
push
cmp
sbb
lret
fdivs
cmp
adc
push
repnz
add
lods
mov
push
pop
cmp
aam
mov
movsl
ret
aas
xor
leave
fstp
push
rorb
push
insl
lods
gs
sahf
cmc
and
and
dec
inc
xor
ret
add
dec
enter
cmp
mov
mov
dec
loop
shrb
inc
and
aas
dec
sub
sub
push
jae
sub
inc
dec
and
ljmp
xor
imull
inc
data16
lret
movsb
addr16
js
mov
dec
mov
pushf
cs
into
adc
sbb
xchg
bound
and
sub
daa
lock
push
into
mov
sbbb
rorl
testl
sub
inc
sub
scas
push
adc
dec
mov
add
outsb
add
cmpsl
push
xor
jl
jge
xor
lahf
sbb
gs
sbb
xchg
inc
lcall
hlt
add
inc
or
jb
jo
mov
mov
pop
shlb
jns
pop
lret
cmp
bound
mov
sub
mov
aam
bound
pusha
pop
pop
test
std
cmc
in
inc
nop
or
insl
pushf
and
xchg
aaa
mov
xor
adc
pushf
mov
jmp
pop
pop
and
lret
cmp
lock
jmp
or
sti
loope
mov
or
adc
fbstp
xlat
xchg
sbb
push
insl
or
and
cwtl
cmp
in
mov
jmp
add
xorb
movsb
jb
xchg
gs
and
in
xchg
frstor
mov
lods
fidivl
adc
pop
ljmp
mov
add
mov
mov
jl
and
or
icebp
pushf
pushl
out
and
mov
xchg
sub
and
stc
shll
xorl
mov
mov
jae
test
jmp
mov
add
xchg
mov
bound
pop
adc
lret
call
add
ss
shlb
and
jmp
cld
or
lahf
mov
pop
dec
add
lea
ds
mov
mov
push
push
xchg
xchg
inc
test
je
repnz
bound
xor
dec
out
dec
mov
bound
mov
and
inc
jae
std
test
inc
pop
sbb
lds
or
rep
xchg
jmp
cmp
repnz
jl
cwtl
rorb
add
inc
jb
lea
mov
mov
out
lea
cmc
cmp
faddp
movsl
data16
jp
incl
fldcw
adc
daa
out
negb
pop
lea
dec
addr16
mov
cmp
pop
xchg
insl
pop
add
movsl
mov
sub
clc
adc
imulb
ret
cmp
sub
adc
addr16
pop
cmp
call
dec
movsl
scas
or
sbb
out
xchg
cmpsl
sub
push
mov
enter
imul
mov
mov
push
inc
orl
cmp
mov
pusha
dec
pop
out
addr16
ss
and
fmuls
sub
sub
cmpsl
xor
jno
mov
mov
iret
sbb
mov
ljmp
or
push
xor
int
xor
cmp
andl
push
fsubr
cmp
out
push
cmp
jecxz
sbb
arpl
push
xor
mov
test
pop
dec
clc
arpl
xchg
hlt
add
aaa
sub
je
cmp
dec
cmpl
in
dec
sub
in
jno
lea
mov
and
jl
sub
push
enter
shlb
popa
gs
or
xor
ds
movsl
rorb
or
xor
je
xor
inc
hlt
mov
sahf
adc
mov
and
test
or
push
xchg
push
pushf
inc
push
test
sbb
pop
flds
mov
movsl
push
push
pop
movsb
mov
jbe
sbb
xchg
in
iret
bound
push
jge
lods
or
stos
sti
pusha
leave
mov
or
outsb
aam
rcrl
mov
xchg
jb
ljmp
add
scas
adc
outsl
xchg
ret
imul
cmp
or
ds
mov
nop
ljmp
push
jb
imull
ljmp
dec
pop
dec
sub
xchg
xchg
inc
sahf
xor
adc
add
cltd
aaa
xchg
je
inc
sbb
pop
jl
leave
lods
add
ss
repz
in
test
dec
jno
data16
outsb
les
push
pushf
dec
xchg
or
add
hlt
test
push
lds
ljmp
fnstsw
adc
dec
xor
repz
loop
push
jp
xchg
pop
insb
jb
push
add
mov
sub
sarb
xor
xor
and
pusha
inc
sbb
into
or
int3
punpcklbw
push
stos
push
out
sub
fnstsw
scas
scas
divb
dec
andb
dec
call
adc
call
cwtl
pop
bound
fcmovnu
jns
inc
jle
imul
mov
or
mov
scas
imul
or
movsb
lock
loop
aad
enter
push
das
pushf
arpl
pop
das
cs
lret
out
ds
cmp
sbb
lods
pop
dec
out
xlat
and
sub
add
ja
or
repnz
out
pop
pop
sbb
bound
enter
cmp
rcll
ror
pusha
test
dec
loope
mov
push
adc
insl
pop
push
dec
roll
arpl
adc
dec
inc
jbe
cmpsl
subb
lock
into
fs
xor
mov
popa
mov
out
cmp
dec
out
sub
andl
mov
insb
mov
xchg
inc
insb
mov
add
xor
rorl
cmpb
popa
mov
test
sub
out
xchg
in
in
inc
cli
xor
xchg
rcll
cmpsl
repnz
xchg
dec
fs
aaa
jle
leave
insl
inc
mov
jb
adc
sbb
je
xchg
adc
and
push
lods
xchg
jle
call
imul
or
sbb
fmuls
loopne
movsl
cmc
fistps
pop
ss
loop
jmp
das
jb
sbb
ret
testb
add
shll
pop
jle
jno
popa
sbb
mov
rclb
cmp
lret
icebp
call
pop
sbb
or
mov
mov
xchg
cmp
sbb
hlt
mov
scas
out
push
in
ss
out
xor
xchg
adc
andl
or
stos
clc
mov
lods
fimuls
push
clc
and
mov
icebp
jb
shrb
adc
or
dec
mov
xchg
cmp
mov
pop
jo
rclb
inc
or
pop
mov
pop
adc
mov
xor
jle
mov
inc
popf
jmp
cmp
es
push
or
jb
pop
clc
sub
inc
mov
pop
push
int
icebp
and
fs
hlt
lahf
xor
in
sbb
sbb
dec
cmp
mov
outsb
push
xor
popa
dec
xchg
enter
add
je
stos
inc
or
push
les
out
cli
push
daa
dec
iret
rolb
pop
daa
rorb
xchg
and
mov
xor
xor
leave
mov
lock
in
xchg
mov
or
call
negl
insb
xor
mov
insb
std
adcl
push
aam
ret
mov
and
mov
mov
int
cmpsl
mov
stos
testl
ret
and
add
and
sbb
stos
arpl
dec
sbb
pop
out
cmpsl
and
popa
mov
arpl
test
push
push
jp
or
or
or
adc
mov
ds
lods
sbb
or
push
test
add
mov
leave
xchg
enter
inc
pop
cmp
lods
rcr
fs
movsl
mov
mov
push
insl
aam
fbstp
mov
mov
xorl
mov
fdivrl
call
pop
mov
lds
ljmp
mov
inc
aaa
sub
jp
pop
lock
or
scas
lds
rorb
arpl
pop
test
pop
shrd
pushl
aaa
sub
andl
mov
push
inc
insl
sub
sbb
xorl
fmull
arpl
cwtl
dec
mov
pushf
mov
lds
in
incb
push
arpl
adc
cli
ret
pop
and
popa
push
movsb
adc
iret
je
insl
xlat
jb
into
push
jno
inc
mov
cmp
pop
pop
and
add
je
push
add
in
out
hlt
push
sub
scas
dec
outsb
stos
and
lret
pop
test
sub
jg
sub
nop
lods
jnp
scas
cli
pop
push
mov
shl
cmp
jmp
scas
gs
sbb
push
aam
inc
adc
jl
adc
push
inc
fisttps
in
out
mov
cmpsb
loop
cs
jb
hlt
jo
add
push
adc
push
inc
cmp
push
add
gs
xchg
popa
xchg
loop
ss
mov
push
jnp
cli
test
lahf
test
or
push
aad
arpl
sbb
fs
scas
scas
mov
dec
pop
lahf
std
push
pop
mov
in
out
scas
xor
cmp
jg
test
inc
push
jl
or
inc
out
mov
inc
xorb
shl
sub
pop
sbb
add
or
dec
lods
shr
sti
ret
je
mov
jae
pop
fdivr
xorl
sub
pusha
mov
je
into
push
mov
orb
sub
arpl
xorb
in
cmpsl
mov
cmp
imul
adc
push
jle
push
xlat
out
mov
lea
loop
ficomps
jb
push
inc
xchg
test
inc
int
mov
jne
je
inc
popa
inc
repnz
mov
cmp
mov
lret
decl
sub
aaa
aaa
or
loope
inc
and
aaa
add
lods
jns
jo
adc
push
mov
cmp
pop
mov
mov
mov
lods
jbe
push
mov
or
enter
je
pop
jae
daa
cli
ljmp
aas
out
popa
mov
cmpl
sub
loopne
lea
pop
nop
cmpsl
mov
fwait
push
mov
sub
lds
mov
xchg
mov
xor
pushl
push
popa
insl
mov
pop
sub
xchg
jb
and
xchg
xchg
out
std
push
adc
and
cs
inc
in
xor
mov
adc
jge
cld
loope
and
ret
add
int
lea
dec
insb
jb
push
movsl
push
push
or
or
test
addr16
mov
aam
push
lods
lcall
mov
xlat
int
adc
add
or
lds
and
cmpsb
bound
movsl
xor
and
pop
mov
xor
or
insb
adc
jae
push
gs
xor
roll
push
adc
gs
cmp
jmp
in
dec
scas
fs
and
lods
imul
xor
jg
sub
lock
enter
ret
push
popf
adc
imul
mov
cli
lods
in
mov
jmp
das
xchg
outsb
int3
mov
push
out
popf
push
loop
negb
xchg
jb
jp
cmp
mov
fidivl
pop
inc
mov
sub
into
mov
cwtl
xchg
push
pushf
jb
fisubrl
push
jb
inc
fistl
lret
mov
loopne
aaa
cmp
cs
test
add
js
xor
xor
jp
push
pusha
loopne
cmp
scas
inc
sbb
test
mov
out
call
sub
push
cs
push
sbbb
jle
sbb
add
sbb
test
sub
pop
pop
shll
ljmp
ret
in
dec
mov
mov
xor
sub
sbb
dec
aad
and
jecxz
lahf
cmp
addl
ret
in
pop
cmpl
pop
popf
sub
jle
popa
xlat
mov
jno
or
outsl
dec
xor
lds
jmp
inc
xchg
ljmp
cltd
adc
lret
add
mov
lock
jae,pt
test
pop
mov
sub
out
movsb
insb
xchg
inc
and
dec
dec
mov
sarb
dec
int
sbb
sti
mov
fistpll
mov
shlb
mov
sbb
pop
mov
xchg
gs
jne
lea
jl
jne
call
pusha
je
clc
aaa
je
mov
lods
xchg
mov
test
jg
xchg
repz
mov
in
ret
xor
mov
pop
rcl
and
lea
ja
js
add
icebp
or
or
aaa
scas
adc
push
jle
sbb
imul
mov
stos
jb
xor
movl
test
popa
into
pop
ficompl
jmp
lret
rcrb
pushf
mov
leave
je
mov
stos
fs
addb
movsl
int3
aas
and
sub
shlb
inc
mov
push
hlt
jg
movsb
fs
not
or
sub
jnp
jne
or
lahf
loopne
push
stos
pop
jb
ret
sahf
lea
clc
mov
xchg
ud1
and
int3
aas
pop
lahf
xchg
jne
popf
lret
xor
or
xchg
ss
inc
fiadds
or
int3
sub
gs
fisttps
sub
pop
ja
call
push
fcmovnu
cmp
adc
pushf
mov
dec
fisubrs
mov
inc
jmp
jne
scas
and
das
cli
pop
xor
lcall
or
pop
cs
add
cwtl
mov
dec
push
stos
xor
push
xchg
nop
popf
les
insl
imul
sbb
xchg
out
cmpsl
sarb
orb
mov
pop
cmpsl
mov
in
test
jo
sub
movsl
outsb
xor
sub
sub
test
jbe
mov
push
cltd
dec
sbb
mov
imul
loope
add
lahf
jnp
mov
mov
insl
and
out
mov
pop
xchg
gs
shrl
das
mov
mov
js
sbb
outsb
mov
cli
sahf
iret
and
push
insb
sbb
insl
lods
and
xchg
sub
outsl
xchg
pop
fs
xorb
mov
dec
push
sbb
adc
aas
pop
sbb
movsl
jne
push
mov
nop
dec
push
or
inc
sbb
sub
add
adc
cmpsl
ljmp
leave
mov
ljmp
insb
dec
mov
xor
jnp
inc
sub
jp
stos
adc
in
repz
shrl
xchg
mov
dec
stos
lds
xchg
dec
sub
xchg
inc
pop
outsb
cmpsb
pop
mov
iret
ja
out
mov
pop
int3
in
mov
jne
mov
insl
aam
or
in
jb
lahf
cltd
fbstp
mov
mov
push
negb
sub
movsb
pop
xchg
jb
xor
pop
pop
dec
data16
out
dec
movsl
loop
xchg
dec
add
sub
inc
popf
push
outsb
mov
leave
clc
nop
or
jl
cmp
xchg
or
xchg
mov
xor
outsb
and
xchg
test
out
sub
insl
xor
out
cmc
or
aad
xchg
gs
sub
push
outsb
arpl
test
outsb
daa
jns
lock
gs
sbb
aad
jne
cmp
sahf
xchg
xchg
gs
mov
or
add
repnz
lcallw
roll
add
in
jo
shl
ja
or
mov
sub
xchg
ja
repnz
cmpl
pop
arpl
gs
rclb
int
sub
rorl
add
cs
sub
xchg
jnp
xor
mov
je
imul
das
lret
and
adc
push
dec
into
lret
cmc
addr16
cltd
ljmp
fwait
xchg
pop
xchg
aas
fidivrl
xor
dec
push
inc
mov
scas
test
xorb
out
mov
ss
xor
arpl
jns
and
aam
mov
xchg
js
rcl
cmp
sbb
sbb
push
inc
add
int3
add
shll
push
sbb
in
mov
sub
adc
jae
movsl
popf
add
lahf
jecxz
jl
cmp
hlt
jno
pop
rcrb
filds
test
mov
int3
sbb
mov
xchg
sbb
push
jl
mov
mov
sub
lds
jno
or
inc
xor
jnp
ja
sbb
shll
aad
xlat
iret
jo
push
push
stos
xor
dec
jb
xchg
out
xor
orl
cmp
imull
jle
popa
scas
mov
nop
fbstp
andb
sub
mov
push
dec
sahf
sub
out
adc
ficoml
mov
push
fs
jle
rclb
xor
fldcw
jge
mov
mov
pop
pushf
xlat
push
filds
call
pop
xor
or
pop
cltd
mov
clc
arpl
xor
sbbb
sahf
adc
in
pushf
test
cwtl
testb
mov
mov
cmp
mov
push
fs
xor
jae
in
mov
dec
xchg
push
mov
cltd
pop
jg
ds
or
or
imul
cmpsl
aam
jg
das
int3
sbb
daa
jne
int3
jle
mov
inc
and
je
xlat
xor
sbb
bnd
shrl
call
shll
fisubrl
pop
bound
jnp
mov
mov
cwtl
das
das
mov
pop
insb
or
mov
mov
popl
jmp
into
inc
dec
dec
negb
jno
pop
mov
shlb
das
lahf
popa
dec
lret
push
xchg
cmp
xchg
jge
add
jo
dec
aaa
ret
aad
loop
xor
das
mov
sub
pop
dec
insl
int3
xchg
jbe,pn
jmp
cmp
inc
mov
outsb
push
aad
ror
popl
jge
cmp
gs
insb
pop
xchg
or
sub
xchg
into
jnp
sub
addr16
and
call
daa
mov
jecxz
and
lea
add
jns
out
add
repnz
mov
gs
push
es
es
loopne
or
push
mov
add
enter
add
stos
push
ljmp
or
xchg
ret
jge
cwtl
inc
jne
icebp
mov
daa
cld
or
pop
dec
pusha
jecxz
out
mov
push
mov
or
leave
cmp
leave
ljmp
mov
dec
cli
shlb
fidivs
jno
in
fldt
out
sbb
add
enter
and
ret
mov
jp
adc
and
jb
mov
xchg
sbb
aas
cs
or
or
or
sbb
out
rorl
rorb
jne
push
push
xchg
push
jbe
outsl
std
xorl
mov
jnp
adc
or
mov
mov
daa
addr16
inc
movsb
daa
pop
pusha
loopne
mov
outsb
sahf
cwtl
sub
sub
in
outsb
xchg
add
and
add
int3
xor
insb
in
mov
xor
pop
popa
addr16
xchg
or
mov
xchg
push
pop
mov
addr16
mov
inc
jge,pn
jnp
cwtl
push
loop
mov
and
ficoml
fsubp
sbb
pop
ds
or
pop
push
sbb
sub
mov
or
lea
dec
lock
push
pop
xchg
jae
mov
push
test
jle
ljmp
mov
mov
cltd
inc
jbe
xchg
popa
iret
out
push
scas
imul
adc
xchg
sbb
pop
push
add
add
popf
aaa
in
mov
shlb
push
push
mov
fcmovbe
mov
stos
xchg
adc
dec
inc
stos
aaa
xchg
mov
outsb
imul
xor
or
pop
push
in
or
stos
into
mov
jne
lods
and
adc
popa
jno
jmp
out
jne
icebp
cmp
pop
dec
jge
sbb
ds
fidivrs
std
ror
mov
outsb
sbb
push
daa
orl
dec
sub
push
fsubs
push
mov
xchg
test
dec
lea
push
dec
nop
jno
nop
sbb
xchg
clc
popf
gs
call
popf
xchg
call
mov
jmp
and
stos
push
das
pop
jnp
push
pop
pop
movsb
popa
pop
jae
loope
fs
arpl
adc
lods
sbb
cmp
pop
int
jle
icebp
inc
inc
pop
mov
mov
dec
push
nop
sub
xchg
ds
jmp
or
pop
lods
loop
jne
jge
and
lock
cmp
mov
mov
je
dec
test
sahf
lahf
ret
pop
lcall
je
ljmp
xor
scas
xor
jb
cwtl
and
cmp
pop
adc
mov
jno
sub
cmpsl
cli
inc
ljmp
das
mov
ss
sub
pop
inc
ljmp
sbb
lret
je
ljmp
add
sbb
insl
xchg
mov
sbb
xor
or
mov
je
mov
or
dec
xor
shll
hlt
repnz
dec
in
sub
fbstp
adc
lods
pop
push
sub
out
ljmp
push
subl
mov
dec
add
jne
jno
dec
jle
test
mul
je
xor
xor
in
ret
addr16
inc
push
stos
and
jge
test
xor
and
movsl
adc
inc
dec
movsl
cld
scas
mov
sbb
flds
xlat
femms
sub
addr16
cltd
and
ret
cmpsl
or
int3
xlat
dec
jecxz
or
push
jge
or
jl
jl
mov
sub
push
sbb
or
and
mov
arpl
push
loope
mov
shl
aas
jp,pt
aas
insl
pop
add
adc
std
mov
mov
lret
sbb
int
repz
dec
inc
arpl
xor
fistl
jb
pop
mov
jecxz
push
mov
scas
setbe
xor
push
mov
sbb
or
sbb
jmp
mov
cmp
daa
mov
mov
fiaddl
push
push
mov
lea
aam
imul
xor
or
pop
fdivl
test
addl
sbb
in
scas
sbb
addr16
cmp
inc
lea
pop
std
arpl
pop
jl
mov
jb
jl
insb
pop
inc
aad
cmp
adc
or
pushf
jo
clc
nop
cmp
jne
xchg
xchg
sarb
insb
pop
push
lea
jb
mov
mov
cmp
mov
or
call
push
nop
in
popa
sbb
push
xor
daa
mov
push
lods
xchg
pop
enter
repnz
lea
test
push
outsl
push
loope
or
iret
dec
jnp
ljmp
outsl
popf
jbe
jb
inc
mov
and
je
xor
repnz
popa
outsl
pop
cmp
stc
dec
ljmp
sbb
lahf
push
adc
imul
pop
outsl
mov
dec
in
lahf
stos
ja
jmp
std
xor
fisubl
sti
dec
jae
xor
daa
addl
cmp
negl
lahf
subb
jns
sbbl
ja
inc
lods
pushf
xlat
aaa
movsl
and
mov
and
lret
push
push
cwtl
mov
cmp
and
jns
jb
int
push
jae
xchg
lahf
pop
cmpsb
xlat
jle
inc
and
aam
popa
inc
inc
xchg
aaa
jmp
mov
cmp
xchg
or
cmp
mov
sti
movsb
in
xchg
or
adc
cmp
xchg
cmpl
cmp
push
mov
ja
std
fldl
lret
mov
fnstsw
out
jle
subb
or
xor
std
push
pop
mov
ds
inc
lcall
sub
sbb
mov
aaa
pop
lea
and
pop
or
inc
imul
cmpsl
stc
lods
loopne
pop
outsb
in
push
inc
lock
fs
stos
std
sub
popf
or
mov
insb
int
pop
add
test
addr16
fisttpl
xchg
dec
mov
lret
aaa
in
xchg
jo
es
jbe
sbb
and
cmp
xlat
mov
lea
or
inc
imul
fisubl
aad
andnps
dec
mov
std
mov
push
in
adc
call
aaa
xor
and
jae
cmp
iret
jns
push
jne
dec
or
inc
push
popa
jg
sbb
add
push
sub
sbb
aas
call
call
mov
inc
mov
dec
mov
xor
xor
int3
daa
lods
mov
push
ja
xchg
je
pop
cltd
jbe
scas
dec
mov
es
bound
addr16
fwait
pop
aas
cmp
inc
cmp
cmpsb
inc
or
push
cmc
xchg
jmp
adc
push
int
ret
lea
fistps
or
mov
jge
pop
jno
jle
fcomps
sub
cmpsl
push
jmp
std
out
xchg
in
cmp
push
dec
sub
mov
cmp
movsl
ret
pusha
dec
lahf
clc
xchg
lcall
fidivrs
xor
or
dec
and
mov
je
sub
iret
lret
ret
test
mov
lock
or
mov
rolb
test
sbb
in
dec
inc
mov
insl
mov
cmp
test
cmp
nop
cmp
ret
loope
hlt
lea
add
scas
gs
or
pop
rorb
and
add
mov
or
js
mov
outsb
lods
push
push
data16
mov
lea
orl
shll
dec
ret
hlt
aaa
in
imulb
out
xchg
hlt
mov
mov
inc
stos
fnstcw
test
push
adc
ss
popf
xor
and
in
mov
pop
lds
test
mov
hlt
test
or
shrl
es
in
sarb
jne
pop
push
hlt
sbb
jns
cmp
outsb
gs
leave
mov
out
lahf
or
dec
repz
sub
push
pop
test
aas
pop
xlat
movsb
mov
sahf
push
mov
aam
mov
inc
xchg
mov
jns
outsb
cmp
xchg
sti
push
xlat
insb
mov
je
xor
repz
mov
mov
icebp
add
sub
insl
or
sti
imull
loope
into
pop
lret
add
lahf
mov
and
out
dec
dec
sbb
psraw
xchg
cmpsb
push
sbb
aaa
iret
lods
jg
and
inc
daa
fs
imul
imul
arpl
popa
mov
xor
insl
push
mov
insl
jp
stos
dec
add
aam
ficompl
add
data16
or
mov
frstor
shll
lds
jmp
jo
nop
mov
sub
mulb
push
xchg
test
ljmp
insb
fldcw
inc
mov
sbb
stos
and
daa
sti
popf
leave
ficoml
xlat
xchg
add
inc
cmp
pop
inc
pop
pop
mov
mov
lods
inc
shlb
inc
or
pop
int3
mov
xchg
ds
dec
or
jns
or
dec
into
jg
ljmp
mov
pop
xor
xchg
mov
cmp
daa
lahf
mov
mov
add
lds
mov
push
mov
xchg
addr16
jne
test
out
lds
into
mov
push
pusha
or
sbb
cld
cli
dec
outsb
inc
pop
sub
jge
pop
iret
inc
das
daa
cmp
mov
lods
lea
sti
out
jno
sbb
inc
stos
add
mov
push
fmull
sub
add
lods
pop
sbb
mov
fmul
dec
jae
mov
popa
pop
or
push
xor
data16
loopne
xor
loopne
jge
cmp
in
add
movsb
imul
pop
mov
pop
in
adcl
sbb
dec
into
ds
sub
push
call
addb
in
and
push
jmp
xor
or
cmp
adc
insl
cmp
xor
aad
ss
test
sti
cmp
jne
ret
int3
or
out
mov
sbb
jne
outsb
mov
cmpsl
ret
mov
mov
shlb
stos
mov
jne
int
cld
fwait
dec
jecxz
jmp
arpl
hlt
lret
jge
scas
int
fstpl
insl
mov
and
mov
fsubl
popf
sahf
jo
cmpsl
add
dec
addr16
pop
or
out
sbb
stos
jns
je
push
sbb
mov
lods
loopne
jmp
mov
or
decl
inc
pop
insl
into
js
popa
das
or
inc
call
cmp
inc
scas
xor
pusha
lcall
cmp
in
insl
jge
lods
push
fisubl
ret
daa
lret
xlat
ljmp
aas
jecxz
lods
mov
mov
jbe
and
xchg
cmp
xor
in
adc
lea
or
push
std
rorb
add
test
cmp
ja
insl
ljmp
add
data16
adc
mov
imul
test
fidivs
mov
imul
dec
ljmp
mov
fsubrl
jecxz
in
lcall
cmpsl
mov
mov
xchg
pop
lahf
xchg
fistpl
bound
out
loop
and
jmp
xchg
mov
test
test
es
push
test
ret
and
sbb
pxor
mov
hlt
mov
and
add
arpl
mov
fsubs
mov
enter
ret
repnz
into
pop
inc
inc
adc
and
cwtl
ss
nop
out
mov
mov
fcom
jno
cmp
cmp
push
add
andl
mov
push
adc
popf
inc
or
notb
mov
cmp
xchg
pop
dec
popaw
ljmp
mov
test
loope
mov
sub
ds
jl
pop
lcall
pop
push
or
push
mov
lds
adc
insl
icebp
aaa
mov
aaa
xor
mov
lea
inc
mov
xchg
mov
rclb
xchg
popa
out
repnz
js
jg
setnp
jbe
xor
push
movsl
gs
mov
test
dec
inc
push
xchg
sbb
add
cmpsb
or
enter
insb
hlt
or
add
aam
das
fldenv
ljmp
and
push
lcall
movsb
gs
sbb
mov
arpl
or
test
xchg
insl
jne
xor
xchg
int3
pop
imul
or
jle
es
mov
pushf
lea
mov
lods
dec
cli
ret
nop
cmpl
out
mov
push
inc
ja
in
call
mov
iret
test
aad
sti
push
scas
ror
xchg
jno
scas
cmp
ret
adcl
stc
cmpsl
inc
fwait
lahf
cmp
and
mov
mov
sub
scas
into
jecxz
clc
addr16
mov
stos
inc
popa
xchg
xor
or
push
or
pop
scas
push
loop
shlb
mov
movsl
pop
lea
push
jecxz
aas
dec
pop
xchg
imull
leave
aaa
mov
inc
arpl
add
mov
sbb
stos
insl
test
sub
and
jo
and
addr16
gs
mov
mov
inc
sub
call
loop
mov
pop
outsb
int3
lods
xor
lea
fdivl
jg
hlt
xor
fadds
and
add
or
xlat
xchg
dec
jbe
cmp
sbb
xlat
sub
fldl
scas
inc
paddusb
and
xchg
jle
push
mov
das
ss
aaa
into
add
std
mov
mov
add
add
pop
je
cmp
dec
ret
sbb
mov
xor
mov
imul
out
push
les
mov
popa
sbb
out
gs
addr16
xchg
dec
xor
inc
or
ret
les
jge
jbe
cwtl
and
mov
sbb
fsubrs
loopne
lods
lds
mov
mov
in
hlt
xlat
mov
cmpsl
sub
daa
in
xor
cli
xor
pop
cmpsb
ret
lods
insl
add
dec
repnz
xlat
xchg
cs
ficoml
in
in
cmc
pushf
outsb
fistpl
inc
loope
jle
insb
call
pop
movsl
loop
in
hlt
inc
mov
xchg
cmp
or
mov
lahf
insl
movsb
rclb
pop
or
imull
dec
xchg
xor
xchg
lret
stos
pop
and
inc
xchg
hlt
bound
or
adc
das
into
ret
jecxz
dec
cmpsl
es
push
cli
cmp
fcmove
arpl
add
jp
jg
and
movsb
mov
dec
out
dec
mov
ds
lcall
jp
jl
cwtl
adc
push
ja
xchg
lahf
cmpsb
popa
xchg
pop
icebp
xchg
pop
dec
int3
xlat
dec
int
rdtsc
cmp
cmp
and
push
or
adc
popa
sub
dec
dec
xchg
mov
or
cmp
xchg
mov
dec
mov
xlat
xlat
aaa
out
or
rolb
mov
loopne
test
mov
and
cltd
inc
jmp
jl
iret
andb
in
ljmp
in
shll
push
pop
adc
and
fs
inc
lods
jmp
movsb
and
sbb
and
bound
cmp
int
push
outsb
std
inc
mov
nop
and
scas
lea
stos
dec
and
or
dec
daa
fucomi
xchg
and
lock
push
test
imul
pop
nop
mov
out
aam
sub
arpl
push
and
jmp
mov
push
cmp
lods
jmp
dec
popa
pop
jmp
jb
jle
out
mov
mov
mov
pop
push
fisubs
pop
push
jmp
outsb
ja
pop
ret
add
inc
testb
pop
mov
repnz
outsl
in
mov
mov
jecxz
add
mov
pushf
sub
lea
subl
or
dec
push
ret
mov
nop
bound
adc
cmp
lock
fcomps
and
cld
adc
pop
cmpsb
sahf
or
add
stos
xchg
mov
movsl
in
push
int3
fs
test
iret
scas
cltd
int
test
scas
or
cmpsb
add
mov
mov
mov
mov
inc
dec
pusha
into
aas
sbb
jnp
mov
lea
sbb
cltd
or
sahf
xchg
ds
mov
scas
out
in
das
xchg
dec
push
int3
ds
or
sbb
inc
addr16
mulb
xchg
add
std
in
cltd
dec
das
int
sub
or
in
pop
in
ret
mov
mov
mov
outsl
pusha
xorb
out
jbe
lcall
mov
in
test
pop
add
push
jns
dec
mov
shrl
mov
popf
aam
daa
or
ljmp
pop
in
add
lret
cwtl
dec
inc
arpl
lret
cld
mov
ja
aaa
dec
cwtl
or
inc
pushf
pop
or
push
mov
cmpl
sub
addr16
rdpmc
dec
fldln2
pop
scas
popf
sub
out
inc
cltd
pop
and
pop
mov
and
or
cmp
scas
or
dec
adc
or
and
lret
push
pushf
push
andl
adc
lahf
cltd
enter
ds
pop
nop
pop
mov
dec
lcall
push
data16
push
repz
notl
mov
sub
sbb
push
jo
das
ja
xor
idivb
scas
das
pop
add
inc
and
adc
lods
outsb
mov
or
and
push
sarb
pop
fwait
inc
sbb
lea
or
insb
or
mov
daa
int3
daa
and
cmp
cmpsl
lods
xchg
daa
and
cmp
scas
lods
mov
into
mov
in
dec
dec
sbb
test
arpl
push
sub
sbb
test
mov
and
sbb
mov
arpl
push
sub
sbb
stos
and
test
insl
and
in
dec
lods
sbb
lea
push
or
insb
in
dec
lods
sbb
mov
test
pop
mov
cmpsl
sbb
xchg
test
push
mov
scas
sbb
mov
test
or
sbb
mov
ret
stos
aaa
in
mov
in
and
ds
loopne
xor
pop
das
or
mov
into
or
and
cmp
and
movsl
cs
mov
jp
push
cmovge
mov
or
dec
mov
inc
xlat
mov
imul
push
xor
js
fs
movsb
dec
jns
cmp
sbb
xchg
shlb
lahf
and
lcall
enter
std
test
daa
mov
and
sbb
adc
push
js
pop
jecxz
call
xor
dec
rcrb
das
sub
pop
in
jns
xorl
ret
add
cmc
or
lods
xchg
jl
sub
andl
and
imul
jne
add
add
lea
mov
sbb
sbb
aaa
insl
add
shlb
leave
sub
jbe
movsl
mov
ja
cmpsb
mov
dec
insl
imul
mov
incl
or
cmpsb
iret
xor
mov
lods
push
push
xor
xchg
insl
mov
and
inc
arpl
insl
xor
fwait
gs
bound
cwtl
inc
adc
aaa
push
into
jg
xchg
pop
or
les
and
cmpsl
push
addr16
push
fisttps
inc
imul
sbb
or
push
cwtl
add
lahf
insl
push
cmpsl
xorl
arpl
inc
xchg
mov
jle
rcr
lahf
push
loope
inc
test
leave
test
cmp
stos
in
popf
xor
imul
std
and
stos
add
movsl
xlat
in
xor
and
enter
and
popf
jb
popf
dec
loopew
insl
mov
lret
cmp
and
incl
xchg
and
ljmp
xchg
mov
fstpl
cltd
sbb
cmpsl
test
in
xchg
movsb
xor
movsb
mov
out
add
addr16
push
test
mov
pop
dec
sar
cmpsl
mov
lahf
jl
lea
or
sub
add
popf
pop
out
loopne
xor
add
pop
dec
or
lock
push
lods
in
sub
add
std
mov
cmp
mov
arpl
push
jl
insl
in
imul
stos
insb
cltd
shrl
jnp
mov
jnp
fstpt
mov
outsb
jae
and
pop
mov
mov
insb
imul
out
xchg
jo
adc
popa
jg
sub
fldt
xor
mov
lret
shll
cmpsl
inc
shlb
cltd
sub
jg
addl
lret
out
or
cld
mov
test
jae
cwtl
or
push
scas
adc
mov
mov
inc
sbb
mov
gs
jmp
popa
and
movsb
mov
mov
inc
and
dec
lds
sbb
xor
cmp
xchg
xor
lock
push
ljmp
xchg
mov
fdivrl
inc
mov
and
sub
push
aad
push
pop
add
inc
adc
insl
cltd
shlb
jns
jge
add
adc
push
out
sbb
mov
gs
mov
and
stos
stos
mov
pop
pop
bound
fimuls
adc
rcr
xor
push
adcl
push
xor
jo
xchg
jbe
xchg
es
scas
mov
test
dec
or
cld
popa
mov
lret
inc
scas
aas
sbb
jb
mov
mov
nop
popa
sbb
add
sbb
les
xlat
mov
clc
mov
fidivrs
fwait
in
fs
xchg
popa
xchg
andnps
cmp
popa
imul
jb
stos
repnz
and
xchg
es
xlat
push
leave
lret
out
inc
enter
into
out
lret
insl
jno
add
mull
push
and
xor
js
mov
inc
push
mov
je
and
and
scas
mov
das
cmp
cmp
mov
addr16
jnp
pop
sub
aaa
stos
int3
shlb
popa
inc
sub
ljmp
lret
jae
fcmovb
aad
pop
adc
jbe
adc
sub
call
mov
mov
ret
cmpsb
dec
sub
movsb
mov
dec
pop
pop
movsl
int
or
aam
push
fistps
lods
js
in
in
outsb
scas
push
add
lret
sub
inc
jb
adc
xor
lods
aas
add
pop
pop
mov
in
pop
pushf
or
sub
aaa
pop
cmpsl
fsts
mov
incb
in
jo
gs
sub
adc
sbb
fists
dec
stos
aad
xlat
in
mov
jge
shll
call
jns
in
lods
xlat
mov
cmp
les
cmp
push
and
push
mov
into
gs
xor
inc
xlat
mov
andl
xchg
lea
iret
outsb
std
and
and
ss
and
cmp
push
mov
inc
addb
xor
ja
pop
ret
hlt
cltd
pop
lea
ret
mov
pop
jp
inc
popa
nop
arpl
cltd
jmp
les
pop
lods
pop
out
mov
mov
or
cltd
dec
xor
add
aad
daa
mov
leave
clc
pop
lea
out
cwtl
mov
in
mov
gs
jmp
shlb
mov
fisttpll
sbb
enter
mov
addr16
pop
dec
sbb
sub
cmpsl
daa
incl
stos
mov
faddl
lcall
pushf
test
push
rcrb
dec
xor
or
dec
je
loope
inc
pop
cmpsl
pop
adcb
xlat
xchg
pop
outsb
dec
or
enter
mov
and
push
es
loop
mov
cmpsl
test
lahf
je
add
mov
outsb
out
jne
xchg
xor
push
inc
inc
cmp
out
sahf
mov
jb
cmc
mov
push
in
out
mov
outsb
outsl
jbe
xor
es
and
pop
stos
std
mov
cmp
jge
sbb
loope
jne
add
fmuls
xchg
adc
incl
insl
dec
lds
adcl
jno
iret
sbb
jmp
pop
jmp
sub
dec
les
mov
or
cli
sub
dec
movsl
push
sub
lods
leave
test
insl
pop
jmp
mov
in
mov
mov
in
addr16
mov
mov
ljmp
mov
cld
inc
pop
arpl
adc
cs
or
sqrtps
adc
rcll
jno
lea
pop
int3
push
cs
pop
adc
movsb
pop
nop
mov
push
add
adc
lret
jge
inc
in
je
fadds
loopne
stos
add
ror
mov
outsl
push
iret
clc
pop
xlat
push
imul
and
adc
int
fadds
or
sti
mov
shll
jne
and
cmpsl
jb
into
neg
adc
adcb
je
mov
incl
push
popa
cli
or
xor
dec
jg
sbb
ret
cmpsb
mov
pop
test
mov
ljmp
out
ret
add
dec
push
cmpl
data16
fldl
mov
orb
dec
ja
mov
and
mov
aad
mov
sbb
stos
dec
cmp
outsl
lret
imul
jge
inc
in
push
cmp
ret
pop
jno
inc
mov
xchg
cmp
test
or
les
inc
lods
lea
add
fwait
pop
mov
sbb
adc
mov
pop
in
inc
aaa
popa
dec
pushf
and
jle
bound
adcl
out
out
mov
insl
cld
ret
add
popa
enter
xchg
out
cs
ret
int3
push
and
fldcw
inc
outsl
sub
popa
inc
xlat
dec
bound
pop
jmp
xor
insl
jmp
xchg
outsl
xor
xor
lods
cmp
push
add
mov
sahf
push
scas
cmc
cmp
shll
cmp
and
out
jl
roll
cltd
add
call
int
and
xlat
xor
inc
ja
mov
gs
lcall
mov
pop
cmp
dec
rcrb
mov
mov
popa
mov
or
dec
mov
daa
or
aaa
test
scas
xchg
push
pop
int
lods
sub
push
xchg
repnz
std
xor
loope
fistl
sahf
xchg
xchg
push
fisttpl
sahf
adc
sub
mov
lahf
sbb
lret
icebp
or
sbb
adc
fldt
xor
daa
inc
dec
xchg
mov
pop
mov
popf
cmp
or
pop
lods
aaa
stos
push
fisttpl
add
je
insb
mov
stos
and
call
addr16
jb
adc
fnop
jmp
repz
pop
mov
rcrl
les
push
insl
pushf
push
pusha
test
or
and
mov
push
out
addl
cmpsb
mov
inc
ja
insl
lds
adc
movl
push
fs
scas
dec
mov
xor
inc
push
mov
jmp
adcb
outsb
test
or
test
lock
push
mov
in
aaa
icebp
aad
rcrb
mov
divb
jbe
imul
jno
or
cld
fldenv
push
outsl
sub
aaa
xchg
mov
fldl2e
imul
add
and
sbb
bound
jo
jmp
or
int
fisttpl
cwtl
test
cs
or
jp
int3
dec
stos
xor
cmpsl
dec
push
popa
sbb
test
push
pop
jecxz
mov
loope
sub
xchg
sbbl
sbb
xor
or
aaa
add
movsb
pop
outsb
mov
mov
imul
jge
rcr
push
add
scas
mov
cmp
das
lcall
push
push
xchg
inc
dec
ret
cs
aaa
lods
jne
fnstsw
nop
dec
in
or
xchg
lahf
fistpl
ds
daa
mov
lods
jb
dec
aas
push
inc
dec
mov
mov
push
rclb
mov
or
popl
clc
add
arpl
or
push
pop
jge
lods
movsb
stc
xchg
aad
imul
adc
lahf
nop
pop
aam
xchg
inc
and
loopne
or
imul
or
mov
dec
pop
lods
xchg
xchg
sahf
pop
mov
popf
frstor
xlat
adc
in
sahf
mov
rorl
push
in
push
and
xchg
pop
push
pop
rcrb
fidivrs
mov
ret
jg
pop
daa
ss
shld
inc
fsubrl
mov
aam
in
dec
sbb
fcoml
out
mov
inc
lcall
push
inc
add
ret
scas
xor
and
pop
dec
pop
sbb
cmpsl
orl
cmpsl
xchg
sar
rol
das
add
lock
in
pop
lods
xor
insb
sub
iret
mov
xchg
icebp
decl
fimuls
mov
mov
js
push
xlat
sbb
lret
mov
popf
mov
sbb
mov
mov
movsl
repnz
dec
xor
adcl
rcrl
mov
mov
popa
or
in
mov
shrb
and
xor
daa
sub
and
cmpsl
pop
mov
out
pop
pushf
js
outsl
mov
test
or
jb
dec
rorl
and
inc
mov
mov
add
xchg
lock
xchg
call
rol
lods
sub
push
ja
push
insb
je
ja
push
or
shll
xchg
int
mov
cmpsl
cmpsb
cmp
sbb
inc
jbe
xor
or
movsl
insl
adc
ljmp
xor
leave
movsl
sarl
sub
fldt
pop
xor
pop
aad
add
ja
push
cmc
pop
sub
mov
cltd
mul
mov
jno
mov
iret
call
pop
repnz
sbb
mov
pushf
push
fwait
dec
mov
sub
pop
adc
int
sahf
lock
test
fadds
xchg
jge
aam
inc
dec
aaa
add
xchg
dec
or
testb
add
adc
das
xchg
imul
adc
mov
rcrl
iret
out
xlat
mov
push
insl
pop
adc
mov
jnp
jg
insb
insl
icebp
out
push
call
outsb
lret
cs
mov
sbb
push
hlt
leave
ja
inc
fistps
push
push
push
fidivrl
mov
dec
mov
sbbb
test
fisubs
or
fcoms
cltd
je
andl
mov
js
in
insb
jns
mov
pop
xchg
popf
adcb
ljmp
push
sub
xchg
bound
mov
test
add
and
and
test
bound
xchg
and
scas
jb
jbe
xchg
adc
inc
push
rcrb
mov
aam
dec
pop
dec
enter
into
out
je
sub
rorl
sarl
mov
mov
inc
cmp
bound
fld
jnp
in
pop
idivb
or
ljmp
push
cs
in
outsb
cltd
popf
lds
xor
scas
sub
inc
xorb
inc
jmp
testb
xchg
shrb
popa
mov
in
std
push
add
lds
or
out
das
push
ljmp
jb
int
mov
cmpsl
rolb
imul
test
mov
and
adc
call
idivb
lods
aaa
push
scas
mov
xor
pop
out
lea
xor
or
gs
adc
push
leave
xor
dec
jmp
outsl
cmp
adc
pusha
fiaddl
push
rorl
call
jbe
aad
cmp
test
imul
mov
ss
xor
cmpsl
scas
sbb
lret
fildll
cmp
push
mov
fisubs
in
or
out
mov
or
lock
cmp
mov
xchg
xor
aad
add
stos
arpl
in
sub
into
aad
bound
sub
mov
dec
sbb
jo
cmp
fisubrs
push
in
push
xor
mov
xor
fs
xor
push
gs
add
ljmp
or
fldl
stos
iret
mov
out
dec
outsb
dec
pop
cmp
jp
mov
aas
jae
jg
dec
js
lea
test
mov
cmp
out
ret
sbb
dec
sbb
out
cmpb
cmp
mov
movsb
test
jne
sub
push
jae
call
dec
jae
jecxz
inc
popa
js
shll
andb
je
lods
and
lahf
push
shll
and
inc
shll
outsb
add
cmpsb
pop
jge
out
and
leave
sub
decl
mov
pop
jge
add
mov
sub
jecxz
xor
aaa
mov
pop
icebp
sbb
popf
jp
add
pop
pop
lods
sub
dec
in
lcall
std
outsl
add
mov
movsb
jmp
inc
xor
mov
mov
mov
sbb
jb
mov
mov
insl
repnz
fcomps
push
jge
mov
mov
out
clc
pop
add
and
mov
fldl
popf
adc
pop
mov
mov
iret
pop
sbb
int
imul
fmull
into
inc
inc
xchg
pop
gs
sbb
adc
cmpb
push
out
lret
cmp
fldl
push
or
mov
ret
dec
mov
mov
into
push
ja
in
notl
sahf
xchg
pop
jns
fisttpl
push
push
sti
adc
mov
dec
push
orb
scas
outsb
popa
arpl
stos
subb
out
cmc
push
ret
das
lods
sub
mov
mov
gs
inc
and
xchg
cmp
jg
or
mov
sbb
enter
ja
inc
lea
cmpl
adc
imull
pop
mov
jns
or
sub
push
add
jge
jge
or
lret
adc
out
dec
ljmp
andb
outsl
fdivrs
and
test
aad
add
fcmovnb
fimuls
popa
sbb
add
mov
mov
adc
popa
out
in
pop
dec
push
sub
xchg
fidivrl
jnp
cmp
inc
and
fcmovne
ds
movsb
in
adc
int
push
jbe
clc
pop
in
in
aas
pop
in
out
add
inc
lahf
stc
fldl
mov
lea
js
push
add
jge
arpl
jne
insl
mov
sbb
bound
call
mov
jns
add
mov
test
lods
and
xor
or
sbb
or
fldl
mov
pop
xchg
pop
in
or
jne
aaa
xchg
push
cmpsb
shlb
call
jg
dec
or
out
mov
es
jg
dec
imul
repz
push
hlt
pop
dec
push
pop
idivb
scas
mov
rorb
push
shlb
es
xchg
fnsave
jecxz
sbb
stos
inc
pop
push
loopne
xchg
fsubrs
sub
test
jae
gs
mov
sarb
lahf
inc
mov
push
movsb
and
sbb
pop
xor
xlat
int
add
cmpsb
aad
mov
inc
in
fisttpll
outsl
mov
clc
mov
mov
std
mov
rcll
jno
lcall
cltd
jne
jne
mov
jo
rol
hlt
addl
fisttpll
and
add
push
fs
xchg
popa
pusha
sbb
and
cmp
xchg
pop
and
sahf
xor
inc
mov
dec
and
xor
mov
dec
pusha
mov
or
ret
dec
popa
sbb
stos
xchg
into
into
add
xchg
and
ret
xchg
or
testl
xchg
aad
shll
sarb
fnstcw
test
push
dec
out
popf
repnz
sbbb
dec
push
es
xlat
push
add
xchg
xor
fstpl
push
insb
repnz
pop
loopne
daa
jne
mov
icebp
jns
out
int
adc
xor
aas
lret
iret
mulb
rol
cld
cmp
shll
lret
xlat
mov
jne
dec
cmp
dec
dec
out
sub
fidivrl
mov
jecxz
push
out
mov
test
xchg
mov
popa
fstl
push
pop
cltd
xor
clc
cmpsl
test
imul
ret
jg
or
mov
jbe
test
lock
pop
dec
push
loop
push
fwait
jnp
or
popf
xor
mov
popa
into
cmp
xor
daa
aad
out
pop
xchg
scas
scas
mov
or
mov
and
stc
lods
mov
mov
int
addr16
iret
sbb
lds
jge
in
shll
adc
pop
jb
dec
jg
or
sbb
nop
lea
pushf
xchg
cmpsl
movsl
jnp
faddl
jp
ror
js
jne
jp
push
fiaddl
mov
cmp
idivb
loopne
mov
and
enter
add
subb
movsl
inc
sahf
add
mov
cltd
pop
imul
mov
mov
test
mov
stos
mov
lods
jns
cld
cwtl
daa
adc
or
xchg
out
test
or
dec
jle
lea
hlt
adc
push
movl
out
pcmpgtw
pop
insl
mov
pop
dec
scas
adc
xchg
xchg
jns
sub
lods
imul
adc
xchg
fsub
fwait
popa
cmp
push
xchg
sbb
leave
lret
cltd
frstor
cld
jp
pushl
fs
insl
in
add
mov
xchg
jp
dec
popl
add
adc
push
pop
shll
mov
xor
repz
popf
int3
in
cmpsl
mov
outsl
in
sub
insl
mov
push
add
inc
sti
lock
or
cmp
mov
or
or
sub
nop
lods
insl
push
lahf
cmp
mov
cmp
cmp
push
aaa
adc
lock
push
dec
xchg
jge
push
fucomp
push
loop
gs
rcrb
ljmp
insl
add
pop
popf
rcrb
cmpsl
cmp
sub
jmp
mov
js
call
add
xor
xor
jne
or
fisttps
mov
xor
rolb
add
pop
roll
push
hlt
jae
mov
xor
loope
mov
out
push
jne
cmp
movsl
sbb
xchg
fmuls
fsubrs
mov
addr16
repz
ja
cmp
xchg
fnstsw
sub
xchg
icebp
ret
cmpsl
add
jno
movsl
iret
and
push
cmpsl
add
cmpsl
stc
xchg
ljmp
mov
arpl
jg
cmp
ljmp
outsl
ss
fs
add
pop
cmpsb
outsl
mov
movsl
jb
ds
mov
cs
ja
and
int3
das
lea
ret
sbb
ficoml
in
dec
cmp
sbb
in
rcr
sub
dec
pop
cmp
inc
or
in
xchg
cmp
loope
jg
mov
enter
scas
rcrb
push
movl
xchg
lock
out
pop
sub
bnd
fimull
lock
lahf
cvttps2pi
nop
movsb
rorb
or
xchg
add
fldenv
repz
not
in
inc
lods
mov
xchg
bnd
jl
xchg
pop
sub
pop
lock
dec
pusha
xlat
add
and
enter
in
xchg
pop
and
inc
mov
loope
aad
dec
pop
adc
cmc
adc
dec
xchg
test
xchg
jb
pop
scas
imul
hlt
adc
vunpcklps
vminpd
xchg
popa
mov
sub
cli
pop
xor
cld
sti
push
xor
dec
mov
or
dec
jmp
notb
mov
ds
jle
imul
mov
into
fxch
jg
xor
and
sbb
pop
fwait
push
push
daa
ja
ja
outsw
adc
lods
addr16
adc
sbb
cmp
mov
lods
das
imul
jg
test
inc
jl
dec
sbb
cwtl
jl
aad
lcall
push
aas
in
lods
dec
jle
gs
fistpl
insb
ja
jg
mov
push
xchg
xchg
stc
insl
cmp
mov
insb
ds
data16
jmp
sub
lahf
mov
inc
jae
mov
cli
push
out
inc
ljmp
xchg
mov
rclb
or
jp
and
cmpsl
adc
push
in
es
int3
mov
push
inc
cwtl
mulb
and
mov
inc
pop
sbb
dec
sbb
jo
xor
inc
outsb
jns
dec
mulb
pop
dec
mov
outsb
pop
into
insb
testb
mov
adc
and
je
add
add
loopw
pop
pop
jg,pt
or
mov
adc
pop
outsb
dec
aam
cmc
lods
incl
frstor
mov
lods
lock
lods
sbb
out
and
outsl
xor
imul
cmpsl
mov
pop
mov
xlat
push
js
sub
dec
mov
push
pop
enter
call
bound
sub
in
test
and
inc
call
adc
aam
mov
add
mov
and
outsl
ja
mov
fsub
or
xchg
insl
pop
imul
out
movsb
lods
into
nop
xor
icebp
mov
cmpsl
arpl
stos
cs
inc
push
dec
ret
pop
lds
pop
mov
push
fwait
push
mov
xchg
arpl
ret
sbb
sub
iret
xchg
mov
xchg
and
cmc
cmp
mov
lds
add
mov
xchg
in
or
mov
xor
push
inc
or
mov
sub
stos
ja
push
add
push
jb
out
or
and
nop
xchg
ja
cmp
jb
pop
add
movb
add
iret
mov
daa
adc
sbb
or
or
push
arpl
dec
add
mov
inc
jp
push
add
scas
mov
daa
fs
fcoml
popf
push
fsubl
and
aaa
sbb
xlat
xor
fs
test
inc
ret
or
daa
out
mov
jp
orb
inc
sbb
cmpsl
mov
xor
mov
aam
aam
inc
mov
inc
push
sarl
mov
cmp
and
push
pop
lahf
rorb
inc
jge
data16
mov
push
mov
jnp
iret
sbb
cld
int
sbb
inc
mov
and
cld
popf
xlat
ljmp
test
das
ja
sbb
fstl
push
push
lock
test
ss
jge
sub
inc
test
dec
mov
rolb
in
insb
dec
aas
aaa
cltd
lret
adc
out
pop
inc
imull
add
and
lods
xchg
lea
inc
stc
or
jge
sar
jge
mov
jge
xchg
lahf
insl
int3
out
iret
xchg
mov
out
cs
clc
rorl
fwait
gs
lods
jae
xchg
or
mov
lods
jnp
lea
push
out
mov
pop
fwait
daa
cld
adc
mov
pushl
aaa
pop
cmpsl
jbe
jo
into
pop
aad
lret
cmc
xor
xor
loop
inc
into
pop
adc
fadd
cmpsl
mov
pushf
ja
dec
xor
dec
push
inc
lahf
iret
add
ret
push
pop
hlt
inc
mov
sbb
pop
push
dec
push
sbb
out
imul
pop
lcall
or
push
xchg
cld
xchg
mov
cmp
stos
lods
aaa
dec
idivb
fs
lds
xchg
sbb
push
sbb
cli
ret
xchg
and
gs
xchg
rcrl
adc
mov
adc
mov
insl
ret
dec
pop
insb
popa
out
sbb
xor
insw
xchg
sub
ljmp
std
and
orl
mov
pop
pusha
ds
movsb
xchg
push
push
movsb
and
jg
mov
roll
rcrb
cmp
bound
xchg
push
push
orl
pop
jle
outsb
fs
out
xor
jl
sub
dec
mov
call
add
jg
jo
mov
filds
mov
mov
ljmp
popa
xchg
sbb
lds
int
mov
cmpsl
xchg
sbb
jl
loopne
int
mov
or
and
test
cmp
aam
dec
insl
popa
rol
popa
mov
inc
shlb
rcll
stos
lret
test
aas
sbb
movsl
mov
test
jno
stc
mov
lods
imul
test
and
xchg
ss
cmc
into
push
lea
lods
or
push
clc
dec
fcoms
jns
push
in
cmp
pop
adc
jecxz
jbe
mov
cmpsl
int
sub
test
addl
push
lahf
ret
addl
mov
jo
add
daa
cmp
sbb
movsl
mov
lods
in
xchg
ljmp
in
xlat
mov
outsl
xchg
add
rorb
js
xchg
gs
out
jmp
push
mov
je
xor
movsb
xchg
cmc
andb
repnz
jne
aaa
cmpsb
shll
push
or
repz
mov
daa
bound
ja
scas
lock
imul
popa
popa
jg
mov
jb
aad
and
jns
add
rol
ret
scas
push
ret
push
mov
jle
and
es
ljmp
mov
dec
push
inc
mov
pusha
mov
outsl
addr16
aam
pop
jle
mov
xor
inc
je
movsl
inc
stos
pop
mov
addr16
push
xchg
mov
ds
dec
daa
mov
mov
push
test
cvttps2pi
ja
lods
pop
daa
dec
cli
cmp
push
adc
dec
jecxz
dec
adc
div
xlat
imul
mov
cmc
push
add
sub
jnp
inc
sub
fwait
testl
out
loopne
es
add
cmp
or
and
jge
lods
lods
insl
or
push
lahf
dec
jl
mov
jge
stos
lods
nop
mov
loope
jge
mov
ja
xor
orb
fs
fidivs
xchg
aam
cmp
subb
inc
addr16
fadd
lret
or
push
fs
xchg
jle
ffree
loop
mov
sbb
push
push
fistl
mov
pop
ljmp
hlt
mov
mov
adc
int
enter
push
ljmp
hlt
ss
push
mov
hlt
out
and
pop
mov
call
inc
in
adc
incb
emms
cli
mov
out
test
ss
add
fucomp
sbb
add
popa
lds
cmp
or
or
lcall
insl
popa
sbb
lods
into
xor
enter
mov
push
movsl
xor
pop
scas
pop
rolb
xlat
or
mov
mov
and
loop
repnz
jnp
xor
enter
lahf
adc
fsubs
cmp
jns
pop
mov
push
hlt
ret
cltd
lahf
pusha
scas
cmc
sbb
pop
mov
mov
ret
lods
clc
xchg
lea
je
hlt
inc
add
outsb
jecxz
pop
jo
jne
xor
xchg
dec
mov
pop
aad
popa
add
in
lahf
out
addr16
fmull
dec
sub
fs
and
jle
jb
pop
push
imulb
in
mov
lock
lods
inc
sbb
lds
test
jecxz
and
pop
pop
out
iret
push
andb
pop
movsl
mov
mov
or
inc
mov
ljmp
hlt
lret
mov
cmc
fs
add
adc
xchg
lgs
push
into
mov
jmp
mov
mov
loop
cmp
cmp
mov
jl
adcl
mov
push
lods
popf
outsb
cmp
push
sub
imul
mov
cmp
pop
jne
xor
sahf
aaa
frstor
daa
cmc
test
stos
ja
push
imul
sbb
pusha
test
push
sti
mov
inc
fstpt
xor
jle
iret
mov
adc
jb
insb
push
dec
sbb
mov
pop
adc
sbb
out
jo
dec
mov
mov
test
or
push
lcall
lods
sub
lea
push
cmpsl
inc
sub
insb
cmp
adc
jno
lea
adcb
mov
int
adc
icebp
ss
hlt
jns
adc
jb
cmp
pop
push
pop
call
cs
and
or
mov
cmc
repz
js
sub
jb
xorl
mov
lock
cmp
lock
push
pop
dec
xor
enter
outsb
iret
push
pop
outsl
repnz
dec
mov
inc
mov
adc
rcrb
lods
cld
stos
sti
push
dec
cmp
mov
dec
pusha
mov
out
jle
cs
stos
cltd
adc
inc
inc
jb
or
shl
pop
and
jge
and
out
ja
lcall
popa
nop
mov
cmp
sub
std
dec
push
cmp
fisubs
inc
scas
cltd
test
push
mov
mov
rcrb
imul
xchg
fcomps
mov
push
lock
arpl
or
sahf
dec
jge
cmp
aaa
inc
or
mov
jae
pop
cltd
jne
pop
movb
js
mov
dec
pop
pop
or
dec
sbb
mov
outsl
cli
js
mov
movsl
addr16
adc
stos
fidivs
jle
test
mov
fwait
or
xor
jmp
fnstenv
xor
or
fsubrl
hlt
add
into
add
arpl
test
iret
cmp
add
adc
lret
fwait
test
inc
xchg
push
xchg
adc
jb
mov
jmp
iret
mov
cmp
shr
push
dec
jb
lds
cmp
shlb
or
dec
iret
popa
sbb
or
ffree
sarb
adc
scas
pop
lret
inc
mov
imul
jb
out
pushf
add
inc
and
dec
mov
push
mov
out
jecxz
arpl
imul
repnz
in
sti
jne
loop
stc
cmp
insl
lea
pop
jae
pop
mov
jp
mov
or
lods
cmp
mov
scas
sbb
xlat
je
dec
loop
out
push
push
in
xchg
mov
push
jle
and
lods
fcmove
inc
xchg
push
mov
test
insb
pop
mov
sub
test
sahf
lods
push
inc
mov
adc
lea
int
lea
mov
stc
jle
outsb
mov
les
push
fiadds
gs
dec
rcrl
xchg
rolb
xor
or
xchg
lods
or
je
pop
in
lret
push
es
hlt
sub
cmp
xor
sub
rorb
lock
test
mov
pop
ljmp
in
cmp
cmp
push
out
outsl
add
fnstenv
stos
movsl
ror
cmp
aaa
sub
mov
out
test
cmpsl
jne
inc
mov
jl
ds
jns
pop
push
or
in
add
lea
sbb
daa
in
insb
and
lds
xlat
push
add
out
pop
push
cltd
or
dec
mov
cld
fildl
mov
cmp
or
stc
arpl
jle
or
adc
push
aaa
jle
popa
jle
jge
int
and
ljmp
xor
je
and
ds
cmp
push
xor
pushf
jle
pop
fsubrl
test
in
dec
sbb
jbe
scas
pop
pop
jmp
cmp
gs
mov
pop
insb
into
add
jge
leave
in
in
in
cld
movsl
aad
push
adc
mov
xor
adc
pop
sub
or
mov
mov
xchg
sub
cmp
jp
cmp
push
dec
xchg
lea
test
pop
cltd
enter
add
cmp
add
xchg
shll
andb
std
outsl
push
aam
sub
sbb
in
scas
cltd
scas
pop
xchg
jo
into
ljmp
mov
insl
mov
or
out
dec
pop
movsl
mov
dec
pop
mov
shl
fs
iret
mov
xchg
insl
test
popf
and
cmp
inc
out
sbb
inc
inc
jno
cmpsl
jge
int
in
or
cmpl
sub
lods
jl
outsb
xchg
add
pusha
es
dec
xchg
mov
pushf
addr16
int
add
cmp
aaa
mov
lea
dec
lcall
push
in
or
jne
sub
lret
mov
sub
xor
dec
pushf
xlat
xchg
insl
or
sarb
cmp
fcomps
int
outsl
sbbb
inc
push
or
xor
sbb
mov
fcomip
adc
mov
shrb
inc
lret
add
pop
notb
imul
adc
nop
xor
jg
mov
popa
pop
mov
movsl
jp
shrl
test
mov
sub
cmpb
in
inc
cs
shrl
jo
mov
xchg
lcall
dec
sub
sub
or
out
subl
fiadds
pop
lret
fdivr
int
fwait
gs
inc
xchg
loop
xlat
hlt
stos
scas
adc
shll
dec
movsb
push
shl
pop
mov
insl
sbb
je
mov
mov
ficomps
outsb
jns
sub
inc
cmp
lret
inc
xchg
lea
leave
push
add
enter
xchg
pop
nop
loop
insl
fdivs
in
in
sub
std
pop
push
mov
ja
add
or
add
outsl
jno
mov
sub
mov
ljmp
lret
push
ret
mov
es
mov
ja
in
call
dec
jge
int
jno
into
lea
mov
xchg
xchg
push
dec
lods
add
das
rcrb
fisubl
jno
xor
sub
jns
lret
push
pop
dec
jb
stos
in
hlt
gs
jecxz
je
repz
sbb
pop
sbb
popf
or
xor
pop
arpl
pop
push
inc
xchg
call
cld
mov
enter
fstpt
iret
and
fsubrs
push
mov
mov
xor
dec
fwait
lock
scas
nop
xor
stos
mov
aam
xchg
and
mov
loop
scas
ret
or
aas
rcrl
repz
repnz
jmp
mov
shl
inc
xchg
out
cli
mov
cmpl
stc
sbb
inc
ficomps
imul
std
pop
add
xor
adc
sbb
imul
mov
xlat
cmp
jle
pop
lds
push
lock
mov
and
mov
insb
insb
pop
inc
xor
fsub
mov
dec
nop
mov
mov
inc
and
mov
mov
add
js
in
iret
cmp
jno
sbb
pop
ljmp
sbb
xchg
scas
rolb
sub
sbb
sub
orl
scas
sub
push
lea
push
rcrl
lret
push
out
mov
lahf
das
mov
lea
inc
xchg
sti
mov
imul
xor
cs
popa
in
cmp
cmp
call
popa
scas
rcrl
xchg
in
lcall
sub
jmp
test
fidivs
into
cwtl
or
fldt
outsl
xchg
mov
fisttpll
andl
jb
add
push
sub
push
push
fadd
push
aam
fidivrs
push
and
aaa
jae
or
cli
xchg
jecxz
dec
out
out
dec
in
and
cmp
xchg
insb
pop
outsb
pop
aaa
test
xlat
sub
add
js
add
inc
inc
xchg
inc
and
push
std
loopne
data16
sbb
enter
pusha
inc
loopne
ret
push
popf
rol
call
inc
add
mov
je
pop
jb
jbe
in
xlat
mov
outsb
ret
ret
les
push
movsl
jp
push
xchg
dec
push
sub
scas
mov
addr16
add
fistps
notl
repz
jne
sub
jbe
cmpb
ret
jle
adc
mov
inc
mov
pop
jo
lret
hlt
ljmp
inc
pop
dec
and
mov
push
orb
ds
scas
lahf
pop
stos
inc
pusha
js
ds
sti
push
repz
scas
xchg
or
icebp
xchg
mov
cltd
xlat
roll
pop
stc
test
add
sbb
stos
cmp
aaa
add
popf
push
gs
sbb
mov
into
pop
cmp
cmp
jp
out
sarb
add
jns
jno
lahf
jmp
pop
mov
xlat
xchg
in
popf
jb
push
aad
sub
leave
cmp
dec
push
add
sub
divl
nop
divb
cmp
fdivl
mov
enter
or
loope
pop
stos
test
or
xchg
out
mov
in
jecxz
cmc
and
daa
sub
fnstsw
mov
dec
pop
jle
sbb
lahf
sahf
in
in
shlb
push
push
adc
push
pop
add
cld
xlat
inc
or
xchg
pushf
add
insb
mov
cmp
daa
in
mov
iret
imul
mov
xchg
jo
cltd
rorl
nop
pop
push
and
xchg
loop
ljmp
mov
push
pop
lcall
into
jb
aas
sub
and
outsl
jge
out
insl
sub
push
adc
push
decl
lods
push
lret
popa
rcrb
dec
push
pop
mov
xor
sub
cwtl
fistl
popa
stos
leave
xchg
into
cmpsb
cwtl
test
lcall
xlat
adc
sti
or
orb
out
test
dec
cmp
and
mov
shrl
push
cltd
push
pop
aaa
mov
divl
aaa
insl
out
mov
jp
aas
je
lock
mov
loop
push
push
xor
and
test
inc
jae
cmp
out
push
scas
mov
cmp
inc
push
xorl
outsb
pusha
data16
xor
mov
jp
sahf
popf
into
popf
sub
popf
xchg
fisubl
or
mov
out
shlw
pop
and
insl
xchg
xor
mov
in
inc
adc
push
xor
mov
push
in
es
push
jge
lods
lods
iret
iret
mov
aad
call
hlt
jae
in
or
xor
add
das
cmp
jmp
cmp
inc
mov
or
adc
inc
repz
mov
push
xchg
mov
pop
test
dec
imul
xchg
push
sbb
push
add
sbb
popf
sbb
rcrb
cwtl
push
xlat
mov
sub
lahf
jb
outsl
sbbb
mov
xor
lahf
in
mov
or
pop
out
pop
outsl
enter
or
cmp
push
sbb
lret
xlat
loop
cmp
sbb
rorb
jne
fnstsw
dec
mov
pop
shll
lods
xor
and
sub
jge
mov
popa
mov
mov
mov
add
pop
testl
out
imul
push
push
push
scas
in
ss
add
mov
xchg
mov
jo
ret
leave
jb
mov
add
adc
mov
xor
push
mov
test
popf
adc
daa
lret
cmc
add
push
mov
xchg
mov
nop
outsl
or
sub
sahf
push
dec
add
mov
xor
sbb
das
test
jb
call
xchg
sbb
and
imul
pop
nop
mov
mov
insb
fisubrl
mov
imul
jp
nop
pop
mov
in
mov
mov
jo
mov
orl
xor
sbb
mov
mov
mov
sub
mov
mov
mov
idiv
cmpsb
add
and
sub
int
or
jl
and
dec
shlb
cli
imul
es
test
pop
xchg
mov
mov
es
fwait
cmpsl
pop
mov
shll
cltd
iret
jmp
aaa
sbb
push
daa
and
hlt
xorb
das
inc
pop
icebp
mov
xor
out
arpl
sbb
aam
movsl
push
sub
mov
mov
fucom
aaa
outsl
imul
mov
addl
int
jbe
ljmp
ja
fucomi
in
sahf
pop
cmp
sub
xchg
das
into
test
adc
xlat
inc
in
cld
mov
add
xchg
cmp
cmpsl
adc
aaa
mov
cmp
andnps
cmpsb
out
mov
movsl
pop
test
int
xlat
in
pop
out
add
cmp
and
pop
in
dec
shrb
fcmovne
push
in
gs
lods
and
xchg
out
mov
es
cmp
iret
adc
jge
cmp
dec
xchg
pop
mov
cld
bound
popa
lea
pop
cmp
lea
int3
or
mov
inc
aaa
adc
mov
lcall
lret
cmp
pop
sub
cmpsl
mov
adc
out
gs
imul
stos
fnstsw
xchg
cmpsl
test
insb
daa
into
cmp
insl
mov
mov
je
cli
in
push
test
dec
into
lds
push
xor
fisubl
dec
pop
arpl
mov
clc
push
movsl
push
movsl
dec
fidivl
aaa
sbb
inc
jmp
rol
cmp
sub
sbb
sbb
xchg
lea
inc
loop
pmulhw
scas
dec
dec
fldlg2
cmp
icebp
mov
popf
mov
push
xor
ret
pop
mov
insb
enter
jge
jo
sub
cmp
test
lods
mulb
bound
ds
jno
sbb
pop
enter
test
movsl
push
and
mov
lret
jae
mov
loop
xlat
ret
in
test
mov
xlat
jg
cli
aas
aad
ftst
mov
dec
scas
mov
clc
and
leave
cld
mov
dec
adc
inc
xor
pop
fs
out
add
popa
jnp
pop
das
or
mov
js
push
cmp
aad
inc
and
cmp
lret
add
cmp
and
adc
cli
int3
ja
outsl
mov
and
cmpsl
hlt
add
test
in
push
cmp
add
mov
daa
cwtl
push
shrb
pop
test
or
dec
insl
xchg
aad
or
outsl
jb
ljmp
lds
fldt
movsl
stos
ja
fdiv
cli
push
xor
adc
rol
and
leave
stos
std
arpl
mov
aam
push
xchg
mov
jmp
fiaddl
stos
fbstp
lcall
fisubrs
ljmp
mov
in
cli
inc
push
scas
std
jl
inc
in
jb
stc
movsb
and
jg
mov
pusha
pushf
add
xchg
incl
lods
cmp
dec
pop
pusha
ss
inc
andb
xchg
jl
stc
adc
lahf
or
and
dec
scas
aad
jbe
add
cltd
jns
ja
les
pushf
aaa
adc
push
jno
cmpsb
fbstp
dec
push
ja
aaa
xchg
and
lret
inc
lods
jp
in
stos
jg
je
mov
add
or
rol
in
outsb
dec
cmpsb
stos
and
bound
cmpsb
fsubr
jmp
fdivs
sbb
jo
ret
icebp
inc
in
les
inc
in
mov
rorb
add
dec
orb
mov
fstpt
mov
repz
push
or
pop
mov
movl
lcall
shrb
cmp
lret
out
mov
addr16
clc
push
pop
ret
in
xor
or
pop
loope
push
cmpsb
cs
mov
jb
insb
pop
adc
xor
out
cltd
imul
mov
sub
ja
push
xor
mov
daa
lea
cmp
mov
test
pop
or
outsl
mov
cli
push
cld
pop
push
jle
aam
xchg
adc
xor
push
cmp
xor
pop
jge
mov
cmp
in
jg
outsb
hlt
mov
scas
and
scas
fcomip
imul
xor
pop
inc
lods
int
adc
pop
loop
adc
bound
andl
or
pop
mov
lods
mov
cmp
mov
pop
insl
jge
int3
stc
test
insl
add
lea
iret
pop
add
mov
insl
insl
sbb
insb
push
nop
pop
push
subl
rcrb
cmp
aad
in
outsb
or
adc
mull
mov
int
and
cmp
gs
shrl
imul
ljmp
pusha
shll
hlt
pop
shll
or
aaa
lret
js
push
dec
aam
cmp
lods
or
movsl
adc
enter
repz
mov
lahf
lods
push
cmp
cld
xlat
sar
cltd
iret
aad
jne
mov
loopne
xchg
add
mov
jle
ss
out
mov
mov
jb
pop
ret
aas
mov
push
in
dec
jb
lods
stc
orb
outsl
add
mov
inc
loop
xchg
addr16
dec
aas
decb
xlat
jmp
cs
add
mov
adc
jae
mov
rcrl
mov
xchg
push
sarb
mov
popa
mov
cli
xchg
xor
xchg
fildl
lods
ja
movsb
inc
lds
and
lcall
push
sbb
daa
cmpb
decb
mov
std
or
mov
jl
rcrl
and
inc
in
aad
in
lahf
shll
or
rclb
xor
cmp
cld
ljmp
div
mov
cmp
ljmp
mov
dec
cmp
xor
mov
mov
sti
push
vucomiss
stos
inc
xchg
shll
enter
jmp
mov
xor
xor
lcall
pop
iret
std
mov
repnz
pop
insl
pushl
dec
sub
fcmovnu
pusha
xor
xlat
jmp
cmp
xor
imul
in
inc
or
daa
xor
hlt
arpl
lahf
jle
fwait
pop
mov
adc
sub
std
xchg
test
int3
or
into
lock
lretw
sub
stc
mov
pushf
mov
lcall
loopne
pop
outsl
out
xchg
pop
mov
std
call
lds
rclb
jmp
sbb
pop
jae
cmp
push
sbb
sbb
mov
mov
xor
jne
popa
xchg
fsubrl
daa
or
jne
aaa
sub
imul
mov
or
push
enter
call
test
or
sub
mov
fistpll
aas
mov
decb
jno
addr16
pop
test
shl
adc
xchg
sbb
mov
popa
or
das
mov
sub
pop
adc
fstpl
jae,pn
arpl
fisubl
cmpsl
fs
sbbl
push
popa
or
pop
jg
mov
lea
je
mov
xchg
or
ljmp
xlat
out
call
adc
cmc
and
jae
movsb
sbb
pop
and
jle
iret
sbb
lock
pop
loopne
push
stos
sti
inc
sub
faddl
arpl
popf
jb
jae
sti
xor
mov
out
and
push
jle
negl
push
out
pop
fnstcw
mov
push
mov
dec
outsb
xor
out
ljmp
push
inc
mov
jmp
in
push
and
les
cmp
pushl
push
sub
pop
lret
jg
popf
mov
mov
and
pop
cmp
jle
jno
mov
mov
popf
inc
mull
or
jb
mov
mov
fstl
cmp
xor
ja
jl
dec
xchg
test
pop
dec
jns
in
mov
cmp
mov
push
and
dec
mov
and
mov
fisttpl
push
fidivl
es
arpl
add
xchg
aam
int3
movsb
into
or
stos
pop
stos
lods
ljmp
push
fsubr
xor
in
jb
insl
pop
movsb
cvttps2pi
decl
or
add
pop
cs
and
andl
ficoms
inc
ficoms
sbb
jne
andl
push
mov
and
jns
out
ds
das
cmp
das
add
cli
adc
aas
leave
test
push
cmpsl
daa
pop
and
mov
sbb
imul
cmp
mov
push
int
jae
ljmp
and
xor
das
shlb
lret
fstpt
pop
gs
cmp
movsb
mov
mov
sub
sahf
lea
push
or
mov
out
inc
clc
ja
fwait
lods
inc
xchg
cmp
inc
push
inc
push
and
cld
xchg
push
mov
in
loope
lret
repnz
hlt
xchg
or
lahf
ljmp
push
mov
mov
adc
daa
pop
lea
cmp
or
test
fsubrp
test
rorb
int3
mov
filds
orb
xor
jmp
mov
ficompl
stos
lahf
outsb
fstps
lods
sub
jp
sti
ja
mov
mov
out
jb
lock
add
jbe
pop
or
jno
sbb
ltr
cmc
or
in
int
sahf
inc
lods
mov
adc
fs
lret
fs
mov
outsb
in
lret
leave
add
insl
enter
test
cmp
iret
add
xchg
xchg
xchg
fsts
sub
cmpsl
push
sbb
sti
fwait
shlb
sarl
jmp
test
pop
mov
jge
push
jmp
push
int
in
and
push
cs
sbb
dec
mov
out
in
popf
into
rclb
arpl
push
imul
cmpsl
cmp
sbb
rcl
repnz
hlt
sbb
jge
loop
fs
lock
and
out
or
push
adc
aas
or
rol
leave
loop
in
sbb
insb
mov
popf
test
loopne
xor
dec
rolb
jge
enter
fildl
adc
add
fsubl
xlat
cmpsl
lret
push
into
xlat
add
push
dec
repz
xchg
mov
inc
push
arpl
les
js
dec
dec
adc
fadds
or
popa
xlat
push
xlat
mov
rcr
and
hlt
nop
in
jb
pop
movsl
add
mov
mov
mov
lods
cmp
jle
sahf
gs
cmc
sbb
or
ret
sub
mov
filds
dec
fs
add
cmpsl
aad
or
xchg
push
add
outsl
pop
out
dec
push
hlt
int3
mov
sub
mov
mov
clc
cltd
push
adc
imul
xchg
pop
inc
ret
mov
push
fisubs
dec
mov
push
test
pop
push
sti
xchg
mov
ds
xchg
das
lods
cmp
into
lods
cmp
mov
outsb
pushf
xor
mov
inc
out
jno
and
xor
xchg
pop
subl
icebp
jecxz
inc
xchg
add
add
push
xor
fwait
jne
dec
and
xor
sub
clc
movsl
jb
adc
daa
hlt
divl
jl
xor
mov
test
push
jecxz
xor
rolb
jb
xchg
dec
mov
jmp
iret
in
lods
jl
jg
xchg
cmpsl
pop
in
jl
pop
lods
cmp
movsl
lods
and
jmp
xor
cmp
and
mov
pop
movb
outsl
out
cmpsl
pop
sub
les
popa
jne
or
push
iret
dec
popf
and
lods
enter
and
push
imul
mov
jae
xor
push
test
or
cwtl
lods
and
cmp
scas
pop
or
adc
lret
add
test
lods
cmpsl
dec
sbb
lahf
stos
lcall
cwtl
cs
sbb
outsb
lret
hlt
lea
out
decl
or
xor
lea
es
mov
adc
enter
gs
xchg
mov
out
subl
or
repnz
sarl
or
stos
push
pop
or
jae
out
lods
pop
cs
jno
mov
push
pop
scas
xor
inc
cmp
cmp
mov
add
adc
jbe
pusha
addr16
mov
stos
pop
mov
xor
push
out
sub
movsl
ss
fimull
outsl
outsl
push
mov
mov
pop
sub
outsb
test
popf
sbb
mov
sbb
in
mov
jnp
sbb
mov
add
repz
jl
jle
test
adc
lea
out
inc
imul
xlat
dec
or
int3
xchg
cltd
or
adc
inc
in
dec
mov
roll
scas
xchg
fimull
cmp
jge
int3
push
push
cmp
lds
shll
loope
xchg
stc
fstps
dec
xor
pop
out
pop
insb
out
or
mov
fbld
sbb
jne
xor
cmp
idiv
aad
movsl
out
std
sbbl
mov
add
popa
inc
addw
pop
inc
xlat
cmp
es
out
hlt
shlb
ljmp
push
sahf
mov
int
popa
movsl
cltd
pop
lcall
add
test
push
cmpsl
notl
sbb
jne
add
fstpt
cwtl
mov
jmp
rclb
lcall
scas
bound
movsb
push
push
sub
pop
fldenv
jo
lods
je
sbb
mov
mov
sub
xchg
or
jnp
daa
aad
je
mov
das
cmp
pop
sahf
into
lea
pusha
add
out
lods
sub
je
or
pop
add
jae
jno
push
sbb
jno
in
or
mov
xlat
push
adc
cld
cmpsl
je
imul
mov
xchg
mov
int
pusha
mov
insb
and
xor
push
mov
mov
out
nop
cmp
adc
xchg
sahf
mov
iret
fwait
mov
popl
or
ja
cld
mov
or
xchg
push
pop
mov
into
push
xchg
in
iret
xor
add
mov
sbb
aad
int3
dec
mov
int
dec
xlat
add
popa
imul
movsb
mov
lret
mov
out
pop
enter
call
xchg
aaa
sbb
add
orl
nop
adc
or
cmp
inc
imul
leave
fidivrs
test
iret
loop
fwait
push
mov
sbb
push
or
fucomp
add
cmp
cmpsl
inc
movsb
mov
mov
mov
pop
pop
cmp
cmpsb
aaa
inc
jb
add
andb
clc
mov
mov
rcrl
scas
adc
lcall
stos
pop
popf
push
mov
jbe
cmp
dec
test
sub
push
add
jb
lahf
and
dec
push
xor
mov
lock
shl
aad
jmp
pop
popa
xchg
jno
outsl
divl
cli
popf
aas
push
stos
dec
in
inc
push
mov
fsubr
xchg
cmpsl
insl
push
int
stc
int
mov
add
enter
ds
push
or
jge
pop
dec
scas
out
or
add
stos
je
or
push
sub
mov
xchg
cmp
push
loopne
add
movsl
xchg
call
gs
jge
imul
xchg
inc
hlt
jg
outsl
lret
into
mov
out
into
fisttps
inc
push
pop
in
mov
jg
cld
daa
adc
lea
pop
cmp
cmp
sub
add
cmc
sub
pop
mov
mov
cmpsl
popa
push
dec
mov
hlt
mov
lods
cs
or
mov
pop
fs
dec
pop
or
push
ljmp
cmp
daa
mov
out
mov
or
ret
sub
sbb
xchg
daa
xor
adc
stos
xorb
mov
jo
sbb
stc
sbb
ret
lret
mov
rorl
add
and
stc
jmp
rclb
xchg
stos
and
hlt
outsl
sub
popf
and
and
sbb
sub
lret
iret
and
fisttpll
loopne
rorb
les
add
repnz
mov
hlt
aas
dec
sarb
mov
cmpl
push
jecxz
bswap
gs
inc
addr16
or
fwait
xchg
dec
add
ja
add
mov
popf
out
icebp
insb
outsb
dec
mov
cmp
push
int
in
mov
call
lods
movsl
or
adc
pop
popa
jbe
leave
adc
jno
jg
and
lea
fsubl
les
lret
aad
push
movsb
mov
cltd
mov
inc
movsb
sub
mov
insb
adc
int3
testb
mov
adc
repnz
sub
ret
push
arpl
addr16
stos
popf
pop
test
mov
aaa
mov
pop
dec
lret
and
movsl
popl
andb
test
punpckhdq
sahf
jns
mov
jbe
ja
sbb
sbb
mov
and
test
or
fisubs
dec
xorl
repz
sub
mov
or
mov
popa
lods
into
shll
std
jno
dec
xchg
mov
fld
mov
xor
xchg
or
insl
adc
cli
mov
or
fsubr
pusha
iret
daa
leave
sub
pop
pop
call
pop
push
mov
xlat
into
mov
mov
push
loope
jno
sub
loopne
mov
orl
pop
inc
xchg
jl
enter
pop
movsb
sub
popf
push
jne
js
jae
es
mov
cmpsb
lahf
out
in
xor
lret
lahf
out
aaa
std
sub
lcall
out
inc
cmp
pop
int3
popa
je
xchg
and
ljmp
add
mov
or
fimuls
or
mov
sub
pop
push
outsb
dec
sub
mov
loopne
mov
inc
dec
enter
pushf
push
subl
xor
cmpsl
cwtl
sub
in
push
dec
xchg
cmp
fistps
add
jge
ljmp
jb
pop
mov
pop
or
push
inc
or
ljmp
push
mov
inc
inc
sbb
mov
mov
adc
bound
lods
mov
or
test
jg
push
ror
idiv
in
movsb
sub
mov
lock
das
loop
out
in
inc
fimull
lcall
mov
jb
mov
jb
cmp
test
xorl
xor
push
dec
out
lahf
outsb
cmpsb
popa
fs
cmpsl
hlt
lcall
sbb
arpl
testl
fstpl
pushl
push
fcmovb
mov
mov
aad
or
movsb
mov
dec
sub
cmp
xchg
jne
and
xchg
sbb
push
add
mov
sub
push
inc
adc
mov
mov
jb
mov
or
lea
cltd
pop
or
push
dec
insb
mov
call
dec
or
aam
ret
loop
sbb
call
scas
push
adc
lods
cmpsb
cs
mov
xchg
lret
inc
inc
fnstenv
sbb
xchg
cmpsb
mov
sub
push
movsb
jo
fstl
out
outsl
adc
mov
add
and
daa
inc
rcl
ds
sar
pushl
push
sbb
aad
xchg
mov
and
in
or
xchg
jbe
arpl
lods
add
xchg
adc
sub
pop
inc
mov
outsb
dec
in
push
push
jb
mov
fiaddl
mov
add
lods
fstps
pop
mov
or
or
inc
movsb
out
mov
add
push
and
outsb
mov
notl
mov
addr16
dec
stos
or
push
repz
push
loopne
xor
jecxz
lret
fcos
dec
stos
cmp
cmp
movsl
pusha
int
lods
sahf
mov
and
test
ja
dec
sbb
ljmp
lret
fiaddl
xchg
test
ljmp
mov
xlat
pop
mov
add
arpl
xchg
mov
ljmp
mov
fildl
rcrb
sub
in
jge
jae
dec
xchg
lods
mov
mov
fsubrs
aad
sub
ja
in
test
loop
add
ljmp
mov
mov
adc
adc
test
sbb
shlb
lods
xor
cli
cmp
mov
inc
lret
sbb
push
dec
sub
in
stos
sub
test
and
popa
lods
xlat
lret
lods
pop
scas
scas
jmp
addl
add
mov
js
out
sub
gs
mov
pushf
fcomps
ljmp
repnz
mov
add
cmc
jg
push
jmp
xlat
cmp
cmc
imul
add
mov
push
ljmp
sbb
test
outsb
test
stc
in
xchg
fwait
imul
popa
dec
xor
xor
popa
xchg
xorl
mul
cmp
sbb
std
push
or
push
stos
aam
ds
or
outsb
in
ljmp
mov
in
mov
aaa
ljmp
jmp
add
popa
aad
push
bound
add
mov
icebp
push
lods
out
sahf
push
pop
and
lret
mov
add
push
cwtl
fstpl
into
pusha
ja
lods
imul
pop
jle
inc
jg
cmp
dec
add
inc
adc
cmp
mov
dec
outsb
call
or
push
filds
outsb
inc
push
test
pop
pusha
imul
outsl
xor
leave
or
imul
lods
ja
enter
jns
push
dec
loopne
xlat
cmpsl
bnd
ss
adc
pop
pop
int
jg
stc
repz
cli
scas
pusha
lea
popf
pop
inc
jle
aas
mov
xchg
dec
inc
pop
cmp
fists
sub
mov
outsl
inc
test
hlt
in
add
or
movsb
mov
popa
stos
xor
push
ficoml
inc
sbb
mov
stos
jno
cmp
les
aad
push
sahf
adc
sub
inc
lea
add
daa
sub
cmp
imul
xchg
pusha
jl
es
popa
test
test
js
out
adc
test
push
gs
cmc
mov
mov
push
jno
jb
pop
in
sbb
adcl
lret
pusha
push
in
push
dec
adc
dec
jne
or
sbb
cmc
nop
jge
shr
dec
lods
sbb
xchg
nop
mov
outsb
mov
bnd
push
shlb
xchg
cmpsb
shlb
mov
shlb
dec
xchg
inc
sbb
mov
das
jecxz
ret
add
aas
in
es
cli
test
cmpsb
cmpsl
jecxz
add
add
add
lcall
add
lahf
in
dec
jle
movsb
loope
fsubs
imul
in
pop
loop
push
outsb
xchg
xor
movsl
ud1
jmp
iret
add
insl
cli
fwait
je
push
test
jg
sbb
inc
or
arpl
das
dec
lcall
jbe
or
mov
pop
int3
test
aad
sbb
mov
inc
fistl
andl
xor
fsubr
fldl
and
and
xchg
pop
mov
pop
in
dec
inc
sub
or
rcll
lods
xor
hlt
jle
push
aaa
and
adc
adc
out
mov
sub
je
cmp
in
mov
lock
inc
popf
jmp
push
jle
bound
adc
jle
push
mov
push
add
pop
bound
cmp
clc
and
jb
xor
push
inc
mov
push
arpl
jle
jb
insb
jbe
xchg
sbb
dec
or
popf
sti
outsl
scas
daa
jg
mov
push
xchg
sbb
std
outsb
outsl
lahf
push
cli
xchg
dec
xor
and
adc
xchg
push
mov
test
jle
out
popa
loopne
ss
cmp
push
adc
dec
xchg
test
scas
iret
add
fisubl
andl
xor
testb
out
dec
push
aas
gs
pusha
xchg
mov
jns
fidivrl
frstor
js
xchg
push
adc
xchg
aaa
jle
bound
inc
nop
dec
push
mov
mov
inc
ja
insb
mov
cmc
cmp
xor
mov
gs
xchg
fsubrs
pop
mov
mov
mov
pop
ret
lahf
sbb
fisubl
lods
outsb
lods
lea
in
arpl
pop
mov
loope
lahf
inc
mov
sub
call
arpl
adc
inc
out
ror
or
test
leave
jp
lock
ljmp
mov
jbe
xchg
shrd
fwait
jecxz
mov
jl
fiadds
lret
mov
insl
xchg
xor
cmp
mov
scas
lcall
icebp
sub
xchg
mov
jnp
xchg
push
loope
mov
dec
hlt
pusha
or
test
add
fcmove
pop
rcrb
lahf
adc
arpl
sti
push
or
mov
movsb
iret
jg
mov
ficompl
push
arpl
gs
pop
in
xchg
or
add
and
mov
int3
push
cs
dec
fs
pop
leave
jbe
jae
iret
or
sbbb
ljmp
jne
inc
pop
fiadds
lahf
mov
xchg
push
push
push
adc
jne
xchg
dec
xchg
pop
je
xchg
aam
pop
xor
mov
fimull
cmc
rcrb
cmc
sub
sbb
xchg
enter
cmp
lahf
mov
clc
dec
mov
jb
add
adc
test
insb
pop
jge
mov
push
mov
add
xor
sub
fcomps
insb
or
push
ja
pop
inc
imul
imul
repnz
xor
cmc
es
xlat
dec
jmp
jne
hlt
imul
lret
fistpl
mov
je
dec
popa
out
testl
jb
dec
jno
cmp
dec
add
inc
ljmp
mov
jns
push
fs
sbb
leave
in
in
sbb
loope
add
adc
in
or
pop
in
ficoms
imulb
jb
or
jmp
sahf
mov
rolb
idivb
push
dec
das
addr16
fldt
es
idivl
insl
pop
enter
jge
mov
pop
imull
pop
mov
cmp
dec
cltd
or
xchg
xchg
cmp
inc
popa
xlat
or
cmp
in
xchg
xchg
mov
lret
xor
xchg
adc
mov
sbb
cwtl
into
or
push
push
pmuludq
or
pop
jb
adcb
pop
jle
or
mov
cli
call
jno
sahf
ret
bound
int3
movsb
sbb
or
test
flds
lahf
int3
hlt
mov
adc
sbb
mov
mov
ret
mov
push
inc
mov
add
fidivrs
test
dec
les
pop
xor
push
inc
xor
rolb
test
jle
lcall
sti
push
in
push
xlat
xor
int
cmp
outsl
ret
push
movsl
pushw
xor
lods
rep
inc
dec
push
jo
ja
mov
bnd
imul
push
repz
or
fcmove
popl
push
pop
add
mov
ljmp
sbb
outsb
mov
insl
push
std
adc
inc
sti
in
jge
mov
sub
repnz
push
adc
pop
mov
jb
inc
fwait
jle
andb
inc
add
xchg
call
popf
inc
mov
shl
mov
lahf
fwait
aam
jl
push
inc
xor
lds
clc
jnp
adc
jmp
pop
xchg
int
add
lahf
mov
pop
imul
xchg
pop
jae
lahf
popf
jbe
xchg
add
cmp
insl
ret
add
ljmp
mov
xchg
xchg
inc
outsl
rolb
sbb
pop
addr16
jne
jb
jae
xor
mov
xchg
or
ret
xor
inc
xchg
pop
mov
xchg
sbb
testl
fistps
inc
push
icebp
xor
pop
test
cld
loopne
add
adc
push
in
scas
loope
mov
scas
fisttpl
xor
gs
test
mov
xchg
es
hlt
push
nop
and
mov
fldt
jne
scas
jno
cmp
addr16
cmp
call
adc
testb
add
int
scas
push
dec
lea
insl
popa
push
pop
repz
sbb
jmp
mov
rorl
or
call
and
shlb
in
int3
cmp
outsl
dec
mov
scas
cmp
xchg
jl
lcall
lcall
daa
xor
shlb
xor
jno
int3
outsb
lds
or
testl
pop
aad
hlt
int
test
jo
pop
pop
push
or
popa
test
ja
idivl
scas
push
cmp
decl
hlt
sub
loop
int3
movsl
fisttpl
shlb
mov
out
enter
cmpsb
pop
bound
pop
or
xor
adc
lods
inc
add
xchg
jg
nop
pusha
xchg
xor
movsb
mov
push
sti
out
adc
mov
sub
mov
push
dec
mov
test
xor
sub
and
sbb
xchg
mov
sysret
xchg
jecxz
pop
int3
nop
movsl
dec
inc
jl
lahf
push
ret
push
mov
bound
or
pusha
insb
aam
loop
push
rorb
sbb
bound
cwtl
dec
dec
add
xchg
sarb
ds
aam
or
rolb
addl
xor
pop
mov
popf
or
mov
and
add
movsb
dec
sub
cmpl
sbb
xchg
pop
push
aam
data16
or
xchg
xor
mov
popf
dec
fstl
enter
fdivr
packuswb
mov
dec
mov
add
movsb
sub
or
xchg
fmul
movsb
pop
xchg
cmpsl
rcrl
gs
jno
xchg
mov
inc
mov
popf
lea
arpl
dec
inc
push
les
fidivl
je
test
fildl
jmp
lahf
gs
sub
and
addr16
lret
xor
jb
xchg
cs
push
shlb
xor
lods
addr16
lods
daa
and
popf
in
xor
and
insb
and
lods
sub
or
lods
and
test
loop
push
xchg
cltd
or
stos
fildll
add
imul
jb
es
repnz
xchg
cli
leave
push
bound
mov
imulb
or
xlat
test
scas
pop
mov
cmp
ret
pusha
and
push
pop
lahf
lods
pop
dec
lock
and
notl
add
sub
inc
or
in
xor
xor
iret
adc
out
sbb
mov
mov
in
sub
call
jecxz
mov
std
xchg
xor
dec
push
jl
inc
gs
ret
jns
imul
mov
int3
jno
iret
xchg
adc
lods
xor
ds
stos
sub
jo
xchg
mov
insb
aaa
xchg
jg
das
and
mov
lea
jmp
xchg
shlb
cmp
cmp
pop
jbe
sub
aaa
arpl
add
cmp
int
add
mov
push
loope
mov
sbb
mov
cmp
lods
jb
add
and
jg
rorb
jb
lods
jecxz
jmp
adc
dec
insb
test
fs
out
sbb
push
sub
aaa
andl
ret
mov
ret
imul
in
xchg
out
scas
inc
fldenv
or
ret
mov
xchg
and
dec
test
dec
cmpsb
sub
dec
out
movsl
gs
jmp
fadds
int3
xor
outsl
loope
loop
ljmp
int
push
adc
xor
sbb
movsl
les
fdivs
inc
push
popf
pop
sub
and
mov
add
jmp
or
and
mov
shl
int3
or
sbb
sahf
push
lret
or
xchg
insb
lahf
mov
or
icebp
repz
fs
cmpsl
push
add
or
lahf
and
movl
hlt
fidivl
push
xchg
repz
call
je
xchg
jb
mov
loopne
stc
lea
sahf
aaa
cmc
lock
mov
insb
shr
xor
mov
repnz
out
inc
mov
mov
hlt
int3
xchg
aaa
fwait
adc
insl
out
and
sub
and
push
fcomps
and
or
xchg
sub
iret
xchg
cmpsb
dec
pop
imul
sub
jno
or
js
stos
mov
addl
jg
xor
mov
inc
gs
xor
and
xchg
xchg
lahf
out
decl
das
inc
stos
mov
out
push
fstpt
lahf
test
stos
nop
ljmp
jne
dec
mov
xchg
sahf
sahf
popa
lock
lcall
add
xchg
movsl
inc
mov
adc
push
push
popa
imul
pop
outsl
add
mov
ffreep
jle
or
pushf
addr16
and
insb
mov
dec
mov
test
ret
sbb
jmp
fldt
mov
pop
test
lods
xchg
outsl
fwait
pushf
xchg
enter
out
dec
ret
pop
dec
mov
dec
jne
mov
rcrl
lods
jg
and
les
addl
insl
daa
adc
xchg
jo
das
or
or
into
jnp
push
xlat
pusha
js
sub
dec
out
ficompl
adc
in
xchg
cmpsb
shrb
cmp
pop
popa
mov
movsb
jle
push
cmp
sbb
aas
and
sbb
mov
dec
push
xlat
sub
inc
mov
aaa
and
push
add
rorl
dec
std
sarb
in
adc
xchg
sub
arpl
dec
sbb
and
xchg
sbb
mov
call
mov
iret
push
call
sahf
cwtl
iret
pusha
cwtl
sbb
pushf
inc
out
cmp
mov
lahf
xchg
xchg
ret
add
pop
scas
dec
call
cs
sbb
ret
jecxz
iret
pop
arpl
rorl
jno
push
mov
jb
insb
stos
cmp
stc
sbb
and
aaa
and
cmp
mov
adcl
lods
adc
xor
insl
sub
fsub
add
mov
fidivrs
hlt
and
sub
into
push
jne
fisttpll
mov
mov
jb
mov
notb
mov
jg
xchg
sbb
out
mov
and
sub
adc
push
sahf
jbe
mov
js
ljmp
insb
jmp
iret
data16
cmp
aas
test
inc
mov
test
jle
int
mov
jmp
pop
addr16
add
xchg
push
insb
sti
daa
sbbl
lret
push
xchg
popa
fdivrs
jmp
ljmp
stos
hlt
bound
or
cmp
mov
push
test
xchg
pop
add
xchg
add
jb
gs
sahf
mov
out
dec
inc
insb
lret
les
popa
in
fisubrs
jp
inc
push
scas
dec
xchg
call
jmp
or
popa
push
inc
shlb
mov
jmp
sbb
and
add
sub
in
in
xchg
stos
loope
jp
mov
adc
jns
xchg
cmpsb
scas
jmp
in
mov
punpcklwd
cld
pop
mov
push
cmp
call
lret
aaa
xchg
jnp
aaa
mov
popa
bound
in
ss
ficoml
adc
cmc
into
call
jle
push
jnp
popf
lods
sbb
add
daa
or
inc
add
adc
stos
scas
mov
and
test
repnz
mov
fmull
cltd
scas
xlat
push
lahf
mov
cmp
mov
cmpsl
pop
or
dec
or
inc
ret
push
and
popa
add
dec
xchg
sbb
fidivl
call
jecxz
jle
sub
ja
jle
xor
aaa
mov
jno
mov
call
ljmp
call
xchg
out
inc
scas
movsl
fs
sub
lea
into
jbe
in
xor
pop
push
push
pushf
std
xchg
ret
mov
jns
mov
repnz
shll
cmp
das
and
lock
out
pusha
gs
rolb
das
fwait
xor
mov
mov
dec
into
popf
into
lcall
and
decl
popa
fbstp
js
adc
add
clc
mov
cmp
cltd
push
pop
bound
push
cmpsl
push
push
add
icebp
out
pop
sbb
lea
lahf
or
cmpsl
out
shlb
cmpsb
jmp
ljmp
push
cs
out
arpl
ljmp
in
je
dec
mov
stos
mov
inc
lahf
xor
clc
jmp
add
js
ss
pop
insb
or
jg
inc
or
repnz
data16
scas
jb
jb
and
cmp
pop
dec
rcrl
cltd
xchg
adc
dec
xor
jle
dec
imul
ds
and
and
pop
sbb
jp
movsb
ljmp
xchg
sub
pop
lret
insl
push
add
pop
popa
inc
lcall
pop
nop
lahf
or
ficoml
add
ror
sbb
add
dec
mov
and
paddsw
enter
cltd
add
cmp
push
xchg
cmp
push
adc
sub
iret
ror
add
cld
add
aad
pop
mov
jnp
cmp
movsl
js
sbb
cmp
outsb
mov
mov
pushf
test
xchg
hlt
jecxz
cmp
xor
sub
push
cwtl
pop
pop
lock
lods
test
jae
or
lods
cmp
push
jae
inc
xchg
les
jo
leave
dec
test
or
ror
and
mov
jge
ret
sbb
or
xor
cmp
sahf
loopne
sbb
scas
push
pop
dec
mov
imul
test
aad
pop
and
xchg
jne
cltd
mov
outsl
cmp
or
and
and
loopne
imul
adc
cwtl
mov
lods
mov
push
add
adcl
inc
bnd
xchg
ja
mov
pop
mov
xchg
mov
cmp
jl
fsubrl
sarb
stos
xor
or
mull
or
or
pop
addr16
mov
xchg
or
fcoms
in
gs
xchg
incl
and
inc
call
mov
cmpsl
ret
push
adc
xchg
pop
inc
push
dec
cli
mov
shrb
adc
movsb
adc
popa
add
cmp
not
adc
push
mov
or
lock
lahf
aam
adc
decb
ret
inc
lcall
dec
lahf
push
dec
daa
pop
cmpsb
loop
or
pop
jg
leave
xchg
fists
mov
cmp
lret
cmp
hlt
inc
xlat
xchg
sub
mov
mov
test
int
cmp
xor
rolb
dec
xor
mov
call
call
xchg
loop
add
push
mov
mov
popf
xlat
popa
lods
cmp
pop
lea
jb
daa
shrb
mov
imul
sbb
imul
push
inc
xchg
sarl
das
adc
test
iret
xlat
mov
popa
push
xor
repz
cmpsb
jb
push
dec
lcall
or
daa
or
sub
addr16
or
fsubrl
repnz
cmp
addr16
sbb
cld
xchg
xor
add
pushf
icebp
ja
pop
cmp
add
popa
fnsave
xchg
fdivl
roll
adc
push
filds
cmp
repnz
add
dec
fsubs
fsubr
push
jl
iret
and
jns
fisubrs
movb
cli
gs
pop
fwait
cmpsl
pop
lret
inc
cmc
fisubs
xchg
clc
add
call
je
faddp
xor
sahf
cmpsl
dec
xchg
jge
xchg
push
pop
dec
xlat
stos
stos
enter
push
push
mov
ret
mov
in
in
sub
jecxz
int
pop
jmp
test
in
insb
sahf
xor
adc
jne
inc
cmc
mov
insl
and
adc
loop
sahf
and
add
ds
or
insb
or
stos
mov
cmp
xchg
mov
ljmp
cmp
xchg
cltd
jo
inc
jmp
aas
test
adc
inc
jae
mov
nop
dec
subl
cmc
lea
mov
lods
push
xor
add
xchg
ret
or
cmpsb
xchg
jbe
pop
add
mov
decl
shl
xchg
mov
xor
insl
ljmp
inc
das
or
xchg
sbb
xchg
nop
and
ds
or
mov
or
sbb
push
lock
sbb
inc
das
daa
xor
cmp
repnz
mov
push
sahf
add
js
push
inc
jbe
lds
xor
test
mov
jnp
mov
xchg
shll
sub
fs
cmp
aaa
fs
and
jle
out
stos
mov
ficoms
dec
outsb
jb
pop
stos
mov
pop
add
andb
sbb
iret
gs
push
dec
scas
sub
lock
loop
add
fbld
fsubrl
or
ret
lea
jbe
inc
lea
int
das
xor
fsqrt
push
lods
out
xchg
dec
outsl
cmpsb
lahf
mov
add
xchg
or
sub
jl
and
and
ds
jge
add
ss
add
ret
push
daa
mov
sahf
clc
or
mov
and
and
les
cmpsl
lea
jne
mov
mov
lods
in
xchg
outsl
push
movsb
and
repz
sbb
jge
test
pop
push
xchg
cmpsb
scas
out
cmpsl
xchg
push
xor
sbb
jbe
xchg
popf
gs
jo
cmp
or
testl
mov
sbb
dec
imul
xor
jl
push
mov
outsb
mov
dec
inc
inc
addr16
mov
das
xchg
jg
int
or
jb
je
fstpl
dec
out
and
push
push
jge
scas
jecxz
lods
or
into
inc
mov
les
nop
sub
jae
inc
lods
repnz
loope
leave
or
mov
push
icebp
insb
into
cltd
sub
mov
pop
xor
mov
mov
aas
inc
dec
daa
fimull
pop
pop
mov
jmp
fiadds
int
sub
sarl
jg
inc
adc
mov
movups
hlt
daa
pop
inc
out
aam
push
pop
ds
jo
and
es
ret
idivb
jp
pop
dec
mov
mov
dec
xchg
pop
ret
push
outsb
imulb
in
ljmp
mov
xchg
lods
add
mulb
sub
js
stos
in
lcall
sub
jns
cmpsl
addr16
scas
cmp
dec
test
and
xchg
adc
fwait
mov
std
push
ret
addr16
movb
cmp
dec
popf
push
adc
inc
adc
ja
das
mov
push
adc
scas
ret
cmp
mov
xchg
inc
or
dec
sub
jp
sub
inc
ficoml
cwtl
es
sbb
xchg
adc
mov
nop
or
sub
jns
jb
sub
inc
xchg
jne
stos
cmp
je
cmp
lcall
aaa
adc
mov
in
fwait
cltd
mov
loopne
lods
lea
mov
int3
out
cltd
push
test
mov
insl
in
mov
insl
jge
pop
inc
xchg
sbb
push
ret
ss
xor
daa
loope
sub
xchg
lret
gs
iret
push
push
cmp
bound
dec
and
aad
lret
sub
es
loop
movsb
xchg
push
xor
sbb
aas
test
xor
outsl
sbb
xchg
and
popa
andb
mov
dec
push
pop
pop
lds
add
or
jb
inc
push
lea
pushl
cmp
push
rorl
lea
mov
cmp
pop
je
pop
sahf
sbb
lret
add
cmp
cmp
ds
movsl
mov
popf
out
pop
xor
into
incl
jnp
xchg
xor
fcmovnbe
ja
in
or
lods
rol
out
mov
cmpsl
nop
mov
or
outsb
sub
sbb
daa
jnp
ret
push
inc
sbb
mov
les
or
dec
xchg
mov
ds
add
and
lods
pop
fs
js
mov
and
or
mov
movsl
data16
push
lret
mov
in
sti
xor
cmp
jmp
int
jns
or
imul
lcall
xor
sub
test
jmp
sahf
in
jge
out
xchg
repnz
popf
ds
gs
adc
add
dec
adc
jns
aas
pop
mov
fisubrs
imul
inc
xchg
and
cld
sbb
out
rcrb
push
js
add
cmp
cmpsl
movsl
addb
mov
ljmp
insl
rol
or
add
inc
jne
adc
mov
insl
sub
in
mov
pop
addr16
popa
add
sti
inc
insl
push
mov
cld
xchg
adc
scas
cld
arpl
jne
lahf
add
outsb
pushl
in
sbb
sbb
bound
adc
add
mov
std
add
add
loope
inc
dec
xchg
loop
xor
out
xchg
adcl
fwait
sub
fsubp
inc
je
popf
mov
mov
xor
repz
jge
mov
aaa
pop
in
mov
sbb
cmp
int
inc
addr16
es
call
jno
pop
int
test
js
add
jo
mov
xlat
xchg
pop
inc
addr16
daa
movsb
enter
outsl
pop
mov
mov
xchg
int3
cmp
les
adc
fimuls
push
cmp
add
jns
imul
and
sahf
xchg
fiadds
or
lds
dec
mov
das
mov
nop
push
xor
fadds
test
pop
mov
inc
add
pop
cs
fiaddl
mov
aad
fsubrl
sub
popf
repnz
aaa
mov
bound
inc
btc
pop
addr16
sbb
mov
mov
clc
dec
das
dec
cmpsl
scas
mov
pop
jbe
xlat
push
xchg
je
addr16
fldenv
test
fcoms
hlt
std
jecxz
in
mov
pop
and
add
push
and
dec
ds
dec
mov
pop
bound
push
push
add
into
jnp
mov
lahf
adc
addr16
push
scas
xor
mov
add
pop
sbb
das
fsubs
loope
cmp
jns
in
mov
das
xor
pop
stc
stc
ret
sbb
cmp
ljmp
sbb
out
mov
add
xor
sub
ljmp
test
bound
idivb
insl
ds
pop
daa
xchg
popf
pusha
gs
push
and
mov
sbb
inc
push
repnz
cld
jl
fsub
add
mov
test
sub
or
aaa
push
mov
xor
je
adc
and
fisubl
lods
dec
cmp
out
push
xchg
inc
or
xor
adc
sub
aaa
test
cmp
movsl
sbb
or
dec
scas
jmp
push
xchg
mov
jnp
shrl
out
pop
stos
hlt
outsl
sub
pop
mov
mov
rolb
mov
mov
mov
inc
dec
add
ss
cmpsl
iret
arpl
inc
out
ljmp
scas
cmpsl
xlat
jle
pop
iret
pop
sub
xchg
and
sbb
cmp
pop
xor
movsl
outsl
mov
addr16
call
add
fwait
pop
dec
das
add
ljmp
hlt
or
jp
jge
iret
fldl
or
loopne,pn
jno
mov
fnsave
push
pop
aaa
roll
fsubs
loop
push
icebp
dec
cmp
push
push
adc
adc
jecxz
out
pop
icebp
js
sbb
jge
aas
daa
dec
es
or
jp
lahf
push
popa
lcall
out
lds
aas
sub
jno
mov
call
movsl
rcrb
or
aad
insl
in
mov
push
sbb
popf
mov
js
aas
test
sbb
inc
dec
inc
test
xchg
int3
xchg
xchg
ds
test
mov
mov
mov
jb
fucomip
mov
imul
push
adc
or
out
jo
dec
insb
sbb
mov
mov
vhsubps
fidivl
push
mov
mov
shrl
mov
mov
or
or
stos
xchg
sti
sbbl
sbb
jno
test
fistps
push
stos
adc
dec
daa
pop
out
dec
movl
add
xlat
repz
sbb
test
sub
jbe
loop
ljmp
pop
out
repnz
fs
insl
psubsw
hlt
add
jns
jns,pt
pop
pop
sbb
push
jo
jne
adc
push
dec
lods
loop
in
bound
sbb
mov
sarb
pop
insb
daa
insl
dec
iret
bound
je
pop
in
test
popf
add
inc
imul
xchg
aaa
jnp
gs
je
mov
dec
fbstp
adc
adcl
adc
mov
add
loopne
je
stc
cmc
scas
lods
add
dec
iret
xor
cmpsl
ret
xor
mov
mov
daa
dec
lods
imul
adc
adc
add
std
sub
pop
cmp
sub
shrl
sbb
out
add
pop
pusha
js
cmpl
inc
iret
fucom
dec
inc
and
ja
pop
in
sub
jns
subl
rolb
dec
testb
cmpsl
ja
and
jb
push
cld
cli
push
scas
xchg
mov
and
cmp
ja
mov
out
push
mull
in
add
pop
daa
inc
xchg
and
jne
cmc
jb
fdivl
xor
mov
jnp
es
scas
sbbb
pushf
xchg
add
push
std
sub
xor
lea
int3
push
lret
repnz
xchg
push
std
dec
sub
mov
xlat
sbbl
aaa
mov
leave
xchg
in
mov
jnp
pop
fdivrs
je
bound
fiadds
inc
or
pushf
jle
or
xor
xchg
push
jl
add
aad
mov
lods
jb
sbbl
push
sbb
mov
adc
and
out
cmp
mov
mov
mov
pop
sti
mov
stc
inc
jo
loop
xor
inc
jae
cmc
or
lret
out
insl
dec
rcrl
repz
imul
repnz
mov
lods
sahf
push
dec
lret
je
outsb
cmc
jae
xchg
add
mov
mov
scas
xchg
jnp
and
mov
fs
sub
in
roll
and
pop
sub
xor
insl
outsl
inc
xor
xor
scas
mov
mov
pop
lret
loope
inc
popf
xor
and
loop
xor
repz
fwait
movsb
outsl
jb
xchg
xchg
scas
pop
jl
cld
cmc
sbb
push
int3
daa
in
xchg
add
cld
jne
in
icebp
or
in
fldt
pop
imul
xor
jae
xor
pushf
jl
cmovge
test
lods
in
add
cmp
movsb
in
xor
popa
sub
sbb
test
sbb
pop
in
mov
or
and
mov
int
push
inc
ja
cmp
into
cmp
push
lods
inc
pop
and
sub
jl
jne
mov
ss
aad
mov
sbb
popl
push
shlb
jne
push
test
into
push
and
adc
out
jne
int
ds
adc
sub
nop
jb
bound
mov
lea
xchg
scas
sti
lahf
or
xor
mov
dec
call
nop
pop
cltd
out
test
lea
xchg
or
popf
call
xchg
lds
insl
pop
mov
sub
cmp
test
les
popf
orl
mov
adcl
xor
ljmp
insl
inc
cwtl
add
jb
in
and
pusha
outsb
push
test
and
lcall
out
cltd
aam
adc
cmp
lea
ljmp
imulb
ffree
xor
jecxz
imul
ret
inc
lahf
sbb
sbb
int
in
popa
imul
lods
call
dec
jno
dec
sub
ret
aaa
and
and
mov
push
dec
sub
in
shll
add
imul
sub
push
add
inc
aas
jnp
scas
jle
sbb
mov
jno
lret
or
out
frstor
pusha
inc
sbb
inc
mov
stos
test
jp
mov
pop
xchg
loopne
leave
fnstcw
dec
mov
xchg
insl
stos
jno
enter
outsb
aaa
les
in
int
aaa
loopne
mov
arpl
add
cmp
fwait
int3
add
cs
sbb
aaa
jmp
cmpsb
sub
push
add
out
imul
loopne
or
mov
jg
pusha
insb
or
xchg
sbb
push
dec
inc
cmpl
pop
pusha
or
movsl
popa
prefetch
or
xchg
call
mov
stos
push
add
or
insl
xor
jno
pop
imul
das
cltd
pushf
jmp
mov
xlat
dec
ljmp
pop
pop
in
shlb
iret
push
lock
stos
in
lods
inc
mov
lods
and
add
lock
mov
divb
pop
cmp
jecxz
lret
fldl
mov
sub
aas
lods
lret
pop
xor
shll
mov
cmp
mov
inc
mov
out
stc
out
rol
dec
adc
sbb
ja
clc
inc
jo
pop
push
clc
and
imul
lods
loop
mov
rorb
mov
or
test
addr16
mov
arpl
add
test
mul
sub
arpl
sbb
jne
or
pushl
or
or
pop
xor
cmp
adc
aaa
inc
or
jge
push
lock
repz
lods
imul
sub
cli
pop
cmpsb
je
push
in
or
call
stos
or
scas
or
adcl
mov
xchg
addr16
popa
ljmp
inc
or
stos
sbb
aas
inc
pop
shll
cmp
out
dec
test
pop
cmp
cmp
dec
dec
ficompl
mov
js
movsb
dec
inc
movsb
mov
mov
add
ds
jge
xchg
fwait
mov
stos
add
aaa
andl
jge
or
in
mov
mov
aam
sub
pop
dec
fcoml
mov
out
repz
jg
shll
add
mov
pop
enter
addr16
iret
add
push
dec
cmp
mov
leave
or
mov
dec
cmp
bound
lea
popa
dec
xchg
addr16
popa
or
dec
or
sub
gs
ljmp
call
lods
add
inc
jns
cmp
ret
popf
push
lods
jmp
pop
movsb
repnz
and
lret
jb
pop
and
jb
push
lcall
add
call
enter
popf
xchg
adc
dec
hlt
in
or
fsubl
push
insl
mov
xchg
iret
sub
mov
mov
mov
or
daa
cmpsb
sub
jb
xchg
lods
xchg
push
pop
es
mov
xor
loopne
imul
mov
push
inc
nop
dec
sbb
outsb
aaa
cli
imul
mov
dec
xchg
inc
cmp
mov
add
jb
ficompl
outsb
add
fwait
stc
mov
xchg
xor
orb
and
or
dec
jb
gs
rcl
fsubr
into
cs
jbe
lahf
mov
int3
and
loop
xchg
es
pop
mov
iret
push
mov
test
adc
add
push
ds
and
jb
hlt
daa
inc
sahf
inc
add
in
cs
pop
adc
nop
test
stos
in
cmp
push
stos
je
test
mov
outsl
pop
ja
ret
jle
lods
into
int
stos
std
push
inc
pushf
les
test
mov
mov
in
push
inc
out
bound
ljmp
cld
dec
addr16
pop
inc
nop
dec
mov
lods
test
adc
arpl
inc
push
adc
pop
les
daa
test
dec
test
dec
inc
aam
xor
nop
popf
out
loope
xchg
test
sub
jecxz
mov
xchg
stos
sbb
ds
fstl
fnstsw
adc
out
jb
fs
inc
xchg
cs
repnz
insl
xor
add
rclb
pop
ds
out
sub
dec
add
jge
imul
nop
xor
into
es
pop
or
and
jno
lret
xor
jb
in
push
lods
xchg
dec
popa
cmp
inc
aaa
ror
int3
jge
mov
lret
adc
js
jne
mov
fimuls
in
das
xchg
iret
adc
push
cwtl
cmp
dec
or
andl
xor
cmpb
sbb
outsl
adc
lret
fiaddl
jo
fstl
jno
rclb
aas
gs
xchg
sub
lods
in
mov
xchg
lret
loope
or
xchg
sbb
xor
sub
mov
cmp
push
lcall
popa
sub
call
movsl
jle
or
neg
inc
jno
add
and
or
stos
cmp
inc
adc
std
mov
lods
xchg
addr16
lret
xor
test
mov
adc
or
lcall
ljmp
sarl
into
je
pop
test
in
insl
jle
mov
bound
aam
scas
or
inc
sub
rol
push
test
fistpl
dec
in
push
jns
or
sub
or
and
arpl
sbb
sbb
mov
adc
jns
sahf
stos
fildll
pop
pop
xor
call
imul
dec
outsb
jge
jp
inc
xchg
push
mov
cmpsl
addr16
test
jb
lock
stc
pop
or
popf
outsl
ljmp
sbb
daa
pop
hlt
fnstsw
test
sub
cmp
or
dec
and
pushf
dec
fstl
xorl
cwtl
add
lods
orl
hlt
sar
mov
adc
jnp
loopne
pop
jmp
mov
jnp
and
jmp
popaw
scas
xor
adc
lcall
sub
pop
fs
sub
sub
mov
into
arpl
and
mov
sbb
adc
push
pop
or
insb
xchg
in
lea
loop
test
xor
inc
lods
call
mov
outsl
mov
stc
mov
fisttpll
ljmp
push
add
addr16
push
roll
pushf
cmp
lret
pop
sub
push
fs
adc
out
mov
cwtl
imul
rolb
jne
jb
lcall
jns
ud0
rcr
push
adc
leave
inc
lods
lret
or
imul
aam
mov
mov
ret
pop
mov
out
or
mov
hlt
enter
push
andb
addl
insb
xchg
dec
add
daa
add
xchg
daa
cmp
ds
sarb
jb
mov
sbb
jmp
dec
adc
or
cmpsb
push
je
popf
jno
movsl
data16
add
in
inc
or
dec
cmp
out
sti
imul
pop
enter
add
unpckhps
sub
dec
stos
loope
divb
mov
in
xchg
xchg
stc
imul
lcall
adc
jb
cmpsl
cli
fimull
pop
cmp
fnstenv
fs
sahf
mov
cmp
pop
je
das
push
xchg
aam
mov
jg
xor
dec
inc
daa
xor
sbb
push
nop
in
movsb
cmp
aas
sub
sub
or
cmpsl
xchg
pushf
in
aad
lea
dec
xchg
data16
jb
int3
dec
pop
inc
stos
lock
push
sub
into
jmp
enter
sbb
and
xchg
mov
movsb
test
ret
ret
out
or
or
jp
scas
cwtl
rcr
mov
cmpsl
cltd
jl
sub
popa
dec
ret
and
and
xchg
gs
clc
or
xor
push
bound
push
push
jmp
add
adc
inc
in
int
cli
or
mulb
push
adcl
push
cmp
lahf
fmuls
jg
pushf
shlb
test
dec
out
sbb
inc
xchg
xchg
test
sub
jg
movsl
inc
lea
jb
movsl
dec
outsb
and
and
bnd
sub
dec
shrb
addr16
stos
loop
mov
sub
lcall
push
mov
fidivs
hlt
stos
mov
lods
in
or
insl
xchg
lret
inc
pop
scas
rorb
cmp
cltd
stos
add
xchg
sti
gs
jecxz
scas
xor
aas
into
pop
stc
rcrb
sub
dec
repz
iret
fs
push
pop
pushf
cmp
pop
scas
insb
sbb
pop
jbe
mov
fcoms
or
je
aas
pop
stos
pop
mov
add
lahf
scas
fdiv
rcll
sub
jmp
or
hlt
call
add
cmp
aam
aaa
je
inc
jg
or
cmp
outsl
jo
sub
push
adc
mov
sbb
pop
lods
xlat
xchg
push
call
popa
jl
add
testl
jo
mov
mov
clc
lea
mov
lods
push
xchg
push
xchg
sub
test
lret
sub
scas
xor
jl
mov
imul
xchg
addr16
jl
and
push
stos
cmpsl
fs
out
inc
push
adc
mov
push
mov
and
xchg
faddl
xor
js
inc
pop
jge
xchg
lret
sub
stos
es
insb
dec
and
add
push
inc
in
bound
sbb
lret
pushf
jb
push
push
gs
sti
jo
xchg
cmc
aaa
pop
or
sbb
fisttpl
and
and
xlat
ds
sbb
jno
xor
or
mov
adc
aad
int
cli
xor
fstpl
lea
in
add
dec
sti
cmp
out
imul
cmp
pop
loop
stos
and
jle
xlat
mov
jno
nop
cld
add
adc
aad
jnp
mov
adc
into
sbbb
cmp
aaa
insl
pop
adcl
daa
add
les
xchg
dec
dec
jo
mov
dec
mov
cmp
and
sbb
jo
cmp
push
je
sub
into
jmp
popf
and
inc
push
or
mov
mov
mov
or
mov
out
cmp
and
lods
dec
paddw
outsl
imul
hlt
fildl
add
lock
fistpl
pop
int3
stos
cmp
lea
int3
mov
ret
loop
inc
fs
mov
and
mov
roll
push
stc
in
or
xor
xchg
jns
xor
xchg
out
xlat
les
cmpsl
mov
lahf
cs
jb
jecxz
dec
sub
xchg
mov
mov
pop
xchg
jne
imul
orl
mov
add
insb
lahf
stos
adc
sbb
inc
sub
stc
ret
aaa
lret
mov
dec
mov
xor
or
cli
in
adc
mov
xorl
into
push
adc
dec
or
fldenv
or
mov
mov
sub
inc
out
insb
arpl
lea
xchg
lcall
mov
adc
sbb
push
aas
arpl
add
out
push
dec
repnz
imul
in
push
lcall
cmp
out
aam
lods
xlat
jno
popw
iret
loope
mov
lods
shll
dec
lret
out
push
pop
lret
and
adc
cltd
lods
mov
cltd
jp
bound
hlt
xchg
and
xor
add
lods
in
lea
xchg
jne
daa
andl
loopne
popa
xchg
dec
out
jae
push
push
xor
loop
es
lret
aad
xchg
in
sub
jb
adc
jbe
push
or
movsb
add
pop
fimuls
std
push
dec
test
xchg
mov
hlt
cmp
imul
shlb
out
or
fcoml
stos
je
lods
dec
cmp
cmpl
mov
aad
cli
pop
sub
lea
inc
mov
and
adc
add
cmp
arpl
pop
mov
adc
mov
cld
xlat
pusha
repnz
dec
push
js
inc
insl
adc
in
and
fs
jb
xchg
xchg
repnz
push
cmp
sbb
push
push
sbb
rclb
jl
and
repz
and
jnp
dec
daa
cmp
stc
lcall
inc
into
jmp
jge
jle
cmp
or
inc
bound
jl
xchg
in
imulb
mov
je
mov
aaa
adc
jmp
inc
cs
sub
lea
mov
es
jecxz
fcmovne
lea
pop
in
fmull
mov
push
mov
sbb
pop
in
mov
xchg
mov
mov
push
lret
pop
test
ret
out
inc
daa
pop
xchg
loope
xor
inc
lret
mov
xchg
mov
pop
mov
xor
or
loope
push
xchg
jo
and
nop
adc
pop
sbb
mov
xor
add
cmp
push
mov
ljmp
hlt
or
test
pop
xor
push
lcall
cmpsl
test
aas
shlb
and
test
mov
push
or
pop
in
sub
rorl
push
cmpsl
sbb
in
jle
cmpsl
or
inc
jne
xor
scas
aam
stos
mov
xor
sub
lahf
or
das
popf
mov
aas
lea
ds
addb
jg
scas
push
loopne
push
mov
mov
mov
andb
jl
sub
stc
pop
sbb
imul
xchg
sbbb
jnp
mov
jmp
cmpsl
mov
jne
xchg
aaa
jg
xor
push
movsb
sti
xor
xor
push
and
mov
xchg
dec
imul
dec
and
mov
add
mov
dec
data16
pop
dec
sahf
jnp
rorb
dec
test
lahf
inc
mov
into
jo
aam
popf
mov
das
dec
ss
cmp
sbb
inc
or
mov
jns
ja
inc
jecxz
adc
mov
mov
out
rcrl
xchg
aad
lods
inc
mov
mov
cmpsb
mov
add
push
cmp
lea
aam
addb
cld
mov
lods
adc
pop
aas
aam
pop
mov
sbb
jnp
xchg
jg
xchg
inc
sub
mov
adc
pop
shrb
popa
adc
pop
and
and
mov
sbb
fsubrl
pop
out
sub
inc
sti
add
cwtl
xchg
fwait
xchg
sub
lock
lahf
lods
lret
sub
add
cli
ss
adc
ds
jecxz
pop
aaa
test
jp
popf
sbb
sti
xchg
mov
dec
jbe
mov
push
xor
cltd
add
or
add
ret
xchg
jle
push
imul
xor
mov
adc
insb
mov
cwtl
jle
movsb
gs
or
jle
testl
xchg
add
jle
enter
loope
in
inc
ss
add
push
test
sbb
jno
imul
scas
mov
in
lods
in
push
jno
adc
sti
push
cld
dec
jmp
push
mov
scas
dec
add
pusha
lahf
sti
cwtl
push
repnz
dec
inc
mov
jge
jb
gs
sbbl
cmp
popf
mov
les
xchg
enter
dec
call
xor
out
jns
dec
add
adc
or
sahf
add
push
movsl
arpl
popa
jl
mov
push
popf
mov
sub
scas
cmp
mov
dec
ljmp
sbbb
mov
cmpsl
outsb
xor
pop
dec
mov
mov
pushf
cmp
mov
adc
jle
ret
divb
in
iret
pop
inc
pop
clc
xor
xor
imul
mov
xchg
cmc
xor
mov
push
mov
das
add
lds
push
push
adc
fimull
jnp
xlat
unpckhps
adc
jnp
arpl
pop
jg
lods
sub
and
lahf
inc
adc
sbb
sarb
cmp
sub
push
jo
or
jb
jno
and
shl
movsb
add
addr16
adc
jno
call
mov
jge
je
clc
mov
repz
lret
push
push
adc
test
mov
dec
xor
stc
loopne
push
jb
push
scas
mov
in
clc
or
jp
or
js
imul
and
xor
fisubl
cmc
jbe
dec
aad
xor
sub
ljmp
pop
mov
sub
and
adc
mov
push
hlt
lahf
test
cli
scas
xchg
sbb
lods
rorl
xlat
out
xor
ficompl
das
jl
test
lock
aas
std
fwait
lods
mov
lea
xor
shlb
int
outsb
cmova
insl
fwait
jns
lea
stos
pop
mull
incb
mov
rcrl
mov
ja
pop
stos
xchg
call
push
adc
test
ret
sarl
aaa
test
pop
popf
cmp
sub
enter
iret
lods
push
push
and
push
mov
movsl
test
ljmp
sahf
addr16
add
xchg
and
popa
cmp
scas
push
aas
rolb
sub
stos
cld
popf
sub
add
lods
add
call
fistps
in
in
inc
jle
mov
mov
adc
ret
rcrl
shrd
mov
jno
iret
jp
lds
jg
mov
xor
dec
lea
test
insl
mov
cmp
push
test
xchg
jo
adcl
int3
jne
and
fisubrl
xchg
outsb
cmpsl
cwtl
sarb
call
lods
lock
and
popf
pop
outsl
in
or
fisttps
lea
out
fcomps
cmp
popf
leave
aas
in
add
mov
jne
movsl
jmp
test
jp
daa
adc
in
hlt
aad
adc
cli
jns
fidivrl
xchg
pusha
pop
xchg
push
movsb
xchg
mov
push
mov
jecxz
mov
push
xchg
test
fadd
lods
lods
or
xor
or
out
fistl
cmc
ja
pushf
mov
lock
push
popa
sbb
cmpsb
js
in
jmp
shlb
pop
lcall
ror
in
jb,pt
popf
cmc
jge
push
rolb
out
movsb
fcompl
scas
pop
lods
rep
dec
data16
push
lods
add
ljmp
lret
xor
test
jb
scas
inc
rcll
nop
mov
inc
and
sub
push
mov
inc
outsl
mov
filds
test
in
dec
sbb
in
out
rolb
lahf
mov
ss
pop
in
mov
jl
add
shlb
xor
xchg
fcoml
pop
mov
and
and
push
dec
pop
imul
movsl
lods
adc
mov
cmp
adcb
inc
jns
movsl
jnp
cltd
xchg
gs
adc
loope
inc
jns
stos
inc
and
xor
cli
push
test
ja
mov
mov
subl
inc
inc
jle
mov
add
adc
int3
hlt
cmpsl
inc
int
dec
jne
sub
xlat
in
fmull
andl
test
sub
xchg
bound
push
xorb
ret
jb
jae
call
push
imul
mov
repz
data16
dec
push
or
sub
cli
sarb
pop
lea
bound
pusha
cli
xor
loop
cmp
mov
mov
je
rclb
pop
sub
mov
xor
dec
bound
jo
jge
insb
aaa
jp
sbb
inc
ja
cwtl
inc
mov
jbe
cli
add
cmc
push
pop
cmp
mov
cs
sbb
mov
fnsave
or
shr
stos
push
jns
lcall
fisttpll
mov
in
push
nop
repnz
scas
lahf
pop
les
rclb
jno
stos
push
test
jle
cmpsl
imul
push
xchg
mov
aad
repz
adc
cmp
inc
cmp
mov
xor
add
lret
or
pop
out
fists
push
mov
pop
adc
mov
mov
sbb
inc
addl
or
and
daa
or
stos
and
push
cs
out
mov
sbb
stos
in
pop
cmp
lcall
add
mov
xorl
mov
inc
lock
insb
mov
adcb
push
push
in
fsubrs
test
scas
mov
mov
mov
in
scas
gs
insl
xor
in
add
loopne
cmpsb
and
test
cmp
jecxz
das
mov
movsb
push
add
push
and
mov
in
repnz
int
dec
sub
mov
rorl
repnz
icebp
inc
fwait
push
and
mov
movsb
sub
sbb
out
dec
mov
push
cld
xor
adc
jl
sbb
shrb
push
arpl
xchg
mov
jecxz
mov
sarb
cltd
lret
mov
push
push
dec
ror
jle
pop
push
mov
or
iret
pop
jle
dec
cmpsb
jle
add
scas
in
addr16
jne
pushf
imul
out
or
xchg
js
xchg
xchg
outsb
ja
mov
jno
mov
jbe
jmp
or
loope
mov
xchg
adc
fcmovnbe
jb
idivb
sub
cmp
push
cs
and
lea
addr16
hlt
jae
fisubs
cmp
movsb
and
popa
int3
add
dec
jae
pop
lods
push
mov
xchg
or
jns
addr16
mov
jo
scas
popa
sbb
pop
sub
rcl
dec
lret
xchg
lds
test
outsb
mov
clc
xor
popa
jne
jb
shlb
hlt
mov
insb
jo
jae
hlt
daa
enter
icebp
lods
cmp
mov
shrl
cmp
add
mov
mov
stc
sbb
mov
frstor
xlat
mov
or
dec
jle
sub
mov
ds
ret
inc
lret
push
cmpsb
mov
cmc
jl
and
std
mov
xchg
stc
sbb
add
or
push
insl
or
insb
jno
ficompl
push
mov
inc
mov
aam
or
test
into
scas
dec
push
sub
lea
jno
mov
lahf
fs
mov
test
sti
xchg
lret
pop
dec
aad
or
push
gs
outsb
sub
lea
dec
insl
inc
xor
sub
inc
mov
arpl
ljmp
and
stos
push
cmpsl
inc
pop
mov
jo
pop
fsubrs
mov
sbb
sbb
adc
adc
inc
imulb
shrb
xor
push
add
sti
jo
xchg
shll
nop
lcall
inc
inc
mov
add
out
sbb
adc
adc
repnz
mov
fiaddl
lea
hlt
pop
lods
sbb
ljmp
push
xchg
push
scas
jb
jo
mov
inc
jecxz,pn
xchg
xchg
jno
shrb
xor
insl
cld
push
call
sub
dec
lea
jmp
sub
out
orl
movsl
adc
mov
add
and
mov
test
in
dec
sbb
outsb
add
dec
xchg
adc
out
xchg
jns
mov
push
pop
xchg
or
stos
lds
mov
push
call
stos
push
sahf
mov
scas
pop
and
cmpsl
loop
sub
pop
movsl
xchg
int
jecxz
or
or
xor
and
shll
or
mov
mov
add
or
mov
sbb
jnp
pop
cli
push
sbb
aaa
fisubl
lds
addr16
jle
in
cmp
mov
mov
enter
pop
mov
popf
daa
loope
loop
test
sub
xor
mov
lds
pop
adc
mov
or
call
test
movsl
jmp
loopne
mull
subl
aad
hlt
movsb
mov
push
cwtl
push
adc
test
sub
cmc
xor
xchg
lret
outsl
in
scas
and
and
addr16
cmp
imul
add
cmp
scas
xor
stos
mov
out
pop
movb
cmp
ja
xlat
pop
call
arpl
test
pop
insl
push
cmc
inc
iret
es
pop
in
gs
hlt
xor
movsl
jge
adc
adc
dec
cmp
xchg
jmp
cmp
hlt
fs
adc
xchg
push
jmp
mov
lods
adc
ss
clc
mov
mov
addr16
and
and
test
lea
out
mov
mov
ja
xlat
pop
out
cmp
bound
popl
xchg
mov
dec
in
xor
xchg
jmp
movsb
in
addr16
scas
push
std
mov
mov
and
cmp
test
int
mov
inc
movb
hlt
lds
cld
cmp
fnsave
aad
dec
or
xchg
in
hlt
xchg
push
xor
dec
adc
push
add
repz
rorb
outsl
or
or
mov
mov
cmpsb
leave
mov
dec
xor
xchg
sti
pop
add
test
xchg
mov
icebp
adc
je
dec
mov
pop
dec
cmpsl
push
xor
test
cmp
push
arpl
clc
mov
mov
addr16
pop
dec
cmp
notl
adc
cmp
pop
scas
adc
and
fisubl
fnstcw
pop
pop
test
push
mov
push
test
xor
and
lods
in
mov
dec
xor
or
lods
pop
ret
clc
xchg
push
mov
xor
popa
xchg
dec
ss
xlat
pop
sub
bound
arpl
dec
lahf
ficoms
push
xlat
ds
pop
subl
fsubrl
mov
xchg
ja
xlat
and
lret
mov
push
dec
ds
adcl
xor
mov
mov
push
xchg
cmc
movsl
cmc
cmp
bound
or
daa
pop
add
inc
cmp
lods
sbb
and
lods
inc
inc
gs
jns
mov
bound
xor
mov
into
adc
or
xorb
cmp
mov
lahf
lock
ret
lea
adc
into
adc
pop
ds
and
imul
lret
sub
jge
adc
lret
cli
in
sahf
and
add
cli
inc
push
push
or
cli
cmp
pop
scas
adc
pop
cmpsl
pop
stos
and
ljmp
or
mov
loop
add
loop
mov
test
outsb
push
into
das
imull
adc
hlt
movsb
push
xchg
ljmp
push
pop
ljmp
sub
adc
addr16
lret
and
and
ds
dec
mov
xchg
add
imul
mov
or
bound
pop
arpl
in
shll
mov
inc
dec
mov
xchg
cmc
das
mov
push
sbb
leave
fs
adc
fidivl
xchg
outsb
push
into
sahf
repnz
jp
loop
dec
stos
mov
in
and
mov
mov
lods
dec
arpl
xor
and
pop
in
push
lock
fbstp
aam
cmp
and
adc
push
loop
add
and
mov
inc
scas
mov
inc
and
push
inc
pop
push
mov
add
gs
inc
mov
xchg
addr16
and
mov
fmuls
aad
pop
add
and
xchg
inc
mov
mov
push
test
or
out
das
push
lods
sub
repnz
cmpsw
mov
fsubrs
and
arpl
ds
add
sahf
aaa
mov
pop
mov
push
adc
outsl
cmp
fs
lds
mov
decb
mov
mov
push
push
repz
imul
mov
mov
scas
outsb
repz
lods
outsl
arpl
xor
and
xor
out
dec
cmp
and
enter
push
mov
les
sub
ljmp
clc
das
repz
lods
dec
arpl
arpl
imulb
stos
repz
adc
push
fcoml
shrl
and
xchg
stos
lock
ljmp
pop
stos
lock
outsl
or
or
xchg
inc
loopne
nop
fistps
dec
out
cmp
or
xchg
push
inc
imul
and
inc
dec
cmp
imul
jnp
adc
loopne
popa
shld
xchg
add
lds
lds
jb
addr16
cld
push
jne
scas
shlb
or
xor
jnp
add
ds
insl
xor
cmp
and
mov
sub
pop
sub
int3
sub
daa
sub
pop
pop
sbb
jg
sahf
insl
repz
insl
clc
aam
adc
insl
adc
movsl
outsl
cmp
pop
xchg
out
enter
imul
mov
in
cmp
pop
arpl
imul
imul
lods
pop
or
repz
xor
pushf
gs
push
dec
xchg
cwtl
je
cmpsl
pop
jno
aaa
outsb
adc
push
fwait
xor
in
pop
mov
aaa
test
pop
push
imul
in
push
push
cmpsb
cmp
scas
fisttps
fs
orl
or
mov
cmp
cmp
lods
pop
fisubl
cltd
enter
push
mov
movsl
mov
mov
pushf
dec
je
pop
test
mov
shlb
mov
mov
or
insl
int
popa
xor
inc
mov
or
insl
je
mov
cmc
sbb
fbld
outsb
lods
xlat
popf
or
fcomps
shlb
rcll
xchg
dec
enter
call
lods
into
andl
xlat
les
sarb
out
inc
mov
fstpt
jg
daa
push
jns
mov
xchg
insb
mov
sub
jae
jmp
fisttpl
inc
jg
aaa
pop
dec
cmp
insl
mov
ret
or
mov
jp
mov
test
sarl
cmp
nop
rclb
jle
imul
or
xor
enter
mov
and
int3
or
les
fildll
int
repz
inc
xchg
pop
jge
lods
jb
pop
fiadds
mov
cmpl
add
jmp
and
or
es
push
cmpsl
ds
movsl
aam
xchg
lds
and
lahf
push
push
cmp
lea
fwait
cmp
cmc
mov
cmp
lea
stos
jb
ja
fsub
ret
movb
wbinvd
paddw
int3
xchg
cs
das
mov
jmp
and
bound
cmpsl
sub
jae
dec
xlat
mov
test
mov
xor
push
lds
mov
mov
cmp
pop
inc
cmc
sub
sbb
dec
inc
movsb
leave
push
out
bound
dec
rorb
loop
in
cmpb
mov
dec
iret
mov
xlat
shll
sbb
or
pop
out
fcmovnbe
insl
cld
in
int3
lret
and
punpcklwd
pop
hlt
cli
mov
xor
mov
push
call
pop
jmp
popf
ja
hlt
cltd
mov
imulb
pop
xchg
lahf
nop
shrl
fdivrl
imul
jbe
cmp
push
and
loop
lcall
fldt
lods
adc
xlat
pop
push
sbb
ss
xchg
fisttps
pop
and
mov
pop
cmp
imul
and
mov
adc
mov
adc
repnz
xor
lock
test
sub
push
adc
pop
hlt
mov
insl
mov
add
aas
je
mov
mov
ficoms
bnd
xor
lods
movsl
jg
stos
pop
in
pop
or
xchg
sub
xor
add
dec
adc
mov
and
addr16
stos
jne
mov
pop
jno
xchg
stos
loope
mov
ret
xchg
out
xor
lock
cmp
pushf
push
aam
jl
outsl
in
xchg
rcr
test
sbb
jo
scas
xor
outsl
mov
inc
jge
insl
popa
lds
push
xchg
push
fists
cmc
xchg
sbb
je
scas
mov
outsl
mov
roll
pop
pop
jecxz
adc
jns
cmpsb
das
sub
xor
jmp
movsl
cmc
imul
cmp
pop
inc
push
in
das
ret
mov
sub
jb
cmp
in
cmc
rcl
cmp
jne
arpl
xchg
mov
aas
int3
mov
pop
test
or
xchg
lods
roll
adc
pop
mov
push
push
sti
test
stos
adc
rclb
and
test
mov
movsb
jno
sbb
pop
sbb
call
sbb
insb
ja
and
adc
jecxz
dec
xchg
aaa
ljmp
mov
xchg
movsb
push
lods
cmp
sub
fisubs
inc
add
lods
cmp
adc
js
sti
popf
push
push
dec
jl
int3
int3
mov
dec
push
iret
in
cltd
insl
xchg
and
cmp
push
test
daa
mov
xchg
mov
mov
push
xor
in
cmp
pop
rolb
lock
ljmp
sahf
les
clc
ss
fldcw
push
cmp
dec
ja
cmove
in
in
jmp
fdiv
xchg
addr16
scas
dec
cmp
stos
inc
test
jl
clc
mov
xchg
hlt
xchg
clc
divl
mov
jmp
and
js
pop
lods
cmp
ss
sbb
pop
or
bound
fwait
mov
addr16
testl
mov
push
jo
scas
inc
fistpll
into
out
roll
jecxz
mov
iret
add
push
sbb
sbb
lds
sarb
xchg
lcall
out
xchg
pop
xchg
insl
in
add
iret
mov
jmp
jge
push
pop
scas
fnstsw
fcoms
jb
jmp
cmp
lcall
mov
repz
outsl
enter
in
sub
lahf
ja
mov
lea
xor
add
loop
or
or
push
xchg
mov
xchg
das
mov
push
inc
shll
push
add
leave
ds
or
and
mov
xchg
jp
mov
imul
shl
pop
fisttpll
jge
dec
es
es
push
movsl
lods
pop
dec
mov
fidivs
or
pop
insl
fidivrl
or
mov
mov
out
std
inc
pop
in
mov
dec
lea
outsb
sub
xchg
ja
cltd
xchg
add
out
and
add
and
sbb
sub
xor
negb
test
jno
sub
les
and
cmp
and
and
mov
xchg
jbe
inc
xchg
fildll
fwait
xchg
cmp
add
and
rcrb
jb
repz
imul
jge
sbb
push
cwtl
mov
lcall
fbstp
mov
mov
xchg
or
mov
lea
add
or
lea
and
fwait
add
ffreep
push
xchg
scas
cs
lds
hlt
push
sub
push
inc
xor
cmp
pop
popa
mov
popf
jp
pop
xchg
or
and
repz
test
pop
jl
xor
jno
addr16
lods
lcall
mov
or
jo
sub
ljmp
cmp
xchg
in
inc
push
mov
mov
dec
sbb
test
das
pop
sbb
and
or
and
jge
jl
xchg
add
xlat
cmp
lcall
jecxz
iret
jbe
fcomi
lret
pop
nop
icebp
dec
add
add
in
cmp
iret
shl
pop
jbe
shrb
xor
rolb
loope
add
cli
dec
lods
scas
repnz
cmp
cmpsl
ja
pop
test
mov
sbb
or
subb
outsb
cmp
jmp
xchg
mov
shr
bound
ljmp
and
jp
cld
inc
ss
pushf
xchg
outsl
adc
mov
push
fcomp
sbb
lds
and
lea
xchg
and
or
pop
pop
in
subl
insl
cmp
imul
addl
test
jne
inc
insl
mov
and
mov
aaa
lock
mov
outsb
call
in
popa
pop
and
sub
ret
push
sub
mov
jge
adc
outsb
jns
or
adc
mov
mov
cmpb
push
jge
mov
daa
cmp
pop
sub
xorb
mov
bound
mov
ficompl
xor
loope
in
int3
cmp
jg
test
icebp
aad
and
loope
movsbl
lds
mov
jg
pop
xor
pop
popf
cld
hlt
xchg
popf
repz
ja
push
jae
mov
mov
pop
mov
add
xchg
outsl
lret
fcoms
dec
jl
inc
or
rcl
sub
cld
mov
xchg
outsb
ret
cmp
cmp
imull
sub
test
jge
adc
hlt
call
cmc
xchg
stc
dec
cmp
fldl
fxch
sub
or
fisttpl
add
fstp
xor
mov
popa
repnz
lods
in
repnz
cmp
js
mul
xchg
and
mov
in
xlat
jb
and
mov
mov
aam
in
in
in
mov
clc
int3
jge
adc
enter
lods
mov
jp
cmp
and
sub
sub
fcmovnu
mov
and
or
sub
ja
xor
shlb
data16
push
inc
mov
loop
stos
mov
sub
ljmp
scas
daa
ret
gs
test
insl
imul
jecxz
push
arpl
ja
adc
cmp
cs
push
cmpl
add
inc
stos
or
sti
int
or
push
dec
pusha
sub
dec
int
movsl
mov
out
stos
sub
insl
ljmp
pop
stos
fwait
and
xchg
mov
std
jno
mov
add
int3
shll
mov
fstpl
sbb
mov
fldt
ret
inc
mov
clc
mov
cmp
in
jecxz
pop
repz
cmp
xor
xor
push
rcrb
arpl
dec
xchg
or
sbb
fucom
push
xor
stos
jle
xchg
sub
or
pop
bts
scas
and
repz
popa
fs
push
aad
int
in
adc
std
jne
std
or
adc
lods
sub
in
std
clc
adc
fwait
jecxz,pn
jmp
push
mov
stos
push
or
sbb
hlt
lahf
xchg
insl
stos
adc
and
aam
xchg
cmp
shrb
loop
mov
test
push
xor
push
adc
aad
cmp
dec
cmp
sub
pop
lods
popa
insb
inc
into
sbb
lds
les
push
dec
jl
jmp
and
outsb
imul
leave
push
cmp
test
or
or
int3
insl
insb
mov
pop
addb
and
lds
sarl
sbb
adc
andb
jne
xor
push
popf
sub
cmp
xlat
sbb
xor
pop
xor
and
enter
and
xchg
outsb
inc
push
insl
pop
pop
adc
cli
rcrl
sbb
stos
sub
mov
inc
xchg
mov
jl
mov
dec
test
leave
jne
mov
stos
in
insl
xchg
fidivs
movsb
xorb
cmp
push
pop
mov
inc
out
dec
jb
nop
lret
jg
mov
add
shr
xor
and
add
es
add
cwtl
push
pop
cmp
and
sbb
jo
pusha
insb
adc
inc
adc
and
sbb
icebp
push
adc
lods
cmp
shll
insl
cs
rolb
dec
imul
sbb
lods
or
lret
movsl
mov
jns
insl
in
andl
clc
lods
or
clc
movsl
or
bound
testb
gs
out
cmpsl
or
addr16
mov
pop
add
push
or
or
gs
cmpsl
jo
sub
mov
test
inc
mov
out
sub
lcall
xor
push
xchg
movl
cmp
dec
repnz
aam
dec
ljmp
inc
in
arpl
mov
clc
sbb
adc
mov
mov
stos
iret
xor
push
xchg
cmpsl
sbb
pop
mov
mov
test
or
sub
je
lods
or
insl
adc
daa
push
insb
dec
cmp
mov
loopne
mov
std
idivb
lret
mov
js
lods
test
cmp
adcl
pop
push
rorl
aaa
jl,pn
mov
icebp
fs
cmc
sbb
or
clc
pop
fdivr
stc
push
in
and
cmpsl
imul
incb
jg
insl
push
cmp
popf
add
pop
cmp
inc
jae
mov
cltd
sarb
cmp
jb
js
hlt
std
push
push
jns
xchg
cmp
sbb
clc
rcr
repz
cmp
pop
mov
jp
xor
xchg
insb
lods
outsl
call
sbb
aas
xor
add
scas
adc
repz
ds
pop
outsl
and
lods
mov
add
cmpsl
mov
adc
pop
nop
push
cmp
xor
adcl
test
fsts
push
add
test
fisttps
incl
cmp
out
sarb
jg
gs
scas
adc
mov
ja
addr16
push
lret
in
mov
cld
push
icebp
out
inc
int3
push
dec
out
in
xchg
sbb
cmp
mov
gs
hlt
filds
movsb
mov
mov
inc
clc
sbb
mov
movsl
mov
mov
outsb
insb
cmp
mov
arpl
imul
or
mov
lea
inc
fidivs
movsl
mov
add
ds
dec
pop
pop
xor
movsl
imul
and
push
add
fisubrs
mov
std
jg
ja
rcrl
sbb
imull
mov
loop
sbb
mov
push
fwait
es
fimuls
xor
mov
push
je
hlt
les
dec
lea
daa
pop
xchg
dec
rol
daa
movsb
jno
inc
xor
arpl
push
jge
dec
arpl
and
dec
adc
mov
les
sbb
mov
sbbb
stc
sub
xlat
jle
imul
insb
out
sbb
aad
cmpsl
fbld
lods
pop
push
or
xchg
cmp
push
jo
lea
jae
or
mov
lods
xor
outsb
ret
dec
inc
movsl
xor
or
add
mov
cmp
adc
push
sbb
xchg
insb
jecxz
dec
inc
mov
and
mov
and
or
fiadds
jno
arpl
push
or
inc
pop
push
inc
or
lods
inc
cmp
imul
aam
dec
cli
test
push
lods
dec
pop
push
insl
dec
or
in
xor
outsl
repnz
push
outsb
mov
sbb
mov
jae
dec
addr16
lahf
jno
popf
jl
cmc
or
repnz
lods
popa
adc
mov
push
cli
adc
adc
divl
fbld
fbstp
movsl
jp
xor
adc
add
aad
iret
jmp
push
shl
or
stos
roll
jae
mov
xchg
mov
jl
xor
rcr
and
orl
mov
mov
ljmp
mov
xchg
jnp
in
test
ror
inc
pop
sti
pop
jl
popa
lea
jne
dec
shll
movsl
lea
test
mov
in
push
lea
cmovge
push
mov
addr16
xchg
and
push
in
movsb
xor
arpl
in
cmpsl
jmp
loopne
and
push
mov
mov
sub
mov
addr16
pop
lea
dec
cmpsb
cs
insl
inc
in
das
out
dec
sbb
jmp
gs
out
xor
jge
xor
insb
stos
xchg
stos
push
inc
dec
popl
and
outsb
cmpsl
insb
ja,pt
inc
in
and
fcmovb
enter
push
ljmp
fdivrl
dec
lods
mov
mov
jmp
cmpsl
std
hlt
sub
or
push
xchg
mov
jb
or
ret
adc
cmpsl
and
jl
mov
repnz
aaa
mov
gs
loop
in
or
and
mov
jae
in
mov
sub
jbe
jmp
cmpsl
pop
push
xor
pop
in
mov
ds
pushf
xchg
jge
lods
nop
push
mov
cmc
xchg
into
add
outsb
jns
jp
loope
adc
xor
subb
dec
cwtl
mov
loope
call
mov
or
sub
hlt
mov
or
sbb
push
inc
in
mov
aaa
xor
inc
stos
into
cmp
dec
add
pop
pop
ljmp
cmp
mov
and
mov
les
pop
les
aaa
cmp
les
sbb
and
mov
hlt
rcrb
stos
fbld
es
insl
add
shrl
dec
adc
lcall
aam
filds
ficompl
in
jle
or
adc
leave
les
mov
fidivl
iret
out
icebp
arpl
push
imul
dec
sbb
and
mov
mov
repz
and
testl
mov
xchg
xchg
jo
push
loopne
mov
shr
je
cmpsl
shl
jns
lea
xchg
aad
jl
pop
insl
push
cmp
mov
rcr
in
lds
mov
or
insb
pop
shr
clc
xchg
push
xor
push
push
iret
daa
and
add
ja
push
rcll
push
cwtl
arpl
jne
je
daa
cmp
sub
sub
cs
das
jns
out
movl
push
xchg
sti
cmpsl
ficompl
in
pop
mov
jmp
stos
movsb
js
pop
je
aad
push
jbe
or
ret
pop
and
adc
add
push
cmp
pop
pushf
insb
dec
call
pop
lcall
sbb
dec
add
or
and
imul
insl
adc
gs
psubusb
add
imul
push
sbb
aad
out
sbb
sub
sbb
push
pop
jnp
xchg
xor
lret
cmp
faddl
jp
sub
jb
xor
dec
add
xor
or
hlt
out
push
out
enter
xchg
and
lds
lcall
add
scas
push
fildl
jns
xchg
outsb
imul
out
int3
mov
jmp
pop
sub
hlt
test
cmp
sub
xchg
outsb
imulb
inc
sbb
push
xor
and
jno
pop
push
sub
loopne
cmp
or
push
mov
roll
and
test
xor
das
xchg
or
shl
cmp
aas
in
jb
sti
pop
xchg
lods
mov
adc
jb
pop
pop
lret
jb
or
add
enter
pop
ds
jg
jae
ljmp
imul
nop
lret
std
shl
push
push
test
call
cmp
shrb
xor
lods
les
stos
xchg
mov
ret
scas
fwait
jg
bound
jns
into
add
lahf
push
jge
ss
add
imul
jnp
pusha
mov
lea
inc
in
das
int
pop
ja
add
mov
pop
xor
cmp
push
sbb
and
sub
pop
cli
jecxz
inc
push
xchg
pop
inc
sbb
xor
sbb
push
inc
lcall
aaa
jno
or
sbb
cmpsl
inc
leave
add
jl
dec
data16
insb
icebp
jle
sbb
sub
int3
fcomi
insl
pop
hlt
lds
and
jp
inc
orb
sub
bound
add
adc
xor
icebp
mov
jno
repnz
sbb
stos
lods
xchg
cs
mov
mov
lcall
xchg
punpckldq
xor
sbb
fisubrs
enter
cmpsb
xor
and
daa
pop
aad
loop
pop
test
mov
scas
insl
sbb
xchg
mov
js
mulb
jb
in
mov
jno
arpl
sahf
in
add
in
int
les
sub
dec
mov
lret
ret
pusha
cli
rorb
sbb
mov
push
push
and
add
lcall
lret
add
imul
xor
scas
mov
call
sub
addr16
mov
dec
pop
add
shll
add
or
jno
ss
popa
xlat
int3
iret
cltd
xchg
das
aad
xchg
pop
jp
add
std
sti
sbb
jno
aaa
sub
int3
lods
insl
and
mov
mov
or
inc
inc
das
jge
dec
ret
push
daa
jb
pop
std
les
jns
in
int
movsl
lods
mov
mov
leave
and
mov
in
and
xorb
in
mov
pop
jl
nop
out
jae
loopne
jecxz
insl
lds
lea
and
test
sub
and
sub
repnz
pushf
aaa
xor
xor
jb
imul
sub
dec
push
insb
lock
cmp
jle
mov
sub
xor
mov
cmp
enter
lret
push
les
mov
dec
xor
dec
in
xchg
int
dec
pop
xchg
mov
push
fs
add
mov
arpl
test
and
insl
and
jno
test
fnstenv
in
dec
pop
pop
daa
arpl
add
sti
pop
sbb
sub
je
sbb
sbb
aas
aaa
and
enter
fadds
call
fs
xchg
or
popa
fdivs
cmpsb
mov
ficoms
or
in
inc
stc
mov
js
lahf
inc
add
iret
cmpsb
inc
lods
test
mov
xchg
imul
xchg
cli
sbb
push
lret
mov
std
adc
stc
xchg
adc
push
mov
call
adc
iret
xchg
fcomip
in
gs
int
xor
stos
clc
aas
jge
pop
lods
sub
xor
inc
int
rcrb
adc
inc
cmpb
stos
insb
or
loope
sbb
mov
inc
lods
xchg
out
insb
popa
in
push
loope
add
mov
xor
movsl
daa
xchg
rcrl
rorb
test
aaa
adcb
popf
dec
dec
arpl
or
int
adc
aam
leave
cmpsb
xor
out
dec
xor
fdivrl
inc
pop
dec
jno
stc
das
push
aas
jb
aas
scas
mov
movsl
cmp
pop
inc
sub
cltd
ljmp
das
out
adc
adc
insb
cs
jb
popa
in
mov
out
rorl
jle
shlb
insb
mov
mov
cli
jl
jge
push
sbb
stos
sub
xchg
sbb
lahf
repnz
dec
cmp
test
pop
outsb
lea
dec
aam
mov
aas
shll
iret
rcll
jle
pop
shrb
sub
inc
dec
shll
repnz
mov
arpl
fldz
ljmp
pop
fimuls
lods
and
fdivs
pop
lahf
push
sar
xchg
testb
movsl
stos
test
outsb
inc
mov
lock
pop
jmp
sub
mov
repz
add
fs
in
sub
in
test
in
add
cmpsb
adc
imul
fidivrl
pop
push
insl
push
adc
and
add
mov
pop
push
dec
shll
fs
hlt
lods
and
dec
jno
cmp
inc
adc
stos
addr16
andb
out
and
fists
mov
push
mov
popa
push
in
fsubl
loope
daa
or
jp
mov
aad
fdivs
xchg
cmp
adc
int3
js
in
insb
or
jnp
fldt
or
adc
jge
lahf
inc
cmp
movsl
outsb
ljmp
xor
movb
inc
cmp
and
int
and
push
pushf
push
std
in
faddl
xor
inc
movsl
jbe
mov
xor
sub
and
or
ret
je
das
pop
in
gs
sbb
push
and
lods
mov
mov
add
push
les
arpl
jge
fsubrl
adc
in
stos
fnsave
outsb
pusha
cld
cmp
subb
insb
daa
or
adc
iret
mov
add
mov
stc
dec
insl
jecxz
xor
mov
dec
adcl
jle
xor
xchg
xchg
mov
fwait
imul
negb
mov
pop
push
push
clc
or
fbld
lods
pop
loope
popf
or
out
je
insl
xor
movsl
mov
jb
popf
icebp
gs
add
dec
enter
pop
xlat
lcall
cmp
push
jb
add
mov
movb
xor
arpl
arpl
mov
mov
ja
fcmovnu
sbb
push
xor
movsl
push
stc
sub
shrl
shl
mov
test
mov
dec
jg
stos
add
scas
lcall
cmp
sub
xor
lret
jp
xchg
jle
push
cli
mov
aad
adc
push
test
ljmp
shlb
loope
int3
popf
sahf
ds
divl
cmp
rcl
pop
lods
repnz
sbb
loope
jp
mov
jo
xchg
popa
mov
mov
rcrb
mov
aam
or
jbe
cmc
and
xor
jmp
mov
loop
cmp
lea
lea
test
in
aaa
sub
cmp
or
daa
hlt
stos
fiadds
xor
adc
fstpl
cmc
cwtl
into
mov
int3
lods
xor
sbb
fmull
dec
cltd
sarb
stos
ljmp
arpl
mov
lods
das
mov
es
mov
inc
push
mov
cld
fbstp
dec
cmp
insb
add
insl
push
sbb
rolb
daa
jb
call
xchg
into
dec
adc
jp
dec
shll
out
dec
xchg
add
call
leave
sbb
scas
in
mov
lods
out
mov
mov
mov
lea
lods
dec
cs
cmp
enter
nop
add
inc
jmp
leave
insl
push
stc
xor
cmp
test
mov
insl
std
cltd
daa
mov
jb
dec
dec
xor
xchg
int3
in
jns
jnp
ret
cmc
ja
movsl
pop
outsl
or
jge
fisttps
int3
movsl
xchg
mov
inc
cmp
loopne
xchg
pop
pop
inc
cwtl
and
mov
cli
lret
jb
mov
jnp
push
or
cmp
mov
or
xor
mov
adc
lahf
inc
xor
mov
decb
xchg
aad
insb
in
xchg
xchg
addr16
inc
dec
pop
and
hlt
arpl
pop
int
popf
bound
sbbl
fisubrs
std
shll
in
xor
mov
pop
jb
cmp
sub
fsubs
movsb
in
xchg
stos
cwtl
add
rcr
push
insl
inc
orl
fwait
ljmp
lods
into
pop
cmp
movsl
lods
dec
sub
push
xchg
divb
jne
shr
rolb
sbb
sub
inc
mov
cmpsl
outsb
lods
sahf
mov
mov
mov
pop
loopne
dec
call
pop
adc
mov
stos
pop
mov
cwtl
sub
xor
popf
in
xor
jge
out
aaa
movsb
outsb
xor
adcb
ljmp
pop
adc
ljmp
popa
add
loopne
pop
out
pushf
and
loop
push
mov
add
xor
cld
xlat
fs
mov
xor
mov
sbb
insl
jno
or
add
push
shrd
adc
stos
mov
je
out
xlat
pop
inc
or
insb
xchg
mov
fldcw
test
sbb
add
sub
dec
mov
xlat
js
test
push
xlat
lret
mov
inc
xlat
xlat
xchg
inc
cmp
pop
add
sub
mov
loopne
testb
adc
scas
push
test
push
stos
xchg
cmp
sub
mov
iret
in
dec
negb
or
push
or
jne
pop
imul
popf
into
xchg
xor
pop
mov
push
mov
test
jb
and
adc
and
sub
sub
push
fwait
sbb
arpl
je
insb
jle
sbb
push
xchg
ljmp
loope
iret
int
popa
outsb
mov
dec
sahf
in
ljmp
push
xlat
jno
cltd
pop
clc
dec
stos
out
sub
sub
jecxz
or
stos
call
negl
jnp
in
add
movsl
mov
jl
aas
into
insb
or
push
and
mov
jecxz
loop
testl
sbb
pop
mov
mov
mov
add
mov
repnz
inc
jb
in
in
cld
jge
push
mov
xchg
mov
mov
push
push
int
sub
pop
cmp
or
test
clc
xor
xor
ja
cwtl
in
or
xchg
lods
pop
jns
cli
inc
inc
pop
adc
or
dec
inc
rorb
decl
cmp
xor
std
fcmove
je
outsb
xchg
rolb
xchg
in
lea
mov
les
mov
xchg
jle
xor
push
jbe
aaa
movsl
jmp
imulb
fdiv
test
jnp
dec
imul
pop
mov
xchg
lea
in
push
ljmp
shl
xor
in
dec
out
jb
ss
cld
pop
arpl
lahf
arpl
in
mov
cmp
dec
cmc
or
lret
movsl
cmp
leave
ret
filds
iret
inc
repz
adc
or
inc
mov
and
xchg
movsb
icebp
sub
lods
jb
in
icebp
es
lahf
vpshlq
xlat
lods
dec
adc
lahf
fiadds
iret
push
cli
daa
add
cmpsl
pop
sahf
cs
fisubrs
fdivrs
mov
inc
cwtl
les
xchg
test
xor
mov
insl
lea
add
insl
mov
xor
lahf
ljmp
cmp
outsl
sbb
adc
jne
xchg
and
push
cltd
daa
gs
ret
mov
add
jne
in
repz
iret
lret
xchg
sub
inc
jg
xor
popa
lock
lock
fwait
arpl
in
aaa
mov
subl
test
cltd
or
shl
sub
sbb
call
push
add
call
xchg
outsb
mov
mov
subl
and
test
lods
lods
mov
ja
jne
fcmovne
sub
jb
lret
jbe
fwait
pop
pop
mov
lds
mov
or
push
jno
inc
mov
cltd
imul
pop
scas
dec
push
sbb
aaa
test
cmpsl
shrl
fisttpll
push
cmp
fnstsw
jns
mov
ljmp
stos
xchg
mov
shl
push
xchg
and
test
cmp
loopne
lahf
mov
inc
leave
dec
add
cmp
push
fisubrs
sti
jo
xchg
sbb
push
imul
xor
jns
inc
xor
popf
test
xchg
or
dec
lret
xor
fisubl
add
sbb
cmp
add
xchg
dec
or
and
push
push
dec
jns
dec
test
xchg
mov
jne
int
cmpsb
xchg
inc
out
pop
dec
inc
outsb
fcomps
mov
faddl
and
xor
mov
or
cmpsl
hlt
test
sarb
in
dec
sub
push
call
lret
repz
insl
mov
or
cli
iret
add
jmp
sub
int
cmp
fdiv
cltd
xor
xor
and
add
inc
jns
sbb
in
popf
push
add
repnz
dec
push
and
jbe
fistpl
adc
mov
insl
adc
adc
out
cltd
jbe
cmp
ret
lea
dec
lea
ret
or
call
dec
push
das
mov
aam
or
sbb
fs
fsubs
mov
test
shll
dec
push
mov
fs
mov
mov
xlat
addr16
mov
push
lcall
add
in
es
mov
ficomps
ret
imul
and
push
add
mulb
hlt
fwait
pop
enter
mov
inc
jecxz
clc
dec
sub
enter
push
imul
test
int
gs
shl
in
push
dec
jne
jns
xor
xchg
movsl
mov
push
sbb
mov
sub
mov
in
or
addr16
adc
fbstp
or
enter
jmp
addr16
test
sarl
into
xchg
sahf
jecxz
pop
xor
sub
ja
xor
es
daa
lds
repz
and
dec
or
and
or
adc
cli
jl
cmp
push
mov
imul
sbb
addr16
xor
jge
jmp
mov
daa
xchg
subb
fisttpl
aaa
sbb
push
cmp
dec
xchg
cltd
jo
or
mov
mov
jg
outsb
xchg
push
dec
addr16
lea
mov
xchg
das
mov
xor
cltd
and
lods
popl
sub
and
jns
int3
pushf
xchg
sub
pop
and
hlt
shll
ficoml
and
mov
popf
or
sti
sbb
add
mov
jnp
push
aaa
cmp
aaa
shrb
subb
inc
aaa
aad
cmp
add
mov
xor
orb
jns
adc
test
cmpsl
mov
jecxz
outsb
cmp
mov
lret
cmp
imul
ljmp
or
jg
mov
mov
gs
mov
pop
insl
pop
inc
mov
int3
or
test
fidivl
daa
in
dec
and
mov
ret
add
push
jl
in
add
xor
xlat
pop
bound
aad
xchg
and
lods
insl
xor
scas
popa
adc
jge
jge
lahf
jno
dec
lea
jle
movsl
lods
lea
outsb
mov
mov
jne
lret
insb
add
jno
call
pop
dec
xchg
dec
out
mov
test
fxtract
test
sub
lret
cmpsl
rcr
sti
adc
out
aaa
shr
jg
add
mov
jae
in
jb
push
jns
imul
gs
cltd
bound
test
push
shrl
hlt
push
mov
rolb
nop
xchg
fnstsw
out
stos
popf
pop
mov
add
mov
rorl
push
insl
cmp
xor
pop
push
add
xchg
pop
mov
cmpsb
sarl
insb
sub
in
je
nop
movsl
insl
mov
xchg
cltd
mov
push
stos
lock
sub
dec
push
jno
sbb
rol
add
lea
in
bound
or
movsl
jge
jno
dec
xchg
fisttpl
inc
fldenv
scas
cmc
mov
xor
mov
pop
ret
push
pusha
push
js
iret
cmpsl
push
push
xchg
and
aam
subb
mov
aad
sti
jns
nop
push
cmp
js
clc
fs
sub
jno
pop
enter
mov
insl
cmp
imul
lahf
mov
mov
aas
dec
mov
scas
int
test
in
jl
or
cli
jge
shl
and
ds
mov
test
arpl
dec
pop
dec
push
faddl
sub
or
gs
int
cmp
insl
insl
adc
popa
hlt
inc
jge
mov
cltd
das
ds
shl
sub
clc
nop
pop
cld
call
jb
sub
inc
popa
xchg
mov
or
adc
rorl
data16
jns
or
andl
mov
cmpb
push
lods
incl
outsl
mov
mov
xor
popf
daa
sbb
jb
jmp
cmp
xor
mov
sub
hlt
xchg
xchg
inc
into
lret
mov
and
sub
leave
sti
icebp
inc
test
dec
ljmp
ret
gs
dec
fsts
std
xor
pop
cmc
sub
jne
sub
inc
mov
jnp
pop
sbb
jne
sbb
scas
loop
sub
scas
push
and
lods
or
cwtl
dec
mov
stc
xor
fstl
shlb
mov
adc
mov
les
es
push
sub
in
rclb
sbb
daa
jb
pop
push
dec
movsb
sbb
xchg
cmp
cvtpi2ps
jb
pop
sub
jmp
orb
and
movl
jp
mov
inc
jo
inc
jb
push
push
jne
cmp
push
mov
lds
sbb
adc
cmpb
and
and
mov
lds
and
mov
mov
or
out
lods
insb
aaa
push
mov
add
scas
mov
sub
fmulp
outsl
sub
nop
outsb
sbb
jle
pop
mov
add
jmp
push
mov
push
add
test
imul
fsubrl
jp
nop
stos
push
dec
shll
loopne
insl
mov
into
dec
cmp
and
enter
mov
or
sub
movsl
fbstp
cmpsb
cmp
imul
int
lods
jns
bound
popf
cwtl
jno
xchg
mov
aaa
xchg
test
lods
pop
mov
add
or
or
lcall
daa
movsb
or
pop
or
movsl
imul
xor
sarl
aam
sbb
push
outsb
loope
aas
pop
push
gs
ret
push
jo
adc
and
adc
call
enter
fwait
lods
pop
xor
arpl
sbb
rorb
testl
xchg
mov
movsb
cmp
in
jl
push
popa
pop
test
fisubrs
xchg
mov
faddl
test
into
xchg
leave
fmull
push
push
push
lods
jb
push
enter
jp
and
fcoms
dec
add
inc
inc
or
lods
cmpsl
stc
push
pop
pop
jecxz
adc
and
xor
jmp
inc
dec
sets
sbb
pop
lds
gs
insl
push
push
push
xlat
or
lods
daa
jle
iret
fucomip
scas
sbbb
push
add
jg
mov
mov
inc
int3
push
stos
add
mov
jg
addr16
popa
inc
gs
and
les
or
mov
lahf
xchg
add
scas
mov
push
push
cmp
loop
stos
mov
out
and
xchg
xor
add
dec
les
dec
mov
andl
add
dec
jns
sub
sbb
aaa
arpl
lret
push
test
push
iret
into
xchg
sub
mov
dec
call
sbb
cmp
jle
bound
xchg
and
test
and
filds
push
insb
mov
pop
dec
ror
pop
das
leave
xor
add
jbe
inc
adc
jmp
mov
inc
out
dec
adc
inc
int3
xchg
ret
test
clc
cmp
mov
fcoms
out
sbb
in
jge
nop
pop
mov
dec
icebp
adc
subb
ds
data16
in
cmp
aaa
add
adc
fcmove
jno
ljmp
das
push
arpl
xchg
or
int3
dec
imul
jge
xlat
push
test
test
mov
adc
and
mov
xchg
xchg
aaa
adc
add
aaa
movsb
mov
imul
xor
test
or
imul
or
testb
mov
push
das
out
imul
ds
mov
add
jno
scas
lret
lock
or
jl
push
jb
mov
in
scas
sub
pop
es
enter
in
lcall
pop
das
push
arpl
push
ror
scas
stc
orb
jecxz
mov
iret
dec
xchg
scas
jmp
ret
fcoml
aas
jmp
jl
or
or
adc
mov
out
pop
bound
push
int3
xchg
paddq
lods
fyl2xp1
cmp
mov
out
or
mov
out
in
insb
out
inc
inc
bound
xchg
shl
sub
cld
shll
sub
or
dec
push
outsl
mov
dec
sarl
test
add
push
and
ljmp
xor
add
cmp
aam
rep
cmp
or
cmp
in
cmpb
push
jne
ret
jecxz
mov
shrl
ja
or
call
in
or
jo
fmulp
and
mov
xchg
mov
popa
cmp
push
dec
pop
push
push
out
cmp
shll
xchg
idivb
outsl
xchg
jl
mov
insb
and
test
mov
and
lahf
jle
movsb
movsl
mov
insl
mov
repz
div
andl
test
les
push
test
mov
test
hlt
jl
push
xchg
xlat
jo
stos
sbb
das
jb
stos
add
fwait
test
popa
jl
mov
repz
mov
shll
mov
sub
inc
push
dec
hlt
inc
inc
add
adc
popf
or
lock
add
cli
jnp
je
mov
jne
add
xchg
mov
or
mov
dec
or
jle
popf
push
add
sti
jae
pop
negb
xor
or
dec
sub
jle
cmpsl
mov
dec
sub
xchg
or
pop
cld
push
sbb
xchg
xchg
test
js
stc
sub
test
inc
mov
loopne
or
sbb
add
xchg
inc
xlat
xor
and
xor
mov
pop
push
popa
inc
mov
aaa
pop
ret
hlt
sbb
xor
xchg
mov
pop
xchg
pop
pop
mov
xchg
add
mov
inc
xchg
dec
and
and
lret
lods
pop
in
test
test
or
leave
add
xor
pop
or
dec
fadd
inc
pusha
and
push
pop
pop
xchg
and
imul
mov
mov
outsb
jmp
cmp
aaa
xchg
ds
pop
jno
daa
das
or
sahf
in
cmp
and
adc
loopne
sub
mov
arpl
or
xor
adc
xchg
push
js
adc
add
jl
xor
push
and
and
adc
pop
das
out
jge
lods
sub
cld
lcall
xor
mov
jg
lds
scas
repnz
popa
inc
fidivrl
aaa
mov
sub
daa
jns
push
cmpsl
mov
xor
pop
jbe
push
push
dec
and
or
aad
out
out
popf
outsb
mov
push
jae
jg
fstp
aad
adc
lea
add
out
sub
mov
inc
cmpsl
sub
rorb
add
insl
xchg
dec
add
mov
lods
mov
jecxz
shlb
mov
dec
popa
mov
or
pop
clc
bound
mov
push
int3
add
add
lock
fsubrl
pop
jb,pn
jg
push
add
fwait
sub
insb
mov
call
push
and
addr16
arpl
pop
sarb
shrb
mov
lea
cld
cwtl
sub
or
or
call
movsl
in
inc
xor
sarb
insb
add
jg
mov
adc
ds
pop
or
pop
ja
push
mov
icebp
jo
insl
sbb
inc
int3
sbb
xchg
fidivl
in
addr16
lock
orb
inc
mov
mov
fidivrl
nop
cmp
fisubrs
dec
add
mov
into
add
inc
mov
pop
pop
daa
push
push
inc
adcl
gs
push
aam
xchg
sub
int3
or
jl
cwtl
xchg
sub
fcmovne
loopne
adc
pop
call
rcrb
sbb
iret
aam
cmpsl
xlat
ret
fst
cmp
push
dec
cmp
daa
out
jb
cmp
pop
mov
dec
mov
out
in
jo
mov
fidivrl
mov
clc
fcomip
push
fistpll
data16
outsb
cmpsl
mov
xchg
adc
shll
test
testl
daa
pop
sub
clc
loope
adc
or
popa
test
mov
sub
stos
rclb
out
imul
ret
dec
sbb
in
and
inc
in
insb
and
mov
inc
push
in
push
lods
cmp
subb
mov
inc
out
fmul
adc
scas
xchg
fs
into
cmp
sub
out
test
pop
js
and
fdivl
fldl
xor
sub
test
iret
or
push
adc
push
sub
jge
cmpsl
movsl
xor
mov
in
daa
cmp
jno
jge
adc
jge
inc
push
lret
lahf
inc
jns
adc
pop
insl
xchg
jg
push
sbb
iret
je
or
sbb
add
in
das
xor
imul
or
and
cli
sbb
or
mov
xor
add
test
pop
adc
and
push
push
mov
in
mov
lret
jle
bound
cmp
jns
jl
xchg
lods
mov
cmp
sub
fwait
xchg
mov
mov
cmp
gs
popf
xor
cltd
shll
jns
xchg
mov
or
repnz
test
pusha
call
sbb
xchg
add
les
fs
sbb
or
std
pusha
fcmovnu
fidivrs
pavgw
xor
ret
or
icebp
lods
cmp
mov
jae
jno
clc
xchg
cmpsl
adc
ficoml
iret
iret
fcmove
cmpsb
push
jnp
addl
cmpsl
and
and
gs
jne
xor
pop
push
or
cld
push
lock
repnz
pushf
loopne
mov
xor
dec
jb
cltd
xor
in
les
imul
bound
int3
add
fdivrs
fists
pop
lods
or
daa
mov
dec
or
xlat
arpl
mov
or
mov
aad
addr16
cmp
bound
movsl
jae
adc
insl
or
mov
std
in
pop
clc
pop
insb
cmpsl
and
loope
sbb
pusha
mov
sti
cmp
push
fadds
movsb
or
rcrb
mov
mov
xor
lret
imull
test
les
or
and
sbb
cmpsl
mov
rorb
mov
stos
dec
pop
std
rcrb
jmp
dec
lcall
and
or
lea
je
ds
out
mov
mov
sub
lcall
sub
inc
cmp
ss
jnp
popa
cmc
test
das
in
out
xchg
add
lret
outsb
out
test
xchg
dec
pop
xorb
pushf
mov
xchg
pop
add
jg
adc
nop
lods
add
jae
dec
dec
push
xchg
add
scas
sti
push
jae
test
loop
mov
clc
leave
imul
cmpsl
inc
adc
inc
pop
mov
rcrl
mov
jl
test
push
or
push
gs
sub
dec
xchg
imul
and
cmp
aad
int
add
loopne
jp
or
clc
and
int3
cmpsb
mov
dec
scas
jb
cmpsl
jno
jecxz
sub
adc
clc
mov
hlt
pop
pop
xor
outsb
imulb
das
mov
and
xor
movsl
xchg
cmpsl
addr16
pop
jne
pop
ja
sahf
scas
push
pop
mov
fildll
xor
arpl
aaa
adc
mov
test
or
add
push
xchg
stos
bound
and
icebp
gs
xor
lods
or
add
cmp
pusha
pop
push
lea
pop
jge
jb
shlb
mov
insl
clc
arpl
popa
rorl
sub
aam
aas
jo
inc
mov
pop
bound
jge
nop
addr16
mov
sub
or
mov
or
xchg
sub
sub
add
fildl
xor
push
imul
lock
mov
daa
or
pop
jb
push
test
addr16
add
push
jne
and
sbb
dec
pop
pop
pop
fs
pop
mov
xchg
push
out
fldl
jnp
in
sbb
shlb
inc
jp
insb
or
cmp
inc
pop
bound
cmp
cmp
lret
or
add
mov
outsl
push
sbb
out
out
rcrb
push
js
add
xchg
dec
sti
mov
fs
xor
xor
jne
push
icebp
and
daa
movsb
lods
rcll
dec
sub
mov
popf
in
sbb
gs
mov
sub
fwait
clc
sarb
sbb
fisubrs
and
fnclex
jmp
sahf
dec
clc
pop
ret
dec
call
push
sarb
jge
push
fimull
aas
xchg
lods
les
mov
shl
imul
sub
or
pushf
cmp
fs
xor
pop
sbb
cmc
xor
or
push
xchg
test
stos
loope
and
cmp
iret
repnz
push
jmp
jno
test
push
mov
aaa
inc
fidivrl
dec
push
xchg
jae
sub
mov
xor
pop
bound
incl
jmp
testb
pop
ljmp
ss
mov
push
push
mov
ror
sbb
and
in
xor
data16
testl
push
xor
cmp
jbe
sbb
sub
leave
fadds
push
cmp
adc
cmp
mov
fldl
and
mov
lcall
fistpl
iret
dec
add
mov
out
andl
dec
xchg
dec
jecxz
lods
loope
mov
pop
out
adc
xchg
call
lods
fdivrs
jp
adc
or
push
std
fidivrl
cmpsl
adc
lret
mov
push
divl
cmpsl
stos
dec
fimuls
adc
repnz
jb
xchg
daa
aam
inc
add
xor
lds
jp
jecxz
mov
and
adc
sub
sahf
and
mov
xor
jae
fwait
jmp
fmull
aad
jecxz
jp
add
jge
out
jge
and
push
mov
fldt
pop
push
les
ja
scas
rclb
in
daa
lock
jne
or
sbb
lgs
xchg
sub
jg
pop
push
dec
jns
xor
ror
ss
mov
and
mov
or
sub
outsl
jle
je
aam
std
or
inc
xchg
xchg
in
fmuls
jb
test
mov
jb
movsl
lods
pop
stos
imul
lods
add
je
fnop
ljmp
loop
fildl
frstor
xchg
bound
pop
push
or
lods
cmp
fld
stos
test
xchg
aam
fimull
mov
ljmp
xchg
jb
mov
xchg
cmpsl
or
xchg
cmpsl
fmuls
mov
fmulp
fs
sub
in
insl
sub
ret
mov
iret
mov
jl
sbb
cld
push
movsl
stos
loop
mov
loop
lods
mov
pop
pop
dec
or
pop
jbe
sbb
hlt
jle
mov
lods
rcll
inc
mov
in
pop
rcrb
out
adc
push
and
je,pt
scas
and
cld
pop
ret
fistps
xchg
js
pop
int
sbb
xlat
out
outsb
sahf
pushf
xchg
cmpsb
xchg
dec
or
xor
push
xchg
mov
cmp
jmp
lret
mov
inc
movsl
and
dec
mov
aaa
jg
rcrl
mov
sub
arpl
shrl
jle
inc
jno
mov
mov
jb
sub
adc
shl
dec
jo
fidivl
inc
sub
lret
push
out
lock
sbb
and
fcmovnb
pop
pop
inc
dec
xor
sbb
int
jno
lds
mov
lret
rcll
cmp
adc
mov
pop
aam
xor
outsl
sub
insl
xchg
stc
adc
mov
jl
mov
jno
and
cmp
cmp
xchg
and
in
int
ja
sub
inc
leave
call
sbb
ja
scas
adc
out
mov
xor
in
ss
mov
sbb
sahf
les
test
push
mov
std
fcomi
or
outsl
xlat
hlt
rcrl
test
hlt
pop
xchg
add
sbb
mov
xor
cmpsb
mov
fnclex
fmuls
sub
pop
add
test
xor
andl
pop
stc
xchg
movsb
test
or
pop
mov
dec
fldcw
rcrb
xor
jge
sub
xor
pop
dec
fistps
dec
mov
hlt
or
xchg
jns
test
push
fcmovu
jb
mov
adc
sub
outsl
sbb
gs
scas
xlat
insb
pop
push
pusha
add
add
jne
dec
arpl
sbb
jp
or
push
xorb
inc
pop
lods
inc
popa
mov
pop
mov
and
mov
addb
pop
mov
cmp
imull
fisttpl
gs
lock
xchg
sub
mov
movl
lds
or
in
flds
das
jne
aam
mul
cmp
stc
cs
out
jle
cmp
scas
jle
bound
jl
mov
lea
iret
mov
mov
adc
test
stos
gs
and
movsl
dec
lahf
andl
pop
push
pop
outsl
lahf
adc
je
add
faddl
lea
jne
jmp
xor
cmp
sub
and
push
jne
mov
jae
xchg
cmpsl
mov
adc
mov
and
hlt
push
or
out
insb
xor
mov
lods
outsb
add
pop
or
xor
dec
pop
movsb
mov
pop
sub
add
test
dec
lret
popf
adc
sti
mov
adc
pop
xor
outsl
or
push
fimuls
jno
or
push
push
adc
cmp
jle
sbb
push
in
mov
loop
sub
dec
adc
aaa
lods
aas
sub
sbb
insl
sbb
ja
mov
add
leave
mov
fistl
aaa
mov
lret
add
test
lds
addr16
addr16
pop
inc
xchg
jne
add
xchg
das
jmp
inc
shrd
shlb
imul
lret
lods
movsl
out
aad
daa
mov
inc
sub
cmp
pop
xchg
pop
mov
xchg
sbb
mov
imul
mov
sub
int
flds
add
or
test
das
inc
arpl
mov
imul
or
jp
or
and
sub
sarb
dec
push
sbb
and
mov
mov
sub
jp
jae
add
sub
pop
hlt
mov
aad
or
daa
dec
push
pop
jg,pt
lcall
xor
stos
filds
or
shlb
sbb
jno
xor
and
lock
pop
ljmp
test
xor
cmpsl
lds
leave
test
fwait
shll
sbb
nop
push
je
jbe
pop
jle
sbb
bound
fcompl
push
movsb
lods
xchg
mov
mov
sub
dec
sub
mov
nop
leave
inc
hlt
cmp
xchg
mov
jmp
ret
inc
dec
les
lret
or
sub
cmpsl
jnp
lock
or
jne
add
push
lret
adc
push
repz
xlat
add
push
icebp
aaa
cmp
jl
int3
scas
xchg
mov
push
inc
push
inc
and
loope
push
pop
outsl
pop
pop
mov
das
js
fimull
xor
pusha
stos
jno
lcall
fdivrl
mov
in
lahf
lods
fisubrl
popa
mov
dec
lahf
push
sbb
inc
inc
pusha
ret
scas
mov
push
inc
clc
scas
testl
insb
inc
dec
sahf
mov
mov
xchg
shll
sbb
pop
mov
push
shrb
push
insl
push
or
stc
popf
lds
mov
cmp
mov
dec
and
xor
fistl
and
popa
scas
pop
sub
xchg
pop
jne
push
aad
stos
pop
sbb
inc
lret
xchg
rcl
jae
mov
dec
notl
shlb
in
scas
sbb
sbb
shlb
jge
or
lea
and
push
insl
jge
jno
fbld
fwait
fwait
xchg
dec
cmp
jb
mov
cmp
pop
scas
gs
fwait
test
test
outsl
cli
cltd
add
stos
insl
mov
mov
mov
cltd
outsl
and
sub
add
dec
xor
cmp
into
test
test
or
mov
mov
push
int3
cmpl
pop
mov
test
xchg
jle
iret
sub
sbb
add
popf
packuswb
je
ljmp
loope
adc
jne
cmpsb
data16
int
sub
movl
bound
fs
into
aas
in
mov
push
pop
xor
imul
xchg
xchg
jne
jb
fsubl
adc
dec
imul
pushf
ja
pushf
xchg
shlb
pop
mov
mov
into
mov
inc
movsl
addr16
mov
or
dec
je
mov
ds
jne
fs
lods
rol
xor
xchg
inc
add
aas
pushf
gs
gs
flds
fmulp
cmpsl
into
pusha
jb
fs
loope
add
mov
jo
mov
pop
fadds
pop
gs
sbbl
push
jne
popa
jge
andb
stos
out
jecxz
adc
push
mov
das
pop
mov
xchg
int
push
mov
outsb
jg
shr
or
and
inc
add
in
adc
or
rorl
push
popa
std
into
fmull
inc
push
pop
dec
push
or
cmc
or
mov
or
fwait
pop
mov
cmp
add
imul
and
jnp
xor
hlt
out
cmp
sbb
xor
pop
lret
inc
dec
notl
adc
scas
xor
add
jmp
jno
sbb
mov
mov
out
pop
shll
imul
pop
mov
and
add
lds
and
push
and
dec
bound
add
daa
stos
add
inc
sbb
xchg
jbe
xchg
shll
gs
cmp
push
jb
ret
pop
sahf
in
jo
push
popf
out
mov
sbb
or
rcl
add
inc
lcall
movsb
mov
in
add
fisubrl
movsl
in
adc
inc
repz
xor
adc
adc
jns
or
int3
push
test
rcrl
outsl
in
add
ret
insl
xchg
mov
rolb
mov
sub
push
or
pop
popa
cltd
jb
cli
arpl
lods
mov
gs
jb
pusha
pop
popf
push
outsl
int
dec
and
sahf
pop
decl
sub
cmc
int3
push
testl
imul
dec
adc
push
xchg
hlt
roll
xor
aam
bound
mov
or
push
addr16
mov
jle
std
movsl
xchg
xchg
gs
stos
cmp
mov
jo
or
ljmp
fisubrl
movsb
addr16
jle
fists
pop
sub
xor
in
cmp
and
push
push
or
mov
dec
sbb
dec
popf
cli
mov
jb
dec
mov
mov
mov
dec
xor
xor
out
mov
fstpl
scas
out
inc
js
jne
insl
fnsave
loope
popa
add
stos
insl
push
or
xor
out
pop
pop
insb
inc
mov
xor
xchg
push
lcall
adc
jge
dec
repnz
adc
in
adc
outsb
add
std
push
dec
pop
data16
aaa
das
and
outsl
xor
out
cmp
or
jl
cmp
movsl
lea
xor
gs
mov
push
lods
cmpsl
mov
xlat
fsubs
jb
sarl
idiv
ss
hlt
imul
dec
or
push
fists
jl
faddl
add
lcall
imul
mov
outsb
mov
in
cmp
mov
repnz
mov
adc
cmpsl
imul
clc
and
pop
cmc
mov
mov
mov
stos
dec
addr16
dec
adc
in
cltd
push
pop
std
adc
out
inc
sbb
jge
jle
into
jecxz
dec
lcall
push
mull
xchg
mov
pushl
into
sub
xchg
inc
push
test
cmp
daa
sub
shr
pusha
in
loopne
xchg
rcrl
sub
lods
xchg
or
jmp
push
invd
push
test
fidivrl
or
cmp
enter
je
mov
jno
cmp
pop
pop
arpl
sbb
gs
push
jne
faddp
fsubrl
mov
mov
jne
sub
push
arpl
ds
sbb
jae
lea
adc
lret
lahf
lods
jl
pop
sub
jecxz
daa
movsb
mov
cmp
gs
mov
add
xor
sbb
je
mov
ret
mov
addr16
aad
je
sbb
aas
dec
cltd
incb
scas
jg
pop
xchg
mov
addr16
pop
fcompl
mov
iret
sbb
dec
clc
adc
jb
and
or
xchg
shrb
js
push
inc
sbb
inc
popf
mov
jb
addr16
pop
popa
push
xor
xchg
lods
rolb
xchg
mov
mov
test
testb
jne
call
bound
out
adc
pop
xchg
inc
call
jle
mov
or
or
icebp
fs
fidivrs
mov
mov
fildl
jg
insb
popa
sbb
ljmp
sbb
or
gs
add
adc
mov
inc
add
arpl
aaa
xor
std
mov
ret
das
push
das
test
mov
mov
dec
lods
daa
mov
xchg
cltd
das
xchg
bound
hlt
test
lea
out
xchg
xor
test
xchg
popa
lods
bound
pop
xor
inc
sub
mov
dec
inc
and
jl
movsb
outsl
int
mov
mov
or
dec
lsl
or
arpl
es
dec
cmp
icebp
enter
rcll
in
loopne
ficomps
mov
jge
push
push
rcrl
jg
test
aaa
cmp
jns
popa
xchg
enter
rcrb
lret
stos
add
idivb
ficoms
movsl
jmp
add
jns
sbb
ret
mov
or
loope
adc
mov
shlb
jmp
mov
push
or
lahf
xlat
add
jp
daa
push
sub
in
sbb
push
lock
sub
insb
lods
inc
shll
cmp
aaa
lock
stos
call
sub
xlat
mov
loope
imul
aam
ret
je
sub
fwait
jb
push
push
iret
adc
xor
sbb
js
xchg
fsub
in
sbb
addr16
rcrb
lea
cmp
mov
in
xchg
sbb
cwtl
mov
bound
pop
mov
fwait
cmp
mov
xchg
sub
inc
insl
xchg
cmp
ficomps
mov
lcall
and
mov
frstor
shll
dec
out
ficoms
and
xor
xchg
lahf
inc
shld
dec
arpl
sub
cld
mov
enter
pop
mov
mov
pop
mov
jg
mov
sbb
icebp
hlt
inc
mov
mov
fiadds
bound
hlt
mov
cmp
adc
cmp
sub
and
ljmp
insl
mov
mov
xchg
rorb
in
fisubrs
mov
xor
mov
push
mov
aas
gs
xor
sbb
cmp
jb
loope
adc
scas
jle
sbb
xchg
jl
out
hlt
lret
push
shrl
add
daa
jle
cmp
pop
xchg
mov
or
or
or
add
std
mov
out
push
inc
lock
popa
sub
insl
mov
mov
cmp
mov
add
pop
out
add
aaa
int3
sub
sub
cmp
loop
sub
push
lods
mov
jge
enter
movsb
scas
scas
iret
pop
out
lea
mov
cwtl
lds
xor
jle
mov
mov
jno
or
bound
add
insl
mov
jmp
cmc
or
in
cld
shlb
xor
out
movsb
push
clc
testl
cmp
xchg
cmp
jecxz
push
adc
scas
inc
mov
mov
ljmp
pop
inc
std
bound
push
dec
jmp
decl
sbb
lea
lods
daa
sub
inc
sub
inc
push
arpl
push
xchg
insl
hlt
cmc
xlat
and
and
push
in
dec
sub
xor
fwait
mov
dec
push
ljmp
mov
dec
jns
pusha
loopne
outsb
and
and
sbbl
mov
push
int3
mov
lret
std
inc
sub
insb
mov
or
dec
lea
arpl
cmp
aas
cmp
adc
jg
cmp
xchg
fsubrs
pusha
sbb
or
lea
adc
cmp
into
ss
pop
sbb
inc
push
and
popa
pop
xor
or
cmpsl
mov
inc
gs
imul
add
or
jno
add
out
add
mov
mov
in
es
adc
sub
gs
dec
mov
das
int3
jbe
jg
cmpsl
out
mov
stos
shlb
imul
int3
xor
jno
sbb
movsb
cmp
repnz
imul
in
test
add
add
clc
xor
nop
xor
lock
mov
mov
movsl
push
dec
push
mov
inc
iret
and
xchg
in
cld
cli
xor
mov
and
hlt
adc
std
aas
adc
add
jle
imul
sti
fildll
push
sub
aaa
cmpsl
xchg
or
repnz
push
jecxz
sub
les
fbstp
cmp
gs
test
popf
jmp
repnz
cli
xchg
movsb
bound
fdivs
lea
add
xchg
jno
fs
inc
xchg
stos
and
mov
and
push
mov
fdivrs
pop
je
cmpsb
fcoml
mov
fs
fcom
lea
add
mov
syscall
or
lcall
outsb
and
imul
xchg
scas
jbe
in
or
cltd
repz
add
jecxz
mov
sti
mov
fidivl
dec
iret
adc
adcl
int
aad
or
mov
jne
pop
iret
icebp
dec
mov
push
jp
push
sbb
fadd
in
jge
lock
movsl
xchg
push
cmpsl
sub
push
mov
mov
aad
push
push
scas
or
sbb
push
lea
jp
stos
or
lea
dec
fucom
or
xchg
and
pop
sbb
sub
push
mov
dec
jmp
jg
push
cld
mov
dec
leave
mov
sbb
cmc
mov
or
js
mov
and
lods
mov
jle
fistpl
mov
jb
push
xor
sub
outsl
lret
popa
dec
sub
push
push
push
and
jb
mov
push
test
or
jp
jge
or
cmpsl
and
mov
mov
lods
pop
jae
sbb
mov
ds
lods
jnp
cmp
and
hlt
jae
cld
mov
mov
add
add
stos
xor
xor
lcall
mov
dec
xchg
lret
lahf
lods
mov
mov
sbb
dec
addr16
add
push
test
ficoms
adc
lea
inc
sub
sub
stos
push
stc
pusha
aad
dec
adcl
bound
rcr
cli
scas
dec
subl
cmp
out
dec
lea
inc
cmpsl
pop
sub
inc
add
xchg
xchg
jle
ss
and
sub
aaa
ret
push
pop
pop
or
sbb
adc
sub
stos
insb
push
or
lods
call
les
dec
pop
das
sub
and
stc
mov
sti
rorb
fwait
or
loop
mov
add
or
push
test
lock
inc
and
or
aad
fdivs
jge
inc
test
xchg
xchg
jo
xchg
cs
fstp
add
scas
push
ja
add
xlat
dec
insl
push
push
aas
movsb
push
pop
xchg
lea
out
lcall
outsl
push
scas
pop
rcl
and
push
jne
cmp
std
cmpsl
pop
ja
xor
mov
dec
lock
mul
jns
sahf
jecxz
jno
and
jl
roll
adc
nop
aaa
cmp
dec
xor
out
and
lea
loop
add
test
movsl
cmp
xchg
mov
mov
jmp
mov
sub
mov
lods
dec
cmp
pop
int
bound
or
sbb
lea
cmpsl
mov
and
pop
or
inc
in
lcall
insb
mov
int
add
adc
into
out
subl
dec
pop
xor
lods
dec
add
push
xchg
cltd
cmp
inc
aam
ds
adc
arpl
dec
int
fldln2
popf
inc
scas
or
or
mov
cmpsl
mov
fiaddl
out
fnsave
iret
ret
inc
sub
adc
pop
jae
mov
imul
inc
hlt
adc
out
jns
xchg
dec
add
call
adc
or
push
gs
in
mov
mov
jbe
mov
ds
aaa
or
push
lods
out
imul
arpl
or
inc
xor
add
add
popf
cmp
fdivs
ja
imul
aam
cmp
stos
test
int
cli
pop
das
cmpsb
lods
data16
mov
ret
sub
testl
rorb
dec
sahf
push
out
and
add
inc
push
nop
stos
adc
xchg
jl
rorl
fisttps
loopne
cltd
xlat
lods
lock
pop
dec
push
mov
outsl
cmp
arpl
insl
cmp
test
nop
das
push
lods
repz
loope
or
mov
stc
pop
lods
push
or
or
sbb
or
adc
popa
psubsb
ret
cmp
orl
in
and
sub
aaa
xor
xchg
int3
popa
fimull
rcrl
sbb
loope
cmp
movb
mov
dec
repz
xchg
jne
arpl
jno
ret
shll
xchg
iret
and
cld
mov
gs
or
cmp
in
lahf
roll
imull
gs
insl
mov
cmp
push
out
or
mov
push
jne
scas
out
mov
xchg
rcr
cli
mov
scas
je
inc
movsl
mov
iret
popa
add
dec
lret
insb
bound
push
mov
sub
aad
addr16
cwtl
xchg
mov
imul
sbb
mov
push
lods
outsb
lea
pop
outsl
or
into
fcoms
xor
cmp
sub
mov
hlt
jb
pop
jno
gs
movsb
xor
inc
cmpsl
cmp
cmp
jb
add
or
int
push
mov
cmc
push
lcall
daa
testb
jno
add
pop
rclb
mov
in
insl
sub
out
ds
in
jns
dec
sbb
stos
or
mov
movsl
aas
pop
or
xlat
sub
pop
das
fcmovbe
jo
mov
and
jno
sbb
loopne
inc
icebp
scas
inc
enter
std
imul
lods
add
pop
mov
stc
test
in
out
pop
cltd
jo
and
sub
aad
xor
lods
dec
push
dec
movsb
xchg
rclb
sub
xor
xchg
enter
daa
movsb
popa
and
mov
and
repnz
insb
loop
pop
jae
jg
testb
mov
repz
and
call
lret
lds
push
xchg
inc
in
mov
repnz
xor
idivb
inc
sti
popf
dec
lea
dec
jle
int
gs
cmpsl
in
lods
lea
push
ljmp
pop
hlt
jecxz
xchg
xchg
lahf
xchg
je
lret
or
mov
mov
scas
or
lahf
aaa
mov
insb
ja
xor
sub
insl
and
lcall
jno
mov
sub
scas
cmp
outsb
decl
fisubrs
jne
adc
hlt
mov
mov
and
xchg
insb
dec
out
arpl
jge
add
cmc
adc
add
insl
sarb
loop
in
jecxz
pop
cmp
cli
inc
fucomp
pop
and
push
inc
mov
int
lea
imul
jmp
push
out
loopne
cli
scas
jle
xchg
mov
loope
xchg
mov
mov
fs
dec
mov
jne
jle
jmp
mov
pop
pop
repz
cmp
sbb
dec
sub
faddp
stc
pop
sbb
xor
and
sub
xchg
inc
pop
clc
cmp
jp
shlb
aam
rcrb
push
ljmp
jns
aas
sbbl
lcall
lcall
dec
push
insl
imul
push
jl
leave
sbb
mov
pop
insb
sbb
xchg
lea
rolb
xchg
cmp
jmp
and
into
fsubrs
dec
push
pushf
fimuls
xchg
xchg
jmp
add
sub
sahf
inc
or
jo
fldt
push
and
xchg
dec
sub
dec
sub
sti
popf
push
jns
adcb
fdivs
push
push
mov
sbb
jbe
xchg
sti
push
lret
xor
sbb
push
cmpb
cmp
or
addr16
jl
sub
mov
pop
and
adc
shlb
push
cmp
add
adcb
arpl
popa
dec
popa
and
das
lret
adc
mov
out
inc
cmp
cmp
popa
xchg
gs
mov
push
in
jle
xchg
sbb
lea
rorb
notb
push
add
cmp
jae
push
cmp
scas
fstl
and
repnz
push
test
adc
imul
insl
pop
or
shrb
sbb
xor
fcoms
aad
push
mov
mov
mov
dec
sub
xchg
hlt
stos
mov
sub
jp
mov
push
test
out
js
inc
lcall
shlb
mov
jb
pop
jae
inc
pop
stc
addr16
mov
mov
mov
cs
mov
lea
sub
out
lret
xchg
xchg
sbb
and
cmpsl
jbe
inc
mov
xorb
mov
or
int
fadds
ds
lahf
scas
mov
push
push
adc
pop
push
push
push
lret
push
inc
sti
mov
jo
cmp
mov
pop
xchg
add
pop
add
notl
jp
mov
xor
clc
cs
push
aaa
xchg
and
inc
ficomps
subb
scas
sbbb
xchg
in
je
movsb
movsb
pop
les
bound
jno
daa
jl
pop
jns
outsb
lea
testl
mov
lahf
fimull
pop
hlt
cmp
pmullw
ja
pop
push
inc
fcmovbe
cmpsb
hlt
push
xor
imul
and
out
lret
fidivrl
clc
imulb
pop
out
test
lret
sbb
je
aas
push
testb
and
mov
or
push
call
pop
cmpsb
pop
ds
dec
je
shlb
xor
sbb
fstpt
out
inc
scas
xchg
imul
xor
arpl
cmp
into
aas
imul
aaa
out
mov
or
lods
mov
fisubrl
test
jl
popa
and
aas
mov
push
jbe
shlb
or
mov
cld
imul
pop
add
lds
inc
and
xchg
mov
orb
rorl
movsb
xchg
cmp
sub
pop
cmpsb
call
sub
or
pop
and
jle
jg
dec
sub
inc
pop
and
imul
cmp
mov
out
cmpb
cwtl
adc
lcall
push
pop
inc
mov
mov
adc
push
sbbb
adc
test
and
push
mov
sahf
aaa
xor
imull
subl
xchg
lcall
mov
xchg
lahf
iret
pop
lea
test
popa
imull
push
lret
jge
insl
das
mov
std
dec
mov
outsl
aad
adc
push
inc
jecxz
add
call
hlt
outsl
out
and
call
inc
sahf
xlat
fcmove
es
leave
sbb
fiaddl
jns
adc
cld
popa
enter
ljmp
cmp
movsb
mov
fbld
sar
inc
lcall
xor
dec
cmp
insb
imul
add
or
cmp
xchg
pop
mov
sbb
jno
xor
lea
aad
bound
adc
mov
ret
mov
adcb
sub
sub
rcll
adc
test
shlb
cld
clc
and
int
cmp
xchg
cmpsl
sub
inc
cs
push
aad
and
lahf
fs
push
in
lcall
or
mov
jno
pop
outsb
pop
adc
xchg
sub
iret
movsl
mov
stc
dec
fiaddl
push
aad
subl
pop
test
and
icebp
lcall
push
std
xor
lret
test
mov
mov
push
aas
cmp
subl
xchg
xchg
add
mov
arpl
jno
inc
mov
xor
add
add
movsb
movsb
scas
xchg
hlt
xor
ljmp
jb,pt
mov
or
mov
jle
js
mov
xor
xor
fsubrl
mov
fwait
xchg
stc
ss
xor
jns
xchg
or
jno
mov
sbb
xchg
cmpsl
inc
cmp
mov
les
fnsetpm(287
or
push
pop
in
push
lods
dec
test
xor
sub
or
test
jg
adc
inc
sub
and
mov
jl
mov
cmc
lods
xor
pusha
out
in
add
pop
cmpsl
sub
addr16
gs
xor
xor
fldt
push
jns
push
cmp
adc
push
mov
lea
scas
and
fistps
hlt
xor
cmpsl
mov
jg
cmpsb
push
cmpsl
cmpsl
popa
xchg
rol
inc
cmp
imul
in
scas
push
cmp
xchg
xchg
adc
pop
jno
jns
addr16
in
xchg
int
pop
inc
andb
mov
cmp
imul
rcl
fistps
jns
out
or
shlb
xchg
mov
xlat
aas
sbb
push
sbb
sbb
xchg
insb
xor
jbe
je
int
pop
pop
addr16
and
int3
sbb
jne
sub
jge
push
sub
adc
imul
clc
repnz
cmp
cltd
aaa
dec
fs
mov
ret
sub
mov
mov
dec
imul
lea
jae
adc
cmp
xchg
jg
push
cmc
stos
adc
pop
pop
dec
int3
adc
pop
movsl
fstl
mov
rcrl
out
push
popa
in
daa
xor
push
mov
lods
sub
cmpb
lea
ds
jmp
sub
pop
pop
outsb
into
nop
loope
insl
loopw
xlat
inc
imul
andb
push
imul
push
add
adc
gs
xor
sbb
mov
jg
int
test
jb
pop
sub
je
rcr
sub
mov
jg
pop
fwait
int
mov
jp
repz
push
mov
mov
or
mov
push
sub
andb
imul
push
mov
add
mov
stc
pop
add
aam
dec
cmp
repz
push
push
jo
cmpsb
sarl
popf
daa
addr16
addr16
xor
lods
xchg
mov
dec
adc
data16
pop
aad
add
andnps
aas
sub
mov
stos
add
inc
sub
pop
clc
cmp
or
int
dec
xchg
xchg
xor
pop
add
mov
ja
xor
or
int3
push
ret
dec
dec
or
int3
mov
dec
int3
out
pop
popa
rorl
push
cmpsl
out
stos
out
xchg
adc
jae
push
add
pop
xor
and
je
sub
in
push
comiss
mov
aaa
dec
mov
or
js
inc
jmp
aaa
xorl
push
clc
and
in
xor
dec
xchg
mov
push
addr16
push
adc
fcomps
sbb
movsb
dec
insb
cmpsb
test
in
xor
movsb
jecxz
jne
inc
scas
lea
mov
in
sbb
add
sub
pusha
nop
imull
aaa
cmp
idiv
mulb
xchg
mov
mov
add
out
adcl
cmp
and
lret
and
jl
lcall
adc
sub
mov
push
jo
add
xchg
repnz
sti
stos
cmpb
out
jecxz
xchg
xchg
jle
or
dec
lods
and
dec
rclb
jno
hlt
lret
test
rol
cld
jnp
sarb
sbbb
mov
push
popf
mov
stos
cmp
or
ja
iret
mov
movsl
inc
cmp
inc
cmp
mov
mov
sti
cmp
test
add
xchg
mov
sub
lea
push
pop
iret
xor
mov
push
xchg
mov
pop
inc
pop
enter
int
clc
pop
imul
fninit
mov
pop
cmp
cmp
sbbl
inc
inc
jns
fsubrs
cltd
movq
pushf
pop
daa
lods
popa
push
orb
pushf
jb
jne
loop
dec
jb
decl
jne
jno
adc
xchg
cli
add
cmp
in
xchg
aaa
cmpsl
imul
ja
sbb
in
sti
cmp
test
aaa
cmpsb
lahf
subl
lret
jbe
lock
aaa
cld
fsubrs
test
ja
test
add
push
stc
mov
adc
lcall
xchg
das
mov
shlb
daa
cmpsl
lret
dec
popf
incl
cs
push
ficoml
and
add
out
test
lds
xchg
stos
cld
dec
xchg
push
shrl
cld
xchg
adc
jle
xlat
iret
add
mov
sbb
das
xchg
and
and
ljmp
fiadds
push
loopne
mov
cmpsl
scas
pop
cmp
jb
dec
in
or
pop
imul
add
inc
idiv
imul
push
mov
aam
mov
xchg
xor
clc
outsl
pop
fsubp
push
jmp
pop
pop
pop
cwtl
sub
loope
lock
lea
xchg
in
cmp
xor
xorb
jp
ret
outsb
pop
mov
popl
movsb
push
idivb
lods
inc
push
cmp
adc
cmp
lods
pop
mov
add
pop
jmp
jge
lret
push
or
rclb
cli
mov
xchg
jge
or
scas
dec
dec
lret
sub
jle
inc
xlat
pop
inc
les
sbb
pop
stc
push
push
cwtl
sub
insl
add
arpl
and
mov
xor
adc
pusha
jl
outsl
dec
iret
popa
shlb
out
out
imul
out
xor
sub
fistpll
je
popf
or
mov
mov
and
lds
cmc
xor
mov
pop
popa
cld
add
dec
and
subl
sub
ret
hlt
cmp
push
jb
jecxz
ret
adc
or
xlat
mov
mov
loopne
lods
push
dec
mov
push
in
adcb
call
cmp
stos
mov
shrb
or
adc
xor
sbb
repnz
mov
push
or
jo
jp
addl
aad
clc
shrb
cltd
push
cld
jb
test
imul
or
mov
mov
cmp
mov
mov
jne
push
or
mov
jns
in
add
or
lods
sarb
push
xlat
fisubl
or
or
cmp
adc
iret
cmp
lret
sub
sub
jb
cmp
bound
cltd
add
dec
mov
sbb
jp
clc
pop
mov
and
mov
xor
outsb
out
aam
test
adc
rorb
mov
push
in
movsb
adc
dec
in
into
add
lods
jb
gs
decl
lahf
jno
daa
out
sub
xchg
insl
hlt
out
push
sbb
jg
mov
lods
stos
pop
and
mov
nop
xor
mov
push
rcr
push
push
ss
cmp
push
or
repnz
inc
pop
ljmp
jb
push
inc
lret
loopne
push
int3
dec
arpl
pop
and
mov
push
andb
push
xchg
sbb
scas
movsb
jbe
mov
dec
enter
xchg
lods
addr16
jb
testl
outsl
cld
dec
push
gs
arpl
daa
scas
shlb
leave
mov
push
mov
mov
rclb
mov
scas
jl
add
pop
push
bound
sbb
mov
je
fsubrl
out
dec
fadds
mov
or
jge
outsl
xor
repz
mov
xchg
into
or
jp
int
fstpt
push
sbb
lret
sub
stos
mov
jne
add
push
mov
mov
outsl
pop
sbb
aad
jge
in
jno
addr16
inc
insb
sbb
jne
pop
addr16
mov
pop
jecxz
mov
and
fwait
lds
xchg
xchg
fcmovu
xor
sbb
imul
mov
xor
arpl
and
push
mov
adc
xor
push
mov
add
pop
jne
or
dec
inc
or
out
cltd
add
bnd
scas
inc
pop
arpl
jae
ret
cmp
sbb
ret
add
inc
into
pop
fiaddl
outsb
mov
adc
insl
mov
popf
je
mov
jne
test
int
call
pop
jecxz
push
insb
mov
lea
push
pop
sub
aaa
in
mov
add
lahf
and
cmpsl
sahf
mov
lods
jecxz
dec
xchg
lock
imul
popa
lea
cmp
cltd
mov
sbb
mov
ds
xor
push
aaa
pop
outsl
call
popf
jmp
bound
nop
fcmovnu
jb
aaa
xchg
in
subb
or
ljmp
jns
adc
imul
aam
mov
push
inc
and
or
test
std
mov
in
es
xchg
inc
aam
into
stos
jne
and
jge
mov
dec
fmulp
cmp
dec
lret
mov
ljmp
shr
jp
subl
subb
add
ds
loop
xchg
push
mov
in
jle
jo
sub
push
mov
pop
outsb
sub
xor
cmpl
popa
xchg
inc
test
mov
sti
add
dec
push
mov
mov
aam
xchg
in
inc
fwait
int
data16
add
xor
out
lds
lret
jae
adcl
int
xchg
bound
cmp
xchg
lret
stc
loope
out
mov
sub
sub
in
add
mov
add
mov
lods
fisttps
push
pop
fistpl
mov
sbb
movsb
jno
test
dec
fidivs
jno
xor
cmp
cmp
popf
or
sbb
imulb
in
dec
ret
ljmp
cmp
add
dec
into
pusha
imul
nop
xchg
cli
idivl
aas
mov
jnp
into
or
and
enter
lods
imul
fldcw
or
jne
mov
xchg
dec
gs
aad
inc
sahf
nop
sub
je
mov
sti
xor
push
inc
push
movsb
les
iret
fsubrp
push
pop
call
jg
lds
xchg
ja
pop
or
or
fcmovnu
push
mov
les
sub
test
cs
or
test
stos
fnstsw
in
mull
pop
xrelease
jbe
arpl
and
or
dec
pop
and
inc
or
pop
dec
scas
repnz
cmpsl
or
das
lea
pop
and
cmp
mov
imul
je
add
mov
dec
fnstsw
inc
jmp
dec
mov
adc
cmp
and
dec
xchg
arpl
mov
addb
int3
or
or
test
hlt
aas
add
jae
cld
sbb
popa
mov
clc
movsl
shl
cmp
jno
pusha
rorb
or
mov
xor
int
dec
enter
fwait
xorl
push
mov
addl
cmp
pop
mov
jb
add
sub
push
repz
xor
mov
test
out
addr16
jno
push
bound
or
mov
loope
jo
push
adc
gs
or
xchg
leave
arpl
hlt
sbbl
jno
shll
rorl
mov
or
cmpsl
cmp
mov
in
lcall
js
xchg
in
jns
popf
out
outsl
popa
lret
cli
sti
mov
mov
fucomip
mov
jl
mov
cld
insl
mov
adc
mov
add
jl
adc
cmpsl
pop
imul
cmp
js
cmpsl
cwtl
xchg
shl
lods
lcall
je
dec
pop
fnstcw
mov
add
sbb
and
stos
stc
pop
dec
in
in
xchg
hlt
aaa
sub
insl
jp
mov
pop
fisubrl
jb
imul
enter
inc
and
testb
insl
mov
lods
or
xchg
lret
insl
out
push
in
or
js
inc
test
insl
int3
or
int3
fldcw
dec
dec
int
fldcw
int
rcl
sub
in
and
fxch
movsl
or
popf
ret
mov
int3
pop
jl
insl
out
addr16
int3
inc
and
push
xchg
das
sbb
and
fldcw
lods
loopne
push
insl
mov
mov
xor
in
and
dec
mov
das
popa
int3
into
cmp
or
rcrb
insb
sub
or
mov
dec
or
mov
test
pop
int3
mov
leave
or
sbb
sub
lods
mov
into
dec
xlat
mov
test
cld
hlt
add
test
xlat
mov
arpl
test
fdivrs
cli
loopne
mov
or
int
dec
daa
leave
pop
pop
out
sub
movaps
lods
int
or
push
xor
lods
push
or
push
pop
roll
dec
push
push
arpl
sbb
test
mov
mov
fadd
cmp
loop
pop
ljmp
in
cs
xor
scas
push
iret
or
and
mov
cmp
sub
enter
cld
mov
cwtl
pop
mov
aaa
pop
jo
jne
or
sub
in
les
pop
shlb
ljmp
xorl
inc
pop
jne
and
dec
scas
dec
mov
fisubrl
add
xchg
xchg
xor
loopne
inc
push
or
movsb
cli
mov
cmp
inc
or
mov
ljmp
mulb
cmp
mov
ret
lods
test
iret
lea
pop
lret
mov
xor
xor
lret
mov
pop
or
jo
cwtl
cmp
add
cwtl
cmp
add
aas
loop
sub
or
and
xchg
out
icebp
shlb
shl
insl
adc
mov
inc
mov
pop
bound
lret
dec
mov
js
cltd
cli
mov
jne
jno
or
incl
mov
in
add
lds
scas
mov
jno
out
in
aaa
inc
cli
gs
dec
mov
rcrl
out
inc
fcmovnbe
sub
push
popa
jmp
lret
jne
lea
idivl
mov
push
xor
ret
inc
sbb
int
xchg
mov
adc
xchg
bound
das
mov
aas
or
out
in
push
arpl
ja
jge
mov
xchg
adc
cmp
and
fs
int
jl
pusha
xchg
mov
jne
sub
insb
adc
push
adc
sti
jo
out
cmpsl
test
idivb
rcll
or
test
mov
xchg
fimull
cmp
mov
ds
data16
jns
mov
out
sarl
arpl
out
into
inc
add
sub
fucomip
pop
cmpsl
int
lahf
mov
pusha
sbb
cmp
sbb
adc
xor
xchg
xor
imul
push
movsb
jp
cld
imul
fcmovu
lea
ds
xchg
push
std
cmp
shrb
gs
fistpl
imul
sti
dec
adc
inc
leave
xchg
jno
iret
fsts
xchg
mov
dec
es
insl
fimull
insl
aaa
out
dec
jnp
bound
imul
or
push
cmp
sub
lea
push
fists
mov
mov
sbb
sub
das
mov
add
popa
and
jnp
or
and
mov
lea
cmp
je
jecxz
iret
mov
and
jo
xchg
add
sub
fcmovbe
jecxz
mov
push
and
pop
outsb
or
xchg
movl
scas
sub
add
push
es
int3
add
mulb
int3
mov
aaa
or
jecxz
mov
fmuls
inc
and
mov
andl
add
popf
rol
fcmovu
lcall
lds
push
repnz
jne
out
mov
dec
fidivrl
outsl
or
loop
jns
fidivrl
insb
cmp
sub
ficomps
cmp
scas
or
daa
pop
jb
jne
in
inc
mov
inc
lret
mov
cmpsb
les
sub
out
lcall
or
mov
or
sbb
pushf
mov
cli
push
int3
sub
push
xchg
in
dec
cmp
jno
inc
jecxz
cmpsl
lds
lahf
scas
cmp
mov
sbb
lea
sub
jg
fs
xchg
in
test
cmpsl
push
cs
addl
loope
ja
jbe
xorb
cs
dec
jge
pushf
mov
cmp
mov
cmp
or
mov
cwtl
in
or
adc
xchg
lock
mov
or
inc
jecxz
ja
add
stos
cmp
lock
lds
clc
cmp
jl
or
shlb
hlt
repnz
inc
movsb
sub
or
xor
pushf
cld
jl
mov
andl
mov
aam
inc
lds
pop
outsb
sub
imul
add
vunpcklpd
paddb
jbe
test
xor
pop
aaa
andl
repz
insb
movsb
cmp
inc
and
lahf
jle
shlb
inc
dec
mov
lcall
aas
data16
insl
in
and
out
lods
sub
pop
inc
psubsw
cmp
das
add
int
add
pop
mov
cmp
sub
sub
mov
lea
in
roll
dec
mov
das
jb
jp
mov
push
into
ffree
sub
fimuls
jge
sub
dec
sub
call
popa
inc
xchg
inc
mov
mov
pusha
insb
mov
dec
mov
inc
mov
inc
inc
cmpsb
xlat
outsl
shrb
sbb
scas
xchg
fwait
and
lock
sarb
cmp
xor
pop
jl
jb
aam
pop
push
mov
and
stos
mov
jae
adc
cmp
sub
into
aas
mov
mov
pop
pop
jo
jle
pop
out
orl
gs
dec
mov
cmp
jne
push
mov
loope
cmp
xor
pop
and
inc
and
xor
aaa
movsb
inc
into
cwtl
jle
push
leave
fbstp
stos
ret
mov
repz
daa
daa
mov
xchg
in
add
call
add
mov
pop
jno
loope
test
xor
testl
sub
icebp
push
je
mov
aaa
in
out
inc
inc
outsb
jno
cmc
xor
pop
in
mov
daa
xchg
add
test
cmp
aad
ss
mov
mov
divb
popa
fbld
cli
cli
mov
push
faddl
inc
jle
fisttps
enter
inc
mov
test
xchg
movb
fwait
jo
sbb
les
cmp
push
cltd
movsl
mov
adcl
add
pop
adc
fcompl
mov
mov
jns
stos
adc
sub
fs
xchg
mov
rcll
cmp
xor
ss
jl
pop
js
jne
addr16
sbb
cli
sbb
lods
pusha
mov
into
mov
xchg
shlb
mull
or
popa
or
sbbl
mov
mov
lahf
push
xchg
dec
out
jo
push
mov
sub
leave
xchg
outsl
jo
adc
popf
stos
xor
imul
jb
mov
mov
dec
xor
movsb
jno
addr16
dec
xchg
xchg
xor
add
pop
fs
dec
mov
addr16
fistpll
cld
mull
xchg
rcll
inc
and
mov
lds
je
push
jecxz
xlat
int
addr16
mov
lods
jne
push
sub
xor
push
cmp
xchg
mov
dec
je
push
js
push
add
cmp
test
nop
sub
add
and
xlat
sbb
out
push
xor
clc
lret
mov
push
mov
xchg
cmp
stos
mov
daa
xchg
ficoms
or
or
xchg
adc
ret
mov
or
push
lahf
ret
dec
push
jg
push
and
or
add
into
add
fwait
mov
aad
pop
dec
sbb
test
addr16
cmpsl
mov
dec
mov
and
cmp
sub
and
inc
ficompl
push
sbb
lahf
dec
jns
cmp
out
insl
shr
ljmp
sbb
lods
pop
sub
loop
xchg
push
adc
rorb
in
add
sub
lods
loop
xchg
sbb
jb
and
add
aad
cld
and
fbstp
clc
dec
xor
addr16
cmovne
or
cwtl
add
jb
xchg
dec
fldt
adc
mov
xchg
cmp
push
sahf
pusha
out
lahf
or
inc
int3
jmp
or
out
sub
loopne
das
push
pop
xchg
shll
fisubrs
lods
jno
sbb
insb
movsl
adc
ja
jne
xlat
pop
and
push
sbb
dec
aaa
cmc
xchg
lods
push
xchg
outsb
lods
or
int3
cld
in
addr16
or
or
adc
lea
cmp
mov
sbb
bound
cmc
mov
or
push
fs
cld
push
mov
sbb
jne
frstor
or
cmpb
xor
pop
jno
andb
dec
inc
ja
lods
mov
adc
jo
iret
mov
hlt
mov
insl
bound
sbb
aas
jmp
pushf
daa
in
pop
push
fwait
push
test
pop
sub
sbb
dec
movsb
addr16
push
or
loopne
insb
jg
out
jo
mov
mov
or
arpl
sarb
adc
push
sub
daa
xor
in
adc
sahf
into
and
ficoml
dec
pop
int
and
insb
jle
sar
jb
jle
jmp
fimull
mov
lds
in
movsb
dec
fsubrs
dec
and
cmpsl
out
xchg
rorb
inc
loopne
and
stos
leave
stc
jne
popa
jnp
push
push
mov
pop
cmp
aam
sbb
xchg
adc
mov
cmp
iret
sub
xchg
pushf
jecxz
cmpsl
lea
xor
lods
in
insl
or
je
int
dec
mov
push
test
lock
out
pop
xchg
loopne
fcmovbe
jge
mov
lea
xor
out
cmp
loopne
cmp
test
pusha
xor
int
loope
dec
pop
adc
sub
jp
fcmovnb
loope
xor
and
fs
and
jno
jecxz
xor
push
in
mov
add
out
shll
xor
add
outsl
jge
popa
pop
mov
sbbl
leave
mov
addr16
mov
in
xor
and
hlt
shlb
sbb
mov
mov
ljmp
mov
mov
lods
pop
jge
aam
xchg
xchg
inc
aaa
arpl
push
inc
mov
aaa
xchg
add
inc
push
jl
test
mov
lods
jge
add
bound
fucomp
dec
xchg
das
das
insl
jne
in
ret
push
mov
pop
lcall
cmp
cmc
cmpsl
jmp
inc
push
adc
push
add
xor
add
dec
sbb
push
jno
aas
jae
std
gs
push
sub
dec
cmp
hlt
mov
and
sbb
cs
lret
test
into
adc
inc
sub
sub
lock
adc
mov
and
cmp
mov
xchg
lds
ret
or
out
je
xchg
pop
sbbl
fldt
sub
stos
enter
or
push
sub
adc
pop
or
cmp
push
jge
aas
popf
inc
xchg
mov
jno
xor
icebp
stos
in
xor
mov
insl
jmp
in
pop
inc
fcmovnb
or
push
jne
lock
inc
lea
push
rcr
faddl
mov
sbb
or
arpl
mov
jb
mov
mov
loop
lea
mov
jb
xchg
repz
shll
aaa
jb
cmc
sbbb
pop
jge
aaa
xchg
call
mov
adc
adc
dec
jl
outsl
pop
xchg
fcoml
insl
push
ja
ret
jb
jle
mov
fnstenv
adc
dec
jae
sub
push
jb
add
ficomps
mov
add
cld
add
add
inc
mov
add
fcomps
or
cmp
mov
xchg
mov
push
clc
rcrl
arpl
push
mov
and
mov
mov
dec
movsb
jp
sbb
mov
cmp
insb
lock
inc
sub
lods
sbb
mov
dec
cmc
pop
sub
popa
push
mov
popa
push
xlat
cmc
jne
insl
cmpsb
daa
aas
cmp
xchg
cmp
sbb
orb
push
in
fnsave
fbstp
add
pop
popa
and
adc
mov
adc
push
cwtl
pop
testl
jb
inc
push
cmpsl
jle
xchg
mov
xlat
imul
or
xor
xor
xor
adc
mov
testl
mov
mov
iret
cmc
jno
bnd
flds
mov
loop
add
loopne
mov
lahf
cld
aam
cmpl
pop
cmp
cmp
test
insl
sbb
in
and
xor
stos
pop
xchg
daa
inc
iret
shlb
movsb
lea
cs
sub
dec
mov
stos
and
or
xchg
jae
ficoml
xchg
outsl
outsl
pop
jecxz
inc
jmp
push
adc
out
fcmovb
xchg
sub
inc
mov
xor
cmc
push
jne
jle
movsb
sub
divb
and
fbstp
xchg
ljmp
cli
ds
jmp
mov
xor
dec
repnz
stos
or
pop
divb
fsubr
jne
adc
outsl
leave
mov
aas
mov
xor
cmc
fstl
fisubrl
and
cmpsb
mov
call
xchg
stc
sbb
or
add
inc
inc
push
jle
les
mov
pop
add
iret
lahf
or
popf
add
out
lret
jno
vandps
jl
push
divb
ret
inc
jo
lret
sbb
pop
jge
stos
mov
fs
lahf
sbb
mov
loope
shlb
xchg
xor
insl
or
jb
xor
and
sbb
stc
mov
aaa
sbb
outsb
rorl
mov
mov
stos
inc
adc
jecxz
leave
pop
mov
jae
in
std
or
jb
das
insb
lcall
mov
movsl
int3
adc
pop
rcrl
jle
out
sbb
dec
fwait
scas
int
or
out
inc
xor
push
pop
gs
cltd
mov
pop
sbb
xchg
push
add
mov
aaa
arpl
fcmovbe
pop
out
xchg
mov
pop
inc
cmp
bound
lahf
cmc
add
or
fstp
fimuls
daa
sub
pop
push
lcall
dec
daa
and
out
in
xor
and
out
sbb
ja
bound
mov
in
into
mov
mov
fcmovbe
adc
in
cli
and
fsubl
inc
xor
sbbb
jns
nop
ret
or
push
nop
aad
sbb
test
in
adc
cltd
jno
das
xor
incl
and
xchg
cmp
insl
out
aas
int3
out
insb
mov
clc
or
mov
pop
pop
push
shl
adc
in
jb
mov
sub
loop
jae
test
sub
aas
iret
cmpsl
fnstcw
inc
ret
jle
aas
mov
ljmp
jne
cmpsb
sbb
or
psubw
add
jne
inc
loopne
cs
push
dec
andl
mov
shlb
cld
sbb
adc
dec
mov
mov
faddl
add
or
das
sub
xor
or
outsb
cmp
mov
fmuls
lret
jae
sub
popa
mov
xlat
call
notl
outsl
mov
mov
cmp
ud0
insb
inc
hlt
inc
cmc
in
pop
mov
pop
and
adc
cmc
movsl
in
and
mov
out
cli
jl
idivl
jg
dec
addb
stos
jp
xor
jbe
cmpsl
and
jb
lds
sbb
out
adc
mov
fimull
test
xchg
cltd
jb
ficoml
nop
or
call
or
jb
mov
and
gs
popa
es
sbb
mov
cmp
fdivs
fstpt
or
sub
out
lods
lahf
imul
add
lods
add
loope
jg
js
imul
subl
add
xchg
hlt
push
ds
jp
xchg
pop
add
mov
push
pop
mov
cld
ljmp
fstpl
sti
shrb
rcrl
loopne
jmp
pop
mov
jae
clc
dec
mov
xchg
dec
cmpsl
bound
xor
mov
xchg
imul
sub
std
push
int3
les
sub
add
mov
push
pop
lahf
leave
loop
and
mov
sub
xor
outsb
and
imul
mov
or
mov
daa
loop
pop
cmp
adc
xor
mov
sbb
xchg
les
xchg
jmp
mov
mov
pop
sbb
and
clc
jge
stos
popa
arpl
xchg
ja
mov
lret
mov
clc
cmc
cmp
xchg
popa
sbb
push
gs
cs
cmp
in
movsl
in
mov
mov
data16
subb
int3
or
push
bound
and
les
ret
sbbl
mov
push
daa
push
xor
mov
sbb
repz
jmp
stos
inc
push
xchg
aam
jae
das
int3
mov
jne
xchg
sub
sbb
push
dec
popa
scas
adc
xlat
repz
push
mov
imul
stos
bound
loope
frstor
movsl
pop
repnz
dec
or
mov
mov
cmp
cmp
das
popl
lds
cmc
pop
push
push
push
fidivrl
cmp
sbb
fwait
icebp
div
das
mov
subb
and
dec
test
jp
daa
fsqrt
mov
fimuls
rcl
popa
or
and
out
inc
daa
fmuls
jbe
mov
xor
ret
inc
dec
cli
sub
dec
pusha
jno
gs
aaa
popa
pop
addr16
push
dec
sbb
sub
or
sbb
rcrl
jp
sti
and
sar
and
stos
cmp
and
mov
mov
mov
stc
mov
in
pop
rolb
ljmp
jg
add
lods
fldl
imul
es
in
sub
sbb
int3
imul
aad
adc
scas
bnd
xchg
or
cmp
adc
aaa
sub
pop
fbld
pop
rolb
test
mov
push
aaa
sub
bound
push
dec
adc
pusha
lods
xlat
pop
jno
cld
cmp
xor
or
sub
xchg
push
in
mov
jb
adc
fcmove
lods
inc
daa
mov
mov
add
fldcw
inc
int
popl
mov
in
sarb
xor
aaa
xchg
std
daa
xor
and
flds
add
pop
pop
mov
popa
cmpl
mov
repz
aam
cmc
xchg
sub
aas
test
adc
or
cld
dec
mov
shll
je
lcall
xlat
orl
sub
inc
mov
cmpsl
inc
xchg
xor
loop
sti
and
jmp
add
rcrb
test
jg
gs
sbb
into
daa
mov
and
lahf
xor
ja
push
outsb
insb
das
in
inc
mov
lods
aad
cli
sub
inc
arpl
popf
shrb
add
sub
and
fidivrl
add
in
insb
dec
lcall
and
mov
fwait
sbb
jbe
inc
adc
push
inc
and
jbe
sahf
aas
fimuls
and
fucomi
lods
add
sub
shl
pop
or
sub
and
xchg
jmp
xor
mov
cmp
jp
xchg
or
bound
jno
inc
call
push
pop
xchg
mov
aaa
imul
adc
stos
cmp
push
rcrl
fcmovne
adc
loopne
rcl
mov
add
popa
mov
or
fisubrl
sub
dec
sbb
aad
int
add
mov
and
xor
sbb
fidivrl
xor
cmp
xchg
or
fisubrl
mov
xchg
es
lcall
sub
sub
daa
punpckhdq
lods
or
and
inc
dec
xchg
movsb
xchg
gs
xchg
sub
jmp
and
xor
aas
dec
or
jo
insb
mov
mov
add
sub
out
mov
xlat
fldt
loop
dec
fistl
xchg
lret
arpl
push
or
sub
jge
hlt
xor
push
stos
adc
push
andb
mov
mov
fmulp
pop
push
pop
dec
push
cmp
call
das
and
dec
sub
dec
in
push
loop
mov
jne
popa
jbe
int3
adc
and
sub
cmpsl
jae
aas
or
pop
mov
cmp
mov
decl
popa
push
leave
sub
pop
inc
sbb
xor
rclb
cmp
mov
push
cld
adc
call
xchg
mov
repz
das
cli
sahf
das
shufps
lcall
push
mov
call
fdivl
inc
mov
mov
pop
sub
add
imul
sbb
cmp
repz
lcall
aaa
mov
ljmp
lcall
adc
sbb
call
test
pop
daa
mov
cmp
sub
call
push
dec
cmp
in
sub
lods
jg
sarl
call
ja
pop
push
insb
mov
xchg
pop
insb
loope
cmp
jge
mov
mov
loop
test
sbbl
repz
pop
leave
jne
and
adc
lahf
fdivl
mov
sub
mov
or
jno
xchg
xchg
push
and
int
cltd
repz
fwait
insl
enter
iret
in
lods
mov
ljmp
and
inc
mov
dec
negl
sqrtps
outsb
fiadds
xor
incl
lcall
call
stos
lahf
test
adc
push
jne
outsb
movb
test
imul
pop
sbb
popa
xchg
sarl
or
xor
jmp
or
ljmp
pop
add
push
dec
mov
mov
mov
inc
je
int
cs
adc
xor
imul
xlat
lock
test
iret
or
and
lods
and
sbb
insl
test
int
repz
jp
push
xor
aas
mov
rorl
inc
enter
jno
jecxz
inc
mov
sbb
fisubrs
pushf
jnp
out
jge
jb
int3
divl
pop
mov
addr16
inc
in
and
and
pop
cmpb
cmp
add
lret
jae
or
leave
dec
or
pushf
daa
call
mov
xchg
gs
jbe
pop
add
out
xchg
arpl
xchg
inc
int3
cmp
dec
sub
adc
test
and
mov
lea
dec
scas
mov
aas
inc
mov
inc
js
imull
adc
shrl
in
lds
in
xchg
pop
jne
mov
xlat
das
cmp
adc
jb
jne
outsl
pop
pop
adc
scas
int3
test
pop
mov
sub
sub
lods
out
outsl
sub
sub
or
fidivl
add
push
fsubrs
out
adc
ljmp
inc
dec
mov
into
lods
xchg
lcall
popa
xor
daa
and
cmp
enter
xor
mov
cmp
loop
insl
jle
xchg
loopne
xor
and
insl
sub
xchg
push
leave
insl
lea
cmp
sub
cwtl
xchg
xor
jne
jae
jg
jle
cmp
rcrl
xor
sbb
dec
mov
out
mov
adc
add
or
sbbl
lock
lock
or
mov
sub
pop
loope
inc
rorb
and
setb
or
or
mov
dec
loope
imul
pop
cs
lods
sub
loopne
xor
xlat
out
and
xchg
jae
popf
insl
addb
push
pop
xchg
inc
call
pop
incb
icebp
fwait
dec
or
in
dec
scas
cmp
jle
mull
pop
ja
lods
stos
cmp
and
and
xor
fcomps
cmp
shrb
or
mov
adc
insb
jae
cmp
sub
imul
int
movsl
and
add
shlb
xchg
mov
hlt
push
xlat
mov
jno
jg
pop
call
fwait
inc
sarl
aad
mov
add
popf
das
lea
and
add
outsb
cmp
add
insl
or
inc
aam
adc
mov
pop
mov
and
pop
mov
and
cmp
lods
cmp
call
sub
jno
lock
mov
jge
jl
loope
mov
mov
mov
aaa
sbb
or
push
sbb
inc
and
out
outsb
inc
in
cmp
jns
ja
insb
pop
pop
inc
into
jns
and
cld
xchg
mov
xchg
jne
add
cmp
adc
popf
or
add
push
mov
arpl
lea
sbb
clc
pop
inc
add
popf
pop
stos
xor
popf
sbbl
addr16
mov
imul
jge
jmp
lea
bound
jbe
fdivs
xor
enter
xor
mov
pop
das
pop
jg
sub
jnp
repnz
sub
jne
xchg
sub
cwtl
sub
jecxz
sbb
or
adc
cmpsb
insb
adc
or
xor
xchg
cmp
test
fsts
push
insl
std
or
and
popf
dec
mov
shlb
daa
pop
out
xlat
iret
roll
jg
stos
xchg
aaa
or
or
and
jae
mov
pop
xchg
out
inc
les
push
pusha
dec
sbb
jecxz
or
jb
ja
cli
popa
mov
jae
xchg
or
dec
cmc
inc
fldl
mov
jb
cmpsl
pop
dec
in
inc
aam
das
sub
or
sbb
mov
in
mov
movsb
fucomi
je
fucomip
xorb
stos
sbb
xchg
pop
mov
and
iret
gs
es
daa
out
mov
xchg
xchg
sarb
cmp
push
mov
push
test
jle
gs
jb
or
movsb
mov
push
and
rorl
inc
jno
sti
adc
lret
lea
stos
add
lds
ror
pop
inc
cld
sbb
sarb
fwait
inc
lods
sbb
xor
push
int
or
ljmp
add
iret
and
ljmp
popa
inc
xchg
sbb
xchg
mov
pop
or
lds
aad
stc
xchg
dec
pop
dec
jge
or
sti
jns
ja
push
or
jmp
mov
add
shll
or
sbb
dec
add
stos
popa
mov
sbb
push
fidivrl
into
mov
or
mov
int3
pushf
push
push
fwait
dec
fildll
adc
jno
jge
bound
xor
setl
add
in
mov
repz
jp
mov
enter
jg
push
inc
push
mov
setae
les
in
mov
je
push
cmpsl
mov
push
or
mov
popa
movsl
shll
iret
pop
in
add
out
test
test
sub
dec
mov
pop
clc
mov
lea
ret
sbb
std
jecxz
fmull
je
xor
adc
adc
xchg
movsl
or
cmp
fiaddl
addr16
dec
jae
rcrb
ret
jmp
mov
mov
mov
pushf
cld
xchg
popf
fistpll
outsb
rorb
stos
fldt
lahf
icebp
sti
test
mov
out
lahf
aad
cmp
cltd
inc
leave
xor
outsl
in
pop
mov
cltd
jmp
test
adc
jns
fisubrl
push
mov
sub
frstor
dec
ds
sub
jnp
sarb
sbb
int
pop
test
jecxz
lds
sbb
test
and
out
mov
fidivrl
addb
lcall
push
ret
ss
pop
rcr
subps
pusha
scas
ljmp
shlb
xor
shll
movsl
dec
push
imul
xchg
ss
pop
dec
xor
in
jo
into
mov
xchg
or
fwait
push
in
mov
pop
out
sbb
les
adcb
repnz
pop
jnp
mov
and
xchg
bnd
shr
jle
call
sbb
jg
jecxz
pusha
sahf
out
repnz
aas
dec
test
loope
sub
in
mov
bndldx
stos
inc
in
add
aad
cmpsb
adc
insl
in
mov
pop
add
push
mov
div
imul
hlt
imul
idivw
mov
sarb
hlt
cmp
mov
pop
mov
dec
fsubl
aas
mov
lods
sbb
xchg
in
pop
fwait
insl
jb
xor
movsl
cmp
adc
movsl
xor
ja
mov
shlb
and
jns
mov
test
and
mov
test
das
pop
bound
jg
adc
or
pop
or
test
clc
add
or
cmpsb
add
jge
in
add
sbb
and
sbb
xchg
cmc
dec
cmp
aad
lods
mov
xor
cmpsl
lea
xor
repnz
les
mov
lods
insl
push
stos
lds
xchg
push
pop
jns
ljmp
aas
add
cld
sub
lods
fnsetpm(287
pop
imul
sub
fstpl
xchg
dec
and
xchg
pop
jnp
scas
mov
and
repz
ds
cmp
xchg
sub
lds
xchg
inc
pop
and
or
test
sahf
pop
mov
daa
lret
test
insl
shll
test
mov
ja
cmpsl
xlat
pop
dec
push
inc
int
jns
imul
sub
push
movsl
pop
or
addr16
pop
add
loop
pop
scas
inc
jge
popa
pusha
shl
mov
fstl
ja
or
fldt
adc
xor
mov
dec
ljmp
xor
lea
jge
mov
jge
cli
mov
dec
in
jle
push
jbe
cwtl
push
add
lods
movsl
xor
jge
xlat
imul
sbb
or
pop
sbb
nop
and
push
jl
xchg
cmc
or
adc
mov
xchg
push
mov
or
movsb
in
jb
mov
rorl
adc
hlt
jmp
dec
push
mov
sub
rorl
daa
and
push
or
test
je
lods
or
neg
adc
lods
clc
pusha
addr16
mov
in
imul
lea
xchg
sti
cmp
sub
push
lea
lods
xor
or
dec
push
cld
push
jo
cs
fisttpl
aas
repz
mov
hlt
mov
mov
insb
xor
inc
aaa
aaa
cs
ficompl
mov
mov
pop
mov
push
mov
mov
jo
jecxz
out
lea
inc
popa
lds
insb
mov
push
imulb
mov
inc
lahf
mov
sub
jmp
sub
daa
add
mov
add
rclb
mov
shlb
or
xlat
jp
dec
push
andl
andb
pusha
shl
cmpsl
mov
push
fidivs
ret
aad
daa
dec
hlt
jnp
xchg
mov
arpl
push
fidivs
sbb
cmpsl
xchg
adc
and
stos
lret
scas
cmc
sbb
cmp
in
mov
fstps
mov
cmp
xchg
push
cmp
stos
pop
pop
or
mov
xor
push
jns
adc
pusha
and
ss
jne
loop
adc
gs
mov
stos
daa
roll
cld
test
sub
lods
rorb
ss
push
imul
dec
es
pop
push
shrb
cmp
inc
xchg
dec
jg
mov
dec
adc
cmc
mov
cmp
or
mov
cmpsl
and
mov
insl
sub
jmp
jecxz
mov
cmp
push
xor
jecxz
in
xchg
cmpsl
mov
inc
leave
ja
arpl
or
mov
popa
call
xor
rclb
dec
scas
inc
push
out
and
mov
daa
aam
cmpsl
and
jge
or
cli
in
xchg
pop
ljmp
push
test
std
mov
push
jge
xchg
ret
pop
and
or
aaa
xchg
insl
shll
or
int
and
mov
jge
lea
out
sbb
hlt
mov
or
mov
shlb
push
mov
jne
jns
daa
pop
pop
test
das
sbb
in
jo
cmp
jmp
sub
aad
push
scas
loop
daa
aad
lcall
lods
inc
or
sub
in
mov
dec
push
std
xlat
loopne
in
sub
pop
sbb
fs
arpl
xor
xchg
xchg
dec
sub
jl
insl
lcall
scas
inc
jb
dec
or
hlt
stc
sub
test
test
push
std
xchg
mov
inc
pop
mov
out
addr16
jp
and
jnp
pop
or
sub
inc
cmc
gs
out
std
adc
push
or
jns
mov
out
test
les
inc
dec
cmpsl
mov
gs
mov
fimuls
in
jne
popa
mov
sahf
sbb
outsl
cmp
sub
pop
mov
gs
or
xor
ss
das
in
adc
sbb
jp
test
movsl
imul
fnsave
rcl
jmp
lcall
stc
mov
ljmp
adc
movsb
or
or
mov
mov
insl
mov
adc
push
fildll
popf
cs
jmp
stos
gs
jb
popa
lcall
and
mov
inc
pop
and
mov
and
cs
mov
dec
jne
cmp
xor
cs
inc
cmc
fiadds
pop
inc
inc
cli
popf
sbb
dec
aaa
or
xchg
sub
pushl
ret
sbb
pop
in
xlat
hlt
lahf
stos
xchg
pop
out
or
mov
aad
xchg
and
jge
test
jl
call
cmp
outsb
mov
dec
out
das
mov
xchg
sub
pop
jne
sub
or
test
lret
xor
pop
shll
push
mov
imul
mov
sahf
xchg
mov
in
insl
sub
jge
pop
lods
daa
pop
insb
xchg
inc
lods
iret
adc
add
inc
aas
gs
mov
xchg
pop
mov
out
cmp
push
lods
je
dec
call
xchg
xchg
xor
mov
jp
stc
nop
jp
dec
pusha
jns
sbb
mov
cs
adc
in
and
mov
mov
negl
pop
fsubp
das
dec
outsl
sub
xorb
cwtl
pop
pop
call
mov
ja
in
jg
inc
int3
add
lea
fistps
push
or
inc
mov
dec
insb
xor
sbb
daa
push
xlat
mov
cli
sbb
push
fmulp
hlt
rolb
or
arpl
jg
dec
dec
shlb
insb
or
shll
xor
ret
xchg
popf
rorl
adc
imul
repz
or
mov
and
cmpb
js,pt
aam
jns
pop
xor
shlb
pop
jbe
cmpsb
or
scas
jns
mov
loope
pusha
jle
out
negl
sarl
lods
insl
int
lea
testl
in
mov
imul
cmp
lds
cmp
and
or
fisttps
movsl
insb
imul
popf
sub
mov
into
jg
jecxz
mov
mov
sti
data16
push
mov
ds
cmpsl
sub
cmpsl
pop
xchg
dec
mov
or
sbbb
orl
loope
mov
push
out
cmp
push
mov
add
sub
xchg
or
sub
lahf
mov
xchg
mov
lret
lahf
data16
popl
cmp
mov
das
add
shlb
call
push
sbb
mov
mov
mov
loop
and
lods
xlat
sbb
aaa
int
dec
gs
movsl
outsb
mov
xchg
mov
inc
mov
jbe
cmp
add
jge
call
jge
push
sbb
mov
sub
fisubl
and
push
mov
lods
mov
aad
xchg
and
mov
cltd
cmp
xor
cmpsl
popf
xchg
push
pop
outsl
iret
adc
xlat
mov
xor
jg
mov
inc
movb
xor
prefetchw
in
xchg
shlb
sbb
pop
adc
or
bound
push
sub
leave
cs
insl
cmp
mov
xchg
push
push
lods
inc
push
mov
xchg
popa
mov
xor
fimull
add
je
shrb
pop
aas
jge
sub
sub
outsl
popa
or
les
mov
in
addb
in
jge
mov
hlt
fwait
loop
in
sbb
pop
lods
gs
cs
in
inc
mov
sub
cmp
pop
push
ljmp
popa
jge
arpl
lahf
mov
arpl
pop
cmc
bound
and
lods
nop
inc
mov
les
sub
int
addr16
cs
mov
pop
fsubl
mov
icebp
stc
jno
or
dec
stc
das
add
imul
movsb
fidivrl
lods
jno
popa
jns
xchg
cmpsl
jne
mov
aam
ja
push
scas
mov
lcall
jns
mov
xlat
xor
or
cmp
add
mov
sahf
stos
into
and
push
mov
iret
fidivl
addps
push
adc
pusha
imul
ljmp
das
jns
jb
test
hlt
fisttpl
add
sub
aaa
pop
dec
std
lods
pop
loope
lods
push
push
sub
xor
addl
cmp
ja
mov
dec
call
pop
lods
xor
mov
inc
jle
rcrl
or
out
dec
mov
sbb
inc
lahf
es
call
jg
cmp
insb
or
mov
in
xor
or
or
jne
cmpsb
or
dec
inc
pop
xchg
pop
scas
aaa
dec
and
push
lods
xor
and
xor
dec
sub
stos
dec
les
dec
mov
jp
cmc
das
pop
arpl
adc
jne
dec
fisttps
push
out
jbe
pop
iret
ja
popa
in
cmc
add
dec
test
cld
mov
lret
mov
or
dec
jl
dec
aaa
jo
jmp
dec
ljmp
shlb
inc
test
aaa
push
inc
push
cmp
out
popa
es
mov
push
bound
in
mov
subl
je
hlt
add
or
loope
add
movsl
mov
jo
cld
dec
or
mov
push
mov
mov
add
popf
dec
add
add
sbb
loop
scas
loopne
adc
jae
imul
cmpsl
rorl
dec
add
jne
loopne
add
iret
sub
imul
test
mov
sub
xorb
mov
jns
or
outsb
and
in
mov
popl
ret
push
imul
xchg
dec
fistl
or
add
or
pop
sub
addb
dec
push
jge
jecxz
clc
pop
sahf
shrl
add
mov
cmp
add
mov
insb
out
xchg
push
inc
mov
int3
push
js
scas
cmpsb
or
leave
and
sarb
jge
cs
sub
test
pop
shlb
push
stos
fisubl
ficomps
push
lcall
jo
in
pop
in
xchg
imul
test
jle
daa
jge
mov
mov
cld
jns
inc
lahf
iret
jge
xchg
or
pop
mov
rorb
into
mov
dec
andl
cmp
stos
adc
add
les
mov
dec
jae
jns
insl
cmp
dec
fistl
xor
and
jne
sbb
hlt
lea
cmpsl
ja
mov
mov
popa
addr16
adc
push
jp
adc
cld
and
jmp
xor
sbb
mov
sub
lret
in
cld
mov
push
or
cli
mov
or
leave
fildll
cmpsl
aam
jmp
jae
out
xlat
mov
cmp
xchg
sbb
nop
cmpsb
sahf
push
xor
sub
inc
xor
adc
sub
ret
lods
test
jge
mov
push
in
or
xlat
shll
addr16
std
lea
dec
lret
cmp
sub
fildll
xor
mov
scas
shlb
xlat
mov
sub
sbb
mov
cmp
cmpsl
dec
mov
subl
call
xchg
and
mov
jne
xor
mov
jecxz
xchg
mov
fs
fsubrl
rolb
dec
enter
mov
in
inc
mov
sub
mov
jae
dec
cs
push
mov
xor
cmp
je
loop
test
sub
sbbb
or
je
fucomi
mov
out
popa
addl
jo
ficoms
popf
jae
or
xchg
adc
hlt
into
adc
push
clc
mov
xor
add
sub
ret
bnd
imul
into
cs
pmulhw
fmul
sub
add
ja
mov
lahf
mov
test
daa
mov
je
pop
lahf
xor
std
cmpsb
jg
sbb
into
pop
pop
pop
add
insb
je
xor
mov
push
fidivrs
aas
call
sub
lods
scas
inc
cmpsl
imul
fdiv
lods
push
cmp
out
rcrl
lcall
push
data16
aam
popa
daa
into
or
bound
jnp
mov
inc
adc
inc
xlat
pop
push
imul
es
jge
xchg
aaa
jb
add
popf
sbb
add
out
adcb
insl
jb
sbb
jnp
in
mov
mov
jge
xchg
pop
mov
xor
jge
xchg
adc
sbb
lea
in
sub
sbb
jge
out
xchg
dec
push
das
in
or
shlb
adcl
adc
mov
push
mov
cmpsl
arpl
add
add
into
pop
hlt
ljmp
lods
cmpsl
je
pop
test
jl
orl
gs
cmp
pop
mov
mov
int
bound
sbb
jge
clc
or
inc
inc
push
test
xchg
inc
mov
shll
fwait
and
adc
xchg
pop
inc
lret
xor
inc
jge
sbb
and
push
dec
test
adc
sbb
mov
cmc
ficoms
push
inc
hlt
add
fbld
and
test
mov
push
sahf
stos
cmp
xor
mov
cmp
jecxz
lret
dec
lods
xchg
addr16
pop
dec
sub
jg
test
lea
mov
lds
mov
or
imul
sbb
hlt
lahf
and
cmp
sbb
mov
mov
call
ss
inc
xchg
sbb
dec
mov
clc
fdivr
push
stos
push
or
fbstp
ja
and
fdivrl
adc
mov
xchg
sbb
lock
mov
mov
fs
sarl
xchg
fmull
btl
popf
jmp
add
inc
call
add
test
gs
dec
cwtl
jl
mov
pop
loop
sbb
cmpsb
test
pop
movb
sub
fchs
dec
scas
loope
mov
sub
push
sub
popa
pusha
jbe
cmp
inc
fmuls
cmp
rorl
adc
jg
mov
jns
pop
or
mov
xor
shll
inc
aas
add
data16
out
inc
fsts
ja
aad
mov
lcall
jle
shlb
mov
pop
sbb
lcall
je
or
gs
iret
mov
adc
lods
dec
push
push
std
push
lret
or
jns
inc
xchg
xchg
daa
sti
cmp
fidivrs
inc
xor
xchg
icebp
sbb
popa
xor
jmp
xor
mov
mov
or
jmp
push
out
in
out
mov
daa
lods
shll
hlt
add
icebp
push
daa
mov
jle
xchg
jo
out
fs
jnp
dec
dec
ljmp
in
in
inc
sub
xchg
mov
cmpsl
or
sub
lahf
outsb
ja
mov
dec
cmp
aas
std
pop
std
add
add
sahf
outsl
fildll
pop
shrd
xchg
stc
insl
stc
inc
addr16
xor
mov
mov
jle
push
fbld
movsl
jecxz
jge
test
jg
push
mov
mov
push
lret
js
xor
jg
cmp
cmp
leave
ljmp
insb
or
inc
add
sub
insb
mov
insb
cmp
movsb
scas
or
arpl
popa
xor
jno
pop
cmp
icebp
lcall
pop
insl
mov
pop
pop
pop
pop
push
mov
and
es
xlat
out
cmp
mov
imul
test
popa
ljmp
jg
xchg
cmp
mov
mov
pop
movsl
dec
fbld
js
outsb
sti
jns
mov
out
dec
xchg
inc
je
cmp
add
dec
scas
inc
push
insl
lahf
stc
lcall
fistl
add
xchg
push
mov
sbb
xor
loope
jmp
loope
test
hlt
inc
mov
mov
mov
loope
hlt
mov
loope
icebp
sbb
adc
movsl
jge
ror
jne
xchg
jp
push
jle
jne
pop
rol
xchg
or
and
dec
loope
pop
pop
movsl
seta
arpl
scas
dec
mov
pop
adc
in
push
filds
in
movsl
and
xor
sub
lods
cmp
mov
pop
cltd
xor
pop
js
insl
cmpb
mov
mov
call
dec
pop
mov
cmp
mov
or
in
jmp
mov
mov
shrb
dec
data16
int
int3
movsl
mov
jno
and
xor
mov
aad
in
pushf
push
mov
adcl
pop
ljmp
out
iret
xor
fiaddl
cmp
sbb
sbb
push
lods
dec
call
adc
mov
outsl
cmp
inc
push
pop
in
jne
in
mov
mov
inc
xor
mov
mov
mov
stos
xchg
sbb
inc
mov
imul
and
add
or
lcall
arpl
popa
pop
out
fcoms
ds
jecxz
sar
adc
lods
addl
cli
ja
jge
sarb
cmp
loop
dec
cltd
ret
mov
dec
cmpsl
scas
adcb
xor
inc
cwtl
push
test
push
or
in
pop
lods
push
push
or
daa
pop
mov
jo
cmp
xor
xchg
ja
sbb
sbb
in
insb
popa
push
stos
xor
or
or
std
jl
outsl
iret
mov
add
pop
or
mov
mov
jmp
test
addb
add
scas
repz
out
insl
jnp
daa
int3
divb
adc
fldl
xor
xlat
cmpsb
call
ret
and
loopne
push
jecxz
mov
sbb
inc
test
push
xchg
rolb
xlat
lcall
dec
dec
mov
dec
xchg
or
mov
jns
jge
je
das
mov
and
hlt
lods
xchg
pop
iret
lods
fistpll
cmp
and
or
cmc
iret
inc
mull
movsl
or
sub
pop
les
and
ret
movsb
pop
cmp
sbb
mov
jle
push
sub
mov
push
popa
xchg
dec
mov
sti
mull
data16
cmp
cmp
rcll
mov
in
xor
add
daa
ss
out
mov
xchg
mov
or
fstps
add
mov
jo
out
mov
out
jb
lea
mov
pop
and
fucomp
or
mov
pop
jns
int3
sbb
call
push
mov
into
insl
push
xor
xor
pop
int
pop
sbb
push
pop
sbb
lods
lods
push
popf
jo
nop
xchg
xor
or
mov
mov
mulps
and
lods
inc
jns
jge
cmpsb
push
call
in
mov
dec
adc
enter
pop
mov
std
and
jge
mov
shl
dec
xchg
sub
push
or
popf
cli
gs
push
xchg
dec
out
sub
daa
hlt
xor
xchg
xor
dec
and
push
popa
shrd
fisttpl
mov
fisttpl
cmp
or
mov
pop
es
add
lea
addr16
sbb
sub
aam
lods
mov
arpl
stos
jle
push
ds
call
mov
and
test
insl
lea
and
mov
add
aam
or
ljmp
or
mov
insl
mov
mov
daa
cmp
arpl
imul
add
push
adc
movl
dec
cmc
int
insl
inc
push
mov
xor
xchg
xchg
aad
push
inc
cs
xchg
mov
add
xchg
aaa
dec
dec
imul
sub
into
inc
pop
inc
sub
sub
movsl
popa
jmp
cld
and
out
mov
in
in
inc
pop
push
ljmp
outsb
in
lret
and
je
mov
cmp
leave
pushf
leave
ljmp
xlat
pop
lahf
mov
and
pop
in
push
pop
int
xor
sub
xor
jmp
or
lea
stc
gs
imul
cmpsl
inc
pop
pusha
mov
or
leave
popa
push
jmp
imul
sbb
jg
jae
mov
test
cmp
call
push
lods
jno
shrb
lods
fadd
loopne,pn
adc
sub
or
sub
sub
popf
or
xchg
xchg
jle
jae
mov
mulb
inc
test
fidivl
adc
mov
adc
fnstenv
or
enter
add
sti
aaa
fstp
or
inc
cli
push
leave
adc
sub
push
outsl
rorb
movsl
ljmp
sbb
pop
stc
movsl
cmp
cmpsb
dec
es
out
cmp
inc
push
xchg
xchg
mov
xchg
sbb
sub
pop
scas
out
test
fsubrp
insb
pop
insl
repnz
push
shlb
and
xchg
and
dec
decb
and
test
insb
push
pop
adc
xchg
leave
scas
adc
cmpsl
and
fldl2t
pop
dec
and
xchg
push
fldt
sbb
xlat
hlt
or
cmpsl
into
hlt
jmp
sti
sarb
insb
dec
add
fdivp
call
xor
sub
test
outsl
stos
inc
mov
lock
mov
decb
mov
je
hlt
jecxz
adc
stos
cmpsl
sub
leave
pop
inc
je
cmp
sbb
fwait
scas
inc
out
inc
mov
addr16
push
lds
int
xchg
mov
jns
xchg
mov
adc
in
push
insl
cmpsl
imul
cmpsl
outsb
shll
out
lcall
int
lods
pop
lods
imul
in
or
in
ljmp
aas
call
sub
into
cltd
stc
sbbl
xchg
mov
in
add
out
push
cs
pop
out
jp
xchg
ds
push
inc
lods
sub
dec
mov
repnz
in
fisttpl
scas
setne
in
add
or
aad
pop
jge
and
cs
je
inc
jns
std
and
outsl
mov
adc
loope
and
bound
jb
loopne
inc
gs
movsb
and
clc
or
loop
mov
sub
cmp
outsl
lods
stos
fs
aas
aaa
mov
int
pop
push
mov
or
insb
jle
and
cmpsl
pop
pop
push
mov
test
movsb
sub
nop
lahf
mov
push
in
or
add
imul
pop
das
fidivrs
fldenv
mov
push
pop
or
cmp
in
lcall
mov
sub
xor
xchg
pop
jb
inc
in
fisubl
push
lods
push
in
dec
add
mov
mov
cmpsl
cmp
int3
repnz
sahf
scas
loope
inc
lahf
repz
mov
lea
xchg
in
xchg
push
jae
sbb
in
xlat
inc
aaa
mov
inc
and
push
xlat
mov
in
fstl
dec
mov
in
jg
test
in
mov
and
sub
roll
mov
mov
sub
push
adc
xchg
add
sbb
push
cmp
outsl
rclb
out
inc
mov
fnsave
push
sbb
orb
mov
bound
shll
xchg
loop
outsb
pusha
sub
aas
ret
fcmovu
je
call
mov
lea
or
insb
mov
cmp
lcall
call
jecxz,pt
shlb
mov
in
push
fmul
insl
or
and
push
pushl
and
je
pop
and
jnp
ja
repnz
xchg
jb
aam
enter
mov
sbbl
add
mov
sahf
mov
insb
jb
shl
popa
movsl
or
imul
mov
mov
mov
not
push
cmpsl
sbb
dec
gs
xchg
add
arpl
adc
xor
fidivl
push
and
jle
pop
insb
xor
mov
cli
inc
and
push
jl
dec
add
add
jae
lahf
sbb
sbb
xchg
sahf
mov
pop
jne
xchg
xor
aaa
insb
xor
and
adc
addr16
outsl
xchg
inc
jne
jbe
jmp
cs
stos
cli
cmp
or
xchg
inc
dec
popf
hlt
arpl
mov
je
aaa
out
addr16
bnd
out
je
inc
push
lds
dec
fucomip
bound
or
jg
lret
das
je
es
bnd
enter
pop
mov
or
inc
repz
lea
mov
fnstenv
xchg
pop
or
xchg
je
stos
pop
dec
push
insb
in
call
mov
cmp
xchg
xor
mov
jne
sub
dec
jno
pop
das
loopne
gs
mov
inc
pop
insl
loope
dec
scas
xchg
lea
adc
subb
ror
xchg
and
xlat
cmp
in
je
cli
loope
arpl
addr16
cs
out
adc
adc
inc
outsb
or
pop
jg
push
addr16
or
enter
aaa
fimuls
fstl
or
ja
cmp
mov
pcmpgtw
ljmp
cmp
sbb
pushf
mov
cmp
gs
stos
xor
xchg
xchg
in
loopne
mov
or
xchg
hlt
js
stos
scas
dec
hlt
jl
mov
xor
push
int3
jb
add
pushf
add
xchg
insl
jecxz
push
xchg
pushf
jl
add
add
jmp
cs
cmpsl
xchg
sbb
popa
pop
mov
xlat
mov
and
test
dec
add
rolb
jns
je
mov
gs
insb
adc
mov
fwait
sub
dec
addr16
popa
lea
mov
push
mov
mov
sub
fmulp
or
or
push
pop
or
int
hlt
es
stc
in
imul
and
add
lea
add
xor
fidivrl
adc
add
xor
mov
adc
aam
test
in
lahf
jg
jl
iret
imul
and
ja
loop
xor
popa
leave
jns
inc
cmpsl
and
loop
cmpsb
in
je
xchg
dec
dec
or
mov
sub
lods
imul
les
pusha
scas
in
int
pop
addr16
dec
pop
imul
arpl
lds
sub
push
movsl
or
and
jne
fs
loop
ljmp
aas
hlt
sub
lret
out
test
and
xchg
das
sub
or
les
adc
les
inc
jns
leave
pop
dec
cmp
sbb
and
push
imul
arpl
dec
inc
jns
lea
movsb
xchg
mov
jmp
sub
push
dec
sahf
push
cs
jge
outsl
adc
xchg
sbb
mov
lock
jns
jp
aas
sbb
fisubrl
mov
sub
addb
test
or
fadds
or
hlt
sub
scas
es
sub
xchg
aaa
pushw
ret
sarb
cwtl
movsl
and
adc
movsb
test
in
pop
jne
fmuls
mov
mov
lahf
xchg
jge
add
inc
das
jae
xchg
jmp
iret
mov
push
dec
rorl
sub
faddl
push
push
sarb
sub
jl
adc
fildll
inc
aas
je
jns
adc
iret
pop
xor
out
lds
bound
push
aad
mov
lcall
mov
movsl
ss
out
neg
and
int
hlt
cmp
sub
inc
adc
decl
push
and
push
nop
lods
insl
inc
and
sub
sub
test
sbb
icebp
adcb
xor
mov
arpl
pop
mov
out
mov
cwtl
mov
in
and
push
push
arpl
inc
adc
or
sbb
xor
je
divl
fsubrp
push
setnp
pop
cmp
dec
cmpsl
or
mov
dec
inc
cmpsl
jg
mov
adc
sub
xor
adc
jne
xchg
sub
incl
jb
iret
insl
xor
mov
loopne
mov
addr16
jns
fldl
in
jl
cmp
jl
sub
sub
mov
mov
cmp
shlb
jne
inc
sub
mov
xor
dec
inc
sbb
insb
mov
lods
mov
loopne
test
test
lds
aad
cs
insl
mov
jge
pop
inc
into
sti
add
sub
cld
mov
and
in
sbb
mov
xchg
or
pop
sub
adc
or
cwtl
lods
adc
out
and
xchg
pop
popa
clc
mov
je
in
dec
aaa
outsb
out
ficoml
lods
cmc
aaa
push
popf
fnstsw
cmp
mov
shrl
out
push
adc
shrb
lods
xor
dec
cmp
mov
cmp
jp
adc
in
imul
cmp
orb
jmp
and
insb
fcmovnb
sub
pop
into
mov
pop
jmp
ds
jbe
mov
lds
mov
inc
test
pop
or
call
imul
xlat
sbb
pop
cmp
into
in
rcll
test
mov
xor
insb
hlt
out
pop
lcall
mov
pushl
int
add
pop
ja
pop
fiaddl
or
test
sub
pop
nop
popa
sbb
out
cmp
mov
stos
filds
insl
out
xchg
cmpb
cmp
cmc
dec
cwtl
pop
jne
or
pusha
stos
mov
mov
adc
out
dec
pop
popf
in
sub
loop
andb
adc
call
vmulsd
cmc
lock
loope
insl
cmpsl
into
xchg
in
insb
int
gs
lea
lea
and
insb
sub
bound
push
les
cmpsl
in
push
int
xchg
sbb
mov
push
cld
or
inc
addr16
jo
sarb
adc
and
lea
push
push
xor
cmp
insb
cmpsb
fsubrp
rcll
cmovge
jge
test
push
adc
push
jns
fidivrs
jae
inc
dec
cltd
add
and
mov
dec
dec
sarb
pop
loopne
push
mov
xlat
fwait
hlt
repz
adc
lea
pop
sbb
cld
mov
lds
mov
lods
mov
fists
call
add
cs
jnp
mov
or
cwtl
jle
push
leave
cmp
imul
sub
sub
ret
pop
jmp
mov
jo
jns
fistpl
test
movsl
adc
int
dec
lcall
or
cmpsl
adc
popaw
pushf
lods
xchg
xchg
outsl
insl
addr16
sbb
pushf
test
jmp
cmp
mov
cmp
test
rorl
pop
mov
mov
das
cmpsb
sub
jb
xchg
popa
pop
scas
push
lahf
pushf
inc
fs
test
stos
clc
pop
jns
sbb
gs
jbe
or
pusha
dec
push
pop
aas
mov
aas
scas
ljmp
or
movsl
in
jge
insb
and
cmp
inc
lods
or
insl
xor
xchg
inc
sbb
jne
je
int
jbe
jmp
leave
and
sahf
lock
xor
je
scas
cmp
out
lds
push
scas
dec
lcall
popa
cmc
movsl
jo
fidivrs
testb
or
in
aaa
idivl
cs
jbe
xchg
mov
cmp
aaa
jl
push
lret
add
insl
bound
xchg
mov
cs
insb
mov
pop
push
sbb
fisubs
out
dec
push
rcrb
enter
push
dec
and
shrl
sarb
decl
mov
sbb
popf
imul
pop
scas
mov
and
inc
xchg
cmc
ja
sub
and
sub
loop
lds
dec
xor
push
sbb
xchg
das
repz
movsl
push
sahf
xor
cmpsb
imul
stc
mov
cmpsb
mov
je
into
push
add
and
xor
nop
in
inc
pop
aad
into
or
popf
pushf
jecxz
push
xor
xor
popa
dec
gs
jnp
push
andb
lea
fstpt
dec
test
add
pop
mov
wrmsr
rolb
xchg
pop
cmp
jo
dec
popa
push
stos
jmp
cmpsl
pop
dec
lods
repnz
sbb
fimull
cmp
sbb
arpl
adc
andb
mov
in
in
or
mov
sub
jne
push
or
addb
cmc
inc
popa
fcoml
rcrb
jb
and
incl
arpl
test
lods
or
in
cmp
jmp
push
in
in
scas
mov
mov
cwtl
test
mov
lds
cmp
fucom
in
push
sbb
adc
pop
scas
mov
sbb
sbb
sub
adc
in
cmp
outsb
xor
shrl
push
or
and
xlat
and
mov
jnp
outsb
xor
push
popf
pushf
loope
mov
xor
mov
add
nop
mov
push
pop
cmpsl
stos
lret
mov
sbb
add
in
in
ljmp
push
sbb
mov
or
mov
lds
std
adc
insl
pop
test
push
ja
sub
add
sub
dec
popa
mov
push
mov
scas
adc
leavew
cltd
dec
test
insb
pop
mov
sbb
rclb
sub
or
adc
ret
mov
icebp
inc
mov
scas
idivb
test
addr16
and
in
inc
xchg
out
test
and
jns
pop
cltd
out
mov
test
cmc
mov
jb
xchg
loopne
mov
or
pop
outsb
std
or
les
adc
mov
sub
imul
pop
push
cmpb
mov
jbe
cmpsl
xlat
fs
dec
add
pushf
and
cmp
jle
scas
sbb
jge
fs
ljmp
pop
mov
jp
es
adc
addr16
rcrb
mov
sub
aaa
scas
and
scas
in
lret
loopne
movsl
lret
loop
fsubrl
xor
nop
push
cmp
xor
add
in
sub
mov
or
or
push
cli
pusha
ds
es
in
je
sahf
pop
nop
adc
jmp
mov
push
inc
mov
pop
mov
pop
stos
sbbb
test
xchg
lret
push
sbb
imul
out
add
push
inc
push
nop
push
jl
push
je
decl
mov
lock
xchg
pop
cmp
xchg
push
in
gs
inc
dec
jnp
jns
fidivs
test
ficomps
ret
jg
mov
into
das
in
sahf
adc
ljmp
mov
push
pop
insl
mov
pusha
mov
in
stos
jae
mov
xchg
mov
lea
mov
enter
test
push
mov
ss
fsubl
out
stos
xor
lret
lock
xchg
push
fwait
movsl
gs
cmp
cmp
sub
cld
mov
push
dec
or
xchg
cmpb
mov
jo
jnp
mov
sti
out
inc
adc
or
test
pop
adc
lret
cld
sub
mov
lock
xchg
scas
cli
repz
adc
lods
outsl
sub
pop
popa
dec
dec
mov
xchg
popf
rclb
mov
lea
pop
icebp
cmp
fmul
out
cltd
or
mov
dec
fmuls
sbb
fldcw
and
movsl
dec
and
or
insl
add
push
outsl
in
iret
cmpsl
mov
mov
cmpsb
xlat
push
pop
dec
mov
call
cmp
xchg
insl
aaa
dec
fwait
mov
xor
insl
xor
add
pop
lods
and
imul
mov
aaa
xor
sahf
sahf
mov
std
popa
in
xor
addr16
xchg
mov
out
inc
adcb
imul
mov
mov
js
int3
dec
ds
dec
mov
ret
and
fadds
pop
add
fstl
push
adc
xor
lods
xchg
dec
inc
call
enter
jg
pop
fwait
int
jns
mov
test
pop
enter
or
mov
mov
add
lods
loopne
mull
dec
sbb
in
movsl
inc
lea
movsb
and
xchg
mov
outsl
xchg
outsb
sub
arpl
mov
test
sub
inc
push
xchg
filds
inc
scas
pop
pop
inc
xlat
lea
test
mov
fwait
lea
dec
testl
lods
pop
inc
dec
aaa
int
iret
mov
arpl
pop
sub
mov
daa
dec
push
mov
pop
jnp
in
imul
sub
mov
fwait
lret
mov
push
clc
lret
jne
dec
mov
dec
push
sub
ljmp
lea
int
pusha
je
dec
pop
dec
pusha
sub
arpl
jp
lods
adc
in
test
das
jne
out
outsb
jb
cmovge
mov
pop
jmp
mov
adc
or
xlat
popf
xor
sahf
in
pop
out
xor
dec
js
mov
mov
pop
out
mov
fs
xchg
or
lahf
enter
imul
in
inc
xchg
cs
imul
add
int3
sub
sbb
adc
adc
call
mov
pushf
push
or
xchg
rcrb
push
inc
ds
push
insb
dec
mov
mov
sub
lret
mov
or
arpl
in
loope
push
pop
mov
sub
and
jo
mov
clc
add
lock
arpl
popa
xchg
in
lret
or
cld
fiaddl
lret
push
mov
addl
push
sub
pop
or
daa
dec
inc
cmpsb
and
cld
stos
xchg
je
cmpsl
lahf
out
lods
lea
popf
or
psrld
jb
mov
jns
mov
nop
xchg
bound
mov
mov
xchg
orl
cmp
cs
and
mov
dec
in
push
jb
pop
aam
mov
stos
pop
mov
jge
ds
inc
out
fstps
dec
or
inc
pop
adc
call
sub
jl
sub
mov
ret
inc
leave
addr16
xchg
out
in
lods
in
cmp
es
lock
adc
and
push
xchg
inc
dec
out
xchg
xchg
jae
xchg
cmp
or
je
pop
in
jge
sahf
fistl
in
pusha
mov
cs
test
push
jp
or
jecxz
gs
outsb
lods
push
xchg
pop
mov
jbe
stos
cmp
in
shl
jb
add
in
xor
fwait
arpl
adc
xor
inc
je
cmc
sbb
or
xorb
and
lret
mov
out
cmp
sub
and
xchg
cmp
outsb
ret
mov
jbe
xor
orb
cmp
xchg
fistps
lods
cmp
mov
xchg
daa
push
ljmp
xchg
fbld
xchg
insb
push
sti
inc
shlb
loope
mov
jae
ret
xchg
push
xor
jl
cltd
mov
rcrb
mov
insl
addr16
xor
and
adc
mov
or
add
fidivrs
movsl
push
idivl
icebp
ss
lods
wrmsr
push
iret
inc
loop
fistpl
sub
mov
push
lock
das
or
pushf
aaa
xor
dec
sub
pop
out
or
or
cwtl
jmp
sbb
mov
or
mov
add
cmp
movsl
add
in
push
in
in
and
adc
add
lods
adc
jge
aam
jne
push
pop
mov
mov
fstl
in
insl
xlat
addb
repnz
mov
dec
pop
adc
pop
or
js
test
aam
xchg
insb
push
scas
fisttps
xchg
aaa
mov
cmp
mov
test
push
adc
bound
mov
xor
or
cmp
sub
and
cmpsl
adc
pop
mov
adc
lods
lods
or
cmc
ret
lahf
iret
lods
int
add
mov
jge
inc
ljmp
lods
lret
ja
sub
cmp
and
or
mov
cwtl
xchg
pop
pop
bound
pop
pusha
ljmp
inc
scas
push
ja
aam
cwtl
sub
aas
insl
add
inc
jo
pusha
ja
fcmovne
es
dec
icebp
sub
insl
call
notl
test
inc
stos
xchg
popa
idivl
or
push
outsb
cmp
push
rcrl
outsl
dec
cmp
ja
outsl
arpl
mov
in
sbb
inc
jle
bound
sbb
clc
lea
test
dec
cmc
inc
push
dec
mov
test
or
xor
lcall
dec
mov
aas
sbb
adc
and
dec
ret
sub
or
adc
movl
test
out
scas
xor
or
jg
pop
out
mov
outsl
addr16
or
pop
inc
outsb
jge
jecxz
sub
mov
vmovdqu
bound
outsl
sbb
mov
outsb
aaa
mov
add
adc
add
lcall
and
jl
lea
insb
push
cmc
gs
insb
jb
xchg
push
popa
stos
push
out
data16
mov
mov
jno
add
pusha
cmp
repnz
mov
lods
loopne
xchg
cmpsl
gs
ret
xchg
or
lea
add
mov
mov
shll
cmp
jne
lds
xchg
cmp
fisttpl
in
mov
inc
dec
xchg
cmp
arpl
cmpsl
jmp
sub
add
pop
xlat
push
cwtl
xlat
setl
pop
pusha
sbb
xchg
or
xlat
mov
push
push
lds
adc
ja
or
fwait
add
pop
jb
add
jae
xchg
out
sbb
add
lahf
push
jnp
lcall
aam
mov
mov
mov
add
xchg
icebp
jbe
mov
cmpsl
jne
imulb
pop
add
daa
pop
pop
aad
out
loop
int
jg
test
inc
jle
sub
inc
cmpl
inc
adc
push
pop
push
dec
pop
xchg
test
add
popa
in
sub
add
jno
pushf
inc
mov
scas
push
movb
nop
movsb
insb
lock
int
mov
or
xchg
les
insw
jb
ficompl
dec
popf
aad
std
pop
inc
xchg
and
add
pop
pop
scas
lret
jmp
xlat
adc
pop
mov
clc
bound
xor
lahf
xor
xchg
mov
cmp
pop
in
ffreep
xor
rcrb
or
mov
mov
pop
and
cmpsb
mov
xchg
and
cmp
out
xor
aaa
repz
sub
and
push
in
pslld
mov
inc
jb
je
inc
hlt
sub
mov
mov
add
sub
pop
or
in
push
mulb
push
cmp
dec
aaa
ja
mov
add
jns
sub
pop
orb
cmc
rclb
and
in
je
loop
imul
pop
popa
mov
mov
mov
jb
jge
out
mov
xchg
shl
mov
clc
and
or
inc
in
fcmovnbe
mov
xchg
lret
test
shlb
test
pop
push
lock
shlb
enter
cmpsb
jg
dec
mov
or
sub
mov
xlat
dec
int3
pop
push
mov
lret
shrl
inc
or
inc
sbb
xor
xchg
lods
scas
int
lret
js
or
sbbl
arpl
int
xor
es
pushf
xor
iret
shlb
cmp
dec
jno
shll
lea
and
push
es
jge
xchg
add
fwait
jne
dec
shlb
inc
push
insb
lahf
cmpsl
scas
push
movsb
sbb
lcall
stos
mov
pop
aaa
int
xor
pop
jl
sahf
stc
or
sbb
inc
test
addr16
or
aad
sbb
push
sub
or
insb
cmovp
xchg
test
insl
jge
dec
aaa
pop
inc
int
mov
add
fdivrs
test
stos
hlt
xchg
mov
outsb
lea
adc
das
dec
mov
gs
insl
cmp
or
movsb
shrb
clc
imul
xor
pop
orl
cmp
xchg
cmpsl
arpl
add
pop
mov
cmc
xor
movsl
sub
in
mov
insl
sbb
in
cmp
outsb
push
insl
fcomip
push
in
cmp
in
ret
sbb
jno
sbb
pcmpgtw
add
jne
imul
pushf
cmc
xchg
push
loop
pop
sub
insl
out
pop
xlat
call
push
jne
or
in
in
ds
sub
out
jne
push
lret
jle
fidivrs
mov
mov
outsb
test
movaps
jb
icebp
imul
outsl
xor
popa
das
stos
jle,pt
or
mov
pop
mov
in
fidivl
scas
push
addl
loope
lea
imul
outsl
mov
pop
insl
lds
xor
daa
and
aad
imul
mov
in
cmpsb
ficomps
jno
jae
hlt
out
aas
mov
in
shlb
sbb
iret
test
adc
rcrb
jo
xor
in
lea
mov
jge
int3
pop
in
mov
inc
push
loop
ret
lods
lea
sub
cmpsl
ss
popa
in
in
jns
push
xor
sbb
loope
push
mov
ds
sbb
mov
sbb
lahf
push
call
and
add
rcll
movsb
pusha
xchg
mov
mov
lods
sahf
arpl
pop
iret
ret
adc
gs
sbb
popa
popf
movsb
dec
mov
xor
mov
fwait
xchg
mov
mov
inc
shll
mov
insb
ds
or
mov
mov
add
push
ss
shlb
xchg
and
lods
mov
dec
xor
insb
or
mov
sbb
cld
je
xor
int3
mov
mov
mov
sub
jp
jge
xor
lcall
and
cld
lock
iret
jae
mov
and
popa
pop
ljmp
mov
dec
cltd
or
in
cltd
or
xor
int3
sbb
js
aas
sbb
sub
inc
pop
cmpsl
outsb
sti
jg
cmpsb
imul
sbb
lea
xchg
jmp
ljmp
push
ret
xor
adc
fimull
jnp
push
adc
leave
popf
popa
xchg
ror
sub
adc
test
test
adc
mov
sbb
loop
inc
push
pop
loope
dec
scas
cs
pop
sub
cmp
mov
adc
xchg
pop
mov
hlt
dec
jl
scas
push
in
movsl
push
pop
and
aam
lcall
imul
mov
sub
ds
adc
jmp
fidivl
jnp
stos
loopne
imul
add
cmpsl
and
cmp
je
cmp
test
mov
mov
pop
orb
or
mov
ret
add
pop
jg
and
xor
xchg
stc
xor
mov
les
jno
mulb
add
jle
sbb
and
adc
incb
or
xchg
push
cmp
xchg
fs
cmpsb
pop
popl
add
cmc
js
cmp
sti
push
dec
orb
out
dec
xchg
adc
cmp
filds
hlt
popa
vmwrite
imul
pop
ret
inc
inc
ljmp
cld
stos
inc
mov
fsubr
pop
bound
lea
add
dec
or
cmp
jns
sub
jbe
shlb
or
loope
popa
xchg
outsb
pop
leave
arpl
std
and
pop
and
xchg
mov
add
outsb
add
xor
jmp
inc
adc
int3
xor
or
push
xchg
aam
int3
test
pop
xchg
push
mov
pop
popa
lcall
pusha
pop
sub
lret
cmp
xor
out
jae
inc
add
andl
xchg
push
shlb
lahf
jae
addr16
sar
sbb
push
iret
pop
daa
idivb
dec
out
rclb
adc
push
mov
xchg
dec
dec
push
mov
cmp
loop
outsb
and
jbe
fwait
in
testl
mov
and
pop
inc
ss
dec
xchg
int
aam
ljmp
movsl
push
mov
pop
inc
push
dec
lea
pop
dec
mov
into
adc
or
push
out
xchg
lret
push
daa
inc
jg
repnz
test
aad
outsb
fwait
and
pop
jecxz
je
lret
hlt
sti
xchg
sub
or
adc
mov
rclb
mov
out
adc
cmp
inc
call
mul
stos
pop
stos
insl
aam
mov
fcoms
std
push
imul
pop
leave
out
iret
and
dec
andl
out
dec
std
sbb
pop
and
ret
daa
pop
and
out
in
or
mov
add
outsb
cmp
dec
push
sbb
clc
mov
dec
and
lea
and
lods
sub
lret
xchg
cmp
jae
outsb
repz
xchg
cmpsl
fisttpl
mov
mov
bt
ret
mov
iret
inc
push
inc
fisttpll
and
test
dec
mov
nop
lahf
ret
negl
scas
push
ror
in
and
lods
or
pusha
mov
fcomi
ror
jne
cwtl
sub
and
pop
cmp
mov
loopne
sub
popa
cmp
mov
dec
insl
lods
sub
xor
lods
imul
clc
aas
lret
popa
xchg
cmpsl
dec
scas
mov
fs
push
rcll
jbe
or
scas
filds
ds
dec
movsl
in
hlt
jno
je
andl
jns
push
push
insl
sbb
mov
mov
push
sti
ds
and
xor
and
cmpsl
stc
mov
mov
rcrb
mov
sub
sub
and
xchg
xor
daa
jns
out
adcb
push
lahf
scas
scas
mov
test
and
mov
ret
sbb
mov
popa
lahf
fldcw
dec
arpl
dec
push
das
jno
pop
pop
xchg
fisubrl
int
out
repnz
fs
imul
test
jl
sbb
bound
in
jne
cs
xor
push
add
rcrb
xchg
pop
lahf
pop
imul
lock
ja
call
aam
xchg
ja
dec
cmpsb
adc
lret
clc
sti
sbb
push
mov
xchg
stc
int
mov
sub
lods
ds
ds
imul
dec
call
pop
cmpsl
dec
jb
dec
push
ja
sti
cmpsl
popa
ficoms
sbb
in
mov
xchg
lock
push
lret
test
sub
aas
mov
ja
mov
in
popl
lock
loop
fisubl
addr16
mov
jo
push
push
popa
inc
inc
mov
ret
or
cmp
mov
or
bnd
and
dec
aad
mov
fistps
jne
sti
in
mov
mov
hlt
dec
ret
daa
test
sub
out
je
mov
shlb
xchg
xor
push
mov
xchg
xchg
xor
in
fisubrs
inc
daa
sub
xor
jno
mov
outsb
sub
icebp
and
push
ljmp
pop
aad
mov
jle
jns
rcl
das
push
popf
pop
dec
or
dec
inc
add
mov
cmc
push
jae
cmp
push
mov
push
push
mov
lods
lods
loop
dec
xchg
jg
or
mov
iret
add
xor
and
adc
jmp
sub
sbb
cld
mov
push
or
mov
fwait
insb
je
aaa
mov
fwait
mov
mov
push
mov
push
inc
lea
or
inc
fs
pop
fildl
adc
sbb
mov
or
push
and
and
push
adc
pop
mov
orl
icebp
and
xchg
mov
sub
jns
in
jb
add
int
push
loop
aam
mov
mov
mov
add
sbb
mov
mov
inc
mov
loop
lcall
dec
push
imull
arpl
icebp
add
imul
rolb
pop
or
push
cmp
mov
sub
arpl
jl
ss
ljmp
insb
xor
lahf
outsl
ret
push
enter
and
fistpll
lahf
push
insb
cli
push
shlb
jle
push
cmp
push
lods
pop
xchg
sbb
xchg
cmpsl
mov
addl
pop
lods
cmp
in
popf
dec
scas
fs
call
fcoms
pusha
xor
adc
in
into
mov
dec
push
aaa
addr16
lahf
xor
out
sub
aaa
addr16
jae
xor
popa
sahf
insb
movsb
ljmp
in
cld
xchg
data16
lret
xor
sub
in
cmp
addr16
cmp
ds
mov
popl
add
lods
or
adc
lcall
add
and
in
fldt
mov
ljmp
ljmp
arpl
adc
inc
popa
in
dec
push
lods
jb
lock
xchg
xor
push
enter
dec
sub
xor
and
fidivs
xchg
imull
mov
addr16
lcall
fbstp
or
and
inc
jne
ret
inc
mov
lods
dec
movsb
and
test
gs
adc
xorb
ds
inc
mov
pop
adc
lds
pop
pop
imul
xchg
cmp
jnp
enter
in
xchg
cmpl
mov
or
xchg
xchg
cmp
ljmp
xchg
mov
xchg
mov
sub
loope
test
cmp
xchg
sub
mov
push
sbb
xchg
mov
divl
lods
push
mov
iret
mov
push
and
mov
mov
xchg
lock
lods
movsl
and
arpl
in
shlb
jp
fsubl
jno
sub
xchg
pop
cvttps2pi
shll
in
gs
jge
pop
adc
dec
dec
mov
jmp
xchg
gs
outsb
subl
aas
and
cmp
mov
imul
andb
in
lret
lea
repnz
jle
cmp
fwait
push
addr16
push
aaa
lods
sub
sbb
sub
jb
dec
lea
insl
and
les
in
jne
or
cmp
lcall
shll
add
cmp
in
jb
mov
xchg
cmpsl
add
sub
fimuls
push
js
fs
lahf
or
lcall
or
push
cmp
dec
lret
add
call
lods
movsb
xlat
rcr
popf
lods
lds
inc
adc
int
xchg
int3
xchg
xor
fcoms
push
test
mov
insl
pop
cmp
pop
test
js
fldt
mov
mov
test
int3
movsl
pop
sub
es
xchg
lea
mov
cmpsl
mov
jmp
push
fxch
lcall
pop
inc
popa
out
mov
xor
push
daa
push
dec
pusha
pop
add
loope
mov
mov
jno
and
sbb
aaa
cmp
popa
out
jp
lea
cmp
rcrb
push
cmpsl
fldt
pusha
or
inc
pop
lahf
xor
lea
cmp
sub
test
inc
es
sbbb
sub
sub
ja
gs
out
das
pop
and
mov
mov
daa
shrl
test
in
inc
inc
xchg
sarl
sub
xor
in
testb
sub
dec
xchg
lods
xchg
pop
nop
sahf
rorl
jmp
inc
push
xor
sub
and
daa
xchg
es
mov
ficoml
xchg
mov
jbe
sarb
loop
lea
dec
imul
or
pop
cltd
or
mov
inc
cmp
and
jge
stos
mov
loope
test
push
mov
sbb
test
lahf
cmpsl
jmp
incb
fwait
movsl
stos
and
mov
mov
roll
ja
das
inc
xor
xchg
popa
lahf
push
inc
cmp
inc
outsb
sbb
cmpsl
mov
lods
mov
mov
stc
es
cmpsb
push
push
sub
mov
insl
or
cmc
push
lahf
mov
pop
hlt
push
lods
xor
mov
sbb
scas
decl
mov
pop
or
imul
lods
imul
cmp
dec
xchg
or
lahf
aam
push
mov
bound
pop
jge
xchg
popa
jo
cwtl
data16
push
test
sti
xchg
push
xor
insl
imul
lods
jle
stos
push
pop
ds
test
bound
add
idivl
std
bound
mov
and
jg
fnsave
dec
xchg
add
adc
cld
and
movsl
push
das
lds
or
cli
dec
popf
adc
es
icebp
daa
imull
out
dec
push
pop
sub
push
out
sbb
sahf
in
fistps
in
dec
jl
mov
mov
sbb
sbb
xchg
pop
sbb
or
icebp
loop
xchg
xchg
in
gs
aam
fildll
imul
stos
mov
nop
sbb
imul
sub
addl
adc
daa
inc
test
inc
xchg
fwait
je
or
movsb
add
imul
in
lahf
or
dec
push
mov
in
mov
dec
test
push
lea
jne
out
and
xchg
cmpsl
cmp
push
lret
sub
nop
push
and
jle
lret
popf
sub
or
in
rcrl
adc
xchg
sbbl
aad
mov
sub
add
lods
or
dec
stc
adc
pop
jno
cmpsb
movsb
jle
adc
push
insb
lahf
xchg
test
cmp
cli
cmpb
add
fwait
add
pop
push
gs
or
shrl
sbb
push
clc
mov
in
in
dec
jne
xor
testl
add
push
sub
sub
push
or
add
adc
mov
stos
mov
testl
or
or
or
and
out
insl
outsl
and
xor
inc
pop
sti
out
data16
gs
add
insl
out
lods
lods
push
add
js
add
push
inc
add
push
or
xchg
insl
popa
xchg
sbb
clc
add
xchg
inc
sbb
or
add
fildll
gs
xchg
push
lcall
lea
rorl
int
movsl
rorl
cmp
cmp
insb
mov
repnz
xchg
mov
ljmp
outsb
movsl
cmpsl
in
sub
xchg
mov
sub
daa
fcmovnu
insb
xchg
je
pop
lahf
or
xor
or
mov
data16
xor
cmp
dec
lods
loop
sarb
sti
mov
hlt
popf
or
cli
out
scas
jb
mov
cmp
sti
cmp
adc
lods
pop
out
sbb
mov
lahf
mov
mov
dec
cmp
mov
aad
popa
lret
push
and
mov
jp
lea
sbb
sbb
mov
pop
and
mov
rcll
push
adc
dec
stos
and
jge
mov
lret
push
ss
iret
push
xor
mov
ret
orb
mov
sbb
xchg
ret
out
repz
out
fcomps
jbe
loop
aaa
jecxz
les
cmp
je
loop
subb
mov
lahf
sarl
inc
and
adc
xchg
push
shrl
fdivrs
shrb
and
fisttpll
push
pop
mov
daa
jge
mov
lret
in
pushf
xchg
outsl
aam
daa
mov
cmpsl
or
xchg
sub
push
in
test
push
sub
rcll
decl
je
and
sub
jb
mov
inc
test
js
cmp
mov
xor
xchg
push
push
outsb
pusha
mov
aaa
adc
test
cld
lds
inc
push
lods
inc
dec
sub
jae
rcl
and
shrl
aaa
cmpsl
stc
icebp
jp
push
and
sbb
mov
enter
push
and
mov
mov
lods
fwait
movsb
dec
adc
movsb
or
cmp
cmp
movsl
loope
mov
inc
ds
movsb
aad
push
cmp
outsb
xchg
mov
inc
je
popf
and
fsubrl
das
cli
and
mov
scas
jno
and
aas
jne
mov
mull
or
inc
hlt
or
aaa
outsb
arpl
mov
je
inc
and
fcomps
out
daa
jbe
xchg
push
das
mov
sahf
fistpll
sbb
sarl
movsl
inc
cmp
movsl
jg
outsl
and
sub
das
shll
lock
adc
push
test
mov
sbb
cmp
sbb
mov
push
xchg
adc
lea
push
dec
cmp
xchg
or
dec
roll
mov
popf
loopne
ljmp
popf
sbb
cmpsl
sbb
les
pusha
push
test
jb
push
and
push
pop
cmp
loopne
mov
xchg
or
xchg
jg
pop
hlt
pop
js
jge
in
in
mov
pusha
out
pop
xchg
jp
jne
lcall
push
and
or
rcrl
add
and
push
xchg
cmp
aaa
cmpsb
push
push
scas
cmp
xchg
test
and
leave
and
pusha
sub
loope
sbb
jae
das
sub
in
jg
lods
in
outsl
add
dec
pop
pop
ret
adc
xchg
dec
mov
jnp
fistps
es
fcmovu
je
inc
test
jl
or
dec
jmp
mov
je
jp
cld
enter
dec
mov
popa
jne
pop
popa
je
push
or
and
psrlq
movsl
sub
lods
insl
or
push
add
fwait
imulb
out
xchg
push
insb
and
adc
int3
orl
imul
aam
mov
mov
lods
je
insb
or
scas
lods
lea
popf
mov
xchg
adc
je
mov
add
out
lods
mov
or
sub
xor
mov
dec
arpl
popf
xor
xchg
jnp
xor
adc
push
and
loope
push
add
ljmp
mov
repnz
dec
mov
fisttpll
inc
xchg
and
sbb
xchg
aas
sbb
sub
cmpl
mov
xor
aas
and
mov
imul
je
pop
sbb
pop
jnp
xchg
sub
sub
inc
fcom
jge
addr16
xlat
add
mov
sub
pop
ja
sub
mov
cmc
xchg
sahf
idivl
jmp
aaa
push
and
adc
insb
stos
jp
sbb
xor
pop
xchg
mov
push
test
xchg
fiadds
cmp
ror
mov
jle
sbb
ss
cmpsb
mov
inc
andb
xchg
aas
arpl
mov
or
mov
ret
pop
repz
lret
bound
adc
loop
data16
cmp
iret
sbb
test
mov
into
xor
test
mov
je
lahf
insl
pop
insb
in
mov
aad
lock
dec
sbb
mov
or
fsubs
stc
cmpsl
popl
add
pop
adc
lea
add
das
subb
inc
out
dec
sar
aad
in
inc
xlat
test
hlt
push
mov
jl
mov
jg
lahf
mov
pusha
into
cmpsl
mov
pop
sub
stc
xchg
iret
cmovnp
aas
push
sub
dec
jp
ds
and
xchg
cmp
shlb
add
fwait
fs
lds
inc
mov
dec
imul
inc
mov
xchg
push
cmp
les
shll
data16
pusha
mov
data16
sub
jne
and
mov
jmp
cmp
popf
xchg
or
stos
je
hlt
stc
xchg
lods
adcb
popa
mov
and
pushf
out
add
cmpsl
cli
outsl
mov
out
ret
mov
mov
push
movsl
movsb
jecxz
pop
or
aaa
sub
repz
popf
or
pop
popl
mov
add
or
mov
std
add
lahf
stos
pop
pop
scas
xchg
ret
je
loopw
test
rep
inc
jmp
adcl
sub
cmp
cmp
jge
mov
sub
dec
mov
dec
push
sub
sub
lods
or
outsl
movsl
fisubs
in
mov
addr16
imul
lret
pop
lods
test
xchg
push
push
outsl
ret
arpl
shll
ret
mov
les
outsb
shrl
xchg
pop
and
mov
xchg
imul
mov
sub
inc
xchg
push
outsb
adc
dec
push
cmpsl
xor
or
mov
lods
scas
es
lret
mov
leave
push
cli
imulb
or
add
pop
fcmove
stc
test
ficoms
shlb
mov
pop
and
ficompl
xor
dec
push
std
cmp
sbb
push
call
in
xchg
jp
xchg
dec
cltd
sti
mov
hlt
dec
daa
mov
jae
pop
or
push
xor
movsl
adc
adc
andl
mov
mov
adc
jne
sub
out
push
mov
int3
lods
popl
and
sbb
sarb
jne
xchg
jae
ja
xchg
cld
movsl
push
jmp
mov
sbb
dec
adc
lock
xor
mov
xorl
mov
cmp
xchg
test
fwait
sub
push
adc
cmpsb
xor
int3
jmp
sub
lret
lds
push
sub
and
int
and
insl
push
and
and
inc
jg
ljmp
jle
into
aad
jo,pn
insb
mov
mov
pop
mov
fstl
leave
sbb
or
pop
shl
in
mov
or
cmp
pop
add
js
mov
push
cwtl
mov
sbb
mov
ljmp
cmp
outsb
ja
mov
test
bound
je
cmc
jp
adc
push
jge
and
inc
test
cmp
jne
icebp
xor
mov
and
xchg
fiadds
lods
inc
stos
pop
fs
xor
or
gs
xor
arpl
shl
mov
arpl
mov
mov
mov
or
icebp
and
je
mov
aad
sub
popa
cmc
sub
sub
bound
js
lods
out
push
mov
lods
push
orl
add
push
scas
jg
push
mov
inc
add
daa
pusha
pop
jne
test
sub
dec
or
cmp
inc
push
mov
ja
ljmp
outsl
insl
dec
jo
and
stc
inc
sbb
jle
add
xchg
mov
jmp
dec
jb
ss
mov
push
mov
pop
popa
in
bound
inc
sub
mov
sub
mov
jl
jecxz
in
cmc
and
jne
or
or
and
push
push
jns
movsb
mov
mov
or
fucom
jae
mov
je
cmpsl
adc
loop
inc
mov
push
das
into
xchg
loope
incl
or
jne
xor
push
or
mov
and
sub
cmp
test
pop
imul
cmp
insl
jge
push
dec
and
loope
and
je
and
or
es
scas
bound
lods
jg
cmpsl
jle
cmpsl
jnp
popa
sti
jo
mov
add
jns
pop
mov
mov
sub
jb
xor
test
push
lret
mov
and
mov
or
and
jmp
jae
mov
xor
cltd
xor
mov
in
mov
pop
dec
in
mov
aaa
mov
adc
and
test
add
pop
jle
les
in
cmc
cmp
push
sub
sbb
push
add
push
mov
pop
mov
jns
add
jne
popa
or
lods
mov
lcall
and
mov
mov
cltd
arpl
sti
clc
cmc
popa
test
xlat
jb
add
push
mov
es
pop
pop
sub
lahf
bound
test
popa
xchg
popf
push
loopne
push
cmp
lahf
cli
cmp
ljmp
xor
pop
mov
sar
pop
jle
cmpsb
iret
cmp
mov
lods
inc
mov
cltd
or
lods
add
lock
in
cld
inc
negl
in
add
dec
fimuls
xchg
mov
fs
cmp
test
sub
and
jb
sbb
cwtl
push
jae
sub
nop
scas
or
lods
mov
ret
mov
fs
lods
inc
push
adc
addr16
lahf
cmp
pop
iret
push
popa
xchg
mov
es
or
dec
and
add
lea
out
and
into
test
out
sub
dec
in
scas
sub
mov
into
inc
std
and
das
inc
sti
jb
fwait
in
out
gs
xchg
and
mov
add
adc
push
lahf
dec
mov
in
rorb
dec
mov
mov
jne
bound
dec
ret
pop
das
pop
sub
sub
hlt
dec
jae
cmp
insb
je
sbb
dec
fs
arpl
mov
adc
jmp
push
sub
iret
int
sbb
stos
lret
daa
xor
das
daa
mulb
inc
inc
jmp
mov
cli
mov
addr16
fisttps
hlt
xchg
push
or
dec
shll
pop
mov
mov
sbb
repnz
bound
aas
lods
pop
popa
push
cmp
rorb
cmpsl
and
testb
mov
inc
insb
shlb
out
jl
je
lahf
push
test
jo
or
sub
out
jecxz
xor
dec
dec
popf
test
mov
and
and
out
jne
and
or
outsl
mov
insb
jae
or
cs
ja
rolb
pop
fs
aaa
out
xor
test
xchg
cli
cmp
fstpt
dec
stos
dec
mov
in
adc
shlb
out
dec
ss
ljmp
mov
sub
mov
call
test
outsb
insl
clc
arpl
into
pop
iret
push
mov
jp
push
test
mov
stos
jecxz
jg
nop
fdivr
mov
mov
pop
cmp
ficompl
ror
mov
jbe
shlb
mov
int
cmp
jg
cli
xchg
dec
push
push
jge
jmp
sub
and
arpl
clc
push
adc
cmp
lea
sub
fs
insl
push
and
or
popa
test
pusha
insl
popf
nop
lahf
movsl
mov
jae
aaa
cmpsl
cmc
das
pop
hlt
leave
or
mov
mov
jns
sub
je
or
sbb
sbb
mov
repz
jge
cmpsl
xorb
mov
add
stos
mov
sub
and
inc
in
ret
mov
mov
data16
mov
and
fwait
xchg
or
dec
shr
xchg
cli
ret
mov
cmp
push
xlat
leave
and
jb
mov
jbe
mov
add
iret
push
test
jg
jno
push
cmp
lea
or
cmpsl
shlb
scas
test
in
jo
imul
movsb
push
filds
out
xlat
insb
imul
xchg
sbb
in
pusha
cmp
mov
dec
in
adc
dec
push
mov
lods
in
sahf
sbb
jmp
incl
sub
and
rcrb
cmp
stc
outsl
sbb
dec
stc
xor
int3
insb
fwait
sub
scas
je
arpl
filds
lahf
or
outsb
iret
xchg
cmpsb
pop
inc
outsl
aad
sub
pop
inc
daa
imul
sub
imul
or
jnp
cmp
jbe
xor
and
pop
or
daa
hlt
and
xchg
lods
dec
jo
dec
lock
sbb
ret
fsubl
scas
inc
int3
ljmp
xchg
hlt
inc
outsl
bound
dec
pop
and
mov
dec
rclb
add
cld
lods
int3
add
mov
repnz
iret
bound
lods
lcall
push
fsubrs
das
shlb
jg
nop
push
push
mov
stos
push
sbbl
pop
bound
cmp
out
movsl
outsb
insl
fsubl
mov
dec
jg
push
xchg
incl
loope
addr16
cmp
aaa
wbinvd
decl
inc
int
popl
out
dec
xor
pop
pop
cmpsb
mov
jle
mov
and
lock
jp
scas
fisttpll
pushl
enter
rcrb
jns
pop
imul
push
scas
fldenv
and
test
add
jbe
pop
jg
addr16
pop
outsb
dec
pop
pop
sbb
add
mov
int
out
test
cmp
ret
rorb
lock
push
daa
cmpsl
subl
or
mov
movsb
mov
daa
inc
xchg
int3
in
cmovl
or
xchg
add
daa
or
inc
in
sub
imul
scas
xchg
lods
sbb
mov
push
es
jbe
loopne
pop
punpcklwd
popf
pop
fisubs
orl
and
and
mov
or
pop
pop
jl
xchg
insb
aaa
fdivs
decl
shl
rolb
mov
test
in
cwtl
jp
sbb
mov
mov
lret
inc
sarl
fildl
push
imul
int3
imul
leave
sbb
aam
je
test
sbb
outsb
nop
inc
mov
jne
add
inc
bound
add
pop
daa
xorl
adc
and
jae
popa
sub
cmc
fstpt
imul
sub
push
jp
inc
inc
test
xchg
adc
add
xchg
addr16
shlb
shlb
add
repnz
adc
insl
adc
jne
pop
sahf
in
pop
dec
addr16
inc
xchg
pop
int
fdivs
loope
gs
rolb
out
leave
loope
mov
lea
push
jg
test
mov
dec
popl
roll
daa
jne
scas
xchg
adc
push
sub
jle
mov
daa
xor
in
mov
jecxz
imul
in
pop
pop
outsb
adc
daa
mov
and
lret
movsl
lea
hlt
pop
cmp
or
ret
out
pop
cmp
sub
mov
dec
or
outsb
sub
add
call
insl
iret
and
or
mov
in
push
mov
arpl
lods
outsb
and
mov
insl
jle
call
inc
pop
sub
lret
mov
faddl
insl
incl
aaa
out
aam
in
ja
sbb
mov
xorl
cld
inc
mov
push
mov
sub
xor
jno
cmpsl
mov
or
stos
fnstsw
lods
mov
xor
dec
push
cs
jbe
mov
adc
test
sbb
rcl
aad
mov
in
mov
lahf
mov
popf
and
mov
push
lea
jnp
fidivs
clc
xor
mov
bound
leave
jae
cmp
lea
cmp
and
adc
mov
sub
xchg
int3
add
mov
mov
xchg
xchg
test
gs
dec
lahf
addl
cli
popf
adc
xor
loopne
xchg
lods
dec
add
jno
mov
sub
or
daa
mov
sub
aaa
dec
and
or
lahf
lock
int
or
push
jae
cmpsl
cmp
lods
loopne
scas
and
leave
and
insl
adc
fwait
stos
adc
sbb
sbb
fs
cwtl
jns
lahf
stc
push
push
mov
or
jle
cmpsl
push
into
rclb
leave
xor
jo
dec
xchg
addr16
sarb
pop
jno
xor
lahf
mov
loop
arpl
pop
mov
inc
pop
movsl
cld
pop
jno
lahf
outsb
sbb
gs
xchg
mov
insb
push
xchg
cmp
repnz
inc
mov
push
sbb
cmpsl
jbe
mov
mov
mov
insb
dec
bound
cld
insb
cmp
inc
imul
outsl
inc
and
push
jbe
daa
cmp
mov
orl
inc
dec
hlt
pop
ficoml
mov
mov
cmp
popf
push
jne
imull
icebp
test
mov
cld
stos
sbb
out
push
ja
push
dec
scas
fistpl
add
mov
into
repz
lea
movsb
inc
ja
push
push
mov
nop
sarl
ret
insl
rclb
sbbb
push
in
out
push
imul
or
mov
push
std
mov
mov
or
mov
jns
xchg
popa
dec
mov
sub
mov
les
adc
mov
add
iret
call
mov
xchg
sbb
dec
jle
or
dec
bound
lret
imul
push
lea
sbb
cmp
xor
adc
test
pusha
dec
pop
mov
fisttpll
mov
les
mov
into
xor
cmp
lcall
push
pop
call
lods
insl
and
rcrl
jle
bound
lahf
cmp
pop
xchg
pop
mov
hlt
jbe
cmp
cmp
daa
sbb
cmpsl
pop
les
sub
outsl
mov
xchg
hlt
mov
clc
xchg
scas
cmp
repz
int
push
mov
sbb
fwait
add
inc
lcall
rcl
and
jmp
and
cmp
in
in
movsl
jns
cmp
mov
pop
adc
and
mov
jge
mov
xchg
and
adc
mov
xorb
mov
test
and
popa
inc
cmp
lods
push
sub
mov
ss
movsl
sub
and
jno
ja
addr16
dec
pusha
lods
out
enter
lods
stos
addr16
jmp
lods
or
xor
dec
pop
les
sbb
xor
and
imul
push
cmp
fistpl
and
adc
and
cld
lret
cmp
mov
scas
ljmp
fidivrl
bound
addr16
fbstp
cld
ret
insl
sub
mov
stos
jb
orl
mov
loopne
test
mov
imul
clc
popf
call
sub
test
insl
fadd
test
lods
xor
dec
call
pop
and
or
add
jle
je
pop
inc
pop
add
pop
call
in
or
aam
mov
mov
inc
mov
cld
mov
je
into
cld
pop
data16
mov
imul
in
and
rol
andl
pop
inc
push
out
dec
and
lds
filds
dec
filds
mov
pop
daa
fcompl
add
fiadds
int3
addr16
in
xlat
sub
and
mov
sub
hlt
add
add
jne
xchg
int3
stos
mov
int3
pop
xor
sub
test
inc
jne
pop
sbb
and
lods
adc
bound
mov
or
fisttpl
cmp
out
xchg
push
pop
sbb
mov
xchg
push
ret
cmp
dec
jbe
in
pop
in
mov
fidivrl
sub
cli
xchg
in
popa
sbb
sub
test
jmp
pop
mov
ljmp
out
popf
pushf
orb
sbb
lods
pop
daa
inc
mov
in
out
scas
clc
mov
arpl
xor
dec
cli
jmp
js
aam
or
jmp
or
call
imul
test
lret
push
in
mov
inc
imul
hlt
jmp
cmpsb
sub
inc
ja
fisttps
sub
movsl
inc
xor
and
ja
stos
int
ret
xchg
inc
cmp
hlt
inc
cs
xchg
mov
out
or
gs
mov
int
into
push
jle
sub
xor
cmp
test
or
jno
popa
xor
add
pop
repz
out
call
dec
pop
repz
popa
dec
mov
xor
ret
out
or
xchg
pushf
lret
jl
xor
in
jns
decl
push
roll
arpl
gs
jae
mov
mov
outsl
mov
mov
in
test
lret
in
xor
cmp
push
cmp
jns
mov
inc
mov
or
add
ds
jne
jo
pushf
sarb
mov
inc
stos
and
mov
mov
call
mov
or
insl
mov
jno
hlt
add
mov
jmp
adc
xchg
jl
leave
push
and
xchg
jl
lret
jl
mov
loop
movsl
inc
inc
jge
loopne
into
imul
cmc
outsl
sbb
dec
popf
xchg
and
pop
pusha
mov
test
jnp
mov
push
test
rcl
mov
xchg
cmp
xor
pop
std
and
add
fistps
and
cmpsb
push
call
mov
xchg
fnstsw
in
and
xchg
and
cmp
push
daa
addr16
pop
pushf
xor
iret
pop
ds
jg
inc
lods
cld
sbb
inc
mov
or
ret
adc
sub
mov
mov
cmp
fisubs
ss
imul
pop
test
mov
jmp
insl
mov
std
out
push
xor
mov
jnp
mov
adc
add
mov
xor
inc
js
cmc
pop
dec
test
das
mov
xor
jno
loop
int
lahf
sbb
movsb
mov
push
popa
lret
jb
mov
in
mov
ja
daa
ficompl
fistpll
enter
gs
dec
mov
mov
xor
jecxz
arpl
roll
and
xor
movsb
test
xor
lods
test
xor
lds
dec
movsl
test
negb
push
cmp
pop
jns
and
and
dec
inc
fcom
xor
rcr
xor
ljmp
xchg
inc
fdivrs
lock
andl
shrl
shrb
int3
insb
scas
ret
cmp
pop
cmpb
mov
pop
leave
jge
xor
inc
mov
and
loope
ljmp
sbb
cmp
test
sub
jl
sbb
ljmp
xchg
cmp
or
mov
insl
dec
repnz
add
push
inc
loop
or
int3
lods
push
jge
sbb
mov
pop
insb
idivl
cmp
xchg
aaa
add
jg
outsl
enter
insb
jbe
mov
adc
jo
imul
sub
sub
sbb
or
lods
leave
xchg
adc
scas
aam
inc
jne
add
add
test
and
and
fildll
jae
cs
push
cmp
xchg
lods
test
sbb
mov
sub
add
and
and
dec
andl
xchg
push
lods
mov
out
cltd
xchg
imul
dec
sbb
push
test
je
sbb
mov
jecxz
dec
mov
add
loop
cmp
shrl
xchg
ja
sti
jns
mov
mov
pusha
push
jl
mov
pop
dec
mov
dec
dec
pop
xchg
std
mov
popl
shll
sub
mov
sarl
loopne
lcall
adc
push
pop
cwtl
mov
lock
xchg
js
in
fcmovnu
inc
xchg
test
or
jns
inc
out
and
int
or
scas
call
loopne
in
inc
jle
cmp
mov
dec
and
in
pusha
int
pop
js
icebp
cltd
dec
lsl
mov
dec
notb
arpl
or
cmp
and
and
and
push
insl
adcl
arpl
enter
outsl
pushf
fsubrl
test
push
punpckhbw
sbb
mov
pushf
xchg
mov
cltd
add
pop
sbb
dec
add
arpl
scas
inc
data16
cmp
movsb
push
lahf
stc
push
inc
je
mov
mov
push
cmpsl
lahf
pop
int3
and
push
push
lret
in
je
add
and
cmp
xor
cmp
cld
int3
es
test
addr16
in
cmp
and
dec
inc
jbe
add
test
ficoml
jb
mov
fiaddl
popf
shld
mov
popa
sbbb
dec
mov
in
jecxz
or
xor
jge
push
jae
cmpsl
xor
sub
int
sub
and
imul
inc
jl
js
hlt
arpl
int3
pop
jbe
adc
dec
inc
dec
jl
mov
punpcklwd
test
or
in
out
subl
or
sbb
lods
imul
aaa
imul
fmuls
test
pop
mov
push
xchg
pop
mov
jne
into
and
out
jne
lods
mov
jp
xor
cli
addr16
sbb
and
pop
scas
lcall
test
add
mov
fucom
sub
sub
je
sbb
insl
xchg
hlt
mul
or
popa
cmc
mov
cmp
add
mov
sbb
inc
les
insb
aaa
ja
push
icebp
mov
fmulp
push
aaa
in
and
xchg
data16
data16
insl
les
sbb
jle
iret
sbb
dec
sub
pop
into
jl
mov
loop
hlt
or
jne
mov
notl
pop
pop
loopne
lcall
add
inc
out
push
jmp
fildl
or
push
lods
lret
lock
sbb
push
inc
jg
aaa
mov
je
inc
xor
or
pop
or
mov
fdivs
jmp
nop
sbb
pop
ret
addr16
jne
push
sbb
pusha
imul
jle
add
add
sbb
cmp
sub
sub
ret
daa
jle
and
jae
shrb
xlat
jp
scas
sbb
sub
push
arpl
sub
adc
hlt
popf
inc
mov
sti
jo
mov
insl
and
lahf
or
or
test
lea
pop
aam
in
mov
test
das
adc
lea
mov
ds
insl
jns
add
lods
xor
scas
iret
xchg
ja
pop
cs
fiaddl
lods
addr16
mov
fildll
fbstp
or
pop
movsl
int3
or
ja
pop
sub
and
xchg
in
iret
sahf
in
nop
test
add
dec
mull
iret
shrb
dec
lods
mov
test
out
outsl
iret
pop
jb
lods
mov
ret
std
stos
test
mov
ret
add
cmp
sbb
mov
pop
and
dec
fcoml
insb
js
xorl
daa
popa
inc
mov
lea
ror
or
adc
aam
nop
insl
stc
push
mov
mov
movsl
cmp
cmc
cmova
leave
xor
imul
mov
arpl
xchg
insl
cmc
std
roll
negl
ficoml
in
mov
xchg
dec
lcall
lret
mov
enter
mov
dec
dec
test
popa
hlt
mov
jae
das
aad
aaa
jno
bound
dec
insl
mov
mov
dec
imul
xlat
imul
test
xchg
mov
xchg
lods
inc
out
ret
ret
jp
jo
sbb
bswap
push
sub
mov
jo
inc
inc
adc
jle
dec
in
aas
mov
rolb
ja
out
mov
lret
fs
mov
mov
xchg
inc
loop
inc
fwait
push
or
or
add
xchg
adc
popa
pop
cld
lock
dec
out
mov
shlb
dec
xor
das
or
or
mov
inc
mov
push
xorl
rorl
fistpl
in
jle
mov
push
xchg
mov
xchg
sahf
ds
insl
xchg
sbb
js
arpl
sahf
bound
dec
addr16
push
sahf
repz
out
inc
movsl
ret
sbb
movsb
test
push
imul
daa
push
loope
mov
sbb
jne
cmp
sbb
stc
inc
mov
xchg
add
sub
ret
setno
cmp
cmp
dec
adc
pop
xlat
fsts
push
inc
and
gs
mov
lcall
cmp
add
or
es
lock
inc
popa
jge
aad
pop
addl
push
movsl
fsubr
cmpsl
movsb
shl
xlat
or
pushf
adc
mov
or
or
mov
xchg
addl
xchg
fstps
cmp
popa
test
mov
adc
dec
test
jno
arpl
ja
add
cmc
movsb
add
xchg
push
popa
xchg
out
test
insl
lret
jno,pt
pushl
add
jp
pushl
mov
insl
cmp
scas
sbb
imul
jge
jb
sub
cs
inc
fistpll
or
mov
push
lods
imul
sar
inc
into
imulb
popa
in
mov
sahf
xor
cmpb
cmp
icebp
fcoml
or
xchg
pop
cmpb
lods
imul
and
int3
das
mov
stos
mov
pusha
and
add
add
movsl
pop
inc
je
fldl
inc
or
mov
lods
divb
cld
fwait
lea
xchg
and
jmp
sbb
divl
insb
jle
call
xor
int3
and
das
sub
int
pop
arpl
inc
pop
add
into
xchg
xor
ljmp
push
add
popa
into
xchg
jmp
mov
fs
clc
sbb
mov
push
sbb
mov
lret
or
jb
loopne
dec
outsl
jns
mov
add
mov
adc
lea
jb
push
rol
ds
stos
or
out
insl
xor
aas
add
mov
jns
out
or
jae
in
xor
loop
add
pop
addr16
les
xchg
cmp
imul
aam
out
into
inc
pop
xor
sbb
aaa
or
rol
pop
add
jne
xlat
outsl
jmp
xchg
or
nop
jge
shrl
mov
gs
xchg
lds
add
subl
or
and
sub
pop
dec
test
xchg
or
cltd
bnd
insl
scas
jmp
cltd
lret
pushf
stos
shl
daa
mov
daa
repz
cmp
xchg
push
add
inc
mov
in
out
xor
push
xchg
into
test
enter
push
push
push
shlb
pusha
mov
jne
ja
adc
sub
push
mov
daa
movsl
je
ljmp
bswap
fsubl
ljmp
loop
aam
dec
cmp
cs
xlat
push
mov
imul
inc
inc
push
ja
mov
stos
pop
pop
hlt
mov
mov
jnp
imul
xchg
or
movsl
mov
dec
or
rorb
sub
lods
idivb
and
iret
shl
enter
rolb
orb
mov
call
ds
xchg
mov
dec
xlat
sub
adc
mov
out
mov
arpl
dec
jl
and
or
in
insl
gs
lcall
testl
push
insl
repz
call
rcll
popa
pop
and
popf
xchg
jb
arpl
lock
dec
lock
add
push
dec
xchg
xor
ret
sub
mov
repnz
dec
push
pop
nop
or
add
cmp
call
pop
mov
inc
aaa
mov
mov
xor
or
xchg
jne
insl
sti
and
out
sarb
out
cmp
xchg
lahf
aaa
push
arpl
fimull
idiv
xchg
push
sub
mov
in
sub
jl
mov
jg
outsl
aaa
pop
mov
stos
es
jb
or
aad
xchg
push
add
xor
add
push
sbb
lods
mov
arpl
adc
popf
in
add
lea
cmpsl
addr16
mov
and
mov
in
mov
inc
mov
cmp
insb
jo
adc
push
inc
xchg
dec
push
push
test
or
lcall
fistps
mov
jae
lea
or
xchg
rorl
mov
xorl
ds
into
add
pop
jns
pop
leave
int
and
scas
sbb
lods
xlat
ret
cmc
cmp
push
imul
mov
jns,pn
lcall
shlb
lret
les
xor
int
dec
rclb
daa
jg
rorl
mov
xor
sub
or
filds
das
movsl
add
bound
cmp
xchg
jl
cld
xbegin
mov
out
stos
xor
adc
shrb
aad
push
insb
std
jae
imul
or
push
jbe
clc
mov
sub
arpl
inc
jge
sbb
ds
movsb
insl
dec
enter
in
sbb
pop
je
and
push
mov
pop
inc
push
mov
or
jbe
int3
mov
inc
out
inc
mov
cmp
out
movsb
ror
sahf
arpl
test
pushf
cltd
dec
cmp
ljmp
or
mov
jne
push
repnz
pop
mov
or
addl
in
pop
pop
push
jg
daa
add
xchg
rorb
daa
repnz
push
cld
loopne
jecxz
imul
pushf
mov
insl
jmp
out
adc
gs
cmp
dec
or
jb
jno
ss
inc
dec
mov
insl
xchg
mov
cmp
scas
hlt
adc
sbb
add
push
cmc
movsl
cs
adc
sbb
movsl
sbb
xchg
popf
popa
inc
lea
cs
push
xchg
fucomip
movsl
push
adc
in
push
gs
xchg
xchg
cmp
jb
adc
jge
dec
inc
aam
pop
clc
dec
xor
insb
sub
push
cmpsl
outsl
or
lcall
adc
bound
add
jg
arpl
ss
scas
xchg
nop
cmpsb
sub
push
push
mov
rcll
rorb
in
daa
adc
pop
cs
es
imul
popa
arpl
and
js
add
cmp
add
ret
adc
lahf
mov
mov
and
in
in
inc
or
mov
and
ret
movsl
lahf
mov
loop
les
pop
hlt
xchg
push
push
jmp
ficomps
sub
pop
imul
pop
pop
adc
fnstcw
fisubrs
aam
xor
mov
pop
xor
pop
or
aaa
xchg
daa
jle
xchg
jmp
rorl
cmc
dec
push
pop
ficompl
shrb
lods
fdivrp
inc
xchg
test
xchg
in
in
mov
jle
or
mov
jne
iret
in
iret
jbe
adc
stos
lcall
fildll
ss
negl
add
sub
cld
mov
mov
add
mov
ret
mov
xchg
sbb
sbb
repnz
data16
bound
loopne
arpl
mov
call
mov
lahf
and
xchg
in
out
mov
and
addr16
jae
arpl
push
sbb
xor
scas
in
jg
jl
jne
mov
xchg
xor
dec
fisubl
mov
jge
movsl
js
js
or
imull
bswap
dec
orb
jecxz
in
mov
fdiv
stos
xchg
test
call
mov
gs
mov
sbb
iret
fists
xor
add
dec
sbb
fwait
stc
add
cmp
and
xchg
mov
pop
insb
pop
and
imul
hlt
loope
add
mov
push
mov
cmpl
mov
jo
es
mov
out
je
sbb
cmpsl
mov
pusha
ljmp
leave
sti
xor
int3
dec
ret
mov
inc
mov
popf
fisubl
rol
popa
mov
cmp
scas
lahf
hlt
insb
movsb
movsl
jge
jl
xor
add
mov
fsts
xchg
inc
or
ret
cwtl
popa
mov
sbb
push
adc
call
daa
outsl
xchg
add
lods
xchg
xchg
bound
ljmp
adc
adc
fmul
cmpsl
aaa
sbb
subb
inc
cs
jne
jmp
lods
in
sbb
loop
and
popa
mov
xchg
xor
xchg
mov
lea
pop
in
ds
mov
xchg
aaa
mov
mov
or
or
or
mov
sbb
stos
or
inc
inc
mov
pop
sub
stos
mov
pop
and
adc
jmp
test
and
inc
repz
out
test
rcrb
es
sub
scas
sub
or
mov
pop
dec
sub
cmc
mov
lahf
scas
cmp
jle
pop
pop
dec
test
sbb
fstpl
insl
mov
mov
adc
imul
sub
cmp
int3
xchg
add
pop
aaa
xchg
aam
xlat
into
push
mov
xor
lret
jae
lods
mov
jg
sub
fs
mov
sbb
test
cmp
test
and
lahf
popa
icebp
and
mov
jmp
sti
cmpl
or
pop
inc
movsl
lahf
movsl
insl
and
adc
xchg
dec
arpl
add
dec
push
fs
aaa
push
or
gs
add
pop
movsl
pushl
insl
push
jno
insl
or
mov
sbb
mov
jl
out
fistpll
jp
outsl
cmp
pop
out
arpl
jno
aas
jb
out
and
xor
fmull
stc
lcall
in
gs
xchg
loope
mov
in
add
movsb
out
lea
lea
dec
imul
jb
shrb
popf
test
or
lods
push
popa
shll
pop
scas
dec
cmp
loop
cld
sbb
daa
xchg
pop
loopne
in
je
aas
sub
jne
cli
mov
push
mov
in
pop
ljmp
cltd
dec
fildll
lods
push
lock
cmp
lods
xor
daa
test
imulb
inc
rcr
push
xchg
or
nop
lods
je
push
sbb
aam
arpl
dec
mov
jnp
push
dec
mov
std
ljmp
lret
xor
aad
adc
inc
das
jp
xchg
arpl
out
insl
imul
dec
lea
or
fwait
insl
into
sub
sub
mov
in
daa
ljmp
in
cmp
cmp
push
scas
cmp
int
dec
hlt
outsl
add
or
lret
repnz
lods
inc
dec
leave
add
inc
jl
and
test
fdivrs
push
loop
jge
adc
xchg
rclb
insl
mov
pop
mov
sbb
insl
mov
jp
aaa
lret
adc
daa
mov
add
adc
out
hlt
or
pusha
or
out
sub
mov
xchg
stos
loop
mov
or
push
pop
ret
xor
mov
jge
dec
inc
jmp
mov
fwait
aad
mov
popf
push
idivl
jp
pop
je
sahf
pop
ficoms
aas
lret
loop
mov
mov
data16
in
loop
jbe
je
xchg
out
sbb
cld
test
mov
lods
xchg
jb
les
cld
cmp
inc
sti
mov
or
inc
mov
mov
jl
xchg
xor
jo
mov
scas
cmpsl
push
ljmp
popa
in
aaa
xchg
or
xlat
inc
hlt
out
addl
insl
mov
or
xor
dec
aaa
inc
sub
hlt
cli
iret
in
mov
popa
push
enter
out
and
dec
arpl
or
inc
shll
dec
popa
and
inc
jnp
pop
inc
sub
push
pushf
addr16
testb
pop
pop
adc
cltd
inc
xor
sub
add
repnz
cmpsb
sub
xor
sub
movb
jmp
arpl
les
ljmp
in
rorl
roll
sar
xor
sub
mov
cwtl
js
push
rcr
xchg
out
testb
xor
shlb
push
dec
pop
mov
jnp
lods
mov
cmp
jle
cmp
out
jo
cmp
daa
dec
sbb
in
mov
int3
mov
push
testl
push
lret
push
hlt
cmp
ss
insl
jecxz
or
or
inc
jbe
repz
subb
add
stos
mov
and
std
add
dec
dec
mov
pop
ss
andb
push
je
add
mov
aad
mov
mov
lea
imul
or
and
popf
and
dec
prefetch
pop
lcall
pop
jno
insb
mov
imul
push
repz
dec
into
repnz
ficoms
loopne
sub
sub
cmpsb
insl
sub
sub
jp
xlat
mov
mov
daa
cltd
fcoml
mov
pop
add
sub
xchg
test
bound
jbe
pop
fwait
lcall
int
movsb
jb
clc
popf
mov
sub
and
aad
and
enter
mov
mov
push
mov
adc
das
daa
popa
out
je
sar
xchg
stc
sbb
and
mov
sbb
pop
pop
shlb
gs
pop
lock
std
dec
dec
inc
fidivs
scas
mov
dec
or
or
pop
jne
xchg
gs
or
sahf
outsl
jbe
in
xlat
push
inc
addr16
fs
inc
cmp
sub
out
xchg
ret
pushf
addr16
adc
sub
ja
mov
mov
push
sbbl
imul
loope
fiaddl
push
push
sbb
mov
cmp
sbb
imul
sbb
int3
sub
mov
sub
outsb
fs
rcll
ljmp
adc
add
fimull
or
rcrl
mov
loopne
adc
setle
push
clc
sbbl
jg
mov
mov
mov
lods
imul
aaa
pop
add
push
arpl
mov
inc
and
dec
xchg
lods
lods
andps
sbb
into
dec
icebp
jb
xor
mov
add
fwait
xchg
les
andl
adc
inc
or
sahf
lea
mov
lret
ret
imul
cld
in
int
add
test
and
std
in
lahf
jne
into
mov
in
add
ds
jbe
and
dec
cmp
sub
in
cmpsl
mov
mov
cmpsb
outsb
jmp
and
sbb
xlat
scas
inc
pop
inc
addr16
cld
add
mov
shlb
out
shl
xor
or
imul
pusha
fwait
push
xchg
std
and
and
jb
add
or
adcb
mov
xchg
jge
out
push
popa
jge
inc
popa
dec
xor
add
jbe
ja
cmpsb
movsb
mov
aad
xor
repnz
mov
pop
aaa
inc
xlat
mov
insl
jb
xchg
pop
iret
push
lea
cmc
fidivrl
mov
lcall
cmp
aas
out
lea
daa
in
decl
pusha
daa
adc
mov
sbb
out
sbb
cmp
mov
dec
sub
ss
scas
shll
add
out
loopne
lcall
int3
or
aad
aad
cmp
std
mov
mov
xlat
mov
cmp
sub
cmp
jno
outsl
insl
cmp
in
aad
mov
push
in
inc
imulb
gs
into
cmp
sbb
push
lds
mov
mov
sub
add
enter
aas
gs
scas
push
jne
movsb
xchg
test
sub
popa
fldl
jno
xchg
or
cmpsl
rcrl
ret
lods
movb
std
push
pop
fwait
pop
lods
popf
dec
lea
int
jnp
jns
add
rolb
testb
sti
jo
sti
push
push
or
rolb
movb
shl
test
inc
and
cld
jno
lods
mov
xchg
jns
adc
xor
cmp
jecxz
jae
push
jne
jo
out
dec
mov
std
sahf
daa
daa
ljmp
sub
xor
shrb
jle
arpl
jns
xchg
lock
scas
cmp
mul
fldt
sbb
std
pop
rcll
push
bound
sub
movsl
sub
xchg
pop
loop
mov
popf
jnp
arpl
xchg
xor
push
or
fmulp
addr16
outsl
out
dec
fldcw
xchg
mov
loopne
jb
xorb
xchg
fwait
stos
xchg
shr
imul
scas
cmp
mov
rcrl
sbb
pop
push
notb
add
adc
ret
or
subb
jns
in
repz
fmull
pusha
mov
mov
sarb
mov
popl
movsl
push
insl
cmp
or
lds
inc
decb
and
cmp
xor
jns
loope
roll
fnstcw
push
pop
jb
filds
out
mul
jno
mov
push
add
fldt
or
jbe
add
add
daa
mov
popa
imul
insl
jb
pop
jmp
in
add
insl
stc
in
shlb
out
lods
subb
jb
cmpsl
cmp
lods
jg
pop
in
mov
ficomps
gs
dec
ret
mov
cmp
in
mov
push
cmp
sub
iret
gs
xor
dec
jb
jbe
fstpt
lods
xchg
mov
out
mov
pop
scas
push
cmp
and
rol
cmp
mov
popa
cs
jnp
das
addr16
mov
lahf
and
aam
xor
out
daa
test
ja
add
xlat
inc
addr16
push
xor
cmp
andnps
or
stos
fs
les
push
popf
ja
out
jge
or
cmp
dec
adc
in
mov
loop
cmp
sub
stc
clc
mov
mov
mov
cmp
test
mov
or
jb
lahf
sub
xor
dec
dec
int
push
in
inc
sahf
xchg
jnp
dec
lahf
aaa
ss
sub
nop
shl
cmp
test
aam
clc
scas
mull
ficoml
mov
sub
lcall
lods
jbe
in
or
mov
cli
and
add
hlt
popf
dec
cli
outsl
cmp
out
or
inc
xchg
int
scas
jmp
inc
adc
lret
out
fldt
mov
pop
bound
in
pop
out
cmp
cmp
fdivs
movb
mov
je
jge
sub
or
sub
or
mov
mov
pop
test
arpl
xchg
cmc
or
lahf
scas
repz
pop
iret
pop
inc
aaa
or
daa
push
popf
insb
jle
ljmp
jno
dec
orl
add
mov
cmp
orl
inc
repnz
dec
xor
loop
das
and
mov
mov
insl
mov
add
or
sar
nop
mov
pop
out
inc
jno
jmp
jne
lods
lds
push
test
out
in
or
cmp
jg
mov
mov
mov
arpl
xor
lret
push
pop
insl
add
shrb
rolb
aad
adc
movsl
shrb
push
and
mov
fidivrs
sub
xchg
std
jns
js
mov
repz
jge
cld
fildll
int
xor
enter
sub
fsubp
mov
repnz
aas
je
add
xchg
fisubs
adc
gs
imul
out
adc
outsl
and
movsl
push
mov
popa
push
jns
hlt
push
xlat
addr16
jae
xor
pop
jne
fs
dec
out
gs
das
cwtl
test
sub
push
test
xlat
int3
and
jbe
cld
or
and
cmp
or
sub
jns
mov
scas
dec
cs
imul
test
adc
xchg
test
loope
dec
pop
enter
clc
pop
punpckhwd
mov
clc
js
cld
and
iret
clc
movsl
pop
clc
imul
or
sub
pop
pop
lret
inc
arpl
jge
adc
loopne
arpl
insb
data16
sub
pop
sub
jmp
shr
sbb
pop
pop
push
mov
aam
jo
adc
das
hlt
cmc
adc
add
lret
into
fisttpll
mov
fs
xchg
gs
aas
insb
add
negb
pop
fsubl
add
loope
dec
sub
int
mov
jae
dec
out
dec
test
ficompl
fwait
test
insl
or
inc
xlat
int
ss
xor
call
mov
adc
int
addr16
push
push
mov
into
in
arpl
and
in
jo
sub
cmp
dec
push
out
jne
and
cmp
add
in
sub
mov
jnp
sub
lods
orl
or
call
fs
iret
cmpsb
mov
xlat
flds
mov
mov
cmp
daa
adcb
xchg
jns
mulb
jno
into
cltd
lcall
loop
outsl
ss
ljmp
push
cmp
andl
mov
bound
call
aas
sub
jns
lret
mov
int3
jno
insl
push
ds
lea
lods
sub
int
aaa
push
adc
xchg
and
dec
sarl
das
das
int3
jmp
mov
mov
adc
je
lods
jp
outsl
test
jg
int3
inc
xor
ret
pop
mov
jae
jg
out
sub
fstps
or
push
jno
mov
aad
push
push
mov
mov
xchg
data16
mov
fcoms
xchg
clc
in
test
add
mov
and
scas
mov
adc
or
std
fsubrs
mov
lahf
test
test
rcl
push
mov
daa
loop
les
push
jg
leave
pop
pop
pushl
cmp
jle
mov
sbbb
xchg
mov
mov
cmp
repnz
or
xor
pop
cli
mov
mov
fidivrl
mov
mov
ja
out
pop
loopne
lds
fcmovnb
sahf
adc
push
jae
mov
dec
out
shr
xor
into
jns
inc
subb
mov
mov
movsl
add
jecxz
sub
jb
mov
scas
xorl
ja
or
xlat
pop
rcrl
scas
xchg
stos
outsb
repnz
push
adc
push
and
jne
sub
xlat
out
in
inc
outsl
pop
mov
jecxz
insb
fs
and
mov
movsl
ss
lods
cmpsl
rorb
imul
es
mov
jg
add
addr16
aaa
or
mov
push
call
xor
fisttps
test
mov
arpl
andb
sub
mov
mov
push
insl
dec
mov
outsl
xchg
pop
sahf
insb
es
and
sti
call
xor
dec
add
scas
popf
test
mov
insl
mov
iret
insl
fsts
shrl
ret
test
hlt
idivl
scas
cmpsb
aad
inc
insl
lods
scas
daa
jb
lret
das
push
lcall
push
arpl
xchg
add
or
test
cmpl
push
and
pop
pop
pop
aam
and
int3
popa
pop
or
in
and
insb
fstpt
or
or
and
or
dec
lods
imul
xor
cmpsl
xchg
mov
orl
cld
jle
cmpsl
add
and
jmp
movsl
pop
push
or
adc
dec
or
test
cmp
fisubs
push
cwtl
imul
lcall
ja
cs
xchg
adc
sbb
movl
bound
add
aam
into
es
das
jle
andps
fisubrs
jmp
arpl
jge
or
aaa
mov
in
mov
or
and
add
insl
ret
pop
pop
lea
test
or
pushl
in
mov
xchg
movsl
leave
inc
lea
imul
xor
xchg
and
outsb
dec
addr16
scas
push
adc
mov
cs
dec
add
jo
adc
jl
outsl
dec
mov
popa
cmc
and
push
xchg
add
xchg
ret
loope
pop
in
cmp
sbb
inc
lds
inc
xchg
or
pop
fcoml
es
mov
cld
jns
xlat
inc
int
xchg
aaa
mov
mov
mov
inc
ja
and
popf
daa
mov
call
jl
sti
push
jb
scas
in
add
push
movsl
or
test
stos
mov
daa
pusha
call
movsb
adc
jnp
into
xchg
mov
push
push
and
sub
jmp
movsl
mov
jmp
seta
imul
imul
iret
cld
pop
gs
das
and
cmpsl
add
push
shlb
lods
cld
je
bound
pop
cli
xorl
sbb
or
imull
push
mov
dec
mov
loop
bound
add
jae
addr16
pop
sbb
ljmp
cmpsl
gs
fcmovbe
movmskps
repz
jecxz
je
aas
outsl
mov
mov
mov
sub
xor
test
int3
arpl
jecxz
aaa
xchg
repz
dec
cmpsb
pop
das
jl
xor
or
push
test
xchg
jge
in
jge
in
mov
and
cld
jecxz
mov
lcall
cmp
or
mov
and
pop
or
cli
mov
or
popa
sub
lods
mov
push
mov
cmpsl
xor
test
sti
mov
adc
enter
mov
cltd
jg
lahf
cmpb
scas
lahf
mov
push
std
jo
pop
xor
test
vpmulhuw
push
insb
pop
je
lea
pop
pop
in
mov
rorl
loope
leave
jecxz
add
push
jb
fldz
inc
pop
cmpsl
test
push
cmpsl
je
dec
pop
movsb
loop
ficoms
repz
rclb
pop
fucomi
ds
cmp
pop
adc
mov
pop
call
pop
mov
jle
test
adc
jnp
and
add
mov
notl
dec
repnz
cmp
mov
jmp
add
mov
adc
push
xchg
xlat
sub
jb
sbb
sbb
xchg
popa
gs
mov
xchg
cld
xchg
and
loope
mov
popf
mov
push
add
push
testb
jle
les
scas
jne
aad
aaa
pop
jns
mov
push
jne
and
mov
popf
testb
stos
and
lods
shlb
lods
pushf
xchg
arpl
loope
in
imul
pop
loope
cmp
mov
and
movsl
jns
fidivrs
pop
fld1
popa
mov
aas
or
ljmp
add
jp
hlt
lea
and
mov
inc
pop
ret
jno
mov
shrb
sbb
dec
inc
int
and
sarb
xchg
adc
jmp
dec
cmp
sbb
mov
js
insb
jle
mov
add
in
fwait
int
mov
es
xlat
jge
add
cli
jae
sub
jne
push
out
xchg
fwait
or
push
idivl
pushf
aad
enter
dec
fmuls
mov
sub
push
test
adcb
in
lret
insl
xchg
mov
int
iret
or
icebp
adc
xchg
dec
pop
jno
pop
popf
mov
fs
in
cmp
jle
js
mov
dec
sub
pop
mov
fsubp
xlat
imul
add
clc
inc
fdivs
jbe
mov
sbb
sti
movsb
mov
es
and
cli
popf
xchg
and
push
dec
xchg
fucomip
lea
js
ljmp
fucomp
mov
pop
lods
scas
pop
in
mov
mov
jb
push
in
scas
enter
mov
int3
xchg
cmpsl
int
cmp
mov
lods
ljmp
jle
mov
mov
push
sbb
sti
jmp
insb
bound
mov
mov
or
mov
imul
scas
into
jbe
adc
mov
in
repnz
cmpsb
push
lret
pusha
sub
xchg
ds
repnz
jbe
xchg
adc
adc
mov
sbb
push
jns
insl
ljmp
outsl
das
lods
lahf
mov
and
sbb
cmp
imul
clc
lods
fdivrs
push
inc
mov
push
ret
rcl
popa
daa
pop
jp
sub
push
jle
outsb
push
fidivs
stos
in
push
adc
cli
shl
add
adc
sub
and
addr16
dec
es
push
movsl
dec
add
insb
lods
cmp
cmpsl
mov
sub
and
loopne
xor
dec
insl
ljmp
mov
xor
add
mov
daa
jno
hlt
arpl
add
jmp
ljmp
addr16
add
ret
or
mov
dec
lret
outsl
sub
ljmp
add
dec
and
insb
jns
je
imul
mov
cmpsl
add
lock
mull
jg
mov
iret
dec
scas
imul
jne
dec
std
cmp
iret
pop
outsb
push
inc
push
movsl
fisttpll
adc
push
sahf
and
jns
xor
mov
inc
cli
jnp
ret
insb
gs
dec
lods
fs
in
dec
popf
imul
push
lods
imul
cmp
rcl
leave
das
bound
rcrb
loope
fsubs
pop
xor
push
cmp
inc
pop
pushf
iret
add
sub
clc
sub
arpl
push
mov
out
pushf
xor
jne
pop
push
int
bound
xlat
mov
jge
ljmp
lods
lea
call
inc
jb
pop
sarb
jg
and
aas
inc
sarb
adc
mov
xor
nop
sahf
push
fldt
push
lods
shll
sbb
sub
pop
frstor
lret
and
cmpsb
lea
sub
pushf
lea
push
xchg
lret
inc
push
fcomip
inc
mov
dec
push
insl
in
jl
test
pop
imul
cmp
in
xchg
lahf
std
add
gs
and
lds
sub
or
out
dec
insb
xor
xchg
ljmp
nop
push
je
mov
xchg
out
ficomps
lods
ss
ret
cmp
pop
outsl
sub
imul
and
lea
movsl
add
cli
daa
sbb
loop
xchg
cmp
movsl
lock
repnz
cmp
and
cmp
push
sbb
pop
push
inc
sarb
mov
decl
aad
mov
test
mov
cs
shr
cmp
pop
jg
mov
xchg
insl
dec
lods
xor
jae
aad
xlat
push
xchg
aad
iret
frstor
sbb
clc
adc
cmpsl
jecxz
inc
or
jge
jns
addb
sub
xchg
and
push
sbb
daa
jp
and
adc
jge
mov
jle
push
je
cmp
mov
in
bound
sub
push
xchg
stos
jecxz
add
into
test
pop
push
fisubs
loope
pop
test
push
or
jp
out
gs
lea
dec
push
rolb
popf
dec
gs
push
jne
jg
fs
cli
sar
mov
push
and
mov
outsl
iret
pop
gs
push
pop
test
lds
fisubrs
mov
in
mov
xchg
cmc
andl
cmpsl
bound
and
dec
daa
jge
fldcw
je,pt
mov
daa
mov
imul
push
leave
or
es
leave
dec
push
mov
jmp
or
pop
into
mov
std
pop
adc
pop
repnz
push
fs
sahf
add
jge
adc
cmp
push
or
test
inc
std
jmp
lods
xlat
push
jge
jecxz
bound
enter
and
dec
cmp
add
push
cmpsl
ja
dec
bound
lods
fwait
jg
andb
gs
shlb
imul
jnp
sti
lods
mov
pop
sub
lods
jge
fsubs
jle
dec
pop
lods
je
sti
jnp
popa
mov
shll
inc
bound
outsb
push
xchg
aaa
popa
sahf
mov
lret
gs
or
pop
push
fdivr
mov
movsl
cmp
inc
mov
xor
jne
test
dec
in
add
scas
inc
xlat
and
gs
sbb
push
push
cmp
nop
stos
aam
andb
fmull
add
ret
dec
add
cmp
iret
xor
cmp
pop
clc
adc
in
in
push
cmp
cmp
dec
loope
sbb
ds
in
cmp
jns
arpl
push
cmp
and
lcall
sbb
push
adc
sarb
adc
cs
sub
sbb
push
into
add
adc
mov
dec
out
jne
mov
adc
fstps
addr16
stc
cli
jne
pop
cs
arpl
push
gs
test
sub
fiaddl
loope
mov
push
xchg
add
outsb
adc
xor
rorl
pop
sub
jl
jno
dec
lock
ret
dec
and
pop
fwait
and
push
nop
gs
scas
add
stos
mov
add
sbb
pop
pop
cmp
arpl
pop
imul
loopnew
subl
add
push
mov
jb
ja
je
aad
stc
outsl
insl
jecxz
pop
push
adc
shlb
dec
cmp
andb
push
mov
fcomps
jbe
and
xchg
divl
sub
ret
and
gs
adcl
enter
gs
insb
jae
mov
lods
insl
aad
popa
add
sarb
aad
pop
and
arpl
inc
ljmp
scas
lods
mov
sub
cld
mov
ds
cmpsb
add
int
lea
mov
subb
add
mov
test
popa
mov
sbb
xor
ret
xchg
shrl
incl
cld
ds
add
xchg
fisubl
test
jne
push
xor
loop
movsb
adc
lcall
rcll
iret
and
stos
mov
int
xchg
mov
imul
cmp
add
daa
mov
jae,pt
sbb
dec
push
int3
add
pop
cli
mov
pop
cmpsb
pop
in
push
int3
dec
inc
jnp
sub
stos
pop
mov
mov
outsb
and
xchg
adc
add
cli
lcall
and
dec
jns
stc
loop
mov
jmp
add
pop
imul
cld
xchg
pop
in
mov
sbb
jle
mov
imul
dec
imul
mov
fisubl
add
xchg
test
shrl
in
inc
lods
popf
imul
ja
sbb
jb
sub
scas
cmpsl
jg
push
sbb
sub
xchg
mov
xor
ret
movsl
xchg
jp
insb
stc
lret
inc
or
out
addr16
lret
int3
sbb
push
js
gs
popf
out
sub
jp
xchg
aaa
loopne
cmpsl
pop
add
enter
push
or
into
int3
jmp
arpl
fstpt
xor
xor
into
pop
in
inc
push
out
fists
and
pop
pusha
dec
push
jmp
mov
aam
jecxz
add
push
mov
and
jno
and
adc
pop
fisubrl
xchg
rcl
add
push
pop
leave
pop
fmull
jb
push
daa
fadd
rolb
mov
mov
push
mov
imul
sbb
in
push
mov
std
pop
xorl
jle
insl
xchg
xchg
jns
arpl
push
insb
push
and
inc
cmpsl
stos
sub
push
stos
jns
jle
cmp
pop
push
or
imul
pushf
popa
in
inc
mov
xchg
dec
xchg
scas
inc
lds
push
aaa
jmp
or
repnz
sbb
xlat
loopne
pop
cmc
jge
cmpsl
negl
in
jle
insl
hlt
add
mov
shlb
out
arpl
rcr
filds
and
stos
jg
pop
sub
faddl
fdivrp
adc
test
push
test
jl
mov
pop
bound
sbb
arpl
sbb
add
fldl
cmpl
xchg
movsl
jb
std
cld
cwtl
sub
sbb
std
test
lea
pusha
test
insl
les
ljmp
or
fs
pop
inc
mov
push
push
mov
jne
xchg
pop
add
mov
insl
insl
xchg
pop
and
insl
sbb
add
mov
movsw
push
aaa
out
pop
pop
mov
das
cmp
xchg
jae
pop
or
aaa
cmpsl
xlat
jbe
jns
dec
dec
sub
sbb
cli
dec
jno
out
pop
shlb
inc
and
into
aaa
dec
imul
add
pop
outsl
rclb
movb
xor
ret
clc
fimuls
imul
cld
frstor
test
sbb
dec
xchg
repnz
cwtl
movsb
cmpsl
xchg
sahf
xor
sti
pop
cwtl
dec
sbb
test
sbb
add
loopne
outsl
rcrb
push
mov
repnz
movb
out
gs
pop
call
push
mov
nop
arpl
js
xchg
dec
cmp
xchg
arpl
and
negl
insl
xor
movsl
les
movsl
cwtl
push
adc
das
mov
movsb
and
gs
push
or
cmp
insl
add
insl
ret
gs
jge
popf
jne
imul
sub
outsb
xor
xchg
dec
stos
xchg
repnz
jl
pop
add
mov
test
rcll
dec
and
push
call
pcmpeqw
and
lods
ljmp
jno
out
xlat
out
sbb
push
fdivs
jae
sub
loop
or
hlt
jecxz
fldenv
mul
arpl
sub
push
and
popa
inc
lret
or
aad
dec
gs
lods
jns
and
jne
xchg
shr
push
push
cltd
notb
mov
or
cmp
and
and
add
xchg
inc
and
lahf
iret
dec
xor
pop
int3
mov
fdivl
test
or
test
cld
mov
insb
mov
xchg
insb
movsl
cmp
mov
push
test
in
push
fs
push
das
mov
bound
jg
adc
fmul
cs
test
ljmp
test
gs
xor
insb
addr16
hlt
lahf
jns
jl
jge
lret
pop
out
dec
testl
cmpsb
shl
mov
sub
add
mov
out
stos
sbb
iret
js
rcr
push
outsb
in
out
shl
push
inc
or
adc
test
xor
cmp
in
mov
pop
loope
gs
pop
mov
mov
and
daa
adc
aam
aam
or
sbb
shrl
in
popl
jp
xchg
mov
mov
mov
push
test
lods
dec
ss
xchg
aaa
cld
sbbl
in
mov
les
jns
packuswb
inc
mov
ret
and
cmpsl
aas
or
out
fidivs
popf
setns
cltd
push
das
dec
cmp
jb
pop
ljmp
jbe
aaa
and
cltd
hlt
push
in
stc
repnz
ret
and
mov
xchg
dec
fisubs
and
insl
inc
enter
cmp
push
inc
lods
jo
insb
in
mov
aad
pop
jns
mov
pop
pop
jp
cmp
push
enter
and
xchg
pop
mov
lea
dec
push
mov
and
aaa
push
divl
sbb
sahf
int3
js
fstpl
je
test
adc
mov
mulb
mov
cld
loopne
lods
inc
subb
dec
js
jnp
add
mov
pop
jno
out
aaa
jmp
cmc
dec
daa
insb
scas
jg
dec
lods
xchg
and
xor
out
daa
add
add
into
cmpsl
mov
cmp
sub
or
out
cmp
cmp
lods
mov
stc
sub
insl
xor
dec
insb
cmpsl
fisttps
ds
fs
out
call
test
imul
mov
xchg
push
aaa
lods
inc
shlb
fldcw
idiv
cmpsl
out
lret
xchg
adc
sub
test
jg
aam
scas
mov
mov
in
loop
clc
or
js
jb
push
lds
je
inc
gs
bound
idivl
sbb
test
inc
fnstcw
addr16
push
fs
sbb
sbb
cmpsl
and
out
frstor
test
test
or
ret
push
insb
mov
push
movsb
ja
sub
pop
punpckhwd
mov
into
je
mov
push
or
int3
dec
dec
out
je
push
mov
cmp
daa
adc
dec
dec
xchg
rcl
lcall
lods
xchg
xor
cmpsl
fwait
inc
cld
lods
fsubl
pop
jb
stc
cmpsl
dec
ss
rcrb
add
xchg
addb
sub
test
daa
ret
xchg
syscall
xor
push
push
adc
repnz
mov
pop
and
or
push
je
mov
mov
mov
das
pop
addl
add
shr
scas
iret
pop
push
jns
adc
bound
test
push
mov
imul
out
mov
jbe
mov
adc
sub
push
loope
or
mov
pop
adc
sub
das
ja
mov
enter
jae
jmp
cs
int
pop
into
push
xorb
xchg
sub
les
insl
inc
jae
jl
pop
pop
adc
cmpsb
subb
inc
stos
pop
lods
and
push
sbb
sarl
fisttpll
out
add
dec
jle
aas
clc
inc
jb
adc
aaa
insb
cmp
cmp
in
xchg
cmpsb
mov
cmp
adc
mov
arpl
mov
lds
imul
cmp
loop
push
add
cmp
inc
or
xor
adc
mov
out
shlb
sub
popa
mov
mov
daa
std
out
push
mov
pop
inc
cmp
imul
or
xchg
fidivrl
cmc
push
test
and
sbb
cmp
xlat
inc
mov
jge
jne
in
daa
lods
jns
xor
scas
jg
jmp
lahf
popf
int
xchg
mov
xor
mov
scas
and
in
sarb
xchg
mov
jb
fnstcw
add
popf
lret
inc
les
imul
fsts
aaa
shrb
pop
aas
cmp
adc
push
and
fidivrs
cmp
cltd
fwait
repz
fmulp
fstps
gs
fmuls
or
push
in
jp
sub
cmp
cmp
push
add
mov
les
into
inc
push
das
and
fwait
sar
lahf
pop
dec
mov
clc
insb
inc
int
pop
and
push
inc
ret
das
lods
or
sub
stos
popa
out
stos
gs
add
jbe
jle
pusha
sbb
into
jecxz
in
je
roll
rcr
mov
daa
inc
and
or
inc
das
sbb
arpl
xlat
dec
jecxz
push
in
push
insl
inc
xchg
xchg
mov
push
int3
lret
popa
outsb
insb
in
lahf
popa
clc
push
cli
bound
scas
xor
or
ficoml
mov
xchg
mov
movsb
and
fisubrs
sub
outsb
mov
pop
int
cmp
arpl
in
sbb
gs
insb
adc
aad
xchg
subb
hlt
sbb
jmp
popf
pop
or
xor
push
push
add
test
inc
imul
shlb
sub
sbb
mov
cmp
sub
pop
dec
mov
aas
and
popa
paddsb
out
shrb
jno
cltd
in
loopne
test
daa
lods
dec
inc
and
scas
and
insl
push
mov
bound
popl
ljmp
sub
imul
mov
sbb
mov
pop
movsb
in
sub
popa
sub
push
xchg
xor
pop
daa
jmp
jg
stos
shrb
mov
cs
push
mov
addb
jae
lahf
imul
cmpsl
jbe
dec
mov
and
sbb
bound
add
inc
mov
lret
fcmovu
dec
lgs
lret
jmp
fisubs
pop
jg
and
jno
sub
outsb
xchg
sub
les
and
push
push
sarb
cld
jo
icebp
ds
add
shrl
sti
stc
add
arpl
popa
lea
imul
mov
jge
mov
or
enter
addr16
dec
cmp
lock
pop
xchg
jmp
fs
in
mov
test
jno
inc
pmovmskb
sub
and
adc
or
fwait
ja
lret
mov
dec
dec
lods
xlat
push
sub
xchg
jge
pop
mov
test
mov
jmp
and
lock
clc
in
lret
or
mov
jns
xchg
mov
push
cmp
and
sub
cmp
sub
pop
imul
test
ret
cmp
xor
push
dec
daa
mov
int3
daa
stos
fsubl
xor
popf
xchg
aaa
jge
int3
in
fsubl
insl
pop
or
test
es
aaa
pavgw
clc
sbb
lods
aaa
outsb
leave
test
out
popa
xchg
push
xchg
leave
stc
pop
lea
outsl
call
test
cmp
repnz
insl
daa
mov
xor
and
insb
and
or
aaa
imul
lods
adc
mov
jne
jge
bound
sbb
xor
pop
or
push
movsl
xor
pop
xor
test
jl,pn
loopnew
and
lods
les
pop
aaa
gs
lods
std
push
and
int
inc
mov
in
cmp
xchg
or
aad
fcomp
xor
out
sarb
stos
or
sbb
movsb
inc
int3
push
mov
or
lret
mov
mov
cmp
sti
adc
fiadds
sbb
adc
js
mov
sbb
mov
fnstcw
data16
jg
ret
into
pop
std
fbld
js
roll
testb
jb
outsb
insb
sbb
or
int3
lods
addb
mov
inc
mov
xlat
lods
cmp
loop
movsl
jne
popa
popa
mov
jns
jecxz
sub
mov
or
loop
and
jge
adc
in
gs
push
mov
pop
imul
xchg
insl
mov
jne
dec
xor
mov
shlb
mov
add
pop
cmp
pop
or
mov
inc
lods
xor
mov
bound
clc
pusha
pop
or
in
out
addl
mov
daa
or
mov
inc
xor
xchg
pop
repnz
popa
sbb
jne
lcall
in
insl
int
push
aam
cmp
mov
mov
mov
shll
jl
cmp
sbb
aas
test
stos
lods
xchg
loop
jge
lahf
nop
hlt
push
push
mov
out
sbb
shrb
out
inc
test
mov
testb
repnz
in
iret
test
jp
dec
xor
in
das
mov
jae
jge
push
adc
lcall
or
inc
ljmp
cli
cmp
xchg
cmpsb
daa
mov
addr16
mov
inc
mov
fstpl
sub
pop
or
and
stos
add
out
xor
sbb
fs
mov
leave
cli
arpl
sub
imul
outsl
out
push
imul
int
lahf
pop
dec
fisubrl
scas
mov
ret
int3
add
fnstenv
lahf
sub
stc
hlt
dec
rorl
add
and
jbe
or
in
dec
nop
notl
insb
leave
mov
lods
loope
and
mov
loop
and
je
pop
shrl
in
adc
leave
int3
adc
imul
je
aaa
icebp
je
sbb
xchg
enter
mov
test
pop
jbe
push
pop
andb
sub
mov
cli
sbb
sub
ja
push
cmp
jnp
inc
pop
fmulp
out
lock
out
test
stos
ret
hlt
dec
in
cmpsl
xchg
mov
sbb
stc
xor
dec
aad
negb
in
sbb
ror
jecxz
outsl
mov
in
daa
gs
jae
push
jecxz
add
and
xchg
cmp
mov
stos
sub
mov
xlat
je
les
lret
je
sbb
or
scas
fwait
add
xor
or
fld1
mov
fs
mov
pop
cmp
stos
cmp
mov
add
mov
ret
ljmp
insl
xchg
sub
insb
push
dec
pop
xchg
push
xor
or
pop
lods
or
int
scas
je
cmp
lock
mov
push
jmp
scas
inc
in
cmp
sbb
stos
mov
ja
out
jae
mov
out
add
sub
jmp
mov
cmp
fcoms
jbe
popl
pop
incb
add
jns
pop
dec
push
stos
push
in
inc
xchg
jecxz
daa
ret
adc
sub
mov
andl
imul
sbb
in
sub
iret
xor
daa
test
or
xor
lahf
xor
or
cwtl
mov
and
scas
insl
insb
dec
and
lods
push
popa
jp
push
movsl
mov
lds
cmp
dec
and
xorb
xlat
mov
cli
ret
insb
or
mov
bound
dec
sub
xor
sbb
xchg
fistl
test
js
mov
or
leave
push
inc
jo
mov
mov
add
mov
into
mov
cmp
sbb
icebp
push
jecxz
cmp
insl
sbb
test
scas
cmp
push
mov
adc
mov
repnz
xchg
mov
or
in
das
xor
push
imul
adc
decb
out
lret
das
fiaddl
mov
scas
scas
or
jne
jle
std
push
shrl
jg
int3
xchg
jne
inc
outsl
movl
sub
in
sub
pop
xchg
inc
xchg
mov
leave
inc
dec
mov
mov
add
mov
dec
or
out
jl
into
pop
mov
xor
mov
test
dec
mov
and
or
test
mov
xchg
mov
das
mov
aaa
ret
insb
in
add
adc
mov
pop
mov
cmp
inc
cmpsb
push
mov
xor
addr16
pop
ret
push
out
and
adc
bound
lock
sbb
dec
insb
mov
sub
xchg
add
scas
outsl
pop
sub
sub
jge
shll
pcmpgtw
or
addr16
mov
adc
ret
push
insl
jbe
into
add
mov
lcall
pop
imul
loope
cmp
inc
gs
cld
in
iret
xor
jno
xor
test
pop
inc
inc
or
sbbb
dec
sub
push
and
xchg
sbb
pop
das
cmp
lock
mov
sbb
or
mov
mov
and
xchg
sbb
arpl
lock
adc
aaa
mov
push
add
inc
push
sbb
hlt
loop
out
cmc
push
insb
pop
lods
mov
mov
ret
sub
je
mov
mov
add
mov
aad
gs
test
inc
fs
out
add
cmp
jle
lcall
and
bound
daa
cmpsl
xor
jb
in
mov
sub
push
mov
push
xor
or
push
popf
jp
js
sahf
adc
mov
pop
push
fs
cli
xor
inc
addr16
in
xlat
jbe
jl
sub
test
fdivrl
arpl
out
int
lock
mov
ja
push
xor
loopne
nop
cmp
in
sti
scas
dec
stc
fwait
mov
pop
lods
ljmp
pop
adc
jl
pop
daa
inc
and
sub
jb
mov
xchg
push
mov
icebp
mov
cmpb
xchg
fwait
push
imul
outsl
pop
push
ret
aaa
int3
popf
addb
mov
push
inc
sbb
adc
aam
xor
xor
xchg
xchg
mov
and
xchg
scas
dec
ljmp
ret
push
imul
inc
out
repz
in
gs
cmp
imul
mov
mov
dec
fisubs
popa
leave
lahf
test
jg
outsl
ja
mov
aad
cmp
sarb
add
lahf
std
mov
jns
cmpsl
aad
add
dec
jg
sarb
or
mov
sub
insl
test
add
cmpsb
inc
std
rcrl
cmc
addr16
test
clc
xor
js
notb
xchg
insl
dec
hlt
jns
mov
in
or
ficomps
mov
in
int
cmp
lahf
adc
add
pop
gs
fistl
in
dec
dec
push
ficoml
and
fdivrl
lahf
mov
or
sbb
shll
push
jo
add
sub
xchg
pop
inc
push
jl
push
sahf
jl
mov
mov
sub
movsb
and
dec
cmpsl
jno
addr16
cmp
inc
dec
nop
mov
jp
imul
push
fmuls
loope
daa
mov
rcll
shlb
pop
push
cmp
lods
cmp
ss
stos
pop
or
pop
lods
add
outsb
pop
push
in
cmpsl
sbb
ret
ja
mov
hlt
cld
dec
sbb
jg
or
jle
xor
cmp
mov
cs
int
repz
or
repz
or
and
divb
mov
cmc
test
aas
jge
out
cmp
fnstcw
pop
mov
dec
scas
jns
xchg
jb
scas
testb
gs
mov
jae
lahf
pop
lahf
jl
fimull
imul
sahf
movsb
cli
or
mov
lods
imul
shlb
lods
or
pop
push
sub
cld
ds
idivl
pop
std
test
gs
iret
mov
mov
jp
cld
std
xchg
lret
cs
or
clc
push
pushf
pop
sbb
into
in
outsb
cmp
int
popa
outsb
xor
mov
and
addr16
push
test
and
in
lcall
cmp
cmp
test
sahf
xchg
rorl
in
sahf
imul
fdivl
lret
mov
pop
dec
and
in
push
adc
insl
push
inc
test
cwtl
sbbb
push
push
orb
roll
adc
cmpsl
xchg
std
sbb
sahf
icebp
lea
cmpsl
in
sub
fcmovb
insl
popa
mov
mov
lods
mov
add
shlb
lcall
push
pop
dec
cmp
sub
stos
lcall
lods
cmpsl
aas
imul
cwtl
test
leave
mov
mov
cmp
cli
bnd
js
cli
mov
je
add
xor
xchg
out
fisubs
mov
pushl
rcrb
pop
mov
aas
insl
adc
jp
cvttps2pi
jmp
or
shll
pushf
xchg
iret
das
push
inc
dec
in
pusha
ss
rolb
sub
mov
dec
daa
push
outsl
in
push
ljmp
and
fstpt
mov
dec
shlb
jb
sub
into
pop
or
adc
mov
inc
mov
mov
or
sub
inc
pop
or
add
jb
into
adcl
jmp
push
out
inc
push
adc
loopne
inc
lock
mov
ret
arpl
sbb
jp
and
repz
pop
and
or
outsb
cmpsl
dec
outsb
hlt
sbb
sbb
test
or
xchg
in
inc
pushf
out
xchg
xchg
sbb
add
icebp
repz
push
imul
xchg
mov
adcb
cmp
mov
cli
xchg
lahf
push
clc
mov
xor
xor
cmpsl
or
or
jns
cli
add
lods
mov
mov
sbb
xor
outsb
loope
dec
xchg
in
cs
cmpsl
lret
and
lea
imul
mov
lods
lods
mov
sahf
xchg
cmp
mov
mov
ds
iret
mov
pop
cmpb
fcmovnu
sub
mov
ja
dec
pushl
outsl
push
pop
add
lods
cld
mov
cwtl
add
ljmp
xchg
push
xchg
push
lret
rcr
xor
xor
jae
xchg
push
or
jmp
cmpsl
je
rolb
or
ljmp
outsb
scas
and
lahf
je
xchg
mov
pop
adc
mov
insl
jb
cmp
test
lds
pop
mov
daa
cltd
arpl
in
shl
mov
cmpsl
xlat
sub
mov
fistl
xchg
push
inc
popa
cltd
push
mov
das
aas
adc
ret
fidivrs
cmp
mov
cmp
mov
push
pop
repnz
int3
paddusb
cmp
push
inc
test
pop
andb
std
dec
pop
fs
xor
push
shrl
shlb
rorb
lret
ds
jno
pop
mov
fistpll
jb
push
xchg
or
push
mov
mov
out
adc
loope
in
lds
es
ret
outsb
add
in
nop
shrl
cmpsl
adc
das
ret
test
sub
imul
and
fidivl
push
mov
mov
pushf
rcrl
mov
push
cmp
js
ret
stos
mov
mov
pop
sbb
clc
addr16
inc
inc
add
int
xchg
pop
insl
fsubl
push
cmc
rcrl
pop
dec
std
hlt
pop
lret
fisubs
jg
loope
insl
jb
ret
xchg
aas
arpl
dec
jmp
loop
arpl
mov
sbb
aad
or
in
jno
dec
mov
xchg
sub
xchg
push
fwait
dec
pop
icebp
ljmp
fisubrs
lods
repnz
gs
pop
addr16
inc
movsl
cmpsl
imul
enter
mov
push
fisubrl
adcl
ret
mov
push
adc
es
into
arpl
push
jae
dec
or
add
or
arpl
xlat
cmp
adc
and
cmpsl
add
das
xchg
ret
inc
mov
mov
mov
pop
loopne
lcall
mov
in
pop
xchg
imul
cld
inc
lea
into
lahf
lods
ret
or
ret
int
ret
scas
push
cwtl
repnz
xchg
jbe
aas
add
dec
insl
inc
cli
dec
pop
test
mov
dec
dec
stos
sub
js
ljmp
jl
push
and
pushl
cmpb
or
jl
gs
mov
loop
push
push
jnp
push
stos
cmpps
in
jno
cmpsb
cmp
sbb
in
push
jmp
xchg
cld
dec
std
test
insl
hlt
vpandn
testb
into
and
jo
xchg
das
pop
movsb
push
outsl
je
in
daa
scas
and
paddd
inc
lods
sbb
lcall
mov
pop
mov
cmp
pushl
repnz
insl
iret
test
inc
push
shrl
jne
push
cmpsl
lahf
rclb
push
in
xor
movsl
lea
mov
mov
in
lods
sahf
cmp
sti
pop
lock
push
loopne
imul
xor
mov
mov
adc
insb
mov
leave
call
add
jl
and
aaa
data16
insb
push
frstor
cs
sbb
mov
mov
popf
lods
les
outsb
lock
out
insl
inc
or
lcall
cli
out
or
insl
fdivs
push
push
jns
xchg
xor
mov
sbb
cld
and
dec
mov
push
lea
push
push
jno
adc
out
and
movsb
stos
sub
lcall
sbb
push
mov
data16
xchg
pop
rolb
cli
mov
testb
or
lock
add
mov
sarl
mov
inc
out
dec
pop
lea
xor
xchg
pop
jns
jb
xor
add
and
iret
jb
jp
xchg
cli
pushl
mov
jb
inc
sub
sarl
rcrb
aas
fistpll
and
out
cmp
add
aaa
pop
testl
fs
add
jns
loop
jne
mov
test
out
or
cs
scas
cmpsb
clc
sbb
xor
or
jb
mov
xchg
or
in
dec
in
dec
xor
dec
add
rclb
jbe
or
loopne
jecxz
add
loop
fwait
push
push
flds
xchg
shrl
xlat
mov
jb
scas
dec
mov
push
repnz
xchg
insb
repnz
hlt
fistl
fbld
sub
inc
lahf
add
aad
sub
xor
xchg
xor
mov
pop
fisubl
or
mov
dec
inc
mov
pop
xchg
jmp
or
sub
sarb
sbb
add
dec
add
jo
sub
pop
in
adc
or
mov
fcoml
test
and
inc
iret
push
in
in
sbb
ja
fiaddl
xchg
or
sub
rcr
sbb
pop
stos
inc
cld
jb
cmp
aam
push
jp
sub
test
sbb
pop
popf
sub
test
loop
out
mov
xchg
add
sub
and
xor
pop
inc
mov
mov
scas
xchg
iret
test
add
in
lods
lea
iret
fldl
ljmp
or
add
mov
ret
inc
sub
add
sub
loop
sbb
sti
popf
shr
push
jno
adc
fstp
leave
push
cmp
jle
outsb
call
jb
movl
outsb
cmp
mov
adc
sbbb
push
shlb
stos
leave
orb
adc
ret
lahf
cmp
jne
rolb
lcall
jl
mov
add
push
aaa
test
ficomps
daa
jle
sub
mov
bound
or
cmp
xor
or
adc
hlt
repz
jg
pop
cmc
mov
push
add
mov
mov
dec
sub
arpl
mov
cld
xor
cld
cmp
movsb
sub
mov
cmpsl
mov
jns
iret
lcall
sbb
cli
add
clc
cmp
ret
push
ljmp
js
pusha
in
rcrb
mov
mov
mov
sub
xchg
int
popf
push
sub
lret
xchg
xor
sub
cmc
xlat
xchg
xchg
pop
js
bound
xlat
mov
fdivl
and
add
clc
inc
cmp
cmc
inc
stc
mov
sbb
loopne
xor
js
xchg
shrl
push
cmp
stos
xor
xchg
sti
nop
repnz
xchg
sub
xchg
int3
mov
frstor
sti
lret
and
rdpmc
push
xor
add
jg
fs
add
mov
add
insl
fisttpl
loopne
mov
int3
and
ja
mov
popa
jns
sbbb
mull
lret
out
jo
jge
push
jns
dec
movsl
sub
mov
stos
andb
mov
mov
fistl
int3
scas
ret
jo
mov
cmc
scas
iret
cld
mov
lret
inc
dec
mov
hlt
push
insb
push
lret
jg
int3
hlt
pop
sbb
pop
push
mov
test
loopne
movzwl
adc
mov
add
add
rcll
ficompl
mov
xchg
lahf
and
fbld
xchg
mov
lahf
pushf
dec
popa
mov
inc
popa
inc
lret
mov
lahf
adc
out
nop
cmp
push
push
mov
test
shl
loope
mov
mov
notb
push
ss
and
cmpsl
dec
cli
out
or
cmpsl
cld
jns
cmpsl
imull
jns
int3
jge
daa
push
lret
xor
int
icebp
cmpsl
lcall
xlat
cmpsl
pop
and
lahf
pop
xlat
imull
arpl
aaa
gs
xchg
mov
je
lods
cli
arpl
and
dec
add
iret
out
test
scas
movsb
jb
repnz
dec
sub
mov
lret
xchg
insb
jge
dec
mov
lcall
jno
data16
pop
sub
lea
pop
movsb
add
inc
sbb
lret
mov
out
xor
or
loopw
lret
sub
hlt
jg
xchg
cs
fiadds
pusha
scas
cli
arpl
cmpsl
and
mov
in
in
int3
sbb
sbb
mov
mov
mov
ss
jbe
pop
lods
sbb
pop
xchg
aaa
imul
jno
movb
shll
push
and
popa
cmpsl
int
cmpl
in
testl
lcall
mov
insl
adc
test
xor
jge
rclb
loop
sti
outsl
inc
fidivrs
dec
ret
or
in
stc
xchg
xchg
fisttpl
sub
fdivrl
and
dec
push
push
cmp
stos
jne
xor
aad
xor
into
mov
ret
int3
and
das
lods
adc
inc
jmp
or
scas
enter
rorb
fdivs
repnz
rcrl
mov
outsb
jp
ja
push
dec
xchg
ja
gs
daa
hlt
test
or
in
stos
pop
outsb
pop
mov
mov
fs
jb
mov
jns
jne
xchg
je
test
xchg
mov
test
mov
subl
or
outsl
js
ds
add
push
mov
insl
jp
mov
cmp
or
into
or
jp
or
fisubrs
mov
rorb
jno
and
in
outsl
xor
addr16
daa
mov
xlat
jg
and
popa
xlat
dec
jnp
fxtract
cmp
cld
call
push
xchg
in
xchg
mov
pop
mov
aas
inc
shr
or
add
adc
mov
clc
sub
nop
ret
jp
lods
lret
cmpsl
dec
or
sub
ficoml
lods
push
and
icebp
jmp
xor
dec
sbb
sub
emms
imul
lahf
xlat
add
aaa
jbe
or
jg
lods
pop
jo
dec
push
dec
imul
ljmp
imul
ljmp
int3
test
in
stos
xchg
adcl
sti
push
xor
xchg
or
dec
shlb
mov
cmp
sarl
mov
outsb
test
add
popl
add
xor
lods
xor
jno
fisubs
out
xor
lret
loop
sahf
xor
xchg
mov
mull
lcall
in
push
push
popa
pop
xor
and
or
ljmp
inc
pop
je
xor
mov
push
filds
int
arpl
jnp
int3
insb
lahf
xchg
push
lods
nop
ja
and
or
loopne
mov
out
fwait
mov
lahf
push
sbb
push
xor
fsubrl
sub
mov
mov
popa
pop
hlt
das
dec
test
add
fdivrs
add
outsb
arpl
imul
daa
mov
fldt
push
je
roll
mov
dec
cmp
jne
xor
or
xchg
mov
push
mov
pop
inc
fistpll
mov
xchg
cmc
test
and
lret
pop
and
xchg
bound
fidivrl
mov
push
cmp
lock
cmpsl
add
pop
adc
mov
add
repnz
cmp
addr16
lods
leave
out
in
das
add
mov
lods
leave
mov
pop
iret
xlat
sub
arpl
insl
in
or
leave
sbb
push
jns
xchg
sub
aaa
insl
rorb
mov
iret
add
mov
xchg
mov
or
cmpsl
inc
imul
ret
lea
loop
hlt
push
cmp
push
push
mov
rclb
stos
cmp
jg
pusha
subb
popa
inc
sub
aaa
dec
popa
pop
lret
push
clc
cli
fsts
in
scas
daa
int
mov
shl
insl
scas
lahf
scas
sar
rclb
mov
sti
adc
mov
int3
push
sub
stc
sub
inc
test
xlat
sub
or
js
stos
cmp
movsb
lods
int
aaa
mov
xchg
mov
lods
lods
nop
out
cli
pop
in
lods
out
or
mov
repz
outsl
mov
push
aas
xchg
repnz
pop
or
push
sub
ret
js
stos
sub
pop
enter
lods
or
xorl
inc
sub
push
push
mov
test
shlb
lods
in
and
iret
adcb
sbb
gs
jle
ljmp
jmp
ss
test
lea
mov
addl
loop
stos
pop
pop
inc
lods
mov
cld
lcall
bound
stc
iret
divl
sub
jns
xlat
cli
clc
push
add
mov
sub
out
mov
cmp
rclb
sub
push
lret
xor
lods
cmp
mov
adcl
jns
testl
shlb
pop
mov
cmp
out
sub
stos
in
xor
sarb
pop
add
rcrb
rcr
mov
cmp
dec
add
push
insb
ret
adc
shll
outsb
lods
sub
cmp
stc
mov
mov
jg
mov
mov
sti
cmpsl
add
lcall
add
mov
push
push
sbbl
push
mov
add
in
lods
sub
loop
leave
pop
cmpsl
stc
pop
mov
sti
cld
add
inc
cmp
and
sbb
leave
xchg
push
outsl
xlat
shrl
mov
les
cmp
or
cmp
orb
scas
outsb
orb
repnz
mov
mov
mov
adc
lock
inc
ja
lock
in
lds
loopne
sbb
pop
push
pushf
mov
iret
mov
sbb
and
push
aaa
xor
lods
cmp
fucom
dec
add
imul
popaw
add
add
inc
cmp
mov
jbe
adc
loop
mov
std
adc
jbe
lret
mov
or
sub
pop
into
pop
sbbb
insl
push
repnz
jg
inc
or
imul
iret
push
xor
into
add
jne
cli
popf
int
cmp
fistpl
pop
mov
pop
hlt
push
arpl
inc
testb
gs
aam
or
sbb
scas
pop
xlat
cmp
cmpsl
aam
pop
je
mov
cmpsl
inc
push
mov
in
icebp
lods
mov
mov
sbb
push
adc
pop
mov
fwait
push
push
loopne
sub
rcrb
and
add
call
jl
mov
pop
mov
inc
sub
int3
lods
xchg
mov
repz
out
mov
add
cmp
lret
jl
data16
sub
daa
inc
mov
dec
jbe
mov
es
cmp
test
sub
leave
rcrb
loop
data16
cli
xor
addr16
dec
outsl
js
mov
popa
inc
inc
push
inc
pop
lods
add
test
aad
in
loope
or
lods
dec
out
addr16
mov
and
cmova
roll
scas
dec
or
out
scas
add
pop
cmp
pop
adc
dec
inc
xchg
mov
jge
arpl
pop
repnz
dec
cmpsl
jle
aaa
int
or
dec
xchg
pop
aaa
sub
pop
and
repnz
jle
push
mov
test
add
or
or
lcall
jmp
dec
xchg
cmp
pusha
popa
jmp
movb
sub
outsb
adc
cs
mov
aaa
imul
mov
jae
sub
imul
fisubrl
sub
int3
mov
out
mov
mov
lods
mov
into
in
sbb
and
sbb
jno
je
lret
jle
cmc
outsl
pop
mov
insb
test
mov
shrb
popf
mov
adc
jnp
shlb
popf
jno
pusha
jp
gs
push
or
mov
mov
rclb
and
jg
dec
lods
jae
jmp
inc
push
adc
aam
sub
aam
sub
scas
push
fdivrl
xchg
xchg
orps
outsb
cmp
cmc
mov
cli
lret
jg
sub
jge
xchg
or
mov
rdpmc
bound
inc
jge
and
dec
or
ret
and
xchg
jns
scas
int3
je
add
and
scas
imul
mov
dec
gs
mov
outsl
nop
ja
xchg
dec
decl
cmp
lahf
push
mov
pop
pop
dec
sub
imul
add
cmpsl
ds
call
imul
lods
scas
movsl
inc
jno
add
or
push
mov
dec
sub
pop
hlt
lock
fwait
ljmp
dec
and
aad
dec
adc
jmp
outsl
mov
mov
test
test
aam
mov
test
jg
mov
aaa
in
lahf
lods
xchg
out
adc
mov
dec
js
rclb
cmp
ret
adc
fwait
dec
dec
arpl
cs
mov
cmp
aaa
lds
repnz
test
xchg
inc
lods
popa
or
int3
jmp
enter
insl
dec
mov
stos
insb
stc
sbb
in
outsb
and
int
insl
sub
lods
insb
lahf
xchg
insl
insl
insb
xor
sarb
mov
fs
in
jge
sub
aaa
daa
int
insl
mov
orb
scas
push
fldenv
int3
movsl
popa
and
jmp
dec
or
outsb
test
cmp
xor
scas
mov
sub
out
stos
mov
and
or
ret
xchg
push
insl
jbe
xchg
in
inc
addr16
imul
or
and
jns
jmp
dec
sub
cmp
or
test
mov
add
cmp
and
cmp
add
arpl
cmp
inc
add
cmp
mov
subl
push
jecxz
mov
ret
add
cmp
sub
cmp
or
push
push
enter
inc
or
mov
sub
jmp
pop
and
call
adc
mov
lods
and
fimuls
popf
mov
shrb
in
jne
mov
mov
jb
aam
lods
adc
mov
lcall
mov
mov
ljmp
clc
xor
cmp
iret
pop
lods
loope
lahf
gs
lret
movsb
push
lea
shlb
sub
cld
iret
aam
xchg
jno
bound
imull
insl
in
push
mov
testl
pop
mov
jno
xchg
mov
es
iret
mov
inc
xchg
or
jmp
mov
roll
lods
dec
and
mov
lods
or
jno
jns
mov
lods
in
lahf
lea
aam
shll
pop
push
and
mov
insl
fnop
int
shl
pop
jne
out
pusha
out
fbstp
push
mov
xchg
mov
in
jg
sarl
cwtl
sbb
xchg
enter
push
lods
or
add
ret
cmpsb
add
mov
insl
insl
cmp
xor
jle
mov
cwtl
and
ss
sub
outsb
imul
inc
xor
popf
fdiv
movsl
push
ret
fildl
fstpl
pop
fisubrl
ret
les
test
push
push
decl
pop
sub
fidivl
xor
inc
aam
lea
push
dec
sbb
inc
int
cmp
and
roll
mov
xor
mov
lods
cld
mov
cmp
mov
dec
in
dec
and
or
mov
rol
adc
sbb
call
call
outsb
shlb
cmc
neg
in
sub
insb
call
xchg
repz
pop
scas
scas
jbe
jecxz
jb
sbb
dec
xor
lea
ljmp
lods
jbe
or
push
repnz
adc
dec
add
arpl
in
mov
add
jmp
sbb
or
xor
incl
jo
insl
sbbl
inc
push
mov
cmpsl
mov
pop
outsb
sub
fsubrl
bound
in
inc
je
int
ljmp
outsl
cs
xor
xchg
sub
sub
cmp
push
lods
nop
xor
mov
lret
lret
fisttpl
add
lahf
jno
popa
faddl
adc
cmp
or
shlb
inc
aas
enter
pminsw
mov
ffreep
cmp
push
negb
mov
pop
popf
inc
jge
ret
and
cmpsb
xor
in
jl
fmulp
add
lods
das
and
mov
dec
ja
jno
in
js
loop
push
sbb
faddp
hlt
adc
xlat
jnp
daa
scas
push
popf
movsl
mov
in
scas
and
mov
adc
and
jg
mov
cmp
pop
cmpl
xchg
cmp
in
mov
dec
lods
jge
cltd
jno
int3
xor
cmpsl
ljmp
repnz
in
out
insl
jne
hlt
out
mov
and
mov
ss
insb
outsl
add
mov
fstpt
pop
hlt
xor
mov
cmc
mov
gs
outsb
lods
mov
jno
mov
jns
xchg
repnz
popa
hlt
add
add
out
fildl
sbb
mov
shll
pop
mov
imul
gs
xor
inc
cmp
dec
arpl
mov
mov
sbb
xor
insl
sub
pop
test
int
cld
dec
movsl
and
push
or
or
adc
pop
adc
stos
push
cwtl
lahf
mov
add
mov
inc
pop
xor
aam
cmp
fadds
inc
xchg
cltd
add
test
add
imul
adc
xor
sub
xor
inc
pop
insl
inc
jne
jno
scas
popa
test
insb
mov
xchg
lods
dec
dec
jge
pusha
sbb
stos
mov
or
push
push
fwait
jge
iret
aaa
test
or
cmp
aad
insl
daa
jae
out
and
bound
mov
xchg
shll
fwait
and
sub
pop
int3
and
xlat
insl
ds
and
bound
pop
sbb
aad
jge
jecxz
ljmp
in
notb
ffree
jbe
xor
adcb
das
mov
addr16
dec
cmp
xor
sbb
scas
fwait
sub
test
pop
mov
mov
movsl
mov
pop
scas
mull
mov
xor
popf
ja
cmc
or
into
lea
imul
aam
push
xchg
repz
mov
neg
fs
popf
jnp
sub
in
dec
xchg
gs
in
inc
in
cmp
mov
sub
addr16
cmp
sub
sub
loop
mov
or
js
cmc
popf
jp
sub
xchg
gs
pop
cmc
sub
xor
int
mov
mov
and
inc
test
xor
rorb
out
rorb
and
ljmp
sbb
test
xor
sub
cmc
ljmp
mov
xchg
and
xor
or
fdivrp
xor
cmp
sub
xchg
xchg
int3
cmp
dec
and
mov
out
insl
xor
or
jecxz
xor
repnz
std
lea
js
push
imul
movsl
sbb
jne
popa
in
adc
pop
stc
push
adc
sub
outsl
mov
push
mov
and
jno
mov
or
ljmp
icebp
mov
scas
sbb
and
sti
jbe
call
mov
xchg
in
dec
xor
lods
adc
dec
dec
negb
in
mov
aam
push
inc
sbb
insl
xchg
lods
popf
mov
test
push
insb
loopne
mov
gs
sti
sti
cmpsb
mov
sub
sbb
shr
das
imulb
clc
test
sti
xchg
or
cli
cmp
add
push
add
or
cmpsb
imul
hlt
pop
cmpsl
dec
cmp
pop
xchg
test
imul
lods
mov
jb
andb
lods
jo
adc
mov
pop
in
inc
into
pop
daa
gs
sahf
push
xchg
pop
test
dec
push
clc
dec
ds
cmp
sub
and
out
jb
aaa
pop
shrb
mov
je
mov
mov
push
jle
sbb
sbb
cmc
or
adc
mov
cmc
loop
mov
lods
sti
std
pop
in
inc
fisttpl
lahf
mov
xchg
cmpsl
shll
lods
mov
lahf
mov
cli
les
ja
xchg
es
outsb
push
mov
cltd
in
lea
imul
mov
je
pop
sbb
or
mov
pop
loope
xor
mov
movsb
movaps
push
inc
popf
and
popa
int
xchg
add
scas
mov
pop
or
and
outsl
cmp
fmulp
mov
pop
pop
and
cmpsl
push
mov
mov
or
outsl
test
adc
sbb
xchg
dec
cmpb
sub
inc
mov
pop
lcall
xor
push
jb
push
add
mov
or
push
pusha
and
sub
or
mov
xor
int
xor
inc
cltd
mov
lods
mov
sahf
adc
push
bnd
sub
xor
push
and
xor
test
pop
mov
gs
fs
insb
ja
lcall
scas
sub
push
or
add
xchg
std
and
aas
lods
lahf
mov
inc
cmpsl
inc
dec
dec
mov
push
insl
sub
pop
fistpl
add
mov
mov
lods
mov
push
gs
fs
mov
and
test
inc
movsb
and
pushf
or
push
cmpsl
or
andb
addr16
pop
hlt
or
loop
mov
icebp
xor
mov
shrl
shlb
pop
or
mov
and
xchg
sti
int
and
ret
int3
xchg
outsb
xorl
mov
cmpsl
jo
cwtl
lea
xchg
push
cmp
or
mov
js
mov
jge
fdivrl
std
xchg
adcl
add
insl
fidivs
lea
sub
icebp
push
xor
loopne
out
bound
dec
cmpsb
pop
pusha
and
jns
ljmp
mov
lea
hlt
pop
popf
mov
stos
xchg
sbb
rorl
sub
or
js
mov
outsb
mov
or
in
fnstcw
xor
fidivl
iret
mov
lds
jno
int
ja
dec
lahf
xor
outsb
adc
push
mov
inc
pop
adc
or
inc
pop
int3
lret
cmp
scas
loope
push
xchg
mov
or
mov
dec
leave
mov
pop
dec
add
mov
ja
js
jo
rclb
mov
cmpsl
push
mov
jl
adc
xchg
sub
xlat
bound
mov
das
dec
enter
pop
jb
adc
lret
add
cmc
pop
fistl
mov
pop
fucomp
gs
ret
loope
addr16
call
xchg
and
sub
popf
sub
iretw
mov
daa
push
or
push
repnz
aam
dec
ljmp
ficomps
insl
dec
setnp
arpl
aad
mov
shrb
pop
pop
test
jecxz
dec
popa
loope
add
dec
cltd
mov
jg
cmp
aaa
out
mov
or
add
ljmp
push
mov
inc
mull
cmc
mov
sub
mov
mov
push
xchg
aas
out
sahf
ja
fst
add
repz
ss
adc
clc
push
mov
testl
cmp
popa
or
aaa
xchg
cmp
repz
sbb
test
jle
movsl
ja
cmp
cmp
js
jl
lods
das
iret
push
jg
scas
add
fs
mov
mov
addr16
loop
jne
popf
mov
cmp
pop
iret
test
pop
gs
iret
insl
mov
lods
add
cmp
mov
mov
std
imul
sbb
add
out
mov
push
push
test
mull
or
movaps
cmpsb
add
push
xor
cmp
and
jmp
shlb
arpl
add
jne
mov
iret
or
arpl
fnsave
push
cltd
movsb
jl
ja
jecxz
mov
cmc
adc
sar
mov
rolb
or
or
cmp
jmp
movsb
add
sti
aad
int3
pop
mov
mov
mov
dec
insl
lods
push
lea
jbe
mov
dec
adc
mov
mov
cmc
fisubrl
jge
inc
push
lods
push
in
xchg
lea
clc
xor
loopne
dec
imul
gs
push
mov
mov
mov
sub
pop
dec
jb
test
mov
ret
int
add
add
cmp
movsl
mov
mov
cmpsl
and
pop
sub
xchg
or
fiaddl
sahf
inc
mov
fyl2x
xchg
movsl
pop
in
pop
cmp
jo
push
pop
xchg
inc
push
sbbb
scas
mov
sub
add
cmp
sbb
pop
in
mov
cmp
mov
cmp
popa
shrl
xor
hlt
mov
xchg
xchg
enter
outsl
std
rcrb
or
ss
cmp
test
cmp
cli
pop
and
pop
xor
mov
or
lods
xor
imul
jne
outsb
pop
cld
aam
out
loopne
or
fisubl
ljmp
cmp
and
xor
inc
and
int
cmp
adc
test
dec
inc
mov
decl
loopne
mov
or
mov
leave
jl
repz
xchg
xchg
mov
leave
mov
mov
inc
add
push
daa
stc
cmpsl
aam
std
jl
jnp
je
jl
push
pop
and
dec
mov
mov
cmp
xor
stc
pop
cld
cmp
dec
pop
cmp
out
in
push
repnz
xchg
or
pop
jnp
jge
dec
add
or
xchg
popf
mov
dec
xchg
and
cmp
mov
mov
xor
fildl
cmpsl
popa
adc
lret
dec
scas
xchg
inc
movsl
gs
and
push
jnp
push
or
jb
int
mov
jg
jno
mov
inc
aaa
lahf
pop
sbb
dec
test
pop
in
adc
clc
sub
xor
loope
arpl
mov
push
xor
xor
fcmovb
push
jl
mov
mov
movsl
add
ds
int
imul
jl
icebp
in
das
movsl
adc
arpl
lods
dec
nop
aaa
mov
lods
aad
in
inc
adc
lods
cmp
or
icebp
xor
movsl
sbb
inc
hlt
jbe
mov
inc
lods
push
sub
repnz
jl
fisubl
mov
mov
push
lcall
cmp
cmp
add
mov
push
xor
jns
data16
outsb
cmpsl
fildl
or
jb
gs
cs
add
push
lods
or
mov
adc
insb
cmp
cmpsb
out
ds
ss
gs
or
xor
in
add
in
bound
mov
pop
mull
cltd
mov
pop
adc
popa
pusha
les
cmpsb
ficoms
jo
cmpb
lods
out
xor
xor
aad
mov
add
mov
hlt
imul
mov
gs
popa
dec
bound
push
push
mov
fcmove
cmp
test
or
cmp
cmp
and
pop
dec
mov
push
mov
lahf
and
mov
arpl
lcall
xor
xchg
and
or
jnp
loop
pop
xchg
cmc
outsl
and
jge
ficoms
dec
iret
and
lods
xchg
out
mov
xchg
shl
mov
dec
pop
cmp
jne
addr16
movsw
xor
lahf
pop
lcall
push
jb
iret
jne
mov
xor
mov
stos
push
xor
xchg
push
fwait
mov
dec
in
adc
pop
push
mov
hlt
cmp
pop
mov
and
sub
ja
inc
lods
cmp
lods
dec
lds
jl
das
popf
imul
mov
cltd
inc
jbe
push
fidivrl
xchg
cmpsl
push
mov
pop
jne
push
mov
cmp
cmovge
jle
call
xchg
cmpsb
push
inc
mov
sub
jg
mov
push
in
fucomi
inc
pop
xchg
and
popa
iret
cli
pushl
mov
xlat
xor
cmp
insl
sbb
xor
out
lret
orl
inc
arpl
mov
adc
jle
dec
jp
add
test
pop
daa
cmp
add
fldt
stc
dec
add
test
aam
jae
pop
call
mov
mov
add
or
scas
popa
adc
out
cmp
inc
and
xor
aam
int3
nop
jle
out
lcall
loop
pop
repz
addr16
outsb
sbb
dec
dec
call
add
pop
repz
pop
and
pop
push
movsl
xor
lea
cli
cmp
inc
add
popa
mov
in
jo
rorl
popl
je
jo
xchg
dec
sub
lods
adc
shrb
push
mov
cmp
mov
dec
call
add
test
push
daa
bound
pop
sbb
inc
and
lods
jl
icebp
xor
gs
popa
clc
fildl
jg
push
stos
xchg
mov
jb
aas
fiaddl
pushf
lret
icebp
xchg
cmp
dec
pop
or
inc
mov
movsl
mov
mov
lods
ret
inc
mov
mov
fs
push
movsl
jae
jl
in
dec
repnz
cli
test
push
sbb
loope
pop
testl
orl
jle
imul
mov
xchg
loope
in
mov
sub
fwait
inc
pop
mov
push
pop
ret
mov
mov
adc
cmp
add
and
ja
cmp
xchg
sbb
jle
movsl
loopne
mov
xchg
jne
scas
mov
mov
add
outsl
mov
divb
cwtl
shr
add
into
scas
jne
int3
out
dec
gs
mov
subb
xor
and
pop
lahf
and
loopne
int
push
fnsave
clc
xor
mov
aam
sub
dec
pop
add
aad
sub
and
pop
and
and
jno
mov
mov
cmc
das
lods
outsl
add
push
rcr
loopne
out
xorl
lock
hlt
aad
jmp
mov
lods
shlb
fdecstp
dec
bextr
jns
fcmovu
das
ret
push
or
test
sbb
or
mov
popa
pop
in
enter
cli
jnp
or
jb
cs
pop
jbe
dec
test
aad
mov
lods
xor
xchg
sbb
add
sub
dec
jle
scas
cmpsl
cmpb
rcrb
xchg
rorb
lcall
mov
and
je
and
iret
std
cmp
sbb
repnz
lahf
lods
shlb
sbb
je
adc
cli
mov
cmp
in
jbe
out
mov
sbb
mov
into
vunpcklps
push
ucomiss
int3
lods
daa
loop
add
cld
in
lret
dec
xor
int3
push
mov
hlt
arpl
gs
mov
test
and
inc
scas
int3
sbb
xchg
mov
jge
loope
mov
aaa
aad
stos
cs
pop
push
sub
lea
mov
mov
add
jns
pop
jns
jge
lea
test
jbe
lods
pop
jecxz
je
mov
cmpsl
das
jg
cmpsl
mov
movsl
cmpsl
inc
jge
enter
pushf
js
mov
popa
pop
lods
stc
or
mov
push
lods
pop
sub
pop
insl
jno
jb
push
xchg
push
jne
loop
xchg
mov
cmp
xcrypt-ofb
cmpsl
outsb
mov
in
je
test
jecxz
ret
inc
stos
mov
leave
xor
xchg
add
mov
push
inc
mov
pop
xor
add
ds
in
mov
sub
xor
lods
ror
jns
add
in
popf
fldl
out
fs
inc
aaa
lret
insl
fdivrl
dec
out
pop
xchg
jns
aas
sub
data16
test
es
cmpsl
call
ret
cmp
lahf
clc
hlt
rcr
fs
enter
enter
adc
xchg
jno
cmp
movsb
pop
or
ja
scas
outsb
arpl
cmp
imul
and
addl
push
pop
add
pop
xchg
or
xor
inc
push
repz
jae
pop
inc
dec
lods
int
lea
pop
shrb
sub
jmp
xchg
sub
pop
mov
int
adc
mov
cmp
xchg
test
sub
push
mov
fildll
cld
loope
movsl
enter
sub
lahf
jne
sbb
pop
hlt
xchg
pop
bsr
pop
cmp
and
in
add
fsubrl
lcall
cmp
rolb
mov
sub
push
mov
add
lea
repnz
movsl
inc
sub
jb
adc
in
movsl
icebp
jecxz
jb
adc
sbb
nop
cmpsl
aam
outsl
mov
movsb
or
mov
sub
sbb
cmp
test
dec
jge
out
add
ret
inc
into
jl,pn
add
lods
xchg
add
cmp
xchg
shrl
xchg
jge
add
hlt
imul
dec
xor
addr16
push
outsl
iret
jne
adc
hlt
mov
push
into
push
or
and
jge
cwtl
lret
test
push
xor
cli
lahf
lods
cmp
in
iret
daa
fwait
cmp
ret
push
sbb
cmp
or
push
andl
inc
xchg
pop
and
in
roll
aaa
insl
test
pop
in
call
add
push
adc
std
or
mov
inc
movsl
dec
loop
insl
add
cmp
loop
movsl
mov
cmp
mov
das
pop
lea
or
jae
sbb
and
bound
out
xor
je
ljmp
adc
jecxz
mov
inc
outsl
shl
sub
adc
and
cmp
ljmp
dec
and
inc
and
dec
call
ja
push
push
sbb
inc
shlb
xchg
loopew
lret
cmp
pop
xchg
fld
cmp
in
mov
mov
cmpsl
and
es
call
popf
outsb
xchg
cmp
pop
sbb
out
sbb
sahf
arpl
push
lahf
leave
out
or
out
mov
and
popa
xor
push
loop
rorl
fimull
xchg
popa
shlb
jns
gs
xchg
or
xor
and
xchg
xor
fwait
lret
ljmp
addr16
cmp
pop
imul
cld
and
jne
inc
inc
add
lret
lret
cmp
test
shl
push
popf
pop
jmp
psubd
imul
shrl
xchg
sbb
fcmovb
dec
cmp
outsl
or
imul
jb
or
aad
push
mov
jle
outsb
daa
icebp
push
cmp
xchg
adc
hlt
or
incl
cmp
sub
cmp
push
xlat
sbb
mov
outsb
xchg
bound
mov
loop
inc
sub
jb
and
or
lock
mov
aas
lret
iret
and
bound
xor
jb
mov
push
pop
mov
out
int
mov
mov
push
ja
call
test
xchg
jnp
test
pusha
xor
jmp
lds
sub
xor
push
sahf
cmp
sbb
and
pushf
mov
dec
lret
movsl
pop
fisubs
or
mov
cmp
mov
xchg
mov
popa
cmpsl
outsb
and
pop
or
and
in
test
orl
into
xchg
cmp
gs
jnp
mov
cmp
stos
push
jle
adc
loop
and
fidivs
in
cmp
xchg
or
sti
hlt
mov
or
cmpsl
rcl
mov
ret
inc
jle
mov
push
or
and
jno
ljmp
sub
shll
lea
sbb
add
push
aaa
sbbb
or
dec
xor
sbb
xchg
addr16
shll
bound
dec
xor
imul
mov
mov
jbe
and
xor
push
xor
frstor
xchg
call
sbb
sub
int
imul
pop
addr16
fstl
pop
int
mov
pop
mov
jbe
in
lea
out
push
xor
int3
adc
std
aad
std
test
xchg
std
ljmp
cmc
test
mov
pop
imul
mov
aaa
mov
jnp
dec
aaa
xorb
arpl
test
inc
inc
pop
cmp
in
sbb
aaa
lods
repnz
in
add
add
jge
xchg
pusha
idivb
mov
fstl
sbb
addr16
imul
push
lret
mov
pop
cmp
fcoms
inc
add
cmp
push
push
icebp
into
aad
jno
popa
iret
mov
lret
mov
je
arpl
in
jo
subb
out
gs
jb
cmpl
aad
fnstenv
fcmovnbe
test
mov
out
lock
push
out
push
jns
sbb
mov
int
mov
sarb
sub
test
inc
push
shrb
mov
jmp
mov
insl
lods
and
sbb
fwait
xor
and
and
jae
or
insb
loop
lret
imul
push
loop
xor
insb
iret
out
sub
mov
lahf
xchg
mov
in
cmp
data16
or
and
in
dec
sbb
cld
sar
and
outsl
fbld
out
lret
pop
cmc
xchg
lea
int3
insl
adc
mov
mov
push
gs
and
and
scas
sub
jmp
ss
gs
mov
addr16
add
sbb
insl
and
test
dec
mov
push
or
leave
addr16
out
idivb
nop
mov
sbb
popa
add
shll
xor
sub
sbb
stos
jp
insl
lret
ret
rcr
push
xor
dec
push
jge
jo
rcr
aam
cmp
gs
jge
ret
push
stos
sub
or
or
cmpsl
sub
insl
adc
adc
sbb
mov
sbb
hlt
pop
ficoms
mov
mov
jne
out
aad
js
mov
dec
push
or
jge
dec
pop
hlt
int3
pop
xor
jp
mov
movb
pop
cmpsl
lods
and
addr16
inc
xchg
aas
push
in
sbb
sub
jno
add
cltd
out
out
popa
into
fs
insl
je
repz
xchg
aam
lods
cmp
test
je
jecxz
fbstp
aaa
or
data16
ret
adc
mov
pop
push
scas
stos
cli
jl
add
cmp
xchg
hlt
mov
hlt
push
paddsb
fimuls
push
cmp
push
pop
cmpsb
nop
jne
out
jne
push
cmp
sub
jmp
dec
xchg
movsb
dec
push
sub
lods
jo
mov
fdivl
push
or
outsl
int
sub
loope
in
sbb
dec
xor
imul
jg
cmpsl
xchg
lret
sub
movq
test
test
or
jp
rcrl
repz
add
and
mov
jo
into
or
daa
push
movsl
xchg
sbbl
jmp
push
dec
or
popf
lds
je
push
push
bound
fs
jmp
jbe
mov
inc
pop
mov
popf
sub
xchg
in
inc
iret
inc
daa
hlt
aad
ficoms
jne
pop
jecxz
daa
dec
scas
subb
rcl
imul
lods
mov
dec
clc
imul
in
hlt
mov
in
or
les
or
jbe
xorb
xor
in
and
sbb
dec
jns
push
pop
mov
sbb
and
adc
inc
add
jns
sub
ljmp
in
sbb
or
daa
xlat
sbb
lea
mov
out
lea
repz
lods
mov
les
xchg
add
jnp
push
js
aad
sbb
dec
pop
xlat
cmp
shlb
sbb
clc
arpl
in
and
mov
push
pop
shl
bound
es
hlt
mov
push
outsb
sub
nop
mov
pop
cmpsl
outsb
or
lods
enter
mov
shrl
repz
sbb
addr16
dec
sub
les
xor
insb
popa
clc
push
dec
push
jmp
daa
push
ret
sub
or
push
or
fistpl
inc
push
ret
add
mov
lea
mov
lods
shl
adc
xchg
adcb
arpl
gs
xor
sahf
orb
mov
arpl
adc
int3
fidivrs
arpl
mov
xchg
popf
mov
jmp
bswap
inc
daa
push
xchg
pop
jmp
mov
mov
cs
mov
sub
insb
into
stos
mov
or
bnd
repnz
jp
mov
xchg
loopne
and
icebp
mov
movsb
arpl
fistl
int
and
xchg
outsl
imull
inc
xchg
and
or
mov
aaa
int3
fcmovb
pop
lcall
xchg
outsl
sub
fisttps
or
rolb
mov
sti
sbb
cmp
or
push
movsb
jb
in
inc
sbb
scas
pop
lods
rorb
es
mov
rcrb
ljmp
movsl
push
lods
xor
xor
jb
xor
mov
insl
ds
adc
imul
pop
fisubl
and
mov
insl
fdivl
or
scas
aaa
dec
cmp
ljmp
addb
lds
adc
mov
into
pop
lods
popf
popa
mov
pop
push
popa
lahf
mulps
insl
and
push
add
pop
mov
in
xlat
test
xchg
mov
ljmp
hlt
adc
and
cld
stos
std
push
mov
sub
fdivp
mov
rolb
jbe
sub
mov
or
shrb
cmp
add
popf
fsubrp
loopne
jle
addr16
sub
in
push
sub
scas
sti
cmp
mov
ljmp
sub
sar
outsb
sub
push
lea
imul
lea
je
sub
cmp
mov
mov
lods
inc
lods
xor
lret
adc
mov
subb
mov
xchg
cmc
cmpl
pop
pop
jle
ss
aaa
inc
xchg
inc
and
std
stc
in
insl
cmp
cltd
call
cmp
jno
gs
adc
mov
arpl
jae
in
jne
sub
scas
arpl
insb
stos
mov
cmp
lods
es
arpl
icebp
aaa
lea
in
mov
mov
mov
pop
test
hlt
push
adc
loopne
loope
cmpsl
jns
outsb
lea
sbb
out
pop
push
push
mov
popa
adc
and
push
std
shrb
stc
or
sub
rorl
push
xchg
sub
imul
or
pushf
inc
testl
mov
jne
xchg
jne
aas
mov
push
adc
leave
das
xchg
sub
imul
fsubrl
das
sub
ja
pop
add
in
inc
dec
mov
mov
inc
mov
int
inc
cmp
loop,pn
arpl
inc
mov
jle
or
cmp
dec
pop
enter
pop
mov
dec
sub
mov
movsl
inc
mov
popf
cmp
and
outsb
lret
or
fwait
mov
dec
loop
test
pop
push
loope
repz
mov
std
adc
arpl
xchg
ja
sti
cmp
xchg
lahf
daa
popa
xor
daa
das
adc
imulb
and
sub
jl
imul
out
outsl
pusha
mov
lods
int3
inc
mov
out
xchg
fisttpll
pop
aad
scas
sahf
ljmp
ljmp
inc
jmp
out
cltd
push
add
jl
mov
repz
pop
outsb
fisttpll
mov
in
xchg
cmp
add
jl
aam
push
mov
mov
pop
das
and
xor
xchg
mov
dec
negl
mov
mov
add
sahf
ljmp
mov
xor
pop
push
adc
lods
mov
xor
cmovbe
dec
sbb
add
mov
arpl
and
lods
jnp
and
lahf
repnz
mov
testb
jge
mov
fisttpll
clc
inc
movsb
lods
je
cmpsb
cmpsb
aaa
xor
popf
lea
jg
bound
push
sub
pop
ret
sbb
sbb
test
inc
mov
xchg
and
dec
xor
sub
fcoms
dec
lcall
mov
xor
xor
out
and
pop
lahf
sbb
and
sbb
cmp
xor
sub
leave
jae
int
push
movsl
add
jns
xchg
lahf
in
les
push
jp
lods
jb
mov
adc
or
int
xor
mov
push
sub
xor
or
mov
adc
push
fdivrl
dec
cmp
xchg
mov
mov
mov
aas
std
aam
xchg
outsb
mov
or
sub
repz
sti
lcall
sbb
push
mov
or
paddusw
mov
inc
cs
cltd
popa
int3
imul
lcall
test
lods
sub
mov
dec
fs
out
repz
dec
and
lods
arpl
push
lret
addr16
or
out
or
dec
add
dec
mov
mov
ljmp
sahf
aam
imulb
adc
push
cmpsl
fisubl
popf
sub
aam
lahf
cli
mov
gs
mov
lods
sub
mov
int3
lahf
jmp
sbb
or
jnp
pushw
inc
jns
scas
inc
dec
ret
sbb
xor
cmp
fsubs
or
aaa
js
std
mov
push
stos
pop
or
xor
fcomi
cmp
stos
ss
push
pop
mov
inc
ljmp
mov
push
jge
iret
mov
fldt
fcomps
insl
rcr
push
push
sub
pop
mov
sbb
aam
in
in
lret
adc
push
cmp
in
lods
xchg
icebp
pop
jb
outsl
scas
xor
arpl
pop
sbb
cmp
push
pop
or
hlt
imul
data16
jne
std
add
add
cs
out
xchg
sbb
dec
push
mov
mov
cmc
jae
xchg
fs
fwait
outsl
in
dec
test
popl
mov
daa
clc
xchg
sbb
or
add
test
or
add
dec
mov
fiaddl
xchg
fsubs
andb
mov
std
inc
mov
cmp
jecxz
lret
and
mov
jmp
dec
lods
push
lret
stos
or
cmpsb
mov
jge
jle
sub
into
rcrb
pop
fs
push
fwait
testl
xor
adc
cmp
loope
jno
xchg
and
xchg
push
loopne
ficoms
ljmp
push
inc
xor
xor
shrb
sub
lods
or
adc
inc
or
repz
mov
imul
inc
loop
arpl
and
or
cmp
pop
cmp
push
call
jne
adc
xchg
inc
fldenv
sbb
jp
popa
xchg
add
gs
push
mov
mov
sub
stos
xor
loopne
push
outsb
pop
stos
sti
aam
nop
nop
mov
fisubl
test
cmpsl
or
or
hlt
sub
pop
jns
push
shlb
mov
mov
mov
push
scas
sahf
xor
loop,pn
arpl
or
popf
mov
fs
and
jl
dec
xchg
sbb
popa
adc
daa
or
dec
pop
outsb
gs
sbb
push
lret
xchg
jmp
mov
dec
cmpsl
sbb
pop
cli
dec
xchg
push
dec
jbe
sbb
in
inc
push
rcl
and
sub
and
sub
movsb
sub
scas
clc
emms
jecxz
sub
sub
je
bound
and
outsl
daa
orl
dec
test
lods
xor
jno
in
and
pop
mov
movsl
hlt
and
popf
mov
cltd
sarb
ret
data16
inc
jge
inc
lods
xchg
add
mov
add
sbb
xchg
loop
inc
sub
lea
repnz
fmuls
cmpsl
lods
dec
sub
mov
add
cmpsb
fmul
in
xchg
pop
mov
lods
cmp
jns
mov
cltd
jno
dec
lods
pop
xchg
idivb
or
in
xchg
xchg
jb
mov
push
or
lods
and
push
mov
pop
or
inc
mov
imul
ja
call
or
inc
pop
lods
rclb
rcrb
fidivrs
lock
add
xor
popf
loop
loope
in
or
inc
addr16
or
cwtl
std
in
adc
or
mov
sbb
mov
push
xchg
sub
lea
sbb
or
movsb
lcall
mov
ffreep
in
jl
jbe
cmp
lock
cmpsb
lods
sbbl
clc
mov
clc
test
sub
ja
dec
fwait
cltd
dec
pop
xchg
pop
lock
data16
lret
ja
orl
xchg
mov
mov
mulb
mov
aas
push
mov
fs
or
rcrl
lods
addr16
rcl
cmp
jl
mov
dec
fisttpl
loope
rorb
bound
mov
or
jbe
fldl
cmp
xor
sti
out
xchg
inc
push
fs
dec
mov
mov
sub
add
inc
dec
andl
cmp
pop
xchg
fisttps
insb
jno
xchg
push
sti
clc
xor
sub
inc
push
pop
xor
fmul
loop
and
sbb
mul
and
popf
movsb
in
xchg
ja
lea
in
lods
insb
test
lahf
mov
addr16
cmpsl
jb
cwtl
mov
fsubrl
sbb
repz
jmp
jecxz
fimuls
rorl
call
loope
ror
imul
clc
add
dec
mov
clc
fidivl
lods
bsr
xchg
cmp
adc
mov
sub
jmp
fldenv
iret
mov
jbe
test
xorl
inc
ret
out
xchg
cmpsl
inc
and
test
std
push
and
push
mov
outsl
push
ljmp
cmp
lds
jg
jecxz
adc
jb
popf
sbb
xor
pop
mov
mov
stc
loopne
sahf
hlt
add
pop
pop
xor
test
sti
push
xchg
lds
pushf
into
ss
dec
or
mov
pand
iret
test
mov
loopne
fnstsw
iret
cmp
movl
mov
scas
adc
testb
rcl
fnstenv
dec
push
mov
insl
mov
cmpsl
xor
xchg
cmp
sub
xchg
adc
push
test
outsl
mov
mov
jg
inc
inc
ljmp
int
fs
lods
dec
mov
xchg
and
adc
mov
enter
xchg
bound
outsl
or
fidivrl
pop
outsb
test
loop
xchg
pop
mov
add
xor
test
cmp
push
fwait
std
rclb
daa
add
sbb
cmpsl
mov
cmp
adc
in
pop
add
pushf
cs
fnsave
jle
outsb
lea
xchg
mov
fwait
xchg
jae
add
das
ljmp
mov
mov
pusha
sbb
scas
lea
push
xchg
orl
int
xchg
adc
test
loop
inc
pop
or
test
pop
pop
das
lods
and
cmpsb
fidivrs
xor
sub
push
jge
test
add
inc
and
sub
les
jno
sbb
icebp
mov
cld
mov
add
aaa
rcrb
push
pop
sti
sbb
jl
lods
pop
mov
out
sbb
insb
inc
push
dec
popl
mov
iret
xchg
mov
xchg
outsb
in
xchg
mov
arpl
mov
iret
shlb
mov
pop
or
cmp
cmpl
fucomi
sub
fwait
sub
punpckldq
ds
nop
xchg
std
lods
in
pop
shll
push
ds
mov
inc
mov
imul
adc
and
ljmp
scas
jg
adc
bound
popa
cmpsb
das
mov
call
imul
add
sahf
ret
lods
xor
mov
in
jle
xlat
sub
and
rorb
mov
movsl
jb
add
pusha
jl
jne
cmp
xlat
mov
xchg
test
cmpb
adc
outsl
adc
daa
ja
enter
pusha
call
jecxz
jbe
mov
ds
sbb
rol
insl
pop
pop
negl
mov
call
mov
sbbl
sbb
mov
aaa
push
add
push
in
int
or
inc
inc
ljmp
jb
adc
add
adc
in
ja
nop
xchg
pop
sbb
pop
mov
loope
insb
lods
call
insl
ficoms
bswap
xchg
mov
mov
pusha
ffreep
arpl
out
popf
aas
insl
cltd
adc
int3
push
inc
outsb
pop
loope
in
mov
mov
fstpt
shlb
lods
ret
int
sub
xor
mov
push
and
sbb
sti
test
lods
or
aam
lcall
pop
aas
mov
xor
pop
iret
cmp
fildl
mov
jg
shll
arpl
popl
rcrb
iret
mov
jns
adc
shrd
dec
xchg
adc
incl
out
pop
js
inc
lea
and
test
sub
pop
arpl
dec
xlat
stos
adc
inc
adc
sbb
push
clc
and
paddb
or
testl
int
xchg
push
test
stc
rorb
mov
sbb
xchg
fwait
subl
cmp
or
loope
inc
or
out
addr16
push
xor
bound
jne
xor
add
pusha
or
pop
arpl
shr
cmc
into
in
lods
in
gs
lret
stc
adc
inc
bound
sahf
in
xor
movswl
aad
push
mov
daa
push
jae
scas
adc
iret
mov
in
jae
test
inc
aad
int
inc
xchg
jl
xchg
jg
nop
mov
arpl
inc
in
and
loope
cmp
subb
mov
lea
in
gs
xchg
jg
andb
fbstp
push
mov
xor
imul
ljmp
pop
clc
or
push
jge
mov
pop
cmp
sbb
xor
jb
or
insb
and
pop
fs
sub
les
or
clc
cmp
push
sbb
or
push
andb
dec
mov
setge
loopne
out
icebp
xor
bound
mov
pop
mov
push
mov
pop
xchg
push
and
or
inc
mov
daa
pop
push
in
mov
jge
xorl
arpl
jmp
into
pop
adc
rcr
lret
jnp
lods
jnp
cmpsb
xor
ljmp
mov
int
inc
or
lods
and
mov
movsb
gs
push
cmp
scas
dec
bts
aaa
sbb
pop
mov
fwait
and
mov
je
sub
sbb
ja
gs
test
test
mov
and
imul
nop
lahf
push
mov
or
dec
push
repnz
test
bound
lock
sbb
pusha
cmpsb
fs
dec
xchg
add
call
xor
in
add
and
aam
and
or
sub
sub
and
rcrl
or
push
cs
and
xlat
lods
xchg
mov
scas
mov
fidivl
add
mov
xchg
test
mov
add
movsb
in
cmp
and
lods
mov
int3
push
jnp
fcoml
dec
mov
cs
jge
popa
push
cmp
dec
or
push
xor
lock
inc
cmc
dec
inc
ljmp
dec
mov
in
test
push
mov
fldenv
jb
jb
mov
hlt
xlat
cmpsl
insl
fisttps
ljmp
or
mov
jb
cmpsl
mov
push
jg
out
xchg
adc
fimuls
sub
jo
xchg
andl
bound
inc
daa
inc
mov
int
xchg
repnz
mov
mov
pavgw
or
xor
es
fldt
sub
stos
sub
lahf
inc
int
cmpsl
cmp
xchg
test
dec
dec
dec
sbb
sbb
pop
adc
into
clc
push
shll
int3
or
iret
push
cmp
das
xor
cmp
cmp
lret
lods
jg
or
pop
popa
pop
jno
idivb
mov
daa
ret
cmpsl
xchg
xorl
mov
dec
clc
nop
mov
mov
mov
popa
lea
adc
mov
mov
imul
cmp
enter
fisubs
push
dec
add
add
adc
leave
xchg
sub
cmp
jg
daa
lret
xchg
scas
mov
mov
int
pop
test
push
fidivrs
push
mov
inc
lea
lcall
push
add
sbb
loop
jne
out
mov
popf
xchg
mov
adc
outsl
xchg
mov
pop
in
sub
xor
add
cmpsl
movsb
pusha
push
call
and
jo
pop
lods
xor
hlt
fldt
or
cmp
movsl
call
scas
push
jmp
sub
jo
aaa
sbb
jg
pop
sub
pop
or
mov
cmp
pop
mov
sub
mov
jae
lret
pushf
dec
aaa
cmp
sbb
shrb
lods
cmpsl
addr16
fld1
lock
jne
sbb
les
imulb
loope
inc
mov
cmc
sti
lock
out
sti
es
rcrl
insb
push
lret
shrl
sbb
push
push
inc
or
sub
movsb
cltd
xchg
je
pop
xchg
dec
inc
push
jno
add
test
gs
cmpsl
jle
es
mov
fcompl
and
ret
xchg
lods
pop
out
jb
out
xchg
movsl
adc
scas
lcall
inc
cmp
mov
lods
or
or
aas
add
dec
cs
cmpsl
aas
addr16
mov
inc
data16
cmp
in
push
imul
in
jmp
push
roll
cmpsl
mov
cltd
sub
cmp
inc
imul
outsl
fcomps
test
sub
xchg
out
mov
dec
sbb
xchg
sub
mov
arpl
iret
insl
push
pop
jl
rorb
xchg
stc
mov
mov
cmpsl
pop
or
sarb
push
fists
sar
xor
mov
and
out
mov
imul
rclb
dec
add
sub
dec
pop
jnp
aam
push
mov
cmp
fs
push
outsl
lods
leave
ret
inc
and
out
add
je
popf
cmp
xchg
cli
sbb
cmpl
or
addr16
mov
mov
movsl
mov
gs
and
cmp
or
sbb
add
in
dec
cli
ret
add
cwtl
sub
sub
cmp
or
lret
or
imul
xlat
rolb
rcl
add
mov
imul
movsb
or
in
cltd
sub
xchg
push
lock
jbe,pn
test
mov
add
xchg
sub
push
pop
ret
lret
aas
mov
ret
lods
or
adc
jle
mov
add
cmp
fsubrs
pop
das
or
imul
ret
movsl
pop
adc
dec
jle
insl
or
enter
dec
cli
cmpsl
daa
cwtl
jb
sbb
sub
lea
test
sub
out
cltd
cmp
xchg
cmp
arpl
sbb
jmp
jnp
push
or
mov
inc
lret
inc
mov
std
inc
or
push
in
aam
sbb
arpl
adc
add
inc
mov
add
adc
xor
iret
loop
inc
push
jnp
mov
or
call
shrl
fcmovnbe
ss
jns
cmp
pop
pop
dec
xchg
dec
mov
pop
daa
roll
xchg
or
fcmovu
out
push
scas
jno,pn
imul
cmpb
adc
cmpsb
shl
lea
fldcw
xchg
fs
or
sbb
aas
cmp
dec
imul
push
sub
sbb
movsl
rclb
jae
push
pushf
insb
lret
dec
mov
and
add
and
arpl
push
stos
arpl
jae
ret
mov
iret
or
aaa
call
fldcw
sbb
shll
push
jns
mov
pop
mov
movd
cmpsl
sar
mov
or
gs
push
outsb
add
lods
test
jle
jne
stos
mov
and
xlat
stos
dec
xlat
adc
push
mov
mov
sub
adcb
jge
cmpsb
fnsave
add
xor
movsl
xor
jge
pop
cmpsb
insl
pop
insl
xchg
aaa
sub
mov
lods
jo
mov
test
in
jle
scas
hlt
dec
scas
or
nop
mov
loop
adc
shrb
test
inc
icebp
adc
mov
mov
mov
and
cmp
dec
in
sbb
pop
ss
lcall
stos
fs
push
cmp
imul
xlat
cwtl
call
inc
and
out
int3
jle
xlat
pop
clc
mov
movsl
in
sbb
addr16
out
dec
ficoml
int
fcoms
fidivs
hlt
outsb
mov
daa
leave
adc
out
lret
mov
inc
push
inc
inc
sbb
dec
jbe
mov
mov
sahf
push
scas
int
xchg
int
fs
mov
xor
imul
inc
push
dec
lahf
shll
add
insb
jns
xor
and
testb
cmpsb
pop
add
outsb
xchg
or
outsl
rcr
xchg
xor
ror
sub
rorb
test
das
scas
call
add
insl
scas
add
pop
aad
lret
mov
fidivs
pop
adc
add
lea
mov
lods
push
sbb
push
cmpsb
pop
adc
and
xchg
rclb
stc
hlt
arpl
add
bound
pop
sub
hlt
ja
testl
lea
adc
jg
sbb
adc
insl
int
stos
leave
andl
dec
jecxz
fs
stc
pop
mov
xor
jecxz
dec
push
cs
push
das
stc
push
call
sbb
ja
mov
jp
or
mov
pop
dec
mov
popa
clc
lcall
add
pop
out
and
add
ret
test
or
arpl
std
movsl
ja
fsubrs
out
enter
xchg
mov
pop
cmp
add
mov
js
mov
lret
push
and
adc
jmp
lea
mov
xor
lea
mov
nop
dec
jmp
mov
test
xor
mov
rclb
movsl
pop
cmp
sar
add
sub
repz
add
in
xor
xchg
lret
add
push
add
popf
test
push
cld
imul
mov
adc
or
dec
push
dec
and
lret
push
push
cmp
pop
insl
inc
mov
pop
insl
xor
sti
cmp
sub
push
push
inc
dec
push
push
and
add
push
sub
push
dec
ds
mov
nop
cmpsb
outsb
inc
xor
mov
fwait
outsl
ret
pop
int3
jbe
js
leave
push
mov
int
mov
dec
add
clc
jbe
test
pop
add
pop
insb
stos
push
negl
or
cmp
jno
pop
xchg
or
lods
ficomps
sub
xchg
pop
jecxz
jmp
push
arpl
cltd
push
mov
sub
push
add
imul
repz
adc
outsl
cwtl
mov
scas
cmp
ret
lods
cltd
push
push
mov
xor
ljmp
pop
xor
mov
shl
push
daa
mov
mov
stos
jbe
adc
call
cmp
stos
sub
adcl
jne
sbb
cmp
outsb
jge
cmp
jns
out
inc
xchg
or
push
imull
and
in
shlb
outsl
xchg
imull
shr
mov
cmp
dec
mov
add
out
push
fdivrs
jne
sub
fbld
pop
pop
adc
daa
inc
jg
cmpsl
fs
and
jb
aaa
insl
dec
rcll
outsb
cli
jecxz
stos
push
dec
jmp
ret
cmpsl
and
leave
xchg
scas
inc
call
idivl
clc
or
add
sub
xor
sbb
push
ljmp
xlat
and
jge
cli
pop
and
imul
mov
sub
or
in
push
adc
divb
stc
gs
popf
mov
mov
dec
aam
insl
or
cmc
aaa
das
ret
add
pop
push
or
push
loopne
jae
test
gs
mov
push
outsb
cmc
jl
add
pop
insl
sub
movsl
aaa
mov
scas
mov
adc
pusha
sub
or
aam
pop
adc
subl
pop
xchg
pop
pop
out
inc
jle
insl
and
mov
fincstp
and
addr16
call
lods
std
fcmovb
hlt
jno
xchg
cmpsb
mov
dec
push
out
andb
insb
sub
xlat
mov
dec
push
mov
jns
mov
lahf
adc
mov
dec
test
test
mov
push
int3
xchg
jae
repz
jmp
push
cmp
sub
jp
roll
lods
dec
dec
incl
mov
ljmp
shrb
lods
lcall
push
mov
mov
inc
inc
mov
jg
or
xchg
pop
xor
aad
mov
cmp
lods
out
or
inc
sub
in
adc
movsb
mov
or
movsl
adcb
and
jb
dec
jmp
pop
sbbb
xchg
mov
not
rcrb
xchg
insb
jno
imul
lcall
add
aam
or
js
adc
fisubl
imul
pop
jmp
inc
int3
cmp
pusha
cmp
in
xchg
call
jno
dec
mov
or
pop
pop
jnp
sahf
jne
ret
dec
jb
or
dec
clc
lods
lea
sub
mov
gs
cmpsl
sbb
inc
ds
mov
aas
dec
out
call
fcomps
shl
icebp
test
or
cli
jno
int
inc
pop
aaa
out
outsb
xor
cmc
call
rcll
movsl
movsl
movsl
mov
and
lods
test
popf
insl
pop
xchg
out
add
xchg
mov
cmp
hlt
insl
hlt
cmp
push
aas
fildl
mov
and
mulb
int3
cld
shr
push
pusha
lods
test
jg
xchg
adc
mov
jne
es
mov
cwtl
shll
add
xorb
sbb
stos
stc
jne
mov
jge
sub
or
jbe
les
jmp
inc
lods
popf
shll
sbb
xchg
dec
adc
push
jne
mov
xor
mov
lods
mov
daa
out
aaa
jp
test
insb
pop
dec
cmp
adcl
pop
stc
pop
lods
or
out
fmuls
pop
xchg
jcxz
or
std
cmp
ret
add
imul
jne
or
push
int3
xchg
cmp
dec
cmp
xchg
shl
xchg
mov
dec
xor
mov
lea
repnz
lds
push
popf
aad
push
push
mov
lods
or
sbb
mov
pusha
gs
sbb
lea
lahf
mov
jnp
ror
imul
mov
sbb
pop
outsl
cmpsl
or
mov
scas
lea
sahf
imul
insl
out
imul
aad
shlb
cmp
jle
fidivrs
in
jl
cmpsl
xchg
gs
dec
mov
push
ss
pop
hlt
stos
inc
add
mov
cmp
lret
push
into
cltd
jge
bound
icebp
insl
in
inc
pop
ficoml
push
loop
mov
pop
jge
mov
int
push
int
mov
mov
adc
mov
insl
sbb
pop
sqrtps
xchg
mov
inc
daa
mov
outsb
push
in
fs
pop
repnz
std
mov
repnz
in
cmpsl
mov
imul
or
xchg
sbb
sbb
adc
test
jb
jbe
movsb
int
xchg
or
xchg
in
rolb
mov
and
xor
jecxz
push
vcvttss2si
push
repnz
int
xchg
jns
lds
test
into
push
sub
pop
lret
out
icebp
pop
xchg
in
insb
loope
aaa
adc
lock
push
jge
insb
cli
xor
or
stc
out
jecxz
iret
xchg
add
or
mov
sbb
xor
and
insl
insl
std
jge
mov
lods
lea
insb
hlt
cli
loope
dec
int
xor
insb
fidivs
or
cld
xchg
mov
mov
imul
cmpsb
or
pop
mov
sbb
ds
add
push
sarb
jp
inc
and
mov
lods
nop
adc
mov
fstpt
adc
repz
sub
popa
lea
inc
mov
scas
xchg
sti
fwait
inc
mov
xchg
push
jnp
mov
adc
mov
and
inc
mov
lods
or
xor
xchg
mov
es
mov
fs
adc
lahf
jl
insl
push
cli
stc
adc
inc
cmp
hlt
mov
mov
iret
mov
inc
pop
and
fmull
xchg
dec
cmpsb
dec
cmpsl
jle
mov
test
lahf
shlb
cmp
lea
dec
fiadds
pop
sbb
push
mov
movsl
mov
out
test
cmp
mov
adc
cmc
jp
jno
scas
mov
inc
sub
clc
cs
fcmove
add
cmpsl
sub
sbb
and
out
sbb
mov
inc
addr16
das
cli
test
xchg
in
insl
std
movsl
xchg
cmp
or
xchg
mov
les
pop
out
cmc
or
xchg
sub
scas
sub
pop
or
dec
fbstp
mov
pop
cs
push
mov
into
call
mov
pop
movsb
mov
inc
jne
pop
jl
pop
xor
int
sahf
or
shll
cmc
pop
dec
aam
xor
sub
scas
xchg
out
mov
jecxz
mov
xchg
lahf
inc
dec
and
cmp
sbb
insb
inc
arpl
int3
pop
xchg
push
mov
and
insl
daa
mov
popf
mov
or
or
inc
pop
mov
xchg
cmpsl
mov
cmpsl
orl
xchg
pop
mov
lods
call
fiadds
ja
int
ljmp
push
and
out
mov
insl
fsqrt
mov
pop
sbb
mov
in
out
imul
jecxz
add
scas
out
stos
xchg
cmc
call
mov
insl
dec
adc
lea
mov
int3
daa
mov
cld
movsb
add
jl
dec
ljmp
jle
inc
lock
xor
popa
stc
orl
outsb
insl
add
dec
cmpsl
jno
lods
js
xorb
sub
rcrl
mov
fdivs
lret
in
loop
adc
scas
call
xchg
insl
int3
aas
ljmp
or
fwait
mull
dec
lods
mov
mov
in
sub
xor
add
xchg
icebp
jle
in
jbe
popl
iret
mov
fisubrs
sahf
pop
in
mov
test
add
mov
inc
mull
stos
dec
adcl
cld
jb
xor
jmp
jge
xchg
dec
mov
jg
add
hlt
cmp
adc
jne
fsubrl
xor
adc
iret
mov
pop
dec
xchg
inc
sub
xchg
mov
pop
sub
dec
and
in
and
adc
in
nop
pop
sub
push
mov
test
sbb
mov
adc
ljmp
and
cmpsl
jg
adc
dec
xchg
dec
in
sub
or
cmp
adc
jb
mov
mov
mov
push
sub
int3
inc
fisttps
out
xchg
sub
inc
test
push
adc
pop
dec
dec
add
loopne
mov
lods
dec
sub
adc
ret
jge
inc
push
stc
mov
xchg
push
lods
call
es
push
iret
and
sbb
scas
xchg
fildl
push
int
add
mov
enter
ret
sbb
sbb
dec
arpl
inc
call
incl
int
mov
mov
daa
dec
inc
fs
iret
dec
imul
insb
or
jg
out
lea
or
mov
mov
jnp
pushf
add
xchg
cli
mov
xor
or
xor
xchg
subl
sysret
mov
jo
adc
add
mov
adc
imul
lds
adcl
adc
pop
and
inc
mov
dec
sub
daa
pop
test
xor
adc
and
lods
xchg
andb
pop
add
add
daa
push
adc
lret
popa
scas
sub
mov
adc
add
fcmove
pop
cmpsl
enter
adc
push
adc
xchg
sub
lock
insl
xchg
push
adc
ss
sub
add
lods
loop
jl
icebp
add
xor
add
dec
addr16
sub
xlat
popa
cmp
clc
icebp
cmp
scas
out
or
or
iret
xor
push
arpl
popa
fstl
or
and
pushf
dec
popf
add
sbb
cld
into
xor
insl
pop
fcomp
lcall
lea
sbb
sub
push
pushf
inc
addr16
sahf
ss
inc
adc
push
dec
inc
clc
dec
sub
out
scas
sti
sub
jmp
fidivs
scas
int
int
inc
int3
sbb
nop
dec
cmp
dec
and
lea
cwtl
cmpsl
xor
into
xchg
cmp
testl
hlt
jl
sbb
test
test
mov
call
fists
push
fiadds
testl
or
cmp
aas
inc
out
clc
cwtl
mov
aam
in
shlb
xchg
daa
out
in
stos
je
inc
or
out
rol
sub
fiadds
fiaddl
in
insl
idiv
push
ficomps
test
test
out
dec
or
pop
adc
cld
or
mov
jb
rcrb
ja
fs
hlt
pushf
push
into
jae
mov
mov
lods
or
cltd
pop
mov
lcall
outsl
sub
xchg
mov
popa
ja
jns
cs
test
inc
movsl
sbb
imul
popa
fimuls
ficomps
jns
aaa
ljmp
jecxz
xor
pop
movsb
cmpsb
push
insl
sbb
or
fcoml
outsb
aaa
jp
adc
fwait
leave
outsb
dec
cmc
loope
pop
pop
xor
sti
sbb
sarb
push
mov
aam
ja
xor
add
imul
sub
mov
dec
fistpl
in
lock
out
fisttpl
in
and
pop
xor
xor
cmp
jecxz
and
or
push
pop
mov
xor
fbld
out
dec
jb
inc
int3
cld
dec
movl
mov
std
xchg
fsts
int3
sbb
and
das
jns
xchg
divl
xlat
xor
fdivr
cmp
ret
test
xor
dec
int3
outsl
jno
jg
jne
fcmovbe
pop
xor
addr16
lea
js
lea
xchg
sub
stos
mov
iret
sub
lods
mov
push
aaa
and
es
jge
add
out
mov
xor
insl
push
mov
mov
pushf
jbe
jecxz
or
negl
je
call
call
inc
dec
subl
pop
sbb
aaa
fisubrs
cmp
es
popa
outsb
ljmp
es
mov
das
fstpl
scas
insl
daa
mov
pop
cmpsb
jl
int
inc
int
insb
hlt
xor
sub
xor
in
pop
stos
mov
xchg
dec
cmp
inc
shlb
out
cmp
testb
aad
inc
test
test
push
pop
sbb
js
or
aas
mov
xchg
std
fldl
int
sti
cmpsl
add
addr16
dec
pop
ljmp
push
data16
sub
or
stos
xchg
shrb
inc
xchg
lods
or
daa
ja
je
jp
int3
xor
add
dec
scas
sub
stos
add
fimuls
fs
loopne
pop
xchg
in
mov
inc
int3
jl
popf
xchg
sub
sbb
iret
in
pop
outsb
inc
movsl
or
dec
sub
loop
xor
iret
sbb
sbb
dec
in
mov
sahf
lds
adc
out
popa
std
push
stc
push
incl
jns
mov
fistl
in
inc
pop
push
popa
ja
sub
fmulp
push
fiaddl
add
lods
mov
imul
dec
mov
push
jnp
test
jno
or
ljmp
cmpsl
and
out
out
daa
add
daa
fdiv
je
or
lret
popa
ljmp
xchg
js
jb
std
je
insb
jno
push
inc
dec
rorb
jb
inc
daa
and
mov
and
loop
lret
shll
xchg
insl
iret
sti
jmp
and
gs
cmp
insl
xchg
out
sub
mov
jo
sub
or
mov
jae
push
shll
iret
mov
cmp
dec
xchg
shrl
dec
sahf
fldenv
jle
mov
mov
dec
jbe
movsl
or
popf
ljmp
jne
jle
and
push
shlb
inc
daa
xchg
out
sbb
sbb
sub
mov
enter
push
arpl
in
jge
sarb
inc
sbb
mov
in
xchg
insl
ja
jp
inc
jg
fsubrl
push
mov
sub
push
aam
jo
cld
shrb
je
push
mov
mov
subb
in
icebp
aam
sahf
mov
stos
or
pop
fnstenv
adc
xchg
sbb
xchg
dec
enter
es
mov
ja
leave
xchg
xchg
fdivs
inc
test
xor
imull
and
aas
xor
mov
mov
or
cli
or
jne
sbb
fidivrs
imull
ja
outsb
aam
fwait
gs
ja
es
in
into
add
sbb
hlt
pop
insl
mov
rclb
jl
loop
push
and
pop
push
adc
push
fldt
sbb
xchg
xchg
and
hlt
jecxz
mov
popa
in
cmpb
daa
out
jmp
lds
pop
pop
sbb
xor
ficomps
xor
and
jae
arpl
jecxz
pop
mov
sbb
popa
cmpsb
fwait
mov
adc
movl
outsl
cli
adc
daa
mov
mov
cltd
add
push
ds
stos
cmp
out
and
xor
cmp
int
jg
insl
xor
mov
fdivs
mov
add
cmpsl
mov
push
pop
mov
mov
xchg
movsl
test
and
push
in
test
decl
jne
lahf
and
xor
ja
and
aad
inc
repz
repnz
int3
xor
shl
mov
cmp
xchg
sbb
dec
xlat
nop
fisubrs
xchg
jle
outsb
out
movsl
les
and
add
xlat
adc
sbb
xor
dec
push
cmp
iret
or
gs
dec
xor
pop
mov
stos
loope
sbb
popa
test
lods
int3
push
xchg
out
fdivs
pusha
sub
in
adc
mov
cmp
in
insb
imul
cmp
dec
daa
push
scas
mov
push
xchg
mov
out
mov
les
fidivrl
in
aaa
sbb
shr
push
fwait
jo
cmpl
xlat
scas
fidivl
adc
call
test
adc
out
mulb
adc
add
addr16
dec
cmp
push
ror
sub
les
lahf
dec
sub
sbb
into
add
sti
pop
outsb
mov
cli
mov
push
or
repnz
add
jb
and
cli
cltd
push
fisubs
repnz
xor
sub
sub
cs
sahf
or
movsl
push
jb
cmp
or
stos
iret
addr16
fstpt
push
les
lods
mov
mov
sbb
out
enter
xlat
cmp
outsl
cmpsl
add
inc
pop
aad
das
xorl
fmulp
ds
lods
mov
popa
shl
and
popf
mov
inc
int3
ja
test
or
ja
xor
push
add
add
xor
push
popa
les
cs
loop
icebp
cmpsb
in
mov
mov
testl
sub
mov
imul
mov
mov
push
mov
dec
popf
jne
cmp
push
cmp
arpl
inc
mov
pushaw
repnz
call
xchg
mov
sbb
cmpb
xchg
mov
in
push
mov
xchg
sub
std
xor
dec
cmpb
enter
arpl
xchg
lea
mov
sub
fstpl
shr
das
and
cs
lods
jno
pop
xor
mov
and
mov
jne
add
xor
aam
pop
add
ret
push
daa
and
push
addb
jns
pop
in
dec
jl
daa
lret
xchg
lret
xchg
addr16
ja
cmp
leave
cmp
sahf
mov
popa
sbb
adc
mov
adc
in
xchg
outsb
cmpsl
das
jb
cltd
adc
clc
stos
out
cwtl
push
dec
aad
insl
cwtl
js
nop
xor
enter
mov
sub
mov
call
ficoml
sbb
sbb
insl
loop
cmp
dec
xchg
js
andl
push
jle
inc
jecxz
out
push
jmp
sbb
dec
xchg
sub
jg
arpl
inc
jnp
sub
rorl
pop
xor
mov
xor
push
cmpsl
iret
fs
inc
imul
mov
and
pop
in
cmc
outsb
lret
or
ret
cmpsl
adc
push
iret
int
arpl
pop
inc
mov
xchg
lock
int3
lods
jns
popa
push
xchg
push
dec
inc
fidivrl
rolb
lods
adc
jle
imul
xchg
push
insb
jl
sbb
xlat
lds
and
mov
jno
xchg
sbb
outsl
xor
sbb
rclb
mov
movsb
lods
cld
ret
fdivrs
sub
imul
mov
inc
xchg
faddl
xchg
pop
dec
jecxz
push
jbe
neg
daa
mov
xchg
mov
std
in
jge
xchg
leave
stos
jb
movsl
dec
adc
loop
fs
enter
adc
pushf
inc
cmpsb
test
and
call
in
outsl
mov
aam
push
lahf
pop
mov
setnp
adcb
sbb
ret
cmpsb
test
daa
xor
cld
out
lods
arpl
in
push
iret
addr16
dec
jb
loop
adc
test
jle
hlt
int3
add
xchg
out
mov
pop
sub
cmpsb
lahf
cld
int
jae
pushf
int3
pop
mov
pop
lock
dec
sub
pop
mov
int
adc
das
subl
mov
cltd
jo
and
xor
lods
insb
push
ds
std
cmp
mov
adc
or
mov
xchg
push
mov
jae
in
enter
bound
inc
sub
mov
or
movsb
in
mov
mov
in
outsb
and
jo
outsb
addr16
cltd
cmp
xchg
mov
rclb
fistpll
mov
shl
lods
sti
xlat
pop
nop
fmull
inc
shl
sbb
sahf
out
inc
sub
lret
movsl
hlt
movsb
popa
xor
into
mov
push
mov
iret
fwait
and
or
shll
push
rcrl
cmpsl
sub
cmp
and
pop
adc
outsb
lods
mov
push
mov
add
mov
insb
in
pop
shll
subl
fisttps
daa
mov
outsl
mov
lahf
lea
pop
or
add
xor
pop
mov
jno
hlt
pop
and
pop
in
cld
add
in
lock
or
int
lds
and
inc
xchg
fcomps
dec
rclb
sbb
rorl
imulb
and
inc
mov
aaa
dec
jecxz
cmp
mov
es
inc
stos
xchg
jle
popa
mov
push
dec
pop
jle
mov
popf
lcall
cmp
push
dec
sahf
cmp
pop
dec
insb
adc
je
jns
dec
cmp
je
jne
shrl
jns
gs
and
sbbl
add
mov
arpl
rcll
pop
push
lret
adc
sbb
insl
jns
mov
sub
clc
dec
sub
jbe
jl
add
xchg
dec
xchg
out
or
sbb
mov
icebp
dec
lods
xchg
mov
lods
gs
jnp
pop
xchg
test
adc
push
cmp
add
test
pop
mov
sub
inc
sub
mov
jmp
loope
cmp
test
adc
jl
mov
and
in
fwait
pop
or
jb
idivl
scas
movb
idivl
test
sub
ljmp
xchg
aad
fiadds
dec
or
out
pop
into
ficomps
mov
push
dec
pop
cmp
notl
add
or
push
add
imul
cmp
inc
das
movl
mov
xchg
add
inc
add
xchg
scas
sbb
nop
fs
popf
xlat
cmp
fdivrp
pop
dec
lret
sbb
arpl
in
sbb
in
das
inc
in
pop
mov
sub
dec
or
ja
sub
test
sub
xchg
pop
sub
mov
aaa
sub
push
add
pop
in
pop
mov
mov
cmpsl
mov
imul
xor
sbb
adc
out
lods
adc
or
lock
jl
cmp
adc
cmp
jl
dec
ljmp
leave
jecxz
sbb
stos
or
test
pop
dec
jno
jno
arpl
cwtl
sbbl
daa
xchg
cltd
xchg
fmulp
sbb
insl
insl
aad
mov
sar
and
or
hlt
dec
cmp
outsl
sbb
aaa
and
mov
push
push
pushf
aad
lahf
lret
cmpsl
and
adcb
or
hlt
outsl
jb
test
inc
rcrl
mov
mov
dec
int3
pusha
pop
xor
fldt
push
mov
jge
in
cmovns
imul
jg
iret
ja
and
cmp
cmc
mov
push
cs
push
jecxz
add
xor
sbbb
ljmp
push
push
rcrb
jp
pop
mov
fcomps
jmp
add
imul
xor
insb
pop
call
out
sti
call
cmpb
out
in
cmc
leave
xor
add
leave
and
xlat
jge
arpl
lahf
ja
mov
push
and
sbb
cmp
pop
push
mov
mov
adcl
cmpsl
je
aad
mov
out
lods
dec
jno
xor
les
mov
mov
stos
mov
or
adcb
sti
sti
cmp
jge
clc
sbb
mov
push
prefetcht2
push
test
jmp
ja
inc
jo
mov
js
dec
mov
inc
jl
xchg
sub
scas
imul
sbb
adc
in
fs
or
sti
add
fst
movsl
lahf
pop
addr16
jno
sbb
lock
popf
sbb
xchg
cmc
jmp
push
fisttpl
and
dec
pop
enter
ljmp
mov
jmp
xlat
mov
pop
in
inc
out
cmp
jns
hlt
and
push
in
rolb
gs
aaa
insl
cmp
xchg
jne
outsl
sub
mov
mov
cmpsl
inc
adc
cld
lahf
push
xchg
ret
pop
pop
imul
das
or
inc
enter
mov
addr16
mov
js
or
pop
push
shl
pop
or
push
pop
out
sbb
cmp
addr16
scas
add
jne
push
dec
push
sub
inc
xchg
scas
adc
lret
in
jne
mov
mov
xor
sub
in
lret
hlt
and
and
pop
lods
inc
das
ljmp
leave
in
inc
sbb
lret
movsb
cmp
std
out
addb
adc
inc
popa
insb
lret
sarb
out
jns
mov
cmpsl
or
insb
mov
dec
in
out
fstps
xchg
shrl
adc
stc
je
out
and
addr16
in
pop
mov
fldt
enter
dec
daa
mov
and
pop
mov
adc
mov
test
in
popa
pop
lods
lcall
pop
daa
lods
in
xchg
push
int3
jle
rorb
xchg
sub
mov
in
mov
lahf
add
sbb
dec
fmull
in
nop
adc
cmp
hlt
int
xchg
mov
hlt
push
lods
sahf
test
shl
inc
loopne
stos
mov
or
clc
shlb
pusha
xchg
iret
mov
mov
addb
xchg
fbstp
es
scas
sub
xchg
lret
jnp
xchg
lods
fisttpll
jp
stos
int
jno
push
or
cmpsl
or
int
pop
aad
sbb
mov
sub
lahf
push
pop
sbb
in
adc
into
or
jecxz
inc
int3
pop
pop
jg
call
mov
jp
mov
push
aas
jmp
pop
aaa
mov
or
scas
insl
lods
outsl
hlt
out
lea
and
adc
push
negl
or
mov
mov
repnz
adc
andb
cltd
push
ja
popf
imul
add
jns
adc
addr16
pop
sbb
pop
ja
stos
imul
jmp
scas
mov
daa
int
or
xor
daa
fcmovnbe
pusha
jp
pop
out
pop
pop
outsb
mov
fsubl
cld
pop
inc
xchg
lods
lcall
in
dec
inc
hlt
lock
sbb
push
daa
xor
test
shrb
lahf
sub
push
imul
test
pop
sti
xchg
and
jl
es
pop
sbb
xchg
imul
inc
adc
popa
xor
lret
push
pop
push
scas
enter
subw
leave
mov
sub
lods
mov
int3
out
lahf
lea
rolb
test
dec
sarb
addr16
or
inc
mov
pop
js
jns
int
scas
aaa
scas
cmp
mov
and
mov
mov
mov
xchg
stos
lods
insb
int3
jb
rcrl
add
bound
xchg
adc
adc
mov
fiaddl
inc
xchg
jg
jle
mov
dec
in
int3
js
add
in
repz
pushf
dec
das
and
aam
lock
xchg
dec
in
adc
mov
hlt
ljmp
dec
out
popf
repnz
mov
lock
popa
push
adc
adc
into
inc
rcr
daa
jp
cmc
dec
mov
bound
sbb
loop
adc
push
push
push
cmpsl
jp
movsb
in
nop
das
js
lea
sub
aas
leave
cmp
jecxz
fs
sub
jp
leave
test
inc
or
push
dec
jne
cmpsl
push
mov
loopne
aaa
jbe
pusha
rorl
dec
ljmp
jno
sbb
in
outsb
aam
inc
imul
pop
or
pop
idivb
or
addr16
push
cmp
mov
pusha
and
xor
outsl
dec
ljmp
ljmp
dec
and
xchg
addr16
lret
mov
int
in
sbb
adc
mov
psubq
inc
xor
push
xor
jb
mov
or
pop
add
loope
lahf
jecxz
cli
cli
cmpsb
shrb
test
sub
imul
sbb
mov
add
sbb
shll
leave
inc
sbb
sub
xor
aam
inc
test
jns
sbb
inc
cmp
cmp
das
popa
sbb
push
imull
push
push
cltd
cld
aaa
pop
jl
push
shll
mov
enter
aas
and
xchg
iret
in
push
and
or
xchg
shll
mov
sub
loope
xor
pop
pop
bound
jmp
je
loop
test
rcl
push
jns
adc
add
jo
jle
cmp
mov
mov
add
dec
jle
jl
xchg
pop
jge
pop
and
jmp
std
gs
lods
packsswb
adc
inc
sarb
repnz
mov
xchg
xchg
or
cmp
mov
mov
aaa
xchg
and
pop
ret
lcall
jns
das
cmp
mov
xchg
xchg
lods
sub
lods
inc
lea
push
bound
outsb
jg
xor
cmp
lahf
jnp
xor
xchg
mov
mov
push
pop
ljmp
ds
inc
jge
adc
loop
sub
xor
gs
xor
stos
ret
jno
mov
movsl
and
mov
inc
loope
add
or
pop
int
imul
xchg
insl
inc
out
sub
into
pop
pop
lret
xor
cmp
loop
loopne
add
xor
and
sub
in
fnstcw
mov
xor
add
lea
sbbb
hlt
dec
scas
cld
mov
outsl
jge
sti
ret
or
xor
bound
sub
add
xor
outsb
mov
ret
xor
clc
pop
repnz
loop
mov
outsb
adc
mov
cli
sbb
jae
lods
roll
sbb
cmp
int3
or
cli
call
lock
xchg
insl
pop
add
stc
adc
mov
shl
negl
and
pop
shlb
and
test
add
pop
gs
adc
arpl
pop
mov
sub
dec
pop
sbb
mov
loop
fwait
jge
jp
xor
mov
rclb
sbb
loop
movb
lahf
add
mov
mov
jo
jg
jb
shlb
sahf
jno
in
std
fldt
jae
insl
mov
aad
pop
jmp
mov
jbe
mov
mov
mov
daa
cs
dec
mov
loopne
sti
cmp
sub
mov
push
jne
cs
pop
scas
mov
call
popf
and
add
out
push
add
adc
outsb
xchg
call
mov
ret
fwait
jp
mov
sbb
loopne
bound
rorb
ret
sbb
fcmovbe
inc
in
je
mov
xchg
cli
mov
xchg
outsb
repz
xor
sbb
in
outsb
jo
dec
imul
or
jne
lock
mov
mov
call
push
lds
add
add
mov
push
pop
jo
mov
scas
cmp
das
or
syscall
test
dec
orb
adc
adc
int
or
lea
and
xchg
stc
mov
es
add
or
lret
xchg
xchg
xchg
andb
or
repnz
mov
inc
clc
es
xchg
fstpt
and
test
ds
xor
gs
jmp
inc
mov
cmc
mulb
or
cmp
push
jb
xchg
je
cmp
arpl
pop
xchg
mov
loopne
pushf
loop
lock
xchg
push
jp
or
jp
imul
mov
pop
lock
insl
or
jno
dec
sub
cmp
out
push
mov
push
aaa
loop
in
aam
loopne
popf
imul
cwtl
dec
push
push
in
mov
arpl
push
andb
dec
outsl
mov
insl
dec
test
ja
pop
loope
pop
mov
push
xlat
call
jne
js
ret
add
xchg
add
sbb
add
in
shll
shll
xor
inc
ds
pusha
dec
push
lret
mov
pop
mov
in
ret
sbb
ret
fdiv
lret
sub
das
cli
sbb
jge
inc
negb
sbb
aaa
mov
test
popf
mov
jo
mov
xor
sbb
lea
jnp
clc
subl
mov
xor
or
test
subl
add
ja
mov
pop
jbe
test
pushf
insl
rorl
pop
scas
mov
pop
insl
out
push
stos
sub
cmp
out
mov
mov
out
leave
mov
sbb
push
mov
and
test
outsb
push
je
testb
inc
test
and
xchg
ret
sub
inc
sbb
imul
imul
cmp
or
push
test
int3
addr16
lahf
insb
cmp
mov
int
pop
in
dec
xor
insl
or
inc
adc
cwtl
fsubl
inc
or
and
lcall
lret
dec
mov
cmp
jns
insl
test
xlat
stos
mov
loopne
mov
cmp
adc
hlt
sarb
mov
pop
ret
imul
stc
adc
adc
jl
fwait
push
mov
jp
jge
xor
insl
test
sahf
sub
jbe
sbb
xchg
and
jns
mov
and
cmp
imul
rcrl
icebp
lods
mov
cmpsl
inc
es
ljmp
add
gs
jle
gs
dec
enter
push
push
cmp
fsubrs
lock
adc
rol
addr16
jae
and
iret
in
adc
out
ret
into
into
and
adc
stos
pop
addr16
lods
pop
cmp
andl
bound
mov
pop
lahf
push
mov
jne
dec
mov
xlat
inc
int3
or
mov
loope
mov
push
cwtl
ja
sub
sub
cld
outsl
push
mov
sub
mov
out
jbe
pop
jb
or
pop
arpl
and
add
repz
mov
jb
xchg
pop
pop
cmp
jb
lahf
cld
loopne
inc
and
add
popa
cmp
xor
sbb
in
fadd
daa
jb
pop
cmpsl
mov
out
xlat
lret
adc
pop
or
test
push
stos
test
dec
xor
dec
outsl
sub
fyl2xp1
outsl
or
sub
repnz
mov
cmp
ljmp
xchg
dec
dec
lret
xchg
mov
push
cmp
addl
leave
push
test
imul
mov
lods
test
aad
mov
imul
hlt
stos
or
xor
push
leave
push
mov
lret
jp,pn
leave
hlt
out
out
dec
js
aaa
ret
popf
dec
dec
jge
mov
bound
dec
jmp
aam
popf
adc
hlt
ljmp
pop
xor
iret
cmp
sbb
cmpl
pop
fdivrs
add
xor
insb
icebp
lock
cmpsl
hlt
pusha
mov
mov
push
lods
lret
in
xor
xchg
les
add
out
xorl
pusha
arpl
mov
arpl
add
gs
rclb
shl
push
add
push
in
jge
inc
pop
mov
stos
aas
shll
mov
aaa
xor
je
push
cmpsl
xchg
scas
mov
sti
icebp
mov
add
xor
mov
or
icebp
bound
add
movsl
mov
pop
add
fistpl
mov
pop
sbb
movsl
int
cmp
push
insl
xor
cmp
sub
and
push
pushf
daa
cmp
imul
jno
cmp
or
pusha
cmp
push
sub
adc
push
jl
inc
pusha
add
popa
dec
lock
daa
jns
imul
mov
xchg
je
fisubrs
cmp
scas
xor
lahf
cmpsl
xchg
pop
movsl
cmp
jne
sbb
lds
scas
arpl
pop
sbb
lods
sub
pop
mov
stos
jno
sahf
xor
test
xchg
ror
xchg
sub
xlat
xchg
inc
sub
lahf
push
outsl
push
ja
add
cmp
das
out
in
mov
add
xor
jp
jno
dec
xchg
cwtl
sbb
scas
jns
ficoms
cmpsl
aaa
aas
mov
or
testb
popl
push
sub
mov
fwait
sub
xchg
add
roll
test
pop
das
mov
out
dec
mov
cmp
scas
nop
and
notb
sbb
xchg
cmp
push
jg
and
pop
jle
int
xchg
sub
data16
sbb
bound
test
cmp
push
xchg
push
rcrb
add
sub
daa
push
dec
xchg
xchg
clc
push
push
clc
inc
push
adc
sub
sub
ljmp
jecxz
lods
das
cmpsl
adc
and
shrb
mov
mov
pop
mov
xor
mov
mov
cmpsl
orl
mov
ljmp
outsb
jo
fcomip
push
js
push
cmpsb
dec
pop
pop
int3
outsb
and
xchg
sti
rcr
xor
shl
dec
lods
rol
ds
test
dec
insb
jp
insl
repz
lret
add
in
or
add
mov
and
jno
ret
fsubl
lea
rorb
fimull
mov
popa
mov
lahf
jmp
mov
imul
xor
cmp
jp
mov
mov
gs
jg
sbb
test
mov
xchg
rorb
fadds
pop
out
push
stos
fwait
ja
mov
ret
dec
lea
sub
sub
add
bound
mov
mov
addl
xor
ds
and
or
dec
daa
fisubs
pop
ljmp
pop
fisubl
int3
sahf
les
lahf
xorl
cmc
cmpsl
or
pop
inc
push
lahf
add
pop
or
jne
iret
out
mov
divl
out
subb
xchg
lret
sub
ret
lcall
adc
int
fsubrl
loope
adc
inc
dec
sub
xor
out
mov
add
mov
test
add
mov
aaa
shrl
add
xchg
mov
push
xor
insb
adc
aaa
cmp
pop
sahf
cmp
cmp
push
push
jle
xchg
sub
mov
pop
movsb
lods
in
xchg
and
dec
insl
xchg
in
or
or
or
cmp
imul
movsl
dec
fisttpll
clc
into
adc
lret
sarb
inc
or
inc
jecxz
cmpb
std
pop
push
test
fimuls
ljmp
nop
dec
xchg
sub
orb
xchg
cmc
cld
jecxz
mov
mov
xor
andb
data16
xchg
pop
out
jg
mov
xchg
xlat
or
push
and
mov
mov
push
stc
jecxz
lods
test
jecxz
pushf
or
push
jne
xchg
scas
sti
cmp
lret
and
jns
or
das
dec
scas
mov
fs
xchg
and
xchg
and
and
jle
push
jl
stos
pushf
popa
out
sub
jno
daa
adc
pop
xor
xchg
gs
popf
mov
mov
pop
mov
enter
into
jnp
sub
jl
sub
popa
jno
test
dec
in
aas
or
inc
shl
sub
inc
or
and
incl
inc
xchg
ret
iret
mov
sbb
dec
push
and
into
add
or
mov
xchg
mov
insl
repz
mov
adc
test
aas
xchg
fdivrs
call
mov
fcmovu
adc
add
rclb
cmp
push
imul
mov
pop
ret
cmp
sahf
jb
push
mov
add
xorl
movsb
loopne
adc
and
adc
scas
popfw
mov
xchg
xchg
jno
pop
push
and
adc
jnp
inc
mov
loop
out
push
and
ror
test
fdivl
sub
shrb
clc
in
add
push
xchg
push
pop
adc
shll
hlt
arpl
out
jne,pt
fidivrs
out
sbb
fmull
cwtl
inc
aas
dec
out
xchg
gs
xchg
pop
sub
mov
pop
sahf
dec
inc
xchg
add
inc
sar
je
repnz
ror
adc
hlt
push
ret
iret
mov
in
mov
cmpsl
call
pop
dec
lea
scas
in
decl
adc
cmp
and
dec
sub
fisubrs
cmp
lods
insb
or
sub
loop
adc
setge
lea
sarl
outsl
xchg
mov
cmp
ljmp
add
dec
and
lods
into
cmpsl
push
mov
int3
clc
pop
and
mov
pop
pop
lret
jecxz
mov
cmpsl
jecxz
in
mov
mov
orl
mov
xlat
insl
cltd
gs
lret
ljmp
dec
sub
data16
je
out
add
xchg
mov
lea
int
cmp
hlt
mov
sub
stc
mov
ja
xchg
in
inc
mov
in
dec
inc
xor
push
sub
mov
mov
mov
lret
popf
sub
lods
jle
mov
stos
push
and
jecxz
daa
xchg
jmp
jae
push
jle
mov
push
fwait
mov
lods
push
xchg
fisubrl
fistl
out
leave
loope
int3
ret
popf
in
xor
sbb
pop
insl
cmp
jae
aas
xchg
lahf
lds
out
push
xchg
outsl
mov
int3
scas
sub
test
dec
push
cmp
sub
leave
enter
loop
stc
jno
jmp
sbb
adc
pop
jno
fildl
xor
xchg
jmp
imul
xchg
cmpsl
or
pop
mov
jo
lds
lods
popf
loop
in
fisttps
fbld
lods
mov
lods
int
lcall
ret
xchg
js
add
mov
inc
fiadds
sbb
xchg
imul
xlat
lret
dec
push
mov
shrl
push
cld
jb
add
or
and
cmc
mov
insl
sub
xchg
sub
stos
cld
es
out
orb
sub
pop
push
jge
push
lock
outsb
shll
jb
mov
cmc
xchg
aad
in
jb
inc
lahf
sub
xlat
iret
pop
test
xor
xchg
adc
ja
or
cmp
imul
adc
sbbb
scas
mov
inc
mov
pop
jae
cltd
sbb
sbb
sarl
xlat
outsl
lcall
in
jge
std
cmp
or
pop
dec
loop
scas
adc
ds
pop
xchg
neg
mov
out
je
addr16
addb
lods
insl
outsb
push
cs
loope
jae
stos
mov
adc
inc
shll
pop
sbb
sub
lock
hlt
mov
fimuls
mov
push
inc
cli
popf
jmp
cltd
pusha
lods
sahf
rep
lea
xchg
lret
addr16
fwait
mov
shlb
add
fistpl
stos
rcrl
cli
mov
test
add
mov
es
xor
push
test
jne
repnz
mov
les
inc
push
push
cmp
mov
dec
jne
mov
pop
ds
loop
mov
in
addr16
popf
fisubrl
fs
or
int
jbe
aas
adcb
push
or
mov
js
dec
subb
mov
gs
mov
mov
mov
mov
jbe
int
lds
push
insb
nop
push
int
sub
cmp
lret
cmpsl
cmp
testl
loop
outsl
dec
mov
mov
xlat
mov
negl
popf
dec
pop
outsl
pop
scas
pop
dec
out
cmp
test
xchg
dec
xor
add
jb
push
jae
pop
pop
inc
popa
arpl
insb
mov
mov
lods
sub
dec
cmpsl
or
inc
sbb
bnd
insl
mov
test
fs
pop
inc
cltd
scas
lahf
loop
mov
lret
sbb
subl
sbbb
outsl
xlat
pusha
and
arpl
xchg
fwait
vpextrw
lds
andb
lods
fdivrs
xchg
test
push
pop
test
dec
mov
mov
jmp
inc
xor
mov
xchg
test
mov
repnz
mov
or
push
addr16
lahf
push
or
push
xchg
loop
inc
enter
orb
or
inc
xchg
mov
xlat
inc
mov
popf
mov
cmp
outsl
in
mov
lods
mov
sub
les
and
testb
add
sbb
pop
lods
mov
dec
sar
loop
pop
adc
pop
adc
test
jge
jge
xchg
cmp
mov
in
mov
xor
jne
dec
add
sub
lea
inc
int
cmp
pop
out
cmp
mov
scas
jg
imul
inc
out
test
mov
inc
mov
arpl
sahf
xchg
or
je
jle
ret
outsb
jno
push
stc
loope
xlat
int3
or
mov
jp
mov
daa
cmp
mov
xor
sub
xchg
mov
pop
jae
xchg
fidivrs
and
icebp
jnp
incl
xchg
xchg
push
mov
mov
sub
push
dec
cli
shlb
cmp
out
mov
ffreep
jl
adc
mov
xor
and
sbb
sub
ror
outsl
xchg
iret
sbbl
fbstp
and
jge
scas
push
addr16
add
jo
xchg
or
call
stos
jnp
dec
jne
cli
subl
pop
mov
fldenv
in
mov
cmc
sub
nop
push
sahf
ret
leave
lods
out
into
sbb
mov
jl
int
push
adc
pop
addr16
mov
sbb
mov
std
lods
cmpsl
scas
ret
lea
push
out
popa
mov
jno
or
lods
pop
hlt
loopne
dec
scas
bnd
bt
fisubs
cmpsl
xor
daa
sub
ja
push
mov
outsb
shrb
or
daa
and
inc
cs
sub
movsb
fs
dec
mov
add
inc
inc
jge
ja
scas
les
add
mov
daa
test
stos
add
fneni(8087
lret
jo
fcompl
mov
mov
xchg
cmpsl
data16
jl
test
xchg
mov
mov
sbb
ret
loop
push
inc
pop
in
daa
pop
mov
dec
hlt
adc
pop
and
sahf
jl
adc
xor
lcall
les
mov
std
js
inc
outsl
jmp
sbb
lock
xchg
stos
sarb
test
nop
out
mov
lcall
xchg
dec
add
mov
ljmp
popf
pop
movsb
jne
int
mov
sub
push
mov
mov
lret
je
inc
or
outsl
cmp
mov
cltd
pop
adc
popf
and
inc
rcrb
pop
popf
jno
enter
int
jmp
xchg
push
jae
xchg
push
and
int3
aam
or
cmc
insb
fsubr
cmp
pop
inc
fisubrl
or
es
or
in
cltd
sysexit
xor
ficoms
adc
scas
dec
repnz
lods
xchg
std
repz
xchg
rcr
shll
daa
shll
movsl
cmp
out
hlt
icebp
push
add
dec
pop
jp
push
xor
xor
sub
jnp
scas
mov
mov
mov
jge
mov
add
test
jmp
or
and
mov
xchg
xor
lock
insb
lahf
add
jle
and
and
inc
in
and
xchg
xor
mov
sub
cmp
hlt
aaa
jae
sti
mov
mov
push
sti
xchg
arpl
push
add
cmp
sub
mov
pop
hlt
divb
loope
jns
jecxz
sub
lods
add
cmp
mov
cmp
jo
lret
cli
fmuls
fldt
shl
inc
mov
mov
xchg
sahf
add
lock
loopne
lods
mov
push
mov
out
loopne
xchg
aaa
adc
mov
adc
mov
xchg
and
jmp
fmull
mov
fnsave
sub
popf
leave
sub
jp
sbbl
cmp
cmc
add
movsb
cmp
fistpl
fimull
mov
lcall
in
les
stos
or
jns
call
fucomp
pop
scas
adc
stos
ljmp
mov
mov
cmp
mov
into
ds
jno
lea
jno
sbb
std
sbb
gs
push
pop
testb
or
xchg
dec
test
xchg
mov
jnp
push
scas
int3
jp
mov
and
arpl
push
scas
xchg
jne
or
jbe
sahf
cmpsl
inc
int
pop
jb
fs
lds
jno
jb
aas
inc
test
sub
xchg
jne
jb
mov
rcll
loopne
outsl
lcall
push
scas
icebp
or
xor
pop
aam
xlat
pushf
sub
shl
sbb
aaa
sti
sbb
jo
stos
decl
lret
lods
sar
test
push
lret
pop
lods
addr16
out
mov
mov
pop
and
xchg
dec
push
es
in
and
hlt
jno
lods
and
sbb
data16
pop
xor
ss
cmp
ljmp
jbe
in
mov
sbb
push
frstor
mov
and
call
mov
ljmp
add
not
in
rcrl
shlb
dec
push
sbb
iret
lock
dec
jp
cmp
fcompl
ficoml
mov
pop
repz
scas
mov
pop
mov
daa
or
mov
pop
sub
or
ja
push
mov
mov
push
jmp
das
movsb
mov
mov
jle
push
or
dec
push
imul
ljmp
int
cld
sub
loop
push
adc
jb
cwtl
insb
push
or
jae
pop
or
and
scas
mov
mov
cmc
lcall
pop
pop
pop
and
mov
mov
xor
lods
popf
test
xor
arpl
ljmp
clc
loope
pop
mov
in
add
jge
mov
icebp
mov
cli
mov
data16
test
fwait
push
inc
fistpl
das
jl
clc
sub
add
mov
pop
loop
add
sub
fcomps
xor
mov
inc
popa
adc
ret
imul
add
insb
add
mov
cmp
ret
scas
add
das
outsl
push
clc
sbb
movsb
add
pusha
outsl
jge
and
adc
jle
mov
insl
cmc
add
xchg
out
jae
xchg
dec
mov
call
rcrb
dec
pop
jmp
adc
jge
sub
jecxz
and
dec
jle
pushf
lods
es
insb
mov
mov
fisubl
mov
cmc
imul
test
addl
jge
and
ljmp
lcall
dec
sahf
addr16
fs
sbb
and
loope
mov
dec
fs
jge
lret
pop
jno
cmpsl
repz
push
xchg
inc
xor
push
sar
add
rcrl
jg
fcoms
dec
gs
popa
int3
mov
addr16
inc
cmpsl
popa
xchg
inc
dec
sarl
gs
mov
scas
mov
fwait
sub
lcall
clc
popl
mov
lret
cltd
cvttps2pi
and
push
push
loopne
repz
es
sbb
lahf
pop
jmp
push
jno
jg
add
stos
jae
and
pop
xchg
mov
fisubl
popf
push
xlat
insl
add
decb
xchg
xchg
cmp
mov
add
cmp
mov
xor
sub
xor
dec
xchg
xor
aaa
xor
mov
jecxz
rclb
and
push
rcll
mov
add
das
cli
mulb
popa
out
sub
scas
lods
pushf
xchg
inc
inc
inc
adc
adc
mov
sbb
int3
lods
ja
pop
fiaddl
adc
add
lret
adc
data16
bound
ljmp
xor
js
stos
into
sbb
jecxz
dec
loopne
sub
sbb
int
pop
stos
jb
jl
inc
dec
repnz
jo
xchg
push
xchg
add
or
cmp
xor
rorb
mov
cmc
xor
pop
into
lea
lahf
insl
scas
iret
push
out
dec
mov
xor
aaa
push
pop
insl
push
push
in
cmpsl
cmp
mov
cmp
out
popa
in
jno
push
pop
pop
push
push
cli
jl
add
add
adcb
jmp
lock
mov
scas
or
push
or
sbb
or
sub
inc
in
mov
push
dec
in
jg
jge
into
sub
and
mov
ss
or
jns
stos
enter
sbb
mov
imul
mov
les
inc
mov
jge
and
fsubrl
leave
and
inc
into
popa
popf
outsl
jo
cli
arpl
xor
cmp
pusha
or
outsb
loop
imul
aam
loop
into
test
sub
add
add
sub
pop
inc
daa
sub
int
in
sub
fsts
dec
stos
dec
out
cs
insl
mov
xor
hlt
cmp
lcall
jp
push
sbb
aam
and
sbb
cmpsl
lods
dec
jecxz
hlt
pop
adc
or
and
push
pop
push
jne
jns
sub
fstl
popf
mov
or
imul
daa
lods
sbb
add
sub
xlat
cmp
hlt
aaa
lea
mov
pop
or
test
lahf
lods
je
aaa
shlb
mov
xchg
xchg
cmp
pop
lods
addr16
adc
mov
pop
add
inc
inc
xchg
scas
jg
push
sub
mov
dec
cltd
sub
stos
mov
les
fildl
xor
aam
mov
and
sarb
repnz
sbb
xchg
push
xor
loope
dec
sub
pop
test
sub
jb
pop
or
xchg
insb
out
mov
cmp
iret
in
mov
ss
lods
add
cmp
pushf
stos
daa
inc
sub
dec
lahf
xchg
and
popf
fsubl
dec
jle
cmp
xchg
imul
xor
cmp
mov
add
aaa
sbb
and
insl
aaa
mov
push
or
jno
leave
lcall
dec
jg
mov
push
mov
xor
sarb
fidivrl
ficomps
mov
inc
popf
inc
mov
insb
outsb
pusha
xor
clc
mov
mov
sbb
stos
mov
add
mov
or
or
xor
ret
sbb
sti
fildll
mov
cmp
in
mov
mov
gs
sub
sub
lahf
rcrl
mov
inc
fsubrl
and
lea
repnz
shlb
jae
pop
sti
inc
sub
pusha
addl
jmp
lock
sbb
ret
in
lods
addb
cmp
mov
ss
jmp
xlat
xchg
popf
push
mov
cli
and
xor
sbb
call
inc
dec
add
in
push
in
mov
pop
jo
hlt
mov
add
sub
inc
dec
arpl
or
dec
out
cmp
insb
mov
pop
into
cmp
addr16
in
ljmp
lods
call
das
xchg
or
stc
aaa
dec
inc
xchg
pop
inc
mov
in
hlt
fucom
push
jae
and
push
lret
xor
lods
add
jb
and
lea
cmp
fwait
mov
push
mov
leave
lock
push
and
pop
jge
orb
adc
fwait
aam
in
pop
scas
mov
packuswb
xchg
xor
std
xor
inc
xor
inc
xchg
shll
lahf
addr16
cwtl
into
insl
xor
mov
into
cmp
dec
pop
and
sub
pop
mov
pop
mov
sbb
daa
daa
outsb
jb
jns
aaa
ja
sbb
mov
movsl
push
xor
mov
pop
ret
inc
jns
dec
mov
xchg
lock
inc
dec
sbb
cmp
inc
in
push
inc
pop
iret
mov
addr16
mov
gs
bound
mov
mov
testl
mov
and
adc
cmp
inc
add
lods
insb
mov
and
add
cmp
stos
or
xlat
inc
bnd
jl
mull
sti
mov
mov
iret
mov
outsl
enter
xor
jne
mov
rorl
daa
pop
aas
and
je
scas
sub
cmp
push
shr
mov
cwtl
dec
loope
mov
ja
cmp
ret
pop
push
cltd
mov
pop
daa
push
mov
cmc
or
lods
inc
bound
mov
and
sub
push
call
lea
je
subl
cmpsl
iret
mov
mov
js
cmp
cmp
xor
ljmp
sbbl
xchg
push
push
and
cmp
in
subb
test
fisttps
cmc
and
jns
orb
outsb
imul
in
test
jnp
jmp
enter
fbld
push
test
ficoms
aas
fnstenv
adc
jge
push
test
hlt
dec
mov
je
inc
int
incb
lcall
and
xchg
push
cmp
jno
pop
push
lret
mov
or
mov
sbb
stc
or
mov
stos
scas
mov
arpl
push
pop
mov
inc
jecxz
xchg
int
xchg
addl
and
push
cmp
xor
mov
call
xor
xlat
mov
lcall
jbe
mov
xor
pop
mov
push
jne
loop
mov
lcall
sub
mov
ljmp
outsb
lcall
mov
mov
push
inc
into
sahf
xchg
sbb
push
mov
imul
dec
cmp
fwait
lea
repnz
mov
leave
mov
arpl
mov
pop
cmp
or
sahf
mov
mov
pop
push
dec
mov
js
jo
cmpsl
sub
cltd
mov
int3
sbb
cmp
clc
cwtl
mov
add
push
test
jno
sbb
je
push
test
addr16
shrl
ljmp
xor
mov
pop
fidivrl
loopne
shrb
fwait
int3
les
scas
lea
ja
adc
fidivrs
ljmp
xor
lock
cmp
xor
sub
sahf
out
inc
push
test
mov
enter
enter
dec
adc
mov
add
mov
mov
stos
push
xchg
loopne
outsl
add
cmpsb
sub
push
decb
add
dec
push
pop
movsl
loop
push
dec
cmp
push
movsb
popa
mov
inc
dec
xor
cmp
scas
push
inc
scas
sub
int3
scas
insb
mov
xchg
call
adc
xor
mov
test
mov
sbb
test
mov
pop
in
jae
sbb
sub
sub
aad
jge
mov
cmp
lahf
lret
out
hlt
mov
xchg
in
xchg
lds
jnp
cltd
leave
imul
scas
adc
shl
push
data16
dec
dec
ss
pop
daa
popa
pop
insl
pop
mov
lods
loopne
sbb
xor
or
and
data16
fisttps
dec
mov
cli
mov
dec
lock
iret
xchg
push
adc
adc
jb
movsl
jno
gs
xchg
insl
imul
adc
or
mov
mov
outsb
sub
rolb
sub
lods
mov
bound
mov
push
xchg
jge
scas
xor
cmp
jne
std
scas
sub
cmp
fstpt
mull
sub
pushf
fiaddl
push
adc
mov
int
sub
push
xor
adc
inc
mov
lods
adc
mov
mov
push
rolb
push
shlb
cmpl
int
ds
ds
sbb
cmp
push
or
out
insb
cmpsl
cmp
aas
inc
jmp
cwtl
enter
add
insb
or
pop
xchg
repz
dec
lods
pop
ja
pop
jns
stc
cli
popa
push
fdivrs
sbb
jmp
jl
or
stos
and
gs
insb
shlb
inc
dec
add
xchg
pop
mov
add
pop
adc
add
push
fsubs
mov
adc
in
outsl
outsb
out
mov
push
and
loop
jmp
mov
or
cmp
xor
jp
inc
in
stos
dec
add
fsubrs
mov
stos
push
bound
inc
pop
jnp
scas
push
icebp
add
mov
dec
adc
and
xchg
stos
mov
cltd
inc
mov
dec
arpl
imul
adc
jb
sub
mov
fucomip
push
mov
fldenv
jle
dec
mov
mov
and
pop
into
mov
push
sub
cmp
insl
mov
mov
sarl
mov
add
mov
cmpsb
dec
jmp
outsl
and
push
ret
mov
jmp
sti
out
rorl
push
and
xor
lods
jmp
cs
cmp
gs
mov
arpl
icebp
das
movsl
cmp
cmp
or
test
push
mov
add
loopne
out
push
lret
xlat
sbb
xlat
xchg
cmp
cs
lahf
mov
dec
enter
cli
push
and
jne
xchg
not
dec
lahf
xchg
adc
and
mov
or
lret
scas
push
fwait
fs
mov
xchg
inc
pop
push
push
hlt
inc
outsl
cmp
and
rcrl
out
addr16
sti
popf
pop
lods
call
pop
mov
popf
lcall
scas
je
or
sub
or
xchg
outsb
call
lea
daa
stos
in
xor
iret
mov
stos
push
loope
push
mov
sub
pop
out
cmpsl
xlat
adc
inc
sub
add
roll
loopne
popf
mov
in
dec
cli
pusha
push
out
bound
shlb
adc
xchg
push
push
mov
pop
mov
scas
and
in
daa
add
repz
test
hlt
jae
cs
movsl
sub
loopne
mov
cmpsl
mov
jle
or
push
push
ret
roll
inc
fldcw
imul
les
gs
addl
adc
lea
insb
rcll
mov
dec
in
pop
cmp
jg
mov
popa
cwtl
mov
les
adc
int
imul
bound
mov
ja
cmp
and
ss
movsl
insl
lahf
lret
mov
lods
dec
fs
jge
popa
shlb
xchg
popl
mov
popf
cmpsl
and
sahf
jl
iret
mov
addr16
hlt
enter
mov
jnp
pop
mov
push
or
gs
sub
insl
inc
or
dec
ljmp
hlt
not
push
add
and
jg
mov
adc
movsl
movsb
pop
ret
fists
inc
inc
mov
cmpsl
lock
cltd
cmp
std
lock
jg
shlb
mov
int3
lret
shl
cmpsl
push
cmp
orl
cmpsl
and
scas
xchg
push
bound
cmp
mov
jg
shlb
mov
js
aam
mov
aaa
push
inc
push
lea
push
loope
mov
call
add
mov
fadd
fstpl
sbb
outsb
xor
adc
cmp
push
or
cmp
cmpsb
cs
xor
mov
dec
jecxz,pn
out
imul
or
je
test
repnz
ljmp
sarb
jmp
dec
test
shl
sub
push
sbb
jb
daa
dec
adc
imulb
popa
lcall
inc
rol
dec
dec
cmpsb
sbb
jae
mov
cmp
iret
fldcw
and
dec
and
movsl
push
jo
inc
insl
outsl
imul
mov
mov
daa
dec
pop
out
arpl
jg
inc
push
xchg
xchg
or
cli
or
xlat
sbb
push
lods
ja
dec
testl
insb
mov
push
sarb
xlat
mov
xchg
push
jmp
ds
mov
pop
adc
je
jmp
and
sbb
xor
fdivs
dec
lock
push
xor
dec
mov
fildl
ja
js
in
cmp
gs
cltd
lret
ficompl
cltd
mov
outsl
and
mov
into
sbb
mov
push
mov
daa
cli
sti
pop
lret
orl
movsb
push
sbb
lea
insl
push
bound
jne
inc
insl
lret
push
nop
mov
push
add
and
fdivrl
lods
orb
loope
xor
push
pop
ljmp
jmp
adc
xor
jb
push
ljmp
bound
mov
psubsb
jae
mov
mulb
aam
push
sub
insl
dec
dec
repnz
mul
dec
sarl
cmpsl
cmpl
or
sub
ds
je
mov
mov
jb
repz
mov
sub
cmp
hlt
dec
daa
fs
jge
mov
ds
dec
or
lea
lods
sub
mov
shll
fists
mov
push
mov
pop
mov
les
sbb
fdivr
popf
pop
xchg
push
mov
jb
and
lods
mov
pop
out
daa
mov
jecxz
aaa
insb
or
or
fwait
mov
shll
dec
lret
adc
sub
leave
dec
add
mov
icebp
fwait
int3
push
dec
mov
jmp
test
sub
les
sahf
mov
and
add
xchg
bound
sbb
stos
xchg
and
pop
add
xor
cs
fnsave
push
push
add
xchg
pop
mov
mov
test
jecxz
lods
inc
and
mov
or
in
adc
in
sbb
mov
adc
or
in
in
sub
cmp
incl
push
iret
clc
dec
xor
insl
ljmp
mull
add
test
push
int3
sub
fs
sbb
iret
stc
lret
lea
std
jmp
cmpsl
aaa
ja
filds
xchg
inc
mov
cmp
clc
rcll
xchg
sarl
mov
jns
push
mov
cmp
fwait
mov
ret
movsb
cmp
push
popa
mov
in
call
push
bound
add
lds
xlat
xor
cld
ffree
fwait
ljmp
xor
rcr
inc
mov
cmp
and
movsl
sbbb
insl
add
inc
sbb
mov
lods
xor
and
sub
les
dec
call
and
lahf
mov
adc
push
push
es
and
popa
cmp
aaa
cmpsb
shlb
pop
mov
out
sub
xchg
leave
cltd
lods
sti
xlat
ffreep
hlt
sbb
push
mov
dec
and
xchg
or
ds
mov
or
pop
and
mov
scas
add
pushf
pop
or
jmp
inc
dec
notl
leave
enter
lods
out
fldt
sbb
leave
pushfw
cmp
aam
sbb
leave
mov
flds
test
fcmovu
and
cmp
mov
aad
sub
add
jb
or
xor
inc
lods
xchg
movsl
arpl
sbb
mov
and
pop
js
sar
int
jae
in
insl
xor
not
sbb
les
xor
popf
xchg
sbb
sub
clc
inc
mov
movsl
push
xorl
insl
dec
and
mov
push
cmp
cltd
arpl
and
arpl
imul
push
mov
test
popl
test
insl
xchg
mov
lods
sub
pop
add
push
shll
dec
cmp
mov
jb
lock
xlat
je
inc
cmp
jecxz
popa
andl
cs
push
adc
scas
inc
sub
movsl
mov
fistl
pop
lea
push
or
xor
shlb
js
lods
dec
outsb
stc
int3
cmc
in
jl
inc
out
add
xchg
jg
les
inc
or
jge
dec
sbb
fisttpl
sbb
sahf
ja
cmp
sarb
mov
add
daa
mov
or
insl
cmp
push
push
movsl
gs
jb
pop
stos
lods
jnp
enter
mov
in
gs
in
out
jge
sbb
sbb
xor
bound
dec
or
sub
pop
sti
mov
pop
cmp
push
fmull
in
lret
push
or
lea
cmp
cmpsl
mov
stos
sbb
mov
and
push
cmp
insl
inc
icebp
aam
ret
sbb
and
jae
pop
mov
insl
sub
loop
jae
rorl
movsl
ljmp
test
inc
mov
mov
add
cmp
popa
sbb
push
or
jne
and
and
cmovge
jmp
pop
std
jge
lret
or
pop
fbld
jp
call
xor
aad
mov
test
dec
adcl
xchg
adc
popa
lret
xchg
cli
lea
iret
fbld
insl
xchg
in
inc
push
lds
xlat
pop
inc
add
cmp
das
and
push
mov
sbb
in
int
jb
arpl
cmp
xchg
sahf
and
add
cs
clc
lret
xor
mov
fbld
test
lcall
mov
les
movsb
pop
lods
lods
movsl
test
subb
and
and
mov
cli
cmp
xor
and
sbb
lods
dec
and
dec
mov
xor
mov
daa
ret
push
ds
pop
je
mov
leave
jg
aad
push
in
inc
loopne
xchg
sbb
jo
pop
jae
repnz
insl
and
lahf
mov
movsl
mov
or
fnstenv
and
add
dec
push
lea
and
xchg
add
arpl
mov
stos
movb
stos
push
popa
sub
mov
cli
fsubrl
and
sbb
cmpsl
imull
sub
ja
cmp
jecxz
popa
ret
loope
mov
adc
pop
stc
pop
xchg
fildl
xor
adc
je
xor
mov
sbb
or
pusha
shrl
pop
stos
les
sub
adc
jge
scas
add
daa
fisubs
jne
and
sbb
lea
insl
clc
add
sbb
scas
sbb
lea
clc
xchg
add
mov
je
orb
gs
inc
or
and
push
sub
sub
dec
in
scas
xchg
sbb
pop
jge
mov
add
inc
pop
adc
pop
mov
pop
push
das
sub
fcmovnu
outsl
lret
mov
lds
xlat
adc
mov
dec
dec
pop
shrb
test
mov
test
movsl
test
mov
mov
sub
add
jae
stos
push
lods
movsb
pop
sbb
aas
dec
aas
inc
or
xchg
pop
sbb
sbb
out
adc
lret
xor
in
out
movsl
ljmp
pop
das
add
gs
xor
mov
mov
cmpsb
das
add
mov
and
inc
enter
ljmp
sbb
out
sbb
iret
xor
test
arpl
decl
and
and
in
ss
mov
xor
das
daa
cli
adc
push
jmp
push
pop
movsl
mov
sub
stos
jne
xor
das
pop
addr16
inc
pop
mov
xchg
mov
insb
les
insl
icebp
fincstp
cmp
loopne
lock
mov
enter
and
mov
popa
loopne
cmp
repz
cmpsl
test
mov
jne
cs
mov
outsl
cmc
into
loopne
mov
sbb
mov
popf
es
push
mov
stc
cltd
dec
adc
and
jno
sbb
call
data16
test
jl
push
add
cmp
add
test
ss
fildl
inc
cs
cld
out
adc
insb
jno
pop
adc
xor
clc
or
cmp
pop
jo
push
add
xor
jae
cmc
test
jecxz
movsb
mov
data16
icebp
leave
les
mov
cmpsb
cmp
loop
clc
adc
push
loop
rol
cmpsb
mov
sub
xor
stos
test
stc
and
mov
movsl
aaa
mov
jo
add
sub
mov
cmpsl
sbb
mov
imul
int
je
jl
or
xchg
add
clc
loope
bound
jg
pop
in
mov
fistl
xor
and
popa
sub
jmp
push
enter
lods
xor
sbb
push
int
bound
fidivrl
test
repz
push
adc
out
fadds
cmp
jge
in
sub
les
rolb
lahf
add
xor
and
mov
sbb
mov
movsb
stos
aam
mov
fdivl
mov
xor
jb
mov
sbb
wrmsr
insb
sbb
add
loope
cld
pop
fs
xchg
lcall
fucomp
out
dec
add
nop
int3
outsb
jbe
imul
ffreep
jp
cli
pop
inc
cmp
mov
lret
fisubrs
or
dec
xchg
adc
mov
xor
jp
sub
rcrb
cmp
xlat
and
test
mov
scas
inc
cmpsl
lds
jno
and
mov
rcrl
repnz
sub
jae
sub
cli
adc
xchg
fisttpl
xor
call
add
mov
loop
pusha
xchg
mov
sbb
adc
push
lcall
mov
pop
inc
sub
xchg
xor
xor
dec
fidivrl
jle
dec
stos
add
mov
loop
ss
clc
in
dec
cmpsb
dec
or
in
cmp
xlat
pop
jae
ja
xor
ret
push
mov
loope
and
in
bound
incl
mov
or
mov
int3
lods
cmpsl
movsl
bound
ret
mov
sub
and
push
pop
lret
aaa
sbb
movsl
pop
cmp
mov
les
mov
outsl
pop
cwtl
dec
jns
inc
adc
xorl
loope
dec
push
jno
xor
mov
push
outsl
cli
jae
das
adc
add
outsl
sub
mov
push
mov
sbb
mov
add
es
xor
scas
hlt
in
inc
popf
or
dec
inc
out
lcall
iret
imul
cmp
push
cmpsb
jne
jmp
pop
movsb
lret
lcall
bound
hlt
clc
ficoml
std
stos
jns
cmpsb
cmp
pop
or
dec
push
mov
add
movsb
cli
add
and
scas
xor
dec
jb
dec
mov
pop
cmp
pop
mov
inc
inc
pop
notl
lcall
pop
gs
in
or
sbb
jnp
stos
mov
xor
outsl
out
or
or
dec
repnz
push
ds
pop
jg
sar
xrelease
xor
aaa
andl
lea
or
cmp
lods
std
in
ret
inc
cmp
icebp
cmp
inc
fdivs
pushf
jbe
or
rcrl
xchg
mov
adc
sahf
or
lret
fwait
push
or
jno
mov
out
mov
add
adc
sti
ljmp
jne
push
pop
pop
hlt
fbld
test
add
outsl
dec
xor
push
scas
test
inc
fdivrl
add
xchg
push
add
sbb
mov
mov
push
pop
jmp
ret
lcall
mov
call
jne
in
cld
xchg
sarl
inc
dec
jecxz
addr16
repz
bound
test
dec
inc
jl
or
std
data16
scas
in
or
adc
fwait
js
ret
test
cmpsb
gs
repz
popf
lea
mov
cmpsl
xchg
out
gs
pop
bound
pop
and
cmp
lods
mov
inc
pop
and
inc
mov
or
ljmp
pop
inc
mov
xor
adc
pusha
mov
ja
xchg
aas
dec
jae
mov
insl
sub
mov
jb
xlat
mov
cmpb
mov
push
cltd
push
push
or
imul
daa
lret
fiaddl
call
inc
test
push
mov
and
xor
sbb
xor
jae
push
mov
cmp
or
lahf
jno
pop
fadd
fbstp
cli
push
ja
pop
shlb
jp
mov
in
mov
cmpsb
sbb
imul
testb
jecxz
cmpsl
adc
std
cmp
cmp
xor
sbb
fistpll
push
cmpsl
cld
mov
sub
bound
data16
cmp
les
and
mov
in
inc
jle
bound
lahf
popa
test
rorb
or
jb
mov
mull
xor
std
mov
icebp
aam
sbb
lds
mov
repnz
int
stc
decl
mov
inc
test
cmpsl
inc
jecxz
inc
aaa
xchg
inc
push
pop
inc
mov
or
add
inc
dec
push
adc
xchg
push
and
in
or
loopne
sub
sbb
pop
add
mov
cmp
dec
movsl
inc
imul
gs
adc
jb
or
scas
jle
stos
lahf
sarl
jne
in
jmp
stos
call
push
inc
enter
mov
cmp
pop
or
in
mov
in
cmp
decl
xchg
fadd
pop
sub
cmp
push
mov
gs
sbb
jecxz
testl
fs
lods
mov
outsl
inc
std
loopne
mov
xor
aad
xchg
fsubs
fcoml
sbb
push
sub
add
pop
scas
cmp
cmp
add
aam
push
mov
out
sub
rcrl
add
ljmp
push
inc
in
out
cmp
mov
jge
ret
dec
adc
mov
cmp
sub
and
xor
jmp
jne
popa
adc
xchg
sbb
sbb
inc
in
mov
daa
mov
pop
mov
insl
mov
mov
into
aam
ljmp
std
and
xchg
mov
aaa
movsl
xor
lods
or
pop
lahf
mov
orb
jmp
out
dec
adc
xchg
jne
test
push
and
jb
adc
ss
pop
mov
xchg
test
sbb
es
cmpsl
pop
aaa
inc
add
xchg
loopne
sub
aas
in
outsb
cmp
int3
and
sub
xor
insl
shlb
js
jecxz
push
and
repnz
aaa
lds
pushf
mov
adc
xlat
mov
insl
xchg
push
fidivl
rcr
sub
or
cmp
insl
xor
jg
test
pusha
daa
add
loop
fistl
sub
cmpsl
jg
push
push
out
jnp
or
mov
adc
ficoml
pop
inc
aam
aaa
inc
mov
andl
pop
test
sub
inc
cmp
sbb
insl
decl
xor
push
sbb
or
rorl
mov
lea
xchg
mov
fs
jge
mov
out
arpl
or
icebp
add
lods
test
repnz
fcmovne
out
test
pop
sbb
sub
negb
popf
jl
movsl
or
pop
dec
add
jecxz
sub
rolb
xor
dec
push
push
jmp
imul
mov
fs
stc
bswap
lea
lea
test
out
push
ret
xchg
push
outsb
popf
pop
stos
arpl
add
and
test
cmp
leave
clc
scas
mov
xchg
or
xlat
lahf
jle
jae
dec
imul
jae
outsl
aad
scas
lcall
or
adc
insb
outsb
out
mov
dec
ljmp
sub
jae
xlat
lahf
adc
std
imul
inc
cmc
and
adcl
popf
fstl
and
outsb
or
jge
aaa
dec
je
scas
xor
push
xchg
mov
aaa
cmp
inc
hlt
je
or
inc
mov
les
popf
pop
xor
repnz
or
fsubl
repnz
addr16
ljmp
in
xchg
jmp
lahf
fisubrs
or
inc
or
das
je
aad
sub
popf
int3
pop
aaa
in
mov
ljmp
mov
cli
dec
jae
xlat
lahf
repz
std
push
loope
dec
cmc
and
xor
popf
fstl
and
outsb
or
fs
insl
dec
outsb
pop
scas
inc
in
test
insb
push
hlt
pop
cli
data16
fisubrl
dec
mov
mov
push
sub
in
popf
mov
push
mov
or
in
es
push
test
ds
pop
xchg
inc
dec
lret
lea
sti
and
enter
pop
xchg
inc
cmp
hlt
int3
inc
cmp
fsubrs
lret
xor
push
lahf
jmp
repnz
leave
and
shrb
xor
fimull
into
pop
add
ficoml
fidivrl
fcmovbe
xor
ficompl
ret
adc
ljmp
jns
xchg
test
scas
lahf
cmp
popf
test
cmc
adc
jne
xchg
and
jne
sub
ret
scas
ret
popf
or
rorb
xor
or
mov
fnstsw
das
std
xor
mov
fistl
lea
pop
jl
es
and
jle
xchg
lods
and
sub
jecxz
xchg
xlat
std
push
jge
push
inc
imul
std
fidivs
in
pop
inc
push
or
insb
mov
sub
fildll
ljmp
cmp
xchg
lcall
xchg
addr16
out
in
leave
sar
mov
pop
sub
arpl
aam
sub
and
add
or
popa
es
and
add
ljmp
and
leave
add
fidivl
or
xor
mov
int
inc
or
cmc
ljmp
adc
mov
fstps
lods
ljmp
sti
mov
test
and
or
test
cmc
outsb
int3
push
aas
lods
cmp
dec
dec
mov
and
mov
aaa
sarb
xchg
int
out
jmp
jmp
mov
popa
out
pusha
lods
jae
jge
push
cmpsb
jne
lods
imull
xchg
xlat
loope
fimull
mov
adc
mov
jge
cmp
call
insb
mov
dec
les
fdivs
in
insb
cmpsl
and
fdivp
jge
sub
sub
scas
adc
lock
cmp
aad
sbb
xchg
sub
push
adc
add
mov
lock
pop
outsb
and
dec
daa
out
fwait
mov
mov
lret
mov
mov
loopne
sbb
mov
hlt
push
xchg
or
jbe
testl
mov
jb
dec
or
jbe
scas
pop
bound
arpl
fisubs
dec
movsl
adc
rolb
imul
fs
test
fwait
pop
ret
jb
mov
jge
std
push
ret
push
sub
insl
js
xchg
repz
mov
push
imul
sub
mov
push
jmp
mov
fisubl
cltd
cmp
xchg
mov
sub
adc
pop
rorb
loop
dec
mov
call
pop
daa
popa
or
xchg
mov
mov
es
mov
pop
jb
pop
pop
dec
jno
mov
adc
lods
push
jno
pop
pop
sbb
fdivrl
jbe
scas
sub
aas
xchg
adc
orb
jg
mov
push
lcall
xor
xor
lcall
fcoms
lahf
sbb
adc
gs
pusha
pushf
adc
xchg
lret
jb
int
jecxz
mov
mov
sbb
lret
jl
mov
sub
aas
fisubrl
out
or
lods
add
sub
lcall
out
push
or
mov
and
xor
mov
imul
shlb
cmp
pop
mov
lea
lods
test
cmp
pop
mov
rcrl
mov
sbb
mov
pop
aaa
or
loope
cmp
xor
add
sbb
ja
jne
sub
loope
addr16
or
and
or
lcall
adc
gs
xor
data16
push
fldt
push
dec
add
cmp
xchg
shl
fimull
sbb
push
es
mov
lret
xor
aam
cmp
sub
jb
std
sub
test
out
sub
and
lea
inc
sub
push
cli
movsb
lea
rcrl
xor
mov
int
in
fwait
xchg
xor
out
add
jge
fwait
adc
xor
addr16
js
and
cmp
test
daa
inc
jge
jl
adc
scas
pop
sbb
scas
scas
jle
xchg
lods
int
jne
mov
pop
in
je
xor
lret
mov
movsl
repnz
movsl
xchg
and
add
std
lret
mov
addr16
clc
shlb
insl
ffree
jne
xchg
pop
out
pop
cmp
xor
xchg
push
popa
add
insl
lods
xchg
pop
or
popf
cmp
or
std
jmp
xor
xor
dec
jle
jne
xor
sub
pop
fwait
pop
cmpsl
es
add
shll
cld
ret
movsl
xor
test
daa
lods
dec
cmp
xchg
sbb
cmpsb
ja
lea
stos
ljmp
lret
lea
mov
push
push
addr16
pop
adc
bound
popf
inc
inc
lods
dec
push
and
push
or
movsl
repnz
sbb
imull
xor
jle
mov
filds
outsl
movsl
xchg
add
outsl
jno,pt
fistl
mov
add
and
addr16
test
popf
insl
fstl
mov
jb
insl
fwait
insb
pop
in
test
bound
je
cmp
and
popa
mov
outsb
repnz
xchg
cmp
aad
enter
movsl
add
mov
repnz
adc
add
or
push
cmp
sub
dec
hlt
faddp
rol
xchg
mov
repnz
jb
cmp
and
popa
les
pop
mov
fisttpl
stos
cmpsl
mov
pop
in
mov
mov
and
dec
push
sub
fisttpll
mov
pop
inc
call
mov
movsl
mov
ds
ljmp
push
lret
les
or
andl
mov
mov
jg
ss
sbb
and
xor
stc
cmp
scas
bound
push
mov
push
jnp
push
jle
jb
fldl
mov
cmp
and
push
outsl
cwtl
push
jmp
fildll
cmpsl
gs
cmp
or
hlt
sub
push
daa
xorb
ljmp
pop
bound
dec
lea
fwait
xor
imul
mov
or
fildll
sub
push
add
pop
and
and
repnz
adc
mov
and
or
jb
in
push
addr16
sub
outsl
stc
addr16
mov
push
adc
ja
xchg
mov
jno
push
jle
cmp
xchg
out
and
out
lea
out
fistpll
mov
sub
shlb
outsb
pop
mov
mov
jbe
out
xchg
push
insl
lods
xchg
push
dec
pop
sub
and
pop
mov
in
cmp
clc
or
psraw
sti
or
fcomps
stos
jb
arpl
mov
jmp
loop
pop
xchg
clc
mov
mov
lret
div
lret
adc
cmp
lret
adc
insl
cmp
shlb
add
xorl
mov
gs
cmc
cmp
cmp
lods
pop
mov
push
fucomp
ljmp
xchg
and
lods
jae
insl
adc
movsl
sbb
mov
xor
cmc
call
iret
popa
imul
imul
mov
and
scas
nop
add
insb
push
stos
jns
push
cmpsb
test
inc
cmp
sub
add
dec
push
push
push
mov
jns
push
mov
lods
inc
or
lret
add
lods
jecxz
cmpsb
add
repnz
cmp
pop
jbe
sub
movsl
test
movsl
or
gs
mov
add
cmp
insb
subl
or
arpl
in
sub
ret
push
mov
ljmp
das
xlat
int3
jne
or
mov
xor
pop
hlt
mov
and
lret
cli
adc
push
mov
cmp
insb
ret
out
leave
mov
add
mov
insb
and
and
mov
int
clc
lods
ljmp
movsb
jns
mov
pop
push
mov
and
lods
sbb
lea
push
lods
add
movsl
jb
movsl
xchg
cmp
test
fcmovne
push
cmp
sub
in
pop
cmp
push
mov
pop
adc
jae
fsubrl
xor
push
mov
xchg
insl
xlat
pop
lahf
xchg
mov
push
iret
and
movsl
push
and
push
and
movsl
orl
inc
mov
and
sbb
pop
xor
cmc
or
enter
repnz
xchg
push
mov
out
inc
and
xor
arpl
pop
int3
and
push
adc
les
mov
arpl
scas
or
dec
movsl
fs
pop
movsl
jns
pop
jmp
sub
fimuls
cmpl
imul
repnz
dec
push
xor
pop
int
pop
es
jmp
insb
jae
aaa
addr16
gs
or
repnz
ret
insl
cltd
dec
lahf
dec
aaa
fsubrl
or
or
push
mov
arpl
ret
inc
fstpl
cmc
scas
insl
fisttpl
imul
jl
pop
jle
fnstenv
ljmp
sub
mov
push
insl
or
lcall
and
mov
dec
popf
sub
int
shll
inc
fiaddl
nop
jb
inc
and
insl
and
aaa
or
sbb
mov
mov
pop
mov
push
mov
and
dec
lea
bound
ljmp
jbe
pop
aaa
and
xchg
arpl
sub
mov
int3
out
add
lahf
orb
std
movsl
sbb
into
int3
aaa
les
fistpl
cmpsl
xor
or
xchg
addr16
and
mov
mov
jne
dec
jp
sub
lods
dec
imul
scas
jmp
cmp
aaa
push
and
movsl
xor
andb
mov
imul
dec
movsl
inc
lea
cmpsb
mov
add
fistps
insb
mov
inc
mov
mov
scas
or
adc
popf
les
jne
int
mov
or
xchg
or
dec
mov
jl
xchg
xchg
xor
push
fsubl
mov
stos
es
add
xor
je
cmp
scas
rcll
fldenv
aaa
xor
je
fsubl
inc
int3
movsl
stos
in
pop
dec
and
test
mov
call
mov
inc
push
aaa
cmp
aas
and
push
mov
out
hlt
sub
pop
add
addr16
arpl
sbb
mov
mov
pop
enter
cmpsl
cmp
or
cmp
fs
fisttpl
loop
rcr
in
aaa
daa
je
jns
stos
dec
push
lea
imul
adc
loope
pop
int
adc
jae
pop
lods
out
jns
mov
or
outsb
jns
mov
cmp
adc
mov
mov
xor
or
mov
push
lods
dec
outsl
or
lret
movsl
arpl
and
cmp
insb
pop
cmpsb
cltd
or
mov
sbb
cmp
movsl
jecxz
cmp
pop
pop
cmp
hlt
add
lods
dec
imul
xchg
aaa
fisubs
insl
mov
and
jg
or
sub
push
mov
dec
ja
pop
movsb
or
push
and
leave
push
mov
gs
add
or
out
inc
mov
pop
mov
rcrl
cmp
mov
in
dec
popa
jo
xor
out
aad
add
inc
loop
imul
add
sbb
lods
loop
xchg
fisubrl
addr16
lods
call
daa
imul
or
jecxz
daa
xor
cmp
or
les
ret
jae
xor
outsb
imul
sub
add
out
fimull
sarl
std
test
addr16
jecxz
enter
pop
lods
xchg
mov
lea
fs
mov
jle
ja
iret
lahf
ljmp
inc
aaa
fwait
add
test
sub
test
incl
dec
arpl
cs
sub
and
cmp
xor
inc
sbb
call
test
arpl
stos
mov
mov
sub
sub
xchg
lods
lea
filds
cmp
fmuls
mov
xchg
stc
lea
inc
movsb
lahf
push
and
insl
dec
into
lock
mov
sub
jmp
test
push
out
popa
aad
cmpsl
insl
insb
ret
cmp
aaa
lods
filds
sub
xor
addb
cmp
lds
dec
mov
lods
and
jge
xor
xlat
cmp
xor
test
rclb
out
lods
cmp
xor
inc
cmp
movsl
and
sub
ljmp
jno
cmp
push
in
daa
or
imul
inc
jns
push
mov
movsl
int3
fidivrs
add
dec
cltd
ds
or
in
sub
test
scas
cmpsl
xchg
daa
testl
incl
dec
dec
aaa
in
sahf
and
dec
lea
int
andl
mov
jno
popa
cmp
sub
mov
out
arpl
shlb
insl
out
enter
cmp
or
daa
dec
imul
insb
push
pusha
sub
fimuls
cmove
cld
lods
mov
pop
and
and
addr16
xchg
and
jg
push
sub
repnz
enter
in
shrl
scas
pop
xor
sahf
lods
stos
xchg
xlat
sub
dec
cwtl
addb
or
scas
data16
sub
lahf
xchg
add
insb
movsl
and
cmpsl
lods
jmp
or
in
cmpsl
mov
inc
lahf
mov
gs
insl
inc
jmp
mov
sub
lods
or
cmp
scas
ja
dec
cmpsl
test
adc
insl
popa
pop
adc
mov
stos
pop
ds
add
insl
lods
filds
sub
or
rorl
prefetch
inc
or
lea
inc
lcall
hlt
or
in
mov
movsl
sbb
or
sbb
add
insl
inc
leave
pop
loopne
movsl
cs
mov
lods
cmp
mov
jne
cmp
mov
mov
movsl
ret
dec
sub
lret
cmc
push
movsl
fisttpl
shll
in
mov
sub
and
sti
adc
adc
inc
sub
scas
out
fs
insl
subl
pop
mov
or
or
ret
sbb
push
imul
and
adc
call
insl
das
stos
daa
test
sub
fwait
inc
mov
adc
ret
dec
repz
push
daa
cs
dec
addl
int
mov
mov
mov
xchg
jne
outsl
sbb
pop
mov
call
or
lds
scas
imul
cmp
xor
ljmp
jmp
mov
cmp
lds
add
pop
les
sub
sub
jns
jmp
out
aaa
aaa
andl
popa
stos
and
fnstsw
mov
cmp
dec
mov
popa
add
fld
add
outsl
cmpsl
jl
mov
das
fldenv
mov
shl
icebp
cmc
fnstcw
lods
pop
dec
in
mov
dec
mov
popf
xor
loopne
rcll
loopne
lock
dec
ds
fldenv
movsl
and
in
add
adc
jmp
sbb
int
ljmp
sub
dec
pop
cmp
jle
xchg
fildll
jbe
push
ds
das
aaa
jg
dec
gs
xstore-rng
cmpsl
pop
stos
or
fs
int
cmp
adc
test
imul
scas
cmp
lods
movsl
rcrb
xor
loopne
pop
imul
dec
cmc
inc
mov
outsb
jl
fucomp
sub
jo
lods
inc
arpl
sub
mov
mov
lahf
sub
push
popa
scas
movsb
xlat
cmpsl
in
mov
in
imul
stc
insb
adc
es
cmp
ljmp
mov
xor
lods
scas
imul
in
cmp
cmp
mov
mov
gs
addr16
out
push
mov
cmpsl
mov
insl
fs
movsl
dec
les
and
cmp
fs
fs
decl
movsb
push
mov
dec
pop
lods
call
pop
in
add
aaa
add
and
add
das
fcomip
xor
insl
insb
mov
movsb
fs
sub
shrl
pop
or
pop
xor
inc
nop
inc
cmp
mov
cs
pop
in
dec
xor
jne
pop
dec
mov
inc
and
and
sub
ljmp
add
lea
dec
add
and
push
or
rclb
in
int3
daa
imul
ljmp
and
or
fidivl
jo
or
jb
sbb
jns
int3
lods
mov
cmp
or
int
lods
imul
jns
movsl
add
pop
dec
movsl
pop
or
cmp
cs
mov
loop
sahf
popf
js
dec
inc
aam
mov
scas
sub
testb
dec
je
cmpsb
mov
out
cmpsb
insl
mov
xlat
in
nop
out
xchg
in
push
out
stc
mov
dec
dec
or
inc
jns
cmc
insl
inc
dec
mov
sub
pop
loop
push
test
cmpsl
inc
lods
test
outsb
lods
inc
pop
andl
mov
addr16
mov
insb
and
lods
in
mov
jnp
es
jnp
subl
xor
fdivr
outsl
test
cltd
faddl
or
loop
mov
and
out
fdivs
cwtl
insb
mov
into
movsb
sub
xchg
lods
mov
out
mov
mov
mov
pop
pop
dec
push
scas
es
daa
test
sub
ret
pop
add
adc
insl
in
test
dec
sub
and
jns
sbb
sub
ret
cmp
jo
int
aaa
insb
mov
xchg
subl
call
popa
cmp
mov
je
add
mov
sbb
mov
ljmp
out
fcmove
scas
fwait
mov
movsl
pop
lea
outsb
test
pop
mov
insb
stc
hlt
aaa
sub
outsb
data16
jmp
lods
inc
mov
cs
out
test
and
mov
xlat
cmpsl
push
movsb
or
das
xor
cmp
insl
and
pop
test
loope
testb
jae
movsl
shrl
jne
or
dec
insl
pusha
pusha
jne
insl
pop
popl
cmp
xchg
mov
lret
ds
pop
ffree
inc
imul
xchg
jecxz
orl
les
dec
mov
insb
mov
mov
xchg
outsl
or
jnp
jecxz
arpl
mov
and
repnz
gs
jg
push
push
lea
or
xor
das
inc
negb
iret
pop
pop
cs
aaa
jg
pop
aaa
popf
and
mov
lea
aaa
inc
das
pushf
imul
gs
test
mov
fwait
cld
insl
mov
das
pop
out
cmp
fcomip
push
jp
test
sub
push
bound
into
out
add
dec
inc
and
imul
pop
movsb
inc
xor
es
insb
and
arpl
aaa
lcall
movsl
in
cltd
ficoms
adc
or
sahf
and
iret
negb
lahf
pop
pop
cs
int
add
incb
sub
cs
pop
mov
sub
imul
jmp
movsl
adcb
je
pop
and
inc
sarb
cmp
lods
enter
lods
aaa
inc
test
adc
add
sbb
cs
repnz
xchg
cmp
mov
add
xor
cld
and
cmpsl
insl
pop
sbb
daa
sbb
and
inc
jbe
jge
or
fiadds
lods
inc
jo
add
movl
stos
dec
jnp
and
hlt
das
fs
sub
inc
pop
cmp
jmp
sub
ja
or
outsl
stos
push
jbe
sub
daa
adc
mulb
inc
dec
sub
loope
int3
pop
lods
mov
jb
jnp
xor
pop
dec
in
or
out
push
and
daa
cmpsb
push
add
dec
loope
in
push
aaa
out
add
adc
pcmpgtw
es
jmp
lods
sub
movsl
jecxz
mov
inc
jno
inc
test
in
lods
and
lods
inc
insl
insl
pop
and
loop
in
stos
pop
punpckhdq
mov
arpl
test
punpckhbw
mov
imul
xor
mov
addr16
lods
pop
xor
mov
insl
xchg
insl
push
arpl
add
int
pop
bt
mov
test
push
pop
pop
xor
mov
roll
lods
pop
icebp
movsl
cmovge
fucomip
mov
and
jne
push
std
insb
fildll
sub
int3
dec
mov
lods
test
loope
xchg
sub
in
test
imul
es
or
or
dec
sub
cmp
leave
shrd
mov
loop
aaa
in
scas
lods
ljmp
scas
repnz
mov
push
sub
mov
call
insb
test
enter
and
or
lods
jecxz
sub
arpl
shr
in
cmp
sarl
adc
iret
pop
call
in
icebp
sysexit
arpl
leave
or
testb
in
unpcklps
pop
call
iret
gs
test
sub
fnstcw
ljmp
test
xchg
or
or
movsl
xchg
gs
xor
sub
xor
data16
test
clts
or
or
pop
leave
or
scas
sub
adc
mov
push
bound
insl
cmpsb
or
sarl
insl
or
push
ljmp
pop
jecxz
loopne
jge
sub
cmp
push
xchg
pop
pop
not
push
adc
testb
arpl
mov
movsl
mov
aaa
pop
add
shrl
add
xchg
stos
or
adc
addr16
xchg
cmpsl
jg
int
and
add
or
addr16
ljmp
insb
and
add
sub
insl
repz
inc
cmp
ret
pushf
gs
xchg
lods
cmp
icebp
scas
leave
cmp
mov
pop
cmp
test
xor
lods
gs
cld
icebp
dec
add
insl
lods
cs
fwait
sbb
jg
mov
cmp
mov
gs
sub
test
mov
xchg
sub
call
stos
imul
test
add
insl
in
sbb
shll
sub
addr16
rcrl
adc
shll
add
iret
sbb
jns
je
xchg
jecxz
dec
hlt
jns
jge
pop
aaa
push
imul
cs
call
in
and
leave
add
cmp
sub
push
popa
subl
incl
insb
jg
sbb
push
ja
fs
cs
idiv
and
insl
add
or
ja
fs
jbe
aam
mov
movsl
cmc
cmp
insl
sbb
jge
cmp
cmpsb
jg
or
push
icebp
jne
or
add
cmpsl
and
stc
das
xor
mov
and
pop
cld
jno
iret
or
arpl
pop
in
out
pop
push
cmpsl
orb
dec
hlt
lret
stc
jne
addl
in
fcoms
lods
mov
push
mov
into
add
sbb
scas
lcall
mov
into
sub
addr16
sub
std
leave
jmp
aam
push
or
jae
jne
xor
jecxz
jnp
xor
lods
nop
cmp
jmp
jne
add
and
jo
movsl
insb
dec
mov
dec
mov
and
movsl
and
loope
lods
jle
mov
or
imul
xor
inc
pop
rorl
xchg
sbbl
and
sub
jmp
add
add
lods
or
pop
jne
out
pop
cmpsb
ss
and
cmp
dec
sub
push
sarb
popa
imul
add
hlt
mov
lret
inc
ljmp
pop
aas
and
inc
cmp
add
mov
and
fwait
xor
mov
loopne
mov
jns
mov
test
cmp
pusha
xchg
jno
and
mov
cmp
mov
and
ret
cmpsl
push
jb
xchg
shrb
jge
inc
push
xor
in
test
pop
add
and
push
into
pop
andl
les
ror
decl
mov
inc
pop
jecxz
xor
std
out
lea
sbb
push
add
lea
data16
nop
stc
fs
mov
test
test
mov
cmp
imul
push
sub
in
sbb
mov
sub
cmp
sub
inc
in
mov
inc
sub
and
movsl
loop
imul
dec
fistl
cmp
cmc
out
cmc
mov
fisubrl
mov
insl
mov
ror
cmp
mov
mov
mov
cmpsl
in
push
loop
pop
lods
xor
add
test
rol
mov
popa
xchg
cmp
cmp
cmpsl
insb
out
or
cwtl
xlat
fldcw
mov
movaps
mov
pop
int3
add
adc
xchg
jecxz
sti
lock
ja
int3
lea
mov
xor
jae
and
inc
xor
jl
xor
mov
insb
add
lods
jne
dec
sub
idivb
push
mov
push
add
insb
lods
jbe
mov
sub
mov
test
insl
fs
pusha
inc
ja
addr16
dec
bound
cmp
cmp
sahf
pushf
cmpl
ljmp
cmpsb
and
inc
sub
lods
andb
sub
test
jmp
sub
jne
sub
sub
xor
fs
inc
test
test
inc
in
insl
aam
movb
cmc
pop
lods
sub
popa
push
or
cmp
pop
orb
pop
mov
mov
sub
mov
leave
repz
pusha
rcl
sub
pop
popa
sub
dec
inc
out
imul
mov
loopne
movsb
ljmp
out
cli
fsubrs
mov
into
push
xor
cli
cwtl
or
fs
sub
cmp
je
cmp
flds
mov
xchg
or
hlt
out
xor
in
xor
and
outsb
lods
or
or
cmp
insb
mov
add
pop
jmp
jnp
jns
call
loop
pop
lods
insl
dec
ret
arpl
cmp
roll
lea
and
movsl
sbb
daa
cs
push
push
nop
aas
mov
pop
push
and
xchg
xor
add
insl
lods
es
and
insl
out
lods
lea
insb
and
in
dec
xchg
and
mov
sub
lods
gs
imul
shrd
ljmp
push
test
fucomi
bound
nop
mov
or
cwtl
ja
les
jecxz
fsubrp
jmp
insl
pop
push
cs
mov
and
lcall
imul
push
mov
push
push
insl
add
or
xchg
stos
mov
test
shrl
pop
ljmp
int
mov
or
pop
cs
pop
lds
sub
add
mov
imul
and
test
outsb
test
pop
or
sysret
ljmp
push
adc
cmpsl
vmovshdup
push
stos
mov
add
movsb
and
and
push
outsl
push
mov
pop
mov
imul
sbb
mov
lods
xchg
negl
cmpsl
xchg
aaa
sub
push
dec
add
popf
int3
pop
sub
loop
adc
out
push
pop
ljmp
pop
fisubl
outsl
hlt
cmp
in
in
lods
das
mov
mov
mov
dec
or
jnp
movsl
lock
lods
mov
daa
lods
jns
xchg
cmp
insl
push
xor
and
out
fisubl
idiv
ja
and
lock
lods
outsb
mov
out
or
inc
pop
and
ja
mov
xchg
push
test
and
pop
rcll
add
cmp
cmpsl
enter
push
adc
cmp
inc
mov
in
rclb
sarl
adc
popa
out
jno
in
cmpsl
cmpl
lods
or
jne
jno
sub
daa
sbb
loop
aaa
in
lods
pop
mov
mov
add
mov
sbb
lret
xchg
cmp
dec
ljmp
dec
fidivl
adc
loop
add
insl
push
inc
pop
rep
inc
arpl
and
mov
xor
int3
jl
sbb
add
jle
fisubl
mov
insl
in
aaa
xor
call
cmp
ljmp
lods
shlb
hlt
fnstsw
test
or
inc
gs
or
fstpt
loopne
mov
lods
cld
jl
xlat
dec
loopne
cmpsl
jg
repnz
test
or
ljmp
cld
and
insl
or
pop
and
insb
xor
outsb
sub
xchg
dec
into
mov
add
mov
cmp
outsb
ss
push
xor
xchg
cmpsl
imul
xchg
xor
jns
outsb
sub
mov
add
and
std
push
cmp
rcrb
cli
xlat
push
lds
cmp
shll
push
stos
and
mov
adc
xor
test
push
gs
test
pop
pop
sbb
push
call
mov
add
outsb
movsl
dec
push
pop
movsl
in
sub
cs
lahf
mov
mov
in
hlt
loopne
inc
push
pop
roll
cmpsl
int
cmp
imull
out
or
pop
addr16
inc
jne
xchg
cs
movsl
outsb
insl
dec
or
insl
mov
out
ss
ds
xchg
cmp
add
sub
test
mov
or
cmpsl
or
jno
call
and
aaa
inc
cmp
test
mov
jge
xor
xchg
cmp
jne
aaa
cmpsb
push
dec
lahf
add
lret
or
add
int
sub
or
pop
insb
push
mov
fs
mov
insb
cs
ss
push
lea
cmp
cld
jp
lret
dec
stos
test
sub
outsb
das
sub
in
mov
dec
shlb
movsb
push
insl
mov
mov
in
loopne
mov
outsb
cmpsl
out
popf
mov
test
mov
sub
dec
xchg
dec
pop
lods
or
jnp
fisttpll
idiv
dec
test
stos
adc
lods
call
ds
inc
inc
cmp
inc
xchg
loopne
lret
and
insl
data16
jmp
add
or
cmp
pop
cmp
jb
sbb
popf
mov
mov
test
or
cmp
and
outsl
popf
dec
stos
test
jne
fsubrs
and
jg
xchg
call
sbb
cld
fisubrl
push
les
pop
jmp
add
mov
mov
pop
iret
and
popf
inc
test
into
jne
sub
lods
idivl
or
xor
lods
outsb
pop
sub
fidivrs
cmp
mov
jge
jecxz
dec
push
lock
lock
scas
xor
lods
push
and
inc
mov
cmp
sarl
or
and
je
gs
sub
jo
jo
insb
adc
aaa
jecxz
lds
cmpsb
mov
cmpsl
or
sub
bndldx
push
ja
push
lea
jge
sahf
mov
and
fld1
ret
cmpsl
xchg
xor
les
pop
and
sub
sbb
out
jge
push
inc
sbb
mov
add
sub
sub
cmp
int
mov
fldcw
lods
loopne
cmpsb
bound
sub
std
and
and
sub
push
sbb
mov
lea
outsb
sbb
sbb
in
xchg
and
arpl
sbb
cs
addr16
pop
int3
std
shrl
movsl
add
mov
mov
rol
in
lahf
jp
pop
push
add
in
jp
les
or
mov
testb
mov
mov
dec
js
xor
add
mov
dec
out
add
sub
xchg
aam
pop
fisubrs
mov
aas
pop
pusha
xchg
inc
add
jbe
imul
call
pop
xlat
icebp
mov
cmp
aas
cltd
sbb
xchg
and
push
inc
pop
sub
pop
dec
dec
in
or
inc
imul
rcll
cmp
into
cld
dec
scas
insl
xchg
cmpl
ja
ror
adc
fwait
sti
lahf
sahf
enter
push
mov
aas
xchg
cli
mov
push
add
mov
xor
lret
ja
dec
pop
cmp
adc
sub
or
and
rep
movl
mov
pushl
pushf
mov
pushf
lea
jmp
aas
sub
sbb
dec
rcrb
dec
lods
sub
and
xchg
inc
jns
nop
jecxz
xchg
cmp
in
jmp
inc
mov
mov
mov
repz
sub
sub
std
cmp
call
mov
mov
xor
adc
into
and
jnp
arpl
loope
adc
xchg
mov
mov
xor
lea
aaa
pop
push
add
push
outsb
dec
cmpsl
adc
mov
add
xchg
nop
mov
jb
cltd
pop
mov
sub
push
push
std
xor
cmc
rorl
lahf
gs
mov
xchg
adc
test
xor
stos
xor
fnstcw
repnz
mov
inc
mov
cwtl
cmc
xchg
mov
test
mov
push
iret
xchg
push
ror
mov
pusha
xor
cmp
shr
movb
jmp
mov
mov
xor
mov
sub
lock
mov
data16
mov
pushf
cli
aam
sbb
sub
add
mov
out
in
imul
call
dec
fsubrp
jg
mov
cmp
mov
rcll
in
xchg
pop
xor
fisubs
pop
stos
push
push
mov
in
scas
push
outsb
xchg
bound
in
xlat
repnz
subb
cmp
push
lock
std
std
mov
xchg
push
mov
ret
jg
shl
int3
sarb
mov
pop
gs
sbb
sbb
jge
jns
mov
dec
inc
aam
cli
aam
push
movb
and
clc
nop
mov
test
addb
jl
inc
push
push
in
xchg
push
es
in
mov
mov
and
jmp
sbb
cmpsb
mov
sbb
push
add
mov
jno
jge
pop
push
fisttps
fisttps
jp
mov
push
adc
rorb
fisttps
or
fidivrs
out
cmp
jl
pusha
sahf
xor
cs
dec
lret
cmpsl
xchg
push
cmp
test
ss
loopne
jnp
dec
xor
andb
cmpsl
mov
rorl
sbb
mov
subb
adc
mov
pop
inc
hlt
push
jl
pop
out
pop
cmp
add
pop
push
pop
dec
std
insb
fwait
lds
or
xchg
push
sub
add
into
push
mov
mov
jb
and
xchg
xchg
jbe
imul
shl
or
add
out
sbb
das
dec
test
in
insb
xor
pushf
jnp
or
mov
sbb
push
or
mov
push
pop
imul
mov
pop
push
sbb
push
dec
iret
popa
dec
hlt
pusha
mov
or
cli
ss
loope
xchg
mov
ret
lret
insb
mov
xchg
mov
sbb
leave
pop
and
pushf
insl
jle
into
pop
fldl
pop
jp
xchg
pop
out
push
lcall
inc
sub
mov
and
cmp
xor
bound
xchg
add
cmp
test
movl
push
pushf
lea
je
jp
push
cmc
test
add
test
bt
pushf
clc
cmp
call
mov
bswap
pusha
pop
lea
push
push
pushf
movw
movl
pushf
mov
movw
pushl
ret
push
pop
mov
mov
repz
mov
xchg
jb
push
popf
aam
pop
lea
mov
inc
ret
in
scas
enter
lret
push
mov
out
sahf
add
pop
mov
loopne
jle
in
lcall
xchg
pop
and
dec
mov
or
icebp
and
daa
xchg
fstl
test
repnz
xchg
nop
adc
and
pop
faddp
lds
clc
cmc
or
call
jecxz
fdivs
sahf
mov
aam
cmp
dec
daa
scas
or
rcr
mov
int
jbe
sbb
mov
bt
sub
add
ret
jne
xlat
push
mov
push
push
outsb
repz
mov
mov
clc
pop
das
mov
push
mov
imul
jge
sub
gs
push
mov
fsubr
sbb
pusha
repz
outsb
dec
insb
dec
les
adc
adc
jbe
test
add
inc
fidivrl
les
sub
in
pop
and
scas
pop
jnp
leave
inc
dec
inc
pop
inc
andb
or
push
pop
leave
mov
cltd
test
and
cmp
out
dec
jnp
out
fldt
ljmp
add
xorl
das
pop
push
jl
lret
dec
adc
in
jmp
mov
mov
ret
inc
das
mov
xchg
mov
and
push
mov
pop
pop
mov
into
enter
inc
push
jbe
repz
jo
movsb
mov
jnp
insb
pop
fldt
gs
mov
das
mov
mov
scas
addr16
and
movsl
in
sub
or
lret
sub
inc
frstor
popa
in
mov
and
xchg
xor
cmp
ficoml
pop
add
frstor
xor
sub
aam
stos
push
aad
and
call
fcmovne
cs
sub
add
leave
sbb
adc
sub
arpl
addr16
out
push
mov
sub
gs
and
in
add
imul
or
hlt
push
sbb
adc
fwait
loop
and
xor
cmp
push
xor
shl
aam
adc
cmp
insl
daa
mov
test
jns
or
mov
and
lret
in
insl
shlb
or
cmc
xor
cmp
ds
and
sub
fsubrs
arpl
or
and
jmp
lods
xor
popa
or
dec
cmp
jmp
dec
aas
insb
xlat
mov
imul
or
aad
stos
push
sub
adc
ljmp
insl
sbb
insb
adc
pop
mov
xor
push
mov
and
dec
mov
std
dec
decl
xchg
lods
push
lret
dec
lret
cmp
push
sub
adc
ficompl
or
fs
addr16
dec
decl
test
jp
and
gs
lods
sub
dec
imul
in
movsl
lea
mov
fcmovbe
push
jnp
mov
mov
sub
outsb
mov
lea
sbb
ljmp
dec
out
leave
repnz
and
sbb
pop
fs
or
or
or
lods
mov
jnp
jl
mov
and
mov
and
out
in
fs
lret
pop
stos
sub
lds
mov
or
aaa
xchg
inc
gs
and
fs
mov
sti
mov
or
mov
cmp
dec
addr16
or
xor
gs
frstpm(287
and
mov
fmuls
mov
cmp
sub
addr16
insl
out
cmp
pop
out
pop
aaa
mov
imul
fidivl
cmpsl
ljmp
and
sbb
mov
xor
int
mov
fsubrl
xor
xchg
xlat
cmp
xchg
arpl
lods
pop
addr16
or
fwait
inc
cmp
jp
fldenv
cmp
pop
aam
jno
in
dec
lods
xor
mov
xor
cltd
rcr
push
aam
and
fwait
sub
les
lods
dec
cmp
gs
cmp
movsl
imul
lods
or
int
or
mov
mov
mov
dec
mov
push
mov
scas
insl
lret
ljmp
lods
inc
sub
adc
lea
mov
mov
orl
data16
loopne
insl
pop
inc
int3
dec
loop
or
insb
stc
outsb
pop
inc
mov
inc
dec
fmull
push
mov
outsl
mov
das
insl
sub
fmull
outsb
aaa
xor
cmp
int
or
sub
or
repz
int3
in
insl
in
int
lods
dec
lea
int
or
loopne
jae
lret
js
and
dec
push
xchg
or
jmp
mov
pop
or
aaa
outsb
out
shl
jb
or
or
int3
pusha
mov
lock
and
or
dec
or
mov
inc
or
addr16
lods
pop
dec
addr16
or
mov
inc
lahf
lret
cmp
jne
cmp
insb
mov
add
rcrl
stc
xchg
cmp
insl
push
ja
lods
repz
insb
inc
mov
jne
arpl
cmp
ljmp
and
mov
pop
add
cld
fildll
cltd
dec
fs
movsl
xor
push
leave
lea
inc
callw
insb
inc
and
out
lea
gs
adc
and
adc
and
movb
repnz
mov
push
or
inc
adc
sub
inc
imul
imul
lahf
in
movsb
pop
push
lahf
in
push
and
add
scas
ss
xchg
stos
dec
out
lods
aaa
ds
in
sub
in
fsubrl
std
stos
add
fdivrp
ds
cmc
inc
lcall
cmpsl
sub
lea
aad
or
dec
push
cmpsl
cmp
in
ret
outsl
add
dec
insb
xchg
sub
or
mov
daa
push
sub
scas
dec
pop
fimuls
cli
lahf
pop
jg
cmpsl
xchg
ss
lahf
stos
cmp
popa
aaa
ss
cltd
sub
mov
cmp
push
adc
sub
add
or
cmp
lods
ds
dec
cmp
mov
cmp
fisttps
insb
xchg
sub
scas
test
sub
jno
xor
stos
pop
dec
sbb
out
call
dec
pop
and
add
pop
clc
js
sub
iret
cmp
adc
or
lods
ret
mov
in
pop
add
outsb
cmp
addr16
cs
cmp
daa
aam
iret
adc
insl
sar
jg
jge
sbb
inc
and
inc
xchg
mov
push
xchg
mov
jp
movsl
std
pop
push
ss
jno
gs
je
mov
stc
mov
subl
jg
or
sub
mov
in
dec
jmp
les
fs
inc
xchg
scas
and
cmp
lea
pop
inc
cld
or
and
sub
enter
cmp
pop
ret
push
sbb
cmp
cmp
xchg
scas
adc
imulb
ret
push
jne
mov
jmp
inc
jno
dec
sub
sub
leave
push
pop
lods
or
push
insl
cmp
je
lahf
mov
jmp
lahf
popa
pop
and
in
lea
jl
mov
mov
js
iret
push
mov
cmpsl
cld
and
jbe
and
arpl
hlt
clc
shr
cs
cmp
pop
insl
test
pushf
adc
push
enter
jns
cmpsb
cmc
dec
add
push
push
mov
mov
out
test
dec
aas
mov
jecxz
mov
fstpt
daa
pushf
es
and
into
add
sbb
cwtl
ja
pushf
cmp
mov
or
and
jne
lahf
pop
insl
mov
jmp
int3
sub
pusha
add
and
inc
push
xor
inc
mov
mov
add
mov
xchg
imul
and
xchg
add
add
movsb
or
inc
mov
adc
xchg
arpl
or
std
xor
fisttps
add
mov
add
icebp
addr16
arpl
push
add
in
arpl
xor
sahf
das
in
xor
fbstp
sbb
xchg
adc
xchg
mov
cmovge
inc
push
fistpll
mov
sbb
xchg
addr16
xchg
mov
clc
or
jecxz
imul
xchg
scas
or
inc
mov
push
or
pop
cmpsl
lock
loope
mov
imul
imul
add
je
je
daa
jae
sbb
mov
add
or
popa
cmc
mov
and
push
lahf
mov
mov
and
jmp
lret
jmp
loope
lret
sub
xor
pop
sub
fimull
xor
insl
subl
xor
fwait
mov
mov
push
cmpsl
call
jne
dec
leave
sbb
scas
fmuls
dec
jbe
mov
cwtl
xlat
add
mov
lcall
scas
cmc
or
dec
ljmp
insb
pop
lds
xor
xchg
out
mov
out
arpl
test
or
lea
divb
mov
push
fistl
inc
add
test
sbb
les
inc
dec
push
lods
mov
mulb
push
inc
out
loop
imul
lods
push
addr16
movsl
cmp
dec
or
icebp
cmpsl
sbb
movsb
pushf
cs
insl
mov
shll
jmp
arpl
test
mov
xchg
mov
sub
in
push
arpl
or
aam
adc
in
or
mov
xchg
or
sbb
mov
imul
das
out
add
xor
leave
into
fisubrs
leave
sbb
dec
shl
das
xor
out
mov
inc
dec
stos
mov
jge
insl
nop
sub
sub
xchg
insl
or
xor
pop
push
dec
cmpsb
sbb
pop
call
test
pop
stos
push
mov
mov
push
lea
jnp
repnz
xchg
sbb
pop
test
scas
jl,pt
add
xchg
test
xchg
int
movsl
mov
int
adc
xchg
fcoml
dec
push
mov
or
jne
inc
xchg
push
mov
cmp
cmp
cmpsl
push
jge
rorl
daa
mov
mov
loopne
test
and
movsl
ret
arpl
xchg
ret
pop
insb
xchg
dec
dec
jno
aam
dec
pop
daa
lods
adc
push
in
add
in
scas
mov
fdivl
xchg
test
add
pushf
pop
mov
out
push
xchg
in
mov
jge
mov
imul
add
insb
jnp
sub
lea
xor
add
mov
cmpl
lea
addr16
add
cmc
jle
test
inc
fidivs
ss
cmpsb
jecxz
xchg
scas
gs
faddl
jb
aam
cli
and
pop
scas
daa
pop
in
dec
scas
lahf
add
fs
je
inc
stc
out
call
jmp
gs
insb
cmpsl
cwtl
pop
jns
arpl
test
ret
add
push
push
mov
mov
out
ret
or
mov
scas
and
aad
daa
mov
out
arpl
push
test
insb
xchg
xchg
nop
or
cmp
movsb
hlt
insl
push
or
das
in
push
arpl
or
pop
arpl
insb
mov
test
pop
aaa
dec
pop
sbb
cld
mov
mov
inc
sbb
cmp
arpl
jbe
gs
mov
aas
mov
sub
hlt
cs
xchg
int3
adc
pop
xchg
stc
cld
mov
pop
fcomi
mov
mov
jecxz
push
and
cmpsb
scas
cmc
fisubrs
es
inc
push
ret
jge
imul
sbb
insb
pop
or
mov
lcall
in
push
cmp
scas
clc
insl
in
out
lock
nop
jo
dec
pop
xor
fsubl
cwtl
add
pusha
dec
jmp
pop
cmp
jmp
fistl
xor
leave
or
lahf
pop
inc
or
pop
xor
scas
sbb
addr16
out
in
in
pop
adc
aad
int
lods
sub
rcll
xor
stc
jno
out
shrl
daa
dec
dec
popf
jns
dec
sub
scas
aam
fsubrs
add
jl
test
sbb
insl
mov
std
sbb
mov
mov
mov
sbb
sbb
pop
in
arpl
jmp
test
imul
outsb
cmpsl
sub
and
push
loope
test
jg
jle
push
push
push
sub
lahf
loopne
dec
push
scas
mov
lret
and
lods
mov
mov
cs
jne
pop
test
inc
add
jl
mov
insb
push
aad
mov
movq
pop
inc
lods
and
xor
movl
popa
fiaddl
jns
inc
mov
or
mov
arpl
bnd
scas
shrb
das
inc
xor
dec
jl
out
insb
mov
sbb
and
push
mov
lods
dec
mov
stos
sub
or
clc
add
push
test
sbbl
xlat
xlat
and
or
and
decb
daa
insl
test
and
ljmp
mov
daa
fisttpll
repz
sub
das
lahf
sub
mov
add
out
or
pop
psrlq
lea
imulb
insl
aad
adc
mov
filds
or
insb
imul
adc
out
cmp
int3
scas
jecxz
jo
pop
or
in
lahf
push
aam
js
sub
xor
mov
mov
xor
pop
dec
jns
fwait
addr16
dec
aaa
pop
sarb
lods
das
push
or
mov
into
mov
add
or
push
cli
xlat
dec
pop
les
cmpsl
dec
sbb
cmpl
sbb
fs
cs
and
in
in
movsb
pop
push
mov
int
les
ja
enter
xchg
mov
imul
pop
and
xlat
pusha
mov
or
mov
cld
push
mov
pushf
ja
push
inc
add
and
popf
iret
pop
cmp
xchg
sbb
fisubs
push
call
insb
dec
sub
gs
adc
mov
and
or
cs
push
and
pop
cmp
daa
fucom
addl
cmp
movsb
cli
aam
push
arpl
sub
mov
mov
leave
sub
pop
fldt
insb
xchg
adc
cwtl
adc
mov
in
fisttpl
scas
aad
pop
flds
xchg
pop
inc
mov
test
dec
scas
push
iret
test
das
pop
or
add
or
in
mov
ss
adc
inc
adc
add
inc
xchg
lods
cmpsl
push
lods
cmp
push
sbb
xchg
add
fucom
dec
add
aam
leave
sbb
add
jge
jno
aad
leave
adc
dec
rcrb
xlat
mov
call
sbb
jle
lods
pop
jge
int3
xchg
push
test
jne
push
mov
add
js
sub
jl
addr16
dec
daa
lret
ljmp
add
add
sbb
mov
jecxz
push
dec
lahf
out
test
aam
imul
mov
out
mov
mov
xchg
cmp
out
push
xor
sbb
sub
xor
sbb
jmp
int3
movsb
outsb
ret
xlat
leave
outsb
lea
adc
mov
or
lods
cli
call
pop
xor
mov
xchg
xor
inc
cmp
push
aam
mov
sub
stc
dec
insb
orl
and
push
jge
popa
out
cmp
jae
insl
or
into
adc
int
dec
gs
insl
int3
shll
xlat
outsb
insb
into
or
mov
arpl
add
insl
jge
xor
mov
dec
bound
push
pop
sub
std
fisttps
scas
daa
test
sbb
jns
gs
ss
aaa
mov
lods
icebp
mov
adc
mov
loopne
push
mov
incb
jnp
adc
inc
and
lcall
in
pop
pop
or
std
faddl
mul
addr16
lods
push
mov
repz
outsb
mov
push
loope
or
jge
add
fisttpl
adc
push
inc
cmp
popa
fnstcw
sahf
movsb
addr16
sahf
scas
push
fisttpl
stc
or
in
pop
dec
xchg
xchg
outsb
mov
push
or
or
dec
fidivrs
fidivrs
movsb
xchg
aad
lods
add
lahf
sub
or
repnz
cmp
test
mov
cmpsl
pop
loopne
jge
ds
or
add
dec
outsb
mov
pushf
lods
pop
jge
es
inc
sbb
lods
fdivl
fs
jbe
cltd
push
testl
stc
loop
out
sbb
jb
mov
dec
jne
fadds
pop
pop
test
mov
in
dec
xchg
lods
ja
movl
ficoml
mov
and
popf
jl
movsl
or
in
xchg
mov
pushf
fnstsw
pop
jp
aaa
insb
in
loopne
bound
cmp
dec
and
scas
je
popa
or
pop
in
lods
mov
jl
or
fbld
fisubs
mov
mov
mov
jae
cmp
sub
sahf
mov
xchg
or
add
jg
push
xchg
mov
hlt
jg
mov
add
inc
or
lea
mov
cmpl
insl
bound
dec
out
loopne
push
pop
fiaddl
fs
lods
test
jo
mov
fstpl
dec
fsub
ds
add
sub
inc
or
mov
fadd
pop
dec
call
shll
movsb
or
mov
mov
dec
push
lods
aaa
cmp
xchg
loope
pop
movsl
bnd
insl
insb
jbe
mov
dec
mov
mov
and
adc
and
ds
push
gs
sbb
xchg
sahf
xchg
dec
loop
addb
xchg
sub
jl
fisttpll
or
cmc
fs
fbstp
aaa
sbb
add
or
jne
arpl
aaa
pop
mov
jge
adc
int3
mov
push
pop
add
nop
int
mov
or
loopne
gs
sub
adc
dec
xor
xchg
enter
notl
cli
push
es
mov
jl
adc
xor
jp
dec
test
call
pop
mov
xchg
in
cmp
push
insl
push
xchg
nop
push
jns
insl
inc
dec
jnp,pt
lret
lock
mov
push
jl
push
call
or
sbb
push
and
sbb
insb
mov
ret
xor
icebp
jl
push
loop
enter
frstor
ret
mov
add
daa
pop
and
mov
pop
lea
jae
mov
jmp
cmp
sbb
aam
shlb
daa
fwait
xor
mov
lret
lcall
jmp
and
and
mov
repnz
cmp
mov
xor
mov
sbb
ds
aam
bnd
test
xchg
stos
sbb
nop
sbb
jns
cld
ret
xor
icebp
pop
out
jno
pop
loop
jo
or
mov
adc
cmp
cmp
sub
fwait
imul
clc
ss
cmp
pop
add
aam
xchg
mov
lea
inc
test
mov
or
dec
call
jns
jg
sbb
lahf
or
dec
mov
and
imul
sbb
mov
icebp
jmp
addr16
xor
sbb
jae
add
stos
test
add
je
and
push
outsb
mov
cld
xchg
bound
xchg
pop
popf
scas
out
add
nop
xor
push
jp
sbb
inc
into
jo
dec
xchg
mov
sub
nop
cmp
hlt
test
out
in
in
and
mov
xor
jb
sahf
loop
mov
outsl
call
cmp
inc
push
mov
dec
jno
addb
cmp
outsl
add
jae
movsl
jge
js
push
xchg
or
out
jp
sub
xchg
pop
jmp
pop
sahf
and
xor
mov
jl
xchg
in
clc
mov
pushf
push
push
roll
dec
jae
inc
sbb
das
cmp
cmpb
movsl
fneni(8087
dec
inc
stos
arpl
cmpsb
and
and
scas
aam
das
sar
inc
mov
add
neg
neg
cmc
mov
pushl
xchg
dec
mov
push
test
stc
sub
call
cmc
and
jae
jb
mov
xor
adc
xlat
jl
inc
pop
add
adc
sub
rcll
sbb
or
insl
stc
rcrb
inc
mov
mov
jo
sbb
aad
dec
mov
sbb
enter
stos
nop
mov
push
dec
outsl
test
in
mov
stos
subl
data16
or
xor
jnp
and
fwait
mov
adc
jl
mov
js
movsb
xchg
push
fidivrl
movsb
push
mov
jae
mov
xor
xchg
mov
jp
xchg
push
movsl
mov
xor
lds
fwait
pop
and
popf
mov
dec
bound
xchg
xlat
xchg
je
or
mov
sub
sahf
sbb
mov
push
dec
fdivrl
cld
lcall
ficompl
jo
gs
add
adc
ror
in
sbb
xchg
dec
shlb
clc
fsubs
xorb
sbb
lds
adc
aaa
mov
aaa
inc
in
jae
xchg
mov
divl
dec
ret
icebp
pop
adc
in
pushw
xchg
negl
daa
add
outsb
push
test
mov
call
into
mov
fimuls
cs
mov
pop
imul
loope
jne
cltd
dec
xchg
stos
dec
adc
pop
fists
lods
fidivrs
inc
jno
cmp
sbbb
andl
fistps
mov
fbld
int
lods
stos
push
mov
jo
rorl
mov
addb
sub
repz
adc
in
cmc
push
and
int3
fistl
push
add
push
pusha
movl
movb
pushl
push
call
push
push
inc
push
xor
cs
insb
add
icebp
pushf
sbb
dec
adc
test
sti
sub
movsl
gs
pop
in
xor
out
repnz
jl
loope
xor
push
jbe
jno
out
addr16
scas
popf
ljmp
pop
push
outsb
std
mov
sub
lods
decb
out
and
outsb
dec
xlat
mov
jno
lods
int
add
loope
xor
adc
pop
aas
lahf
cmp
cmp
add
inc
mov
mov
and
nop
adc
popa
mov
fdivr
cli
out
imul
outsl
adc
add
shlb
mov
ret
dec
in
fxch
pusha
hlt
ret
lret
stos
stc
cld
test
sbb
xlat
fwait
sbb
mov
mov
push
ror
or
cltd
inc
or
mov
mov
or
loope
or
lds
addr16
jbe
bound
pop
mov
shrb
pop
sub
sbb
inc
je
mov
fst
out
int3
sub
sbb
scas
inc
and
jl
adc
push
repz
ret
punpcklbw
or
icebp
lods
or
sub
mov
pusha
cmp
das
mov
cltd
sbb
loope
sub
push
or
xchg
aad
cwtl
add
xchg
add
jmp
stos
xchg
mov
sbb
je
fisttps
lret
mov
xor
lock
mov
ret
sbb
into
add
lods
sahf
fstps
xchg
push
lds
lods
mov
push
hlt
cmpsb
and
aaa
mov
int
bound
mov
cwtl
in
pop
lcall
into
icebp
cli
sub
inc
icebp
jns
jae
add
fld
mov
xlat
push
push
imul
xchg
jg
cmp
fs
pop
out
inc
push
inc
push
dec
xor
cs
insb
add
loopne
sbb
ljmp
ficoml
sbb
pop
into
imul
iret
faddp
jbe
fidivl
in
mov
ljmp
jno
fwait
mov
sbb
mov
in
mov
jecxz
and
jle
popa
int3
inc
and
test
mov
movsb
mov
mov
aam
mov
add
push
pop
out
cltd
sbb
sbb
mov
mov
out
rolb
jo
mov
faddp
jbe
ds
add
gs
sahf
pop
mov
iret
test
mov
push
mov
push
mov
mov
enter
cld
shll
cmp
daa
scas
push
dec
cmp
dec
and
adc
or
stc
out
push
test
rol
sub
mov
mov
push
fnstenv
xor
lcall
mov
push
in
xor
scas
iret
jno
add
inc
les
cmp
loopne
push
aaa
clc
sbb
movsb
add
test
sbb
mov
das
lret
repz
loopne
cmp
not
pop
jg
and
movsl
int3
inc
pop
je
adc
sub
mov
movsb
xchg
adc
js
lock
cmpsb
cmp
std
jg
mov
push
outsl
cwtl
sbb
das
andb
mov
push
cwtl
xlat
cmc
dec
fwait
xchg
mov
data16
push
jnp
out
in
mov
and
xchg
ja
xlat
mov
xchg
add
mov
sbb
sbb
sbb
fisubrl
add
js
ficoms
popa
enter
shrb
xchg
and
out
push
shlb
pop
cmpsl
mov
je
pop
insb
setl
dec
int
xchg
gs
mov
mov
rclb
into
dec
adc
imul
cs
lods
mov
xor
add
pusha
pushf
lea
ja
pushf
mov
sete
mov
movsbl
mov
jmp
js
mov
mov
pop
sbb
test
test
out
pop
cmp
das
jnp
ja
push
xlat
pop
outsb
lds
ss
je
xchg
sti
mov
jle
in
aas
stc
push
mov
cmpsl
loopne
mov
nop
mov
push
sbb
pop
push
imull
push
call
scas
imul
pop
xor
pop
scas
inc
fldcw
inc
mov
int3
or
pop
std
cmpsb
or
andl
pushf
cmp
scas
test
movl
mov
pushl
pushf
movl
pushf
pushf
movb
lea
jmp
pop
sarb
add
push
cmp
test
sub
sarb
add
adc
add
cmp
cli
sarb
add
sarb
add
dec
cmp
rclb
add
cmp
pusha
mov
add
adc
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
add
add
adc
add
add
add
add
add
mov
add
adc
add
add
add
add
add
sub
stos
sarb
add
adc
add
add
add
add
add
push
cmp
add
in
mov
leave
call
pop
xchg
fistps
push
xchg
mov
lcall
mov
mov
push
cltd
xchg
test
mov
xlat
mov
adc
jl
fwait
jb
push
pop
pop
shlb
aam
int3
adc
shll
push
push
sbb
lcall
or
mov
aam
and
cmp
call
dec
xchg
xchg
xor
push
iret
lret
push
sarl
sarl
mov
mov
mov
or
mov
nop
sbb
stos
dec
repz
jle
shrb
int3
repz
js
and
sub
mov
inc
into
imul
push
jge
lcall
xor
cltd
loop
mov
pop
cs
or
jmp
std
fdiv
xchg
sbb
fldenv
push
or
push
xchg
mov
data16
cmpsl
jg
outsl
xchg
xchg
sti
and
inc
leave
cmp
popf
popf
dec
insl
push
pop
dec
mov
mov
js
sub
ret
dec
xor
push
and
sbb
pop
mov
mov
or
jbe
mov
fnstsw
dec
inc
stos
jbe
cs
or
loope
pop
ds
push
mov
dec
gs
jne
std
popa
mov
sbb
xchg
push
pop
jecxz
xor
jae
enter
in
nop
test
rcll
pop
add
push
stc
xchg
stc
aad
repnz
xor
fsubs
push
cmp
inc
test
ljmp
dec
jl
vmovapd
jp
adc
mov
ljmp
out
daa
lret
cmpl
jo
pop
clc
mov
daa
push
in
int3
loopne
lods
loop
mov
sub
sbb
cld
inc
iret
movsb
arpl
cmp
pop
jle
nop
aad
pop
out
jl
xchg
add
in
lcall
ret
push
push
mov
push
lds
jns
pop
lahf
jp
xchg
sbb
popf
or
mov
cmp
mov
orb
adc
and
push
fcmovnb
movsl
sti
ds
fcomps
adc
add
orb
imull
movsb
mov
xor
mov
xchg
cld
cmp
movsb
jp
mov
loope
cmp
add
stos
flds
inc
fs
aaa
pop
push
cmovge
push
dec
test
dec
sub
push
mov
popa
jb
adc
cmpsl
lcall
fidivs
imul
cmp
cwtl
cltd
cmp
add
jl
cmp
divb
mov
pusha
add
iret
sbb
inc
add
cmp
es
mov
fs
sub
xchg
pop
jg
scas
xchg
or
es
in
push
xchg
shlb
jg
sub
cmp
xchg
sbb
sbb
or
clc
rolb
jmp
shl
jnp
xchg
mov
leave
mov
inc
in
push
add
mov
or
jmp
in
popf
inc
inc
xchg
cmpsb
out
inc
sbb
addb
out
mov
jae
sarl
inc
lcall
mov
push
movsb
adc
fwait
sbb
sti
pushf
adc
decl
shll
mov
pop
xchg
push
sbbb
jp
fucomp
andl
xor
subb
adc
push
push
add
orb
cltd
cmpsb
sub
push
lods
lods
stos
mov
or
sub
repnz
nop
xor
and
fidivrl
ret
mov
xchg
hlt
fs
mov
xchg
inc
cltd
cmp
xor
or
mov
lahf
pop
decl
rclb
xlat
mov
lds
mov
ds
add
stos
movl
pushf
lea
jmp
cmc
cmc
call
cmp
repnz
pushf
pushf
lea
jne
jmp
bt
cmc
cmc
cmp
movl
jmp
or
clc
neg
mov
bt
call
js
in
xchg
sbb
fdivrp
outsl
fsubrl
das
and
sub
imul
mov
lret
std
scas
cli
aad
xor
fbld
iret
pop
stos
pop
push
or
xor
add
aam
inc
fstps
ss
and
xchg
outsb
adc
lahf
insb
int
add
fisttpll
repz
nop
push
mov
lret
sub
in
fisubrs
mov
add
push
add
sahf
fs
push
mov
iret
mov
in
dec
cmp
adc
mov
loope
push
les
lret
popf
pop
ret
mov
jecxz
test
dec
inc
xor
cs
insb
add
jo
sbb
dec
fdiv
stc
in
cs
cmp
cwtl
dec
mov
jg
repnz
mov
jecxz
bnd
sub
add
inc
stos
jno
xor
pop
hlt
mov
pop
push
cli
sbb
rol
jno
ss
fiadds
mov
mov
test
inc
cmpsb
int
inc
mov
push
pop
aad
in
xor
mov
shr
jnp
test
jg
sbb
lret
aad
pop
inc
mov
sub
jmp
pusha
nop
sbb
int3
movsl
mov
in
or
aas
mov
out
pop
out
xchg
sub
mov
inc
pop
cmp
and
or
fistpll
ret
popa
pop
mov
cwtl
jb
in
inc
sbb
adc
mov
dec
insl
stos
push
in
xchg
pop
cmpsl
cmp
xchg
es
mov
in
ss
mov
mov
push
arpl
add
adc
fiaddl
xchg
cmpsl
out
repnz
call
push
push
shll
sbb
cmp
imul
je
pop
add
out
xor
xchg
xlat
out
jbe
xchg
shl
ja
aam
ja
negl
mov
fisubl
jne
push
or
xchg
call
add
mov
cli
dec
jb
mov
negb
add
sub
jle
rolb
fsts
mov
push
fwait
inc
cmc
cmp
xor
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
in
mov
mov
push
push
cmp
add
enter
out
dec
rorl
jge
imul
out
jbe
outsl
xor
dec
add
nop
inc
jne
jb
and
loope
test
rclb
mov
jp
jmp
sub
ret
sahf
or
in
pop
fdivrs
jbe
adc
xchg
push
push
jo
insl
or
pusha
stos
lahf
ljmp
mov
mov
mov
add
jo
out
dec
cmc
cmp
movsl
hlt
icebp
or
jp
sbb
addl
in
inc
jns
sub
or
cwtl
jb
cmp
jle
or
ret
out
out
inc
or
pusha
clc
xchg
nop
repz
mov
xor
lods
loopne
imul
xorl
add
sbb
sbb
pop
lds
std
dec
mov
movsl
adc
push
fsubl
call
repnz
mov
and
aaa
lods
mov
mov
movsb
cwtl
dec
push
mov
mov
icebp
ffree
or
pop
pop
fidivl
inc
insl
push
inc
or
idiv
aaa
xchg
scas
loop
or
or
add
arpl
nop
lret
mov
adc
inc
adc
push
push
push
cmpsb
cmc
daa
jp
cmpsl
push
lea
je
ror
stc
xor
call
scas
cwtl
orb
push
add
sbb
into
rcll
nop
out
pop
cmp
jae
into
sbb
sbb
arpl
nop
inc
or
jl
or
mov
xor
sub
cmp
hlt
push
in
mov
clc
ja
jae
sub
cmp
mov
xchg
hlt
add
lods
mov
test
jbe
add
subl
int3
add
insb
jp
mov
mov
je
mov
inc
popl
mov
inc
fdivrs
push
mov
ficoms
idivb
adc
xchg
and
mov
btc
xchg
xchg
mov
in
push
mov
or
sub
addr16
xchg
shrl
fimull
or
jns
and
xor
add
mov
jno
pop
dec
pushf
pop
mov
icebp
hlt
pushf
shrl
fsubrs
or
sbb
ja
push
test
mov
rorl
movsb
jno
xor
sbb
ret
pop
xor
subb
mov
push
repz
or
mov
mov
es
and
adc
fdivl
sbb
xchg
add
push
mov
icebp
enter
mov
in
sub
mov
call
aam
pop
repz
mov
jae
push
adc
adc
pusha
ss
lods
dec
movsb
pop
push
sub
aas
dec
stos
insl
nop
or
repz
adc
inc
fcmove
dec
push
mov
clc
xchg
jle
xchg
jb
push
adc
nop
pop
setne
mov
test
mov
add
mov
sub
xchg
sbb
divl
test
test
pop
les
out
mov
jb
int3
loope
in
faddl
pop
xchg
mov
cmc
in
cmp
xlat
sub
cmp
adc
nop
mov
loopne
out
push
and
or
sbb
ljmp
popa
mov
test
movswl
jnp
xor
add
xchg
or
pop
clc
ja
inc
sbb
xchg
push
xor
sub
mov
mov
push
aad
cmpsb
mov
mov
fistps
mov
cld
push
ljmp
clc
mov
dec
das
add
push
cmp
int3
loopne
xchg
cmp
aas
es
aaa
xor
mov
cmpb
jne
mov
stos
cmp
out
mov
mov
jecxz
dec
repz
xchg
push
dec
mov
jae
cli
dec
sti
stos
jnp
inc
pop
sahf
or
cmp
mov
xlat
adc
jo
inc
jmp
pop
mov
sbb
rcrl
or
out
xor
push
pop
ficompl
add
sbb
adc
jne
rorl
cmp
lock
ss
mov
mov
push
dec
pop
ja
xchg
je
mov
inc
test
shll
dec
iret
hlt
pushf
dec
mov
bound
add
mov
ljmp
out
dec
loope
add
push
jge
dec
sarb
mov
fadd
or
mov
mov
sub
cmp
jbe
xchg
daa
mov
fwait
imul
sbb
aad
arpl
dec
jl
dec
negb
jbe
shl
negl
sub
and
and
daa
gs
adc
push
mov
roll
test
inc
ret
dec
cwtl
int
add
xchg
push
jmp
dec
adcl
xchg
xor
inc
das
add
out
adc
imulb
lahf
dec
insl
cmpl
shl
and
push
xchg
xchg
sbb
push
ja
xor
push
adc
sbb
mov
jg
repnz
mov
leave
cmp
pop
sbbb
fucomp
sbb
aaa
push
inc
sarb
fs
mov
jo
push
lods
jo
cltd
das
in
xchg
rorl
pop
fdecstp
inc
jmp
out
adc
gs
loopne
inc
leave
std
and
add
or
cltd
aaa
jmp
jg
push
or
push
pusha
fsts
bound
sbb
shrb
add
ret
push
daa
shl
jne
repz
sbb
cwtl
jae
jp
hlt
mov
xchg
ret
mov
mov
xchg
cmp
fdivr
aas
sub
adc
and
out
mov
adc
fmull
and
pop
mov
cmp
das
jnp
sahf
add
in
rcrl
mov
aad
test
inc
xor
scas
icebp
incl
movl
lea
lea
pushf
pushf
pushf
movl
pushl
push
pushf
pushl
popl
pushf
pushl
pushl
pushl
ret
out
mov
lcall
inc
cs
insb
cmp
test
xchg
xchg
jle
ret
xor
ss
push
roll
sub
and
xchg
mov
jge
xchg
xchg
xchg
mov
push
andb
or
or
adc
xlat
jo
sbb
xchg
jg
repz
pop
mov
nop
xor
sub
int3
mov
idivl
mov
pop
daa
mov
pop
add
jl
test
mov
clc
jmp
sbb
out
sbb
push
inc
mov
fcoms
or
lods
test
add
push
pushl
orl
shl
sbb
sahf
ljmp
in
ds
jp
push
pop
push
sub
sbb
fs
out
rclb
add
xchg
in
mov
jne
popf
dec
dec
mov
clc
push
sub
xlat
jns
mov
fimuls
adc
btl
ficompl
mov
cmpb
dec
sub
jae
in
dec
insb
inc
mov
mov
mov
mov
pop
loope
xor
out
cld
dec
lcall
push
dec
shll
push
jp
decb
sbb
ljmp
loop
sub
dec
mov
mov
cmp
popa
dec
std
insb
pop
cltd
je
leave
adc
cmp
jl
fstpt
popf
decb
std
in
push
adc
stos
xchg
vpsllw
cmp
mov
mov
aad
xchg
push
iret
dec
sbb
ret
and
rolb
cmp
movsl
shlb
fdivs
rol
fadds
push
test
mov
jmp
xchg
lock
and
andb
mov
popa
movsb
xchg
stc
loopne
dec
or
icebp
pop
aas
lods
js
orl
es
lea
aaa
cmpsb
add
mov
jbe
stos
fcom
je
iret
or
rcl
xchg
scas
push
sub
dec
jle
mov
sbb
sub
test
lahf
add
xchg
jae
pop
into
jo
lahf
shlb
adc
arpl
cli
xchg
cmp
mov
and
cmpsb
in
xor
shll
dec
das
mov
sub
jns
cmc
pusha
sbb
insl
pop
call
out
outsb
push
out
and
dec
mov
sub
aam
inc
lahf
pop
push
sub
sbb
fcmove
jb
arpl
push
insb
fadd
inc
fsubr
jns
aad
sbb
js
mov
sub
mov
push
add
lods
mov
lock
or
imul
notb
mov
sbb
test
js
test
mov
in
jecxz
sbb
stos
ss
cmc
lods
push
ss
insb
testl
icebp
movsl
je
mov
inc
and
fs
mov
jbe
insb
sbb
lahf
mull
dec
inc
push
inc
inc
out
fptan
mov
adc
lds
es
fsubrs
test
mov
imul
pop
jmp
xchg
dec
mov
mov
sbb
or
popa
cmp
inc
scas
and
mov
frstor
out
push
cwtl
pop
xchg
and
xor
jl
call
inc
cmp
mov
xchg
cli
and
dec
sbb
ficoms
push
mov
push
outsb
cs
jl
inc
sub
mov
test
xchg
mov
push
test
mov
imul
lret
jno
cmpsl
xor
adc
aas
into
sub
push
lcall
mov
in
mov
adc
in
mov
or
repnz
aam
ret
jns
lods
xchg
lds
movsb
sub
mov
and
push
pop
push
pushf
ja
frstor
fdivrl
push
pop
dec
mov
adc
nop
push
push
inc
fldl
stos
mov
add
sbb
adc
adc
mov
sub
insl
mov
inc
and
bound
mov
lcall
scas
and
ja
mov
sub
or
adc
outsb
push
lret
arpl
xor
aad
fs
test
test
fxch
push
into
xlat
push
xchg
xchg
out
ret
xchg
insb
ficomps
adc
dec
iret
test
and
mov
test
clc
into
ret
popf
jnp
aas
outsl
mov
lahf
pushf
adc
jp
mov
scas
push
rcll
dec
movsl
imul
int3
aaa
pop
jo
xchg
sbb
pop
rcll
pop
repz
lea
dec
fwait
and
and
push
adcl
sbbl
xor
imull
jbe
jecxz
adc
outsl
pop
mov
pop
xchg
sub
scas
jmp
xor
push
inc
repz
es
and
scas
xor
adcl
pop
cs
mov
fucom
cwtl
inc
addl
sbb
or
adc
out
pop
fdivs
lods
insb
add
sub
orb
mov
cmpsb
push
repz
repnz
mov
cmp
dec
sti
pop
pop
jl
fwait
sbb
sti
mov
lds
mov
loop
ret
jmp
mov
dec
scas
in
imul
mov
xchg
lock
lods
adc
push
add
mov
inc
xor
dec
sbbl
mov
adc
sub
xor
sbb
gs
inc
arpl
lods
fs
mov
ret
idivl
rcll
or
inc
cli
mov
test
adc
mov
mov
cli
jnp
ret
mov
out
daa
jnp
loopne
mov
imul
les
fnsave
lret
gs
jmp
jp
adc
popf
jbe
js
inc
xchg
outsb
lock
jmp
outsl
push
inc
addr16
jle
adc
jp
jbe
ret
jne
imul
pop
mov
fwait
pop
jl
js
cmc
fsts
stos
movsb
ljmp
sub
jp
stos
lea
mov
mov
and
hlt
dec
sub
in
inc
pusha
and
mov
stc
popa
pop
icebp
pop
jmp
das
ret
sbbl
mov
cmpsb
xlat
sub
movsl
jno
in
sbb
push
push
mov
add
jbe
stc
mov
rcr
sub
mov
adc
hlt
out
inc
inc
les
out
scas
or
in
loopne
jle
mov
xchg
adc
cmc
and
push
dec
xor
mov
data16
jp
pcmpgtd
xlat
or
mov
xadd
mov
rol
movzbw
shrd
mov
jmp
jmp
lea
jns
sub
cmc
cmp
pushf
xor
jmp
nopl
sbbl
insb
mov
out
leave
std
adc
mov
mov
xchg
jne
dec
iret
or
push
mov
xor
mov
jmp
call
dec
faddl
xchg
mov
mov
das
adc
mov
je
and
insl
mov
cwtl
enter
rcll
xchg
and
mov
mov
les
repz
lcall
and
jg
mov
jb
dec
sbbb
and
movsl
jns
inc
or
cmp
mov
insb
add
ljmp
in
cli
test
xchg
mov
iret
aaa
push
inc
fnstsw
xchg
shlb
or
mov
mov
sbb
lea
scas
cmp
fsubl
gs
and
roll
scas
fcmovu
pop
xlat
mov
inc
pushf
in
sbb
xchg
addr16
aaa
enter
nop
dec
mov
sub
popf
pop
mov
adc
dec
sub
in
pop
stos
sub
aad
test
mov
cli
ljmp
stos
in
jne
push
add
lds
sahf
sti
std
lods
fld
fistpll
mov
addb
cwtl
sbb
push
mov
adc
push
or
in
sarl
lcall
mov
mov
push
inc
sub
jge
xor
ret
stos
mov
nop
shll
mov
addr16
mov
pop
std
fwait
sbb
js
dec
iret
iret
mov
pop
inc
jbe
cmp
jecxz
cmp
xor
adc
insl
push
pushf
jl
aad
aad
mov
movsb
in
jecxz
mov
sub
cs
pop
mov
and
pushf
mov
leave
sbb
dec
mov
sbb
js
ljmp
addr16
negb
push
imul
call
cmp
scas
loope
pushf
xchg
popf
mov
fidivs
cs
mov
inc
mov
jne
aaa
out
int3
rclb
push
and
aam
xor
sub
fsubrl
dec
clc
xor
rcrb
mov
movl
push
fdivs
xlat
pop
jg
andb
jle
insb
stc
push
push
lahf
xor
push
xchg
mov
adc
jge
lds
in
jg
pop
addr16
sub
jl
inc
sbb
sbb
arpl
fmull
mov
fldt
sbb
imul
xor
ja
xor
mov
ret
dec
or
inc
in
add
inc
add
shrb
sbb
jno
mov
pop
das
xchg
push
xor
ja
mov
sub
jp
mov
sbb
inc
daa
and
xor
loope
mov
or
repz
adc
mov
inc
das
sbb
lret
push
inc
or
mov
xor
xchg
pop
icebp
lds
sbb
pop
cmpsb
adc
adc
fdivrs
ljmp
and
jo
iret
xchg
lds
je
mov
loope
jns
cmp
testl
gs
pcmpgtb
lods
add
les
add
sub
int
fisubs
xchg
outsl
pop
pop
or
ja
and
icebp
jle
adc
push
add
add
aam
call
out
and
mov
in
pushl
pushl
popl
mov
mov
movb
pushl
ret
push
pushf
pushfw
popw
pusha
mov
pushf
clc
sub
clc
clc
cmp
xor
jmp
pushf
jmp
xor
xchg
pop
sub
push
push
inc
shrl
or
xor
arpl
mov
lahf
pushf
aaa
xor
sarl
arpl
xor
sbbl
outsl
jp
sarl
cmp
ss
xor
ret
sub
xchg
cmp
pop
mov
xchg
sub
add
scas
ds
int3
fwait
adc
cmp
out
or
ss
xchg
fadd
sub
jno
shll
adc
ja
fldcw
push
into
hlt
jo
pushf
andb
and
hlt
push
lea
jmp
pusha
pushf
lea
jne
push
pushf
jmp
and
mov
bt
pusha
test
and
pusha
cmc
cmc
cmc
add
push
movb
lea
jmp
nop
or
jnp
mov
mov
jbe
test
js
addr16
mov
pop
lds
pop
in
testl
aam
test
jno
pop
mov
push
sub
jg
jo
es
out
cmp
cli
bound
inc
cmp
add
lock
loopne
popa
movsl
add
aam
add
fidivs
jmp
cmp
mov
jnp
gs
xor
mov
xchg
mov
lret
dec
jae
mov
or
ret
xor
sahf
popa
jmp
mov
fdivs
call
fs
jb
cmc
push
movb
cmp
jmp
sub
sub
lea
cmc
sub
pusha
pushl
popl
cmc
cmp
test
cmp
pushf
push
pushf
lea
ja
not
inc
adc
ror
sub
pusha
dec
lea
add
rcr
mov
and
cmc
je
rcl
mov
cmc
repnz
push
lea
jne
call
sub
push
jnp
mov
loopne
insl
pop
sub
stc
and
xor
pop
pop
dec
jb
test
adc
mov
jmp
lods
adc
aaa
xchg
adc
imul
jno
cwtl
pop
jge
push
mov
xor
gs
pop
and
in
sbb
push
test
and
and
cmpsl
aaa
inc
aad
mov
mov
add
loopne
or
push
push
inc
jns
pushf
push
je
das
rol
std
mov
jns
push
xor
repnz
fsubrp
mov
sarb
mov
ret
lds
test
xchg
shlb
fcomi
jb
cmp
aas
mov
sti
packsswb
outsb
adc
adc
cli
dec
aaa
cmp
mov
push
repnz
xchg
aaa
add
ret
lea
add
in
xchg
aas
rorb
mov
fidivrs
jns
mov
inc
cwtl
adc
in
cmc
cmpsb
add
and
stc
aam
jbe
pusha
hlt
inc
jbe
rcll
lcall
pop
jecxz
dec
lahf
fsts
and
roll
or
loope
xlat
sarb
das
js
jecxz
mov
insb
or
cwtl
cmp
dec
cmc
mov
inc
xchg
mov
push
push
pusha
lds
push
pushl
lea
je
pushf
pusha
push
movb
adc
pushf
mov
pushf
pushf
lea
jmp
xor
dec
jns
mov
push
lods
mov
jmp
xor
gs
pushf
adc
sub
pop
sbbb
fildll
jge
jno
test
mov
add
mov
mov
and
cmpsb
push
jl
ljmp
pop
jo
les
stos
out
xor
mov
mov
or
xchg
ret
cmpsb
in
out
les
fistpll
enter
cmp
pop
pop
imul
mov
lcall
sbb
mov
fldl
fcomps
adc
lret
lods
adc
mov
jg
shll
ljmp
insb
aad
ljmp
lods
mov
mov
fcompl
pop
xchg
or
push
rcl
jne
cmp
inc
xor
xchg
add
push
loope
and
xor
mov
sbb
fs
jg
push
movsl
aas
out
outsb
das
add
pop
out
jge
lea
pop
or
xor
repnz
data16
adc
mov
inc
add
mov
in
and
pop
jmp
cmc
xor
mov
inc
test
sarb
xchg
xchg
cmp
div
fisttpl
clc
sbb
sbb
stc
sbb
lods
add
fildll
aas
aam
mov
mov
push
jg
xor
movl
push
lea
jmp
adc
data16
mov
sbb
push
push
mov
xor
xchg
adc
inc
sub
test
add
add
std
jae
jecxz
leave
aaa
clc
sbb
adc
pushf
pop
scas
js
or
icebp
push
shrb
sub
shrb
loopne
xor
xchg
xlat
add
shr
sbb
dec
sbb
fsubs
cld
mov
or
gs
fistpll
add
pop
fnsave
mov
xor
sbb
adc
dec
aaa
lret
lcall
mov
dec
inc
jns
loopne
dec
dec
cmp
sub
push
stos
adc
jne
hlt
lods
dec
xchg
lahf
pusha
jns
test
inc
inc
pop
or
mov
fistl
xchg
mov
aad
cmp
popa
lds
js
daa
dec
movsb
out
inc
inc
hlt
mov
sub
out
mov
mov
orb
jb
mov
lret
out
and
and
jne
pop
les
sbb
mov
sub
mov
movsbl
lea
shl
mov
pusha
cmc
cmpb
pushf
pusha
lea
jne
or
shl
ror
sub
call
stc
pop
jbe
sbb
popf
int
addl
push
sub
add
cmpl
jge
sbb
mov
sbb
fisubrl
cmp
cmp
or
repz
xchg
push
add
push
adc
or
inc
mov
out
push
popf
mov
adc
movsb
adc
insl
push
nop
test
adc
mov
push
or
aam
movsl
inc
jge
pusha
adc
sub
cmp
outsl
xchg
mov
movl
pushl
lea
jmp
lea
jne
bswap
mov
pusha
push
lea
jmp
movl
push
lea
jmp
in
cmpsb
je
mov
test
cmp
ljmp
xchg
outsl
lods
mov
mov
jae
dec
sbb
nop
push
sub
movsl
xor
out
push
cmp
mov
and
adc
mov
mov
xor
dec
adc
jae
popa
les
fbld
push
jg
cmp
push
or
add
cmp
adc
xor
xor
inc
das
mov
jae
stos
add
dec
jno
add
outsb
mov
in
int3
mov
and
repnz
mov
mov
out
sbb
notl
cmc
ja
adc
jl
or
jo
and
adc
into
xchg
pop
lds
scas
mov
add
out
dec
fimuls
and
xchg
daa
mov
loope
dec
andb
adc
and
xlat
sarl
push
xor
sub
mov
mov
mov
pop
xor
xchg
sub
push
and
mov
mov
pushf
bt
call
mov
inc
sub
shr
mov
call
fdivrl
pop
jae
mov
cli
cld
gs
dec
sbb
repz
sub
add
push
std
sarl
daa
add
mov
sub
xchg
adc
leave
jecxz
sub
sti
lods
rorb
js
mov
sarl
xchg
mov
dec
cmp
adc
inc
push
jne
test
iret
and
dec
scas
lods
orb
cmpb
add
and
gs
mov
les
pop
not
movzbl
movsbw
lea
movsbw
pushf
pusha
mov
pushf
pushf
lea
ja
pusha
lea
jb
jmp
add
dec
outsl
popa
fs
imul
add
mov
xchg
xchg
movsb
lahf
cs
xor
add
jge
cltd
test
repnz
stos
and
jae
cmpb
jne
inc
popa
dec
jge
in
dec
icebp
or
imul
aad
push
shrb
add
inc
shrb
es
dec
decb
and
cmpsl
jge
mov
mov
insl
mov
fists
dec
cltd
imul
push
fidivrl
or
xchg
mov
mov
pusha
and
imul
inc
jnp
dec
sub
fsubrs
sbb
jmp
xchg
cmp
testl
sti
mov
add
pop
jmp
mov
mov
es
cli
orl
out
cs
nop
jnp,pt
xor
add
mov
pop
mov
int3
dec
sub
loope
data16
into
jmp
in
adc
into
stos
jbe
jb
pop
xor
xor
lods
aaa
gs
shrb
aaa
sbb
sti
xor
mov
adc
mov
sbb
es
scas
rorl
jbe
outsl
pop
xchg
cmp
sub
mov
or
lods
lock
repnz
sahf
push
dec
jae
jne
je
add
mov
xchg
into
push
scas
aad
lcall
jo
jb
push
into
mov
mov
dec
push
jecxz
jp
or
scas
jae
xchg
mov
jecxz
add
in
push
add
sbb
mov
lods
roll
sub
cltd
xchg
dec
mov
and
sbb
mov
cmovnp
adc
incb
xchg
sahf
in
mov
imul
xor
cmp
fiadds
stc
out
testb
sbb
push
cmpsb
pop
int
shll
mov
jg
icebp
cmp
filds
dec
data16
cwtl
fistps
out
push
xor
and
sub
dec
ret
repz
mov
nop
xlat
inc
dec
xchg
sub
cmpsl
das
mov
ret
ja
inc
in
sbb
and
pop
into
cwtl
adc
jecxz
sub
lock
inc
jnp
push
sbb
sub
jmp
ficoms
cmp
pushf
lea
jb
cmc
pusha
cmpb
movb
pushf
pusha
lea
jne
mov
mov
pushf
test
bt
add
cmp
pushf
movzwl
lea
shl
shrd
mov
jmp
stos
popa
dec
jno
mov
addr16
sub
push
inc
xchg
cmp
adc
pop
call
imul
xor
movsl
xchg
std
mov
sbb
lcall
jo
sti
mov
sahf
jne
sub
outsl
sub
data16
mov
add
test
or
inc
and
add
pop
inc
pushf
pushl
movl
pushf
push
pushf
pushf
lea
jmp
cmpsb
cmc
mov
jnp
leave
arpl
cmp
std
push
and
push
adc
scas
ds
pop
shrl
jns
dec
or
xchg
sub
inc
sti
int
push
xchg
mov
adc
mov
addb
cli
aas
or
pop
jle
fucomp
and
hlt
mov
and
mov
pop
cmpsb
dec
pop
fldl
jno
lret
js
xor
enter
or
call
mov
loope
add
jne
mov
xchg
mov
jns
pop
out
das
rorb
jbe
ss
mov
psllw
int3
jne
xchg
inc
aam
lret
mov
sub
sti
test
in
cmp
add
mov
mov
rcrl
psubw
insl
lret
sub
stos
or
sbb
outsl
or
mov
fnstcw
pop
stos
push
pusha
not
push
jmp
and
outsb
sbb
repnz
sub
sahf
or
add
mov
add
jle
cmp
or
fsubrl
lds
xchg
lcall
mov
jae
jne
fs
adc
repz
pop
ret
in
or
into
xor
loope
mov
sbb
out
in
add
add
and
data16
mov
lea
test
fsubs
mov
aam
cmp
sbb
dec
xor
outsb
sbb
lcall
adc
pop
jne
int
pusha
shll
cmp
jb
stos
inc
or
push
popf
fstpt
sbb
and
inc
lds
or
testb
jecxz
pop
push
push
repz
xor
test
jp
jnp
ds
out
mov
ror
jp
jg
outsl
lock
xchg
lods
cwtl
jmp
bound
jmp
xor
sbb
sti
jbe
lea
or
je
push
fcmovne
roll
clc
popf
sahf
xchg
les
aam
mov
push
into
push
xlat
fwait
mov
lahf
mov
scas
and
cmc
gs
sbb
push
mov
aad
stc
sub
jae
push
ss
cmp
mov
ret
popf
iret
xchg
push
or
int3
mov
and
ret
mov
or
cli
addr16
push
pushf
int3
adc
adc
pop
lea
push
aad
in
repnz
mov
leave
loopne
enter
mov
mov
roll
not
adc
xchg
int
adc
or
into
xchg
mov
xchg
mov
fnstsw
out
inc
inc
outsl
and
pop
test
call
jae
mov
mov
inc
or
rolb
xor
pop
mov
xchg
jg
xchg
sub
cmp
fnstcw
mov
pop
sub
das
lds
dec
repz
in
imul
jb
js
ret
sahf
push
iret
stos
jo
and
jge
mov
xor
xchg
mov
pop
or
hlt
cwtl
lahf
mov
scas
mov
cmp
dec
mov
aas
rolb
jb
sub
bsf
mov
stc
cmp
clc
stc
and
jmp
sbb
or
mov
dec
ss
xor
jecxz
pop
mov
sub
cltd
or
inc
mov
inc
clc
mov
or
xchg
jns
push
lock
add
in
adc
pop
xchg
xchg
sub
sbb
pop
jno
notl
aas
adc
fdiv
pop
cmpsb
enter
pop
xor
scas
js
into
in
popa
popa
or
call
lods
aam
sbb
adc
hlt
imul
arpl
ror
add
xchg
cmp
sub
push
fsubrs
and
popf
mov
icebp
sub
out
jmp
repz
add
pop
stc
jae
add
jnp
pop
dec
pop
hlt
mov
adc
push
mov
dec
out
sub
ljmp
push
lret
fstpt
lods
jne
mov
pop
into
insb
movsb
repz
adc
mov
push
adc
mov
sbb
xchg
in
roll
inc
xor
cli
int
cli
daa
xchg
adc
in
test
add
mov
out
jge
cmp
outsl
out
pop
mov
enter
inc
mov
rcr
scas
cmpsb
int
add
popf
or
es
mov
sub
add
sbb
orb
jecxz
xchg
and
xchg
shrl
pop
pop
mov
sbb
dec
inc
dec
sbb
sahf
clc
shrb
inc
or
xor
mov
mov
cs
jl
cmpsb
popf
jmp
adc
cwtl
pop
scas
nop
or
dec
jl
data16
fwait
lea
dec
dec
cs
mov
mov
out
dec
and
pushf
ja
das
push
sbb
roll
xlat
data16
sub
test
rclb
movsb
ds
rolb
ds
je
rcrb
and
cmp
arpl
leave
imul
imul
sbb
sahf
adc
loope
mov
dec
in
xchg
daa
punpckhdq
mov
xor
xchg
cmp
in
add
xchg
or
ret
mov
dec
aad
aam
push
add
aad
lret
std
hlt
iret
gs
outsb
xor
cmovno
movsl
xchg
cmp
fcomps
jp
icebp
jo
push
jle
jp
enter
nop
jl
in
adc
and
cmpsl
xchg
jmp
psubsb
mov
pop
push
cmp
hlt
or
sti
mov
movb
call
cmp
lea
pushf
pushl
ret
pushf
movl
pushf
push
push
call
bsr
sub
mov
stc
test
and
bt
clc
add
pushf
pusha
mov
lea
jmp
loop
call
inc
xor
addr16
push
xchg
add
and
popa
jge
inc
out
and
aaa
dec
jp
dec
adc
rcl
push
fnsave
outsb
jg
nop
lea
add
dec
in
push
jbe
sti
fs
and
in
pusha
adc
leave
mov
test
mov
fwait
dec
les
add
cld
rcrl
lret
movsl
fcomp
pop
pop
movsb
and
and
jmp
or
xchg
fsubrs
inc
sarl
lods
mov
test
mov
lea
je
cmc
cmc
bt
stc
sub
bt
push
pusha
test
cmp
pushf
push
mov
lea
ja
clc
imul
pusha
cmc
pusha
add
pushf
pushl
lea
jmp
pusha
pushf
movl
lea
jne
jmp
call
mov
int
shl
dec
dec
push
push
movsb
lcall
ds
mov
clc
and
mov
cld
inc
dec
in
cmove
pop
xchg
add
sub
or
mov
bsr
inc
das
aad
mov
sar
shr
add
bts
not
sar
mov
cmc
or
jmp
cmp
sub
pusha
jmp
jne
sti
sbb
ljmp
lock
jo
lcall
or
mov
jbe
lock
stos
inc
push
mov
lret
jo
mov
addr16
rcl
jbe
loop
cmp
cwtl
cmp
movsb
enter
mov
jae
out
fnstcw
xor
scas
push
pop
lcall
lods
jb
jmp
xchg
gs
in
inc
adc
mov
push
decl
mov
ss
imul
data16
sbb
push
xlat
mov
lea
call
stc
sub
pushf
pusha
pusha
lea
jne
call
sarl
sbb
arpl
mov
stc
stos
sub
inc
jns
inc
and
stos
imul
xchg
jp
jne,pn
mov
nop
iret
push
mov
jbe
cmpl
pusha
cmp
mov
cltd
xor
call
in
ss
jmp
mov
mov
xchg
stos
cmp
inc
out
cwtl
push
popl
inc
inc
test
cmpsl
adc
fstp
xchg
stos
pop
ljmp
dec
xchg
mov
mov
jae
mov
mull
hlt
jne
in
scas
data16
jno
jo
imul
in
dec
fs
push
cmp
shl
jno
in
sbb
jmp
mov
xor
out
int3
xor
lock
std
pop
sbb
clc
stc
mov
roll
mov
mov
repnz
loopne
jns
cmc
ss
js
aam
into
mov
sbbl
jnp
gs
andl
xlat
mov
xor
push
inc
adc
pop
lea
pushf
call
mov
enter
aaa
data16
out
pushf
jl
adc
add
or
sbb
push
mov
xorl
popa
ret
sbb
jbe
ss
mov
aam
mov
mov
loop
cmpsb
pop
xchg
scas
outsb
push
dec
es
stos
mov
push
icebp
lods
mov
mov
mov
pop
add
stos
cmpsl
jno
inc
gs
mov
jns
or
jecxz
outsb
shll
xor
push
jp
cltd
sbb
cmp
data16
push
or
and
push
imul
cmp
push
pushf
add
cmp
out
sbb
mov
xor
fcompl
pop
cmc
imul
data16
in
lahf
jp
insb
push
stc
mov
fsubrl
lds
movsb
sbb
cltd
lock
loop
cmp
pop
push
cmp
dec
int
push
test
mov
adc
arpl
mov
in
and
push
adc
pop
and
or
sbb
out
adc
popa
out
in
lock
adc
aaa
xor
mov
mov
mov
sub
and
pop
cmp
imul
dec
push
aad
pop
adc
push
test
lret
out
std
jae
jp
push
clc
cmp
push
mov
mov
sahf
imul
add
fnop
jb
mov
or
loopne
sbb
xchg
call
pop
fsubrl
lret
cmpsl
pushf
cmpb
ja
les
ss
roll
jp
push
adc
inc
les
imul
jbe
or
mov
outsl
push
and
xchg
jno,pt
pop
dec
cmp
xchg
mov
sub
push
es
loopne
sti
rorb
and
rcr
addr16
hlt
sbbl
cli
cs
js
add
xor
mov
push
jae
repnz
jle
out
push
cmc
lret
arpl
mov
sub
por
loopne
dec
xchg
mov
mov
push
xor
fnsave
dec
aad
out
testb
cmpsl
cltd
aam
mov
push
sub
and
outsb
aas
add
ficoml
dec
mov
movsl
or
xorb
sbb
pushf
pop
les
addl
into
bound
insb
sbb
popl
data16
enter
pop
xor
inc
aam
sub
add
xchg
xchg
push
daa
test
lods
mov
xorb
and
es
decl
inc
and
pushf
pushf
pushl
ret
mov
movzbl
mov
lea
movl
jmp
lea
jae
inc
pushf
call
lods
fs
sbb
or
lods
pop
mov
fimuls
in
rclb
xlat
push
data16
in
push
push
shrl
imul
xchg
outsl
add
ss
xchg
ss
xchg
sub
mov
loope
in
iret
jl
and
scas
mov
or
mov
lahf
mov
jne
or
in
hlt
repz
jne
mov
mov
inc
cmp
mov
lods
push
cmp
mov
xor
jg
jecxz
frstor
jbe
sbb
rcr
mov
mov
push
ss
sbb
addr16
push
aad
scas
incb
test
cmc
push
fimull
cmc
test
xor
cmpsl
push
inc
hlt
dec
je
pop
add
fimuls
inc
pushf
stos
push
loopne
adc
mov
inc
test
loop
lods
adcl
repnz
sub
sub
adc
sub
jl
push
xchg
push
jecxz
pusha
jns
les
jg
daa
inc
bound
mov
movsl
inc
cmpsl
and
insw
inc
std
sub
test
movb
and
sarl
add
outsl
out
jmp
inc
xlat
ljmp
inc
sbb
sub
shrb
mov
imulb
mov
push
inc
lock
mov
push
cmp
aad
dec
rcr
jb
cs
leave
jae
push
mov
and
pushl
pusha
pushl
ret
pop
lods
popa
sbb
pushw
leave
dec
sarb
push
or
xchg
das
cmpsl
xchg
jnp
dec
bound
outsl
shrl
mov
mov
push
mov
bound
add
and
or
sbb
into
pop
fldl
cmp
jg
movsl
jne
jns
push
push
jo
fisubrs
scas
sbbl
or
pop
add
subb
je
jmp
xchg
xor
popa
sbb
push
sbb
movsb
dec
icebp
nop
cmp
jl
enter
jae,pn
icebp
cmp
xor
pushf
out
fs
adc
sbb
mov
ja
arpl
neg
sub
mov
rorb
push
mov
test
mov
movl
mov
mov
ljmp
pop
repnz
fstpt
aad
int
inc
test
mov
inc
jo
mov
jp
mov
aas
jge
push
jmp
lret
loop
in
inc
mov
sub
inc
sub
or
dec
mov
out
xor
pop
in
jmp
jge
popf
xor
jmp
sbb
push
mov
jns
lahf
xor
jecxz
test
push
lea
jae
push
pushf
pushl
movb
lea
jmp
call
mov
mov
outsl
lcall
loop
mov
xlat
jnp
dec
jb
jmp
add
cwtl
push
pop
add
std
jg
mov
mov
jp
in
andb
test
inc
push
sbb
icebp
push
dec
sub
jbe
pop
add
ficoms
add
aam
sbb
mov
pop
shr
outsb
push
ret
mov
and
push
imulb
stos
xor
mov
jns
cs
and
sub
lods
in
push
jnp
add
pushf
mov
sbb
jb
ljmp
add
insl
pop
push
inc
pop
sbb
popl
popa
aad
dec
rorl
shlb
cli
push
je
mov
push
es
in
mov
shll
push
sub
sbb
cmc
mov
subb
xor
dec
bound
repz
jmp
push
mov
lea
mov
dec
ja
sbb
jno
sbb
sub
rcll
sbb
daa
xchg
push
add
cli
outsl
push
mov
fadd
popf
lret
gs
jge
andl
lods
inc
xchg
add
add
pop
into
and
and
sbb
push
or
push
rorb
jbe
mov
stos
sahf
push
lock
add
and
jo
adc
emms
mov
cmp
jg
push
xor
adc
les
into
xor
push
clc
mov
sub
insl
mov
jmp
sbb
and
out
xchg
mov
sbb
adc
jb
xchg
cmp
movsl
pop
cmp
lds
fdivr
pop
push
test
lock
or
sti
fmulp
sub
cmp
test
aas
xor
daa
test
sbb
pusha
loop
iret
nop
cli
inc
cltd
mov
and
fwait
imul
pop
fsubs
dec
call
repnz
sbb
movsl
leave
xlat
mov
ds
xor
push
pop
adc
lods
add
and
mov
jae
shll
dec
mov
mov
mov
mov
jae
or
inc
shrb
test
out
daa
scas
rorb
add
inc
sub
mov
mov
xor
xor
push
jns
hlt
pop
dec
stos
aad
in
cmpsb
xchg
fstps
gs
sbbl
jae
fadds
dec
scas
add
rcr
sub
xchg
push
and
mov
insl
aaa
mov
fs
ja
xor
bt
clc
sub
add
bsr
add
bswap
mov
rol
xor
ror
cmc
mov
clc
repnz
jmp
jmp
icebp
gs
sbb
loop
dec
aad
xorl
pop
mov
push
mov
aam
push
enter
xchg
loope
mov
lea
ljmp
xchg
xor
pushf
int
mov
mov
fistpl
adc
mov
fcom
inc
mov
cvtdq2ps
hlt
jb
rcll
or
mov
iret
adc
inc
es
and
pusha
ret
and
pushf
lea
jae
call
insl
scas
enter
aaa
addr16
cmp
adc
push
mov
inc
xchg
ss
call
jo
adc
mov
and
shlb
dec
neg
icebp
fmul
mov
pop
popf
int3
fucomp
dec
sub
dec
jge
fiaddl
jmp
jmp
xchg
pop
or
cwtl
push
inc
lods
xchg
sbb
stos
add
xchg
rorb
leave
lret
push
mov
cmp
inc
fldl
das
cmp
popf
out
lea
je
pushf
call
pushf
adc
pusha
jmp
push
push
sub
xchg
dec
mov
add
mov
adc
cmp
and
mov
in
iret
jge
lea
add
and
inc
scas
mov
mov
dec
inc
loopne
std
pusha
jecxz
or
push
jne
or
leave
pop
faddp
jg
dec
ret
outsb
pop
sbb
orl
inc
imul
xor
gs
cmp
mov
mov
mov
mov
sbb
jns
fwait
pop
xchg
mov
sub
into
jmp
pop
jmp
adc
mov
testl
cli
int
push
jecxz
lahf
inc
push
cmp
imul
popa
pop
arpl
divb
or
push
pop
sbb
sbb
push
add
dec
hlt
les
rclb
jg
cmp
cmpsb
mov
sahf
push
imul
inc
divb
pop
mov
arpl
mull
xchg
test
xor
cwtl
popf
imul
js
and
daa
fisubs
add
orl
dec
inc
shll
inc
mov
enter
inc
push
int3
inc
dec
shll
push
iret
jns
nop
jg
scas
insl
inc
jecxz
mov
dec
jo
sub
int3
in
scas
jns
in
sub
inc
testb
negl
lret
mov
lea
call
jmp
dec
pushl
pusha
pushf
not
pushf
dec
movb
test
bt
pushf
mov
movl
test
add
cmc
stc
jmp
movw
cmp
mov
mov
push
lea
jbe
not
inc
sub
movzbl
mov
bswap
shr
mov
cmc
mov
clc
bswap
add
not
mov
bt
shr
shr
xadd
mov
rcr
lea
add
jmp
mov
sets
pusha
shr
push
add
test
rcl
mov
pushf
push
test
pushf
push
push
jmp
ret
pop
sbb
or
cmp
addb
pop
lds
enter
mov
lea
jb
adc
inc
sub
jnp
out
in
leave
jnp
movsl
push
mov
repz
cmp
jmp
les
js
or
dec
ljmp
push
sub
add
mov
sbb
lds
add
out
inc
adc
mov
push
push
stos
jge
jp
addl
jno
xor
test
repz
cmp
test
cmp
sub
movsb
xor
pop
sbb
cmp
loop
loop
cltd
inc
js
mov
sahf
add
leave
mov
mov
jno
inc
xchg
mov
xor
sub
test
pop
jo
mov
add
sbb
sahf
ljmp
in
fisttpl
jle
lahf
gs
adc
mov
clc
rol
inc
mov
xchg
lahf
pop
jl
add
in
js
mov
pop
movl
mov
inc
dec
and
or
inc
dec
iret
add
push
and
mov
movl
movw
movl
pusha
push
pushf
lea
jmp
sbb
pop
sbb
jp
or
pop
in
aam
add
subb
xor
aas
stc
mov
mov
push
mov
cmc
pop
dec
in
pushf
enter
or
mov
and
lds
mov
push
call
es
sub
sub
andl
pop
movsb
test
clc
cmp
sbb
jne
cld
mov
and
lahf
sub
adc
jecxz
cmc
btc
jmp
xchg
out
pop
sbb
lahf
int3
xchg
xchg
negb
inc
jmp
cltd
movb
jns
jp
and
stos
push
push
test
arpl
icebp
mov
xor
scas
loop
push
sub
movsb
mov
fistps
mov
mov
adc
cmp
loop
out
xor
shrb
and
rcrl
fidivrs
in
repnz
mov
scas
xchg
mov
sbb
push
mov
iret
mov
es
fst
inc
pop
jae
sub
jbe
add
adc
xor
add
adc
subb
fdivr
insb
inc
popa
push
sbb
or
dec
ror
cmp
pop
and
sub
pop
mov
scas
js
aaa
jne
mov
testb
and
shl
es
ljmp
push
lcall
pop
clc
mov
cmp
xor
push
in
jp
adc
mov
lds
push
xor
insl
test
nopl
jnp
jmp
push
cwtl
bswap
mov
push
push
pushf
lahf
lea
pusha
movl
call
into
cwtl
mov
sbb
xor
pop
and
push
stc
jne
fwait
inc
or
push
pop
inc
adc
sbb
xchg
pop
jl
xchg
rolb
and
lcall
sbb
in
lods
out
adc
add
call
aas
jns
mov
mov
das
popl
cld
jb
xchg
jbe
cwtl
lods
xchg
pop
sar
aas
gs
sarl
cmp
pop
push
hlt
pop
xchg
pop
mov
jge
sbb
sarl
lock
das
inc
inc
sub
cltd
mov
adc
pop
and
sti
jecxz
mov
add
push
call
cmp
adc
mov
lea
icebp
jmp
xchg
sub
add
ret
xchg
push
icebp
or
sahf
aas
add
into
pop
adc
jp
inc
repnz
xorl
inc
adc
outsl
fstpl
rorl
xchg
cmc
gs
pop
loop
jnp
push
ret
and
lcall
inc
sub
or
int3
dec
cmp
push
or
mov
lea
jle
je
bswap
mov
cwtl
pusha
lea
mov
bswap
jmp
pushf
mov
bt
cmpb
jmp
fs
push
sbb
push
mov
enter
scas
xchg
push
mov
push
imul
shrl
arpl
xor
pop
das
xchg
cli
outsb
jg
dec
repnz
jmp
inc
inc
call
dec
mov
or
cs
mov
in
xchg
and
mov
pmuludq
sti
test
mov
test
sub
add
leave
push
sbb
add
bound
dec
mov
jnp
es
push
push
fsincos
jle
xchg
in
cli
subb
jbe
inc
and
adc
jp
push
push
adc
sub
neg
sbb
dec
mov
add
xchg
push
inc
decb
fmull
adc
out
mov
test
push
aas
jp
push
stc
stos
je
mov
mov
mov
jmp
adc
sbb
in
sub
inc
jns
or
inc
arpl
outsb
gs
cmp
sub
mov
int3
adc
jae
mov
test
test
movsb
lahf
xchg
lock
sub
xlat
pushf
pushf
stos
pusha
pushf
lea
jmp
and
push
sbb
adc
mov
mov
stc
mov
loope
pop
inc
je
jge
mov
xchg
pop
xor
loopne
push
add
inc
data16
xchg
sub
sub
les
push
loope
jmp
pop
pop
and
push
in
hlt
or
and
and
call
testb
pusha
lods
not
movb
lea
pushl
call
xor
setnp
bts
push
ror
ror
call
jmp
jmp
jmp
cmc
inc
popa
push
sbb
stos
popa
scas
loope
cmp
mov
popf
flds
idiv
jmp
cmp
or
stos
pop
test
xchg
aad
mov
push
sub
sahf
int3
xor
insb
aam
add
out
jnp
mov
mov
sbb
sub
test
mov
test
inc
inc
hlt
mov
repnz
push
inc
cmp
and
adc
lahf
arpl
lret
insb
movb
call
mov
call
adc
cwtl
sti
loope
mov
and
mov
das
cmp
repnz
scas
outsb
xor
movsb
pushf
jg
mov
movl
and
sbb
repz
jle
mov
inc
lds
pop
jmp
mov
enter
cmp
lret
or
or
cmp
es
popa
sarb
fdivrp
loop
sbb
aad
mov
mov
aas
mov
xchg
cli
sarb
cs
push
icebp
dec
sti
cmp
iret
or
jg
pop
xchg
push
xchg
sbb
inc
xor
mov
test
push
aad
sub
icebp
dec
mov
add
int3
or
mov
inc
mov
fistl
rolb
cmpsb
dec
mov
pop
sbb
pop
mov
push
sbb
xchg
xlat
stos
aad
lret
fsubrl
hlt
shr
cwtl
jl
xchg
lock
fisttpll
inc
addb
inc
xchg
jns
paddd
mov
aad
sbb
dec
call
mov
outsb
jmp
pop
test
jp
sub
jns
js
sbb
test
sbb
jnp
add
mov
push
jl
frstor
jo
in
sbb
push
and
out
push
sarb
mov
jb
sbb
repnz
mov
sbb
movsb
mulb
jno
mov
inc
push
dec
cs
dec
dec
add
mov
aad
mov
push
add
push
xchg
rcrb
and
fisubrs
inc
add
sbb
inc
iret
dec
jo
je
jae
inc
ljmp
adc
xor
aad
or
sbb
cs
sbb
sti
shrl
inc
jl
cli
fs
xchg
clc
xchg
negb
sti
sub
push
mov
fs
xchg
in
xchg
int
cmc
repnz
mov
out
mov
lea
jne
call
cmc
pusha
cmp
jmp
lea
call
jmp
clc
test
add
pushf
call
mov
or
mov
push
lret
cmp
insl
mov
or
fbstp
shrb
test
sub
dec
sti
ret
ret
mov
xor
mov
sbb
repnz
ss
mov
xor
xadd
outsl
shrb
cmp
outsb
mov
jae
lret
and
lds
outsb
mov
inc
xor
shrb
cmp
jbe
data16
jae
bt
jmp
fistpll
inc
xor
lods
mov
ror
lret
jns
cmp
fucomp
out
aad
es
aad
xchg
or
mov
cmp
inc
mov
pop
dec
sub
int3
loope
shlb
in
and
xor
cmp
mov
in
mov
push
inc
scas
xchg
cmp
pop
mov
pusha
test
mov
aad
adc
gs
das
cmp
push
xchg
mov
jmp
call
sbb
enter
fstps
mov
inc
mov
andb
cmp
add
cmpsl
xchg
clc
pop
in
cmp
gs
sub
xor
dec
clc
in
jmp
jne
xchg
jg
mov
xor
jge
loope
dec
fnop
fdivrs
push
idivb
hlt
jo
in
rcrb
into
cmp
pop
clc
and
jge
sbb
cs
cmp
jno
pop
out
inc
adc
je,pt
jo
int
notl
or
or
mov
dec
jle
ja
nop
sub
adc
repnz
push
mov
cmc
out
pop
ret
xor
sub
fstps
pusha
jecxz
pop
cli
xchg
lock
inc
cmpsb
mov
ficompl
mov
int3
dec
jecxz
and
movb
inc
movsl
fwait
std
pop
insl
loop
test
lret
popa
cmp
push
pop
out
push
cli
addl
aam
push
sub
mov
pop
cmp
ljmp
test
jl
leave
hlt
stos
sahf
int
ljmp
int
mov
stos
ret
sahf
push
ret
pop
pop
add
ss
xchg
mov
push
xchg
or
jns
lahf
ret
imul
mov
sbb
or
fdivr
jmp
shrl
push
sbb
mov
in
jp
xchg
xchg
adc
loopne
pop
mov
xor
enter
add
inc
sbbb
ret
in
sub
sbb
cmp
mov
loopne
mov
xor
push
sub
jmp
mov
xor
imul
fcmove
xor
xor
sbb
xor
adc
dec
ud1
notb
lods
xor
adc
or
popa
mov
std
mov
mov
fcmovnu
jo,pn
xor
mov
call
ret
or
in
push
dec
sbb
insl
sbb
xchg
popf
into
and
jl
jp
fadds
test
dec
inc
xor
push
xchg
sbb
lahf
das
jle
jo
cmp
sbb
mov
dec
mov
lods
push
aam
mov
push
jo
pop
push
pop
and
and
je
pusha
sbb
ret
lret
push
pop
out
jae
or
std
pop
mov
mov
lock
mov
cld
das
notb
stos
push
roll
scas
jmp
call
pop
add
dec
sbb
into
ret
outsb
test
or
xor
cmp
das
loopne
clc
testl
sub
ss
popa
lds
push
dec
adc
enter
jae
and
aas
adc
out
not
cmp
add
in
adc
dec
push
bnd
ljmp
xchg
fucomp
les
ds
mov
pop
and
loop
mov
lahf
add
push
repnz
lods
shrb
lds
dec
or
nop
mov
jle
sbb
in
pusha
xorb
jecxz
cwtl
xor
shl
neg
cmc
mov
cmc
clc
test
cmpb
call
pusha
pushf
movl
mov
movw
mov
movb
push
pushl
ret
cmc
mov
ja
cmpsl
popa
jne
pop
inc
dec
xor
pusha
pop
cmp
mov
and
add
mov
sbb
xchg
pop
frstor
inc
pop
dec
mov
ss
dec
jbe
xchg
xchg
aaa
clc
cmp
mov
and
sbb
pop
sbb
or
cli
push
outsl
dec
xor
xchg
jge
pop
fwait
repnz
cmc
sbb
pop
stos
and
out
and
and
pop
sub
or
mov
sbb
outsb
fsubrl
or
pop
mov
or
movsl
test
inc
hlt
inc
xchg
adc
sbb
pop
sub
pop
mov
jg
push
imul
push
sarb
dec
lods
jae
jbe
dec
pusha
or
or
cmp
sub
divb
leave
in
xor
push
or
jbe
adc
insl
adc
pop
pushl
jle
cmpsb
dec
cmpsl
dec
icebp
and
subl
mov
pop
xchg
and
dec
dec
jns
push
movsl
push
xor
lods
add
xlat
add
hlt
icebp
or
lret
nop
dec
adc
dec
imul
les
push
aad
sbb
dec
sbb
adc
cmc
icebp
or
jne
pushf
dec
adc
lods
mov
fld1
cmp
ficoml
mov
or
xlat
popa
jg
mov
pop
cld
mov
add
mov
inc
ret
scas
sbb
stos
mov
mov
add
lea
mov
and
test
inc
inc
jmp
mov
ja
fstl
inc
sahf
mov
or
inc
sub
jo
call
sub
cmc
or
sub
addb
xchg
stos
movsb
hlt
and
mov
xchg
push
loope
add
sahf
movsl
add
out
fmull
adc
mov
and
pop
xor
and
inc
jecxz
sub
rclb
repz
loop
cmp
mov
push
cwtl
dec
mov
aas
pop
dec
sbb
add
push
adc
stos
sub
and
jle
inc
es
push
sbb
cmpl
repnz
pop
cmp
lret
stc
into
xor
sbb
cli
pop
std
pop
cmpsb
cmp
pop
daa
repnz
pop
clc
adc
ficomps
pop
imul
nop
sti
jg
fld
jle
call
cmp
sbb
adc
sbb
lahf
lea
cmpsb
repnz
push
int
fmuls
outsl
cmc
scas
inc
or
adc
add
dec
outsl
arpl
inc
jb
add
inc
and
cli
push
pop
inc
jmp
mov
cmpsb
inc
sbb
xlat
and
or
cmpsb
push
ja
pop
imul
mov
xor
jbe
movb
dec
push
ljmp
jae
std
mov
icebp
xchg
insl
inc
outsb
and
dec
cli
jge
dec
pushf
pop
hlt
das
push
inc
jne
pop
les
add
and
popf
cmp
dec
lods
push
jmp
jp
jb
sti
into
sub
mov
add
mov
push
pusha
call
jecxz
mov
add
daa
jns
mov
lcall
or
mov
jno
jne
sub
icebp
sahf
inc
nop
or
les
movsl
jmp
sub
mov
and
inc
inc
addr16
adc
sub
add
aam
decl
test
pushf
jmp
ret
lea
mov
and
das
dec
lods
mov
inc
add
ljmp
cs
shll
int3
leave
inc
stc
mov
mov
gs
xchg
adc
or
mov
pop
daa
pop
dec
inc
cmpsl
fstpl
push
stos
sti
rorl
sub
cmp
xchg
test
repnz
lock
sahf
std
jl
adc
rcrl
xlat
ret
mov
lret
sub
xor
mov
mov
movsb
dec
pop
sub
popf
sub
shlb
inc
push
in
inc
sbb
xor
std
push
inc
scas
xchg
inc
movsl
enter
xor
push
mov
data16
inc
ljmp
fsubl
call
cmp
jne
mov
jns
jmp
mov
arpl
std
or
xor
jecxz
pop
xchg
adc
outsl
lea
push
mov
xor
sbb
add
jecxz
push
je
mov
movsb
negb
xor
pushf
icebp
sub
pop
stos
jo
leave
mov
or
sub
pop
adc
inc
sbb
gs
and
pop
jne
add
mov
sub
mov
dec
fwait
pop
std
out
ja
jae
xchg
mov
cwtl
stos
or
repz
push
mov
js
inc
jge
sbb
adc
cltd
test
or
cmpsl
stos
mov
inc
add
ficompl
mov
into
xor
xor
mul
imul
popf
subl
dec
mov
dec
push
inc
push
dec
fnstsw
out
mov
cld
xchg
lcall
dec
aaa
xor
cmp
lds
fstpt
jmp
mov
test
mov
stc
xor
in
movsl
mov
dec
lods
push
stc
pop
jg
dec
adc
fildl
mov
cmp
dec
out
and
arpl
ja
and
xchg
cmpsl
bswap
and
pop
fsubrs
outsb
sub
mov
fcomps
jbe
or
and
mov
xchg
mov
and
jmp
imul
sbb
arpl
popa
push
cltd
addb
insl
xchg
mov
cmp
mov
jbe
mov
dec
sub
add
and
inc
push
ljmp
dec
decb
mov
fwait
xor
push
jne
and
insb
sbb
push
in
or
pop
lods
jb
mov
xchg
xor
js
movaps
inc
pop
mov
andb
pusha
in
les
sar
inc
call
mov
ret
insb
lods
sub
shlb
inc
sbb
jne
cli
out
fldl2e
nop
dec
rcrl
xor
loope
aaa
lcall
push
fcoml
add
stc
xor
and
mov
sub
pop
movsl
addb
xchg
jge
or
das
mov
add
dec
jmp
cs
ret
jl
mov
cmpsl
rolb
imul
pop
lods
or
mov
inc
sbb
sbb
adcb
test
dec
orl
out
in
mov
xchg
xor
das
scas
or
jo
mov
roll
lock
sti
xor
mov
pop
inc
push
mov
inc
in
and
clc
or
add
bt
repnz
mov
pushf
pusha
pushf
lea
jne
lea
lahf
call
add
inc
gs
outsl
fs
gs
imul
js
add
xchg
scas
inc
sbb
repz
std
fs
jmp
cmpsl
pop
inc
sub
push
ja
cmp
jbe
mov
or
xor
jecxz
pop
xor
push
outsl
cmp
cmc
xchg
sbb
mov
mov
cmp
ljmp
cmp
call
xchg
push
jl
jle
stos
sub
js
pop
mov
pop
or
dec
or
jmp
popf
push
dec
jle
xchg
ret
mov
xchg
mov
mov
sbb
leave
sub
and
pop
mov
inc
test
xchg
pop
psubusw
test
lds
or
stos
pusha
scas
in
push
add
xchg
nop
adc
insl
popa
adc
loope
jno
loopne
iret
addr16
xchg
push
outsb
test
aaa
lcall
jmp
push
dec
and
jg
in
adc
sbb
pop
pop
sbbl
gs
test
jge
mov
out
add
pop
scas
pusha
mov
ror
aas
adc
or
inc
jecxz
loop
mov
iret
aad
loop
jbe
je
sbb
adc
xchg
data16
xor
lods
stos
jmp
les
pop
or
dec
sub
mov
mov
sbb
scas
popa
jge
xchg
cmp
js
lret
es
push
sbb
dec
scas
out
pop
int
popl
sub
mov
iret
rorl
enter
jnp
jle
fiaddl
mov
pop
xchg
xlat
andl
out
ror
inc
movsb
xor
xchg
lahf
cmp
mov
movl
mov
cmc
pop
add
das
add
pop
pop
jae
adc
leave
mov
adc
int3
jnp
ljmp
and
fs
mov
fs
je
sar
shrd
add
movsbw
shl
shl
and
sub
stc
or
shr
xchg
sbb
mov
movsbw
bsr
add
clc
movsbw
bsr
bsf
add
movzbw
mov
bt
stc
test
shr
clc
clc
test
push
cmp
pusha
mov
pushl
lea
je
cmp
jmp
jmp
lea
je
stc
pushf
bt
add
push
pushf
lea
jmp
add
aad
cmp
sar
push
not
daa
mov
btc
dec
das
das
sub
rol
pushf
mov
ror
movsbw
push
daa
not
aam
push
movzbw
sbb
cmp
push
call
push
xchg
lods
inc
sbb
jb
insb
shl
mov
jb
adc
jl
rcr
dec
jo
nop
push
pop
mov
aaa
sub
xor
test
outsl
pop
jnp
insb
sbb
mov
lahf
test
sbb
jo
cld
inc
ss
ret
pop
data16
pop
jb
or
and
dec
add
pop
lock
sub
imul
lds
movmskps
bound
jo
dec
lods
testb
sub
adc
inc
sbb
lods
pushf
push
sbb
inc
push
mov
mov
push
ficomps
push
aad
cmp
shl
call
mov
call
add
mov
jno
sti
lret
leave
repz
xchg
jecxz
out
inc
fadds
fidivl
das
or
jbe
add
lahf
xchg
inc
out
xchg
bound
xor
and
adc
mov
or
dec
mov
out
inc
jmp
adc
inc
rcrb
and
jmp
and
shr
not
jmp
cwtl
push
imul
mov
dec
sbb
mov
and
in
cli
cmpsb
leave
push
pop
sbb
add
xor
mov
sahf
into
xchg
scas
add
mov
aam
jns
pop
ljmp
outsb
pusha
les
in
enter
ss
js
cmp
or
mov
imul
and
pop
cmp
mov
sbb
cs
cmp
daa
pop
enter
mov
jnp
movb
push
ja
ficomps
int3
sub
mov
sub
addb
int
xchg
ja
inc
scas
cmp
or
xor
mov
lods
and
gs
cmp
pop
loop
fsubrl
dec
mov
mov
cld
inc
mov
dec
cmpsb
in
roll
notl
mov
mov
cmpsl
outsb
div
rcl
xor
add
loope
das
inc
test
dec
cli
cmp
dec
xor
mov
loope
jmp
sbbb
inc
fmul
and
mov
data16
and
cmpsb
mov
xchg
mov
mov
or
ja
adc
movsl
stos
bound
mov
pushf
jns
xlat
jg
repnz
dec
mov
mov
pop
or
dec
mov
rol
jnp
mov
negb
fisubl
lods
daa
jge
sbb
push
fucomi
fnstsw
addl
jo
test
mov
neg
push
jnp
sbb
adc
or
dec
repz
loopne
cli
xor
push
lahf
pop
test
inc
mov
mov
and
mov
mov
stos
mov
sub
sahf
or
mov
or
inc
sub
lcall
in
pop
push
ret
and
mov
pop
adc
add
rcrb
out
fildl
pop
pminsw
pop
jae
jno
mov
cli
jbe
test
movsb
fwait
or
push
loopne
mov
dec
or
les
iret
sub
jecxz
in
bound
stos
jno
jbe
mov
cmp
inc
pop
pop
movsb
lret
cmp
cld
dec
lret
ret
mov
lea
jne
aad
push
btc
aas
xor
cmc
aas
das
shl
mov
lea
inc
add
pushf
mov
pusha
pusha
pushf
cmc
test
call
sub
mov
sbb
xchg
pop
xchg
push
mov
js
sahf
bound
lahf
out
in
dec
xlat
mov
push
xchg
adc
jecxz
cld
jb
neg
int
adc
push
mov
in
lea
push
or
enter
pop
xor
adc
jge
jecxz
xor
addb
cmp
ret
scas
adc
jo
mov
loope
cmp
cmp
mov
or
mov
jno
int3
stc
repnz
pop
jno
push
and
and
pop
mov
push
sub
xchg
jns
sbb
es
and
mov
cltd
xor
inc
imul
cmp
icebp
pop
or
or
mov
popa
int
xor
jns
divl
add
sbb
sub
out
pop
inc
pop
adc
int
cmpsl
or
xor
xchg
and
mov
leave
add
vcvtss2si
push
lret
jo
jmp
pop
or
cli
cmp
shll
mov
aad
mov
fcmovne
dec
jnp
fadd
daa
mov
shrb
push
pop
mov
repz
nop
xor
insb
lret
push
hlt
push
je
mov
add
mov
cwtl
fcomps
push
push
jae
dec
xchg
stos
xor
xchg
sub
xchg
outsb
pushl
adc
cmp
mov
cwtl
xor
cmp
cmp
push
rcll
and
add
xor
inc
mov
shrl
lock
inc
push
iret
or
jle
jg
popa
fildl
mov
nop
mov
lret
cmpsl
and
jbe
sub
jmp
or
xor
xor
out
inc
iret
push
jno
cld
cli
adc
aad
add
mov
insb
pushf
adc
fmul
popl
sbb
popf
test
in
outsb
inc
lahf
imul
into
rorb
push
mov
je
sbb
gs
jl
cltd
jb
inc
mov
add
fnstsw
cwtl
add
mov
sub
mov
inc
xchg
imull
pop
xchg
sub
xchg
stos
mov
int3
adc
rorl
lahf
push
aas
cmp
mov
xchg
xchg
cs
stc
scas
push
mov
fsubrs
add
loop
pop
adc
cmp
shll
cmc
xor
test
dec
jo
mov
data16
insl
ljmp
xor
xor
outsb
cli
mov
mov
inc
or
shll
push
push
out
xchg
push
and
pushl
pop
mov
push
loopew
cmp
xchg
rcrl
jmp
pushf
xchg
not
not
movb
movsbl
pushl
popl
call
mov
pusha
pushf
mov
setne
inc
pushf
not
mov
not
mov
push
jmp
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
mov
or
outsl
mov
xchg
andb
inc
dec
imul
lods
add
jno
and
inc
std
mov
inc
stos
inc
sarb
das
fisttps
cmpsb
push
add
sbb
dec
loope
jns
ret
or
jae
jno
and
ret
pusha
mov
inc
dec
int3
es
sub
mov
mov
jno
scas
dec
ljmp
cmp
or
sbb
cmp
popa
sbb
xchg
pop
pop
insl
outsl
add
mov
xchg
add
and
sub
dec
jmp
sarb
pop
shl
xchg
add
outsb
pusha
lods
sub
cmp
jnp
adc
pop
loope
frstor
lret
nop
lret
push
cltd
test
inc
mov
cli
jge
mov
push
imul
rcll
sub
or
rorb
nop
push
daa
jmp
aam
ja
cmp
mov
test
lret
in
mov
test
ds
movsl
fwait
dec
shll
outsl
outsl
adc
mov
cmp
jo
fisttpl
mov
iret
xor
in
or
mov
dec
aaa
insl
inc
push
mov
shll
es
adc
ret
pushf
xchg
loop
rclb
cmpsl
dec
jmp
adc
and
and
mov
push
sti
pusha
popa
lods
mov
add
aad
out
ja
loop
cmc
fs
fmul
mov
adc
and
movb
call
xchg
pusha
call
test
cmp
pushf
pushl
pushf
pusha
lea
jae
cmc
pushf
add
jmp
fmull
cmp
mov
loopne
pop
pop
or
or
fstps
dec
fstps
sbb
fcoms
pop
mov
negl
out
ret
imul
mov
repz
cld
inc
ret
jbe
jnp
call
fucomp
jns
cmp
call
inc
ret
pop
js
aas
andb
fcmovu
mov
jle
and
xorb
test
jmp
mov
lock
mov
sbb
push
inc
mov
aaa
sbb
push
and
xlat
enter
pushf
pop
outsl
push
inc
jns
mov
out
push
xchg
sub
mov
xchg
push
repnz
jno
into
les
pop
stos
fistpl
popa
hlt
mov
cwtl
inc
stos
dec
fwait
and
aaa
sbb
xor
pop
adc
fmull
sbb
push
cmp
je
imul
mov
jb
inc
rcrb
rcr
push
fsub
arpl
lcall
jb
push
xchg
aaa
ret
rolb
push
adc
push
lret
out
dec
add
sbb
frstor
lahf
ror
sub
xor
rcrb
lahf
filds
inc
gs
into
sub
loope
lea
jbe
pushf
inc
jmp
inc
xchg
mov
sbb
sarl
jle
dec
cmp
mov
gs
push
or
push
mov
ja
mov
xor
push
hlt
sbb
jle
mov
out
test
fstpl
push
dec
out
out
xor
shrb
xor
ret
cli
cmpsb
push
fwait
mov
leave
std
and
inc
mov
ficompl
add
pop
jno
adc
mov
add
xor
xor
repnz
pushf
pusha
lea
jne
movzbw
movb
cwtl
seta
lahf
pusha
mov
bswap
lea
pusha
movl
pushl
pushf
call
push
jge
xor
movsb
push
fdivr
xchg
enter
mov
xor
jecxz
jle
insb
adc
cli
sti
sub
lea
dec
rcrl
push
dec
cwtl
jbe
sbb
jne
mov
add
mov
mov
add
add
cmp
leave
enter
notb
sub
mov
cwtl
leave
mov
mov
mov
mov
out
push
daa
pop
cmp
cmp
xchg
xchg
pop
mov
xchg
call
subl
push
push
mov
insl
push
enter
push
adc
call
call
pop
sub
sbb
shrl
mov
ja
jecxz
repz
push
js
jbe
cmp
sub
pop
sahf
repnz
ljmp
jno
fildll
imul
jbe
dec
sbbb
repnz
cmp
xor
sahf
adc
lahf
and
out
loope
jp
jae
sub
inc
movsl
imul
repnz
sbb
cltd
push
dec
in
push
and
js
filds
orb
mov
faddl
testb
imul
dec
popa
les
push
out
mov
xchg
push
xor
aam
mov
pop
aaa
les
mov
dec
insb
adc
imul
lret
scas
xchg
nop
decl
push
push
xor
push
std
lods
pop
ret
fcomps
jb
cmp
subb
fwait
jbe
bound
and
jne
adc
sarb
mov
insl
push
or
mov
or
push
sbb
xchg
movsb
iret
sbb
jb
lods
inc
jae
cmp
lret
popf
ja
push
lods
xor
pop
mov
jnp
lret
sarb
nop
pop
hlt
fldenv
incl
out
or
mov
aas
adc
call
rcl
ljmp
mov
cld
mov
dec
icebp
in
and
icebp
sub
mov
dec
ja
jne
mov
in
jo
loopne
lock
mov
loope
out
mov
cwtl
mov
rorl
nop
xchg
sbb
push
negl
xor
xchg
ljmp
stc
inc
stos
into
lret
pop
decb
rorl
sbb
ror
std
sub
add
mov
inc
pushf
pusha
push
push
lea
jmp
push
mov
push
mov
pushl
pusha
lea
jmp
mov
cld
test
xchg
sub
sub
xchg
fadds
inc
or
dec
fcmovbe
or
jge
int
push
mov
js
lods
mov
jg
dec
fldl
test
dec
pop
push
js
and
mov
push
sbb
icebp
pop
inc
fdivs
sarb
rolb
push
sub
adc
mov
pop
mov
or
and
idiv
int3
iret
xor
in
data16
sbb
sahf
ret
or
and
lods
push
inc
xor
call
xor
stos
call
add
push
call
out
or
loop
outsl
sub
sti
mov
rcll
fdivr
lds
pop
pop
stc
mov
sbb
int
imul
scas
jne
insl
fadd
pop
jge
or
push
add
inc
jns
mov
fdivr
adc
sti
add
sbb
popf
movsb
aam
fdivl
je
cmp
fbld
ds
or
or
mov
mov
sub
mov
in
pop
push
dec
xchg
shll
lods
ja
push
add
nop
int3
jmp
xor
mov
jecxz
repz
xor
das
icebp
loope
sar
int
js
sub
outsl
dec
sahf
gs
insb
dec
rcrl
int
add
out
push
pop
in
cld
jmp
lea
xchg
xchg
aas
and
mov
push
adc
sub
or
mov
scas
cmc
jecxz
adc
out
push
xchg
adcl
push
sbb
jp
dec
fidivrs
inc
pop
lea
add
test
jb
jnp
sarl
xor
mov
or
sbb
daa
add
sub
inc
jns
ljmp
loopne
js
ss
enter
cld
in
in
mov
js
fnstcw
popl
inc
arpl
push
jne
add
and
push
cmp
mov
and
nop
cmc
cltd
fsub
push
add
xchg
lahf
minps
inc
mov
jmp
cwtl
push
push
mov
mov
mov
add
push
cmp
fdivr
dec
jg
sub
sbb
in
shll
sbb
shr
and
add
enter
adc
jne
mov
int
sbb
xor
ffreep
xchg
and
xchg
sbb
jbe
pop
loop
cmc
inc
decb
mov
xor
leave
pop
ret
push
movsl
lret
inc
jnp
cmpsl
pushf
aaa
scas
xor
jns
sbb
xchg
xchg
lock
sbb
add
fs
mov
call
xor
outsl
dec
jb
pop
jnp
mov
adc
vmread
or
adc
pop
mov
cmpb
push
lea
jne
sbb
call
fprem
adc
sbb
cmpsb
cmp
adc
inc
nop
lds
in
popa
incb
stc
sub
mov
pushf
mov
dec
out
in
fildll
int3
mov
pushl
xchg
lret
outsl
movl
das
and
or
push
mov
cs
repz
xchg
mov
xor
jp
add
inc
lret
xchg
mov
push
mov
mulb
es
das
sbb
sub
hlt
rorb
jg
ja
jo
cmp
dec
lcall
pop
icebp
inc
or
mov
or
addr16
leave
mov
mov
orps
or
xor
insl
mov
and
push
xor
aam
add
mov
sub
in
dec
xchg
lods
mov
mov
sarl
nop
mov
adc
pop
inc
stos
xchg
xorl
sub
pusha
pusha
pushl
popl
pushf
pushl
ret
test
add
sbb
adc
icebp
push
ret
cwtl
test
mov
lods
loope
mov
fstpt
sbb
fdivrl
dec
fisubrs
lods
pop
mov
loope
xor
cmpsl
push
inc
xchg
inc
mov
popf
xchg
adc
in
push
pop
xor
dec
and
jo
stos
cld
lock
andb
mov
mov
test
xchg
ret
outsl
mov
ljmp
push
push
xor
fidivl
fwait
jb
les
sbb
cld
test
iret
cmpsb
xchg
sub
inc
aas
outsb
jae
add
inc
and
cld
add
add
mov
add
dec
insb
cmp
pushf
mov
push
pushl
ret
jns
in
sub
fdivr
cmpl
dec
cmp
pop
test
jmp
sbb
outsb
leave
mov
pop
mov
shll
int
icebp
aas
adc
push
pop
in
or
ljmp
inc
and
clc
int
test
mov
add
notb
xchg
ds
icebp
paddusb
cs
stos
and
rcrl
out
xchg
jno
pop
addl
push
test
into
sub
or
nop
stos
sub
mov
mov
cmp
fcoml
jge
out
pop
jne
add
xor
mov
pop
mov
repz
jle
in
in
pop
cmpsb
addr16
and
xchg
push
mov
xchg
adc
push
sub
cmp
xor
sub
shr
inc
jo
sub
or
lret
scas
mov
or
pop
mov
repz
daa
enter
call
outsl
push
xor
pop
cmp
mov
test
fsubrs
inc
stos
test
fdivrs
push
js
icebp
pusha
or
insl
cmp
shrl
adc
popa
inc
sub
out
jno
aas
icebp
movsb
fistps
mov
into
cmp
jnp
imul
dec
or
mov
mov
mov
pop
cmp
mov
add
sub
mov
mov
pop
pushf
adc
inc
mov
insb
outsb
rolb
or
popa
mov
pushf
popa
add
push
enter
add
pop
xchg
into
out
in
repnz
fmull
xchg
cmp
sbb
fildll
aaa
xchg
out
xor
ss
test
jb
stc
sbb
outsb
jge
adc
ljmp
inc
push
in
test
pop
mov
or
sub
mov
mov
pop
in
lret
pop
cltd
mov
fdivs
inc
mov
lret
xor
rorl
mov
dec
mov
test
movsb
es
lds
outsl
call
cltd
xlat
sti
pop
adcb
pop
fs
ret
icebp
iret
add
sbb
or
js
lods
iret
imulb
nop
mov
push
or
push
adc
sahf
sbb
sarl
sahf
fcoms
cs
enter
adc
dec
sub
mov
iret
pop
pop
lods
outsb
or
test
enter
push
xlat
mov
push
xor
xor
fs
insb
add
sbbl
mov
test
sbb
movsb
lcall
bound
adc
cmp
ret
inc
xor
mov
repnz
les
cmp
mov
jge
nop
das
jle
jmp
arpl
sti
push
xchg
inc
cs
gs
mov
mov
cs
fdivl
scas
inc
lcall
das
pop
out
sub
mov
out
imul
movsb
inc
mov
lock
pusha
jae
fcmovu
mov
in
sbb
shrl
jg
call
jge
mov
add
mov
mov
cmpl
adc
mov
aaa
mov
lods
dec
inc
test
jbe
loopne
or
mov
jl
jmp
pusha
dec
sti
es
mov
mov
pushf
pushl
pusha
lea
jmp
pusha
push
movl
push
pushf
lea
jmp
mov
shr
rcl
sub
shl
sub
rol
neg
call
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
aas
pop
sub
mov
insl
mov
insl
jg
js
and
ss
popa
rorl
arpl
jb
fisttpl
test
sbb
pop
push
add
or
fwait
and
stos
mov
push
daa
sarb
xchg
add
pop
dec
jne
add
in
repz
jecxz
orb
add
out
addl
inc
jecxz
or
pop
jne
sub
mov
cmp
xchg
scas
mov
lock
ror
in
fs
ret
mov
cmp
and
ret
pop
ret
sti
in
pop
jno
mov
push
xchg
xchg
aad
push
mov
cld
xor
jl
inc
leave
mov
inc
lea
sti
mov
jle
inc
push
push
jle
in
test
in
push
sti
cmp
mov
and
xor
inc
and
shrl
sbb
orb
lahf
hlt
mov
cltd
adc
lret
int
dec
jo
testb
repz
dec
dec
lcall
pop
xchg
sbb
scas
xchg
pop
pop
mov
pop
in
icebp
sbb
xor
repnz
push
popf
cmpsb
xchg
push
daa
jge
dec
leave
cmp
pop
dec
push
mov
test
fdivp
dec
push
xchg
xchg
jne
stc
add
cmp
add
addr16
mov
insl
push
push
outsb
insl
pop
fs
outsb
jno
and
sub
and
xchg
call
cmc
imul
pushf
stc
cmc
cmp
add
pusha
pushf
pushf
mov
lea
jmp
pop
pusha
sub
mov
xchg
cmp
icebp
sbb
testl
xchg
mov
push
test
mov
inc
sbb
js
cmp
jne
movsl
mov
jbe
jmp
clc
mov
sbb
scas
pushl
lea
jb
test
cmpb
pusha
pushl
lea
jne
sar
test
mov
stc
test
clc
stc
add
stc
cmc
pushf
movzwl
inc
call
inc
mov
daa
sbb
cmp
jne
sbb
cmp
mov
call
jo
sub
call
ja
aas
shll
jo
inc
mov
xchg
das
mov
fidivl
jno
push
jns
jae
add
add
push
mov
push
mov
jg
xchg
insb
ss
or
leave
pop
and
das
add
leave
enter
lds
add
adc
int
mov
push
leave
leave
das
imul
loopne
sub
pop
insb
mov
sar
ror
cmc
xor
pushf
pusha
call
movw
add
pusha
pusha
pushf
pushf
lea
jmp
shlb
daa
sbb
int
pusha
cmp
add
popa
scas
out
pushf
js
mov
jbe
not
xor
inc
mov
and
mov
sahf
pusha
xchg
cld
fildl
cs
fsubl
mov
je
push
adc
out
sub
sub
popf
sahf
or
es
mov
push
adc
enter
xchg
nop
fisttpl
inc
frstor
int3
inc
ss
dec
stos
xor
jno
adc
outsl
push
and
cmpsb
sbb
mov
push
fistpll
addr16
dec
lods
dec
mulb
sbb
sahf
mov
push
sub
int3
int3
cmc
push
dec
push
and
dec
lret
std
sub
push
xor
mov
nop
or
aad
pop
in
clc
jno
push
js
xor
push
mov
jecxz
loop
arpl
in
pop
loop
mov
sbb
add
cli
dec
mov
inc
xor
lds
dec
loope
inc
inc
pop
or
fs
jne
shrd
sbb
mov
bt
bt
call
pushf
call
cmp
mov
adc
mov
push
adc
out
inc
in
icebp
or
jl
adc
loopne
inc
add
mov
mov
lds
or
cmp
mov
pop
adc
cmpsl
lea
mov
mov
mov
add
mov
das
loop
mov
pop
mov
and
aam
mov
mov
sbbb
addr16
stos
or
dec
xor
inc
push
mov
pushf
lea
jmp
movsb
and
and
mov
lret
test
mov
ffreep
fstpl
dec
pusha
xor
sbb
test
sub
stc
sti
and
xor
test
cld
loopne
push
mov
mov
cwtl
sub
jmp
and
and
ljmp
mov
sbb
cmp
lea
push
sub
add
mov
mov
out
mov
scas
pop
jmp
cmpsb
or
int3
vucomisd
mov
and
je
stc
mov
jmp
dec
mov
call
ljmp
or
mov
int3
pop
ljmp
scas
insb
shll
mov
add
mov
fnsave
cltd
adc
aad
mov
pop
scas
popa
popf
ljmp
jl
xchg
cmp
push
out
pop
or
mov
inc
cs
icebp
pop
dec
leave
fildl
das
xchg
inc
testb
cmp
inc
jb
push
inc
and
enter
and
jne
rcr
cmp
sbb
mov
movsbl
bt
xor
call
jmp
popf
add
and
mov
clc
cmp
enter
addl
hlt
xor
jg
pusha
pop
sub
inc
mov
rclb
and
push
cmc
pop
out
jp
mulb
xlat
xchg
adc
push
xchg
es
xlat
push
xor
nop
fidivrl
push
mov
cmpsb
je
fnstcw
scas
pop
mov
dec
xor
sahf
mov
adc
inc
and
xor
jmp
add
outsl
loopne
jl
sub
pop
push
jno
pop
sub
out
cli
cmp
or
aaa
sarl
mov
decb
or
dec
icebp
pushl
mov
dec
mov
repnz
adc
and
ret
stos
in
sub
pop
pop
mov
pusha
xor
sbb
dec
loopne
and
mov
ja
test
jne
test
mov
in
sub
push
out
andb
sub
xor
popf
sub
jb
add
fildll
repz
pushf
int
cmp
adc
scas
push
or
loope
sbb
push
lods
rcll
test
mov
out
imul
fisubs
jmp
xor
nop
push
pop
or
adc
mov
and
mov
iret
push
mov
fdivrs
fnsave
int
mov
outsl
mov
fildll
push
or
sbb
xchg
mov
sub
loopne
in
jne
inc
jae
mov
lds
fistps
cmp
xchg
sub
sbb
out
jle
pop
pop
lods
popl
lea
ja
push
pushf
lea
call
pushf
adc
pusha
call
mov
adc
clc
sbb
adc
sahf
gs
les
cmp
call
shll
dec
mov
inc
push
cmp
pop
int
int
lods
cld
nop
dec
stos
imul
dec
jnp
sub
jbe
daa
sbb
or
jge
int
push
mov
cmp
and
pop
into
in
jge
ljmp
dec
and
push
ja
outsb
movsl
and
rcl
fisubl
clc
pop
out
rcrl
andb
out
lea
jne
pusha
stos
pusha
movw
push
lea
jmp
add
push
add
push
dec
pushf
pushf
lea
jne
dec
mov
push
stc
test
cmp
lea
ja
pushf
mov
mov
lea
ja
jmp
movl
push
pushf
pushf
pushf
lea
jmp
jmp
mov
xor
sbb
adc
shlb
sbb
jns
daa
jnp
xor
dec
jno
leave
add
or
cmpl
mov
jae
adc
inc
inc
and
inc
es
arpl
fdivrl
std
xor
cmp
icebp
mov
and
and
or
bound
xor
mov
cli
loope
or
in
loope
inc
xor
mov
sbb
movsb
dec
jns
jmp
dec
dec
push
mov
xchg
fsts
sub
daa
int3
fwait
mov
pop
fmuls
out
inc
out
ss
mov
fisttps
add
rcrl
xor
aad
icebp
sbbl
push
sahf
push
iret
nop
mov
lds
std
shlb
pop
das
push
or
popa
adc
leave
mov
iret
dec
dec
jbe
or
xchg
out
mov
cmp
xlat
lds
out
pushf
push
mov
sti
mov
mov
fwait
sbbl
mov
push
shrl
add
sub
shll
push
mov
mov
jl
or
adc
les
lahf
xchg
inc
mov
mov
inc
out
jnp
mov
cmpb
jmp
inc
movsl
mov
sarb
dec
outsb
xchg
jp
insl
sub
in
rorl
gs
sub
dec
loopne
mov
inc
nop
pop
shll
mov
or
dec
fwait
sarl
cmp
imul
dec
xor
xchg
lret
lods
sub
idivl
xchg
or
nop
std
xor
lret
jae
cmpsl
adc
pop
scas
nop
int3
mov
sbb
adc
mov
cli
sti
pop
cli
out
jle
push
push
sbb
mov
in
sub
xor
gs
sbb
push
and
sbb
mov
jns
mov
cmp
lret
jae
addr16
xchg
add
push
fiaddl
shrb
inc
cwtl
push
fdivrl
xor
mov
jno
vpsadbw
lea
or
add
inc
jmp
xor
push
cmc
mov
and
cwtl
mov
or
pusha
lea
jae
btr
jmp
movsl
ja
push
sbb
push
xor
repz
aam
testb
mov
sub
add
movd
int
sub
sub
fimuls
mov
mov
addl
jns
mov
lods
mov
outsl
jo
int
and
mov
in
xchg
jbe
ja
shrl
cmp
stos
std
arpl
pop
dec
repnz
adc
xchg
subb
hlt
idivb
xor
push
stos
daa
rcr
sti
arpl
rolb
fistl
add
test
test
pusha
or
pusha
lea
je
pusha
jmp
pusha
movl
jmp
pop
pushf
mov
sbb
xchg
les
mov
stos
sub
sbb
hlt
inc
jns
sub
mov
inc
sahf
jecxz
mov
sbb
xor
mov
shlb
daa
ljmp
aam
sar
adc
jge
sub
push
bnd
fidivs
sub
sbb
arpl
enter
repz
mov
add
pop
bound
sarl
sbb
sub
adc
repz
outsb
xor
in
xor
negl
out
lahf
xchg
daa
lret
sbb
xor
pop
daa
fistpll
cmp
es
gs
int
push
push
xchg
lods
mov
lcall
int3
shll
rcrl
push
add
in
adc
in
ss
les
sub
test
sarl
sbbb
mov
add
outsb
adc
test
jns
sub
pop
mov
xor
movsl
mov
jecxz
ds
mov
push
adcb
fildl
push
cld
pop
xor
loope
xor
mov
fisubrs
insl
lea
in
mov
and
push
add
mov
arpl
pushf
inc
jae
jns
push
loopne
shlb
xchg
arpl
ljmp
and
and
dec
jecxz
lds
pop
out
bound
mov
in
add
je
outsl
fs
gs
imul
add
sbb
mov
jno
enter
push
sub
cmp
mov
or
mov
mov
fwait
les
mov
loopne
outsl
fistl
mov
adc
cmp
xor
test
inc
ret
cmc
jmp
data16
xchg
adc
lock
mov
mov
push
scas
cs
mov
sub
dec
dec
loop
cltd
sbb
ss
inc
out
push
icebp
mov
orl
cmp
cmp
or
push
dec
and
jge
fs
xor
sbb
lcall
stc
fcom
jo
add
inc
gs
imul
inc
add
xlat
jae
incl
jge
add
pushl
lea
jae
pushf
pusha
pushf
cmp
movb
lea
jae
test
jmp
pusha
jmp
or
call
mov
mov
sub
push
sub
test
inc
xchg
test
cmp
mov
cltd
mov
lea
decl
cmp
pop
icebp
loop
inc
lods
xchg
lret
xor
pop
sbb
call
stos
les
sbb
jl
pop
xor
iret
imull
adc
jno
or
jne
push
jecxz
mov
inc
and
and
xlat
and
ja
xor
and
mov
into
fucomip
mov
mov
sub
pop
mov
int
cmp
inc
dec
jno
hlt
clc
mov
repnz
movsb
ret
sub
popf
push
sbb
add
out
push
popa
fs
pop
notl
fs
cmp
decb
sahf
pop
cmp
xor
imul
stos
loopne
jl
mov
jb
cmpsb
mov
or
sbb
push
in
inc
stos
mov
int
int
mov
dec
xor
fimuls
cmp
sti
ja
out
movsb
mov
notb
xchg
and
mov
xchg
jo
mov
xchg
sub
repz
pop
icebp
adc
aaa
adc
mov
inc
mov
xor
je
sbb
mov
jmp
movsl
lret
cmc
fcompl
sbb
ret
xchg
testl
data16
sti
sub
dec
add
mov
stos
out
or
jno
bound
push
jne
jne
pop
dec
pusha
jl
and
ds
std
push
shrl
xchg
jmp
ss
ss
js
test
rol
mov
sarb
and
sbb
mov
sbb
inc
insl
xor
xchg
mov
jno
jo
and
iret
popa
or
mov
sub
pop
jnp,pn
dec
mov
push
push
rorl
mov
loope
sahf
scas
or
xor
int3
icebp
ds
pop
mov
pop
pop
mov
dec
out
xor
inc
icebp
push
das
movsb
lea
in
aad
clc
push
jle
mov
mov
cmc
mov
data16
mov
lret
xchg
adc
es
ss
xor
push
sub
sbb
leave
bound
sbb
mov
imul
imul
inc
fimull
pop
sar
inc
pop
pushf
bound
es
nop
pusha
icebp
les
adc
test
adc
jecxz
push
mov
mov
bound
movsb
sahf
sub
jae
pop
pop
fstpt
xchg
outsl
nop
rclb
div
jmp
je
popf
out
add
push
pop
mov
insb
sbb
and
cmp
test
xor
loopne
repz
pushf
inc
xor
mov
movsl
adc
adc
jl
in
sbb
cmp
mov
sub
push
lds
cmpsl
lcall
ficompl
test
repz
inc
cmpsb
mov
pop
cli
sub
lods
dec
loope
xor
stos
cmc
cmp
adc
fstpl
sbb
adc
and
push
imul
adc
in
or
add
mov
pop
xchg
mov
inc
ljmp
jle
insb
inc
repnz
pop
mov
jmp
jno
test
sti
ds
mov
push
dec
outsb
out
addr16
xchg
in
js
iret
aaa
mov
cmp
cwtl
test
mov
mov
lds
add
dec
sahf
and
pop
rcrl
mov
imulb
add
fcomps
mov
fnsave
push
cmp
sbb
int
push
sbb
dec
iret
lods
data16
inc
mov
fwait
jnp
dec
sub
test
cmp
jns
jecxz
shll
setb
inc
packsswb
leave
insb
sbb
out
add
mov
mov
add
xchg
jmp
sub
xchg
xor
sub
aas
cmp
push
shl
sub
push
sbb
test
add
test
pushf
das
ljmp
stos
jmp
jmp
movb
lahf
push
push
movsbw
pushl
call
mov
push
adc
lds
push
lods
jne
jg
out
sarb
je
dec
cmp
lds
cmpsb
rcll
lahf
inc
jbe
and
pop
mov
sub
push
movsb
mov
cmp
fidivrl
ret
cli
adc
inc
inc
test
aad
loope
fbld
ret
scas
out
pop
ret
xchg
dec
and
gs
push
loope
add
cmp
dec
lea
sub
mov
movsl
or
pushf
add
mov
cmc
cmp
pusha
push
call
cmp
pusha
pusha
lea
ja
not
inc
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
or
add
xorl
push
adc
mov
cmp
arpl
xchg
sbb
stos
xchg
dec
mov
xchg
push
clc
jge
repz
shll
cs
sub
pop
xor
cld
and
clc
mov
int3
pop
sbb
or
jne
pop
push
aam
xor
push
je
or
out
fbstp
or
dec
add
pop
lds
ds
das
sbb
inc
xchg
add
stos
lea
les
jmp
pusha
ljmp
sbb
fistl
add
pop
add
push
lret
sbb
xchg
sbb
aaa
inc
sub
dec
mov
das
xchg
les
or
jecxz
sbb
iret
pushl
lahf
pop
mov
lcall
nop
mov
lds
ficomps
xor
mov
or
aaa
imul
adc
push
add
xchg
fwait
out
js
add
les
and
out
adc
mov
out
lret
pop
insl
fimuls
add
aaa
lds
notb
push
mov
dec
push
scas
stos
sti
int3
stos
push
xchg
loopne
popf
or
or
not
sbb
rclb
movsl
cmp
mov
lds
xor
fists
sub
les
inc
and
pop
adc
adc
mov
inc
mov
mov
nop
out
outsl
dec
mov
shlb
jb
pop
outsl
leave
pop
addr16
ror
add
pusha
add
fwait
adc
mov
xor
cmp
popf
int
adc
mov
mov
dec
jns
or
adc
into
mov
mov
aaa
pop
lcall
out
fmull
leave
loop
inc
xchg
adc
xor
or
mov
and
sbb
test
mov
pop
mov
jbe
and
jne
cs
jecxz
and
das
dec
mov
dec
push
inc
xor
push
lea
call
pusha
mov
pusha
mov
pusha
push
lea
jmp
inc
cs
adc
mov
daa
pop
add
mov
daa
or
and
sbb
lock
mov
mov
xchg
mov
xor
sub
mov
add
xchg
stos
fwait
scas
inc
sbb
popa
xor
or
lret
aas
stos
sub
cmp
movsl
mov
jnp
ja
mov
add
and
aad
std
inc
lock
cld
dec
jg
out
cs
mov
test
rol
rcr
mov
shr
sub
lea
jmp
setg
mov
call
pushf
lea
jne
movzbw
movb
not
bswap
cwtl
call
enter
sbb
add
int3
arpl
div
iret
ret
push
into
mov
xor
leave
dec
call
inc
push
push
xchg
cmp
dec
mov
jo
push
xlat
daa
lcall
fdivl
jl
sub
push
rcll
or
std
cmp
es
call
xor
sbb
inc
stos
call
xchg
insl
adc
jbe
mov
pop
lahf
pop
ds
and
in
fs
inc
in
mov
mov
in
in
cs
lds
xor
repnz
jae
push
clc
sub
mov
movsb
addr16
inc
pop
cli
icebp
jp
xchg
out
push
outsb
sahf
fs
loop
push
outsl
sbb
scas
movsb
push
cmp
rcr
mov
pop
ljmp
mov
out
in
push
daa
cmc
jle
mov
scas
mov
std
icebp
rorb
movl
cmpsb
sbb
inc
mov
lods
mov
ret
jae
xor
mov
ja
loopne
add
jl
mov
jmp
iret
shl
mov
shl
shld
and
sar
mov
call
sbb
adc
mov
nop
or
inc
cmpsl
sub
add
mov
jl
hlt
cmpsb
xor
sti
inc
and
or
int
hlt
push
jmp
js
mov
fcomps
addr16
adc
mov
xor
and
out
cmp
in
addr16
out
mov
inc
mov
cmp
adc
jae
pusha
mov
cmpsl
mov
mov
movsl
popl
enter
pusha
lret
sbb
cmp
dec
adc
mov
insb
ljmp
jb
fcmovnu
inc
and
mov
mov
rcrb
inc
mov
je
xorl
mov
repz
jo
inc
push
pop
xor
bnd
fmul
ret
mov
cmp
sbb
mov
add
add
add
add
add
add
cmp
add
add
sub
add
push
add
outsl
cwtl
and
add
add
or
add
cmp
add
aad
cmp
add
add
sbbb
add
lret
cmp
or
add
jl
add
xchg
cmp
jns
cmp
inc
mov
add
add
xor
sets
stos
mov
mov
mov
lea
push
lea
call
push
lea
jae
test
call
repz
addr16
sbb
jp
lea
clc
test
dec
adc
or
enter
jp
xlat
dec
lock
lcall
test
and
jmp
jp
sub
jp
sbb
sbb
or
enter
mov
dec
lock
subl
adc
xchg
pop
stc
inc
cmp
xchg
les
and
and
daa
std
push
sbb
insl
add
and
fimull
adc
or
enter
sbb
lock
sub
cld
mov
adc
jae
jp
ss
nop
jne
push
stc
add
sub
jno
sub
movsb
dec
jae
add
in
jg
test
or
or
lahf
je
test
xor
mov
or
lock
mov
jle
mov
ja
ret
sub
jne
stc
test
neg
call
jae
pop
or
pop
xor
ret
sahf
pop
xor
outsl
inc
out
shr
xor
out
add
insb
mov
sbb
mov
or
sbb
xorl
cli
sahf
stos
andl
fdivrl
adc
sbb
mov
bound
inc
mov
push
dec
out
push
mov
and
mov
scas
pop
inc
mov
idivb
call
jl
lret
icebp
test
sbb
mov
test
out
cwtl
xchg
dec
lret
hlt
jl
xor
push
loopne
out
fstps
call
xor
sbb
pusha
pop
gs
sub
jae
sbb
add
aaa
pop
mov
pop
xlat
and
and
dec
out
dec
push
cmp
in
hlt
jmp
gs
fadd
sbb
inc
dec
xor
cs
insb
add
pushf
push
pushf
pusha
jmp
imul
gs
and
sbb
ret
outsl
leave
cmpsl
das
xchg
add
mov
xlat
push
pop
push
pushf
xor
loop
popa
inc
mov
lods
pop
xchg
pop
arpl
mov
jp
xchg
pop
push
push
push
cli
pop
movsb
add
xor
mov
mov
jg
mov
pop
fldcw
loopne
or
ja
les
push
rcl
cli
rorb
mov
scas
scas
push
xchg
xchg
adc
and
stos
lret
in
jnp
fidivrl
sub
push
or
jns
or
or
fstp
test
in
stos
mov
call
test
sub
mov
and
test
leave
dec
repnz
xchg
push
sarb
mov
movsl
daa
into
call
sbb
stos
rcrb
repnz
and
mov
leave
dec
pop
jns
lret
loope
dec
sub
or
js
push
leave
out
adc
sbb
scas
dec
pop
fidivrl
daa
mov
pop
cld
push
scas
icebp
fiaddl
aas
andb
push
dec
mov
jb
push
mov
xor
dec
inc
jmp
into
inc
mov
lods
mov
jle
and
push
mov
mov
xor
jae
fstps
arpl
mov
or
ljmp
ljmp
fldt
pusha
and
out
in
mov
or
mov
push
inc
xorl
incb
push
jl
sub
mov
cltd
and
sti
lods
imul
jecxz
mov
xor
or
cmp
push
ljmp
cmpsb
test
xor
hlt
enter
pop
mov
cmp
loop
es
addl
lds
pop
ret
pop
call
xchg
in
xchg
mov
push
dec
and
inc
add
test
push
repnz
fnstcw
and
sbb
or
add
loopne
push
enter
pushf
inc
mov
inc
jg
fldenv
inc
jbe
mov
pushl
mov
dec
inc
jno
and
jp
xlat
jl
insl
mov
jo
testl
sub
inc
andb
jecxz
nop
or
call
rcrl
mov
xlat
xchg
inc
and
cmp
jmp
pushf
lea
je
cmc
sub
pushf
cmp
mov
jmp
stos
push
lea
jmp
pusha
pushl
lea
call
jmp
mov
pushf
push
pusha
xchg
push
mov
mov
lea
call
mov
out
lock
pop
cld
incl
jecxz
push
dec
fildll
bound
gs
ljmp
adc
jl
or
sub
xor
sbb
mov
rclb
fisubrs
mov
loopne
cmpsb
xchg
mov
add
pop
jo
je
sub
dec
xchg
shl
insb
sahf
pop
fstps
daa
add
push
cmp
cltd
sub
stos
and
xchg
sbbb
dec
lods
and
jne
loop
push
shr
mov
cmpl
scas
inc
sbb
fstpt
xlat
ljmp
mov
adc
mov
inc
or
cmp
fcomp
pop
xlat
scas
sti
lea
shll
insl
lock
xchg
cmp
jo
fidivrl
pop
stos
sub
nop
out
inc
out
cli
mov
mov
pushf
data16
andb
out
hlt
push
adc
outsb
and
cmp
cmpsl
adc
cmc
xor
sbb
les
imull
jmp
bt
sub
jmp
mov
mov
lea
jmp
mov
jmp
mov
pushf
jmp
adc
and
and
stc
add
bt
mov
bt
cmp
pusha
add
push
test
bt
add
pusha
mov
movb
pushf
pushl
lea
jmp
xchg
movb
jmp
call
mov
push
call
mov
pushf
pushl
mov
push
mov
pushf
pushl
mov
push
pushl
mov
lea
jmp
mov
pushl
call
push
movw
call
call
xchg
pusha
pushf
movl
call
pusha
push
jmp
pusha
mov
mov
call
lea
jmp
mov
call
call
pushf
mov
push
pushl
ret
cmc
pushl
clc
add
movw
pushf
lea
jnp
mov
push
pushf
pusha
lea
jmp
stc
cmc
add
push
movb
push
lea
jmp
rol
test
btr
mov
bt
clc
test
add
push
pushf
pusha
mov
call
pushf
pushl
popl
movw
pushf
pushl
lea
jmp
call
pusha
jmp
call
mov
call
btr
cmc
xadd
mov
shr
shl
sub
push
push
movsbw
not
dec
bt
ror
movzbw
sub
neg
call
pusha
movb
movl
mov
push
jmp
pushf
jmp
jmp
pusha
mov
rep
btr
jmp
btc
shr
mov
clc
add
sbb
mov
clc
cmp
add
pushf
pushf
mov
mov
pushf
movb
lea
jmp
btr
mov
jmp
mov
pushf
mov
lea
jmp
clc
inc
movzbw
mov
bt
add
jmp
not
or
ror
mov
cmc
stc
stc
pushf
sub
movb
stc
call
call
dec
bswap
ror
rol
not
test
or
add
and
and
and
mov
cmc
add
pushl
push
pusha
call
call
mov
pushf
call
lea
je
pushf
xor
jmp
decl
movw
lea
jne
call
movl
setl
mov
pushl
clc
bts
not
bswap
stc
not
rol
ror
pusha
not
sar
and
lea
cmc
sub
sete
btc
cmp
pusha
lea
not
rol
call
shrd
sub
bsf
shl
mov
cmc
bt
pusha
pushf
xor
clc
pushf
jmp
call
mov
mov
pushf
pushf
mov
pushf
movb
pushl
mov
pushf
pushf
push
lea
jmp
cwtl
or
mov
cmc
test
sub
jmp
mov
sub
pushf
call
test
cmp
shl
pushf
stc
pusha
push
shr
jmp
mov
push
pushf
jmp
pushl
popl
mov
lea
jmp
call
cmc
mov
dec
add
pusha
add
bswap
inc
ror
movzbw
bsr
xor
jmp
call
lea
jno
pusha
pushf
mov
call
sub
add
push
pusha
not
movb
mov
push
mov
pushf
movl
movb
lea
jmp
sub
mov
shr
sar
mov
inc
sub
shl
test
mov
pushf
call
stc
and
test
call
ror
bswap
cmc
push
lea
cmc
setae
push
movsbw
cmc
push
cmc
jmp
cmc
mov
add
pusha
push
pushf
jmp
mov
pushf
push
mov
pushl
pushf
mov
pushl
push
movb
call
call
movw
jmp
movb
push
mov
push
mov
lea
jmp
jmp
pusha
pusha
push
mov
mov
push
push
jmp
call
call
pusha
push
jmp
sub
call
mov
movb
call
mov
pushf
lea
jmp
stc
cmp
cmp
add
cmp
call
lea
jle
pusha
dec
rcl
add
jle
rol
bsf
add
sar
push
adc
mov
bt
add
pushf
pushf
bt
bt
add
call
mov
call
pushf
mov
call
sub
btc
sar
das
mov
rcr
stc
and
mov
rcr
mov
clc
bt
stc
cmp
add
pushf
cmc
shld
push
mov
push
mov
call
not
pusha
mov
pushf
pusha
not
bt
sub
bt
cmc
and
push
push
push
mov
movw
pushf
popl
jmp
jmp
mov
push
mov
mov
lea
jmp
shrd
mov
neg
mov
push
push
add
mov
mov
push
pusha
lea
jmp
pushf
pushf
pushf
popl
movl
pushl
push
pushl
popl
pushf
pushf
pushf
lea
jmp
lea
jne
dec
clc
xor
mov
push
stc
and
cmc
cmp
pushl
lea
jne
ror
call
mov
mov
jmp
mov
stc
test
cmc
sub
sub
jae
clc
bt
shr
pushf
mov
pushl
pushf
popl
call
push
repz
popl
cmc
jmp
mov
pushf
pushl
pushf
mov
jmp
mov
pushf
pushl
mov
pushl
jmp
stc
not
stc
mov
bt
call
mov
pushf
lea
jmp
mov
movb
lea
jmp
stc
test
sub
pusha
bt
lea
mov
jmp
jmp
lea
dec
setp
jmp
mov
push
pushf
mov
mov
lea
jmp
pushf
mov
movb
call
pushf
popl
push
call
not
movzbw
lea
pusha
mov
pusha
call
ror
seto
stc
mov
push
bt
pusha
sub
push
pushf
push
jmp
not
clc
bt
push
clc
and
call
mov
call
mov
mov
lea
jmp
jmp
pushf
mov
movw
pushf
pushf
popl
push
pusha
pushl
popl
movb
pushf
movb
push
lea
jmp
pushf
repz
popl
push
pusha
mov
jmp
repz
popl
jmp
lea
jg
push
pushf
pushf
mov
mov
pushl
pusha
mov
jmp
bswap
pusha
mov
setnp
shl
dec
inc
add
cmc
neg
clc
xor
lea
mov
shr
pushf
call
cmc
add
jmp
mov
pushf
pushf
push
lea
jmp
aad
movzbw
or
mov
shl
add
call
pushl
popl
pushl
push
mov
movl
lea
jmp
call
pushl
or
stc
call
pushf
mov
pushf
jmp
or
mov
clc
jnp
add
pusha
lea
jmp
mov
jmp
mov
movw
jmp
btc
cwtd
rcl
mov
or
mov
cmp
jmp
mov
mov
movw
pushf
pushf
lea
jmp
pushf
popl
movb
pushf
pushl
popl
movb
lea
jmp
add
push
call
inc
cmc
sub
jmp
mov
movzbl
jmp
call
jmp
push
mov
mov
jmp
call
jmp
stc
clc
cmc
pushl
bt
call
mov
push
mov
movl
mov
pushf
lea
jmp
mov
movw
mov
pusha
lea
jmp
sub
pushf
dec
call
mov
pusha
mov
pushl
jmp
pusha
mov
pushf
lea
jmp
push
repz
popl
push
call
enter
or
leave
mov
rolb
mov
rcl
mov
sarb
shlb
mov
shrb
jg
mov
rcl
mov
rcl
mov
shl
mov
rcl
mov
shlb
mov
shrb
mov
shlb
mov
shlb
mov
shrb
sub
mov
sarb
mov
rol
mov
shlb
mov
shl
mov
shlb
sar
mov
shrb
mov
sarb
mov
rcl
mov
shrb
mov
sarb
mov
shl
mov
shrb
mov
shlb
mov
sarb
mov
shlb
mov
rol
mov
ror
mov
sarb
mov
rolb
fs
mov
shrb
mov
shrb
mov
rcrb
shlb
shrb
mov
sar
mov
sar
mov
rolb
mov
shlb
sarb
rcr
mov
sar
mov
shlb
mov
shrb
mov
rcl
mov
shrb
mov
sarb
mov
shrb
mov
sarb
mov
rcl
mov
rcl
mov
sarb
mov
shlb
mov
rorb
mov
rorb
mov
shrb
mov
rorb
mov
sar
mov
rorb
mov
rol
mov
rorb
mov
shrb
mov
rorb
mov
shr
mov
rorb
mov
shlb
mov
shlb
mov
rorb
mov
shrb
mov
rorb
mov
shrb
mov
rorb
mov
shr
mov
rorb
mov
ror
mov
rorb
mov
rcr
mov
rorb
mov
rcl
mov
rorb
mov
shl
mov
rorb
mov
shlb
mov
sarb
mov
shrb
mov
shlb
mov
shlb
mov
rorb
mov
shl
mov
shrb
jp
mov
shlb
mov
shlb
mov
sarb
mov
shlb
shrb
mov
ror
mov
shlb
mov
shlb
mov
shl
mov
sarb
mov
rclb
rolb
mov
mov
shrb
mov
shlb
scas
leave
mov
shlb
mov
shlb
mov
rorb
rcl
mov
rol
mov
rcrb
daa
mov
mov
bt
sub
pusha
cmp
bt
bt
sub
test
pushl
stc
bt
sub
mov
call
stc
pusha
sub
pusha
xor
bt
pushf
add
movb
stc
xchg
call
mov
mov
jmp
mov
push
mov
pushl
mov
call
movw
pushf
popl
push
pusha
pushl
popl
movb
pushf
pushf
pushf
lea
jmp
mov
mov
pushl
mov
lea
jmp
das
mov
cmc
call
pushl
mov
pushf
push
mov
mov
mov
pusha
pushl
push
push
mov
pushf
pushl
movb
lea
jmp
stc
pusha
add
pushf
call
bswap
bswap
lea
push
sets
pushf
push
not
mov
push
pusha
lea
cpuid
test
sub
test
pusha
pushf
pushf
cmpl
pushl
jmp
jmp
movb
mov
movb
pushf
lea
jmp
shrd
sub
or
add
cmc
xor
xor
rcr
adc
bt
sub
btc
sub
sub
shl
shld
or
rcl
movzbl
pushf
movb
mov
clc
push
pusha
call
pushf
mov
pusha
mov
movb
pushf
mov
jmp
add
add
jmp
rcl
shl
xorb
movzbw
call
btr
mov
call
call
xor
pusha
setb
mov
pusha
neg
adc
mov
push
stc
sub
cmc
movb
bt
shr
mov
lea
je
mov
jmp
jmp
jmp
mov
movzbw
pushf
call
call
cmp
rcl
bts
shl
mov
shl
movzbw
xor
mov
push
pushf
clc
add
call
xor
jmp
repz
popl
pusha
mov
pusha
movb
jmp
bswap
sub
aas
clc
rdtsc
clc
sub
jmp
mov
pushf
movb
pushf
push
lea
jmp
stc
cmc
sub
pushf
mov
call
mov
push
mov
pushf
mov
push
movb
pushf
push
mov
push
lea
jmp
xchg
cmp
jmp
das
lea
pushf
pushf
cmp
cmp
mov
pushf
lea
ja
cltd
movzbw
rcl
shld
mov
daa
dec
lea
dec
shrd
xor
sub
bsf
lea
shld
and
bsf
xor
call
pusha
mov
push
pushl
popl
pushf
lea
jmp
bsf
movzbw
not
bswap
ror
rcl
lea
adc
xor
shl
sub
xor
xor
mov
movsbl
setne
movsbl
cmc
mov
test
add
cmp
pushf
xadd
clc
mov
inc
sub
setl
add
not
bt
sub
call
mov
push
pushl
popl
mov
pushf
mov
movb
lea
jmp
xor
pusha
bt
sub
jb
sub
pushf
pushl
lea
mov
pushf
clc
sub
jmp
jmp
push
mov
pushl
popl
mov
lea
jmp
call
cmp
jmp
pushf
mov
mov
cld
jmp
mov
pusha
call
push
mov
mov
lea
jmp
pushf
popl
mov
movl
call
pushf
mov
pushf
lea
ja
pusha
mov
pusha
mov
mov
call
mov
movb
movb
lea
jmp
mov
pushf
pushl
mov
push
call
mov
mov
pushl
push
call
stc
shr
setl
mov
stc
cmp
cmp
sub
jmp
test
and
pushf
pushl
call
call
cmp
push
clc
shr
mov
push
call
mov
movb
jmp
call
sbb
movzww
jmp
bt
cmp
add
pusha
pusha
pushf
popl
push
jmp
pushl
pushf
popl
jmp
jmp
pushl
pushf
mov
pusha
mov
movb
lea
jmp
movzbw
mov
bt
ror
movzbw
mov
jmp
rcr
ror
bt
jmp
mov
call
mov
pushf
pushf
popl
jmp
movsbw
bsf
shrd
mov
pusha
sar
neg
mov
clc
test
stc
sub
pushl
push
add
je
shl
call
push
shl
pusha
push
push
pushl
mov
mov
pushf
pushf
push
pushf
popl
jmp
call
repz
popl
call
jmp
lea
mov
cmc
stc
mov
pushf
pushl
popf
pushf
push
lea
jmp
mov
push
push
lea
jne
bsr
pushf
lea
mov
pusha
cmc
call
mov
push
sub
mov
push
mov
push
mov
movb
movb
lea
jmp
mov
neg
bt
call
ror
mov
neg
cmp
bt
clc
sub
pushf
pushf
clc
mov
cmp
test
pushf
test
sub
mov
lea
pusha
push
mov
push
pushl
lea
jmp
jmp
pushl
pusha
mov
mov
pushf
call
call
movl
call
push
jmp
jmp
push
cmp
cwtl
cmp
pushf
sub
pusha
mov
mov
mov
pushf
lea
jmp
pushf
jmp
sub
cmp
clc
cmp
cbtw
movb
cmc
cwtl
call
pushf
pushf
mov
push
push
lea
jmp
and
mov
cmc
pusha
add
lea
js
push
movb
pusha
mov
pushl
mov
mov
push
movb
mov
lea
jmp
cmp
not
cmc
call
push
call
mov
jmp
sbb
mov
dec
mov
pushf
bt
bt
bt
add
cmc
pushl
sub
call
pushl
test
pushf
sub
pusha
jmp
cmc
add
push
stc
bt
shrd
lea
jle
push
movw
pusha
mov
push
push
call
lea
ja
pushf
mov
pusha
lea
jmp
pusha
repz
popl
mov
jmp
sub
btc
mov
bt
clc
add
push
pushl
movw
lea
jmp
cmp
sub
call
pushf
mov
mov
pusha
pushf
pushl
pushf
popl
jmp
call
jmp
or
mov
cmc
sub
pusha
pushf
mov
pushf
push
lea
jmp
shl
call
sub
ror
call
dec
mov
pushf
adc
movsbw
not
mov
jmp
cmc
cmc
clc
sub
jmp
call
mov
pusha
mov
pusha
mov
lea
jmp
pop
pushf
mov
pusha
push
mov
xchg
lea
pushl
std
mov
call
pushf
jmp
mov
call
add
jmp
cmp
add
movl
pushf
call
mov
movw
movl
lea
jmp
call
pushf
pushf
mov
jmp
sub
push
call
repz
call
pushf
popl
pushf
pushl
popl
pushf
movl
mov
movl
lea
jmp
lea
lea
jle
push
push
mov
pushl
pusha
lea
jmp
jmp
pushf
call
mov
push
call
pushf
popl
pushf
push
lea
ja
popl
pushf
pusha
pushf
push
lea
jmp
mov
pushf
mov
call
mov
push
jmp
lea
push
cld
lea
ja
pushf
xchg
lea
not
mov
mov
pushf
pusha
pushf
cld
pushf
rep
mov
mov
lea
shr
shr
inc
mov
std
call
pushf
push
dec
pushf
test
add
jmp
mov
mov
jmp
mov
pusha
movb
call
pushf
call
call
mov
call
xor
jmp
pusha
call
push
pushf
popl
call
add
jmp
pushl
cmp
lea
clc
clc
add
movw
mov
movw
pushl
ret
pushf
pushl
popl
mov
pushl
lea
jmp
mov
jmp
pusha
stc
shl
call
pushf
movb
mov
pushl
popl
push
movb
pushf
lea
jmp
mov
bts
bt
ror
dec
pushl
not
pusha
dec
clc
add
cmp
btc
bt
ror
movzbl
inc
sbb
mov
cmc
cmc
sub
call
mov
mov
pusha
lea
jmp
bt
sub
jmp
pusha
lahf
movsbl
pushf
mov
jmp
mov
push
movl
lea
jge
mov
call
inc
dec
sbb
bswap
sar
xor
add
bsr
rcl
call
mov
movl
pushf
push
pushf
lea
jmp
pushf
mov
pushf
call
push
mov
jmp
push
mov
jmp
jmp
clc
bt
add
pushf
jmp
call
test
or
sub
shld
cmp
bsr
movsbw
mov
bt
call
pushl
popl
pushf
pushl
lea
jmp
jmp
pusha
repz
popl
call
pushl
stc
xor
pushf
jmp
jmp
inc
or
bt
notl
shrd
sar
neg
mov
cmc
push
sub
pushf
clc
and
call
bswap
clc
pusha
add
push
test
stc
sub
pushf
lea
call
mov
pushf
pusha
call
jmp
call
movb
mov
call
call
jmp
movb
mov
pushf
movb
jmp
pushf
mov
movb
repz
popl
jmp
mov
mov
movw
call
sub
jmp
call
btr
sub
movsbw
mov
push
mov
bswap
call
pushf
pushf
mov
repz
popl
mov
call
mov
push
push
pushf
push
lea
jmp
pushf
popl
call
movb
jmp
pushl
popl
pushl
push
pushl
lea
jmp
movw
repz
popl
call
jmp
pushl
popl
mov
pushf
mov
mov
lea
jmp
pushf
repz
popl
pushf
pushf
jmp
pushf
popl
mov
call
jmp
movb
pushf
popl
pushf
pushl
pushl
popl
mov
pushf
pushf
movb
lea
jmp
pushf
mov
movw
mov
pushf
mov
push
mov
pushl
movb
pushf
lea
jmp
pusha
mov
pushf
pusha
mov
pushf
mov
pushf
push
lea
jmp
pushl
popf
pushl
pushf
lea
jmp
sbb
pop
or
bts
rcr
mov
pop
cmp
pop
not
pop
or
btc
std
shld
pop
stc
pusha
mov
test
pushl
popf
movw
pusha
pushl
ret
pushf
inc
mov
call
push
pusha
mov
movb
jmp
mov
call
aas
rcl
movzbw
mov
sar
shr
shl
aam
mov
dec
adc
or
mov
jmp
mov
repz
popl
push
mov
push
call
sar
or
and
mov
rcr
mov
pushf
sub
call
pushf
mov
pushl
push
mov
lea
jne
bts
mov
test
and
test
clc
cmp
call
mov
mov
push
mov
push
pushf
mov
call
call
mov
pushl
push
pushl
lea
jmp
jmp
push
mov
jmp
push
pushf
popl
call
push
pusha
mov
pusha
lea
jmp
lea
jle
pusha
pushl
popl
pushl
lea
jmp
mov
pusha
pusha
repz
popl
pushl
mov
mov
push
jmp
jmp
push
stc
cbtw
pushl
call
rol
or
and
shl
adc
btr
mov
jmp
mov
push
lea
jmp
bt
add
cmp
add
call
div
push
pusha
pushf
mov
pushf
mov
call
aaa
lahf
mov
btc
and
mov
test
add
pusha
pusha
call
lea
jne
inc
neg
shld
shrd
xorb
pushf
movzbw
mov
movb
movl
pusha
mov
lea
jmp
jmp
bsr
bts
bswap
movzbl
jmp
dec
mov
jnp
cmp
cmc
test
not
pushf
pusha
call
mov
mov
mov
pushl
pushf
lea
jmp
pushf
mov
mov
mov
mov
push
lea
jmp
movw
mov
mov
push
pushf
push
pushf
popl
push
jmp
call
pushf
mov
mov
movl
call
dec
mov
rcl
shl
sete
not
mov
pushf
sub
cmp
cmp
pushf
pusha
shr
jmp
mov
pusha
call
pusha
cmp
pushf
sub
push
cmc
jmp
shl
mov
cmc
cmp
cmp
add
bt
pushf
mov
jmp
call
mov
bswap
xadd
add
not
bswap
lea
sub
mov
rol
bswap
add
lea
stc
sub
btc
stc
ror
mov
dec
mov
setg
clc
add
dec
movzbl
pop
bswap
inc
mov
cmp
sub
pushf
clc
lea
call
pushl
call
pushf
pusha
bt
xor
mov
dec
bt
pushl
add
cmp
cmp
mov
bt
pushf
call
mov
mov
not
lea
not
mov
mov
pusha
pushf
divl
call
test
sub
clc
pushf
mov
clc
bt
test
add
pushl
pushl
lea
jmp
mov
mov
movb
mov
movw
lea
jmp
jmp
clc
mov
lea
jmp
pushl
popl
pushf
pushl
movb
lea
jmp
jmp
mov
pushf
mov
pushf
lea
jmp
pusha
mov
movb
pushl
mov
call
pushl
pushl
popl
pushf
lea
jmp
movw
inc
push
add
jg
clc
cmp
xor
pusha
call
push
movw
pushl
popl
mov
movb
push
lea
jmp
mov
pusha
pushl
pushf
lea
jmp
jmp
mov
pusha
mov
movb
mov
lea
jmp
sets
lea
not
ror
call
pushf
pushl
popl
pushl
movw
pushf
lea
jmp
pushl
jmp
cmc
shl
movb
movb
mov
jmp
pusha
pushl
popl
pushf
pushf
push
pushf
lea
jmp
pushf
pusha
jmp
test
bswap
lea
mov
pushf
pushf
mov
pusha
mov
add
push
pushf
mov
pushf
pushf
pushf
mov
lea
jmp
neg
mov
pushf
pushl
pusha
add
jno
sub
bt
ja
add
pusha
mov
pushf
popl
mov
call
mov
jmp
and
shl
bsf
aas
mov
clc
shl
mov
pushf
sub
mov
pushf
clc
push
mul
push
pushl
mov
push
jmp
jmp
mov
push
pushf
jmp
movb
mov
pushl
push
mov
movb
pusha
jmp
push
mov
push
mov
movb
push
pusha
mov
lea
jmp
pushf
mov
pusha
pushf
lea
jmp
pushf
call
mov
inc
jmp
pusha
pushl
popl
mov
lea
jmp
jmp
pushf
pusha
pushf
popl
call
mov
pushf
push
movw
push
lea
jmp
repz
popl
call
call
jmp
pushf
mov
jmp
movb
lea
jbe
push
mov
mov
pushf
lea
jmp
cwtl
pushf
stc
call
pushl
mov
pushl
pushl
ret
cmp
add
mov
call
jmp
ror
btr
shl
aam
mov
sar
and
dec
not
mov
clc
pusha
clc
stc
add
pushf
push
mov
push
push
lea
jmp
pushf
pushl
popl
mov
lea
jmp
pushf
lea
jne
add
xorb
movsbw
not
pop
pushf
pusha
pusha
movb
lea
jmp
call
jmp
std
pushl
popf
pusha
pushf
lea
jmp
sub
movzbl
test
call
xor
shr
mov
rcl
pop
xadd
adc
shl
sub
pop
movzbw
pop
bsr
shld
add
aaa
pop
bt
pop
adc
jmp
jmp
bt
mov
bt
bt
sub
push
add
pushf
pushf
popl
pushl
call
pushl
mov
call
jmp
push
mov
pushl
push
lea
jmp
jmp
mov
push
mov
clc
rcr
ror
movsbw
xchg
cmc
rol
xchg
rcr
btc
mov
btr
mov
stc
lea
jl
rol
pushf
xchg
rcl
pusha
mov
rcr
push
rol
xchg
pusha
push
pushl
popl
ror
movsbl
bswap
mov
movl
lea
rol
clc
btc
mov
stc
not
bswap
call
movzbl
shl
mov
test
neg
rcl
sar
mov
call
pushf
popl
jmp
pushl
popl
pushf
mov
lea
jmp
jmp
pusha
not
clc
pushf
jmp
add
cmp
clc
pushf
or
push
pushl
pushf
jmp
mov
pusha
push
mov
jmp
and
neg
test
neg
mov
or
ja
mov
pushf
jmp
movb
pusha
lea
jne
clc
call
pushf
call
not
mov
push
call
mov
pusha
pushf
call
add
add
add
mov
cmp
pop
add
add
add
pop
das
add
loopne
add
mov
add
clc
cli
pop
add
sti
pop
add
sti
pop
add
pop
add
pop
add
pop
add
sti
pop
add
cld
pop
add
pop
add
pop
add
cld
pop
add
cld
pop
add
pop
add
add
pop
add
std
pop
add
std
pop
add
incb
add
pop
add
pop
add
incb
add
incb
add
incb
add
incl
add
pop
add
incl
add
incl
add
add
add
or
xchg
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
or
jns
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
fwait
add
add
add
add
add
add
add
or
imul
add
add
or
cmp
or
pop
push
or
mov
or
movsb
push
or
mov
push
or
or
or
inc
pop
or
jo
or
nop
pop
or
roll
or
clc
pop
or
sub
or
pop
or
add
or
add
or
add
or
test
or
fmuls
or
or
or
inc
or
add
or
cwtl
or
add
or
add
or
add
or
add
or
js
or
or
adc
add
or
add
or
add
or
add
or
or
js
or
test
or
loopne
or
sbb
or
dec
push
or
push
or
sbb
or
dec
invd
add
adc
add
adc
add
adc
add
adc
add
or
loop
or
sub
or
jno
or
nop
adc
add
adc
add
or
mov
or
enter
clc
adc
add
or
test
or
rclb
add
adc
add
adc
or
mov
or
add
or
cmp
or
imul
add
pop
or
push
pop
or
adcb
add
pop
or
clc
pop
or
push
or
rcrl
add
sbb
add
or
mov
or
mov
sbb
add
sbb
add
or
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
js
or
test
or
or
sbb
or
lds
or
sbb
or
push
push
or
sbbl
add
push
or
or
or
push
pop
or
mov
or
leave
pop
or
clc
pop
or
xor
or
lock
add
and
add
or
mov
and
add
and
add
or
test
or
jmp
and
add
and
add
or
cwtl
and
add
or
xchg
or
call
or
cmp
or
pusha
or
xchg
or
enter
clc
or
sub
or
jno
or
popf
daa
or
enter
clc
daa
or
dec
sub
add
or
insb
sub
add
sub
add
or
or
or
iret
sub
add
sub
add
sub
or
or
or
insb
or
xlat
or
add
or
ss
or
out
das
or
and
or
dec
xor
add
or
mov
or
sbb
or
pop
xor
add
xor
add
xor
add
xor
add
or
imul
add
xor
add
xor
add
xor
add
or
mov
xor
add
xor
add
xor
or
mov
or
stc
xor
or
pop
or
mov
or
mov
or
cmp
or
xorb
add
aaa
or
sbb
or
ja
or
sarb
add
cmp
add
or
mov
or
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
or
xchg
push
and
cwtl
push
and
pushf
push
and
mov
push
and
lods
push
and
